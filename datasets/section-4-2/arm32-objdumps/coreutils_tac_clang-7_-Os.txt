
../repos/coreutils/src/tac:     file format elf32-littlearm


Disassembly of section .init:

0001126c <.init>:
   1126c:	push	{r3, lr}
   11270:	bl	1162c <__mempcpy_chk@plt+0x4c>
   11274:	pop	{r3, pc}

Disassembly of section .plt:

00011278 <pthread_mutex_unlock@plt-0x14>:
   11278:	push	{lr}		; (str lr, [sp, #-4]!)
   1127c:	ldr	lr, [pc, #4]	; 11288 <pthread_mutex_unlock@plt-0x4>
   11280:	add	lr, pc, lr
   11284:	ldr	pc, [lr, #8]!
   11288:	andeq	r2, r2, r8, ror sp

0001128c <pthread_mutex_unlock@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #139264	; 0x22000
   11294:	ldr	pc, [ip, #3448]!	; 0xd78

00011298 <fdopen@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #139264	; 0x22000
   112a0:	ldr	pc, [ip, #3440]!	; 0xd70

000112a4 <calloc@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #139264	; 0x22000
   112ac:	ldr	pc, [ip, #3432]!	; 0xd68

000112b0 <fputs_unlocked@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #139264	; 0x22000
   112b8:	ldr	pc, [ip, #3424]!	; 0xd60

000112bc <wctype@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #139264	; 0x22000
   112c4:	ldr	pc, [ip, #3416]!	; 0xd58

000112c8 <raise@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #139264	; 0x22000
   112d0:	ldr	pc, [ip, #3408]!	; 0xd50

000112d4 <wcrtomb@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #139264	; 0x22000
   112dc:	ldr	pc, [ip, #3400]!	; 0xd48

000112e0 <iswctype@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #139264	; 0x22000
   112e8:	ldr	pc, [ip, #3392]!	; 0xd40

000112ec <strcmp@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #139264	; 0x22000
   112f4:	ldr	pc, [ip, #3384]!	; 0xd38

000112f8 <read@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #139264	; 0x22000
   11300:	ldr	pc, [ip, #3376]!	; 0xd30

00011304 <pthread_mutex_destroy@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #139264	; 0x22000
   1130c:	ldr	pc, [ip, #3368]!	; 0xd28

00011310 <fflush@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #139264	; 0x22000
   11318:	ldr	pc, [ip, #3360]!	; 0xd20

0001131c <memmove@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #139264	; 0x22000
   11324:	ldr	pc, [ip, #3352]!	; 0xd18

00011328 <free@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #139264	; 0x22000
   11330:	ldr	pc, [ip, #3344]!	; 0xd10

00011334 <pthread_mutex_lock@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #139264	; 0x22000
   1133c:	ldr	pc, [ip, #3336]!	; 0xd08

00011340 <_exit@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #139264	; 0x22000
   11348:	ldr	pc, [ip, #3328]!	; 0xd00

0001134c <memcpy@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #139264	; 0x22000
   11354:	ldr	pc, [ip, #3320]!	; 0xcf8

00011358 <tolower@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #139264	; 0x22000
   11360:	ldr	pc, [ip, #3312]!	; 0xcf0

00011364 <pthread_mutex_init@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #139264	; 0x22000
   1136c:	ldr	pc, [ip, #3304]!	; 0xce8

00011370 <towlower@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #139264	; 0x22000
   11378:	ldr	pc, [ip, #3296]!	; 0xce0

0001137c <mbsinit@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #139264	; 0x22000
   11384:	ldr	pc, [ip, #3288]!	; 0xcd8

00011388 <ftruncate64@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #139264	; 0x22000
   11390:	ldr	pc, [ip, #3280]!	; 0xcd0

00011394 <fwrite_unlocked@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #139264	; 0x22000
   1139c:	ldr	pc, [ip, #3272]!	; 0xcc8

000113a0 <memcmp@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #139264	; 0x22000
   113a8:	ldr	pc, [ip, #3264]!	; 0xcc0

000113ac <dcgettext@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #139264	; 0x22000
   113b4:	ldr	pc, [ip, #3256]!	; 0xcb8

000113b8 <unlink@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #139264	; 0x22000
   113c0:	ldr	pc, [ip, #3248]!	; 0xcb0

000113c4 <realloc@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #139264	; 0x22000
   113cc:	ldr	pc, [ip, #3240]!	; 0xca8

000113d0 <textdomain@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #139264	; 0x22000
   113d8:	ldr	pc, [ip, #3232]!	; 0xca0

000113dc <fflush_unlocked@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #139264	; 0x22000
   113e4:	ldr	pc, [ip, #3224]!	; 0xc98

000113e8 <iswprint@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #139264	; 0x22000
   113f0:	ldr	pc, [ip, #3216]!	; 0xc90

000113f4 <mkostemp64@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #139264	; 0x22000
   113fc:	ldr	pc, [ip, #3208]!	; 0xc88

00011400 <lseek64@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #139264	; 0x22000
   11408:	ldr	pc, [ip, #3200]!	; 0xc80

0001140c <__ctype_get_mb_cur_max@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #139264	; 0x22000
   11414:	ldr	pc, [ip, #3192]!	; 0xc78

00011418 <__fpending@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #139264	; 0x22000
   11420:	ldr	pc, [ip, #3184]!	; 0xc70

00011424 <ferror_unlocked@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #139264	; 0x22000
   1142c:	ldr	pc, [ip, #3176]!	; 0xc68

00011430 <mbrtowc@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #139264	; 0x22000
   11438:	ldr	pc, [ip, #3168]!	; 0xc60

0001143c <error@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #139264	; 0x22000
   11444:	ldr	pc, [ip, #3160]!	; 0xc58

00011448 <open64@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #139264	; 0x22000
   11450:	ldr	pc, [ip, #3152]!	; 0xc50

00011454 <getenv@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #139264	; 0x22000
   1145c:	ldr	pc, [ip, #3144]!	; 0xc48

00011460 <mkstemp64@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #139264	; 0x22000
   11468:	ldr	pc, [ip, #3136]!	; 0xc40

0001146c <malloc@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #139264	; 0x22000
   11474:	ldr	pc, [ip, #3128]!	; 0xc38

00011478 <__libc_start_main@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #139264	; 0x22000
   11480:	ldr	pc, [ip, #3120]!	; 0xc30

00011484 <__freading@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #139264	; 0x22000
   1148c:	ldr	pc, [ip, #3112]!	; 0xc28

00011490 <__gmon_start__@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #139264	; 0x22000
   11498:	ldr	pc, [ip, #3104]!	; 0xc20

0001149c <getopt_long@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #139264	; 0x22000
   114a4:	ldr	pc, [ip, #3096]!	; 0xc18

000114a8 <__ctype_b_loc@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #139264	; 0x22000
   114b0:	ldr	pc, [ip, #3088]!	; 0xc10

000114b4 <exit@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #139264	; 0x22000
   114bc:	ldr	pc, [ip, #3080]!	; 0xc08

000114c0 <strlen@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #139264	; 0x22000
   114c8:	ldr	pc, [ip, #3072]!	; 0xc00

000114cc <__errno_location@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #139264	; 0x22000
   114d4:	ldr	pc, [ip, #3064]!	; 0xbf8

000114d8 <iswalnum@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #139264	; 0x22000
   114e0:	ldr	pc, [ip, #3056]!	; 0xbf0

000114e4 <__cxa_atexit@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #139264	; 0x22000
   114ec:	ldr	pc, [ip, #3048]!	; 0xbe8

000114f0 <memset@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #139264	; 0x22000
   114f8:	ldr	pc, [ip, #3040]!	; 0xbe0

000114fc <btowc@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #139264	; 0x22000
   11504:	ldr	pc, [ip, #3032]!	; 0xbd8

00011508 <__printf_chk@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #139264	; 0x22000
   11510:	ldr	pc, [ip, #3024]!	; 0xbd0

00011514 <fileno@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #139264	; 0x22000
   1151c:	ldr	pc, [ip, #3016]!	; 0xbc8

00011520 <__fprintf_chk@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #139264	; 0x22000
   11528:	ldr	pc, [ip, #3008]!	; 0xbc0

0001152c <fclose@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #139264	; 0x22000
   11534:	ldr	pc, [ip, #3000]!	; 0xbb8

00011538 <fseeko64@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #139264	; 0x22000
   11540:	ldr	pc, [ip, #2992]!	; 0xbb0

00011544 <fcntl64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #139264	; 0x22000
   1154c:	ldr	pc, [ip, #2984]!	; 0xba8

00011550 <setlocale@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #139264	; 0x22000
   11558:	ldr	pc, [ip, #2976]!	; 0xba0

0001155c <toupper@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #139264	; 0x22000
   11564:	ldr	pc, [ip, #2968]!	; 0xb98

00011568 <strrchr@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #139264	; 0x22000
   11570:	ldr	pc, [ip, #2960]!	; 0xb90

00011574 <nl_langinfo@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #139264	; 0x22000
   1157c:	ldr	pc, [ip, #2952]!	; 0xb88

00011580 <clearerr_unlocked@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #139264	; 0x22000
   11588:	ldr	pc, [ip, #2944]!	; 0xb80

0001158c <bindtextdomain@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #139264	; 0x22000
   11594:	ldr	pc, [ip, #2936]!	; 0xb78

00011598 <isatty@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #139264	; 0x22000
   115a0:	ldr	pc, [ip, #2928]!	; 0xb70

000115a4 <towupper@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #139264	; 0x22000
   115ac:	ldr	pc, [ip, #2920]!	; 0xb68

000115b0 <fputs@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #139264	; 0x22000
   115b8:	ldr	pc, [ip, #2912]!	; 0xb60

000115bc <strncmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #139264	; 0x22000
   115c4:	ldr	pc, [ip, #2904]!	; 0xb58

000115c8 <abort@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #139264	; 0x22000
   115d0:	ldr	pc, [ip, #2896]!	; 0xb50

000115d4 <close@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #139264	; 0x22000
   115dc:	ldr	pc, [ip, #2888]!	; 0xb48

000115e0 <__mempcpy_chk@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #139264	; 0x22000
   115e8:	ldr	pc, [ip, #2880]!	; 0xb40

Disassembly of section .text:

000115f0 <.text>:
   115f0:	mov	fp, #0
   115f4:	mov	lr, #0
   115f8:	pop	{r1}		; (ldr r1, [sp], #4)
   115fc:	mov	r2, sp
   11600:	push	{r2}		; (str r2, [sp, #-4]!)
   11604:	push	{r0}		; (str r0, [sp, #-4]!)
   11608:	ldr	ip, [pc, #16]	; 11620 <__mempcpy_chk@plt+0x40>
   1160c:	push	{ip}		; (str ip, [sp, #-4]!)
   11610:	ldr	r0, [pc, #12]	; 11624 <__mempcpy_chk@plt+0x44>
   11614:	ldr	r3, [pc, #12]	; 11628 <__mempcpy_chk@plt+0x48>
   11618:	bl	11478 <__libc_start_main@plt>
   1161c:	bl	115c8 <abort@plt>
   11620:	andeq	r2, r2, r8, asr #11
   11624:	andeq	r1, r1, r8, asr r9
   11628:	andeq	r2, r2, r8, ror #10
   1162c:	ldr	r3, [pc, #20]	; 11648 <__mempcpy_chk@plt+0x68>
   11630:	ldr	r2, [pc, #20]	; 1164c <__mempcpy_chk@plt+0x6c>
   11634:	add	r3, pc, r3
   11638:	ldr	r2, [r3, r2]
   1163c:	cmp	r2, #0
   11640:	bxeq	lr
   11644:	b	11490 <__gmon_start__@plt>
   11648:	andeq	r2, r2, r4, asr #19
   1164c:	andeq	r0, r0, ip, lsr #2
   11650:	ldr	r0, [pc, #24]	; 11670 <__mempcpy_chk@plt+0x90>
   11654:	ldr	r3, [pc, #24]	; 11674 <__mempcpy_chk@plt+0x94>
   11658:	cmp	r3, r0
   1165c:	bxeq	lr
   11660:	ldr	r3, [pc, #16]	; 11678 <__mempcpy_chk@plt+0x98>
   11664:	cmp	r3, #0
   11668:	bxeq	lr
   1166c:	bx	r3
   11670:	andeq	r4, r3, r0, lsl #3
   11674:	andeq	r4, r3, r0, lsl #3
   11678:	andeq	r0, r0, r0
   1167c:	ldr	r0, [pc, #36]	; 116a8 <__mempcpy_chk@plt+0xc8>
   11680:	ldr	r1, [pc, #36]	; 116ac <__mempcpy_chk@plt+0xcc>
   11684:	sub	r1, r1, r0
   11688:	asr	r1, r1, #2
   1168c:	add	r1, r1, r1, lsr #31
   11690:	asrs	r1, r1, #1
   11694:	bxeq	lr
   11698:	ldr	r3, [pc, #16]	; 116b0 <__mempcpy_chk@plt+0xd0>
   1169c:	cmp	r3, #0
   116a0:	bxeq	lr
   116a4:	bx	r3
   116a8:	andeq	r4, r3, r0, lsl #3
   116ac:	andeq	r4, r3, r0, lsl #3
   116b0:	andeq	r0, r0, r0
   116b4:	push	{r4, lr}
   116b8:	ldr	r4, [pc, #24]	; 116d8 <__mempcpy_chk@plt+0xf8>
   116bc:	ldrb	r3, [r4]
   116c0:	cmp	r3, #0
   116c4:	popne	{r4, pc}
   116c8:	bl	11650 <__mempcpy_chk@plt+0x70>
   116cc:	mov	r3, #1
   116d0:	strb	r3, [r4]
   116d4:	pop	{r4, pc}
   116d8:	muleq	r3, ip, r1
   116dc:	b	1167c <__mempcpy_chk@plt+0x9c>
   116e0:	push	{fp, lr}
   116e4:	mov	fp, sp
   116e8:	sub	sp, sp, #56	; 0x38
   116ec:	mov	r8, r0
   116f0:	cmp	r0, #0
   116f4:	bne	11918 <__mempcpy_chk@plt+0x338>
   116f8:	movw	r1, #9755	; 0x261b
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	movt	r1, #2
   11708:	bl	113ac <dcgettext@plt>
   1170c:	mov	r1, r0
   11710:	movw	r0, #25344	; 0x6300
   11714:	movt	r0, #3
   11718:	ldr	r2, [r0]
   1171c:	mov	r0, #1
   11720:	bl	11508 <__printf_chk@plt>
   11724:	movw	r1, #9788	; 0x263c
   11728:	mov	r0, #0
   1172c:	mov	r2, #5
   11730:	movt	r1, #2
   11734:	bl	113ac <dcgettext@plt>
   11738:	movw	r9, #16788	; 0x4194
   1173c:	movt	r9, #3
   11740:	ldr	r1, [r9]
   11744:	bl	112b0 <fputs_unlocked@plt>
   11748:	movw	r1, #10264	; 0x2818
   1174c:	mov	r0, #0
   11750:	mov	r2, #5
   11754:	movt	r1, #2
   11758:	bl	113ac <dcgettext@plt>
   1175c:	ldr	r1, [r9]
   11760:	bl	112b0 <fputs_unlocked@plt>
   11764:	movw	r1, #10320	; 0x2850
   11768:	mov	r0, #0
   1176c:	mov	r2, #5
   11770:	movt	r1, #2
   11774:	bl	113ac <dcgettext@plt>
   11778:	ldr	r1, [r9]
   1177c:	bl	112b0 <fputs_unlocked@plt>
   11780:	movw	r1, #9842	; 0x2672
   11784:	mov	r0, #0
   11788:	mov	r2, #5
   1178c:	movt	r1, #2
   11790:	bl	113ac <dcgettext@plt>
   11794:	ldr	r1, [r9]
   11798:	bl	112b0 <fputs_unlocked@plt>
   1179c:	movw	r1, #10064	; 0x2750
   117a0:	mov	r0, #0
   117a4:	mov	r2, #5
   117a8:	movt	r1, #2
   117ac:	bl	113ac <dcgettext@plt>
   117b0:	ldr	r1, [r9]
   117b4:	bl	112b0 <fputs_unlocked@plt>
   117b8:	movw	r1, #10109	; 0x277d
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #2
   117c8:	bl	113ac <dcgettext@plt>
   117cc:	ldr	r1, [r9]
   117d0:	bl	112b0 <fputs_unlocked@plt>
   117d4:	movw	r0, #11120	; 0x2b70
   117d8:	mov	r6, sp
   117dc:	movt	r0, #2
   117e0:	mov	r1, r6
   117e4:	ldm	r0!, {r2, r3, r4, r5}
   117e8:	stmia	r1!, {r2, r3, r4, r5}
   117ec:	ldm	r0!, {r2, r3, r4, r5, r7}
   117f0:	stmia	r1!, {r2, r3, r4, r5, r7}
   117f4:	ldm	r0, {r2, r3, r4, r5, r7}
   117f8:	stm	r1, {r2, r3, r4, r5, r7}
   117fc:	movw	r1, #10395	; 0x289b
   11800:	movw	r5, #10163	; 0x27b3
   11804:	movt	r1, #2
   11808:	movt	r5, #2
   1180c:	mov	r0, r5
   11810:	bl	112ec <strcmp@plt>
   11814:	cmp	r0, #0
   11818:	ldrne	r1, [r6, #8]!
   1181c:	cmpne	r1, #0
   11820:	bne	1180c <__mempcpy_chk@plt+0x22c>
   11824:	ldr	r6, [r6, #4]
   11828:	movw	r1, #10490	; 0x28fa
   1182c:	mov	r0, #0
   11830:	mov	r2, #5
   11834:	movt	r1, #2
   11838:	bl	113ac <dcgettext@plt>
   1183c:	movw	r2, #10196	; 0x27d4
   11840:	movw	r3, #10513	; 0x2911
   11844:	mov	r1, r0
   11848:	mov	r0, #1
   1184c:	movt	r2, #2
   11850:	movt	r3, #2
   11854:	bl	11508 <__printf_chk@plt>
   11858:	cmp	r6, #0
   1185c:	mov	r0, #5
   11860:	mov	r1, #0
   11864:	moveq	r6, r5
   11868:	bl	11550 <setlocale@plt>
   1186c:	cmp	r0, #0
   11870:	beq	118a8 <__mempcpy_chk@plt+0x2c8>
   11874:	movw	r1, #10553	; 0x2939
   11878:	mov	r2, #3
   1187c:	movt	r1, #2
   11880:	bl	115bc <strncmp@plt>
   11884:	cmp	r0, #0
   11888:	beq	118a8 <__mempcpy_chk@plt+0x2c8>
   1188c:	movw	r1, #10557	; 0x293d
   11890:	mov	r0, #0
   11894:	mov	r2, #5
   11898:	movt	r1, #2
   1189c:	bl	113ac <dcgettext@plt>
   118a0:	ldr	r1, [r9]
   118a4:	bl	112b0 <fputs_unlocked@plt>
   118a8:	movw	r1, #10628	; 0x2984
   118ac:	mov	r0, #0
   118b0:	mov	r2, #5
   118b4:	movt	r1, #2
   118b8:	bl	113ac <dcgettext@plt>
   118bc:	movw	r2, #10513	; 0x2911
   118c0:	mov	r1, r0
   118c4:	mov	r0, #1
   118c8:	mov	r3, r5
   118cc:	movt	r2, #2
   118d0:	bl	11508 <__printf_chk@plt>
   118d4:	movw	r1, #10655	; 0x299f
   118d8:	mov	r0, #0
   118dc:	mov	r2, #5
   118e0:	movt	r1, #2
   118e4:	bl	113ac <dcgettext@plt>
   118e8:	movw	r3, #10705	; 0x29d1
   118ec:	mov	r1, r0
   118f0:	movw	r0, #10423	; 0x28b7
   118f4:	cmp	r6, r5
   118f8:	mov	r2, r6
   118fc:	movt	r0, #2
   11900:	movt	r3, #2
   11904:	moveq	r3, r0
   11908:	mov	r0, #1
   1190c:	bl	11508 <__printf_chk@plt>
   11910:	mov	r0, r8
   11914:	bl	114b4 <exit@plt>
   11918:	movw	r0, #16784	; 0x4190
   1191c:	movw	r1, #9716	; 0x25f4
   11920:	mov	r2, #5
   11924:	movt	r0, #3
   11928:	movt	r1, #2
   1192c:	ldr	r5, [r0]
   11930:	mov	r0, #0
   11934:	bl	113ac <dcgettext@plt>
   11938:	mov	r2, r0
   1193c:	movw	r0, #25344	; 0x6300
   11940:	mov	r1, #1
   11944:	movt	r0, #3
   11948:	ldr	r3, [r0]
   1194c:	mov	r0, r5
   11950:	bl	11520 <__fprintf_chk@plt>
   11954:	b	11910 <__mempcpy_chk@plt+0x330>
   11958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1195c:	add	fp, sp, #28
   11960:	sub	sp, sp, #36	; 0x24
   11964:	mov	r4, r0
   11968:	ldr	r0, [r1]
   1196c:	mov	r9, r1
   11970:	bl	12b50 <__mempcpy_chk@plt+0x1570>
   11974:	movw	r1, #10705	; 0x29d1
   11978:	mov	r0, #6
   1197c:	movt	r1, #2
   11980:	bl	11550 <setlocale@plt>
   11984:	movw	r6, #10200	; 0x27d8
   11988:	movw	r1, #10167	; 0x27b7
   1198c:	movt	r6, #2
   11990:	movt	r1, #2
   11994:	mov	r0, r6
   11998:	bl	1158c <bindtextdomain@plt>
   1199c:	mov	r0, r6
   119a0:	bl	113d0 <textdomain@plt>
   119a4:	movw	r0, #10428	; 0x28bc
   119a8:	movt	r0, #1
   119ac:	bl	225cc <__mempcpy_chk@plt+0x10fec>
   119b0:	movw	r1, #16800	; 0x41a0
   119b4:	movw	r0, #10704	; 0x29d0
   119b8:	movw	r5, #16808	; 0x41a8
   119bc:	movw	r6, #10191	; 0x27cf
   119c0:	movw	r7, #11024	; 0x2b10
   119c4:	mov	r8, #0
   119c8:	movt	r1, #3
   119cc:	movt	r0, #2
   119d0:	movt	r5, #3
   119d4:	movt	r6, #2
   119d8:	movt	r7, #2
   119dc:	str	r0, [r1]
   119e0:	movw	r1, #16804	; 0x41a4
   119e4:	mov	r0, #1
   119e8:	movt	r1, #3
   119ec:	strb	r0, [r5]
   119f0:	mov	sl, r1
   119f4:	str	r0, [r1]
   119f8:	b	11a3c <__mempcpy_chk@plt+0x45c>
   119fc:	cmp	r0, #115	; 0x73
   11a00:	beq	11a14 <__mempcpy_chk@plt+0x434>
   11a04:	cmp	r0, #114	; 0x72
   11a08:	bne	11a30 <__mempcpy_chk@plt+0x450>
   11a0c:	str	r8, [sl]
   11a10:	b	11a3c <__mempcpy_chk@plt+0x45c>
   11a14:	movw	r0, #16792	; 0x4198
   11a18:	movw	r1, #16800	; 0x41a0
   11a1c:	movt	r0, #3
   11a20:	movt	r1, #3
   11a24:	ldr	r0, [r0]
   11a28:	str	r0, [r1]
   11a2c:	b	11a3c <__mempcpy_chk@plt+0x45c>
   11a30:	cmp	r0, #98	; 0x62
   11a34:	bne	12174 <__mempcpy_chk@plt+0xb94>
   11a38:	strb	r8, [r5]
   11a3c:	mov	r0, r4
   11a40:	mov	r1, r9
   11a44:	mov	r2, r6
   11a48:	mov	r3, r7
   11a4c:	str	r8, [sp]
   11a50:	bl	1149c <getopt_long@plt>
   11a54:	cmp	r0, #97	; 0x61
   11a58:	bgt	119fc <__mempcpy_chk@plt+0x41c>
   11a5c:	cmn	r0, #1
   11a60:	bne	12108 <__mempcpy_chk@plt+0xb28>
   11a64:	movw	r8, #16800	; 0x41a0
   11a68:	ldr	r1, [sl]
   11a6c:	movt	r8, #3
   11a70:	ldr	r6, [r8]
   11a74:	cmp	r1, #0
   11a78:	ldrb	r0, [r6]
   11a7c:	beq	11a94 <__mempcpy_chk@plt+0x4b4>
   11a80:	cmp	r0, #0
   11a84:	beq	11ae8 <__mempcpy_chk@plt+0x508>
   11a88:	mov	r0, r6
   11a8c:	bl	114c0 <strlen@plt>
   11a90:	b	11aec <__mempcpy_chk@plt+0x50c>
   11a94:	cmp	r0, #0
   11a98:	beq	1217c <__mempcpy_chk@plt+0xb9c>
   11a9c:	movw	r7, #16812	; 0x41ac
   11aa0:	movw	r1, #16844	; 0x41cc
   11aa4:	mov	r0, #0
   11aa8:	movt	r7, #3
   11aac:	movt	r1, #3
   11ab0:	str	r0, [r7]
   11ab4:	str	r0, [r7, #4]
   11ab8:	str	r1, [r7, #16]
   11abc:	str	r0, [r7, #20]
   11ac0:	mov	r0, r6
   11ac4:	bl	114c0 <strlen@plt>
   11ac8:	mov	r1, r0
   11acc:	mov	r0, r6
   11ad0:	mov	r2, r7
   11ad4:	bl	14690 <__mempcpy_chk@plt+0x30b0>
   11ad8:	cmp	r0, #0
   11adc:	bne	121a0 <__mempcpy_chk@plt+0xbc0>
   11ae0:	ldr	r0, [sl]
   11ae4:	b	11afc <__mempcpy_chk@plt+0x51c>
   11ae8:	mov	r0, #1
   11aec:	movw	r1, #17100	; 0x42cc
   11af0:	str	r0, [sl]
   11af4:	movt	r1, #3
   11af8:	str	r0, [r1]
   11afc:	movw	r2, #17104	; 0x42d0
   11b00:	mov	r1, #8192	; 0x2000
   11b04:	cmp	r0, #4096	; 0x1000
   11b08:	movt	r2, #3
   11b0c:	str	r1, [r2]
   11b10:	bcc	11b40 <__mempcpy_chk@plt+0x560>
   11b14:	mov	r2, #8192	; 0x2000
   11b18:	cmn	r2, #1
   11b1c:	ble	120f8 <__mempcpy_chk@plt+0xb18>
   11b20:	lsl	r1, r2, #1
   11b24:	bic	r2, r2, #-2147483647	; 0x80000001
   11b28:	cmp	r0, r2
   11b2c:	mov	r2, r1
   11b30:	bcs	11b18 <__mempcpy_chk@plt+0x538>
   11b34:	movw	r2, #17104	; 0x42d0
   11b38:	movt	r2, #3
   11b3c:	str	r1, [r2]
   11b40:	orr	r2, r1, #1
   11b44:	movw	r3, #17108	; 0x42d4
   11b48:	add	r2, r2, r0
   11b4c:	movt	r3, #3
   11b50:	lsl	r0, r2, #1
   11b54:	cmp	r1, r2
   11b58:	cmpcc	r2, r0
   11b5c:	str	r0, [r3]
   11b60:	bcc	11b68 <__mempcpy_chk@plt+0x588>
   11b64:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   11b68:	mov	r7, r4
   11b6c:	bl	21738 <__mempcpy_chk@plt+0x10158>
   11b70:	ldr	r5, [sl]
   11b74:	movw	r4, #17112	; 0x42d8
   11b78:	mov	r6, r0
   11b7c:	mov	sl, #1
   11b80:	movt	r4, #3
   11b84:	str	r0, [r4]
   11b88:	mov	r0, #1
   11b8c:	cmp	r5, #0
   11b90:	beq	11ba8 <__mempcpy_chk@plt+0x5c8>
   11b94:	ldr	r1, [r8]
   11b98:	add	r2, r5, #1
   11b9c:	mov	r0, r6
   11ba0:	bl	1134c <memcpy@plt>
   11ba4:	mov	r0, r5
   11ba8:	add	r0, r6, r0
   11bac:	movw	r1, #11016	; 0x2b08
   11bb0:	str	r0, [r4]
   11bb4:	movw	r0, #16776	; 0x4188
   11bb8:	movt	r1, #2
   11bbc:	movt	r0, #3
   11bc0:	ldr	r0, [r0]
   11bc4:	cmp	r0, r7
   11bc8:	addlt	r1, r9, r0, lsl #2
   11bcc:	ldr	r8, [r1]
   11bd0:	str	r1, [sp, #24]
   11bd4:	cmp	r8, #0
   11bd8:	beq	1207c <__mempcpy_chk@plt+0xa9c>
   11bdc:	movw	r6, #17120	; 0x42e0
   11be0:	movw	r7, #17124	; 0x42e4
   11be4:	mov	r0, #0
   11be8:	mov	sl, #1
   11bec:	movt	r6, #3
   11bf0:	movt	r7, #3
   11bf4:	b	11c28 <__mempcpy_chk@plt+0x648>
   11bf8:	cmp	r4, #0
   11bfc:	blt	11c20 <__mempcpy_chk@plt+0x640>
   11c00:	mov	r0, r7
   11c04:	bl	11514 <fileno@plt>
   11c08:	ldr	r1, [sp, #16]
   11c0c:	mov	r2, r5
   11c10:	mov	r3, r4
   11c14:	bl	12288 <__mempcpy_chk@plt+0xca8>
   11c18:	mov	r7, r0
   11c1c:	b	11f74 <__mempcpy_chk@plt+0x994>
   11c20:	mov	r7, #0
   11c24:	b	11f74 <__mempcpy_chk@plt+0x994>
   11c28:	movw	r1, #11264	; 0x2c00
   11c2c:	str	r0, [sp, #32]
   11c30:	mov	r0, r8
   11c34:	movt	r1, #2
   11c38:	bl	112ec <strcmp@plt>
   11c3c:	mov	r4, r0
   11c40:	cmp	r0, #0
   11c44:	beq	11c68 <__mempcpy_chk@plt+0x688>
   11c48:	mov	r0, r8
   11c4c:	mov	r1, #0
   11c50:	bl	11448 <open64@plt>
   11c54:	cmn	r0, #1
   11c58:	ble	11d68 <__mempcpy_chk@plt+0x788>
   11c5c:	mov	r9, r0
   11c60:	str	r4, [sp, #28]
   11c64:	b	11c98 <__mempcpy_chk@plt+0x6b8>
   11c68:	movw	r1, #17116	; 0x42dc
   11c6c:	mov	r0, #1
   11c70:	mov	r2, #5
   11c74:	str	r4, [sp, #28]
   11c78:	mov	r9, #0
   11c7c:	movt	r1, #3
   11c80:	strb	r0, [r1]
   11c84:	movw	r1, #10742	; 0x29f6
   11c88:	mov	r0, #0
   11c8c:	movt	r1, #2
   11c90:	bl	113ac <dcgettext@plt>
   11c94:	mov	r8, r0
   11c98:	mov	r0, #2
   11c9c:	mov	r2, #0
   11ca0:	mov	r3, #0
   11ca4:	str	r0, [sp]
   11ca8:	mov	r0, r9
   11cac:	bl	11400 <lseek64@plt>
   11cb0:	cmp	r1, #0
   11cb4:	blt	11cd0 <__mempcpy_chk@plt+0x6f0>
   11cb8:	mov	r4, r0
   11cbc:	mov	r0, r9
   11cc0:	mov	r5, r1
   11cc4:	bl	11598 <isatty@plt>
   11cc8:	cmp	r0, #0
   11ccc:	beq	11e80 <__mempcpy_chk@plt+0x8a0>
   11cd0:	ldr	r0, [r6]
   11cd4:	cmp	r0, #0
   11cd8:	beq	11d9c <__mempcpy_chk@plt+0x7bc>
   11cdc:	ldr	r0, [r7]
   11ce0:	bl	11580 <clearerr_unlocked@plt>
   11ce4:	ldr	r0, [r7]
   11ce8:	mov	r1, #0
   11cec:	mov	r2, #0
   11cf0:	mov	r3, #0
   11cf4:	str	r1, [sp]
   11cf8:	bl	12aac <__mempcpy_chk@plt+0x14cc>
   11cfc:	cmp	r0, #0
   11d00:	blt	11d20 <__mempcpy_chk@plt+0x740>
   11d04:	ldr	r0, [r7]
   11d08:	bl	11514 <fileno@plt>
   11d0c:	mov	r2, #0
   11d10:	mov	r3, #0
   11d14:	bl	11388 <ftruncate64@plt>
   11d18:	cmn	r0, #1
   11d1c:	bgt	11e04 <__mempcpy_chk@plt+0x824>
   11d20:	bl	114cc <__errno_location@plt>
   11d24:	ldr	r4, [r0]
   11d28:	movw	r1, #10911	; 0x2a9f
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	mov	r7, #0
   11d38:	movt	r1, #2
   11d3c:	bl	113ac <dcgettext@plt>
   11d40:	ldr	r1, [r6]
   11d44:	mov	r5, r0
   11d48:	mov	r0, #4
   11d4c:	bl	1421c <__mempcpy_chk@plt+0x2c3c>
   11d50:	mov	r3, r0
   11d54:	mov	r0, #0
   11d58:	mov	r1, r4
   11d5c:	mov	r2, r5
   11d60:	bl	1143c <error@plt>
   11d64:	b	11fec <__mempcpy_chk@plt+0xa0c>
   11d68:	bl	114cc <__errno_location@plt>
   11d6c:	ldr	r4, [r0]
   11d70:	movw	r1, #10757	; 0x2a05
   11d74:	mov	r0, #0
   11d78:	mov	r2, #5
   11d7c:	mov	r7, #0
   11d80:	movt	r1, #2
   11d84:	bl	113ac <dcgettext@plt>
   11d88:	mov	r5, r0
   11d8c:	mov	r0, #4
   11d90:	mov	r1, r8
   11d94:	bl	1421c <__mempcpy_chk@plt+0x2c3c>
   11d98:	b	1203c <__mempcpy_chk@plt+0xa5c>
   11d9c:	movw	r0, #10818	; 0x2a42
   11da0:	movt	r0, #2
   11da4:	bl	11454 <getenv@plt>
   11da8:	mov	r5, r0
   11dac:	cmp	r0, #0
   11db0:	movw	r0, #10825	; 0x2a49
   11db4:	movw	r1, #10830	; 0x2a4e
   11db8:	mov	r2, #0
   11dbc:	movt	r0, #2
   11dc0:	movt	r1, #2
   11dc4:	moveq	r5, r0
   11dc8:	mov	r0, r5
   11dcc:	bl	129a4 <__mempcpy_chk@plt+0x13c4>
   11dd0:	str	r0, [r6]
   11dd4:	bl	21208 <__mempcpy_chk@plt+0xfc28>
   11dd8:	cmn	r0, #1
   11ddc:	ble	11e9c <__mempcpy_chk@plt+0x8bc>
   11de0:	movw	r1, #10878	; 0x2a7e
   11de4:	mov	r4, r0
   11de8:	movt	r1, #2
   11dec:	bl	11298 <fdopen@plt>
   11df0:	cmp	r0, #0
   11df4:	str	r0, [r7]
   11df8:	beq	11f7c <__mempcpy_chk@plt+0x99c>
   11dfc:	ldr	r0, [r6]
   11e00:	bl	113b8 <unlink@plt>
   11e04:	ldr	r0, [r6]
   11e08:	ldr	r7, [r7]
   11e0c:	str	sl, [sp, #20]
   11e10:	movw	sl, #17112	; 0x42d8
   11e14:	mov	r5, #0
   11e18:	mov	r4, #0
   11e1c:	movt	sl, #3
   11e20:	str	r0, [sp, #16]
   11e24:	movw	r0, #17104	; 0x42d0
   11e28:	ldr	r1, [sl]
   11e2c:	movt	r0, #3
   11e30:	ldr	r2, [r0]
   11e34:	mov	r0, r9
   11e38:	bl	211a4 <__mempcpy_chk@plt+0xfbc4>
   11e3c:	cmp	r0, #0
   11e40:	beq	11f1c <__mempcpy_chk@plt+0x93c>
   11e44:	mov	r6, r0
   11e48:	cmn	r0, #1
   11e4c:	beq	11ee8 <__mempcpy_chk@plt+0x908>
   11e50:	movw	sl, #17112	; 0x42d8
   11e54:	mov	r1, #1
   11e58:	mov	r2, r6
   11e5c:	mov	r3, r7
   11e60:	movt	sl, #3
   11e64:	ldr	r0, [sl]
   11e68:	bl	11394 <fwrite_unlocked@plt>
   11e6c:	adds	r5, r5, r6
   11e70:	adc	r4, r4, #0
   11e74:	cmp	r0, r6
   11e78:	beq	11e24 <__mempcpy_chk@plt+0x844>
   11e7c:	b	11f2c <__mempcpy_chk@plt+0x94c>
   11e80:	mov	r0, r9
   11e84:	mov	r1, r8
   11e88:	mov	r2, r4
   11e8c:	mov	r3, r5
   11e90:	bl	12288 <__mempcpy_chk@plt+0xca8>
   11e94:	mov	r7, r0
   11e98:	b	11fec <__mempcpy_chk@plt+0xa0c>
   11e9c:	bl	114cc <__errno_location@plt>
   11ea0:	ldr	r4, [r0]
   11ea4:	movw	r1, #10840	; 0x2a58
   11ea8:	mov	r0, #0
   11eac:	mov	r2, #5
   11eb0:	movt	r1, #2
   11eb4:	bl	113ac <dcgettext@plt>
   11eb8:	mov	r6, r0
   11ebc:	mov	r0, #4
   11ec0:	mov	r1, r5
   11ec4:	bl	1421c <__mempcpy_chk@plt+0x2c3c>
   11ec8:	movw	r5, #17120	; 0x42e0
   11ecc:	mov	r3, r0
   11ed0:	mov	r0, #0
   11ed4:	mov	r1, r4
   11ed8:	mov	r2, r6
   11edc:	movt	r5, #3
   11ee0:	bl	1143c <error@plt>
   11ee4:	b	11fdc <__mempcpy_chk@plt+0x9fc>
   11ee8:	bl	114cc <__errno_location@plt>
   11eec:	ldr	r4, [r0]
   11ef0:	movw	r1, #10787	; 0x2a23
   11ef4:	mov	r0, #0
   11ef8:	mov	r2, #5
   11efc:	mov	r7, #0
   11f00:	movt	r1, #2
   11f04:	bl	113ac <dcgettext@plt>
   11f08:	mov	r5, r0
   11f0c:	mov	r0, #0
   11f10:	mov	r1, #3
   11f14:	mov	r2, r8
   11f18:	b	11f5c <__mempcpy_chk@plt+0x97c>
   11f1c:	mov	r0, r7
   11f20:	bl	113dc <fflush_unlocked@plt>
   11f24:	cmp	r0, #0
   11f28:	beq	11bf8 <__mempcpy_chk@plt+0x618>
   11f2c:	bl	114cc <__errno_location@plt>
   11f30:	ldr	r4, [r0]
   11f34:	movw	r1, #10802	; 0x2a32
   11f38:	mov	r0, #0
   11f3c:	mov	r2, #5
   11f40:	mov	r7, #0
   11f44:	movt	r1, #2
   11f48:	bl	113ac <dcgettext@plt>
   11f4c:	ldr	r2, [sp, #16]
   11f50:	mov	r5, r0
   11f54:	mov	r0, #0
   11f58:	mov	r1, #3
   11f5c:	bl	143c0 <__mempcpy_chk@plt+0x2de0>
   11f60:	mov	r3, r0
   11f64:	mov	r0, #0
   11f68:	mov	r1, r4
   11f6c:	mov	r2, r5
   11f70:	bl	1143c <error@plt>
   11f74:	ldr	sl, [sp, #20]
   11f78:	b	11fec <__mempcpy_chk@plt+0xa0c>
   11f7c:	bl	114cc <__errno_location@plt>
   11f80:	ldr	r5, [r0]
   11f84:	movw	r1, #10881	; 0x2a81
   11f88:	mov	r0, #0
   11f8c:	mov	r2, #5
   11f90:	movt	r1, #2
   11f94:	bl	113ac <dcgettext@plt>
   11f98:	mov	r6, r0
   11f9c:	movw	r0, #17120	; 0x42e0
   11fa0:	movt	r0, #3
   11fa4:	ldr	r1, [r0]
   11fa8:	mov	r0, #4
   11fac:	bl	1421c <__mempcpy_chk@plt+0x2c3c>
   11fb0:	mov	r3, r0
   11fb4:	mov	r1, r5
   11fb8:	movw	r5, #17120	; 0x42e0
   11fbc:	mov	r0, #0
   11fc0:	mov	r2, r6
   11fc4:	movt	r5, #3
   11fc8:	bl	1143c <error@plt>
   11fcc:	mov	r0, r4
   11fd0:	bl	115d4 <close@plt>
   11fd4:	ldr	r0, [r5]
   11fd8:	bl	113b8 <unlink@plt>
   11fdc:	ldr	r0, [r5]
   11fe0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   11fe4:	mov	r7, #0
   11fe8:	str	r7, [r5]
   11fec:	ldr	r0, [sp, #28]
   11ff0:	cmp	r0, #0
   11ff4:	beq	12050 <__mempcpy_chk@plt+0xa70>
   11ff8:	mov	r0, r9
   11ffc:	bl	115d4 <close@plt>
   12000:	cmp	r0, #0
   12004:	beq	12050 <__mempcpy_chk@plt+0xa70>
   12008:	bl	114cc <__errno_location@plt>
   1200c:	ldr	r4, [r0]
   12010:	movw	r1, #10787	; 0x2a23
   12014:	mov	r0, #0
   12018:	mov	r2, #5
   1201c:	mov	r7, #0
   12020:	movt	r1, #2
   12024:	bl	113ac <dcgettext@plt>
   12028:	mov	r5, r0
   1202c:	mov	r0, #0
   12030:	mov	r1, #3
   12034:	mov	r2, r8
   12038:	bl	143c0 <__mempcpy_chk@plt+0x2de0>
   1203c:	mov	r3, r0
   12040:	mov	r0, #0
   12044:	mov	r1, r4
   12048:	mov	r2, r5
   1204c:	bl	1143c <error@plt>
   12050:	ldr	r0, [sp, #32]
   12054:	ldr	r1, [sp, #24]
   12058:	movw	r6, #17120	; 0x42e0
   1205c:	and	sl, sl, r7
   12060:	movw	r7, #17124	; 0x42e4
   12064:	movt	r6, #3
   12068:	movt	r7, #3
   1206c:	add	r0, r0, #1
   12070:	ldr	r8, [r1, r0, lsl #2]
   12074:	cmp	r8, #0
   12078:	bne	11c28 <__mempcpy_chk@plt+0x648>
   1207c:	movw	r0, #16788	; 0x4194
   12080:	movw	r4, #25332	; 0x62f4
   12084:	mov	r1, #1
   12088:	movt	r0, #3
   1208c:	movt	r4, #3
   12090:	ldr	r3, [r0]
   12094:	ldr	r2, [r4]
   12098:	movw	r0, #17140	; 0x42f4
   1209c:	movt	r0, #3
   120a0:	bl	11394 <fwrite_unlocked@plt>
   120a4:	mov	r0, #0
   120a8:	str	r0, [r4]
   120ac:	movw	r0, #17116	; 0x42dc
   120b0:	movt	r0, #3
   120b4:	ldrb	r0, [r0]
   120b8:	cmp	r0, #0
   120bc:	beq	120ec <__mempcpy_chk@plt+0xb0c>
   120c0:	mov	r0, #0
   120c4:	bl	115d4 <close@plt>
   120c8:	cmn	r0, #1
   120cc:	bgt	120ec <__mempcpy_chk@plt+0xb0c>
   120d0:	bl	114cc <__errno_location@plt>
   120d4:	ldr	r1, [r0]
   120d8:	movw	r2, #11264	; 0x2c00
   120dc:	mov	r0, #0
   120e0:	movt	r2, #2
   120e4:	bl	1143c <error@plt>
   120e8:	mov	sl, #0
   120ec:	eor	r0, sl, #1
   120f0:	sub	sp, fp, #28
   120f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120f8:	movw	r0, #17104	; 0x42d0
   120fc:	movt	r0, #3
   12100:	str	r2, [r0]
   12104:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   12108:	cmn	r0, #3
   1210c:	bne	12164 <__mempcpy_chk@plt+0xb84>
   12110:	movw	r0, #16696	; 0x4138
   12114:	movw	r2, #10222	; 0x27ee
   12118:	mov	r1, #0
   1211c:	movw	r7, #10210	; 0x27e2
   12120:	movt	r0, #3
   12124:	movt	r2, #2
   12128:	str	r1, [sp, #8]
   1212c:	movw	r1, #10163	; 0x27b3
   12130:	movt	r7, #2
   12134:	ldr	r3, [r0]
   12138:	movw	r0, #16788	; 0x4194
   1213c:	str	r2, [sp, #4]
   12140:	movw	r2, #10196	; 0x27d4
   12144:	movt	r1, #2
   12148:	str	r7, [sp]
   1214c:	movt	r0, #3
   12150:	movt	r2, #2
   12154:	ldr	r0, [r0]
   12158:	bl	21630 <__mempcpy_chk@plt+0x10050>
   1215c:	mov	r0, #0
   12160:	bl	114b4 <exit@plt>
   12164:	cmn	r0, #2
   12168:	bne	12174 <__mempcpy_chk@plt+0xb94>
   1216c:	mov	r0, #0
   12170:	bl	116e0 <__mempcpy_chk@plt+0x100>
   12174:	mov	r0, #1
   12178:	bl	116e0 <__mempcpy_chk@plt+0x100>
   1217c:	movw	r1, #10238	; 0x27fe
   12180:	mov	r0, #0
   12184:	mov	r2, #5
   12188:	movt	r1, #2
   1218c:	bl	113ac <dcgettext@plt>
   12190:	mov	r2, r0
   12194:	mov	r0, #1
   12198:	mov	r1, #0
   1219c:	bl	1143c <error@plt>
   121a0:	movw	r2, #11195	; 0x2bbb
   121a4:	mov	r3, r0
   121a8:	mov	r0, #1
   121ac:	mov	r1, #0
   121b0:	movt	r2, #2
   121b4:	bl	1143c <error@plt>
   121b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121bc:	add	fp, sp, #28
   121c0:	sub	sp, sp, #4
   121c4:	movw	r9, #25332	; 0x62f4
   121c8:	cmp	r0, #0
   121cc:	movt	r9, #3
   121d0:	ldr	r6, [r9]
   121d4:	beq	12258 <__mempcpy_chk@plt+0xc78>
   121d8:	movw	r8, #17140	; 0x42f4
   121dc:	sub	r5, r1, r0
   121e0:	rsb	r7, r6, #8192	; 0x2000
   121e4:	mov	r4, r0
   121e8:	movt	r8, #3
   121ec:	cmp	r5, r7
   121f0:	add	r0, r8, r6
   121f4:	bcc	12244 <__mempcpy_chk@plt+0xc64>
   121f8:	movw	sl, #16788	; 0x4194
   121fc:	mov	r6, #0
   12200:	movt	sl, #3
   12204:	mov	r1, r4
   12208:	mov	r2, r7
   1220c:	bl	1134c <memcpy@plt>
   12210:	ldr	r3, [sl]
   12214:	mov	r0, r8
   12218:	mov	r1, #1
   1221c:	mov	r2, #8192	; 0x2000
   12220:	bl	11394 <fwrite_unlocked@plt>
   12224:	sub	r5, r5, r7
   12228:	add	r4, r4, r7
   1222c:	mov	r0, r8
   12230:	mov	r7, #8192	; 0x2000
   12234:	str	r6, [r9]
   12238:	cmp	r6, r5, lsr #13
   1223c:	bne	12204 <__mempcpy_chk@plt+0xc24>
   12240:	mov	r0, r8
   12244:	mov	r1, r4
   12248:	mov	r2, r5
   1224c:	bl	1134c <memcpy@plt>
   12250:	add	r0, r6, r5
   12254:	b	1227c <__mempcpy_chk@plt+0xc9c>
   12258:	movw	r0, #16788	; 0x4194
   1225c:	mov	r1, #1
   12260:	mov	r2, r6
   12264:	movt	r0, #3
   12268:	ldr	r3, [r0]
   1226c:	movw	r0, #17140	; 0x42f4
   12270:	movt	r0, #3
   12274:	bl	11394 <fwrite_unlocked@plt>
   12278:	mov	r0, #0
   1227c:	str	r0, [r9]
   12280:	sub	sp, fp, #28
   12284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1228c:	add	fp, sp, #28
   12290:	sub	sp, sp, #36	; 0x24
   12294:	movw	r8, #17104	; 0x42d0
   12298:	mov	r5, r2
   1229c:	str	r1, [sp, #16]
   122a0:	mov	r9, r0
   122a4:	mov	r7, r3
   122a8:	mov	r1, r3
   122ac:	mov	r3, #0
   122b0:	mov	r4, #0
   122b4:	movt	r8, #3
   122b8:	mov	r0, r5
   122bc:	ldr	r2, [r8]
   122c0:	bl	2235c <__mempcpy_chk@plt+0x10d7c>
   122c4:	movw	r0, #17100	; 0x42cc
   122c8:	cmp	r2, #0
   122cc:	movt	r0, #3
   122d0:	ldr	r0, [r0]
   122d4:	str	r0, [sp, #24]
   122d8:	movw	r0, #16800	; 0x41a0
   122dc:	movt	r0, #3
   122e0:	ldr	r0, [r0]
   122e4:	ldrb	r1, [r0], #1
   122e8:	str	r1, [sp, #32]
   122ec:	str	r0, [sp, #28]
   122f0:	beq	1235c <__mempcpy_chk@plt+0xd7c>
   122f4:	subs	r5, r5, r2
   122f8:	mov	r0, r9
   122fc:	str	r4, [sp]
   12300:	sbc	r7, r7, #0
   12304:	mov	r2, r5
   12308:	mov	r3, r7
   1230c:	bl	11400 <lseek64@plt>
   12310:	cmn	r1, #1
   12314:	bgt	1235c <__mempcpy_chk@plt+0xd7c>
   12318:	bl	114cc <__errno_location@plt>
   1231c:	ldr	r4, [r0]
   12320:	movw	r1, #10942	; 0x2abe
   12324:	mov	r0, #0
   12328:	mov	r2, #5
   1232c:	movt	r1, #2
   12330:	bl	113ac <dcgettext@plt>
   12334:	ldr	r2, [sp, #16]
   12338:	mov	r6, r0
   1233c:	mov	r0, #0
   12340:	mov	r1, #3
   12344:	bl	143c0 <__mempcpy_chk@plt+0x2de0>
   12348:	mov	r3, r0
   1234c:	mov	r0, #0
   12350:	mov	r1, r4
   12354:	mov	r2, r6
   12358:	bl	1143c <error@plt>
   1235c:	movw	r0, #17112	; 0x42d8
   12360:	ldr	r2, [r8]
   12364:	movt	r0, #3
   12368:	ldr	r1, [r0]
   1236c:	mov	r0, r9
   12370:	bl	211a4 <__mempcpy_chk@plt+0xfbc4>
   12374:	mov	r4, r0
   12378:	orrs	r0, r5, r7
   1237c:	beq	12434 <__mempcpy_chk@plt+0xe54>
   12380:	cmp	r4, #0
   12384:	bne	12434 <__mempcpy_chk@plt+0xe54>
   12388:	mov	sl, #0
   1238c:	ldr	r0, [r8]
   12390:	mov	r1, #1
   12394:	str	r1, [sp]
   12398:	rsbs	r2, r0, #0
   1239c:	mov	r0, r9
   123a0:	sbc	r3, sl, #0
   123a4:	bl	11400 <lseek64@plt>
   123a8:	cmn	r1, #1
   123ac:	bgt	123f4 <__mempcpy_chk@plt+0xe14>
   123b0:	bl	114cc <__errno_location@plt>
   123b4:	ldr	r4, [r0]
   123b8:	movw	r1, #10942	; 0x2abe
   123bc:	mov	r0, #0
   123c0:	mov	r2, #5
   123c4:	movt	r1, #2
   123c8:	bl	113ac <dcgettext@plt>
   123cc:	ldr	r2, [sp, #16]
   123d0:	mov	r6, r0
   123d4:	mov	r0, #0
   123d8:	mov	r1, #3
   123dc:	bl	143c0 <__mempcpy_chk@plt+0x2de0>
   123e0:	mov	r3, r0
   123e4:	mov	r0, #0
   123e8:	mov	r1, r4
   123ec:	mov	r2, r6
   123f0:	bl	1143c <error@plt>
   123f4:	movw	r0, #17112	; 0x42d8
   123f8:	ldr	r6, [r8]
   123fc:	movt	r0, #3
   12400:	ldr	r1, [r0]
   12404:	mov	r0, r9
   12408:	mov	r2, r6
   1240c:	bl	211a4 <__mempcpy_chk@plt+0xfbc4>
   12410:	mov	r4, r0
   12414:	subs	r5, r5, r6
   12418:	mov	r0, r7
   1241c:	sbc	r0, r7, #0
   12420:	mov	r7, r0
   12424:	orrs	r0, r5, r0
   12428:	beq	12434 <__mempcpy_chk@plt+0xe54>
   1242c:	cmp	r4, #0
   12430:	beq	1238c <__mempcpy_chk@plt+0xdac>
   12434:	ldr	r0, [r8]
   12438:	cmp	r4, r0
   1243c:	bne	12484 <__mempcpy_chk@plt+0xea4>
   12440:	movw	r0, #17112	; 0x42d8
   12444:	mov	r2, r4
   12448:	movt	r0, #3
   1244c:	ldr	r1, [r0]
   12450:	mov	r0, r9
   12454:	bl	211a4 <__mempcpy_chk@plt+0xfbc4>
   12458:	cmn	r0, #1
   1245c:	beq	12814 <__mempcpy_chk@plt+0x1234>
   12460:	cmp	r0, #0
   12464:	beq	12484 <__mempcpy_chk@plt+0xea4>
   12468:	ldr	r1, [r8]
   1246c:	adds	r5, r5, r0
   12470:	mov	r4, r0
   12474:	adc	r7, r7, #0
   12478:	cmp	r0, r1
   1247c:	beq	12440 <__mempcpy_chk@plt+0xe60>
   12480:	b	12490 <__mempcpy_chk@plt+0xeb0>
   12484:	mov	r0, r4
   12488:	cmn	r4, #1
   1248c:	beq	12814 <__mempcpy_chk@plt+0x1234>
   12490:	movw	r1, #17112	; 0x42d8
   12494:	ldr	r2, [sp, #24]
   12498:	movt	r1, #3
   1249c:	ldr	r1, [r1]
   124a0:	sub	r6, r2, #1
   124a4:	str	r6, [sp, #12]
   124a8:	add	r4, r1, r0
   124ac:	movw	r0, #16804	; 0x41a4
   124b0:	rsb	r1, r2, #1
   124b4:	movt	r0, #3
   124b8:	mov	sl, r4
   124bc:	ldr	r0, [r0]
   124c0:	cmp	r0, #0
   124c4:	addne	sl, sl, r1
   124c8:	mov	r1, #1
   124cc:	str	r1, [sp, #8]
   124d0:	b	127a8 <__mempcpy_chk@plt+0x11c8>
   124d4:	ldr	r0, [r8]
   124d8:	sub	r6, r4, r1
   124dc:	cmp	r6, r0
   124e0:	bls	12548 <__mempcpy_chk@plt+0xf68>
   124e4:	lsl	r2, r0, #1
   124e8:	str	r2, [r8]
   124ec:	mov	r2, #2
   124f0:	orr	r0, r2, r0, lsl #2
   124f4:	movw	r2, #16804	; 0x41a4
   124f8:	movt	r2, #3
   124fc:	ldr	r4, [r2]
   12500:	add	r2, r0, r4
   12504:	movw	r0, #17108	; 0x42d4
   12508:	cmp	r4, #0
   1250c:	movt	r0, #3
   12510:	movweq	r4, #1
   12514:	mov	r3, r0
   12518:	ldr	r0, [r0]
   1251c:	str	r2, [r3]
   12520:	cmp	r2, r0
   12524:	bcc	12868 <__mempcpy_chk@plt+0x1288>
   12528:	sub	r0, r1, r4
   1252c:	mov	r1, r2
   12530:	bl	21780 <__mempcpy_chk@plt+0x101a0>
   12534:	movw	r1, #17112	; 0x42d8
   12538:	add	r0, r0, r4
   1253c:	movt	r1, #3
   12540:	str	r0, [r1]
   12544:	ldr	r0, [r8]
   12548:	subs	r1, r5, r0
   1254c:	sbcs	r1, r7, #0
   12550:	bge	12564 <__mempcpy_chk@plt+0xf84>
   12554:	str	r5, [r8]
   12558:	mov	r5, #0
   1255c:	mov	r7, #0
   12560:	b	1256c <__mempcpy_chk@plt+0xf8c>
   12564:	subs	r5, r5, r0
   12568:	sbc	r7, r7, #0
   1256c:	mov	r0, #0
   12570:	mov	r2, r5
   12574:	mov	r3, r7
   12578:	str	r5, [sp, #20]
   1257c:	str	r7, [sp, #24]
   12580:	str	r0, [sp]
   12584:	mov	r0, r9
   12588:	bl	11400 <lseek64@plt>
   1258c:	cmn	r1, #1
   12590:	mov	r5, r9
   12594:	bgt	125dc <__mempcpy_chk@plt+0xffc>
   12598:	bl	114cc <__errno_location@plt>
   1259c:	ldr	r4, [r0]
   125a0:	movw	r1, #10942	; 0x2abe
   125a4:	mov	r0, #0
   125a8:	mov	r2, #5
   125ac:	movt	r1, #2
   125b0:	bl	113ac <dcgettext@plt>
   125b4:	ldr	r2, [sp, #16]
   125b8:	mov	sl, r0
   125bc:	mov	r0, #0
   125c0:	mov	r1, #3
   125c4:	bl	143c0 <__mempcpy_chk@plt+0x2de0>
   125c8:	mov	r3, r0
   125cc:	mov	r0, #0
   125d0:	mov	r1, r4
   125d4:	mov	r2, sl
   125d8:	bl	1143c <error@plt>
   125dc:	movw	r0, #17104	; 0x42d0
   125e0:	mov	r2, r6
   125e4:	movt	r0, #3
   125e8:	ldr	r4, [r0]
   125ec:	movw	r0, #17112	; 0x42d8
   125f0:	movt	r0, #3
   125f4:	ldr	r9, [r0]
   125f8:	add	sl, r9, r4
   125fc:	mov	r1, r9
   12600:	mov	r0, sl
   12604:	bl	1131c <memmove@plt>
   12608:	movw	r8, #16804	; 0x41a4
   1260c:	mov	r0, r5
   12610:	mov	r1, r9
   12614:	mov	r2, r4
   12618:	movt	r8, #3
   1261c:	ldr	r7, [r8]
   12620:	bl	211a4 <__mempcpy_chk@plt+0xfbc4>
   12624:	movw	r1, #17104	; 0x42d0
   12628:	movt	r1, #3
   1262c:	mov	r2, r1
   12630:	ldr	r1, [r1]
   12634:	cmp	r0, r1
   12638:	bne	12814 <__mempcpy_chk@plt+0x1234>
   1263c:	add	r4, sl, r6
   12640:	cmp	r7, #0
   12644:	ldr	r0, [r8]
   12648:	mov	r9, r5
   1264c:	ldr	r5, [sp, #20]
   12650:	ldr	r7, [sp, #24]
   12654:	ldr	r6, [sp, #12]
   12658:	mov	r8, r2
   1265c:	moveq	sl, r4
   12660:	b	127a8 <__mempcpy_chk@plt+0x11c8>
   12664:	movw	r0, #17112	; 0x42d8
   12668:	movt	r0, #3
   1266c:	ldr	r1, [r0]
   12670:	sub	r2, sl, r1
   12674:	cmn	r2, #1
   12678:	ble	1286c <__mempcpy_chk@plt+0x128c>
   1267c:	cmp	r2, #0
   12680:	beq	127f8 <__mempcpy_chk@plt+0x1218>
   12684:	rsb	r0, r2, #1
   12688:	sub	r3, r2, #1
   1268c:	str	r0, [sp]
   12690:	movw	r0, #17128	; 0x42e8
   12694:	movt	r0, #3
   12698:	str	r0, [sp, #4]
   1269c:	movw	r0, #16812	; 0x41ac
   126a0:	movt	r0, #3
   126a4:	bl	178f4 <__mempcpy_chk@plt+0x6314>
   126a8:	cmn	r0, #1
   126ac:	beq	126f8 <__mempcpy_chk@plt+0x1118>
   126b0:	cmn	r0, #2
   126b4:	beq	12878 <__mempcpy_chk@plt+0x1298>
   126b8:	movw	r0, #17128	; 0x42e8
   126bc:	movw	r2, #17100	; 0x42cc
   126c0:	movt	r0, #3
   126c4:	movt	r2, #3
   126c8:	mov	r1, r0
   126cc:	ldr	r0, [r0, #4]
   126d0:	ldr	r1, [r1, #8]
   126d4:	ldr	r0, [r0]
   126d8:	ldr	r1, [r1]
   126dc:	sub	r1, r1, r0
   126e0:	str	r1, [r2]
   126e4:	movw	r1, #17112	; 0x42d8
   126e8:	movt	r1, #3
   126ec:	ldr	r1, [r1]
   126f0:	add	sl, r1, r0
   126f4:	b	127f0 <__mempcpy_chk@plt+0x1210>
   126f8:	movw	r0, #17112	; 0x42d8
   126fc:	movt	r0, #3
   12700:	ldr	r1, [r0]
   12704:	b	127f8 <__mempcpy_chk@plt+0x1218>
   12708:	movw	r0, #16808	; 0x41a8
   1270c:	movt	r0, #3
   12710:	ldrb	r0, [r0]
   12714:	cmp	r0, #1
   12718:	bne	12750 <__mempcpy_chk@plt+0x1170>
   1271c:	movw	r0, #17100	; 0x42cc
   12720:	str	r7, [sp, #24]
   12724:	ldr	r1, [sp, #8]
   12728:	movt	r0, #3
   1272c:	ldr	r0, [r0]
   12730:	add	r7, sl, r0
   12734:	sub	r0, r7, r4
   12738:	clz	r0, r0
   1273c:	lsr	r0, r0, #5
   12740:	tst	r1, r0
   12744:	beq	12764 <__mempcpy_chk@plt+0x1184>
   12748:	mov	r0, #0
   1274c:	b	12778 <__mempcpy_chk@plt+0x1198>
   12750:	mov	r0, sl
   12754:	mov	r1, r4
   12758:	bl	121b8 <__mempcpy_chk@plt+0xbd8>
   1275c:	mov	r4, sl
   12760:	b	12780 <__mempcpy_chk@plt+0x11a0>
   12764:	mov	r0, r7
   12768:	mov	r1, r4
   1276c:	bl	121b8 <__mempcpy_chk@plt+0xbd8>
   12770:	mov	r0, #0
   12774:	mov	r4, r7
   12778:	str	r0, [sp, #8]
   1277c:	ldr	r7, [sp, #24]
   12780:	movw	r0, #17100	; 0x42cc
   12784:	movw	r2, #16804	; 0x41a4
   12788:	movt	r0, #3
   1278c:	movt	r2, #3
   12790:	ldr	r0, [r0]
   12794:	rsb	r1, r0, #1
   12798:	ldr	r0, [r2]
   1279c:	cmp	r0, #0
   127a0:	addne	sl, sl, r1
   127a4:	movne	r0, r0
   127a8:	cmp	r0, #0
   127ac:	beq	12664 <__mempcpy_chk@plt+0x1084>
   127b0:	sub	sl, sl, #1
   127b4:	ldr	r2, [sp, #32]
   127b8:	mov	r0, sl
   127bc:	ldrb	r1, [r0], #1
   127c0:	cmp	r1, r2
   127c4:	bne	127b0 <__mempcpy_chk@plt+0x11d0>
   127c8:	cmp	r6, #0
   127cc:	beq	127e4 <__mempcpy_chk@plt+0x1204>
   127d0:	ldr	r1, [sp, #28]
   127d4:	mov	r2, r6
   127d8:	bl	115bc <strncmp@plt>
   127dc:	cmp	r0, #0
   127e0:	bne	127b0 <__mempcpy_chk@plt+0x11d0>
   127e4:	movw	r0, #17112	; 0x42d8
   127e8:	movt	r0, #3
   127ec:	ldr	r1, [r0]
   127f0:	cmp	sl, r1
   127f4:	bcs	12708 <__mempcpy_chk@plt+0x1128>
   127f8:	orrs	r0, r5, r7
   127fc:	bne	124d4 <__mempcpy_chk@plt+0xef4>
   12800:	mov	r0, r1
   12804:	mov	r1, r4
   12808:	bl	121b8 <__mempcpy_chk@plt+0xbd8>
   1280c:	mov	r4, #1
   12810:	b	1285c <__mempcpy_chk@plt+0x127c>
   12814:	bl	114cc <__errno_location@plt>
   12818:	ldr	r5, [r0]
   1281c:	movw	r1, #10787	; 0x2a23
   12820:	mov	r0, #0
   12824:	mov	r2, #5
   12828:	mov	r4, #0
   1282c:	movt	r1, #2
   12830:	bl	113ac <dcgettext@plt>
   12834:	ldr	r2, [sp, #16]
   12838:	mov	r6, r0
   1283c:	mov	r0, #0
   12840:	mov	r1, #3
   12844:	bl	143c0 <__mempcpy_chk@plt+0x2de0>
   12848:	mov	r3, r0
   1284c:	mov	r0, #0
   12850:	mov	r1, r5
   12854:	mov	r2, r6
   12858:	bl	1143c <error@plt>
   1285c:	mov	r0, r4
   12860:	sub	sp, fp, #28
   12864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12868:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   1286c:	movw	r1, #10958	; 0x2ace
   12870:	movt	r1, #2
   12874:	b	12880 <__mempcpy_chk@plt+0x12a0>
   12878:	movw	r1, #10975	; 0x2adf
   1287c:	movt	r1, #2
   12880:	mov	r0, #0
   12884:	mov	r2, #5
   12888:	bl	113ac <dcgettext@plt>
   1288c:	mov	r2, r0
   12890:	mov	r0, #1
   12894:	mov	r1, #0
   12898:	bl	1143c <error@plt>
   1289c:	movw	r1, #25336	; 0x62f8
   128a0:	movt	r1, #3
   128a4:	str	r0, [r1]
   128a8:	bx	lr
   128ac:	movw	r1, #25340	; 0x62fc
   128b0:	movt	r1, #3
   128b4:	strb	r0, [r1]
   128b8:	bx	lr
   128bc:	push	{r4, r5, r6, sl, fp, lr}
   128c0:	add	fp, sp, #16
   128c4:	sub	sp, sp, #8
   128c8:	movw	r0, #16788	; 0x4194
   128cc:	movt	r0, #3
   128d0:	ldr	r0, [r0]
   128d4:	bl	21d20 <__mempcpy_chk@plt+0x10740>
   128d8:	cmp	r0, #0
   128dc:	beq	12904 <__mempcpy_chk@plt+0x1324>
   128e0:	movw	r0, #25340	; 0x62fc
   128e4:	movt	r0, #3
   128e8:	ldrb	r0, [r0]
   128ec:	cmp	r0, #0
   128f0:	beq	12924 <__mempcpy_chk@plt+0x1344>
   128f4:	bl	114cc <__errno_location@plt>
   128f8:	ldr	r0, [r0]
   128fc:	cmp	r0, #32
   12900:	bne	12924 <__mempcpy_chk@plt+0x1344>
   12904:	movw	r0, #16784	; 0x4190
   12908:	movt	r0, #3
   1290c:	ldr	r0, [r0]
   12910:	bl	21d20 <__mempcpy_chk@plt+0x10740>
   12914:	cmp	r0, #0
   12918:	subeq	sp, fp, #16
   1291c:	popeq	{r4, r5, r6, sl, fp, pc}
   12920:	b	12994 <__mempcpy_chk@plt+0x13b4>
   12924:	movw	r1, #10806	; 0x2a36
   12928:	mov	r0, #0
   1292c:	mov	r2, #5
   12930:	movt	r1, #2
   12934:	bl	113ac <dcgettext@plt>
   12938:	mov	r4, r0
   1293c:	movw	r0, #25336	; 0x62f8
   12940:	movt	r0, #3
   12944:	ldr	r6, [r0]
   12948:	bl	114cc <__errno_location@plt>
   1294c:	ldr	r5, [r0]
   12950:	cmp	r6, #0
   12954:	bne	12970 <__mempcpy_chk@plt+0x1390>
   12958:	movw	r2, #11195	; 0x2bbb
   1295c:	mov	r0, #0
   12960:	mov	r1, r5
   12964:	mov	r3, r4
   12968:	movt	r2, #2
   1296c:	b	12990 <__mempcpy_chk@plt+0x13b0>
   12970:	mov	r0, r6
   12974:	bl	14314 <__mempcpy_chk@plt+0x2d34>
   12978:	movw	r2, #11191	; 0x2bb7
   1297c:	mov	r3, r0
   12980:	str	r4, [sp]
   12984:	mov	r0, #0
   12988:	mov	r1, r5
   1298c:	movt	r2, #2
   12990:	bl	1143c <error@plt>
   12994:	movw	r0, #16700	; 0x413c
   12998:	movt	r0, #3
   1299c:	ldr	r0, [r0]
   129a0:	bl	11340 <_exit@plt>
   129a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129a8:	add	fp, sp, #28
   129ac:	push	{r2}		; (str r2, [sp, #-4]!)
   129b0:	mov	sl, r1
   129b4:	mov	r7, r0
   129b8:	bl	21ca0 <__mempcpy_chk@plt+0x106c0>
   129bc:	sub	r4, r0, r7
   129c0:	bl	21ce8 <__mempcpy_chk@plt+0x10708>
   129c4:	mov	r6, r0
   129c8:	add	r5, r4, r0
   129cc:	mov	r0, sl
   129d0:	bl	114c0 <strlen@plt>
   129d4:	mov	r9, r0
   129d8:	cmp	r6, #0
   129dc:	beq	12a04 <__mempcpy_chk@plt+0x1424>
   129e0:	add	r0, r7, r5
   129e4:	mov	r4, #0
   129e8:	ldrb	r0, [r0, #-1]
   129ec:	cmp	r0, #47	; 0x2f
   129f0:	beq	12a14 <__mempcpy_chk@plt+0x1434>
   129f4:	ldrb	r0, [sl]
   129f8:	subs	r4, r0, #47	; 0x2f
   129fc:	movwne	r4, #47	; 0x2f
   12a00:	b	12a14 <__mempcpy_chk@plt+0x1434>
   12a04:	ldrb	r0, [sl]
   12a08:	mov	r4, #0
   12a0c:	cmp	r0, #47	; 0x2f
   12a10:	movweq	r4, #46	; 0x2e
   12a14:	uxtb	r8, r4
   12a18:	add	r0, r9, r5
   12a1c:	cmp	r8, #0
   12a20:	movwne	r8, #1
   12a24:	add	r0, r0, r8
   12a28:	add	r0, r0, #1
   12a2c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   12a30:	mov	r6, r0
   12a34:	cmp	r0, #0
   12a38:	beq	12a78 <__mempcpy_chk@plt+0x1498>
   12a3c:	mov	r0, r6
   12a40:	mov	r1, r7
   12a44:	mov	r2, r5
   12a48:	mvn	r3, #0
   12a4c:	bl	115e0 <__mempcpy_chk@plt>
   12a50:	ldr	r1, [sp]
   12a54:	strb	r4, [r0], r8
   12a58:	mov	r2, r9
   12a5c:	mvn	r3, #0
   12a60:	cmp	r1, #0
   12a64:	strne	r0, [r1]
   12a68:	mov	r1, sl
   12a6c:	bl	115e0 <__mempcpy_chk@plt>
   12a70:	mov	r1, #0
   12a74:	strb	r1, [r0]
   12a78:	mov	r0, r6
   12a7c:	sub	sp, fp, #28
   12a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a84:	push	{r4, r5, r6, sl, fp, lr}
   12a88:	add	fp, sp, #16
   12a8c:	mov	r4, r0
   12a90:	bl	114cc <__errno_location@plt>
   12a94:	ldr	r6, [r0]
   12a98:	mov	r5, r0
   12a9c:	mov	r0, r4
   12aa0:	bl	11328 <free@plt>
   12aa4:	str	r6, [r5]
   12aa8:	pop	{r4, r5, r6, sl, fp, pc}
   12aac:	push	{r4, r5, r6, r7, fp, lr}
   12ab0:	add	fp, sp, #16
   12ab4:	sub	sp, sp, #8
   12ab8:	mov	r4, r0
   12abc:	ldr	r0, [r0, #4]
   12ac0:	mov	r5, r3
   12ac4:	mov	r6, r2
   12ac8:	ldr	r1, [r4, #8]
   12acc:	cmp	r1, r0
   12ad0:	bne	12aec <__mempcpy_chk@plt+0x150c>
   12ad4:	ldrd	r0, [r4, #16]
   12ad8:	cmp	r1, r0
   12adc:	bne	12aec <__mempcpy_chk@plt+0x150c>
   12ae0:	ldr	r0, [r4, #36]	; 0x24
   12ae4:	cmp	r0, #0
   12ae8:	beq	12b04 <__mempcpy_chk@plt+0x1524>
   12aec:	mov	r0, r4
   12af0:	mov	r2, r6
   12af4:	mov	r3, r5
   12af8:	sub	sp, fp, #16
   12afc:	pop	{r4, r5, r6, r7, fp, lr}
   12b00:	b	11538 <fseeko64@plt>
   12b04:	ldr	r7, [fp, #8]
   12b08:	mov	r0, r4
   12b0c:	bl	11514 <fileno@plt>
   12b10:	mov	r2, r6
   12b14:	mov	r3, r5
   12b18:	str	r7, [sp]
   12b1c:	bl	11400 <lseek64@plt>
   12b20:	and	r2, r0, r1
   12b24:	cmn	r2, #1
   12b28:	beq	12b44 <__mempcpy_chk@plt+0x1564>
   12b2c:	strd	r0, [r4, #80]	; 0x50
   12b30:	ldr	r0, [r4]
   12b34:	bic	r0, r0, #16
   12b38:	str	r0, [r4]
   12b3c:	mov	r0, #0
   12b40:	b	12b48 <__mempcpy_chk@plt+0x1568>
   12b44:	mvn	r0, #0
   12b48:	sub	sp, fp, #16
   12b4c:	pop	{r4, r5, r6, r7, fp, pc}
   12b50:	push	{r4, r5, fp, lr}
   12b54:	add	fp, sp, #8
   12b58:	cmp	r0, #0
   12b5c:	beq	12bf0 <__mempcpy_chk@plt+0x1610>
   12b60:	mov	r1, #47	; 0x2f
   12b64:	mov	r4, r0
   12b68:	bl	11568 <strrchr@plt>
   12b6c:	cmp	r0, #0
   12b70:	mov	r5, r4
   12b74:	addne	r5, r0, #1
   12b78:	sub	r0, r5, r4
   12b7c:	cmp	r0, #7
   12b80:	blt	12bd4 <__mempcpy_chk@plt+0x15f4>
   12b84:	movw	r1, #11254	; 0x2bf6
   12b88:	sub	r0, r5, #7
   12b8c:	mov	r2, #7
   12b90:	movt	r1, #2
   12b94:	bl	115bc <strncmp@plt>
   12b98:	cmp	r0, #0
   12b9c:	bne	12bd4 <__mempcpy_chk@plt+0x15f4>
   12ba0:	movw	r1, #11262	; 0x2bfe
   12ba4:	mov	r0, r5
   12ba8:	mov	r2, #3
   12bac:	movt	r1, #2
   12bb0:	bl	115bc <strncmp@plt>
   12bb4:	cmp	r0, #0
   12bb8:	beq	12bc4 <__mempcpy_chk@plt+0x15e4>
   12bbc:	mov	r4, r5
   12bc0:	b	12bd4 <__mempcpy_chk@plt+0x15f4>
   12bc4:	movw	r0, #16768	; 0x4180
   12bc8:	add	r4, r5, #3
   12bcc:	movt	r0, #3
   12bd0:	str	r4, [r0]
   12bd4:	movw	r0, #16772	; 0x4184
   12bd8:	movt	r0, #3
   12bdc:	str	r4, [r0]
   12be0:	movw	r0, #25344	; 0x6300
   12be4:	movt	r0, #3
   12be8:	str	r4, [r0]
   12bec:	pop	{r4, r5, fp, pc}
   12bf0:	movw	r0, #16784	; 0x4190
   12bf4:	movt	r0, #3
   12bf8:	ldr	r1, [r0]
   12bfc:	movw	r0, #11198	; 0x2bbe
   12c00:	movt	r0, #2
   12c04:	bl	115b0 <fputs@plt>
   12c08:	bl	115c8 <abort@plt>
   12c0c:	push	{r4, r5, r6, sl, fp, lr}
   12c10:	add	fp, sp, #16
   12c14:	mov	r4, r0
   12c18:	movw	r0, #25352	; 0x6308
   12c1c:	movt	r0, #3
   12c20:	cmp	r4, #0
   12c24:	moveq	r4, r0
   12c28:	bl	114cc <__errno_location@plt>
   12c2c:	ldr	r6, [r0]
   12c30:	mov	r5, r0
   12c34:	mov	r0, r4
   12c38:	mov	r1, #48	; 0x30
   12c3c:	bl	21a88 <__mempcpy_chk@plt+0x104a8>
   12c40:	str	r6, [r5]
   12c44:	pop	{r4, r5, r6, sl, fp, pc}
   12c48:	movw	r1, #25352	; 0x6308
   12c4c:	cmp	r0, #0
   12c50:	movt	r1, #3
   12c54:	movne	r1, r0
   12c58:	ldr	r0, [r1]
   12c5c:	bx	lr
   12c60:	movw	r2, #25352	; 0x6308
   12c64:	cmp	r0, #0
   12c68:	movt	r2, #3
   12c6c:	movne	r2, r0
   12c70:	str	r1, [r2]
   12c74:	bx	lr
   12c78:	movw	r3, #25352	; 0x6308
   12c7c:	cmp	r0, #0
   12c80:	movt	r3, #3
   12c84:	movne	r3, r0
   12c88:	ubfx	r0, r1, #5, #3
   12c8c:	and	r1, r1, #31
   12c90:	add	r0, r3, r0, lsl #2
   12c94:	ldr	r3, [r0, #8]
   12c98:	eor	r2, r2, r3, lsr r1
   12c9c:	and	r2, r2, #1
   12ca0:	eor	r2, r3, r2, lsl r1
   12ca4:	str	r2, [r0, #8]
   12ca8:	mov	r0, #1
   12cac:	and	r0, r0, r3, lsr r1
   12cb0:	bx	lr
   12cb4:	movw	r2, #25352	; 0x6308
   12cb8:	cmp	r0, #0
   12cbc:	movt	r2, #3
   12cc0:	movne	r2, r0
   12cc4:	ldr	r0, [r2, #4]
   12cc8:	str	r1, [r2, #4]
   12ccc:	bx	lr
   12cd0:	movw	r3, #25352	; 0x6308
   12cd4:	cmp	r0, #0
   12cd8:	movt	r3, #3
   12cdc:	movne	r3, r0
   12ce0:	cmp	r1, #0
   12ce4:	mov	r0, #10
   12ce8:	cmpne	r2, #0
   12cec:	str	r0, [r3]
   12cf0:	bne	12d00 <__mempcpy_chk@plt+0x1720>
   12cf4:	push	{fp, lr}
   12cf8:	mov	fp, sp
   12cfc:	bl	115c8 <abort@plt>
   12d00:	str	r1, [r3, #40]	; 0x28
   12d04:	str	r2, [r3, #44]	; 0x2c
   12d08:	bx	lr
   12d0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d10:	add	fp, sp, #28
   12d14:	sub	sp, sp, #20
   12d18:	mov	r7, r0
   12d1c:	ldr	r0, [fp, #8]
   12d20:	movw	r5, #25352	; 0x6308
   12d24:	mov	r8, r3
   12d28:	mov	r9, r2
   12d2c:	mov	sl, r1
   12d30:	movt	r5, #3
   12d34:	cmp	r0, #0
   12d38:	movne	r5, r0
   12d3c:	bl	114cc <__errno_location@plt>
   12d40:	mov	r4, r0
   12d44:	ldm	r5, {r0, r1}
   12d48:	ldr	r2, [r5, #40]	; 0x28
   12d4c:	ldr	r3, [r5, #44]	; 0x2c
   12d50:	add	r5, r5, #8
   12d54:	ldr	r6, [r4]
   12d58:	stm	sp, {r0, r1, r5}
   12d5c:	str	r2, [sp, #12]
   12d60:	str	r3, [sp, #16]
   12d64:	mov	r0, r7
   12d68:	mov	r1, sl
   12d6c:	mov	r2, r9
   12d70:	mov	r3, r8
   12d74:	bl	12d84 <__mempcpy_chk@plt+0x17a4>
   12d78:	str	r6, [r4]
   12d7c:	sub	sp, fp, #28
   12d80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d88:	add	fp, sp, #28
   12d8c:	sub	sp, sp, #156	; 0x9c
   12d90:	str	r0, [fp, #-56]	; 0xffffffc8
   12d94:	ldr	r0, [fp, #12]
   12d98:	mov	r4, r1
   12d9c:	str	r3, [sp, #80]	; 0x50
   12da0:	str	r2, [fp, #-84]	; 0xffffffac
   12da4:	and	r1, r0, #4
   12da8:	str	r1, [sp, #24]
   12dac:	and	r1, r0, #1
   12db0:	str	r1, [sp, #28]
   12db4:	ubfx	r7, r0, #1, #1
   12db8:	bl	1140c <__ctype_get_mb_cur_max@plt>
   12dbc:	str	r0, [sp, #32]
   12dc0:	ldr	r0, [fp, #24]
   12dc4:	ldr	r9, [fp, #8]
   12dc8:	mov	r2, #0
   12dcc:	mov	r1, #0
   12dd0:	mov	r5, #0
   12dd4:	str	r2, [sp, #52]	; 0x34
   12dd8:	mov	r2, #1
   12ddc:	str	r0, [sp, #72]	; 0x48
   12de0:	ldr	r0, [fp, #20]
   12de4:	str	r0, [sp, #64]	; 0x40
   12de8:	mov	r0, #0
   12dec:	str	r0, [sp, #92]	; 0x5c
   12df0:	mov	r0, #0
   12df4:	str	r0, [fp, #-76]	; 0xffffffb4
   12df8:	mov	r0, #0
   12dfc:	cmp	r9, #10
   12e00:	str	r1, [sp, #68]	; 0x44
   12e04:	bhi	13e04 <__mempcpy_chk@plt+0x2824>
   12e08:	add	r1, pc, #28
   12e0c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e10:	ldr	lr, [sp, #80]	; 0x50
   12e14:	mov	r6, r4
   12e18:	mov	r8, #0
   12e1c:	mov	r3, #1
   12e20:	mov	sl, #0
   12e24:	mov	r4, r2
   12e28:	ldr	pc, [r1, r9, lsl #2]
   12e2c:	strdeq	r2, [r1], -ip
   12e30:	andeq	r2, r1, r8, lsr pc
   12e34:	andeq	r2, r1, ip, lsl #30
   12e38:	strdeq	r2, [r1], -r4
   12e3c:	andeq	r2, r1, ip, lsr #30
   12e40:	andeq	r2, r1, r4, lsl #31
   12e44:	andeq	r2, r1, ip, lsl pc
   12e48:	andeq	r2, r1, r4, ror #31
   12e4c:	andeq	r2, r1, r8, asr lr
   12e50:	andeq	r2, r1, r8, asr lr
   12e54:	andeq	r2, r1, r0, lsl #29
   12e58:	movw	r0, #11344	; 0x2c50
   12e5c:	mov	r1, r9
   12e60:	movt	r0, #2
   12e64:	bl	1456c <__mempcpy_chk@plt+0x2f8c>
   12e68:	str	r0, [sp, #64]	; 0x40
   12e6c:	movw	r0, #11346	; 0x2c52
   12e70:	mov	r1, r9
   12e74:	movt	r0, #2
   12e78:	bl	1456c <__mempcpy_chk@plt+0x2f8c>
   12e7c:	str	r0, [sp, #72]	; 0x48
   12e80:	mov	r8, #0
   12e84:	mov	sl, r7
   12e88:	tst	r7, #1
   12e8c:	str	r5, [fp, #-48]	; 0xffffffd0
   12e90:	bne	12ecc <__mempcpy_chk@plt+0x18ec>
   12e94:	ldr	r0, [sp, #64]	; 0x40
   12e98:	ldrb	r0, [r0]
   12e9c:	cmp	r0, #0
   12ea0:	beq	12ecc <__mempcpy_chk@plt+0x18ec>
   12ea4:	ldr	r1, [sp, #64]	; 0x40
   12ea8:	mov	r8, #0
   12eac:	add	r1, r1, #1
   12eb0:	cmp	r8, r6
   12eb4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12eb8:	strbcc	r0, [r2, r8]
   12ebc:	ldrb	r0, [r1, r8]
   12ec0:	add	r8, r8, #1
   12ec4:	cmp	r0, #0
   12ec8:	bne	12eb0 <__mempcpy_chk@plt+0x18d0>
   12ecc:	ldr	r7, [sp, #72]	; 0x48
   12ed0:	mov	r0, r7
   12ed4:	bl	114c0 <strlen@plt>
   12ed8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12edc:	ldr	lr, [sp, #80]	; 0x50
   12ee0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12ee4:	str	r0, [fp, #-76]	; 0xffffffb4
   12ee8:	str	r7, [sp, #92]	; 0x5c
   12eec:	mov	r3, #1
   12ef0:	b	12fe4 <__mempcpy_chk@plt+0x1a04>
   12ef4:	mov	r0, #1
   12ef8:	b	12f38 <__mempcpy_chk@plt+0x1958>
   12efc:	mov	r9, #0
   12f00:	mov	r8, #0
   12f04:	mov	r3, r0
   12f08:	b	12fe0 <__mempcpy_chk@plt+0x1a00>
   12f0c:	tst	r7, #1
   12f10:	bne	12f38 <__mempcpy_chk@plt+0x1958>
   12f14:	mov	r3, r0
   12f18:	b	12f60 <__mempcpy_chk@plt+0x1980>
   12f1c:	mov	r0, #1
   12f20:	mov	r8, #0
   12f24:	mov	r9, #5
   12f28:	b	12f98 <__mempcpy_chk@plt+0x19b8>
   12f2c:	mov	r3, #1
   12f30:	tst	r7, #1
   12f34:	beq	12f60 <__mempcpy_chk@plt+0x1980>
   12f38:	mov	r1, #1
   12f3c:	mov	r8, #0
   12f40:	mov	r9, #2
   12f44:	mov	r3, r0
   12f48:	mov	sl, #1
   12f4c:	str	r1, [fp, #-76]	; 0xffffffb4
   12f50:	movw	r1, #11346	; 0x2c52
   12f54:	movt	r1, #2
   12f58:	str	r1, [sp, #92]	; 0x5c
   12f5c:	b	12fe4 <__mempcpy_chk@plt+0x1a04>
   12f60:	cmp	r6, #0
   12f64:	mov	r8, #1
   12f68:	mov	r9, #2
   12f6c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12f70:	movne	r0, #39	; 0x27
   12f74:	strbne	r0, [r1]
   12f78:	movw	r0, #11346	; 0x2c52
   12f7c:	movt	r0, #2
   12f80:	b	12fd4 <__mempcpy_chk@plt+0x19f4>
   12f84:	mov	r9, #5
   12f88:	tst	r7, #1
   12f8c:	beq	12fb4 <__mempcpy_chk@plt+0x19d4>
   12f90:	mov	r0, #1
   12f94:	mov	r8, #0
   12f98:	str	r0, [fp, #-76]	; 0xffffffb4
   12f9c:	movw	r0, #11342	; 0x2c4e
   12fa0:	mov	r3, #1
   12fa4:	mov	sl, #1
   12fa8:	movt	r0, #2
   12fac:	str	r0, [sp, #92]	; 0x5c
   12fb0:	b	12fe4 <__mempcpy_chk@plt+0x1a04>
   12fb4:	cmp	r6, #0
   12fb8:	mov	r8, #1
   12fbc:	mov	r3, #1
   12fc0:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12fc4:	movne	r0, #34	; 0x22
   12fc8:	strbne	r0, [r1]
   12fcc:	movw	r0, #11342	; 0x2c4e
   12fd0:	movt	r0, #2
   12fd4:	str	r0, [sp, #92]	; 0x5c
   12fd8:	mov	r0, #1
   12fdc:	str	r0, [fp, #-76]	; 0xffffffb4
   12fe0:	mov	sl, #0
   12fe4:	ldr	r0, [fp, #16]
   12fe8:	mov	r7, #0
   12fec:	str	r9, [fp, #-64]	; 0xffffffc0
   12ff0:	str	sl, [fp, #-72]	; 0xffffffb8
   12ff4:	str	r3, [sp, #84]	; 0x54
   12ff8:	cmp	r0, #0
   12ffc:	movwne	r0, #1
   13000:	and	r0, r0, sl
   13004:	str	r0, [fp, #-88]	; 0xffffffa8
   13008:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1300c:	cmp	r0, #0
   13010:	movwne	r0, #1
   13014:	subs	r2, r9, #2
   13018:	and	r1, r0, sl
   1301c:	str	r2, [fp, #-80]	; 0xffffffb0
   13020:	and	r1, r3, r1
   13024:	str	r1, [sp, #44]	; 0x2c
   13028:	clz	r1, r2
   1302c:	lsr	r1, r1, #5
   13030:	and	r1, r1, sl
   13034:	str	r1, [sp, #56]	; 0x38
   13038:	mov	r1, r2
   1303c:	eor	r2, sl, #1
   13040:	movwne	r1, #1
   13044:	str	r2, [sp, #88]	; 0x58
   13048:	orr	r2, r1, r2
   1304c:	and	r1, r1, r3
   13050:	and	r0, r0, r1
   13054:	str	r2, [sp, #60]	; 0x3c
   13058:	str	r1, [fp, #-68]	; 0xffffffbc
   1305c:	str	r0, [fp, #-60]	; 0xffffffc4
   13060:	eor	r0, r3, #1
   13064:	str	r0, [sp, #48]	; 0x30
   13068:	cmn	lr, #1
   1306c:	beq	1307c <__mempcpy_chk@plt+0x1a9c>
   13070:	cmp	r7, lr
   13074:	bne	13088 <__mempcpy_chk@plt+0x1aa8>
   13078:	b	13c34 <__mempcpy_chk@plt+0x2654>
   1307c:	ldrb	r0, [ip, r7]
   13080:	cmp	r0, #0
   13084:	beq	13c3c <__mempcpy_chk@plt+0x265c>
   13088:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1308c:	mov	r9, #0
   13090:	str	r5, [fp, #-48]	; 0xffffffd0
   13094:	str	r6, [fp, #-52]	; 0xffffffcc
   13098:	cmp	r0, #0
   1309c:	beq	130dc <__mempcpy_chk@plt+0x1afc>
   130a0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   130a4:	mov	r5, r4
   130a8:	add	r4, r7, r0
   130ac:	cmp	r0, #2
   130b0:	bcc	130cc <__mempcpy_chk@plt+0x1aec>
   130b4:	cmn	lr, #1
   130b8:	bne	130cc <__mempcpy_chk@plt+0x1aec>
   130bc:	mov	r0, ip
   130c0:	bl	114c0 <strlen@plt>
   130c4:	ldr	ip, [fp, #-84]	; 0xffffffac
   130c8:	mov	lr, r0
   130cc:	cmp	r4, lr
   130d0:	bls	130e4 <__mempcpy_chk@plt+0x1b04>
   130d4:	mov	r6, #0
   130d8:	b	13124 <__mempcpy_chk@plt+0x1b44>
   130dc:	mov	r6, #0
   130e0:	b	13128 <__mempcpy_chk@plt+0x1b48>
   130e4:	ldr	r1, [sp, #92]	; 0x5c
   130e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   130ec:	add	r0, ip, r7
   130f0:	mov	r4, lr
   130f4:	bl	113a0 <memcmp@plt>
   130f8:	ldr	r2, [sp, #88]	; 0x58
   130fc:	cmp	r0, #0
   13100:	mov	r1, r0
   13104:	movwne	r1, #1
   13108:	orr	r1, r1, r2
   1310c:	tst	r1, #1
   13110:	beq	13cd0 <__mempcpy_chk@plt+0x26f0>
   13114:	ldr	ip, [fp, #-84]	; 0xffffffac
   13118:	clz	r0, r0
   1311c:	mov	lr, r4
   13120:	lsr	r6, r0, #5
   13124:	mov	r4, r5
   13128:	ldrb	r5, [ip, r7]
   1312c:	cmp	r5, #126	; 0x7e
   13130:	bhi	134f8 <__mempcpy_chk@plt+0x1f18>
   13134:	add	r3, pc, #16
   13138:	mov	sl, #1
   1313c:	mov	r2, #110	; 0x6e
   13140:	mov	r0, #97	; 0x61
   13144:	mov	r1, #0
   13148:	ldr	pc, [r3, r5, lsl #2]
   1314c:	ldrdeq	r3, [r1], -ip
   13150:	strdeq	r3, [r1], -r8
   13154:	strdeq	r3, [r1], -r8
   13158:	strdeq	r3, [r1], -r8
   1315c:	strdeq	r3, [r1], -r8
   13160:	strdeq	r3, [r1], -r8
   13164:	strdeq	r3, [r1], -r8
   13168:	muleq	r1, ip, r5
   1316c:			; <UNDEFINED> instruction: 0x000133bc
   13170:			; <UNDEFINED> instruction: 0x000133b4
   13174:	andeq	r3, r1, r8, asr #7
   13178:	andeq	r3, r1, ip, asr #8
   1317c:	andeq	r3, r1, ip, lsr #7
   13180:	andeq	r3, r1, r4, asr #7
   13184:	strdeq	r3, [r1], -r8
   13188:	strdeq	r3, [r1], -r8
   1318c:	strdeq	r3, [r1], -r8
   13190:	strdeq	r3, [r1], -r8
   13194:	strdeq	r3, [r1], -r8
   13198:	strdeq	r3, [r1], -r8
   1319c:	strdeq	r3, [r1], -r8
   131a0:	strdeq	r3, [r1], -r8
   131a4:	strdeq	r3, [r1], -r8
   131a8:	strdeq	r3, [r1], -r8
   131ac:	strdeq	r3, [r1], -r8
   131b0:	strdeq	r3, [r1], -r8
   131b4:	strdeq	r3, [r1], -r8
   131b8:	strdeq	r3, [r1], -r8
   131bc:	strdeq	r3, [r1], -r8
   131c0:	strdeq	r3, [r1], -r8
   131c4:	strdeq	r3, [r1], -r8
   131c8:	strdeq	r3, [r1], -r8
   131cc:	andeq	r3, r1, ip, asr r5
   131d0:	andeq	r3, r1, r0, ror #10
   131d4:	andeq	r3, r1, r0, ror #10
   131d8:	andeq	r3, r1, ip, asr r3
   131dc:	andeq	r3, r1, r0, ror #10
   131e0:	andeq	r3, r1, r8, asr #6
   131e4:	andeq	r3, r1, r0, ror #10
   131e8:	andeq	r3, r1, r4, asr r4
   131ec:	andeq	r3, r1, r0, ror #10
   131f0:	andeq	r3, r1, r0, ror #10
   131f4:	andeq	r3, r1, r0, ror #10
   131f8:	andeq	r3, r1, r8, asr #6
   131fc:	andeq	r3, r1, r8, asr #6
   13200:	andeq	r3, r1, r8, asr #6
   13204:	andeq	r3, r1, r8, asr #6
   13208:	andeq	r3, r1, r8, asr #6
   1320c:	andeq	r3, r1, r8, asr #6
   13210:	andeq	r3, r1, r8, asr #6
   13214:	andeq	r3, r1, r8, asr #6
   13218:	andeq	r3, r1, r8, asr #6
   1321c:	andeq	r3, r1, r8, asr #6
   13220:	andeq	r3, r1, r8, asr #6
   13224:	andeq	r3, r1, r8, asr #6
   13228:	andeq	r3, r1, r8, asr #6
   1322c:	andeq	r3, r1, r8, asr #6
   13230:	andeq	r3, r1, r8, asr #6
   13234:	andeq	r3, r1, r8, asr #6
   13238:	andeq	r3, r1, r0, ror #10
   1323c:	andeq	r3, r1, r0, ror #10
   13240:	andeq	r3, r1, r0, ror #10
   13244:	andeq	r3, r1, r0, ror #10
   13248:	andeq	r3, r1, r0, lsr #8
   1324c:	strdeq	r3, [r1], -r8
   13250:	andeq	r3, r1, r8, asr #6
   13254:	andeq	r3, r1, r8, asr #6
   13258:	andeq	r3, r1, r8, asr #6
   1325c:	andeq	r3, r1, r8, asr #6
   13260:	andeq	r3, r1, r8, asr #6
   13264:	andeq	r3, r1, r8, asr #6
   13268:	andeq	r3, r1, r8, asr #6
   1326c:	andeq	r3, r1, r8, asr #6
   13270:	andeq	r3, r1, r8, asr #6
   13274:	andeq	r3, r1, r8, asr #6
   13278:	andeq	r3, r1, r8, asr #6
   1327c:	andeq	r3, r1, r8, asr #6
   13280:	andeq	r3, r1, r8, asr #6
   13284:	andeq	r3, r1, r8, asr #6
   13288:	andeq	r3, r1, r8, asr #6
   1328c:	andeq	r3, r1, r8, asr #6
   13290:	andeq	r3, r1, r8, asr #6
   13294:	andeq	r3, r1, r8, asr #6
   13298:	andeq	r3, r1, r8, asr #6
   1329c:	andeq	r3, r1, r8, asr #6
   132a0:	andeq	r3, r1, r8, asr #6
   132a4:	andeq	r3, r1, r8, asr #6
   132a8:	andeq	r3, r1, r8, asr #6
   132ac:	andeq	r3, r1, r8, asr #6
   132b0:	andeq	r3, r1, r8, asr #6
   132b4:	andeq	r3, r1, r8, asr #6
   132b8:	andeq	r3, r1, r0, ror #10
   132bc:	andeq	r3, r1, r8, lsl #7
   132c0:	andeq	r3, r1, r8, asr #6
   132c4:	andeq	r3, r1, r0, ror #10
   132c8:	andeq	r3, r1, r8, asr #6
   132cc:	andeq	r3, r1, r0, ror #10
   132d0:	andeq	r3, r1, r8, asr #6
   132d4:	andeq	r3, r1, r8, asr #6
   132d8:	andeq	r3, r1, r8, asr #6
   132dc:	andeq	r3, r1, r8, asr #6
   132e0:	andeq	r3, r1, r8, asr #6
   132e4:	andeq	r3, r1, r8, asr #6
   132e8:	andeq	r3, r1, r8, asr #6
   132ec:	andeq	r3, r1, r8, asr #6
   132f0:	andeq	r3, r1, r8, asr #6
   132f4:	andeq	r3, r1, r8, asr #6
   132f8:	andeq	r3, r1, r8, asr #6
   132fc:	andeq	r3, r1, r8, asr #6
   13300:	andeq	r3, r1, r8, asr #6
   13304:	andeq	r3, r1, r8, asr #6
   13308:	andeq	r3, r1, r8, asr #6
   1330c:	andeq	r3, r1, r8, asr #6
   13310:	andeq	r3, r1, r8, asr #6
   13314:	andeq	r3, r1, r8, asr #6
   13318:	andeq	r3, r1, r8, asr #6
   1331c:	andeq	r3, r1, r8, asr #6
   13320:	andeq	r3, r1, r8, asr #6
   13324:	andeq	r3, r1, r8, asr #6
   13328:	andeq	r3, r1, r8, asr #6
   1332c:	andeq	r3, r1, r8, asr #6
   13330:	andeq	r3, r1, r8, asr #6
   13334:	andeq	r3, r1, r8, asr #6
   13338:	andeq	r3, r1, ip, ror #6
   1333c:	andeq	r3, r1, r0, ror #10
   13340:	andeq	r3, r1, ip, ror #6
   13344:	andeq	r3, r1, ip, asr r3
   13348:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1334c:	cmp	r0, #0
   13350:	beq	135b0 <__mempcpy_chk@plt+0x1fd0>
   13354:	ldr	r0, [fp, #16]
   13358:	b	135b4 <__mempcpy_chk@plt+0x1fd4>
   1335c:	mov	sl, #0
   13360:	cmp	r7, #0
   13364:	bne	137cc <__mempcpy_chk@plt+0x21ec>
   13368:	b	1355c <__mempcpy_chk@plt+0x1f7c>
   1336c:	mov	sl, #0
   13370:	cmn	lr, #1
   13374:	beq	13548 <__mempcpy_chk@plt+0x1f68>
   13378:	cmp	r7, #0
   1337c:	cmpeq	lr, #1
   13380:	bne	137cc <__mempcpy_chk@plt+0x21ec>
   13384:	b	1355c <__mempcpy_chk@plt+0x1f7c>
   13388:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1338c:	cmp	r0, #2
   13390:	bne	13580 <__mempcpy_chk@plt+0x1fa0>
   13394:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13398:	tst	r0, #1
   1339c:	bne	13cec <__mempcpy_chk@plt+0x270c>
   133a0:	mov	r9, #0
   133a4:	mov	r0, #92	; 0x5c
   133a8:	b	13594 <__mempcpy_chk@plt+0x1fb4>
   133ac:	mov	r0, #102	; 0x66
   133b0:	b	1359c <__mempcpy_chk@plt+0x1fbc>
   133b4:	mov	r2, #116	; 0x74
   133b8:	b	133c8 <__mempcpy_chk@plt+0x1de8>
   133bc:	mov	r0, #98	; 0x62
   133c0:	b	1359c <__mempcpy_chk@plt+0x1fbc>
   133c4:	mov	r2, #114	; 0x72
   133c8:	ldr	r0, [sp, #60]	; 0x3c
   133cc:	tst	r0, #1
   133d0:	mov	r0, r2
   133d4:	bne	1359c <__mempcpy_chk@plt+0x1fbc>
   133d8:	b	13cec <__mempcpy_chk@plt+0x270c>
   133dc:	ldr	r0, [sp, #84]	; 0x54
   133e0:	tst	r0, #1
   133e4:	beq	13688 <__mempcpy_chk@plt+0x20a8>
   133e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   133ec:	tst	r0, #1
   133f0:	bne	13df4 <__mempcpy_chk@plt+0x2814>
   133f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   133f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   133fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13400:	cmp	r0, #2
   13404:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13408:	movwne	r0, #1
   1340c:	orr	r0, r0, r3
   13410:	tst	r0, #1
   13414:	beq	13b08 <__mempcpy_chk@plt+0x2528>
   13418:	mov	r0, r8
   1341c:	b	13b48 <__mempcpy_chk@plt+0x2568>
   13420:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13424:	mov	r9, #0
   13428:	mov	r5, #63	; 0x3f
   1342c:	cmp	r0, #5
   13430:	beq	137d4 <__mempcpy_chk@plt+0x21f4>
   13434:	cmp	r0, #2
   13438:	bne	13894 <__mempcpy_chk@plt+0x22b4>
   1343c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13440:	tst	r0, #1
   13444:	beq	13898 <__mempcpy_chk@plt+0x22b8>
   13448:	b	13cec <__mempcpy_chk@plt+0x270c>
   1344c:	mov	r0, #118	; 0x76
   13450:	b	1359c <__mempcpy_chk@plt+0x1fbc>
   13454:	mov	r0, #1
   13458:	mov	r5, #39	; 0x27
   1345c:	str	r0, [sp, #52]	; 0x34
   13460:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13464:	cmp	r0, #2
   13468:	bne	134f0 <__mempcpy_chk@plt+0x1f10>
   1346c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13470:	tst	r0, #1
   13474:	bne	13cec <__mempcpy_chk@plt+0x270c>
   13478:	ldr	r3, [sp, #68]	; 0x44
   1347c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13480:	mov	r9, #0
   13484:	clz	r1, r2
   13488:	cmp	r3, #0
   1348c:	mov	r0, r3
   13490:	movwne	r0, #1
   13494:	lsr	r1, r1, #5
   13498:	orrs	r0, r0, r1
   1349c:	moveq	r3, r2
   134a0:	moveq	r2, r0
   134a4:	cmp	r8, r2
   134a8:	str	r3, [sp, #68]	; 0x44
   134ac:	str	r2, [fp, #-52]	; 0xffffffcc
   134b0:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   134b4:	movcc	r0, #39	; 0x27
   134b8:	strbcc	r0, [r1, r8]
   134bc:	add	r0, r8, #1
   134c0:	cmp	r0, r2
   134c4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   134c8:	movcc	r1, #92	; 0x5c
   134cc:	strbcc	r1, [r3, r0]
   134d0:	add	r0, r8, #2
   134d4:	add	r8, r8, #3
   134d8:	cmp	r0, r2
   134dc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   134e0:	movcc	r1, #39	; 0x27
   134e4:	strbcc	r1, [r2, r0]
   134e8:	mov	r0, #0
   134ec:	str	r0, [fp, #-48]	; 0xffffffd0
   134f0:	mov	sl, #1
   134f4:	b	13348 <__mempcpy_chk@plt+0x1d68>
   134f8:	ldr	r0, [sp, #32]
   134fc:	cmp	r0, #1
   13500:	bne	136ac <__mempcpy_chk@plt+0x20cc>
   13504:	str	lr, [sp, #80]	; 0x50
   13508:	bl	114a8 <__ctype_b_loc@plt>
   1350c:	ldr	r0, [r0]
   13510:	ldr	ip, [fp, #-84]	; 0xffffffac
   13514:	mov	r1, #1
   13518:	add	r0, r0, r5, lsl #1
   1351c:	ldrb	r0, [r0, #1]
   13520:	ubfx	sl, r0, #6, #1
   13524:	ldr	r0, [sp, #48]	; 0x30
   13528:	mov	r2, r1
   1352c:	cmp	r1, #1
   13530:	orr	r0, sl, r0
   13534:	bhi	138a0 <__mempcpy_chk@plt+0x22c0>
   13538:	tst	r0, #1
   1353c:	beq	138a0 <__mempcpy_chk@plt+0x22c0>
   13540:	ldr	lr, [sp, #80]	; 0x50
   13544:	b	13348 <__mempcpy_chk@plt+0x1d68>
   13548:	cmp	r7, #0
   1354c:	bne	137c8 <__mempcpy_chk@plt+0x21e8>
   13550:	ldrb	r0, [ip, #1]
   13554:	cmp	r0, #0
   13558:	bne	137c8 <__mempcpy_chk@plt+0x21e8>
   1355c:	mov	r1, #1
   13560:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13564:	cmp	r0, #2
   13568:	bne	13578 <__mempcpy_chk@plt+0x1f98>
   1356c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13570:	tst	r0, #1
   13574:	bne	13cec <__mempcpy_chk@plt+0x270c>
   13578:	mov	sl, r1
   1357c:	b	13348 <__mempcpy_chk@plt+0x1d68>
   13580:	ldr	r1, [sp, #44]	; 0x2c
   13584:	mov	r9, #0
   13588:	mov	r0, #92	; 0x5c
   1358c:	cmp	r1, #0
   13590:	beq	1359c <__mempcpy_chk@plt+0x1fbc>
   13594:	mov	sl, #0
   13598:	b	13ab4 <__mempcpy_chk@plt+0x24d4>
   1359c:	ldr	r1, [sp, #84]	; 0x54
   135a0:	mov	sl, #0
   135a4:	mov	r9, #0
   135a8:	tst	r1, #1
   135ac:	bne	135e8 <__mempcpy_chk@plt+0x2008>
   135b0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   135b4:	cmp	r0, #0
   135b8:	mov	r0, r5
   135bc:	beq	135e0 <__mempcpy_chk@plt+0x2000>
   135c0:	ldr	r1, [fp, #16]
   135c4:	ubfx	r0, r5, #5, #3
   135c8:	mov	r2, #1
   135cc:	ldr	r0, [r1, r0, lsl #2]
   135d0:	and	r1, r5, #31
   135d4:	tst	r0, r2, lsl r1
   135d8:	mov	r0, r5
   135dc:	bne	135e8 <__mempcpy_chk@plt+0x2008>
   135e0:	cmp	r6, #0
   135e4:	beq	13ab4 <__mempcpy_chk@plt+0x24d4>
   135e8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   135ec:	ldr	r6, [fp, #-52]	; 0xffffffcc
   135f0:	tst	r1, #1
   135f4:	bne	13cc8 <__mempcpy_chk@plt+0x26e8>
   135f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   135fc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13600:	cmp	r1, #2
   13604:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13608:	movwne	r1, #1
   1360c:	orr	r1, r1, r5
   13610:	tst	r1, #1
   13614:	bne	13658 <__mempcpy_chk@plt+0x2078>
   13618:	cmp	r8, r6
   1361c:	mov	r5, #1
   13620:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13624:	movcc	r1, #39	; 0x27
   13628:	strbcc	r1, [r2, r8]
   1362c:	add	r1, r8, #1
   13630:	cmp	r1, r6
   13634:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13638:	movcc	r2, #36	; 0x24
   1363c:	strbcc	r2, [r3, r1]
   13640:	add	r1, r8, #2
   13644:	add	r8, r8, #3
   13648:	cmp	r1, r6
   1364c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13650:	movcc	r2, #39	; 0x27
   13654:	strbcc	r2, [r3, r1]
   13658:	cmp	r8, r6
   1365c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13660:	movcc	r1, #92	; 0x5c
   13664:	strbcc	r1, [r2, r8]
   13668:	add	r8, r8, #1
   1366c:	cmp	r8, r6
   13670:	and	r4, r4, sl
   13674:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13678:	strbcc	r0, [r1, r8]
   1367c:	add	r8, r8, #1
   13680:	add	r7, r7, #1
   13684:	b	13068 <__mempcpy_chk@plt+0x1a88>
   13688:	ldr	r0, [sp, #28]
   1368c:	mov	sl, #0
   13690:	mov	r9, #0
   13694:	mov	r5, #0
   13698:	cmp	r0, #0
   1369c:	beq	135b0 <__mempcpy_chk@plt+0x1fd0>
   136a0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   136a4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   136a8:	b	13680 <__mempcpy_chk@plt+0x20a0>
   136ac:	mov	r0, #0
   136b0:	cmn	lr, #1
   136b4:	str	r6, [sp, #76]	; 0x4c
   136b8:	str	r4, [sp, #20]
   136bc:	str	r0, [fp, #-36]	; 0xffffffdc
   136c0:	str	r0, [fp, #-40]	; 0xffffffd8
   136c4:	bne	136d8 <__mempcpy_chk@plt+0x20f8>
   136c8:	mov	r0, ip
   136cc:	bl	114c0 <strlen@plt>
   136d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   136d4:	mov	lr, r0
   136d8:	add	r0, ip, r7
   136dc:	mov	sl, #1
   136e0:	mov	r6, #0
   136e4:	sub	r4, fp, #40	; 0x28
   136e8:	str	lr, [sp, #80]	; 0x50
   136ec:	str	r0, [sp, #36]	; 0x24
   136f0:	str	r6, [sp, #40]	; 0x28
   136f4:	add	r6, r6, r7
   136f8:	sub	r0, fp, #44	; 0x2c
   136fc:	mov	r3, r4
   13700:	add	r1, ip, r6
   13704:	sub	r2, lr, r6
   13708:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   1370c:	cmp	r0, #0
   13710:	beq	13c1c <__mempcpy_chk@plt+0x263c>
   13714:	cmn	r0, #1
   13718:	beq	13bdc <__mempcpy_chk@plt+0x25fc>
   1371c:	ldr	lr, [sp, #80]	; 0x50
   13720:	cmn	r0, #2
   13724:	beq	13be4 <__mempcpy_chk@plt+0x2604>
   13728:	ldr	r2, [sp, #56]	; 0x38
   1372c:	cmp	r0, #2
   13730:	mov	r1, #0
   13734:	movwcc	r1, #1
   13738:	eor	r2, r2, #1
   1373c:	orrs	r1, r2, r1
   13740:	bne	1378c <__mempcpy_chk@plt+0x21ac>
   13744:	ldr	r1, [sp, #40]	; 0x28
   13748:	ldr	r2, [sp, #36]	; 0x24
   1374c:	add	ip, r2, r1
   13750:	mov	r2, #1
   13754:	ldrb	r3, [ip, r2]
   13758:	sub	r6, r3, #94	; 0x5e
   1375c:	cmp	r6, #30
   13760:	bhi	13774 <__mempcpy_chk@plt+0x2194>
   13764:	mov	r4, #1
   13768:	mov	r1, #1073741829	; 0x40000005
   1376c:	tst	r1, r4, lsl r6
   13770:	bne	13ce8 <__mempcpy_chk@plt+0x2708>
   13774:	sub	r3, r3, #91	; 0x5b
   13778:	cmp	r3, #2
   1377c:	bcc	13ce8 <__mempcpy_chk@plt+0x2708>
   13780:	add	r2, r2, #1
   13784:	cmp	r2, r0
   13788:	bcc	13754 <__mempcpy_chk@plt+0x2174>
   1378c:	ldr	r6, [sp, #40]	; 0x28
   13790:	add	r6, r0, r6
   13794:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13798:	bl	113e8 <iswprint@plt>
   1379c:	cmp	r0, #0
   137a0:	sub	r4, fp, #40	; 0x28
   137a4:	movwne	r0, #1
   137a8:	and	sl, sl, r0
   137ac:	mov	r0, r4
   137b0:	bl	1137c <mbsinit@plt>
   137b4:	ldr	lr, [sp, #80]	; 0x50
   137b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   137bc:	cmp	r0, #0
   137c0:	beq	136f0 <__mempcpy_chk@plt+0x2110>
   137c4:	b	13c24 <__mempcpy_chk@plt+0x2644>
   137c8:	mvn	lr, #0
   137cc:	mov	r9, #0
   137d0:	b	13348 <__mempcpy_chk@plt+0x1d68>
   137d4:	ldr	r0, [sp, #24]
   137d8:	cmp	r0, #0
   137dc:	beq	13894 <__mempcpy_chk@plt+0x22b4>
   137e0:	add	r0, r7, #2
   137e4:	cmp	r0, lr
   137e8:	bcs	13894 <__mempcpy_chk@plt+0x22b4>
   137ec:	add	r1, ip, r7
   137f0:	ldrb	r1, [r1, #1]
   137f4:	cmp	r1, #63	; 0x3f
   137f8:	bne	13894 <__mempcpy_chk@plt+0x22b4>
   137fc:	ldrb	r5, [ip, r0]
   13800:	sub	r1, r5, #33	; 0x21
   13804:	cmp	r1, #29
   13808:	bhi	13894 <__mempcpy_chk@plt+0x22b4>
   1380c:	movw	r3, #20929	; 0x51c1
   13810:	mov	r2, #1
   13814:	movt	r3, #14336	; 0x3800
   13818:	tst	r3, r2, lsl r1
   1381c:	beq	13894 <__mempcpy_chk@plt+0x22b4>
   13820:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13824:	tst	r1, #1
   13828:	bne	13dfc <__mempcpy_chk@plt+0x281c>
   1382c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13830:	mov	r7, r0
   13834:	cmp	r8, r1
   13838:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1383c:	movcc	r1, #63	; 0x3f
   13840:	strbcc	r1, [r2, r8]
   13844:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13848:	add	r1, r8, #1
   1384c:	cmp	r1, r2
   13850:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13854:	movcc	r2, #34	; 0x22
   13858:	strbcc	r2, [r3, r1]
   1385c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13860:	add	r1, r8, #2
   13864:	cmp	r1, r2
   13868:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1386c:	movcc	r2, #34	; 0x22
   13870:	strbcc	r2, [r3, r1]
   13874:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13878:	add	r1, r8, #3
   1387c:	add	r8, r8, #4
   13880:	cmp	r1, r2
   13884:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13888:	movcc	r2, #63	; 0x3f
   1388c:	strbcc	r2, [r3, r1]
   13890:	b	13898 <__mempcpy_chk@plt+0x22b8>
   13894:	mov	r5, #63	; 0x3f
   13898:	mov	sl, #0
   1389c:	b	13348 <__mempcpy_chk@plt+0x1d68>
   138a0:	str	r0, [sp, #40]	; 0x28
   138a4:	add	r0, r2, r7
   138a8:	str	r6, [sp, #76]	; 0x4c
   138ac:	add	r1, r7, #1
   138b0:	ldr	lr, [sp, #80]	; 0x50
   138b4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   138b8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   138bc:	mov	r3, #0
   138c0:	str	r0, [sp, #36]	; 0x24
   138c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138c8:	b	1395c <__mempcpy_chk@plt+0x237c>
   138cc:	str	r0, [sp, #76]	; 0x4c
   138d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   138d4:	cmp	r9, #0
   138d8:	movwne	r9, #1
   138dc:	mvn	r7, r0
   138e0:	orr	r7, r7, r9
   138e4:	tst	r7, #1
   138e8:	bne	13938 <__mempcpy_chk@plt+0x2358>
   138ec:	ldr	r6, [fp, #-52]	; 0xffffffcc
   138f0:	cmp	r8, r6
   138f4:	bcs	1390c <__mempcpy_chk@plt+0x232c>
   138f8:	ldr	r7, [fp, #-56]	; 0xffffffc8
   138fc:	mov	r2, r4
   13900:	mov	r4, #39	; 0x27
   13904:	strb	r4, [r7, r8]
   13908:	mov	r4, r2
   1390c:	add	r7, r8, #1
   13910:	cmp	r7, r6
   13914:	bcs	1392c <__mempcpy_chk@plt+0x234c>
   13918:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1391c:	mov	r2, r4
   13920:	mov	r4, #39	; 0x27
   13924:	strb	r4, [r0, r7]
   13928:	mov	r4, r2
   1392c:	add	r8, r8, #2
   13930:	mov	r0, #0
   13934:	b	13940 <__mempcpy_chk@plt+0x2360>
   13938:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1393c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13940:	cmp	r8, r6
   13944:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13948:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1394c:	strbcc	r5, [r2, r8]
   13950:	add	r8, r8, #1
   13954:	ldrb	r5, [ip, r1]
   13958:	add	r1, r1, #1
   1395c:	ldr	r2, [sp, #40]	; 0x28
   13960:	tst	r2, #1
   13964:	beq	139a0 <__mempcpy_chk@plt+0x23c0>
   13968:	ldr	r2, [sp, #76]	; 0x4c
   1396c:	str	r0, [fp, #-48]	; 0xffffffd0
   13970:	tst	r2, #1
   13974:	beq	13998 <__mempcpy_chk@plt+0x23b8>
   13978:	cmp	r8, r6
   1397c:	bcs	13994 <__mempcpy_chk@plt+0x23b4>
   13980:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13984:	mov	r2, r4
   13988:	mov	r4, #92	; 0x5c
   1398c:	strb	r4, [r6, r8]
   13990:	mov	r4, r2
   13994:	add	r8, r8, #1
   13998:	mov	r0, #0
   1399c:	b	13a94 <__mempcpy_chk@plt+0x24b4>
   139a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   139a4:	tst	r2, #1
   139a8:	bne	13cf4 <__mempcpy_chk@plt+0x2714>
   139ac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   139b0:	cmp	r7, #2
   139b4:	movwne	r3, #1
   139b8:	orr	r3, r3, r0
   139bc:	tst	r3, #1
   139c0:	bne	13a1c <__mempcpy_chk@plt+0x243c>
   139c4:	cmp	r8, r6
   139c8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   139cc:	movcc	r3, #39	; 0x27
   139d0:	strbcc	r3, [r2, r8]
   139d4:	add	r3, r8, #1
   139d8:	cmp	r3, r6
   139dc:	bcs	139f4 <__mempcpy_chk@plt+0x2414>
   139e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   139e4:	mov	r7, r4
   139e8:	mov	r4, #36	; 0x24
   139ec:	strb	r4, [r2, r3]
   139f0:	mov	r4, r7
   139f4:	add	r3, r8, #2
   139f8:	cmp	r3, r6
   139fc:	bcs	13a14 <__mempcpy_chk@plt+0x2434>
   13a00:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a04:	mov	r7, r4
   13a08:	mov	r4, #39	; 0x27
   13a0c:	strb	r4, [r2, r3]
   13a10:	mov	r4, r7
   13a14:	add	r8, r8, #3
   13a18:	mov	r0, #1
   13a1c:	cmp	r8, r6
   13a20:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a24:	movcc	r3, #92	; 0x5c
   13a28:	strbcc	r3, [r2, r8]
   13a2c:	add	r3, r8, #1
   13a30:	cmp	r3, r6
   13a34:	bcs	13a54 <__mempcpy_chk@plt+0x2474>
   13a38:	mov	r2, r4
   13a3c:	and	r7, r5, #192	; 0xc0
   13a40:	mov	r4, #48	; 0x30
   13a44:	orr	r7, r4, r7, lsr #6
   13a48:	mov	r4, r2
   13a4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a50:	strb	r7, [r2, r3]
   13a54:	add	r3, r8, #2
   13a58:	cmp	r3, r6
   13a5c:	bcs	13a7c <__mempcpy_chk@plt+0x249c>
   13a60:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a64:	mov	r6, r4
   13a68:	lsr	r7, r5, #3
   13a6c:	mov	r4, #6
   13a70:	bfi	r7, r4, #3, #29
   13a74:	mov	r4, r6
   13a78:	strb	r7, [r2, r3]
   13a7c:	str	r0, [fp, #-48]	; 0xffffffd0
   13a80:	ldr	r0, [sp, #76]	; 0x4c
   13a84:	mov	r3, #6
   13a88:	add	r8, r8, #3
   13a8c:	bfi	r5, r3, #3, #29
   13a90:	mov	r3, #1
   13a94:	ldr	r2, [sp, #36]	; 0x24
   13a98:	and	r9, r3, #1
   13a9c:	cmp	r2, r1
   13aa0:	bhi	138cc <__mempcpy_chk@plt+0x22ec>
   13aa4:	cmp	r9, #0
   13aa8:	sub	r7, r1, #1
   13aac:	mov	r0, r5
   13ab0:	movwne	r9, #1
   13ab4:	cmp	r9, #0
   13ab8:	bne	13afc <__mempcpy_chk@plt+0x251c>
   13abc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13ac0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13ac4:	tst	r5, #1
   13ac8:	beq	1366c <__mempcpy_chk@plt+0x208c>
   13acc:	cmp	r8, r6
   13ad0:	mov	r5, #0
   13ad4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13ad8:	movcc	r1, #39	; 0x27
   13adc:	strbcc	r1, [r2, r8]
   13ae0:	add	r1, r8, #1
   13ae4:	add	r8, r8, #2
   13ae8:	cmp	r1, r6
   13aec:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13af0:	movcc	r2, #39	; 0x27
   13af4:	strbcc	r2, [r3, r1]
   13af8:	b	1366c <__mempcpy_chk@plt+0x208c>
   13afc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13b00:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13b04:	b	1366c <__mempcpy_chk@plt+0x208c>
   13b08:	cmp	r8, r1
   13b0c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13b10:	movcc	r0, #39	; 0x27
   13b14:	strbcc	r0, [r2, r8]
   13b18:	add	r0, r8, #1
   13b1c:	cmp	r0, r1
   13b20:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13b24:	movcc	r2, #36	; 0x24
   13b28:	strbcc	r2, [r3, r0]
   13b2c:	add	r0, r8, #2
   13b30:	cmp	r0, r1
   13b34:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13b38:	movcc	r2, #39	; 0x27
   13b3c:	strbcc	r2, [r3, r0]
   13b40:	add	r0, r8, #3
   13b44:	mov	r3, #1
   13b48:	cmp	r0, r1
   13b4c:	add	r8, r0, #1
   13b50:	str	r3, [fp, #-48]	; 0xffffffd0
   13b54:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13b58:	movcc	r1, #92	; 0x5c
   13b5c:	strbcc	r1, [r2, r0]
   13b60:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13b64:	cmp	r1, #2
   13b68:	beq	13bcc <__mempcpy_chk@plt+0x25ec>
   13b6c:	add	r1, r7, #1
   13b70:	mov	sl, #0
   13b74:	mov	r9, #1
   13b78:	mov	r5, #48	; 0x30
   13b7c:	cmp	r1, lr
   13b80:	bcs	13348 <__mempcpy_chk@plt+0x1d68>
   13b84:	ldrb	r1, [ip, r1]
   13b88:	sub	r1, r1, #48	; 0x30
   13b8c:	uxtb	r1, r1
   13b90:	cmp	r1, #9
   13b94:	bhi	13348 <__mempcpy_chk@plt+0x1d68>
   13b98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13b9c:	cmp	r8, r1
   13ba0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13ba4:	movcc	r1, #48	; 0x30
   13ba8:	strbcc	r1, [r2, r8]
   13bac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13bb0:	add	r1, r0, #2
   13bb4:	add	r8, r0, #3
   13bb8:	cmp	r1, r2
   13bbc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13bc0:	movcc	r2, #48	; 0x30
   13bc4:	strbcc	r2, [r3, r1]
   13bc8:	b	13348 <__mempcpy_chk@plt+0x1d68>
   13bcc:	mov	r0, #48	; 0x30
   13bd0:	mov	r9, #1
   13bd4:	mov	sl, #0
   13bd8:	b	135e0 <__mempcpy_chk@plt+0x2000>
   13bdc:	mov	sl, #0
   13be0:	b	13c1c <__mempcpy_chk@plt+0x263c>
   13be4:	mov	sl, #0
   13be8:	cmp	lr, r6
   13bec:	bls	13c1c <__mempcpy_chk@plt+0x263c>
   13bf0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13bf4:	ldr	r6, [sp, #40]	; 0x28
   13bf8:	ldr	r0, [sp, #36]	; 0x24
   13bfc:	ldrb	r0, [r0, r6]
   13c00:	cmp	r0, #0
   13c04:	beq	13c24 <__mempcpy_chk@plt+0x2644>
   13c08:	add	r6, r6, #1
   13c0c:	add	r0, r7, r6
   13c10:	cmp	r0, lr
   13c14:	bcc	13bf8 <__mempcpy_chk@plt+0x2618>
   13c18:	b	13c24 <__mempcpy_chk@plt+0x2644>
   13c1c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13c20:	ldr	r6, [sp, #40]	; 0x28
   13c24:	mov	r1, r6
   13c28:	ldr	r4, [sp, #20]
   13c2c:	ldr	r6, [sp, #76]	; 0x4c
   13c30:	b	13524 <__mempcpy_chk@plt+0x1f44>
   13c34:	mov	lr, r7
   13c38:	b	13c40 <__mempcpy_chk@plt+0x2660>
   13c3c:	mvn	lr, #0
   13c40:	ldr	r9, [fp, #-64]	; 0xffffffc0
   13c44:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13c48:	eor	r0, r9, #2
   13c4c:	orr	r0, r0, r8
   13c50:	clz	r0, r0
   13c54:	lsr	r0, r0, #5
   13c58:	tst	r1, r0
   13c5c:	bne	13d58 <__mempcpy_chk@plt+0x2778>
   13c60:	mov	r0, r1
   13c64:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13c68:	cmp	r9, #2
   13c6c:	movwne	r1, #1
   13c70:	orr	r0, r0, r1
   13c74:	tst	r0, #1
   13c78:	bne	13d98 <__mempcpy_chk@plt+0x27b8>
   13c7c:	ldr	r0, [sp, #52]	; 0x34
   13c80:	ldr	r1, [sp, #68]	; 0x44
   13c84:	str	lr, [sp, #80]	; 0x50
   13c88:	eor	r0, r0, #1
   13c8c:	tst	r0, #1
   13c90:	bne	13d98 <__mempcpy_chk@plt+0x27b8>
   13c94:	tst	r4, #1
   13c98:	bne	13d60 <__mempcpy_chk@plt+0x2780>
   13c9c:	mov	r7, #0
   13ca0:	cmp	r1, #0
   13ca4:	beq	13d90 <__mempcpy_chk@plt+0x27b0>
   13ca8:	ldr	r0, [sp, #84]	; 0x54
   13cac:	mov	r3, #0
   13cb0:	cmp	r6, #0
   13cb4:	mov	r2, #0
   13cb8:	mov	r4, r1
   13cbc:	str	r3, [fp, #-72]	; 0xffffffb8
   13cc0:	beq	12dfc <__mempcpy_chk@plt+0x181c>
   13cc4:	b	13d98 <__mempcpy_chk@plt+0x27b8>
   13cc8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13ccc:	b	13cf4 <__mempcpy_chk@plt+0x2714>
   13cd0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13cd4:	mov	r2, #1
   13cd8:	mov	lr, r4
   13cdc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13ce0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13ce4:	b	13cf8 <__mempcpy_chk@plt+0x2718>
   13ce8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13cec:	mov	r7, #2
   13cf0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13cf4:	ldr	r2, [sp, #84]	; 0x54
   13cf8:	mov	r0, #0
   13cfc:	ldr	r1, [fp, #12]
   13d00:	tst	r2, #1
   13d04:	mov	r2, r7
   13d08:	mov	r3, lr
   13d0c:	str	r0, [sp, #8]
   13d10:	ldr	r0, [sp, #64]	; 0x40
   13d14:	movwne	r2, #4
   13d18:	cmp	r7, #2
   13d1c:	movne	r2, r7
   13d20:	str	r2, [sp]
   13d24:	mov	r2, ip
   13d28:	bic	r1, r1, #2
   13d2c:	str	r0, [sp, #12]
   13d30:	ldr	r0, [sp, #72]	; 0x48
   13d34:	str	r1, [sp, #4]
   13d38:	mov	r1, r6
   13d3c:	str	r0, [sp, #16]
   13d40:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d44:	bl	12d84 <__mempcpy_chk@plt+0x17a4>
   13d48:	mov	r8, r0
   13d4c:	mov	r0, r8
   13d50:	sub	sp, fp, #28
   13d54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d58:	mov	r7, #2
   13d5c:	b	13cf4 <__mempcpy_chk@plt+0x2714>
   13d60:	mov	r0, #5
   13d64:	ldr	r2, [fp, #-84]	; 0xffffffac
   13d68:	ldr	r3, [sp, #80]	; 0x50
   13d6c:	str	r0, [sp]
   13d70:	ldr	r0, [fp, #12]
   13d74:	str	r0, [sp, #4]
   13d78:	ldr	r0, [fp, #16]
   13d7c:	str	r0, [sp, #8]
   13d80:	ldr	r0, [sp, #64]	; 0x40
   13d84:	str	r0, [sp, #12]
   13d88:	ldr	r0, [sp, #72]	; 0x48
   13d8c:	b	13d3c <__mempcpy_chk@plt+0x275c>
   13d90:	mov	r0, #0
   13d94:	str	r0, [fp, #-72]	; 0xffffffb8
   13d98:	ldr	r1, [sp, #92]	; 0x5c
   13d9c:	cmp	r1, #0
   13da0:	beq	13de0 <__mempcpy_chk@plt+0x2800>
   13da4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13da8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13dac:	tst	r0, #1
   13db0:	bne	13de4 <__mempcpy_chk@plt+0x2804>
   13db4:	ldrb	r0, [r1]
   13db8:	cmp	r0, #0
   13dbc:	beq	13de4 <__mempcpy_chk@plt+0x2804>
   13dc0:	add	r1, r1, #1
   13dc4:	cmp	r8, r6
   13dc8:	strbcc	r0, [r2, r8]
   13dcc:	add	r8, r8, #1
   13dd0:	ldrb	r0, [r1], #1
   13dd4:	cmp	r0, #0
   13dd8:	bne	13dc4 <__mempcpy_chk@plt+0x27e4>
   13ddc:	b	13de4 <__mempcpy_chk@plt+0x2804>
   13de0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13de4:	cmp	r8, r6
   13de8:	movcc	r0, #0
   13dec:	strbcc	r0, [r2, r8]
   13df0:	b	13d4c <__mempcpy_chk@plt+0x276c>
   13df4:	mov	r2, #1
   13df8:	b	13cdc <__mempcpy_chk@plt+0x26fc>
   13dfc:	mov	r7, #5
   13e00:	b	13cf0 <__mempcpy_chk@plt+0x2710>
   13e04:	bl	115c8 <abort@plt>
   13e08:	mov	r3, r2
   13e0c:	mov	r2, #0
   13e10:	b	13e14 <__mempcpy_chk@plt+0x2834>
   13e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e18:	add	fp, sp, #28
   13e1c:	sub	sp, sp, #36	; 0x24
   13e20:	movw	r8, #25352	; 0x6308
   13e24:	cmp	r3, #0
   13e28:	mov	r4, r2
   13e2c:	str	r2, [sp, #24]
   13e30:	mov	r5, r1
   13e34:	mov	r6, r0
   13e38:	str	r0, [sp, #20]
   13e3c:	movt	r8, #3
   13e40:	movne	r8, r3
   13e44:	bl	114cc <__errno_location@plt>
   13e48:	str	r0, [sp, #28]
   13e4c:	cmp	r4, #0
   13e50:	add	sl, r8, #8
   13e54:	ldm	r8, {r3, r9}
   13e58:	ldr	r7, [r0]
   13e5c:	ldr	r1, [r8, #40]	; 0x28
   13e60:	ldr	r2, [r8, #44]	; 0x2c
   13e64:	mov	r0, #0
   13e68:	orreq	r9, r9, #1
   13e6c:	str	r7, [sp, #32]
   13e70:	mov	r7, r5
   13e74:	stm	sp, {r3, r9, sl}
   13e78:	str	r1, [sp, #12]
   13e7c:	str	r2, [sp, #16]
   13e80:	mov	r1, #0
   13e84:	mov	r2, r6
   13e88:	mov	r3, r5
   13e8c:	bl	12d84 <__mempcpy_chk@plt+0x17a4>
   13e90:	add	r4, r0, #1
   13e94:	mov	r5, r0
   13e98:	mov	r0, r4
   13e9c:	bl	21768 <__mempcpy_chk@plt+0x10188>
   13ea0:	mov	r6, r0
   13ea4:	ldr	r0, [r8]
   13ea8:	ldr	r2, [r8, #44]	; 0x2c
   13eac:	ldr	r1, [r8, #40]	; 0x28
   13eb0:	mov	r3, r7
   13eb4:	stm	sp, {r0, r9, sl}
   13eb8:	str	r2, [sp, #16]
   13ebc:	str	r1, [sp, #12]
   13ec0:	mov	r0, r6
   13ec4:	mov	r1, r4
   13ec8:	ldr	r2, [sp, #20]
   13ecc:	bl	12d84 <__mempcpy_chk@plt+0x17a4>
   13ed0:	ldr	r0, [sp, #24]
   13ed4:	ldr	r1, [sp, #32]
   13ed8:	ldr	r2, [sp, #28]
   13edc:	cmp	r0, #0
   13ee0:	str	r1, [r2]
   13ee4:	strne	r5, [r0]
   13ee8:	mov	r0, r6
   13eec:	sub	sp, fp, #28
   13ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ef4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ef8:	add	fp, sp, #24
   13efc:	movw	r5, #16708	; 0x4144
   13f00:	movw	r8, #16704	; 0x4140
   13f04:	movt	r5, #3
   13f08:	movt	r8, #3
   13f0c:	ldr	r0, [r5]
   13f10:	ldr	r4, [r8]
   13f14:	cmp	r0, #2
   13f18:	blt	13f44 <__mempcpy_chk@plt+0x2964>
   13f1c:	add	r7, r4, #12
   13f20:	mov	r6, #0
   13f24:	ldr	r0, [r7, r6, lsl #3]
   13f28:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   13f2c:	ldr	r1, [r5]
   13f30:	add	r2, r6, #2
   13f34:	add	r0, r6, #1
   13f38:	mov	r6, r0
   13f3c:	cmp	r2, r1
   13f40:	blt	13f24 <__mempcpy_chk@plt+0x2944>
   13f44:	ldr	r0, [r4, #4]
   13f48:	movw	r7, #25400	; 0x6338
   13f4c:	movt	r7, #3
   13f50:	cmp	r0, r7
   13f54:	beq	13f6c <__mempcpy_chk@plt+0x298c>
   13f58:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   13f5c:	movw	r0, #16712	; 0x4148
   13f60:	mov	r6, #256	; 0x100
   13f64:	movt	r0, #3
   13f68:	strd	r6, [r0]
   13f6c:	movw	r6, #16712	; 0x4148
   13f70:	movt	r6, #3
   13f74:	cmp	r4, r6
   13f78:	beq	13f88 <__mempcpy_chk@plt+0x29a8>
   13f7c:	mov	r0, r4
   13f80:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   13f84:	str	r6, [r8]
   13f88:	mov	r0, #1
   13f8c:	str	r0, [r5]
   13f90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f94:	movw	r3, #25352	; 0x6308
   13f98:	mvn	r2, #0
   13f9c:	movt	r3, #3
   13fa0:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   13fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fa8:	add	fp, sp, #28
   13fac:	sub	sp, sp, #44	; 0x2c
   13fb0:	mov	r7, r3
   13fb4:	str	r2, [sp, #36]	; 0x24
   13fb8:	str	r1, [sp, #32]
   13fbc:	mov	r5, r0
   13fc0:	bl	114cc <__errno_location@plt>
   13fc4:	cmp	r5, #0
   13fc8:	blt	14134 <__mempcpy_chk@plt+0x2b54>
   13fcc:	cmn	r5, #-2147483647	; 0x80000001
   13fd0:	beq	14134 <__mempcpy_chk@plt+0x2b54>
   13fd4:	movw	r8, #16708	; 0x4144
   13fd8:	movw	r4, #16704	; 0x4140
   13fdc:	str	r0, [sp, #28]
   13fe0:	ldr	r0, [r0]
   13fe4:	movt	r8, #3
   13fe8:	movt	r4, #3
   13fec:	ldr	r1, [r8]
   13ff0:	ldr	r6, [r4]
   13ff4:	str	r0, [sp, #24]
   13ff8:	cmp	r1, r5
   13ffc:	ble	14008 <__mempcpy_chk@plt+0x2a28>
   14000:	mov	sl, r6
   14004:	b	14070 <__mempcpy_chk@plt+0x2a90>
   14008:	movw	r9, #16712	; 0x4148
   1400c:	mov	r0, #8
   14010:	add	r2, r5, #1
   14014:	str	r1, [fp, #-32]	; 0xffffffe0
   14018:	mvn	r3, #-2147483648	; 0x80000000
   1401c:	movt	r9, #3
   14020:	str	r0, [sp]
   14024:	sub	r2, r2, r1
   14028:	sub	r1, fp, #32
   1402c:	subs	r0, r6, r9
   14030:	movne	r0, r6
   14034:	bl	21898 <__mempcpy_chk@plt+0x102b8>
   14038:	cmp	r6, r9
   1403c:	mov	sl, r0
   14040:	str	r0, [r4]
   14044:	ldrdeq	r0, [r9]
   14048:	stmeq	sl, {r0, r1}
   1404c:	ldr	r1, [r8]
   14050:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14054:	add	r0, sl, r1, lsl #3
   14058:	sub	r1, r2, r1
   1405c:	lsl	r2, r1, #3
   14060:	mov	r1, #0
   14064:	bl	114f0 <memset@plt>
   14068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1406c:	str	r0, [r8]
   14070:	mov	r9, sl
   14074:	ldr	r6, [r9, r5, lsl #3]!
   14078:	ldr	r4, [r9, #4]!
   1407c:	ldm	r7, {r0, r1}
   14080:	ldr	r2, [r7, #40]	; 0x28
   14084:	ldr	r3, [r7, #44]	; 0x2c
   14088:	orr	r8, r1, #1
   1408c:	add	r1, r7, #8
   14090:	stm	sp, {r0, r8}
   14094:	add	r0, sp, #8
   14098:	str	r1, [sp, #20]
   1409c:	stm	r0, {r1, r2, r3}
   140a0:	mov	r0, r4
   140a4:	mov	r1, r6
   140a8:	ldr	r2, [sp, #32]
   140ac:	ldr	r3, [sp, #36]	; 0x24
   140b0:	bl	12d84 <__mempcpy_chk@plt+0x17a4>
   140b4:	cmp	r6, r0
   140b8:	bhi	1411c <__mempcpy_chk@plt+0x2b3c>
   140bc:	add	r6, r0, #1
   140c0:	movw	r0, #25400	; 0x6338
   140c4:	movt	r0, #3
   140c8:	str	r6, [sl, r5, lsl #3]
   140cc:	cmp	r4, r0
   140d0:	beq	140dc <__mempcpy_chk@plt+0x2afc>
   140d4:	mov	r0, r4
   140d8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   140dc:	mov	r0, r6
   140e0:	bl	21768 <__mempcpy_chk@plt+0x10188>
   140e4:	str	r0, [r9]
   140e8:	mov	r4, r0
   140ec:	add	r3, sp, #8
   140f0:	ldr	r0, [r7]
   140f4:	ldr	r1, [r7, #40]	; 0x28
   140f8:	ldr	r2, [r7, #44]	; 0x2c
   140fc:	stm	sp, {r0, r8}
   14100:	ldr	r0, [sp, #20]
   14104:	stm	r3, {r0, r1, r2}
   14108:	mov	r0, r4
   1410c:	mov	r1, r6
   14110:	ldr	r2, [sp, #32]
   14114:	ldr	r3, [sp, #36]	; 0x24
   14118:	bl	12d84 <__mempcpy_chk@plt+0x17a4>
   1411c:	ldr	r0, [sp, #28]
   14120:	ldr	r1, [sp, #24]
   14124:	str	r1, [r0]
   14128:	mov	r0, r4
   1412c:	sub	sp, fp, #28
   14130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14134:	bl	115c8 <abort@plt>
   14138:	movw	r3, #25352	; 0x6308
   1413c:	movt	r3, #3
   14140:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   14144:	movw	r3, #25352	; 0x6308
   14148:	mov	r1, r0
   1414c:	mov	r0, #0
   14150:	mvn	r2, #0
   14154:	movt	r3, #3
   14158:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   1415c:	movw	r3, #25352	; 0x6308
   14160:	mov	r2, r1
   14164:	mov	r1, r0
   14168:	mov	r0, #0
   1416c:	movt	r3, #3
   14170:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   14174:	push	{fp, lr}
   14178:	mov	fp, sp
   1417c:	sub	sp, sp, #48	; 0x30
   14180:	vmov.i32	q8, #0	; 0x00000000
   14184:	mov	ip, #32
   14188:	mov	r3, sp
   1418c:	mov	lr, r2
   14190:	cmp	r1, #10
   14194:	add	r2, r3, #16
   14198:	vst1.64	{d16-d17}, [r3], ip
   1419c:	vst1.64	{d16-d17}, [r3]
   141a0:	vst1.64	{d16-d17}, [r2]
   141a4:	beq	141c4 <__mempcpy_chk@plt+0x2be4>
   141a8:	str	r1, [sp]
   141ac:	mov	r3, sp
   141b0:	mov	r1, lr
   141b4:	mvn	r2, #0
   141b8:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   141bc:	mov	sp, fp
   141c0:	pop	{fp, pc}
   141c4:	bl	115c8 <abort@plt>
   141c8:	push	{r4, sl, fp, lr}
   141cc:	add	fp, sp, #8
   141d0:	sub	sp, sp, #48	; 0x30
   141d4:	mov	ip, r3
   141d8:	mov	r3, sp
   141dc:	vmov.i32	q8, #0	; 0x00000000
   141e0:	mov	lr, #32
   141e4:	cmp	r1, #10
   141e8:	add	r4, r3, #16
   141ec:	vst1.64	{d16-d17}, [r3], lr
   141f0:	vst1.64	{d16-d17}, [r3]
   141f4:	vst1.64	{d16-d17}, [r4]
   141f8:	beq	14218 <__mempcpy_chk@plt+0x2c38>
   141fc:	str	r1, [sp]
   14200:	mov	r1, r2
   14204:	mov	r3, sp
   14208:	mov	r2, ip
   1420c:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   14210:	sub	sp, fp, #8
   14214:	pop	{r4, sl, fp, pc}
   14218:	bl	115c8 <abort@plt>
   1421c:	mov	r2, r1
   14220:	mov	r1, r0
   14224:	mov	r0, #0
   14228:	b	14174 <__mempcpy_chk@plt+0x2b94>
   1422c:	mov	r3, r2
   14230:	mov	r2, r1
   14234:	mov	r1, r0
   14238:	mov	r0, #0
   1423c:	b	141c8 <__mempcpy_chk@plt+0x2be8>
   14240:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14244:	add	fp, sp, #24
   14248:	sub	sp, sp, #48	; 0x30
   1424c:	movw	r8, #25352	; 0x6308
   14250:	mov	lr, r0
   14254:	mov	r3, sp
   14258:	mov	ip, r1
   1425c:	movt	r8, #3
   14260:	mov	r1, r3
   14264:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14268:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   1426c:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   14270:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14274:	ubfx	r0, r2, #5, #3
   14278:	and	r2, r2, #31
   1427c:	mov	r4, #1
   14280:	add	r0, r3, r0, lsl #2
   14284:	ldr	r1, [r0, #8]
   14288:	bic	r4, r4, r1, lsr r2
   1428c:	eor	r1, r1, r4, lsl r2
   14290:	mov	r2, ip
   14294:	str	r1, [r0, #8]
   14298:	mov	r0, #0
   1429c:	mov	r1, lr
   142a0:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   142a4:	sub	sp, fp, #24
   142a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   142ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   142b0:	add	fp, sp, #24
   142b4:	sub	sp, sp, #48	; 0x30
   142b8:	movw	lr, #25352	; 0x6308
   142bc:	mov	ip, r0
   142c0:	mov	r3, sp
   142c4:	movt	lr, #3
   142c8:	mov	r2, r3
   142cc:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   142d0:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   142d4:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   142d8:	stm	r2, {r0, r4, r5, r6, r7, r8}
   142dc:	ubfx	r0, r1, #5, #3
   142e0:	and	r1, r1, #31
   142e4:	mov	r7, #1
   142e8:	add	r0, r3, r0, lsl #2
   142ec:	ldr	r2, [r0, #8]
   142f0:	bic	r7, r7, r2, lsr r1
   142f4:	eor	r1, r2, r7, lsl r1
   142f8:	mvn	r2, #0
   142fc:	str	r1, [r0, #8]
   14300:	mov	r0, #0
   14304:	mov	r1, ip
   14308:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   1430c:	sub	sp, fp, #24
   14310:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14314:	push	{r4, r5, r6, r7, fp, lr}
   14318:	add	fp, sp, #16
   1431c:	sub	sp, sp, #48	; 0x30
   14320:	movw	lr, #25352	; 0x6308
   14324:	mov	ip, r0
   14328:	mov	r3, sp
   1432c:	movt	lr, #3
   14330:	mov	r2, r3
   14334:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   14338:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   1433c:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   14340:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14344:	mov	r1, ip
   14348:	mvn	r2, #0
   1434c:	ldr	r0, [sp, #12]
   14350:	orr	r0, r0, #67108864	; 0x4000000
   14354:	str	r0, [sp, #12]
   14358:	mov	r0, #0
   1435c:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   14360:	sub	sp, fp, #16
   14364:	pop	{r4, r5, r6, r7, fp, pc}
   14368:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1436c:	add	fp, sp, #24
   14370:	sub	sp, sp, #48	; 0x30
   14374:	movw	r8, #25352	; 0x6308
   14378:	mov	ip, r1
   1437c:	mov	lr, r0
   14380:	mov	r3, sp
   14384:	movt	r8, #3
   14388:	mov	r2, r3
   1438c:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14390:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14394:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14398:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1439c:	mov	r1, lr
   143a0:	mov	r2, ip
   143a4:	ldr	r0, [sp, #12]
   143a8:	orr	r0, r0, #67108864	; 0x4000000
   143ac:	str	r0, [sp, #12]
   143b0:	mov	r0, #0
   143b4:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   143b8:	sub	sp, fp, #24
   143bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   143c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143c4:	add	fp, sp, #24
   143c8:	sub	sp, sp, #96	; 0x60
   143cc:	mov	lr, sp
   143d0:	vmov.i32	q8, #0	; 0x00000000
   143d4:	mov	ip, r2
   143d8:	cmp	r1, #10
   143dc:	add	r3, lr, #16
   143e0:	mov	r2, lr
   143e4:	vst1.64	{d16-d17}, [r3]
   143e8:	mov	r3, #28
   143ec:	vst1.64	{d16-d17}, [r2], r3
   143f0:	vst1.32	{d16-d17}, [r2]
   143f4:	beq	14434 <__mempcpy_chk@plt+0x2e54>
   143f8:	str	r1, [sp, #48]	; 0x30
   143fc:	add	r3, sp, #48	; 0x30
   14400:	ldm	lr!, {r2, r4, r5, r6, r7}
   14404:	add	r1, r3, #4
   14408:	stmia	r1!, {r2, r4, r5, r6, r7}
   1440c:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   14410:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14414:	mvn	r2, #0
   14418:	ldr	r1, [sp, #60]	; 0x3c
   1441c:	orr	r1, r1, #67108864	; 0x4000000
   14420:	str	r1, [sp, #60]	; 0x3c
   14424:	mov	r1, ip
   14428:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   1442c:	sub	sp, fp, #24
   14430:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14434:	bl	115c8 <abort@plt>
   14438:	push	{fp, lr}
   1443c:	mov	fp, sp
   14440:	sub	sp, sp, #8
   14444:	mvn	ip, #0
   14448:	str	ip, [sp]
   1444c:	bl	14458 <__mempcpy_chk@plt+0x2e78>
   14450:	mov	sp, fp
   14454:	pop	{fp, pc}
   14458:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1445c:	add	fp, sp, #24
   14460:	sub	sp, sp, #48	; 0x30
   14464:	movw	ip, #25352	; 0x6308
   14468:	mov	lr, r3
   1446c:	mov	r3, sp
   14470:	cmp	r1, #0
   14474:	movt	ip, #3
   14478:	cmpne	r2, #0
   1447c:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   14480:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   14484:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14488:	stm	r3, {r4, r5, r6, r7, r8, r9}
   1448c:	mov	r3, #10
   14490:	str	r3, [sp]
   14494:	bne	1449c <__mempcpy_chk@plt+0x2ebc>
   14498:	bl	115c8 <abort@plt>
   1449c:	ldr	ip, [fp, #8]
   144a0:	str	r2, [sp, #44]	; 0x2c
   144a4:	str	r1, [sp, #40]	; 0x28
   144a8:	mov	r3, sp
   144ac:	mov	r1, lr
   144b0:	mov	r2, ip
   144b4:	bl	13fa4 <__mempcpy_chk@plt+0x29c4>
   144b8:	sub	sp, fp, #24
   144bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   144c0:	push	{fp, lr}
   144c4:	mov	fp, sp
   144c8:	sub	sp, sp, #8
   144cc:	mov	r3, r2
   144d0:	mov	r2, r1
   144d4:	mov	r1, r0
   144d8:	mvn	r0, #0
   144dc:	str	r0, [sp]
   144e0:	mov	r0, #0
   144e4:	bl	14458 <__mempcpy_chk@plt+0x2e78>
   144e8:	mov	sp, fp
   144ec:	pop	{fp, pc}
   144f0:	push	{fp, lr}
   144f4:	mov	fp, sp
   144f8:	sub	sp, sp, #8
   144fc:	mov	ip, r2
   14500:	mov	r2, r1
   14504:	mov	r1, r0
   14508:	str	r3, [sp]
   1450c:	mov	r0, #0
   14510:	mov	r3, ip
   14514:	bl	14458 <__mempcpy_chk@plt+0x2e78>
   14518:	mov	sp, fp
   1451c:	pop	{fp, pc}
   14520:	movw	r3, #16720	; 0x4150
   14524:	movt	r3, #3
   14528:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   1452c:	movw	r3, #16720	; 0x4150
   14530:	mov	r2, r1
   14534:	mov	r1, r0
   14538:	mov	r0, #0
   1453c:	movt	r3, #3
   14540:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   14544:	movw	r3, #16720	; 0x4150
   14548:	mvn	r2, #0
   1454c:	movt	r3, #3
   14550:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   14554:	movw	r3, #16720	; 0x4150
   14558:	mov	r1, r0
   1455c:	mov	r0, #0
   14560:	mvn	r2, #0
   14564:	movt	r3, #3
   14568:	b	13fa4 <__mempcpy_chk@plt+0x29c4>
   1456c:	push	{r4, r5, fp, lr}
   14570:	add	fp, sp, #8
   14574:	mov	r5, r0
   14578:	mov	r4, r1
   1457c:	mov	r0, #0
   14580:	mov	r2, #5
   14584:	mov	r1, r5
   14588:	bl	113ac <dcgettext@plt>
   1458c:	cmp	r0, r5
   14590:	popne	{r4, r5, fp, pc}
   14594:	bl	21fac <__mempcpy_chk@plt+0x109cc>
   14598:	ldrb	r1, [r0]
   1459c:	and	r1, r1, #223	; 0xdf
   145a0:	cmp	r1, #71	; 0x47
   145a4:	beq	1460c <__mempcpy_chk@plt+0x302c>
   145a8:	cmp	r1, #85	; 0x55
   145ac:	bne	14630 <__mempcpy_chk@plt+0x3050>
   145b0:	ldrb	r1, [r0, #1]
   145b4:	and	r1, r1, #223	; 0xdf
   145b8:	cmp	r1, #84	; 0x54
   145bc:	bne	14630 <__mempcpy_chk@plt+0x3050>
   145c0:	ldrb	r1, [r0, #2]
   145c4:	and	r1, r1, #223	; 0xdf
   145c8:	cmp	r1, #70	; 0x46
   145cc:	ldrbeq	r1, [r0, #3]
   145d0:	cmpeq	r1, #45	; 0x2d
   145d4:	bne	14630 <__mempcpy_chk@plt+0x3050>
   145d8:	ldrb	r1, [r0, #4]
   145dc:	cmp	r1, #56	; 0x38
   145e0:	ldrbeq	r0, [r0, #5]
   145e4:	cmpeq	r0, #0
   145e8:	bne	14630 <__mempcpy_chk@plt+0x3050>
   145ec:	ldrb	r1, [r5]
   145f0:	movw	r2, #11348	; 0x2c54
   145f4:	movw	r0, #11352	; 0x2c58
   145f8:	movt	r2, #2
   145fc:	movt	r0, #2
   14600:	cmp	r1, #96	; 0x60
   14604:	moveq	r0, r2
   14608:	pop	{r4, r5, fp, pc}
   1460c:	ldrb	r1, [r0, #1]
   14610:	and	r1, r1, #223	; 0xdf
   14614:	cmp	r1, #66	; 0x42
   14618:	bne	14630 <__mempcpy_chk@plt+0x3050>
   1461c:	ldrb	r1, [r0, #2]
   14620:	cmp	r1, #49	; 0x31
   14624:	ldrbeq	r1, [r0, #3]
   14628:	cmpeq	r1, #56	; 0x38
   1462c:	beq	1464c <__mempcpy_chk@plt+0x306c>
   14630:	movw	r1, #11342	; 0x2c4e
   14634:	movw	r0, #11346	; 0x2c52
   14638:	cmp	r4, #9
   1463c:	movt	r1, #2
   14640:	movt	r0, #2
   14644:	moveq	r0, r1
   14648:	pop	{r4, r5, fp, pc}
   1464c:	ldrb	r1, [r0, #4]
   14650:	cmp	r1, #48	; 0x30
   14654:	ldrbeq	r1, [r0, #5]
   14658:	cmpeq	r1, #51	; 0x33
   1465c:	bne	14630 <__mempcpy_chk@plt+0x3050>
   14660:	ldrb	r1, [r0, #6]
   14664:	cmp	r1, #48	; 0x30
   14668:	ldrbeq	r0, [r0, #7]
   1466c:	cmpeq	r0, #0
   14670:	bne	14630 <__mempcpy_chk@plt+0x3050>
   14674:	ldrb	r1, [r5]
   14678:	movw	r2, #11356	; 0x2c5c
   1467c:	movw	r0, #11360	; 0x2c60
   14680:	movt	r2, #2
   14684:	movt	r0, #2
   14688:	b	14600 <__mempcpy_chk@plt+0x3020>
   1468c:	andeq	r0, r0, r0
   14690:	push	{fp, lr}
   14694:	mov	fp, sp
   14698:	mov	lr, r0
   1469c:	movw	r0, #25660	; 0x643c
   146a0:	mov	ip, r1
   146a4:	ldrb	r1, [r2, #28]
   146a8:	movt	r0, #3
   146ac:	ldr	r3, [r0]
   146b0:	mov	r0, #16
   146b4:	and	r1, r1, #111	; 0x6f
   146b8:	and	r0, r0, r3, lsr #21
   146bc:	orr	r0, r1, r0
   146c0:	mov	r1, lr
   146c4:	orr	r0, r0, #128	; 0x80
   146c8:	strb	r0, [r2, #28]
   146cc:	mov	r0, r2
   146d0:	mov	r2, ip
   146d4:	bl	1470c <__mempcpy_chk@plt+0x312c>
   146d8:	cmp	r0, #0
   146dc:	moveq	r0, #0
   146e0:	popeq	{fp, pc}
   146e4:	movw	r1, #11832	; 0x2e38
   146e8:	mov	r2, #5
   146ec:	movt	r1, #2
   146f0:	ldr	r0, [r1, r0, lsl #2]
   146f4:	movw	r1, #11448	; 0x2cb8
   146f8:	movt	r1, #2
   146fc:	add	r1, r1, r0
   14700:	mov	r0, #0
   14704:	pop	{fp, lr}
   14708:	b	113ac <dcgettext@plt>
   1470c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14710:	add	fp, sp, #28
   14714:	sub	sp, sp, #140	; 0x8c
   14718:	str	r1, [sp, #24]
   1471c:	mov	r1, #0
   14720:	str	r0, [sp, #28]
   14724:	mov	sl, r2
   14728:	str	r3, [sp, #20]
   1472c:	str	r1, [fp, #-52]	; 0xffffffcc
   14730:	str	r1, [r0, #8]
   14734:	str	r3, [r0, #12]
   14738:	str	r1, [r0, #24]
   1473c:	ldrb	r1, [r0, #28]
   14740:	and	r1, r1, #144	; 0x90
   14744:	strb	r1, [r0, #28]
   14748:	ldr	r9, [r0]
   1474c:	ldr	r0, [r0, #4]
   14750:	cmp	r0, #159	; 0x9f
   14754:	bls	15304 <__mempcpy_chk@plt+0x3d24>
   14758:	ldr	r1, [sp, #28]
   1475c:	mov	r0, #160	; 0xa0
   14760:	mov	r2, #160	; 0xa0
   14764:	str	r0, [r1, #8]
   14768:	mov	r0, r9
   1476c:	mov	r1, #0
   14770:	bl	114f0 <memset@plt>
   14774:	mov	r0, #31
   14778:	str	r0, [r9, #64]	; 0x40
   1477c:	movw	r0, #43689	; 0xaaa9
   14780:	movt	r0, #2730	; 0xaaa
   14784:	cmp	sl, r0
   14788:	bhi	148f8 <__mempcpy_chk@plt+0x3318>
   1478c:	add	r0, sl, #1
   14790:	str	r0, [r9, #4]
   14794:	str	r0, [sp, #12]
   14798:	lsl	r0, r0, #3
   1479c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   147a0:	str	r0, [r9]
   147a4:	mov	r0, #1
   147a8:	mov	r4, r0
   147ac:	lsl	r0, r0, #1
   147b0:	cmp	r4, sl
   147b4:	bls	147a8 <__mempcpy_chk@plt+0x31c8>
   147b8:	mov	r0, #12
   147bc:	mov	r1, r4
   147c0:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   147c4:	str	r0, [r9, #32]
   147c8:	sub	r0, r4, #1
   147cc:	str	r0, [r9, #68]	; 0x44
   147d0:	bl	1140c <__ctype_get_mb_cur_max@plt>
   147d4:	str	r0, [r9, #92]	; 0x5c
   147d8:	mov	r0, #14
   147dc:	bl	11574 <nl_langinfo@plt>
   147e0:	ldrb	r1, [r0]
   147e4:	orr	r1, r1, #32
   147e8:	cmp	r1, #117	; 0x75
   147ec:	bne	14838 <__mempcpy_chk@plt+0x3258>
   147f0:	ldrb	r1, [r0, #1]
   147f4:	orr	r1, r1, #32
   147f8:	cmp	r1, #116	; 0x74
   147fc:	bne	14838 <__mempcpy_chk@plt+0x3258>
   14800:	ldrb	r1, [r0, #2]
   14804:	orr	r1, r1, #32
   14808:	cmp	r1, #102	; 0x66
   1480c:	bne	14838 <__mempcpy_chk@plt+0x3258>
   14810:	ldrb	r1, [r0, #3]!
   14814:	cmp	r1, #45	; 0x2d
   14818:	movw	r1, #11948	; 0x2eac
   1481c:	addeq	r0, r0, #1
   14820:	movt	r1, #2
   14824:	bl	112ec <strcmp@plt>
   14828:	cmp	r0, #0
   1482c:	ldrbeq	r0, [r9, #88]	; 0x58
   14830:	orreq	r0, r0, #4
   14834:	strbeq	r0, [r9, #88]	; 0x58
   14838:	ldrb	r0, [r9, #88]	; 0x58
   1483c:	and	r1, r0, #247	; 0xf7
   14840:	strb	r1, [r9, #88]	; 0x58
   14844:	ldr	r1, [r9, #92]	; 0x5c
   14848:	cmp	r1, #2
   1484c:	blt	148e4 <__mempcpy_chk@plt+0x3304>
   14850:	tst	r0, #4
   14854:	bne	148d8 <__mempcpy_chk@plt+0x32f8>
   14858:	mov	r0, #32
   1485c:	mov	r1, #1
   14860:	mov	r8, #1
   14864:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   14868:	cmp	r0, #0
   1486c:	str	r0, [r9, #60]	; 0x3c
   14870:	beq	148f8 <__mempcpy_chk@plt+0x3318>
   14874:	mov	r7, #0
   14878:	mov	r5, #0
   1487c:	mov	r6, #0
   14880:	add	r4, r7, r6
   14884:	mov	r0, r4
   14888:	bl	114fc <btowc@plt>
   1488c:	cmn	r0, #1
   14890:	ldrne	r1, [r9, #60]	; 0x3c
   14894:	ldrne	r2, [r1, r5, lsl #2]
   14898:	orrne	r2, r2, r8, lsl r6
   1489c:	strne	r2, [r1, r5, lsl #2]
   148a0:	cmp	r4, #127	; 0x7f
   148a4:	bhi	148b8 <__mempcpy_chk@plt+0x32d8>
   148a8:	cmp	r4, r0
   148ac:	ldrbne	r0, [r9, #88]	; 0x58
   148b0:	orrne	r0, r0, #8
   148b4:	strbne	r0, [r9, #88]	; 0x58
   148b8:	add	r6, r6, #1
   148bc:	cmp	r6, #32
   148c0:	bne	14880 <__mempcpy_chk@plt+0x32a0>
   148c4:	add	r5, r5, #1
   148c8:	add	r7, r7, #32
   148cc:	cmp	r5, #8
   148d0:	bne	1487c <__mempcpy_chk@plt+0x329c>
   148d4:	b	148e4 <__mempcpy_chk@plt+0x3304>
   148d8:	movw	r0, #11900	; 0x2e7c
   148dc:	movt	r0, #2
   148e0:	str	r0, [r9, #60]	; 0x3c
   148e4:	ldr	r0, [r9]
   148e8:	cmp	r0, #0
   148ec:	ldrne	r0, [r9, #32]
   148f0:	cmpne	r0, #0
   148f4:	bne	1491c <__mempcpy_chk@plt+0x333c>
   148f8:	mov	r4, #12
   148fc:	mov	r0, r9
   14900:	str	r4, [fp, #-52]	; 0xffffffcc
   14904:	bl	159ac <__mempcpy_chk@plt+0x43cc>
   14908:	ldr	r0, [sp, #28]
   1490c:	mov	r1, #0
   14910:	str	r1, [r0]
   14914:	str	r1, [r0, #4]
   14918:	b	1528c <__mempcpy_chk@plt+0x3cac>
   1491c:	movw	r0, #0
   14920:	movw	r1, #0
   14924:	mov	r4, #0
   14928:	movt	r0, #0
   1492c:	movt	r1, #0
   14930:	str	r4, [fp, #-52]	; 0xffffffcc
   14934:	orrs	r0, r1, r0
   14938:	str	r0, [sp, #8]
   1493c:	beq	14954 <__mempcpy_chk@plt+0x3374>
   14940:	add	r0, r9, #136	; 0x88
   14944:	mov	r1, #0
   14948:	bl	11364 <pthread_mutex_init@plt>
   1494c:	cmp	r0, #0
   14950:	bne	148f8 <__mempcpy_chk@plt+0x3318>
   14954:	ldr	r0, [sp, #28]
   14958:	add	r5, sp, #32
   1495c:	mov	r1, #0
   14960:	mov	r2, #76	; 0x4c
   14964:	ldr	r8, [r0, #20]
   14968:	add	r0, r5, #4
   1496c:	bl	114f0 <memset@plt>
   14970:	ldr	r0, [sp, #24]
   14974:	ldr	r1, [sp, #20]
   14978:	add	r3, r5, #44	; 0x2c
   1497c:	vdup.32	q8, sl
   14980:	str	r0, [sp, #32]
   14984:	str	r8, [sp, #96]	; 0x60
   14988:	ubfx	r0, r1, #22, #1
   1498c:	strb	r0, [sp, #104]	; 0x68
   14990:	and	r0, r1, #4194304	; 0x400000
   14994:	orrs	r1, r0, r8
   14998:	str	r0, [sp, #16]
   1499c:	movwne	r1, #1
   149a0:	cmp	sl, #1
   149a4:	strb	r1, [sp, #107]	; 0x6b
   149a8:	ldr	r0, [r9, #92]	; 0x5c
   149ac:	str	r0, [sp, #112]	; 0x70
   149b0:	ldrb	r2, [r9, #88]	; 0x58
   149b4:	vst1.32	{d16-d17}, [r3]
   149b8:	ubfx	r3, r2, #3, #1
   149bc:	strb	r3, [sp, #106]	; 0x6a
   149c0:	ubfx	r2, r2, #2, #1
   149c4:	strb	r2, [sp, #105]	; 0x69
   149c8:	blt	149ec <__mempcpy_chk@plt+0x340c>
   149cc:	ldr	r1, [sp, #12]
   149d0:	add	r0, sp, #32
   149d4:	bl	17c20 <__mempcpy_chk@plt+0x6640>
   149d8:	cmp	r0, #0
   149dc:	bne	14a5c <__mempcpy_chk@plt+0x347c>
   149e0:	ldr	r0, [r9, #92]	; 0x5c
   149e4:	ldr	r4, [sp, #36]	; 0x24
   149e8:	ldrb	r1, [sp, #107]	; 0x6b
   149ec:	cmp	r1, #0
   149f0:	ldr	r1, [sp, #24]
   149f4:	moveq	r4, r1
   149f8:	ldr	r1, [sp, #16]
   149fc:	str	r4, [sp, #36]	; 0x24
   14a00:	cmp	r1, #0
   14a04:	beq	14a64 <__mempcpy_chk@plt+0x3484>
   14a08:	cmp	r0, #2
   14a0c:	blt	14a78 <__mempcpy_chk@plt+0x3498>
   14a10:	add	r4, sp, #32
   14a14:	mov	r0, r4
   14a18:	bl	17cc0 <__mempcpy_chk@plt+0x66e0>
   14a1c:	cmp	r0, #0
   14a20:	bne	14a5c <__mempcpy_chk@plt+0x347c>
   14a24:	ldr	r0, [sp, #64]	; 0x40
   14a28:	cmp	r0, sl
   14a2c:	bge	14b0c <__mempcpy_chk@plt+0x352c>
   14a30:	ldr	r1, [r9, #92]	; 0x5c
   14a34:	ldr	r2, [sp, #60]	; 0x3c
   14a38:	ldr	r0, [sp, #68]	; 0x44
   14a3c:	add	r1, r1, r2
   14a40:	cmp	r0, r1
   14a44:	bgt	14b0c <__mempcpy_chk@plt+0x352c>
   14a48:	lsl	r1, r0, #1
   14a4c:	mov	r0, r4
   14a50:	bl	17c20 <__mempcpy_chk@plt+0x6640>
   14a54:	cmp	r0, #0
   14a58:	beq	14a14 <__mempcpy_chk@plt+0x3434>
   14a5c:	ldr	sl, [sp, #28]
   14a60:	b	14c60 <__mempcpy_chk@plt+0x3680>
   14a64:	cmp	r0, #2
   14a68:	blt	14a84 <__mempcpy_chk@plt+0x34a4>
   14a6c:	add	r0, sp, #32
   14a70:	bl	1829c <__mempcpy_chk@plt+0x6cbc>
   14a74:	b	14b0c <__mempcpy_chk@plt+0x352c>
   14a78:	add	r0, sp, #32
   14a7c:	bl	18230 <__mempcpy_chk@plt+0x6c50>
   14a80:	b	14b0c <__mempcpy_chk@plt+0x352c>
   14a84:	ldr	r0, [sp, #68]	; 0x44
   14a88:	cmp	r8, #0
   14a8c:	beq	14b04 <__mempcpy_chk@plt+0x3524>
   14a90:	ldr	r2, [sp, #80]	; 0x50
   14a94:	ldr	r1, [sp, #60]	; 0x3c
   14a98:	cmp	r0, r2
   14a9c:	movgt	r0, r2
   14aa0:	cmp	r1, r0
   14aa4:	bge	14af8 <__mempcpy_chk@plt+0x3518>
   14aa8:	ldr	r3, [sp, #56]	; 0x38
   14aac:	ldr	r2, [sp, #32]
   14ab0:	ldr	r7, [sp, #96]	; 0x60
   14ab4:	add	r3, r3, r1
   14ab8:	ldrb	r2, [r2, r3]
   14abc:	ldrb	r2, [r7, r2]
   14ac0:	strb	r2, [r4, r1]
   14ac4:	b	14ae8 <__mempcpy_chk@plt+0x3508>
   14ac8:	ldr	r2, [sp, #32]
   14acc:	ldr	r7, [sp, #56]	; 0x38
   14ad0:	ldr	r6, [sp, #96]	; 0x60
   14ad4:	ldr	r3, [sp, #36]	; 0x24
   14ad8:	add	r2, r2, r7
   14adc:	ldrb	r2, [r2, r1]
   14ae0:	ldrb	r2, [r6, r2]
   14ae4:	strb	r2, [r3, r1]
   14ae8:	add	r1, r1, #1
   14aec:	cmp	r1, r0
   14af0:	blt	14ac8 <__mempcpy_chk@plt+0x34e8>
   14af4:	mov	r1, r0
   14af8:	str	r1, [sp, #64]	; 0x40
   14afc:	str	r1, [sp, #60]	; 0x3c
   14b00:	b	14b0c <__mempcpy_chk@plt+0x352c>
   14b04:	str	r0, [sp, #64]	; 0x40
   14b08:	str	r0, [sp, #60]	; 0x3c
   14b0c:	ldr	sl, [sp, #28]
   14b10:	mov	r5, #0
   14b14:	ldr	r6, [sp, #20]
   14b18:	sub	r8, fp, #48	; 0x30
   14b1c:	add	r7, sp, #32
   14b20:	str	r5, [fp, #-52]	; 0xffffffcc
   14b24:	mov	r0, r8
   14b28:	mov	r1, r7
   14b2c:	str	r5, [sl, #24]
   14b30:	orr	r2, r6, #8388608	; 0x800000
   14b34:	ldr	r4, [sl]
   14b38:	str	r6, [r4, #128]	; 0x80
   14b3c:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   14b40:	ldr	r1, [sp, #72]	; 0x48
   14b44:	mov	r2, r8
   14b48:	mov	r3, r6
   14b4c:	str	r5, [sp]
   14b50:	add	r0, r1, r0
   14b54:	mov	r1, sl
   14b58:	str	r0, [sp, #72]	; 0x48
   14b5c:	sub	r0, fp, #52	; 0x34
   14b60:	str	r0, [sp, #4]
   14b64:	mov	r0, r7
   14b68:	bl	184d8 <__mempcpy_chk@plt+0x6ef8>
   14b6c:	mov	r6, r0
   14b70:	cmp	r0, #0
   14b74:	bne	14b84 <__mempcpy_chk@plt+0x35a4>
   14b78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b7c:	cmp	r0, #0
   14b80:	bne	15338 <__mempcpy_chk@plt+0x3d58>
   14b84:	mov	r0, #2
   14b88:	sub	r3, fp, #40	; 0x28
   14b8c:	mov	r1, #0
   14b90:	mov	r2, #0
   14b94:	str	r0, [fp, #-36]	; 0xffffffdc
   14b98:	mov	r0, r4
   14b9c:	str	r5, [fp, #-40]	; 0xffffffd8
   14ba0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   14ba4:	mov	r7, r0
   14ba8:	cmp	r6, #0
   14bac:	beq	14bd8 <__mempcpy_chk@plt+0x35f8>
   14bb0:	mov	r0, #16
   14bb4:	sub	r3, fp, #40	; 0x28
   14bb8:	mov	r1, r6
   14bbc:	mov	r2, r7
   14bc0:	str	r0, [fp, #-36]	; 0xffffffdc
   14bc4:	mov	r0, #0
   14bc8:	str	r0, [fp, #-40]	; 0xffffffd8
   14bcc:	mov	r0, r4
   14bd0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   14bd4:	b	14bdc <__mempcpy_chk@plt+0x35fc>
   14bd8:	mov	r0, r7
   14bdc:	cmp	r7, #0
   14be0:	cmpne	r0, #0
   14be4:	beq	15330 <__mempcpy_chk@plt+0x3d50>
   14be8:	str	r0, [r9, #52]	; 0x34
   14bec:	ldr	r8, [sl]
   14bf0:	ldr	r0, [r8, #4]
   14bf4:	lsl	r0, r0, #2
   14bf8:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   14bfc:	str	r0, [r8, #12]
   14c00:	ldr	r0, [r8, #4]
   14c04:	lsl	r0, r0, #2
   14c08:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   14c0c:	str	r0, [r8, #16]
   14c10:	ldr	r0, [r8, #4]
   14c14:	add	r0, r0, r0, lsl #1
   14c18:	lsl	r0, r0, #2
   14c1c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   14c20:	str	r0, [r8, #20]
   14c24:	ldr	r0, [r8, #4]
   14c28:	add	r0, r0, r0, lsl #1
   14c2c:	lsl	r0, r0, #2
   14c30:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   14c34:	str	r0, [r8, #24]
   14c38:	ldr	r1, [r8, #12]
   14c3c:	cmp	r1, #0
   14c40:	ldrne	r1, [r8, #16]
   14c44:	cmpne	r1, #0
   14c48:	beq	14c5c <__mempcpy_chk@plt+0x367c>
   14c4c:	cmp	r0, #0
   14c50:	ldrne	r0, [r8, #20]
   14c54:	cmpne	r0, #0
   14c58:	bne	14ca4 <__mempcpy_chk@plt+0x36c4>
   14c5c:	mov	r0, #12
   14c60:	str	r0, [fp, #-52]	; 0xffffffcc
   14c64:	mov	r0, sl
   14c68:	bl	17b9c <__mempcpy_chk@plt+0x65bc>
   14c6c:	add	r0, sp, #32
   14c70:	bl	17bec <__mempcpy_chk@plt+0x660c>
   14c74:	ldr	r0, [sp, #8]
   14c78:	cmp	r0, #0
   14c7c:	beq	14c88 <__mempcpy_chk@plt+0x36a8>
   14c80:	add	r0, r9, #136	; 0x88
   14c84:	bl	11304 <pthread_mutex_destroy@plt>
   14c88:	mov	r0, r9
   14c8c:	bl	159ac <__mempcpy_chk@plt+0x43cc>
   14c90:	mov	r0, #0
   14c94:	str	r0, [sl]
   14c98:	str	r0, [sl, #4]
   14c9c:	ldr	r4, [fp, #-52]	; 0xffffffcc
   14ca0:	b	1528c <__mempcpy_chk@plt+0x3cac>
   14ca4:	ldr	r0, [sl, #24]
   14ca8:	lsl	r0, r0, #2
   14cac:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   14cb0:	cmp	r0, #0
   14cb4:	str	r0, [r8, #132]	; 0x84
   14cb8:	beq	14d2c <__mempcpy_chk@plt+0x374c>
   14cbc:	ldr	r1, [sl, #24]
   14cc0:	cmp	r1, #0
   14cc4:	beq	14cdc <__mempcpy_chk@plt+0x36fc>
   14cc8:	mov	r2, #0
   14ccc:	str	r2, [r0, r2, lsl #2]
   14cd0:	add	r2, r2, #1
   14cd4:	cmp	r1, r2
   14cd8:	bne	14ccc <__mempcpy_chk@plt+0x36ec>
   14cdc:	mov	r4, r8
   14ce0:	movw	r1, #46672	; 0xb650
   14ce4:	mov	r2, r8
   14ce8:	ldr	r0, [r4, #52]!	; 0x34
   14cec:	movt	r1, #1
   14cf0:	bl	1b5d0 <__mempcpy_chk@plt+0x9ff0>
   14cf4:	ldr	r1, [sl, #24]
   14cf8:	cmp	r1, #0
   14cfc:	beq	14d34 <__mempcpy_chk@plt+0x3754>
   14d00:	ldr	r0, [r8, #132]	; 0x84
   14d04:	mov	r2, #0
   14d08:	ldr	r3, [r0, r2, lsl #2]
   14d0c:	cmp	r2, r3
   14d10:	bne	14d20 <__mempcpy_chk@plt+0x3740>
   14d14:	add	r2, r2, #1
   14d18:	cmp	r2, r1
   14d1c:	bcc	14d08 <__mempcpy_chk@plt+0x3728>
   14d20:	cmp	r2, r1
   14d24:	beq	14d38 <__mempcpy_chk@plt+0x3758>
   14d28:	b	14d44 <__mempcpy_chk@plt+0x3764>
   14d2c:	add	r4, r8, #52	; 0x34
   14d30:	b	14d44 <__mempcpy_chk@plt+0x3764>
   14d34:	ldr	r0, [r8, #132]	; 0x84
   14d38:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   14d3c:	mov	r0, #0
   14d40:	str	r0, [r8, #132]	; 0x84
   14d44:	ldr	r0, [r4]
   14d48:	movw	r1, #46824	; 0xb6e8
   14d4c:	mov	r2, sl
   14d50:	movt	r1, #1
   14d54:	bl	18f30 <__mempcpy_chk@plt+0x7950>
   14d58:	cmp	r0, #0
   14d5c:	bne	14c60 <__mempcpy_chk@plt+0x3680>
   14d60:	ldr	r0, [r8, #52]	; 0x34
   14d64:	movw	r1, #46960	; 0xb770
   14d68:	mov	r2, r8
   14d6c:	movt	r1, #1
   14d70:	bl	18f30 <__mempcpy_chk@plt+0x7950>
   14d74:	cmp	r0, #0
   14d78:	bne	14c60 <__mempcpy_chk@plt+0x3680>
   14d7c:	ldr	r0, [r8, #52]	; 0x34
   14d80:	movw	r1, #47100	; 0xb7fc
   14d84:	mov	r2, r8
   14d88:	movt	r1, #1
   14d8c:	bl	1b5d0 <__mempcpy_chk@plt+0x9ff0>
   14d90:	ldr	r0, [r8, #52]	; 0x34
   14d94:	movw	r1, #47196	; 0xb85c
   14d98:	mov	r2, r8
   14d9c:	movt	r1, #1
   14da0:	bl	1b5d0 <__mempcpy_chk@plt+0x9ff0>
   14da4:	cmp	r0, #0
   14da8:	bne	14c60 <__mempcpy_chk@plt+0x3680>
   14dac:	ldr	r0, [r8, #8]
   14db0:	cmp	r0, #0
   14db4:	beq	14e58 <__mempcpy_chk@plt+0x3878>
   14db8:	mov	r5, #0
   14dbc:	sub	r7, fp, #40	; 0x28
   14dc0:	mov	r4, #0
   14dc4:	ldr	r0, [r8, #24]
   14dc8:	add	r6, r4, r4, lsl #1
   14dcc:	add	r0, r0, r6, lsl #2
   14dd0:	ldr	r0, [r0, #4]
   14dd4:	cmp	r0, #0
   14dd8:	beq	14de4 <__mempcpy_chk@plt+0x3804>
   14ddc:	mov	r1, r5
   14de0:	b	14e24 <__mempcpy_chk@plt+0x3844>
   14de4:	mov	r0, r7
   14de8:	mov	r1, r8
   14dec:	mov	r2, r4
   14df0:	mov	r3, #1
   14df4:	bl	1bd10 <__mempcpy_chk@plt+0xa730>
   14df8:	cmp	r0, #0
   14dfc:	bne	14c60 <__mempcpy_chk@plt+0x3680>
   14e00:	ldr	r0, [r8, #24]
   14e04:	mov	r1, r5
   14e08:	add	r0, r0, r6, lsl #2
   14e0c:	ldr	r0, [r0, #4]
   14e10:	cmp	r0, #0
   14e14:	bne	14e24 <__mempcpy_chk@plt+0x3844>
   14e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e1c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   14e20:	mov	r1, #1
   14e24:	ldr	r2, [r8, #8]
   14e28:	add	r0, r4, #1
   14e2c:	subs	r3, r0, r2
   14e30:	mov	r4, r3
   14e34:	movwne	r3, #1
   14e38:	movne	r4, r0
   14e3c:	tst	r1, #1
   14e40:	and	r5, r1, r3
   14e44:	cmpeq	r0, r2
   14e48:	bne	14dc4 <__mempcpy_chk@plt+0x37e4>
   14e4c:	add	r0, r0, r0, lsl #1
   14e50:	lsl	r0, r0, #2
   14e54:	b	14e5c <__mempcpy_chk@plt+0x387c>
   14e58:	mov	r0, #0
   14e5c:	ldrb	r1, [sl, #28]
   14e60:	tst	r1, #16
   14e64:	bne	14e7c <__mempcpy_chk@plt+0x389c>
   14e68:	ldr	r1, [sl, #24]
   14e6c:	cmp	r1, #0
   14e70:	ldrbne	r1, [r8, #88]	; 0x58
   14e74:	tstne	r1, #1
   14e78:	bne	14e88 <__mempcpy_chk@plt+0x38a8>
   14e7c:	ldr	r1, [r8, #76]	; 0x4c
   14e80:	cmp	r1, #0
   14e84:	beq	14f60 <__mempcpy_chk@plt+0x3980>
   14e88:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   14e8c:	cmp	r0, #0
   14e90:	str	r0, [r8, #28]
   14e94:	beq	14c5c <__mempcpy_chk@plt+0x367c>
   14e98:	ldr	r1, [r8, #8]
   14e9c:	cmp	r1, #0
   14ea0:	beq	14f60 <__mempcpy_chk@plt+0x3980>
   14ea4:	mov	r1, #0
   14ea8:	str	r1, [r0]
   14eac:	str	r1, [r0, #4]
   14eb0:	str	r1, [r0, #8]
   14eb4:	ldr	r0, [r8, #8]
   14eb8:	cmp	r0, #2
   14ebc:	bcc	14eec <__mempcpy_chk@plt+0x390c>
   14ec0:	mov	r2, #1
   14ec4:	mov	r3, #12
   14ec8:	ldr	r0, [r8, #28]
   14ecc:	add	r2, r2, #1
   14ed0:	str	r1, [r0, r3]!
   14ed4:	add	r3, r3, #12
   14ed8:	str	r1, [r0, #4]
   14edc:	str	r1, [r0, #8]
   14ee0:	ldr	r0, [r8, #8]
   14ee4:	cmp	r2, r0
   14ee8:	bcc	14ec8 <__mempcpy_chk@plt+0x38e8>
   14eec:	cmp	r0, #0
   14ef0:	beq	14f60 <__mempcpy_chk@plt+0x3980>
   14ef4:	ldr	r1, [r8, #24]
   14ef8:	mov	r4, #0
   14efc:	add	r5, r4, r4, lsl #1
   14f00:	add	r2, r1, r5, lsl #2
   14f04:	ldr	r3, [r2, #4]
   14f08:	cmp	r3, #1
   14f0c:	blt	14f54 <__mempcpy_chk@plt+0x3974>
   14f10:	ldr	r7, [r2, #8]
   14f14:	mov	r6, #0
   14f18:	ldr	r0, [r7, r6, lsl #2]
   14f1c:	ldr	r1, [r8, #28]
   14f20:	add	r0, r0, r0, lsl #1
   14f24:	add	r0, r1, r0, lsl #2
   14f28:	mov	r1, r4
   14f2c:	bl	1c550 <__mempcpy_chk@plt+0xaf70>
   14f30:	cmp	r0, #0
   14f34:	beq	14c5c <__mempcpy_chk@plt+0x367c>
   14f38:	ldr	r1, [r8, #24]
   14f3c:	add	r6, r6, #1
   14f40:	add	r0, r1, r5, lsl #2
   14f44:	ldr	r0, [r0, #4]
   14f48:	cmp	r6, r0
   14f4c:	blt	14f18 <__mempcpy_chk@plt+0x3938>
   14f50:	ldr	r0, [r8, #8]
   14f54:	add	r4, r4, #1
   14f58:	cmp	r4, r0
   14f5c:	bcc	14efc <__mempcpy_chk@plt+0x391c>
   14f60:	mov	r0, #0
   14f64:	str	r0, [fp, #-52]	; 0xffffffcc
   14f68:	ldr	r0, [sp, #16]
   14f6c:	cmp	r0, #0
   14f70:	bne	150a4 <__mempcpy_chk@plt+0x3ac4>
   14f74:	ldrb	r2, [r9, #88]	; 0x58
   14f78:	ands	r0, r2, #4
   14f7c:	beq	150a4 <__mempcpy_chk@plt+0x3ac4>
   14f80:	ldr	r0, [sp, #28]
   14f84:	ldr	r0, [r0, #20]
   14f88:	cmp	r0, #0
   14f8c:	bne	150a4 <__mempcpy_chk@plt+0x3ac4>
   14f90:	ldr	r7, [r9, #8]
   14f94:	mov	sl, #0
   14f98:	cmp	r7, #0
   14f9c:	beq	15078 <__mempcpy_chk@plt+0x3a98>
   14fa0:	ldr	r3, [r9]
   14fa4:	mov	r8, #0
   14fa8:	mov	ip, #1
   14fac:	mov	lr, #139	; 0x8b
   14fb0:	mov	r6, #0
   14fb4:	mov	r4, #0
   14fb8:	add	r1, r3, r4, lsl #3
   14fbc:	ldrb	r5, [r1, #4]
   14fc0:	sub	r5, r5, #1
   14fc4:	cmp	r5, #11
   14fc8:	bhi	15354 <__mempcpy_chk@plt+0x3d74>
   14fcc:	add	r0, pc, #0
   14fd0:	ldr	pc, [r0, r5, lsl #2]
   14fd4:	andeq	r5, r1, r8, asr r0
   14fd8:	andeq	r5, r1, r4
   14fdc:	andeq	r5, r1, r4, lsl r0
   14fe0:	andeq	r5, r1, r4
   14fe4:	andeq	r5, r1, r0, ror r0
   14fe8:	andeq	r5, r1, r4, lsr #1
   14fec:	andeq	r5, r1, r4, asr r3
   14ff0:	andeq	r5, r1, r4
   14ff4:	andeq	r5, r1, r4
   14ff8:	andeq	r5, r1, r4
   14ffc:	andeq	r5, r1, r4
   15000:	andeq	r5, r1, r8, lsr r0
   15004:	add	r4, r4, #1
   15008:	cmp	r4, r7
   1500c:	bcc	14fb8 <__mempcpy_chk@plt+0x39d8>
   15010:	b	15298 <__mempcpy_chk@plt+0x3cb8>
   15014:	ldr	r5, [r3, r4, lsl #3]
   15018:	mov	r1, #4
   1501c:	ldr	r0, [r5, r1, lsl #2]
   15020:	cmp	r0, #0
   15024:	bne	150a4 <__mempcpy_chk@plt+0x3ac4>
   15028:	add	r1, r1, #1
   1502c:	cmp	r1, #7
   15030:	bls	1501c <__mempcpy_chk@plt+0x3a3c>
   15034:	b	15004 <__mempcpy_chk@plt+0x3a24>
   15038:	ldr	r0, [r3, r4, lsl #3]
   1503c:	sub	r0, r0, #16
   15040:	ror	r1, r0, #4
   15044:	cmp	r1, #7
   15048:	bhi	150a4 <__mempcpy_chk@plt+0x3ac4>
   1504c:	tst	lr, ip, lsl r1
   15050:	bne	15004 <__mempcpy_chk@plt+0x3a24>
   15054:	b	150a4 <__mempcpy_chk@plt+0x3ac4>
   15058:	ldrsb	r0, [r1]
   1505c:	cmp	r0, #0
   15060:	mov	r0, #0
   15064:	movwlt	r0, #1
   15068:	orr	r6, r6, r0
   1506c:	b	15004 <__mempcpy_chk@plt+0x3a24>
   15070:	mov	r8, #1
   15074:	b	15004 <__mempcpy_chk@plt+0x3a24>
   15078:	mov	r8, #0
   1507c:	mov	r0, #1
   15080:	and	r1, r2, #249	; 0xf9
   15084:	str	r0, [r9, #92]	; 0x5c
   15088:	ldr	r0, [r9, #76]	; 0x4c
   1508c:	cmp	r0, #0
   15090:	movwgt	sl, #1
   15094:	orr	r0, r8, sl
   15098:	and	r0, r0, #1
   1509c:	orr	r0, r1, r0, lsl #1
   150a0:	strb	r0, [r9, #88]	; 0x58
   150a4:	ldr	r1, [r9, #52]	; 0x34
   150a8:	ldr	r0, [r9, #24]
   150ac:	ldr	r1, [r1, #12]
   150b0:	ldr	r1, [r1, #28]
   150b4:	str	r1, [r9, #72]	; 0x48
   150b8:	add	r1, r1, r1, lsl #1
   150bc:	add	r1, r0, r1, lsl #2
   150c0:	sub	r0, fp, #40	; 0x28
   150c4:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   150c8:	cmp	r0, #0
   150cc:	str	r0, [fp, #-48]	; 0xffffffd0
   150d0:	bne	1534c <__mempcpy_chk@plt+0x3d6c>
   150d4:	ldr	r0, [r9, #76]	; 0x4c
   150d8:	ldr	sl, [sp, #28]
   150dc:	cmp	r0, #1
   150e0:	ldrge	r7, [fp, #-36]	; 0xffffffdc
   150e4:	cmpge	r7, #1
   150e8:	blt	151ac <__mempcpy_chk@plt+0x3bcc>
   150ec:	mov	r6, #0
   150f0:	sub	r8, fp, #40	; 0x28
   150f4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   150f8:	ldr	r2, [r9]
   150fc:	ldr	r0, [r1, r6, lsl #2]
   15100:	add	r3, r2, r0, lsl #3
   15104:	ldrb	r3, [r3, #4]
   15108:	cmp	r3, #4
   1510c:	bne	151a0 <__mempcpy_chk@plt+0x3bc0>
   15110:	mov	r3, #0
   15114:	cmp	r7, #1
   15118:	blt	1514c <__mempcpy_chk@plt+0x3b6c>
   1511c:	ldr	r5, [r1, r3, lsl #2]
   15120:	add	r4, r2, r5, lsl #3
   15124:	ldrb	r4, [r4, #4]
   15128:	cmp	r4, #9
   1512c:	bne	15140 <__mempcpy_chk@plt+0x3b60>
   15130:	ldr	r4, [r2, r0, lsl #3]
   15134:	ldr	r5, [r2, r5, lsl #3]
   15138:	cmp	r5, r4
   1513c:	beq	1514c <__mempcpy_chk@plt+0x3b6c>
   15140:	add	r3, r3, #1
   15144:	cmp	r3, r7
   15148:	blt	1511c <__mempcpy_chk@plt+0x3b3c>
   1514c:	cmp	r3, r7
   15150:	beq	151a0 <__mempcpy_chk@plt+0x3bc0>
   15154:	ldr	r1, [r9, #20]
   15158:	add	r0, r0, r0, lsl #1
   1515c:	add	r0, r1, r0, lsl #2
   15160:	ldr	r0, [r0, #8]
   15164:	ldr	r4, [r0]
   15168:	mov	r0, r8
   1516c:	mov	r1, r4
   15170:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   15174:	cmp	r0, #0
   15178:	bne	151a0 <__mempcpy_chk@plt+0x3bc0>
   1517c:	ldr	r0, [r9, #24]
   15180:	add	r1, r4, r4, lsl #1
   15184:	add	r1, r0, r1, lsl #2
   15188:	mov	r0, r8
   1518c:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   15190:	cmp	r0, #0
   15194:	bne	15268 <__mempcpy_chk@plt+0x3c88>
   15198:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1519c:	mov	r6, #0
   151a0:	add	r6, r6, #1
   151a4:	cmp	r6, r7
   151a8:	blt	150f4 <__mempcpy_chk@plt+0x3b14>
   151ac:	sub	r0, fp, #48	; 0x30
   151b0:	sub	r2, fp, #40	; 0x28
   151b4:	mov	r1, r9
   151b8:	mov	r3, #0
   151bc:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   151c0:	cmp	r0, #0
   151c4:	str	r0, [r9, #36]	; 0x24
   151c8:	beq	15248 <__mempcpy_chk@plt+0x3c68>
   151cc:	ldrsb	r1, [r0, #52]	; 0x34
   151d0:	cmn	r1, #1
   151d4:	ble	151e8 <__mempcpy_chk@plt+0x3c08>
   151d8:	str	r0, [r9, #40]	; 0x28
   151dc:	str	r0, [r9, #44]	; 0x2c
   151e0:	str	r0, [r9, #48]	; 0x30
   151e4:	b	1525c <__mempcpy_chk@plt+0x3c7c>
   151e8:	sub	r4, fp, #48	; 0x30
   151ec:	sub	r6, fp, #40	; 0x28
   151f0:	mov	r1, r9
   151f4:	mov	r3, #1
   151f8:	mov	r0, r4
   151fc:	mov	r2, r6
   15200:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   15204:	str	r0, [r9, #40]	; 0x28
   15208:	mov	r0, r4
   1520c:	mov	r1, r9
   15210:	mov	r2, r6
   15214:	mov	r3, #2
   15218:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1521c:	str	r0, [r9, #44]	; 0x2c
   15220:	mov	r0, r4
   15224:	mov	r1, r9
   15228:	mov	r2, r6
   1522c:	mov	r3, #6
   15230:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   15234:	str	r0, [r9, #48]	; 0x30
   15238:	ldr	r1, [r9, #40]	; 0x28
   1523c:	cmp	r1, #0
   15240:	cmpne	r0, #0
   15244:	bne	15250 <__mempcpy_chk@plt+0x3c70>
   15248:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1524c:	b	15268 <__mempcpy_chk@plt+0x3c88>
   15250:	ldr	r0, [r9, #44]	; 0x2c
   15254:	cmp	r0, #0
   15258:	beq	15248 <__mempcpy_chk@plt+0x3c68>
   1525c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15260:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15264:	mov	r0, #0
   15268:	str	r0, [fp, #-52]	; 0xffffffcc
   1526c:	mov	r0, sl
   15270:	bl	17b9c <__mempcpy_chk@plt+0x65bc>
   15274:	add	r0, sp, #32
   15278:	bl	17bec <__mempcpy_chk@plt+0x660c>
   1527c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15280:	mov	r4, #0
   15284:	cmp	r0, #0
   15288:	bne	14c74 <__mempcpy_chk@plt+0x3694>
   1528c:	mov	r0, r4
   15290:	sub	sp, fp, #28
   15294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15298:	orr	r0, r6, r8
   1529c:	tst	r0, #1
   152a0:	beq	1507c <__mempcpy_chk@plt+0x3a9c>
   152a4:	mov	r2, #0
   152a8:	mov	r7, #7
   152ac:	b	152b4 <__mempcpy_chk@plt+0x3cd4>
   152b0:	ldr	r3, [r9]
   152b4:	add	r3, r3, r2, lsl #3
   152b8:	ldr	r6, [r3, #4]
   152bc:	uxtb	r1, r6
   152c0:	cmp	r1, #5
   152c4:	beq	152e4 <__mempcpy_chk@plt+0x3d04>
   152c8:	cmp	r1, #1
   152cc:	bne	152ec <__mempcpy_chk@plt+0x3d0c>
   152d0:	ldrsb	r0, [r3]
   152d4:	cmn	r0, #1
   152d8:	bicle	r0, r6, #2097152	; 0x200000
   152dc:	strle	r0, [r3, #4]
   152e0:	b	152ec <__mempcpy_chk@plt+0x3d0c>
   152e4:	bfi	r6, r7, #0, #8
   152e8:	str	r6, [r3, #4]
   152ec:	ldr	r0, [r9, #8]
   152f0:	add	r2, r2, #1
   152f4:	cmp	r2, r0
   152f8:	bcc	152b0 <__mempcpy_chk@plt+0x3cd0>
   152fc:	ldrb	r2, [r9, #88]	; 0x58
   15300:	b	1507c <__mempcpy_chk@plt+0x3a9c>
   15304:	mov	r0, r9
   15308:	mov	r1, #160	; 0xa0
   1530c:	mov	r4, #160	; 0xa0
   15310:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   15314:	cmp	r0, #0
   15318:	beq	15344 <__mempcpy_chk@plt+0x3d64>
   1531c:	mov	r9, r0
   15320:	ldr	r0, [sp, #28]
   15324:	str	r9, [r0]
   15328:	str	r4, [r0, #4]
   1532c:	b	14758 <__mempcpy_chk@plt+0x3178>
   15330:	mov	r0, #12
   15334:	str	r0, [fp, #-52]	; 0xffffffcc
   15338:	mov	r0, #0
   1533c:	str	r0, [r9, #52]	; 0x34
   15340:	b	14c64 <__mempcpy_chk@plt+0x3684>
   15344:	mov	r4, #12
   15348:	b	1528c <__mempcpy_chk@plt+0x3cac>
   1534c:	ldr	sl, [sp, #28]
   15350:	b	15268 <__mempcpy_chk@plt+0x3c88>
   15354:	bl	115c8 <abort@plt>
   15358:	movw	r2, #25660	; 0x643c
   1535c:	movt	r2, #3
   15360:	ldr	r1, [r2]
   15364:	str	r0, [r2]
   15368:	mov	r0, r1
   1536c:	bx	lr
   15370:	push	{r4, r5, r6, sl, fp, lr}
   15374:	add	fp, sp, #16
   15378:	ldr	r5, [r0, #16]
   1537c:	ldr	r6, [r0]
   15380:	mov	r4, r0
   15384:	mov	r1, #0
   15388:	mov	r2, #256	; 0x100
   1538c:	mov	r0, r5
   15390:	bl	114f0 <memset@plt>
   15394:	ldr	r1, [r6, #36]	; 0x24
   15398:	mov	r0, r4
   1539c:	mov	r2, r5
   153a0:	bl	1540c <__mempcpy_chk@plt+0x3e2c>
   153a4:	ldr	r0, [r6, #36]	; 0x24
   153a8:	ldr	r1, [r6, #40]	; 0x28
   153ac:	cmp	r0, r1
   153b0:	beq	153c4 <__mempcpy_chk@plt+0x3de4>
   153b4:	mov	r0, r4
   153b8:	mov	r2, r5
   153bc:	bl	1540c <__mempcpy_chk@plt+0x3e2c>
   153c0:	ldr	r0, [r6, #36]	; 0x24
   153c4:	ldr	r1, [r6, #44]	; 0x2c
   153c8:	cmp	r0, r1
   153cc:	beq	153e0 <__mempcpy_chk@plt+0x3e00>
   153d0:	mov	r0, r4
   153d4:	mov	r2, r5
   153d8:	bl	1540c <__mempcpy_chk@plt+0x3e2c>
   153dc:	ldr	r0, [r6, #36]	; 0x24
   153e0:	ldr	r1, [r6, #48]	; 0x30
   153e4:	cmp	r0, r1
   153e8:	beq	153f8 <__mempcpy_chk@plt+0x3e18>
   153ec:	mov	r0, r4
   153f0:	mov	r2, r5
   153f4:	bl	1540c <__mempcpy_chk@plt+0x3e2c>
   153f8:	ldrb	r0, [r4, #28]
   153fc:	orr	r0, r0, #8
   15400:	strb	r0, [r4, #28]
   15404:	mov	r0, #0
   15408:	pop	{r4, r5, r6, sl, fp, pc}
   1540c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15410:	add	fp, sp, #28
   15414:	sub	sp, sp, #308	; 0x134
   15418:	ldr	r8, [r0]
   1541c:	str	r0, [sp, #16]
   15420:	mov	sl, #0
   15424:	str	r2, [sp, #28]
   15428:	ldr	r0, [r8, #92]	; 0x5c
   1542c:	cmp	r0, #1
   15430:	ldreq	r0, [sp, #16]
   15434:	ldrbeq	r0, [r0, #14]
   15438:	ubfxeq	sl, r0, #6, #1
   1543c:	ldr	r0, [r1, #8]
   15440:	cmp	r0, #1
   15444:	blt	157b8 <__mempcpy_chk@plt+0x41d8>
   15448:	add	r0, sp, #32
   1544c:	mov	r4, #1
   15450:	mov	r2, #0
   15454:	str	r1, [sp, #8]
   15458:	str	r8, [sp, #20]
   1545c:	add	r0, r0, #1
   15460:	str	r0, [sp, #4]
   15464:	movw	r0, #1
   15468:	movt	r0, #32
   1546c:	add	r0, r0, #254	; 0xfe
   15470:	str	r0, [sp]
   15474:	ldr	r0, [r1, #12]
   15478:	str	r2, [sp, #12]
   1547c:	ldr	r9, [r0, r2, lsl #2]
   15480:	ldr	r0, [r8]
   15484:	add	r1, r0, r9, lsl #3
   15488:	ldrb	r5, [r1, #4]
   1548c:	sub	r1, r5, #1
   15490:	cmp	r1, #6
   15494:	bhi	15778 <__mempcpy_chk@plt+0x4198>
   15498:	add	r2, pc, #0
   1549c:	ldr	pc, [r2, r1, lsl #2]
   154a0:			; <UNDEFINED> instruction: 0x000154bc
   154a4:	muleq	r1, r4, r7
   154a8:	andeq	r5, r1, r8, asr #11
   154ac:	andeq	r5, r1, r8, ror r7
   154b0:	muleq	r1, r4, r7
   154b4:	andeq	r5, r1, r0, asr #12
   154b8:	muleq	r1, r4, r7
   154bc:	ldrb	r0, [r0, r9, lsl #3]
   154c0:	ldr	r1, [sp, #28]
   154c4:	cmp	sl, #0
   154c8:	strb	r4, [r1, r0]
   154cc:	beq	154dc <__mempcpy_chk@plt+0x3efc>
   154d0:	bl	11358 <tolower@plt>
   154d4:	ldr	r1, [sp, #28]
   154d8:	strb	r4, [r1, r0]
   154dc:	ldr	r0, [sp, #16]
   154e0:	ldrb	r0, [r0, #14]
   154e4:	tst	r0, #64	; 0x40
   154e8:	beq	15778 <__mempcpy_chk@plt+0x4198>
   154ec:	ldr	r0, [r8, #92]	; 0x5c
   154f0:	cmp	r0, #2
   154f4:	blt	15778 <__mempcpy_chk@plt+0x4198>
   154f8:	ldr	r0, [r8]
   154fc:	add	r1, r9, #1
   15500:	add	r5, sp, #32
   15504:	mov	r3, r9
   15508:	movw	r6, #1
   1550c:	mov	r7, #0
   15510:	movt	r6, #32
   15514:	ldrb	r0, [r0, r9, lsl #3]
   15518:	mov	r9, r5
   1551c:	ldr	r5, [sp]
   15520:	strb	r0, [sp, #32]
   15524:	ldr	r0, [r8, #8]
   15528:	cmp	r1, r0
   1552c:	ldr	r0, [sp, #4]
   15530:	bcs	15570 <__mempcpy_chk@plt+0x3f90>
   15534:	ldr	r0, [sp, #4]
   15538:	ldr	r1, [r8]
   1553c:	add	r1, r1, r3, lsl #3
   15540:	ldr	r2, [r1, #12]
   15544:	and	r2, r2, r5
   15548:	cmp	r2, r6
   1554c:	bne	15570 <__mempcpy_chk@plt+0x3f90>
   15550:	ldrb	r1, [r1, #8]
   15554:	strb	r1, [r0], #1
   15558:	add	r1, r3, #1
   1555c:	add	r3, r3, #2
   15560:	ldr	r2, [r8, #8]
   15564:	cmp	r3, r2
   15568:	mov	r3, r1
   1556c:	bcc	15538 <__mempcpy_chk@plt+0x3f58>
   15570:	sub	r6, r0, r9
   15574:	sub	r5, fp, #48	; 0x30
   15578:	sub	r0, fp, #36	; 0x24
   1557c:	mov	r1, r9
   15580:	str	r7, [fp, #-44]	; 0xffffffd4
   15584:	str	r7, [fp, #-48]	; 0xffffffd0
   15588:	mov	r2, r6
   1558c:	mov	r3, r5
   15590:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   15594:	cmp	r0, r6
   15598:	bne	15778 <__mempcpy_chk@plt+0x4198>
   1559c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   155a0:	bl	11370 <towlower@plt>
   155a4:	mov	r1, r0
   155a8:	mov	r0, r9
   155ac:	mov	r2, r5
   155b0:	bl	112d4 <wcrtomb@plt>
   155b4:	cmn	r0, #1
   155b8:	ldrbne	r0, [sp, #32]
   155bc:	ldrne	r1, [sp, #28]
   155c0:	strbne	r4, [r1, r0]
   155c4:	b	15778 <__mempcpy_chk@plt+0x4198>
   155c8:	ldr	r5, [sp, #28]
   155cc:	mov	r7, #0
   155d0:	mov	r6, #0
   155d4:	str	r9, [sp, #24]
   155d8:	b	155e8 <__mempcpy_chk@plt+0x4008>
   155dc:	ldr	r0, [r8]
   155e0:	add	r5, r5, #32
   155e4:	add	r7, r7, #32
   155e8:	ldr	r0, [r0, r9, lsl #3]
   155ec:	mov	r8, #0
   155f0:	ldr	r9, [r0, r6, lsl #2]
   155f4:	b	1560c <__mempcpy_chk@plt+0x402c>
   155f8:	add	r0, r7, r8
   155fc:	bl	11358 <tolower@plt>
   15600:	ldr	r1, [sp, #28]
   15604:	strb	r4, [r1, r0]
   15608:	b	1561c <__mempcpy_chk@plt+0x403c>
   1560c:	tst	r9, r4, lsl r8
   15610:	strbne	r4, [r5, r8]
   15614:	cmpne	sl, #0
   15618:	bne	155f8 <__mempcpy_chk@plt+0x4018>
   1561c:	add	r8, r8, #1
   15620:	cmp	r8, #32
   15624:	bne	1560c <__mempcpy_chk@plt+0x402c>
   15628:	ldr	r8, [sp, #20]
   1562c:	ldr	r9, [sp, #24]
   15630:	add	r6, r6, #1
   15634:	cmp	r6, #8
   15638:	bne	155dc <__mempcpy_chk@plt+0x3ffc>
   1563c:	b	15778 <__mempcpy_chk@plt+0x4198>
   15640:	ldr	r6, [r0, r9, lsl #3]
   15644:	ldr	r0, [r8, #92]	; 0x5c
   15648:	cmp	r0, #2
   1564c:	blt	156c0 <__mempcpy_chk@plt+0x40e0>
   15650:	ldr	r0, [r6, #36]	; 0x24
   15654:	cmp	r0, #0
   15658:	bne	15670 <__mempcpy_chk@plt+0x4090>
   1565c:	ldrb	r0, [r6, #16]
   15660:	tst	r0, #1
   15664:	ldreq	r0, [r6, #32]
   15668:	cmpeq	r0, #0
   1566c:	beq	156c0 <__mempcpy_chk@plt+0x40e0>
   15670:	mov	r6, #0
   15674:	add	r5, sp, #32
   15678:	sub	r7, fp, #48	; 0x30
   1567c:	strb	r6, [fp, #-48]	; 0xffffffd0
   15680:	mov	r0, #0
   15684:	mov	r1, r7
   15688:	mov	r2, #1
   1568c:	mov	r3, r5
   15690:	str	r6, [sp, #36]	; 0x24
   15694:	str	r6, [sp, #32]
   15698:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   1569c:	cmn	r0, #2
   156a0:	ldrb	r1, [fp, #-48]	; 0xffffffd0
   156a4:	ldreq	r0, [sp, #28]
   156a8:	strbeq	r4, [r0, r1]
   156ac:	add	r0, r1, #1
   156b0:	tst	r0, #255	; 0xff
   156b4:	strb	r0, [fp, #-48]	; 0xffffffd0
   156b8:	bne	15680 <__mempcpy_chk@plt+0x40a0>
   156bc:	b	15778 <__mempcpy_chk@plt+0x4198>
   156c0:	ldr	r0, [r6, #20]
   156c4:	cmp	r0, #1
   156c8:	blt	15778 <__mempcpy_chk@plt+0x4198>
   156cc:	mov	r9, #0
   156d0:	mov	r0, #0
   156d4:	sub	r7, fp, #48	; 0x30
   156d8:	add	r5, sp, #32
   156dc:	str	r0, [fp, #-44]	; 0xffffffd4
   156e0:	str	r0, [fp, #-48]	; 0xffffffd0
   156e4:	mov	r2, r7
   156e8:	ldr	r0, [r6]
   156ec:	ldr	r1, [r0, r9, lsl #2]
   156f0:	mov	r0, r5
   156f4:	bl	112d4 <wcrtomb@plt>
   156f8:	cmn	r0, #1
   156fc:	beq	15720 <__mempcpy_chk@plt+0x4140>
   15700:	ldrb	r0, [sp, #32]
   15704:	ldr	r1, [sp, #28]
   15708:	cmp	sl, #0
   1570c:	strb	r4, [r1, r0]
   15710:	beq	15720 <__mempcpy_chk@plt+0x4140>
   15714:	bl	11358 <tolower@plt>
   15718:	ldr	r1, [sp, #28]
   1571c:	strb	r4, [r1, r0]
   15720:	ldr	r0, [sp, #16]
   15724:	ldrb	r0, [r0, #14]
   15728:	tst	r0, #64	; 0x40
   1572c:	beq	15768 <__mempcpy_chk@plt+0x4188>
   15730:	ldr	r0, [r8, #92]	; 0x5c
   15734:	cmp	r0, #2
   15738:	blt	15768 <__mempcpy_chk@plt+0x4188>
   1573c:	ldr	r0, [r6]
   15740:	ldr	r0, [r0, r9, lsl #2]
   15744:	bl	11370 <towlower@plt>
   15748:	mov	r1, r0
   1574c:	mov	r0, r5
   15750:	mov	r2, r7
   15754:	bl	112d4 <wcrtomb@plt>
   15758:	cmn	r0, #1
   1575c:	ldrbne	r0, [sp, #32]
   15760:	ldrne	r1, [sp, #28]
   15764:	strbne	r4, [r1, r0]
   15768:	ldr	r0, [r6, #20]
   1576c:	add	r9, r9, #1
   15770:	cmp	r9, r0
   15774:	blt	156d0 <__mempcpy_chk@plt+0x40f0>
   15778:	ldr	r1, [sp, #8]
   1577c:	ldr	r2, [sp, #12]
   15780:	ldr	r0, [r1, #8]
   15784:	add	r2, r2, #1
   15788:	cmp	r2, r0
   1578c:	blt	15474 <__mempcpy_chk@plt+0x3e94>
   15790:	b	157b8 <__mempcpy_chk@plt+0x41d8>
   15794:	ldr	r0, [sp, #28]
   15798:	mov	r1, #1
   1579c:	mov	r2, #256	; 0x100
   157a0:	bl	114f0 <memset@plt>
   157a4:	cmp	r5, #2
   157a8:	ldreq	r1, [sp, #16]
   157ac:	ldrbeq	r0, [r1, #28]
   157b0:	orreq	r0, r0, #1
   157b4:	strbeq	r0, [r1, #28]
   157b8:	sub	sp, fp, #28
   157bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157c4:	add	fp, sp, #24
   157c8:	mov	r4, r0
   157cc:	mov	r0, #0
   157d0:	mov	r6, r2
   157d4:	mov	r8, r1
   157d8:	str	r0, [r4]
   157dc:	str	r0, [r4, #4]
   157e0:	str	r0, [r4, #8]
   157e4:	mov	r0, #256	; 0x100
   157e8:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   157ec:	cmp	r0, #0
   157f0:	str	r0, [r4, #16]
   157f4:	beq	158a4 <__mempcpy_chk@plt+0x42c4>
   157f8:	movw	r0, #45820	; 0xb2fc
   157fc:	tst	r6, #1
   15800:	and	r1, r6, #2
   15804:	movt	r0, #3
   15808:	movweq	r0, #710	; 0x2c6
   1580c:	movteq	r0, #257	; 0x101
   15810:	tst	r6, #4
   15814:	orr	r5, r0, r1, lsl #21
   15818:	bne	1582c <__mempcpy_chk@plt+0x424c>
   1581c:	ldrb	r0, [r4, #28]
   15820:	and	r0, r0, #127	; 0x7f
   15824:	strb	r0, [r4, #28]
   15828:	b	1584c <__mempcpy_chk@plt+0x426c>
   1582c:	ldrb	r0, [r4, #28]
   15830:	mvn	r1, #127	; 0x7f
   15834:	orr	r0, r0, r1
   15838:	movw	r1, #45758	; 0xb2be
   1583c:	movt	r1, #323	; 0x143
   15840:	strb	r0, [r4, #28]
   15844:	and	r1, r5, r1
   15848:	orr	r5, r1, #256	; 0x100
   1584c:	and	r1, r6, #8
   15850:	and	r0, r0, #239	; 0xef
   15854:	mov	r7, #0
   15858:	orr	r0, r0, r1, lsl #1
   1585c:	str	r7, [r4, #20]
   15860:	strb	r0, [r4, #28]
   15864:	mov	r0, r8
   15868:	bl	114c0 <strlen@plt>
   1586c:	mov	r2, r0
   15870:	mov	r0, r4
   15874:	mov	r1, r8
   15878:	mov	r3, r5
   1587c:	bl	1470c <__mempcpy_chk@plt+0x312c>
   15880:	mov	r5, r0
   15884:	cmp	r0, #16
   15888:	movweq	r5, #8
   1588c:	cmp	r5, #0
   15890:	bne	158ac <__mempcpy_chk@plt+0x42cc>
   15894:	mov	r0, r4
   15898:	bl	15370 <__mempcpy_chk@plt+0x3d90>
   1589c:	mov	r0, r7
   158a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   158a4:	mov	r7, #12
   158a8:	b	1589c <__mempcpy_chk@plt+0x42bc>
   158ac:	ldr	r0, [r4, #16]
   158b0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   158b4:	str	r7, [r4, #16]
   158b8:	mov	r7, r5
   158bc:	b	1589c <__mempcpy_chk@plt+0x42bc>
   158c0:	push	{r4, r5, r6, r7, fp, lr}
   158c4:	add	fp, sp, #16
   158c8:	cmp	r0, #17
   158cc:	bcs	15940 <__mempcpy_chk@plt+0x4360>
   158d0:	movw	r1, #11832	; 0x2e38
   158d4:	mov	r4, r2
   158d8:	mov	r2, #5
   158dc:	mov	r5, r3
   158e0:	movt	r1, #2
   158e4:	ldr	r0, [r1, r0, lsl #2]
   158e8:	movw	r1, #11448	; 0x2cb8
   158ec:	movt	r1, #2
   158f0:	add	r1, r1, r0
   158f4:	mov	r0, #0
   158f8:	bl	113ac <dcgettext@plt>
   158fc:	mov	r6, r0
   15900:	bl	114c0 <strlen@plt>
   15904:	add	r7, r0, #1
   15908:	cmp	r5, #0
   1590c:	beq	15928 <__mempcpy_chk@plt+0x4348>
   15910:	cmp	r7, r5
   15914:	mov	r2, r7
   15918:	bhi	15930 <__mempcpy_chk@plt+0x4350>
   1591c:	mov	r0, r4
   15920:	mov	r1, r6
   15924:	bl	1134c <memcpy@plt>
   15928:	mov	r0, r7
   1592c:	pop	{r4, r5, r6, r7, fp, pc}
   15930:	sub	r2, r5, #1
   15934:	mov	r0, #0
   15938:	strb	r0, [r4, r2]
   1593c:	b	1591c <__mempcpy_chk@plt+0x433c>
   15940:	bl	115c8 <abort@plt>
   15944:	push	{r4, r5, fp, lr}
   15948:	add	fp, sp, #8
   1594c:	ldr	r5, [r0]
   15950:	mov	r4, r0
   15954:	cmp	r5, #0
   15958:	beq	15984 <__mempcpy_chk@plt+0x43a4>
   1595c:	movw	r0, #0
   15960:	movw	r1, #0
   15964:	movt	r0, #0
   15968:	movt	r1, #0
   1596c:	orrs	r0, r1, r0
   15970:	beq	1597c <__mempcpy_chk@plt+0x439c>
   15974:	add	r0, r5, #136	; 0x88
   15978:	bl	11304 <pthread_mutex_destroy@plt>
   1597c:	mov	r0, r5
   15980:	bl	159ac <__mempcpy_chk@plt+0x43cc>
   15984:	mov	r5, #0
   15988:	str	r5, [r4]
   1598c:	str	r5, [r4, #4]
   15990:	ldr	r0, [r4, #16]
   15994:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15998:	str	r5, [r4, #16]
   1599c:	ldr	r0, [r4, #20]
   159a0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   159a4:	str	r5, [r4, #20]
   159a8:	pop	{r4, r5, fp, pc}
   159ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159b0:	add	fp, sp, #28
   159b4:	sub	sp, sp, #4
   159b8:	mov	sl, r0
   159bc:	ldr	r0, [r0]
   159c0:	cmp	r0, #0
   159c4:	ldrne	r1, [sl, #8]
   159c8:	cmpne	r1, #0
   159cc:	bne	15b18 <__mempcpy_chk@plt+0x4538>
   159d0:	ldr	r0, [sl, #12]
   159d4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   159d8:	ldr	r0, [sl, #8]
   159dc:	cmp	r0, #0
   159e0:	beq	15a4c <__mempcpy_chk@plt+0x446c>
   159e4:	add	r7, sl, #20
   159e8:	add	r8, sl, #28
   159ec:	add	r9, sl, #24
   159f0:	mov	r5, #0
   159f4:	mov	r6, #8
   159f8:	ldr	r0, [r9]
   159fc:	cmp	r0, #0
   15a00:	beq	15a0c <__mempcpy_chk@plt+0x442c>
   15a04:	ldr	r0, [r0, r6]
   15a08:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a0c:	ldr	r0, [r8]
   15a10:	cmp	r0, #0
   15a14:	beq	15a20 <__mempcpy_chk@plt+0x4440>
   15a18:	ldr	r0, [r0, r6]
   15a1c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a20:	ldr	r0, [r7]
   15a24:	cmp	r0, #0
   15a28:	beq	15a34 <__mempcpy_chk@plt+0x4454>
   15a2c:	ldr	r0, [r0, r6]
   15a30:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a34:	ldr	r0, [sl, #8]
   15a38:	add	r5, r5, #1
   15a3c:	add	r6, r6, #12
   15a40:	cmp	r5, r0
   15a44:	bcc	159f8 <__mempcpy_chk@plt+0x4418>
   15a48:	b	15a58 <__mempcpy_chk@plt+0x4478>
   15a4c:	add	r8, sl, #28
   15a50:	add	r9, sl, #24
   15a54:	add	r7, sl, #20
   15a58:	ldr	r0, [r7]
   15a5c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a60:	ldr	r0, [r9]
   15a64:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a68:	ldr	r0, [r8]
   15a6c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a70:	ldr	r0, [sl]
   15a74:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15a78:	ldr	r5, [sl, #32]
   15a7c:	cmp	r5, #0
   15a80:	beq	15ae0 <__mempcpy_chk@plt+0x4500>
   15a84:	mov	r6, #0
   15a88:	b	15a94 <__mempcpy_chk@plt+0x44b4>
   15a8c:	ldr	r5, [sl, #32]
   15a90:	add	r6, r6, #1
   15a94:	add	r0, r6, r6, lsl #1
   15a98:	ldr	r0, [r5, r0, lsl #2]!
   15a9c:	add	r7, r5, #8
   15aa0:	cmp	r0, #1
   15aa4:	blt	15ac8 <__mempcpy_chk@plt+0x44e8>
   15aa8:	mov	r4, #0
   15aac:	ldr	r0, [r7]
   15ab0:	ldr	r0, [r0, r4, lsl #2]
   15ab4:	bl	17b04 <__mempcpy_chk@plt+0x6524>
   15ab8:	ldr	r0, [r5]
   15abc:	add	r4, r4, #1
   15ac0:	cmp	r4, r0
   15ac4:	blt	15aac <__mempcpy_chk@plt+0x44cc>
   15ac8:	ldr	r0, [r7]
   15acc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15ad0:	ldr	r0, [sl, #68]	; 0x44
   15ad4:	cmp	r6, r0
   15ad8:	bcc	15a8c <__mempcpy_chk@plt+0x44ac>
   15adc:	ldr	r5, [sl, #32]
   15ae0:	mov	r0, r5
   15ae4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15ae8:	ldr	r0, [sl, #60]	; 0x3c
   15aec:	movw	r1, #11900	; 0x2e7c
   15af0:	movt	r1, #2
   15af4:	cmp	r0, r1
   15af8:	beq	15b00 <__mempcpy_chk@plt+0x4520>
   15afc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15b00:	ldr	r0, [sl, #132]	; 0x84
   15b04:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   15b08:	mov	r0, sl
   15b0c:	sub	sp, fp, #28
   15b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b14:	b	12a84 <__mempcpy_chk@plt+0x14a4>
   15b18:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   15b1c:	ldr	r0, [sl, #8]
   15b20:	cmp	r0, #2
   15b24:	bcc	159d0 <__mempcpy_chk@plt+0x43f0>
   15b28:	mov	r5, #1
   15b2c:	mov	r6, #8
   15b30:	ldr	r0, [sl]
   15b34:	add	r0, r0, r6
   15b38:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   15b3c:	ldr	r0, [sl, #8]
   15b40:	add	r5, r5, #1
   15b44:	add	r6, r6, #8
   15b48:	cmp	r5, r0
   15b4c:	bcc	15b30 <__mempcpy_chk@plt+0x4550>
   15b50:	b	159d0 <__mempcpy_chk@plt+0x43f0>
   15b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b58:	add	fp, sp, #28
   15b5c:	sub	sp, sp, #28
   15b60:	ldr	sl, [fp, #8]
   15b64:	mov	r7, #2
   15b68:	cmp	sl, #7
   15b6c:	bhi	15c40 <__mempcpy_chk@plt+0x4660>
   15b70:	mov	r5, r0
   15b74:	ldr	r0, [r0]
   15b78:	mov	r6, r3
   15b7c:	mov	r9, r2
   15b80:	mov	r4, r1
   15b84:	tst	sl, #4
   15b88:	str	r0, [sp, #24]
   15b8c:	bne	15ba4 <__mempcpy_chk@plt+0x45c4>
   15b90:	mov	r0, r4
   15b94:	bl	114c0 <strlen@plt>
   15b98:	mov	r7, r0
   15b9c:	mov	r8, #0
   15ba0:	b	15bac <__mempcpy_chk@plt+0x45cc>
   15ba4:	ldr	r8, [r6]
   15ba8:	ldr	r7, [r6, #4]
   15bac:	movw	r0, #0
   15bb0:	movw	r1, #0
   15bb4:	movt	r0, #0
   15bb8:	movt	r1, #0
   15bbc:	orrs	r0, r1, r0
   15bc0:	str	r0, [sp, #20]
   15bc4:	beq	15bd4 <__mempcpy_chk@plt+0x45f4>
   15bc8:	ldr	r0, [sp, #24]
   15bcc:	add	r0, r0, #136	; 0x88
   15bd0:	bl	11334 <pthread_mutex_lock@plt>
   15bd4:	ldrb	r0, [r5, #28]
   15bd8:	tst	r0, #16
   15bdc:	bne	15bf0 <__mempcpy_chk@plt+0x4610>
   15be0:	str	r7, [sp]
   15be4:	stmib	sp, {r7, r9}
   15be8:	str	r6, [sp, #12]
   15bec:	b	15c04 <__mempcpy_chk@plt+0x4624>
   15bf0:	mov	r0, #0
   15bf4:	str	r7, [sp]
   15bf8:	str	r7, [sp, #4]
   15bfc:	str	r0, [sp, #8]
   15c00:	str	r0, [sp, #12]
   15c04:	mov	r0, r5
   15c08:	mov	r1, r4
   15c0c:	mov	r2, r7
   15c10:	mov	r3, r8
   15c14:	str	sl, [sp, #16]
   15c18:	bl	15c4c <__mempcpy_chk@plt+0x466c>
   15c1c:	mov	r7, r0
   15c20:	ldr	r0, [sp, #20]
   15c24:	cmp	r0, #0
   15c28:	beq	15c38 <__mempcpy_chk@plt+0x4658>
   15c2c:	ldr	r0, [sp, #24]
   15c30:	add	r0, r0, #136	; 0x88
   15c34:	bl	1128c <pthread_mutex_unlock@plt>
   15c38:	cmp	r7, #0
   15c3c:	movwne	r7, #1
   15c40:	mov	r0, r7
   15c44:	sub	sp, fp, #28
   15c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c50:	add	fp, sp, #28
   15c54:	sub	sp, sp, #436	; 0x1b4
   15c58:	ldr	r5, [r0]
   15c5c:	str	r2, [sp, #108]	; 0x6c
   15c60:	str	r1, [sp, #104]	; 0x68
   15c64:	mov	r9, r0
   15c68:	add	r0, sp, #112	; 0x70
   15c6c:	mov	r1, #0
   15c70:	mov	r2, #136	; 0x88
   15c74:	mov	r7, r3
   15c78:	mov	r8, #0
   15c7c:	bl	114f0 <memset@plt>
   15c80:	str	r5, [sp, #196]	; 0xc4
   15c84:	ldr	r0, [fp, #8]
   15c88:	mov	sl, #0
   15c8c:	ldr	r1, [r9, #16]
   15c90:	cmp	r1, #0
   15c94:	beq	15cb0 <__mempcpy_chk@plt+0x46d0>
   15c98:	ldrb	r2, [r9, #28]
   15c9c:	and	r2, r2, #9
   15ca0:	cmp	r2, #8
   15ca4:	movne	r1, #0
   15ca8:	subs	sl, r7, r0
   15cac:	movne	sl, r1
   15cb0:	ldr	r2, [r9, #24]
   15cb4:	ldr	r6, [fp, #16]
   15cb8:	ldr	r1, [r9, #8]
   15cbc:	mov	r4, #1
   15cc0:	mvn	r3, r2
   15cc4:	cmp	r2, r6
   15cc8:	addcc	r8, r3, r6
   15ccc:	cmp	r1, #0
   15cd0:	beq	17514 <__mempcpy_chk@plt+0x5f34>
   15cd4:	ldr	r1, [r5, #36]	; 0x24
   15cd8:	cmp	r1, #0
   15cdc:	ldrne	r2, [r5, #40]	; 0x28
   15ce0:	cmpne	r2, #0
   15ce4:	beq	17514 <__mempcpy_chk@plt+0x5f34>
   15ce8:	ldr	r3, [r5, #44]	; 0x2c
   15cec:	cmp	r3, #0
   15cf0:	ldrne	r6, [r5, #48]	; 0x30
   15cf4:	cmpne	r6, #0
   15cf8:	beq	17514 <__mempcpy_chk@plt+0x5f34>
   15cfc:	ldr	r1, [r1, #8]
   15d00:	ldr	r6, [r9, #20]
   15d04:	cmp	r1, #0
   15d08:	beq	15d18 <__mempcpy_chk@plt+0x4738>
   15d0c:	ldr	lr, [sp, #108]	; 0x6c
   15d10:	ldr	ip, [sp, #104]	; 0x68
   15d14:	b	15d2c <__mempcpy_chk@plt+0x474c>
   15d18:	ldr	r1, [r2, #8]
   15d1c:	ldr	lr, [sp, #108]	; 0x6c
   15d20:	ldr	ip, [sp, #104]	; 0x68
   15d24:	cmp	r1, #0
   15d28:	beq	16d3c <__mempcpy_chk@plt+0x575c>
   15d2c:	str	r0, [sp, #96]	; 0x60
   15d30:	ldr	r0, [fp, #16]
   15d34:	subs	r0, r0, r8
   15d38:	str	r0, [sp, #92]	; 0x5c
   15d3c:	mov	r0, #1
   15d40:	str	r0, [sp, #68]	; 0x44
   15d44:	bne	15d58 <__mempcpy_chk@plt+0x4778>
   15d48:	ldr	r0, [r5, #76]	; 0x4c
   15d4c:	cmp	r0, #0
   15d50:	movwne	r0, #1
   15d54:	str	r0, [sp, #68]	; 0x44
   15d58:	ldr	r0, [r9, #12]
   15d5c:	ldr	r2, [r5, #92]	; 0x5c
   15d60:	ldr	r1, [r5, #8]
   15d64:	str	r6, [sp, #176]	; 0xb0
   15d68:	str	ip, [sp, #112]	; 0x70
   15d6c:	vdup.32	q8, lr
   15d70:	str	r2, [sp, #192]	; 0xc0
   15d74:	ubfx	r3, r0, #22, #1
   15d78:	and	r0, r0, #4194304	; 0x400000
   15d7c:	str	r6, [sp, #100]	; 0x64
   15d80:	add	r1, r1, #1
   15d84:	orrs	r0, r6, r0
   15d88:	strb	r3, [sp, #184]	; 0xb8
   15d8c:	movwne	r0, #1
   15d90:	cmp	r2, r1
   15d94:	strb	r0, [sp, #187]	; 0xbb
   15d98:	add	r0, sp, #112	; 0x70
   15d9c:	movgt	r1, r2
   15da0:	add	r2, lr, #1
   15da4:	ldrb	r6, [r5, #88]	; 0x58
   15da8:	add	r3, r0, #44	; 0x2c
   15dac:	cmp	r2, r1
   15db0:	vst1.32	{d16-d17}, [r3]
   15db4:	movlt	r1, r2
   15db8:	ubfx	r3, r6, #3, #1
   15dbc:	strb	r3, [sp, #186]	; 0xba
   15dc0:	ubfx	r3, r6, #2, #1
   15dc4:	strb	r3, [sp, #185]	; 0xb9
   15dc8:	bl	17c20 <__mempcpy_chk@plt+0x6640>
   15dcc:	cmp	r0, #0
   15dd0:	bne	1758c <__mempcpy_chk@plt+0x5fac>
   15dd4:	add	r1, r5, #96	; 0x60
   15dd8:	ldr	r2, [fp, #24]
   15ddc:	ldr	r0, [fp, #12]
   15de0:	str	r1, [sp, #180]	; 0xb4
   15de4:	ldrb	r1, [r5, #88]	; 0x58
   15de8:	ubfx	r1, r1, #4, #1
   15dec:	ldr	ip, [sp, #108]	; 0x6c
   15df0:	strb	r1, [sp, #190]	; 0xbe
   15df4:	mov	r1, #0
   15df8:	ldrb	r3, [sp, #187]	; 0xbb
   15dfc:	cmp	r3, #0
   15e00:	ldr	r3, [sp, #104]	; 0x68
   15e04:	bne	15e1c <__mempcpy_chk@plt+0x483c>
   15e08:	str	r3, [sp, #116]	; 0x74
   15e0c:	ldr	r1, [r5, #92]	; 0x5c
   15e10:	cmp	r1, #1
   15e14:	mov	r1, ip
   15e18:	movwgt	r1, #0
   15e1c:	str	r1, [sp, #144]	; 0x90
   15e20:	str	r1, [sp, #140]	; 0x8c
   15e24:	str	r0, [sp, #168]	; 0xa8
   15e28:	str	r0, [sp, #164]	; 0xa4
   15e2c:	mov	r1, r5
   15e30:	str	r9, [sp, #44]	; 0x2c
   15e34:	ldrb	r0, [r9, #28]
   15e38:	str	r1, [sp, #84]	; 0x54
   15e3c:	lsr	r0, r0, #7
   15e40:	strb	r0, [sp, #189]	; 0xbd
   15e44:	mov	r0, r5
   15e48:	ldr	r5, [sp, #100]	; 0x64
   15e4c:	ldr	r6, [r0, #76]!	; 0x4c
   15e50:	str	r0, [sp, #64]	; 0x40
   15e54:	mvn	r0, #0
   15e58:	lsl	r9, r6, #1
   15e5c:	cmp	r6, #1
   15e60:	str	r0, [sp, #204]	; 0xcc
   15e64:	str	r2, [sp, #200]	; 0xc8
   15e68:	blt	15ec8 <__mempcpy_chk@plt+0x48e8>
   15e6c:	movw	r0, #43690	; 0xaaaa
   15e70:	mov	r4, #12
   15e74:	movt	r0, #2730	; 0xaaa
   15e78:	cmp	r9, r0
   15e7c:	bhi	174dc <__mempcpy_chk@plt+0x5efc>
   15e80:	add	r0, r6, r6, lsl #1
   15e84:	mov	r5, r8
   15e88:	lsl	r0, r0, #4
   15e8c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   15e90:	mov	r8, r0
   15e94:	str	r0, [sp, #228]	; 0xe4
   15e98:	lsl	r0, r6, #3
   15e9c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   15ea0:	cmp	r0, #0
   15ea4:	str	r0, [sp, #244]	; 0xf4
   15ea8:	beq	174dc <__mempcpy_chk@plt+0x5efc>
   15eac:	cmp	r8, #0
   15eb0:	mov	r8, r5
   15eb4:	ldr	ip, [sp, #108]	; 0x6c
   15eb8:	ldr	r3, [sp, #104]	; 0x68
   15ebc:	ldr	r5, [sp, #100]	; 0x64
   15ec0:	ldr	r2, [fp, #24]
   15ec4:	beq	174dc <__mempcpy_chk@plt+0x5efc>
   15ec8:	mov	r0, #1
   15ecc:	str	r0, [sp, #232]	; 0xe8
   15ed0:	ldr	r0, [sp, #92]	; 0x5c
   15ed4:	str	r9, [sp, #224]	; 0xe0
   15ed8:	str	r9, [sp, #240]	; 0xf0
   15edc:	cmp	r0, #1
   15ee0:	bhi	15ef4 <__mempcpy_chk@plt+0x4914>
   15ee4:	ldr	r0, [sp, #84]	; 0x54
   15ee8:	ldrb	r0, [r0, #88]	; 0x58
   15eec:	tst	r0, #2
   15ef0:	beq	15f2c <__mempcpy_chk@plt+0x494c>
   15ef4:	ldr	r0, [sp, #148]	; 0x94
   15ef8:	mov	r4, #12
   15efc:	cmn	r0, #-1073741822	; 0xc0000002
   15f00:	bhi	174dc <__mempcpy_chk@plt+0x5efc>
   15f04:	mov	r1, #4
   15f08:	add	r0, r1, r0, lsl #2
   15f0c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   15f10:	ldr	r2, [fp, #24]
   15f14:	ldr	r5, [sp, #100]	; 0x64
   15f18:	ldr	r3, [sp, #104]	; 0x68
   15f1c:	ldr	ip, [sp, #108]	; 0x6c
   15f20:	cmp	r0, #0
   15f24:	str	r0, [sp, #212]	; 0xd4
   15f28:	beq	174dc <__mempcpy_chk@plt+0x5efc>
   15f2c:	ldr	r6, [sp, #96]	; 0x60
   15f30:	tst	r2, #1
   15f34:	mov	r1, #4
   15f38:	str	r7, [fp, #-212]	; 0xffffff2c
   15f3c:	str	r8, [sp, #36]	; 0x24
   15f40:	mov	r9, r7
   15f44:	mov	r0, #4
   15f48:	movweq	r1, #6
   15f4c:	str	r1, [sp, #172]	; 0xac
   15f50:	mov	r1, #1
   15f54:	cmp	r6, r7
   15f58:	mov	r8, r6
   15f5c:	mvnlt	r1, #0
   15f60:	movlt	r8, r7
   15f64:	movlt	r9, r6
   15f68:	cmp	sl, #0
   15f6c:	str	r1, [sp, #80]	; 0x50
   15f70:	ldr	r1, [sp, #84]	; 0x54
   15f74:	ldr	r1, [r1, #92]	; 0x5c
   15f78:	str	r1, [sp, #76]	; 0x4c
   15f7c:	beq	15fc0 <__mempcpy_chk@plt+0x49e0>
   15f80:	cmp	r1, #1
   15f84:	beq	15fa4 <__mempcpy_chk@plt+0x49c4>
   15f88:	ldr	r0, [sp, #44]	; 0x2c
   15f8c:	ldr	r0, [r0, #12]
   15f90:	and	r0, r0, #4194304	; 0x400000
   15f94:	orr	r0, r5, r0
   15f98:	clz	r0, r0
   15f9c:	lsr	r0, r0, #5
   15fa0:	lsl	r0, r0, #2
   15fa4:	cmp	r5, #0
   15fa8:	mov	r1, r5
   15fac:	movwne	r1, #1
   15fb0:	cmp	r6, r7
   15fb4:	orrge	r1, r1, #2
   15fb8:	orr	r0, r1, r0
   15fbc:	b	15fc4 <__mempcpy_chk@plt+0x49e4>
   15fc0:	mov	r0, #8
   15fc4:	add	r1, sp, #112	; 0x70
   15fc8:	cmp	r6, r7
   15fcc:	sub	lr, r0, #4
   15fd0:	str	r9, [sp, #56]	; 0x38
   15fd4:	add	r1, r1, #32
   15fd8:	str	lr, [sp, #60]	; 0x3c
   15fdc:	str	r1, [sp, #32]
   15fe0:	sub	r1, fp, #212	; 0xd4
   15fe4:	movwlt	r1, #0
   15fe8:	cmp	r1, #0
   15fec:	str	r1, [sp, #48]	; 0x30
   15ff0:	movwne	r1, #1
   15ff4:	str	r1, [sp, #52]	; 0x34
   15ff8:	sub	r1, fp, #208	; 0xd0
   15ffc:	add	r1, r1, #16
   16000:	str	r1, [sp, #40]	; 0x28
   16004:	cmp	lr, #4
   16008:	bhi	160e4 <__mempcpy_chk@plt+0x4b04>
   1600c:	add	r0, pc, #0
   16010:	ldr	pc, [r0, lr, lsl #2]
   16014:	andeq	r6, r1, r8, lsr #32
   16018:	andeq	r6, r1, r8, lsr #32
   1601c:	muleq	r1, ip, r0
   16020:	andeq	r6, r1, r4, ror r0
   16024:	andeq	r6, r1, ip, ror #2
   16028:	mov	r4, #1
   1602c:	cmp	r7, r9
   16030:	blt	174dc <__mempcpy_chk@plt+0x5efc>
   16034:	mov	r0, #0
   16038:	cmp	r7, ip
   1603c:	ldrblt	r0, [r3, r7]
   16040:	cmp	r5, #0
   16044:	ldrbne	r0, [r5, r0]
   16048:	ldrb	r0, [sl, r0]
   1604c:	cmp	r0, #0
   16050:	bne	1616c <__mempcpy_chk@plt+0x4b8c>
   16054:	sub	r0, r7, #1
   16058:	cmp	r7, r9
   1605c:	mov	r7, r0
   16060:	str	r0, [fp, #-212]	; 0xffffff2c
   16064:	bgt	16034 <__mempcpy_chk@plt+0x4a54>
   16068:	b	174dc <__mempcpy_chk@plt+0x5efc>
   1606c:	add	r7, r7, #1
   16070:	str	r7, [fp, #-212]	; 0xffffff2c
   16074:	cmp	r7, r8
   16078:	bge	160b4 <__mempcpy_chk@plt+0x4ad4>
   1607c:	ldrb	r0, [r3, r7]
   16080:	ldrb	r0, [r5, r0]
   16084:	ldrb	r0, [sl, r0]
   16088:	cmp	r0, #0
   1608c:	beq	1606c <__mempcpy_chk@plt+0x4a8c>
   16090:	b	160b4 <__mempcpy_chk@plt+0x4ad4>
   16094:	add	r7, r7, #1
   16098:	str	r7, [fp, #-212]	; 0xffffff2c
   1609c:	cmp	r7, r8
   160a0:	bge	160b4 <__mempcpy_chk@plt+0x4ad4>
   160a4:	ldrb	r0, [r3, r7]
   160a8:	ldrb	r0, [sl, r0]
   160ac:	cmp	r0, #0
   160b0:	beq	16094 <__mempcpy_chk@plt+0x4ab4>
   160b4:	cmp	r7, r8
   160b8:	bne	1616c <__mempcpy_chk@plt+0x4b8c>
   160bc:	mov	r0, #0
   160c0:	cmp	r8, ip
   160c4:	mov	r7, r8
   160c8:	ldrblt	r0, [r3, r8]
   160cc:	cmp	r5, #0
   160d0:	ldrbne	r0, [r5, r0]
   160d4:	ldrb	r0, [sl, r0]
   160d8:	cmp	r0, #0
   160dc:	bne	1616c <__mempcpy_chk@plt+0x4b8c>
   160e0:	b	1759c <__mempcpy_chk@plt+0x5fbc>
   160e4:	ldr	r0, [sp, #136]	; 0x88
   160e8:	ldr	r5, [sp, #80]	; 0x50
   160ec:	ldr	r3, [sp, #144]	; 0x90
   160f0:	sub	r1, r7, r0
   160f4:	cmp	r1, r3
   160f8:	bcs	1613c <__mempcpy_chk@plt+0x4b5c>
   160fc:	ldr	r3, [sp, #140]	; 0x8c
   16100:	mov	r6, #0
   16104:	cmp	r1, r3
   16108:	ldrcc	r3, [sp, #116]	; 0x74
   1610c:	ldrbcc	r6, [r3, r1]
   16110:	ldrb	r1, [sl, r6]
   16114:	cmp	r1, #0
   16118:	bne	1616c <__mempcpy_chk@plt+0x4b8c>
   1611c:	add	r7, r7, r5
   16120:	mov	r4, #1
   16124:	cmp	r7, r9
   16128:	str	r7, [fp, #-212]	; 0xffffff2c
   1612c:	blt	174dc <__mempcpy_chk@plt+0x5efc>
   16130:	cmp	r7, r8
   16134:	ble	160ec <__mempcpy_chk@plt+0x4b0c>
   16138:	b	174dc <__mempcpy_chk@plt+0x5efc>
   1613c:	add	r0, sp, #112	; 0x70
   16140:	mov	r1, r7
   16144:	mov	r6, lr
   16148:	bl	1cadc <__mempcpy_chk@plt+0xb4fc>
   1614c:	cmp	r0, #0
   16150:	bne	17530 <__mempcpy_chk@plt+0x5f50>
   16154:	ldr	r0, [sp, #136]	; 0x88
   16158:	ldr	r7, [fp, #-212]	; 0xffffff2c
   1615c:	ldr	r2, [fp, #24]
   16160:	mov	lr, r6
   16164:	sub	r1, r7, r0
   16168:	b	160fc <__mempcpy_chk@plt+0x4b1c>
   1616c:	add	r0, sp, #112	; 0x70
   16170:	mov	r1, r7
   16174:	bl	1cadc <__mempcpy_chk@plt+0xb4fc>
   16178:	cmp	r0, #0
   1617c:	bne	17530 <__mempcpy_chk@plt+0x5f50>
   16180:	ldr	r0, [sp, #76]	; 0x4c
   16184:	cmp	r0, #1
   16188:	ldrne	r0, [sp, #140]	; 0x8c
   1618c:	cmpne	r0, #0
   16190:	bne	161c8 <__mempcpy_chk@plt+0x4be8>
   16194:	mov	r0, #0
   16198:	str	r0, [sp, #220]	; 0xdc
   1619c:	str	r0, [sp, #232]	; 0xe8
   161a0:	str	r0, [sp, #216]	; 0xd8
   161a4:	str	r0, [fp, #-64]	; 0xffffffc0
   161a8:	ldr	r4, [sp, #196]	; 0xc4
   161ac:	ldr	r3, [sp, #152]	; 0x98
   161b0:	ldr	r7, [r4, #36]	; 0x24
   161b4:	ldrsb	r0, [r7, #52]	; 0x34
   161b8:	cmn	r0, #1
   161bc:	ble	161dc <__mempcpy_chk@plt+0x4bfc>
   161c0:	sub	r5, fp, #208	; 0xd0
   161c4:	b	16248 <__mempcpy_chk@plt+0x4c68>
   161c8:	ldr	r0, [sp, #120]	; 0x78
   161cc:	ldr	r0, [r0]
   161d0:	cmn	r0, #1
   161d4:	bne	16194 <__mempcpy_chk@plt+0x4bb4>
   161d8:	b	16a50 <__mempcpy_chk@plt+0x5470>
   161dc:	ldr	r2, [sp, #200]	; 0xc8
   161e0:	sub	r1, r3, #1
   161e4:	add	r0, sp, #112	; 0x70
   161e8:	mov	r6, r3
   161ec:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   161f0:	tst	r0, #1
   161f4:	sub	r5, fp, #208	; 0xd0
   161f8:	bne	16240 <__mempcpy_chk@plt+0x4c60>
   161fc:	mov	r3, r0
   16200:	cmp	r0, #0
   16204:	beq	16244 <__mempcpy_chk@plt+0x4c64>
   16208:	ands	r1, r3, #2
   1620c:	and	r0, r3, #4
   16210:	cmpne	r0, #0
   16214:	bne	16a90 <__mempcpy_chk@plt+0x54b0>
   16218:	cmp	r1, #0
   1621c:	bne	16a98 <__mempcpy_chk@plt+0x54b8>
   16220:	cmp	r0, #0
   16224:	beq	16244 <__mempcpy_chk@plt+0x4c64>
   16228:	ldr	r2, [r7, #40]	; 0x28
   1622c:	sub	r0, fp, #64	; 0x40
   16230:	mov	r1, r4
   16234:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   16238:	mov	r7, r0
   1623c:	b	16244 <__mempcpy_chk@plt+0x4c64>
   16240:	ldr	r7, [r4, #40]	; 0x28
   16244:	mov	r3, r6
   16248:	ldr	r1, [sp, #52]	; 0x34
   1624c:	cmp	r7, #0
   16250:	beq	17528 <__mempcpy_chk@plt+0x5f48>
   16254:	ldr	r0, [sp, #212]	; 0xd4
   16258:	mov	ip, r1
   1625c:	cmp	r0, #0
   16260:	beq	16278 <__mempcpy_chk@plt+0x4c98>
   16264:	str	r7, [r0, r3, lsl #2]
   16268:	mov	ip, r1
   1626c:	ldr	r0, [r4, #76]	; 0x4c
   16270:	cmp	r0, #0
   16274:	bne	16ae8 <__mempcpy_chk@plt+0x5508>
   16278:	ldrb	r0, [r7, #52]	; 0x34
   1627c:	sxtb	r5, r0
   16280:	tst	r0, #16
   16284:	bne	16aa0 <__mempcpy_chk@plt+0x54c0>
   16288:	mov	r0, #0
   1628c:	mvn	r2, #0
   16290:	str	r0, [sp, #72]	; 0x48
   16294:	ldr	r6, [sp, #152]	; 0x98
   16298:	ldr	r0, [sp, #168]	; 0xa8
   1629c:	str	r2, [sp, #96]	; 0x60
   162a0:	cmp	r0, r6
   162a4:	ble	162b0 <__mempcpy_chk@plt+0x4cd0>
   162a8:	ldr	r1, [sp, #48]	; 0x30
   162ac:	b	16594 <__mempcpy_chk@plt+0x4fb4>
   162b0:	ldr	r1, [sp, #48]	; 0x30
   162b4:	b	1674c <__mempcpy_chk@plt+0x516c>
   162b8:	ldr	r0, [sp, #212]	; 0xd4
   162bc:	ldr	r2, [sp, #152]	; 0x98
   162c0:	ldr	r1, [sp, #216]	; 0xd8
   162c4:	add	r2, r2, #1
   162c8:	sub	r3, r2, #1
   162cc:	cmp	r3, r1
   162d0:	bge	16744 <__mempcpy_chk@plt+0x5164>
   162d4:	str	r2, [sp, #152]	; 0x98
   162d8:	ldr	r3, [r0, r2, lsl #2]
   162dc:	add	r2, r2, #1
   162e0:	cmp	r3, #0
   162e4:	beq	162c8 <__mempcpy_chk@plt+0x4ce8>
   162e8:	sub	r0, fp, #64	; 0x40
   162ec:	add	r1, sp, #112	; 0x70
   162f0:	mov	r2, #0
   162f4:	bl	1dcf0 <__mempcpy_chk@plt+0xc710>
   162f8:	cmp	r0, #0
   162fc:	mov	r7, r0
   16300:	ldreq	r0, [fp, #-64]	; 0xffffffc0
   16304:	cmpeq	r0, #0
   16308:	beq	162b8 <__mempcpy_chk@plt+0x4cd8>
   1630c:	cmp	r7, #0
   16310:	mov	r3, r5
   16314:	mov	ip, r6
   16318:	bne	16674 <__mempcpy_chk@plt+0x5094>
   1631c:	b	16748 <__mempcpy_chk@plt+0x5168>
   16320:	ldr	r0, [r4, #8]
   16324:	cmp	r0, #1
   16328:	blt	1650c <__mempcpy_chk@plt+0x4f2c>
   1632c:	ldr	r7, [sp, #196]	; 0xc4
   16330:	mov	r5, #0
   16334:	str	r3, [sp, #12]
   16338:	str	ip, [sp, #24]
   1633c:	str	r4, [sp, #8]
   16340:	str	r7, [sp, #16]
   16344:	ldr	r0, [r4, #12]
   16348:	ldr	r1, [r0, r5, lsl #2]
   1634c:	ldr	r0, [r7]
   16350:	add	r0, r0, r1, lsl #3
   16354:	ldr	r6, [r0, #4]
   16358:	tst	r6, #1048576	; 0x100000
   1635c:	beq	164fc <__mempcpy_chk@plt+0x4f1c>
   16360:	ldr	lr, [sp, #152]	; 0x98
   16364:	movw	r0, #65280	; 0xff00
   16368:	str	r1, [sp, #28]
   1636c:	movt	r0, #3
   16370:	tst	r6, r0
   16374:	beq	163e4 <__mempcpy_chk@plt+0x4e04>
   16378:	ldr	r2, [sp, #200]	; 0xc8
   1637c:	add	r0, sp, #112	; 0x70
   16380:	mov	r1, lr
   16384:	mov	r7, r3
   16388:	str	lr, [sp, #20]
   1638c:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   16390:	mov	r3, r7
   16394:	ldr	lr, [sp, #20]
   16398:	ldr	r1, [sp, #28]
   1639c:	ldr	ip, [sp, #24]
   163a0:	ldr	r7, [sp, #16]
   163a4:	and	r2, r0, #1
   163a8:	tst	r6, #1024	; 0x400
   163ac:	beq	163b8 <__mempcpy_chk@plt+0x4dd8>
   163b0:	cmp	r2, #0
   163b4:	beq	164fc <__mempcpy_chk@plt+0x4f1c>
   163b8:	tst	r6, #2048	; 0x800
   163bc:	cmpne	r2, #0
   163c0:	bne	164fc <__mempcpy_chk@plt+0x4f1c>
   163c4:	tst	r6, #8192	; 0x2000
   163c8:	beq	163d4 <__mempcpy_chk@plt+0x4df4>
   163cc:	ands	r2, r0, #2
   163d0:	beq	164fc <__mempcpy_chk@plt+0x4f1c>
   163d4:	tst	r6, #32768	; 0x8000
   163d8:	beq	163e4 <__mempcpy_chk@plt+0x4e04>
   163dc:	ands	r0, r0, #8
   163e0:	beq	164fc <__mempcpy_chk@plt+0x4f1c>
   163e4:	mov	r0, r7
   163e8:	add	r2, sp, #112	; 0x70
   163ec:	mov	r3, lr
   163f0:	bl	1ef90 <__mempcpy_chk@plt+0xd9b0>
   163f4:	ldr	r4, [sp, #8]
   163f8:	ldr	ip, [sp, #24]
   163fc:	ldr	r3, [sp, #12]
   16400:	cmp	r0, #0
   16404:	beq	164fc <__mempcpy_chk@plt+0x4f1c>
   16408:	ldr	r1, [sp, #152]	; 0x98
   1640c:	ldr	r2, [sp, #232]	; 0xe8
   16410:	cmp	r2, r0
   16414:	add	r6, r1, r0
   16418:	movlt	r2, r0
   1641c:	add	r0, sp, #112	; 0x70
   16420:	mov	r1, r6
   16424:	str	r2, [sp, #232]	; 0xe8
   16428:	bl	1e0d0 <__mempcpy_chk@plt+0xcaf0>
   1642c:	cmp	r0, #0
   16430:	str	r0, [fp, #-48]	; 0xffffffd0
   16434:	bne	16574 <__mempcpy_chk@plt+0x4f94>
   16438:	ldr	r0, [sp, #212]	; 0xd4
   1643c:	ldr	r2, [sp, #28]
   16440:	ldr	r1, [r7, #24]
   16444:	ldr	r4, [r0, r6, lsl #2]
   16448:	ldr	r0, [r7, #12]
   1644c:	ldr	r0, [r0, r2, lsl #2]
   16450:	cmp	r4, #0
   16454:	add	r0, r0, r0, lsl #1
   16458:	add	r2, r1, r0, lsl #2
   1645c:	beq	16480 <__mempcpy_chk@plt+0x4ea0>
   16460:	ldr	r1, [r4, #40]	; 0x28
   16464:	sub	r7, fp, #208	; 0xd0
   16468:	mov	r0, r7
   1646c:	bl	1de44 <__mempcpy_chk@plt+0xc864>
   16470:	cmp	r0, #0
   16474:	str	r0, [fp, #-48]	; 0xffffffd0
   16478:	beq	16494 <__mempcpy_chk@plt+0x4eb4>
   1647c:	b	16574 <__mempcpy_chk@plt+0x4f94>
   16480:	vldr	d16, [r2]
   16484:	ldr	r0, [r2, #8]
   16488:	sub	r7, fp, #208	; 0xd0
   1648c:	str	r0, [fp, #-200]	; 0xffffff38
   16490:	vstr	d16, [fp, #-208]	; 0xffffff30
   16494:	ldr	r2, [sp, #200]	; 0xc8
   16498:	sub	r1, r6, #1
   1649c:	add	r0, sp, #112	; 0x70
   164a0:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   164a4:	ldr	r1, [sp, #16]
   164a8:	mov	r3, r0
   164ac:	sub	r0, fp, #48	; 0x30
   164b0:	mov	r2, r7
   164b4:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   164b8:	ldr	r1, [sp, #212]	; 0xd4
   164bc:	cmp	r4, #0
   164c0:	str	r0, [r1, r6, lsl #2]
   164c4:	beq	164d0 <__mempcpy_chk@plt+0x4ef0>
   164c8:	ldr	r0, [fp, #-200]	; 0xffffff38
   164cc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   164d0:	ldr	r0, [sp, #212]	; 0xd4
   164d4:	ldr	r3, [sp, #12]
   164d8:	ldr	ip, [sp, #24]
   164dc:	ldr	r4, [sp, #8]
   164e0:	ldr	r7, [sp, #16]
   164e4:	ldr	r0, [r0, r6, lsl #2]
   164e8:	cmp	r0, #0
   164ec:	bne	164fc <__mempcpy_chk@plt+0x4f1c>
   164f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   164f4:	cmp	r0, #0
   164f8:	bne	16588 <__mempcpy_chk@plt+0x4fa8>
   164fc:	ldr	r0, [r4, #8]
   16500:	add	r5, r5, #1
   16504:	cmp	r5, r0
   16508:	blt	16344 <__mempcpy_chk@plt+0x4d64>
   1650c:	mov	r0, #0
   16510:	str	r0, [fp, #-64]	; 0xffffffc0
   16514:	b	165d4 <__mempcpy_chk@plt+0x4ff4>
   16518:	add	r1, r6, #2
   1651c:	add	r0, sp, #112	; 0x70
   16520:	mov	r5, r3
   16524:	mov	r6, ip
   16528:	bl	1dc18 <__mempcpy_chk@plt+0xc638>
   1652c:	cmp	r0, #0
   16530:	str	r0, [fp, #-64]	; 0xffffffc0
   16534:	bne	17528 <__mempcpy_chk@plt+0x5f48>
   16538:	mov	r3, r5
   1653c:	ldrb	r5, [r4, #52]	; 0x34
   16540:	mov	ip, r6
   16544:	b	165cc <__mempcpy_chk@plt+0x4fec>
   16548:	ldr	r0, [sp, #152]	; 0x98
   1654c:	ldr	r2, [sp, #200]	; 0xc8
   16550:	sub	r1, r0, #1
   16554:	add	r0, sp, #112	; 0x70
   16558:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1655c:	bfi	r5, r0, #8, #1
   16560:	ldr	r3, [sp, #12]
   16564:	ldr	ip, [sp, #24]
   16568:	ldr	r4, [sp, #8]
   1656c:	ldr	r7, [r6, r5, lsl #2]
   16570:	b	1663c <__mempcpy_chk@plt+0x505c>
   16574:	ldr	r2, [sp, #72]	; 0x48
   16578:	ldr	r3, [sp, #12]
   1657c:	ldr	ip, [sp, #24]
   16580:	ldr	r4, [sp, #8]
   16584:	str	r2, [sp, #72]	; 0x48
   16588:	mov	r7, #0
   1658c:	str	r0, [fp, #-64]	; 0xffffffc0
   16590:	b	1663c <__mempcpy_chk@plt+0x505c>
   16594:	str	r1, [sp, #88]	; 0x58
   16598:	ldr	r1, [sp, #148]	; 0x94
   1659c:	ldr	r0, [sp, #160]	; 0xa0
   165a0:	add	r9, r6, #1
   165a4:	mov	r4, r7
   165a8:	cmp	r9, r1
   165ac:	blt	165b8 <__mempcpy_chk@plt+0x4fd8>
   165b0:	cmp	r1, r0
   165b4:	blt	16518 <__mempcpy_chk@plt+0x4f38>
   165b8:	ldr	r1, [sp, #140]	; 0x8c
   165bc:	cmp	r9, r1
   165c0:	blt	165cc <__mempcpy_chk@plt+0x4fec>
   165c4:	cmp	r1, r0
   165c8:	blt	16518 <__mempcpy_chk@plt+0x4f38>
   165cc:	tst	r5, #32
   165d0:	bne	16320 <__mempcpy_chk@plt+0x4d40>
   165d4:	ldr	r1, [sp, #152]	; 0x98
   165d8:	ldr	r0, [sp, #116]	; 0x74
   165dc:	add	r2, r1, #1
   165e0:	str	r2, [sp, #152]	; 0x98
   165e4:	ldrb	r5, [r0, r1]
   165e8:	ldr	r0, [r4, #44]	; 0x2c
   165ec:	cmp	r0, #0
   165f0:	bne	16638 <__mempcpy_chk@plt+0x5058>
   165f4:	ldr	r6, [r4, #48]	; 0x30
   165f8:	str	ip, [sp, #24]
   165fc:	str	r3, [sp, #12]
   16600:	str	r4, [sp, #8]
   16604:	cmp	r6, #0
   16608:	bne	16548 <__mempcpy_chk@plt+0x4f68>
   1660c:	ldr	r6, [sp, #8]
   16610:	ldr	r0, [sp, #196]	; 0xc4
   16614:	mov	r1, r6
   16618:	bl	1f3b4 <__mempcpy_chk@plt+0xddd4>
   1661c:	ldr	r3, [sp, #12]
   16620:	ldr	ip, [sp, #24]
   16624:	mov	r4, r6
   16628:	cmp	r0, #0
   1662c:	bne	165e8 <__mempcpy_chk@plt+0x5008>
   16630:	mov	r0, #12
   16634:	b	16588 <__mempcpy_chk@plt+0x4fa8>
   16638:	ldr	r7, [r0, r5, lsl #2]
   1663c:	ldr	r0, [sp, #212]	; 0xd4
   16640:	cmp	r0, #0
   16644:	beq	1666c <__mempcpy_chk@plt+0x508c>
   16648:	sub	r0, fp, #64	; 0x40
   1664c:	add	r1, sp, #112	; 0x70
   16650:	mov	r2, r7
   16654:	mov	r5, r3
   16658:	mov	r6, ip
   1665c:	bl	1dcf0 <__mempcpy_chk@plt+0xc710>
   16660:	mov	ip, r6
   16664:	mov	r3, r5
   16668:	mov	r7, r0
   1666c:	cmp	r7, #0
   16670:	beq	166a4 <__mempcpy_chk@plt+0x50c4>
   16674:	sub	r0, r4, r7
   16678:	clz	r0, r0
   1667c:	lsr	r0, r0, #5
   16680:	ands	ip, ip, r0
   16684:	ldrb	r0, [r7, #52]	; 0x34
   16688:	movne	r3, r9
   1668c:	sxtb	r5, r0
   16690:	tst	r0, #16
   16694:	bne	166e4 <__mempcpy_chk@plt+0x5104>
   16698:	ldr	r6, [sp, #152]	; 0x98
   1669c:	ldr	r1, [sp, #88]	; 0x58
   166a0:	b	16734 <__mempcpy_chk@plt+0x5154>
   166a4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   166a8:	cmp	r0, #0
   166ac:	bne	17528 <__mempcpy_chk@plt+0x5f48>
   166b0:	ldr	r0, [sp, #72]	; 0x48
   166b4:	ldr	r1, [sp, #68]	; 0x44
   166b8:	clz	r0, r0
   166bc:	lsr	r0, r0, #5
   166c0:	orr	r0, r1, r0
   166c4:	cmp	r0, #1
   166c8:	bne	16748 <__mempcpy_chk@plt+0x5168>
   166cc:	ldr	r0, [sp, #212]	; 0xd4
   166d0:	cmp	r0, #0
   166d4:	beq	16748 <__mempcpy_chk@plt+0x5168>
   166d8:	mov	r6, ip
   166dc:	mov	r5, r3
   166e0:	b	162bc <__mempcpy_chk@plt+0x4cdc>
   166e4:	ldr	r6, [sp, #152]	; 0x98
   166e8:	cmn	r5, #1
   166ec:	bgt	16718 <__mempcpy_chk@plt+0x5138>
   166f0:	add	r0, sp, #112	; 0x70
   166f4:	mov	r1, r7
   166f8:	mov	r2, r6
   166fc:	mov	r4, r3
   16700:	mov	r9, ip
   16704:	bl	1d1a0 <__mempcpy_chk@plt+0xbbc0>
   16708:	mov	ip, r9
   1670c:	mov	r3, r4
   16710:	cmp	r0, #0
   16714:	beq	1669c <__mempcpy_chk@plt+0x50bc>
   16718:	ldr	r0, [sp, #68]	; 0x44
   1671c:	cmp	r0, #0
   16720:	beq	16b74 <__mempcpy_chk@plt+0x5594>
   16724:	mov	r1, #0
   16728:	mov	r0, #1
   1672c:	str	r6, [sp, #96]	; 0x60
   16730:	str	r0, [sp, #72]	; 0x48
   16734:	ldr	r0, [sp, #168]	; 0xa8
   16738:	cmp	r0, r6
   1673c:	bgt	16594 <__mempcpy_chk@plt+0x4fb4>
   16740:	b	1674c <__mempcpy_chk@plt+0x516c>
   16744:	mov	r3, r5
   16748:	ldr	r1, [sp, #88]	; 0x58
   1674c:	cmp	r1, #0
   16750:	ldr	r6, [sp, #96]	; 0x60
   16754:	sub	r5, fp, #208	; 0xd0
   16758:	ldrne	r0, [r1]
   1675c:	addne	r0, r0, r3
   16760:	strne	r0, [r1]
   16764:	cmn	r6, #1
   16768:	beq	16a48 <__mempcpy_chk@plt+0x5468>
   1676c:	mov	r4, #12
   16770:	cmn	r6, #2
   16774:	beq	174dc <__mempcpy_chk@plt+0x5efc>
   16778:	ldr	r0, [sp, #92]	; 0x5c
   1677c:	str	r6, [sp, #204]	; 0xcc
   16780:	cmp	r0, #2
   16784:	bcc	167d8 <__mempcpy_chk@plt+0x51f8>
   16788:	ldr	r0, [sp, #44]	; 0x2c
   1678c:	ldrb	r0, [r0, #28]
   16790:	ands	r0, r0, #16
   16794:	bne	167d8 <__mempcpy_chk@plt+0x51f8>
   16798:	ldr	r0, [sp, #212]	; 0xd4
   1679c:	mov	r2, r6
   167a0:	ldr	r1, [r0, r6, lsl #2]
   167a4:	add	r0, sp, #112	; 0x70
   167a8:	bl	1d1a0 <__mempcpy_chk@plt+0xbbc0>
   167ac:	str	r0, [sp, #88]	; 0x58
   167b0:	str	r0, [sp, #208]	; 0xd0
   167b4:	ldr	r0, [sp, #84]	; 0x54
   167b8:	ldrb	r0, [r0, #88]	; 0x58
   167bc:	tst	r0, #1
   167c0:	bne	16804 <__mempcpy_chk@plt+0x5224>
   167c4:	ldr	r0, [sp, #64]	; 0x40
   167c8:	ldr	r0, [r0]
   167cc:	cmp	r0, #0
   167d0:	bne	16804 <__mempcpy_chk@plt+0x5224>
   167d4:	b	16bcc <__mempcpy_chk@plt+0x55ec>
   167d8:	ldr	r0, [sp, #64]	; 0x40
   167dc:	ldr	r0, [r0]
   167e0:	cmp	r0, #0
   167e4:	beq	16bcc <__mempcpy_chk@plt+0x55ec>
   167e8:	ldr	r0, [sp, #212]	; 0xd4
   167ec:	mov	r2, r6
   167f0:	ldr	r1, [r0, r6, lsl #2]
   167f4:	add	r0, sp, #112	; 0x70
   167f8:	bl	1d1a0 <__mempcpy_chk@plt+0xbbc0>
   167fc:	str	r0, [sp, #88]	; 0x58
   16800:	str	r0, [sp, #208]	; 0xd0
   16804:	cmn	r6, #-1073741823	; 0xc0000001
   16808:	bcs	174dc <__mempcpy_chk@plt+0x5efc>
   1680c:	ldr	r0, [sp, #196]	; 0xc4
   16810:	mov	r9, r6
   16814:	str	r0, [sp, #72]	; 0x48
   16818:	mov	r0, #4
   1681c:	add	r6, r0, r6, lsl #2
   16820:	mov	r0, r6
   16824:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   16828:	mov	r7, r0
   1682c:	cmp	r0, #0
   16830:	beq	17578 <__mempcpy_chk@plt+0x5f98>
   16834:	ldr	r0, [sp, #72]	; 0x48
   16838:	ldr	r0, [r0, #76]	; 0x4c
   1683c:	cmp	r0, #0
   16840:	beq	168f8 <__mempcpy_chk@plt+0x5318>
   16844:	mov	r0, r6
   16848:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1684c:	cmp	r0, #0
   16850:	beq	17578 <__mempcpy_chk@plt+0x5f98>
   16854:	mov	r6, r0
   16858:	add	r0, r9, #1
   1685c:	mov	r1, #0
   16860:	mov	r4, r9
   16864:	str	r0, [sp, #28]
   16868:	lsl	r2, r0, #2
   1686c:	mov	r0, r6
   16870:	bl	114f0 <memset@plt>
   16874:	ldr	r0, [sp, #88]	; 0x58
   16878:	str	r7, [fp, #-208]	; 0xffffff30
   1687c:	str	r6, [fp, #-204]	; 0xffffff34
   16880:	mov	r1, #0
   16884:	str	r0, [fp, #-200]	; 0xffffff38
   16888:	ldr	r0, [sp, #40]	; 0x28
   1688c:	str	r9, [fp, #-196]	; 0xffffff3c
   16890:	str	r1, [r0]
   16894:	str	r1, [r0, #4]
   16898:	str	r1, [r0, #8]
   1689c:	add	r0, sp, #112	; 0x70
   168a0:	mov	r1, r5
   168a4:	bl	1fec0 <__mempcpy_chk@plt+0xe8e0>
   168a8:	mov	r4, r0
   168ac:	mov	r0, #0
   168b0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   168b4:	cmp	r4, #0
   168b8:	bne	16ac4 <__mempcpy_chk@plt+0x54e4>
   168bc:	ldr	r0, [r7]
   168c0:	cmp	r0, #0
   168c4:	beq	16954 <__mempcpy_chk@plt+0x5374>
   168c8:	ldr	r0, [sp, #72]	; 0x48
   168cc:	ldr	r3, [sp, #28]
   168d0:	mov	r1, r7
   168d4:	mov	r2, r6
   168d8:	bl	20158 <__mempcpy_chk@plt+0xeb78>
   168dc:	mov	r4, r0
   168e0:	mov	r0, r6
   168e4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   168e8:	cmp	r4, #0
   168ec:	beq	16ba4 <__mempcpy_chk@plt+0x55c4>
   168f0:	mov	r6, #0
   168f4:	b	16ac4 <__mempcpy_chk@plt+0x54e4>
   168f8:	ldr	r0, [sp, #88]	; 0x58
   168fc:	mov	r6, #0
   16900:	mov	r1, r5
   16904:	str	r6, [fp, #-204]	; 0xffffff34
   16908:	str	r7, [fp, #-208]	; 0xffffff30
   1690c:	str	r0, [fp, #-200]	; 0xffffff38
   16910:	ldr	r0, [sp, #40]	; 0x28
   16914:	str	r9, [fp, #-196]	; 0xffffff3c
   16918:	str	r6, [r0]
   1691c:	str	r6, [r0, #4]
   16920:	str	r6, [r0, #8]
   16924:	add	r0, sp, #112	; 0x70
   16928:	bl	1fec0 <__mempcpy_chk@plt+0xe8e0>
   1692c:	mov	r4, r0
   16930:	mov	r0, #0
   16934:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16938:	cmp	r4, #0
   1693c:	bne	16ac4 <__mempcpy_chk@plt+0x54e4>
   16940:	ldr	r0, [r7]
   16944:	mov	r6, #0
   16948:	cmp	r0, #0
   1694c:	beq	16a38 <__mempcpy_chk@plt+0x5458>
   16950:	b	16ba4 <__mempcpy_chk@plt+0x55c4>
   16954:	ldr	r0, [r6]
   16958:	cmp	r0, #0
   1695c:	bne	168c8 <__mempcpy_chk@plt+0x52e8>
   16960:	cmp	r9, #1
   16964:	blt	16a38 <__mempcpy_chk@plt+0x5458>
   16968:	ldr	r0, [sp, #212]	; 0xd4
   1696c:	lsl	r4, r9, #2
   16970:	add	r5, r9, #1
   16974:	sub	r0, r0, #4
   16978:	ldr	r1, [r0, r4]
   1697c:	cmp	r1, #0
   16980:	ldrbne	r2, [r1, #52]	; 0x34
   16984:	tstne	r2, #16
   16988:	bne	169a0 <__mempcpy_chk@plt+0x53c0>
   1698c:	sub	r5, r5, #1
   16990:	sub	r4, r4, #4
   16994:	cmp	r5, #2
   16998:	bge	16978 <__mempcpy_chk@plt+0x5398>
   1699c:	b	16a38 <__mempcpy_chk@plt+0x5458>
   169a0:	sub	r2, r5, #2
   169a4:	add	r0, sp, #112	; 0x70
   169a8:	str	r2, [sp, #96]	; 0x60
   169ac:	bl	1d1a0 <__mempcpy_chk@plt+0xbbc0>
   169b0:	mov	r9, r0
   169b4:	mov	r0, r6
   169b8:	mov	r1, #0
   169bc:	mov	r2, r4
   169c0:	bl	114f0 <memset@plt>
   169c4:	ldr	r0, [sp, #96]	; 0x60
   169c8:	str	r7, [fp, #-208]	; 0xffffff30
   169cc:	str	r6, [fp, #-204]	; 0xffffff34
   169d0:	str	r9, [fp, #-200]	; 0xffffff38
   169d4:	str	r9, [sp, #88]	; 0x58
   169d8:	mov	r1, #0
   169dc:	mov	r9, r0
   169e0:	str	r0, [fp, #-196]	; 0xffffff3c
   169e4:	ldr	r0, [sp, #40]	; 0x28
   169e8:	str	r1, [r0]
   169ec:	str	r1, [r0, #4]
   169f0:	str	r1, [r0, #8]
   169f4:	add	r0, sp, #112	; 0x70
   169f8:	sub	r1, fp, #208	; 0xd0
   169fc:	bl	1fec0 <__mempcpy_chk@plt+0xe8e0>
   16a00:	mov	r4, r0
   16a04:	mov	r0, #0
   16a08:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16a0c:	cmp	r4, #0
   16a10:	bne	16ac4 <__mempcpy_chk@plt+0x54e4>
   16a14:	sub	r0, r5, #1
   16a18:	str	r0, [sp, #28]
   16a1c:	ldr	r0, [r7]
   16a20:	cmp	r0, #0
   16a24:	beq	16954 <__mempcpy_chk@plt+0x5374>
   16a28:	sub	r9, r5, #2
   16a2c:	sub	r0, r5, #1
   16a30:	str	r0, [sp, #28]
   16a34:	b	168c8 <__mempcpy_chk@plt+0x52e8>
   16a38:	mov	r0, r7
   16a3c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16a40:	mov	r0, r6
   16a44:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16a48:	add	r0, sp, #112	; 0x70
   16a4c:	bl	1d260 <__mempcpy_chk@plt+0xbc80>
   16a50:	ldr	r0, [fp, #-212]	; 0xffffff2c
   16a54:	ldr	r1, [sp, #80]	; 0x50
   16a58:	ldr	r9, [sp, #56]	; 0x38
   16a5c:	ldr	ip, [sp, #108]	; 0x6c
   16a60:	ldr	r3, [sp, #104]	; 0x68
   16a64:	ldr	r5, [sp, #100]	; 0x64
   16a68:	ldr	r2, [fp, #24]
   16a6c:	ldr	lr, [sp, #60]	; 0x3c
   16a70:	mov	r4, #1
   16a74:	add	r7, r0, r1
   16a78:	cmp	r7, r9
   16a7c:	str	r7, [fp, #-212]	; 0xffffff2c
   16a80:	blt	174dc <__mempcpy_chk@plt+0x5efc>
   16a84:	cmp	r8, r7
   16a88:	bge	16004 <__mempcpy_chk@plt+0x4a24>
   16a8c:	b	174dc <__mempcpy_chk@plt+0x5efc>
   16a90:	ldr	r7, [r4, #48]	; 0x30
   16a94:	b	16244 <__mempcpy_chk@plt+0x4c64>
   16a98:	ldr	r7, [r4, #44]	; 0x2c
   16a9c:	b	16244 <__mempcpy_chk@plt+0x4c64>
   16aa0:	cmn	r5, #1
   16aa4:	ble	16b24 <__mempcpy_chk@plt+0x5544>
   16aa8:	mov	r0, #1
   16aac:	mov	r2, r3
   16ab0:	str	r0, [sp, #72]	; 0x48
   16ab4:	ldr	r0, [sp, #68]	; 0x44
   16ab8:	cmp	r0, #0
   16abc:	bne	16294 <__mempcpy_chk@plt+0x4cb4>
   16ac0:	b	16b70 <__mempcpy_chk@plt+0x5590>
   16ac4:	mov	r0, r7
   16ac8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16acc:	mov	r0, r6
   16ad0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16ad4:	cmp	r4, #0
   16ad8:	beq	16bcc <__mempcpy_chk@plt+0x55ec>
   16adc:	cmp	r4, #1
   16ae0:	beq	16a48 <__mempcpy_chk@plt+0x5468>
   16ae4:	b	174dc <__mempcpy_chk@plt+0x5efc>
   16ae8:	add	r4, r7, #4
   16aec:	add	r0, sp, #112	; 0x70
   16af0:	mov	r2, #0
   16af4:	mov	r9, r3
   16af8:	mov	r1, r4
   16afc:	bl	1d3e8 <__mempcpy_chk@plt+0xbe08>
   16b00:	cmp	r0, #0
   16b04:	str	r0, [fp, #-64]	; 0xffffffc0
   16b08:	bne	16b9c <__mempcpy_chk@plt+0x55bc>
   16b0c:	ldrb	r0, [r7, #52]	; 0x34
   16b10:	mov	ip, #0
   16b14:	tst	r0, #64	; 0x40
   16b18:	bne	16b7c <__mempcpy_chk@plt+0x559c>
   16b1c:	mov	r3, r9
   16b20:	b	16278 <__mempcpy_chk@plt+0x4c98>
   16b24:	add	r0, sp, #112	; 0x70
   16b28:	mov	r1, r7
   16b2c:	mov	r2, r3
   16b30:	mov	r4, r3
   16b34:	mov	r6, ip
   16b38:	bl	1d1a0 <__mempcpy_chk@plt+0xbbc0>
   16b3c:	clz	r1, r0
   16b40:	mov	ip, r6
   16b44:	cmp	r0, #0
   16b48:	mov	r2, r4
   16b4c:	mov	r3, r4
   16b50:	lsr	r6, r1, #5
   16b54:	ldr	r1, [sp, #68]	; 0x44
   16b58:	movwne	r0, #1
   16b5c:	mvneq	r2, #0
   16b60:	str	r0, [sp, #72]	; 0x48
   16b64:	orr	r1, r1, r6
   16b68:	cmp	r1, #0
   16b6c:	bne	16294 <__mempcpy_chk@plt+0x4cb4>
   16b70:	mov	r6, r3
   16b74:	sub	r5, fp, #208	; 0xd0
   16b78:	b	16764 <__mempcpy_chk@plt+0x5184>
   16b7c:	add	r0, sp, #112	; 0x70
   16b80:	mov	r1, r4
   16b84:	bl	1d4e0 <__mempcpy_chk@plt+0xbf00>
   16b88:	mov	ip, #0
   16b8c:	cmp	r0, #0
   16b90:	mov	r3, r9
   16b94:	str	r0, [fp, #-64]	; 0xffffffc0
   16b98:	beq	16278 <__mempcpy_chk@plt+0x4c98>
   16b9c:	mov	r6, r0
   16ba0:	b	16764 <__mempcpy_chk@plt+0x5184>
   16ba4:	ldr	r0, [sp, #212]	; 0xd4
   16ba8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16bac:	ldr	r0, [sp, #88]	; 0x58
   16bb0:	str	r0, [sp, #208]	; 0xd0
   16bb4:	mov	r0, #0
   16bb8:	str	r7, [sp, #212]	; 0xd4
   16bbc:	str	r9, [sp, #204]	; 0xcc
   16bc0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16bc4:	mov	r0, #0
   16bc8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16bcc:	ldr	r4, [sp, #92]	; 0x5c
   16bd0:	cmp	r4, #0
   16bd4:	beq	174d8 <__mempcpy_chk@plt+0x5ef8>
   16bd8:	ldr	r8, [sp, #36]	; 0x24
   16bdc:	ldr	sl, [fp, #20]
   16be0:	cmp	r4, #1
   16be4:	beq	16c04 <__mempcpy_chk@plt+0x5624>
   16be8:	ldr	r1, [fp, #16]
   16bec:	mvn	r0, r8
   16bf0:	add	r0, r0, r1
   16bf4:	mov	r1, #255	; 0xff
   16bf8:	lsl	r2, r0, #3
   16bfc:	add	r0, sl, #8
   16c00:	bl	114f0 <memset@plt>
   16c04:	ldr	r0, [sp, #204]	; 0xcc
   16c08:	mov	r5, #0
   16c0c:	cmp	r4, #2
   16c10:	str	r5, [sl]
   16c14:	str	r0, [sl, #4]
   16c18:	bcc	173b0 <__mempcpy_chk@plt+0x5dd0>
   16c1c:	ldr	r0, [sp, #44]	; 0x2c
   16c20:	ldrb	r0, [r0, #28]
   16c24:	ands	r0, r0, #16
   16c28:	bne	173b0 <__mempcpy_chk@plt+0x5dd0>
   16c2c:	ldr	r0, [sp, #84]	; 0x54
   16c30:	ldrb	r1, [r0, #88]	; 0x58
   16c34:	mov	r0, #0
   16c38:	tst	r1, #1
   16c3c:	mov	r1, #0
   16c40:	beq	16c58 <__mempcpy_chk@plt+0x5678>
   16c44:	ldr	r1, [sp, #64]	; 0x40
   16c48:	ldr	r2, [r1]
   16c4c:	mov	r1, #0
   16c50:	cmp	r2, #0
   16c54:	movwgt	r1, #1
   16c58:	ldr	r2, [sp, #44]	; 0x2c
   16c5c:	ldr	r4, [sp, #92]	; 0x5c
   16c60:	cmp	r1, #0
   16c64:	ldr	r6, [r2]
   16c68:	movw	r2, #11936	; 0x2ea0
   16c6c:	movt	r2, #2
   16c70:	vldr	d16, [r2]
   16c74:	ldr	r2, [r2, #8]
   16c78:	str	r2, [fp, #-56]	; 0xffffffc8
   16c7c:	mov	r2, #16
   16c80:	vstr	d16, [fp, #-64]	; 0xffffffc0
   16c84:	str	r2, [fp, #-204]	; 0xffffff34
   16c88:	sub	r2, fp, #208	; 0xd0
   16c8c:	str	r0, [fp, #-208]	; 0xffffff30
   16c90:	add	r9, r2, #12
   16c94:	mov	r2, #0
   16c98:	str	r9, [fp, #-200]	; 0xffffff38
   16c9c:	beq	16cc0 <__mempcpy_chk@plt+0x56e0>
   16ca0:	mov	r0, #48	; 0x30
   16ca4:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   16ca8:	cmp	r0, #0
   16cac:	str	r0, [fp, #-56]	; 0xffffffc8
   16cb0:	beq	173c8 <__mempcpy_chk@plt+0x5de8>
   16cb4:	ldr	r0, [fp, #-208]	; 0xffffff30
   16cb8:	sub	r1, fp, #64	; 0x40
   16cbc:	mov	r2, r1
   16cc0:	ldr	sl, [r6, #72]	; 0x48
   16cc4:	mov	r1, #0
   16cc8:	cmp	r0, r4
   16ccc:	str	r6, [sp, #104]	; 0x68
   16cd0:	str	r2, [sp, #108]	; 0x6c
   16cd4:	str	r1, [fp, #-44]	; 0xffffffd4
   16cd8:	str	r1, [fp, #-48]	; 0xffffffd0
   16cdc:	str	r1, [fp, #-40]	; 0xffffffd8
   16ce0:	bcs	16d74 <__mempcpy_chk@plt+0x5794>
   16ce4:	sub	r0, fp, #208	; 0xd0
   16ce8:	mov	r1, r4
   16cec:	mov	r2, r9
   16cf0:	mov	r3, #8
   16cf4:	bl	21da0 <__mempcpy_chk@plt+0x107c0>
   16cf8:	cmp	r0, #0
   16cfc:	bne	16d78 <__mempcpy_chk@plt+0x5798>
   16d00:	ldr	r0, [fp, #-200]	; 0xffffff38
   16d04:	ldr	r6, [sp, #108]	; 0x6c
   16d08:	mov	r4, r9
   16d0c:	cmp	r0, r9
   16d10:	beq	16d18 <__mempcpy_chk@plt+0x5738>
   16d14:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16d18:	mov	r0, #16
   16d1c:	str	r0, [fp, #-204]	; 0xffffff34
   16d20:	mov	r0, #0
   16d24:	str	r0, [fp, #-208]	; 0xffffff30
   16d28:	mov	r0, r6
   16d2c:	str	r4, [fp, #-200]	; 0xffffff38
   16d30:	bl	21084 <__mempcpy_chk@plt+0xfaa4>
   16d34:	ldr	r8, [sp, #36]	; 0x24
   16d38:	b	17368 <__mempcpy_chk@plt+0x5d88>
   16d3c:	ldr	r1, [r3, #8]
   16d40:	cmp	r1, #0
   16d44:	beq	16d54 <__mempcpy_chk@plt+0x5774>
   16d48:	ldrsb	r1, [r9, #28]
   16d4c:	cmp	r1, #0
   16d50:	blt	15d2c <__mempcpy_chk@plt+0x474c>
   16d54:	mov	r1, #0
   16d58:	cmp	r7, #0
   16d5c:	str	r1, [sp, #96]	; 0x60
   16d60:	beq	173c0 <__mempcpy_chk@plt+0x5de0>
   16d64:	cmp	r0, #0
   16d68:	mov	r7, #0
   16d6c:	bne	17514 <__mempcpy_chk@plt+0x5f34>
   16d70:	b	15d30 <__mempcpy_chk@plt+0x4750>
   16d74:	str	r4, [fp, #-208]	; 0xffffff30
   16d78:	ldr	r6, [fp, #20]
   16d7c:	ldr	r0, [fp, #-200]	; 0xffffff38
   16d80:	lsl	r2, r4, #3
   16d84:	str	r2, [sp, #96]	; 0x60
   16d88:	mov	r1, r6
   16d8c:	str	r0, [sp, #100]	; 0x64
   16d90:	bl	1134c <memcpy@plt>
   16d94:	ldr	r7, [r6]
   16d98:	ldr	r1, [r6, #4]
   16d9c:	mov	r0, #0
   16da0:	cmp	r7, r1
   16da4:	str	r7, [fp, #-36]	; 0xffffffdc
   16da8:	ble	16ddc <__mempcpy_chk@plt+0x57fc>
   16dac:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16db0:	ldr	r0, [fp, #-200]	; 0xffffff38
   16db4:	cmp	r0, r9
   16db8:	beq	16dc0 <__mempcpy_chk@plt+0x57e0>
   16dbc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   16dc0:	mov	r0, #16
   16dc4:	mov	r4, #0
   16dc8:	str	r0, [fp, #-204]	; 0xffffff34
   16dcc:	ldr	r0, [sp, #108]	; 0x6c
   16dd0:	str	r4, [fp, #-208]	; 0xffffff30
   16dd4:	str	r9, [fp, #-200]	; 0xffffff38
   16dd8:	b	173a0 <__mempcpy_chk@plt+0x5dc0>
   16ddc:	ldr	r1, [sp, #104]	; 0x68
   16de0:	lsl	r0, r4, #4
   16de4:	str	r9, [sp, #88]	; 0x58
   16de8:	str	r0, [sp, #80]	; 0x50
   16dec:	ldr	r0, [r1]
   16df0:	add	r1, r0, sl, lsl #3
   16df4:	ldr	r3, [r1, #4]
   16df8:	uxtb	r2, r3
   16dfc:	cmp	r2, #9
   16e00:	beq	16e30 <__mempcpy_chk@plt+0x5850>
   16e04:	cmp	r2, #8
   16e08:	bne	16e98 <__mempcpy_chk@plt+0x58b8>
   16e0c:	ldr	r0, [r0, sl, lsl #3]
   16e10:	add	r0, r0, #1
   16e14:	cmp	r0, r4
   16e18:	bge	16e98 <__mempcpy_chk@plt+0x58b8>
   16e1c:	ldr	r1, [fp, #20]
   16e20:	str	r7, [r1, r0, lsl #3]!
   16e24:	mvn	r0, #0
   16e28:	str	r0, [r1, #4]
   16e2c:	b	16e98 <__mempcpy_chk@plt+0x58b8>
   16e30:	ldr	r0, [r0, sl, lsl #3]
   16e34:	add	r0, r0, #1
   16e38:	cmp	r0, r4
   16e3c:	bge	16e98 <__mempcpy_chk@plt+0x58b8>
   16e40:	ldr	r1, [fp, #20]
   16e44:	ldr	r2, [r1, r0, lsl #3]
   16e48:	cmp	r2, r7
   16e4c:	bge	16e60 <__mempcpy_chk@plt+0x5880>
   16e50:	add	r0, r1, r0, lsl #3
   16e54:	str	r7, [r0, #4]
   16e58:	ldr	r0, [sp, #100]	; 0x64
   16e5c:	b	16e80 <__mempcpy_chk@plt+0x58a0>
   16e60:	tst	r3, #524288	; 0x80000
   16e64:	beq	16e8c <__mempcpy_chk@plt+0x58ac>
   16e68:	ldr	r1, [sp, #100]	; 0x64
   16e6c:	ldr	r1, [r1, r0, lsl #3]
   16e70:	cmn	r1, #1
   16e74:	beq	16e8c <__mempcpy_chk@plt+0x58ac>
   16e78:	ldr	r0, [fp, #20]
   16e7c:	ldr	r1, [sp, #100]	; 0x64
   16e80:	ldr	r2, [sp, #96]	; 0x60
   16e84:	bl	1134c <memcpy@plt>
   16e88:	b	16e98 <__mempcpy_chk@plt+0x58b8>
   16e8c:	ldr	r1, [fp, #20]
   16e90:	add	r0, r1, r0, lsl #3
   16e94:	str	r7, [r0, #4]
   16e98:	ldr	r0, [fp, #20]
   16e9c:	ldr	r0, [r0, #4]
   16ea0:	cmp	r7, r0
   16ea4:	ldreq	r0, [sp, #208]	; 0xd0
   16ea8:	cmpeq	sl, r0
   16eac:	beq	16ed4 <__mempcpy_chk@plt+0x58f4>
   16eb0:	ldr	r7, [sp, #108]	; 0x6c
   16eb4:	cmp	r7, #0
   16eb8:	beq	16f40 <__mempcpy_chk@plt+0x5960>
   16ebc:	sub	r0, fp, #48	; 0x30
   16ec0:	mov	r1, sl
   16ec4:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   16ec8:	cmp	r0, #0
   16ecc:	bne	16ee0 <__mempcpy_chk@plt+0x5900>
   16ed0:	b	16f40 <__mempcpy_chk@plt+0x5960>
   16ed4:	ldr	r7, [sp, #108]	; 0x6c
   16ed8:	cmp	r7, #0
   16edc:	beq	17370 <__mempcpy_chk@plt+0x5d90>
   16ee0:	mov	r0, #0
   16ee4:	ldr	r3, [fp, #20]
   16ee8:	ldr	r1, [r3, r0, lsl #3]
   16eec:	cmp	r1, #0
   16ef0:	blt	16f04 <__mempcpy_chk@plt+0x5924>
   16ef4:	add	r1, r3, r0, lsl #3
   16ef8:	ldr	r1, [r1, #4]
   16efc:	cmn	r1, #1
   16f00:	beq	16f14 <__mempcpy_chk@plt+0x5934>
   16f04:	add	r0, r0, #1
   16f08:	cmp	r0, r4
   16f0c:	bcc	16ee4 <__mempcpy_chk@plt+0x5904>
   16f10:	b	17370 <__mempcpy_chk@plt+0x5d90>
   16f14:	ldr	r0, [sp, #100]	; 0x64
   16f18:	sub	r1, fp, #36	; 0x24
   16f1c:	mov	r2, r4
   16f20:	str	r0, [sp]
   16f24:	sub	r0, fp, #48	; 0x30
   16f28:	str	r0, [sp, #4]
   16f2c:	mov	r0, r7
   16f30:	bl	210ec <__mempcpy_chk@plt+0xfb0c>
   16f34:	mov	sl, r0
   16f38:	cmn	r0, #1
   16f3c:	ble	17370 <__mempcpy_chk@plt+0x5d90>
   16f40:	ldr	r6, [sp, #196]	; 0xc4
   16f44:	ldr	r0, [r6]
   16f48:	add	r1, r0, sl, lsl #3
   16f4c:	ldr	r1, [r1, #4]
   16f50:	tst	r1, #8
   16f54:	bne	17014 <__mempcpy_chk@plt+0x5a34>
   16f58:	tst	r1, #1048576	; 0x100000
   16f5c:	bne	170ac <__mempcpy_chk@plt+0x5acc>
   16f60:	uxtb	r1, r1
   16f64:	cmp	r1, #4
   16f68:	bne	170d0 <__mempcpy_chk@plt+0x5af0>
   16f6c:	ldr	r0, [r0, sl, lsl #3]
   16f70:	ldr	r1, [sp, #92]	; 0x5c
   16f74:	mov	r4, #0
   16f78:	add	r0, r0, #1
   16f7c:	cmp	r0, r1
   16f80:	ldrlt	r1, [fp, #20]
   16f84:	ldrlt	r2, [r1, r0, lsl #3]!
   16f88:	ldrlt	r1, [r1, #4]
   16f8c:	sublt	r4, r1, r2
   16f90:	cmp	r7, #0
   16f94:	beq	171a4 <__mempcpy_chk@plt+0x5bc4>
   16f98:	ldr	r1, [sp, #92]	; 0x5c
   16f9c:	cmp	r0, r1
   16fa0:	bge	17144 <__mempcpy_chk@plt+0x5b64>
   16fa4:	ldr	r1, [fp, #20]
   16fa8:	ldr	r1, [r1, r0, lsl #3]
   16fac:	cmn	r1, #1
   16fb0:	beq	17144 <__mempcpy_chk@plt+0x5b64>
   16fb4:	ldr	r2, [fp, #20]
   16fb8:	add	r0, r2, r0, lsl #3
   16fbc:	ldr	r0, [r0, #4]
   16fc0:	cmn	r0, #1
   16fc4:	beq	17144 <__mempcpy_chk@plt+0x5b64>
   16fc8:	cmp	r4, #0
   16fcc:	beq	17250 <__mempcpy_chk@plt+0x5c70>
   16fd0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   16fd4:	ldr	r0, [sp, #140]	; 0x8c
   16fd8:	sub	r0, r0, r7
   16fdc:	cmp	r0, r4
   16fe0:	blt	17144 <__mempcpy_chk@plt+0x5b64>
   16fe4:	ldr	r2, [sp, #116]	; 0x74
   16fe8:	add	r0, r2, r1
   16fec:	add	r1, r2, r7
   16ff0:	mov	r2, r4
   16ff4:	bl	113a0 <memcmp@plt>
   16ff8:	cmp	r0, #0
   16ffc:	bne	17144 <__mempcpy_chk@plt+0x5b64>
   17000:	ldr	r0, [r6, #12]
   17004:	add	r7, r7, r4
   17008:	ldr	r9, [r0, sl, lsl #2]
   1700c:	str	r7, [fp, #-36]	; 0xffffffdc
   17010:	b	17114 <__mempcpy_chk@plt+0x5b34>
   17014:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17018:	ldr	r0, [sp, #212]	; 0xd4
   1701c:	ldr	r4, [r6, #20]
   17020:	ldr	r7, [r0, r1, lsl #2]
   17024:	str	r1, [sp, #76]	; 0x4c
   17028:	sub	r0, fp, #48	; 0x30
   1702c:	mov	r1, sl
   17030:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   17034:	cmp	r0, #0
   17038:	bne	17050 <__mempcpy_chk@plt+0x5a70>
   1703c:	sub	r0, fp, #48	; 0x30
   17040:	mov	r1, sl
   17044:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   17048:	cmp	r0, #0
   1704c:	beq	17330 <__mempcpy_chk@plt+0x5d50>
   17050:	add	r0, sl, sl, lsl #1
   17054:	add	r0, r4, r0, lsl #2
   17058:	ldr	r4, [r0, #4]
   1705c:	cmp	r4, #1
   17060:	blt	17144 <__mempcpy_chk@plt+0x5b64>
   17064:	add	r6, r7, #4
   17068:	ldr	r7, [r0, #8]
   1706c:	mov	r8, #0
   17070:	mvn	sl, #0
   17074:	ldr	r9, [r7, r8, lsl #2]
   17078:	mov	r0, r6
   1707c:	mov	r1, r9
   17080:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   17084:	cmp	r0, #0
   17088:	beq	17098 <__mempcpy_chk@plt+0x5ab8>
   1708c:	cmn	sl, #1
   17090:	bne	17184 <__mempcpy_chk@plt+0x5ba4>
   17094:	mov	sl, r9
   17098:	add	r8, r8, #1
   1709c:	cmp	r8, r4
   170a0:	blt	17074 <__mempcpy_chk@plt+0x5a94>
   170a4:	mov	r9, sl
   170a8:	b	17198 <__mempcpy_chk@plt+0x5bb8>
   170ac:	ldr	r7, [fp, #-36]	; 0xffffffdc
   170b0:	mov	r0, r6
   170b4:	mov	r1, sl
   170b8:	add	r2, sp, #112	; 0x70
   170bc:	mov	r3, r7
   170c0:	bl	1ef90 <__mempcpy_chk@plt+0xd9b0>
   170c4:	cmp	r0, #0
   170c8:	bne	170f8 <__mempcpy_chk@plt+0x5b18>
   170cc:	b	170d4 <__mempcpy_chk@plt+0x5af4>
   170d0:	ldr	r7, [fp, #-36]	; 0xffffffdc
   170d4:	ldr	r0, [r6]
   170d8:	mov	r2, r7
   170dc:	add	r1, r0, sl, lsl #3
   170e0:	add	r0, sp, #112	; 0x70
   170e4:	bl	1f280 <__mempcpy_chk@plt+0xdca0>
   170e8:	mov	r1, r0
   170ec:	mov	r0, #1
   170f0:	cmp	r1, #0
   170f4:	beq	17144 <__mempcpy_chk@plt+0x5b64>
   170f8:	ldr	r1, [r6, #12]
   170fc:	add	r7, r0, r7
   17100:	ldr	r0, [sp, #108]	; 0x6c
   17104:	ldr	r9, [r1, sl, lsl #2]
   17108:	cmp	r0, #0
   1710c:	str	r7, [fp, #-36]	; 0xffffffdc
   17110:	beq	171c0 <__mempcpy_chk@plt+0x5be0>
   17114:	ldr	r0, [sp, #204]	; 0xcc
   17118:	cmp	r7, r0
   1711c:	bgt	17144 <__mempcpy_chk@plt+0x5b64>
   17120:	ldr	r0, [sp, #212]	; 0xd4
   17124:	ldr	r0, [r0, r7, lsl #2]
   17128:	cmp	r0, #0
   1712c:	beq	17144 <__mempcpy_chk@plt+0x5b64>
   17130:	add	r0, r0, #4
   17134:	mov	r1, r9
   17138:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1713c:	cmp	r0, #0
   17140:	bne	171c0 <__mempcpy_chk@plt+0x5be0>
   17144:	ldr	r0, [sp, #100]	; 0x64
   17148:	ldr	r4, [sp, #92]	; 0x5c
   1714c:	ldr	r6, [sp, #108]	; 0x6c
   17150:	ldr	r3, [fp, #20]
   17154:	sub	r1, fp, #36	; 0x24
   17158:	str	r0, [sp]
   1715c:	sub	r0, fp, #48	; 0x30
   17160:	mov	r2, r4
   17164:	str	r0, [sp, #4]
   17168:	mov	r0, r6
   1716c:	bl	210ec <__mempcpy_chk@plt+0xfb0c>
   17170:	cmp	r0, #0
   17174:	blt	17538 <__mempcpy_chk@plt+0x5f58>
   17178:	ldr	r7, [fp, #-36]	; 0xffffffdc
   1717c:	mov	sl, r0
   17180:	b	171d8 <__mempcpy_chk@plt+0x5bf8>
   17184:	sub	r0, fp, #48	; 0x30
   17188:	mov	r1, sl
   1718c:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   17190:	cmp	r0, #0
   17194:	beq	171f4 <__mempcpy_chk@plt+0x5c14>
   17198:	ldr	r8, [sp, #36]	; 0x24
   1719c:	ldr	r7, [sp, #76]	; 0x4c
   171a0:	b	171c8 <__mempcpy_chk@plt+0x5be8>
   171a4:	cmp	r4, #0
   171a8:	beq	17250 <__mempcpy_chk@plt+0x5c70>
   171ac:	ldr	r0, [r6, #12]
   171b0:	ldr	r9, [r0, sl, lsl #2]
   171b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171b8:	add	r7, r0, r4
   171bc:	str	r7, [fp, #-36]	; 0xffffffdc
   171c0:	mov	r0, #0
   171c4:	str	r0, [fp, #-44]	; 0xffffffd4
   171c8:	cmn	r9, #1
   171cc:	ble	17328 <__mempcpy_chk@plt+0x5d48>
   171d0:	ldr	r4, [sp, #92]	; 0x5c
   171d4:	mov	sl, r9
   171d8:	ldr	r0, [fp, #20]
   171dc:	ldr	r9, [sp, #88]	; 0x58
   171e0:	ldr	r1, [sp, #104]	; 0x68
   171e4:	ldr	r0, [r0, #4]
   171e8:	cmp	r7, r0
   171ec:	ble	16dec <__mempcpy_chk@plt+0x580c>
   171f0:	b	17520 <__mempcpy_chk@plt+0x5f40>
   171f4:	ldr	r4, [sp, #108]	; 0x6c
   171f8:	ldr	r8, [sp, #36]	; 0x24
   171fc:	ldr	r7, [sp, #76]	; 0x4c
   17200:	cmp	r4, #0
   17204:	beq	1729c <__mempcpy_chk@plt+0x5cbc>
   17208:	ldr	r6, [r4]
   1720c:	ldr	r0, [r4, #4]
   17210:	add	r1, r6, #1
   17214:	cmp	r1, r0
   17218:	str	r1, [r4]
   1721c:	bne	172a4 <__mempcpy_chk@plt+0x5cc4>
   17220:	ldr	r0, [r4, #8]
   17224:	add	r1, r1, r1, lsl #1
   17228:	lsl	r1, r1, #4
   1722c:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   17230:	cmp	r0, #0
   17234:	beq	17320 <__mempcpy_chk@plt+0x5d40>
   17238:	str	r0, [r4, #8]
   1723c:	ldr	r7, [sp, #76]	; 0x4c
   17240:	ldr	r1, [r4, #4]
   17244:	lsl	r1, r1, #1
   17248:	str	r1, [r4, #4]
   1724c:	b	172a8 <__mempcpy_chk@plt+0x5cc8>
   17250:	sub	r0, fp, #48	; 0x30
   17254:	mov	r1, sl
   17258:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1725c:	cmp	r0, #0
   17260:	beq	17330 <__mempcpy_chk@plt+0x5d50>
   17264:	ldr	r0, [r6, #20]
   17268:	add	r1, sl, sl, lsl #1
   1726c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   17270:	add	r0, r0, r1, lsl #2
   17274:	ldr	r0, [r0, #8]
   17278:	ldr	r9, [r0]
   1727c:	ldr	r0, [sp, #212]	; 0xd4
   17280:	ldr	r0, [r0, r7, lsl #2]
   17284:	mov	r1, r9
   17288:	add	r0, r0, #4
   1728c:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   17290:	cmp	r0, #0
   17294:	bne	171c8 <__mempcpy_chk@plt+0x5be8>
   17298:	b	170d4 <__mempcpy_chk@plt+0x5af4>
   1729c:	mov	r9, sl
   172a0:	b	171c8 <__mempcpy_chk@plt+0x5be8>
   172a4:	ldr	r0, [r4, #8]
   172a8:	add	r1, r6, r6, lsl #1
   172ac:	str	r7, [r0, r1, lsl #3]!
   172b0:	mov	r7, r1
   172b4:	str	r9, [r0, #4]
   172b8:	ldr	r0, [sp, #80]	; 0x50
   172bc:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   172c0:	ldr	r1, [r4, #8]
   172c4:	mvn	r9, #1
   172c8:	cmp	r0, #0
   172cc:	add	r6, r1, r7, lsl #3
   172d0:	str	r0, [r6, #8]!
   172d4:	beq	1719c <__mempcpy_chk@plt+0x5bbc>
   172d8:	ldr	r1, [fp, #20]
   172dc:	ldr	r2, [sp, #96]	; 0x60
   172e0:	bl	1134c <memcpy@plt>
   172e4:	ldr	r0, [r6]
   172e8:	ldr	r1, [sp, #92]	; 0x5c
   172ec:	ldr	r2, [sp, #96]	; 0x60
   172f0:	add	r0, r0, r1, lsl #3
   172f4:	ldr	r1, [sp, #100]	; 0x64
   172f8:	bl	1134c <memcpy@plt>
   172fc:	ldr	r0, [r4, #8]
   17300:	sub	r1, fp, #48	; 0x30
   17304:	add	r0, r0, r7, lsl #3
   17308:	add	r0, r0, #12
   1730c:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   17310:	ldr	r7, [sp, #76]	; 0x4c
   17314:	cmp	r0, #0
   17318:	moveq	r9, sl
   1731c:	b	171c8 <__mempcpy_chk@plt+0x5be8>
   17320:	mvn	r9, #1
   17324:	b	1719c <__mempcpy_chk@plt+0x5bbc>
   17328:	cmn	r9, #2
   1732c:	bne	17144 <__mempcpy_chk@plt+0x5b64>
   17330:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17334:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17338:	ldr	r0, [fp, #-200]	; 0xffffff38
   1733c:	ldr	r4, [sp, #88]	; 0x58
   17340:	cmp	r0, r4
   17344:	beq	1734c <__mempcpy_chk@plt+0x5d6c>
   17348:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1734c:	mov	r0, #16
   17350:	str	r0, [fp, #-204]	; 0xffffff34
   17354:	mov	r0, #0
   17358:	str	r0, [fp, #-208]	; 0xffffff30
   1735c:	ldr	r0, [sp, #108]	; 0x6c
   17360:	str	r4, [fp, #-200]	; 0xffffff38
   17364:	bl	21084 <__mempcpy_chk@plt+0xfaa4>
   17368:	mov	r4, #12
   1736c:	b	173a4 <__mempcpy_chk@plt+0x5dc4>
   17370:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17374:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17378:	ldr	r0, [fp, #-200]	; 0xffffff38
   1737c:	cmp	r0, r9
   17380:	beq	17388 <__mempcpy_chk@plt+0x5da8>
   17384:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17388:	mov	r0, #16
   1738c:	mov	r4, #0
   17390:	str	r0, [fp, #-204]	; 0xffffff34
   17394:	str	r4, [fp, #-208]	; 0xffffff30
   17398:	str	r9, [fp, #-200]	; 0xffffff38
   1739c:	mov	r0, r7
   173a0:	bl	21084 <__mempcpy_chk@plt+0xfaa4>
   173a4:	ldr	sl, [fp, #20]
   173a8:	cmp	r4, #0
   173ac:	bne	174dc <__mempcpy_chk@plt+0x5efc>
   173b0:	ldrb	r1, [sp, #188]	; 0xbc
   173b4:	ldr	r2, [fp, #16]
   173b8:	add	r0, sl, #4
   173bc:	b	17410 <__mempcpy_chk@plt+0x5e30>
   173c0:	mov	r7, #0
   173c4:	b	15d30 <__mempcpy_chk@plt+0x4750>
   173c8:	mov	r4, #12
   173cc:	b	173a8 <__mempcpy_chk@plt+0x5dc8>
   173d0:	ldr	r7, [sp, #140]	; 0x8c
   173d4:	ldr	r6, [sp, #32]
   173d8:	ldr	ip, [sp, #124]	; 0x7c
   173dc:	cmp	r3, r7
   173e0:	mov	r4, r6
   173e4:	addne	r4, ip, r3, lsl #2
   173e8:	ldr	r3, [r4]
   173ec:	str	r3, [r0, #-4]
   173f0:	ldr	r4, [r0]
   173f4:	cmp	r4, r7
   173f8:	addne	r6, ip, r4, lsl #2
   173fc:	ldr	r7, [r6]
   17400:	add	r6, sl, r5, lsl #3
   17404:	add	r6, r6, #4
   17408:	str	r7, [r0]
   1740c:	b	1742c <__mempcpy_chk@plt+0x5e4c>
   17410:	ldr	r3, [r0, #-4]
   17414:	cmn	r3, #1
   17418:	beq	17440 <__mempcpy_chk@plt+0x5e60>
   1741c:	cmp	r1, #0
   17420:	bne	173d0 <__mempcpy_chk@plt+0x5df0>
   17424:	ldr	r7, [r0]
   17428:	mov	r6, r0
   1742c:	ldr	r4, [fp, #-212]	; 0xffffff2c
   17430:	add	r3, r3, r4
   17434:	str	r3, [r0, #-4]
   17438:	add	r3, r7, r4
   1743c:	str	r3, [r6]
   17440:	sub	r2, r2, #1
   17444:	add	r0, r0, #8
   17448:	add	r5, r5, #1
   1744c:	cmp	r8, r2
   17450:	bne	17410 <__mempcpy_chk@plt+0x5e30>
   17454:	ldr	r0, [sp, #92]	; 0x5c
   17458:	cmp	r8, #1
   1745c:	blt	17470 <__mempcpy_chk@plt+0x5e90>
   17460:	add	r0, sl, r0, lsl #3
   17464:	lsl	r2, r8, #3
   17468:	mov	r1, #255	; 0xff
   1746c:	bl	114f0 <memset@plt>
   17470:	ldr	r0, [sp, #84]	; 0x54
   17474:	mov	r4, #0
   17478:	ldr	r0, [r0, #132]	; 0x84
   1747c:	cmp	r0, #0
   17480:	beq	174dc <__mempcpy_chk@plt+0x5efc>
   17484:	ldr	r1, [sp, #92]	; 0x5c
   17488:	cmp	r1, #2
   1748c:	bcc	174dc <__mempcpy_chk@plt+0x5efc>
   17490:	ldr	r1, [fp, #16]
   17494:	mov	r2, #0
   17498:	sub	r1, r1, #1
   1749c:	sub	r1, r1, r8
   174a0:	ldr	r3, [r0, r2, lsl #2]
   174a4:	cmp	r2, r3
   174a8:	beq	174cc <__mempcpy_chk@plt+0x5eec>
   174ac:	add	r3, sl, r3, lsl #3
   174b0:	add	r7, sl, r2, lsl #3
   174b4:	ldr	r3, [r3, #8]
   174b8:	str	r3, [r7, #8]
   174bc:	ldr	r3, [r0, r2, lsl #2]
   174c0:	add	r3, sl, r3, lsl #3
   174c4:	ldr	r3, [r3, #12]
   174c8:	str	r3, [r7, #12]
   174cc:	add	r2, r2, #1
   174d0:	cmp	r1, r2
   174d4:	bne	174a0 <__mempcpy_chk@plt+0x5ec0>
   174d8:	mov	r4, #0
   174dc:	ldr	r0, [sp, #212]	; 0xd4
   174e0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   174e4:	ldr	r0, [sp, #64]	; 0x40
   174e8:	ldr	r0, [r0]
   174ec:	cmp	r0, #0
   174f0:	beq	1750c <__mempcpy_chk@plt+0x5f2c>
   174f4:	add	r0, sp, #112	; 0x70
   174f8:	bl	1d260 <__mempcpy_chk@plt+0xbc80>
   174fc:	ldr	r0, [sp, #244]	; 0xf4
   17500:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17504:	ldr	r0, [sp, #228]	; 0xe4
   17508:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1750c:	add	r0, sp, #112	; 0x70
   17510:	bl	17bec <__mempcpy_chk@plt+0x660c>
   17514:	mov	r0, r4
   17518:	sub	sp, fp, #28
   1751c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17520:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17524:	b	16dac <__mempcpy_chk@plt+0x57cc>
   17528:	mov	r4, #12
   1752c:	b	174dc <__mempcpy_chk@plt+0x5efc>
   17530:	mov	r4, r0
   17534:	b	174dc <__mempcpy_chk@plt+0x5efc>
   17538:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1753c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17540:	ldr	r0, [fp, #-200]	; 0xffffff38
   17544:	ldr	r4, [sp, #88]	; 0x58
   17548:	cmp	r0, r4
   1754c:	beq	17554 <__mempcpy_chk@plt+0x5f74>
   17550:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17554:	mov	r0, #16
   17558:	str	r0, [fp, #-204]	; 0xffffff34
   1755c:	mov	r0, #0
   17560:	str	r0, [fp, #-208]	; 0xffffff30
   17564:	mov	r0, r6
   17568:	str	r4, [fp, #-200]	; 0xffffff38
   1756c:	bl	21084 <__mempcpy_chk@plt+0xfaa4>
   17570:	mov	r4, #1
   17574:	b	173a4 <__mempcpy_chk@plt+0x5dc4>
   17578:	mov	r0, r7
   1757c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17580:	mov	r0, #0
   17584:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17588:	b	174dc <__mempcpy_chk@plt+0x5efc>
   1758c:	mov	r4, r0
   17590:	add	r0, r5, #76	; 0x4c
   17594:	str	r0, [sp, #64]	; 0x40
   17598:	b	174dc <__mempcpy_chk@plt+0x5efc>
   1759c:	mov	r4, #1
   175a0:	b	174dc <__mempcpy_chk@plt+0x5efc>
   175a4:	push	{fp, lr}
   175a8:	mov	fp, sp
   175ac:	sub	sp, sp, #16
   175b0:	mov	ip, #1
   175b4:	str	r2, [sp, #4]
   175b8:	str	ip, [sp, #12]
   175bc:	mov	ip, #0
   175c0:	str	ip, [sp]
   175c4:	ldr	ip, [fp, #8]
   175c8:	str	ip, [sp, #8]
   175cc:	bl	175d8 <__mempcpy_chk@plt+0x5ff8>
   175d0:	mov	sp, fp
   175d4:	pop	{fp, pc}
   175d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175dc:	add	fp, sp, #28
   175e0:	sub	sp, sp, #44	; 0x2c
   175e4:	mvn	r6, #0
   175e8:	cmp	r3, #0
   175ec:	blt	17880 <__mempcpy_chk@plt+0x62a0>
   175f0:	mov	r4, r3
   175f4:	mov	r9, r2
   175f8:	cmp	r3, r2
   175fc:	bgt	17880 <__mempcpy_chk@plt+0x62a0>
   17600:	mov	r7, r0
   17604:	ldr	r0, [fp, #8]
   17608:	mov	r8, r9
   1760c:	mov	sl, r1
   17610:	movw	r1, #0
   17614:	ldr	r6, [r7]
   17618:	movt	r1, #0
   1761c:	add	r0, r0, r4
   17620:	cmp	r0, r9
   17624:	bicle	r8, r0, r0, asr #31
   17628:	movw	r0, #0
   1762c:	movt	r0, #0
   17630:	orrs	r5, r1, r0
   17634:	beq	17640 <__mempcpy_chk@plt+0x6060>
   17638:	add	r0, r6, #136	; 0x88
   1763c:	bl	11334 <pthread_mutex_lock@plt>
   17640:	ldrb	r0, [r7, #28]
   17644:	ldr	r2, [fp, #16]
   17648:	cmp	r8, r4
   1764c:	ubfx	r1, r0, #5, #2
   17650:	str	r6, [sp, #20]
   17654:	str	r5, [sp, #36]	; 0x24
   17658:	str	r4, [sp, #32]
   1765c:	str	sl, [sp, #28]
   17660:	str	r1, [sp, #24]
   17664:	ble	17690 <__mempcpy_chk@plt+0x60b0>
   17668:	tst	r0, #8
   1766c:	bne	17690 <__mempcpy_chk@plt+0x60b0>
   17670:	ldr	r1, [r7, #16]
   17674:	cmp	r1, #0
   17678:	beq	17690 <__mempcpy_chk@plt+0x60b0>
   1767c:	mov	r0, r7
   17680:	mov	r4, r2
   17684:	bl	15370 <__mempcpy_chk@plt+0x3d90>
   17688:	ldrb	r0, [r7, #28]
   1768c:	mov	r2, r4
   17690:	mov	sl, #1
   17694:	mov	r6, #0
   17698:	cmp	r2, #0
   1769c:	str	r7, [fp, #-32]	; 0xffffffe0
   176a0:	beq	176ec <__mempcpy_chk@plt+0x610c>
   176a4:	ands	r1, r0, #16
   176a8:	bne	176ec <__mempcpy_chk@plt+0x610c>
   176ac:	and	r0, r0, #6
   176b0:	cmp	r0, #4
   176b4:	bne	176dc <__mempcpy_chk@plt+0x60fc>
   176b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176bc:	ldr	sl, [r2]
   176c0:	ldr	r0, [r0, #24]
   176c4:	cmp	sl, r0
   176c8:	bhi	176e4 <__mempcpy_chk@plt+0x6104>
   176cc:	cmp	sl, #1
   176d0:	movwlt	r2, #0
   176d4:	movwlt	sl, #1
   176d8:	b	176e8 <__mempcpy_chk@plt+0x6108>
   176dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176e0:	ldr	r0, [r0, #24]
   176e4:	add	sl, r0, #1
   176e8:	mov	r6, r2
   176ec:	lsl	r0, sl, #3
   176f0:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   176f4:	cmp	r0, #0
   176f8:	beq	1788c <__mempcpy_chk@plt+0x62ac>
   176fc:	mov	r4, r0
   17700:	ldr	r0, [fp, #12]
   17704:	str	r8, [sp]
   17708:	mov	r2, r9
   1770c:	stmib	sp, {r0, sl}
   17710:	str	r4, [sp, #12]
   17714:	ldr	r0, [sp, #24]
   17718:	ldr	r5, [sp, #32]
   1771c:	ldr	r1, [sp, #28]
   17720:	str	r0, [sp, #16]
   17724:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17728:	mov	r3, r5
   1772c:	bl	15c4c <__mempcpy_chk@plt+0x466c>
   17730:	cmp	r0, #0
   17734:	beq	17748 <__mempcpy_chk@plt+0x6168>
   17738:	mvn	r6, #1
   1773c:	cmp	r0, #1
   17740:	mvneq	r6, #0
   17744:	b	17860 <__mempcpy_chk@plt+0x6280>
   17748:	cmp	r6, #0
   1774c:	beq	17844 <__mempcpy_chk@plt+0x6264>
   17750:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17754:	add	r9, sl, #1
   17758:	ldrb	r0, [r0, #28]
   1775c:	ubfx	r0, r0, #1, #2
   17760:	cmp	r0, #1
   17764:	beq	177b0 <__mempcpy_chk@plt+0x61d0>
   17768:	mov	r8, #2
   1776c:	cmp	r0, #0
   17770:	bne	177c0 <__mempcpy_chk@plt+0x61e0>
   17774:	lsl	r8, r9, #2
   17778:	mov	r0, r8
   1777c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   17780:	mov	r7, #0
   17784:	cmp	r0, #0
   17788:	str	r0, [r6, #4]
   1778c:	beq	17828 <__mempcpy_chk@plt+0x6248>
   17790:	mov	r0, r8
   17794:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   17798:	cmp	r0, #0
   1779c:	str	r0, [r6, #8]
   177a0:	beq	178e0 <__mempcpy_chk@plt+0x6300>
   177a4:	str	r9, [r6]
   177a8:	mov	r8, #1
   177ac:	b	177c0 <__mempcpy_chk@plt+0x61e0>
   177b0:	ldr	r0, [r6]
   177b4:	mov	r8, #1
   177b8:	cmp	r9, r0
   177bc:	bhi	17898 <__mempcpy_chk@plt+0x62b8>
   177c0:	cmp	sl, #1
   177c4:	blt	177f4 <__mempcpy_chk@plt+0x6214>
   177c8:	ldmib	r6, {r1, r2}
   177cc:	add	r0, r4, #4
   177d0:	mov	r3, sl
   177d4:	ldr	r7, [r0, #-4]
   177d8:	subs	r3, r3, #1
   177dc:	str	r7, [r1], #4
   177e0:	ldr	r7, [r0]
   177e4:	add	r0, r0, #8
   177e8:	str	r7, [r2], #4
   177ec:	bne	177d4 <__mempcpy_chk@plt+0x61f4>
   177f0:	b	177f8 <__mempcpy_chk@plt+0x6218>
   177f4:	mov	sl, #0
   177f8:	ldr	r0, [r6]
   177fc:	cmp	sl, r0
   17800:	bcs	17824 <__mempcpy_chk@plt+0x6244>
   17804:	ldmib	r6, {r0, r1}
   17808:	mvn	r2, #0
   1780c:	str	r2, [r1, sl, lsl #2]
   17810:	str	r2, [r0, sl, lsl #2]
   17814:	add	sl, sl, #1
   17818:	ldr	r3, [r6]
   1781c:	cmp	sl, r3
   17820:	bcc	1780c <__mempcpy_chk@plt+0x622c>
   17824:	mov	r7, r8
   17828:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1782c:	cmp	r7, #0
   17830:	ldrb	r0, [r1, #28]
   17834:	and	r0, r0, #249	; 0xf9
   17838:	orr	r0, r0, r7, lsl #1
   1783c:	strb	r0, [r1, #28]
   17840:	beq	1785c <__mempcpy_chk@plt+0x627c>
   17844:	ldr	r0, [fp, #20]
   17848:	cmp	r0, #0
   1784c:	ldreq	r6, [r4]
   17850:	ldrne	r0, [r4, #4]
   17854:	subne	r6, r0, r5
   17858:	b	17860 <__mempcpy_chk@plt+0x6280>
   1785c:	mvn	r6, #1
   17860:	ldr	r5, [sp, #36]	; 0x24
   17864:	mov	r0, r4
   17868:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1786c:	cmp	r5, #0
   17870:	beq	17880 <__mempcpy_chk@plt+0x62a0>
   17874:	ldr	r0, [sp, #20]
   17878:	add	r0, r0, #136	; 0x88
   1787c:	bl	1128c <pthread_mutex_unlock@plt>
   17880:	mov	r0, r6
   17884:	sub	sp, fp, #28
   17888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1788c:	ldr	r5, [sp, #36]	; 0x24
   17890:	mvn	r6, #1
   17894:	b	1786c <__mempcpy_chk@plt+0x628c>
   17898:	ldr	r0, [r6, #4]
   1789c:	lsl	r1, r9, #2
   178a0:	str	r1, [sp, #28]
   178a4:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   178a8:	mov	r7, #0
   178ac:	cmp	r0, #0
   178b0:	str	r0, [sp, #24]
   178b4:	beq	17828 <__mempcpy_chk@plt+0x6248>
   178b8:	ldr	r0, [r6, #8]
   178bc:	ldr	r1, [sp, #28]
   178c0:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   178c4:	cmp	r0, #0
   178c8:	beq	178ec <__mempcpy_chk@plt+0x630c>
   178cc:	ldr	r1, [sp, #24]
   178d0:	str	r9, [r6]
   178d4:	str	r1, [r6, #4]
   178d8:	str	r0, [r6, #8]
   178dc:	b	177c0 <__mempcpy_chk@plt+0x61e0>
   178e0:	ldr	r0, [r6, #4]
   178e4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   178e8:	b	17828 <__mempcpy_chk@plt+0x6248>
   178ec:	ldr	r0, [sp, #24]
   178f0:	b	178e4 <__mempcpy_chk@plt+0x6304>
   178f4:	push	{fp, lr}
   178f8:	mov	fp, sp
   178fc:	sub	sp, sp, #16
   17900:	mov	ip, #0
   17904:	str	r2, [sp, #4]
   17908:	str	ip, [sp, #12]
   1790c:	ldr	ip, [fp, #12]
   17910:	str	ip, [sp, #8]
   17914:	ldr	ip, [fp, #8]
   17918:	str	ip, [sp]
   1791c:	bl	175d8 <__mempcpy_chk@plt+0x5ff8>
   17920:	mov	sp, fp
   17924:	pop	{fp, pc}
   17928:	push	{fp, lr}
   1792c:	mov	fp, sp
   17930:	sub	sp, sp, #24
   17934:	mov	ip, #1
   17938:	str	ip, [sp, #20]
   1793c:	mov	ip, #0
   17940:	str	ip, [sp, #8]
   17944:	ldr	ip, [fp, #20]
   17948:	str	ip, [sp, #16]
   1794c:	ldr	ip, [fp, #16]
   17950:	str	ip, [sp, #12]
   17954:	ldr	ip, [fp, #12]
   17958:	str	ip, [sp, #4]
   1795c:	ldr	ip, [fp, #8]
   17960:	str	ip, [sp]
   17964:	bl	17970 <__mempcpy_chk@plt+0x6390>
   17968:	mov	sp, fp
   1796c:	pop	{fp, pc}
   17970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17974:	add	fp, sp, #28
   17978:	sub	sp, sp, #20
   1797c:	ldr	r4, [fp, #8]
   17980:	mov	r8, r1
   17984:	mov	r1, r0
   17988:	mov	r6, r2
   1798c:	orr	r0, r4, r2
   17990:	ldr	r2, [fp, #24]
   17994:	orr	r0, r0, r2
   17998:	cmp	r0, #0
   1799c:	blt	17a50 <__mempcpy_chk@plt+0x6470>
   179a0:	adds	sl, r6, r4
   179a4:	bvs	17a50 <__mempcpy_chk@plt+0x6470>
   179a8:	mov	r5, #0
   179ac:	cmp	r4, #1
   179b0:	blt	17a04 <__mempcpy_chk@plt+0x6424>
   179b4:	mov	r9, r3
   179b8:	cmp	r6, #1
   179bc:	blt	17a0c <__mempcpy_chk@plt+0x642c>
   179c0:	mov	r0, sl
   179c4:	mov	r5, r1
   179c8:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   179cc:	cmp	r0, #0
   179d0:	beq	17a50 <__mempcpy_chk@plt+0x6470>
   179d4:	mov	r1, r8
   179d8:	mov	r2, r6
   179dc:	mov	r7, r0
   179e0:	bl	1134c <memcpy@plt>
   179e4:	add	r0, r7, r6
   179e8:	mov	r1, r9
   179ec:	mov	r2, r4
   179f0:	bl	1134c <memcpy@plt>
   179f4:	ldr	r2, [fp, #24]
   179f8:	mov	r1, r5
   179fc:	mov	r5, r7
   17a00:	b	17a10 <__mempcpy_chk@plt+0x6430>
   17a04:	mov	r7, r8
   17a08:	b	17a10 <__mempcpy_chk@plt+0x6430>
   17a0c:	mov	r7, r9
   17a10:	add	r6, fp, #12
   17a14:	ldr	r0, [fp, #28]
   17a18:	ldm	r6, {r3, r4, r6}
   17a1c:	str	r4, [sp]
   17a20:	stmib	sp, {r2, r6}
   17a24:	str	r0, [sp, #12]
   17a28:	mov	r0, r1
   17a2c:	mov	r1, r7
   17a30:	mov	r2, sl
   17a34:	bl	175d8 <__mempcpy_chk@plt+0x5ff8>
   17a38:	mov	r4, r0
   17a3c:	mov	r0, r5
   17a40:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17a44:	mov	r0, r4
   17a48:	sub	sp, fp, #28
   17a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a50:	mvn	r0, #1
   17a54:	sub	sp, fp, #28
   17a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a5c:	push	{fp, lr}
   17a60:	mov	fp, sp
   17a64:	sub	sp, sp, #24
   17a68:	mov	ip, #0
   17a6c:	str	ip, [sp, #20]
   17a70:	ldr	ip, [fp, #24]
   17a74:	str	ip, [sp, #16]
   17a78:	ldr	ip, [fp, #20]
   17a7c:	str	ip, [sp, #12]
   17a80:	ldr	ip, [fp, #16]
   17a84:	str	ip, [sp, #8]
   17a88:	ldr	ip, [fp, #12]
   17a8c:	str	ip, [sp, #4]
   17a90:	ldr	ip, [fp, #8]
   17a94:	str	ip, [sp]
   17a98:	bl	17970 <__mempcpy_chk@plt+0x6390>
   17a9c:	mov	sp, fp
   17aa0:	pop	{fp, pc}
   17aa4:	ldrb	ip, [r0, #28]
   17aa8:	cmp	r2, #0
   17aac:	bic	ip, ip, #6
   17ab0:	orrne	ip, ip, #2
   17ab4:	strb	ip, [r0, #28]
   17ab8:	ldr	r0, [sp]
   17abc:	moveq	r0, r2
   17ac0:	cmp	r2, #0
   17ac4:	moveq	r3, r2
   17ac8:	stm	r1, {r2, r3}
   17acc:	str	r0, [r1, #8]
   17ad0:	bx	lr
   17ad4:	ldr	r1, [r0, #4]
   17ad8:	movw	r2, #255	; 0xff
   17adc:	movt	r2, #4
   17ae0:	and	r1, r1, r2
   17ae4:	cmp	r1, #3
   17ae8:	beq	17afc <__mempcpy_chk@plt+0x651c>
   17aec:	cmp	r1, #6
   17af0:	bxne	lr
   17af4:	ldr	r0, [r0]
   17af8:	b	17b64 <__mempcpy_chk@plt+0x6584>
   17afc:	ldr	r0, [r0]
   17b00:	b	12a84 <__mempcpy_chk@plt+0x14a4>
   17b04:	push	{r4, sl, fp, lr}
   17b08:	add	fp, sp, #8
   17b0c:	mov	r4, r0
   17b10:	ldr	r0, [r0, #24]
   17b14:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b18:	ldr	r0, [r4, #36]	; 0x24
   17b1c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b20:	ldr	r0, [r4, #40]	; 0x28
   17b24:	add	r1, r4, #4
   17b28:	cmp	r0, r1
   17b2c:	beq	17b40 <__mempcpy_chk@plt+0x6560>
   17b30:	ldr	r0, [r0, #8]
   17b34:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b38:	ldr	r0, [r4, #40]	; 0x28
   17b3c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b40:	ldr	r0, [r4, #12]
   17b44:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b48:	ldr	r0, [r4, #48]	; 0x30
   17b4c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b50:	ldr	r0, [r4, #44]	; 0x2c
   17b54:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b58:	mov	r0, r4
   17b5c:	pop	{r4, sl, fp, lr}
   17b60:	b	12a84 <__mempcpy_chk@plt+0x14a4>
   17b64:	push	{r4, sl, fp, lr}
   17b68:	add	fp, sp, #8
   17b6c:	mov	r4, r0
   17b70:	ldr	r0, [r0]
   17b74:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b78:	ldr	r0, [r4, #4]
   17b7c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b80:	ldr	r0, [r4, #8]
   17b84:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b88:	ldr	r0, [r4, #12]
   17b8c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17b90:	mov	r0, r4
   17b94:	pop	{r4, sl, fp, lr}
   17b98:	b	12a84 <__mempcpy_chk@plt+0x14a4>
   17b9c:	push	{r4, r5, fp, lr}
   17ba0:	add	fp, sp, #8
   17ba4:	ldr	r4, [r0]
   17ba8:	ldr	r0, [r4, #56]	; 0x38
   17bac:	cmp	r0, #0
   17bb0:	beq	17bc8 <__mempcpy_chk@plt+0x65e8>
   17bb4:	ldr	r5, [r0]
   17bb8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17bbc:	cmp	r5, #0
   17bc0:	mov	r0, r5
   17bc4:	bne	17bb4 <__mempcpy_chk@plt+0x65d4>
   17bc8:	mov	r0, #31
   17bcc:	mov	r5, #0
   17bd0:	str	r0, [r4, #64]	; 0x40
   17bd4:	str	r5, [r4, #52]	; 0x34
   17bd8:	str	r5, [r4, #56]	; 0x38
   17bdc:	ldr	r0, [r4, #16]
   17be0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17be4:	str	r5, [r4, #16]
   17be8:	pop	{r4, r5, fp, pc}
   17bec:	push	{r4, sl, fp, lr}
   17bf0:	add	fp, sp, #8
   17bf4:	mov	r4, r0
   17bf8:	ldr	r0, [r0, #8]
   17bfc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17c00:	ldr	r0, [r4, #12]
   17c04:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   17c08:	ldrb	r0, [r4, #75]	; 0x4b
   17c0c:	cmp	r0, #0
   17c10:	popeq	{r4, sl, fp, pc}
   17c14:	ldr	r0, [r4, #4]
   17c18:	pop	{r4, sl, fp, lr}
   17c1c:	b	12a84 <__mempcpy_chk@plt+0x14a4>
   17c20:	push	{r4, r5, r6, r7, fp, lr}
   17c24:	add	fp, sp, #16
   17c28:	mov	r5, r0
   17c2c:	ldr	r0, [r0, #80]	; 0x50
   17c30:	mov	r4, r1
   17c34:	cmp	r0, #2
   17c38:	blt	17c84 <__mempcpy_chk@plt+0x66a4>
   17c3c:	mov	r6, #12
   17c40:	cmn	r4, #-1073741823	; 0xc0000001
   17c44:	bhi	17cb0 <__mempcpy_chk@plt+0x66d0>
   17c48:	ldr	r0, [r5, #8]
   17c4c:	lsl	r7, r4, #2
   17c50:	mov	r1, r7
   17c54:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   17c58:	cmp	r0, #0
   17c5c:	beq	17cb0 <__mempcpy_chk@plt+0x66d0>
   17c60:	str	r0, [r5, #8]
   17c64:	ldr	r0, [r5, #12]
   17c68:	cmp	r0, #0
   17c6c:	beq	17c84 <__mempcpy_chk@plt+0x66a4>
   17c70:	mov	r1, r7
   17c74:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   17c78:	cmp	r0, #0
   17c7c:	beq	17cb0 <__mempcpy_chk@plt+0x66d0>
   17c80:	str	r0, [r5, #12]
   17c84:	ldrb	r0, [r5, #75]	; 0x4b
   17c88:	cmp	r0, #0
   17c8c:	beq	17ca8 <__mempcpy_chk@plt+0x66c8>
   17c90:	ldr	r0, [r5, #4]
   17c94:	mov	r1, r4
   17c98:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   17c9c:	cmp	r0, #0
   17ca0:	beq	17cb8 <__mempcpy_chk@plt+0x66d8>
   17ca4:	str	r0, [r5, #4]
   17ca8:	mov	r6, #0
   17cac:	str	r4, [r5, #36]	; 0x24
   17cb0:	mov	r0, r6
   17cb4:	pop	{r4, r5, r6, r7, fp, pc}
   17cb8:	mov	r6, #12
   17cbc:	b	17cb0 <__mempcpy_chk@plt+0x66d0>
   17cc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17cc4:	add	fp, sp, #28
   17cc8:	sub	sp, sp, #92	; 0x5c
   17ccc:	mov	r4, r0
   17cd0:	ldrb	r0, [r0, #74]	; 0x4a
   17cd4:	ldr	r2, [r4, #36]	; 0x24
   17cd8:	ldr	r1, [r4, #48]	; 0x30
   17cdc:	ldr	r5, [r4, #28]
   17ce0:	cmp	r2, r1
   17ce4:	movgt	r2, r1
   17ce8:	cmp	r0, #0
   17cec:	str	r2, [sp, #4]
   17cf0:	bne	17d10 <__mempcpy_chk@plt+0x6730>
   17cf4:	mov	r8, r4
   17cf8:	ldr	r0, [r8, #64]!	; 0x40
   17cfc:	cmp	r0, #0
   17d00:	bne	17d10 <__mempcpy_chk@plt+0x6730>
   17d04:	ldrb	r0, [r4, #76]	; 0x4c
   17d08:	cmp	r0, #0
   17d0c:	beq	17d18 <__mempcpy_chk@plt+0x6738>
   17d10:	ldr	r7, [r4, #32]
   17d14:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   17d18:	ldr	r0, [sp, #4]
   17d1c:	cmp	r0, r5
   17d20:	ble	17d30 <__mempcpy_chk@plt+0x6750>
   17d24:	add	r9, r4, #16
   17d28:	mov	sl, r5
   17d2c:	b	17d84 <__mempcpy_chk@plt+0x67a4>
   17d30:	mov	sl, r5
   17d34:	mov	r7, r5
   17d38:	b	17ff0 <__mempcpy_chk@plt+0x6a10>
   17d3c:	add	r0, r5, #1
   17d40:	cmp	r0, #2
   17d44:	bcc	17d58 <__mempcpy_chk@plt+0x6778>
   17d48:	ldr	r0, [r4, #36]	; 0x24
   17d4c:	ldr	r1, [r4, #48]	; 0x30
   17d50:	cmp	r0, r1
   17d54:	blt	17ed0 <__mempcpy_chk@plt+0x68f0>
   17d58:	ldr	r0, [r4, #4]
   17d5c:	cmn	r5, #1
   17d60:	strb	sl, [r0, r7]
   17d64:	ldr	r0, [r4, #8]
   17d68:	str	sl, [r0, r7, lsl #2]
   17d6c:	add	sl, r7, #1
   17d70:	bne	17eb4 <__mempcpy_chk@plt+0x68d4>
   17d74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17d7c:	stm	r9, {r0, r1}
   17d80:	b	17eb4 <__mempcpy_chk@plt+0x68d4>
   17d84:	ldr	r7, [r4, #24]
   17d88:	ldr	r5, [r4]
   17d8c:	mov	r6, sl
   17d90:	add	r0, r7, sl
   17d94:	ldrb	sl, [r5, r0]
   17d98:	tst	sl, #128	; 0x80
   17d9c:	bne	17de0 <__mempcpy_chk@plt+0x6800>
   17da0:	mov	r0, r9
   17da4:	bl	1137c <mbsinit@plt>
   17da8:	cmp	r0, #0
   17dac:	beq	17de0 <__mempcpy_chk@plt+0x6800>
   17db0:	mov	r0, sl
   17db4:	bl	115a4 <towupper@plt>
   17db8:	cmp	r0, #128	; 0x80
   17dbc:	bcs	17dd8 <__mempcpy_chk@plt+0x67f8>
   17dc0:	ldr	r1, [r4, #4]
   17dc4:	add	sl, r6, #1
   17dc8:	strb	r0, [r1, r6]
   17dcc:	ldr	r1, [r4, #8]
   17dd0:	str	r0, [r1, r6, lsl #2]
   17dd4:	b	17eb4 <__mempcpy_chk@plt+0x68d4>
   17dd8:	ldr	r5, [r4]
   17ddc:	ldr	r7, [r4, #24]
   17de0:	ldm	r9, {r0, r1}
   17de4:	mov	r3, r9
   17de8:	str	r0, [fp, #-40]	; 0xffffffd8
   17dec:	ldr	r0, [sp, #4]
   17df0:	str	r1, [fp, #-36]	; 0xffffffdc
   17df4:	sub	r2, r0, r6
   17df8:	add	r0, r5, r7
   17dfc:	mov	r7, r6
   17e00:	add	r1, r0, r6
   17e04:	add	r0, sp, #12
   17e08:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   17e0c:	mov	r5, r0
   17e10:	sub	r0, r0, #1
   17e14:	cmn	r0, #4
   17e18:	bhi	17d3c <__mempcpy_chk@plt+0x675c>
   17e1c:	ldr	r0, [sp, #12]
   17e20:	bl	115a4 <towupper@plt>
   17e24:	mov	r6, r0
   17e28:	ldr	r0, [sp, #12]
   17e2c:	cmp	r6, r0
   17e30:	bne	17e50 <__mempcpy_chk@plt+0x6870>
   17e34:	ldr	r1, [r4]
   17e38:	ldr	r2, [r4, #24]
   17e3c:	ldr	r0, [r4, #4]
   17e40:	add	r1, r1, r2
   17e44:	add	r0, r0, r7
   17e48:	add	r1, r1, r7
   17e4c:	b	17e78 <__mempcpy_chk@plt+0x6898>
   17e50:	add	sl, sp, #16
   17e54:	mov	r1, r6
   17e58:	sub	r2, fp, #40	; 0x28
   17e5c:	mov	r0, sl
   17e60:	bl	112d4 <wcrtomb@plt>
   17e64:	cmp	r5, r0
   17e68:	bne	17ec8 <__mempcpy_chk@plt+0x68e8>
   17e6c:	ldr	r0, [r4, #4]
   17e70:	mov	r1, sl
   17e74:	add	r0, r0, r7
   17e78:	mov	r2, r5
   17e7c:	bl	1134c <memcpy@plt>
   17e80:	ldr	r0, [r4, #8]
   17e84:	add	sl, r7, #1
   17e88:	str	r6, [r0, r7, lsl #2]
   17e8c:	add	r6, r5, r7
   17e90:	cmp	sl, r6
   17e94:	bge	17eb4 <__mempcpy_chk@plt+0x68d4>
   17e98:	add	r0, r0, r7, lsl #2
   17e9c:	mvn	r1, #3
   17ea0:	add	r2, r1, r5, lsl #2
   17ea4:	add	r0, r0, #4
   17ea8:	mov	r1, #255	; 0xff
   17eac:	bl	114f0 <memset@plt>
   17eb0:	mov	sl, r6
   17eb4:	ldr	r0, [sp, #4]
   17eb8:	mov	r7, sl
   17ebc:	cmp	r0, sl
   17ec0:	bgt	17d84 <__mempcpy_chk@plt+0x67a4>
   17ec4:	b	17ff0 <__mempcpy_chk@plt+0x6a10>
   17ec8:	mov	sl, r7
   17ecc:	b	17efc <__mempcpy_chk@plt+0x691c>
   17ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ed4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17ed8:	mov	sl, r7
   17edc:	stm	r9, {r0, r1}
   17ee0:	b	17ff0 <__mempcpy_chk@plt+0x6a10>
   17ee4:	ldr	r0, [sp, #4]
   17ee8:	cmp	r5, r0
   17eec:	bge	17fec <__mempcpy_chk@plt+0x6a0c>
   17ef0:	add	r8, r4, #64	; 0x40
   17ef4:	add	r9, r4, #16
   17ef8:	mov	sl, r5
   17efc:	ldm	r9, {r0, r1}
   17f00:	str	r7, [sp]
   17f04:	str	r0, [fp, #-40]	; 0xffffffd8
   17f08:	ldr	r0, [sp, #4]
   17f0c:	str	r1, [fp, #-36]	; 0xffffffdc
   17f10:	sub	r2, r0, sl
   17f14:	ldr	r0, [r8]
   17f18:	cmp	r0, #0
   17f1c:	bne	18004 <__mempcpy_chk@plt+0x6a24>
   17f20:	ldr	r0, [r4]
   17f24:	ldr	r1, [r4, #24]
   17f28:	add	r0, r0, r1
   17f2c:	add	r5, r0, r7
   17f30:	add	r0, sp, #8
   17f34:	mov	r1, r5
   17f38:	mov	r3, r9
   17f3c:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   17f40:	sub	r8, r0, #1
   17f44:	mov	r6, r0
   17f48:	cmn	r8, #4
   17f4c:	bhi	18058 <__mempcpy_chk@plt+0x6a78>
   17f50:	ldr	r0, [sp, #8]
   17f54:	bl	115a4 <towupper@plt>
   17f58:	mov	r7, r0
   17f5c:	ldr	r0, [sp, #8]
   17f60:	cmp	r7, r0
   17f64:	bne	17f74 <__mempcpy_chk@plt+0x6994>
   17f68:	ldr	r0, [r4, #4]
   17f6c:	mov	r1, r5
   17f70:	b	17f94 <__mempcpy_chk@plt+0x69b4>
   17f74:	add	r0, sp, #16
   17f78:	sub	r2, fp, #40	; 0x28
   17f7c:	mov	r1, r7
   17f80:	bl	112d4 <wcrtomb@plt>
   17f84:	cmp	r0, r6
   17f88:	bne	180d4 <__mempcpy_chk@plt+0x6af4>
   17f8c:	ldr	r0, [r4, #4]
   17f90:	add	r1, sp, #16
   17f94:	add	r0, r0, sl
   17f98:	mov	r2, r6
   17f9c:	bl	1134c <memcpy@plt>
   17fa0:	ldrb	r0, [r4, #76]	; 0x4c
   17fa4:	cmp	r0, #0
   17fa8:	bne	181f0 <__mempcpy_chk@plt+0x6c10>
   17fac:	ldr	r0, [r4, #8]
   17fb0:	add	r5, r6, sl
   17fb4:	add	r1, sl, #1
   17fb8:	cmp	r1, r5
   17fbc:	str	r7, [r0, sl, lsl #2]
   17fc0:	ldr	r7, [sp]
   17fc4:	add	r7, r6, r7
   17fc8:	bge	17fe4 <__mempcpy_chk@plt+0x6a04>
   17fcc:	add	r0, r0, r1, lsl #2
   17fd0:	mvn	r1, #3
   17fd4:	add	r2, r1, r6, lsl #2
   17fd8:	mov	r1, #255	; 0xff
   17fdc:	bl	114f0 <memset@plt>
   17fe0:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   17fe4:	mov	r5, r1
   17fe8:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   17fec:	mov	sl, r5
   17ff0:	mov	r0, #0
   17ff4:	str	sl, [r4, #28]
   17ff8:	str	r7, [r4, #32]
   17ffc:	sub	sp, fp, #28
   18000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18004:	cmp	r2, #1
   18008:	add	r5, sp, #16
   1800c:	ldrge	r1, [r4, #80]	; 0x50
   18010:	cmpge	r1, #1
   18014:	blt	17f30 <__mempcpy_chk@plt+0x6950>
   18018:	mov	r6, r7
   1801c:	ldr	r7, [r4, #24]
   18020:	ldr	r3, [r4]
   18024:	add	r5, sp, #16
   18028:	add	r7, r6, r7
   1802c:	add	r3, r3, r7
   18030:	mov	r7, #0
   18034:	ldrb	r6, [r3, r7]
   18038:	ldrb	r6, [r0, r6]
   1803c:	strb	r6, [r5, r7]
   18040:	add	r7, r7, #1
   18044:	cmp	r7, r2
   18048:	bge	17f30 <__mempcpy_chk@plt+0x6950>
   1804c:	cmp	r7, r1
   18050:	blt	18034 <__mempcpy_chk@plt+0x6a54>
   18054:	b	17f30 <__mempcpy_chk@plt+0x6950>
   18058:	add	r0, r6, #1
   1805c:	cmp	r0, #2
   18060:	bcc	18074 <__mempcpy_chk@plt+0x6a94>
   18064:	ldr	r0, [r4, #36]	; 0x24
   18068:	ldr	r1, [r4, #48]	; 0x30
   1806c:	cmp	r0, r1
   18070:	blt	18214 <__mempcpy_chk@plt+0x6c34>
   18074:	ldr	r2, [r4, #24]
   18078:	ldr	r7, [sp]
   1807c:	ldr	r0, [r4]
   18080:	ldr	r1, [r4, #64]	; 0x40
   18084:	add	r5, sl, #1
   18088:	add	r2, r2, r7
   1808c:	cmp	r1, #0
   18090:	ldrb	r0, [r0, r2]
   18094:	ldrbne	r0, [r1, r0]
   18098:	ldr	r1, [r4, #4]
   1809c:	strb	r0, [r1, sl]
   180a0:	ldrb	r1, [r4, #76]	; 0x4c
   180a4:	cmp	r1, #0
   180a8:	ldrne	r1, [r4, #12]
   180ac:	strne	r7, [r1, sl, lsl #2]
   180b0:	add	r7, r7, #1
   180b4:	cmn	r6, #1
   180b8:	ldr	r1, [r4, #8]
   180bc:	str	r0, [r1, sl, lsl #2]
   180c0:	bne	17ee4 <__mempcpy_chk@plt+0x6904>
   180c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   180c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   180cc:	stm	r9, {r0, r1}
   180d0:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   180d4:	mov	r2, r0
   180d8:	cmn	r0, #1
   180dc:	beq	17f68 <__mempcpy_chk@plt+0x6988>
   180e0:	ldr	r1, [r4, #36]	; 0x24
   180e4:	add	r5, r2, sl
   180e8:	cmp	r5, r1
   180ec:	bhi	18214 <__mempcpy_chk@plt+0x6c34>
   180f0:	ldr	r0, [r4, #12]
   180f4:	cmp	r0, #0
   180f8:	bne	18118 <__mempcpy_chk@plt+0x6b38>
   180fc:	lsl	r0, r1, #2
   18100:	mov	r9, r2
   18104:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   18108:	mov	r2, r9
   1810c:	cmp	r0, #0
   18110:	str	r0, [r4, #12]
   18114:	beq	18228 <__mempcpy_chk@plt+0x6c48>
   18118:	ldrb	r1, [r4, #76]	; 0x4c
   1811c:	cmp	r1, #0
   18120:	bne	18148 <__mempcpy_chk@plt+0x6b68>
   18124:	cmp	sl, #0
   18128:	beq	18140 <__mempcpy_chk@plt+0x6b60>
   1812c:	mov	r1, #0
   18130:	str	r1, [r0, r1, lsl #2]
   18134:	add	r1, r1, #1
   18138:	cmp	sl, r1
   1813c:	bne	18130 <__mempcpy_chk@plt+0x6b50>
   18140:	mov	r0, #1
   18144:	strb	r0, [r4, #76]	; 0x4c
   18148:	ldr	r0, [r4, #4]
   1814c:	add	r1, sp, #16
   18150:	mov	r9, r2
   18154:	add	r0, r0, sl
   18158:	bl	1134c <memcpy@plt>
   1815c:	ldr	r1, [r4, #8]
   18160:	ldr	r3, [sp]
   18164:	mov	lr, r9
   18168:	cmp	r9, #2
   1816c:	str	r7, [r1, sl, lsl #2]
   18170:	ldr	r0, [r4, #12]
   18174:	str	r3, [r0, sl, lsl #2]
   18178:	bcc	181b0 <__mempcpy_chk@plt+0x6bd0>
   1817c:	add	r0, r0, sl, lsl #2
   18180:	add	r1, r1, sl, lsl #2
   18184:	mov	r2, #1
   18188:	mvn	ip, #0
   1818c:	cmp	r2, r6
   18190:	mov	r7, r8
   18194:	movcc	r7, r2
   18198:	add	r7, r7, r3
   1819c:	str	r7, [r0, r2, lsl #2]
   181a0:	str	ip, [r1, r2, lsl #2]
   181a4:	add	r2, r2, #1
   181a8:	cmp	lr, r2
   181ac:	bne	1818c <__mempcpy_chk@plt+0x6bac>
   181b0:	ldr	r0, [r4, #48]	; 0x30
   181b4:	ldr	r2, [r4, #52]	; 0x34
   181b8:	sub	r1, lr, r6
   181bc:	mov	r7, r3
   181c0:	add	r7, r6, r7
   181c4:	add	r0, r0, r1
   181c8:	cmp	r2, r3
   181cc:	str	r0, [r4, #48]	; 0x30
   181d0:	ldrgt	r2, [r4, #56]	; 0x38
   181d4:	addgt	r1, r2, r1
   181d8:	strgt	r1, [r4, #56]	; 0x38
   181dc:	ldr	r1, [r4, #36]	; 0x24
   181e0:	cmp	r1, r0
   181e4:	movgt	r1, r0
   181e8:	str	r1, [sp, #4]
   181ec:	b	17ee4 <__mempcpy_chk@plt+0x6904>
   181f0:	ldr	r0, [r4, #12]
   181f4:	ldr	r1, [sp]
   181f8:	mov	r2, r6
   181fc:	add	r0, r0, sl, lsl #2
   18200:	str	r1, [r0], #4
   18204:	add	r1, r1, #1
   18208:	subs	r2, r2, #1
   1820c:	bne	18200 <__mempcpy_chk@plt+0x6c20>
   18210:	b	17fac <__mempcpy_chk@plt+0x69cc>
   18214:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1821c:	stm	r9, {r0, r1}
   18220:	ldr	r7, [sp]
   18224:	b	17ff0 <__mempcpy_chk@plt+0x6a10>
   18228:	mov	r0, #12
   1822c:	b	17ffc <__mempcpy_chk@plt+0x6a1c>
   18230:	push	{r4, r5, r6, sl, fp, lr}
   18234:	add	fp, sp, #16
   18238:	mov	r4, r0
   1823c:	ldr	r5, [r0, #28]
   18240:	ldr	r6, [r0, #36]	; 0x24
   18244:	ldr	r0, [r0, #48]	; 0x30
   18248:	cmp	r6, r0
   1824c:	movgt	r6, r0
   18250:	cmp	r5, r6
   18254:	bge	18290 <__mempcpy_chk@plt+0x6cb0>
   18258:	ldr	r0, [r4]
   1825c:	ldr	r2, [r4, #24]
   18260:	ldr	r1, [r4, #64]	; 0x40
   18264:	add	r0, r0, r2
   18268:	cmp	r1, #0
   1826c:	ldrb	r0, [r0, r5]
   18270:	ldrbne	r0, [r1, r0]
   18274:	bl	1155c <toupper@plt>
   18278:	ldr	r1, [r4, #4]
   1827c:	strb	r0, [r1, r5]
   18280:	add	r5, r5, #1
   18284:	cmp	r5, r6
   18288:	blt	18258 <__mempcpy_chk@plt+0x6c78>
   1828c:	mov	r5, r6
   18290:	str	r5, [r4, #28]
   18294:	str	r5, [r4, #32]
   18298:	pop	{r4, r5, r6, sl, fp, pc}
   1829c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182a0:	add	fp, sp, #28
   182a4:	sub	sp, sp, #68	; 0x44
   182a8:	mov	r4, r0
   182ac:	ldr	r6, [r0, #28]
   182b0:	ldr	r7, [r0, #36]	; 0x24
   182b4:	ldr	r0, [r0, #48]	; 0x30
   182b8:	cmp	r7, r0
   182bc:	movgt	r7, r0
   182c0:	cmp	r7, r6
   182c4:	ble	18464 <__mempcpy_chk@plt+0x6e84>
   182c8:	add	r8, r4, #16
   182cc:	mov	r5, sp
   182d0:	ldm	r8, {r9, sl}
   182d4:	ldr	r0, [r4, #64]	; 0x40
   182d8:	sub	r2, r7, r6
   182dc:	cmp	r0, #0
   182e0:	bne	183b0 <__mempcpy_chk@plt+0x6dd0>
   182e4:	ldr	r0, [r4]
   182e8:	ldr	r1, [r4, #24]
   182ec:	add	r0, r0, r1
   182f0:	add	r1, r0, r6
   182f4:	mov	r0, r5
   182f8:	mov	r3, r8
   182fc:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   18300:	add	r1, r0, #1
   18304:	cmp	r1, #2
   18308:	bcc	18324 <__mempcpy_chk@plt+0x6d44>
   1830c:	cmn	r0, #2
   18310:	bne	18360 <__mempcpy_chk@plt+0x6d80>
   18314:	ldr	r0, [r4, #36]	; 0x24
   18318:	ldr	r1, [r4, #48]	; 0x30
   1831c:	cmp	r0, r1
   18320:	blt	18460 <__mempcpy_chk@plt+0x6e80>
   18324:	ldr	r1, [r4, #24]
   18328:	ldr	r0, [r4]
   1832c:	mov	r2, sl
   18330:	mov	sl, r5
   18334:	add	r1, r1, r6
   18338:	ldrb	r1, [r0, r1]
   1833c:	str	r1, [sp]
   18340:	ldr	r0, [r4, #64]	; 0x40
   18344:	cmp	r0, #0
   18348:	ldrbne	r1, [r0, r1]
   1834c:	mov	r0, #1
   18350:	strne	r1, [sp]
   18354:	str	r9, [r8]
   18358:	str	r2, [r8, #4]
   1835c:	b	18368 <__mempcpy_chk@plt+0x6d88>
   18360:	ldr	r1, [sp]
   18364:	mov	sl, r5
   18368:	ldr	r3, [r4, #8]
   1836c:	add	r5, r0, r6
   18370:	str	r1, [r3, r6, lsl #2]
   18374:	add	r1, r6, #1
   18378:	cmp	r1, r5
   1837c:	bge	1839c <__mempcpy_chk@plt+0x6dbc>
   18380:	mvn	r1, #3
   18384:	add	r2, r1, r0, lsl #2
   18388:	add	r0, r3, r6, lsl #2
   1838c:	mov	r1, #255	; 0xff
   18390:	add	r0, r0, #4
   18394:	bl	114f0 <memset@plt>
   18398:	mov	r1, r5
   1839c:	cmp	r7, r1
   183a0:	mov	r6, r1
   183a4:	mov	r5, sl
   183a8:	bgt	182d0 <__mempcpy_chk@plt+0x6cf0>
   183ac:	b	18468 <__mempcpy_chk@plt+0x6e88>
   183b0:	cmp	r2, #1
   183b4:	add	r1, sp, #4
   183b8:	blt	182f4 <__mempcpy_chk@plt+0x6d14>
   183bc:	ldr	r1, [r4, #80]	; 0x50
   183c0:	cmp	r1, #1
   183c4:	add	r1, sp, #4
   183c8:	blt	182f4 <__mempcpy_chk@plt+0x6d14>
   183cc:	ldm	r4, {r1, r3}
   183d0:	mov	lr, r5
   183d4:	ldr	r5, [r4, #24]
   183d8:	cmp	r2, #2
   183dc:	add	r5, r6, r5
   183e0:	ldrb	r1, [r1, r5]
   183e4:	mov	r5, lr
   183e8:	ldrb	r0, [r0, r1]
   183ec:	add	r1, sp, #4
   183f0:	strb	r0, [r3, r6]
   183f4:	strb	r0, [sp, #4]
   183f8:	blt	182f4 <__mempcpy_chk@plt+0x6d14>
   183fc:	ldr	r0, [r4, #80]	; 0x50
   18400:	add	r1, sp, #4
   18404:	cmp	r0, #2
   18408:	blt	182f4 <__mempcpy_chk@plt+0x6d14>
   1840c:	mov	r0, #1
   18410:	ldm	r4, {r1, ip}
   18414:	ldr	r5, [r4, #24]
   18418:	ldr	r3, [r4, #64]	; 0x40
   1841c:	add	r1, r1, r5
   18420:	add	r1, r1, r6
   18424:	ldrb	r1, [r1, r0]
   18428:	ldrb	r1, [r3, r1]
   1842c:	add	r3, ip, r6
   18430:	strb	r1, [r3, r0]
   18434:	add	r3, sp, #4
   18438:	strb	r1, [r3, r0]
   1843c:	add	r0, r0, #1
   18440:	cmp	r0, r2
   18444:	bge	18454 <__mempcpy_chk@plt+0x6e74>
   18448:	ldr	r1, [r4, #80]	; 0x50
   1844c:	cmp	r0, r1
   18450:	blt	18410 <__mempcpy_chk@plt+0x6e30>
   18454:	add	r1, sp, #4
   18458:	mov	r5, lr
   1845c:	b	182f4 <__mempcpy_chk@plt+0x6d14>
   18460:	stm	r8, {r9, sl}
   18464:	mov	r1, r6
   18468:	str	r1, [r4, #28]
   1846c:	str	r1, [r4, #32]
   18470:	sub	sp, fp, #28
   18474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18478:	ldr	ip, [r0, #36]	; 0x24
   1847c:	ldr	r3, [r0, #48]	; 0x30
   18480:	ldr	r1, [r0, #28]
   18484:	cmp	ip, r3
   18488:	movgt	ip, r3
   1848c:	cmp	r1, ip
   18490:	bge	184cc <__mempcpy_chk@plt+0x6eec>
   18494:	push	{r4, sl, fp, lr}
   18498:	add	fp, sp, #8
   1849c:	ldm	r0, {r3, lr}
   184a0:	ldr	r2, [r0, #24]
   184a4:	ldr	r4, [r0, #64]	; 0x40
   184a8:	add	r2, r3, r2
   184ac:	ldrb	r2, [r2, r1]
   184b0:	ldrb	r2, [r4, r2]
   184b4:	strb	r2, [lr, r1]
   184b8:	add	r1, r1, #1
   184bc:	cmp	r1, ip
   184c0:	blt	1849c <__mempcpy_chk@plt+0x6ebc>
   184c4:	mov	r1, ip
   184c8:	pop	{r4, sl, fp, lr}
   184cc:	str	r1, [r0, #28]
   184d0:	str	r1, [r0, #32]
   184d4:	bx	lr
   184d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   184dc:	add	fp, sp, #28
   184e0:	sub	sp, sp, #28
   184e4:	ldr	r9, [r1]
   184e8:	mov	r5, r0
   184ec:	ldr	r8, [fp, #12]
   184f0:	mov	r6, r2
   184f4:	str	r1, [sp, #12]
   184f8:	str	r3, [sp, #16]
   184fc:	ldr	r0, [r9, #84]	; 0x54
   18500:	str	r8, [sp, #4]
   18504:	str	r0, [sp, #8]
   18508:	ldr	r0, [fp, #8]
   1850c:	str	r0, [sp]
   18510:	mov	r0, r5
   18514:	bl	18d14 <__mempcpy_chk@plt+0x7734>
   18518:	mov	r4, r0
   1851c:	cmp	r0, #0
   18520:	bne	18530 <__mempcpy_chk@plt+0x6f50>
   18524:	ldr	r0, [r8]
   18528:	cmp	r0, #0
   1852c:	bne	18620 <__mempcpy_chk@plt+0x7040>
   18530:	ldr	r0, [sp, #16]
   18534:	ldr	r8, [fp, #8]
   18538:	mov	r7, #10
   1853c:	orr	sl, r0, #8388608	; 0x800000
   18540:	ldrb	r0, [r6, #4]
   18544:	cmp	r0, #10
   18548:	bne	18624 <__mempcpy_chk@plt+0x7044>
   1854c:	mov	r0, r6
   18550:	mov	r1, r5
   18554:	mov	r2, sl
   18558:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   1855c:	ldr	r1, [r5, #40]	; 0x28
   18560:	mov	r2, #0
   18564:	add	r0, r1, r0
   18568:	str	r0, [r5, #40]	; 0x28
   1856c:	ldrb	r0, [r6, #4]
   18570:	orr	r1, r0, #8
   18574:	cmp	r1, #10
   18578:	bne	185a8 <__mempcpy_chk@plt+0x6fc8>
   1857c:	mov	r0, #0
   18580:	str	r7, [sp, #24]
   18584:	mov	r1, r4
   18588:	add	r3, sp, #20
   1858c:	str	r0, [sp, #20]
   18590:	mov	r0, r9
   18594:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   18598:	mov	r4, r0
   1859c:	cmp	r0, #0
   185a0:	bne	18540 <__mempcpy_chk@plt+0x6f60>
   185a4:	b	18614 <__mempcpy_chk@plt+0x7034>
   185a8:	cmp	r8, #0
   185ac:	beq	185b8 <__mempcpy_chk@plt+0x6fd8>
   185b0:	cmp	r0, #9
   185b4:	beq	1857c <__mempcpy_chk@plt+0x6f9c>
   185b8:	ldr	r0, [sp, #8]
   185bc:	ldr	r7, [r9, #84]	; 0x54
   185c0:	ldr	r1, [sp, #12]
   185c4:	ldr	r3, [sp, #16]
   185c8:	mov	r2, r6
   185cc:	str	r0, [r9, #84]	; 0x54
   185d0:	str	r8, [sp]
   185d4:	ldr	r8, [fp, #12]
   185d8:	mov	r0, r5
   185dc:	str	r8, [sp, #4]
   185e0:	bl	18d14 <__mempcpy_chk@plt+0x7734>
   185e4:	mov	r2, r0
   185e8:	cmp	r0, #0
   185ec:	bne	185fc <__mempcpy_chk@plt+0x701c>
   185f0:	ldr	r0, [r8]
   185f4:	cmp	r0, #0
   185f8:	bne	18630 <__mempcpy_chk@plt+0x7050>
   185fc:	ldr	r0, [r9, #84]	; 0x54
   18600:	ldr	r8, [fp, #8]
   18604:	orr	r0, r0, r7
   18608:	mov	r7, #10
   1860c:	str	r0, [r9, #84]	; 0x54
   18610:	b	1857c <__mempcpy_chk@plt+0x6f9c>
   18614:	ldr	r1, [fp, #12]
   18618:	mov	r0, #12
   1861c:	str	r0, [r1]
   18620:	mov	r4, #0
   18624:	mov	r0, r4
   18628:	sub	sp, fp, #28
   1862c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18630:	cmp	r4, #0
   18634:	beq	18620 <__mempcpy_chk@plt+0x7040>
   18638:	mov	r5, r4
   1863c:	ldr	r4, [r4, #4]
   18640:	cmp	r4, #0
   18644:	bne	18638 <__mempcpy_chk@plt+0x7058>
   18648:	ldr	r4, [r5, #8]
   1864c:	cmp	r4, #0
   18650:	bne	18638 <__mempcpy_chk@plt+0x7058>
   18654:	add	r0, r5, #20
   18658:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   1865c:	ldr	r0, [r5]
   18660:	cmp	r0, #0
   18664:	beq	18620 <__mempcpy_chk@plt+0x7040>
   18668:	ldr	r4, [r0, #8]
   1866c:	cmp	r4, r5
   18670:	mov	r5, r0
   18674:	beq	18654 <__mempcpy_chk@plt+0x7074>
   18678:	cmp	r4, #0
   1867c:	mov	r5, r0
   18680:	beq	18654 <__mempcpy_chk@plt+0x7074>
   18684:	b	18638 <__mempcpy_chk@plt+0x7058>
   18688:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1868c:	add	fp, sp, #24
   18690:	sub	sp, sp, #8
   18694:	mov	r9, r0
   18698:	mov	r7, r1
   1869c:	ldr	r0, [r1, #40]	; 0x28
   186a0:	ldr	r1, [r1, #56]	; 0x38
   186a4:	cmp	r1, r0
   186a8:	ble	18790 <__mempcpy_chk@plt+0x71b0>
   186ac:	ldr	r1, [r7, #4]
   186b0:	mov	r5, r9
   186b4:	mov	r8, r2
   186b8:	ldrb	r6, [r1, r0]
   186bc:	strb	r6, [r5], #4
   186c0:	ldr	r0, [r5]
   186c4:	bic	r1, r0, #6291456	; 0x600000
   186c8:	str	r1, [r5]
   186cc:	ldr	r3, [r7, #80]	; 0x50
   186d0:	cmp	r3, #2
   186d4:	blt	186f8 <__mempcpy_chk@plt+0x7118>
   186d8:	ldr	r2, [r7, #28]
   186dc:	ldr	r1, [r7, #40]	; 0x28
   186e0:	cmp	r1, r2
   186e4:	beq	186f8 <__mempcpy_chk@plt+0x7118>
   186e8:	ldr	r2, [r7, #8]
   186ec:	ldr	r1, [r2, r1, lsl #2]
   186f0:	cmn	r1, #1
   186f4:	beq	18a4c <__mempcpy_chk@plt+0x746c>
   186f8:	movw	r1, #65280	; 0xff00
   186fc:	cmp	r6, #92	; 0x5c
   18700:	movt	r1, #65439	; 0xff9f
   18704:	bne	187a0 <__mempcpy_chk@plt+0x71c0>
   18708:	ldr	r6, [r7, #40]	; 0x28
   1870c:	ldr	r4, [r7, #48]	; 0x30
   18710:	add	r2, r6, #1
   18714:	cmp	r2, r4
   18718:	bge	187f4 <__mempcpy_chk@plt+0x7214>
   1871c:	ldrb	r4, [r7, #75]	; 0x4b
   18720:	cmp	r4, #0
   18724:	bne	18ca4 <__mempcpy_chk@plt+0x76c4>
   18728:	ldr	r3, [r7, #4]
   1872c:	ldrb	r6, [r3, r2]
   18730:	and	r0, r0, r1
   18734:	strb	r6, [r9]
   18738:	orr	r4, r0, #1
   1873c:	str	r4, [r9, #4]
   18740:	ldr	r0, [r7, #80]	; 0x50
   18744:	cmp	r0, #2
   18748:	blt	18904 <__mempcpy_chk@plt+0x7324>
   1874c:	ldr	r0, [r7, #8]
   18750:	ldr	r1, [r7, #40]	; 0x28
   18754:	add	r0, r0, r1, lsl #2
   18758:	ldr	r4, [r0, #4]
   1875c:	mov	r0, r4
   18760:	bl	114d8 <iswalnum@plt>
   18764:	sub	r1, r4, #95	; 0x5f
   18768:	cmp	r0, #0
   1876c:	clz	r1, r1
   18770:	movwne	r0, #1
   18774:	lsr	r1, r1, #5
   18778:	orr	r0, r1, r0
   1877c:	ldr	r1, [r5]
   18780:	bic	r1, r1, #4194304	; 0x400000
   18784:	orr	r0, r1, r0, lsl #22
   18788:	uxtb	r1, r6
   1878c:	b	18928 <__mempcpy_chk@plt+0x7348>
   18790:	mov	r0, #2
   18794:	mov	r4, #0
   18798:	strb	r0, [r9, #4]
   1879c:	b	18c78 <__mempcpy_chk@plt+0x7698>
   187a0:	and	r0, r0, r1
   187a4:	orr	r4, r0, #1
   187a8:	str	r4, [r5]
   187ac:	ldr	r0, [r7, #80]	; 0x50
   187b0:	cmp	r0, #2
   187b4:	blt	18800 <__mempcpy_chk@plt+0x7220>
   187b8:	ldr	r0, [r7, #8]
   187bc:	ldr	r1, [r7, #40]	; 0x28
   187c0:	ldr	r4, [r0, r1, lsl #2]
   187c4:	mov	r0, r4
   187c8:	bl	114d8 <iswalnum@plt>
   187cc:	sub	r1, r4, #95	; 0x5f
   187d0:	cmp	r0, #0
   187d4:	clz	r1, r1
   187d8:	movwne	r0, #1
   187dc:	lsr	r1, r1, #5
   187e0:	orr	r0, r1, r0
   187e4:	ldr	r1, [r5]
   187e8:	bic	r1, r1, #4194304	; 0x400000
   187ec:	orr	r0, r1, r0, lsl #22
   187f0:	b	18820 <__mempcpy_chk@plt+0x7240>
   187f4:	and	r0, r0, r1
   187f8:	orr	r0, r0, #36	; 0x24
   187fc:	b	18a60 <__mempcpy_chk@plt+0x7480>
   18800:	bl	114a8 <__ctype_b_loc@plt>
   18804:	ldr	r0, [r0]
   18808:	cmp	r6, #95	; 0x5f
   1880c:	add	r0, r0, r6, lsl #1
   18810:	ldrh	r0, [r0]
   18814:	ubfx	r0, r0, #3, #1
   18818:	movweq	r0, #1
   1881c:	orr	r0, r4, r0, lsl #22
   18820:	mov	r4, #1
   18824:	cmp	r6, #62	; 0x3e
   18828:	str	r0, [r5]
   1882c:	bgt	188c8 <__mempcpy_chk@plt+0x72e8>
   18830:	sub	r1, r6, #36	; 0x24
   18834:	cmp	r1, #10
   18838:	bhi	18abc <__mempcpy_chk@plt+0x74dc>
   1883c:	add	r2, pc, #0
   18840:	ldr	pc, [r2, r1, lsl #2]
   18844:	andeq	r8, r1, r0, ror r8
   18848:	andeq	r8, r1, r8, ror ip
   1884c:	andeq	r8, r1, r8, ror ip
   18850:	andeq	r8, r1, r8, ror ip
   18854:	ldrdeq	r8, [r1], -r0
   18858:	andeq	r8, r1, r0, ror #21
   1885c:	strdeq	r8, [r1], -r0
   18860:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18864:	andeq	r8, r1, r8, ror ip
   18868:	andeq	r8, r1, r8, ror ip
   1886c:	andeq	r8, r1, r8, lsl #22
   18870:	tst	r8, #8
   18874:	bne	188c0 <__mempcpy_chk@plt+0x72e0>
   18878:	ldr	r1, [r7, #40]	; 0x28
   1887c:	ldr	r2, [r7, #48]	; 0x30
   18880:	add	r1, r1, #1
   18884:	cmp	r1, r2
   18888:	beq	188c0 <__mempcpy_chk@plt+0x72e0>
   1888c:	str	r1, [r7, #40]	; 0x28
   18890:	mov	r0, sp
   18894:	mov	r1, r7
   18898:	mov	r2, r8
   1889c:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   188a0:	ldr	r0, [r7, #40]	; 0x28
   188a4:	sub	r0, r0, #1
   188a8:	str	r0, [r7, #40]	; 0x28
   188ac:	ldrb	r0, [sp, #4]
   188b0:	sub	r0, r0, #9
   188b4:	cmp	r0, #1
   188b8:	bhi	18c78 <__mempcpy_chk@plt+0x7698>
   188bc:	ldr	r0, [r5]
   188c0:	mov	r1, #32
   188c4:	b	188fc <__mempcpy_chk@plt+0x731c>
   188c8:	cmp	r6, #122	; 0x7a
   188cc:	bgt	18a24 <__mempcpy_chk@plt+0x7444>
   188d0:	cmp	r6, #63	; 0x3f
   188d4:	beq	18b10 <__mempcpy_chk@plt+0x7530>
   188d8:	cmp	r6, #91	; 0x5b
   188dc:	beq	18b20 <__mempcpy_chk@plt+0x7540>
   188e0:	cmp	r6, #94	; 0x5e
   188e4:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   188e8:	movw	r1, #8
   188ec:	movt	r1, #128	; 0x80
   188f0:	tst	r8, r1
   188f4:	beq	18b68 <__mempcpy_chk@plt+0x7588>
   188f8:	mov	r1, #16
   188fc:	mov	r2, #12
   18900:	b	18a14 <__mempcpy_chk@plt+0x7434>
   18904:	bl	114a8 <__ctype_b_loc@plt>
   18908:	ldr	r0, [r0]
   1890c:	uxtb	r1, r6
   18910:	cmp	r1, #95	; 0x5f
   18914:	add	r0, r0, r1, lsl #1
   18918:	ldrh	r0, [r0]
   1891c:	ubfx	r0, r0, #3, #1
   18920:	movweq	r0, #1
   18924:	orr	r0, r4, r0, lsl #22
   18928:	uxtb	r2, r6
   1892c:	mov	r4, #2
   18930:	str	r0, [r5]
   18934:	cmp	r2, #95	; 0x5f
   18938:	bgt	18a6c <__mempcpy_chk@plt+0x748c>
   1893c:	sub	r3, r2, #39	; 0x27
   18940:	cmp	r3, #44	; 0x2c
   18944:	bhi	18b94 <__mempcpy_chk@plt+0x75b4>
   18948:	add	r2, pc, #0
   1894c:	ldr	pc, [r2, r3, lsl #2]
   18950:	strdeq	r8, [r1], -ip
   18954:	andeq	r8, r1, ip, lsl #24
   18958:	andeq	r8, r1, r8, lsl ip
   1895c:	andeq	r8, r1, r8, ror ip
   18960:	andeq	r8, r1, r4, lsr #24
   18964:	andeq	r8, r1, r8, ror ip
   18968:	andeq	r8, r1, r8, ror ip
   1896c:	andeq	r8, r1, r8, ror ip
   18970:	andeq	r8, r1, r8, ror ip
   18974:	andeq	r8, r1, r8, ror ip
   18978:	andeq	r8, r1, r4, lsl #20
   1897c:	andeq	r8, r1, r4, lsl #20
   18980:	andeq	r8, r1, r4, lsl #20
   18984:	andeq	r8, r1, r4, lsl #20
   18988:	andeq	r8, r1, r4, lsl #20
   1898c:	andeq	r8, r1, r4, lsl #20
   18990:	andeq	r8, r1, r4, lsl #20
   18994:	andeq	r8, r1, r4, lsl #20
   18998:	andeq	r8, r1, r4, lsl #20
   1899c:	andeq	r8, r1, r8, ror ip
   189a0:	andeq	r8, r1, r8, ror ip
   189a4:	andeq	r8, r1, ip, lsr ip
   189a8:	andeq	r8, r1, r8, ror ip
   189ac:	andeq	r8, r1, ip, asr #24
   189b0:	andeq	r8, r1, ip, asr ip
   189b4:	andeq	r8, r1, r8, ror ip
   189b8:	andeq	r8, r1, r8, ror ip
   189bc:	andeq	r8, r1, r4, lsl #25
   189c0:	andeq	r8, r1, r8, ror ip
   189c4:	andeq	r8, r1, r8, ror ip
   189c8:	andeq	r8, r1, r8, ror ip
   189cc:	andeq	r8, r1, r8, ror ip
   189d0:	andeq	r8, r1, r8, ror ip
   189d4:	andeq	r8, r1, r8, ror ip
   189d8:	andeq	r8, r1, r8, ror ip
   189dc:	andeq	r8, r1, r8, ror ip
   189e0:	andeq	r8, r1, r8, ror ip
   189e4:	andeq	r8, r1, r8, ror ip
   189e8:	andeq	r8, r1, r8, ror ip
   189ec:	andeq	r8, r1, r8, ror ip
   189f0:	andeq	r8, r1, r8, ror ip
   189f4:	andeq	r8, r1, r8, ror ip
   189f8:	andeq	r8, r1, r8, ror ip
   189fc:	andeq	r8, r1, r8, ror ip
   18a00:	muleq	r1, r4, ip
   18a04:	tst	r8, #16384	; 0x4000
   18a08:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18a0c:	sub	r1, r1, #49	; 0x31
   18a10:	mov	r2, #4
   18a14:	bfi	r0, r2, #0, #8
   18a18:	str	r1, [r9]
   18a1c:	str	r0, [r9, #4]
   18a20:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18a24:	cmp	r6, #123	; 0x7b
   18a28:	beq	18b28 <__mempcpy_chk@plt+0x7548>
   18a2c:	cmp	r6, #124	; 0x7c
   18a30:	beq	18b38 <__mempcpy_chk@plt+0x7558>
   18a34:	cmp	r6, #125	; 0x7d
   18a38:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18a3c:	and	r1, r8, #4608	; 0x1200
   18a40:	cmp	r1, #4608	; 0x1200
   18a44:	beq	18be4 <__mempcpy_chk@plt+0x7604>
   18a48:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18a4c:	movw	r1, #65280	; 0xff00
   18a50:	movt	r1, #65439	; 0xff9f
   18a54:	and	r0, r0, r1
   18a58:	orr	r0, r0, #1
   18a5c:	orr	r0, r0, #2097152	; 0x200000
   18a60:	str	r0, [r5]
   18a64:	mov	r4, #1
   18a68:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18a6c:	sub	r1, r2, #115	; 0x73
   18a70:	cmp	r1, #10
   18a74:	bhi	18b4c <__mempcpy_chk@plt+0x756c>
   18a78:	add	r2, pc, #0
   18a7c:	ldr	pc, [r2, r1, lsl #2]
   18a80:	andeq	r8, r1, ip, lsr #21
   18a84:	andeq	r8, r1, r8, ror ip
   18a88:	andeq	r8, r1, r8, ror ip
   18a8c:	andeq	r8, r1, r8, ror ip
   18a90:	andeq	r8, r1, r8, lsr #23
   18a94:	andeq	r8, r1, r8, ror ip
   18a98:	andeq	r8, r1, r8, ror ip
   18a9c:	andeq	r8, r1, r8, ror ip
   18aa0:			; <UNDEFINED> instruction: 0x00018bb8
   18aa4:	andeq	r8, r1, ip, asr #23
   18aa8:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18aac:	tst	r8, #524288	; 0x80000
   18ab0:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18ab4:	mov	r1, #34	; 0x22
   18ab8:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18abc:	cmp	r6, #10
   18ac0:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18ac4:	tst	r8, #2048	; 0x800
   18ac8:	bne	18b44 <__mempcpy_chk@plt+0x7564>
   18acc:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18ad0:	tst	r8, #8192	; 0x2000
   18ad4:	beq	18c78 <__mempcpy_chk@plt+0x7698>
   18ad8:	mov	r1, #8
   18adc:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18ae0:	tst	r8, #8192	; 0x2000
   18ae4:	beq	18c78 <__mempcpy_chk@plt+0x7698>
   18ae8:	mov	r1, #9
   18aec:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18af0:	mov	r1, #11
   18af4:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18af8:	movw	r1, #1026	; 0x402
   18afc:	tst	r8, r1
   18b00:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18b04:	b	18c34 <__mempcpy_chk@plt+0x7654>
   18b08:	mov	r1, #5
   18b0c:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18b10:	movw	r1, #1026	; 0x402
   18b14:	tst	r8, r1
   18b18:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18b1c:	b	18c6c <__mempcpy_chk@plt+0x768c>
   18b20:	mov	r1, #20
   18b24:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18b28:	and	r1, r8, #4608	; 0x1200
   18b2c:	cmp	r1, #4608	; 0x1200
   18b30:	beq	18bc4 <__mempcpy_chk@plt+0x75e4>
   18b34:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18b38:	and	r1, r8, #33792	; 0x8400
   18b3c:	cmp	r1, #32768	; 0x8000
   18b40:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18b44:	mov	r1, #10
   18b48:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18b4c:	cmp	r2, #96	; 0x60
   18b50:	beq	18bec <__mempcpy_chk@plt+0x760c>
   18b54:	cmp	r2, #98	; 0x62
   18b58:	tsteq	r8, #524288	; 0x80000
   18b5c:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18b60:	mov	r1, #256	; 0x100
   18b64:	b	188fc <__mempcpy_chk@plt+0x731c>
   18b68:	ldr	r1, [r7, #40]	; 0x28
   18b6c:	cmp	r1, #0
   18b70:	beq	188f8 <__mempcpy_chk@plt+0x7318>
   18b74:	tst	r8, #2048	; 0x800
   18b78:	beq	18c78 <__mempcpy_chk@plt+0x7698>
   18b7c:	ldr	r2, [r7, #4]
   18b80:	add	r1, r2, r1
   18b84:	ldrb	r1, [r1, #-1]
   18b88:	cmp	r1, #10
   18b8c:	beq	188f8 <__mempcpy_chk@plt+0x7318>
   18b90:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18b94:	cmp	r2, #87	; 0x57
   18b98:	tsteq	r8, #524288	; 0x80000
   18b9c:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18ba0:	mov	r1, #33	; 0x21
   18ba4:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18ba8:	tst	r8, #524288	; 0x80000
   18bac:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18bb0:	mov	r1, #32
   18bb4:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18bb8:	and	r1, r8, #4608	; 0x1200
   18bbc:	cmp	r1, #512	; 0x200
   18bc0:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18bc4:	mov	r1, #23
   18bc8:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18bcc:	tst	r8, #33792	; 0x8400
   18bd0:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18bd4:	b	18b44 <__mempcpy_chk@plt+0x7564>
   18bd8:	and	r1, r8, #4608	; 0x1200
   18bdc:	cmp	r1, #512	; 0x200
   18be0:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18be4:	mov	r1, #24
   18be8:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18bec:	tst	r8, #524288	; 0x80000
   18bf0:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18bf4:	mov	r1, #64	; 0x40
   18bf8:	b	188fc <__mempcpy_chk@plt+0x731c>
   18bfc:	tst	r8, #524288	; 0x80000
   18c00:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c04:	mov	r1, #128	; 0x80
   18c08:	b	188fc <__mempcpy_chk@plt+0x731c>
   18c0c:	tst	r8, #8192	; 0x2000
   18c10:	beq	18ad8 <__mempcpy_chk@plt+0x74f8>
   18c14:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18c18:	tst	r8, #8192	; 0x2000
   18c1c:	beq	18ae8 <__mempcpy_chk@plt+0x7508>
   18c20:	b	18c78 <__mempcpy_chk@plt+0x7698>
   18c24:	movw	r1, #1026	; 0x402
   18c28:	and	r1, r8, r1
   18c2c:	cmp	r1, #2
   18c30:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c34:	mov	r1, #18
   18c38:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18c3c:	tst	r8, #524288	; 0x80000
   18c40:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c44:	mov	r1, #6
   18c48:	b	188fc <__mempcpy_chk@plt+0x731c>
   18c4c:	tst	r8, #524288	; 0x80000
   18c50:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c54:	mov	r1, #9
   18c58:	b	188fc <__mempcpy_chk@plt+0x731c>
   18c5c:	movw	r1, #1026	; 0x402
   18c60:	and	r1, r8, r1
   18c64:	cmp	r1, #2
   18c68:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c6c:	mov	r1, #19
   18c70:	bfi	r0, r1, #0, #8
   18c74:	str	r0, [r5]
   18c78:	mov	r0, r4
   18c7c:	sub	sp, fp, #24
   18c80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18c84:	tst	r8, #524288	; 0x80000
   18c88:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c8c:	mov	r1, #512	; 0x200
   18c90:	b	188fc <__mempcpy_chk@plt+0x731c>
   18c94:	tst	r8, #524288	; 0x80000
   18c98:	bne	18c78 <__mempcpy_chk@plt+0x7698>
   18c9c:	mov	r1, #35	; 0x23
   18ca0:	b	18c70 <__mempcpy_chk@plt+0x7690>
   18ca4:	cmp	r3, #2
   18ca8:	blt	18cd8 <__mempcpy_chk@plt+0x76f8>
   18cac:	ldr	r3, [r7, #8]
   18cb0:	ldr	r4, [r3, r2, lsl #2]
   18cb4:	cmn	r4, #1
   18cb8:	beq	18728 <__mempcpy_chk@plt+0x7148>
   18cbc:	ldr	r4, [r7, #28]
   18cc0:	add	r6, r6, #2
   18cc4:	cmp	r4, r6
   18cc8:	beq	18cd8 <__mempcpy_chk@plt+0x76f8>
   18ccc:	ldr	r3, [r3, r6, lsl #2]
   18cd0:	cmn	r3, #1
   18cd4:	beq	18728 <__mempcpy_chk@plt+0x7148>
   18cd8:	ldrb	r3, [r7, #76]	; 0x4c
   18cdc:	mov	r6, r2
   18ce0:	ldr	r4, [r7, #24]
   18ce4:	ldr	ip, [r7]
   18ce8:	cmp	r3, #0
   18cec:	ldrne	r6, [r7, #12]
   18cf0:	ldrne	r6, [r6, r2, lsl #2]
   18cf4:	cmp	r3, #0
   18cf8:	add	r6, r4, r6
   18cfc:	add	r6, ip, r6
   18d00:	ldrsb	r6, [r6]
   18d04:	beq	18730 <__mempcpy_chk@plt+0x7150>
   18d08:	cmn	r6, #1
   18d0c:	ble	18728 <__mempcpy_chk@plt+0x7148>
   18d10:	b	18730 <__mempcpy_chk@plt+0x7150>
   18d14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d18:	add	fp, sp, #28
   18d1c:	sub	sp, sp, #28
   18d20:	mov	r7, r1
   18d24:	mov	r1, r0
   18d28:	ldr	r4, [fp, #12]
   18d2c:	ldr	r5, [fp, #8]
   18d30:	mov	r6, r2
   18d34:	str	r3, [sp, #16]
   18d38:	ldr	r0, [r7]
   18d3c:	str	r1, [sp, #12]
   18d40:	str	r4, [sp, #4]
   18d44:	str	r5, [sp]
   18d48:	str	r0, [sp, #8]
   18d4c:	mov	r0, r1
   18d50:	mov	r1, r7
   18d54:	bl	18fa0 <__mempcpy_chk@plt+0x79c0>
   18d58:	cmp	r0, #0
   18d5c:	bne	18d6c <__mempcpy_chk@plt+0x778c>
   18d60:	ldr	r1, [r4]
   18d64:	cmp	r1, #0
   18d68:	bne	18ec8 <__mempcpy_chk@plt+0x78e8>
   18d6c:	mov	r4, r0
   18d70:	ldrb	r0, [r6, #4]
   18d74:	orr	r1, r0, #8
   18d78:	cmp	r1, #10
   18d7c:	beq	18ecc <__mempcpy_chk@plt+0x78ec>
   18d80:	cmp	r5, #0
   18d84:	beq	18d90 <__mempcpy_chk@plt+0x77b0>
   18d88:	cmp	r0, #9
   18d8c:	beq	18ecc <__mempcpy_chk@plt+0x78ec>
   18d90:	ldr	r8, [fp, #12]
   18d94:	ldr	r0, [sp, #12]
   18d98:	ldr	r3, [sp, #16]
   18d9c:	mov	r1, r7
   18da0:	mov	r2, r6
   18da4:	mov	r9, r5
   18da8:	str	r5, [sp]
   18dac:	str	r8, [sp, #4]
   18db0:	bl	18fa0 <__mempcpy_chk@plt+0x79c0>
   18db4:	mov	sl, r0
   18db8:	cmp	r0, #0
   18dbc:	bne	18dcc <__mempcpy_chk@plt+0x77ec>
   18dc0:	ldr	r0, [r8]
   18dc4:	cmp	r0, #0
   18dc8:	bne	18ed8 <__mempcpy_chk@plt+0x78f8>
   18dcc:	cmp	r4, #0
   18dd0:	cmpne	sl, #0
   18dd4:	bne	18dec <__mempcpy_chk@plt+0x780c>
   18dd8:	cmp	r4, #0
   18ddc:	mov	r5, r9
   18de0:	movne	sl, r4
   18de4:	mov	r0, sl
   18de8:	b	18d6c <__mempcpy_chk@plt+0x778c>
   18dec:	mov	r0, #16
   18df0:	mov	r1, r4
   18df4:	mov	r2, sl
   18df8:	add	r3, sp, #20
   18dfc:	str	r0, [sp, #24]
   18e00:	mov	r0, #0
   18e04:	str	r0, [sp, #20]
   18e08:	ldr	r0, [sp, #8]
   18e0c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   18e10:	cmp	r0, #0
   18e14:	mov	r5, r9
   18e18:	bne	18d6c <__mempcpy_chk@plt+0x778c>
   18e1c:	mov	r5, sl
   18e20:	ldr	sl, [sl, #4]
   18e24:	cmp	sl, #0
   18e28:	bne	18e1c <__mempcpy_chk@plt+0x783c>
   18e2c:	ldr	sl, [r5, #8]
   18e30:	cmp	sl, #0
   18e34:	bne	18e1c <__mempcpy_chk@plt+0x783c>
   18e38:	add	r0, r5, #20
   18e3c:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   18e40:	ldr	r0, [r5]
   18e44:	cmp	r0, #0
   18e48:	beq	18e6c <__mempcpy_chk@plt+0x788c>
   18e4c:	ldr	sl, [r0, #8]
   18e50:	cmp	sl, r5
   18e54:	mov	r5, r0
   18e58:	beq	18e38 <__mempcpy_chk@plt+0x7858>
   18e5c:	cmp	sl, #0
   18e60:	mov	r5, r0
   18e64:	beq	18e38 <__mempcpy_chk@plt+0x7858>
   18e68:	b	18e1c <__mempcpy_chk@plt+0x783c>
   18e6c:	mov	r5, r4
   18e70:	ldr	r4, [r4, #4]
   18e74:	cmp	r4, #0
   18e78:	bne	18e6c <__mempcpy_chk@plt+0x788c>
   18e7c:	ldr	r4, [r5, #8]
   18e80:	cmp	r4, #0
   18e84:	bne	18e6c <__mempcpy_chk@plt+0x788c>
   18e88:	add	r0, r5, #20
   18e8c:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   18e90:	ldr	r0, [r5]
   18e94:	cmp	r0, #0
   18e98:	beq	18ebc <__mempcpy_chk@plt+0x78dc>
   18e9c:	ldr	r4, [r0, #8]
   18ea0:	cmp	r4, r5
   18ea4:	mov	r5, r0
   18ea8:	beq	18e88 <__mempcpy_chk@plt+0x78a8>
   18eac:	cmp	r4, #0
   18eb0:	mov	r5, r0
   18eb4:	beq	18e88 <__mempcpy_chk@plt+0x78a8>
   18eb8:	b	18e6c <__mempcpy_chk@plt+0x788c>
   18ebc:	ldr	r1, [fp, #12]
   18ec0:	mov	r0, #12
   18ec4:	str	r0, [r1]
   18ec8:	mov	r4, #0
   18ecc:	mov	r0, r4
   18ed0:	sub	sp, fp, #28
   18ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ed8:	cmp	r4, #0
   18edc:	beq	18ec8 <__mempcpy_chk@plt+0x78e8>
   18ee0:	mov	r5, r4
   18ee4:	ldr	r4, [r4, #4]
   18ee8:	cmp	r4, #0
   18eec:	bne	18ee0 <__mempcpy_chk@plt+0x7900>
   18ef0:	ldr	r4, [r5, #8]
   18ef4:	cmp	r4, #0
   18ef8:	bne	18ee0 <__mempcpy_chk@plt+0x7900>
   18efc:	add	r0, r5, #20
   18f00:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   18f04:	ldr	r0, [r5]
   18f08:	cmp	r0, #0
   18f0c:	beq	18ec8 <__mempcpy_chk@plt+0x78e8>
   18f10:	ldr	r4, [r0, #8]
   18f14:	cmp	r4, r5
   18f18:	mov	r5, r0
   18f1c:	beq	18efc <__mempcpy_chk@plt+0x791c>
   18f20:	cmp	r4, #0
   18f24:	mov	r5, r0
   18f28:	beq	18efc <__mempcpy_chk@plt+0x791c>
   18f2c:	b	18ee0 <__mempcpy_chk@plt+0x7900>
   18f30:	push	{r4, r5, r6, sl, fp, lr}
   18f34:	add	fp, sp, #16
   18f38:	mov	r4, r2
   18f3c:	mov	r5, r1
   18f40:	mov	r6, r0
   18f44:	ldr	r0, [r0, #4]
   18f48:	cmp	r0, #0
   18f4c:	bne	18f40 <__mempcpy_chk@plt+0x7960>
   18f50:	ldr	r0, [r6, #8]
   18f54:	cmp	r0, #0
   18f58:	bne	18f40 <__mempcpy_chk@plt+0x7960>
   18f5c:	mov	r0, r4
   18f60:	mov	r1, r6
   18f64:	blx	r5
   18f68:	cmp	r0, #0
   18f6c:	bne	18f9c <__mempcpy_chk@plt+0x79bc>
   18f70:	ldr	r1, [r6]
   18f74:	cmp	r1, #0
   18f78:	popeq	{r4, r5, r6, sl, fp, pc}
   18f7c:	ldr	r0, [r1, #8]
   18f80:	cmp	r0, r6
   18f84:	mov	r6, r1
   18f88:	beq	18f5c <__mempcpy_chk@plt+0x797c>
   18f8c:	cmp	r0, #0
   18f90:	mov	r6, r1
   18f94:	beq	18f5c <__mempcpy_chk@plt+0x797c>
   18f98:	b	18f40 <__mempcpy_chk@plt+0x7960>
   18f9c:	pop	{r4, r5, r6, sl, fp, pc}
   18fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fa4:	add	fp, sp, #28
   18fa8:	sub	sp, sp, #148	; 0x94
   18fac:	mov	r5, r1
   18fb0:	mov	r6, r0
   18fb4:	mov	r7, r2
   18fb8:	ldr	r0, [r2, #4]
   18fbc:	mvn	r1, #0
   18fc0:	mov	sl, #0
   18fc4:	ldr	r2, [r5]
   18fc8:	uxtab	r1, r1, r0
   18fcc:	str	r2, [sp, #52]	; 0x34
   18fd0:	cmp	r1, #35	; 0x23
   18fd4:	ldr	r9, [fp, #12]
   18fd8:	str	r6, [sp, #48]	; 0x30
   18fdc:	str	r3, [sp, #44]	; 0x2c
   18fe0:	str	r7, [sp, #28]
   18fe4:	bhi	19110 <__mempcpy_chk@plt+0x7b30>
   18fe8:	add	r2, pc, #0
   18fec:	ldr	pc, [r2, r1, lsl #2]
   18ff0:	andeq	r9, r1, r0, ror #6
   18ff4:	andeq	sl, r1, ip, lsr r3
   18ff8:	andeq	r9, r1, r0, lsl r1
   18ffc:	andeq	r9, r1, r4, ror r1
   19000:	ldrdeq	r9, [r1], -r0
   19004:	andeq	r9, r1, r0, lsl r1
   19008:	andeq	r9, r1, r0, lsl r1
   1900c:	andeq	r9, r1, r4, lsl r2
   19010:	andeq	r9, r1, r0, lsr #2
   19014:	andeq	sl, r1, ip, lsr r3
   19018:	andeq	r9, r1, r0, lsl r1
   1901c:	andeq	r9, r1, r0, ror #5
   19020:	andeq	r9, r1, r0, lsl r1
   19024:	andeq	r9, r1, r0, lsl r1
   19028:	andeq	r9, r1, r0, lsl r1
   1902c:	andeq	r9, r1, r0, lsl r1
   19030:	andeq	r9, r1, r0, lsl r1
   19034:	andeq	r9, r1, r0, lsl r1
   19038:	andeq	r9, r1, r0, lsl r1
   1903c:	andeq	r9, r1, r0, asr r4
   19040:	andeq	r9, r1, r0, lsl r1
   19044:	andeq	r9, r1, r0, lsl r1
   19048:	andeq	r9, r1, r8, lsl #2
   1904c:	andeq	r9, r1, r0, lsr r1
   19050:	andeq	r9, r1, r0, lsl r1
   19054:	andeq	r9, r1, r0, lsl r1
   19058:	andeq	r9, r1, r0, lsl r1
   1905c:	andeq	r9, r1, r0, lsl r1
   19060:	andeq	r9, r1, r0, lsl r1
   19064:	andeq	r9, r1, r0, lsl r1
   19068:	andeq	r9, r1, r0, lsl r1
   1906c:	muleq	r1, r0, r0
   19070:	muleq	r1, r0, r0
   19074:	strheq	r9, [r1], -r4
   19078:	strheq	r9, [r1], -r4
   1907c:	andeq	r9, r1, r8, asr #8
   19080:	andeq	r0, r0, r0
   19084:	mvnseq	r0, #0
   19088:			; <UNDEFINED> instruction: 0x87fffffe
   1908c:			; <UNDEFINED> instruction: 0x07fffffe
   19090:	mvn	r2, #32
   19094:	ldr	r1, [r6, #64]	; 0x40
   19098:	movw	r3, #10555	; 0x293b
   1909c:	uxtab	r0, r2, r0
   190a0:	movw	r2, #11950	; 0x2eae
   190a4:	movt	r3, #2
   190a8:	clz	r0, r0
   190ac:	movt	r2, #2
   190b0:	b	190d4 <__mempcpy_chk@plt+0x7af4>
   190b4:	mvn	r2, #34	; 0x22
   190b8:	ldr	r1, [r6, #64]	; 0x40
   190bc:	movw	r3, #10705	; 0x29d1
   190c0:	uxtab	r0, r2, r0
   190c4:	movw	r2, #11956	; 0x2eb4
   190c8:	movt	r3, #2
   190cc:	clz	r0, r0
   190d0:	movt	r2, #2
   190d4:	lsr	r0, r0, #5
   190d8:	stm	sp, {r0, r9}
   190dc:	ldr	r0, [sp, #52]	; 0x34
   190e0:	bl	1a560 <__mempcpy_chk@plt+0x8f80>
   190e4:	mov	r4, r0
   190e8:	cmp	r0, #0
   190ec:	bne	19db0 <__mempcpy_chk@plt+0x87d0>
   190f0:	ldr	r0, [r9]
   190f4:	ldr	r2, [sp, #44]	; 0x2c
   190f8:	ldr	r3, [sp, #28]
   190fc:	cmp	r0, #0
   19100:	beq	19db8 <__mempcpy_chk@plt+0x87d8>
   19104:	b	1a33c <__mempcpy_chk@plt+0x8d5c>
   19108:	tst	r3, #16777216	; 0x1000000
   1910c:	bne	1916c <__mempcpy_chk@plt+0x7b8c>
   19110:	tst	r3, #32
   19114:	bne	1916c <__mempcpy_chk@plt+0x7b8c>
   19118:	tst	r3, #16
   1911c:	bne	194c4 <__mempcpy_chk@plt+0x7ee4>
   19120:	tst	r3, #131072	; 0x20000
   19124:	uxtbeq	r1, r0
   19128:	cmpeq	r1, #9
   1912c:	beq	19500 <__mempcpy_chk@plt+0x7f20>
   19130:	mov	r1, #1
   19134:	mov	r2, #0
   19138:	mov	r3, r7
   1913c:	mov	sl, #0
   19140:	bfi	r0, r1, #0, #8
   19144:	mov	r1, #0
   19148:	str	r0, [r7, #4]
   1914c:	ldr	r0, [sp, #52]	; 0x34
   19150:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19154:	ldr	r3, [sp, #28]
   19158:	ldr	r2, [sp, #44]	; 0x2c
   1915c:	mov	r4, r0
   19160:	cmp	r0, #0
   19164:	bne	19db8 <__mempcpy_chk@plt+0x87d8>
   19168:	b	19c6c <__mempcpy_chk@plt+0x868c>
   1916c:	mov	r0, #13
   19170:	b	19c70 <__mempcpy_chk@plt+0x8690>
   19174:	ldr	r5, [sp, #52]	; 0x34
   19178:	ldr	r0, [r7]
   1917c:	mov	r1, #1
   19180:	ldr	r2, [r5, #84]	; 0x54
   19184:	tst	r2, r1, lsl r0
   19188:	beq	19d3c <__mempcpy_chk@plt+0x875c>
   1918c:	lsl	r0, r1, r0
   19190:	ldr	r1, [r5, #80]	; 0x50
   19194:	mov	r2, #0
   19198:	mov	r3, r7
   1919c:	mov	sl, #0
   191a0:	orr	r0, r1, r0
   191a4:	mov	r1, #0
   191a8:	str	r0, [r5, #80]	; 0x50
   191ac:	mov	r0, r5
   191b0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   191b4:	cmp	r0, #0
   191b8:	beq	19c6c <__mempcpy_chk@plt+0x868c>
   191bc:	mov	r4, r0
   191c0:	ldr	r0, [r5, #76]	; 0x4c
   191c4:	add	r0, r0, #1
   191c8:	str	r0, [r5, #76]	; 0x4c
   191cc:	b	19204 <__mempcpy_chk@plt+0x7c24>
   191d0:	ldr	r5, [sp, #52]	; 0x34
   191d4:	mov	r1, #0
   191d8:	mov	r2, #0
   191dc:	mov	r3, r7
   191e0:	mov	sl, #0
   191e4:	mov	r0, r5
   191e8:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   191ec:	cmp	r0, #0
   191f0:	beq	19c6c <__mempcpy_chk@plt+0x868c>
   191f4:	mov	r4, r0
   191f8:	ldr	r0, [r5, #92]	; 0x5c
   191fc:	cmp	r0, #2
   19200:	blt	19db0 <__mempcpy_chk@plt+0x87d0>
   19204:	ldrb	r0, [r5, #88]	; 0x58
   19208:	orr	r0, r0, #2
   1920c:	strb	r0, [r5, #88]	; 0x58
   19210:	b	19db0 <__mempcpy_chk@plt+0x87d0>
   19214:	ldr	r8, [r5, #24]
   19218:	ldr	r4, [fp, #8]
   1921c:	orr	r2, r3, #8388608	; 0x800000
   19220:	mov	r1, r6
   19224:	add	r0, r8, #1
   19228:	str	r0, [r5, #24]
   1922c:	mov	r0, r7
   19230:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   19234:	ldr	r1, [r6, #40]	; 0x28
   19238:	ldr	r2, [sp, #28]
   1923c:	add	r0, r1, r0
   19240:	mov	r1, #0
   19244:	str	r0, [r6, #40]	; 0x28
   19248:	ldrb	r0, [r2, #4]
   1924c:	cmp	r0, #9
   19250:	beq	19290 <__mempcpy_chk@plt+0x7cb0>
   19254:	add	r0, r4, #1
   19258:	mov	r1, r5
   1925c:	mov	r5, r2
   19260:	stm	sp, {r0, r9}
   19264:	mov	r0, r6
   19268:	ldr	r3, [sp, #44]	; 0x2c
   1926c:	bl	184d8 <__mempcpy_chk@plt+0x6ef8>
   19270:	mov	r1, r0
   19274:	ldr	r0, [r9]
   19278:	mov	sl, #0
   1927c:	cmp	r0, #0
   19280:	bne	1a33c <__mempcpy_chk@plt+0x8d5c>
   19284:	ldrb	r0, [r5, #4]
   19288:	cmp	r0, #9
   1928c:	bne	1a42c <__mempcpy_chk@plt+0x8e4c>
   19290:	ldr	r0, [sp, #52]	; 0x34
   19294:	cmp	r8, #8
   19298:	mov	sl, #0
   1929c:	movls	r2, #1
   192a0:	ldrls	r3, [r0, #84]	; 0x54
   192a4:	orrls	r2, r3, r2, lsl r8
   192a8:	sub	r3, fp, #80	; 0x50
   192ac:	strls	r2, [r0, #84]	; 0x54
   192b0:	mov	r2, #17
   192b4:	str	r2, [fp, #-76]	; 0xffffffb4
   192b8:	mov	r2, #0
   192bc:	str	sl, [fp, #-80]	; 0xffffffb0
   192c0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   192c4:	cmp	r0, #0
   192c8:	beq	19c6c <__mempcpy_chk@plt+0x868c>
   192cc:	ldr	r2, [sp, #44]	; 0x2c
   192d0:	ldr	r3, [sp, #28]
   192d4:	str	r8, [r0, #20]
   192d8:	mov	r4, r0
   192dc:	b	19db8 <__mempcpy_chk@plt+0x87d8>
   192e0:	ldr	r2, [r7]
   192e4:	movw	r1, #783	; 0x30f
   192e8:	tst	r2, r1
   192ec:	beq	19340 <__mempcpy_chk@plt+0x7d60>
   192f0:	ldr	r0, [sp, #52]	; 0x34
   192f4:	ldrb	r0, [r0, #88]	; 0x58
   192f8:	tst	r0, #16
   192fc:	bne	19338 <__mempcpy_chk@plt+0x7d58>
   19300:	ldr	r2, [sp, #52]	; 0x34
   19304:	orr	r1, r0, #16
   19308:	tst	r0, #8
   1930c:	strb	r1, [r2, #88]	; 0x58
   19310:	bne	1a3a4 <__mempcpy_chk@plt+0x8dc4>
   19314:	sub	r1, pc, #668	; 0x29c
   19318:	tst	r0, #4
   1931c:	vld1.64	{d16-d17}, [r1]
   19320:	add	r1, r2, #96	; 0x60
   19324:	vst1.32	{d16-d17}, [r1]
   19328:	beq	1a3b0 <__mempcpy_chk@plt+0x8dd0>
   1932c:	vmov.i32	q8, #0	; 0x00000000
   19330:	add	r0, r2, #112	; 0x70
   19334:	vst1.32	{d16-d17}, [r0]
   19338:	ldr	r2, [r7]
   1933c:	ldr	r6, [sp, #48]	; 0x30
   19340:	ldr	r0, [sp, #52]	; 0x34
   19344:	cmp	r2, #256	; 0x100
   19348:	beq	19bf8 <__mempcpy_chk@plt+0x8618>
   1934c:	cmp	r2, #512	; 0x200
   19350:	bne	19c78 <__mempcpy_chk@plt+0x8698>
   19354:	mov	r4, #10
   19358:	mov	r0, #5
   1935c:	b	19c00 <__mempcpy_chk@plt+0x8620>
   19360:	ldr	r5, [sp, #52]	; 0x34
   19364:	mov	r1, #0
   19368:	mov	r2, #0
   1936c:	mov	r3, r7
   19370:	mov	sl, #0
   19374:	mov	r0, r5
   19378:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1937c:	cmp	r0, #0
   19380:	beq	19c6c <__mempcpy_chk@plt+0x868c>
   19384:	mov	r4, r0
   19388:	ldr	r0, [r5, #92]	; 0x5c
   1938c:	cmp	r0, #2
   19390:	blt	19db0 <__mempcpy_chk@plt+0x87d0>
   19394:	ldr	r7, [sp, #52]	; 0x34
   19398:	mov	sl, #16
   1939c:	sub	r8, fp, #80	; 0x50
   193a0:	ldr	r5, [sp, #48]	; 0x30
   193a4:	ldr	r0, [r5, #40]	; 0x28
   193a8:	ldr	r1, [r5, #56]	; 0x38
   193ac:	cmp	r1, r0
   193b0:	ble	19cc4 <__mempcpy_chk@plt+0x86e4>
   193b4:	ldr	r1, [r5, #28]
   193b8:	ldr	r2, [sp, #44]	; 0x2c
   193bc:	ldr	r3, [sp, #28]
   193c0:	cmp	r0, r1
   193c4:	beq	19cbc <__mempcpy_chk@plt+0x86dc>
   193c8:	ldr	r1, [r5, #8]
   193cc:	ldr	r0, [r1, r0, lsl #2]
   193d0:	cmn	r0, #1
   193d4:	bne	19cbc <__mempcpy_chk@plt+0x86dc>
   193d8:	mov	r0, r3
   193dc:	mov	r1, r5
   193e0:	mov	r6, r3
   193e4:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   193e8:	ldr	r1, [r5, #40]	; 0x28
   193ec:	mov	r2, #0
   193f0:	mov	r3, r6
   193f4:	add	r0, r1, r0
   193f8:	mov	r1, #0
   193fc:	str	r0, [r5, #40]	; 0x28
   19400:	mov	r0, r7
   19404:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19408:	mov	r5, r0
   1940c:	mov	r0, #0
   19410:	str	sl, [fp, #-76]	; 0xffffffb4
   19414:	mov	r1, r4
   19418:	mov	r3, r8
   1941c:	str	r0, [fp, #-80]	; 0xffffffb0
   19420:	mov	r0, r7
   19424:	mov	r2, r5
   19428:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1942c:	cmp	r5, #0
   19430:	movne	r4, r0
   19434:	cmpne	r0, #0
   19438:	bne	193a0 <__mempcpy_chk@plt+0x7dc0>
   1943c:	mov	r0, #12
   19440:	str	r0, [r9]
   19444:	b	1a338 <__mempcpy_chk@plt+0x8d58>
   19448:	mov	r0, #5
   1944c:	b	19c70 <__mempcpy_chk@plt+0x8690>
   19450:	mov	r0, #0
   19454:	mov	r1, #1
   19458:	mov	r7, #0
   1945c:	str	r0, [fp, #-32]	; 0xffffffe0
   19460:	mov	r0, #32
   19464:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   19468:	mov	r4, r0
   1946c:	mov	r0, #40	; 0x28
   19470:	mov	r1, #1
   19474:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   19478:	mov	r8, r0
   1947c:	cmp	r4, #0
   19480:	cmpne	r8, #0
   19484:	beq	19d44 <__mempcpy_chk@plt+0x8764>
   19488:	ldr	r7, [sp, #28]
   1948c:	ldr	r5, [sp, #44]	; 0x2c
   19490:	mov	r1, r6
   19494:	mov	r0, r7
   19498:	mov	r2, r5
   1949c:	bl	1a78c <__mempcpy_chk@plt+0x91ac>
   194a0:	mov	r3, r0
   194a4:	ldr	r0, [r7, #4]
   194a8:	uxtb	r1, r0
   194ac:	cmp	r1, #25
   194b0:	beq	19508 <__mempcpy_chk@plt+0x7f28>
   194b4:	cmp	r1, #2
   194b8:	beq	19d30 <__mempcpy_chk@plt+0x8750>
   194bc:	mov	r1, #0
   194c0:	b	1955c <__mempcpy_chk@plt+0x7f7c>
   194c4:	mov	r0, r7
   194c8:	mov	r1, r6
   194cc:	mov	r2, r3
   194d0:	mov	r4, r3
   194d4:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   194d8:	ldr	r1, [r6, #40]	; 0x28
   194dc:	mov	r2, r7
   194e0:	mov	r3, r4
   194e4:	add	r0, r1, r0
   194e8:	mov	r1, r5
   194ec:	str	r0, [r6, #40]	; 0x28
   194f0:	mov	r0, r6
   194f4:	sub	sp, fp, #28
   194f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194fc:	b	18fa0 <__mempcpy_chk@plt+0x79c0>
   19500:	mov	r0, #16
   19504:	b	19c70 <__mempcpy_chk@plt+0x8690>
   19508:	ldrb	r0, [r8, #16]
   1950c:	tst	r5, #256	; 0x100
   19510:	ldr	r2, [sp, #44]	; 0x2c
   19514:	mov	r1, r6
   19518:	orr	r0, r0, #1
   1951c:	strb	r0, [r8, #16]
   19520:	ldrne	r0, [r4]
   19524:	orrne	r0, r0, #1024	; 0x400
   19528:	strne	r0, [r4]
   1952c:	ldr	r0, [r6, #40]	; 0x28
   19530:	add	r0, r0, r3
   19534:	str	r0, [r6, #40]	; 0x28
   19538:	mov	r0, r7
   1953c:	bl	1a78c <__mempcpy_chk@plt+0x91ac>
   19540:	ldr	r7, [sp, #28]
   19544:	mov	r3, r0
   19548:	ldr	r0, [r7, #4]
   1954c:	uxtb	r1, r0
   19550:	cmp	r1, #2
   19554:	beq	19d30 <__mempcpy_chk@plt+0x8750>
   19558:	mov	r1, #1
   1955c:	str	r1, [sp, #36]	; 0x24
   19560:	uxtb	r1, r0
   19564:	str	r8, [sp, #40]	; 0x28
   19568:	mov	r2, r7
   1956c:	cmp	r1, #21
   19570:	ldr	r5, [sp, #44]	; 0x2c
   19574:	moveq	r1, #1
   19578:	bfieq	r0, r1, #0, #8
   1957c:	mov	r1, r6
   19580:	streq	r0, [r7, #4]
   19584:	mov	r0, #3
   19588:	str	r0, [fp, #-40]	; 0xffffffd8
   1958c:	sub	r0, fp, #80	; 0x50
   19590:	str	r0, [fp, #-36]	; 0xffffffdc
   19594:	mov	r0, #1
   19598:	str	r5, [sp]
   1959c:	str	r0, [sp, #4]
   195a0:	sub	r0, fp, #40	; 0x28
   195a4:	bl	1a8f4 <__mempcpy_chk@plt+0x9314>
   195a8:	cmp	r0, #0
   195ac:	bne	19d1c <__mempcpy_chk@plt+0x873c>
   195b0:	and	r0, r5, #65536	; 0x10000
   195b4:	mov	r2, r5
   195b8:	mov	r8, #0
   195bc:	str	r0, [sp, #20]
   195c0:	mov	r0, #0
   195c4:	str	r0, [sp, #16]
   195c8:	mov	r0, #0
   195cc:	str	r0, [sp, #12]
   195d0:	ldr	r5, [sp, #28]
   195d4:	mov	r0, r5
   195d8:	mov	r1, r6
   195dc:	bl	1a78c <__mempcpy_chk@plt+0x91ac>
   195e0:	ldr	r7, [fp, #-40]	; 0xffffffd8
   195e4:	mov	sl, r0
   195e8:	cmp	r7, #2
   195ec:	beq	197c4 <__mempcpy_chk@plt+0x81e4>
   195f0:	cmp	r7, #4
   195f4:	bne	19638 <__mempcpy_chk@plt+0x8058>
   195f8:	ldr	r6, [sp, #48]	; 0x30
   195fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19600:	sub	r3, fp, #32
   19604:	ldr	r0, [r6, #64]	; 0x40
   19608:	str	r1, [sp]
   1960c:	ldr	r1, [sp, #44]	; 0x2c
   19610:	str	r1, [sp, #4]
   19614:	mov	r1, r4
   19618:	ldr	r2, [sp, #40]	; 0x28
   1961c:	bl	1abac <__mempcpy_chk@plt+0x95cc>
   19620:	ldr	r2, [sp, #28]
   19624:	ldr	r5, [sp, #52]	; 0x34
   19628:	cmp	r0, #0
   1962c:	str	r0, [r9]
   19630:	beq	19804 <__mempcpy_chk@plt+0x8224>
   19634:	b	19d74 <__mempcpy_chk@plt+0x8794>
   19638:	str	sl, [sp, #32]
   1963c:	mov	sl, #7
   19640:	ldr	r2, [sp, #28]
   19644:	str	r9, [sp, #24]
   19648:	ldrb	r0, [r2, #4]
   1964c:	cmp	r0, #22
   19650:	beq	19660 <__mempcpy_chk@plt+0x8080>
   19654:	cmp	r0, #2
   19658:	bne	19764 <__mempcpy_chk@plt+0x8184>
   1965c:	b	19d68 <__mempcpy_chk@plt+0x8788>
   19660:	ldr	r5, [sp, #48]	; 0x30
   19664:	ldr	r6, [sp, #32]
   19668:	ldr	r2, [sp, #44]	; 0x2c
   1966c:	ldr	r0, [r5, #40]	; 0x28
   19670:	mov	r1, r5
   19674:	add	r0, r0, r6
   19678:	str	r0, [r5, #40]	; 0x28
   1967c:	add	r0, sp, #56	; 0x38
   19680:	bl	1a78c <__mempcpy_chk@plt+0x91ac>
   19684:	mov	r3, r0
   19688:	ldrb	r0, [sp, #60]	; 0x3c
   1968c:	cmp	r0, #21
   19690:	beq	1974c <__mempcpy_chk@plt+0x816c>
   19694:	cmp	r0, #2
   19698:	beq	19d68 <__mempcpy_chk@plt+0x8788>
   1969c:	ldr	r8, [sp, #44]	; 0x2c
   196a0:	mov	r0, #3
   196a4:	add	r2, sp, #56	; 0x38
   196a8:	str	r0, [fp, #-48]	; 0xffffffd0
   196ac:	add	r0, sp, #64	; 0x40
   196b0:	str	r0, [fp, #-44]	; 0xffffffd4
   196b4:	mov	r0, #1
   196b8:	str	r0, [sp, #4]
   196bc:	sub	r0, fp, #48	; 0x30
   196c0:	str	r8, [sp]
   196c4:	ldr	r5, [sp, #48]	; 0x30
   196c8:	mov	r1, r5
   196cc:	bl	1a8f4 <__mempcpy_chk@plt+0x9314>
   196d0:	cmp	r0, #0
   196d4:	bne	1a48c <__mempcpy_chk@plt+0x8eac>
   196d8:	ldr	r0, [sp, #28]
   196dc:	mov	r1, r5
   196e0:	mov	r2, r8
   196e4:	bl	1a78c <__mempcpy_chk@plt+0x91ac>
   196e8:	ldr	r6, [fp, #-48]	; 0xffffffd0
   196ec:	mov	sl, #11
   196f0:	str	r0, [sp, #32]
   196f4:	cmp	r6, #2
   196f8:	cmpne	r6, #4
   196fc:	beq	19d68 <__mempcpy_chk@plt+0x8788>
   19700:	cmp	r7, #3
   19704:	bne	19718 <__mempcpy_chk@plt+0x8138>
   19708:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1970c:	bl	114c0 <strlen@plt>
   19710:	cmp	r0, #1
   19714:	bhi	19d64 <__mempcpy_chk@plt+0x8784>
   19718:	cmp	r6, #3
   1971c:	bne	19730 <__mempcpy_chk@plt+0x8150>
   19720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19724:	bl	114c0 <strlen@plt>
   19728:	cmp	r0, #1
   1972c:	bhi	19d64 <__mempcpy_chk@plt+0x8784>
   19730:	ldr	r2, [sp, #28]
   19734:	cmp	r7, #3
   19738:	beq	198b0 <__mempcpy_chk@plt+0x82d0>
   1973c:	mov	r8, #0
   19740:	cmp	r7, #0
   19744:	ldrbeq	r8, [fp, #-36]	; 0xffffffdc
   19748:	b	198b8 <__mempcpy_chk@plt+0x82d8>
   1974c:	ldr	r0, [r5, #40]	; 0x28
   19750:	ldr	r2, [sp, #28]
   19754:	sub	r0, r0, r6
   19758:	str	r0, [r5, #40]	; 0x28
   1975c:	mov	r0, #1
   19760:	strb	r0, [r2, #4]
   19764:	cmp	r7, #1
   19768:	beq	19854 <__mempcpy_chk@plt+0x8274>
   1976c:	ldr	r9, [sp, #24]
   19770:	ldr	sl, [sp, #32]
   19774:	cmp	r7, #2
   19778:	mov	r8, #0
   1977c:	beq	197c4 <__mempcpy_chk@plt+0x81e4>
   19780:	cmp	r7, #3
   19784:	mov	r7, #1
   19788:	bne	19894 <__mempcpy_chk@plt+0x82b4>
   1978c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   19790:	mov	r0, r5
   19794:	bl	114c0 <strlen@plt>
   19798:	ldr	r6, [sp, #48]	; 0x30
   1979c:	cmp	r0, #1
   197a0:	bne	19d64 <__mempcpy_chk@plt+0x8784>
   197a4:	ldrb	r0, [r5]
   197a8:	ubfx	r1, r0, #5, #3
   197ac:	and	r0, r0, #31
   197b0:	ldr	r2, [r4, r1, lsl #2]
   197b4:	orr	r0, r2, r7, lsl r0
   197b8:	str	r0, [r4, r1, lsl #2]
   197bc:	str	r8, [r9]
   197c0:	b	197fc <__mempcpy_chk@plt+0x821c>
   197c4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   197c8:	mov	r0, r5
   197cc:	bl	114c0 <strlen@plt>
   197d0:	cmp	r0, #1
   197d4:	mov	r3, #1
   197d8:	bne	19d60 <__mempcpy_chk@plt+0x8780>
   197dc:	ldrb	r0, [r5]
   197e0:	ubfx	r1, r0, #5, #3
   197e4:	and	r0, r0, #31
   197e8:	ldr	r2, [r4, r1, lsl #2]
   197ec:	orr	r0, r2, r3, lsl r0
   197f0:	str	r0, [r4, r1, lsl #2]
   197f4:	str	r8, [r9]
   197f8:	ldr	r6, [sp, #48]	; 0x30
   197fc:	ldr	r2, [sp, #28]
   19800:	ldr	r5, [sp, #52]	; 0x34
   19804:	ldrb	r0, [r2, #4]
   19808:	cmp	r0, #21
   1980c:	beq	19a98 <__mempcpy_chk@plt+0x84b8>
   19810:	cmp	r0, #2
   19814:	ldr	r0, [sp, #44]	; 0x2c
   19818:	beq	19d24 <__mempcpy_chk@plt+0x8744>
   1981c:	mov	r1, #3
   19820:	mov	r3, sl
   19824:	mov	r5, r2
   19828:	str	r1, [fp, #-40]	; 0xffffffd8
   1982c:	sub	r1, fp, #80	; 0x50
   19830:	str	r1, [fp, #-36]	; 0xffffffdc
   19834:	stm	sp, {r0, r8}
   19838:	sub	r0, fp, #40	; 0x28
   1983c:	mov	r1, r6
   19840:	bl	1a8f4 <__mempcpy_chk@plt+0x9314>
   19844:	ldr	r2, [sp, #44]	; 0x2c
   19848:	cmp	r0, #0
   1984c:	beq	195d4 <__mempcpy_chk@plt+0x7ff4>
   19850:	b	19d1c <__mempcpy_chk@plt+0x873c>
   19854:	ldr	r3, [sp, #40]	; 0x28
   19858:	ldr	r0, [sp, #16]
   1985c:	mov	r8, #0
   19860:	ldr	r1, [r3, #20]
   19864:	cmp	r0, r1
   19868:	beq	199f8 <__mempcpy_chk@plt+0x8418>
   1986c:	ldr	r0, [r3]
   19870:	ldr	r9, [sp, #24]
   19874:	ldr	r6, [sp, #48]	; 0x30
   19878:	ldr	r5, [sp, #52]	; 0x34
   1987c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   19880:	ldr	sl, [sp, #32]
   19884:	add	r7, r1, #1
   19888:	str	r7, [r3, #20]
   1988c:	str	ip, [r0, r1, lsl #2]
   19890:	b	19804 <__mempcpy_chk@plt+0x8224>
   19894:	ldrb	r0, [fp, #-36]	; 0xffffffdc
   19898:	ubfx	r1, r0, #5, #3
   1989c:	and	r0, r0, #31
   198a0:	ldr	r2, [r4, r1, lsl #2]
   198a4:	orr	r0, r2, r7, lsl r0
   198a8:	str	r0, [r4, r1, lsl #2]
   198ac:	b	197f8 <__mempcpy_chk@plt+0x8218>
   198b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   198b4:	ldrb	r8, [r0]
   198b8:	cmp	r6, #3
   198bc:	beq	198d0 <__mempcpy_chk@plt+0x82f0>
   198c0:	mov	r9, #0
   198c4:	cmp	r6, #0
   198c8:	ldrbeq	r9, [fp, #-44]	; 0xffffffd4
   198cc:	b	198d8 <__mempcpy_chk@plt+0x82f8>
   198d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   198d4:	ldrb	r9, [r0]
   198d8:	cmp	r7, #3
   198dc:	cmpne	r7, #0
   198e0:	bne	19908 <__mempcpy_chk@plt+0x8328>
   198e4:	ldr	r0, [sp, #52]	; 0x34
   198e8:	ldr	r0, [r0, #92]	; 0x5c
   198ec:	cmp	r0, #2
   198f0:	blt	1990c <__mempcpy_chk@plt+0x832c>
   198f4:	mov	r0, r8
   198f8:	bl	114fc <btowc@plt>
   198fc:	ldr	r2, [sp, #28]
   19900:	mov	r8, r0
   19904:	b	1990c <__mempcpy_chk@plt+0x832c>
   19908:	ldr	r8, [fp, #-36]	; 0xffffffdc
   1990c:	cmp	r6, #3
   19910:	cmpne	r6, #0
   19914:	bne	1993c <__mempcpy_chk@plt+0x835c>
   19918:	ldr	r0, [sp, #52]	; 0x34
   1991c:	ldr	r0, [r0, #92]	; 0x5c
   19920:	cmp	r0, #2
   19924:	blt	19940 <__mempcpy_chk@plt+0x8360>
   19928:	mov	r0, r9
   1992c:	bl	114fc <btowc@plt>
   19930:	ldr	r2, [sp, #28]
   19934:	mov	r9, r0
   19938:	b	19940 <__mempcpy_chk@plt+0x8360>
   1993c:	ldr	r9, [fp, #-44]	; 0xffffffd4
   19940:	cmn	r8, #1
   19944:	mov	sl, #3
   19948:	cmnne	r9, #1
   1994c:	beq	19d68 <__mempcpy_chk@plt+0x8788>
   19950:	ldr	r0, [sp, #20]
   19954:	cmp	r0, #0
   19958:	beq	19968 <__mempcpy_chk@plt+0x8388>
   1995c:	cmp	r8, r9
   19960:	mov	sl, #11
   19964:	bhi	19d68 <__mempcpy_chk@plt+0x8788>
   19968:	ldr	r0, [sp, #52]	; 0x34
   1996c:	ldr	r0, [r0, #92]	; 0x5c
   19970:	cmp	r0, #2
   19974:	blt	199ac <__mempcpy_chk@plt+0x83cc>
   19978:	ldr	r7, [sp, #40]	; 0x28
   1997c:	ldr	r1, [sp, #12]
   19980:	ldr	r6, [sp, #48]	; 0x30
   19984:	ldr	r0, [r7, #32]
   19988:	cmp	r1, r0
   1998c:	beq	19a40 <__mempcpy_chk@plt+0x8460>
   19990:	ldmib	r7, {r5, sl}
   19994:	str	r8, [r5, r0, lsl #2]
   19998:	ldr	r0, [r7, #32]
   1999c:	add	r1, r0, #1
   199a0:	str	r1, [r7, #32]
   199a4:	str	r9, [sl, r0, lsl #2]
   199a8:	b	199b0 <__mempcpy_chk@plt+0x83d0>
   199ac:	ldr	r6, [sp, #48]	; 0x30
   199b0:	ldr	sl, [sp, #32]
   199b4:	mov	r0, #0
   199b8:	mov	r5, #1
   199bc:	cmp	r8, r0
   199c0:	cmpls	r0, r9
   199c4:	ubfxls	r1, r0, #5, #3
   199c8:	andls	r3, r0, #31
   199cc:	add	r0, r0, #1
   199d0:	ldrls	r7, [r4, r1, lsl #2]
   199d4:	orrls	r3, r7, r5, lsl r3
   199d8:	strls	r3, [r4, r1, lsl #2]
   199dc:	cmp	r0, #256	; 0x100
   199e0:	bne	199bc <__mempcpy_chk@plt+0x83dc>
   199e4:	ldr	r9, [sp, #24]
   199e8:	ldr	r5, [sp, #52]	; 0x34
   199ec:	mov	r8, #0
   199f0:	str	r8, [r9]
   199f4:	b	19804 <__mempcpy_chk@plt+0x8224>
   199f8:	ldr	r1, [sp, #16]
   199fc:	mov	r0, #1
   19a00:	orr	r1, r0, r1, lsl #1
   19a04:	ldr	r0, [r3]
   19a08:	str	r1, [sp, #16]
   19a0c:	lsl	r1, r1, #2
   19a10:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   19a14:	cmp	r0, #0
   19a18:	beq	1a494 <__mempcpy_chk@plt+0x8eb4>
   19a1c:	ldr	r3, [sp, #40]	; 0x28
   19a20:	ldr	r9, [sp, #24]
   19a24:	ldr	r6, [sp, #48]	; 0x30
   19a28:	ldr	r2, [sp, #28]
   19a2c:	ldr	r5, [sp, #52]	; 0x34
   19a30:	mov	r8, #0
   19a34:	str	r0, [r3]
   19a38:	ldr	r1, [r3, #20]
   19a3c:	b	1987c <__mempcpy_chk@plt+0x829c>
   19a40:	ldr	r1, [sp, #12]
   19a44:	mov	r0, #1
   19a48:	orr	r1, r0, r1, lsl #1
   19a4c:	ldr	r0, [r7, #4]
   19a50:	lsl	r6, r1, #2
   19a54:	str	r1, [sp, #12]
   19a58:	mov	r1, r6
   19a5c:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   19a60:	mov	r5, r0
   19a64:	ldr	r0, [r7, #8]
   19a68:	mov	r1, r6
   19a6c:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   19a70:	mov	sl, r0
   19a74:	cmp	r5, #0
   19a78:	cmpne	sl, #0
   19a7c:	beq	1a4a4 <__mempcpy_chk@plt+0x8ec4>
   19a80:	ldr	r7, [sp, #40]	; 0x28
   19a84:	stmib	r7, {r5, sl}
   19a88:	ldr	r0, [r7, #32]
   19a8c:	ldr	r6, [sp, #48]	; 0x30
   19a90:	ldr	r2, [sp, #28]
   19a94:	b	19994 <__mempcpy_chk@plt+0x83b4>
   19a98:	ldr	r0, [r6, #40]	; 0x28
   19a9c:	add	r0, r0, sl
   19aa0:	str	r0, [r6, #40]	; 0x28
   19aa4:	ldr	r0, [sp, #36]	; 0x24
   19aa8:	cmp	r0, #0
   19aac:	beq	19ad0 <__mempcpy_chk@plt+0x84f0>
   19ab0:	mov	r0, #0
   19ab4:	add	r1, r4, r0
   19ab8:	add	r0, r0, #16
   19abc:	vld1.32	{d16-d17}, [r1]
   19ac0:	cmp	r0, #32
   19ac4:	vmvn	q8, q8
   19ac8:	vst1.32	{d16-d17}, [r1]
   19acc:	bne	19ab4 <__mempcpy_chk@plt+0x84d4>
   19ad0:	ldr	r0, [r5, #92]	; 0x5c
   19ad4:	ldr	r8, [sp, #40]	; 0x28
   19ad8:	cmp	r0, #2
   19adc:	blt	19b04 <__mempcpy_chk@plt+0x8524>
   19ae0:	ldr	r1, [r5, #60]	; 0x3c
   19ae4:	mov	r2, #0
   19ae8:	ldr	r3, [r1, r2, lsl #2]
   19aec:	ldr	r7, [r4, r2, lsl #2]
   19af0:	and	r3, r7, r3
   19af4:	str	r3, [r4, r2, lsl #2]
   19af8:	add	r2, r2, #1
   19afc:	cmp	r2, #8
   19b00:	bne	19ae8 <__mempcpy_chk@plt+0x8508>
   19b04:	ldr	r1, [r8, #20]
   19b08:	cmp	r1, #0
   19b0c:	bne	19b34 <__mempcpy_chk@plt+0x8554>
   19b10:	ldr	r1, [r8, #24]
   19b14:	cmp	r1, #0
   19b18:	bne	19b34 <__mempcpy_chk@plt+0x8554>
   19b1c:	ldr	r1, [r8, #28]
   19b20:	cmp	r1, #0
   19b24:	bne	19b34 <__mempcpy_chk@plt+0x8554>
   19b28:	ldr	r1, [r8, #32]
   19b2c:	cmp	r1, #0
   19b30:	beq	19ccc <__mempcpy_chk@plt+0x86ec>
   19b34:	ldrb	r0, [r5, #88]	; 0x58
   19b38:	add	r3, sp, #64	; 0x40
   19b3c:	mov	r1, #0
   19b40:	mov	r2, #0
   19b44:	orr	r0, r0, #2
   19b48:	strb	r0, [r5, #88]	; 0x58
   19b4c:	mov	r0, #6
   19b50:	str	r8, [sp, #64]	; 0x40
   19b54:	str	r0, [sp, #68]	; 0x44
   19b58:	mov	r0, r5
   19b5c:	mov	r5, #0
   19b60:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19b64:	ldr	r6, [sp, #48]	; 0x30
   19b68:	cmp	r0, #0
   19b6c:	beq	19bf0 <__mempcpy_chk@plt+0x8610>
   19b70:	mov	r7, r0
   19b74:	ldr	r0, [r4, r5, lsl #2]
   19b78:	cmp	r0, #0
   19b7c:	bne	19b98 <__mempcpy_chk@plt+0x85b8>
   19b80:	add	r5, r5, #1
   19b84:	cmp	r5, #7
   19b88:	bls	19b74 <__mempcpy_chk@plt+0x8594>
   19b8c:	mov	r0, r4
   19b90:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   19b94:	b	19d8c <__mempcpy_chk@plt+0x87ac>
   19b98:	mov	r0, #3
   19b9c:	str	r4, [sp, #64]	; 0x40
   19ba0:	add	r3, sp, #64	; 0x40
   19ba4:	mov	r1, #0
   19ba8:	mov	r2, #0
   19bac:	mov	r5, #0
   19bb0:	str	r0, [sp, #68]	; 0x44
   19bb4:	ldr	r0, [sp, #52]	; 0x34
   19bb8:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19bbc:	cmp	r0, #0
   19bc0:	beq	19bf0 <__mempcpy_chk@plt+0x8610>
   19bc4:	mov	r1, r0
   19bc8:	mov	r0, #10
   19bcc:	sub	r3, fp, #80	; 0x50
   19bd0:	mov	r2, r7
   19bd4:	str	r0, [fp, #-76]	; 0xffffffb4
   19bd8:	ldr	r0, [sp, #52]	; 0x34
   19bdc:	str	r5, [fp, #-80]	; 0xffffffb0
   19be0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19be4:	mov	r7, r0
   19be8:	cmp	r0, #0
   19bec:	bne	19d8c <__mempcpy_chk@plt+0x87ac>
   19bf0:	mov	r0, #12
   19bf4:	b	19d34 <__mempcpy_chk@plt+0x8754>
   19bf8:	mov	r4, #9
   19bfc:	mov	r0, #6
   19c00:	ldr	r5, [sp, #52]	; 0x34
   19c04:	str	r0, [r7]
   19c08:	mov	r1, #0
   19c0c:	mov	r2, #0
   19c10:	mov	r3, r7
   19c14:	mov	sl, #0
   19c18:	mov	r0, r5
   19c1c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19c20:	mov	r8, r0
   19c24:	mov	r0, r5
   19c28:	mov	r1, #0
   19c2c:	mov	r2, #0
   19c30:	mov	r3, r7
   19c34:	str	r4, [r7]
   19c38:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19c3c:	mov	r7, r0
   19c40:	mov	r0, #10
   19c44:	sub	r3, fp, #80	; 0x50
   19c48:	mov	r1, r8
   19c4c:	str	r0, [fp, #-76]	; 0xffffffb4
   19c50:	mov	r0, r5
   19c54:	mov	r2, r7
   19c58:	str	sl, [fp, #-80]	; 0xffffffb0
   19c5c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19c60:	cmp	r8, #0
   19c64:	cmpne	r7, #0
   19c68:	bne	19c8c <__mempcpy_chk@plt+0x86ac>
   19c6c:	mov	r0, #12
   19c70:	str	r0, [r9]
   19c74:	b	1a33c <__mempcpy_chk@plt+0x8d5c>
   19c78:	mov	r1, #0
   19c7c:	mov	r2, #0
   19c80:	mov	r3, r7
   19c84:	mov	sl, #0
   19c88:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19c8c:	mov	r5, r0
   19c90:	cmp	r0, #0
   19c94:	beq	19c6c <__mempcpy_chk@plt+0x868c>
   19c98:	ldr	r0, [sp, #28]
   19c9c:	ldr	r2, [sp, #44]	; 0x2c
   19ca0:	mov	r1, r6
   19ca4:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   19ca8:	ldr	r1, [r6, #40]	; 0x28
   19cac:	mov	sl, r5
   19cb0:	add	r0, r1, r0
   19cb4:	str	r0, [r6, #40]	; 0x28
   19cb8:	b	1a33c <__mempcpy_chk@plt+0x8d5c>
   19cbc:	mov	r6, r5
   19cc0:	b	19db8 <__mempcpy_chk@plt+0x87d8>
   19cc4:	mov	r6, r5
   19cc8:	b	19db0 <__mempcpy_chk@plt+0x87d0>
   19ccc:	cmp	r0, #2
   19cd0:	blt	19cec <__mempcpy_chk@plt+0x870c>
   19cd4:	ldr	r0, [r8, #36]	; 0x24
   19cd8:	cmp	r0, #0
   19cdc:	bne	19b34 <__mempcpy_chk@plt+0x8554>
   19ce0:	ldrb	r0, [r8, #16]
   19ce4:	tst	r0, #1
   19ce8:	bne	19b34 <__mempcpy_chk@plt+0x8554>
   19cec:	mov	r0, r8
   19cf0:	bl	17b64 <__mempcpy_chk@plt+0x6584>
   19cf4:	mov	r0, #3
   19cf8:	str	r4, [sp, #64]	; 0x40
   19cfc:	add	r3, sp, #64	; 0x40
   19d00:	mov	r1, #0
   19d04:	mov	r2, #0
   19d08:	str	r0, [sp, #68]	; 0x44
   19d0c:	mov	r0, r5
   19d10:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   19d14:	ldr	r6, [sp, #48]	; 0x30
   19d18:	b	19be4 <__mempcpy_chk@plt+0x8604>
   19d1c:	mov	sl, r0
   19d20:	b	19d28 <__mempcpy_chk@plt+0x8748>
   19d24:	mov	sl, #7
   19d28:	str	r9, [sp, #24]
   19d2c:	b	19d68 <__mempcpy_chk@plt+0x8788>
   19d30:	mov	r0, #2
   19d34:	str	r0, [r9]
   19d38:	b	19d78 <__mempcpy_chk@plt+0x8798>
   19d3c:	mov	r0, #6
   19d40:	b	19c70 <__mempcpy_chk@plt+0x8690>
   19d44:	mov	r0, r4
   19d48:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   19d4c:	mov	r0, r8
   19d50:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   19d54:	mov	r0, #12
   19d58:	str	r0, [r9]
   19d5c:	b	19d8c <__mempcpy_chk@plt+0x87ac>
   19d60:	str	r9, [sp, #24]
   19d64:	mov	sl, #3
   19d68:	ldr	r9, [sp, #24]
   19d6c:	ldr	r6, [sp, #48]	; 0x30
   19d70:	str	sl, [r9]
   19d74:	ldr	r8, [sp, #40]	; 0x28
   19d78:	mov	r0, r4
   19d7c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   19d80:	mov	r0, r8
   19d84:	bl	17b64 <__mempcpy_chk@plt+0x6584>
   19d88:	mov	r7, #0
   19d8c:	mov	r4, r7
   19d90:	cmp	r7, #0
   19d94:	bne	19db0 <__mempcpy_chk@plt+0x87d0>
   19d98:	ldr	r0, [r9]
   19d9c:	ldr	r2, [sp, #44]	; 0x2c
   19da0:	ldr	r3, [sp, #28]
   19da4:	cmp	r0, #0
   19da8:	beq	19db8 <__mempcpy_chk@plt+0x87d8>
   19dac:	b	1a338 <__mempcpy_chk@plt+0x8d58>
   19db0:	ldr	r2, [sp, #44]	; 0x2c
   19db4:	ldr	r3, [sp, #28]
   19db8:	mov	r0, r3
   19dbc:	mov	r1, r6
   19dc0:	str	r9, [sp, #24]
   19dc4:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   19dc8:	ldr	r1, [r6, #40]	; 0x28
   19dcc:	ldr	r2, [sp, #44]	; 0x2c
   19dd0:	ldr	r3, [sp, #28]
   19dd4:	sub	r7, fp, #80	; 0x50
   19dd8:	add	r0, r1, r0
   19ddc:	str	r0, [r6, #40]	; 0x28
   19de0:	and	r0, r2, #2097152	; 0x200000
   19de4:	str	r0, [sp, #20]
   19de8:	and	r0, r2, #16777216	; 0x1000000
   19dec:	str	r0, [sp, #32]
   19df0:	ldrb	r0, [r3, #4]
   19df4:	cmp	r0, #23
   19df8:	bhi	1a2cc <__mempcpy_chk@plt+0x8cec>
   19dfc:	movw	r6, #2048	; 0x800
   19e00:	mov	r1, #1
   19e04:	movt	r6, #140	; 0x8c
   19e08:	tst	r6, r1, lsl r0
   19e0c:	beq	1a2cc <__mempcpy_chk@plt+0x8cec>
   19e10:	cmp	r0, #23
   19e14:	bne	19e6c <__mempcpy_chk@plt+0x888c>
   19e18:	ldr	r0, [sp, #48]	; 0x30
   19e1c:	ldr	sl, [r3]
   19e20:	ldr	r8, [r3, #4]
   19e24:	mov	r1, r3
   19e28:	mov	r5, r3
   19e2c:	ldr	r9, [r0, #40]	; 0x28
   19e30:	bl	1b438 <__mempcpy_chk@plt+0x9e58>
   19e34:	cmn	r0, #1
   19e38:	bne	19e88 <__mempcpy_chk@plt+0x88a8>
   19e3c:	ldrb	r0, [r5, #4]
   19e40:	mov	r3, r5
   19e44:	cmp	r0, #1
   19e48:	ldrbeq	r1, [r3]
   19e4c:	cmpeq	r1, #44	; 0x2c
   19e50:	beq	19ef0 <__mempcpy_chk@plt+0x8910>
   19e54:	ldr	r0, [sp, #24]
   19e58:	ldr	r2, [sp, #44]	; 0x2c
   19e5c:	mov	r1, #10
   19e60:	mov	r5, #0
   19e64:	str	r1, [r0]
   19e68:	b	1a240 <__mempcpy_chk@plt+0x8c60>
   19e6c:	cmp	r0, #19
   19e70:	sub	r0, r0, #18
   19e74:	mvn	sl, #0
   19e78:	clz	r0, r0
   19e7c:	movweq	sl, #1
   19e80:	lsr	r6, r0, #5
   19e84:	b	19f50 <__mempcpy_chk@plt+0x8970>
   19e88:	str	sl, [sp, #40]	; 0x28
   19e8c:	mov	r6, r0
   19e90:	cmn	r0, #2
   19e94:	mov	r3, r5
   19e98:	ldr	r2, [sp, #44]	; 0x2c
   19e9c:	beq	19ec4 <__mempcpy_chk@plt+0x88e4>
   19ea0:	ldr	r0, [r3, #4]
   19ea4:	uxtb	r0, r0
   19ea8:	mov	sl, r6
   19eac:	cmp	r0, #24
   19eb0:	beq	19f20 <__mempcpy_chk@plt+0x8940>
   19eb4:	cmp	r0, #1
   19eb8:	ldrbeq	r0, [r3]
   19ebc:	cmpeq	r0, #44	; 0x2c
   19ec0:	beq	19f00 <__mempcpy_chk@plt+0x8920>
   19ec4:	ldr	r0, [sp, #20]
   19ec8:	cmp	r0, #0
   19ecc:	beq	1a298 <__mempcpy_chk@plt+0x8cb8>
   19ed0:	ldr	r0, [sp, #48]	; 0x30
   19ed4:	mov	r5, r4
   19ed8:	str	r9, [r0, #40]	; 0x28
   19edc:	mov	r0, #1
   19ee0:	bfi	r8, r0, #0, #8
   19ee4:	ldr	r0, [sp, #40]	; 0x28
   19ee8:	stm	r3, {r0, r8}
   19eec:	b	1a240 <__mempcpy_chk@plt+0x8c60>
   19ef0:	str	sl, [sp, #40]	; 0x28
   19ef4:	mov	r6, #0
   19ef8:	ldr	r2, [sp, #44]	; 0x2c
   19efc:	b	19ea4 <__mempcpy_chk@plt+0x88c4>
   19f00:	ldr	r0, [sp, #48]	; 0x30
   19f04:	mov	r1, r3
   19f08:	bl	1b438 <__mempcpy_chk@plt+0x9e58>
   19f0c:	ldr	r3, [sp, #28]
   19f10:	ldr	r2, [sp, #44]	; 0x2c
   19f14:	mov	sl, r0
   19f18:	cmn	r0, #2
   19f1c:	beq	19ec4 <__mempcpy_chk@plt+0x88e4>
   19f20:	cmn	sl, #1
   19f24:	beq	19f30 <__mempcpy_chk@plt+0x8950>
   19f28:	cmp	r6, sl
   19f2c:	bgt	1a28c <__mempcpy_chk@plt+0x8cac>
   19f30:	ldrb	r0, [r3, #4]
   19f34:	cmp	r0, #24
   19f38:	bne	1a28c <__mempcpy_chk@plt+0x8cac>
   19f3c:	cmn	sl, #1
   19f40:	mov	r0, sl
   19f44:	moveq	r0, r6
   19f48:	cmp	r0, #32768	; 0x8000
   19f4c:	bge	1a2b8 <__mempcpy_chk@plt+0x8cd8>
   19f50:	ldr	r5, [sp, #48]	; 0x30
   19f54:	mov	r0, r3
   19f58:	mov	r1, r5
   19f5c:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   19f60:	ldr	r1, [r5, #40]	; 0x28
   19f64:	cmp	r4, #0
   19f68:	add	r0, r1, r0
   19f6c:	str	r0, [r5, #40]	; 0x28
   19f70:	mov	r5, #0
   19f74:	beq	1a178 <__mempcpy_chk@plt+0x8b98>
   19f78:	orrs	r0, sl, r6
   19f7c:	beq	1a124 <__mempcpy_chk@plt+0x8b44>
   19f80:	mov	r0, #0
   19f84:	cmp	r6, #1
   19f88:	mov	r8, r4
   19f8c:	str	r0, [sp, #40]	; 0x28
   19f90:	str	r4, [sp, #36]	; 0x24
   19f94:	mov	r4, #10
   19f98:	bge	1a184 <__mempcpy_chk@plt+0x8ba4>
   19f9c:	ldrb	r0, [r8, #24]
   19fa0:	cmp	r0, #17
   19fa4:	ldr	r0, [sp, #52]	; 0x34
   19fa8:	bne	1a018 <__mempcpy_chk@plt+0x8a38>
   19fac:	ldr	r5, [r8, #20]
   19fb0:	mov	r2, r8
   19fb4:	mov	r1, r2
   19fb8:	ldr	r2, [r2, #4]
   19fbc:	cmp	r2, #0
   19fc0:	bne	19fb4 <__mempcpy_chk@plt+0x89d4>
   19fc4:	ldr	r2, [r1, #8]
   19fc8:	cmp	r2, #0
   19fcc:	bne	19fb4 <__mempcpy_chk@plt+0x89d4>
   19fd0:	ldr	r2, [r1, #24]
   19fd4:	uxtb	r3, r2
   19fd8:	cmp	r3, #17
   19fdc:	ldreq	r3, [r1, #20]
   19fe0:	cmpeq	r3, r5
   19fe4:	orreq	r2, r2, #524288	; 0x80000
   19fe8:	streq	r2, [r1, #24]
   19fec:	ldr	r3, [r1]
   19ff0:	cmp	r3, #0
   19ff4:	beq	1a018 <__mempcpy_chk@plt+0x8a38>
   19ff8:	ldr	r2, [r3, #8]
   19ffc:	cmp	r2, r1
   1a000:	mov	r1, r3
   1a004:	beq	19fd0 <__mempcpy_chk@plt+0x89f0>
   1a008:	cmp	r2, #0
   1a00c:	mov	r1, r3
   1a010:	beq	19fd0 <__mempcpy_chk@plt+0x89f0>
   1a014:	b	19fb4 <__mempcpy_chk@plt+0x89d4>
   1a018:	mov	r1, #0
   1a01c:	cmn	sl, #1
   1a020:	mov	r2, #0
   1a024:	mov	r3, r7
   1a028:	str	r1, [fp, #-80]	; 0xffffffb0
   1a02c:	mov	r1, #10
   1a030:	movweq	r1, #11
   1a034:	str	r1, [fp, #-76]	; 0xffffffb4
   1a038:	mov	r1, r8
   1a03c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a040:	cmp	r0, #0
   1a044:	beq	1a224 <__mempcpy_chk@plt+0x8c44>
   1a048:	mov	r5, r0
   1a04c:	add	r0, r6, #2
   1a050:	cmp	r0, sl
   1a054:	ble	1a08c <__mempcpy_chk@plt+0x8aac>
   1a058:	ldr	r1, [sp, #40]	; 0x28
   1a05c:	cmp	r1, #0
   1a060:	beq	1a110 <__mempcpy_chk@plt+0x8b30>
   1a064:	mov	r0, #16
   1a068:	mov	r2, r5
   1a06c:	mov	r3, r7
   1a070:	str	r0, [fp, #-76]	; 0xffffffb4
   1a074:	mov	r0, #0
   1a078:	str	r0, [fp, #-80]	; 0xffffffb0
   1a07c:	ldr	r0, [sp, #52]	; 0x34
   1a080:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a084:	mov	r5, r0
   1a088:	b	1a234 <__mempcpy_chk@plt+0x8c54>
   1a08c:	add	r6, r6, #1
   1a090:	ldr	r9, [sp, #52]	; 0x34
   1a094:	mov	r0, r8
   1a098:	mov	r1, r9
   1a09c:	bl	1b4f0 <__mempcpy_chk@plt+0x9f10>
   1a0a0:	mov	r8, r0
   1a0a4:	mov	r0, #16
   1a0a8:	mov	r1, r5
   1a0ac:	mov	r3, r7
   1a0b0:	str	r0, [fp, #-76]	; 0xffffffb4
   1a0b4:	mov	r0, #0
   1a0b8:	mov	r2, r8
   1a0bc:	str	r0, [fp, #-80]	; 0xffffffb0
   1a0c0:	mov	r0, r9
   1a0c4:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a0c8:	cmp	r8, #0
   1a0cc:	movne	r1, r0
   1a0d0:	cmpne	r0, #0
   1a0d4:	beq	1a224 <__mempcpy_chk@plt+0x8c44>
   1a0d8:	mov	r0, #0
   1a0dc:	str	r4, [fp, #-76]	; 0xffffffb4
   1a0e0:	mov	r2, #0
   1a0e4:	mov	r3, r7
   1a0e8:	str	r0, [fp, #-80]	; 0xffffffb0
   1a0ec:	ldr	r0, [sp, #52]	; 0x34
   1a0f0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a0f4:	cmp	r0, #0
   1a0f8:	beq	1a224 <__mempcpy_chk@plt+0x8c44>
   1a0fc:	add	r6, r6, #1
   1a100:	mov	r5, r0
   1a104:	cmp	r6, sl
   1a108:	blt	1a090 <__mempcpy_chk@plt+0x8ab0>
   1a10c:	b	1a058 <__mempcpy_chk@plt+0x8a78>
   1a110:	ldr	r2, [sp, #44]	; 0x2c
   1a114:	ldr	r3, [sp, #28]
   1a118:	clz	r0, r5
   1a11c:	lsr	r0, r0, #5
   1a120:	b	1a260 <__mempcpy_chk@plt+0x8c80>
   1a124:	mov	r0, r4
   1a128:	mov	r6, r0
   1a12c:	ldr	r0, [r0, #4]
   1a130:	cmp	r0, #0
   1a134:	bne	1a128 <__mempcpy_chk@plt+0x8b48>
   1a138:	ldr	r0, [r6, #8]
   1a13c:	cmp	r0, #0
   1a140:	bne	1a128 <__mempcpy_chk@plt+0x8b48>
   1a144:	add	r0, r6, #20
   1a148:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   1a14c:	ldr	r1, [r6]
   1a150:	cmp	r1, #0
   1a154:	beq	1a178 <__mempcpy_chk@plt+0x8b98>
   1a158:	ldr	r0, [r1, #8]
   1a15c:	cmp	r0, r6
   1a160:	mov	r6, r1
   1a164:	beq	1a144 <__mempcpy_chk@plt+0x8b64>
   1a168:	cmp	r0, #0
   1a16c:	mov	r6, r1
   1a170:	beq	1a144 <__mempcpy_chk@plt+0x8b64>
   1a174:	b	1a128 <__mempcpy_chk@plt+0x8b48>
   1a178:	ldr	r2, [sp, #44]	; 0x2c
   1a17c:	ldr	r3, [sp, #28]
   1a180:	b	1a240 <__mempcpy_chk@plt+0x8c60>
   1a184:	ldr	r9, [sp, #36]	; 0x24
   1a188:	str	r9, [sp, #40]	; 0x28
   1a18c:	beq	1a1f8 <__mempcpy_chk@plt+0x8c18>
   1a190:	ldr	r0, [sp, #36]	; 0x24
   1a194:	mov	r5, #1
   1a198:	mov	r9, r0
   1a19c:	str	r0, [sp, #40]	; 0x28
   1a1a0:	ldr	r8, [sp, #52]	; 0x34
   1a1a4:	mov	r0, r9
   1a1a8:	mov	r1, r8
   1a1ac:	bl	1b4f0 <__mempcpy_chk@plt+0x9f10>
   1a1b0:	ldr	r1, [sp, #40]	; 0x28
   1a1b4:	mov	r9, r0
   1a1b8:	mov	r0, #16
   1a1bc:	mov	r3, r7
   1a1c0:	str	r0, [fp, #-76]	; 0xffffffb4
   1a1c4:	mov	r0, #0
   1a1c8:	mov	r2, r9
   1a1cc:	str	r0, [fp, #-80]	; 0xffffffb0
   1a1d0:	mov	r0, r8
   1a1d4:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a1d8:	str	r0, [sp, #40]	; 0x28
   1a1dc:	cmp	r9, #0
   1a1e0:	ldrne	r0, [sp, #40]	; 0x28
   1a1e4:	cmpne	r0, #0
   1a1e8:	beq	1a224 <__mempcpy_chk@plt+0x8c44>
   1a1ec:	add	r5, r5, #1
   1a1f0:	cmp	r5, r6
   1a1f4:	blt	1a1a0 <__mempcpy_chk@plt+0x8bc0>
   1a1f8:	cmp	r6, sl
   1a1fc:	bne	1a20c <__mempcpy_chk@plt+0x8c2c>
   1a200:	ldr	r2, [sp, #44]	; 0x2c
   1a204:	ldr	r5, [sp, #40]	; 0x28
   1a208:	b	1a114 <__mempcpy_chk@plt+0x8b34>
   1a20c:	ldr	r1, [sp, #52]	; 0x34
   1a210:	mov	r0, r9
   1a214:	bl	1b4f0 <__mempcpy_chk@plt+0x9f10>
   1a218:	mov	r8, r0
   1a21c:	cmp	r0, #0
   1a220:	bne	19f9c <__mempcpy_chk@plt+0x89bc>
   1a224:	ldr	r0, [sp, #24]
   1a228:	mov	r1, #12
   1a22c:	mov	r5, #0
   1a230:	str	r1, [r0]
   1a234:	ldr	r2, [sp, #44]	; 0x2c
   1a238:	ldr	r3, [sp, #28]
   1a23c:	ldr	r4, [sp, #36]	; 0x24
   1a240:	clz	r0, r5
   1a244:	cmp	r5, #0
   1a248:	lsr	r0, r0, #5
   1a24c:	bne	1a260 <__mempcpy_chk@plt+0x8c80>
   1a250:	ldr	r1, [sp, #24]
   1a254:	ldr	r1, [r1]
   1a258:	cmp	r1, #0
   1a25c:	bne	1a348 <__mempcpy_chk@plt+0x8d68>
   1a260:	ldr	r1, [sp, #32]
   1a264:	mov	r4, r5
   1a268:	cmp	r1, #0
   1a26c:	beq	19df0 <__mempcpy_chk@plt+0x8810>
   1a270:	ldrb	r1, [r3, #4]
   1a274:	cmp	r1, #23
   1a278:	beq	1a2d4 <__mempcpy_chk@plt+0x8cf4>
   1a27c:	cmp	r1, #11
   1a280:	mov	r4, r5
   1a284:	bne	19df0 <__mempcpy_chk@plt+0x8810>
   1a288:	b	1a2d4 <__mempcpy_chk@plt+0x8cf4>
   1a28c:	ldr	r0, [sp, #24]
   1a290:	mov	r1, #10
   1a294:	b	1a2c0 <__mempcpy_chk@plt+0x8ce0>
   1a298:	ldrb	r0, [r3, #4]
   1a29c:	ldr	r1, [sp, #24]
   1a2a0:	mov	r5, #0
   1a2a4:	cmp	r0, #2
   1a2a8:	mov	r0, #10
   1a2ac:	movweq	r0, #9
   1a2b0:	str	r0, [r1]
   1a2b4:	b	1a240 <__mempcpy_chk@plt+0x8c60>
   1a2b8:	ldr	r0, [sp, #24]
   1a2bc:	mov	r1, #15
   1a2c0:	str	r1, [r0]
   1a2c4:	mov	r5, #0
   1a2c8:	b	1a240 <__mempcpy_chk@plt+0x8c60>
   1a2cc:	mov	sl, r4
   1a2d0:	b	1a33c <__mempcpy_chk@plt+0x8d5c>
   1a2d4:	cmp	r0, #0
   1a2d8:	bne	1a32c <__mempcpy_chk@plt+0x8d4c>
   1a2dc:	mov	r4, r5
   1a2e0:	ldr	r5, [r5, #4]
   1a2e4:	cmp	r5, #0
   1a2e8:	bne	1a2dc <__mempcpy_chk@plt+0x8cfc>
   1a2ec:	ldr	r5, [r4, #8]
   1a2f0:	cmp	r5, #0
   1a2f4:	bne	1a2dc <__mempcpy_chk@plt+0x8cfc>
   1a2f8:	add	r0, r4, #20
   1a2fc:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   1a300:	ldr	r0, [r4]
   1a304:	cmp	r0, #0
   1a308:	beq	1a32c <__mempcpy_chk@plt+0x8d4c>
   1a30c:	ldr	r5, [r0, #8]
   1a310:	cmp	r5, r4
   1a314:	mov	r4, r0
   1a318:	beq	1a2f8 <__mempcpy_chk@plt+0x8d18>
   1a31c:	cmp	r5, #0
   1a320:	mov	r4, r0
   1a324:	beq	1a2f8 <__mempcpy_chk@plt+0x8d18>
   1a328:	b	1a2dc <__mempcpy_chk@plt+0x8cfc>
   1a32c:	ldr	r1, [sp, #24]
   1a330:	mov	r0, #13
   1a334:	str	r0, [r1]
   1a338:	mov	sl, #0
   1a33c:	mov	r0, sl
   1a340:	sub	sp, fp, #28
   1a344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a348:	mov	sl, #0
   1a34c:	cmp	r4, #0
   1a350:	beq	1a33c <__mempcpy_chk@plt+0x8d5c>
   1a354:	mov	r5, r4
   1a358:	ldr	r4, [r4, #4]
   1a35c:	cmp	r4, #0
   1a360:	bne	1a354 <__mempcpy_chk@plt+0x8d74>
   1a364:	ldr	r4, [r5, #8]
   1a368:	cmp	r4, #0
   1a36c:	bne	1a354 <__mempcpy_chk@plt+0x8d74>
   1a370:	add	r0, r5, #20
   1a374:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   1a378:	ldr	r0, [r5]
   1a37c:	cmp	r0, #0
   1a380:	beq	1a33c <__mempcpy_chk@plt+0x8d5c>
   1a384:	ldr	r4, [r0, #8]
   1a388:	cmp	r4, r5
   1a38c:	mov	r5, r0
   1a390:	beq	1a370 <__mempcpy_chk@plt+0x8d90>
   1a394:	cmp	r4, #0
   1a398:	mov	r5, r0
   1a39c:	beq	1a370 <__mempcpy_chk@plt+0x8d90>
   1a3a0:	b	1a354 <__mempcpy_chk@plt+0x8d74>
   1a3a4:	mov	r4, #0
   1a3a8:	mov	r8, #0
   1a3ac:	b	1a3b8 <__mempcpy_chk@plt+0x8dd8>
   1a3b0:	mov	r8, #4
   1a3b4:	mov	r4, #128	; 0x80
   1a3b8:	bl	114a8 <__ctype_b_loc@plt>
   1a3bc:	ldr	r0, [r0]
   1a3c0:	ldr	r7, [sp, #28]
   1a3c4:	mov	r1, #1
   1a3c8:	add	r5, r0, r4, lsl #1
   1a3cc:	ldr	r0, [sp, #52]	; 0x34
   1a3d0:	mov	r3, #0
   1a3d4:	add	r0, r0, r8, lsl #2
   1a3d8:	add	r2, r0, #96	; 0x60
   1a3dc:	mov	r0, r5
   1a3e0:	add	r6, r4, r3
   1a3e4:	cmp	r6, #95	; 0x5f
   1a3e8:	beq	1a3f8 <__mempcpy_chk@plt+0x8e18>
   1a3ec:	ldrh	r6, [r0]
   1a3f0:	ands	r6, r6, #8
   1a3f4:	beq	1a404 <__mempcpy_chk@plt+0x8e24>
   1a3f8:	ldr	r6, [r2]
   1a3fc:	orr	r6, r6, r1, lsl r3
   1a400:	str	r6, [r2]
   1a404:	add	r3, r3, #1
   1a408:	add	r0, r0, #2
   1a40c:	cmp	r3, #32
   1a410:	bne	1a3e0 <__mempcpy_chk@plt+0x8e00>
   1a414:	add	r8, r8, #1
   1a418:	add	r5, r5, #64	; 0x40
   1a41c:	add	r4, r4, #32
   1a420:	cmp	r8, #8
   1a424:	bne	1a3cc <__mempcpy_chk@plt+0x8dec>
   1a428:	b	19338 <__mempcpy_chk@plt+0x7d58>
   1a42c:	cmp	r1, #0
   1a430:	beq	1a484 <__mempcpy_chk@plt+0x8ea4>
   1a434:	mov	r5, r1
   1a438:	ldr	r1, [r1, #4]
   1a43c:	cmp	r1, #0
   1a440:	bne	1a434 <__mempcpy_chk@plt+0x8e54>
   1a444:	ldr	r1, [r5, #8]
   1a448:	cmp	r1, #0
   1a44c:	bne	1a434 <__mempcpy_chk@plt+0x8e54>
   1a450:	add	r0, r5, #20
   1a454:	bl	17ad4 <__mempcpy_chk@plt+0x64f4>
   1a458:	ldr	r0, [r5]
   1a45c:	cmp	r0, #0
   1a460:	beq	1a484 <__mempcpy_chk@plt+0x8ea4>
   1a464:	ldr	r1, [r0, #8]
   1a468:	cmp	r1, r5
   1a46c:	mov	r5, r0
   1a470:	beq	1a450 <__mempcpy_chk@plt+0x8e70>
   1a474:	cmp	r1, #0
   1a478:	mov	r5, r0
   1a47c:	beq	1a450 <__mempcpy_chk@plt+0x8e70>
   1a480:	b	1a434 <__mempcpy_chk@plt+0x8e54>
   1a484:	mov	r0, #8
   1a488:	b	19c70 <__mempcpy_chk@plt+0x8690>
   1a48c:	mov	sl, r0
   1a490:	b	19d68 <__mempcpy_chk@plt+0x8788>
   1a494:	ldr	r9, [sp, #24]
   1a498:	ldr	r6, [sp, #48]	; 0x30
   1a49c:	ldr	r8, [sp, #40]	; 0x28
   1a4a0:	b	19bf0 <__mempcpy_chk@plt+0x8610>
   1a4a4:	mov	r0, r5
   1a4a8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1a4ac:	mov	r0, sl
   1a4b0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1a4b4:	mov	sl, #12
   1a4b8:	b	19d68 <__mempcpy_chk@plt+0x8788>
   1a4bc:	push	{r4, r5, r6, r7, fp, lr}
   1a4c0:	add	fp, sp, #16
   1a4c4:	mov	r5, r1
   1a4c8:	ldr	r1, [r0, #64]	; 0x40
   1a4cc:	mov	r6, r3
   1a4d0:	mov	r4, r2
   1a4d4:	mov	r7, r0
   1a4d8:	cmp	r1, #31
   1a4dc:	beq	1a534 <__mempcpy_chk@plt+0x8f54>
   1a4e0:	ldr	r0, [r7, #56]	; 0x38
   1a4e4:	add	r2, r1, #1
   1a4e8:	add	r0, r0, r1, lsl #5
   1a4ec:	mov	r1, #0
   1a4f0:	cmp	r5, #0
   1a4f4:	str	r2, [r7, #64]	; 0x40
   1a4f8:	str	r1, [r0, #4]!
   1a4fc:	str	r5, [r0, #4]
   1a500:	str	r4, [r0, #8]
   1a504:	ldm	r6, {r2, r3}
   1a508:	str	r1, [r0, #12]
   1a50c:	str	r1, [r0, #16]
   1a510:	mvn	r1, #0
   1a514:	str	r1, [r0, #28]
   1a518:	bic	r1, r3, #786432	; 0xc0000
   1a51c:	str	r2, [r0, #20]
   1a520:	str	r1, [r0, #24]
   1a524:	strne	r0, [r5]
   1a528:	cmp	r4, #0
   1a52c:	strne	r0, [r4]
   1a530:	pop	{r4, r5, r6, r7, fp, pc}
   1a534:	mov	r0, #996	; 0x3e4
   1a538:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1a53c:	cmp	r0, #0
   1a540:	moveq	r0, #0
   1a544:	popeq	{r4, r5, r6, r7, fp, pc}
   1a548:	ldr	r1, [r7, #56]	; 0x38
   1a54c:	str	r1, [r0]
   1a550:	mov	r1, #0
   1a554:	str	r1, [r7, #64]	; 0x40
   1a558:	str	r0, [r7, #56]	; 0x38
   1a55c:	b	1a4e4 <__mempcpy_chk@plt+0x8f04>
   1a560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a564:	add	fp, sp, #28
   1a568:	sub	sp, sp, #28
   1a56c:	mov	sl, r1
   1a570:	mov	r9, r0
   1a574:	mov	r7, #0
   1a578:	mov	r0, #32
   1a57c:	mov	r1, #1
   1a580:	mov	r8, r3
   1a584:	mov	r4, r2
   1a588:	str	r7, [sp, #16]
   1a58c:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1a590:	ldr	r1, [fp, #12]
   1a594:	cmp	r0, #0
   1a598:	beq	1a748 <__mempcpy_chk@plt+0x9168>
   1a59c:	mov	r5, r0
   1a5a0:	mov	r0, #40	; 0x28
   1a5a4:	mov	r1, #1
   1a5a8:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1a5ac:	cmp	r0, #0
   1a5b0:	beq	1a750 <__mempcpy_chk@plt+0x9170>
   1a5b4:	mov	r6, r0
   1a5b8:	ldrb	r0, [r0, #16]
   1a5bc:	ldr	r1, [fp, #8]
   1a5c0:	mov	r7, #0
   1a5c4:	add	r3, sp, #16
   1a5c8:	mov	r2, r6
   1a5cc:	and	r0, r0, #254	; 0xfe
   1a5d0:	orr	r0, r0, r1
   1a5d4:	mov	r1, r5
   1a5d8:	strb	r0, [r6, #16]
   1a5dc:	mov	r0, sl
   1a5e0:	stm	sp, {r4, r7}
   1a5e4:	bl	1abac <__mempcpy_chk@plt+0x95cc>
   1a5e8:	cmp	r0, #0
   1a5ec:	bne	1a76c <__mempcpy_chk@plt+0x918c>
   1a5f0:	ldrb	r0, [r8]
   1a5f4:	cmp	r0, #0
   1a5f8:	beq	1a624 <__mempcpy_chk@plt+0x9044>
   1a5fc:	add	r1, r8, #1
   1a600:	mov	r2, #1
   1a604:	ubfx	r3, r0, #5, #3
   1a608:	and	r0, r0, #31
   1a60c:	ldr	r7, [r5, r3, lsl #2]
   1a610:	orr	r0, r7, r2, lsl r0
   1a614:	str	r0, [r5, r3, lsl #2]
   1a618:	ldrb	r0, [r1], #1
   1a61c:	cmp	r0, #0
   1a620:	bne	1a604 <__mempcpy_chk@plt+0x9024>
   1a624:	ldr	r0, [fp, #8]
   1a628:	cmp	r0, #0
   1a62c:	beq	1a650 <__mempcpy_chk@plt+0x9070>
   1a630:	mov	r0, #0
   1a634:	add	r1, r5, r0
   1a638:	add	r0, r0, #16
   1a63c:	vld1.32	{d16-d17}, [r1]
   1a640:	cmp	r0, #32
   1a644:	vmvn	q8, q8
   1a648:	vst1.32	{d16-d17}, [r1]
   1a64c:	bne	1a634 <__mempcpy_chk@plt+0x9054>
   1a650:	ldr	r0, [r9, #92]	; 0x5c
   1a654:	cmp	r0, #2
   1a658:	blt	1a680 <__mempcpy_chk@plt+0x90a0>
   1a65c:	ldr	r0, [r9, #60]	; 0x3c
   1a660:	mov	r1, #0
   1a664:	ldr	r2, [r0, r1, lsl #2]
   1a668:	ldr	r3, [r5, r1, lsl #2]
   1a66c:	and	r2, r3, r2
   1a670:	str	r2, [r5, r1, lsl #2]
   1a674:	add	r1, r1, #1
   1a678:	cmp	r1, #8
   1a67c:	bne	1a664 <__mempcpy_chk@plt+0x9084>
   1a680:	mov	r0, #3
   1a684:	add	r3, sp, #8
   1a688:	mov	r1, #0
   1a68c:	mov	r2, #0
   1a690:	mov	r7, #0
   1a694:	str	r0, [sp, #12]
   1a698:	mov	r0, r9
   1a69c:	str	r5, [sp, #8]
   1a6a0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a6a4:	cmp	r0, #0
   1a6a8:	beq	1a734 <__mempcpy_chk@plt+0x9154>
   1a6ac:	mov	r4, r0
   1a6b0:	ldr	r0, [r9, #92]	; 0x5c
   1a6b4:	cmp	r0, #2
   1a6b8:	blt	1a71c <__mempcpy_chk@plt+0x913c>
   1a6bc:	mov	r0, #6
   1a6c0:	str	r6, [sp, #8]
   1a6c4:	add	r3, sp, #8
   1a6c8:	mov	r1, #0
   1a6cc:	mov	r2, #0
   1a6d0:	mov	r8, #0
   1a6d4:	str	r0, [sp, #12]
   1a6d8:	ldrb	r0, [r9, #88]	; 0x58
   1a6dc:	orr	r0, r0, #2
   1a6e0:	strb	r0, [r9, #88]	; 0x58
   1a6e4:	mov	r0, r9
   1a6e8:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a6ec:	cmp	r0, #0
   1a6f0:	beq	1a734 <__mempcpy_chk@plt+0x9154>
   1a6f4:	mov	r2, r0
   1a6f8:	mov	r0, #10
   1a6fc:	add	r3, sp, #20
   1a700:	mov	r1, r4
   1a704:	str	r0, [sp, #24]
   1a708:	mov	r0, r9
   1a70c:	str	r8, [sp, #20]
   1a710:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1a714:	mov	r7, r0
   1a718:	b	1a728 <__mempcpy_chk@plt+0x9148>
   1a71c:	mov	r0, r6
   1a720:	bl	17b64 <__mempcpy_chk@plt+0x6584>
   1a724:	mov	r7, r4
   1a728:	mov	r0, r7
   1a72c:	sub	sp, fp, #28
   1a730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a734:	mov	r0, r5
   1a738:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1a73c:	mov	r0, r6
   1a740:	bl	17b64 <__mempcpy_chk@plt+0x6584>
   1a744:	ldr	r1, [fp, #12]
   1a748:	mov	r0, #12
   1a74c:	b	1a764 <__mempcpy_chk@plt+0x9184>
   1a750:	mov	r0, r5
   1a754:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1a758:	ldr	r1, [fp, #12]
   1a75c:	mov	r0, #12
   1a760:	mov	r7, #0
   1a764:	str	r0, [r1]
   1a768:	b	1a728 <__mempcpy_chk@plt+0x9148>
   1a76c:	mov	r4, r0
   1a770:	mov	r0, r5
   1a774:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1a778:	mov	r0, r6
   1a77c:	bl	17b64 <__mempcpy_chk@plt+0x6584>
   1a780:	ldr	r0, [fp, #12]
   1a784:	str	r4, [r0]
   1a788:	b	1a728 <__mempcpy_chk@plt+0x9148>
   1a78c:	push	{fp, lr}
   1a790:	mov	fp, sp
   1a794:	ldr	ip, [r1, #40]	; 0x28
   1a798:	ldr	r3, [r1, #56]	; 0x38
   1a79c:	cmp	r3, ip
   1a7a0:	ble	1a81c <__mempcpy_chk@plt+0x923c>
   1a7a4:	ldr	r3, [r1, #4]
   1a7a8:	ldrb	lr, [r3, ip]
   1a7ac:	strb	lr, [r0]
   1a7b0:	ldr	r3, [r1, #80]	; 0x50
   1a7b4:	cmp	r3, #2
   1a7b8:	blt	1a7dc <__mempcpy_chk@plt+0x91fc>
   1a7bc:	ldr	r3, [r1, #28]
   1a7c0:	ldr	ip, [r1, #40]	; 0x28
   1a7c4:	cmp	ip, r3
   1a7c8:	beq	1a7dc <__mempcpy_chk@plt+0x91fc>
   1a7cc:	ldr	r3, [r1, #8]
   1a7d0:	ldr	r3, [r3, ip, lsl #2]
   1a7d4:	cmn	r3, #1
   1a7d8:	beq	1a8c4 <__mempcpy_chk@plt+0x92e4>
   1a7dc:	tst	r2, #1
   1a7e0:	beq	1a82c <__mempcpy_chk@plt+0x924c>
   1a7e4:	cmp	lr, #92	; 0x5c
   1a7e8:	bne	1a82c <__mempcpy_chk@plt+0x924c>
   1a7ec:	ldr	r2, [r1, #40]	; 0x28
   1a7f0:	ldr	r3, [r1, #48]	; 0x30
   1a7f4:	add	r2, r2, #1
   1a7f8:	cmp	r2, r3
   1a7fc:	bge	1a8c4 <__mempcpy_chk@plt+0x92e4>
   1a800:	str	r2, [r1, #40]	; 0x28
   1a804:	ldr	r1, [r1, #4]
   1a808:	ldrb	r2, [r1, r2]
   1a80c:	mov	r1, #1
   1a810:	strb	r1, [r0, #4]
   1a814:	strb	r2, [r0]
   1a818:	b	1a8cc <__mempcpy_chk@plt+0x92ec>
   1a81c:	mov	r1, #2
   1a820:	strb	r1, [r0, #4]
   1a824:	mov	r1, #0
   1a828:	b	1a8cc <__mempcpy_chk@plt+0x92ec>
   1a82c:	cmp	lr, #92	; 0x5c
   1a830:	bgt	1a884 <__mempcpy_chk@plt+0x92a4>
   1a834:	cmp	lr, #45	; 0x2d
   1a838:	beq	1a89c <__mempcpy_chk@plt+0x92bc>
   1a83c:	cmp	lr, #91	; 0x5b
   1a840:	bne	1a8c4 <__mempcpy_chk@plt+0x92e4>
   1a844:	ldr	r3, [r1, #40]	; 0x28
   1a848:	ldr	ip, [r1, #48]	; 0x30
   1a84c:	add	r3, r3, #1
   1a850:	cmp	r3, ip
   1a854:	bge	1a8b4 <__mempcpy_chk@plt+0x92d4>
   1a858:	ldr	r1, [r1, #4]
   1a85c:	ldrb	r1, [r1, r3]
   1a860:	cmp	r1, #61	; 0x3d
   1a864:	strb	r1, [r0]
   1a868:	beq	1a8d4 <__mempcpy_chk@plt+0x92f4>
   1a86c:	cmp	r1, #58	; 0x3a
   1a870:	beq	1a8dc <__mempcpy_chk@plt+0x92fc>
   1a874:	cmp	r1, #46	; 0x2e
   1a878:	bne	1a8bc <__mempcpy_chk@plt+0x92dc>
   1a87c:	mov	r1, #26
   1a880:	b	1a8e8 <__mempcpy_chk@plt+0x9308>
   1a884:	cmp	lr, #93	; 0x5d
   1a888:	beq	1a8a4 <__mempcpy_chk@plt+0x92c4>
   1a88c:	cmp	lr, #94	; 0x5e
   1a890:	bne	1a8c4 <__mempcpy_chk@plt+0x92e4>
   1a894:	mov	r1, #25
   1a898:	b	1a8a8 <__mempcpy_chk@plt+0x92c8>
   1a89c:	mov	r1, #22
   1a8a0:	b	1a8a8 <__mempcpy_chk@plt+0x92c8>
   1a8a4:	mov	r1, #21
   1a8a8:	strb	r1, [r0, #4]
   1a8ac:	mov	r1, #1
   1a8b0:	b	1a8cc <__mempcpy_chk@plt+0x92ec>
   1a8b4:	mov	r1, #0
   1a8b8:	strb	r1, [r0]
   1a8bc:	mov	r1, #91	; 0x5b
   1a8c0:	strb	r1, [r0]
   1a8c4:	mov	r1, #1
   1a8c8:	strb	r1, [r0, #4]
   1a8cc:	mov	r0, r1
   1a8d0:	pop	{fp, pc}
   1a8d4:	mov	r1, #28
   1a8d8:	b	1a8e8 <__mempcpy_chk@plt+0x9308>
   1a8dc:	tst	r2, #4
   1a8e0:	beq	1a8bc <__mempcpy_chk@plt+0x92dc>
   1a8e4:	mov	r1, #30
   1a8e8:	strb	r1, [r0, #4]
   1a8ec:	mov	r1, #2
   1a8f0:	b	1a8cc <__mempcpy_chk@plt+0x92ec>
   1a8f4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a8f8:	add	fp, sp, #24
   1a8fc:	sub	sp, sp, #8
   1a900:	mov	r5, r2
   1a904:	ldr	r2, [r1, #80]	; 0x50
   1a908:	mov	r9, r0
   1a90c:	ldr	r0, [r1, #40]	; 0x28
   1a910:	cmp	r2, #1
   1a914:	beq	1a980 <__mempcpy_chk@plt+0x93a0>
   1a918:	ldr	r4, [r1, #28]
   1a91c:	add	r2, r0, #1
   1a920:	cmp	r2, r4
   1a924:	bge	1a980 <__mempcpy_chk@plt+0x93a0>
   1a928:	ldr	ip, [r1, #8]
   1a92c:	mov	r2, #1
   1a930:	add	r6, ip, r0, lsl #2
   1a934:	ldr	r7, [r6, r2, lsl #2]
   1a938:	cmn	r7, #1
   1a93c:	bne	1a954 <__mempcpy_chk@plt+0x9374>
   1a940:	add	r2, r2, #1
   1a944:	add	r7, r0, r2
   1a948:	cmp	r7, r4
   1a94c:	blt	1a934 <__mempcpy_chk@plt+0x9354>
   1a950:	b	1a95c <__mempcpy_chk@plt+0x937c>
   1a954:	cmp	r2, #2
   1a958:	bcc	1a980 <__mempcpy_chk@plt+0x93a0>
   1a95c:	mov	r3, #1
   1a960:	str	r3, [r9]
   1a964:	ldr	r0, [ip, r0, lsl #2]
   1a968:	str	r0, [r9, #4]
   1a96c:	ldr	r0, [r1, #40]	; 0x28
   1a970:	add	r0, r0, r2
   1a974:	str	r0, [r1, #40]	; 0x28
   1a978:	mov	r0, #0
   1a97c:	b	1aba4 <__mempcpy_chk@plt+0x95c4>
   1a980:	add	r2, r0, r3
   1a984:	str	r2, [r1, #40]	; 0x28
   1a988:	ldrb	r6, [r5, #4]
   1a98c:	sub	r0, r6, #22
   1a990:	cmp	r0, #8
   1a994:	bhi	1ab94 <__mempcpy_chk@plt+0x95b4>
   1a998:	add	r3, pc, #0
   1a99c:	ldr	pc, [r3, r0, lsl #2]
   1a9a0:	andeq	sl, r1, ip, ror #22
   1a9a4:	muleq	r1, r4, fp
   1a9a8:	muleq	r1, r4, fp
   1a9ac:	muleq	r1, r4, fp
   1a9b0:	andeq	sl, r1, r4, asr #19
   1a9b4:	muleq	r1, r4, fp
   1a9b8:	andeq	sl, r1, r4, asr #19
   1a9bc:	muleq	r1, r4, fp
   1a9c0:	andeq	sl, r1, r4, asr #19
   1a9c4:	ldr	r3, [r1, #56]	; 0x38
   1a9c8:	mov	r0, #7
   1a9cc:	cmp	r3, r2
   1a9d0:	ble	1aba4 <__mempcpy_chk@plt+0x95c4>
   1a9d4:	ldrb	r3, [r5]
   1a9d8:	mov	r2, #0
   1a9dc:	uxtb	r7, r6
   1a9e0:	cmp	r7, #30
   1a9e4:	bne	1a9f4 <__mempcpy_chk@plt+0x9414>
   1a9e8:	ldrb	r7, [r1, #75]	; 0x4b
   1a9ec:	cmp	r7, #0
   1a9f0:	bne	1aa4c <__mempcpy_chk@plt+0x946c>
   1a9f4:	ldr	r4, [r1, #40]	; 0x28
   1a9f8:	ldr	r7, [r1, #4]
   1a9fc:	add	r6, r4, #1
   1aa00:	str	r6, [r1, #40]	; 0x28
   1aa04:	ldrb	r4, [r7, r4]
   1aa08:	ldr	r7, [r1, #56]	; 0x38
   1aa0c:	cmp	r7, r6
   1aa10:	ble	1aba4 <__mempcpy_chk@plt+0x95c4>
   1aa14:	uxtb	r7, r4
   1aa18:	cmp	r7, r3
   1aa1c:	bne	1aa30 <__mempcpy_chk@plt+0x9450>
   1aa20:	ldr	r7, [r1, #4]
   1aa24:	ldrb	r7, [r7, r6]
   1aa28:	cmp	r7, #93	; 0x5d
   1aa2c:	beq	1ab20 <__mempcpy_chk@plt+0x9540>
   1aa30:	ldr	r7, [r9, #4]
   1aa34:	cmp	r2, #30
   1aa38:	strb	r4, [r7, r2]
   1aa3c:	bhi	1aba4 <__mempcpy_chk@plt+0x95c4>
   1aa40:	ldrb	r6, [r5, #4]
   1aa44:	add	r2, r2, #1
   1aa48:	b	1a9dc <__mempcpy_chk@plt+0x93fc>
   1aa4c:	ldrb	r7, [r1, #76]	; 0x4c
   1aa50:	cmp	r7, #0
   1aa54:	beq	1aaec <__mempcpy_chk@plt+0x950c>
   1aa58:	ldr	lr, [r1, #28]
   1aa5c:	ldr	ip, [r1, #40]	; 0x28
   1aa60:	cmp	ip, lr
   1aa64:	beq	1aa78 <__mempcpy_chk@plt+0x9498>
   1aa68:	ldr	r4, [r1, #8]
   1aa6c:	ldr	r4, [r4, ip, lsl #2]
   1aa70:	cmn	r4, #1
   1aa74:	beq	1ab0c <__mempcpy_chk@plt+0x952c>
   1aa78:	ldr	r6, [r1, #12]
   1aa7c:	ldr	r7, [r1, #24]
   1aa80:	ldr	r4, [r1]
   1aa84:	ldr	r6, [r6, ip, lsl #2]
   1aa88:	add	r6, r7, r6
   1aa8c:	add	r4, r4, r6
   1aa90:	ldrsb	r4, [r4]
   1aa94:	cmn	r4, #1
   1aa98:	ble	1ab0c <__mempcpy_chk@plt+0x952c>
   1aa9c:	ldr	r7, [r1, #80]	; 0x50
   1aaa0:	mov	r6, #1
   1aaa4:	cmp	r7, #1
   1aaa8:	beq	1aae0 <__mempcpy_chk@plt+0x9500>
   1aaac:	add	r7, ip, #1
   1aab0:	cmp	r7, lr
   1aab4:	bge	1aae0 <__mempcpy_chk@plt+0x9500>
   1aab8:	ldr	r6, [r1, #8]
   1aabc:	add	r8, r6, ip, lsl #2
   1aac0:	mov	r6, #1
   1aac4:	ldr	r7, [r8, r6, lsl #2]
   1aac8:	cmn	r7, #1
   1aacc:	bne	1aae0 <__mempcpy_chk@plt+0x9500>
   1aad0:	add	r6, r6, #1
   1aad4:	add	r7, ip, r6
   1aad8:	cmp	r7, lr
   1aadc:	blt	1aac4 <__mempcpy_chk@plt+0x94e4>
   1aae0:	add	r6, r6, ip
   1aae4:	str	r6, [r1, #40]	; 0x28
   1aae8:	b	1aa08 <__mempcpy_chk@plt+0x9428>
   1aaec:	ldr	r7, [r1, #40]	; 0x28
   1aaf0:	ldr	r4, [r1, #24]
   1aaf4:	ldr	ip, [r1]
   1aaf8:	add	r6, r7, #1
   1aafc:	add	r7, r7, r4
   1ab00:	str	r6, [r1, #40]	; 0x28
   1ab04:	ldrb	r4, [ip, r7]
   1ab08:	b	1aa08 <__mempcpy_chk@plt+0x9428>
   1ab0c:	add	r6, ip, #1
   1ab10:	str	r6, [r1, #40]	; 0x28
   1ab14:	ldr	r7, [r1, #4]
   1ab18:	ldrb	r4, [r7, ip]
   1ab1c:	b	1aa08 <__mempcpy_chk@plt+0x9428>
   1ab20:	add	r0, r6, #1
   1ab24:	str	r0, [r1, #40]	; 0x28
   1ab28:	mov	r0, #0
   1ab2c:	ldr	r1, [r9, #4]
   1ab30:	strb	r0, [r1, r2]
   1ab34:	ldrb	r1, [r5, #4]
   1ab38:	cmp	r1, #30
   1ab3c:	beq	1ab58 <__mempcpy_chk@plt+0x9578>
   1ab40:	cmp	r1, #28
   1ab44:	beq	1ab60 <__mempcpy_chk@plt+0x9580>
   1ab48:	cmp	r1, #26
   1ab4c:	moveq	r1, #3
   1ab50:	streq	r1, [r9]
   1ab54:	b	1aba4 <__mempcpy_chk@plt+0x95c4>
   1ab58:	mov	r1, #4
   1ab5c:	b	1ab64 <__mempcpy_chk@plt+0x9584>
   1ab60:	mov	r1, #2
   1ab64:	str	r1, [r9]
   1ab68:	b	1aba4 <__mempcpy_chk@plt+0x95c4>
   1ab6c:	ldr	r0, [fp, #12]
   1ab70:	cmp	r0, #0
   1ab74:	bne	1ab94 <__mempcpy_chk@plt+0x95b4>
   1ab78:	ldr	r2, [fp, #8]
   1ab7c:	mov	r0, sp
   1ab80:	bl	1a78c <__mempcpy_chk@plt+0x91ac>
   1ab84:	ldrb	r1, [sp, #4]
   1ab88:	mov	r0, #11
   1ab8c:	cmp	r1, #21
   1ab90:	bne	1aba4 <__mempcpy_chk@plt+0x95c4>
   1ab94:	mov	r0, #0
   1ab98:	str	r0, [r9]
   1ab9c:	ldrb	r1, [r5]
   1aba0:	strb	r1, [r9, #4]
   1aba4:	sub	sp, fp, #24
   1aba8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1abac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1abb0:	add	fp, sp, #24
   1abb4:	mov	r8, r0
   1abb8:	ldrb	r0, [fp, #14]
   1abbc:	ldr	r6, [fp, #8]
   1abc0:	mov	r5, r3
   1abc4:	mov	r7, r2
   1abc8:	mov	r4, r1
   1abcc:	tst	r0, #64	; 0x40
   1abd0:	beq	1ac0c <__mempcpy_chk@plt+0x962c>
   1abd4:	movw	r1, #11962	; 0x2eba
   1abd8:	mov	r0, r6
   1abdc:	movt	r1, #2
   1abe0:	bl	112ec <strcmp@plt>
   1abe4:	cmp	r0, #0
   1abe8:	beq	1ac04 <__mempcpy_chk@plt+0x9624>
   1abec:	movw	r1, #11968	; 0x2ec0
   1abf0:	mov	r0, r6
   1abf4:	movt	r1, #2
   1abf8:	bl	112ec <strcmp@plt>
   1abfc:	cmp	r0, #0
   1ac00:	bne	1ac0c <__mempcpy_chk@plt+0x962c>
   1ac04:	movw	r6, #11974	; 0x2ec6
   1ac08:	movt	r6, #2
   1ac0c:	ldr	r0, [r5]
   1ac10:	ldr	r1, [r7, #36]	; 0x24
   1ac14:	cmp	r0, r1
   1ac18:	beq	1b10c <__mempcpy_chk@plt+0x9b2c>
   1ac1c:	mov	r0, r6
   1ac20:	bl	112bc <wctype@plt>
   1ac24:	ldr	r2, [r7, #36]	; 0x24
   1ac28:	ldr	r1, [r7, #12]
   1ac2c:	add	r3, r2, #1
   1ac30:	str	r3, [r7, #36]	; 0x24
   1ac34:	str	r0, [r1, r2, lsl #2]
   1ac38:	movw	r1, #11950	; 0x2eae
   1ac3c:	mov	r0, r6
   1ac40:	movt	r1, #2
   1ac44:	bl	112ec <strcmp@plt>
   1ac48:	cmp	r0, #0
   1ac4c:	beq	1adb0 <__mempcpy_chk@plt+0x97d0>
   1ac50:	movw	r1, #11980	; 0x2ecc
   1ac54:	mov	r0, r6
   1ac58:	movt	r1, #2
   1ac5c:	bl	112ec <strcmp@plt>
   1ac60:	cmp	r0, #0
   1ac64:	beq	1adfc <__mempcpy_chk@plt+0x981c>
   1ac68:	movw	r1, #11968	; 0x2ec0
   1ac6c:	mov	r0, r6
   1ac70:	movt	r1, #2
   1ac74:	bl	112ec <strcmp@plt>
   1ac78:	cmp	r0, #0
   1ac7c:	beq	1ae48 <__mempcpy_chk@plt+0x9868>
   1ac80:	movw	r1, #11956	; 0x2eb4
   1ac84:	mov	r0, r6
   1ac88:	movt	r1, #2
   1ac8c:	bl	112ec <strcmp@plt>
   1ac90:	cmp	r0, #0
   1ac94:	beq	1ae94 <__mempcpy_chk@plt+0x98b4>
   1ac98:	movw	r1, #11974	; 0x2ec6
   1ac9c:	mov	r0, r6
   1aca0:	movt	r1, #2
   1aca4:	bl	112ec <strcmp@plt>
   1aca8:	cmp	r0, #0
   1acac:	beq	1aee0 <__mempcpy_chk@plt+0x9900>
   1acb0:	movw	r1, #12011	; 0x2eeb
   1acb4:	mov	r0, r6
   1acb8:	movt	r1, #2
   1acbc:	bl	112ec <strcmp@plt>
   1acc0:	cmp	r0, #0
   1acc4:	beq	1af2c <__mempcpy_chk@plt+0x994c>
   1acc8:	movw	r1, #11986	; 0x2ed2
   1accc:	mov	r0, r6
   1acd0:	movt	r1, #2
   1acd4:	bl	112ec <strcmp@plt>
   1acd8:	cmp	r0, #0
   1acdc:	beq	1af7c <__mempcpy_chk@plt+0x999c>
   1ace0:	movw	r1, #11962	; 0x2eba
   1ace4:	mov	r0, r6
   1ace8:	movt	r1, #2
   1acec:	bl	112ec <strcmp@plt>
   1acf0:	cmp	r0, #0
   1acf4:	beq	1afcc <__mempcpy_chk@plt+0x99ec>
   1acf8:	movw	r1, #11992	; 0x2ed8
   1acfc:	mov	r0, r6
   1ad00:	movt	r1, #2
   1ad04:	bl	112ec <strcmp@plt>
   1ad08:	cmp	r0, #0
   1ad0c:	beq	1b01c <__mempcpy_chk@plt+0x9a3c>
   1ad10:	movw	r1, #11998	; 0x2ede
   1ad14:	mov	r0, r6
   1ad18:	movt	r1, #2
   1ad1c:	bl	112ec <strcmp@plt>
   1ad20:	cmp	r0, #0
   1ad24:	beq	1b06c <__mempcpy_chk@plt+0x9a8c>
   1ad28:	movw	r1, #12004	; 0x2ee4
   1ad2c:	mov	r0, r6
   1ad30:	movt	r1, #2
   1ad34:	bl	112ec <strcmp@plt>
   1ad38:	cmp	r0, #0
   1ad3c:	beq	1b0bc <__mempcpy_chk@plt+0x9adc>
   1ad40:	movw	r1, #12010	; 0x2eea
   1ad44:	mov	r0, r6
   1ad48:	movt	r1, #2
   1ad4c:	bl	112ec <strcmp@plt>
   1ad50:	mov	r1, r0
   1ad54:	mov	r0, #4
   1ad58:	cmp	r1, #0
   1ad5c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ad60:	bl	114a8 <__ctype_b_loc@plt>
   1ad64:	ldr	r1, [r0]
   1ad68:	mov	r2, #0
   1ad6c:	mov	r3, #1
   1ad70:	cmp	r8, #0
   1ad74:	bne	1b274 <__mempcpy_chk@plt+0x9c94>
   1ad78:	ldrb	r0, [r1, #1]
   1ad7c:	tst	r0, #16
   1ad80:	beq	1ad98 <__mempcpy_chk@plt+0x97b8>
   1ad84:	ubfx	r0, r2, #5, #3
   1ad88:	and	r6, r2, #31
   1ad8c:	ldr	r7, [r4, r0, lsl #2]
   1ad90:	orr	r7, r7, r3, lsl r6
   1ad94:	str	r7, [r4, r0, lsl #2]
   1ad98:	add	r2, r2, #1
   1ad9c:	add	r1, r1, #2
   1ada0:	mov	r0, #0
   1ada4:	cmp	r2, #256	; 0x100
   1ada8:	bne	1ad78 <__mempcpy_chk@plt+0x9798>
   1adac:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1adb0:	bl	114a8 <__ctype_b_loc@plt>
   1adb4:	ldr	r1, [r0]
   1adb8:	cmp	r8, #0
   1adbc:	bne	1b1b0 <__mempcpy_chk@plt+0x9bd0>
   1adc0:	mov	r0, #0
   1adc4:	mov	r2, #1
   1adc8:	ldrb	r3, [r1]
   1adcc:	tst	r3, #8
   1add0:	beq	1ade8 <__mempcpy_chk@plt+0x9808>
   1add4:	ubfx	r3, r0, #5, #3
   1add8:	and	r6, r0, #31
   1addc:	ldr	r7, [r4, r3, lsl #2]
   1ade0:	orr	r7, r7, r2, lsl r6
   1ade4:	str	r7, [r4, r3, lsl #2]
   1ade8:	add	r0, r0, #1
   1adec:	add	r1, r1, #2
   1adf0:	cmp	r0, #256	; 0x100
   1adf4:	bne	1adc8 <__mempcpy_chk@plt+0x97e8>
   1adf8:	b	1af74 <__mempcpy_chk@plt+0x9994>
   1adfc:	bl	114a8 <__ctype_b_loc@plt>
   1ae00:	ldr	r1, [r0]
   1ae04:	cmp	r8, #0
   1ae08:	bne	1b230 <__mempcpy_chk@plt+0x9c50>
   1ae0c:	mov	r0, #0
   1ae10:	mov	r2, #1
   1ae14:	ldrb	r3, [r1]
   1ae18:	tst	r3, #2
   1ae1c:	beq	1ae34 <__mempcpy_chk@plt+0x9854>
   1ae20:	ubfx	r3, r0, #5, #3
   1ae24:	and	r6, r0, #31
   1ae28:	ldr	r7, [r4, r3, lsl #2]
   1ae2c:	orr	r7, r7, r2, lsl r6
   1ae30:	str	r7, [r4, r3, lsl #2]
   1ae34:	add	r0, r0, #1
   1ae38:	add	r1, r1, #2
   1ae3c:	cmp	r0, #256	; 0x100
   1ae40:	bne	1ae14 <__mempcpy_chk@plt+0x9834>
   1ae44:	b	1af74 <__mempcpy_chk@plt+0x9994>
   1ae48:	bl	114a8 <__ctype_b_loc@plt>
   1ae4c:	ldr	r1, [r0]
   1ae50:	cmp	r8, #0
   1ae54:	bne	1b2ec <__mempcpy_chk@plt+0x9d0c>
   1ae58:	mov	r0, #0
   1ae5c:	mov	r2, #1
   1ae60:	ldrb	r3, [r1, #1]
   1ae64:	tst	r3, #2
   1ae68:	beq	1ae80 <__mempcpy_chk@plt+0x98a0>
   1ae6c:	ubfx	r3, r0, #5, #3
   1ae70:	and	r6, r0, #31
   1ae74:	ldr	r7, [r4, r3, lsl #2]
   1ae78:	orr	r7, r7, r2, lsl r6
   1ae7c:	str	r7, [r4, r3, lsl #2]
   1ae80:	add	r0, r0, #1
   1ae84:	add	r1, r1, #2
   1ae88:	cmp	r0, #256	; 0x100
   1ae8c:	bne	1ae60 <__mempcpy_chk@plt+0x9880>
   1ae90:	b	1af74 <__mempcpy_chk@plt+0x9994>
   1ae94:	bl	114a8 <__ctype_b_loc@plt>
   1ae98:	ldr	r1, [r0]
   1ae9c:	cmp	r8, #0
   1aea0:	bne	1b36c <__mempcpy_chk@plt+0x9d8c>
   1aea4:	mov	r0, #0
   1aea8:	mov	r2, #1
   1aeac:	ldrb	r3, [r1, #1]
   1aeb0:	tst	r3, #32
   1aeb4:	beq	1aecc <__mempcpy_chk@plt+0x98ec>
   1aeb8:	ubfx	r3, r0, #5, #3
   1aebc:	and	r6, r0, #31
   1aec0:	ldr	r7, [r4, r3, lsl #2]
   1aec4:	orr	r7, r7, r2, lsl r6
   1aec8:	str	r7, [r4, r3, lsl #2]
   1aecc:	add	r0, r0, #1
   1aed0:	add	r1, r1, #2
   1aed4:	cmp	r0, #256	; 0x100
   1aed8:	bne	1aeac <__mempcpy_chk@plt+0x98cc>
   1aedc:	b	1af74 <__mempcpy_chk@plt+0x9994>
   1aee0:	bl	114a8 <__ctype_b_loc@plt>
   1aee4:	ldr	r1, [r0]
   1aee8:	cmp	r8, #0
   1aeec:	bne	1b3b0 <__mempcpy_chk@plt+0x9dd0>
   1aef0:	mov	r0, #0
   1aef4:	mov	r2, #1
   1aef8:	ldrb	r3, [r1, #1]
   1aefc:	tst	r3, #4
   1af00:	beq	1af18 <__mempcpy_chk@plt+0x9938>
   1af04:	ubfx	r3, r0, #5, #3
   1af08:	and	r6, r0, #31
   1af0c:	ldr	r7, [r4, r3, lsl #2]
   1af10:	orr	r7, r7, r2, lsl r6
   1af14:	str	r7, [r4, r3, lsl #2]
   1af18:	add	r0, r0, #1
   1af1c:	add	r1, r1, #2
   1af20:	cmp	r0, #256	; 0x100
   1af24:	bne	1aef8 <__mempcpy_chk@plt+0x9918>
   1af28:	b	1af74 <__mempcpy_chk@plt+0x9994>
   1af2c:	bl	114a8 <__ctype_b_loc@plt>
   1af30:	ldr	r1, [r0]
   1af34:	cmp	r8, #0
   1af38:	bne	1b3f4 <__mempcpy_chk@plt+0x9e14>
   1af3c:	mov	r0, #0
   1af40:	mov	r2, #1
   1af44:	ldrb	r3, [r1, #1]
   1af48:	tst	r3, #8
   1af4c:	beq	1af64 <__mempcpy_chk@plt+0x9984>
   1af50:	ubfx	r3, r0, #5, #3
   1af54:	and	r6, r0, #31
   1af58:	ldr	r7, [r4, r3, lsl #2]
   1af5c:	orr	r7, r7, r2, lsl r6
   1af60:	str	r7, [r4, r3, lsl #2]
   1af64:	add	r0, r0, #1
   1af68:	add	r1, r1, #2
   1af6c:	cmp	r0, #256	; 0x100
   1af70:	bne	1af44 <__mempcpy_chk@plt+0x9964>
   1af74:	mov	r0, #0
   1af78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1af7c:	bl	114a8 <__ctype_b_loc@plt>
   1af80:	ldr	r1, [r0]
   1af84:	mov	r2, #0
   1af88:	mov	r3, #1
   1af8c:	cmp	r8, #0
   1af90:	bne	1b138 <__mempcpy_chk@plt+0x9b58>
   1af94:	ldrb	r0, [r1, #1]
   1af98:	tst	r0, #64	; 0x40
   1af9c:	beq	1afb4 <__mempcpy_chk@plt+0x99d4>
   1afa0:	ubfx	r0, r2, #5, #3
   1afa4:	and	r6, r2, #31
   1afa8:	ldr	r7, [r4, r0, lsl #2]
   1afac:	orr	r7, r7, r3, lsl r6
   1afb0:	str	r7, [r4, r0, lsl #2]
   1afb4:	add	r2, r2, #1
   1afb8:	add	r1, r1, #2
   1afbc:	mov	r0, #0
   1afc0:	cmp	r2, #256	; 0x100
   1afc4:	bne	1af94 <__mempcpy_chk@plt+0x99b4>
   1afc8:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1afcc:	bl	114a8 <__ctype_b_loc@plt>
   1afd0:	ldr	r1, [r0]
   1afd4:	mov	r2, #0
   1afd8:	mov	r3, #1
   1afdc:	cmp	r8, #0
   1afe0:	bne	1b174 <__mempcpy_chk@plt+0x9b94>
   1afe4:	ldrb	r0, [r1, #1]
   1afe8:	tst	r0, #1
   1afec:	beq	1b004 <__mempcpy_chk@plt+0x9a24>
   1aff0:	ubfx	r0, r2, #5, #3
   1aff4:	and	r6, r2, #31
   1aff8:	ldr	r7, [r4, r0, lsl #2]
   1affc:	orr	r7, r7, r3, lsl r6
   1b000:	str	r7, [r4, r0, lsl #2]
   1b004:	add	r2, r2, #1
   1b008:	add	r1, r1, #2
   1b00c:	mov	r0, #0
   1b010:	cmp	r2, #256	; 0x100
   1b014:	bne	1afe4 <__mempcpy_chk@plt+0x9a04>
   1b018:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b01c:	bl	114a8 <__ctype_b_loc@plt>
   1b020:	ldr	r1, [r0]
   1b024:	mov	r2, #0
   1b028:	mov	r3, #1
   1b02c:	cmp	r8, #0
   1b030:	bne	1b1f4 <__mempcpy_chk@plt+0x9c14>
   1b034:	ldrb	r0, [r1]
   1b038:	tst	r0, #1
   1b03c:	beq	1b054 <__mempcpy_chk@plt+0x9a74>
   1b040:	ubfx	r0, r2, #5, #3
   1b044:	and	r6, r2, #31
   1b048:	ldr	r7, [r4, r0, lsl #2]
   1b04c:	orr	r7, r7, r3, lsl r6
   1b050:	str	r7, [r4, r0, lsl #2]
   1b054:	add	r2, r2, #1
   1b058:	add	r1, r1, #2
   1b05c:	mov	r0, #0
   1b060:	cmp	r2, #256	; 0x100
   1b064:	bne	1b034 <__mempcpy_chk@plt+0x9a54>
   1b068:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b06c:	bl	114a8 <__ctype_b_loc@plt>
   1b070:	ldr	r1, [r0]
   1b074:	mov	r2, #0
   1b078:	mov	r3, #1
   1b07c:	cmp	r8, #0
   1b080:	bne	1b2b0 <__mempcpy_chk@plt+0x9cd0>
   1b084:	ldrsh	r0, [r1]
   1b088:	cmn	r0, #1
   1b08c:	bgt	1b0a4 <__mempcpy_chk@plt+0x9ac4>
   1b090:	ubfx	r0, r2, #5, #3
   1b094:	and	r6, r2, #31
   1b098:	ldr	r7, [r4, r0, lsl #2]
   1b09c:	orr	r7, r7, r3, lsl r6
   1b0a0:	str	r7, [r4, r0, lsl #2]
   1b0a4:	add	r2, r2, #1
   1b0a8:	add	r1, r1, #2
   1b0ac:	mov	r0, #0
   1b0b0:	cmp	r2, #256	; 0x100
   1b0b4:	bne	1b084 <__mempcpy_chk@plt+0x9aa4>
   1b0b8:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b0bc:	bl	114a8 <__ctype_b_loc@plt>
   1b0c0:	ldr	r1, [r0]
   1b0c4:	mov	r2, #0
   1b0c8:	mov	r3, #1
   1b0cc:	cmp	r8, #0
   1b0d0:	bne	1b330 <__mempcpy_chk@plt+0x9d50>
   1b0d4:	ldrb	r0, [r1]
   1b0d8:	tst	r0, #4
   1b0dc:	beq	1b0f4 <__mempcpy_chk@plt+0x9b14>
   1b0e0:	ubfx	r0, r2, #5, #3
   1b0e4:	and	r6, r2, #31
   1b0e8:	ldr	r7, [r4, r0, lsl #2]
   1b0ec:	orr	r7, r7, r3, lsl r6
   1b0f0:	str	r7, [r4, r0, lsl #2]
   1b0f4:	add	r2, r2, #1
   1b0f8:	add	r1, r1, #2
   1b0fc:	mov	r0, #0
   1b100:	cmp	r2, #256	; 0x100
   1b104:	bne	1b0d4 <__mempcpy_chk@plt+0x9af4>
   1b108:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b10c:	mov	r1, #1
   1b110:	orr	r9, r1, r0, lsl #1
   1b114:	ldr	r0, [r7, #12]
   1b118:	lsl	r1, r9, #2
   1b11c:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1b120:	cmp	r0, #0
   1b124:	moveq	r0, #12
   1b128:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b12c:	str	r0, [r7, #12]
   1b130:	str	r9, [r5]
   1b134:	b	1ac1c <__mempcpy_chk@plt+0x963c>
   1b138:	ldrb	r0, [r1, #1]
   1b13c:	tst	r0, #64	; 0x40
   1b140:	beq	1b15c <__mempcpy_chk@plt+0x9b7c>
   1b144:	ldrb	r0, [r8, r2]
   1b148:	ubfx	r7, r0, #5, #3
   1b14c:	and	r0, r0, #31
   1b150:	ldr	r6, [r4, r7, lsl #2]
   1b154:	orr	r0, r6, r3, lsl r0
   1b158:	str	r0, [r4, r7, lsl #2]
   1b15c:	add	r2, r2, #1
   1b160:	add	r1, r1, #2
   1b164:	mov	r0, #0
   1b168:	cmp	r2, #256	; 0x100
   1b16c:	bne	1b138 <__mempcpy_chk@plt+0x9b58>
   1b170:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b174:	ldrb	r0, [r1, #1]
   1b178:	tst	r0, #1
   1b17c:	beq	1b198 <__mempcpy_chk@plt+0x9bb8>
   1b180:	ldrb	r0, [r8, r2]
   1b184:	ubfx	r7, r0, #5, #3
   1b188:	and	r0, r0, #31
   1b18c:	ldr	r6, [r4, r7, lsl #2]
   1b190:	orr	r0, r6, r3, lsl r0
   1b194:	str	r0, [r4, r7, lsl #2]
   1b198:	add	r2, r2, #1
   1b19c:	add	r1, r1, #2
   1b1a0:	mov	r0, #0
   1b1a4:	cmp	r2, #256	; 0x100
   1b1a8:	bne	1b174 <__mempcpy_chk@plt+0x9b94>
   1b1ac:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b1b0:	mov	r2, #0
   1b1b4:	mov	r3, #1
   1b1b8:	ldrb	r0, [r1]
   1b1bc:	tst	r0, #8
   1b1c0:	beq	1b1dc <__mempcpy_chk@plt+0x9bfc>
   1b1c4:	ldrb	r0, [r8, r2]
   1b1c8:	ubfx	r7, r0, #5, #3
   1b1cc:	and	r0, r0, #31
   1b1d0:	ldr	r6, [r4, r7, lsl #2]
   1b1d4:	orr	r0, r6, r3, lsl r0
   1b1d8:	str	r0, [r4, r7, lsl #2]
   1b1dc:	add	r2, r2, #1
   1b1e0:	add	r1, r1, #2
   1b1e4:	mov	r0, #0
   1b1e8:	cmp	r2, #256	; 0x100
   1b1ec:	bne	1b1b8 <__mempcpy_chk@plt+0x9bd8>
   1b1f0:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b1f4:	ldrb	r0, [r1]
   1b1f8:	tst	r0, #1
   1b1fc:	beq	1b218 <__mempcpy_chk@plt+0x9c38>
   1b200:	ldrb	r0, [r8, r2]
   1b204:	ubfx	r7, r0, #5, #3
   1b208:	and	r0, r0, #31
   1b20c:	ldr	r6, [r4, r7, lsl #2]
   1b210:	orr	r0, r6, r3, lsl r0
   1b214:	str	r0, [r4, r7, lsl #2]
   1b218:	add	r2, r2, #1
   1b21c:	add	r1, r1, #2
   1b220:	mov	r0, #0
   1b224:	cmp	r2, #256	; 0x100
   1b228:	bne	1b1f4 <__mempcpy_chk@plt+0x9c14>
   1b22c:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b230:	mov	r2, #0
   1b234:	mov	r3, #1
   1b238:	ldrb	r0, [r1]
   1b23c:	tst	r0, #2
   1b240:	beq	1b25c <__mempcpy_chk@plt+0x9c7c>
   1b244:	ldrb	r0, [r8, r2]
   1b248:	ubfx	r7, r0, #5, #3
   1b24c:	and	r0, r0, #31
   1b250:	ldr	r6, [r4, r7, lsl #2]
   1b254:	orr	r0, r6, r3, lsl r0
   1b258:	str	r0, [r4, r7, lsl #2]
   1b25c:	add	r2, r2, #1
   1b260:	add	r1, r1, #2
   1b264:	mov	r0, #0
   1b268:	cmp	r2, #256	; 0x100
   1b26c:	bne	1b238 <__mempcpy_chk@plt+0x9c58>
   1b270:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b274:	ldrb	r0, [r1, #1]
   1b278:	tst	r0, #16
   1b27c:	beq	1b298 <__mempcpy_chk@plt+0x9cb8>
   1b280:	ldrb	r0, [r8, r2]
   1b284:	ubfx	r7, r0, #5, #3
   1b288:	and	r0, r0, #31
   1b28c:	ldr	r6, [r4, r7, lsl #2]
   1b290:	orr	r0, r6, r3, lsl r0
   1b294:	str	r0, [r4, r7, lsl #2]
   1b298:	add	r2, r2, #1
   1b29c:	add	r1, r1, #2
   1b2a0:	mov	r0, #0
   1b2a4:	cmp	r2, #256	; 0x100
   1b2a8:	bne	1b274 <__mempcpy_chk@plt+0x9c94>
   1b2ac:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b2b0:	ldrsh	r0, [r1]
   1b2b4:	cmn	r0, #1
   1b2b8:	bgt	1b2d4 <__mempcpy_chk@plt+0x9cf4>
   1b2bc:	ldrb	r0, [r8, r2]
   1b2c0:	ubfx	r7, r0, #5, #3
   1b2c4:	and	r0, r0, #31
   1b2c8:	ldr	r6, [r4, r7, lsl #2]
   1b2cc:	orr	r0, r6, r3, lsl r0
   1b2d0:	str	r0, [r4, r7, lsl #2]
   1b2d4:	add	r2, r2, #1
   1b2d8:	add	r1, r1, #2
   1b2dc:	mov	r0, #0
   1b2e0:	cmp	r2, #256	; 0x100
   1b2e4:	bne	1b2b0 <__mempcpy_chk@plt+0x9cd0>
   1b2e8:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b2ec:	mov	r2, #0
   1b2f0:	mov	r3, #1
   1b2f4:	ldrb	r0, [r1, #1]
   1b2f8:	tst	r0, #2
   1b2fc:	beq	1b318 <__mempcpy_chk@plt+0x9d38>
   1b300:	ldrb	r0, [r8, r2]
   1b304:	ubfx	r7, r0, #5, #3
   1b308:	and	r0, r0, #31
   1b30c:	ldr	r6, [r4, r7, lsl #2]
   1b310:	orr	r0, r6, r3, lsl r0
   1b314:	str	r0, [r4, r7, lsl #2]
   1b318:	add	r2, r2, #1
   1b31c:	add	r1, r1, #2
   1b320:	mov	r0, #0
   1b324:	cmp	r2, #256	; 0x100
   1b328:	bne	1b2f4 <__mempcpy_chk@plt+0x9d14>
   1b32c:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b330:	ldrb	r0, [r1]
   1b334:	tst	r0, #4
   1b338:	beq	1b354 <__mempcpy_chk@plt+0x9d74>
   1b33c:	ldrb	r0, [r8, r2]
   1b340:	ubfx	r7, r0, #5, #3
   1b344:	and	r0, r0, #31
   1b348:	ldr	r6, [r4, r7, lsl #2]
   1b34c:	orr	r0, r6, r3, lsl r0
   1b350:	str	r0, [r4, r7, lsl #2]
   1b354:	add	r2, r2, #1
   1b358:	add	r1, r1, #2
   1b35c:	mov	r0, #0
   1b360:	cmp	r2, #256	; 0x100
   1b364:	bne	1b330 <__mempcpy_chk@plt+0x9d50>
   1b368:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b36c:	mov	r2, #0
   1b370:	mov	r3, #1
   1b374:	ldrb	r0, [r1, #1]
   1b378:	tst	r0, #32
   1b37c:	beq	1b398 <__mempcpy_chk@plt+0x9db8>
   1b380:	ldrb	r0, [r8, r2]
   1b384:	ubfx	r7, r0, #5, #3
   1b388:	and	r0, r0, #31
   1b38c:	ldr	r6, [r4, r7, lsl #2]
   1b390:	orr	r0, r6, r3, lsl r0
   1b394:	str	r0, [r4, r7, lsl #2]
   1b398:	add	r2, r2, #1
   1b39c:	add	r1, r1, #2
   1b3a0:	mov	r0, #0
   1b3a4:	cmp	r2, #256	; 0x100
   1b3a8:	bne	1b374 <__mempcpy_chk@plt+0x9d94>
   1b3ac:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b3b0:	mov	r2, #0
   1b3b4:	mov	r3, #1
   1b3b8:	ldrb	r0, [r1, #1]
   1b3bc:	tst	r0, #4
   1b3c0:	beq	1b3dc <__mempcpy_chk@plt+0x9dfc>
   1b3c4:	ldrb	r0, [r8, r2]
   1b3c8:	ubfx	r7, r0, #5, #3
   1b3cc:	and	r0, r0, #31
   1b3d0:	ldr	r6, [r4, r7, lsl #2]
   1b3d4:	orr	r0, r6, r3, lsl r0
   1b3d8:	str	r0, [r4, r7, lsl #2]
   1b3dc:	add	r2, r2, #1
   1b3e0:	add	r1, r1, #2
   1b3e4:	mov	r0, #0
   1b3e8:	cmp	r2, #256	; 0x100
   1b3ec:	bne	1b3b8 <__mempcpy_chk@plt+0x9dd8>
   1b3f0:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b3f4:	mov	r2, #0
   1b3f8:	mov	r3, #1
   1b3fc:	ldrb	r0, [r1, #1]
   1b400:	tst	r0, #8
   1b404:	beq	1b420 <__mempcpy_chk@plt+0x9e40>
   1b408:	ldrb	r0, [r8, r2]
   1b40c:	ubfx	r7, r0, #5, #3
   1b410:	and	r0, r0, #31
   1b414:	ldr	r6, [r4, r7, lsl #2]
   1b418:	orr	r0, r6, r3, lsl r0
   1b41c:	str	r0, [r4, r7, lsl #2]
   1b420:	add	r2, r2, #1
   1b424:	add	r1, r1, #2
   1b428:	mov	r0, #0
   1b42c:	cmp	r2, #256	; 0x100
   1b430:	bne	1b3fc <__mempcpy_chk@plt+0x9e1c>
   1b434:	b	1b108 <__mempcpy_chk@plt+0x9b28>
   1b438:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b43c:	add	fp, sp, #24
   1b440:	mov	r6, r0
   1b444:	mov	r4, r2
   1b448:	mov	r5, r1
   1b44c:	mvn	r0, #0
   1b450:	movw	r8, #32816	; 0x8030
   1b454:	b	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b458:	cmp	r2, #2
   1b45c:	beq	1b4e8 <__mempcpy_chk@plt+0x9f08>
   1b460:	ldrb	r1, [r5]
   1b464:	cmp	r1, #44	; 0x2c
   1b468:	beq	1b4e0 <__mempcpy_chk@plt+0x9f00>
   1b46c:	mvn	r0, #1
   1b470:	cmp	r1, #48	; 0x30
   1b474:	bcc	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b478:	cmp	r2, #1
   1b47c:	bne	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b480:	cmn	r7, #2
   1b484:	beq	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b488:	cmp	r1, #57	; 0x39
   1b48c:	bhi	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b490:	cmn	r7, #1
   1b494:	beq	1b4b0 <__mempcpy_chk@plt+0x9ed0>
   1b498:	add	r0, r7, r7, lsl #2
   1b49c:	add	r1, r1, r0, lsl #1
   1b4a0:	sub	r0, r1, #48	; 0x30
   1b4a4:	cmp	r1, r8
   1b4a8:	movwgt	r0, #32768	; 0x8000
   1b4ac:	b	1b4b4 <__mempcpy_chk@plt+0x9ed4>
   1b4b0:	sub	r0, r1, #48	; 0x30
   1b4b4:	mov	r7, r0
   1b4b8:	mov	r0, r5
   1b4bc:	mov	r1, r6
   1b4c0:	mov	r2, r4
   1b4c4:	bl	18688 <__mempcpy_chk@plt+0x70a8>
   1b4c8:	ldr	r1, [r6, #40]	; 0x28
   1b4cc:	add	r0, r1, r0
   1b4d0:	str	r0, [r6, #40]	; 0x28
   1b4d4:	ldrb	r2, [r5, #4]
   1b4d8:	cmp	r2, #24
   1b4dc:	bne	1b458 <__mempcpy_chk@plt+0x9e78>
   1b4e0:	mov	r0, r7
   1b4e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b4e8:	mvn	r7, #1
   1b4ec:	b	1b4e0 <__mempcpy_chk@plt+0x9f00>
   1b4f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b4f4:	add	fp, sp, #24
   1b4f8:	sub	sp, sp, #8
   1b4fc:	mov	r3, r0
   1b500:	mov	r5, r0
   1b504:	mov	r8, r1
   1b508:	mov	r0, r1
   1b50c:	mov	r1, #0
   1b510:	mov	r2, #0
   1b514:	mov	r7, #0
   1b518:	ldr	r4, [r3], #20
   1b51c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1b520:	cmp	r0, #0
   1b524:	str	r0, [sp, #4]
   1b528:	beq	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b52c:	mov	r9, r0
   1b530:	add	r6, sp, #4
   1b534:	mov	r7, #0
   1b538:	str	r4, [r0]
   1b53c:	ldr	r0, [r6]
   1b540:	ldr	r1, [r0, #24]
   1b544:	orr	r1, r1, #262144	; 0x40000
   1b548:	str	r1, [r0, #24]
   1b54c:	ldr	r0, [r5, #4]
   1b550:	ldr	r4, [r6]
   1b554:	cmp	r0, #0
   1b558:	beq	1b568 <__mempcpy_chk@plt+0x9f88>
   1b55c:	add	r6, r4, #4
   1b560:	mov	r5, r0
   1b564:	b	1b59c <__mempcpy_chk@plt+0x9fbc>
   1b568:	mov	r1, #0
   1b56c:	mov	r0, r5
   1b570:	ldr	r5, [r5, #8]
   1b574:	cmp	r5, r1
   1b578:	cmpne	r5, #0
   1b57c:	bne	1b598 <__mempcpy_chk@plt+0x9fb8>
   1b580:	ldr	r5, [r0]
   1b584:	ldr	r4, [r4]
   1b588:	mov	r1, r0
   1b58c:	cmp	r5, #0
   1b590:	bne	1b56c <__mempcpy_chk@plt+0x9f8c>
   1b594:	b	1b5c0 <__mempcpy_chk@plt+0x9fe0>
   1b598:	add	r6, r4, #8
   1b59c:	add	r3, r5, #20
   1b5a0:	mov	r0, r8
   1b5a4:	mov	r1, #0
   1b5a8:	mov	r2, #0
   1b5ac:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1b5b0:	cmp	r0, #0
   1b5b4:	str	r0, [r6]
   1b5b8:	bne	1b538 <__mempcpy_chk@plt+0x9f58>
   1b5bc:	b	1b5c4 <__mempcpy_chk@plt+0x9fe4>
   1b5c0:	mov	r7, r9
   1b5c4:	mov	r0, r7
   1b5c8:	sub	sp, fp, #24
   1b5cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b5d0:	push	{r4, r5, r6, r7, fp, lr}
   1b5d4:	add	fp, sp, #16
   1b5d8:	mov	r6, r0
   1b5dc:	mov	r5, r1
   1b5e0:	mov	r0, r2
   1b5e4:	mov	r4, r2
   1b5e8:	mov	r1, r6
   1b5ec:	blx	r5
   1b5f0:	cmp	r0, #0
   1b5f4:	popne	{r4, r5, r6, r7, fp, pc}
   1b5f8:	ldr	r7, [r6, #4]
   1b5fc:	cmp	r7, #0
   1b600:	bne	1b634 <__mempcpy_chk@plt+0xa054>
   1b604:	mov	r1, #0
   1b608:	b	1b620 <__mempcpy_chk@plt+0xa040>
   1b60c:	ldr	r6, [r0]
   1b610:	mov	r1, r0
   1b614:	cmp	r6, #0
   1b618:	moveq	r0, #0
   1b61c:	popeq	{r4, r5, r6, r7, fp, pc}
   1b620:	ldr	r7, [r6, #8]
   1b624:	mov	r0, r6
   1b628:	cmp	r7, r1
   1b62c:	cmpne	r7, #0
   1b630:	beq	1b60c <__mempcpy_chk@plt+0xa02c>
   1b634:	mov	r0, r4
   1b638:	mov	r1, r7
   1b63c:	blx	r5
   1b640:	cmp	r0, #0
   1b644:	mov	r6, r7
   1b648:	beq	1b5f8 <__mempcpy_chk@plt+0xa018>
   1b64c:	pop	{r4, r5, r6, r7, fp, pc}
   1b650:	ldrb	r2, [r1, #24]
   1b654:	cmp	r2, #17
   1b658:	beq	1b68c <__mempcpy_chk@plt+0xa0ac>
   1b65c:	cmp	r2, #4
   1b660:	bne	1b6e0 <__mempcpy_chk@plt+0xa100>
   1b664:	ldr	r2, [r0, #132]	; 0x84
   1b668:	cmp	r2, #0
   1b66c:	beq	1b6e0 <__mempcpy_chk@plt+0xa100>
   1b670:	ldr	r3, [r1, #20]
   1b674:	ldr	r2, [r2, r3, lsl #2]
   1b678:	mov	r3, #1
   1b67c:	str	r2, [r1, #20]
   1b680:	ldr	r1, [r0, #80]	; 0x50
   1b684:	orr	r1, r1, r3, lsl r2
   1b688:	b	1b6dc <__mempcpy_chk@plt+0xa0fc>
   1b68c:	ldr	r2, [r1, #4]
   1b690:	cmp	r2, #0
   1b694:	beq	1b6e0 <__mempcpy_chk@plt+0xa100>
   1b698:	ldrb	r3, [r2, #24]
   1b69c:	cmp	r3, #17
   1b6a0:	bne	1b6e0 <__mempcpy_chk@plt+0xa100>
   1b6a4:	ldr	r3, [r2, #4]
   1b6a8:	ldr	r2, [r2, #20]
   1b6ac:	cmp	r3, #0
   1b6b0:	str	r3, [r1, #4]
   1b6b4:	strne	r1, [r3]
   1b6b8:	cmp	r2, #31
   1b6bc:	ldr	r1, [r1, #20]
   1b6c0:	ldr	r3, [r0, #132]	; 0x84
   1b6c4:	ldr	r1, [r3, r1, lsl #2]
   1b6c8:	str	r1, [r3, r2, lsl #2]
   1b6cc:	bgt	1b6e0 <__mempcpy_chk@plt+0xa100>
   1b6d0:	ldr	r1, [r0, #80]	; 0x50
   1b6d4:	mov	r3, #1
   1b6d8:	bic	r1, r1, r3, lsl r2
   1b6dc:	str	r1, [r0, #80]	; 0x50
   1b6e0:	mov	r0, #0
   1b6e4:	bx	lr
   1b6e8:	push	{r4, r5, fp, lr}
   1b6ec:	add	fp, sp, #8
   1b6f0:	sub	sp, sp, #8
   1b6f4:	mov	r5, r0
   1b6f8:	mov	r0, #0
   1b6fc:	mov	r4, r1
   1b700:	str	r0, [sp, #4]
   1b704:	ldr	r2, [r1, #4]
   1b708:	cmp	r2, #0
   1b70c:	beq	1b734 <__mempcpy_chk@plt+0xa154>
   1b710:	ldrb	r0, [r2, #24]
   1b714:	cmp	r0, #17
   1b718:	bne	1b734 <__mempcpy_chk@plt+0xa154>
   1b71c:	add	r0, sp, #4
   1b720:	mov	r1, r5
   1b724:	bl	1b9ec <__mempcpy_chk@plt+0xa40c>
   1b728:	cmp	r0, #0
   1b72c:	str	r0, [r4, #4]
   1b730:	strne	r4, [r0]
   1b734:	ldr	r2, [r4, #8]
   1b738:	cmp	r2, #0
   1b73c:	beq	1b764 <__mempcpy_chk@plt+0xa184>
   1b740:	ldrb	r0, [r2, #24]
   1b744:	cmp	r0, #17
   1b748:	bne	1b764 <__mempcpy_chk@plt+0xa184>
   1b74c:	add	r0, sp, #4
   1b750:	mov	r1, r5
   1b754:	bl	1b9ec <__mempcpy_chk@plt+0xa40c>
   1b758:	cmp	r0, #0
   1b75c:	str	r0, [r4, #8]
   1b760:	strne	r4, [r0]
   1b764:	ldr	r0, [sp, #4]
   1b768:	sub	sp, fp, #8
   1b76c:	pop	{r4, r5, fp, pc}
   1b770:	push	{r4, r5, fp, lr}
   1b774:	add	fp, sp, #8
   1b778:	ldr	r2, [r1, #24]
   1b77c:	mov	r5, r0
   1b780:	mov	r4, r1
   1b784:	uxtb	r0, r2
   1b788:	cmp	r0, #16
   1b78c:	bne	1b7ac <__mempcpy_chk@plt+0xa1cc>
   1b790:	ldr	r0, [r4, #4]
   1b794:	ldr	r1, [r0, #12]
   1b798:	str	r1, [r4, #12]
   1b79c:	ldr	r0, [r0, #28]
   1b7a0:	str	r0, [r4, #28]
   1b7a4:	mov	r0, #0
   1b7a8:	pop	{r4, r5, fp, pc}
   1b7ac:	str	r4, [r4, #12]
   1b7b0:	mov	r0, r5
   1b7b4:	ldr	r1, [r4, #20]
   1b7b8:	bl	1bb40 <__mempcpy_chk@plt+0xa560>
   1b7bc:	cmn	r0, #1
   1b7c0:	str	r0, [r4, #28]
   1b7c4:	moveq	r0, #12
   1b7c8:	popeq	{r4, r5, fp, pc}
   1b7cc:	ldrb	r2, [r4, #24]
   1b7d0:	mov	r1, r0
   1b7d4:	mov	r0, #0
   1b7d8:	cmp	r2, #12
   1b7dc:	popne	{r4, r5, fp, pc}
   1b7e0:	ldr	r2, [r5]
   1b7e4:	ldr	r3, [r4, #20]
   1b7e8:	add	r1, r2, r1, lsl #3
   1b7ec:	ldr	r2, [r1, #4]
   1b7f0:	bfi	r2, r3, #8, #10
   1b7f4:	str	r2, [r1, #4]
   1b7f8:	pop	{r4, r5, fp, pc}
   1b7fc:	ldrb	r0, [r1, #24]
   1b800:	cmp	r0, #16
   1b804:	beq	1b818 <__mempcpy_chk@plt+0xa238>
   1b808:	cmp	r0, #11
   1b80c:	bne	1b830 <__mempcpy_chk@plt+0xa250>
   1b810:	ldr	r0, [r1, #4]
   1b814:	b	1b850 <__mempcpy_chk@plt+0xa270>
   1b818:	ldmib	r1, {r0, r2}
   1b81c:	ldr	r3, [r2, #12]
   1b820:	str	r3, [r0, #16]
   1b824:	ldr	r0, [r1, #16]
   1b828:	str	r0, [r2, #16]
   1b82c:	b	1b854 <__mempcpy_chk@plt+0xa274>
   1b830:	ldr	r0, [r1, #4]
   1b834:	cmp	r0, #0
   1b838:	ldrne	r2, [r1, #16]
   1b83c:	strne	r2, [r0, #16]
   1b840:	ldr	r0, [r1, #8]
   1b844:	cmp	r0, #0
   1b848:	beq	1b854 <__mempcpy_chk@plt+0xa274>
   1b84c:	ldr	r1, [r1, #16]
   1b850:	str	r1, [r0, #16]
   1b854:	mov	r0, #0
   1b858:	bx	lr
   1b85c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b860:	add	fp, sp, #24
   1b864:	ldrb	r3, [r1, #24]
   1b868:	ldr	r2, [r1, #28]
   1b86c:	mov	r4, #0
   1b870:	sub	r3, r3, #2
   1b874:	cmp	r3, #14
   1b878:	bhi	1b980 <__mempcpy_chk@plt+0xa3a0>
   1b87c:	add	r7, pc, #0
   1b880:	ldr	pc, [r7, r3, lsl #2]
   1b884:	ldrdeq	fp, [r1], -r0
   1b888:	andeq	fp, r1, r0, lsl #19
   1b88c:	muleq	r1, r4, r9
   1b890:	andeq	fp, r1, r0, lsl #19
   1b894:	andeq	fp, r1, r0, lsl #19
   1b898:	andeq	fp, r1, r0, lsl #19
   1b89c:	andeq	fp, r1, r0, asr #17
   1b8a0:	andeq	fp, r1, r0, asr #17
   1b8a4:	strdeq	fp, [r1], -ip
   1b8a8:	strdeq	fp, [r1], -ip
   1b8ac:	andeq	fp, r1, r0, asr #17
   1b8b0:	andeq	fp, r1, r0, lsl #19
   1b8b4:	andeq	fp, r1, r0, lsl #19
   1b8b8:	andeq	fp, r1, r0, lsl #19
   1b8bc:	ldrdeq	fp, [r1], -r0
   1b8c0:	ldr	r1, [r1, #16]
   1b8c4:	ldr	r5, [r1, #28]
   1b8c8:	ldr	r6, [r0, #20]
   1b8cc:	add	r0, r2, r2, lsl #1
   1b8d0:	mov	r1, #1
   1b8d4:	str	r1, [r6, r0, lsl #2]!
   1b8d8:	mov	r0, #4
   1b8dc:	mov	r7, r6
   1b8e0:	str	r1, [r7, #4]!
   1b8e4:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1b8e8:	cmp	r0, #0
   1b8ec:	str	r0, [r6, #8]
   1b8f0:	beq	1b9d8 <__mempcpy_chk@plt+0xa3f8>
   1b8f4:	str	r5, [r0]
   1b8f8:	b	1b9d0 <__mempcpy_chk@plt+0xa3f0>
   1b8fc:	ldrb	r3, [r0, #88]	; 0x58
   1b900:	add	r6, r1, #16
   1b904:	add	r5, r2, r2, lsl #1
   1b908:	orr	r3, r3, #1
   1b90c:	strb	r3, [r0, #88]	; 0x58
   1b910:	mov	r3, r6
   1b914:	ldr	r7, [r1, #4]
   1b918:	ldr	r1, [r1, #8]
   1b91c:	cmp	r1, #0
   1b920:	addne	r3, r1, #12
   1b924:	cmp	r7, #0
   1b928:	ldr	r1, [r3]
   1b92c:	addne	r6, r7, #12
   1b930:	ldr	r8, [r1, #28]
   1b934:	ldr	r1, [r6]
   1b938:	ldr	r6, [r0, #20]
   1b93c:	mov	r0, #2
   1b940:	ldr	r9, [r1, #28]
   1b944:	mov	r7, r6
   1b948:	str	r0, [r7, r5, lsl #2]!
   1b94c:	mov	r0, #8
   1b950:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1b954:	cmp	r0, #0
   1b958:	str	r0, [r7, #8]
   1b95c:	beq	1b9e4 <__mempcpy_chk@plt+0xa404>
   1b960:	add	r1, r6, r5, lsl #2
   1b964:	cmp	r9, r8
   1b968:	add	r1, r1, #4
   1b96c:	bne	1b9b4 <__mempcpy_chk@plt+0xa3d4>
   1b970:	mov	r2, #1
   1b974:	str	r2, [r1]
   1b978:	str	r9, [r0]
   1b97c:	b	1b9d0 <__mempcpy_chk@plt+0xa3f0>
   1b980:	ldr	r1, [r1, #16]
   1b984:	ldr	r0, [r0, #12]
   1b988:	ldr	r1, [r1, #28]
   1b98c:	str	r1, [r0, r2, lsl #2]
   1b990:	b	1b9d0 <__mempcpy_chk@plt+0xa3f0>
   1b994:	ldr	r7, [r1, #16]
   1b998:	ldr	r3, [r0, #12]
   1b99c:	ldr	r5, [r7, #28]
   1b9a0:	str	r5, [r3, r2, lsl #2]
   1b9a4:	ldrb	r1, [r1, #24]
   1b9a8:	cmp	r1, #4
   1b9ac:	beq	1b8c8 <__mempcpy_chk@plt+0xa2e8>
   1b9b0:	b	1b9d0 <__mempcpy_chk@plt+0xa3f0>
   1b9b4:	mov	r2, #2
   1b9b8:	str	r2, [r1]
   1b9bc:	bge	1b9cc <__mempcpy_chk@plt+0xa3ec>
   1b9c0:	str	r9, [r0]
   1b9c4:	str	r8, [r0, #4]
   1b9c8:	b	1b9d0 <__mempcpy_chk@plt+0xa3f0>
   1b9cc:	stm	r0, {r8, r9}
   1b9d0:	mov	r0, r4
   1b9d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b9d8:	mov	r0, #0
   1b9dc:	str	r0, [r7]
   1b9e0:	str	r0, [r6]
   1b9e4:	mov	r4, #12
   1b9e8:	b	1b9d0 <__mempcpy_chk@plt+0xa3f0>
   1b9ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9f0:	add	fp, sp, #28
   1b9f4:	sub	sp, sp, #12
   1b9f8:	ldr	r5, [r2, #4]
   1b9fc:	ldr	sl, [r1]
   1ba00:	mov	r9, r2
   1ba04:	cmp	r5, #0
   1ba08:	ldrbne	r1, [r1, #28]
   1ba0c:	andsne	r1, r1, #16
   1ba10:	bne	1bb18 <__mempcpy_chk@plt+0xa538>
   1ba14:	str	r0, [sp]
   1ba18:	mov	r0, #8
   1ba1c:	mov	r8, #0
   1ba20:	add	r3, sp, #4
   1ba24:	mov	r1, #0
   1ba28:	mov	r2, #0
   1ba2c:	str	r0, [sp, #8]
   1ba30:	mov	r0, sl
   1ba34:	str	r8, [sp, #4]
   1ba38:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1ba3c:	mov	r7, r0
   1ba40:	mov	r0, #9
   1ba44:	add	r3, sp, #4
   1ba48:	mov	r1, #0
   1ba4c:	mov	r2, #0
   1ba50:	str	r0, [sp, #8]
   1ba54:	mov	r0, sl
   1ba58:	str	r8, [sp, #4]
   1ba5c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1ba60:	mov	r4, r0
   1ba64:	cmp	r5, #0
   1ba68:	mov	r6, r0
   1ba6c:	beq	1ba94 <__mempcpy_chk@plt+0xa4b4>
   1ba70:	mov	r0, #16
   1ba74:	add	r3, sp, #4
   1ba78:	mov	r1, r5
   1ba7c:	mov	r2, r4
   1ba80:	str	r0, [sp, #8]
   1ba84:	mov	r0, sl
   1ba88:	str	r8, [sp, #4]
   1ba8c:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1ba90:	mov	r6, r0
   1ba94:	mov	r0, #16
   1ba98:	add	r3, sp, #4
   1ba9c:	mov	r1, r7
   1baa0:	mov	r2, r6
   1baa4:	str	r0, [sp, #8]
   1baa8:	mov	r0, sl
   1baac:	str	r8, [sp, #4]
   1bab0:	bl	1a4bc <__mempcpy_chk@plt+0x8edc>
   1bab4:	cmp	r4, #0
   1bab8:	beq	1bac8 <__mempcpy_chk@plt+0xa4e8>
   1babc:	cmp	r7, #0
   1bac0:	cmpne	r6, #0
   1bac4:	bne	1badc <__mempcpy_chk@plt+0xa4fc>
   1bac8:	ldr	r1, [sp]
   1bacc:	mov	r0, #12
   1bad0:	mov	r5, #0
   1bad4:	str	r0, [r1]
   1bad8:	b	1bb34 <__mempcpy_chk@plt+0xa554>
   1badc:	mov	r5, r0
   1bae0:	cmp	r0, #0
   1bae4:	beq	1bac8 <__mempcpy_chk@plt+0xa4e8>
   1bae8:	ldr	r0, [r9, #20]
   1baec:	str	r0, [r4, #20]
   1baf0:	str	r0, [r7, #20]
   1baf4:	ldr	r1, [r9, #24]
   1baf8:	ldr	r0, [r4, #24]
   1bafc:	lsr	r1, r1, #19
   1bb00:	bfi	r0, r1, #19, #1
   1bb04:	str	r0, [r4, #24]
   1bb08:	ldr	r0, [r7, #24]
   1bb0c:	bfi	r0, r1, #19, #1
   1bb10:	str	r0, [r7, #24]
   1bb14:	b	1bb34 <__mempcpy_chk@plt+0xa554>
   1bb18:	ldr	r3, [r9, #20]
   1bb1c:	cmp	r3, #31
   1bb20:	bgt	1bb34 <__mempcpy_chk@plt+0xa554>
   1bb24:	ldr	r1, [sl, #80]	; 0x50
   1bb28:	mov	r2, #1
   1bb2c:	tst	r1, r2, lsl r3
   1bb30:	bne	1ba14 <__mempcpy_chk@plt+0xa434>
   1bb34:	mov	r0, r5
   1bb38:	sub	sp, fp, #28
   1bb3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb44:	add	fp, sp, #28
   1bb48:	sub	sp, sp, #12
   1bb4c:	mov	r4, r0
   1bb50:	ldr	r7, [r0, #4]
   1bb54:	ldr	r0, [r0, #8]
   1bb58:	mov	r5, r2
   1bb5c:	mov	r9, r1
   1bb60:	cmp	r0, r7
   1bb64:	bcs	1bc30 <__mempcpy_chk@plt+0xa650>
   1bb68:	ldr	r1, [r4]
   1bb6c:	str	r9, [r1, r0, lsl #3]!
   1bb70:	str	r5, [r1, #4]
   1bb74:	ldr	r0, [r4]
   1bb78:	ldr	r1, [r4, #8]
   1bb7c:	add	r0, r0, r1, lsl #3
   1bb80:	ldr	r1, [r0, #4]
   1bb84:	bfc	r1, #8, #10
   1bb88:	str	r1, [r0, #4]
   1bb8c:	uxtb	r1, r5
   1bb90:	cmp	r1, #5
   1bb94:	bne	1bba8 <__mempcpy_chk@plt+0xa5c8>
   1bb98:	ldr	r2, [r4, #92]	; 0x5c
   1bb9c:	mov	r0, #1048576	; 0x100000
   1bba0:	cmp	r2, #1
   1bba4:	bgt	1bbb8 <__mempcpy_chk@plt+0xa5d8>
   1bba8:	sub	r0, r1, #6
   1bbac:	clz	r0, r0
   1bbb0:	lsr	r0, r0, #5
   1bbb4:	lsl	r0, r0, #20
   1bbb8:	ldr	r1, [r4]
   1bbbc:	ldr	r2, [r4, #8]
   1bbc0:	add	r1, r1, r2, lsl #3
   1bbc4:	ldr	r2, [r1, #4]
   1bbc8:	bic	r2, r2, #1048576	; 0x100000
   1bbcc:	orr	r0, r2, r0
   1bbd0:	mvn	r2, #0
   1bbd4:	str	r0, [r1, #4]
   1bbd8:	ldr	r0, [r4, #8]
   1bbdc:	ldr	r1, [r4, #12]
   1bbe0:	str	r2, [r1, r0, lsl #2]
   1bbe4:	mov	r2, #0
   1bbe8:	ldr	r0, [r4, #8]
   1bbec:	ldr	r1, [r4, #20]
   1bbf0:	add	r0, r0, r0, lsl #1
   1bbf4:	str	r2, [r1, r0, lsl #2]!
   1bbf8:	str	r2, [r1, #4]
   1bbfc:	str	r2, [r1, #8]
   1bc00:	ldr	r0, [r4, #8]
   1bc04:	ldr	r1, [r4, #24]
   1bc08:	add	r0, r0, r0, lsl #1
   1bc0c:	str	r2, [r1, r0, lsl #2]!
   1bc10:	str	r2, [r1, #4]
   1bc14:	str	r2, [r1, #8]
   1bc18:	ldr	r6, [r4, #8]
   1bc1c:	add	r0, r6, #1
   1bc20:	str	r0, [r4, #8]
   1bc24:	mov	r0, r6
   1bc28:	sub	sp, fp, #28
   1bc2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc30:	movw	r0, #21845	; 0x5555
   1bc34:	lsl	r1, r7, #1
   1bc38:	mvn	r6, #0
   1bc3c:	movt	r0, #5461	; 0x1555
   1bc40:	cmp	r1, r0
   1bc44:	bhi	1bc24 <__mempcpy_chk@plt+0xa644>
   1bc48:	ldr	r0, [r4]
   1bc4c:	str	r1, [sp, #8]
   1bc50:	lsl	r1, r7, #4
   1bc54:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1bc58:	cmp	r0, #0
   1bc5c:	beq	1bc24 <__mempcpy_chk@plt+0xa644>
   1bc60:	str	r0, [r4]
   1bc64:	lsl	r8, r7, #3
   1bc68:	ldr	r0, [r4, #12]
   1bc6c:	mov	r1, r8
   1bc70:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1bc74:	str	r0, [sp, #4]
   1bc78:	ldr	r0, [r4, #16]
   1bc7c:	mov	r1, r8
   1bc80:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1bc84:	mov	r2, r0
   1bc88:	ldr	r0, [r4, #20]
   1bc8c:	add	r1, r7, r7, lsl #1
   1bc90:	lsl	r8, r1, #3
   1bc94:	mov	r7, r2
   1bc98:	mov	r1, r8
   1bc9c:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1bca0:	mov	sl, r0
   1bca4:	ldr	r0, [r4, #24]
   1bca8:	mov	r1, r8
   1bcac:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1bcb0:	mov	r8, r0
   1bcb4:	ldr	r0, [sp, #4]
   1bcb8:	cmp	r0, #0
   1bcbc:	beq	1bccc <__mempcpy_chk@plt+0xa6ec>
   1bcc0:	cmp	r7, #0
   1bcc4:	cmpne	sl, #0
   1bcc8:	bne	1bcec <__mempcpy_chk@plt+0xa70c>
   1bccc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1bcd0:	mov	r0, r7
   1bcd4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1bcd8:	mov	r0, sl
   1bcdc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1bce0:	mov	r0, r8
   1bce4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1bce8:	b	1bc24 <__mempcpy_chk@plt+0xa644>
   1bcec:	cmp	r8, #0
   1bcf0:	beq	1bccc <__mempcpy_chk@plt+0xa6ec>
   1bcf4:	add	r1, r4, #12
   1bcf8:	stm	r1, {r0, r7, sl}
   1bcfc:	str	r8, [r4, #24]
   1bd00:	ldr	r0, [sp, #8]
   1bd04:	str	r0, [r4, #4]
   1bd08:	ldr	r0, [r4, #8]
   1bd0c:	b	1bb68 <__mempcpy_chk@plt+0xa588>
   1bd10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd14:	add	fp, sp, #28
   1bd18:	sub	sp, sp, #44	; 0x2c
   1bd1c:	mov	r8, r0
   1bd20:	ldr	r0, [r1, #20]
   1bd24:	add	r4, r2, r2, lsl #1
   1bd28:	mov	r5, r1
   1bd2c:	mov	r1, #0
   1bd30:	mov	r9, r3
   1bd34:	mov	r6, r2
   1bd38:	add	r0, r0, r4, lsl #2
   1bd3c:	ldr	r0, [r0, #4]
   1bd40:	str	r1, [sp, #36]	; 0x24
   1bd44:	add	r0, r0, #1
   1bd48:	str	r0, [sp, #32]
   1bd4c:	lsl	r0, r0, #2
   1bd50:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1bd54:	cmp	r0, #0
   1bd58:	str	r0, [sp, #40]	; 0x28
   1bd5c:	beq	1bf24 <__mempcpy_chk@plt+0xa944>
   1bd60:	mov	r1, #1
   1bd64:	str	r6, [r0]
   1bd68:	str	r1, [sp, #36]	; 0x24
   1bd6c:	mvn	r1, #0
   1bd70:	ldr	r0, [r5, #24]
   1bd74:	add	r0, r0, r4, lsl #2
   1bd78:	str	r1, [r0, #4]
   1bd7c:	ldr	r2, [r5]
   1bd80:	add	r0, r2, r6, lsl #3
   1bd84:	ldr	r0, [r0, #4]
   1bd88:	ubfx	r1, r0, #8, #10
   1bd8c:	cmp	r1, #0
   1bd90:	beq	1bdec <__mempcpy_chk@plt+0xa80c>
   1bd94:	ldr	r3, [r5, #20]
   1bd98:	add	r3, r3, r4, lsl #2
   1bd9c:	ldr	r7, [r3, #4]
   1bda0:	cmp	r7, #0
   1bda4:	beq	1bdec <__mempcpy_chk@plt+0xa80c>
   1bda8:	ldr	r3, [r3, #8]
   1bdac:	ldr	r3, [r3]
   1bdb0:	add	r2, r2, r3, lsl #3
   1bdb4:	ldrb	r2, [r2, #6]
   1bdb8:	tst	r2, #4
   1bdbc:	bne	1bdec <__mempcpy_chk@plt+0xa80c>
   1bdc0:	str	r1, [sp]
   1bdc4:	mov	r0, r5
   1bdc8:	mov	r1, r6
   1bdcc:	mov	r2, r6
   1bdd0:	mov	r3, r6
   1bdd4:	bl	1bf2c <__mempcpy_chk@plt+0xa94c>
   1bdd8:	cmp	r0, #0
   1bddc:	bne	1bf1c <__mempcpy_chk@plt+0xa93c>
   1bde0:	ldr	r0, [r5]
   1bde4:	add	r0, r0, r6, lsl #3
   1bde8:	ldr	r0, [r0, #4]
   1bdec:	tst	r0, #8
   1bdf0:	beq	1bef0 <__mempcpy_chk@plt+0xa910>
   1bdf4:	ldr	r0, [r5, #20]
   1bdf8:	add	r1, r0, r4, lsl #2
   1bdfc:	ldr	r1, [r1, #4]
   1be00:	cmp	r1, #1
   1be04:	blt	1bef0 <__mempcpy_chk@plt+0xa910>
   1be08:	str	r8, [sp, #12]
   1be0c:	mov	r8, #0
   1be10:	add	r7, sp, #16
   1be14:	add	sl, sp, #32
   1be18:	mov	r6, #0
   1be1c:	str	r9, [sp, #8]
   1be20:	add	r0, r0, r4, lsl #2
   1be24:	ldr	r0, [r0, #8]
   1be28:	ldr	r2, [r0, r6, lsl #2]
   1be2c:	ldr	r0, [r5, #24]
   1be30:	add	r9, r2, r2, lsl #1
   1be34:	add	r0, r0, r9, lsl #2
   1be38:	ldr	r1, [r0, #4]
   1be3c:	cmn	r1, #1
   1be40:	beq	1bea8 <__mempcpy_chk@plt+0xa8c8>
   1be44:	cmp	r1, #0
   1be48:	bne	1be68 <__mempcpy_chk@plt+0xa888>
   1be4c:	mov	r0, r7
   1be50:	mov	r1, r5
   1be54:	mov	r3, #0
   1be58:	bl	1bd10 <__mempcpy_chk@plt+0xa730>
   1be5c:	cmp	r0, #0
   1be60:	beq	1be78 <__mempcpy_chk@plt+0xa898>
   1be64:	b	1bf1c <__mempcpy_chk@plt+0xa93c>
   1be68:	vldr	d16, [r0]
   1be6c:	ldr	r0, [r0, #8]
   1be70:	str	r0, [sp, #24]
   1be74:	vstr	d16, [sp, #16]
   1be78:	mov	r0, sl
   1be7c:	mov	r1, r7
   1be80:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   1be84:	cmp	r0, #0
   1be88:	bne	1bf1c <__mempcpy_chk@plt+0xa93c>
   1be8c:	ldr	r0, [r5, #24]
   1be90:	add	r0, r0, r9, lsl #2
   1be94:	ldr	r0, [r0, #4]
   1be98:	cmp	r0, #0
   1be9c:	bne	1beac <__mempcpy_chk@plt+0xa8cc>
   1bea0:	ldr	r0, [sp, #24]
   1bea4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1bea8:	mov	r8, #1
   1beac:	ldr	r0, [r5, #20]
   1beb0:	add	r6, r6, #1
   1beb4:	add	r1, r0, r4, lsl #2
   1beb8:	ldr	r1, [r1, #4]
   1bebc:	cmp	r6, r1
   1bec0:	blt	1be20 <__mempcpy_chk@plt+0xa840>
   1bec4:	tst	r8, #1
   1bec8:	ldr	r8, [sp, #12]
   1becc:	ldr	r0, [sp, #8]
   1bed0:	beq	1bef0 <__mempcpy_chk@plt+0xa910>
   1bed4:	cmp	r0, #0
   1bed8:	bne	1bef0 <__mempcpy_chk@plt+0xa910>
   1bedc:	ldr	r0, [r5, #24]
   1bee0:	mov	r1, #0
   1bee4:	add	r0, r0, r4, lsl #2
   1bee8:	str	r1, [r0, #4]
   1beec:	b	1bf08 <__mempcpy_chk@plt+0xa928>
   1bef0:	ldr	r0, [r5, #24]
   1bef4:	vldr	d16, [sp, #32]
   1bef8:	ldr	r1, [sp, #40]	; 0x28
   1befc:	add	r0, r0, r4, lsl #2
   1bf00:	str	r1, [r0, #8]
   1bf04:	vstr	d16, [r0]
   1bf08:	ldr	r0, [sp, #40]	; 0x28
   1bf0c:	vldr	d16, [sp, #32]
   1bf10:	str	r0, [r8, #8]
   1bf14:	mov	r0, #0
   1bf18:	vstr	d16, [r8]
   1bf1c:	sub	sp, fp, #28
   1bf20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf24:	mov	r0, #12
   1bf28:	b	1bf1c <__mempcpy_chk@plt+0xa93c>
   1bf2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf30:	add	fp, sp, #28
   1bf34:	sub	sp, sp, #20
   1bf38:	ldr	sl, [fp, #8]
   1bf3c:	mov	r8, r2
   1bf40:	mov	r4, r1
   1bf44:	mov	r7, r0
   1bf48:	str	r3, [sp, #8]
   1bf4c:	ldr	r2, [r7]
   1bf50:	add	r1, r2, r4, lsl #3
   1bf54:	ldrb	r0, [r1, #4]!
   1bf58:	cmp	r0, #4
   1bf5c:	bne	1bfdc <__mempcpy_chk@plt+0xa9fc>
   1bf60:	ldr	r0, [r7, #12]
   1bf64:	ldr	r1, [r7, #20]
   1bf68:	add	r9, r8, r8, lsl #1
   1bf6c:	mov	r2, sl
   1bf70:	mov	r6, r7
   1bf74:	ldr	r5, [r0, r4, lsl #2]
   1bf78:	add	r0, r1, r9, lsl #2
   1bf7c:	mov	r1, #0
   1bf80:	str	r1, [r0, #4]
   1bf84:	mov	r0, r7
   1bf88:	mov	r1, r5
   1bf8c:	bl	1c394 <__mempcpy_chk@plt+0xadb4>
   1bf90:	mov	r7, r0
   1bf94:	mov	r0, #12
   1bf98:	cmn	r7, #1
   1bf9c:	str	r0, [sp, #16]
   1bfa0:	beq	1c1fc <__mempcpy_chk@plt+0xac1c>
   1bfa4:	ldr	r0, [r6, #12]
   1bfa8:	ldr	r1, [r0, r4, lsl #2]
   1bfac:	str	r1, [r0, r8, lsl #2]
   1bfb0:	mov	r1, r7
   1bfb4:	ldr	r0, [r6, #20]
   1bfb8:	add	r0, r0, r9, lsl #2
   1bfbc:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1bfc0:	mov	r8, r7
   1bfc4:	mov	r1, #0
   1bfc8:	cmp	r0, #0
   1bfcc:	mov	r4, r5
   1bfd0:	mov	r7, r6
   1bfd4:	bne	1c1ac <__mempcpy_chk@plt+0xabcc>
   1bfd8:	b	1c1fc <__mempcpy_chk@plt+0xac1c>
   1bfdc:	ldr	r0, [r7, #20]
   1bfe0:	add	r9, r4, r4, lsl #1
   1bfe4:	add	r6, r0, r9, lsl #2
   1bfe8:	ldr	r3, [r6, #4]
   1bfec:	cmp	r3, #0
   1bff0:	beq	1c1e8 <__mempcpy_chk@plt+0xac08>
   1bff4:	ldr	r6, [r6, #8]
   1bff8:	cmp	r3, #1
   1bffc:	ldr	r5, [r6]
   1c000:	add	r6, r8, r8, lsl #1
   1c004:	add	r0, r0, r6, lsl #2
   1c008:	str	r6, [sp, #12]
   1c00c:	mov	r6, #0
   1c010:	str	r6, [r0, #4]
   1c014:	bne	1c048 <__mempcpy_chk@plt+0xaa68>
   1c018:	ldr	r2, [sp, #8]
   1c01c:	cmp	r4, r2
   1c020:	bne	1c158 <__mempcpy_chk@plt+0xab78>
   1c024:	cmp	r8, r4
   1c028:	beq	1c158 <__mempcpy_chk@plt+0xab78>
   1c02c:	mov	r1, r5
   1c030:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1c034:	ldr	r4, [sp, #8]
   1c038:	cmp	r0, #0
   1c03c:	mov	r1, #1
   1c040:	movwne	r1, #2
   1c044:	b	1c1ac <__mempcpy_chk@plt+0xabcc>
   1c048:	ldr	r1, [r7, #8]
   1c04c:	sub	r3, r1, #1
   1c050:	cmp	r3, #1
   1c054:	blt	1c0a4 <__mempcpy_chk@plt+0xaac4>
   1c058:	add	r3, r2, r3, lsl #3
   1c05c:	ldr	r6, [r3, #4]
   1c060:	ands	r3, r6, #262144	; 0x40000
   1c064:	beq	1c0a4 <__mempcpy_chk@plt+0xaac4>
   1c068:	ldr	r3, [r7, #16]
   1c06c:	sub	r2, r2, #12
   1c070:	sub	r3, r3, #4
   1c074:	ldr	r4, [r3, r1, lsl #2]
   1c078:	cmp	r4, r5
   1c07c:	ubfxeq	r6, r6, #8, #10
   1c080:	cmpeq	r6, sl
   1c084:	beq	1c1b8 <__mempcpy_chk@plt+0xabd8>
   1c088:	sub	r6, r1, #2
   1c08c:	cmp	r6, #1
   1c090:	blt	1c0a4 <__mempcpy_chk@plt+0xaac4>
   1c094:	ldr	r6, [r2, r1, lsl #3]
   1c098:	sub	r1, r1, #1
   1c09c:	ands	r4, r6, #262144	; 0x40000
   1c0a0:	bne	1c074 <__mempcpy_chk@plt+0xaa94>
   1c0a4:	mov	r0, r7
   1c0a8:	mov	r1, r5
   1c0ac:	mov	r2, sl
   1c0b0:	bl	1c394 <__mempcpy_chk@plt+0xadb4>
   1c0b4:	mov	r4, r0
   1c0b8:	mov	r0, #12
   1c0bc:	cmn	r4, #1
   1c0c0:	str	r0, [sp, #16]
   1c0c4:	beq	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c0c8:	ldr	r0, [r7, #20]
   1c0cc:	ldr	r6, [sp, #12]
   1c0d0:	mov	r1, r4
   1c0d4:	add	r0, r0, r6, lsl #2
   1c0d8:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1c0dc:	cmp	r0, #0
   1c0e0:	beq	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c0e4:	ldr	r3, [sp, #8]
   1c0e8:	mov	r0, r7
   1c0ec:	mov	r1, r5
   1c0f0:	mov	r2, r4
   1c0f4:	str	sl, [sp]
   1c0f8:	bl	1bf2c <__mempcpy_chk@plt+0xa94c>
   1c0fc:	cmp	r0, #0
   1c100:	bne	1c1f8 <__mempcpy_chk@plt+0xac18>
   1c104:	ldr	r0, [r7, #20]
   1c108:	mov	r2, sl
   1c10c:	add	r0, r0, r9, lsl #2
   1c110:	ldr	r0, [r0, #8]
   1c114:	ldr	r4, [r0, #4]
   1c118:	mov	r0, r7
   1c11c:	mov	r1, r4
   1c120:	bl	1c394 <__mempcpy_chk@plt+0xadb4>
   1c124:	mov	r8, r0
   1c128:	mov	r0, #12
   1c12c:	cmn	r8, #1
   1c130:	str	r0, [sp, #16]
   1c134:	beq	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c138:	ldr	r0, [r7, #20]
   1c13c:	mov	r1, r8
   1c140:	add	r0, r0, r6, lsl #2
   1c144:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1c148:	mov	r1, #0
   1c14c:	cmp	r0, #0
   1c150:	bne	1c1ac <__mempcpy_chk@plt+0xabcc>
   1c154:	b	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c158:	ldr	r0, [r1]
   1c15c:	mov	r1, r5
   1c160:	ubfx	r0, r0, #8, #10
   1c164:	orr	sl, r0, sl
   1c168:	mov	r0, r7
   1c16c:	mov	r2, sl
   1c170:	bl	1c394 <__mempcpy_chk@plt+0xadb4>
   1c174:	mov	r8, r0
   1c178:	mov	r0, #12
   1c17c:	cmn	r8, #1
   1c180:	str	r0, [sp, #16]
   1c184:	beq	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c188:	ldr	r0, [r7, #20]
   1c18c:	ldr	r1, [sp, #12]
   1c190:	add	r0, r0, r1, lsl #2
   1c194:	mov	r1, r8
   1c198:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1c19c:	mov	r1, #0
   1c1a0:	cmp	r0, #0
   1c1a4:	mov	r4, r5
   1c1a8:	beq	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c1ac:	cmp	r1, #0
   1c1b0:	beq	1bf4c <__mempcpy_chk@plt+0xa96c>
   1c1b4:	b	1c1d4 <__mempcpy_chk@plt+0xabf4>
   1c1b8:	sub	r1, r1, #1
   1c1bc:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1c1c0:	ldr	r6, [sp, #12]
   1c1c4:	cmp	r0, #0
   1c1c8:	bne	1c104 <__mempcpy_chk@plt+0xab24>
   1c1cc:	mov	r0, #12
   1c1d0:	b	1c1f8 <__mempcpy_chk@plt+0xac18>
   1c1d4:	mov	r0, #12
   1c1d8:	cmp	r1, #2
   1c1dc:	str	r0, [sp, #16]
   1c1e0:	beq	1c1f4 <__mempcpy_chk@plt+0xac14>
   1c1e4:	b	1c1fc <__mempcpy_chk@plt+0xac1c>
   1c1e8:	ldr	r0, [r7, #12]
   1c1ec:	ldr	r1, [r0, r4, lsl #2]
   1c1f0:	str	r1, [r0, r8, lsl #2]
   1c1f4:	mov	r0, #0
   1c1f8:	str	r0, [sp, #16]
   1c1fc:	ldr	r0, [sp, #16]
   1c200:	sub	sp, fp, #28
   1c204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c208:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c20c:	add	fp, sp, #24
   1c210:	mov	r8, #0
   1c214:	cmp	r1, #0
   1c218:	beq	1c370 <__mempcpy_chk@plt+0xad90>
   1c21c:	mov	r5, r0
   1c220:	ldr	r0, [r1, #4]
   1c224:	mov	r9, r1
   1c228:	cmp	r0, #0
   1c22c:	beq	1c370 <__mempcpy_chk@plt+0xad90>
   1c230:	ldr	r1, [r5, #4]
   1c234:	ldr	r2, [r5]
   1c238:	add	r3, r1, r0, lsl #1
   1c23c:	cmp	r2, r3
   1c240:	bge	1c270 <__mempcpy_chk@plt+0xac90>
   1c244:	add	r7, r2, r0
   1c248:	ldr	r0, [r5, #8]
   1c24c:	lsl	r1, r7, #3
   1c250:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1c254:	cmp	r0, #0
   1c258:	beq	1c38c <__mempcpy_chk@plt+0xadac>
   1c25c:	str	r0, [r5, #8]
   1c260:	lsl	r0, r7, #1
   1c264:	str	r0, [r5]
   1c268:	ldr	r1, [r5, #4]
   1c26c:	ldr	r0, [r9, #4]
   1c270:	cmp	r1, #0
   1c274:	beq	1c378 <__mempcpy_chk@plt+0xad98>
   1c278:	add	r7, r1, r0, lsl #1
   1c27c:	sub	r1, r1, #1
   1c280:	sub	r0, r0, #1
   1c284:	orr	r2, r0, r1
   1c288:	cmp	r2, #0
   1c28c:	blt	1c2d8 <__mempcpy_chk@plt+0xacf8>
   1c290:	ldr	r2, [r9, #8]
   1c294:	ldr	r3, [r5, #8]
   1c298:	ldr	r4, [r2, r0, lsl #2]
   1c29c:	ldr	r6, [r3, r1, lsl #2]
   1c2a0:	cmp	r6, r4
   1c2a4:	bne	1c2b4 <__mempcpy_chk@plt+0xacd4>
   1c2a8:	sub	r1, r1, #1
   1c2ac:	sub	r0, r0, #1
   1c2b0:	b	1c2cc <__mempcpy_chk@plt+0xacec>
   1c2b4:	bge	1c2c8 <__mempcpy_chk@plt+0xace8>
   1c2b8:	sub	r7, r7, #1
   1c2bc:	sub	r0, r0, #1
   1c2c0:	str	r4, [r3, r7, lsl #2]
   1c2c4:	b	1c2cc <__mempcpy_chk@plt+0xacec>
   1c2c8:	sub	r1, r1, #1
   1c2cc:	orr	r6, r0, r1
   1c2d0:	cmn	r6, #1
   1c2d4:	bgt	1c298 <__mempcpy_chk@plt+0xacb8>
   1c2d8:	cmp	r0, #0
   1c2dc:	blt	1c2fc <__mempcpy_chk@plt+0xad1c>
   1c2e0:	add	r2, r0, #1
   1c2e4:	ldr	r0, [r5, #8]
   1c2e8:	ldr	r1, [r9, #8]
   1c2ec:	sub	r7, r7, r2
   1c2f0:	lsl	r2, r2, #2
   1c2f4:	add	r0, r0, r7, lsl #2
   1c2f8:	bl	1134c <memcpy@plt>
   1c2fc:	ldr	r0, [r5, #4]
   1c300:	ldr	r2, [r9, #4]
   1c304:	sub	r1, r0, #1
   1c308:	add	r3, r1, r2, lsl #1
   1c30c:	sub	r2, r3, r7
   1c310:	adds	r2, r2, #1
   1c314:	beq	1c370 <__mempcpy_chk@plt+0xad90>
   1c318:	add	r0, r2, r0
   1c31c:	str	r0, [r5, #4]
   1c320:	ldr	r0, [r5, #8]
   1c324:	ldr	r6, [r0, r1, lsl #2]
   1c328:	ldr	r5, [r0, r3, lsl #2]
   1c32c:	cmp	r5, r6
   1c330:	ble	1c34c <__mempcpy_chk@plt+0xad6c>
   1c334:	add	r6, r2, r1
   1c338:	subs	r2, r2, #1
   1c33c:	sub	r3, r3, #1
   1c340:	str	r5, [r0, r6, lsl #2]
   1c344:	bne	1c324 <__mempcpy_chk@plt+0xad44>
   1c348:	b	1c370 <__mempcpy_chk@plt+0xad90>
   1c34c:	add	r5, r2, r1
   1c350:	cmp	r1, #0
   1c354:	str	r6, [r0, r5, lsl #2]
   1c358:	sub	r6, r1, #1
   1c35c:	mov	r1, r6
   1c360:	bgt	1c324 <__mempcpy_chk@plt+0xad44>
   1c364:	add	r1, r0, r7, lsl #2
   1c368:	lsl	r2, r2, #2
   1c36c:	bl	1134c <memcpy@plt>
   1c370:	mov	r0, r8
   1c374:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c378:	str	r0, [r5, #4]
   1c37c:	ldr	r0, [r5, #8]
   1c380:	ldr	r2, [r9, #4]
   1c384:	ldr	r1, [r9, #8]
   1c388:	b	1c368 <__mempcpy_chk@plt+0xad88>
   1c38c:	mov	r8, #12
   1c390:	b	1c370 <__mempcpy_chk@plt+0xad90>
   1c394:	push	{r4, r5, r6, sl, fp, lr}
   1c398:	add	fp, sp, #16
   1c39c:	mov	r5, r0
   1c3a0:	ldr	r0, [r0]
   1c3a4:	mov	r4, r1
   1c3a8:	mov	r6, r2
   1c3ac:	ldr	r1, [r0, r1, lsl #3]!
   1c3b0:	ldr	r2, [r0, #4]
   1c3b4:	mov	r0, r5
   1c3b8:	bl	1bb40 <__mempcpy_chk@plt+0xa560>
   1c3bc:	cmn	r0, #1
   1c3c0:	ldrne	r1, [r5]
   1c3c4:	movwne	r3, #65280	; 0xff00
   1c3c8:	movtne	r3, #3
   1c3cc:	addne	r1, r1, r0, lsl #3
   1c3d0:	ldrne	r2, [r1, #4]
   1c3d4:	bfine	r2, r6, #8, #10
   1c3d8:	strne	r2, [r1, #4]
   1c3dc:	ldrne	r1, [r5]
   1c3e0:	addne	r2, r1, r4, lsl #3
   1c3e4:	addne	r1, r1, r0, lsl #3
   1c3e8:	ldrne	r2, [r2, #4]
   1c3ec:	andne	r2, r2, r3
   1c3f0:	ldrne	r3, [r1, #4]
   1c3f4:	orrne	r2, r2, r3
   1c3f8:	strne	r2, [r1, #4]
   1c3fc:	ldrne	r1, [r5]
   1c400:	addne	r1, r1, r0, lsl #3
   1c404:	ldrne	r2, [r1, #4]
   1c408:	orrne	r2, r2, #262144	; 0x40000
   1c40c:	strne	r2, [r1, #4]
   1c410:	ldrne	r1, [r5, #16]
   1c414:	strne	r4, [r1, r0, lsl #2]
   1c418:	pop	{r4, r5, r6, sl, fp, pc}
   1c41c:	push	{r4, r5, r6, sl, fp, lr}
   1c420:	add	fp, sp, #16
   1c424:	ldr	r2, [r0]
   1c428:	mov	r5, r1
   1c42c:	mov	r4, r0
   1c430:	cmp	r2, #0
   1c434:	beq	1c460 <__mempcpy_chk@plt+0xae80>
   1c438:	ldr	r1, [r4, #4]
   1c43c:	cmp	r1, #0
   1c440:	bne	1c48c <__mempcpy_chk@plt+0xaeac>
   1c444:	ldr	r0, [r4, #8]
   1c448:	str	r5, [r0]
   1c44c:	ldr	r0, [r4, #4]
   1c450:	mov	r6, #1
   1c454:	add	r0, r0, #1
   1c458:	str	r0, [r4, #4]
   1c45c:	b	1c484 <__mempcpy_chk@plt+0xaea4>
   1c460:	mov	r6, #1
   1c464:	mov	r0, #4
   1c468:	str	r6, [r4]
   1c46c:	str	r6, [r4, #4]
   1c470:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1c474:	cmp	r0, #0
   1c478:	str	r0, [r4, #8]
   1c47c:	beq	1c4bc <__mempcpy_chk@plt+0xaedc>
   1c480:	str	r5, [r0]
   1c484:	mov	r0, r6
   1c488:	pop	{r4, r5, r6, sl, fp, pc}
   1c48c:	cmp	r2, r1
   1c490:	bne	1c4cc <__mempcpy_chk@plt+0xaeec>
   1c494:	lsl	r0, r2, #1
   1c498:	lsl	r1, r2, #3
   1c49c:	str	r0, [r4]
   1c4a0:	ldr	r0, [r4, #8]
   1c4a4:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1c4a8:	cmp	r0, #0
   1c4ac:	beq	1c548 <__mempcpy_chk@plt+0xaf68>
   1c4b0:	str	r0, [r4, #8]
   1c4b4:	ldr	r1, [r4, #4]
   1c4b8:	b	1c4d0 <__mempcpy_chk@plt+0xaef0>
   1c4bc:	mov	r6, #0
   1c4c0:	str	r6, [r4]
   1c4c4:	str	r6, [r4, #4]
   1c4c8:	b	1c484 <__mempcpy_chk@plt+0xaea4>
   1c4cc:	ldr	r0, [r4, #8]
   1c4d0:	ldr	r2, [r0]
   1c4d4:	cmp	r2, r5
   1c4d8:	ble	1c510 <__mempcpy_chk@plt+0xaf30>
   1c4dc:	cmp	r1, #1
   1c4e0:	blt	1c540 <__mempcpy_chk@plt+0xaf60>
   1c4e4:	add	r2, r0, r1, lsl #2
   1c4e8:	add	r1, r1, #1
   1c4ec:	mov	r3, r2
   1c4f0:	ldr	r6, [r3, #-4]!
   1c4f4:	sub	r1, r1, #1
   1c4f8:	cmp	r1, #1
   1c4fc:	str	r6, [r2]
   1c500:	mov	r2, r3
   1c504:	bgt	1c4f0 <__mempcpy_chk@plt+0xaf10>
   1c508:	sub	r1, r1, #1
   1c50c:	b	1c540 <__mempcpy_chk@plt+0xaf60>
   1c510:	add	r2, r0, r1, lsl #2
   1c514:	ldr	r3, [r2, #-4]
   1c518:	cmp	r3, r5
   1c51c:	ble	1c540 <__mempcpy_chk@plt+0xaf60>
   1c520:	sub	r1, r1, #2
   1c524:	str	r3, [r2]
   1c528:	sub	r1, r1, #1
   1c52c:	ldr	r3, [r2, #-8]
   1c530:	sub	r2, r2, #4
   1c534:	cmp	r3, r5
   1c538:	bgt	1c524 <__mempcpy_chk@plt+0xaf44>
   1c53c:	add	r1, r1, #2
   1c540:	str	r5, [r0, r1, lsl #2]
   1c544:	b	1c44c <__mempcpy_chk@plt+0xae6c>
   1c548:	mov	r6, #0
   1c54c:	b	1c484 <__mempcpy_chk@plt+0xaea4>
   1c550:	push	{r4, r5, fp, lr}
   1c554:	add	fp, sp, #8
   1c558:	mov	r5, r0
   1c55c:	mov	r4, r1
   1c560:	ldr	r0, [r0]
   1c564:	ldr	r1, [r5, #4]
   1c568:	cmp	r0, r1
   1c56c:	bne	1c5a0 <__mempcpy_chk@plt+0xafc0>
   1c570:	mov	r1, #2
   1c574:	add	r0, r1, r0, lsl #1
   1c578:	str	r0, [r5]
   1c57c:	lsl	r1, r0, #2
   1c580:	ldr	r0, [r5, #8]
   1c584:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1c588:	cmp	r0, #0
   1c58c:	moveq	r0, #0
   1c590:	popeq	{r4, r5, fp, pc}
   1c594:	str	r0, [r5, #8]
   1c598:	ldr	r1, [r5, #4]
   1c59c:	b	1c5a4 <__mempcpy_chk@plt+0xafc4>
   1c5a0:	ldr	r0, [r5, #8]
   1c5a4:	add	r2, r1, #1
   1c5a8:	str	r2, [r5, #4]
   1c5ac:	str	r4, [r0, r1, lsl #2]
   1c5b0:	mov	r0, #1
   1c5b4:	pop	{r4, r5, fp, pc}
   1c5b8:	push	{r4, r5, fp, lr}
   1c5bc:	add	fp, sp, #8
   1c5c0:	mov	r4, r0
   1c5c4:	ldr	r0, [r1, #4]
   1c5c8:	mov	r5, r1
   1c5cc:	str	r0, [r4, #4]
   1c5d0:	ldr	r1, [r1, #4]
   1c5d4:	cmp	r1, #1
   1c5d8:	blt	1c60c <__mempcpy_chk@plt+0xb02c>
   1c5dc:	str	r0, [r4]
   1c5e0:	lsl	r0, r0, #2
   1c5e4:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1c5e8:	cmp	r0, #0
   1c5ec:	str	r0, [r4, #8]
   1c5f0:	beq	1c620 <__mempcpy_chk@plt+0xb040>
   1c5f4:	ldr	r2, [r5, #4]
   1c5f8:	ldr	r1, [r5, #8]
   1c5fc:	lsl	r2, r2, #2
   1c600:	bl	1134c <memcpy@plt>
   1c604:	mov	r0, #0
   1c608:	pop	{r4, r5, fp, pc}
   1c60c:	mov	r0, #0
   1c610:	str	r0, [r4]
   1c614:	str	r0, [r4, #4]
   1c618:	str	r0, [r4, #8]
   1c61c:	pop	{r4, r5, fp, pc}
   1c620:	mov	r0, #0
   1c624:	str	r0, [r4]
   1c628:	str	r0, [r4, #4]
   1c62c:	mov	r0, #12
   1c630:	pop	{r4, r5, fp, pc}
   1c634:	ldr	r2, [r0, #4]
   1c638:	cmp	r2, #1
   1c63c:	movlt	r0, #0
   1c640:	bxlt	lr
   1c644:	push	{r4, r5, r6, sl, fp, lr}
   1c648:	add	fp, sp, #16
   1c64c:	ldr	ip, [r0, #8]
   1c650:	subs	r2, r2, #1
   1c654:	mov	r0, #0
   1c658:	mov	r3, #0
   1c65c:	beq	1c688 <__mempcpy_chk@plt+0xb0a8>
   1c660:	mov	r3, #0
   1c664:	mov	lr, #1
   1c668:	add	r4, r2, r3
   1c66c:	lsr	r5, r4, #1
   1c670:	ldr	r6, [ip, r5, lsl #2]
   1c674:	cmp	r6, r1
   1c678:	movge	r2, r5
   1c67c:	addlt	r3, lr, r4, lsr #1
   1c680:	cmp	r3, r2
   1c684:	bcc	1c668 <__mempcpy_chk@plt+0xb088>
   1c688:	ldr	r2, [ip, r3, lsl #2]
   1c68c:	cmp	r2, r1
   1c690:	addeq	r0, r3, #1
   1c694:	pop	{r4, r5, r6, sl, fp, pc}
   1c698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c69c:	add	fp, sp, #28
   1c6a0:	sub	sp, sp, #20
   1c6a4:	ldr	lr, [r2, #4]
   1c6a8:	cmp	lr, #0
   1c6ac:	beq	1c9b4 <__mempcpy_chk@plt+0xb3d4>
   1c6b0:	mov	r8, r3
   1c6b4:	mov	sl, r2
   1c6b8:	add	r7, lr, r3
   1c6bc:	cmp	lr, #1
   1c6c0:	str	r0, [sp, #4]
   1c6c4:	blt	1c6e0 <__mempcpy_chk@plt+0xb100>
   1c6c8:	ldr	r3, [sl, #8]
   1c6cc:	mov	r2, lr
   1c6d0:	ldr	r0, [r3], #4
   1c6d4:	subs	r2, r2, #1
   1c6d8:	add	r7, r0, r7
   1c6dc:	bne	1c6d0 <__mempcpy_chk@plt+0xb0f0>
   1c6e0:	ldr	r0, [r1, #32]
   1c6e4:	str	r1, [sp, #12]
   1c6e8:	ldr	r1, [r1, #68]	; 0x44
   1c6ec:	and	r1, r1, r7
   1c6f0:	add	r2, r1, r1, lsl #1
   1c6f4:	ldr	r1, [r0, r2, lsl #2]
   1c6f8:	cmp	r1, #1
   1c6fc:	blt	1c78c <__mempcpy_chk@plt+0xb1ac>
   1c700:	add	r0, r0, r2, lsl #2
   1c704:	sub	ip, lr, #1
   1c708:	mov	r3, #0
   1c70c:	ldr	r9, [r0, #8]
   1c710:	b	1c750 <__mempcpy_chk@plt+0xb170>
   1c714:	ldr	r0, [r5, #4]
   1c718:	cmp	r0, lr
   1c71c:	bne	1c780 <__mempcpy_chk@plt+0xb1a0>
   1c720:	mov	r0, ip
   1c724:	add	r6, r0, #1
   1c728:	cmp	r6, #1
   1c72c:	blt	1c9bc <__mempcpy_chk@plt+0xb3dc>
   1c730:	ldr	r6, [sl, #8]
   1c734:	ldr	r2, [r5, #8]
   1c738:	ldr	r6, [r6, r0, lsl #2]
   1c73c:	ldr	r2, [r2, r0, lsl #2]
   1c740:	sub	r0, r0, #1
   1c744:	cmp	r2, r6
   1c748:	beq	1c724 <__mempcpy_chk@plt+0xb144>
   1c74c:	b	1c780 <__mempcpy_chk@plt+0xb1a0>
   1c750:	ldr	r4, [r9, r3, lsl #2]
   1c754:	ldr	r0, [r4]
   1c758:	cmp	r0, r7
   1c75c:	bne	1c780 <__mempcpy_chk@plt+0xb1a0>
   1c760:	ldrb	r0, [r4, #52]	; 0x34
   1c764:	and	r0, r0, #15
   1c768:	cmp	r0, r8
   1c76c:	bne	1c780 <__mempcpy_chk@plt+0xb1a0>
   1c770:	cmp	sl, #0
   1c774:	ldrne	r5, [r4, #40]	; 0x28
   1c778:	cmpne	r5, #0
   1c77c:	bne	1c714 <__mempcpy_chk@plt+0xb134>
   1c780:	add	r3, r3, #1
   1c784:	cmp	r3, r1
   1c788:	blt	1c750 <__mempcpy_chk@plt+0xb170>
   1c78c:	mov	r0, #56	; 0x38
   1c790:	mov	r1, #1
   1c794:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1c798:	cmp	r0, #0
   1c79c:	beq	1c9a0 <__mempcpy_chk@plt+0xb3c0>
   1c7a0:	add	r5, r0, #4
   1c7a4:	mov	r4, r0
   1c7a8:	mov	r1, sl
   1c7ac:	mov	r0, r5
   1c7b0:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1c7b4:	cmp	r0, #0
   1c7b8:	bne	1c9c8 <__mempcpy_chk@plt+0xb3e8>
   1c7bc:	str	r5, [r4, #40]	; 0x28
   1c7c0:	and	r0, r8, #15
   1c7c4:	ldr	r6, [sp, #12]
   1c7c8:	ldrb	r1, [r4, #52]	; 0x34
   1c7cc:	and	r1, r1, #240	; 0xf0
   1c7d0:	orr	r0, r1, r0
   1c7d4:	strb	r0, [r4, #52]	; 0x34
   1c7d8:	ldr	r0, [sl, #4]
   1c7dc:	cmp	r0, #1
   1c7e0:	blt	1c980 <__mempcpy_chk@plt+0xb3a0>
   1c7e4:	movw	r9, #65280	; 0xff00
   1c7e8:	and	r0, r8, #4
   1c7ec:	mov	ip, r5
   1c7f0:	and	lr, r8, #1
   1c7f4:	str	r0, [sp]
   1c7f8:	and	r0, r8, #2
   1c7fc:	movt	r9, #3
   1c800:	mov	r8, #0
   1c804:	str	r0, [sp, #8]
   1c808:	add	r3, r9, #255	; 0xff
   1c80c:	mov	r0, #0
   1c810:	str	r3, [sp, #16]
   1c814:	b	1c84c <__mempcpy_chk@plt+0xb26c>
   1c818:	sub	r2, r2, #1
   1c81c:	cmp	r2, r1
   1c820:	str	r2, [r4, #8]
   1c824:	ble	1c968 <__mempcpy_chk@plt+0xb388>
   1c828:	ldr	r2, [r4, #12]
   1c82c:	add	r3, r2, r1, lsl #2
   1c830:	ldr	r3, [r3, #4]
   1c834:	str	r3, [r2, r1, lsl #2]
   1c838:	add	r1, r1, #1
   1c83c:	ldr	r3, [r4, #8]
   1c840:	cmp	r1, r3
   1c844:	blt	1c82c <__mempcpy_chk@plt+0xb24c>
   1c848:	b	1c968 <__mempcpy_chk@plt+0xb388>
   1c84c:	ldr	r1, [sl, #8]
   1c850:	ldr	r2, [r6]
   1c854:	ldr	r1, [r1, r8, lsl #2]
   1c858:	add	r1, r2, r1, lsl #3
   1c85c:	ldr	r5, [r1, #4]
   1c860:	and	r1, r5, r3
   1c864:	cmp	r1, #1
   1c868:	beq	1c970 <__mempcpy_chk@plt+0xb390>
   1c86c:	ldrb	r3, [r4, #52]	; 0x34
   1c870:	mov	r2, #32
   1c874:	and	r1, r5, r9
   1c878:	and	r2, r2, r5, lsr #15
   1c87c:	orr	r2, r3, r2
   1c880:	uxtb	r3, r5
   1c884:	cmp	r3, #2
   1c888:	strb	r2, [r4, #52]	; 0x34
   1c88c:	beq	1c8a0 <__mempcpy_chk@plt+0xb2c0>
   1c890:	cmp	r3, #4
   1c894:	bne	1c8ac <__mempcpy_chk@plt+0xb2cc>
   1c898:	mov	r3, #64	; 0x40
   1c89c:	b	1c8a4 <__mempcpy_chk@plt+0xb2c4>
   1c8a0:	mov	r3, #16
   1c8a4:	orr	r2, r2, r3
   1c8a8:	strb	r2, [r4, #52]	; 0x34
   1c8ac:	cmp	r1, #0
   1c8b0:	beq	1c96c <__mempcpy_chk@plt+0xb38c>
   1c8b4:	ldr	r1, [r4, #40]	; 0x28
   1c8b8:	cmp	r1, ip
   1c8bc:	bne	1c910 <__mempcpy_chk@plt+0xb330>
   1c8c0:	mov	r0, #12
   1c8c4:	mov	r6, lr
   1c8c8:	mov	r9, ip
   1c8cc:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1c8d0:	cmp	r0, #0
   1c8d4:	beq	1c998 <__mempcpy_chk@plt+0xb3b8>
   1c8d8:	mov	r1, sl
   1c8dc:	str	r0, [r4, #40]	; 0x28
   1c8e0:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1c8e4:	cmp	r0, #0
   1c8e8:	bne	1c998 <__mempcpy_chk@plt+0xb3b8>
   1c8ec:	ldrb	r0, [r4, #52]	; 0x34
   1c8f0:	mov	lr, r6
   1c8f4:	ldr	r6, [sp, #12]
   1c8f8:	mov	ip, r9
   1c8fc:	movw	r9, #65280	; 0xff00
   1c900:	movt	r9, #3
   1c904:	orr	r0, r0, #128	; 0x80
   1c908:	strb	r0, [r4, #52]	; 0x34
   1c90c:	mov	r0, #0
   1c910:	cmp	lr, #0
   1c914:	bne	1c920 <__mempcpy_chk@plt+0xb340>
   1c918:	ands	r1, r5, #256	; 0x100
   1c91c:	bne	1c954 <__mempcpy_chk@plt+0xb374>
   1c920:	cmp	lr, #0
   1c924:	andsne	r1, r5, #512	; 0x200
   1c928:	bne	1c954 <__mempcpy_chk@plt+0xb374>
   1c92c:	ldr	r1, [sp, #8]
   1c930:	cmp	r1, #0
   1c934:	bne	1c940 <__mempcpy_chk@plt+0xb360>
   1c938:	ands	r1, r5, #4096	; 0x1000
   1c93c:	bne	1c954 <__mempcpy_chk@plt+0xb374>
   1c940:	ldr	r1, [sp]
   1c944:	cmp	r1, #0
   1c948:	bne	1c96c <__mempcpy_chk@plt+0xb38c>
   1c94c:	ands	r1, r5, #16384	; 0x4000
   1c950:	beq	1c96c <__mempcpy_chk@plt+0xb38c>
   1c954:	sub	r1, r8, r0
   1c958:	cmp	r1, #0
   1c95c:	ldrge	r2, [r4, #8]
   1c960:	cmpge	r2, r1
   1c964:	bgt	1c818 <__mempcpy_chk@plt+0xb238>
   1c968:	add	r0, r0, #1
   1c96c:	ldr	r3, [sp, #16]
   1c970:	ldr	r1, [sl, #4]
   1c974:	add	r8, r8, #1
   1c978:	cmp	r8, r1
   1c97c:	blt	1c84c <__mempcpy_chk@plt+0xb26c>
   1c980:	mov	r0, r6
   1c984:	mov	r1, r4
   1c988:	mov	r2, r7
   1c98c:	bl	1c9d4 <__mempcpy_chk@plt+0xb3f4>
   1c990:	cmp	r0, #0
   1c994:	beq	1c9bc <__mempcpy_chk@plt+0xb3dc>
   1c998:	mov	r0, r4
   1c99c:	bl	17b04 <__mempcpy_chk@plt+0x6524>
   1c9a0:	ldr	r1, [sp, #4]
   1c9a4:	mov	r0, #12
   1c9a8:	mov	r4, #0
   1c9ac:	str	r0, [r1]
   1c9b0:	b	1c9bc <__mempcpy_chk@plt+0xb3dc>
   1c9b4:	mov	r4, #0
   1c9b8:	str	r4, [r0]
   1c9bc:	mov	r0, r4
   1c9c0:	sub	sp, fp, #28
   1c9c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9c8:	mov	r0, r4
   1c9cc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1c9d0:	b	1c9a0 <__mempcpy_chk@plt+0xb3c0>
   1c9d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c9d8:	add	fp, sp, #24
   1c9dc:	str	r2, [r1]
   1c9e0:	mov	r4, r1
   1c9e4:	mov	r7, r0
   1c9e8:	mov	r0, #0
   1c9ec:	mov	r9, r2
   1c9f0:	ldr	r1, [r1, #8]
   1c9f4:	str	r1, [r4, #16]
   1c9f8:	str	r0, [r4, #20]
   1c9fc:	lsl	r0, r1, #2
   1ca00:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1ca04:	mov	r8, #12
   1ca08:	cmp	r0, #0
   1ca0c:	str	r0, [r4, #24]
   1ca10:	beq	1caa4 <__mempcpy_chk@plt+0xb4c4>
   1ca14:	ldr	r0, [r4, #8]
   1ca18:	cmp	r0, #1
   1ca1c:	blt	1ca64 <__mempcpy_chk@plt+0xb484>
   1ca20:	add	r5, r4, #16
   1ca24:	mov	r6, #0
   1ca28:	ldr	r1, [r4, #12]
   1ca2c:	ldr	r2, [r7]
   1ca30:	ldr	r1, [r1, r6, lsl #2]
   1ca34:	add	r2, r2, r1, lsl #3
   1ca38:	ldrb	r2, [r2, #4]
   1ca3c:	tst	r2, #8
   1ca40:	bne	1ca58 <__mempcpy_chk@plt+0xb478>
   1ca44:	mov	r0, r5
   1ca48:	bl	1c550 <__mempcpy_chk@plt+0xaf70>
   1ca4c:	cmp	r0, #0
   1ca50:	beq	1caa4 <__mempcpy_chk@plt+0xb4c4>
   1ca54:	ldr	r0, [r4, #8]
   1ca58:	add	r6, r6, #1
   1ca5c:	cmp	r6, r0
   1ca60:	blt	1ca28 <__mempcpy_chk@plt+0xb448>
   1ca64:	ldr	r1, [r7, #68]	; 0x44
   1ca68:	ldr	r0, [r7, #32]
   1ca6c:	and	r1, r1, r9
   1ca70:	mov	r5, r0
   1ca74:	add	r2, r1, r1, lsl #1
   1ca78:	ldr	r1, [r5, r2, lsl #2]!
   1ca7c:	mov	r6, r5
   1ca80:	ldr	r3, [r6, #4]!
   1ca84:	cmp	r3, r1
   1ca88:	ble	1caac <__mempcpy_chk@plt+0xb4cc>
   1ca8c:	add	r0, r0, r2, lsl #2
   1ca90:	ldr	r0, [r0, #8]
   1ca94:	add	r2, r1, #1
   1ca98:	mov	r8, #0
   1ca9c:	str	r2, [r5]
   1caa0:	str	r4, [r0, r1, lsl #2]
   1caa4:	mov	r0, r8
   1caa8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1caac:	add	r7, r0, r2, lsl #2
   1cab0:	mov	r2, #2
   1cab4:	ldr	r0, [r7, #8]!
   1cab8:	add	r9, r2, r1, lsl #1
   1cabc:	lsl	r1, r9, #2
   1cac0:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1cac4:	cmp	r0, #0
   1cac8:	beq	1caa4 <__mempcpy_chk@plt+0xb4c4>
   1cacc:	str	r0, [r7]
   1cad0:	str	r9, [r6]
   1cad4:	ldr	r1, [r5]
   1cad8:	b	1ca94 <__mempcpy_chk@plt+0xb4b4>
   1cadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cae0:	add	fp, sp, #28
   1cae4:	sub	sp, sp, #36	; 0x24
   1cae8:	mov	r4, r0
   1caec:	ldr	r0, [r0, #24]
   1caf0:	mov	r6, r2
   1caf4:	mov	r9, r1
   1caf8:	cmp	r0, r1
   1cafc:	ble	1cc60 <__mempcpy_chk@plt+0xb680>
   1cb00:	ldr	r0, [r4, #80]	; 0x50
   1cb04:	mov	r1, #4
   1cb08:	mov	r5, r9
   1cb0c:	cmp	r0, #2
   1cb10:	movge	r0, #0
   1cb14:	strge	r0, [r4, #16]
   1cb18:	strge	r0, [r4, #20]
   1cb1c:	mov	r0, #0
   1cb20:	tst	r6, #1
   1cb24:	str	r0, [r4, #24]
   1cb28:	str	r0, [r4, #28]
   1cb2c:	str	r0, [r4, #32]
   1cb30:	strb	r0, [r4, #76]	; 0x4c
   1cb34:	movweq	r1, #6
   1cb38:	ldr	r2, [r4, #44]	; 0x2c
   1cb3c:	ldr	r3, [r4, #52]	; 0x34
   1cb40:	str	r2, [r4, #48]	; 0x30
   1cb44:	str	r3, [r4, #56]	; 0x38
   1cb48:	str	r1, [r4, #60]	; 0x3c
   1cb4c:	ldrb	r1, [r4, #75]	; 0x4b
   1cb50:	cmp	r1, #0
   1cb54:	ldreq	r1, [r4]
   1cb58:	streq	r1, [r4, #4]
   1cb5c:	cmp	r5, #0
   1cb60:	beq	1cbec <__mempcpy_chk@plt+0xb60c>
   1cb64:	ldr	r1, [r4, #32]
   1cb68:	cmp	r5, r1
   1cb6c:	bge	1cc68 <__mempcpy_chk@plt+0xb688>
   1cb70:	ldrb	r0, [r4, #76]	; 0x4c
   1cb74:	cmp	r0, #0
   1cb78:	bne	1cd68 <__mempcpy_chk@plt+0xb788>
   1cb7c:	sub	r1, r5, #1
   1cb80:	mov	r0, r4
   1cb84:	mov	r2, r6
   1cb88:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1cb8c:	str	r0, [r4, #60]	; 0x3c
   1cb90:	ldr	r0, [r4, #80]	; 0x50
   1cb94:	cmp	r0, #2
   1cb98:	blt	1cbb4 <__mempcpy_chk@plt+0xb5d4>
   1cb9c:	ldr	r2, [r4, #28]
   1cba0:	ldr	r0, [r4, #8]
   1cba4:	sub	r2, r2, r5
   1cba8:	add	r1, r0, r5, lsl #2
   1cbac:	lsl	r2, r2, #2
   1cbb0:	bl	1131c <memmove@plt>
   1cbb4:	ldrb	r0, [r4, #75]	; 0x4b
   1cbb8:	cmp	r0, #0
   1cbbc:	bne	1ce5c <__mempcpy_chk@plt+0xb87c>
   1cbc0:	ldr	r0, [r4, #28]
   1cbc4:	ldr	r1, [r4, #32]
   1cbc8:	sub	r0, r0, r5
   1cbcc:	sub	r1, r1, r5
   1cbd0:	str	r0, [r4, #28]
   1cbd4:	str	r1, [r4, #32]
   1cbd8:	ldrb	r0, [r4, #75]	; 0x4b
   1cbdc:	cmp	r0, #0
   1cbe0:	ldreq	r0, [r4, #4]
   1cbe4:	addeq	r0, r0, r5
   1cbe8:	streq	r0, [r4, #4]
   1cbec:	str	r9, [r4, #24]
   1cbf0:	ldr	r0, [r4, #48]	; 0x30
   1cbf4:	ldr	r1, [r4, #56]	; 0x38
   1cbf8:	ldr	r2, [r4, #80]	; 0x50
   1cbfc:	sub	r0, r0, r5
   1cc00:	cmp	r2, #2
   1cc04:	sub	r1, r1, r5
   1cc08:	str	r0, [r4, #48]	; 0x30
   1cc0c:	str	r1, [r4, #56]	; 0x38
   1cc10:	blt	1cc34 <__mempcpy_chk@plt+0xb654>
   1cc14:	ldrb	r0, [r4, #72]	; 0x48
   1cc18:	cmp	r0, #0
   1cc1c:	beq	1cc48 <__mempcpy_chk@plt+0xb668>
   1cc20:	mov	r0, r4
   1cc24:	bl	17cc0 <__mempcpy_chk@plt+0x66e0>
   1cc28:	cmp	r0, #0
   1cc2c:	bne	1cc58 <__mempcpy_chk@plt+0xb678>
   1cc30:	b	1cc50 <__mempcpy_chk@plt+0xb670>
   1cc34:	ldrb	r1, [r4, #75]	; 0x4b
   1cc38:	cmp	r1, #0
   1cc3c:	bne	1ce74 <__mempcpy_chk@plt+0xb894>
   1cc40:	str	r0, [r4, #28]
   1cc44:	b	1cc50 <__mempcpy_chk@plt+0xb670>
   1cc48:	mov	r0, r4
   1cc4c:	bl	1829c <__mempcpy_chk@plt+0x6cbc>
   1cc50:	mov	r0, #0
   1cc54:	str	r0, [r4, #40]	; 0x28
   1cc58:	sub	sp, fp, #28
   1cc5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc60:	sub	r5, r9, r0
   1cc64:	b	1cb5c <__mempcpy_chk@plt+0xb57c>
   1cc68:	ldrb	r2, [r4, #76]	; 0x4c
   1cc6c:	ldr	lr, [r4, #28]
   1cc70:	cmp	r2, #0
   1cc74:	bne	1d0b4 <__mempcpy_chk@plt+0xbad4>
   1cc78:	mov	r2, #0
   1cc7c:	str	r2, [r4, #28]
   1cc80:	ldr	r3, [r4, #80]	; 0x50
   1cc84:	cmp	r3, #2
   1cc88:	blt	1ce8c <__mempcpy_chk@plt+0xb8ac>
   1cc8c:	ldrb	r2, [r4, #73]	; 0x49
   1cc90:	cmp	r2, #0
   1cc94:	beq	1cd50 <__mempcpy_chk@plt+0xb770>
   1cc98:	ldr	r7, [r4]
   1cc9c:	sub	r3, r5, r3
   1cca0:	add	ip, r7, r0
   1cca4:	add	r3, ip, r3
   1cca8:	add	r8, ip, r5
   1ccac:	cmp	r3, r7
   1ccb0:	movcc	r3, r7
   1ccb4:	mov	r7, r8
   1ccb8:	sub	r7, r7, #1
   1ccbc:	cmp	r7, r3
   1ccc0:	bcc	1cd50 <__mempcpy_chk@plt+0xb770>
   1ccc4:	ldrb	r2, [r7]
   1ccc8:	and	r2, r2, #192	; 0xc0
   1cccc:	cmp	r2, #128	; 0x80
   1ccd0:	beq	1ccb8 <__mempcpy_chk@plt+0xb6d8>
   1ccd4:	ldr	r0, [r4, #48]	; 0x30
   1ccd8:	mov	sl, lr
   1ccdc:	mov	r1, r7
   1cce0:	add	r3, ip, r0
   1cce4:	ldr	r0, [r4, #64]	; 0x40
   1cce8:	sub	r2, r3, r7
   1ccec:	cmp	r0, #0
   1ccf0:	bne	1d150 <__mempcpy_chk@plt+0xbb70>
   1ccf4:	mov	r0, #0
   1ccf8:	add	r3, sp, #24
   1ccfc:	str	r0, [sp, #28]
   1cd00:	str	r0, [sp, #24]
   1cd04:	add	r0, sp, #20
   1cd08:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   1cd0c:	sub	r1, r8, r7
   1cd10:	mvn	r2, #0
   1cd14:	cmp	r0, r1
   1cd18:	bcc	1cd3c <__mempcpy_chk@plt+0xb75c>
   1cd1c:	cmn	r0, #3
   1cd20:	bhi	1cd3c <__mempcpy_chk@plt+0xb75c>
   1cd24:	mov	r2, #0
   1cd28:	sub	r0, r0, r1
   1cd2c:	str	r2, [r4, #16]
   1cd30:	str	r2, [r4, #20]
   1cd34:	str	r0, [r4, #28]
   1cd38:	ldr	r2, [sp, #20]
   1cd3c:	cmn	r2, #1
   1cd40:	bne	1d05c <__mempcpy_chk@plt+0xba7c>
   1cd44:	ldr	r0, [r4, #24]
   1cd48:	ldr	r1, [r4, #32]
   1cd4c:	mov	lr, sl
   1cd50:	add	r8, r1, r0
   1cd54:	cmp	r8, r9
   1cd58:	bge	1cf34 <__mempcpy_chk@plt+0xb954>
   1cd5c:	add	sl, r4, #16
   1cd60:	str	lr, [sp]
   1cd64:	b	1cffc <__mempcpy_chk@plt+0xba1c>
   1cd68:	ldr	r8, [r4, #28]
   1cd6c:	ldr	sl, [r4, #12]
   1cd70:	mov	r0, #0
   1cd74:	mov	r1, r8
   1cd78:	add	r2, r0, r1
   1cd7c:	add	r2, r2, r2, lsr #31
   1cd80:	asr	r7, r2, #1
   1cd84:	ldr	r2, [sl, r7, lsl #2]
   1cd88:	mov	r3, r7
   1cd8c:	cmp	r2, r5
   1cd90:	bgt	1cda0 <__mempcpy_chk@plt+0xb7c0>
   1cd94:	bge	1cdac <__mempcpy_chk@plt+0xb7cc>
   1cd98:	add	r0, r7, #1
   1cd9c:	mov	r3, r1
   1cda0:	cmp	r0, r3
   1cda4:	mov	r1, r3
   1cda8:	blt	1cd78 <__mempcpy_chk@plt+0xb798>
   1cdac:	cmp	r2, r5
   1cdb0:	mov	r0, r4
   1cdb4:	mov	r2, r6
   1cdb8:	addlt	r7, r7, #1
   1cdbc:	sub	r1, r7, #1
   1cdc0:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1cdc4:	cmp	r8, r5
   1cdc8:	str	r0, [r4, #60]	; 0x3c
   1cdcc:	ble	1cde0 <__mempcpy_chk@plt+0xb800>
   1cdd0:	cmp	r7, r5
   1cdd4:	ldreq	r0, [sl, r5, lsl #2]
   1cdd8:	cmpeq	r0, r5
   1cddc:	beq	1cf58 <__mempcpy_chk@plt+0xb978>
   1cde0:	mov	r0, #0
   1cde4:	strb	r0, [r4, #76]	; 0x4c
   1cde8:	sub	r0, r5, r9
   1cdec:	ldr	r1, [r4, #44]	; 0x2c
   1cdf0:	ldr	r2, [r4, #52]	; 0x34
   1cdf4:	add	r1, r0, r1
   1cdf8:	add	r0, r0, r2
   1cdfc:	str	r1, [r4, #48]	; 0x30
   1ce00:	sub	r1, sl, #4
   1ce04:	str	r0, [r4, #56]	; 0x38
   1ce08:	mov	r0, r7
   1ce0c:	cmp	r7, #1
   1ce10:	blt	1ce24 <__mempcpy_chk@plt+0xb844>
   1ce14:	ldr	r2, [r1, r0, lsl #2]
   1ce18:	sub	r7, r0, #1
   1ce1c:	cmp	r2, r5
   1ce20:	beq	1ce08 <__mempcpy_chk@plt+0xb828>
   1ce24:	cmp	r0, r8
   1ce28:	bge	1ce48 <__mempcpy_chk@plt+0xb868>
   1ce2c:	ldr	r1, [r4, #8]
   1ce30:	ldr	r2, [r1, r0, lsl #2]
   1ce34:	cmn	r2, #1
   1ce38:	bne	1ce48 <__mempcpy_chk@plt+0xb868>
   1ce3c:	add	r0, r0, #1
   1ce40:	cmp	r0, r8
   1ce44:	blt	1ce30 <__mempcpy_chk@plt+0xb850>
   1ce48:	cmp	r0, r8
   1ce4c:	bne	1cee8 <__mempcpy_chk@plt+0xb908>
   1ce50:	mov	r0, #0
   1ce54:	str	r0, [r4, #28]
   1ce58:	b	1d0ac <__mempcpy_chk@plt+0xbacc>
   1ce5c:	ldr	r2, [r4, #28]
   1ce60:	ldr	r0, [r4, #4]
   1ce64:	add	r1, r0, r5
   1ce68:	sub	r2, r2, r5
   1ce6c:	bl	1131c <memmove@plt>
   1ce70:	b	1cbc0 <__mempcpy_chk@plt+0xb5e0>
   1ce74:	ldrb	r0, [r4, #72]	; 0x48
   1ce78:	cmp	r0, #0
   1ce7c:	beq	1cf40 <__mempcpy_chk@plt+0xb960>
   1ce80:	mov	r0, r4
   1ce84:	bl	18230 <__mempcpy_chk@plt+0x6c50>
   1ce88:	b	1cc50 <__mempcpy_chk@plt+0xb670>
   1ce8c:	ldr	r3, [r4]
   1ce90:	add	r0, r5, r0
   1ce94:	ldr	r1, [r4, #64]	; 0x40
   1ce98:	add	r0, r3, r0
   1ce9c:	cmp	r1, #0
   1cea0:	ldrb	r0, [r0, #-1]
   1cea4:	str	r2, [r4, #32]
   1cea8:	ldrbne	r0, [r1, r0]
   1ceac:	ldr	r1, [r4, #68]	; 0x44
   1ceb0:	ubfx	r2, r0, #5, #3
   1ceb4:	and	r3, r0, #31
   1ceb8:	ldr	r2, [r1, r2, lsl #2]
   1cebc:	mov	r1, #1
   1cec0:	tst	r2, r1, lsl r3
   1cec4:	bne	1cee0 <__mempcpy_chk@plt+0xb900>
   1cec8:	mov	r1, #0
   1cecc:	cmp	r0, #10
   1ced0:	bne	1cee0 <__mempcpy_chk@plt+0xb900>
   1ced4:	ldrb	r1, [r4, #77]	; 0x4d
   1ced8:	cmp	r1, #0
   1cedc:	movwne	r1, #2
   1cee0:	str	r1, [r4, #60]	; 0x3c
   1cee4:	b	1cbd8 <__mempcpy_chk@plt+0xb5f8>
   1cee8:	ldr	r0, [sl, r0, lsl #2]
   1ceec:	subs	r2, r0, r5
   1cef0:	str	r2, [r4, #28]
   1cef4:	beq	1cfcc <__mempcpy_chk@plt+0xb9ec>
   1cef8:	cmp	r2, #1
   1cefc:	blt	1cf20 <__mempcpy_chk@plt+0xb940>
   1cf00:	ldr	r0, [r4, #8]
   1cf04:	mov	r1, #0
   1cf08:	mvn	r3, #0
   1cf0c:	str	r3, [r0, r1, lsl #2]
   1cf10:	add	r1, r1, #1
   1cf14:	ldr	r2, [r4, #28]
   1cf18:	cmp	r1, r2
   1cf1c:	blt	1cf0c <__mempcpy_chk@plt+0xb92c>
   1cf20:	ldr	r0, [r4, #4]
   1cf24:	mov	r1, #255	; 0xff
   1cf28:	bl	114f0 <memset@plt>
   1cf2c:	ldr	r0, [r4, #28]
   1cf30:	b	1d0ac <__mempcpy_chk@plt+0xbacc>
   1cf34:	sub	r7, r8, r9
   1cf38:	str	r7, [r4, #28]
   1cf3c:	b	1d08c <__mempcpy_chk@plt+0xbaac>
   1cf40:	ldr	r0, [r4, #64]	; 0x40
   1cf44:	cmp	r0, #0
   1cf48:	beq	1cc50 <__mempcpy_chk@plt+0xb670>
   1cf4c:	mov	r0, r4
   1cf50:	bl	18478 <__mempcpy_chk@plt+0x6e98>
   1cf54:	b	1cc50 <__mempcpy_chk@plt+0xb670>
   1cf58:	ldr	r0, [r4, #8]
   1cf5c:	sub	r2, r8, r5
   1cf60:	lsl	r2, r2, #2
   1cf64:	add	r1, r0, r5, lsl #2
   1cf68:	bl	1131c <memmove@plt>
   1cf6c:	ldr	r2, [r4, #28]
   1cf70:	ldr	r0, [r4, #4]
   1cf74:	add	r1, r0, r5
   1cf78:	sub	r2, r2, r5
   1cf7c:	bl	1131c <memmove@plt>
   1cf80:	ldr	r0, [r4, #28]
   1cf84:	ldr	r1, [r4, #32]
   1cf88:	sub	r0, r0, r5
   1cf8c:	sub	r1, r1, r5
   1cf90:	cmp	r0, #1
   1cf94:	str	r0, [r4, #28]
   1cf98:	str	r1, [r4, #32]
   1cf9c:	blt	1cbd8 <__mempcpy_chk@plt+0xb5f8>
   1cfa0:	ldr	r0, [r4, #12]
   1cfa4:	mov	r2, #0
   1cfa8:	add	r1, r0, r5, lsl #2
   1cfac:	ldr	r3, [r1, r2, lsl #2]
   1cfb0:	sub	r3, r3, r5
   1cfb4:	str	r3, [r0, r2, lsl #2]
   1cfb8:	add	r2, r2, #1
   1cfbc:	ldr	r3, [r4, #28]
   1cfc0:	cmp	r2, r3
   1cfc4:	blt	1cfac <__mempcpy_chk@plt+0xb9cc>
   1cfc8:	b	1cbd8 <__mempcpy_chk@plt+0xb5f8>
   1cfcc:	mov	r0, #0
   1cfd0:	b	1d0ac <__mempcpy_chk@plt+0xbacc>
   1cfd4:	cmp	r7, #0
   1cfd8:	ldr	r3, [sp, #4]
   1cfdc:	ldr	r1, [sp, #8]
   1cfe0:	mov	r2, #0
   1cfe4:	cmpne	r0, #0
   1cfe8:	ldrne	r0, [r4]
   1cfec:	ldrbne	r2, [r0, r8]
   1cff0:	stm	sl, {r1, r3}
   1cff4:	mov	r0, #1
   1cff8:	b	1d03c <__mempcpy_chk@plt+0xba5c>
   1cffc:	ldr	r0, [r4]
   1d000:	ldr	r2, [r4, #44]	; 0x2c
   1d004:	mov	r3, sl
   1d008:	add	r1, r0, r8
   1d00c:	ldr	r0, [sl]
   1d010:	sub	r7, r2, r8
   1d014:	mov	r2, r7
   1d018:	str	r0, [sp, #8]
   1d01c:	ldr	r0, [sl, #4]
   1d020:	str	r0, [sp, #4]
   1d024:	add	r0, sp, #24
   1d028:	bl	21fe4 <__mempcpy_chk@plt+0x10a04>
   1d02c:	sub	r1, r0, #1
   1d030:	cmn	r1, #3
   1d034:	bcs	1cfd4 <__mempcpy_chk@plt+0xb9f4>
   1d038:	ldr	r2, [sp, #24]
   1d03c:	add	r8, r0, r8
   1d040:	cmp	r8, r9
   1d044:	blt	1cffc <__mempcpy_chk@plt+0xba1c>
   1d048:	ldr	lr, [sp]
   1d04c:	sub	r7, r8, r9
   1d050:	cmn	r2, #1
   1d054:	str	r7, [r4, #28]
   1d058:	beq	1d08c <__mempcpy_chk@plt+0xbaac>
   1d05c:	ldrb	r0, [r4, #78]	; 0x4e
   1d060:	cmp	r0, #0
   1d064:	bne	1d120 <__mempcpy_chk@plt+0xbb40>
   1d068:	mov	r1, #0
   1d06c:	cmp	r2, #10
   1d070:	bne	1d080 <__mempcpy_chk@plt+0xbaa0>
   1d074:	ldrb	r1, [r4, #77]	; 0x4d
   1d078:	cmp	r1, #0
   1d07c:	movwne	r1, #2
   1d080:	str	r1, [r4, #60]	; 0x3c
   1d084:	ldr	r7, [r4, #28]
   1d088:	b	1d0a0 <__mempcpy_chk@plt+0xbac0>
   1d08c:	sub	r1, lr, #1
   1d090:	mov	r0, r4
   1d094:	mov	r2, r6
   1d098:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1d09c:	str	r0, [r4, #60]	; 0x3c
   1d0a0:	mov	r0, #0
   1d0a4:	cmp	r7, #0
   1d0a8:	bne	1d0dc <__mempcpy_chk@plt+0xbafc>
   1d0ac:	str	r0, [r4, #32]
   1d0b0:	b	1cbd8 <__mempcpy_chk@plt+0xb5f8>
   1d0b4:	mov	r2, #0
   1d0b8:	strb	r2, [r4, #76]	; 0x4c
   1d0bc:	sub	r2, r5, r9
   1d0c0:	ldr	r3, [r4, #44]	; 0x2c
   1d0c4:	ldr	r7, [r4, #52]	; 0x34
   1d0c8:	add	r3, r2, r3
   1d0cc:	add	r2, r2, r7
   1d0d0:	str	r3, [r4, #48]	; 0x30
   1d0d4:	str	r2, [r4, #56]	; 0x38
   1d0d8:	b	1cc78 <__mempcpy_chk@plt+0xb698>
   1d0dc:	cmp	r7, #1
   1d0e0:	blt	1d104 <__mempcpy_chk@plt+0xbb24>
   1d0e4:	ldr	r0, [r4, #8]
   1d0e8:	mov	r1, #0
   1d0ec:	mvn	r2, #0
   1d0f0:	str	r2, [r0, r1, lsl #2]
   1d0f4:	add	r1, r1, #1
   1d0f8:	ldr	r7, [r4, #28]
   1d0fc:	cmp	r1, r7
   1d100:	blt	1d0f0 <__mempcpy_chk@plt+0xbb10>
   1d104:	ldrb	r0, [r4, #75]	; 0x4b
   1d108:	cmp	r0, #0
   1d10c:	beq	1d148 <__mempcpy_chk@plt+0xbb68>
   1d110:	ldr	r0, [r4, #4]
   1d114:	mov	r1, #255	; 0xff
   1d118:	mov	r2, r7
   1d11c:	b	1cf28 <__mempcpy_chk@plt+0xb948>
   1d120:	mov	r0, r2
   1d124:	mov	r6, r2
   1d128:	bl	114d8 <iswalnum@plt>
   1d12c:	mov	r1, #1
   1d130:	cmp	r6, #95	; 0x5f
   1d134:	beq	1d080 <__mempcpy_chk@plt+0xbaa0>
   1d138:	mov	r2, r6
   1d13c:	cmp	r0, #0
   1d140:	beq	1d068 <__mempcpy_chk@plt+0xba88>
   1d144:	b	1d080 <__mempcpy_chk@plt+0xbaa0>
   1d148:	mov	r0, r7
   1d14c:	b	1d0ac <__mempcpy_chk@plt+0xbacc>
   1d150:	cmp	r2, #1
   1d154:	blt	1d198 <__mempcpy_chk@plt+0xbbb8>
   1d158:	sub	r1, r7, #1
   1d15c:	sub	r1, r1, r3
   1d160:	mvn	r3, #1
   1d164:	cmn	r1, #7
   1d168:	mvnle	r1, #6
   1d16c:	sub	ip, r3, r1
   1d170:	add	r1, sp, #14
   1d174:	ldrb	r3, [r7, ip]
   1d178:	sub	lr, ip, #1
   1d17c:	ldrb	r3, [r0, r3]
   1d180:	strb	r3, [r1, ip]
   1d184:	add	r3, ip, #1
   1d188:	mov	ip, lr
   1d18c:	cmp	r3, #1
   1d190:	bgt	1d174 <__mempcpy_chk@plt+0xbb94>
   1d194:	b	1ccf4 <__mempcpy_chk@plt+0xb714>
   1d198:	add	r1, sp, #14
   1d19c:	b	1ccf4 <__mempcpy_chk@plt+0xb714>
   1d1a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d1a4:	add	fp, sp, #24
   1d1a8:	mov	r3, r2
   1d1ac:	ldr	r2, [r0, #88]	; 0x58
   1d1b0:	mov	r5, r1
   1d1b4:	mov	r4, r0
   1d1b8:	mov	r1, r3
   1d1bc:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1d1c0:	ldr	r1, [r5, #8]
   1d1c4:	cmp	r1, #1
   1d1c8:	blt	1d258 <__mempcpy_chk@plt+0xbc78>
   1d1cc:	and	ip, r0, #8
   1d1d0:	and	lr, r0, #2
   1d1d4:	and	r2, r0, #1
   1d1d8:	ldr	r0, [r4, #84]	; 0x54
   1d1dc:	ldr	r5, [r5, #12]
   1d1e0:	movw	r8, #65280	; 0xff00
   1d1e4:	mov	r3, #0
   1d1e8:	movt	r8, #3
   1d1ec:	ldr	r4, [r0]
   1d1f0:	ldr	r0, [r5, r3, lsl #2]
   1d1f4:	add	r7, r4, r0, lsl #3
   1d1f8:	ldr	r7, [r7, #4]
   1d1fc:	uxtb	r6, r7
   1d200:	cmp	r6, #2
   1d204:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d208:	tst	r7, r8
   1d20c:	beq	1d25c <__mempcpy_chk@plt+0xbc7c>
   1d210:	cmp	r2, #0
   1d214:	bne	1d220 <__mempcpy_chk@plt+0xbc40>
   1d218:	ands	r6, r7, #1024	; 0x400
   1d21c:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d220:	cmp	r2, #0
   1d224:	andsne	r6, r7, #2048	; 0x800
   1d228:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d22c:	cmp	lr, #0
   1d230:	bne	1d23c <__mempcpy_chk@plt+0xbc5c>
   1d234:	ands	r6, r7, #8192	; 0x2000
   1d238:	bne	1d24c <__mempcpy_chk@plt+0xbc6c>
   1d23c:	cmp	ip, #0
   1d240:	bne	1d25c <__mempcpy_chk@plt+0xbc7c>
   1d244:	ands	r6, r7, #32768	; 0x8000
   1d248:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d24c:	add	r3, r3, #1
   1d250:	cmp	r3, r1
   1d254:	blt	1d1f0 <__mempcpy_chk@plt+0xbc10>
   1d258:	mov	r0, #0
   1d25c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d260:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d264:	add	fp, sp, #24
   1d268:	mov	r8, r0
   1d26c:	ldr	r0, [r0, #124]	; 0x7c
   1d270:	cmp	r0, #1
   1d274:	blt	1d2f8 <__mempcpy_chk@plt+0xbd18>
   1d278:	mov	r7, #0
   1d27c:	ldr	r0, [r8, #132]	; 0x84
   1d280:	ldr	r5, [r0, r7, lsl #2]
   1d284:	ldr	r0, [r5, #16]
   1d288:	cmp	r0, #1
   1d28c:	blt	1d2bc <__mempcpy_chk@plt+0xbcdc>
   1d290:	mov	r4, #0
   1d294:	ldr	r0, [r5, #20]
   1d298:	ldr	r6, [r0, r4, lsl #2]
   1d29c:	ldr	r0, [r6, #16]
   1d2a0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1d2a4:	mov	r0, r6
   1d2a8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1d2ac:	ldr	r0, [r5, #16]
   1d2b0:	add	r4, r4, #1
   1d2b4:	cmp	r4, r0
   1d2b8:	blt	1d294 <__mempcpy_chk@plt+0xbcb4>
   1d2bc:	ldr	r0, [r5, #20]
   1d2c0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1d2c4:	ldr	r0, [r5, #8]
   1d2c8:	cmp	r0, #0
   1d2cc:	beq	1d2e0 <__mempcpy_chk@plt+0xbd00>
   1d2d0:	ldr	r0, [r0, #8]
   1d2d4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1d2d8:	ldr	r0, [r5, #8]
   1d2dc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1d2e0:	mov	r0, r5
   1d2e4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1d2e8:	ldr	r0, [r8, #124]	; 0x7c
   1d2ec:	add	r7, r7, #1
   1d2f0:	cmp	r7, r0
   1d2f4:	blt	1d27c <__mempcpy_chk@plt+0xbc9c>
   1d2f8:	mov	r0, #0
   1d2fc:	str	r0, [r8, #108]	; 0x6c
   1d300:	str	r0, [r8, #124]	; 0x7c
   1d304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d308:	push	{r4, r5, fp, lr}
   1d30c:	add	fp, sp, #8
   1d310:	mov	r4, r0
   1d314:	cmn	r1, #1
   1d318:	ble	1d354 <__mempcpy_chk@plt+0xbd74>
   1d31c:	ldr	r0, [r4, #48]	; 0x30
   1d320:	cmp	r0, r1
   1d324:	beq	1d3b8 <__mempcpy_chk@plt+0xbdd8>
   1d328:	ldr	r0, [r4, #80]	; 0x50
   1d32c:	cmp	r0, #2
   1d330:	blt	1d35c <__mempcpy_chk@plt+0xbd7c>
   1d334:	ldr	r0, [r4, #8]
   1d338:	ldr	r5, [r0, r1, lsl #2]
   1d33c:	cmn	r5, #1
   1d340:	bne	1d390 <__mempcpy_chk@plt+0xbdb0>
   1d344:	sub	r2, r1, #1
   1d348:	cmp	r1, #0
   1d34c:	mov	r1, r2
   1d350:	bgt	1d338 <__mempcpy_chk@plt+0xbd58>
   1d354:	ldr	r0, [r4, #60]	; 0x3c
   1d358:	pop	{r4, r5, fp, pc}
   1d35c:	ldr	r0, [r4, #4]
   1d360:	ldr	r2, [r4, #68]	; 0x44
   1d364:	ldrb	r1, [r0, r1]
   1d368:	ubfx	r0, r1, #5, #3
   1d36c:	and	r3, r1, #31
   1d370:	ldr	r2, [r2, r0, lsl #2]
   1d374:	mov	r0, #1
   1d378:	tst	r2, r0, lsl r3
   1d37c:	bne	1d3b4 <__mempcpy_chk@plt+0xbdd4>
   1d380:	mov	r0, #0
   1d384:	cmp	r1, #10
   1d388:	popne	{r4, r5, fp, pc}
   1d38c:	b	1d3a8 <__mempcpy_chk@plt+0xbdc8>
   1d390:	ldrb	r0, [r4, #78]	; 0x4e
   1d394:	cmp	r0, #0
   1d398:	bne	1d3c4 <__mempcpy_chk@plt+0xbde4>
   1d39c:	mov	r0, #0
   1d3a0:	cmp	r5, #10
   1d3a4:	bne	1d3b4 <__mempcpy_chk@plt+0xbdd4>
   1d3a8:	ldrb	r0, [r4, #77]	; 0x4d
   1d3ac:	cmp	r0, #0
   1d3b0:	movwne	r0, #2
   1d3b4:	pop	{r4, r5, fp, pc}
   1d3b8:	and	r0, r2, #2
   1d3bc:	eor	r0, r0, #10
   1d3c0:	pop	{r4, r5, fp, pc}
   1d3c4:	mov	r0, r5
   1d3c8:	bl	114d8 <iswalnum@plt>
   1d3cc:	mov	r1, r0
   1d3d0:	mov	r0, #1
   1d3d4:	cmp	r5, #95	; 0x5f
   1d3d8:	beq	1d3b4 <__mempcpy_chk@plt+0xbdd4>
   1d3dc:	cmp	r1, #0
   1d3e0:	beq	1d39c <__mempcpy_chk@plt+0xbdbc>
   1d3e4:	b	1d3b4 <__mempcpy_chk@plt+0xbdd4>
   1d3e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3ec:	add	fp, sp, #28
   1d3f0:	sub	sp, sp, #4
   1d3f4:	mov	sl, r0
   1d3f8:	ldr	r0, [r1, #4]
   1d3fc:	cmp	r0, #1
   1d400:	blt	1d4cc <__mempcpy_chk@plt+0xbeec>
   1d404:	ldr	r7, [sl, #84]	; 0x54
   1d408:	mov	r8, r2
   1d40c:	mov	r5, r1
   1d410:	mov	r4, #0
   1d414:	b	1d43c <__mempcpy_chk@plt+0xbe5c>
   1d418:	ldr	r0, [sl, #132]	; 0x84
   1d41c:	lsl	r1, r9, #3
   1d420:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1d424:	cmp	r0, #0
   1d428:	beq	1d4d8 <__mempcpy_chk@plt+0xbef8>
   1d42c:	lsl	r1, r9, #1
   1d430:	str	r1, [sl, #128]	; 0x80
   1d434:	str	r0, [sl, #132]	; 0x84
   1d438:	b	1d484 <__mempcpy_chk@plt+0xbea4>
   1d43c:	ldr	r1, [r5, #8]
   1d440:	ldr	r6, [r1, r4, lsl #2]
   1d444:	ldr	r1, [r7]
   1d448:	add	r2, r1, r6, lsl #3
   1d44c:	ldrb	r2, [r2, #4]
   1d450:	cmp	r2, #8
   1d454:	bne	1d4c0 <__mempcpy_chk@plt+0xbee0>
   1d458:	ldr	r1, [r1, r6, lsl #3]
   1d45c:	cmp	r1, #31
   1d460:	bgt	1d4c0 <__mempcpy_chk@plt+0xbee0>
   1d464:	ldr	r2, [r7, #80]	; 0x50
   1d468:	mov	r3, #1
   1d46c:	tst	r2, r3, lsl r1
   1d470:	beq	1d4c0 <__mempcpy_chk@plt+0xbee0>
   1d474:	ldr	r9, [sl, #124]	; 0x7c
   1d478:	ldr	r0, [sl, #128]	; 0x80
   1d47c:	cmp	r9, r0
   1d480:	beq	1d418 <__mempcpy_chk@plt+0xbe38>
   1d484:	mov	r0, #1
   1d488:	mov	r1, #24
   1d48c:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1d490:	ldr	r1, [sl, #124]	; 0x7c
   1d494:	ldr	r2, [sl, #132]	; 0x84
   1d498:	str	r0, [r2, r1, lsl #2]
   1d49c:	ldr	r0, [sl, #132]	; 0x84
   1d4a0:	ldr	r0, [r0, r1, lsl #2]
   1d4a4:	cmp	r0, #0
   1d4a8:	beq	1d4d8 <__mempcpy_chk@plt+0xbef8>
   1d4ac:	add	r1, r1, #1
   1d4b0:	str	r6, [r0, #4]
   1d4b4:	str	r1, [sl, #124]	; 0x7c
   1d4b8:	str	r8, [r0]
   1d4bc:	ldr	r0, [r5, #4]
   1d4c0:	add	r4, r4, #1
   1d4c4:	cmp	r4, r0
   1d4c8:	blt	1d43c <__mempcpy_chk@plt+0xbe5c>
   1d4cc:	mov	r0, #0
   1d4d0:	sub	sp, fp, #28
   1d4d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4d8:	mov	r0, #12
   1d4dc:	b	1d4d0 <__mempcpy_chk@plt+0xbef0>
   1d4e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4e4:	add	fp, sp, #28
   1d4e8:	sub	sp, sp, #76	; 0x4c
   1d4ec:	mov	lr, r0
   1d4f0:	ldr	r0, [r1, #4]
   1d4f4:	cmp	r0, #1
   1d4f8:	blt	1dbd8 <__mempcpy_chk@plt+0xc5f8>
   1d4fc:	ldr	r2, [lr, #84]	; 0x54
   1d500:	ldr	r0, [lr, #40]	; 0x28
   1d504:	mov	r3, #0
   1d508:	str	lr, [sp, #48]	; 0x30
   1d50c:	str	r1, [sp, #16]
   1d510:	str	r0, [fp, #-48]	; 0xffffffd0
   1d514:	str	r2, [sp, #32]
   1d518:	ldr	r0, [r1, #8]
   1d51c:	str	r3, [sp, #36]	; 0x24
   1d520:	ldr	r3, [r0, r3, lsl #2]
   1d524:	ldr	r0, [r2]
   1d528:	add	r0, r0, r3, lsl #3
   1d52c:	mov	r1, r3
   1d530:	str	r3, [sp, #52]	; 0x34
   1d534:	ldr	r4, [r0, #4]
   1d538:	uxtb	r0, r4
   1d53c:	cmp	r0, #4
   1d540:	bne	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d544:	movw	r0, #65280	; 0xff00
   1d548:	movt	r0, #3
   1d54c:	tst	r4, r0
   1d550:	beq	1d5ac <__mempcpy_chk@plt+0xbfcc>
   1d554:	ldr	r2, [lr, #88]	; 0x58
   1d558:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1d55c:	mov	r0, lr
   1d560:	mov	r5, lr
   1d564:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1d568:	mov	lr, r5
   1d56c:	and	r1, r0, #1
   1d570:	tst	r4, #1024	; 0x400
   1d574:	beq	1d580 <__mempcpy_chk@plt+0xbfa0>
   1d578:	cmp	r1, #0
   1d57c:	beq	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d580:	tst	r4, #2048	; 0x800
   1d584:	cmpne	r1, #0
   1d588:	bne	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d58c:	tst	r4, #8192	; 0x2000
   1d590:	beq	1d59c <__mempcpy_chk@plt+0xbfbc>
   1d594:	ands	r1, r0, #2
   1d598:	beq	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d59c:	tst	r4, #32768	; 0x8000
   1d5a0:	beq	1d5ac <__mempcpy_chk@plt+0xbfcc>
   1d5a4:	ands	r0, r0, #8
   1d5a8:	beq	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d5ac:	ldr	r0, [lr, #108]	; 0x6c
   1d5b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1d5b4:	ldr	r4, [lr, #4]
   1d5b8:	ldr	r7, [lr, #84]	; 0x54
   1d5bc:	mov	r5, lr
   1d5c0:	str	r0, [sp, #12]
   1d5c4:	mov	r0, lr
   1d5c8:	bl	1e048 <__mempcpy_chk@plt+0xca68>
   1d5cc:	mov	lr, r5
   1d5d0:	cmn	r0, #1
   1d5d4:	beq	1d604 <__mempcpy_chk@plt+0xc024>
   1d5d8:	ldr	r1, [lr, #116]	; 0x74
   1d5dc:	add	r0, r0, r0, lsl #1
   1d5e0:	add	r0, r1, r0, lsl #3
   1d5e4:	ldr	r1, [r0]
   1d5e8:	ldr	r2, [sp, #52]	; 0x34
   1d5ec:	cmp	r1, r2
   1d5f0:	beq	1d9ac <__mempcpy_chk@plt+0xc3cc>
   1d5f4:	ldrb	r1, [r0, #20]
   1d5f8:	add	r0, r0, #24
   1d5fc:	cmp	r1, #0
   1d600:	bne	1d5e4 <__mempcpy_chk@plt+0xc004>
   1d604:	ldr	r0, [lr, #124]	; 0x7c
   1d608:	cmp	r0, #1
   1d60c:	blt	1d9ac <__mempcpy_chk@plt+0xc3cc>
   1d610:	ldr	r0, [r7]
   1d614:	ldr	r1, [sp, #52]	; 0x34
   1d618:	mov	r2, #0
   1d61c:	mov	ip, r4
   1d620:	str	r7, [sp, #24]
   1d624:	ldr	r8, [r0, r1, lsl #3]
   1d628:	str	r8, [sp, #28]
   1d62c:	ldr	r1, [lr, #132]	; 0x84
   1d630:	str	r2, [sp, #40]	; 0x28
   1d634:	ldr	r6, [r1, r2, lsl #2]
   1d638:	ldr	r1, [r6, #4]
   1d63c:	ldr	r0, [r0, r1, lsl #3]
   1d640:	cmp	r0, r8
   1d644:	bne	1d768 <__mempcpy_chk@plt+0xc188>
   1d648:	ldr	r0, [r6, #16]
   1d64c:	ldr	r9, [r6]
   1d650:	mov	r8, #0
   1d654:	str	r6, [sp, #44]	; 0x2c
   1d658:	cmp	r0, #1
   1d65c:	blt	1d66c <__mempcpy_chk@plt+0xc08c>
   1d660:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1d664:	mov	r7, r9
   1d668:	b	1d6a0 <__mempcpy_chk@plt+0xc0c0>
   1d66c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1d670:	b	1d744 <__mempcpy_chk@plt+0xc164>
   1d674:	ldr	r2, [lr, #48]	; 0x30
   1d678:	cmp	r1, r2
   1d67c:	bgt	1d740 <__mempcpy_chk@plt+0xc160>
   1d680:	mov	r0, lr
   1d684:	mov	r6, lr
   1d688:	bl	1e0d0 <__mempcpy_chk@plt+0xcaf0>
   1d68c:	cmp	r0, #0
   1d690:	bne	1dbe8 <__mempcpy_chk@plt+0xc608>
   1d694:	ldr	ip, [r6, #4]
   1d698:	mov	r1, r6
   1d69c:	b	1d6c8 <__mempcpy_chk@plt+0xc0e8>
   1d6a0:	ldr	r1, [r6, #20]
   1d6a4:	ldr	sl, [r1, r8, lsl #2]
   1d6a8:	ldr	r9, [sl, #4]
   1d6ac:	sub	r4, r9, r7
   1d6b0:	cmp	r4, #1
   1d6b4:	blt	1d6f0 <__mempcpy_chk@plt+0xc110>
   1d6b8:	ldr	r2, [lr, #28]
   1d6bc:	add	r1, r4, r5
   1d6c0:	cmp	r1, r2
   1d6c4:	bgt	1d674 <__mempcpy_chk@plt+0xc094>
   1d6c8:	add	r0, ip, r5
   1d6cc:	add	r1, ip, r7
   1d6d0:	mov	r2, r4
   1d6d4:	mov	r6, ip
   1d6d8:	bl	113a0 <memcmp@plt>
   1d6dc:	mov	ip, r6
   1d6e0:	ldr	r6, [sp, #44]	; 0x2c
   1d6e4:	ldr	lr, [sp, #48]	; 0x30
   1d6e8:	cmp	r0, #0
   1d6ec:	bne	1d73c <__mempcpy_chk@plt+0xc15c>
   1d6f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d6f4:	ldr	r3, [sp, #52]	; 0x34
   1d6f8:	mov	r1, r6
   1d6fc:	mov	r2, sl
   1d700:	mov	r7, lr
   1d704:	str	r0, [sp]
   1d708:	mov	r0, lr
   1d70c:	bl	1e160 <__mempcpy_chk@plt+0xcb80>
   1d710:	cmp	r0, #1
   1d714:	bhi	1dbe8 <__mempcpy_chk@plt+0xc608>
   1d718:	ldr	r0, [r6, #16]
   1d71c:	ldr	ip, [r7, #4]
   1d720:	add	r8, r8, #1
   1d724:	mov	lr, r7
   1d728:	add	r5, r4, r5
   1d72c:	mov	r7, r9
   1d730:	cmp	r8, r0
   1d734:	blt	1d6a0 <__mempcpy_chk@plt+0xc0c0>
   1d738:	b	1d744 <__mempcpy_chk@plt+0xc164>
   1d73c:	ldr	r0, [r6, #16]
   1d740:	mov	r9, r7
   1d744:	cmp	r8, r0
   1d748:	blt	1d760 <__mempcpy_chk@plt+0xc180>
   1d74c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d750:	cmp	r8, #0
   1d754:	addne	r9, r9, #1
   1d758:	cmp	r9, r0
   1d75c:	ble	1d784 <__mempcpy_chk@plt+0xc1a4>
   1d760:	ldr	r7, [sp, #24]
   1d764:	ldr	r8, [sp, #28]
   1d768:	ldr	r2, [sp, #40]	; 0x28
   1d76c:	ldr	r0, [lr, #124]	; 0x7c
   1d770:	add	r2, r2, #1
   1d774:	cmp	r2, r0
   1d778:	bge	1d9b8 <__mempcpy_chk@plt+0xc3d8>
   1d77c:	ldr	r0, [r7]
   1d780:	b	1d62c <__mempcpy_chk@plt+0xc04c>
   1d784:	ldr	r7, [sp, #24]
   1d788:	ldr	r8, [sp, #28]
   1d78c:	b	1d8fc <__mempcpy_chk@plt+0xc31c>
   1d790:	cmn	r4, #1
   1d794:	beq	1d990 <__mempcpy_chk@plt+0xc3b0>
   1d798:	ldr	r1, [r6, #8]
   1d79c:	mov	r7, ip
   1d7a0:	str	r5, [sp, #20]
   1d7a4:	cmp	r1, #0
   1d7a8:	bne	1d7d8 <__mempcpy_chk@plt+0xc1f8>
   1d7ac:	ldr	r0, [r6]
   1d7b0:	add	r1, sl, #1
   1d7b4:	mov	r5, #12
   1d7b8:	sub	r1, r1, r0
   1d7bc:	mov	r0, #12
   1d7c0:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1d7c4:	ldr	r6, [sp, #44]	; 0x2c
   1d7c8:	mov	r1, r0
   1d7cc:	cmp	r0, #0
   1d7d0:	str	r0, [r6, #8]
   1d7d4:	beq	1dbec <__mempcpy_chk@plt+0xc60c>
   1d7d8:	ldr	r3, [r6]
   1d7dc:	ldr	r2, [r6, #4]
   1d7e0:	stm	sp, {r4, sl}
   1d7e4:	mov	r0, #9
   1d7e8:	str	r0, [sp, #8]
   1d7ec:	ldr	r0, [sp, #48]	; 0x30
   1d7f0:	bl	1e2b0 <__mempcpy_chk@plt+0xccd0>
   1d7f4:	ldr	r6, [sp, #44]	; 0x2c
   1d7f8:	ldr	r5, [sp, #20]
   1d7fc:	mov	ip, r7
   1d800:	cmp	r0, #1
   1d804:	mov	r7, r9
   1d808:	beq	1d994 <__mempcpy_chk@plt+0xc3b4>
   1d80c:	cmp	r0, #0
   1d810:	bne	1dbe8 <__mempcpy_chk@plt+0xc608>
   1d814:	ldr	r1, [r6, #12]
   1d818:	ldr	r0, [r6, #16]
   1d81c:	ldr	r7, [sp, #48]	; 0x30
   1d820:	cmp	r0, r1
   1d824:	beq	1d8d0 <__mempcpy_chk@plt+0xc2f0>
   1d828:	mov	r0, #1
   1d82c:	mov	r1, #20
   1d830:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1d834:	cmp	r0, #0
   1d838:	beq	1dbf8 <__mempcpy_chk@plt+0xc618>
   1d83c:	ldr	r1, [sp, #44]	; 0x2c
   1d840:	mov	r2, r0
   1d844:	ldr	r0, [r1, #16]
   1d848:	ldr	r3, [r1, #20]
   1d84c:	str	r2, [r3, r0, lsl #2]
   1d850:	stm	r2, {r4, sl}
   1d854:	add	r0, r0, #1
   1d858:	str	r0, [r1, #16]
   1d85c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d860:	ldr	r3, [sp, #52]	; 0x34
   1d864:	str	r0, [sp]
   1d868:	mov	r0, r7
   1d86c:	bl	1e160 <__mempcpy_chk@plt+0xcb80>
   1d870:	cmp	r0, #1
   1d874:	bhi	1dbe8 <__mempcpy_chk@plt+0xc608>
   1d878:	ldr	ip, [r7, #4]
   1d87c:	ldr	r6, [sp, #44]	; 0x2c
   1d880:	ldr	r5, [sp, #20]
   1d884:	b	1d990 <__mempcpy_chk@plt+0xc3b0>
   1d888:	ldr	r0, [lr, #48]	; 0x30
   1d88c:	cmp	r5, r0
   1d890:	bge	1d768 <__mempcpy_chk@plt+0xc188>
   1d894:	add	r4, r5, #1
   1d898:	mov	r0, lr
   1d89c:	mov	r9, r7
   1d8a0:	mov	r7, r5
   1d8a4:	mov	r5, lr
   1d8a8:	mov	r1, r4
   1d8ac:	bl	1dc18 <__mempcpy_chk@plt+0xc638>
   1d8b0:	cmp	r0, #0
   1d8b4:	bne	1dbe8 <__mempcpy_chk@plt+0xc608>
   1d8b8:	ldr	ip, [r5, #4]
   1d8bc:	ldr	r6, [sp, #44]	; 0x2c
   1d8c0:	mov	lr, r5
   1d8c4:	mov	r5, r7
   1d8c8:	mov	r7, r9
   1d8cc:	b	1d91c <__mempcpy_chk@plt+0xc33c>
   1d8d0:	mov	r1, #1
   1d8d4:	orr	r5, r1, r0, lsl #1
   1d8d8:	ldr	r0, [r6, #20]
   1d8dc:	lsl	r1, r5, #2
   1d8e0:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1d8e4:	cmp	r0, #0
   1d8e8:	beq	1dbf8 <__mempcpy_chk@plt+0xc618>
   1d8ec:	ldr	r8, [sp, #28]
   1d8f0:	str	r5, [r6, #12]
   1d8f4:	str	r0, [r6, #20]
   1d8f8:	b	1d828 <__mempcpy_chk@plt+0xc248>
   1d8fc:	ldr	r0, [r6]
   1d900:	mov	sl, r9
   1d904:	cmp	r9, r0
   1d908:	ble	1d934 <__mempcpy_chk@plt+0xc354>
   1d90c:	ldr	r0, [lr, #28]
   1d910:	cmp	r5, r0
   1d914:	bge	1d888 <__mempcpy_chk@plt+0xc2a8>
   1d918:	add	r4, r5, #1
   1d91c:	add	r1, ip, sl
   1d920:	ldrb	r0, [ip, r5]
   1d924:	ldrb	r1, [r1, #-1]
   1d928:	cmp	r0, r1
   1d92c:	beq	1d938 <__mempcpy_chk@plt+0xc358>
   1d930:	b	1d768 <__mempcpy_chk@plt+0xc188>
   1d934:	mov	r4, r5
   1d938:	ldr	r0, [lr, #100]	; 0x64
   1d93c:	mov	r5, r4
   1d940:	ldr	r2, [r0, sl, lsl #2]
   1d944:	cmp	r2, #0
   1d948:	beq	1d994 <__mempcpy_chk@plt+0xc3b4>
   1d94c:	ldr	r0, [r2, #8]
   1d950:	cmp	r0, #1
   1d954:	blt	1d994 <__mempcpy_chk@plt+0xc3b4>
   1d958:	ldr	r1, [r7]
   1d95c:	ldr	r2, [r2, #12]
   1d960:	mov	r9, r7
   1d964:	mov	r3, #0
   1d968:	ldr	r4, [r2, r3, lsl #2]
   1d96c:	add	r7, r1, r4, lsl #3
   1d970:	ldrb	r7, [r7, #4]
   1d974:	cmp	r7, #9
   1d978:	ldreq	r7, [r1, r4, lsl #3]
   1d97c:	cmpeq	r7, r8
   1d980:	beq	1d790 <__mempcpy_chk@plt+0xc1b0>
   1d984:	add	r3, r3, #1
   1d988:	cmp	r3, r0
   1d98c:	blt	1d968 <__mempcpy_chk@plt+0xc388>
   1d990:	mov	r7, r9
   1d994:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d998:	ldr	lr, [sp, #48]	; 0x30
   1d99c:	add	r9, sl, #1
   1d9a0:	cmp	sl, r0
   1d9a4:	blt	1d8fc <__mempcpy_chk@plt+0xc31c>
   1d9a8:	b	1d768 <__mempcpy_chk@plt+0xc188>
   1d9ac:	mov	r0, #0
   1d9b0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d9b4:	b	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d9b8:	ldr	r0, [lr, #108]	; 0x6c
   1d9bc:	ldr	r7, [sp, #12]
   1d9c0:	mov	r1, #0
   1d9c4:	str	r1, [fp, #-32]	; 0xffffffe0
   1d9c8:	cmp	r7, r0
   1d9cc:	bge	1dbbc <__mempcpy_chk@plt+0xc5dc>
   1d9d0:	add	r0, r7, r7, lsl #1
   1d9d4:	lsl	r5, r0, #3
   1d9d8:	ldr	r0, [lr, #116]	; 0x74
   1d9dc:	ldr	r2, [sp, #52]	; 0x34
   1d9e0:	ldr	r1, [r0, r5]
   1d9e4:	cmp	r1, r2
   1d9e8:	bne	1dba4 <__mempcpy_chk@plt+0xc5c4>
   1d9ec:	add	r0, r0, r5
   1d9f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1d9f4:	ldr	r1, [r0, #4]
   1d9f8:	cmp	r1, r2
   1d9fc:	bne	1dba4 <__mempcpy_chk@plt+0xc5c4>
   1da00:	ldr	r2, [r0, #8]
   1da04:	ldr	r3, [r0, #12]
   1da08:	ldr	r0, [sp, #32]
   1da0c:	ldr	r4, [r0, #24]
   1da10:	cmp	r3, r2
   1da14:	bne	1da30 <__mempcpy_chk@plt+0xc450>
   1da18:	ldr	r1, [sp, #52]	; 0x34
   1da1c:	ldr	r0, [r0, #20]
   1da20:	add	r1, r1, r1, lsl #1
   1da24:	add	r0, r0, r1, lsl #2
   1da28:	ldr	r0, [r0, #8]
   1da2c:	b	1da3c <__mempcpy_chk@plt+0xc45c>
   1da30:	ldr	r0, [r0, #12]
   1da34:	ldr	r1, [sp, #52]	; 0x34
   1da38:	add	r0, r0, r1, lsl #2
   1da3c:	ldr	r0, [r0]
   1da40:	ldr	r8, [fp, #-48]	; 0xffffffd0
   1da44:	ldr	r6, [sp, #48]	; 0x30
   1da48:	str	r2, [sp, #44]	; 0x2c
   1da4c:	str	r3, [sp, #40]	; 0x28
   1da50:	add	r9, r0, r0, lsl #1
   1da54:	add	r0, r3, r8
   1da58:	sub	sl, r0, r2
   1da5c:	ldr	r2, [r6, #88]	; 0x58
   1da60:	mov	r0, r6
   1da64:	sub	r1, sl, #1
   1da68:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1da6c:	mov	r3, r0
   1da70:	ldr	r0, [r6, #100]	; 0x64
   1da74:	ldr	r1, [r0, r8, lsl #2]
   1da78:	ldr	r2, [r0, sl, lsl #2]
   1da7c:	add	r8, r4, r9, lsl #2
   1da80:	cmp	r1, #0
   1da84:	ldrne	r0, [r1, #8]
   1da88:	moveq	r0, #0
   1da8c:	cmp	r2, #0
   1da90:	str	r0, [sp, #28]
   1da94:	sub	r0, fp, #44	; 0x2c
   1da98:	beq	1db04 <__mempcpy_chk@plt+0xc524>
   1da9c:	ldr	r1, [r2, #40]	; 0x28
   1daa0:	mov	r2, r8
   1daa4:	mov	r4, r3
   1daa8:	mov	r6, r0
   1daac:	bl	1de44 <__mempcpy_chk@plt+0xc864>
   1dab0:	cmp	r0, #0
   1dab4:	str	r0, [fp, #-32]	; 0xffffffe0
   1dab8:	bne	1dc00 <__mempcpy_chk@plt+0xc620>
   1dabc:	ldr	r1, [sp, #32]
   1dac0:	sub	r0, fp, #32
   1dac4:	mov	r2, r6
   1dac8:	mov	r3, r4
   1dacc:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1dad0:	ldr	r4, [sp, #48]	; 0x30
   1dad4:	ldr	r1, [r4, #100]	; 0x64
   1dad8:	str	r0, [r1, sl, lsl #2]
   1dadc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dae0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1dae4:	ldr	r3, [r4, #100]	; 0x64
   1dae8:	ldr	r1, [r3, sl, lsl #2]
   1daec:	cmp	r1, #0
   1daf0:	bne	1db44 <__mempcpy_chk@plt+0xc564>
   1daf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1daf8:	cmp	r0, #0
   1dafc:	beq	1db44 <__mempcpy_chk@plt+0xc564>
   1db00:	b	1dbe0 <__mempcpy_chk@plt+0xc600>
   1db04:	ldr	r1, [sp, #32]
   1db08:	sub	r0, fp, #32
   1db0c:	mov	r2, r8
   1db10:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1db14:	ldr	r1, [r6, #100]	; 0x64
   1db18:	str	r0, [r1, sl, lsl #2]
   1db1c:	ldr	r3, [r6, #100]	; 0x64
   1db20:	ldr	r1, [r3, sl, lsl #2]
   1db24:	cmp	r1, #0
   1db28:	bne	1db44 <__mempcpy_chk@plt+0xc564>
   1db2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1db30:	ldr	r1, [sp, #44]	; 0x2c
   1db34:	ldr	r2, [sp, #40]	; 0x28
   1db38:	cmp	r0, #0
   1db3c:	beq	1db4c <__mempcpy_chk@plt+0xc56c>
   1db40:	b	1dbe0 <__mempcpy_chk@plt+0xc600>
   1db44:	ldr	r1, [sp, #44]	; 0x2c
   1db48:	ldr	r2, [sp, #40]	; 0x28
   1db4c:	cmp	r2, r1
   1db50:	bne	1dba4 <__mempcpy_chk@plt+0xc5c4>
   1db54:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1db58:	ldr	r0, [r3, r1, lsl #2]
   1db5c:	ldr	r1, [sp, #28]
   1db60:	ldr	r0, [r0, #8]
   1db64:	cmp	r0, r1
   1db68:	ble	1dba4 <__mempcpy_chk@plt+0xc5c4>
   1db6c:	ldr	r4, [sp, #48]	; 0x30
   1db70:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1db74:	mov	r1, r8
   1db78:	mov	r0, r4
   1db7c:	bl	1d3e8 <__mempcpy_chk@plt+0xbe08>
   1db80:	cmp	r0, #0
   1db84:	str	r0, [fp, #-32]	; 0xffffffe0
   1db88:	bne	1dbe0 <__mempcpy_chk@plt+0xc600>
   1db8c:	mov	r0, r4
   1db90:	mov	r1, r8
   1db94:	bl	1d4e0 <__mempcpy_chk@plt+0xbf00>
   1db98:	cmp	r0, #0
   1db9c:	str	r0, [fp, #-32]	; 0xffffffe0
   1dba0:	bne	1dbe0 <__mempcpy_chk@plt+0xc600>
   1dba4:	ldr	lr, [sp, #48]	; 0x30
   1dba8:	add	r7, r7, #1
   1dbac:	add	r5, r5, #24
   1dbb0:	ldr	r0, [lr, #108]	; 0x6c
   1dbb4:	cmp	r7, r0
   1dbb8:	blt	1d9d8 <__mempcpy_chk@plt+0xc3f8>
   1dbbc:	ldr	r1, [sp, #16]
   1dbc0:	ldr	r3, [sp, #36]	; 0x24
   1dbc4:	ldr	r2, [sp, #32]
   1dbc8:	ldr	r0, [r1, #4]
   1dbcc:	add	r3, r3, #1
   1dbd0:	cmp	r3, r0
   1dbd4:	blt	1d518 <__mempcpy_chk@plt+0xbf38>
   1dbd8:	mov	r0, #0
   1dbdc:	str	r0, [fp, #-32]	; 0xffffffe0
   1dbe0:	sub	sp, fp, #28
   1dbe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbe8:	mov	r5, r0
   1dbec:	str	r5, [fp, #-32]	; 0xffffffe0
   1dbf0:	mov	r0, r5
   1dbf4:	b	1dbe0 <__mempcpy_chk@plt+0xc600>
   1dbf8:	mov	r5, #12
   1dbfc:	b	1dbec <__mempcpy_chk@plt+0xc60c>
   1dc00:	mov	r1, r0
   1dc04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1dc08:	mov	r4, r1
   1dc0c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1dc10:	mov	r0, r4
   1dc14:	b	1dbe0 <__mempcpy_chk@plt+0xc600>
   1dc18:	push	{r4, r5, fp, lr}
   1dc1c:	add	fp, sp, #8
   1dc20:	mov	r4, r0
   1dc24:	ldr	r0, [r0, #36]	; 0x24
   1dc28:	mov	r5, #12
   1dc2c:	cmn	r0, #-536870910	; 0xe0000002
   1dc30:	bhi	1dce8 <__mempcpy_chk@plt+0xc708>
   1dc34:	ldr	r2, [r4, #48]	; 0x30
   1dc38:	cmp	r2, r0, lsl #1
   1dc3c:	lslge	r2, r0, #1
   1dc40:	mov	r0, r4
   1dc44:	cmp	r2, r1
   1dc48:	movle	r2, r1
   1dc4c:	mov	r1, r2
   1dc50:	bl	17c20 <__mempcpy_chk@plt+0x6640>
   1dc54:	cmp	r0, #0
   1dc58:	bne	1dcac <__mempcpy_chk@plt+0xc6cc>
   1dc5c:	ldr	r0, [r4, #100]	; 0x64
   1dc60:	cmp	r0, #0
   1dc64:	beq	1dc84 <__mempcpy_chk@plt+0xc6a4>
   1dc68:	ldr	r1, [r4, #36]	; 0x24
   1dc6c:	mov	r2, #4
   1dc70:	add	r1, r2, r1, lsl #2
   1dc74:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1dc78:	cmp	r0, #0
   1dc7c:	beq	1dce8 <__mempcpy_chk@plt+0xc708>
   1dc80:	str	r0, [r4, #100]	; 0x64
   1dc84:	ldrb	r1, [r4, #72]	; 0x48
   1dc88:	ldr	r0, [r4, #80]	; 0x50
   1dc8c:	cmp	r1, #0
   1dc90:	beq	1dcb4 <__mempcpy_chk@plt+0xc6d4>
   1dc94:	cmp	r0, #2
   1dc98:	blt	1dcc8 <__mempcpy_chk@plt+0xc6e8>
   1dc9c:	mov	r0, r4
   1dca0:	bl	17cc0 <__mempcpy_chk@plt+0x66e0>
   1dca4:	cmp	r0, #0
   1dca8:	beq	1dce4 <__mempcpy_chk@plt+0xc704>
   1dcac:	mov	r5, r0
   1dcb0:	b	1dce8 <__mempcpy_chk@plt+0xc708>
   1dcb4:	cmp	r0, #2
   1dcb8:	blt	1dcd4 <__mempcpy_chk@plt+0xc6f4>
   1dcbc:	mov	r0, r4
   1dcc0:	bl	1829c <__mempcpy_chk@plt+0x6cbc>
   1dcc4:	b	1dce4 <__mempcpy_chk@plt+0xc704>
   1dcc8:	mov	r0, r4
   1dccc:	bl	18230 <__mempcpy_chk@plt+0x6c50>
   1dcd0:	b	1dce4 <__mempcpy_chk@plt+0xc704>
   1dcd4:	ldr	r0, [r4, #64]	; 0x40
   1dcd8:	cmp	r0, #0
   1dcdc:	movne	r0, r4
   1dce0:	blne	18478 <__mempcpy_chk@plt+0x6e98>
   1dce4:	mov	r5, #0
   1dce8:	mov	r0, r5
   1dcec:	pop	{r4, r5, fp, pc}
   1dcf0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1dcf4:	add	fp, sp, #24
   1dcf8:	sub	sp, sp, #16
   1dcfc:	mov	r8, r0
   1dd00:	mov	r4, r1
   1dd04:	ldr	r5, [r1, #40]	; 0x28
   1dd08:	ldr	r7, [r1, #84]	; 0x54
   1dd0c:	ldr	r0, [r1, #100]	; 0x64
   1dd10:	ldr	r1, [r1, #104]	; 0x68
   1dd14:	mov	r6, r2
   1dd18:	cmp	r5, r1
   1dd1c:	ble	1dd2c <__mempcpy_chk@plt+0xc74c>
   1dd20:	str	r6, [r0, r5, lsl #2]
   1dd24:	str	r5, [r4, #104]	; 0x68
   1dd28:	b	1ddd0 <__mempcpy_chk@plt+0xc7f0>
   1dd2c:	ldr	r1, [r0, r5, lsl #2]
   1dd30:	cmp	r1, #0
   1dd34:	beq	1dd70 <__mempcpy_chk@plt+0xc790>
   1dd38:	ldr	r2, [r1, #40]	; 0x28
   1dd3c:	cmp	r6, #0
   1dd40:	beq	1dd78 <__mempcpy_chk@plt+0xc798>
   1dd44:	ldr	r6, [r6, #40]	; 0x28
   1dd48:	mov	r0, sp
   1dd4c:	mov	r1, r6
   1dd50:	bl	1de44 <__mempcpy_chk@plt+0xc864>
   1dd54:	cmp	r0, #0
   1dd58:	str	r0, [r8]
   1dd5c:	bne	1de3c <__mempcpy_chk@plt+0xc85c>
   1dd60:	ldr	r0, [r4, #40]	; 0x28
   1dd64:	clz	r1, r6
   1dd68:	lsr	r9, r1, #5
   1dd6c:	b	1dd90 <__mempcpy_chk@plt+0xc7b0>
   1dd70:	str	r6, [r0, r5, lsl #2]
   1dd74:	b	1ddd0 <__mempcpy_chk@plt+0xc7f0>
   1dd78:	ldr	r0, [r2, #8]
   1dd7c:	vldr	d16, [r2]
   1dd80:	mov	r9, #1
   1dd84:	str	r0, [sp, #8]
   1dd88:	mov	r0, r5
   1dd8c:	vstr	d16, [sp]
   1dd90:	ldr	r2, [r4, #88]	; 0x58
   1dd94:	sub	r1, r0, #1
   1dd98:	mov	r0, r4
   1dd9c:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1dda0:	mov	r3, r0
   1dda4:	mov	r2, sp
   1dda8:	mov	r0, r8
   1ddac:	mov	r1, r7
   1ddb0:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1ddb4:	mov	r6, r0
   1ddb8:	ldr	r0, [r4, #100]	; 0x64
   1ddbc:	cmp	r9, #0
   1ddc0:	str	r6, [r0, r5, lsl #2]
   1ddc4:	bne	1ddd0 <__mempcpy_chk@plt+0xc7f0>
   1ddc8:	ldr	r0, [sp, #8]
   1ddcc:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1ddd0:	cmp	r6, #0
   1ddd4:	ldrne	r0, [r7, #76]	; 0x4c
   1ddd8:	cmpne	r0, #0
   1dddc:	bne	1ddec <__mempcpy_chk@plt+0xc80c>
   1dde0:	mov	r0, r6
   1dde4:	sub	sp, fp, #24
   1dde8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ddec:	add	r7, r6, #4
   1ddf0:	mov	r0, r4
   1ddf4:	mov	r2, r5
   1ddf8:	mov	r1, r7
   1ddfc:	bl	1d3e8 <__mempcpy_chk@plt+0xbe08>
   1de00:	cmp	r0, #0
   1de04:	str	r0, [r8]
   1de08:	bne	1de3c <__mempcpy_chk@plt+0xc85c>
   1de0c:	ldrb	r0, [r6, #52]	; 0x34
   1de10:	tst	r0, #64	; 0x40
   1de14:	beq	1dde0 <__mempcpy_chk@plt+0xc800>
   1de18:	mov	r0, r4
   1de1c:	mov	r1, r7
   1de20:	bl	1d4e0 <__mempcpy_chk@plt+0xbf00>
   1de24:	str	r0, [r8]
   1de28:	cmp	r0, #0
   1de2c:	mov	r6, #0
   1de30:	ldreq	r0, [r4, #100]	; 0x64
   1de34:	ldreq	r6, [r0, r5, lsl #2]
   1de38:	b	1dde0 <__mempcpy_chk@plt+0xc800>
   1de3c:	mov	r6, #0
   1de40:	b	1dde0 <__mempcpy_chk@plt+0xc800>
   1de44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de48:	add	fp, sp, #28
   1de4c:	sub	sp, sp, #20
   1de50:	mov	r8, r2
   1de54:	cmp	r1, #0
   1de58:	str	r0, [sp, #16]
   1de5c:	beq	1de94 <__mempcpy_chk@plt+0xc8b4>
   1de60:	ldr	r0, [r1, #4]
   1de64:	mov	r6, r1
   1de68:	cmp	r8, #0
   1de6c:	beq	1de80 <__mempcpy_chk@plt+0xc8a0>
   1de70:	cmp	r0, #1
   1de74:	ldrge	r1, [r8, #4]
   1de78:	cmpge	r1, #1
   1de7c:	bge	1ded4 <__mempcpy_chk@plt+0xc8f4>
   1de80:	cmp	r0, #1
   1de84:	blt	1de94 <__mempcpy_chk@plt+0xc8b4>
   1de88:	ldr	r0, [sp, #16]
   1de8c:	mov	r1, r6
   1de90:	b	1deb0 <__mempcpy_chk@plt+0xc8d0>
   1de94:	cmp	r8, #0
   1de98:	beq	1debc <__mempcpy_chk@plt+0xc8dc>
   1de9c:	ldr	r0, [r8, #4]
   1dea0:	cmp	r0, #1
   1dea4:	blt	1debc <__mempcpy_chk@plt+0xc8dc>
   1dea8:	ldr	r0, [sp, #16]
   1deac:	mov	r1, r8
   1deb0:	sub	sp, fp, #28
   1deb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1deb8:	b	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1debc:	ldr	r1, [sp, #16]
   1dec0:	mov	r0, #0
   1dec4:	str	r0, [r1]
   1dec8:	str	r0, [r1, #4]
   1decc:	str	r0, [r1, #8]
   1ded0:	b	1e038 <__mempcpy_chk@plt+0xca58>
   1ded4:	ldr	r4, [sp, #16]
   1ded8:	add	r0, r1, r0
   1dedc:	str	r0, [r4]
   1dee0:	lsl	r0, r0, #2
   1dee4:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1dee8:	cmp	r0, #0
   1deec:	str	r0, [r4, #8]
   1def0:	beq	1e040 <__mempcpy_chk@plt+0xca60>
   1def4:	ldr	r9, [r8, #4]
   1def8:	ldr	lr, [r6, #4]
   1defc:	mov	r1, #0
   1df00:	mov	r7, #0
   1df04:	cmp	r9, #0
   1df08:	movwgt	r1, #1
   1df0c:	cmp	lr, #1
   1df10:	blt	1dfd4 <__mempcpy_chk@plt+0xc9f4>
   1df14:	mov	r2, #0
   1df18:	mov	ip, #0
   1df1c:	str	r2, [sp, #8]
   1df20:	mov	r2, #0
   1df24:	str	r2, [sp, #12]
   1df28:	mov	r2, #0
   1df2c:	ldr	r4, [sp, #12]
   1df30:	mov	r7, ip
   1df34:	tst	r1, #1
   1df38:	beq	1e004 <__mempcpy_chk@plt+0xca24>
   1df3c:	ldr	r1, [r8, #8]
   1df40:	ldr	r3, [r1, r7, lsl #2]
   1df44:	ldr	r1, [r6, #8]
   1df48:	ldr	sl, [r1, r2, lsl #2]
   1df4c:	cmp	sl, r3
   1df50:	ble	1df78 <__mempcpy_chk@plt+0xc998>
   1df54:	add	r7, r7, #1
   1df58:	mov	r1, #0
   1df5c:	str	r3, [r0, r4, lsl #2]
   1df60:	add	r4, r4, #1
   1df64:	cmp	r9, r7
   1df68:	movwgt	r1, #1
   1df6c:	cmp	lr, r2
   1df70:	bgt	1df34 <__mempcpy_chk@plt+0xc954>
   1df74:	b	1dfd8 <__mempcpy_chk@plt+0xc9f8>
   1df78:	add	r1, r7, #1
   1df7c:	str	sl, [r0, r4, lsl #2]
   1df80:	mov	ip, r7
   1df84:	add	r2, r2, #1
   1df88:	str	r1, [sp, #4]
   1df8c:	ldr	r9, [r8, #4]
   1df90:	ldr	lr, [r6, #4]
   1df94:	moveq	ip, r1
   1df98:	mov	r1, #0
   1df9c:	ldr	r5, [sp, #8]
   1dfa0:	cmp	r9, ip
   1dfa4:	sub	r5, r5, #1
   1dfa8:	movwgt	r1, #1
   1dfac:	cmp	lr, r2
   1dfb0:	str	r5, [sp, #8]
   1dfb4:	add	r5, r4, #1
   1dfb8:	str	r5, [sp, #12]
   1dfbc:	bgt	1df2c <__mempcpy_chk@plt+0xc94c>
   1dfc0:	ldr	r2, [sp, #4]
   1dfc4:	cmp	sl, r3
   1dfc8:	add	r4, r4, #1
   1dfcc:	moveq	r7, r2
   1dfd0:	b	1dfd8 <__mempcpy_chk@plt+0xc9f8>
   1dfd4:	mov	r4, #0
   1dfd8:	cmp	r1, #0
   1dfdc:	beq	1e02c <__mempcpy_chk@plt+0xca4c>
   1dfe0:	ldr	r1, [r8, #8]
   1dfe4:	sub	r2, r9, r7
   1dfe8:	add	r0, r0, r4, lsl #2
   1dfec:	lsl	r2, r2, #2
   1dff0:	add	r1, r1, r7, lsl #2
   1dff4:	bl	1134c <memcpy@plt>
   1dff8:	sub	r0, r4, r7
   1dffc:	add	r4, r0, r9
   1e000:	b	1e02c <__mempcpy_chk@plt+0xca4c>
   1e004:	ldr	r1, [r6, #8]
   1e008:	add	r0, r0, r4, lsl #2
   1e00c:	add	r1, r1, r2, lsl #2
   1e010:	sub	r2, lr, r2
   1e014:	lsl	r2, r2, #2
   1e018:	bl	1134c <memcpy@plt>
   1e01c:	ldr	r0, [r6, #4]
   1e020:	ldr	r1, [sp, #8]
   1e024:	add	r0, r0, r1
   1e028:	add	r4, r0, r4
   1e02c:	ldr	r0, [sp, #16]
   1e030:	str	r4, [r0, #4]
   1e034:	mov	r0, #0
   1e038:	sub	sp, fp, #28
   1e03c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e040:	mov	r0, #12
   1e044:	b	1e038 <__mempcpy_chk@plt+0xca58>
   1e048:	push	{r4, r5, r6, r7, fp, lr}
   1e04c:	add	fp, sp, #16
   1e050:	ldr	lr, [r0, #108]	; 0x6c
   1e054:	mov	ip, r0
   1e058:	cmp	lr, #1
   1e05c:	blt	1e0a0 <__mempcpy_chk@plt+0xcac0>
   1e060:	ldr	r2, [ip, #116]	; 0x74
   1e064:	mov	r0, #0
   1e068:	mov	r3, #1
   1e06c:	mov	r4, lr
   1e070:	add	r5, r0, r4
   1e074:	add	r5, r5, r5, lsr #31
   1e078:	asr	r6, r5, #1
   1e07c:	add	r7, r6, r6, lsl #1
   1e080:	add	r7, r2, r7, lsl #3
   1e084:	ldr	r7, [r7, #4]
   1e088:	cmp	r7, r1
   1e08c:	addlt	r0, r3, r5, asr #1
   1e090:	movge	r4, r6
   1e094:	cmp	r0, r4
   1e098:	blt	1e070 <__mempcpy_chk@plt+0xca90>
   1e09c:	b	1e0a4 <__mempcpy_chk@plt+0xcac4>
   1e0a0:	mov	r0, #0
   1e0a4:	cmp	r0, lr
   1e0a8:	bge	1e0c8 <__mempcpy_chk@plt+0xcae8>
   1e0ac:	ldr	r2, [ip, #116]	; 0x74
   1e0b0:	add	r3, r0, r0, lsl #1
   1e0b4:	add	r2, r2, r3, lsl #3
   1e0b8:	ldr	r2, [r2, #4]
   1e0bc:	cmp	r2, r1
   1e0c0:	mvnne	r0, #0
   1e0c4:	pop	{r4, r5, r6, r7, fp, pc}
   1e0c8:	mvn	r0, #0
   1e0cc:	pop	{r4, r5, r6, r7, fp, pc}
   1e0d0:	push	{r4, r5, r6, r7, fp, lr}
   1e0d4:	add	fp, sp, #16
   1e0d8:	mov	r5, r0
   1e0dc:	ldr	r0, [r0, #36]	; 0x24
   1e0e0:	mov	r4, r1
   1e0e4:	ldr	r7, [r5, #104]	; 0x68
   1e0e8:	cmp	r0, r1
   1e0ec:	ldrle	r1, [r5, #48]	; 0x30
   1e0f0:	cmple	r0, r1
   1e0f4:	blt	1e140 <__mempcpy_chk@plt+0xcb60>
   1e0f8:	ldr	r0, [r5, #28]
   1e0fc:	cmp	r0, r4
   1e100:	ldrle	r1, [r5, #48]	; 0x30
   1e104:	cmple	r0, r1
   1e108:	blt	1e140 <__mempcpy_chk@plt+0xcb60>
   1e10c:	mov	r6, #0
   1e110:	cmp	r7, r4
   1e114:	bge	1e158 <__mempcpy_chk@plt+0xcb78>
   1e118:	sub	r0, r4, r7
   1e11c:	mov	r1, #0
   1e120:	mov	r6, #0
   1e124:	lsl	r2, r0, #2
   1e128:	ldr	r0, [r5, #100]	; 0x64
   1e12c:	add	r0, r0, r7, lsl #2
   1e130:	add	r0, r0, #4
   1e134:	bl	114f0 <memset@plt>
   1e138:	str	r4, [r5, #104]	; 0x68
   1e13c:	b	1e158 <__mempcpy_chk@plt+0xcb78>
   1e140:	add	r1, r4, #1
   1e144:	mov	r0, r5
   1e148:	bl	1dc18 <__mempcpy_chk@plt+0xc638>
   1e14c:	mov	r6, r0
   1e150:	cmp	r0, #0
   1e154:	beq	1e10c <__mempcpy_chk@plt+0xcb2c>
   1e158:	mov	r0, r6
   1e15c:	pop	{r4, r5, r6, r7, fp, pc}
   1e160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e164:	add	fp, sp, #28
   1e168:	sub	sp, sp, #12
   1e16c:	mov	r6, r2
   1e170:	mov	r4, r0
   1e174:	mov	r0, #8
   1e178:	mov	r7, r3
   1e17c:	ldr	r2, [r2]
   1e180:	mov	r8, r1
   1e184:	ldr	r3, [r6, #4]
   1e188:	str	r0, [sp, #8]
   1e18c:	add	r1, r6, #8
   1e190:	mov	r0, r4
   1e194:	ldr	r5, [fp, #8]
   1e198:	str	r7, [sp]
   1e19c:	str	r5, [sp, #4]
   1e1a0:	bl	1e2b0 <__mempcpy_chk@plt+0xccd0>
   1e1a4:	cmp	r0, #0
   1e1a8:	beq	1e1b4 <__mempcpy_chk@plt+0xcbd4>
   1e1ac:	sub	sp, fp, #28
   1e1b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1b4:	ldr	r0, [r4, #108]	; 0x6c
   1e1b8:	ldr	r1, [r4, #112]	; 0x70
   1e1bc:	ldr	r9, [r6, #4]
   1e1c0:	ldr	sl, [r8]
   1e1c4:	cmp	r0, r1
   1e1c8:	blt	1e218 <__mempcpy_chk@plt+0xcc38>
   1e1cc:	ldr	r0, [r4, #116]	; 0x74
   1e1d0:	add	r1, r1, r1, lsl #1
   1e1d4:	lsl	r1, r1, #4
   1e1d8:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1e1dc:	cmp	r0, #0
   1e1e0:	beq	1e2a0 <__mempcpy_chk@plt+0xccc0>
   1e1e4:	str	r0, [r4, #116]	; 0x74
   1e1e8:	ldr	r1, [r4, #108]	; 0x6c
   1e1ec:	ldr	r2, [r4, #112]	; 0x70
   1e1f0:	add	r1, r1, r1, lsl #1
   1e1f4:	add	r0, r0, r1, lsl #3
   1e1f8:	add	r1, r2, r2, lsl #1
   1e1fc:	lsl	r2, r1, #3
   1e200:	mov	r1, #0
   1e204:	bl	114f0 <memset@plt>
   1e208:	ldr	r1, [r4, #112]	; 0x70
   1e20c:	ldr	r0, [r4, #108]	; 0x6c
   1e210:	lsl	r1, r1, #1
   1e214:	str	r1, [r4, #112]	; 0x70
   1e218:	ldr	r1, [r4, #116]	; 0x74
   1e21c:	cmp	r0, #1
   1e220:	blt	1e240 <__mempcpy_chk@plt+0xcc60>
   1e224:	sub	r2, r0, #1
   1e228:	add	r2, r2, r2, lsl #1
   1e22c:	add	r2, r1, r2, lsl #3
   1e230:	ldr	r3, [r2, #4]
   1e234:	cmp	r3, r5
   1e238:	moveq	r3, #1
   1e23c:	strbeq	r3, [r2, #20]
   1e240:	add	r2, r0, r0, lsl #1
   1e244:	cmp	r9, sl
   1e248:	mov	r3, #0
   1e24c:	add	r0, r0, #1
   1e250:	str	r7, [r1, r2, lsl #3]!
   1e254:	mov	r2, #0
   1e258:	mvneq	r3, #0
   1e25c:	stmib	r1, {r5, sl}
   1e260:	str	r9, [r1, #12]
   1e264:	str	r3, [r1, #16]
   1e268:	str	r0, [r4, #108]	; 0x6c
   1e26c:	strb	r2, [r1, #20]
   1e270:	sub	r0, r9, sl
   1e274:	ldr	r1, [r4, #120]	; 0x78
   1e278:	cmp	r1, r0
   1e27c:	strlt	r0, [r4, #120]	; 0x78
   1e280:	ldr	r0, [r6, #4]
   1e284:	ldr	r1, [r8]
   1e288:	add	r0, r0, r5
   1e28c:	sub	r1, r0, r1
   1e290:	mov	r0, r4
   1e294:	sub	sp, fp, #28
   1e298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e29c:	b	1e0d0 <__mempcpy_chk@plt+0xcaf0>
   1e2a0:	ldr	r0, [r4, #116]	; 0x74
   1e2a4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e2a8:	mov	r0, #12
   1e2ac:	b	1e1ac <__mempcpy_chk@plt+0xcbcc>
   1e2b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e2b4:	add	fp, sp, #28
   1e2b8:	sub	sp, sp, #84	; 0x54
   1e2bc:	ldr	r9, [r0, #84]	; 0x54
   1e2c0:	mov	r6, r3
   1e2c4:	mov	r3, r1
   1e2c8:	mov	r1, #0
   1e2cc:	str	r0, [sp, #44]	; 0x2c
   1e2d0:	ldr	sl, [fp, #12]
   1e2d4:	mov	r8, r2
   1e2d8:	str	r1, [fp, #-52]	; 0xffffffcc
   1e2dc:	ldr	r0, [r0, #120]	; 0x78
   1e2e0:	ldr	r5, [r3, #4]
   1e2e4:	ldr	r1, [r9]
   1e2e8:	str	r9, [sp, #20]
   1e2ec:	add	r0, r0, sl
   1e2f0:	cmp	r5, r0
   1e2f4:	ldr	r1, [r1, r2, lsl #3]
   1e2f8:	str	r1, [sp, #24]
   1e2fc:	ble	1e7d0 <__mempcpy_chk@plt+0xd1f0>
   1e300:	add	r4, r3, #8
   1e304:	ldr	r0, [sp, #44]	; 0x2c
   1e308:	ldr	r5, [r3]
   1e30c:	ldr	r4, [r4]
   1e310:	str	r3, [sp, #16]
   1e314:	ldr	r1, [r0, #40]	; 0x28
   1e318:	ldr	r2, [r0, #88]	; 0x58
   1e31c:	cmp	r5, #0
   1e320:	moveq	r5, r6
   1e324:	str	r1, [sp, #12]
   1e328:	ldr	r1, [r0, #100]	; 0x64
   1e32c:	str	r4, [r0, #100]	; 0x64
   1e330:	str	r5, [r0, #40]	; 0x28
   1e334:	str	r1, [sp, #8]
   1e338:	sub	r1, r5, #1
   1e33c:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1e340:	mov	r7, r0
   1e344:	cmp	r5, r6
   1e348:	bne	1e414 <__mempcpy_chk@plt+0xce34>
   1e34c:	mov	r0, #1
   1e350:	str	r0, [sp, #52]	; 0x34
   1e354:	str	r0, [sp, #48]	; 0x30
   1e358:	mov	r0, #4
   1e35c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1e360:	cmp	r0, #0
   1e364:	str	r0, [sp, #56]	; 0x38
   1e368:	beq	1e854 <__mempcpy_chk@plt+0xd274>
   1e36c:	ldr	r6, [sp, #24]
   1e370:	ldr	r4, [fp, #16]
   1e374:	str	r8, [r0]
   1e378:	mov	r0, #0
   1e37c:	add	r1, sp, #48	; 0x30
   1e380:	str	r7, [sp, #40]	; 0x28
   1e384:	str	r0, [fp, #-52]	; 0xffffffcc
   1e388:	mov	r0, r9
   1e38c:	mov	r2, r6
   1e390:	mov	r3, r4
   1e394:	bl	1e874 <__mempcpy_chk@plt+0xd294>
   1e398:	ldr	r8, [sp, #44]	; 0x2c
   1e39c:	cmp	r0, #0
   1e3a0:	str	r0, [fp, #-52]	; 0xffffffcc
   1e3a4:	bne	1e844 <__mempcpy_chk@plt+0xd264>
   1e3a8:	ldr	r0, [sp, #52]	; 0x34
   1e3ac:	cmp	r0, #0
   1e3b0:	beq	1e3d8 <__mempcpy_chk@plt+0xcdf8>
   1e3b4:	add	r1, sp, #48	; 0x30
   1e3b8:	mov	r0, r8
   1e3bc:	mov	r2, r5
   1e3c0:	mov	r3, r6
   1e3c4:	str	r4, [sp]
   1e3c8:	bl	1e9ac <__mempcpy_chk@plt+0xd3cc>
   1e3cc:	cmp	r0, #0
   1e3d0:	str	r0, [fp, #-52]	; 0xffffffcc
   1e3d4:	bne	1e844 <__mempcpy_chk@plt+0xd264>
   1e3d8:	ldr	r3, [sp, #40]	; 0x28
   1e3dc:	sub	r0, fp, #52	; 0x34
   1e3e0:	add	r2, sp, #48	; 0x30
   1e3e4:	mov	r1, r9
   1e3e8:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1e3ec:	mov	r6, r0
   1e3f0:	cmp	r0, #0
   1e3f4:	bne	1e404 <__mempcpy_chk@plt+0xce24>
   1e3f8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e3fc:	cmp	r0, #0
   1e400:	bne	1e7c0 <__mempcpy_chk@plt+0xd1e0>
   1e404:	ldr	r0, [r8, #100]	; 0x64
   1e408:	mov	r4, r5
   1e40c:	str	r6, [r0, r5, lsl #2]
   1e410:	b	1e488 <__mempcpy_chk@plt+0xcea8>
   1e414:	ldr	r6, [r4, r5, lsl #2]
   1e418:	mov	r4, r5
   1e41c:	cmp	r6, #0
   1e420:	beq	1e448 <__mempcpy_chk@plt+0xce68>
   1e424:	ldrb	r0, [r6, #52]	; 0x34
   1e428:	ldr	r8, [sp, #44]	; 0x2c
   1e42c:	tst	r0, #64	; 0x40
   1e430:	bne	1e460 <__mempcpy_chk@plt+0xce80>
   1e434:	mov	r0, #0
   1e438:	str	r0, [sp, #52]	; 0x34
   1e43c:	str	r0, [sp, #48]	; 0x30
   1e440:	str	r0, [sp, #56]	; 0x38
   1e444:	b	1e488 <__mempcpy_chk@plt+0xcea8>
   1e448:	ldr	r8, [sp, #44]	; 0x2c
   1e44c:	mov	r6, #0
   1e450:	str	r6, [sp, #52]	; 0x34
   1e454:	str	r6, [sp, #48]	; 0x30
   1e458:	str	r6, [sp, #56]	; 0x38
   1e45c:	b	1e488 <__mempcpy_chk@plt+0xcea8>
   1e460:	add	r1, r6, #4
   1e464:	add	r0, sp, #48	; 0x30
   1e468:	str	r7, [sp, #40]	; 0x28
   1e46c:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1e470:	cmp	r0, #0
   1e474:	str	r0, [fp, #-52]	; 0xffffffcc
   1e478:	bne	1e86c <__mempcpy_chk@plt+0xd28c>
   1e47c:	ldrb	r0, [r6, #52]	; 0x34
   1e480:	tst	r0, #64	; 0x40
   1e484:	bne	1e790 <__mempcpy_chk@plt+0xd1b0>
   1e488:	cmp	r4, sl
   1e48c:	bge	1e72c <__mempcpy_chk@plt+0xd14c>
   1e490:	add	r5, sp, #48	; 0x30
   1e494:	mov	r2, #0
   1e498:	ldr	r0, [r8, #120]	; 0x78
   1e49c:	cmp	r2, r0
   1e4a0:	bgt	1e72c <__mempcpy_chk@plt+0xd14c>
   1e4a4:	mov	r0, #0
   1e4a8:	add	r1, r4, #1
   1e4ac:	str	r2, [sp, #28]
   1e4b0:	str	r0, [sp, #52]	; 0x34
   1e4b4:	str	r1, [sp, #32]
   1e4b8:	ldr	r0, [r8, #100]	; 0x64
   1e4bc:	ldr	r0, [r0, r1, lsl #2]
   1e4c0:	cmp	r0, #0
   1e4c4:	beq	1e4e0 <__mempcpy_chk@plt+0xcf00>
   1e4c8:	add	r1, r0, #4
   1e4cc:	mov	r0, r5
   1e4d0:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   1e4d4:	cmp	r0, #0
   1e4d8:	str	r0, [fp, #-52]	; 0xffffffcc
   1e4dc:	bne	1e7c0 <__mempcpy_chk@plt+0xd1e0>
   1e4e0:	cmp	r6, #0
   1e4e4:	beq	1e660 <__mempcpy_chk@plt+0xd080>
   1e4e8:	mov	r0, #0
   1e4ec:	ldr	r7, [r8, #84]	; 0x54
   1e4f0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e4f4:	str	r0, [fp, #-44]	; 0xffffffd4
   1e4f8:	str	r0, [fp, #-48]	; 0xffffffd0
   1e4fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1e500:	ldr	r1, [r6, #20]
   1e504:	cmp	r1, #1
   1e508:	blt	1e650 <__mempcpy_chk@plt+0xd070>
   1e50c:	mov	r5, #0
   1e510:	str	r4, [sp, #40]	; 0x28
   1e514:	str	r6, [sp, #36]	; 0x24
   1e518:	b	1e524 <__mempcpy_chk@plt+0xcf44>
   1e51c:	ldr	r0, [r7]
   1e520:	b	1e540 <__mempcpy_chk@plt+0xcf60>
   1e524:	ldr	r0, [r6, #24]
   1e528:	ldr	sl, [r0, r5, lsl #2]
   1e52c:	ldr	r0, [r7]
   1e530:	add	r1, r0, sl, lsl #3
   1e534:	ldrb	r1, [r1, #6]
   1e538:	tst	r1, #16
   1e53c:	bne	1e55c <__mempcpy_chk@plt+0xcf7c>
   1e540:	add	r1, r0, sl, lsl #3
   1e544:	mov	r0, r8
   1e548:	mov	r2, r4
   1e54c:	bl	1f280 <__mempcpy_chk@plt+0xdca0>
   1e550:	cmp	r0, #0
   1e554:	bne	1e618 <__mempcpy_chk@plt+0xd038>
   1e558:	b	1e630 <__mempcpy_chk@plt+0xd050>
   1e55c:	mov	r0, r7
   1e560:	mov	r1, sl
   1e564:	mov	r2, r8
   1e568:	mov	r3, r4
   1e56c:	bl	1ef90 <__mempcpy_chk@plt+0xd9b0>
   1e570:	cmp	r0, #2
   1e574:	blt	1e610 <__mempcpy_chk@plt+0xd030>
   1e578:	add	r4, r0, r4
   1e57c:	ldr	r0, [r8, #100]	; 0x64
   1e580:	ldr	r1, [r7, #12]
   1e584:	sub	r8, fp, #48	; 0x30
   1e588:	ldr	r0, [r0, r4, lsl #2]
   1e58c:	ldr	r6, [r1, sl, lsl #2]
   1e590:	mov	r1, #0
   1e594:	str	r1, [fp, #-44]	; 0xffffffd4
   1e598:	cmp	r0, #0
   1e59c:	beq	1e5b8 <__mempcpy_chk@plt+0xcfd8>
   1e5a0:	add	r1, r0, #4
   1e5a4:	mov	r0, r8
   1e5a8:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   1e5ac:	cmp	r0, #0
   1e5b0:	str	r0, [fp, #-32]	; 0xffffffe0
   1e5b4:	bne	1e7b0 <__mempcpy_chk@plt+0xd1d0>
   1e5b8:	mov	r0, r8
   1e5bc:	mov	r1, r6
   1e5c0:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1e5c4:	cmp	r0, #0
   1e5c8:	beq	1e7a0 <__mempcpy_chk@plt+0xd1c0>
   1e5cc:	sub	r0, fp, #32
   1e5d0:	mov	r1, r7
   1e5d4:	mov	r2, r8
   1e5d8:	bl	1ed94 <__mempcpy_chk@plt+0xd7b4>
   1e5dc:	ldr	r8, [sp, #44]	; 0x2c
   1e5e0:	ldr	r6, [sp, #36]	; 0x24
   1e5e4:	ldr	r1, [r8, #100]	; 0x64
   1e5e8:	str	r0, [r1, r4, lsl #2]
   1e5ec:	ldr	r0, [r8, #100]	; 0x64
   1e5f0:	ldr	r0, [r0, r4, lsl #2]
   1e5f4:	ldr	r4, [sp, #40]	; 0x28
   1e5f8:	cmp	r0, #0
   1e5fc:	bne	1e618 <__mempcpy_chk@plt+0xd038>
   1e600:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1e604:	cmp	r9, #0
   1e608:	beq	1e618 <__mempcpy_chk@plt+0xd038>
   1e60c:	b	1e7b4 <__mempcpy_chk@plt+0xd1d4>
   1e610:	cmp	r0, #0
   1e614:	beq	1e51c <__mempcpy_chk@plt+0xcf3c>
   1e618:	ldr	r0, [r7, #12]
   1e61c:	ldr	r1, [r0, sl, lsl #2]
   1e620:	add	r0, sp, #48	; 0x30
   1e624:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1e628:	cmp	r0, #0
   1e62c:	beq	1e7a0 <__mempcpy_chk@plt+0xd1c0>
   1e630:	ldr	r0, [r6, #20]
   1e634:	add	r5, r5, #1
   1e638:	cmp	r5, r0
   1e63c:	blt	1e524 <__mempcpy_chk@plt+0xcf44>
   1e640:	ldr	r5, [fp, #12]
   1e644:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e648:	ldr	r9, [sp, #20]
   1e64c:	mov	sl, r5
   1e650:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e654:	mov	r0, #0
   1e658:	add	r5, sp, #48	; 0x30
   1e65c:	str	r0, [fp, #-52]	; 0xffffffcc
   1e660:	ldr	r0, [sp, #52]	; 0x34
   1e664:	cmp	r0, #0
   1e668:	beq	1e6c0 <__mempcpy_chk@plt+0xd0e0>
   1e66c:	mov	r6, r4
   1e670:	ldr	r4, [sp, #24]
   1e674:	ldr	r7, [fp, #16]
   1e678:	mov	r0, r9
   1e67c:	mov	r1, r5
   1e680:	mov	r2, r4
   1e684:	mov	r3, r7
   1e688:	bl	1e874 <__mempcpy_chk@plt+0xd294>
   1e68c:	cmp	r0, #0
   1e690:	str	r0, [fp, #-52]	; 0xffffffcc
   1e694:	bne	1e7c0 <__mempcpy_chk@plt+0xd1e0>
   1e698:	ldr	r2, [sp, #32]
   1e69c:	mov	r0, r8
   1e6a0:	mov	r1, r5
   1e6a4:	mov	r3, r4
   1e6a8:	str	r7, [sp]
   1e6ac:	bl	1e9ac <__mempcpy_chk@plt+0xd3cc>
   1e6b0:	cmp	r0, #0
   1e6b4:	mov	r4, r6
   1e6b8:	str	r0, [fp, #-52]	; 0xffffffcc
   1e6bc:	bne	1e7c0 <__mempcpy_chk@plt+0xd1e0>
   1e6c0:	ldr	r2, [r8, #88]	; 0x58
   1e6c4:	mov	r0, r8
   1e6c8:	mov	r1, r4
   1e6cc:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1e6d0:	mov	r3, r0
   1e6d4:	sub	r0, fp, #52	; 0x34
   1e6d8:	mov	r1, r9
   1e6dc:	mov	r2, r5
   1e6e0:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1e6e4:	mov	r6, r0
   1e6e8:	cmp	r0, #0
   1e6ec:	bne	1e6fc <__mempcpy_chk@plt+0xd11c>
   1e6f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e6f4:	cmp	r0, #0
   1e6f8:	bne	1e7c0 <__mempcpy_chk@plt+0xd1e0>
   1e6fc:	ldr	r1, [sp, #32]
   1e700:	ldr	r0, [r8, #100]	; 0x64
   1e704:	ldr	r2, [sp, #28]
   1e708:	cmp	r6, #0
   1e70c:	str	r6, [r0, r1, lsl #2]
   1e710:	mov	r0, #0
   1e714:	mov	r4, r1
   1e718:	addeq	r0, r2, #1
   1e71c:	cmp	r1, sl
   1e720:	mov	r2, r0
   1e724:	blt	1e498 <__mempcpy_chk@plt+0xceb8>
   1e728:	b	1e730 <__mempcpy_chk@plt+0xd150>
   1e72c:	mov	r1, r4
   1e730:	ldr	r0, [sp, #56]	; 0x38
   1e734:	mov	r4, r1
   1e738:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e73c:	ldr	r0, [r8, #100]	; 0x64
   1e740:	ldr	r1, [sp, #16]
   1e744:	ldr	r0, [r0, sl, lsl #2]
   1e748:	str	r4, [r1]
   1e74c:	ldr	r1, [sp, #12]
   1e750:	str	r1, [r8, #40]	; 0x28
   1e754:	ldr	r1, [sp, #8]
   1e758:	cmp	r0, #0
   1e75c:	str	r1, [r8, #100]	; 0x64
   1e760:	beq	1e780 <__mempcpy_chk@plt+0xd1a0>
   1e764:	ldr	r1, [fp, #8]
   1e768:	add	r0, r0, #4
   1e76c:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1e770:	mov	r7, #0
   1e774:	cmp	r0, #0
   1e778:	moveq	r7, #1
   1e77c:	b	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e780:	mov	r7, #1
   1e784:	mov	r0, r7
   1e788:	sub	sp, fp, #28
   1e78c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e790:	mov	r5, r4
   1e794:	ldr	r6, [sp, #24]
   1e798:	ldr	r4, [fp, #16]
   1e79c:	b	1e3a8 <__mempcpy_chk@plt+0xcdc8>
   1e7a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e7a4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e7a8:	mov	r9, #12
   1e7ac:	b	1e7bc <__mempcpy_chk@plt+0xd1dc>
   1e7b0:	mov	r9, r0
   1e7b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e7b8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e7bc:	str	r9, [fp, #-52]	; 0xffffffcc
   1e7c0:	ldr	r0, [sp, #56]	; 0x38
   1e7c4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e7c8:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e7cc:	b	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e7d0:	mvn	r1, #-2147483648	; 0x80000000
   1e7d4:	mov	r7, #12
   1e7d8:	sub	r1, r1, r5
   1e7dc:	cmp	r1, r0
   1e7e0:	ble	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e7e4:	add	r0, r0, #1
   1e7e8:	add	sl, r0, r5
   1e7ec:	str	r0, [sp, #40]	; 0x28
   1e7f0:	cmn	sl, #-1073741823	; 0xc0000001
   1e7f4:	bhi	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e7f8:	mov	r4, r3
   1e7fc:	lsl	r1, sl, #2
   1e800:	mov	r9, r3
   1e804:	ldr	r0, [r4, #8]!
   1e808:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   1e80c:	cmp	r0, #0
   1e810:	beq	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e814:	ldr	r1, [sp, #40]	; 0x28
   1e818:	str	sl, [r9, #4]
   1e81c:	str	r0, [r9, #8]
   1e820:	add	r0, r0, r5, lsl #2
   1e824:	lsl	r2, r1, #2
   1e828:	mov	r1, #0
   1e82c:	bl	114f0 <memset@plt>
   1e830:	ldr	r5, [fp, #12]
   1e834:	mov	r3, r9
   1e838:	ldr	r9, [sp, #20]
   1e83c:	mov	sl, r5
   1e840:	b	1e304 <__mempcpy_chk@plt+0xcd24>
   1e844:	mov	r7, r0
   1e848:	ldr	r0, [sp, #56]	; 0x38
   1e84c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e850:	b	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e854:	mov	r0, #0
   1e858:	mov	r7, #12
   1e85c:	str	r0, [sp, #48]	; 0x30
   1e860:	str	r0, [sp, #52]	; 0x34
   1e864:	str	r7, [fp, #-52]	; 0xffffffcc
   1e868:	b	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e86c:	mov	r7, r0
   1e870:	b	1e784 <__mempcpy_chk@plt+0xd1a4>
   1e874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e878:	add	fp, sp, #28
   1e87c:	sub	sp, sp, #28
   1e880:	str	r0, [sp, #12]
   1e884:	ldr	r0, [r1, #4]
   1e888:	mov	r4, r1
   1e88c:	mov	r1, #0
   1e890:	mov	sl, r3
   1e894:	mov	r8, r2
   1e898:	str	r1, [sp, #20]
   1e89c:	str	r0, [sp, #16]
   1e8a0:	lsl	r0, r0, #2
   1e8a4:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1e8a8:	cmp	r0, #0
   1e8ac:	str	r0, [sp, #24]
   1e8b0:	beq	1e9a4 <__mempcpy_chk@plt+0xd3c4>
   1e8b4:	ldr	r0, [r4, #4]
   1e8b8:	cmp	r0, #1
   1e8bc:	blt	1e96c <__mempcpy_chk@plt+0xd38c>
   1e8c0:	mov	r9, #0
   1e8c4:	str	r4, [sp, #8]
   1e8c8:	b	1e8ec <__mempcpy_chk@plt+0xd30c>
   1e8cc:	cmn	r4, #1
   1e8d0:	beq	1e948 <__mempcpy_chk@plt+0xd368>
   1e8d4:	ldr	r0, [sp, #12]
   1e8d8:	add	r1, sp, #16
   1e8dc:	mov	r3, r8
   1e8e0:	str	sl, [sp]
   1e8e4:	bl	1ec90 <__mempcpy_chk@plt+0xd6b0>
   1e8e8:	b	1e950 <__mempcpy_chk@plt+0xd370>
   1e8ec:	ldr	r0, [r4, #8]
   1e8f0:	ldr	r1, [sp, #12]
   1e8f4:	ldr	r2, [r0, r9, lsl #2]
   1e8f8:	ldr	r1, [r1, #24]
   1e8fc:	add	r0, r2, r2, lsl #1
   1e900:	add	r1, r1, r0, lsl #2
   1e904:	ldr	r0, [r1, #4]
   1e908:	cmp	r0, #1
   1e90c:	blt	1e948 <__mempcpy_chk@plt+0xd368>
   1e910:	ldr	r7, [sp, #12]
   1e914:	ldr	r3, [r1, #8]
   1e918:	mov	r6, #0
   1e91c:	ldr	r7, [r7]
   1e920:	ldr	r4, [r3, r6, lsl #2]
   1e924:	add	r5, r7, r4, lsl #3
   1e928:	ldrb	r5, [r5, #4]
   1e92c:	cmp	r5, sl
   1e930:	ldreq	r5, [r7, r4, lsl #3]
   1e934:	cmpeq	r5, r8
   1e938:	beq	1e8cc <__mempcpy_chk@plt+0xd2ec>
   1e93c:	add	r6, r6, #1
   1e940:	cmp	r6, r0
   1e944:	blt	1e920 <__mempcpy_chk@plt+0xd340>
   1e948:	add	r0, sp, #16
   1e94c:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   1e950:	cmp	r0, #0
   1e954:	bne	1e994 <__mempcpy_chk@plt+0xd3b4>
   1e958:	ldr	r4, [sp, #8]
   1e95c:	add	r9, r9, #1
   1e960:	ldr	r0, [r4, #4]
   1e964:	cmp	r9, r0
   1e968:	blt	1e8ec <__mempcpy_chk@plt+0xd30c>
   1e96c:	ldr	r0, [r4, #8]
   1e970:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e974:	vldr	d16, [sp, #16]
   1e978:	ldr	r0, [sp, #24]
   1e97c:	mov	r7, #0
   1e980:	str	r0, [r4, #8]
   1e984:	vstr	d16, [r4]
   1e988:	mov	r0, r7
   1e98c:	sub	sp, fp, #28
   1e990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e994:	mov	r7, r0
   1e998:	ldr	r0, [sp, #24]
   1e99c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1e9a0:	b	1e988 <__mempcpy_chk@plt+0xd3a8>
   1e9a4:	mov	r7, #12
   1e9a8:	b	1e988 <__mempcpy_chk@plt+0xd3a8>
   1e9ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9b0:	add	fp, sp, #28
   1e9b4:	sub	sp, sp, #44	; 0x2c
   1e9b8:	ldr	r6, [r0, #84]	; 0x54
   1e9bc:	mov	r4, r1
   1e9c0:	mov	r1, r2
   1e9c4:	str	r3, [sp, #4]
   1e9c8:	mov	r5, r2
   1e9cc:	str	r0, [sp, #24]
   1e9d0:	bl	1e048 <__mempcpy_chk@plt+0xca68>
   1e9d4:	cmn	r0, #1
   1e9d8:	beq	1ec84 <__mempcpy_chk@plt+0xd6a4>
   1e9dc:	add	r1, r0, r0, lsl #1
   1e9e0:	str	r5, [sp, #16]
   1e9e4:	str	r6, [sp, #12]
   1e9e8:	str	r4, [sp, #8]
   1e9ec:	str	r1, [sp]
   1e9f0:	b	1e9f8 <__mempcpy_chk@plt+0xd418>
   1e9f4:	ldr	r1, [sp]
   1e9f8:	ldr	r0, [sp, #24]
   1e9fc:	ldr	r0, [r0, #116]	; 0x74
   1ea00:	add	r0, r0, r1, lsl #3
   1ea04:	add	r0, r0, #8
   1ea08:	ldr	r7, [r0, #-8]
   1ea0c:	mov	sl, r0
   1ea10:	mov	r0, r4
   1ea14:	mov	r1, r7
   1ea18:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1ea1c:	cmp	r0, #0
   1ea20:	beq	1ebe8 <__mempcpy_chk@plt+0xd608>
   1ea24:	ldm	sl, {r0, r1}
   1ea28:	add	r1, r1, r5
   1ea2c:	sub	r9, r1, r0
   1ea30:	cmp	r9, r5
   1ea34:	bne	1eadc <__mempcpy_chk@plt+0xd4fc>
   1ea38:	ldr	r0, [r6, #20]
   1ea3c:	add	r1, r7, r7, lsl #1
   1ea40:	add	r0, r0, r1, lsl #2
   1ea44:	ldr	r0, [r0, #8]
   1ea48:	ldr	r7, [r0]
   1ea4c:	mov	r0, r4
   1ea50:	mov	r1, r7
   1ea54:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1ea58:	mov	r1, #4
   1ea5c:	cmp	r0, #0
   1ea60:	bne	1ead4 <__mempcpy_chk@plt+0xd4f4>
   1ea64:	mov	r0, #1
   1ea68:	str	r0, [sp, #32]
   1ea6c:	str	r0, [sp, #28]
   1ea70:	mov	r0, #4
   1ea74:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1ea78:	cmp	r0, #0
   1ea7c:	str	r0, [sp, #36]	; 0x24
   1ea80:	beq	1ebfc <__mempcpy_chk@plt+0xd61c>
   1ea84:	mov	r5, #0
   1ea88:	str	r7, [r0]
   1ea8c:	ldr	r2, [sp, #4]
   1ea90:	ldr	r3, [fp, #8]
   1ea94:	add	r7, sp, #28
   1ea98:	mov	r0, r6
   1ea9c:	str	r5, [fp, #-32]	; 0xffffffe0
   1eaa0:	mov	r1, r7
   1eaa4:	bl	1e874 <__mempcpy_chk@plt+0xd294>
   1eaa8:	mov	r9, r0
   1eaac:	mov	r0, r4
   1eab0:	mov	r1, r7
   1eab4:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   1eab8:	mov	r8, r0
   1eabc:	ldr	r0, [sp, #36]	; 0x24
   1eac0:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1eac4:	orr	r0, r9, r5
   1eac8:	mov	r1, #2
   1eacc:	orrs	r0, r0, r8
   1ead0:	bne	1ec10 <__mempcpy_chk@plt+0xd630>
   1ead4:	ldr	r5, [sp, #16]
   1ead8:	b	1ebdc <__mempcpy_chk@plt+0xd5fc>
   1eadc:	ldr	r0, [sp, #24]
   1eae0:	ldr	r1, [r6, #12]
   1eae4:	ldr	r0, [r0, #100]	; 0x64
   1eae8:	ldr	r8, [r1, r7, lsl #2]
   1eaec:	ldr	r0, [r0, r9, lsl #2]
   1eaf0:	cmp	r0, #0
   1eaf4:	beq	1eb1c <__mempcpy_chk@plt+0xd53c>
   1eaf8:	add	r4, r0, #4
   1eafc:	mov	r1, r8
   1eb00:	mov	r0, r4
   1eb04:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1eb08:	mov	r1, #4
   1eb0c:	cmp	r0, #0
   1eb10:	beq	1eb4c <__mempcpy_chk@plt+0xd56c>
   1eb14:	ldr	r6, [sp, #12]
   1eb18:	b	1ebd8 <__mempcpy_chk@plt+0xd5f8>
   1eb1c:	mov	r0, #1
   1eb20:	str	r0, [sp, #32]
   1eb24:	str	r0, [sp, #28]
   1eb28:	mov	r0, #4
   1eb2c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1eb30:	cmp	r0, #0
   1eb34:	str	r0, [sp, #36]	; 0x24
   1eb38:	beq	1ec30 <__mempcpy_chk@plt+0xd650>
   1eb3c:	str	r8, [r0]
   1eb40:	mov	r0, #0
   1eb44:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb48:	b	1eb80 <__mempcpy_chk@plt+0xd5a0>
   1eb4c:	add	r6, sp, #28
   1eb50:	mov	r1, r4
   1eb54:	mov	r0, r6
   1eb58:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1eb5c:	mov	r4, r0
   1eb60:	str	r0, [fp, #-32]	; 0xffffffe0
   1eb64:	mov	r0, r6
   1eb68:	mov	r1, r8
   1eb6c:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1eb70:	cmp	r4, #0
   1eb74:	bne	1ec54 <__mempcpy_chk@plt+0xd674>
   1eb78:	cmp	r0, #0
   1eb7c:	beq	1ec54 <__mempcpy_chk@plt+0xd674>
   1eb80:	ldr	r6, [sp, #12]
   1eb84:	sub	r0, fp, #32
   1eb88:	add	r2, sp, #28
   1eb8c:	mov	r1, r6
   1eb90:	bl	1ed94 <__mempcpy_chk@plt+0xd7b4>
   1eb94:	ldr	r4, [sp, #24]
   1eb98:	ldr	r1, [r4, #100]	; 0x64
   1eb9c:	str	r0, [r1, r9, lsl #2]
   1eba0:	ldr	r0, [sp, #36]	; 0x24
   1eba4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1eba8:	ldr	r0, [r4, #100]	; 0x64
   1ebac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ebb0:	ldr	r0, [r0, r9, lsl #2]
   1ebb4:	cmp	r2, #0
   1ebb8:	mov	r1, r2
   1ebbc:	movwne	r1, #1
   1ebc0:	clz	r0, r0
   1ebc4:	lsr	r0, r0, #5
   1ebc8:	ands	r1, r0, r1
   1ebcc:	ldr	r0, [sp, #20]
   1ebd0:	movne	r0, r2
   1ebd4:	str	r0, [sp, #20]
   1ebd8:	ldr	r4, [sp, #8]
   1ebdc:	cmp	r1, #0
   1ebe0:	cmpne	r1, #4
   1ebe4:	bne	1ec74 <__mempcpy_chk@plt+0xd694>
   1ebe8:	ldrb	r1, [sl, #12]
   1ebec:	add	r0, sl, #24
   1ebf0:	cmp	r1, #0
   1ebf4:	bne	1ea08 <__mempcpy_chk@plt+0xd428>
   1ebf8:	b	1ec84 <__mempcpy_chk@plt+0xd6a4>
   1ebfc:	mov	r0, #0
   1ec00:	mov	r5, #12
   1ec04:	str	r0, [sp, #28]
   1ec08:	str	r0, [sp, #32]
   1ec0c:	b	1ea8c <__mempcpy_chk@plt+0xd4ac>
   1ec10:	cmp	r9, #0
   1ec14:	mov	r1, #1
   1ec18:	movne	r8, r9
   1ec1c:	cmp	r5, #0
   1ec20:	movne	r8, r5
   1ec24:	str	r8, [fp, #-32]	; 0xffffffe0
   1ec28:	str	r8, [sp, #20]
   1ec2c:	b	1ead4 <__mempcpy_chk@plt+0xd4f4>
   1ec30:	mov	r0, #0
   1ec34:	mov	r1, #12
   1ec38:	str	r0, [sp, #28]
   1ec3c:	str	r0, [sp, #32]
   1ec40:	mov	r0, #12
   1ec44:	str	r1, [fp, #-32]	; 0xffffffe0
   1ec48:	mov	r1, #1
   1ec4c:	str	r0, [sp, #20]
   1ec50:	b	1eb14 <__mempcpy_chk@plt+0xd534>
   1ec54:	ldr	r0, [sp, #36]	; 0x24
   1ec58:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1ec5c:	cmp	r4, #0
   1ec60:	mov	r1, #1
   1ec64:	movweq	r4, #12
   1ec68:	str	r4, [fp, #-32]	; 0xffffffe0
   1ec6c:	str	r4, [sp, #20]
   1ec70:	b	1eb14 <__mempcpy_chk@plt+0xd534>
   1ec74:	cmp	r1, #2
   1ec78:	beq	1e9f4 <__mempcpy_chk@plt+0xd414>
   1ec7c:	ldr	r0, [sp, #20]
   1ec80:	b	1ec88 <__mempcpy_chk@plt+0xd6a8>
   1ec84:	mov	r0, #0
   1ec88:	sub	sp, fp, #28
   1ec8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ec94:	add	fp, sp, #24
   1ec98:	sub	sp, sp, #8
   1ec9c:	mov	r6, r0
   1eca0:	mov	r4, r1
   1eca4:	mov	r0, r1
   1eca8:	mov	r1, r2
   1ecac:	mov	r5, r3
   1ecb0:	mov	r7, r2
   1ecb4:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1ecb8:	cmp	r0, #0
   1ecbc:	beq	1eccc <__mempcpy_chk@plt+0xd6ec>
   1ecc0:	mov	r0, #0
   1ecc4:	sub	sp, fp, #24
   1ecc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1eccc:	ldr	r8, [fp, #8]
   1ecd0:	ldr	r0, [r6]
   1ecd4:	add	r1, r0, r7, lsl #3
   1ecd8:	ldrb	r1, [r1, #4]
   1ecdc:	cmp	r1, r8
   1ece0:	ldreq	r0, [r0, r7, lsl #3]
   1ece4:	cmpeq	r0, r5
   1ece8:	beq	1ed70 <__mempcpy_chk@plt+0xd790>
   1ecec:	mov	r0, r4
   1ecf0:	mov	r1, r7
   1ecf4:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1ecf8:	cmp	r0, #0
   1ecfc:	beq	1ed8c <__mempcpy_chk@plt+0xd7ac>
   1ed00:	ldr	r0, [r6, #20]
   1ed04:	add	r7, r7, r7, lsl #1
   1ed08:	add	r1, r0, r7, lsl #2
   1ed0c:	ldr	r2, [r1, #4]
   1ed10:	cmp	r2, #2
   1ed14:	beq	1ed24 <__mempcpy_chk@plt+0xd744>
   1ed18:	cmp	r2, #0
   1ed1c:	bne	1ed4c <__mempcpy_chk@plt+0xd76c>
   1ed20:	b	1ecc0 <__mempcpy_chk@plt+0xd6e0>
   1ed24:	ldr	r0, [r1, #8]
   1ed28:	mov	r1, r4
   1ed2c:	mov	r3, r5
   1ed30:	ldr	r2, [r0, #4]
   1ed34:	mov	r0, r6
   1ed38:	str	r8, [sp]
   1ed3c:	bl	1ec90 <__mempcpy_chk@plt+0xd6b0>
   1ed40:	cmp	r0, #0
   1ed44:	bne	1ecc4 <__mempcpy_chk@plt+0xd6e4>
   1ed48:	ldr	r0, [r6, #20]
   1ed4c:	add	r0, r0, r7, lsl #2
   1ed50:	ldr	r0, [r0, #8]
   1ed54:	ldr	r7, [r0]
   1ed58:	mov	r0, r4
   1ed5c:	mov	r1, r7
   1ed60:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1ed64:	cmp	r0, #0
   1ed68:	beq	1ecd0 <__mempcpy_chk@plt+0xd6f0>
   1ed6c:	b	1ecc0 <__mempcpy_chk@plt+0xd6e0>
   1ed70:	cmp	r8, #9
   1ed74:	bne	1ecc0 <__mempcpy_chk@plt+0xd6e0>
   1ed78:	mov	r0, r4
   1ed7c:	mov	r1, r7
   1ed80:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1ed84:	cmp	r0, #0
   1ed88:	bne	1ecc0 <__mempcpy_chk@plt+0xd6e0>
   1ed8c:	mov	r0, #12
   1ed90:	b	1ecc4 <__mempcpy_chk@plt+0xd6e4>
   1ed94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed98:	add	fp, sp, #28
   1ed9c:	sub	sp, sp, #4
   1eda0:	ldr	sl, [r2, #4]
   1eda4:	cmp	sl, #0
   1eda8:	beq	1ef5c <__mempcpy_chk@plt+0xd97c>
   1edac:	mov	r4, r2
   1edb0:	mov	r9, r1
   1edb4:	cmp	sl, #1
   1edb8:	mov	r6, sl
   1edbc:	str	r0, [sp]
   1edc0:	blt	1ede0 <__mempcpy_chk@plt+0xd800>
   1edc4:	ldr	r1, [r4, #8]
   1edc8:	mov	r2, sl
   1edcc:	mov	r6, sl
   1edd0:	ldr	r3, [r1], #4
   1edd4:	subs	r2, r2, #1
   1edd8:	add	r6, r3, r6
   1eddc:	bne	1edd0 <__mempcpy_chk@plt+0xd7f0>
   1ede0:	ldr	r1, [r9, #68]	; 0x44
   1ede4:	ldr	r2, [r9, #32]
   1ede8:	and	r1, r1, r6
   1edec:	add	r3, r1, r1, lsl #1
   1edf0:	ldr	r1, [r2, r3, lsl #2]
   1edf4:	cmp	r1, #1
   1edf8:	blt	1ee6c <__mempcpy_chk@plt+0xd88c>
   1edfc:	add	r2, r2, r3, lsl #2
   1ee00:	sub	ip, sl, #1
   1ee04:	mov	r5, #0
   1ee08:	ldr	lr, [r2, #8]
   1ee0c:	b	1ee40 <__mempcpy_chk@plt+0xd860>
   1ee10:	mov	r3, ip
   1ee14:	add	r2, r3, #1
   1ee18:	cmp	r2, #1
   1ee1c:	blt	1ef50 <__mempcpy_chk@plt+0xd970>
   1ee20:	ldr	r2, [r4, #8]
   1ee24:	ldr	r0, [r7, #12]
   1ee28:	ldr	r2, [r2, r3, lsl #2]
   1ee2c:	ldr	r0, [r0, r3, lsl #2]
   1ee30:	sub	r3, r3, #1
   1ee34:	cmp	r0, r2
   1ee38:	beq	1ee14 <__mempcpy_chk@plt+0xd834>
   1ee3c:	b	1ee60 <__mempcpy_chk@plt+0xd880>
   1ee40:	cmp	r4, #0
   1ee44:	beq	1ee60 <__mempcpy_chk@plt+0xd880>
   1ee48:	ldr	r7, [lr, r5, lsl #2]
   1ee4c:	ldr	r3, [r7]
   1ee50:	cmp	r6, r3
   1ee54:	ldreq	r3, [r7, #8]
   1ee58:	cmpeq	r3, sl
   1ee5c:	beq	1ee10 <__mempcpy_chk@plt+0xd830>
   1ee60:	add	r5, r5, #1
   1ee64:	cmp	r5, r1
   1ee68:	blt	1ee40 <__mempcpy_chk@plt+0xd860>
   1ee6c:	mov	r0, #56	; 0x38
   1ee70:	mov	r1, #1
   1ee74:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1ee78:	cmp	r0, #0
   1ee7c:	beq	1ef7c <__mempcpy_chk@plt+0xd99c>
   1ee80:	add	r5, r0, #4
   1ee84:	mov	r7, r0
   1ee88:	mov	r1, r4
   1ee8c:	mov	r0, r5
   1ee90:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1ee94:	cmp	r0, #0
   1ee98:	bne	1ef68 <__mempcpy_chk@plt+0xd988>
   1ee9c:	str	r5, [r7, #40]	; 0x28
   1eea0:	ldr	r0, [r4, #4]
   1eea4:	cmp	r0, #1
   1eea8:	blt	1ef38 <__mempcpy_chk@plt+0xd958>
   1eeac:	ldr	r1, [r4, #8]
   1eeb0:	ldr	sl, [r9]
   1eeb4:	movw	ip, #65280	; 0xff00
   1eeb8:	mov	lr, #32
   1eebc:	movt	ip, #3
   1eec0:	add	r5, ip, #255	; 0xff
   1eec4:	ldr	r2, [r1]
   1eec8:	add	r3, sl, r2, lsl #3
   1eecc:	ldr	r2, [r3, #4]!
   1eed0:	and	r4, r2, r5
   1eed4:	cmp	r4, #1
   1eed8:	beq	1ef2c <__mempcpy_chk@plt+0xd94c>
   1eedc:	ldrb	r8, [r7, #52]	; 0x34
   1eee0:	and	r4, lr, r2, lsr #15
   1eee4:	uxtb	r2, r2
   1eee8:	cmp	r2, #12
   1eeec:	orr	r4, r8, r4
   1eef0:	strb	r4, [r7, #52]	; 0x34
   1eef4:	beq	1ef24 <__mempcpy_chk@plt+0xd944>
   1eef8:	cmp	r2, #4
   1eefc:	beq	1ef10 <__mempcpy_chk@plt+0xd930>
   1ef00:	cmp	r2, #2
   1ef04:	bne	1ef18 <__mempcpy_chk@plt+0xd938>
   1ef08:	orr	r2, r4, #16
   1ef0c:	b	1ef28 <__mempcpy_chk@plt+0xd948>
   1ef10:	orr	r2, r4, #64	; 0x40
   1ef14:	b	1ef28 <__mempcpy_chk@plt+0xd948>
   1ef18:	ldr	r2, [r3]
   1ef1c:	tst	r2, ip
   1ef20:	beq	1ef2c <__mempcpy_chk@plt+0xd94c>
   1ef24:	orr	r2, r4, #128	; 0x80
   1ef28:	strb	r2, [r7, #52]	; 0x34
   1ef2c:	add	r1, r1, #4
   1ef30:	subs	r0, r0, #1
   1ef34:	bne	1eec4 <__mempcpy_chk@plt+0xd8e4>
   1ef38:	mov	r0, r9
   1ef3c:	mov	r1, r7
   1ef40:	mov	r2, r6
   1ef44:	bl	1c9d4 <__mempcpy_chk@plt+0xb3f4>
   1ef48:	cmp	r0, #0
   1ef4c:	bne	1ef74 <__mempcpy_chk@plt+0xd994>
   1ef50:	mov	r0, r7
   1ef54:	sub	sp, fp, #28
   1ef58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef5c:	mov	r7, #0
   1ef60:	str	r7, [r0]
   1ef64:	b	1ef50 <__mempcpy_chk@plt+0xd970>
   1ef68:	mov	r0, r7
   1ef6c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1ef70:	b	1ef7c <__mempcpy_chk@plt+0xd99c>
   1ef74:	mov	r0, r7
   1ef78:	bl	17b04 <__mempcpy_chk@plt+0x6524>
   1ef7c:	ldr	r1, [sp]
   1ef80:	mov	r0, #12
   1ef84:	mov	r7, #0
   1ef88:	str	r0, [r1]
   1ef8c:	b	1ef50 <__mempcpy_chk@plt+0xd970>
   1ef90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ef94:	add	fp, sp, #24
   1ef98:	ldr	lr, [r0]
   1ef9c:	add	r7, lr, r1, lsl #3
   1efa0:	ldrb	r9, [r7, #4]
   1efa4:	cmp	r9, #7
   1efa8:	beq	1f178 <__mempcpy_chk@plt+0xdb98>
   1efac:	ldr	ip, [r2, #80]	; 0x50
   1efb0:	mov	r6, #1
   1efb4:	cmp	ip, #1
   1efb8:	beq	1eff4 <__mempcpy_chk@plt+0xda14>
   1efbc:	ldr	r5, [r2, #28]
   1efc0:	add	r7, r3, #1
   1efc4:	cmp	r7, r5
   1efc8:	bge	1eff4 <__mempcpy_chk@plt+0xda14>
   1efcc:	ldr	r6, [r2, #8]
   1efd0:	add	r7, r6, r3, lsl #2
   1efd4:	mov	r6, #1
   1efd8:	ldr	r4, [r7, r6, lsl #2]
   1efdc:	cmn	r4, #1
   1efe0:	bne	1eff4 <__mempcpy_chk@plt+0xda14>
   1efe4:	add	r6, r6, #1
   1efe8:	add	r4, r3, r6
   1efec:	cmp	r4, r5
   1eff0:	blt	1efd8 <__mempcpy_chk@plt+0xd9f8>
   1eff4:	mov	r8, #0
   1eff8:	cmp	r9, #5
   1effc:	bne	1f040 <__mempcpy_chk@plt+0xda60>
   1f000:	cmp	r6, #2
   1f004:	blt	1f168 <__mempcpy_chk@plt+0xdb88>
   1f008:	ldr	r0, [r0, #128]	; 0x80
   1f00c:	tst	r0, #64	; 0x40
   1f010:	bne	1f024 <__mempcpy_chk@plt+0xda44>
   1f014:	ldr	r1, [r2, #4]
   1f018:	ldrb	r1, [r1, r3]
   1f01c:	cmp	r1, #10
   1f020:	beq	1f168 <__mempcpy_chk@plt+0xdb88>
   1f024:	tst	r0, #128	; 0x80
   1f028:	beq	1f164 <__mempcpy_chk@plt+0xdb84>
   1f02c:	ldr	r0, [r2, #4]
   1f030:	ldrb	r0, [r0, r3]
   1f034:	cmp	r0, #0
   1f038:	movne	r8, r6
   1f03c:	b	1f168 <__mempcpy_chk@plt+0xdb88>
   1f040:	cmp	r9, #6
   1f044:	bne	1f168 <__mempcpy_chk@plt+0xdb88>
   1f048:	cmp	r6, #2
   1f04c:	blt	1f168 <__mempcpy_chk@plt+0xdb88>
   1f050:	ldr	r7, [lr, r1, lsl #3]
   1f054:	ldr	r0, [r7, #32]
   1f058:	cmp	r0, #0
   1f05c:	bne	1f078 <__mempcpy_chk@plt+0xda98>
   1f060:	ldr	r1, [r7, #36]	; 0x24
   1f064:	cmp	r1, #0
   1f068:	bne	1f078 <__mempcpy_chk@plt+0xda98>
   1f06c:	ldr	r1, [r7, #20]
   1f070:	cmp	r1, #0
   1f074:	beq	1f170 <__mempcpy_chk@plt+0xdb90>
   1f078:	cmp	ip, #1
   1f07c:	bne	1f08c <__mempcpy_chk@plt+0xdaac>
   1f080:	ldr	r1, [r2, #4]
   1f084:	ldrb	r5, [r1, r3]
   1f088:	b	1f094 <__mempcpy_chk@plt+0xdab4>
   1f08c:	ldr	r1, [r2, #8]
   1f090:	ldr	r5, [r1, r3, lsl #2]
   1f094:	ldr	r1, [r7, #20]
   1f098:	cmp	r1, #1
   1f09c:	blt	1f0c0 <__mempcpy_chk@plt+0xdae0>
   1f0a0:	ldr	r2, [r7]
   1f0a4:	mov	r3, #0
   1f0a8:	ldr	r4, [r2, r3, lsl #2]
   1f0ac:	cmp	r5, r4
   1f0b0:	beq	1f13c <__mempcpy_chk@plt+0xdb5c>
   1f0b4:	add	r3, r3, #1
   1f0b8:	cmp	r3, r1
   1f0bc:	blt	1f0a8 <__mempcpy_chk@plt+0xdac8>
   1f0c0:	ldr	r1, [r7, #36]	; 0x24
   1f0c4:	cmp	r1, #1
   1f0c8:	blt	1f0fc <__mempcpy_chk@plt+0xdb1c>
   1f0cc:	mov	r4, #0
   1f0d0:	ldr	r0, [r7, #12]
   1f0d4:	ldr	r1, [r0, r4, lsl #2]
   1f0d8:	mov	r0, r5
   1f0dc:	bl	112e0 <iswctype@plt>
   1f0e0:	cmp	r0, #0
   1f0e4:	bne	1f13c <__mempcpy_chk@plt+0xdb5c>
   1f0e8:	ldr	r0, [r7, #36]	; 0x24
   1f0ec:	add	r4, r4, #1
   1f0f0:	cmp	r4, r0
   1f0f4:	blt	1f0d0 <__mempcpy_chk@plt+0xdaf0>
   1f0f8:	ldr	r0, [r7, #32]
   1f0fc:	cmp	r0, #1
   1f100:	blt	1f134 <__mempcpy_chk@plt+0xdb54>
   1f104:	ldr	r1, [r7, #4]
   1f108:	mov	r2, #0
   1f10c:	ldr	r3, [r1, r2, lsl #2]
   1f110:	cmp	r3, r5
   1f114:	bhi	1f128 <__mempcpy_chk@plt+0xdb48>
   1f118:	ldr	r3, [r7, #8]
   1f11c:	ldr	r3, [r3, r2, lsl #2]
   1f120:	cmp	r5, r3
   1f124:	bls	1f13c <__mempcpy_chk@plt+0xdb5c>
   1f128:	add	r2, r2, #1
   1f12c:	cmp	r2, r0
   1f130:	blt	1f10c <__mempcpy_chk@plt+0xdb2c>
   1f134:	mov	r0, #0
   1f138:	b	1f140 <__mempcpy_chk@plt+0xdb60>
   1f13c:	mov	r0, r6
   1f140:	ldrb	r1, [r7, #16]
   1f144:	tst	r1, #1
   1f148:	bne	1f154 <__mempcpy_chk@plt+0xdb74>
   1f14c:	mov	r8, r0
   1f150:	b	1f168 <__mempcpy_chk@plt+0xdb88>
   1f154:	cmp	r0, #0
   1f158:	bgt	1f168 <__mempcpy_chk@plt+0xdb88>
   1f15c:	cmp	r6, #1
   1f160:	movle	r6, #1
   1f164:	mov	r8, r6
   1f168:	mov	r0, r8
   1f16c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f170:	mov	r5, #0
   1f174:	b	1f094 <__mempcpy_chk@plt+0xdab4>
   1f178:	ldr	r0, [r2, #4]
   1f17c:	mov	r8, #0
   1f180:	ldrb	r6, [r0, r3]
   1f184:	cmp	r6, #194	; 0xc2
   1f188:	bcc	1f168 <__mempcpy_chk@plt+0xdb88>
   1f18c:	ldr	r1, [r2, #48]	; 0x30
   1f190:	add	r2, r3, #2
   1f194:	cmp	r2, r1
   1f198:	bgt	1f168 <__mempcpy_chk@plt+0xdb88>
   1f19c:	add	r0, r0, r3
   1f1a0:	cmp	r6, #223	; 0xdf
   1f1a4:	ldrb	r7, [r0, #1]
   1f1a8:	bhi	1f1c8 <__mempcpy_chk@plt+0xdbe8>
   1f1ac:	mov	r8, #2
   1f1b0:	cmp	r7, #191	; 0xbf
   1f1b4:	sxtb	r0, r7
   1f1b8:	movwhi	r8, #0
   1f1bc:	cmn	r0, #1
   1f1c0:	movwgt	r8, #0
   1f1c4:	b	1f168 <__mempcpy_chk@plt+0xdb88>
   1f1c8:	cmp	r6, #239	; 0xef
   1f1cc:	bhi	1f1e8 <__mempcpy_chk@plt+0xdc08>
   1f1d0:	mov	r2, #3
   1f1d4:	cmp	r6, #224	; 0xe0
   1f1d8:	bne	1f244 <__mempcpy_chk@plt+0xdc64>
   1f1dc:	cmp	r7, #160	; 0xa0
   1f1e0:	bcc	1f168 <__mempcpy_chk@plt+0xdb88>
   1f1e4:	b	1f244 <__mempcpy_chk@plt+0xdc64>
   1f1e8:	cmp	r6, #247	; 0xf7
   1f1ec:	bhi	1f208 <__mempcpy_chk@plt+0xdc28>
   1f1f0:	mov	r2, #4
   1f1f4:	cmp	r6, #240	; 0xf0
   1f1f8:	bne	1f244 <__mempcpy_chk@plt+0xdc64>
   1f1fc:	cmp	r7, #144	; 0x90
   1f200:	bcc	1f168 <__mempcpy_chk@plt+0xdb88>
   1f204:	b	1f244 <__mempcpy_chk@plt+0xdc64>
   1f208:	cmp	r6, #251	; 0xfb
   1f20c:	bhi	1f228 <__mempcpy_chk@plt+0xdc48>
   1f210:	mov	r2, #5
   1f214:	cmp	r6, #248	; 0xf8
   1f218:	bne	1f244 <__mempcpy_chk@plt+0xdc64>
   1f21c:	cmp	r7, #136	; 0x88
   1f220:	bcc	1f168 <__mempcpy_chk@plt+0xdb88>
   1f224:	b	1f244 <__mempcpy_chk@plt+0xdc64>
   1f228:	cmp	r6, #253	; 0xfd
   1f22c:	bhi	1f168 <__mempcpy_chk@plt+0xdb88>
   1f230:	mov	r2, #6
   1f234:	cmp	r6, #252	; 0xfc
   1f238:	bne	1f244 <__mempcpy_chk@plt+0xdc64>
   1f23c:	cmp	r7, #132	; 0x84
   1f240:	bcc	1f168 <__mempcpy_chk@plt+0xdb88>
   1f244:	add	r3, r2, r3
   1f248:	cmp	r3, r1
   1f24c:	bgt	1f168 <__mempcpy_chk@plt+0xdb88>
   1f250:	mov	r1, #1
   1f254:	ldrb	r3, [r0, r1]
   1f258:	sxtb	r7, r3
   1f25c:	cmn	r7, #1
   1f260:	bgt	1f168 <__mempcpy_chk@plt+0xdb88>
   1f264:	cmp	r3, #191	; 0xbf
   1f268:	bhi	1f168 <__mempcpy_chk@plt+0xdb88>
   1f26c:	add	r1, r1, #1
   1f270:	cmp	r1, r2
   1f274:	bcc	1f254 <__mempcpy_chk@plt+0xdc74>
   1f278:	mov	r8, r2
   1f27c:	b	1f168 <__mempcpy_chk@plt+0xdb88>
   1f280:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f284:	add	fp, sp, #24
   1f288:	ldr	r5, [r1, #4]
   1f28c:	mvn	r3, #0
   1f290:	mov	r8, #0
   1f294:	uxtab	r4, r3, r5
   1f298:	cmp	r4, #6
   1f29c:	bhi	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f2a0:	ldr	r3, [r0, #4]
   1f2a4:	ldrb	r3, [r3, r2]
   1f2a8:	add	r7, pc, #4
   1f2ac:	sxtb	r6, r3
   1f2b0:	ldr	pc, [r7, r4, lsl #2]
   1f2b4:	ldrdeq	pc, [r1], -r0
   1f2b8:	andeq	pc, r1, ip, lsr #7
   1f2bc:	andeq	pc, r1, r4, ror #5
   1f2c0:	andeq	pc, r1, ip, lsr #7
   1f2c4:	andeq	pc, r1, ip, lsl #6
   1f2c8:	andeq	pc, r1, ip, lsr #7
   1f2cc:	andeq	pc, r1, r4, lsl #6
   1f2d0:	ldrb	r1, [r1]
   1f2d4:	uxtb	r3, r6
   1f2d8:	cmp	r1, r3
   1f2dc:	beq	1f340 <__mempcpy_chk@plt+0xdd60>
   1f2e0:	b	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f2e4:	ldr	r1, [r1]
   1f2e8:	ubfx	r7, r3, #5, #3
   1f2ec:	and	r3, r3, #31
   1f2f0:	ldr	r1, [r1, r7, lsl #2]
   1f2f4:	mov	r7, #1
   1f2f8:	tst	r1, r7, lsl r3
   1f2fc:	bne	1f340 <__mempcpy_chk@plt+0xdd60>
   1f300:	b	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f304:	cmp	r6, #0
   1f308:	blt	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f30c:	cmp	r3, #0
   1f310:	beq	1f330 <__mempcpy_chk@plt+0xdd50>
   1f314:	cmp	r3, #10
   1f318:	bne	1f340 <__mempcpy_chk@plt+0xdd60>
   1f31c:	ldr	r1, [r0, #84]	; 0x54
   1f320:	ldrb	r1, [r1, #128]	; 0x80
   1f324:	tst	r1, #64	; 0x40
   1f328:	bne	1f340 <__mempcpy_chk@plt+0xdd60>
   1f32c:	b	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f330:	ldr	r1, [r0, #84]	; 0x54
   1f334:	ldrb	r1, [r1, #128]	; 0x80
   1f338:	tst	r1, #128	; 0x80
   1f33c:	bne	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f340:	movw	r1, #65280	; 0xff00
   1f344:	movt	r1, #3
   1f348:	tst	r5, r1
   1f34c:	beq	1f3a8 <__mempcpy_chk@plt+0xddc8>
   1f350:	ldr	r3, [r0, #88]	; 0x58
   1f354:	mov	r1, r2
   1f358:	mov	r2, r3
   1f35c:	bl	1d308 <__mempcpy_chk@plt+0xbd28>
   1f360:	and	r1, r0, #1
   1f364:	tst	r5, #1024	; 0x400
   1f368:	beq	1f374 <__mempcpy_chk@plt+0xdd94>
   1f36c:	cmp	r1, #0
   1f370:	beq	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f374:	tst	r5, #2048	; 0x800
   1f378:	cmpne	r1, #0
   1f37c:	bne	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f380:	tst	r5, #8192	; 0x2000
   1f384:	beq	1f390 <__mempcpy_chk@plt+0xddb0>
   1f388:	ands	r1, r0, #2
   1f38c:	beq	1f3ac <__mempcpy_chk@plt+0xddcc>
   1f390:	and	r1, r5, #32768	; 0x8000
   1f394:	mov	r2, #1
   1f398:	and	r0, r0, #8
   1f39c:	eor	r1, r2, r1, lsr #15
   1f3a0:	orr	r0, r1, r0, lsr #3
   1f3a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f3a8:	mov	r8, #1
   1f3ac:	mov	r0, r8
   1f3b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f3b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f3b8:	add	fp, sp, #28
   1f3bc:	sub	sp, sp, #4
   1f3c0:	vpush	{d8-d11}
   1f3c4:	sub	sp, sp, #2128	; 0x850
   1f3c8:	sub	sp, sp, #12288	; 0x3000
   1f3cc:	sub	lr, fp, #1024	; 0x400
   1f3d0:	mov	r8, #0
   1f3d4:	vmov.i32	q4, #0	; 0x00000000
   1f3d8:	sub	r4, lr, #72	; 0x48
   1f3dc:	str	r8, [r1, #44]	; 0x2c
   1f3e0:	str	r8, [r1, #48]	; 0x30
   1f3e4:	mov	r2, r4
   1f3e8:	vst1.64	{d8-d9}, [r2]!
   1f3ec:	vst1.64	{d8-d9}, [r2]
   1f3f0:	ldr	r2, [r1, #8]
   1f3f4:	cmp	r2, #1
   1f3f8:	blt	1fdac <__mempcpy_chk@plt+0xe7cc>
   1f3fc:	sub	lr, fp, #2048	; 0x800
   1f400:	add	sl, r0, #96	; 0x60
   1f404:	mov	r3, #0
   1f408:	mov	r8, #0
   1f40c:	str	r1, [sp, #12]
   1f410:	str	r0, [sp, #20]
   1f414:	sub	r9, lr, #72	; 0x48
   1f418:	str	sl, [sp]
   1f41c:	ldr	r2, [r1, #12]
   1f420:	ldr	r5, [r0]
   1f424:	str	r3, [sp, #16]
   1f428:	ldr	r6, [r2, r3, lsl #2]
   1f42c:	add	r2, r5, r6, lsl #3
   1f430:	ldr	r7, [r2, #4]
   1f434:	uxtb	ip, r7
   1f438:	cmp	ip, #1
   1f43c:	bne	1f514 <__mempcpy_chk@plt+0xdf34>
   1f440:	ldrb	r0, [r5, r6, lsl #3]
   1f444:	mov	r3, #1
   1f448:	ubfx	r1, r0, #5, #3
   1f44c:	and	r0, r0, #31
   1f450:	ldr	r2, [r4, r1, lsl #2]
   1f454:	orr	r0, r2, r3, lsl r0
   1f458:	str	r0, [r4, r1, lsl #2]
   1f45c:	movw	r0, #65280	; 0xff00
   1f460:	sub	lr, fp, #3072	; 0xc00
   1f464:	movt	r0, #3
   1f468:	sub	r3, lr, #72	; 0x48
   1f46c:	ands	r0, r7, r0
   1f470:	beq	1f748 <__mempcpy_chk@plt+0xe168>
   1f474:	tst	r7, #8192	; 0x2000
   1f478:	beq	1f49c <__mempcpy_chk@plt+0xdebc>
   1f47c:	ldr	r0, [fp, #-1096]	; 0xfffffbb8
   1f480:	mov	r1, r4
   1f484:	vst1.64	{d8-d9}, [r1]!
   1f488:	vst1.64	{d8-d9}, [r1]
   1f48c:	tst	r0, #1024	; 0x400
   1f490:	beq	1f69c <__mempcpy_chk@plt+0xe0bc>
   1f494:	mov	r0, #1024	; 0x400
   1f498:	str	r0, [fp, #-1096]	; 0xfffffbb8
   1f49c:	tst	r7, #32768	; 0x8000
   1f4a0:	bne	1f690 <__mempcpy_chk@plt+0xe0b0>
   1f4a4:	tst	r7, #1024	; 0x400
   1f4a8:	beq	1f678 <__mempcpy_chk@plt+0xe098>
   1f4ac:	movw	r0, #255	; 0xff
   1f4b0:	movt	r0, #64	; 0x40
   1f4b4:	and	r0, r7, r0
   1f4b8:	cmp	r0, #1
   1f4bc:	beq	1f690 <__mempcpy_chk@plt+0xe0b0>
   1f4c0:	ldr	r1, [sp, #20]
   1f4c4:	vmov.i32	q8, #0	; 0x00000000
   1f4c8:	ldr	r0, [r1, #92]	; 0x5c
   1f4cc:	cmp	r0, #1
   1f4d0:	ble	1f628 <__mempcpy_chk@plt+0xe048>
   1f4d4:	ldr	r0, [r1, #60]	; 0x3c
   1f4d8:	mov	r1, #0
   1f4dc:	add	r2, sl, r1
   1f4e0:	add	r3, r0, r1
   1f4e4:	vld1.32	{d20-d21}, [r2]
   1f4e8:	vld1.32	{d18-d19}, [r3]
   1f4ec:	add	r2, r4, r1
   1f4f0:	add	r1, r1, #16
   1f4f4:	vld1.32	{d22-d23}, [r2]
   1f4f8:	cmp	r1, #32
   1f4fc:	vorn	q9, q10, q9
   1f500:	vand	q9, q11, q9
   1f504:	vorr	q8, q9, q8
   1f508:	vst1.32	{d18-d19}, [r2]
   1f50c:	bne	1f4dc <__mempcpy_chk@plt+0xdefc>
   1f510:	b	1f654 <__mempcpy_chk@plt+0xe074>
   1f514:	cmp	ip, #7
   1f518:	beq	1f55c <__mempcpy_chk@plt+0xdf7c>
   1f51c:	cmp	ip, #5
   1f520:	beq	1f5a8 <__mempcpy_chk@plt+0xdfc8>
   1f524:	cmp	ip, #3
   1f528:	bne	1f9ac <__mempcpy_chk@plt+0xe3cc>
   1f52c:	ldr	r0, [r5, r6, lsl #3]
   1f530:	mov	r1, #0
   1f534:	add	r2, r4, r1
   1f538:	add	r3, r0, r1
   1f53c:	add	r1, r1, #16
   1f540:	vld1.32	{d16-d17}, [r3]
   1f544:	vld1.32	{d18-d19}, [r2]
   1f548:	cmp	r1, #32
   1f54c:	vorr	q8, q9, q8
   1f550:	vst1.32	{d16-d17}, [r2]
   1f554:	bne	1f534 <__mempcpy_chk@plt+0xdf54>
   1f558:	b	1f45c <__mempcpy_chk@plt+0xde7c>
   1f55c:	mvn	r1, #0
   1f560:	str	r1, [fp, #-1084]	; 0xfffffbc4
   1f564:	str	r1, [fp, #-1088]	; 0xfffffbc0
   1f568:	str	r1, [fp, #-1092]	; 0xfffffbbc
   1f56c:	str	r1, [fp, #-1096]	; 0xfffffbb8
   1f570:	ldr	r1, [r0, #128]	; 0x80
   1f574:	and	r0, r1, #128	; 0x80
   1f578:	ands	r1, r1, #64	; 0x40
   1f57c:	beq	1f588 <__mempcpy_chk@plt+0xdfa8>
   1f580:	cmp	r0, #0
   1f584:	beq	1f45c <__mempcpy_chk@plt+0xde7c>
   1f588:	cmp	r1, #0
   1f58c:	mvn	r1, #1
   1f590:	movweq	r1, #64510	; 0xfbfe
   1f594:	movteq	r1, #65535	; 0xffff
   1f598:	cmp	r0, #0
   1f59c:	mvneq	r1, #1024	; 0x400
   1f5a0:	str	r1, [fp, #-1096]	; 0xfffffbb8
   1f5a4:	b	1f45c <__mempcpy_chk@plt+0xde7c>
   1f5a8:	ldr	r1, [r0, #92]	; 0x5c
   1f5ac:	cmp	r1, #2
   1f5b0:	blt	1f5e4 <__mempcpy_chk@plt+0xe004>
   1f5b4:	ldr	r0, [r0, #60]	; 0x3c
   1f5b8:	mov	r1, #0
   1f5bc:	add	r2, r4, r1
   1f5c0:	add	r3, r0, r1
   1f5c4:	add	r1, r1, #16
   1f5c8:	vld1.32	{d16-d17}, [r3]
   1f5cc:	vld1.32	{d18-d19}, [r2]
   1f5d0:	cmp	r1, #32
   1f5d4:	vorr	q8, q9, q8
   1f5d8:	vst1.32	{d16-d17}, [r2]
   1f5dc:	bne	1f5bc <__mempcpy_chk@plt+0xdfdc>
   1f5e0:	b	1f5fc <__mempcpy_chk@plt+0xe01c>
   1f5e4:	mov	r0, r4
   1f5e8:	mov	r1, #255	; 0xff
   1f5ec:	mov	r2, #32
   1f5f0:	str	ip, [sp, #8]
   1f5f4:	bl	114f0 <memset@plt>
   1f5f8:	ldr	ip, [sp, #8]
   1f5fc:	ldr	r0, [sp, #20]
   1f600:	ldr	r0, [r0, #128]	; 0x80
   1f604:	tst	r0, #64	; 0x40
   1f608:	ldreq	r1, [fp, #-1096]	; 0xfffffbb8
   1f60c:	biceq	r1, r1, #1024	; 0x400
   1f610:	streq	r1, [fp, #-1096]	; 0xfffffbb8
   1f614:	tst	r0, #128	; 0x80
   1f618:	ldrne	r0, [fp, #-1096]	; 0xfffffbb8
   1f61c:	bicne	r0, r0, #1
   1f620:	strne	r0, [fp, #-1096]	; 0xfffffbb8
   1f624:	b	1f45c <__mempcpy_chk@plt+0xde7c>
   1f628:	mov	r0, #0
   1f62c:	add	r1, r4, r0
   1f630:	add	r2, sl, r0
   1f634:	add	r0, r0, #16
   1f638:	vld1.32	{d18-d19}, [r2]
   1f63c:	vld1.32	{d20-d21}, [r1]
   1f640:	cmp	r0, #32
   1f644:	vand	q9, q10, q9
   1f648:	vorr	q8, q9, q8
   1f64c:	vst1.32	{d18-d19}, [r1]
   1f650:	bne	1f62c <__mempcpy_chk@plt+0xe04c>
   1f654:	vext.8	q9, q8, q8, #8
   1f658:	sub	lr, fp, #3072	; 0xc00
   1f65c:	vorr	q8, q8, q9
   1f660:	sub	r3, lr, #72	; 0x48
   1f664:	vdup.32	q9, d16[1]
   1f668:	vorr	q8, q8, q9
   1f66c:	vmov.32	r0, d16[0]
   1f670:	cmp	r0, #0
   1f674:	beq	1f69c <__mempcpy_chk@plt+0xe0bc>
   1f678:	tst	r7, #2048	; 0x800
   1f67c:	beq	1f748 <__mempcpy_chk@plt+0xe168>
   1f680:	tst	r7, #4194304	; 0x400000
   1f684:	beq	1f6a4 <__mempcpy_chk@plt+0xe0c4>
   1f688:	cmp	ip, #1
   1f68c:	bne	1f6a4 <__mempcpy_chk@plt+0xe0c4>
   1f690:	mov	r0, r4
   1f694:	vst1.64	{d8-d9}, [r0]!
   1f698:	vst1.64	{d8-d9}, [r0]
   1f69c:	ldr	r1, [sp, #12]
   1f6a0:	b	1f9ac <__mempcpy_chk@plt+0xe3cc>
   1f6a4:	ldr	r1, [sp, #20]
   1f6a8:	vmov.i32	q8, #0	; 0x00000000
   1f6ac:	ldr	r0, [r1, #92]	; 0x5c
   1f6b0:	cmp	r0, #1
   1f6b4:	ble	1f6f8 <__mempcpy_chk@plt+0xe118>
   1f6b8:	ldr	r0, [r1, #60]	; 0x3c
   1f6bc:	mov	r1, #0
   1f6c0:	add	r2, r0, r1
   1f6c4:	add	r3, sl, r1
   1f6c8:	vld1.32	{d20-d21}, [r2]
   1f6cc:	vld1.32	{d18-d19}, [r3]
   1f6d0:	add	r2, r4, r1
   1f6d4:	add	r1, r1, #16
   1f6d8:	vld1.32	{d22-d23}, [r2]
   1f6dc:	cmp	r1, #32
   1f6e0:	vand	q9, q10, q9
   1f6e4:	vbic	q9, q11, q9
   1f6e8:	vorr	q8, q9, q8
   1f6ec:	vst1.32	{d18-d19}, [r2]
   1f6f0:	bne	1f6c0 <__mempcpy_chk@plt+0xe0e0>
   1f6f4:	b	1f724 <__mempcpy_chk@plt+0xe144>
   1f6f8:	mov	r0, #0
   1f6fc:	add	r1, r4, r0
   1f700:	add	r2, sl, r0
   1f704:	add	r0, r0, #16
   1f708:	vld1.32	{d18-d19}, [r2]
   1f70c:	vld1.32	{d20-d21}, [r1]
   1f710:	cmp	r0, #32
   1f714:	vbic	q9, q10, q9
   1f718:	vorr	q8, q9, q8
   1f71c:	vst1.32	{d18-d19}, [r1]
   1f720:	bne	1f6fc <__mempcpy_chk@plt+0xe11c>
   1f724:	vext.8	q9, q8, q8, #8
   1f728:	sub	lr, fp, #3072	; 0xc00
   1f72c:	vorr	q8, q8, q9
   1f730:	sub	r3, lr, #72	; 0x48
   1f734:	vdup.32	q9, d16[1]
   1f738:	vorr	q8, q8, q9
   1f73c:	vmov.32	r0, d16[0]
   1f740:	cmp	r0, #0
   1f744:	beq	1f69c <__mempcpy_chk@plt+0xe0bc>
   1f748:	mov	r7, #0
   1f74c:	cmp	r8, #1
   1f750:	blt	1f924 <__mempcpy_chk@plt+0xe344>
   1f754:	add	sl, sp, #24
   1f758:	stmib	sp, {r5, ip}
   1f75c:	cmp	ip, #1
   1f760:	bne	1f788 <__mempcpy_chk@plt+0xe1a8>
   1f764:	ldrb	r1, [r5, r6, lsl #3]
   1f768:	add	r0, sp, #24
   1f76c:	add	r0, r0, r7, lsl #5
   1f770:	ubfx	r2, r1, #5, #3
   1f774:	and	r1, r1, #31
   1f778:	ldr	r0, [r0, r2, lsl #2]
   1f77c:	mov	r2, #1
   1f780:	tst	r0, r2, lsl r1
   1f784:	beq	1f908 <__mempcpy_chk@plt+0xe328>
   1f788:	vmov.i32	q8, #0	; 0x00000000
   1f78c:	mov	r0, #0
   1f790:	add	r1, sl, r0
   1f794:	add	r2, r4, r0
   1f798:	vld1.32	{d20-d21}, [r1]
   1f79c:	vld1.32	{d18-d19}, [r2]
   1f7a0:	add	r1, r9, r0
   1f7a4:	add	r0, r0, #16
   1f7a8:	cmp	r0, #32
   1f7ac:	vand	q9, q10, q9
   1f7b0:	vorr	q8, q9, q8
   1f7b4:	vst1.32	{d18-d19}, [r1]
   1f7b8:	bne	1f790 <__mempcpy_chk@plt+0xe1b0>
   1f7bc:	vext.8	q9, q8, q8, #8
   1f7c0:	vorr	q8, q8, q9
   1f7c4:	vdup.32	q9, d16[1]
   1f7c8:	vorr	q8, q8, q9
   1f7cc:	vmov.32	r0, d16[0]
   1f7d0:	cmp	r0, #0
   1f7d4:	beq	1f908 <__mempcpy_chk@plt+0xe328>
   1f7d8:	vmov.i32	q5, #0	; 0x00000000
   1f7dc:	mov	r0, #0
   1f7e0:	vmov.i32	q8, #0	; 0x00000000
   1f7e4:	add	r1, r4, r0
   1f7e8:	add	r2, sl, r0
   1f7ec:	vld1.32	{d18-d19}, [r2]
   1f7f0:	vld1.32	{d20-d21}, [r1]
   1f7f4:	add	r2, r3, r0
   1f7f8:	add	r0, r0, #16
   1f7fc:	cmp	r0, #32
   1f800:	vbic	q11, q10, q9
   1f804:	vbic	q9, q9, q10
   1f808:	vorr	q5, q11, q5
   1f80c:	vorr	q8, q9, q8
   1f810:	vst1.32	{d18-d19}, [r2]
   1f814:	vst1.32	{d22-d23}, [r1]
   1f818:	bne	1f7e4 <__mempcpy_chk@plt+0xe204>
   1f81c:	vext.8	q9, q8, q8, #8
   1f820:	vorr	q8, q8, q9
   1f824:	vdup.32	q9, d16[1]
   1f828:	vorr	q8, q8, q9
   1f82c:	vmov.32	r0, d16[0]
   1f830:	cmp	r0, #0
   1f834:	beq	1f8a4 <__mempcpy_chk@plt+0xe2c4>
   1f838:	mov	r0, r3
   1f83c:	mov	r1, r9
   1f840:	add	r2, sp, #24
   1f844:	sub	lr, fp, #6144	; 0x1800
   1f848:	vld1.32	{d16-d17}, [r0]!
   1f84c:	vld1.32	{d18-d19}, [r1]!
   1f850:	mov	r3, r2
   1f854:	add	r2, r2, r8, lsl #5
   1f858:	vld1.64	{d20-d21}, [r0]
   1f85c:	vst1.32	{d16-d17}, [r2]!
   1f860:	vld1.64	{d16-d17}, [r1]
   1f864:	add	r0, r3, r7, lsl #5
   1f868:	sub	r1, lr, #120	; 0x78
   1f86c:	vst1.32	{d20-d21}, [r2]
   1f870:	vst1.32	{d18-d19}, [r0]!
   1f874:	mov	r2, r1
   1f878:	vst1.32	{d16-d17}, [r0]
   1f87c:	add	r0, r8, r8, lsl #1
   1f880:	add	r0, r1, r0, lsl #2
   1f884:	add	r1, r7, r7, lsl #1
   1f888:	add	r5, r2, r1, lsl #2
   1f88c:	mov	r1, r5
   1f890:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   1f894:	cmp	r0, #0
   1f898:	bne	1fd78 <__mempcpy_chk@plt+0xe798>
   1f89c:	add	r8, r8, #1
   1f8a0:	b	1f8b4 <__mempcpy_chk@plt+0xe2d4>
   1f8a4:	sub	lr, fp, #6144	; 0x1800
   1f8a8:	add	r0, r7, r7, lsl #1
   1f8ac:	sub	r1, lr, #120	; 0x78
   1f8b0:	add	r5, r1, r0, lsl #2
   1f8b4:	ldr	r0, [sp, #12]
   1f8b8:	ldr	r1, [sp, #16]
   1f8bc:	ldr	r0, [r0, #12]
   1f8c0:	ldr	r1, [r0, r1, lsl #2]
   1f8c4:	mov	r0, r5
   1f8c8:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   1f8cc:	cmp	r0, #0
   1f8d0:	beq	1fd78 <__mempcpy_chk@plt+0xe798>
   1f8d4:	vext.8	q8, q5, q8, #8
   1f8d8:	mov	r1, #0
   1f8dc:	vorr	q8, q5, q8
   1f8e0:	vdup.32	q9, d16[1]
   1f8e4:	vorr	q8, q8, q9
   1f8e8:	vmov.32	r0, d16[0]
   1f8ec:	cmp	r0, #0
   1f8f0:	movweq	r1, #17
   1f8f4:	cmp	r1, #0
   1f8f8:	bne	1f91c <__mempcpy_chk@plt+0xe33c>
   1f8fc:	ldmib	sp, {r5, ip}
   1f900:	sub	lr, fp, #3072	; 0xc00
   1f904:	sub	r3, lr, #72	; 0x48
   1f908:	add	r7, r7, #1
   1f90c:	add	sl, sl, #32
   1f910:	cmp	r7, r8
   1f914:	blt	1f75c <__mempcpy_chk@plt+0xe17c>
   1f918:	b	1f924 <__mempcpy_chk@plt+0xe344>
   1f91c:	cmp	r1, #17
   1f920:	bne	1f9c8 <__mempcpy_chk@plt+0xe3e8>
   1f924:	ldr	r1, [sp, #12]
   1f928:	ldr	sl, [sp]
   1f92c:	cmp	r7, r8
   1f930:	bne	1f9ac <__mempcpy_chk@plt+0xe3cc>
   1f934:	mov	r0, r4
   1f938:	sub	lr, fp, #6144	; 0x1800
   1f93c:	vld1.32	{d16-d17}, [r0]!
   1f940:	sub	r2, lr, #120	; 0x78
   1f944:	vld1.64	{d18-d19}, [r0]
   1f948:	add	r0, sp, #24
   1f94c:	add	r0, r0, r7, lsl #5
   1f950:	vst1.32	{d16-d17}, [r0]!
   1f954:	vst1.32	{d18-d19}, [r0]
   1f958:	ldr	r0, [r1, #12]
   1f95c:	ldr	r1, [sp, #16]
   1f960:	ldr	r8, [r0, r1, lsl #2]
   1f964:	add	r0, r7, r7, lsl #1
   1f968:	mov	r1, #1
   1f96c:	add	r5, r2, r0, lsl #2
   1f970:	str	r1, [r2, r0, lsl #2]
   1f974:	mov	r0, #4
   1f978:	mov	r6, r5
   1f97c:	str	r1, [r6, #4]!
   1f980:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1f984:	cmp	r0, #0
   1f988:	str	r0, [r5, #8]
   1f98c:	beq	1fde4 <__mempcpy_chk@plt+0xe804>
   1f990:	ldr	r1, [sp, #12]
   1f994:	ldr	sl, [sp]
   1f998:	str	r8, [r0]
   1f99c:	mov	r0, r4
   1f9a0:	add	r8, r7, #1
   1f9a4:	vst1.64	{d8-d9}, [r0]!
   1f9a8:	vst1.64	{d8-d9}, [r0]
   1f9ac:	ldr	r3, [sp, #16]
   1f9b0:	ldr	r0, [r1, #8]
   1f9b4:	add	r3, r3, #1
   1f9b8:	cmp	r3, r0
   1f9bc:	ldr	r0, [sp, #20]
   1f9c0:	blt	1f41c <__mempcpy_chk@plt+0xde3c>
   1f9c4:	b	1f9dc <__mempcpy_chk@plt+0xe3fc>
   1f9c8:	ldr	r1, [sp, #12]
   1f9cc:	ldr	sl, [sp]
   1f9d0:	cmp	r0, #0
   1f9d4:	bne	1f9ac <__mempcpy_chk@plt+0xe3cc>
   1f9d8:	b	1f9e4 <__mempcpy_chk@plt+0xe404>
   1f9dc:	cmp	r8, #0
   1f9e0:	ble	1fdac <__mempcpy_chk@plt+0xe7cc>
   1f9e4:	mov	r0, #0
   1f9e8:	str	r0, [fp, #-3152]	; 0xfffff3b0
   1f9ec:	add	r0, r8, #1
   1f9f0:	str	r0, [fp, #-3156]	; 0xfffff3ac
   1f9f4:	lsl	r0, r0, #2
   1f9f8:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1f9fc:	cmp	r0, #0
   1fa00:	str	r0, [fp, #-3148]	; 0xfffff3b4
   1fa04:	mov	r0, #0
   1fa08:	movweq	r0, #12
   1fa0c:	str	r0, [fp, #-72]	; 0xffffffb8
   1fa10:	beq	1fdf4 <__mempcpy_chk@plt+0xe814>
   1fa14:	sub	lr, fp, #3072	; 0xc00
   1fa18:	vmov.i32	q8, #0	; 0x00000000
   1fa1c:	add	r7, sp, #24
   1fa20:	mov	r6, #0
   1fa24:	mov	r1, #0
   1fa28:	sub	sl, lr, #120	; 0x78
   1fa2c:	mov	r0, sl
   1fa30:	vst1.64	{d16-d17}, [r0]!
   1fa34:	vst1.64	{d16-d17}, [r0]
   1fa38:	mov	r0, #0
   1fa3c:	stmib	sp, {r0, r8}
   1fa40:	mov	r0, #0
   1fa44:	sub	lr, fp, #6144	; 0x1800
   1fa48:	str	r1, [sp, #16]
   1fa4c:	str	r0, [fp, #-3152]	; 0xfffff3b0
   1fa50:	add	r0, r1, r1, lsl #1
   1fa54:	sub	r2, lr, #120	; 0x78
   1fa58:	ldr	r1, [sp, #20]
   1fa5c:	add	r0, r2, r0, lsl #2
   1fa60:	ldr	r5, [r0, #4]
   1fa64:	cmp	r5, #1
   1fa68:	blt	1facc <__mempcpy_chk@plt+0xe4ec>
   1fa6c:	ldr	sl, [r0, #8]
   1fa70:	mov	r8, #0
   1fa74:	ldr	r0, [sl, r8, lsl #2]
   1fa78:	ldr	r2, [r1, #12]
   1fa7c:	ldr	r0, [r2, r0, lsl #2]
   1fa80:	cmn	r0, #1
   1fa84:	beq	1fab0 <__mempcpy_chk@plt+0xe4d0>
   1fa88:	ldr	r1, [r1, #24]
   1fa8c:	add	r0, r0, r0, lsl #1
   1fa90:	sub	lr, fp, #3072	; 0xc00
   1fa94:	add	r1, r1, r0, lsl #2
   1fa98:	sub	r0, lr, #84	; 0x54
   1fa9c:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   1faa0:	ldr	r1, [sp, #20]
   1faa4:	mov	r6, #0
   1faa8:	cmp	r0, #0
   1faac:	bne	1fd3c <__mempcpy_chk@plt+0xe75c>
   1fab0:	add	r8, r8, #1
   1fab4:	cmp	r8, r5
   1fab8:	blt	1fa74 <__mempcpy_chk@plt+0xe494>
   1fabc:	ldr	r8, [sp, #8]
   1fac0:	sub	lr, fp, #3072	; 0xc00
   1fac4:	str	r6, [fp, #-72]	; 0xffffffb8
   1fac8:	sub	sl, lr, #120	; 0x78
   1facc:	sub	lr, fp, #3072	; 0xc00
   1fad0:	sub	r0, fp, #72	; 0x48
   1fad4:	mov	r3, #0
   1fad8:	sub	r2, lr, #84	; 0x54
   1fadc:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1fae0:	ldr	r1, [sp, #16]
   1fae4:	ldr	r6, [fp, #-72]	; 0xffffffb8
   1fae8:	mov	r5, r0
   1faec:	cmp	r0, #0
   1faf0:	str	r0, [r4, r1, lsl #2]
   1faf4:	bne	1fb00 <__mempcpy_chk@plt+0xe520>
   1faf8:	cmp	r6, #0
   1fafc:	bne	1fd44 <__mempcpy_chk@plt+0xe764>
   1fb00:	ldrsb	r0, [r5, #52]	; 0x34
   1fb04:	cmn	r0, #1
   1fb08:	ble	1fb20 <__mempcpy_chk@plt+0xe540>
   1fb0c:	sub	lr, fp, #3072	; 0xc00
   1fb10:	str	r5, [r9, r1, lsl #2]
   1fb14:	sub	r0, lr, #72	; 0x48
   1fb18:	str	r5, [r0, r1, lsl #2]
   1fb1c:	b	1fbc0 <__mempcpy_chk@plt+0xe5e0>
   1fb20:	ldr	r1, [sp, #20]
   1fb24:	sub	lr, fp, #3072	; 0xc00
   1fb28:	sub	r0, fp, #72	; 0x48
   1fb2c:	mov	r3, #1
   1fb30:	sub	r2, lr, #84	; 0x54
   1fb34:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1fb38:	ldr	r1, [sp, #16]
   1fb3c:	cmp	r0, #0
   1fb40:	str	r0, [r9, r1, lsl #2]
   1fb44:	bne	1fb54 <__mempcpy_chk@plt+0xe574>
   1fb48:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1fb4c:	cmp	r1, #0
   1fb50:	bne	1fd44 <__mempcpy_chk@plt+0xe764>
   1fb54:	cmp	r5, r0
   1fb58:	beq	1fb80 <__mempcpy_chk@plt+0xe5a0>
   1fb5c:	ldr	r1, [sp, #20]
   1fb60:	ldr	r2, [sp, #4]
   1fb64:	ldr	r0, [r1, #92]	; 0x5c
   1fb68:	cmp	r0, #1
   1fb6c:	mov	r0, #0
   1fb70:	movwgt	r0, #1
   1fb74:	orr	r2, r2, r0
   1fb78:	str	r2, [sp, #4]
   1fb7c:	b	1fb84 <__mempcpy_chk@plt+0xe5a4>
   1fb80:	ldr	r1, [sp, #20]
   1fb84:	sub	lr, fp, #3072	; 0xc00
   1fb88:	sub	r0, fp, #72	; 0x48
   1fb8c:	mov	r3, #2
   1fb90:	sub	r2, lr, #84	; 0x54
   1fb94:	bl	1c698 <__mempcpy_chk@plt+0xb0b8>
   1fb98:	ldr	r2, [sp, #16]
   1fb9c:	ldr	r6, [fp, #-72]	; 0xffffffb8
   1fba0:	sub	lr, fp, #3072	; 0xc00
   1fba4:	cmp	r0, #0
   1fba8:	sub	r1, lr, #72	; 0x48
   1fbac:	str	r0, [r1, r2, lsl #2]
   1fbb0:	mov	r1, r2
   1fbb4:	bne	1fbc0 <__mempcpy_chk@plt+0xe5e0>
   1fbb8:	cmp	r6, #0
   1fbbc:	bne	1fd44 <__mempcpy_chk@plt+0xe764>
   1fbc0:	mov	r0, #0
   1fbc4:	add	r2, sl, r0
   1fbc8:	add	r3, r7, r0
   1fbcc:	add	r0, r0, #16
   1fbd0:	vld1.32	{d16-d17}, [r3]
   1fbd4:	vld1.32	{d18-d19}, [r2]
   1fbd8:	cmp	r0, #32
   1fbdc:	vorr	q8, q9, q8
   1fbe0:	vst1.32	{d16-d17}, [r2]
   1fbe4:	bne	1fbc4 <__mempcpy_chk@plt+0xe5e4>
   1fbe8:	add	r1, r1, #1
   1fbec:	add	r7, r7, #32
   1fbf0:	cmp	r1, r8
   1fbf4:	blt	1fa40 <__mempcpy_chk@plt+0xe460>
   1fbf8:	ldr	r0, [sp, #4]
   1fbfc:	tst	r0, #1
   1fc00:	bne	1fe00 <__mempcpy_chk@plt+0xe820>
   1fc04:	mov	r0, #4
   1fc08:	mov	r1, #256	; 0x100
   1fc0c:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1fc10:	ldr	r1, [sp, #12]
   1fc14:	cmp	r0, #0
   1fc18:	str	r0, [r1, #44]	; 0x2c
   1fc1c:	beq	1fd44 <__mempcpy_chk@plt+0xe764>
   1fc20:	mov	r1, #0
   1fc24:	add	sl, sp, #24
   1fc28:	mov	r3, #0
   1fc2c:	sub	lr, fp, #3072	; 0xc00
   1fc30:	sub	r2, lr, #120	; 0x78
   1fc34:	ldr	r7, [r2, r3, lsl #2]
   1fc38:	cmp	r7, #0
   1fc3c:	beq	1fcb0 <__mempcpy_chk@plt+0xe6d0>
   1fc40:	ldr	r2, [sp, #20]
   1fc44:	lsl	r5, r3, #5
   1fc48:	add	r6, r2, r3, lsl #2
   1fc4c:	add	ip, r6, #96	; 0x60
   1fc50:	mov	r6, #1
   1fc54:	b	1fc90 <__mempcpy_chk@plt+0xe6b0>
   1fc58:	mov	lr, #0
   1fc5c:	ldr	r8, [sl, lr, lsl #3]
   1fc60:	add	lr, lr, #4
   1fc64:	tst	r8, r6
   1fc68:	beq	1fc5c <__mempcpy_chk@plt+0xe67c>
   1fc6c:	ldr	r2, [ip]
   1fc70:	ldr	r8, [sp, #8]
   1fc74:	tst	r2, r6
   1fc78:	mov	r2, r9
   1fc7c:	moveq	r2, r4
   1fc80:	add	r2, r2, lr
   1fc84:	ldr	r2, [r2, #-4]
   1fc88:	str	r2, [r0, r5, lsl #2]
   1fc8c:	b	1fc98 <__mempcpy_chk@plt+0xe6b8>
   1fc90:	tst	r7, #1
   1fc94:	bne	1fc58 <__mempcpy_chk@plt+0xe678>
   1fc98:	lsr	r2, r7, #1
   1fc9c:	cmp	r1, r7, lsr #1
   1fca0:	add	r5, r5, #1
   1fca4:	lsl	r6, r6, #1
   1fca8:	mov	r7, r2
   1fcac:	bne	1fc90 <__mempcpy_chk@plt+0xe6b0>
   1fcb0:	add	r3, r3, #1
   1fcb4:	add	sl, sl, #4
   1fcb8:	cmp	r3, #8
   1fcbc:	bne	1fc2c <__mempcpy_chk@plt+0xe64c>
   1fcc0:	ldrb	r1, [fp, #-3191]	; 0xfffff389
   1fcc4:	sub	lr, fp, #6144	; 0x1800
   1fcc8:	sub	r4, lr, #120	; 0x78
   1fccc:	tst	r1, #4
   1fcd0:	beq	1fd18 <__mempcpy_chk@plt+0xe738>
   1fcd4:	mov	r1, #0
   1fcd8:	add	r2, sp, #24
   1fcdc:	add	r3, r2, r1, lsl #5
   1fce0:	ldrb	r3, [r3, #1]
   1fce4:	tst	r3, #4
   1fce8:	bne	1fcfc <__mempcpy_chk@plt+0xe71c>
   1fcec:	add	r1, r1, #1
   1fcf0:	cmp	r1, r8
   1fcf4:	blt	1fcdc <__mempcpy_chk@plt+0xe6fc>
   1fcf8:	b	1fd18 <__mempcpy_chk@plt+0xe738>
   1fcfc:	sub	lr, fp, #3072	; 0xc00
   1fd00:	sub	r2, lr, #72	; 0x48
   1fd04:	ldr	r1, [r2, r1, lsl #2]
   1fd08:	ldr	r2, [sp, #4]
   1fd0c:	tst	r2, #1
   1fd10:	str	r1, [r0, #40]	; 0x28
   1fd14:	strne	r1, [r0, #1064]	; 0x428
   1fd18:	ldr	r0, [fp, #-3148]	; 0xfffff3b4
   1fd1c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1fd20:	add	r4, r4, #8
   1fd24:	ldr	r0, [r4], #12
   1fd28:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1fd2c:	subs	r8, r8, #1
   1fd30:	bne	1fd24 <__mempcpy_chk@plt+0xe744>
   1fd34:	mov	r0, #1
   1fd38:	b	1fdd4 <__mempcpy_chk@plt+0xe7f4>
   1fd3c:	ldr	r8, [sp, #8]
   1fd40:	str	r0, [fp, #-72]	; 0xffffffb8
   1fd44:	ldr	r0, [fp, #-3148]	; 0xfffff3b4
   1fd48:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1fd4c:	cmp	r8, #1
   1fd50:	blt	1fd70 <__mempcpy_chk@plt+0xe790>
   1fd54:	sub	lr, fp, #6144	; 0x1800
   1fd58:	sub	r0, lr, #120	; 0x78
   1fd5c:	add	r4, r0, #8
   1fd60:	ldr	r0, [r4], #12
   1fd64:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1fd68:	subs	r8, r8, #1
   1fd6c:	bne	1fd60 <__mempcpy_chk@plt+0xe780>
   1fd70:	mov	r0, #0
   1fd74:	b	1fdd4 <__mempcpy_chk@plt+0xe7f4>
   1fd78:	mov	r7, r8
   1fd7c:	ldr	r1, [sp, #12]
   1fd80:	mvn	r8, #0
   1fd84:	cmp	r7, #1
   1fd88:	blt	1fdac <__mempcpy_chk@plt+0xe7cc>
   1fd8c:	sub	lr, fp, #6144	; 0x1800
   1fd90:	sub	r0, lr, #120	; 0x78
   1fd94:	add	r4, r0, #8
   1fd98:	ldr	r0, [r4], #12
   1fd9c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1fda0:	subs	r7, r7, #1
   1fda4:	bne	1fd98 <__mempcpy_chk@plt+0xe7b8>
   1fda8:	ldr	r1, [sp, #12]
   1fdac:	mov	r0, #0
   1fdb0:	cmp	r8, #0
   1fdb4:	bne	1fdd4 <__mempcpy_chk@plt+0xe7f4>
   1fdb8:	mov	r4, r1
   1fdbc:	mov	r0, #4
   1fdc0:	mov	r1, #256	; 0x100
   1fdc4:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1fdc8:	cmp	r0, #0
   1fdcc:	str	r0, [r4, #44]	; 0x2c
   1fdd0:	movwne	r0, #1
   1fdd4:	sub	sp, fp, #64	; 0x40
   1fdd8:	vpop	{d8-d11}
   1fddc:	add	sp, sp, #4
   1fde0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fde4:	mov	r0, #0
   1fde8:	str	r0, [r6]
   1fdec:	str	r0, [r5]
   1fdf0:	b	1fd7c <__mempcpy_chk@plt+0xe79c>
   1fdf4:	ldr	r0, [fp, #-3148]	; 0xfffff3b4
   1fdf8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   1fdfc:	b	1fd54 <__mempcpy_chk@plt+0xe774>
   1fe00:	mov	r0, #4
   1fe04:	mov	r1, #512	; 0x200
   1fe08:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   1fe0c:	ldr	r1, [sp, #12]
   1fe10:	cmp	r0, #0
   1fe14:	str	r0, [r1, #48]	; 0x30
   1fe18:	beq	1fd44 <__mempcpy_chk@plt+0xe764>
   1fe1c:	sub	ip, r4, #4
   1fe20:	sub	lr, r9, #4
   1fe24:	mov	r3, #0
   1fe28:	add	r7, sp, #24
   1fe2c:	mov	r6, #0
   1fe30:	ldr	r5, [sl, r6, lsl #2]
   1fe34:	cmp	r5, #0
   1fe38:	beq	1feac <__mempcpy_chk@plt+0xe8cc>
   1fe3c:	lsl	r4, r6, #5
   1fe40:	mov	r1, #1
   1fe44:	b	1fe8c <__mempcpy_chk@plt+0xe8ac>
   1fe48:	mov	sl, r7
   1fe4c:	mov	r9, ip
   1fe50:	mov	r8, lr
   1fe54:	ldr	r2, [sl], #32
   1fe58:	add	r9, r9, #4
   1fe5c:	add	r8, r8, #4
   1fe60:	tst	r2, r1
   1fe64:	beq	1fe54 <__mempcpy_chk@plt+0xe874>
   1fe68:	ldr	r9, [r9]
   1fe6c:	mov	sl, r0
   1fe70:	str	r9, [sl, r4, lsl #2]!
   1fe74:	ldr	r2, [r8]
   1fe78:	ldr	r8, [sp, #8]
   1fe7c:	str	r2, [sl, #1024]	; 0x400
   1fe80:	sub	r2, fp, #3072	; 0xc00
   1fe84:	sub	sl, r2, #120	; 0x78
   1fe88:	b	1fe94 <__mempcpy_chk@plt+0xe8b4>
   1fe8c:	tst	r5, #1
   1fe90:	bne	1fe48 <__mempcpy_chk@plt+0xe868>
   1fe94:	lsr	r2, r5, #1
   1fe98:	cmp	r3, r5, lsr #1
   1fe9c:	add	r4, r4, #1
   1fea0:	lsl	r1, r1, #1
   1fea4:	mov	r5, r2
   1fea8:	bne	1fe8c <__mempcpy_chk@plt+0xe8ac>
   1feac:	add	r6, r6, #1
   1feb0:	add	r7, r7, #4
   1feb4:	cmp	r6, #8
   1feb8:	bne	1fe30 <__mempcpy_chk@plt+0xe850>
   1febc:	b	1fcc0 <__mempcpy_chk@plt+0xe6e0>
   1fec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fec4:	add	fp, sp, #28
   1fec8:	sub	sp, sp, #44	; 0x2c
   1fecc:	ldr	r4, [r1, #8]
   1fed0:	ldr	r6, [r1, #12]
   1fed4:	mov	r9, r0
   1fed8:	mov	r0, #1
   1fedc:	mov	sl, r1
   1fee0:	str	r0, [sp, #36]	; 0x24
   1fee4:	str	r0, [sp, #32]
   1fee8:	mov	r0, #4
   1feec:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   1fef0:	cmp	r0, #0
   1fef4:	str	r0, [sp, #40]	; 0x28
   1fef8:	beq	20144 <__mempcpy_chk@plt+0xeb64>
   1fefc:	str	r4, [r0]
   1ff00:	add	r3, sp, #32
   1ff04:	mov	r0, r9
   1ff08:	mov	r1, sl
   1ff0c:	mov	r2, r6
   1ff10:	bl	20204 <__mempcpy_chk@plt+0xec24>
   1ff14:	cmp	r0, #0
   1ff18:	bne	20108 <__mempcpy_chk@plt+0xeb28>
   1ff1c:	add	r0, sl, #16
   1ff20:	mov	r1, #0
   1ff24:	str	r0, [sp, #12]
   1ff28:	cmp	r6, #1
   1ff2c:	blt	20118 <__mempcpy_chk@plt+0xeb38>
   1ff30:	ldr	r0, [sl]
   1ff34:	ldr	r2, [r0, r6, lsl #2]
   1ff38:	cmp	r2, #0
   1ff3c:	mov	r2, #0
   1ff40:	addeq	r2, r1, #1
   1ff44:	ldr	r1, [r9, #120]	; 0x78
   1ff48:	cmp	r2, r1
   1ff4c:	bgt	20120 <__mempcpy_chk@plt+0xeb40>
   1ff50:	mov	r0, #0
   1ff54:	str	r6, [sp, #16]
   1ff58:	sub	r6, r6, #1
   1ff5c:	str	r2, [sp, #8]
   1ff60:	str	r0, [sp, #36]	; 0x24
   1ff64:	ldr	r0, [r9, #100]	; 0x64
   1ff68:	ldr	r1, [r0, r6, lsl #2]
   1ff6c:	cmp	r1, #0
   1ff70:	beq	200e8 <__mempcpy_chk@plt+0xeb08>
   1ff74:	ldr	r0, [r1, #20]
   1ff78:	cmp	r0, #1
   1ff7c:	blt	200e8 <__mempcpy_chk@plt+0xeb08>
   1ff80:	ldr	r0, [r9, #84]	; 0x54
   1ff84:	mov	r5, #0
   1ff88:	str	r1, [sp, #24]
   1ff8c:	str	r0, [sp, #28]
   1ff90:	ldr	r0, [r1, #24]
   1ff94:	ldr	r7, [r0, r5, lsl #2]
   1ff98:	ldr	r0, [sp, #28]
   1ff9c:	ldr	r0, [r0]
   1ffa0:	add	r0, r0, r7, lsl #3
   1ffa4:	ldrb	r0, [r0, #6]
   1ffa8:	tst	r0, #16
   1ffac:	bne	20008 <__mempcpy_chk@plt+0xea28>
   1ffb0:	ldr	r0, [sp, #28]
   1ffb4:	mov	r2, r6
   1ffb8:	ldr	r0, [r0]
   1ffbc:	add	r1, r0, r7, lsl #3
   1ffc0:	mov	r0, r9
   1ffc4:	bl	1f280 <__mempcpy_chk@plt+0xdca0>
   1ffc8:	cmp	r0, #0
   1ffcc:	beq	200d4 <__mempcpy_chk@plt+0xeaf4>
   1ffd0:	ldr	r0, [sl]
   1ffd4:	ldr	r1, [sp, #16]
   1ffd8:	ldr	r0, [r0, r1, lsl #2]
   1ffdc:	cmp	r0, #0
   1ffe0:	beq	200d4 <__mempcpy_chk@plt+0xeaf4>
   1ffe4:	ldr	r1, [sp, #28]
   1ffe8:	add	r0, r0, #4
   1ffec:	ldr	r1, [r1, #12]
   1fff0:	ldr	r1, [r1, r7, lsl #2]
   1fff4:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   1fff8:	mov	r4, #1
   1fffc:	cmp	r0, #0
   20000:	bne	20088 <__mempcpy_chk@plt+0xeaa8>
   20004:	b	200d4 <__mempcpy_chk@plt+0xeaf4>
   20008:	ldr	r0, [sl, #12]
   2000c:	ldr	r8, [r9, #84]	; 0x54
   20010:	mov	r2, r9
   20014:	mov	r1, r7
   20018:	mov	r3, r6
   2001c:	str	r0, [sp, #20]
   20020:	mov	r0, r8
   20024:	bl	1ef90 <__mempcpy_chk@plt+0xd9b0>
   20028:	mov	r4, r0
   2002c:	cmp	r0, #1
   20030:	blt	20050 <__mempcpy_chk@plt+0xea70>
   20034:	ldr	r1, [sp, #20]
   20038:	add	r0, r4, r6
   2003c:	mov	r2, r6
   20040:	cmp	r0, r1
   20044:	ble	2005c <__mempcpy_chk@plt+0xea7c>
   20048:	mov	r6, r2
   2004c:	b	20088 <__mempcpy_chk@plt+0xeaa8>
   20050:	cmp	r4, #0
   20054:	bne	20088 <__mempcpy_chk@plt+0xeaa8>
   20058:	b	1ffb0 <__mempcpy_chk@plt+0xe9d0>
   2005c:	ldr	r1, [sl]
   20060:	mov	r6, r2
   20064:	ldr	r0, [r1, r0, lsl #2]
   20068:	cmp	r0, #0
   2006c:	beq	1ffb0 <__mempcpy_chk@plt+0xe9d0>
   20070:	ldr	r1, [r8, #12]
   20074:	add	r0, r0, #4
   20078:	ldr	r1, [r1, r7, lsl #2]
   2007c:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20080:	cmp	r0, #0
   20084:	beq	1ffb0 <__mempcpy_chk@plt+0xe9d0>
   20088:	ldr	r0, [sl, #20]
   2008c:	cmp	r0, #0
   20090:	beq	200c0 <__mempcpy_chk@plt+0xeae0>
   20094:	ldr	r0, [sp, #28]
   20098:	ldr	r1, [sp, #12]
   2009c:	add	r3, r4, r6
   200a0:	ldr	r0, [r0, #12]
   200a4:	ldr	r2, [r0, r7, lsl #2]
   200a8:	mov	r0, r9
   200ac:	str	r7, [sp]
   200b0:	str	r6, [sp, #4]
   200b4:	bl	20d30 <__mempcpy_chk@plt+0xf750>
   200b8:	cmp	r0, #0
   200bc:	bne	200d4 <__mempcpy_chk@plt+0xeaf4>
   200c0:	add	r0, sp, #32
   200c4:	mov	r1, r7
   200c8:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   200cc:	cmp	r0, #0
   200d0:	beq	20110 <__mempcpy_chk@plt+0xeb30>
   200d4:	ldr	r1, [sp, #24]
   200d8:	add	r5, r5, #1
   200dc:	ldr	r0, [r1, #20]
   200e0:	cmp	r5, r0
   200e4:	blt	1ff90 <__mempcpy_chk@plt+0xe9b0>
   200e8:	mov	r0, r9
   200ec:	mov	r1, sl
   200f0:	mov	r2, r6
   200f4:	add	r3, sp, #32
   200f8:	bl	20204 <__mempcpy_chk@plt+0xec24>
   200fc:	ldr	r1, [sp, #8]
   20100:	cmp	r0, #0
   20104:	beq	1ff28 <__mempcpy_chk@plt+0xe948>
   20108:	mov	r4, r0
   2010c:	b	20130 <__mempcpy_chk@plt+0xeb50>
   20110:	mov	r4, #12
   20114:	b	20130 <__mempcpy_chk@plt+0xeb50>
   20118:	mov	r4, #0
   2011c:	b	20130 <__mempcpy_chk@plt+0xeb50>
   20120:	lsl	r2, r6, #2
   20124:	mov	r1, #0
   20128:	mov	r4, #0
   2012c:	bl	114f0 <memset@plt>
   20130:	ldr	r0, [sp, #40]	; 0x28
   20134:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   20138:	mov	r0, r4
   2013c:	sub	sp, fp, #28
   20140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20144:	mov	r0, #0
   20148:	mov	r4, #12
   2014c:	str	r0, [sp, #32]
   20150:	str	r0, [sp, #36]	; 0x24
   20154:	b	20138 <__mempcpy_chk@plt+0xeb58>
   20158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2015c:	add	fp, sp, #28
   20160:	sub	sp, sp, #20
   20164:	cmp	r3, #1
   20168:	blt	201f8 <__mempcpy_chk@plt+0xec18>
   2016c:	mov	r4, r3
   20170:	mov	r5, r2
   20174:	mov	r6, r1
   20178:	mov	sl, r0
   2017c:	mov	r7, #0
   20180:	add	r8, sp, #4
   20184:	add	r9, sp, #16
   20188:	ldr	r1, [r6, r7, lsl #2]
   2018c:	ldr	r0, [r5, r7, lsl #2]
   20190:	cmp	r1, #0
   20194:	beq	201e8 <__mempcpy_chk@plt+0xec08>
   20198:	cmp	r0, #0
   2019c:	beq	201ec <__mempcpy_chk@plt+0xec0c>
   201a0:	add	r2, r0, #4
   201a4:	add	r1, r1, #4
   201a8:	mov	r0, r8
   201ac:	bl	1de44 <__mempcpy_chk@plt+0xc864>
   201b0:	cmp	r0, #0
   201b4:	str	r0, [sp, #16]
   201b8:	bne	201fc <__mempcpy_chk@plt+0xec1c>
   201bc:	mov	r0, r9
   201c0:	mov	r1, sl
   201c4:	mov	r2, r8
   201c8:	bl	1ed94 <__mempcpy_chk@plt+0xd7b4>
   201cc:	str	r0, [r6, r7, lsl #2]
   201d0:	ldr	r0, [sp, #12]
   201d4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   201d8:	ldr	r0, [sp, #16]
   201dc:	cmp	r0, #0
   201e0:	beq	201ec <__mempcpy_chk@plt+0xec0c>
   201e4:	b	201fc <__mempcpy_chk@plt+0xec1c>
   201e8:	str	r0, [r6, r7, lsl #2]
   201ec:	add	r7, r7, #1
   201f0:	cmp	r7, r4
   201f4:	blt	20188 <__mempcpy_chk@plt+0xeba8>
   201f8:	mov	r0, #0
   201fc:	sub	sp, fp, #28
   20200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20208:	add	fp, sp, #28
   2020c:	sub	sp, sp, #84	; 0x54
   20210:	mov	r6, r3
   20214:	mov	r3, #0
   20218:	ldr	r7, [r0, #84]	; 0x54
   2021c:	mov	r4, r2
   20220:	str	r0, [sp, #44]	; 0x2c
   20224:	str	r1, [sp, #48]	; 0x30
   20228:	str	r3, [sp, #52]	; 0x34
   2022c:	str	r4, [sp, #40]	; 0x28
   20230:	ldr	r2, [r0, #100]	; 0x64
   20234:	ldr	r8, [r2, r4, lsl #2]
   20238:	ldr	r2, [r6, #4]
   2023c:	cmp	r8, #0
   20240:	mov	r0, r8
   20244:	addne	r0, r0, #4
   20248:	cmp	r2, #0
   2024c:	str	r0, [sp, #36]	; 0x24
   20250:	beq	205d0 <__mempcpy_chk@plt+0xeff0>
   20254:	cmp	r8, #0
   20258:	beq	205a4 <__mempcpy_chk@plt+0xefc4>
   2025c:	mov	r0, #0
   20260:	mov	r1, r7
   20264:	mov	r2, r6
   20268:	str	r7, [sp, #28]
   2026c:	str	r6, [sp, #20]
   20270:	str	r0, [sp, #56]	; 0x38
   20274:	add	r0, sp, #56	; 0x38
   20278:	bl	1ed94 <__mempcpy_chk@plt+0xd7b4>
   2027c:	ldr	r9, [sp, #56]	; 0x38
   20280:	cmp	r9, #0
   20284:	bne	208ec <__mempcpy_chk@plt+0xf30c>
   20288:	mov	r6, r0
   2028c:	mov	r5, r0
   20290:	ldr	r2, [sp, #20]
   20294:	ldr	r0, [r6, #28]!
   20298:	cmp	r0, #0
   2029c:	bne	20330 <__mempcpy_chk@plt+0xed50>
   202a0:	ldr	r0, [r2, #4]
   202a4:	mov	r4, #0
   202a8:	mov	r7, r2
   202ac:	str	r0, [r5, #28]
   202b0:	lsl	r0, r0, #2
   202b4:	str	r4, [r5, #32]
   202b8:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   202bc:	cmp	r0, #0
   202c0:	mov	r9, #12
   202c4:	str	r0, [r5, #36]	; 0x24
   202c8:	movweq	r4, #12
   202cc:	str	r4, [sp, #56]	; 0x38
   202d0:	beq	208ec <__mempcpy_chk@plt+0xf30c>
   202d4:	ldr	r0, [r7, #4]
   202d8:	mov	r2, r7
   202dc:	cmp	r0, #1
   202e0:	blt	20330 <__mempcpy_chk@plt+0xed50>
   202e4:	mov	r5, #0
   202e8:	ldr	r0, [r2, #8]
   202ec:	ldr	r1, [sp, #28]
   202f0:	mov	r4, r2
   202f4:	ldr	r0, [r0, r5, lsl #2]
   202f8:	ldr	r1, [r1, #28]
   202fc:	add	r0, r0, r0, lsl #1
   20300:	add	r1, r1, r0, lsl #2
   20304:	mov	r0, r6
   20308:	bl	1c208 <__mempcpy_chk@plt+0xac28>
   2030c:	cmp	r0, #0
   20310:	bne	208fc <__mempcpy_chk@plt+0xf31c>
   20314:	ldr	r0, [r4, #4]
   20318:	add	r5, r5, #1
   2031c:	mov	r2, r4
   20320:	cmp	r5, r0
   20324:	blt	202e8 <__mempcpy_chk@plt+0xed08>
   20328:	mov	r0, #0
   2032c:	str	r0, [sp, #56]	; 0x38
   20330:	ldr	r1, [sp, #36]	; 0x24
   20334:	mov	r0, r2
   20338:	mov	r2, r6
   2033c:	bl	20918 <__mempcpy_chk@plt+0xf338>
   20340:	cmp	r0, #0
   20344:	str	r0, [sp, #52]	; 0x34
   20348:	bne	20910 <__mempcpy_chk@plt+0xf330>
   2034c:	ldr	ip, [sp, #48]	; 0x30
   20350:	ldr	r4, [sp, #40]	; 0x28
   20354:	ldr	r7, [sp, #28]
   20358:	ldr	r6, [sp, #20]
   2035c:	ldr	r0, [ip, #20]
   20360:	cmp	r0, #0
   20364:	beq	205a4 <__mempcpy_chk@plt+0xefc4>
   20368:	cmp	r0, #1
   2036c:	str	r8, [sp, #12]
   20370:	blt	20598 <__mempcpy_chk@plt+0xefb8>
   20374:	ldr	r0, [sp, #44]	; 0x2c
   20378:	mov	r8, #0
   2037c:	ldr	r0, [r0, #116]	; 0x74
   20380:	str	r0, [sp, #24]
   20384:	ldr	r0, [ip, #24]
   20388:	ldr	r1, [sp, #24]
   2038c:	ldr	r0, [r0, r8, lsl #2]
   20390:	add	r0, r0, r0, lsl #1
   20394:	add	r1, r1, r0, lsl #3
   20398:	ldr	r2, [r1, #8]
   2039c:	cmp	r2, r4
   203a0:	bge	20588 <__mempcpy_chk@plt+0xefa8>
   203a4:	ldr	r1, [r1, #4]
   203a8:	cmp	r1, r4
   203ac:	blt	20588 <__mempcpy_chk@plt+0xefa8>
   203b0:	ldr	r1, [sp, #24]
   203b4:	ldr	r2, [r7]
   203b8:	ldr	r0, [r1, r0, lsl #3]!
   203bc:	ldr	r1, [r1, #12]
   203c0:	ldr	sl, [r2, r0, lsl #3]
   203c4:	ldr	r0, [r6, #4]
   203c8:	cmp	r1, r4
   203cc:	bne	20488 <__mempcpy_chk@plt+0xeea8>
   203d0:	cmp	r0, #1
   203d4:	blt	20588 <__mempcpy_chk@plt+0xefa8>
   203d8:	ldr	r3, [r6, #8]
   203dc:	mvn	r1, #0
   203e0:	str	r1, [sp, #32]
   203e4:	mvn	r1, #0
   203e8:	ldr	r5, [r3]
   203ec:	add	r4, r2, r5, lsl #3
   203f0:	ldrb	r4, [r4, #4]
   203f4:	cmp	r4, #9
   203f8:	beq	20414 <__mempcpy_chk@plt+0xee34>
   203fc:	cmp	r4, #8
   20400:	bne	20428 <__mempcpy_chk@plt+0xee48>
   20404:	ldr	r4, [r2, r5, lsl #3]
   20408:	cmp	sl, r4
   2040c:	moveq	r1, r5
   20410:	b	20428 <__mempcpy_chk@plt+0xee48>
   20414:	ldr	r4, [r2, r5, lsl #3]
   20418:	cmp	sl, r4
   2041c:	ldr	r4, [sp, #32]
   20420:	moveq	r4, r5
   20424:	str	r4, [sp, #32]
   20428:	add	r3, r3, #4
   2042c:	subs	r0, r0, #1
   20430:	bne	203e8 <__mempcpy_chk@plt+0xee08>
   20434:	cmp	r1, #0
   20438:	blt	20460 <__mempcpy_chk@plt+0xee80>
   2043c:	ldr	r3, [sp, #36]	; 0x24
   20440:	mov	r0, r7
   20444:	mov	r2, r6
   20448:	bl	20b20 <__mempcpy_chk@plt+0xf540>
   2044c:	ldr	r6, [sp, #20]
   20450:	ldr	r7, [sp, #28]
   20454:	ldr	ip, [sp, #48]	; 0x30
   20458:	cmp	r0, #0
   2045c:	bne	208e8 <__mempcpy_chk@plt+0xf308>
   20460:	ldr	sl, [sp, #32]
   20464:	ldr	r4, [sp, #40]	; 0x28
   20468:	cmp	sl, #0
   2046c:	blt	20588 <__mempcpy_chk@plt+0xefa8>
   20470:	ldr	r0, [r6, #4]
   20474:	cmp	r0, #1
   20478:	str	r0, [sp, #16]
   2047c:	blt	20588 <__mempcpy_chk@plt+0xefa8>
   20480:	mov	r5, #0
   20484:	b	20530 <__mempcpy_chk@plt+0xef50>
   20488:	cmp	r0, #1
   2048c:	blt	20588 <__mempcpy_chk@plt+0xefa8>
   20490:	mov	r5, #0
   20494:	ldr	r1, [r6, #8]
   20498:	ldr	r1, [r1, r5, lsl #2]
   2049c:	add	r3, r2, r1, lsl #3
   204a0:	ldr	r3, [r3, #4]
   204a4:	and	r3, r3, #254	; 0xfe
   204a8:	orr	r3, r3, #1
   204ac:	cmp	r3, #9
   204b0:	ldreq	r2, [r2, r1, lsl #3]
   204b4:	cmpeq	sl, r2
   204b8:	beq	204d0 <__mempcpy_chk@plt+0xeef0>
   204bc:	add	r5, r5, #1
   204c0:	cmp	r5, r0
   204c4:	bge	20588 <__mempcpy_chk@plt+0xefa8>
   204c8:	ldr	r2, [r7]
   204cc:	b	20494 <__mempcpy_chk@plt+0xeeb4>
   204d0:	ldr	r3, [sp, #36]	; 0x24
   204d4:	mov	r0, r7
   204d8:	mov	r2, r6
   204dc:	bl	20b20 <__mempcpy_chk@plt+0xf540>
   204e0:	cmp	r0, #0
   204e4:	bne	208e8 <__mempcpy_chk@plt+0xf308>
   204e8:	ldr	r0, [r6, #4]
   204ec:	ldr	r4, [sp, #40]	; 0x28
   204f0:	ldr	ip, [sp, #48]	; 0x30
   204f4:	ldr	r7, [sp, #28]
   204f8:	b	204bc <__mempcpy_chk@plt+0xeedc>
   204fc:	mov	r1, r6
   20500:	ldr	r6, [sp, #20]
   20504:	ldr	r3, [sp, #36]	; 0x24
   20508:	mov	r0, r7
   2050c:	mov	r2, r6
   20510:	bl	20b20 <__mempcpy_chk@plt+0xf540>
   20514:	cmp	r0, #0
   20518:	bne	208e8 <__mempcpy_chk@plt+0xf308>
   2051c:	ldr	r0, [r6, #4]
   20520:	ldr	r7, [sp, #28]
   20524:	sub	r5, r5, #1
   20528:	str	r0, [sp, #16]
   2052c:	b	20570 <__mempcpy_chk@plt+0xef90>
   20530:	ldr	r0, [r6, #8]
   20534:	mov	r1, sl
   20538:	ldr	r6, [r0, r5, lsl #2]
   2053c:	ldr	r0, [r7, #28]
   20540:	add	r9, r6, r6, lsl #1
   20544:	add	r0, r0, r9, lsl #2
   20548:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   2054c:	cmp	r0, #0
   20550:	bne	2056c <__mempcpy_chk@plt+0xef8c>
   20554:	ldr	r0, [r7, #24]
   20558:	mov	r1, sl
   2055c:	add	r0, r0, r9, lsl #2
   20560:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20564:	cmp	r0, #0
   20568:	beq	204fc <__mempcpy_chk@plt+0xef1c>
   2056c:	ldr	r6, [sp, #20]
   20570:	ldr	r0, [sp, #16]
   20574:	ldr	r4, [sp, #40]	; 0x28
   20578:	ldr	ip, [sp, #48]	; 0x30
   2057c:	add	r5, r5, #1
   20580:	cmp	r5, r0
   20584:	blt	20530 <__mempcpy_chk@plt+0xef50>
   20588:	ldr	r0, [ip, #20]
   2058c:	add	r8, r8, #1
   20590:	cmp	r8, r0
   20594:	blt	20384 <__mempcpy_chk@plt+0xeda4>
   20598:	ldr	r8, [sp, #12]
   2059c:	mov	r0, #0
   205a0:	str	r0, [sp, #52]	; 0x34
   205a4:	add	r0, sp, #52	; 0x34
   205a8:	mov	r1, r7
   205ac:	mov	r2, r6
   205b0:	bl	1ed94 <__mempcpy_chk@plt+0xd7b4>
   205b4:	ldr	r1, [sp, #48]	; 0x30
   205b8:	ldr	r1, [r1]
   205bc:	str	r0, [r1, r4, lsl #2]
   205c0:	ldr	r9, [sp, #52]	; 0x34
   205c4:	cmp	r9, #0
   205c8:	beq	205d8 <__mempcpy_chk@plt+0xeff8>
   205cc:	b	208dc <__mempcpy_chk@plt+0xf2fc>
   205d0:	ldr	r1, [r1]
   205d4:	str	r3, [r1, r4, lsl #2]
   205d8:	cmp	r8, #0
   205dc:	beq	208d8 <__mempcpy_chk@plt+0xf2f8>
   205e0:	ldr	r0, [sp, #44]	; 0x2c
   205e4:	ldr	r1, [sp, #40]	; 0x28
   205e8:	ldr	r0, [r0, #100]	; 0x64
   205ec:	ldr	r0, [r0, r1, lsl #2]
   205f0:	ldrb	r0, [r0, #52]	; 0x34
   205f4:	tst	r0, #64	; 0x40
   205f8:	beq	208d8 <__mempcpy_chk@plt+0xf2f8>
   205fc:	ldr	r0, [sp, #44]	; 0x2c
   20600:	ldr	r9, [sp, #40]	; 0x28
   20604:	ldr	r8, [r0, #84]	; 0x54
   20608:	mov	r1, r9
   2060c:	bl	1e048 <__mempcpy_chk@plt+0xca68>
   20610:	cmn	r0, #1
   20614:	str	r0, [sp, #16]
   20618:	beq	208c8 <__mempcpy_chk@plt+0xf2e8>
   2061c:	ldr	r0, [sp, #36]	; 0x24
   20620:	mov	r6, #0
   20624:	str	r6, [sp, #56]	; 0x38
   20628:	ldr	r0, [r0, #4]
   2062c:	cmp	r0, #0
   20630:	ble	208d4 <__mempcpy_chk@plt+0xf2f4>
   20634:	ldr	r3, [sp, #48]	; 0x30
   20638:	add	r1, r9, #1
   2063c:	mov	r7, #0
   20640:	str	r1, [sp, #8]
   20644:	add	r1, sp, #56	; 0x38
   20648:	add	r1, r1, #16
   2064c:	str	r1, [sp, #24]
   20650:	add	r1, r3, #16
   20654:	str	r1, [sp, #28]
   20658:	ldr	r1, [sp, #16]
   2065c:	add	r1, r1, r1, lsl #1
   20660:	str	r1, [sp, #12]
   20664:	ldr	r1, [sp, #36]	; 0x24
   20668:	ldr	r2, [r3, #8]
   2066c:	ldr	r1, [r1, #8]
   20670:	ldr	sl, [r1, r7, lsl #2]
   20674:	ldr	r1, [r8]
   20678:	add	r1, r1, sl, lsl #3
   2067c:	cmp	sl, r2
   20680:	ldrb	r1, [r1, #4]
   20684:	bne	206a0 <__mempcpy_chk@plt+0xf0c0>
   20688:	cmp	r1, #4
   2068c:	bne	20898 <__mempcpy_chk@plt+0xf2b8>
   20690:	ldr	r1, [r3, #12]
   20694:	cmp	r1, r9
   20698:	bne	206a8 <__mempcpy_chk@plt+0xf0c8>
   2069c:	b	20898 <__mempcpy_chk@plt+0xf2b8>
   206a0:	cmp	r1, #4
   206a4:	bne	20898 <__mempcpy_chk@plt+0xf2b8>
   206a8:	ldr	r0, [sp, #44]	; 0x2c
   206ac:	ldr	r1, [sp, #12]
   206b0:	str	r7, [sp, #20]
   206b4:	ldr	r7, [sp, #16]
   206b8:	str	r6, [sp, #32]
   206bc:	ldr	r0, [r0, #116]	; 0x74
   206c0:	add	r5, r0, r1, lsl #3
   206c4:	b	207d8 <__mempcpy_chk@plt+0xf1f8>
   206c8:	ldr	r0, [sp, #32]
   206cc:	cmp	r0, #0
   206d0:	bne	20704 <__mempcpy_chk@plt+0xf124>
   206d4:	ldr	r0, [sp, #48]	; 0x30
   206d8:	mov	r1, #12
   206dc:	vld1.32	{d16-d17}, [r0], r1
   206e0:	vld1.32	{d18-d19}, [r0]
   206e4:	add	r0, sp, #56	; 0x38
   206e8:	vst1.64	{d16-d17}, [r0], r1
   206ec:	ldr	r1, [sp, #28]
   206f0:	vst1.32	{d18-d19}, [r0]
   206f4:	ldr	r0, [sp, #24]
   206f8:	bl	1c5b8 <__mempcpy_chk@plt+0xafd8>
   206fc:	cmp	r0, #0
   20700:	bne	208f4 <__mempcpy_chk@plt+0xf314>
   20704:	ldr	r4, [sp, #40]	; 0x28
   20708:	ldr	r0, [sp, #24]
   2070c:	mov	r1, r7
   20710:	str	r4, [sp, #68]	; 0x44
   20714:	str	sl, [sp, #64]	; 0x40
   20718:	bl	1c41c <__mempcpy_chk@plt+0xae3c>
   2071c:	cmp	r0, #0
   20720:	beq	20904 <__mempcpy_chk@plt+0xf324>
   20724:	ldr	r5, [sp, #56]	; 0x38
   20728:	ldr	r0, [sp, #44]	; 0x2c
   2072c:	add	r1, sp, #56	; 0x38
   20730:	ldr	r4, [r5, r4, lsl #2]
   20734:	bl	1fec0 <__mempcpy_chk@plt+0xe8e0>
   20738:	cmp	r0, #0
   2073c:	bne	208f4 <__mempcpy_chk@plt+0xf314>
   20740:	ldr	r0, [sp, #48]	; 0x30
   20744:	ldr	r1, [r0, #4]
   20748:	cmp	r1, #0
   2074c:	beq	20768 <__mempcpy_chk@plt+0xf188>
   20750:	ldr	r3, [sp, #8]
   20754:	mov	r0, r8
   20758:	mov	r2, r5
   2075c:	bl	20158 <__mempcpy_chk@plt+0xeb78>
   20760:	cmp	r0, #0
   20764:	bne	208f4 <__mempcpy_chk@plt+0xf314>
   20768:	ldr	r9, [sp, #40]	; 0x28
   2076c:	ldr	r0, [sp, #24]
   20770:	mov	r1, r7
   20774:	str	r5, [sp, #32]
   20778:	str	r4, [r5, r9, lsl #2]
   2077c:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20780:	subs	r1, r0, #1
   20784:	blt	2079c <__mempcpy_chk@plt+0xf1bc>
   20788:	ldr	r2, [sp, #76]	; 0x4c
   2078c:	cmp	r2, r0
   20790:	subge	r2, r2, #1
   20794:	strge	r2, [sp, #76]	; 0x4c
   20798:	bgt	207b4 <__mempcpy_chk@plt+0xf1d4>
   2079c:	ldr	r0, [sp, #44]	; 0x2c
   207a0:	add	r1, r7, r7, lsl #1
   207a4:	ldr	r0, [r0, #116]	; 0x74
   207a8:	add	r0, r0, r1, lsl #3
   207ac:	ldr	r3, [sp, #48]	; 0x30
   207b0:	b	20874 <__mempcpy_chk@plt+0xf294>
   207b4:	ldr	r3, [sp, #80]	; 0x50
   207b8:	add	r0, r3, r0, lsl #2
   207bc:	ldr	r3, [r0]
   207c0:	add	r1, r1, #1
   207c4:	cmp	r1, r2
   207c8:	str	r3, [r0, #-4]
   207cc:	add	r0, r0, #4
   207d0:	blt	207bc <__mempcpy_chk@plt+0xf1dc>
   207d4:	b	2079c <__mempcpy_chk@plt+0xf1bc>
   207d8:	ldr	r0, [r5]
   207dc:	cmp	r0, sl
   207e0:	bne	20870 <__mempcpy_chk@plt+0xf290>
   207e4:	ldr	r0, [r5, #8]
   207e8:	ldr	r1, [r5, #12]
   207ec:	subs	r0, r1, r0
   207f0:	add	r6, r0, r9
   207f4:	beq	20804 <__mempcpy_chk@plt+0xf224>
   207f8:	ldr	r0, [r8, #12]
   207fc:	add	r0, r0, sl, lsl #2
   20800:	b	20814 <__mempcpy_chk@plt+0xf234>
   20804:	ldr	r0, [r8, #20]
   20808:	add	r1, sl, sl, lsl #1
   2080c:	add	r0, r0, r1, lsl #2
   20810:	ldr	r0, [r0, #8]
   20814:	ldr	r1, [r3, #12]
   20818:	cmp	r6, r1
   2081c:	bgt	20870 <__mempcpy_chk@plt+0xf290>
   20820:	ldr	r1, [r3]
   20824:	ldr	r1, [r1, r6, lsl #2]
   20828:	cmp	r1, #0
   2082c:	beq	20870 <__mempcpy_chk@plt+0xf290>
   20830:	ldr	r4, [r0]
   20834:	add	r0, r1, #4
   20838:	mov	r1, r4
   2083c:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20840:	cmp	r0, #0
   20844:	beq	20868 <__mempcpy_chk@plt+0xf288>
   20848:	stm	sp, {r4, r6}
   2084c:	mov	r2, sl
   20850:	mov	r3, r9
   20854:	ldr	r0, [sp, #44]	; 0x2c
   20858:	ldr	r1, [sp, #28]
   2085c:	bl	20d30 <__mempcpy_chk@plt+0xf750>
   20860:	cmp	r0, #0
   20864:	beq	206c8 <__mempcpy_chk@plt+0xf0e8>
   20868:	mov	r0, r5
   2086c:	b	207ac <__mempcpy_chk@plt+0xf1cc>
   20870:	mov	r0, r5
   20874:	add	r5, r0, #24
   20878:	ldrb	r0, [r0, #20]
   2087c:	add	r7, r7, #1
   20880:	cmp	r0, #0
   20884:	bne	207d8 <__mempcpy_chk@plt+0xf1f8>
   20888:	ldr	r0, [sp, #36]	; 0x24
   2088c:	ldr	r7, [sp, #20]
   20890:	ldr	r6, [sp, #32]
   20894:	ldr	r0, [r0, #4]
   20898:	add	r7, r7, #1
   2089c:	cmp	r7, r0
   208a0:	blt	20664 <__mempcpy_chk@plt+0xf084>
   208a4:	mov	r9, #0
   208a8:	cmp	r6, #0
   208ac:	beq	208b8 <__mempcpy_chk@plt+0xf2d8>
   208b0:	ldr	r0, [sp, #80]	; 0x50
   208b4:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   208b8:	cmp	r9, #0
   208bc:	str	r9, [sp, #52]	; 0x34
   208c0:	moveq	r9, #0
   208c4:	b	208dc <__mempcpy_chk@plt+0xf2fc>
   208c8:	mov	r0, #0
   208cc:	str	r0, [sp, #52]	; 0x34
   208d0:	b	208d8 <__mempcpy_chk@plt+0xf2f8>
   208d4:	str	r6, [sp, #52]	; 0x34
   208d8:	mov	r9, #0
   208dc:	mov	r0, r9
   208e0:	sub	sp, fp, #28
   208e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208e8:	mov	r9, r0
   208ec:	str	r9, [sp, #52]	; 0x34
   208f0:	b	208dc <__mempcpy_chk@plt+0xf2fc>
   208f4:	mov	r9, r0
   208f8:	b	20908 <__mempcpy_chk@plt+0xf328>
   208fc:	str	r0, [sp, #56]	; 0x38
   20900:	b	208ec <__mempcpy_chk@plt+0xf30c>
   20904:	mov	r9, #12
   20908:	ldr	r6, [sp, #56]	; 0x38
   2090c:	b	208a8 <__mempcpy_chk@plt+0xf2c8>
   20910:	mov	r9, r0
   20914:	b	208dc <__mempcpy_chk@plt+0xf2fc>
   20918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2091c:	add	fp, sp, #28
   20920:	sub	sp, sp, #12
   20924:	ldr	ip, [r1, #4]
   20928:	mov	sl, r0
   2092c:	mov	r0, #0
   20930:	cmp	ip, #0
   20934:	ldrne	lr, [r2, #4]
   20938:	cmpne	lr, #0
   2093c:	beq	20b10 <__mempcpy_chk@plt+0xf530>
   20940:	mov	r7, r1
   20944:	ldr	r1, [sl, #4]
   20948:	ldr	r6, [sl]
   2094c:	add	r3, lr, ip
   20950:	add	r4, r1, r3
   20954:	cmp	r4, r6
   20958:	ble	2099c <__mempcpy_chk@plt+0xf3bc>
   2095c:	mov	r5, r2
   20960:	mov	r2, sl
   20964:	add	r4, r6, r3
   20968:	ldr	r0, [r2, #8]!
   2096c:	lsl	r1, r4, #2
   20970:	str	r2, [sp, #8]
   20974:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   20978:	cmp	r0, #0
   2097c:	beq	20b18 <__mempcpy_chk@plt+0xf538>
   20980:	str	r4, [sl]
   20984:	str	r0, [sl, #8]
   20988:	mov	r2, r5
   2098c:	ldr	r1, [sl, #4]
   20990:	ldr	lr, [r5, #4]
   20994:	ldr	ip, [r7, #4]
   20998:	b	209a4 <__mempcpy_chk@plt+0xf3c4>
   2099c:	add	r0, sl, #8
   209a0:	str	r0, [sp, #8]
   209a4:	str	r2, [sp, #4]
   209a8:	ldr	r2, [r2, #8]
   209ac:	ldr	r4, [r7, #8]
   209b0:	add	r3, ip, r1
   209b4:	sub	r8, r1, #1
   209b8:	add	r9, r3, lr
   209bc:	sub	ip, ip, #1
   209c0:	sub	r3, lr, #1
   209c4:	ldr	r1, [r2, r3, lsl #2]
   209c8:	ldr	r6, [r4, ip, lsl #2]
   209cc:	cmp	r6, r1
   209d0:	beq	209fc <__mempcpy_chk@plt+0xf41c>
   209d4:	blt	209ec <__mempcpy_chk@plt+0xf40c>
   209d8:	sub	r5, ip, #1
   209dc:	cmp	ip, #0
   209e0:	mov	ip, r5
   209e4:	bgt	209c8 <__mempcpy_chk@plt+0xf3e8>
   209e8:	b	20a70 <__mempcpy_chk@plt+0xf490>
   209ec:	cmp	lr, #2
   209f0:	mov	lr, r3
   209f4:	bge	209c0 <__mempcpy_chk@plt+0xf3e0>
   209f8:	b	20a70 <__mempcpy_chk@plt+0xf490>
   209fc:	mov	r0, r9
   20a00:	cmp	r8, #0
   20a04:	blt	20a48 <__mempcpy_chk@plt+0xf468>
   20a08:	ldr	r1, [sp, #8]
   20a0c:	ldr	r9, [r1]
   20a10:	mov	r1, r8
   20a14:	ldr	r5, [r9, r1, lsl #2]
   20a18:	cmp	r5, r6
   20a1c:	ble	20a34 <__mempcpy_chk@plt+0xf454>
   20a20:	sub	r8, r1, #1
   20a24:	cmp	r1, #0
   20a28:	mov	r1, r8
   20a2c:	bgt	20a14 <__mempcpy_chk@plt+0xf434>
   20a30:	b	20a48 <__mempcpy_chk@plt+0xf468>
   20a34:	mov	r8, r1
   20a38:	bne	20a48 <__mempcpy_chk@plt+0xf468>
   20a3c:	mov	r8, r1
   20a40:	mov	r9, r0
   20a44:	b	20a5c <__mempcpy_chk@plt+0xf47c>
   20a48:	ldr	r1, [sp, #8]
   20a4c:	mov	r9, r0
   20a50:	sub	r9, r0, #1
   20a54:	ldr	r1, [r1]
   20a58:	str	r6, [r1, r9, lsl #2]
   20a5c:	cmp	ip, #1
   20a60:	blt	20a70 <__mempcpy_chk@plt+0xf490>
   20a64:	cmp	lr, #2
   20a68:	mov	lr, r3
   20a6c:	bge	209bc <__mempcpy_chk@plt+0xf3dc>
   20a70:	ldr	lr, [r7, #4]
   20a74:	ldr	r7, [sp, #4]
   20a78:	ldr	r2, [sl, #4]
   20a7c:	ldr	r0, [sl, #8]
   20a80:	ldr	r4, [r7, #4]
   20a84:	subs	r1, r2, #1
   20a88:	add	r3, r1, lr
   20a8c:	add	r3, r3, r4
   20a90:	sub	r5, r3, r9
   20a94:	add	r6, r5, #1
   20a98:	cmpge	r5, #0
   20a9c:	add	r7, r6, r2
   20aa0:	str	r7, [sl, #4]
   20aa4:	blt	20afc <__mempcpy_chk@plt+0xf51c>
   20aa8:	add	r2, r2, r4
   20aac:	add	r2, r2, lr
   20ab0:	sub	r2, r2, r9
   20ab4:	add	r7, r0, r2, lsl #2
   20ab8:	ldr	r2, [r0, r1, lsl #2]
   20abc:	ldr	r5, [r0, r3, lsl #2]
   20ac0:	cmp	r5, r2
   20ac4:	bgt	20ae0 <__mempcpy_chk@plt+0xf500>
   20ac8:	str	r2, [r7, r1, lsl #2]
   20acc:	sub	r2, r1, #1
   20ad0:	cmp	r1, #0
   20ad4:	mov	r1, r2
   20ad8:	bgt	20ab8 <__mempcpy_chk@plt+0xf4d8>
   20adc:	b	20afc <__mempcpy_chk@plt+0xf51c>
   20ae0:	str	r5, [r7, r1, lsl #2]
   20ae4:	sub	r7, r7, #4
   20ae8:	subs	r6, r6, #1
   20aec:	sub	r3, r3, #1
   20af0:	mov	r2, #0
   20af4:	bne	20ab8 <__mempcpy_chk@plt+0xf4d8>
   20af8:	b	20b00 <__mempcpy_chk@plt+0xf520>
   20afc:	mov	r2, r6
   20b00:	add	r1, r0, r9, lsl #2
   20b04:	lsl	r2, r2, #2
   20b08:	bl	1134c <memcpy@plt>
   20b0c:	mov	r0, #0
   20b10:	sub	sp, fp, #28
   20b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b18:	mov	r0, #12
   20b1c:	b	20b10 <__mempcpy_chk@plt+0xf530>
   20b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b24:	add	fp, sp, #28
   20b28:	sub	sp, sp, #36	; 0x24
   20b2c:	mov	r5, r2
   20b30:	mov	r2, r0
   20b34:	ldr	r0, [r0, #28]
   20b38:	str	r1, [sp, #20]
   20b3c:	add	r1, r1, r1, lsl #1
   20b40:	mov	r9, #0
   20b44:	str	r3, [sp, #4]
   20b48:	str	r9, [sp, #28]
   20b4c:	str	r9, [sp, #24]
   20b50:	str	r9, [sp, #32]
   20b54:	add	r1, r0, r1, lsl #2
   20b58:	mov	r0, r1
   20b5c:	ldr	r4, [r0, #4]!
   20b60:	cmp	r4, #1
   20b64:	blt	20d08 <__mempcpy_chk@plt+0xf728>
   20b68:	add	r9, r1, #8
   20b6c:	mov	r6, #0
   20b70:	str	r0, [sp, #8]
   20b74:	str	r1, [sp, #16]
   20b78:	ldr	r0, [r9]
   20b7c:	ldr	r1, [sp, #20]
   20b80:	ldr	r0, [r0, r6, lsl #2]
   20b84:	cmp	r0, r1
   20b88:	beq	20c60 <__mempcpy_chk@plt+0xf680>
   20b8c:	ldr	r1, [r2]
   20b90:	add	r1, r1, r0, lsl #3
   20b94:	ldrb	r1, [r1, #4]
   20b98:	tst	r1, #8
   20b9c:	beq	20c60 <__mempcpy_chk@plt+0xf680>
   20ba0:	ldr	r1, [r2, #20]
   20ba4:	add	r0, r0, r0, lsl #1
   20ba8:	mvn	sl, #0
   20bac:	mov	r7, r2
   20bb0:	str	r0, [sp, #12]
   20bb4:	add	r0, r1, r0, lsl #2
   20bb8:	ldr	r1, [r0, #4]
   20bbc:	ldr	r0, [r0, #8]
   20bc0:	cmp	r1, #2
   20bc4:	ldr	r8, [r0]
   20bc8:	ldrge	sl, [r0, #4]
   20bcc:	ldr	r0, [sp, #16]
   20bd0:	mov	r1, r8
   20bd4:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20bd8:	cmp	r0, #0
   20bdc:	mov	r2, r7
   20be0:	beq	20c1c <__mempcpy_chk@plt+0xf63c>
   20be4:	cmp	sl, #1
   20be8:	blt	20c60 <__mempcpy_chk@plt+0xf680>
   20bec:	ldr	r0, [sp, #16]
   20bf0:	mov	r1, sl
   20bf4:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20bf8:	cmp	r0, #0
   20bfc:	bne	20c5c <__mempcpy_chk@plt+0xf67c>
   20c00:	mov	r0, r5
   20c04:	mov	r1, sl
   20c08:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20c0c:	cmp	r0, #0
   20c10:	mov	r2, r7
   20c14:	bne	20c34 <__mempcpy_chk@plt+0xf654>
   20c18:	b	20c60 <__mempcpy_chk@plt+0xf680>
   20c1c:	mov	r0, r5
   20c20:	mov	r1, r8
   20c24:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20c28:	mov	r2, r7
   20c2c:	cmp	r0, #0
   20c30:	beq	20be4 <__mempcpy_chk@plt+0xf604>
   20c34:	ldr	r0, [r2, #28]
   20c38:	ldr	r1, [sp, #12]
   20c3c:	add	r2, r0, r1, lsl #2
   20c40:	ldr	r1, [sp, #4]
   20c44:	add	r0, sp, #24
   20c48:	bl	20918 <__mempcpy_chk@plt+0xf338>
   20c4c:	cmp	r0, #0
   20c50:	bne	20d1c <__mempcpy_chk@plt+0xf73c>
   20c54:	ldr	r0, [sp, #8]
   20c58:	ldr	r4, [r0]
   20c5c:	mov	r2, r7
   20c60:	add	r6, r6, #1
   20c64:	cmp	r6, r4
   20c68:	blt	20b78 <__mempcpy_chk@plt+0xf598>
   20c6c:	ldr	sl, [sp, #8]
   20c70:	ldr	r0, [sp, #16]
   20c74:	cmp	r4, #1
   20c78:	mov	r9, #0
   20c7c:	blt	20d08 <__mempcpy_chk@plt+0xf728>
   20c80:	ldr	r7, [r0, #8]
   20c84:	mov	r4, #0
   20c88:	add	r8, sp, #24
   20c8c:	b	20cb8 <__mempcpy_chk@plt+0xf6d8>
   20c90:	ldr	r2, [r5, #8]
   20c94:	add	r0, r2, r0, lsl #2
   20c98:	ldr	r2, [r0]
   20c9c:	add	r1, r1, #1
   20ca0:	str	r2, [r0, #-4]
   20ca4:	add	r0, r0, #4
   20ca8:	ldr	r2, [r5, #4]
   20cac:	cmp	r1, r2
   20cb0:	blt	20c98 <__mempcpy_chk@plt+0xf6b8>
   20cb4:	b	20cf8 <__mempcpy_chk@plt+0xf718>
   20cb8:	ldr	r6, [r7, r4, lsl #2]
   20cbc:	mov	r0, r8
   20cc0:	mov	r1, r6
   20cc4:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20cc8:	cmp	r0, #0
   20ccc:	bne	20cf8 <__mempcpy_chk@plt+0xf718>
   20cd0:	mov	r0, r5
   20cd4:	mov	r1, r6
   20cd8:	bl	1c634 <__mempcpy_chk@plt+0xb054>
   20cdc:	subs	r1, r0, #1
   20ce0:	blt	20cf8 <__mempcpy_chk@plt+0xf718>
   20ce4:	ldr	r2, [r5, #4]
   20ce8:	cmp	r2, r0
   20cec:	subge	r2, r2, #1
   20cf0:	strge	r2, [r5, #4]
   20cf4:	bgt	20c90 <__mempcpy_chk@plt+0xf6b0>
   20cf8:	ldr	r0, [sl]
   20cfc:	add	r4, r4, #1
   20d00:	cmp	r4, r0
   20d04:	blt	20cb8 <__mempcpy_chk@plt+0xf6d8>
   20d08:	ldr	r0, [sp, #32]
   20d0c:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   20d10:	mov	r0, r9
   20d14:	sub	sp, fp, #28
   20d18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d1c:	mov	r4, r0
   20d20:	ldr	r0, [sp, #32]
   20d24:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   20d28:	mov	r9, r4
   20d2c:	b	20d10 <__mempcpy_chk@plt+0xf730>
   20d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d34:	add	fp, sp, #28
   20d38:	sub	sp, sp, #20
   20d3c:	mov	r6, r1
   20d40:	mov	r1, r3
   20d44:	str	r2, [sp, #12]
   20d48:	mov	r7, r0
   20d4c:	str	r3, [sp, #16]
   20d50:	bl	1e048 <__mempcpy_chk@plt+0xca68>
   20d54:	ldr	r1, [fp, #12]
   20d58:	str	r0, [sp, #8]
   20d5c:	mov	r0, r7
   20d60:	bl	1e048 <__mempcpy_chk@plt+0xca68>
   20d64:	mov	r4, r0
   20d68:	ldr	r0, [r6, #4]
   20d6c:	cmp	r0, #1
   20d70:	blt	20df4 <__mempcpy_chk@plt+0xf814>
   20d74:	ldr	sl, [r7, #84]	; 0x54
   20d78:	mov	r5, #0
   20d7c:	ldr	r0, [r6, #8]
   20d80:	ldr	r2, [r7, #116]	; 0x74
   20d84:	ldr	r3, [sp, #12]
   20d88:	ldr	r1, [r0, r5, lsl #2]
   20d8c:	add	r0, r1, r1, lsl #1
   20d90:	ldr	r0, [r2, r0, lsl #3]
   20d94:	ldr	r2, [sl]
   20d98:	ldr	r9, [r2, r0, lsl #3]
   20d9c:	ldr	r0, [sp, #16]
   20da0:	str	r0, [sp]
   20da4:	ldr	r0, [sp, #8]
   20da8:	mov	r2, r9
   20dac:	str	r0, [sp, #4]
   20db0:	mov	r0, r7
   20db4:	bl	20e08 <__mempcpy_chk@plt+0xf828>
   20db8:	mov	r8, r0
   20dbc:	ldr	r0, [r6, #8]
   20dc0:	ldr	r3, [fp, #8]
   20dc4:	mov	r2, r9
   20dc8:	ldr	r1, [r0, r5, lsl #2]
   20dcc:	ldr	r0, [fp, #12]
   20dd0:	stm	sp, {r0, r4}
   20dd4:	mov	r0, r7
   20dd8:	bl	20e08 <__mempcpy_chk@plt+0xf828>
   20ddc:	cmp	r0, r8
   20de0:	bne	20dfc <__mempcpy_chk@plt+0xf81c>
   20de4:	ldr	r0, [r6, #4]
   20de8:	add	r5, r5, #1
   20dec:	cmp	r5, r0
   20df0:	blt	20d7c <__mempcpy_chk@plt+0xf79c>
   20df4:	mov	r0, #0
   20df8:	b	20e00 <__mempcpy_chk@plt+0xf820>
   20dfc:	mov	r0, #1
   20e00:	sub	sp, fp, #28
   20e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20e08:	push	{r4, r5, fp, lr}
   20e0c:	add	fp, sp, #8
   20e10:	sub	sp, sp, #8
   20e14:	ldr	r4, [r0, #116]	; 0x74
   20e18:	add	r1, r1, r1, lsl #1
   20e1c:	ldr	lr, [fp, #8]
   20e20:	add	r4, r4, r1, lsl #3
   20e24:	mvn	r1, #0
   20e28:	ldr	ip, [r4, #8]
   20e2c:	cmp	ip, lr
   20e30:	bgt	20e80 <__mempcpy_chk@plt+0xf8a0>
   20e34:	ldr	r4, [r4, #12]
   20e38:	mov	r1, #1
   20e3c:	cmp	r4, lr
   20e40:	blt	20e80 <__mempcpy_chk@plt+0xf8a0>
   20e44:	sub	r1, r4, lr
   20e48:	mov	r5, #1
   20e4c:	cmp	ip, lr
   20e50:	clz	r1, r1
   20e54:	lsr	r4, r1, #5
   20e58:	lsl	r1, r4, #1
   20e5c:	orreq	r1, r5, r4, lsl #1
   20e60:	cmp	r1, #0
   20e64:	beq	20e7c <__mempcpy_chk@plt+0xf89c>
   20e68:	ldr	r5, [fp, #12]
   20e6c:	str	r5, [sp]
   20e70:	bl	20e8c <__mempcpy_chk@plt+0xf8ac>
   20e74:	sub	sp, fp, #8
   20e78:	pop	{r4, r5, fp, pc}
   20e7c:	mov	r1, #0
   20e80:	mov	r0, r1
   20e84:	sub	sp, fp, #8
   20e88:	pop	{r4, r5, fp, pc}
   20e8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20e90:	add	fp, sp, #28
   20e94:	sub	sp, sp, #36	; 0x24
   20e98:	ldr	r4, [r0, #84]	; 0x54
   20e9c:	mov	r7, r0
   20ea0:	mov	r5, r1
   20ea4:	add	r1, r3, r3, lsl #1
   20ea8:	str	r3, [sp, #32]
   20eac:	ldr	r0, [r4, #24]
   20eb0:	add	r1, r0, r1, lsl #2
   20eb4:	mov	lr, r1
   20eb8:	ldr	r0, [lr, #4]!
   20ebc:	cmp	r0, #1
   20ec0:	blt	2105c <__mempcpy_chk@plt+0xfa7c>
   20ec4:	mov	ip, #1
   20ec8:	mov	r6, r2
   20ecc:	and	r3, r5, #2
   20ed0:	mov	sl, #0
   20ed4:	mvn	r2, ip, lsl r2
   20ed8:	cmp	r6, #31
   20edc:	str	r3, [sp, #16]
   20ee0:	str	r2, [sp, #24]
   20ee4:	lsl	r2, ip, r6
   20ee8:	and	ip, r5, #1
   20eec:	str	r2, [sp, #28]
   20ef0:	mov	r2, #0
   20ef4:	str	ip, [sp, #12]
   20ef8:	movwgt	r2, #1
   20efc:	orr	r2, r2, r3, lsr #1
   20f00:	add	r3, r1, #8
   20f04:	str	r2, [sp, #20]
   20f08:	stmib	sp, {r3, lr}
   20f0c:	ldr	r1, [r3]
   20f10:	ldr	r9, [r1, sl, lsl #2]
   20f14:	ldr	r1, [r4]
   20f18:	add	r2, r1, r9, lsl #3
   20f1c:	ldrb	r2, [r2, #4]
   20f20:	cmp	r2, #9
   20f24:	beq	21020 <__mempcpy_chk@plt+0xfa40>
   20f28:	cmp	r2, #8
   20f2c:	beq	2103c <__mempcpy_chk@plt+0xfa5c>
   20f30:	cmp	r2, #4
   20f34:	bne	21050 <__mempcpy_chk@plt+0xfa70>
   20f38:	ldr	r1, [fp, #8]
   20f3c:	cmn	r1, #1
   20f40:	beq	21050 <__mempcpy_chk@plt+0xfa70>
   20f44:	ldr	r1, [fp, #8]
   20f48:	ldr	r0, [r7, #116]	; 0x74
   20f4c:	add	r1, r1, r1, lsl #1
   20f50:	add	r0, r0, r1, lsl #3
   20f54:	add	r8, r0, #16
   20f58:	ldr	r0, [r8, #-16]
   20f5c:	cmp	r0, r9
   20f60:	bne	20ffc <__mempcpy_chk@plt+0xfa1c>
   20f64:	cmp	r6, #31
   20f68:	bgt	20f7c <__mempcpy_chk@plt+0xf99c>
   20f6c:	ldr	r0, [r8]
   20f70:	ldr	r1, [sp, #28]
   20f74:	tst	r0, r1
   20f78:	beq	20ffc <__mempcpy_chk@plt+0xfa1c>
   20f7c:	ldr	r0, [r4, #20]
   20f80:	add	r1, r9, r9, lsl #1
   20f84:	add	r0, r0, r1, lsl #2
   20f88:	ldr	r0, [r0, #8]
   20f8c:	ldr	r3, [r0]
   20f90:	ldr	r0, [sp, #32]
   20f94:	cmp	r3, r0
   20f98:	beq	21064 <__mempcpy_chk@plt+0xfa84>
   20f9c:	ldr	r0, [fp, #8]
   20fa0:	mov	r1, r5
   20fa4:	mov	r2, r6
   20fa8:	str	r0, [sp]
   20fac:	mov	r0, r7
   20fb0:	bl	20e8c <__mempcpy_chk@plt+0xf8ac>
   20fb4:	cmp	r0, #0
   20fb8:	beq	20fd0 <__mempcpy_chk@plt+0xf9f0>
   20fbc:	cmn	r0, #1
   20fc0:	beq	2107c <__mempcpy_chk@plt+0xfa9c>
   20fc4:	cmp	r6, #31
   20fc8:	ble	20fec <__mempcpy_chk@plt+0xfa0c>
   20fcc:	b	20ffc <__mempcpy_chk@plt+0xfa1c>
   20fd0:	ldr	r0, [sp, #20]
   20fd4:	cmp	r0, #0
   20fd8:	beq	20fec <__mempcpy_chk@plt+0xfa0c>
   20fdc:	ldr	r0, [sp, #16]
   20fe0:	cmp	r0, #0
   20fe4:	beq	20ffc <__mempcpy_chk@plt+0xfa1c>
   20fe8:	b	21070 <__mempcpy_chk@plt+0xfa90>
   20fec:	ldr	r0, [r8]
   20ff0:	ldr	r1, [sp, #24]
   20ff4:	and	r0, r0, r1
   20ff8:	str	r0, [r8]
   20ffc:	ldrb	r0, [r8, #4]
   21000:	add	r8, r8, #24
   21004:	cmp	r0, #0
   21008:	bne	20f58 <__mempcpy_chk@plt+0xf978>
   2100c:	ldr	lr, [sp, #8]
   21010:	ldr	ip, [sp, #12]
   21014:	ldr	r3, [sp, #4]
   21018:	ldr	r0, [lr]
   2101c:	b	21050 <__mempcpy_chk@plt+0xfa70>
   21020:	ldr	r2, [sp, #16]
   21024:	cmp	r2, #0
   21028:	beq	21050 <__mempcpy_chk@plt+0xfa70>
   2102c:	ldr	r1, [r1, r9, lsl #3]
   21030:	cmp	r1, r6
   21034:	bne	21050 <__mempcpy_chk@plt+0xfa70>
   21038:	b	21070 <__mempcpy_chk@plt+0xfa90>
   2103c:	cmp	ip, #0
   21040:	beq	21050 <__mempcpy_chk@plt+0xfa70>
   21044:	ldr	r1, [r1, r9, lsl #3]
   21048:	cmp	r1, r6
   2104c:	beq	21078 <__mempcpy_chk@plt+0xfa98>
   21050:	add	sl, sl, #1
   21054:	cmp	sl, r0
   21058:	blt	20f0c <__mempcpy_chk@plt+0xf92c>
   2105c:	ubfx	r0, r5, #1, #1
   21060:	b	2107c <__mempcpy_chk@plt+0xfa9c>
   21064:	ldr	r0, [sp, #12]
   21068:	rsb	r0, r0, #0
   2106c:	b	2107c <__mempcpy_chk@plt+0xfa9c>
   21070:	mov	r0, #0
   21074:	b	2107c <__mempcpy_chk@plt+0xfa9c>
   21078:	mvn	r0, #0
   2107c:	sub	sp, fp, #28
   21080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21084:	cmp	r0, #0
   21088:	bxeq	lr
   2108c:	push	{r4, r5, r6, sl, fp, lr}
   21090:	add	fp, sp, #16
   21094:	ldr	r1, [r0]
   21098:	mov	r4, r0
   2109c:	ldr	r0, [r0, #8]
   210a0:	cmp	r1, #1
   210a4:	blt	210e4 <__mempcpy_chk@plt+0xfb04>
   210a8:	mov	r5, #0
   210ac:	mov	r6, #0
   210b0:	add	r0, r0, r5
   210b4:	ldr	r0, [r0, #20]
   210b8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   210bc:	ldr	r0, [r4, #8]
   210c0:	add	r0, r0, r5
   210c4:	ldr	r0, [r0, #8]
   210c8:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   210cc:	ldr	r1, [r4]
   210d0:	ldr	r0, [r4, #8]
   210d4:	add	r6, r6, #1
   210d8:	add	r5, r5, #24
   210dc:	cmp	r6, r1
   210e0:	blt	210b0 <__mempcpy_chk@plt+0xfad0>
   210e4:	pop	{r4, r5, r6, sl, fp, lr}
   210e8:	b	12a84 <__mempcpy_chk@plt+0x14a4>
   210ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   210f0:	add	fp, sp, #24
   210f4:	mov	r4, r0
   210f8:	mvn	r0, #0
   210fc:	cmp	r4, #0
   21100:	beq	211a0 <__mempcpy_chk@plt+0xfbc0>
   21104:	mov	r5, r2
   21108:	ldr	r2, [r4]
   2110c:	cmp	r2, #0
   21110:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   21114:	sub	r0, r2, #1
   21118:	ldr	r9, [fp, #12]
   2111c:	ldr	r8, [fp, #8]
   21120:	lsl	r7, r5, #3
   21124:	str	r0, [r4]
   21128:	add	r6, r0, r0, lsl #1
   2112c:	ldr	r2, [r4, #8]
   21130:	ldr	r0, [r2, r6, lsl #3]!
   21134:	str	r0, [r1]
   21138:	mov	r0, r3
   2113c:	ldr	r1, [r2, #8]
   21140:	mov	r2, r7
   21144:	bl	1134c <memcpy@plt>
   21148:	ldr	r0, [r4, #8]
   2114c:	mov	r2, r7
   21150:	add	r0, r0, r6, lsl #3
   21154:	ldr	r0, [r0, #8]
   21158:	add	r1, r0, r5, lsl #3
   2115c:	mov	r0, r8
   21160:	bl	1134c <memcpy@plt>
   21164:	ldr	r0, [r9, #8]
   21168:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   2116c:	ldr	r0, [r4, #8]
   21170:	add	r0, r0, r6, lsl #3
   21174:	ldr	r0, [r0, #8]
   21178:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   2117c:	ldr	r0, [r4, #8]
   21180:	add	r0, r0, r6, lsl #3
   21184:	vldr	d16, [r0, #12]
   21188:	ldr	r0, [r0, #20]
   2118c:	str	r0, [r9, #8]
   21190:	vstr	d16, [r9]
   21194:	ldr	r0, [r4, #8]
   21198:	add	r0, r0, r6, lsl #3
   2119c:	ldr	r0, [r0, #4]
   211a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   211a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   211a8:	add	fp, sp, #24
   211ac:	movw	r8, #0
   211b0:	mov	r6, r2
   211b4:	mov	r4, r1
   211b8:	mov	r5, r0
   211bc:	movt	r8, #32752	; 0x7ff0
   211c0:	mov	r0, r5
   211c4:	mov	r1, r4
   211c8:	mov	r2, r6
   211cc:	bl	112f8 <read@plt>
   211d0:	mov	r7, r0
   211d4:	cmn	r0, #1
   211d8:	bgt	21200 <__mempcpy_chk@plt+0xfc20>
   211dc:	bl	114cc <__errno_location@plt>
   211e0:	ldr	r0, [r0]
   211e4:	cmp	r0, #4
   211e8:	beq	211c0 <__mempcpy_chk@plt+0xfbe0>
   211ec:	cmp	r6, r8
   211f0:	bls	21200 <__mempcpy_chk@plt+0xfc20>
   211f4:	cmp	r0, #22
   211f8:	mov	r6, r8
   211fc:	beq	211c0 <__mempcpy_chk@plt+0xfbe0>
   21200:	mov	r0, r7
   21204:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21208:	push	{fp, lr}
   2120c:	mov	fp, sp
   21210:	bl	11460 <mkstemp64@plt>
   21214:	pop	{fp, lr}
   21218:	b	21238 <__mempcpy_chk@plt+0xfc58>
   2121c:	push	{r4, sl, fp, lr}
   21220:	add	fp, sp, #8
   21224:	mov	r4, r1
   21228:	bl	113f4 <mkostemp64@plt>
   2122c:	mov	r1, r4
   21230:	pop	{r4, sl, fp, lr}
   21234:	b	21ef8 <__mempcpy_chk@plt+0x10918>
   21238:	push	{r4, r5, r6, r7, fp, lr}
   2123c:	add	fp, sp, #16
   21240:	mov	r4, r0
   21244:	cmp	r0, #2
   21248:	movhi	r0, r4
   2124c:	pophi	{r4, r5, r6, r7, fp, pc}
   21250:	mov	r0, r4
   21254:	bl	22080 <__mempcpy_chk@plt+0x10aa0>
   21258:	mov	r5, r0
   2125c:	bl	114cc <__errno_location@plt>
   21260:	ldr	r7, [r0]
   21264:	mov	r6, r0
   21268:	mov	r0, r4
   2126c:	bl	115d4 <close@plt>
   21270:	mov	r0, r5
   21274:	str	r7, [r6]
   21278:	pop	{r4, r5, r6, r7, fp, pc}
   2127c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21280:	add	fp, sp, #24
   21284:	sub	sp, sp, #32
   21288:	ldr	r6, [fp, #12]
   2128c:	ldr	r7, [fp, #8]
   21290:	mov	r4, r2
   21294:	mov	r8, r0
   21298:	cmp	r1, #0
   2129c:	beq	212c4 <__mempcpy_chk@plt+0xfce4>
   212a0:	movw	r2, #12017	; 0x2ef1
   212a4:	mov	r5, r1
   212a8:	str	r3, [sp, #4]
   212ac:	str	r4, [sp]
   212b0:	mov	r0, r8
   212b4:	mov	r1, #1
   212b8:	movt	r2, #2
   212bc:	mov	r3, r5
   212c0:	b	212dc <__mempcpy_chk@plt+0xfcfc>
   212c4:	movw	r2, #12029	; 0x2efd
   212c8:	str	r3, [sp]
   212cc:	mov	r0, r8
   212d0:	mov	r1, #1
   212d4:	mov	r3, r4
   212d8:	movt	r2, #2
   212dc:	bl	11520 <__fprintf_chk@plt>
   212e0:	movw	r1, #12036	; 0x2f04
   212e4:	mov	r0, #0
   212e8:	mov	r2, #5
   212ec:	movt	r1, #2
   212f0:	bl	113ac <dcgettext@plt>
   212f4:	movw	r2, #12754	; 0x31d2
   212f8:	mov	r3, r0
   212fc:	movw	r0, #2022	; 0x7e6
   21300:	mov	r1, #1
   21304:	str	r0, [sp]
   21308:	movt	r2, #2
   2130c:	mov	r0, r8
   21310:	bl	11520 <__fprintf_chk@plt>
   21314:	movw	r4, #10704	; 0x29d0
   21318:	mov	r1, r8
   2131c:	movt	r4, #2
   21320:	mov	r0, r4
   21324:	bl	112b0 <fputs_unlocked@plt>
   21328:	movw	r1, #12040	; 0x2f08
   2132c:	mov	r0, #0
   21330:	mov	r2, #5
   21334:	movt	r1, #2
   21338:	bl	113ac <dcgettext@plt>
   2133c:	movw	r3, #12211	; 0x2fb3
   21340:	mov	r2, r0
   21344:	mov	r0, r8
   21348:	mov	r1, #1
   2134c:	movt	r3, #2
   21350:	bl	11520 <__fprintf_chk@plt>
   21354:	mov	r0, r4
   21358:	mov	r1, r8
   2135c:	bl	112b0 <fputs_unlocked@plt>
   21360:	cmp	r6, #9
   21364:	bhi	213c8 <__mempcpy_chk@plt+0xfde8>
   21368:	add	r0, pc, #0
   2136c:	ldr	pc, [r0, r6, lsl #2]
   21370:	andeq	r1, r2, r0, lsr #11
   21374:	muleq	r2, r8, r3
   21378:	ldrdeq	r1, [r2], -r4
   2137c:	strdeq	r1, [r2], -ip
   21380:	andeq	r1, r2, r4, lsr #8
   21384:	andeq	r1, r2, ip, asr #8
   21388:	andeq	r1, r2, r4, ror r4
   2138c:	andeq	r1, r2, ip, lsr #9
   21390:	andeq	r1, r2, ip, asr #10
   21394:	strdeq	r1, [r2], -r4
   21398:	movw	r1, #12245	; 0x2fd5
   2139c:	mov	r0, #0
   213a0:	mov	r2, #5
   213a4:	movt	r1, #2
   213a8:	bl	113ac <dcgettext@plt>
   213ac:	ldr	r3, [r7]
   213b0:	mov	r2, r0
   213b4:	mov	r0, r8
   213b8:	mov	r1, #1
   213bc:	sub	sp, fp, #24
   213c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   213c4:	b	11520 <__fprintf_chk@plt>
   213c8:	movw	r1, #12564	; 0x3114
   213cc:	movt	r1, #2
   213d0:	b	214fc <__mempcpy_chk@plt+0xff1c>
   213d4:	movw	r1, #12261	; 0x2fe5
   213d8:	mov	r0, #0
   213dc:	mov	r2, #5
   213e0:	movt	r1, #2
   213e4:	bl	113ac <dcgettext@plt>
   213e8:	mov	r2, r0
   213ec:	ldr	r3, [r7]
   213f0:	ldr	r0, [r7, #4]
   213f4:	str	r0, [sp]
   213f8:	b	214e8 <__mempcpy_chk@plt+0xff08>
   213fc:	movw	r1, #12284	; 0x2ffc
   21400:	mov	r0, #0
   21404:	mov	r2, #5
   21408:	movt	r1, #2
   2140c:	bl	113ac <dcgettext@plt>
   21410:	ldr	r3, [r7]
   21414:	mov	r2, r0
   21418:	ldmib	r7, {r0, r1}
   2141c:	stm	sp, {r0, r1}
   21420:	b	214e8 <__mempcpy_chk@plt+0xff08>
   21424:	movw	r1, #12312	; 0x3018
   21428:	mov	r0, #0
   2142c:	mov	r2, #5
   21430:	movt	r1, #2
   21434:	bl	113ac <dcgettext@plt>
   21438:	ldr	r3, [r7]
   2143c:	mov	r2, r0
   21440:	ldmib	r7, {r0, r1, r7}
   21444:	stm	sp, {r0, r1, r7}
   21448:	b	214e8 <__mempcpy_chk@plt+0xff08>
   2144c:	movw	r1, #12344	; 0x3038
   21450:	mov	r0, #0
   21454:	mov	r2, #5
   21458:	movt	r1, #2
   2145c:	bl	113ac <dcgettext@plt>
   21460:	ldr	r3, [r7]
   21464:	mov	r2, r0
   21468:	ldmib	r7, {r0, r1, r6, r7}
   2146c:	stm	sp, {r0, r1, r6, r7}
   21470:	b	214e8 <__mempcpy_chk@plt+0xff08>
   21474:	movw	r1, #12380	; 0x305c
   21478:	mov	r0, #0
   2147c:	mov	r2, #5
   21480:	movt	r1, #2
   21484:	bl	113ac <dcgettext@plt>
   21488:	ldr	r3, [r7]
   2148c:	mov	r2, r0
   21490:	ldmib	r7, {r0, r1, r6}
   21494:	ldr	r5, [r7, #16]
   21498:	ldr	r7, [r7, #20]
   2149c:	stm	sp, {r0, r1, r6}
   214a0:	str	r5, [sp, #12]
   214a4:	str	r7, [sp, #16]
   214a8:	b	214e8 <__mempcpy_chk@plt+0xff08>
   214ac:	movw	r1, #12420	; 0x3084
   214b0:	mov	r0, #0
   214b4:	mov	r2, #5
   214b8:	movt	r1, #2
   214bc:	bl	113ac <dcgettext@plt>
   214c0:	ldr	r3, [r7]
   214c4:	mov	r2, r0
   214c8:	ldmib	r7, {r0, r1, r6}
   214cc:	ldr	r5, [r7, #16]
   214d0:	ldr	r4, [r7, #20]
   214d4:	ldr	r7, [r7, #24]
   214d8:	stm	sp, {r0, r1, r6}
   214dc:	str	r5, [sp, #12]
   214e0:	str	r4, [sp, #16]
   214e4:	str	r7, [sp, #20]
   214e8:	mov	r0, r8
   214ec:	mov	r1, #1
   214f0:	b	2159c <__mempcpy_chk@plt+0xffbc>
   214f4:	movw	r1, #12512	; 0x30e0
   214f8:	movt	r1, #2
   214fc:	mov	r0, #0
   21500:	mov	r2, #5
   21504:	bl	113ac <dcgettext@plt>
   21508:	mov	ip, r0
   2150c:	ldr	r3, [r7]
   21510:	ldr	r0, [r7, #4]
   21514:	ldr	r1, [r7, #8]
   21518:	ldr	r6, [r7, #12]
   2151c:	ldr	r5, [r7, #16]
   21520:	ldr	r4, [r7, #20]
   21524:	ldr	r2, [r7, #24]
   21528:	ldr	lr, [r7, #28]
   2152c:	ldr	r7, [r7, #32]
   21530:	stm	sp, {r0, r1, r6}
   21534:	str	r5, [sp, #12]
   21538:	str	r4, [sp, #16]
   2153c:	str	r2, [sp, #20]
   21540:	str	lr, [sp, #24]
   21544:	str	r7, [sp, #28]
   21548:	b	21590 <__mempcpy_chk@plt+0xffb0>
   2154c:	movw	r1, #12464	; 0x30b0
   21550:	mov	r0, #0
   21554:	mov	r2, #5
   21558:	movt	r1, #2
   2155c:	bl	113ac <dcgettext@plt>
   21560:	mov	ip, r0
   21564:	ldr	r3, [r7]
   21568:	ldmib	r7, {r0, r1, r6}
   2156c:	ldr	r5, [r7, #16]
   21570:	ldr	r4, [r7, #20]
   21574:	ldr	r2, [r7, #24]
   21578:	ldr	r7, [r7, #28]
   2157c:	stm	sp, {r0, r1, r6}
   21580:	str	r5, [sp, #12]
   21584:	str	r4, [sp, #16]
   21588:	str	r2, [sp, #20]
   2158c:	str	r7, [sp, #24]
   21590:	mov	r0, r8
   21594:	mov	r1, #1
   21598:	mov	r2, ip
   2159c:	bl	11520 <__fprintf_chk@plt>
   215a0:	sub	sp, fp, #24
   215a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   215a8:	push	{r4, sl, fp, lr}
   215ac:	add	fp, sp, #8
   215b0:	sub	sp, sp, #8
   215b4:	ldr	ip, [fp, #8]
   215b8:	mov	lr, #0
   215bc:	ldr	r4, [ip, lr, lsl #2]
   215c0:	add	lr, lr, #1
   215c4:	cmp	r4, #0
   215c8:	bne	215bc <__mempcpy_chk@plt+0xffdc>
   215cc:	sub	r4, lr, #1
   215d0:	str	ip, [sp]
   215d4:	str	r4, [sp, #4]
   215d8:	bl	2127c <__mempcpy_chk@plt+0xfc9c>
   215dc:	sub	sp, fp, #8
   215e0:	pop	{r4, sl, fp, pc}
   215e4:	push	{r4, r5, fp, lr}
   215e8:	add	fp, sp, #8
   215ec:	sub	sp, sp, #48	; 0x30
   215f0:	ldr	r4, [fp, #8]
   215f4:	mov	ip, #0
   215f8:	add	lr, sp, #8
   215fc:	ldr	r5, [r4]
   21600:	cmp	r5, #0
   21604:	str	r5, [lr, ip, lsl #2]
   21608:	beq	2161c <__mempcpy_chk@plt+0x1003c>
   2160c:	add	ip, ip, #1
   21610:	add	r4, r4, #4
   21614:	cmp	ip, #10
   21618:	bcc	215fc <__mempcpy_chk@plt+0x1001c>
   2161c:	str	lr, [sp]
   21620:	str	ip, [sp, #4]
   21624:	bl	2127c <__mempcpy_chk@plt+0xfc9c>
   21628:	sub	sp, fp, #8
   2162c:	pop	{r4, r5, fp, pc}
   21630:	push	{fp, lr}
   21634:	mov	fp, sp
   21638:	sub	sp, sp, #8
   2163c:	add	ip, fp, #8
   21640:	str	ip, [sp, #4]
   21644:	str	ip, [sp]
   21648:	bl	215e4 <__mempcpy_chk@plt+0x10004>
   2164c:	mov	sp, fp
   21650:	pop	{fp, pc}
   21654:	push	{fp, lr}
   21658:	mov	fp, sp
   2165c:	movw	r0, #16788	; 0x4194
   21660:	movt	r0, #3
   21664:	ldr	r1, [r0]
   21668:	movw	r0, #10704	; 0x29d0
   2166c:	movt	r0, #2
   21670:	bl	112b0 <fputs_unlocked@plt>
   21674:	movw	r1, #12624	; 0x3150
   21678:	mov	r0, #0
   2167c:	mov	r2, #5
   21680:	movt	r1, #2
   21684:	bl	113ac <dcgettext@plt>
   21688:	movw	r2, #12644	; 0x3164
   2168c:	mov	r1, r0
   21690:	mov	r0, #1
   21694:	movt	r2, #2
   21698:	bl	11508 <__printf_chk@plt>
   2169c:	movw	r1, #12666	; 0x317a
   216a0:	mov	r0, #0
   216a4:	mov	r2, #5
   216a8:	movt	r1, #2
   216ac:	bl	113ac <dcgettext@plt>
   216b0:	movw	r2, #10196	; 0x27d4
   216b4:	movw	r3, #10513	; 0x2911
   216b8:	mov	r1, r0
   216bc:	mov	r0, #1
   216c0:	movt	r2, #2
   216c4:	movt	r3, #2
   216c8:	bl	11508 <__printf_chk@plt>
   216cc:	movw	r1, #12686	; 0x318e
   216d0:	mov	r0, #0
   216d4:	mov	r2, #5
   216d8:	movt	r1, #2
   216dc:	bl	113ac <dcgettext@plt>
   216e0:	movw	r2, #12725	; 0x31b5
   216e4:	mov	r1, r0
   216e8:	mov	r0, #1
   216ec:	movt	r2, #2
   216f0:	pop	{fp, lr}
   216f4:	b	11508 <__printf_chk@plt>
   216f8:	b	216fc <__mempcpy_chk@plt+0x1011c>
   216fc:	push	{r4, r5, r6, sl, fp, lr}
   21700:	add	fp, sp, #16
   21704:	mov	r4, r2
   21708:	mov	r5, r1
   2170c:	mov	r6, r0
   21710:	bl	22044 <__mempcpy_chk@plt+0x10a64>
   21714:	cmp	r0, #0
   21718:	popne	{r4, r5, r6, sl, fp, pc}
   2171c:	cmp	r6, #0
   21720:	beq	21734 <__mempcpy_chk@plt+0x10154>
   21724:	cmp	r5, #0
   21728:	cmpne	r4, #0
   2172c:	bne	21734 <__mempcpy_chk@plt+0x10154>
   21730:	pop	{r4, r5, r6, sl, fp, pc}
   21734:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21738:	push	{fp, lr}
   2173c:	mov	fp, sp
   21740:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21744:	cmp	r0, #0
   21748:	popne	{fp, pc}
   2174c:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21750:	push	{fp, lr}
   21754:	mov	fp, sp
   21758:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   2175c:	cmp	r0, #0
   21760:	popne	{fp, pc}
   21764:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21768:	push	{fp, lr}
   2176c:	mov	fp, sp
   21770:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21774:	cmp	r0, #0
   21778:	popne	{fp, pc}
   2177c:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21780:	push	{r4, r5, fp, lr}
   21784:	add	fp, sp, #8
   21788:	mov	r4, r1
   2178c:	mov	r5, r0
   21790:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   21794:	cmp	r0, #0
   21798:	popne	{r4, r5, fp, pc}
   2179c:	cmp	r5, #0
   217a0:	beq	217b0 <__mempcpy_chk@plt+0x101d0>
   217a4:	cmp	r4, #0
   217a8:	bne	217b0 <__mempcpy_chk@plt+0x101d0>
   217ac:	pop	{r4, r5, fp, pc}
   217b0:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   217b4:	push	{fp, lr}
   217b8:	mov	fp, sp
   217bc:	cmp	r1, #0
   217c0:	orreq	r1, r1, #1
   217c4:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   217c8:	cmp	r0, #0
   217cc:	popne	{fp, pc}
   217d0:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   217d4:	push	{fp, lr}
   217d8:	mov	fp, sp
   217dc:	clz	r3, r2
   217e0:	lsr	ip, r3, #5
   217e4:	clz	r3, r1
   217e8:	lsr	r3, r3, #5
   217ec:	orrs	r3, r3, ip
   217f0:	movwne	r1, #1
   217f4:	movwne	r2, #1
   217f8:	bl	22044 <__mempcpy_chk@plt+0x10a64>
   217fc:	cmp	r0, #0
   21800:	popne	{fp, pc}
   21804:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21808:	push	{fp, lr}
   2180c:	mov	fp, sp
   21810:	mov	r2, r1
   21814:	mov	r1, r0
   21818:	mov	r0, #0
   2181c:	bl	22044 <__mempcpy_chk@plt+0x10a64>
   21820:	cmp	r0, #0
   21824:	popne	{fp, pc}
   21828:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   2182c:	mov	r2, r1
   21830:	mov	r1, r0
   21834:	mov	r0, #0
   21838:	b	217d4 <__mempcpy_chk@plt+0x101f4>
   2183c:	mov	r2, #1
   21840:	b	21844 <__mempcpy_chk@plt+0x10264>
   21844:	push	{r4, r5, fp, lr}
   21848:	add	fp, sp, #8
   2184c:	ldr	r5, [r1]
   21850:	mov	r4, r1
   21854:	cmp	r0, #0
   21858:	beq	21870 <__mempcpy_chk@plt+0x10290>
   2185c:	mov	r1, #1
   21860:	add	r1, r1, r5, lsr #1
   21864:	adds	r5, r5, r1
   21868:	bcc	21888 <__mempcpy_chk@plt+0x102a8>
   2186c:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21870:	cmp	r5, #0
   21874:	bne	21888 <__mempcpy_chk@plt+0x102a8>
   21878:	mov	r1, #64	; 0x40
   2187c:	cmp	r2, #64	; 0x40
   21880:	udiv	r5, r1, r2
   21884:	addhi	r5, r5, #1
   21888:	mov	r1, r5
   2188c:	bl	216fc <__mempcpy_chk@plt+0x1011c>
   21890:	str	r5, [r4]
   21894:	pop	{r4, r5, fp, pc}
   21898:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2189c:	add	fp, sp, #24
   218a0:	ldr	r6, [r1]
   218a4:	mov	r8, r1
   218a8:	ldr	r4, [fp, #8]
   218ac:	add	r1, r6, r6, asr #1
   218b0:	cmp	r1, r6
   218b4:	mvnvs	r1, #-2147483648	; 0x80000000
   218b8:	cmp	r1, r3
   218bc:	mov	r5, r1
   218c0:	movgt	r5, r3
   218c4:	cmn	r3, #1
   218c8:	movle	r5, r1
   218cc:	cmn	r4, #1
   218d0:	ble	218f0 <__mempcpy_chk@plt+0x10310>
   218d4:	cmp	r4, #0
   218d8:	beq	21944 <__mempcpy_chk@plt+0x10364>
   218dc:	cmn	r5, #1
   218e0:	ble	21918 <__mempcpy_chk@plt+0x10338>
   218e4:	mvn	r7, #-2147483648	; 0x80000000
   218e8:	udiv	r1, r7, r4
   218ec:	b	2190c <__mempcpy_chk@plt+0x1032c>
   218f0:	cmn	r5, #1
   218f4:	ble	21934 <__mempcpy_chk@plt+0x10354>
   218f8:	cmn	r4, #1
   218fc:	beq	21944 <__mempcpy_chk@plt+0x10364>
   21900:	mov	r1, #-2147483648	; 0x80000000
   21904:	mvn	r7, #-2147483648	; 0x80000000
   21908:	sdiv	r1, r1, r4
   2190c:	cmp	r1, r5
   21910:	bge	21944 <__mempcpy_chk@plt+0x10364>
   21914:	b	21954 <__mempcpy_chk@plt+0x10374>
   21918:	beq	21944 <__mempcpy_chk@plt+0x10364>
   2191c:	mov	r1, #-2147483648	; 0x80000000
   21920:	mvn	r7, #-2147483648	; 0x80000000
   21924:	sdiv	r1, r1, r5
   21928:	cmp	r1, r4
   2192c:	bge	21944 <__mempcpy_chk@plt+0x10364>
   21930:	b	21954 <__mempcpy_chk@plt+0x10374>
   21934:	mvn	r7, #-2147483648	; 0x80000000
   21938:	sdiv	r1, r7, r4
   2193c:	cmp	r5, r1
   21940:	blt	21954 <__mempcpy_chk@plt+0x10374>
   21944:	mul	r1, r5, r4
   21948:	mov	r7, #64	; 0x40
   2194c:	cmp	r1, #63	; 0x3f
   21950:	bgt	2195c <__mempcpy_chk@plt+0x1037c>
   21954:	sdiv	r5, r7, r4
   21958:	mul	r1, r5, r4
   2195c:	cmp	r0, #0
   21960:	moveq	r7, #0
   21964:	streq	r7, [r8]
   21968:	sub	r7, r5, r6
   2196c:	cmp	r7, r2
   21970:	bge	21a14 <__mempcpy_chk@plt+0x10434>
   21974:	add	r5, r6, r2
   21978:	mov	r2, #0
   2197c:	mov	r1, #0
   21980:	cmp	r5, r3
   21984:	movwgt	r2, #1
   21988:	cmn	r3, #1
   2198c:	movwgt	r1, #1
   21990:	cmp	r5, r6
   21994:	bvs	219fc <__mempcpy_chk@plt+0x1041c>
   21998:	ands	r1, r1, r2
   2199c:	bne	219fc <__mempcpy_chk@plt+0x1041c>
   219a0:	cmn	r4, #1
   219a4:	ble	219c4 <__mempcpy_chk@plt+0x103e4>
   219a8:	cmp	r4, #0
   219ac:	beq	21a10 <__mempcpy_chk@plt+0x10430>
   219b0:	cmn	r5, #1
   219b4:	ble	219e8 <__mempcpy_chk@plt+0x10408>
   219b8:	mvn	r1, #-2147483648	; 0x80000000
   219bc:	udiv	r1, r1, r4
   219c0:	b	219dc <__mempcpy_chk@plt+0x103fc>
   219c4:	cmn	r5, #1
   219c8:	ble	21a00 <__mempcpy_chk@plt+0x10420>
   219cc:	cmn	r4, #1
   219d0:	beq	21a10 <__mempcpy_chk@plt+0x10430>
   219d4:	mov	r1, #-2147483648	; 0x80000000
   219d8:	sdiv	r1, r1, r4
   219dc:	cmp	r1, r5
   219e0:	bge	21a10 <__mempcpy_chk@plt+0x10430>
   219e4:	b	219fc <__mempcpy_chk@plt+0x1041c>
   219e8:	beq	21a10 <__mempcpy_chk@plt+0x10430>
   219ec:	mov	r1, #-2147483648	; 0x80000000
   219f0:	sdiv	r1, r1, r5
   219f4:	cmp	r1, r4
   219f8:	bge	21a10 <__mempcpy_chk@plt+0x10430>
   219fc:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21a00:	mvn	r1, #-2147483648	; 0x80000000
   21a04:	sdiv	r1, r1, r4
   21a08:	cmp	r5, r1
   21a0c:	blt	219fc <__mempcpy_chk@plt+0x1041c>
   21a10:	mul	r1, r5, r4
   21a14:	bl	21780 <__mempcpy_chk@plt+0x101a0>
   21a18:	str	r5, [r8]
   21a1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21a20:	push	{fp, lr}
   21a24:	mov	fp, sp
   21a28:	mov	r1, #1
   21a2c:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   21a30:	cmp	r0, #0
   21a34:	popne	{fp, pc}
   21a38:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21a3c:	push	{fp, lr}
   21a40:	mov	fp, sp
   21a44:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   21a48:	cmp	r0, #0
   21a4c:	popne	{fp, pc}
   21a50:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21a54:	push	{fp, lr}
   21a58:	mov	fp, sp
   21a5c:	mov	r1, #1
   21a60:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   21a64:	cmp	r0, #0
   21a68:	popne	{fp, pc}
   21a6c:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21a70:	push	{fp, lr}
   21a74:	mov	fp, sp
   21a78:	bl	21bcc <__mempcpy_chk@plt+0x105ec>
   21a7c:	cmp	r0, #0
   21a80:	popne	{fp, pc}
   21a84:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21a88:	push	{r4, r5, r6, sl, fp, lr}
   21a8c:	add	fp, sp, #16
   21a90:	mov	r5, r0
   21a94:	mov	r0, r1
   21a98:	mov	r4, r1
   21a9c:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21aa0:	cmp	r0, #0
   21aa4:	beq	21ac0 <__mempcpy_chk@plt+0x104e0>
   21aa8:	mov	r1, r5
   21aac:	mov	r2, r4
   21ab0:	mov	r6, r0
   21ab4:	bl	1134c <memcpy@plt>
   21ab8:	mov	r0, r6
   21abc:	pop	{r4, r5, r6, sl, fp, pc}
   21ac0:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21ac4:	push	{r4, r5, r6, sl, fp, lr}
   21ac8:	add	fp, sp, #16
   21acc:	mov	r5, r0
   21ad0:	mov	r0, r1
   21ad4:	mov	r4, r1
   21ad8:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21adc:	cmp	r0, #0
   21ae0:	beq	21afc <__mempcpy_chk@plt+0x1051c>
   21ae4:	mov	r1, r5
   21ae8:	mov	r2, r4
   21aec:	mov	r6, r0
   21af0:	bl	1134c <memcpy@plt>
   21af4:	mov	r0, r6
   21af8:	pop	{r4, r5, r6, sl, fp, pc}
   21afc:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21b00:	push	{r4, r5, r6, sl, fp, lr}
   21b04:	add	fp, sp, #16
   21b08:	mov	r5, r0
   21b0c:	add	r0, r1, #1
   21b10:	mov	r4, r1
   21b14:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21b18:	cmp	r0, #0
   21b1c:	beq	21b44 <__mempcpy_chk@plt+0x10564>
   21b20:	mov	r6, r0
   21b24:	mov	r0, #0
   21b28:	mov	r1, r5
   21b2c:	mov	r2, r4
   21b30:	strb	r0, [r6, r4]
   21b34:	mov	r0, r6
   21b38:	bl	1134c <memcpy@plt>
   21b3c:	mov	r0, r6
   21b40:	pop	{r4, r5, r6, sl, fp, pc}
   21b44:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21b48:	push	{r4, r5, r6, sl, fp, lr}
   21b4c:	add	fp, sp, #16
   21b50:	mov	r4, r0
   21b54:	bl	114c0 <strlen@plt>
   21b58:	add	r5, r0, #1
   21b5c:	mov	r0, r5
   21b60:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21b64:	cmp	r0, #0
   21b68:	beq	21b84 <__mempcpy_chk@plt+0x105a4>
   21b6c:	mov	r1, r4
   21b70:	mov	r2, r5
   21b74:	mov	r6, r0
   21b78:	bl	1134c <memcpy@plt>
   21b7c:	mov	r0, r6
   21b80:	pop	{r4, r5, r6, sl, fp, pc}
   21b84:	bl	21b88 <__mempcpy_chk@plt+0x105a8>
   21b88:	push	{fp, lr}
   21b8c:	mov	fp, sp
   21b90:	movw	r0, #16700	; 0x413c
   21b94:	movw	r1, #12801	; 0x3201
   21b98:	mov	r2, #5
   21b9c:	movt	r0, #3
   21ba0:	movt	r1, #2
   21ba4:	ldr	r4, [r0]
   21ba8:	mov	r0, #0
   21bac:	bl	113ac <dcgettext@plt>
   21bb0:	movw	r2, #11195	; 0x2bbb
   21bb4:	mov	r3, r0
   21bb8:	mov	r0, r4
   21bbc:	mov	r1, #0
   21bc0:	movt	r2, #2
   21bc4:	bl	1143c <error@plt>
   21bc8:	bl	115c8 <abort@plt>
   21bcc:	clz	r2, r1
   21bd0:	clz	r3, r0
   21bd4:	lsr	r2, r2, #5
   21bd8:	lsr	r3, r3, #5
   21bdc:	orrs	r2, r3, r2
   21be0:	movwne	r1, #1
   21be4:	movwne	r0, #1
   21be8:	cmp	r1, #0
   21bec:	beq	21c1c <__mempcpy_chk@plt+0x1063c>
   21bf0:	mvn	r2, #-2147483648	; 0x80000000
   21bf4:	udiv	r2, r2, r1
   21bf8:	cmp	r2, r0
   21bfc:	bcs	21c1c <__mempcpy_chk@plt+0x1063c>
   21c00:	push	{fp, lr}
   21c04:	mov	fp, sp
   21c08:	bl	114cc <__errno_location@plt>
   21c0c:	mov	r1, #12
   21c10:	str	r1, [r0]
   21c14:	mov	r0, #0
   21c18:	pop	{fp, pc}
   21c1c:	b	112a4 <calloc@plt>
   21c20:	cmp	r0, #0
   21c24:	movweq	r0, #1
   21c28:	cmn	r0, #1
   21c2c:	ble	21c34 <__mempcpy_chk@plt+0x10654>
   21c30:	b	1146c <malloc@plt>
   21c34:	push	{fp, lr}
   21c38:	mov	fp, sp
   21c3c:	bl	114cc <__errno_location@plt>
   21c40:	mov	r1, #12
   21c44:	str	r1, [r0]
   21c48:	mov	r0, #0
   21c4c:	pop	{fp, pc}
   21c50:	push	{fp, lr}
   21c54:	mov	fp, sp
   21c58:	cmp	r0, #0
   21c5c:	beq	21c78 <__mempcpy_chk@plt+0x10698>
   21c60:	cmp	r1, #0
   21c64:	beq	21c84 <__mempcpy_chk@plt+0x106a4>
   21c68:	cmn	r1, #1
   21c6c:	ble	21c8c <__mempcpy_chk@plt+0x106ac>
   21c70:	pop	{fp, lr}
   21c74:	b	113c4 <realloc@plt>
   21c78:	mov	r0, r1
   21c7c:	pop	{fp, lr}
   21c80:	b	21c20 <__mempcpy_chk@plt+0x10640>
   21c84:	bl	12a84 <__mempcpy_chk@plt+0x14a4>
   21c88:	b	21c98 <__mempcpy_chk@plt+0x106b8>
   21c8c:	bl	114cc <__errno_location@plt>
   21c90:	mov	r1, #12
   21c94:	str	r1, [r0]
   21c98:	mov	r0, #0
   21c9c:	pop	{fp, pc}
   21ca0:	sub	r0, r0, #1
   21ca4:	ldrb	r3, [r0, #1]!
   21ca8:	cmp	r3, #47	; 0x2f
   21cac:	beq	21ca4 <__mempcpy_chk@plt+0x106c4>
   21cb0:	mov	r2, #0
   21cb4:	mov	r1, r0
   21cb8:	uxtb	r3, r3
   21cbc:	cmp	r3, #47	; 0x2f
   21cc0:	beq	21cdc <__mempcpy_chk@plt+0x106fc>
   21cc4:	cmp	r3, #0
   21cc8:	bxeq	lr
   21ccc:	tst	r2, #1
   21cd0:	mov	r2, #0
   21cd4:	movne	r0, r1
   21cd8:	b	21ce0 <__mempcpy_chk@plt+0x10700>
   21cdc:	mov	r2, #1
   21ce0:	ldrb	r3, [r1, #1]!
   21ce4:	b	21cb8 <__mempcpy_chk@plt+0x106d8>
   21ce8:	push	{r4, sl, fp, lr}
   21cec:	add	fp, sp, #8
   21cf0:	mov	r4, r0
   21cf4:	bl	114c0 <strlen@plt>
   21cf8:	mov	r1, r0
   21cfc:	sub	r2, r4, #1
   21d00:	mov	r0, r1
   21d04:	cmp	r1, #2
   21d08:	popcc	{r4, sl, fp, pc}
   21d0c:	ldrb	r3, [r2, r0]
   21d10:	sub	r1, r0, #1
   21d14:	cmp	r3, #47	; 0x2f
   21d18:	beq	21d00 <__mempcpy_chk@plt+0x10720>
   21d1c:	pop	{r4, sl, fp, pc}
   21d20:	push	{r4, r5, r6, sl, fp, lr}
   21d24:	add	fp, sp, #16
   21d28:	mov	r4, r0
   21d2c:	bl	11418 <__fpending@plt>
   21d30:	mov	r5, r0
   21d34:	mov	r0, r4
   21d38:	bl	11424 <ferror_unlocked@plt>
   21d3c:	mov	r6, r0
   21d40:	mov	r0, r4
   21d44:	bl	21e5c <__mempcpy_chk@plt+0x1087c>
   21d48:	cmp	r6, #0
   21d4c:	beq	21d6c <__mempcpy_chk@plt+0x1078c>
   21d50:	mvn	r4, #0
   21d54:	cmp	r0, #0
   21d58:	bne	21d98 <__mempcpy_chk@plt+0x107b8>
   21d5c:	bl	114cc <__errno_location@plt>
   21d60:	mov	r1, #0
   21d64:	str	r1, [r0]
   21d68:	b	21d98 <__mempcpy_chk@plt+0x107b8>
   21d6c:	cmp	r0, #0
   21d70:	mov	r4, r0
   21d74:	mvnne	r4, #0
   21d78:	cmp	r5, #0
   21d7c:	bne	21d98 <__mempcpy_chk@plt+0x107b8>
   21d80:	cmp	r0, #0
   21d84:	beq	21d98 <__mempcpy_chk@plt+0x107b8>
   21d88:	bl	114cc <__errno_location@plt>
   21d8c:	ldr	r0, [r0]
   21d90:	subs	r4, r0, #9
   21d94:	mvnne	r4, #0
   21d98:	mov	r0, r4
   21d9c:	pop	{r4, r5, r6, sl, fp, pc}
   21da0:	push	{r4, r5, r6, r7, fp, lr}
   21da4:	add	fp, sp, #16
   21da8:	mov	r4, r0
   21dac:	ldr	r0, [r0, #4]
   21db0:	mov	r5, r1
   21db4:	cmp	r0, r1
   21db8:	bcs	21de8 <__mempcpy_chk@plt+0x10808>
   21dbc:	mov	r6, r3
   21dc0:	cmp	r3, #0
   21dc4:	beq	21df0 <__mempcpy_chk@plt+0x10810>
   21dc8:	mvn	r0, #0
   21dcc:	udiv	r0, r0, r6
   21dd0:	cmp	r0, r5
   21dd4:	bcs	21df0 <__mempcpy_chk@plt+0x10810>
   21dd8:	bl	114cc <__errno_location@plt>
   21ddc:	mov	r1, #12
   21de0:	str	r1, [r0]
   21de4:	b	21e54 <__mempcpy_chk@plt+0x10874>
   21de8:	str	r5, [r4]
   21dec:	b	21e4c <__mempcpy_chk@plt+0x1086c>
   21df0:	ldr	r0, [r4, #8]
   21df4:	mul	r1, r6, r5
   21df8:	cmp	r0, r2
   21dfc:	beq	21e14 <__mempcpy_chk@plt+0x10834>
   21e00:	bl	21c50 <__mempcpy_chk@plt+0x10670>
   21e04:	mov	r7, r0
   21e08:	cmp	r0, #0
   21e0c:	bne	21e44 <__mempcpy_chk@plt+0x10864>
   21e10:	b	21e54 <__mempcpy_chk@plt+0x10874>
   21e14:	mov	r0, r1
   21e18:	bl	21c20 <__mempcpy_chk@plt+0x10640>
   21e1c:	cmp	r0, #0
   21e20:	beq	21e54 <__mempcpy_chk@plt+0x10874>
   21e24:	ldr	r1, [r4, #8]
   21e28:	mov	r7, r0
   21e2c:	cmp	r1, #0
   21e30:	beq	21e44 <__mempcpy_chk@plt+0x10864>
   21e34:	ldr	r0, [r4]
   21e38:	mul	r2, r0, r6
   21e3c:	mov	r0, r7
   21e40:	bl	1134c <memcpy@plt>
   21e44:	str	r5, [r4]
   21e48:	stmib	r4, {r5, r7}
   21e4c:	mov	r0, #1
   21e50:	pop	{r4, r5, r6, r7, fp, pc}
   21e54:	mov	r0, #0
   21e58:	pop	{r4, r5, r6, r7, fp, pc}
   21e5c:	push	{r4, r5, r6, sl, fp, lr}
   21e60:	add	fp, sp, #16
   21e64:	sub	sp, sp, #8
   21e68:	mov	r4, r0
   21e6c:	bl	11514 <fileno@plt>
   21e70:	cmn	r0, #1
   21e74:	ble	21ee8 <__mempcpy_chk@plt+0x10908>
   21e78:	mov	r0, r4
   21e7c:	bl	11484 <__freading@plt>
   21e80:	cmp	r0, #0
   21e84:	beq	21eb0 <__mempcpy_chk@plt+0x108d0>
   21e88:	mov	r0, r4
   21e8c:	bl	11514 <fileno@plt>
   21e90:	mov	r1, #1
   21e94:	mov	r2, #0
   21e98:	mov	r3, #0
   21e9c:	str	r1, [sp]
   21ea0:	bl	11400 <lseek64@plt>
   21ea4:	and	r0, r0, r1
   21ea8:	cmn	r0, #1
   21eac:	beq	21ee8 <__mempcpy_chk@plt+0x10908>
   21eb0:	mov	r0, r4
   21eb4:	bl	21f50 <__mempcpy_chk@plt+0x10970>
   21eb8:	cmp	r0, #0
   21ebc:	beq	21ee8 <__mempcpy_chk@plt+0x10908>
   21ec0:	bl	114cc <__errno_location@plt>
   21ec4:	ldr	r6, [r0]
   21ec8:	mov	r5, r0
   21ecc:	mov	r0, r4
   21ed0:	bl	1152c <fclose@plt>
   21ed4:	cmp	r6, #0
   21ed8:	strne	r6, [r5]
   21edc:	mvnne	r0, #0
   21ee0:	sub	sp, fp, #16
   21ee4:	pop	{r4, r5, r6, sl, fp, pc}
   21ee8:	mov	r0, r4
   21eec:	sub	sp, fp, #16
   21ef0:	pop	{r4, r5, r6, sl, fp, lr}
   21ef4:	b	1152c <fclose@plt>
   21ef8:	push	{r4, r5, r6, r7, fp, lr}
   21efc:	add	fp, sp, #16
   21f00:	mov	r4, r0
   21f04:	cmp	r0, #2
   21f08:	movhi	r0, r4
   21f0c:	pophi	{r4, r5, r6, r7, fp, pc}
   21f10:	mov	r0, r4
   21f14:	bl	21f3c <__mempcpy_chk@plt+0x1095c>
   21f18:	mov	r5, r0
   21f1c:	bl	114cc <__errno_location@plt>
   21f20:	ldr	r7, [r0]
   21f24:	mov	r6, r0
   21f28:	mov	r0, r4
   21f2c:	bl	115d4 <close@plt>
   21f30:	mov	r0, r5
   21f34:	str	r7, [r6]
   21f38:	pop	{r4, r5, r6, r7, fp, pc}
   21f3c:	lsl	r1, r1, #12
   21f40:	movw	r2, #1030	; 0x406
   21f44:	and	r1, r2, r1, asr #31
   21f48:	mov	r2, #3
   21f4c:	b	2208c <__mempcpy_chk@plt+0x10aac>
   21f50:	push	{r4, sl, fp, lr}
   21f54:	add	fp, sp, #8
   21f58:	sub	sp, sp, #8
   21f5c:	mov	r4, r0
   21f60:	cmp	r0, #0
   21f64:	beq	21f80 <__mempcpy_chk@plt+0x109a0>
   21f68:	mov	r0, r4
   21f6c:	bl	11484 <__freading@plt>
   21f70:	cmp	r0, #0
   21f74:	ldrbne	r0, [r4, #1]
   21f78:	tstne	r0, #1
   21f7c:	bne	21f90 <__mempcpy_chk@plt+0x109b0>
   21f80:	mov	r0, r4
   21f84:	sub	sp, fp, #8
   21f88:	pop	{r4, sl, fp, lr}
   21f8c:	b	11310 <fflush@plt>
   21f90:	mov	r0, #1
   21f94:	mov	r2, #0
   21f98:	mov	r3, #0
   21f9c:	str	r0, [sp]
   21fa0:	mov	r0, r4
   21fa4:	bl	12aac <__mempcpy_chk@plt+0x14cc>
   21fa8:	b	21f80 <__mempcpy_chk@plt+0x109a0>
   21fac:	push	{fp, lr}
   21fb0:	mov	fp, sp
   21fb4:	mov	r0, #14
   21fb8:	bl	11574 <nl_langinfo@plt>
   21fbc:	movw	r1, #10705	; 0x29d1
   21fc0:	cmp	r0, #0
   21fc4:	movt	r1, #2
   21fc8:	movne	r1, r0
   21fcc:	movw	r0, #12818	; 0x3212
   21fd0:	ldrb	r2, [r1]
   21fd4:	movt	r0, #2
   21fd8:	cmp	r2, #0
   21fdc:	movne	r0, r1
   21fe0:	pop	{fp, pc}
   21fe4:	push	{r4, r5, r6, r7, fp, lr}
   21fe8:	add	fp, sp, #16
   21fec:	sub	sp, sp, #8
   21ff0:	add	r5, sp, #4
   21ff4:	cmp	r0, #0
   21ff8:	mov	r7, r2
   21ffc:	mov	r4, r1
   22000:	movne	r5, r0
   22004:	mov	r0, r5
   22008:	bl	11430 <mbrtowc@plt>
   2200c:	mov	r6, r0
   22010:	cmp	r7, #0
   22014:	beq	22038 <__mempcpy_chk@plt+0x10a58>
   22018:	cmn	r6, #2
   2201c:	bcc	22038 <__mempcpy_chk@plt+0x10a58>
   22020:	mov	r0, #0
   22024:	bl	22264 <__mempcpy_chk@plt+0x10c84>
   22028:	cmp	r0, #0
   2202c:	ldrbeq	r0, [r4]
   22030:	moveq	r6, #1
   22034:	streq	r0, [r5]
   22038:	mov	r0, r6
   2203c:	sub	sp, fp, #16
   22040:	pop	{r4, r5, r6, r7, fp, pc}
   22044:	cmp	r2, #0
   22048:	beq	22078 <__mempcpy_chk@plt+0x10a98>
   2204c:	mvn	r3, #0
   22050:	udiv	r3, r3, r2
   22054:	cmp	r3, r1
   22058:	bcs	22078 <__mempcpy_chk@plt+0x10a98>
   2205c:	push	{fp, lr}
   22060:	mov	fp, sp
   22064:	bl	114cc <__errno_location@plt>
   22068:	mov	r1, #12
   2206c:	str	r1, [r0]
   22070:	mov	r0, #0
   22074:	pop	{fp, pc}
   22078:	mul	r1, r2, r1
   2207c:	b	21c50 <__mempcpy_chk@plt+0x10670>
   22080:	mov	r1, #0
   22084:	mov	r2, #3
   22088:	b	2208c <__mempcpy_chk@plt+0x10aac>
   2208c:	sub	sp, sp, #8
   22090:	push	{r4, r5, r6, r7, fp, lr}
   22094:	add	fp, sp, #16
   22098:	sub	sp, sp, #8
   2209c:	mov	r5, r0
   220a0:	add	r0, fp, #8
   220a4:	cmp	r1, #11
   220a8:	str	r3, [fp, #12]
   220ac:	str	r2, [fp, #8]
   220b0:	str	r0, [sp, #4]
   220b4:	bhi	220f0 <__mempcpy_chk@plt+0x10b10>
   220b8:	mov	r0, #1
   220bc:	movw	r2, #1300	; 0x514
   220c0:	tst	r2, r0, lsl r1
   220c4:	bne	221a8 <__mempcpy_chk@plt+0x10bc8>
   220c8:	movw	r2, #2570	; 0xa0a
   220cc:	tst	r2, r0, lsl r1
   220d0:	bne	22118 <__mempcpy_chk@plt+0x10b38>
   220d4:	cmp	r1, #0
   220d8:	bne	220f0 <__mempcpy_chk@plt+0x10b10>
   220dc:	ldr	r0, [sp, #4]
   220e0:	add	r1, r0, #4
   220e4:	str	r1, [sp, #4]
   220e8:	mov	r1, #0
   220ec:	b	221b4 <__mempcpy_chk@plt+0x10bd4>
   220f0:	sub	r0, r1, #1024	; 0x400
   220f4:	cmp	r0, #10
   220f8:	bhi	221a8 <__mempcpy_chk@plt+0x10bc8>
   220fc:	mov	r2, #1
   22100:	movw	r3, #645	; 0x285
   22104:	tst	r3, r2, lsl r0
   22108:	bne	221a8 <__mempcpy_chk@plt+0x10bc8>
   2210c:	movw	r3, #1282	; 0x502
   22110:	tst	r3, r2, lsl r0
   22114:	beq	22124 <__mempcpy_chk@plt+0x10b44>
   22118:	mov	r0, r5
   2211c:	bl	11544 <fcntl64@plt>
   22120:	b	221c0 <__mempcpy_chk@plt+0x10be0>
   22124:	cmp	r0, #6
   22128:	bne	221a8 <__mempcpy_chk@plt+0x10bc8>
   2212c:	ldr	r0, [sp, #4]
   22130:	movw	r7, #25656	; 0x6438
   22134:	movt	r7, #3
   22138:	add	r1, r0, #4
   2213c:	str	r1, [sp, #4]
   22140:	ldr	r6, [r0]
   22144:	ldr	r0, [r7]
   22148:	cmp	r0, #0
   2214c:	blt	221e4 <__mempcpy_chk@plt+0x10c04>
   22150:	mov	r0, r5
   22154:	movw	r1, #1030	; 0x406
   22158:	mov	r2, r6
   2215c:	bl	11544 <fcntl64@plt>
   22160:	mov	r4, r0
   22164:	cmn	r0, #1
   22168:	bgt	221d8 <__mempcpy_chk@plt+0x10bf8>
   2216c:	bl	114cc <__errno_location@plt>
   22170:	ldr	r0, [r0]
   22174:	cmp	r0, #22
   22178:	bne	221d8 <__mempcpy_chk@plt+0x10bf8>
   2217c:	mov	r0, r5
   22180:	mov	r1, #0
   22184:	mov	r2, r6
   22188:	bl	11544 <fcntl64@plt>
   2218c:	mov	r4, r0
   22190:	cmp	r0, #0
   22194:	blt	221c4 <__mempcpy_chk@plt+0x10be4>
   22198:	mvn	r0, #0
   2219c:	str	r0, [r7]
   221a0:	mov	r0, #1
   221a4:	b	22208 <__mempcpy_chk@plt+0x10c28>
   221a8:	ldr	r0, [sp, #4]
   221ac:	add	r2, r0, #4
   221b0:	str	r2, [sp, #4]
   221b4:	ldr	r2, [r0]
   221b8:	mov	r0, r5
   221bc:	bl	11544 <fcntl64@plt>
   221c0:	mov	r4, r0
   221c4:	mov	r0, r4
   221c8:	sub	sp, fp, #16
   221cc:	pop	{r4, r5, r6, r7, fp, lr}
   221d0:	add	sp, sp, #8
   221d4:	bx	lr
   221d8:	mov	r0, #1
   221dc:	str	r0, [r7]
   221e0:	b	221c4 <__mempcpy_chk@plt+0x10be4>
   221e4:	mov	r0, r5
   221e8:	mov	r1, #0
   221ec:	mov	r2, r6
   221f0:	bl	11544 <fcntl64@plt>
   221f4:	mov	r4, r0
   221f8:	ldr	r0, [r7]
   221fc:	add	r0, r0, #1
   22200:	clz	r0, r0
   22204:	lsr	r0, r0, #5
   22208:	cmp	r0, #0
   2220c:	beq	221c4 <__mempcpy_chk@plt+0x10be4>
   22210:	cmp	r4, #0
   22214:	blt	221c4 <__mempcpy_chk@plt+0x10be4>
   22218:	mov	r0, r4
   2221c:	mov	r1, #1
   22220:	bl	11544 <fcntl64@plt>
   22224:	cmp	r0, #0
   22228:	blt	22244 <__mempcpy_chk@plt+0x10c64>
   2222c:	orr	r2, r0, #1
   22230:	mov	r0, r4
   22234:	mov	r1, #2
   22238:	bl	11544 <fcntl64@plt>
   2223c:	cmn	r0, #1
   22240:	bne	221c4 <__mempcpy_chk@plt+0x10be4>
   22244:	bl	114cc <__errno_location@plt>
   22248:	ldr	r6, [r0]
   2224c:	mov	r5, r0
   22250:	mov	r0, r4
   22254:	bl	115d4 <close@plt>
   22258:	str	r6, [r5]
   2225c:	mvn	r4, #0
   22260:	b	221c4 <__mempcpy_chk@plt+0x10be4>
   22264:	push	{r4, sl, fp, lr}
   22268:	add	fp, sp, #8
   2226c:	sub	sp, sp, #264	; 0x108
   22270:	add	r1, sp, #7
   22274:	movw	r2, #257	; 0x101
   22278:	bl	222c8 <__mempcpy_chk@plt+0x10ce8>
   2227c:	mov	r4, #0
   22280:	cmp	r0, #0
   22284:	bne	222bc <__mempcpy_chk@plt+0x10cdc>
   22288:	movw	r1, #12824	; 0x3218
   2228c:	add	r0, sp, #7
   22290:	movt	r1, #2
   22294:	bl	112ec <strcmp@plt>
   22298:	cmp	r0, #0
   2229c:	beq	222bc <__mempcpy_chk@plt+0x10cdc>
   222a0:	movw	r1, #12826	; 0x321a
   222a4:	add	r0, sp, #7
   222a8:	movt	r1, #2
   222ac:	bl	112ec <strcmp@plt>
   222b0:	mov	r4, r0
   222b4:	cmp	r0, #0
   222b8:	movwne	r4, #1
   222bc:	mov	r0, r4
   222c0:	sub	sp, fp, #8
   222c4:	pop	{r4, sl, fp, pc}
   222c8:	push	{r4, r5, r6, r7, fp, lr}
   222cc:	add	fp, sp, #16
   222d0:	mov	r4, r1
   222d4:	mov	r1, #0
   222d8:	mov	r6, r2
   222dc:	bl	11550 <setlocale@plt>
   222e0:	cmp	r0, #0
   222e4:	beq	22310 <__mempcpy_chk@plt+0x10d30>
   222e8:	mov	r7, r0
   222ec:	bl	114c0 <strlen@plt>
   222f0:	cmp	r0, r6
   222f4:	bcs	22324 <__mempcpy_chk@plt+0x10d44>
   222f8:	add	r2, r0, #1
   222fc:	mov	r0, r4
   22300:	mov	r1, r7
   22304:	bl	1134c <memcpy@plt>
   22308:	mov	r5, #0
   2230c:	b	2234c <__mempcpy_chk@plt+0x10d6c>
   22310:	cmp	r6, #0
   22314:	mov	r5, #22
   22318:	movne	r0, #0
   2231c:	strbne	r0, [r4]
   22320:	b	2234c <__mempcpy_chk@plt+0x10d6c>
   22324:	mov	r5, #34	; 0x22
   22328:	cmp	r6, #0
   2232c:	beq	2234c <__mempcpy_chk@plt+0x10d6c>
   22330:	sub	r6, r6, #1
   22334:	mov	r0, r4
   22338:	mov	r1, r7
   2233c:	mov	r2, r6
   22340:	bl	1134c <memcpy@plt>
   22344:	mov	r0, #0
   22348:	strb	r0, [r4, r6]
   2234c:	mov	r0, r5
   22350:	pop	{r4, r5, r6, r7, fp, pc}
   22354:	mov	r1, #0
   22358:	b	11550 <setlocale@plt>
   2235c:	cmp	r3, #0
   22360:	cmpeq	r2, #0
   22364:	bne	22388 <__mempcpy_chk@plt+0x10da8>
   22368:	cmp	r1, #0
   2236c:	movlt	r1, #-2147483648	; 0x80000000
   22370:	movlt	r0, #0
   22374:	blt	22384 <__mempcpy_chk@plt+0x10da4>
   22378:	cmpeq	r0, #0
   2237c:	mvnne	r1, #-2147483648	; 0x80000000
   22380:	mvnne	r0, #0
   22384:	b	22430 <__mempcpy_chk@plt+0x10e50>
   22388:	sub	sp, sp, #8
   2238c:	push	{sp, lr}
   22390:	cmp	r1, #0
   22394:	blt	223b4 <__mempcpy_chk@plt+0x10dd4>
   22398:	cmp	r3, #0
   2239c:	blt	223e8 <__mempcpy_chk@plt+0x10e08>
   223a0:	bl	22440 <__mempcpy_chk@plt+0x10e60>
   223a4:	ldr	lr, [sp, #4]
   223a8:	add	sp, sp, #8
   223ac:	pop	{r2, r3}
   223b0:	bx	lr
   223b4:	rsbs	r0, r0, #0
   223b8:	sbc	r1, r1, r1, lsl #1
   223bc:	cmp	r3, #0
   223c0:	blt	2240c <__mempcpy_chk@plt+0x10e2c>
   223c4:	bl	22440 <__mempcpy_chk@plt+0x10e60>
   223c8:	ldr	lr, [sp, #4]
   223cc:	add	sp, sp, #8
   223d0:	pop	{r2, r3}
   223d4:	rsbs	r0, r0, #0
   223d8:	sbc	r1, r1, r1, lsl #1
   223dc:	rsbs	r2, r2, #0
   223e0:	sbc	r3, r3, r3, lsl #1
   223e4:	bx	lr
   223e8:	rsbs	r2, r2, #0
   223ec:	sbc	r3, r3, r3, lsl #1
   223f0:	bl	22440 <__mempcpy_chk@plt+0x10e60>
   223f4:	ldr	lr, [sp, #4]
   223f8:	add	sp, sp, #8
   223fc:	pop	{r2, r3}
   22400:	rsbs	r0, r0, #0
   22404:	sbc	r1, r1, r1, lsl #1
   22408:	bx	lr
   2240c:	rsbs	r2, r2, #0
   22410:	sbc	r3, r3, r3, lsl #1
   22414:	bl	22440 <__mempcpy_chk@plt+0x10e60>
   22418:	ldr	lr, [sp, #4]
   2241c:	add	sp, sp, #8
   22420:	pop	{r2, r3}
   22424:	rsbs	r2, r2, #0
   22428:	sbc	r3, r3, r3, lsl #1
   2242c:	bx	lr
   22430:	push	{r1, lr}
   22434:	mov	r0, #8
   22438:	bl	112c8 <raise@plt>
   2243c:	pop	{r1, pc}
   22440:	cmp	r1, r3
   22444:	cmpeq	r0, r2
   22448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2244c:	mov	r4, r0
   22450:	movcc	r0, #0
   22454:	mov	r5, r1
   22458:	ldr	lr, [sp, #36]	; 0x24
   2245c:	movcc	r1, r0
   22460:	bcc	2255c <__mempcpy_chk@plt+0x10f7c>
   22464:	cmp	r3, #0
   22468:	clzeq	ip, r2
   2246c:	clzne	ip, r3
   22470:	addeq	ip, ip, #32
   22474:	cmp	r5, #0
   22478:	clzeq	r1, r4
   2247c:	addeq	r1, r1, #32
   22480:	clzne	r1, r5
   22484:	sub	ip, ip, r1
   22488:	sub	sl, ip, #32
   2248c:	lsl	r9, r3, ip
   22490:	rsb	fp, ip, #32
   22494:	orr	r9, r9, r2, lsl sl
   22498:	orr	r9, r9, r2, lsr fp
   2249c:	lsl	r8, r2, ip
   224a0:	cmp	r5, r9
   224a4:	cmpeq	r4, r8
   224a8:	movcc	r0, #0
   224ac:	movcc	r1, r0
   224b0:	bcc	224cc <__mempcpy_chk@plt+0x10eec>
   224b4:	mov	r0, #1
   224b8:	subs	r4, r4, r8
   224bc:	lsl	r1, r0, sl
   224c0:	orr	r1, r1, r0, lsr fp
   224c4:	lsl	r0, r0, ip
   224c8:	sbc	r5, r5, r9
   224cc:	cmp	ip, #0
   224d0:	beq	2255c <__mempcpy_chk@plt+0x10f7c>
   224d4:	lsr	r6, r8, #1
   224d8:	orr	r6, r6, r9, lsl #31
   224dc:	lsr	r7, r9, #1
   224e0:	mov	r2, ip
   224e4:	b	22508 <__mempcpy_chk@plt+0x10f28>
   224e8:	subs	r3, r4, r6
   224ec:	sbc	r8, r5, r7
   224f0:	adds	r3, r3, r3
   224f4:	adc	r8, r8, r8
   224f8:	adds	r4, r3, #1
   224fc:	adc	r5, r8, #0
   22500:	subs	r2, r2, #1
   22504:	beq	22524 <__mempcpy_chk@plt+0x10f44>
   22508:	cmp	r5, r7
   2250c:	cmpeq	r4, r6
   22510:	bcs	224e8 <__mempcpy_chk@plt+0x10f08>
   22514:	adds	r4, r4, r4
   22518:	adc	r5, r5, r5
   2251c:	subs	r2, r2, #1
   22520:	bne	22508 <__mempcpy_chk@plt+0x10f28>
   22524:	lsr	r3, r4, ip
   22528:	orr	r3, r3, r5, lsl fp
   2252c:	lsr	r2, r5, ip
   22530:	orr	r3, r3, r5, lsr sl
   22534:	adds	r0, r0, r4
   22538:	mov	r4, r3
   2253c:	lsl	r3, r2, ip
   22540:	orr	r3, r3, r4, lsl sl
   22544:	lsl	ip, r4, ip
   22548:	orr	r3, r3, r4, lsr fp
   2254c:	adc	r1, r1, r5
   22550:	subs	r0, r0, ip
   22554:	mov	r5, r2
   22558:	sbc	r1, r1, r3
   2255c:	cmp	lr, #0
   22560:	strdne	r4, [lr]
   22564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22568:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2256c:	mov	r7, r0
   22570:	ldr	r6, [pc, #72]	; 225c0 <__mempcpy_chk@plt+0x10fe0>
   22574:	ldr	r5, [pc, #72]	; 225c4 <__mempcpy_chk@plt+0x10fe4>
   22578:	add	r6, pc, r6
   2257c:	add	r5, pc, r5
   22580:	sub	r6, r6, r5
   22584:	mov	r8, r1
   22588:	mov	r9, r2
   2258c:	bl	1126c <pthread_mutex_unlock@plt-0x20>
   22590:	asrs	r6, r6, #2
   22594:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   22598:	mov	r4, #0
   2259c:	add	r4, r4, #1
   225a0:	ldr	r3, [r5], #4
   225a4:	mov	r2, r9
   225a8:	mov	r1, r8
   225ac:	mov	r0, r7
   225b0:	blx	r3
   225b4:	cmp	r6, r4
   225b8:	bne	2259c <__mempcpy_chk@plt+0x10fbc>
   225bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   225c0:	andeq	r1, r1, ip, lsl #19
   225c4:	andeq	r1, r1, r4, lsl #19
   225c8:	bx	lr
   225cc:	ldr	r3, [pc, #12]	; 225e0 <__mempcpy_chk@plt+0x11000>
   225d0:	mov	r1, #0
   225d4:	add	r3, pc, r3
   225d8:	ldr	r2, [r3]
   225dc:	b	114e4 <__cxa_atexit@plt>
   225e0:	andeq	r1, r1, r8, asr fp

Disassembly of section .fini:

000225e4 <.fini>:
   225e4:	push	{r3, lr}
   225e8:	pop	{r3, pc}
