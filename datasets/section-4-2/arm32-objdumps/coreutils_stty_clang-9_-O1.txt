
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

000110c8 <.init>:
   110c8:	push	{r3, lr}
   110cc:	bl	1140c <tcgetattr@plt+0x48>
   110d0:	pop	{r3, pc}

Disassembly of section .plt:

000110d4 <calloc@plt-0x14>:
   110d4:	push	{lr}		; (str lr, [sp, #-4]!)
   110d8:	ldr	lr, [pc, #4]	; 110e4 <calloc@plt-0x4>
   110dc:	add	lr, pc, lr
   110e0:	ldr	pc, [lr, #8]!
   110e4:	andeq	sl, r1, ip, lsl pc

000110e8 <calloc@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #106496	; 0x1a000
   110f0:	ldr	pc, [ip, #3868]!	; 0xf1c

000110f4 <fputs_unlocked@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #106496	; 0x1a000
   110fc:	ldr	pc, [ip, #3860]!	; 0xf14

00011100 <raise@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #106496	; 0x1a000
   11108:	ldr	pc, [ip, #3852]!	; 0xf0c

0001110c <strcmp@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #106496	; 0x1a000
   11114:	ldr	pc, [ip, #3844]!	; 0xf04

00011118 <strtol@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #106496	; 0x1a000
   11120:	ldr	pc, [ip, #3836]!	; 0xefc

00011124 <fflush@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #106496	; 0x1a000
   1112c:	ldr	pc, [ip, #3828]!	; 0xef4

00011130 <free@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #106496	; 0x1a000
   11138:	ldr	pc, [ip, #3820]!	; 0xeec

0001113c <_exit@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #106496	; 0x1a000
   11144:	ldr	pc, [ip, #3812]!	; 0xee4

00011148 <memcpy@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #106496	; 0x1a000
   11150:	ldr	pc, [ip, #3804]!	; 0xedc

00011154 <mbsinit@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #106496	; 0x1a000
   1115c:	ldr	pc, [ip, #3796]!	; 0xed4

00011160 <dcgettext@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #106496	; 0x1a000
   11168:	ldr	pc, [ip, #3788]!	; 0xecc

0001116c <cfgetispeed@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #106496	; 0x1a000
   11174:	ldr	pc, [ip, #3780]!	; 0xec4

00011178 <dup2@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #106496	; 0x1a000
   11180:	ldr	pc, [ip, #3772]!	; 0xebc

00011184 <realloc@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #106496	; 0x1a000
   1118c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011190 <textdomain@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #106496	; 0x1a000
   11198:	ldr	pc, [ip, #3756]!	; 0xeac

0001119c <iswprint@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #106496	; 0x1a000
   111a4:	ldr	pc, [ip, #3748]!	; 0xea4

000111a8 <cfsetospeed@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #106496	; 0x1a000
   111b0:	ldr	pc, [ip, #3740]!	; 0xe9c

000111b4 <fwrite@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #106496	; 0x1a000
   111bc:	ldr	pc, [ip, #3732]!	; 0xe94

000111c0 <ioctl@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #106496	; 0x1a000
   111c8:	ldr	pc, [ip, #3724]!	; 0xe8c

000111cc <lseek64@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #106496	; 0x1a000
   111d4:	ldr	pc, [ip, #3716]!	; 0xe84

000111d8 <__ctype_get_mb_cur_max@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #106496	; 0x1a000
   111e0:	ldr	pc, [ip, #3708]!	; 0xe7c

000111e4 <tcsetattr@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #106496	; 0x1a000
   111ec:	ldr	pc, [ip, #3700]!	; 0xe74

000111f0 <__fpending@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #106496	; 0x1a000
   111f8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111fc <ferror_unlocked@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #106496	; 0x1a000
   11204:	ldr	pc, [ip, #3684]!	; 0xe64

00011208 <mbrtowc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #106496	; 0x1a000
   11210:	ldr	pc, [ip, #3676]!	; 0xe5c

00011214 <error@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #106496	; 0x1a000
   1121c:	ldr	pc, [ip, #3668]!	; 0xe54

00011220 <open64@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #106496	; 0x1a000
   11228:	ldr	pc, [ip, #3660]!	; 0xe4c

0001122c <getenv@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #106496	; 0x1a000
   11234:	ldr	pc, [ip, #3652]!	; 0xe44

00011238 <malloc@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #106496	; 0x1a000
   11240:	ldr	pc, [ip, #3644]!	; 0xe3c

00011244 <__libc_start_main@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #106496	; 0x1a000
   1124c:	ldr	pc, [ip, #3636]!	; 0xe34

00011250 <__freading@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #106496	; 0x1a000
   11258:	ldr	pc, [ip, #3628]!	; 0xe2c

0001125c <__gmon_start__@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #106496	; 0x1a000
   11264:	ldr	pc, [ip, #3620]!	; 0xe24

00011268 <getopt_long@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #106496	; 0x1a000
   11270:	ldr	pc, [ip, #3612]!	; 0xe1c

00011274 <__ctype_b_loc@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #106496	; 0x1a000
   1127c:	ldr	pc, [ip, #3604]!	; 0xe14

00011280 <exit@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #106496	; 0x1a000
   11288:	ldr	pc, [ip, #3596]!	; 0xe0c

0001128c <bcmp@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #106496	; 0x1a000
   11294:	ldr	pc, [ip, #3588]!	; 0xe04

00011298 <strtoul@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #106496	; 0x1a000
   112a0:	ldr	pc, [ip, #3580]!	; 0xdfc

000112a4 <strlen@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #106496	; 0x1a000
   112ac:	ldr	pc, [ip, #3572]!	; 0xdf4

000112b0 <strchr@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #106496	; 0x1a000
   112b8:	ldr	pc, [ip, #3564]!	; 0xdec

000112bc <cfsetispeed@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #106496	; 0x1a000
   112c4:	ldr	pc, [ip, #3556]!	; 0xde4

000112c8 <cfgetospeed@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #106496	; 0x1a000
   112d0:	ldr	pc, [ip, #3548]!	; 0xddc

000112d4 <__errno_location@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #106496	; 0x1a000
   112dc:	ldr	pc, [ip, #3540]!	; 0xdd4

000112e0 <__cxa_atexit@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #106496	; 0x1a000
   112e8:	ldr	pc, [ip, #3532]!	; 0xdcc

000112ec <__vasprintf_chk@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #106496	; 0x1a000
   112f4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112f8 <memset@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #106496	; 0x1a000
   11300:	ldr	pc, [ip, #3516]!	; 0xdbc

00011304 <__printf_chk@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #106496	; 0x1a000
   1130c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011310 <fileno@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #106496	; 0x1a000
   11318:	ldr	pc, [ip, #3500]!	; 0xdac

0001131c <strtoumax@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #106496	; 0x1a000
   11324:	ldr	pc, [ip, #3492]!	; 0xda4

00011328 <__fprintf_chk@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #106496	; 0x1a000
   11330:	ldr	pc, [ip, #3484]!	; 0xd9c

00011334 <fclose@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #106496	; 0x1a000
   1133c:	ldr	pc, [ip, #3476]!	; 0xd94

00011340 <fseeko64@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #106496	; 0x1a000
   11348:	ldr	pc, [ip, #3468]!	; 0xd8c

0001134c <fcntl64@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #106496	; 0x1a000
   11354:	ldr	pc, [ip, #3460]!	; 0xd84

00011358 <setlocale@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #106496	; 0x1a000
   11360:	ldr	pc, [ip, #3452]!	; 0xd7c

00011364 <strrchr@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #106496	; 0x1a000
   1136c:	ldr	pc, [ip, #3444]!	; 0xd74

00011370 <nl_langinfo@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #106496	; 0x1a000
   11378:	ldr	pc, [ip, #3436]!	; 0xd6c

0001137c <bindtextdomain@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #106496	; 0x1a000
   11384:	ldr	pc, [ip, #3428]!	; 0xd64

00011388 <strncmp@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #106496	; 0x1a000
   11390:	ldr	pc, [ip, #3420]!	; 0xd5c

00011394 <abort@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #106496	; 0x1a000
   1139c:	ldr	pc, [ip, #3412]!	; 0xd54

000113a0 <close@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #106496	; 0x1a000
   113a8:	ldr	pc, [ip, #3404]!	; 0xd4c

000113ac <putchar_unlocked@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #106496	; 0x1a000
   113b4:	ldr	pc, [ip, #3396]!	; 0xd44

000113b8 <__assert_fail@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #106496	; 0x1a000
   113c0:	ldr	pc, [ip, #3388]!	; 0xd3c

000113c4 <tcgetattr@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #106496	; 0x1a000
   113cc:	ldr	pc, [ip, #3380]!	; 0xd34

Disassembly of section .text:

000113d0 <.text>:
   113d0:	mov	fp, #0
   113d4:	mov	lr, #0
   113d8:	pop	{r1}		; (ldr r1, [sp], #4)
   113dc:	mov	r2, sp
   113e0:	push	{r2}		; (str r2, [sp, #-4]!)
   113e4:	push	{r0}		; (str r0, [sp, #-4]!)
   113e8:	ldr	ip, [pc, #16]	; 11400 <tcgetattr@plt+0x3c>
   113ec:	push	{ip}		; (str ip, [sp, #-4]!)
   113f0:	ldr	r0, [pc, #12]	; 11404 <tcgetattr@plt+0x40>
   113f4:	ldr	r3, [pc, #12]	; 11408 <tcgetattr@plt+0x44>
   113f8:	bl	11244 <__libc_start_main@plt>
   113fc:	bl	11394 <abort@plt>
   11400:	strdeq	r7, [r1], -r8
   11404:	strheq	r2, [r1], -r8
   11408:	muleq	r1, r8, fp
   1140c:	ldr	r3, [pc, #20]	; 11428 <tcgetattr@plt+0x64>
   11410:	ldr	r2, [pc, #20]	; 1142c <tcgetattr@plt+0x68>
   11414:	add	r3, pc, r3
   11418:	ldr	r2, [r3, r2]
   1141c:	cmp	r2, #0
   11420:	bxeq	lr
   11424:	b	1125c <__gmon_start__@plt>
   11428:	andeq	sl, r1, r4, ror #23
   1142c:	andeq	r0, r0, r4, lsl #2
   11430:	ldr	r0, [pc, #24]	; 11450 <tcgetattr@plt+0x8c>
   11434:	ldr	r3, [pc, #24]	; 11454 <tcgetattr@plt+0x90>
   11438:	cmp	r3, r0
   1143c:	bxeq	lr
   11440:	ldr	r3, [pc, #16]	; 11458 <tcgetattr@plt+0x94>
   11444:	cmp	r3, #0
   11448:	bxeq	lr
   1144c:	bx	r3
   11450:	andeq	ip, r2, r0, ror #2
   11454:	andeq	ip, r2, r0, ror #2
   11458:	andeq	r0, r0, r0
   1145c:	ldr	r0, [pc, #36]	; 11488 <tcgetattr@plt+0xc4>
   11460:	ldr	r1, [pc, #36]	; 1148c <tcgetattr@plt+0xc8>
   11464:	sub	r1, r1, r0
   11468:	asr	r1, r1, #2
   1146c:	add	r1, r1, r1, lsr #31
   11470:	asrs	r1, r1, #1
   11474:	bxeq	lr
   11478:	ldr	r3, [pc, #16]	; 11490 <tcgetattr@plt+0xcc>
   1147c:	cmp	r3, #0
   11480:	bxeq	lr
   11484:	bx	r3
   11488:	andeq	ip, r2, r0, ror #2
   1148c:	andeq	ip, r2, r0, ror #2
   11490:	andeq	r0, r0, r0
   11494:	push	{r4, lr}
   11498:	ldr	r4, [pc, #24]	; 114b8 <tcgetattr@plt+0xf4>
   1149c:	ldrb	r3, [r4]
   114a0:	cmp	r3, #0
   114a4:	popne	{r4, pc}
   114a8:	bl	11430 <tcgetattr@plt+0x6c>
   114ac:	mov	r3, #1
   114b0:	strb	r3, [r4]
   114b4:	pop	{r4, pc}
   114b8:	andeq	ip, r2, r4, lsl #3
   114bc:	b	1145c <tcgetattr@plt+0x98>
   114c0:	push	{fp, lr}
   114c4:	mov	fp, sp
   114c8:	sub	sp, sp, #8
   114cc:	mov	r4, r0
   114d0:	cmp	r0, #0
   114d4:	bne	11ebc <tcgetattr@plt+0xaf8>
   114d8:	movw	r1, #31819	; 0x7c4b
   114dc:	movt	r1, #1
   114e0:	mov	r0, #0
   114e4:	mov	r2, #5
   114e8:	bl	11160 <dcgettext@plt>
   114ec:	mov	r1, r0
   114f0:	movw	r0, #49756	; 0xc25c
   114f4:	movt	r0, #2
   114f8:	ldr	r2, [r0]
   114fc:	str	r2, [sp]
   11500:	mov	r0, #1
   11504:	mov	r3, r2
   11508:	bl	11304 <__printf_chk@plt>
   1150c:	movw	r1, #31970	; 0x7ce2
   11510:	movt	r1, #1
   11514:	mov	r0, #0
   11518:	mov	r2, #5
   1151c:	bl	11160 <dcgettext@plt>
   11520:	movw	r6, #49524	; 0xc174
   11524:	movt	r6, #2
   11528:	ldr	r1, [r6]
   1152c:	bl	110f4 <fputs_unlocked@plt>
   11530:	bl	11f00 <tcgetattr@plt+0xb3c>
   11534:	movw	r1, #32013	; 0x7d0d
   11538:	movt	r1, #1
   1153c:	mov	r0, #0
   11540:	mov	r2, #5
   11544:	bl	11160 <dcgettext@plt>
   11548:	ldr	r1, [r6]
   1154c:	bl	110f4 <fputs_unlocked@plt>
   11550:	movw	r1, #32229	; 0x7de5
   11554:	movt	r1, #1
   11558:	mov	r0, #0
   1155c:	mov	r2, #5
   11560:	bl	11160 <dcgettext@plt>
   11564:	ldr	r1, [r6]
   11568:	bl	110f4 <fputs_unlocked@plt>
   1156c:	movw	r1, #32274	; 0x7e12
   11570:	movt	r1, #1
   11574:	mov	r0, #0
   11578:	mov	r2, #5
   1157c:	bl	11160 <dcgettext@plt>
   11580:	ldr	r1, [r6]
   11584:	bl	110f4 <fputs_unlocked@plt>
   11588:	movw	r1, #32328	; 0x7e48
   1158c:	movt	r1, #1
   11590:	mov	r0, #0
   11594:	mov	r2, #5
   11598:	bl	11160 <dcgettext@plt>
   1159c:	ldr	r1, [r6]
   115a0:	bl	110f4 <fputs_unlocked@plt>
   115a4:	movw	r1, #32469	; 0x7ed5
   115a8:	movt	r1, #1
   115ac:	mov	r0, #0
   115b0:	mov	r2, #5
   115b4:	bl	11160 <dcgettext@plt>
   115b8:	ldr	r1, [r6]
   115bc:	bl	110f4 <fputs_unlocked@plt>
   115c0:	movw	r1, #32491	; 0x7eeb
   115c4:	movt	r1, #1
   115c8:	mov	r0, #0
   115cc:	mov	r2, #5
   115d0:	bl	11160 <dcgettext@plt>
   115d4:	ldr	r1, [r6]
   115d8:	bl	110f4 <fputs_unlocked@plt>
   115dc:	movw	r1, #32547	; 0x7f23
   115e0:	movt	r1, #1
   115e4:	mov	r0, #0
   115e8:	mov	r2, #5
   115ec:	bl	11160 <dcgettext@plt>
   115f0:	ldr	r1, [r6]
   115f4:	bl	110f4 <fputs_unlocked@plt>
   115f8:	movw	r1, #32657	; 0x7f91
   115fc:	movt	r1, #1
   11600:	mov	r0, #0
   11604:	mov	r2, #5
   11608:	bl	11160 <dcgettext@plt>
   1160c:	ldr	r1, [r6]
   11610:	bl	110f4 <fputs_unlocked@plt>
   11614:	movw	r1, #32710	; 0x7fc6
   11618:	movt	r1, #1
   1161c:	mov	r0, #0
   11620:	mov	r2, #5
   11624:	bl	11160 <dcgettext@plt>
   11628:	ldr	r1, [r6]
   1162c:	bl	110f4 <fputs_unlocked@plt>
   11630:	movw	r1, #32871	; 0x8067
   11634:	movt	r1, #1
   11638:	mov	r0, #0
   1163c:	mov	r2, #5
   11640:	bl	11160 <dcgettext@plt>
   11644:	ldr	r1, [r6]
   11648:	bl	110f4 <fputs_unlocked@plt>
   1164c:	movw	r1, #32931	; 0x80a3
   11650:	movt	r1, #1
   11654:	mov	r0, #0
   11658:	mov	r2, #5
   1165c:	bl	11160 <dcgettext@plt>
   11660:	ldr	r1, [r6]
   11664:	bl	110f4 <fputs_unlocked@plt>
   11668:	movw	r1, #32978	; 0x80d2
   1166c:	movt	r1, #1
   11670:	mov	r0, #0
   11674:	mov	r2, #5
   11678:	bl	11160 <dcgettext@plt>
   1167c:	ldr	r1, [r6]
   11680:	bl	110f4 <fputs_unlocked@plt>
   11684:	movw	r1, #33030	; 0x8106
   11688:	movt	r1, #1
   1168c:	mov	r0, #0
   11690:	mov	r2, #5
   11694:	bl	11160 <dcgettext@plt>
   11698:	ldr	r1, [r6]
   1169c:	bl	110f4 <fputs_unlocked@plt>
   116a0:	movw	r1, #33193	; 0x81a9
   116a4:	movt	r1, #1
   116a8:	mov	r0, #0
   116ac:	mov	r2, #5
   116b0:	bl	11160 <dcgettext@plt>
   116b4:	ldr	r1, [r6]
   116b8:	bl	110f4 <fputs_unlocked@plt>
   116bc:	movw	r1, #33255	; 0x81e7
   116c0:	movt	r1, #1
   116c4:	mov	r0, #0
   116c8:	mov	r2, #5
   116cc:	bl	11160 <dcgettext@plt>
   116d0:	ldr	r1, [r6]
   116d4:	bl	110f4 <fputs_unlocked@plt>
   116d8:	movw	r1, #33309	; 0x821d
   116dc:	movt	r1, #1
   116e0:	mov	r0, #0
   116e4:	mov	r2, #5
   116e8:	bl	11160 <dcgettext@plt>
   116ec:	ldr	r1, [r6]
   116f0:	bl	110f4 <fputs_unlocked@plt>
   116f4:	movw	r1, #33389	; 0x826d
   116f8:	movt	r1, #1
   116fc:	mov	r0, #0
   11700:	mov	r2, #5
   11704:	bl	11160 <dcgettext@plt>
   11708:	ldr	r1, [r6]
   1170c:	bl	110f4 <fputs_unlocked@plt>
   11710:	movw	r1, #33487	; 0x82cf
   11714:	movt	r1, #1
   11718:	mov	r0, #0
   1171c:	mov	r2, #5
   11720:	bl	11160 <dcgettext@plt>
   11724:	mov	r5, r0
   11728:	movw	r0, #49424	; 0xc110
   1172c:	movt	r0, #2
   11730:	ldr	r0, [r0]
   11734:	movw	r2, #40393	; 0x9dc9
   11738:	movt	r2, #1
   1173c:	movw	r1, #40649	; 0x9ec9
   11740:	movt	r1, #1
   11744:	cmp	r0, #1
   11748:	moveq	r1, r2
   1174c:	mov	r0, #0
   11750:	mov	r2, #5
   11754:	bl	11160 <dcgettext@plt>
   11758:	mov	r2, r0
   1175c:	mov	r0, #1
   11760:	mov	r1, r5
   11764:	bl	11304 <__printf_chk@plt>
   11768:	movw	r1, #33568	; 0x8320
   1176c:	movt	r1, #1
   11770:	mov	r0, #0
   11774:	mov	r2, #5
   11778:	bl	11160 <dcgettext@plt>
   1177c:	ldr	r1, [r6]
   11780:	bl	110f4 <fputs_unlocked@plt>
   11784:	movw	r1, #33611	; 0x834b
   11788:	movt	r1, #1
   1178c:	mov	r0, #0
   11790:	mov	r2, #5
   11794:	bl	11160 <dcgettext@plt>
   11798:	ldr	r1, [r6]
   1179c:	bl	110f4 <fputs_unlocked@plt>
   117a0:	movw	r1, #33651	; 0x8373
   117a4:	movt	r1, #1
   117a8:	mov	r0, #0
   117ac:	mov	r2, #5
   117b0:	bl	11160 <dcgettext@plt>
   117b4:	ldr	r1, [r6]
   117b8:	bl	110f4 <fputs_unlocked@plt>
   117bc:	movw	r1, #33772	; 0x83ec
   117c0:	movt	r1, #1
   117c4:	mov	r0, #0
   117c8:	mov	r2, #5
   117cc:	bl	11160 <dcgettext@plt>
   117d0:	ldr	r1, [r6]
   117d4:	bl	110f4 <fputs_unlocked@plt>
   117d8:	movw	r1, #33913	; 0x8479
   117dc:	movt	r1, #1
   117e0:	mov	r0, #0
   117e4:	mov	r2, #5
   117e8:	bl	11160 <dcgettext@plt>
   117ec:	ldr	r1, [r6]
   117f0:	bl	110f4 <fputs_unlocked@plt>
   117f4:	movw	r1, #34028	; 0x84ec
   117f8:	movt	r1, #1
   117fc:	mov	r0, #0
   11800:	mov	r2, #5
   11804:	bl	11160 <dcgettext@plt>
   11808:	ldr	r1, [r6]
   1180c:	bl	110f4 <fputs_unlocked@plt>
   11810:	movw	r1, #34139	; 0x855b
   11814:	movt	r1, #1
   11818:	mov	r0, #0
   1181c:	mov	r2, #5
   11820:	bl	11160 <dcgettext@plt>
   11824:	ldr	r1, [r6]
   11828:	bl	110f4 <fputs_unlocked@plt>
   1182c:	movw	r1, #34184	; 0x8588
   11830:	movt	r1, #1
   11834:	mov	r0, #0
   11838:	mov	r2, #5
   1183c:	bl	11160 <dcgettext@plt>
   11840:	ldr	r1, [r6]
   11844:	bl	110f4 <fputs_unlocked@plt>
   11848:	movw	r1, #34244	; 0x85c4
   1184c:	movt	r1, #1
   11850:	mov	r0, #0
   11854:	mov	r2, #5
   11858:	bl	11160 <dcgettext@plt>
   1185c:	ldr	r1, [r6]
   11860:	bl	110f4 <fputs_unlocked@plt>
   11864:	movw	r1, #34552	; 0x86f8
   11868:	movt	r1, #1
   1186c:	mov	r0, #0
   11870:	mov	r2, #5
   11874:	bl	11160 <dcgettext@plt>
   11878:	ldr	r1, [r6]
   1187c:	bl	110f4 <fputs_unlocked@plt>
   11880:	movw	r1, #34602	; 0x872a
   11884:	movt	r1, #1
   11888:	mov	r0, #0
   1188c:	mov	r2, #5
   11890:	bl	11160 <dcgettext@plt>
   11894:	ldr	r1, [r6]
   11898:	bl	110f4 <fputs_unlocked@plt>
   1189c:	movw	r1, #34859	; 0x882b
   118a0:	movt	r1, #1
   118a4:	mov	r0, #0
   118a8:	mov	r2, #5
   118ac:	bl	11160 <dcgettext@plt>
   118b0:	ldr	r1, [r6]
   118b4:	bl	110f4 <fputs_unlocked@plt>
   118b8:	movw	r1, #34934	; 0x8876
   118bc:	movt	r1, #1
   118c0:	mov	r0, #0
   118c4:	mov	r2, #5
   118c8:	bl	11160 <dcgettext@plt>
   118cc:	ldr	r1, [r6]
   118d0:	bl	110f4 <fputs_unlocked@plt>
   118d4:	movw	r1, #35093	; 0x8915
   118d8:	movt	r1, #1
   118dc:	mov	r0, #0
   118e0:	mov	r2, #5
   118e4:	bl	11160 <dcgettext@plt>
   118e8:	ldr	r1, [r6]
   118ec:	bl	110f4 <fputs_unlocked@plt>
   118f0:	movw	r1, #35153	; 0x8951
   118f4:	movt	r1, #1
   118f8:	mov	r0, #0
   118fc:	mov	r2, #5
   11900:	bl	11160 <dcgettext@plt>
   11904:	ldr	r1, [r6]
   11908:	bl	110f4 <fputs_unlocked@plt>
   1190c:	movw	r1, #35215	; 0x898f
   11910:	movt	r1, #1
   11914:	mov	r0, #0
   11918:	mov	r2, #5
   1191c:	bl	11160 <dcgettext@plt>
   11920:	ldr	r1, [r6]
   11924:	bl	110f4 <fputs_unlocked@plt>
   11928:	movw	r1, #35292	; 0x89dc
   1192c:	movt	r1, #1
   11930:	mov	r0, #0
   11934:	mov	r2, #5
   11938:	bl	11160 <dcgettext@plt>
   1193c:	ldr	r1, [r6]
   11940:	bl	110f4 <fputs_unlocked@plt>
   11944:	movw	r1, #35500	; 0x8aac
   11948:	movt	r1, #1
   1194c:	mov	r0, #0
   11950:	mov	r2, #5
   11954:	bl	11160 <dcgettext@plt>
   11958:	ldr	r1, [r6]
   1195c:	bl	110f4 <fputs_unlocked@plt>
   11960:	movw	r1, #35519	; 0x8abf
   11964:	movt	r1, #1
   11968:	mov	r0, #0
   1196c:	mov	r2, #5
   11970:	bl	11160 <dcgettext@plt>
   11974:	ldr	r1, [r6]
   11978:	bl	110f4 <fputs_unlocked@plt>
   1197c:	movw	r1, #35572	; 0x8af4
   11980:	movt	r1, #1
   11984:	mov	r0, #0
   11988:	mov	r2, #5
   1198c:	bl	11160 <dcgettext@plt>
   11990:	ldr	r1, [r6]
   11994:	bl	110f4 <fputs_unlocked@plt>
   11998:	movw	r1, #35631	; 0x8b2f
   1199c:	movt	r1, #1
   119a0:	mov	r0, #0
   119a4:	mov	r2, #5
   119a8:	bl	11160 <dcgettext@plt>
   119ac:	ldr	r1, [r6]
   119b0:	bl	110f4 <fputs_unlocked@plt>
   119b4:	movw	r1, #35684	; 0x8b64
   119b8:	movt	r1, #1
   119bc:	mov	r0, #0
   119c0:	mov	r2, #5
   119c4:	bl	11160 <dcgettext@plt>
   119c8:	ldr	r1, [r6]
   119cc:	bl	110f4 <fputs_unlocked@plt>
   119d0:	movw	r1, #35735	; 0x8b97
   119d4:	movt	r1, #1
   119d8:	mov	r0, #0
   119dc:	mov	r2, #5
   119e0:	bl	11160 <dcgettext@plt>
   119e4:	ldr	r1, [r6]
   119e8:	bl	110f4 <fputs_unlocked@plt>
   119ec:	movw	r1, #35790	; 0x8bce
   119f0:	movt	r1, #1
   119f4:	mov	r0, #0
   119f8:	mov	r2, #5
   119fc:	bl	11160 <dcgettext@plt>
   11a00:	ldr	r1, [r6]
   11a04:	bl	110f4 <fputs_unlocked@plt>
   11a08:	movw	r1, #35865	; 0x8c19
   11a0c:	movt	r1, #1
   11a10:	mov	r0, #0
   11a14:	mov	r2, #5
   11a18:	bl	11160 <dcgettext@plt>
   11a1c:	ldr	r1, [r6]
   11a20:	bl	110f4 <fputs_unlocked@plt>
   11a24:	movw	r1, #35942	; 0x8c66
   11a28:	movt	r1, #1
   11a2c:	mov	r0, #0
   11a30:	mov	r2, #5
   11a34:	bl	11160 <dcgettext@plt>
   11a38:	ldr	r1, [r6]
   11a3c:	bl	110f4 <fputs_unlocked@plt>
   11a40:	movw	r1, #36004	; 0x8ca4
   11a44:	movt	r1, #1
   11a48:	mov	r0, #0
   11a4c:	mov	r2, #5
   11a50:	bl	11160 <dcgettext@plt>
   11a54:	ldr	r1, [r6]
   11a58:	bl	110f4 <fputs_unlocked@plt>
   11a5c:	movw	r1, #36067	; 0x8ce3
   11a60:	movt	r1, #1
   11a64:	mov	r0, #0
   11a68:	mov	r2, #5
   11a6c:	bl	11160 <dcgettext@plt>
   11a70:	ldr	r1, [r6]
   11a74:	bl	110f4 <fputs_unlocked@plt>
   11a78:	movw	r1, #36120	; 0x8d18
   11a7c:	movt	r1, #1
   11a80:	mov	r0, #0
   11a84:	mov	r2, #5
   11a88:	bl	11160 <dcgettext@plt>
   11a8c:	ldr	r1, [r6]
   11a90:	bl	110f4 <fputs_unlocked@plt>
   11a94:	movw	r1, #36188	; 0x8d5c
   11a98:	movt	r1, #1
   11a9c:	mov	r0, #0
   11aa0:	mov	r2, #5
   11aa4:	bl	11160 <dcgettext@plt>
   11aa8:	ldr	r1, [r6]
   11aac:	bl	110f4 <fputs_unlocked@plt>
   11ab0:	movw	r1, #36225	; 0x8d81
   11ab4:	movt	r1, #1
   11ab8:	mov	r0, #0
   11abc:	mov	r2, #5
   11ac0:	bl	11160 <dcgettext@plt>
   11ac4:	ldr	r1, [r6]
   11ac8:	bl	110f4 <fputs_unlocked@plt>
   11acc:	movw	r1, #36343	; 0x8df7
   11ad0:	movt	r1, #1
   11ad4:	mov	r0, #0
   11ad8:	mov	r2, #5
   11adc:	bl	11160 <dcgettext@plt>
   11ae0:	ldr	r1, [r6]
   11ae4:	bl	110f4 <fputs_unlocked@plt>
   11ae8:	movw	r1, #36399	; 0x8e2f
   11aec:	movt	r1, #1
   11af0:	mov	r0, #0
   11af4:	mov	r2, #5
   11af8:	bl	11160 <dcgettext@plt>
   11afc:	ldr	r1, [r6]
   11b00:	bl	110f4 <fputs_unlocked@plt>
   11b04:	movw	r1, #36485	; 0x8e85
   11b08:	movt	r1, #1
   11b0c:	mov	r0, #0
   11b10:	mov	r2, #5
   11b14:	bl	11160 <dcgettext@plt>
   11b18:	ldr	r1, [r6]
   11b1c:	bl	110f4 <fputs_unlocked@plt>
   11b20:	movw	r1, #36632	; 0x8f18
   11b24:	movt	r1, #1
   11b28:	mov	r0, #0
   11b2c:	mov	r2, #5
   11b30:	bl	11160 <dcgettext@plt>
   11b34:	ldr	r1, [r6]
   11b38:	bl	110f4 <fputs_unlocked@plt>
   11b3c:	movw	r1, #36697	; 0x8f59
   11b40:	movt	r1, #1
   11b44:	mov	r0, #0
   11b48:	mov	r2, #5
   11b4c:	bl	11160 <dcgettext@plt>
   11b50:	ldr	r1, [r6]
   11b54:	bl	110f4 <fputs_unlocked@plt>
   11b58:	movw	r1, #36737	; 0x8f81
   11b5c:	movt	r1, #1
   11b60:	mov	r0, #0
   11b64:	mov	r2, #5
   11b68:	bl	11160 <dcgettext@plt>
   11b6c:	ldr	r1, [r6]
   11b70:	bl	110f4 <fputs_unlocked@plt>
   11b74:	movw	r1, #36774	; 0x8fa6
   11b78:	movt	r1, #1
   11b7c:	mov	r0, #0
   11b80:	mov	r2, #5
   11b84:	bl	11160 <dcgettext@plt>
   11b88:	ldr	r1, [r6]
   11b8c:	bl	110f4 <fputs_unlocked@plt>
   11b90:	movw	r1, #36867	; 0x9003
   11b94:	movt	r1, #1
   11b98:	mov	r0, #0
   11b9c:	mov	r2, #5
   11ba0:	bl	11160 <dcgettext@plt>
   11ba4:	ldr	r1, [r6]
   11ba8:	bl	110f4 <fputs_unlocked@plt>
   11bac:	movw	r1, #36904	; 0x9028
   11bb0:	movt	r1, #1
   11bb4:	mov	r0, #0
   11bb8:	mov	r2, #5
   11bbc:	bl	11160 <dcgettext@plt>
   11bc0:	ldr	r1, [r6]
   11bc4:	bl	110f4 <fputs_unlocked@plt>
   11bc8:	movw	r1, #36972	; 0x906c
   11bcc:	movt	r1, #1
   11bd0:	mov	r0, #0
   11bd4:	mov	r2, #5
   11bd8:	bl	11160 <dcgettext@plt>
   11bdc:	ldr	r1, [r6]
   11be0:	bl	110f4 <fputs_unlocked@plt>
   11be4:	movw	r1, #37043	; 0x90b3
   11be8:	movt	r1, #1
   11bec:	mov	r0, #0
   11bf0:	mov	r2, #5
   11bf4:	bl	11160 <dcgettext@plt>
   11bf8:	ldr	r1, [r6]
   11bfc:	bl	110f4 <fputs_unlocked@plt>
   11c00:	movw	r1, #37111	; 0x90f7
   11c04:	movt	r1, #1
   11c08:	mov	r0, #0
   11c0c:	mov	r2, #5
   11c10:	bl	11160 <dcgettext@plt>
   11c14:	ldr	r1, [r6]
   11c18:	bl	110f4 <fputs_unlocked@plt>
   11c1c:	movw	r1, #37144	; 0x9118
   11c20:	movt	r1, #1
   11c24:	mov	r0, #0
   11c28:	mov	r2, #5
   11c2c:	bl	11160 <dcgettext@plt>
   11c30:	mov	r1, r0
   11c34:	movw	r2, #37245	; 0x917d
   11c38:	movt	r2, #1
   11c3c:	mov	r0, #1
   11c40:	bl	11304 <__printf_chk@plt>
   11c44:	movw	r1, #37272	; 0x9198
   11c48:	movt	r1, #1
   11c4c:	mov	r0, #0
   11c50:	mov	r2, #5
   11c54:	bl	11160 <dcgettext@plt>
   11c58:	ldr	r1, [r6]
   11c5c:	bl	110f4 <fputs_unlocked@plt>
   11c60:	movw	r1, #37423	; 0x922f
   11c64:	movt	r1, #1
   11c68:	mov	r0, #0
   11c6c:	mov	r2, #5
   11c70:	bl	11160 <dcgettext@plt>
   11c74:	ldr	r1, [r6]
   11c78:	bl	110f4 <fputs_unlocked@plt>
   11c7c:	movw	r1, #37460	; 0x9254
   11c80:	movt	r1, #1
   11c84:	mov	r0, #0
   11c88:	mov	r2, #5
   11c8c:	bl	11160 <dcgettext@plt>
   11c90:	ldr	r1, [r6]
   11c94:	bl	110f4 <fputs_unlocked@plt>
   11c98:	movw	r1, #37533	; 0x929d
   11c9c:	movt	r1, #1
   11ca0:	mov	r0, #0
   11ca4:	mov	r2, #5
   11ca8:	bl	11160 <dcgettext@plt>
   11cac:	ldr	r1, [r6]
   11cb0:	bl	110f4 <fputs_unlocked@plt>
   11cb4:	movw	r1, #37605	; 0x92e5
   11cb8:	movt	r1, #1
   11cbc:	mov	r0, #0
   11cc0:	mov	r2, #5
   11cc4:	bl	11160 <dcgettext@plt>
   11cc8:	ldr	r1, [r6]
   11ccc:	bl	110f4 <fputs_unlocked@plt>
   11cd0:	movw	r1, #37629	; 0x92fd
   11cd4:	movt	r1, #1
   11cd8:	mov	r0, #0
   11cdc:	mov	r2, #5
   11ce0:	bl	11160 <dcgettext@plt>
   11ce4:	ldr	r1, [r6]
   11ce8:	bl	110f4 <fputs_unlocked@plt>
   11cec:	movw	r1, #37664	; 0x9320
   11cf0:	movt	r1, #1
   11cf4:	mov	r0, #0
   11cf8:	mov	r2, #5
   11cfc:	bl	11160 <dcgettext@plt>
   11d00:	ldr	r1, [r6]
   11d04:	bl	110f4 <fputs_unlocked@plt>
   11d08:	movw	r1, #37730	; 0x9362
   11d0c:	movt	r1, #1
   11d10:	mov	r0, #0
   11d14:	mov	r2, #5
   11d18:	bl	11160 <dcgettext@plt>
   11d1c:	ldr	r1, [r6]
   11d20:	bl	110f4 <fputs_unlocked@plt>
   11d24:	movw	r1, #37900	; 0x940c
   11d28:	movt	r1, #1
   11d2c:	mov	r0, #0
   11d30:	mov	r2, #5
   11d34:	bl	11160 <dcgettext@plt>
   11d38:	mov	r1, r0
   11d3c:	movw	r2, #37929	; 0x9429
   11d40:	movt	r2, #1
   11d44:	mov	r0, #1
   11d48:	bl	11304 <__printf_chk@plt>
   11d4c:	movw	r1, #37950	; 0x943e
   11d50:	movt	r1, #1
   11d54:	mov	r0, #0
   11d58:	mov	r2, #5
   11d5c:	bl	11160 <dcgettext@plt>
   11d60:	mov	r1, r0
   11d64:	movw	r2, #38023	; 0x9487
   11d68:	movt	r2, #1
   11d6c:	mov	r0, #1
   11d70:	bl	11304 <__printf_chk@plt>
   11d74:	movw	r1, #38051	; 0x94a3
   11d78:	movt	r1, #1
   11d7c:	mov	r0, #0
   11d80:	mov	r2, #5
   11d84:	bl	11160 <dcgettext@plt>
   11d88:	ldr	r1, [r6]
   11d8c:	bl	110f4 <fputs_unlocked@plt>
   11d90:	movw	r1, #38086	; 0x94c6
   11d94:	movt	r1, #1
   11d98:	mov	r0, #0
   11d9c:	mov	r2, #5
   11da0:	bl	11160 <dcgettext@plt>
   11da4:	ldr	r1, [r6]
   11da8:	bl	110f4 <fputs_unlocked@plt>
   11dac:	movw	r1, #38235	; 0x955b
   11db0:	movt	r1, #1
   11db4:	mov	r0, #0
   11db8:	mov	r2, #5
   11dbc:	bl	11160 <dcgettext@plt>
   11dc0:	ldr	r1, [r6]
   11dc4:	bl	110f4 <fputs_unlocked@plt>
   11dc8:	movw	r1, #38279	; 0x9587
   11dcc:	movt	r1, #1
   11dd0:	mov	r0, #0
   11dd4:	mov	r2, #5
   11dd8:	bl	11160 <dcgettext@plt>
   11ddc:	ldr	r1, [r6]
   11de0:	bl	110f4 <fputs_unlocked@plt>
   11de4:	movw	r1, #38381	; 0x95ed
   11de8:	movt	r1, #1
   11dec:	mov	r0, #0
   11df0:	mov	r2, #5
   11df4:	bl	11160 <dcgettext@plt>
   11df8:	mov	r1, r0
   11dfc:	movw	r2, #38438	; 0x9626
   11e00:	movt	r2, #1
   11e04:	movw	r3, #38452	; 0x9634
   11e08:	movt	r3, #1
   11e0c:	mov	r0, #1
   11e10:	bl	11304 <__printf_chk@plt>
   11e14:	movw	r1, #38493	; 0x965d
   11e18:	movt	r1, #1
   11e1c:	mov	r0, #0
   11e20:	mov	r2, #5
   11e24:	bl	11160 <dcgettext@plt>
   11e28:	ldr	r1, [r6]
   11e2c:	bl	110f4 <fputs_unlocked@plt>
   11e30:	movw	r1, #38696	; 0x9728
   11e34:	movt	r1, #1
   11e38:	mov	r0, #0
   11e3c:	mov	r2, #5
   11e40:	bl	11160 <dcgettext@plt>
   11e44:	mov	r1, r0
   11e48:	movw	r2, #38905	; 0x97f9
   11e4c:	movt	r2, #1
   11e50:	mov	r0, #1
   11e54:	bl	11304 <__printf_chk@plt>
   11e58:	movw	r1, #38936	; 0x9818
   11e5c:	movt	r1, #1
   11e60:	mov	r0, #0
   11e64:	mov	r2, #5
   11e68:	bl	11160 <dcgettext@plt>
   11e6c:	mov	r1, r0
   11e70:	movw	r0, #39308	; 0x998c
   11e74:	movt	r0, #1
   11e78:	str	r0, [sp]
   11e7c:	movw	r2, #39192	; 0x9918
   11e80:	movt	r2, #1
   11e84:	movw	r3, #39249	; 0x9951
   11e88:	movt	r3, #1
   11e8c:	mov	r0, #1
   11e90:	bl	11304 <__printf_chk@plt>
   11e94:	movw	r1, #39369	; 0x99c9
   11e98:	movt	r1, #1
   11e9c:	mov	r0, #0
   11ea0:	mov	r2, #5
   11ea4:	bl	11160 <dcgettext@plt>
   11ea8:	ldr	r1, [r6]
   11eac:	bl	110f4 <fputs_unlocked@plt>
   11eb0:	bl	11f30 <tcgetattr@plt+0xb6c>
   11eb4:	mov	r0, r4
   11eb8:	bl	11280 <exit@plt>
   11ebc:	movw	r0, #49520	; 0xc170
   11ec0:	movt	r0, #2
   11ec4:	ldr	r5, [r0]
   11ec8:	movw	r1, #31780	; 0x7c24
   11ecc:	movt	r1, #1
   11ed0:	mov	r0, #0
   11ed4:	mov	r2, #5
   11ed8:	bl	11160 <dcgettext@plt>
   11edc:	mov	r2, r0
   11ee0:	movw	r0, #49756	; 0xc25c
   11ee4:	movt	r0, #2
   11ee8:	ldr	r3, [r0]
   11eec:	mov	r0, r5
   11ef0:	mov	r1, #1
   11ef4:	bl	11328 <__fprintf_chk@plt>
   11ef8:	mov	r0, r4
   11efc:	bl	11280 <exit@plt>
   11f00:	push	{fp, lr}
   11f04:	mov	fp, sp
   11f08:	movw	r1, #39983	; 0x9c2f
   11f0c:	movt	r1, #1
   11f10:	mov	r0, #0
   11f14:	mov	r2, #5
   11f18:	bl	11160 <dcgettext@plt>
   11f1c:	movw	r1, #49524	; 0xc174
   11f20:	movt	r1, #2
   11f24:	ldr	r1, [r1]
   11f28:	pop	{fp, lr}
   11f2c:	b	110f4 <fputs_unlocked@plt>
   11f30:	push	{r4, r5, r6, sl, fp, lr}
   11f34:	add	fp, sp, #16
   11f38:	sub	sp, sp, #56	; 0x38
   11f3c:	movw	r0, #41712	; 0xa2f0
   11f40:	movt	r0, #1
   11f44:	add	r1, r0, #32
   11f48:	mov	r2, #48	; 0x30
   11f4c:	vld1.64	{d16-d17}, [r1]
   11f50:	mov	r6, sp
   11f54:	add	r1, r6, #32
   11f58:	add	r3, r0, #16
   11f5c:	vld1.64	{d18-d19}, [r0], r2
   11f60:	vld1.64	{d20-d21}, [r3]
   11f64:	vldr	d22, [r0]
   11f68:	vst1.64	{d16-d17}, [r1]
   11f6c:	add	r0, r6, #16
   11f70:	vst1.64	{d20-d21}, [r0]
   11f74:	mov	r0, r6
   11f78:	vst1.64	{d18-d19}, [r0], r2
   11f7c:	vstr	d22, [r0]
   11f80:	ldr	r1, [sp]
   11f84:	cmp	r1, #0
   11f88:	movw	r4, #39646	; 0x9ade
   11f8c:	movt	r4, #1
   11f90:	beq	11fb8 <tcgetattr@plt+0xbf4>
   11f94:	mov	r6, sp
   11f98:	movw	r5, #39646	; 0x9ade
   11f9c:	movt	r5, #1
   11fa0:	mov	r0, r5
   11fa4:	bl	1110c <strcmp@plt>
   11fa8:	cmp	r0, #0
   11fac:	ldrne	r1, [r6, #8]!
   11fb0:	cmpne	r1, #0
   11fb4:	bne	11fa0 <tcgetattr@plt+0xbdc>
   11fb8:	ldr	r5, [r6, #4]
   11fbc:	movw	r1, #40153	; 0x9cd9
   11fc0:	movt	r1, #1
   11fc4:	mov	r0, #0
   11fc8:	mov	r2, #5
   11fcc:	bl	11160 <dcgettext@plt>
   11fd0:	mov	r1, r0
   11fd4:	movw	r2, #39714	; 0x9b22
   11fd8:	movt	r2, #1
   11fdc:	movw	r3, #40176	; 0x9cf0
   11fe0:	movt	r3, #1
   11fe4:	mov	r0, #1
   11fe8:	bl	11304 <__printf_chk@plt>
   11fec:	cmp	r5, #0
   11ff0:	moveq	r5, r4
   11ff4:	mov	r0, #5
   11ff8:	mov	r1, #0
   11ffc:	bl	11358 <setlocale@plt>
   12000:	cmp	r0, #0
   12004:	beq	12044 <tcgetattr@plt+0xc80>
   12008:	movw	r1, #40216	; 0x9d18
   1200c:	movt	r1, #1
   12010:	mov	r2, #3
   12014:	bl	11388 <strncmp@plt>
   12018:	cmp	r0, #0
   1201c:	beq	12044 <tcgetattr@plt+0xc80>
   12020:	movw	r1, #40220	; 0x9d1c
   12024:	movt	r1, #1
   12028:	mov	r0, #0
   1202c:	mov	r2, #5
   12030:	bl	11160 <dcgettext@plt>
   12034:	movw	r1, #49524	; 0xc174
   12038:	movt	r1, #2
   1203c:	ldr	r1, [r1]
   12040:	bl	110f4 <fputs_unlocked@plt>
   12044:	movw	r1, #40291	; 0x9d63
   12048:	movt	r1, #1
   1204c:	mov	r0, #0
   12050:	mov	r2, #5
   12054:	bl	11160 <dcgettext@plt>
   12058:	mov	r1, r0
   1205c:	movw	r2, #40176	; 0x9cf0
   12060:	movt	r2, #1
   12064:	mov	r0, #1
   12068:	mov	r3, r4
   1206c:	bl	11304 <__printf_chk@plt>
   12070:	movw	r0, #40086	; 0x9c96
   12074:	movt	r0, #1
   12078:	movw	r6, #37042	; 0x90b2
   1207c:	movt	r6, #1
   12080:	cmp	r5, r4
   12084:	moveq	r6, r0
   12088:	movw	r1, #40318	; 0x9d7e
   1208c:	movt	r1, #1
   12090:	mov	r0, #0
   12094:	mov	r2, #5
   12098:	bl	11160 <dcgettext@plt>
   1209c:	mov	r1, r0
   120a0:	mov	r0, #1
   120a4:	mov	r2, r5
   120a8:	mov	r3, r6
   120ac:	sub	sp, fp, #16
   120b0:	pop	{r4, r5, r6, sl, fp, lr}
   120b4:	b	11304 <__printf_chk@plt>
   120b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120bc:	add	fp, sp, #28
   120c0:	sub	sp, sp, #28
   120c4:	mov	r9, r1
   120c8:	mov	r7, r0
   120cc:	ldr	r0, [r1]
   120d0:	bl	141b8 <tcgetattr@plt+0x2df4>
   120d4:	movw	r1, #37042	; 0x90b2
   120d8:	movt	r1, #1
   120dc:	mov	r0, #6
   120e0:	bl	11358 <setlocale@plt>
   120e4:	movw	r6, #39718	; 0x9b26
   120e8:	movt	r6, #1
   120ec:	movw	r1, #39651	; 0x9ae3
   120f0:	movt	r1, #1
   120f4:	mov	r0, r6
   120f8:	bl	1137c <bindtextdomain@plt>
   120fc:	mov	r0, r6
   12100:	bl	11190 <textdomain@plt>
   12104:	movw	r0, #15964	; 0x3e5c
   12108:	movt	r0, #1
   1210c:	bl	17bfc <tcgetattr@plt+0x6838>
   12110:	movw	r0, #49528	; 0xc178
   12114:	movt	r0, #2
   12118:	mov	r5, #0
   1211c:	str	r5, [r0]
   12120:	mov	r6, #1
   12124:	mov	r4, #0
   12128:	mov	r0, #0
   1212c:	str	r0, [sp, #16]
   12130:	mov	r0, #0
   12134:	str	r0, [sp, #12]
   12138:	mov	r0, #1
   1213c:	str	r0, [sp, #20]
   12140:	mov	r8, #0
   12144:	mov	sl, #0
   12148:	str	r5, [sp]
   1214c:	sub	r0, r7, r4
   12150:	add	r1, r9, r4, lsl #2
   12154:	movw	r2, #39675	; 0x9afb
   12158:	movt	r2, #1
   1215c:	movw	r3, #41616	; 0xa290
   12160:	movt	r3, #1
   12164:	bl	11268 <getopt_long@plt>
   12168:	cmp	r0, #69	; 0x45
   1216c:	bgt	1218c <tcgetattr@plt+0xdc8>
   12170:	cmn	r0, #1
   12174:	beq	1229c <tcgetattr@plt+0xed8>
   12178:	cmn	r0, #3
   1217c:	beq	124d4 <tcgetattr@plt+0x1110>
   12180:	cmn	r0, #2
   12184:	bne	121b4 <tcgetattr@plt+0xdf0>
   12188:	b	1251c <tcgetattr@plt+0x1158>
   1218c:	cmp	r0, #70	; 0x46
   12190:	beq	12218 <tcgetattr@plt+0xe54>
   12194:	cmp	r0, #97	; 0x61
   12198:	beq	12230 <tcgetattr@plt+0xe6c>
   1219c:	cmp	r0, #103	; 0x67
   121a0:	bne	121b4 <tcgetattr@plt+0xdf0>
   121a4:	mov	sl, #2
   121a8:	mov	r0, #1
   121ac:	str	r0, [sp, #12]
   121b0:	b	1223c <tcgetattr@plt+0xe78>
   121b4:	mov	r5, sl
   121b8:	add	r4, r6, r4
   121bc:	ldr	sl, [r9, r4, lsl #2]
   121c0:	mov	r0, sl
   121c4:	movw	r1, #39744	; 0x9b40
   121c8:	movt	r1, #1
   121cc:	bl	1110c <strcmp@plt>
   121d0:	cmp	r0, #0
   121d4:	beq	121fc <tcgetattr@plt+0xe38>
   121d8:	mov	r0, sl
   121dc:	movw	r1, #39745	; 0x9b41
   121e0:	movt	r1, #1
   121e4:	bl	1110c <strcmp@plt>
   121e8:	clz	r0, r0
   121ec:	lsr	r0, r0, #5
   121f0:	ldr	r1, [sp, #20]
   121f4:	and	r1, r1, r0
   121f8:	str	r1, [sp, #20]
   121fc:	mov	sl, r5
   12200:	mov	r5, #0
   12204:	movw	r0, #49512	; 0xc168
   12208:	movt	r0, #2
   1220c:	str	r5, [r0]
   12210:	mov	r6, #1
   12214:	b	12244 <tcgetattr@plt+0xe80>
   12218:	cmp	r8, #0
   1221c:	bne	12598 <tcgetattr@plt+0x11d4>
   12220:	movw	r0, #49536	; 0xc180
   12224:	movt	r0, #2
   12228:	ldr	r8, [r0]
   1222c:	b	1223c <tcgetattr@plt+0xe78>
   12230:	mov	r0, #1
   12234:	str	r0, [sp, #16]
   12238:	mov	sl, #1
   1223c:	movw	r0, #49512	; 0xc168
   12240:	movt	r0, #2
   12244:	ldr	r0, [r0]
   12248:	cmp	r6, r0
   1224c:	bge	12148 <tcgetattr@plt+0xd84>
   12250:	mov	r5, r7
   12254:	add	r0, r4, r6
   12258:	add	r0, r9, r0, lsl #2
   1225c:	movw	r1, #49512	; 0xc168
   12260:	movt	r1, #2
   12264:	ldr	r7, [r1]
   12268:	add	r1, r6, #1
   1226c:	cmp	r7, r1
   12270:	movgt	r1, r7
   12274:	sub	r1, r1, r6
   12278:	lsl	r2, r1, #2
   1227c:	mov	r1, #0
   12280:	bl	112f8 <memset@plt>
   12284:	add	r6, r6, #1
   12288:	cmp	r6, r7
   1228c:	blt	12284 <tcgetattr@plt+0xec0>
   12290:	mov	r7, r5
   12294:	mov	r5, #0
   12298:	b	12148 <tcgetattr@plt+0xd84>
   1229c:	ldr	r6, [sp, #12]
   122a0:	ldr	r1, [sp, #16]
   122a4:	and	r0, r1, r6
   122a8:	tst	r0, #1
   122ac:	bne	125a4 <tcgetattr@plt+0x11e0>
   122b0:	mov	r5, sl
   122b4:	orr	r4, r1, r6
   122b8:	tst	r4, #1
   122bc:	beq	122d0 <tcgetattr@plt+0xf0c>
   122c0:	ldr	r0, [sp, #20]
   122c4:	eor	r0, r0, #1
   122c8:	tst	r0, #1
   122cc:	bne	125b0 <tcgetattr@plt+0x11ec>
   122d0:	cmp	r8, #0
   122d4:	mov	sl, r8
   122d8:	bne	122f8 <tcgetattr@plt+0xf34>
   122dc:	movw	r1, #39884	; 0x9bcc
   122e0:	movt	r1, #1
   122e4:	mov	r0, #0
   122e8:	mov	r2, #5
   122ec:	bl	11160 <dcgettext@plt>
   122f0:	ldr	r1, [sp, #16]
   122f4:	mov	sl, r0
   122f8:	ldr	r0, [sp, #20]
   122fc:	orr	r0, r1, r0
   12300:	orr	r0, r6, r0
   12304:	tst	r0, #1
   12308:	bne	1233c <tcgetattr@plt+0xf78>
   1230c:	add	r0, sp, #27
   12310:	add	r1, sp, #26
   12314:	movw	r2, #49604	; 0xc1c4
   12318:	movt	r2, #2
   1231c:	str	r2, [sp]
   12320:	str	r1, [sp, #4]
   12324:	str	r0, [sp, #8]
   12328:	mov	r0, #1
   1232c:	mov	r1, sl
   12330:	mov	r2, r9
   12334:	mov	r3, r7
   12338:	bl	12610 <tcgetattr@plt+0x124c>
   1233c:	cmp	r8, #0
   12340:	beq	1238c <tcgetattr@plt+0xfc8>
   12344:	mov	r0, #0
   12348:	mov	r1, sl
   1234c:	mov	r2, #2048	; 0x800
   12350:	mov	r3, #0
   12354:	bl	14128 <tcgetattr@plt+0x2d64>
   12358:	cmn	r0, #1
   1235c:	ble	12524 <tcgetattr@plt+0x1160>
   12360:	mov	r0, #0
   12364:	mov	r1, #3
   12368:	bl	13f44 <tcgetattr@plt+0x2b80>
   1236c:	cmn	r0, #1
   12370:	beq	12554 <tcgetattr@plt+0x1190>
   12374:	bic	r2, r0, #2048	; 0x800
   12378:	mov	r0, #0
   1237c:	mov	r1, #4
   12380:	bl	13f44 <tcgetattr@plt+0x2b80>
   12384:	cmn	r0, #1
   12388:	ble	12554 <tcgetattr@plt+0x1190>
   1238c:	movw	r6, #49544	; 0xc188
   12390:	movt	r6, #2
   12394:	mov	r0, #0
   12398:	mov	r1, r6
   1239c:	bl	113c4 <tcgetattr@plt>
   123a0:	cmp	r0, #0
   123a4:	bne	12524 <tcgetattr@plt+0x1160>
   123a8:	ldr	r0, [sp, #20]
   123ac:	orr	r0, r4, r0
   123b0:	tst	r0, #1
   123b4:	beq	123e8 <tcgetattr@plt+0x1024>
   123b8:	bl	12afc <tcgetattr@plt+0x1738>
   123bc:	movw	r1, #49664	; 0xc200
   123c0:	movt	r1, #2
   123c4:	str	r0, [r1]
   123c8:	movw	r0, #49668	; 0xc204
   123cc:	movt	r0, #2
   123d0:	mov	r1, #0
   123d4:	str	r1, [r0]
   123d8:	mov	r0, r5
   123dc:	mov	r1, sl
   123e0:	bl	12b88 <tcgetattr@plt+0x17c4>
   123e4:	b	124c8 <tcgetattr@plt+0x1104>
   123e8:	mov	r0, #0
   123ec:	strb	r0, [sp, #27]
   123f0:	strb	r0, [sp, #26]
   123f4:	add	r0, sp, #27
   123f8:	add	r1, sp, #26
   123fc:	str	r6, [sp]
   12400:	str	r1, [sp, #4]
   12404:	str	r0, [sp, #8]
   12408:	mov	r0, #0
   1240c:	mov	r1, sl
   12410:	mov	r2, r9
   12414:	mov	r3, r7
   12418:	bl	12610 <tcgetattr@plt+0x124c>
   1241c:	ldrb	r0, [sp, #27]
   12420:	cmp	r0, #0
   12424:	beq	124c8 <tcgetattr@plt+0x1104>
   12428:	movw	r0, #49424	; 0xc110
   1242c:	movt	r0, #2
   12430:	ldr	r1, [r0]
   12434:	movw	r2, #49544	; 0xc188
   12438:	movt	r2, #2
   1243c:	mov	r0, #0
   12440:	bl	111e4 <tcsetattr@plt>
   12444:	cmp	r0, #0
   12448:	bne	12524 <tcgetattr@plt+0x1160>
   1244c:	movw	r1, #49672	; 0xc208
   12450:	movt	r1, #2
   12454:	mov	r0, #0
   12458:	bl	113c4 <tcgetattr@plt>
   1245c:	cmp	r0, #0
   12460:	bne	12524 <tcgetattr@plt+0x1160>
   12464:	movw	r0, #49544	; 0xc188
   12468:	movt	r0, #2
   1246c:	movw	r4, #49672	; 0xc208
   12470:	movt	r4, #2
   12474:	mov	r1, r4
   12478:	mov	r2, #60	; 0x3c
   1247c:	bl	1128c <bcmp@plt>
   12480:	cmp	r0, #0
   12484:	beq	124c8 <tcgetattr@plt+0x1104>
   12488:	ldr	r0, [r4, #8]
   1248c:	movw	r1, #65535	; 0xffff
   12490:	movt	r1, #61424	; 0xeff0
   12494:	and	r0, r0, r1
   12498:	str	r0, [r4, #8]
   1249c:	ldrb	r0, [sp, #26]
   124a0:	cmp	r0, #0
   124a4:	bne	125d4 <tcgetattr@plt+0x1210>
   124a8:	movw	r0, #49544	; 0xc188
   124ac:	movt	r0, #2
   124b0:	movw	r1, #49672	; 0xc208
   124b4:	movt	r1, #2
   124b8:	mov	r2, #60	; 0x3c
   124bc:	bl	1128c <bcmp@plt>
   124c0:	cmp	r0, #0
   124c4:	bne	125d4 <tcgetattr@plt+0x1210>
   124c8:	mov	r0, #0
   124cc:	sub	sp, fp, #28
   124d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124d4:	movw	r0, #49428	; 0xc114
   124d8:	movt	r0, #2
   124dc:	ldr	r3, [r0]
   124e0:	movw	r0, #49524	; 0xc174
   124e4:	movt	r0, #2
   124e8:	ldr	r0, [r0]
   124ec:	mov	r1, #0
   124f0:	movw	r2, #39728	; 0x9b30
   124f4:	movt	r2, #1
   124f8:	str	r2, [sp]
   124fc:	str	r1, [sp, #4]
   12500:	movw	r1, #39646	; 0x9ade
   12504:	movt	r1, #1
   12508:	movw	r2, #39714	; 0x9b22
   1250c:	movt	r2, #1
   12510:	bl	16184 <tcgetattr@plt+0x4dc0>
   12514:	mov	r0, #0
   12518:	bl	11280 <exit@plt>
   1251c:	mov	r0, #0
   12520:	bl	114c0 <tcgetattr@plt+0xfc>
   12524:	bl	112d4 <__errno_location@plt>
   12528:	ldr	r4, [r0]
   1252c:	mov	r0, #0
   12530:	mov	r1, #3
   12534:	mov	r2, sl
   12538:	bl	1586c <tcgetattr@plt+0x44a8>
   1253c:	mov	r3, r0
   12540:	movw	r2, #44247	; 0xacd7
   12544:	movt	r2, #1
   12548:	mov	r0, #1
   1254c:	mov	r1, r4
   12550:	bl	11214 <error@plt>
   12554:	bl	112d4 <__errno_location@plt>
   12558:	ldr	r4, [r0]
   1255c:	movw	r1, #39899	; 0x9bdb
   12560:	movt	r1, #1
   12564:	mov	r0, #0
   12568:	mov	r2, #5
   1256c:	bl	11160 <dcgettext@plt>
   12570:	mov	r5, r0
   12574:	mov	r0, #0
   12578:	mov	r1, #3
   1257c:	mov	r2, sl
   12580:	bl	1586c <tcgetattr@plt+0x44a8>
   12584:	mov	r3, r0
   12588:	mov	r0, #1
   1258c:	mov	r1, r4
   12590:	mov	r2, r5
   12594:	bl	11214 <error@plt>
   12598:	movw	r1, #39681	; 0x9b01
   1259c:	movt	r1, #1
   125a0:	b	125b8 <tcgetattr@plt+0x11f4>
   125a4:	movw	r1, #39751	; 0x9b47
   125a8:	movt	r1, #1
   125ac:	b	125b8 <tcgetattr@plt+0x11f4>
   125b0:	movw	r1, #39830	; 0x9b96
   125b4:	movt	r1, #1
   125b8:	mov	r0, #0
   125bc:	mov	r2, #5
   125c0:	bl	11160 <dcgettext@plt>
   125c4:	mov	r2, r0
   125c8:	mov	r0, #1
   125cc:	mov	r1, #0
   125d0:	bl	11214 <error@plt>
   125d4:	movw	r1, #39936	; 0x9c00
   125d8:	movt	r1, #1
   125dc:	mov	r0, #0
   125e0:	mov	r2, #5
   125e4:	bl	11160 <dcgettext@plt>
   125e8:	mov	r4, r0
   125ec:	mov	r0, #0
   125f0:	mov	r1, #3
   125f4:	mov	r2, sl
   125f8:	bl	1586c <tcgetattr@plt+0x44a8>
   125fc:	mov	r3, r0
   12600:	mov	r0, #1
   12604:	mov	r1, #0
   12608:	mov	r2, r4
   1260c:	bl	11214 <error@plt>
   12610:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12614:	add	fp, sp, #28
   12618:	sub	sp, sp, #20
   1261c:	str	r1, [sp]
   12620:	str	r0, [sp, #4]
   12624:	cmp	r3, #2
   12628:	blt	12a98 <tcgetattr@plt+0x16d4>
   1262c:	mov	r4, r3
   12630:	mov	r5, r2
   12634:	sub	r0, r3, #1
   12638:	str	r0, [sp, #8]
   1263c:	mov	sl, #1
   12640:	str	r3, [sp, #16]
   12644:	str	r2, [sp, #12]
   12648:	b	1266c <tcgetattr@plt+0x12a8>
   1264c:	subs	r0, r7, #45	; 0x2d
   12650:	movwne	r0, #1
   12654:	movw	r1, #49424	; 0xc110
   12658:	movt	r1, #2
   1265c:	str	r0, [r1]
   12660:	add	sl, sl, #1
   12664:	cmp	sl, r4
   12668:	bge	12a98 <tcgetattr@plt+0x16d4>
   1266c:	ldr	r0, [r5, sl, lsl #2]
   12670:	cmp	r0, #0
   12674:	beq	12660 <tcgetattr@plt+0x129c>
   12678:	mov	r9, r0
   1267c:	ldrb	r7, [r9], #1
   12680:	cmp	r7, #45	; 0x2d
   12684:	movne	r9, r0
   12688:	mov	r0, r9
   1268c:	movw	r1, #39745	; 0x9b41
   12690:	movt	r1, #1
   12694:	bl	1110c <strcmp@plt>
   12698:	cmp	r0, #0
   1269c:	beq	1264c <tcgetattr@plt+0x1288>
   126a0:	mov	r0, r9
   126a4:	movw	r1, #40508	; 0x9e3c
   126a8:	movt	r1, #1
   126ac:	bl	1110c <strcmp@plt>
   126b0:	cmp	r0, #0
   126b4:	movw	r6, #41768	; 0xa328
   126b8:	movt	r6, #1
   126bc:	beq	126f0 <tcgetattr@plt+0x132c>
   126c0:	mov	r4, #89	; 0x59
   126c4:	movw	r0, #41768	; 0xa328
   126c8:	movt	r0, #1
   126cc:	subs	r4, r4, #1
   126d0:	beq	1271c <tcgetattr@plt+0x1358>
   126d4:	add	r6, r0, #20
   126d8:	ldr	r1, [r0, #20]
   126dc:	mov	r0, r9
   126e0:	bl	1110c <strcmp@plt>
   126e4:	cmp	r0, #0
   126e8:	mov	r0, r6
   126ec:	bne	126cc <tcgetattr@plt+0x1308>
   126f0:	sub	r0, r7, #45	; 0x2d
   126f4:	clz	r0, r0
   126f8:	lsr	r1, r0, #5
   126fc:	mov	r0, r6
   12700:	ldr	r2, [fp, #8]
   12704:	bl	12bb0 <tcgetattr@plt+0x17ec>
   12708:	mov	r8, r0
   1270c:	ldr	r0, [fp, #16]
   12710:	mov	r1, #1
   12714:	strb	r1, [r0]
   12718:	b	12720 <tcgetattr@plt+0x135c>
   1271c:	mov	r8, #0
   12720:	cmp	r8, #0
   12724:	movw	r5, #43568	; 0xaa30
   12728:	movt	r5, #1
   1272c:	cmpeq	r7, #45	; 0x2d
   12730:	beq	12adc <tcgetattr@plt+0x1718>
   12734:	cmp	r8, #0
   12738:	beq	12748 <tcgetattr@plt+0x1384>
   1273c:	ldr	r4, [sp, #16]
   12740:	ldr	r5, [sp, #12]
   12744:	b	12660 <tcgetattr@plt+0x129c>
   12748:	mov	r0, r9
   1274c:	movw	r1, #41024	; 0xa040
   12750:	movt	r1, #1
   12754:	bl	1110c <strcmp@plt>
   12758:	cmp	r0, #0
   1275c:	mov	r0, r5
   12760:	beq	12794 <tcgetattr@plt+0x13d0>
   12764:	mov	r0, #0
   12768:	sub	r4, r0, #12
   1276c:	cmn	r4, #216	; 0xd8
   12770:	beq	127cc <tcgetattr@plt+0x1408>
   12774:	sub	r0, r5, r0
   12778:	ldr	r1, [r0, #12]
   1277c:	mov	r0, r9
   12780:	bl	1110c <strcmp@plt>
   12784:	cmp	r0, #0
   12788:	mov	r0, r4
   1278c:	bne	12768 <tcgetattr@plt+0x13a4>
   12790:	sub	r0, r5, r4
   12794:	ldr	r1, [sp, #8]
   12798:	cmp	sl, r1
   1279c:	ldr	r4, [sp, #16]
   127a0:	ldr	r5, [sp, #12]
   127a4:	addne	sl, sl, #1
   127a8:	ldrne	r1, [r5, sl, lsl #2]
   127ac:	cmpne	r1, #0
   127b0:	beq	12aa0 <tcgetattr@plt+0x16dc>
   127b4:	ldr	r2, [fp, #8]
   127b8:	bl	13030 <tcgetattr@plt+0x1c6c>
   127bc:	ldr	r0, [fp, #16]
   127c0:	mov	r1, #1
   127c4:	strb	r1, [r0]
   127c8:	b	12660 <tcgetattr@plt+0x129c>
   127cc:	cmp	r8, #0
   127d0:	bne	1273c <tcgetattr@plt+0x1378>
   127d4:	mov	r0, r9
   127d8:	movw	r1, #40439	; 0x9df7
   127dc:	movt	r1, #1
   127e0:	bl	1110c <strcmp@plt>
   127e4:	cmp	r0, #0
   127e8:	ldr	r4, [sp, #16]
   127ec:	ldr	r5, [sp, #12]
   127f0:	beq	128c4 <tcgetattr@plt+0x1500>
   127f4:	mov	r0, r9
   127f8:	movw	r1, #40446	; 0x9dfe
   127fc:	movt	r1, #1
   12800:	bl	1110c <strcmp@plt>
   12804:	cmp	r0, #0
   12808:	beq	128f0 <tcgetattr@plt+0x152c>
   1280c:	mov	r0, r9
   12810:	movw	r1, #40453	; 0x9e05
   12814:	movt	r1, #1
   12818:	bl	1110c <strcmp@plt>
   1281c:	cmp	r0, #0
   12820:	beq	1296c <tcgetattr@plt+0x15a8>
   12824:	mov	r0, r9
   12828:	movw	r1, #40458	; 0x9e0a
   1282c:	movt	r1, #1
   12830:	bl	1110c <strcmp@plt>
   12834:	cmp	r0, #0
   12838:	beq	12934 <tcgetattr@plt+0x1570>
   1283c:	mov	r0, r9
   12840:	movw	r1, #40463	; 0x9e0f
   12844:	movt	r1, #1
   12848:	bl	1110c <strcmp@plt>
   1284c:	cmp	r0, #0
   12850:	beq	12934 <tcgetattr@plt+0x1570>
   12854:	mov	r0, r9
   12858:	movw	r1, #40471	; 0x9e17
   1285c:	movt	r1, #1
   12860:	bl	1110c <strcmp@plt>
   12864:	cmp	r0, #0
   12868:	beq	129a8 <tcgetattr@plt+0x15e4>
   1286c:	mov	r0, r9
   12870:	movw	r1, #40476	; 0x9e1c
   12874:	movt	r1, #1
   12878:	bl	1110c <strcmp@plt>
   1287c:	cmp	r0, #0
   12880:	beq	129e4 <tcgetattr@plt+0x1620>
   12884:	mov	r0, r9
   12888:	movw	r1, #40440	; 0x9df8
   1288c:	movt	r1, #1
   12890:	bl	1110c <strcmp@plt>
   12894:	cmp	r0, #0
   12898:	beq	12a4c <tcgetattr@plt+0x1688>
   1289c:	mov	r0, r9
   128a0:	bl	13444 <tcgetattr@plt+0x2080>
   128a4:	cmn	r0, #1
   128a8:	beq	12a78 <tcgetattr@plt+0x16b4>
   128ac:	ldr	r0, [sp, #4]
   128b0:	cmp	r0, #0
   128b4:	bne	12660 <tcgetattr@plt+0x129c>
   128b8:	mov	r0, #2
   128bc:	mov	r1, r9
   128c0:	b	12918 <tcgetattr@plt+0x1554>
   128c4:	ldr	r0, [sp, #8]
   128c8:	cmp	sl, r0
   128cc:	addne	sl, sl, #1
   128d0:	ldrne	r1, [r5, sl, lsl #2]
   128d4:	cmpne	r1, #0
   128d8:	beq	12aa0 <tcgetattr@plt+0x16dc>
   128dc:	ldr	r0, [sp, #4]
   128e0:	cmp	r0, #0
   128e4:	bne	12660 <tcgetattr@plt+0x129c>
   128e8:	mov	r0, #0
   128ec:	b	12918 <tcgetattr@plt+0x1554>
   128f0:	ldr	r0, [sp, #8]
   128f4:	cmp	sl, r0
   128f8:	addne	sl, sl, #1
   128fc:	ldrne	r1, [r5, sl, lsl #2]
   12900:	cmpne	r1, #0
   12904:	beq	12aa0 <tcgetattr@plt+0x16dc>
   12908:	ldr	r0, [sp, #4]
   1290c:	cmp	r0, #0
   12910:	bne	12660 <tcgetattr@plt+0x129c>
   12914:	mov	r0, #1
   12918:	ldr	r2, [fp, #8]
   1291c:	bl	13118 <tcgetattr@plt+0x1d54>
   12920:	ldr	r0, [fp, #12]
   12924:	mov	r1, #1
   12928:	strb	r1, [r0]
   1292c:	ldr	r0, [fp, #16]
   12930:	b	127c4 <tcgetattr@plt+0x1400>
   12934:	ldr	r0, [sp, #8]
   12938:	cmp	sl, r0
   1293c:	addne	sl, sl, #1
   12940:	ldrne	r0, [r5, sl, lsl #2]
   12944:	cmpne	r0, #0
   12948:	beq	12aa0 <tcgetattr@plt+0x16dc>
   1294c:	ldr	r1, [sp, #4]
   12950:	cmp	r1, #0
   12954:	bne	12660 <tcgetattr@plt+0x129c>
   12958:	mvn	r1, #-2147483648	; 0x80000000
   1295c:	bl	13230 <tcgetattr@plt+0x1e6c>
   12960:	mov	r1, r0
   12964:	mvn	r0, #0
   12968:	b	1299c <tcgetattr@plt+0x15d8>
   1296c:	ldr	r0, [sp, #8]
   12970:	cmp	sl, r0
   12974:	addne	sl, sl, #1
   12978:	ldrne	r0, [r5, sl, lsl #2]
   1297c:	cmpne	r0, #0
   12980:	beq	12aa0 <tcgetattr@plt+0x16dc>
   12984:	ldr	r1, [sp, #4]
   12988:	cmp	r1, #0
   1298c:	bne	12660 <tcgetattr@plt+0x129c>
   12990:	mvn	r1, #-2147483648	; 0x80000000
   12994:	bl	13230 <tcgetattr@plt+0x1e6c>
   12998:	mvn	r1, #0
   1299c:	ldr	r2, [sp]
   129a0:	bl	13168 <tcgetattr@plt+0x1da4>
   129a4:	b	12660 <tcgetattr@plt+0x129c>
   129a8:	ldr	r0, [sp, #4]
   129ac:	cmp	r0, #0
   129b0:	bne	12660 <tcgetattr@plt+0x129c>
   129b4:	bl	12afc <tcgetattr@plt+0x1738>
   129b8:	movw	r1, #49664	; 0xc200
   129bc:	movt	r1, #2
   129c0:	str	r0, [r1]
   129c4:	mov	r0, #0
   129c8:	movw	r1, #49668	; 0xc204
   129cc:	movt	r1, #2
   129d0:	str	r0, [r1]
   129d4:	mov	r0, #0
   129d8:	ldr	r1, [sp]
   129dc:	bl	13290 <tcgetattr@plt+0x1ecc>
   129e0:	b	12660 <tcgetattr@plt+0x129c>
   129e4:	ldr	r0, [sp, #8]
   129e8:	cmp	sl, r0
   129ec:	addne	sl, sl, #1
   129f0:	ldrne	r0, [r5, sl, lsl #2]
   129f4:	cmpne	r0, #0
   129f8:	beq	12aa0 <tcgetattr@plt+0x16dc>
   129fc:	mvn	r1, #0
   12a00:	bl	13230 <tcgetattr@plt+0x1e6c>
   12a04:	ldr	r1, [fp, #8]
   12a08:	strb	r0, [r1, #16]
   12a0c:	cmp	r0, #256	; 0x100
   12a10:	bcc	127bc <tcgetattr@plt+0x13f8>
   12a14:	mov	r0, #0
   12a18:	movw	r1, #40481	; 0x9e21
   12a1c:	movt	r1, #1
   12a20:	mov	r2, #5
   12a24:	bl	11160 <dcgettext@plt>
   12a28:	mov	r6, r0
   12a2c:	ldr	r0, [r5, sl, lsl #2]
   12a30:	bl	159ac <tcgetattr@plt+0x45e8>
   12a34:	mov	r3, r0
   12a38:	mov	r0, #0
   12a3c:	mov	r1, #0
   12a40:	mov	r2, r6
   12a44:	bl	11214 <error@plt>
   12a48:	b	127bc <tcgetattr@plt+0x13f8>
   12a4c:	ldr	r0, [sp, #4]
   12a50:	cmp	r0, #0
   12a54:	bne	12660 <tcgetattr@plt+0x129c>
   12a58:	bl	12afc <tcgetattr@plt+0x1738>
   12a5c:	movw	r1, #49664	; 0xc200
   12a60:	movt	r1, #2
   12a64:	str	r0, [r1]
   12a68:	ldr	r0, [fp, #8]
   12a6c:	mov	r1, #0
   12a70:	bl	1337c <tcgetattr@plt+0x1fb8>
   12a74:	b	12660 <tcgetattr@plt+0x129c>
   12a78:	mov	r0, r9
   12a7c:	ldr	r1, [fp, #8]
   12a80:	bl	13490 <tcgetattr@plt+0x20cc>
   12a84:	cmp	r0, #0
   12a88:	bne	127bc <tcgetattr@plt+0x13f8>
   12a8c:	movw	r1, #40396	; 0x9dcc
   12a90:	movt	r1, #1
   12a94:	b	12aa8 <tcgetattr@plt+0x16e4>
   12a98:	sub	sp, fp, #28
   12a9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12aa0:	movw	r1, #40416	; 0x9de0
   12aa4:	movt	r1, #1
   12aa8:	mov	r0, #0
   12aac:	mov	r2, #5
   12ab0:	bl	11160 <dcgettext@plt>
   12ab4:	mov	r4, r0
   12ab8:	mov	r0, r9
   12abc:	bl	159ac <tcgetattr@plt+0x45e8>
   12ac0:	mov	r3, r0
   12ac4:	mov	r0, #0
   12ac8:	mov	r1, #0
   12acc:	mov	r2, r4
   12ad0:	bl	11214 <error@plt>
   12ad4:	mov	r0, #1
   12ad8:	bl	114c0 <tcgetattr@plt+0xfc>
   12adc:	movw	r1, #40396	; 0x9dcc
   12ae0:	movt	r1, #1
   12ae4:	mov	r0, #0
   12ae8:	mov	r2, #5
   12aec:	bl	11160 <dcgettext@plt>
   12af0:	mov	r4, r0
   12af4:	sub	r0, r9, #1
   12af8:	b	12abc <tcgetattr@plt+0x16f8>
   12afc:	push	{fp, lr}
   12b00:	mov	fp, sp
   12b04:	sub	sp, sp, #16
   12b08:	add	r1, sp, #8
   12b0c:	mov	r0, #1
   12b10:	bl	136a4 <tcgetattr@plt+0x22e0>
   12b14:	cmp	r0, #0
   12b18:	bne	12b30 <tcgetattr@plt+0x176c>
   12b1c:	ldrh	r0, [sp, #10]
   12b20:	cmp	r0, #0
   12b24:	beq	12b30 <tcgetattr@plt+0x176c>
   12b28:	mov	sp, fp
   12b2c:	pop	{fp, pc}
   12b30:	movw	r0, #41425	; 0xa1d1
   12b34:	movt	r0, #1
   12b38:	bl	1122c <getenv@plt>
   12b3c:	cmp	r0, #0
   12b40:	beq	12b74 <tcgetattr@plt+0x17b0>
   12b44:	movw	r1, #37042	; 0x90b2
   12b48:	movt	r1, #1
   12b4c:	str	r1, [sp]
   12b50:	add	r3, sp, #4
   12b54:	mov	r1, #0
   12b58:	mov	r2, #0
   12b5c:	bl	16750 <tcgetattr@plt+0x538c>
   12b60:	cmp	r0, #0
   12b64:	bne	12b74 <tcgetattr@plt+0x17b0>
   12b68:	ldr	r0, [sp, #4]
   12b6c:	cmp	r0, #0
   12b70:	bgt	12b7c <tcgetattr@plt+0x17b8>
   12b74:	mov	r0, #80	; 0x50
   12b78:	str	r0, [sp, #4]
   12b7c:	ldr	r0, [sp, #4]
   12b80:	mov	sp, fp
   12b84:	pop	{fp, pc}
   12b88:	cmp	r0, #2
   12b8c:	beq	12ba4 <tcgetattr@plt+0x17e0>
   12b90:	cmp	r0, #1
   12b94:	beq	12ba8 <tcgetattr@plt+0x17e4>
   12b98:	cmp	r0, #0
   12b9c:	bxne	lr
   12ba0:	b	13890 <tcgetattr@plt+0x24cc>
   12ba4:	b	13d0c <tcgetattr@plt+0x2948>
   12ba8:	mov	r0, r1
   12bac:	b	13af4 <tcgetattr@plt+0x2730>
   12bb0:	push	{r4, r5, r6, sl, fp, lr}
   12bb4:	add	fp, sp, #16
   12bb8:	mov	r4, r2
   12bbc:	mov	r5, r1
   12bc0:	mov	r6, r0
   12bc4:	cmp	r1, #0
   12bc8:	beq	12bdc <tcgetattr@plt+0x1818>
   12bcc:	ldrb	r1, [r6, #8]
   12bd0:	mov	r0, #0
   12bd4:	tst	r1, #4
   12bd8:	beq	12c14 <tcgetattr@plt+0x1850>
   12bdc:	ldr	r0, [r6, #4]
   12be0:	mov	r1, r4
   12be4:	bl	13534 <tcgetattr@plt+0x2170>
   12be8:	cmp	r0, #0
   12bec:	beq	12c18 <tcgetattr@plt+0x1854>
   12bf0:	ldr	r1, [r6, #12]
   12bf4:	ldr	r2, [r6, #16]
   12bf8:	ldr	r3, [r0]
   12bfc:	bic	r2, r3, r2
   12c00:	cmp	r5, #0
   12c04:	orreq	r1, r2, r1
   12c08:	bicne	r1, r2, r1
   12c0c:	str	r1, [r0]
   12c10:	mov	r0, #1
   12c14:	pop	{r4, r5, r6, sl, fp, pc}
   12c18:	ldr	r6, [r6]
   12c1c:	movw	r1, #40884	; 0x9fb4
   12c20:	movt	r1, #1
   12c24:	mov	r0, r6
   12c28:	bl	1110c <strcmp@plt>
   12c2c:	cmp	r0, #0
   12c30:	beq	12de8 <tcgetattr@plt+0x1a24>
   12c34:	movw	r1, #40890	; 0x9fba
   12c38:	movt	r1, #1
   12c3c:	mov	r0, r6
   12c40:	bl	1110c <strcmp@plt>
   12c44:	cmp	r0, #0
   12c48:	beq	12de8 <tcgetattr@plt+0x1a24>
   12c4c:	movw	r1, #40897	; 0x9fc1
   12c50:	movt	r1, #1
   12c54:	mov	r0, r6
   12c58:	bl	1110c <strcmp@plt>
   12c5c:	cmp	r0, #0
   12c60:	beq	12e14 <tcgetattr@plt+0x1a50>
   12c64:	movw	r1, #40818	; 0x9f72
   12c68:	movt	r1, #1
   12c6c:	mov	r0, r6
   12c70:	bl	1110c <strcmp@plt>
   12c74:	cmp	r0, #0
   12c78:	beq	12e30 <tcgetattr@plt+0x1a6c>
   12c7c:	movw	r1, #40902	; 0x9fc6
   12c80:	movt	r1, #1
   12c84:	mov	r0, r6
   12c88:	bl	1110c <strcmp@plt>
   12c8c:	cmp	r0, #0
   12c90:	beq	12e5c <tcgetattr@plt+0x1a98>
   12c94:	movw	r1, #40905	; 0x9fc9
   12c98:	movt	r1, #1
   12c9c:	mov	r0, r6
   12ca0:	bl	1110c <strcmp@plt>
   12ca4:	cmp	r0, #0
   12ca8:	beq	12e80 <tcgetattr@plt+0x1abc>
   12cac:	movw	r1, #40934	; 0x9fe6
   12cb0:	movt	r1, #1
   12cb4:	mov	r0, r6
   12cb8:	bl	1110c <strcmp@plt>
   12cbc:	cmp	r0, #0
   12cc0:	beq	12e8c <tcgetattr@plt+0x1ac8>
   12cc4:	movw	r1, #40921	; 0x9fd9
   12cc8:	movt	r1, #1
   12ccc:	mov	r0, r6
   12cd0:	bl	1110c <strcmp@plt>
   12cd4:	cmp	r0, #0
   12cd8:	beq	12ea4 <tcgetattr@plt+0x1ae0>
   12cdc:	movw	r1, #40927	; 0x9fdf
   12ce0:	movt	r1, #1
   12ce4:	mov	r0, r6
   12ce8:	bl	1110c <strcmp@plt>
   12cec:	cmp	r0, #0
   12cf0:	beq	12f20 <tcgetattr@plt+0x1b5c>
   12cf4:	movw	r1, #40917	; 0x9fd5
   12cf8:	movt	r1, #1
   12cfc:	mov	r0, r6
   12d00:	bl	1110c <strcmp@plt>
   12d04:	cmp	r0, #0
   12d08:	beq	12ecc <tcgetattr@plt+0x1b08>
   12d0c:	movw	r1, #40910	; 0x9fce
   12d10:	movt	r1, #1
   12d14:	mov	r0, r6
   12d18:	bl	1110c <strcmp@plt>
   12d1c:	cmp	r0, #0
   12d20:	beq	12ecc <tcgetattr@plt+0x1b08>
   12d24:	movw	r1, #40941	; 0x9fed
   12d28:	movt	r1, #1
   12d2c:	mov	r0, r6
   12d30:	bl	1110c <strcmp@plt>
   12d34:	cmp	r0, #0
   12d38:	beq	12fac <tcgetattr@plt+0x1be8>
   12d3c:	movw	r1, #40949	; 0x9ff5
   12d40:	movt	r1, #1
   12d44:	mov	r0, r6
   12d48:	bl	1110c <strcmp@plt>
   12d4c:	cmp	r0, #0
   12d50:	beq	12fe8 <tcgetattr@plt+0x1c24>
   12d54:	movw	r1, #40954	; 0x9ffa
   12d58:	movt	r1, #1
   12d5c:	mov	r0, r6
   12d60:	bl	1110c <strcmp@plt>
   12d64:	cmp	r0, #0
   12d68:	beq	12fc4 <tcgetattr@plt+0x1c00>
   12d6c:	movw	r1, #40960	; 0xa000
   12d70:	movt	r1, #1
   12d74:	mov	r0, r6
   12d78:	bl	1110c <strcmp@plt>
   12d7c:	cmp	r0, #0
   12d80:	beq	12fc4 <tcgetattr@plt+0x1c00>
   12d84:	movw	r1, #40966	; 0xa006
   12d88:	movt	r1, #1
   12d8c:	mov	r0, r6
   12d90:	bl	1110c <strcmp@plt>
   12d94:	cmp	r0, #0
   12d98:	beq	13020 <tcgetattr@plt+0x1c5c>
   12d9c:	movw	r1, #40970	; 0xa00a
   12da0:	movt	r1, #1
   12da4:	mov	r0, r6
   12da8:	bl	1110c <strcmp@plt>
   12dac:	mov	r1, r0
   12db0:	mov	r0, #1
   12db4:	cmp	r1, #0
   12db8:	popne	{r4, r5, r6, sl, fp, pc}
   12dbc:	movw	r1, #5503	; 0x157f
   12dc0:	strh	r1, [r4, #19]
   12dc4:	mov	r1, #3
   12dc8:	strb	r1, [r4, #17]
   12dcc:	ldr	r1, [r4]
   12dd0:	ldr	r2, [r4, #12]
   12dd4:	orr	r2, r2, #2576	; 0xa10
   12dd8:	str	r2, [r4, #12]
   12ddc:	bic	r1, r1, #2048	; 0x800
   12de0:	str	r1, [r4]
   12de4:	pop	{r4, r5, r6, sl, fp, pc}
   12de8:	ldr	r0, [r4, #8]
   12dec:	cmp	r5, #0
   12df0:	beq	12e04 <tcgetattr@plt+0x1a40>
   12df4:	bic	r0, r0, #304	; 0x130
   12df8:	orr	r0, r0, #48	; 0x30
   12dfc:	str	r0, [r4, #8]
   12e00:	b	12c10 <tcgetattr@plt+0x184c>
   12e04:	bic	r0, r0, #816	; 0x330
   12e08:	orr	r0, r0, #288	; 0x120
   12e0c:	str	r0, [r4, #8]
   12e10:	b	12c10 <tcgetattr@plt+0x184c>
   12e14:	ldr	r0, [r4, #8]
   12e18:	cmp	r5, #0
   12e1c:	bne	12df4 <tcgetattr@plt+0x1a30>
   12e20:	orr	r0, r0, #800	; 0x320
   12e24:	bic	r0, r0, #16
   12e28:	str	r0, [r4, #8]
   12e2c:	b	12c10 <tcgetattr@plt+0x184c>
   12e30:	ldr	r0, [r4]
   12e34:	cmp	r5, #0
   12e38:	beq	12e68 <tcgetattr@plt+0x1aa4>
   12e3c:	mov	r1, #4
   12e40:	bfi	r0, r1, #6, #3
   12e44:	str	r0, [r4]
   12e48:	ldr	r0, [r4, #4]
   12e4c:	orr	r0, r0, #4
   12e50:	bic	r0, r0, #40	; 0x28
   12e54:	str	r0, [r4, #4]
   12e58:	b	12c10 <tcgetattr@plt+0x184c>
   12e5c:	movw	r0, #5503	; 0x157f
   12e60:	strh	r0, [r4, #19]
   12e64:	b	12c10 <tcgetattr@plt+0x184c>
   12e68:	bic	r0, r0, #256	; 0x100
   12e6c:	str	r0, [r4]
   12e70:	ldr	r0, [r4, #4]
   12e74:	bic	r0, r0, #4
   12e78:	str	r0, [r4, #4]
   12e7c:	b	12c10 <tcgetattr@plt+0x184c>
   12e80:	mov	r0, r4
   12e84:	bl	1358c <tcgetattr@plt+0x21c8>
   12e88:	b	12c10 <tcgetattr@plt+0x184c>
   12e8c:	ldr	r0, [r4, #12]
   12e90:	cmp	r5, #0
   12e94:	biceq	r0, r0, #2
   12e98:	orrne	r0, r0, #2
   12e9c:	str	r0, [r4, #12]
   12ea0:	b	12c10 <tcgetattr@plt+0x184c>
   12ea4:	ldr	r0, [r4, #8]
   12ea8:	bic	r0, r0, #304	; 0x130
   12eac:	cmp	r5, #0
   12eb0:	beq	12f50 <tcgetattr@plt+0x1b8c>
   12eb4:	orr	r0, r0, #288	; 0x120
   12eb8:	str	r0, [r4, #8]
   12ebc:	ldr	r0, [r4]
   12ec0:	orr	r0, r0, #32
   12ec4:	str	r0, [r4]
   12ec8:	b	12c10 <tcgetattr@plt+0x184c>
   12ecc:	ldrb	r1, [r6]
   12ed0:	subs	r0, r1, #99	; 0x63
   12ed4:	movwne	r0, #1
   12ed8:	sub	r1, r1, #114	; 0x72
   12edc:	clz	r1, r1
   12ee0:	lsr	r1, r1, #5
   12ee4:	tst	r1, r5
   12ee8:	bne	12f68 <tcgetattr@plt+0x1ba4>
   12eec:	orrs	r0, r0, r5
   12ef0:	beq	12f68 <tcgetattr@plt+0x1ba4>
   12ef4:	mov	r0, #0
   12ef8:	str	r0, [r4]
   12efc:	mov	r0, #256	; 0x100
   12f00:	strh	r0, [r4, #22]
   12f04:	ldr	r0, [r4, #4]
   12f08:	ldr	r1, [r4, #12]
   12f0c:	bic	r0, r0, #1
   12f10:	str	r0, [r4, #4]
   12f14:	bic	r0, r1, #7
   12f18:	str	r0, [r4, #12]
   12f1c:	b	12c10 <tcgetattr@plt+0x184c>
   12f20:	ldr	r0, [r4, #8]
   12f24:	bic	r0, r0, #304	; 0x130
   12f28:	cmp	r5, #0
   12f2c:	beq	12f8c <tcgetattr@plt+0x1bc8>
   12f30:	orr	r0, r0, #288	; 0x120
   12f34:	str	r0, [r4, #8]
   12f38:	ldm	r4, {r0, r1}
   12f3c:	orr	r0, r0, #32
   12f40:	str	r0, [r4]
   12f44:	orr	r0, r1, #1
   12f48:	str	r0, [r4, #4]
   12f4c:	b	12c10 <tcgetattr@plt+0x184c>
   12f50:	orr	r0, r0, #48	; 0x30
   12f54:	str	r0, [r4, #8]
   12f58:	ldr	r0, [r4]
   12f5c:	bic	r0, r0, #32
   12f60:	str	r0, [r4]
   12f64:	b	12c10 <tcgetattr@plt+0x184c>
   12f68:	ldm	r4, {r0, r1}
   12f6c:	ldr	r2, [r4, #12]
   12f70:	movw	r3, #1318	; 0x526
   12f74:	orr	r0, r0, r3
   12f78:	orr	r1, r1, #1
   12f7c:	stm	r4, {r0, r1}
   12f80:	orr	r0, r2, #3
   12f84:	str	r0, [r4, #12]
   12f88:	b	12c10 <tcgetattr@plt+0x184c>
   12f8c:	orr	r0, r0, #48	; 0x30
   12f90:	str	r0, [r4, #8]
   12f94:	ldm	r4, {r0, r1}
   12f98:	bic	r0, r0, #32
   12f9c:	str	r0, [r4]
   12fa0:	bic	r0, r1, #1
   12fa4:	str	r0, [r4, #4]
   12fa8:	b	12c10 <tcgetattr@plt+0x184c>
   12fac:	ldr	r0, [r4]
   12fb0:	cmp	r5, #0
   12fb4:	biceq	r0, r0, #2048	; 0x800
   12fb8:	orrne	r0, r0, #2048	; 0x800
   12fbc:	str	r0, [r4]
   12fc0:	b	12c10 <tcgetattr@plt+0x184c>
   12fc4:	ldr	r0, [r4, #12]
   12fc8:	cmp	r5, #0
   12fcc:	beq	13000 <tcgetattr@plt+0x1c3c>
   12fd0:	bic	r0, r0, #4
   12fd4:	str	r0, [r4, #12]
   12fd8:	ldm	r4, {r0, r1}
   12fdc:	bic	r0, r0, #512	; 0x200
   12fe0:	bic	r1, r1, #2
   12fe4:	b	13014 <tcgetattr@plt+0x1c50>
   12fe8:	ldr	r0, [r4, #4]
   12fec:	cmp	r5, #0
   12ff0:	biceq	r0, r0, #6144	; 0x1800
   12ff4:	orrne	r0, r0, #6144	; 0x1800
   12ff8:	str	r0, [r4, #4]
   12ffc:	b	12c10 <tcgetattr@plt+0x184c>
   13000:	orr	r0, r0, #4
   13004:	str	r0, [r4, #12]
   13008:	ldm	r4, {r0, r1}
   1300c:	orr	r0, r0, #512	; 0x200
   13010:	orr	r1, r1, #2
   13014:	str	r0, [r4]
   13018:	str	r1, [r4, #4]
   1301c:	b	12c10 <tcgetattr@plt+0x184c>
   13020:	ldr	r0, [r4, #12]
   13024:	orr	r0, r0, #2576	; 0xa10
   13028:	str	r0, [r4, #12]
   1302c:	b	12c10 <tcgetattr@plt+0x184c>
   13030:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13034:	add	fp, sp, #24
   13038:	mov	r9, r2
   1303c:	mov	r6, r1
   13040:	mov	r5, r0
   13044:	ldr	r4, [r0]
   13048:	movw	r1, #41091	; 0xa083
   1304c:	movt	r1, #1
   13050:	mov	r0, r4
   13054:	bl	1110c <strcmp@plt>
   13058:	cmp	r0, #0
   1305c:	beq	130e8 <tcgetattr@plt+0x1d24>
   13060:	movw	r1, #41095	; 0xa087
   13064:	movt	r1, #1
   13068:	mov	r0, r4
   1306c:	bl	1110c <strcmp@plt>
   13070:	cmp	r0, #0
   13074:	beq	130e8 <tcgetattr@plt+0x1d24>
   13078:	ldrb	r4, [r6]
   1307c:	cmp	r4, #0
   13080:	beq	130fc <tcgetattr@plt+0x1d38>
   13084:	ldrb	r8, [r6, #1]
   13088:	cmp	r8, #0
   1308c:	beq	130fc <tcgetattr@plt+0x1d38>
   13090:	movw	r1, #41100	; 0xa08c
   13094:	movt	r1, #1
   13098:	mov	r0, r6
   1309c:	bl	1110c <strcmp@plt>
   130a0:	mov	r7, #0
   130a4:	cmp	r0, #0
   130a8:	beq	13108 <tcgetattr@plt+0x1d44>
   130ac:	movw	r1, #41103	; 0xa08f
   130b0:	movt	r1, #1
   130b4:	mov	r0, r6
   130b8:	bl	1110c <strcmp@plt>
   130bc:	cmp	r0, #0
   130c0:	beq	13108 <tcgetattr@plt+0x1d44>
   130c4:	cmp	r4, #94	; 0x5e
   130c8:	bne	130e8 <tcgetattr@plt+0x1d24>
   130cc:	mov	r7, #127	; 0x7f
   130d0:	cmp	r8, #63	; 0x3f
   130d4:	beq	13108 <tcgetattr@plt+0x1d44>
   130d8:	mov	r0, r8
   130dc:	bl	136a0 <tcgetattr@plt+0x22dc>
   130e0:	and	r7, r8, #159	; 0x9f
   130e4:	b	13108 <tcgetattr@plt+0x1d44>
   130e8:	mov	r0, r6
   130ec:	mov	r1, #255	; 0xff
   130f0:	bl	13230 <tcgetattr@plt+0x1e6c>
   130f4:	mov	r7, r0
   130f8:	b	13108 <tcgetattr@plt+0x1d44>
   130fc:	mov	r0, r4
   13100:	bl	136a0 <tcgetattr@plt+0x22dc>
   13104:	mov	r7, r4
   13108:	ldr	r0, [r5, #8]
   1310c:	add	r0, r9, r0
   13110:	strb	r7, [r0, #17]
   13114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13118:	push	{r4, r5, r6, sl, fp, lr}
   1311c:	add	fp, sp, #16
   13120:	mov	r4, r2
   13124:	mov	r6, r0
   13128:	mov	r0, r1
   1312c:	bl	13444 <tcgetattr@plt+0x2080>
   13130:	mov	r5, r0
   13134:	mvn	r0, #2
   13138:	tst	r6, r0
   1313c:	bne	1314c <tcgetattr@plt+0x1d88>
   13140:	mov	r0, r4
   13144:	mov	r1, r5
   13148:	bl	112bc <cfsetispeed@plt>
   1314c:	sub	r0, r6, #1
   13150:	cmp	r0, #1
   13154:	pophi	{r4, r5, r6, sl, fp, pc}
   13158:	mov	r0, r4
   1315c:	mov	r1, r5
   13160:	pop	{r4, r5, r6, sl, fp, lr}
   13164:	b	111a8 <cfsetospeed@plt>
   13168:	push	{r4, r5, r6, r7, fp, lr}
   1316c:	add	fp, sp, #16
   13170:	sub	sp, sp, #8
   13174:	mov	r4, r2
   13178:	mov	r5, r1
   1317c:	mov	r6, r0
   13180:	mov	r1, sp
   13184:	mov	r0, #0
   13188:	bl	136a4 <tcgetattr@plt+0x22e0>
   1318c:	cmp	r0, #0
   13190:	beq	131b0 <tcgetattr@plt+0x1dec>
   13194:	bl	112d4 <__errno_location@plt>
   13198:	ldr	r7, [r0]
   1319c:	mov	r0, #0
   131a0:	cmp	r7, #22
   131a4:	bne	1320c <tcgetattr@plt+0x1e48>
   131a8:	str	r0, [sp, #4]
   131ac:	str	r0, [sp]
   131b0:	cmp	r6, #0
   131b4:	strhpl	r6, [sp]
   131b8:	cmp	r5, #0
   131bc:	strhpl	r5, [sp, #2]
   131c0:	mov	r2, sp
   131c4:	mov	r0, #0
   131c8:	movw	r1, #21524	; 0x5414
   131cc:	bl	111c0 <ioctl@plt>
   131d0:	cmp	r0, #0
   131d4:	subeq	sp, fp, #16
   131d8:	popeq	{r4, r5, r6, r7, fp, pc}
   131dc:	bl	112d4 <__errno_location@plt>
   131e0:	ldr	r5, [r0]
   131e4:	mov	r0, #0
   131e8:	mov	r1, #3
   131ec:	mov	r2, r4
   131f0:	bl	1586c <tcgetattr@plt+0x44a8>
   131f4:	mov	r3, r0
   131f8:	movw	r2, #44247	; 0xacd7
   131fc:	movt	r2, #1
   13200:	mov	r0, #1
   13204:	mov	r1, r5
   13208:	bl	11214 <error@plt>
   1320c:	mov	r1, #3
   13210:	mov	r2, r4
   13214:	bl	1586c <tcgetattr@plt+0x44a8>
   13218:	mov	r3, r0
   1321c:	movw	r2, #44247	; 0xacd7
   13220:	movt	r2, #1
   13224:	mov	r0, #1
   13228:	mov	r1, r7
   1322c:	bl	11214 <error@plt>
   13230:	push	{r4, r5, r6, sl, fp, lr}
   13234:	add	fp, sp, #16
   13238:	sub	sp, sp, #24
   1323c:	mov	r4, r1
   13240:	mov	r5, r0
   13244:	mov	r6, #0
   13248:	movw	r1, #41112	; 0xa098
   1324c:	movt	r1, #1
   13250:	mov	r0, #0
   13254:	mov	r2, #5
   13258:	bl	11160 <dcgettext@plt>
   1325c:	movw	r1, #41109	; 0xa095
   13260:	movt	r1, #1
   13264:	stm	sp, {r4, r6}
   13268:	str	r1, [sp, #8]
   1326c:	str	r0, [sp, #12]
   13270:	str	r6, [sp, #16]
   13274:	mov	r0, r5
   13278:	mov	r1, #0
   1327c:	mov	r2, #0
   13280:	mov	r3, #0
   13284:	bl	16658 <tcgetattr@plt+0x5294>
   13288:	sub	sp, fp, #16
   1328c:	pop	{r4, r5, r6, sl, fp, pc}
   13290:	push	{r4, r5, r6, sl, fp, lr}
   13294:	add	fp, sp, #16
   13298:	sub	sp, sp, #8
   1329c:	mov	r4, r1
   132a0:	mov	r5, r0
   132a4:	mov	r1, sp
   132a8:	mov	r0, #0
   132ac:	bl	136a4 <tcgetattr@plt+0x22e0>
   132b0:	cmp	r0, #0
   132b4:	beq	132d8 <tcgetattr@plt+0x1f14>
   132b8:	bl	112d4 <__errno_location@plt>
   132bc:	ldr	r6, [r0]
   132c0:	cmp	r6, #22
   132c4:	bne	13318 <tcgetattr@plt+0x1f54>
   132c8:	cmp	r5, #0
   132cc:	beq	13340 <tcgetattr@plt+0x1f7c>
   132d0:	sub	sp, fp, #16
   132d4:	pop	{r4, r5, r6, sl, fp, pc}
   132d8:	movw	r1, #41177	; 0xa0d9
   132dc:	movt	r1, #1
   132e0:	movw	r0, #41198	; 0xa0ee
   132e4:	movt	r0, #1
   132e8:	cmp	r5, #0
   132ec:	movne	r0, r1
   132f0:	ldrh	r2, [sp, #2]
   132f4:	ldrh	r1, [sp]
   132f8:	bl	136b0 <tcgetattr@plt+0x22ec>
   132fc:	cmp	r5, #0
   13300:	movweq	r0, #49668	; 0xc204
   13304:	movteq	r0, #2
   13308:	moveq	r1, #0
   1330c:	streq	r1, [r0]
   13310:	sub	sp, fp, #16
   13314:	pop	{r4, r5, r6, sl, fp, pc}
   13318:	mov	r0, #0
   1331c:	mov	r1, #3
   13320:	mov	r2, r4
   13324:	bl	1586c <tcgetattr@plt+0x44a8>
   13328:	mov	r3, r0
   1332c:	movw	r2, #44247	; 0xacd7
   13330:	movt	r2, #1
   13334:	mov	r0, #1
   13338:	mov	r1, r6
   1333c:	bl	11214 <error@plt>
   13340:	movw	r1, #41137	; 0xa0b1
   13344:	movt	r1, #1
   13348:	mov	r0, #0
   1334c:	mov	r2, #5
   13350:	bl	11160 <dcgettext@plt>
   13354:	mov	r5, r0
   13358:	mov	r0, #0
   1335c:	mov	r1, #3
   13360:	mov	r2, r4
   13364:	bl	1586c <tcgetattr@plt+0x44a8>
   13368:	mov	r3, r0
   1336c:	mov	r0, #1
   13370:	mov	r1, #0
   13374:	mov	r2, r5
   13378:	bl	11214 <error@plt>
   1337c:	push	{r4, r5, r6, r7, fp, lr}
   13380:	add	fp, sp, #16
   13384:	mov	r4, r1
   13388:	mov	r5, r0
   1338c:	bl	1116c <cfgetispeed@plt>
   13390:	cmp	r0, #0
   13394:	beq	133b4 <tcgetattr@plt+0x1ff0>
   13398:	mov	r0, r5
   1339c:	bl	1116c <cfgetispeed@plt>
   133a0:	mov	r6, r0
   133a4:	mov	r0, r5
   133a8:	bl	112c8 <cfgetospeed@plt>
   133ac:	cmp	r6, r0
   133b0:	bne	133e8 <tcgetattr@plt+0x2024>
   133b4:	movw	r0, #41223	; 0xa107
   133b8:	movt	r0, #1
   133bc:	movw	r6, #41243	; 0xa11b
   133c0:	movt	r6, #1
   133c4:	cmp	r4, #0
   133c8:	movne	r6, r0
   133cc:	mov	r0, r5
   133d0:	bl	112c8 <cfgetospeed@plt>
   133d4:	bl	1377c <tcgetattr@plt+0x23b8>
   133d8:	mov	r1, r0
   133dc:	mov	r0, r6
   133e0:	bl	136b0 <tcgetattr@plt+0x22ec>
   133e4:	b	1342c <tcgetattr@plt+0x2068>
   133e8:	movw	r0, #41205	; 0xa0f5
   133ec:	movt	r0, #1
   133f0:	movw	r6, #41239	; 0xa117
   133f4:	movt	r6, #1
   133f8:	cmp	r4, #0
   133fc:	movne	r6, r0
   13400:	mov	r0, r5
   13404:	bl	1116c <cfgetispeed@plt>
   13408:	bl	1377c <tcgetattr@plt+0x23b8>
   1340c:	mov	r7, r0
   13410:	mov	r0, r5
   13414:	bl	112c8 <cfgetospeed@plt>
   13418:	bl	1377c <tcgetattr@plt+0x23b8>
   1341c:	mov	r2, r0
   13420:	mov	r0, r6
   13424:	mov	r1, r7
   13428:	bl	136b0 <tcgetattr@plt+0x22ec>
   1342c:	cmp	r4, #0
   13430:	movweq	r0, #49668	; 0xc204
   13434:	movteq	r0, #2
   13438:	moveq	r1, #0
   1343c:	streq	r1, [r0]
   13440:	pop	{r4, r5, r6, r7, fp, pc}
   13444:	push	{r4, r5, r6, sl, fp, lr}
   13448:	add	fp, sp, #16
   1344c:	mov	r4, r0
   13450:	mov	r5, #0
   13454:	movw	r6, #43796	; 0xab14
   13458:	movt	r6, #1
   1345c:	ldr	r1, [r6, r5]
   13460:	mov	r0, r4
   13464:	bl	1110c <strcmp@plt>
   13468:	cmp	r0, #0
   1346c:	beq	13484 <tcgetattr@plt+0x20c0>
   13470:	add	r5, r5, #12
   13474:	cmp	r5, #408	; 0x198
   13478:	bne	1345c <tcgetattr@plt+0x2098>
   1347c:	mvn	r0, #0
   13480:	pop	{r4, r5, r6, sl, fp, pc}
   13484:	add	r0, r6, r5
   13488:	ldr	r0, [r0, #4]
   1348c:	pop	{r4, r5, r6, sl, fp, pc}
   13490:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13494:	add	fp, sp, #24
   13498:	sub	sp, sp, #24
   1349c:	mov	r5, r1
   134a0:	mov	r8, #0
   134a4:	add	r7, sp, #8
   134a8:	add	r6, sp, #4
   134ac:	mov	r4, #0
   134b0:	add	r2, r7, r4
   134b4:	mov	r1, r6
   134b8:	bl	137b4 <tcgetattr@plt+0x23f0>
   134bc:	cmp	r0, #0
   134c0:	bne	13528 <tcgetattr@plt+0x2164>
   134c4:	ldr	r0, [sp, #4]
   134c8:	add	r4, r4, #4
   134cc:	add	r0, r0, #1
   134d0:	cmp	r4, #16
   134d4:	bne	134b0 <tcgetattr@plt+0x20ec>
   134d8:	add	r7, sp, #8
   134dc:	ldm	r7, {r1, r2, r3, r7}
   134e0:	stm	r5, {r1, r2, r3, r7}
   134e4:	add	r6, r5, #17
   134e8:	mov	r8, #0
   134ec:	add	r5, sp, #4
   134f0:	mov	r7, #0
   134f4:	add	r2, r6, r7
   134f8:	subs	r3, r7, #31
   134fc:	movwne	r3, #58	; 0x3a
   13500:	mov	r1, r5
   13504:	bl	1381c <tcgetattr@plt+0x2458>
   13508:	cmp	r0, #0
   1350c:	bne	13528 <tcgetattr@plt+0x2164>
   13510:	ldr	r0, [sp, #4]
   13514:	add	r7, r7, #1
   13518:	add	r0, r0, #1
   1351c:	cmp	r7, #32
   13520:	bne	134f4 <tcgetattr@plt+0x2130>
   13524:	mov	r8, #1
   13528:	mov	r0, r8
   1352c:	sub	sp, fp, #24
   13530:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13534:	push	{fp, lr}
   13538:	mov	fp, sp
   1353c:	cmp	r0, #4
   13540:	bhi	13588 <tcgetattr@plt+0x21c4>
   13544:	mov	r2, r0
   13548:	mov	r0, #0
   1354c:	add	r3, pc, #0
   13550:	ldr	pc, [r3, r2, lsl #2]
   13554:	andeq	r3, r1, r8, ror #10
   13558:	andeq	r3, r1, r8, ror r5
   1355c:	andeq	r3, r1, r0, lsl #11
   13560:	andeq	r3, r1, r0, ror r5
   13564:	andeq	r3, r1, ip, ror #10
   13568:	add	r0, r1, #8
   1356c:	pop	{fp, pc}
   13570:	add	r0, r1, #12
   13574:	pop	{fp, pc}
   13578:	mov	r0, r1
   1357c:	pop	{fp, pc}
   13580:	add	r0, r1, #4
   13584:	pop	{fp, pc}
   13588:	bl	11394 <abort@plt>
   1358c:	push	{r4, r5, r6, r7, fp, lr}
   13590:	add	fp, sp, #16
   13594:	mov	r4, r0
   13598:	mov	r0, #0
   1359c:	movw	r1, #43568	; 0xaa30
   135a0:	movt	r1, #1
   135a4:	add	r2, r1, r0
   135a8:	ldr	r3, [r2, #8]
   135ac:	add	r3, r4, r3
   135b0:	ldrb	r2, [r2, #4]
   135b4:	strb	r2, [r3, #17]
   135b8:	add	r0, r0, #12
   135bc:	cmp	r0, #216	; 0xd8
   135c0:	bne	135a4 <tcgetattr@plt+0x21e0>
   135c4:	movw	r5, #63756	; 0xf90c
   135c8:	movt	r5, #65535	; 0xffff
   135cc:	movw	r6, #41768	; 0xa328
   135d0:	movt	r6, #1
   135d4:	b	135e4 <tcgetattr@plt+0x2220>
   135d8:	str	r1, [r0]
   135dc:	adds	r5, r5, #20
   135e0:	beq	1365c <tcgetattr@plt+0x2298>
   135e4:	add	r7, r6, r5
   135e8:	ldrb	r0, [r7, #1788]	; 0x6fc
   135ec:	tst	r0, #16
   135f0:	bne	135dc <tcgetattr@plt+0x2218>
   135f4:	tst	r0, #1
   135f8:	bne	13630 <tcgetattr@plt+0x226c>
   135fc:	tst	r0, #2
   13600:	beq	135dc <tcgetattr@plt+0x2218>
   13604:	ldr	r0, [r7, #1784]	; 0x6f8
   13608:	mov	r1, r4
   1360c:	bl	13534 <tcgetattr@plt+0x2170>
   13610:	cmp	r0, #0
   13614:	beq	13680 <tcgetattr@plt+0x22bc>
   13618:	ldr	r1, [r7, #1792]	; 0x700
   1361c:	ldr	r2, [r7, #1796]	; 0x704
   13620:	ldr	r3, [r0]
   13624:	bic	r2, r3, r2
   13628:	bic	r1, r2, r1
   1362c:	b	135d8 <tcgetattr@plt+0x2214>
   13630:	ldr	r0, [r7, #1784]	; 0x6f8
   13634:	mov	r1, r4
   13638:	bl	13534 <tcgetattr@plt+0x2170>
   1363c:	cmp	r0, #0
   13640:	beq	13660 <tcgetattr@plt+0x229c>
   13644:	ldr	r1, [r7, #1792]	; 0x700
   13648:	ldr	r2, [r7, #1796]	; 0x704
   1364c:	ldr	r3, [r0]
   13650:	bic	r2, r3, r2
   13654:	orr	r1, r2, r1
   13658:	b	135d8 <tcgetattr@plt+0x2214>
   1365c:	pop	{r4, r5, r6, r7, fp, pc}
   13660:	movw	r0, #40974	; 0xa00e
   13664:	movt	r0, #1
   13668:	movw	r1, #40980	; 0xa014
   1366c:	movt	r1, #1
   13670:	movw	r3, #40991	; 0xa01f
   13674:	movt	r3, #1
   13678:	movw	r2, #2252	; 0x8cc
   1367c:	bl	113b8 <__assert_fail@plt>
   13680:	movw	r0, #40974	; 0xa00e
   13684:	movt	r0, #1
   13688:	movw	r1, #40980	; 0xa014
   1368c:	movt	r1, #1
   13690:	movw	r3, #40991	; 0xa01f
   13694:	movt	r3, #1
   13698:	movw	r2, #2258	; 0x8d2
   1369c:	bl	113b8 <__assert_fail@plt>
   136a0:	bx	lr
   136a4:	mov	r2, r1
   136a8:	movw	r1, #21523	; 0x5413
   136ac:	b	111c0 <ioctl@plt>
   136b0:	sub	sp, sp, #12
   136b4:	push	{r4, r5, fp, lr}
   136b8:	add	fp, sp, #8
   136bc:	sub	sp, sp, #12
   136c0:	mov	r4, r0
   136c4:	add	r0, fp, #8
   136c8:	stm	r0, {r1, r2, r3}
   136cc:	add	r3, fp, #8
   136d0:	str	r3, [sp, #8]
   136d4:	add	r0, sp, #4
   136d8:	mov	r1, #1
   136dc:	mov	r2, r4
   136e0:	bl	112ec <__vasprintf_chk@plt>
   136e4:	cmn	r0, #1
   136e8:	ble	13778 <tcgetattr@plt+0x23b4>
   136ec:	mov	r4, r0
   136f0:	movw	r5, #49668	; 0xc204
   136f4:	movt	r5, #2
   136f8:	ldr	r0, [r5]
   136fc:	cmp	r0, #1
   13700:	blt	13740 <tcgetattr@plt+0x237c>
   13704:	movw	r1, #49664	; 0xc200
   13708:	movt	r1, #2
   1370c:	ldr	r1, [r1]
   13710:	sub	r0, r1, r0
   13714:	cmp	r0, r4
   13718:	bge	1372c <tcgetattr@plt+0x2368>
   1371c:	mov	r0, #10
   13720:	bl	113ac <putchar_unlocked@plt>
   13724:	mov	r0, #0
   13728:	b	1373c <tcgetattr@plt+0x2378>
   1372c:	mov	r0, #32
   13730:	bl	113ac <putchar_unlocked@plt>
   13734:	ldr	r0, [r5]
   13738:	add	r0, r0, #1
   1373c:	str	r0, [r5]
   13740:	movw	r0, #49524	; 0xc174
   13744:	movt	r0, #2
   13748:	ldr	r1, [r0]
   1374c:	ldr	r0, [sp, #4]
   13750:	bl	110f4 <fputs_unlocked@plt>
   13754:	ldr	r0, [sp, #4]
   13758:	bl	14190 <tcgetattr@plt+0x2dcc>
   1375c:	ldr	r0, [r5]
   13760:	add	r0, r0, r4
   13764:	str	r0, [r5]
   13768:	sub	sp, fp, #8
   1376c:	pop	{r4, r5, fp, lr}
   13770:	add	sp, sp, #12
   13774:	bx	lr
   13778:	bl	16614 <tcgetattr@plt+0x5250>
   1377c:	mov	r1, #0
   13780:	movw	ip, #43796	; 0xab14
   13784:	movt	ip, #1
   13788:	add	r3, ip, r1
   1378c:	ldr	r2, [r3, #4]
   13790:	cmp	r2, r0
   13794:	beq	137ac <tcgetattr@plt+0x23e8>
   13798:	add	r1, r1, #12
   1379c:	cmp	r1, #408	; 0x198
   137a0:	moveq	r0, #0
   137a4:	bxeq	lr
   137a8:	b	13788 <tcgetattr@plt+0x23c4>
   137ac:	ldr	r0, [r3, #8]
   137b0:	bx	lr
   137b4:	push	{r4, r5, r6, r7, fp, lr}
   137b8:	add	fp, sp, #16
   137bc:	mov	r4, r2
   137c0:	mov	r6, r1
   137c4:	mov	r5, r0
   137c8:	bl	112d4 <__errno_location@plt>
   137cc:	mov	r7, r0
   137d0:	mov	r0, #0
   137d4:	str	r0, [r7]
   137d8:	mov	r0, r5
   137dc:	mov	r1, r6
   137e0:	mov	r2, #16
   137e4:	bl	11298 <strtoul@plt>
   137e8:	mov	r1, r0
   137ec:	ldr	r2, [r7]
   137f0:	mvn	r0, #0
   137f4:	cmp	r2, #0
   137f8:	popne	{r4, r5, r6, r7, fp, pc}
   137fc:	ldr	r2, [r6]
   13800:	cmp	r2, r5
   13804:	beq	13818 <tcgetattr@plt+0x2454>
   13808:	ldrb	r2, [r2]
   1380c:	cmp	r2, #58	; 0x3a
   13810:	streq	r1, [r4]
   13814:	moveq	r0, #0
   13818:	pop	{r4, r5, r6, r7, fp, pc}
   1381c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13820:	add	fp, sp, #24
   13824:	mov	r5, r3
   13828:	mov	r8, r2
   1382c:	mov	r7, r1
   13830:	mov	r6, r0
   13834:	bl	112d4 <__errno_location@plt>
   13838:	mov	r4, r0
   1383c:	mov	r0, #0
   13840:	str	r0, [r4]
   13844:	mov	r0, r6
   13848:	mov	r1, r7
   1384c:	mov	r2, #16
   13850:	bl	11298 <strtoul@plt>
   13854:	mov	r1, r0
   13858:	ldr	r2, [r4]
   1385c:	mvn	r0, #0
   13860:	cmp	r2, #0
   13864:	bne	1388c <tcgetattr@plt+0x24c8>
   13868:	cmp	r1, #255	; 0xff
   1386c:	bhi	1388c <tcgetattr@plt+0x24c8>
   13870:	ldr	r2, [r7]
   13874:	cmp	r2, r6
   13878:	beq	1388c <tcgetattr@plt+0x24c8>
   1387c:	ldrb	r2, [r2]
   13880:	cmp	r2, r5
   13884:	strbeq	r1, [r8]
   13888:	moveq	r0, #0
   1388c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13894:	add	fp, sp, #28
   13898:	sub	sp, sp, #4
   1389c:	movw	r4, #49544	; 0xc188
   138a0:	movt	r4, #2
   138a4:	mov	sl, #1
   138a8:	mov	r0, r4
   138ac:	mov	r1, #1
   138b0:	bl	1337c <tcgetattr@plt+0x1fb8>
   138b4:	ldrb	r1, [r4, #16]
   138b8:	movw	r0, #41433	; 0xa1d9
   138bc:	movt	r0, #1
   138c0:	bl	136b0 <tcgetattr@plt+0x22ec>
   138c4:	mov	r0, #10
   138c8:	bl	113ac <putchar_unlocked@plt>
   138cc:	movw	r1, #49668	; 0xc204
   138d0:	movt	r1, #2
   138d4:	mov	r0, #0
   138d8:	str	r0, [r1]
   138dc:	movw	r0, #43568	; 0xaa30
   138e0:	movt	r0, #1
   138e4:	add	r8, r0, #8
   138e8:	movw	r7, #41024	; 0xa040
   138ec:	movt	r7, #1
   138f0:	movw	r5, #41091	; 0xa083
   138f4:	movt	r5, #1
   138f8:	movw	r9, #41077	; 0xa075
   138fc:	movt	r9, #1
   13900:	b	13920 <tcgetattr@plt+0x255c>
   13904:	ldr	r7, [r8, #4]
   13908:	mov	r0, r7
   1390c:	mov	r1, r5
   13910:	bl	1110c <strcmp@plt>
   13914:	add	r8, r8, #12
   13918:	cmp	r0, #0
   1391c:	beq	13970 <tcgetattr@plt+0x25ac>
   13920:	ldr	r0, [r8]
   13924:	add	r0, r4, r0
   13928:	ldrb	r6, [r0, #17]
   1392c:	ldrb	r0, [r8, #-4]
   13930:	cmp	r6, r0
   13934:	beq	13904 <tcgetattr@plt+0x2540>
   13938:	mov	r0, r7
   1393c:	mov	r1, r9
   13940:	bl	1110c <strcmp@plt>
   13944:	cmp	r0, #0
   13948:	beq	13904 <tcgetattr@plt+0x2540>
   1394c:	mov	r0, r6
   13950:	bl	13d7c <tcgetattr@plt+0x29b8>
   13954:	mov	r2, r0
   13958:	movw	r0, #41444	; 0xa1e4
   1395c:	movt	r0, #1
   13960:	mov	r1, r7
   13964:	bl	136b0 <tcgetattr@plt+0x22ec>
   13968:	mov	sl, #0
   1396c:	b	13904 <tcgetattr@plt+0x2540>
   13970:	ldrb	r0, [r4, #12]
   13974:	tst	r0, #2
   13978:	bne	13994 <tcgetattr@plt+0x25d0>
   1397c:	ldrb	r2, [r4, #22]
   13980:	ldrb	r1, [r4, #23]
   13984:	movw	r0, #41453	; 0xa1ed
   13988:	movt	r0, #1
   1398c:	bl	136b0 <tcgetattr@plt+0x22ec>
   13990:	b	139a4 <tcgetattr@plt+0x25e0>
   13994:	tst	sl, #1
   13998:	bne	139a4 <tcgetattr@plt+0x25e0>
   1399c:	mov	r0, #10
   139a0:	bl	113ac <putchar_unlocked@plt>
   139a4:	mov	r1, #0
   139a8:	movw	r0, #49668	; 0xc204
   139ac:	movt	r0, #2
   139b0:	str	r1, [r0]
   139b4:	mov	r9, #1
   139b8:	movw	r6, #63756	; 0xf90c
   139bc:	movt	r6, #65535	; 0xffff
   139c0:	movw	r8, #41768	; 0xa328
   139c4:	movt	r8, #1
   139c8:	movw	r4, #49544	; 0xc188
   139cc:	movt	r4, #2
   139d0:	mov	r0, #0
   139d4:	b	139ec <tcgetattr@plt+0x2628>
   139d8:	bl	136b0 <tcgetattr@plt+0x22ec>
   139dc:	mov	r9, #0
   139e0:	mov	r0, r7
   139e4:	adds	r6, r6, #20
   139e8:	beq	13aac <tcgetattr@plt+0x26e8>
   139ec:	add	r5, r8, r6
   139f0:	ldrb	sl, [r5, #1788]	; 0x6fc
   139f4:	tst	sl, #8
   139f8:	bne	139e4 <tcgetattr@plt+0x2620>
   139fc:	ldr	r7, [r5, #1784]	; 0x6f8
   13a00:	subs	r1, r7, r0
   13a04:	movwne	r1, #1
   13a08:	sub	r0, r7, r0
   13a0c:	clz	r0, r0
   13a10:	lsr	r0, r0, #5
   13a14:	orr	r0, r9, r0
   13a18:	tst	r0, #1
   13a1c:	beq	13a28 <tcgetattr@plt+0x2664>
   13a20:	orr	r9, r9, r1
   13a24:	b	13a44 <tcgetattr@plt+0x2680>
   13a28:	mov	r0, #10
   13a2c:	bl	113ac <putchar_unlocked@plt>
   13a30:	movw	r0, #49668	; 0xc204
   13a34:	movt	r0, #2
   13a38:	mov	r1, #0
   13a3c:	str	r1, [r0]
   13a40:	mov	r9, #1
   13a44:	mov	r0, r7
   13a48:	mov	r1, r4
   13a4c:	bl	13534 <tcgetattr@plt+0x2170>
   13a50:	ldr	r1, [r5, #1796]	; 0x704
   13a54:	cmp	r1, #0
   13a58:	ldreq	r1, [r5, #1792]	; 0x700
   13a5c:	cmp	r0, #0
   13a60:	beq	13ad4 <tcgetattr@plt+0x2710>
   13a64:	ldr	r0, [r0]
   13a68:	and	r0, r0, r1
   13a6c:	ldr	r1, [r5, #1792]	; 0x700
   13a70:	cmp	r0, r1
   13a74:	bne	13a90 <tcgetattr@plt+0x26cc>
   13a78:	tst	sl, #2
   13a7c:	beq	139e0 <tcgetattr@plt+0x261c>
   13a80:	ldr	r1, [r5, #1780]	; 0x6f4
   13a84:	movw	r0, #44247	; 0xacd7
   13a88:	movt	r0, #1
   13a8c:	b	139d8 <tcgetattr@plt+0x2614>
   13a90:	and	r0, sl, #5
   13a94:	cmp	r0, #5
   13a98:	bne	139e0 <tcgetattr@plt+0x261c>
   13a9c:	ldr	r1, [r5, #1780]	; 0x6f4
   13aa0:	movw	r0, #41516	; 0xa22c
   13aa4:	movt	r0, #1
   13aa8:	b	139d8 <tcgetattr@plt+0x2614>
   13aac:	tst	r9, #1
   13ab0:	bne	13abc <tcgetattr@plt+0x26f8>
   13ab4:	mov	r0, #10
   13ab8:	bl	113ac <putchar_unlocked@plt>
   13abc:	mov	r0, #0
   13ac0:	movw	r1, #49668	; 0xc204
   13ac4:	movt	r1, #2
   13ac8:	str	r0, [r1]
   13acc:	sub	sp, fp, #28
   13ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad4:	movw	r0, #40974	; 0xa00e
   13ad8:	movt	r0, #1
   13adc:	movw	r1, #40980	; 0xa014
   13ae0:	movt	r1, #1
   13ae4:	movw	r3, #41477	; 0xa205
   13ae8:	movt	r3, #1
   13aec:	movw	r2, #1953	; 0x7a1
   13af0:	bl	113b8 <__assert_fail@plt>
   13af4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13af8:	add	fp, sp, #28
   13afc:	sub	sp, sp, #4
   13b00:	mov	r4, r0
   13b04:	movw	r8, #49544	; 0xc188
   13b08:	movt	r8, #2
   13b0c:	mov	r0, r8
   13b10:	mov	r1, #1
   13b14:	bl	1337c <tcgetattr@plt+0x1fb8>
   13b18:	mov	r0, #1
   13b1c:	mov	r1, r4
   13b20:	bl	13290 <tcgetattr@plt+0x1ecc>
   13b24:	ldrb	r1, [r8, #16]
   13b28:	movw	r0, #41433	; 0xa1d9
   13b2c:	movt	r0, #1
   13b30:	bl	136b0 <tcgetattr@plt+0x22ec>
   13b34:	mov	r0, #10
   13b38:	bl	113ac <putchar_unlocked@plt>
   13b3c:	movw	r1, #49668	; 0xc204
   13b40:	movt	r1, #2
   13b44:	mov	r0, #0
   13b48:	str	r0, [r1]
   13b4c:	movw	r0, #43568	; 0xaa30
   13b50:	movt	r0, #1
   13b54:	add	r7, r0, #8
   13b58:	movw	r4, #41024	; 0xa040
   13b5c:	movt	r4, #1
   13b60:	movw	r5, #41077	; 0xa075
   13b64:	movt	r5, #1
   13b68:	movw	r6, #41091	; 0xa083
   13b6c:	movt	r6, #1
   13b70:	movw	r9, #41444	; 0xa1e4
   13b74:	movt	r9, #1
   13b78:	b	13b98 <tcgetattr@plt+0x27d4>
   13b7c:	ldr	r4, [r7, #4]
   13b80:	mov	r0, r4
   13b84:	mov	r1, r6
   13b88:	bl	1110c <strcmp@plt>
   13b8c:	add	r7, r7, #12
   13b90:	cmp	r0, #0
   13b94:	beq	13bd0 <tcgetattr@plt+0x280c>
   13b98:	mov	r0, r4
   13b9c:	mov	r1, r5
   13ba0:	bl	1110c <strcmp@plt>
   13ba4:	cmp	r0, #0
   13ba8:	beq	13b7c <tcgetattr@plt+0x27b8>
   13bac:	ldr	r0, [r7]
   13bb0:	add	r0, r8, r0
   13bb4:	ldrb	r0, [r0, #17]
   13bb8:	bl	13d7c <tcgetattr@plt+0x29b8>
   13bbc:	mov	r2, r0
   13bc0:	mov	r0, r9
   13bc4:	mov	r1, r4
   13bc8:	bl	136b0 <tcgetattr@plt+0x22ec>
   13bcc:	b	13b7c <tcgetattr@plt+0x27b8>
   13bd0:	ldrb	r2, [r8, #22]
   13bd4:	ldrb	r1, [r8, #23]
   13bd8:	movw	r0, #41528	; 0xa238
   13bdc:	movt	r0, #1
   13be0:	bl	136b0 <tcgetattr@plt+0x22ec>
   13be4:	movw	r0, #49668	; 0xc204
   13be8:	movt	r0, #2
   13bec:	ldr	r0, [r0]
   13bf0:	cmp	r0, #0
   13bf4:	beq	13c00 <tcgetattr@plt+0x283c>
   13bf8:	mov	r0, #10
   13bfc:	bl	113ac <putchar_unlocked@plt>
   13c00:	mov	r1, #0
   13c04:	movw	r0, #49668	; 0xc204
   13c08:	movt	r0, #2
   13c0c:	str	r1, [r0]
   13c10:	movw	r5, #63756	; 0xf90c
   13c14:	movt	r5, #65535	; 0xffff
   13c18:	movw	r8, #41768	; 0xa328
   13c1c:	movt	r8, #1
   13c20:	movw	r4, #49544	; 0xc188
   13c24:	movt	r4, #2
   13c28:	mov	r9, #0
   13c2c:	b	13c48 <tcgetattr@plt+0x2884>
   13c30:	ldr	r1, [sl, #1780]	; 0x6f4
   13c34:	movw	r0, #44247	; 0xacd7
   13c38:	movt	r0, #1
   13c3c:	bl	136b0 <tcgetattr@plt+0x22ec>
   13c40:	adds	r5, r5, #20
   13c44:	beq	13ccc <tcgetattr@plt+0x2908>
   13c48:	add	sl, r8, r5
   13c4c:	ldrb	r6, [sl, #1788]	; 0x6fc
   13c50:	tst	r6, #8
   13c54:	bne	13c40 <tcgetattr@plt+0x287c>
   13c58:	ldr	r7, [sl, #1784]	; 0x6f8
   13c5c:	cmp	r7, r9
   13c60:	beq	13c80 <tcgetattr@plt+0x28bc>
   13c64:	mov	r0, #10
   13c68:	bl	113ac <putchar_unlocked@plt>
   13c6c:	movw	r0, #49668	; 0xc204
   13c70:	movt	r0, #2
   13c74:	mov	r1, #0
   13c78:	str	r1, [r0]
   13c7c:	mov	r9, r7
   13c80:	mov	r0, r7
   13c84:	mov	r1, r4
   13c88:	bl	13534 <tcgetattr@plt+0x2170>
   13c8c:	ldr	r1, [sl, #1796]	; 0x704
   13c90:	cmp	r1, #0
   13c94:	ldreq	r1, [sl, #1792]	; 0x700
   13c98:	cmp	r0, #0
   13c9c:	beq	13cec <tcgetattr@plt+0x2928>
   13ca0:	ldr	r0, [r0]
   13ca4:	and	r0, r0, r1
   13ca8:	ldr	r1, [sl, #1792]	; 0x700
   13cac:	cmp	r0, r1
   13cb0:	beq	13c30 <tcgetattr@plt+0x286c>
   13cb4:	tst	r6, #4
   13cb8:	beq	13c40 <tcgetattr@plt+0x287c>
   13cbc:	ldr	r1, [sl, #1780]	; 0x6f4
   13cc0:	movw	r0, #41516	; 0xa22c
   13cc4:	movt	r0, #1
   13cc8:	b	13c3c <tcgetattr@plt+0x2878>
   13ccc:	mov	r0, #10
   13cd0:	bl	113ac <putchar_unlocked@plt>
   13cd4:	mov	r0, #0
   13cd8:	movw	r1, #49668	; 0xc204
   13cdc:	movt	r1, #2
   13ce0:	str	r0, [r1]
   13ce4:	sub	sp, fp, #28
   13ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cec:	movw	r0, #40974	; 0xa00e
   13cf0:	movt	r0, #1
   13cf4:	movw	r1, #40980	; 0xa014
   13cf8:	movt	r1, #1
   13cfc:	movw	r3, #41551	; 0xa24f
   13d00:	movt	r3, #1
   13d04:	movw	r2, #2037	; 0x7f5
   13d08:	bl	113b8 <__assert_fail@plt>
   13d0c:	push	{r4, r5, r6, sl, fp, lr}
   13d10:	add	fp, sp, #16
   13d14:	sub	sp, sp, #8
   13d18:	movw	r5, #49544	; 0xc188
   13d1c:	movt	r5, #2
   13d20:	ldm	r5, {r2, r3}
   13d24:	ldr	r0, [r5, #8]
   13d28:	ldr	r1, [r5, #12]
   13d2c:	stm	sp, {r0, r1}
   13d30:	movw	r1, #41600	; 0xa280
   13d34:	movt	r1, #1
   13d38:	mov	r0, #1
   13d3c:	bl	11304 <__printf_chk@plt>
   13d40:	mov	r6, #0
   13d44:	movw	r4, #41611	; 0xa28b
   13d48:	movt	r4, #1
   13d4c:	add	r0, r5, r6
   13d50:	ldrb	r2, [r0, #17]
   13d54:	mov	r0, #1
   13d58:	mov	r1, r4
   13d5c:	bl	11304 <__printf_chk@plt>
   13d60:	add	r6, r6, #1
   13d64:	cmp	r6, #32
   13d68:	bne	13d4c <tcgetattr@plt+0x2988>
   13d6c:	mov	r0, #10
   13d70:	sub	sp, fp, #16
   13d74:	pop	{r4, r5, r6, sl, fp, lr}
   13d78:	b	113ac <putchar_unlocked@plt>
   13d7c:	cmp	r0, #0
   13d80:	movweq	r0, #41520	; 0xa230
   13d84:	movteq	r0, #1
   13d88:	bxeq	lr
   13d8c:	mov	r1, r0
   13d90:	cmp	r0, #32
   13d94:	movw	r0, #49732	; 0xc244
   13d98:	movt	r0, #2
   13d9c:	bcc	13db8 <tcgetattr@plt+0x29f4>
   13da0:	movw	r2, #49732	; 0xc244
   13da4:	movt	r2, #2
   13da8:	cmp	r1, #126	; 0x7e
   13dac:	bhi	13dd8 <tcgetattr@plt+0x2a14>
   13db0:	strb	r1, [r2], #1
   13db4:	b	13dcc <tcgetattr@plt+0x2a08>
   13db8:	mov	r2, #94	; 0x5e
   13dbc:	strb	r2, [r0]
   13dc0:	add	r1, r1, #64	; 0x40
   13dc4:	strb	r1, [r0, #1]
   13dc8:	add	r2, r0, #2
   13dcc:	mov	r1, #0
   13dd0:	strb	r1, [r2]
   13dd4:	bx	lr
   13dd8:	cmp	r1, #127	; 0x7f
   13ddc:	bne	13dec <tcgetattr@plt+0x2a28>
   13de0:	movw	r1, #16222	; 0x3f5e
   13de4:	strh	r1, [r2], #2
   13de8:	b	13dcc <tcgetattr@plt+0x2a08>
   13dec:	movw	r3, #11597	; 0x2d4d
   13df0:	strh	r3, [r2]
   13df4:	cmp	r1, #160	; 0xa0
   13df8:	bcc	13e14 <tcgetattr@plt+0x2a50>
   13dfc:	cmp	r1, #255	; 0xff
   13e00:	beq	13e2c <tcgetattr@plt+0x2a68>
   13e04:	eor	r1, r1, #128	; 0x80
   13e08:	strb	r1, [r2, #2]
   13e0c:	add	r2, r2, #3
   13e10:	b	13dcc <tcgetattr@plt+0x2a08>
   13e14:	mov	r3, #94	; 0x5e
   13e18:	strb	r3, [r2, #2]
   13e1c:	sub	r1, r1, #64	; 0x40
   13e20:	strb	r1, [r2, #3]
   13e24:	add	r2, r2, #4
   13e28:	b	13dcc <tcgetattr@plt+0x2a08>
   13e2c:	movw	r1, #16222	; 0x3f5e
   13e30:	strh	r1, [r2, #2]
   13e34:	add	r2, r2, #4
   13e38:	b	13dcc <tcgetattr@plt+0x2a08>
   13e3c:	movw	r1, #49744	; 0xc250
   13e40:	movt	r1, #2
   13e44:	str	r0, [r1]
   13e48:	bx	lr
   13e4c:	movw	r1, #49748	; 0xc254
   13e50:	movt	r1, #2
   13e54:	strb	r0, [r1]
   13e58:	bx	lr
   13e5c:	push	{r4, r5, r6, sl, fp, lr}
   13e60:	add	fp, sp, #16
   13e64:	sub	sp, sp, #8
   13e68:	movw	r0, #49524	; 0xc174
   13e6c:	movt	r0, #2
   13e70:	ldr	r0, [r0]
   13e74:	bl	175b8 <tcgetattr@plt+0x61f4>
   13e78:	cmp	r0, #0
   13e7c:	beq	13ea4 <tcgetattr@plt+0x2ae0>
   13e80:	movw	r0, #49748	; 0xc254
   13e84:	movt	r0, #2
   13e88:	ldrb	r0, [r0]
   13e8c:	cmp	r0, #0
   13e90:	beq	13ec4 <tcgetattr@plt+0x2b00>
   13e94:	bl	112d4 <__errno_location@plt>
   13e98:	ldr	r0, [r0]
   13e9c:	cmp	r0, #32
   13ea0:	bne	13ec4 <tcgetattr@plt+0x2b00>
   13ea4:	movw	r0, #49520	; 0xc170
   13ea8:	movt	r0, #2
   13eac:	ldr	r0, [r0]
   13eb0:	bl	175b8 <tcgetattr@plt+0x61f4>
   13eb4:	cmp	r0, #0
   13eb8:	subeq	sp, fp, #16
   13ebc:	popeq	{r4, r5, r6, sl, fp, pc}
   13ec0:	b	13f34 <tcgetattr@plt+0x2b70>
   13ec4:	movw	r1, #44231	; 0xacc7
   13ec8:	movt	r1, #1
   13ecc:	mov	r0, #0
   13ed0:	mov	r2, #5
   13ed4:	bl	11160 <dcgettext@plt>
   13ed8:	mov	r4, r0
   13edc:	movw	r0, #49744	; 0xc250
   13ee0:	movt	r0, #2
   13ee4:	ldr	r6, [r0]
   13ee8:	bl	112d4 <__errno_location@plt>
   13eec:	ldr	r5, [r0]
   13ef0:	cmp	r6, #0
   13ef4:	bne	13f10 <tcgetattr@plt+0x2b4c>
   13ef8:	movw	r2, #44247	; 0xacd7
   13efc:	movt	r2, #1
   13f00:	mov	r0, #0
   13f04:	mov	r1, r5
   13f08:	mov	r3, r4
   13f0c:	b	13f30 <tcgetattr@plt+0x2b6c>
   13f10:	mov	r0, r6
   13f14:	bl	1585c <tcgetattr@plt+0x4498>
   13f18:	mov	r3, r0
   13f1c:	str	r4, [sp]
   13f20:	movw	r2, #44243	; 0xacd3
   13f24:	movt	r2, #1
   13f28:	mov	r0, #0
   13f2c:	mov	r1, r5
   13f30:	bl	11214 <error@plt>
   13f34:	movw	r0, #49432	; 0xc118
   13f38:	movt	r0, #2
   13f3c:	ldr	r0, [r0]
   13f40:	bl	1113c <_exit@plt>
   13f44:	sub	sp, sp, #8
   13f48:	push	{fp, lr}
   13f4c:	mov	fp, sp
   13f50:	sub	sp, sp, #8
   13f54:	str	r2, [fp, #8]
   13f58:	str	r3, [fp, #12]
   13f5c:	add	r2, fp, #8
   13f60:	str	r2, [sp, #4]
   13f64:	cmp	r1, #11
   13f68:	bhi	13fa8 <tcgetattr@plt+0x2be4>
   13f6c:	mov	r2, #1
   13f70:	movw	r3, #1300	; 0x514
   13f74:	tst	r3, r2, lsl r1
   13f78:	bne	13ff8 <tcgetattr@plt+0x2c34>
   13f7c:	movw	r3, #2570	; 0xa0a
   13f80:	tst	r3, r2, lsl r1
   13f84:	bne	13fd0 <tcgetattr@plt+0x2c0c>
   13f88:	cmp	r1, #0
   13f8c:	bne	13fa8 <tcgetattr@plt+0x2be4>
   13f90:	ldr	r1, [sp, #4]
   13f94:	add	r2, r1, #4
   13f98:	str	r2, [sp, #4]
   13f9c:	ldr	r1, [r1]
   13fa0:	bl	1401c <tcgetattr@plt+0x2c58>
   13fa4:	b	1400c <tcgetattr@plt+0x2c48>
   13fa8:	sub	r2, r1, #1024	; 0x400
   13fac:	cmp	r2, #10
   13fb0:	bhi	13ff8 <tcgetattr@plt+0x2c34>
   13fb4:	mov	ip, #1
   13fb8:	movw	r3, #645	; 0x285
   13fbc:	tst	r3, ip, lsl r2
   13fc0:	bne	13ff8 <tcgetattr@plt+0x2c34>
   13fc4:	movw	r3, #1282	; 0x502
   13fc8:	tst	r3, ip, lsl r2
   13fcc:	beq	13fd8 <tcgetattr@plt+0x2c14>
   13fd0:	bl	1134c <fcntl64@plt>
   13fd4:	b	1400c <tcgetattr@plt+0x2c48>
   13fd8:	cmp	r2, #6
   13fdc:	bne	13ff8 <tcgetattr@plt+0x2c34>
   13fe0:	ldr	r1, [sp, #4]
   13fe4:	add	r2, r1, #4
   13fe8:	str	r2, [sp, #4]
   13fec:	ldr	r1, [r1]
   13ff0:	bl	14028 <tcgetattr@plt+0x2c64>
   13ff4:	b	1400c <tcgetattr@plt+0x2c48>
   13ff8:	ldr	r2, [sp, #4]
   13ffc:	add	r3, r2, #4
   14000:	str	r3, [sp, #4]
   14004:	ldr	r2, [r2]
   14008:	bl	1134c <fcntl64@plt>
   1400c:	mov	sp, fp
   14010:	pop	{fp, lr}
   14014:	add	sp, sp, #8
   14018:	bx	lr
   1401c:	mov	r2, r1
   14020:	mov	r1, #0
   14024:	b	1134c <fcntl64@plt>
   14028:	push	{r4, r5, r6, r7, fp, lr}
   1402c:	add	fp, sp, #16
   14030:	mov	r5, r1
   14034:	mov	r6, r0
   14038:	movw	r7, #49752	; 0xc258
   1403c:	movt	r7, #2
   14040:	ldr	r0, [r7]
   14044:	cmp	r0, #0
   14048:	bmi	140ac <tcgetattr@plt+0x2ce8>
   1404c:	mov	r0, r6
   14050:	movw	r1, #1030	; 0x406
   14054:	mov	r2, r5
   14058:	bl	1134c <fcntl64@plt>
   1405c:	mov	r4, r0
   14060:	cmn	r0, #1
   14064:	bgt	14098 <tcgetattr@plt+0x2cd4>
   14068:	bl	112d4 <__errno_location@plt>
   1406c:	ldr	r0, [r0]
   14070:	cmp	r0, #22
   14074:	bne	14098 <tcgetattr@plt+0x2cd4>
   14078:	mov	r0, r6
   1407c:	mov	r1, r5
   14080:	bl	1401c <tcgetattr@plt+0x2c58>
   14084:	mov	r4, r0
   14088:	cmp	r0, #0
   1408c:	bmi	140fc <tcgetattr@plt+0x2d38>
   14090:	mvn	r0, #0
   14094:	b	1409c <tcgetattr@plt+0x2cd8>
   14098:	mov	r0, #1
   1409c:	str	r0, [r7]
   140a0:	cmp	r4, #0
   140a4:	bpl	140c4 <tcgetattr@plt+0x2d00>
   140a8:	b	140fc <tcgetattr@plt+0x2d38>
   140ac:	mov	r0, r6
   140b0:	mov	r1, r5
   140b4:	bl	1401c <tcgetattr@plt+0x2c58>
   140b8:	mov	r4, r0
   140bc:	cmp	r4, #0
   140c0:	bmi	140fc <tcgetattr@plt+0x2d38>
   140c4:	ldr	r0, [r7]
   140c8:	cmn	r0, #1
   140cc:	bne	140fc <tcgetattr@plt+0x2d38>
   140d0:	mov	r0, r4
   140d4:	mov	r1, #1
   140d8:	bl	1134c <fcntl64@plt>
   140dc:	cmp	r0, #0
   140e0:	bmi	14104 <tcgetattr@plt+0x2d40>
   140e4:	orr	r2, r0, #1
   140e8:	mov	r0, r4
   140ec:	mov	r1, #2
   140f0:	bl	1134c <fcntl64@plt>
   140f4:	cmn	r0, #1
   140f8:	beq	14104 <tcgetattr@plt+0x2d40>
   140fc:	mov	r0, r4
   14100:	pop	{r4, r5, r6, r7, fp, pc}
   14104:	bl	112d4 <__errno_location@plt>
   14108:	mov	r5, r0
   1410c:	ldr	r6, [r0]
   14110:	mov	r0, r4
   14114:	bl	113a0 <close@plt>
   14118:	str	r6, [r5]
   1411c:	mvn	r4, #0
   14120:	mov	r0, r4
   14124:	pop	{r4, r5, r6, r7, fp, pc}
   14128:	push	{r4, r5, r6, r7, fp, lr}
   1412c:	add	fp, sp, #16
   14130:	mov	r5, r0
   14134:	mov	r0, r1
   14138:	mov	r1, r2
   1413c:	mov	r2, r3
   14140:	bl	11220 <open64@plt>
   14144:	mov	r4, r0
   14148:	cmp	r0, r5
   1414c:	beq	14188 <tcgetattr@plt+0x2dc4>
   14150:	cmp	r4, #0
   14154:	bmi	14188 <tcgetattr@plt+0x2dc4>
   14158:	mov	r0, r4
   1415c:	mov	r1, r5
   14160:	bl	11178 <dup2@plt>
   14164:	mov	r5, r0
   14168:	bl	112d4 <__errno_location@plt>
   1416c:	mov	r6, r0
   14170:	ldr	r7, [r0]
   14174:	mov	r0, r4
   14178:	bl	113a0 <close@plt>
   1417c:	str	r7, [r6]
   14180:	mov	r0, r5
   14184:	pop	{r4, r5, r6, r7, fp, pc}
   14188:	mov	r0, r4
   1418c:	pop	{r4, r5, r6, r7, fp, pc}
   14190:	push	{r4, r5, r6, sl, fp, lr}
   14194:	add	fp, sp, #16
   14198:	mov	r4, r0
   1419c:	bl	112d4 <__errno_location@plt>
   141a0:	mov	r5, r0
   141a4:	ldr	r6, [r0]
   141a8:	mov	r0, r4
   141ac:	bl	11130 <free@plt>
   141b0:	str	r6, [r5]
   141b4:	pop	{r4, r5, r6, sl, fp, pc}
   141b8:	push	{r4, r5, fp, lr}
   141bc:	add	fp, sp, #8
   141c0:	cmp	r0, #0
   141c4:	beq	14258 <tcgetattr@plt+0x2e94>
   141c8:	mov	r4, r0
   141cc:	mov	r1, #47	; 0x2f
   141d0:	bl	11364 <strrchr@plt>
   141d4:	cmp	r0, #0
   141d8:	mov	r5, r4
   141dc:	addne	r5, r0, #1
   141e0:	sub	r0, r5, r4
   141e4:	cmp	r0, #7
   141e8:	blt	1423c <tcgetattr@plt+0x2e78>
   141ec:	sub	r0, r5, #7
   141f0:	movw	r1, #44306	; 0xad12
   141f4:	movt	r1, #1
   141f8:	mov	r2, #7
   141fc:	bl	11388 <strncmp@plt>
   14200:	cmp	r0, #0
   14204:	bne	1423c <tcgetattr@plt+0x2e78>
   14208:	movw	r1, #44314	; 0xad1a
   1420c:	movt	r1, #1
   14210:	mov	r0, r5
   14214:	mov	r2, #3
   14218:	bl	11388 <strncmp@plt>
   1421c:	cmp	r0, #0
   14220:	beq	1422c <tcgetattr@plt+0x2e68>
   14224:	mov	r4, r5
   14228:	b	1423c <tcgetattr@plt+0x2e78>
   1422c:	add	r4, r5, #3
   14230:	movw	r0, #49504	; 0xc160
   14234:	movt	r0, #2
   14238:	str	r4, [r0]
   1423c:	movw	r0, #49508	; 0xc164
   14240:	movt	r0, #2
   14244:	str	r4, [r0]
   14248:	movw	r0, #49756	; 0xc25c
   1424c:	movt	r0, #2
   14250:	str	r4, [r0]
   14254:	pop	{r4, r5, fp, pc}
   14258:	movw	r0, #49520	; 0xc170
   1425c:	movt	r0, #2
   14260:	ldr	r3, [r0]
   14264:	movw	r0, #44250	; 0xacda
   14268:	movt	r0, #1
   1426c:	mov	r1, #55	; 0x37
   14270:	mov	r2, #1
   14274:	bl	111b4 <fwrite@plt>
   14278:	bl	11394 <abort@plt>
   1427c:	push	{r4, r5, r6, sl, fp, lr}
   14280:	add	fp, sp, #16
   14284:	mov	r4, r0
   14288:	movw	r0, #49760	; 0xc260
   1428c:	movt	r0, #2
   14290:	cmp	r4, #0
   14294:	moveq	r4, r0
   14298:	bl	112d4 <__errno_location@plt>
   1429c:	mov	r5, r0
   142a0:	ldr	r6, [r0]
   142a4:	mov	r0, r4
   142a8:	mov	r1, #48	; 0x30
   142ac:	bl	16574 <tcgetattr@plt+0x51b0>
   142b0:	str	r6, [r5]
   142b4:	pop	{r4, r5, r6, sl, fp, pc}
   142b8:	movw	r1, #49760	; 0xc260
   142bc:	movt	r1, #2
   142c0:	cmp	r0, #0
   142c4:	movne	r1, r0
   142c8:	ldr	r0, [r1]
   142cc:	bx	lr
   142d0:	movw	r2, #49760	; 0xc260
   142d4:	movt	r2, #2
   142d8:	cmp	r0, #0
   142dc:	movne	r2, r0
   142e0:	str	r1, [r2]
   142e4:	bx	lr
   142e8:	movw	r3, #49760	; 0xc260
   142ec:	movt	r3, #2
   142f0:	cmp	r0, #0
   142f4:	movne	r3, r0
   142f8:	ubfx	r0, r1, #5, #3
   142fc:	add	ip, r3, r0, lsl #2
   14300:	ldr	r3, [ip, #8]
   14304:	and	r1, r1, #31
   14308:	mov	r0, #1
   1430c:	and	r0, r0, r3, lsr r1
   14310:	and	r2, r2, #1
   14314:	eor	r2, r0, r2
   14318:	eor	r1, r3, r2, lsl r1
   1431c:	str	r1, [ip, #8]
   14320:	bx	lr
   14324:	movw	r2, #49760	; 0xc260
   14328:	movt	r2, #2
   1432c:	cmp	r0, #0
   14330:	movne	r2, r0
   14334:	ldr	r0, [r2, #4]
   14338:	str	r1, [r2, #4]
   1433c:	bx	lr
   14340:	push	{fp, lr}
   14344:	mov	fp, sp
   14348:	movw	r3, #49760	; 0xc260
   1434c:	movt	r3, #2
   14350:	cmp	r0, #0
   14354:	movne	r3, r0
   14358:	mov	r0, #10
   1435c:	str	r0, [r3]
   14360:	cmp	r1, #0
   14364:	cmpne	r2, #0
   14368:	bne	14370 <tcgetattr@plt+0x2fac>
   1436c:	bl	11394 <abort@plt>
   14370:	str	r1, [r3, #40]	; 0x28
   14374:	str	r2, [r3, #44]	; 0x2c
   14378:	pop	{fp, pc}
   1437c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14380:	add	fp, sp, #28
   14384:	sub	sp, sp, #20
   14388:	mov	r8, r3
   1438c:	mov	r9, r2
   14390:	mov	sl, r1
   14394:	mov	r7, r0
   14398:	ldr	r0, [fp, #8]
   1439c:	movw	r5, #49760	; 0xc260
   143a0:	movt	r5, #2
   143a4:	cmp	r0, #0
   143a8:	movne	r5, r0
   143ac:	bl	112d4 <__errno_location@plt>
   143b0:	mov	r4, r0
   143b4:	ldm	r5, {r0, r1}
   143b8:	ldr	r2, [r5, #40]	; 0x28
   143bc:	ldr	r3, [r5, #44]	; 0x2c
   143c0:	ldr	r6, [r4]
   143c4:	add	r5, r5, #8
   143c8:	stm	sp, {r0, r1, r5}
   143cc:	str	r2, [sp, #12]
   143d0:	str	r3, [sp, #16]
   143d4:	mov	r0, r7
   143d8:	mov	r1, sl
   143dc:	mov	r2, r9
   143e0:	mov	r3, r8
   143e4:	bl	143f4 <tcgetattr@plt+0x3030>
   143e8:	str	r6, [r4]
   143ec:	sub	sp, fp, #28
   143f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143f8:	add	fp, sp, #28
   143fc:	sub	sp, sp, #156	; 0x9c
   14400:	mov	r9, r3
   14404:	mov	r7, r1
   14408:	mov	r6, r0
   1440c:	str	r2, [fp, #-80]	; 0xffffffb0
   14410:	add	r0, r2, #1
   14414:	str	r0, [sp, #76]	; 0x4c
   14418:	ldr	r0, [fp, #12]
   1441c:	and	r1, r0, #1
   14420:	str	r1, [sp, #40]	; 0x28
   14424:	and	r1, r0, #4
   14428:	str	r1, [sp, #36]	; 0x24
   1442c:	ubfx	r4, r0, #1, #1
   14430:	bl	111d8 <__ctype_get_mb_cur_max@plt>
   14434:	str	r0, [sp, #44]	; 0x2c
   14438:	ldr	r0, [fp, #24]
   1443c:	str	r0, [sp, #88]	; 0x58
   14440:	ldr	r0, [fp, #20]
   14444:	str	r0, [sp, #80]	; 0x50
   14448:	ldr	r1, [fp, #8]
   1444c:	mov	r0, #0
   14450:	str	r0, [sp, #84]	; 0x54
   14454:	mov	r0, #0
   14458:	str	r0, [fp, #-84]	; 0xffffffac
   1445c:	mov	r0, #0
   14460:	str	r0, [fp, #-72]	; 0xffffffb8
   14464:	mov	r0, #0
   14468:	mov	r2, #0
   1446c:	str	r2, [fp, #-56]	; 0xffffffc8
   14470:	mov	r2, #0
   14474:	str	r2, [sp, #64]	; 0x40
   14478:	mov	r2, #1
   1447c:	str	r2, [fp, #-48]	; 0xffffffd0
   14480:	cmp	r1, #10
   14484:	bhi	153b0 <tcgetattr@plt+0x3fec>
   14488:	mov	sl, r7
   1448c:	mov	r7, r1
   14490:	add	r1, pc, #24
   14494:	mov	r8, #0
   14498:	mov	r2, #1
   1449c:	mov	r3, #0
   144a0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   144a4:	mov	lr, r9
   144a8:	mov	r5, r6
   144ac:	ldr	pc, [r1, r7, lsl #2]
   144b0:	andeq	r4, r1, r4, lsl #11
   144b4:	andeq	r4, r1, r4, asr #11
   144b8:	muleq	r1, r4, r5
   144bc:	andeq	r4, r1, ip, ror r5
   144c0:			; <UNDEFINED> instruction: 0x000145b8
   144c4:	andeq	r4, r1, r8, lsl r6
   144c8:	andeq	r4, r1, r4, lsr #11
   144cc:	andeq	r4, r1, r4, ror r6
   144d0:	ldrdeq	r4, [r1], -ip
   144d4:	ldrdeq	r4, [r1], -ip
   144d8:	andeq	r4, r1, r8, lsl #10
   144dc:	movw	r0, #44396	; 0xad6c
   144e0:	movt	r0, #1
   144e4:	mov	r1, r7
   144e8:	bl	159b8 <tcgetattr@plt+0x45f4>
   144ec:	str	r0, [sp, #80]	; 0x50
   144f0:	movw	r0, #44398	; 0xad6e
   144f4:	movt	r0, #1
   144f8:	mov	r1, r7
   144fc:	bl	159b8 <tcgetattr@plt+0x45f4>
   14500:	mov	r5, r6
   14504:	str	r0, [sp, #88]	; 0x58
   14508:	mov	r8, #0
   1450c:	tst	r4, #1
   14510:	str	r7, [fp, #-64]	; 0xffffffc0
   14514:	bne	1454c <tcgetattr@plt+0x3188>
   14518:	ldr	r0, [sp, #80]	; 0x50
   1451c:	ldrb	r0, [r0]
   14520:	cmp	r0, #0
   14524:	beq	1454c <tcgetattr@plt+0x3188>
   14528:	ldr	r1, [sp, #80]	; 0x50
   1452c:	add	r1, r1, #1
   14530:	mov	r8, #0
   14534:	cmp	r8, sl
   14538:	strbcc	r0, [r5, r8]
   1453c:	ldrb	r0, [r1, r8]
   14540:	add	r8, r8, #1
   14544:	cmp	r0, #0
   14548:	bne	14534 <tcgetattr@plt+0x3170>
   1454c:	ldr	r7, [sp, #88]	; 0x58
   14550:	mov	r0, r7
   14554:	bl	112a4 <strlen@plt>
   14558:	mov	r5, r6
   1455c:	str	r0, [fp, #-72]	; 0xffffffb8
   14560:	str	r7, [fp, #-84]	; 0xffffffac
   14564:	mov	r2, #1
   14568:	mov	r3, r4
   1456c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14570:	mov	lr, r9
   14574:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14578:	b	14674 <tcgetattr@plt+0x32b0>
   1457c:	mov	r0, #1
   14580:	b	145c4 <tcgetattr@plt+0x3200>
   14584:	mov	r7, #0
   14588:	mov	r8, #0
   1458c:	mov	r2, r0
   14590:	b	14670 <tcgetattr@plt+0x32ac>
   14594:	tst	r4, #1
   14598:	bne	145c4 <tcgetattr@plt+0x3200>
   1459c:	mov	r2, r0
   145a0:	b	145ec <tcgetattr@plt+0x3228>
   145a4:	mov	r0, #1
   145a8:	str	r0, [fp, #-72]	; 0xffffffb8
   145ac:	mov	r8, #0
   145b0:	mov	r7, #5
   145b4:	b	14630 <tcgetattr@plt+0x326c>
   145b8:	mov	r2, #1
   145bc:	tst	r4, #1
   145c0:	beq	145ec <tcgetattr@plt+0x3228>
   145c4:	mov	r1, #1
   145c8:	str	r1, [fp, #-72]	; 0xffffffb8
   145cc:	mov	r8, #0
   145d0:	mov	r7, #2
   145d4:	movw	r1, #44398	; 0xad6e
   145d8:	movt	r1, #1
   145dc:	str	r1, [fp, #-84]	; 0xffffffac
   145e0:	mov	r2, r0
   145e4:	mov	r3, #1
   145e8:	b	14674 <tcgetattr@plt+0x32b0>
   145ec:	mov	r8, #1
   145f0:	mov	r7, #2
   145f4:	cmp	sl, #0
   145f8:	movne	r0, #39	; 0x27
   145fc:	strbne	r0, [r5]
   14600:	movw	r0, #44398	; 0xad6e
   14604:	movt	r0, #1
   14608:	str	r0, [fp, #-84]	; 0xffffffac
   1460c:	mov	r0, #1
   14610:	str	r0, [fp, #-72]	; 0xffffffb8
   14614:	b	14670 <tcgetattr@plt+0x32ac>
   14618:	mov	r7, #5
   1461c:	tst	r4, #1
   14620:	beq	14648 <tcgetattr@plt+0x3284>
   14624:	mov	r0, #1
   14628:	str	r0, [fp, #-72]	; 0xffffffb8
   1462c:	mov	r8, #0
   14630:	movw	r0, #44394	; 0xad6a
   14634:	movt	r0, #1
   14638:	str	r0, [fp, #-84]	; 0xffffffac
   1463c:	mov	r2, #1
   14640:	mov	r3, #1
   14644:	b	14674 <tcgetattr@plt+0x32b0>
   14648:	cmp	sl, #0
   1464c:	movne	r0, #34	; 0x22
   14650:	strbne	r0, [r5]
   14654:	mov	r8, #1
   14658:	movw	r0, #44394	; 0xad6a
   1465c:	movt	r0, #1
   14660:	str	r0, [fp, #-84]	; 0xffffffac
   14664:	mov	r0, #1
   14668:	str	r0, [fp, #-72]	; 0xffffffb8
   1466c:	mov	r2, #1
   14670:	mov	r3, #0
   14674:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14678:	cmp	r0, #0
   1467c:	movwne	r0, #1
   14680:	and	r1, r0, r3
   14684:	and	r1, r2, r1
   14688:	str	r1, [sp, #56]	; 0x38
   1468c:	sub	r1, r7, #2
   14690:	clz	r1, r1
   14694:	lsr	r1, r1, #5
   14698:	and	r1, r1, r3
   1469c:	str	r1, [sp, #68]	; 0x44
   146a0:	str	r7, [fp, #-64]	; 0xffffffc0
   146a4:	subs	r1, r7, #2
   146a8:	movwne	r1, #1
   146ac:	eor	r4, r3, #1
   146b0:	str	r4, [fp, #-88]	; 0xffffffa8
   146b4:	orr	r4, r1, r4
   146b8:	str	r4, [sp, #72]	; 0x48
   146bc:	and	r1, r1, r2
   146c0:	and	r0, r0, r1
   146c4:	str	r0, [fp, #-60]	; 0xffffffc4
   146c8:	str	r3, [fp, #-76]	; 0xffffffb4
   146cc:	orr	r0, r1, r3
   146d0:	eor	r0, r0, #1
   146d4:	ldr	r1, [fp, #16]
   146d8:	clz	r1, r1
   146dc:	lsr	r1, r1, #5
   146e0:	orr	r0, r1, r0
   146e4:	str	r0, [fp, #-68]	; 0xffffffbc
   146e8:	str	r2, [sp, #92]	; 0x5c
   146ec:	eor	r0, r2, #1
   146f0:	str	r0, [sp, #60]	; 0x3c
   146f4:	mov	r7, #0
   146f8:	cmn	lr, #1
   146fc:	beq	1470c <tcgetattr@plt+0x3348>
   14700:	cmp	r7, lr
   14704:	bne	14718 <tcgetattr@plt+0x3354>
   14708:	b	15224 <tcgetattr@plt+0x3e60>
   1470c:	ldrb	r0, [ip, r7]
   14710:	cmp	r0, #0
   14714:	beq	15224 <tcgetattr@plt+0x3e60>
   14718:	mov	r9, #0
   1471c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14720:	cmp	r0, #0
   14724:	beq	14758 <tcgetattr@plt+0x3394>
   14728:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1472c:	add	r4, r7, r0
   14730:	cmp	r0, #2
   14734:	bcc	14750 <tcgetattr@plt+0x338c>
   14738:	cmn	lr, #1
   1473c:	bne	14750 <tcgetattr@plt+0x338c>
   14740:	mov	r0, ip
   14744:	bl	112a4 <strlen@plt>
   14748:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1474c:	mov	lr, r0
   14750:	cmp	r4, lr
   14754:	bls	14764 <tcgetattr@plt+0x33a0>
   14758:	mov	r0, #0
   1475c:	str	r0, [fp, #-52]	; 0xffffffcc
   14760:	b	147a8 <tcgetattr@plt+0x33e4>
   14764:	mov	r4, lr
   14768:	add	r0, ip, r7
   1476c:	ldr	r1, [fp, #-84]	; 0xffffffac
   14770:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14774:	bl	1128c <bcmp@plt>
   14778:	cmp	r0, #0
   1477c:	mov	r1, r0
   14780:	movwne	r1, #1
   14784:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14788:	orr	r1, r1, r2
   1478c:	tst	r1, #1
   14790:	beq	152f8 <tcgetattr@plt+0x3f34>
   14794:	clz	r0, r0
   14798:	lsr	r0, r0, #5
   1479c:	str	r0, [fp, #-52]	; 0xffffffcc
   147a0:	ldr	ip, [fp, #-80]	; 0xffffffb0
   147a4:	mov	lr, r4
   147a8:	ldrb	r4, [ip, r7]
   147ac:	cmp	r4, #126	; 0x7e
   147b0:	bhi	14ce0 <tcgetattr@plt+0x391c>
   147b4:	mov	r6, #1
   147b8:	mov	r2, #110	; 0x6e
   147bc:	mov	r0, #97	; 0x61
   147c0:	add	r3, pc, #4
   147c4:	mov	r1, #0
   147c8:	ldr	pc, [r3, r4, lsl #2]
   147cc:	andeq	r4, r1, r0, asr #22
   147d0:	andeq	r4, r1, r0, ror #25
   147d4:	andeq	r4, r1, r0, ror #25
   147d8:	andeq	r4, r1, r0, ror #25
   147dc:	andeq	r4, r1, r0, ror #25
   147e0:	andeq	r4, r1, r0, ror #25
   147e4:	andeq	r4, r1, r0, ror #25
   147e8:			; <UNDEFINED> instruction: 0x00014db4
   147ec:	andeq	r4, r1, r0, lsr #22
   147f0:	andeq	r4, r1, r8, lsl fp
   147f4:	andeq	r4, r1, ip, lsr #22
   147f8:	andeq	r4, r1, r8, asr #24
   147fc:	andeq	r4, r1, r0, lsl fp
   14800:	andeq	r4, r1, r8, lsr #22
   14804:	andeq	r4, r1, r0, ror #25
   14808:	andeq	r4, r1, r0, ror #25
   1480c:	andeq	r4, r1, r0, ror #25
   14810:	andeq	r4, r1, r0, ror #25
   14814:	andeq	r4, r1, r0, ror #25
   14818:	andeq	r4, r1, r0, ror #25
   1481c:	andeq	r4, r1, r0, ror #25
   14820:	andeq	r4, r1, r0, ror #25
   14824:	andeq	r4, r1, r0, ror #25
   14828:	andeq	r4, r1, r0, ror #25
   1482c:	andeq	r4, r1, r0, ror #25
   14830:	andeq	r4, r1, r0, ror #25
   14834:	andeq	r4, r1, r0, ror #25
   14838:	andeq	r4, r1, r0, ror #25
   1483c:	andeq	r4, r1, r0, ror #25
   14840:	andeq	r4, r1, r0, ror #25
   14844:	andeq	r4, r1, r0, ror #25
   14848:	andeq	r4, r1, r0, ror #25
   1484c:	andeq	r4, r1, r4, asr #21
   14850:	andeq	r4, r1, r8, asr #21
   14854:	andeq	r4, r1, r8, asr #21
   14858:			; <UNDEFINED> instruction: 0x00014ab0
   1485c:	andeq	r4, r1, r8, asr #21
   14860:	andeq	r4, r1, r8, asr #19
   14864:	andeq	r4, r1, r8, asr #21
   14868:	andeq	r4, r1, r0, asr ip
   1486c:	andeq	r4, r1, r8, asr #21
   14870:	andeq	r4, r1, r8, asr #21
   14874:	andeq	r4, r1, r8, asr #21
   14878:	andeq	r4, r1, r8, asr #19
   1487c:	andeq	r4, r1, r8, asr #19
   14880:	andeq	r4, r1, r8, asr #19
   14884:	andeq	r4, r1, r8, asr #19
   14888:	andeq	r4, r1, r8, asr #19
   1488c:	andeq	r4, r1, r8, asr #19
   14890:	andeq	r4, r1, r8, asr #19
   14894:	andeq	r4, r1, r8, asr #19
   14898:	andeq	r4, r1, r8, asr #19
   1489c:	andeq	r4, r1, r8, asr #19
   148a0:	andeq	r4, r1, r8, asr #19
   148a4:	andeq	r4, r1, r8, asr #19
   148a8:	andeq	r4, r1, r8, asr #19
   148ac:	andeq	r4, r1, r8, asr #19
   148b0:	andeq	r4, r1, r8, asr #19
   148b4:	andeq	r4, r1, r8, asr #19
   148b8:	andeq	r4, r1, r8, asr #21
   148bc:	andeq	r4, r1, r8, asr #21
   148c0:	andeq	r4, r1, r8, asr #21
   148c4:	andeq	r4, r1, r8, asr #21
   148c8:	andeq	r4, r1, r8, lsl ip
   148cc:	andeq	r4, r1, r0, ror #25
   148d0:	andeq	r4, r1, r8, asr #19
   148d4:	andeq	r4, r1, r8, asr #19
   148d8:	andeq	r4, r1, r8, asr #19
   148dc:	andeq	r4, r1, r8, asr #19
   148e0:	andeq	r4, r1, r8, asr #19
   148e4:	andeq	r4, r1, r8, asr #19
   148e8:	andeq	r4, r1, r8, asr #19
   148ec:	andeq	r4, r1, r8, asr #19
   148f0:	andeq	r4, r1, r8, asr #19
   148f4:	andeq	r4, r1, r8, asr #19
   148f8:	andeq	r4, r1, r8, asr #19
   148fc:	andeq	r4, r1, r8, asr #19
   14900:	andeq	r4, r1, r8, asr #19
   14904:	andeq	r4, r1, r8, asr #19
   14908:	andeq	r4, r1, r8, asr #19
   1490c:	andeq	r4, r1, r8, asr #19
   14910:	andeq	r4, r1, r8, asr #19
   14914:	andeq	r4, r1, r8, asr #19
   14918:	andeq	r4, r1, r8, asr #19
   1491c:	andeq	r4, r1, r8, asr #19
   14920:	andeq	r4, r1, r8, asr #19
   14924:	andeq	r4, r1, r8, asr #19
   14928:	andeq	r4, r1, r8, asr #19
   1492c:	andeq	r4, r1, r8, asr #19
   14930:	andeq	r4, r1, r8, asr #19
   14934:	andeq	r4, r1, r8, asr #19
   14938:	andeq	r4, r1, r8, asr #21
   1493c:	strdeq	r4, [r1], -r0
   14940:	andeq	r4, r1, r8, asr #19
   14944:	andeq	r4, r1, r8, asr #21
   14948:	andeq	r4, r1, r8, asr #19
   1494c:	andeq	r4, r1, r8, asr #21
   14950:	andeq	r4, r1, r8, asr #19
   14954:	andeq	r4, r1, r8, asr #19
   14958:	andeq	r4, r1, r8, asr #19
   1495c:	andeq	r4, r1, r8, asr #19
   14960:	andeq	r4, r1, r8, asr #19
   14964:	andeq	r4, r1, r8, asr #19
   14968:	andeq	r4, r1, r8, asr #19
   1496c:	andeq	r4, r1, r8, asr #19
   14970:	andeq	r4, r1, r8, asr #19
   14974:	andeq	r4, r1, r8, asr #19
   14978:	andeq	r4, r1, r8, asr #19
   1497c:	andeq	r4, r1, r8, asr #19
   14980:	andeq	r4, r1, r8, asr #19
   14984:	andeq	r4, r1, r8, asr #19
   14988:	andeq	r4, r1, r8, asr #19
   1498c:	andeq	r4, r1, r8, asr #19
   14990:	andeq	r4, r1, r8, asr #19
   14994:	andeq	r4, r1, r8, asr #19
   14998:	andeq	r4, r1, r8, asr #19
   1499c:	andeq	r4, r1, r8, asr #19
   149a0:	andeq	r4, r1, r8, asr #19
   149a4:	andeq	r4, r1, r8, asr #19
   149a8:	andeq	r4, r1, r8, asr #19
   149ac:	andeq	r4, r1, r8, asr #19
   149b0:	andeq	r4, r1, r8, asr #19
   149b4:	andeq	r4, r1, r8, asr #19
   149b8:	andeq	r4, r1, r4, lsl #21
   149bc:	andeq	r4, r1, r8, asr #21
   149c0:	andeq	r4, r1, r4, lsl #21
   149c4:			; <UNDEFINED> instruction: 0x00014ab0
   149c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   149cc:	tst	r0, #1
   149d0:	bne	149fc <tcgetattr@plt+0x3638>
   149d4:	ubfx	r0, r4, #5, #3
   149d8:	ldr	r1, [fp, #16]
   149dc:	ldr	r0, [r1, r0, lsl #2]
   149e0:	and	r1, r4, #31
   149e4:	mov	r2, #1
   149e8:	tst	r0, r2, lsl r1
   149ec:	beq	149fc <tcgetattr@plt+0x3638>
   149f0:	mov	r0, r4
   149f4:	mov	r1, r6
   149f8:	b	14a10 <tcgetattr@plt+0x364c>
   149fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a00:	cmp	r0, #0
   14a04:	mov	r0, r4
   14a08:	mov	r1, r6
   14a0c:	beq	14d48 <tcgetattr@plt+0x3984>
   14a10:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14a14:	tst	r2, #1
   14a18:	bne	1530c <tcgetattr@plt+0x3f48>
   14a1c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14a20:	subs	r2, r2, #2
   14a24:	movwne	r2, #1
   14a28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14a2c:	orr	r2, r2, r3
   14a30:	tst	r2, #1
   14a34:	bne	14a70 <tcgetattr@plt+0x36ac>
   14a38:	cmp	r8, sl
   14a3c:	movcc	r2, #39	; 0x27
   14a40:	strbcc	r2, [r5, r8]
   14a44:	add	r2, r8, #1
   14a48:	cmp	r2, sl
   14a4c:	movcc	r3, #36	; 0x24
   14a50:	strbcc	r3, [r5, r2]
   14a54:	add	r2, r8, #2
   14a58:	cmp	r2, sl
   14a5c:	movcc	r3, #39	; 0x27
   14a60:	strbcc	r3, [r5, r2]
   14a64:	add	r8, r8, #3
   14a68:	mov	r2, #1
   14a6c:	str	r2, [fp, #-56]	; 0xffffffc8
   14a70:	cmp	r8, sl
   14a74:	movcc	r2, #92	; 0x5c
   14a78:	strbcc	r2, [r5, r8]
   14a7c:	add	r8, r8, #1
   14a80:	b	14d8c <tcgetattr@plt+0x39c8>
   14a84:	cmp	lr, #1
   14a88:	beq	14ab0 <tcgetattr@plt+0x36ec>
   14a8c:	mov	r6, #0
   14a90:	cmn	lr, #1
   14a94:	bne	14abc <tcgetattr@plt+0x36f8>
   14a98:	ldrb	r0, [ip, #1]
   14a9c:	cmp	r0, #0
   14aa0:	beq	14ab0 <tcgetattr@plt+0x36ec>
   14aa4:	mvn	lr, #0
   14aa8:	mov	r9, #0
   14aac:	b	149c8 <tcgetattr@plt+0x3604>
   14ab0:	mov	r6, #0
   14ab4:	cmp	r7, #0
   14ab8:	beq	14ac4 <tcgetattr@plt+0x3700>
   14abc:	mov	r9, #0
   14ac0:	b	149c8 <tcgetattr@plt+0x3604>
   14ac4:	mov	r1, #1
   14ac8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14acc:	cmp	r0, #2
   14ad0:	bne	14ae8 <tcgetattr@plt+0x3724>
   14ad4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14ad8:	tst	r0, #1
   14adc:	mov	r6, r1
   14ae0:	beq	149c8 <tcgetattr@plt+0x3604>
   14ae4:	b	1530c <tcgetattr@plt+0x3f48>
   14ae8:	mov	r6, r1
   14aec:	b	149c8 <tcgetattr@plt+0x3604>
   14af0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14af4:	cmp	r0, #2
   14af8:	bne	14d2c <tcgetattr@plt+0x3968>
   14afc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14b00:	tst	r0, #1
   14b04:	bne	1530c <tcgetattr@plt+0x3f48>
   14b08:	mov	r9, #0
   14b0c:	b	14d40 <tcgetattr@plt+0x397c>
   14b10:	mov	r0, #102	; 0x66
   14b14:	b	14db4 <tcgetattr@plt+0x39f0>
   14b18:	mov	r2, #116	; 0x74
   14b1c:	b	14b2c <tcgetattr@plt+0x3768>
   14b20:	mov	r0, #98	; 0x62
   14b24:	b	14db4 <tcgetattr@plt+0x39f0>
   14b28:	mov	r2, #114	; 0x72
   14b2c:	ldr	r0, [sp, #72]	; 0x48
   14b30:	tst	r0, #1
   14b34:	mov	r0, r2
   14b38:	bne	14db4 <tcgetattr@plt+0x39f0>
   14b3c:	b	1530c <tcgetattr@plt+0x3f48>
   14b40:	ldr	r0, [sp, #92]	; 0x5c
   14b44:	tst	r0, #1
   14b48:	beq	14dd0 <tcgetattr@plt+0x3a0c>
   14b4c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14b50:	tst	r0, #1
   14b54:	bne	1530c <tcgetattr@plt+0x3f48>
   14b58:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14b5c:	subs	r0, r0, #2
   14b60:	movwne	r0, #1
   14b64:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14b68:	orr	r0, r0, r1
   14b6c:	tst	r0, #1
   14b70:	bne	14bac <tcgetattr@plt+0x37e8>
   14b74:	cmp	r8, sl
   14b78:	movcc	r0, #39	; 0x27
   14b7c:	strbcc	r0, [r5, r8]
   14b80:	add	r0, r8, #1
   14b84:	cmp	r0, sl
   14b88:	movcc	r1, #36	; 0x24
   14b8c:	strbcc	r1, [r5, r0]
   14b90:	add	r0, r8, #2
   14b94:	cmp	r0, sl
   14b98:	movcc	r1, #39	; 0x27
   14b9c:	strbcc	r1, [r5, r0]
   14ba0:	add	r8, r8, #3
   14ba4:	mov	r0, #1
   14ba8:	str	r0, [fp, #-56]	; 0xffffffc8
   14bac:	cmp	r8, sl
   14bb0:	movcc	r0, #92	; 0x5c
   14bb4:	strbcc	r0, [r5, r8]
   14bb8:	add	r0, r8, #1
   14bbc:	mov	r6, #0
   14bc0:	mov	r9, #1
   14bc4:	mov	r4, #48	; 0x30
   14bc8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14bcc:	cmp	r1, #2
   14bd0:	beq	14f94 <tcgetattr@plt+0x3bd0>
   14bd4:	add	r1, r7, #1
   14bd8:	cmp	r1, lr
   14bdc:	bcs	14f94 <tcgetattr@plt+0x3bd0>
   14be0:	ldrb	r1, [ip, r1]
   14be4:	sub	r1, r1, #48	; 0x30
   14be8:	uxtb	r1, r1
   14bec:	cmp	r1, #9
   14bf0:	bhi	14f94 <tcgetattr@plt+0x3bd0>
   14bf4:	cmp	r0, sl
   14bf8:	movcc	r1, #48	; 0x30
   14bfc:	strbcc	r1, [r5, r0]
   14c00:	add	r0, r8, #2
   14c04:	cmp	r0, sl
   14c08:	movcc	r1, #48	; 0x30
   14c0c:	strbcc	r1, [r5, r0]
   14c10:	add	r8, r8, #3
   14c14:	b	149c8 <tcgetattr@plt+0x3604>
   14c18:	mov	r9, #0
   14c1c:	mov	r4, #63	; 0x3f
   14c20:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14c24:	cmp	r0, #5
   14c28:	beq	14f9c <tcgetattr@plt+0x3bd8>
   14c2c:	cmp	r0, #2
   14c30:	bne	15044 <tcgetattr@plt+0x3c80>
   14c34:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14c38:	tst	r0, #1
   14c3c:	mov	r6, #0
   14c40:	beq	149c8 <tcgetattr@plt+0x3604>
   14c44:	b	1530c <tcgetattr@plt+0x3f48>
   14c48:	mov	r0, #118	; 0x76
   14c4c:	b	14db4 <tcgetattr@plt+0x39f0>
   14c50:	mov	r4, #39	; 0x27
   14c54:	mov	r0, #1
   14c58:	str	r0, [sp, #64]	; 0x40
   14c5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14c60:	cmp	r0, #2
   14c64:	bne	14dec <tcgetattr@plt+0x3a28>
   14c68:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14c6c:	tst	r0, #1
   14c70:	bne	1530c <tcgetattr@plt+0x3f48>
   14c74:	ldr	r2, [sp, #84]	; 0x54
   14c78:	cmp	r2, #0
   14c7c:	mov	r0, r2
   14c80:	movwne	r0, #1
   14c84:	clz	r1, sl
   14c88:	lsr	r1, r1, #5
   14c8c:	orrs	r0, r0, r1
   14c90:	moveq	r2, sl
   14c94:	str	r2, [sp, #84]	; 0x54
   14c98:	moveq	sl, r0
   14c9c:	cmp	r8, sl
   14ca0:	movcc	r0, #39	; 0x27
   14ca4:	strbcc	r0, [r5, r8]
   14ca8:	add	r0, r8, #1
   14cac:	cmp	r0, sl
   14cb0:	movcc	r1, #92	; 0x5c
   14cb4:	strbcc	r1, [r5, r0]
   14cb8:	add	r0, r8, #2
   14cbc:	cmp	r0, sl
   14cc0:	movcc	r1, #39	; 0x27
   14cc4:	strbcc	r1, [r5, r0]
   14cc8:	add	r8, r8, #3
   14ccc:	mov	r0, #0
   14cd0:	str	r0, [fp, #-56]	; 0xffffffc8
   14cd4:	mov	r9, #0
   14cd8:	mov	r6, #1
   14cdc:	b	149c8 <tcgetattr@plt+0x3604>
   14ce0:	ldr	r0, [sp, #44]	; 0x2c
   14ce4:	cmp	r0, #1
   14ce8:	bne	14df4 <tcgetattr@plt+0x3a30>
   14cec:	str	lr, [sp, #32]
   14cf0:	bl	11274 <__ctype_b_loc@plt>
   14cf4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14cf8:	ldr	r0, [r0]
   14cfc:	add	r0, r0, r4, lsl #1
   14d00:	ldrb	r0, [r0, #1]
   14d04:	ubfx	r6, r0, #6, #1
   14d08:	mov	r2, #1
   14d0c:	ldr	r0, [sp, #60]	; 0x3c
   14d10:	orr	r1, r6, r0
   14d14:	cmp	r2, #1
   14d18:	bhi	1504c <tcgetattr@plt+0x3c88>
   14d1c:	tst	r1, #1
   14d20:	beq	1504c <tcgetattr@plt+0x3c88>
   14d24:	ldr	lr, [sp, #32]
   14d28:	b	149c8 <tcgetattr@plt+0x3604>
   14d2c:	mov	r9, #0
   14d30:	mov	r0, #92	; 0x5c
   14d34:	ldr	r1, [sp, #56]	; 0x38
   14d38:	cmp	r1, #0
   14d3c:	beq	14db4 <tcgetattr@plt+0x39f0>
   14d40:	mov	r4, #92	; 0x5c
   14d44:	mov	r6, #0
   14d48:	cmp	r9, #0
   14d4c:	bne	14d84 <tcgetattr@plt+0x39c0>
   14d50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14d54:	tst	r0, #1
   14d58:	beq	14d84 <tcgetattr@plt+0x39c0>
   14d5c:	cmp	r8, sl
   14d60:	movcc	r0, #39	; 0x27
   14d64:	strbcc	r0, [r5, r8]
   14d68:	add	r0, r8, #1
   14d6c:	cmp	r0, sl
   14d70:	movcc	r1, #39	; 0x27
   14d74:	strbcc	r1, [r5, r0]
   14d78:	add	r8, r8, #2
   14d7c:	mov	r0, #0
   14d80:	str	r0, [fp, #-56]	; 0xffffffc8
   14d84:	mov	r1, r6
   14d88:	mov	r0, r4
   14d8c:	cmp	r8, sl
   14d90:	strbcc	r0, [r5, r8]
   14d94:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14d98:	and	r0, r0, r1
   14d9c:	str	r0, [fp, #-48]	; 0xffffffd0
   14da0:	add	r8, r8, #1
   14da4:	add	r7, r7, #1
   14da8:	cmn	lr, #1
   14dac:	bne	14700 <tcgetattr@plt+0x333c>
   14db0:	b	1470c <tcgetattr@plt+0x3348>
   14db4:	mov	r9, #0
   14db8:	ldr	r1, [sp, #92]	; 0x5c
   14dbc:	tst	r1, #1
   14dc0:	mov	r6, #0
   14dc4:	mov	r1, #0
   14dc8:	beq	149c8 <tcgetattr@plt+0x3604>
   14dcc:	b	14a10 <tcgetattr@plt+0x364c>
   14dd0:	mov	r4, #0
   14dd4:	ldr	r0, [sp, #40]	; 0x28
   14dd8:	cmp	r0, #0
   14ddc:	mov	r9, #0
   14de0:	mov	r6, #0
   14de4:	beq	149c8 <tcgetattr@plt+0x3604>
   14de8:	b	14da4 <tcgetattr@plt+0x39e0>
   14dec:	mov	r6, #1
   14df0:	b	149c8 <tcgetattr@plt+0x3604>
   14df4:	mov	r0, #0
   14df8:	str	r0, [fp, #-36]	; 0xffffffdc
   14dfc:	str	r0, [fp, #-40]	; 0xffffffd8
   14e00:	cmn	lr, #1
   14e04:	bne	14e18 <tcgetattr@plt+0x3a54>
   14e08:	mov	r0, ip
   14e0c:	bl	112a4 <strlen@plt>
   14e10:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14e14:	mov	lr, r0
   14e18:	ldr	r0, [sp, #76]	; 0x4c
   14e1c:	add	r0, r0, r7
   14e20:	str	r0, [sp, #24]
   14e24:	mov	r6, #1
   14e28:	mov	r2, #0
   14e2c:	sub	r0, fp, #40	; 0x28
   14e30:	mov	r3, r0
   14e34:	str	r5, [sp, #28]
   14e38:	str	lr, [sp, #32]
   14e3c:	b	14e80 <tcgetattr@plt+0x3abc>
   14e40:	ldr	r5, [sp, #52]	; 0x34
   14e44:	add	r5, r0, r5
   14e48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e4c:	bl	1119c <iswprint@plt>
   14e50:	cmp	r0, #0
   14e54:	movwne	r0, #1
   14e58:	and	r6, r6, r0
   14e5c:	sub	r0, fp, #40	; 0x28
   14e60:	bl	11154 <mbsinit@plt>
   14e64:	sub	r3, fp, #40	; 0x28
   14e68:	mov	r2, r5
   14e6c:	ldr	lr, [sp, #32]
   14e70:	cmp	r0, #0
   14e74:	ldr	r5, [sp, #28]
   14e78:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14e7c:	bne	14d0c <tcgetattr@plt+0x3948>
   14e80:	str	r2, [sp, #52]	; 0x34
   14e84:	add	r0, r2, r7
   14e88:	add	r1, ip, r0
   14e8c:	str	r0, [sp, #48]	; 0x30
   14e90:	sub	r2, lr, r0
   14e94:	sub	r0, fp, #44	; 0x2c
   14e98:	bl	17874 <tcgetattr@plt+0x64b0>
   14e9c:	cmp	r0, #0
   14ea0:	beq	15218 <tcgetattr@plt+0x3e54>
   14ea4:	cmn	r0, #1
   14ea8:	beq	151d4 <tcgetattr@plt+0x3e10>
   14eac:	cmn	r0, #2
   14eb0:	ldr	lr, [sp, #32]
   14eb4:	beq	151dc <tcgetattr@plt+0x3e18>
   14eb8:	cmp	r0, #2
   14ebc:	mov	r1, #0
   14ec0:	movwcc	r1, #1
   14ec4:	ldr	r2, [sp, #68]	; 0x44
   14ec8:	eor	r2, r2, #1
   14ecc:	orrs	r1, r2, r1
   14ed0:	bne	14e40 <tcgetattr@plt+0x3a7c>
   14ed4:	ldr	r1, [sp, #52]	; 0x34
   14ed8:	ldr	r2, [sp, #24]
   14edc:	add	r1, r2, r1
   14ee0:	sub	r2, r0, #1
   14ee4:	b	14ef4 <tcgetattr@plt+0x3b30>
   14ee8:	add	r1, r1, #1
   14eec:	subs	r2, r2, #1
   14ef0:	beq	14e40 <tcgetattr@plt+0x3a7c>
   14ef4:	ldrb	r3, [r1]
   14ef8:	sub	r3, r3, #91	; 0x5b
   14efc:	cmp	r3, #33	; 0x21
   14f00:	bhi	14ee8 <tcgetattr@plt+0x3b24>
   14f04:	add	r5, pc, #0
   14f08:	ldr	pc, [r5, r3, lsl #2]
   14f0c:	andeq	r5, r1, r4, lsl #6
   14f10:	andeq	r5, r1, r4, lsl #6
   14f14:	andeq	r4, r1, r8, ror #29
   14f18:	andeq	r5, r1, r4, lsl #6
   14f1c:	andeq	r4, r1, r8, ror #29
   14f20:	andeq	r5, r1, r4, lsl #6
   14f24:	andeq	r4, r1, r8, ror #29
   14f28:	andeq	r4, r1, r8, ror #29
   14f2c:	andeq	r4, r1, r8, ror #29
   14f30:	andeq	r4, r1, r8, ror #29
   14f34:	andeq	r4, r1, r8, ror #29
   14f38:	andeq	r4, r1, r8, ror #29
   14f3c:	andeq	r4, r1, r8, ror #29
   14f40:	andeq	r4, r1, r8, ror #29
   14f44:	andeq	r4, r1, r8, ror #29
   14f48:	andeq	r4, r1, r8, ror #29
   14f4c:	andeq	r4, r1, r8, ror #29
   14f50:	andeq	r4, r1, r8, ror #29
   14f54:	andeq	r4, r1, r8, ror #29
   14f58:	andeq	r4, r1, r8, ror #29
   14f5c:	andeq	r4, r1, r8, ror #29
   14f60:	andeq	r4, r1, r8, ror #29
   14f64:	andeq	r4, r1, r8, ror #29
   14f68:	andeq	r4, r1, r8, ror #29
   14f6c:	andeq	r4, r1, r8, ror #29
   14f70:	andeq	r4, r1, r8, ror #29
   14f74:	andeq	r4, r1, r8, ror #29
   14f78:	andeq	r4, r1, r8, ror #29
   14f7c:	andeq	r4, r1, r8, ror #29
   14f80:	andeq	r4, r1, r8, ror #29
   14f84:	andeq	r4, r1, r8, ror #29
   14f88:	andeq	r4, r1, r8, ror #29
   14f8c:	andeq	r4, r1, r8, ror #29
   14f90:	andeq	r5, r1, r4, lsl #6
   14f94:	mov	r8, r0
   14f98:	b	149c8 <tcgetattr@plt+0x3604>
   14f9c:	ldr	r0, [sp, #36]	; 0x24
   14fa0:	cmp	r0, #0
   14fa4:	beq	15044 <tcgetattr@plt+0x3c80>
   14fa8:	add	r0, r7, #2
   14fac:	cmp	r0, lr
   14fb0:	bcs	15044 <tcgetattr@plt+0x3c80>
   14fb4:	add	r1, r7, ip
   14fb8:	ldrb	r1, [r1, #1]
   14fbc:	cmp	r1, #63	; 0x3f
   14fc0:	bne	15044 <tcgetattr@plt+0x3c80>
   14fc4:	ldrb	r1, [ip, r0]
   14fc8:	sub	r2, r1, #33	; 0x21
   14fcc:	cmp	r2, #29
   14fd0:	bhi	15044 <tcgetattr@plt+0x3c80>
   14fd4:	mov	r3, #1
   14fd8:	movw	r6, #20929	; 0x51c1
   14fdc:	movt	r6, #14336	; 0x3800
   14fe0:	tst	r6, r3, lsl r2
   14fe4:	beq	15044 <tcgetattr@plt+0x3c80>
   14fe8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14fec:	tst	r2, #1
   14ff0:	bne	1530c <tcgetattr@plt+0x3f48>
   14ff4:	cmp	r8, sl
   14ff8:	movcc	r2, #63	; 0x3f
   14ffc:	strbcc	r2, [r5, r8]
   15000:	add	r2, r8, #1
   15004:	cmp	r2, sl
   15008:	movcc	r3, #34	; 0x22
   1500c:	strbcc	r3, [r5, r2]
   15010:	add	r2, r8, #2
   15014:	cmp	r2, sl
   15018:	movcc	r3, #34	; 0x22
   1501c:	strbcc	r3, [r5, r2]
   15020:	add	r2, r8, #3
   15024:	cmp	r2, sl
   15028:	movcc	r3, #63	; 0x3f
   1502c:	strbcc	r3, [r5, r2]
   15030:	add	r8, r8, #4
   15034:	mov	r7, r0
   15038:	mov	r4, r1
   1503c:	mov	r6, #0
   15040:	b	149c8 <tcgetattr@plt+0x3604>
   15044:	mov	r6, #0
   15048:	b	149c8 <tcgetattr@plt+0x3604>
   1504c:	add	r0, r2, r7
   15050:	str	r0, [sp, #52]	; 0x34
   15054:	mov	r2, #0
   15058:	ldr	lr, [sp, #32]
   1505c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15060:	str	r1, [sp, #48]	; 0x30
   15064:	tst	r1, #1
   15068:	bne	15144 <tcgetattr@plt+0x3d80>
   1506c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15070:	tst	r1, #1
   15074:	bne	1530c <tcgetattr@plt+0x3f48>
   15078:	mov	r3, r0
   1507c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15080:	subs	r1, r0, #2
   15084:	movwne	r1, #1
   15088:	orr	r1, r1, r3
   1508c:	tst	r1, #1
   15090:	bne	150c8 <tcgetattr@plt+0x3d04>
   15094:	cmp	r8, sl
   15098:	movcc	r0, #39	; 0x27
   1509c:	strbcc	r0, [r5, r8]
   150a0:	add	r2, r8, #1
   150a4:	cmp	r2, sl
   150a8:	movcc	r0, #36	; 0x24
   150ac:	strbcc	r0, [r5, r2]
   150b0:	add	r2, r8, #2
   150b4:	cmp	r2, sl
   150b8:	movcc	r0, #39	; 0x27
   150bc:	strbcc	r0, [r5, r2]
   150c0:	add	r8, r8, #3
   150c4:	mov	r3, #1
   150c8:	cmp	r8, sl
   150cc:	movcc	r1, #92	; 0x5c
   150d0:	strbcc	r1, [r5, r8]
   150d4:	add	r2, r8, #1
   150d8:	cmp	r2, sl
   150dc:	bcs	150f0 <tcgetattr@plt+0x3d2c>
   150e0:	uxtb	r1, r4
   150e4:	mov	r0, #48	; 0x30
   150e8:	orr	r1, r0, r1, lsr #6
   150ec:	strb	r1, [r5, r2]
   150f0:	add	r2, r8, #2
   150f4:	cmp	r2, sl
   150f8:	lsrcc	r1, r4, #3
   150fc:	movcc	r0, #6
   15100:	bficc	r1, r0, #3, #29
   15104:	strbcc	r1, [r5, r2]
   15108:	mov	r0, #6
   1510c:	bfi	r4, r0, #3, #29
   15110:	add	r8, r8, #3
   15114:	mov	r2, #1
   15118:	mov	r0, r3
   1511c:	b	15168 <tcgetattr@plt+0x3da4>
   15120:	cmp	r8, sl
   15124:	strbcc	r4, [r5, r8]
   15128:	ldr	r1, [sp, #76]	; 0x4c
   1512c:	ldrb	r4, [r1, r7]
   15130:	add	r8, r8, #1
   15134:	mov	r7, r3
   15138:	ldr	r1, [sp, #48]	; 0x30
   1513c:	tst	r1, #1
   15140:	beq	1506c <tcgetattr@plt+0x3ca8>
   15144:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15148:	tst	r1, #1
   1514c:	beq	15160 <tcgetattr@plt+0x3d9c>
   15150:	cmp	r8, sl
   15154:	movcc	r1, #92	; 0x5c
   15158:	strbcc	r1, [r5, r8]
   1515c:	add	r8, r8, #1
   15160:	mov	r1, #0
   15164:	str	r1, [fp, #-52]	; 0xffffffcc
   15168:	and	r9, r2, #1
   1516c:	add	r3, r7, #1
   15170:	ldr	r1, [sp, #52]	; 0x34
   15174:	cmp	r1, r3
   15178:	bls	151bc <tcgetattr@plt+0x3df8>
   1517c:	cmp	r9, #0
   15180:	movwne	r9, #1
   15184:	mvn	r1, r0
   15188:	orr	r1, r1, r9
   1518c:	tst	r1, #1
   15190:	bne	15120 <tcgetattr@plt+0x3d5c>
   15194:	cmp	r8, sl
   15198:	movcc	r1, #39	; 0x27
   1519c:	strbcc	r1, [r5, r8]
   151a0:	add	r1, r8, #1
   151a4:	cmp	r1, sl
   151a8:	movcc	r0, #39	; 0x27
   151ac:	strbcc	r0, [r5, r1]
   151b0:	add	r8, r8, #2
   151b4:	mov	r0, #0
   151b8:	b	15120 <tcgetattr@plt+0x3d5c>
   151bc:	str	r0, [fp, #-56]	; 0xffffffc8
   151c0:	cmp	r9, #0
   151c4:	movwne	r9, #1
   151c8:	cmp	r9, #0
   151cc:	beq	14d50 <tcgetattr@plt+0x398c>
   151d0:	b	14d84 <tcgetattr@plt+0x39c0>
   151d4:	mov	r6, #0
   151d8:	b	15218 <tcgetattr@plt+0x3e54>
   151dc:	mov	r6, #0
   151e0:	ldr	r0, [sp, #48]	; 0x30
   151e4:	cmp	r0, lr
   151e8:	bcs	15218 <tcgetattr@plt+0x3e54>
   151ec:	ldr	ip, [fp, #-80]	; 0xffffffb0
   151f0:	add	r0, ip, r7
   151f4:	ldr	r2, [sp, #52]	; 0x34
   151f8:	ldrb	r1, [r0, r2]
   151fc:	cmp	r1, #0
   15200:	beq	14d0c <tcgetattr@plt+0x3948>
   15204:	add	r2, r2, #1
   15208:	add	r1, r7, r2
   1520c:	cmp	r1, lr
   15210:	bcc	151f8 <tcgetattr@plt+0x3e34>
   15214:	b	14d0c <tcgetattr@plt+0x3948>
   15218:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1521c:	ldr	r2, [sp, #52]	; 0x34
   15220:	b	14d0c <tcgetattr@plt+0x3948>
   15224:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15228:	eor	r0, r1, #2
   1522c:	orr	r0, r0, r8
   15230:	clz	r0, r0
   15234:	lsr	r0, r0, #5
   15238:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1523c:	tst	r3, r0
   15240:	bne	1530c <tcgetattr@plt+0x3f48>
   15244:	mov	r6, r5
   15248:	subs	r0, r1, #2
   1524c:	movwne	r0, #1
   15250:	orr	r0, r3, r0
   15254:	tst	r0, #1
   15258:	ldr	r2, [sp, #92]	; 0x5c
   1525c:	ldreq	r0, [sp, #64]	; 0x40
   15260:	eoreq	r0, r0, #1
   15264:	tsteq	r0, #1
   15268:	bne	152a8 <tcgetattr@plt+0x3ee4>
   1526c:	mov	r9, lr
   15270:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15274:	tst	r0, #1
   15278:	bne	15374 <tcgetattr@plt+0x3fb0>
   1527c:	ldr	r0, [sp, #84]	; 0x54
   15280:	cmp	r0, #0
   15284:	beq	152a8 <tcgetattr@plt+0x3ee4>
   15288:	mov	r0, #0
   1528c:	str	r0, [fp, #-48]	; 0xffffffd0
   15290:	mov	r1, #2
   15294:	cmp	sl, #0
   15298:	mov	r0, r2
   1529c:	mov	r4, r3
   152a0:	ldr	r7, [sp, #84]	; 0x54
   152a4:	beq	14480 <tcgetattr@plt+0x30bc>
   152a8:	ldr	r1, [fp, #-84]	; 0xffffffac
   152ac:	clz	r0, r1
   152b0:	lsr	r0, r0, #5
   152b4:	orr	r0, r0, r3
   152b8:	tst	r0, #1
   152bc:	bne	152e8 <tcgetattr@plt+0x3f24>
   152c0:	ldrb	r0, [r1]
   152c4:	cmp	r0, #0
   152c8:	beq	152e8 <tcgetattr@plt+0x3f24>
   152cc:	add	r1, r1, #1
   152d0:	cmp	r8, sl
   152d4:	strbcc	r0, [r6, r8]
   152d8:	add	r8, r8, #1
   152dc:	ldrb	r0, [r1], #1
   152e0:	cmp	r0, #0
   152e4:	bne	152d0 <tcgetattr@plt+0x3f0c>
   152e8:	cmp	r8, sl
   152ec:	movcc	r0, #0
   152f0:	strbcc	r0, [r6, r8]
   152f4:	b	15368 <tcgetattr@plt+0x3fa4>
   152f8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   152fc:	mov	lr, r4
   15300:	b	1530c <tcgetattr@plt+0x3f48>
   15304:	ldr	r5, [sp, #28]
   15308:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1530c:	mov	r0, #0
   15310:	ldr	r1, [fp, #12]
   15314:	bic	r1, r1, #2
   15318:	mov	r2, #2
   1531c:	ldr	r3, [sp, #92]	; 0x5c
   15320:	tst	r3, #1
   15324:	movwne	r2, #4
   15328:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1532c:	cmp	r3, #2
   15330:	movne	r2, r3
   15334:	str	r2, [sp]
   15338:	str	r1, [sp, #4]
   1533c:	str	r0, [sp, #8]
   15340:	ldr	r0, [sp, #80]	; 0x50
   15344:	str	r0, [sp, #12]
   15348:	ldr	r0, [sp, #88]	; 0x58
   1534c:	str	r0, [sp, #16]
   15350:	mov	r0, r5
   15354:	mov	r1, sl
   15358:	mov	r2, ip
   1535c:	mov	r3, lr
   15360:	bl	143f4 <tcgetattr@plt+0x3030>
   15364:	mov	r8, r0
   15368:	mov	r0, r8
   1536c:	sub	sp, fp, #28
   15370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15374:	mov	r0, #5
   15378:	str	r0, [sp]
   1537c:	ldr	r0, [fp, #12]
   15380:	str	r0, [sp, #4]
   15384:	ldr	r0, [fp, #16]
   15388:	str	r0, [sp, #8]
   1538c:	ldr	r0, [sp, #80]	; 0x50
   15390:	str	r0, [sp, #12]
   15394:	ldr	r0, [sp, #88]	; 0x58
   15398:	str	r0, [sp, #16]
   1539c:	mov	r0, r6
   153a0:	ldr	r1, [sp, #84]	; 0x54
   153a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   153a8:	mov	r3, r9
   153ac:	b	15360 <tcgetattr@plt+0x3f9c>
   153b0:	bl	11394 <abort@plt>
   153b4:	mov	r3, r2
   153b8:	mov	r2, #0
   153bc:	b	153c0 <tcgetattr@plt+0x3ffc>
   153c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153c4:	add	fp, sp, #28
   153c8:	sub	sp, sp, #36	; 0x24
   153cc:	mov	r4, r2
   153d0:	str	r2, [sp, #24]
   153d4:	mov	r5, r1
   153d8:	mov	r6, r0
   153dc:	str	r0, [sp, #20]
   153e0:	movw	r8, #49760	; 0xc260
   153e4:	movt	r8, #2
   153e8:	cmp	r3, #0
   153ec:	movne	r8, r3
   153f0:	bl	112d4 <__errno_location@plt>
   153f4:	str	r0, [sp, #28]
   153f8:	ldm	r8, {r3, r9}
   153fc:	ldr	r1, [r8, #40]	; 0x28
   15400:	ldr	r2, [r8, #44]	; 0x2c
   15404:	ldr	r7, [r0]
   15408:	str	r7, [sp, #32]
   1540c:	add	sl, r8, #8
   15410:	cmp	r4, #0
   15414:	orreq	r9, r9, #1
   15418:	stm	sp, {r3, r9, sl}
   1541c:	str	r1, [sp, #12]
   15420:	str	r2, [sp, #16]
   15424:	mov	r0, #0
   15428:	mov	r1, #0
   1542c:	mov	r2, r6
   15430:	mov	r3, r5
   15434:	mov	r7, r5
   15438:	bl	143f4 <tcgetattr@plt+0x3030>
   1543c:	mov	r5, r0
   15440:	add	r4, r0, #1
   15444:	mov	r0, r4
   15448:	bl	162c8 <tcgetattr@plt+0x4f04>
   1544c:	mov	r6, r0
   15450:	ldr	r0, [r8]
   15454:	ldr	r1, [r8, #40]	; 0x28
   15458:	ldr	r2, [r8, #44]	; 0x2c
   1545c:	stm	sp, {r0, r9, sl}
   15460:	str	r1, [sp, #12]
   15464:	str	r2, [sp, #16]
   15468:	mov	r0, r6
   1546c:	mov	r1, r4
   15470:	ldr	r2, [sp, #20]
   15474:	mov	r3, r7
   15478:	bl	143f4 <tcgetattr@plt+0x3030>
   1547c:	ldr	r0, [sp, #24]
   15480:	ldr	r1, [sp, #32]
   15484:	ldr	r2, [sp, #28]
   15488:	str	r1, [r2]
   1548c:	cmp	r0, #0
   15490:	strne	r5, [r0]
   15494:	mov	r0, r6
   15498:	sub	sp, fp, #28
   1549c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   154a4:	add	fp, sp, #24
   154a8:	movw	r8, #49440	; 0xc120
   154ac:	movt	r8, #2
   154b0:	ldr	r4, [r8]
   154b4:	movw	r5, #49444	; 0xc124
   154b8:	movt	r5, #2
   154bc:	ldr	r0, [r5]
   154c0:	cmp	r0, #2
   154c4:	blt	154f0 <tcgetattr@plt+0x412c>
   154c8:	add	r7, r4, #12
   154cc:	mov	r6, #0
   154d0:	ldr	r0, [r7, r6, lsl #3]
   154d4:	bl	14190 <tcgetattr@plt+0x2dcc>
   154d8:	add	r0, r6, #1
   154dc:	ldr	r1, [r5]
   154e0:	add	r2, r6, #2
   154e4:	cmp	r2, r1
   154e8:	mov	r6, r0
   154ec:	blt	154d0 <tcgetattr@plt+0x410c>
   154f0:	ldr	r0, [r4, #4]
   154f4:	movw	r9, #49808	; 0xc290
   154f8:	movt	r9, #2
   154fc:	cmp	r0, r9
   15500:	movw	r7, #49448	; 0xc128
   15504:	movt	r7, #2
   15508:	beq	15518 <tcgetattr@plt+0x4154>
   1550c:	bl	14190 <tcgetattr@plt+0x2dcc>
   15510:	mov	r0, #256	; 0x100
   15514:	stm	r7, {r0, r9}
   15518:	cmp	r4, r7
   1551c:	beq	1552c <tcgetattr@plt+0x4168>
   15520:	mov	r0, r4
   15524:	bl	14190 <tcgetattr@plt+0x2dcc>
   15528:	str	r7, [r8]
   1552c:	mov	r0, #1
   15530:	str	r0, [r5]
   15534:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15538:	movw	r3, #49760	; 0xc260
   1553c:	movt	r3, #2
   15540:	mvn	r2, #0
   15544:	b	15548 <tcgetattr@plt+0x4184>
   15548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1554c:	add	fp, sp, #28
   15550:	sub	sp, sp, #44	; 0x2c
   15554:	mov	r7, r3
   15558:	str	r2, [sp, #36]	; 0x24
   1555c:	str	r1, [sp, #32]
   15560:	mov	r5, r0
   15564:	bl	112d4 <__errno_location@plt>
   15568:	cmp	r5, #0
   1556c:	bmi	156dc <tcgetattr@plt+0x4318>
   15570:	cmn	r5, #-2147483647	; 0x80000001
   15574:	beq	156dc <tcgetattr@plt+0x4318>
   15578:	movw	r4, #49440	; 0xc120
   1557c:	movt	r4, #2
   15580:	ldr	r6, [r4]
   15584:	str	r0, [sp, #28]
   15588:	ldr	r0, [r0]
   1558c:	str	r0, [sp, #24]
   15590:	movw	r8, #49444	; 0xc124
   15594:	movt	r8, #2
   15598:	ldr	r1, [r8]
   1559c:	cmp	r1, r5
   155a0:	ble	155ac <tcgetattr@plt+0x41e8>
   155a4:	mov	sl, r6
   155a8:	b	15618 <tcgetattr@plt+0x4254>
   155ac:	str	r1, [fp, #-32]	; 0xffffffe0
   155b0:	mov	r0, #8
   155b4:	str	r0, [sp]
   155b8:	movw	r9, #49448	; 0xc128
   155bc:	movt	r9, #2
   155c0:	subs	r0, r6, r9
   155c4:	movne	r0, r6
   155c8:	sub	r1, r5, r1
   155cc:	add	r2, r1, #1
   155d0:	sub	r1, fp, #32
   155d4:	mvn	r3, #-2147483648	; 0x80000000
   155d8:	bl	163a4 <tcgetattr@plt+0x4fe0>
   155dc:	mov	sl, r0
   155e0:	str	r0, [r4]
   155e4:	cmp	r6, r9
   155e8:	bne	155f4 <tcgetattr@plt+0x4230>
   155ec:	ldrd	r0, [r9]
   155f0:	stm	sl, {r0, r1}
   155f4:	ldr	r1, [r8]
   155f8:	add	r0, sl, r1, lsl #3
   155fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15600:	sub	r1, r2, r1
   15604:	lsl	r2, r1, #3
   15608:	mov	r1, #0
   1560c:	bl	112f8 <memset@plt>
   15610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15614:	str	r0, [r8]
   15618:	mov	r9, sl
   1561c:	ldr	r6, [r9, r5, lsl #3]!
   15620:	ldr	r4, [r9, #4]!
   15624:	ldm	r7, {r0, r1}
   15628:	ldr	r2, [r7, #40]	; 0x28
   1562c:	ldr	r3, [r7, #44]	; 0x2c
   15630:	orr	r8, r1, #1
   15634:	add	r1, r7, #8
   15638:	stm	sp, {r0, r8}
   1563c:	str	r1, [sp, #20]
   15640:	add	r0, sp, #8
   15644:	stm	r0, {r1, r2, r3}
   15648:	mov	r0, r4
   1564c:	mov	r1, r6
   15650:	ldr	r2, [sp, #32]
   15654:	ldr	r3, [sp, #36]	; 0x24
   15658:	bl	143f4 <tcgetattr@plt+0x3030>
   1565c:	cmp	r6, r0
   15660:	bhi	156c4 <tcgetattr@plt+0x4300>
   15664:	add	r6, r0, #1
   15668:	str	r6, [sl, r5, lsl #3]
   1566c:	movw	r0, #49808	; 0xc290
   15670:	movt	r0, #2
   15674:	cmp	r4, r0
   15678:	beq	15684 <tcgetattr@plt+0x42c0>
   1567c:	mov	r0, r4
   15680:	bl	14190 <tcgetattr@plt+0x2dcc>
   15684:	mov	r0, r6
   15688:	bl	162c8 <tcgetattr@plt+0x4f04>
   1568c:	mov	r4, r0
   15690:	str	r0, [r9]
   15694:	ldr	r0, [r7]
   15698:	ldr	r1, [r7, #40]	; 0x28
   1569c:	ldr	r2, [r7, #44]	; 0x2c
   156a0:	stm	sp, {r0, r8}
   156a4:	ldr	r0, [sp, #20]
   156a8:	add	r3, sp, #8
   156ac:	stm	r3, {r0, r1, r2}
   156b0:	mov	r0, r4
   156b4:	mov	r1, r6
   156b8:	ldr	r2, [sp, #32]
   156bc:	ldr	r3, [sp, #36]	; 0x24
   156c0:	bl	143f4 <tcgetattr@plt+0x3030>
   156c4:	ldr	r0, [sp, #28]
   156c8:	ldr	r1, [sp, #24]
   156cc:	str	r1, [r0]
   156d0:	mov	r0, r4
   156d4:	sub	sp, fp, #28
   156d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156dc:	bl	11394 <abort@plt>
   156e0:	movw	r3, #49760	; 0xc260
   156e4:	movt	r3, #2
   156e8:	b	15548 <tcgetattr@plt+0x4184>
   156ec:	mov	r1, r0
   156f0:	mov	r0, #0
   156f4:	b	15538 <tcgetattr@plt+0x4174>
   156f8:	mov	r2, r1
   156fc:	mov	r1, r0
   15700:	mov	r0, #0
   15704:	b	156e0 <tcgetattr@plt+0x431c>
   15708:	push	{r4, r5, r6, sl, fp, lr}
   1570c:	add	fp, sp, #16
   15710:	sub	sp, sp, #48	; 0x30
   15714:	mov	r4, r2
   15718:	mov	r5, r0
   1571c:	mov	r6, sp
   15720:	mov	r0, r6
   15724:	bl	15744 <tcgetattr@plt+0x4380>
   15728:	mov	r0, r5
   1572c:	mov	r1, r4
   15730:	mvn	r2, #0
   15734:	mov	r3, r6
   15738:	bl	15548 <tcgetattr@plt+0x4184>
   1573c:	sub	sp, fp, #16
   15740:	pop	{r4, r5, r6, sl, fp, pc}
   15744:	push	{fp, lr}
   15748:	mov	fp, sp
   1574c:	vmov.i32	q8, #0	; 0x00000000
   15750:	mov	r2, #32
   15754:	mov	r3, r0
   15758:	vst1.32	{d16-d17}, [r3], r2
   1575c:	vst1.32	{d16-d17}, [r3]
   15760:	add	r2, r0, #16
   15764:	vst1.32	{d16-d17}, [r2]
   15768:	cmp	r1, #10
   1576c:	strne	r1, [r0]
   15770:	popne	{fp, pc}
   15774:	bl	11394 <abort@plt>
   15778:	push	{r4, r5, r6, r7, fp, lr}
   1577c:	add	fp, sp, #16
   15780:	sub	sp, sp, #48	; 0x30
   15784:	mov	r4, r3
   15788:	mov	r5, r2
   1578c:	mov	r6, r0
   15790:	mov	r7, sp
   15794:	mov	r0, r7
   15798:	bl	15744 <tcgetattr@plt+0x4380>
   1579c:	mov	r0, r6
   157a0:	mov	r1, r5
   157a4:	mov	r2, r4
   157a8:	mov	r3, r7
   157ac:	bl	15548 <tcgetattr@plt+0x4184>
   157b0:	sub	sp, fp, #16
   157b4:	pop	{r4, r5, r6, r7, fp, pc}
   157b8:	mov	r2, r1
   157bc:	mov	r1, r0
   157c0:	mov	r0, #0
   157c4:	b	15708 <tcgetattr@plt+0x4344>
   157c8:	mov	r3, r2
   157cc:	mov	r2, r1
   157d0:	mov	r1, r0
   157d4:	mov	r0, #0
   157d8:	b	15778 <tcgetattr@plt+0x43b4>
   157dc:	push	{r4, r5, r6, sl, fp, lr}
   157e0:	add	fp, sp, #16
   157e4:	sub	sp, sp, #48	; 0x30
   157e8:	mov	r4, r1
   157ec:	mov	r5, r0
   157f0:	movw	r0, #49760	; 0xc260
   157f4:	movt	r0, #2
   157f8:	add	r1, r0, #16
   157fc:	mov	r3, #32
   15800:	vld1.64	{d16-d17}, [r0], r3
   15804:	vld1.64	{d18-d19}, [r1]
   15808:	mov	r6, sp
   1580c:	add	r1, r6, #16
   15810:	vld1.64	{d20-d21}, [r0]
   15814:	vst1.64	{d18-d19}, [r1]
   15818:	mov	r0, r6
   1581c:	vst1.64	{d16-d17}, [r0], r3
   15820:	vst1.64	{d20-d21}, [r0]
   15824:	mov	r0, r6
   15828:	mov	r1, r2
   1582c:	mov	r2, #1
   15830:	bl	142e8 <tcgetattr@plt+0x2f24>
   15834:	mov	r0, #0
   15838:	mov	r1, r5
   1583c:	mov	r2, r4
   15840:	mov	r3, r6
   15844:	bl	15548 <tcgetattr@plt+0x4184>
   15848:	sub	sp, fp, #16
   1584c:	pop	{r4, r5, r6, sl, fp, pc}
   15850:	mov	r2, r1
   15854:	mvn	r1, #0
   15858:	b	157dc <tcgetattr@plt+0x4418>
   1585c:	mov	r1, #58	; 0x3a
   15860:	b	15850 <tcgetattr@plt+0x448c>
   15864:	mov	r2, #58	; 0x3a
   15868:	b	157dc <tcgetattr@plt+0x4418>
   1586c:	push	{r4, r5, r6, sl, fp, lr}
   15870:	add	fp, sp, #16
   15874:	sub	sp, sp, #48	; 0x30
   15878:	mov	r4, r2
   1587c:	mov	r5, r0
   15880:	mov	r6, sp
   15884:	mov	r0, r6
   15888:	bl	15744 <tcgetattr@plt+0x4380>
   1588c:	mov	r0, r6
   15890:	mov	r1, #58	; 0x3a
   15894:	mov	r2, #1
   15898:	bl	142e8 <tcgetattr@plt+0x2f24>
   1589c:	mov	r0, r5
   158a0:	mov	r1, r4
   158a4:	mvn	r2, #0
   158a8:	mov	r3, r6
   158ac:	bl	15548 <tcgetattr@plt+0x4184>
   158b0:	sub	sp, fp, #16
   158b4:	pop	{r4, r5, r6, sl, fp, pc}
   158b8:	push	{fp, lr}
   158bc:	mov	fp, sp
   158c0:	sub	sp, sp, #8
   158c4:	mvn	ip, #0
   158c8:	str	ip, [sp]
   158cc:	bl	158d8 <tcgetattr@plt+0x4514>
   158d0:	mov	sp, fp
   158d4:	pop	{fp, pc}
   158d8:	push	{r4, r5, r6, r7, fp, lr}
   158dc:	add	fp, sp, #16
   158e0:	sub	sp, sp, #48	; 0x30
   158e4:	mov	r7, r3
   158e8:	mov	r5, r0
   158ec:	movw	r0, #49760	; 0xc260
   158f0:	movt	r0, #2
   158f4:	add	r3, r0, #16
   158f8:	mov	r4, #32
   158fc:	vld1.64	{d16-d17}, [r0], r4
   15900:	vld1.64	{d18-d19}, [r3]
   15904:	mov	r6, sp
   15908:	add	r3, r6, #16
   1590c:	vld1.64	{d20-d21}, [r0]
   15910:	vst1.64	{d18-d19}, [r3]
   15914:	mov	r0, r6
   15918:	vst1.64	{d16-d17}, [r0], r4
   1591c:	vst1.64	{d20-d21}, [r0]
   15920:	mov	r0, r6
   15924:	bl	14340 <tcgetattr@plt+0x2f7c>
   15928:	ldr	r2, [fp, #8]
   1592c:	mov	r0, r5
   15930:	mov	r1, r7
   15934:	mov	r3, r6
   15938:	bl	15548 <tcgetattr@plt+0x4184>
   1593c:	sub	sp, fp, #16
   15940:	pop	{r4, r5, r6, r7, fp, pc}
   15944:	mov	r3, r2
   15948:	mov	r2, r1
   1594c:	mov	r1, r0
   15950:	mov	r0, #0
   15954:	b	158b8 <tcgetattr@plt+0x44f4>
   15958:	push	{fp, lr}
   1595c:	mov	fp, sp
   15960:	sub	sp, sp, #8
   15964:	mov	ip, r2
   15968:	mov	r2, r1
   1596c:	mov	r1, r0
   15970:	str	r3, [sp]
   15974:	mov	r0, #0
   15978:	mov	r3, ip
   1597c:	bl	158d8 <tcgetattr@plt+0x4514>
   15980:	mov	sp, fp
   15984:	pop	{fp, pc}
   15988:	movw	r3, #49456	; 0xc130
   1598c:	movt	r3, #2
   15990:	b	15548 <tcgetattr@plt+0x4184>
   15994:	mov	r2, r1
   15998:	mov	r1, r0
   1599c:	mov	r0, #0
   159a0:	b	15988 <tcgetattr@plt+0x45c4>
   159a4:	mvn	r2, #0
   159a8:	b	15988 <tcgetattr@plt+0x45c4>
   159ac:	mov	r1, r0
   159b0:	mov	r0, #0
   159b4:	b	159a4 <tcgetattr@plt+0x45e0>
   159b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   159bc:	add	fp, sp, #24
   159c0:	sub	sp, sp, #16
   159c4:	mov	r4, r1
   159c8:	mov	r5, r0
   159cc:	mov	r7, #0
   159d0:	mov	r0, #0
   159d4:	mov	r1, r5
   159d8:	mov	r2, #5
   159dc:	bl	11160 <dcgettext@plt>
   159e0:	cmp	r0, r5
   159e4:	beq	159f0 <tcgetattr@plt+0x462c>
   159e8:	sub	sp, fp, #24
   159ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   159f0:	bl	1783c <tcgetattr@plt+0x6478>
   159f4:	mov	r6, r0
   159f8:	mov	r8, #56	; 0x38
   159fc:	mov	r0, #45	; 0x2d
   15a00:	stm	sp, {r0, r8}
   15a04:	str	r7, [sp, #8]
   15a08:	str	r7, [sp, #12]
   15a0c:	mov	r0, r6
   15a10:	mov	r1, #85	; 0x55
   15a14:	mov	r2, #84	; 0x54
   15a18:	mov	r3, #70	; 0x46
   15a1c:	bl	15ab4 <tcgetattr@plt+0x46f0>
   15a20:	cmp	r0, #0
   15a24:	beq	15a40 <tcgetattr@plt+0x467c>
   15a28:	ldrb	r1, [r5]
   15a2c:	movw	r2, #44400	; 0xad70
   15a30:	movt	r2, #1
   15a34:	movw	r0, #44404	; 0xad74
   15a38:	movt	r0, #1
   15a3c:	b	15a84 <tcgetattr@plt+0x46c0>
   15a40:	mov	r0, #48	; 0x30
   15a44:	mov	r1, #51	; 0x33
   15a48:	str	r8, [sp]
   15a4c:	stmib	sp, {r0, r1}
   15a50:	str	r0, [sp, #12]
   15a54:	mov	r0, r6
   15a58:	mov	r1, #71	; 0x47
   15a5c:	mov	r2, #66	; 0x42
   15a60:	mov	r3, #49	; 0x31
   15a64:	bl	15ab4 <tcgetattr@plt+0x46f0>
   15a68:	cmp	r0, #0
   15a6c:	beq	15a94 <tcgetattr@plt+0x46d0>
   15a70:	ldrb	r1, [r5]
   15a74:	movw	r2, #44408	; 0xad78
   15a78:	movt	r2, #1
   15a7c:	movw	r0, #44412	; 0xad7c
   15a80:	movt	r0, #1
   15a84:	cmp	r1, #96	; 0x60
   15a88:	moveq	r0, r2
   15a8c:	sub	sp, fp, #24
   15a90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a94:	movw	r1, #44394	; 0xad6a
   15a98:	movt	r1, #1
   15a9c:	movw	r0, #44398	; 0xad6e
   15aa0:	movt	r0, #1
   15aa4:	cmp	r4, #9
   15aa8:	moveq	r0, r1
   15aac:	sub	sp, fp, #24
   15ab0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ab4:	push	{r4, r5, r6, r7, fp, lr}
   15ab8:	add	fp, sp, #16
   15abc:	sub	sp, sp, #16
   15ac0:	mov	r4, r3
   15ac4:	mov	r5, r2
   15ac8:	mov	r7, r1
   15acc:	mov	r6, r0
   15ad0:	mov	r0, r1
   15ad4:	bl	17548 <tcgetattr@plt+0x6184>
   15ad8:	ldrb	r1, [r6]
   15adc:	cmp	r0, #0
   15ae0:	andne	r1, r1, #223	; 0xdf
   15ae4:	mov	r0, #0
   15ae8:	cmp	r1, r7
   15aec:	bne	15b24 <tcgetattr@plt+0x4760>
   15af0:	cmp	r7, #0
   15af4:	beq	15b2c <tcgetattr@plt+0x4768>
   15af8:	ldr	r0, [fp, #20]
   15afc:	ldr	r1, [fp, #16]
   15b00:	ldr	r2, [fp, #12]
   15b04:	ldr	r3, [fp, #8]
   15b08:	str	r2, [sp]
   15b0c:	str	r1, [sp, #4]
   15b10:	str	r0, [sp, #8]
   15b14:	mov	r0, r6
   15b18:	mov	r1, r5
   15b1c:	mov	r2, r4
   15b20:	bl	15b38 <tcgetattr@plt+0x4774>
   15b24:	sub	sp, fp, #16
   15b28:	pop	{r4, r5, r6, r7, fp, pc}
   15b2c:	mov	r0, #1
   15b30:	sub	sp, fp, #16
   15b34:	pop	{r4, r5, r6, r7, fp, pc}
   15b38:	push	{r4, r5, r6, r7, fp, lr}
   15b3c:	add	fp, sp, #16
   15b40:	sub	sp, sp, #8
   15b44:	mov	r4, r3
   15b48:	mov	r5, r2
   15b4c:	mov	r7, r1
   15b50:	mov	r6, r0
   15b54:	mov	r0, r1
   15b58:	bl	17548 <tcgetattr@plt+0x6184>
   15b5c:	ldrb	r1, [r6, #1]
   15b60:	cmp	r0, #0
   15b64:	andne	r1, r1, #223	; 0xdf
   15b68:	mov	r0, #0
   15b6c:	cmp	r1, r7
   15b70:	bne	15ba0 <tcgetattr@plt+0x47dc>
   15b74:	cmp	r7, #0
   15b78:	beq	15ba8 <tcgetattr@plt+0x47e4>
   15b7c:	ldr	r0, [fp, #16]
   15b80:	ldr	r1, [fp, #12]
   15b84:	ldr	r3, [fp, #8]
   15b88:	str	r1, [sp]
   15b8c:	str	r0, [sp, #4]
   15b90:	mov	r0, r6
   15b94:	mov	r1, r5
   15b98:	mov	r2, r4
   15b9c:	bl	15bb4 <tcgetattr@plt+0x47f0>
   15ba0:	sub	sp, fp, #16
   15ba4:	pop	{r4, r5, r6, r7, fp, pc}
   15ba8:	mov	r0, #1
   15bac:	sub	sp, fp, #16
   15bb0:	pop	{r4, r5, r6, r7, fp, pc}
   15bb4:	push	{r4, r5, r6, r7, fp, lr}
   15bb8:	add	fp, sp, #16
   15bbc:	sub	sp, sp, #8
   15bc0:	mov	r4, r3
   15bc4:	mov	r5, r2
   15bc8:	mov	r7, r1
   15bcc:	mov	r6, r0
   15bd0:	mov	r0, r1
   15bd4:	bl	17548 <tcgetattr@plt+0x6184>
   15bd8:	ldrb	r1, [r6, #2]
   15bdc:	cmp	r0, #0
   15be0:	andne	r1, r1, #223	; 0xdf
   15be4:	mov	r0, #0
   15be8:	cmp	r1, r7
   15bec:	bne	15c14 <tcgetattr@plt+0x4850>
   15bf0:	cmp	r7, #0
   15bf4:	beq	15c1c <tcgetattr@plt+0x4858>
   15bf8:	ldr	r0, [fp, #12]
   15bfc:	ldr	r3, [fp, #8]
   15c00:	str	r0, [sp]
   15c04:	mov	r0, r6
   15c08:	mov	r1, r5
   15c0c:	mov	r2, r4
   15c10:	bl	15c28 <tcgetattr@plt+0x4864>
   15c14:	sub	sp, fp, #16
   15c18:	pop	{r4, r5, r6, r7, fp, pc}
   15c1c:	mov	r0, #1
   15c20:	sub	sp, fp, #16
   15c24:	pop	{r4, r5, r6, r7, fp, pc}
   15c28:	push	{r4, r5, r6, r7, fp, lr}
   15c2c:	add	fp, sp, #16
   15c30:	mov	r4, r3
   15c34:	mov	r5, r2
   15c38:	mov	r7, r1
   15c3c:	mov	r6, r0
   15c40:	mov	r0, r1
   15c44:	bl	17548 <tcgetattr@plt+0x6184>
   15c48:	ldrb	r1, [r6, #3]
   15c4c:	ldr	r3, [fp, #8]
   15c50:	cmp	r0, #0
   15c54:	andne	r1, r1, #223	; 0xdf
   15c58:	mov	r0, #0
   15c5c:	cmp	r1, r7
   15c60:	bne	15c84 <tcgetattr@plt+0x48c0>
   15c64:	cmp	r7, #0
   15c68:	beq	15c80 <tcgetattr@plt+0x48bc>
   15c6c:	mov	r0, r6
   15c70:	mov	r1, r5
   15c74:	mov	r2, r4
   15c78:	pop	{r4, r5, r6, r7, fp, lr}
   15c7c:	b	15c88 <tcgetattr@plt+0x48c4>
   15c80:	mov	r0, #1
   15c84:	pop	{r4, r5, r6, r7, fp, pc}
   15c88:	push	{r4, r5, r6, r7, fp, lr}
   15c8c:	add	fp, sp, #16
   15c90:	mov	r4, r3
   15c94:	mov	r5, r2
   15c98:	mov	r7, r1
   15c9c:	mov	r6, r0
   15ca0:	mov	r0, r1
   15ca4:	bl	17548 <tcgetattr@plt+0x6184>
   15ca8:	ldrb	r1, [r6, #4]
   15cac:	cmp	r0, #0
   15cb0:	andne	r1, r1, #223	; 0xdf
   15cb4:	mov	r0, #0
   15cb8:	cmp	r1, r7
   15cbc:	bne	15ce0 <tcgetattr@plt+0x491c>
   15cc0:	cmp	r7, #0
   15cc4:	beq	15cdc <tcgetattr@plt+0x4918>
   15cc8:	mov	r0, r6
   15ccc:	mov	r1, r5
   15cd0:	mov	r2, r4
   15cd4:	pop	{r4, r5, r6, r7, fp, lr}
   15cd8:	b	15ce4 <tcgetattr@plt+0x4920>
   15cdc:	mov	r0, #1
   15ce0:	pop	{r4, r5, r6, r7, fp, pc}
   15ce4:	push	{r4, r5, r6, sl, fp, lr}
   15ce8:	add	fp, sp, #16
   15cec:	mov	r4, r2
   15cf0:	mov	r6, r1
   15cf4:	mov	r5, r0
   15cf8:	mov	r0, r1
   15cfc:	bl	17548 <tcgetattr@plt+0x6184>
   15d00:	ldrb	r1, [r5, #5]
   15d04:	cmp	r0, #0
   15d08:	andne	r1, r1, #223	; 0xdf
   15d0c:	mov	r0, #0
   15d10:	cmp	r1, r6
   15d14:	bne	15d34 <tcgetattr@plt+0x4970>
   15d18:	cmp	r6, #0
   15d1c:	beq	15d30 <tcgetattr@plt+0x496c>
   15d20:	mov	r0, r5
   15d24:	mov	r1, r4
   15d28:	pop	{r4, r5, r6, sl, fp, lr}
   15d2c:	b	15d38 <tcgetattr@plt+0x4974>
   15d30:	mov	r0, #1
   15d34:	pop	{r4, r5, r6, sl, fp, pc}
   15d38:	push	{r4, r5, fp, lr}
   15d3c:	add	fp, sp, #8
   15d40:	mov	r5, r1
   15d44:	mov	r4, r0
   15d48:	mov	r0, r1
   15d4c:	bl	17548 <tcgetattr@plt+0x6184>
   15d50:	ldrb	r1, [r4, #6]
   15d54:	cmp	r0, #0
   15d58:	andne	r1, r1, #223	; 0xdf
   15d5c:	mov	r0, #0
   15d60:	cmp	r1, r5
   15d64:	popne	{r4, r5, fp, pc}
   15d68:	cmp	r5, #0
   15d6c:	beq	15d7c <tcgetattr@plt+0x49b8>
   15d70:	mov	r0, r4
   15d74:	pop	{r4, r5, fp, lr}
   15d78:	b	15d84 <tcgetattr@plt+0x49c0>
   15d7c:	mov	r0, #1
   15d80:	pop	{r4, r5, fp, pc}
   15d84:	push	{r4, sl, fp, lr}
   15d88:	add	fp, sp, #8
   15d8c:	mov	r4, r0
   15d90:	mov	r0, #0
   15d94:	bl	17548 <tcgetattr@plt+0x6184>
   15d98:	ldrb	r1, [r4, #7]
   15d9c:	cmp	r0, #0
   15da0:	beq	15db4 <tcgetattr@plt+0x49f0>
   15da4:	tst	r1, #223	; 0xdf
   15da8:	bne	15dbc <tcgetattr@plt+0x49f8>
   15dac:	mov	r0, #1
   15db0:	pop	{r4, sl, fp, pc}
   15db4:	cmp	r1, #0
   15db8:	beq	15dac <tcgetattr@plt+0x49e8>
   15dbc:	mov	r0, #0
   15dc0:	pop	{r4, sl, fp, pc}
   15dc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15dc8:	add	fp, sp, #24
   15dcc:	sub	sp, sp, #32
   15dd0:	mov	r4, r2
   15dd4:	mov	r8, r0
   15dd8:	ldr	r6, [fp, #12]
   15ddc:	ldr	r7, [fp, #8]
   15de0:	cmp	r1, #0
   15de4:	beq	15e0c <tcgetattr@plt+0x4a48>
   15de8:	mov	r5, r1
   15dec:	str	r4, [sp]
   15df0:	str	r3, [sp, #4]
   15df4:	movw	r2, #44500	; 0xadd4
   15df8:	movt	r2, #1
   15dfc:	mov	r0, r8
   15e00:	mov	r1, #1
   15e04:	mov	r3, r5
   15e08:	b	15e24 <tcgetattr@plt+0x4a60>
   15e0c:	str	r3, [sp]
   15e10:	movw	r2, #44512	; 0xade0
   15e14:	movt	r2, #1
   15e18:	mov	r0, r8
   15e1c:	mov	r1, #1
   15e20:	mov	r3, r4
   15e24:	bl	11328 <__fprintf_chk@plt>
   15e28:	movw	r1, #44519	; 0xade7
   15e2c:	movt	r1, #1
   15e30:	mov	r0, #0
   15e34:	mov	r2, #5
   15e38:	bl	11160 <dcgettext@plt>
   15e3c:	mov	r3, r0
   15e40:	movw	r0, #2022	; 0x7e6
   15e44:	str	r0, [sp]
   15e48:	movw	r2, #45237	; 0xb0b5
   15e4c:	movt	r2, #1
   15e50:	mov	r0, r8
   15e54:	mov	r1, #1
   15e58:	bl	11328 <__fprintf_chk@plt>
   15e5c:	movw	r4, #37041	; 0x90b1
   15e60:	movt	r4, #1
   15e64:	mov	r0, r4
   15e68:	mov	r1, r8
   15e6c:	bl	110f4 <fputs_unlocked@plt>
   15e70:	movw	r1, #44523	; 0xadeb
   15e74:	movt	r1, #1
   15e78:	mov	r0, #0
   15e7c:	mov	r2, #5
   15e80:	bl	11160 <dcgettext@plt>
   15e84:	mov	r2, r0
   15e88:	movw	r3, #44694	; 0xae96
   15e8c:	movt	r3, #1
   15e90:	mov	r0, r8
   15e94:	mov	r1, #1
   15e98:	bl	11328 <__fprintf_chk@plt>
   15e9c:	mov	r0, r4
   15ea0:	mov	r1, r8
   15ea4:	bl	110f4 <fputs_unlocked@plt>
   15ea8:	cmp	r6, #9
   15eac:	bhi	15ee8 <tcgetattr@plt+0x4b24>
   15eb0:	add	r0, pc, #0
   15eb4:	ldr	pc, [r0, r6, lsl #2]
   15eb8:	andeq	r5, r1, r0, ror #29
   15ebc:	strdeq	r5, [r1], -r4
   15ec0:	andeq	r5, r1, r4, lsr #30
   15ec4:	andeq	r5, r1, ip, asr #30
   15ec8:	andeq	r5, r1, r4, ror pc
   15ecc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ed0:	andeq	r5, r1, r4, asr #31
   15ed4:	strdeq	r5, [r1], -ip
   15ed8:	muleq	r1, ip, r0
   15edc:	andeq	r6, r1, r4, asr #32
   15ee0:	sub	sp, fp, #24
   15ee4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ee8:	movw	r1, #45047	; 0xaff7
   15eec:	movt	r1, #1
   15ef0:	b	1604c <tcgetattr@plt+0x4c88>
   15ef4:	movw	r1, #44728	; 0xaeb8
   15ef8:	movt	r1, #1
   15efc:	mov	r0, #0
   15f00:	mov	r2, #5
   15f04:	bl	11160 <dcgettext@plt>
   15f08:	mov	r2, r0
   15f0c:	ldr	r3, [r7]
   15f10:	mov	r0, r8
   15f14:	mov	r1, #1
   15f18:	sub	sp, fp, #24
   15f1c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f20:	b	11328 <__fprintf_chk@plt>
   15f24:	movw	r1, #44744	; 0xaec8
   15f28:	movt	r1, #1
   15f2c:	mov	r0, #0
   15f30:	mov	r2, #5
   15f34:	bl	11160 <dcgettext@plt>
   15f38:	mov	r2, r0
   15f3c:	ldr	r3, [r7]
   15f40:	ldr	r0, [r7, #4]
   15f44:	str	r0, [sp]
   15f48:	b	16038 <tcgetattr@plt+0x4c74>
   15f4c:	movw	r1, #44767	; 0xaedf
   15f50:	movt	r1, #1
   15f54:	mov	r0, #0
   15f58:	mov	r2, #5
   15f5c:	bl	11160 <dcgettext@plt>
   15f60:	mov	r2, r0
   15f64:	ldr	r3, [r7]
   15f68:	ldmib	r7, {r0, r1}
   15f6c:	stm	sp, {r0, r1}
   15f70:	b	16038 <tcgetattr@plt+0x4c74>
   15f74:	movw	r1, #44795	; 0xaefb
   15f78:	movt	r1, #1
   15f7c:	mov	r0, #0
   15f80:	mov	r2, #5
   15f84:	bl	11160 <dcgettext@plt>
   15f88:	mov	r2, r0
   15f8c:	ldr	r3, [r7]
   15f90:	ldmib	r7, {r0, r1, r7}
   15f94:	stm	sp, {r0, r1, r7}
   15f98:	b	16038 <tcgetattr@plt+0x4c74>
   15f9c:	movw	r1, #44827	; 0xaf1b
   15fa0:	movt	r1, #1
   15fa4:	mov	r0, #0
   15fa8:	mov	r2, #5
   15fac:	bl	11160 <dcgettext@plt>
   15fb0:	mov	r2, r0
   15fb4:	ldr	r3, [r7]
   15fb8:	ldmib	r7, {r0, r1, r6, r7}
   15fbc:	stm	sp, {r0, r1, r6, r7}
   15fc0:	b	16038 <tcgetattr@plt+0x4c74>
   15fc4:	movw	r1, #44863	; 0xaf3f
   15fc8:	movt	r1, #1
   15fcc:	mov	r0, #0
   15fd0:	mov	r2, #5
   15fd4:	bl	11160 <dcgettext@plt>
   15fd8:	mov	r2, r0
   15fdc:	ldr	r3, [r7]
   15fe0:	ldmib	r7, {r0, r1, r6}
   15fe4:	ldr	r5, [r7, #16]
   15fe8:	ldr	r7, [r7, #20]
   15fec:	stm	sp, {r0, r1, r6}
   15ff0:	str	r5, [sp, #12]
   15ff4:	str	r7, [sp, #16]
   15ff8:	b	16038 <tcgetattr@plt+0x4c74>
   15ffc:	movw	r1, #44903	; 0xaf67
   16000:	movt	r1, #1
   16004:	mov	r0, #0
   16008:	mov	r2, #5
   1600c:	bl	11160 <dcgettext@plt>
   16010:	mov	r2, r0
   16014:	ldr	r3, [r7]
   16018:	ldmib	r7, {r0, r1, r6}
   1601c:	ldr	r5, [r7, #16]
   16020:	ldr	r4, [r7, #20]
   16024:	ldr	r7, [r7, #24]
   16028:	stm	sp, {r0, r1, r6}
   1602c:	str	r5, [sp, #12]
   16030:	str	r4, [sp, #16]
   16034:	str	r7, [sp, #20]
   16038:	mov	r0, r8
   1603c:	mov	r1, #1
   16040:	b	160ec <tcgetattr@plt+0x4d28>
   16044:	movw	r1, #44995	; 0xafc3
   16048:	movt	r1, #1
   1604c:	mov	r0, #0
   16050:	mov	r2, #5
   16054:	bl	11160 <dcgettext@plt>
   16058:	mov	ip, r0
   1605c:	ldr	r3, [r7]
   16060:	ldr	r0, [r7, #4]
   16064:	ldr	r1, [r7, #8]
   16068:	ldr	r6, [r7, #12]
   1606c:	ldr	r5, [r7, #16]
   16070:	ldr	r4, [r7, #20]
   16074:	ldr	r2, [r7, #24]
   16078:	ldr	lr, [r7, #28]
   1607c:	ldr	r7, [r7, #32]
   16080:	stm	sp, {r0, r1, r6}
   16084:	str	r5, [sp, #12]
   16088:	str	r4, [sp, #16]
   1608c:	str	r2, [sp, #20]
   16090:	str	lr, [sp, #24]
   16094:	str	r7, [sp, #28]
   16098:	b	160e0 <tcgetattr@plt+0x4d1c>
   1609c:	movw	r1, #44947	; 0xaf93
   160a0:	movt	r1, #1
   160a4:	mov	r0, #0
   160a8:	mov	r2, #5
   160ac:	bl	11160 <dcgettext@plt>
   160b0:	mov	ip, r0
   160b4:	ldr	r3, [r7]
   160b8:	ldmib	r7, {r0, r1, r6}
   160bc:	ldr	r5, [r7, #16]
   160c0:	ldr	r4, [r7, #20]
   160c4:	ldr	r2, [r7, #24]
   160c8:	ldr	r7, [r7, #28]
   160cc:	stm	sp, {r0, r1, r6}
   160d0:	str	r5, [sp, #12]
   160d4:	str	r4, [sp, #16]
   160d8:	str	r2, [sp, #20]
   160dc:	str	r7, [sp, #24]
   160e0:	mov	r0, r8
   160e4:	mov	r1, #1
   160e8:	mov	r2, ip
   160ec:	bl	11328 <__fprintf_chk@plt>
   160f0:	sub	sp, fp, #24
   160f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   160f8:	push	{r4, sl, fp, lr}
   160fc:	add	fp, sp, #8
   16100:	sub	sp, sp, #8
   16104:	mov	lr, #0
   16108:	ldr	ip, [fp, #8]
   1610c:	ldr	r4, [ip, lr, lsl #2]
   16110:	add	lr, lr, #1
   16114:	cmp	r4, #0
   16118:	bne	1610c <tcgetattr@plt+0x4d48>
   1611c:	sub	r4, lr, #1
   16120:	str	ip, [sp]
   16124:	str	r4, [sp, #4]
   16128:	bl	15dc4 <tcgetattr@plt+0x4a00>
   1612c:	sub	sp, fp, #8
   16130:	pop	{r4, sl, fp, pc}
   16134:	push	{r4, r5, fp, lr}
   16138:	add	fp, sp, #8
   1613c:	sub	sp, sp, #48	; 0x30
   16140:	mov	ip, #0
   16144:	ldr	r4, [fp, #8]
   16148:	add	lr, sp, #8
   1614c:	ldr	r5, [r4]
   16150:	str	r5, [lr, ip, lsl #2]
   16154:	cmp	r5, #0
   16158:	beq	16170 <tcgetattr@plt+0x4dac>
   1615c:	add	ip, ip, #1
   16160:	add	r4, r4, #4
   16164:	cmp	ip, #10
   16168:	bne	1614c <tcgetattr@plt+0x4d88>
   1616c:	mov	ip, #10
   16170:	str	lr, [sp]
   16174:	str	ip, [sp, #4]
   16178:	bl	15dc4 <tcgetattr@plt+0x4a00>
   1617c:	sub	sp, fp, #8
   16180:	pop	{r4, r5, fp, pc}
   16184:	push	{fp, lr}
   16188:	mov	fp, sp
   1618c:	sub	sp, sp, #8
   16190:	add	ip, fp, #8
   16194:	str	ip, [sp, #4]
   16198:	str	ip, [sp]
   1619c:	bl	16134 <tcgetattr@plt+0x4d70>
   161a0:	mov	sp, fp
   161a4:	pop	{fp, pc}
   161a8:	push	{fp, lr}
   161ac:	mov	fp, sp
   161b0:	movw	r0, #49524	; 0xc174
   161b4:	movt	r0, #2
   161b8:	ldr	r1, [r0]
   161bc:	movw	r0, #37041	; 0x90b1
   161c0:	movt	r0, #1
   161c4:	bl	110f4 <fputs_unlocked@plt>
   161c8:	movw	r1, #45107	; 0xb033
   161cc:	movt	r1, #1
   161d0:	mov	r0, #0
   161d4:	mov	r2, #5
   161d8:	bl	11160 <dcgettext@plt>
   161dc:	mov	r1, r0
   161e0:	movw	r2, #45127	; 0xb047
   161e4:	movt	r2, #1
   161e8:	mov	r0, #1
   161ec:	bl	11304 <__printf_chk@plt>
   161f0:	movw	r1, #45149	; 0xb05d
   161f4:	movt	r1, #1
   161f8:	mov	r0, #0
   161fc:	mov	r2, #5
   16200:	bl	11160 <dcgettext@plt>
   16204:	mov	r1, r0
   16208:	movw	r2, #39714	; 0x9b22
   1620c:	movt	r2, #1
   16210:	movw	r3, #40176	; 0x9cf0
   16214:	movt	r3, #1
   16218:	mov	r0, #1
   1621c:	bl	11304 <__printf_chk@plt>
   16220:	movw	r1, #45169	; 0xb071
   16224:	movt	r1, #1
   16228:	mov	r0, #0
   1622c:	mov	r2, #5
   16230:	bl	11160 <dcgettext@plt>
   16234:	mov	r1, r0
   16238:	movw	r2, #45208	; 0xb098
   1623c:	movt	r2, #1
   16240:	mov	r0, #1
   16244:	pop	{fp, lr}
   16248:	b	11304 <__printf_chk@plt>
   1624c:	b	16250 <tcgetattr@plt+0x4e8c>
   16250:	push	{r4, r5, r6, sl, fp, lr}
   16254:	add	fp, sp, #16
   16258:	mov	r4, r2
   1625c:	mov	r5, r1
   16260:	mov	r6, r0
   16264:	bl	178d8 <tcgetattr@plt+0x6514>
   16268:	cmp	r0, #0
   1626c:	popne	{r4, r5, r6, sl, fp, pc}
   16270:	cmp	r6, #0
   16274:	beq	16288 <tcgetattr@plt+0x4ec4>
   16278:	cmp	r5, #0
   1627c:	cmpne	r4, #0
   16280:	bne	16288 <tcgetattr@plt+0x4ec4>
   16284:	pop	{r4, r5, r6, sl, fp, pc}
   16288:	bl	16614 <tcgetattr@plt+0x5250>
   1628c:	push	{fp, lr}
   16290:	mov	fp, sp
   16294:	bl	17210 <tcgetattr@plt+0x5e4c>
   16298:	pop	{fp, lr}
   1629c:	b	162a0 <tcgetattr@plt+0x4edc>
   162a0:	cmp	r0, #0
   162a4:	bxne	lr
   162a8:	push	{fp, lr}
   162ac:	mov	fp, sp
   162b0:	bl	16614 <tcgetattr@plt+0x5250>
   162b4:	push	{fp, lr}
   162b8:	mov	fp, sp
   162bc:	bl	17808 <tcgetattr@plt+0x6444>
   162c0:	pop	{fp, lr}
   162c4:	b	162a0 <tcgetattr@plt+0x4edc>
   162c8:	b	1628c <tcgetattr@plt+0x4ec8>
   162cc:	push	{r4, r5, fp, lr}
   162d0:	add	fp, sp, #8
   162d4:	mov	r4, r1
   162d8:	mov	r5, r0
   162dc:	bl	17240 <tcgetattr@plt+0x5e7c>
   162e0:	cmp	r0, #0
   162e4:	popne	{r4, r5, fp, pc}
   162e8:	cmp	r5, #0
   162ec:	beq	162fc <tcgetattr@plt+0x4f38>
   162f0:	cmp	r4, #0
   162f4:	bne	162fc <tcgetattr@plt+0x4f38>
   162f8:	pop	{r4, r5, fp, pc}
   162fc:	bl	16614 <tcgetattr@plt+0x5250>
   16300:	push	{fp, lr}
   16304:	mov	fp, sp
   16308:	bl	1780c <tcgetattr@plt+0x6448>
   1630c:	pop	{fp, lr}
   16310:	b	162a0 <tcgetattr@plt+0x4edc>
   16314:	push	{fp, lr}
   16318:	mov	fp, sp
   1631c:	bl	1781c <tcgetattr@plt+0x6458>
   16320:	pop	{fp, lr}
   16324:	b	162a0 <tcgetattr@plt+0x4edc>
   16328:	mov	r2, r1
   1632c:	mov	r1, r0
   16330:	mov	r0, #0
   16334:	b	16250 <tcgetattr@plt+0x4e8c>
   16338:	mov	r2, r1
   1633c:	mov	r1, r0
   16340:	mov	r0, #0
   16344:	b	16314 <tcgetattr@plt+0x4f50>
   16348:	mov	r2, #1
   1634c:	b	16350 <tcgetattr@plt+0x4f8c>
   16350:	push	{r4, r5, fp, lr}
   16354:	add	fp, sp, #8
   16358:	mov	r4, r1
   1635c:	ldr	r5, [r1]
   16360:	cmp	r0, #0
   16364:	beq	1637c <tcgetattr@plt+0x4fb8>
   16368:	mov	r1, #1
   1636c:	add	r1, r1, r5, lsr #1
   16370:	adds	r5, r5, r1
   16374:	bcc	16394 <tcgetattr@plt+0x4fd0>
   16378:	bl	16614 <tcgetattr@plt+0x5250>
   1637c:	cmp	r5, #0
   16380:	bne	16394 <tcgetattr@plt+0x4fd0>
   16384:	mov	r1, #64	; 0x40
   16388:	udiv	r5, r1, r2
   1638c:	cmp	r2, #64	; 0x40
   16390:	addhi	r5, r5, #1
   16394:	mov	r1, r5
   16398:	bl	16250 <tcgetattr@plt+0x4e8c>
   1639c:	str	r5, [r4]
   163a0:	pop	{r4, r5, fp, pc}
   163a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   163a8:	add	fp, sp, #24
   163ac:	mov	r8, r1
   163b0:	ldr	r6, [r1]
   163b4:	add	r1, r6, r6, asr #1
   163b8:	cmp	r1, r6
   163bc:	mvnvs	r1, #-2147483648	; 0x80000000
   163c0:	cmp	r1, r3
   163c4:	mov	r5, r1
   163c8:	movgt	r5, r3
   163cc:	cmn	r3, #1
   163d0:	movle	r5, r1
   163d4:	ldr	r4, [fp, #8]
   163d8:	cmn	r4, #1
   163dc:	ble	16404 <tcgetattr@plt+0x5040>
   163e0:	cmp	r4, #0
   163e4:	beq	16458 <tcgetattr@plt+0x5094>
   163e8:	cmn	r5, #1
   163ec:	ble	1642c <tcgetattr@plt+0x5068>
   163f0:	mvn	r7, #-2147483648	; 0x80000000
   163f4:	udiv	r1, r7, r4
   163f8:	cmp	r1, r5
   163fc:	bge	16458 <tcgetattr@plt+0x5094>
   16400:	b	16468 <tcgetattr@plt+0x50a4>
   16404:	cmn	r5, #1
   16408:	ble	16448 <tcgetattr@plt+0x5084>
   1640c:	cmn	r4, #1
   16410:	beq	16458 <tcgetattr@plt+0x5094>
   16414:	mov	r1, #-2147483648	; 0x80000000
   16418:	sdiv	r1, r1, r4
   1641c:	mvn	r7, #-2147483648	; 0x80000000
   16420:	cmp	r1, r5
   16424:	bge	16458 <tcgetattr@plt+0x5094>
   16428:	b	16468 <tcgetattr@plt+0x50a4>
   1642c:	beq	16458 <tcgetattr@plt+0x5094>
   16430:	mov	r1, #-2147483648	; 0x80000000
   16434:	sdiv	r1, r1, r5
   16438:	mvn	r7, #-2147483648	; 0x80000000
   1643c:	cmp	r1, r4
   16440:	bge	16458 <tcgetattr@plt+0x5094>
   16444:	b	16468 <tcgetattr@plt+0x50a4>
   16448:	mvn	r7, #-2147483648	; 0x80000000
   1644c:	sdiv	r1, r7, r4
   16450:	cmp	r5, r1
   16454:	blt	16468 <tcgetattr@plt+0x50a4>
   16458:	mul	r1, r5, r4
   1645c:	mov	r7, #64	; 0x40
   16460:	cmp	r1, #63	; 0x3f
   16464:	bgt	16470 <tcgetattr@plt+0x50ac>
   16468:	sdiv	r5, r7, r4
   1646c:	mul	r1, r5, r4
   16470:	cmp	r0, #0
   16474:	moveq	r7, #0
   16478:	streq	r7, [r8]
   1647c:	sub	r7, r5, r6
   16480:	cmp	r7, r2
   16484:	bge	16530 <tcgetattr@plt+0x516c>
   16488:	add	r5, r6, r2
   1648c:	mov	r1, #0
   16490:	cmp	r5, r3
   16494:	mov	r2, #0
   16498:	movwgt	r2, #1
   1649c:	cmn	r3, #1
   164a0:	movwgt	r1, #1
   164a4:	cmp	r5, r6
   164a8:	bvs	16518 <tcgetattr@plt+0x5154>
   164ac:	ands	r1, r1, r2
   164b0:	bne	16518 <tcgetattr@plt+0x5154>
   164b4:	cmn	r4, #1
   164b8:	ble	164e0 <tcgetattr@plt+0x511c>
   164bc:	cmp	r4, #0
   164c0:	beq	1652c <tcgetattr@plt+0x5168>
   164c4:	cmn	r5, #1
   164c8:	ble	16504 <tcgetattr@plt+0x5140>
   164cc:	mvn	r1, #-2147483648	; 0x80000000
   164d0:	udiv	r1, r1, r4
   164d4:	cmp	r1, r5
   164d8:	bge	1652c <tcgetattr@plt+0x5168>
   164dc:	b	16518 <tcgetattr@plt+0x5154>
   164e0:	cmn	r5, #1
   164e4:	ble	1651c <tcgetattr@plt+0x5158>
   164e8:	cmn	r4, #1
   164ec:	beq	1652c <tcgetattr@plt+0x5168>
   164f0:	mov	r1, #-2147483648	; 0x80000000
   164f4:	sdiv	r1, r1, r4
   164f8:	cmp	r1, r5
   164fc:	bge	1652c <tcgetattr@plt+0x5168>
   16500:	b	16518 <tcgetattr@plt+0x5154>
   16504:	beq	1652c <tcgetattr@plt+0x5168>
   16508:	mov	r1, #-2147483648	; 0x80000000
   1650c:	sdiv	r1, r1, r5
   16510:	cmp	r1, r4
   16514:	bge	1652c <tcgetattr@plt+0x5168>
   16518:	bl	16614 <tcgetattr@plt+0x5250>
   1651c:	mvn	r1, #-2147483648	; 0x80000000
   16520:	sdiv	r1, r1, r4
   16524:	cmp	r5, r1
   16528:	blt	16518 <tcgetattr@plt+0x5154>
   1652c:	mul	r1, r5, r4
   16530:	bl	162cc <tcgetattr@plt+0x4f08>
   16534:	str	r5, [r8]
   16538:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1653c:	mov	r1, #1
   16540:	b	16544 <tcgetattr@plt+0x5180>
   16544:	push	{fp, lr}
   16548:	mov	fp, sp
   1654c:	bl	171bc <tcgetattr@plt+0x5df8>
   16550:	pop	{fp, lr}
   16554:	b	162a0 <tcgetattr@plt+0x4edc>
   16558:	mov	r1, #1
   1655c:	b	16560 <tcgetattr@plt+0x519c>
   16560:	push	{fp, lr}
   16564:	mov	fp, sp
   16568:	bl	17818 <tcgetattr@plt+0x6454>
   1656c:	pop	{fp, lr}
   16570:	b	162a0 <tcgetattr@plt+0x4edc>
   16574:	push	{r4, r5, fp, lr}
   16578:	add	fp, sp, #8
   1657c:	mov	r4, r1
   16580:	mov	r5, r0
   16584:	mov	r0, r1
   16588:	bl	1628c <tcgetattr@plt+0x4ec8>
   1658c:	mov	r1, r5
   16590:	mov	r2, r4
   16594:	pop	{r4, r5, fp, lr}
   16598:	b	11148 <memcpy@plt>
   1659c:	push	{r4, r5, fp, lr}
   165a0:	add	fp, sp, #8
   165a4:	mov	r4, r1
   165a8:	mov	r5, r0
   165ac:	mov	r0, r1
   165b0:	bl	162b4 <tcgetattr@plt+0x4ef0>
   165b4:	mov	r1, r5
   165b8:	mov	r2, r4
   165bc:	pop	{r4, r5, fp, lr}
   165c0:	b	11148 <memcpy@plt>
   165c4:	push	{r4, r5, fp, lr}
   165c8:	add	fp, sp, #8
   165cc:	mov	r4, r1
   165d0:	mov	r5, r0
   165d4:	add	r0, r1, #1
   165d8:	bl	162b4 <tcgetattr@plt+0x4ef0>
   165dc:	mov	r1, #0
   165e0:	strb	r1, [r0, r4]
   165e4:	mov	r1, r5
   165e8:	mov	r2, r4
   165ec:	pop	{r4, r5, fp, lr}
   165f0:	b	11148 <memcpy@plt>
   165f4:	push	{r4, sl, fp, lr}
   165f8:	add	fp, sp, #8
   165fc:	mov	r4, r0
   16600:	bl	112a4 <strlen@plt>
   16604:	add	r1, r0, #1
   16608:	mov	r0, r4
   1660c:	pop	{r4, sl, fp, lr}
   16610:	b	16574 <tcgetattr@plt+0x51b0>
   16614:	push	{fp, lr}
   16618:	mov	fp, sp
   1661c:	movw	r0, #49432	; 0xc118
   16620:	movt	r0, #2
   16624:	ldr	r4, [r0]
   16628:	movw	r1, #45284	; 0xb0e4
   1662c:	movt	r1, #1
   16630:	mov	r0, #0
   16634:	mov	r2, #5
   16638:	bl	11160 <dcgettext@plt>
   1663c:	mov	r3, r0
   16640:	movw	r2, #44247	; 0xacd7
   16644:	movt	r2, #1
   16648:	mov	r0, r4
   1664c:	mov	r1, #0
   16650:	bl	11214 <error@plt>
   16654:	bl	11394 <abort@plt>
   16658:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1665c:	add	fp, sp, #24
   16660:	sub	sp, sp, #16
   16664:	mov	r5, r3
   16668:	mov	r6, r2
   1666c:	mov	r2, r1
   16670:	mov	r8, r0
   16674:	ldr	r0, [fp, #16]
   16678:	str	r0, [sp]
   1667c:	add	r3, sp, #8
   16680:	mov	r0, r8
   16684:	mov	r1, #0
   16688:	bl	16c80 <tcgetattr@plt+0x58bc>
   1668c:	cmp	r0, #0
   16690:	bne	16720 <tcgetattr@plt+0x535c>
   16694:	ldr	r7, [sp, #8]
   16698:	ldr	r4, [sp, #12]
   1669c:	subs	r0, r7, r6
   166a0:	sbcs	r0, r4, r5
   166a4:	bcc	166c8 <tcgetattr@plt+0x5304>
   166a8:	ldr	r0, [fp, #12]
   166ac:	ldr	r1, [fp, #8]
   166b0:	subs	r1, r1, r7
   166b4:	sbcs	r0, r0, r4
   166b8:	ldrcs	r0, [sp, #8]
   166bc:	ldrcs	r1, [sp, #12]
   166c0:	subcs	sp, fp, #24
   166c4:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   166c8:	bl	112d4 <__errno_location@plt>
   166cc:	subs	r1, r7, #1073741824	; 0x40000000
   166d0:	sbcs	r1, r4, #0
   166d4:	movcc	r1, #34	; 0x22
   166d8:	movcs	r1, #75	; 0x4b
   166dc:	str	r1, [r0]
   166e0:	ldr	r5, [fp, #24]
   166e4:	ldr	r6, [fp, #20]
   166e8:	bl	112d4 <__errno_location@plt>
   166ec:	ldr	r4, [r0]
   166f0:	mov	r0, r8
   166f4:	bl	159ac <tcgetattr@plt+0x45e8>
   166f8:	str	r0, [sp]
   166fc:	subs	r1, r4, #22
   16700:	movne	r1, r4
   16704:	cmp	r5, #0
   16708:	movweq	r5, #1
   1670c:	movw	r2, #44243	; 0xacd3
   16710:	movt	r2, #1
   16714:	mov	r0, r5
   16718:	mov	r3, r6
   1671c:	bl	11214 <error@plt>
   16720:	cmp	r0, #1
   16724:	beq	1673c <tcgetattr@plt+0x5378>
   16728:	cmp	r0, #3
   1672c:	bne	166e0 <tcgetattr@plt+0x531c>
   16730:	bl	112d4 <__errno_location@plt>
   16734:	mov	r1, #0
   16738:	b	166dc <tcgetattr@plt+0x5318>
   1673c:	bl	112d4 <__errno_location@plt>
   16740:	mov	r1, #75	; 0x4b
   16744:	b	166dc <tcgetattr@plt+0x5318>
   16748:	mov	r1, #10
   1674c:	b	16658 <tcgetattr@plt+0x5294>
   16750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16754:	add	fp, sp, #28
   16758:	sub	sp, sp, #12
   1675c:	cmp	r2, #37	; 0x25
   16760:	bcs	16b68 <tcgetattr@plt+0x57a4>
   16764:	mov	r9, r3
   16768:	mov	r5, r2
   1676c:	mov	r6, r1
   16770:	mov	r4, r0
   16774:	ldr	sl, [fp, #8]
   16778:	bl	112d4 <__errno_location@plt>
   1677c:	mov	r7, r0
   16780:	mov	r0, #0
   16784:	str	r0, [r7]
   16788:	add	r8, sp, #8
   1678c:	cmp	r6, #0
   16790:	movne	r8, r6
   16794:	mov	r0, r4
   16798:	mov	r1, r8
   1679c:	mov	r2, r5
   167a0:	bl	11118 <strtol@plt>
   167a4:	str	r0, [sp, #4]
   167a8:	ldr	r6, [r8]
   167ac:	cmp	r6, r4
   167b0:	beq	167dc <tcgetattr@plt+0x5418>
   167b4:	ldr	r0, [r7]
   167b8:	cmp	r0, #0
   167bc:	beq	16814 <tcgetattr@plt+0x5450>
   167c0:	mov	r5, #4
   167c4:	cmp	r0, #34	; 0x22
   167c8:	bne	16b5c <tcgetattr@plt+0x5798>
   167cc:	mov	r5, #1
   167d0:	cmp	sl, #0
   167d4:	bne	16820 <tcgetattr@plt+0x545c>
   167d8:	b	16b54 <tcgetattr@plt+0x5790>
   167dc:	mov	r5, #4
   167e0:	cmp	sl, #0
   167e4:	beq	16b5c <tcgetattr@plt+0x5798>
   167e8:	ldrb	r1, [r6]
   167ec:	cmp	r1, #0
   167f0:	beq	16b5c <tcgetattr@plt+0x5798>
   167f4:	mov	r0, sl
   167f8:	bl	112b0 <strchr@plt>
   167fc:	cmp	r0, #0
   16800:	beq	16b5c <tcgetattr@plt+0x5798>
   16804:	mov	r0, #1
   16808:	str	r0, [sp, #4]
   1680c:	mov	r5, #0
   16810:	b	16820 <tcgetattr@plt+0x545c>
   16814:	mov	r5, r0
   16818:	cmp	sl, #0
   1681c:	beq	16b54 <tcgetattr@plt+0x5790>
   16820:	ldrb	r4, [r6]
   16824:	cmp	r4, #0
   16828:	beq	16b54 <tcgetattr@plt+0x5790>
   1682c:	mov	r0, sl
   16830:	mov	r1, r4
   16834:	bl	112b0 <strchr@plt>
   16838:	cmp	r0, #0
   1683c:	beq	16a74 <tcgetattr@plt+0x56b0>
   16840:	sub	r0, r4, #69	; 0x45
   16844:	mov	r1, #1
   16848:	str	r1, [sp]
   1684c:	mov	r7, #1024	; 0x400
   16850:	cmp	r0, #47	; 0x2f
   16854:	bhi	16970 <tcgetattr@plt+0x55ac>
   16858:	add	r1, pc, #0
   1685c:	ldr	pc, [r1, r0, lsl #2]
   16860:	andeq	r6, r1, r0, lsr #18
   16864:	andeq	r6, r1, r0, ror r9
   16868:	andeq	r6, r1, r0, lsr #18
   1686c:	andeq	r6, r1, r0, ror r9
   16870:	andeq	r6, r1, r0, ror r9
   16874:	andeq	r6, r1, r0, ror r9
   16878:	andeq	r6, r1, r0, lsr #18
   1687c:	andeq	r6, r1, r0, ror r9
   16880:	andeq	r6, r1, r0, lsr #18
   16884:	andeq	r6, r1, r0, ror r9
   16888:	andeq	r6, r1, r0, ror r9
   1688c:	andeq	r6, r1, r0, lsr #18
   16890:	andeq	r6, r1, r0, ror r9
   16894:	andeq	r6, r1, r0, ror r9
   16898:	andeq	r6, r1, r0, ror r9
   1689c:	andeq	r6, r1, r0, lsr #18
   168a0:	andeq	r6, r1, r0, ror r9
   168a4:	andeq	r6, r1, r0, ror r9
   168a8:	andeq	r6, r1, r0, ror r9
   168ac:	andeq	r6, r1, r0, ror r9
   168b0:	andeq	r6, r1, r0, lsr #18
   168b4:	andeq	r6, r1, r0, lsr #18
   168b8:	andeq	r6, r1, r0, ror r9
   168bc:	andeq	r6, r1, r0, ror r9
   168c0:	andeq	r6, r1, r0, ror r9
   168c4:	andeq	r6, r1, r0, ror r9
   168c8:	andeq	r6, r1, r0, ror r9
   168cc:	andeq	r6, r1, r0, ror r9
   168d0:	andeq	r6, r1, r0, ror r9
   168d4:	andeq	r6, r1, r0, ror r9
   168d8:	andeq	r6, r1, r0, ror r9
   168dc:	andeq	r6, r1, r0, ror r9
   168e0:	andeq	r6, r1, r0, ror r9
   168e4:	andeq	r6, r1, r0, ror r9
   168e8:	andeq	r6, r1, r0, lsr #18
   168ec:	andeq	r6, r1, r0, ror r9
   168f0:	andeq	r6, r1, r0, ror r9
   168f4:	andeq	r6, r1, r0, ror r9
   168f8:	andeq	r6, r1, r0, lsr #18
   168fc:	andeq	r6, r1, r0, ror r9
   16900:	andeq	r6, r1, r0, lsr #18
   16904:	andeq	r6, r1, r0, ror r9
   16908:	andeq	r6, r1, r0, ror r9
   1690c:	andeq	r6, r1, r0, ror r9
   16910:	andeq	r6, r1, r0, ror r9
   16914:	andeq	r6, r1, r0, ror r9
   16918:	andeq	r6, r1, r0, ror r9
   1691c:	andeq	r6, r1, r0, lsr #18
   16920:	mov	r0, sl
   16924:	mov	r1, #48	; 0x30
   16928:	bl	112b0 <strchr@plt>
   1692c:	cmp	r0, #0
   16930:	beq	16970 <tcgetattr@plt+0x55ac>
   16934:	ldrb	r0, [r6, #1]
   16938:	cmp	r0, #66	; 0x42
   1693c:	cmpne	r0, #68	; 0x44
   16940:	bne	16954 <tcgetattr@plt+0x5590>
   16944:	mov	r0, #2
   16948:	str	r0, [sp]
   1694c:	mov	r7, #1000	; 0x3e8
   16950:	b	16970 <tcgetattr@plt+0x55ac>
   16954:	cmp	r0, #105	; 0x69
   16958:	bne	16970 <tcgetattr@plt+0x55ac>
   1695c:	ldrb	r0, [r6, #2]
   16960:	mov	r1, #1
   16964:	cmp	r0, #66	; 0x42
   16968:	movweq	r1, #3
   1696c:	str	r1, [sp]
   16970:	sub	r1, r4, #66	; 0x42
   16974:	cmp	r1, #53	; 0x35
   16978:	bhi	16a74 <tcgetattr@plt+0x56b0>
   1697c:	mov	r0, #0
   16980:	add	r2, pc, #0
   16984:	ldr	pc, [r2, r1, lsl #2]
   16988:	ldrdeq	r6, [r1], -r4
   1698c:	andeq	r6, r1, r4, ror sl
   16990:	andeq	r6, r1, r4, ror sl
   16994:	andeq	r6, r1, r0, ror #21
   16998:	andeq	r6, r1, r4, ror sl
   1699c:	andeq	r6, r1, r0, ror #20
   169a0:	andeq	r6, r1, r4, ror sl
   169a4:	andeq	r6, r1, r4, ror sl
   169a8:	andeq	r6, r1, r4, ror sl
   169ac:	andeq	r6, r1, r4, lsl #21
   169b0:	andeq	r6, r1, r4, ror sl
   169b4:	muleq	r1, r8, sl
   169b8:	andeq	r6, r1, r4, ror sl
   169bc:	andeq	r6, r1, r4, ror sl
   169c0:	strdeq	r6, [r1], -r4
   169c4:	andeq	r6, r1, r4, ror sl
   169c8:	andeq	r6, r1, r4, ror sl
   169cc:	andeq	r6, r1, r4, ror sl
   169d0:	andeq	r6, r1, ip, lsr #21
   169d4:	andeq	r6, r1, r4, ror sl
   169d8:	andeq	r6, r1, r4, ror sl
   169dc:	andeq	r6, r1, r4, ror sl
   169e0:	andeq	r6, r1, r4, ror sl
   169e4:	andeq	r6, r1, r8, lsl #22
   169e8:	andeq	r6, r1, r0, asr #21
   169ec:	andeq	r6, r1, r4, ror sl
   169f0:	andeq	r6, r1, r4, ror sl
   169f4:	andeq	r6, r1, r4, ror sl
   169f8:	andeq	r6, r1, r4, ror sl
   169fc:	andeq	r6, r1, r4, ror sl
   16a00:	andeq	r6, r1, r4, ror sl
   16a04:	andeq	r6, r1, r4, ror sl
   16a08:	andeq	r6, r1, ip, lsl fp
   16a0c:	andeq	r6, r1, r4, lsr fp
   16a10:	andeq	r6, r1, r4, ror sl
   16a14:	andeq	r6, r1, r4, ror sl
   16a18:	andeq	r6, r1, r4, ror sl
   16a1c:	andeq	r6, r1, r0, ror #20
   16a20:	andeq	r6, r1, r4, ror sl
   16a24:	andeq	r6, r1, r4, ror sl
   16a28:	andeq	r6, r1, r4, ror sl
   16a2c:	andeq	r6, r1, r4, lsl #21
   16a30:	andeq	r6, r1, r4, ror sl
   16a34:	muleq	r1, r8, sl
   16a38:	andeq	r6, r1, r4, ror sl
   16a3c:	andeq	r6, r1, r4, ror sl
   16a40:	andeq	r6, r1, r4, ror sl
   16a44:	andeq	r6, r1, r4, ror sl
   16a48:	andeq	r6, r1, r4, ror sl
   16a4c:	andeq	r6, r1, r4, ror sl
   16a50:	andeq	r6, r1, ip, lsr #21
   16a54:	andeq	r6, r1, r4, ror sl
   16a58:	andeq	r6, r1, r4, ror sl
   16a5c:	andeq	r6, r1, r8, lsr #22
   16a60:	add	r0, sp, #4
   16a64:	mov	r1, r7
   16a68:	mov	r2, #3
   16a6c:	bl	16c34 <tcgetattr@plt+0x5870>
   16a70:	b	16b34 <tcgetattr@plt+0x5770>
   16a74:	ldr	r0, [sp, #4]
   16a78:	str	r0, [r9]
   16a7c:	orr	r5, r5, #2
   16a80:	b	16b5c <tcgetattr@plt+0x5798>
   16a84:	add	r0, sp, #4
   16a88:	mov	r1, r7
   16a8c:	mov	r2, #1
   16a90:	bl	16c34 <tcgetattr@plt+0x5870>
   16a94:	b	16b34 <tcgetattr@plt+0x5770>
   16a98:	add	r0, sp, #4
   16a9c:	mov	r1, r7
   16aa0:	mov	r2, #2
   16aa4:	bl	16c34 <tcgetattr@plt+0x5870>
   16aa8:	b	16b34 <tcgetattr@plt+0x5770>
   16aac:	add	r0, sp, #4
   16ab0:	mov	r1, r7
   16ab4:	mov	r2, #4
   16ab8:	bl	16c34 <tcgetattr@plt+0x5870>
   16abc:	b	16b34 <tcgetattr@plt+0x5770>
   16ac0:	add	r0, sp, #4
   16ac4:	mov	r1, r7
   16ac8:	mov	r2, #7
   16acc:	bl	16c34 <tcgetattr@plt+0x5870>
   16ad0:	b	16b34 <tcgetattr@plt+0x5770>
   16ad4:	add	r0, sp, #4
   16ad8:	mov	r1, #1024	; 0x400
   16adc:	b	16b30 <tcgetattr@plt+0x576c>
   16ae0:	add	r0, sp, #4
   16ae4:	mov	r1, r7
   16ae8:	mov	r2, #6
   16aec:	bl	16c34 <tcgetattr@plt+0x5870>
   16af0:	b	16b34 <tcgetattr@plt+0x5770>
   16af4:	add	r0, sp, #4
   16af8:	mov	r1, r7
   16afc:	mov	r2, #5
   16b00:	bl	16c34 <tcgetattr@plt+0x5870>
   16b04:	b	16b34 <tcgetattr@plt+0x5770>
   16b08:	add	r0, sp, #4
   16b0c:	mov	r1, r7
   16b10:	mov	r2, #8
   16b14:	bl	16c34 <tcgetattr@plt+0x5870>
   16b18:	b	16b34 <tcgetattr@plt+0x5770>
   16b1c:	add	r0, sp, #4
   16b20:	mov	r1, #512	; 0x200
   16b24:	b	16b30 <tcgetattr@plt+0x576c>
   16b28:	add	r0, sp, #4
   16b2c:	mov	r1, #2
   16b30:	bl	16b88 <tcgetattr@plt+0x57c4>
   16b34:	ldr	r1, [r8]
   16b38:	ldr	r3, [sp]
   16b3c:	add	r2, r1, r3
   16b40:	str	r2, [r8]
   16b44:	ldrb	r1, [r1, r3]
   16b48:	orr	r5, r0, r5
   16b4c:	cmp	r1, #0
   16b50:	orrne	r5, r5, #2
   16b54:	ldr	r0, [sp, #4]
   16b58:	str	r0, [r9]
   16b5c:	mov	r0, r5
   16b60:	sub	sp, fp, #28
   16b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b68:	movw	r0, #45301	; 0xb0f5
   16b6c:	movt	r0, #1
   16b70:	movw	r1, #45412	; 0xb164
   16b74:	movt	r1, #1
   16b78:	movw	r3, #45339	; 0xb11b
   16b7c:	movt	r3, #1
   16b80:	mov	r2, #85	; 0x55
   16b84:	bl	113b8 <__assert_fail@plt>
   16b88:	cmn	r1, #1
   16b8c:	ble	16bb8 <tcgetattr@plt+0x57f4>
   16b90:	cmp	r1, #0
   16b94:	beq	16bf4 <tcgetattr@plt+0x5830>
   16b98:	ldr	r2, [r0]
   16b9c:	cmn	r2, #1
   16ba0:	ble	16be0 <tcgetattr@plt+0x581c>
   16ba4:	mvn	r3, #-2147483648	; 0x80000000
   16ba8:	udiv	r3, r3, r1
   16bac:	cmp	r3, r2
   16bb0:	bge	16bf4 <tcgetattr@plt+0x5830>
   16bb4:	b	16c14 <tcgetattr@plt+0x5850>
   16bb8:	ldr	r2, [r0]
   16bbc:	cmn	r2, #1
   16bc0:	ble	16c04 <tcgetattr@plt+0x5840>
   16bc4:	cmn	r1, #1
   16bc8:	beq	16bf4 <tcgetattr@plt+0x5830>
   16bcc:	mov	r3, #-2147483648	; 0x80000000
   16bd0:	sdiv	r3, r3, r1
   16bd4:	cmp	r3, r2
   16bd8:	bge	16bf4 <tcgetattr@plt+0x5830>
   16bdc:	b	16c14 <tcgetattr@plt+0x5850>
   16be0:	beq	16bf4 <tcgetattr@plt+0x5830>
   16be4:	mov	r3, #-2147483648	; 0x80000000
   16be8:	sdiv	r2, r3, r2
   16bec:	cmp	r2, r1
   16bf0:	blt	16c14 <tcgetattr@plt+0x5850>
   16bf4:	ldr	r2, [r0]
   16bf8:	mul	r2, r2, r1
   16bfc:	mov	r1, #0
   16c00:	b	16c28 <tcgetattr@plt+0x5864>
   16c04:	mvn	r3, #-2147483648	; 0x80000000
   16c08:	sdiv	r3, r3, r1
   16c0c:	cmp	r2, r3
   16c10:	bge	16bf4 <tcgetattr@plt+0x5830>
   16c14:	ldr	r1, [r0]
   16c18:	mvn	r2, #-2147483648	; 0x80000000
   16c1c:	cmp	r1, #0
   16c20:	movmi	r2, #-2147483648	; 0x80000000
   16c24:	mov	r1, #1
   16c28:	str	r2, [r0]
   16c2c:	mov	r0, r1
   16c30:	bx	lr
   16c34:	push	{r4, r5, r6, r7, fp, lr}
   16c38:	add	fp, sp, #16
   16c3c:	cmp	r2, #0
   16c40:	beq	16c74 <tcgetattr@plt+0x58b0>
   16c44:	mov	r4, r2
   16c48:	mov	r5, r1
   16c4c:	mov	r7, r0
   16c50:	mov	r6, #0
   16c54:	mov	r0, r7
   16c58:	mov	r1, r5
   16c5c:	bl	16b88 <tcgetattr@plt+0x57c4>
   16c60:	orr	r6, r0, r6
   16c64:	subs	r4, r4, #1
   16c68:	bne	16c54 <tcgetattr@plt+0x5890>
   16c6c:	mov	r0, r6
   16c70:	pop	{r4, r5, r6, r7, fp, pc}
   16c74:	mov	r6, #0
   16c78:	mov	r0, r6
   16c7c:	pop	{r4, r5, r6, r7, fp, pc}
   16c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c84:	add	fp, sp, #28
   16c88:	sub	sp, sp, #20
   16c8c:	cmp	r2, #37	; 0x25
   16c90:	bcs	170c4 <tcgetattr@plt+0x5d00>
   16c94:	mov	r5, r2
   16c98:	mov	r6, r1
   16c9c:	mov	r4, r0
   16ca0:	str	r3, [sp, #4]
   16ca4:	ldr	sl, [fp, #8]
   16ca8:	bl	112d4 <__errno_location@plt>
   16cac:	mov	r7, r0
   16cb0:	mov	r0, #0
   16cb4:	str	r0, [r7]
   16cb8:	bl	11274 <__ctype_b_loc@plt>
   16cbc:	ldr	r1, [r0]
   16cc0:	mov	r2, r4
   16cc4:	ldrb	r0, [r2], #1
   16cc8:	add	r3, r1, r0, lsl #1
   16ccc:	ldrb	r3, [r3, #1]
   16cd0:	tst	r3, #32
   16cd4:	bne	16cc4 <tcgetattr@plt+0x5900>
   16cd8:	add	r9, sp, #16
   16cdc:	cmp	r6, #0
   16ce0:	movne	r9, r6
   16ce4:	mov	r8, #4
   16ce8:	cmp	r0, #45	; 0x2d
   16cec:	beq	170b8 <tcgetattr@plt+0x5cf4>
   16cf0:	mov	r0, r4
   16cf4:	mov	r1, r9
   16cf8:	mov	r2, r5
   16cfc:	bl	1131c <strtoumax@plt>
   16d00:	str	r1, [sp, #12]
   16d04:	str	r0, [sp, #8]
   16d08:	ldr	r6, [r9]
   16d0c:	cmp	r6, r4
   16d10:	beq	16d38 <tcgetattr@plt+0x5974>
   16d14:	ldr	r0, [r7]
   16d18:	cmp	r0, #0
   16d1c:	beq	16d70 <tcgetattr@plt+0x59ac>
   16d20:	cmp	r0, #34	; 0x22
   16d24:	bne	170b8 <tcgetattr@plt+0x5cf4>
   16d28:	mov	r8, #1
   16d2c:	cmp	sl, #0
   16d30:	bne	16d7c <tcgetattr@plt+0x59b8>
   16d34:	b	170a8 <tcgetattr@plt+0x5ce4>
   16d38:	cmp	sl, #0
   16d3c:	beq	170b8 <tcgetattr@plt+0x5cf4>
   16d40:	ldrb	r1, [r6]
   16d44:	cmp	r1, #0
   16d48:	beq	170b8 <tcgetattr@plt+0x5cf4>
   16d4c:	mov	r0, sl
   16d50:	bl	112b0 <strchr@plt>
   16d54:	cmp	r0, #0
   16d58:	beq	170b8 <tcgetattr@plt+0x5cf4>
   16d5c:	mov	r8, #0
   16d60:	str	r8, [sp, #12]
   16d64:	mov	r0, #1
   16d68:	str	r0, [sp, #8]
   16d6c:	b	16d7c <tcgetattr@plt+0x59b8>
   16d70:	mov	r8, r0
   16d74:	cmp	sl, #0
   16d78:	beq	170a8 <tcgetattr@plt+0x5ce4>
   16d7c:	ldrb	r4, [r6]
   16d80:	cmp	r4, #0
   16d84:	beq	170a8 <tcgetattr@plt+0x5ce4>
   16d88:	mov	r0, sl
   16d8c:	mov	r1, r4
   16d90:	bl	112b0 <strchr@plt>
   16d94:	cmp	r0, #0
   16d98:	beq	16fc4 <tcgetattr@plt+0x5c00>
   16d9c:	sub	r0, r4, #69	; 0x45
   16da0:	mov	r7, #1
   16da4:	mov	r5, #1024	; 0x400
   16da8:	cmp	r0, #47	; 0x2f
   16dac:	bhi	16ec0 <tcgetattr@plt+0x5afc>
   16db0:	add	r1, pc, #0
   16db4:	ldr	pc, [r1, r0, lsl #2]
   16db8:	andeq	r6, r1, r8, ror lr
   16dbc:	andeq	r6, r1, r0, asr #29
   16dc0:	andeq	r6, r1, r8, ror lr
   16dc4:	andeq	r6, r1, r0, asr #29
   16dc8:	andeq	r6, r1, r0, asr #29
   16dcc:	andeq	r6, r1, r0, asr #29
   16dd0:	andeq	r6, r1, r8, ror lr
   16dd4:	andeq	r6, r1, r0, asr #29
   16dd8:	andeq	r6, r1, r8, ror lr
   16ddc:	andeq	r6, r1, r0, asr #29
   16de0:	andeq	r6, r1, r0, asr #29
   16de4:	andeq	r6, r1, r8, ror lr
   16de8:	andeq	r6, r1, r0, asr #29
   16dec:	andeq	r6, r1, r0, asr #29
   16df0:	andeq	r6, r1, r0, asr #29
   16df4:	andeq	r6, r1, r8, ror lr
   16df8:	andeq	r6, r1, r0, asr #29
   16dfc:	andeq	r6, r1, r0, asr #29
   16e00:	andeq	r6, r1, r0, asr #29
   16e04:	andeq	r6, r1, r0, asr #29
   16e08:	andeq	r6, r1, r8, ror lr
   16e0c:	andeq	r6, r1, r8, ror lr
   16e10:	andeq	r6, r1, r0, asr #29
   16e14:	andeq	r6, r1, r0, asr #29
   16e18:	andeq	r6, r1, r0, asr #29
   16e1c:	andeq	r6, r1, r0, asr #29
   16e20:	andeq	r6, r1, r0, asr #29
   16e24:	andeq	r6, r1, r0, asr #29
   16e28:	andeq	r6, r1, r0, asr #29
   16e2c:	andeq	r6, r1, r0, asr #29
   16e30:	andeq	r6, r1, r0, asr #29
   16e34:	andeq	r6, r1, r0, asr #29
   16e38:	andeq	r6, r1, r0, asr #29
   16e3c:	andeq	r6, r1, r0, asr #29
   16e40:	andeq	r6, r1, r8, ror lr
   16e44:	andeq	r6, r1, r0, asr #29
   16e48:	andeq	r6, r1, r0, asr #29
   16e4c:	andeq	r6, r1, r0, asr #29
   16e50:	andeq	r6, r1, r8, ror lr
   16e54:	andeq	r6, r1, r0, asr #29
   16e58:	andeq	r6, r1, r8, ror lr
   16e5c:	andeq	r6, r1, r0, asr #29
   16e60:	andeq	r6, r1, r0, asr #29
   16e64:	andeq	r6, r1, r0, asr #29
   16e68:	andeq	r6, r1, r0, asr #29
   16e6c:	andeq	r6, r1, r0, asr #29
   16e70:	andeq	r6, r1, r0, asr #29
   16e74:	andeq	r6, r1, r8, ror lr
   16e78:	mov	r0, sl
   16e7c:	mov	r1, #48	; 0x30
   16e80:	bl	112b0 <strchr@plt>
   16e84:	cmp	r0, #0
   16e88:	beq	16ec0 <tcgetattr@plt+0x5afc>
   16e8c:	ldrb	r0, [r6, #1]
   16e90:	cmp	r0, #66	; 0x42
   16e94:	cmpne	r0, #68	; 0x44
   16e98:	bne	16ea8 <tcgetattr@plt+0x5ae4>
   16e9c:	mov	r7, #2
   16ea0:	mov	r5, #1000	; 0x3e8
   16ea4:	b	16ec0 <tcgetattr@plt+0x5afc>
   16ea8:	cmp	r0, #105	; 0x69
   16eac:	bne	16ec0 <tcgetattr@plt+0x5afc>
   16eb0:	ldrb	r0, [r6, #2]
   16eb4:	mov	r7, #1
   16eb8:	cmp	r0, #66	; 0x42
   16ebc:	movweq	r7, #3
   16ec0:	sub	r1, r4, #66	; 0x42
   16ec4:	cmp	r1, #53	; 0x35
   16ec8:	bhi	16fc4 <tcgetattr@plt+0x5c00>
   16ecc:	mov	r0, #0
   16ed0:	add	r2, pc, #0
   16ed4:	ldr	pc, [r2, r1, lsl #2]
   16ed8:	andeq	r7, r1, ip, lsr #32
   16edc:	andeq	r6, r1, r4, asr #31
   16ee0:	andeq	r6, r1, r4, asr #31
   16ee4:	andeq	r7, r1, r8, lsr r0
   16ee8:	andeq	r6, r1, r4, asr #31
   16eec:			; <UNDEFINED> instruction: 0x00016fb0
   16ef0:	andeq	r6, r1, r4, asr #31
   16ef4:	andeq	r6, r1, r4, asr #31
   16ef8:	andeq	r6, r1, r4, asr #31
   16efc:	ldrdeq	r6, [r1], -ip
   16f00:	andeq	r6, r1, r4, asr #31
   16f04:	strdeq	r6, [r1], -r0
   16f08:	andeq	r6, r1, r4, asr #31
   16f0c:	andeq	r6, r1, r4, asr #31
   16f10:	andeq	r7, r1, ip, asr #32
   16f14:	andeq	r6, r1, r4, asr #31
   16f18:	andeq	r6, r1, r4, asr #31
   16f1c:	andeq	r6, r1, r4, asr #31
   16f20:	andeq	r7, r1, r4
   16f24:	andeq	r6, r1, r4, asr #31
   16f28:	andeq	r6, r1, r4, asr #31
   16f2c:	andeq	r6, r1, r4, asr #31
   16f30:	andeq	r6, r1, r4, asr #31
   16f34:	andeq	r7, r1, r0, rrx
   16f38:	andeq	r7, r1, r8, lsl r0
   16f3c:	andeq	r6, r1, r4, asr #31
   16f40:	andeq	r6, r1, r4, asr #31
   16f44:	andeq	r6, r1, r4, asr #31
   16f48:	andeq	r6, r1, r4, asr #31
   16f4c:	andeq	r6, r1, r4, asr #31
   16f50:	andeq	r6, r1, r4, asr #31
   16f54:	andeq	r6, r1, r4, asr #31
   16f58:	andeq	r7, r1, r4, ror r0
   16f5c:	andeq	r7, r1, ip, lsl #1
   16f60:	andeq	r6, r1, r4, asr #31
   16f64:	andeq	r6, r1, r4, asr #31
   16f68:	andeq	r6, r1, r4, asr #31
   16f6c:			; <UNDEFINED> instruction: 0x00016fb0
   16f70:	andeq	r6, r1, r4, asr #31
   16f74:	andeq	r6, r1, r4, asr #31
   16f78:	andeq	r6, r1, r4, asr #31
   16f7c:	ldrdeq	r6, [r1], -ip
   16f80:	andeq	r6, r1, r4, asr #31
   16f84:	strdeq	r6, [r1], -r0
   16f88:	andeq	r6, r1, r4, asr #31
   16f8c:	andeq	r6, r1, r4, asr #31
   16f90:	andeq	r6, r1, r4, asr #31
   16f94:	andeq	r6, r1, r4, asr #31
   16f98:	andeq	r6, r1, r4, asr #31
   16f9c:	andeq	r6, r1, r4, asr #31
   16fa0:	andeq	r7, r1, r4
   16fa4:	andeq	r6, r1, r4, asr #31
   16fa8:	andeq	r6, r1, r4, asr #31
   16fac:	andeq	r7, r1, r0, lsl #1
   16fb0:	add	r0, sp, #8
   16fb4:	mov	r1, r5
   16fb8:	mov	r2, #3
   16fbc:	bl	17170 <tcgetattr@plt+0x5dac>
   16fc0:	b	1708c <tcgetattr@plt+0x5cc8>
   16fc4:	ldr	r0, [sp, #8]
   16fc8:	ldr	r1, [sp, #12]
   16fcc:	ldr	r2, [sp, #4]
   16fd0:	strd	r0, [r2]
   16fd4:	orr	r8, r8, #2
   16fd8:	b	170b8 <tcgetattr@plt+0x5cf4>
   16fdc:	add	r0, sp, #8
   16fe0:	mov	r1, r5
   16fe4:	mov	r2, #1
   16fe8:	bl	17170 <tcgetattr@plt+0x5dac>
   16fec:	b	1708c <tcgetattr@plt+0x5cc8>
   16ff0:	add	r0, sp, #8
   16ff4:	mov	r1, r5
   16ff8:	mov	r2, #2
   16ffc:	bl	17170 <tcgetattr@plt+0x5dac>
   17000:	b	1708c <tcgetattr@plt+0x5cc8>
   17004:	add	r0, sp, #8
   17008:	mov	r1, r5
   1700c:	mov	r2, #4
   17010:	bl	17170 <tcgetattr@plt+0x5dac>
   17014:	b	1708c <tcgetattr@plt+0x5cc8>
   17018:	add	r0, sp, #8
   1701c:	mov	r1, r5
   17020:	mov	r2, #7
   17024:	bl	17170 <tcgetattr@plt+0x5dac>
   17028:	b	1708c <tcgetattr@plt+0x5cc8>
   1702c:	add	r0, sp, #8
   17030:	mov	r1, #1024	; 0x400
   17034:	b	17088 <tcgetattr@plt+0x5cc4>
   17038:	add	r0, sp, #8
   1703c:	mov	r1, r5
   17040:	mov	r2, #6
   17044:	bl	17170 <tcgetattr@plt+0x5dac>
   17048:	b	1708c <tcgetattr@plt+0x5cc8>
   1704c:	add	r0, sp, #8
   17050:	mov	r1, r5
   17054:	mov	r2, #5
   17058:	bl	17170 <tcgetattr@plt+0x5dac>
   1705c:	b	1708c <tcgetattr@plt+0x5cc8>
   17060:	add	r0, sp, #8
   17064:	mov	r1, r5
   17068:	mov	r2, #8
   1706c:	bl	17170 <tcgetattr@plt+0x5dac>
   17070:	b	1708c <tcgetattr@plt+0x5cc8>
   17074:	add	r0, sp, #8
   17078:	mov	r1, #512	; 0x200
   1707c:	b	17088 <tcgetattr@plt+0x5cc4>
   17080:	add	r0, sp, #8
   17084:	mov	r1, #2
   17088:	bl	170e4 <tcgetattr@plt+0x5d20>
   1708c:	ldr	r1, [r9]
   17090:	add	r2, r1, r7
   17094:	str	r2, [r9]
   17098:	ldrb	r1, [r1, r7]
   1709c:	orr	r8, r0, r8
   170a0:	cmp	r1, #0
   170a4:	orrne	r8, r8, #2
   170a8:	ldr	r0, [sp, #8]
   170ac:	ldr	r1, [sp, #12]
   170b0:	ldr	r2, [sp, #4]
   170b4:	strd	r0, [r2]
   170b8:	mov	r0, r8
   170bc:	sub	sp, fp, #28
   170c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170c4:	movw	r0, #45301	; 0xb0f5
   170c8:	movt	r0, #1
   170cc:	movw	r1, #45410	; 0xb162
   170d0:	movt	r1, #1
   170d4:	movw	r3, #45426	; 0xb172
   170d8:	movt	r3, #1
   170dc:	mov	r2, #85	; 0x55
   170e0:	bl	113b8 <__assert_fail@plt>
   170e4:	push	{r4, r5, r6, r7, fp, lr}
   170e8:	add	fp, sp, #16
   170ec:	mov	r5, r1
   170f0:	mov	r4, r0
   170f4:	cmn	r1, #1
   170f8:	ble	17130 <tcgetattr@plt+0x5d6c>
   170fc:	cmp	r5, #0
   17100:	beq	17150 <tcgetattr@plt+0x5d8c>
   17104:	asr	r3, r5, #31
   17108:	mvn	r6, #0
   1710c:	mvn	r0, #0
   17110:	mvn	r1, #0
   17114:	mov	r2, r5
   17118:	bl	17a24 <tcgetattr@plt+0x6660>
   1711c:	ldrd	r2, [r4]
   17120:	subs	r0, r0, r2
   17124:	sbcs	r0, r1, r3
   17128:	bcc	17140 <tcgetattr@plt+0x5d7c>
   1712c:	b	17150 <tcgetattr@plt+0x5d8c>
   17130:	ldrd	r0, [r4]
   17134:	orrs	r0, r0, r1
   17138:	beq	17150 <tcgetattr@plt+0x5d8c>
   1713c:	mvn	r6, #0
   17140:	mov	r0, #1
   17144:	mvn	r7, #0
   17148:	strd	r6, [r4]
   1714c:	pop	{r4, r5, r6, r7, fp, pc}
   17150:	ldrd	r0, [r4]
   17154:	umull	r6, r2, r0, r5
   17158:	asr	r3, r5, #31
   1715c:	mla	r0, r0, r3, r2
   17160:	mla	r7, r1, r5, r0
   17164:	mov	r0, #0
   17168:	strd	r6, [r4]
   1716c:	pop	{r4, r5, r6, r7, fp, pc}
   17170:	push	{r4, r5, r6, r7, fp, lr}
   17174:	add	fp, sp, #16
   17178:	cmp	r2, #0
   1717c:	beq	171b0 <tcgetattr@plt+0x5dec>
   17180:	mov	r4, r2
   17184:	mov	r5, r1
   17188:	mov	r7, r0
   1718c:	mov	r6, #0
   17190:	mov	r0, r7
   17194:	mov	r1, r5
   17198:	bl	170e4 <tcgetattr@plt+0x5d20>
   1719c:	orr	r6, r0, r6
   171a0:	subs	r4, r4, #1
   171a4:	bne	17190 <tcgetattr@plt+0x5dcc>
   171a8:	mov	r0, r6
   171ac:	pop	{r4, r5, r6, r7, fp, pc}
   171b0:	mov	r6, #0
   171b4:	mov	r0, r6
   171b8:	pop	{r4, r5, r6, r7, fp, pc}
   171bc:	clz	r2, r1
   171c0:	lsr	r2, r2, #5
   171c4:	clz	r3, r0
   171c8:	lsr	r3, r3, #5
   171cc:	orrs	r2, r3, r2
   171d0:	movwne	r1, #1
   171d4:	movwne	r0, #1
   171d8:	cmp	r1, #0
   171dc:	beq	1720c <tcgetattr@plt+0x5e48>
   171e0:	mvn	r2, #-2147483648	; 0x80000000
   171e4:	udiv	r2, r2, r1
   171e8:	cmp	r2, r0
   171ec:	bcs	1720c <tcgetattr@plt+0x5e48>
   171f0:	push	{fp, lr}
   171f4:	mov	fp, sp
   171f8:	bl	112d4 <__errno_location@plt>
   171fc:	mov	r1, #12
   17200:	str	r1, [r0]
   17204:	mov	r0, #0
   17208:	pop	{fp, pc}
   1720c:	b	110e8 <calloc@plt>
   17210:	cmp	r0, #0
   17214:	movweq	r0, #1
   17218:	cmn	r0, #1
   1721c:	ble	17224 <tcgetattr@plt+0x5e60>
   17220:	b	11238 <malloc@plt>
   17224:	push	{fp, lr}
   17228:	mov	fp, sp
   1722c:	bl	112d4 <__errno_location@plt>
   17230:	mov	r1, #12
   17234:	str	r1, [r0]
   17238:	mov	r0, #0
   1723c:	pop	{fp, pc}
   17240:	push	{fp, lr}
   17244:	mov	fp, sp
   17248:	cmp	r0, #0
   1724c:	beq	17268 <tcgetattr@plt+0x5ea4>
   17250:	cmp	r1, #0
   17254:	beq	17274 <tcgetattr@plt+0x5eb0>
   17258:	cmn	r1, #1
   1725c:	ble	17280 <tcgetattr@plt+0x5ebc>
   17260:	pop	{fp, lr}
   17264:	b	11184 <realloc@plt>
   17268:	mov	r0, r1
   1726c:	pop	{fp, lr}
   17270:	b	17210 <tcgetattr@plt+0x5e4c>
   17274:	bl	14190 <tcgetattr@plt+0x2dcc>
   17278:	mov	r0, #0
   1727c:	pop	{fp, pc}
   17280:	bl	112d4 <__errno_location@plt>
   17284:	mov	r1, #12
   17288:	str	r1, [r0]
   1728c:	mov	r0, #0
   17290:	pop	{fp, pc}
   17294:	mov	r1, r0
   17298:	sub	r2, r0, #65	; 0x41
   1729c:	mov	r0, #1
   172a0:	cmp	r2, #26
   172a4:	subcs	r2, r1, #97	; 0x61
   172a8:	cmpcs	r2, #26
   172ac:	bcs	172b4 <tcgetattr@plt+0x5ef0>
   172b0:	bx	lr
   172b4:	sub	r1, r1, #48	; 0x30
   172b8:	cmp	r1, #10
   172bc:	movcs	r0, #0
   172c0:	bx	lr
   172c4:	mov	r1, r0
   172c8:	sub	r2, r0, #65	; 0x41
   172cc:	mov	r0, #1
   172d0:	cmp	r2, #26
   172d4:	subcs	r1, r1, #97	; 0x61
   172d8:	cmpcs	r1, #26
   172dc:	movcs	r0, #0
   172e0:	bx	lr
   172e4:	mov	r1, #0
   172e8:	cmp	r0, #128	; 0x80
   172ec:	movwcc	r1, #1
   172f0:	mov	r0, r1
   172f4:	bx	lr
   172f8:	sub	r1, r0, #9
   172fc:	clz	r1, r1
   17300:	lsr	r1, r1, #5
   17304:	sub	r0, r0, #32
   17308:	clz	r0, r0
   1730c:	lsr	r0, r0, #5
   17310:	orr	r0, r0, r1
   17314:	bx	lr
   17318:	mov	r1, r0
   1731c:	mov	r0, #1
   17320:	cmp	r1, #32
   17324:	bxcc	lr
   17328:	cmp	r1, #127	; 0x7f
   1732c:	movne	r0, #0
   17330:	bx	lr
   17334:	sub	r1, r0, #48	; 0x30
   17338:	mov	r0, #0
   1733c:	cmp	r1, #10
   17340:	movwcc	r0, #1
   17344:	bx	lr
   17348:	sub	r1, r0, #33	; 0x21
   1734c:	mov	r0, #0
   17350:	cmp	r1, #94	; 0x5e
   17354:	movwcc	r0, #1
   17358:	bx	lr
   1735c:	sub	r1, r0, #97	; 0x61
   17360:	mov	r0, #0
   17364:	cmp	r1, #26
   17368:	movwcc	r0, #1
   1736c:	bx	lr
   17370:	sub	r1, r0, #32
   17374:	mov	r0, #0
   17378:	cmp	r1, #95	; 0x5f
   1737c:	movwcc	r0, #1
   17380:	bx	lr
   17384:	sub	r1, r0, #33	; 0x21
   17388:	cmp	r1, #93	; 0x5d
   1738c:	bhi	17518 <tcgetattr@plt+0x6154>
   17390:	mov	r0, #1
   17394:	add	r2, pc, #0
   17398:	ldr	pc, [r2, r1, lsl #2]
   1739c:	andeq	r7, r1, r4, lsl r5
   173a0:	andeq	r7, r1, r4, lsl r5
   173a4:	andeq	r7, r1, r4, lsl r5
   173a8:	andeq	r7, r1, r4, lsl r5
   173ac:	andeq	r7, r1, r4, lsl r5
   173b0:	andeq	r7, r1, r4, lsl r5
   173b4:	andeq	r7, r1, r4, lsl r5
   173b8:	andeq	r7, r1, r4, lsl r5
   173bc:	andeq	r7, r1, r4, lsl r5
   173c0:	andeq	r7, r1, r4, lsl r5
   173c4:	andeq	r7, r1, r4, lsl r5
   173c8:	andeq	r7, r1, r4, lsl r5
   173cc:	andeq	r7, r1, r4, lsl r5
   173d0:	andeq	r7, r1, r4, lsl r5
   173d4:	andeq	r7, r1, r4, lsl r5
   173d8:	andeq	r7, r1, r8, lsl r5
   173dc:	andeq	r7, r1, r8, lsl r5
   173e0:	andeq	r7, r1, r8, lsl r5
   173e4:	andeq	r7, r1, r8, lsl r5
   173e8:	andeq	r7, r1, r8, lsl r5
   173ec:	andeq	r7, r1, r8, lsl r5
   173f0:	andeq	r7, r1, r8, lsl r5
   173f4:	andeq	r7, r1, r8, lsl r5
   173f8:	andeq	r7, r1, r8, lsl r5
   173fc:	andeq	r7, r1, r8, lsl r5
   17400:	andeq	r7, r1, r4, lsl r5
   17404:	andeq	r7, r1, r4, lsl r5
   17408:	andeq	r7, r1, r4, lsl r5
   1740c:	andeq	r7, r1, r4, lsl r5
   17410:	andeq	r7, r1, r4, lsl r5
   17414:	andeq	r7, r1, r4, lsl r5
   17418:	andeq	r7, r1, r4, lsl r5
   1741c:	andeq	r7, r1, r8, lsl r5
   17420:	andeq	r7, r1, r8, lsl r5
   17424:	andeq	r7, r1, r8, lsl r5
   17428:	andeq	r7, r1, r8, lsl r5
   1742c:	andeq	r7, r1, r8, lsl r5
   17430:	andeq	r7, r1, r8, lsl r5
   17434:	andeq	r7, r1, r8, lsl r5
   17438:	andeq	r7, r1, r8, lsl r5
   1743c:	andeq	r7, r1, r8, lsl r5
   17440:	andeq	r7, r1, r8, lsl r5
   17444:	andeq	r7, r1, r8, lsl r5
   17448:	andeq	r7, r1, r8, lsl r5
   1744c:	andeq	r7, r1, r8, lsl r5
   17450:	andeq	r7, r1, r8, lsl r5
   17454:	andeq	r7, r1, r8, lsl r5
   17458:	andeq	r7, r1, r8, lsl r5
   1745c:	andeq	r7, r1, r8, lsl r5
   17460:	andeq	r7, r1, r8, lsl r5
   17464:	andeq	r7, r1, r8, lsl r5
   17468:	andeq	r7, r1, r8, lsl r5
   1746c:	andeq	r7, r1, r8, lsl r5
   17470:	andeq	r7, r1, r8, lsl r5
   17474:	andeq	r7, r1, r8, lsl r5
   17478:	andeq	r7, r1, r8, lsl r5
   1747c:	andeq	r7, r1, r8, lsl r5
   17480:	andeq	r7, r1, r8, lsl r5
   17484:	andeq	r7, r1, r4, lsl r5
   17488:	andeq	r7, r1, r4, lsl r5
   1748c:	andeq	r7, r1, r4, lsl r5
   17490:	andeq	r7, r1, r4, lsl r5
   17494:	andeq	r7, r1, r4, lsl r5
   17498:	andeq	r7, r1, r4, lsl r5
   1749c:	andeq	r7, r1, r8, lsl r5
   174a0:	andeq	r7, r1, r8, lsl r5
   174a4:	andeq	r7, r1, r8, lsl r5
   174a8:	andeq	r7, r1, r8, lsl r5
   174ac:	andeq	r7, r1, r8, lsl r5
   174b0:	andeq	r7, r1, r8, lsl r5
   174b4:	andeq	r7, r1, r8, lsl r5
   174b8:	andeq	r7, r1, r8, lsl r5
   174bc:	andeq	r7, r1, r8, lsl r5
   174c0:	andeq	r7, r1, r8, lsl r5
   174c4:	andeq	r7, r1, r8, lsl r5
   174c8:	andeq	r7, r1, r8, lsl r5
   174cc:	andeq	r7, r1, r8, lsl r5
   174d0:	andeq	r7, r1, r8, lsl r5
   174d4:	andeq	r7, r1, r8, lsl r5
   174d8:	andeq	r7, r1, r8, lsl r5
   174dc:	andeq	r7, r1, r8, lsl r5
   174e0:	andeq	r7, r1, r8, lsl r5
   174e4:	andeq	r7, r1, r8, lsl r5
   174e8:	andeq	r7, r1, r8, lsl r5
   174ec:	andeq	r7, r1, r8, lsl r5
   174f0:	andeq	r7, r1, r8, lsl r5
   174f4:	andeq	r7, r1, r8, lsl r5
   174f8:	andeq	r7, r1, r8, lsl r5
   174fc:	andeq	r7, r1, r8, lsl r5
   17500:	andeq	r7, r1, r8, lsl r5
   17504:	andeq	r7, r1, r4, lsl r5
   17508:	andeq	r7, r1, r4, lsl r5
   1750c:	andeq	r7, r1, r4, lsl r5
   17510:	andeq	r7, r1, r4, lsl r5
   17514:	bx	lr
   17518:	mov	r0, #0
   1751c:	bx	lr
   17520:	sub	r0, r0, #9
   17524:	cmp	r0, #23
   17528:	movhi	r0, #0
   1752c:	bxhi	lr
   17530:	bic	r0, r0, #-16777216	; 0xff000000
   17534:	movw	r1, #31
   17538:	movt	r1, #128	; 0x80
   1753c:	mov	r2, #1
   17540:	and	r0, r2, r1, lsr r0
   17544:	bx	lr
   17548:	sub	r1, r0, #65	; 0x41
   1754c:	mov	r0, #0
   17550:	cmp	r1, #26
   17554:	movwcc	r0, #1
   17558:	bx	lr
   1755c:	mov	r1, r0
   17560:	sub	r2, r0, #48	; 0x30
   17564:	mov	r0, #1
   17568:	cmp	r2, #22
   1756c:	bhi	17584 <tcgetattr@plt+0x61c0>
   17570:	mov	ip, #1
   17574:	movw	r3, #1023	; 0x3ff
   17578:	movt	r3, #126	; 0x7e
   1757c:	tst	r3, ip, lsl r2
   17580:	bxne	lr
   17584:	sub	r1, r1, #97	; 0x61
   17588:	cmp	r1, #6
   1758c:	movcs	r0, #0
   17590:	bxcs	lr
   17594:	bx	lr
   17598:	sub	r1, r0, #65	; 0x41
   1759c:	cmp	r1, #26
   175a0:	addcc	r0, r0, #32
   175a4:	bx	lr
   175a8:	sub	r1, r0, #97	; 0x61
   175ac:	cmp	r1, #26
   175b0:	subcc	r0, r0, #32
   175b4:	bx	lr
   175b8:	push	{r4, r5, r6, sl, fp, lr}
   175bc:	add	fp, sp, #16
   175c0:	mov	r4, r0
   175c4:	bl	111f0 <__fpending@plt>
   175c8:	mov	r5, r0
   175cc:	mov	r0, r4
   175d0:	bl	111fc <ferror_unlocked@plt>
   175d4:	mov	r6, r0
   175d8:	mov	r0, r4
   175dc:	bl	1763c <tcgetattr@plt+0x6278>
   175e0:	cmp	r6, #0
   175e4:	beq	17608 <tcgetattr@plt+0x6244>
   175e8:	mvn	r4, #0
   175ec:	cmp	r0, #0
   175f0:	bne	17634 <tcgetattr@plt+0x6270>
   175f4:	bl	112d4 <__errno_location@plt>
   175f8:	mov	r1, #0
   175fc:	str	r1, [r0]
   17600:	mov	r0, r4
   17604:	pop	{r4, r5, r6, sl, fp, pc}
   17608:	cmp	r0, #0
   1760c:	mov	r4, r0
   17610:	mvnne	r4, #0
   17614:	cmp	r5, #0
   17618:	bne	17634 <tcgetattr@plt+0x6270>
   1761c:	cmp	r0, #0
   17620:	beq	17634 <tcgetattr@plt+0x6270>
   17624:	bl	112d4 <__errno_location@plt>
   17628:	ldr	r0, [r0]
   1762c:	subs	r4, r0, #9
   17630:	mvnne	r4, #0
   17634:	mov	r0, r4
   17638:	pop	{r4, r5, r6, sl, fp, pc}
   1763c:	push	{r4, r5, fp, lr}
   17640:	add	fp, sp, #8
   17644:	sub	sp, sp, #8
   17648:	mov	r4, r0
   1764c:	bl	11310 <fileno@plt>
   17650:	cmn	r0, #1
   17654:	ble	176cc <tcgetattr@plt+0x6308>
   17658:	mov	r0, r4
   1765c:	bl	11250 <__freading@plt>
   17660:	cmp	r0, #0
   17664:	beq	17690 <tcgetattr@plt+0x62cc>
   17668:	mov	r0, r4
   1766c:	bl	11310 <fileno@plt>
   17670:	mov	r1, #1
   17674:	str	r1, [sp]
   17678:	mov	r2, #0
   1767c:	mov	r3, #0
   17680:	bl	111cc <lseek64@plt>
   17684:	and	r0, r0, r1
   17688:	cmn	r0, #1
   1768c:	beq	176cc <tcgetattr@plt+0x6308>
   17690:	mov	r0, r4
   17694:	bl	176dc <tcgetattr@plt+0x6318>
   17698:	cmp	r0, #0
   1769c:	beq	176cc <tcgetattr@plt+0x6308>
   176a0:	bl	112d4 <__errno_location@plt>
   176a4:	ldr	r5, [r0]
   176a8:	mov	r0, r4
   176ac:	bl	11334 <fclose@plt>
   176b0:	cmp	r5, #0
   176b4:	beq	176c4 <tcgetattr@plt+0x6300>
   176b8:	bl	112d4 <__errno_location@plt>
   176bc:	str	r5, [r0]
   176c0:	mvn	r0, #0
   176c4:	sub	sp, fp, #8
   176c8:	pop	{r4, r5, fp, pc}
   176cc:	mov	r0, r4
   176d0:	sub	sp, fp, #8
   176d4:	pop	{r4, r5, fp, lr}
   176d8:	b	11334 <fclose@plt>
   176dc:	push	{r4, sl, fp, lr}
   176e0:	add	fp, sp, #8
   176e4:	mov	r4, r0
   176e8:	cmp	r0, #0
   176ec:	beq	17704 <tcgetattr@plt+0x6340>
   176f0:	mov	r0, r4
   176f4:	bl	11250 <__freading@plt>
   176f8:	cmp	r0, #0
   176fc:	movne	r0, r4
   17700:	blne	17710 <tcgetattr@plt+0x634c>
   17704:	mov	r0, r4
   17708:	pop	{r4, sl, fp, lr}
   1770c:	b	11124 <fflush@plt>
   17710:	push	{fp, lr}
   17714:	mov	fp, sp
   17718:	sub	sp, sp, #8
   1771c:	ldrb	r1, [r0, #1]
   17720:	tst	r1, #1
   17724:	beq	1773c <tcgetattr@plt+0x6378>
   17728:	mov	r1, #1
   1772c:	str	r1, [sp]
   17730:	mov	r2, #0
   17734:	mov	r3, #0
   17738:	bl	17744 <tcgetattr@plt+0x6380>
   1773c:	mov	sp, fp
   17740:	pop	{fp, pc}
   17744:	push	{r4, r5, r6, r7, fp, lr}
   17748:	add	fp, sp, #16
   1774c:	sub	sp, sp, #8
   17750:	mov	r5, r3
   17754:	mov	r6, r2
   17758:	mov	r4, r0
   1775c:	ldr	r0, [r0, #4]
   17760:	ldr	r1, [r4, #8]
   17764:	cmp	r1, r0
   17768:	bne	17784 <tcgetattr@plt+0x63c0>
   1776c:	ldrd	r0, [r4, #16]
   17770:	cmp	r1, r0
   17774:	bne	17784 <tcgetattr@plt+0x63c0>
   17778:	ldr	r0, [r4, #36]	; 0x24
   1777c:	cmp	r0, #0
   17780:	beq	1779c <tcgetattr@plt+0x63d8>
   17784:	mov	r0, r4
   17788:	mov	r2, r6
   1778c:	mov	r3, r5
   17790:	sub	sp, fp, #16
   17794:	pop	{r4, r5, r6, r7, fp, lr}
   17798:	b	11340 <fseeko64@plt>
   1779c:	ldr	r7, [fp, #8]
   177a0:	mov	r0, r4
   177a4:	bl	11310 <fileno@plt>
   177a8:	str	r7, [sp]
   177ac:	mov	r2, r6
   177b0:	mov	r3, r5
   177b4:	bl	111cc <lseek64@plt>
   177b8:	and	r2, r0, r1
   177bc:	cmn	r2, #1
   177c0:	beq	177e0 <tcgetattr@plt+0x641c>
   177c4:	strd	r0, [r4, #80]	; 0x50
   177c8:	ldr	r0, [r4]
   177cc:	bic	r0, r0, #16
   177d0:	str	r0, [r4]
   177d4:	mov	r0, #0
   177d8:	sub	sp, fp, #16
   177dc:	pop	{r4, r5, r6, r7, fp, pc}
   177e0:	mvn	r0, #0
   177e4:	sub	sp, fp, #16
   177e8:	pop	{r4, r5, r6, r7, fp, pc}
   177ec:	push	{fp, lr}
   177f0:	mov	fp, sp
   177f4:	bl	112d4 <__errno_location@plt>
   177f8:	mov	r1, #12
   177fc:	str	r1, [r0]
   17800:	mov	r0, #0
   17804:	pop	{fp, pc}
   17808:	b	17210 <tcgetattr@plt+0x5e4c>
   1780c:	cmp	r1, #0
   17810:	orreq	r1, r1, #1
   17814:	b	17240 <tcgetattr@plt+0x5e7c>
   17818:	b	171bc <tcgetattr@plt+0x5df8>
   1781c:	clz	r3, r2
   17820:	lsr	ip, r3, #5
   17824:	clz	r3, r1
   17828:	lsr	r3, r3, #5
   1782c:	orrs	r3, r3, ip
   17830:	movwne	r1, #1
   17834:	movwne	r2, #1
   17838:	b	178d8 <tcgetattr@plt+0x6514>
   1783c:	push	{fp, lr}
   17840:	mov	fp, sp
   17844:	mov	r0, #14
   17848:	bl	11370 <nl_langinfo@plt>
   1784c:	movw	r1, #37042	; 0x90b2
   17850:	movt	r1, #1
   17854:	cmp	r0, #0
   17858:	movne	r1, r0
   1785c:	ldrb	r2, [r1]
   17860:	movw	r0, #45505	; 0xb1c1
   17864:	movt	r0, #1
   17868:	cmp	r2, #0
   1786c:	movne	r0, r1
   17870:	pop	{fp, pc}
   17874:	push	{r4, r5, r6, r7, fp, lr}
   17878:	add	fp, sp, #16
   1787c:	sub	sp, sp, #8
   17880:	mov	r7, r2
   17884:	mov	r4, r1
   17888:	add	r5, sp, #4
   1788c:	cmp	r0, #0
   17890:	movne	r5, r0
   17894:	mov	r0, r5
   17898:	bl	11208 <mbrtowc@plt>
   1789c:	mov	r6, r0
   178a0:	cmp	r7, #0
   178a4:	beq	178cc <tcgetattr@plt+0x6508>
   178a8:	cmn	r6, #2
   178ac:	bcc	178cc <tcgetattr@plt+0x6508>
   178b0:	mov	r0, #0
   178b4:	bl	17914 <tcgetattr@plt+0x6550>
   178b8:	cmp	r0, #0
   178bc:	bne	178cc <tcgetattr@plt+0x6508>
   178c0:	ldrb	r0, [r4]
   178c4:	str	r0, [r5]
   178c8:	mov	r6, #1
   178cc:	mov	r0, r6
   178d0:	sub	sp, fp, #16
   178d4:	pop	{r4, r5, r6, r7, fp, pc}
   178d8:	cmp	r2, #0
   178dc:	beq	1790c <tcgetattr@plt+0x6548>
   178e0:	mvn	r3, #0
   178e4:	udiv	r3, r3, r2
   178e8:	cmp	r3, r1
   178ec:	bcs	1790c <tcgetattr@plt+0x6548>
   178f0:	push	{fp, lr}
   178f4:	mov	fp, sp
   178f8:	bl	112d4 <__errno_location@plt>
   178fc:	mov	r1, #12
   17900:	str	r1, [r0]
   17904:	mov	r0, #0
   17908:	pop	{fp, pc}
   1790c:	mul	r1, r2, r1
   17910:	b	17240 <tcgetattr@plt+0x5e7c>
   17914:	push	{r4, sl, fp, lr}
   17918:	add	fp, sp, #8
   1791c:	sub	sp, sp, #264	; 0x108
   17920:	add	r1, sp, #7
   17924:	movw	r2, #257	; 0x101
   17928:	bl	17980 <tcgetattr@plt+0x65bc>
   1792c:	mov	r4, #0
   17930:	cmp	r0, #0
   17934:	bne	17974 <tcgetattr@plt+0x65b0>
   17938:	add	r0, sp, #7
   1793c:	movw	r1, #45511	; 0xb1c7
   17940:	movt	r1, #1
   17944:	mov	r2, #2
   17948:	bl	1128c <bcmp@plt>
   1794c:	cmp	r0, #0
   17950:	beq	17974 <tcgetattr@plt+0x65b0>
   17954:	add	r0, sp, #7
   17958:	movw	r1, #45513	; 0xb1c9
   1795c:	movt	r1, #1
   17960:	mov	r2, #6
   17964:	bl	1128c <bcmp@plt>
   17968:	mov	r4, r0
   1796c:	cmp	r0, #0
   17970:	movwne	r4, #1
   17974:	mov	r0, r4
   17978:	sub	sp, fp, #8
   1797c:	pop	{r4, sl, fp, pc}
   17980:	b	17984 <tcgetattr@plt+0x65c0>
   17984:	push	{r4, r5, r6, r7, fp, lr}
   17988:	add	fp, sp, #16
   1798c:	mov	r6, r2
   17990:	mov	r4, r1
   17994:	bl	17a1c <tcgetattr@plt+0x6658>
   17998:	cmp	r0, #0
   1799c:	beq	179cc <tcgetattr@plt+0x6608>
   179a0:	mov	r7, r0
   179a4:	bl	112a4 <strlen@plt>
   179a8:	cmp	r0, r6
   179ac:	bcs	179e8 <tcgetattr@plt+0x6624>
   179b0:	add	r2, r0, #1
   179b4:	mov	r0, r4
   179b8:	mov	r1, r7
   179bc:	bl	11148 <memcpy@plt>
   179c0:	mov	r5, #0
   179c4:	mov	r0, r5
   179c8:	pop	{r4, r5, r6, r7, fp, pc}
   179cc:	mov	r5, #22
   179d0:	cmp	r6, #0
   179d4:	beq	17a10 <tcgetattr@plt+0x664c>
   179d8:	mov	r0, #0
   179dc:	strb	r0, [r4]
   179e0:	mov	r0, r5
   179e4:	pop	{r4, r5, r6, r7, fp, pc}
   179e8:	mov	r5, #34	; 0x22
   179ec:	cmp	r6, #0
   179f0:	beq	17a10 <tcgetattr@plt+0x664c>
   179f4:	sub	r6, r6, #1
   179f8:	mov	r0, r4
   179fc:	mov	r1, r7
   17a00:	mov	r2, r6
   17a04:	bl	11148 <memcpy@plt>
   17a08:	mov	r0, #0
   17a0c:	strb	r0, [r4, r6]
   17a10:	mov	r0, r5
   17a14:	pop	{r4, r5, r6, r7, fp, pc}
   17a18:	b	17a1c <tcgetattr@plt+0x6658>
   17a1c:	mov	r1, #0
   17a20:	b	11358 <setlocale@plt>
   17a24:	cmp	r3, #0
   17a28:	cmpeq	r2, #0
   17a2c:	bne	17a44 <tcgetattr@plt+0x6680>
   17a30:	cmp	r1, #0
   17a34:	cmpeq	r0, #0
   17a38:	mvnne	r1, #0
   17a3c:	mvnne	r0, #0
   17a40:	b	17a60 <tcgetattr@plt+0x669c>
   17a44:	sub	sp, sp, #8
   17a48:	push	{sp, lr}
   17a4c:	bl	17a70 <tcgetattr@plt+0x66ac>
   17a50:	ldr	lr, [sp, #4]
   17a54:	add	sp, sp, #8
   17a58:	pop	{r2, r3}
   17a5c:	bx	lr
   17a60:	push	{r1, lr}
   17a64:	mov	r0, #8
   17a68:	bl	11100 <raise@plt>
   17a6c:	pop	{r1, pc}
   17a70:	cmp	r1, r3
   17a74:	cmpeq	r0, r2
   17a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a7c:	mov	r4, r0
   17a80:	movcc	r0, #0
   17a84:	mov	r5, r1
   17a88:	ldr	lr, [sp, #36]	; 0x24
   17a8c:	movcc	r1, r0
   17a90:	bcc	17b8c <tcgetattr@plt+0x67c8>
   17a94:	cmp	r3, #0
   17a98:	clzeq	ip, r2
   17a9c:	clzne	ip, r3
   17aa0:	addeq	ip, ip, #32
   17aa4:	cmp	r5, #0
   17aa8:	clzeq	r1, r4
   17aac:	addeq	r1, r1, #32
   17ab0:	clzne	r1, r5
   17ab4:	sub	ip, ip, r1
   17ab8:	sub	sl, ip, #32
   17abc:	lsl	r9, r3, ip
   17ac0:	rsb	fp, ip, #32
   17ac4:	orr	r9, r9, r2, lsl sl
   17ac8:	orr	r9, r9, r2, lsr fp
   17acc:	lsl	r8, r2, ip
   17ad0:	cmp	r5, r9
   17ad4:	cmpeq	r4, r8
   17ad8:	movcc	r0, #0
   17adc:	movcc	r1, r0
   17ae0:	bcc	17afc <tcgetattr@plt+0x6738>
   17ae4:	mov	r0, #1
   17ae8:	subs	r4, r4, r8
   17aec:	lsl	r1, r0, sl
   17af0:	orr	r1, r1, r0, lsr fp
   17af4:	lsl	r0, r0, ip
   17af8:	sbc	r5, r5, r9
   17afc:	cmp	ip, #0
   17b00:	beq	17b8c <tcgetattr@plt+0x67c8>
   17b04:	lsr	r6, r8, #1
   17b08:	orr	r6, r6, r9, lsl #31
   17b0c:	lsr	r7, r9, #1
   17b10:	mov	r2, ip
   17b14:	b	17b38 <tcgetattr@plt+0x6774>
   17b18:	subs	r3, r4, r6
   17b1c:	sbc	r8, r5, r7
   17b20:	adds	r3, r3, r3
   17b24:	adc	r8, r8, r8
   17b28:	adds	r4, r3, #1
   17b2c:	adc	r5, r8, #0
   17b30:	subs	r2, r2, #1
   17b34:	beq	17b54 <tcgetattr@plt+0x6790>
   17b38:	cmp	r5, r7
   17b3c:	cmpeq	r4, r6
   17b40:	bcs	17b18 <tcgetattr@plt+0x6754>
   17b44:	adds	r4, r4, r4
   17b48:	adc	r5, r5, r5
   17b4c:	subs	r2, r2, #1
   17b50:	bne	17b38 <tcgetattr@plt+0x6774>
   17b54:	lsr	r3, r4, ip
   17b58:	orr	r3, r3, r5, lsl fp
   17b5c:	lsr	r2, r5, ip
   17b60:	orr	r3, r3, r5, lsr sl
   17b64:	adds	r0, r0, r4
   17b68:	mov	r4, r3
   17b6c:	lsl	r3, r2, ip
   17b70:	orr	r3, r3, r4, lsl sl
   17b74:	lsl	ip, r4, ip
   17b78:	orr	r3, r3, r4, lsr fp
   17b7c:	adc	r1, r1, r5
   17b80:	subs	r0, r0, ip
   17b84:	mov	r5, r2
   17b88:	sbc	r1, r1, r3
   17b8c:	cmp	lr, #0
   17b90:	strdne	r4, [lr]
   17b94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17b9c:	mov	r7, r0
   17ba0:	ldr	r6, [pc, #72]	; 17bf0 <tcgetattr@plt+0x682c>
   17ba4:	ldr	r5, [pc, #72]	; 17bf4 <tcgetattr@plt+0x6830>
   17ba8:	add	r6, pc, r6
   17bac:	add	r5, pc, r5
   17bb0:	sub	r6, r6, r5
   17bb4:	mov	r8, r1
   17bb8:	mov	r9, r2
   17bbc:	bl	110c8 <calloc@plt-0x20>
   17bc0:	asrs	r6, r6, #2
   17bc4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17bc8:	mov	r4, #0
   17bcc:	add	r4, r4, #1
   17bd0:	ldr	r3, [r5], #4
   17bd4:	mov	r2, r9
   17bd8:	mov	r1, r8
   17bdc:	mov	r0, r7
   17be0:	blx	r3
   17be4:	cmp	r6, r4
   17be8:	bne	17bcc <tcgetattr@plt+0x6808>
   17bec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17bf0:	andeq	r4, r1, ip, asr r3
   17bf4:	andeq	r4, r1, r4, asr r3
   17bf8:	bx	lr
   17bfc:	ldr	r3, [pc, #12]	; 17c10 <tcgetattr@plt+0x684c>
   17c00:	mov	r1, #0
   17c04:	add	r3, pc, r3
   17c08:	ldr	r2, [r3]
   17c0c:	b	112e0 <__cxa_atexit@plt>
   17c10:	andeq	r4, r1, r0, lsl #10

Disassembly of section .fini:

00017c14 <.fini>:
   17c14:	push	{r3, lr}
   17c18:	pop	{r3, pc}
