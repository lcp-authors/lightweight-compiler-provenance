
../repos/coreutils/src/nohup:     file format elf32-littlearm


Disassembly of section .init:

00010c64 <.init>:
   10c64:	push	{r3, lr}
   10c68:	bl	11434 <close@plt+0x540>
   10c6c:	pop	{r3, pc}

Disassembly of section .plt:

00010c70 <calloc@plt-0x14>:
   10c70:	push	{lr}		; (str lr, [sp, #-4]!)
   10c74:	ldr	lr, [pc, #4]	; 10c80 <calloc@plt-0x4>
   10c78:	add	lr, pc, lr
   10c7c:	ldr	pc, [lr, #8]!
   10c80:	andeq	r4, r1, r0, lsl #7

00010c84 <calloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #896]!	; 0x380

00010c90 <fputs_unlocked@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #888]!	; 0x378

00010c9c <strcmp@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #880]!	; 0x370

00010ca8 <fflush@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #872]!	; 0x368

00010cb4 <free@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #864]!	; 0x360

00010cc0 <_exit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #856]!	; 0x358

00010ccc <memcpy@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #848]!	; 0x350

00010cd8 <execvp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #840]!	; 0x348

00010ce4 <mbsinit@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #832]!	; 0x340

00010cf0 <signal@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #824]!	; 0x338

00010cfc <memcmp@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #816]!	; 0x330

00010d08 <fputc_unlocked@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #808]!	; 0x328

00010d14 <dcgettext@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #800]!	; 0x320

00010d20 <dup2@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #792]!	; 0x318

00010d2c <realloc@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #784]!	; 0x310

00010d38 <textdomain@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #776]!	; 0x308

00010d44 <iswprint@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #768]!	; 0x300

00010d50 <lseek64@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #760]!	; 0x2f8

00010d5c <__ctype_get_mb_cur_max@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #752]!	; 0x2f0

00010d68 <__fpending@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #744]!	; 0x2e8

00010d74 <ferror_unlocked@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d80 <mbrtowc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #728]!	; 0x2d8

00010d8c <error@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #720]!	; 0x2d0

00010d98 <open64@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #712]!	; 0x2c8

00010da4 <getenv@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #704]!	; 0x2c0

00010db0 <malloc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dbc <__libc_start_main@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #688]!	; 0x2b0

00010dc8 <__freading@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #680]!	; 0x2a8

00010dd4 <__gmon_start__@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #672]!	; 0x2a0

00010de0 <mempcpy@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #664]!	; 0x298

00010dec <getopt_long@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #656]!	; 0x290

00010df8 <__ctype_b_loc@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #648]!	; 0x288

00010e04 <exit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #640]!	; 0x280

00010e10 <strlen@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #632]!	; 0x278

00010e1c <__errno_location@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #624]!	; 0x270

00010e28 <__cxa_atexit@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #616]!	; 0x268

00010e34 <memset@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #608]!	; 0x260

00010e40 <__printf_chk@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #600]!	; 0x258

00010e4c <fileno@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #592]!	; 0x250

00010e58 <__fprintf_chk@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #584]!	; 0x248

00010e64 <fclose@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #576]!	; 0x240

00010e70 <fseeko64@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #568]!	; 0x238

00010e7c <fcntl64@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #560]!	; 0x230

00010e88 <setlocale@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #552]!	; 0x228

00010e94 <strrchr@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #544]!	; 0x220

00010ea0 <nl_langinfo@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #20, 20	; 0x14000
   10ea8:	ldr	pc, [ip, #536]!	; 0x218

00010eac <bindtextdomain@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #528]!	; 0x210

00010eb8 <umask@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #520]!	; 0x208

00010ec4 <isatty@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #512]!	; 0x200

00010ed0 <fputs@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #504]!	; 0x1f8

00010edc <strncmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #496]!	; 0x1f0

00010ee8 <abort@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #488]!	; 0x1e8

00010ef4 <close@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #480]!	; 0x1e0

Disassembly of section .text:

00010f00 <.text>:
   10f00:	push	{r4, lr}
   10f04:	bl	10e1c <__errno_location@plt>
   10f08:	mov	r3, #12
   10f0c:	str	r3, [r0]
   10f10:	mov	r0, #0
   10f14:	pop	{r4, pc}
   10f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f1c:	mov	r5, r0
   10f20:	sub	sp, sp, #44	; 0x2c
   10f24:	mov	r8, r1
   10f28:	mov	r4, #0
   10f2c:	ldr	r0, [r1]
   10f30:	bl	11d08 <close@plt+0xe14>
   10f34:	ldr	r1, [pc, #1108]	; 11390 <close@plt+0x49c>
   10f38:	mov	r0, #6
   10f3c:	bl	10e88 <setlocale@plt>
   10f40:	ldr	r1, [pc, #1100]	; 11394 <close@plt+0x4a0>
   10f44:	ldr	r0, [pc, #1100]	; 11398 <close@plt+0x4a4>
   10f48:	bl	10eac <bindtextdomain@plt>
   10f4c:	ldr	r0, [pc, #1092]	; 11398 <close@plt+0x4a4>
   10f50:	bl	10d38 <textdomain@plt>
   10f54:	ldr	r0, [pc, #1088]	; 1139c <close@plt+0x4a8>
   10f58:	bl	10da4 <getenv@plt>
   10f5c:	ldr	r3, [pc, #1084]	; 113a0 <close@plt+0x4ac>
   10f60:	cmp	r0, #0
   10f64:	movne	r7, #127	; 0x7f
   10f68:	moveq	r7, #125	; 0x7d
   10f6c:	ldr	r0, [pc, #1072]	; 113a4 <close@plt+0x4b0>
   10f70:	str	r7, [r3]
   10f74:	bl	14078 <close@plt+0x3184>
   10f78:	ldr	r3, [pc, #1064]	; 113a8 <close@plt+0x4b4>
   10f7c:	mov	r1, r8
   10f80:	mov	r0, r5
   10f84:	str	r4, [sp, #4]
   10f88:	ldr	r2, [pc, #1052]	; 113ac <close@plt+0x4b8>
   10f8c:	str	r3, [sp, #12]
   10f90:	ldr	r3, [pc, #1048]	; 113b0 <close@plt+0x4bc>
   10f94:	str	r4, [sp, #16]
   10f98:	str	r3, [sp, #8]
   10f9c:	ldr	r3, [pc, #1040]	; 113b4 <close@plt+0x4c0>
   10fa0:	ldr	r3, [r3]
   10fa4:	str	r3, [sp]
   10fa8:	ldr	r3, [pc, #1032]	; 113b8 <close@plt+0x4c4>
   10fac:	bl	11c40 <close@plt+0xd4c>
   10fb0:	ldr	r3, [pc, #1028]	; 113bc <close@plt+0x4c8>
   10fb4:	ldr	r2, [r3]
   10fb8:	str	r3, [sp, #36]	; 0x24
   10fbc:	cmp	r2, r5
   10fc0:	blt	10fec <close@plt+0xf8>
   10fc4:	mov	r2, #5
   10fc8:	ldr	r1, [pc, #1008]	; 113c0 <close@plt+0x4cc>
   10fcc:	mov	r0, r4
   10fd0:	bl	10d14 <dcgettext@plt>
   10fd4:	mov	r2, r0
   10fd8:	mov	r1, r4
   10fdc:	mov	r0, r4
   10fe0:	bl	10d8c <error@plt>
   10fe4:	mov	r0, r7
   10fe8:	bl	114e8 <close@plt+0x5f4>
   10fec:	mov	r0, r4
   10ff0:	bl	10ec4 <isatty@plt>
   10ff4:	mov	sl, r0
   10ff8:	mov	r0, #1
   10ffc:	bl	10ec4 <isatty@plt>
   11000:	subs	r5, r0, #0
   11004:	strne	r4, [sp, #24]
   11008:	bne	11024 <close@plt+0x130>
   1100c:	bl	10e1c <__errno_location@plt>
   11010:	ldr	r3, [r0]
   11014:	sub	r3, r3, #9
   11018:	clz	r3, r3
   1101c:	lsr	r3, r3, #5
   11020:	str	r3, [sp, #24]
   11024:	mov	r0, #2
   11028:	bl	10ec4 <isatty@plt>
   1102c:	cmp	sl, #0
   11030:	mov	r9, r0
   11034:	beq	110ac <close@plt+0x1b8>
   11038:	mov	r3, #0
   1103c:	mov	r2, #1
   11040:	ldr	r1, [pc, #892]	; 113c4 <close@plt+0x4d0>
   11044:	mov	r0, r3
   11048:	bl	119f8 <close@plt+0xb04>
   1104c:	cmp	r0, #0
   11050:	bge	1107c <close@plt+0x188>
   11054:	bl	10e1c <__errno_location@plt>
   11058:	ldr	r4, [r0]
   1105c:	mov	r2, #5
   11060:	mov	r0, #0
   11064:	ldr	r1, [pc, #860]	; 113c8 <close@plt+0x4d4>
   11068:	bl	10d14 <dcgettext@plt>
   1106c:	mov	r2, r0
   11070:	mov	r0, r7
   11074:	mov	r1, r4
   11078:	bl	10d8c <error@plt>
   1107c:	orrs	r4, r5, r9
   11080:	bne	110ac <close@plt+0x1b8>
   11084:	mov	r2, #5
   11088:	ldr	r1, [pc, #828]	; 113cc <close@plt+0x4d8>
   1108c:	mov	r0, r4
   11090:	bl	10d14 <dcgettext@plt>
   11094:	mov	r2, r0
   11098:	mov	r1, r4
   1109c:	mov	r0, r4
   110a0:	bl	10d8c <error@plt>
   110a4:	mov	r6, #2
   110a8:	b	112f8 <close@plt+0x404>
   110ac:	cmp	r5, #0
   110b0:	bne	110c8 <close@plt+0x1d4>
   110b4:	ldr	r3, [sp, #24]
   110b8:	cmp	r9, #0
   110bc:	moveq	r3, #0
   110c0:	cmp	r3, #0
   110c4:	beq	11388 <close@plt+0x494>
   110c8:	mvn	r0, #384	; 0x180
   110cc:	bl	10eb8 <umask@plt>
   110d0:	cmp	r5, #0
   110d4:	str	r0, [sp, #28]
   110d8:	beq	111e0 <close@plt+0x2ec>
   110dc:	mov	r3, #384	; 0x180
   110e0:	movw	r2, #1089	; 0x441
   110e4:	ldr	r1, [pc, #740]	; 113d0 <close@plt+0x4dc>
   110e8:	mov	r0, #1
   110ec:	bl	119f8 <close@plt+0xb04>
   110f0:	cmp	r0, #0
   110f4:	mov	r4, r0
   110f8:	ldrge	fp, [pc, #720]	; 113d0 <close@plt+0x4dc>
   110fc:	movge	r6, #0
   11100:	bge	11204 <close@plt+0x310>
   11104:	bl	10e1c <__errno_location@plt>
   11108:	mov	fp, r0
   1110c:	ldr	r0, [pc, #704]	; 113d4 <close@plt+0x4e0>
   11110:	ldr	r3, [fp]
   11114:	str	r3, [sp, #32]
   11118:	bl	10da4 <getenv@plt>
   1111c:	subs	r6, r0, #0
   11120:	beq	11160 <close@plt+0x26c>
   11124:	mov	r2, #0
   11128:	ldr	r1, [pc, #672]	; 113d0 <close@plt+0x4dc>
   1112c:	bl	11a58 <close@plt+0xb64>
   11130:	cmp	r5, #0
   11134:	mov	r6, r0
   11138:	beq	111f4 <close@plt+0x300>
   1113c:	mov	r1, r0
   11140:	mov	r3, #384	; 0x180
   11144:	movw	r2, #1089	; 0x441
   11148:	mov	r0, #1
   1114c:	bl	119f8 <close@plt+0xb04>
   11150:	cmp	r0, #0
   11154:	mov	r4, r0
   11158:	movge	fp, r6
   1115c:	bge	11204 <close@plt+0x310>
   11160:	mov	r2, #5
   11164:	ldr	r1, [pc, #620]	; 113d8 <close@plt+0x4e4>
   11168:	mov	r0, #0
   1116c:	ldr	r4, [fp]
   11170:	bl	10d14 <dcgettext@plt>
   11174:	mov	r5, r0
   11178:	ldr	r1, [pc, #592]	; 113d0 <close@plt+0x4dc>
   1117c:	mov	r0, #4
   11180:	bl	13124 <close@plt+0x2230>
   11184:	mov	r3, r0
   11188:	mov	r2, r5
   1118c:	ldr	r1, [sp, #32]
   11190:	mov	r0, #0
   11194:	bl	10d8c <error@plt>
   11198:	cmp	r6, #0
   1119c:	beq	111d4 <close@plt+0x2e0>
   111a0:	mov	r2, #5
   111a4:	ldr	r1, [pc, #556]	; 113d8 <close@plt+0x4e4>
   111a8:	mov	r0, #0
   111ac:	bl	10d14 <dcgettext@plt>
   111b0:	mov	r5, r0
   111b4:	mov	r1, r6
   111b8:	mov	r0, #4
   111bc:	bl	13124 <close@plt+0x2230>
   111c0:	mov	r3, r0
   111c4:	mov	r2, r5
   111c8:	mov	r1, r4
   111cc:	mov	r0, #0
   111d0:	bl	10d8c <error@plt>
   111d4:	mov	r0, r7
   111d8:	add	sp, sp, #44	; 0x2c
   111dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111e0:	mov	r2, #384	; 0x180
   111e4:	movw	r1, #1089	; 0x441
   111e8:	ldr	r0, [pc, #480]	; 113d0 <close@plt+0x4dc>
   111ec:	bl	10d98 <open64@plt>
   111f0:	b	110f0 <close@plt+0x1fc>
   111f4:	mov	r2, #384	; 0x180
   111f8:	movw	r1, #1089	; 0x441
   111fc:	bl	10d98 <open64@plt>
   11200:	b	11150 <close@plt+0x25c>
   11204:	ldr	r0, [sp, #28]
   11208:	bl	10eb8 <umask@plt>
   1120c:	ldr	r3, [pc, #456]	; 113dc <close@plt+0x4e8>
   11210:	cmp	sl, #0
   11214:	mov	r2, #5
   11218:	mov	r0, #0
   1121c:	ldr	r1, [pc, #444]	; 113e0 <close@plt+0x4ec>
   11220:	moveq	r1, r3
   11224:	bl	10d14 <dcgettext@plt>
   11228:	mov	r2, r0
   1122c:	mov	r1, fp
   11230:	mov	r0, #4
   11234:	str	r2, [sp, #28]
   11238:	bl	13124 <close@plt+0x2230>
   1123c:	mov	r1, #0
   11240:	mov	r3, r0
   11244:	ldr	r2, [sp, #28]
   11248:	mov	r0, r1
   1124c:	bl	10d8c <error@plt>
   11250:	mov	r0, r6
   11254:	bl	11b38 <close@plt+0xc44>
   11258:	cmp	r9, #0
   1125c:	beq	110a4 <close@plt+0x1b0>
   11260:	mov	r2, #3
   11264:	movw	r1, #1030	; 0x406
   11268:	mov	r0, #2
   1126c:	bl	11848 <close@plt+0x954>
   11270:	cmp	r5, #0
   11274:	mov	r6, r0
   11278:	bne	112a8 <close@plt+0x3b4>
   1127c:	ldr	r3, [pc, #352]	; 113e4 <close@plt+0x4f0>
   11280:	cmp	sl, #0
   11284:	mov	r2, #5
   11288:	mov	r0, r5
   1128c:	ldr	r1, [pc, #340]	; 113e8 <close@plt+0x4f4>
   11290:	moveq	r1, r3
   11294:	bl	10d14 <dcgettext@plt>
   11298:	mov	r2, r0
   1129c:	mov	r1, r5
   112a0:	mov	r0, r5
   112a4:	bl	10d8c <error@plt>
   112a8:	mov	r1, #2
   112ac:	mov	r0, r4
   112b0:	bl	10d20 <dup2@plt>
   112b4:	cmp	r0, #0
   112b8:	bge	112e4 <close@plt+0x3f0>
   112bc:	bl	10e1c <__errno_location@plt>
   112c0:	ldr	r5, [r0]
   112c4:	mov	r2, #5
   112c8:	mov	r0, #0
   112cc:	ldr	r1, [pc, #280]	; 113ec <close@plt+0x4f8>
   112d0:	bl	10d14 <dcgettext@plt>
   112d4:	mov	r2, r0
   112d8:	mov	r0, r7
   112dc:	mov	r1, r5
   112e0:	bl	10d8c <error@plt>
   112e4:	ldr	r3, [sp, #24]
   112e8:	cmp	r3, #0
   112ec:	beq	112f8 <close@plt+0x404>
   112f0:	mov	r0, r4
   112f4:	bl	10ef4 <close@plt>
   112f8:	ldr	r3, [pc, #240]	; 113f0 <close@plt+0x4fc>
   112fc:	ldr	r0, [r3]
   11300:	bl	10d74 <ferror_unlocked@plt>
   11304:	subs	r5, r0, #0
   11308:	bne	111d4 <close@plt+0x2e0>
   1130c:	mov	r1, #1
   11310:	mov	r0, r1
   11314:	bl	10cf0 <signal@plt>
   11318:	ldr	r3, [sp, #36]	; 0x24
   1131c:	ldr	r4, [r3]
   11320:	add	r1, r8, r4, lsl #2
   11324:	ldr	r0, [r8, r4, lsl #2]
   11328:	bl	10cd8 <execvp@plt>
   1132c:	bl	10e1c <__errno_location@plt>
   11330:	ldr	r9, [r0]
   11334:	mov	r1, #2
   11338:	mov	r0, r6
   1133c:	cmp	r9, #2
   11340:	moveq	r7, #127	; 0x7f
   11344:	movne	r7, #126	; 0x7e
   11348:	bl	10d20 <dup2@plt>
   1134c:	cmp	r0, #2
   11350:	bne	111d4 <close@plt+0x2e0>
   11354:	mov	r2, #5
   11358:	ldr	r1, [pc, #148]	; 113f4 <close@plt+0x500>
   1135c:	mov	r0, r5
   11360:	bl	10d14 <dcgettext@plt>
   11364:	mov	r6, r0
   11368:	mov	r0, #4
   1136c:	ldr	r1, [r8, r4, lsl #2]
   11370:	bl	13124 <close@plt+0x2230>
   11374:	mov	r3, r0
   11378:	mov	r2, r6
   1137c:	mov	r1, r9
   11380:	mov	r0, r5
   11384:	b	111d0 <close@plt+0x2dc>
   11388:	mov	r4, #1
   1138c:	b	11258 <close@plt+0x364>
   11390:	andeq	r4, r1, r5, asr r1
   11394:	andeq	r4, r1, r5, ror #9
   11398:	ldrdeq	r4, [r1], -lr
   1139c:	strdeq	r4, [r1], -sp
   113a0:	strdeq	r5, [r2], -r0
   113a4:	andeq	r1, r1, r4, ror r7
   113a8:	andeq	r4, r1, sp, lsl #10
   113ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   113b0:	andeq	r1, r1, r8, ror #9
   113b4:	andeq	r5, r2, ip, ror #1
   113b8:	ldrdeq	r4, [r1], -sl
   113bc:	andeq	r5, r2, r0, asr #2
   113c0:	andeq	r4, r1, sl, lsl r5
   113c4:	andeq	r4, r1, sl, lsr #10
   113c8:	andeq	r4, r1, r4, lsr r5
   113cc:	andeq	r4, r1, sp, asr r5
   113d0:	andeq	r4, r1, r1, lsl #9
   113d4:	andeq	r4, r1, ip, ror #10
   113d8:	andeq	r4, r1, r1, ror r5
   113dc:	muleq	r1, lr, r4
   113e0:	andeq	r4, r1, fp, lsl #9
   113e4:	andeq	r4, r1, r8, asr #9
   113e8:			; <UNDEFINED> instruction: 0x000144b5
   113ec:	andeq	r4, r1, r3, lsl #11
   113f0:	andeq	r5, r2, r8, asr #2
   113f4:	andeq	r4, r1, r5, lsr #11
   113f8:	mov	fp, #0
   113fc:	mov	lr, #0
   11400:	pop	{r1}		; (ldr r1, [sp], #4)
   11404:	mov	r2, sp
   11408:	push	{r2}		; (str r2, [sp, #-4]!)
   1140c:	push	{r0}		; (str r0, [sp, #-4]!)
   11410:	ldr	ip, [pc, #16]	; 11428 <close@plt+0x534>
   11414:	push	{ip}		; (str ip, [sp, #-4]!)
   11418:	ldr	r0, [pc, #12]	; 1142c <close@plt+0x538>
   1141c:	ldr	r3, [pc, #12]	; 11430 <close@plt+0x53c>
   11420:	bl	10dbc <__libc_start_main@plt>
   11424:	bl	10ee8 <abort@plt>
   11428:	andeq	r4, r1, r4, ror r0
   1142c:	andeq	r0, r1, r8, lsl pc
   11430:	andeq	r4, r1, r4, lsl r0
   11434:	ldr	r3, [pc, #20]	; 11450 <close@plt+0x55c>
   11438:	ldr	r2, [pc, #20]	; 11454 <close@plt+0x560>
   1143c:	add	r3, pc, r3
   11440:	ldr	r2, [r3, r2]
   11444:	cmp	r2, #0
   11448:	bxeq	lr
   1144c:	b	10dd4 <__gmon_start__@plt>
   11450:			; <UNDEFINED> instruction: 0x00013bbc
   11454:	andeq	r0, r0, r0, ror #1
   11458:	ldr	r0, [pc, #24]	; 11478 <close@plt+0x584>
   1145c:	ldr	r3, [pc, #24]	; 1147c <close@plt+0x588>
   11460:	cmp	r3, r0
   11464:	bxeq	lr
   11468:	ldr	r3, [pc, #16]	; 11480 <close@plt+0x58c>
   1146c:	cmp	r3, #0
   11470:	bxeq	lr
   11474:	bx	r3
   11478:	andeq	r5, r2, r4, lsr r1
   1147c:	andeq	r5, r2, r4, lsr r1
   11480:	andeq	r0, r0, r0
   11484:	ldr	r0, [pc, #36]	; 114b0 <close@plt+0x5bc>
   11488:	ldr	r1, [pc, #36]	; 114b4 <close@plt+0x5c0>
   1148c:	sub	r1, r1, r0
   11490:	asr	r1, r1, #2
   11494:	add	r1, r1, r1, lsr #31
   11498:	asrs	r1, r1, #1
   1149c:	bxeq	lr
   114a0:	ldr	r3, [pc, #16]	; 114b8 <close@plt+0x5c4>
   114a4:	cmp	r3, #0
   114a8:	bxeq	lr
   114ac:	bx	r3
   114b0:	andeq	r5, r2, r4, lsr r1
   114b4:	andeq	r5, r2, r4, lsr r1
   114b8:	andeq	r0, r0, r0
   114bc:	push	{r4, lr}
   114c0:	ldr	r4, [pc, #24]	; 114e0 <close@plt+0x5ec>
   114c4:	ldrb	r3, [r4]
   114c8:	cmp	r3, #0
   114cc:	popne	{r4, pc}
   114d0:	bl	11458 <close@plt+0x564>
   114d4:	mov	r3, #1
   114d8:	strb	r3, [r4]
   114dc:	pop	{r4, pc}
   114e0:	andeq	r5, r2, r4, asr r1
   114e4:	b	11484 <close@plt+0x590>
   114e8:	subs	r4, r0, #0
   114ec:	push	{r7, lr}
   114f0:	sub	sp, sp, #56	; 0x38
   114f4:	ldr	r6, [pc, #516]	; 11700 <close@plt+0x80c>
   114f8:	beq	11530 <close@plt+0x63c>
   114fc:	mov	r2, #5
   11500:	mov	r0, #0
   11504:	ldr	r3, [pc, #504]	; 11704 <close@plt+0x810>
   11508:	ldr	r1, [pc, #504]	; 11708 <close@plt+0x814>
   1150c:	ldr	r5, [r3]
   11510:	bl	10d14 <dcgettext@plt>
   11514:	mov	r2, r0
   11518:	mov	r1, #1
   1151c:	ldr	r3, [r6]
   11520:	mov	r0, r5
   11524:	bl	10e58 <__fprintf_chk@plt>
   11528:	mov	r0, r4
   1152c:	bl	10e04 <exit@plt>
   11530:	mov	r2, #5
   11534:	ldr	r1, [pc, #464]	; 1170c <close@plt+0x818>
   11538:	bl	10d14 <dcgettext@plt>
   1153c:	ldr	r3, [r6]
   11540:	mov	r1, r0
   11544:	mov	r0, #1
   11548:	ldr	r5, [pc, #448]	; 11710 <close@plt+0x81c>
   1154c:	ldr	r7, [pc, #448]	; 11714 <close@plt+0x820>
   11550:	mov	r2, r3
   11554:	bl	10e40 <__printf_chk@plt>
   11558:	mov	r2, #5
   1155c:	ldr	r1, [pc, #436]	; 11718 <close@plt+0x824>
   11560:	mov	r0, r4
   11564:	bl	10d14 <dcgettext@plt>
   11568:	ldr	r1, [r5]
   1156c:	bl	10c90 <fputs_unlocked@plt>
   11570:	mov	r2, #5
   11574:	ldr	r1, [pc, #416]	; 1171c <close@plt+0x828>
   11578:	mov	r0, r4
   1157c:	bl	10d14 <dcgettext@plt>
   11580:	ldr	r1, [r5]
   11584:	bl	10c90 <fputs_unlocked@plt>
   11588:	mov	r2, #5
   1158c:	ldr	r1, [pc, #396]	; 11720 <close@plt+0x82c>
   11590:	mov	r0, r4
   11594:	bl	10d14 <dcgettext@plt>
   11598:	ldr	r1, [r5]
   1159c:	bl	10c90 <fputs_unlocked@plt>
   115a0:	mov	r2, #5
   115a4:	ldr	r1, [pc, #376]	; 11724 <close@plt+0x830>
   115a8:	mov	r0, r4
   115ac:	bl	10d14 <dcgettext@plt>
   115b0:	mov	r1, r0
   115b4:	mov	r0, #1
   115b8:	ldr	r2, [r6]
   115bc:	bl	10e40 <__printf_chk@plt>
   115c0:	mov	r2, #5
   115c4:	ldr	r1, [pc, #348]	; 11728 <close@plt+0x834>
   115c8:	mov	r0, r4
   115cc:	bl	10d14 <dcgettext@plt>
   115d0:	mov	r1, r0
   115d4:	ldr	r2, [pc, #312]	; 11714 <close@plt+0x820>
   115d8:	mov	r0, #1
   115dc:	bl	10e40 <__printf_chk@plt>
   115e0:	ldr	lr, [pc, #324]	; 1172c <close@plt+0x838>
   115e4:	mov	ip, sp
   115e8:	mov	r6, sp
   115ec:	ldm	lr!, {r0, r1, r2, r3}
   115f0:	stmia	ip!, {r0, r1, r2, r3}
   115f4:	ldm	lr!, {r0, r1, r2, r3}
   115f8:	stmia	ip!, {r0, r1, r2, r3}
   115fc:	ldm	lr!, {r0, r1, r2, r3}
   11600:	stmia	ip!, {r0, r1, r2, r3}
   11604:	ldm	lr, {r0, r1}
   11608:	stm	ip, {r0, r1}
   1160c:	ldr	r1, [r6]
   11610:	cmp	r1, #0
   11614:	bne	116b8 <close@plt+0x7c4>
   11618:	ldr	r6, [r6, #4]
   1161c:	mov	r2, #5
   11620:	mov	r0, #0
   11624:	ldr	r7, [pc, #232]	; 11714 <close@plt+0x820>
   11628:	ldr	r1, [pc, #256]	; 11730 <close@plt+0x83c>
   1162c:	cmp	r6, #0
   11630:	moveq	r6, r7
   11634:	bl	10d14 <dcgettext@plt>
   11638:	mov	r1, r0
   1163c:	ldr	r3, [pc, #240]	; 11734 <close@plt+0x840>
   11640:	mov	r0, #1
   11644:	ldr	r2, [pc, #236]	; 11738 <close@plt+0x844>
   11648:	bl	10e40 <__printf_chk@plt>
   1164c:	mov	r1, #0
   11650:	mov	r0, #5
   11654:	bl	10e88 <setlocale@plt>
   11658:	cmp	r0, #0
   1165c:	bne	116d0 <close@plt+0x7dc>
   11660:	mov	r2, #5
   11664:	ldr	r1, [pc, #208]	; 1173c <close@plt+0x848>
   11668:	mov	r0, #0
   1166c:	bl	10d14 <dcgettext@plt>
   11670:	mov	r1, r0
   11674:	ldr	r3, [pc, #152]	; 11714 <close@plt+0x820>
   11678:	mov	r0, #1
   1167c:	ldr	r2, [pc, #176]	; 11734 <close@plt+0x840>
   11680:	bl	10e40 <__printf_chk@plt>
   11684:	mov	r2, #5
   11688:	ldr	r1, [pc, #176]	; 11740 <close@plt+0x84c>
   1168c:	mov	r0, #0
   11690:	bl	10d14 <dcgettext@plt>
   11694:	ldr	r2, [pc, #168]	; 11744 <close@plt+0x850>
   11698:	cmp	r6, r7
   1169c:	mov	r1, r0
   116a0:	mov	r0, #1
   116a4:	ldr	r3, [pc, #156]	; 11748 <close@plt+0x854>
   116a8:	moveq	r3, r2
   116ac:	mov	r2, r6
   116b0:	bl	10e40 <__printf_chk@plt>
   116b4:	b	11528 <close@plt+0x634>
   116b8:	mov	r0, r7
   116bc:	bl	10c9c <strcmp@plt>
   116c0:	cmp	r0, #0
   116c4:	beq	11618 <close@plt+0x724>
   116c8:	add	r6, r6, #8
   116cc:	b	1160c <close@plt+0x718>
   116d0:	mov	r2, #3
   116d4:	ldr	r1, [pc, #112]	; 1174c <close@plt+0x858>
   116d8:	bl	10edc <strncmp@plt>
   116dc:	cmp	r0, #0
   116e0:	beq	11660 <close@plt+0x76c>
   116e4:	mov	r2, #5
   116e8:	ldr	r1, [pc, #96]	; 11750 <close@plt+0x85c>
   116ec:	mov	r0, #0
   116f0:	bl	10d14 <dcgettext@plt>
   116f4:	ldr	r1, [r5]
   116f8:	bl	10c90 <fputs_unlocked@plt>
   116fc:	b	11660 <close@plt+0x76c>
   11700:	andeq	r5, r2, r4, ror #2
   11704:	andeq	r5, r2, r8, asr #2
   11708:	ldrdeq	r4, [r1], -sl
   1170c:	andeq	r4, r1, r1, lsl #2
   11710:	andeq	r5, r2, ip, asr #2
   11714:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11718:	andeq	r4, r1, lr, lsr #2
   1171c:	andeq	r4, r1, r6, asr r1
   11720:	andeq	r4, r1, r3, lsl #3
   11724:			; <UNDEFINED> instruction: 0x000141b9
   11728:	ldrdeq	r4, [r1], -ip
   1172c:	muleq	r1, ip, r0
   11730:	muleq	r1, fp, r3
   11734:			; <UNDEFINED> instruction: 0x000143b2
   11738:	ldrdeq	r4, [r1], -sl
   1173c:	andeq	r4, r1, r3, lsr r4
   11740:	andeq	r4, r1, lr, asr #8
   11744:	ldrdeq	r4, [r1], -sl
   11748:	andeq	r4, r1, r5, asr r1
   1174c:	andeq	r4, r1, r8, ror #7
   11750:	andeq	r4, r1, ip, ror #7
   11754:	ldr	r3, [pc, #4]	; 11760 <close@plt+0x86c>
   11758:	str	r0, [r3]
   1175c:	bx	lr
   11760:	andeq	r5, r2, r8, asr r1
   11764:	ldr	r3, [pc, #4]	; 11770 <close@plt+0x87c>
   11768:	strb	r0, [r3, #4]
   1176c:	bx	lr
   11770:	andeq	r5, r2, r8, asr r1
   11774:	ldr	r3, [pc, #176]	; 1182c <close@plt+0x938>
   11778:	push	{r0, r1, r4, r5, r6, lr}
   1177c:	ldr	r0, [r3]
   11780:	bl	13c5c <close@plt+0x2d68>
   11784:	cmp	r0, #0
   11788:	beq	11810 <close@plt+0x91c>
   1178c:	ldr	r4, [pc, #156]	; 11830 <close@plt+0x93c>
   11790:	bl	10e1c <__errno_location@plt>
   11794:	mov	r5, r0
   11798:	ldrb	r6, [r4, #4]
   1179c:	cmp	r6, #0
   117a0:	beq	117b0 <close@plt+0x8bc>
   117a4:	ldr	r3, [r0]
   117a8:	cmp	r3, #32
   117ac:	beq	11810 <close@plt+0x91c>
   117b0:	mov	r2, #5
   117b4:	ldr	r1, [pc, #120]	; 11834 <close@plt+0x940>
   117b8:	mov	r0, #0
   117bc:	bl	10d14 <dcgettext@plt>
   117c0:	mov	r6, r0
   117c4:	ldr	r0, [r4]
   117c8:	cmp	r0, #0
   117cc:	beq	117fc <close@plt+0x908>
   117d0:	ldr	r4, [r5]
   117d4:	bl	131b8 <close@plt+0x22c4>
   117d8:	mov	r3, r0
   117dc:	ldr	r2, [pc, #84]	; 11838 <close@plt+0x944>
   117e0:	mov	r0, #0
   117e4:	str	r6, [sp]
   117e8:	mov	r1, r4
   117ec:	bl	10d8c <error@plt>
   117f0:	ldr	r3, [pc, #68]	; 1183c <close@plt+0x948>
   117f4:	ldr	r0, [r3]
   117f8:	bl	10cc0 <_exit@plt>
   117fc:	mov	r3, r6
   11800:	ldr	r2, [pc, #56]	; 11840 <close@plt+0x94c>
   11804:	ldr	r1, [r5]
   11808:	bl	10d8c <error@plt>
   1180c:	b	117f0 <close@plt+0x8fc>
   11810:	ldr	r3, [pc, #44]	; 11844 <close@plt+0x950>
   11814:	ldr	r0, [r3]
   11818:	bl	13c5c <close@plt+0x2d68>
   1181c:	cmp	r0, #0
   11820:	bne	117f0 <close@plt+0x8fc>
   11824:	add	sp, sp, #8
   11828:	pop	{r4, r5, r6, pc}
   1182c:	andeq	r5, r2, ip, asr #2
   11830:	andeq	r5, r2, r8, asr r1
   11834:	andeq	r4, r1, ip, lsr #12
   11838:	andeq	r4, r1, r8, lsr r6
   1183c:	strdeq	r5, [r2], -r0
   11840:	andeq	r4, r1, ip, lsr r6
   11844:	andeq	r5, r2, r8, asr #2
   11848:	push	{r1, r2, r3}
   1184c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, lr}
   11850:	add	r2, sp, #40	; 0x28
   11854:	ldr	r1, [sp, #36]	; 0x24
   11858:	str	r2, [sp, #4]
   1185c:	cmp	r1, #0
   11860:	beq	118b0 <close@plt+0x9bc>
   11864:	movw	r3, #1030	; 0x406
   11868:	mov	r5, r0
   1186c:	cmp	r1, r3
   11870:	beq	118bc <close@plt+0x9c8>
   11874:	cmp	r1, #11
   11878:	beq	118a0 <close@plt+0x9ac>
   1187c:	bgt	119b0 <close@plt+0xabc>
   11880:	cmp	r1, #4
   11884:	beq	119c8 <close@plt+0xad4>
   11888:	bgt	119a8 <close@plt+0xab4>
   1188c:	cmp	r1, #2
   11890:	beq	119c8 <close@plt+0xad4>
   11894:	bgt	118a0 <close@plt+0x9ac>
   11898:	cmp	r1, #1
   1189c:	bne	119c8 <close@plt+0xad4>
   118a0:	mov	r0, r5
   118a4:	bl	10e7c <fcntl64@plt>
   118a8:	mov	r4, r0
   118ac:	b	11904 <close@plt+0xa10>
   118b0:	ldr	r2, [sp, #40]	; 0x28
   118b4:	bl	10e7c <fcntl64@plt>
   118b8:	b	118a8 <close@plt+0x9b4>
   118bc:	ldr	r6, [pc, #304]	; 119f4 <close@plt+0xb00>
   118c0:	add	r3, sp, #44	; 0x2c
   118c4:	str	r3, [sp, #4]
   118c8:	ldr	r7, [r2]
   118cc:	ldr	r3, [r6]
   118d0:	mov	r8, r6
   118d4:	mov	r2, r7
   118d8:	cmp	r3, #0
   118dc:	blt	1196c <close@plt+0xa78>
   118e0:	bl	10e7c <fcntl64@plt>
   118e4:	subs	r4, r0, #0
   118e8:	bge	118fc <close@plt+0xa08>
   118ec:	bl	10e1c <__errno_location@plt>
   118f0:	ldr	r3, [r0]
   118f4:	cmp	r3, #22
   118f8:	beq	11918 <close@plt+0xa24>
   118fc:	mov	r3, #1
   11900:	str	r3, [r8]
   11904:	mov	r0, r4
   11908:	add	sp, sp, #12
   1190c:	pop	{r4, r5, r6, r7, r8, lr}
   11910:	add	sp, sp, #12
   11914:	bx	lr
   11918:	mov	r2, r7
   1191c:	mov	r1, #0
   11920:	mov	r0, r5
   11924:	bl	10e7c <fcntl64@plt>
   11928:	subs	r4, r0, #0
   1192c:	mvnge	r3, #0
   11930:	strge	r3, [r6]
   11934:	blt	11904 <close@plt+0xa10>
   11938:	mov	r1, #1
   1193c:	mov	r0, r4
   11940:	bl	10e7c <fcntl64@plt>
   11944:	subs	r2, r0, #0
   11948:	bge	1198c <close@plt+0xa98>
   1194c:	bl	10e1c <__errno_location@plt>
   11950:	mov	r5, r0
   11954:	mov	r0, r4
   11958:	ldr	r6, [r5]
   1195c:	mvn	r4, #0
   11960:	bl	10ef4 <close@plt>
   11964:	str	r6, [r5]
   11968:	b	11904 <close@plt+0xa10>
   1196c:	mov	r1, #0
   11970:	bl	10e7c <fcntl64@plt>
   11974:	subs	r4, r0, #0
   11978:	blt	11904 <close@plt+0xa10>
   1197c:	ldr	r3, [r6]
   11980:	cmn	r3, #1
   11984:	bne	11904 <close@plt+0xa10>
   11988:	b	11938 <close@plt+0xa44>
   1198c:	orr	r2, r2, #1
   11990:	mov	r1, #2
   11994:	mov	r0, r4
   11998:	bl	10e7c <fcntl64@plt>
   1199c:	cmn	r0, #1
   119a0:	bne	11904 <close@plt+0xa10>
   119a4:	b	1194c <close@plt+0xa58>
   119a8:	cmp	r1, #9
   119ac:	b	1189c <close@plt+0x9a8>
   119b0:	movw	r2, #1031	; 0x407
   119b4:	cmp	r1, r2
   119b8:	bgt	119d8 <close@plt+0xae4>
   119bc:	cmp	r1, r3
   119c0:	movwlt	r3, #1025	; 0x401
   119c4:	blt	119ec <close@plt+0xaf8>
   119c8:	ldr	r3, [sp, #4]
   119cc:	mov	r0, r5
   119d0:	ldr	r2, [r3]
   119d4:	b	118b4 <close@plt+0x9c0>
   119d8:	movw	r3, #1033	; 0x409
   119dc:	cmp	r1, r3
   119e0:	beq	119c8 <close@plt+0xad4>
   119e4:	blt	118a0 <close@plt+0x9ac>
   119e8:	movw	r3, #1034	; 0x40a
   119ec:	cmp	r1, r3
   119f0:	b	1189c <close@plt+0x9a8>
   119f4:	andeq	r5, r2, r0, ror #2
   119f8:	push	{r4, r5, r6, r7, r8, lr}
   119fc:	mov	r5, r0
   11a00:	mov	r0, r1
   11a04:	mov	r1, r2
   11a08:	mov	r2, r3
   11a0c:	bl	10d98 <open64@plt>
   11a10:	sub	r3, r5, r0
   11a14:	mov	r4, r0
   11a18:	clz	r3, r3
   11a1c:	lsr	r3, r3, #5
   11a20:	orrs	r3, r3, r0, lsr #31
   11a24:	bne	11a50 <close@plt+0xb5c>
   11a28:	mov	r1, r5
   11a2c:	bl	10d20 <dup2@plt>
   11a30:	mov	r6, r0
   11a34:	bl	10e1c <__errno_location@plt>
   11a38:	mov	r5, r0
   11a3c:	mov	r0, r4
   11a40:	ldr	r7, [r5]
   11a44:	mov	r4, r6
   11a48:	bl	10ef4 <close@plt>
   11a4c:	str	r7, [r5]
   11a50:	mov	r0, r4
   11a54:	pop	{r4, r5, r6, r7, r8, pc}
   11a58:	push	{r4, lr}
   11a5c:	bl	11a6c <close@plt+0xb78>
   11a60:	cmp	r0, #0
   11a64:	popne	{r4, pc}
   11a68:	bl	13ad4 <close@plt+0x2be0>
   11a6c:	push	{r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a70:	mov	r5, r1
   11a74:	mov	r9, r2
   11a78:	mov	r7, r0
   11a7c:	bl	13bd8 <close@plt+0x2ce4>
   11a80:	mov	r4, r0
   11a84:	sub	r4, r4, r7
   11a88:	bl	13c30 <close@plt+0x2d3c>
   11a8c:	mov	r6, r0
   11a90:	add	r4, r4, r0
   11a94:	mov	r0, r5
   11a98:	bl	10e10 <strlen@plt>
   11a9c:	cmp	r6, #0
   11aa0:	mov	r8, r0
   11aa4:	beq	11b24 <close@plt+0xc30>
   11aa8:	add	r3, r7, r4
   11aac:	ldrb	r3, [r3, #-1]
   11ab0:	cmp	r3, #47	; 0x2f
   11ab4:	moveq	r6, #0
   11ab8:	beq	11acc <close@plt+0xbd8>
   11abc:	ldrb	r3, [r5]
   11ac0:	cmp	r3, #47	; 0x2f
   11ac4:	moveq	r6, #0
   11ac8:	movne	r6, #47	; 0x2f
   11acc:	adds	fp, r6, #0
   11ad0:	add	r0, r8, #1
   11ad4:	movne	fp, #1
   11ad8:	add	r0, r0, r4
   11adc:	add	r0, r0, fp
   11ae0:	bl	13b68 <close@plt+0x2c74>
   11ae4:	subs	sl, r0, #0
   11ae8:	beq	11b18 <close@plt+0xc24>
   11aec:	mov	r2, r4
   11af0:	mov	r1, r7
   11af4:	bl	10de0 <mempcpy@plt>
   11af8:	cmp	r9, #0
   11afc:	mov	r2, r8
   11b00:	strb	r6, [r0], fp
   11b04:	mov	r1, r5
   11b08:	strne	r0, [r9]
   11b0c:	bl	10de0 <mempcpy@plt>
   11b10:	mov	r3, #0
   11b14:	strb	r3, [r0]
   11b18:	mov	r0, sl
   11b1c:	add	sp, sp, #4
   11b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b24:	ldrb	r3, [r5]
   11b28:	cmp	r3, #47	; 0x2f
   11b2c:	movne	r6, #0
   11b30:	moveq	r6, #46	; 0x2e
   11b34:	b	11acc <close@plt+0xbd8>
   11b38:	push	{r0, r1, r2, r4, r5, lr}
   11b3c:	mov	r5, r0
   11b40:	bl	10e1c <__errno_location@plt>
   11b44:	mov	r4, r0
   11b48:	mov	r0, r5
   11b4c:	ldr	r3, [r4]
   11b50:	str	r3, [sp]
   11b54:	str	r3, [sp, #4]
   11b58:	mov	r3, #0
   11b5c:	str	r3, [r4]
   11b60:	bl	10cb4 <free@plt>
   11b64:	ldr	r3, [r4]
   11b68:	add	r2, sp, #8
   11b6c:	clz	r3, r3
   11b70:	lsr	r3, r3, #5
   11b74:	add	r3, r2, r3, lsl #2
   11b78:	ldr	r3, [r3, #-8]
   11b7c:	str	r3, [r4]
   11b80:	add	sp, sp, #12
   11b84:	pop	{r4, r5, pc}
   11b88:	ldr	ip, [pc, #156]	; 11c2c <close@plt+0xd38>
   11b8c:	cmp	r0, #2
   11b90:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   11b94:	mov	r6, #0
   11b98:	mov	r8, ip
   11b9c:	ldr	r7, [ip]
   11ba0:	str	r6, [ip]
   11ba4:	bne	11bd8 <close@plt+0xce4>
   11ba8:	mov	r5, r3
   11bac:	mov	r4, r2
   11bb0:	ldr	r3, [pc, #120]	; 11c30 <close@plt+0xd3c>
   11bb4:	str	r6, [sp]
   11bb8:	ldr	r2, [pc, #116]	; 11c34 <close@plt+0xd40>
   11bbc:	bl	10dec <getopt_long@plt>
   11bc0:	cmn	r0, #1
   11bc4:	beq	11bd8 <close@plt+0xce4>
   11bc8:	cmp	r0, #104	; 0x68
   11bcc:	beq	11bf0 <close@plt+0xcfc>
   11bd0:	cmp	r0, #118	; 0x76
   11bd4:	beq	11c00 <close@plt+0xd0c>
   11bd8:	ldr	r3, [pc, #88]	; 11c38 <close@plt+0xd44>
   11bdc:	mov	r2, #0
   11be0:	str	r7, [r8]
   11be4:	str	r2, [r3]
   11be8:	add	sp, sp, #16
   11bec:	pop	{r4, r5, r6, r7, r8, pc}
   11bf0:	mov	r0, r6
   11bf4:	ldr	r3, [sp, #44]	; 0x2c
   11bf8:	blx	r3
   11bfc:	b	11bd8 <close@plt+0xce4>
   11c00:	ldr	r0, [pc, #52]	; 11c3c <close@plt+0xd48>
   11c04:	add	r3, sp, #48	; 0x30
   11c08:	mov	r2, r5
   11c0c:	mov	r1, r4
   11c10:	str	r3, [sp]
   11c14:	str	r3, [sp, #12]
   11c18:	ldr	r3, [sp, #40]	; 0x28
   11c1c:	ldr	r0, [r0]
   11c20:	bl	13710 <close@plt+0x281c>
   11c24:	mov	r0, r6
   11c28:	bl	10e04 <exit@plt>
   11c2c:	andeq	r5, r2, r0, asr r1
   11c30:	andeq	r4, r1, r0, asr #12
   11c34:	andeq	r4, r1, r0, ror r6
   11c38:	andeq	r5, r2, r0, asr #2
   11c3c:	andeq	r5, r2, ip, asr #2
   11c40:	push	{r4, r5, r6, r7, r8, r9, lr}
   11c44:	sub	sp, sp, #20
   11c48:	mov	r8, r3
   11c4c:	mov	r4, #0
   11c50:	mov	r7, r2
   11c54:	mov	r2, #1
   11c58:	ldrb	lr, [sp, #52]	; 0x34
   11c5c:	ldr	r3, [pc, #140]	; 11cf0 <close@plt+0xdfc>
   11c60:	ldr	ip, [pc, #140]	; 11cf4 <close@plt+0xe00>
   11c64:	cmp	lr, r4
   11c68:	ldr	r6, [sp, #56]	; 0x38
   11c6c:	mov	r5, r3
   11c70:	ldr	r9, [r3]
   11c74:	str	r2, [r3]
   11c78:	ldr	r2, [pc, #120]	; 11cf8 <close@plt+0xe04>
   11c7c:	moveq	r2, ip
   11c80:	str	r4, [sp]
   11c84:	ldr	r3, [pc, #112]	; 11cfc <close@plt+0xe08>
   11c88:	bl	10dec <getopt_long@plt>
   11c8c:	cmn	r0, #1
   11c90:	beq	11cb8 <close@plt+0xdc4>
   11c94:	cmp	r0, #104	; 0x68
   11c98:	beq	11cb0 <close@plt+0xdbc>
   11c9c:	cmp	r0, #118	; 0x76
   11ca0:	beq	11cc4 <close@plt+0xdd0>
   11ca4:	ldr	r3, [pc, #84]	; 11d00 <close@plt+0xe0c>
   11ca8:	ldr	r0, [r3]
   11cac:	b	11cb4 <close@plt+0xdc0>
   11cb0:	mov	r0, r4
   11cb4:	blx	r6
   11cb8:	str	r9, [r5]
   11cbc:	add	sp, sp, #20
   11cc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11cc4:	ldr	r0, [pc, #56]	; 11d04 <close@plt+0xe10>
   11cc8:	add	r3, sp, #60	; 0x3c
   11ccc:	mov	r2, r8
   11cd0:	mov	r1, r7
   11cd4:	str	r3, [sp]
   11cd8:	str	r3, [sp, #12]
   11cdc:	ldr	r3, [sp, #48]	; 0x30
   11ce0:	ldr	r0, [r0]
   11ce4:	bl	13710 <close@plt+0x281c>
   11ce8:	mov	r0, r4
   11cec:	bl	10e04 <exit@plt>
   11cf0:	andeq	r5, r2, r0, asr r1
   11cf4:	andeq	r4, r1, r0, ror r6
   11cf8:	andeq	r4, r1, r5, asr r1
   11cfc:	andeq	r4, r1, r0, asr #12
   11d00:	strdeq	r5, [r2], -r0
   11d04:	andeq	r5, r2, ip, asr #2
   11d08:	push	{r4, r5, r6, lr}
   11d0c:	subs	r4, r0, #0
   11d10:	bne	11d28 <close@plt+0xe34>
   11d14:	ldr	r3, [pc, #124]	; 11d98 <close@plt+0xea4>
   11d18:	ldr	r0, [pc, #124]	; 11d9c <close@plt+0xea8>
   11d1c:	ldr	r1, [r3]
   11d20:	bl	10ed0 <fputs@plt>
   11d24:	bl	10ee8 <abort@plt>
   11d28:	mov	r1, #47	; 0x2f
   11d2c:	bl	10e94 <strrchr@plt>
   11d30:	subs	r6, r0, #0
   11d34:	beq	11d84 <close@plt+0xe90>
   11d38:	add	r5, r6, #1
   11d3c:	sub	r3, r5, r4
   11d40:	cmp	r3, #6
   11d44:	ble	11d84 <close@plt+0xe90>
   11d48:	mov	r2, #7
   11d4c:	ldr	r1, [pc, #76]	; 11da0 <close@plt+0xeac>
   11d50:	sub	r0, r6, #6
   11d54:	bl	10edc <strncmp@plt>
   11d58:	cmp	r0, #0
   11d5c:	bne	11d84 <close@plt+0xe90>
   11d60:	mov	r2, #3
   11d64:	ldr	r1, [pc, #56]	; 11da4 <close@plt+0xeb0>
   11d68:	mov	r0, r5
   11d6c:	bl	10edc <strncmp@plt>
   11d70:	cmp	r0, #0
   11d74:	ldreq	r3, [pc, #44]	; 11da8 <close@plt+0xeb4>
   11d78:	addeq	r4, r6, #4
   11d7c:	movne	r4, r5
   11d80:	streq	r4, [r3]
   11d84:	ldr	r3, [pc, #32]	; 11dac <close@plt+0xeb8>
   11d88:	str	r4, [r3]
   11d8c:	ldr	r3, [pc, #28]	; 11db0 <close@plt+0xebc>
   11d90:	str	r4, [r3]
   11d94:	pop	{r4, r5, r6, pc}
   11d98:	andeq	r5, r2, r8, asr #2
   11d9c:	andeq	r4, r1, pc, ror r6
   11da0:			; <UNDEFINED> instruction: 0x000146b7
   11da4:			; <UNDEFINED> instruction: 0x000146bf
   11da8:	andeq	r5, r2, r8, lsr r1
   11dac:	andeq	r5, r2, r4, ror #2
   11db0:	andeq	r5, r2, ip, lsr r1
   11db4:	push	{r4, lr}
   11db8:	mov	r2, #48	; 0x30
   11dbc:	mov	r4, r1
   11dc0:	mov	r1, #0
   11dc4:	bl	10e34 <memset@plt>
   11dc8:	cmp	r4, #10
   11dcc:	bne	11dd4 <close@plt+0xee0>
   11dd0:	bl	10ee8 <abort@plt>
   11dd4:	str	r4, [r0]
   11dd8:	pop	{r4, pc}
   11ddc:	push	{r4, r5, r6, lr}
   11de0:	mov	r2, #5
   11de4:	mov	r6, r0
   11de8:	mov	r5, r1
   11dec:	mov	r1, r0
   11df0:	mov	r0, #0
   11df4:	bl	10d14 <dcgettext@plt>
   11df8:	cmp	r6, r0
   11dfc:	mov	r4, r0
   11e00:	bne	11e70 <close@plt+0xf7c>
   11e04:	bl	13e84 <close@plt+0x2f90>
   11e08:	ldrb	r3, [r0]
   11e0c:	bic	r3, r3, #32
   11e10:	cmp	r3, #85	; 0x55
   11e14:	bne	11e78 <close@plt+0xf84>
   11e18:	ldrb	r3, [r0, #1]
   11e1c:	bic	r3, r3, #32
   11e20:	cmp	r3, #84	; 0x54
   11e24:	bne	11ee8 <close@plt+0xff4>
   11e28:	ldrb	r3, [r0, #2]
   11e2c:	bic	r3, r3, #32
   11e30:	cmp	r3, #70	; 0x46
   11e34:	bne	11ee8 <close@plt+0xff4>
   11e38:	ldrb	r3, [r0, #3]
   11e3c:	cmp	r3, #45	; 0x2d
   11e40:	bne	11ee8 <close@plt+0xff4>
   11e44:	ldrb	r3, [r0, #4]
   11e48:	cmp	r3, #56	; 0x38
   11e4c:	bne	11ee8 <close@plt+0xff4>
   11e50:	ldrb	r3, [r0, #5]
   11e54:	cmp	r3, #0
   11e58:	bne	11ee8 <close@plt+0xff4>
   11e5c:	ldrb	r2, [r4]
   11e60:	ldr	r3, [pc, #144]	; 11ef8 <close@plt+0x1004>
   11e64:	ldr	r4, [pc, #144]	; 11efc <close@plt+0x1008>
   11e68:	cmp	r2, #96	; 0x60
   11e6c:	movne	r4, r3
   11e70:	mov	r0, r4
   11e74:	pop	{r4, r5, r6, pc}
   11e78:	cmp	r3, #71	; 0x47
   11e7c:	bne	11ee8 <close@plt+0xff4>
   11e80:	ldrb	r3, [r0, #1]
   11e84:	bic	r3, r3, #32
   11e88:	cmp	r3, #66	; 0x42
   11e8c:	bne	11ee8 <close@plt+0xff4>
   11e90:	ldrb	r3, [r0, #2]
   11e94:	cmp	r3, #49	; 0x31
   11e98:	bne	11ee8 <close@plt+0xff4>
   11e9c:	ldrb	r3, [r0, #3]
   11ea0:	cmp	r3, #56	; 0x38
   11ea4:	bne	11ee8 <close@plt+0xff4>
   11ea8:	ldrb	r3, [r0, #4]
   11eac:	cmp	r3, #48	; 0x30
   11eb0:	bne	11ee8 <close@plt+0xff4>
   11eb4:	ldrb	r3, [r0, #5]
   11eb8:	cmp	r3, #51	; 0x33
   11ebc:	bne	11ee8 <close@plt+0xff4>
   11ec0:	ldrb	r3, [r0, #6]
   11ec4:	cmp	r3, #48	; 0x30
   11ec8:	bne	11ee8 <close@plt+0xff4>
   11ecc:	ldrb	r3, [r0, #7]
   11ed0:	cmp	r3, #0
   11ed4:	bne	11ee8 <close@plt+0xff4>
   11ed8:	ldrb	r2, [r4]
   11edc:	ldr	r3, [pc, #28]	; 11f00 <close@plt+0x100c>
   11ee0:	ldr	r4, [pc, #28]	; 11f04 <close@plt+0x1010>
   11ee4:	b	11e68 <close@plt+0xf74>
   11ee8:	ldr	r4, [pc, #24]	; 11f08 <close@plt+0x1014>
   11eec:	cmp	r5, #9
   11ef0:	ldr	r3, [pc, #20]	; 11f0c <close@plt+0x1018>
   11ef4:	b	11e6c <close@plt+0xf78>
   11ef8:	andeq	r4, r1, sl, lsl r7
   11efc:	andeq	r4, r1, r5, lsr #14
   11f00:	andeq	r4, r1, lr, lsl r7
   11f04:	andeq	r4, r1, r1, lsr #14
   11f08:	andeq	r4, r1, r8, lsl r7
   11f0c:	andeq	r4, r1, r9, lsr #14
   11f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f14:	sub	sp, sp, #108	; 0x6c
   11f18:	mov	r8, r0
   11f1c:	mov	r5, r1
   11f20:	mov	r6, #0
   11f24:	str	r3, [sp, #40]	; 0x28
   11f28:	str	r2, [sp, #48]	; 0x30
   11f2c:	ldr	sl, [sp, #144]	; 0x90
   11f30:	bl	10d5c <__ctype_get_mb_cur_max@plt>
   11f34:	ldr	r3, [sp, #148]	; 0x94
   11f38:	str	r6, [sp, #24]
   11f3c:	str	r6, [sp, #32]
   11f40:	str	r6, [sp, #44]	; 0x2c
   11f44:	str	r6, [sp, #52]	; 0x34
   11f48:	ubfx	r7, r3, #1, #1
   11f4c:	mov	r3, #1
   11f50:	str	r6, [sp, #60]	; 0x3c
   11f54:	str	r3, [sp, #72]	; 0x48
   11f58:	str	r0, [sp, #76]	; 0x4c
   11f5c:	cmp	sl, #10
   11f60:	ldrls	pc, [pc, sl, lsl #2]
   11f64:	b	121a8 <close@plt+0x12b4>
   11f68:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11f6c:	andeq	r2, r1, r0, asr #3
   11f70:	andeq	r2, r1, r4, asr #2
   11f74:	andeq	r2, r1, ip, asr r1
   11f78:	andeq	r2, r1, ip, lsr #2
   11f7c:	andeq	r2, r1, r4, lsl #1
   11f80:	andeq	r2, r1, r4, rrx
   11f84:	andeq	r2, r1, ip, lsr #3
   11f88:	strheq	r2, [r1], -r4
   11f8c:	strheq	r2, [r1], -r4
   11f90:	strheq	r2, [r1], -r4
   11f94:	mov	r4, sl
   11f98:	mov	r7, #0
   11f9c:	mov	r9, r5
   11fa0:	mov	r3, #0
   11fa4:	str	r6, [sp, #68]	; 0x44
   11fa8:	str	r3, [sp, #28]
   11fac:	ldr	r3, [sp, #40]	; 0x28
   11fb0:	cmn	r3, #1
   11fb4:	bne	12b54 <close@plt+0x1c60>
   11fb8:	ldr	r2, [sp, #28]
   11fbc:	ldr	r3, [sp, #48]	; 0x30
   11fc0:	ldrb	r3, [r3, r2]
   11fc4:	adds	r3, r3, #0
   11fc8:	movne	r3, #1
   11fcc:	str	r3, [sp, #36]	; 0x24
   11fd0:	ldr	r3, [sp, #36]	; 0x24
   11fd4:	cmp	r3, #0
   11fd8:	bne	121e4 <close@plt+0x12f0>
   11fdc:	sub	r3, sl, #2
   11fe0:	cmp	r4, #0
   11fe4:	clz	r3, r3
   11fe8:	movne	r2, #0
   11fec:	lsr	r3, r3, #5
   11ff0:	andeq	r2, r3, r7
   11ff4:	cmp	r2, #0
   11ff8:	bne	123a8 <close@plt+0x14b4>
   11ffc:	eor	r7, r7, #1
   12000:	ands	r3, r3, r7
   12004:	beq	12bcc <close@plt+0x1cd8>
   12008:	ldr	r2, [sp, #68]	; 0x44
   1200c:	cmp	r2, #0
   12010:	beq	12b94 <close@plt+0x1ca0>
   12014:	ldr	r3, [sp, #72]	; 0x48
   12018:	cmp	r3, #0
   1201c:	beq	12b68 <close@plt+0x1c74>
   12020:	ldr	r2, [sp, #48]	; 0x30
   12024:	ldr	r3, [sp, #160]	; 0xa0
   12028:	ldr	r1, [sp, #60]	; 0x3c
   1202c:	str	r3, [sp, #16]
   12030:	ldr	r3, [sp, #156]	; 0x9c
   12034:	str	r3, [sp, #12]
   12038:	ldr	r3, [sp, #152]	; 0x98
   1203c:	str	r3, [sp, #8]
   12040:	ldr	r3, [sp, #148]	; 0x94
   12044:	str	r3, [sp, #4]
   12048:	mov	r3, #5
   1204c:	str	r3, [sp]
   12050:	ldr	r3, [sp, #40]	; 0x28
   12054:	mov	r0, r8
   12058:	bl	11f10 <close@plt+0x101c>
   1205c:	mov	r4, r0
   12060:	b	12bc0 <close@plt+0x1ccc>
   12064:	ldr	r3, [pc, #2948]	; 12bf0 <close@plt+0x1cfc>
   12068:	mov	r7, #1
   1206c:	mov	r4, #0
   12070:	mov	sl, #5
   12074:	str	r7, [sp, #24]
   12078:	str	r7, [sp, #32]
   1207c:	str	r3, [sp, #44]	; 0x2c
   12080:	b	11f9c <close@plt+0x10a8>
   12084:	cmp	r7, #0
   12088:	bne	121cc <close@plt+0x12d8>
   1208c:	cmp	r5, #0
   12090:	mov	r4, #1
   12094:	movne	r3, #34	; 0x22
   12098:	strbne	r3, [r8]
   1209c:	mov	r3, #1
   120a0:	str	r3, [sp, #24]
   120a4:	str	r3, [sp, #32]
   120a8:	ldr	r3, [pc, #2880]	; 12bf0 <close@plt+0x1cfc>
   120ac:	str	r3, [sp, #44]	; 0x2c
   120b0:	b	11f9c <close@plt+0x10a8>
   120b4:	cmp	sl, #10
   120b8:	beq	120dc <close@plt+0x11e8>
   120bc:	mov	r1, sl
   120c0:	ldr	r0, [pc, #2860]	; 12bf4 <close@plt+0x1d00>
   120c4:	bl	11ddc <close@plt+0xee8>
   120c8:	mov	r1, sl
   120cc:	str	r0, [sp, #156]	; 0x9c
   120d0:	ldr	r0, [pc, #2848]	; 12bf8 <close@plt+0x1d04>
   120d4:	bl	11ddc <close@plt+0xee8>
   120d8:	str	r0, [sp, #160]	; 0xa0
   120dc:	cmp	r7, #0
   120e0:	moveq	r4, r7
   120e4:	beq	120fc <close@plt+0x1208>
   120e8:	mov	r4, #0
   120ec:	b	1210c <close@plt+0x1218>
   120f0:	cmp	r5, r4
   120f4:	strbhi	r3, [r8, r4]
   120f8:	add	r4, r4, #1
   120fc:	ldr	r3, [sp, #156]	; 0x9c
   12100:	ldrb	r3, [r3, r4]
   12104:	cmp	r3, #0
   12108:	bne	120f0 <close@plt+0x11fc>
   1210c:	ldr	r0, [sp, #160]	; 0xa0
   12110:	bl	10e10 <strlen@plt>
   12114:	ldr	r3, [sp, #160]	; 0xa0
   12118:	str	r0, [sp, #32]
   1211c:	str	r3, [sp, #44]	; 0x2c
   12120:	mov	r3, #1
   12124:	str	r3, [sp, #24]
   12128:	b	11f9c <close@plt+0x10a8>
   1212c:	mov	r3, #1
   12130:	cmp	r7, #0
   12134:	streq	r3, [sp, #24]
   12138:	beq	1217c <close@plt+0x1288>
   1213c:	str	r3, [sp, #32]
   12140:	b	12168 <close@plt+0x1274>
   12144:	cmp	r7, #0
   12148:	beq	1217c <close@plt+0x1288>
   1214c:	mov	r3, #1
   12150:	str	r3, [sp, #32]
   12154:	ldr	r3, [pc, #2716]	; 12bf8 <close@plt+0x1d04>
   12158:	b	121dc <close@plt+0x12e8>
   1215c:	mov	r7, #1
   12160:	str	r7, [sp, #24]
   12164:	str	r7, [sp, #32]
   12168:	ldr	r3, [pc, #2696]	; 12bf8 <close@plt+0x1d04>
   1216c:	mov	r4, #0
   12170:	str	r3, [sp, #44]	; 0x2c
   12174:	mov	sl, #2
   12178:	b	11f9c <close@plt+0x10a8>
   1217c:	cmp	r5, #0
   12180:	movne	r3, #39	; 0x27
   12184:	movne	r7, #0
   12188:	strbne	r3, [r8]
   1218c:	moveq	r7, r5
   12190:	mov	r3, #1
   12194:	mov	r4, #1
   12198:	str	r3, [sp, #32]
   1219c:	ldr	r3, [pc, #2644]	; 12bf8 <close@plt+0x1d04>
   121a0:	str	r3, [sp, #44]	; 0x2c
   121a4:	b	12174 <close@plt+0x1280>
   121a8:	bl	10ee8 <abort@plt>
   121ac:	mov	r3, #1
   121b0:	mov	r7, #0
   121b4:	str	r3, [sp, #24]
   121b8:	mov	r4, #0
   121bc:	b	11f9c <close@plt+0x10a8>
   121c0:	mov	r7, #1
   121c4:	str	sl, [sp, #32]
   121c8:	b	12168 <close@plt+0x1274>
   121cc:	mov	r3, #1
   121d0:	str	r7, [sp, #24]
   121d4:	str	r3, [sp, #32]
   121d8:	ldr	r3, [pc, #2576]	; 12bf0 <close@plt+0x1cfc>
   121dc:	str	r3, [sp, #44]	; 0x2c
   121e0:	b	121b8 <close@plt+0x12c4>
   121e4:	ldr	fp, [sp, #24]
   121e8:	ldr	r3, [sp, #32]
   121ec:	cmp	sl, #2
   121f0:	moveq	fp, #0
   121f4:	andne	fp, fp, #1
   121f8:	adds	r5, r3, #0
   121fc:	movne	r5, #1
   12200:	ands	r3, fp, r5
   12204:	str	r3, [sp, #64]	; 0x40
   12208:	beq	122d8 <close@plt+0x13e4>
   1220c:	ldr	r3, [sp, #28]
   12210:	ldr	r2, [sp, #32]
   12214:	cmp	r2, #1
   12218:	add	r6, r3, r2
   1221c:	mov	r3, r2
   12220:	ldr	r2, [sp, #40]	; 0x28
   12224:	movls	r3, #0
   12228:	movhi	r3, #1
   1222c:	cmn	r2, #1
   12230:	movne	r3, #0
   12234:	cmp	r3, #0
   12238:	beq	12248 <close@plt+0x1354>
   1223c:	ldr	r0, [sp, #48]	; 0x30
   12240:	bl	10e10 <strlen@plt>
   12244:	str	r0, [sp, #40]	; 0x28
   12248:	ldr	r3, [sp, #40]	; 0x28
   1224c:	cmp	r6, r3
   12250:	bhi	122d0 <close@plt+0x13dc>
   12254:	ldr	r0, [sp, #28]
   12258:	ldr	r2, [sp, #32]
   1225c:	ldr	r3, [sp, #48]	; 0x30
   12260:	ldr	r1, [sp, #44]	; 0x2c
   12264:	add	r0, r3, r0
   12268:	bl	10cfc <memcmp@plt>
   1226c:	cmp	r0, #0
   12270:	bne	122d0 <close@plt+0x13dc>
   12274:	cmp	r7, #0
   12278:	beq	122d8 <close@plt+0x13e4>
   1227c:	str	r7, [sp, #24]
   12280:	ldr	r3, [sp, #24]
   12284:	mov	r1, r9
   12288:	ldr	r2, [sp, #48]	; 0x30
   1228c:	cmp	sl, #2
   12290:	movne	r3, #0
   12294:	andeq	r3, r3, #1
   12298:	cmp	r3, #0
   1229c:	ldr	r3, [sp, #160]	; 0xa0
   122a0:	movne	sl, #4
   122a4:	str	sl, [sp]
   122a8:	str	r3, [sp, #16]
   122ac:	ldr	r3, [sp, #156]	; 0x9c
   122b0:	str	r3, [sp, #12]
   122b4:	mov	r3, #0
   122b8:	str	r3, [sp, #8]
   122bc:	ldr	r3, [sp, #148]	; 0x94
   122c0:	bic	r3, r3, #2
   122c4:	str	r3, [sp, #4]
   122c8:	ldr	r3, [sp, #40]	; 0x28
   122cc:	b	12054 <close@plt+0x1160>
   122d0:	mov	r3, #0
   122d4:	str	r3, [sp, #64]	; 0x40
   122d8:	ldr	r2, [sp, #28]
   122dc:	ldr	r3, [sp, #48]	; 0x30
   122e0:	add	r3, r3, r2
   122e4:	str	r3, [sp, #80]	; 0x50
   122e8:	ldr	r3, [sp, #48]	; 0x30
   122ec:	ldrb	r6, [r3, r2]
   122f0:	cmp	r6, #58	; 0x3a
   122f4:	bhi	12458 <close@plt+0x1564>
   122f8:	cmp	r6, #43	; 0x2b
   122fc:	bcs	12618 <close@plt+0x1724>
   12300:	cmp	r6, #32
   12304:	beq	1266c <close@plt+0x1778>
   12308:	bhi	123b0 <close@plt+0x14bc>
   1230c:	cmp	r6, #9
   12310:	beq	12814 <close@plt+0x1920>
   12314:	bhi	12374 <close@plt+0x1480>
   12318:	cmp	r6, #7
   1231c:	beq	12824 <close@plt+0x1930>
   12320:	bhi	12840 <close@plt+0x194c>
   12324:	cmp	r6, #0
   12328:	beq	12688 <close@plt+0x1794>
   1232c:	ldr	r3, [sp, #76]	; 0x4c
   12330:	cmp	r3, #1
   12334:	bne	1288c <close@plt+0x1998>
   12338:	bl	10df8 <__ctype_b_loc@plt>
   1233c:	ldr	r2, [r0]
   12340:	sxth	r3, r6
   12344:	lsl	r3, r3, #1
   12348:	ldrh	r5, [r2, r3]
   1234c:	ldr	r3, [sp, #76]	; 0x4c
   12350:	ubfx	r5, r5, #14, #1
   12354:	str	r3, [sp, #56]	; 0x38
   12358:	ldr	r3, [sp, #24]
   1235c:	eor	fp, r5, #1
   12360:	and	fp, fp, r3
   12364:	ands	fp, fp, #255	; 0xff
   12368:	beq	12548 <close@plt+0x1654>
   1236c:	mov	r5, #0
   12370:	b	12938 <close@plt+0x1a44>
   12374:	cmp	r6, #11
   12378:	beq	12848 <close@plt+0x1954>
   1237c:	bcc	1281c <close@plt+0x1928>
   12380:	cmp	r6, #12
   12384:	beq	12850 <close@plt+0x195c>
   12388:	cmp	r6, #13
   1238c:	moveq	r3, #114	; 0x72
   12390:	bne	1232c <close@plt+0x1438>
   12394:	cmp	sl, #2
   12398:	movne	r2, #0
   1239c:	andeq	r2, r7, #1
   123a0:	cmp	r2, #0
   123a4:	beq	12828 <close@plt+0x1934>
   123a8:	mov	sl, #2
   123ac:	b	12280 <close@plt+0x138c>
   123b0:	cmp	r6, #37	; 0x25
   123b4:	beq	12618 <close@plt+0x1724>
   123b8:	bhi	123cc <close@plt+0x14d8>
   123bc:	cmp	r6, #35	; 0x23
   123c0:	beq	12660 <close@plt+0x176c>
   123c4:	mov	r5, #0
   123c8:	b	12670 <close@plt+0x177c>
   123cc:	cmp	r6, #39	; 0x27
   123d0:	bne	123c4 <close@plt+0x14d0>
   123d4:	cmp	sl, #2
   123d8:	ldrne	r5, [sp, #36]	; 0x24
   123dc:	movne	r3, r5
   123e0:	strne	r3, [sp, #68]	; 0x44
   123e4:	bne	12764 <close@plt+0x1870>
   123e8:	cmp	r7, #0
   123ec:	bne	12280 <close@plt+0x138c>
   123f0:	ldr	r3, [sp, #60]	; 0x3c
   123f4:	cmp	r9, #0
   123f8:	clz	r3, r3
   123fc:	lsr	r3, r3, #5
   12400:	moveq	r3, #0
   12404:	cmp	r3, #0
   12408:	strne	r9, [sp, #60]	; 0x3c
   1240c:	movne	r9, #0
   12410:	bne	12420 <close@plt+0x152c>
   12414:	cmp	r9, r4
   12418:	movhi	r3, #39	; 0x27
   1241c:	strbhi	r3, [r8, r4]
   12420:	add	r3, r4, #1
   12424:	ldr	r5, [sp, #36]	; 0x24
   12428:	mov	fp, #0
   1242c:	cmp	r3, r9
   12430:	movcc	r2, #92	; 0x5c
   12434:	str	fp, [sp, #52]	; 0x34
   12438:	strbcc	r2, [r8, r3]
   1243c:	add	r3, r4, #2
   12440:	add	r4, r4, #3
   12444:	cmp	r3, r9
   12448:	str	r5, [sp, #68]	; 0x44
   1244c:	movcc	r2, #39	; 0x27
   12450:	strbcc	r2, [r8, r3]
   12454:	b	12548 <close@plt+0x1654>
   12458:	cmp	r6, #94	; 0x5e
   1245c:	beq	123c4 <close@plt+0x14d0>
   12460:	bhi	12620 <close@plt+0x172c>
   12464:	cmp	r6, #90	; 0x5a
   12468:	bhi	1260c <close@plt+0x1718>
   1246c:	cmp	r6, #65	; 0x41
   12470:	bcs	12618 <close@plt+0x1724>
   12474:	cmp	r6, #62	; 0x3e
   12478:	bls	123c4 <close@plt+0x14d0>
   1247c:	cmp	r6, #63	; 0x3f
   12480:	bne	1232c <close@plt+0x1438>
   12484:	cmp	sl, #2
   12488:	beq	1276c <close@plt+0x1878>
   1248c:	cmp	sl, #5
   12490:	movne	fp, #0
   12494:	bne	12b3c <close@plt+0x1c48>
   12498:	ldr	r3, [sp, #148]	; 0x94
   1249c:	tst	r3, #4
   124a0:	beq	12774 <close@plt+0x1880>
   124a4:	ldr	r3, [sp, #28]
   124a8:	add	r2, r3, #2
   124ac:	ldr	r3, [sp, #40]	; 0x28
   124b0:	cmp	r2, r3
   124b4:	bcs	12774 <close@plt+0x1880>
   124b8:	ldr	r1, [sp, #28]
   124bc:	ldr	r3, [sp, #48]	; 0x30
   124c0:	add	r3, r3, r1
   124c4:	ldrb	r1, [r3, #1]
   124c8:	cmp	r1, #63	; 0x3f
   124cc:	bne	12774 <close@plt+0x1880>
   124d0:	ldr	r3, [sp, #48]	; 0x30
   124d4:	ldrb	r6, [r3, r2]
   124d8:	sub	r3, r6, #33	; 0x21
   124dc:	uxtb	r3, r3
   124e0:	cmp	r3, #29
   124e4:	bhi	12b44 <close@plt+0x1c50>
   124e8:	ldr	r0, [pc, #1804]	; 12bfc <close@plt+0x1d08>
   124ec:	mov	r5, #1
   124f0:	ands	r5, r0, r5, lsl r3
   124f4:	beq	12b4c <close@plt+0x1c58>
   124f8:	cmp	r7, #0
   124fc:	bne	12280 <close@plt+0x138c>
   12500:	cmp	r9, r4
   12504:	add	r3, r4, #1
   12508:	str	r2, [sp, #28]
   1250c:	mov	r5, #0
   12510:	strbhi	r1, [r8, r4]
   12514:	cmp	r9, r3
   12518:	mov	fp, r5
   1251c:	movhi	r1, #34	; 0x22
   12520:	strbhi	r1, [r8, r3]
   12524:	add	r3, r4, #2
   12528:	cmp	r9, r3
   1252c:	movhi	r1, #34	; 0x22
   12530:	strbhi	r1, [r8, r3]
   12534:	add	r3, r4, #3
   12538:	add	r4, r4, #4
   1253c:	cmp	r9, r3
   12540:	movhi	r1, #63	; 0x3f
   12544:	strbhi	r1, [r8, r3]
   12548:	ldr	r3, [sp, #24]
   1254c:	eor	r3, r3, #1
   12550:	cmp	sl, #2
   12554:	orreq	r3, r3, #1
   12558:	eor	r3, r3, #1
   1255c:	orr	r3, r7, r3
   12560:	tst	r3, #255	; 0xff
   12564:	beq	12590 <close@plt+0x169c>
   12568:	ldr	r3, [sp, #152]	; 0x98
   1256c:	cmp	r3, #0
   12570:	beq	12590 <close@plt+0x169c>
   12574:	ldr	r1, [sp, #152]	; 0x98
   12578:	ubfx	r2, r6, #5, #8
   1257c:	and	r3, r6, #31
   12580:	ldr	r2, [r1, r2, lsl #2]
   12584:	lsr	r3, r2, r3
   12588:	tst	r3, #1
   1258c:	bne	1259c <close@plt+0x16a8>
   12590:	ldr	r3, [sp, #64]	; 0x40
   12594:	cmp	r3, #0
   12598:	beq	12794 <close@plt+0x18a0>
   1259c:	sub	r3, sl, #2
   125a0:	cmp	r7, #0
   125a4:	clz	r3, r3
   125a8:	lsr	r3, r3, #5
   125ac:	bne	12280 <close@plt+0x138c>
   125b0:	ldr	r2, [sp, #52]	; 0x34
   125b4:	eor	r2, r2, #1
   125b8:	ands	r3, r3, r2
   125bc:	beq	125f4 <close@plt+0x1700>
   125c0:	cmp	r9, r4
   125c4:	str	r3, [sp, #52]	; 0x34
   125c8:	movhi	r2, #39	; 0x27
   125cc:	strbhi	r2, [r8, r4]
   125d0:	add	r2, r4, #1
   125d4:	cmp	r9, r2
   125d8:	movhi	r1, #36	; 0x24
   125dc:	strbhi	r1, [r8, r2]
   125e0:	add	r2, r4, #2
   125e4:	add	r4, r4, #3
   125e8:	cmp	r9, r2
   125ec:	movhi	r1, #39	; 0x27
   125f0:	strbhi	r1, [r8, r2]
   125f4:	cmp	r9, r4
   125f8:	ldr	fp, [sp, #36]	; 0x24
   125fc:	movhi	r3, #92	; 0x5c
   12600:	strbhi	r3, [r8, r4]
   12604:	add	r4, r4, #1
   12608:	b	12794 <close@plt+0x18a0>
   1260c:	cmp	r6, #92	; 0x5c
   12610:	beq	1277c <close@plt+0x1888>
   12614:	bls	123c4 <close@plt+0x14d0>
   12618:	ldr	r5, [sp, #36]	; 0x24
   1261c:	b	12764 <close@plt+0x1870>
   12620:	cmp	r6, #122	; 0x7a
   12624:	bhi	12644 <close@plt+0x1750>
   12628:	cmp	r6, #97	; 0x61
   1262c:	bcs	12618 <close@plt+0x1724>
   12630:	cmp	r6, #95	; 0x5f
   12634:	beq	12618 <close@plt+0x1724>
   12638:	cmp	r6, #96	; 0x60
   1263c:	bne	1232c <close@plt+0x1438>
   12640:	b	123c4 <close@plt+0x14d0>
   12644:	cmp	r6, #124	; 0x7c
   12648:	beq	123c4 <close@plt+0x14d0>
   1264c:	bcc	12858 <close@plt+0x1964>
   12650:	cmp	r6, #125	; 0x7d
   12654:	beq	12858 <close@plt+0x1964>
   12658:	cmp	r6, #126	; 0x7e
   1265c:	bne	1232c <close@plt+0x1438>
   12660:	ldr	r3, [sp, #28]
   12664:	cmp	r3, #0
   12668:	bne	12774 <close@plt+0x1880>
   1266c:	ldr	r5, [sp, #36]	; 0x24
   12670:	cmp	sl, #2
   12674:	movne	fp, #0
   12678:	andeq	fp, r7, #1
   1267c:	cmp	fp, #0
   12680:	beq	12548 <close@plt+0x1654>
   12684:	b	123a8 <close@plt+0x14b4>
   12688:	ldr	r3, [sp, #24]
   1268c:	cmp	r3, #0
   12690:	beq	12758 <close@plt+0x1864>
   12694:	sub	r2, sl, #2
   12698:	cmp	r7, #0
   1269c:	clz	r2, r2
   126a0:	lsr	r2, r2, #5
   126a4:	bne	1227c <close@plt+0x1388>
   126a8:	ldr	r3, [sp, #52]	; 0x34
   126ac:	eor	r3, r3, #1
   126b0:	ands	r2, r2, r3
   126b4:	moveq	r3, r4
   126b8:	beq	126f0 <close@plt+0x17fc>
   126bc:	cmp	r9, r4
   126c0:	str	r2, [sp, #52]	; 0x34
   126c4:	movhi	r3, #39	; 0x27
   126c8:	strbhi	r3, [r8, r4]
   126cc:	add	r3, r4, #1
   126d0:	cmp	r9, r3
   126d4:	movhi	r1, #36	; 0x24
   126d8:	strbhi	r1, [r8, r3]
   126dc:	add	r3, r4, #2
   126e0:	cmp	r9, r3
   126e4:	movhi	r1, #39	; 0x27
   126e8:	strbhi	r1, [r8, r3]
   126ec:	add	r3, r4, #3
   126f0:	cmp	r9, r3
   126f4:	add	r4, r3, #1
   126f8:	movhi	r2, #92	; 0x5c
   126fc:	strbhi	r2, [r8, r3]
   12700:	cmp	fp, #0
   12704:	beq	12b2c <close@plt+0x1c38>
   12708:	ldr	r2, [sp, #28]
   1270c:	ldr	r1, [sp, #40]	; 0x28
   12710:	add	r2, r2, #1
   12714:	cmp	r2, r1
   12718:	bcs	12750 <close@plt+0x185c>
   1271c:	ldr	r1, [sp, #48]	; 0x30
   12720:	mov	r6, #48	; 0x30
   12724:	ldrb	r2, [r1, r2]
   12728:	sub	r2, r2, #48	; 0x30
   1272c:	cmp	r2, #9
   12730:	bhi	12b3c <close@plt+0x1c48>
   12734:	cmp	r9, r4
   12738:	add	r2, r3, #2
   1273c:	strbhi	r6, [r8, r4]
   12740:	cmp	r9, r2
   12744:	add	r4, r3, #3
   12748:	movhi	r1, #48	; 0x30
   1274c:	strbhi	r1, [r8, r2]
   12750:	mov	r5, #0
   12754:	b	12b34 <close@plt+0x1c40>
   12758:	ldr	r3, [sp, #148]	; 0x94
   1275c:	ands	r5, r3, #1
   12760:	bne	127e8 <close@plt+0x18f4>
   12764:	mov	fp, #0
   12768:	b	12548 <close@plt+0x1654>
   1276c:	cmp	r7, #0
   12770:	bne	12280 <close@plt+0x138c>
   12774:	mov	r5, #0
   12778:	b	12764 <close@plt+0x1870>
   1277c:	cmp	sl, #2
   12780:	bne	127f4 <close@plt+0x1900>
   12784:	cmp	r7, #0
   12788:	bne	12280 <close@plt+0x138c>
   1278c:	mov	r5, r7
   12790:	mov	fp, r7
   12794:	ldr	r3, [sp, #52]	; 0x34
   12798:	eor	fp, fp, #1
   1279c:	tst	r3, fp
   127a0:	beq	127cc <close@plt+0x18d8>
   127a4:	cmp	r9, r4
   127a8:	movhi	r3, #39	; 0x27
   127ac:	strbhi	r3, [r8, r4]
   127b0:	add	r3, r4, #1
   127b4:	add	r4, r4, #2
   127b8:	cmp	r9, r3
   127bc:	movhi	r2, #39	; 0x27
   127c0:	strbhi	r2, [r8, r3]
   127c4:	mov	r3, #0
   127c8:	str	r3, [sp, #52]	; 0x34
   127cc:	cmp	r9, r4
   127d0:	ldr	r3, [sp, #72]	; 0x48
   127d4:	strbhi	r6, [r8, r4]
   127d8:	cmp	r5, #0
   127dc:	add	r4, r4, #1
   127e0:	moveq	r3, #0
   127e4:	str	r3, [sp, #72]	; 0x48
   127e8:	ldr	r3, [sp, #28]
   127ec:	add	r3, r3, #1
   127f0:	b	11fa8 <close@plt+0x10b4>
   127f4:	ldr	r3, [sp, #24]
   127f8:	and	r3, r3, r7
   127fc:	tst	r5, r3
   12800:	moveq	r3, r6
   12804:	beq	12394 <close@plt+0x14a0>
   12808:	mov	fp, #0
   1280c:	mov	r5, fp
   12810:	b	12794 <close@plt+0x18a0>
   12814:	mov	r3, #116	; 0x74
   12818:	b	12394 <close@plt+0x14a0>
   1281c:	mov	r3, #110	; 0x6e
   12820:	b	12394 <close@plt+0x14a0>
   12824:	mov	r3, #97	; 0x61
   12828:	ldr	r2, [sp, #24]
   1282c:	cmp	r2, #0
   12830:	beq	12774 <close@plt+0x1880>
   12834:	mov	r6, r3
   12838:	mov	r5, #0
   1283c:	b	1259c <close@plt+0x16a8>
   12840:	mov	r3, #98	; 0x62
   12844:	b	12828 <close@plt+0x1934>
   12848:	mov	r3, #118	; 0x76
   1284c:	b	12828 <close@plt+0x1934>
   12850:	mov	r3, #102	; 0x66
   12854:	b	12828 <close@plt+0x1934>
   12858:	ldr	r3, [sp, #40]	; 0x28
   1285c:	cmn	r3, #1
   12860:	bne	12880 <close@plt+0x198c>
   12864:	ldr	r3, [sp, #48]	; 0x30
   12868:	ldrb	r3, [r3, #1]
   1286c:	adds	r3, r3, #0
   12870:	movne	r3, #1
   12874:	cmp	r3, #0
   12878:	bne	12774 <close@plt+0x1880>
   1287c:	b	12660 <close@plt+0x176c>
   12880:	ldr	r3, [sp, #40]	; 0x28
   12884:	subs	r3, r3, #1
   12888:	b	12870 <close@plt+0x197c>
   1288c:	mov	r3, #0
   12890:	mov	r2, #0
   12894:	strd	r2, [sp, #96]	; 0x60
   12898:	ldr	r3, [sp, #40]	; 0x28
   1289c:	cmn	r3, #1
   128a0:	bne	128b0 <close@plt+0x19bc>
   128a4:	ldr	r0, [sp, #48]	; 0x30
   128a8:	bl	10e10 <strlen@plt>
   128ac:	str	r0, [sp, #40]	; 0x28
   128b0:	ldr	r5, [sp, #36]	; 0x24
   128b4:	mov	r3, #0
   128b8:	str	r3, [sp, #56]	; 0x38
   128bc:	ldr	r3, [sp, #28]
   128c0:	add	r0, sp, #92	; 0x5c
   128c4:	ldr	r1, [sp, #40]	; 0x28
   128c8:	ldr	r2, [sp, #56]	; 0x38
   128cc:	add	r2, r3, r2
   128d0:	ldr	r3, [sp, #48]	; 0x30
   128d4:	add	fp, r3, r2
   128d8:	sub	r2, r1, r2
   128dc:	add	r3, sp, #96	; 0x60
   128e0:	mov	r1, fp
   128e4:	bl	13eb8 <close@plt+0x2fc4>
   128e8:	subs	r2, r0, #0
   128ec:	beq	1292c <close@plt+0x1a38>
   128f0:	cmn	r2, #1
   128f4:	beq	12b00 <close@plt+0x1c0c>
   128f8:	cmn	r2, #2
   128fc:	bne	12a70 <close@plt+0x1b7c>
   12900:	ldr	r3, [sp, #28]
   12904:	ldr	r2, [sp, #56]	; 0x38
   12908:	add	r3, r3, r2
   1290c:	ldr	r2, [sp, #40]	; 0x28
   12910:	cmp	r2, r3
   12914:	bls	12b00 <close@plt+0x1c0c>
   12918:	ldr	r2, [sp, #56]	; 0x38
   1291c:	ldr	r3, [sp, #80]	; 0x50
   12920:	ldrb	r5, [r3, r2]
   12924:	cmp	r5, #0
   12928:	bne	12a60 <close@plt+0x1b6c>
   1292c:	ldr	r3, [sp, #56]	; 0x38
   12930:	cmp	r3, #1
   12934:	bls	12358 <close@plt+0x1464>
   12938:	ldr	r3, [sp, #28]
   1293c:	mov	fp, #0
   12940:	mov	ip, #92	; 0x5c
   12944:	ldr	r2, [sp, #56]	; 0x38
   12948:	add	r3, r3, r2
   1294c:	ldr	r2, [sp, #24]
   12950:	str	r3, [sp, #36]	; 0x24
   12954:	eor	r3, r5, #1
   12958:	and	r3, r3, r2
   1295c:	mov	r2, #39	; 0x27
   12960:	uxtb	r3, r3
   12964:	cmp	r3, #0
   12968:	beq	12b08 <close@plt+0x1c14>
   1296c:	sub	r0, sl, #2
   12970:	cmp	r7, #0
   12974:	clz	r0, r0
   12978:	lsr	r0, r0, #5
   1297c:	bne	1227c <close@plt+0x1388>
   12980:	ldr	r1, [sp, #52]	; 0x34
   12984:	eor	r1, r1, #1
   12988:	ands	r1, r0, r1
   1298c:	beq	129bc <close@plt+0x1ac8>
   12990:	cmp	r9, r4
   12994:	add	r0, r4, #1
   12998:	str	r1, [sp, #52]	; 0x34
   1299c:	strbhi	r2, [r8, r4]
   129a0:	cmp	r9, r0
   129a4:	movhi	lr, #36	; 0x24
   129a8:	strbhi	lr, [r8, r0]
   129ac:	add	r0, r4, #2
   129b0:	add	r4, r4, #3
   129b4:	cmp	r9, r0
   129b8:	strbhi	r2, [r8, r0]
   129bc:	cmp	r9, r4
   129c0:	add	r0, r4, #1
   129c4:	mov	fp, r3
   129c8:	strbhi	ip, [r8, r4]
   129cc:	cmp	r9, r0
   129d0:	lsrhi	r1, r6, #6
   129d4:	addhi	r1, r1, #48	; 0x30
   129d8:	strbhi	r1, [r8, r0]
   129dc:	add	r0, r4, #2
   129e0:	add	r4, r4, #3
   129e4:	cmp	r9, r0
   129e8:	ubfxhi	r1, r6, #3, #3
   129ec:	and	r6, r6, #7
   129f0:	add	r6, r6, #48	; 0x30
   129f4:	addhi	r1, r1, #48	; 0x30
   129f8:	strbhi	r1, [r8, r0]
   129fc:	eor	r0, fp, #1
   12a00:	ldr	r1, [sp, #28]
   12a04:	ldr	lr, [sp, #52]	; 0x34
   12a08:	add	r1, r1, #1
   12a0c:	and	r0, r0, lr
   12a10:	ldr	lr, [sp, #36]	; 0x24
   12a14:	cmp	r1, lr
   12a18:	bcs	12794 <close@plt+0x18a0>
   12a1c:	cmp	r0, #0
   12a20:	beq	12a44 <close@plt+0x1b50>
   12a24:	cmp	r9, r4
   12a28:	add	r0, r4, #1
   12a2c:	strbhi	r2, [r8, r4]
   12a30:	cmp	r9, r0
   12a34:	add	r4, r4, #2
   12a38:	strbhi	r2, [r8, r0]
   12a3c:	mov	r0, #0
   12a40:	str	r0, [sp, #52]	; 0x34
   12a44:	ldr	r0, [sp, #48]	; 0x30
   12a48:	cmp	r9, r4
   12a4c:	str	r1, [sp, #28]
   12a50:	strbhi	r6, [r8, r4]
   12a54:	add	r4, r4, #1
   12a58:	ldrb	r6, [r0, r1]
   12a5c:	b	12964 <close@plt+0x1a70>
   12a60:	ldr	r3, [sp, #56]	; 0x38
   12a64:	add	r3, r3, #1
   12a68:	str	r3, [sp, #56]	; 0x38
   12a6c:	b	12900 <close@plt+0x1a0c>
   12a70:	cmp	sl, #2
   12a74:	movne	r3, #0
   12a78:	andeq	r3, r7, #1
   12a7c:	cmp	r3, #0
   12a80:	movne	r1, #1
   12a84:	bne	12ae0 <close@plt+0x1bec>
   12a88:	ldr	r0, [sp, #92]	; 0x5c
   12a8c:	str	r2, [sp, #84]	; 0x54
   12a90:	bl	10d44 <iswprint@plt>
   12a94:	ldr	r3, [sp, #56]	; 0x38
   12a98:	cmp	r0, #0
   12a9c:	add	r0, sp, #96	; 0x60
   12aa0:	moveq	r5, #0
   12aa4:	ldr	r2, [sp, #84]	; 0x54
   12aa8:	add	r3, r3, r2
   12aac:	str	r3, [sp, #56]	; 0x38
   12ab0:	bl	10ce4 <mbsinit@plt>
   12ab4:	cmp	r0, #0
   12ab8:	beq	128bc <close@plt+0x19c8>
   12abc:	b	1292c <close@plt+0x1a38>
   12ac0:	ldrb	r3, [fp, #1]!
   12ac4:	cmp	r3, #94	; 0x5e
   12ac8:	beq	123a8 <close@plt+0x14b4>
   12acc:	bhi	12aec <close@plt+0x1bf8>
   12ad0:	sub	r3, r3, #91	; 0x5b
   12ad4:	cmp	r3, #1
   12ad8:	bls	123a8 <close@plt+0x14b4>
   12adc:	add	r1, r1, #1
   12ae0:	cmp	r1, r2
   12ae4:	bne	12ac0 <close@plt+0x1bcc>
   12ae8:	b	12a88 <close@plt+0x1b94>
   12aec:	cmp	r3, #96	; 0x60
   12af0:	beq	123a8 <close@plt+0x14b4>
   12af4:	cmp	r3, #124	; 0x7c
   12af8:	bne	12adc <close@plt+0x1be8>
   12afc:	b	123a8 <close@plt+0x14b4>
   12b00:	mov	r5, #0
   12b04:	b	1292c <close@plt+0x1a38>
   12b08:	ldr	r1, [sp, #64]	; 0x40
   12b0c:	cmp	r1, #0
   12b10:	beq	129fc <close@plt+0x1b08>
   12b14:	cmp	r9, r4
   12b18:	mov	r1, #0
   12b1c:	strbhi	ip, [r8, r4]
   12b20:	add	r4, r4, #1
   12b24:	str	r1, [sp, #64]	; 0x40
   12b28:	b	129fc <close@plt+0x1b08>
   12b2c:	mov	r5, fp
   12b30:	ldr	fp, [sp, #24]
   12b34:	mov	r6, #48	; 0x30
   12b38:	b	12548 <close@plt+0x1654>
   12b3c:	mov	r5, #0
   12b40:	b	12548 <close@plt+0x1654>
   12b44:	mov	r6, r1
   12b48:	b	12774 <close@plt+0x1880>
   12b4c:	mov	r6, r1
   12b50:	b	12764 <close@plt+0x1870>
   12b54:	ldr	r2, [sp, #28]
   12b58:	ldr	r3, [sp, #40]	; 0x28
   12b5c:	subs	r3, r3, r2
   12b60:	movne	r3, #1
   12b64:	b	11fcc <close@plt+0x10d8>
   12b68:	ldr	r3, [sp, #60]	; 0x3c
   12b6c:	mov	sl, #2
   12b70:	ldr	r7, [sp, #72]	; 0x48
   12b74:	adds	r6, r3, #0
   12b78:	mov	r5, r3
   12b7c:	movne	r6, #1
   12b80:	cmp	r9, #0
   12b84:	movne	r6, #0
   12b88:	cmp	r6, #0
   12b8c:	bne	11f5c <close@plt+0x1068>
   12b90:	ldr	r3, [sp, #68]	; 0x44
   12b94:	ldr	r2, [sp, #44]	; 0x2c
   12b98:	cmp	r2, #0
   12b9c:	moveq	r3, #0
   12ba0:	andne	r3, r3, #1
   12ba4:	cmp	r3, #0
   12ba8:	movne	r3, r2
   12bac:	subne	r3, r3, #1
   12bb0:	bne	12be0 <close@plt+0x1cec>
   12bb4:	cmp	r9, r4
   12bb8:	movhi	r3, #0
   12bbc:	strbhi	r3, [r8, r4]
   12bc0:	mov	r0, r4
   12bc4:	add	sp, sp, #108	; 0x6c
   12bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bcc:	mov	r3, r7
   12bd0:	b	12b94 <close@plt+0x1ca0>
   12bd4:	cmp	r9, r4
   12bd8:	strbhi	r2, [r8, r4]
   12bdc:	add	r4, r4, #1
   12be0:	ldrb	r2, [r3, #1]!
   12be4:	cmp	r2, #0
   12be8:	bne	12bd4 <close@plt+0x1ce0>
   12bec:	b	12bb4 <close@plt+0x1cc0>
   12bf0:	andeq	r4, r1, r8, lsl r7
   12bf4:	andeq	r4, r1, fp, lsr #14
   12bf8:	andeq	r4, r1, r9, lsr #14
   12bfc:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c04:	sub	sp, sp, #52	; 0x34
   12c08:	mov	r6, r0
   12c0c:	mov	r5, r3
   12c10:	mov	r8, r1
   12c14:	mov	r9, r2
   12c18:	bl	10e1c <__errno_location@plt>
   12c1c:	ldr	r3, [r0]
   12c20:	cmn	r6, #-2147483647	; 0x80000001
   12c24:	str	r0, [sp, #24]
   12c28:	ldr	r7, [pc, #368]	; 12da0 <close@plt+0x1eac>
   12c2c:	str	r3, [sp, #32]
   12c30:	movne	r3, #0
   12c34:	moveq	r3, #1
   12c38:	orrs	r3, r3, r6, lsr #31
   12c3c:	ldr	r4, [r7]
   12c40:	beq	12c48 <close@plt+0x1d54>
   12c44:	bl	10ee8 <abort@plt>
   12c48:	ldr	r2, [r7, #4]
   12c4c:	cmp	r2, r6
   12c50:	bgt	12cc0 <close@plt+0x1dcc>
   12c54:	add	sl, r7, #8
   12c58:	mov	r3, #8
   12c5c:	cmp	r4, sl
   12c60:	add	r1, sp, #44	; 0x2c
   12c64:	str	r2, [sp, #44]	; 0x2c
   12c68:	sub	r2, r6, r2
   12c6c:	movne	r0, r4
   12c70:	moveq	r0, #0
   12c74:	add	r2, r2, #1
   12c78:	str	r3, [sp]
   12c7c:	mvn	r3, #-2147483648	; 0x80000000
   12c80:	bl	13954 <close@plt+0x2a60>
   12c84:	cmp	r4, sl
   12c88:	mov	fp, r0
   12c8c:	str	r0, [r7]
   12c90:	ldmeq	r4, {r0, r1}
   12c94:	mov	r4, fp
   12c98:	ldr	r2, [sp, #44]	; 0x2c
   12c9c:	stmeq	fp, {r0, r1}
   12ca0:	mov	r1, #0
   12ca4:	ldr	r0, [r7, #4]
   12ca8:	sub	r2, r2, r0
   12cac:	add	r0, fp, r0, lsl #3
   12cb0:	lsl	r2, r2, #3
   12cb4:	bl	10e34 <memset@plt>
   12cb8:	ldr	r3, [sp, #44]	; 0x2c
   12cbc:	str	r3, [r7, #4]
   12cc0:	ldr	r3, [r5, #4]
   12cc4:	add	sl, r4, r6, lsl #3
   12cc8:	mov	r2, r8
   12ccc:	ldr	fp, [r4, r6, lsl #3]
   12cd0:	ldr	r7, [sl, #4]
   12cd4:	orr	r3, r3, #1
   12cd8:	str	r3, [sp, #28]
   12cdc:	add	r3, r5, #8
   12ce0:	mov	r1, fp
   12ce4:	str	r3, [sp, #36]	; 0x24
   12ce8:	mov	r0, r7
   12cec:	ldr	r3, [r5, #44]	; 0x2c
   12cf0:	str	r3, [sp, #16]
   12cf4:	ldr	r3, [r5, #40]	; 0x28
   12cf8:	str	r3, [sp, #12]
   12cfc:	add	r3, r5, #8
   12d00:	str	r3, [sp, #8]
   12d04:	ldr	r3, [sp, #28]
   12d08:	str	r3, [sp, #4]
   12d0c:	ldr	r3, [r5]
   12d10:	str	r3, [sp]
   12d14:	mov	r3, r9
   12d18:	bl	11f10 <close@plt+0x101c>
   12d1c:	cmp	fp, r0
   12d20:	bhi	12d88 <close@plt+0x1e94>
   12d24:	ldr	r3, [pc, #120]	; 12da4 <close@plt+0x1eb0>
   12d28:	add	fp, r0, #1
   12d2c:	str	fp, [r4, r6, lsl #3]
   12d30:	cmp	r7, r3
   12d34:	beq	12d40 <close@plt+0x1e4c>
   12d38:	mov	r0, r7
   12d3c:	bl	11b38 <close@plt+0xc44>
   12d40:	mov	r0, fp
   12d44:	bl	13844 <close@plt+0x2950>
   12d48:	ldr	r3, [r5, #44]	; 0x2c
   12d4c:	mov	r2, r8
   12d50:	mov	r1, fp
   12d54:	str	r0, [sl, #4]
   12d58:	mov	r7, r0
   12d5c:	str	r3, [sp, #16]
   12d60:	ldr	r3, [r5, #40]	; 0x28
   12d64:	str	r3, [sp, #12]
   12d68:	add	r3, r5, #8
   12d6c:	str	r3, [sp, #8]
   12d70:	ldr	r3, [sp, #28]
   12d74:	str	r3, [sp, #4]
   12d78:	ldr	r3, [r5]
   12d7c:	str	r3, [sp]
   12d80:	mov	r3, r9
   12d84:	bl	11f10 <close@plt+0x101c>
   12d88:	ldr	r3, [sp, #24]
   12d8c:	mov	r0, r7
   12d90:	ldr	r2, [sp, #32]
   12d94:	str	r2, [r3]
   12d98:	add	sp, sp, #52	; 0x34
   12d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12da0:	strdeq	r5, [r2], -r4
   12da4:	andeq	r5, r2, r8, ror #2
   12da8:	push	{r4, r5, r6, lr}
   12dac:	mov	r5, r0
   12db0:	bl	10e1c <__errno_location@plt>
   12db4:	mov	r4, r0
   12db8:	cmp	r5, #0
   12dbc:	ldr	r0, [pc, #20]	; 12dd8 <close@plt+0x1ee4>
   12dc0:	mov	r1, #48	; 0x30
   12dc4:	movne	r0, r5
   12dc8:	ldr	r6, [r4]
   12dcc:	bl	13a44 <close@plt+0x2b50>
   12dd0:	str	r6, [r4]
   12dd4:	pop	{r4, r5, r6, pc}
   12dd8:	andeq	r5, r2, r8, ror #4
   12ddc:	ldr	r3, [pc, #12]	; 12df0 <close@plt+0x1efc>
   12de0:	cmp	r0, #0
   12de4:	moveq	r0, r3
   12de8:	ldr	r0, [r0]
   12dec:	bx	lr
   12df0:	andeq	r5, r2, r8, ror #4
   12df4:	ldr	r3, [pc, #12]	; 12e08 <close@plt+0x1f14>
   12df8:	cmp	r0, #0
   12dfc:	moveq	r0, r3
   12e00:	str	r1, [r0]
   12e04:	bx	lr
   12e08:	andeq	r5, r2, r8, ror #4
   12e0c:	ldr	r3, [pc, #52]	; 12e48 <close@plt+0x1f54>
   12e10:	cmp	r0, #0
   12e14:	push	{lr}		; (str lr, [sp, #-4]!)
   12e18:	lsr	lr, r1, #5
   12e1c:	and	r1, r1, #31
   12e20:	moveq	r0, r3
   12e24:	add	r3, r0, #8
   12e28:	ldr	ip, [r3, lr, lsl #2]
   12e2c:	lsr	r0, ip, r1
   12e30:	eor	r2, r2, r0
   12e34:	and	r0, r0, #1
   12e38:	and	r2, r2, #1
   12e3c:	eor	r1, ip, r2, lsl r1
   12e40:	str	r1, [r3, lr, lsl #2]
   12e44:	pop	{pc}		; (ldr pc, [sp], #4)
   12e48:	andeq	r5, r2, r8, ror #4
   12e4c:	ldr	r3, [pc, #16]	; 12e64 <close@plt+0x1f70>
   12e50:	cmp	r0, #0
   12e54:	movne	r3, r0
   12e58:	ldr	r0, [r3, #4]
   12e5c:	str	r1, [r3, #4]
   12e60:	bx	lr
   12e64:	andeq	r5, r2, r8, ror #4
   12e68:	ldr	r3, [pc, #44]	; 12e9c <close@plt+0x1fa8>
   12e6c:	cmp	r0, #0
   12e70:	moveq	r0, r3
   12e74:	mov	r3, #10
   12e78:	cmp	r2, #0
   12e7c:	cmpne	r1, #0
   12e80:	str	r3, [r0]
   12e84:	bne	12e90 <close@plt+0x1f9c>
   12e88:	push	{r4, lr}
   12e8c:	bl	10ee8 <abort@plt>
   12e90:	str	r1, [r0, #40]	; 0x28
   12e94:	str	r2, [r0, #44]	; 0x2c
   12e98:	bx	lr
   12e9c:	andeq	r5, r2, r8, ror #4
   12ea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ea4:	sub	sp, sp, #24
   12ea8:	mov	sl, r3
   12eac:	mov	r7, r0
   12eb0:	mov	r8, r1
   12eb4:	mov	r9, r2
   12eb8:	ldr	r4, [sp, #56]	; 0x38
   12ebc:	ldr	r3, [pc, #88]	; 12f1c <close@plt+0x2028>
   12ec0:	cmp	r4, #0
   12ec4:	moveq	r4, r3
   12ec8:	bl	10e1c <__errno_location@plt>
   12ecc:	ldr	r3, [r4, #44]	; 0x2c
   12ed0:	mov	r5, r0
   12ed4:	mov	r2, r9
   12ed8:	mov	r1, r8
   12edc:	mov	r0, r7
   12ee0:	ldr	r6, [r5]
   12ee4:	str	r3, [sp, #16]
   12ee8:	ldr	r3, [r4, #40]	; 0x28
   12eec:	str	r3, [sp, #12]
   12ef0:	add	r3, r4, #8
   12ef4:	str	r3, [sp, #8]
   12ef8:	ldr	r3, [r4, #4]
   12efc:	str	r3, [sp, #4]
   12f00:	ldr	r3, [r4]
   12f04:	str	r3, [sp]
   12f08:	mov	r3, sl
   12f0c:	bl	11f10 <close@plt+0x101c>
   12f10:	str	r6, [r5]
   12f14:	add	sp, sp, #24
   12f18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f1c:	andeq	r5, r2, r8, ror #4
   12f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f24:	cmp	r3, #0
   12f28:	sub	sp, sp, #44	; 0x2c
   12f2c:	mov	r6, r2
   12f30:	mov	sl, r1
   12f34:	mov	r9, r0
   12f38:	ldr	r4, [pc, #176]	; 12ff0 <close@plt+0x20fc>
   12f3c:	movne	r4, r3
   12f40:	bl	10e1c <__errno_location@plt>
   12f44:	ldr	r3, [r0]
   12f48:	mov	r1, #0
   12f4c:	mov	r2, r9
   12f50:	mov	r8, r0
   12f54:	mov	r0, r1
   12f58:	ldr	r5, [r4, #4]
   12f5c:	add	fp, r4, #8
   12f60:	str	r3, [sp, #28]
   12f64:	ldr	r3, [r4, #44]	; 0x2c
   12f68:	cmp	r6, #0
   12f6c:	orreq	r5, r5, #1
   12f70:	str	r3, [sp, #16]
   12f74:	ldr	r3, [r4, #40]	; 0x28
   12f78:	stmib	sp, {r5, fp}
   12f7c:	str	r3, [sp, #12]
   12f80:	ldr	r3, [r4]
   12f84:	str	r3, [sp]
   12f88:	mov	r3, sl
   12f8c:	bl	11f10 <close@plt+0x101c>
   12f90:	add	r1, r0, #1
   12f94:	mov	r7, r0
   12f98:	mov	r0, r1
   12f9c:	str	r1, [sp, #36]	; 0x24
   12fa0:	bl	13844 <close@plt+0x2950>
   12fa4:	ldr	r3, [r4, #44]	; 0x2c
   12fa8:	mov	r2, r9
   12fac:	ldr	r1, [sp, #36]	; 0x24
   12fb0:	str	r3, [sp, #16]
   12fb4:	ldr	r3, [r4, #40]	; 0x28
   12fb8:	stmib	sp, {r5, fp}
   12fbc:	str	r0, [sp, #32]
   12fc0:	str	r3, [sp, #12]
   12fc4:	ldr	r3, [r4]
   12fc8:	str	r3, [sp]
   12fcc:	mov	r3, sl
   12fd0:	bl	11f10 <close@plt+0x101c>
   12fd4:	ldr	r3, [sp, #28]
   12fd8:	cmp	r6, #0
   12fdc:	ldr	r0, [sp, #32]
   12fe0:	str	r3, [r8]
   12fe4:	strne	r7, [r6]
   12fe8:	add	sp, sp, #44	; 0x2c
   12fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ff0:	andeq	r5, r2, r8, ror #4
   12ff4:	mov	r3, r2
   12ff8:	mov	r2, #0
   12ffc:	b	12f20 <close@plt+0x202c>
   13000:	push	{r4, r5, r6, r7, r8, lr}
   13004:	mov	r6, #1
   13008:	ldr	r4, [pc, #100]	; 13074 <close@plt+0x2180>
   1300c:	ldr	r5, [r4]
   13010:	add	r7, r5, #4
   13014:	ldr	r3, [r4, #4]
   13018:	cmp	r3, r6
   1301c:	bgt	13064 <close@plt+0x2170>
   13020:	ldr	r6, [pc, #80]	; 13078 <close@plt+0x2184>
   13024:	ldr	r0, [r5, #4]
   13028:	cmp	r0, r6
   1302c:	beq	13040 <close@plt+0x214c>
   13030:	bl	11b38 <close@plt+0xc44>
   13034:	mov	r3, #256	; 0x100
   13038:	str	r3, [r4, #8]
   1303c:	str	r6, [r4, #12]
   13040:	ldr	r6, [pc, #52]	; 1307c <close@plt+0x2188>
   13044:	cmp	r5, r6
   13048:	beq	13058 <close@plt+0x2164>
   1304c:	mov	r0, r5
   13050:	bl	11b38 <close@plt+0xc44>
   13054:	str	r6, [r4]
   13058:	mov	r3, #1
   1305c:	str	r3, [r4, #4]
   13060:	pop	{r4, r5, r6, r7, r8, pc}
   13064:	ldr	r0, [r7, r6, lsl #3]
   13068:	add	r6, r6, #1
   1306c:	bl	11b38 <close@plt+0xc44>
   13070:	b	13014 <close@plt+0x2120>
   13074:	strdeq	r5, [r2], -r4
   13078:	andeq	r5, r2, r8, ror #2
   1307c:	strdeq	r5, [r2], -ip
   13080:	ldr	r3, [pc, #4]	; 1308c <close@plt+0x2198>
   13084:	mvn	r2, #0
   13088:	b	12c00 <close@plt+0x1d0c>
   1308c:	andeq	r5, r2, r8, ror #4
   13090:	ldr	r3, [pc]	; 13098 <close@plt+0x21a4>
   13094:	b	12c00 <close@plt+0x1d0c>
   13098:	andeq	r5, r2, r8, ror #4
   1309c:	mov	r1, r0
   130a0:	mov	r0, #0
   130a4:	b	13080 <close@plt+0x218c>
   130a8:	mov	r2, r1
   130ac:	mov	r1, r0
   130b0:	mov	r0, #0
   130b4:	b	13090 <close@plt+0x219c>
   130b8:	push	{r4, r5, lr}
   130bc:	sub	sp, sp, #52	; 0x34
   130c0:	mov	r5, r2
   130c4:	mov	r4, r0
   130c8:	mov	r0, sp
   130cc:	bl	11db4 <close@plt+0xec0>
   130d0:	mov	r3, sp
   130d4:	mvn	r2, #0
   130d8:	mov	r1, r5
   130dc:	mov	r0, r4
   130e0:	bl	12c00 <close@plt+0x1d0c>
   130e4:	add	sp, sp, #52	; 0x34
   130e8:	pop	{r4, r5, pc}
   130ec:	push	{r4, r5, r6, lr}
   130f0:	sub	sp, sp, #48	; 0x30
   130f4:	mov	r5, r2
   130f8:	mov	r6, r3
   130fc:	mov	r4, r0
   13100:	mov	r0, sp
   13104:	bl	11db4 <close@plt+0xec0>
   13108:	mov	r3, sp
   1310c:	mov	r2, r6
   13110:	mov	r1, r5
   13114:	mov	r0, r4
   13118:	bl	12c00 <close@plt+0x1d0c>
   1311c:	add	sp, sp, #48	; 0x30
   13120:	pop	{r4, r5, r6, pc}
   13124:	mov	r2, r1
   13128:	mov	r1, r0
   1312c:	mov	r0, #0
   13130:	b	130b8 <close@plt+0x21c4>
   13134:	mov	r3, r2
   13138:	mov	r2, r1
   1313c:	mov	r1, r0
   13140:	mov	r0, #0
   13144:	b	130ec <close@plt+0x21f8>
   13148:	push	{r4, r5, r6, lr}
   1314c:	mov	r4, r0
   13150:	mov	r5, r1
   13154:	mov	r6, r2
   13158:	sub	sp, sp, #48	; 0x30
   1315c:	mov	ip, sp
   13160:	ldr	lr, [pc, #64]	; 131a8 <close@plt+0x22b4>
   13164:	ldm	lr!, {r0, r1, r2, r3}
   13168:	stmia	ip!, {r0, r1, r2, r3}
   1316c:	ldm	lr!, {r0, r1, r2, r3}
   13170:	stmia	ip!, {r0, r1, r2, r3}
   13174:	ldm	lr, {r0, r1, r2, r3}
   13178:	stm	ip, {r0, r1, r2, r3}
   1317c:	mov	r1, r6
   13180:	mov	r2, #1
   13184:	mov	r0, sp
   13188:	bl	12e0c <close@plt+0x1f18>
   1318c:	mov	r3, sp
   13190:	mov	r2, r5
   13194:	mov	r1, r4
   13198:	mov	r0, #0
   1319c:	bl	12c00 <close@plt+0x1d0c>
   131a0:	add	sp, sp, #48	; 0x30
   131a4:	pop	{r4, r5, r6, pc}
   131a8:	andeq	r5, r2, r8, ror #4
   131ac:	mov	r2, r1
   131b0:	mvn	r1, #0
   131b4:	b	13148 <close@plt+0x2254>
   131b8:	mov	r1, #58	; 0x3a
   131bc:	b	131ac <close@plt+0x22b8>
   131c0:	mov	r2, #58	; 0x3a
   131c4:	b	13148 <close@plt+0x2254>
   131c8:	push	{r4, r5, lr}
   131cc:	sub	sp, sp, #100	; 0x64
   131d0:	mov	r4, r0
   131d4:	mov	r0, sp
   131d8:	mov	r5, r2
   131dc:	bl	11db4 <close@plt+0xec0>
   131e0:	mov	ip, sp
   131e4:	add	lr, sp, #48	; 0x30
   131e8:	ldm	ip!, {r0, r1, r2, r3}
   131ec:	stmia	lr!, {r0, r1, r2, r3}
   131f0:	ldm	ip!, {r0, r1, r2, r3}
   131f4:	stmia	lr!, {r0, r1, r2, r3}
   131f8:	ldm	ip, {r0, r1, r2, r3}
   131fc:	stm	lr, {r0, r1, r2, r3}
   13200:	mov	r2, #1
   13204:	mov	r1, #58	; 0x3a
   13208:	add	r0, sp, #48	; 0x30
   1320c:	bl	12e0c <close@plt+0x1f18>
   13210:	add	r3, sp, #48	; 0x30
   13214:	mvn	r2, #0
   13218:	mov	r1, r5
   1321c:	mov	r0, r4
   13220:	bl	12c00 <close@plt+0x1d0c>
   13224:	add	sp, sp, #100	; 0x64
   13228:	pop	{r4, r5, pc}
   1322c:	push	{r4, r5, r6, r7, lr}
   13230:	mov	r4, r0
   13234:	mov	r6, r1
   13238:	mov	r7, r2
   1323c:	mov	r5, r3
   13240:	sub	sp, sp, #52	; 0x34
   13244:	ldr	lr, [pc, #68]	; 13290 <close@plt+0x239c>
   13248:	mov	ip, sp
   1324c:	ldm	lr!, {r0, r1, r2, r3}
   13250:	stmia	ip!, {r0, r1, r2, r3}
   13254:	ldm	lr!, {r0, r1, r2, r3}
   13258:	stmia	ip!, {r0, r1, r2, r3}
   1325c:	ldm	lr, {r0, r1, r2, r3}
   13260:	stm	ip, {r0, r1, r2, r3}
   13264:	mov	r2, r7
   13268:	mov	r1, r6
   1326c:	mov	r0, sp
   13270:	bl	12e68 <close@plt+0x1f74>
   13274:	ldr	r2, [sp, #72]	; 0x48
   13278:	mov	r3, sp
   1327c:	mov	r1, r5
   13280:	mov	r0, r4
   13284:	bl	12c00 <close@plt+0x1d0c>
   13288:	add	sp, sp, #52	; 0x34
   1328c:	pop	{r4, r5, r6, r7, pc}
   13290:	andeq	r5, r2, r8, ror #4
   13294:	mvn	ip, #0
   13298:	push	{r0, r1, r2, lr}
   1329c:	str	ip, [sp]
   132a0:	bl	1322c <close@plt+0x2338>
   132a4:	add	sp, sp, #12
   132a8:	pop	{pc}		; (ldr pc, [sp], #4)
   132ac:	mov	r3, r2
   132b0:	mov	r2, r1
   132b4:	mov	r1, r0
   132b8:	mov	r0, #0
   132bc:	b	13294 <close@plt+0x23a0>
   132c0:	push	{r0, r1, r2, lr}
   132c4:	str	r3, [sp]
   132c8:	mov	r3, r2
   132cc:	mov	r2, r1
   132d0:	mov	r1, r0
   132d4:	mov	r0, #0
   132d8:	bl	1322c <close@plt+0x2338>
   132dc:	add	sp, sp, #12
   132e0:	pop	{pc}		; (ldr pc, [sp], #4)
   132e4:	ldr	r3, [pc]	; 132ec <close@plt+0x23f8>
   132e8:	b	12c00 <close@plt+0x1d0c>
   132ec:	andeq	r5, r2, r4, lsl #2
   132f0:	mov	r2, r1
   132f4:	mov	r1, r0
   132f8:	mov	r0, #0
   132fc:	b	132e4 <close@plt+0x23f0>
   13300:	mvn	r2, #0
   13304:	b	132e4 <close@plt+0x23f0>
   13308:	mov	r1, r0
   1330c:	mov	r0, #0
   13310:	b	13300 <close@plt+0x240c>
   13314:	push	{r4, r5, r6, lr}
   13318:	cmp	r1, #0
   1331c:	sub	sp, sp, #32
   13320:	mov	r5, r0
   13324:	ldr	r4, [sp, #48]	; 0x30
   13328:	ldr	r6, [sp, #52]	; 0x34
   1332c:	beq	133e0 <close@plt+0x24ec>
   13330:	strd	r2, [sp]
   13334:	mov	r3, r1
   13338:	mov	r1, #1
   1333c:	ldr	r2, [pc, #856]	; 1369c <close@plt+0x27a8>
   13340:	bl	10e58 <__fprintf_chk@plt>
   13344:	mov	r2, #5
   13348:	ldr	r1, [pc, #848]	; 136a0 <close@plt+0x27ac>
   1334c:	mov	r0, #0
   13350:	bl	10d14 <dcgettext@plt>
   13354:	movw	r3, #2022	; 0x7e6
   13358:	ldr	r2, [pc, #836]	; 136a4 <close@plt+0x27b0>
   1335c:	mov	r1, #1
   13360:	str	r3, [sp]
   13364:	mov	r3, r0
   13368:	mov	r0, r5
   1336c:	bl	10e58 <__fprintf_chk@plt>
   13370:	mov	r1, r5
   13374:	mov	r0, #10
   13378:	bl	10d08 <fputc_unlocked@plt>
   1337c:	mov	r2, #5
   13380:	ldr	r1, [pc, #800]	; 136a8 <close@plt+0x27b4>
   13384:	mov	r0, #0
   13388:	bl	10d14 <dcgettext@plt>
   1338c:	mov	r2, r0
   13390:	mov	r1, #1
   13394:	ldr	r3, [pc, #784]	; 136ac <close@plt+0x27b8>
   13398:	mov	r0, r5
   1339c:	bl	10e58 <__fprintf_chk@plt>
   133a0:	mov	r1, r5
   133a4:	mov	r0, #10
   133a8:	bl	10d08 <fputc_unlocked@plt>
   133ac:	cmp	r6, #9
   133b0:	ldrls	pc, [pc, r6, lsl #2]
   133b4:	b	13690 <close@plt+0x279c>
   133b8:	ldrdeq	r3, [r1], -r0
   133bc:	strdeq	r3, [r1], -r8
   133c0:	andeq	r3, r1, r4, lsr #8
   133c4:	andeq	r3, r1, r8, asr r4
   133c8:	muleq	r1, r4, r4
   133cc:	ldrdeq	r3, [r1], -r8
   133d0:	andeq	r3, r1, r0, lsr #10
   133d4:	andeq	r3, r1, r0, ror r5
   133d8:	andeq	r3, r1, r8, asr #11
   133dc:	andeq	r3, r1, r8, lsr #12
   133e0:	mov	r1, #1
   133e4:	str	r3, [sp]
   133e8:	mov	r3, r2
   133ec:	ldr	r2, [pc, #700]	; 136b0 <close@plt+0x27bc>
   133f0:	bl	10e58 <__fprintf_chk@plt>
   133f4:	b	13344 <close@plt+0x2450>
   133f8:	mov	r2, #5
   133fc:	ldr	r1, [pc, #688]	; 136b4 <close@plt+0x27c0>
   13400:	mov	r0, #0
   13404:	bl	10d14 <dcgettext@plt>
   13408:	ldr	r3, [r4]
   1340c:	mov	r2, r0
   13410:	mov	r1, #1
   13414:	mov	r0, r5
   13418:	add	sp, sp, #32
   1341c:	pop	{r4, r5, r6, lr}
   13420:	b	10e58 <__fprintf_chk@plt>
   13424:	mov	r2, #5
   13428:	ldr	r1, [pc, #648]	; 136b8 <close@plt+0x27c4>
   1342c:	mov	r0, #0
   13430:	bl	10d14 <dcgettext@plt>
   13434:	ldr	r3, [r4, #4]
   13438:	mov	r2, r0
   1343c:	mov	r1, #1
   13440:	mov	r0, r5
   13444:	str	r3, [sp, #48]	; 0x30
   13448:	ldr	r3, [r4]
   1344c:	add	sp, sp, #32
   13450:	pop	{r4, r5, r6, lr}
   13454:	b	10e58 <__fprintf_chk@plt>
   13458:	mov	r2, #5
   1345c:	ldr	r1, [pc, #600]	; 136bc <close@plt+0x27c8>
   13460:	mov	r0, #0
   13464:	bl	10d14 <dcgettext@plt>
   13468:	ldr	r3, [r4, #8]
   1346c:	mov	r2, r0
   13470:	mov	r1, #1
   13474:	mov	r0, r5
   13478:	str	r3, [sp, #52]	; 0x34
   1347c:	ldr	r3, [r4, #4]
   13480:	str	r3, [sp, #48]	; 0x30
   13484:	ldr	r3, [r4]
   13488:	add	sp, sp, #32
   1348c:	pop	{r4, r5, r6, lr}
   13490:	b	10e58 <__fprintf_chk@plt>
   13494:	mov	r2, #5
   13498:	ldr	r1, [pc, #544]	; 136c0 <close@plt+0x27cc>
   1349c:	mov	r0, #0
   134a0:	bl	10d14 <dcgettext@plt>
   134a4:	ldr	r3, [r4, #12]
   134a8:	mov	r2, r0
   134ac:	mov	r1, #1
   134b0:	mov	r0, r5
   134b4:	str	r3, [sp, #8]
   134b8:	ldr	r3, [r4, #8]
   134bc:	str	r3, [sp, #4]
   134c0:	ldr	r3, [r4, #4]
   134c4:	str	r3, [sp]
   134c8:	ldr	r3, [r4]
   134cc:	bl	10e58 <__fprintf_chk@plt>
   134d0:	add	sp, sp, #32
   134d4:	pop	{r4, r5, r6, pc}
   134d8:	mov	r2, #5
   134dc:	ldr	r1, [pc, #480]	; 136c4 <close@plt+0x27d0>
   134e0:	mov	r0, #0
   134e4:	bl	10d14 <dcgettext@plt>
   134e8:	ldr	r3, [r4, #16]
   134ec:	mov	r2, r0
   134f0:	mov	r1, #1
   134f4:	mov	r0, r5
   134f8:	str	r3, [sp, #12]
   134fc:	ldr	r3, [r4, #12]
   13500:	str	r3, [sp, #8]
   13504:	ldr	r3, [r4, #8]
   13508:	str	r3, [sp, #4]
   1350c:	ldr	r3, [r4, #4]
   13510:	str	r3, [sp]
   13514:	ldr	r3, [r4]
   13518:	bl	10e58 <__fprintf_chk@plt>
   1351c:	b	134d0 <close@plt+0x25dc>
   13520:	mov	r2, #5
   13524:	ldr	r1, [pc, #412]	; 136c8 <close@plt+0x27d4>
   13528:	mov	r0, #0
   1352c:	bl	10d14 <dcgettext@plt>
   13530:	ldr	r3, [r4, #20]
   13534:	mov	r2, r0
   13538:	mov	r1, #1
   1353c:	mov	r0, r5
   13540:	str	r3, [sp, #16]
   13544:	ldr	r3, [r4, #16]
   13548:	str	r3, [sp, #12]
   1354c:	ldr	r3, [r4, #12]
   13550:	str	r3, [sp, #8]
   13554:	ldr	r3, [r4, #8]
   13558:	str	r3, [sp, #4]
   1355c:	ldr	r3, [r4, #4]
   13560:	str	r3, [sp]
   13564:	ldr	r3, [r4]
   13568:	bl	10e58 <__fprintf_chk@plt>
   1356c:	b	134d0 <close@plt+0x25dc>
   13570:	mov	r2, #5
   13574:	ldr	r1, [pc, #336]	; 136cc <close@plt+0x27d8>
   13578:	mov	r0, #0
   1357c:	bl	10d14 <dcgettext@plt>
   13580:	ldr	r3, [r4, #24]
   13584:	mov	r2, r0
   13588:	mov	r1, #1
   1358c:	mov	r0, r5
   13590:	str	r3, [sp, #20]
   13594:	ldr	r3, [r4, #20]
   13598:	str	r3, [sp, #16]
   1359c:	ldr	r3, [r4, #16]
   135a0:	str	r3, [sp, #12]
   135a4:	ldr	r3, [r4, #12]
   135a8:	str	r3, [sp, #8]
   135ac:	ldr	r3, [r4, #8]
   135b0:	str	r3, [sp, #4]
   135b4:	ldr	r3, [r4, #4]
   135b8:	str	r3, [sp]
   135bc:	ldr	r3, [r4]
   135c0:	bl	10e58 <__fprintf_chk@plt>
   135c4:	b	134d0 <close@plt+0x25dc>
   135c8:	mov	r2, #5
   135cc:	ldr	r1, [pc, #252]	; 136d0 <close@plt+0x27dc>
   135d0:	mov	r0, #0
   135d4:	bl	10d14 <dcgettext@plt>
   135d8:	ldr	r3, [r4, #28]
   135dc:	mov	r2, r0
   135e0:	mov	r1, #1
   135e4:	mov	r0, r5
   135e8:	str	r3, [sp, #24]
   135ec:	ldr	r3, [r4, #24]
   135f0:	str	r3, [sp, #20]
   135f4:	ldr	r3, [r4, #20]
   135f8:	str	r3, [sp, #16]
   135fc:	ldr	r3, [r4, #16]
   13600:	str	r3, [sp, #12]
   13604:	ldr	r3, [r4, #12]
   13608:	str	r3, [sp, #8]
   1360c:	ldr	r3, [r4, #8]
   13610:	str	r3, [sp, #4]
   13614:	ldr	r3, [r4, #4]
   13618:	str	r3, [sp]
   1361c:	ldr	r3, [r4]
   13620:	bl	10e58 <__fprintf_chk@plt>
   13624:	b	134d0 <close@plt+0x25dc>
   13628:	ldr	r1, [pc, #164]	; 136d4 <close@plt+0x27e0>
   1362c:	mov	r2, #5
   13630:	mov	r0, #0
   13634:	bl	10d14 <dcgettext@plt>
   13638:	ldr	r3, [r4, #32]
   1363c:	mov	r2, r0
   13640:	mov	r1, #1
   13644:	mov	r0, r5
   13648:	str	r3, [sp, #28]
   1364c:	ldr	r3, [r4, #28]
   13650:	str	r3, [sp, #24]
   13654:	ldr	r3, [r4, #24]
   13658:	str	r3, [sp, #20]
   1365c:	ldr	r3, [r4, #20]
   13660:	str	r3, [sp, #16]
   13664:	ldr	r3, [r4, #16]
   13668:	str	r3, [sp, #12]
   1366c:	ldr	r3, [r4, #12]
   13670:	str	r3, [sp, #8]
   13674:	ldr	r3, [r4, #8]
   13678:	str	r3, [sp, #4]
   1367c:	ldr	r3, [r4, #4]
   13680:	str	r3, [sp]
   13684:	ldr	r3, [r4]
   13688:	bl	10e58 <__fprintf_chk@plt>
   1368c:	b	134d0 <close@plt+0x25dc>
   13690:	mov	r2, #5
   13694:	ldr	r1, [pc, #60]	; 136d8 <close@plt+0x27e4>
   13698:	b	13630 <close@plt+0x273c>
   1369c:	andeq	r4, r1, fp, ror r7
   136a0:	andeq	r4, r1, lr, lsl #15
   136a4:	andeq	r4, r1, ip, asr sl
   136a8:	muleq	r1, r2, r7
   136ac:	andeq	r4, r1, sp, lsr r8
   136b0:	andeq	r4, r1, r7, lsl #15
   136b4:	andeq	r4, r1, pc, asr r8
   136b8:	andeq	r4, r1, pc, ror #16
   136bc:	andeq	r4, r1, r6, lsl #17
   136c0:	andeq	r4, r1, r2, lsr #17
   136c4:	andeq	r4, r1, r2, asr #17
   136c8:	andeq	r4, r1, r6, ror #17
   136cc:	andeq	r4, r1, lr, lsl #18
   136d0:	andeq	r4, r1, sl, lsr r9
   136d4:	andeq	r4, r1, sl, ror #18
   136d8:	muleq	r1, lr, r9
   136dc:	push	{r0, r1, r4, lr}
   136e0:	mov	ip, #0
   136e4:	ldr	lr, [sp, #16]
   136e8:	ldr	r4, [lr, ip, lsl #2]
   136ec:	cmp	r4, #0
   136f0:	bne	13708 <close@plt+0x2814>
   136f4:	str	lr, [sp]
   136f8:	str	ip, [sp, #4]
   136fc:	bl	13314 <close@plt+0x2420>
   13700:	add	sp, sp, #8
   13704:	pop	{r4, pc}
   13708:	add	ip, ip, #1
   1370c:	b	136e8 <close@plt+0x27f4>
   13710:	push	{r4, r5, r6, lr}
   13714:	sub	sp, sp, #48	; 0x30
   13718:	mov	ip, #0
   1371c:	add	lr, sp, #8
   13720:	mov	r5, lr
   13724:	ldr	r6, [sp, #64]	; 0x40
   13728:	ldr	r4, [r6, ip, lsl #2]
   1372c:	cmp	r4, #0
   13730:	str	r4, [lr], #4
   13734:	beq	13744 <close@plt+0x2850>
   13738:	add	ip, ip, #1
   1373c:	cmp	ip, #10
   13740:	bne	13728 <close@plt+0x2834>
   13744:	stm	sp, {r5, ip}
   13748:	bl	13314 <close@plt+0x2420>
   1374c:	add	sp, sp, #48	; 0x30
   13750:	pop	{r4, r5, r6, pc}
   13754:	push	{r3}		; (str r3, [sp, #-4]!)
   13758:	push	{r0, r1, r2, r3, lr}
   1375c:	add	r3, sp, #24
   13760:	str	r3, [sp]
   13764:	str	r3, [sp, #12]
   13768:	ldr	r3, [sp, #20]
   1376c:	bl	13710 <close@plt+0x281c>
   13770:	add	sp, sp, #16
   13774:	pop	{lr}		; (ldr lr, [sp], #4)
   13778:	add	sp, sp, #4
   1377c:	bx	lr
   13780:	ldr	r3, [pc, #116]	; 137fc <close@plt+0x2908>
   13784:	mov	r0, #10
   13788:	push	{r4, lr}
   1378c:	ldr	r1, [r3]
   13790:	bl	10d08 <fputc_unlocked@plt>
   13794:	mov	r2, #5
   13798:	ldr	r1, [pc, #96]	; 13800 <close@plt+0x290c>
   1379c:	mov	r0, #0
   137a0:	bl	10d14 <dcgettext@plt>
   137a4:	mov	r1, r0
   137a8:	ldr	r2, [pc, #84]	; 13804 <close@plt+0x2910>
   137ac:	mov	r0, #1
   137b0:	bl	10e40 <__printf_chk@plt>
   137b4:	mov	r2, #5
   137b8:	ldr	r1, [pc, #72]	; 13808 <close@plt+0x2914>
   137bc:	mov	r0, #0
   137c0:	bl	10d14 <dcgettext@plt>
   137c4:	mov	r1, r0
   137c8:	ldr	r3, [pc, #60]	; 1380c <close@plt+0x2918>
   137cc:	mov	r0, #1
   137d0:	ldr	r2, [pc, #56]	; 13810 <close@plt+0x291c>
   137d4:	bl	10e40 <__printf_chk@plt>
   137d8:	mov	r2, #5
   137dc:	ldr	r1, [pc, #48]	; 13814 <close@plt+0x2920>
   137e0:	mov	r0, #0
   137e4:	bl	10d14 <dcgettext@plt>
   137e8:	mov	r1, r0
   137ec:	ldr	r2, [pc, #36]	; 13818 <close@plt+0x2924>
   137f0:	mov	r0, #1
   137f4:	pop	{r4, lr}
   137f8:	b	10e40 <__printf_chk@plt>
   137fc:	andeq	r5, r2, ip, asr #2
   13800:	ldrdeq	r4, [r1], -sl
   13804:	andeq	r4, r1, lr, ror #19
   13808:	andeq	r4, r1, r4, lsl #20
   1380c:			; <UNDEFINED> instruction: 0x000143b2
   13810:	ldrdeq	r4, [r1], -sl
   13814:	andeq	r4, r1, r8, lsl sl
   13818:	andeq	r4, r1, pc, lsr sl
   1381c:	push	{r4, lr}
   13820:	bl	13b68 <close@plt+0x2c74>
   13824:	cmp	r0, #0
   13828:	popne	{r4, pc}
   1382c:	bl	13ad4 <close@plt+0x2be0>
   13830:	push	{r4, lr}
   13834:	bl	13b68 <close@plt+0x2c74>
   13838:	cmp	r0, #0
   1383c:	popne	{r4, pc}
   13840:	bl	13ad4 <close@plt+0x2be0>
   13844:	b	1381c <close@plt+0x2928>
   13848:	push	{r4, r5, r6, lr}
   1384c:	mov	r5, r0
   13850:	mov	r4, r1
   13854:	bl	13b94 <close@plt+0x2ca0>
   13858:	cmp	r0, #0
   1385c:	popne	{r4, r5, r6, pc}
   13860:	adds	r4, r4, #0
   13864:	movne	r4, #1
   13868:	cmp	r5, #0
   1386c:	moveq	r4, #1
   13870:	cmp	r4, #0
   13874:	popeq	{r4, r5, r6, pc}
   13878:	bl	13ad4 <close@plt+0x2be0>
   1387c:	push	{r4, lr}
   13880:	bl	13e60 <close@plt+0x2f6c>
   13884:	cmp	r0, #0
   13888:	popne	{r4, pc}
   1388c:	bl	13ad4 <close@plt+0x2be0>
   13890:	push	{r4, r5, r6, lr}
   13894:	mov	r6, r0
   13898:	mov	r5, r1
   1389c:	mov	r4, r2
   138a0:	bl	13f08 <close@plt+0x3014>
   138a4:	cmp	r0, #0
   138a8:	popne	{r4, r5, r6, pc}
   138ac:	cmp	r6, #0
   138b0:	beq	138c0 <close@plt+0x29cc>
   138b4:	cmp	r5, #0
   138b8:	cmpne	r4, #0
   138bc:	popeq	{r4, r5, r6, pc}
   138c0:	bl	13ad4 <close@plt+0x2be0>
   138c4:	b	13890 <close@plt+0x299c>
   138c8:	push	{r4, lr}
   138cc:	bl	13e70 <close@plt+0x2f7c>
   138d0:	cmp	r0, #0
   138d4:	popne	{r4, pc}
   138d8:	bl	13ad4 <close@plt+0x2be0>
   138dc:	mov	r2, r1
   138e0:	mov	r1, r0
   138e4:	mov	r0, #0
   138e8:	b	13890 <close@plt+0x299c>
   138ec:	mov	r2, r1
   138f0:	mov	r1, r0
   138f4:	mov	r0, #0
   138f8:	b	138c8 <close@plt+0x29d4>
   138fc:	cmp	r0, #0
   13900:	push	{r4, r5, r6, lr}
   13904:	mov	r5, r1
   13908:	ldr	r4, [r1]
   1390c:	bne	13938 <close@plt+0x2a44>
   13910:	cmp	r4, #0
   13914:	bne	13928 <close@plt+0x2a34>
   13918:	mov	r4, #64	; 0x40
   1391c:	udiv	r4, r4, r2
   13920:	cmp	r2, #64	; 0x40
   13924:	addhi	r4, r4, #1
   13928:	mov	r1, r4
   1392c:	bl	13890 <close@plt+0x299c>
   13930:	str	r4, [r5]
   13934:	pop	{r4, r5, r6, pc}
   13938:	lsr	r3, r4, #1
   1393c:	add	r3, r3, #1
   13940:	adds	r4, r4, r3
   13944:	bcc	13928 <close@plt+0x2a34>
   13948:	bl	13ad4 <close@plt+0x2be0>
   1394c:	mov	r2, #1
   13950:	b	138fc <close@plt+0x2a08>
   13954:	ldr	ip, [r1]
   13958:	push	{r4, r5, r6, r7, r8, lr}
   1395c:	mov	r5, r1
   13960:	mvn	r8, r3
   13964:	lsr	r8, r8, #31
   13968:	ldr	lr, [sp, #24]
   1396c:	asr	r1, ip, #1
   13970:	adds	r4, ip, r1
   13974:	mvnvs	r4, #-2147483648	; 0x80000000
   13978:	cmp	r3, r4
   1397c:	movge	r1, #0
   13980:	andlt	r1, r8, #1
   13984:	cmp	r1, #0
   13988:	movne	r4, r3
   1398c:	smull	r6, r7, r4, lr
   13990:	cmp	r7, r6, asr #31
   13994:	bne	139ac <close@plt+0x2ab8>
   13998:	cmp	r6, #63	; 0x3f
   1399c:	mov	r1, r6
   139a0:	bgt	139bc <close@plt+0x2ac8>
   139a4:	mov	r1, #64	; 0x40
   139a8:	b	139b0 <close@plt+0x2abc>
   139ac:	mvn	r1, #-2147483648	; 0x80000000
   139b0:	sdiv	r4, r1, lr
   139b4:	mls	r6, lr, r4, r1
   139b8:	sub	r1, r1, r6
   139bc:	cmp	r0, #0
   139c0:	sub	r6, r4, ip
   139c4:	streq	r0, [r5]
   139c8:	cmp	r6, r2
   139cc:	bge	13a00 <close@plt+0x2b0c>
   139d0:	adds	r4, ip, r2
   139d4:	bvs	139fc <close@plt+0x2b08>
   139d8:	cmp	r4, r3
   139dc:	movle	r3, #0
   139e0:	andgt	r3, r8, #1
   139e4:	cmp	r3, #0
   139e8:	bne	139fc <close@plt+0x2b08>
   139ec:	smull	r2, r3, r4, lr
   139f0:	cmp	r3, r2, asr #31
   139f4:	mov	r1, r2
   139f8:	beq	13a00 <close@plt+0x2b0c>
   139fc:	bl	13ad4 <close@plt+0x2be0>
   13a00:	bl	13848 <close@plt+0x2954>
   13a04:	str	r4, [r5]
   13a08:	pop	{r4, r5, r6, r7, r8, pc}
   13a0c:	push	{r4, lr}
   13a10:	bl	13b14 <close@plt+0x2c20>
   13a14:	cmp	r0, #0
   13a18:	popne	{r4, pc}
   13a1c:	bl	13ad4 <close@plt+0x2be0>
   13a20:	mov	r1, #1
   13a24:	b	13a0c <close@plt+0x2b18>
   13a28:	push	{r4, lr}
   13a2c:	bl	13b14 <close@plt+0x2c20>
   13a30:	cmp	r0, #0
   13a34:	popne	{r4, pc}
   13a38:	bl	13ad4 <close@plt+0x2be0>
   13a3c:	mov	r1, #1
   13a40:	b	13a28 <close@plt+0x2b34>
   13a44:	push	{r4, r5, r6, lr}
   13a48:	mov	r4, r1
   13a4c:	mov	r5, r0
   13a50:	mov	r0, r1
   13a54:	bl	1381c <close@plt+0x2928>
   13a58:	mov	r2, r4
   13a5c:	mov	r1, r5
   13a60:	pop	{r4, r5, r6, lr}
   13a64:	b	10ccc <memcpy@plt>
   13a68:	push	{r4, r5, r6, lr}
   13a6c:	mov	r4, r1
   13a70:	mov	r5, r0
   13a74:	mov	r0, r1
   13a78:	bl	13830 <close@plt+0x293c>
   13a7c:	mov	r2, r4
   13a80:	mov	r1, r5
   13a84:	pop	{r4, r5, r6, lr}
   13a88:	b	10ccc <memcpy@plt>
   13a8c:	push	{r4, r5, r6, lr}
   13a90:	mov	r5, r0
   13a94:	add	r0, r1, #1
   13a98:	mov	r4, r1
   13a9c:	bl	13830 <close@plt+0x293c>
   13aa0:	mov	r2, #0
   13aa4:	mov	r1, r5
   13aa8:	strb	r2, [r0, r4]
   13aac:	mov	r2, r4
   13ab0:	pop	{r4, r5, r6, lr}
   13ab4:	b	10ccc <memcpy@plt>
   13ab8:	push	{r4, lr}
   13abc:	mov	r4, r0
   13ac0:	bl	10e10 <strlen@plt>
   13ac4:	add	r1, r0, #1
   13ac8:	mov	r0, r4
   13acc:	pop	{r4, lr}
   13ad0:	b	13a44 <close@plt+0x2b50>
   13ad4:	ldr	r3, [pc, #44]	; 13b08 <close@plt+0x2c14>
   13ad8:	mov	r2, #5
   13adc:	mov	r0, #0
   13ae0:	push	{r4, lr}
   13ae4:	ldr	r1, [pc, #32]	; 13b0c <close@plt+0x2c18>
   13ae8:	ldr	r4, [r3]
   13aec:	bl	10d14 <dcgettext@plt>
   13af0:	mov	r3, r0
   13af4:	ldr	r2, [pc, #20]	; 13b10 <close@plt+0x2c1c>
   13af8:	mov	r1, #0
   13afc:	mov	r0, r4
   13b00:	bl	10d8c <error@plt>
   13b04:	bl	10ee8 <abort@plt>
   13b08:	strdeq	r5, [r2], -r0
   13b0c:	andeq	r4, r1, fp, lsl #21
   13b10:	andeq	r4, r1, ip, lsr r6
   13b14:	cmp	r1, #0
   13b18:	cmpne	r0, #0
   13b1c:	beq	13b54 <close@plt+0x2c60>
   13b20:	push	{r4, r5, r6, lr}
   13b24:	umull	r4, r5, r0, r1
   13b28:	adds	r3, r5, #0
   13b2c:	movne	r3, #1
   13b30:	cmp	r4, #0
   13b34:	blt	13b40 <close@plt+0x2c4c>
   13b38:	cmp	r3, #0
   13b3c:	beq	13b60 <close@plt+0x2c6c>
   13b40:	bl	10e1c <__errno_location@plt>
   13b44:	mov	r3, #12
   13b48:	str	r3, [r0]
   13b4c:	mov	r0, #0
   13b50:	pop	{r4, r5, r6, pc}
   13b54:	mov	r1, #1
   13b58:	mov	r0, r1
   13b5c:	b	10c84 <calloc@plt>
   13b60:	pop	{r4, r5, r6, lr}
   13b64:	b	13b5c <close@plt+0x2c68>
   13b68:	cmp	r0, #0
   13b6c:	beq	13b8c <close@plt+0x2c98>
   13b70:	bge	13b90 <close@plt+0x2c9c>
   13b74:	push	{r4, lr}
   13b78:	bl	10e1c <__errno_location@plt>
   13b7c:	mov	r3, #12
   13b80:	str	r3, [r0]
   13b84:	mov	r0, #0
   13b88:	pop	{r4, pc}
   13b8c:	mov	r0, #1
   13b90:	b	10db0 <malloc@plt>
   13b94:	cmp	r0, #0
   13b98:	bne	13ba4 <close@plt+0x2cb0>
   13b9c:	mov	r0, r1
   13ba0:	b	13b68 <close@plt+0x2c74>
   13ba4:	cmp	r1, #0
   13ba8:	push	{r4, lr}
   13bac:	bne	13bbc <close@plt+0x2cc8>
   13bb0:	bl	11b38 <close@plt+0xc44>
   13bb4:	mov	r0, #0
   13bb8:	pop	{r4, pc}
   13bbc:	blt	13bc8 <close@plt+0x2cd4>
   13bc0:	pop	{r4, lr}
   13bc4:	b	10d2c <realloc@plt>
   13bc8:	bl	10e1c <__errno_location@plt>
   13bcc:	mov	r3, #12
   13bd0:	str	r3, [r0]
   13bd4:	b	13bb4 <close@plt+0x2cc0>
   13bd8:	mov	r3, r0
   13bdc:	mov	r2, r3
   13be0:	mov	r0, r3
   13be4:	ldrb	r1, [r2], #1
   13be8:	cmp	r1, #47	; 0x2f
   13bec:	beq	13bf8 <close@plt+0x2d04>
   13bf0:	mov	r2, #0
   13bf4:	b	13c14 <close@plt+0x2d20>
   13bf8:	mov	r3, r2
   13bfc:	b	13bdc <close@plt+0x2ce8>
   13c00:	cmp	r1, #47	; 0x2f
   13c04:	moveq	r2, #1
   13c08:	beq	13c14 <close@plt+0x2d20>
   13c0c:	cmp	r2, #0
   13c10:	bne	13c28 <close@plt+0x2d34>
   13c14:	mov	ip, r3
   13c18:	ldrb	r1, [r3], #1
   13c1c:	cmp	r1, #0
   13c20:	bne	13c00 <close@plt+0x2d0c>
   13c24:	bx	lr
   13c28:	mov	r0, ip
   13c2c:	b	13bf0 <close@plt+0x2cfc>
   13c30:	push	{r4, lr}
   13c34:	mov	r4, r0
   13c38:	bl	10e10 <strlen@plt>
   13c3c:	cmp	r0, #1
   13c40:	popls	{r4, pc}
   13c44:	sub	r3, r0, #1
   13c48:	ldrb	r2, [r4, r3]
   13c4c:	cmp	r2, #47	; 0x2f
   13c50:	popne	{r4, pc}
   13c54:	mov	r0, r3
   13c58:	b	13c3c <close@plt+0x2d48>
   13c5c:	push	{r4, r5, r6, lr}
   13c60:	mov	r4, r0
   13c64:	bl	10d68 <__fpending@plt>
   13c68:	mov	r5, r0
   13c6c:	mov	r0, r4
   13c70:	bl	10d74 <ferror_unlocked@plt>
   13c74:	mov	r6, r0
   13c78:	mov	r0, r4
   13c7c:	bl	13ccc <close@plt+0x2dd8>
   13c80:	cmp	r6, #0
   13c84:	mov	r4, r0
   13c88:	bne	13cb4 <close@plt+0x2dc0>
   13c8c:	cmp	r0, #0
   13c90:	beq	13cac <close@plt+0x2db8>
   13c94:	cmp	r5, #0
   13c98:	bne	13cc4 <close@plt+0x2dd0>
   13c9c:	bl	10e1c <__errno_location@plt>
   13ca0:	ldr	r4, [r0]
   13ca4:	subs	r4, r4, #9
   13ca8:	mvnne	r4, #0
   13cac:	mov	r0, r4
   13cb0:	pop	{r4, r5, r6, pc}
   13cb4:	cmp	r0, #0
   13cb8:	bne	13cc4 <close@plt+0x2dd0>
   13cbc:	bl	10e1c <__errno_location@plt>
   13cc0:	str	r4, [r0]
   13cc4:	mvn	r4, #0
   13cc8:	b	13cac <close@plt+0x2db8>
   13ccc:	push	{r0, r1, r2, r4, r5, lr}
   13cd0:	mov	r4, r0
   13cd4:	bl	10e4c <fileno@plt>
   13cd8:	cmp	r0, #0
   13cdc:	mov	r0, r4
   13ce0:	bge	13cf0 <close@plt+0x2dfc>
   13ce4:	add	sp, sp, #12
   13ce8:	pop	{r4, r5, lr}
   13cec:	b	10e64 <fclose@plt>
   13cf0:	bl	10dc8 <__freading@plt>
   13cf4:	cmp	r0, #0
   13cf8:	bne	13d34 <close@plt+0x2e40>
   13cfc:	mov	r0, r4
   13d00:	bl	13d74 <close@plt+0x2e80>
   13d04:	cmp	r0, #0
   13d08:	bne	13d68 <close@plt+0x2e74>
   13d0c:	mov	r5, #0
   13d10:	mov	r0, r4
   13d14:	bl	10e64 <fclose@plt>
   13d18:	cmp	r5, #0
   13d1c:	beq	13d2c <close@plt+0x2e38>
   13d20:	bl	10e1c <__errno_location@plt>
   13d24:	str	r5, [r0]
   13d28:	mvn	r0, #0
   13d2c:	add	sp, sp, #12
   13d30:	pop	{r4, r5, pc}
   13d34:	mov	r0, r4
   13d38:	bl	10e4c <fileno@plt>
   13d3c:	mov	r3, #1
   13d40:	mov	r2, #0
   13d44:	str	r3, [sp]
   13d48:	mov	r3, #0
   13d4c:	bl	10d50 <lseek64@plt>
   13d50:	mvn	r3, #0
   13d54:	mvn	r2, #0
   13d58:	cmp	r1, r3
   13d5c:	cmpeq	r0, r2
   13d60:	bne	13cfc <close@plt+0x2e08>
   13d64:	b	13d0c <close@plt+0x2e18>
   13d68:	bl	10e1c <__errno_location@plt>
   13d6c:	ldr	r5, [r0]
   13d70:	b	13d10 <close@plt+0x2e1c>
   13d74:	push	{r0, r1, r4, lr}
   13d78:	subs	r4, r0, #0
   13d7c:	bne	13d90 <close@plt+0x2e9c>
   13d80:	mov	r0, r4
   13d84:	add	sp, sp, #8
   13d88:	pop	{r4, lr}
   13d8c:	b	10ca8 <fflush@plt>
   13d90:	bl	10dc8 <__freading@plt>
   13d94:	cmp	r0, #0
   13d98:	beq	13d80 <close@plt+0x2e8c>
   13d9c:	ldr	r3, [r4]
   13da0:	tst	r3, #256	; 0x100
   13da4:	beq	13d80 <close@plt+0x2e8c>
   13da8:	mov	r3, #1
   13dac:	mov	r2, #0
   13db0:	mov	r0, r4
   13db4:	str	r3, [sp]
   13db8:	mov	r3, #0
   13dbc:	bl	13dc4 <close@plt+0x2ed0>
   13dc0:	b	13d80 <close@plt+0x2e8c>
   13dc4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13dc8:	mov	r4, r0
   13dcc:	ldmib	r0, {ip, lr}
   13dd0:	ldr	r8, [sp, #32]
   13dd4:	cmp	lr, ip
   13dd8:	bne	13e48 <close@plt+0x2f54>
   13ddc:	ldr	ip, [r0, #16]
   13de0:	ldr	lr, [r0, #20]
   13de4:	cmp	lr, ip
   13de8:	bne	13e48 <close@plt+0x2f54>
   13dec:	ldr	r5, [r0, #36]	; 0x24
   13df0:	cmp	r5, #0
   13df4:	bne	13e48 <close@plt+0x2f54>
   13df8:	mov	r6, r2
   13dfc:	mov	r7, r3
   13e00:	bl	10e4c <fileno@plt>
   13e04:	mov	r2, r6
   13e08:	mov	r3, r7
   13e0c:	str	r8, [sp]
   13e10:	bl	10d50 <lseek64@plt>
   13e14:	mvn	r3, #0
   13e18:	mvn	r2, #0
   13e1c:	cmp	r1, r3
   13e20:	cmpeq	r0, r2
   13e24:	mvneq	r0, #0
   13e28:	beq	13e40 <close@plt+0x2f4c>
   13e2c:	ldr	r3, [r4]
   13e30:	strd	r0, [r4, #80]	; 0x50
   13e34:	mov	r0, r5
   13e38:	bic	r3, r3, #16
   13e3c:	str	r3, [r4]
   13e40:	add	sp, sp, #8
   13e44:	pop	{r4, r5, r6, r7, r8, pc}
   13e48:	mov	r0, r4
   13e4c:	str	r8, [sp, #32]
   13e50:	add	sp, sp, #8
   13e54:	pop	{r4, r5, r6, r7, r8, lr}
   13e58:	b	10e70 <fseeko64@plt>
   13e5c:	b	13b68 <close@plt+0x2c74>
   13e60:	cmp	r1, #0
   13e64:	orreq	r1, r1, #1
   13e68:	b	13b94 <close@plt+0x2ca0>
   13e6c:	b	13b14 <close@plt+0x2c20>
   13e70:	cmp	r2, #0
   13e74:	cmpne	r1, #0
   13e78:	moveq	r2, #1
   13e7c:	moveq	r1, r2
   13e80:	b	13f08 <close@plt+0x3014>
   13e84:	push	{r4, lr}
   13e88:	mov	r0, #14
   13e8c:	bl	10ea0 <nl_langinfo@plt>
   13e90:	cmp	r0, #0
   13e94:	beq	13eac <close@plt+0x2fb8>
   13e98:	ldrb	r2, [r0]
   13e9c:	ldr	r3, [pc, #16]	; 13eb4 <close@plt+0x2fc0>
   13ea0:	cmp	r2, #0
   13ea4:	moveq	r0, r3
   13ea8:	pop	{r4, pc}
   13eac:	ldr	r0, [pc]	; 13eb4 <close@plt+0x2fc0>
   13eb0:	pop	{r4, pc}
   13eb4:	muleq	r1, ip, sl
   13eb8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13ebc:	subs	r5, r0, #0
   13ec0:	mov	r7, r2
   13ec4:	addeq	r5, sp, #4
   13ec8:	mov	r6, r1
   13ecc:	mov	r0, r5
   13ed0:	bl	10d80 <mbrtowc@plt>
   13ed4:	cmp	r7, #0
   13ed8:	cmnne	r0, #3
   13edc:	mov	r4, r0
   13ee0:	bls	13efc <close@plt+0x3008>
   13ee4:	mov	r0, #0
   13ee8:	bl	13f34 <close@plt+0x3040>
   13eec:	cmp	r0, #0
   13ef0:	ldrbeq	r3, [r6]
   13ef4:	moveq	r4, #1
   13ef8:	streq	r3, [r5]
   13efc:	mov	r0, r4
   13f00:	add	sp, sp, #12
   13f04:	pop	{r4, r5, r6, r7, pc}
   13f08:	umull	r2, r3, r1, r2
   13f0c:	cmp	r3, #0
   13f10:	bne	13f1c <close@plt+0x3028>
   13f14:	mov	r1, r2
   13f18:	b	13b94 <close@plt+0x2ca0>
   13f1c:	push	{r4, lr}
   13f20:	bl	10e1c <__errno_location@plt>
   13f24:	mov	r3, #12
   13f28:	str	r3, [r0]
   13f2c:	mov	r0, #0
   13f30:	pop	{r4, pc}
   13f34:	push	{lr}		; (str lr, [sp, #-4]!)
   13f38:	sub	sp, sp, #268	; 0x10c
   13f3c:	movw	r2, #257	; 0x101
   13f40:	add	r1, sp, #4
   13f44:	bl	13f90 <close@plt+0x309c>
   13f48:	cmp	r0, #0
   13f4c:	movne	r0, #0
   13f50:	bne	13f80 <close@plt+0x308c>
   13f54:	ldr	r1, [pc, #44]	; 13f88 <close@plt+0x3094>
   13f58:	add	r0, sp, #4
   13f5c:	bl	10c9c <strcmp@plt>
   13f60:	cmp	r0, #0
   13f64:	beq	13f7c <close@plt+0x3088>
   13f68:	ldr	r1, [pc, #28]	; 13f8c <close@plt+0x3098>
   13f6c:	add	r0, sp, #4
   13f70:	bl	10c9c <strcmp@plt>
   13f74:	adds	r0, r0, #0
   13f78:	movne	r0, #1
   13f7c:	and	r0, r0, #1
   13f80:	add	sp, sp, #268	; 0x10c
   13f84:	pop	{pc}		; (ldr pc, [sp], #4)
   13f88:	andeq	r4, r1, r2, lsr #21
   13f8c:	andeq	r4, r1, r4, lsr #21
   13f90:	push	{r4, r5, r6, lr}
   13f94:	mov	r5, r1
   13f98:	mov	r1, #0
   13f9c:	mov	r4, r2
   13fa0:	bl	10e88 <setlocale@plt>
   13fa4:	subs	r6, r0, #0
   13fa8:	bne	13fbc <close@plt+0x30c8>
   13fac:	cmp	r4, #0
   13fb0:	mov	r0, #22
   13fb4:	strbne	r6, [r5]
   13fb8:	pop	{r4, r5, r6, pc}
   13fbc:	bl	10e10 <strlen@plt>
   13fc0:	cmp	r4, r0
   13fc4:	bls	13fe0 <close@plt+0x30ec>
   13fc8:	add	r2, r0, #1
   13fcc:	mov	r1, r6
   13fd0:	mov	r0, r5
   13fd4:	bl	10ccc <memcpy@plt>
   13fd8:	mov	r0, #0
   13fdc:	pop	{r4, r5, r6, pc}
   13fe0:	cmp	r4, #0
   13fe4:	beq	14004 <close@plt+0x3110>
   13fe8:	sub	r4, r4, #1
   13fec:	mov	r1, r6
   13ff0:	mov	r2, r4
   13ff4:	mov	r0, r5
   13ff8:	bl	10ccc <memcpy@plt>
   13ffc:	mov	r3, #0
   14000:	strb	r3, [r5, r4]
   14004:	mov	r0, #34	; 0x22
   14008:	pop	{r4, r5, r6, pc}
   1400c:	mov	r1, #0
   14010:	b	10e88 <setlocale@plt>
   14014:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14018:	mov	r7, r0
   1401c:	ldr	r6, [pc, #72]	; 1406c <close@plt+0x3178>
   14020:	ldr	r5, [pc, #72]	; 14070 <close@plt+0x317c>
   14024:	add	r6, pc, r6
   14028:	add	r5, pc, r5
   1402c:	sub	r6, r6, r5
   14030:	mov	r8, r1
   14034:	mov	r9, r2
   14038:	bl	10c64 <calloc@plt-0x20>
   1403c:	asrs	r6, r6, #2
   14040:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14044:	mov	r4, #0
   14048:	add	r4, r4, #1
   1404c:	ldr	r3, [r5], #4
   14050:	mov	r2, r9
   14054:	mov	r1, r8
   14058:	mov	r0, r7
   1405c:	blx	r3
   14060:	cmp	r6, r4
   14064:	bne	14048 <close@plt+0x3154>
   14068:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1406c:	andeq	r0, r1, r8, ror #29
   14070:	andeq	r0, r1, r0, ror #29
   14074:	bx	lr
   14078:	ldr	r3, [pc, #12]	; 1408c <close@plt+0x3198>
   1407c:	mov	r1, #0
   14080:	add	r3, pc, r3
   14084:	ldr	r2, [r3]
   14088:	b	10e28 <__cxa_atexit@plt>
   1408c:	andeq	r1, r1, r0, rrx

Disassembly of section .fini:

00014090 <.fini>:
   14090:	push	{r3, lr}
   14094:	pop	{r3, pc}
