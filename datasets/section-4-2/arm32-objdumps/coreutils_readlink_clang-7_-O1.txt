
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010da8 <.init>:
   10da8:	push	{r3, lr}
   10dac:	bl	11074 <__mempcpy_chk@plt+0x48>
   10db0:	pop	{r3, pc}

Disassembly of section .plt:

00010db4 <calloc@plt-0x14>:
   10db4:	push	{lr}		; (str lr, [sp, #-4]!)
   10db8:	ldr	lr, [pc, #4]	; 10dc4 <calloc@plt-0x4>
   10dbc:	add	lr, pc, lr
   10dc0:	ldr	pc, [lr, #8]!
   10dc4:	andeq	r7, r1, ip, lsr r2

00010dc8 <calloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #572]!	; 0x23c

00010dd4 <fputs_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #564]!	; 0x234

00010de0 <raise@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #556]!	; 0x22c

00010dec <strcmp@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #548]!	; 0x224

00010df8 <fflush@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #540]!	; 0x21c

00010e04 <memmove@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #532]!	; 0x214

00010e10 <free@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #524]!	; 0x20c

00010e1c <faccessat@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #516]!	; 0x204

00010e28 <_exit@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #508]!	; 0x1fc

00010e34 <memcpy@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e40 <mbsinit@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #492]!	; 0x1ec

00010e4c <memcmp@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #484]!	; 0x1e4

00010e58 <dcgettext@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #476]!	; 0x1dc

00010e64 <realloc@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e70 <textdomain@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #460]!	; 0x1cc

00010e7c <rawmemchr@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #452]!	; 0x1c4

00010e88 <iswprint@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #444]!	; 0x1bc

00010e94 <readlink@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea0 <fwrite@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #428]!	; 0x1ac

00010eac <lseek64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #420]!	; 0x1a4

00010eb8 <__ctype_get_mb_cur_max@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #412]!	; 0x19c

00010ec4 <__fpending@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #404]!	; 0x194

00010ed0 <ferror_unlocked@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #396]!	; 0x18c

00010edc <mbrtowc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #388]!	; 0x184

00010ee8 <error@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #380]!	; 0x17c

00010ef4 <malloc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #372]!	; 0x174

00010f00 <__libc_start_main@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #364]!	; 0x16c

00010f0c <__freading@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #356]!	; 0x164

00010f18 <__gmon_start__@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #348]!	; 0x15c

00010f24 <getopt_long@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #340]!	; 0x154

00010f30 <__ctype_b_loc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #332]!	; 0x14c

00010f3c <getcwd@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #324]!	; 0x144

00010f48 <exit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #316]!	; 0x13c

00010f54 <strlen@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #308]!	; 0x134

00010f60 <__errno_location@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #300]!	; 0x12c

00010f6c <__cxa_atexit@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #292]!	; 0x124

00010f78 <memset@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #284]!	; 0x11c

00010f84 <__printf_chk@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #276]!	; 0x114

00010f90 <fileno@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #268]!	; 0x10c

00010f9c <__fprintf_chk@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #260]!	; 0x104

00010fa8 <fclose@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #252]!	; 0xfc

00010fb4 <fseeko64@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #244]!	; 0xf4

00010fc0 <setlocale@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #236]!	; 0xec

00010fcc <strrchr@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #228]!	; 0xe4

00010fd8 <nl_langinfo@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #220]!	; 0xdc

00010fe4 <bindtextdomain@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #212]!	; 0xd4

00010ff0 <__xstat64@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #94208	; 0x17000
   10ff8:	ldr	pc, [ip, #204]!	; 0xcc

00010ffc <strncmp@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #94208	; 0x17000
   11004:	ldr	pc, [ip, #196]!	; 0xc4

00011008 <abort@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #94208	; 0x17000
   11010:	ldr	pc, [ip, #188]!	; 0xbc

00011014 <putchar_unlocked@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #94208	; 0x17000
   1101c:	ldr	pc, [ip, #180]!	; 0xb4

00011020 <strspn@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #94208	; 0x17000
   11028:	ldr	pc, [ip, #172]!	; 0xac

0001102c <__mempcpy_chk@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #94208	; 0x17000
   11034:	ldr	pc, [ip, #164]!	; 0xa4

Disassembly of section .text:

00011038 <.text>:
   11038:	mov	fp, #0
   1103c:	mov	lr, #0
   11040:	pop	{r1}		; (ldr r1, [sp], #4)
   11044:	mov	r2, sp
   11048:	push	{r2}		; (str r2, [sp, #-4]!)
   1104c:	push	{r0}		; (str r0, [sp, #-4]!)
   11050:	ldr	ip, [pc, #16]	; 11068 <__mempcpy_chk@plt+0x3c>
   11054:	push	{ip}		; (str ip, [sp, #-4]!)
   11058:	ldr	r0, [pc, #12]	; 1106c <__mempcpy_chk@plt+0x40>
   1105c:	ldr	r3, [pc, #12]	; 11070 <__mempcpy_chk@plt+0x44>
   11060:	bl	10f00 <__libc_start_main@plt>
   11064:	bl	11008 <abort@plt>
   11068:	andeq	r6, r1, r4, lsl #8
   1106c:	ldrdeq	r1, [r1], -r0
   11070:	andeq	r6, r1, r4, lsr #7
   11074:	ldr	r3, [pc, #20]	; 11090 <__mempcpy_chk@plt+0x64>
   11078:	ldr	r2, [pc, #20]	; 11094 <__mempcpy_chk@plt+0x68>
   1107c:	add	r3, pc, r3
   11080:	ldr	r2, [r3, r2]
   11084:	cmp	r2, #0
   11088:	bxeq	lr
   1108c:	b	10f18 <__gmon_start__@plt>
   11090:	andeq	r6, r1, ip, ror pc
   11094:	ldrdeq	r0, [r0], -ip
   11098:	ldr	r0, [pc, #24]	; 110b8 <__mempcpy_chk@plt+0x8c>
   1109c:	ldr	r3, [pc, #24]	; 110bc <__mempcpy_chk@plt+0x90>
   110a0:	cmp	r3, r0
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__mempcpy_chk@plt+0x94>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	r8, r2, r0, lsr r1
   110bc:	andeq	r8, r2, r0, lsr r1
   110c0:	andeq	r0, r0, r0
   110c4:	ldr	r0, [pc, #36]	; 110f0 <__mempcpy_chk@plt+0xc4>
   110c8:	ldr	r1, [pc, #36]	; 110f4 <__mempcpy_chk@plt+0xc8>
   110cc:	sub	r1, r1, r0
   110d0:	asr	r1, r1, #2
   110d4:	add	r1, r1, r1, lsr #31
   110d8:	asrs	r1, r1, #1
   110dc:	bxeq	lr
   110e0:	ldr	r3, [pc, #16]	; 110f8 <__mempcpy_chk@plt+0xcc>
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andeq	r8, r2, r0, lsr r1
   110f4:	andeq	r8, r2, r0, lsr r1
   110f8:	andeq	r0, r0, r0
   110fc:	push	{r4, lr}
   11100:	ldr	r4, [pc, #24]	; 11120 <__mempcpy_chk@plt+0xf4>
   11104:	ldrb	r3, [r4]
   11108:	cmp	r3, #0
   1110c:	popne	{r4, pc}
   11110:	bl	11098 <__mempcpy_chk@plt+0x6c>
   11114:	mov	r3, #1
   11118:	strb	r3, [r4]
   1111c:	pop	{r4, pc}
   11120:	andeq	r8, r2, r8, asr #2
   11124:	b	110c4 <__mempcpy_chk@plt+0x98>
   11128:	push	{fp, lr}
   1112c:	mov	fp, sp
   11130:	mov	r4, r0
   11134:	cmp	r0, #0
   11138:	bne	11208 <__mempcpy_chk@plt+0x1dc>
   1113c:	movw	r1, #25699	; 0x6463
   11140:	movt	r1, #1
   11144:	mov	r0, #0
   11148:	mov	r2, #5
   1114c:	bl	10e58 <dcgettext@plt>
   11150:	mov	r1, r0
   11154:	movw	r0, #33108	; 0x8154
   11158:	movt	r0, #2
   1115c:	ldr	r2, [r0]
   11160:	mov	r0, #1
   11164:	bl	10f84 <__printf_chk@plt>
   11168:	movw	r1, #25730	; 0x6482
   1116c:	movt	r1, #1
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	bl	10e58 <dcgettext@plt>
   1117c:	movw	r5, #33092	; 0x8144
   11180:	movt	r5, #2
   11184:	ldr	r1, [r5]
   11188:	bl	10dd4 <fputs_unlocked@plt>
   1118c:	movw	r1, #25786	; 0x64ba
   11190:	movt	r1, #1
   11194:	mov	r0, #0
   11198:	mov	r2, #5
   1119c:	bl	10e58 <dcgettext@plt>
   111a0:	ldr	r1, [r5]
   111a4:	bl	10dd4 <fputs_unlocked@plt>
   111a8:	movw	r1, #26223	; 0x666f
   111ac:	movt	r1, #1
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	bl	10e58 <dcgettext@plt>
   111bc:	ldr	r1, [r5]
   111c0:	bl	10dd4 <fputs_unlocked@plt>
   111c4:	movw	r1, #26744	; 0x6878
   111c8:	movt	r1, #1
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	bl	10e58 <dcgettext@plt>
   111d8:	ldr	r1, [r5]
   111dc:	bl	10dd4 <fputs_unlocked@plt>
   111e0:	movw	r1, #26789	; 0x68a5
   111e4:	movt	r1, #1
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	bl	10e58 <dcgettext@plt>
   111f4:	ldr	r1, [r5]
   111f8:	bl	10dd4 <fputs_unlocked@plt>
   111fc:	bl	1124c <__mempcpy_chk@plt+0x220>
   11200:	mov	r0, r4
   11204:	bl	10f48 <exit@plt>
   11208:	movw	r0, #33088	; 0x8140
   1120c:	movt	r0, #2
   11210:	ldr	r5, [r0]
   11214:	movw	r1, #25660	; 0x643c
   11218:	movt	r1, #1
   1121c:	mov	r0, #0
   11220:	mov	r2, #5
   11224:	bl	10e58 <dcgettext@plt>
   11228:	mov	r2, r0
   1122c:	movw	r0, #33108	; 0x8154
   11230:	movt	r0, #2
   11234:	ldr	r3, [r0]
   11238:	mov	r0, r5
   1123c:	mov	r1, #1
   11240:	bl	10f9c <__fprintf_chk@plt>
   11244:	mov	r0, r4
   11248:	bl	10f48 <exit@plt>
   1124c:	push	{r4, r5, fp, lr}
   11250:	add	fp, sp, #8
   11254:	sub	sp, sp, #56	; 0x38
   11258:	movw	r0, #27576	; 0x6bb8
   1125c:	movt	r0, #1
   11260:	add	r1, r0, #32
   11264:	mov	r5, sp
   11268:	mov	r2, #48	; 0x30
   1126c:	vld1.64	{d16-d17}, [r1]
   11270:	add	r1, r5, #32
   11274:	add	r3, r0, #16
   11278:	vld1.64	{d18-d19}, [r0], r2
   1127c:	vld1.64	{d20-d21}, [r3]
   11280:	vldr	d22, [r0]
   11284:	vst1.64	{d16-d17}, [r1]
   11288:	add	r0, r5, #16
   1128c:	vst1.64	{d20-d21}, [r0]
   11290:	mov	r0, r5
   11294:	vst1.64	{d18-d19}, [r0], r2
   11298:	vstr	d22, [r0]
   1129c:	ldr	r1, [sp]
   112a0:	cmp	r1, #0
   112a4:	beq	112cc <__mempcpy_chk@plt+0x2a0>
   112a8:	mov	r5, sp
   112ac:	movw	r4, #26843	; 0x68db
   112b0:	movt	r4, #1
   112b4:	mov	r0, r4
   112b8:	bl	10dec <strcmp@plt>
   112bc:	cmp	r0, #0
   112c0:	ldrne	r1, [r5, #8]!
   112c4:	cmpne	r1, #0
   112c8:	bne	112b4 <__mempcpy_chk@plt+0x288>
   112cc:	ldr	r4, [r5, #4]
   112d0:	movw	r1, #27072	; 0x69c0
   112d4:	movt	r1, #1
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	bl	10e58 <dcgettext@plt>
   112e4:	mov	r1, r0
   112e8:	movw	r2, #26885	; 0x6905
   112ec:	movt	r2, #1
   112f0:	movw	r3, #27095	; 0x69d7
   112f4:	movt	r3, #1
   112f8:	mov	r0, #1
   112fc:	bl	10f84 <__printf_chk@plt>
   11300:	movw	r5, #26843	; 0x68db
   11304:	movt	r5, #1
   11308:	cmp	r4, #0
   1130c:	moveq	r4, r5
   11310:	mov	r0, #5
   11314:	mov	r1, #0
   11318:	bl	10fc0 <setlocale@plt>
   1131c:	cmp	r0, #0
   11320:	beq	11360 <__mempcpy_chk@plt+0x334>
   11324:	movw	r1, #27135	; 0x69ff
   11328:	movt	r1, #1
   1132c:	mov	r2, #3
   11330:	bl	10ffc <strncmp@plt>
   11334:	cmp	r0, #0
   11338:	beq	11360 <__mempcpy_chk@plt+0x334>
   1133c:	movw	r1, #27139	; 0x6a03
   11340:	movt	r1, #1
   11344:	mov	r0, #0
   11348:	mov	r2, #5
   1134c:	bl	10e58 <dcgettext@plt>
   11350:	movw	r1, #33092	; 0x8144
   11354:	movt	r1, #2
   11358:	ldr	r1, [r1]
   1135c:	bl	10dd4 <fputs_unlocked@plt>
   11360:	movw	r1, #27210	; 0x6a4a
   11364:	movt	r1, #1
   11368:	mov	r0, #0
   1136c:	mov	r2, #5
   11370:	bl	10e58 <dcgettext@plt>
   11374:	mov	r1, r0
   11378:	movw	r2, #27095	; 0x69d7
   1137c:	movt	r2, #1
   11380:	mov	r0, #1
   11384:	mov	r3, r5
   11388:	bl	10f84 <__printf_chk@plt>
   1138c:	movw	r1, #27237	; 0x6a65
   11390:	movt	r1, #1
   11394:	mov	r0, #0
   11398:	mov	r2, #5
   1139c:	bl	10e58 <dcgettext@plt>
   113a0:	mov	r1, r0
   113a4:	movw	r0, #27005	; 0x697d
   113a8:	movt	r0, #1
   113ac:	movw	r3, #25785	; 0x64b9
   113b0:	movt	r3, #1
   113b4:	cmp	r4, r5
   113b8:	moveq	r3, r0
   113bc:	mov	r0, #1
   113c0:	mov	r2, r4
   113c4:	bl	10f84 <__printf_chk@plt>
   113c8:	sub	sp, fp, #8
   113cc:	pop	{r4, r5, fp, pc}
   113d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113d4:	add	fp, sp, #28
   113d8:	sub	sp, sp, #20
   113dc:	mov	r8, r1
   113e0:	mov	r5, r0
   113e4:	ldr	r0, [r1]
   113e8:	bl	131a8 <__mempcpy_chk@plt+0x217c>
   113ec:	movw	r1, #25785	; 0x64b9
   113f0:	movt	r1, #1
   113f4:	mov	r0, #6
   113f8:	bl	10fc0 <setlocale@plt>
   113fc:	movw	r6, #26889	; 0x6909
   11400:	movt	r6, #1
   11404:	movw	r1, #26852	; 0x68e4
   11408:	movt	r1, #1
   1140c:	mov	r0, r6
   11410:	bl	10fe4 <bindtextdomain@plt>
   11414:	mov	r0, r6
   11418:	bl	10e70 <textdomain@plt>
   1141c:	movw	r0, #8248	; 0x2038
   11420:	movt	r0, #1
   11424:	bl	16408 <__mempcpy_chk@plt+0x53dc>
   11428:	mvn	r6, #0
   1142c:	mov	r4, #0
   11430:	movw	sl, #26876	; 0x68fc
   11434:	movt	sl, #1
   11438:	movw	r7, #27400	; 0x6b08
   1143c:	movt	r7, #1
   11440:	mov	r9, #0
   11444:	b	11458 <__mempcpy_chk@plt+0x42c>
   11448:	mov	r1, #1
   1144c:	strb	r1, [r0]
   11450:	b	11458 <__mempcpy_chk@plt+0x42c>
   11454:	mov	r9, #1
   11458:	str	r4, [sp]
   1145c:	mov	r0, r5
   11460:	mov	r1, r8
   11464:	mov	r2, sl
   11468:	mov	r3, r7
   1146c:	bl	10f24 <getopt_long@plt>
   11470:	cmp	r0, #100	; 0x64
   11474:	ble	11524 <__mempcpy_chk@plt+0x4f8>
   11478:	sub	r0, r0, #101	; 0x65
   1147c:	cmp	r0, #21
   11480:	bhi	116f0 <__mempcpy_chk@plt+0x6c4>
   11484:	add	r1, pc, #0
   11488:	ldr	pc, [r1, r0, lsl #2]
   1148c:	andeq	r1, r1, r8, lsl #10
   11490:	andeq	r1, r1, r0, lsl r5
   11494:	strdeq	r1, [r1], -r0
   11498:	strdeq	r1, [r1], -r0
   1149c:	strdeq	r1, [r1], -r0
   114a0:	strdeq	r1, [r1], -r0
   114a4:	strdeq	r1, [r1], -r0
   114a8:	strdeq	r1, [r1], -r0
   114ac:	andeq	r1, r1, r0, lsl #10
   114b0:	strdeq	r1, [r1], -r4
   114b4:	strdeq	r1, [r1], -r0
   114b8:	strdeq	r1, [r1], -r0
   114bc:	andeq	r1, r1, r4, ror #9
   114c0:	strdeq	r1, [r1], -r0
   114c4:	andeq	r1, r1, r4, ror #9
   114c8:	strdeq	r1, [r1], -r0
   114cc:	strdeq	r1, [r1], -r0
   114d0:	andeq	r1, r1, r8, lsl r5
   114d4:	strdeq	r1, [r1], -r0
   114d8:	strdeq	r1, [r1], -r0
   114dc:	strdeq	r1, [r1], -r0
   114e0:	andeq	r1, r1, r4, asr r4
   114e4:	movw	r0, #33098	; 0x814a
   114e8:	movt	r0, #2
   114ec:	strb	r4, [r0]
   114f0:	b	11458 <__mempcpy_chk@plt+0x42c>
   114f4:	movw	r0, #33097	; 0x8149
   114f8:	movt	r0, #2
   114fc:	b	11448 <__mempcpy_chk@plt+0x41c>
   11500:	mov	r6, #2
   11504:	b	11458 <__mempcpy_chk@plt+0x42c>
   11508:	mov	r6, #0
   1150c:	b	11458 <__mempcpy_chk@plt+0x42c>
   11510:	mov	r6, #1
   11514:	b	11458 <__mempcpy_chk@plt+0x42c>
   11518:	movw	r0, #33098	; 0x814a
   1151c:	movt	r0, #2
   11520:	b	11448 <__mempcpy_chk@plt+0x41c>
   11524:	cmn	r0, #1
   11528:	bne	11690 <__mempcpy_chk@plt+0x664>
   1152c:	movw	sl, #33080	; 0x8138
   11530:	movt	sl, #2
   11534:	ldr	r0, [sl]
   11538:	cmp	r0, r5
   1153c:	movw	r4, #33097	; 0x8149
   11540:	movt	r4, #2
   11544:	bge	116f8 <__mempcpy_chk@plt+0x6cc>
   11548:	sub	r0, r5, r0
   1154c:	cmp	r0, #2
   11550:	blt	1158c <__mempcpy_chk@plt+0x560>
   11554:	ldrb	r0, [r4]
   11558:	cmp	r0, #1
   1155c:	bne	11584 <__mempcpy_chk@plt+0x558>
   11560:	movw	r1, #26931	; 0x6933
   11564:	movt	r1, #1
   11568:	mov	r0, #0
   1156c:	mov	r2, #5
   11570:	bl	10e58 <dcgettext@plt>
   11574:	mov	r2, r0
   11578:	mov	r0, #0
   1157c:	mov	r1, #0
   11580:	bl	10ee8 <error@plt>
   11584:	mov	r0, #0
   11588:	strb	r0, [r4]
   1158c:	ldr	r0, [sl]
   11590:	mov	r1, #0
   11594:	str	r1, [sp, #16]
   11598:	cmp	r0, r5
   1159c:	bge	11684 <__mempcpy_chk@plt+0x658>
   115a0:	mov	r1, #10
   115a4:	tst	r9, #1
   115a8:	movwne	r1, #0
   115ac:	str	r1, [sp, #12]
   115b0:	mov	r1, #0
   115b4:	str	r1, [sp, #16]
   115b8:	ldr	r7, [r8, r0, lsl #2]
   115bc:	mov	r0, r7
   115c0:	cmn	r6, #1
   115c4:	beq	115d4 <__mempcpy_chk@plt+0x5a8>
   115c8:	mov	r1, r6
   115cc:	bl	11868 <__mempcpy_chk@plt+0x83c>
   115d0:	b	115dc <__mempcpy_chk@plt+0x5b0>
   115d4:	mov	r1, #63	; 0x3f
   115d8:	bl	11724 <__mempcpy_chk@plt+0x6f8>
   115dc:	mov	r9, r0
   115e0:	cmp	r0, #0
   115e4:	beq	1161c <__mempcpy_chk@plt+0x5f0>
   115e8:	movw	r0, #33092	; 0x8144
   115ec:	movt	r0, #2
   115f0:	ldr	r1, [r0]
   115f4:	mov	r0, r9
   115f8:	bl	10dd4 <fputs_unlocked@plt>
   115fc:	ldrb	r0, [r4]
   11600:	cmp	r0, #0
   11604:	bne	11610 <__mempcpy_chk@plt+0x5e4>
   11608:	ldr	r0, [sp, #12]
   1160c:	bl	11014 <putchar_unlocked@plt>
   11610:	mov	r0, r9
   11614:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   11618:	b	11670 <__mempcpy_chk@plt+0x644>
   1161c:	movw	r0, #33098	; 0x814a
   11620:	movt	r0, #2
   11624:	ldrb	r0, [r0]
   11628:	mov	r1, #1
   1162c:	str	r1, [sp, #16]
   11630:	cmp	r0, #1
   11634:	bne	11670 <__mempcpy_chk@plt+0x644>
   11638:	bl	10f60 <__errno_location@plt>
   1163c:	ldr	r4, [r0]
   11640:	mov	r0, #0
   11644:	mov	r1, #3
   11648:	mov	r2, r7
   1164c:	bl	148a0 <__mempcpy_chk@plt+0x3874>
   11650:	mov	r3, r0
   11654:	mov	r0, #0
   11658:	mov	r1, r4
   1165c:	movw	r4, #33097	; 0x8149
   11660:	movt	r4, #2
   11664:	movw	r2, #27665	; 0x6c11
   11668:	movt	r2, #1
   1166c:	bl	10ee8 <error@plt>
   11670:	ldr	r0, [sl]
   11674:	add	r0, r0, #1
   11678:	str	r0, [sl]
   1167c:	cmp	r0, r5
   11680:	blt	115b8 <__mempcpy_chk@plt+0x58c>
   11684:	ldr	r0, [sp, #16]
   11688:	sub	sp, fp, #28
   1168c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11690:	cmn	r0, #3
   11694:	bne	116e0 <__mempcpy_chk@plt+0x6b4>
   11698:	movw	r0, #33000	; 0x80e8
   1169c:	movt	r0, #2
   116a0:	ldr	r3, [r0]
   116a4:	movw	r0, #33092	; 0x8144
   116a8:	movt	r0, #2
   116ac:	ldr	r0, [r0]
   116b0:	mov	r1, #0
   116b4:	movw	r2, #26899	; 0x6913
   116b8:	movt	r2, #1
   116bc:	str	r2, [sp]
   116c0:	str	r1, [sp, #4]
   116c4:	movw	r1, #26843	; 0x68db
   116c8:	movt	r1, #1
   116cc:	movw	r2, #26885	; 0x6905
   116d0:	movt	r2, #1
   116d4:	bl	15344 <__mempcpy_chk@plt+0x4318>
   116d8:	mov	r0, #0
   116dc:	bl	10f48 <exit@plt>
   116e0:	cmn	r0, #2
   116e4:	bne	116f0 <__mempcpy_chk@plt+0x6c4>
   116e8:	mov	r0, #0
   116ec:	bl	11128 <__mempcpy_chk@plt+0xfc>
   116f0:	mov	r0, #1
   116f4:	bl	11128 <__mempcpy_chk@plt+0xfc>
   116f8:	movw	r1, #26915	; 0x6923
   116fc:	movt	r1, #1
   11700:	mov	r0, #0
   11704:	mov	r2, #5
   11708:	bl	10e58 <dcgettext@plt>
   1170c:	mov	r2, r0
   11710:	mov	r0, #0
   11714:	mov	r1, #0
   11718:	bl	10ee8 <error@plt>
   1171c:	mov	r0, #1
   11720:	bl	11128 <__mempcpy_chk@plt+0xfc>
   11724:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11728:	add	fp, sp, #24
   1172c:	sub	sp, sp, #128	; 0x80
   11730:	mov	r4, r1
   11734:	mov	r8, r0
   11738:	cmp	r1, #0
   1173c:	beq	11750 <__mempcpy_chk@plt+0x724>
   11740:	movw	r6, #1025	; 0x401
   11744:	cmp	r4, #1024	; 0x400
   11748:	addls	r6, r4, #1
   1174c:	b	11754 <__mempcpy_chk@plt+0x728>
   11750:	mov	r6, #128	; 0x80
   11754:	mov	r9, sp
   11758:	cmp	r4, #0
   1175c:	beq	1179c <__mempcpy_chk@plt+0x770>
   11760:	b	117ac <__mempcpy_chk@plt+0x780>
   11764:	cmp	r0, r6
   11768:	bcc	117ec <__mempcpy_chk@plt+0x7c0>
   1176c:	mov	r0, r5
   11770:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   11774:	cmn	r6, #-1073741823	; 0xc0000001
   11778:	bhi	11784 <__mempcpy_chk@plt+0x758>
   1177c:	lsl	r0, r6, #1
   11780:	b	11790 <__mempcpy_chk@plt+0x764>
   11784:	mvn	r0, #-2147483648	; 0x80000000
   11788:	cmn	r6, #-2147483647	; 0x80000001
   1178c:	bcs	11824 <__mempcpy_chk@plt+0x7f8>
   11790:	mov	r6, r0
   11794:	cmp	r4, #0
   11798:	bne	117ac <__mempcpy_chk@plt+0x780>
   1179c:	mov	r5, #0
   117a0:	cmp	r6, #128	; 0x80
   117a4:	mov	r7, r9
   117a8:	beq	117c4 <__mempcpy_chk@plt+0x798>
   117ac:	mov	r0, r6
   117b0:	bl	15894 <__mempcpy_chk@plt+0x4868>
   117b4:	mov	r7, r0
   117b8:	cmp	r0, #0
   117bc:	mov	r5, r0
   117c0:	beq	11824 <__mempcpy_chk@plt+0x7f8>
   117c4:	mov	r0, r8
   117c8:	mov	r1, r7
   117cc:	mov	r2, r6
   117d0:	bl	10e94 <readlink@plt>
   117d4:	cmn	r0, #1
   117d8:	bgt	11764 <__mempcpy_chk@plt+0x738>
   117dc:	mov	r0, r5
   117e0:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   117e4:	mov	r4, #0
   117e8:	b	1185c <__mempcpy_chk@plt+0x830>
   117ec:	mov	r4, #0
   117f0:	strb	r4, [r7, r0]
   117f4:	add	r8, r0, #1
   117f8:	cmp	r5, #0
   117fc:	beq	11838 <__mempcpy_chk@plt+0x80c>
   11800:	cmp	r8, r6
   11804:	bcs	11858 <__mempcpy_chk@plt+0x82c>
   11808:	mov	r0, r5
   1180c:	mov	r1, r8
   11810:	bl	158c4 <__mempcpy_chk@plt+0x4898>
   11814:	mov	r4, r0
   11818:	cmp	r0, #0
   1181c:	moveq	r4, r5
   11820:	b	1185c <__mempcpy_chk@plt+0x830>
   11824:	bl	10f60 <__errno_location@plt>
   11828:	mov	r1, #12
   1182c:	str	r1, [r0]
   11830:	mov	r4, #0
   11834:	b	1185c <__mempcpy_chk@plt+0x830>
   11838:	mov	r0, r8
   1183c:	bl	15894 <__mempcpy_chk@plt+0x4868>
   11840:	cmp	r0, #0
   11844:	beq	1185c <__mempcpy_chk@plt+0x830>
   11848:	mov	r5, r0
   1184c:	mov	r1, r7
   11850:	mov	r2, r8
   11854:	bl	10e34 <memcpy@plt>
   11858:	mov	r4, r5
   1185c:	mov	r0, r4
   11860:	sub	sp, fp, #24
   11864:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11868:	push	{r4, r5, fp, lr}
   1186c:	add	fp, sp, #8
   11870:	sub	sp, sp, #8
   11874:	sub	sp, sp, #1024	; 0x400
   11878:	mov	r2, sp
   1187c:	bl	11888 <__mempcpy_chk@plt+0x85c>
   11880:	sub	sp, fp, #8
   11884:	pop	{r4, r5, fp, pc}
   11888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1188c:	add	fp, sp, #28
   11890:	sub	sp, sp, #164	; 0xa4
   11894:	sub	sp, sp, #2048	; 0x800
   11898:	mov	sl, r2
   1189c:	mov	r5, r1
   118a0:	mov	r9, r0
   118a4:	mov	r6, #0
   118a8:	str	r6, [fp, #-36]	; 0xffffffdc
   118ac:	and	r0, r1, #3
   118b0:	str	r0, [sp, #28]
   118b4:	bl	11e8c <__mempcpy_chk@plt+0xe60>
   118b8:	cmp	r0, #0
   118bc:	beq	118d0 <__mempcpy_chk@plt+0x8a4>
   118c0:	bl	10f60 <__errno_location@plt>
   118c4:	mov	r1, #22
   118c8:	str	r1, [r0]
   118cc:	b	11e64 <__mempcpy_chk@plt+0xe38>
   118d0:	cmp	r9, #0
   118d4:	beq	11930 <__mempcpy_chk@plt+0x904>
   118d8:	ldrb	r0, [r9]
   118dc:	cmp	r0, #0
   118e0:	beq	1193c <__mempcpy_chk@plt+0x910>
   118e4:	sub	r0, fp, #1072	; 0x430
   118e8:	bl	11e9c <__mempcpy_chk@plt+0xe70>
   118ec:	add	r0, sp, #136	; 0x88
   118f0:	bl	11e9c <__mempcpy_chk@plt+0xe70>
   118f4:	mov	r0, sl
   118f8:	bl	11e9c <__mempcpy_chk@plt+0xe70>
   118fc:	ldr	r4, [sl]
   11900:	ldrb	r0, [r9]
   11904:	cmp	r0, #47	; 0x2f
   11908:	bne	11950 <__mempcpy_chk@plt+0x924>
   1190c:	mov	r0, r4
   11910:	mov	r1, r9
   11914:	mov	r2, #0
   11918:	mvn	r3, #0
   1191c:	bl	1102c <__mempcpy_chk@plt>
   11920:	mov	r6, r0
   11924:	mov	r0, #47	; 0x2f
   11928:	strb	r0, [r6], #1
   1192c:	b	11974 <__mempcpy_chk@plt+0x948>
   11930:	bl	10f60 <__errno_location@plt>
   11934:	mov	r1, #22
   11938:	b	11944 <__mempcpy_chk@plt+0x918>
   1193c:	bl	10f60 <__errno_location@plt>
   11940:	mov	r1, #2
   11944:	str	r1, [r0]
   11948:	mov	r6, #0
   1194c:	b	11e64 <__mempcpy_chk@plt+0xe38>
   11950:	ldr	r1, [sl, #4]
   11954:	mov	r0, r4
   11958:	bl	10f3c <getcwd@plt>
   1195c:	cmp	r0, #0
   11960:	beq	11dbc <__mempcpy_chk@plt+0xd90>
   11964:	mov	r0, r4
   11968:	mov	r1, #0
   1196c:	bl	10e7c <rawmemchr@plt>
   11970:	mov	r6, r0
   11974:	ldrb	r0, [r9]
   11978:	cmp	r0, #0
   1197c:	beq	11d98 <__mempcpy_chk@plt+0xd6c>
   11980:	and	r1, r5, #4
   11984:	str	r1, [sp, #24]
   11988:	mov	r1, #0
   1198c:	str	r1, [sp, #4]
   11990:	mov	r1, #0
   11994:	str	r1, [sp, #12]
   11998:	str	sl, [sp, #20]
   1199c:	uxtb	r1, r0
   119a0:	cmp	r1, #47	; 0x2f
   119a4:	bne	119b4 <__mempcpy_chk@plt+0x988>
   119a8:	ldrb	r0, [r9, #1]!
   119ac:	cmp	r0, #47	; 0x2f
   119b0:	beq	119a8 <__mempcpy_chk@plt+0x97c>
   119b4:	mov	r8, r9
   119b8:	b	119c0 <__mempcpy_chk@plt+0x994>
   119bc:	add	r8, r8, #1
   119c0:	ldrb	r1, [r8]
   119c4:	cmp	r1, #0
   119c8:	cmpne	r1, #47	; 0x2f
   119cc:	bne	119bc <__mempcpy_chk@plt+0x990>
   119d0:	sub	r7, r8, r9
   119d4:	cmp	r7, #1
   119d8:	beq	119f0 <__mempcpy_chk@plt+0x9c4>
   119dc:	cmp	r7, #2
   119e0:	beq	11a00 <__mempcpy_chk@plt+0x9d4>
   119e4:	cmp	r7, #0
   119e8:	bne	11a14 <__mempcpy_chk@plt+0x9e8>
   119ec:	b	11d98 <__mempcpy_chk@plt+0xd6c>
   119f0:	uxtb	r0, r0
   119f4:	cmp	r0, #46	; 0x2e
   119f8:	bne	11a14 <__mempcpy_chk@plt+0x9e8>
   119fc:	b	11d34 <__mempcpy_chk@plt+0xd08>
   11a00:	uxtb	r0, r0
   11a04:	cmp	r0, #46	; 0x2e
   11a08:	ldrbeq	r0, [r9, #1]
   11a0c:	cmpeq	r0, #46	; 0x2e
   11a10:	beq	11cf4 <__mempcpy_chk@plt+0xcc8>
   11a14:	ldrb	r0, [r6, #-1]
   11a18:	cmp	r0, #47	; 0x2f
   11a1c:	movne	r0, #47	; 0x2f
   11a20:	strbne	r0, [r6], #1
   11a24:	ldr	r0, [sl, #4]
   11a28:	add	r0, r4, r0
   11a2c:	sub	r0, r0, r6
   11a30:	add	r5, r7, #2
   11a34:	cmp	r0, r5
   11a38:	bcc	11a60 <__mempcpy_chk@plt+0xa34>
   11a3c:	b	11a74 <__mempcpy_chk@plt+0xa48>
   11a40:	sub	r0, r6, r4
   11a44:	ldr	r4, [sl]
   11a48:	ldr	r1, [sl, #4]
   11a4c:	add	r6, r4, r0
   11a50:	add	r0, r4, r1
   11a54:	sub	r0, r0, r6
   11a58:	cmp	r0, r5
   11a5c:	bcs	11a74 <__mempcpy_chk@plt+0xa48>
   11a60:	mov	r0, sl
   11a64:	bl	14ee0 <__mempcpy_chk@plt+0x3eb4>
   11a68:	cmp	r0, #0
   11a6c:	bne	11a40 <__mempcpy_chk@plt+0xa14>
   11a70:	b	11e88 <__mempcpy_chk@plt+0xe5c>
   11a74:	mov	r0, r6
   11a78:	mov	r1, r9
   11a7c:	str	r7, [sp, #16]
   11a80:	mov	r2, r7
   11a84:	mvn	r3, #0
   11a88:	bl	1102c <__mempcpy_chk@plt>
   11a8c:	mov	r6, r0
   11a90:	mov	r0, #0
   11a94:	strb	r0, [r6]
   11a98:	ldr	r0, [sp, #24]
   11a9c:	cmp	r0, #0
   11aa0:	bne	11b00 <__mempcpy_chk@plt+0xad4>
   11aa4:	ldr	r5, [sp, #136]	; 0x88
   11aa8:	ldr	r0, [sp, #140]	; 0x8c
   11aac:	sub	r7, r0, #1
   11ab0:	mov	r0, r4
   11ab4:	mov	r1, r5
   11ab8:	mov	r2, r7
   11abc:	bl	10e94 <readlink@plt>
   11ac0:	cmp	r0, r7
   11ac4:	blt	11adc <__mempcpy_chk@plt+0xab0>
   11ac8:	add	r0, sp, #136	; 0x88
   11acc:	bl	14e5c <__mempcpy_chk@plt+0x3e30>
   11ad0:	cmp	r0, #0
   11ad4:	bne	11aa4 <__mempcpy_chk@plt+0xa78>
   11ad8:	b	11e88 <__mempcpy_chk@plt+0xe5c>
   11adc:	mov	sl, r0
   11ae0:	cmp	r0, #0
   11ae4:	blt	11b00 <__mempcpy_chk@plt+0xad4>
   11ae8:	ldr	r0, [sp, #4]
   11aec:	cmp	r0, #19
   11af0:	bgt	11b70 <__mempcpy_chk@plt+0xb44>
   11af4:	add	r0, r0, #1
   11af8:	str	r0, [sp, #4]
   11afc:	b	11be8 <__mempcpy_chk@plt+0xbbc>
   11b00:	ldr	r0, [sp, #28]
   11b04:	cmp	r0, #2
   11b08:	bne	11b18 <__mempcpy_chk@plt+0xaec>
   11b0c:	mov	r9, r8
   11b10:	ldr	sl, [sp, #20]
   11b14:	b	11d8c <__mempcpy_chk@plt+0xd60>
   11b18:	mov	r0, r8
   11b1c:	bl	11f48 <__mempcpy_chk@plt+0xf1c>
   11b20:	cmp	r0, #0
   11b24:	beq	11b44 <__mempcpy_chk@plt+0xb18>
   11b28:	mov	r0, r4
   11b2c:	mov	r1, r6
   11b30:	bl	11fd0 <__mempcpy_chk@plt+0xfa4>
   11b34:	cmp	r0, #0
   11b38:	ldr	sl, [sp, #20]
   11b3c:	bne	11d34 <__mempcpy_chk@plt+0xd08>
   11b40:	b	11d4c <__mempcpy_chk@plt+0xd20>
   11b44:	ldr	r0, [sp, #24]
   11b48:	cmp	r0, #0
   11b4c:	ldr	sl, [sp, #20]
   11b50:	beq	11d24 <__mempcpy_chk@plt+0xcf8>
   11b54:	ldrb	r0, [r8]
   11b58:	cmp	r0, #0
   11b5c:	beq	11d3c <__mempcpy_chk@plt+0xd10>
   11b60:	mov	r9, r8
   11b64:	cmp	r0, #0
   11b68:	bne	1199c <__mempcpy_chk@plt+0x970>
   11b6c:	b	11d98 <__mempcpy_chk@plt+0xd6c>
   11b70:	ldrb	r0, [r9]
   11b74:	cmp	r0, #0
   11b78:	beq	11be8 <__mempcpy_chk@plt+0xbbc>
   11b7c:	mov	r0, #0
   11b80:	ldr	r7, [sp, #16]
   11b84:	strb	r0, [r6, -r7]
   11b88:	ldrb	r0, [r4]
   11b8c:	cmp	r0, #0
   11b90:	mov	r0, r4
   11b94:	movw	r1, #27647	; 0x6bff
   11b98:	movt	r1, #1
   11b9c:	moveq	r0, r1
   11ba0:	add	r1, sp, #32
   11ba4:	bl	16420 <__mempcpy_chk@plt+0x53f4>
   11ba8:	cmp	r0, #0
   11bac:	bne	11e7c <__mempcpy_chk@plt+0xe50>
   11bb0:	rsb	r0, r7, #0
   11bb4:	ldrb	r1, [r9]
   11bb8:	strb	r1, [r6, r0]
   11bbc:	sub	r0, fp, #36	; 0x24
   11bc0:	mov	r1, r9
   11bc4:	add	r2, sp, #32
   11bc8:	bl	11eb0 <__mempcpy_chk@plt+0xe84>
   11bcc:	cmp	r0, #0
   11bd0:	beq	11be8 <__mempcpy_chk@plt+0xbbc>
   11bd4:	ldr	r0, [sp, #28]
   11bd8:	cmp	r0, #2
   11bdc:	ldr	sl, [sp, #20]
   11be0:	beq	11d34 <__mempcpy_chk@plt+0xd08>
   11be4:	b	11e70 <__mempcpy_chk@plt+0xe44>
   11be8:	mov	r0, #0
   11bec:	strb	r0, [r5, sl]
   11bf0:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   11bf4:	ldr	r0, [sp, #12]
   11bf8:	tst	r0, #1
   11bfc:	ldr	r0, [sp, #8]
   11c00:	subne	r0, r8, r9
   11c04:	str	r0, [sp, #8]
   11c08:	mov	r0, r8
   11c0c:	bl	10f54 <strlen@plt>
   11c10:	str	r0, [sp, #16]
   11c14:	adds	r7, r0, sl
   11c18:	bcs	11e88 <__mempcpy_chk@plt+0xe5c>
   11c1c:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   11c20:	cmp	r0, r7
   11c24:	bhi	11c48 <__mempcpy_chk@plt+0xc1c>
   11c28:	sub	r0, fp, #1072	; 0x430
   11c2c:	bl	14ee0 <__mempcpy_chk@plt+0x3eb4>
   11c30:	cmp	r0, #0
   11c34:	beq	11e88 <__mempcpy_chk@plt+0xe5c>
   11c38:	ldr	r0, [fp, #-1068]	; 0xfffffbd4
   11c3c:	cmp	r0, r7
   11c40:	bls	11c28 <__mempcpy_chk@plt+0xbfc>
   11c44:	ldr	r9, [fp, #-1072]	; 0xfffffbd0
   11c48:	ldr	r0, [sp, #12]
   11c4c:	tst	r0, #1
   11c50:	ldr	r0, [sp, #8]
   11c54:	addne	r8, r9, r0
   11c58:	add	r0, r9, sl
   11c5c:	ldr	r1, [sp, #16]
   11c60:	add	r2, r1, #1
   11c64:	mov	r1, r8
   11c68:	bl	10e04 <memmove@plt>
   11c6c:	mov	r0, r9
   11c70:	mov	r1, r5
   11c74:	mov	r2, sl
   11c78:	bl	10e34 <memcpy@plt>
   11c7c:	ldrb	r0, [r5]
   11c80:	cmp	r0, #47	; 0x2f
   11c84:	bne	11cb8 <__mempcpy_chk@plt+0xc8c>
   11c88:	mov	r0, r4
   11c8c:	mov	r1, r5
   11c90:	mov	r2, #0
   11c94:	mvn	r3, #0
   11c98:	bl	1102c <__mempcpy_chk@plt>
   11c9c:	mov	r6, r0
   11ca0:	mov	r0, #47	; 0x2f
   11ca4:	strb	r0, [r6], #1
   11ca8:	mov	r0, #1
   11cac:	str	r0, [sp, #12]
   11cb0:	ldr	sl, [sp, #20]
   11cb4:	b	11d8c <__mempcpy_chk@plt+0xd60>
   11cb8:	add	r0, r4, #1
   11cbc:	mov	r1, #1
   11cc0:	str	r1, [sp, #12]
   11cc4:	cmp	r6, r0
   11cc8:	ldr	sl, [sp, #20]
   11ccc:	bls	11d8c <__mempcpy_chk@plt+0xd60>
   11cd0:	sub	r0, r6, #1
   11cd4:	mov	r6, r0
   11cd8:	cmp	r0, r4
   11cdc:	bls	11d8c <__mempcpy_chk@plt+0xd60>
   11ce0:	mov	r0, r6
   11ce4:	ldrb	r1, [r0, #-1]!
   11ce8:	cmp	r1, #47	; 0x2f
   11cec:	bne	11cd4 <__mempcpy_chk@plt+0xca8>
   11cf0:	b	11d8c <__mempcpy_chk@plt+0xd60>
   11cf4:	add	r0, r4, #1
   11cf8:	cmp	r6, r0
   11cfc:	bls	11d34 <__mempcpy_chk@plt+0xd08>
   11d00:	sub	r0, r6, #1
   11d04:	mov	r6, r0
   11d08:	cmp	r0, r4
   11d0c:	bls	11d34 <__mempcpy_chk@plt+0xd08>
   11d10:	mov	r0, r6
   11d14:	ldrb	r1, [r0, #-1]!
   11d18:	cmp	r1, #47	; 0x2f
   11d1c:	bne	11d04 <__mempcpy_chk@plt+0xcd8>
   11d20:	b	11d34 <__mempcpy_chk@plt+0xd08>
   11d24:	bl	10f60 <__errno_location@plt>
   11d28:	ldr	r0, [r0]
   11d2c:	cmp	r0, #22
   11d30:	bne	11d4c <__mempcpy_chk@plt+0xd20>
   11d34:	mov	r9, r8
   11d38:	b	11d8c <__mempcpy_chk@plt+0xd60>
   11d3c:	mov	r0, r4
   11d40:	bl	11fdc <__mempcpy_chk@plt+0xfb0>
   11d44:	cmp	r0, #0
   11d48:	bne	11d34 <__mempcpy_chk@plt+0xd08>
   11d4c:	mov	r5, #1
   11d50:	ldr	r0, [sp, #28]
   11d54:	cmp	r0, #1
   11d58:	bne	11e0c <__mempcpy_chk@plt+0xde0>
   11d5c:	bl	10f60 <__errno_location@plt>
   11d60:	ldr	r0, [r0]
   11d64:	cmp	r0, #2
   11d68:	bne	11e0c <__mempcpy_chk@plt+0xde0>
   11d6c:	mov	r0, r8
   11d70:	movw	r1, #28783	; 0x706f
   11d74:	movt	r1, #1
   11d78:	bl	11020 <strspn@plt>
   11d7c:	ldrb	r0, [r8, r0]
   11d80:	cmp	r0, #0
   11d84:	mov	r9, r8
   11d88:	bne	11e0c <__mempcpy_chk@plt+0xde0>
   11d8c:	ldrb	r0, [r9]
   11d90:	cmp	r0, #0
   11d94:	bne	1199c <__mempcpy_chk@plt+0x970>
   11d98:	add	r0, r4, #1
   11d9c:	mov	r5, #0
   11da0:	cmp	r6, r0
   11da4:	bls	11e0c <__mempcpy_chk@plt+0xde0>
   11da8:	mov	r0, r6
   11dac:	ldrb	r1, [r0, #-1]!
   11db0:	cmp	r1, #47	; 0x2f
   11db4:	moveq	r6, r0
   11db8:	b	11e0c <__mempcpy_chk@plt+0xde0>
   11dbc:	bl	10f60 <__errno_location@plt>
   11dc0:	mov	r6, r0
   11dc4:	ldr	r0, [r6]
   11dc8:	cmp	r0, #34	; 0x22
   11dcc:	bne	11dfc <__mempcpy_chk@plt+0xdd0>
   11dd0:	mov	r0, sl
   11dd4:	bl	14e5c <__mempcpy_chk@plt+0x3e30>
   11dd8:	cmp	r0, #0
   11ddc:	beq	11e88 <__mempcpy_chk@plt+0xe5c>
   11de0:	ldr	r4, [sl]
   11de4:	ldr	r1, [sl, #4]
   11de8:	mov	r0, r4
   11dec:	bl	10f3c <getcwd@plt>
   11df0:	cmp	r0, #0
   11df4:	beq	11dc4 <__mempcpy_chk@plt+0xd98>
   11df8:	b	11964 <__mempcpy_chk@plt+0x938>
   11dfc:	cmp	r0, #12
   11e00:	beq	11e88 <__mempcpy_chk@plt+0xe5c>
   11e04:	mov	r5, #1
   11e08:	mov	r6, r4
   11e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11e10:	cmp	r0, #0
   11e14:	beq	11e1c <__mempcpy_chk@plt+0xdf0>
   11e18:	bl	12934 <__mempcpy_chk@plt+0x1908>
   11e1c:	sub	r0, fp, #1072	; 0x430
   11e20:	bl	12004 <__mempcpy_chk@plt+0xfd8>
   11e24:	add	r0, sp, #136	; 0x88
   11e28:	bl	12004 <__mempcpy_chk@plt+0xfd8>
   11e2c:	cmp	r5, #0
   11e30:	beq	11e44 <__mempcpy_chk@plt+0xe18>
   11e34:	mov	r0, sl
   11e38:	bl	12004 <__mempcpy_chk@plt+0xfd8>
   11e3c:	mov	r6, #0
   11e40:	b	11e64 <__mempcpy_chk@plt+0xe38>
   11e44:	mov	r0, #0
   11e48:	strb	r0, [r6], #1
   11e4c:	sub	r1, r6, r4
   11e50:	mov	r0, sl
   11e54:	bl	14df4 <__mempcpy_chk@plt+0x3dc8>
   11e58:	mov	r6, r0
   11e5c:	cmp	r0, #0
   11e60:	beq	11e88 <__mempcpy_chk@plt+0xe5c>
   11e64:	mov	r0, r6
   11e68:	sub	sp, fp, #28
   11e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e70:	bl	10f60 <__errno_location@plt>
   11e74:	mov	r1, #40	; 0x28
   11e78:	str	r1, [r0]
   11e7c:	mov	r5, #1
   11e80:	ldr	sl, [sp, #20]
   11e84:	b	11e0c <__mempcpy_chk@plt+0xde0>
   11e88:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   11e8c:	sub	r1, r0, #1
   11e90:	ands	r0, r1, r0
   11e94:	movwne	r0, #1
   11e98:	bx	lr
   11e9c:	mov	r1, #1024	; 0x400
   11ea0:	add	r2, r0, #8
   11ea4:	str	r2, [r0]
   11ea8:	str	r1, [r0, #4]
   11eac:	bx	lr
   11eb0:	push	{r4, r5, r6, sl, fp, lr}
   11eb4:	add	fp, sp, #16
   11eb8:	sub	sp, sp, #8
   11ebc:	mov	r4, r2
   11ec0:	mov	r5, r1
   11ec4:	mov	r6, r0
   11ec8:	ldr	r0, [r0]
   11ecc:	cmp	r0, #0
   11ed0:	bne	11f08 <__mempcpy_chk@plt+0xedc>
   11ed4:	movw	r0, #12680	; 0x3188
   11ed8:	movt	r0, #1
   11edc:	str	r0, [sp]
   11ee0:	movw	r2, #12536	; 0x30f8
   11ee4:	movt	r2, #1
   11ee8:	movw	r3, #12592	; 0x3130
   11eec:	movt	r3, #1
   11ef0:	mov	r0, #7
   11ef4:	mov	r1, #0
   11ef8:	bl	12660 <__mempcpy_chk@plt+0x1634>
   11efc:	str	r0, [r6]
   11f00:	cmp	r0, #0
   11f04:	beq	11f44 <__mempcpy_chk@plt+0xf18>
   11f08:	ldr	r0, [r6]
   11f0c:	mov	r1, r5
   11f10:	mov	r2, r4
   11f14:	bl	1219c <__mempcpy_chk@plt+0x1170>
   11f18:	mov	r1, r0
   11f1c:	mov	r0, #1
   11f20:	cmp	r1, #0
   11f24:	bne	11f3c <__mempcpy_chk@plt+0xf10>
   11f28:	ldr	r0, [r6]
   11f2c:	mov	r1, r5
   11f30:	mov	r2, r4
   11f34:	bl	12120 <__mempcpy_chk@plt+0x10f4>
   11f38:	mov	r0, #0
   11f3c:	sub	sp, fp, #16
   11f40:	pop	{r4, r5, r6, sl, fp, pc}
   11f44:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   11f48:	mov	r1, r0
   11f4c:	ldrb	r2, [r0]
   11f50:	mov	r0, #0
   11f54:	cmp	r2, #47	; 0x2f
   11f58:	bxne	lr
   11f5c:	mov	r0, #1
   11f60:	mov	ip, #0
   11f64:	mov	r3, r1
   11f68:	ldrb	r2, [r1, #1]!
   11f6c:	cmp	r2, #47	; 0x2f
   11f70:	beq	11f64 <__mempcpy_chk@plt+0xf38>
   11f74:	cmp	r2, #46	; 0x2e
   11f78:	bne	11fb8 <__mempcpy_chk@plt+0xf8c>
   11f7c:	add	r1, r3, #2
   11f80:	ldrb	r2, [r1]
   11f84:	cmp	r2, #47	; 0x2f
   11f88:	beq	11f64 <__mempcpy_chk@plt+0xf38>
   11f8c:	cmp	r2, #0
   11f90:	moveq	ip, #1
   11f94:	moveq	r0, ip
   11f98:	bxeq	lr
   11f9c:	cmp	r2, #46	; 0x2e
   11fa0:	bne	11fc8 <__mempcpy_chk@plt+0xf9c>
   11fa4:	ldrb	r1, [r3, #3]
   11fa8:	cmp	r1, #0
   11fac:	cmpne	r1, #47	; 0x2f
   11fb0:	bne	11fc8 <__mempcpy_chk@plt+0xf9c>
   11fb4:	bx	lr
   11fb8:	cmp	r2, #0
   11fbc:	movne	r0, ip
   11fc0:	bxne	lr
   11fc4:	bx	lr
   11fc8:	mov	r0, #0
   11fcc:	bx	lr
   11fd0:	mov	r2, #47	; 0x2f
   11fd4:	strh	r2, [r1]
   11fd8:	b	11fdc <__mempcpy_chk@plt+0xfb0>
   11fdc:	push	{fp, lr}
   11fe0:	mov	fp, sp
   11fe4:	mov	r1, r0
   11fe8:	mvn	r0, #99	; 0x63
   11fec:	mov	r2, #0
   11ff0:	mov	r3, #512	; 0x200
   11ff4:	bl	10e1c <faccessat@plt>
   11ff8:	clz	r0, r0
   11ffc:	lsr	r0, r0, #5
   12000:	pop	{fp, pc}
   12004:	mov	r1, r0
   12008:	ldr	r0, [r1], #8
   1200c:	cmp	r0, r1
   12010:	bxeq	lr
   12014:	b	121e8 <__mempcpy_chk@plt+0x11bc>
   12018:	movw	r1, #33100	; 0x814c
   1201c:	movt	r1, #2
   12020:	str	r0, [r1]
   12024:	bx	lr
   12028:	movw	r1, #33104	; 0x8150
   1202c:	movt	r1, #2
   12030:	strb	r0, [r1]
   12034:	bx	lr
   12038:	push	{r4, r5, r6, sl, fp, lr}
   1203c:	add	fp, sp, #16
   12040:	sub	sp, sp, #8
   12044:	movw	r0, #33092	; 0x8144
   12048:	movt	r0, #2
   1204c:	ldr	r0, [r0]
   12050:	bl	15d90 <__mempcpy_chk@plt+0x4d64>
   12054:	cmp	r0, #0
   12058:	beq	12080 <__mempcpy_chk@plt+0x1054>
   1205c:	movw	r0, #33104	; 0x8150
   12060:	movt	r0, #2
   12064:	ldrb	r0, [r0]
   12068:	cmp	r0, #0
   1206c:	beq	120a0 <__mempcpy_chk@plt+0x1074>
   12070:	bl	10f60 <__errno_location@plt>
   12074:	ldr	r0, [r0]
   12078:	cmp	r0, #32
   1207c:	bne	120a0 <__mempcpy_chk@plt+0x1074>
   12080:	movw	r0, #33088	; 0x8140
   12084:	movt	r0, #2
   12088:	ldr	r0, [r0]
   1208c:	bl	15d90 <__mempcpy_chk@plt+0x4d64>
   12090:	cmp	r0, #0
   12094:	subeq	sp, fp, #16
   12098:	popeq	{r4, r5, r6, sl, fp, pc}
   1209c:	b	12110 <__mempcpy_chk@plt+0x10e4>
   120a0:	movw	r1, #27649	; 0x6c01
   120a4:	movt	r1, #1
   120a8:	mov	r0, #0
   120ac:	mov	r2, #5
   120b0:	bl	10e58 <dcgettext@plt>
   120b4:	mov	r4, r0
   120b8:	movw	r0, #33100	; 0x814c
   120bc:	movt	r0, #2
   120c0:	ldr	r6, [r0]
   120c4:	bl	10f60 <__errno_location@plt>
   120c8:	ldr	r5, [r0]
   120cc:	cmp	r6, #0
   120d0:	bne	120ec <__mempcpy_chk@plt+0x10c0>
   120d4:	movw	r2, #27665	; 0x6c11
   120d8:	movt	r2, #1
   120dc:	mov	r0, #0
   120e0:	mov	r1, r5
   120e4:	mov	r3, r4
   120e8:	b	1210c <__mempcpy_chk@plt+0x10e0>
   120ec:	mov	r0, r6
   120f0:	bl	14890 <__mempcpy_chk@plt+0x3864>
   120f4:	mov	r3, r0
   120f8:	str	r4, [sp]
   120fc:	movw	r2, #27661	; 0x6c0d
   12100:	movt	r2, #1
   12104:	mov	r0, #0
   12108:	mov	r1, r5
   1210c:	bl	10ee8 <error@plt>
   12110:	movw	r0, #33004	; 0x80ec
   12114:	movt	r0, #2
   12118:	ldr	r0, [r0]
   1211c:	bl	10e28 <_exit@plt>
   12120:	push	{r4, r5, r6, r7, fp, lr}
   12124:	add	fp, sp, #16
   12128:	cmp	r0, #0
   1212c:	popeq	{r4, r5, r6, r7, fp, pc}
   12130:	mov	r6, r2
   12134:	mov	r7, r1
   12138:	mov	r5, r0
   1213c:	mov	r0, #24
   12140:	bl	1544c <__mempcpy_chk@plt+0x4420>
   12144:	mov	r4, r0
   12148:	mov	r0, r7
   1214c:	bl	157dc <__mempcpy_chk@plt+0x47b0>
   12150:	str	r0, [r4]
   12154:	ldrd	r0, [r6, #96]	; 0x60
   12158:	str	r1, [r4, #12]
   1215c:	str	r0, [r4, #8]
   12160:	ldrd	r0, [r6]
   12164:	str	r1, [r4, #20]
   12168:	str	r0, [r4, #16]
   1216c:	mov	r0, r5
   12170:	mov	r1, r4
   12174:	bl	12ef0 <__mempcpy_chk@plt+0x1ec4>
   12178:	cmp	r0, #0
   1217c:	beq	12198 <__mempcpy_chk@plt+0x116c>
   12180:	cmp	r0, r4
   12184:	beq	12194 <__mempcpy_chk@plt+0x1168>
   12188:	mov	r0, r4
   1218c:	pop	{r4, r5, r6, r7, fp, lr}
   12190:	b	13188 <__mempcpy_chk@plt+0x215c>
   12194:	pop	{r4, r5, r6, r7, fp, pc}
   12198:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   1219c:	cmp	r0, #0
   121a0:	moveq	r0, #0
   121a4:	bxeq	lr
   121a8:	push	{r4, r5, fp, lr}
   121ac:	add	fp, sp, #8
   121b0:	sub	sp, sp, #24
   121b4:	str	r1, [sp]
   121b8:	ldrd	r4, [r2, #96]	; 0x60
   121bc:	str	r5, [sp, #12]
   121c0:	str	r4, [sp, #8]
   121c4:	ldrd	r2, [r2]
   121c8:	str	r3, [sp, #20]
   121cc:	str	r2, [sp, #16]
   121d0:	mov	r1, sp
   121d4:	bl	123d8 <__mempcpy_chk@plt+0x13ac>
   121d8:	cmp	r0, #0
   121dc:	movwne	r0, #1
   121e0:	sub	sp, fp, #8
   121e4:	pop	{r4, r5, fp, pc}
   121e8:	push	{r4, r5, r6, sl, fp, lr}
   121ec:	add	fp, sp, #16
   121f0:	mov	r4, r0
   121f4:	bl	10f60 <__errno_location@plt>
   121f8:	mov	r5, r0
   121fc:	ldr	r6, [r0]
   12200:	mov	r0, r4
   12204:	bl	10e10 <free@plt>
   12208:	str	r6, [r5]
   1220c:	pop	{r4, r5, r6, sl, fp, pc}
   12210:	ldr	r0, [r0, #8]
   12214:	bx	lr
   12218:	ldr	r0, [r0, #12]
   1221c:	bx	lr
   12220:	ldr	r0, [r0, #16]
   12224:	bx	lr
   12228:	mov	r2, r0
   1222c:	ldm	r0, {r1, r3}
   12230:	mov	r0, #0
   12234:	cmp	r1, r3
   12238:	bxcs	lr
   1223c:	ldr	ip, [r2, #4]
   12240:	mov	r0, #0
   12244:	ldr	r2, [r1]
   12248:	cmp	r2, #0
   1224c:	beq	12270 <__mempcpy_chk@plt+0x1244>
   12250:	mov	r3, #0
   12254:	mov	r2, r1
   12258:	add	r3, r3, #1
   1225c:	ldr	r2, [r2, #4]
   12260:	cmp	r2, #0
   12264:	bne	12258 <__mempcpy_chk@plt+0x122c>
   12268:	cmp	r3, r0
   1226c:	movhi	r0, r3
   12270:	add	r1, r1, #8
   12274:	cmp	r1, ip
   12278:	bcc	12244 <__mempcpy_chk@plt+0x1218>
   1227c:	bx	lr
   12280:	push	{fp, lr}
   12284:	mov	fp, sp
   12288:	ldr	r3, [r0]
   1228c:	ldr	r1, [r0, #4]
   12290:	mov	lr, #0
   12294:	cmp	r3, r1
   12298:	mov	r1, #0
   1229c:	bcs	122dc <__mempcpy_chk@plt+0x12b0>
   122a0:	ldr	ip, [r0, #4]
   122a4:	mov	r1, #0
   122a8:	mov	lr, #0
   122ac:	ldr	r2, [r3]
   122b0:	cmp	r2, #0
   122b4:	beq	122d0 <__mempcpy_chk@plt+0x12a4>
   122b8:	mov	r2, r3
   122bc:	add	r1, r1, #1
   122c0:	ldr	r2, [r2, #4]
   122c4:	cmp	r2, #0
   122c8:	bne	122bc <__mempcpy_chk@plt+0x1290>
   122cc:	add	lr, lr, #1
   122d0:	add	r3, r3, #8
   122d4:	cmp	r3, ip
   122d8:	bcc	122ac <__mempcpy_chk@plt+0x1280>
   122dc:	ldr	r2, [r0, #12]
   122e0:	cmp	lr, r2
   122e4:	bne	122fc <__mempcpy_chk@plt+0x12d0>
   122e8:	ldr	r2, [r0, #16]
   122ec:	mov	r0, #1
   122f0:	cmp	r1, r2
   122f4:	movne	r0, #0
   122f8:	pop	{fp, pc}
   122fc:	mov	r0, #0
   12300:	pop	{fp, pc}
   12304:	nop	{0}
   12308:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1230c:	add	fp, sp, #24
   12310:	sub	sp, sp, #8
   12314:	mov	r4, r1
   12318:	mov	r5, r0
   1231c:	bl	12220 <__mempcpy_chk@plt+0x11f4>
   12320:	mov	r8, r0
   12324:	mov	r0, r5
   12328:	bl	12210 <__mempcpy_chk@plt+0x11e4>
   1232c:	mov	r7, r0
   12330:	mov	r0, r5
   12334:	bl	12218 <__mempcpy_chk@plt+0x11ec>
   12338:	mov	r6, r0
   1233c:	mov	r0, r5
   12340:	bl	12228 <__mempcpy_chk@plt+0x11fc>
   12344:	mov	r5, r0
   12348:	movw	r2, #27668	; 0x6c14
   1234c:	movt	r2, #1
   12350:	mov	r0, r4
   12354:	mov	r1, #1
   12358:	mov	r3, r8
   1235c:	bl	10f9c <__fprintf_chk@plt>
   12360:	movw	r2, #27692	; 0x6c2c
   12364:	movt	r2, #1
   12368:	mov	r0, r4
   1236c:	mov	r1, #1
   12370:	mov	r3, r7
   12374:	bl	10f9c <__fprintf_chk@plt>
   12378:	vldr	d16, [pc, #80]	; 123d0 <__mempcpy_chk@plt+0x13a4>
   1237c:	vmov	s0, r6
   12380:	vmov	s2, r7
   12384:	vcvt.f64.u32	d17, s0
   12388:	vcvt.f64.u32	d18, s2
   1238c:	vmul.f64	d16, d17, d16
   12390:	vdiv.f64	d16, d16, d18
   12394:	vstr	d16, [sp]
   12398:	movw	r2, #27716	; 0x6c44
   1239c:	movt	r2, #1
   123a0:	mov	r0, r4
   123a4:	mov	r1, #1
   123a8:	mov	r3, r6
   123ac:	bl	10f9c <__fprintf_chk@plt>
   123b0:	movw	r2, #27749	; 0x6c65
   123b4:	movt	r2, #1
   123b8:	mov	r0, r4
   123bc:	mov	r1, #1
   123c0:	mov	r3, r5
   123c4:	sub	sp, fp, #24
   123c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   123cc:	b	10f9c <__fprintf_chk@plt>
   123d0:	andeq	r0, r0, r0
   123d4:	subsmi	r0, r9, r0
   123d8:	push	{r4, r5, r6, r7, fp, lr}
   123dc:	add	fp, sp, #16
   123e0:	mov	r5, r1
   123e4:	mov	r6, r0
   123e8:	bl	1243c <__mempcpy_chk@plt+0x1410>
   123ec:	mov	r7, r0
   123f0:	ldr	r0, [r0]
   123f4:	mov	r4, #0
   123f8:	cmp	r0, #0
   123fc:	bne	12408 <__mempcpy_chk@plt+0x13dc>
   12400:	b	12434 <__mempcpy_chk@plt+0x1408>
   12404:	ldr	r7, [r7, #4]
   12408:	cmp	r7, #0
   1240c:	beq	12434 <__mempcpy_chk@plt+0x1408>
   12410:	ldr	r1, [r7]
   12414:	cmp	r1, r5
   12418:	beq	12430 <__mempcpy_chk@plt+0x1404>
   1241c:	ldr	r2, [r6, #28]
   12420:	mov	r0, r5
   12424:	blx	r2
   12428:	cmp	r0, #0
   1242c:	beq	12404 <__mempcpy_chk@plt+0x13d8>
   12430:	ldr	r4, [r7]
   12434:	mov	r0, r4
   12438:	pop	{r4, r5, r6, r7, fp, pc}
   1243c:	push	{r4, sl, fp, lr}
   12440:	add	fp, sp, #8
   12444:	mov	r2, r1
   12448:	mov	r4, r0
   1244c:	ldr	r1, [r0, #8]
   12450:	ldr	r3, [r0, #24]
   12454:	mov	r0, r2
   12458:	blx	r3
   1245c:	ldr	r1, [r4, #8]
   12460:	cmp	r0, r1
   12464:	ldrcc	r1, [r4]
   12468:	addcc	r0, r1, r0, lsl #3
   1246c:	popcc	{r4, sl, fp, pc}
   12470:	bl	11008 <abort@plt>
   12474:	ldr	r1, [r0, #16]
   12478:	cmp	r1, #0
   1247c:	moveq	r1, #0
   12480:	moveq	r0, r1
   12484:	bxeq	lr
   12488:	ldr	r2, [r0]
   1248c:	b	124a0 <__mempcpy_chk@plt+0x1474>
   12490:	ldr	r1, [r2], #8
   12494:	cmp	r1, #0
   12498:	movne	r0, r1
   1249c:	bxne	lr
   124a0:	ldr	r1, [r0, #4]
   124a4:	cmp	r2, r1
   124a8:	bcc	12490 <__mempcpy_chk@plt+0x1464>
   124ac:	push	{fp, lr}
   124b0:	mov	fp, sp
   124b4:	bl	11008 <abort@plt>
   124b8:	push	{r4, r5, fp, lr}
   124bc:	add	fp, sp, #8
   124c0:	mov	r5, r1
   124c4:	mov	r4, r0
   124c8:	bl	1243c <__mempcpy_chk@plt+0x1410>
   124cc:	mov	r1, r0
   124d0:	ldr	r2, [r1]
   124d4:	cmp	r2, r5
   124d8:	bne	124ec <__mempcpy_chk@plt+0x14c0>
   124dc:	ldr	r2, [r1, #4]
   124e0:	cmp	r2, #0
   124e4:	ldrne	r0, [r2]
   124e8:	popne	{r4, r5, fp, pc}
   124ec:	ldr	r1, [r1, #4]
   124f0:	cmp	r1, #0
   124f4:	bne	124d0 <__mempcpy_chk@plt+0x14a4>
   124f8:	add	r1, r0, #8
   124fc:	ldr	r2, [r4, #4]
   12500:	cmp	r1, r2
   12504:	movcs	r0, #0
   12508:	popcs	{r4, r5, fp, pc}
   1250c:	ldr	r0, [r1], #8
   12510:	cmp	r0, #0
   12514:	popne	{r4, r5, fp, pc}
   12518:	b	12500 <__mempcpy_chk@plt+0x14d4>
   1251c:	push	{r4, sl, fp, lr}
   12520:	add	fp, sp, #8
   12524:	mov	ip, r0
   12528:	ldr	lr, [r0]
   1252c:	ldr	r3, [r0, #4]
   12530:	mov	r0, #0
   12534:	cmp	lr, r3
   12538:	bcs	12584 <__mempcpy_chk@plt+0x1558>
   1253c:	mov	r0, #0
   12540:	ldr	r3, [lr]
   12544:	cmp	r3, #0
   12548:	cmpne	lr, #0
   1254c:	beq	12574 <__mempcpy_chk@plt+0x1548>
   12550:	mov	r3, lr
   12554:	cmp	r0, r2
   12558:	popcs	{r4, sl, fp, pc}
   1255c:	ldr	r4, [r3]
   12560:	str	r4, [r1, r0, lsl #2]
   12564:	add	r0, r0, #1
   12568:	ldr	r3, [r3, #4]
   1256c:	cmp	r3, #0
   12570:	bne	12554 <__mempcpy_chk@plt+0x1528>
   12574:	ldr	r3, [ip, #4]
   12578:	add	lr, lr, #8
   1257c:	cmp	lr, r3
   12580:	bcc	12540 <__mempcpy_chk@plt+0x1514>
   12584:	pop	{r4, sl, fp, pc}
   12588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1258c:	add	fp, sp, #24
   12590:	mov	r8, r0
   12594:	ldr	r9, [r0]
   12598:	ldr	r0, [r0, #4]
   1259c:	mov	r6, #0
   125a0:	cmp	r9, r0
   125a4:	bcs	12604 <__mempcpy_chk@plt+0x15d8>
   125a8:	mov	r4, r2
   125ac:	mov	r5, r1
   125b0:	mov	r6, #0
   125b4:	b	125e4 <__mempcpy_chk@plt+0x15b8>
   125b8:	mov	r7, r9
   125bc:	ldr	r0, [r7]
   125c0:	mov	r1, r4
   125c4:	blx	r5
   125c8:	cmp	r0, #0
   125cc:	beq	12604 <__mempcpy_chk@plt+0x15d8>
   125d0:	add	r6, r6, #1
   125d4:	ldr	r7, [r7, #4]
   125d8:	cmp	r7, #0
   125dc:	bne	125bc <__mempcpy_chk@plt+0x1590>
   125e0:	b	125f4 <__mempcpy_chk@plt+0x15c8>
   125e4:	ldr	r0, [r9]
   125e8:	cmp	r0, #0
   125ec:	cmpne	r9, #0
   125f0:	bne	125b8 <__mempcpy_chk@plt+0x158c>
   125f4:	ldr	r0, [r8, #4]
   125f8:	add	r9, r9, #8
   125fc:	cmp	r9, r0
   12600:	bcc	125e4 <__mempcpy_chk@plt+0x15b8>
   12604:	mov	r0, r6
   12608:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1260c:	ldrb	r2, [r0]
   12610:	cmp	r2, #0
   12614:	moveq	r0, #0
   12618:	bxeq	lr
   1261c:	add	r3, r0, #1
   12620:	mov	r0, #0
   12624:	rsb	r0, r0, r0, lsl #5
   12628:	uxtab	r0, r0, r2
   1262c:	udiv	r2, r0, r1
   12630:	mls	r0, r2, r1, r0
   12634:	ldrb	r2, [r3], #1
   12638:	cmp	r2, #0
   1263c:	bne	12624 <__mempcpy_chk@plt+0x15f8>
   12640:	bx	lr
   12644:	movw	r1, #27776	; 0x6c80
   12648:	movt	r1, #1
   1264c:	vld1.32	{d16-d17}, [r1]!
   12650:	vst1.32	{d16-d17}, [r0]!
   12654:	ldr	r1, [r1]
   12658:	str	r1, [r0]
   1265c:	bx	lr
   12660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12664:	add	fp, sp, #28
   12668:	sub	sp, sp, #4
   1266c:	mov	r7, r1
   12670:	mov	r8, r0
   12674:	movw	sl, #10080	; 0x2760
   12678:	movt	sl, #1
   1267c:	cmp	r3, #0
   12680:	movne	sl, r3
   12684:	movw	r5, #10048	; 0x2740
   12688:	movt	r5, #1
   1268c:	cmp	r2, #0
   12690:	movne	r5, r2
   12694:	mov	r0, #40	; 0x28
   12698:	bl	15894 <__mempcpy_chk@plt+0x4868>
   1269c:	mov	r9, #0
   126a0:	cmp	r0, #0
   126a4:	beq	12734 <__mempcpy_chk@plt+0x1708>
   126a8:	mov	r4, r0
   126ac:	movw	r6, #27776	; 0x6c80
   126b0:	movt	r6, #1
   126b4:	cmp	r7, #0
   126b8:	movne	r6, r7
   126bc:	str	r6, [r0, #20]
   126c0:	bl	12770 <__mempcpy_chk@plt+0x1744>
   126c4:	cmp	r0, #0
   126c8:	beq	1272c <__mempcpy_chk@plt+0x1700>
   126cc:	mov	r0, r8
   126d0:	mov	r1, r6
   126d4:	bl	1281c <__mempcpy_chk@plt+0x17f0>
   126d8:	str	r0, [r4, #8]
   126dc:	cmp	r0, #0
   126e0:	beq	1272c <__mempcpy_chk@plt+0x1700>
   126e4:	mov	r1, #8
   126e8:	bl	15840 <__mempcpy_chk@plt+0x4814>
   126ec:	str	r0, [r4]
   126f0:	cmp	r0, #0
   126f4:	beq	1272c <__mempcpy_chk@plt+0x1700>
   126f8:	ldr	r1, [fp, #8]
   126fc:	mov	r2, #0
   12700:	str	r2, [r4, #12]
   12704:	str	r2, [r4, #16]
   12708:	str	r5, [r4, #24]
   1270c:	str	sl, [r4, #28]
   12710:	str	r1, [r4, #32]
   12714:	str	r2, [r4, #36]	; 0x24
   12718:	ldr	r1, [r4, #8]
   1271c:	add	r0, r0, r1, lsl #3
   12720:	str	r0, [r4, #4]
   12724:	mov	r9, r4
   12728:	b	12734 <__mempcpy_chk@plt+0x1708>
   1272c:	mov	r0, r4
   12730:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   12734:	mov	r0, r9
   12738:	sub	sp, fp, #28
   1273c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12740:	push	{r4, sl, fp, lr}
   12744:	add	fp, sp, #8
   12748:	mov	r4, r1
   1274c:	mov	r1, #3
   12750:	bl	159f4 <__mempcpy_chk@plt+0x49c8>
   12754:	udiv	r1, r0, r4
   12758:	mls	r0, r1, r4, r0
   1275c:	pop	{r4, sl, fp, pc}
   12760:	sub	r0, r0, r1
   12764:	clz	r0, r0
   12768:	lsr	r0, r0, #5
   1276c:	bx	lr
   12770:	mov	r1, r0
   12774:	ldr	r3, [r0, #20]
   12778:	mov	r0, #1
   1277c:	movw	r2, #27776	; 0x6c80
   12780:	movt	r2, #1
   12784:	cmp	r3, r2
   12788:	beq	1280c <__mempcpy_chk@plt+0x17e0>
   1278c:	vldr	s2, [pc, #124]	; 12810 <__mempcpy_chk@plt+0x17e4>
   12790:	vldr	s0, [r3, #8]
   12794:	vcmpe.f32	s0, s2
   12798:	vmrs	APSR_nzcv, fpscr
   1279c:	ble	12804 <__mempcpy_chk@plt+0x17d8>
   127a0:	vldr	s4, [pc, #108]	; 12814 <__mempcpy_chk@plt+0x17e8>
   127a4:	vcmpe.f32	s0, s4
   127a8:	vmrs	APSR_nzcv, fpscr
   127ac:	bpl	12804 <__mempcpy_chk@plt+0x17d8>
   127b0:	vldr	s4, [pc, #96]	; 12818 <__mempcpy_chk@plt+0x17ec>
   127b4:	vldr	s6, [r3, #12]
   127b8:	vcmpe.f32	s6, s4
   127bc:	vmrs	APSR_nzcv, fpscr
   127c0:	ble	12804 <__mempcpy_chk@plt+0x17d8>
   127c4:	vldr	s4, [r3]
   127c8:	vcmpe.f32	s4, #0.0
   127cc:	vmrs	APSR_nzcv, fpscr
   127d0:	blt	12804 <__mempcpy_chk@plt+0x17d8>
   127d4:	vadd.f32	s2, s4, s2
   127d8:	vcmpe.f32	s2, s0
   127dc:	vmrs	APSR_nzcv, fpscr
   127e0:	bpl	12804 <__mempcpy_chk@plt+0x17d8>
   127e4:	vldr	s0, [r3, #4]
   127e8:	vmov.f32	s4, #112	; 0x3f800000  1.0
   127ec:	vcmpe.f32	s0, s4
   127f0:	vmrs	APSR_nzcv, fpscr
   127f4:	bhi	12804 <__mempcpy_chk@plt+0x17d8>
   127f8:	vcmpe.f32	s2, s0
   127fc:	vmrs	APSR_nzcv, fpscr
   12800:	bxmi	lr
   12804:	str	r2, [r1, #20]
   12808:	mov	r0, #0
   1280c:	bx	lr
   12810:	stclcc	12, cr12, [ip, #820]	; 0x334
   12814:	svccc	0x00666666
   12818:	svccc	0x008ccccd
   1281c:	ldrb	r2, [r1, #16]
   12820:	cmp	r2, #0
   12824:	bne	12854 <__mempcpy_chk@plt+0x1828>
   12828:	vldr	s0, [r1, #8]
   1282c:	vmov	s2, r0
   12830:	vcvt.f32.u32	s2, s2
   12834:	vdiv.f32	s2, s2, s0
   12838:	vcvt.u32.f32	s0, s2
   1283c:	vldr	s4, [pc, #44]	; 12870 <__mempcpy_chk@plt+0x1844>
   12840:	mov	r0, #0
   12844:	vcmpe.f32	s2, s4
   12848:	vmrs	APSR_nzcv, fpscr
   1284c:	bxge	lr
   12850:	vmov	r0, s0
   12854:	push	{fp, lr}
   12858:	mov	fp, sp
   1285c:	bl	13040 <__mempcpy_chk@plt+0x2014>
   12860:	cmn	r0, #-536870911	; 0xe0000001
   12864:	movwhi	r0, #0
   12868:	pop	{fp, lr}
   1286c:	bx	lr
   12870:	svcmi	0x00800000
   12874:	push	{r4, r5, r6, r7, fp, lr}
   12878:	add	fp, sp, #16
   1287c:	mov	r4, r0
   12880:	ldr	r5, [r0]
   12884:	ldr	r0, [r0, #4]
   12888:	cmp	r5, r0
   1288c:	bcs	12924 <__mempcpy_chk@plt+0x18f8>
   12890:	mov	r6, #0
   12894:	ldr	r0, [r5]
   12898:	cmp	r0, #0
   1289c:	beq	12914 <__mempcpy_chk@plt+0x18e8>
   128a0:	ldr	r7, [r5, #4]
   128a4:	ldr	r1, [r4, #32]
   128a8:	cmp	r1, #0
   128ac:	mov	r0, r1
   128b0:	movwne	r0, #1
   128b4:	cmp	r7, #0
   128b8:	beq	128fc <__mempcpy_chk@plt+0x18d0>
   128bc:	tst	r0, #1
   128c0:	beq	128cc <__mempcpy_chk@plt+0x18a0>
   128c4:	ldr	r0, [r7]
   128c8:	blx	r1
   128cc:	str	r6, [r7]
   128d0:	ldr	r2, [r7, #4]
   128d4:	ldr	r0, [r4, #36]	; 0x24
   128d8:	str	r0, [r7, #4]
   128dc:	str	r7, [r4, #36]	; 0x24
   128e0:	ldr	r1, [r4, #32]
   128e4:	cmp	r1, #0
   128e8:	mov	r0, r1
   128ec:	movwne	r0, #1
   128f0:	cmp	r2, #0
   128f4:	mov	r7, r2
   128f8:	bne	128bc <__mempcpy_chk@plt+0x1890>
   128fc:	cmp	r0, #0
   12900:	beq	1290c <__mempcpy_chk@plt+0x18e0>
   12904:	ldr	r0, [r5]
   12908:	blx	r1
   1290c:	str	r6, [r5]
   12910:	str	r6, [r5, #4]
   12914:	ldr	r0, [r4, #4]
   12918:	add	r5, r5, #8
   1291c:	cmp	r5, r0
   12920:	bcc	12894 <__mempcpy_chk@plt+0x1868>
   12924:	mov	r0, #0
   12928:	str	r0, [r4, #12]
   1292c:	str	r0, [r4, #16]
   12930:	pop	{r4, r5, r6, r7, fp, pc}
   12934:	push	{r4, r5, r6, sl, fp, lr}
   12938:	add	fp, sp, #16
   1293c:	mov	r4, r0
   12940:	ldr	r0, [r0, #32]
   12944:	cmp	r0, #0
   12948:	ldrne	r0, [r4, #16]
   1294c:	cmpne	r0, #0
   12950:	beq	129a8 <__mempcpy_chk@plt+0x197c>
   12954:	ldr	r5, [r4]
   12958:	ldr	r0, [r4, #4]
   1295c:	cmp	r5, r0
   12960:	bcc	12978 <__mempcpy_chk@plt+0x194c>
   12964:	b	129a8 <__mempcpy_chk@plt+0x197c>
   12968:	ldr	r0, [r4, #4]
   1296c:	add	r5, r5, #8
   12970:	cmp	r5, r0
   12974:	bcs	129a8 <__mempcpy_chk@plt+0x197c>
   12978:	ldr	r0, [r5]
   1297c:	cmp	r0, #0
   12980:	cmpne	r5, #0
   12984:	beq	12968 <__mempcpy_chk@plt+0x193c>
   12988:	mov	r6, r5
   1298c:	ldr	r0, [r6]
   12990:	ldr	r1, [r4, #32]
   12994:	blx	r1
   12998:	ldr	r6, [r6, #4]
   1299c:	cmp	r6, #0
   129a0:	bne	1298c <__mempcpy_chk@plt+0x1960>
   129a4:	b	12968 <__mempcpy_chk@plt+0x193c>
   129a8:	ldr	r5, [r4]
   129ac:	ldr	r0, [r4, #4]
   129b0:	cmp	r5, r0
   129b4:	bcc	129cc <__mempcpy_chk@plt+0x19a0>
   129b8:	b	129f0 <__mempcpy_chk@plt+0x19c4>
   129bc:	ldr	r0, [r4, #4]
   129c0:	add	r5, r5, #8
   129c4:	cmp	r5, r0
   129c8:	bcs	129f0 <__mempcpy_chk@plt+0x19c4>
   129cc:	ldr	r0, [r5, #4]
   129d0:	cmp	r0, #0
   129d4:	beq	129bc <__mempcpy_chk@plt+0x1990>
   129d8:	ldr	r6, [r0, #4]
   129dc:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   129e0:	cmp	r6, #0
   129e4:	mov	r0, r6
   129e8:	bne	129d8 <__mempcpy_chk@plt+0x19ac>
   129ec:	b	129bc <__mempcpy_chk@plt+0x1990>
   129f0:	ldr	r0, [r4, #36]	; 0x24
   129f4:	cmp	r0, #0
   129f8:	beq	12a10 <__mempcpy_chk@plt+0x19e4>
   129fc:	ldr	r5, [r0, #4]
   12a00:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   12a04:	cmp	r5, #0
   12a08:	mov	r0, r5
   12a0c:	bne	129fc <__mempcpy_chk@plt+0x19d0>
   12a10:	ldr	r0, [r4]
   12a14:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   12a18:	mov	r0, r4
   12a1c:	pop	{r4, r5, r6, sl, fp, lr}
   12a20:	b	121e8 <__mempcpy_chk@plt+0x11bc>
   12a24:	push	{r4, r5, r6, sl, fp, lr}
   12a28:	add	fp, sp, #16
   12a2c:	sub	sp, sp, #40	; 0x28
   12a30:	mov	r2, r1
   12a34:	mov	r4, r0
   12a38:	ldr	r1, [r0, #20]
   12a3c:	mov	r0, r2
   12a40:	bl	1281c <__mempcpy_chk@plt+0x17f0>
   12a44:	mov	r5, #0
   12a48:	cmp	r0, #0
   12a4c:	beq	12b28 <__mempcpy_chk@plt+0x1afc>
   12a50:	mov	r6, r0
   12a54:	ldr	r0, [r4, #8]
   12a58:	cmp	r6, r0
   12a5c:	bne	12a68 <__mempcpy_chk@plt+0x1a3c>
   12a60:	mov	r5, #1
   12a64:	b	12b28 <__mempcpy_chk@plt+0x1afc>
   12a68:	mov	r0, r6
   12a6c:	mov	r1, #8
   12a70:	bl	15840 <__mempcpy_chk@plt+0x4814>
   12a74:	str	r0, [sp]
   12a78:	cmp	r0, #0
   12a7c:	beq	12b28 <__mempcpy_chk@plt+0x1afc>
   12a80:	str	r6, [sp, #8]
   12a84:	mov	r0, #0
   12a88:	str	r0, [sp, #12]
   12a8c:	str	r0, [sp, #16]
   12a90:	ldr	r0, [sp]
   12a94:	add	r0, r0, r6, lsl #3
   12a98:	str	r0, [sp, #4]
   12a9c:	add	r6, r4, #20
   12aa0:	ldm	r6, {r0, r1, r2, r3, r6}
   12aa4:	add	ip, sp, #20
   12aa8:	stm	ip, {r0, r1, r2, r3, r6}
   12aac:	mov	r0, sp
   12ab0:	mov	r1, r4
   12ab4:	mov	r2, #0
   12ab8:	bl	12b38 <__mempcpy_chk@plt+0x1b0c>
   12abc:	cmp	r0, #0
   12ac0:	beq	12ae4 <__mempcpy_chk@plt+0x1ab8>
   12ac4:	ldr	r0, [r4]
   12ac8:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   12acc:	ldm	sp, {r0, r1, r2, r3}
   12ad0:	stm	r4, {r0, r1, r2, r3}
   12ad4:	ldr	r0, [sp, #36]	; 0x24
   12ad8:	str	r0, [r4, #36]	; 0x24
   12adc:	mov	r5, #1
   12ae0:	b	12b28 <__mempcpy_chk@plt+0x1afc>
   12ae4:	ldr	r0, [sp, #36]	; 0x24
   12ae8:	str	r0, [r4, #36]	; 0x24
   12aec:	mov	r1, sp
   12af0:	mov	r0, r4
   12af4:	mov	r2, #1
   12af8:	bl	12b38 <__mempcpy_chk@plt+0x1b0c>
   12afc:	cmp	r0, #0
   12b00:	beq	12b34 <__mempcpy_chk@plt+0x1b08>
   12b04:	mov	r1, sp
   12b08:	mov	r5, #0
   12b0c:	mov	r0, r4
   12b10:	mov	r2, #0
   12b14:	bl	12b38 <__mempcpy_chk@plt+0x1b0c>
   12b18:	cmp	r0, #0
   12b1c:	beq	12b34 <__mempcpy_chk@plt+0x1b08>
   12b20:	ldr	r0, [sp]
   12b24:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   12b28:	mov	r0, r5
   12b2c:	sub	sp, fp, #16
   12b30:	pop	{r4, r5, r6, sl, fp, pc}
   12b34:	bl	11008 <abort@plt>
   12b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b3c:	add	fp, sp, #28
   12b40:	sub	sp, sp, #4
   12b44:	mov	r7, r0
   12b48:	ldr	r6, [r1]
   12b4c:	ldr	r0, [r1, #4]
   12b50:	cmp	r6, r0
   12b54:	bcs	12c58 <__mempcpy_chk@plt+0x1c2c>
   12b58:	mov	r9, r2
   12b5c:	mov	sl, r1
   12b60:	ldr	r0, [r6]
   12b64:	cmp	r0, #0
   12b68:	beq	12c48 <__mempcpy_chk@plt+0x1c1c>
   12b6c:	ldr	r4, [r6, #4]
   12b70:	cmp	r4, #0
   12b74:	beq	12bd0 <__mempcpy_chk@plt+0x1ba4>
   12b78:	ldr	r5, [r4]
   12b7c:	mov	r0, r7
   12b80:	mov	r1, r5
   12b84:	bl	1243c <__mempcpy_chk@plt+0x1410>
   12b88:	ldr	r1, [r0]
   12b8c:	ldr	r8, [r4, #4]
   12b90:	cmp	r1, #0
   12b94:	beq	12ba8 <__mempcpy_chk@plt+0x1b7c>
   12b98:	ldr	r1, [r0, #4]
   12b9c:	str	r1, [r4, #4]
   12ba0:	str	r4, [r0, #4]
   12ba4:	b	12bc4 <__mempcpy_chk@plt+0x1b98>
   12ba8:	str	r5, [r0]
   12bac:	ldr	r0, [r7, #12]
   12bb0:	add	r0, r0, #1
   12bb4:	str	r0, [r7, #12]
   12bb8:	mov	r0, r7
   12bbc:	mov	r1, r4
   12bc0:	bl	130e0 <__mempcpy_chk@plt+0x20b4>
   12bc4:	cmp	r8, #0
   12bc8:	mov	r4, r8
   12bcc:	bne	12b78 <__mempcpy_chk@plt+0x1b4c>
   12bd0:	mov	r0, #0
   12bd4:	str	r0, [r6, #4]
   12bd8:	cmp	r9, #0
   12bdc:	bne	12c48 <__mempcpy_chk@plt+0x1c1c>
   12be0:	ldr	r4, [r6]
   12be4:	mov	r0, r7
   12be8:	mov	r1, r4
   12bec:	bl	1243c <__mempcpy_chk@plt+0x1410>
   12bf0:	mov	r5, r0
   12bf4:	ldr	r0, [r0]
   12bf8:	cmp	r0, #0
   12bfc:	beq	12c24 <__mempcpy_chk@plt+0x1bf8>
   12c00:	mov	r0, r7
   12c04:	bl	12ec4 <__mempcpy_chk@plt+0x1e98>
   12c08:	cmp	r0, #0
   12c0c:	beq	12c64 <__mempcpy_chk@plt+0x1c38>
   12c10:	str	r4, [r0]
   12c14:	ldr	r1, [r5, #4]
   12c18:	str	r1, [r0, #4]
   12c1c:	str	r0, [r5, #4]
   12c20:	b	12c34 <__mempcpy_chk@plt+0x1c08>
   12c24:	str	r4, [r5]
   12c28:	ldr	r0, [r7, #12]
   12c2c:	add	r0, r0, #1
   12c30:	str	r0, [r7, #12]
   12c34:	mov	r0, #0
   12c38:	str	r0, [r6]
   12c3c:	ldr	r0, [sl, #12]
   12c40:	sub	r0, r0, #1
   12c44:	str	r0, [sl, #12]
   12c48:	add	r6, r6, #8
   12c4c:	ldr	r0, [sl, #4]
   12c50:	cmp	r6, r0
   12c54:	bcc	12b60 <__mempcpy_chk@plt+0x1b34>
   12c58:	mov	r0, #1
   12c5c:	sub	sp, fp, #28
   12c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c64:	mov	r0, #0
   12c68:	sub	sp, fp, #28
   12c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c70:	push	{r4, r5, r6, r7, fp, lr}
   12c74:	add	fp, sp, #16
   12c78:	sub	sp, sp, #8
   12c7c:	cmp	r1, #0
   12c80:	beq	12de0 <__mempcpy_chk@plt+0x1db4>
   12c84:	mov	r7, r2
   12c88:	mov	r5, r1
   12c8c:	mov	r4, r0
   12c90:	add	r2, sp, #4
   12c94:	mov	r6, #0
   12c98:	mov	r3, #0
   12c9c:	bl	12de8 <__mempcpy_chk@plt+0x1dbc>
   12ca0:	cmp	r0, #0
   12ca4:	beq	12cb4 <__mempcpy_chk@plt+0x1c88>
   12ca8:	cmp	r7, #0
   12cac:	strne	r0, [r7]
   12cb0:	b	12dd4 <__mempcpy_chk@plt+0x1da8>
   12cb4:	vldr	s0, [r4, #8]
   12cb8:	vldr	s2, [r4, #12]
   12cbc:	ldr	r0, [r4, #20]
   12cc0:	vldr	s4, [r0, #8]
   12cc4:	vcvt.f32.u32	s0, s0
   12cc8:	vcvt.f32.u32	s2, s2
   12ccc:	vmul.f32	s0, s4, s0
   12cd0:	vcmpe.f32	s0, s2
   12cd4:	vmrs	APSR_nzcv, fpscr
   12cd8:	bpl	12d6c <__mempcpy_chk@plt+0x1d40>
   12cdc:	mov	r0, r4
   12ce0:	bl	12770 <__mempcpy_chk@plt+0x1744>
   12ce4:	vldr	s0, [r4, #8]
   12ce8:	vldr	s4, [r4, #12]
   12cec:	ldr	r0, [r4, #20]
   12cf0:	vcvt.f32.u32	s2, s0
   12cf4:	vldr	s0, [r0, #8]
   12cf8:	vcvt.f32.u32	s4, s4
   12cfc:	vmul.f32	s6, s0, s2
   12d00:	vcmpe.f32	s6, s4
   12d04:	vmrs	APSR_nzcv, fpscr
   12d08:	bpl	12d6c <__mempcpy_chk@plt+0x1d40>
   12d0c:	vldr	s4, [r0, #12]
   12d10:	vmul.f32	s2, s4, s2
   12d14:	ldrb	r0, [r0, #16]
   12d18:	vmul.f32	s0, s0, s2
   12d1c:	mvn	r6, #0
   12d20:	vldr	s4, [pc, #188]	; 12de4 <__mempcpy_chk@plt+0x1db8>
   12d24:	cmp	r0, #0
   12d28:	vseleq.f32	s0, s0, s2
   12d2c:	vcmpe.f32	s0, s4
   12d30:	vmrs	APSR_nzcv, fpscr
   12d34:	bge	12dd4 <__mempcpy_chk@plt+0x1da8>
   12d38:	vcvt.u32.f32	s0, s0
   12d3c:	vmov	r1, s0
   12d40:	mov	r0, r4
   12d44:	bl	12a24 <__mempcpy_chk@plt+0x19f8>
   12d48:	cmp	r0, #0
   12d4c:	beq	12dd4 <__mempcpy_chk@plt+0x1da8>
   12d50:	add	r2, sp, #4
   12d54:	mov	r0, r4
   12d58:	mov	r1, r5
   12d5c:	mov	r3, #0
   12d60:	bl	12de8 <__mempcpy_chk@plt+0x1dbc>
   12d64:	cmp	r0, #0
   12d68:	bne	12de0 <__mempcpy_chk@plt+0x1db4>
   12d6c:	ldr	r6, [sp, #4]
   12d70:	ldr	r0, [r6]
   12d74:	cmp	r0, #0
   12d78:	beq	12dac <__mempcpy_chk@plt+0x1d80>
   12d7c:	mov	r0, r4
   12d80:	bl	12ec4 <__mempcpy_chk@plt+0x1e98>
   12d84:	cmp	r0, #0
   12d88:	beq	12dd0 <__mempcpy_chk@plt+0x1da4>
   12d8c:	str	r5, [r0]
   12d90:	ldr	r1, [r6, #4]
   12d94:	str	r1, [r0, #4]
   12d98:	str	r0, [r6, #4]
   12d9c:	ldr	r0, [r4, #16]
   12da0:	add	r0, r0, #1
   12da4:	str	r0, [r4, #16]
   12da8:	b	12dc8 <__mempcpy_chk@plt+0x1d9c>
   12dac:	str	r5, [r6]
   12db0:	ldr	r0, [r4, #12]
   12db4:	ldr	r1, [r4, #16]
   12db8:	add	r1, r1, #1
   12dbc:	add	r0, r0, #1
   12dc0:	str	r0, [r4, #12]
   12dc4:	str	r1, [r4, #16]
   12dc8:	mov	r6, #1
   12dcc:	b	12dd4 <__mempcpy_chk@plt+0x1da8>
   12dd0:	mvn	r6, #0
   12dd4:	mov	r0, r6
   12dd8:	sub	sp, fp, #16
   12ddc:	pop	{r4, r5, r6, r7, fp, pc}
   12de0:	bl	11008 <abort@plt>
   12de4:	svcmi	0x00800000
   12de8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12dec:	add	fp, sp, #24
   12df0:	mov	r8, r3
   12df4:	mov	r4, r2
   12df8:	mov	r7, r1
   12dfc:	mov	r5, r0
   12e00:	bl	1243c <__mempcpy_chk@plt+0x1410>
   12e04:	str	r0, [r4]
   12e08:	ldr	r1, [r0]
   12e0c:	mov	r4, #0
   12e10:	cmp	r1, #0
   12e14:	beq	12ebc <__mempcpy_chk@plt+0x1e90>
   12e18:	mov	r6, r0
   12e1c:	cmp	r1, r7
   12e20:	beq	12e38 <__mempcpy_chk@plt+0x1e0c>
   12e24:	ldr	r2, [r5, #28]
   12e28:	mov	r0, r7
   12e2c:	blx	r2
   12e30:	cmp	r0, #0
   12e34:	beq	12e60 <__mempcpy_chk@plt+0x1e34>
   12e38:	ldr	r4, [r6]
   12e3c:	cmp	r8, #0
   12e40:	beq	12ebc <__mempcpy_chk@plt+0x1e90>
   12e44:	ldr	r1, [r6, #4]
   12e48:	cmp	r1, #0
   12e4c:	beq	12eb4 <__mempcpy_chk@plt+0x1e88>
   12e50:	ldm	r1, {r0, r2}
   12e54:	stm	r6, {r0, r2}
   12e58:	b	12ea4 <__mempcpy_chk@plt+0x1e78>
   12e5c:	ldr	r6, [r6]
   12e60:	ldr	r0, [r6, #4]!
   12e64:	cmp	r0, #0
   12e68:	beq	12ebc <__mempcpy_chk@plt+0x1e90>
   12e6c:	ldr	r1, [r0]
   12e70:	cmp	r1, r7
   12e74:	beq	12e8c <__mempcpy_chk@plt+0x1e60>
   12e78:	ldr	r2, [r5, #28]
   12e7c:	mov	r0, r7
   12e80:	blx	r2
   12e84:	cmp	r0, #0
   12e88:	beq	12e5c <__mempcpy_chk@plt+0x1e30>
   12e8c:	ldr	r1, [r6]
   12e90:	ldr	r4, [r1]
   12e94:	cmp	r8, #0
   12e98:	beq	12ebc <__mempcpy_chk@plt+0x1e90>
   12e9c:	ldr	r0, [r1, #4]
   12ea0:	str	r0, [r6]
   12ea4:	mov	r0, r5
   12ea8:	bl	130e0 <__mempcpy_chk@plt+0x20b4>
   12eac:	mov	r0, r4
   12eb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12eb4:	mov	r0, #0
   12eb8:	str	r0, [r6]
   12ebc:	mov	r0, r4
   12ec0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ec4:	mov	r1, r0
   12ec8:	ldr	r0, [r0, #36]	; 0x24
   12ecc:	cmp	r0, #0
   12ed0:	ldrne	r2, [r0, #4]
   12ed4:	strne	r2, [r1, #36]	; 0x24
   12ed8:	bxne	lr
   12edc:	push	{fp, lr}
   12ee0:	mov	fp, sp
   12ee4:	mov	r0, #8
   12ee8:	bl	15894 <__mempcpy_chk@plt+0x4868>
   12eec:	pop	{fp, pc}
   12ef0:	push	{r4, sl, fp, lr}
   12ef4:	add	fp, sp, #8
   12ef8:	sub	sp, sp, #8
   12efc:	mov	r4, r1
   12f00:	add	r2, sp, #4
   12f04:	bl	12c70 <__mempcpy_chk@plt+0x1c44>
   12f08:	cmn	r0, #1
   12f0c:	beq	12f20 <__mempcpy_chk@plt+0x1ef4>
   12f10:	ldr	r1, [sp, #4]
   12f14:	cmp	r0, #0
   12f18:	moveq	r4, r1
   12f1c:	b	12f24 <__mempcpy_chk@plt+0x1ef8>
   12f20:	mov	r4, #0
   12f24:	mov	r0, r4
   12f28:	sub	sp, fp, #8
   12f2c:	pop	{r4, sl, fp, pc}
   12f30:	push	{r4, r5, r6, sl, fp, lr}
   12f34:	add	fp, sp, #16
   12f38:	sub	sp, sp, #8
   12f3c:	mov	r4, r0
   12f40:	add	r2, sp, #4
   12f44:	mov	r3, #1
   12f48:	bl	12de8 <__mempcpy_chk@plt+0x1dbc>
   12f4c:	mov	r5, r0
   12f50:	cmp	r0, #0
   12f54:	beq	13030 <__mempcpy_chk@plt+0x2004>
   12f58:	ldr	r0, [r4, #16]
   12f5c:	sub	r0, r0, #1
   12f60:	str	r0, [r4, #16]
   12f64:	ldr	r0, [sp, #4]
   12f68:	ldr	r0, [r0]
   12f6c:	cmp	r0, #0
   12f70:	bne	13030 <__mempcpy_chk@plt+0x2004>
   12f74:	ldr	r0, [r4, #12]
   12f78:	sub	r0, r0, #1
   12f7c:	vldr	s0, [r4, #8]
   12f80:	str	r0, [r4, #12]
   12f84:	ldr	r1, [r4, #20]
   12f88:	vldr	s2, [r1]
   12f8c:	vcvt.f32.u32	s0, s0
   12f90:	vmov	s4, r0
   12f94:	vcvt.f32.u32	s4, s4
   12f98:	vmul.f32	s0, s2, s0
   12f9c:	vcmpe.f32	s0, s4
   12fa0:	vmrs	APSR_nzcv, fpscr
   12fa4:	ble	13030 <__mempcpy_chk@plt+0x2004>
   12fa8:	mov	r0, r4
   12fac:	bl	12770 <__mempcpy_chk@plt+0x1744>
   12fb0:	vldr	s0, [r4, #8]
   12fb4:	vldr	s2, [r4, #12]
   12fb8:	ldr	r0, [r4, #20]
   12fbc:	vcvt.f32.u32	s0, s0
   12fc0:	vldr	s4, [r0]
   12fc4:	vcvt.f32.u32	s2, s2
   12fc8:	vmul.f32	s4, s4, s0
   12fcc:	vcmpe.f32	s4, s2
   12fd0:	vmrs	APSR_nzcv, fpscr
   12fd4:	ble	13030 <__mempcpy_chk@plt+0x2004>
   12fd8:	vldr	s2, [r0, #4]
   12fdc:	ldrb	r1, [r0, #16]
   12fe0:	vmul.f32	s0, s2, s0
   12fe4:	cmp	r1, #0
   12fe8:	vldreq	s2, [r0, #8]
   12fec:	vmuleq.f32	s0, s0, s2
   12ff0:	vcvt.u32.f32	s0, s0
   12ff4:	vmov	r1, s0
   12ff8:	mov	r0, r4
   12ffc:	bl	12a24 <__mempcpy_chk@plt+0x19f8>
   13000:	cmp	r0, #0
   13004:	bne	13030 <__mempcpy_chk@plt+0x2004>
   13008:	ldr	r0, [r4, #36]	; 0x24
   1300c:	cmp	r0, #0
   13010:	beq	13028 <__mempcpy_chk@plt+0x1ffc>
   13014:	ldr	r6, [r0, #4]
   13018:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   1301c:	cmp	r6, #0
   13020:	mov	r0, r6
   13024:	bne	13014 <__mempcpy_chk@plt+0x1fe8>
   13028:	mov	r0, #0
   1302c:	str	r0, [r4, #36]	; 0x24
   13030:	mov	r0, r5
   13034:	sub	sp, fp, #16
   13038:	pop	{r4, r5, r6, sl, fp, pc}
   1303c:	b	12f30 <__mempcpy_chk@plt+0x1f04>
   13040:	push	{r4, r5, fp, lr}
   13044:	add	fp, sp, #8
   13048:	cmp	r0, #10
   1304c:	movls	r0, #10
   13050:	orr	r5, r0, #1
   13054:	mvn	r4, #0
   13058:	cmn	r5, #1
   1305c:	bne	13074 <__mempcpy_chk@plt+0x2048>
   13060:	mov	r0, r4
   13064:	pop	{r4, r5, fp, pc}
   13068:	add	r5, r5, #2
   1306c:	cmn	r5, #1
   13070:	beq	13060 <__mempcpy_chk@plt+0x2034>
   13074:	mov	r0, r5
   13078:	bl	13090 <__mempcpy_chk@plt+0x2064>
   1307c:	cmp	r0, #0
   13080:	beq	13068 <__mempcpy_chk@plt+0x203c>
   13084:	mov	r4, r5
   13088:	mov	r0, r4
   1308c:	pop	{r4, r5, fp, pc}
   13090:	mov	ip, #3
   13094:	cmp	r0, #10
   13098:	bcc	130cc <__mempcpy_chk@plt+0x20a0>
   1309c:	mov	ip, #3
   130a0:	mov	r2, #9
   130a4:	mov	r3, #16
   130a8:	udiv	r1, r0, ip
   130ac:	mls	r1, r1, ip, r0
   130b0:	cmp	r1, #0
   130b4:	beq	130cc <__mempcpy_chk@plt+0x20a0>
   130b8:	add	r2, r3, r2
   130bc:	add	r3, r3, #8
   130c0:	add	ip, ip, #2
   130c4:	cmp	r2, r0
   130c8:	bcc	130a8 <__mempcpy_chk@plt+0x207c>
   130cc:	udiv	r1, r0, ip
   130d0:	mls	r0, r1, ip, r0
   130d4:	cmp	r0, #0
   130d8:	movwne	r0, #1
   130dc:	bx	lr
   130e0:	mov	r2, #0
   130e4:	str	r2, [r1]
   130e8:	ldr	r2, [r0, #36]	; 0x24
   130ec:	str	r2, [r1, #4]
   130f0:	str	r1, [r0, #36]	; 0x24
   130f4:	bx	lr
   130f8:	push	{r4, r5, fp, lr}
   130fc:	add	fp, sp, #8
   13100:	mov	r4, r1
   13104:	mov	r5, r0
   13108:	ldr	r0, [r0]
   1310c:	bl	15fc4 <__mempcpy_chk@plt+0x4f98>
   13110:	ldrd	r2, [r5, #8]
   13114:	eor	r0, r2, r0
   13118:	mov	r1, r3
   1311c:	mov	r2, r4
   13120:	mov	r3, #0
   13124:	bl	16230 <__mempcpy_chk@plt+0x5204>
   13128:	mov	r0, r2
   1312c:	pop	{r4, r5, fp, pc}
   13130:	push	{r4, r5, r6, r7, fp, lr}
   13134:	add	fp, sp, #16
   13138:	ldrd	r2, [r1, #8]
   1313c:	ldrd	r4, [r0, #8]
   13140:	eor	r3, r5, r3
   13144:	eor	r2, r4, r2
   13148:	orrs	r2, r2, r3
   1314c:	mov	r2, #0
   13150:	bne	13180 <__mempcpy_chk@plt+0x2154>
   13154:	ldrd	r4, [r1, #16]
   13158:	ldrd	r6, [r0, #16]
   1315c:	eor	r3, r7, r5
   13160:	eor	r7, r6, r4
   13164:	orrs	r3, r7, r3
   13168:	bne	13180 <__mempcpy_chk@plt+0x2154>
   1316c:	ldr	r1, [r1]
   13170:	ldr	r0, [r0]
   13174:	bl	10dec <strcmp@plt>
   13178:	clz	r0, r0
   1317c:	lsr	r2, r0, #5
   13180:	mov	r0, r2
   13184:	pop	{r4, r5, r6, r7, fp, pc}
   13188:	push	{r4, sl, fp, lr}
   1318c:	add	fp, sp, #8
   13190:	mov	r4, r0
   13194:	ldr	r0, [r0]
   13198:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   1319c:	mov	r0, r4
   131a0:	pop	{r4, sl, fp, lr}
   131a4:	b	121e8 <__mempcpy_chk@plt+0x11bc>
   131a8:	push	{r4, r5, fp, lr}
   131ac:	add	fp, sp, #8
   131b0:	cmp	r0, #0
   131b4:	beq	13248 <__mempcpy_chk@plt+0x221c>
   131b8:	mov	r4, r0
   131bc:	mov	r1, #47	; 0x2f
   131c0:	bl	10fcc <strrchr@plt>
   131c4:	cmp	r0, #0
   131c8:	mov	r5, r4
   131cc:	addne	r5, r0, #1
   131d0:	sub	r0, r5, r4
   131d4:	cmp	r0, #7
   131d8:	blt	1322c <__mempcpy_chk@plt+0x2200>
   131dc:	sub	r0, r5, #7
   131e0:	movw	r1, #27852	; 0x6ccc
   131e4:	movt	r1, #1
   131e8:	mov	r2, #7
   131ec:	bl	10ffc <strncmp@plt>
   131f0:	cmp	r0, #0
   131f4:	bne	1322c <__mempcpy_chk@plt+0x2200>
   131f8:	movw	r1, #27860	; 0x6cd4
   131fc:	movt	r1, #1
   13200:	mov	r0, r5
   13204:	mov	r2, #3
   13208:	bl	10ffc <strncmp@plt>
   1320c:	cmp	r0, #0
   13210:	beq	1321c <__mempcpy_chk@plt+0x21f0>
   13214:	mov	r4, r5
   13218:	b	1322c <__mempcpy_chk@plt+0x2200>
   1321c:	add	r4, r5, #3
   13220:	movw	r0, #33072	; 0x8130
   13224:	movt	r0, #2
   13228:	str	r4, [r0]
   1322c:	movw	r0, #33076	; 0x8134
   13230:	movt	r0, #2
   13234:	str	r4, [r0]
   13238:	movw	r0, #33108	; 0x8154
   1323c:	movt	r0, #2
   13240:	str	r4, [r0]
   13244:	pop	{r4, r5, fp, pc}
   13248:	movw	r0, #33088	; 0x8140
   1324c:	movt	r0, #2
   13250:	ldr	r3, [r0]
   13254:	movw	r0, #27796	; 0x6c94
   13258:	movt	r0, #1
   1325c:	mov	r1, #55	; 0x37
   13260:	mov	r2, #1
   13264:	bl	10ea0 <fwrite@plt>
   13268:	bl	11008 <abort@plt>
   1326c:	push	{r4, r5, r6, sl, fp, lr}
   13270:	add	fp, sp, #16
   13274:	mov	r4, r0
   13278:	movw	r0, #33112	; 0x8158
   1327c:	movt	r0, #2
   13280:	cmp	r4, #0
   13284:	moveq	r4, r0
   13288:	bl	10f60 <__errno_location@plt>
   1328c:	mov	r5, r0
   13290:	ldr	r6, [r0]
   13294:	mov	r0, r4
   13298:	mov	r1, #48	; 0x30
   1329c:	bl	15740 <__mempcpy_chk@plt+0x4714>
   132a0:	str	r6, [r5]
   132a4:	pop	{r4, r5, r6, sl, fp, pc}
   132a8:	movw	r1, #33112	; 0x8158
   132ac:	movt	r1, #2
   132b0:	cmp	r0, #0
   132b4:	movne	r1, r0
   132b8:	ldr	r0, [r1]
   132bc:	bx	lr
   132c0:	movw	r2, #33112	; 0x8158
   132c4:	movt	r2, #2
   132c8:	cmp	r0, #0
   132cc:	movne	r2, r0
   132d0:	str	r1, [r2]
   132d4:	bx	lr
   132d8:	movw	r3, #33112	; 0x8158
   132dc:	movt	r3, #2
   132e0:	cmp	r0, #0
   132e4:	movne	r3, r0
   132e8:	ubfx	r0, r1, #5, #3
   132ec:	add	r0, r3, r0, lsl #2
   132f0:	ldr	r3, [r0, #8]
   132f4:	and	r1, r1, #31
   132f8:	eor	r2, r2, r3, lsr r1
   132fc:	and	r2, r2, #1
   13300:	eor	r2, r3, r2, lsl r1
   13304:	str	r2, [r0, #8]
   13308:	mov	r0, #1
   1330c:	and	r0, r0, r3, lsr r1
   13310:	bx	lr
   13314:	movw	r2, #33112	; 0x8158
   13318:	movt	r2, #2
   1331c:	cmp	r0, #0
   13320:	movne	r2, r0
   13324:	ldr	r0, [r2, #4]
   13328:	str	r1, [r2, #4]
   1332c:	bx	lr
   13330:	movw	r3, #33112	; 0x8158
   13334:	movt	r3, #2
   13338:	cmp	r0, #0
   1333c:	movne	r3, r0
   13340:	mov	r0, #10
   13344:	str	r0, [r3]
   13348:	cmp	r1, #0
   1334c:	cmpne	r2, #0
   13350:	bne	13360 <__mempcpy_chk@plt+0x2334>
   13354:	push	{fp, lr}
   13358:	mov	fp, sp
   1335c:	bl	11008 <abort@plt>
   13360:	str	r1, [r3, #40]	; 0x28
   13364:	str	r2, [r3, #44]	; 0x2c
   13368:	bx	lr
   1336c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13370:	add	fp, sp, #28
   13374:	sub	sp, sp, #20
   13378:	mov	r8, r3
   1337c:	mov	r9, r2
   13380:	mov	sl, r1
   13384:	mov	r7, r0
   13388:	ldr	r0, [fp, #8]
   1338c:	movw	r5, #33112	; 0x8158
   13390:	movt	r5, #2
   13394:	cmp	r0, #0
   13398:	movne	r5, r0
   1339c:	bl	10f60 <__errno_location@plt>
   133a0:	mov	r4, r0
   133a4:	ldm	r5, {r0, r1}
   133a8:	ldr	r2, [r5, #40]	; 0x28
   133ac:	ldr	r3, [r5, #44]	; 0x2c
   133b0:	ldr	r6, [r4]
   133b4:	add	r5, r5, #8
   133b8:	stm	sp, {r0, r1, r5}
   133bc:	str	r2, [sp, #12]
   133c0:	str	r3, [sp, #16]
   133c4:	mov	r0, r7
   133c8:	mov	r1, sl
   133cc:	mov	r2, r9
   133d0:	mov	r3, r8
   133d4:	bl	133e4 <__mempcpy_chk@plt+0x23b8>
   133d8:	str	r6, [r4]
   133dc:	sub	sp, fp, #28
   133e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133e8:	add	fp, sp, #28
   133ec:	sub	sp, sp, #156	; 0x9c
   133f0:	mov	r9, r3
   133f4:	str	r2, [fp, #-84]	; 0xffffffac
   133f8:	mov	r6, r1
   133fc:	mov	r7, r0
   13400:	ldr	r0, [fp, #12]
   13404:	and	r1, r0, #4
   13408:	str	r1, [sp, #32]
   1340c:	and	r1, r0, #1
   13410:	str	r1, [sp, #36]	; 0x24
   13414:	ubfx	sl, r0, #1, #1
   13418:	bl	10eb8 <__ctype_get_mb_cur_max@plt>
   1341c:	str	r0, [sp, #40]	; 0x28
   13420:	ldr	r0, [fp, #24]
   13424:	str	r0, [sp, #76]	; 0x4c
   13428:	ldr	r0, [fp, #20]
   1342c:	str	r0, [sp, #68]	; 0x44
   13430:	ldr	r0, [fp, #8]
   13434:	str	r0, [fp, #-60]	; 0xffffffc4
   13438:	mov	r0, #0
   1343c:	str	r0, [sp, #72]	; 0x48
   13440:	mov	r0, #0
   13444:	str	r0, [sp, #92]	; 0x5c
   13448:	mov	r0, #0
   1344c:	str	r0, [fp, #-72]	; 0xffffffb8
   13450:	mov	r0, #0
   13454:	mov	r1, #0
   13458:	str	r1, [fp, #-56]	; 0xffffffc8
   1345c:	mov	r1, #0
   13460:	str	r1, [sp, #56]	; 0x38
   13464:	mov	r5, #1
   13468:	str	r7, [sp, #80]	; 0x50
   1346c:	mov	r4, r6
   13470:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13474:	cmp	r6, #10
   13478:	bhi	143e0 <__mempcpy_chk@plt+0x33b4>
   1347c:	add	r1, pc, #20
   13480:	mov	r8, #0
   13484:	mov	r2, #1
   13488:	mov	r3, #0
   1348c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13490:	mov	lr, r9
   13494:	ldr	pc, [r1, r6, lsl #2]
   13498:	andeq	r3, r1, r0, ror r5
   1349c:	andeq	r3, r1, r0, lsr #11
   134a0:	andeq	r3, r1, r0, ror #10
   134a4:	andeq	r3, r1, r8, asr r5
   134a8:	muleq	r1, r4, r5
   134ac:	strdeq	r3, [r1], -r4
   134b0:	andeq	r3, r1, r0, lsl #11
   134b4:	andeq	r3, r1, r0, asr r6
   134b8:	andeq	r3, r1, r4, asr #9
   134bc:	andeq	r3, r1, r4, asr #9
   134c0:	andeq	r3, r1, ip, ror #9
   134c4:	movw	r0, #27944	; 0x6d28
   134c8:	movt	r0, #1
   134cc:	mov	r1, r6
   134d0:	bl	149ec <__mempcpy_chk@plt+0x39c0>
   134d4:	str	r0, [sp, #68]	; 0x44
   134d8:	movw	r0, #27946	; 0x6d2a
   134dc:	movt	r0, #1
   134e0:	mov	r1, r6
   134e4:	bl	149ec <__mempcpy_chk@plt+0x39c0>
   134e8:	str	r0, [sp, #76]	; 0x4c
   134ec:	mov	r8, #0
   134f0:	tst	sl, #1
   134f4:	bne	1352c <__mempcpy_chk@plt+0x2500>
   134f8:	ldr	r0, [sp, #68]	; 0x44
   134fc:	ldrb	r0, [r0]
   13500:	cmp	r0, #0
   13504:	beq	1352c <__mempcpy_chk@plt+0x2500>
   13508:	ldr	r1, [sp, #68]	; 0x44
   1350c:	add	r1, r1, #1
   13510:	mov	r8, #0
   13514:	cmp	r8, r4
   13518:	strbcc	r0, [r7, r8]
   1351c:	ldrb	r0, [r1, r8]
   13520:	add	r8, r8, #1
   13524:	cmp	r0, #0
   13528:	bne	13514 <__mempcpy_chk@plt+0x24e8>
   1352c:	ldr	r6, [sp, #76]	; 0x4c
   13530:	mov	r0, r6
   13534:	bl	10f54 <strlen@plt>
   13538:	str	r0, [fp, #-72]	; 0xffffffb8
   1353c:	str	r6, [sp, #92]	; 0x5c
   13540:	mov	r2, #1
   13544:	mov	r3, sl
   13548:	ldr	ip, [fp, #-84]	; 0xffffffac
   1354c:	mov	lr, r9
   13550:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13554:	b	13650 <__mempcpy_chk@plt+0x2624>
   13558:	mov	r0, #1
   1355c:	b	135a0 <__mempcpy_chk@plt+0x2574>
   13560:	tst	sl, #1
   13564:	bne	135a0 <__mempcpy_chk@plt+0x2574>
   13568:	mov	r2, r0
   1356c:	b	135c8 <__mempcpy_chk@plt+0x259c>
   13570:	mov	r6, #0
   13574:	mov	r8, #0
   13578:	mov	r2, r0
   1357c:	b	1364c <__mempcpy_chk@plt+0x2620>
   13580:	mov	r0, #1
   13584:	str	r0, [fp, #-72]	; 0xffffffb8
   13588:	mov	r8, #0
   1358c:	mov	r6, #5
   13590:	b	1360c <__mempcpy_chk@plt+0x25e0>
   13594:	mov	r2, #1
   13598:	tst	sl, #1
   1359c:	beq	135c8 <__mempcpy_chk@plt+0x259c>
   135a0:	mov	r1, #1
   135a4:	str	r1, [fp, #-72]	; 0xffffffb8
   135a8:	mov	r8, #0
   135ac:	mov	r6, #2
   135b0:	movw	r1, #27946	; 0x6d2a
   135b4:	movt	r1, #1
   135b8:	str	r1, [sp, #92]	; 0x5c
   135bc:	mov	r2, r0
   135c0:	mov	r3, #1
   135c4:	b	13650 <__mempcpy_chk@plt+0x2624>
   135c8:	mov	r8, #1
   135cc:	mov	r6, #2
   135d0:	cmp	r4, #0
   135d4:	movne	r0, #39	; 0x27
   135d8:	strbne	r0, [r7]
   135dc:	movw	r0, #27946	; 0x6d2a
   135e0:	movt	r0, #1
   135e4:	str	r0, [sp, #92]	; 0x5c
   135e8:	mov	r0, #1
   135ec:	str	r0, [fp, #-72]	; 0xffffffb8
   135f0:	b	1364c <__mempcpy_chk@plt+0x2620>
   135f4:	mov	r6, #5
   135f8:	tst	sl, #1
   135fc:	beq	13624 <__mempcpy_chk@plt+0x25f8>
   13600:	mov	r0, #1
   13604:	str	r0, [fp, #-72]	; 0xffffffb8
   13608:	mov	r8, #0
   1360c:	movw	r0, #27942	; 0x6d26
   13610:	movt	r0, #1
   13614:	str	r0, [sp, #92]	; 0x5c
   13618:	mov	r2, #1
   1361c:	mov	r3, #1
   13620:	b	13650 <__mempcpy_chk@plt+0x2624>
   13624:	cmp	r4, #0
   13628:	movne	r0, #34	; 0x22
   1362c:	strbne	r0, [r7]
   13630:	mov	r8, #1
   13634:	movw	r0, #27942	; 0x6d26
   13638:	movt	r0, #1
   1363c:	str	r0, [sp, #92]	; 0x5c
   13640:	mov	r0, #1
   13644:	str	r0, [fp, #-72]	; 0xffffffb8
   13648:	mov	r2, #1
   1364c:	mov	r3, #0
   13650:	ldr	r0, [fp, #16]
   13654:	cmp	r0, #0
   13658:	movwne	r0, #1
   1365c:	and	r0, r0, r3
   13660:	str	r0, [fp, #-88]	; 0xffffffa8
   13664:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13668:	cmp	r0, #0
   1366c:	movwne	r0, #1
   13670:	and	r1, r0, r3
   13674:	and	r1, r2, r1
   13678:	str	r1, [sp, #48]	; 0x30
   1367c:	str	r6, [fp, #-60]	; 0xffffffc4
   13680:	subs	r6, r6, #2
   13684:	clz	r1, r6
   13688:	lsr	r1, r1, #5
   1368c:	and	r1, r1, r3
   13690:	str	r1, [sp, #60]	; 0x3c
   13694:	str	r6, [fp, #-80]	; 0xffffffb0
   13698:	mov	r1, r6
   1369c:	movwne	r1, #1
   136a0:	str	r3, [fp, #-76]	; 0xffffffb4
   136a4:	eor	r3, r3, #1
   136a8:	str	r3, [sp, #88]	; 0x58
   136ac:	orr	r3, r1, r3
   136b0:	str	r3, [sp, #64]	; 0x40
   136b4:	and	r1, r1, r2
   136b8:	str	r1, [fp, #-68]	; 0xffffffbc
   136bc:	and	r0, r0, r1
   136c0:	str	r0, [fp, #-64]	; 0xffffffc0
   136c4:	str	r2, [sp, #84]	; 0x54
   136c8:	eor	r0, r2, #1
   136cc:	str	r0, [sp, #52]	; 0x34
   136d0:	mov	r6, #0
   136d4:	cmn	lr, #1
   136d8:	beq	136e8 <__mempcpy_chk@plt+0x26bc>
   136dc:	cmp	r6, lr
   136e0:	bne	136f4 <__mempcpy_chk@plt+0x26c8>
   136e4:	b	14260 <__mempcpy_chk@plt+0x3234>
   136e8:	ldrb	r0, [ip, r6]
   136ec:	cmp	r0, #0
   136f0:	beq	14260 <__mempcpy_chk@plt+0x3234>
   136f4:	str	r5, [fp, #-48]	; 0xffffffd0
   136f8:	mov	sl, #0
   136fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13700:	cmp	r0, #0
   13704:	beq	13738 <__mempcpy_chk@plt+0x270c>
   13708:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1370c:	add	r5, r6, r0
   13710:	cmp	r0, #2
   13714:	bcc	13730 <__mempcpy_chk@plt+0x2704>
   13718:	cmn	lr, #1
   1371c:	bne	13730 <__mempcpy_chk@plt+0x2704>
   13720:	mov	r0, ip
   13724:	bl	10f54 <strlen@plt>
   13728:	ldr	ip, [fp, #-84]	; 0xffffffac
   1372c:	mov	lr, r0
   13730:	cmp	r5, lr
   13734:	bls	13744 <__mempcpy_chk@plt+0x2718>
   13738:	mov	r0, #0
   1373c:	str	r0, [fp, #-52]	; 0xffffffcc
   13740:	b	13790 <__mempcpy_chk@plt+0x2764>
   13744:	mov	r5, r4
   13748:	mov	r4, lr
   1374c:	add	r0, ip, r6
   13750:	ldr	r1, [sp, #92]	; 0x5c
   13754:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13758:	bl	10e4c <memcmp@plt>
   1375c:	cmp	r0, #0
   13760:	mov	r1, r0
   13764:	movwne	r1, #1
   13768:	ldr	r2, [sp, #88]	; 0x58
   1376c:	orr	r1, r1, r2
   13770:	tst	r1, #1
   13774:	beq	14324 <__mempcpy_chk@plt+0x32f8>
   13778:	clz	r0, r0
   1377c:	lsr	r0, r0, #5
   13780:	str	r0, [fp, #-52]	; 0xffffffcc
   13784:	ldr	ip, [fp, #-84]	; 0xffffffac
   13788:	mov	lr, r4
   1378c:	mov	r4, r5
   13790:	ldrb	r5, [ip, r6]
   13794:	cmp	r5, #126	; 0x7e
   13798:	bhi	13b54 <__mempcpy_chk@plt+0x2b28>
   1379c:	mov	r9, #1
   137a0:	mov	r2, #110	; 0x6e
   137a4:	mov	r0, #97	; 0x61
   137a8:	add	r3, pc, #4
   137ac:	mov	r1, #0
   137b0:	ldr	pc, [r3, r5, lsl #2]
   137b4:	andeq	r3, r1, ip, asr #20
   137b8:	andeq	r3, r1, r4, asr fp
   137bc:	andeq	r3, r1, r4, asr fp
   137c0:	andeq	r3, r1, r4, asr fp
   137c4:	andeq	r3, r1, r4, asr fp
   137c8:	andeq	r3, r1, r4, asr fp
   137cc:	andeq	r3, r1, r4, asr fp
   137d0:	andeq	r3, r1, r8, lsl ip
   137d4:	andeq	r3, r1, ip, lsr #20
   137d8:	andeq	r3, r1, r4, lsr #20
   137dc:	andeq	r3, r1, r8, lsr sl
   137e0:			; <UNDEFINED> instruction: 0x00013abc
   137e4:	andeq	r3, r1, ip, lsl sl
   137e8:	andeq	r3, r1, r4, lsr sl
   137ec:	andeq	r3, r1, r4, asr fp
   137f0:	andeq	r3, r1, r4, asr fp
   137f4:	andeq	r3, r1, r4, asr fp
   137f8:	andeq	r3, r1, r4, asr fp
   137fc:	andeq	r3, r1, r4, asr fp
   13800:	andeq	r3, r1, r4, asr fp
   13804:	andeq	r3, r1, r4, asr fp
   13808:	andeq	r3, r1, r4, asr fp
   1380c:	andeq	r3, r1, r4, asr fp
   13810:	andeq	r3, r1, r4, asr fp
   13814:	andeq	r3, r1, r4, asr fp
   13818:	andeq	r3, r1, r4, asr fp
   1381c:	andeq	r3, r1, r4, asr fp
   13820:	andeq	r3, r1, r4, asr fp
   13824:	andeq	r3, r1, r4, asr fp
   13828:	andeq	r3, r1, r4, asr fp
   1382c:	andeq	r3, r1, r4, asr fp
   13830:	andeq	r3, r1, r4, asr fp
   13834:	andeq	r3, r1, r8, asr #23
   13838:	andeq	r3, r1, ip, asr #23
   1383c:	andeq	r3, r1, ip, asr #23
   13840:	andeq	r3, r1, r4, asr #19
   13844:	andeq	r3, r1, ip, asr #23
   13848:			; <UNDEFINED> instruction: 0x000139b0
   1384c:	andeq	r3, r1, ip, asr #23
   13850:	andeq	r3, r1, r4, asr #21
   13854:	andeq	r3, r1, ip, asr #23
   13858:	andeq	r3, r1, ip, asr #23
   1385c:	andeq	r3, r1, ip, asr #23
   13860:			; <UNDEFINED> instruction: 0x000139b0
   13864:			; <UNDEFINED> instruction: 0x000139b0
   13868:			; <UNDEFINED> instruction: 0x000139b0
   1386c:			; <UNDEFINED> instruction: 0x000139b0
   13870:			; <UNDEFINED> instruction: 0x000139b0
   13874:			; <UNDEFINED> instruction: 0x000139b0
   13878:			; <UNDEFINED> instruction: 0x000139b0
   1387c:			; <UNDEFINED> instruction: 0x000139b0
   13880:			; <UNDEFINED> instruction: 0x000139b0
   13884:			; <UNDEFINED> instruction: 0x000139b0
   13888:			; <UNDEFINED> instruction: 0x000139b0
   1388c:			; <UNDEFINED> instruction: 0x000139b0
   13890:			; <UNDEFINED> instruction: 0x000139b0
   13894:			; <UNDEFINED> instruction: 0x000139b0
   13898:			; <UNDEFINED> instruction: 0x000139b0
   1389c:			; <UNDEFINED> instruction: 0x000139b0
   138a0:	andeq	r3, r1, ip, asr #23
   138a4:	andeq	r3, r1, ip, asr #23
   138a8:	andeq	r3, r1, ip, asr #23
   138ac:	andeq	r3, r1, ip, asr #23
   138b0:	andeq	r3, r1, ip, lsl #21
   138b4:	andeq	r3, r1, r4, asr fp
   138b8:			; <UNDEFINED> instruction: 0x000139b0
   138bc:			; <UNDEFINED> instruction: 0x000139b0
   138c0:			; <UNDEFINED> instruction: 0x000139b0
   138c4:			; <UNDEFINED> instruction: 0x000139b0
   138c8:			; <UNDEFINED> instruction: 0x000139b0
   138cc:			; <UNDEFINED> instruction: 0x000139b0
   138d0:			; <UNDEFINED> instruction: 0x000139b0
   138d4:			; <UNDEFINED> instruction: 0x000139b0
   138d8:			; <UNDEFINED> instruction: 0x000139b0
   138dc:			; <UNDEFINED> instruction: 0x000139b0
   138e0:			; <UNDEFINED> instruction: 0x000139b0
   138e4:			; <UNDEFINED> instruction: 0x000139b0
   138e8:			; <UNDEFINED> instruction: 0x000139b0
   138ec:			; <UNDEFINED> instruction: 0x000139b0
   138f0:			; <UNDEFINED> instruction: 0x000139b0
   138f4:			; <UNDEFINED> instruction: 0x000139b0
   138f8:			; <UNDEFINED> instruction: 0x000139b0
   138fc:			; <UNDEFINED> instruction: 0x000139b0
   13900:			; <UNDEFINED> instruction: 0x000139b0
   13904:			; <UNDEFINED> instruction: 0x000139b0
   13908:			; <UNDEFINED> instruction: 0x000139b0
   1390c:			; <UNDEFINED> instruction: 0x000139b0
   13910:			; <UNDEFINED> instruction: 0x000139b0
   13914:			; <UNDEFINED> instruction: 0x000139b0
   13918:			; <UNDEFINED> instruction: 0x000139b0
   1391c:			; <UNDEFINED> instruction: 0x000139b0
   13920:	andeq	r3, r1, ip, asr #23
   13924:	strdeq	r3, [r1], -r8
   13928:			; <UNDEFINED> instruction: 0x000139b0
   1392c:	andeq	r3, r1, ip, asr #23
   13930:			; <UNDEFINED> instruction: 0x000139b0
   13934:	andeq	r3, r1, ip, asr #23
   13938:			; <UNDEFINED> instruction: 0x000139b0
   1393c:			; <UNDEFINED> instruction: 0x000139b0
   13940:			; <UNDEFINED> instruction: 0x000139b0
   13944:			; <UNDEFINED> instruction: 0x000139b0
   13948:			; <UNDEFINED> instruction: 0x000139b0
   1394c:			; <UNDEFINED> instruction: 0x000139b0
   13950:			; <UNDEFINED> instruction: 0x000139b0
   13954:			; <UNDEFINED> instruction: 0x000139b0
   13958:			; <UNDEFINED> instruction: 0x000139b0
   1395c:			; <UNDEFINED> instruction: 0x000139b0
   13960:			; <UNDEFINED> instruction: 0x000139b0
   13964:			; <UNDEFINED> instruction: 0x000139b0
   13968:			; <UNDEFINED> instruction: 0x000139b0
   1396c:			; <UNDEFINED> instruction: 0x000139b0
   13970:			; <UNDEFINED> instruction: 0x000139b0
   13974:			; <UNDEFINED> instruction: 0x000139b0
   13978:			; <UNDEFINED> instruction: 0x000139b0
   1397c:			; <UNDEFINED> instruction: 0x000139b0
   13980:			; <UNDEFINED> instruction: 0x000139b0
   13984:			; <UNDEFINED> instruction: 0x000139b0
   13988:			; <UNDEFINED> instruction: 0x000139b0
   1398c:			; <UNDEFINED> instruction: 0x000139b0
   13990:			; <UNDEFINED> instruction: 0x000139b0
   13994:			; <UNDEFINED> instruction: 0x000139b0
   13998:			; <UNDEFINED> instruction: 0x000139b0
   1399c:			; <UNDEFINED> instruction: 0x000139b0
   139a0:	ldrdeq	r3, [r1], -r8
   139a4:	andeq	r3, r1, ip, asr #23
   139a8:	ldrdeq	r3, [r1], -r8
   139ac:	andeq	r3, r1, r4, asr #19
   139b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   139b4:	cmp	r0, #0
   139b8:	beq	13c2c <__mempcpy_chk@plt+0x2c00>
   139bc:	ldr	r0, [fp, #16]
   139c0:	b	13c30 <__mempcpy_chk@plt+0x2c04>
   139c4:	mov	r9, #0
   139c8:	cmp	r6, #0
   139cc:	beq	13bc8 <__mempcpy_chk@plt+0x2b9c>
   139d0:	mov	sl, #0
   139d4:	b	139b0 <__mempcpy_chk@plt+0x2984>
   139d8:	mov	r9, #0
   139dc:	cmn	lr, #1
   139e0:	beq	13bac <__mempcpy_chk@plt+0x2b80>
   139e4:	cmp	r6, #0
   139e8:	bne	139d0 <__mempcpy_chk@plt+0x29a4>
   139ec:	cmp	lr, #1
   139f0:	beq	13bc8 <__mempcpy_chk@plt+0x2b9c>
   139f4:	b	139d0 <__mempcpy_chk@plt+0x29a4>
   139f8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   139fc:	cmp	r0, #2
   13a00:	bne	13bf4 <__mempcpy_chk@plt+0x2bc8>
   13a04:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13a08:	tst	r0, #1
   13a0c:	bne	1433c <__mempcpy_chk@plt+0x3310>
   13a10:	mov	sl, #0
   13a14:	mov	r0, #92	; 0x5c
   13a18:	b	13c08 <__mempcpy_chk@plt+0x2bdc>
   13a1c:	mov	r0, #102	; 0x66
   13a20:	b	13c18 <__mempcpy_chk@plt+0x2bec>
   13a24:	mov	r2, #116	; 0x74
   13a28:	b	13a38 <__mempcpy_chk@plt+0x2a0c>
   13a2c:	mov	r0, #98	; 0x62
   13a30:	b	13c18 <__mempcpy_chk@plt+0x2bec>
   13a34:	mov	r2, #114	; 0x72
   13a38:	ldr	r0, [sp, #64]	; 0x40
   13a3c:	tst	r0, #1
   13a40:	mov	r0, r2
   13a44:	bne	13c18 <__mempcpy_chk@plt+0x2bec>
   13a48:	b	1433c <__mempcpy_chk@plt+0x3310>
   13a4c:	ldr	r0, [sp, #84]	; 0x54
   13a50:	tst	r0, #1
   13a54:	beq	13d08 <__mempcpy_chk@plt+0x2cdc>
   13a58:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13a5c:	tst	r0, #1
   13a60:	bne	1433c <__mempcpy_chk@plt+0x3310>
   13a64:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13a68:	cmp	r0, #2
   13a6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13a70:	movwne	r0, #1
   13a74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13a78:	orr	r0, r0, r2
   13a7c:	tst	r0, #1
   13a80:	beq	140fc <__mempcpy_chk@plt+0x30d0>
   13a84:	mov	r0, r8
   13a88:	b	14130 <__mempcpy_chk@plt+0x3104>
   13a8c:	mov	sl, #0
   13a90:	mov	r5, #63	; 0x3f
   13a94:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13a98:	cmp	r0, #5
   13a9c:	beq	13ebc <__mempcpy_chk@plt+0x2e90>
   13aa0:	cmp	r0, #2
   13aa4:	bne	13f5c <__mempcpy_chk@plt+0x2f30>
   13aa8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13aac:	tst	r0, #1
   13ab0:	mov	r9, #0
   13ab4:	beq	139b0 <__mempcpy_chk@plt+0x2984>
   13ab8:	b	1433c <__mempcpy_chk@plt+0x3310>
   13abc:	mov	r0, #118	; 0x76
   13ac0:	b	13c18 <__mempcpy_chk@plt+0x2bec>
   13ac4:	mov	r5, #39	; 0x27
   13ac8:	mov	r0, #1
   13acc:	str	r0, [sp, #56]	; 0x38
   13ad0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13ad4:	cmp	r0, #2
   13ad8:	bne	13d28 <__mempcpy_chk@plt+0x2cfc>
   13adc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ae0:	tst	r0, #1
   13ae4:	bne	1433c <__mempcpy_chk@plt+0x3310>
   13ae8:	ldr	r2, [sp, #72]	; 0x48
   13aec:	cmp	r2, #0
   13af0:	mov	r0, r2
   13af4:	movwne	r0, #1
   13af8:	clz	r1, r4
   13afc:	lsr	r1, r1, #5
   13b00:	orrs	r0, r0, r1
   13b04:	moveq	r2, r4
   13b08:	str	r2, [sp, #72]	; 0x48
   13b0c:	moveq	r4, r0
   13b10:	cmp	r8, r4
   13b14:	movcc	r0, #39	; 0x27
   13b18:	strbcc	r0, [r7, r8]
   13b1c:	add	r0, r8, #1
   13b20:	cmp	r0, r4
   13b24:	movcc	r1, #92	; 0x5c
   13b28:	strbcc	r1, [r7, r0]
   13b2c:	add	r0, r8, #2
   13b30:	cmp	r0, r4
   13b34:	movcc	r1, #39	; 0x27
   13b38:	strbcc	r1, [r7, r0]
   13b3c:	add	r8, r8, #3
   13b40:	mov	r0, #0
   13b44:	str	r0, [fp, #-56]	; 0xffffffc8
   13b48:	mov	sl, #0
   13b4c:	mov	r9, #1
   13b50:	b	139b0 <__mempcpy_chk@plt+0x2984>
   13b54:	str	r4, [sp, #24]
   13b58:	ldr	r0, [sp, #40]	; 0x28
   13b5c:	cmp	r0, #1
   13b60:	bne	13d30 <__mempcpy_chk@plt+0x2d04>
   13b64:	str	lr, [sp, #28]
   13b68:	bl	10f30 <__ctype_b_loc@plt>
   13b6c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b70:	ldr	r0, [r0]
   13b74:	add	r0, r0, r5, lsl #1
   13b78:	ldrb	r0, [r0, #1]
   13b7c:	ubfx	r9, r0, #6, #1
   13b80:	mov	r1, #1
   13b84:	ldr	r4, [sp, #24]
   13b88:	ldr	r0, [sp, #52]	; 0x34
   13b8c:	orr	r0, r9, r0
   13b90:	mov	r2, r1
   13b94:	cmp	r1, #1
   13b98:	bhi	13f64 <__mempcpy_chk@plt+0x2f38>
   13b9c:	tst	r0, #1
   13ba0:	beq	13f64 <__mempcpy_chk@plt+0x2f38>
   13ba4:	ldr	lr, [sp, #28]
   13ba8:	b	139b0 <__mempcpy_chk@plt+0x2984>
   13bac:	cmp	r6, #0
   13bb0:	ldrbeq	r0, [ip, #1]
   13bb4:	cmpeq	r0, #0
   13bb8:	beq	13bc8 <__mempcpy_chk@plt+0x2b9c>
   13bbc:	mvn	lr, #0
   13bc0:	mov	sl, #0
   13bc4:	b	139b0 <__mempcpy_chk@plt+0x2984>
   13bc8:	mov	r1, #1
   13bcc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13bd0:	cmp	r0, #2
   13bd4:	bne	13bec <__mempcpy_chk@plt+0x2bc0>
   13bd8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13bdc:	tst	r0, #1
   13be0:	mov	r9, r1
   13be4:	beq	139b0 <__mempcpy_chk@plt+0x2984>
   13be8:	b	1433c <__mempcpy_chk@plt+0x3310>
   13bec:	mov	r9, r1
   13bf0:	b	139b0 <__mempcpy_chk@plt+0x2984>
   13bf4:	mov	sl, #0
   13bf8:	mov	r0, #92	; 0x5c
   13bfc:	ldr	r1, [sp, #48]	; 0x30
   13c00:	cmp	r1, #0
   13c04:	beq	13c18 <__mempcpy_chk@plt+0x2bec>
   13c08:	mov	r9, #0
   13c0c:	cmp	sl, #0
   13c10:	beq	141c8 <__mempcpy_chk@plt+0x319c>
   13c14:	b	14204 <__mempcpy_chk@plt+0x31d8>
   13c18:	mov	r9, #0
   13c1c:	ldr	r1, [sp, #84]	; 0x54
   13c20:	tst	r1, #1
   13c24:	mov	sl, #0
   13c28:	bne	13c68 <__mempcpy_chk@plt+0x2c3c>
   13c2c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13c30:	cmp	r0, #0
   13c34:	mov	r0, r5
   13c38:	beq	13c5c <__mempcpy_chk@plt+0x2c30>
   13c3c:	ubfx	r0, r5, #5, #3
   13c40:	ldr	r1, [fp, #16]
   13c44:	ldr	r0, [r1, r0, lsl #2]
   13c48:	and	r1, r5, #31
   13c4c:	mov	r2, #1
   13c50:	tst	r0, r2, lsl r1
   13c54:	mov	r0, r5
   13c58:	bne	13c68 <__mempcpy_chk@plt+0x2c3c>
   13c5c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13c60:	cmp	r1, #0
   13c64:	beq	141c0 <__mempcpy_chk@plt+0x3194>
   13c68:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13c6c:	tst	r1, #1
   13c70:	bne	1433c <__mempcpy_chk@plt+0x3310>
   13c74:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13c78:	cmp	r1, #2
   13c7c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13c80:	movwne	r1, #1
   13c84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13c88:	orr	r1, r1, r2
   13c8c:	tst	r1, #1
   13c90:	beq	13c9c <__mempcpy_chk@plt+0x2c70>
   13c94:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13c98:	b	13cd8 <__mempcpy_chk@plt+0x2cac>
   13c9c:	cmp	r8, r4
   13ca0:	movcc	r1, #39	; 0x27
   13ca4:	strbcc	r1, [r7, r8]
   13ca8:	add	r1, r8, #1
   13cac:	cmp	r1, r4
   13cb0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13cb4:	movcc	r2, #36	; 0x24
   13cb8:	strbcc	r2, [r7, r1]
   13cbc:	add	r1, r8, #2
   13cc0:	cmp	r1, r4
   13cc4:	movcc	r2, #39	; 0x27
   13cc8:	strbcc	r2, [r7, r1]
   13ccc:	add	r8, r8, #3
   13cd0:	mov	r1, #1
   13cd4:	str	r1, [fp, #-56]	; 0xffffffc8
   13cd8:	cmp	r8, r4
   13cdc:	movcc	r1, #92	; 0x5c
   13ce0:	strbcc	r1, [r7, r8]
   13ce4:	add	r8, r8, #1
   13ce8:	cmp	r8, r4
   13cec:	strbcc	r0, [r7, r8]
   13cf0:	and	r5, r5, r9
   13cf4:	add	r8, r8, #1
   13cf8:	add	r6, r6, #1
   13cfc:	cmn	lr, #1
   13d00:	bne	136dc <__mempcpy_chk@plt+0x26b0>
   13d04:	b	136e8 <__mempcpy_chk@plt+0x26bc>
   13d08:	mov	r9, #0
   13d0c:	ldr	r0, [sp, #36]	; 0x24
   13d10:	cmp	r0, #0
   13d14:	mov	sl, #0
   13d18:	mov	r5, #0
   13d1c:	beq	13c2c <__mempcpy_chk@plt+0x2c00>
   13d20:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13d24:	b	13cf8 <__mempcpy_chk@plt+0x2ccc>
   13d28:	mov	r9, #1
   13d2c:	b	139b0 <__mempcpy_chk@plt+0x2984>
   13d30:	mov	r0, #0
   13d34:	str	r0, [fp, #-36]	; 0xffffffdc
   13d38:	str	r0, [fp, #-40]	; 0xffffffd8
   13d3c:	cmn	lr, #1
   13d40:	bne	13d54 <__mempcpy_chk@plt+0x2d28>
   13d44:	mov	r0, ip
   13d48:	bl	10f54 <strlen@plt>
   13d4c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13d50:	mov	lr, r0
   13d54:	add	r0, ip, r6
   13d58:	str	r0, [sp, #20]
   13d5c:	mov	r9, #1
   13d60:	mov	r7, #0
   13d64:	sub	r4, fp, #40	; 0x28
   13d68:	str	lr, [sp, #28]
   13d6c:	str	r7, [sp, #44]	; 0x2c
   13d70:	add	r7, r7, r6
   13d74:	add	r1, ip, r7
   13d78:	sub	r2, lr, r7
   13d7c:	sub	r0, fp, #44	; 0x2c
   13d80:	mov	r3, r4
   13d84:	bl	16088 <__mempcpy_chk@plt+0x505c>
   13d88:	cmp	r0, #0
   13d8c:	beq	1424c <__mempcpy_chk@plt+0x3220>
   13d90:	cmn	r0, #1
   13d94:	beq	1420c <__mempcpy_chk@plt+0x31e0>
   13d98:	cmn	r0, #2
   13d9c:	ldr	lr, [sp, #28]
   13da0:	beq	14214 <__mempcpy_chk@plt+0x31e8>
   13da4:	cmp	r0, #2
   13da8:	mov	r1, #0
   13dac:	movwcc	r1, #1
   13db0:	ldr	r2, [sp, #60]	; 0x3c
   13db4:	eor	r2, r2, #1
   13db8:	orrs	r1, r2, r1
   13dbc:	ldr	r4, [sp, #24]
   13dc0:	bne	13e80 <__mempcpy_chk@plt+0x2e54>
   13dc4:	ldr	r1, [sp, #44]	; 0x2c
   13dc8:	ldr	r2, [sp, #20]
   13dcc:	add	r1, r2, r1
   13dd0:	mov	r2, #1
   13dd4:	ldrb	r3, [r1, r2]
   13dd8:	sub	r3, r3, #91	; 0x5b
   13ddc:	cmp	r3, #33	; 0x21
   13de0:	bhi	13e74 <__mempcpy_chk@plt+0x2e48>
   13de4:	add	r7, pc, #0
   13de8:	ldr	pc, [r7, r3, lsl #2]
   13dec:	andeq	r4, r1, r4, lsr r3
   13df0:	andeq	r4, r1, r4, lsr r3
   13df4:	andeq	r3, r1, r4, ror lr
   13df8:	andeq	r4, r1, r4, lsr r3
   13dfc:	andeq	r3, r1, r4, ror lr
   13e00:	andeq	r4, r1, r4, lsr r3
   13e04:	andeq	r3, r1, r4, ror lr
   13e08:	andeq	r3, r1, r4, ror lr
   13e0c:	andeq	r3, r1, r4, ror lr
   13e10:	andeq	r3, r1, r4, ror lr
   13e14:	andeq	r3, r1, r4, ror lr
   13e18:	andeq	r3, r1, r4, ror lr
   13e1c:	andeq	r3, r1, r4, ror lr
   13e20:	andeq	r3, r1, r4, ror lr
   13e24:	andeq	r3, r1, r4, ror lr
   13e28:	andeq	r3, r1, r4, ror lr
   13e2c:	andeq	r3, r1, r4, ror lr
   13e30:	andeq	r3, r1, r4, ror lr
   13e34:	andeq	r3, r1, r4, ror lr
   13e38:	andeq	r3, r1, r4, ror lr
   13e3c:	andeq	r3, r1, r4, ror lr
   13e40:	andeq	r3, r1, r4, ror lr
   13e44:	andeq	r3, r1, r4, ror lr
   13e48:	andeq	r3, r1, r4, ror lr
   13e4c:	andeq	r3, r1, r4, ror lr
   13e50:	andeq	r3, r1, r4, ror lr
   13e54:	andeq	r3, r1, r4, ror lr
   13e58:	andeq	r3, r1, r4, ror lr
   13e5c:	andeq	r3, r1, r4, ror lr
   13e60:	andeq	r3, r1, r4, ror lr
   13e64:	andeq	r3, r1, r4, ror lr
   13e68:	andeq	r3, r1, r4, ror lr
   13e6c:	andeq	r3, r1, r4, ror lr
   13e70:	andeq	r4, r1, r4, lsr r3
   13e74:	add	r2, r2, #1
   13e78:	cmp	r2, r0
   13e7c:	bcc	13dd4 <__mempcpy_chk@plt+0x2da8>
   13e80:	ldr	r7, [sp, #44]	; 0x2c
   13e84:	add	r7, r0, r7
   13e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e8c:	bl	10e88 <iswprint@plt>
   13e90:	cmp	r0, #0
   13e94:	movwne	r0, #1
   13e98:	and	r9, r9, r0
   13e9c:	sub	r4, fp, #40	; 0x28
   13ea0:	mov	r0, r4
   13ea4:	bl	10e40 <mbsinit@plt>
   13ea8:	ldr	lr, [sp, #28]
   13eac:	cmp	r0, #0
   13eb0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13eb4:	beq	13d6c <__mempcpy_chk@plt+0x2d40>
   13eb8:	b	14254 <__mempcpy_chk@plt+0x3228>
   13ebc:	ldr	r0, [sp, #32]
   13ec0:	cmp	r0, #0
   13ec4:	beq	13f5c <__mempcpy_chk@plt+0x2f30>
   13ec8:	add	r0, r6, #2
   13ecc:	cmp	r0, lr
   13ed0:	bcs	13f5c <__mempcpy_chk@plt+0x2f30>
   13ed4:	add	r1, ip, r6
   13ed8:	ldrb	r1, [r1, #1]
   13edc:	cmp	r1, #63	; 0x3f
   13ee0:	bne	13f5c <__mempcpy_chk@plt+0x2f30>
   13ee4:	ldrb	r9, [ip, r0]
   13ee8:	sub	r2, r9, #33	; 0x21
   13eec:	cmp	r2, #29
   13ef0:	bhi	13f5c <__mempcpy_chk@plt+0x2f30>
   13ef4:	mov	r3, #1
   13ef8:	movw	r1, #20929	; 0x51c1
   13efc:	movt	r1, #14336	; 0x3800
   13f00:	tst	r1, r3, lsl r2
   13f04:	beq	13f5c <__mempcpy_chk@plt+0x2f30>
   13f08:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13f0c:	tst	r1, #1
   13f10:	bne	1433c <__mempcpy_chk@plt+0x3310>
   13f14:	cmp	r8, r4
   13f18:	movcc	r1, #63	; 0x3f
   13f1c:	strbcc	r1, [r7, r8]
   13f20:	add	r2, r8, #1
   13f24:	cmp	r2, r4
   13f28:	movcc	r1, #34	; 0x22
   13f2c:	strbcc	r1, [r7, r2]
   13f30:	add	r2, r8, #2
   13f34:	cmp	r2, r4
   13f38:	movcc	r1, #34	; 0x22
   13f3c:	strbcc	r1, [r7, r2]
   13f40:	add	r2, r8, #3
   13f44:	cmp	r2, r4
   13f48:	movcc	r1, #63	; 0x3f
   13f4c:	strbcc	r1, [r7, r2]
   13f50:	add	r8, r8, #4
   13f54:	mov	r6, r0
   13f58:	mov	r5, r9
   13f5c:	mov	r9, #0
   13f60:	b	139b0 <__mempcpy_chk@plt+0x2984>
   13f64:	add	r1, r2, r6
   13f68:	str	r1, [sp, #44]	; 0x2c
   13f6c:	add	r1, r6, #1
   13f70:	mov	r3, #0
   13f74:	ldr	lr, [sp, #28]
   13f78:	ldr	r6, [fp, #-60]	; 0xffffffc4
   13f7c:	tst	r0, #1
   13f80:	bne	14074 <__mempcpy_chk@plt+0x3048>
   13f84:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13f88:	tst	r2, #1
   13f8c:	bne	1433c <__mempcpy_chk@plt+0x3310>
   13f90:	cmp	r6, #2
   13f94:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f98:	movwne	r3, #1
   13f9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13fa0:	orr	r3, r3, r2
   13fa4:	tst	r3, #1
   13fa8:	bne	13fe4 <__mempcpy_chk@plt+0x2fb8>
   13fac:	cmp	r8, r4
   13fb0:	movcc	r2, #39	; 0x27
   13fb4:	strbcc	r2, [r7, r8]
   13fb8:	add	r3, r8, #1
   13fbc:	cmp	r3, r4
   13fc0:	movcc	r2, #36	; 0x24
   13fc4:	strbcc	r2, [r7, r3]
   13fc8:	add	r3, r8, #2
   13fcc:	cmp	r3, r4
   13fd0:	movcc	r2, #39	; 0x27
   13fd4:	strbcc	r2, [r7, r3]
   13fd8:	add	r8, r8, #3
   13fdc:	mov	r2, #1
   13fe0:	str	r2, [fp, #-56]	; 0xffffffc8
   13fe4:	cmp	r8, r4
   13fe8:	movcc	r2, #92	; 0x5c
   13fec:	strbcc	r2, [r7, r8]
   13ff0:	add	r3, r8, #1
   13ff4:	cmp	r3, r4
   13ff8:	bcs	14018 <__mempcpy_chk@plt+0x2fec>
   13ffc:	and	r7, r5, #192	; 0xc0
   14000:	mov	r2, #48	; 0x30
   14004:	orr	r7, r2, r7, lsr #6
   14008:	ldr	r6, [sp, #80]	; 0x50
   1400c:	strb	r7, [r6, r3]
   14010:	ldr	r6, [fp, #-60]	; 0xffffffc4
   14014:	ldr	r7, [sp, #80]	; 0x50
   14018:	add	r3, r8, #2
   1401c:	cmp	r3, r4
   14020:	bcs	14040 <__mempcpy_chk@plt+0x3014>
   14024:	lsr	r7, r5, #3
   14028:	mov	r2, #6
   1402c:	bfi	r7, r2, #3, #29
   14030:	ldr	r6, [sp, #80]	; 0x50
   14034:	strb	r7, [r6, r3]
   14038:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1403c:	ldr	r7, [sp, #80]	; 0x50
   14040:	mov	r2, #6
   14044:	bfi	r5, r2, #3, #29
   14048:	add	r8, r8, #3
   1404c:	mov	r3, #1
   14050:	b	14098 <__mempcpy_chk@plt+0x306c>
   14054:	ldr	r7, [sp, #80]	; 0x50
   14058:	cmp	r8, r4
   1405c:	strbcc	r5, [r7, r8]
   14060:	ldrb	r5, [ip, r1]
   14064:	add	r1, r1, #1
   14068:	add	r8, r8, #1
   1406c:	tst	r0, #1
   14070:	beq	13f84 <__mempcpy_chk@plt+0x2f58>
   14074:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14078:	tst	r2, #1
   1407c:	beq	14090 <__mempcpy_chk@plt+0x3064>
   14080:	cmp	r8, r4
   14084:	movcc	r2, #92	; 0x5c
   14088:	strbcc	r2, [r7, r8]
   1408c:	add	r8, r8, #1
   14090:	mov	r2, #0
   14094:	str	r2, [fp, #-52]	; 0xffffffcc
   14098:	and	sl, r3, #1
   1409c:	ldr	r2, [sp, #44]	; 0x2c
   140a0:	cmp	r2, r1
   140a4:	bls	141b0 <__mempcpy_chk@plt+0x3184>
   140a8:	cmp	sl, #0
   140ac:	movwne	sl, #1
   140b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   140b4:	mvn	r7, r2
   140b8:	orr	r7, r7, sl
   140bc:	tst	r7, #1
   140c0:	bne	14054 <__mempcpy_chk@plt+0x3028>
   140c4:	cmp	r8, r4
   140c8:	ldrcc	r7, [sp, #80]	; 0x50
   140cc:	movcc	r2, #39	; 0x27
   140d0:	strbcc	r2, [r7, r8]
   140d4:	add	r7, r8, #1
   140d8:	cmp	r7, r4
   140dc:	ldrcc	r6, [sp, #80]	; 0x50
   140e0:	movcc	r2, #39	; 0x27
   140e4:	strbcc	r2, [r6, r7]
   140e8:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   140ec:	add	r8, r8, #2
   140f0:	mov	r2, #0
   140f4:	str	r2, [fp, #-56]	; 0xffffffc8
   140f8:	b	14054 <__mempcpy_chk@plt+0x3028>
   140fc:	cmp	r8, r4
   14100:	movcc	r0, #39	; 0x27
   14104:	strbcc	r0, [r7, r8]
   14108:	add	r0, r8, #1
   1410c:	cmp	r0, r4
   14110:	movcc	r1, #36	; 0x24
   14114:	strbcc	r1, [r7, r0]
   14118:	add	r0, r8, #2
   1411c:	cmp	r0, r4
   14120:	movcc	r1, #39	; 0x27
   14124:	strbcc	r1, [r7, r0]
   14128:	add	r0, r8, #3
   1412c:	mov	r2, #1
   14130:	cmp	r0, r4
   14134:	movcc	r1, #92	; 0x5c
   14138:	strbcc	r1, [r7, r0]
   1413c:	str	r2, [fp, #-56]	; 0xffffffc8
   14140:	add	r8, r0, #1
   14144:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14148:	cmp	r1, #2
   1414c:	beq	141a0 <__mempcpy_chk@plt+0x3174>
   14150:	add	r1, r6, #1
   14154:	mov	r9, #0
   14158:	mov	sl, #1
   1415c:	mov	r5, #48	; 0x30
   14160:	cmp	r1, lr
   14164:	bcs	139b0 <__mempcpy_chk@plt+0x2984>
   14168:	ldrb	r1, [ip, r1]
   1416c:	sub	r1, r1, #48	; 0x30
   14170:	uxtb	r1, r1
   14174:	cmp	r1, #9
   14178:	bhi	139b0 <__mempcpy_chk@plt+0x2984>
   1417c:	cmp	r8, r4
   14180:	movcc	r1, #48	; 0x30
   14184:	strbcc	r1, [r7, r8]
   14188:	add	r1, r0, #2
   1418c:	cmp	r1, r4
   14190:	movcc	r2, #48	; 0x30
   14194:	strbcc	r2, [r7, r1]
   14198:	add	r8, r0, #3
   1419c:	b	139b0 <__mempcpy_chk@plt+0x2984>
   141a0:	mov	r0, #48	; 0x30
   141a4:	mov	sl, #1
   141a8:	mov	r9, #0
   141ac:	b	13c5c <__mempcpy_chk@plt+0x2c30>
   141b0:	sub	r6, r1, #1
   141b4:	cmp	sl, #0
   141b8:	movwne	sl, #1
   141bc:	mov	r0, r5
   141c0:	cmp	sl, #0
   141c4:	bne	14204 <__mempcpy_chk@plt+0x31d8>
   141c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   141cc:	tst	r1, #1
   141d0:	beq	14204 <__mempcpy_chk@plt+0x31d8>
   141d4:	cmp	r8, r4
   141d8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   141dc:	movcc	r1, #39	; 0x27
   141e0:	strbcc	r1, [r7, r8]
   141e4:	add	r1, r8, #1
   141e8:	cmp	r1, r4
   141ec:	movcc	r2, #39	; 0x27
   141f0:	strbcc	r2, [r7, r1]
   141f4:	add	r8, r8, #2
   141f8:	mov	r1, #0
   141fc:	str	r1, [fp, #-56]	; 0xffffffc8
   14200:	b	13ce8 <__mempcpy_chk@plt+0x2cbc>
   14204:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14208:	b	13ce8 <__mempcpy_chk@plt+0x2cbc>
   1420c:	mov	r9, #0
   14210:	b	1424c <__mempcpy_chk@plt+0x3220>
   14214:	mov	r9, #0
   14218:	cmp	r7, lr
   1421c:	bcs	1424c <__mempcpy_chk@plt+0x3220>
   14220:	ldr	ip, [fp, #-84]	; 0xffffffac
   14224:	ldr	r7, [sp, #44]	; 0x2c
   14228:	ldr	r0, [sp, #20]
   1422c:	ldrb	r0, [r0, r7]
   14230:	cmp	r0, #0
   14234:	beq	14254 <__mempcpy_chk@plt+0x3228>
   14238:	add	r7, r7, #1
   1423c:	add	r0, r6, r7
   14240:	cmp	r0, lr
   14244:	bcc	14228 <__mempcpy_chk@plt+0x31fc>
   14248:	b	14254 <__mempcpy_chk@plt+0x3228>
   1424c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14250:	ldr	r7, [sp, #44]	; 0x2c
   14254:	mov	r1, r7
   14258:	ldr	r7, [sp, #80]	; 0x50
   1425c:	b	13b84 <__mempcpy_chk@plt+0x2b58>
   14260:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14264:	eor	r0, r1, #2
   14268:	orr	r0, r0, r8
   1426c:	clz	r0, r0
   14270:	lsr	r0, r0, #5
   14274:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14278:	tst	r2, r0
   1427c:	bne	1433c <__mempcpy_chk@plt+0x3310>
   14280:	cmp	r1, #2
   14284:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14288:	movwne	r0, #1
   1428c:	orr	r0, r2, r0
   14290:	tst	r0, #1
   14294:	ldreq	r0, [sp, #56]	; 0x38
   14298:	eoreq	r0, r0, #1
   1429c:	tsteq	r0, #1
   142a0:	bne	142d4 <__mempcpy_chk@plt+0x32a8>
   142a4:	mov	r9, lr
   142a8:	tst	r5, #1
   142ac:	bne	143a4 <__mempcpy_chk@plt+0x3378>
   142b0:	ldr	r0, [sp, #72]	; 0x48
   142b4:	cmp	r0, #0
   142b8:	beq	142d4 <__mempcpy_chk@plt+0x32a8>
   142bc:	mov	r5, #0
   142c0:	cmp	r4, #0
   142c4:	ldr	r0, [sp, #84]	; 0x54
   142c8:	mov	sl, r2
   142cc:	ldr	r6, [sp, #72]	; 0x48
   142d0:	beq	1346c <__mempcpy_chk@plt+0x2440>
   142d4:	ldr	r1, [sp, #92]	; 0x5c
   142d8:	clz	r0, r1
   142dc:	lsr	r0, r0, #5
   142e0:	orr	r0, r0, r2
   142e4:	tst	r0, #1
   142e8:	bne	14314 <__mempcpy_chk@plt+0x32e8>
   142ec:	ldrb	r0, [r1]
   142f0:	cmp	r0, #0
   142f4:	beq	14314 <__mempcpy_chk@plt+0x32e8>
   142f8:	add	r1, r1, #1
   142fc:	cmp	r8, r4
   14300:	strbcc	r0, [r7, r8]
   14304:	add	r8, r8, #1
   14308:	ldrb	r0, [r1], #1
   1430c:	cmp	r0, #0
   14310:	bne	142fc <__mempcpy_chk@plt+0x32d0>
   14314:	cmp	r8, r4
   14318:	movcc	r0, #0
   1431c:	strbcc	r0, [r7, r8]
   14320:	b	14398 <__mempcpy_chk@plt+0x336c>
   14324:	ldr	ip, [fp, #-84]	; 0xffffffac
   14328:	mov	lr, r4
   1432c:	mov	r4, r5
   14330:	b	1433c <__mempcpy_chk@plt+0x3310>
   14334:	ldr	r7, [sp, #80]	; 0x50
   14338:	ldr	ip, [fp, #-84]	; 0xffffffac
   1433c:	mov	r0, #0
   14340:	ldr	r1, [fp, #12]
   14344:	bic	r1, r1, #2
   14348:	ldr	r2, [sp, #84]	; 0x54
   1434c:	tst	r2, #1
   14350:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14354:	mov	r2, r3
   14358:	movwne	r2, #4
   1435c:	cmp	r3, #2
   14360:	movne	r2, r3
   14364:	str	r2, [sp]
   14368:	str	r1, [sp, #4]
   1436c:	str	r0, [sp, #8]
   14370:	ldr	r0, [sp, #68]	; 0x44
   14374:	str	r0, [sp, #12]
   14378:	ldr	r0, [sp, #76]	; 0x4c
   1437c:	str	r0, [sp, #16]
   14380:	mov	r0, r7
   14384:	mov	r1, r4
   14388:	mov	r2, ip
   1438c:	mov	r3, lr
   14390:	bl	133e4 <__mempcpy_chk@plt+0x23b8>
   14394:	mov	r8, r0
   14398:	mov	r0, r8
   1439c:	sub	sp, fp, #28
   143a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a4:	mov	r0, #5
   143a8:	str	r0, [sp]
   143ac:	ldr	r0, [fp, #12]
   143b0:	str	r0, [sp, #4]
   143b4:	ldr	r0, [fp, #16]
   143b8:	str	r0, [sp, #8]
   143bc:	ldr	r0, [sp, #68]	; 0x44
   143c0:	str	r0, [sp, #12]
   143c4:	ldr	r0, [sp, #76]	; 0x4c
   143c8:	str	r0, [sp, #16]
   143cc:	mov	r0, r7
   143d0:	ldr	r1, [sp, #72]	; 0x48
   143d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   143d8:	mov	r3, r9
   143dc:	b	14390 <__mempcpy_chk@plt+0x3364>
   143e0:	bl	11008 <abort@plt>
   143e4:	mov	r3, r2
   143e8:	mov	r2, #0
   143ec:	b	143f0 <__mempcpy_chk@plt+0x33c4>
   143f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143f4:	add	fp, sp, #28
   143f8:	sub	sp, sp, #36	; 0x24
   143fc:	mov	r4, r2
   14400:	str	r2, [sp, #24]
   14404:	mov	r5, r1
   14408:	mov	r6, r0
   1440c:	str	r0, [sp, #20]
   14410:	movw	r8, #33112	; 0x8158
   14414:	movt	r8, #2
   14418:	cmp	r3, #0
   1441c:	movne	r8, r3
   14420:	bl	10f60 <__errno_location@plt>
   14424:	str	r0, [sp, #28]
   14428:	ldm	r8, {r3, r9}
   1442c:	ldr	r1, [r8, #40]	; 0x28
   14430:	ldr	r2, [r8, #44]	; 0x2c
   14434:	ldr	r7, [r0]
   14438:	str	r7, [sp, #32]
   1443c:	add	sl, r8, #8
   14440:	cmp	r4, #0
   14444:	orreq	r9, r9, #1
   14448:	stm	sp, {r3, r9, sl}
   1444c:	str	r1, [sp, #12]
   14450:	str	r2, [sp, #16]
   14454:	mov	r0, #0
   14458:	mov	r1, #0
   1445c:	mov	r2, r6
   14460:	mov	r3, r5
   14464:	mov	r7, r5
   14468:	bl	133e4 <__mempcpy_chk@plt+0x23b8>
   1446c:	mov	r5, r0
   14470:	add	r4, r0, #1
   14474:	mov	r0, r4
   14478:	bl	15488 <__mempcpy_chk@plt+0x445c>
   1447c:	mov	r6, r0
   14480:	ldr	r0, [r8]
   14484:	ldr	r1, [r8, #40]	; 0x28
   14488:	ldr	r2, [r8, #44]	; 0x2c
   1448c:	stm	sp, {r0, r9, sl}
   14490:	str	r1, [sp, #12]
   14494:	str	r2, [sp, #16]
   14498:	mov	r0, r6
   1449c:	mov	r1, r4
   144a0:	ldr	r2, [sp, #20]
   144a4:	mov	r3, r7
   144a8:	bl	133e4 <__mempcpy_chk@plt+0x23b8>
   144ac:	ldr	r0, [sp, #24]
   144b0:	ldr	r1, [sp, #32]
   144b4:	ldr	r2, [sp, #28]
   144b8:	str	r1, [r2]
   144bc:	cmp	r0, #0
   144c0:	strne	r5, [r0]
   144c4:	mov	r0, r6
   144c8:	sub	sp, fp, #28
   144cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144d4:	add	fp, sp, #24
   144d8:	movw	r8, #33008	; 0x80f0
   144dc:	movt	r8, #2
   144e0:	ldr	r4, [r8]
   144e4:	movw	r5, #33012	; 0x80f4
   144e8:	movt	r5, #2
   144ec:	ldr	r0, [r5]
   144f0:	cmp	r0, #2
   144f4:	blt	14520 <__mempcpy_chk@plt+0x34f4>
   144f8:	add	r7, r4, #12
   144fc:	mov	r6, #0
   14500:	ldr	r0, [r7, r6, lsl #3]
   14504:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   14508:	add	r0, r6, #1
   1450c:	ldr	r1, [r5]
   14510:	add	r2, r6, #2
   14514:	cmp	r2, r1
   14518:	mov	r6, r0
   1451c:	blt	14500 <__mempcpy_chk@plt+0x34d4>
   14520:	ldr	r0, [r4, #4]
   14524:	movw	r7, #33160	; 0x8188
   14528:	movt	r7, #2
   1452c:	cmp	r0, r7
   14530:	beq	14548 <__mempcpy_chk@plt+0x351c>
   14534:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   14538:	movw	r0, #33016	; 0x80f8
   1453c:	movt	r0, #2
   14540:	mov	r6, #256	; 0x100
   14544:	strd	r6, [r0]
   14548:	movw	r6, #33016	; 0x80f8
   1454c:	movt	r6, #2
   14550:	cmp	r4, r6
   14554:	beq	14564 <__mempcpy_chk@plt+0x3538>
   14558:	mov	r0, r4
   1455c:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   14560:	str	r6, [r8]
   14564:	mov	r0, #1
   14568:	str	r0, [r5]
   1456c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14570:	movw	r3, #33112	; 0x8158
   14574:	movt	r3, #2
   14578:	mvn	r2, #0
   1457c:	b	14580 <__mempcpy_chk@plt+0x3554>
   14580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14584:	add	fp, sp, #28
   14588:	sub	sp, sp, #44	; 0x2c
   1458c:	mov	r7, r3
   14590:	str	r2, [sp, #36]	; 0x24
   14594:	str	r1, [sp, #32]
   14598:	mov	r5, r0
   1459c:	bl	10f60 <__errno_location@plt>
   145a0:	cmp	r5, #0
   145a4:	blt	14710 <__mempcpy_chk@plt+0x36e4>
   145a8:	cmn	r5, #-2147483647	; 0x80000001
   145ac:	beq	14710 <__mempcpy_chk@plt+0x36e4>
   145b0:	movw	r4, #33008	; 0x80f0
   145b4:	movt	r4, #2
   145b8:	ldr	r6, [r4]
   145bc:	str	r0, [sp, #28]
   145c0:	ldr	r0, [r0]
   145c4:	str	r0, [sp, #24]
   145c8:	movw	r8, #33012	; 0x80f4
   145cc:	movt	r8, #2
   145d0:	ldr	r1, [r8]
   145d4:	cmp	r1, r5
   145d8:	ble	145e4 <__mempcpy_chk@plt+0x35b8>
   145dc:	mov	sl, r6
   145e0:	b	1464c <__mempcpy_chk@plt+0x3620>
   145e4:	str	r1, [fp, #-32]	; 0xffffffe0
   145e8:	mov	r0, #8
   145ec:	str	r0, [sp]
   145f0:	movw	r9, #33016	; 0x80f8
   145f4:	movt	r9, #2
   145f8:	subs	r0, r6, r9
   145fc:	movne	r0, r6
   14600:	add	r2, r5, #1
   14604:	sub	r2, r2, r1
   14608:	sub	r1, fp, #32
   1460c:	mvn	r3, #-2147483648	; 0x80000000
   14610:	bl	15570 <__mempcpy_chk@plt+0x4544>
   14614:	mov	sl, r0
   14618:	str	r0, [r4]
   1461c:	cmp	r6, r9
   14620:	ldrdeq	r0, [r9]
   14624:	stmeq	sl, {r0, r1}
   14628:	ldr	r1, [r8]
   1462c:	add	r0, sl, r1, lsl #3
   14630:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14634:	sub	r1, r2, r1
   14638:	lsl	r2, r1, #3
   1463c:	mov	r1, #0
   14640:	bl	10f78 <memset@plt>
   14644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14648:	str	r0, [r8]
   1464c:	mov	r9, sl
   14650:	ldr	r6, [r9, r5, lsl #3]!
   14654:	ldr	r4, [r9, #4]!
   14658:	ldm	r7, {r0, r1}
   1465c:	ldr	r2, [r7, #40]	; 0x28
   14660:	ldr	r3, [r7, #44]	; 0x2c
   14664:	orr	r8, r1, #1
   14668:	add	r1, r7, #8
   1466c:	stm	sp, {r0, r8}
   14670:	str	r1, [sp, #20]
   14674:	add	r0, sp, #8
   14678:	stm	r0, {r1, r2, r3}
   1467c:	mov	r0, r4
   14680:	mov	r1, r6
   14684:	ldr	r2, [sp, #32]
   14688:	ldr	r3, [sp, #36]	; 0x24
   1468c:	bl	133e4 <__mempcpy_chk@plt+0x23b8>
   14690:	cmp	r6, r0
   14694:	bhi	146f8 <__mempcpy_chk@plt+0x36cc>
   14698:	add	r6, r0, #1
   1469c:	str	r6, [sl, r5, lsl #3]
   146a0:	movw	r0, #33160	; 0x8188
   146a4:	movt	r0, #2
   146a8:	cmp	r4, r0
   146ac:	beq	146b8 <__mempcpy_chk@plt+0x368c>
   146b0:	mov	r0, r4
   146b4:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   146b8:	mov	r0, r6
   146bc:	bl	15488 <__mempcpy_chk@plt+0x445c>
   146c0:	mov	r4, r0
   146c4:	str	r0, [r9]
   146c8:	ldr	r0, [r7]
   146cc:	ldr	r1, [r7, #40]	; 0x28
   146d0:	ldr	r2, [r7, #44]	; 0x2c
   146d4:	stm	sp, {r0, r8}
   146d8:	ldr	r0, [sp, #20]
   146dc:	add	r3, sp, #8
   146e0:	stm	r3, {r0, r1, r2}
   146e4:	mov	r0, r4
   146e8:	mov	r1, r6
   146ec:	ldr	r2, [sp, #32]
   146f0:	ldr	r3, [sp, #36]	; 0x24
   146f4:	bl	133e4 <__mempcpy_chk@plt+0x23b8>
   146f8:	ldr	r0, [sp, #28]
   146fc:	ldr	r1, [sp, #24]
   14700:	str	r1, [r0]
   14704:	mov	r0, r4
   14708:	sub	sp, fp, #28
   1470c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14710:	bl	11008 <abort@plt>
   14714:	movw	r3, #33112	; 0x8158
   14718:	movt	r3, #2
   1471c:	b	14580 <__mempcpy_chk@plt+0x3554>
   14720:	mov	r1, r0
   14724:	mov	r0, #0
   14728:	b	14570 <__mempcpy_chk@plt+0x3544>
   1472c:	mov	r2, r1
   14730:	mov	r1, r0
   14734:	mov	r0, #0
   14738:	b	14714 <__mempcpy_chk@plt+0x36e8>
   1473c:	push	{r4, r5, r6, sl, fp, lr}
   14740:	add	fp, sp, #16
   14744:	sub	sp, sp, #48	; 0x30
   14748:	mov	r4, r2
   1474c:	mov	r5, r0
   14750:	mov	r6, sp
   14754:	mov	r0, r6
   14758:	bl	14778 <__mempcpy_chk@plt+0x374c>
   1475c:	mov	r0, r5
   14760:	mov	r1, r4
   14764:	mvn	r2, #0
   14768:	mov	r3, r6
   1476c:	bl	14580 <__mempcpy_chk@plt+0x3554>
   14770:	sub	sp, fp, #16
   14774:	pop	{r4, r5, r6, sl, fp, pc}
   14778:	vmov.i32	q8, #0	; 0x00000000
   1477c:	mov	r2, #32
   14780:	mov	r3, r0
   14784:	vst1.32	{d16-d17}, [r3], r2
   14788:	vst1.32	{d16-d17}, [r3]
   1478c:	add	r2, r0, #16
   14790:	vst1.32	{d16-d17}, [r2]
   14794:	cmp	r1, #10
   14798:	strne	r1, [r0]
   1479c:	bxne	lr
   147a0:	push	{fp, lr}
   147a4:	mov	fp, sp
   147a8:	bl	11008 <abort@plt>
   147ac:	push	{r4, r5, r6, r7, fp, lr}
   147b0:	add	fp, sp, #16
   147b4:	sub	sp, sp, #48	; 0x30
   147b8:	mov	r4, r3
   147bc:	mov	r5, r2
   147c0:	mov	r6, r0
   147c4:	mov	r7, sp
   147c8:	mov	r0, r7
   147cc:	bl	14778 <__mempcpy_chk@plt+0x374c>
   147d0:	mov	r0, r6
   147d4:	mov	r1, r5
   147d8:	mov	r2, r4
   147dc:	mov	r3, r7
   147e0:	bl	14580 <__mempcpy_chk@plt+0x3554>
   147e4:	sub	sp, fp, #16
   147e8:	pop	{r4, r5, r6, r7, fp, pc}
   147ec:	mov	r2, r1
   147f0:	mov	r1, r0
   147f4:	mov	r0, #0
   147f8:	b	1473c <__mempcpy_chk@plt+0x3710>
   147fc:	mov	r3, r2
   14800:	mov	r2, r1
   14804:	mov	r1, r0
   14808:	mov	r0, #0
   1480c:	b	147ac <__mempcpy_chk@plt+0x3780>
   14810:	push	{r4, r5, r6, sl, fp, lr}
   14814:	add	fp, sp, #16
   14818:	sub	sp, sp, #48	; 0x30
   1481c:	mov	r4, r1
   14820:	mov	r5, r0
   14824:	mov	r0, #32
   14828:	movw	r1, #33112	; 0x8158
   1482c:	movt	r1, #2
   14830:	add	r3, r1, #16
   14834:	vld1.64	{d16-d17}, [r1], r0
   14838:	mov	r6, sp
   1483c:	vld1.64	{d18-d19}, [r3]
   14840:	add	r3, r6, #16
   14844:	vld1.64	{d20-d21}, [r1]
   14848:	vst1.64	{d18-d19}, [r3]
   1484c:	mov	r1, r6
   14850:	vst1.64	{d16-d17}, [r1], r0
   14854:	vst1.64	{d20-d21}, [r1]
   14858:	mov	r0, r6
   1485c:	mov	r1, r2
   14860:	mov	r2, #1
   14864:	bl	132d8 <__mempcpy_chk@plt+0x22ac>
   14868:	mov	r0, #0
   1486c:	mov	r1, r5
   14870:	mov	r2, r4
   14874:	mov	r3, r6
   14878:	bl	14580 <__mempcpy_chk@plt+0x3554>
   1487c:	sub	sp, fp, #16
   14880:	pop	{r4, r5, r6, sl, fp, pc}
   14884:	mov	r2, r1
   14888:	mvn	r1, #0
   1488c:	b	14810 <__mempcpy_chk@plt+0x37e4>
   14890:	mov	r1, #58	; 0x3a
   14894:	b	14884 <__mempcpy_chk@plt+0x3858>
   14898:	mov	r2, #58	; 0x3a
   1489c:	b	14810 <__mempcpy_chk@plt+0x37e4>
   148a0:	push	{r4, r5, r6, sl, fp, lr}
   148a4:	add	fp, sp, #16
   148a8:	sub	sp, sp, #48	; 0x30
   148ac:	mov	r4, r2
   148b0:	mov	r5, r0
   148b4:	mov	r6, sp
   148b8:	mov	r0, r6
   148bc:	bl	14778 <__mempcpy_chk@plt+0x374c>
   148c0:	mov	r0, r6
   148c4:	mov	r1, #58	; 0x3a
   148c8:	mov	r2, #1
   148cc:	bl	132d8 <__mempcpy_chk@plt+0x22ac>
   148d0:	mov	r0, r5
   148d4:	mov	r1, r4
   148d8:	mvn	r2, #0
   148dc:	mov	r3, r6
   148e0:	bl	14580 <__mempcpy_chk@plt+0x3554>
   148e4:	sub	sp, fp, #16
   148e8:	pop	{r4, r5, r6, sl, fp, pc}
   148ec:	push	{fp, lr}
   148f0:	mov	fp, sp
   148f4:	sub	sp, sp, #8
   148f8:	mvn	ip, #0
   148fc:	str	ip, [sp]
   14900:	bl	1490c <__mempcpy_chk@plt+0x38e0>
   14904:	mov	sp, fp
   14908:	pop	{fp, pc}
   1490c:	push	{r4, r5, r6, r7, fp, lr}
   14910:	add	fp, sp, #16
   14914:	sub	sp, sp, #48	; 0x30
   14918:	mov	r7, r3
   1491c:	mov	r5, r0
   14920:	mov	r0, #32
   14924:	movw	r3, #33112	; 0x8158
   14928:	movt	r3, #2
   1492c:	add	r4, r3, #16
   14930:	vld1.64	{d16-d17}, [r3], r0
   14934:	mov	r6, sp
   14938:	vld1.64	{d18-d19}, [r4]
   1493c:	add	r4, r6, #16
   14940:	vld1.64	{d20-d21}, [r3]
   14944:	vst1.64	{d18-d19}, [r4]
   14948:	mov	r3, r6
   1494c:	vst1.64	{d16-d17}, [r3], r0
   14950:	vst1.64	{d20-d21}, [r3]
   14954:	mov	r0, r6
   14958:	bl	13330 <__mempcpy_chk@plt+0x2304>
   1495c:	ldr	r2, [fp, #8]
   14960:	mov	r0, r5
   14964:	mov	r1, r7
   14968:	mov	r3, r6
   1496c:	bl	14580 <__mempcpy_chk@plt+0x3554>
   14970:	sub	sp, fp, #16
   14974:	pop	{r4, r5, r6, r7, fp, pc}
   14978:	mov	r3, r2
   1497c:	mov	r2, r1
   14980:	mov	r1, r0
   14984:	mov	r0, #0
   14988:	b	148ec <__mempcpy_chk@plt+0x38c0>
   1498c:	push	{fp, lr}
   14990:	mov	fp, sp
   14994:	sub	sp, sp, #8
   14998:	mov	ip, r2
   1499c:	mov	r2, r1
   149a0:	mov	r1, r0
   149a4:	str	r3, [sp]
   149a8:	mov	r0, #0
   149ac:	mov	r3, ip
   149b0:	bl	1490c <__mempcpy_chk@plt+0x38e0>
   149b4:	mov	sp, fp
   149b8:	pop	{fp, pc}
   149bc:	movw	r3, #33024	; 0x8100
   149c0:	movt	r3, #2
   149c4:	b	14580 <__mempcpy_chk@plt+0x3554>
   149c8:	mov	r2, r1
   149cc:	mov	r1, r0
   149d0:	mov	r0, #0
   149d4:	b	149bc <__mempcpy_chk@plt+0x3990>
   149d8:	mvn	r2, #0
   149dc:	b	149bc <__mempcpy_chk@plt+0x3990>
   149e0:	mov	r1, r0
   149e4:	mov	r0, #0
   149e8:	b	149d8 <__mempcpy_chk@plt+0x39ac>
   149ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149f0:	add	fp, sp, #24
   149f4:	sub	sp, sp, #16
   149f8:	mov	r4, r1
   149fc:	mov	r5, r0
   14a00:	mov	r7, #0
   14a04:	mov	r0, #0
   14a08:	mov	r1, r5
   14a0c:	mov	r2, #5
   14a10:	bl	10e58 <dcgettext@plt>
   14a14:	cmp	r0, r5
   14a18:	beq	14a24 <__mempcpy_chk@plt+0x39f8>
   14a1c:	sub	sp, fp, #24
   14a20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a24:	bl	16050 <__mempcpy_chk@plt+0x5024>
   14a28:	mov	r6, r0
   14a2c:	mov	r8, #56	; 0x38
   14a30:	mov	r0, #45	; 0x2d
   14a34:	stm	sp, {r0, r8}
   14a38:	str	r7, [sp, #8]
   14a3c:	str	r7, [sp, #12]
   14a40:	mov	r0, r6
   14a44:	mov	r1, #85	; 0x55
   14a48:	mov	r2, #84	; 0x54
   14a4c:	mov	r3, #70	; 0x46
   14a50:	bl	14ae8 <__mempcpy_chk@plt+0x3abc>
   14a54:	cmp	r0, #0
   14a58:	beq	14a74 <__mempcpy_chk@plt+0x3a48>
   14a5c:	ldrb	r1, [r5]
   14a60:	movw	r2, #27948	; 0x6d2c
   14a64:	movt	r2, #1
   14a68:	movw	r0, #27952	; 0x6d30
   14a6c:	movt	r0, #1
   14a70:	b	14ab8 <__mempcpy_chk@plt+0x3a8c>
   14a74:	mov	r0, #48	; 0x30
   14a78:	mov	r1, #51	; 0x33
   14a7c:	str	r8, [sp]
   14a80:	stmib	sp, {r0, r1}
   14a84:	str	r0, [sp, #12]
   14a88:	mov	r0, r6
   14a8c:	mov	r1, #71	; 0x47
   14a90:	mov	r2, #66	; 0x42
   14a94:	mov	r3, #49	; 0x31
   14a98:	bl	14ae8 <__mempcpy_chk@plt+0x3abc>
   14a9c:	cmp	r0, #0
   14aa0:	beq	14ac8 <__mempcpy_chk@plt+0x3a9c>
   14aa4:	ldrb	r1, [r5]
   14aa8:	movw	r2, #27956	; 0x6d34
   14aac:	movt	r2, #1
   14ab0:	movw	r0, #27960	; 0x6d38
   14ab4:	movt	r0, #1
   14ab8:	cmp	r1, #96	; 0x60
   14abc:	moveq	r0, r2
   14ac0:	sub	sp, fp, #24
   14ac4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ac8:	movw	r1, #27942	; 0x6d26
   14acc:	movt	r1, #1
   14ad0:	movw	r0, #27946	; 0x6d2a
   14ad4:	movt	r0, #1
   14ad8:	cmp	r4, #9
   14adc:	moveq	r0, r1
   14ae0:	sub	sp, fp, #24
   14ae4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ae8:	push	{r4, r5, r6, r7, fp, lr}
   14aec:	add	fp, sp, #16
   14af0:	sub	sp, sp, #16
   14af4:	mov	r4, r3
   14af8:	mov	r5, r2
   14afc:	mov	r7, r1
   14b00:	mov	r6, r0
   14b04:	mov	r0, r1
   14b08:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14b0c:	ldrb	r1, [r6]
   14b10:	cmp	r0, #0
   14b14:	andne	r1, r1, #223	; 0xdf
   14b18:	mov	r0, #0
   14b1c:	cmp	r1, r7
   14b20:	bne	14b60 <__mempcpy_chk@plt+0x3b34>
   14b24:	cmp	r7, #0
   14b28:	moveq	r0, #1
   14b2c:	subeq	sp, fp, #16
   14b30:	popeq	{r4, r5, r6, r7, fp, pc}
   14b34:	ldr	r0, [fp, #20]
   14b38:	ldr	r1, [fp, #16]
   14b3c:	ldr	r2, [fp, #12]
   14b40:	ldr	r3, [fp, #8]
   14b44:	str	r2, [sp]
   14b48:	str	r1, [sp, #4]
   14b4c:	str	r0, [sp, #8]
   14b50:	mov	r0, r6
   14b54:	mov	r1, r5
   14b58:	mov	r2, r4
   14b5c:	bl	14b68 <__mempcpy_chk@plt+0x3b3c>
   14b60:	sub	sp, fp, #16
   14b64:	pop	{r4, r5, r6, r7, fp, pc}
   14b68:	push	{r4, r5, r6, r7, fp, lr}
   14b6c:	add	fp, sp, #16
   14b70:	sub	sp, sp, #8
   14b74:	mov	r4, r3
   14b78:	mov	r5, r2
   14b7c:	mov	r7, r1
   14b80:	mov	r6, r0
   14b84:	mov	r0, r1
   14b88:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14b8c:	ldrb	r1, [r6, #1]
   14b90:	cmp	r0, #0
   14b94:	andne	r1, r1, #223	; 0xdf
   14b98:	mov	r0, #0
   14b9c:	cmp	r1, r7
   14ba0:	bne	14bd8 <__mempcpy_chk@plt+0x3bac>
   14ba4:	cmp	r7, #0
   14ba8:	moveq	r0, #1
   14bac:	subeq	sp, fp, #16
   14bb0:	popeq	{r4, r5, r6, r7, fp, pc}
   14bb4:	ldr	r0, [fp, #16]
   14bb8:	ldr	r1, [fp, #12]
   14bbc:	ldr	r3, [fp, #8]
   14bc0:	str	r1, [sp]
   14bc4:	str	r0, [sp, #4]
   14bc8:	mov	r0, r6
   14bcc:	mov	r1, r5
   14bd0:	mov	r2, r4
   14bd4:	bl	14be0 <__mempcpy_chk@plt+0x3bb4>
   14bd8:	sub	sp, fp, #16
   14bdc:	pop	{r4, r5, r6, r7, fp, pc}
   14be0:	push	{r4, r5, r6, r7, fp, lr}
   14be4:	add	fp, sp, #16
   14be8:	sub	sp, sp, #8
   14bec:	mov	r4, r3
   14bf0:	mov	r5, r2
   14bf4:	mov	r7, r1
   14bf8:	mov	r6, r0
   14bfc:	mov	r0, r1
   14c00:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14c04:	ldrb	r1, [r6, #2]
   14c08:	cmp	r0, #0
   14c0c:	andne	r1, r1, #223	; 0xdf
   14c10:	mov	r0, #0
   14c14:	cmp	r1, r7
   14c18:	bne	14c48 <__mempcpy_chk@plt+0x3c1c>
   14c1c:	cmp	r7, #0
   14c20:	moveq	r0, #1
   14c24:	subeq	sp, fp, #16
   14c28:	popeq	{r4, r5, r6, r7, fp, pc}
   14c2c:	ldr	r0, [fp, #12]
   14c30:	ldr	r3, [fp, #8]
   14c34:	str	r0, [sp]
   14c38:	mov	r0, r6
   14c3c:	mov	r1, r5
   14c40:	mov	r2, r4
   14c44:	bl	14c50 <__mempcpy_chk@plt+0x3c24>
   14c48:	sub	sp, fp, #16
   14c4c:	pop	{r4, r5, r6, r7, fp, pc}
   14c50:	push	{r4, r5, r6, r7, fp, lr}
   14c54:	add	fp, sp, #16
   14c58:	mov	r4, r3
   14c5c:	mov	r5, r2
   14c60:	mov	r7, r1
   14c64:	mov	r6, r0
   14c68:	mov	r0, r1
   14c6c:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14c70:	ldrb	r1, [r6, #3]
   14c74:	ldr	r3, [fp, #8]
   14c78:	cmp	r0, #0
   14c7c:	andne	r1, r1, #223	; 0xdf
   14c80:	mov	r0, #0
   14c84:	cmp	r1, r7
   14c88:	popne	{r4, r5, r6, r7, fp, pc}
   14c8c:	cmp	r7, #0
   14c90:	beq	14ca8 <__mempcpy_chk@plt+0x3c7c>
   14c94:	mov	r0, r6
   14c98:	mov	r1, r5
   14c9c:	mov	r2, r4
   14ca0:	pop	{r4, r5, r6, r7, fp, lr}
   14ca4:	b	14cb0 <__mempcpy_chk@plt+0x3c84>
   14ca8:	mov	r0, #1
   14cac:	pop	{r4, r5, r6, r7, fp, pc}
   14cb0:	push	{r4, r5, r6, r7, fp, lr}
   14cb4:	add	fp, sp, #16
   14cb8:	mov	r4, r3
   14cbc:	mov	r5, r2
   14cc0:	mov	r7, r1
   14cc4:	mov	r6, r0
   14cc8:	mov	r0, r1
   14ccc:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14cd0:	ldrb	r1, [r6, #4]
   14cd4:	cmp	r0, #0
   14cd8:	andne	r1, r1, #223	; 0xdf
   14cdc:	mov	r0, #0
   14ce0:	cmp	r1, r7
   14ce4:	popne	{r4, r5, r6, r7, fp, pc}
   14ce8:	cmp	r7, #0
   14cec:	beq	14d04 <__mempcpy_chk@plt+0x3cd8>
   14cf0:	mov	r0, r6
   14cf4:	mov	r1, r5
   14cf8:	mov	r2, r4
   14cfc:	pop	{r4, r5, r6, r7, fp, lr}
   14d00:	b	14d0c <__mempcpy_chk@plt+0x3ce0>
   14d04:	mov	r0, #1
   14d08:	pop	{r4, r5, r6, r7, fp, pc}
   14d0c:	push	{r4, r5, r6, sl, fp, lr}
   14d10:	add	fp, sp, #16
   14d14:	mov	r4, r2
   14d18:	mov	r6, r1
   14d1c:	mov	r5, r0
   14d20:	mov	r0, r1
   14d24:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14d28:	ldrb	r1, [r5, #5]
   14d2c:	cmp	r0, #0
   14d30:	andne	r1, r1, #223	; 0xdf
   14d34:	mov	r0, #0
   14d38:	cmp	r1, r6
   14d3c:	popne	{r4, r5, r6, sl, fp, pc}
   14d40:	cmp	r6, #0
   14d44:	beq	14d58 <__mempcpy_chk@plt+0x3d2c>
   14d48:	mov	r0, r5
   14d4c:	mov	r1, r4
   14d50:	pop	{r4, r5, r6, sl, fp, lr}
   14d54:	b	14d60 <__mempcpy_chk@plt+0x3d34>
   14d58:	mov	r0, #1
   14d5c:	pop	{r4, r5, r6, sl, fp, pc}
   14d60:	push	{r4, r5, fp, lr}
   14d64:	add	fp, sp, #8
   14d68:	mov	r5, r1
   14d6c:	mov	r4, r0
   14d70:	mov	r0, r1
   14d74:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14d78:	ldrb	r1, [r4, #6]
   14d7c:	cmp	r0, #0
   14d80:	andne	r1, r1, #223	; 0xdf
   14d84:	mov	r0, #0
   14d88:	cmp	r1, r5
   14d8c:	popne	{r4, r5, fp, pc}
   14d90:	cmp	r5, #0
   14d94:	beq	14da4 <__mempcpy_chk@plt+0x3d78>
   14d98:	mov	r0, r4
   14d9c:	pop	{r4, r5, fp, lr}
   14da0:	b	14dac <__mempcpy_chk@plt+0x3d80>
   14da4:	mov	r0, #1
   14da8:	pop	{r4, r5, fp, pc}
   14dac:	push	{r4, sl, fp, lr}
   14db0:	add	fp, sp, #8
   14db4:	mov	r4, r0
   14db8:	mov	r0, #0
   14dbc:	bl	15d20 <__mempcpy_chk@plt+0x4cf4>
   14dc0:	ldrb	r1, [r4, #7]
   14dc4:	cmp	r0, #0
   14dc8:	beq	14de0 <__mempcpy_chk@plt+0x3db4>
   14dcc:	tst	r1, #223	; 0xdf
   14dd0:	moveq	r0, #1
   14dd4:	popeq	{r4, sl, fp, pc}
   14dd8:	mov	r0, #0
   14ddc:	pop	{r4, sl, fp, pc}
   14de0:	cmp	r1, #0
   14de4:	moveq	r0, #1
   14de8:	popeq	{r4, sl, fp, pc}
   14dec:	mov	r0, #0
   14df0:	pop	{r4, sl, fp, pc}
   14df4:	push	{r4, r5, r6, sl, fp, lr}
   14df8:	add	fp, sp, #16
   14dfc:	mov	r5, r1
   14e00:	ldr	r4, [r0], #8
   14e04:	cmp	r4, r0
   14e08:	beq	14e2c <__mempcpy_chk@plt+0x3e00>
   14e0c:	mov	r0, r4
   14e10:	mov	r1, r5
   14e14:	bl	158c4 <__mempcpy_chk@plt+0x4898>
   14e18:	mov	r6, r0
   14e1c:	cmp	r0, #0
   14e20:	moveq	r6, r4
   14e24:	mov	r0, r6
   14e28:	pop	{r4, r5, r6, sl, fp, pc}
   14e2c:	mov	r0, r5
   14e30:	bl	15894 <__mempcpy_chk@plt+0x4868>
   14e34:	cmp	r0, #0
   14e38:	moveq	r6, #0
   14e3c:	moveq	r0, r6
   14e40:	popeq	{r4, r5, r6, sl, fp, pc}
   14e44:	mov	r6, r0
   14e48:	mov	r1, r4
   14e4c:	mov	r2, r5
   14e50:	bl	10e34 <memcpy@plt>
   14e54:	mov	r0, r6
   14e58:	pop	{r4, r5, r6, sl, fp, pc}
   14e5c:	push	{r4, r5, fp, lr}
   14e60:	add	fp, sp, #8
   14e64:	mov	r4, r0
   14e68:	ldr	r5, [r0, #4]
   14e6c:	bl	14eb8 <__mempcpy_chk@plt+0x3e8c>
   14e70:	ldr	r0, [r4, #4]
   14e74:	cmp	r0, r5, lsl #1
   14e78:	bhi	14e9c <__mempcpy_chk@plt+0x3e70>
   14e7c:	lsl	r5, r5, #1
   14e80:	mov	r0, r5
   14e84:	bl	15894 <__mempcpy_chk@plt+0x4868>
   14e88:	cmp	r0, #0
   14e8c:	stmne	r4, {r0, r5}
   14e90:	movne	r0, #1
   14e94:	popne	{r4, r5, fp, pc}
   14e98:	b	14ea8 <__mempcpy_chk@plt+0x3e7c>
   14e9c:	bl	10f60 <__errno_location@plt>
   14ea0:	mov	r1, #12
   14ea4:	str	r1, [r0]
   14ea8:	mov	r0, r4
   14eac:	bl	14ecc <__mempcpy_chk@plt+0x3ea0>
   14eb0:	mov	r0, #0
   14eb4:	pop	{r4, r5, fp, pc}
   14eb8:	mov	r1, r0
   14ebc:	ldr	r0, [r1], #8
   14ec0:	cmp	r0, r1
   14ec4:	bxeq	lr
   14ec8:	b	121e8 <__mempcpy_chk@plt+0x11bc>
   14ecc:	mov	r1, #1024	; 0x400
   14ed0:	add	r2, r0, #8
   14ed4:	str	r2, [r0]
   14ed8:	str	r1, [r0, #4]
   14edc:	bx	lr
   14ee0:	push	{r4, r5, r6, r7, fp, lr}
   14ee4:	add	fp, sp, #16
   14ee8:	mov	r4, r0
   14eec:	add	r5, r0, #8
   14ef0:	ldrd	r0, [r0]
   14ef4:	lsl	r7, r1, #1
   14ef8:	cmp	r0, r5
   14efc:	beq	14f20 <__mempcpy_chk@plt+0x3ef4>
   14f00:	cmp	r7, r1
   14f04:	bcc	14f50 <__mempcpy_chk@plt+0x3f24>
   14f08:	mov	r1, r7
   14f0c:	bl	158c4 <__mempcpy_chk@plt+0x4898>
   14f10:	mov	r6, r0
   14f14:	cmp	r0, #0
   14f18:	bne	14f44 <__mempcpy_chk@plt+0x3f18>
   14f1c:	b	14f5c <__mempcpy_chk@plt+0x3f30>
   14f20:	mov	r0, r7
   14f24:	bl	15894 <__mempcpy_chk@plt+0x4868>
   14f28:	cmp	r0, #0
   14f2c:	moveq	r0, #0
   14f30:	popeq	{r4, r5, r6, r7, fp, pc}
   14f34:	mov	r6, r0
   14f38:	ldr	r2, [r4, #4]
   14f3c:	mov	r1, r5
   14f40:	bl	10e34 <memcpy@plt>
   14f44:	strd	r6, [r4]
   14f48:	mov	r0, #1
   14f4c:	pop	{r4, r5, r6, r7, fp, pc}
   14f50:	bl	10f60 <__errno_location@plt>
   14f54:	mov	r1, #12
   14f58:	str	r1, [r0]
   14f5c:	ldr	r0, [r4]
   14f60:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   14f64:	mov	r0, r4
   14f68:	bl	14f74 <__mempcpy_chk@plt+0x3f48>
   14f6c:	mov	r0, #0
   14f70:	pop	{r4, r5, r6, r7, fp, pc}
   14f74:	mov	r1, #1024	; 0x400
   14f78:	add	r2, r0, #8
   14f7c:	str	r2, [r0]
   14f80:	str	r1, [r0, #4]
   14f84:	bx	lr
   14f88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f8c:	add	fp, sp, #24
   14f90:	sub	sp, sp, #32
   14f94:	mov	r4, r2
   14f98:	mov	r8, r0
   14f9c:	ldr	r6, [fp, #12]
   14fa0:	ldr	r7, [fp, #8]
   14fa4:	cmp	r1, #0
   14fa8:	beq	14fd0 <__mempcpy_chk@plt+0x3fa4>
   14fac:	mov	r5, r1
   14fb0:	str	r4, [sp]
   14fb4:	str	r3, [sp, #4]
   14fb8:	movw	r2, #28048	; 0x6d90
   14fbc:	movt	r2, #1
   14fc0:	mov	r0, r8
   14fc4:	mov	r1, #1
   14fc8:	mov	r3, r5
   14fcc:	b	14fe8 <__mempcpy_chk@plt+0x3fbc>
   14fd0:	str	r3, [sp]
   14fd4:	movw	r2, #28060	; 0x6d9c
   14fd8:	movt	r2, #1
   14fdc:	mov	r0, r8
   14fe0:	mov	r1, #1
   14fe4:	mov	r3, r4
   14fe8:	bl	10f9c <__fprintf_chk@plt>
   14fec:	movw	r1, #28067	; 0x6da3
   14ff0:	movt	r1, #1
   14ff4:	mov	r0, #0
   14ff8:	mov	r2, #5
   14ffc:	bl	10e58 <dcgettext@plt>
   15000:	mov	r3, r0
   15004:	movw	r0, #2022	; 0x7e6
   15008:	str	r0, [sp]
   1500c:	movw	r2, #28785	; 0x7071
   15010:	movt	r2, #1
   15014:	mov	r0, r8
   15018:	mov	r1, #1
   1501c:	bl	10f9c <__fprintf_chk@plt>
   15020:	movw	r4, #25784	; 0x64b8
   15024:	movt	r4, #1
   15028:	mov	r0, r4
   1502c:	mov	r1, r8
   15030:	bl	10dd4 <fputs_unlocked@plt>
   15034:	movw	r1, #28071	; 0x6da7
   15038:	movt	r1, #1
   1503c:	mov	r0, #0
   15040:	mov	r2, #5
   15044:	bl	10e58 <dcgettext@plt>
   15048:	mov	r2, r0
   1504c:	movw	r3, #28242	; 0x6e52
   15050:	movt	r3, #1
   15054:	mov	r0, r8
   15058:	mov	r1, #1
   1505c:	bl	10f9c <__fprintf_chk@plt>
   15060:	mov	r0, r4
   15064:	mov	r1, r8
   15068:	bl	10dd4 <fputs_unlocked@plt>
   1506c:	cmp	r6, #9
   15070:	bhi	150ac <__mempcpy_chk@plt+0x4080>
   15074:	add	r0, pc, #0
   15078:	ldr	pc, [r0, r6, lsl #2]
   1507c:	andeq	r5, r1, r4, lsr #1
   15080:	strheq	r5, [r1], -r8
   15084:	andeq	r5, r1, r8, ror #1
   15088:	andeq	r5, r1, r0, lsl r1
   1508c:	andeq	r5, r1, r8, lsr r1
   15090:	andeq	r5, r1, r0, ror #2
   15094:	andeq	r5, r1, r8, lsl #3
   15098:	andeq	r5, r1, r0, asr #3
   1509c:	andeq	r5, r1, r0, ror #4
   150a0:	andeq	r5, r1, r8, lsl #4
   150a4:	sub	sp, fp, #24
   150a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   150ac:	movw	r1, #28595	; 0x6fb3
   150b0:	movt	r1, #1
   150b4:	b	15210 <__mempcpy_chk@plt+0x41e4>
   150b8:	movw	r1, #28276	; 0x6e74
   150bc:	movt	r1, #1
   150c0:	mov	r0, #0
   150c4:	mov	r2, #5
   150c8:	bl	10e58 <dcgettext@plt>
   150cc:	mov	r2, r0
   150d0:	ldr	r3, [r7]
   150d4:	mov	r0, r8
   150d8:	mov	r1, #1
   150dc:	sub	sp, fp, #24
   150e0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   150e4:	b	10f9c <__fprintf_chk@plt>
   150e8:	movw	r1, #28292	; 0x6e84
   150ec:	movt	r1, #1
   150f0:	mov	r0, #0
   150f4:	mov	r2, #5
   150f8:	bl	10e58 <dcgettext@plt>
   150fc:	mov	r2, r0
   15100:	ldr	r3, [r7]
   15104:	ldr	r0, [r7, #4]
   15108:	str	r0, [sp]
   1510c:	b	151fc <__mempcpy_chk@plt+0x41d0>
   15110:	movw	r1, #28315	; 0x6e9b
   15114:	movt	r1, #1
   15118:	mov	r0, #0
   1511c:	mov	r2, #5
   15120:	bl	10e58 <dcgettext@plt>
   15124:	mov	r2, r0
   15128:	ldr	r3, [r7]
   1512c:	ldmib	r7, {r0, r1}
   15130:	stm	sp, {r0, r1}
   15134:	b	151fc <__mempcpy_chk@plt+0x41d0>
   15138:	movw	r1, #28343	; 0x6eb7
   1513c:	movt	r1, #1
   15140:	mov	r0, #0
   15144:	mov	r2, #5
   15148:	bl	10e58 <dcgettext@plt>
   1514c:	mov	r2, r0
   15150:	ldr	r3, [r7]
   15154:	ldmib	r7, {r0, r1, r7}
   15158:	stm	sp, {r0, r1, r7}
   1515c:	b	151fc <__mempcpy_chk@plt+0x41d0>
   15160:	movw	r1, #28375	; 0x6ed7
   15164:	movt	r1, #1
   15168:	mov	r0, #0
   1516c:	mov	r2, #5
   15170:	bl	10e58 <dcgettext@plt>
   15174:	mov	r2, r0
   15178:	ldr	r3, [r7]
   1517c:	ldmib	r7, {r0, r1, r6, r7}
   15180:	stm	sp, {r0, r1, r6, r7}
   15184:	b	151fc <__mempcpy_chk@plt+0x41d0>
   15188:	movw	r1, #28411	; 0x6efb
   1518c:	movt	r1, #1
   15190:	mov	r0, #0
   15194:	mov	r2, #5
   15198:	bl	10e58 <dcgettext@plt>
   1519c:	mov	r2, r0
   151a0:	ldr	r3, [r7]
   151a4:	ldmib	r7, {r0, r1, r6}
   151a8:	ldr	r5, [r7, #16]
   151ac:	ldr	r7, [r7, #20]
   151b0:	stm	sp, {r0, r1, r6}
   151b4:	str	r5, [sp, #12]
   151b8:	str	r7, [sp, #16]
   151bc:	b	151fc <__mempcpy_chk@plt+0x41d0>
   151c0:	movw	r1, #28451	; 0x6f23
   151c4:	movt	r1, #1
   151c8:	mov	r0, #0
   151cc:	mov	r2, #5
   151d0:	bl	10e58 <dcgettext@plt>
   151d4:	mov	r2, r0
   151d8:	ldr	r3, [r7]
   151dc:	ldmib	r7, {r0, r1, r6}
   151e0:	ldr	r5, [r7, #16]
   151e4:	ldr	r4, [r7, #20]
   151e8:	ldr	r7, [r7, #24]
   151ec:	stm	sp, {r0, r1, r6}
   151f0:	str	r5, [sp, #12]
   151f4:	str	r4, [sp, #16]
   151f8:	str	r7, [sp, #20]
   151fc:	mov	r0, r8
   15200:	mov	r1, #1
   15204:	b	152b0 <__mempcpy_chk@plt+0x4284>
   15208:	movw	r1, #28543	; 0x6f7f
   1520c:	movt	r1, #1
   15210:	mov	r0, #0
   15214:	mov	r2, #5
   15218:	bl	10e58 <dcgettext@plt>
   1521c:	mov	ip, r0
   15220:	ldr	r3, [r7]
   15224:	ldr	r0, [r7, #4]
   15228:	ldr	r1, [r7, #8]
   1522c:	ldr	r6, [r7, #12]
   15230:	ldr	r5, [r7, #16]
   15234:	ldr	r4, [r7, #20]
   15238:	ldr	r2, [r7, #24]
   1523c:	ldr	lr, [r7, #28]
   15240:	ldr	r7, [r7, #32]
   15244:	stm	sp, {r0, r1, r6}
   15248:	str	r5, [sp, #12]
   1524c:	str	r4, [sp, #16]
   15250:	str	r2, [sp, #20]
   15254:	str	lr, [sp, #24]
   15258:	str	r7, [sp, #28]
   1525c:	b	152a4 <__mempcpy_chk@plt+0x4278>
   15260:	movw	r1, #28495	; 0x6f4f
   15264:	movt	r1, #1
   15268:	mov	r0, #0
   1526c:	mov	r2, #5
   15270:	bl	10e58 <dcgettext@plt>
   15274:	mov	ip, r0
   15278:	ldr	r3, [r7]
   1527c:	ldmib	r7, {r0, r1, r6}
   15280:	ldr	r5, [r7, #16]
   15284:	ldr	r4, [r7, #20]
   15288:	ldr	r2, [r7, #24]
   1528c:	ldr	r7, [r7, #28]
   15290:	stm	sp, {r0, r1, r6}
   15294:	str	r5, [sp, #12]
   15298:	str	r4, [sp, #16]
   1529c:	str	r2, [sp, #20]
   152a0:	str	r7, [sp, #24]
   152a4:	mov	r0, r8
   152a8:	mov	r1, #1
   152ac:	mov	r2, ip
   152b0:	bl	10f9c <__fprintf_chk@plt>
   152b4:	sub	sp, fp, #24
   152b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   152bc:	push	{r4, sl, fp, lr}
   152c0:	add	fp, sp, #8
   152c4:	sub	sp, sp, #8
   152c8:	mov	lr, #0
   152cc:	ldr	ip, [fp, #8]
   152d0:	ldr	r4, [ip, lr, lsl #2]
   152d4:	add	lr, lr, #1
   152d8:	cmp	r4, #0
   152dc:	bne	152d0 <__mempcpy_chk@plt+0x42a4>
   152e0:	sub	r4, lr, #1
   152e4:	str	ip, [sp]
   152e8:	str	r4, [sp, #4]
   152ec:	bl	14f88 <__mempcpy_chk@plt+0x3f5c>
   152f0:	sub	sp, fp, #8
   152f4:	pop	{r4, sl, fp, pc}
   152f8:	push	{r4, r5, fp, lr}
   152fc:	add	fp, sp, #8
   15300:	sub	sp, sp, #48	; 0x30
   15304:	mov	ip, #0
   15308:	ldr	r4, [fp, #8]
   1530c:	add	lr, sp, #8
   15310:	ldr	r5, [r4]
   15314:	str	r5, [lr, ip, lsl #2]
   15318:	cmp	r5, #0
   1531c:	beq	15330 <__mempcpy_chk@plt+0x4304>
   15320:	add	ip, ip, #1
   15324:	add	r4, r4, #4
   15328:	cmp	ip, #10
   1532c:	bcc	15310 <__mempcpy_chk@plt+0x42e4>
   15330:	str	lr, [sp]
   15334:	str	ip, [sp, #4]
   15338:	bl	14f88 <__mempcpy_chk@plt+0x3f5c>
   1533c:	sub	sp, fp, #8
   15340:	pop	{r4, r5, fp, pc}
   15344:	push	{fp, lr}
   15348:	mov	fp, sp
   1534c:	sub	sp, sp, #8
   15350:	add	ip, fp, #8
   15354:	str	ip, [sp, #4]
   15358:	str	ip, [sp]
   1535c:	bl	152f8 <__mempcpy_chk@plt+0x42cc>
   15360:	mov	sp, fp
   15364:	pop	{fp, pc}
   15368:	push	{fp, lr}
   1536c:	mov	fp, sp
   15370:	movw	r0, #33092	; 0x8144
   15374:	movt	r0, #2
   15378:	ldr	r1, [r0]
   1537c:	movw	r0, #25784	; 0x64b8
   15380:	movt	r0, #1
   15384:	bl	10dd4 <fputs_unlocked@plt>
   15388:	movw	r1, #28655	; 0x6fef
   1538c:	movt	r1, #1
   15390:	mov	r0, #0
   15394:	mov	r2, #5
   15398:	bl	10e58 <dcgettext@plt>
   1539c:	mov	r1, r0
   153a0:	movw	r2, #28675	; 0x7003
   153a4:	movt	r2, #1
   153a8:	mov	r0, #1
   153ac:	bl	10f84 <__printf_chk@plt>
   153b0:	movw	r1, #28697	; 0x7019
   153b4:	movt	r1, #1
   153b8:	mov	r0, #0
   153bc:	mov	r2, #5
   153c0:	bl	10e58 <dcgettext@plt>
   153c4:	mov	r1, r0
   153c8:	movw	r2, #26885	; 0x6905
   153cc:	movt	r2, #1
   153d0:	movw	r3, #27095	; 0x69d7
   153d4:	movt	r3, #1
   153d8:	mov	r0, #1
   153dc:	bl	10f84 <__printf_chk@plt>
   153e0:	movw	r1, #28717	; 0x702d
   153e4:	movt	r1, #1
   153e8:	mov	r0, #0
   153ec:	mov	r2, #5
   153f0:	bl	10e58 <dcgettext@plt>
   153f4:	mov	r1, r0
   153f8:	movw	r2, #28756	; 0x7054
   153fc:	movt	r2, #1
   15400:	mov	r0, #1
   15404:	pop	{fp, lr}
   15408:	b	10f84 <__printf_chk@plt>
   1540c:	b	15410 <__mempcpy_chk@plt+0x43e4>
   15410:	push	{r4, r5, r6, sl, fp, lr}
   15414:	add	fp, sp, #16
   15418:	mov	r4, r2
   1541c:	mov	r5, r1
   15420:	mov	r6, r0
   15424:	bl	160e8 <__mempcpy_chk@plt+0x50bc>
   15428:	cmp	r0, #0
   1542c:	popne	{r4, r5, r6, sl, fp, pc}
   15430:	cmp	r6, #0
   15434:	beq	15448 <__mempcpy_chk@plt+0x441c>
   15438:	cmp	r5, #0
   1543c:	cmpne	r4, #0
   15440:	bne	15448 <__mempcpy_chk@plt+0x441c>
   15444:	pop	{r4, r5, r6, sl, fp, pc}
   15448:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   1544c:	push	{fp, lr}
   15450:	mov	fp, sp
   15454:	bl	15894 <__mempcpy_chk@plt+0x4868>
   15458:	bl	15460 <__mempcpy_chk@plt+0x4434>
   1545c:	pop	{fp, pc}
   15460:	cmp	r0, #0
   15464:	bxne	lr
   15468:	push	{fp, lr}
   1546c:	mov	fp, sp
   15470:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   15474:	push	{fp, lr}
   15478:	mov	fp, sp
   1547c:	bl	1601c <__mempcpy_chk@plt+0x4ff0>
   15480:	bl	15460 <__mempcpy_chk@plt+0x4434>
   15484:	pop	{fp, pc}
   15488:	b	1544c <__mempcpy_chk@plt+0x4420>
   1548c:	push	{r4, r5, fp, lr}
   15490:	add	fp, sp, #8
   15494:	mov	r4, r1
   15498:	mov	r5, r0
   1549c:	bl	158c4 <__mempcpy_chk@plt+0x4898>
   154a0:	cmp	r0, #0
   154a4:	popne	{r4, r5, fp, pc}
   154a8:	cmp	r5, #0
   154ac:	beq	154bc <__mempcpy_chk@plt+0x4490>
   154b0:	cmp	r4, #0
   154b4:	bne	154bc <__mempcpy_chk@plt+0x4490>
   154b8:	pop	{r4, r5, fp, pc}
   154bc:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   154c0:	push	{fp, lr}
   154c4:	mov	fp, sp
   154c8:	bl	16020 <__mempcpy_chk@plt+0x4ff4>
   154cc:	bl	15460 <__mempcpy_chk@plt+0x4434>
   154d0:	pop	{fp, pc}
   154d4:	push	{fp, lr}
   154d8:	mov	fp, sp
   154dc:	bl	16030 <__mempcpy_chk@plt+0x5004>
   154e0:	bl	15460 <__mempcpy_chk@plt+0x4434>
   154e4:	pop	{fp, pc}
   154e8:	push	{fp, lr}
   154ec:	mov	fp, sp
   154f0:	mov	r2, r1
   154f4:	mov	r1, r0
   154f8:	mov	r0, #0
   154fc:	bl	15410 <__mempcpy_chk@plt+0x43e4>
   15500:	pop	{fp, pc}
   15504:	mov	r2, r1
   15508:	mov	r1, r0
   1550c:	mov	r0, #0
   15510:	b	154d4 <__mempcpy_chk@plt+0x44a8>
   15514:	mov	r2, #1
   15518:	b	1551c <__mempcpy_chk@plt+0x44f0>
   1551c:	push	{r4, r5, fp, lr}
   15520:	add	fp, sp, #8
   15524:	mov	r4, r1
   15528:	ldr	r5, [r1]
   1552c:	cmp	r0, #0
   15530:	beq	15548 <__mempcpy_chk@plt+0x451c>
   15534:	mov	r1, #1
   15538:	add	r1, r1, r5, lsr #1
   1553c:	adds	r5, r5, r1
   15540:	bcc	15560 <__mempcpy_chk@plt+0x4534>
   15544:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   15548:	cmp	r5, #0
   1554c:	bne	15560 <__mempcpy_chk@plt+0x4534>
   15550:	mov	r1, #64	; 0x40
   15554:	udiv	r5, r1, r2
   15558:	cmp	r2, #64	; 0x40
   1555c:	addhi	r5, r5, #1
   15560:	mov	r1, r5
   15564:	bl	15410 <__mempcpy_chk@plt+0x43e4>
   15568:	str	r5, [r4]
   1556c:	pop	{r4, r5, fp, pc}
   15570:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15574:	add	fp, sp, #24
   15578:	mov	r8, r1
   1557c:	ldr	r6, [r1]
   15580:	add	r1, r6, r6, asr #1
   15584:	cmp	r1, r6
   15588:	mvnvs	r1, #-2147483648	; 0x80000000
   1558c:	cmp	r1, r3
   15590:	mov	r5, r1
   15594:	movgt	r5, r3
   15598:	cmn	r3, #1
   1559c:	movle	r5, r1
   155a0:	ldr	r4, [fp, #8]
   155a4:	cmn	r4, #1
   155a8:	ble	155d0 <__mempcpy_chk@plt+0x45a4>
   155ac:	cmp	r4, #0
   155b0:	beq	15624 <__mempcpy_chk@plt+0x45f8>
   155b4:	cmn	r5, #1
   155b8:	ble	155f8 <__mempcpy_chk@plt+0x45cc>
   155bc:	mvn	r7, #-2147483648	; 0x80000000
   155c0:	udiv	r1, r7, r4
   155c4:	cmp	r1, r5
   155c8:	bge	15624 <__mempcpy_chk@plt+0x45f8>
   155cc:	b	15634 <__mempcpy_chk@plt+0x4608>
   155d0:	cmn	r5, #1
   155d4:	ble	15614 <__mempcpy_chk@plt+0x45e8>
   155d8:	cmn	r4, #1
   155dc:	beq	15624 <__mempcpy_chk@plt+0x45f8>
   155e0:	mov	r1, #-2147483648	; 0x80000000
   155e4:	sdiv	r1, r1, r4
   155e8:	mvn	r7, #-2147483648	; 0x80000000
   155ec:	cmp	r1, r5
   155f0:	bge	15624 <__mempcpy_chk@plt+0x45f8>
   155f4:	b	15634 <__mempcpy_chk@plt+0x4608>
   155f8:	beq	15624 <__mempcpy_chk@plt+0x45f8>
   155fc:	mov	r1, #-2147483648	; 0x80000000
   15600:	sdiv	r1, r1, r5
   15604:	mvn	r7, #-2147483648	; 0x80000000
   15608:	cmp	r1, r4
   1560c:	bge	15624 <__mempcpy_chk@plt+0x45f8>
   15610:	b	15634 <__mempcpy_chk@plt+0x4608>
   15614:	mvn	r7, #-2147483648	; 0x80000000
   15618:	sdiv	r1, r7, r4
   1561c:	cmp	r5, r1
   15620:	blt	15634 <__mempcpy_chk@plt+0x4608>
   15624:	mul	r1, r5, r4
   15628:	mov	r7, #64	; 0x40
   1562c:	cmp	r1, #63	; 0x3f
   15630:	bgt	1563c <__mempcpy_chk@plt+0x4610>
   15634:	sdiv	r5, r7, r4
   15638:	mul	r1, r5, r4
   1563c:	cmp	r0, #0
   15640:	moveq	r7, #0
   15644:	streq	r7, [r8]
   15648:	sub	r7, r5, r6
   1564c:	cmp	r7, r2
   15650:	bge	156fc <__mempcpy_chk@plt+0x46d0>
   15654:	add	r5, r6, r2
   15658:	mov	r1, #0
   1565c:	cmp	r5, r3
   15660:	mov	r2, #0
   15664:	movwgt	r2, #1
   15668:	cmn	r3, #1
   1566c:	movwgt	r1, #1
   15670:	cmp	r5, r6
   15674:	bvs	156e4 <__mempcpy_chk@plt+0x46b8>
   15678:	ands	r1, r1, r2
   1567c:	bne	156e4 <__mempcpy_chk@plt+0x46b8>
   15680:	cmn	r4, #1
   15684:	ble	156ac <__mempcpy_chk@plt+0x4680>
   15688:	cmp	r4, #0
   1568c:	beq	156f8 <__mempcpy_chk@plt+0x46cc>
   15690:	cmn	r5, #1
   15694:	ble	156d0 <__mempcpy_chk@plt+0x46a4>
   15698:	mvn	r1, #-2147483648	; 0x80000000
   1569c:	udiv	r1, r1, r4
   156a0:	cmp	r1, r5
   156a4:	bge	156f8 <__mempcpy_chk@plt+0x46cc>
   156a8:	b	156e4 <__mempcpy_chk@plt+0x46b8>
   156ac:	cmn	r5, #1
   156b0:	ble	156e8 <__mempcpy_chk@plt+0x46bc>
   156b4:	cmn	r4, #1
   156b8:	beq	156f8 <__mempcpy_chk@plt+0x46cc>
   156bc:	mov	r1, #-2147483648	; 0x80000000
   156c0:	sdiv	r1, r1, r4
   156c4:	cmp	r1, r5
   156c8:	bge	156f8 <__mempcpy_chk@plt+0x46cc>
   156cc:	b	156e4 <__mempcpy_chk@plt+0x46b8>
   156d0:	beq	156f8 <__mempcpy_chk@plt+0x46cc>
   156d4:	mov	r1, #-2147483648	; 0x80000000
   156d8:	sdiv	r1, r1, r5
   156dc:	cmp	r1, r4
   156e0:	bge	156f8 <__mempcpy_chk@plt+0x46cc>
   156e4:	bl	157fc <__mempcpy_chk@plt+0x47d0>
   156e8:	mvn	r1, #-2147483648	; 0x80000000
   156ec:	sdiv	r1, r1, r4
   156f0:	cmp	r5, r1
   156f4:	blt	156e4 <__mempcpy_chk@plt+0x46b8>
   156f8:	mul	r1, r5, r4
   156fc:	bl	1548c <__mempcpy_chk@plt+0x4460>
   15700:	str	r5, [r8]
   15704:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15708:	mov	r1, #1
   1570c:	b	15710 <__mempcpy_chk@plt+0x46e4>
   15710:	push	{fp, lr}
   15714:	mov	fp, sp
   15718:	bl	15840 <__mempcpy_chk@plt+0x4814>
   1571c:	bl	15460 <__mempcpy_chk@plt+0x4434>
   15720:	pop	{fp, pc}
   15724:	mov	r1, #1
   15728:	b	1572c <__mempcpy_chk@plt+0x4700>
   1572c:	push	{fp, lr}
   15730:	mov	fp, sp
   15734:	bl	1602c <__mempcpy_chk@plt+0x5000>
   15738:	bl	15460 <__mempcpy_chk@plt+0x4434>
   1573c:	pop	{fp, pc}
   15740:	push	{r4, r5, r6, sl, fp, lr}
   15744:	add	fp, sp, #16
   15748:	mov	r4, r1
   1574c:	mov	r5, r0
   15750:	mov	r0, r1
   15754:	bl	1544c <__mempcpy_chk@plt+0x4420>
   15758:	mov	r6, r0
   1575c:	mov	r1, r5
   15760:	mov	r2, r4
   15764:	bl	10e34 <memcpy@plt>
   15768:	mov	r0, r6
   1576c:	pop	{r4, r5, r6, sl, fp, pc}
   15770:	push	{r4, r5, r6, sl, fp, lr}
   15774:	add	fp, sp, #16
   15778:	mov	r4, r1
   1577c:	mov	r5, r0
   15780:	mov	r0, r1
   15784:	bl	15474 <__mempcpy_chk@plt+0x4448>
   15788:	mov	r6, r0
   1578c:	mov	r1, r5
   15790:	mov	r2, r4
   15794:	bl	10e34 <memcpy@plt>
   15798:	mov	r0, r6
   1579c:	pop	{r4, r5, r6, sl, fp, pc}
   157a0:	push	{r4, r5, r6, sl, fp, lr}
   157a4:	add	fp, sp, #16
   157a8:	mov	r4, r1
   157ac:	mov	r5, r0
   157b0:	add	r0, r1, #1
   157b4:	bl	15474 <__mempcpy_chk@plt+0x4448>
   157b8:	mov	r6, r0
   157bc:	mov	r0, #0
   157c0:	strb	r0, [r6, r4]
   157c4:	mov	r0, r6
   157c8:	mov	r1, r5
   157cc:	mov	r2, r4
   157d0:	bl	10e34 <memcpy@plt>
   157d4:	mov	r0, r6
   157d8:	pop	{r4, r5, r6, sl, fp, pc}
   157dc:	push	{r4, sl, fp, lr}
   157e0:	add	fp, sp, #8
   157e4:	mov	r4, r0
   157e8:	bl	10f54 <strlen@plt>
   157ec:	add	r1, r0, #1
   157f0:	mov	r0, r4
   157f4:	pop	{r4, sl, fp, lr}
   157f8:	b	15740 <__mempcpy_chk@plt+0x4714>
   157fc:	push	{fp, lr}
   15800:	mov	fp, sp
   15804:	movw	r0, #33004	; 0x80ec
   15808:	movt	r0, #2
   1580c:	ldr	r4, [r0]
   15810:	movw	r1, #28832	; 0x70a0
   15814:	movt	r1, #1
   15818:	mov	r0, #0
   1581c:	mov	r2, #5
   15820:	bl	10e58 <dcgettext@plt>
   15824:	mov	r3, r0
   15828:	movw	r2, #27665	; 0x6c11
   1582c:	movt	r2, #1
   15830:	mov	r0, r4
   15834:	mov	r1, #0
   15838:	bl	10ee8 <error@plt>
   1583c:	bl	11008 <abort@plt>
   15840:	clz	r2, r1
   15844:	lsr	r2, r2, #5
   15848:	clz	r3, r0
   1584c:	lsr	r3, r3, #5
   15850:	orrs	r2, r3, r2
   15854:	movwne	r1, #1
   15858:	movwne	r0, #1
   1585c:	cmp	r1, #0
   15860:	beq	15890 <__mempcpy_chk@plt+0x4864>
   15864:	mvn	r2, #-2147483648	; 0x80000000
   15868:	udiv	r2, r2, r1
   1586c:	cmp	r2, r0
   15870:	bcs	15890 <__mempcpy_chk@plt+0x4864>
   15874:	push	{fp, lr}
   15878:	mov	fp, sp
   1587c:	bl	10f60 <__errno_location@plt>
   15880:	mov	r1, #12
   15884:	str	r1, [r0]
   15888:	mov	r0, #0
   1588c:	pop	{fp, pc}
   15890:	b	10dc8 <calloc@plt>
   15894:	cmp	r0, #0
   15898:	movweq	r0, #1
   1589c:	cmn	r0, #1
   158a0:	ble	158a8 <__mempcpy_chk@plt+0x487c>
   158a4:	b	10ef4 <malloc@plt>
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	bl	10f60 <__errno_location@plt>
   158b4:	mov	r1, #12
   158b8:	str	r1, [r0]
   158bc:	mov	r0, #0
   158c0:	pop	{fp, pc}
   158c4:	push	{fp, lr}
   158c8:	mov	fp, sp
   158cc:	cmp	r0, #0
   158d0:	beq	158ec <__mempcpy_chk@plt+0x48c0>
   158d4:	cmp	r1, #0
   158d8:	beq	158f8 <__mempcpy_chk@plt+0x48cc>
   158dc:	cmn	r1, #1
   158e0:	ble	15904 <__mempcpy_chk@plt+0x48d8>
   158e4:	pop	{fp, lr}
   158e8:	b	10e64 <realloc@plt>
   158ec:	mov	r0, r1
   158f0:	pop	{fp, lr}
   158f4:	b	15894 <__mempcpy_chk@plt+0x4868>
   158f8:	bl	121e8 <__mempcpy_chk@plt+0x11bc>
   158fc:	mov	r0, #0
   15900:	pop	{fp, pc}
   15904:	bl	10f60 <__errno_location@plt>
   15908:	mov	r1, #12
   1590c:	str	r1, [r0]
   15910:	mov	r0, #0
   15914:	pop	{fp, pc}
   15918:	push	{r4, r5, fp, lr}
   1591c:	add	fp, sp, #8
   15920:	rsb	lr, r2, #64	; 0x40
   15924:	lsr	ip, r0, lr
   15928:	rsb	r3, lr, #32
   1592c:	orr	ip, ip, r1, lsl r3
   15930:	rsb	r4, r2, #32
   15934:	cmp	r4, #0
   15938:	lsrge	ip, r1, r4
   1593c:	lsl	r3, r0, r2
   15940:	sub	r5, r2, #32
   15944:	cmp	r5, #0
   15948:	movwge	r3, #0
   1594c:	orr	ip, ip, r3
   15950:	lsr	r3, r0, r4
   15954:	orr	r2, r3, r1, lsl r2
   15958:	lslge	r2, r0, r5
   1595c:	lsr	r0, r1, lr
   15960:	cmp	r4, #0
   15964:	movwge	r0, #0
   15968:	orr	r1, r0, r2
   1596c:	mov	r0, ip
   15970:	pop	{r4, r5, fp, pc}
   15974:	push	{r4, r5, fp, lr}
   15978:	add	fp, sp, #8
   1597c:	lsr	ip, r0, r2
   15980:	rsb	r3, r2, #32
   15984:	orr	ip, ip, r1, lsl r3
   15988:	sub	lr, r2, #32
   1598c:	cmp	lr, #0
   15990:	lsrge	ip, r1, lr
   15994:	rsb	r4, r2, #64	; 0x40
   15998:	lsl	r5, r0, r4
   1599c:	cmp	r3, #0
   159a0:	movwge	r5, #0
   159a4:	orr	ip, r5, ip
   159a8:	rsb	r5, r4, #32
   159ac:	lsr	r5, r0, r5
   159b0:	orr	r4, r5, r1, lsl r4
   159b4:	cmp	r3, #0
   159b8:	lslge	r4, r0, r3
   159bc:	lsr	r0, r1, r2
   159c0:	cmp	lr, #0
   159c4:	movwge	r0, #0
   159c8:	orr	r1, r4, r0
   159cc:	mov	r0, ip
   159d0:	pop	{r4, r5, fp, pc}
   159d4:	rsb	r1, r1, #32
   159d8:	ror	r0, r0, r1
   159dc:	bx	lr
   159e0:	ror	r0, r0, r1
   159e4:	bx	lr
   159e8:	rsb	r1, r1, #32
   159ec:	ror	r0, r0, r1
   159f0:	bx	lr
   159f4:	ror	r0, r0, r1
   159f8:	bx	lr
   159fc:	and	r2, r1, #15
   15a00:	lsl	r2, r0, r2
   15a04:	rsb	r1, r1, #0
   15a08:	and	r1, r1, #15
   15a0c:	orr	r0, r2, r0, lsr r1
   15a10:	uxth	r0, r0
   15a14:	bx	lr
   15a18:	and	r2, r1, #15
   15a1c:	lsr	r2, r0, r2
   15a20:	rsb	r1, r1, #0
   15a24:	and	r1, r1, #15
   15a28:	orr	r0, r2, r0, lsl r1
   15a2c:	uxth	r0, r0
   15a30:	bx	lr
   15a34:	and	r2, r1, #7
   15a38:	lsl	r2, r0, r2
   15a3c:	rsb	r1, r1, #0
   15a40:	and	r1, r1, #7
   15a44:	orr	r0, r2, r0, lsr r1
   15a48:	uxtb	r0, r0
   15a4c:	bx	lr
   15a50:	and	r2, r1, #7
   15a54:	lsr	r2, r0, r2
   15a58:	rsb	r1, r1, #0
   15a5c:	and	r1, r1, #7
   15a60:	orr	r0, r2, r0, lsl r1
   15a64:	uxtb	r0, r0
   15a68:	bx	lr
   15a6c:	mov	r1, r0
   15a70:	sub	r2, r0, #65	; 0x41
   15a74:	mov	r0, #1
   15a78:	cmp	r2, #26
   15a7c:	subcs	r2, r1, #97	; 0x61
   15a80:	cmpcs	r2, #26
   15a84:	bcs	15a8c <__mempcpy_chk@plt+0x4a60>
   15a88:	bx	lr
   15a8c:	sub	r1, r1, #48	; 0x30
   15a90:	cmp	r1, #10
   15a94:	movcs	r0, #0
   15a98:	bx	lr
   15a9c:	mov	r1, r0
   15aa0:	sub	r2, r0, #65	; 0x41
   15aa4:	mov	r0, #1
   15aa8:	cmp	r2, #26
   15aac:	subcs	r1, r1, #97	; 0x61
   15ab0:	cmpcs	r1, #26
   15ab4:	movcs	r0, #0
   15ab8:	bx	lr
   15abc:	mov	r1, #0
   15ac0:	cmp	r0, #128	; 0x80
   15ac4:	movwcc	r1, #1
   15ac8:	mov	r0, r1
   15acc:	bx	lr
   15ad0:	sub	r1, r0, #9
   15ad4:	clz	r1, r1
   15ad8:	lsr	r1, r1, #5
   15adc:	sub	r0, r0, #32
   15ae0:	clz	r0, r0
   15ae4:	lsr	r0, r0, #5
   15ae8:	orr	r0, r0, r1
   15aec:	bx	lr
   15af0:	mov	r1, r0
   15af4:	mov	r0, #1
   15af8:	cmp	r1, #32
   15afc:	bxcc	lr
   15b00:	cmp	r1, #127	; 0x7f
   15b04:	movne	r0, #0
   15b08:	bx	lr
   15b0c:	sub	r1, r0, #48	; 0x30
   15b10:	mov	r0, #0
   15b14:	cmp	r1, #10
   15b18:	movwcc	r0, #1
   15b1c:	bx	lr
   15b20:	sub	r1, r0, #33	; 0x21
   15b24:	mov	r0, #0
   15b28:	cmp	r1, #94	; 0x5e
   15b2c:	movwcc	r0, #1
   15b30:	bx	lr
   15b34:	sub	r1, r0, #97	; 0x61
   15b38:	mov	r0, #0
   15b3c:	cmp	r1, #26
   15b40:	movwcc	r0, #1
   15b44:	bx	lr
   15b48:	sub	r1, r0, #32
   15b4c:	mov	r0, #0
   15b50:	cmp	r1, #95	; 0x5f
   15b54:	movwcc	r0, #1
   15b58:	bx	lr
   15b5c:	sub	r1, r0, #33	; 0x21
   15b60:	cmp	r1, #93	; 0x5d
   15b64:	bhi	15cf0 <__mempcpy_chk@plt+0x4cc4>
   15b68:	mov	r0, #1
   15b6c:	add	r2, pc, #0
   15b70:	ldr	pc, [r2, r1, lsl #2]
   15b74:	andeq	r5, r1, ip, ror #25
   15b78:	andeq	r5, r1, ip, ror #25
   15b7c:	andeq	r5, r1, ip, ror #25
   15b80:	andeq	r5, r1, ip, ror #25
   15b84:	andeq	r5, r1, ip, ror #25
   15b88:	andeq	r5, r1, ip, ror #25
   15b8c:	andeq	r5, r1, ip, ror #25
   15b90:	andeq	r5, r1, ip, ror #25
   15b94:	andeq	r5, r1, ip, ror #25
   15b98:	andeq	r5, r1, ip, ror #25
   15b9c:	andeq	r5, r1, ip, ror #25
   15ba0:	andeq	r5, r1, ip, ror #25
   15ba4:	andeq	r5, r1, ip, ror #25
   15ba8:	andeq	r5, r1, ip, ror #25
   15bac:	andeq	r5, r1, ip, ror #25
   15bb0:	strdeq	r5, [r1], -r0
   15bb4:	strdeq	r5, [r1], -r0
   15bb8:	strdeq	r5, [r1], -r0
   15bbc:	strdeq	r5, [r1], -r0
   15bc0:	strdeq	r5, [r1], -r0
   15bc4:	strdeq	r5, [r1], -r0
   15bc8:	strdeq	r5, [r1], -r0
   15bcc:	strdeq	r5, [r1], -r0
   15bd0:	strdeq	r5, [r1], -r0
   15bd4:	strdeq	r5, [r1], -r0
   15bd8:	andeq	r5, r1, ip, ror #25
   15bdc:	andeq	r5, r1, ip, ror #25
   15be0:	andeq	r5, r1, ip, ror #25
   15be4:	andeq	r5, r1, ip, ror #25
   15be8:	andeq	r5, r1, ip, ror #25
   15bec:	andeq	r5, r1, ip, ror #25
   15bf0:	andeq	r5, r1, ip, ror #25
   15bf4:	strdeq	r5, [r1], -r0
   15bf8:	strdeq	r5, [r1], -r0
   15bfc:	strdeq	r5, [r1], -r0
   15c00:	strdeq	r5, [r1], -r0
   15c04:	strdeq	r5, [r1], -r0
   15c08:	strdeq	r5, [r1], -r0
   15c0c:	strdeq	r5, [r1], -r0
   15c10:	strdeq	r5, [r1], -r0
   15c14:	strdeq	r5, [r1], -r0
   15c18:	strdeq	r5, [r1], -r0
   15c1c:	strdeq	r5, [r1], -r0
   15c20:	strdeq	r5, [r1], -r0
   15c24:	strdeq	r5, [r1], -r0
   15c28:	strdeq	r5, [r1], -r0
   15c2c:	strdeq	r5, [r1], -r0
   15c30:	strdeq	r5, [r1], -r0
   15c34:	strdeq	r5, [r1], -r0
   15c38:	strdeq	r5, [r1], -r0
   15c3c:	strdeq	r5, [r1], -r0
   15c40:	strdeq	r5, [r1], -r0
   15c44:	strdeq	r5, [r1], -r0
   15c48:	strdeq	r5, [r1], -r0
   15c4c:	strdeq	r5, [r1], -r0
   15c50:	strdeq	r5, [r1], -r0
   15c54:	strdeq	r5, [r1], -r0
   15c58:	strdeq	r5, [r1], -r0
   15c5c:	andeq	r5, r1, ip, ror #25
   15c60:	andeq	r5, r1, ip, ror #25
   15c64:	andeq	r5, r1, ip, ror #25
   15c68:	andeq	r5, r1, ip, ror #25
   15c6c:	andeq	r5, r1, ip, ror #25
   15c70:	andeq	r5, r1, ip, ror #25
   15c74:	strdeq	r5, [r1], -r0
   15c78:	strdeq	r5, [r1], -r0
   15c7c:	strdeq	r5, [r1], -r0
   15c80:	strdeq	r5, [r1], -r0
   15c84:	strdeq	r5, [r1], -r0
   15c88:	strdeq	r5, [r1], -r0
   15c8c:	strdeq	r5, [r1], -r0
   15c90:	strdeq	r5, [r1], -r0
   15c94:	strdeq	r5, [r1], -r0
   15c98:	strdeq	r5, [r1], -r0
   15c9c:	strdeq	r5, [r1], -r0
   15ca0:	strdeq	r5, [r1], -r0
   15ca4:	strdeq	r5, [r1], -r0
   15ca8:	strdeq	r5, [r1], -r0
   15cac:	strdeq	r5, [r1], -r0
   15cb0:	strdeq	r5, [r1], -r0
   15cb4:	strdeq	r5, [r1], -r0
   15cb8:	strdeq	r5, [r1], -r0
   15cbc:	strdeq	r5, [r1], -r0
   15cc0:	strdeq	r5, [r1], -r0
   15cc4:	strdeq	r5, [r1], -r0
   15cc8:	strdeq	r5, [r1], -r0
   15ccc:	strdeq	r5, [r1], -r0
   15cd0:	strdeq	r5, [r1], -r0
   15cd4:	strdeq	r5, [r1], -r0
   15cd8:	strdeq	r5, [r1], -r0
   15cdc:	andeq	r5, r1, ip, ror #25
   15ce0:	andeq	r5, r1, ip, ror #25
   15ce4:	andeq	r5, r1, ip, ror #25
   15ce8:	andeq	r5, r1, ip, ror #25
   15cec:	bx	lr
   15cf0:	mov	r0, #0
   15cf4:	bx	lr
   15cf8:	sub	r0, r0, #9
   15cfc:	cmp	r0, #23
   15d00:	movhi	r0, #0
   15d04:	bxhi	lr
   15d08:	bic	r0, r0, #-16777216	; 0xff000000
   15d0c:	movw	r1, #31
   15d10:	movt	r1, #128	; 0x80
   15d14:	mov	r2, #1
   15d18:	and	r0, r2, r1, lsr r0
   15d1c:	bx	lr
   15d20:	sub	r1, r0, #65	; 0x41
   15d24:	mov	r0, #0
   15d28:	cmp	r1, #26
   15d2c:	movwcc	r0, #1
   15d30:	bx	lr
   15d34:	mov	r1, r0
   15d38:	sub	r2, r0, #48	; 0x30
   15d3c:	mov	r0, #1
   15d40:	cmp	r2, #22
   15d44:	bhi	15d5c <__mempcpy_chk@plt+0x4d30>
   15d48:	mov	ip, #1
   15d4c:	movw	r3, #1023	; 0x3ff
   15d50:	movt	r3, #126	; 0x7e
   15d54:	tst	r3, ip, lsl r2
   15d58:	bxne	lr
   15d5c:	sub	r1, r1, #97	; 0x61
   15d60:	cmp	r1, #6
   15d64:	movcs	r0, #0
   15d68:	bxcs	lr
   15d6c:	bx	lr
   15d70:	sub	r1, r0, #65	; 0x41
   15d74:	cmp	r1, #26
   15d78:	addcc	r0, r0, #32
   15d7c:	bx	lr
   15d80:	sub	r1, r0, #97	; 0x61
   15d84:	cmp	r1, #26
   15d88:	subcc	r0, r0, #32
   15d8c:	bx	lr
   15d90:	push	{r4, r5, r6, sl, fp, lr}
   15d94:	add	fp, sp, #16
   15d98:	mov	r4, r0
   15d9c:	bl	10ec4 <__fpending@plt>
   15da0:	mov	r5, r0
   15da4:	mov	r0, r4
   15da8:	bl	10ed0 <ferror_unlocked@plt>
   15dac:	mov	r6, r0
   15db0:	mov	r0, r4
   15db4:	bl	15e18 <__mempcpy_chk@plt+0x4dec>
   15db8:	cmp	r6, #0
   15dbc:	beq	15ddc <__mempcpy_chk@plt+0x4db0>
   15dc0:	mvn	r4, #0
   15dc4:	cmp	r0, #0
   15dc8:	bne	15e10 <__mempcpy_chk@plt+0x4de4>
   15dcc:	bl	10f60 <__errno_location@plt>
   15dd0:	mov	r1, #0
   15dd4:	str	r1, [r0]
   15dd8:	b	15e10 <__mempcpy_chk@plt+0x4de4>
   15ddc:	cmp	r0, #0
   15de0:	mov	r4, r0
   15de4:	mvnne	r4, #0
   15de8:	cmp	r5, #0
   15dec:	bne	15e10 <__mempcpy_chk@plt+0x4de4>
   15df0:	cmp	r0, #0
   15df4:	beq	15e10 <__mempcpy_chk@plt+0x4de4>
   15df8:	bl	10f60 <__errno_location@plt>
   15dfc:	ldr	r0, [r0]
   15e00:	subs	r4, r0, #9
   15e04:	mvnne	r4, #0
   15e08:	mov	r0, r4
   15e0c:	pop	{r4, r5, r6, sl, fp, pc}
   15e10:	mov	r0, r4
   15e14:	pop	{r4, r5, r6, sl, fp, pc}
   15e18:	push	{r4, r5, fp, lr}
   15e1c:	add	fp, sp, #8
   15e20:	sub	sp, sp, #8
   15e24:	mov	r4, r0
   15e28:	bl	10f90 <fileno@plt>
   15e2c:	cmn	r0, #1
   15e30:	ble	15ea8 <__mempcpy_chk@plt+0x4e7c>
   15e34:	mov	r0, r4
   15e38:	bl	10f0c <__freading@plt>
   15e3c:	cmp	r0, #0
   15e40:	beq	15e6c <__mempcpy_chk@plt+0x4e40>
   15e44:	mov	r0, r4
   15e48:	bl	10f90 <fileno@plt>
   15e4c:	mov	r1, #1
   15e50:	str	r1, [sp]
   15e54:	mov	r2, #0
   15e58:	mov	r3, #0
   15e5c:	bl	10eac <lseek64@plt>
   15e60:	and	r0, r0, r1
   15e64:	cmn	r0, #1
   15e68:	beq	15ea8 <__mempcpy_chk@plt+0x4e7c>
   15e6c:	mov	r0, r4
   15e70:	bl	15eb8 <__mempcpy_chk@plt+0x4e8c>
   15e74:	cmp	r0, #0
   15e78:	beq	15ea8 <__mempcpy_chk@plt+0x4e7c>
   15e7c:	bl	10f60 <__errno_location@plt>
   15e80:	ldr	r5, [r0]
   15e84:	mov	r0, r4
   15e88:	bl	10fa8 <fclose@plt>
   15e8c:	cmp	r5, #0
   15e90:	beq	15ea0 <__mempcpy_chk@plt+0x4e74>
   15e94:	bl	10f60 <__errno_location@plt>
   15e98:	str	r5, [r0]
   15e9c:	mvn	r0, #0
   15ea0:	sub	sp, fp, #8
   15ea4:	pop	{r4, r5, fp, pc}
   15ea8:	mov	r0, r4
   15eac:	sub	sp, fp, #8
   15eb0:	pop	{r4, r5, fp, lr}
   15eb4:	b	10fa8 <fclose@plt>
   15eb8:	push	{r4, sl, fp, lr}
   15ebc:	add	fp, sp, #8
   15ec0:	mov	r4, r0
   15ec4:	cmp	r0, #0
   15ec8:	beq	15ee0 <__mempcpy_chk@plt+0x4eb4>
   15ecc:	mov	r0, r4
   15ed0:	bl	10f0c <__freading@plt>
   15ed4:	cmp	r0, #0
   15ed8:	movne	r0, r4
   15edc:	blne	15eec <__mempcpy_chk@plt+0x4ec0>
   15ee0:	mov	r0, r4
   15ee4:	pop	{r4, sl, fp, lr}
   15ee8:	b	10df8 <fflush@plt>
   15eec:	ldrb	r1, [r0, #1]
   15ef0:	tst	r1, #1
   15ef4:	bxeq	lr
   15ef8:	push	{fp, lr}
   15efc:	mov	fp, sp
   15f00:	sub	sp, sp, #8
   15f04:	mov	r1, #1
   15f08:	str	r1, [sp]
   15f0c:	mov	r2, #0
   15f10:	mov	r3, #0
   15f14:	bl	15f20 <__mempcpy_chk@plt+0x4ef4>
   15f18:	mov	sp, fp
   15f1c:	pop	{fp, pc}
   15f20:	push	{r4, r5, r6, r7, fp, lr}
   15f24:	add	fp, sp, #16
   15f28:	sub	sp, sp, #8
   15f2c:	mov	r5, r3
   15f30:	mov	r6, r2
   15f34:	mov	r4, r0
   15f38:	ldr	r0, [r0, #4]
   15f3c:	ldr	r1, [r4, #8]
   15f40:	cmp	r1, r0
   15f44:	bne	15f60 <__mempcpy_chk@plt+0x4f34>
   15f48:	ldrd	r0, [r4, #16]
   15f4c:	cmp	r1, r0
   15f50:	bne	15f60 <__mempcpy_chk@plt+0x4f34>
   15f54:	ldr	r0, [r4, #36]	; 0x24
   15f58:	cmp	r0, #0
   15f5c:	beq	15f78 <__mempcpy_chk@plt+0x4f4c>
   15f60:	mov	r0, r4
   15f64:	mov	r2, r6
   15f68:	mov	r3, r5
   15f6c:	sub	sp, fp, #16
   15f70:	pop	{r4, r5, r6, r7, fp, lr}
   15f74:	b	10fb4 <fseeko64@plt>
   15f78:	ldr	r7, [fp, #8]
   15f7c:	mov	r0, r4
   15f80:	bl	10f90 <fileno@plt>
   15f84:	str	r7, [sp]
   15f88:	mov	r2, r6
   15f8c:	mov	r3, r5
   15f90:	bl	10eac <lseek64@plt>
   15f94:	and	r2, r0, r1
   15f98:	cmn	r2, #1
   15f9c:	mvneq	r0, #0
   15fa0:	subeq	sp, fp, #16
   15fa4:	popeq	{r4, r5, r6, r7, fp, pc}
   15fa8:	strd	r0, [r4, #80]	; 0x50
   15fac:	ldr	r0, [r4]
   15fb0:	bic	r0, r0, #16
   15fb4:	str	r0, [r4]
   15fb8:	mov	r0, #0
   15fbc:	sub	sp, fp, #16
   15fc0:	pop	{r4, r5, r6, r7, fp, pc}
   15fc4:	ldrb	r2, [r0]
   15fc8:	cmp	r2, #0
   15fcc:	beq	15ff0 <__mempcpy_chk@plt+0x4fc4>
   15fd0:	add	r3, r0, #1
   15fd4:	mov	r0, #0
   15fd8:	ror	r0, r0, #23
   15fdc:	uxtab	r0, r0, r2
   15fe0:	ldrb	r2, [r3], #1
   15fe4:	cmp	r2, #0
   15fe8:	bne	15fd8 <__mempcpy_chk@plt+0x4fac>
   15fec:	b	15ff4 <__mempcpy_chk@plt+0x4fc8>
   15ff0:	mov	r0, #0
   15ff4:	udiv	r2, r0, r1
   15ff8:	mls	r0, r2, r1, r0
   15ffc:	bx	lr
   16000:	push	{fp, lr}
   16004:	mov	fp, sp
   16008:	bl	10f60 <__errno_location@plt>
   1600c:	mov	r1, #12
   16010:	str	r1, [r0]
   16014:	mov	r0, #0
   16018:	pop	{fp, pc}
   1601c:	b	15894 <__mempcpy_chk@plt+0x4868>
   16020:	cmp	r1, #0
   16024:	orreq	r1, r1, #1
   16028:	b	158c4 <__mempcpy_chk@plt+0x4898>
   1602c:	b	15840 <__mempcpy_chk@plt+0x4814>
   16030:	clz	r3, r2
   16034:	lsr	ip, r3, #5
   16038:	clz	r3, r1
   1603c:	lsr	r3, r3, #5
   16040:	orrs	r3, r3, ip
   16044:	movwne	r1, #1
   16048:	movwne	r2, #1
   1604c:	b	160e8 <__mempcpy_chk@plt+0x50bc>
   16050:	push	{fp, lr}
   16054:	mov	fp, sp
   16058:	mov	r0, #14
   1605c:	bl	10fd8 <nl_langinfo@plt>
   16060:	movw	r1, #25785	; 0x64b9
   16064:	movt	r1, #1
   16068:	cmp	r0, #0
   1606c:	movne	r1, r0
   16070:	ldrb	r2, [r1]
   16074:	movw	r0, #28849	; 0x70b1
   16078:	movt	r0, #1
   1607c:	cmp	r2, #0
   16080:	movne	r0, r1
   16084:	pop	{fp, pc}
   16088:	push	{r4, r5, r6, r7, fp, lr}
   1608c:	add	fp, sp, #16
   16090:	sub	sp, sp, #8
   16094:	mov	r7, r2
   16098:	mov	r4, r1
   1609c:	add	r5, sp, #4
   160a0:	cmp	r0, #0
   160a4:	movne	r5, r0
   160a8:	mov	r0, r5
   160ac:	bl	10edc <mbrtowc@plt>
   160b0:	mov	r6, r0
   160b4:	cmp	r7, #0
   160b8:	beq	160dc <__mempcpy_chk@plt+0x50b0>
   160bc:	cmn	r6, #2
   160c0:	bcc	160dc <__mempcpy_chk@plt+0x50b0>
   160c4:	mov	r0, #0
   160c8:	bl	16124 <__mempcpy_chk@plt+0x50f8>
   160cc:	cmp	r0, #0
   160d0:	ldrbeq	r0, [r4]
   160d4:	streq	r0, [r5]
   160d8:	moveq	r6, #1
   160dc:	mov	r0, r6
   160e0:	sub	sp, fp, #16
   160e4:	pop	{r4, r5, r6, r7, fp, pc}
   160e8:	cmp	r2, #0
   160ec:	beq	1611c <__mempcpy_chk@plt+0x50f0>
   160f0:	mvn	r3, #0
   160f4:	udiv	r3, r3, r2
   160f8:	cmp	r3, r1
   160fc:	bcs	1611c <__mempcpy_chk@plt+0x50f0>
   16100:	push	{fp, lr}
   16104:	mov	fp, sp
   16108:	bl	10f60 <__errno_location@plt>
   1610c:	mov	r1, #12
   16110:	str	r1, [r0]
   16114:	mov	r0, #0
   16118:	pop	{fp, pc}
   1611c:	mul	r1, r2, r1
   16120:	b	158c4 <__mempcpy_chk@plt+0x4898>
   16124:	push	{r4, sl, fp, lr}
   16128:	add	fp, sp, #8
   1612c:	sub	sp, sp, #264	; 0x108
   16130:	add	r1, sp, #7
   16134:	movw	r2, #257	; 0x101
   16138:	bl	16188 <__mempcpy_chk@plt+0x515c>
   1613c:	mov	r4, #0
   16140:	cmp	r0, #0
   16144:	bne	1617c <__mempcpy_chk@plt+0x5150>
   16148:	add	r0, sp, #7
   1614c:	movw	r1, #28855	; 0x70b7
   16150:	movt	r1, #1
   16154:	bl	10dec <strcmp@plt>
   16158:	cmp	r0, #0
   1615c:	beq	1617c <__mempcpy_chk@plt+0x5150>
   16160:	add	r0, sp, #7
   16164:	movw	r1, #28857	; 0x70b9
   16168:	movt	r1, #1
   1616c:	bl	10dec <strcmp@plt>
   16170:	mov	r4, r0
   16174:	cmp	r0, #0
   16178:	movwne	r4, #1
   1617c:	mov	r0, r4
   16180:	sub	sp, fp, #8
   16184:	pop	{r4, sl, fp, pc}
   16188:	b	1618c <__mempcpy_chk@plt+0x5160>
   1618c:	push	{r4, r5, r6, r7, fp, lr}
   16190:	add	fp, sp, #16
   16194:	mov	r6, r2
   16198:	mov	r4, r1
   1619c:	bl	16228 <__mempcpy_chk@plt+0x51fc>
   161a0:	cmp	r0, #0
   161a4:	beq	161d4 <__mempcpy_chk@plt+0x51a8>
   161a8:	mov	r7, r0
   161ac:	bl	10f54 <strlen@plt>
   161b0:	cmp	r0, r6
   161b4:	bcs	161f4 <__mempcpy_chk@plt+0x51c8>
   161b8:	add	r2, r0, #1
   161bc:	mov	r0, r4
   161c0:	mov	r1, r7
   161c4:	bl	10e34 <memcpy@plt>
   161c8:	mov	r5, #0
   161cc:	mov	r0, r5
   161d0:	pop	{r4, r5, r6, r7, fp, pc}
   161d4:	mov	r5, #22
   161d8:	cmp	r6, #0
   161dc:	movne	r0, #0
   161e0:	strbne	r0, [r4]
   161e4:	movne	r0, r5
   161e8:	popne	{r4, r5, r6, r7, fp, pc}
   161ec:	mov	r0, r5
   161f0:	pop	{r4, r5, r6, r7, fp, pc}
   161f4:	mov	r5, #34	; 0x22
   161f8:	cmp	r6, #0
   161fc:	beq	1621c <__mempcpy_chk@plt+0x51f0>
   16200:	sub	r6, r6, #1
   16204:	mov	r0, r4
   16208:	mov	r1, r7
   1620c:	mov	r2, r6
   16210:	bl	10e34 <memcpy@plt>
   16214:	mov	r0, #0
   16218:	strb	r0, [r4, r6]
   1621c:	mov	r0, r5
   16220:	pop	{r4, r5, r6, r7, fp, pc}
   16224:	b	16228 <__mempcpy_chk@plt+0x51fc>
   16228:	mov	r1, #0
   1622c:	b	10fc0 <setlocale@plt>
   16230:	cmp	r3, #0
   16234:	cmpeq	r2, #0
   16238:	bne	16250 <__mempcpy_chk@plt+0x5224>
   1623c:	cmp	r1, #0
   16240:	cmpeq	r0, #0
   16244:	mvnne	r1, #0
   16248:	mvnne	r0, #0
   1624c:	b	1626c <__mempcpy_chk@plt+0x5240>
   16250:	sub	sp, sp, #8
   16254:	push	{sp, lr}
   16258:	bl	1627c <__mempcpy_chk@plt+0x5250>
   1625c:	ldr	lr, [sp, #4]
   16260:	add	sp, sp, #8
   16264:	pop	{r2, r3}
   16268:	bx	lr
   1626c:	push	{r1, lr}
   16270:	mov	r0, #8
   16274:	bl	10de0 <raise@plt>
   16278:	pop	{r1, pc}
   1627c:	cmp	r1, r3
   16280:	cmpeq	r0, r2
   16284:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16288:	mov	r4, r0
   1628c:	movcc	r0, #0
   16290:	mov	r5, r1
   16294:	ldr	lr, [sp, #36]	; 0x24
   16298:	movcc	r1, r0
   1629c:	bcc	16398 <__mempcpy_chk@plt+0x536c>
   162a0:	cmp	r3, #0
   162a4:	clzeq	ip, r2
   162a8:	clzne	ip, r3
   162ac:	addeq	ip, ip, #32
   162b0:	cmp	r5, #0
   162b4:	clzeq	r1, r4
   162b8:	addeq	r1, r1, #32
   162bc:	clzne	r1, r5
   162c0:	sub	ip, ip, r1
   162c4:	sub	sl, ip, #32
   162c8:	lsl	r9, r3, ip
   162cc:	rsb	fp, ip, #32
   162d0:	orr	r9, r9, r2, lsl sl
   162d4:	orr	r9, r9, r2, lsr fp
   162d8:	lsl	r8, r2, ip
   162dc:	cmp	r5, r9
   162e0:	cmpeq	r4, r8
   162e4:	movcc	r0, #0
   162e8:	movcc	r1, r0
   162ec:	bcc	16308 <__mempcpy_chk@plt+0x52dc>
   162f0:	mov	r0, #1
   162f4:	subs	r4, r4, r8
   162f8:	lsl	r1, r0, sl
   162fc:	orr	r1, r1, r0, lsr fp
   16300:	lsl	r0, r0, ip
   16304:	sbc	r5, r5, r9
   16308:	cmp	ip, #0
   1630c:	beq	16398 <__mempcpy_chk@plt+0x536c>
   16310:	lsr	r6, r8, #1
   16314:	orr	r6, r6, r9, lsl #31
   16318:	lsr	r7, r9, #1
   1631c:	mov	r2, ip
   16320:	b	16344 <__mempcpy_chk@plt+0x5318>
   16324:	subs	r3, r4, r6
   16328:	sbc	r8, r5, r7
   1632c:	adds	r3, r3, r3
   16330:	adc	r8, r8, r8
   16334:	adds	r4, r3, #1
   16338:	adc	r5, r8, #0
   1633c:	subs	r2, r2, #1
   16340:	beq	16360 <__mempcpy_chk@plt+0x5334>
   16344:	cmp	r5, r7
   16348:	cmpeq	r4, r6
   1634c:	bcs	16324 <__mempcpy_chk@plt+0x52f8>
   16350:	adds	r4, r4, r4
   16354:	adc	r5, r5, r5
   16358:	subs	r2, r2, #1
   1635c:	bne	16344 <__mempcpy_chk@plt+0x5318>
   16360:	lsr	r3, r4, ip
   16364:	orr	r3, r3, r5, lsl fp
   16368:	lsr	r2, r5, ip
   1636c:	orr	r3, r3, r5, lsr sl
   16370:	adds	r0, r0, r4
   16374:	mov	r4, r3
   16378:	lsl	r3, r2, ip
   1637c:	orr	r3, r3, r4, lsl sl
   16380:	lsl	ip, r4, ip
   16384:	orr	r3, r3, r4, lsr fp
   16388:	adc	r1, r1, r5
   1638c:	subs	r0, r0, ip
   16390:	mov	r5, r2
   16394:	sbc	r1, r1, r3
   16398:	cmp	lr, #0
   1639c:	strdne	r4, [lr]
   163a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   163a8:	mov	r7, r0
   163ac:	ldr	r6, [pc, #72]	; 163fc <__mempcpy_chk@plt+0x53d0>
   163b0:	ldr	r5, [pc, #72]	; 16400 <__mempcpy_chk@plt+0x53d4>
   163b4:	add	r6, pc, r6
   163b8:	add	r5, pc, r5
   163bc:	sub	r6, r6, r5
   163c0:	mov	r8, r1
   163c4:	mov	r9, r2
   163c8:	bl	10da8 <calloc@plt-0x20>
   163cc:	asrs	r6, r6, #2
   163d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   163d4:	mov	r4, #0
   163d8:	add	r4, r4, #1
   163dc:	ldr	r3, [r5], #4
   163e0:	mov	r2, r9
   163e4:	mov	r1, r8
   163e8:	mov	r0, r7
   163ec:	blx	r3
   163f0:	cmp	r6, r4
   163f4:	bne	163d8 <__mempcpy_chk@plt+0x53ac>
   163f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   163fc:	andeq	r1, r1, r0, asr fp
   16400:	andeq	r1, r1, r8, asr #22
   16404:	bx	lr
   16408:	ldr	r3, [pc, #12]	; 1641c <__mempcpy_chk@plt+0x53f0>
   1640c:	mov	r1, #0
   16410:	add	r3, pc, r3
   16414:	ldr	r2, [r3]
   16418:	b	10f6c <__cxa_atexit@plt>
   1641c:	andeq	r1, r1, ip, asr #25
   16420:	mov	r2, r1
   16424:	mov	r1, r0
   16428:	mov	r0, #3
   1642c:	b	10ff0 <__xstat64@plt>

Disassembly of section .fini:

00016430 <.fini>:
   16430:	push	{r3, lr}
   16434:	pop	{r3, pc}
