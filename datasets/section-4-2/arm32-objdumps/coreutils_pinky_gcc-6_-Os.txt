
../repos/coreutils/src/pinky:     file format elf32-littlearm


Disassembly of section .init:

00010f18 <.init>:
   10f18:	push	{r3, lr}
   10f1c:	bl	11a8c <putchar_unlocked@plt+0x830>
   10f20:	pop	{r3, pc}

Disassembly of section .plt:

00010f24 <calloc@plt-0x14>:
   10f24:	push	{lr}		; (str lr, [sp, #-4]!)
   10f28:	ldr	lr, [pc, #4]	; 10f34 <calloc@plt-0x4>
   10f2c:	add	lr, pc, lr
   10f30:	ldr	pc, [lr, #8]!
   10f34:	andeq	r5, r1, ip, asr #1

00010f38 <calloc@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #86016	; 0x15000
   10f40:	ldr	pc, [ip, #204]!	; 0xcc

00010f44 <fputs_unlocked@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #86016	; 0x15000
   10f4c:	ldr	pc, [ip, #196]!	; 0xc4

00010f50 <raise@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #86016	; 0x15000
   10f58:	ldr	pc, [ip, #188]!	; 0xbc

00010f5c <getpwnam@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #86016	; 0x15000
   10f64:	ldr	pc, [ip, #180]!	; 0xb4

00010f68 <strcmp@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #86016	; 0x15000
   10f70:	ldr	pc, [ip, #172]!	; 0xac

00010f74 <fflush@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #86016	; 0x15000
   10f7c:	ldr	pc, [ip, #164]!	; 0xa4

00010f80 <utmpxname@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #86016	; 0x15000
   10f88:	ldr	pc, [ip, #156]!	; 0x9c

00010f8c <free@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #86016	; 0x15000
   10f94:	ldr	pc, [ip, #148]!	; 0x94

00010f98 <gai_strerror@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #86016	; 0x15000
   10fa0:	ldr	pc, [ip, #140]!	; 0x8c

00010fa4 <_exit@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #86016	; 0x15000
   10fac:	ldr	pc, [ip, #132]!	; 0x84

00010fb0 <memcpy@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #86016	; 0x15000
   10fb8:	ldr	pc, [ip, #124]!	; 0x7c

00010fbc <mbsinit@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #86016	; 0x15000
   10fc4:	ldr	pc, [ip, #116]!	; 0x74

00010fc8 <time@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #86016	; 0x15000
   10fd0:	ldr	pc, [ip, #108]!	; 0x6c

00010fd4 <fwrite_unlocked@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #86016	; 0x15000
   10fdc:	ldr	pc, [ip, #100]!	; 0x64

00010fe0 <memcmp@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #86016	; 0x15000
   10fe8:	ldr	pc, [ip, #92]!	; 0x5c

00010fec <stpcpy@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #86016	; 0x15000
   10ff4:	ldr	pc, [ip, #84]!	; 0x54

00010ff8 <fputc_unlocked@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #86016	; 0x15000
   11000:	ldr	pc, [ip, #76]!	; 0x4c

00011004 <dcgettext@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #86016	; 0x15000
   1100c:	ldr	pc, [ip, #68]!	; 0x44

00011010 <strdup@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #86016	; 0x15000
   11018:	ldr	pc, [ip, #60]!	; 0x3c

0001101c <setutxent@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #86016	; 0x15000
   11024:	ldr	pc, [ip, #52]!	; 0x34

00011028 <realloc@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #86016	; 0x15000
   11030:	ldr	pc, [ip, #44]!	; 0x2c

00011034 <textdomain@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #86016	; 0x15000
   1103c:	ldr	pc, [ip, #36]!	; 0x24

00011040 <iswprint@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #86016	; 0x15000
   11048:	ldr	pc, [ip, #28]!

0001104c <lseek64@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #86016	; 0x15000
   11054:	ldr	pc, [ip, #20]!

00011058 <__ctype_get_mb_cur_max@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #86016	; 0x15000
   11060:	ldr	pc, [ip, #12]!

00011064 <strcpy@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #86016	; 0x15000
   1106c:	ldr	pc, [ip, #4]!

00011070 <__fpending@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #20, 20	; 0x14000
   11078:	ldr	pc, [ip, #4092]!	; 0xffc

0001107c <ferror_unlocked@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #20, 20	; 0x14000
   11084:	ldr	pc, [ip, #4084]!	; 0xff4

00011088 <mbrtowc@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #20, 20	; 0x14000
   11090:	ldr	pc, [ip, #4076]!	; 0xfec

00011094 <error@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #20, 20	; 0x14000
   1109c:	ldr	pc, [ip, #4068]!	; 0xfe4

000110a0 <malloc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #20, 20	; 0x14000
   110a8:	ldr	pc, [ip, #4060]!	; 0xfdc

000110ac <__libc_start_main@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #20, 20	; 0x14000
   110b4:	ldr	pc, [ip, #4052]!	; 0xfd4

000110b8 <strftime@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #20, 20	; 0x14000
   110c0:	ldr	pc, [ip, #4044]!	; 0xfcc

000110c4 <__freading@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #20, 20	; 0x14000
   110cc:	ldr	pc, [ip, #4036]!	; 0xfc4

000110d0 <localtime@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #20, 20	; 0x14000
   110d8:	ldr	pc, [ip, #4028]!	; 0xfbc

000110dc <__ctype_toupper_loc@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #20, 20	; 0x14000
   110e4:	ldr	pc, [ip, #4020]!	; 0xfb4

000110e8 <__gmon_start__@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #20, 20	; 0x14000
   110f0:	ldr	pc, [ip, #4012]!	; 0xfac

000110f4 <getopt_long@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #20, 20	; 0x14000
   110fc:	ldr	pc, [ip, #4004]!	; 0xfa4

00011100 <kill@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #20, 20	; 0x14000
   11108:	ldr	pc, [ip, #3996]!	; 0xf9c

0001110c <__ctype_b_loc@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #20, 20	; 0x14000
   11114:	ldr	pc, [ip, #3988]!	; 0xf94

00011118 <exit@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #20, 20	; 0x14000
   11120:	ldr	pc, [ip, #3980]!	; 0xf8c

00011124 <strlen@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #20, 20	; 0x14000
   1112c:	ldr	pc, [ip, #3972]!	; 0xf84

00011130 <strchr@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #20, 20	; 0x14000
   11138:	ldr	pc, [ip, #3964]!	; 0xf7c

0001113c <__errno_location@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #20, 20	; 0x14000
   11144:	ldr	pc, [ip, #3956]!	; 0xf74

00011148 <__sprintf_chk@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #20, 20	; 0x14000
   11150:	ldr	pc, [ip, #3948]!	; 0xf6c

00011154 <__cxa_atexit@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #20, 20	; 0x14000
   1115c:	ldr	pc, [ip, #3940]!	; 0xf64

00011160 <memset@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #20, 20	; 0x14000
   11168:	ldr	pc, [ip, #3932]!	; 0xf5c

0001116c <strncpy@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #20, 20	; 0x14000
   11174:	ldr	pc, [ip, #3924]!	; 0xf54

00011178 <__printf_chk@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #20, 20	; 0x14000
   11180:	ldr	pc, [ip, #3916]!	; 0xf4c

00011184 <fileno@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #20, 20	; 0x14000
   1118c:	ldr	pc, [ip, #3908]!	; 0xf44

00011190 <__fprintf_chk@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #20, 20	; 0x14000
   11198:	ldr	pc, [ip, #3900]!	; 0xf3c

0001119c <fclose@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #20, 20	; 0x14000
   111a4:	ldr	pc, [ip, #3892]!	; 0xf34

000111a8 <fseeko64@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #20, 20	; 0x14000
   111b0:	ldr	pc, [ip, #3884]!	; 0xf2c

000111b4 <endutxent@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #20, 20	; 0x14000
   111bc:	ldr	pc, [ip, #3876]!	; 0xf24

000111c0 <setlocale@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #20, 20	; 0x14000
   111c8:	ldr	pc, [ip, #3868]!	; 0xf1c

000111cc <strrchr@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #20, 20	; 0x14000
   111d4:	ldr	pc, [ip, #3860]!	; 0xf14

000111d8 <nl_langinfo@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #20, 20	; 0x14000
   111e0:	ldr	pc, [ip, #3852]!	; 0xf0c

000111e4 <fopen64@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #20, 20	; 0x14000
   111ec:	ldr	pc, [ip, #3844]!	; 0xf04

000111f0 <freeaddrinfo@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #20, 20	; 0x14000
   111f8:	ldr	pc, [ip, #3836]!	; 0xefc

000111fc <getaddrinfo@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #20, 20	; 0x14000
   11204:	ldr	pc, [ip, #3828]!	; 0xef4

00011208 <bindtextdomain@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #20, 20	; 0x14000
   11210:	ldr	pc, [ip, #3820]!	; 0xeec

00011214 <fread_unlocked@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #20, 20	; 0x14000
   1121c:	ldr	pc, [ip, #3812]!	; 0xee4

00011220 <__xstat64@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #20, 20	; 0x14000
   11228:	ldr	pc, [ip, #3804]!	; 0xedc

0001122c <fputs@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #20, 20	; 0x14000
   11234:	ldr	pc, [ip, #3796]!	; 0xed4

00011238 <strncmp@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #20, 20	; 0x14000
   11240:	ldr	pc, [ip, #3788]!	; 0xecc

00011244 <abort@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #20, 20	; 0x14000
   1124c:	ldr	pc, [ip, #3780]!	; 0xec4

00011250 <getutxent@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #20, 20	; 0x14000
   11258:	ldr	pc, [ip, #3772]!	; 0xebc

0001125c <putchar_unlocked@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #20, 20	; 0x14000
   11264:	ldr	pc, [ip, #3764]!	; 0xeb4

Disassembly of section .text:

00011268 <.text>:
   11268:	add	r2, r1, r2
   1126c:	cmp	r2, r1
   11270:	bls	11280 <putchar_unlocked@plt+0x24>
   11274:	ldrb	r3, [r1], #1
   11278:	cmp	r3, #0
   1127c:	bne	1128c <putchar_unlocked@plt+0x30>
   11280:	mov	r3, #0
   11284:	strb	r3, [r0]
   11288:	bx	lr
   1128c:	strb	r3, [r0], #1
   11290:	b	1126c <putchar_unlocked@plt+0x10>
   11294:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11298:	sub	sp, sp, #416	; 0x1a0
   1129c:	ldrb	r3, [r0, #8]
   112a0:	mov	r6, r0
   112a4:	cmp	r3, #47	; 0x2f
   112a8:	addeq	r0, sp, #8
   112ac:	beq	112bc <putchar_unlocked@plt+0x60>
   112b0:	ldr	r1, [pc, #752]	; 115a8 <putchar_unlocked@plt+0x34c>
   112b4:	add	r0, sp, #8
   112b8:	bl	10fec <stpcpy@plt>
   112bc:	add	sl, r6, #8
   112c0:	mov	r2, #32
   112c4:	mov	r1, sl
   112c8:	bl	11268 <putchar_unlocked@plt+0xc>
   112cc:	add	r1, sp, #48	; 0x30
   112d0:	add	r0, sp, #8
   112d4:	bl	15170 <putchar_unlocked@plt+0x3f14>
   112d8:	cmp	r0, #0
   112dc:	movne	r8, #63	; 0x3f
   112e0:	movne	r9, #0
   112e4:	bne	112fc <putchar_unlocked@plt+0xa0>
   112e8:	ldr	r3, [sp, #64]	; 0x40
   112ec:	ldr	r9, [sp, #120]	; 0x78
   112f0:	tst	r3, #16
   112f4:	movne	r8, #32
   112f8:	moveq	r8, #42	; 0x2a
   112fc:	ldr	r7, [pc, #680]	; 115ac <putchar_unlocked@plt+0x350>
   11300:	add	r5, r6, #44	; 0x2c
   11304:	mov	r3, r5
   11308:	mov	r2, #32
   1130c:	ldr	r1, [pc, #668]	; 115b0 <putchar_unlocked@plt+0x354>
   11310:	mov	r0, #1
   11314:	bl	11178 <__printf_chk@plt>
   11318:	ldrb	r3, [r7, #3]
   1131c:	add	r4, sp, #156	; 0x9c
   11320:	cmp	r3, #0
   11324:	beq	11364 <putchar_unlocked@plt+0x108>
   11328:	mov	r1, r5
   1132c:	mov	r2, #32
   11330:	mov	r0, r4
   11334:	bl	11268 <putchar_unlocked@plt+0xc>
   11338:	mov	r0, r4
   1133c:	bl	10f5c <getpwnam@plt>
   11340:	subs	r5, r0, #0
   11344:	bne	114e4 <putchar_unlocked@plt+0x288>
   11348:	mov	r2, #5
   1134c:	ldr	r1, [pc, #608]	; 115b4 <putchar_unlocked@plt+0x358>
   11350:	bl	11004 <dcgettext@plt>
   11354:	ldr	r1, [pc, #604]	; 115b8 <putchar_unlocked@plt+0x35c>
   11358:	mov	r2, r0
   1135c:	mov	r0, #1
   11360:	bl	11178 <__printf_chk@plt>
   11364:	mov	r3, #32
   11368:	str	sl, [sp]
   1136c:	mov	r2, r8
   11370:	ldr	r1, [pc, #580]	; 115bc <putchar_unlocked@plt+0x360>
   11374:	mov	r0, #1
   11378:	bl	11178 <__printf_chk@plt>
   1137c:	ldrb	r3, [r7, #4]
   11380:	cmp	r3, #0
   11384:	beq	11418 <putchar_unlocked@plt+0x1bc>
   11388:	cmp	r9, #0
   1138c:	beq	11550 <putchar_unlocked@plt+0x2f4>
   11390:	ldr	r8, [pc, #552]	; 115c0 <putchar_unlocked@plt+0x364>
   11394:	ldr	r3, [r8, #48]	; 0x30
   11398:	cmp	r3, #0
   1139c:	bne	113a8 <putchar_unlocked@plt+0x14c>
   113a0:	add	r0, r8, #48	; 0x30
   113a4:	bl	10fc8 <time@plt>
   113a8:	ldr	r5, [r8, #48]	; 0x30
   113ac:	sub	r5, r5, r9
   113b0:	cmp	r5, #59	; 0x3b
   113b4:	ldrle	r2, [pc, #520]	; 115c4 <putchar_unlocked@plt+0x368>
   113b8:	ble	1140c <putchar_unlocked@plt+0x1b0>
   113bc:	ldr	r3, [pc, #516]	; 115c8 <putchar_unlocked@plt+0x36c>
   113c0:	cmp	r5, r3
   113c4:	bgt	11528 <putchar_unlocked@plt+0x2cc>
   113c8:	mov	r1, #3600	; 0xe10
   113cc:	mov	r0, r5
   113d0:	bl	14ec8 <putchar_unlocked@plt+0x3c6c>
   113d4:	mov	r0, r1
   113d8:	mov	r1, #60	; 0x3c
   113dc:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   113e0:	mov	r1, #3600	; 0xe10
   113e4:	str	r0, [sp, #4]
   113e8:	mov	r0, r5
   113ec:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   113f0:	ldr	r3, [pc, #468]	; 115cc <putchar_unlocked@plt+0x370>
   113f4:	mov	r2, #13
   113f8:	mov	r1, #1
   113fc:	str	r0, [sp]
   11400:	ldr	r0, [pc, #440]	; 115c0 <putchar_unlocked@plt+0x364>
   11404:	bl	11148 <__sprintf_chk@plt>
   11408:	ldr	r2, [pc, #432]	; 115c0 <putchar_unlocked@plt+0x364>
   1140c:	ldr	r1, [pc, #444]	; 115d0 <putchar_unlocked@plt+0x374>
   11410:	mov	r0, #1
   11414:	bl	11178 <__printf_chk@plt>
   11418:	ldr	r3, [r6, #340]	; 0x154
   1141c:	mov	r0, r4
   11420:	str	r3, [sp, #156]	; 0x9c
   11424:	bl	110d0 <localtime@plt>
   11428:	subs	r3, r0, #0
   1142c:	beq	11568 <putchar_unlocked@plt+0x30c>
   11430:	ldr	r5, [pc, #392]	; 115c0 <putchar_unlocked@plt+0x364>
   11434:	mov	r1, #33	; 0x21
   11438:	add	r0, r5, #13
   1143c:	ldr	r2, [r5, #52]	; 0x34
   11440:	bl	110b8 <strftime@plt>
   11444:	add	r2, r5, #13
   11448:	ldr	r1, [pc, #388]	; 115d4 <putchar_unlocked@plt+0x378>
   1144c:	mov	r0, #1
   11450:	bl	11178 <__printf_chk@plt>
   11454:	ldrb	r3, [r7, #5]
   11458:	cmp	r3, #0
   1145c:	beq	114d4 <putchar_unlocked@plt+0x278>
   11460:	ldrb	r3, [r6, #76]	; 0x4c
   11464:	cmp	r3, #0
   11468:	beq	114d4 <putchar_unlocked@plt+0x278>
   1146c:	add	r1, r6, #76	; 0x4c
   11470:	mov	r2, #256	; 0x100
   11474:	mov	r0, r4
   11478:	bl	11268 <putchar_unlocked@plt+0xc>
   1147c:	mov	r1, #58	; 0x3a
   11480:	mov	r0, r4
   11484:	bl	11130 <strchr@plt>
   11488:	subs	r6, r0, #0
   1148c:	movne	r3, #0
   11490:	strbne	r3, [r6]
   11494:	ldrb	r3, [sp, #156]	; 0x9c
   11498:	addne	r6, r6, #1
   1149c:	cmp	r3, #0
   114a0:	bne	11580 <putchar_unlocked@plt+0x324>
   114a4:	mov	r5, r4
   114a8:	cmp	r6, #0
   114ac:	beq	11594 <putchar_unlocked@plt+0x338>
   114b0:	mov	r3, r6
   114b4:	mov	r2, r5
   114b8:	ldr	r1, [pc, #280]	; 115d8 <putchar_unlocked@plt+0x37c>
   114bc:	mov	r0, #1
   114c0:	bl	11178 <__printf_chk@plt>
   114c4:	cmp	r5, r4
   114c8:	beq	114d4 <putchar_unlocked@plt+0x278>
   114cc:	mov	r0, r5
   114d0:	bl	12480 <putchar_unlocked@plt+0x1224>
   114d4:	mov	r0, #10
   114d8:	bl	1125c <putchar_unlocked@plt>
   114dc:	add	sp, sp, #416	; 0x1a0
   114e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   114e4:	ldr	r0, [r5, #16]
   114e8:	mov	r1, #44	; 0x2c
   114ec:	bl	11130 <strchr@plt>
   114f0:	cmp	r0, #0
   114f4:	movne	r3, #0
   114f8:	strbne	r3, [r0]
   114fc:	ldr	r1, [r5]
   11500:	ldr	r0, [r5, #16]
   11504:	bl	11b78 <putchar_unlocked@plt+0x91c>
   11508:	ldr	r1, [pc, #204]	; 115dc <putchar_unlocked@plt+0x380>
   1150c:	mov	r5, r0
   11510:	mov	r2, r0
   11514:	mov	r0, #1
   11518:	bl	11178 <__printf_chk@plt>
   1151c:	mov	r0, r5
   11520:	bl	12480 <putchar_unlocked@plt+0x1224>
   11524:	b	11364 <putchar_unlocked@plt+0x108>
   11528:	ldr	r1, [pc, #176]	; 115e0 <putchar_unlocked@plt+0x384>
   1152c:	mov	r0, r5
   11530:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   11534:	ldr	r3, [pc, #168]	; 115e4 <putchar_unlocked@plt+0x388>
   11538:	mov	r2, #13
   1153c:	mov	r1, #1
   11540:	str	r0, [sp]
   11544:	ldr	r0, [pc, #116]	; 115c0 <putchar_unlocked@plt+0x364>
   11548:	bl	11148 <__sprintf_chk@plt>
   1154c:	b	11408 <putchar_unlocked@plt+0x1ac>
   11550:	mov	r2, #5
   11554:	ldr	r1, [pc, #140]	; 115e8 <putchar_unlocked@plt+0x38c>
   11558:	mov	r0, r9
   1155c:	bl	11004 <dcgettext@plt>
   11560:	mov	r2, r0
   11564:	b	1140c <putchar_unlocked@plt+0x1b0>
   11568:	ldr	r0, [sp, #156]	; 0x9c
   1156c:	ldr	r2, [pc, #120]	; 115ec <putchar_unlocked@plt+0x390>
   11570:	asr	r1, r0, #31
   11574:	bl	125c4 <putchar_unlocked@plt+0x1368>
   11578:	mov	r2, r0
   1157c:	b	11448 <putchar_unlocked@plt+0x1ec>
   11580:	mov	r0, r4
   11584:	bl	12268 <putchar_unlocked@plt+0x100c>
   11588:	subs	r5, r0, #0
   1158c:	bne	114a8 <putchar_unlocked@plt+0x24c>
   11590:	b	114a4 <putchar_unlocked@plt+0x248>
   11594:	mov	r2, r5
   11598:	ldr	r1, [pc, #52]	; 115d4 <putchar_unlocked@plt+0x378>
   1159c:	mov	r0, #1
   115a0:	bl	11178 <__printf_chk@plt>
   115a4:	b	114c4 <putchar_unlocked@plt+0x268>
   115a8:	andeq	r5, r1, sp, asr r2
   115ac:	andeq	r6, r2, r8, lsr #2
   115b0:	andeq	r5, r1, r2, lsl #5
   115b4:	andeq	r5, r1, r3, ror #4
   115b8:	andeq	r5, r1, pc, ror #4
   115bc:	andeq	r5, r1, pc, ror r2
   115c0:	muleq	r2, r4, r1
   115c4:	andeq	r5, r1, r7, asr r2
   115c8:	andeq	r5, r1, pc, ror r1
   115cc:	andeq	r5, r1, r9, lsl #5
   115d0:	muleq	r1, r8, r2
   115d4:	muleq	r1, r2, r8
   115d8:	andeq	r5, r1, r4, lsr #5
   115dc:	andeq	r5, r1, r5, ror r2
   115e0:	andeq	r5, r1, r0, lsl #3
   115e4:	muleq	r1, r3, r2
   115e8:	muleq	r1, lr, r2
   115ec:	andeq	r6, r2, r1, lsr #3
   115f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115f4:	mov	r6, r0
   115f8:	sub	sp, sp, #28
   115fc:	ldr	r0, [r1]
   11600:	mov	r7, r1
   11604:	bl	12694 <putchar_unlocked@plt+0x1438>
   11608:	ldr	r1, [pc, #956]	; 119cc <putchar_unlocked@plt+0x770>
   1160c:	mov	r0, #6
   11610:	bl	111c0 <setlocale@plt>
   11614:	ldr	r1, [pc, #948]	; 119d0 <putchar_unlocked@plt+0x774>
   11618:	ldr	r0, [pc, #948]	; 119d4 <putchar_unlocked@plt+0x778>
   1161c:	bl	11208 <bindtextdomain@plt>
   11620:	ldr	r0, [pc, #940]	; 119d4 <putchar_unlocked@plt+0x778>
   11624:	bl	11034 <textdomain@plt>
   11628:	ldr	r0, [pc, #936]	; 119d8 <putchar_unlocked@plt+0x77c>
   1162c:	bl	15158 <putchar_unlocked@plt+0x3efc>
   11630:	ldr	r8, [pc, #932]	; 119dc <putchar_unlocked@plt+0x780>
   11634:	ldr	r4, [pc, #932]	; 119e0 <putchar_unlocked@plt+0x784>
   11638:	mov	r5, #0
   1163c:	str	r5, [sp]
   11640:	mov	r3, r8
   11644:	ldr	r2, [pc, #920]	; 119e4 <putchar_unlocked@plt+0x788>
   11648:	mov	r1, r7
   1164c:	mov	r0, r6
   11650:	bl	110f4 <getopt_long@plt>
   11654:	cmn	r0, #1
   11658:	bne	116ac <putchar_unlocked@plt+0x450>
   1165c:	ldr	r3, [pc, #900]	; 119e8 <putchar_unlocked@plt+0x78c>
   11660:	ldr	r8, [r3]
   11664:	ldrb	r3, [r4, #6]
   11668:	sub	r6, r6, r8
   1166c:	lsl	r8, r8, #2
   11670:	cmp	r3, #0
   11674:	bne	117b4 <putchar_unlocked@plt+0x558>
   11678:	cmp	r6, #0
   1167c:	movne	r4, r3
   11680:	addne	r7, r7, r8
   11684:	bne	119b8 <putchar_unlocked@plt+0x75c>
   11688:	mov	r2, #5
   1168c:	ldr	r1, [pc, #856]	; 119ec <putchar_unlocked@plt+0x790>
   11690:	mov	r0, r6
   11694:	bl	11004 <dcgettext@plt>
   11698:	mov	r1, r6
   1169c:	mov	r2, r0
   116a0:	mov	r0, r6
   116a4:	bl	11094 <error@plt>
   116a8:	b	116d8 <putchar_unlocked@plt+0x47c>
   116ac:	cmp	r0, #105	; 0x69
   116b0:	beq	11750 <putchar_unlocked@plt+0x4f4>
   116b4:	bgt	116f8 <putchar_unlocked@plt+0x49c>
   116b8:	cmp	r0, #98	; 0x62
   116bc:	beq	1176c <putchar_unlocked@plt+0x510>
   116c0:	bgt	116e0 <putchar_unlocked@plt+0x484>
   116c4:	cmn	r0, #3
   116c8:	beq	11774 <putchar_unlocked@plt+0x518>
   116cc:	cmn	r0, #2
   116d0:	moveq	r0, #0
   116d4:	beq	116dc <putchar_unlocked@plt+0x480>
   116d8:	mov	r0, #1
   116dc:	bl	11f70 <putchar_unlocked@plt+0xd14>
   116e0:	cmp	r0, #102	; 0x66
   116e4:	beq	11748 <putchar_unlocked@plt+0x4ec>
   116e8:	cmp	r0, #104	; 0x68
   116ec:	bne	116d8 <putchar_unlocked@plt+0x47c>
   116f0:	strb	r5, [r4, #1]
   116f4:	b	1163c <putchar_unlocked@plt+0x3e0>
   116f8:	cmp	r0, #113	; 0x71
   116fc:	beq	1175c <putchar_unlocked@plt+0x500>
   11700:	bgt	1171c <putchar_unlocked@plt+0x4c0>
   11704:	cmp	r0, #108	; 0x6c
   11708:	beq	11740 <putchar_unlocked@plt+0x4e4>
   1170c:	cmp	r0, #112	; 0x70
   11710:	bne	116d8 <putchar_unlocked@plt+0x47c>
   11714:	strb	r5, [r4, #2]
   11718:	b	1163c <putchar_unlocked@plt+0x3e0>
   1171c:	cmp	r0, #115	; 0x73
   11720:	beq	11734 <putchar_unlocked@plt+0x4d8>
   11724:	cmp	r0, #119	; 0x77
   11728:	bne	116d8 <putchar_unlocked@plt+0x47c>
   1172c:	strb	r5, [r4, #3]
   11730:	b	1163c <putchar_unlocked@plt+0x3e0>
   11734:	mov	r3, #1
   11738:	strb	r3, [r4, #6]
   1173c:	b	1163c <putchar_unlocked@plt+0x3e0>
   11740:	strb	r5, [r4, #6]
   11744:	b	1163c <putchar_unlocked@plt+0x3e0>
   11748:	strb	r5, [r4, #7]
   1174c:	b	1163c <putchar_unlocked@plt+0x3e0>
   11750:	strb	r5, [r4, #3]
   11754:	strb	r5, [r4, #5]
   11758:	b	1163c <putchar_unlocked@plt+0x3e0>
   1175c:	strb	r5, [r4, #3]
   11760:	strb	r5, [r4, #5]
   11764:	strb	r5, [r4, #4]
   11768:	b	1163c <putchar_unlocked@plt+0x3e0>
   1176c:	strb	r5, [r4]
   11770:	b	1163c <putchar_unlocked@plt+0x3e0>
   11774:	ldr	r3, [pc, #628]	; 119f0 <putchar_unlocked@plt+0x794>
   11778:	ldr	r0, [pc, #628]	; 119f4 <putchar_unlocked@plt+0x798>
   1177c:	str	r3, [sp, #8]
   11780:	ldr	r3, [pc, #624]	; 119f8 <putchar_unlocked@plt+0x79c>
   11784:	str	r5, [sp, #12]
   11788:	str	r3, [sp, #4]
   1178c:	ldr	r3, [pc, #616]	; 119fc <putchar_unlocked@plt+0x7a0>
   11790:	ldr	r2, [pc, #616]	; 11a00 <putchar_unlocked@plt+0x7a4>
   11794:	str	r3, [sp]
   11798:	ldr	r3, [pc, #612]	; 11a04 <putchar_unlocked@plt+0x7a8>
   1179c:	ldr	r1, [pc, #612]	; 11a08 <putchar_unlocked@plt+0x7ac>
   117a0:	ldr	r0, [r0]
   117a4:	ldr	r3, [r3]
   117a8:	bl	142dc <putchar_unlocked@plt+0x3080>
   117ac:	mov	r0, #0
   117b0:	bl	11118 <exit@plt>
   117b4:	add	r2, sp, #24
   117b8:	mov	r3, #0
   117bc:	str	r5, [r2, #-4]!
   117c0:	add	r1, sp, #16
   117c4:	ldr	r0, [pc, #576]	; 11a0c <putchar_unlocked@plt+0x7b0>
   117c8:	bl	13d28 <putchar_unlocked@plt+0x2acc>
   117cc:	subs	sl, r0, #0
   117d0:	beq	11800 <putchar_unlocked@plt+0x5a4>
   117d4:	bl	1113c <__errno_location@plt>
   117d8:	ldr	r2, [pc, #556]	; 11a0c <putchar_unlocked@plt+0x7b0>
   117dc:	mov	r1, #3
   117e0:	ldr	r4, [r0]
   117e4:	mov	r0, #0
   117e8:	bl	13b84 <putchar_unlocked@plt+0x2928>
   117ec:	ldr	r2, [pc, #540]	; 11a10 <putchar_unlocked@plt+0x7b4>
   117f0:	mov	r1, r4
   117f4:	mov	r3, r0
   117f8:	mov	r0, #1
   117fc:	bl	11094 <error@plt>
   11800:	mov	r0, #2
   11804:	ldr	r9, [sp, #16]
   11808:	ldr	fp, [sp, #20]
   1180c:	bl	12568 <putchar_unlocked@plt+0x130c>
   11810:	ldr	r5, [pc, #508]	; 11a14 <putchar_unlocked@plt+0x7b8>
   11814:	cmp	r0, #0
   11818:	ldrne	r3, [pc, #504]	; 11a18 <putchar_unlocked@plt+0x7bc>
   1181c:	ldreq	r3, [pc, #504]	; 11a1c <putchar_unlocked@plt+0x7c0>
   11820:	strne	r3, [r5, #52]	; 0x34
   11824:	streq	r3, [r5, #52]	; 0x34
   11828:	movne	r3, #16
   1182c:	moveq	r3, #12
   11830:	str	r3, [r5, #56]	; 0x38
   11834:	ldrb	r3, [r4, #7]
   11838:	cmp	r3, #0
   1183c:	beq	11934 <putchar_unlocked@plt+0x6d8>
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #468]	; 11a20 <putchar_unlocked@plt+0x7c4>
   11848:	mov	r0, #0
   1184c:	bl	11004 <dcgettext@plt>
   11850:	ldr	r1, [pc, #460]	; 11a24 <putchar_unlocked@plt+0x7c8>
   11854:	mov	r2, r0
   11858:	mov	r0, #1
   1185c:	bl	11178 <__printf_chk@plt>
   11860:	ldrb	r3, [r4, #3]
   11864:	cmp	r3, #0
   11868:	beq	1188c <putchar_unlocked@plt+0x630>
   1186c:	mov	r2, #5
   11870:	ldr	r1, [pc, #432]	; 11a28 <putchar_unlocked@plt+0x7cc>
   11874:	mov	r0, #0
   11878:	bl	11004 <dcgettext@plt>
   1187c:	ldr	r1, [pc, #424]	; 11a2c <putchar_unlocked@plt+0x7d0>
   11880:	mov	r2, r0
   11884:	mov	r0, #1
   11888:	bl	11178 <__printf_chk@plt>
   1188c:	mov	r2, #5
   11890:	ldr	r1, [pc, #408]	; 11a30 <putchar_unlocked@plt+0x7d4>
   11894:	mov	r0, #0
   11898:	bl	11004 <dcgettext@plt>
   1189c:	ldr	r1, [pc, #400]	; 11a34 <putchar_unlocked@plt+0x7d8>
   118a0:	mov	r2, r0
   118a4:	mov	r0, #1
   118a8:	bl	11178 <__printf_chk@plt>
   118ac:	ldrb	r3, [r4, #4]
   118b0:	cmp	r3, #0
   118b4:	beq	118d8 <putchar_unlocked@plt+0x67c>
   118b8:	mov	r2, #5
   118bc:	ldr	r1, [pc, #372]	; 11a38 <putchar_unlocked@plt+0x7dc>
   118c0:	mov	r0, #0
   118c4:	bl	11004 <dcgettext@plt>
   118c8:	ldr	r1, [pc, #364]	; 11a3c <putchar_unlocked@plt+0x7e0>
   118cc:	mov	r2, r0
   118d0:	mov	r0, #1
   118d4:	bl	11178 <__printf_chk@plt>
   118d8:	mov	r2, #5
   118dc:	ldr	r1, [pc, #348]	; 11a40 <putchar_unlocked@plt+0x7e4>
   118e0:	mov	r0, #0
   118e4:	ldr	r5, [r5, #56]	; 0x38
   118e8:	bl	11004 <dcgettext@plt>
   118ec:	mov	r2, r5
   118f0:	ldr	r1, [pc, #332]	; 11a44 <putchar_unlocked@plt+0x7e8>
   118f4:	mov	r3, r0
   118f8:	mov	r0, #1
   118fc:	bl	11178 <__printf_chk@plt>
   11900:	ldrb	r3, [r4, #5]
   11904:	cmp	r3, #0
   11908:	beq	1192c <putchar_unlocked@plt+0x6d0>
   1190c:	mov	r2, #5
   11910:	ldr	r1, [pc, #304]	; 11a48 <putchar_unlocked@plt+0x7ec>
   11914:	mov	r0, #0
   11918:	bl	11004 <dcgettext@plt>
   1191c:	ldr	r1, [pc, #296]	; 11a4c <putchar_unlocked@plt+0x7f0>
   11920:	mov	r2, r0
   11924:	mov	r0, #1
   11928:	bl	11178 <__printf_chk@plt>
   1192c:	mov	r0, #10
   11930:	bl	1125c <putchar_unlocked@plt>
   11934:	add	r7, r7, r8
   11938:	mov	r4, fp
   1193c:	mov	r8, #32
   11940:	cmp	r9, #0
   11944:	beq	117ac <putchar_unlocked@plt+0x550>
   11948:	ldrb	r3, [r4, #44]	; 0x2c
   1194c:	cmp	r3, #0
   11950:	beq	119a0 <putchar_unlocked@plt+0x744>
   11954:	ldrsh	r3, [r4]
   11958:	cmp	r3, #7
   1195c:	bne	119a0 <putchar_unlocked@plt+0x744>
   11960:	cmp	r6, #0
   11964:	movne	r5, sl
   11968:	addne	fp, r4, #44	; 0x2c
   1196c:	bne	11998 <putchar_unlocked@plt+0x73c>
   11970:	mov	r0, r4
   11974:	bl	11294 <putchar_unlocked@plt+0x38>
   11978:	b	119a0 <putchar_unlocked@plt+0x744>
   1197c:	mov	r2, r8
   11980:	ldr	r1, [r7, r5, lsl #2]
   11984:	mov	r0, fp
   11988:	bl	11238 <strncmp@plt>
   1198c:	cmp	r0, #0
   11990:	beq	11970 <putchar_unlocked@plt+0x714>
   11994:	add	r5, r5, #1
   11998:	cmp	r6, r5
   1199c:	bgt	1197c <putchar_unlocked@plt+0x720>
   119a0:	add	r4, r4, #384	; 0x180
   119a4:	sub	r9, r9, #1
   119a8:	b	11940 <putchar_unlocked@plt+0x6e4>
   119ac:	ldr	r0, [r7, r4, lsl #2]
   119b0:	bl	11c8c <putchar_unlocked@plt+0xa30>
   119b4:	add	r4, r4, #1
   119b8:	cmp	r6, r4
   119bc:	bgt	119ac <putchar_unlocked@plt+0x750>
   119c0:	mov	r0, #0
   119c4:	add	sp, sp, #28
   119c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119cc:	andeq	r5, r1, r1, lsr #14
   119d0:	andeq	r5, r1, r2, lsr #14
   119d4:	andeq	r5, r1, pc, ror r6
   119d8:	andeq	r2, r1, r4, lsr #5
   119dc:	andeq	r5, r1, r4, asr #3
   119e0:	andeq	r6, r2, r8, lsr #2
   119e4:	andeq	r5, r1, r7, ror #14
   119e8:	andeq	r6, r2, r0, lsl #3
   119ec:	andeq	r5, r1, r1, ror r7
   119f0:	andeq	r5, r1, sl, lsr r7
   119f4:	andeq	r6, r2, ip, lsl #3
   119f8:	andeq	r5, r1, r6, asr #14
   119fc:	andeq	r5, r1, r6, asr r7
   11a00:	andeq	r5, r1, fp, ror r6
   11a04:	andeq	r6, r2, r0, lsr r1
   11a08:	andeq	r5, r1, fp, lsr #5
   11a0c:	andeq	r5, r1, lr, lsr #12
   11a10:	muleq	r1, r3, r8
   11a14:	muleq	r2, r4, r1
   11a18:			; <UNDEFINED> instruction: 0x000157b5
   11a1c:	andeq	r5, r1, r4, asr #15
   11a20:	ldrdeq	r5, [r1], -r0
   11a24:	ldrdeq	r5, [r1], -r6
   11a28:	ldrdeq	r5, [r1], -fp
   11a2c:	andeq	r5, r1, r0, ror #15
   11a30:	andeq	r5, r1, r7, ror #15
   11a34:	andeq	r5, r1, ip, ror #15
   11a38:	strdeq	r5, [r1], -r2
   11a3c:	muleq	r1, r8, r2
   11a40:	strdeq	r5, [r1], -r7
   11a44:	strdeq	r5, [r1], -ip
   11a48:	andeq	r5, r1, r2, lsl #16
   11a4c:	muleq	r1, r2, r8
   11a50:	mov	fp, #0
   11a54:	mov	lr, #0
   11a58:	pop	{r1}		; (ldr r1, [sp], #4)
   11a5c:	mov	r2, sp
   11a60:	push	{r2}		; (str r2, [sp, #-4]!)
   11a64:	push	{r0}		; (str r0, [sp, #-4]!)
   11a68:	ldr	ip, [pc, #16]	; 11a80 <putchar_unlocked@plt+0x824>
   11a6c:	push	{ip}		; (str ip, [sp, #-4]!)
   11a70:	ldr	r0, [pc, #12]	; 11a84 <putchar_unlocked@plt+0x828>
   11a74:	ldr	r3, [pc, #12]	; 11a88 <putchar_unlocked@plt+0x82c>
   11a78:	bl	110ac <__libc_start_main@plt>
   11a7c:	bl	11244 <abort@plt>
   11a80:	andeq	r5, r1, r4, asr r1
   11a84:	strdeq	r1, [r1], -r0
   11a88:	strdeq	r5, [r1], -r4
   11a8c:	ldr	r3, [pc, #20]	; 11aa8 <putchar_unlocked@plt+0x84c>
   11a90:	ldr	r2, [pc, #20]	; 11aac <putchar_unlocked@plt+0x850>
   11a94:	add	r3, pc, r3
   11a98:	ldr	r2, [r3, r2]
   11a9c:	cmp	r2, #0
   11aa0:	bxeq	lr
   11aa4:	b	110e8 <__gmon_start__@plt>
   11aa8:	andeq	r4, r1, r4, ror #10
   11aac:	andeq	r0, r0, ip, lsl r1
   11ab0:	ldr	r3, [pc, #28]	; 11ad4 <putchar_unlocked@plt+0x878>
   11ab4:	ldr	r0, [pc, #28]	; 11ad8 <putchar_unlocked@plt+0x87c>
   11ab8:	sub	r3, r3, r0
   11abc:	cmp	r3, #6
   11ac0:	bxls	lr
   11ac4:	ldr	r3, [pc, #16]	; 11adc <putchar_unlocked@plt+0x880>
   11ac8:	cmp	r3, #0
   11acc:	bxeq	lr
   11ad0:	bx	r3
   11ad4:	andeq	r6, r2, fp, ror r1
   11ad8:	andeq	r6, r2, r8, ror r1
   11adc:	andeq	r0, r0, r0
   11ae0:	ldr	r1, [pc, #36]	; 11b0c <putchar_unlocked@plt+0x8b0>
   11ae4:	ldr	r0, [pc, #36]	; 11b10 <putchar_unlocked@plt+0x8b4>
   11ae8:	sub	r1, r1, r0
   11aec:	asr	r1, r1, #2
   11af0:	add	r1, r1, r1, lsr #31
   11af4:	asrs	r1, r1, #1
   11af8:	bxeq	lr
   11afc:	ldr	r3, [pc, #16]	; 11b14 <putchar_unlocked@plt+0x8b8>
   11b00:	cmp	r3, #0
   11b04:	bxeq	lr
   11b08:	bx	r3
   11b0c:	andeq	r6, r2, r8, ror r1
   11b10:	andeq	r6, r2, r8, ror r1
   11b14:	andeq	r0, r0, r0
   11b18:	push	{r4, lr}
   11b1c:	ldr	r4, [pc, #24]	; 11b3c <putchar_unlocked@plt+0x8e0>
   11b20:	ldrb	r3, [r4]
   11b24:	cmp	r3, #0
   11b28:	popne	{r4, pc}
   11b2c:	bl	11ab0 <putchar_unlocked@plt+0x854>
   11b30:	mov	r3, #1
   11b34:	strb	r3, [r4]
   11b38:	pop	{r4, pc}
   11b3c:	muleq	r2, r0, r1
   11b40:	ldr	r0, [pc, #40]	; 11b70 <putchar_unlocked@plt+0x914>
   11b44:	ldr	r3, [r0]
   11b48:	cmp	r3, #0
   11b4c:	bne	11b54 <putchar_unlocked@plt+0x8f8>
   11b50:	b	11ae0 <putchar_unlocked@plt+0x884>
   11b54:	ldr	r3, [pc, #24]	; 11b74 <putchar_unlocked@plt+0x918>
   11b58:	cmp	r3, #0
   11b5c:	beq	11b50 <putchar_unlocked@plt+0x8f4>
   11b60:	push	{r4, lr}
   11b64:	blx	r3
   11b68:	pop	{r4, lr}
   11b6c:	b	11ae0 <putchar_unlocked@plt+0x884>
   11b70:	andeq	r5, r2, r4, lsl pc
   11b74:	andeq	r0, r0, r0
   11b78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b7c:	mov	r5, r0
   11b80:	mov	r7, r1
   11b84:	bl	11124 <strlen@plt>
   11b88:	sub	r5, r5, #1
   11b8c:	mov	r2, r5
   11b90:	mov	r4, #0
   11b94:	add	r8, r0, #1
   11b98:	ldrb	r3, [r2, #1]!
   11b9c:	cmp	r3, #38	; 0x26
   11ba0:	addeq	r4, r4, #1
   11ba4:	beq	11b98 <putchar_unlocked@plt+0x93c>
   11ba8:	cmp	r3, #0
   11bac:	bne	11b98 <putchar_unlocked@plt+0x93c>
   11bb0:	cmp	r4, #0
   11bb4:	beq	11bfc <putchar_unlocked@plt+0x9a0>
   11bb8:	mov	r0, r7
   11bbc:	bl	11124 <strlen@plt>
   11bc0:	cmp	r4, #1
   11bc4:	sub	r4, r4, #1
   11bc8:	mov	r6, r0
   11bcc:	beq	11be4 <putchar_unlocked@plt+0x988>
   11bd0:	mov	r1, r4
   11bd4:	mvn	r0, #0
   11bd8:	bl	14a9c <putchar_unlocked@plt+0x3840>
   11bdc:	cmp	r6, r0
   11be0:	bhi	11bf8 <putchar_unlocked@plt+0x99c>
   11be4:	mul	r4, r6, r4
   11be8:	mvn	r3, r4
   11bec:	cmp	r8, r3
   11bf0:	addls	r8, r8, r4
   11bf4:	bls	11bfc <putchar_unlocked@plt+0x9a0>
   11bf8:	bl	14838 <putchar_unlocked@plt+0x35dc>
   11bfc:	mov	r0, r8
   11c00:	bl	143a4 <putchar_unlocked@plt+0x3148>
   11c04:	add	r8, r7, #1
   11c08:	mov	r6, r0
   11c0c:	mov	r4, r0
   11c10:	ldrb	r3, [r5, #1]!
   11c14:	cmp	r3, #0
   11c18:	bne	11c28 <putchar_unlocked@plt+0x9cc>
   11c1c:	strb	r3, [r4]
   11c20:	mov	r0, r6
   11c24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c28:	cmp	r3, #38	; 0x26
   11c2c:	strbne	r3, [r4]
   11c30:	addne	r4, r4, #1
   11c34:	bne	11c10 <putchar_unlocked@plt+0x9b4>
   11c38:	bl	1110c <__ctype_b_loc@plt>
   11c3c:	ldrb	r9, [r7]
   11c40:	lsl	r3, r9, #1
   11c44:	ldr	r2, [r0]
   11c48:	ldrh	r3, [r2, r3]
   11c4c:	tst	r3, #512	; 0x200
   11c50:	moveq	r3, r7
   11c54:	beq	11c74 <putchar_unlocked@plt+0xa18>
   11c58:	bl	110dc <__ctype_toupper_loc@plt>
   11c5c:	add	sl, r4, #1
   11c60:	mov	r3, r8
   11c64:	ldr	r2, [r0]
   11c68:	ldr	r2, [r2, r9, lsl #2]
   11c6c:	strb	r2, [r4]
   11c70:	mov	r4, sl
   11c74:	sub	r3, r3, #1
   11c78:	ldrb	r2, [r3, #1]!
   11c7c:	cmp	r2, #0
   11c80:	beq	11c10 <putchar_unlocked@plt+0x9b4>
   11c84:	strb	r2, [r4], #1
   11c88:	b	11c78 <putchar_unlocked@plt+0xa1c>
   11c8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11c90:	sub	sp, sp, #1024	; 0x400
   11c94:	sub	sp, sp, #4
   11c98:	mov	r5, r0
   11c9c:	bl	10f5c <getpwnam@plt>
   11ca0:	mov	r2, #5
   11ca4:	ldr	r1, [pc, #648]	; 11f34 <putchar_unlocked@plt+0xcd8>
   11ca8:	mov	r4, r0
   11cac:	mov	r0, #0
   11cb0:	bl	11004 <dcgettext@plt>
   11cb4:	mov	r1, r0
   11cb8:	mov	r0, #1
   11cbc:	bl	11178 <__printf_chk@plt>
   11cc0:	mov	r2, r5
   11cc4:	ldr	r1, [pc, #620]	; 11f38 <putchar_unlocked@plt+0xcdc>
   11cc8:	mov	r0, #1
   11ccc:	bl	11178 <__printf_chk@plt>
   11cd0:	mov	r2, #5
   11cd4:	ldr	r1, [pc, #608]	; 11f3c <putchar_unlocked@plt+0xce0>
   11cd8:	mov	r0, #0
   11cdc:	bl	11004 <dcgettext@plt>
   11ce0:	mov	r1, r0
   11ce4:	mov	r0, #1
   11ce8:	bl	11178 <__printf_chk@plt>
   11cec:	cmp	r4, #0
   11cf0:	bne	11d20 <putchar_unlocked@plt+0xac4>
   11cf4:	mov	r2, #5
   11cf8:	ldr	r1, [pc, #576]	; 11f40 <putchar_unlocked@plt+0xce4>
   11cfc:	mov	r0, r4
   11d00:	bl	11004 <dcgettext@plt>
   11d04:	ldr	r1, [pc, #568]	; 11f44 <putchar_unlocked@plt+0xce8>
   11d08:	mov	r2, r0
   11d0c:	mov	r0, #1
   11d10:	bl	11178 <__printf_chk@plt>
   11d14:	add	sp, sp, #1024	; 0x400
   11d18:	add	sp, sp, #4
   11d1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11d20:	ldr	r0, [r4, #16]
   11d24:	mov	r1, #44	; 0x2c
   11d28:	bl	11130 <strchr@plt>
   11d2c:	cmp	r0, #0
   11d30:	movne	r3, #0
   11d34:	strbne	r3, [r0]
   11d38:	ldr	r1, [r4]
   11d3c:	ldr	r0, [r4, #16]
   11d40:	bl	11b78 <putchar_unlocked@plt+0x91c>
   11d44:	ldr	r1, [pc, #504]	; 11f44 <putchar_unlocked@plt+0xce8>
   11d48:	mov	r2, r0
   11d4c:	mov	r5, r0
   11d50:	mov	r0, #1
   11d54:	bl	11178 <__printf_chk@plt>
   11d58:	mov	r0, r5
   11d5c:	ldr	r5, [pc, #484]	; 11f48 <putchar_unlocked@plt+0xcec>
   11d60:	bl	12480 <putchar_unlocked@plt+0x1224>
   11d64:	mov	r0, #10
   11d68:	bl	1125c <putchar_unlocked@plt>
   11d6c:	ldrb	r3, [r5]
   11d70:	cmp	r3, #0
   11d74:	beq	11dd8 <putchar_unlocked@plt+0xb7c>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #456]	; 11f4c <putchar_unlocked@plt+0xcf0>
   11d80:	mov	r0, #0
   11d84:	bl	11004 <dcgettext@plt>
   11d88:	mov	r1, r0
   11d8c:	mov	r0, #1
   11d90:	bl	11178 <__printf_chk@plt>
   11d94:	ldr	r2, [r4, #20]
   11d98:	ldr	r1, [pc, #432]	; 11f50 <putchar_unlocked@plt+0xcf4>
   11d9c:	mov	r0, #1
   11da0:	bl	11178 <__printf_chk@plt>
   11da4:	mov	r2, #5
   11da8:	ldr	r1, [pc, #420]	; 11f54 <putchar_unlocked@plt+0xcf8>
   11dac:	mov	r0, #0
   11db0:	bl	11004 <dcgettext@plt>
   11db4:	mov	r1, r0
   11db8:	mov	r0, #1
   11dbc:	bl	11178 <__printf_chk@plt>
   11dc0:	ldr	r2, [r4, #24]
   11dc4:	ldr	r1, [pc, #376]	; 11f44 <putchar_unlocked@plt+0xce8>
   11dc8:	mov	r0, #1
   11dcc:	bl	11178 <__printf_chk@plt>
   11dd0:	mov	r0, #10
   11dd4:	bl	1125c <putchar_unlocked@plt>
   11dd8:	ldrb	r3, [r5, #1]
   11ddc:	cmp	r3, #0
   11de0:	beq	11e6c <putchar_unlocked@plt+0xc10>
   11de4:	ldr	r0, [r4, #20]
   11de8:	bl	11124 <strlen@plt>
   11dec:	add	r0, r0, #10
   11df0:	bl	143a4 <putchar_unlocked@plt+0x3148>
   11df4:	ldr	r1, [r4, #20]
   11df8:	mov	r6, r0
   11dfc:	bl	10fec <stpcpy@plt>
   11e00:	ldr	r1, [pc, #336]	; 11f58 <putchar_unlocked@plt+0xcfc>
   11e04:	bl	11064 <strcpy@plt>
   11e08:	ldr	r1, [pc, #332]	; 11f5c <putchar_unlocked@plt+0xd00>
   11e0c:	mov	r0, r6
   11e10:	bl	111e4 <fopen64@plt>
   11e14:	subs	r7, r0, #0
   11e18:	beq	11e64 <putchar_unlocked@plt+0xc08>
   11e1c:	mov	r2, #5
   11e20:	ldr	r1, [pc, #312]	; 11f60 <putchar_unlocked@plt+0xd04>
   11e24:	mov	r0, #0
   11e28:	bl	11004 <dcgettext@plt>
   11e2c:	ldr	r9, [pc, #304]	; 11f64 <putchar_unlocked@plt+0xd08>
   11e30:	mov	r8, #1024	; 0x400
   11e34:	mov	r1, r0
   11e38:	mov	r0, #1
   11e3c:	bl	11178 <__printf_chk@plt>
   11e40:	mov	r2, r8
   11e44:	mov	r3, r7
   11e48:	mov	r1, #1
   11e4c:	mov	r0, sp
   11e50:	bl	11214 <fread_unlocked@plt>
   11e54:	subs	r2, r0, #0
   11e58:	bne	11f0c <putchar_unlocked@plt+0xcb0>
   11e5c:	mov	r0, r7
   11e60:	bl	12388 <putchar_unlocked@plt+0x112c>
   11e64:	mov	r0, r6
   11e68:	bl	12480 <putchar_unlocked@plt+0x1224>
   11e6c:	ldrb	r3, [r5, #2]
   11e70:	cmp	r3, #0
   11e74:	beq	11f00 <putchar_unlocked@plt+0xca4>
   11e78:	ldr	r0, [r4, #20]
   11e7c:	bl	11124 <strlen@plt>
   11e80:	add	r0, r0, #7
   11e84:	bl	143a4 <putchar_unlocked@plt+0x3148>
   11e88:	ldr	r1, [r4, #20]
   11e8c:	mov	r5, r0
   11e90:	bl	10fec <stpcpy@plt>
   11e94:	ldr	r1, [pc, #204]	; 11f68 <putchar_unlocked@plt+0xd0c>
   11e98:	bl	11064 <strcpy@plt>
   11e9c:	ldr	r1, [pc, #184]	; 11f5c <putchar_unlocked@plt+0xd00>
   11ea0:	mov	r0, r5
   11ea4:	bl	111e4 <fopen64@plt>
   11ea8:	subs	r4, r0, #0
   11eac:	beq	11ef8 <putchar_unlocked@plt+0xc9c>
   11eb0:	mov	r2, #5
   11eb4:	ldr	r1, [pc, #176]	; 11f6c <putchar_unlocked@plt+0xd10>
   11eb8:	mov	r0, #0
   11ebc:	bl	11004 <dcgettext@plt>
   11ec0:	ldr	r7, [pc, #156]	; 11f64 <putchar_unlocked@plt+0xd08>
   11ec4:	mov	r6, #1024	; 0x400
   11ec8:	mov	r1, r0
   11ecc:	mov	r0, #1
   11ed0:	bl	11178 <__printf_chk@plt>
   11ed4:	mov	r2, r6
   11ed8:	mov	r3, r4
   11edc:	mov	r1, #1
   11ee0:	mov	r0, sp
   11ee4:	bl	11214 <fread_unlocked@plt>
   11ee8:	subs	r2, r0, #0
   11eec:	bne	11f20 <putchar_unlocked@plt+0xcc4>
   11ef0:	mov	r0, r4
   11ef4:	bl	12388 <putchar_unlocked@plt+0x112c>
   11ef8:	mov	r0, r5
   11efc:	bl	12480 <putchar_unlocked@plt+0x1224>
   11f00:	mov	r0, #10
   11f04:	bl	1125c <putchar_unlocked@plt>
   11f08:	b	11d14 <putchar_unlocked@plt+0xab8>
   11f0c:	ldr	r3, [r9]
   11f10:	mov	r1, #1
   11f14:	mov	r0, sp
   11f18:	bl	10fd4 <fwrite_unlocked@plt>
   11f1c:	b	11e40 <putchar_unlocked@plt+0xbe4>
   11f20:	ldr	r3, [r7]
   11f24:	mov	r1, #1
   11f28:	mov	r0, sp
   11f2c:	bl	10fd4 <fwrite_unlocked@plt>
   11f30:	b	11ed4 <putchar_unlocked@plt+0xc78>
   11f34:	strdeq	r5, [r1], -r4
   11f38:	andeq	r5, r1, r1, lsl #4
   11f3c:	andeq	r5, r1, r7, lsl #4
   11f40:	andeq	r5, r1, r6, lsl r2
   11f44:	muleq	r1, r2, r8
   11f48:	andeq	r6, r2, r8, lsr #2
   11f4c:	andeq	r5, r1, fp, lsl r2
   11f50:	andeq	r5, r1, r7, lsr #4
   11f54:	andeq	r5, r1, sp, lsr #4
   11f58:	andeq	r5, r1, r5, lsr r2
   11f5c:	andeq	r5, r1, sp, lsl #17
   11f60:	andeq	r5, r1, pc, lsr r2
   11f64:	andeq	r6, r2, ip, lsl #3
   11f68:	andeq	r5, r1, r9, asr #4
   11f6c:	andeq	r5, r1, r0, asr r2
   11f70:	subs	r4, r0, #0
   11f74:	push	{r7, lr}
   11f78:	sub	sp, sp, #56	; 0x38
   11f7c:	ldr	r5, [pc, #508]	; 12180 <putchar_unlocked@plt+0xf24>
   11f80:	beq	11fb8 <putchar_unlocked@plt+0xd5c>
   11f84:	ldr	r3, [pc, #504]	; 12184 <putchar_unlocked@plt+0xf28>
   11f88:	mov	r2, #5
   11f8c:	ldr	r1, [pc, #500]	; 12188 <putchar_unlocked@plt+0xf2c>
   11f90:	mov	r0, #0
   11f94:	ldr	r6, [r3]
   11f98:	bl	11004 <dcgettext@plt>
   11f9c:	ldr	r3, [r5]
   11fa0:	mov	r1, #1
   11fa4:	mov	r2, r0
   11fa8:	mov	r0, r6
   11fac:	bl	11190 <__fprintf_chk@plt>
   11fb0:	mov	r0, r4
   11fb4:	bl	11118 <exit@plt>
   11fb8:	mov	r2, #5
   11fbc:	ldr	r1, [pc, #456]	; 1218c <putchar_unlocked@plt+0xf30>
   11fc0:	bl	11004 <dcgettext@plt>
   11fc4:	ldr	r2, [r5]
   11fc8:	ldr	r5, [pc, #448]	; 12190 <putchar_unlocked@plt+0xf34>
   11fcc:	ldr	r8, [pc, #448]	; 12194 <putchar_unlocked@plt+0xf38>
   11fd0:	mov	r6, r4
   11fd4:	mov	r1, r0
   11fd8:	mov	r0, #1
   11fdc:	bl	11178 <__printf_chk@plt>
   11fe0:	mov	r2, #5
   11fe4:	ldr	r1, [pc, #428]	; 12198 <putchar_unlocked@plt+0xf3c>
   11fe8:	mov	r0, r4
   11fec:	bl	11004 <dcgettext@plt>
   11ff0:	ldr	r1, [r5]
   11ff4:	bl	10f44 <fputs_unlocked@plt>
   11ff8:	mov	r2, #5
   11ffc:	ldr	r1, [pc, #408]	; 1219c <putchar_unlocked@plt+0xf40>
   12000:	mov	r0, r4
   12004:	bl	11004 <dcgettext@plt>
   12008:	ldr	r1, [r5]
   1200c:	bl	10f44 <fputs_unlocked@plt>
   12010:	mov	r2, #5
   12014:	ldr	r1, [pc, #388]	; 121a0 <putchar_unlocked@plt+0xf44>
   12018:	mov	r0, r4
   1201c:	bl	11004 <dcgettext@plt>
   12020:	ldr	r1, [r5]
   12024:	bl	10f44 <fputs_unlocked@plt>
   12028:	mov	r2, #5
   1202c:	ldr	r1, [pc, #368]	; 121a4 <putchar_unlocked@plt+0xf48>
   12030:	mov	r0, r4
   12034:	bl	11004 <dcgettext@plt>
   12038:	ldr	r1, [r5]
   1203c:	bl	10f44 <fputs_unlocked@plt>
   12040:	mov	r2, #5
   12044:	ldr	r1, [pc, #348]	; 121a8 <putchar_unlocked@plt+0xf4c>
   12048:	mov	r0, r4
   1204c:	bl	11004 <dcgettext@plt>
   12050:	ldr	r2, [pc, #340]	; 121ac <putchar_unlocked@plt+0xf50>
   12054:	mov	r1, r0
   12058:	mov	r0, #1
   1205c:	bl	11178 <__printf_chk@plt>
   12060:	ldr	lr, [pc, #328]	; 121b0 <putchar_unlocked@plt+0xf54>
   12064:	mov	ip, sp
   12068:	ldm	lr!, {r0, r1, r2, r3}
   1206c:	stmia	ip!, {r0, r1, r2, r3}
   12070:	ldm	lr!, {r0, r1, r2, r3}
   12074:	stmia	ip!, {r0, r1, r2, r3}
   12078:	ldm	lr!, {r0, r1, r2, r3}
   1207c:	stmia	ip!, {r0, r1, r2, r3}
   12080:	ldm	lr, {r0, r1}
   12084:	stm	ip, {r0, r1}
   12088:	ldr	r1, [sp, r6]
   1208c:	add	r7, sp, r6
   12090:	cmp	r1, #0
   12094:	bne	12138 <putchar_unlocked@plt+0xedc>
   12098:	ldr	r6, [r7, #4]
   1209c:	ldr	r7, [pc, #240]	; 12194 <putchar_unlocked@plt+0xf38>
   120a0:	cmp	r6, #0
   120a4:	mov	r2, #5
   120a8:	ldr	r1, [pc, #260]	; 121b4 <putchar_unlocked@plt+0xf58>
   120ac:	mov	r0, #0
   120b0:	moveq	r6, r7
   120b4:	bl	11004 <dcgettext@plt>
   120b8:	ldr	r3, [pc, #248]	; 121b8 <putchar_unlocked@plt+0xf5c>
   120bc:	ldr	r2, [pc, #248]	; 121bc <putchar_unlocked@plt+0xf60>
   120c0:	mov	r1, r0
   120c4:	mov	r0, #1
   120c8:	bl	11178 <__printf_chk@plt>
   120cc:	mov	r1, #0
   120d0:	mov	r0, #5
   120d4:	bl	111c0 <setlocale@plt>
   120d8:	cmp	r0, #0
   120dc:	bne	12150 <putchar_unlocked@plt+0xef4>
   120e0:	mov	r2, #5
   120e4:	ldr	r1, [pc, #212]	; 121c0 <putchar_unlocked@plt+0xf64>
   120e8:	mov	r0, #0
   120ec:	bl	11004 <dcgettext@plt>
   120f0:	ldr	r3, [pc, #156]	; 12194 <putchar_unlocked@plt+0xf38>
   120f4:	ldr	r2, [pc, #188]	; 121b8 <putchar_unlocked@plt+0xf5c>
   120f8:	mov	r1, r0
   120fc:	mov	r0, #1
   12100:	bl	11178 <__printf_chk@plt>
   12104:	mov	r2, #5
   12108:	ldr	r1, [pc, #180]	; 121c4 <putchar_unlocked@plt+0xf68>
   1210c:	mov	r0, #0
   12110:	bl	11004 <dcgettext@plt>
   12114:	ldr	r2, [pc, #172]	; 121c8 <putchar_unlocked@plt+0xf6c>
   12118:	cmp	r6, r7
   1211c:	ldr	r3, [pc, #168]	; 121cc <putchar_unlocked@plt+0xf70>
   12120:	moveq	r3, r2
   12124:	mov	r2, r6
   12128:	mov	r1, r0
   1212c:	mov	r0, #1
   12130:	bl	11178 <__printf_chk@plt>
   12134:	b	11fb0 <putchar_unlocked@plt+0xd54>
   12138:	mov	r0, r8
   1213c:	bl	10f68 <strcmp@plt>
   12140:	add	r6, r6, #8
   12144:	cmp	r0, #0
   12148:	bne	12088 <putchar_unlocked@plt+0xe2c>
   1214c:	b	12098 <putchar_unlocked@plt+0xe3c>
   12150:	mov	r2, #3
   12154:	ldr	r1, [pc, #116]	; 121d0 <putchar_unlocked@plt+0xf74>
   12158:	bl	11238 <strncmp@plt>
   1215c:	cmp	r0, #0
   12160:	beq	120e0 <putchar_unlocked@plt+0xe84>
   12164:	mov	r2, #5
   12168:	ldr	r1, [pc, #100]	; 121d4 <putchar_unlocked@plt+0xf78>
   1216c:	mov	r0, #0
   12170:	bl	11004 <dcgettext@plt>
   12174:	ldr	r1, [r5]
   12178:	bl	10f44 <fputs_unlocked@plt>
   1217c:	b	120e0 <putchar_unlocked@plt+0xe84>
   12180:	strdeq	r6, [r2], -ip
   12184:	andeq	r6, r2, r8, lsl #3
   12188:			; <UNDEFINED> instruction: 0x000152b1
   1218c:	ldrdeq	r5, [r1], -r8
   12190:	andeq	r6, r2, ip, lsl #3
   12194:	andeq	r5, r1, fp, lsr #5
   12198:	strdeq	r5, [r1], -r9
   1219c:	andeq	r5, r1, r1, asr #8
   121a0:	andeq	r5, r1, r6, ror r5
   121a4:	andeq	r5, r1, r3, lsr #11
   121a8:	ldrdeq	r5, [r1], -r9
   121ac:	andeq	r5, r1, lr, lsr #12
   121b0:	andeq	r5, r1, ip, lsl #3
   121b4:	andeq	r5, r1, ip, lsr r6
   121b8:	andeq	r5, r1, r3, asr r6
   121bc:	andeq	r5, r1, fp, ror r6
   121c0:	ldrdeq	r5, [r1], -r4
   121c4:	andeq	r5, r1, pc, ror #13
   121c8:	andeq	r5, r1, r4, lsr #16
   121cc:	andeq	r5, r1, r1, lsr #14
   121d0:	andeq	r5, r1, r9, lsl #13
   121d4:	andeq	r5, r1, sp, lsl #13
   121d8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   121dc:	add	r3, sp, #8
   121e0:	ldr	r2, [pc, #124]	; 12264 <putchar_unlocked@plt+0x1008>
   121e4:	mov	r4, #0
   121e8:	mov	r5, r1
   121ec:	mov	r1, #2
   121f0:	str	r1, [r2]
   121f4:	str	r4, [r3, #-4]!
   121f8:	mov	r1, r4
   121fc:	mov	r7, r0
   12200:	bl	111fc <getaddrinfo@plt>
   12204:	cmp	r0, #0
   12208:	bne	12254 <putchar_unlocked@plt+0xff8>
   1220c:	ldr	r6, [sp, #4]
   12210:	ldr	r0, [r6, #24]
   12214:	cmp	r0, r4
   12218:	moveq	r0, r7
   1221c:	bl	11010 <strdup@plt>
   12220:	cmp	r5, #0
   12224:	clz	r3, r0
   12228:	lsr	r3, r3, #5
   1222c:	moveq	r3, #0
   12230:	cmp	r3, #0
   12234:	mvnne	r3, #9
   12238:	mov	r4, r0
   1223c:	strne	r3, [r5]
   12240:	mov	r0, r6
   12244:	bl	111f0 <freeaddrinfo@plt>
   12248:	mov	r0, r4
   1224c:	add	sp, sp, #12
   12250:	pop	{r4, r5, r6, r7, pc}
   12254:	cmp	r5, #0
   12258:	strne	r0, [r5]
   1225c:	moveq	r4, r5
   12260:	b	12248 <putchar_unlocked@plt+0xfec>
   12264:	ldrdeq	r6, [r2], -r0
   12268:	ldr	r1, [pc]	; 12270 <putchar_unlocked@plt+0x1014>
   1226c:	b	121d8 <putchar_unlocked@plt+0xf7c>
   12270:	strdeq	r6, [r2], -r0
   12274:	ldr	r3, [pc, #4]	; 12280 <putchar_unlocked@plt+0x1024>
   12278:	ldr	r0, [r3, #32]
   1227c:	b	10f98 <gai_strerror@plt>
   12280:	ldrdeq	r6, [r2], -r0
   12284:	ldr	r3, [pc, #4]	; 12290 <putchar_unlocked@plt+0x1034>
   12288:	str	r0, [r3]
   1228c:	bx	lr
   12290:	strdeq	r6, [r2], -r4
   12294:	ldr	r3, [pc, #4]	; 122a0 <putchar_unlocked@plt+0x1044>
   12298:	strb	r0, [r3, #4]
   1229c:	bx	lr
   122a0:	strdeq	r6, [r2], -r4
   122a4:	ldr	r3, [pc, #192]	; 1236c <putchar_unlocked@plt+0x1110>
   122a8:	push	{r0, r1, r4, r5, r6, lr}
   122ac:	ldr	r0, [r3]
   122b0:	bl	1495c <putchar_unlocked@plt+0x3700>
   122b4:	cmp	r0, #0
   122b8:	beq	12350 <putchar_unlocked@plt+0x10f4>
   122bc:	ldr	r3, [pc, #172]	; 12370 <putchar_unlocked@plt+0x1114>
   122c0:	mov	r4, r3
   122c4:	ldrb	r2, [r3, #4]
   122c8:	cmp	r2, #0
   122cc:	beq	122e0 <putchar_unlocked@plt+0x1084>
   122d0:	bl	1113c <__errno_location@plt>
   122d4:	ldr	r3, [r0]
   122d8:	cmp	r3, #32
   122dc:	beq	12350 <putchar_unlocked@plt+0x10f4>
   122e0:	mov	r2, #5
   122e4:	ldr	r1, [pc, #136]	; 12374 <putchar_unlocked@plt+0x1118>
   122e8:	mov	r0, #0
   122ec:	bl	11004 <dcgettext@plt>
   122f0:	ldr	r4, [r4]
   122f4:	cmp	r4, #0
   122f8:	mov	r5, r0
   122fc:	beq	12334 <putchar_unlocked@plt+0x10d8>
   12300:	bl	1113c <__errno_location@plt>
   12304:	ldr	r6, [r0]
   12308:	mov	r0, r4
   1230c:	bl	13b74 <putchar_unlocked@plt+0x2918>
   12310:	str	r5, [sp]
   12314:	ldr	r2, [pc, #92]	; 12378 <putchar_unlocked@plt+0x111c>
   12318:	mov	r1, r6
   1231c:	mov	r3, r0
   12320:	mov	r0, #0
   12324:	bl	11094 <error@plt>
   12328:	ldr	r3, [pc, #76]	; 1237c <putchar_unlocked@plt+0x1120>
   1232c:	ldr	r0, [r3]
   12330:	bl	10fa4 <_exit@plt>
   12334:	bl	1113c <__errno_location@plt>
   12338:	mov	r3, r5
   1233c:	ldr	r2, [pc, #60]	; 12380 <putchar_unlocked@plt+0x1124>
   12340:	ldr	r1, [r0]
   12344:	mov	r0, r4
   12348:	bl	11094 <error@plt>
   1234c:	b	12328 <putchar_unlocked@plt+0x10cc>
   12350:	ldr	r3, [pc, #44]	; 12384 <putchar_unlocked@plt+0x1128>
   12354:	ldr	r0, [r3]
   12358:	bl	1495c <putchar_unlocked@plt+0x3700>
   1235c:	cmp	r0, #0
   12360:	bne	12328 <putchar_unlocked@plt+0x10cc>
   12364:	add	sp, sp, #8
   12368:	pop	{r4, r5, r6, pc}
   1236c:	andeq	r6, r2, ip, lsl #3
   12370:	strdeq	r6, [r2], -r4
   12374:	andeq	r5, r1, r3, lsl #17
   12378:	andeq	r5, r1, pc, lsl #17
   1237c:	andeq	r6, r2, r4, lsr r1
   12380:	muleq	r1, r3, r8
   12384:	andeq	r6, r2, r8, lsl #3
   12388:	push	{r0, r1, r2, r4, r5, lr}
   1238c:	mov	r4, r0
   12390:	bl	11184 <fileno@plt>
   12394:	cmp	r0, #0
   12398:	mov	r0, r4
   1239c:	bge	123ac <putchar_unlocked@plt+0x1150>
   123a0:	add	sp, sp, #12
   123a4:	pop	{r4, r5, lr}
   123a8:	b	1119c <fclose@plt>
   123ac:	bl	110c4 <__freading@plt>
   123b0:	cmp	r0, #0
   123b4:	bne	123f0 <putchar_unlocked@plt+0x1194>
   123b8:	mov	r0, r4
   123bc:	bl	12430 <putchar_unlocked@plt+0x11d4>
   123c0:	cmp	r0, #0
   123c4:	bne	12424 <putchar_unlocked@plt+0x11c8>
   123c8:	mov	r5, #0
   123cc:	mov	r0, r4
   123d0:	bl	1119c <fclose@plt>
   123d4:	cmp	r5, #0
   123d8:	beq	123e8 <putchar_unlocked@plt+0x118c>
   123dc:	bl	1113c <__errno_location@plt>
   123e0:	str	r5, [r0]
   123e4:	mvn	r0, #0
   123e8:	add	sp, sp, #12
   123ec:	pop	{r4, r5, pc}
   123f0:	mov	r0, r4
   123f4:	bl	11184 <fileno@plt>
   123f8:	mov	r3, #1
   123fc:	str	r3, [sp]
   12400:	mov	r2, #0
   12404:	mov	r3, #0
   12408:	bl	1104c <lseek64@plt>
   1240c:	mvn	r3, #0
   12410:	mvn	r2, #0
   12414:	cmp	r1, r3
   12418:	cmpeq	r0, r2
   1241c:	bne	123b8 <putchar_unlocked@plt+0x115c>
   12420:	b	123c8 <putchar_unlocked@plt+0x116c>
   12424:	bl	1113c <__errno_location@plt>
   12428:	ldr	r5, [r0]
   1242c:	b	123cc <putchar_unlocked@plt+0x1170>
   12430:	push	{r0, r1, r4, lr}
   12434:	subs	r4, r0, #0
   12438:	bne	1244c <putchar_unlocked@plt+0x11f0>
   1243c:	mov	r0, r4
   12440:	add	sp, sp, #8
   12444:	pop	{r4, lr}
   12448:	b	10f74 <fflush@plt>
   1244c:	bl	110c4 <__freading@plt>
   12450:	cmp	r0, #0
   12454:	beq	1243c <putchar_unlocked@plt+0x11e0>
   12458:	ldr	r3, [r4]
   1245c:	tst	r3, #256	; 0x100
   12460:	beq	1243c <putchar_unlocked@plt+0x11e0>
   12464:	mov	r3, #1
   12468:	str	r3, [sp]
   1246c:	mov	r2, #0
   12470:	mov	r3, #0
   12474:	mov	r0, r4
   12478:	bl	124d4 <putchar_unlocked@plt+0x1278>
   1247c:	b	1243c <putchar_unlocked@plt+0x11e0>
   12480:	push	{r0, r1, r2, r4, r5, lr}
   12484:	mov	r5, r0
   12488:	bl	1113c <__errno_location@plt>
   1248c:	ldr	r3, [r0]
   12490:	mov	r4, r0
   12494:	str	r3, [sp]
   12498:	str	r3, [sp, #4]
   1249c:	mov	r3, #0
   124a0:	str	r3, [r0]
   124a4:	mov	r0, r5
   124a8:	bl	10f8c <free@plt>
   124ac:	ldr	r3, [r4]
   124b0:	add	r2, sp, #8
   124b4:	cmp	r3, #0
   124b8:	moveq	r3, #4
   124bc:	movne	r3, #0
   124c0:	add	r3, r2, r3
   124c4:	ldr	r3, [r3, #-8]
   124c8:	str	r3, [r4]
   124cc:	add	sp, sp, #12
   124d0:	pop	{r4, r5, pc}
   124d4:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   124d8:	mov	r4, r0
   124dc:	ldmib	r0, {ip, lr}
   124e0:	ldr	r8, [sp, #32]
   124e4:	cmp	lr, ip
   124e8:	bne	12554 <putchar_unlocked@plt+0x12f8>
   124ec:	ldr	lr, [r0, #20]
   124f0:	ldr	ip, [r0, #16]
   124f4:	cmp	lr, ip
   124f8:	bne	12554 <putchar_unlocked@plt+0x12f8>
   124fc:	ldr	r5, [r0, #36]	; 0x24
   12500:	cmp	r5, #0
   12504:	bne	12554 <putchar_unlocked@plt+0x12f8>
   12508:	mov	r6, r2
   1250c:	mov	r7, r3
   12510:	bl	11184 <fileno@plt>
   12514:	mov	r2, r6
   12518:	mov	r3, r7
   1251c:	str	r8, [sp]
   12520:	bl	1104c <lseek64@plt>
   12524:	mvn	r3, #0
   12528:	mvn	r2, #0
   1252c:	cmp	r1, r3
   12530:	cmpeq	r0, r2
   12534:	mvneq	r0, #0
   12538:	ldrne	r3, [r4]
   1253c:	strdne	r0, [r4, #80]	; 0x50
   12540:	movne	r0, r5
   12544:	bicne	r3, r3, #16
   12548:	strne	r3, [r4]
   1254c:	add	sp, sp, #8
   12550:	pop	{r4, r5, r6, r7, r8, pc}
   12554:	str	r8, [sp, #32]
   12558:	mov	r0, r4
   1255c:	add	sp, sp, #8
   12560:	pop	{r4, r5, r6, r7, r8, lr}
   12564:	b	111a8 <fseeko64@plt>
   12568:	push	{lr}		; (str lr, [sp, #-4]!)
   1256c:	sub	sp, sp, #268	; 0x10c
   12570:	ldr	r2, [pc, #64]	; 125b8 <putchar_unlocked@plt+0x135c>
   12574:	add	r1, sp, #4
   12578:	bl	13e14 <putchar_unlocked@plt+0x2bb8>
   1257c:	cmp	r0, #0
   12580:	movne	r0, #0
   12584:	bne	125b0 <putchar_unlocked@plt+0x1354>
   12588:	ldr	r1, [pc, #44]	; 125bc <putchar_unlocked@plt+0x1360>
   1258c:	add	r0, sp, #4
   12590:	bl	10f68 <strcmp@plt>
   12594:	cmp	r0, #0
   12598:	beq	125b0 <putchar_unlocked@plt+0x1354>
   1259c:	ldr	r1, [pc, #28]	; 125c0 <putchar_unlocked@plt+0x1364>
   125a0:	add	r0, sp, #4
   125a4:	bl	10f68 <strcmp@plt>
   125a8:	adds	r0, r0, #0
   125ac:	movne	r0, #1
   125b0:	add	sp, sp, #268	; 0x10c
   125b4:	pop	{pc}		; (ldr pc, [sp], #4)
   125b8:	andeq	r0, r0, r1, lsl #2
   125bc:	muleq	r1, r6, r8
   125c0:	muleq	r1, r8, r8
   125c4:	mov	r3, #0
   125c8:	cmp	r0, #0
   125cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   125d0:	mov	r4, r0
   125d4:	strb	r3, [r2, #20]
   125d8:	sbcs	r3, r1, #0
   125dc:	mov	r5, r1
   125e0:	add	r6, r2, #20
   125e4:	mov	r8, #10
   125e8:	mov	r9, #0
   125ec:	bge	12650 <putchar_unlocked@plt+0x13f4>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r8
   125fc:	mov	r3, r9
   12600:	bl	14ee8 <putchar_unlocked@plt+0x3c8c>
   12604:	mov	r3, r9
   12608:	mov	r0, r4
   1260c:	mov	r1, r5
   12610:	sub	r7, r6, #1
   12614:	rsb	r2, r2, #48	; 0x30
   12618:	strb	r2, [r6, #-1]
   1261c:	mov	r2, r8
   12620:	bl	14ee8 <putchar_unlocked@plt+0x3c8c>
   12624:	mov	r4, r0
   12628:	mov	r5, r1
   1262c:	orrs	r3, r4, r5
   12630:	bne	12648 <putchar_unlocked@plt+0x13ec>
   12634:	sub	r6, r6, #2
   12638:	mov	r3, #45	; 0x2d
   1263c:	strb	r3, [r7, #-1]
   12640:	mov	r0, r6
   12644:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12648:	mov	r6, r7
   1264c:	b	125f0 <putchar_unlocked@plt+0x1394>
   12650:	mov	r0, r4
   12654:	mov	r1, r5
   12658:	mov	r2, r8
   1265c:	mov	r3, r9
   12660:	bl	14ee8 <putchar_unlocked@plt+0x3c8c>
   12664:	mov	r3, r9
   12668:	mov	r0, r4
   1266c:	mov	r1, r5
   12670:	add	r2, r2, #48	; 0x30
   12674:	strb	r2, [r6, #-1]!
   12678:	mov	r2, r8
   1267c:	bl	14ee8 <putchar_unlocked@plt+0x3c8c>
   12680:	mov	r4, r0
   12684:	mov	r5, r1
   12688:	orrs	r3, r4, r5
   1268c:	bne	12650 <putchar_unlocked@plt+0x13f4>
   12690:	b	12640 <putchar_unlocked@plt+0x13e4>
   12694:	push	{r4, r5, r6, lr}
   12698:	subs	r5, r0, #0
   1269c:	bne	126b4 <putchar_unlocked@plt+0x1458>
   126a0:	ldr	r3, [pc, #124]	; 12724 <putchar_unlocked@plt+0x14c8>
   126a4:	ldr	r0, [pc, #124]	; 12728 <putchar_unlocked@plt+0x14cc>
   126a8:	ldr	r1, [r3]
   126ac:	bl	1122c <fputs@plt>
   126b0:	bl	11244 <abort@plt>
   126b4:	mov	r1, #47	; 0x2f
   126b8:	bl	111cc <strrchr@plt>
   126bc:	cmp	r0, #0
   126c0:	addne	r4, r0, #1
   126c4:	moveq	r4, r5
   126c8:	sub	r3, r4, r5
   126cc:	cmp	r3, #6
   126d0:	ble	12710 <putchar_unlocked@plt+0x14b4>
   126d4:	mov	r2, #7
   126d8:	ldr	r1, [pc, #76]	; 1272c <putchar_unlocked@plt+0x14d0>
   126dc:	sub	r0, r4, #7
   126e0:	bl	11238 <strncmp@plt>
   126e4:	cmp	r0, #0
   126e8:	bne	12710 <putchar_unlocked@plt+0x14b4>
   126ec:	mov	r2, #3
   126f0:	ldr	r1, [pc, #56]	; 12730 <putchar_unlocked@plt+0x14d4>
   126f4:	mov	r0, r4
   126f8:	bl	11238 <strncmp@plt>
   126fc:	cmp	r0, #0
   12700:	movne	r5, r4
   12704:	ldreq	r3, [pc, #40]	; 12734 <putchar_unlocked@plt+0x14d8>
   12708:	addeq	r5, r4, #3
   1270c:	streq	r5, [r3]
   12710:	ldr	r3, [pc, #32]	; 12738 <putchar_unlocked@plt+0x14dc>
   12714:	str	r5, [r3]
   12718:	ldr	r3, [pc, #28]	; 1273c <putchar_unlocked@plt+0x14e0>
   1271c:	str	r5, [r3]
   12720:	pop	{r4, r5, r6, pc}
   12724:	andeq	r6, r2, r8, lsl #3
   12728:	muleq	r1, lr, r8
   1272c:	ldrdeq	r5, [r1], -r6
   12730:	ldrdeq	r5, [r1], -lr
   12734:	andeq	r6, r2, r8, ror r1
   12738:	strdeq	r6, [r2], -ip
   1273c:	andeq	r6, r2, ip, ror r1
   12740:	push	{r4, r5, r6, lr}
   12744:	mov	r2, #48	; 0x30
   12748:	mov	r5, r1
   1274c:	mov	r1, #0
   12750:	mov	r4, r0
   12754:	bl	11160 <memset@plt>
   12758:	cmp	r5, #10
   1275c:	bne	12764 <putchar_unlocked@plt+0x1508>
   12760:	bl	11244 <abort@plt>
   12764:	str	r5, [r4]
   12768:	mov	r0, r4
   1276c:	pop	{r4, r5, r6, pc}
   12770:	push	{r4, r5, r6, lr}
   12774:	mov	r4, r0
   12778:	mov	r5, r1
   1277c:	bl	149cc <putchar_unlocked@plt+0x3770>
   12780:	ldrb	r3, [r0]
   12784:	bic	r3, r3, #32
   12788:	cmp	r3, #85	; 0x55
   1278c:	bne	127fc <putchar_unlocked@plt+0x15a0>
   12790:	ldrb	r3, [r0, #1]
   12794:	bic	r3, r3, #32
   12798:	cmp	r3, #84	; 0x54
   1279c:	bne	127d4 <putchar_unlocked@plt+0x1578>
   127a0:	ldrb	r3, [r0, #2]
   127a4:	bic	r3, r3, #32
   127a8:	cmp	r3, #70	; 0x46
   127ac:	bne	127d4 <putchar_unlocked@plt+0x1578>
   127b0:	ldrb	r3, [r0, #3]
   127b4:	cmp	r3, #45	; 0x2d
   127b8:	bne	127d4 <putchar_unlocked@plt+0x1578>
   127bc:	ldrb	r3, [r0, #4]
   127c0:	cmp	r3, #56	; 0x38
   127c4:	bne	127d4 <putchar_unlocked@plt+0x1578>
   127c8:	ldrb	r3, [r0, #5]
   127cc:	cmp	r3, #0
   127d0:	beq	127e8 <putchar_unlocked@plt+0x158c>
   127d4:	ldr	r1, [pc, #144]	; 1286c <putchar_unlocked@plt+0x1610>
   127d8:	ldr	r0, [pc, #144]	; 12870 <putchar_unlocked@plt+0x1614>
   127dc:	cmp	r5, #9
   127e0:	movne	r0, r1
   127e4:	pop	{r4, r5, r6, pc}
   127e8:	ldrb	r3, [r4]
   127ec:	ldr	r1, [pc, #128]	; 12874 <putchar_unlocked@plt+0x1618>
   127f0:	ldr	r0, [pc, #128]	; 12878 <putchar_unlocked@plt+0x161c>
   127f4:	cmp	r3, #96	; 0x60
   127f8:	b	127e0 <putchar_unlocked@plt+0x1584>
   127fc:	cmp	r3, #71	; 0x47
   12800:	bne	127d4 <putchar_unlocked@plt+0x1578>
   12804:	ldrb	r3, [r0, #1]
   12808:	bic	r3, r3, #32
   1280c:	cmp	r3, #66	; 0x42
   12810:	bne	127d4 <putchar_unlocked@plt+0x1578>
   12814:	ldrb	r3, [r0, #2]
   12818:	cmp	r3, #49	; 0x31
   1281c:	bne	127d4 <putchar_unlocked@plt+0x1578>
   12820:	ldrb	r3, [r0, #3]
   12824:	cmp	r3, #56	; 0x38
   12828:	bne	127d4 <putchar_unlocked@plt+0x1578>
   1282c:	ldrb	r3, [r0, #4]
   12830:	cmp	r3, #48	; 0x30
   12834:	bne	127d4 <putchar_unlocked@plt+0x1578>
   12838:	ldrb	r3, [r0, #5]
   1283c:	cmp	r3, #51	; 0x33
   12840:	bne	127d4 <putchar_unlocked@plt+0x1578>
   12844:	ldrb	r3, [r0, #6]
   12848:	cmp	r3, #48	; 0x30
   1284c:	bne	127d4 <putchar_unlocked@plt+0x1578>
   12850:	ldrb	r3, [r0, #7]
   12854:	cmp	r3, #0
   12858:	bne	127d4 <putchar_unlocked@plt+0x1578>
   1285c:	ldrb	r3, [r4]
   12860:	ldr	r1, [pc, #20]	; 1287c <putchar_unlocked@plt+0x1620>
   12864:	ldr	r0, [pc, #20]	; 12880 <putchar_unlocked@plt+0x1624>
   12868:	b	127f4 <putchar_unlocked@plt+0x1598>
   1286c:	andeq	r5, r1, r9, asr #18
   12870:	andeq	r5, r1, r7, asr #18
   12874:	andeq	r5, r1, ip, lsr r9
   12878:	andeq	r5, r1, r8, lsr r9
   1287c:	andeq	r5, r1, r4, asr #18
   12880:	andeq	r5, r1, r0, asr #18
   12884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12888:	sub	sp, sp, #108	; 0x6c
   1288c:	mov	r8, r0
   12890:	str	r3, [sp, #36]	; 0x24
   12894:	mov	r5, r1
   12898:	str	r2, [sp, #44]	; 0x2c
   1289c:	ldr	sl, [sp, #144]	; 0x90
   128a0:	bl	11058 <__ctype_get_mb_cur_max@plt>
   128a4:	ldr	r3, [sp, #148]	; 0x94
   128a8:	mov	r7, #0
   128ac:	str	r7, [sp, #48]	; 0x30
   128b0:	lsr	r6, r3, #1
   128b4:	and	r6, r6, #1
   128b8:	mov	r3, #1
   128bc:	str	r3, [sp, #72]	; 0x48
   128c0:	str	r7, [sp, #24]
   128c4:	str	r7, [sp, #32]
   128c8:	str	r7, [sp, #40]	; 0x28
   128cc:	str	r7, [sp, #60]	; 0x3c
   128d0:	str	r0, [sp, #76]	; 0x4c
   128d4:	cmp	sl, #10
   128d8:	ldrls	pc, [pc, sl, lsl #2]
   128dc:	b	12b18 <putchar_unlocked@plt+0x18bc>
   128e0:	andeq	r2, r1, ip, lsl #18
   128e4:	andeq	r3, r1, r0, lsr #11
   128e8:	andeq	r2, r1, r4, ror #21
   128ec:	andeq	r2, r1, r0, lsr fp
   128f0:	andeq	r2, r1, r0, asr #21
   128f4:	andeq	r2, r1, r8, lsl r9
   128f8:	andeq	r3, r1, r0, lsl #11
   128fc:	andeq	r2, r1, ip, lsl fp
   12900:	andeq	r2, r1, r0, lsl sl
   12904:	andeq	r2, r1, r0, lsl sl
   12908:	andeq	r2, r1, r0, lsl sl
   1290c:	mov	r6, #0
   12910:	mov	r4, #0
   12914:	b	12944 <putchar_unlocked@plt+0x16e8>
   12918:	cmp	r6, #0
   1291c:	bne	12b40 <putchar_unlocked@plt+0x18e4>
   12920:	cmp	r5, #0
   12924:	movne	r3, #34	; 0x22
   12928:	strbne	r3, [r8]
   1292c:	mov	r3, #1
   12930:	str	r3, [sp, #24]
   12934:	str	r3, [sp, #32]
   12938:	mov	r4, #1
   1293c:	ldr	r3, [pc, #3172]	; 135a8 <putchar_unlocked@plt+0x234c>
   12940:	str	r3, [sp, #40]	; 0x28
   12944:	mov	r9, r5
   12948:	mov	r3, #0
   1294c:	str	r7, [sp, #68]	; 0x44
   12950:	str	r3, [sp, #28]
   12954:	ldr	r3, [sp, #36]	; 0x24
   12958:	cmn	r3, #1
   1295c:	bne	134ec <putchar_unlocked@plt+0x2290>
   12960:	ldr	r3, [sp, #44]	; 0x2c
   12964:	ldr	r2, [sp, #28]
   12968:	ldrb	r3, [r3, r2]
   1296c:	adds	r3, r3, #0
   12970:	movne	r3, #1
   12974:	str	r3, [sp, #52]	; 0x34
   12978:	ldr	r3, [sp, #52]	; 0x34
   1297c:	cmp	r3, #0
   12980:	bne	12b68 <putchar_unlocked@plt+0x190c>
   12984:	sub	r2, sl, #2
   12988:	clz	r2, r2
   1298c:	lsr	r2, r2, #5
   12990:	and	r3, r6, r2
   12994:	cmp	r4, #0
   12998:	movne	r3, #0
   1299c:	andeq	r3, r3, #1
   129a0:	cmp	r3, #0
   129a4:	bne	12d30 <putchar_unlocked@plt+0x1ad4>
   129a8:	eor	r3, r6, #1
   129ac:	ands	r2, r2, r3
   129b0:	beq	13524 <putchar_unlocked@plt+0x22c8>
   129b4:	ldr	r3, [sp, #68]	; 0x44
   129b8:	cmp	r3, #0
   129bc:	beq	1355c <putchar_unlocked@plt+0x2300>
   129c0:	ldr	r3, [sp, #72]	; 0x48
   129c4:	cmp	r3, #0
   129c8:	beq	13500 <putchar_unlocked@plt+0x22a4>
   129cc:	ldr	r3, [sp, #160]	; 0xa0
   129d0:	ldr	r2, [sp, #44]	; 0x2c
   129d4:	str	r3, [sp, #16]
   129d8:	ldr	r3, [sp, #156]	; 0x9c
   129dc:	ldr	r1, [sp, #60]	; 0x3c
   129e0:	str	r3, [sp, #12]
   129e4:	ldr	r3, [sp, #152]	; 0x98
   129e8:	str	r3, [sp, #8]
   129ec:	ldr	r3, [sp, #148]	; 0x94
   129f0:	str	r3, [sp, #4]
   129f4:	mov	r3, #5
   129f8:	str	r3, [sp]
   129fc:	ldr	r3, [sp, #36]	; 0x24
   12a00:	mov	r0, r8
   12a04:	bl	12884 <putchar_unlocked@plt+0x1628>
   12a08:	mov	r4, r0
   12a0c:	b	13550 <putchar_unlocked@plt+0x22f4>
   12a10:	cmp	sl, #10
   12a14:	beq	12a70 <putchar_unlocked@plt+0x1814>
   12a18:	ldr	r4, [pc, #2956]	; 135ac <putchar_unlocked@plt+0x2350>
   12a1c:	mov	r2, #5
   12a20:	mov	r1, r4
   12a24:	mov	r0, #0
   12a28:	bl	11004 <dcgettext@plt>
   12a2c:	cmp	r0, r4
   12a30:	str	r0, [sp, #156]	; 0x9c
   12a34:	bne	12a44 <putchar_unlocked@plt+0x17e8>
   12a38:	mov	r1, sl
   12a3c:	bl	12770 <putchar_unlocked@plt+0x1514>
   12a40:	str	r0, [sp, #156]	; 0x9c
   12a44:	ldr	r4, [pc, #2916]	; 135b0 <putchar_unlocked@plt+0x2354>
   12a48:	mov	r2, #5
   12a4c:	mov	r1, r4
   12a50:	mov	r0, #0
   12a54:	bl	11004 <dcgettext@plt>
   12a58:	cmp	r0, r4
   12a5c:	str	r0, [sp, #160]	; 0xa0
   12a60:	bne	12a70 <putchar_unlocked@plt+0x1814>
   12a64:	mov	r1, sl
   12a68:	bl	12770 <putchar_unlocked@plt+0x1514>
   12a6c:	str	r0, [sp, #160]	; 0xa0
   12a70:	cmp	r6, #0
   12a74:	moveq	r4, r6
   12a78:	beq	12a90 <putchar_unlocked@plt+0x1834>
   12a7c:	mov	r4, #0
   12a80:	b	12aa0 <putchar_unlocked@plt+0x1844>
   12a84:	cmp	r5, r4
   12a88:	strbhi	r3, [r8, r4]
   12a8c:	add	r4, r4, #1
   12a90:	ldr	r3, [sp, #156]	; 0x9c
   12a94:	ldrb	r3, [r3, r4]
   12a98:	cmp	r3, #0
   12a9c:	bne	12a84 <putchar_unlocked@plt+0x1828>
   12aa0:	ldr	r0, [sp, #160]	; 0xa0
   12aa4:	bl	11124 <strlen@plt>
   12aa8:	ldr	r3, [sp, #160]	; 0xa0
   12aac:	str	r3, [sp, #40]	; 0x28
   12ab0:	mov	r3, #1
   12ab4:	str	r3, [sp, #24]
   12ab8:	str	r0, [sp, #32]
   12abc:	b	12944 <putchar_unlocked@plt+0x16e8>
   12ac0:	mov	r3, #1
   12ac4:	cmp	r6, #0
   12ac8:	streq	r3, [sp, #24]
   12acc:	beq	12aec <putchar_unlocked@plt+0x1890>
   12ad0:	str	r3, [sp, #32]
   12ad4:	ldr	r3, [pc, #2772]	; 135b0 <putchar_unlocked@plt+0x2354>
   12ad8:	mov	r4, #0
   12adc:	str	r3, [sp, #40]	; 0x28
   12ae0:	b	12b10 <putchar_unlocked@plt+0x18b4>
   12ae4:	cmp	r6, #0
   12ae8:	bne	12b58 <putchar_unlocked@plt+0x18fc>
   12aec:	cmp	r5, #0
   12af0:	movne	r3, #39	; 0x27
   12af4:	strbne	r3, [r8]
   12af8:	mov	r3, #1
   12afc:	str	r3, [sp, #32]
   12b00:	mov	r6, #0
   12b04:	ldr	r3, [pc, #2724]	; 135b0 <putchar_unlocked@plt+0x2354>
   12b08:	mov	r4, #1
   12b0c:	str	r3, [sp, #40]	; 0x28
   12b10:	mov	sl, #2
   12b14:	b	12944 <putchar_unlocked@plt+0x16e8>
   12b18:	bl	11244 <abort@plt>
   12b1c:	mov	r6, #0
   12b20:	mov	r3, #1
   12b24:	str	r3, [sp, #24]
   12b28:	mov	r4, r6
   12b2c:	b	12944 <putchar_unlocked@plt+0x16e8>
   12b30:	mov	r6, #1
   12b34:	str	r6, [sp, #24]
   12b38:	str	r6, [sp, #32]
   12b3c:	b	12ad4 <putchar_unlocked@plt+0x1878>
   12b40:	mov	r3, #1
   12b44:	str	r3, [sp, #32]
   12b48:	ldr	r3, [pc, #2648]	; 135a8 <putchar_unlocked@plt+0x234c>
   12b4c:	str	r6, [sp, #24]
   12b50:	str	r3, [sp, #40]	; 0x28
   12b54:	b	12910 <putchar_unlocked@plt+0x16b4>
   12b58:	mov	r3, #1
   12b5c:	str	r3, [sp, #32]
   12b60:	ldr	r3, [pc, #2632]	; 135b0 <putchar_unlocked@plt+0x2354>
   12b64:	b	12b50 <putchar_unlocked@plt+0x18f4>
   12b68:	ldr	r3, [sp, #32]
   12b6c:	ldr	fp, [sp, #24]
   12b70:	cmp	sl, #2
   12b74:	moveq	fp, #0
   12b78:	andne	fp, fp, #1
   12b7c:	adds	r5, r3, #0
   12b80:	movne	r5, #1
   12b84:	ands	r3, r5, fp
   12b88:	str	r3, [sp, #64]	; 0x40
   12b8c:	beq	12c5c <putchar_unlocked@plt+0x1a00>
   12b90:	ldr	r2, [sp, #32]
   12b94:	ldr	r3, [sp, #28]
   12b98:	add	r7, r3, r2
   12b9c:	mov	r3, r2
   12ba0:	ldr	r2, [sp, #36]	; 0x24
   12ba4:	cmp	r3, #1
   12ba8:	movls	r3, #0
   12bac:	movhi	r3, #1
   12bb0:	cmn	r2, #1
   12bb4:	movne	r3, #0
   12bb8:	cmp	r3, #0
   12bbc:	beq	12bcc <putchar_unlocked@plt+0x1970>
   12bc0:	ldr	r0, [sp, #44]	; 0x2c
   12bc4:	bl	11124 <strlen@plt>
   12bc8:	str	r0, [sp, #36]	; 0x24
   12bcc:	ldr	r3, [sp, #36]	; 0x24
   12bd0:	cmp	r3, r7
   12bd4:	bcc	12c54 <putchar_unlocked@plt+0x19f8>
   12bd8:	ldr	r3, [sp, #44]	; 0x2c
   12bdc:	ldr	r0, [sp, #28]
   12be0:	ldr	r2, [sp, #32]
   12be4:	ldr	r1, [sp, #40]	; 0x28
   12be8:	add	r0, r3, r0
   12bec:	bl	10fe0 <memcmp@plt>
   12bf0:	cmp	r0, #0
   12bf4:	bne	12c54 <putchar_unlocked@plt+0x19f8>
   12bf8:	cmp	r6, #0
   12bfc:	beq	12c5c <putchar_unlocked@plt+0x1a00>
   12c00:	str	r6, [sp, #24]
   12c04:	ldr	r3, [sp, #24]
   12c08:	ldr	r2, [sp, #44]	; 0x2c
   12c0c:	cmp	sl, #2
   12c10:	movne	r3, #0
   12c14:	andeq	r3, r3, #1
   12c18:	cmp	r3, #0
   12c1c:	ldr	r3, [sp, #160]	; 0xa0
   12c20:	movne	sl, #4
   12c24:	str	r3, [sp, #16]
   12c28:	ldr	r3, [sp, #156]	; 0x9c
   12c2c:	str	sl, [sp]
   12c30:	str	r3, [sp, #12]
   12c34:	mov	r3, #0
   12c38:	str	r3, [sp, #8]
   12c3c:	ldr	r3, [sp, #148]	; 0x94
   12c40:	mov	r1, r9
   12c44:	bic	r3, r3, #2
   12c48:	str	r3, [sp, #4]
   12c4c:	ldr	r3, [sp, #36]	; 0x24
   12c50:	b	12a00 <putchar_unlocked@plt+0x17a4>
   12c54:	mov	r3, #0
   12c58:	str	r3, [sp, #64]	; 0x40
   12c5c:	ldr	r2, [sp, #28]
   12c60:	ldr	r3, [sp, #44]	; 0x2c
   12c64:	add	r3, r3, r2
   12c68:	str	r3, [sp, #80]	; 0x50
   12c6c:	ldr	r3, [sp, #44]	; 0x2c
   12c70:	ldrb	r7, [r3, r2]
   12c74:	cmp	r7, #58	; 0x3a
   12c78:	bhi	12de0 <putchar_unlocked@plt+0x1b84>
   12c7c:	cmp	r7, #43	; 0x2b
   12c80:	bcs	12e34 <putchar_unlocked@plt+0x1bd8>
   12c84:	cmp	r7, #32
   12c88:	beq	12e8c <putchar_unlocked@plt+0x1c30>
   12c8c:	bhi	12d38 <putchar_unlocked@plt+0x1adc>
   12c90:	cmp	r7, #9
   12c94:	beq	13140 <putchar_unlocked@plt+0x1ee4>
   12c98:	bhi	12cfc <putchar_unlocked@plt+0x1aa0>
   12c9c:	cmp	r7, #7
   12ca0:	beq	131ec <putchar_unlocked@plt+0x1f90>
   12ca4:	bhi	12ea8 <putchar_unlocked@plt+0x1c4c>
   12ca8:	cmp	r7, #0
   12cac:	beq	12ec4 <putchar_unlocked@plt+0x1c68>
   12cb0:	ldr	r3, [sp, #76]	; 0x4c
   12cb4:	cmp	r3, #1
   12cb8:	bne	13230 <putchar_unlocked@plt+0x1fd4>
   12cbc:	bl	1110c <__ctype_b_loc@plt>
   12cc0:	sxth	r3, r7
   12cc4:	lsl	r3, r3, #1
   12cc8:	ldr	r2, [r0]
   12ccc:	ldrh	r5, [r2, r3]
   12cd0:	ldr	r3, [sp, #76]	; 0x4c
   12cd4:	str	r3, [sp, #56]	; 0x38
   12cd8:	lsr	r5, r5, #14
   12cdc:	and	r5, r5, #1
   12ce0:	ldr	r3, [sp, #24]
   12ce4:	eor	fp, r5, #1
   12ce8:	and	fp, fp, r3
   12cec:	ands	fp, fp, #255	; 0xff
   12cf0:	beq	13078 <putchar_unlocked@plt+0x1e1c>
   12cf4:	mov	r5, #0
   12cf8:	b	132dc <putchar_unlocked@plt+0x2080>
   12cfc:	cmp	r7, #11
   12d00:	beq	13148 <putchar_unlocked@plt+0x1eec>
   12d04:	bcc	131e4 <putchar_unlocked@plt+0x1f88>
   12d08:	cmp	r7, #12
   12d0c:	beq	131f4 <putchar_unlocked@plt+0x1f98>
   12d10:	cmp	r7, #13
   12d14:	moveq	r3, #114	; 0x72
   12d18:	bne	12cb0 <putchar_unlocked@plt+0x1a54>
   12d1c:	cmp	sl, #2
   12d20:	movne	r2, #0
   12d24:	andeq	r2, r6, #1
   12d28:	cmp	r2, #0
   12d2c:	beq	12eac <putchar_unlocked@plt+0x1c50>
   12d30:	mov	sl, #2
   12d34:	b	12c04 <putchar_unlocked@plt+0x19a8>
   12d38:	cmp	r7, #37	; 0x25
   12d3c:	beq	12e34 <putchar_unlocked@plt+0x1bd8>
   12d40:	bhi	12d54 <putchar_unlocked@plt+0x1af8>
   12d44:	cmp	r7, #35	; 0x23
   12d48:	beq	12e80 <putchar_unlocked@plt+0x1c24>
   12d4c:	mov	r5, #0
   12d50:	b	12e90 <putchar_unlocked@plt+0x1c34>
   12d54:	cmp	r7, #39	; 0x27
   12d58:	bne	12d4c <putchar_unlocked@plt+0x1af0>
   12d5c:	cmp	sl, #2
   12d60:	ldrne	r5, [sp, #52]	; 0x34
   12d64:	movne	r3, r5
   12d68:	strne	r3, [sp, #68]	; 0x44
   12d6c:	bne	12e38 <putchar_unlocked@plt+0x1bdc>
   12d70:	cmp	r6, #0
   12d74:	bne	12c04 <putchar_unlocked@plt+0x19a8>
   12d78:	ldr	r2, [sp, #60]	; 0x3c
   12d7c:	adds	r3, r9, #0
   12d80:	movne	r3, #1
   12d84:	cmp	r2, #0
   12d88:	movne	r3, #0
   12d8c:	cmp	r3, #0
   12d90:	strne	r9, [sp, #60]	; 0x3c
   12d94:	movne	r9, #0
   12d98:	bne	12da8 <putchar_unlocked@plt+0x1b4c>
   12d9c:	cmp	r9, r4
   12da0:	movhi	r3, #39	; 0x27
   12da4:	strbhi	r3, [r8, r4]
   12da8:	add	r3, r4, #1
   12dac:	cmp	r3, r9
   12db0:	movcc	r2, #92	; 0x5c
   12db4:	strbcc	r2, [r8, r3]
   12db8:	add	r3, r4, #2
   12dbc:	cmp	r3, r9
   12dc0:	ldr	r5, [sp, #52]	; 0x34
   12dc4:	movcc	r2, #39	; 0x27
   12dc8:	strbcc	r2, [r8, r3]
   12dcc:	add	r4, r4, #3
   12dd0:	mov	fp, r6
   12dd4:	str	r5, [sp, #68]	; 0x44
   12dd8:	str	r6, [sp, #48]	; 0x30
   12ddc:	b	13078 <putchar_unlocked@plt+0x1e1c>
   12de0:	cmp	r7, #94	; 0x5e
   12de4:	beq	12d4c <putchar_unlocked@plt+0x1af0>
   12de8:	bhi	12e40 <putchar_unlocked@plt+0x1be4>
   12dec:	cmp	r7, #90	; 0x5a
   12df0:	bhi	12e28 <putchar_unlocked@plt+0x1bcc>
   12df4:	cmp	r7, #65	; 0x41
   12df8:	bcs	12e34 <putchar_unlocked@plt+0x1bd8>
   12dfc:	cmp	r7, #62	; 0x3e
   12e00:	bls	12d4c <putchar_unlocked@plt+0x1af0>
   12e04:	cmp	r7, #63	; 0x3f
   12e08:	bne	12cb0 <putchar_unlocked@plt+0x1a54>
   12e0c:	cmp	sl, #2
   12e10:	beq	12fb4 <putchar_unlocked@plt+0x1d58>
   12e14:	cmp	sl, #5
   12e18:	beq	12fc4 <putchar_unlocked@plt+0x1d68>
   12e1c:	mov	fp, #0
   12e20:	mov	r5, fp
   12e24:	b	13078 <putchar_unlocked@plt+0x1e1c>
   12e28:	cmp	r7, #92	; 0x5c
   12e2c:	beq	13150 <putchar_unlocked@plt+0x1ef4>
   12e30:	bls	12d4c <putchar_unlocked@plt+0x1af0>
   12e34:	ldr	r5, [sp, #52]	; 0x34
   12e38:	mov	fp, #0
   12e3c:	b	13078 <putchar_unlocked@plt+0x1e1c>
   12e40:	cmp	r7, #122	; 0x7a
   12e44:	bhi	12e64 <putchar_unlocked@plt+0x1c08>
   12e48:	cmp	r7, #97	; 0x61
   12e4c:	bcs	12e34 <putchar_unlocked@plt+0x1bd8>
   12e50:	cmp	r7, #95	; 0x5f
   12e54:	beq	12e34 <putchar_unlocked@plt+0x1bd8>
   12e58:	cmp	r7, #96	; 0x60
   12e5c:	bne	12cb0 <putchar_unlocked@plt+0x1a54>
   12e60:	b	12d4c <putchar_unlocked@plt+0x1af0>
   12e64:	cmp	r7, #124	; 0x7c
   12e68:	beq	12d4c <putchar_unlocked@plt+0x1af0>
   12e6c:	bcc	131fc <putchar_unlocked@plt+0x1fa0>
   12e70:	cmp	r7, #125	; 0x7d
   12e74:	beq	131fc <putchar_unlocked@plt+0x1fa0>
   12e78:	cmp	r7, #126	; 0x7e
   12e7c:	bne	12cb0 <putchar_unlocked@plt+0x1a54>
   12e80:	ldr	r3, [sp, #28]
   12e84:	cmp	r3, #0
   12e88:	bne	12fbc <putchar_unlocked@plt+0x1d60>
   12e8c:	ldr	r5, [sp, #52]	; 0x34
   12e90:	cmp	sl, #2
   12e94:	movne	fp, #0
   12e98:	andeq	fp, r6, #1
   12e9c:	cmp	fp, #0
   12ea0:	beq	13078 <putchar_unlocked@plt+0x1e1c>
   12ea4:	b	12d30 <putchar_unlocked@plt+0x1ad4>
   12ea8:	mov	r3, #98	; 0x62
   12eac:	ldr	r2, [sp, #24]
   12eb0:	cmp	r2, #0
   12eb4:	beq	12fbc <putchar_unlocked@plt+0x1d60>
   12eb8:	mov	r7, r3
   12ebc:	mov	r5, #0
   12ec0:	b	130d0 <putchar_unlocked@plt+0x1e74>
   12ec4:	ldr	r3, [sp, #24]
   12ec8:	cmp	r3, #0
   12ecc:	beq	12f98 <putchar_unlocked@plt+0x1d3c>
   12ed0:	cmp	r6, #0
   12ed4:	bne	12c00 <putchar_unlocked@plt+0x19a4>
   12ed8:	ldr	r3, [sp, #48]	; 0x30
   12edc:	eor	r2, r3, #1
   12ee0:	cmp	sl, #2
   12ee4:	movne	r2, #0
   12ee8:	andeq	r2, r2, #1
   12eec:	cmp	r2, #0
   12ef0:	moveq	r3, r4
   12ef4:	beq	12f2c <putchar_unlocked@plt+0x1cd0>
   12ef8:	cmp	r9, r4
   12efc:	movhi	r3, #39	; 0x27
   12f00:	strbhi	r3, [r8, r4]
   12f04:	add	r3, r4, #1
   12f08:	cmp	r9, r3
   12f0c:	movhi	r1, #36	; 0x24
   12f10:	strbhi	r1, [r8, r3]
   12f14:	add	r3, r4, #2
   12f18:	cmp	r9, r3
   12f1c:	movhi	r1, #39	; 0x27
   12f20:	strbhi	r1, [r8, r3]
   12f24:	add	r3, r4, #3
   12f28:	str	r2, [sp, #48]	; 0x30
   12f2c:	cmp	r9, r3
   12f30:	movhi	r2, #92	; 0x5c
   12f34:	strbhi	r2, [r8, r3]
   12f38:	cmp	fp, #0
   12f3c:	add	r4, r3, #1
   12f40:	beq	134d0 <putchar_unlocked@plt+0x2274>
   12f44:	ldr	r2, [sp, #28]
   12f48:	ldr	r1, [sp, #36]	; 0x24
   12f4c:	add	r2, r2, #1
   12f50:	cmp	r1, r2
   12f54:	bls	12f90 <putchar_unlocked@plt+0x1d34>
   12f58:	ldr	r1, [sp, #44]	; 0x2c
   12f5c:	mov	r7, #48	; 0x30
   12f60:	ldrb	r2, [r1, r2]
   12f64:	sub	r2, r2, #48	; 0x30
   12f68:	cmp	r2, #9
   12f6c:	movhi	r5, r6
   12f70:	bhi	13078 <putchar_unlocked@plt+0x1e1c>
   12f74:	cmp	r9, r4
   12f78:	add	r2, r3, #2
   12f7c:	strbhi	r7, [r8, r4]
   12f80:	cmp	r9, r2
   12f84:	add	r4, r3, #3
   12f88:	movhi	r1, #48	; 0x30
   12f8c:	strbhi	r1, [r8, r2]
   12f90:	mov	r5, r6
   12f94:	b	134d8 <putchar_unlocked@plt+0x227c>
   12f98:	ldr	r3, [sp, #148]	; 0x94
   12f9c:	tst	r3, #1
   12fa0:	ldreq	r5, [sp, #24]
   12fa4:	beq	134e4 <putchar_unlocked@plt+0x2288>
   12fa8:	ldr	r3, [sp, #28]
   12fac:	add	r3, r3, #1
   12fb0:	b	12950 <putchar_unlocked@plt+0x16f4>
   12fb4:	cmp	r6, #0
   12fb8:	bne	12c04 <putchar_unlocked@plt+0x19a8>
   12fbc:	mov	r5, #0
   12fc0:	b	12e38 <putchar_unlocked@plt+0x1bdc>
   12fc4:	ldr	r3, [sp, #148]	; 0x94
   12fc8:	tst	r3, #4
   12fcc:	beq	12fbc <putchar_unlocked@plt+0x1d60>
   12fd0:	ldr	r3, [sp, #28]
   12fd4:	add	r2, r3, #2
   12fd8:	ldr	r3, [sp, #36]	; 0x24
   12fdc:	cmp	r3, r2
   12fe0:	bls	12fbc <putchar_unlocked@plt+0x1d60>
   12fe4:	ldr	r3, [sp, #44]	; 0x2c
   12fe8:	ldr	r1, [sp, #28]
   12fec:	add	r3, r3, r1
   12ff0:	ldrb	r0, [r3, #1]
   12ff4:	cmp	r0, #63	; 0x3f
   12ff8:	bne	12fbc <putchar_unlocked@plt+0x1d60>
   12ffc:	ldr	r3, [sp, #44]	; 0x2c
   13000:	ldrb	r1, [r3, r2]
   13004:	sub	r3, r1, #33	; 0x21
   13008:	uxtb	r3, r3
   1300c:	cmp	r3, #29
   13010:	bhi	134e0 <putchar_unlocked@plt+0x2284>
   13014:	mov	ip, #1
   13018:	ldr	r5, [pc, #1428]	; 135b4 <putchar_unlocked@plt+0x2358>
   1301c:	ands	r5, r5, ip, lsl r3
   13020:	beq	12e38 <putchar_unlocked@plt+0x1bdc>
   13024:	cmp	r6, #0
   13028:	bne	12c04 <putchar_unlocked@plt+0x19a8>
   1302c:	add	r3, r4, #1
   13030:	cmp	r9, r4
   13034:	strbhi	r0, [r8, r4]
   13038:	cmp	r9, r3
   1303c:	movhi	r0, #34	; 0x22
   13040:	strbhi	r0, [r8, r3]
   13044:	add	r3, r4, #2
   13048:	cmp	r9, r3
   1304c:	movhi	r0, #34	; 0x22
   13050:	strbhi	r0, [r8, r3]
   13054:	add	r3, r4, #3
   13058:	cmp	r9, r3
   1305c:	add	r4, r4, #4
   13060:	mov	r5, r6
   13064:	mov	fp, r6
   13068:	mov	r7, r1
   1306c:	movhi	r0, #63	; 0x3f
   13070:	strbhi	r0, [r8, r3]
   13074:	str	r2, [sp, #28]
   13078:	ldr	r3, [sp, #24]
   1307c:	eor	r3, r3, #1
   13080:	cmp	sl, #2
   13084:	orreq	r3, r3, #1
   13088:	eor	r3, r3, #1
   1308c:	orr	r3, r6, r3
   13090:	tst	r3, #255	; 0xff
   13094:	beq	130c4 <putchar_unlocked@plt+0x1e68>
   13098:	ldr	r3, [sp, #152]	; 0x98
   1309c:	cmp	r3, #0
   130a0:	beq	130c4 <putchar_unlocked@plt+0x1e68>
   130a4:	lsr	r2, r7, #5
   130a8:	ldr	r1, [sp, #152]	; 0x98
   130ac:	uxtb	r2, r2
   130b0:	and	r3, r7, #31
   130b4:	ldr	r2, [r1, r2, lsl #2]
   130b8:	lsr	r3, r2, r3
   130bc:	tst	r3, #1
   130c0:	bne	130d0 <putchar_unlocked@plt+0x1e74>
   130c4:	ldr	r3, [sp, #64]	; 0x40
   130c8:	cmp	r3, #0
   130cc:	beq	13168 <putchar_unlocked@plt+0x1f0c>
   130d0:	cmp	r6, #0
   130d4:	bne	12c04 <putchar_unlocked@plt+0x19a8>
   130d8:	ldr	r3, [sp, #48]	; 0x30
   130dc:	eor	r3, r3, #1
   130e0:	cmp	sl, #2
   130e4:	movne	r3, #0
   130e8:	andeq	r3, r3, #1
   130ec:	cmp	r3, #0
   130f0:	beq	13128 <putchar_unlocked@plt+0x1ecc>
   130f4:	cmp	r9, r4
   130f8:	movhi	r2, #39	; 0x27
   130fc:	strbhi	r2, [r8, r4]
   13100:	add	r2, r4, #1
   13104:	cmp	r9, r2
   13108:	movhi	r1, #36	; 0x24
   1310c:	strbhi	r1, [r8, r2]
   13110:	add	r2, r4, #2
   13114:	cmp	r9, r2
   13118:	add	r4, r4, #3
   1311c:	movhi	r1, #39	; 0x27
   13120:	strbhi	r1, [r8, r2]
   13124:	str	r3, [sp, #48]	; 0x30
   13128:	cmp	r9, r4
   1312c:	movhi	r3, #92	; 0x5c
   13130:	strbhi	r3, [r8, r4]
   13134:	ldr	fp, [sp, #52]	; 0x34
   13138:	add	r4, r4, #1
   1313c:	b	13168 <putchar_unlocked@plt+0x1f0c>
   13140:	mov	r3, #116	; 0x74
   13144:	b	12d1c <putchar_unlocked@plt+0x1ac0>
   13148:	mov	r3, #118	; 0x76
   1314c:	b	12eac <putchar_unlocked@plt+0x1c50>
   13150:	cmp	sl, #2
   13154:	bne	131c4 <putchar_unlocked@plt+0x1f68>
   13158:	cmp	r6, #0
   1315c:	bne	12c04 <putchar_unlocked@plt+0x19a8>
   13160:	mov	r5, r6
   13164:	mov	fp, r6
   13168:	ldr	r3, [sp, #48]	; 0x30
   1316c:	eor	fp, fp, #1
   13170:	and	fp, fp, r3
   13174:	tst	fp, #255	; 0xff
   13178:	beq	131a4 <putchar_unlocked@plt+0x1f48>
   1317c:	cmp	r9, r4
   13180:	movhi	r3, #39	; 0x27
   13184:	strbhi	r3, [r8, r4]
   13188:	add	r3, r4, #1
   1318c:	cmp	r9, r3
   13190:	movhi	r2, #39	; 0x27
   13194:	add	r4, r4, #2
   13198:	strbhi	r2, [r8, r3]
   1319c:	mov	r3, #0
   131a0:	str	r3, [sp, #48]	; 0x30
   131a4:	cmp	r9, r4
   131a8:	strbhi	r7, [r8, r4]
   131ac:	ldr	r3, [sp, #72]	; 0x48
   131b0:	cmp	r5, #0
   131b4:	moveq	r3, #0
   131b8:	add	r4, r4, #1
   131bc:	str	r3, [sp, #72]	; 0x48
   131c0:	b	12fa8 <putchar_unlocked@plt+0x1d4c>
   131c4:	ldr	r3, [sp, #24]
   131c8:	and	r3, r3, r6
   131cc:	tst	r5, r3
   131d0:	moveq	r3, r7
   131d4:	beq	12d1c <putchar_unlocked@plt+0x1ac0>
   131d8:	mov	fp, #0
   131dc:	mov	r5, fp
   131e0:	b	13168 <putchar_unlocked@plt+0x1f0c>
   131e4:	mov	r3, #110	; 0x6e
   131e8:	b	12d1c <putchar_unlocked@plt+0x1ac0>
   131ec:	mov	r3, #97	; 0x61
   131f0:	b	12eac <putchar_unlocked@plt+0x1c50>
   131f4:	mov	r3, #102	; 0x66
   131f8:	b	12eac <putchar_unlocked@plt+0x1c50>
   131fc:	ldr	r3, [sp, #36]	; 0x24
   13200:	cmn	r3, #1
   13204:	bne	13224 <putchar_unlocked@plt+0x1fc8>
   13208:	ldr	r3, [sp, #44]	; 0x2c
   1320c:	ldrb	r3, [r3, #1]
   13210:	adds	r3, r3, #0
   13214:	movne	r3, #1
   13218:	cmp	r3, #0
   1321c:	bne	12fbc <putchar_unlocked@plt+0x1d60>
   13220:	b	12e80 <putchar_unlocked@plt+0x1c24>
   13224:	ldr	r3, [sp, #36]	; 0x24
   13228:	subs	r3, r3, #1
   1322c:	b	13214 <putchar_unlocked@plt+0x1fb8>
   13230:	mov	r3, #0
   13234:	str	r3, [sp, #96]	; 0x60
   13238:	str	r3, [sp, #100]	; 0x64
   1323c:	ldr	r3, [sp, #36]	; 0x24
   13240:	cmn	r3, #1
   13244:	bne	13254 <putchar_unlocked@plt+0x1ff8>
   13248:	ldr	r0, [sp, #44]	; 0x2c
   1324c:	bl	11124 <strlen@plt>
   13250:	str	r0, [sp, #36]	; 0x24
   13254:	ldr	r5, [sp, #52]	; 0x34
   13258:	mov	r3, #0
   1325c:	str	r3, [sp, #56]	; 0x38
   13260:	ldr	r3, [sp, #28]
   13264:	ldr	r2, [sp, #56]	; 0x38
   13268:	ldr	r1, [sp, #36]	; 0x24
   1326c:	add	r2, r3, r2
   13270:	ldr	r3, [sp, #44]	; 0x2c
   13274:	add	r0, sp, #92	; 0x5c
   13278:	add	fp, r3, r2
   1327c:	sub	r2, r1, r2
   13280:	add	r3, sp, #96	; 0x60
   13284:	mov	r1, fp
   13288:	bl	14a00 <putchar_unlocked@plt+0x37a4>
   1328c:	subs	r2, r0, #0
   13290:	beq	132d0 <putchar_unlocked@plt+0x2074>
   13294:	cmn	r2, #1
   13298:	beq	134a8 <putchar_unlocked@plt+0x224c>
   1329c:	cmn	r2, #2
   132a0:	bne	13418 <putchar_unlocked@plt+0x21bc>
   132a4:	ldr	r2, [sp, #56]	; 0x38
   132a8:	ldr	r3, [sp, #28]
   132ac:	add	r3, r3, r2
   132b0:	ldr	r2, [sp, #36]	; 0x24
   132b4:	cmp	r2, r3
   132b8:	bls	134a8 <putchar_unlocked@plt+0x224c>
   132bc:	ldr	r3, [sp, #80]	; 0x50
   132c0:	ldr	r2, [sp, #56]	; 0x38
   132c4:	ldrb	r5, [r3, r2]
   132c8:	cmp	r5, #0
   132cc:	bne	13408 <putchar_unlocked@plt+0x21ac>
   132d0:	ldr	r3, [sp, #56]	; 0x38
   132d4:	cmp	r3, #1
   132d8:	bls	12ce0 <putchar_unlocked@plt+0x1a84>
   132dc:	ldr	r2, [sp, #56]	; 0x38
   132e0:	ldr	r3, [sp, #28]
   132e4:	mov	fp, #0
   132e8:	add	r3, r3, r2
   132ec:	ldr	r2, [sp, #24]
   132f0:	str	r3, [sp, #52]	; 0x34
   132f4:	eor	r3, r5, #1
   132f8:	and	r3, r3, r2
   132fc:	mov	ip, #92	; 0x5c
   13300:	uxtb	r3, r3
   13304:	mov	r2, #39	; 0x27
   13308:	cmp	r3, #0
   1330c:	beq	134b0 <putchar_unlocked@plt+0x2254>
   13310:	cmp	r6, #0
   13314:	bne	12c00 <putchar_unlocked@plt+0x19a4>
   13318:	ldr	r1, [sp, #48]	; 0x30
   1331c:	eor	r1, r1, #1
   13320:	cmp	sl, #2
   13324:	movne	r1, #0
   13328:	andeq	r1, r1, #1
   1332c:	cmp	r1, #0
   13330:	beq	13360 <putchar_unlocked@plt+0x2104>
   13334:	add	r0, r4, #1
   13338:	cmp	r9, r4
   1333c:	strbhi	r2, [r8, r4]
   13340:	cmp	r9, r0
   13344:	movhi	lr, #36	; 0x24
   13348:	strbhi	lr, [r8, r0]
   1334c:	add	r0, r4, #2
   13350:	add	r4, r4, #3
   13354:	cmp	r9, r0
   13358:	strbhi	r2, [r8, r0]
   1335c:	str	r1, [sp, #48]	; 0x30
   13360:	add	r0, r4, #1
   13364:	cmp	r9, r4
   13368:	strbhi	ip, [r8, r4]
   1336c:	cmp	r9, r0
   13370:	lsrhi	r1, r7, #6
   13374:	addhi	r1, r1, #48	; 0x30
   13378:	strbhi	r1, [r8, r0]
   1337c:	add	r0, r4, #2
   13380:	cmp	r9, r0
   13384:	lsrhi	r1, r7, #3
   13388:	and	r7, r7, #7
   1338c:	andhi	r1, r1, #7
   13390:	add	r4, r4, #3
   13394:	add	r7, r7, #48	; 0x30
   13398:	mov	fp, r3
   1339c:	addhi	r1, r1, #48	; 0x30
   133a0:	strbhi	r1, [r8, r0]
   133a4:	ldr	r1, [sp, #28]
   133a8:	ldr	r0, [sp, #52]	; 0x34
   133ac:	add	r1, r1, #1
   133b0:	cmp	r0, r1
   133b4:	bls	13168 <putchar_unlocked@plt+0x1f0c>
   133b8:	ldr	lr, [sp, #48]	; 0x30
   133bc:	eor	r0, fp, #1
   133c0:	and	r0, r0, lr
   133c4:	tst	r0, #255	; 0xff
   133c8:	beq	133ec <putchar_unlocked@plt+0x2190>
   133cc:	add	r0, r4, #1
   133d0:	cmp	r9, r4
   133d4:	strbhi	r2, [r8, r4]
   133d8:	cmp	r9, r0
   133dc:	add	r4, r4, #2
   133e0:	strbhi	r2, [r8, r0]
   133e4:	mov	r0, #0
   133e8:	str	r0, [sp, #48]	; 0x30
   133ec:	ldr	r0, [sp, #44]	; 0x2c
   133f0:	cmp	r9, r4
   133f4:	strbhi	r7, [r8, r4]
   133f8:	str	r1, [sp, #28]
   133fc:	add	r4, r4, #1
   13400:	ldrb	r7, [r0, r1]
   13404:	b	13308 <putchar_unlocked@plt+0x20ac>
   13408:	ldr	r3, [sp, #56]	; 0x38
   1340c:	add	r3, r3, #1
   13410:	str	r3, [sp, #56]	; 0x38
   13414:	b	132a4 <putchar_unlocked@plt+0x2048>
   13418:	cmp	sl, #2
   1341c:	movne	r3, #0
   13420:	andeq	r3, r6, #1
   13424:	cmp	r3, #0
   13428:	movne	r1, #1
   1342c:	bne	13488 <putchar_unlocked@plt+0x222c>
   13430:	ldr	r0, [sp, #92]	; 0x5c
   13434:	str	r2, [sp, #84]	; 0x54
   13438:	bl	11040 <iswprint@plt>
   1343c:	ldr	r3, [sp, #56]	; 0x38
   13440:	ldr	r2, [sp, #84]	; 0x54
   13444:	add	r3, r3, r2
   13448:	str	r3, [sp, #56]	; 0x38
   1344c:	cmp	r0, #0
   13450:	add	r0, sp, #96	; 0x60
   13454:	moveq	r5, #0
   13458:	bl	10fbc <mbsinit@plt>
   1345c:	cmp	r0, #0
   13460:	beq	13260 <putchar_unlocked@plt+0x2004>
   13464:	b	132d0 <putchar_unlocked@plt+0x2074>
   13468:	ldrb	r3, [fp, r1]
   1346c:	cmp	r3, #94	; 0x5e
   13470:	beq	12d30 <putchar_unlocked@plt+0x1ad4>
   13474:	bhi	13494 <putchar_unlocked@plt+0x2238>
   13478:	sub	r3, r3, #91	; 0x5b
   1347c:	cmp	r3, #1
   13480:	bls	12d30 <putchar_unlocked@plt+0x1ad4>
   13484:	add	r1, r1, #1
   13488:	cmp	r1, r2
   1348c:	bne	13468 <putchar_unlocked@plt+0x220c>
   13490:	b	13430 <putchar_unlocked@plt+0x21d4>
   13494:	cmp	r3, #96	; 0x60
   13498:	beq	12d30 <putchar_unlocked@plt+0x1ad4>
   1349c:	cmp	r3, #124	; 0x7c
   134a0:	bne	13484 <putchar_unlocked@plt+0x2228>
   134a4:	b	12d30 <putchar_unlocked@plt+0x1ad4>
   134a8:	mov	r5, #0
   134ac:	b	132d0 <putchar_unlocked@plt+0x2074>
   134b0:	ldr	r1, [sp, #64]	; 0x40
   134b4:	cmp	r1, #0
   134b8:	beq	133a4 <putchar_unlocked@plt+0x2148>
   134bc:	cmp	r9, r4
   134c0:	strbhi	ip, [r8, r4]
   134c4:	str	r3, [sp, #64]	; 0x40
   134c8:	add	r4, r4, #1
   134cc:	b	133a4 <putchar_unlocked@plt+0x2148>
   134d0:	mov	r5, fp
   134d4:	ldr	fp, [sp, #24]
   134d8:	mov	r7, #48	; 0x30
   134dc:	b	13078 <putchar_unlocked@plt+0x1e1c>
   134e0:	mov	r5, #0
   134e4:	mov	fp, r5
   134e8:	b	13078 <putchar_unlocked@plt+0x1e1c>
   134ec:	ldr	r3, [sp, #36]	; 0x24
   134f0:	ldr	r2, [sp, #28]
   134f4:	subs	r3, r3, r2
   134f8:	movne	r3, #1
   134fc:	b	12974 <putchar_unlocked@plt+0x1718>
   13500:	ldr	r3, [sp, #60]	; 0x3c
   13504:	clz	r7, r9
   13508:	cmp	r3, #0
   1350c:	lsr	r7, r7, #5
   13510:	moveq	r7, #0
   13514:	cmp	r7, #0
   13518:	mov	r5, r3
   1351c:	bne	128d4 <putchar_unlocked@plt+0x1678>
   13520:	ldr	r3, [sp, #68]	; 0x44
   13524:	ldr	r2, [sp, #40]	; 0x28
   13528:	cmp	r2, #0
   1352c:	moveq	r3, #0
   13530:	andne	r3, r3, #1
   13534:	cmp	r3, #0
   13538:	movne	r3, r2
   1353c:	subne	r2, r3, #1
   13540:	bne	13570 <putchar_unlocked@plt+0x2314>
   13544:	cmp	r9, r4
   13548:	movhi	r3, #0
   1354c:	strbhi	r3, [r8, r4]
   13550:	mov	r0, r4
   13554:	add	sp, sp, #108	; 0x6c
   13558:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1355c:	mov	r3, r2
   13560:	b	13524 <putchar_unlocked@plt+0x22c8>
   13564:	cmp	r9, r4
   13568:	strbhi	r3, [r8, r4]
   1356c:	add	r4, r4, #1
   13570:	ldrb	r3, [r2, #1]!
   13574:	cmp	r3, #0
   13578:	bne	13564 <putchar_unlocked@plt+0x2308>
   1357c:	b	13544 <putchar_unlocked@plt+0x22e8>
   13580:	ldr	r3, [pc, #32]	; 135a8 <putchar_unlocked@plt+0x234c>
   13584:	mov	r6, #1
   13588:	str	r6, [sp, #24]
   1358c:	str	r6, [sp, #32]
   13590:	str	r3, [sp, #40]	; 0x28
   13594:	mov	r4, #0
   13598:	mov	sl, #5
   1359c:	b	12944 <putchar_unlocked@plt+0x16e8>
   135a0:	mov	r6, #1
   135a4:	b	12b38 <putchar_unlocked@plt+0x18dc>
   135a8:	andeq	r5, r1, r7, asr #18
   135ac:	andeq	r5, r1, fp, asr #18
   135b0:	andeq	r5, r1, r9, asr #18
   135b4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   135b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135bc:	sub	sp, sp, #52	; 0x34
   135c0:	mov	r6, r0
   135c4:	mov	r5, r3
   135c8:	mov	r8, r1
   135cc:	mov	r9, r2
   135d0:	bl	1113c <__errno_location@plt>
   135d4:	ldr	r7, [pc, #380]	; 13758 <putchar_unlocked@plt+0x24fc>
   135d8:	cmn	r6, #-2147483647	; 0x80000001
   135dc:	ldr	r4, [r7]
   135e0:	ldr	r3, [r0]
   135e4:	str	r0, [sp, #24]
   135e8:	str	r3, [sp, #32]
   135ec:	movne	r3, #0
   135f0:	moveq	r3, #1
   135f4:	orrs	r3, r3, r6, lsr #31
   135f8:	beq	13600 <putchar_unlocked@plt+0x23a4>
   135fc:	bl	11244 <abort@plt>
   13600:	ldr	r2, [r7, #4]
   13604:	cmp	r6, r2
   13608:	blt	13678 <putchar_unlocked@plt+0x241c>
   1360c:	add	r1, sp, #48	; 0x30
   13610:	add	sl, r7, #8
   13614:	str	r2, [r1, #-4]!
   13618:	cmp	r4, sl
   1361c:	mov	r3, #8
   13620:	sub	r2, r6, r2
   13624:	movne	r0, r4
   13628:	str	r3, [sp]
   1362c:	add	r2, r2, #1
   13630:	mvn	r3, #-2147483648	; 0x80000000
   13634:	moveq	r0, #0
   13638:	bl	14514 <putchar_unlocked@plt+0x32b8>
   1363c:	cmp	r4, sl
   13640:	ldr	r2, [sp, #44]	; 0x2c
   13644:	mov	fp, r0
   13648:	str	r0, [r7]
   1364c:	ldmeq	r4, {r0, r1}
   13650:	mov	r4, fp
   13654:	stmeq	fp, {r0, r1}
   13658:	ldr	r0, [r7, #4]
   1365c:	mov	r1, #0
   13660:	sub	r2, r2, r0
   13664:	add	r0, fp, r0, lsl #3
   13668:	lsl	r2, r2, #3
   1366c:	bl	11160 <memset@plt>
   13670:	ldr	r3, [sp, #44]	; 0x2c
   13674:	str	r3, [r7, #4]
   13678:	ldr	r3, [r5, #4]
   1367c:	add	sl, r4, r6, lsl #3
   13680:	orr	r3, r3, #1
   13684:	str	r3, [sp, #28]
   13688:	add	r3, r5, #8
   1368c:	str	r3, [sp, #36]	; 0x24
   13690:	ldr	r3, [r5, #44]	; 0x2c
   13694:	ldr	fp, [r4, r6, lsl #3]
   13698:	ldr	r7, [sl, #4]
   1369c:	str	r3, [sp, #16]
   136a0:	ldr	r3, [r5, #40]	; 0x28
   136a4:	mov	r2, r8
   136a8:	str	r3, [sp, #12]
   136ac:	add	r3, r5, #8
   136b0:	str	r3, [sp, #8]
   136b4:	ldr	r3, [sp, #28]
   136b8:	mov	r1, fp
   136bc:	str	r3, [sp, #4]
   136c0:	ldr	r3, [r5]
   136c4:	mov	r0, r7
   136c8:	str	r3, [sp]
   136cc:	mov	r3, r9
   136d0:	bl	12884 <putchar_unlocked@plt+0x1628>
   136d4:	cmp	fp, r0
   136d8:	bhi	13740 <putchar_unlocked@plt+0x24e4>
   136dc:	ldr	r3, [pc, #120]	; 1375c <putchar_unlocked@plt+0x2500>
   136e0:	add	fp, r0, #1
   136e4:	cmp	r7, r3
   136e8:	str	fp, [r4, r6, lsl #3]
   136ec:	beq	136f8 <putchar_unlocked@plt+0x249c>
   136f0:	mov	r0, r7
   136f4:	bl	12480 <putchar_unlocked@plt+0x1224>
   136f8:	mov	r0, fp
   136fc:	bl	143cc <putchar_unlocked@plt+0x3170>
   13700:	ldr	r3, [r5, #44]	; 0x2c
   13704:	mov	r2, r8
   13708:	mov	r1, fp
   1370c:	str	r0, [sl, #4]
   13710:	str	r3, [sp, #16]
   13714:	ldr	r3, [r5, #40]	; 0x28
   13718:	mov	r7, r0
   1371c:	str	r3, [sp, #12]
   13720:	add	r3, r5, #8
   13724:	str	r3, [sp, #8]
   13728:	ldr	r3, [sp, #28]
   1372c:	str	r3, [sp, #4]
   13730:	ldr	r3, [r5]
   13734:	str	r3, [sp]
   13738:	mov	r3, r9
   1373c:	bl	12884 <putchar_unlocked@plt+0x1628>
   13740:	ldr	r3, [sp, #24]
   13744:	ldr	r2, [sp, #32]
   13748:	mov	r0, r7
   1374c:	str	r2, [r3]
   13750:	add	sp, sp, #52	; 0x34
   13754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13758:	andeq	r6, r2, r8, lsr r1
   1375c:	andeq	r6, r2, r0, lsl #4
   13760:	push	{r4, r5, r6, lr}
   13764:	mov	r5, r0
   13768:	bl	1113c <__errno_location@plt>
   1376c:	cmp	r5, #0
   13770:	mov	r1, #48	; 0x30
   13774:	ldr	r6, [r0]
   13778:	mov	r4, r0
   1377c:	ldr	r0, [pc, #12]	; 13790 <putchar_unlocked@plt+0x2534>
   13780:	movne	r0, r5
   13784:	bl	147a8 <putchar_unlocked@plt+0x354c>
   13788:	str	r6, [r4]
   1378c:	pop	{r4, r5, r6, pc}
   13790:	andeq	r6, r2, r0, lsl #6
   13794:	ldr	r3, [pc, #12]	; 137a8 <putchar_unlocked@plt+0x254c>
   13798:	cmp	r0, #0
   1379c:	moveq	r0, r3
   137a0:	ldr	r0, [r0]
   137a4:	bx	lr
   137a8:	andeq	r6, r2, r0, lsl #6
   137ac:	ldr	r3, [pc, #12]	; 137c0 <putchar_unlocked@plt+0x2564>
   137b0:	cmp	r0, #0
   137b4:	moveq	r0, r3
   137b8:	str	r1, [r0]
   137bc:	bx	lr
   137c0:	andeq	r6, r2, r0, lsl #6
   137c4:	ldr	r3, [pc, #52]	; 13800 <putchar_unlocked@plt+0x25a4>
   137c8:	cmp	r0, #0
   137cc:	moveq	r0, r3
   137d0:	add	r3, r0, #8
   137d4:	push	{lr}		; (str lr, [sp, #-4]!)
   137d8:	lsr	lr, r1, #5
   137dc:	and	r1, r1, #31
   137e0:	ldr	ip, [r3, lr, lsl #2]
   137e4:	lsr	r0, ip, r1
   137e8:	eor	r2, r2, r0
   137ec:	and	r2, r2, #1
   137f0:	and	r0, r0, #1
   137f4:	eor	r1, ip, r2, lsl r1
   137f8:	str	r1, [r3, lr, lsl #2]
   137fc:	pop	{pc}		; (ldr pc, [sp], #4)
   13800:	andeq	r6, r2, r0, lsl #6
   13804:	ldr	r3, [pc, #16]	; 1381c <putchar_unlocked@plt+0x25c0>
   13808:	cmp	r0, #0
   1380c:	movne	r3, r0
   13810:	ldr	r0, [r3, #4]
   13814:	str	r1, [r3, #4]
   13818:	bx	lr
   1381c:	andeq	r6, r2, r0, lsl #6
   13820:	ldr	r3, [pc, #44]	; 13854 <putchar_unlocked@plt+0x25f8>
   13824:	cmp	r0, #0
   13828:	moveq	r0, r3
   1382c:	mov	r3, #10
   13830:	cmp	r2, #0
   13834:	cmpne	r1, #0
   13838:	str	r3, [r0]
   1383c:	bne	13848 <putchar_unlocked@plt+0x25ec>
   13840:	push	{r4, lr}
   13844:	bl	11244 <abort@plt>
   13848:	str	r1, [r0, #40]	; 0x28
   1384c:	str	r2, [r0, #44]	; 0x2c
   13850:	bx	lr
   13854:	andeq	r6, r2, r0, lsl #6
   13858:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1385c:	sub	sp, sp, #24
   13860:	mov	sl, r3
   13864:	ldr	r4, [sp, #56]	; 0x38
   13868:	ldr	r3, [pc, #100]	; 138d4 <putchar_unlocked@plt+0x2678>
   1386c:	cmp	r4, #0
   13870:	moveq	r4, r3
   13874:	mov	r7, r0
   13878:	mov	r8, r1
   1387c:	mov	r9, r2
   13880:	bl	1113c <__errno_location@plt>
   13884:	ldr	r3, [r4, #44]	; 0x2c
   13888:	mov	r2, r9
   1388c:	mov	r1, r8
   13890:	ldr	r6, [r0]
   13894:	str	r3, [sp, #16]
   13898:	ldr	r3, [r4, #40]	; 0x28
   1389c:	mov	r5, r0
   138a0:	str	r3, [sp, #12]
   138a4:	add	r3, r4, #8
   138a8:	str	r3, [sp, #8]
   138ac:	ldr	r3, [r4, #4]
   138b0:	mov	r0, r7
   138b4:	str	r3, [sp, #4]
   138b8:	ldr	r3, [r4]
   138bc:	str	r3, [sp]
   138c0:	mov	r3, sl
   138c4:	bl	12884 <putchar_unlocked@plt+0x1628>
   138c8:	str	r6, [r5]
   138cc:	add	sp, sp, #24
   138d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138d4:	andeq	r6, r2, r0, lsl #6
   138d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138dc:	cmp	r3, #0
   138e0:	sub	sp, sp, #44	; 0x2c
   138e4:	ldr	r4, [pc, #188]	; 139a8 <putchar_unlocked@plt+0x274c>
   138e8:	mov	r6, r2
   138ec:	movne	r4, r3
   138f0:	mov	sl, r1
   138f4:	mov	r9, r0
   138f8:	bl	1113c <__errno_location@plt>
   138fc:	ldr	r5, [r4, #4]
   13900:	add	fp, r4, #8
   13904:	cmp	r6, #0
   13908:	orreq	r5, r5, #1
   1390c:	mov	r1, #0
   13910:	mov	r2, r9
   13914:	ldr	r3, [r0]
   13918:	mov	r8, r0
   1391c:	str	r3, [sp, #28]
   13920:	ldr	r3, [r4, #44]	; 0x2c
   13924:	mov	r0, r1
   13928:	str	r3, [sp, #16]
   1392c:	ldr	r3, [r4, #40]	; 0x28
   13930:	stmib	sp, {r5, fp}
   13934:	str	r3, [sp, #12]
   13938:	ldr	r3, [r4]
   1393c:	str	r3, [sp]
   13940:	mov	r3, sl
   13944:	bl	12884 <putchar_unlocked@plt+0x1628>
   13948:	add	r1, r0, #1
   1394c:	mov	r7, r0
   13950:	mov	r0, r1
   13954:	str	r1, [sp, #36]	; 0x24
   13958:	bl	143cc <putchar_unlocked@plt+0x3170>
   1395c:	ldr	r3, [r4, #44]	; 0x2c
   13960:	mov	r2, r9
   13964:	str	r3, [sp, #16]
   13968:	ldr	r3, [r4, #40]	; 0x28
   1396c:	stmib	sp, {r5, fp}
   13970:	str	r3, [sp, #12]
   13974:	ldr	r3, [r4]
   13978:	ldr	r1, [sp, #36]	; 0x24
   1397c:	str	r3, [sp]
   13980:	mov	r3, sl
   13984:	str	r0, [sp, #32]
   13988:	bl	12884 <putchar_unlocked@plt+0x1628>
   1398c:	ldr	r3, [sp, #28]
   13990:	cmp	r6, #0
   13994:	str	r3, [r8]
   13998:	ldr	r0, [sp, #32]
   1399c:	strne	r7, [r6]
   139a0:	add	sp, sp, #44	; 0x2c
   139a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139a8:	andeq	r6, r2, r0, lsl #6
   139ac:	mov	r3, r2
   139b0:	mov	r2, #0
   139b4:	b	138d8 <putchar_unlocked@plt+0x267c>
   139b8:	push	{r4, r5, r6, r7, r8, lr}
   139bc:	mov	r6, #1
   139c0:	ldr	r4, [pc, #104]	; 13a30 <putchar_unlocked@plt+0x27d4>
   139c4:	ldr	r5, [r4]
   139c8:	add	r7, r5, #12
   139cc:	ldr	r3, [r4, #4]
   139d0:	add	r7, r7, #8
   139d4:	cmp	r6, r3
   139d8:	blt	13a20 <putchar_unlocked@plt+0x27c4>
   139dc:	ldr	r0, [r5, #4]
   139e0:	ldr	r6, [pc, #76]	; 13a34 <putchar_unlocked@plt+0x27d8>
   139e4:	cmp	r0, r6
   139e8:	beq	139fc <putchar_unlocked@plt+0x27a0>
   139ec:	bl	12480 <putchar_unlocked@plt+0x1224>
   139f0:	mov	r3, #256	; 0x100
   139f4:	str	r3, [r4, #8]
   139f8:	str	r6, [r4, #12]
   139fc:	ldr	r6, [pc, #52]	; 13a38 <putchar_unlocked@plt+0x27dc>
   13a00:	cmp	r5, r6
   13a04:	beq	13a14 <putchar_unlocked@plt+0x27b8>
   13a08:	mov	r0, r5
   13a0c:	bl	12480 <putchar_unlocked@plt+0x1224>
   13a10:	str	r6, [r4]
   13a14:	mov	r3, #1
   13a18:	str	r3, [r4, #4]
   13a1c:	pop	{r4, r5, r6, r7, r8, pc}
   13a20:	ldr	r0, [r7, #-8]
   13a24:	bl	12480 <putchar_unlocked@plt+0x1224>
   13a28:	add	r6, r6, #1
   13a2c:	b	139cc <putchar_unlocked@plt+0x2770>
   13a30:	andeq	r6, r2, r8, lsr r1
   13a34:	andeq	r6, r2, r0, lsl #4
   13a38:	andeq	r6, r2, r0, asr #2
   13a3c:	ldr	r3, [pc, #4]	; 13a48 <putchar_unlocked@plt+0x27ec>
   13a40:	mvn	r2, #0
   13a44:	b	135b8 <putchar_unlocked@plt+0x235c>
   13a48:	andeq	r6, r2, r0, lsl #6
   13a4c:	ldr	r3, [pc]	; 13a54 <putchar_unlocked@plt+0x27f8>
   13a50:	b	135b8 <putchar_unlocked@plt+0x235c>
   13a54:	andeq	r6, r2, r0, lsl #6
   13a58:	mov	r1, r0
   13a5c:	mov	r0, #0
   13a60:	b	13a3c <putchar_unlocked@plt+0x27e0>
   13a64:	mov	r2, r1
   13a68:	mov	r1, r0
   13a6c:	mov	r0, #0
   13a70:	b	13a4c <putchar_unlocked@plt+0x27f0>
   13a74:	push	{r4, r5, lr}
   13a78:	sub	sp, sp, #52	; 0x34
   13a7c:	mov	r5, r2
   13a80:	mov	r4, r0
   13a84:	mov	r0, sp
   13a88:	bl	12740 <putchar_unlocked@plt+0x14e4>
   13a8c:	mov	r3, sp
   13a90:	mvn	r2, #0
   13a94:	mov	r1, r5
   13a98:	mov	r0, r4
   13a9c:	bl	135b8 <putchar_unlocked@plt+0x235c>
   13aa0:	add	sp, sp, #52	; 0x34
   13aa4:	pop	{r4, r5, pc}
   13aa8:	push	{r4, r5, r6, lr}
   13aac:	sub	sp, sp, #48	; 0x30
   13ab0:	mov	r5, r2
   13ab4:	mov	r6, r3
   13ab8:	mov	r4, r0
   13abc:	mov	r0, sp
   13ac0:	bl	12740 <putchar_unlocked@plt+0x14e4>
   13ac4:	mov	r3, sp
   13ac8:	mov	r2, r6
   13acc:	mov	r1, r5
   13ad0:	mov	r0, r4
   13ad4:	bl	135b8 <putchar_unlocked@plt+0x235c>
   13ad8:	add	sp, sp, #48	; 0x30
   13adc:	pop	{r4, r5, r6, pc}
   13ae0:	mov	r2, r1
   13ae4:	mov	r1, r0
   13ae8:	mov	r0, #0
   13aec:	b	13a74 <putchar_unlocked@plt+0x2818>
   13af0:	mov	r3, r2
   13af4:	mov	r2, r1
   13af8:	mov	r1, r0
   13afc:	mov	r0, #0
   13b00:	b	13aa8 <putchar_unlocked@plt+0x284c>
   13b04:	push	{r4, r5, r6, lr}
   13b08:	mov	r4, r0
   13b0c:	ldr	lr, [pc, #80]	; 13b64 <putchar_unlocked@plt+0x2908>
   13b10:	mov	r5, r1
   13b14:	mov	r6, r2
   13b18:	ldm	lr!, {r0, r1, r2, r3}
   13b1c:	sub	sp, sp, #48	; 0x30
   13b20:	mov	ip, sp
   13b24:	stmia	ip!, {r0, r1, r2, r3}
   13b28:	ldm	lr!, {r0, r1, r2, r3}
   13b2c:	stmia	ip!, {r0, r1, r2, r3}
   13b30:	ldm	lr, {r0, r1, r2, r3}
   13b34:	stm	ip, {r0, r1, r2, r3}
   13b38:	mov	r1, r6
   13b3c:	mov	r2, #1
   13b40:	mov	r0, sp
   13b44:	bl	137c4 <putchar_unlocked@plt+0x2568>
   13b48:	mov	r3, sp
   13b4c:	mov	r2, r5
   13b50:	mov	r1, r4
   13b54:	mov	r0, #0
   13b58:	bl	135b8 <putchar_unlocked@plt+0x235c>
   13b5c:	add	sp, sp, #48	; 0x30
   13b60:	pop	{r4, r5, r6, pc}
   13b64:	andeq	r6, r2, r0, lsl #6
   13b68:	mov	r2, r1
   13b6c:	mvn	r1, #0
   13b70:	b	13b04 <putchar_unlocked@plt+0x28a8>
   13b74:	mov	r1, #58	; 0x3a
   13b78:	b	13b68 <putchar_unlocked@plt+0x290c>
   13b7c:	mov	r2, #58	; 0x3a
   13b80:	b	13b04 <putchar_unlocked@plt+0x28a8>
   13b84:	push	{r4, r5, lr}
   13b88:	sub	sp, sp, #100	; 0x64
   13b8c:	mov	r4, r0
   13b90:	mov	r0, sp
   13b94:	mov	r5, r2
   13b98:	bl	12740 <putchar_unlocked@plt+0x14e4>
   13b9c:	mov	ip, sp
   13ba0:	add	lr, sp, #48	; 0x30
   13ba4:	ldm	ip!, {r0, r1, r2, r3}
   13ba8:	stmia	lr!, {r0, r1, r2, r3}
   13bac:	ldm	ip!, {r0, r1, r2, r3}
   13bb0:	stmia	lr!, {r0, r1, r2, r3}
   13bb4:	ldm	ip, {r0, r1, r2, r3}
   13bb8:	stm	lr, {r0, r1, r2, r3}
   13bbc:	mov	r2, #1
   13bc0:	mov	r1, #58	; 0x3a
   13bc4:	add	r0, sp, #48	; 0x30
   13bc8:	bl	137c4 <putchar_unlocked@plt+0x2568>
   13bcc:	add	r3, sp, #48	; 0x30
   13bd0:	mvn	r2, #0
   13bd4:	mov	r1, r5
   13bd8:	mov	r0, r4
   13bdc:	bl	135b8 <putchar_unlocked@plt+0x235c>
   13be0:	add	sp, sp, #100	; 0x64
   13be4:	pop	{r4, r5, pc}
   13be8:	push	{r4, r5, r6, r7, lr}
   13bec:	mov	r4, r0
   13bf0:	ldr	lr, [pc, #84]	; 13c4c <putchar_unlocked@plt+0x29f0>
   13bf4:	mov	r6, r1
   13bf8:	mov	r7, r2
   13bfc:	mov	r5, r3
   13c00:	ldm	lr!, {r0, r1, r2, r3}
   13c04:	sub	sp, sp, #52	; 0x34
   13c08:	mov	ip, sp
   13c0c:	stmia	ip!, {r0, r1, r2, r3}
   13c10:	ldm	lr!, {r0, r1, r2, r3}
   13c14:	stmia	ip!, {r0, r1, r2, r3}
   13c18:	ldm	lr, {r0, r1, r2, r3}
   13c1c:	stm	ip, {r0, r1, r2, r3}
   13c20:	mov	r2, r7
   13c24:	mov	r1, r6
   13c28:	mov	r0, sp
   13c2c:	bl	13820 <putchar_unlocked@plt+0x25c4>
   13c30:	mov	r3, sp
   13c34:	ldr	r2, [sp, #72]	; 0x48
   13c38:	mov	r1, r5
   13c3c:	mov	r0, r4
   13c40:	bl	135b8 <putchar_unlocked@plt+0x235c>
   13c44:	add	sp, sp, #52	; 0x34
   13c48:	pop	{r4, r5, r6, r7, pc}
   13c4c:	andeq	r6, r2, r0, lsl #6
   13c50:	mvn	ip, #0
   13c54:	push	{r0, r1, r2, lr}
   13c58:	str	ip, [sp]
   13c5c:	bl	13be8 <putchar_unlocked@plt+0x298c>
   13c60:	add	sp, sp, #12
   13c64:	pop	{pc}		; (ldr pc, [sp], #4)
   13c68:	mov	r3, r2
   13c6c:	mov	r2, r1
   13c70:	mov	r1, r0
   13c74:	mov	r0, #0
   13c78:	b	13c50 <putchar_unlocked@plt+0x29f4>
   13c7c:	push	{r0, r1, r2, lr}
   13c80:	str	r3, [sp]
   13c84:	mov	r3, r2
   13c88:	mov	r2, r1
   13c8c:	mov	r1, r0
   13c90:	mov	r0, #0
   13c94:	bl	13be8 <putchar_unlocked@plt+0x298c>
   13c98:	add	sp, sp, #12
   13c9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13ca0:	ldr	r3, [pc]	; 13ca8 <putchar_unlocked@plt+0x2a4c>
   13ca4:	b	135b8 <putchar_unlocked@plt+0x235c>
   13ca8:	andeq	r6, r2, r8, asr #2
   13cac:	mov	r2, r1
   13cb0:	mov	r1, r0
   13cb4:	mov	r0, #0
   13cb8:	b	13ca0 <putchar_unlocked@plt+0x2a44>
   13cbc:	mvn	r2, #0
   13cc0:	b	13ca0 <putchar_unlocked@plt+0x2a44>
   13cc4:	mov	r1, r0
   13cc8:	mov	r0, #0
   13ccc:	b	13cbc <putchar_unlocked@plt+0x2a60>
   13cd0:	push	{r4, r5, r6, lr}
   13cd4:	mov	r5, r0
   13cd8:	mov	r0, #33	; 0x21
   13cdc:	bl	143a4 <putchar_unlocked@plt+0x3148>
   13ce0:	add	r1, r5, #44	; 0x2c
   13ce4:	mov	r2, #32
   13ce8:	mov	r5, #0
   13cec:	mov	r4, r0
   13cf0:	bl	1116c <strncpy@plt>
   13cf4:	mov	r0, r4
   13cf8:	strb	r5, [r4, #32]
   13cfc:	bl	11124 <strlen@plt>
   13d00:	add	r0, r4, r0
   13d04:	cmp	r4, r0
   13d08:	bcs	13d18 <putchar_unlocked@plt+0x2abc>
   13d0c:	ldrb	r3, [r0, #-1]!
   13d10:	cmp	r3, #32
   13d14:	beq	13d20 <putchar_unlocked@plt+0x2ac4>
   13d18:	mov	r0, r4
   13d1c:	pop	{r4, r5, r6, pc}
   13d20:	strb	r5, [r0]
   13d24:	b	13d04 <putchar_unlocked@plt+0x2aa8>
   13d28:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   13d2c:	mov	r4, #0
   13d30:	mov	r8, r3
   13d34:	mov	r9, r1
   13d38:	mov	sl, r2
   13d3c:	str	r4, [sp, #12]
   13d40:	bl	10f80 <utmpxname@plt>
   13d44:	bl	1101c <setutxent@plt>
   13d48:	lsr	r6, r8, #1
   13d4c:	eor	r6, r6, #1
   13d50:	mov	r7, r4
   13d54:	and	r6, r6, #1
   13d58:	bl	11250 <getutxent@plt>
   13d5c:	subs	r5, r0, #0
   13d60:	bne	13d7c <putchar_unlocked@plt+0x2b20>
   13d64:	bl	111b4 <endutxent@plt>
   13d68:	str	r4, [r9]
   13d6c:	mov	r0, r5
   13d70:	str	r7, [sl]
   13d74:	add	sp, sp, #16
   13d78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d7c:	ldrb	r3, [r5, #44]	; 0x2c
   13d80:	cmp	r3, #0
   13d84:	ldrshne	r3, [r5]
   13d88:	subne	r3, r3, #7
   13d8c:	clzne	r3, r3
   13d90:	lsrne	r3, r3, #5
   13d94:	orrs	r2, r6, r3
   13d98:	beq	13d58 <putchar_unlocked@plt+0x2afc>
   13d9c:	tst	r8, r3
   13da0:	beq	13dd0 <putchar_unlocked@plt+0x2b74>
   13da4:	ldr	r0, [r5, #4]
   13da8:	cmp	r0, #0
   13dac:	ble	13dd0 <putchar_unlocked@plt+0x2b74>
   13db0:	mov	r1, #0
   13db4:	bl	11100 <kill@plt>
   13db8:	cmp	r0, #0
   13dbc:	bge	13dd0 <putchar_unlocked@plt+0x2b74>
   13dc0:	bl	1113c <__errno_location@plt>
   13dc4:	ldr	r3, [r0]
   13dc8:	cmp	r3, #3
   13dcc:	beq	13d58 <putchar_unlocked@plt+0x2afc>
   13dd0:	ldr	r3, [sp, #12]
   13dd4:	cmp	r4, r3
   13dd8:	bne	13dfc <putchar_unlocked@plt+0x2ba0>
   13ddc:	mov	r3, #384	; 0x180
   13de0:	str	r3, [sp]
   13de4:	mov	r0, r7
   13de8:	mvn	r3, #0
   13dec:	mov	r2, #1
   13df0:	add	r1, sp, #12
   13df4:	bl	14514 <putchar_unlocked@plt+0x32b8>
   13df8:	mov	r7, r0
   13dfc:	mov	r2, #384	; 0x180
   13e00:	mov	r1, r5
   13e04:	mla	r0, r2, r4, r7
   13e08:	bl	10fb0 <memcpy@plt>
   13e0c:	add	r4, r4, #1
   13e10:	b	13d58 <putchar_unlocked@plt+0x2afc>
   13e14:	push	{r4, r5, r6, lr}
   13e18:	mov	r5, r1
   13e1c:	mov	r1, #0
   13e20:	mov	r4, r2
   13e24:	bl	111c0 <setlocale@plt>
   13e28:	subs	r6, r0, #0
   13e2c:	bne	13e40 <putchar_unlocked@plt+0x2be4>
   13e30:	cmp	r4, #0
   13e34:	strbne	r6, [r5]
   13e38:	mov	r0, #22
   13e3c:	pop	{r4, r5, r6, pc}
   13e40:	bl	11124 <strlen@plt>
   13e44:	cmp	r4, r0
   13e48:	bls	13e64 <putchar_unlocked@plt+0x2c08>
   13e4c:	add	r2, r0, #1
   13e50:	mov	r1, r6
   13e54:	mov	r0, r5
   13e58:	bl	10fb0 <memcpy@plt>
   13e5c:	mov	r0, #0
   13e60:	pop	{r4, r5, r6, pc}
   13e64:	cmp	r4, #0
   13e68:	beq	13e88 <putchar_unlocked@plt+0x2c2c>
   13e6c:	sub	r4, r4, #1
   13e70:	mov	r2, r4
   13e74:	mov	r1, r6
   13e78:	mov	r0, r5
   13e7c:	bl	10fb0 <memcpy@plt>
   13e80:	mov	r3, #0
   13e84:	strb	r3, [r5, r4]
   13e88:	mov	r0, #34	; 0x22
   13e8c:	pop	{r4, r5, r6, pc}
   13e90:	mov	r1, #0
   13e94:	b	111c0 <setlocale@plt>
   13e98:	push	{r4, r5, r6, lr}
   13e9c:	sub	sp, sp, #32
   13ea0:	cmp	r1, #0
   13ea4:	mov	r5, r0
   13ea8:	ldr	r4, [sp, #48]	; 0x30
   13eac:	ldr	r6, [sp, #52]	; 0x34
   13eb0:	beq	13f64 <putchar_unlocked@plt+0x2d08>
   13eb4:	stm	sp, {r2, r3}
   13eb8:	mov	r3, r1
   13ebc:	ldr	r2, [pc, #860]	; 14220 <putchar_unlocked@plt+0x2fc4>
   13ec0:	mov	r1, #1
   13ec4:	bl	11190 <__fprintf_chk@plt>
   13ec8:	mov	r2, #5
   13ecc:	ldr	r1, [pc, #848]	; 14224 <putchar_unlocked@plt+0x2fc8>
   13ed0:	mov	r0, #0
   13ed4:	bl	11004 <dcgettext@plt>
   13ed8:	ldr	r3, [pc, #840]	; 14228 <putchar_unlocked@plt+0x2fcc>
   13edc:	ldr	r2, [pc, #840]	; 1422c <putchar_unlocked@plt+0x2fd0>
   13ee0:	str	r3, [sp]
   13ee4:	mov	r1, #1
   13ee8:	mov	r3, r0
   13eec:	mov	r0, r5
   13ef0:	bl	11190 <__fprintf_chk@plt>
   13ef4:	mov	r1, r5
   13ef8:	mov	r0, #10
   13efc:	bl	10ff8 <fputc_unlocked@plt>
   13f00:	mov	r2, #5
   13f04:	ldr	r1, [pc, #804]	; 14230 <putchar_unlocked@plt+0x2fd4>
   13f08:	mov	r0, #0
   13f0c:	bl	11004 <dcgettext@plt>
   13f10:	mov	r1, #1
   13f14:	ldr	r3, [pc, #792]	; 14234 <putchar_unlocked@plt+0x2fd8>
   13f18:	mov	r2, r0
   13f1c:	mov	r0, r5
   13f20:	bl	11190 <__fprintf_chk@plt>
   13f24:	mov	r1, r5
   13f28:	mov	r0, #10
   13f2c:	bl	10ff8 <fputc_unlocked@plt>
   13f30:	cmp	r6, #9
   13f34:	ldrls	pc, [pc, r6, lsl #2]
   13f38:	b	14214 <putchar_unlocked@plt+0x2fb8>
   13f3c:	andeq	r4, r1, r4, asr r0
   13f40:	andeq	r3, r1, ip, ror pc
   13f44:	andeq	r3, r1, r8, lsr #31
   13f48:	ldrdeq	r3, [r1], -ip
   13f4c:	andeq	r4, r1, r8, lsl r0
   13f50:	andeq	r4, r1, ip, asr r0
   13f54:	andeq	r4, r1, r4, lsr #1
   13f58:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f5c:	andeq	r4, r1, ip, asr #2
   13f60:	andeq	r4, r1, ip, lsr #3
   13f64:	str	r3, [sp]
   13f68:	mov	r1, #1
   13f6c:	mov	r3, r2
   13f70:	ldr	r2, [pc, #704]	; 14238 <putchar_unlocked@plt+0x2fdc>
   13f74:	bl	11190 <__fprintf_chk@plt>
   13f78:	b	13ec8 <putchar_unlocked@plt+0x2c6c>
   13f7c:	mov	r2, #5
   13f80:	ldr	r1, [pc, #692]	; 1423c <putchar_unlocked@plt+0x2fe0>
   13f84:	mov	r0, #0
   13f88:	bl	11004 <dcgettext@plt>
   13f8c:	ldr	r3, [r4]
   13f90:	mov	r1, #1
   13f94:	mov	r2, r0
   13f98:	mov	r0, r5
   13f9c:	add	sp, sp, #32
   13fa0:	pop	{r4, r5, r6, lr}
   13fa4:	b	11190 <__fprintf_chk@plt>
   13fa8:	mov	r2, #5
   13fac:	ldr	r1, [pc, #652]	; 14240 <putchar_unlocked@plt+0x2fe4>
   13fb0:	mov	r0, #0
   13fb4:	bl	11004 <dcgettext@plt>
   13fb8:	ldr	r3, [r4, #4]
   13fbc:	mov	r1, #1
   13fc0:	str	r3, [sp, #48]	; 0x30
   13fc4:	ldr	r3, [r4]
   13fc8:	mov	r2, r0
   13fcc:	mov	r0, r5
   13fd0:	add	sp, sp, #32
   13fd4:	pop	{r4, r5, r6, lr}
   13fd8:	b	11190 <__fprintf_chk@plt>
   13fdc:	mov	r2, #5
   13fe0:	ldr	r1, [pc, #604]	; 14244 <putchar_unlocked@plt+0x2fe8>
   13fe4:	mov	r0, #0
   13fe8:	bl	11004 <dcgettext@plt>
   13fec:	ldr	r3, [r4, #8]
   13ff0:	mov	r1, #1
   13ff4:	str	r3, [sp, #52]	; 0x34
   13ff8:	ldr	r3, [r4, #4]
   13ffc:	str	r3, [sp, #48]	; 0x30
   14000:	ldr	r3, [r4]
   14004:	mov	r2, r0
   14008:	mov	r0, r5
   1400c:	add	sp, sp, #32
   14010:	pop	{r4, r5, r6, lr}
   14014:	b	11190 <__fprintf_chk@plt>
   14018:	mov	r2, #5
   1401c:	ldr	r1, [pc, #548]	; 14248 <putchar_unlocked@plt+0x2fec>
   14020:	mov	r0, #0
   14024:	bl	11004 <dcgettext@plt>
   14028:	ldr	r3, [r4, #12]
   1402c:	mov	r1, #1
   14030:	str	r3, [sp, #8]
   14034:	ldr	r3, [r4, #8]
   14038:	str	r3, [sp, #4]
   1403c:	ldr	r3, [r4, #4]
   14040:	str	r3, [sp]
   14044:	ldr	r3, [r4]
   14048:	mov	r2, r0
   1404c:	mov	r0, r5
   14050:	bl	11190 <__fprintf_chk@plt>
   14054:	add	sp, sp, #32
   14058:	pop	{r4, r5, r6, pc}
   1405c:	mov	r2, #5
   14060:	ldr	r1, [pc, #484]	; 1424c <putchar_unlocked@plt+0x2ff0>
   14064:	mov	r0, #0
   14068:	bl	11004 <dcgettext@plt>
   1406c:	ldr	r3, [r4, #16]
   14070:	mov	r1, #1
   14074:	str	r3, [sp, #12]
   14078:	ldr	r3, [r4, #12]
   1407c:	str	r3, [sp, #8]
   14080:	ldr	r3, [r4, #8]
   14084:	str	r3, [sp, #4]
   14088:	ldr	r3, [r4, #4]
   1408c:	str	r3, [sp]
   14090:	ldr	r3, [r4]
   14094:	mov	r2, r0
   14098:	mov	r0, r5
   1409c:	bl	11190 <__fprintf_chk@plt>
   140a0:	b	14054 <putchar_unlocked@plt+0x2df8>
   140a4:	mov	r2, #5
   140a8:	ldr	r1, [pc, #416]	; 14250 <putchar_unlocked@plt+0x2ff4>
   140ac:	mov	r0, #0
   140b0:	bl	11004 <dcgettext@plt>
   140b4:	ldr	r3, [r4, #20]
   140b8:	mov	r1, #1
   140bc:	str	r3, [sp, #16]
   140c0:	ldr	r3, [r4, #16]
   140c4:	str	r3, [sp, #12]
   140c8:	ldr	r3, [r4, #12]
   140cc:	str	r3, [sp, #8]
   140d0:	ldr	r3, [r4, #8]
   140d4:	str	r3, [sp, #4]
   140d8:	ldr	r3, [r4, #4]
   140dc:	str	r3, [sp]
   140e0:	ldr	r3, [r4]
   140e4:	mov	r2, r0
   140e8:	mov	r0, r5
   140ec:	bl	11190 <__fprintf_chk@plt>
   140f0:	b	14054 <putchar_unlocked@plt+0x2df8>
   140f4:	mov	r2, #5
   140f8:	ldr	r1, [pc, #340]	; 14254 <putchar_unlocked@plt+0x2ff8>
   140fc:	mov	r0, #0
   14100:	bl	11004 <dcgettext@plt>
   14104:	ldr	r3, [r4, #24]
   14108:	mov	r1, #1
   1410c:	str	r3, [sp, #20]
   14110:	ldr	r3, [r4, #20]
   14114:	str	r3, [sp, #16]
   14118:	ldr	r3, [r4, #16]
   1411c:	str	r3, [sp, #12]
   14120:	ldr	r3, [r4, #12]
   14124:	str	r3, [sp, #8]
   14128:	ldr	r3, [r4, #8]
   1412c:	str	r3, [sp, #4]
   14130:	ldr	r3, [r4, #4]
   14134:	str	r3, [sp]
   14138:	ldr	r3, [r4]
   1413c:	mov	r2, r0
   14140:	mov	r0, r5
   14144:	bl	11190 <__fprintf_chk@plt>
   14148:	b	14054 <putchar_unlocked@plt+0x2df8>
   1414c:	mov	r2, #5
   14150:	ldr	r1, [pc, #256]	; 14258 <putchar_unlocked@plt+0x2ffc>
   14154:	mov	r0, #0
   14158:	bl	11004 <dcgettext@plt>
   1415c:	ldr	r3, [r4, #28]
   14160:	mov	r1, #1
   14164:	str	r3, [sp, #24]
   14168:	ldr	r3, [r4, #24]
   1416c:	str	r3, [sp, #20]
   14170:	ldr	r3, [r4, #20]
   14174:	str	r3, [sp, #16]
   14178:	ldr	r3, [r4, #16]
   1417c:	str	r3, [sp, #12]
   14180:	ldr	r3, [r4, #12]
   14184:	str	r3, [sp, #8]
   14188:	ldr	r3, [r4, #8]
   1418c:	str	r3, [sp, #4]
   14190:	ldr	r3, [r4, #4]
   14194:	str	r3, [sp]
   14198:	ldr	r3, [r4]
   1419c:	mov	r2, r0
   141a0:	mov	r0, r5
   141a4:	bl	11190 <__fprintf_chk@plt>
   141a8:	b	14054 <putchar_unlocked@plt+0x2df8>
   141ac:	ldr	r1, [pc, #168]	; 1425c <putchar_unlocked@plt+0x3000>
   141b0:	mov	r2, #5
   141b4:	mov	r0, #0
   141b8:	bl	11004 <dcgettext@plt>
   141bc:	ldr	r3, [r4, #32]
   141c0:	mov	r1, #1
   141c4:	str	r3, [sp, #28]
   141c8:	ldr	r3, [r4, #28]
   141cc:	str	r3, [sp, #24]
   141d0:	ldr	r3, [r4, #24]
   141d4:	str	r3, [sp, #20]
   141d8:	ldr	r3, [r4, #20]
   141dc:	str	r3, [sp, #16]
   141e0:	ldr	r3, [r4, #16]
   141e4:	str	r3, [sp, #12]
   141e8:	ldr	r3, [r4, #12]
   141ec:	str	r3, [sp, #8]
   141f0:	ldr	r3, [r4, #8]
   141f4:	str	r3, [sp, #4]
   141f8:	ldr	r3, [r4, #4]
   141fc:	str	r3, [sp]
   14200:	ldr	r3, [r4]
   14204:	mov	r2, r0
   14208:	mov	r0, r5
   1420c:	bl	11190 <__fprintf_chk@plt>
   14210:	b	14054 <putchar_unlocked@plt+0x2df8>
   14214:	mov	r2, #5
   14218:	ldr	r1, [pc, #64]	; 14260 <putchar_unlocked@plt+0x3004>
   1421c:	b	141b4 <putchar_unlocked@plt+0x2f58>
   14220:	muleq	r1, fp, r9
   14224:	andeq	r5, r1, lr, lsr #19
   14228:	andeq	r0, r0, r6, ror #15
   1422c:	andeq	r5, r1, ip, ror ip
   14230:			; <UNDEFINED> instruction: 0x000159b2
   14234:	andeq	r5, r1, sp, asr sl
   14238:	andeq	r5, r1, r7, lsr #19
   1423c:	andeq	r5, r1, pc, ror sl
   14240:	andeq	r5, r1, pc, lsl #21
   14244:	andeq	r5, r1, r6, lsr #21
   14248:	andeq	r5, r1, r2, asr #21
   1424c:	andeq	r5, r1, r2, ror #21
   14250:	andeq	r5, r1, r6, lsl #22
   14254:	andeq	r5, r1, lr, lsr #22
   14258:	andeq	r5, r1, sl, asr fp
   1425c:	andeq	r5, r1, sl, lsl #23
   14260:			; <UNDEFINED> instruction: 0x00015bbe
   14264:	push	{r0, r1, r4, lr}
   14268:	mov	ip, #0
   1426c:	ldr	lr, [sp, #16]
   14270:	ldr	r4, [lr, ip, lsl #2]
   14274:	cmp	r4, #0
   14278:	bne	14290 <putchar_unlocked@plt+0x3034>
   1427c:	str	ip, [sp, #4]
   14280:	str	lr, [sp]
   14284:	bl	13e98 <putchar_unlocked@plt+0x2c3c>
   14288:	add	sp, sp, #8
   1428c:	pop	{r4, pc}
   14290:	add	ip, ip, #1
   14294:	b	14270 <putchar_unlocked@plt+0x3014>
   14298:	push	{r4, r5, lr}
   1429c:	sub	sp, sp, #52	; 0x34
   142a0:	mov	ip, #0
   142a4:	ldr	r5, [sp, #64]	; 0x40
   142a8:	add	lr, sp, #8
   142ac:	ldr	r4, [r5, ip, lsl #2]
   142b0:	cmp	r4, #0
   142b4:	str	r4, [lr, ip, lsl #2]
   142b8:	beq	142c8 <putchar_unlocked@plt+0x306c>
   142bc:	add	ip, ip, #1
   142c0:	cmp	ip, #10
   142c4:	bne	142ac <putchar_unlocked@plt+0x3050>
   142c8:	str	ip, [sp, #4]
   142cc:	str	lr, [sp]
   142d0:	bl	13e98 <putchar_unlocked@plt+0x2c3c>
   142d4:	add	sp, sp, #52	; 0x34
   142d8:	pop	{r4, r5, pc}
   142dc:	push	{r3}		; (str r3, [sp, #-4]!)
   142e0:	push	{r0, r1, r2, r3, lr}
   142e4:	add	r3, sp, #24
   142e8:	str	r3, [sp, #12]
   142ec:	str	r3, [sp]
   142f0:	ldr	r3, [sp, #20]
   142f4:	bl	14298 <putchar_unlocked@plt+0x303c>
   142f8:	add	sp, sp, #16
   142fc:	pop	{lr}		; (ldr lr, [sp], #4)
   14300:	add	sp, sp, #4
   14304:	bx	lr
   14308:	ldr	r3, [pc, #116]	; 14384 <putchar_unlocked@plt+0x3128>
   1430c:	push	{r4, lr}
   14310:	mov	r0, #10
   14314:	ldr	r1, [r3]
   14318:	bl	10ff8 <fputc_unlocked@plt>
   1431c:	mov	r2, #5
   14320:	ldr	r1, [pc, #96]	; 14388 <putchar_unlocked@plt+0x312c>
   14324:	mov	r0, #0
   14328:	bl	11004 <dcgettext@plt>
   1432c:	ldr	r2, [pc, #88]	; 1438c <putchar_unlocked@plt+0x3130>
   14330:	mov	r1, r0
   14334:	mov	r0, #1
   14338:	bl	11178 <__printf_chk@plt>
   1433c:	mov	r2, #5
   14340:	ldr	r1, [pc, #72]	; 14390 <putchar_unlocked@plt+0x3134>
   14344:	mov	r0, #0
   14348:	bl	11004 <dcgettext@plt>
   1434c:	ldr	r3, [pc, #64]	; 14394 <putchar_unlocked@plt+0x3138>
   14350:	ldr	r2, [pc, #64]	; 14398 <putchar_unlocked@plt+0x313c>
   14354:	mov	r1, r0
   14358:	mov	r0, #1
   1435c:	bl	11178 <__printf_chk@plt>
   14360:	mov	r2, #5
   14364:	ldr	r1, [pc, #48]	; 1439c <putchar_unlocked@plt+0x3140>
   14368:	mov	r0, #0
   1436c:	bl	11004 <dcgettext@plt>
   14370:	ldr	r2, [pc, #40]	; 143a0 <putchar_unlocked@plt+0x3144>
   14374:	pop	{r4, lr}
   14378:	mov	r1, r0
   1437c:	mov	r0, #1
   14380:	b	11178 <__printf_chk@plt>
   14384:	andeq	r6, r2, ip, lsl #3
   14388:	strdeq	r5, [r1], -sl
   1438c:	andeq	r5, r1, lr, lsl #24
   14390:	andeq	r5, r1, r4, lsr #24
   14394:	andeq	r5, r1, r3, asr r6
   14398:	andeq	r5, r1, fp, ror r6
   1439c:	andeq	r5, r1, r8, lsr ip
   143a0:	andeq	r5, r1, pc, asr ip
   143a4:	push	{r4, lr}
   143a8:	bl	148c0 <putchar_unlocked@plt+0x3664>
   143ac:	cmp	r0, #0
   143b0:	popne	{r4, pc}
   143b4:	bl	14838 <putchar_unlocked@plt+0x35dc>
   143b8:	push	{r4, lr}
   143bc:	bl	148c0 <putchar_unlocked@plt+0x3664>
   143c0:	cmp	r0, #0
   143c4:	popne	{r4, pc}
   143c8:	bl	14838 <putchar_unlocked@plt+0x35dc>
   143cc:	b	143a4 <putchar_unlocked@plt+0x3148>
   143d0:	push	{r4, r5, r6, lr}
   143d4:	mov	r5, r0
   143d8:	mov	r4, r1
   143dc:	bl	14900 <putchar_unlocked@plt+0x36a4>
   143e0:	cmp	r0, #0
   143e4:	popne	{r4, r5, r6, pc}
   143e8:	adds	r4, r4, #0
   143ec:	movne	r4, #1
   143f0:	cmp	r5, #0
   143f4:	orreq	r4, r4, #1
   143f8:	cmp	r4, #0
   143fc:	popeq	{r4, r5, r6, pc}
   14400:	bl	14838 <putchar_unlocked@plt+0x35dc>
   14404:	push	{r4, lr}
   14408:	cmp	r1, #0
   1440c:	orreq	r1, r1, #1
   14410:	bl	14900 <putchar_unlocked@plt+0x36a4>
   14414:	cmp	r0, #0
   14418:	popne	{r4, pc}
   1441c:	bl	14838 <putchar_unlocked@plt+0x35dc>
   14420:	push	{r4, r5, r6, lr}
   14424:	mov	r6, r0
   14428:	mov	r5, r1
   1442c:	mov	r4, r2
   14430:	bl	14a50 <putchar_unlocked@plt+0x37f4>
   14434:	cmp	r0, #0
   14438:	popne	{r4, r5, r6, pc}
   1443c:	cmp	r6, #0
   14440:	beq	14450 <putchar_unlocked@plt+0x31f4>
   14444:	cmp	r5, #0
   14448:	cmpne	r4, #0
   1444c:	popeq	{r4, r5, r6, pc}
   14450:	bl	14838 <putchar_unlocked@plt+0x35dc>
   14454:	b	14420 <putchar_unlocked@plt+0x31c4>
   14458:	cmp	r2, #0
   1445c:	cmpne	r1, #0
   14460:	moveq	r2, #1
   14464:	moveq	r1, r2
   14468:	push	{r4, lr}
   1446c:	bl	14a50 <putchar_unlocked@plt+0x37f4>
   14470:	cmp	r0, #0
   14474:	popne	{r4, pc}
   14478:	bl	14838 <putchar_unlocked@plt+0x35dc>
   1447c:	mov	r2, r1
   14480:	mov	r1, r0
   14484:	mov	r0, #0
   14488:	b	14420 <putchar_unlocked@plt+0x31c4>
   1448c:	mov	r2, r1
   14490:	mov	r1, r0
   14494:	mov	r0, #0
   14498:	b	14458 <putchar_unlocked@plt+0x31fc>
   1449c:	push	{r4, r5, r6, r7, r8, lr}
   144a0:	subs	r7, r0, #0
   144a4:	mov	r5, r1
   144a8:	mov	r6, r2
   144ac:	ldr	r4, [r1]
   144b0:	bne	144ec <putchar_unlocked@plt+0x3290>
   144b4:	cmp	r4, #0
   144b8:	bne	144d4 <putchar_unlocked@plt+0x3278>
   144bc:	mov	r1, r2
   144c0:	mov	r0, #64	; 0x40
   144c4:	bl	14a9c <putchar_unlocked@plt+0x3840>
   144c8:	cmp	r0, #0
   144cc:	movne	r4, r0
   144d0:	addeq	r4, r0, #1
   144d4:	mov	r2, r6
   144d8:	mov	r1, r4
   144dc:	mov	r0, r7
   144e0:	bl	14420 <putchar_unlocked@plt+0x31c4>
   144e4:	str	r4, [r5]
   144e8:	pop	{r4, r5, r6, r7, r8, pc}
   144ec:	lsr	r2, r4, #1
   144f0:	add	r3, r2, #1
   144f4:	mvn	r3, r3
   144f8:	cmp	r4, r3
   144fc:	addls	r4, r4, #1
   14500:	addls	r4, r4, r2
   14504:	bls	144d4 <putchar_unlocked@plt+0x3278>
   14508:	bl	14838 <putchar_unlocked@plt+0x35dc>
   1450c:	mov	r2, #1
   14510:	b	1449c <putchar_unlocked@plt+0x3240>
   14514:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14518:	mov	sl, r0
   1451c:	ldr	r8, [r1]
   14520:	mov	fp, r1
   14524:	mov	r5, r2
   14528:	asrs	r4, r8, #1
   1452c:	mov	r9, r3
   14530:	ldr	r7, [sp, #48]	; 0x30
   14534:	bpl	145d0 <putchar_unlocked@plt+0x3374>
   14538:	rsb	r2, r4, #-2147483648	; 0x80000000
   1453c:	cmp	r8, r2
   14540:	movge	r2, #0
   14544:	movlt	r2, #1
   14548:	mvn	r3, r9
   1454c:	cmp	r2, #0
   14550:	lsr	r3, r3, #31
   14554:	addeq	r4, r4, r8
   14558:	mvnne	r4, #-2147483648	; 0x80000000
   1455c:	mov	r0, r3
   14560:	cmp	r9, r4
   14564:	movge	r0, #0
   14568:	andlt	r0, r0, #1
   1456c:	cmp	r0, #0
   14570:	str	r3, [sp, #4]
   14574:	bne	14744 <putchar_unlocked@plt+0x34e8>
   14578:	cmp	r7, #0
   1457c:	bge	14690 <putchar_unlocked@plt+0x3434>
   14580:	cmp	r4, #0
   14584:	bge	145e8 <putchar_unlocked@plt+0x338c>
   14588:	mov	r1, r7
   1458c:	mvn	r0, #-2147483648	; 0x80000000
   14590:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   14594:	cmp	r0, r4
   14598:	movle	r0, #0
   1459c:	movgt	r0, #1
   145a0:	cmp	r0, #0
   145a4:	mvnne	r6, #-2147483648	; 0x80000000
   145a8:	beq	145f8 <putchar_unlocked@plt+0x339c>
   145ac:	mov	r1, r7
   145b0:	mov	r0, r6
   145b4:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   145b8:	mov	r1, r7
   145bc:	mov	r4, r0
   145c0:	mov	r0, r6
   145c4:	bl	14ec8 <putchar_unlocked@plt+0x3c6c>
   145c8:	sub	r1, r6, r1
   145cc:	b	14608 <putchar_unlocked@plt+0x33ac>
   145d0:	mvn	r2, #-2147483648	; 0x80000000
   145d4:	sub	r2, r2, r4
   145d8:	cmp	r8, r2
   145dc:	movle	r2, #0
   145e0:	movgt	r2, #1
   145e4:	b	14548 <putchar_unlocked@plt+0x32ec>
   145e8:	cmn	r7, #1
   145ec:	movne	r1, r7
   145f0:	movne	r0, #-2147483648	; 0x80000000
   145f4:	bne	1475c <putchar_unlocked@plt+0x3500>
   145f8:	mul	r1, r7, r4
   145fc:	cmp	r1, #63	; 0x3f
   14600:	movle	r6, #64	; 0x40
   14604:	ble	145ac <putchar_unlocked@plt+0x3350>
   14608:	cmp	sl, #0
   1460c:	sub	r2, r4, r8
   14610:	streq	sl, [fp]
   14614:	cmp	r2, r5
   14618:	bge	146ec <putchar_unlocked@plt+0x3490>
   1461c:	cmp	r5, #0
   14620:	bge	146b8 <putchar_unlocked@plt+0x345c>
   14624:	rsb	r2, r5, #-2147483648	; 0x80000000
   14628:	cmp	r8, r2
   1462c:	movge	r2, #0
   14630:	movlt	r2, #1
   14634:	cmp	r2, #0
   14638:	bne	1468c <putchar_unlocked@plt+0x3430>
   1463c:	ldr	r0, [sp, #4]
   14640:	add	r5, r8, r5
   14644:	cmp	r9, r5
   14648:	movge	r0, #0
   1464c:	andlt	r0, r0, #1
   14650:	cmp	r0, #0
   14654:	mov	r4, r5
   14658:	bne	1468c <putchar_unlocked@plt+0x3430>
   1465c:	cmp	r7, #0
   14660:	bge	14700 <putchar_unlocked@plt+0x34a4>
   14664:	cmp	r5, #0
   14668:	bge	146d8 <putchar_unlocked@plt+0x347c>
   1466c:	mov	r1, r7
   14670:	mvn	r0, #-2147483648	; 0x80000000
   14674:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   14678:	cmp	r5, r0
   1467c:	movge	r0, #0
   14680:	movlt	r0, #1
   14684:	cmp	r0, #0
   14688:	beq	146e8 <putchar_unlocked@plt+0x348c>
   1468c:	bl	14838 <putchar_unlocked@plt+0x35dc>
   14690:	beq	145f8 <putchar_unlocked@plt+0x339c>
   14694:	cmp	r4, #0
   14698:	bge	14754 <putchar_unlocked@plt+0x34f8>
   1469c:	cmn	r4, #1
   146a0:	beq	145f8 <putchar_unlocked@plt+0x339c>
   146a4:	mov	r1, r4
   146a8:	mov	r0, #-2147483648	; 0x80000000
   146ac:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   146b0:	cmp	r7, r0
   146b4:	b	14598 <putchar_unlocked@plt+0x333c>
   146b8:	cmp	r8, #0
   146bc:	blt	1463c <putchar_unlocked@plt+0x33e0>
   146c0:	mvn	r2, #-2147483648	; 0x80000000
   146c4:	sub	r2, r2, r5
   146c8:	cmp	r8, r2
   146cc:	movle	r2, #0
   146d0:	movgt	r2, #1
   146d4:	b	14634 <putchar_unlocked@plt+0x33d8>
   146d8:	cmn	r7, #1
   146dc:	movne	r1, r7
   146e0:	movne	r0, #-2147483648	; 0x80000000
   146e4:	bne	14738 <putchar_unlocked@plt+0x34dc>
   146e8:	mul	r1, r5, r7
   146ec:	mov	r0, sl
   146f0:	bl	143d0 <putchar_unlocked@plt+0x3174>
   146f4:	str	r4, [fp]
   146f8:	add	sp, sp, #12
   146fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14700:	beq	146e8 <putchar_unlocked@plt+0x348c>
   14704:	cmp	r5, #0
   14708:	movge	r1, r7
   1470c:	mvnge	r0, #-2147483648	; 0x80000000
   14710:	bge	14738 <putchar_unlocked@plt+0x34dc>
   14714:	cmn	r5, #1
   14718:	beq	146e8 <putchar_unlocked@plt+0x348c>
   1471c:	mov	r1, r5
   14720:	mov	r0, #-2147483648	; 0x80000000
   14724:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   14728:	cmp	r7, r0
   1472c:	movle	r0, #0
   14730:	movgt	r0, #1
   14734:	b	14684 <putchar_unlocked@plt+0x3428>
   14738:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   1473c:	cmp	r5, r0
   14740:	b	1472c <putchar_unlocked@plt+0x34d0>
   14744:	cmp	r7, #0
   14748:	mov	r4, r9
   1474c:	blt	145e8 <putchar_unlocked@plt+0x338c>
   14750:	beq	145f8 <putchar_unlocked@plt+0x339c>
   14754:	mov	r1, r7
   14758:	mvn	r0, #-2147483648	; 0x80000000
   1475c:	bl	14ca8 <putchar_unlocked@plt+0x3a4c>
   14760:	cmp	r0, r4
   14764:	movge	r0, #0
   14768:	movlt	r0, #1
   1476c:	b	145a0 <putchar_unlocked@plt+0x3344>
   14770:	push	{r4, lr}
   14774:	bl	14878 <putchar_unlocked@plt+0x361c>
   14778:	cmp	r0, #0
   1477c:	popne	{r4, pc}
   14780:	bl	14838 <putchar_unlocked@plt+0x35dc>
   14784:	mov	r1, #1
   14788:	b	14770 <putchar_unlocked@plt+0x3514>
   1478c:	push	{r4, lr}
   14790:	bl	14878 <putchar_unlocked@plt+0x361c>
   14794:	cmp	r0, #0
   14798:	popne	{r4, pc}
   1479c:	bl	14838 <putchar_unlocked@plt+0x35dc>
   147a0:	mov	r1, #1
   147a4:	b	1478c <putchar_unlocked@plt+0x3530>
   147a8:	push	{r4, r5, r6, lr}
   147ac:	mov	r4, r1
   147b0:	mov	r5, r0
   147b4:	mov	r0, r1
   147b8:	bl	143a4 <putchar_unlocked@plt+0x3148>
   147bc:	mov	r2, r4
   147c0:	mov	r1, r5
   147c4:	pop	{r4, r5, r6, lr}
   147c8:	b	10fb0 <memcpy@plt>
   147cc:	push	{r4, r5, r6, lr}
   147d0:	mov	r4, r1
   147d4:	mov	r5, r0
   147d8:	mov	r0, r1
   147dc:	bl	143b8 <putchar_unlocked@plt+0x315c>
   147e0:	mov	r2, r4
   147e4:	mov	r1, r5
   147e8:	pop	{r4, r5, r6, lr}
   147ec:	b	10fb0 <memcpy@plt>
   147f0:	push	{r4, r5, r6, lr}
   147f4:	mov	r5, r0
   147f8:	add	r0, r1, #1
   147fc:	mov	r4, r1
   14800:	bl	143b8 <putchar_unlocked@plt+0x315c>
   14804:	mov	r2, #0
   14808:	mov	r1, r5
   1480c:	strb	r2, [r0, r4]
   14810:	mov	r2, r4
   14814:	pop	{r4, r5, r6, lr}
   14818:	b	10fb0 <memcpy@plt>
   1481c:	push	{r4, lr}
   14820:	mov	r4, r0
   14824:	bl	11124 <strlen@plt>
   14828:	add	r1, r0, #1
   1482c:	mov	r0, r4
   14830:	pop	{r4, lr}
   14834:	b	147a8 <putchar_unlocked@plt+0x354c>
   14838:	ldr	r3, [pc, #44]	; 1486c <putchar_unlocked@plt+0x3610>
   1483c:	push	{r4, lr}
   14840:	mov	r2, #5
   14844:	ldr	r1, [pc, #36]	; 14870 <putchar_unlocked@plt+0x3614>
   14848:	mov	r0, #0
   1484c:	ldr	r4, [r3]
   14850:	bl	11004 <dcgettext@plt>
   14854:	ldr	r2, [pc, #24]	; 14874 <putchar_unlocked@plt+0x3618>
   14858:	mov	r1, #0
   1485c:	mov	r3, r0
   14860:	mov	r0, r4
   14864:	bl	11094 <error@plt>
   14868:	bl	11244 <abort@plt>
   1486c:	andeq	r6, r2, r4, lsr r1
   14870:	andeq	r5, r1, fp, lsr #25
   14874:	muleq	r1, r3, r8
   14878:	cmp	r1, #0
   1487c:	cmpne	r0, #0
   14880:	moveq	r1, #1
   14884:	moveq	r0, r1
   14888:	umull	r2, r3, r0, r1
   1488c:	adds	r3, r3, #0
   14890:	movne	r3, #1
   14894:	cmp	r2, #0
   14898:	blt	148a8 <putchar_unlocked@plt+0x364c>
   1489c:	cmp	r3, #0
   148a0:	bne	148a8 <putchar_unlocked@plt+0x364c>
   148a4:	b	10f38 <calloc@plt>
   148a8:	push	{r4, lr}
   148ac:	bl	1113c <__errno_location@plt>
   148b0:	mov	r3, #12
   148b4:	str	r3, [r0]
   148b8:	mov	r0, #0
   148bc:	pop	{r4, pc}
   148c0:	cmp	r0, #0
   148c4:	mov	r3, #0
   148c8:	moveq	r0, #1
   148cc:	adds	r3, r3, #0
   148d0:	movne	r3, #1
   148d4:	cmp	r0, #0
   148d8:	blt	148e8 <putchar_unlocked@plt+0x368c>
   148dc:	cmp	r3, #0
   148e0:	bne	148e8 <putchar_unlocked@plt+0x368c>
   148e4:	b	110a0 <malloc@plt>
   148e8:	push	{r4, lr}
   148ec:	bl	1113c <__errno_location@plt>
   148f0:	mov	r3, #12
   148f4:	str	r3, [r0]
   148f8:	mov	r0, #0
   148fc:	pop	{r4, pc}
   14900:	cmp	r0, #0
   14904:	push	{r4, lr}
   14908:	mov	r4, r1
   1490c:	bne	1491c <putchar_unlocked@plt+0x36c0>
   14910:	mov	r0, r1
   14914:	pop	{r4, lr}
   14918:	b	148c0 <putchar_unlocked@plt+0x3664>
   1491c:	cmp	r1, #0
   14920:	bne	14930 <putchar_unlocked@plt+0x36d4>
   14924:	bl	12480 <putchar_unlocked@plt+0x1224>
   14928:	mov	r0, #0
   1492c:	pop	{r4, pc}
   14930:	cmp	r1, #0
   14934:	blt	14944 <putchar_unlocked@plt+0x36e8>
   14938:	mov	r3, #0
   1493c:	cmp	r3, r3
   14940:	beq	14954 <putchar_unlocked@plt+0x36f8>
   14944:	bl	1113c <__errno_location@plt>
   14948:	mov	r3, #12
   1494c:	str	r3, [r0]
   14950:	b	14928 <putchar_unlocked@plt+0x36cc>
   14954:	pop	{r4, lr}
   14958:	b	11028 <realloc@plt>
   1495c:	push	{r4, r5, r6, lr}
   14960:	mov	r4, r0
   14964:	bl	11070 <__fpending@plt>
   14968:	mov	r5, r0
   1496c:	mov	r0, r4
   14970:	bl	1107c <ferror_unlocked@plt>
   14974:	mov	r6, r0
   14978:	mov	r0, r4
   1497c:	bl	12388 <putchar_unlocked@plt+0x112c>
   14980:	cmp	r6, #0
   14984:	mov	r4, r0
   14988:	bne	149b4 <putchar_unlocked@plt+0x3758>
   1498c:	cmp	r0, #0
   14990:	beq	149ac <putchar_unlocked@plt+0x3750>
   14994:	cmp	r5, #0
   14998:	bne	149c4 <putchar_unlocked@plt+0x3768>
   1499c:	bl	1113c <__errno_location@plt>
   149a0:	ldr	r4, [r0]
   149a4:	subs	r4, r4, #9
   149a8:	mvnne	r4, #0
   149ac:	mov	r0, r4
   149b0:	pop	{r4, r5, r6, pc}
   149b4:	cmp	r0, #0
   149b8:	bne	149c4 <putchar_unlocked@plt+0x3768>
   149bc:	bl	1113c <__errno_location@plt>
   149c0:	str	r4, [r0]
   149c4:	mvn	r4, #0
   149c8:	b	149ac <putchar_unlocked@plt+0x3750>
   149cc:	push	{r4, lr}
   149d0:	mov	r0, #14
   149d4:	bl	111d8 <nl_langinfo@plt>
   149d8:	ldr	r3, [pc, #24]	; 149f8 <putchar_unlocked@plt+0x379c>
   149dc:	cmp	r0, #0
   149e0:	moveq	r0, r3
   149e4:	ldr	r3, [pc, #16]	; 149fc <putchar_unlocked@plt+0x37a0>
   149e8:	ldrb	r2, [r0]
   149ec:	cmp	r2, #0
   149f0:	moveq	r0, r3
   149f4:	pop	{r4, pc}
   149f8:	andeq	r5, r1, r1, lsr #14
   149fc:			; <UNDEFINED> instruction: 0x00015cbc
   14a00:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14a04:	subs	r5, r0, #0
   14a08:	addeq	r5, sp, #4
   14a0c:	mov	r0, r5
   14a10:	mov	r7, r2
   14a14:	mov	r6, r1
   14a18:	bl	11088 <mbrtowc@plt>
   14a1c:	cmp	r7, #0
   14a20:	cmnne	r0, #3
   14a24:	mov	r4, r0
   14a28:	bls	14a44 <putchar_unlocked@plt+0x37e8>
   14a2c:	mov	r0, #0
   14a30:	bl	12568 <putchar_unlocked@plt+0x130c>
   14a34:	cmp	r0, #0
   14a38:	moveq	r4, #1
   14a3c:	ldrbeq	r3, [r6]
   14a40:	streq	r3, [r5]
   14a44:	mov	r0, r4
   14a48:	add	sp, sp, #12
   14a4c:	pop	{r4, r5, r6, r7, pc}
   14a50:	push	{r4, r5, r6, lr}
   14a54:	subs	r4, r2, #0
   14a58:	mov	r6, r0
   14a5c:	mov	r5, r1
   14a60:	beq	14a78 <putchar_unlocked@plt+0x381c>
   14a64:	mov	r1, r4
   14a68:	mvn	r0, #0
   14a6c:	bl	14a9c <putchar_unlocked@plt+0x3840>
   14a70:	cmp	r0, r5
   14a74:	bcc	14a88 <putchar_unlocked@plt+0x382c>
   14a78:	mul	r1, r5, r4
   14a7c:	mov	r0, r6
   14a80:	pop	{r4, r5, r6, lr}
   14a84:	b	14900 <putchar_unlocked@plt+0x36a4>
   14a88:	bl	1113c <__errno_location@plt>
   14a8c:	mov	r3, #12
   14a90:	str	r3, [r0]
   14a94:	mov	r0, #0
   14a98:	pop	{r4, r5, r6, pc}
   14a9c:	subs	r2, r1, #1
   14aa0:	bxeq	lr
   14aa4:	bcc	14c7c <putchar_unlocked@plt+0x3a20>
   14aa8:	cmp	r0, r1
   14aac:	bls	14c60 <putchar_unlocked@plt+0x3a04>
   14ab0:	tst	r1, r2
   14ab4:	beq	14c6c <putchar_unlocked@plt+0x3a10>
   14ab8:	clz	r3, r0
   14abc:	clz	r2, r1
   14ac0:	sub	r3, r2, r3
   14ac4:	rsbs	r3, r3, #31
   14ac8:	addne	r3, r3, r3, lsl #1
   14acc:	mov	r2, #0
   14ad0:	addne	pc, pc, r3, lsl #2
   14ad4:	nop			; (mov r0, r0)
   14ad8:	cmp	r0, r1, lsl #31
   14adc:	adc	r2, r2, r2
   14ae0:	subcs	r0, r0, r1, lsl #31
   14ae4:	cmp	r0, r1, lsl #30
   14ae8:	adc	r2, r2, r2
   14aec:	subcs	r0, r0, r1, lsl #30
   14af0:	cmp	r0, r1, lsl #29
   14af4:	adc	r2, r2, r2
   14af8:	subcs	r0, r0, r1, lsl #29
   14afc:	cmp	r0, r1, lsl #28
   14b00:	adc	r2, r2, r2
   14b04:	subcs	r0, r0, r1, lsl #28
   14b08:	cmp	r0, r1, lsl #27
   14b0c:	adc	r2, r2, r2
   14b10:	subcs	r0, r0, r1, lsl #27
   14b14:	cmp	r0, r1, lsl #26
   14b18:	adc	r2, r2, r2
   14b1c:	subcs	r0, r0, r1, lsl #26
   14b20:	cmp	r0, r1, lsl #25
   14b24:	adc	r2, r2, r2
   14b28:	subcs	r0, r0, r1, lsl #25
   14b2c:	cmp	r0, r1, lsl #24
   14b30:	adc	r2, r2, r2
   14b34:	subcs	r0, r0, r1, lsl #24
   14b38:	cmp	r0, r1, lsl #23
   14b3c:	adc	r2, r2, r2
   14b40:	subcs	r0, r0, r1, lsl #23
   14b44:	cmp	r0, r1, lsl #22
   14b48:	adc	r2, r2, r2
   14b4c:	subcs	r0, r0, r1, lsl #22
   14b50:	cmp	r0, r1, lsl #21
   14b54:	adc	r2, r2, r2
   14b58:	subcs	r0, r0, r1, lsl #21
   14b5c:	cmp	r0, r1, lsl #20
   14b60:	adc	r2, r2, r2
   14b64:	subcs	r0, r0, r1, lsl #20
   14b68:	cmp	r0, r1, lsl #19
   14b6c:	adc	r2, r2, r2
   14b70:	subcs	r0, r0, r1, lsl #19
   14b74:	cmp	r0, r1, lsl #18
   14b78:	adc	r2, r2, r2
   14b7c:	subcs	r0, r0, r1, lsl #18
   14b80:	cmp	r0, r1, lsl #17
   14b84:	adc	r2, r2, r2
   14b88:	subcs	r0, r0, r1, lsl #17
   14b8c:	cmp	r0, r1, lsl #16
   14b90:	adc	r2, r2, r2
   14b94:	subcs	r0, r0, r1, lsl #16
   14b98:	cmp	r0, r1, lsl #15
   14b9c:	adc	r2, r2, r2
   14ba0:	subcs	r0, r0, r1, lsl #15
   14ba4:	cmp	r0, r1, lsl #14
   14ba8:	adc	r2, r2, r2
   14bac:	subcs	r0, r0, r1, lsl #14
   14bb0:	cmp	r0, r1, lsl #13
   14bb4:	adc	r2, r2, r2
   14bb8:	subcs	r0, r0, r1, lsl #13
   14bbc:	cmp	r0, r1, lsl #12
   14bc0:	adc	r2, r2, r2
   14bc4:	subcs	r0, r0, r1, lsl #12
   14bc8:	cmp	r0, r1, lsl #11
   14bcc:	adc	r2, r2, r2
   14bd0:	subcs	r0, r0, r1, lsl #11
   14bd4:	cmp	r0, r1, lsl #10
   14bd8:	adc	r2, r2, r2
   14bdc:	subcs	r0, r0, r1, lsl #10
   14be0:	cmp	r0, r1, lsl #9
   14be4:	adc	r2, r2, r2
   14be8:	subcs	r0, r0, r1, lsl #9
   14bec:	cmp	r0, r1, lsl #8
   14bf0:	adc	r2, r2, r2
   14bf4:	subcs	r0, r0, r1, lsl #8
   14bf8:	cmp	r0, r1, lsl #7
   14bfc:	adc	r2, r2, r2
   14c00:	subcs	r0, r0, r1, lsl #7
   14c04:	cmp	r0, r1, lsl #6
   14c08:	adc	r2, r2, r2
   14c0c:	subcs	r0, r0, r1, lsl #6
   14c10:	cmp	r0, r1, lsl #5
   14c14:	adc	r2, r2, r2
   14c18:	subcs	r0, r0, r1, lsl #5
   14c1c:	cmp	r0, r1, lsl #4
   14c20:	adc	r2, r2, r2
   14c24:	subcs	r0, r0, r1, lsl #4
   14c28:	cmp	r0, r1, lsl #3
   14c2c:	adc	r2, r2, r2
   14c30:	subcs	r0, r0, r1, lsl #3
   14c34:	cmp	r0, r1, lsl #2
   14c38:	adc	r2, r2, r2
   14c3c:	subcs	r0, r0, r1, lsl #2
   14c40:	cmp	r0, r1, lsl #1
   14c44:	adc	r2, r2, r2
   14c48:	subcs	r0, r0, r1, lsl #1
   14c4c:	cmp	r0, r1
   14c50:	adc	r2, r2, r2
   14c54:	subcs	r0, r0, r1
   14c58:	mov	r0, r2
   14c5c:	bx	lr
   14c60:	moveq	r0, #1
   14c64:	movne	r0, #0
   14c68:	bx	lr
   14c6c:	clz	r2, r1
   14c70:	rsb	r2, r2, #31
   14c74:	lsr	r0, r0, r2
   14c78:	bx	lr
   14c7c:	cmp	r0, #0
   14c80:	mvnne	r0, #0
   14c84:	b	14fbc <putchar_unlocked@plt+0x3d60>
   14c88:	cmp	r1, #0
   14c8c:	beq	14c7c <putchar_unlocked@plt+0x3a20>
   14c90:	push	{r0, r1, lr}
   14c94:	bl	14a9c <putchar_unlocked@plt+0x3840>
   14c98:	pop	{r1, r2, lr}
   14c9c:	mul	r3, r2, r0
   14ca0:	sub	r1, r1, r3
   14ca4:	bx	lr
   14ca8:	cmp	r1, #0
   14cac:	beq	14eb8 <putchar_unlocked@plt+0x3c5c>
   14cb0:	eor	ip, r0, r1
   14cb4:	rsbmi	r1, r1, #0
   14cb8:	subs	r2, r1, #1
   14cbc:	beq	14e84 <putchar_unlocked@plt+0x3c28>
   14cc0:	movs	r3, r0
   14cc4:	rsbmi	r3, r0, #0
   14cc8:	cmp	r3, r1
   14ccc:	bls	14e90 <putchar_unlocked@plt+0x3c34>
   14cd0:	tst	r1, r2
   14cd4:	beq	14ea0 <putchar_unlocked@plt+0x3c44>
   14cd8:	clz	r2, r3
   14cdc:	clz	r0, r1
   14ce0:	sub	r2, r0, r2
   14ce4:	rsbs	r2, r2, #31
   14ce8:	addne	r2, r2, r2, lsl #1
   14cec:	mov	r0, #0
   14cf0:	addne	pc, pc, r2, lsl #2
   14cf4:	nop			; (mov r0, r0)
   14cf8:	cmp	r3, r1, lsl #31
   14cfc:	adc	r0, r0, r0
   14d00:	subcs	r3, r3, r1, lsl #31
   14d04:	cmp	r3, r1, lsl #30
   14d08:	adc	r0, r0, r0
   14d0c:	subcs	r3, r3, r1, lsl #30
   14d10:	cmp	r3, r1, lsl #29
   14d14:	adc	r0, r0, r0
   14d18:	subcs	r3, r3, r1, lsl #29
   14d1c:	cmp	r3, r1, lsl #28
   14d20:	adc	r0, r0, r0
   14d24:	subcs	r3, r3, r1, lsl #28
   14d28:	cmp	r3, r1, lsl #27
   14d2c:	adc	r0, r0, r0
   14d30:	subcs	r3, r3, r1, lsl #27
   14d34:	cmp	r3, r1, lsl #26
   14d38:	adc	r0, r0, r0
   14d3c:	subcs	r3, r3, r1, lsl #26
   14d40:	cmp	r3, r1, lsl #25
   14d44:	adc	r0, r0, r0
   14d48:	subcs	r3, r3, r1, lsl #25
   14d4c:	cmp	r3, r1, lsl #24
   14d50:	adc	r0, r0, r0
   14d54:	subcs	r3, r3, r1, lsl #24
   14d58:	cmp	r3, r1, lsl #23
   14d5c:	adc	r0, r0, r0
   14d60:	subcs	r3, r3, r1, lsl #23
   14d64:	cmp	r3, r1, lsl #22
   14d68:	adc	r0, r0, r0
   14d6c:	subcs	r3, r3, r1, lsl #22
   14d70:	cmp	r3, r1, lsl #21
   14d74:	adc	r0, r0, r0
   14d78:	subcs	r3, r3, r1, lsl #21
   14d7c:	cmp	r3, r1, lsl #20
   14d80:	adc	r0, r0, r0
   14d84:	subcs	r3, r3, r1, lsl #20
   14d88:	cmp	r3, r1, lsl #19
   14d8c:	adc	r0, r0, r0
   14d90:	subcs	r3, r3, r1, lsl #19
   14d94:	cmp	r3, r1, lsl #18
   14d98:	adc	r0, r0, r0
   14d9c:	subcs	r3, r3, r1, lsl #18
   14da0:	cmp	r3, r1, lsl #17
   14da4:	adc	r0, r0, r0
   14da8:	subcs	r3, r3, r1, lsl #17
   14dac:	cmp	r3, r1, lsl #16
   14db0:	adc	r0, r0, r0
   14db4:	subcs	r3, r3, r1, lsl #16
   14db8:	cmp	r3, r1, lsl #15
   14dbc:	adc	r0, r0, r0
   14dc0:	subcs	r3, r3, r1, lsl #15
   14dc4:	cmp	r3, r1, lsl #14
   14dc8:	adc	r0, r0, r0
   14dcc:	subcs	r3, r3, r1, lsl #14
   14dd0:	cmp	r3, r1, lsl #13
   14dd4:	adc	r0, r0, r0
   14dd8:	subcs	r3, r3, r1, lsl #13
   14ddc:	cmp	r3, r1, lsl #12
   14de0:	adc	r0, r0, r0
   14de4:	subcs	r3, r3, r1, lsl #12
   14de8:	cmp	r3, r1, lsl #11
   14dec:	adc	r0, r0, r0
   14df0:	subcs	r3, r3, r1, lsl #11
   14df4:	cmp	r3, r1, lsl #10
   14df8:	adc	r0, r0, r0
   14dfc:	subcs	r3, r3, r1, lsl #10
   14e00:	cmp	r3, r1, lsl #9
   14e04:	adc	r0, r0, r0
   14e08:	subcs	r3, r3, r1, lsl #9
   14e0c:	cmp	r3, r1, lsl #8
   14e10:	adc	r0, r0, r0
   14e14:	subcs	r3, r3, r1, lsl #8
   14e18:	cmp	r3, r1, lsl #7
   14e1c:	adc	r0, r0, r0
   14e20:	subcs	r3, r3, r1, lsl #7
   14e24:	cmp	r3, r1, lsl #6
   14e28:	adc	r0, r0, r0
   14e2c:	subcs	r3, r3, r1, lsl #6
   14e30:	cmp	r3, r1, lsl #5
   14e34:	adc	r0, r0, r0
   14e38:	subcs	r3, r3, r1, lsl #5
   14e3c:	cmp	r3, r1, lsl #4
   14e40:	adc	r0, r0, r0
   14e44:	subcs	r3, r3, r1, lsl #4
   14e48:	cmp	r3, r1, lsl #3
   14e4c:	adc	r0, r0, r0
   14e50:	subcs	r3, r3, r1, lsl #3
   14e54:	cmp	r3, r1, lsl #2
   14e58:	adc	r0, r0, r0
   14e5c:	subcs	r3, r3, r1, lsl #2
   14e60:	cmp	r3, r1, lsl #1
   14e64:	adc	r0, r0, r0
   14e68:	subcs	r3, r3, r1, lsl #1
   14e6c:	cmp	r3, r1
   14e70:	adc	r0, r0, r0
   14e74:	subcs	r3, r3, r1
   14e78:	cmp	ip, #0
   14e7c:	rsbmi	r0, r0, #0
   14e80:	bx	lr
   14e84:	teq	ip, r0
   14e88:	rsbmi	r0, r0, #0
   14e8c:	bx	lr
   14e90:	movcc	r0, #0
   14e94:	asreq	r0, ip, #31
   14e98:	orreq	r0, r0, #1
   14e9c:	bx	lr
   14ea0:	clz	r2, r1
   14ea4:	rsb	r2, r2, #31
   14ea8:	cmp	ip, #0
   14eac:	lsr	r0, r3, r2
   14eb0:	rsbmi	r0, r0, #0
   14eb4:	bx	lr
   14eb8:	cmp	r0, #0
   14ebc:	mvngt	r0, #-2147483648	; 0x80000000
   14ec0:	movlt	r0, #-2147483648	; 0x80000000
   14ec4:	b	14fbc <putchar_unlocked@plt+0x3d60>
   14ec8:	cmp	r1, #0
   14ecc:	beq	14eb8 <putchar_unlocked@plt+0x3c5c>
   14ed0:	push	{r0, r1, lr}
   14ed4:	bl	14cb0 <putchar_unlocked@plt+0x3a54>
   14ed8:	pop	{r1, r2, lr}
   14edc:	mul	r3, r2, r0
   14ee0:	sub	r1, r1, r3
   14ee4:	bx	lr
   14ee8:	cmp	r3, #0
   14eec:	cmpeq	r2, #0
   14ef0:	bne	14f14 <putchar_unlocked@plt+0x3cb8>
   14ef4:	cmp	r1, #0
   14ef8:	movlt	r1, #-2147483648	; 0x80000000
   14efc:	movlt	r0, #0
   14f00:	blt	14f10 <putchar_unlocked@plt+0x3cb4>
   14f04:	cmpeq	r0, #0
   14f08:	mvnne	r1, #-2147483648	; 0x80000000
   14f0c:	mvnne	r0, #0
   14f10:	b	14fbc <putchar_unlocked@plt+0x3d60>
   14f14:	sub	sp, sp, #8
   14f18:	push	{sp, lr}
   14f1c:	cmp	r1, #0
   14f20:	blt	14f40 <putchar_unlocked@plt+0x3ce4>
   14f24:	cmp	r3, #0
   14f28:	blt	14f74 <putchar_unlocked@plt+0x3d18>
   14f2c:	bl	14fcc <putchar_unlocked@plt+0x3d70>
   14f30:	ldr	lr, [sp, #4]
   14f34:	add	sp, sp, #8
   14f38:	pop	{r2, r3}
   14f3c:	bx	lr
   14f40:	rsbs	r0, r0, #0
   14f44:	sbc	r1, r1, r1, lsl #1
   14f48:	cmp	r3, #0
   14f4c:	blt	14f98 <putchar_unlocked@plt+0x3d3c>
   14f50:	bl	14fcc <putchar_unlocked@plt+0x3d70>
   14f54:	ldr	lr, [sp, #4]
   14f58:	add	sp, sp, #8
   14f5c:	pop	{r2, r3}
   14f60:	rsbs	r0, r0, #0
   14f64:	sbc	r1, r1, r1, lsl #1
   14f68:	rsbs	r2, r2, #0
   14f6c:	sbc	r3, r3, r3, lsl #1
   14f70:	bx	lr
   14f74:	rsbs	r2, r2, #0
   14f78:	sbc	r3, r3, r3, lsl #1
   14f7c:	bl	14fcc <putchar_unlocked@plt+0x3d70>
   14f80:	ldr	lr, [sp, #4]
   14f84:	add	sp, sp, #8
   14f88:	pop	{r2, r3}
   14f8c:	rsbs	r0, r0, #0
   14f90:	sbc	r1, r1, r1, lsl #1
   14f94:	bx	lr
   14f98:	rsbs	r2, r2, #0
   14f9c:	sbc	r3, r3, r3, lsl #1
   14fa0:	bl	14fcc <putchar_unlocked@plt+0x3d70>
   14fa4:	ldr	lr, [sp, #4]
   14fa8:	add	sp, sp, #8
   14fac:	pop	{r2, r3}
   14fb0:	rsbs	r2, r2, #0
   14fb4:	sbc	r3, r3, r3, lsl #1
   14fb8:	bx	lr
   14fbc:	push	{r1, lr}
   14fc0:	mov	r0, #8
   14fc4:	bl	10f50 <raise@plt>
   14fc8:	pop	{r1, pc}
   14fcc:	cmp	r1, r3
   14fd0:	push	{r4, r5, r6, r7, r8, r9, lr}
   14fd4:	cmpeq	r0, r2
   14fd8:	mov	r4, r0
   14fdc:	mov	r5, r1
   14fe0:	ldr	r9, [sp, #28]
   14fe4:	movcc	r0, #0
   14fe8:	movcc	r1, #0
   14fec:	bcc	150e4 <putchar_unlocked@plt+0x3e88>
   14ff0:	cmp	r3, #0
   14ff4:	clzeq	ip, r2
   14ff8:	clzne	ip, r3
   14ffc:	addeq	ip, ip, #32
   15000:	cmp	r5, #0
   15004:	clzeq	r1, r4
   15008:	addeq	r1, r1, #32
   1500c:	clzne	r1, r5
   15010:	sub	ip, ip, r1
   15014:	sub	lr, ip, #32
   15018:	lsl	r7, r3, ip
   1501c:	rsb	r8, ip, #32
   15020:	orr	r7, r7, r2, lsl lr
   15024:	orr	r7, r7, r2, lsr r8
   15028:	lsl	r6, r2, ip
   1502c:	cmp	r5, r7
   15030:	cmpeq	r4, r6
   15034:	movcc	r0, #0
   15038:	movcc	r1, #0
   1503c:	bcc	15058 <putchar_unlocked@plt+0x3dfc>
   15040:	mov	r3, #1
   15044:	subs	r4, r4, r6
   15048:	lsl	r1, r3, lr
   1504c:	lsl	r0, r3, ip
   15050:	orr	r1, r1, r3, lsr r8
   15054:	sbc	r5, r5, r7
   15058:	cmp	ip, #0
   1505c:	beq	150e4 <putchar_unlocked@plt+0x3e88>
   15060:	lsrs	r3, r7, #1
   15064:	rrx	r2, r6
   15068:	mov	r6, ip
   1506c:	b	15090 <putchar_unlocked@plt+0x3e34>
   15070:	subs	r4, r4, r2
   15074:	sbc	r5, r5, r3
   15078:	adds	r4, r4, r4
   1507c:	adc	r5, r5, r5
   15080:	adds	r4, r4, #1
   15084:	adc	r5, r5, #0
   15088:	subs	r6, r6, #1
   1508c:	beq	150ac <putchar_unlocked@plt+0x3e50>
   15090:	cmp	r5, r3
   15094:	cmpeq	r4, r2
   15098:	bcs	15070 <putchar_unlocked@plt+0x3e14>
   1509c:	adds	r4, r4, r4
   150a0:	adc	r5, r5, r5
   150a4:	subs	r6, r6, #1
   150a8:	bne	15090 <putchar_unlocked@plt+0x3e34>
   150ac:	lsr	r6, r4, ip
   150b0:	lsr	r7, r5, ip
   150b4:	orr	r6, r6, r5, lsl r8
   150b8:	adds	r2, r0, r4
   150bc:	orr	r6, r6, r5, lsr lr
   150c0:	adc	r3, r1, r5
   150c4:	lsl	r1, r7, ip
   150c8:	orr	r1, r1, r6, lsl lr
   150cc:	lsl	r0, r6, ip
   150d0:	orr	r1, r1, r6, lsr r8
   150d4:	subs	r0, r2, r0
   150d8:	mov	r4, r6
   150dc:	mov	r5, r7
   150e0:	sbc	r1, r3, r1
   150e4:	cmp	r9, #0
   150e8:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   150ec:	strd	r4, [r9]
   150f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   150f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150f8:	mov	r7, r0
   150fc:	ldr	r6, [pc, #72]	; 1514c <putchar_unlocked@plt+0x3ef0>
   15100:	ldr	r5, [pc, #72]	; 15150 <putchar_unlocked@plt+0x3ef4>
   15104:	add	r6, pc, r6
   15108:	add	r5, pc, r5
   1510c:	sub	r6, r6, r5
   15110:	mov	r8, r1
   15114:	mov	r9, r2
   15118:	bl	10f18 <calloc@plt-0x20>
   1511c:	asrs	r6, r6, #2
   15120:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15124:	mov	r4, #0
   15128:	add	r4, r4, #1
   1512c:	ldr	r3, [r5], #4
   15130:	mov	r2, r9
   15134:	mov	r1, r8
   15138:	mov	r0, r7
   1513c:	blx	r3
   15140:	cmp	r6, r4
   15144:	bne	15128 <putchar_unlocked@plt+0x3ecc>
   15148:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1514c:	andeq	r0, r1, r4, lsl #28
   15150:	strdeq	r0, [r1], -ip
   15154:	bx	lr
   15158:	ldr	r3, [pc, #12]	; 1516c <putchar_unlocked@plt+0x3f10>
   1515c:	mov	r1, #0
   15160:	add	r3, pc, r3
   15164:	ldr	r2, [r3]
   15168:	b	11154 <__cxa_atexit@plt>
   1516c:			; <UNDEFINED> instruction: 0x00010fbc
   15170:	mov	r2, r1
   15174:	mov	r1, r0
   15178:	mov	r0, #3
   1517c:	b	11220 <__xstat64@plt>

Disassembly of section .fini:

00015180 <.fini>:
   15180:	push	{r3, lr}
   15184:	pop	{r3, pc}
