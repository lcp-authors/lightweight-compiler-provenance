
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000d18 <_init>:
 d18:	push	{r3, lr}
 d1c:	bl	10a0 <call_weak_fn>
 d20:	pop	{r3, pc}

Disassembly of section .plt:

00000d24 <.plt>:
 d24:	push	{lr}		; (str lr, [sp, #-4]!)
 d28:	ldr	lr, [pc, #4]	; d34 <.plt+0x10>
 d2c:	add	lr, pc, lr
 d30:	ldr	pc, [lr, #8]!
 d34:	.word	0x0003d2cc

00000d38 <calloc@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #249856	; 0x3d000
 d40:	ldr	pc, [ip, #716]!	; 0x2cc

00000d44 <raise@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #249856	; 0x3d000
 d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00000d50 <strcmp@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #249856	; 0x3d000
 d58:	ldr	pc, [ip, #700]!	; 0x2bc

00000d5c <__cxa_finalize@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #249856	; 0x3d000
 d64:	ldr	pc, [ip, #692]!	; 0x2b4

00000d68 <printf@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #249856	; 0x3d000
 d70:	ldr	pc, [ip, #684]!	; 0x2ac

00000d74 <fopen@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #249856	; 0x3d000
 d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00000d80 <getprotobyname@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #249856	; 0x3d000
 d88:	ldr	pc, [ip, #668]!	; 0x29c

00000d8c <longjmp@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #249856	; 0x3d000
 d94:	ldr	pc, [ip, #660]!	; 0x294

00000d98 <_setjmp@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #249856	; 0x3d000
 da0:	ldr	pc, [ip, #652]!	; 0x28c

00000da4 <free@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #249856	; 0x3d000
 dac:	ldr	pc, [ip, #644]!	; 0x284

00000db0 <getnetbyname@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #249856	; 0x3d000
 db8:	ldr	pc, [ip, #636]!	; 0x27c

00000dbc <ferror@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #249856	; 0x3d000
 dc4:	ldr	pc, [ip, #628]!	; 0x274

00000dc8 <memcpy@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #249856	; 0x3d000
 dd0:	ldr	pc, [ip, #620]!	; 0x26c

00000dd4 <strdup@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #249856	; 0x3d000
 ddc:	ldr	pc, [ip, #612]!	; 0x264

00000de0 <rewind@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #249856	; 0x3d000
 de8:	ldr	pc, [ip, #604]!	; 0x25c

00000dec <realloc@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #249856	; 0x3d000
 df4:	ldr	pc, [ip, #596]!	; 0x254

00000df8 <fwrite@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #249856	; 0x3d000
 e00:	ldr	pc, [ip, #588]!	; 0x24c

00000e04 <fread@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #249856	; 0x3d000
 e0c:	ldr	pc, [ip, #580]!	; 0x244

00000e10 <puts@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #249856	; 0x3d000
 e18:	ldr	pc, [ip, #572]!	; 0x23c

00000e1c <malloc@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #249856	; 0x3d000
 e24:	ldr	pc, [ip, #564]!	; 0x234

00000e28 <__gmon_start__@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #249856	; 0x3d000
 e30:	ldr	pc, [ip, #556]!	; 0x22c

00000e34 <__ctype_b_loc@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #249856	; 0x3d000
 e3c:	ldr	pc, [ip, #548]!	; 0x224

00000e40 <exit@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #249856	; 0x3d000
 e48:	ldr	pc, [ip, #540]!	; 0x21c

00000e4c <strlen@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #249856	; 0x3d000
 e54:	ldr	pc, [ip, #532]!	; 0x214

00000e58 <strchr@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #249856	; 0x3d000
 e60:	ldr	pc, [ip, #524]!	; 0x20c

00000e64 <fprintf@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #249856	; 0x3d000
 e6c:	ldr	pc, [ip, #516]!	; 0x204

00000e70 <__errno_location@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #249856	; 0x3d000
 e78:	ldr	pc, [ip, #508]!	; 0x1fc

00000e7c <getservbyname@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #249856	; 0x3d000
 e84:	ldr	pc, [ip, #500]!	; 0x1f4

00000e88 <memset@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #249856	; 0x3d000
 e90:	ldr	pc, [ip, #492]!	; 0x1ec

00000e94 <putchar@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #249856	; 0x3d000
 e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00000ea0 <strncpy@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #249856	; 0x3d000
 ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00000eac <fileno@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #249856	; 0x3d000
 eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00000eb8 <sscanf@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #249856	; 0x3d000
 ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00000ec4 <clearerr@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #249856	; 0x3d000
 ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00000ed0 <vsnprintf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #249856	; 0x3d000
 ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00000edc <freeaddrinfo@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #249856	; 0x3d000
 ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00000ee8 <getaddrinfo@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #249856	; 0x3d000
 ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00000ef4 <ffs@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #249856	; 0x3d000
 efc:	ldr	pc, [ip, #420]!	; 0x1a4

00000f00 <gethostbyname@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #249856	; 0x3d000
 f08:	ldr	pc, [ip, #412]!	; 0x19c

00000f0c <isatty@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #249856	; 0x3d000
 f14:	ldr	pc, [ip, #404]!	; 0x194

00000f18 <abort@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #249856	; 0x3d000
 f20:	ldr	pc, [ip, #396]!	; 0x18c

00000f24 <getc@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #249856	; 0x3d000
 f2c:	ldr	pc, [ip, #388]!	; 0x184

Disassembly of section .text:

00000f30 <yy_get_previous_state>:
     f30:	ldr	r1, [pc, #316]	; 1074 <yy_get_previous_state+0x144>
     f34:	ldr	r3, [pc, #316]	; 1078 <yy_get_previous_state+0x148>
     f38:	add	r1, pc, r1
     f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f40:	sub	sp, sp, #28
     f44:	ldr	r4, [pc, #304]	; 107c <yy_get_previous_state+0x14c>
     f48:	ldr	r0, [pc, #304]	; 1080 <yy_get_previous_state+0x150>
     f4c:	ldr	r6, [r1, r3]
     f50:	ldr	r3, [pc, #300]	; 1084 <yy_get_previous_state+0x154>
     f54:	add	r4, pc, r4
     f58:	add	r0, pc, r0
     f5c:	add	r3, pc, r3
     f60:	ldr	lr, [pc, #288]	; 1088 <yy_get_previous_state+0x158>
     f64:	add	r4, r4, #3120	; 0xc30
     f68:	add	r0, r0, #1104	; 0x450
     f6c:	add	r4, r4, #4
     f70:	add	r0, r0, #12
     f74:	add	lr, pc, lr
     f78:	ldr	ip, [pc, #268]	; 108c <yy_get_previous_state+0x15c>
     f7c:	str	r4, [sp, #16]
     f80:	str	r0, [sp, #20]
     f84:	ldm	r3, {r0, r4}
     f88:	add	r5, lr, #2560	; 0xa00
     f8c:	mov	r2, #0
     f90:	add	r5, r5, #12
     f94:	add	ip, pc, ip
     f98:	ldr	r1, [r6]
     f9c:	mov	r6, r2
     fa0:	str	r5, [sp, #12]
     fa4:	str	r4, [sp, #4]
     fa8:	ldr	r5, [r3, #8]
     fac:	ldr	r4, [r3, #12]
     fb0:	add	r3, ip, #256	; 0x100
     fb4:	str	r3, [sp, #8]
     fb8:	ldr	r3, [sp, #4]
     fbc:	mov	r7, r1
     fc0:	cmp	r1, r3
     fc4:	bcs	104c <yy_get_previous_state+0x11c>
     fc8:	ldrb	r3, [r1], #1
     fcc:	cmp	r3, #0
     fd0:	moveq	ip, #1
     fd4:	ldrne	ip, [pc, #180]	; 1090 <yy_get_previous_state+0x160>
     fd8:	addne	ip, pc, ip
     fdc:	ldrbne	ip, [ip, r3]
     fe0:	ldr	r8, [sp, #8]
     fe4:	lsl	r3, r0, #1
     fe8:	sub	r9, lr, #1216	; 0x4c0
     fec:	ldrsh	r3, [r8, r3]
     ff0:	ldr	r8, [pc, #156]	; 1094 <yy_get_previous_state+0x164>
     ff4:	cmp	r3, #0
     ff8:	movne	r2, #1
     ffc:	movne	r4, r7
    1000:	movne	r6, r2
    1004:	movne	r5, r0
    1008:	lsl	r7, r0, #1
    100c:	ldr	fp, [sp, #12]
    1010:	ldrsh	r3, [r9, r7]
    1014:	add	sl, lr, ip
    1018:	add	r3, r3, ip
    101c:	lsl	r3, r3, #1
    1020:	ldrsh	fp, [fp, r3]
    1024:	cmp	r0, fp
    1028:	beq	1040 <yy_get_previous_state+0x110>
    102c:	ldr	r3, [sp, #16]
    1030:	ldrsh	r0, [r3, r7]
    1034:	cmp	r0, r8
    1038:	ldrbgt	ip, [sl, #-1272]	; 0xfffffb08
    103c:	b	1008 <yy_get_previous_state+0xd8>
    1040:	ldr	r0, [sp, #20]
    1044:	ldrsh	r0, [r0, r3]
    1048:	b	fb8 <yy_get_previous_state+0x88>
    104c:	cmp	r6, #0
    1050:	ldrne	r3, [pc, #64]	; 1098 <yy_get_previous_state+0x168>
    1054:	addne	r3, pc, r3
    1058:	strne	r5, [r3, #8]
    105c:	cmp	r2, #0
    1060:	ldrne	r3, [pc, #52]	; 109c <yy_get_previous_state+0x16c>
    1064:	addne	r3, pc, r3
    1068:	strne	r4, [r3, #12]
    106c:	add	sp, sp, #28
    1070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1074:	.word	0x0003d0c0
    1078:	.word	0x000000dc
    107c:	.word	0x00022814
    1080:	.word	0x000287f8
    1084:	.word	0x0003dbe4
    1088:	.word	0x000247ec
    108c:	.word	0x000227d4
    1090:	.word	0x00022790
    1094:	.word	0x00000599
    1098:	.word	0x0003daec
    109c:	.word	0x0003dadc

000010a0 <call_weak_fn>:
    10a0:	ldr	r3, [pc, #20]	; 10bc <call_weak_fn+0x1c>
    10a4:	ldr	r2, [pc, #20]	; 10c0 <call_weak_fn+0x20>
    10a8:	add	r3, pc, r3
    10ac:	ldr	r2, [r3, r2]
    10b0:	cmp	r2, #0
    10b4:	bxeq	lr
    10b8:	b	e28 <__gmon_start__@plt>
    10bc:	.word	0x0003cf50
    10c0:	.word	0x000000e0

000010c4 <deregister_tm_clones>:
    10c4:	ldr	r3, [pc, #52]	; 1100 <deregister_tm_clones+0x3c>
    10c8:	ldr	r0, [pc, #52]	; 1104 <deregister_tm_clones+0x40>
    10cc:	add	r3, pc, r3
    10d0:	add	r0, pc, r0
    10d4:	add	r3, r3, #3
    10d8:	sub	r3, r3, r0
    10dc:	cmp	r3, #6
    10e0:	ldr	r3, [pc, #32]	; 1108 <deregister_tm_clones+0x44>
    10e4:	add	r3, pc, r3
    10e8:	bxls	lr
    10ec:	ldr	r2, [pc, #24]	; 110c <deregister_tm_clones+0x48>
    10f0:	ldr	r3, [r3, r2]
    10f4:	cmp	r3, #0
    10f8:	bxeq	lr
    10fc:	bx	r3
    1100:	.word	0x0003d290
    1104:	.word	0x0003d28c
    1108:	.word	0x0003cf14
    110c:	.word	0x000000c0

00001110 <register_tm_clones>:
    1110:	ldr	r1, [pc, #56]	; 1150 <register_tm_clones+0x40>
    1114:	ldr	r0, [pc, #56]	; 1154 <register_tm_clones+0x44>
    1118:	add	r1, pc, r1
    111c:	add	r0, pc, r0
    1120:	sub	r1, r1, r0
    1124:	ldr	r3, [pc, #44]	; 1158 <register_tm_clones+0x48>
    1128:	asr	r1, r1, #2
    112c:	add	r3, pc, r3
    1130:	add	r1, r1, r1, lsr #31
    1134:	asrs	r1, r1, #1
    1138:	bxeq	lr
    113c:	ldr	r2, [pc, #24]	; 115c <register_tm_clones+0x4c>
    1140:	ldr	r3, [r3, r2]
    1144:	cmp	r3, #0
    1148:	bxeq	lr
    114c:	bx	r3
    1150:	.word	0x0003d244
    1154:	.word	0x0003d240
    1158:	.word	0x0003cecc
    115c:	.word	0x00000100

00001160 <__do_global_dtors_aux>:
    1160:	ldr	r3, [pc, #76]	; 11b4 <__do_global_dtors_aux+0x54>
    1164:	ldr	r2, [pc, #76]	; 11b8 <__do_global_dtors_aux+0x58>
    1168:	add	r3, pc, r3
    116c:	add	r2, pc, r2
    1170:	ldrb	r3, [r3]
    1174:	cmp	r3, #0
    1178:	bxne	lr
    117c:	ldr	r3, [pc, #56]	; 11bc <__do_global_dtors_aux+0x5c>
    1180:	push	{r4, lr}
    1184:	ldr	r3, [r2, r3]
    1188:	cmp	r3, #0
    118c:	beq	119c <__do_global_dtors_aux+0x3c>
    1190:	ldr	r3, [pc, #40]	; 11c0 <__do_global_dtors_aux+0x60>
    1194:	ldr	r0, [pc, r3]
    1198:	bl	d5c <__cxa_finalize@plt>
    119c:	bl	10c4 <deregister_tm_clones>
    11a0:	ldr	r3, [pc, #28]	; 11c4 <__do_global_dtors_aux+0x64>
    11a4:	mov	r2, #1
    11a8:	add	r3, pc, r3
    11ac:	strb	r2, [r3]
    11b0:	pop	{r4, pc}
    11b4:	.word	0x0003d1f8
    11b8:	.word	0x0003ce8c
    11bc:	.word	0x000000bc
    11c0:	.word	0x0003cf70
    11c4:	.word	0x0003d1b8

000011c8 <frame_dummy>:
    11c8:	ldr	r0, [pc, #56]	; 1208 <frame_dummy+0x40>
    11cc:	ldr	r3, [pc, #56]	; 120c <frame_dummy+0x44>
    11d0:	add	r0, pc, r0
    11d4:	ldr	r2, [r0]
    11d8:	add	r3, pc, r3
    11dc:	cmp	r2, #0
    11e0:	bne	11e8 <frame_dummy+0x20>
    11e4:	b	1110 <register_tm_clones>
    11e8:	ldr	r2, [pc, #32]	; 1210 <frame_dummy+0x48>
    11ec:	ldr	r3, [r3, r2]
    11f0:	cmp	r3, #0
    11f4:	beq	11e4 <frame_dummy+0x1c>
    11f8:	push	{r4, lr}
    11fc:	blx	r3
    1200:	pop	{r4, lr}
    1204:	b	1110 <register_tm_clones>
    1208:	.word	0x0003cb8c
    120c:	.word	0x0003ce20
    1210:	.word	0x000000f8

00001214 <sfbpf_filter>:
    1214:	cmp	r0, #0
    1218:	bne	1224 <sfbpf_filter+0x10>
    121c:	mvn	r0, #0
    1220:	bx	lr
    1224:	push	{r4, r5, r6, r7, r8, lr}
    1228:	mov	r8, #0
    122c:	sub	ip, r0, #8
    1230:	sub	sp, sp, #64	; 0x40
    1234:	mov	r4, r3
    1238:	mov	r7, r2
    123c:	mov	r6, r1
    1240:	mov	r0, r8
    1244:	ldrh	lr, [ip, #8]
    1248:	add	r5, ip, #8
    124c:	cmp	lr, #177	; 0xb1
    1250:	addls	pc, pc, lr, lsl #2
    1254:	b	1840 <sfbpf_filter+0x62c>
    1258:	b	17f0 <sfbpf_filter+0x5dc>
    125c:	b	17e4 <sfbpf_filter+0x5d0>
    1260:	b	17cc <sfbpf_filter+0x5b8>
    1264:	b	17b4 <sfbpf_filter+0x5a0>
    1268:	b	17a4 <sfbpf_filter+0x590>
    126c:	b	1798 <sfbpf_filter+0x584>
    1270:	b	1790 <sfbpf_filter+0x57c>
    1274:	b	1784 <sfbpf_filter+0x570>
    1278:	b	1840 <sfbpf_filter+0x62c>
    127c:	b	1840 <sfbpf_filter+0x62c>
    1280:	b	1840 <sfbpf_filter+0x62c>
    1284:	b	1840 <sfbpf_filter+0x62c>
    1288:	b	1778 <sfbpf_filter+0x564>
    128c:	b	1840 <sfbpf_filter+0x62c>
    1290:	b	1840 <sfbpf_filter+0x62c>
    1294:	b	1840 <sfbpf_filter+0x62c>
    1298:	b	1840 <sfbpf_filter+0x62c>
    129c:	b	1840 <sfbpf_filter+0x62c>
    12a0:	b	1840 <sfbpf_filter+0x62c>
    12a4:	b	1840 <sfbpf_filter+0x62c>
    12a8:	b	1768 <sfbpf_filter+0x554>
    12ac:	b	1758 <sfbpf_filter+0x544>
    12b0:	b	1530 <sfbpf_filter+0x31c>
    12b4:	b	1840 <sfbpf_filter+0x62c>
    12b8:	b	1840 <sfbpf_filter+0x62c>
    12bc:	b	1840 <sfbpf_filter+0x62c>
    12c0:	b	1840 <sfbpf_filter+0x62c>
    12c4:	b	1840 <sfbpf_filter+0x62c>
    12c8:	b	174c <sfbpf_filter+0x538>
    12cc:	b	1740 <sfbpf_filter+0x52c>
    12d0:	b	1840 <sfbpf_filter+0x62c>
    12d4:	b	1840 <sfbpf_filter+0x62c>
    12d8:	b	172c <sfbpf_filter+0x518>
    12dc:	b	1840 <sfbpf_filter+0x62c>
    12e0:	b	1840 <sfbpf_filter+0x62c>
    12e4:	b	1840 <sfbpf_filter+0x62c>
    12e8:	b	171c <sfbpf_filter+0x508>
    12ec:	b	170c <sfbpf_filter+0x4f8>
    12f0:	b	1840 <sfbpf_filter+0x62c>
    12f4:	b	1840 <sfbpf_filter+0x62c>
    12f8:	b	16f8 <sfbpf_filter+0x4e4>
    12fc:	b	1840 <sfbpf_filter+0x62c>
    1300:	b	1840 <sfbpf_filter+0x62c>
    1304:	b	1840 <sfbpf_filter+0x62c>
    1308:	b	16ec <sfbpf_filter+0x4d8>
    130c:	b	16e0 <sfbpf_filter+0x4cc>
    1310:	b	1840 <sfbpf_filter+0x62c>
    1314:	b	1840 <sfbpf_filter+0x62c>
    1318:	b	1520 <sfbpf_filter+0x30c>
    131c:	b	1840 <sfbpf_filter+0x62c>
    1320:	b	1840 <sfbpf_filter+0x62c>
    1324:	b	1840 <sfbpf_filter+0x62c>
    1328:	b	16d0 <sfbpf_filter+0x4bc>
    132c:	b	16c0 <sfbpf_filter+0x4ac>
    1330:	b	1840 <sfbpf_filter+0x62c>
    1334:	b	1840 <sfbpf_filter+0x62c>
    1338:	b	1840 <sfbpf_filter+0x62c>
    133c:	b	1840 <sfbpf_filter+0x62c>
    1340:	b	1840 <sfbpf_filter+0x62c>
    1344:	b	1840 <sfbpf_filter+0x62c>
    1348:	b	16a8 <sfbpf_filter+0x494>
    134c:	b	169c <sfbpf_filter+0x488>
    1350:	b	1840 <sfbpf_filter+0x62c>
    1354:	b	1840 <sfbpf_filter+0x62c>
    1358:	b	165c <sfbpf_filter+0x448>
    135c:	b	1840 <sfbpf_filter+0x62c>
    1360:	b	1840 <sfbpf_filter+0x62c>
    1364:	b	1840 <sfbpf_filter+0x62c>
    1368:	b	164c <sfbpf_filter+0x438>
    136c:	b	1634 <sfbpf_filter+0x420>
    1370:	b	1840 <sfbpf_filter+0x62c>
    1374:	b	1840 <sfbpf_filter+0x62c>
    1378:	b	1608 <sfbpf_filter+0x3f4>
    137c:	b	1840 <sfbpf_filter+0x62c>
    1380:	b	1840 <sfbpf_filter+0x62c>
    1384:	b	1840 <sfbpf_filter+0x62c>
    1388:	b	15fc <sfbpf_filter+0x3e8>
    138c:	b	15e4 <sfbpf_filter+0x3d0>
    1390:	b	1840 <sfbpf_filter+0x62c>
    1394:	b	1840 <sfbpf_filter+0x62c>
    1398:	b	15c8 <sfbpf_filter+0x3b4>
    139c:	b	1840 <sfbpf_filter+0x62c>
    13a0:	b	1840 <sfbpf_filter+0x62c>
    13a4:	b	1840 <sfbpf_filter+0x62c>
    13a8:	b	15b8 <sfbpf_filter+0x3a4>
    13ac:	b	1840 <sfbpf_filter+0x62c>
    13b0:	b	1840 <sfbpf_filter+0x62c>
    13b4:	b	1840 <sfbpf_filter+0x62c>
    13b8:	b	1840 <sfbpf_filter+0x62c>
    13bc:	b	1840 <sfbpf_filter+0x62c>
    13c0:	b	1840 <sfbpf_filter+0x62c>
    13c4:	b	1840 <sfbpf_filter+0x62c>
    13c8:	b	15ac <sfbpf_filter+0x398>
    13cc:	b	1840 <sfbpf_filter+0x62c>
    13d0:	b	1840 <sfbpf_filter+0x62c>
    13d4:	b	1840 <sfbpf_filter+0x62c>
    13d8:	b	1594 <sfbpf_filter+0x380>
    13dc:	b	157c <sfbpf_filter+0x368>
    13e0:	b	1840 <sfbpf_filter+0x62c>
    13e4:	b	1840 <sfbpf_filter+0x62c>
    13e8:	b	156c <sfbpf_filter+0x358>
    13ec:	b	1840 <sfbpf_filter+0x62c>
    13f0:	b	1840 <sfbpf_filter+0x62c>
    13f4:	b	1840 <sfbpf_filter+0x62c>
    13f8:	b	1840 <sfbpf_filter+0x62c>
    13fc:	b	1840 <sfbpf_filter+0x62c>
    1400:	b	1840 <sfbpf_filter+0x62c>
    1404:	b	1840 <sfbpf_filter+0x62c>
    1408:	b	1560 <sfbpf_filter+0x34c>
    140c:	b	1840 <sfbpf_filter+0x62c>
    1410:	b	1840 <sfbpf_filter+0x62c>
    1414:	b	1840 <sfbpf_filter+0x62c>
    1418:	b	1840 <sfbpf_filter+0x62c>
    141c:	b	1840 <sfbpf_filter+0x62c>
    1420:	b	1840 <sfbpf_filter+0x62c>
    1424:	b	1840 <sfbpf_filter+0x62c>
    1428:	b	1550 <sfbpf_filter+0x33c>
    142c:	b	1840 <sfbpf_filter+0x62c>
    1430:	b	1840 <sfbpf_filter+0x62c>
    1434:	b	1840 <sfbpf_filter+0x62c>
    1438:	b	1840 <sfbpf_filter+0x62c>
    143c:	b	1840 <sfbpf_filter+0x62c>
    1440:	b	1840 <sfbpf_filter+0x62c>
    1444:	b	1840 <sfbpf_filter+0x62c>
    1448:	b	1544 <sfbpf_filter+0x330>
    144c:	b	1840 <sfbpf_filter+0x62c>
    1450:	b	1840 <sfbpf_filter+0x62c>
    1454:	b	1840 <sfbpf_filter+0x62c>
    1458:	b	1538 <sfbpf_filter+0x324>
    145c:	b	1834 <sfbpf_filter+0x620>
    1460:	b	1840 <sfbpf_filter+0x62c>
    1464:	b	1840 <sfbpf_filter+0x62c>
    1468:	b	1828 <sfbpf_filter+0x614>
    146c:	b	1840 <sfbpf_filter+0x62c>
    1470:	b	1840 <sfbpf_filter+0x62c>
    1474:	b	181c <sfbpf_filter+0x608>
    1478:	b	1840 <sfbpf_filter+0x62c>
    147c:	b	1840 <sfbpf_filter+0x62c>
    1480:	b	1840 <sfbpf_filter+0x62c>
    1484:	b	1840 <sfbpf_filter+0x62c>
    1488:	b	1840 <sfbpf_filter+0x62c>
    148c:	b	1840 <sfbpf_filter+0x62c>
    1490:	b	1840 <sfbpf_filter+0x62c>
    1494:	b	1840 <sfbpf_filter+0x62c>
    1498:	b	1840 <sfbpf_filter+0x62c>
    149c:	b	1840 <sfbpf_filter+0x62c>
    14a0:	b	1840 <sfbpf_filter+0x62c>
    14a4:	b	1840 <sfbpf_filter+0x62c>
    14a8:	b	1840 <sfbpf_filter+0x62c>
    14ac:	b	1840 <sfbpf_filter+0x62c>
    14b0:	b	1840 <sfbpf_filter+0x62c>
    14b4:	b	1840 <sfbpf_filter+0x62c>
    14b8:	b	1840 <sfbpf_filter+0x62c>
    14bc:	b	1840 <sfbpf_filter+0x62c>
    14c0:	b	1840 <sfbpf_filter+0x62c>
    14c4:	b	1840 <sfbpf_filter+0x62c>
    14c8:	b	1840 <sfbpf_filter+0x62c>
    14cc:	b	1840 <sfbpf_filter+0x62c>
    14d0:	b	1840 <sfbpf_filter+0x62c>
    14d4:	b	1840 <sfbpf_filter+0x62c>
    14d8:	b	1840 <sfbpf_filter+0x62c>
    14dc:	b	1840 <sfbpf_filter+0x62c>
    14e0:	b	1840 <sfbpf_filter+0x62c>
    14e4:	b	1840 <sfbpf_filter+0x62c>
    14e8:	b	1840 <sfbpf_filter+0x62c>
    14ec:	b	1840 <sfbpf_filter+0x62c>
    14f0:	b	1840 <sfbpf_filter+0x62c>
    14f4:	b	1840 <sfbpf_filter+0x62c>
    14f8:	b	1840 <sfbpf_filter+0x62c>
    14fc:	b	1840 <sfbpf_filter+0x62c>
    1500:	b	1840 <sfbpf_filter+0x62c>
    1504:	b	1840 <sfbpf_filter+0x62c>
    1508:	b	1840 <sfbpf_filter+0x62c>
    150c:	b	1840 <sfbpf_filter+0x62c>
    1510:	b	1840 <sfbpf_filter+0x62c>
    1514:	b	1840 <sfbpf_filter+0x62c>
    1518:	b	1840 <sfbpf_filter+0x62c>
    151c:	b	17fc <sfbpf_filter+0x5e8>
    1520:	ldr	r3, [ip, #12]
    1524:	cmp	r4, r3
    1528:	bhi	15d8 <sfbpf_filter+0x3c4>
    152c:	mov	r0, #0
    1530:	add	sp, sp, #64	; 0x40
    1534:	pop	{r4, r5, r6, r7, r8, pc}
    1538:	mov	ip, r5
    153c:	mov	r0, r7
    1540:	b	1244 <sfbpf_filter+0x30>
    1544:	lsr	r0, r0, r8
    1548:	mov	ip, r5
    154c:	b	1244 <sfbpf_filter+0x30>
    1550:	ldr	r3, [ip, #12]
    1554:	mov	ip, r5
    1558:	lsr	r0, r0, r3
    155c:	b	1244 <sfbpf_filter+0x30>
    1560:	lsl	r0, r0, r8
    1564:	mov	ip, r5
    1568:	b	1244 <sfbpf_filter+0x30>
    156c:	ldr	r3, [ip, #12]
    1570:	mov	ip, r5
    1574:	lsl	r0, r0, r3
    1578:	b	1244 <sfbpf_filter+0x30>
    157c:	ldr	r3, [ip, #12]
    1580:	add	r2, sp, #64	; 0x40
    1584:	mov	ip, r5
    1588:	add	r3, r2, r3, lsl #2
    158c:	ldr	r8, [r3, #-64]	; 0xffffffc0
    1590:	b	1244 <sfbpf_filter+0x30>
    1594:	ldr	r3, [ip, #12]
    1598:	add	r2, sp, #64	; 0x40
    159c:	mov	ip, r5
    15a0:	add	r3, r2, r3, lsl #2
    15a4:	ldr	r0, [r3, #-64]	; 0xffffffc0
    15a8:	b	1244 <sfbpf_filter+0x30>
    15ac:	and	r0, r0, r8
    15b0:	mov	ip, r5
    15b4:	b	1244 <sfbpf_filter+0x30>
    15b8:	ldr	r3, [ip, #12]
    15bc:	mov	ip, r5
    15c0:	and	r0, r0, r3
    15c4:	b	1244 <sfbpf_filter+0x30>
    15c8:	ldr	r3, [ip, #12]
    15cc:	add	r3, r8, r3
    15d0:	cmp	r4, r3
    15d4:	bls	152c <sfbpf_filter+0x318>
    15d8:	ldrb	r0, [r6, r3]
    15dc:	mov	ip, r5
    15e0:	b	1244 <sfbpf_filter+0x30>
    15e4:	tst	r0, r8
    15e8:	beq	1640 <sfbpf_filter+0x42c>
    15ec:	ldrb	ip, [ip, #10]
    15f0:	lsl	ip, ip, #3
    15f4:	add	ip, r5, ip
    15f8:	b	1244 <sfbpf_filter+0x30>
    15fc:	orr	r0, r0, r8
    1600:	mov	ip, r5
    1604:	b	1244 <sfbpf_filter+0x30>
    1608:	ldr	r3, [ip, #12]
    160c:	add	r3, r8, r3
    1610:	add	r2, r3, #2
    1614:	cmp	r4, r2
    1618:	bcc	152c <sfbpf_filter+0x318>
    161c:	add	r2, r6, r3
    1620:	ldrb	r3, [r6, r3]
    1624:	ldrb	r0, [r2, #1]
    1628:	mov	ip, r5
    162c:	orr	r0, r0, r3, lsl #8
    1630:	b	1244 <sfbpf_filter+0x30>
    1634:	ldr	r3, [ip, #12]
    1638:	tst	r0, r3
    163c:	bne	15ec <sfbpf_filter+0x3d8>
    1640:	ldrb	ip, [ip, #11]
    1644:	lsl	ip, ip, #3
    1648:	b	15f4 <sfbpf_filter+0x3e0>
    164c:	ldr	r3, [ip, #12]
    1650:	mov	ip, r5
    1654:	orr	r0, r0, r3
    1658:	b	1244 <sfbpf_filter+0x30>
    165c:	ldr	r3, [ip, #12]
    1660:	add	r3, r8, r3
    1664:	add	r2, r3, #4
    1668:	cmp	r4, r2
    166c:	bcc	152c <sfbpf_filter+0x318>
    1670:	add	r2, r6, r3
    1674:	ldrb	lr, [r6, r3]
    1678:	ldrb	r0, [r2, #1]
    167c:	ldrb	r1, [r2, #3]
    1680:	ldrb	r3, [r2, #2]
    1684:	mov	ip, r5
    1688:	lsl	r0, r0, #16
    168c:	orr	r0, r0, lr, lsl #24
    1690:	orr	r0, r0, r1
    1694:	orr	r0, r0, r3, lsl #8
    1698:	b	1244 <sfbpf_filter+0x30>
    169c:	cmp	r0, r8
    16a0:	bcc	1640 <sfbpf_filter+0x42c>
    16a4:	b	15ec <sfbpf_filter+0x3d8>
    16a8:	cmp	r8, #0
    16ac:	beq	1844 <sfbpf_filter+0x630>
    16b0:	mov	r1, r8
    16b4:	bl	204e4 <__udivsi3>
    16b8:	mov	ip, r5
    16bc:	b	1244 <sfbpf_filter+0x30>
    16c0:	ldr	r3, [ip, #12]
    16c4:	cmp	r0, r3
    16c8:	bcc	1640 <sfbpf_filter+0x42c>
    16cc:	b	15ec <sfbpf_filter+0x3d8>
    16d0:	ldr	r1, [ip, #12]
    16d4:	bl	204e4 <__udivsi3>
    16d8:	mov	ip, r5
    16dc:	b	1244 <sfbpf_filter+0x30>
    16e0:	cmp	r0, r8
    16e4:	bls	1640 <sfbpf_filter+0x42c>
    16e8:	b	15ec <sfbpf_filter+0x3d8>
    16ec:	mul	r0, r8, r0
    16f0:	mov	ip, r5
    16f4:	b	1244 <sfbpf_filter+0x30>
    16f8:	ldr	r3, [ip, #12]
    16fc:	add	r2, r3, #2
    1700:	cmp	r2, r4
    1704:	bls	161c <sfbpf_filter+0x408>
    1708:	b	152c <sfbpf_filter+0x318>
    170c:	ldr	r3, [ip, #12]
    1710:	cmp	r0, r3
    1714:	bls	1640 <sfbpf_filter+0x42c>
    1718:	b	15ec <sfbpf_filter+0x3d8>
    171c:	ldr	r3, [ip, #12]
    1720:	mov	ip, r5
    1724:	mul	r0, r3, r0
    1728:	b	1244 <sfbpf_filter+0x30>
    172c:	ldr	r3, [ip, #12]
    1730:	add	r2, r3, #4
    1734:	cmp	r4, r2
    1738:	bcs	1670 <sfbpf_filter+0x45c>
    173c:	b	152c <sfbpf_filter+0x318>
    1740:	cmp	r0, r8
    1744:	bne	1640 <sfbpf_filter+0x42c>
    1748:	b	15ec <sfbpf_filter+0x3d8>
    174c:	sub	r0, r0, r8
    1750:	mov	ip, r5
    1754:	b	1244 <sfbpf_filter+0x30>
    1758:	ldr	r3, [ip, #12]
    175c:	cmp	r0, r3
    1760:	bne	1640 <sfbpf_filter+0x42c>
    1764:	b	15ec <sfbpf_filter+0x3d8>
    1768:	ldr	r3, [ip, #12]
    176c:	mov	ip, r5
    1770:	sub	r0, r0, r3
    1774:	b	1244 <sfbpf_filter+0x30>
    1778:	add	r0, r0, r8
    177c:	mov	ip, r5
    1780:	b	1244 <sfbpf_filter+0x30>
    1784:	mov	ip, r5
    1788:	mov	r8, r0
    178c:	b	1244 <sfbpf_filter+0x30>
    1790:	ldr	r0, [ip, #12]
    1794:	b	1530 <sfbpf_filter+0x31c>
    1798:	ldr	ip, [ip, #12]
    179c:	add	ip, r5, ip, lsl #3
    17a0:	b	1244 <sfbpf_filter+0x30>
    17a4:	ldr	r3, [ip, #12]
    17a8:	mov	ip, r5
    17ac:	add	r0, r0, r3
    17b0:	b	1244 <sfbpf_filter+0x30>
    17b4:	ldr	r3, [ip, #12]
    17b8:	add	r2, sp, #64	; 0x40
    17bc:	mov	ip, r5
    17c0:	add	r3, r2, r3, lsl #2
    17c4:	str	r8, [r3, #-64]	; 0xffffffc0
    17c8:	b	1244 <sfbpf_filter+0x30>
    17cc:	ldr	r3, [ip, #12]
    17d0:	add	r2, sp, #64	; 0x40
    17d4:	mov	ip, r5
    17d8:	add	r3, r2, r3, lsl #2
    17dc:	str	r0, [r3, #-64]	; 0xffffffc0
    17e0:	b	1244 <sfbpf_filter+0x30>
    17e4:	ldr	r8, [ip, #12]
    17e8:	mov	ip, r5
    17ec:	b	1244 <sfbpf_filter+0x30>
    17f0:	ldr	r0, [ip, #12]
    17f4:	mov	ip, r5
    17f8:	b	1244 <sfbpf_filter+0x30>
    17fc:	ldr	r3, [ip, #12]
    1800:	cmp	r4, r3
    1804:	bls	152c <sfbpf_filter+0x318>
    1808:	ldrb	r8, [r6, r3]
    180c:	mov	ip, r5
    1810:	lsl	r8, r8, #2
    1814:	and	r8, r8, #60	; 0x3c
    1818:	b	1244 <sfbpf_filter+0x30>
    181c:	mov	ip, r5
    1820:	mov	r0, r8
    1824:	b	1244 <sfbpf_filter+0x30>
    1828:	rsb	r0, r0, #0
    182c:	mov	ip, r5
    1830:	b	1244 <sfbpf_filter+0x30>
    1834:	mov	ip, r5
    1838:	mov	r8, r7
    183c:	b	1244 <sfbpf_filter+0x30>
    1840:	bl	f18 <abort@plt>
    1844:	mov	r0, r8
    1848:	b	1530 <sfbpf_filter+0x31c>

0000184c <sfbpf_validate>:
    184c:	cmp	r1, #0
    1850:	ble	19b0 <sfbpf_validate+0x164>
    1854:	push	{lr}		; (str lr, [sp, #-4]!)
    1858:	mov	ip, #1
    185c:	mov	lr, r0
    1860:	ldrh	r2, [lr]
    1864:	and	r3, r2, #7
    1868:	sub	r3, r3, #2
    186c:	cmp	r3, #5
    1870:	addls	pc, pc, r3, lsl #2
    1874:	b	18fc <sfbpf_validate+0xb0>
    1878:	b	1924 <sfbpf_validate+0xd8>
    187c:	b	1924 <sfbpf_validate+0xd8>
    1880:	b	1890 <sfbpf_validate+0x44>
    1884:	b	1938 <sfbpf_validate+0xec>
    1888:	b	18d0 <sfbpf_validate+0x84>
    188c:	b	18d0 <sfbpf_validate+0x84>
    1890:	and	r3, r2, #240	; 0xf0
    1894:	cmp	r3, #64	; 0x40
    1898:	beq	18d0 <sfbpf_validate+0x84>
    189c:	bhi	19cc <sfbpf_validate+0x180>
    18a0:	cmp	r3, #16
    18a4:	beq	18d0 <sfbpf_validate+0x84>
    18a8:	bls	1a00 <sfbpf_validate+0x1b4>
    18ac:	cmp	r3, #32
    18b0:	beq	18d0 <sfbpf_validate+0x84>
    18b4:	cmp	r3, #48	; 0x30
    18b8:	bne	1930 <sfbpf_validate+0xe4>
    18bc:	tst	r2, #24
    18c0:	bne	18d0 <sfbpf_validate+0x84>
    18c4:	ldr	r3, [lr, #4]
    18c8:	cmp	r3, #0
    18cc:	beq	1930 <sfbpf_validate+0xe4>
    18d0:	cmp	r1, ip
    18d4:	add	lr, lr, #8
    18d8:	add	ip, ip, #1
    18dc:	bhi	1860 <sfbpf_validate+0x14>
    18e0:	add	r1, r0, r1, lsl #3
    18e4:	ldrh	r0, [r1, #-8]
    18e8:	and	r0, r0, #7
    18ec:	sub	r0, r0, #6
    18f0:	clz	r0, r0
    18f4:	lsr	r0, r0, #5
    18f8:	pop	{pc}		; (ldr pc, [sp], #4)
    18fc:	and	r2, r2, #224	; 0xe0
    1900:	cmp	r2, #64	; 0x40
    1904:	beq	18d0 <sfbpf_validate+0x84>
    1908:	bls	19ec <sfbpf_validate+0x1a0>
    190c:	cmp	r2, #128	; 0x80
    1910:	beq	18d0 <sfbpf_validate+0x84>
    1914:	cmp	r2, #160	; 0xa0
    1918:	beq	18d0 <sfbpf_validate+0x84>
    191c:	cmp	r2, #96	; 0x60
    1920:	bne	1930 <sfbpf_validate+0xe4>
    1924:	ldr	r3, [lr, #4]
    1928:	cmp	r3, #15
    192c:	bls	18d0 <sfbpf_validate+0x84>
    1930:	mov	r0, #0
    1934:	pop	{pc}		; (ldr pc, [sp], #4)
    1938:	and	r2, r2, #240	; 0xf0
    193c:	cmp	r2, #32
    1940:	beq	197c <sfbpf_validate+0x130>
    1944:	bhi	19b8 <sfbpf_validate+0x16c>
    1948:	cmp	r2, #0
    194c:	bne	1974 <sfbpf_validate+0x128>
    1950:	ldr	r3, [lr, #4]
    1954:	add	r3, ip, r3
    1958:	cmp	r3, r1
    195c:	bcs	1930 <sfbpf_validate+0xe4>
    1960:	cmp	r1, ip
    1964:	add	lr, lr, #8
    1968:	add	ip, ip, #1
    196c:	bhi	1860 <sfbpf_validate+0x14>
    1970:	b	18e0 <sfbpf_validate+0x94>
    1974:	cmp	r2, #16
    1978:	bne	1930 <sfbpf_validate+0xe4>
    197c:	ldrb	r3, [lr, #2]
    1980:	add	r3, r3, ip
    1984:	cmp	r3, r1
    1988:	bcs	1930 <sfbpf_validate+0xe4>
    198c:	ldrb	r3, [lr, #3]
    1990:	add	r3, r3, ip
    1994:	cmp	r3, r1
    1998:	bcs	1930 <sfbpf_validate+0xe4>
    199c:	cmp	r1, ip
    19a0:	add	lr, lr, #8
    19a4:	add	ip, ip, #1
    19a8:	bhi	1860 <sfbpf_validate+0x14>
    19ac:	b	18e0 <sfbpf_validate+0x94>
    19b0:	mov	r0, #0
    19b4:	bx	lr
    19b8:	cmp	r2, #48	; 0x30
    19bc:	beq	197c <sfbpf_validate+0x130>
    19c0:	cmp	r2, #64	; 0x40
    19c4:	bne	1930 <sfbpf_validate+0xe4>
    19c8:	b	197c <sfbpf_validate+0x130>
    19cc:	cmp	r3, #96	; 0x60
    19d0:	beq	18d0 <sfbpf_validate+0x84>
    19d4:	bls	1a0c <sfbpf_validate+0x1c0>
    19d8:	cmp	r3, #112	; 0x70
    19dc:	beq	18d0 <sfbpf_validate+0x84>
    19e0:	cmp	r3, #128	; 0x80
    19e4:	bne	1930 <sfbpf_validate+0xe4>
    19e8:	b	18d0 <sfbpf_validate+0x84>
    19ec:	cmp	r2, #0
    19f0:	beq	18d0 <sfbpf_validate+0x84>
    19f4:	cmp	r2, #32
    19f8:	bne	1930 <sfbpf_validate+0xe4>
    19fc:	b	18d0 <sfbpf_validate+0x84>
    1a00:	cmp	r3, #0
    1a04:	bne	1930 <sfbpf_validate+0xe4>
    1a08:	b	18d0 <sfbpf_validate+0x84>
    1a0c:	cmp	r3, #80	; 0x50
    1a10:	bne	1930 <sfbpf_validate+0xe4>
    1a14:	b	18d0 <sfbpf_validate+0x84>

00001a18 <sfbpf_print>:
    1a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a1c:	mov	r7, r0
    1a20:	ldr	r0, [pc, #2124]	; 2274 <sfbpf_print+0x85c>
    1a24:	sub	sp, sp, #28
    1a28:	add	r0, pc, r0
    1a2c:	mov	r8, r1
    1a30:	bl	e10 <puts@plt>
    1a34:	ldr	r3, [r7]
    1a38:	cmp	r3, #0
    1a3c:	beq	1bb0 <sfbpf_print+0x198>
    1a40:	ldr	r3, [pc, #2096]	; 2278 <sfbpf_print+0x860>
    1a44:	ldr	r9, [pc, #2096]	; 227c <sfbpf_print+0x864>
    1a48:	add	r3, pc, r3
    1a4c:	str	r3, [sp, #4]
    1a50:	ldr	r3, [pc, #2088]	; 2280 <sfbpf_print+0x868>
    1a54:	add	r9, pc, r9
    1a58:	add	r3, pc, r3
    1a5c:	str	r3, [sp, #12]
    1a60:	ldr	r3, [pc, #2076]	; 2284 <sfbpf_print+0x86c>
    1a64:	mov	r5, #1
    1a68:	add	r3, pc, r3
    1a6c:	str	r3, [sp, #16]
    1a70:	ldr	r3, [pc, #2064]	; 2288 <sfbpf_print+0x870>
    1a74:	mov	r4, #0
    1a78:	add	r3, pc, r3
    1a7c:	str	r3, [sp, #20]
    1a80:	ldr	r3, [pc, #2052]	; 228c <sfbpf_print+0x874>
    1a84:	add	r3, pc, r3
    1a88:	str	r3, [sp, #8]
    1a8c:	ldr	fp, [r7, #4]
    1a90:	mov	r1, r4
    1a94:	mov	r0, r9
    1a98:	bl	d68 <printf@plt>
    1a9c:	lsl	sl, r4, #3
    1aa0:	cmp	r8, #0
    1aa4:	add	r6, fp, sl
    1aa8:	beq	1dd4 <sfbpf_print+0x3bc>
    1aac:	ldr	r3, [pc, #2012]	; 2290 <sfbpf_print+0x878>
    1ab0:	ldrh	r0, [fp, sl]
    1ab4:	add	r3, pc, r3
    1ab8:	ldr	r1, [r3, #4]
    1abc:	and	r0, r0, #7
    1ac0:	cmp	r1, #0
    1ac4:	beq	1af0 <sfbpf_print+0xd8>
    1ac8:	ldr	r2, [r3]
    1acc:	cmp	r0, r2
    1ad0:	bne	1ae4 <sfbpf_print+0xcc>
    1ad4:	b	1af0 <sfbpf_print+0xd8>
    1ad8:	ldr	r2, [r3, #8]!
    1adc:	cmp	r0, r2
    1ae0:	beq	1af0 <sfbpf_print+0xd8>
    1ae4:	ldr	r1, [r3, #12]
    1ae8:	cmp	r1, #0
    1aec:	bne	1ad8 <sfbpf_print+0xc0>
    1af0:	ldr	r0, [pc, #1948]	; 2294 <sfbpf_print+0x87c>
    1af4:	add	r0, pc, r0
    1af8:	bl	d68 <printf@plt>
    1afc:	ldrh	r3, [fp, sl]
    1b00:	and	r2, r3, #7
    1b04:	cmp	r2, #7
    1b08:	addls	pc, pc, r2, lsl #2
    1b0c:	b	1b80 <sfbpf_print+0x168>
    1b10:	b	1d3c <sfbpf_print+0x324>
    1b14:	b	1d3c <sfbpf_print+0x324>
    1b18:	b	1b80 <sfbpf_print+0x168>
    1b1c:	b	1b80 <sfbpf_print+0x168>
    1b20:	b	1ca4 <sfbpf_print+0x28c>
    1b24:	b	1c0c <sfbpf_print+0x1f4>
    1b28:	b	1bb8 <sfbpf_print+0x1a0>
    1b2c:	b	1b30 <sfbpf_print+0x118>
    1b30:	ldr	r2, [pc, #1888]	; 2298 <sfbpf_print+0x880>
    1b34:	and	r3, r3, #248	; 0xf8
    1b38:	add	r2, pc, r2
    1b3c:	ldr	r1, [r2, #348]	; 0x15c
    1b40:	cmp	r1, #0
    1b44:	beq	1b74 <sfbpf_print+0x15c>
    1b48:	ldr	r0, [r2, #344]	; 0x158
    1b4c:	cmp	r3, r0
    1b50:	addne	r2, r2, #344	; 0x158
    1b54:	bne	1b68 <sfbpf_print+0x150>
    1b58:	b	1b74 <sfbpf_print+0x15c>
    1b5c:	ldr	r0, [r2, #8]!
    1b60:	cmp	r3, r0
    1b64:	beq	1b74 <sfbpf_print+0x15c>
    1b68:	ldr	r1, [r2, #12]
    1b6c:	cmp	r1, #0
    1b70:	bne	1b5c <sfbpf_print+0x144>
    1b74:	ldr	r0, [pc, #1824]	; 229c <sfbpf_print+0x884>
    1b78:	add	r0, pc, r0
    1b7c:	bl	d68 <printf@plt>
    1b80:	ldr	r0, [pc, #1816]	; 22a0 <sfbpf_print+0x888>
    1b84:	ldrb	r2, [r6, #3]
    1b88:	ldr	r3, [r6, #4]
    1b8c:	ldrb	r1, [r6, #2]
    1b90:	add	r0, pc, r0
    1b94:	bl	d68 <printf@plt>
    1b98:	mov	r2, r5
    1b9c:	ldr	r3, [r7]
    1ba0:	add	r4, r4, #1
    1ba4:	cmp	r3, r2
    1ba8:	add	r5, r5, #1
    1bac:	bhi	1a8c <sfbpf_print+0x74>
    1bb0:	add	sp, sp, #28
    1bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1bb8:	ldr	r2, [pc, #1764]	; 22a4 <sfbpf_print+0x88c>
    1bbc:	and	r3, r3, #24
    1bc0:	add	r2, pc, r2
    1bc4:	ldr	r1, [r2, #316]	; 0x13c
    1bc8:	cmp	r1, #0
    1bcc:	beq	1bfc <sfbpf_print+0x1e4>
    1bd0:	ldr	r0, [r2, #312]	; 0x138
    1bd4:	cmp	r3, r0
    1bd8:	addne	r2, r2, #312	; 0x138
    1bdc:	bne	1bf0 <sfbpf_print+0x1d8>
    1be0:	b	1bfc <sfbpf_print+0x1e4>
    1be4:	ldr	r0, [r2, #8]!
    1be8:	cmp	r3, r0
    1bec:	beq	1bfc <sfbpf_print+0x1e4>
    1bf0:	ldr	r1, [r2, #12]
    1bf4:	cmp	r1, #0
    1bf8:	bne	1be4 <sfbpf_print+0x1cc>
    1bfc:	ldr	r0, [pc, #1700]	; 22a8 <sfbpf_print+0x890>
    1c00:	add	r0, pc, r0
    1c04:	bl	d68 <printf@plt>
    1c08:	b	1b80 <sfbpf_print+0x168>
    1c0c:	ldr	r2, [pc, #1688]	; 22ac <sfbpf_print+0x894>
    1c10:	and	ip, r3, #240	; 0xf0
    1c14:	add	r2, pc, r2
    1c18:	ldr	r1, [r2, #268]	; 0x10c
    1c1c:	cmp	r1, #0
    1c20:	beq	1c50 <sfbpf_print+0x238>
    1c24:	ldr	r0, [r2, #264]	; 0x108
    1c28:	cmp	ip, r0
    1c2c:	addne	r2, r2, #264	; 0x108
    1c30:	bne	1c44 <sfbpf_print+0x22c>
    1c34:	b	1c50 <sfbpf_print+0x238>
    1c38:	ldr	r0, [r2, #8]!
    1c3c:	cmp	ip, r0
    1c40:	beq	1c50 <sfbpf_print+0x238>
    1c44:	ldr	r1, [r2, #12]
    1c48:	cmp	r1, #0
    1c4c:	bne	1c38 <sfbpf_print+0x220>
    1c50:	ldr	r0, [pc, #1624]	; 22b0 <sfbpf_print+0x898>
    1c54:	and	r3, r3, #8
    1c58:	add	r0, pc, r0
    1c5c:	ldr	r2, [r0, #244]	; 0xf4
    1c60:	cmp	r2, #0
    1c64:	beq	1c94 <sfbpf_print+0x27c>
    1c68:	ldr	ip, [r0, #240]	; 0xf0
    1c6c:	cmp	r3, ip
    1c70:	addne	r0, r0, #240	; 0xf0
    1c74:	bne	1c88 <sfbpf_print+0x270>
    1c78:	b	1c94 <sfbpf_print+0x27c>
    1c7c:	ldr	ip, [r0, #8]!
    1c80:	cmp	r3, ip
    1c84:	beq	1c94 <sfbpf_print+0x27c>
    1c88:	ldr	r2, [r0, #12]
    1c8c:	cmp	r2, #0
    1c90:	bne	1c7c <sfbpf_print+0x264>
    1c94:	ldr	r0, [pc, #1560]	; 22b4 <sfbpf_print+0x89c>
    1c98:	add	r0, pc, r0
    1c9c:	bl	d68 <printf@plt>
    1ca0:	b	1b80 <sfbpf_print+0x168>
    1ca4:	ldr	r2, [pc, #1548]	; 22b8 <sfbpf_print+0x8a0>
    1ca8:	and	ip, r3, #240	; 0xf0
    1cac:	add	r2, pc, r2
    1cb0:	ldr	r1, [r2, #164]	; 0xa4
    1cb4:	cmp	r1, #0
    1cb8:	beq	1ce8 <sfbpf_print+0x2d0>
    1cbc:	ldr	r0, [r2, #160]	; 0xa0
    1cc0:	cmp	ip, r0
    1cc4:	addne	r2, r2, #160	; 0xa0
    1cc8:	bne	1cdc <sfbpf_print+0x2c4>
    1ccc:	b	1ce8 <sfbpf_print+0x2d0>
    1cd0:	ldr	r0, [r2, #8]!
    1cd4:	cmp	ip, r0
    1cd8:	beq	1ce8 <sfbpf_print+0x2d0>
    1cdc:	ldr	r1, [r2, #12]
    1ce0:	cmp	r1, #0
    1ce4:	bne	1cd0 <sfbpf_print+0x2b8>
    1ce8:	ldr	r0, [pc, #1484]	; 22bc <sfbpf_print+0x8a4>
    1cec:	and	r3, r3, #8
    1cf0:	add	r0, pc, r0
    1cf4:	ldr	r2, [r0, #244]	; 0xf4
    1cf8:	cmp	r2, #0
    1cfc:	beq	1d2c <sfbpf_print+0x314>
    1d00:	ldr	ip, [r0, #240]	; 0xf0
    1d04:	cmp	r3, ip
    1d08:	addne	r0, r0, #240	; 0xf0
    1d0c:	bne	1d20 <sfbpf_print+0x308>
    1d10:	b	1d2c <sfbpf_print+0x314>
    1d14:	ldr	ip, [r0, #8]!
    1d18:	cmp	r3, ip
    1d1c:	beq	1d2c <sfbpf_print+0x314>
    1d20:	ldr	r2, [r0, #12]
    1d24:	cmp	r2, #0
    1d28:	bne	1d14 <sfbpf_print+0x2fc>
    1d2c:	ldr	r0, [pc, #1420]	; 22c0 <sfbpf_print+0x8a8>
    1d30:	add	r0, pc, r0
    1d34:	bl	d68 <printf@plt>
    1d38:	b	1b80 <sfbpf_print+0x168>
    1d3c:	ldr	r2, [pc, #1408]	; 22c4 <sfbpf_print+0x8ac>
    1d40:	and	ip, r3, #24
    1d44:	add	r2, pc, r2
    1d48:	ldr	r1, [r2, #76]	; 0x4c
    1d4c:	cmp	r1, #0
    1d50:	beq	1d80 <sfbpf_print+0x368>
    1d54:	ldr	r0, [r2, #72]	; 0x48
    1d58:	cmp	ip, r0
    1d5c:	addne	r2, r2, #72	; 0x48
    1d60:	bne	1d74 <sfbpf_print+0x35c>
    1d64:	b	1d80 <sfbpf_print+0x368>
    1d68:	ldr	r0, [r2, #8]!
    1d6c:	cmp	ip, r0
    1d70:	beq	1d80 <sfbpf_print+0x368>
    1d74:	ldr	r1, [r2, #12]
    1d78:	cmp	r1, #0
    1d7c:	bne	1d68 <sfbpf_print+0x350>
    1d80:	ldr	r0, [pc, #1344]	; 22c8 <sfbpf_print+0x8b0>
    1d84:	and	r3, r3, #224	; 0xe0
    1d88:	add	r0, pc, r0
    1d8c:	ldr	r2, [r0, #108]	; 0x6c
    1d90:	cmp	r2, #0
    1d94:	beq	1dc4 <sfbpf_print+0x3ac>
    1d98:	ldr	ip, [r0, #104]	; 0x68
    1d9c:	cmp	r3, ip
    1da0:	addne	r0, r0, #104	; 0x68
    1da4:	bne	1db8 <sfbpf_print+0x3a0>
    1da8:	b	1dc4 <sfbpf_print+0x3ac>
    1dac:	ldr	ip, [r0, #8]!
    1db0:	cmp	r3, ip
    1db4:	beq	1dc4 <sfbpf_print+0x3ac>
    1db8:	ldr	r2, [r0, #12]
    1dbc:	cmp	r2, #0
    1dc0:	bne	1dac <sfbpf_print+0x394>
    1dc4:	ldr	r0, [pc, #1280]	; 22cc <sfbpf_print+0x8b4>
    1dc8:	add	r0, pc, r0
    1dcc:	bl	d68 <printf@plt>
    1dd0:	b	1b80 <sfbpf_print+0x168>
    1dd4:	ldrh	r2, [fp, sl]
    1dd8:	and	r3, r2, #7
    1ddc:	sub	r3, r3, #1
    1de0:	cmp	r3, #6
    1de4:	addls	pc, pc, r3, lsl #2
    1de8:	b	1f7c <sfbpf_print+0x564>
    1dec:	b	1f38 <sfbpf_print+0x520>
    1df0:	b	1f20 <sfbpf_print+0x508>
    1df4:	b	1f08 <sfbpf_print+0x4f0>
    1df8:	b	1ec8 <sfbpf_print+0x4b0>
    1dfc:	b	1e50 <sfbpf_print+0x438>
    1e00:	b	1e08 <sfbpf_print+0x3f0>
    1e04:	b	1fe0 <sfbpf_print+0x5c8>
    1e08:	ldr	r0, [sp, #8]
    1e0c:	bl	d68 <printf@plt>
    1e10:	ldrh	r3, [fp, sl]
    1e14:	and	r3, r3, #24
    1e18:	cmp	r3, #8
    1e1c:	beq	20dc <sfbpf_print+0x6c4>
    1e20:	cmp	r3, #16
    1e24:	beq	2228 <sfbpf_print+0x810>
    1e28:	cmp	r3, #0
    1e2c:	beq	210c <sfbpf_print+0x6f4>
    1e30:	ldr	r0, [pc, #1176]	; 22d0 <sfbpf_print+0x8b8>
    1e34:	add	r0, pc, r0
    1e38:	bl	d68 <printf@plt>
    1e3c:	ldr	r0, [pc, #1168]	; 22d4 <sfbpf_print+0x8bc>
    1e40:	add	r0, pc, r0
    1e44:	bl	e10 <puts@plt>
    1e48:	mov	r2, r5
    1e4c:	b	1b9c <sfbpf_print+0x184>
    1e50:	and	r2, r2, #240	; 0xf0
    1e54:	cmp	r2, #32
    1e58:	beq	2134 <sfbpf_print+0x71c>
    1e5c:	bhi	208c <sfbpf_print+0x674>
    1e60:	cmp	r2, #0
    1e64:	beq	2188 <sfbpf_print+0x770>
    1e68:	ldr	r1, [pc, #1128]	; 22d8 <sfbpf_print+0x8c0>
    1e6c:	cmp	r2, #16
    1e70:	add	r1, pc, r1
    1e74:	bne	20ac <sfbpf_print+0x694>
    1e78:	ldr	r0, [pc, #1116]	; 22dc <sfbpf_print+0x8c4>
    1e7c:	add	r0, pc, r0
    1e80:	bl	d68 <printf@plt>
    1e84:	ldrh	r3, [fp, sl]
    1e88:	ands	r3, r3, #8
    1e8c:	beq	2214 <sfbpf_print+0x7fc>
    1e90:	cmp	r3, #8
    1e94:	beq	20d0 <sfbpf_print+0x6b8>
    1e98:	ldr	r0, [pc, #1088]	; 22e0 <sfbpf_print+0x8c8>
    1e9c:	add	r0, pc, r0
    1ea0:	bl	d68 <printf@plt>
    1ea4:	ldrb	r2, [r6, #3]
    1ea8:	ldrb	r1, [r6, #2]
    1eac:	ldr	r0, [pc, #1072]	; 22e4 <sfbpf_print+0x8cc>
    1eb0:	add	r2, r2, r5
    1eb4:	add	r0, pc, r0
    1eb8:	add	r1, r1, r5
    1ebc:	bl	d68 <printf@plt>
    1ec0:	mov	r2, r5
    1ec4:	b	1b9c <sfbpf_print+0x184>
    1ec8:	and	r2, r2, #240	; 0xf0
    1ecc:	cmp	r2, #64	; 0x40
    1ed0:	beq	2244 <sfbpf_print+0x82c>
    1ed4:	bls	2014 <sfbpf_print+0x5fc>
    1ed8:	cmp	r2, #96	; 0x60
    1edc:	beq	2268 <sfbpf_print+0x850>
    1ee0:	bls	21c0 <sfbpf_print+0x7a8>
    1ee4:	cmp	r2, #112	; 0x70
    1ee8:	beq	2250 <sfbpf_print+0x838>
    1eec:	cmp	r2, #128	; 0x80
    1ef0:	bne	21b4 <sfbpf_print+0x79c>
    1ef4:	ldr	r0, [pc, #1004]	; 22e8 <sfbpf_print+0x8d0>
    1ef8:	add	r0, pc, r0
    1efc:	bl	e10 <puts@plt>
    1f00:	mov	r2, r5
    1f04:	b	1b9c <sfbpf_print+0x184>
    1f08:	ldr	r0, [pc, #988]	; 22ec <sfbpf_print+0x8d4>
    1f0c:	ldr	r1, [r6, #4]
    1f10:	add	r0, pc, r0
    1f14:	bl	d68 <printf@plt>
    1f18:	mov	r2, r5
    1f1c:	b	1b9c <sfbpf_print+0x184>
    1f20:	ldr	r0, [pc, #968]	; 22f0 <sfbpf_print+0x8d8>
    1f24:	ldr	r1, [r6, #4]
    1f28:	add	r0, pc, r0
    1f2c:	bl	d68 <printf@plt>
    1f30:	mov	r2, r5
    1f34:	b	1b9c <sfbpf_print+0x184>
    1f38:	ldr	r0, [pc, #948]	; 22f4 <sfbpf_print+0x8dc>
    1f3c:	add	r0, pc, r0
    1f40:	bl	d68 <printf@plt>
    1f44:	ldrh	r3, [fp, sl]
    1f48:	and	r3, r3, #224	; 0xe0
    1f4c:	cmp	r3, #96	; 0x60
    1f50:	beq	20f8 <sfbpf_print+0x6e0>
    1f54:	bls	21d4 <sfbpf_print+0x7bc>
    1f58:	cmp	r3, #128	; 0x80
    1f5c:	beq	20e8 <sfbpf_print+0x6d0>
    1f60:	cmp	r3, #160	; 0xa0
    1f64:	bne	2004 <sfbpf_print+0x5ec>
    1f68:	ldr	r0, [pc, #904]	; 22f8 <sfbpf_print+0x8e0>
    1f6c:	ldr	r1, [r6, #4]
    1f70:	add	r0, pc, r0
    1f74:	bl	d68 <printf@plt>
    1f78:	b	2004 <sfbpf_print+0x5ec>
    1f7c:	ldr	r0, [pc, #888]	; 22fc <sfbpf_print+0x8e4>
    1f80:	add	r0, pc, r0
    1f84:	bl	d68 <printf@plt>
    1f88:	ldrh	r3, [fp, sl]
    1f8c:	and	r2, r3, #224	; 0xe0
    1f90:	cmp	r2, #64	; 0x40
    1f94:	beq	2140 <sfbpf_print+0x728>
    1f98:	bhi	206c <sfbpf_print+0x654>
    1f9c:	cmp	r2, #0
    1fa0:	beq	2174 <sfbpf_print+0x75c>
    1fa4:	cmp	r2, #32
    1fa8:	bne	2234 <sfbpf_print+0x81c>
    1fac:	ands	r3, r3, #24
    1fb0:	ldr	r1, [r6, #4]
    1fb4:	moveq	r2, #4
    1fb8:	beq	1fd0 <sfbpf_print+0x5b8>
    1fbc:	cmp	r3, #8
    1fc0:	subne	r2, r3, #16
    1fc4:	moveq	r2, #2
    1fc8:	clzne	r2, r2
    1fcc:	lsrne	r2, r2, #5
    1fd0:	ldr	r0, [pc, #808]	; 2300 <sfbpf_print+0x8e8>
    1fd4:	add	r0, pc, r0
    1fd8:	bl	d68 <printf@plt>
    1fdc:	b	2004 <sfbpf_print+0x5ec>
    1fe0:	ldr	r0, [sp, #4]
    1fe4:	bl	d68 <printf@plt>
    1fe8:	ldrh	r3, [fp, sl]
    1fec:	ands	r3, r3, #248	; 0xf8
    1ff0:	beq	20c4 <sfbpf_print+0x6ac>
    1ff4:	cmp	r3, #128	; 0x80
    1ff8:	beq	20b8 <sfbpf_print+0x6a0>
    1ffc:	ldr	r0, [sp, #16]
    2000:	bl	d68 <printf@plt>
    2004:	mov	r0, #10
    2008:	bl	e94 <putchar@plt>
    200c:	mov	r2, r5
    2010:	b	1b9c <sfbpf_print+0x184>
    2014:	cmp	r2, #16
    2018:	beq	225c <sfbpf_print+0x844>
    201c:	bls	21a4 <sfbpf_print+0x78c>
    2020:	ldr	r1, [pc, #732]	; 2304 <sfbpf_print+0x8ec>
    2024:	cmp	r2, #32
    2028:	add	r1, pc, r1
    202c:	beq	2040 <sfbpf_print+0x628>
    2030:	ldr	r1, [pc, #720]	; 2308 <sfbpf_print+0x8f0>
    2034:	cmp	r2, #48	; 0x30
    2038:	add	r1, pc, r1
    203c:	bne	21b4 <sfbpf_print+0x79c>
    2040:	ldr	r0, [pc, #708]	; 230c <sfbpf_print+0x8f4>
    2044:	add	r0, pc, r0
    2048:	bl	d68 <printf@plt>
    204c:	ldrh	r3, [fp, sl]
    2050:	ands	r3, r3, #8
    2054:	beq	2200 <sfbpf_print+0x7e8>
    2058:	cmp	r3, #8
    205c:	bne	21f0 <sfbpf_print+0x7d8>
    2060:	mov	r0, #88	; 0x58
    2064:	bl	e94 <putchar@plt>
    2068:	b	2004 <sfbpf_print+0x5ec>
    206c:	cmp	r2, #96	; 0x60
    2070:	beq	2120 <sfbpf_print+0x708>
    2074:	cmp	r2, #128	; 0x80
    2078:	bne	2234 <sfbpf_print+0x81c>
    207c:	ldr	r0, [pc, #652]	; 2310 <sfbpf_print+0x8f8>
    2080:	add	r0, pc, r0
    2084:	bl	d68 <printf@plt>
    2088:	b	2004 <sfbpf_print+0x5ec>
    208c:	ldr	r1, [pc, #640]	; 2314 <sfbpf_print+0x8fc>
    2090:	cmp	r2, #48	; 0x30
    2094:	add	r1, pc, r1
    2098:	beq	1e78 <sfbpf_print+0x460>
    209c:	ldr	r1, [pc, #628]	; 2318 <sfbpf_print+0x900>
    20a0:	cmp	r2, #64	; 0x40
    20a4:	add	r1, pc, r1
    20a8:	beq	1e78 <sfbpf_print+0x460>
    20ac:	ldr	r1, [pc, #616]	; 231c <sfbpf_print+0x904>
    20b0:	add	r1, pc, r1
    20b4:	b	1e78 <sfbpf_print+0x460>
    20b8:	ldr	r0, [sp, #20]
    20bc:	bl	d68 <printf@plt>
    20c0:	b	2004 <sfbpf_print+0x5ec>
    20c4:	ldr	r0, [sp, #12]
    20c8:	bl	d68 <printf@plt>
    20cc:	b	2004 <sfbpf_print+0x5ec>
    20d0:	mov	r0, #88	; 0x58
    20d4:	bl	e94 <putchar@plt>
    20d8:	b	1ea4 <sfbpf_print+0x48c>
    20dc:	mov	r0, #88	; 0x58
    20e0:	bl	e94 <putchar@plt>
    20e4:	b	1e3c <sfbpf_print+0x424>
    20e8:	ldr	r0, [pc, #560]	; 2320 <sfbpf_print+0x908>
    20ec:	add	r0, pc, r0
    20f0:	bl	d68 <printf@plt>
    20f4:	b	2004 <sfbpf_print+0x5ec>
    20f8:	ldr	r0, [pc, #548]	; 2324 <sfbpf_print+0x90c>
    20fc:	ldr	r1, [r6, #4]
    2100:	add	r0, pc, r0
    2104:	bl	d68 <printf@plt>
    2108:	b	2004 <sfbpf_print+0x5ec>
    210c:	ldr	r0, [pc, #532]	; 2328 <sfbpf_print+0x910>
    2110:	ldr	r1, [r6, #4]
    2114:	add	r0, pc, r0
    2118:	bl	d68 <printf@plt>
    211c:	b	1e3c <sfbpf_print+0x424>
    2120:	ldr	r0, [pc, #516]	; 232c <sfbpf_print+0x914>
    2124:	ldr	r1, [r6, #4]
    2128:	add	r0, pc, r0
    212c:	bl	d68 <printf@plt>
    2130:	b	2004 <sfbpf_print+0x5ec>
    2134:	ldr	r1, [pc, #500]	; 2330 <sfbpf_print+0x918>
    2138:	add	r1, pc, r1
    213c:	b	1e78 <sfbpf_print+0x460>
    2140:	ands	r3, r3, #24
    2144:	ldr	r1, [r6, #4]
    2148:	moveq	r2, #4
    214c:	beq	2164 <sfbpf_print+0x74c>
    2150:	cmp	r3, #8
    2154:	subne	r2, r3, #16
    2158:	moveq	r2, #2
    215c:	clzne	r2, r2
    2160:	lsrne	r2, r2, #5
    2164:	ldr	r0, [pc, #456]	; 2334 <sfbpf_print+0x91c>
    2168:	add	r0, pc, r0
    216c:	bl	d68 <printf@plt>
    2170:	b	2004 <sfbpf_print+0x5ec>
    2174:	ldr	r0, [pc, #444]	; 2338 <sfbpf_print+0x920>
    2178:	ldr	r1, [r6, #4]
    217c:	add	r0, pc, r0
    2180:	bl	d68 <printf@plt>
    2184:	b	2004 <sfbpf_print+0x5ec>
    2188:	ldr	r1, [r6, #4]
    218c:	ldr	r0, [pc, #424]	; 233c <sfbpf_print+0x924>
    2190:	add	r1, r5, r1
    2194:	add	r0, pc, r0
    2198:	bl	d68 <printf@plt>
    219c:	mov	r2, r5
    21a0:	b	1b9c <sfbpf_print+0x184>
    21a4:	ldr	r1, [pc, #404]	; 2340 <sfbpf_print+0x928>
    21a8:	cmp	r2, #0
    21ac:	add	r1, pc, r1
    21b0:	beq	2040 <sfbpf_print+0x628>
    21b4:	ldr	r1, [pc, #392]	; 2344 <sfbpf_print+0x92c>
    21b8:	add	r1, pc, r1
    21bc:	b	2040 <sfbpf_print+0x628>
    21c0:	ldr	r1, [pc, #384]	; 2348 <sfbpf_print+0x930>
    21c4:	cmp	r2, #80	; 0x50
    21c8:	add	r1, pc, r1
    21cc:	beq	2040 <sfbpf_print+0x628>
    21d0:	b	21b4 <sfbpf_print+0x79c>
    21d4:	cmp	r3, #0
    21d8:	bne	2004 <sfbpf_print+0x5ec>
    21dc:	ldr	r0, [pc, #360]	; 234c <sfbpf_print+0x934>
    21e0:	ldr	r1, [r6, #4]
    21e4:	add	r0, pc, r0
    21e8:	bl	d68 <printf@plt>
    21ec:	b	2004 <sfbpf_print+0x5ec>
    21f0:	ldr	r0, [pc, #344]	; 2350 <sfbpf_print+0x938>
    21f4:	add	r0, pc, r0
    21f8:	bl	d68 <printf@plt>
    21fc:	b	2004 <sfbpf_print+0x5ec>
    2200:	ldr	r0, [pc, #332]	; 2354 <sfbpf_print+0x93c>
    2204:	ldr	r1, [r6, #4]
    2208:	add	r0, pc, r0
    220c:	bl	d68 <printf@plt>
    2210:	b	2004 <sfbpf_print+0x5ec>
    2214:	ldr	r0, [pc, #316]	; 2358 <sfbpf_print+0x940>
    2218:	ldr	r1, [r6, #4]
    221c:	add	r0, pc, r0
    2220:	bl	d68 <printf@plt>
    2224:	b	1ea4 <sfbpf_print+0x48c>
    2228:	mov	r0, #65	; 0x41
    222c:	bl	e94 <putchar@plt>
    2230:	b	1e3c <sfbpf_print+0x424>
    2234:	ldr	r0, [pc, #288]	; 235c <sfbpf_print+0x944>
    2238:	add	r0, pc, r0
    223c:	bl	d68 <printf@plt>
    2240:	b	2004 <sfbpf_print+0x5ec>
    2244:	ldr	r1, [pc, #276]	; 2360 <sfbpf_print+0x948>
    2248:	add	r1, pc, r1
    224c:	b	2040 <sfbpf_print+0x628>
    2250:	ldr	r1, [pc, #268]	; 2364 <sfbpf_print+0x94c>
    2254:	add	r1, pc, r1
    2258:	b	2040 <sfbpf_print+0x628>
    225c:	ldr	r1, [pc, #260]	; 2368 <sfbpf_print+0x950>
    2260:	add	r1, pc, r1
    2264:	b	2040 <sfbpf_print+0x628>
    2268:	ldr	r1, [pc, #252]	; 236c <sfbpf_print+0x954>
    226c:	add	r1, pc, r1
    2270:	b	2040 <sfbpf_print+0x628>
    2274:	.word	0x0001ed08
    2278:	.word	0x0001ee24
    227c:	.word	0x0001ecec
    2280:	.word	0x0001ee1c
    2284:	.word	0x0001ecb8
    2288:	.word	0x0001ee04
    228c:	.word	0x0001edd0
    2290:	.word	0x0003c654
    2294:	.word	0x0001ed4c
    2298:	.word	0x0003c5d0
    229c:	.word	0x0001ec00
    22a0:	.word	0x0001ebf0
    22a4:	.word	0x0003c548
    22a8:	.word	0x0001eb6c
    22ac:	.word	0x0003c4f4
    22b0:	.word	0x0003c4b0
    22b4:	.word	0x0001eac4
    22b8:	.word	0x0003c45c
    22bc:	.word	0x0003c418
    22c0:	.word	0x0001ea2c
    22c4:	.word	0x0003c3c4
    22c8:	.word	0x0003c380
    22cc:	.word	0x0001e980
    22d0:	.word	0x0001e8ec
    22d4:	.word	0x0001ea24
    22d8:	.word	0x0001e8b4
    22dc:	.word	0x0001e9bc
    22e0:	.word	0x0001e884
    22e4:	.word	0x0001e990
    22e8:	.word	0x0001e918
    22ec:	.word	0x0001e8ec
    22f0:	.word	0x0001e8c0
    22f4:	.word	0x0001e890
    22f8:	.word	0x0001e868
    22fc:	.word	0x0001e818
    2300:	.word	0x0001e7d0
    2304:	.word	0x0001e6e0
    2308:	.word	0x0001e6d4
    230c:	.word	0x0001e7d4
    2310:	.word	0x0001e73c
    2314:	.word	0x0001e698
    2318:	.word	0x0001e670
    231c:	.word	0x0001e670
    2320:	.word	0x0001e6d0
    2324:	.word	0x0001e6c4
    2328:	.word	0x0001e6ac
    232c:	.word	0x0001e69c
    2330:	.word	0x0001e5f0
    2334:	.word	0x0001e648
    2338:	.word	0x0001e644
    233c:	.word	0x0001e698
    2340:	.word	0x0001e554
    2344:	.word	0x0001e568
    2348:	.word	0x0001e54c
    234c:	.word	0x0001e5dc
    2350:	.word	0x0001e52c
    2354:	.word	0x0001e5b8
    2358:	.word	0x0001e5a4
    235c:	.word	0x0001e4e8
    2360:	.word	0x0001e4c8
    2364:	.word	0x0001e4c8
    2368:	.word	0x0001e4a4
    236c:	.word	0x0001e4ac

00002370 <sf_bpf_error>:
    2370:	ldr	r4, [pc, #52]	; 23ac <sf_bpf_error+0x3c>
    2374:	push	{r0, r1, r2, r3}
    2378:	add	r4, pc, r4
    237c:	push	{lr}		; (str lr, [sp, #-4]!)
    2380:	sub	sp, sp, #12
    2384:	add	ip, sp, #20
    2388:	mov	r1, #256	; 0x100
    238c:	mov	r0, r4
    2390:	mov	r3, ip
    2394:	ldr	r2, [sp, #16]
    2398:	str	ip, [sp, #4]
    239c:	bl	ed0 <vsnprintf@plt>
    23a0:	add	r0, r4, #264	; 0x108
    23a4:	mov	r1, #1
    23a8:	bl	d8c <longjmp@plt>
    23ac:	.word	0x0003bff0

000023b0 <alloc_reg>:
    23b0:	ldr	r2, [pc, #760]	; 26b0 <alloc_reg+0x300>
    23b4:	add	r2, pc, r2
    23b8:	ldr	r0, [r2, #656]	; 0x290
    23bc:	lsl	r3, r0, #2
    23c0:	add	r1, r2, r3
    23c4:	ldr	r1, [r1, #660]	; 0x294
    23c8:	cmp	r1, #0
    23cc:	beq	2698 <alloc_reg+0x2e8>
    23d0:	add	r0, r0, #1
    23d4:	asr	r3, r0, #31
    23d8:	lsr	r3, r3, #28
    23dc:	add	r0, r0, r3
    23e0:	and	r0, r0, #15
    23e4:	sub	r0, r0, r3
    23e8:	str	r0, [r2, #656]	; 0x290
    23ec:	lsl	r3, r0, #2
    23f0:	add	r1, r2, r3
    23f4:	ldr	r1, [r1, #660]	; 0x294
    23f8:	cmp	r1, #0
    23fc:	beq	2698 <alloc_reg+0x2e8>
    2400:	add	r0, r0, #1
    2404:	asr	r3, r0, #31
    2408:	lsr	r3, r3, #28
    240c:	add	r0, r0, r3
    2410:	and	r0, r0, #15
    2414:	sub	r0, r0, r3
    2418:	lsl	r3, r0, #2
    241c:	add	r1, r2, r3
    2420:	ldr	r1, [r1, #660]	; 0x294
    2424:	cmp	r1, #0
    2428:	beq	268c <alloc_reg+0x2dc>
    242c:	add	r0, r0, #1
    2430:	asr	r3, r0, #31
    2434:	lsr	r3, r3, #28
    2438:	add	r0, r0, r3
    243c:	and	r0, r0, #15
    2440:	sub	r0, r0, r3
    2444:	lsl	r3, r0, #2
    2448:	add	r1, r2, r3
    244c:	ldr	r1, [r1, #660]	; 0x294
    2450:	cmp	r1, #0
    2454:	beq	268c <alloc_reg+0x2dc>
    2458:	add	r0, r0, #1
    245c:	asr	r3, r0, #31
    2460:	lsr	r3, r3, #28
    2464:	add	r0, r0, r3
    2468:	and	r0, r0, #15
    246c:	sub	r0, r0, r3
    2470:	lsl	r3, r0, #2
    2474:	add	r1, r2, r3
    2478:	ldr	r1, [r1, #660]	; 0x294
    247c:	cmp	r1, #0
    2480:	beq	268c <alloc_reg+0x2dc>
    2484:	add	r0, r0, #1
    2488:	asr	r3, r0, #31
    248c:	lsr	r3, r3, #28
    2490:	add	r0, r0, r3
    2494:	and	r0, r0, #15
    2498:	sub	r0, r0, r3
    249c:	lsl	r3, r0, #2
    24a0:	add	r1, r2, r3
    24a4:	ldr	r1, [r1, #660]	; 0x294
    24a8:	cmp	r1, #0
    24ac:	beq	268c <alloc_reg+0x2dc>
    24b0:	add	r0, r0, #1
    24b4:	asr	r3, r0, #31
    24b8:	lsr	r3, r3, #28
    24bc:	add	r0, r0, r3
    24c0:	and	r0, r0, #15
    24c4:	sub	r0, r0, r3
    24c8:	lsl	r3, r0, #2
    24cc:	add	r1, r2, r3
    24d0:	ldr	r1, [r1, #660]	; 0x294
    24d4:	cmp	r1, #0
    24d8:	beq	268c <alloc_reg+0x2dc>
    24dc:	add	r0, r0, #1
    24e0:	asr	r3, r0, #31
    24e4:	lsr	r3, r3, #28
    24e8:	add	r0, r0, r3
    24ec:	and	r0, r0, #15
    24f0:	sub	r0, r0, r3
    24f4:	lsl	r3, r0, #2
    24f8:	add	r1, r2, r3
    24fc:	ldr	r1, [r1, #660]	; 0x294
    2500:	cmp	r1, #0
    2504:	beq	268c <alloc_reg+0x2dc>
    2508:	add	r0, r0, #1
    250c:	asr	r3, r0, #31
    2510:	lsr	r3, r3, #28
    2514:	add	r0, r0, r3
    2518:	and	r0, r0, #15
    251c:	sub	r0, r0, r3
    2520:	lsl	r3, r0, #2
    2524:	add	r1, r2, r3
    2528:	ldr	r1, [r1, #660]	; 0x294
    252c:	cmp	r1, #0
    2530:	beq	268c <alloc_reg+0x2dc>
    2534:	add	r0, r0, #1
    2538:	asr	r3, r0, #31
    253c:	lsr	r3, r3, #28
    2540:	add	r0, r0, r3
    2544:	and	r0, r0, #15
    2548:	sub	r0, r0, r3
    254c:	lsl	r3, r0, #2
    2550:	add	r2, r2, r3
    2554:	ldr	r2, [r2, #660]	; 0x294
    2558:	cmp	r2, #0
    255c:	beq	268c <alloc_reg+0x2dc>
    2560:	add	r0, r0, #1
    2564:	ldr	r2, [pc, #328]	; 26b4 <alloc_reg+0x304>
    2568:	asr	r3, r0, #31
    256c:	add	r2, pc, r2
    2570:	lsr	r3, r3, #28
    2574:	add	r0, r0, r3
    2578:	and	r0, r0, #15
    257c:	sub	r0, r0, r3
    2580:	lsl	r3, r0, #2
    2584:	add	r1, r2, r3
    2588:	ldr	r1, [r1, #660]	; 0x294
    258c:	cmp	r1, #0
    2590:	beq	268c <alloc_reg+0x2dc>
    2594:	add	r0, r0, #1
    2598:	asr	r3, r0, #31
    259c:	lsr	r3, r3, #28
    25a0:	add	r0, r0, r3
    25a4:	and	r0, r0, #15
    25a8:	sub	r0, r0, r3
    25ac:	lsl	r3, r0, #2
    25b0:	add	r1, r2, r3
    25b4:	ldr	r1, [r1, #660]	; 0x294
    25b8:	cmp	r1, #0
    25bc:	beq	268c <alloc_reg+0x2dc>
    25c0:	add	r0, r0, #1
    25c4:	asr	r3, r0, #31
    25c8:	lsr	r3, r3, #28
    25cc:	add	r0, r0, r3
    25d0:	and	r0, r0, #15
    25d4:	sub	r0, r0, r3
    25d8:	lsl	r3, r0, #2
    25dc:	add	r1, r2, r3
    25e0:	ldr	r1, [r1, #660]	; 0x294
    25e4:	cmp	r1, #0
    25e8:	beq	268c <alloc_reg+0x2dc>
    25ec:	add	r0, r0, #1
    25f0:	asr	r3, r0, #31
    25f4:	lsr	r3, r3, #28
    25f8:	add	r0, r0, r3
    25fc:	and	r0, r0, #15
    2600:	sub	r0, r0, r3
    2604:	lsl	r3, r0, #2
    2608:	add	r1, r2, r3
    260c:	ldr	r1, [r1, #660]	; 0x294
    2610:	cmp	r1, #0
    2614:	beq	268c <alloc_reg+0x2dc>
    2618:	add	r0, r0, #1
    261c:	asr	r3, r0, #31
    2620:	lsr	r3, r3, #28
    2624:	add	r0, r0, r3
    2628:	and	r0, r0, #15
    262c:	sub	r0, r0, r3
    2630:	lsl	r3, r0, #2
    2634:	add	r1, r2, r3
    2638:	ldr	r1, [r1, #660]	; 0x294
    263c:	cmp	r1, #0
    2640:	beq	268c <alloc_reg+0x2dc>
    2644:	add	r0, r0, #1
    2648:	asr	r3, r0, #31
    264c:	lsr	r3, r3, #28
    2650:	add	r0, r0, r3
    2654:	and	r0, r0, #15
    2658:	sub	r0, r0, r3
    265c:	lsl	r3, r0, #2
    2660:	add	r1, r2, r3
    2664:	ldr	r1, [r1, #660]	; 0x294
    2668:	cmp	r1, #0
    266c:	beq	268c <alloc_reg+0x2dc>
    2670:	add	r0, r0, #1
    2674:	and	r3, r0, #15
    2678:	ldr	r0, [pc, #56]	; 26b8 <alloc_reg+0x308>
    267c:	push	{r4, lr}
    2680:	add	r0, pc, r0
    2684:	str	r3, [r2, #656]	; 0x290
    2688:	bl	2370 <sf_bpf_error>
    268c:	ldr	r2, [pc, #40]	; 26bc <alloc_reg+0x30c>
    2690:	add	r2, pc, r2
    2694:	str	r0, [r2, #656]	; 0x290
    2698:	ldr	r2, [pc, #32]	; 26c0 <alloc_reg+0x310>
    269c:	mov	r1, #1
    26a0:	add	r2, pc, r2
    26a4:	add	r3, r2, r3
    26a8:	str	r1, [r3, #660]	; 0x294
    26ac:	bx	lr
    26b0:	.word	0x0003bfb4
    26b4:	.word	0x0003bdfc
    26b8:	.word	0x0001e2c8
    26bc:	.word	0x0003bcd8
    26c0:	.word	0x0003bcc8

000026c4 <lookup_proto>:
    26c4:	push	{r4, lr}
    26c8:	mov	r4, r0
    26cc:	cmp	r1, #24
    26d0:	addls	pc, pc, r1, lsl #2
    26d4:	b	27a0 <lookup_proto+0xdc>
    26d8:	b	2784 <lookup_proto+0xc0>
    26dc:	b	2758 <lookup_proto+0x94>
    26e0:	b	2784 <lookup_proto+0xc0>
    26e4:	b	27a0 <lookup_proto+0xdc>
    26e8:	b	27a0 <lookup_proto+0xdc>
    26ec:	b	27a0 <lookup_proto+0xdc>
    26f0:	b	27a0 <lookup_proto+0xdc>
    26f4:	b	27a0 <lookup_proto+0xdc>
    26f8:	b	27a0 <lookup_proto+0xdc>
    26fc:	b	27a0 <lookup_proto+0xdc>
    2700:	b	27a0 <lookup_proto+0xdc>
    2704:	b	27a0 <lookup_proto+0xdc>
    2708:	b	27a0 <lookup_proto+0xdc>
    270c:	b	27a0 <lookup_proto+0xdc>
    2710:	b	27a0 <lookup_proto+0xdc>
    2714:	b	27a0 <lookup_proto+0xdc>
    2718:	b	27a0 <lookup_proto+0xdc>
    271c:	b	2784 <lookup_proto+0xc0>
    2720:	b	27a0 <lookup_proto+0xdc>
    2724:	b	27a0 <lookup_proto+0xdc>
    2728:	b	27a0 <lookup_proto+0xdc>
    272c:	b	27a0 <lookup_proto+0xdc>
    2730:	b	27a0 <lookup_proto+0xdc>
    2734:	b	27a0 <lookup_proto+0xdc>
    2738:	b	273c <lookup_proto+0x78>
    273c:	ldr	r1, [pc, #180]	; 27f8 <lookup_proto+0x134>
    2740:	add	r1, pc, r1
    2744:	bl	d50 <strcmp@plt>
    2748:	cmp	r0, #0
    274c:	bne	27a8 <lookup_proto+0xe4>
    2750:	mov	r0, #130	; 0x82
    2754:	pop	{r4, pc}
    2758:	bl	1139c <pcap_nametoeproto>
    275c:	cmn	r0, #1
    2760:	popne	{r4, pc}
    2764:	mov	r0, r4
    2768:	bl	113ec <pcap_nametollc>
    276c:	cmn	r0, #1
    2770:	popne	{r4, pc}
    2774:	ldr	r0, [pc, #128]	; 27fc <lookup_proto+0x138>
    2778:	mov	r1, r4
    277c:	add	r0, pc, r0
    2780:	bl	2370 <sf_bpf_error>
    2784:	bl	11384 <pcap_nametoproto>
    2788:	cmn	r0, #1
    278c:	popne	{r4, pc}
    2790:	ldr	r0, [pc, #104]	; 2800 <lookup_proto+0x13c>
    2794:	mov	r1, r4
    2798:	add	r0, pc, r0
    279c:	bl	2370 <sf_bpf_error>
    27a0:	mvn	r0, #0
    27a4:	pop	{r4, pc}
    27a8:	ldr	r1, [pc, #84]	; 2804 <lookup_proto+0x140>
    27ac:	mov	r0, r4
    27b0:	add	r1, pc, r1
    27b4:	bl	d50 <strcmp@plt>
    27b8:	cmp	r0, #0
    27bc:	bne	27c8 <lookup_proto+0x104>
    27c0:	mov	r0, #131	; 0x83
    27c4:	pop	{r4, pc}
    27c8:	ldr	r1, [pc, #56]	; 2808 <lookup_proto+0x144>
    27cc:	mov	r0, r4
    27d0:	add	r1, pc, r1
    27d4:	bl	d50 <strcmp@plt>
    27d8:	cmp	r0, #0
    27dc:	bne	27e8 <lookup_proto+0x124>
    27e0:	mov	r0, #129	; 0x81
    27e4:	pop	{r4, pc}
    27e8:	ldr	r0, [pc, #28]	; 280c <lookup_proto+0x148>
    27ec:	mov	r1, r4
    27f0:	add	r0, pc, r0
    27f4:	bl	2370 <sf_bpf_error>
    27f8:	.word	0x0001e270
    27fc:	.word	0x0001e218
    2800:	.word	0x0001e1e4
    2804:	.word	0x0001e208
    2808:	.word	0x0001e1f0
    280c:	.word	0x0001e1d8

00002810 <newchunk.constprop.49>:
    2810:	ldr	r3, [pc, #144]	; 28a8 <newchunk.constprop.49+0x98>
    2814:	push	{r4, r5, r6, lr}
    2818:	add	r3, pc, r3
    281c:	add	r2, r3, #728	; 0x2d8
    2820:	ldr	r4, [r3, #724]	; 0x2d4
    2824:	lsl	r5, r4, #3
    2828:	add	r1, r3, r5
    282c:	add	r5, r2, r5
    2830:	ldr	r1, [r1, #728]	; 0x2d8
    2834:	cmp	r1, #19
    2838:	bhi	288c <newchunk.constprop.49+0x7c>
    283c:	add	r0, r4, #1
    2840:	cmp	r0, #15
    2844:	str	r0, [r3, #724]	; 0x2d4
    2848:	add	r6, r5, #8
    284c:	bgt	289c <newchunk.constprop.49+0x8c>
    2850:	mov	r4, #1024	; 0x400
    2854:	mov	r1, #1
    2858:	lsl	r4, r4, r0
    285c:	mov	r0, r4
    2860:	bl	d38 <calloc@plt>
    2864:	cmp	r0, #0
    2868:	str	r0, [r5, #12]
    286c:	beq	289c <newchunk.constprop.49+0x8c>
    2870:	cmp	r4, #19
    2874:	str	r4, [r5, #8]
    2878:	bls	289c <newchunk.constprop.49+0x8c>
    287c:	sub	r4, r4, #20
    2880:	str	r4, [r6]
    2884:	add	r0, r0, r4
    2888:	pop	{r4, r5, r6, pc}
    288c:	ldr	r4, [r2, r4, lsl #3]
    2890:	ldr	r0, [r5, #4]
    2894:	mov	r6, r5
    2898:	b	287c <newchunk.constprop.49+0x6c>
    289c:	ldr	r0, [pc, #8]	; 28ac <newchunk.constprop.49+0x9c>
    28a0:	add	r0, pc, r0
    28a4:	bl	2370 <sf_bpf_error>
    28a8:	.word	0x0003bb50
    28ac:	.word	0x0001e140

000028b0 <gen_load_ppi_llprefixlen>:
    28b0:	ldr	r3, [pc, #316]	; 29f4 <gen_load_ppi_llprefixlen+0x144>
    28b4:	push	{r4, r5, r6, lr}
    28b8:	add	r3, pc, r3
    28bc:	ldr	r5, [r3, #856]	; 0x358
    28c0:	cmn	r5, #1
    28c4:	beq	29ec <gen_load_ppi_llprefixlen+0x13c>
    28c8:	bl	2810 <newchunk.constprop.49>
    28cc:	mov	r2, #48	; 0x30
    28d0:	mov	r3, #3
    28d4:	str	r2, [r0]
    28d8:	str	r3, [r0, #12]
    28dc:	mov	r4, r0
    28e0:	bl	2810 <newchunk.constprop.49>
    28e4:	mov	r3, #100	; 0x64
    28e8:	mov	r2, r4
    28ec:	str	r3, [r0]
    28f0:	b	28f8 <gen_load_ppi_llprefixlen+0x48>
    28f4:	mov	r2, r3
    28f8:	ldr	r3, [r2, #16]
    28fc:	cmp	r3, #0
    2900:	bne	28f4 <gen_load_ppi_llprefixlen+0x44>
    2904:	mov	r3, #8
    2908:	str	r0, [r2, #16]
    290c:	str	r3, [r0, #12]
    2910:	bl	2810 <newchunk.constprop.49>
    2914:	mov	r3, #7
    2918:	mov	r2, r4
    291c:	str	r3, [r0]
    2920:	b	2928 <gen_load_ppi_llprefixlen+0x78>
    2924:	mov	r2, r3
    2928:	ldr	r3, [r2, #16]
    292c:	cmp	r3, #0
    2930:	bne	2924 <gen_load_ppi_llprefixlen+0x74>
    2934:	str	r0, [r2, #16]
    2938:	bl	2810 <newchunk.constprop.49>
    293c:	mov	r3, #48	; 0x30
    2940:	mov	r2, r4
    2944:	str	r3, [r0]
    2948:	b	2950 <gen_load_ppi_llprefixlen+0xa0>
    294c:	mov	r2, r3
    2950:	ldr	r3, [r2, #16]
    2954:	cmp	r3, #0
    2958:	bne	294c <gen_load_ppi_llprefixlen+0x9c>
    295c:	mov	r3, #2
    2960:	str	r0, [r2, #16]
    2964:	str	r3, [r0, #12]
    2968:	bl	2810 <newchunk.constprop.49>
    296c:	mov	r3, #76	; 0x4c
    2970:	mov	r2, r4
    2974:	str	r3, [r0]
    2978:	b	2980 <gen_load_ppi_llprefixlen+0xd0>
    297c:	mov	r2, r3
    2980:	ldr	r3, [r2, #16]
    2984:	cmp	r3, #0
    2988:	bne	297c <gen_load_ppi_llprefixlen+0xcc>
    298c:	str	r0, [r2, #16]
    2990:	bl	2810 <newchunk.constprop.49>
    2994:	mov	r3, #2
    2998:	mov	r2, r4
    299c:	str	r5, [r0, #12]
    29a0:	str	r3, [r0]
    29a4:	b	29ac <gen_load_ppi_llprefixlen+0xfc>
    29a8:	mov	r2, r3
    29ac:	ldr	r3, [r2, #16]
    29b0:	cmp	r3, #0
    29b4:	bne	29a8 <gen_load_ppi_llprefixlen+0xf8>
    29b8:	str	r0, [r2, #16]
    29bc:	bl	2810 <newchunk.constprop.49>
    29c0:	mov	r3, #7
    29c4:	mov	r2, r4
    29c8:	str	r3, [r0]
    29cc:	b	29d4 <gen_load_ppi_llprefixlen+0x124>
    29d0:	mov	r2, r3
    29d4:	ldr	r3, [r2, #16]
    29d8:	cmp	r3, #0
    29dc:	bne	29d0 <gen_load_ppi_llprefixlen+0x120>
    29e0:	str	r0, [r2, #16]
    29e4:	mov	r0, r4
    29e8:	pop	{r4, r5, r6, pc}
    29ec:	mov	r4, #0
    29f0:	b	29e4 <gen_load_ppi_llprefixlen+0x134>
    29f4:	.word	0x0003bab0

000029f8 <newchunk.constprop.50>:
    29f8:	ldr	r3, [pc, #144]	; 2a90 <newchunk.constprop.50+0x98>
    29fc:	push	{r4, r5, r6, lr}
    2a00:	add	r3, pc, r3
    2a04:	add	r2, r3, #728	; 0x2d8
    2a08:	ldr	r4, [r3, #724]	; 0x2d4
    2a0c:	lsl	r5, r4, #3
    2a10:	add	r1, r3, r5
    2a14:	add	r5, r2, r5
    2a18:	ldr	r1, [r1, #728]	; 0x2d8
    2a1c:	cmp	r1, #207	; 0xcf
    2a20:	bhi	2a74 <newchunk.constprop.50+0x7c>
    2a24:	add	r0, r4, #1
    2a28:	cmp	r0, #15
    2a2c:	str	r0, [r3, #724]	; 0x2d4
    2a30:	add	r6, r5, #8
    2a34:	bgt	2a84 <newchunk.constprop.50+0x8c>
    2a38:	mov	r4, #1024	; 0x400
    2a3c:	mov	r1, #1
    2a40:	lsl	r4, r4, r0
    2a44:	mov	r0, r4
    2a48:	bl	d38 <calloc@plt>
    2a4c:	cmp	r0, #0
    2a50:	str	r0, [r5, #12]
    2a54:	beq	2a84 <newchunk.constprop.50+0x8c>
    2a58:	cmp	r4, #207	; 0xcf
    2a5c:	str	r4, [r5, #8]
    2a60:	bls	2a84 <newchunk.constprop.50+0x8c>
    2a64:	sub	r4, r4, #208	; 0xd0
    2a68:	str	r4, [r6]
    2a6c:	add	r0, r0, r4
    2a70:	pop	{r4, r5, r6, pc}
    2a74:	ldr	r4, [r2, r4, lsl #3]
    2a78:	ldr	r0, [r5, #4]
    2a7c:	mov	r6, r5
    2a80:	b	2a64 <newchunk.constprop.50+0x6c>
    2a84:	ldr	r0, [pc, #8]	; 2a94 <newchunk.constprop.50+0x9c>
    2a88:	add	r0, pc, r0
    2a8c:	bl	2370 <sf_bpf_error>
    2a90:	.word	0x0003b968
    2a94:	.word	0x0001df58

00002a98 <gen_loadx_iphdrlen>:
    2a98:	push	{r4, r5, r6, lr}
    2a9c:	ldr	r6, [pc, #1084]	; 2ee0 <gen_loadx_iphdrlen+0x448>
    2aa0:	add	r6, pc, r6
    2aa4:	ldr	r2, [r6, #860]	; 0x35c
    2aa8:	cmp	r2, #0
    2aac:	beq	2bc0 <gen_loadx_iphdrlen+0x128>
    2ab0:	ldr	r5, [r6, #864]	; 0x360
    2ab4:	cmn	r5, #1
    2ab8:	beq	2be8 <gen_loadx_iphdrlen+0x150>
    2abc:	bl	2810 <newchunk.constprop.49>
    2ac0:	mov	r3, #97	; 0x61
    2ac4:	str	r3, [r0]
    2ac8:	str	r5, [r0, #12]
    2acc:	mov	r4, r0
    2ad0:	bl	2810 <newchunk.constprop.49>
    2ad4:	ldr	r3, [pc, #1032]	; 2ee4 <gen_loadx_iphdrlen+0x44c>
    2ad8:	mov	r2, #80	; 0x50
    2adc:	add	r3, pc, r3
    2ae0:	ldr	r3, [r3, #868]	; 0x364
    2ae4:	str	r2, [r0]
    2ae8:	str	r3, [r0, #12]
    2aec:	mov	r2, r4
    2af0:	b	2af8 <gen_loadx_iphdrlen+0x60>
    2af4:	mov	r2, r3
    2af8:	ldr	r3, [r2, #16]
    2afc:	cmp	r3, #0
    2b00:	bne	2af4 <gen_loadx_iphdrlen+0x5c>
    2b04:	str	r0, [r2, #16]
    2b08:	bl	2810 <newchunk.constprop.49>
    2b0c:	mov	r2, #84	; 0x54
    2b10:	mov	r3, #15
    2b14:	str	r2, [r0]
    2b18:	str	r3, [r0, #12]
    2b1c:	mov	r2, r4
    2b20:	b	2b28 <gen_loadx_iphdrlen+0x90>
    2b24:	mov	r2, r3
    2b28:	ldr	r3, [r2, #16]
    2b2c:	cmp	r3, #0
    2b30:	bne	2b24 <gen_loadx_iphdrlen+0x8c>
    2b34:	str	r0, [r2, #16]
    2b38:	bl	2810 <newchunk.constprop.49>
    2b3c:	mov	r2, #100	; 0x64
    2b40:	mov	r3, #2
    2b44:	str	r2, [r0]
    2b48:	str	r3, [r0, #12]
    2b4c:	mov	r2, r4
    2b50:	b	2b58 <gen_loadx_iphdrlen+0xc0>
    2b54:	mov	r2, r3
    2b58:	ldr	r3, [r2, #16]
    2b5c:	cmp	r3, #0
    2b60:	bne	2b54 <gen_loadx_iphdrlen+0xbc>
    2b64:	str	r0, [r2, #16]
    2b68:	bl	2810 <newchunk.constprop.49>
    2b6c:	mov	r3, #12
    2b70:	mov	r2, r4
    2b74:	str	r3, [r0]
    2b78:	b	2b80 <gen_loadx_iphdrlen+0xe8>
    2b7c:	mov	r2, r3
    2b80:	ldr	r3, [r2, #16]
    2b84:	cmp	r3, #0
    2b88:	bne	2b7c <gen_loadx_iphdrlen+0xe4>
    2b8c:	str	r0, [r2, #16]
    2b90:	bl	2810 <newchunk.constprop.49>
    2b94:	mov	r3, #7
    2b98:	mov	r2, r4
    2b9c:	str	r3, [r0]
    2ba0:	b	2ba8 <gen_loadx_iphdrlen+0x110>
    2ba4:	mov	r2, r3
    2ba8:	ldr	r3, [r2, #16]
    2bac:	cmp	r3, #0
    2bb0:	bne	2ba4 <gen_loadx_iphdrlen+0x10c>
    2bb4:	str	r0, [r2, #16]
    2bb8:	mov	r0, r4
    2bbc:	pop	{r4, r5, r6, pc}
    2bc0:	bl	2810 <newchunk.constprop.49>
    2bc4:	ldr	r3, [r6, #872]	; 0x368
    2bc8:	ldr	r1, [r6, #868]	; 0x364
    2bcc:	mov	r2, #177	; 0xb1
    2bd0:	add	r3, r3, r1
    2bd4:	mov	r4, r0
    2bd8:	str	r2, [r0]
    2bdc:	str	r3, [r0, #12]
    2be0:	mov	r0, r4
    2be4:	pop	{r4, r5, r6, pc}
    2be8:	ldr	r5, [r6, #656]	; 0x290
    2bec:	lsl	r2, r5, #2
    2bf0:	add	r3, r6, r2
    2bf4:	ldr	r3, [r3, #660]	; 0x294
    2bf8:	cmp	r3, #0
    2bfc:	beq	2ec4 <gen_loadx_iphdrlen+0x42c>
    2c00:	add	r5, r5, #1
    2c04:	asr	r3, r5, #31
    2c08:	lsr	r3, r3, #28
    2c0c:	add	r5, r5, r3
    2c10:	and	r5, r5, #15
    2c14:	sub	r5, r5, r3
    2c18:	str	r5, [r6, #656]	; 0x290
    2c1c:	lsl	r2, r5, #2
    2c20:	add	r3, r6, r2
    2c24:	ldr	r3, [r3, #660]	; 0x294
    2c28:	cmp	r3, #0
    2c2c:	beq	2ec4 <gen_loadx_iphdrlen+0x42c>
    2c30:	add	r5, r5, #1
    2c34:	asr	r3, r5, #31
    2c38:	lsr	r3, r3, #28
    2c3c:	add	r5, r5, r3
    2c40:	and	r5, r5, #15
    2c44:	sub	r5, r5, r3
    2c48:	lsl	r2, r5, #2
    2c4c:	add	r3, r6, r2
    2c50:	ldr	r3, [r3, #660]	; 0x294
    2c54:	cmp	r3, #0
    2c58:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2c5c:	add	r5, r5, #1
    2c60:	asr	r3, r5, #31
    2c64:	lsr	r3, r3, #28
    2c68:	add	r5, r5, r3
    2c6c:	and	r5, r5, #15
    2c70:	sub	r5, r5, r3
    2c74:	lsl	r2, r5, #2
    2c78:	add	r3, r6, r2
    2c7c:	ldr	r3, [r3, #660]	; 0x294
    2c80:	cmp	r3, #0
    2c84:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2c88:	add	r5, r5, #1
    2c8c:	asr	r3, r5, #31
    2c90:	lsr	r3, r3, #28
    2c94:	add	r5, r5, r3
    2c98:	and	r5, r5, #15
    2c9c:	sub	r5, r5, r3
    2ca0:	lsl	r2, r5, #2
    2ca4:	add	r3, r6, r2
    2ca8:	ldr	r3, [r3, #660]	; 0x294
    2cac:	cmp	r3, #0
    2cb0:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2cb4:	add	r5, r5, #1
    2cb8:	asr	r3, r5, #31
    2cbc:	lsr	r3, r3, #28
    2cc0:	add	r5, r5, r3
    2cc4:	and	r5, r5, #15
    2cc8:	sub	r5, r5, r3
    2ccc:	lsl	r2, r5, #2
    2cd0:	add	r3, r6, r2
    2cd4:	ldr	r3, [r3, #660]	; 0x294
    2cd8:	cmp	r3, #0
    2cdc:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2ce0:	add	r5, r5, #1
    2ce4:	asr	r3, r5, #31
    2ce8:	lsr	r3, r3, #28
    2cec:	add	r5, r5, r3
    2cf0:	and	r5, r5, #15
    2cf4:	sub	r5, r5, r3
    2cf8:	lsl	r2, r5, #2
    2cfc:	add	r3, r6, r2
    2d00:	ldr	r3, [r3, #660]	; 0x294
    2d04:	cmp	r3, #0
    2d08:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2d0c:	add	r5, r5, #1
    2d10:	asr	r3, r5, #31
    2d14:	lsr	r3, r3, #28
    2d18:	add	r5, r5, r3
    2d1c:	and	r5, r5, #15
    2d20:	sub	r5, r5, r3
    2d24:	lsl	r2, r5, #2
    2d28:	add	r3, r6, r2
    2d2c:	ldr	r3, [r3, #660]	; 0x294
    2d30:	cmp	r3, #0
    2d34:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2d38:	add	r5, r5, #1
    2d3c:	ldr	r3, [pc, #420]	; 2ee8 <gen_loadx_iphdrlen+0x450>
    2d40:	asr	r2, r5, #31
    2d44:	add	r3, pc, r3
    2d48:	lsr	r2, r2, #28
    2d4c:	add	r5, r5, r2
    2d50:	and	r5, r5, #15
    2d54:	sub	r5, r5, r2
    2d58:	lsl	r2, r5, #2
    2d5c:	add	r1, r3, r2
    2d60:	ldr	r1, [r1, #660]	; 0x294
    2d64:	cmp	r1, #0
    2d68:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2d6c:	add	r5, r5, #1
    2d70:	asr	r2, r5, #31
    2d74:	lsr	r2, r2, #28
    2d78:	add	r5, r5, r2
    2d7c:	and	r5, r5, #15
    2d80:	sub	r5, r5, r2
    2d84:	lsl	r2, r5, #2
    2d88:	add	r1, r3, r2
    2d8c:	ldr	r1, [r1, #660]	; 0x294
    2d90:	cmp	r1, #0
    2d94:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2d98:	add	r5, r5, #1
    2d9c:	asr	r2, r5, #31
    2da0:	lsr	r2, r2, #28
    2da4:	add	r5, r5, r2
    2da8:	and	r5, r5, #15
    2dac:	sub	r5, r5, r2
    2db0:	lsl	r2, r5, #2
    2db4:	add	r1, r3, r2
    2db8:	ldr	r1, [r1, #660]	; 0x294
    2dbc:	cmp	r1, #0
    2dc0:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2dc4:	add	r5, r5, #1
    2dc8:	asr	r2, r5, #31
    2dcc:	lsr	r2, r2, #28
    2dd0:	add	r5, r5, r2
    2dd4:	and	r5, r5, #15
    2dd8:	sub	r5, r5, r2
    2ddc:	lsl	r2, r5, #2
    2de0:	add	r1, r3, r2
    2de4:	ldr	r1, [r1, #660]	; 0x294
    2de8:	cmp	r1, #0
    2dec:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2df0:	add	r5, r5, #1
    2df4:	asr	r2, r5, #31
    2df8:	lsr	r2, r2, #28
    2dfc:	add	r5, r5, r2
    2e00:	and	r5, r5, #15
    2e04:	sub	r5, r5, r2
    2e08:	lsl	r2, r5, #2
    2e0c:	add	r1, r3, r2
    2e10:	ldr	r1, [r1, #660]	; 0x294
    2e14:	cmp	r1, #0
    2e18:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2e1c:	add	r5, r5, #1
    2e20:	asr	r2, r5, #31
    2e24:	lsr	r2, r2, #28
    2e28:	add	r5, r5, r2
    2e2c:	and	r5, r5, #15
    2e30:	sub	r5, r5, r2
    2e34:	lsl	r2, r5, #2
    2e38:	add	r1, r3, r2
    2e3c:	ldr	r1, [r1, #660]	; 0x294
    2e40:	cmp	r1, #0
    2e44:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2e48:	add	r5, r5, #1
    2e4c:	asr	r2, r5, #31
    2e50:	lsr	r2, r2, #28
    2e54:	add	r5, r5, r2
    2e58:	and	r5, r5, #15
    2e5c:	sub	r5, r5, r2
    2e60:	lsl	r2, r5, #2
    2e64:	add	r1, r3, r2
    2e68:	ldr	r1, [r1, #660]	; 0x294
    2e6c:	cmp	r1, #0
    2e70:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2e74:	add	r5, r5, #1
    2e78:	asr	r2, r5, #31
    2e7c:	lsr	r2, r2, #28
    2e80:	add	r5, r5, r2
    2e84:	and	r5, r5, #15
    2e88:	sub	r5, r5, r2
    2e8c:	lsl	r2, r5, #2
    2e90:	add	r1, r3, r2
    2e94:	ldr	r1, [r1, #660]	; 0x294
    2e98:	cmp	r1, #0
    2e9c:	beq	2eb8 <gen_loadx_iphdrlen+0x420>
    2ea0:	ldr	r0, [pc, #68]	; 2eec <gen_loadx_iphdrlen+0x454>
    2ea4:	add	r2, r5, #1
    2ea8:	and	r2, r2, #15
    2eac:	add	r0, pc, r0
    2eb0:	str	r2, [r3, #656]	; 0x290
    2eb4:	bl	2370 <sf_bpf_error>
    2eb8:	ldr	r3, [pc, #48]	; 2ef0 <gen_loadx_iphdrlen+0x458>
    2ebc:	add	r3, pc, r3
    2ec0:	str	r5, [r3, #656]	; 0x290
    2ec4:	ldr	r3, [pc, #40]	; 2ef4 <gen_loadx_iphdrlen+0x45c>
    2ec8:	mov	r1, #1
    2ecc:	add	r3, pc, r3
    2ed0:	add	r2, r3, r2
    2ed4:	str	r5, [r3, #864]	; 0x360
    2ed8:	str	r1, [r2, #660]	; 0x294
    2edc:	b	2abc <gen_loadx_iphdrlen+0x24>
    2ee0:	.word	0x0003b8c8
    2ee4:	.word	0x0003b88c
    2ee8:	.word	0x0003b624
    2eec:	.word	0x0001da9c
    2ef0:	.word	0x0003b4ac
    2ef4:	.word	0x0003b49c

00002ef8 <gen_load_llrel>:
    2ef8:	ldr	r3, [pc, #3240]	; 3ba8 <gen_load_llrel+0xcb0>
    2efc:	push	{r4, r5, r6, r7, r8, lr}
    2f00:	add	r3, pc, r3
    2f04:	mov	r7, r0
    2f08:	ldr	r2, [r3, #876]	; 0x36c
    2f0c:	mov	r6, r1
    2f10:	cmp	r2, #127	; 0x7f
    2f14:	beq	356c <gen_load_llrel+0x674>
    2f18:	ble	325c <gen_load_llrel+0x364>
    2f1c:	cmp	r2, #163	; 0xa3
    2f20:	beq	2f80 <gen_load_llrel+0x88>
    2f24:	cmp	r2, #192	; 0xc0
    2f28:	bne	3540 <gen_load_llrel+0x648>
    2f2c:	ldr	r5, [r3, #856]	; 0x358
    2f30:	cmn	r5, #1
    2f34:	beq	3848 <gen_load_llrel+0x950>
    2f38:	bl	2810 <newchunk.constprop.49>
    2f3c:	mov	r3, #97	; 0x61
    2f40:	orr	r6, r6, #64	; 0x40
    2f44:	str	r5, [r0, #12]
    2f48:	str	r3, [r0]
    2f4c:	mov	r4, r0
    2f50:	bl	2810 <newchunk.constprop.49>
    2f54:	mov	r2, r4
    2f58:	str	r7, [r0, #12]
    2f5c:	str	r6, [r0]
    2f60:	b	2f68 <gen_load_llrel+0x70>
    2f64:	mov	r2, r3
    2f68:	ldr	r3, [r2, #16]
    2f6c:	cmp	r3, #0
    2f70:	bne	2f64 <gen_load_llrel+0x6c>
    2f74:	str	r0, [r2, #16]
    2f78:	mov	r0, r4
    2f7c:	pop	{r4, r5, r6, r7, r8, pc}
    2f80:	ldr	r5, [r3, #856]	; 0x358
    2f84:	cmn	r5, #1
    2f88:	bne	2f38 <gen_load_llrel+0x40>
    2f8c:	ldr	r5, [r3, #656]	; 0x290
    2f90:	lsl	r2, r5, #2
    2f94:	add	r1, r3, r2
    2f98:	ldr	r1, [r1, #660]	; 0x294
    2f9c:	cmp	r1, #0
    2fa0:	beq	3b3c <gen_load_llrel+0xc44>
    2fa4:	add	r5, r5, #1
    2fa8:	asr	r2, r5, #31
    2fac:	lsr	r2, r2, #28
    2fb0:	add	r5, r5, r2
    2fb4:	and	r5, r5, #15
    2fb8:	sub	r5, r5, r2
    2fbc:	str	r5, [r3, #656]	; 0x290
    2fc0:	lsl	r2, r5, #2
    2fc4:	add	r1, r3, r2
    2fc8:	ldr	r1, [r1, #660]	; 0x294
    2fcc:	cmp	r1, #0
    2fd0:	beq	3b3c <gen_load_llrel+0xc44>
    2fd4:	add	r5, r5, #1
    2fd8:	asr	r2, r5, #31
    2fdc:	lsr	r2, r2, #28
    2fe0:	add	r5, r5, r2
    2fe4:	and	r5, r5, #15
    2fe8:	sub	r5, r5, r2
    2fec:	lsl	r2, r5, #2
    2ff0:	add	r1, r3, r2
    2ff4:	ldr	r1, [r1, #660]	; 0x294
    2ff8:	cmp	r1, #0
    2ffc:	beq	3b30 <gen_load_llrel+0xc38>
    3000:	add	r5, r5, #1
    3004:	asr	r2, r5, #31
    3008:	lsr	r2, r2, #28
    300c:	add	r5, r5, r2
    3010:	and	r5, r5, #15
    3014:	sub	r5, r5, r2
    3018:	lsl	r2, r5, #2
    301c:	add	r1, r3, r2
    3020:	ldr	r1, [r1, #660]	; 0x294
    3024:	cmp	r1, #0
    3028:	beq	3b30 <gen_load_llrel+0xc38>
    302c:	add	r5, r5, #1
    3030:	asr	r2, r5, #31
    3034:	lsr	r2, r2, #28
    3038:	add	r5, r5, r2
    303c:	and	r5, r5, #15
    3040:	sub	r5, r5, r2
    3044:	lsl	r2, r5, #2
    3048:	add	r1, r3, r2
    304c:	ldr	r1, [r1, #660]	; 0x294
    3050:	cmp	r1, #0
    3054:	beq	3b30 <gen_load_llrel+0xc38>
    3058:	add	r5, r5, #1
    305c:	asr	r2, r5, #31
    3060:	lsr	r2, r2, #28
    3064:	add	r5, r5, r2
    3068:	and	r5, r5, #15
    306c:	sub	r5, r5, r2
    3070:	lsl	r2, r5, #2
    3074:	add	r3, r3, r2
    3078:	ldr	r3, [r3, #660]	; 0x294
    307c:	cmp	r3, #0
    3080:	beq	3b30 <gen_load_llrel+0xc38>
    3084:	add	r5, r5, #1
    3088:	ldr	r3, [pc, #2844]	; 3bac <gen_load_llrel+0xcb4>
    308c:	asr	r2, r5, #31
    3090:	add	r3, pc, r3
    3094:	lsr	r2, r2, #28
    3098:	add	r5, r5, r2
    309c:	and	r5, r5, #15
    30a0:	sub	r5, r5, r2
    30a4:	lsl	r2, r5, #2
    30a8:	add	r1, r3, r2
    30ac:	ldr	r1, [r1, #660]	; 0x294
    30b0:	cmp	r1, #0
    30b4:	beq	3b30 <gen_load_llrel+0xc38>
    30b8:	add	r5, r5, #1
    30bc:	asr	r2, r5, #31
    30c0:	lsr	r2, r2, #28
    30c4:	add	r5, r5, r2
    30c8:	and	r5, r5, #15
    30cc:	sub	r5, r5, r2
    30d0:	lsl	r2, r5, #2
    30d4:	add	r1, r3, r2
    30d8:	ldr	r1, [r1, #660]	; 0x294
    30dc:	cmp	r1, #0
    30e0:	beq	3b30 <gen_load_llrel+0xc38>
    30e4:	add	r5, r5, #1
    30e8:	asr	r2, r5, #31
    30ec:	lsr	r2, r2, #28
    30f0:	add	r5, r5, r2
    30f4:	and	r5, r5, #15
    30f8:	sub	r5, r5, r2
    30fc:	lsl	r2, r5, #2
    3100:	add	r1, r3, r2
    3104:	ldr	r1, [r1, #660]	; 0x294
    3108:	cmp	r1, #0
    310c:	beq	3b30 <gen_load_llrel+0xc38>
    3110:	add	r5, r5, #1
    3114:	asr	r2, r5, #31
    3118:	lsr	r2, r2, #28
    311c:	add	r5, r5, r2
    3120:	and	r5, r5, #15
    3124:	sub	r5, r5, r2
    3128:	lsl	r2, r5, #2
    312c:	add	r1, r3, r2
    3130:	ldr	r1, [r1, #660]	; 0x294
    3134:	cmp	r1, #0
    3138:	beq	3b30 <gen_load_llrel+0xc38>
    313c:	add	r5, r5, #1
    3140:	asr	r2, r5, #31
    3144:	lsr	r2, r2, #28
    3148:	add	r5, r5, r2
    314c:	and	r5, r5, #15
    3150:	sub	r5, r5, r2
    3154:	lsl	r2, r5, #2
    3158:	add	r1, r3, r2
    315c:	ldr	r1, [r1, #660]	; 0x294
    3160:	cmp	r1, #0
    3164:	beq	3b30 <gen_load_llrel+0xc38>
    3168:	add	r5, r5, #1
    316c:	asr	r2, r5, #31
    3170:	lsr	r2, r2, #28
    3174:	add	r5, r5, r2
    3178:	and	r5, r5, #15
    317c:	sub	r5, r5, r2
    3180:	lsl	r2, r5, #2
    3184:	add	r1, r3, r2
    3188:	ldr	r1, [r1, #660]	; 0x294
    318c:	cmp	r1, #0
    3190:	beq	3b30 <gen_load_llrel+0xc38>
    3194:	add	r5, r5, #1
    3198:	asr	r2, r5, #31
    319c:	lsr	r2, r2, #28
    31a0:	add	r5, r5, r2
    31a4:	and	r5, r5, #15
    31a8:	sub	r5, r5, r2
    31ac:	lsl	r2, r5, #2
    31b0:	add	r1, r3, r2
    31b4:	ldr	r1, [r1, #660]	; 0x294
    31b8:	cmp	r1, #0
    31bc:	beq	3b30 <gen_load_llrel+0xc38>
    31c0:	add	r5, r5, #1
    31c4:	asr	r2, r5, #31
    31c8:	lsr	r2, r2, #28
    31cc:	add	r5, r5, r2
    31d0:	and	r5, r5, #15
    31d4:	sub	r5, r5, r2
    31d8:	lsl	r2, r5, #2
    31dc:	add	r1, r3, r2
    31e0:	ldr	r1, [r1, #660]	; 0x294
    31e4:	cmp	r1, #0
    31e8:	beq	3b30 <gen_load_llrel+0xc38>
    31ec:	add	r5, r5, #1
    31f0:	asr	r2, r5, #31
    31f4:	lsr	r2, r2, #28
    31f8:	add	r5, r5, r2
    31fc:	and	r5, r5, #15
    3200:	sub	r5, r5, r2
    3204:	lsl	r2, r5, #2
    3208:	add	r1, r3, r2
    320c:	ldr	r1, [r1, #660]	; 0x294
    3210:	cmp	r1, #0
    3214:	beq	3b30 <gen_load_llrel+0xc38>
    3218:	add	r5, r5, #1
    321c:	asr	r2, r5, #31
    3220:	lsr	r2, r2, #28
    3224:	add	r5, r5, r2
    3228:	and	r5, r5, #15
    322c:	sub	r5, r5, r2
    3230:	lsl	r2, r5, #2
    3234:	add	r3, r3, r2
    3238:	ldr	r3, [r3, #660]	; 0x294
    323c:	cmp	r3, #0
    3240:	beq	3b30 <gen_load_llrel+0xc38>
    3244:	ldr	r3, [pc, #2404]	; 3bb0 <gen_load_llrel+0xcb8>
    3248:	add	r2, r5, #1
    324c:	add	r3, pc, r3
    3250:	and	r2, r2, #15
    3254:	str	r2, [r3, #656]	; 0x290
    3258:	b	383c <gen_load_llrel+0x944>
    325c:	cmp	r2, #119	; 0x77
    3260:	bne	3540 <gen_load_llrel+0x648>
    3264:	ldr	r5, [r3, #856]	; 0x358
    3268:	cmn	r5, #1
    326c:	bne	2f38 <gen_load_llrel+0x40>
    3270:	ldr	r5, [r3, #656]	; 0x290
    3274:	lsl	r2, r5, #2
    3278:	add	r1, r3, r2
    327c:	ldr	r1, [r1, #660]	; 0x294
    3280:	cmp	r1, #0
    3284:	beq	3b8c <gen_load_llrel+0xc94>
    3288:	add	r5, r5, #1
    328c:	asr	r2, r5, #31
    3290:	lsr	r2, r2, #28
    3294:	add	r5, r5, r2
    3298:	and	r5, r5, #15
    329c:	sub	r5, r5, r2
    32a0:	str	r5, [r3, #656]	; 0x290
    32a4:	lsl	r2, r5, #2
    32a8:	add	r1, r3, r2
    32ac:	ldr	r1, [r1, #660]	; 0x294
    32b0:	cmp	r1, #0
    32b4:	beq	3b8c <gen_load_llrel+0xc94>
    32b8:	add	r5, r5, #1
    32bc:	asr	r2, r5, #31
    32c0:	lsr	r2, r2, #28
    32c4:	add	r5, r5, r2
    32c8:	and	r5, r5, #15
    32cc:	sub	r5, r5, r2
    32d0:	lsl	r2, r5, #2
    32d4:	add	r1, r3, r2
    32d8:	ldr	r1, [r1, #660]	; 0x294
    32dc:	cmp	r1, #0
    32e0:	beq	3b80 <gen_load_llrel+0xc88>
    32e4:	add	r5, r5, #1
    32e8:	asr	r2, r5, #31
    32ec:	lsr	r2, r2, #28
    32f0:	add	r5, r5, r2
    32f4:	and	r5, r5, #15
    32f8:	sub	r5, r5, r2
    32fc:	lsl	r2, r5, #2
    3300:	add	r1, r3, r2
    3304:	ldr	r1, [r1, #660]	; 0x294
    3308:	cmp	r1, #0
    330c:	beq	3b80 <gen_load_llrel+0xc88>
    3310:	add	r5, r5, #1
    3314:	asr	r2, r5, #31
    3318:	lsr	r2, r2, #28
    331c:	add	r5, r5, r2
    3320:	and	r5, r5, #15
    3324:	sub	r5, r5, r2
    3328:	lsl	r2, r5, #2
    332c:	add	r1, r3, r2
    3330:	ldr	r1, [r1, #660]	; 0x294
    3334:	cmp	r1, #0
    3338:	beq	3b80 <gen_load_llrel+0xc88>
    333c:	add	r5, r5, #1
    3340:	asr	r2, r5, #31
    3344:	lsr	r2, r2, #28
    3348:	add	r5, r5, r2
    334c:	and	r5, r5, #15
    3350:	sub	r5, r5, r2
    3354:	lsl	r2, r5, #2
    3358:	add	r3, r3, r2
    335c:	ldr	r3, [r3, #660]	; 0x294
    3360:	cmp	r3, #0
    3364:	beq	3b80 <gen_load_llrel+0xc88>
    3368:	add	r5, r5, #1
    336c:	ldr	r3, [pc, #2112]	; 3bb4 <gen_load_llrel+0xcbc>
    3370:	asr	r2, r5, #31
    3374:	add	r3, pc, r3
    3378:	lsr	r2, r2, #28
    337c:	add	r5, r5, r2
    3380:	and	r5, r5, #15
    3384:	sub	r5, r5, r2
    3388:	lsl	r2, r5, #2
    338c:	add	r1, r3, r2
    3390:	ldr	r1, [r1, #660]	; 0x294
    3394:	cmp	r1, #0
    3398:	beq	3b80 <gen_load_llrel+0xc88>
    339c:	add	r5, r5, #1
    33a0:	asr	r2, r5, #31
    33a4:	lsr	r2, r2, #28
    33a8:	add	r5, r5, r2
    33ac:	and	r5, r5, #15
    33b0:	sub	r5, r5, r2
    33b4:	lsl	r2, r5, #2
    33b8:	add	r1, r3, r2
    33bc:	ldr	r1, [r1, #660]	; 0x294
    33c0:	cmp	r1, #0
    33c4:	beq	3b80 <gen_load_llrel+0xc88>
    33c8:	add	r5, r5, #1
    33cc:	asr	r2, r5, #31
    33d0:	lsr	r2, r2, #28
    33d4:	add	r5, r5, r2
    33d8:	and	r5, r5, #15
    33dc:	sub	r5, r5, r2
    33e0:	lsl	r2, r5, #2
    33e4:	add	r1, r3, r2
    33e8:	ldr	r1, [r1, #660]	; 0x294
    33ec:	cmp	r1, #0
    33f0:	beq	3b80 <gen_load_llrel+0xc88>
    33f4:	add	r5, r5, #1
    33f8:	asr	r2, r5, #31
    33fc:	lsr	r2, r2, #28
    3400:	add	r5, r5, r2
    3404:	and	r5, r5, #15
    3408:	sub	r5, r5, r2
    340c:	lsl	r2, r5, #2
    3410:	add	r1, r3, r2
    3414:	ldr	r1, [r1, #660]	; 0x294
    3418:	cmp	r1, #0
    341c:	beq	3b80 <gen_load_llrel+0xc88>
    3420:	add	r5, r5, #1
    3424:	asr	r2, r5, #31
    3428:	lsr	r2, r2, #28
    342c:	add	r5, r5, r2
    3430:	and	r5, r5, #15
    3434:	sub	r5, r5, r2
    3438:	lsl	r2, r5, #2
    343c:	add	r1, r3, r2
    3440:	ldr	r1, [r1, #660]	; 0x294
    3444:	cmp	r1, #0
    3448:	beq	3b80 <gen_load_llrel+0xc88>
    344c:	add	r5, r5, #1
    3450:	asr	r2, r5, #31
    3454:	lsr	r2, r2, #28
    3458:	add	r5, r5, r2
    345c:	and	r5, r5, #15
    3460:	sub	r5, r5, r2
    3464:	lsl	r2, r5, #2
    3468:	add	r1, r3, r2
    346c:	ldr	r1, [r1, #660]	; 0x294
    3470:	cmp	r1, #0
    3474:	beq	3b80 <gen_load_llrel+0xc88>
    3478:	add	r5, r5, #1
    347c:	asr	r2, r5, #31
    3480:	lsr	r2, r2, #28
    3484:	add	r5, r5, r2
    3488:	and	r5, r5, #15
    348c:	sub	r5, r5, r2
    3490:	lsl	r2, r5, #2
    3494:	add	r1, r3, r2
    3498:	ldr	r1, [r1, #660]	; 0x294
    349c:	cmp	r1, #0
    34a0:	beq	3b80 <gen_load_llrel+0xc88>
    34a4:	add	r5, r5, #1
    34a8:	asr	r2, r5, #31
    34ac:	lsr	r2, r2, #28
    34b0:	add	r5, r5, r2
    34b4:	and	r5, r5, #15
    34b8:	sub	r5, r5, r2
    34bc:	lsl	r2, r5, #2
    34c0:	add	r1, r3, r2
    34c4:	ldr	r1, [r1, #660]	; 0x294
    34c8:	cmp	r1, #0
    34cc:	beq	3b80 <gen_load_llrel+0xc88>
    34d0:	add	r5, r5, #1
    34d4:	asr	r2, r5, #31
    34d8:	lsr	r2, r2, #28
    34dc:	add	r5, r5, r2
    34e0:	and	r5, r5, #15
    34e4:	sub	r5, r5, r2
    34e8:	lsl	r2, r5, #2
    34ec:	add	r1, r3, r2
    34f0:	ldr	r1, [r1, #660]	; 0x294
    34f4:	cmp	r1, #0
    34f8:	beq	3b80 <gen_load_llrel+0xc88>
    34fc:	add	r5, r5, #1
    3500:	asr	r2, r5, #31
    3504:	lsr	r2, r2, #28
    3508:	add	r5, r5, r2
    350c:	and	r5, r5, #15
    3510:	sub	r5, r5, r2
    3514:	lsl	r2, r5, #2
    3518:	add	r3, r3, r2
    351c:	ldr	r3, [r3, #660]	; 0x294
    3520:	cmp	r3, #0
    3524:	beq	3b80 <gen_load_llrel+0xc88>
    3528:	ldr	r3, [pc, #1672]	; 3bb8 <gen_load_llrel+0xcc0>
    352c:	add	r2, r5, #1
    3530:	add	r3, pc, r3
    3534:	and	r2, r2, #15
    3538:	str	r2, [r3, #656]	; 0x290
    353c:	b	383c <gen_load_llrel+0x944>
    3540:	bl	2810 <newchunk.constprop.49>
    3544:	ldr	r3, [pc, #1648]	; 3bbc <gen_load_llrel+0xcc4>
    3548:	orr	r6, r6, #32
    354c:	add	r3, pc, r3
    3550:	ldr	r3, [r3, #880]	; 0x370
    3554:	add	r7, r3, r7
    3558:	mov	r4, r0
    355c:	str	r6, [r0]
    3560:	str	r7, [r0, #12]
    3564:	mov	r0, r4
    3568:	pop	{r4, r5, r6, r7, r8, pc}
    356c:	ldr	r5, [r3, #856]	; 0x358
    3570:	cmn	r5, #1
    3574:	bne	2f38 <gen_load_llrel+0x40>
    3578:	ldr	r5, [r3, #656]	; 0x290
    357c:	lsl	r2, r5, #2
    3580:	add	r1, r3, r2
    3584:	ldr	r1, [r1, #660]	; 0x294
    3588:	cmp	r1, #0
    358c:	beq	3b64 <gen_load_llrel+0xc6c>
    3590:	add	r5, r5, #1
    3594:	asr	r2, r5, #31
    3598:	lsr	r2, r2, #28
    359c:	add	r5, r5, r2
    35a0:	and	r5, r5, #15
    35a4:	sub	r5, r5, r2
    35a8:	str	r5, [r3, #656]	; 0x290
    35ac:	lsl	r2, r5, #2
    35b0:	add	r1, r3, r2
    35b4:	ldr	r1, [r1, #660]	; 0x294
    35b8:	cmp	r1, #0
    35bc:	beq	3b64 <gen_load_llrel+0xc6c>
    35c0:	add	r5, r5, #1
    35c4:	asr	r2, r5, #31
    35c8:	lsr	r2, r2, #28
    35cc:	add	r5, r5, r2
    35d0:	and	r5, r5, #15
    35d4:	sub	r5, r5, r2
    35d8:	lsl	r2, r5, #2
    35dc:	add	r1, r3, r2
    35e0:	ldr	r1, [r1, #660]	; 0x294
    35e4:	cmp	r1, #0
    35e8:	beq	3b58 <gen_load_llrel+0xc60>
    35ec:	add	r5, r5, #1
    35f0:	asr	r2, r5, #31
    35f4:	lsr	r2, r2, #28
    35f8:	add	r5, r5, r2
    35fc:	and	r5, r5, #15
    3600:	sub	r5, r5, r2
    3604:	lsl	r2, r5, #2
    3608:	add	r1, r3, r2
    360c:	ldr	r1, [r1, #660]	; 0x294
    3610:	cmp	r1, #0
    3614:	beq	3b58 <gen_load_llrel+0xc60>
    3618:	add	r5, r5, #1
    361c:	asr	r2, r5, #31
    3620:	lsr	r2, r2, #28
    3624:	add	r5, r5, r2
    3628:	and	r5, r5, #15
    362c:	sub	r5, r5, r2
    3630:	lsl	r2, r5, #2
    3634:	add	r1, r3, r2
    3638:	ldr	r1, [r1, #660]	; 0x294
    363c:	cmp	r1, #0
    3640:	beq	3b58 <gen_load_llrel+0xc60>
    3644:	add	r5, r5, #1
    3648:	asr	r2, r5, #31
    364c:	lsr	r2, r2, #28
    3650:	add	r5, r5, r2
    3654:	and	r5, r5, #15
    3658:	sub	r5, r5, r2
    365c:	lsl	r2, r5, #2
    3660:	add	r1, r3, r2
    3664:	ldr	r1, [r1, #660]	; 0x294
    3668:	cmp	r1, #0
    366c:	beq	3b58 <gen_load_llrel+0xc60>
    3670:	add	r5, r5, #1
    3674:	asr	r2, r5, #31
    3678:	lsr	r2, r2, #28
    367c:	add	r5, r5, r2
    3680:	and	r5, r5, #15
    3684:	sub	r5, r5, r2
    3688:	lsl	r2, r5, #2
    368c:	add	r1, r3, r2
    3690:	ldr	r1, [r1, #660]	; 0x294
    3694:	cmp	r1, #0
    3698:	beq	3b58 <gen_load_llrel+0xc60>
    369c:	add	r5, r5, #1
    36a0:	asr	r2, r5, #31
    36a4:	lsr	r2, r2, #28
    36a8:	add	r5, r5, r2
    36ac:	and	r5, r5, #15
    36b0:	sub	r5, r5, r2
    36b4:	lsl	r2, r5, #2
    36b8:	add	r3, r3, r2
    36bc:	ldr	r3, [r3, #660]	; 0x294
    36c0:	cmp	r3, #0
    36c4:	beq	3b58 <gen_load_llrel+0xc60>
    36c8:	add	r5, r5, #1
    36cc:	ldr	r1, [pc, #1260]	; 3bc0 <gen_load_llrel+0xcc8>
    36d0:	asr	r3, r5, #31
    36d4:	add	r1, pc, r1
    36d8:	lsr	r3, r3, #28
    36dc:	add	r5, r5, r3
    36e0:	and	r5, r5, #15
    36e4:	sub	r5, r5, r3
    36e8:	lsl	r2, r5, #2
    36ec:	add	r3, r1, r2
    36f0:	ldr	r3, [r3, #660]	; 0x294
    36f4:	cmp	r3, #0
    36f8:	beq	3b58 <gen_load_llrel+0xc60>
    36fc:	add	r5, r5, #1
    3700:	asr	r3, r5, #31
    3704:	lsr	r3, r3, #28
    3708:	add	r5, r5, r3
    370c:	and	r5, r5, #15
    3710:	sub	r5, r5, r3
    3714:	lsl	r2, r5, #2
    3718:	add	r3, r1, r2
    371c:	ldr	r3, [r3, #660]	; 0x294
    3720:	cmp	r3, #0
    3724:	beq	3b58 <gen_load_llrel+0xc60>
    3728:	add	r5, r5, #1
    372c:	asr	r3, r5, #31
    3730:	lsr	r3, r3, #28
    3734:	add	r5, r5, r3
    3738:	and	r5, r5, #15
    373c:	sub	r5, r5, r3
    3740:	lsl	r2, r5, #2
    3744:	add	r3, r1, r2
    3748:	ldr	r3, [r3, #660]	; 0x294
    374c:	cmp	r3, #0
    3750:	beq	3b58 <gen_load_llrel+0xc60>
    3754:	add	r5, r5, #1
    3758:	asr	r3, r5, #31
    375c:	lsr	r3, r3, #28
    3760:	add	r5, r5, r3
    3764:	and	r5, r5, #15
    3768:	sub	r5, r5, r3
    376c:	lsl	r2, r5, #2
    3770:	add	r3, r1, r2
    3774:	ldr	r3, [r3, #660]	; 0x294
    3778:	cmp	r3, #0
    377c:	beq	3b58 <gen_load_llrel+0xc60>
    3780:	add	r5, r5, #1
    3784:	asr	r3, r5, #31
    3788:	lsr	r3, r3, #28
    378c:	add	r5, r5, r3
    3790:	and	r5, r5, #15
    3794:	sub	r5, r5, r3
    3798:	lsl	r2, r5, #2
    379c:	add	r3, r1, r2
    37a0:	ldr	r3, [r3, #660]	; 0x294
    37a4:	cmp	r3, #0
    37a8:	beq	3b58 <gen_load_llrel+0xc60>
    37ac:	add	r5, r5, #1
    37b0:	asr	r3, r5, #31
    37b4:	lsr	r3, r3, #28
    37b8:	add	r5, r5, r3
    37bc:	and	r5, r5, #15
    37c0:	sub	r5, r5, r3
    37c4:	lsl	r2, r5, #2
    37c8:	add	r3, r1, r2
    37cc:	ldr	r3, [r3, #660]	; 0x294
    37d0:	cmp	r3, #0
    37d4:	beq	3b58 <gen_load_llrel+0xc60>
    37d8:	add	r5, r5, #1
    37dc:	asr	r3, r5, #31
    37e0:	lsr	r3, r3, #28
    37e4:	add	r5, r5, r3
    37e8:	and	r5, r5, #15
    37ec:	sub	r5, r5, r3
    37f0:	lsl	r2, r5, #2
    37f4:	add	r3, r1, r2
    37f8:	ldr	r3, [r3, #660]	; 0x294
    37fc:	cmp	r3, #0
    3800:	beq	3b58 <gen_load_llrel+0xc60>
    3804:	add	r5, r5, #1
    3808:	asr	r3, r5, #31
    380c:	lsr	r3, r3, #28
    3810:	add	r5, r5, r3
    3814:	and	r5, r5, #15
    3818:	sub	r5, r5, r3
    381c:	lsl	r2, r5, #2
    3820:	add	r3, r1, r2
    3824:	ldr	r3, [r3, #660]	; 0x294
    3828:	cmp	r3, #0
    382c:	beq	3b58 <gen_load_llrel+0xc60>
    3830:	add	r3, r5, #1
    3834:	and	r3, r3, #15
    3838:	str	r3, [r1, #656]	; 0x290
    383c:	ldr	r0, [pc, #896]	; 3bc4 <gen_load_llrel+0xccc>
    3840:	add	r0, pc, r0
    3844:	bl	2370 <sf_bpf_error>
    3848:	ldr	r5, [r3, #656]	; 0x290
    384c:	lsl	r2, r5, #2
    3850:	add	r1, r3, r2
    3854:	ldr	r1, [r1, #660]	; 0x294
    3858:	cmp	r1, #0
    385c:	beq	3b14 <gen_load_llrel+0xc1c>
    3860:	add	r5, r5, #1
    3864:	asr	r2, r5, #31
    3868:	lsr	r2, r2, #28
    386c:	add	r5, r5, r2
    3870:	and	r5, r5, #15
    3874:	sub	r5, r5, r2
    3878:	str	r5, [r3, #656]	; 0x290
    387c:	lsl	r2, r5, #2
    3880:	add	r1, r3, r2
    3884:	ldr	r1, [r1, #660]	; 0x294
    3888:	cmp	r1, #0
    388c:	beq	3b14 <gen_load_llrel+0xc1c>
    3890:	add	r5, r5, #1
    3894:	asr	r2, r5, #31
    3898:	lsr	r2, r2, #28
    389c:	add	r5, r5, r2
    38a0:	and	r5, r5, #15
    38a4:	sub	r5, r5, r2
    38a8:	lsl	r2, r5, #2
    38ac:	add	r1, r3, r2
    38b0:	ldr	r1, [r1, #660]	; 0x294
    38b4:	cmp	r1, #0
    38b8:	beq	3b08 <gen_load_llrel+0xc10>
    38bc:	add	r5, r5, #1
    38c0:	asr	r2, r5, #31
    38c4:	lsr	r2, r2, #28
    38c8:	add	r5, r5, r2
    38cc:	and	r5, r5, #15
    38d0:	sub	r5, r5, r2
    38d4:	lsl	r2, r5, #2
    38d8:	add	r1, r3, r2
    38dc:	ldr	r1, [r1, #660]	; 0x294
    38e0:	cmp	r1, #0
    38e4:	beq	3b08 <gen_load_llrel+0xc10>
    38e8:	add	r5, r5, #1
    38ec:	asr	r2, r5, #31
    38f0:	lsr	r2, r2, #28
    38f4:	add	r5, r5, r2
    38f8:	and	r5, r5, #15
    38fc:	sub	r5, r5, r2
    3900:	lsl	r2, r5, #2
    3904:	add	r3, r3, r2
    3908:	ldr	r3, [r3, #660]	; 0x294
    390c:	cmp	r3, #0
    3910:	beq	3b08 <gen_load_llrel+0xc10>
    3914:	add	r5, r5, #1
    3918:	ldr	r3, [pc, #680]	; 3bc8 <gen_load_llrel+0xcd0>
    391c:	asr	r2, r5, #31
    3920:	add	r3, pc, r3
    3924:	lsr	r2, r2, #28
    3928:	add	r5, r5, r2
    392c:	and	r5, r5, #15
    3930:	sub	r5, r5, r2
    3934:	lsl	r2, r5, #2
    3938:	add	r1, r3, r2
    393c:	ldr	r1, [r1, #660]	; 0x294
    3940:	cmp	r1, #0
    3944:	beq	3b08 <gen_load_llrel+0xc10>
    3948:	add	r5, r5, #1
    394c:	asr	r2, r5, #31
    3950:	lsr	r2, r2, #28
    3954:	add	r5, r5, r2
    3958:	and	r5, r5, #15
    395c:	sub	r5, r5, r2
    3960:	lsl	r2, r5, #2
    3964:	add	r1, r3, r2
    3968:	ldr	r1, [r1, #660]	; 0x294
    396c:	cmp	r1, #0
    3970:	beq	3b08 <gen_load_llrel+0xc10>
    3974:	add	r5, r5, #1
    3978:	asr	r2, r5, #31
    397c:	lsr	r2, r2, #28
    3980:	add	r5, r5, r2
    3984:	and	r5, r5, #15
    3988:	sub	r5, r5, r2
    398c:	lsl	r2, r5, #2
    3990:	add	r1, r3, r2
    3994:	ldr	r1, [r1, #660]	; 0x294
    3998:	cmp	r1, #0
    399c:	beq	3b08 <gen_load_llrel+0xc10>
    39a0:	add	r5, r5, #1
    39a4:	asr	r2, r5, #31
    39a8:	lsr	r2, r2, #28
    39ac:	add	r5, r5, r2
    39b0:	and	r5, r5, #15
    39b4:	sub	r5, r5, r2
    39b8:	lsl	r2, r5, #2
    39bc:	add	r1, r3, r2
    39c0:	ldr	r1, [r1, #660]	; 0x294
    39c4:	cmp	r1, #0
    39c8:	beq	3b08 <gen_load_llrel+0xc10>
    39cc:	add	r5, r5, #1
    39d0:	asr	r2, r5, #31
    39d4:	lsr	r2, r2, #28
    39d8:	add	r5, r5, r2
    39dc:	and	r5, r5, #15
    39e0:	sub	r5, r5, r2
    39e4:	lsl	r2, r5, #2
    39e8:	add	r1, r3, r2
    39ec:	ldr	r1, [r1, #660]	; 0x294
    39f0:	cmp	r1, #0
    39f4:	beq	3b08 <gen_load_llrel+0xc10>
    39f8:	add	r5, r5, #1
    39fc:	asr	r2, r5, #31
    3a00:	lsr	r2, r2, #28
    3a04:	add	r5, r5, r2
    3a08:	and	r5, r5, #15
    3a0c:	sub	r5, r5, r2
    3a10:	lsl	r2, r5, #2
    3a14:	add	r1, r3, r2
    3a18:	ldr	r1, [r1, #660]	; 0x294
    3a1c:	cmp	r1, #0
    3a20:	beq	3b08 <gen_load_llrel+0xc10>
    3a24:	add	r5, r5, #1
    3a28:	asr	r2, r5, #31
    3a2c:	lsr	r2, r2, #28
    3a30:	add	r5, r5, r2
    3a34:	and	r5, r5, #15
    3a38:	sub	r5, r5, r2
    3a3c:	lsl	r2, r5, #2
    3a40:	add	r1, r3, r2
    3a44:	ldr	r1, [r1, #660]	; 0x294
    3a48:	cmp	r1, #0
    3a4c:	beq	3b08 <gen_load_llrel+0xc10>
    3a50:	add	r5, r5, #1
    3a54:	asr	r2, r5, #31
    3a58:	lsr	r2, r2, #28
    3a5c:	add	r5, r5, r2
    3a60:	and	r5, r5, #15
    3a64:	sub	r5, r5, r2
    3a68:	lsl	r2, r5, #2
    3a6c:	add	r1, r3, r2
    3a70:	ldr	r1, [r1, #660]	; 0x294
    3a74:	cmp	r1, #0
    3a78:	beq	3b08 <gen_load_llrel+0xc10>
    3a7c:	add	r5, r5, #1
    3a80:	asr	r2, r5, #31
    3a84:	lsr	r2, r2, #28
    3a88:	add	r5, r5, r2
    3a8c:	and	r5, r5, #15
    3a90:	sub	r5, r5, r2
    3a94:	lsl	r2, r5, #2
    3a98:	add	r1, r3, r2
    3a9c:	ldr	r1, [r1, #660]	; 0x294
    3aa0:	cmp	r1, #0
    3aa4:	beq	3b08 <gen_load_llrel+0xc10>
    3aa8:	add	r5, r5, #1
    3aac:	asr	r2, r5, #31
    3ab0:	lsr	r2, r2, #28
    3ab4:	add	r5, r5, r2
    3ab8:	and	r5, r5, #15
    3abc:	sub	r5, r5, r2
    3ac0:	lsl	r2, r5, #2
    3ac4:	add	r3, r3, r2
    3ac8:	ldr	r3, [r3, #660]	; 0x294
    3acc:	cmp	r3, #0
    3ad0:	beq	3b08 <gen_load_llrel+0xc10>
    3ad4:	add	r5, r5, #1
    3ad8:	ldr	r1, [pc, #236]	; 3bcc <gen_load_llrel+0xcd4>
    3adc:	asr	r3, r5, #31
    3ae0:	add	r1, pc, r1
    3ae4:	lsr	r3, r3, #28
    3ae8:	add	r5, r5, r3
    3aec:	and	r5, r5, #15
    3af0:	sub	r5, r5, r3
    3af4:	lsl	r2, r5, #2
    3af8:	add	r3, r1, r2
    3afc:	ldr	r3, [r3, #660]	; 0x294
    3b00:	cmp	r3, #0
    3b04:	bne	3830 <gen_load_llrel+0x938>
    3b08:	ldr	r3, [pc, #192]	; 3bd0 <gen_load_llrel+0xcd8>
    3b0c:	add	r3, pc, r3
    3b10:	str	r5, [r3, #656]	; 0x290
    3b14:	ldr	r3, [pc, #184]	; 3bd4 <gen_load_llrel+0xcdc>
    3b18:	mov	r1, #1
    3b1c:	add	r3, pc, r3
    3b20:	add	r2, r3, r2
    3b24:	str	r5, [r3, #856]	; 0x358
    3b28:	str	r1, [r2, #660]	; 0x294
    3b2c:	b	2f38 <gen_load_llrel+0x40>
    3b30:	ldr	r3, [pc, #160]	; 3bd8 <gen_load_llrel+0xce0>
    3b34:	add	r3, pc, r3
    3b38:	str	r5, [r3, #656]	; 0x290
    3b3c:	ldr	r3, [pc, #152]	; 3bdc <gen_load_llrel+0xce4>
    3b40:	mov	r1, #1
    3b44:	add	r3, pc, r3
    3b48:	add	r2, r3, r2
    3b4c:	str	r5, [r3, #856]	; 0x358
    3b50:	str	r1, [r2, #660]	; 0x294
    3b54:	b	2f38 <gen_load_llrel+0x40>
    3b58:	ldr	r3, [pc, #128]	; 3be0 <gen_load_llrel+0xce8>
    3b5c:	add	r3, pc, r3
    3b60:	str	r5, [r3, #656]	; 0x290
    3b64:	ldr	r3, [pc, #120]	; 3be4 <gen_load_llrel+0xcec>
    3b68:	mov	r1, #1
    3b6c:	add	r3, pc, r3
    3b70:	add	r2, r3, r2
    3b74:	str	r5, [r3, #856]	; 0x358
    3b78:	str	r1, [r2, #660]	; 0x294
    3b7c:	b	2f38 <gen_load_llrel+0x40>
    3b80:	ldr	r3, [pc, #96]	; 3be8 <gen_load_llrel+0xcf0>
    3b84:	add	r3, pc, r3
    3b88:	str	r5, [r3, #656]	; 0x290
    3b8c:	ldr	r3, [pc, #88]	; 3bec <gen_load_llrel+0xcf4>
    3b90:	mov	r1, #1
    3b94:	add	r3, pc, r3
    3b98:	add	r2, r3, r2
    3b9c:	str	r5, [r3, #856]	; 0x358
    3ba0:	str	r1, [r2, #660]	; 0x294
    3ba4:	b	2f38 <gen_load_llrel+0x40>
    3ba8:	.word	0x0003b468
    3bac:	.word	0x0003b2d8
    3bb0:	.word	0x0003b11c
    3bb4:	.word	0x0003aff4
    3bb8:	.word	0x0003ae38
    3bbc:	.word	0x0003ae1c
    3bc0:	.word	0x0003ac94
    3bc4:	.word	0x0001d108
    3bc8:	.word	0x0003aa48
    3bcc:	.word	0x0003a888
    3bd0:	.word	0x0003a85c
    3bd4:	.word	0x0003a84c
    3bd8:	.word	0x0003a834
    3bdc:	.word	0x0003a824
    3be0:	.word	0x0003a80c
    3be4:	.word	0x0003a7fc
    3be8:	.word	0x0003a7e4
    3bec:	.word	0x0003a7d4

00003bf0 <gen_ncmp.constprop.35>:
    3bf0:	push	{r4, r5, r6, r7, r8, lr}
    3bf4:	mov	r6, r2
    3bf8:	mov	r4, r3
    3bfc:	ldr	r8, [sp, #24]
    3c00:	ldr	r7, [sp, #28]
    3c04:	bl	2ef8 <gen_load_llrel>
    3c08:	cmn	r6, #1
    3c0c:	mov	r5, r0
    3c10:	beq	3c40 <gen_ncmp.constprop.35+0x50>
    3c14:	bl	2810 <newchunk.constprop.49>
    3c18:	mov	r3, #84	; 0x54
    3c1c:	mov	r2, r5
    3c20:	str	r6, [r0, #12]
    3c24:	str	r3, [r0]
    3c28:	b	3c30 <gen_ncmp.constprop.35+0x40>
    3c2c:	mov	r2, r3
    3c30:	ldr	r3, [r2, #16]
    3c34:	cmp	r3, #0
    3c38:	bne	3c2c <gen_ncmp.constprop.35+0x3c>
    3c3c:	str	r0, [r2, #16]
    3c40:	bl	29f8 <newchunk.constprop.50>
    3c44:	cmp	r8, #0
    3c48:	orr	r3, r4, #5
    3c4c:	str	r0, [r0, #96]	; 0x60
    3c50:	str	r5, [r0, #4]
    3c54:	str	r7, [r0, #20]
    3c58:	str	r3, [r0, #8]
    3c5c:	popeq	{r4, r5, r6, r7, r8, pc}
    3c60:	bic	r4, r4, #16
    3c64:	cmp	r4, #32
    3c68:	ldreq	r3, [r0, #44]	; 0x2c
    3c6c:	clzeq	r3, r3
    3c70:	lsreq	r3, r3, #5
    3c74:	streq	r3, [r0, #44]	; 0x2c
    3c78:	pop	{r4, r5, r6, r7, r8, pc}

00003c7c <sf_gen_atmfield_code.constprop.25>:
    3c7c:	ldr	r3, [pc, #72]	; 3ccc <sf_gen_atmfield_code.constprop.25+0x50>
    3c80:	push	{r4, r5, r6, lr}
    3c84:	add	r3, pc, r3
    3c88:	mov	r4, r0
    3c8c:	ldr	r0, [r3, #884]	; 0x374
    3c90:	cmn	r0, #1
    3c94:	beq	3cc8 <sf_gen_atmfield_code.constprop.25+0x4c>
    3c98:	mov	r1, #16
    3c9c:	add	r0, r0, #5
    3ca0:	bl	2ef8 <gen_load_llrel>
    3ca4:	mov	r5, r0
    3ca8:	bl	29f8 <newchunk.constprop.50>
    3cac:	mov	r2, #21
    3cb0:	mov	r3, r0
    3cb4:	str	r5, [r0, #4]
    3cb8:	str	r0, [r3, #96]	; 0x60
    3cbc:	str	r4, [r0, #20]
    3cc0:	str	r2, [r0, #8]
    3cc4:	pop	{r4, r5, r6, pc}
    3cc8:	bl	f18 <abort@plt>
    3ccc:	.word	0x0003a6e4

00003cd0 <sf_gen_atmfield_code.constprop.26>:
    3cd0:	ldr	r3, [pc, #92]	; 3d34 <sf_gen_atmfield_code.constprop.26+0x64>
    3cd4:	push	{r4, r5, r6, lr}
    3cd8:	add	r3, pc, r3
    3cdc:	ldr	r2, [r3, #888]	; 0x378
    3ce0:	cmp	r2, #0
    3ce4:	beq	3d24 <sf_gen_atmfield_code.constprop.26+0x54>
    3ce8:	mov	r4, r0
    3cec:	ldr	r0, [r3, #892]	; 0x37c
    3cf0:	cmn	r0, #1
    3cf4:	beq	3d30 <sf_gen_atmfield_code.constprop.26+0x60>
    3cf8:	mov	r1, #8
    3cfc:	bl	2ef8 <gen_load_llrel>
    3d00:	mov	r5, r0
    3d04:	bl	29f8 <newchunk.constprop.50>
    3d08:	mov	r2, #21
    3d0c:	mov	r3, r0
    3d10:	str	r5, [r0, #4]
    3d14:	str	r0, [r3, #96]	; 0x60
    3d18:	str	r4, [r0, #20]
    3d1c:	str	r2, [r0, #8]
    3d20:	pop	{r4, r5, r6, pc}
    3d24:	ldr	r0, [pc, #12]	; 3d38 <sf_gen_atmfield_code.constprop.26+0x68>
    3d28:	add	r0, pc, r0
    3d2c:	bl	2370 <sf_bpf_error>
    3d30:	bl	f18 <abort@plt>
    3d34:	.word	0x0003a690
    3d38:	.word	0x0001ccc8

00003d3c <sf_gen_atmfield_code.constprop.27>:
    3d3c:	ldr	r3, [pc, #92]	; 3da0 <sf_gen_atmfield_code.constprop.27+0x64>
    3d40:	push	{r4, r5, r6, lr}
    3d44:	add	r3, pc, r3
    3d48:	ldr	r2, [r3, #888]	; 0x378
    3d4c:	cmp	r2, #0
    3d50:	beq	3d90 <sf_gen_atmfield_code.constprop.27+0x54>
    3d54:	mov	r4, r0
    3d58:	ldr	r0, [r3, #896]	; 0x380
    3d5c:	cmn	r0, #1
    3d60:	beq	3d9c <sf_gen_atmfield_code.constprop.27+0x60>
    3d64:	mov	r1, #16
    3d68:	bl	2ef8 <gen_load_llrel>
    3d6c:	mov	r5, r0
    3d70:	bl	29f8 <newchunk.constprop.50>
    3d74:	mov	r2, #21
    3d78:	mov	r3, r0
    3d7c:	str	r5, [r0, #4]
    3d80:	str	r0, [r3, #96]	; 0x60
    3d84:	str	r4, [r0, #20]
    3d88:	str	r2, [r0, #8]
    3d8c:	pop	{r4, r5, r6, pc}
    3d90:	ldr	r0, [pc, #12]	; 3da4 <sf_gen_atmfield_code.constprop.27+0x68>
    3d94:	add	r0, pc, r0
    3d98:	bl	2370 <sf_bpf_error>
    3d9c:	bl	f18 <abort@plt>
    3da0:	.word	0x0003a624
    3da4:	.word	0x0001cc7c

00003da8 <gen_mac_multicast>:
    3da8:	push	{r4, r5, r6, r7, r8, lr}
    3dac:	mov	r1, #16
    3db0:	bl	2ef8 <gen_load_llrel>
    3db4:	ldr	r2, [pc, #172]	; 3e68 <gen_mac_multicast+0xc0>
    3db8:	add	r2, pc, r2
    3dbc:	add	r3, r2, #728	; 0x2d8
    3dc0:	ldr	r4, [r2, #724]	; 0x2d4
    3dc4:	lsl	r5, r4, #3
    3dc8:	add	r1, r2, r5
    3dcc:	add	r5, r3, r5
    3dd0:	ldr	r1, [r1, #728]	; 0x2d8
    3dd4:	cmp	r1, #207	; 0xcf
    3dd8:	mov	r6, r0
    3ddc:	bhi	3e4c <gen_mac_multicast+0xa4>
    3de0:	add	r3, r4, #1
    3de4:	cmp	r3, #15
    3de8:	str	r3, [r2, #724]	; 0x2d4
    3dec:	add	r7, r5, #8
    3df0:	bgt	3e5c <gen_mac_multicast+0xb4>
    3df4:	mov	r4, #1024	; 0x400
    3df8:	mov	r1, #1
    3dfc:	lsl	r4, r4, r3
    3e00:	mov	r0, r4
    3e04:	bl	d38 <calloc@plt>
    3e08:	cmp	r0, #0
    3e0c:	str	r0, [r5, #12]
    3e10:	beq	3e5c <gen_mac_multicast+0xb4>
    3e14:	cmp	r4, #207	; 0xcf
    3e18:	str	r4, [r5, #8]
    3e1c:	bls	3e5c <gen_mac_multicast+0xb4>
    3e20:	sub	r4, r4, #208	; 0xd0
    3e24:	add	r3, r0, r4
    3e28:	mov	r1, #69	; 0x45
    3e2c:	mov	r2, #1
    3e30:	str	r4, [r7]
    3e34:	mov	r0, r3
    3e38:	str	r3, [r3, #96]	; 0x60
    3e3c:	str	r6, [r3, #4]
    3e40:	str	r1, [r3, #8]
    3e44:	str	r2, [r3, #20]
    3e48:	pop	{r4, r5, r6, r7, r8, pc}
    3e4c:	ldr	r4, [r3, r4, lsl #3]
    3e50:	ldr	r0, [r5, #4]
    3e54:	mov	r7, r5
    3e58:	b	3e20 <gen_mac_multicast+0x78>
    3e5c:	ldr	r0, [pc, #8]	; 3e6c <gen_mac_multicast+0xc4>
    3e60:	add	r0, pc, r0
    3e64:	bl	2370 <sf_bpf_error>
    3e68:	.word	0x0003a5b0
    3e6c:	.word	0x0001cb80

00003e70 <gen_cmp.constprop.42>:
    3e70:	push	{r4, r5, r6, r7, r8, lr}
    3e74:	mov	r6, r2
    3e78:	bl	2ef8 <gen_load_llrel>
    3e7c:	ldr	r2, [pc, #168]	; 3f2c <gen_cmp.constprop.42+0xbc>
    3e80:	add	r2, pc, r2
    3e84:	add	r3, r2, #728	; 0x2d8
    3e88:	ldr	r4, [r2, #724]	; 0x2d4
    3e8c:	lsl	r5, r4, #3
    3e90:	add	r1, r2, r5
    3e94:	add	r5, r3, r5
    3e98:	ldr	r1, [r1, #728]	; 0x2d8
    3e9c:	cmp	r1, #207	; 0xcf
    3ea0:	mov	r7, r0
    3ea4:	bhi	3f10 <gen_cmp.constprop.42+0xa0>
    3ea8:	add	r3, r4, #1
    3eac:	cmp	r3, #15
    3eb0:	str	r3, [r2, #724]	; 0x2d4
    3eb4:	add	r8, r5, #8
    3eb8:	bgt	3f20 <gen_cmp.constprop.42+0xb0>
    3ebc:	mov	r4, #1024	; 0x400
    3ec0:	mov	r1, #1
    3ec4:	lsl	r4, r4, r3
    3ec8:	mov	r0, r4
    3ecc:	bl	d38 <calloc@plt>
    3ed0:	cmp	r0, #0
    3ed4:	str	r0, [r5, #12]
    3ed8:	beq	3f20 <gen_cmp.constprop.42+0xb0>
    3edc:	cmp	r4, #207	; 0xcf
    3ee0:	str	r4, [r5, #8]
    3ee4:	bls	3f20 <gen_cmp.constprop.42+0xb0>
    3ee8:	sub	r4, r4, #208	; 0xd0
    3eec:	add	r3, r0, r4
    3ef0:	mov	r2, #21
    3ef4:	str	r4, [r8]
    3ef8:	mov	r0, r3
    3efc:	str	r3, [r3, #96]	; 0x60
    3f00:	str	r7, [r3, #4]
    3f04:	str	r6, [r3, #20]
    3f08:	str	r2, [r3, #8]
    3f0c:	pop	{r4, r5, r6, r7, r8, pc}
    3f10:	ldr	r4, [r3, r4, lsl #3]
    3f14:	ldr	r0, [r5, #4]
    3f18:	mov	r8, r5
    3f1c:	b	3ee8 <gen_cmp.constprop.42+0x78>
    3f20:	ldr	r0, [pc, #8]	; 3f30 <gen_cmp.constprop.42+0xc0>
    3f24:	add	r0, pc, r0
    3f28:	bl	2370 <sf_bpf_error>
    3f2c:	.word	0x0003a4e8
    3f30:	.word	0x0001cabc

00003f34 <gen_uncond>:
    3f34:	ldr	r3, [pc, #320]	; 407c <gen_uncond+0x148>
    3f38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3f3c:	add	r3, pc, r3
    3f40:	add	r7, r3, #728	; 0x2d8
    3f44:	ldr	r4, [r3, #724]	; 0x2d4
    3f48:	mov	r8, r0
    3f4c:	lsl	r6, r4, #3
    3f50:	add	r2, r3, r6
    3f54:	add	sl, r7, r6
    3f58:	ldr	r2, [r2, #728]	; 0x2d8
    3f5c:	cmp	r2, #19
    3f60:	bhi	404c <gen_uncond+0x118>
    3f64:	add	r4, r4, #1
    3f68:	cmp	r4, #15
    3f6c:	str	r4, [r3, #724]	; 0x2d4
    3f70:	add	r9, sl, #8
    3f74:	bgt	4070 <gen_uncond+0x13c>
    3f78:	mov	r3, #1024	; 0x400
    3f7c:	mov	r1, #1
    3f80:	lsl	r5, r3, r4
    3f84:	mov	r0, r5
    3f88:	bl	d38 <calloc@plt>
    3f8c:	cmp	r0, #0
    3f90:	str	r0, [sl, #12]
    3f94:	beq	4070 <gen_uncond+0x13c>
    3f98:	cmp	r5, #19
    3f9c:	str	r5, [sl, #8]
    3fa0:	bls	4070 <gen_uncond+0x13c>
    3fa4:	add	r6, r6, #8
    3fa8:	add	r7, r7, r6
    3fac:	lsl	r6, r4, #3
    3fb0:	ldr	r1, [pc, #200]	; 4080 <gen_uncond+0x14c>
    3fb4:	sub	r3, r5, #20
    3fb8:	add	r1, pc, r1
    3fbc:	add	r5, r0, r3
    3fc0:	add	r6, r1, r6
    3fc4:	clz	r2, r8
    3fc8:	mov	ip, #0
    3fcc:	lsr	r2, r2, #5
    3fd0:	str	r3, [r9]
    3fd4:	str	ip, [r0, r3]
    3fd8:	str	r2, [r5, #12]
    3fdc:	ldr	r3, [r6, #728]	; 0x2d8
    3fe0:	cmp	r3, #207	; 0xcf
    3fe4:	bhi	4060 <gen_uncond+0x12c>
    3fe8:	add	r4, r4, #1
    3fec:	cmp	r4, #15
    3ff0:	str	r4, [r1, #724]	; 0x2d4
    3ff4:	add	r6, r7, #8
    3ff8:	bgt	4070 <gen_uncond+0x13c>
    3ffc:	mov	r3, #1024	; 0x400
    4000:	mov	r1, #1
    4004:	lsl	r4, r3, r4
    4008:	mov	r0, r4
    400c:	bl	d38 <calloc@plt>
    4010:	cmp	r0, #0
    4014:	str	r0, [r7, #12]
    4018:	beq	4070 <gen_uncond+0x13c>
    401c:	cmp	r4, #207	; 0xcf
    4020:	str	r4, [r7, #8]
    4024:	bls	4070 <gen_uncond+0x13c>
    4028:	sub	r4, r4, #208	; 0xd0
    402c:	add	r3, r0, r4
    4030:	mov	r2, #21
    4034:	str	r4, [r6]
    4038:	mov	r0, r3
    403c:	str	r3, [r3, #96]	; 0x60
    4040:	str	r5, [r3, #4]
    4044:	str	r2, [r3, #8]
    4048:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    404c:	ldr	r5, [r7, r4, lsl #3]
    4050:	ldr	r0, [sl, #4]
    4054:	mov	r7, sl
    4058:	mov	r9, sl
    405c:	b	3fb0 <gen_uncond+0x7c>
    4060:	ldr	r4, [r7]
    4064:	ldr	r0, [r7, #4]
    4068:	mov	r6, r7
    406c:	b	4028 <gen_uncond+0xf4>
    4070:	ldr	r0, [pc, #12]	; 4084 <gen_uncond+0x150>
    4074:	add	r0, pc, r0
    4078:	bl	2370 <sf_bpf_error>
    407c:	.word	0x0003a42c
    4080:	.word	0x0003a3b0
    4084:	.word	0x0001c96c

00004088 <gen_portrangeatom>:
    4088:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    408c:	cmp	r1, r2
    4090:	movgt	r9, r2
    4094:	movle	r6, r2
    4098:	mov	r4, r0
    409c:	movle	r9, r1
    40a0:	movgt	r6, r1
    40a4:	bl	2a98 <gen_loadx_iphdrlen>
    40a8:	mov	r7, r0
    40ac:	bl	2810 <newchunk.constprop.49>
    40b0:	ldr	r3, [pc, #596]	; 430c <gen_portrangeatom+0x284>
    40b4:	mov	r2, #72	; 0x48
    40b8:	add	r3, pc, r3
    40bc:	mov	ip, r7
    40c0:	ldr	r8, [r3, #872]	; 0x368
    40c4:	ldr	r3, [r3, #868]	; 0x364
    40c8:	add	r8, r8, r3
    40cc:	add	r8, r8, r4
    40d0:	str	r2, [r0]
    40d4:	str	r8, [r0, #12]
    40d8:	b	40e0 <gen_portrangeatom+0x58>
    40dc:	mov	ip, r3
    40e0:	ldr	r3, [ip, #16]
    40e4:	cmp	r3, #0
    40e8:	bne	40dc <gen_portrangeatom+0x54>
    40ec:	ldr	r2, [pc, #540]	; 4310 <gen_portrangeatom+0x288>
    40f0:	str	r0, [ip, #16]
    40f4:	add	r2, pc, r2
    40f8:	add	r3, r2, #728	; 0x2d8
    40fc:	ldr	r5, [r2, #724]	; 0x2d4
    4100:	lsl	sl, r5, #3
    4104:	add	r1, r2, sl
    4108:	add	sl, r3, sl
    410c:	ldr	r1, [r1, #728]	; 0x2d8
    4110:	cmp	r1, #207	; 0xcf
    4114:	bhi	42e0 <gen_portrangeatom+0x258>
    4118:	add	r3, r5, #1
    411c:	cmp	r3, #15
    4120:	str	r3, [r2, #724]	; 0x2d4
    4124:	add	fp, sl, #8
    4128:	bgt	4300 <gen_portrangeatom+0x278>
    412c:	mov	r5, #1024	; 0x400
    4130:	mov	r1, #1
    4134:	lsl	r5, r5, r3
    4138:	mov	r0, r5
    413c:	bl	d38 <calloc@plt>
    4140:	cmp	r0, #0
    4144:	str	r0, [sl, #12]
    4148:	beq	4300 <gen_portrangeatom+0x278>
    414c:	cmp	r5, #207	; 0xcf
    4150:	str	r5, [sl, #8]
    4154:	bls	4300 <gen_portrangeatom+0x278>
    4158:	sub	r5, r5, #208	; 0xd0
    415c:	add	r4, r0, r5
    4160:	mov	r3, #53	; 0x35
    4164:	str	r5, [fp]
    4168:	str	r3, [r4, #8]
    416c:	str	r7, [r4, #4]
    4170:	str	r4, [r4, #96]	; 0x60
    4174:	str	r9, [r4, #20]
    4178:	bl	2a98 <gen_loadx_iphdrlen>
    417c:	mov	r7, r0
    4180:	bl	2810 <newchunk.constprop.49>
    4184:	mov	r3, #72	; 0x48
    4188:	mov	ip, r7
    418c:	str	r8, [r0, #12]
    4190:	str	r3, [r0]
    4194:	b	419c <gen_portrangeatom+0x114>
    4198:	mov	ip, r3
    419c:	ldr	r3, [ip, #16]
    41a0:	cmp	r3, #0
    41a4:	bne	4198 <gen_portrangeatom+0x110>
    41a8:	ldr	r2, [pc, #356]	; 4314 <gen_portrangeatom+0x28c>
    41ac:	str	r0, [ip, #16]
    41b0:	add	r2, pc, r2
    41b4:	add	r3, r2, #728	; 0x2d8
    41b8:	ldr	r5, [r2, #724]	; 0x2d4
    41bc:	lsl	r8, r5, #3
    41c0:	add	r1, r2, r8
    41c4:	add	r8, r3, r8
    41c8:	ldr	r1, [r1, #728]	; 0x2d8
    41cc:	cmp	r1, #207	; 0xcf
    41d0:	bhi	42f0 <gen_portrangeatom+0x268>
    41d4:	add	r3, r5, #1
    41d8:	cmp	r3, #15
    41dc:	str	r3, [r2, #724]	; 0x2d4
    41e0:	add	r9, r8, #8
    41e4:	bgt	4300 <gen_portrangeatom+0x278>
    41e8:	mov	r5, #1024	; 0x400
    41ec:	mov	r1, #1
    41f0:	lsl	r5, r5, r3
    41f4:	mov	r0, r5
    41f8:	bl	d38 <calloc@plt>
    41fc:	cmp	r0, #0
    4200:	str	r0, [r8, #12]
    4204:	beq	4300 <gen_portrangeatom+0x278>
    4208:	cmp	r5, #207	; 0xcf
    420c:	str	r5, [r8, #8]
    4210:	bls	4300 <gen_portrangeatom+0x278>
    4214:	sub	r5, r5, #208	; 0xd0
    4218:	add	ip, r0, r5
    421c:	str	r5, [r9]
    4220:	mov	r2, #37	; 0x25
    4224:	ldr	r3, [ip, #44]	; 0x2c
    4228:	clz	r3, r3
    422c:	lsr	r3, r3, #5
    4230:	str	r3, [ip, #44]	; 0x2c
    4234:	str	ip, [ip, #96]	; 0x60
    4238:	str	r7, [ip, #4]
    423c:	str	r6, [ip, #20]
    4240:	str	r2, [ip, #8]
    4244:	mov	r3, r4
    4248:	b	4260 <gen_portrangeatom+0x1d8>
    424c:	ldr	r2, [r3, #60]	; 0x3c
    4250:	str	ip, [r3, #60]	; 0x3c
    4254:	cmp	r2, #0
    4258:	beq	427c <gen_portrangeatom+0x1f4>
    425c:	mov	r3, r2
    4260:	ldr	r2, [r3, #44]	; 0x2c
    4264:	cmp	r2, #0
    4268:	beq	424c <gen_portrangeatom+0x1c4>
    426c:	ldr	r2, [r3, #84]	; 0x54
    4270:	str	ip, [r3, #84]	; 0x54
    4274:	cmp	r2, #0
    4278:	bne	425c <gen_portrangeatom+0x1d4>
    427c:	ldr	r2, [r4, #44]	; 0x2c
    4280:	mov	r3, ip
    4284:	clz	r2, r2
    4288:	lsr	r2, r2, #5
    428c:	str	r2, [r4, #44]	; 0x2c
    4290:	ldr	r2, [ip, #44]	; 0x2c
    4294:	clz	r2, r2
    4298:	lsr	r2, r2, #5
    429c:	str	r2, [ip, #44]	; 0x2c
    42a0:	ldr	r2, [r3, #44]	; 0x2c
    42a4:	cmp	r2, #0
    42a8:	addeq	r2, r3, #60	; 0x3c
    42ac:	addne	r2, r3, #84	; 0x54
    42b0:	ldr	r3, [r2]
    42b4:	cmp	r3, #0
    42b8:	bne	42a0 <gen_portrangeatom+0x218>
    42bc:	str	r4, [r2]
    42c0:	ldr	r3, [ip, #44]	; 0x2c
    42c4:	clz	r3, r3
    42c8:	lsr	r3, r3, #5
    42cc:	str	r3, [ip, #44]	; 0x2c
    42d0:	ldr	r3, [r4, #96]	; 0x60
    42d4:	mov	r0, ip
    42d8:	str	r3, [ip, #96]	; 0x60
    42dc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    42e0:	ldr	r5, [r3, r5, lsl #3]
    42e4:	ldr	r0, [sl, #4]
    42e8:	mov	fp, sl
    42ec:	b	4158 <gen_portrangeatom+0xd0>
    42f0:	ldr	r5, [r3, r5, lsl #3]
    42f4:	ldr	r0, [r8, #4]
    42f8:	mov	r9, r8
    42fc:	b	4214 <gen_portrangeatom+0x18c>
    4300:	ldr	r0, [pc, #16]	; 4318 <gen_portrangeatom+0x290>
    4304:	add	r0, pc, r0
    4308:	bl	2370 <sf_bpf_error>
    430c:	.word	0x0003a2b0
    4310:	.word	0x0003a274
    4314:	.word	0x0003a1b8
    4318:	.word	0x0001c6dc

0000431c <gen_load_macplrel>:
    431c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4320:	mov	r6, r0
    4324:	ldr	r5, [pc, #1172]	; 47c0 <gen_load_macplrel+0x4a4>
    4328:	sub	sp, sp, #12
    432c:	add	r5, pc, r5
    4330:	mov	r8, r1
    4334:	ldr	r3, [r5, #860]	; 0x35c
    4338:	cmp	r3, #0
    433c:	beq	449c <gen_load_macplrel+0x180>
    4340:	ldr	r4, [r5, #864]	; 0x360
    4344:	cmn	r4, #1
    4348:	beq	44bc <gen_load_macplrel+0x1a0>
    434c:	ldr	r3, [pc, #1136]	; 47c4 <gen_load_macplrel+0x4a8>
    4350:	add	r3, pc, r3
    4354:	add	r7, r3, #728	; 0x2d8
    4358:	ldr	r9, [r3, #724]	; 0x2d4
    435c:	lsl	sl, r9, #3
    4360:	add	r1, r3, sl
    4364:	add	r2, r7, sl
    4368:	ldr	r1, [r1, #728]	; 0x2d8
    436c:	cmp	r1, #19
    4370:	bhi	4488 <gen_load_macplrel+0x16c>
    4374:	add	r9, r9, #1
    4378:	cmp	r9, #15
    437c:	str	r9, [r3, #724]	; 0x2d4
    4380:	add	fp, r2, #8
    4384:	bgt	47b4 <gen_load_macplrel+0x498>
    4388:	mov	r5, #1024	; 0x400
    438c:	mov	r1, #1
    4390:	lsl	r5, r5, r9
    4394:	mov	r0, r5
    4398:	str	r2, [sp, #4]
    439c:	bl	d38 <calloc@plt>
    43a0:	ldr	r2, [sp, #4]
    43a4:	cmp	r0, #0
    43a8:	str	r0, [r2, #12]
    43ac:	beq	47b4 <gen_load_macplrel+0x498>
    43b0:	cmp	r5, #19
    43b4:	str	r5, [r2, #8]
    43b8:	bls	47b4 <gen_load_macplrel+0x498>
    43bc:	add	sl, sl, #8
    43c0:	add	r7, r7, sl
    43c4:	lsl	sl, r9, #3
    43c8:	ldr	r1, [pc, #1016]	; 47c8 <gen_load_macplrel+0x4ac>
    43cc:	sub	r2, r5, #20
    43d0:	add	r1, pc, r1
    43d4:	add	sl, r1, sl
    43d8:	add	r5, r0, r2
    43dc:	mov	r3, #97	; 0x61
    43e0:	str	r2, [fp]
    43e4:	str	r3, [r0, r2]
    43e8:	str	r4, [r5, #12]
    43ec:	ldr	r3, [sl, #728]	; 0x2d8
    43f0:	orr	r8, r8, #64	; 0x40
    43f4:	cmp	r3, #19
    43f8:	bhi	4478 <gen_load_macplrel+0x15c>
    43fc:	add	r3, r9, #1
    4400:	cmp	r3, #15
    4404:	str	r3, [r1, #724]	; 0x2d4
    4408:	add	r9, r7, #8
    440c:	bgt	47b4 <gen_load_macplrel+0x498>
    4410:	mov	r4, #1024	; 0x400
    4414:	mov	r1, #1
    4418:	lsl	r4, r4, r3
    441c:	mov	r0, r4
    4420:	bl	d38 <calloc@plt>
    4424:	cmp	r0, #0
    4428:	str	r0, [r7, #12]
    442c:	beq	47b4 <gen_load_macplrel+0x498>
    4430:	cmp	r4, #19
    4434:	str	r4, [r7, #8]
    4438:	bls	47b4 <gen_load_macplrel+0x498>
    443c:	sub	r3, r4, #20
    4440:	add	r1, r0, r3
    4444:	str	r3, [r9]
    4448:	mov	r2, r5
    444c:	str	r8, [r0, r3]
    4450:	str	r6, [r1, #12]
    4454:	b	445c <gen_load_macplrel+0x140>
    4458:	mov	r2, r3
    445c:	ldr	r3, [r2, #16]
    4460:	cmp	r3, #0
    4464:	bne	4458 <gen_load_macplrel+0x13c>
    4468:	mov	r0, r5
    446c:	str	r1, [r2, #16]
    4470:	add	sp, sp, #12
    4474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4478:	ldr	r4, [r7]
    447c:	ldr	r0, [r7, #4]
    4480:	mov	r9, r7
    4484:	b	443c <gen_load_macplrel+0x120>
    4488:	ldr	r5, [r7, r9, lsl #3]
    448c:	ldr	r0, [r2, #4]
    4490:	mov	r7, r2
    4494:	mov	fp, r2
    4498:	b	43c8 <gen_load_macplrel+0xac>
    449c:	bl	2810 <newchunk.constprop.49>
    44a0:	ldr	r3, [r5, #872]	; 0x368
    44a4:	orr	r8, r8, #32
    44a8:	add	r6, r3, r6
    44ac:	str	r6, [r0, #12]
    44b0:	str	r8, [r0]
    44b4:	add	sp, sp, #12
    44b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    44bc:	ldr	r4, [r5, #656]	; 0x290
    44c0:	lsl	r3, r4, #2
    44c4:	add	r2, r5, r3
    44c8:	ldr	r2, [r2, #660]	; 0x294
    44cc:	cmp	r2, #0
    44d0:	beq	4798 <gen_load_macplrel+0x47c>
    44d4:	add	r4, r4, #1
    44d8:	asr	r3, r4, #31
    44dc:	lsr	r3, r3, #28
    44e0:	add	r4, r4, r3
    44e4:	and	r4, r4, #15
    44e8:	sub	r4, r4, r3
    44ec:	str	r4, [r5, #656]	; 0x290
    44f0:	lsl	r3, r4, #2
    44f4:	add	r2, r5, r3
    44f8:	ldr	r2, [r2, #660]	; 0x294
    44fc:	cmp	r2, #0
    4500:	beq	4798 <gen_load_macplrel+0x47c>
    4504:	add	r4, r4, #1
    4508:	asr	r3, r4, #31
    450c:	lsr	r3, r3, #28
    4510:	add	r4, r4, r3
    4514:	and	r4, r4, #15
    4518:	sub	r4, r4, r3
    451c:	lsl	r3, r4, #2
    4520:	add	r2, r5, r3
    4524:	ldr	r2, [r2, #660]	; 0x294
    4528:	cmp	r2, #0
    452c:	beq	478c <gen_load_macplrel+0x470>
    4530:	add	r4, r4, #1
    4534:	asr	r3, r4, #31
    4538:	lsr	r3, r3, #28
    453c:	add	r4, r4, r3
    4540:	and	r4, r4, #15
    4544:	sub	r4, r4, r3
    4548:	lsl	r3, r4, #2
    454c:	add	r2, r5, r3
    4550:	ldr	r2, [r2, #660]	; 0x294
    4554:	cmp	r2, #0
    4558:	beq	478c <gen_load_macplrel+0x470>
    455c:	add	r4, r4, #1
    4560:	asr	r3, r4, #31
    4564:	lsr	r3, r3, #28
    4568:	add	r4, r4, r3
    456c:	and	r4, r4, #15
    4570:	sub	r4, r4, r3
    4574:	lsl	r3, r4, #2
    4578:	add	r2, r5, r3
    457c:	ldr	r2, [r2, #660]	; 0x294
    4580:	cmp	r2, #0
    4584:	beq	478c <gen_load_macplrel+0x470>
    4588:	add	r4, r4, #1
    458c:	asr	r3, r4, #31
    4590:	lsr	r3, r3, #28
    4594:	add	r4, r4, r3
    4598:	and	r4, r4, #15
    459c:	sub	r4, r4, r3
    45a0:	lsl	r3, r4, #2
    45a4:	add	r2, r5, r3
    45a8:	ldr	r2, [r2, #660]	; 0x294
    45ac:	cmp	r2, #0
    45b0:	beq	478c <gen_load_macplrel+0x470>
    45b4:	add	r4, r4, #1
    45b8:	asr	r3, r4, #31
    45bc:	lsr	r3, r3, #28
    45c0:	add	r4, r4, r3
    45c4:	and	r4, r4, #15
    45c8:	sub	r4, r4, r3
    45cc:	lsl	r3, r4, #2
    45d0:	add	r2, r5, r3
    45d4:	ldr	r2, [r2, #660]	; 0x294
    45d8:	cmp	r2, #0
    45dc:	beq	478c <gen_load_macplrel+0x470>
    45e0:	add	r4, r4, #1
    45e4:	asr	r3, r4, #31
    45e8:	lsr	r3, r3, #28
    45ec:	add	r4, r4, r3
    45f0:	and	r4, r4, #15
    45f4:	sub	r4, r4, r3
    45f8:	lsl	r3, r4, #2
    45fc:	add	r5, r5, r3
    4600:	ldr	r2, [r5, #660]	; 0x294
    4604:	cmp	r2, #0
    4608:	beq	478c <gen_load_macplrel+0x470>
    460c:	add	r4, r4, #1
    4610:	ldr	r2, [pc, #436]	; 47cc <gen_load_macplrel+0x4b0>
    4614:	asr	r3, r4, #31
    4618:	add	r2, pc, r2
    461c:	lsr	r3, r3, #28
    4620:	add	r4, r4, r3
    4624:	and	r4, r4, #15
    4628:	sub	r4, r4, r3
    462c:	lsl	r3, r4, #2
    4630:	add	r1, r2, r3
    4634:	ldr	r1, [r1, #660]	; 0x294
    4638:	cmp	r1, #0
    463c:	beq	478c <gen_load_macplrel+0x470>
    4640:	add	r4, r4, #1
    4644:	asr	r3, r4, #31
    4648:	lsr	r3, r3, #28
    464c:	add	r4, r4, r3
    4650:	and	r4, r4, #15
    4654:	sub	r4, r4, r3
    4658:	lsl	r3, r4, #2
    465c:	add	r1, r2, r3
    4660:	ldr	r1, [r1, #660]	; 0x294
    4664:	cmp	r1, #0
    4668:	beq	478c <gen_load_macplrel+0x470>
    466c:	add	r4, r4, #1
    4670:	asr	r3, r4, #31
    4674:	lsr	r3, r3, #28
    4678:	add	r4, r4, r3
    467c:	and	r4, r4, #15
    4680:	sub	r4, r4, r3
    4684:	lsl	r3, r4, #2
    4688:	add	r1, r2, r3
    468c:	ldr	r1, [r1, #660]	; 0x294
    4690:	cmp	r1, #0
    4694:	beq	478c <gen_load_macplrel+0x470>
    4698:	add	r4, r4, #1
    469c:	asr	r3, r4, #31
    46a0:	lsr	r3, r3, #28
    46a4:	add	r4, r4, r3
    46a8:	and	r4, r4, #15
    46ac:	sub	r4, r4, r3
    46b0:	lsl	r3, r4, #2
    46b4:	add	r1, r2, r3
    46b8:	ldr	r1, [r1, #660]	; 0x294
    46bc:	cmp	r1, #0
    46c0:	beq	478c <gen_load_macplrel+0x470>
    46c4:	add	r4, r4, #1
    46c8:	asr	r3, r4, #31
    46cc:	lsr	r3, r3, #28
    46d0:	add	r4, r4, r3
    46d4:	and	r4, r4, #15
    46d8:	sub	r4, r4, r3
    46dc:	lsl	r3, r4, #2
    46e0:	add	r1, r2, r3
    46e4:	ldr	r1, [r1, #660]	; 0x294
    46e8:	cmp	r1, #0
    46ec:	beq	478c <gen_load_macplrel+0x470>
    46f0:	add	r4, r4, #1
    46f4:	asr	r3, r4, #31
    46f8:	lsr	r3, r3, #28
    46fc:	add	r4, r4, r3
    4700:	and	r4, r4, #15
    4704:	sub	r4, r4, r3
    4708:	lsl	r3, r4, #2
    470c:	add	r1, r2, r3
    4710:	ldr	r1, [r1, #660]	; 0x294
    4714:	cmp	r1, #0
    4718:	beq	478c <gen_load_macplrel+0x470>
    471c:	add	r4, r4, #1
    4720:	asr	r3, r4, #31
    4724:	lsr	r3, r3, #28
    4728:	add	r4, r4, r3
    472c:	and	r4, r4, #15
    4730:	sub	r4, r4, r3
    4734:	lsl	r3, r4, #2
    4738:	add	r1, r2, r3
    473c:	ldr	r1, [r1, #660]	; 0x294
    4740:	cmp	r1, #0
    4744:	beq	478c <gen_load_macplrel+0x470>
    4748:	add	r4, r4, #1
    474c:	asr	r3, r4, #31
    4750:	lsr	r3, r3, #28
    4754:	add	r4, r4, r3
    4758:	and	r4, r4, #15
    475c:	sub	r4, r4, r3
    4760:	lsl	r3, r4, #2
    4764:	add	r1, r2, r3
    4768:	ldr	r1, [r1, #660]	; 0x294
    476c:	cmp	r1, #0
    4770:	beq	478c <gen_load_macplrel+0x470>
    4774:	ldr	r0, [pc, #84]	; 47d0 <gen_load_macplrel+0x4b4>
    4778:	add	r3, r4, #1
    477c:	and	r3, r3, #15
    4780:	add	r0, pc, r0
    4784:	str	r3, [r2, #656]	; 0x290
    4788:	bl	2370 <sf_bpf_error>
    478c:	ldr	r2, [pc, #64]	; 47d4 <gen_load_macplrel+0x4b8>
    4790:	add	r2, pc, r2
    4794:	str	r4, [r2, #656]	; 0x290
    4798:	ldr	r2, [pc, #56]	; 47d8 <gen_load_macplrel+0x4bc>
    479c:	mov	r1, #1
    47a0:	add	r2, pc, r2
    47a4:	add	r3, r2, r3
    47a8:	str	r4, [r2, #864]	; 0x360
    47ac:	str	r1, [r3, #660]	; 0x294
    47b0:	b	434c <gen_load_macplrel+0x30>
    47b4:	ldr	r0, [pc, #32]	; 47dc <gen_load_macplrel+0x4c0>
    47b8:	add	r0, pc, r0
    47bc:	bl	2370 <sf_bpf_error>
    47c0:	.word	0x0003a03c
    47c4:	.word	0x0003a018
    47c8:	.word	0x00039f98
    47cc:	.word	0x00039d50
    47d0:	.word	0x0001c1c8
    47d4:	.word	0x00039bd8
    47d8:	.word	0x00039bc8
    47dc:	.word	0x0001c228

000047e0 <gen_cmp.constprop.38>:
    47e0:	push	{r4, r5, r6, r7, r8, lr}
    47e4:	mov	r6, r2
    47e8:	bl	431c <gen_load_macplrel>
    47ec:	ldr	r2, [pc, #168]	; 489c <gen_cmp.constprop.38+0xbc>
    47f0:	add	r2, pc, r2
    47f4:	add	r3, r2, #728	; 0x2d8
    47f8:	ldr	r4, [r2, #724]	; 0x2d4
    47fc:	lsl	r5, r4, #3
    4800:	add	r1, r2, r5
    4804:	add	r5, r3, r5
    4808:	ldr	r1, [r1, #728]	; 0x2d8
    480c:	cmp	r1, #207	; 0xcf
    4810:	mov	r7, r0
    4814:	bhi	4880 <gen_cmp.constprop.38+0xa0>
    4818:	add	r3, r4, #1
    481c:	cmp	r3, #15
    4820:	str	r3, [r2, #724]	; 0x2d4
    4824:	add	r8, r5, #8
    4828:	bgt	4890 <gen_cmp.constprop.38+0xb0>
    482c:	mov	r4, #1024	; 0x400
    4830:	mov	r1, #1
    4834:	lsl	r4, r4, r3
    4838:	mov	r0, r4
    483c:	bl	d38 <calloc@plt>
    4840:	cmp	r0, #0
    4844:	str	r0, [r5, #12]
    4848:	beq	4890 <gen_cmp.constprop.38+0xb0>
    484c:	cmp	r4, #207	; 0xcf
    4850:	str	r4, [r5, #8]
    4854:	bls	4890 <gen_cmp.constprop.38+0xb0>
    4858:	sub	r4, r4, #208	; 0xd0
    485c:	add	r3, r0, r4
    4860:	mov	r2, #21
    4864:	str	r4, [r8]
    4868:	mov	r0, r3
    486c:	str	r3, [r3, #96]	; 0x60
    4870:	str	r7, [r3, #4]
    4874:	str	r6, [r3, #20]
    4878:	str	r2, [r3, #8]
    487c:	pop	{r4, r5, r6, r7, r8, pc}
    4880:	ldr	r4, [r3, r4, lsl #3]
    4884:	ldr	r0, [r5, #4]
    4888:	mov	r8, r5
    488c:	b	4858 <gen_cmp.constprop.38+0x78>
    4890:	ldr	r0, [pc, #8]	; 48a0 <gen_cmp.constprop.38+0xc0>
    4894:	add	r0, pc, r0
    4898:	bl	2370 <sf_bpf_error>
    489c:	.word	0x00039b78
    48a0:	.word	0x0001c14c

000048a4 <gen_cmp.constprop.41>:
    48a4:	push	{r4, r5, r6, r7, r8, lr}
    48a8:	mov	r7, r2
    48ac:	ldr	r6, [pc, #180]	; 4968 <gen_cmp.constprop.41+0xc4>
    48b0:	add	r6, pc, r6
    48b4:	ldr	r3, [r6, #868]	; 0x364
    48b8:	add	r0, r0, r3
    48bc:	bl	431c <gen_load_macplrel>
    48c0:	ldr	r4, [r6, #724]	; 0x2d4
    48c4:	add	r3, r6, #728	; 0x2d8
    48c8:	lsl	r5, r4, #3
    48cc:	add	r2, r6, r5
    48d0:	add	r5, r3, r5
    48d4:	ldr	r2, [r2, #728]	; 0x2d8
    48d8:	cmp	r2, #207	; 0xcf
    48dc:	mov	r8, r0
    48e0:	bhi	494c <gen_cmp.constprop.41+0xa8>
    48e4:	add	r3, r4, #1
    48e8:	cmp	r3, #15
    48ec:	str	r3, [r6, #724]	; 0x2d4
    48f0:	add	r6, r5, #8
    48f4:	bgt	495c <gen_cmp.constprop.41+0xb8>
    48f8:	mov	r4, #1024	; 0x400
    48fc:	mov	r1, #1
    4900:	lsl	r4, r4, r3
    4904:	mov	r0, r4
    4908:	bl	d38 <calloc@plt>
    490c:	cmp	r0, #0
    4910:	str	r0, [r5, #12]
    4914:	beq	495c <gen_cmp.constprop.41+0xb8>
    4918:	cmp	r4, #207	; 0xcf
    491c:	str	r4, [r5, #8]
    4920:	bls	495c <gen_cmp.constprop.41+0xb8>
    4924:	sub	r4, r4, #208	; 0xd0
    4928:	add	r3, r0, r4
    492c:	mov	r2, #21
    4930:	str	r4, [r6]
    4934:	mov	r0, r3
    4938:	str	r3, [r3, #96]	; 0x60
    493c:	str	r8, [r3, #4]
    4940:	str	r7, [r3, #20]
    4944:	str	r2, [r3, #8]
    4948:	pop	{r4, r5, r6, r7, r8, pc}
    494c:	ldr	r4, [r3, r4, lsl #3]
    4950:	ldr	r0, [r5, #4]
    4954:	mov	r6, r5
    4958:	b	4924 <gen_cmp.constprop.41+0x80>
    495c:	ldr	r0, [pc, #8]	; 496c <gen_cmp.constprop.41+0xc8>
    4960:	add	r0, pc, r0
    4964:	bl	2370 <sf_bpf_error>
    4968:	.word	0x00039ab8
    496c:	.word	0x0001c080

00004970 <gen_portrangeatom6>:
    4970:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4974:	cmp	r1, r2
    4978:	ldr	r4, [pc, #540]	; 4b9c <gen_portrangeatom6+0x22c>
    497c:	mov	r6, r1
    4980:	add	r4, pc, r4
    4984:	mov	r1, #8
    4988:	ldr	r7, [r4, #868]	; 0x364
    498c:	movgt	r9, r2
    4990:	add	r7, r7, #40	; 0x28
    4994:	add	r7, r7, r0
    4998:	mov	r0, r7
    499c:	movle	r9, r6
    49a0:	movle	r6, r2
    49a4:	bl	431c <gen_load_macplrel>
    49a8:	ldr	r5, [r4, #724]	; 0x2d4
    49ac:	add	r3, r4, #728	; 0x2d8
    49b0:	lsl	r8, r5, #3
    49b4:	add	r2, r4, r8
    49b8:	add	r8, r3, r8
    49bc:	ldr	r2, [r2, #728]	; 0x2d8
    49c0:	cmp	r2, #207	; 0xcf
    49c4:	mov	sl, r0
    49c8:	bhi	4b70 <gen_portrangeatom6+0x200>
    49cc:	add	r3, r5, #1
    49d0:	cmp	r3, #15
    49d4:	str	r3, [r4, #724]	; 0x2d4
    49d8:	add	fp, r8, #8
    49dc:	bgt	4b90 <gen_portrangeatom6+0x220>
    49e0:	mov	r5, #1024	; 0x400
    49e4:	mov	r1, #1
    49e8:	lsl	r5, r5, r3
    49ec:	mov	r0, r5
    49f0:	bl	d38 <calloc@plt>
    49f4:	cmp	r0, #0
    49f8:	str	r0, [r8, #12]
    49fc:	beq	4b90 <gen_portrangeatom6+0x220>
    4a00:	cmp	r5, #207	; 0xcf
    4a04:	str	r5, [r8, #8]
    4a08:	bls	4b90 <gen_portrangeatom6+0x220>
    4a0c:	sub	r5, r5, #208	; 0xd0
    4a10:	add	r4, r0, r5
    4a14:	mov	r3, #53	; 0x35
    4a18:	str	r5, [fp]
    4a1c:	mov	r0, r7
    4a20:	str	r3, [r4, #8]
    4a24:	mov	r1, #8
    4a28:	str	r4, [r4, #96]	; 0x60
    4a2c:	str	sl, [r4, #4]
    4a30:	str	r9, [r4, #20]
    4a34:	bl	431c <gen_load_macplrel>
    4a38:	ldr	r2, [pc, #352]	; 4ba0 <gen_portrangeatom6+0x230>
    4a3c:	add	r2, pc, r2
    4a40:	add	r3, r2, #728	; 0x2d8
    4a44:	ldr	r5, [r2, #724]	; 0x2d4
    4a48:	lsl	r7, r5, #3
    4a4c:	add	r1, r2, r7
    4a50:	add	r7, r3, r7
    4a54:	ldr	r1, [r1, #728]	; 0x2d8
    4a58:	cmp	r1, #207	; 0xcf
    4a5c:	mov	r8, r0
    4a60:	bhi	4b80 <gen_portrangeatom6+0x210>
    4a64:	add	r3, r5, #1
    4a68:	cmp	r3, #15
    4a6c:	str	r3, [r2, #724]	; 0x2d4
    4a70:	add	r9, r7, #8
    4a74:	bgt	4b90 <gen_portrangeatom6+0x220>
    4a78:	mov	r5, #1024	; 0x400
    4a7c:	mov	r1, #1
    4a80:	lsl	r5, r5, r3
    4a84:	mov	r0, r5
    4a88:	bl	d38 <calloc@plt>
    4a8c:	cmp	r0, #0
    4a90:	str	r0, [r7, #12]
    4a94:	beq	4b90 <gen_portrangeatom6+0x220>
    4a98:	cmp	r5, #207	; 0xcf
    4a9c:	str	r5, [r7, #8]
    4aa0:	bls	4b90 <gen_portrangeatom6+0x220>
    4aa4:	sub	r5, r5, #208	; 0xd0
    4aa8:	add	ip, r0, r5
    4aac:	str	r5, [r9]
    4ab0:	mov	r2, #37	; 0x25
    4ab4:	ldr	r3, [ip, #44]	; 0x2c
    4ab8:	clz	r3, r3
    4abc:	lsr	r3, r3, #5
    4ac0:	str	r3, [ip, #44]	; 0x2c
    4ac4:	str	ip, [ip, #96]	; 0x60
    4ac8:	str	r8, [ip, #4]
    4acc:	str	r6, [ip, #20]
    4ad0:	str	r2, [ip, #8]
    4ad4:	mov	r3, r4
    4ad8:	b	4af0 <gen_portrangeatom6+0x180>
    4adc:	ldr	r2, [r3, #60]	; 0x3c
    4ae0:	str	ip, [r3, #60]	; 0x3c
    4ae4:	cmp	r2, #0
    4ae8:	beq	4b0c <gen_portrangeatom6+0x19c>
    4aec:	mov	r3, r2
    4af0:	ldr	r2, [r3, #44]	; 0x2c
    4af4:	cmp	r2, #0
    4af8:	beq	4adc <gen_portrangeatom6+0x16c>
    4afc:	ldr	r2, [r3, #84]	; 0x54
    4b00:	str	ip, [r3, #84]	; 0x54
    4b04:	cmp	r2, #0
    4b08:	bne	4aec <gen_portrangeatom6+0x17c>
    4b0c:	ldr	r2, [r4, #44]	; 0x2c
    4b10:	mov	r3, ip
    4b14:	clz	r2, r2
    4b18:	lsr	r2, r2, #5
    4b1c:	str	r2, [r4, #44]	; 0x2c
    4b20:	ldr	r2, [ip, #44]	; 0x2c
    4b24:	clz	r2, r2
    4b28:	lsr	r2, r2, #5
    4b2c:	str	r2, [ip, #44]	; 0x2c
    4b30:	ldr	r2, [r3, #44]	; 0x2c
    4b34:	cmp	r2, #0
    4b38:	addeq	r2, r3, #60	; 0x3c
    4b3c:	addne	r2, r3, #84	; 0x54
    4b40:	ldr	r3, [r2]
    4b44:	cmp	r3, #0
    4b48:	bne	4b30 <gen_portrangeatom6+0x1c0>
    4b4c:	str	r4, [r2]
    4b50:	ldr	r3, [ip, #44]	; 0x2c
    4b54:	clz	r3, r3
    4b58:	lsr	r3, r3, #5
    4b5c:	str	r3, [ip, #44]	; 0x2c
    4b60:	ldr	r3, [r4, #96]	; 0x60
    4b64:	mov	r0, ip
    4b68:	str	r3, [ip, #96]	; 0x60
    4b6c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    4b70:	ldr	r5, [r3, r5, lsl #3]
    4b74:	ldr	r0, [r8, #4]
    4b78:	mov	fp, r8
    4b7c:	b	4a0c <gen_portrangeatom6+0x9c>
    4b80:	ldr	r5, [r3, r5, lsl #3]
    4b84:	ldr	r0, [r7, #4]
    4b88:	mov	r9, r7
    4b8c:	b	4aa4 <gen_portrangeatom6+0x134>
    4b90:	ldr	r0, [pc, #12]	; 4ba4 <gen_portrangeatom6+0x234>
    4b94:	add	r0, pc, r0
    4b98:	bl	2370 <sf_bpf_error>
    4b9c:	.word	0x000399e8
    4ba0:	.word	0x0003992c
    4ba4:	.word	0x0001be4c

00004ba8 <sf_sdup>:
    4ba8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4bac:	mov	r7, r0
    4bb0:	bl	e4c <strlen@plt>
    4bb4:	ldr	r3, [pc, #188]	; 4c78 <sf_sdup+0xd0>
    4bb8:	add	r3, pc, r3
    4bbc:	add	r2, r3, #728	; 0x2d8
    4bc0:	add	r4, r0, #4
    4bc4:	bic	sl, r4, #3
    4bc8:	ldr	r4, [r3, #724]	; 0x2d4
    4bcc:	mov	r8, r0
    4bd0:	add	r6, r0, #1
    4bd4:	lsl	r5, r4, #3
    4bd8:	add	r1, r3, r5
    4bdc:	add	r5, r2, r5
    4be0:	ldr	r1, [r1, #728]	; 0x2d8
    4be4:	cmp	sl, r1
    4be8:	bls	4c5c <sf_sdup+0xb4>
    4bec:	add	r4, r4, #1
    4bf0:	cmp	r4, #15
    4bf4:	str	r4, [r3, #724]	; 0x2d4
    4bf8:	add	r9, r5, #8
    4bfc:	bgt	4c6c <sf_sdup+0xc4>
    4c00:	mov	r3, #1024	; 0x400
    4c04:	mov	r1, #1
    4c08:	lsl	r4, r3, r4
    4c0c:	mov	r0, r4
    4c10:	bl	d38 <calloc@plt>
    4c14:	cmp	r0, #0
    4c18:	str	r0, [r5, #12]
    4c1c:	beq	4c6c <sf_sdup+0xc4>
    4c20:	cmp	sl, r4
    4c24:	str	r4, [r5, #8]
    4c28:	bhi	4c6c <sf_sdup+0xc4>
    4c2c:	sub	r4, r4, sl
    4c30:	add	r5, r0, r4
    4c34:	str	r4, [r9]
    4c38:	mov	r1, r7
    4c3c:	mov	r0, r5
    4c40:	mov	r2, r6
    4c44:	bl	ea0 <strncpy@plt>
    4c48:	cmp	r6, #0
    4c4c:	movgt	r3, #0
    4c50:	mov	r0, r5
    4c54:	strbgt	r3, [r5, r8]
    4c58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4c5c:	ldr	r4, [r2, r4, lsl #3]
    4c60:	ldr	r0, [r5, #4]
    4c64:	mov	r9, r5
    4c68:	b	4c2c <sf_sdup+0x84>
    4c6c:	ldr	r0, [pc, #8]	; 4c7c <sf_sdup+0xd4>
    4c70:	add	r0, pc, r0
    4c74:	bl	2370 <sf_bpf_error>
    4c78:	.word	0x000397b0
    4c7c:	.word	0x0001bd70

00004c80 <sfbpf_compile>:
    4c80:	ldr	ip, [pc, #3132]	; 58c4 <sfbpf_compile+0xc44>
    4c84:	push	{r4, r5, r6, r7, lr}
    4c88:	add	ip, pc, ip
    4c8c:	ldr	lr, [pc, #3124]	; 58c8 <sfbpf_compile+0xc48>
    4c90:	sub	sp, sp, #28
    4c94:	mov	r5, ip
    4c98:	str	ip, [sp]
    4c9c:	str	r3, [sp, #16]
    4ca0:	ldr	ip, [pc, #3108]	; 58cc <sfbpf_compile+0xc4c>
    4ca4:	ldr	lr, [r5, lr]
    4ca8:	mov	r3, #0
    4cac:	ldr	r4, [pc, #3100]	; 58d0 <sfbpf_compile+0xc50>
    4cb0:	str	r3, [lr]
    4cb4:	ldr	ip, [r5, ip]
    4cb8:	add	r4, pc, r4
    4cbc:	stmib	sp, {r0, r1, r2}
    4cc0:	mov	r1, r3
    4cc4:	add	r0, r4, #660	; 0x294
    4cc8:	mov	r2, #64	; 0x40
    4ccc:	str	r3, [ip]
    4cd0:	str	r3, [r4, #900]	; 0x384
    4cd4:	str	r3, [r4, #656]	; 0x290
    4cd8:	bl	e88 <memset@plt>
    4cdc:	add	r0, r4, #264	; 0x108
    4ce0:	bl	d98 <_setjmp@plt>
    4ce4:	cmp	r0, #0
    4ce8:	beq	4d5c <sfbpf_compile+0xdc>
    4cec:	ldr	r4, [pc, #3040]	; 58d4 <sfbpf_compile+0xc54>
    4cf0:	add	r4, pc, r4
    4cf4:	ldr	r0, [r4, #904]	; 0x388
    4cf8:	cmp	r0, #0
    4cfc:	beq	4d0c <sfbpf_compile+0x8c>
    4d00:	bl	edc <freeaddrinfo@plt>
    4d04:	mov	r3, #0
    4d08:	str	r3, [r4, #904]	; 0x388
    4d0c:	bl	20468 <sf_lex_cleanup>
    4d10:	ldr	r3, [pc, #3008]	; 58d8 <sfbpf_compile+0xc58>
    4d14:	mov	r2, #0
    4d18:	add	r3, pc, r3
    4d1c:	add	r4, r3, #728	; 0x2d8
    4d20:	add	r5, r3, #856	; 0x358
    4d24:	mov	r6, r2
    4d28:	str	r2, [r3, #724]	; 0x2d4
    4d2c:	ldr	r0, [r4, #4]
    4d30:	cmp	r0, #0
    4d34:	beq	4d40 <sfbpf_compile+0xc0>
    4d38:	bl	da4 <free@plt>
    4d3c:	str	r6, [r4, #4]
    4d40:	add	r4, r4, #8
    4d44:	cmp	r5, r4
    4d48:	bne	4d2c <sfbpf_compile+0xac>
    4d4c:	mvn	r7, #0
    4d50:	mov	r0, r7
    4d54:	add	sp, sp, #28
    4d58:	pop	{r4, r5, r6, r7, pc}
    4d5c:	ldr	r3, [pc, #2936]	; 58dc <sfbpf_compile+0xc5c>
    4d60:	ldr	r2, [sp, #4]
    4d64:	add	r3, pc, r3
    4d68:	ldr	r1, [sp, #52]	; 0x34
    4d6c:	cmp	r2, #0
    4d70:	str	r1, [r3, #908]	; 0x38c
    4d74:	str	r2, [r3, #912]	; 0x390
    4d78:	beq	5284 <sfbpf_compile+0x604>
    4d7c:	ldr	r3, [sp, #16]
    4d80:	cmp	r3, #0
    4d84:	beq	51a4 <sfbpf_compile+0x524>
    4d88:	ldr	r0, [sp, #16]
    4d8c:	bl	2043c <sf_lex_init>
    4d90:	ldr	r3, [pc, #2888]	; 58e0 <sfbpf_compile+0xc60>
    4d94:	ldr	r0, [pc, #2888]	; 58e4 <sfbpf_compile+0xc64>
    4d98:	add	r3, pc, r3
    4d9c:	add	r0, pc, r0
    4da0:	ldr	ip, [sp, #8]
    4da4:	mvn	r2, #0
    4da8:	mov	r1, #0
    4dac:	str	ip, [r3, #876]	; 0x36c
    4db0:	str	r1, [r3, #916]	; 0x394
    4db4:	str	r1, [r3, #888]	; 0x378
    4db8:	str	r1, [r3, #920]	; 0x398
    4dbc:	str	r1, [r3, #928]	; 0x3a0
    4dc0:	str	r1, [r3, #880]	; 0x370
    4dc4:	str	r1, [r3, #872]	; 0x368
    4dc8:	str	r1, [r3, #860]	; 0x35c
    4dcc:	str	r1, [r0, #4]
    4dd0:	str	r2, [r0]
    4dd4:	str	r2, [r3, #896]	; 0x380
    4dd8:	str	r2, [r3, #892]	; 0x37c
    4ddc:	str	r2, [r3, #924]	; 0x39c
    4de0:	str	r2, [r3, #884]	; 0x374
    4de4:	str	r2, [r3, #932]	; 0x3a4
    4de8:	str	r2, [r3, #936]	; 0x3a8
    4dec:	str	r2, [r3, #940]	; 0x3ac
    4df0:	str	r2, [r3, #944]	; 0x3b0
    4df4:	str	r2, [r3, #948]	; 0x3b4
    4df8:	str	r2, [r3, #856]	; 0x358
    4dfc:	str	r2, [r3, #864]	; 0x360
    4e00:	cmp	ip, #229	; 0xe5
    4e04:	addls	pc, pc, ip, lsl #2
    4e08:	b	5848 <sfbpf_compile+0xbc8>
    4e0c:	b	52b0 <sfbpf_compile+0x630>
    4e10:	b	52d4 <sfbpf_compile+0x654>
    4e14:	b	5848 <sfbpf_compile+0xbc8>
    4e18:	b	5848 <sfbpf_compile+0xbc8>
    4e1c:	b	5848 <sfbpf_compile+0xbc8>
    4e20:	b	5848 <sfbpf_compile+0xbc8>
    4e24:	b	5300 <sfbpf_compile+0x680>
    4e28:	b	5328 <sfbpf_compile+0x6a8>
    4e2c:	b	5350 <sfbpf_compile+0x6d0>
    4e30:	b	5364 <sfbpf_compile+0x6e4>
    4e34:	b	5378 <sfbpf_compile+0x6f8>
    4e38:	b	53a0 <sfbpf_compile+0x720>
    4e3c:	b	53c4 <sfbpf_compile+0x744>
    4e40:	b	5848 <sfbpf_compile+0xbc8>
    4e44:	b	5848 <sfbpf_compile+0xbc8>
    4e48:	b	53e4 <sfbpf_compile+0x764>
    4e4c:	b	53f8 <sfbpf_compile+0x778>
    4e50:	b	5848 <sfbpf_compile+0xbc8>
    4e54:	b	5848 <sfbpf_compile+0xbc8>
    4e58:	b	53a0 <sfbpf_compile+0x720>
    4e5c:	b	5848 <sfbpf_compile+0xbc8>
    4e60:	b	5848 <sfbpf_compile+0xbc8>
    4e64:	b	5848 <sfbpf_compile+0xbc8>
    4e68:	b	5848 <sfbpf_compile+0xbc8>
    4e6c:	b	5848 <sfbpf_compile+0xbc8>
    4e70:	b	5848 <sfbpf_compile+0xbc8>
    4e74:	b	5848 <sfbpf_compile+0xbc8>
    4e78:	b	5848 <sfbpf_compile+0xbc8>
    4e7c:	b	5848 <sfbpf_compile+0xbc8>
    4e80:	b	5848 <sfbpf_compile+0xbc8>
    4e84:	b	5848 <sfbpf_compile+0xbc8>
    4e88:	b	5848 <sfbpf_compile+0xbc8>
    4e8c:	b	5848 <sfbpf_compile+0xbc8>
    4e90:	b	5848 <sfbpf_compile+0xbc8>
    4e94:	b	5848 <sfbpf_compile+0xbc8>
    4e98:	b	5848 <sfbpf_compile+0xbc8>
    4e9c:	b	5848 <sfbpf_compile+0xbc8>
    4ea0:	b	5848 <sfbpf_compile+0xbc8>
    4ea4:	b	5848 <sfbpf_compile+0xbc8>
    4ea8:	b	5848 <sfbpf_compile+0xbc8>
    4eac:	b	5848 <sfbpf_compile+0xbc8>
    4eb0:	b	5848 <sfbpf_compile+0xbc8>
    4eb4:	b	5848 <sfbpf_compile+0xbc8>
    4eb8:	b	5848 <sfbpf_compile+0xbc8>
    4ebc:	b	5848 <sfbpf_compile+0xbc8>
    4ec0:	b	5848 <sfbpf_compile+0xbc8>
    4ec4:	b	5848 <sfbpf_compile+0xbc8>
    4ec8:	b	5848 <sfbpf_compile+0xbc8>
    4ecc:	b	5848 <sfbpf_compile+0xbc8>
    4ed0:	b	5848 <sfbpf_compile+0xbc8>
    4ed4:	b	5364 <sfbpf_compile+0x6e4>
    4ed8:	b	540c <sfbpf_compile+0x78c>
    4edc:	b	5848 <sfbpf_compile+0xbc8>
    4ee0:	b	5848 <sfbpf_compile+0xbc8>
    4ee4:	b	5848 <sfbpf_compile+0xbc8>
    4ee8:	b	5848 <sfbpf_compile+0xbc8>
    4eec:	b	5848 <sfbpf_compile+0xbc8>
    4ef0:	b	5848 <sfbpf_compile+0xbc8>
    4ef4:	b	5848 <sfbpf_compile+0xbc8>
    4ef8:	b	5848 <sfbpf_compile+0xbc8>
    4efc:	b	5848 <sfbpf_compile+0xbc8>
    4f00:	b	5848 <sfbpf_compile+0xbc8>
    4f04:	b	5848 <sfbpf_compile+0xbc8>
    4f08:	b	5848 <sfbpf_compile+0xbc8>
    4f0c:	b	5848 <sfbpf_compile+0xbc8>
    4f10:	b	5848 <sfbpf_compile+0xbc8>
    4f14:	b	5848 <sfbpf_compile+0xbc8>
    4f18:	b	5848 <sfbpf_compile+0xbc8>
    4f1c:	b	5848 <sfbpf_compile+0xbc8>
    4f20:	b	5848 <sfbpf_compile+0xbc8>
    4f24:	b	5848 <sfbpf_compile+0xbc8>
    4f28:	b	5848 <sfbpf_compile+0xbc8>
    4f2c:	b	5848 <sfbpf_compile+0xbc8>
    4f30:	b	5848 <sfbpf_compile+0xbc8>
    4f34:	b	5848 <sfbpf_compile+0xbc8>
    4f38:	b	5848 <sfbpf_compile+0xbc8>
    4f3c:	b	5848 <sfbpf_compile+0xbc8>
    4f40:	b	5848 <sfbpf_compile+0xbc8>
    4f44:	b	5848 <sfbpf_compile+0xbc8>
    4f48:	b	5848 <sfbpf_compile+0xbc8>
    4f4c:	b	5848 <sfbpf_compile+0xbc8>
    4f50:	b	5848 <sfbpf_compile+0xbc8>
    4f54:	b	5848 <sfbpf_compile+0xbc8>
    4f58:	b	5848 <sfbpf_compile+0xbc8>
    4f5c:	b	5848 <sfbpf_compile+0xbc8>
    4f60:	b	5848 <sfbpf_compile+0xbc8>
    4f64:	b	5848 <sfbpf_compile+0xbc8>
    4f68:	b	5848 <sfbpf_compile+0xbc8>
    4f6c:	b	5848 <sfbpf_compile+0xbc8>
    4f70:	b	5848 <sfbpf_compile+0xbc8>
    4f74:	b	5848 <sfbpf_compile+0xbc8>
    4f78:	b	5848 <sfbpf_compile+0xbc8>
    4f7c:	b	5848 <sfbpf_compile+0xbc8>
    4f80:	b	5848 <sfbpf_compile+0xbc8>
    4f84:	b	5848 <sfbpf_compile+0xbc8>
    4f88:	b	5848 <sfbpf_compile+0xbc8>
    4f8c:	b	5848 <sfbpf_compile+0xbc8>
    4f90:	b	5848 <sfbpf_compile+0xbc8>
    4f94:	b	5848 <sfbpf_compile+0xbc8>
    4f98:	b	5420 <sfbpf_compile+0x7a0>
    4f9c:	b	5848 <sfbpf_compile+0xbc8>
    4fa0:	b	5848 <sfbpf_compile+0xbc8>
    4fa4:	b	5848 <sfbpf_compile+0xbc8>
    4fa8:	b	5848 <sfbpf_compile+0xbc8>
    4fac:	b	5364 <sfbpf_compile+0x6e4>
    4fb0:	b	5434 <sfbpf_compile+0x7b4>
    4fb4:	b	5848 <sfbpf_compile+0xbc8>
    4fb8:	b	5460 <sfbpf_compile+0x7e0>
    4fbc:	b	52b0 <sfbpf_compile+0x630>
    4fc0:	b	546c <sfbpf_compile+0x7ec>
    4fc4:	b	5848 <sfbpf_compile+0xbc8>
    4fc8:	b	5848 <sfbpf_compile+0xbc8>
    4fcc:	b	5848 <sfbpf_compile+0xbc8>
    4fd0:	b	547c <sfbpf_compile+0x7fc>
    4fd4:	b	5490 <sfbpf_compile+0x810>
    4fd8:	b	5848 <sfbpf_compile+0xbc8>
    4fdc:	b	5848 <sfbpf_compile+0xbc8>
    4fe0:	b	5848 <sfbpf_compile+0xbc8>
    4fe4:	b	5848 <sfbpf_compile+0xbc8>
    4fe8:	b	5434 <sfbpf_compile+0x7b4>
    4fec:	b	5848 <sfbpf_compile+0xbc8>
    4ff0:	b	5848 <sfbpf_compile+0xbc8>
    4ff4:	b	549c <sfbpf_compile+0x81c>
    4ff8:	b	54c4 <sfbpf_compile+0x844>
    4ffc:	b	5848 <sfbpf_compile+0xbc8>
    5000:	b	5848 <sfbpf_compile+0xbc8>
    5004:	b	5848 <sfbpf_compile+0xbc8>
    5008:	b	5434 <sfbpf_compile+0x7b4>
    500c:	b	5848 <sfbpf_compile+0xbc8>
    5010:	b	5514 <sfbpf_compile+0x894>
    5014:	b	5524 <sfbpf_compile+0x8a4>
    5018:	b	5524 <sfbpf_compile+0x8a4>
    501c:	b	554c <sfbpf_compile+0x8cc>
    5020:	b	5570 <sfbpf_compile+0x8f0>
    5024:	b	5524 <sfbpf_compile+0x8a4>
    5028:	b	559c <sfbpf_compile+0x91c>
    502c:	b	55c4 <sfbpf_compile+0x944>
    5030:	b	55d4 <sfbpf_compile+0x954>
    5034:	b	55e8 <sfbpf_compile+0x968>
    5038:	b	55fc <sfbpf_compile+0x97c>
    503c:	b	5640 <sfbpf_compile+0x9c0>
    5040:	b	5848 <sfbpf_compile+0xbc8>
    5044:	b	5848 <sfbpf_compile+0xbc8>
    5048:	b	565c <sfbpf_compile+0x9dc>
    504c:	b	5668 <sfbpf_compile+0x9e8>
    5050:	b	5848 <sfbpf_compile+0xbc8>
    5054:	b	5848 <sfbpf_compile+0xbc8>
    5058:	b	5848 <sfbpf_compile+0xbc8>
    505c:	b	5848 <sfbpf_compile+0xbc8>
    5060:	b	5848 <sfbpf_compile+0xbc8>
    5064:	b	5848 <sfbpf_compile+0xbc8>
    5068:	b	5848 <sfbpf_compile+0xbc8>
    506c:	b	5848 <sfbpf_compile+0xbc8>
    5070:	b	5848 <sfbpf_compile+0xbc8>
    5074:	b	5848 <sfbpf_compile+0xbc8>
    5078:	b	5848 <sfbpf_compile+0xbc8>
    507c:	b	5848 <sfbpf_compile+0xbc8>
    5080:	b	5848 <sfbpf_compile+0xbc8>
    5084:	b	5848 <sfbpf_compile+0xbc8>
    5088:	b	5848 <sfbpf_compile+0xbc8>
    508c:	b	5848 <sfbpf_compile+0xbc8>
    5090:	b	5848 <sfbpf_compile+0xbc8>
    5094:	b	5848 <sfbpf_compile+0xbc8>
    5098:	b	5434 <sfbpf_compile+0x7b4>
    509c:	b	5674 <sfbpf_compile+0x9f4>
    50a0:	b	5848 <sfbpf_compile+0xbc8>
    50a4:	b	5364 <sfbpf_compile+0x6e4>
    50a8:	b	569c <sfbpf_compile+0xa1c>
    50ac:	b	56c8 <sfbpf_compile+0xa48>
    50b0:	b	5848 <sfbpf_compile+0xbc8>
    50b4:	b	5848 <sfbpf_compile+0xbc8>
    50b8:	b	5848 <sfbpf_compile+0xbc8>
    50bc:	b	5848 <sfbpf_compile+0xbc8>
    50c0:	b	5848 <sfbpf_compile+0xbc8>
    50c4:	b	5848 <sfbpf_compile+0xbc8>
    50c8:	b	5848 <sfbpf_compile+0xbc8>
    50cc:	b	5848 <sfbpf_compile+0xbc8>
    50d0:	b	56dc <sfbpf_compile+0xa5c>
    50d4:	b	569c <sfbpf_compile+0xa1c>
    50d8:	b	5524 <sfbpf_compile+0x8a4>
    50dc:	b	5524 <sfbpf_compile+0x8a4>
    50e0:	b	5524 <sfbpf_compile+0x8a4>
    50e4:	b	56e8 <sfbpf_compile+0xa68>
    50e8:	b	570c <sfbpf_compile+0xa8c>
    50ec:	b	5848 <sfbpf_compile+0xbc8>
    50f0:	b	5848 <sfbpf_compile+0xbc8>
    50f4:	b	571c <sfbpf_compile+0xa9c>
    50f8:	b	5728 <sfbpf_compile+0xaa8>
    50fc:	b	5848 <sfbpf_compile+0xbc8>
    5100:	b	5734 <sfbpf_compile+0xab4>
    5104:	b	5740 <sfbpf_compile+0xac0>
    5108:	b	574c <sfbpf_compile+0xacc>
    510c:	b	5758 <sfbpf_compile+0xad8>
    5110:	b	5764 <sfbpf_compile+0xae4>
    5114:	b	5770 <sfbpf_compile+0xaf0>
    5118:	b	5780 <sfbpf_compile+0xb00>
    511c:	b	578c <sfbpf_compile+0xb0c>
    5120:	b	5798 <sfbpf_compile+0xb18>
    5124:	b	57b4 <sfbpf_compile+0xb34>
    5128:	b	57c0 <sfbpf_compile+0xb40>
    512c:	b	57cc <sfbpf_compile+0xb4c>
    5130:	b	57dc <sfbpf_compile+0xb5c>
    5134:	b	57e8 <sfbpf_compile+0xb68>
    5138:	b	5848 <sfbpf_compile+0xbc8>
    513c:	b	5848 <sfbpf_compile+0xbc8>
    5140:	b	5848 <sfbpf_compile+0xbc8>
    5144:	b	5848 <sfbpf_compile+0xbc8>
    5148:	b	5848 <sfbpf_compile+0xbc8>
    514c:	b	5848 <sfbpf_compile+0xbc8>
    5150:	b	5848 <sfbpf_compile+0xbc8>
    5154:	b	5848 <sfbpf_compile+0xbc8>
    5158:	b	5848 <sfbpf_compile+0xbc8>
    515c:	b	5848 <sfbpf_compile+0xbc8>
    5160:	b	5848 <sfbpf_compile+0xbc8>
    5164:	b	5848 <sfbpf_compile+0xbc8>
    5168:	b	5810 <sfbpf_compile+0xb90>
    516c:	b	5848 <sfbpf_compile+0xbc8>
    5170:	b	5848 <sfbpf_compile+0xbc8>
    5174:	b	5848 <sfbpf_compile+0xbc8>
    5178:	b	581c <sfbpf_compile+0xb9c>
    517c:	b	5828 <sfbpf_compile+0xba8>
    5180:	b	5848 <sfbpf_compile+0xbc8>
    5184:	b	5848 <sfbpf_compile+0xbc8>
    5188:	b	5848 <sfbpf_compile+0xbc8>
    518c:	b	5848 <sfbpf_compile+0xbc8>
    5190:	b	5848 <sfbpf_compile+0xbc8>
    5194:	b	5834 <sfbpf_compile+0xbb4>
    5198:	b	51b0 <sfbpf_compile+0x530>
    519c:	b	53c4 <sfbpf_compile+0x744>
    51a0:	b	53c4 <sfbpf_compile+0x744>
    51a4:	ldr	r0, [pc, #1852]	; 58e8 <sfbpf_compile+0xc68>
    51a8:	add	r0, pc, r0
    51ac:	b	4d8c <sfbpf_compile+0x10c>
    51b0:	ldr	r3, [pc, #1844]	; 58ec <sfbpf_compile+0xc6c>
    51b4:	add	r3, pc, r3
    51b8:	mvn	r2, #0
    51bc:	str	r2, [r3, #952]	; 0x3b8
    51c0:	str	r2, [r3, #872]	; 0x368
    51c4:	str	r2, [r3, #868]	; 0x364
    51c8:	str	r2, [r3, #956]	; 0x3bc
    51cc:	bl	1c664 <sfbpf_parse>
    51d0:	ldr	r3, [pc, #1780]	; 58cc <sfbpf_compile+0xc4c>
    51d4:	ldr	r2, [sp]
    51d8:	ldr	r3, [r2, r3]
    51dc:	ldr	r7, [r3]
    51e0:	cmp	r7, #0
    51e4:	bne	58b8 <sfbpf_compile+0xc38>
    51e8:	ldr	r4, [pc, #1792]	; 58f0 <sfbpf_compile+0xc70>
    51ec:	add	r4, pc, r4
    51f0:	ldr	r0, [r4, #900]	; 0x384
    51f4:	cmp	r0, #0
    51f8:	beq	5898 <sfbpf_compile+0xc18>
    51fc:	ldr	r3, [sp, #48]	; 0x30
    5200:	cmp	r3, #0
    5204:	beq	5220 <sfbpf_compile+0x5a0>
    5208:	ldr	r3, [pc, #1720]	; 58c8 <sfbpf_compile+0xc48>
    520c:	ldr	r2, [sp]
    5210:	ldr	r3, [r2, r3]
    5214:	ldr	r3, [r3]
    5218:	cmp	r3, #0
    521c:	beq	5858 <sfbpf_compile+0xbd8>
    5220:	add	r1, sp, #20
    5224:	bl	19fa0 <sf_icode_to_fcode>
    5228:	ldr	r2, [sp, #12]
    522c:	ldr	r3, [sp, #20]
    5230:	str	r3, [r2]
    5234:	str	r0, [r2, #4]
    5238:	bl	20468 <sf_lex_cleanup>
    523c:	ldr	r3, [pc, #1712]	; 58f4 <sfbpf_compile+0xc74>
    5240:	mov	r2, #0
    5244:	add	r3, pc, r3
    5248:	add	r4, r3, #728	; 0x2d8
    524c:	add	r5, r3, #856	; 0x358
    5250:	mov	r6, r2
    5254:	str	r2, [r3, #724]	; 0x2d4
    5258:	ldr	r0, [r4, #4]
    525c:	cmp	r0, #0
    5260:	beq	526c <sfbpf_compile+0x5ec>
    5264:	bl	da4 <free@plt>
    5268:	str	r6, [r4, #4]
    526c:	add	r4, r4, #8
    5270:	cmp	r4, r5
    5274:	bne	5258 <sfbpf_compile+0x5d8>
    5278:	mov	r0, r7
    527c:	add	sp, sp, #28
    5280:	pop	{r4, r5, r6, r7, pc}
    5284:	ldr	lr, [pc, #1644]	; 58f8 <sfbpf_compile+0xc78>
    5288:	mov	ip, r3
    528c:	add	lr, pc, lr
    5290:	mvn	r7, #0
    5294:	ldm	lr!, {r0, r1, r2, r3}
    5298:	stmia	ip!, {r0, r1, r2, r3}
    529c:	ldm	lr!, {r0, r1, r2, r3}
    52a0:	ldr	lr, [lr]
    52a4:	stmia	ip!, {r0, r1, r2, r3}
    52a8:	strb	lr, [ip]
    52ac:	b	4d50 <sfbpf_compile+0xd0>
    52b0:	ldr	r3, [pc, #1604]	; 58fc <sfbpf_compile+0xc7c>
    52b4:	mov	r1, #4
    52b8:	add	r3, pc, r3
    52bc:	mov	r2, #0
    52c0:	str	r1, [r3, #872]	; 0x368
    52c4:	str	r2, [r3, #952]	; 0x3b8
    52c8:	str	r2, [r3, #868]	; 0x364
    52cc:	str	r2, [r3, #956]	; 0x3bc
    52d0:	b	51cc <sfbpf_compile+0x54c>
    52d4:	ldr	r3, [pc, #1572]	; 5900 <sfbpf_compile+0xc80>
    52d8:	mov	ip, #12
    52dc:	add	r3, pc, r3
    52e0:	mov	r0, #14
    52e4:	mov	r1, #0
    52e8:	mov	r2, #3
    52ec:	str	ip, [r3, #952]	; 0x3b8
    52f0:	str	r0, [r3, #872]	; 0x368
    52f4:	str	r1, [r3, #868]	; 0x364
    52f8:	str	r2, [r3, #956]	; 0x3bc
    52fc:	b	51cc <sfbpf_compile+0x54c>
    5300:	ldr	r3, [pc, #1532]	; 5904 <sfbpf_compile+0xc84>
    5304:	mov	r2, #14
    5308:	add	r3, pc, r3
    530c:	mov	r0, #8
    5310:	mov	r1, #3
    5314:	str	r0, [r3, #868]	; 0x364
    5318:	str	r1, [r3, #956]	; 0x3bc
    531c:	str	r2, [r3, #952]	; 0x3b8
    5320:	str	r2, [r3, #872]	; 0x368
    5324:	b	51cc <sfbpf_compile+0x54c>
    5328:	ldr	r3, [pc, #1496]	; 5908 <sfbpf_compile+0xc88>
    532c:	mov	r0, #2
    5330:	add	r3, pc, r3
    5334:	mov	r1, #6
    5338:	mov	r2, #0
    533c:	str	r0, [r3, #952]	; 0x3b8
    5340:	str	r1, [r3, #872]	; 0x368
    5344:	str	r2, [r3, #868]	; 0x364
    5348:	str	r2, [r3, #956]	; 0x3bc
    534c:	b	51cc <sfbpf_compile+0x54c>
    5350:	ldr	r3, [pc, #1460]	; 590c <sfbpf_compile+0xc8c>
    5354:	mvn	r0, #0
    5358:	add	r3, pc, r3
    535c:	mov	r1, #16
    5360:	b	5338 <sfbpf_compile+0x6b8>
    5364:	ldr	r3, [pc, #1444]	; 5910 <sfbpf_compile+0xc90>
    5368:	mov	r0, #2
    536c:	add	r3, pc, r3
    5370:	mov	r1, #4
    5374:	b	5338 <sfbpf_compile+0x6b8>
    5378:	ldr	r3, [pc, #1428]	; 5914 <sfbpf_compile+0xc94>
    537c:	mov	r2, #13
    5380:	add	r3, pc, r3
    5384:	mov	r0, #8
    5388:	mov	r1, #3
    538c:	str	r0, [r3, #868]	; 0x364
    5390:	str	r1, [r3, #956]	; 0x3bc
    5394:	str	r2, [r3, #952]	; 0x3b8
    5398:	str	r2, [r3, #872]	; 0x368
    539c:	b	51cc <sfbpf_compile+0x54c>
    53a0:	ldr	r3, [pc, #1392]	; 5918 <sfbpf_compile+0xc98>
    53a4:	mov	r0, #0
    53a8:	add	r3, pc, r3
    53ac:	mov	r1, #8
    53b0:	mov	r2, #3
    53b4:	str	r0, [r3, #952]	; 0x3b8
    53b8:	str	r1, [r3, #868]	; 0x364
    53bc:	str	r2, [r3, #956]	; 0x3bc
    53c0:	b	51cc <sfbpf_compile+0x54c>
    53c4:	ldr	r3, [pc, #1360]	; 591c <sfbpf_compile+0xc9c>
    53c8:	add	r3, pc, r3
    53cc:	mov	r2, #0
    53d0:	mvn	r1, #0
    53d4:	str	r1, [r3, #952]	; 0x3b8
    53d8:	str	r2, [r3, #868]	; 0x364
    53dc:	str	r2, [r3, #956]	; 0x3bc
    53e0:	b	51cc <sfbpf_compile+0x54c>
    53e4:	ldr	r3, [pc, #1332]	; 5920 <sfbpf_compile+0xca0>
    53e8:	mvn	r0, #0
    53ec:	add	r3, pc, r3
    53f0:	mov	r1, #24
    53f4:	b	5338 <sfbpf_compile+0x6b8>
    53f8:	ldr	r3, [pc, #1316]	; 5924 <sfbpf_compile+0xca4>
    53fc:	mov	r0, #5
    5400:	add	r3, pc, r3
    5404:	mov	r1, #24
    5408:	b	5338 <sfbpf_compile+0x6b8>
    540c:	ldr	r3, [pc, #1300]	; 5928 <sfbpf_compile+0xca8>
    5410:	mov	r0, #6
    5414:	add	r3, pc, r3
    5418:	mov	r1, #8
    541c:	b	5338 <sfbpf_compile+0x6b8>
    5420:	ldr	r3, [pc, #1284]	; 592c <sfbpf_compile+0xcac>
    5424:	mov	r0, #6
    5428:	add	r3, pc, r3
    542c:	mov	r1, #44	; 0x2c
    5430:	b	5338 <sfbpf_compile+0x6b8>
    5434:	ldr	r3, [pc, #1268]	; 5930 <sfbpf_compile+0xcb0>
    5438:	add	r3, pc, r3
    543c:	mov	ip, #24
    5440:	mov	r0, #1
    5444:	mov	r1, #8
    5448:	mov	r2, #3
    544c:	str	ip, [r3, #952]	; 0x3b8
    5450:	str	r0, [r3, #860]	; 0x35c
    5454:	str	r1, [r3, #868]	; 0x364
    5458:	str	r2, [r3, #956]	; 0x3bc
    545c:	b	51cc <sfbpf_compile+0x54c>
    5460:	ldr	r3, [pc, #1228]	; 5934 <sfbpf_compile+0xcb4>
    5464:	add	r3, pc, r3
    5468:	b	53cc <sfbpf_compile+0x74c>
    546c:	ldr	r3, [pc, #1220]	; 5938 <sfbpf_compile+0xcb8>
    5470:	mov	r1, #12
    5474:	add	r3, pc, r3
    5478:	b	52bc <sfbpf_compile+0x63c>
    547c:	ldr	r3, [pc, #1208]	; 593c <sfbpf_compile+0xcbc>
    5480:	mov	r0, #14
    5484:	add	r3, pc, r3
    5488:	mov	r1, #16
    548c:	b	5338 <sfbpf_compile+0x6b8>
    5490:	ldr	r3, [pc, #1192]	; 5940 <sfbpf_compile+0xcc0>
    5494:	add	r3, pc, r3
    5498:	b	53cc <sfbpf_compile+0x74c>
    549c:	ldr	r3, [pc, #1184]	; 5944 <sfbpf_compile+0xcc4>
    54a0:	mov	r2, #16
    54a4:	add	r3, pc, r3
    54a8:	mov	r0, #8
    54ac:	mov	r1, #3
    54b0:	str	r0, [r3, #868]	; 0x364
    54b4:	str	r1, [r3, #956]	; 0x3bc
    54b8:	str	r2, [r3, #952]	; 0x3b8
    54bc:	str	r2, [r3, #872]	; 0x368
    54c0:	b	51cc <sfbpf_compile+0x54c>
    54c4:	ldr	r3, [pc, #1148]	; 5948 <sfbpf_compile+0xcc8>
    54c8:	mov	r1, #2
    54cc:	add	r3, pc, r3
    54d0:	mov	r2, #0
    54d4:	mvn	lr, #0
    54d8:	mov	ip, #8
    54dc:	mov	r0, #3
    54e0:	str	r1, [r3, #892]	; 0x37c
    54e4:	str	r2, [r3, #924]	; 0x39c
    54e8:	mov	r1, #1
    54ec:	mov	r2, #4
    54f0:	str	lr, [r3, #916]	; 0x394
    54f4:	str	ip, [r3, #868]	; 0x364
    54f8:	str	r0, [r3, #956]	; 0x3bc
    54fc:	str	r1, [r3, #888]	; 0x378
    5500:	str	r1, [r3, #896]	; 0x380
    5504:	str	r2, [r3, #884]	; 0x374
    5508:	str	r2, [r3, #952]	; 0x3b8
    550c:	str	r2, [r3, #872]	; 0x368
    5510:	b	51cc <sfbpf_compile+0x54c>
    5514:	ldr	r3, [pc, #1072]	; 594c <sfbpf_compile+0xccc>
    5518:	mov	r0, #4
    551c:	add	r3, pc, r3
    5520:	b	5418 <sfbpf_compile+0x798>
    5524:	ldr	r3, [pc, #1060]	; 5950 <sfbpf_compile+0xcd0>
    5528:	mov	r0, #0
    552c:	add	r3, pc, r3
    5530:	mvn	r1, #0
    5534:	mov	r2, #4
    5538:	str	r0, [r3, #868]	; 0x364
    553c:	str	r1, [r3, #956]	; 0x3bc
    5540:	str	r2, [r3, #952]	; 0x3b8
    5544:	str	r2, [r3, #872]	; 0x368
    5548:	b	51cc <sfbpf_compile+0x54c>
    554c:	ldr	r3, [pc, #1024]	; 5954 <sfbpf_compile+0xcd4>
    5550:	mov	r1, #6
    5554:	add	r3, pc, r3
    5558:	mvn	r2, #0
    555c:	str	r1, [r3, #952]	; 0x3b8
    5560:	str	r2, [r3, #872]	; 0x368
    5564:	str	r2, [r3, #868]	; 0x364
    5568:	str	r2, [r3, #956]	; 0x3bc
    556c:	b	51cc <sfbpf_compile+0x54c>
    5570:	ldr	r3, [pc, #992]	; 5958 <sfbpf_compile+0xcd8>
    5574:	mov	ip, #6
    5578:	add	r3, pc, r3
    557c:	mov	r0, #12
    5580:	mov	r1, #0
    5584:	mvn	r2, #0
    5588:	str	ip, [r3, #952]	; 0x3b8
    558c:	str	r0, [r3, #872]	; 0x368
    5590:	str	r1, [r3, #868]	; 0x364
    5594:	str	r2, [r3, #956]	; 0x3bc
    5598:	b	51cc <sfbpf_compile+0x54c>
    559c:	ldr	r3, [pc, #952]	; 595c <sfbpf_compile+0xcdc>
    55a0:	mov	r2, #8
    55a4:	add	r3, pc, r3
    55a8:	mov	r0, #0
    55ac:	mov	r1, #10
    55b0:	str	r0, [r3, #868]	; 0x364
    55b4:	str	r1, [r3, #956]	; 0x3bc
    55b8:	str	r2, [r3, #952]	; 0x3b8
    55bc:	str	r2, [r3, #872]	; 0x368
    55c0:	b	51cc <sfbpf_compile+0x54c>
    55c4:	ldr	r3, [pc, #916]	; 5960 <sfbpf_compile+0xce0>
    55c8:	mov	r1, #12
    55cc:	add	r3, pc, r3
    55d0:	b	5558 <sfbpf_compile+0x8d8>
    55d4:	ldr	r3, [pc, #904]	; 5964 <sfbpf_compile+0xce4>
    55d8:	mov	r0, #0
    55dc:	add	r3, pc, r3
    55e0:	mov	r1, #10
    55e4:	b	5534 <sfbpf_compile+0x8b4>
    55e8:	ldr	r3, [pc, #888]	; 5968 <sfbpf_compile+0xce8>
    55ec:	mov	r0, #16
    55f0:	add	r3, pc, r3
    55f4:	mov	r1, #18
    55f8:	b	5338 <sfbpf_compile+0x6b8>
    55fc:	ldr	r3, [pc, #872]	; 596c <sfbpf_compile+0xcec>
    5600:	mov	lr, #6
    5604:	add	r3, pc, r3
    5608:	mov	ip, #7
    560c:	mov	r0, #11
    5610:	mov	r1, #8
    5614:	mvn	r2, #0
    5618:	str	lr, [r3, #932]	; 0x3a4
    561c:	str	ip, [r3, #936]	; 0x3a8
    5620:	str	r0, [r3, #948]	; 0x3b4
    5624:	str	r1, [r3, #940]	; 0x3ac
    5628:	str	r1, [r3, #944]	; 0x3b0
    562c:	str	r2, [r3, #952]	; 0x3b8
    5630:	str	r2, [r3, #872]	; 0x368
    5634:	str	r2, [r3, #868]	; 0x364
    5638:	str	r2, [r3, #956]	; 0x3bc
    563c:	b	51cc <sfbpf_compile+0x54c>
    5640:	ldr	r3, [pc, #808]	; 5970 <sfbpf_compile+0xcf0>
    5644:	mov	lr, #2
    5648:	add	r3, pc, r3
    564c:	mov	ip, #3
    5650:	mov	r0, #7
    5654:	mov	r1, #4
    5658:	b	5614 <sfbpf_compile+0x994>
    565c:	ldr	r3, [pc, #784]	; 5974 <sfbpf_compile+0xcf4>
    5660:	add	r3, pc, r3
    5664:	b	51b8 <sfbpf_compile+0x538>
    5668:	ldr	r3, [pc, #776]	; 5978 <sfbpf_compile+0xcf8>
    566c:	add	r3, pc, r3
    5670:	b	51b8 <sfbpf_compile+0x538>
    5674:	ldr	r3, [pc, #768]	; 597c <sfbpf_compile+0xcfc>
    5678:	mov	r2, #12
    567c:	add	r3, pc, r3
    5680:	mov	r0, #0
    5684:	mvn	r1, #0
    5688:	str	r0, [r3, #868]	; 0x364
    568c:	str	r1, [r3, #956]	; 0x3bc
    5690:	str	r2, [r3, #952]	; 0x3b8
    5694:	str	r2, [r3, #872]	; 0x368
    5698:	b	51cc <sfbpf_compile+0x54c>
    569c:	ldr	r3, [pc, #732]	; 5980 <sfbpf_compile+0xd00>
    56a0:	mov	ip, #14
    56a4:	add	r3, pc, r3
    56a8:	mov	r0, #16
    56ac:	mov	r1, #18
    56b0:	mov	r2, #21
    56b4:	str	ip, [r3, #872]	; 0x368
    56b8:	str	r0, [r3, #952]	; 0x3b8
    56bc:	str	r1, [r3, #868]	; 0x364
    56c0:	str	r2, [r3, #956]	; 0x3bc
    56c4:	b	51cc <sfbpf_compile+0x54c>
    56c8:	ldr	r3, [pc, #692]	; 5984 <sfbpf_compile+0xd04>
    56cc:	mov	ip, #4
    56d0:	add	r3, pc, r3
    56d4:	mov	r0, #6
    56d8:	b	5580 <sfbpf_compile+0x900>
    56dc:	ldr	r3, [pc, #676]	; 5988 <sfbpf_compile+0xd08>
    56e0:	add	r3, pc, r3
    56e4:	b	51b8 <sfbpf_compile+0x538>
    56e8:	ldr	r3, [pc, #668]	; 598c <sfbpf_compile+0xd0c>
    56ec:	mvn	r0, #0
    56f0:	add	r3, pc, r3
    56f4:	mov	r1, #4
    56f8:	mov	r2, #0
    56fc:	str	r0, [r3, #952]	; 0x3b8
    5700:	str	r1, [r3, #868]	; 0x364
    5704:	str	r2, [r3, #956]	; 0x3bc
    5708:	b	51cc <sfbpf_compile+0x54c>
    570c:	ldr	r3, [pc, #636]	; 5990 <sfbpf_compile+0xd10>
    5710:	mov	r1, #18
    5714:	add	r3, pc, r3
    5718:	b	5558 <sfbpf_compile+0x8d8>
    571c:	ldr	r3, [pc, #624]	; 5994 <sfbpf_compile+0xd14>
    5720:	add	r3, pc, r3
    5724:	b	51b8 <sfbpf_compile+0x538>
    5728:	ldr	r3, [pc, #616]	; 5998 <sfbpf_compile+0xd18>
    572c:	add	r3, pc, r3
    5730:	b	51b8 <sfbpf_compile+0x538>
    5734:	ldr	r3, [pc, #608]	; 599c <sfbpf_compile+0xd1c>
    5738:	add	r3, pc, r3
    573c:	b	51b8 <sfbpf_compile+0x538>
    5740:	ldr	r3, [pc, #600]	; 59a0 <sfbpf_compile+0xd20>
    5744:	add	r3, pc, r3
    5748:	b	51b8 <sfbpf_compile+0x538>
    574c:	ldr	r3, [pc, #592]	; 59a4 <sfbpf_compile+0xd24>
    5750:	add	r3, pc, r3
    5754:	b	51b8 <sfbpf_compile+0x538>
    5758:	ldr	r3, [pc, #584]	; 59a8 <sfbpf_compile+0xd28>
    575c:	add	r3, pc, r3
    5760:	b	543c <sfbpf_compile+0x7bc>
    5764:	ldr	r3, [pc, #576]	; 59ac <sfbpf_compile+0xd2c>
    5768:	add	r3, pc, r3
    576c:	b	51b8 <sfbpf_compile+0x538>
    5770:	ldr	r3, [pc, #568]	; 59b0 <sfbpf_compile+0xd30>
    5774:	mov	r1, #8
    5778:	add	r3, pc, r3
    577c:	b	5558 <sfbpf_compile+0x8d8>
    5780:	ldr	r3, [pc, #556]	; 59b4 <sfbpf_compile+0xd34>
    5784:	add	r3, pc, r3
    5788:	b	51b8 <sfbpf_compile+0x538>
    578c:	ldr	r3, [pc, #548]	; 59b8 <sfbpf_compile+0xd38>
    5790:	add	r3, pc, r3
    5794:	b	51b8 <sfbpf_compile+0x538>
    5798:	ldr	r3, [pc, #540]	; 59bc <sfbpf_compile+0xd3c>
    579c:	mov	lr, #22
    57a0:	add	r3, pc, r3
    57a4:	mov	ip, #23
    57a8:	mov	r0, #27
    57ac:	mov	r1, #24
    57b0:	b	5614 <sfbpf_compile+0x994>
    57b4:	ldr	r3, [pc, #516]	; 59c0 <sfbpf_compile+0xd40>
    57b8:	add	r3, pc, r3
    57bc:	b	51b8 <sfbpf_compile+0x538>
    57c0:	ldr	r3, [pc, #508]	; 59c4 <sfbpf_compile+0xd44>
    57c4:	add	r3, pc, r3
    57c8:	b	51b8 <sfbpf_compile+0x538>
    57cc:	ldr	r3, [pc, #500]	; 59c8 <sfbpf_compile+0xd48>
    57d0:	mov	r1, #18
    57d4:	add	r3, pc, r3
    57d8:	b	5558 <sfbpf_compile+0x8d8>
    57dc:	ldr	r3, [pc, #488]	; 59cc <sfbpf_compile+0xd4c>
    57e0:	add	r3, pc, r3
    57e4:	b	51b8 <sfbpf_compile+0x538>
    57e8:	ldr	r3, [pc, #480]	; 59d0 <sfbpf_compile+0xd50>
    57ec:	mvn	r2, #0
    57f0:	add	r3, pc, r3
    57f4:	mov	r1, #1
    57f8:	str	r1, [r3, #916]	; 0x394
    57fc:	str	r2, [r3, #952]	; 0x3b8
    5800:	str	r2, [r3, #872]	; 0x368
    5804:	str	r2, [r3, #868]	; 0x364
    5808:	str	r2, [r3, #956]	; 0x3bc
    580c:	b	51cc <sfbpf_compile+0x54c>
    5810:	ldr	r3, [pc, #444]	; 59d4 <sfbpf_compile+0xd54>
    5814:	add	r3, pc, r3
    5818:	b	51b8 <sfbpf_compile+0x538>
    581c:	ldr	r3, [pc, #436]	; 59d8 <sfbpf_compile+0xd58>
    5820:	add	r3, pc, r3
    5824:	b	51b8 <sfbpf_compile+0x538>
    5828:	ldr	r3, [pc, #428]	; 59dc <sfbpf_compile+0xd5c>
    582c:	add	r3, pc, r3
    5830:	b	51b8 <sfbpf_compile+0x538>
    5834:	ldr	r3, [pc, #420]	; 59e0 <sfbpf_compile+0xd60>
    5838:	mov	ip, #1
    583c:	add	r3, pc, r3
    5840:	mov	r0, #24
    5844:	b	5580 <sfbpf_compile+0x900>
    5848:	ldr	r0, [pc, #404]	; 59e4 <sfbpf_compile+0xd64>
    584c:	ldr	r1, [sp, #8]
    5850:	add	r0, pc, r0
    5854:	bl	2370 <sf_bpf_error>
    5858:	ldr	r4, [pc, #392]	; 59e8 <sfbpf_compile+0xd68>
    585c:	add	r4, pc, r4
    5860:	add	r0, r4, #900	; 0x384
    5864:	bl	16690 <sf_bpf_optimize>
    5868:	ldr	r0, [r4, #900]	; 0x384
    586c:	cmp	r0, #0
    5870:	beq	588c <sfbpf_compile+0xc0c>
    5874:	ldr	r3, [r0, #8]
    5878:	cmp	r3, #6
    587c:	bne	5220 <sfbpf_compile+0x5a0>
    5880:	ldr	r3, [r0, #20]
    5884:	cmp	r3, #0
    5888:	bne	5220 <sfbpf_compile+0x5a0>
    588c:	ldr	r0, [pc, #344]	; 59ec <sfbpf_compile+0xd6c>
    5890:	add	r0, pc, r0
    5894:	bl	2370 <sf_bpf_error>
    5898:	ldr	r5, [r4, #912]	; 0x390
    589c:	bl	29f8 <newchunk.constprop.50>
    58a0:	mov	r3, #6
    58a4:	str	r5, [r0, #20]
    58a8:	str	r0, [r0, #96]	; 0x60
    58ac:	str	r0, [r4, #900]	; 0x384
    58b0:	str	r3, [r0, #8]
    58b4:	b	51fc <sfbpf_compile+0x57c>
    58b8:	ldr	r0, [pc, #304]	; 59f0 <sfbpf_compile+0xd70>
    58bc:	add	r0, pc, r0
    58c0:	bl	2370 <sf_bpf_error>
    58c4:	.word	0x00039370
    58c8:	.word	0x00000104
    58cc:	.word	0x000000d8
    58d0:	.word	0x000396b0
    58d4:	.word	0x00039678
    58d8:	.word	0x00039650
    58dc:	.word	0x00039604
    58e0:	.word	0x000395d0
    58e4:	.word	0x000394dc
    58e8:	.word	0x0001b680
    58ec:	.word	0x000391b4
    58f0:	.word	0x0003917c
    58f4:	.word	0x00039124
    58f8:	.word	0x0001b7a4
    58fc:	.word	0x000390b0
    5900:	.word	0x0003908c
    5904:	.word	0x00039060
    5908:	.word	0x00039038
    590c:	.word	0x00039010
    5910:	.word	0x00038ffc
    5914:	.word	0x00038fe8
    5918:	.word	0x00038fc0
    591c:	.word	0x00038fa0
    5920:	.word	0x00038f7c
    5924:	.word	0x00038f68
    5928:	.word	0x00038f54
    592c:	.word	0x00038f40
    5930:	.word	0x00038f30
    5934:	.word	0x00038f04
    5938:	.word	0x00038ef4
    593c:	.word	0x00038ee4
    5940:	.word	0x00038ed4
    5944:	.word	0x00038ec4
    5948:	.word	0x00038e9c
    594c:	.word	0x00038e4c
    5950:	.word	0x00038e3c
    5954:	.word	0x00038e14
    5958:	.word	0x00038df0
    595c:	.word	0x00038dc4
    5960:	.word	0x00038d9c
    5964:	.word	0x00038d8c
    5968:	.word	0x00038d78
    596c:	.word	0x00038d64
    5970:	.word	0x00038d20
    5974:	.word	0x00038d08
    5978:	.word	0x00038cfc
    597c:	.word	0x00038cec
    5980:	.word	0x00038cc4
    5984:	.word	0x00038c98
    5988:	.word	0x00038c88
    598c:	.word	0x00038c78
    5990:	.word	0x00038c54
    5994:	.word	0x00038c48
    5998:	.word	0x00038c3c
    599c:	.word	0x00038c30
    59a0:	.word	0x00038c24
    59a4:	.word	0x00038c18
    59a8:	.word	0x00038c0c
    59ac:	.word	0x00038c00
    59b0:	.word	0x00038bf0
    59b4:	.word	0x00038be4
    59b8:	.word	0x00038bd8
    59bc:	.word	0x00038bc8
    59c0:	.word	0x00038bb0
    59c4:	.word	0x00038ba4
    59c8:	.word	0x00038b94
    59cc:	.word	0x00038b88
    59d0:	.word	0x00038b78
    59d4:	.word	0x00038b54
    59d8:	.word	0x00038b48
    59dc:	.word	0x00038b3c
    59e0:	.word	0x00038b2c
    59e4:	.word	0x0001b204
    59e8:	.word	0x00038b0c
    59ec:	.word	0x0001b204
    59f0:	.word	0x0001b1b4

000059f4 <sfbpf_freecode>:
    59f4:	push	{r4, r5, r6, lr}
    59f8:	mov	r5, #0
    59fc:	ldr	r3, [r0, #4]
    5a00:	str	r5, [r0]
    5a04:	cmp	r3, r5
    5a08:	popeq	{r4, r5, r6, pc}
    5a0c:	mov	r4, r0
    5a10:	mov	r0, r3
    5a14:	bl	da4 <free@plt>
    5a18:	str	r5, [r4, #4]
    5a1c:	pop	{r4, r5, r6, pc}

00005a20 <sf_finish_parse>:
    5a20:	ldr	r3, [pc, #2364]	; 6364 <sf_finish_parse+0x944>
    5a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5a28:	add	r3, pc, r3
    5a2c:	ldr	sl, [pc, #2356]	; 6368 <sf_finish_parse+0x948>
    5a30:	ldr	r7, [r3, #876]	; 0x36c
    5a34:	sub	sp, sp, #20
    5a38:	cmp	r7, #127	; 0x7f
    5a3c:	mov	r4, r0
    5a40:	add	sl, pc, sl
    5a44:	ldr	r8, [r0, #96]	; 0x60
    5a48:	beq	6090 <sf_finish_parse+0x670>
    5a4c:	ble	5ee8 <sf_finish_parse+0x4c8>
    5a50:	cmp	r7, #163	; 0xa3
    5a54:	beq	5e58 <sf_finish_parse+0x438>
    5a58:	cmp	r7, #192	; 0xc0
    5a5c:	bne	609c <sf_finish_parse+0x67c>
    5a60:	bl	28b0 <gen_load_ppi_llprefixlen>
    5a64:	mov	r5, r0
    5a68:	ldr	r3, [pc, #2300]	; 636c <sf_finish_parse+0x94c>
    5a6c:	add	r3, pc, r3
    5a70:	ldr	r9, [r3, #864]	; 0x360
    5a74:	cmn	r9, #1
    5a78:	beq	6084 <sf_finish_parse+0x664>
    5a7c:	ldr	r3, [pc, #2284]	; 6370 <sf_finish_parse+0x950>
    5a80:	mov	r6, #1
    5a84:	cmp	r5, #0
    5a88:	ldr	r3, [sl, r3]
    5a8c:	ldr	sl, [r8, #4]
    5a90:	str	r6, [r3]
    5a94:	beq	6344 <sf_finish_parse+0x924>
    5a98:	bl	2810 <newchunk.constprop.49>
    5a9c:	mov	r3, #135	; 0x87
    5aa0:	mov	r2, r5
    5aa4:	str	r3, [r0]
    5aa8:	b	5ab0 <sf_finish_parse+0x90>
    5aac:	mov	r2, r3
    5ab0:	ldr	r3, [r2, #16]
    5ab4:	cmp	r3, #0
    5ab8:	bne	5aac <sf_finish_parse+0x8c>
    5abc:	str	r0, [r2, #16]
    5ac0:	bl	2810 <newchunk.constprop.49>
    5ac4:	mov	r2, #4
    5ac8:	mov	r3, #24
    5acc:	str	r2, [r0]
    5ad0:	str	r3, [r0, #12]
    5ad4:	mov	r2, r5
    5ad8:	b	5ae0 <sf_finish_parse+0xc0>
    5adc:	mov	r2, r3
    5ae0:	ldr	r3, [r2, #16]
    5ae4:	cmp	r3, #0
    5ae8:	bne	5adc <sf_finish_parse+0xbc>
    5aec:	str	r0, [r2, #16]
    5af0:	bl	2810 <newchunk.constprop.49>
    5af4:	mov	r3, #2
    5af8:	str	r3, [r0]
    5afc:	str	r9, [r0, #12]
    5b00:	mov	r3, r5
    5b04:	b	5b0c <sf_finish_parse+0xec>
    5b08:	mov	r3, r6
    5b0c:	ldr	r6, [r3, #16]
    5b10:	cmp	r6, #0
    5b14:	bne	5b08 <sf_finish_parse+0xe8>
    5b18:	str	r0, [r3, #16]
    5b1c:	bl	2810 <newchunk.constprop.49>
    5b20:	mov	r3, #80	; 0x50
    5b24:	mov	r2, r5
    5b28:	str	r6, [r0, #12]
    5b2c:	str	r3, [r0]
    5b30:	b	5b38 <sf_finish_parse+0x118>
    5b34:	mov	r2, r3
    5b38:	ldr	r3, [r2, #16]
    5b3c:	cmp	r3, #0
    5b40:	bne	5b34 <sf_finish_parse+0x114>
    5b44:	str	r0, [r2, #16]
    5b48:	bl	2810 <newchunk.constprop.49>
    5b4c:	mov	r2, #69	; 0x45
    5b50:	mov	r3, #8
    5b54:	str	r2, [r0]
    5b58:	mov	r6, r0
    5b5c:	str	r3, [r0, #12]
    5b60:	mov	r2, r5
    5b64:	b	5b6c <sf_finish_parse+0x14c>
    5b68:	mov	r2, r3
    5b6c:	ldr	r3, [r2, #16]
    5b70:	cmp	r3, #0
    5b74:	bne	5b68 <sf_finish_parse+0x148>
    5b78:	str	r6, [r2, #16]
    5b7c:	bl	2810 <newchunk.constprop.49>
    5b80:	mov	r2, #69	; 0x45
    5b84:	mov	r3, #4
    5b88:	str	r2, [r0]
    5b8c:	mov	fp, r0
    5b90:	str	r0, [r6, #4]
    5b94:	mov	r2, r5
    5b98:	str	r3, [r0, #12]
    5b9c:	b	5ba4 <sf_finish_parse+0x184>
    5ba0:	mov	r2, r3
    5ba4:	ldr	r3, [r2, #16]
    5ba8:	cmp	r3, #0
    5bac:	bne	5ba0 <sf_finish_parse+0x180>
    5bb0:	str	fp, [r2, #16]
    5bb4:	str	sl, [r6, #8]
    5bb8:	str	sl, [fp, #4]
    5bbc:	bl	2810 <newchunk.constprop.49>
    5bc0:	mov	r2, #69	; 0x45
    5bc4:	mov	r3, #128	; 0x80
    5bc8:	str	r2, [r0]
    5bcc:	mov	r6, r0
    5bd0:	str	r0, [fp, #8]
    5bd4:	mov	r2, r5
    5bd8:	str	r3, [r0, #12]
    5bdc:	b	5be4 <sf_finish_parse+0x1c4>
    5be0:	mov	r2, r3
    5be4:	ldr	r3, [r2, #16]
    5be8:	cmp	r3, #0
    5bec:	bne	5be0 <sf_finish_parse+0x1c0>
    5bf0:	str	r6, [r2, #16]
    5bf4:	bl	2810 <newchunk.constprop.49>
    5bf8:	mov	r3, #96	; 0x60
    5bfc:	mov	r2, r5
    5c00:	str	r3, [r0]
    5c04:	str	r0, [r6, #4]
    5c08:	str	r9, [r0, #12]
    5c0c:	b	5c14 <sf_finish_parse+0x1f4>
    5c10:	mov	r2, r3
    5c14:	ldr	r3, [r2, #16]
    5c18:	cmp	r3, #0
    5c1c:	bne	5c10 <sf_finish_parse+0x1f0>
    5c20:	str	r0, [r2, #16]
    5c24:	bl	2810 <newchunk.constprop.49>
    5c28:	mov	r2, #4
    5c2c:	mov	r3, #2
    5c30:	str	r2, [r0]
    5c34:	str	r3, [r0, #12]
    5c38:	mov	r2, r5
    5c3c:	b	5c44 <sf_finish_parse+0x224>
    5c40:	mov	r2, r3
    5c44:	ldr	r3, [r2, #16]
    5c48:	cmp	r3, #0
    5c4c:	bne	5c40 <sf_finish_parse+0x220>
    5c50:	str	r0, [r2, #16]
    5c54:	bl	2810 <newchunk.constprop.49>
    5c58:	mov	r3, #2
    5c5c:	mov	r2, r5
    5c60:	str	r9, [r0, #12]
    5c64:	str	r3, [r0]
    5c68:	b	5c70 <sf_finish_parse+0x250>
    5c6c:	mov	r2, r3
    5c70:	ldr	r3, [r2, #16]
    5c74:	cmp	r3, #0
    5c78:	bne	5c6c <sf_finish_parse+0x24c>
    5c7c:	cmp	r7, #127	; 0x7f
    5c80:	str	r0, [r2, #16]
    5c84:	strne	sl, [r6, #8]
    5c88:	beq	60f0 <sf_finish_parse+0x6d0>
    5c8c:	ldr	r1, [r8, #4]
    5c90:	mov	r2, r5
    5c94:	b	5c9c <sf_finish_parse+0x27c>
    5c98:	mov	r2, r3
    5c9c:	ldr	r3, [r2, #16]
    5ca0:	cmp	r3, #0
    5ca4:	bne	5c98 <sf_finish_parse+0x278>
    5ca8:	str	r1, [r2, #16]
    5cac:	str	r5, [r8, #4]
    5cb0:	cmp	r7, #192	; 0xc0
    5cb4:	bne	5d88 <sf_finish_parse+0x368>
    5cb8:	bl	2810 <newchunk.constprop.49>
    5cbc:	mov	r2, #32
    5cc0:	mov	r3, #4
    5cc4:	str	r2, [r0]
    5cc8:	str	r3, [r0, #12]
    5ccc:	mov	r5, r0
    5cd0:	bl	29f8 <newchunk.constprop.50>
    5cd4:	mov	r3, #1761607680	; 0x69000000
    5cd8:	mov	r2, #21
    5cdc:	str	r3, [r0, #20]
    5ce0:	str	r5, [r0, #4]
    5ce4:	str	r0, [r0, #96]	; 0x60
    5ce8:	str	r2, [r0, #8]
    5cec:	mov	r3, r0
    5cf0:	ldr	r1, [r4, #96]	; 0x60
    5cf4:	b	5d0c <sf_finish_parse+0x2ec>
    5cf8:	ldr	r2, [r3, #60]	; 0x3c
    5cfc:	str	r1, [r3, #60]	; 0x3c
    5d00:	cmp	r2, #0
    5d04:	beq	5d28 <sf_finish_parse+0x308>
    5d08:	mov	r3, r2
    5d0c:	ldr	r2, [r3, #44]	; 0x2c
    5d10:	cmp	r2, #0
    5d14:	beq	5cf8 <sf_finish_parse+0x2d8>
    5d18:	ldr	r2, [r3, #84]	; 0x54
    5d1c:	str	r1, [r3, #84]	; 0x54
    5d20:	cmp	r2, #0
    5d24:	bne	5d08 <sf_finish_parse+0x2e8>
    5d28:	ldr	r2, [r0, #44]	; 0x2c
    5d2c:	mov	r3, r4
    5d30:	clz	r2, r2
    5d34:	lsr	r2, r2, #5
    5d38:	str	r2, [r0, #44]	; 0x2c
    5d3c:	ldr	r2, [r4, #44]	; 0x2c
    5d40:	clz	r2, r2
    5d44:	lsr	r2, r2, #5
    5d48:	str	r4, [sp, #12]
    5d4c:	str	r2, [r4, #44]	; 0x2c
    5d50:	ldr	r1, [r3, #44]	; 0x2c
    5d54:	add	r2, r3, #84	; 0x54
    5d58:	cmp	r1, #0
    5d5c:	addeq	r2, r3, #60	; 0x3c
    5d60:	ldr	r3, [r2]
    5d64:	cmp	r3, #0
    5d68:	bne	5d50 <sf_finish_parse+0x330>
    5d6c:	str	r0, [r2]
    5d70:	ldr	r3, [r4, #44]	; 0x2c
    5d74:	clz	r3, r3
    5d78:	lsr	r3, r3, #5
    5d7c:	str	r3, [r4, #44]	; 0x2c
    5d80:	ldr	r3, [r0, #96]	; 0x60
    5d84:	str	r3, [r4, #96]	; 0x60
    5d88:	ldr	r3, [pc, #1508]	; 6374 <sf_finish_parse+0x954>
    5d8c:	add	r3, pc, r3
    5d90:	ldr	r5, [r3, #912]	; 0x390
    5d94:	bl	29f8 <newchunk.constprop.50>
    5d98:	mov	r3, #6
    5d9c:	str	r3, [r0, #8]
    5da0:	str	r5, [r0, #20]
    5da4:	str	r0, [r0, #96]	; 0x60
    5da8:	mov	r3, r4
    5dac:	b	5dc4 <sf_finish_parse+0x3a4>
    5db0:	ldr	r2, [r3, #60]	; 0x3c
    5db4:	str	r0, [r3, #60]	; 0x3c
    5db8:	cmp	r2, #0
    5dbc:	beq	5de0 <sf_finish_parse+0x3c0>
    5dc0:	mov	r3, r2
    5dc4:	ldr	r2, [r3, #44]	; 0x2c
    5dc8:	cmp	r2, #0
    5dcc:	beq	5db0 <sf_finish_parse+0x390>
    5dd0:	ldr	r2, [r3, #84]	; 0x54
    5dd4:	str	r0, [r3, #84]	; 0x54
    5dd8:	cmp	r2, #0
    5ddc:	bne	5dc0 <sf_finish_parse+0x3a0>
    5de0:	ldr	r3, [r4, #44]	; 0x2c
    5de4:	clz	r3, r3
    5de8:	lsr	r3, r3, #5
    5dec:	str	r3, [r4, #44]	; 0x2c
    5df0:	bl	29f8 <newchunk.constprop.50>
    5df4:	mov	r3, #0
    5df8:	mov	r2, #6
    5dfc:	str	r3, [r0, #20]
    5e00:	str	r0, [r0, #96]	; 0x60
    5e04:	str	r2, [r0, #8]
    5e08:	mov	r3, r4
    5e0c:	b	5e24 <sf_finish_parse+0x404>
    5e10:	ldr	r2, [r3, #60]	; 0x3c
    5e14:	str	r0, [r3, #60]	; 0x3c
    5e18:	cmp	r2, #0
    5e1c:	beq	5e40 <sf_finish_parse+0x420>
    5e20:	mov	r3, r2
    5e24:	ldr	r2, [r3, #44]	; 0x2c
    5e28:	cmp	r2, #0
    5e2c:	beq	5e10 <sf_finish_parse+0x3f0>
    5e30:	ldr	r2, [r3, #84]	; 0x54
    5e34:	str	r0, [r3, #84]	; 0x54
    5e38:	cmp	r2, #0
    5e3c:	bne	5e20 <sf_finish_parse+0x400>
    5e40:	ldr	r3, [pc, #1328]	; 6378 <sf_finish_parse+0x958>
    5e44:	ldr	r2, [r4, #96]	; 0x60
    5e48:	add	r3, pc, r3
    5e4c:	str	r2, [r3, #900]	; 0x384
    5e50:	add	sp, sp, #20
    5e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5e58:	ldr	r6, [r3, #856]	; 0x358
    5e5c:	cmn	r6, #1
    5e60:	beq	60e8 <sf_finish_parse+0x6c8>
    5e64:	bl	2810 <newchunk.constprop.49>
    5e68:	mov	r2, #32
    5e6c:	mov	r3, #4
    5e70:	str	r2, [r0]
    5e74:	str	r3, [r0, #12]
    5e78:	mov	r5, r0
    5e7c:	bl	2810 <newchunk.constprop.49>
    5e80:	mov	r3, #2
    5e84:	mov	r2, r5
    5e88:	str	r6, [r0, #12]
    5e8c:	str	r3, [r0]
    5e90:	b	5e98 <sf_finish_parse+0x478>
    5e94:	mov	r2, r3
    5e98:	ldr	r3, [r2, #16]
    5e9c:	cmp	r3, #0
    5ea0:	bne	5e94 <sf_finish_parse+0x474>
    5ea4:	str	r0, [r2, #16]
    5ea8:	bl	2810 <newchunk.constprop.49>
    5eac:	mov	r3, #7
    5eb0:	mov	r2, r5
    5eb4:	str	r3, [r0]
    5eb8:	b	5ec0 <sf_finish_parse+0x4a0>
    5ebc:	mov	r2, r3
    5ec0:	ldr	r3, [r2, #16]
    5ec4:	cmp	r3, #0
    5ec8:	bne	5ebc <sf_finish_parse+0x49c>
    5ecc:	ldr	r3, [pc, #1192]	; 637c <sf_finish_parse+0x95c>
    5ed0:	str	r0, [r2, #16]
    5ed4:	add	r3, pc, r3
    5ed8:	ldr	r9, [r3, #864]	; 0x360
    5edc:	cmn	r9, #1
    5ee0:	bne	5a7c <sf_finish_parse+0x5c>
    5ee4:	b	5c8c <sf_finish_parse+0x26c>
    5ee8:	cmp	r7, #119	; 0x77
    5eec:	bne	609c <sf_finish_parse+0x67c>
    5ef0:	ldr	r2, [pc, #1144]	; 6370 <sf_finish_parse+0x950>
    5ef4:	ldr	r3, [r3, #856]	; 0x358
    5ef8:	mov	r1, #1
    5efc:	mov	r0, r3
    5f00:	str	r3, [sp, #4]
    5f04:	ldr	r3, [sl, r2]
    5f08:	cmn	r0, #1
    5f0c:	str	r1, [r3]
    5f10:	beq	60e8 <sf_finish_parse+0x6c8>
    5f14:	bl	2810 <newchunk.constprop.49>
    5f18:	mov	r2, #32
    5f1c:	mov	r3, #0
    5f20:	str	r2, [r0]
    5f24:	str	r3, [r0, #12]
    5f28:	mov	r5, r0
    5f2c:	bl	2810 <newchunk.constprop.49>
    5f30:	ldr	r3, [pc, #1096]	; 6380 <sf_finish_parse+0x960>
    5f34:	mov	r2, #84	; 0x54
    5f38:	str	r2, [r0]
    5f3c:	str	r3, [r0, #12]
    5f40:	mov	r2, r5
    5f44:	b	5f4c <sf_finish_parse+0x52c>
    5f48:	mov	r2, r3
    5f4c:	ldr	r3, [r2, #16]
    5f50:	cmp	r3, #0
    5f54:	bne	5f48 <sf_finish_parse+0x528>
    5f58:	str	r0, [r2, #16]
    5f5c:	bl	2810 <newchunk.constprop.49>
    5f60:	ldr	r3, [pc, #1052]	; 6384 <sf_finish_parse+0x964>
    5f64:	mov	r2, #21
    5f68:	str	r2, [r0]
    5f6c:	mov	fp, r0
    5f70:	str	r3, [r0, #12]
    5f74:	mov	r2, r5
    5f78:	b	5f80 <sf_finish_parse+0x560>
    5f7c:	mov	r2, r3
    5f80:	ldr	r3, [r2, #16]
    5f84:	cmp	r3, #0
    5f88:	bne	5f7c <sf_finish_parse+0x55c>
    5f8c:	str	fp, [r2, #16]
    5f90:	bl	2810 <newchunk.constprop.49>
    5f94:	mov	r2, #32
    5f98:	mov	r3, #4
    5f9c:	str	r2, [r0]
    5fa0:	str	r3, [r0, #12]
    5fa4:	mov	r2, r5
    5fa8:	b	5fb0 <sf_finish_parse+0x590>
    5fac:	mov	r2, r3
    5fb0:	ldr	r3, [r2, #16]
    5fb4:	cmp	r3, #0
    5fb8:	bne	5fac <sf_finish_parse+0x58c>
    5fbc:	str	r0, [r2, #16]
    5fc0:	str	r0, [fp, #4]
    5fc4:	bl	2810 <newchunk.constprop.49>
    5fc8:	mov	r3, #1
    5fcc:	mov	r1, #5
    5fd0:	str	r3, [r0, #12]
    5fd4:	mov	r9, r0
    5fd8:	str	r1, [r0]
    5fdc:	mov	r3, r5
    5fe0:	b	5fe8 <sf_finish_parse+0x5c8>
    5fe4:	mov	r3, r6
    5fe8:	ldr	r6, [r3, #16]
    5fec:	cmp	r6, #0
    5ff0:	bne	5fe4 <sf_finish_parse+0x5c4>
    5ff4:	str	r9, [r3, #16]
    5ff8:	bl	2810 <newchunk.constprop.49>
    5ffc:	mov	r3, #144	; 0x90
    6000:	mov	r1, r5
    6004:	str	r6, [r0]
    6008:	str	r3, [r0, #12]
    600c:	b	6014 <sf_finish_parse+0x5f4>
    6010:	mov	r1, r3
    6014:	ldr	r3, [r1, #16]
    6018:	cmp	r3, #0
    601c:	bne	6010 <sf_finish_parse+0x5f0>
    6020:	str	r0, [r1, #16]
    6024:	str	r0, [fp, #8]
    6028:	bl	2810 <newchunk.constprop.49>
    602c:	ldr	r2, [sp, #4]
    6030:	mov	r3, #2
    6034:	mov	r1, r5
    6038:	str	r2, [r0, #12]
    603c:	str	r3, [r0]
    6040:	b	6048 <sf_finish_parse+0x628>
    6044:	mov	r1, r3
    6048:	ldr	r3, [r1, #16]
    604c:	cmp	r3, #0
    6050:	bne	6044 <sf_finish_parse+0x624>
    6054:	str	r0, [r1, #16]
    6058:	str	r0, [r9, #8]
    605c:	bl	2810 <newchunk.constprop.49>
    6060:	mov	r3, #7
    6064:	mov	r2, r5
    6068:	str	r3, [r0]
    606c:	b	6074 <sf_finish_parse+0x654>
    6070:	mov	r2, r3
    6074:	ldr	r3, [r2, #16]
    6078:	cmp	r3, #0
    607c:	bne	6070 <sf_finish_parse+0x650>
    6080:	b	5ecc <sf_finish_parse+0x4ac>
    6084:	cmp	r5, #0
    6088:	bne	5c8c <sf_finish_parse+0x26c>
    608c:	b	5cb0 <sf_finish_parse+0x290>
    6090:	bl	28b0 <gen_load_ppi_llprefixlen>
    6094:	mov	r5, r0
    6098:	b	5a68 <sf_finish_parse+0x48>
    609c:	cmp	r7, #127	; 0x7f
    60a0:	beq	60b8 <sf_finish_parse+0x698>
    60a4:	ble	60d4 <sf_finish_parse+0x6b4>
    60a8:	cmp	r7, #163	; 0xa3
    60ac:	beq	60b8 <sf_finish_parse+0x698>
    60b0:	cmp	r7, #192	; 0xc0
    60b4:	bne	5d88 <sf_finish_parse+0x368>
    60b8:	ldr	r3, [pc, #712]	; 6388 <sf_finish_parse+0x968>
    60bc:	add	r3, pc, r3
    60c0:	ldr	r9, [r3, #864]	; 0x360
    60c4:	cmn	r9, #1
    60c8:	movne	r5, #0
    60cc:	bne	5a7c <sf_finish_parse+0x5c>
    60d0:	b	5cb0 <sf_finish_parse+0x290>
    60d4:	cmp	r7, #105	; 0x69
    60d8:	beq	60b8 <sf_finish_parse+0x698>
    60dc:	cmp	r7, #119	; 0x77
    60e0:	bne	5cb0 <sf_finish_parse+0x290>
    60e4:	b	60b8 <sf_finish_parse+0x698>
    60e8:	mov	r5, #0
    60ec:	b	5a68 <sf_finish_parse+0x48>
    60f0:	bl	2810 <newchunk.constprop.49>
    60f4:	mov	r2, #32
    60f8:	mov	r3, #4
    60fc:	str	r2, [r0]
    6100:	str	r0, [r6, #8]
    6104:	mov	r2, r5
    6108:	str	r3, [r0, #12]
    610c:	b	6114 <sf_finish_parse+0x6f4>
    6110:	mov	r2, r3
    6114:	ldr	r3, [r2, #16]
    6118:	cmp	r3, #0
    611c:	bne	6110 <sf_finish_parse+0x6f0>
    6120:	str	r0, [r2, #16]
    6124:	bl	2810 <newchunk.constprop.49>
    6128:	mov	r2, #69	; 0x45
    612c:	mov	r3, #33554432	; 0x2000000
    6130:	str	r2, [r0]
    6134:	mov	fp, r0
    6138:	str	r3, [r0, #12]
    613c:	mov	r2, r5
    6140:	b	6148 <sf_finish_parse+0x728>
    6144:	mov	r2, r3
    6148:	ldr	r3, [r2, #16]
    614c:	cmp	r3, #0
    6150:	bne	6144 <sf_finish_parse+0x724>
    6154:	str	fp, [r2, #16]
    6158:	str	sl, [fp, #8]
    615c:	bl	2810 <newchunk.constprop.49>
    6160:	mov	r2, #69	; 0x45
    6164:	mov	r3, #16777216	; 0x1000000
    6168:	str	r2, [r0]
    616c:	mov	r6, r0
    6170:	str	r0, [fp, #4]
    6174:	mov	r2, r5
    6178:	str	r3, [r0, #12]
    617c:	b	6184 <sf_finish_parse+0x764>
    6180:	mov	r2, r3
    6184:	ldr	r3, [r2, #16]
    6188:	cmp	r3, #0
    618c:	bne	6180 <sf_finish_parse+0x760>
    6190:	str	r6, [r2, #16]
    6194:	bl	2810 <newchunk.constprop.49>
    6198:	mov	r2, #48	; 0x30
    619c:	mov	r3, #16
    61a0:	str	r2, [r0]
    61a4:	str	r0, [r6, #4]
    61a8:	mov	r2, r5
    61ac:	str	r3, [r0, #12]
    61b0:	b	61b8 <sf_finish_parse+0x798>
    61b4:	mov	r2, r3
    61b8:	ldr	r3, [r2, #16]
    61bc:	cmp	r3, #0
    61c0:	bne	61b4 <sf_finish_parse+0x794>
    61c4:	str	r0, [r2, #16]
    61c8:	bl	2810 <newchunk.constprop.49>
    61cc:	mov	r2, #69	; 0x45
    61d0:	mov	r3, #32
    61d4:	str	r2, [r0]
    61d8:	mov	fp, r0
    61dc:	str	r3, [r0, #12]
    61e0:	mov	r2, r5
    61e4:	b	61ec <sf_finish_parse+0x7cc>
    61e8:	mov	r2, r3
    61ec:	ldr	r3, [r2, #16]
    61f0:	cmp	r3, #0
    61f4:	bne	61e8 <sf_finish_parse+0x7c8>
    61f8:	str	fp, [r2, #16]
    61fc:	bl	2810 <newchunk.constprop.49>
    6200:	mov	r2, #48	; 0x30
    6204:	mov	r3, #8
    6208:	str	r2, [r0]
    620c:	str	r0, [r6, #8]
    6210:	mov	r2, r5
    6214:	str	r3, [r0, #12]
    6218:	b	6220 <sf_finish_parse+0x800>
    621c:	mov	r2, r3
    6220:	ldr	r3, [r2, #16]
    6224:	cmp	r3, #0
    6228:	bne	621c <sf_finish_parse+0x7fc>
    622c:	str	r0, [r2, #16]
    6230:	bl	2810 <newchunk.constprop.49>
    6234:	mov	r2, #69	; 0x45
    6238:	mov	r3, #32
    623c:	str	r2, [r0]
    6240:	mov	r6, r0
    6244:	str	r3, [r0, #12]
    6248:	mov	r2, r5
    624c:	b	6254 <sf_finish_parse+0x834>
    6250:	mov	r2, r3
    6254:	ldr	r3, [r2, #16]
    6258:	cmp	r3, #0
    625c:	bne	6250 <sf_finish_parse+0x830>
    6260:	str	r6, [r2, #16]
    6264:	bl	2810 <newchunk.constprop.49>
    6268:	mov	r3, #96	; 0x60
    626c:	mov	r1, r5
    6270:	mov	r2, r0
    6274:	str	r9, [r0, #12]
    6278:	str	r3, [r0]
    627c:	b	6284 <sf_finish_parse+0x864>
    6280:	mov	r1, r3
    6284:	ldr	r3, [r1, #16]
    6288:	cmp	r3, #0
    628c:	bne	6280 <sf_finish_parse+0x860>
    6290:	str	r2, [r1, #16]
    6294:	str	r2, [sp, #4]
    6298:	bl	2810 <newchunk.constprop.49>
    629c:	mov	r1, #4
    62a0:	mov	r3, #3
    62a4:	ldr	r2, [sp, #4]
    62a8:	str	r1, [r0]
    62ac:	str	r3, [r0, #12]
    62b0:	mov	r1, r5
    62b4:	b	62bc <sf_finish_parse+0x89c>
    62b8:	mov	r1, r3
    62bc:	ldr	r3, [r1, #16]
    62c0:	cmp	r3, #0
    62c4:	bne	62b8 <sf_finish_parse+0x898>
    62c8:	str	r0, [r1, #16]
    62cc:	str	r2, [sp, #4]
    62d0:	bl	2810 <newchunk.constprop.49>
    62d4:	mov	r1, #84	; 0x54
    62d8:	mvn	r3, #3
    62dc:	ldr	r2, [sp, #4]
    62e0:	str	r1, [r0]
    62e4:	str	r3, [r0, #12]
    62e8:	mov	r1, r5
    62ec:	b	62f4 <sf_finish_parse+0x8d4>
    62f0:	mov	r1, r3
    62f4:	ldr	r3, [r1, #16]
    62f8:	cmp	r3, #0
    62fc:	bne	62f0 <sf_finish_parse+0x8d0>
    6300:	str	r0, [r1, #16]
    6304:	str	r2, [sp, #4]
    6308:	bl	2810 <newchunk.constprop.49>
    630c:	mov	r3, #2
    6310:	mov	r1, r5
    6314:	ldr	r2, [sp, #4]
    6318:	str	r9, [r0, #12]
    631c:	str	r3, [r0]
    6320:	b	6328 <sf_finish_parse+0x908>
    6324:	mov	r1, r3
    6328:	ldr	r3, [r1, #16]
    632c:	cmp	r3, #0
    6330:	bne	6324 <sf_finish_parse+0x904>
    6334:	str	r0, [r1, #16]
    6338:	stmib	fp, {r2, sl}
    633c:	stmib	r6, {r2, sl}
    6340:	b	5c8c <sf_finish_parse+0x26c>
    6344:	bl	2810 <newchunk.constprop.49>
    6348:	ldr	r3, [pc, #60]	; 638c <sf_finish_parse+0x96c>
    634c:	add	r3, pc, r3
    6350:	ldr	r3, [r3, #880]	; 0x370
    6354:	mov	r5, r0
    6358:	str	r6, [r0]
    635c:	str	r3, [r0, #12]
    6360:	b	5a98 <sf_finish_parse+0x78>
    6364:	.word	0x00038940
    6368:	.word	0x000385b8
    636c:	.word	0x000388fc
    6370:	.word	0x00000104
    6374:	.word	0x000385dc
    6378:	.word	0x00038520
    637c:	.word	0x00038494
    6380:	.word	0xfffff000
    6384:	.word	0x80211000
    6388:	.word	0x000382ac
    638c:	.word	0x0003801c

00006390 <sf_gen_and>:
    6390:	cmp	r0, #0
    6394:	ldr	ip, [r1, #96]	; 0x60
    6398:	beq	63d4 <sf_gen_and+0x44>
    639c:	mov	r3, r0
    63a0:	b	63b8 <sf_gen_and+0x28>
    63a4:	ldr	r2, [r3, #84]	; 0x54
    63a8:	str	ip, [r3, #84]	; 0x54
    63ac:	cmp	r2, #0
    63b0:	beq	63d4 <sf_gen_and+0x44>
    63b4:	mov	r3, r2
    63b8:	ldr	r2, [r3, #44]	; 0x2c
    63bc:	cmp	r2, #0
    63c0:	bne	63a4 <sf_gen_and+0x14>
    63c4:	ldr	r2, [r3, #60]	; 0x3c
    63c8:	str	ip, [r3, #60]	; 0x3c
    63cc:	cmp	r2, #0
    63d0:	bne	63b4 <sf_gen_and+0x24>
    63d4:	ldr	r3, [r0, #44]	; 0x2c
    63d8:	clz	r3, r3
    63dc:	lsr	r3, r3, #5
    63e0:	str	r3, [r0, #44]	; 0x2c
    63e4:	ldr	r3, [r1, #44]	; 0x2c
    63e8:	clz	r3, r3
    63ec:	lsr	r3, r3, #5
    63f0:	str	r3, [r1, #44]	; 0x2c
    63f4:	mov	r3, r1
    63f8:	ldr	ip, [r3, #44]	; 0x2c
    63fc:	add	r2, r3, #84	; 0x54
    6400:	cmp	ip, #0
    6404:	addeq	r2, r3, #60	; 0x3c
    6408:	ldr	r3, [r2]
    640c:	cmp	r3, #0
    6410:	bne	63f8 <sf_gen_and+0x68>
    6414:	str	r0, [r2]
    6418:	ldr	r3, [r1, #44]	; 0x2c
    641c:	clz	r3, r3
    6420:	lsr	r3, r3, #5
    6424:	str	r3, [r1, #44]	; 0x2c
    6428:	ldr	r3, [r0, #96]	; 0x60
    642c:	str	r3, [r1, #96]	; 0x60
    6430:	bx	lr

00006434 <gen_snap>:
    6434:	ldr	r3, [pc, #1716]	; 6af0 <gen_snap+0x6bc>
    6438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    643c:	add	r3, pc, r3
    6440:	sub	sp, sp, #60	; 0x3c
    6444:	ldr	r3, [r3, #860]	; 0x35c
    6448:	ldr	r2, [pc, #1700]	; 6af4 <gen_snap+0x6c0>
    644c:	str	r3, [sp, #16]
    6450:	ldr	r3, [pc, #1696]	; 6af8 <gen_snap+0x6c4>
    6454:	ldr	ip, [pc, #1696]	; 6afc <gen_snap+0x6c8>
    6458:	add	r3, pc, r3
    645c:	str	r3, [sp, #36]	; 0x24
    6460:	ldr	r3, [pc, #1688]	; 6b00 <gen_snap+0x6cc>
    6464:	add	r2, pc, r2
    6468:	add	r3, pc, r3
    646c:	add	ip, pc, ip
    6470:	mov	fp, r3
    6474:	add	r3, r2, #728	; 0x2d8
    6478:	str	r3, [sp, #8]
    647c:	add	r3, ip, #728	; 0x2d8
    6480:	mov	r9, #8
    6484:	str	r3, [sp, #12]
    6488:	add	r3, sp, #56	; 0x38
    648c:	str	r3, [sp]
    6490:	lsr	r3, r0, #16
    6494:	strb	r0, [sp, #53]	; 0x35
    6498:	strb	r1, [sp, #55]	; 0x37
    649c:	lsr	r0, r0, r9
    64a0:	lsr	r1, r1, r9
    64a4:	strb	r3, [sp, #51]	; 0x33
    64a8:	mov	sl, #0
    64ac:	mvn	r3, #85	; 0x55
    64b0:	strb	r3, [sp, #48]	; 0x30
    64b4:	strb	r3, [sp, #49]	; 0x31
    64b8:	mov	r3, #3
    64bc:	str	r2, [sp, #32]
    64c0:	str	ip, [sp, #20]
    64c4:	strb	r1, [sp, #54]	; 0x36
    64c8:	strb	r0, [sp, #52]	; 0x34
    64cc:	strb	r3, [sp, #50]	; 0x32
    64d0:	ldr	r2, [sp]
    64d4:	sub	r9, r9, #4
    64d8:	ldr	r3, [r2, #-4]!
    64dc:	str	r2, [sp]
    64e0:	ldr	r2, [sp, #16]
    64e4:	rev	r3, r3
    64e8:	cmp	r2, #0
    64ec:	str	r3, [sp, #4]
    64f0:	beq	679c <gen_snap+0x368>
    64f4:	ldr	r4, [fp, #864]	; 0x360
    64f8:	cmn	r4, #1
    64fc:	beq	67c0 <gen_snap+0x38c>
    6500:	ldr	r1, [sp, #32]
    6504:	ldr	r3, [sp, #8]
    6508:	ldr	r6, [r1, #724]	; 0x2d4
    650c:	lsl	r7, r6, #3
    6510:	add	r2, r1, r7
    6514:	add	r3, r3, r7
    6518:	ldr	r2, [r2, #728]	; 0x2d8
    651c:	cmp	r2, #19
    6520:	bhi	6784 <gen_snap+0x350>
    6524:	add	r6, r6, #1
    6528:	cmp	r6, #15
    652c:	str	r6, [r1, #724]	; 0x2d4
    6530:	add	r2, r3, #8
    6534:	bgt	6ae4 <gen_snap+0x6b0>
    6538:	mov	r5, #1024	; 0x400
    653c:	mov	r1, #1
    6540:	lsl	r5, r5, r6
    6544:	mov	r0, r5
    6548:	str	r3, [sp, #24]
    654c:	str	r2, [sp, #28]
    6550:	bl	d38 <calloc@plt>
    6554:	ldr	r3, [sp, #24]
    6558:	cmp	r0, #0
    655c:	str	r0, [r3, #12]
    6560:	beq	6ae4 <gen_snap+0x6b0>
    6564:	cmp	r5, #19
    6568:	str	r5, [r3, #8]
    656c:	bls	6ae4 <gen_snap+0x6b0>
    6570:	ldr	r3, [sp, #8]
    6574:	add	r7, r7, #8
    6578:	ldr	r2, [sp, #28]
    657c:	add	r8, r3, r7
    6580:	lsl	r7, r6, #3
    6584:	ldr	r3, [pc, #1400]	; 6b04 <gen_snap+0x6d0>
    6588:	sub	r5, r5, #20
    658c:	str	r5, [r2]
    6590:	add	r3, pc, r3
    6594:	mov	r2, #97	; 0x61
    6598:	str	r2, [r0, r5]
    659c:	add	r7, r3, r7
    65a0:	add	r5, r0, r5
    65a4:	str	r4, [r5, #12]
    65a8:	ldr	r2, [r7, #728]	; 0x2d8
    65ac:	cmp	r2, #19
    65b0:	bhi	6774 <gen_snap+0x340>
    65b4:	add	r6, r6, #1
    65b8:	cmp	r6, #15
    65bc:	str	r6, [r3, #724]	; 0x2d4
    65c0:	add	r4, r8, #8
    65c4:	bgt	6ae4 <gen_snap+0x6b0>
    65c8:	mov	r3, #1024	; 0x400
    65cc:	mov	r1, #1
    65d0:	lsl	r6, r3, r6
    65d4:	mov	r0, r6
    65d8:	bl	d38 <calloc@plt>
    65dc:	cmp	r0, #0
    65e0:	str	r0, [r8, #12]
    65e4:	beq	6ae4 <gen_snap+0x6b0>
    65e8:	cmp	r6, #19
    65ec:	str	r6, [r8, #8]
    65f0:	bls	6ae4 <gen_snap+0x6b0>
    65f4:	sub	r6, r6, #20
    65f8:	add	r1, r0, r6
    65fc:	mov	r3, #64	; 0x40
    6600:	str	r6, [r4]
    6604:	mov	r2, r5
    6608:	str	r3, [r0, r6]
    660c:	str	r9, [r1, #12]
    6610:	b	6618 <gen_snap+0x1e4>
    6614:	mov	r2, r3
    6618:	ldr	r3, [r2, #16]
    661c:	cmp	r3, #0
    6620:	bne	6614 <gen_snap+0x1e0>
    6624:	str	r1, [r2, #16]
    6628:	ldr	r2, [sp, #20]
    662c:	ldr	r1, [sp, #12]
    6630:	ldr	r4, [r2, #724]	; 0x2d4
    6634:	lsl	r6, r4, #3
    6638:	add	r3, r2, r6
    663c:	add	r6, r1, r6
    6640:	ldr	r3, [r3, #728]	; 0x2d8
    6644:	cmp	r3, #207	; 0xcf
    6648:	bhi	6764 <gen_snap+0x330>
    664c:	add	r4, r4, #1
    6650:	cmp	r4, #15
    6654:	str	r4, [r2, #724]	; 0x2d4
    6658:	add	r7, r6, #8
    665c:	bgt	6ae4 <gen_snap+0x6b0>
    6660:	mov	r3, #1024	; 0x400
    6664:	mov	r1, #1
    6668:	lsl	r4, r3, r4
    666c:	mov	r0, r4
    6670:	bl	d38 <calloc@plt>
    6674:	cmp	r0, #0
    6678:	str	r0, [r6, #12]
    667c:	beq	6ae4 <gen_snap+0x6b0>
    6680:	cmp	r4, #207	; 0xcf
    6684:	str	r4, [r6, #8]
    6688:	bls	6ae4 <gen_snap+0x6b0>
    668c:	sub	r4, r4, #208	; 0xd0
    6690:	add	r0, r0, r4
    6694:	ldr	r2, [sp, #4]
    6698:	mov	r3, #21
    669c:	cmp	sl, #0
    66a0:	str	r4, [r7]
    66a4:	str	r3, [r0, #8]
    66a8:	str	r0, [r0, #96]	; 0x60
    66ac:	str	r5, [r0, #4]
    66b0:	str	r2, [r0, #20]
    66b4:	movne	r3, sl
    66b8:	bne	66d4 <gen_snap+0x2a0>
    66bc:	b	6750 <gen_snap+0x31c>
    66c0:	ldr	r2, [r3, #84]	; 0x54
    66c4:	str	r0, [r3, #84]	; 0x54
    66c8:	cmp	r2, #0
    66cc:	beq	66f0 <gen_snap+0x2bc>
    66d0:	mov	r3, r2
    66d4:	ldr	r2, [r3, #44]	; 0x2c
    66d8:	cmp	r2, #0
    66dc:	bne	66c0 <gen_snap+0x28c>
    66e0:	ldr	r2, [r3, #60]	; 0x3c
    66e4:	str	r0, [r3, #60]	; 0x3c
    66e8:	cmp	r2, #0
    66ec:	bne	66d0 <gen_snap+0x29c>
    66f0:	ldr	r2, [sl, #44]	; 0x2c
    66f4:	mov	r3, r0
    66f8:	clz	r2, r2
    66fc:	lsr	r2, r2, #5
    6700:	str	r2, [sl, #44]	; 0x2c
    6704:	ldr	r2, [r0, #44]	; 0x2c
    6708:	clz	r2, r2
    670c:	lsr	r2, r2, #5
    6710:	str	r0, [sp, #44]	; 0x2c
    6714:	str	r2, [r0, #44]	; 0x2c
    6718:	ldr	r2, [r3, #44]	; 0x2c
    671c:	cmp	r2, #0
    6720:	addeq	r2, r3, #60	; 0x3c
    6724:	addne	r2, r3, #84	; 0x54
    6728:	ldr	r3, [r2]
    672c:	cmp	r3, #0
    6730:	bne	6718 <gen_snap+0x2e4>
    6734:	str	sl, [r2]
    6738:	ldr	r3, [r0, #44]	; 0x2c
    673c:	clz	r3, r3
    6740:	lsr	r3, r3, #5
    6744:	str	r3, [r0, #44]	; 0x2c
    6748:	ldr	r3, [sl, #96]	; 0x60
    674c:	str	r3, [r0, #96]	; 0x60
    6750:	cmp	r9, #0
    6754:	mov	sl, r0
    6758:	bne	64d0 <gen_snap+0x9c>
    675c:	add	sp, sp, #60	; 0x3c
    6760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6764:	ldr	r4, [r1, r4, lsl #3]
    6768:	ldr	r0, [r6, #4]
    676c:	mov	r7, r6
    6770:	b	668c <gen_snap+0x258>
    6774:	ldr	r6, [r8]
    6778:	ldr	r0, [r8, #4]
    677c:	mov	r4, r8
    6780:	b	65f4 <gen_snap+0x1c0>
    6784:	mov	r8, r3
    6788:	ldr	r0, [r3, #4]
    678c:	ldr	r3, [sp, #8]
    6790:	mov	r2, r8
    6794:	ldr	r5, [r3, r6, lsl #3]
    6798:	b	6584 <gen_snap+0x150>
    679c:	bl	2810 <newchunk.constprop.49>
    67a0:	ldr	r3, [sp, #36]	; 0x24
    67a4:	mov	r2, #32
    67a8:	ldr	r3, [r3, #872]	; 0x368
    67ac:	add	r3, r3, r9
    67b0:	mov	r5, r0
    67b4:	str	r2, [r0]
    67b8:	str	r3, [r0, #12]
    67bc:	b	6628 <gen_snap+0x1f4>
    67c0:	ldr	r4, [fp, #656]	; 0x290
    67c4:	lsl	r3, r4, #2
    67c8:	add	r2, fp, r3
    67cc:	ldr	r2, [r2, #660]	; 0x294
    67d0:	cmp	r2, #0
    67d4:	beq	6ac8 <gen_snap+0x694>
    67d8:	add	r4, r4, #1
    67dc:	asr	r3, r4, #31
    67e0:	lsr	r3, r3, #28
    67e4:	add	r4, r4, r3
    67e8:	and	r4, r4, #15
    67ec:	sub	r4, r4, r3
    67f0:	str	r4, [fp, #656]	; 0x290
    67f4:	lsl	r3, r4, #2
    67f8:	add	r2, fp, r3
    67fc:	ldr	r2, [r2, #660]	; 0x294
    6800:	cmp	r2, #0
    6804:	beq	6ac8 <gen_snap+0x694>
    6808:	add	r4, r4, #1
    680c:	asr	r3, r4, #31
    6810:	lsr	r3, r3, #28
    6814:	add	r4, r4, r3
    6818:	and	r4, r4, #15
    681c:	sub	r4, r4, r3
    6820:	str	r4, [fp, #656]	; 0x290
    6824:	lsl	r3, r4, #2
    6828:	add	r2, fp, r3
    682c:	ldr	r2, [r2, #660]	; 0x294
    6830:	cmp	r2, #0
    6834:	beq	6ac8 <gen_snap+0x694>
    6838:	add	r4, r4, #1
    683c:	asr	r3, r4, #31
    6840:	lsr	r3, r3, #28
    6844:	add	r4, r4, r3
    6848:	and	r4, r4, #15
    684c:	sub	r4, r4, r3
    6850:	str	r4, [fp, #656]	; 0x290
    6854:	lsl	r3, r4, #2
    6858:	add	r2, fp, r3
    685c:	ldr	r2, [r2, #660]	; 0x294
    6860:	cmp	r2, #0
    6864:	beq	6ac8 <gen_snap+0x694>
    6868:	add	r4, r4, #1
    686c:	asr	r3, r4, #31
    6870:	lsr	r3, r3, #28
    6874:	add	r4, r4, r3
    6878:	and	r4, r4, #15
    687c:	sub	r4, r4, r3
    6880:	str	r4, [fp, #656]	; 0x290
    6884:	lsl	r3, r4, #2
    6888:	add	r2, fp, r3
    688c:	ldr	r2, [r2, #660]	; 0x294
    6890:	cmp	r2, #0
    6894:	beq	6ac8 <gen_snap+0x694>
    6898:	add	r4, r4, #1
    689c:	asr	r3, r4, #31
    68a0:	lsr	r3, r3, #28
    68a4:	add	r4, r4, r3
    68a8:	and	r4, r4, #15
    68ac:	sub	r4, r4, r3
    68b0:	str	r4, [fp, #656]	; 0x290
    68b4:	lsl	r3, r4, #2
    68b8:	add	r2, fp, r3
    68bc:	ldr	r2, [r2, #660]	; 0x294
    68c0:	cmp	r2, #0
    68c4:	beq	6ac8 <gen_snap+0x694>
    68c8:	add	r4, r4, #1
    68cc:	asr	r3, r4, #31
    68d0:	lsr	r3, r3, #28
    68d4:	add	r4, r4, r3
    68d8:	and	r4, r4, #15
    68dc:	sub	r4, r4, r3
    68e0:	str	r4, [fp, #656]	; 0x290
    68e4:	lsl	r3, r4, #2
    68e8:	add	r2, fp, r3
    68ec:	ldr	r2, [r2, #660]	; 0x294
    68f0:	cmp	r2, #0
    68f4:	beq	6ac8 <gen_snap+0x694>
    68f8:	add	r4, r4, #1
    68fc:	asr	r3, r4, #31
    6900:	lsr	r3, r3, #28
    6904:	add	r4, r4, r3
    6908:	and	r4, r4, #15
    690c:	sub	r4, r4, r3
    6910:	str	r4, [fp, #656]	; 0x290
    6914:	lsl	r3, r4, #2
    6918:	add	r2, fp, r3
    691c:	ldr	r2, [r2, #660]	; 0x294
    6920:	cmp	r2, #0
    6924:	beq	6ac8 <gen_snap+0x694>
    6928:	add	r4, r4, #1
    692c:	ldr	r2, [pc, #468]	; 6b08 <gen_snap+0x6d4>
    6930:	asr	r3, r4, #31
    6934:	add	r2, pc, r2
    6938:	lsr	r3, r3, #28
    693c:	add	r4, r4, r3
    6940:	and	r4, r4, #15
    6944:	sub	r4, r4, r3
    6948:	str	r4, [r2, #656]	; 0x290
    694c:	lsl	r3, r4, #2
    6950:	add	r1, r2, r3
    6954:	ldr	r1, [r1, #660]	; 0x294
    6958:	cmp	r1, #0
    695c:	beq	6ac8 <gen_snap+0x694>
    6960:	add	r4, r4, #1
    6964:	asr	r3, r4, #31
    6968:	lsr	r3, r3, #28
    696c:	add	r4, r4, r3
    6970:	and	r4, r4, #15
    6974:	sub	r4, r4, r3
    6978:	str	r4, [r2, #656]	; 0x290
    697c:	lsl	r3, r4, #2
    6980:	add	r1, r2, r3
    6984:	ldr	r1, [r1, #660]	; 0x294
    6988:	cmp	r1, #0
    698c:	beq	6ac8 <gen_snap+0x694>
    6990:	add	r4, r4, #1
    6994:	asr	r3, r4, #31
    6998:	lsr	r3, r3, #28
    699c:	add	r4, r4, r3
    69a0:	and	r4, r4, #15
    69a4:	sub	r4, r4, r3
    69a8:	str	r4, [r2, #656]	; 0x290
    69ac:	lsl	r3, r4, #2
    69b0:	add	r1, r2, r3
    69b4:	ldr	r1, [r1, #660]	; 0x294
    69b8:	cmp	r1, #0
    69bc:	beq	6ac8 <gen_snap+0x694>
    69c0:	add	r4, r4, #1
    69c4:	asr	r3, r4, #31
    69c8:	lsr	r3, r3, #28
    69cc:	add	r4, r4, r3
    69d0:	and	r4, r4, #15
    69d4:	sub	r4, r4, r3
    69d8:	str	r4, [r2, #656]	; 0x290
    69dc:	lsl	r3, r4, #2
    69e0:	add	r1, r2, r3
    69e4:	ldr	r1, [r1, #660]	; 0x294
    69e8:	cmp	r1, #0
    69ec:	beq	6ac8 <gen_snap+0x694>
    69f0:	add	r4, r4, #1
    69f4:	asr	r3, r4, #31
    69f8:	lsr	r3, r3, #28
    69fc:	add	r4, r4, r3
    6a00:	and	r4, r4, #15
    6a04:	sub	r4, r4, r3
    6a08:	str	r4, [r2, #656]	; 0x290
    6a0c:	lsl	r3, r4, #2
    6a10:	add	r1, r2, r3
    6a14:	ldr	r1, [r1, #660]	; 0x294
    6a18:	cmp	r1, #0
    6a1c:	beq	6ac8 <gen_snap+0x694>
    6a20:	add	r4, r4, #1
    6a24:	asr	r3, r4, #31
    6a28:	lsr	r3, r3, #28
    6a2c:	add	r4, r4, r3
    6a30:	and	r4, r4, #15
    6a34:	sub	r4, r4, r3
    6a38:	str	r4, [r2, #656]	; 0x290
    6a3c:	lsl	r3, r4, #2
    6a40:	add	r1, r2, r3
    6a44:	ldr	r1, [r1, #660]	; 0x294
    6a48:	cmp	r1, #0
    6a4c:	beq	6ac8 <gen_snap+0x694>
    6a50:	add	r4, r4, #1
    6a54:	asr	r3, r4, #31
    6a58:	lsr	r3, r3, #28
    6a5c:	add	r4, r4, r3
    6a60:	and	r4, r4, #15
    6a64:	sub	r4, r4, r3
    6a68:	str	r4, [r2, #656]	; 0x290
    6a6c:	lsl	r3, r4, #2
    6a70:	add	r1, r2, r3
    6a74:	ldr	r1, [r1, #660]	; 0x294
    6a78:	cmp	r1, #0
    6a7c:	beq	6ac8 <gen_snap+0x694>
    6a80:	add	r4, r4, #1
    6a84:	asr	r3, r4, #31
    6a88:	lsr	r3, r3, #28
    6a8c:	add	r4, r4, r3
    6a90:	and	r4, r4, #15
    6a94:	sub	r4, r4, r3
    6a98:	str	r4, [r2, #656]	; 0x290
    6a9c:	lsl	r3, r4, #2
    6aa0:	add	r1, r2, r3
    6aa4:	ldr	r1, [r1, #660]	; 0x294
    6aa8:	cmp	r1, #0
    6aac:	beq	6ac8 <gen_snap+0x694>
    6ab0:	ldr	r0, [pc, #84]	; 6b0c <gen_snap+0x6d8>
    6ab4:	add	r3, r4, #1
    6ab8:	and	r3, r3, #15
    6abc:	add	r0, pc, r0
    6ac0:	str	r3, [r2, #656]	; 0x290
    6ac4:	bl	2370 <sf_bpf_error>
    6ac8:	ldr	r2, [pc, #64]	; 6b10 <gen_snap+0x6dc>
    6acc:	mov	r1, #1
    6ad0:	add	r2, pc, r2
    6ad4:	add	r3, r2, r3
    6ad8:	str	r4, [r2, #864]	; 0x360
    6adc:	str	r1, [r3, #660]	; 0x294
    6ae0:	b	6500 <gen_snap+0xcc>
    6ae4:	ldr	r0, [pc, #40]	; 6b14 <gen_snap+0x6e0>
    6ae8:	add	r0, pc, r0
    6aec:	bl	2370 <sf_bpf_error>
    6af0:	.word	0x00037f2c
    6af4:	.word	0x00037f04
    6af8:	.word	0x00037f10
    6afc:	.word	0x00037efc
    6b00:	.word	0x00037f00
    6b04:	.word	0x00037dd8
    6b08:	.word	0x00037a34
    6b0c:	.word	0x00019e8c
    6b10:	.word	0x00037898
    6b14:	.word	0x00019ef8

00006b18 <gen_llc_linktype>:
    6b18:	cmp	r0, #240	; 0xf0
    6b1c:	push	{r4, r5, r6, lr}
    6b20:	mov	r4, r0
    6b24:	beq	6b8c <gen_llc_linktype+0x74>
    6b28:	bgt	6b68 <gen_llc_linktype+0x50>
    6b2c:	cmp	r0, #6
    6b30:	beq	6b8c <gen_llc_linktype+0x74>
    6b34:	cmp	r0, #224	; 0xe0
    6b38:	bne	6bbc <gen_llc_linktype+0xa4>
    6b3c:	mov	r1, #16
    6b40:	mov	r0, #0
    6b44:	bl	431c <gen_load_macplrel>
    6b48:	mov	r5, r0
    6b4c:	bl	29f8 <newchunk.constprop.50>
    6b50:	mov	r3, #21
    6b54:	str	r5, [r0, #4]
    6b58:	str	r0, [r0, #96]	; 0x60
    6b5c:	str	r4, [r0, #20]
    6b60:	str	r3, [r0, #8]
    6b64:	pop	{r4, r5, r6, pc}
    6b68:	cmp	r0, #254	; 0xfe
    6b6c:	beq	6b8c <gen_llc_linktype+0x74>
    6b70:	ldr	r3, [pc, #92]	; 6bd4 <gen_llc_linktype+0xbc>
    6b74:	cmp	r0, r3
    6b78:	bne	6bbc <gen_llc_linktype+0xa4>
    6b7c:	mov	r1, r0
    6b80:	pop	{r4, r5, r6, lr}
    6b84:	ldr	r0, [pc, #76]	; 6bd8 <gen_llc_linktype+0xc0>
    6b88:	b	6434 <gen_snap>
    6b8c:	mov	r1, #8
    6b90:	mov	r0, #0
    6b94:	bl	431c <gen_load_macplrel>
    6b98:	orr	r4, r4, r4, lsl #8
    6b9c:	mov	r5, r0
    6ba0:	bl	29f8 <newchunk.constprop.50>
    6ba4:	mov	r3, #21
    6ba8:	str	r4, [r0, #20]
    6bac:	str	r0, [r0, #96]	; 0x60
    6bb0:	str	r5, [r0, #4]
    6bb4:	str	r3, [r0, #8]
    6bb8:	pop	{r4, r5, r6, pc}
    6bbc:	ldr	r3, [pc, #24]	; 6bdc <gen_llc_linktype+0xc4>
    6bc0:	cmp	r4, r3
    6bc4:	movgt	r1, #8
    6bc8:	movgt	r0, #6
    6bcc:	bgt	6b44 <gen_llc_linktype+0x2c>
    6bd0:	b	6b3c <gen_llc_linktype+0x24>
    6bd4:	.word	0x0000809b
    6bd8:	.word	0x00080007
    6bdc:	.word	0x000005dc

00006be0 <gen_bcmp.constprop.29>:
    6be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6be4:	sub	sp, sp, #28
    6be8:	cmp	r1, #3
    6bec:	mov	r6, r1
    6bf0:	str	r0, [sp]
    6bf4:	str	r2, [sp, #12]
    6bf8:	bls	6fac <gen_bcmp.constprop.29+0x3cc>
    6bfc:	ldr	sl, [pc, #964]	; 6fc8 <gen_bcmp.constprop.29+0x3e8>
    6c00:	mov	r9, #0
    6c04:	add	sl, pc, sl
    6c08:	add	fp, sl, #728	; 0x2d8
    6c0c:	add	r8, r2, r1
    6c10:	ldrb	r5, [r8, #-3]
    6c14:	ldrb	r1, [r8, #-4]
    6c18:	ldrb	r2, [r8, #-1]
    6c1c:	ldrb	r3, [r8, #-2]
    6c20:	lsl	r5, r5, #16
    6c24:	orr	r5, r5, r1, lsl #24
    6c28:	orr	r5, r5, r2
    6c2c:	ldr	r2, [sp]
    6c30:	sub	r6, r6, #4
    6c34:	add	r0, r6, r2
    6c38:	mov	r1, #0
    6c3c:	orr	r5, r5, r3, lsl #8
    6c40:	bl	2ef8 <gen_load_llrel>
    6c44:	ldr	r4, [sl, #724]	; 0x2d4
    6c48:	lsl	r7, r4, #3
    6c4c:	add	r2, sl, r7
    6c50:	add	r7, fp, r7
    6c54:	ldr	r2, [r2, #728]	; 0x2d8
    6c58:	cmp	r2, #207	; 0xcf
    6c5c:	mov	r3, r0
    6c60:	bhi	6ef4 <gen_bcmp.constprop.29+0x314>
    6c64:	add	r4, r4, #1
    6c68:	cmp	r4, #15
    6c6c:	str	r4, [sl, #724]	; 0x2d4
    6c70:	add	r2, r7, #8
    6c74:	bgt	6fbc <gen_bcmp.constprop.29+0x3dc>
    6c78:	stmib	sp, {r2, r3}
    6c7c:	mov	r3, #1024	; 0x400
    6c80:	mov	r1, #1
    6c84:	lsl	r4, r3, r4
    6c88:	mov	r0, r4
    6c8c:	bl	d38 <calloc@plt>
    6c90:	cmp	r0, #0
    6c94:	str	r0, [r7, #12]
    6c98:	beq	6fbc <gen_bcmp.constprop.29+0x3dc>
    6c9c:	cmp	r4, #207	; 0xcf
    6ca0:	str	r4, [r7, #8]
    6ca4:	ldmib	sp, {r2, r3}
    6ca8:	bls	6fbc <gen_bcmp.constprop.29+0x3dc>
    6cac:	sub	r4, r4, #208	; 0xd0
    6cb0:	add	r0, r0, r4
    6cb4:	str	r4, [r2]
    6cb8:	cmp	r9, #0
    6cbc:	mov	r2, #21
    6cc0:	str	r3, [r0, #4]
    6cc4:	str	r2, [r0, #8]
    6cc8:	str	r0, [r0, #96]	; 0x60
    6ccc:	str	r5, [r0, #20]
    6cd0:	movne	r3, r9
    6cd4:	bne	6cf0 <gen_bcmp.constprop.29+0x110>
    6cd8:	b	6d6c <gen_bcmp.constprop.29+0x18c>
    6cdc:	ldr	r2, [r3, #84]	; 0x54
    6ce0:	str	r0, [r3, #84]	; 0x54
    6ce4:	cmp	r2, #0
    6ce8:	beq	6d0c <gen_bcmp.constprop.29+0x12c>
    6cec:	mov	r3, r2
    6cf0:	ldr	r2, [r3, #44]	; 0x2c
    6cf4:	cmp	r2, #0
    6cf8:	bne	6cdc <gen_bcmp.constprop.29+0xfc>
    6cfc:	ldr	r2, [r3, #60]	; 0x3c
    6d00:	str	r0, [r3, #60]	; 0x3c
    6d04:	cmp	r2, #0
    6d08:	bne	6cec <gen_bcmp.constprop.29+0x10c>
    6d0c:	ldr	r2, [r9, #44]	; 0x2c
    6d10:	mov	r3, r0
    6d14:	clz	r2, r2
    6d18:	lsr	r2, r2, #5
    6d1c:	str	r2, [r9, #44]	; 0x2c
    6d20:	ldr	r2, [r0, #44]	; 0x2c
    6d24:	clz	r2, r2
    6d28:	lsr	r2, r2, #5
    6d2c:	str	r0, [sp, #16]
    6d30:	str	r2, [r0, #44]	; 0x2c
    6d34:	ldr	r2, [r3, #44]	; 0x2c
    6d38:	cmp	r2, #0
    6d3c:	addeq	r2, r3, #60	; 0x3c
    6d40:	addne	r2, r3, #84	; 0x54
    6d44:	ldr	r3, [r2]
    6d48:	cmp	r3, #0
    6d4c:	bne	6d34 <gen_bcmp.constprop.29+0x154>
    6d50:	str	r9, [r2]
    6d54:	ldr	r3, [r0, #44]	; 0x2c
    6d58:	clz	r3, r3
    6d5c:	lsr	r3, r3, #5
    6d60:	str	r3, [r0, #44]	; 0x2c
    6d64:	ldr	r3, [r9, #96]	; 0x60
    6d68:	str	r3, [r0, #96]	; 0x60
    6d6c:	cmp	r6, #3
    6d70:	sub	r8, r8, #4
    6d74:	mov	r9, r0
    6d78:	bhi	6c10 <gen_bcmp.constprop.29+0x30>
    6d7c:	mov	r5, r0
    6d80:	cmp	r6, #1
    6d84:	bls	6f64 <gen_bcmp.constprop.29+0x384>
    6d88:	ldr	r3, [sp, #12]
    6d8c:	mov	r1, #8
    6d90:	add	r3, r3, r6
    6d94:	sub	r6, r6, #2
    6d98:	ldrb	r2, [r3, #-2]
    6d9c:	ldrb	r8, [r3, #-1]
    6da0:	ldr	r3, [sp]
    6da4:	add	r0, r3, r6
    6da8:	orr	r8, r8, r2, lsl r1
    6dac:	bl	2ef8 <gen_load_llrel>
    6db0:	ldr	r2, [pc, #532]	; 6fcc <gen_bcmp.constprop.29+0x3ec>
    6db4:	add	r2, pc, r2
    6db8:	add	r3, r2, #728	; 0x2d8
    6dbc:	ldr	r7, [r2, #724]	; 0x2d4
    6dc0:	lsl	fp, r7, #3
    6dc4:	add	r1, r2, fp
    6dc8:	add	fp, r3, fp
    6dcc:	ldr	r1, [r1, #728]	; 0x2d8
    6dd0:	cmp	r1, #207	; 0xcf
    6dd4:	mov	r9, r0
    6dd8:	bhi	6f04 <gen_bcmp.constprop.29+0x324>
    6ddc:	add	r3, r7, #1
    6de0:	cmp	r3, #15
    6de4:	str	r3, [r2, #724]	; 0x2d4
    6de8:	add	sl, fp, #8
    6dec:	bgt	6fbc <gen_bcmp.constprop.29+0x3dc>
    6df0:	mov	r7, #1024	; 0x400
    6df4:	mov	r1, #1
    6df8:	lsl	r7, r7, r3
    6dfc:	mov	r0, r7
    6e00:	bl	d38 <calloc@plt>
    6e04:	cmp	r0, #0
    6e08:	str	r0, [fp, #12]
    6e0c:	beq	6fbc <gen_bcmp.constprop.29+0x3dc>
    6e10:	cmp	r7, #207	; 0xcf
    6e14:	str	r7, [fp, #8]
    6e18:	bls	6fbc <gen_bcmp.constprop.29+0x3dc>
    6e1c:	sub	r7, r7, #208	; 0xd0
    6e20:	add	r4, r0, r7
    6e24:	mov	r3, #21
    6e28:	cmp	r5, #0
    6e2c:	str	r7, [sl]
    6e30:	str	r4, [r4, #96]	; 0x60
    6e34:	str	r9, [r4, #4]
    6e38:	str	r8, [r4, #20]
    6e3c:	str	r3, [r4, #8]
    6e40:	beq	6edc <gen_bcmp.constprop.29+0x2fc>
    6e44:	mov	r3, r5
    6e48:	b	6e60 <gen_bcmp.constprop.29+0x280>
    6e4c:	ldr	r2, [r3, #84]	; 0x54
    6e50:	str	r4, [r3, #84]	; 0x54
    6e54:	cmp	r2, #0
    6e58:	beq	6e7c <gen_bcmp.constprop.29+0x29c>
    6e5c:	mov	r3, r2
    6e60:	ldr	r2, [r3, #44]	; 0x2c
    6e64:	cmp	r2, #0
    6e68:	bne	6e4c <gen_bcmp.constprop.29+0x26c>
    6e6c:	ldr	r2, [r3, #60]	; 0x3c
    6e70:	str	r4, [r3, #60]	; 0x3c
    6e74:	cmp	r2, #0
    6e78:	bne	6e5c <gen_bcmp.constprop.29+0x27c>
    6e7c:	ldr	r2, [r5, #44]	; 0x2c
    6e80:	mov	r3, r4
    6e84:	clz	r2, r2
    6e88:	lsr	r2, r2, #5
    6e8c:	str	r2, [r5, #44]	; 0x2c
    6e90:	ldr	r2, [r4, #44]	; 0x2c
    6e94:	clz	r2, r2
    6e98:	lsr	r2, r2, #5
    6e9c:	str	r4, [sp, #20]
    6ea0:	str	r2, [r4, #44]	; 0x2c
    6ea4:	ldr	r2, [r3, #44]	; 0x2c
    6ea8:	cmp	r2, #0
    6eac:	addeq	r2, r3, #60	; 0x3c
    6eb0:	addne	r2, r3, #84	; 0x54
    6eb4:	ldr	r3, [r2]
    6eb8:	cmp	r3, #0
    6ebc:	bne	6ea4 <gen_bcmp.constprop.29+0x2c4>
    6ec0:	str	r5, [r2]
    6ec4:	ldr	r3, [r4, #44]	; 0x2c
    6ec8:	clz	r3, r3
    6ecc:	lsr	r3, r3, #5
    6ed0:	str	r3, [r4, #44]	; 0x2c
    6ed4:	ldr	r3, [r5, #96]	; 0x60
    6ed8:	str	r3, [r4, #96]	; 0x60
    6edc:	cmp	r6, #0
    6ee0:	moveq	r6, r4
    6ee4:	bne	6f14 <gen_bcmp.constprop.29+0x334>
    6ee8:	mov	r0, r6
    6eec:	add	sp, sp, #28
    6ef0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6ef4:	ldr	r4, [fp, r4, lsl #3]
    6ef8:	ldr	r0, [r7, #4]
    6efc:	mov	r2, r7
    6f00:	b	6cac <gen_bcmp.constprop.29+0xcc>
    6f04:	ldr	r7, [r3, r7, lsl #3]
    6f08:	ldr	r0, [fp, #4]
    6f0c:	mov	sl, fp
    6f10:	b	6e1c <gen_bcmp.constprop.29+0x23c>
    6f14:	ldr	r3, [sp, #12]
    6f18:	mov	r1, #16
    6f1c:	ldr	r0, [sp]
    6f20:	ldrb	r7, [r3]
    6f24:	bl	2ef8 <gen_load_llrel>
    6f28:	mov	r5, r4
    6f2c:	mov	r8, r0
    6f30:	bl	29f8 <newchunk.constprop.50>
    6f34:	mov	r3, #21
    6f38:	mov	r6, r0
    6f3c:	str	r8, [r0, #4]
    6f40:	str	r0, [r6, #96]	; 0x60
    6f44:	str	r7, [r0, #20]
    6f48:	str	r3, [r0, #8]
    6f4c:	mov	r0, r5
    6f50:	mov	r1, r6
    6f54:	bl	6390 <sf_gen_and>
    6f58:	mov	r0, r6
    6f5c:	add	sp, sp, #28
    6f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f64:	cmp	r6, #0
    6f68:	beq	6fb4 <gen_bcmp.constprop.29+0x3d4>
    6f6c:	ldr	r3, [sp, #12]
    6f70:	mov	r1, #16
    6f74:	ldr	r0, [sp]
    6f78:	ldrb	r4, [r3]
    6f7c:	bl	2ef8 <gen_load_llrel>
    6f80:	mov	r7, r0
    6f84:	bl	29f8 <newchunk.constprop.50>
    6f88:	mov	r3, #21
    6f8c:	cmp	r5, #0
    6f90:	mov	r6, r0
    6f94:	str	r7, [r0, #4]
    6f98:	str	r0, [r6, #96]	; 0x60
    6f9c:	str	r4, [r0, #20]
    6fa0:	str	r3, [r0, #8]
    6fa4:	beq	6ee8 <gen_bcmp.constprop.29+0x308>
    6fa8:	b	6f4c <gen_bcmp.constprop.29+0x36c>
    6fac:	mov	r5, #0
    6fb0:	b	6d80 <gen_bcmp.constprop.29+0x1a0>
    6fb4:	mov	r6, r5
    6fb8:	b	6ee8 <gen_bcmp.constprop.29+0x308>
    6fbc:	ldr	r0, [pc, #12]	; 6fd0 <gen_bcmp.constprop.29+0x3f0>
    6fc0:	add	r0, pc, r0
    6fc4:	bl	2370 <sf_bpf_error>
    6fc8:	.word	0x00037764
    6fcc:	.word	0x000375b4
    6fd0:	.word	0x00019a20

00006fd4 <sf_gen_or>:
    6fd4:	ldr	ip, [r0, #44]	; 0x2c
    6fd8:	clz	ip, ip
    6fdc:	lsr	ip, ip, #5
    6fe0:	push	{lr}		; (str lr, [sp, #-4]!)
    6fe4:	mov	r2, r0
    6fe8:	str	ip, [r0, #44]	; 0x2c
    6fec:	ldr	lr, [r1, #96]	; 0x60
    6ff0:	b	700c <sf_gen_or+0x38>
    6ff4:	ldr	r3, [r2, #60]	; 0x3c
    6ff8:	str	lr, [r2, #60]	; 0x3c
    6ffc:	cmp	r3, #0
    7000:	beq	7024 <sf_gen_or+0x50>
    7004:	ldr	ip, [r3, #44]	; 0x2c
    7008:	mov	r2, r3
    700c:	cmp	ip, #0
    7010:	beq	6ff4 <sf_gen_or+0x20>
    7014:	ldr	r3, [r2, #84]	; 0x54
    7018:	str	lr, [r2, #84]	; 0x54
    701c:	cmp	r3, #0
    7020:	bne	7004 <sf_gen_or+0x30>
    7024:	mov	r3, r1
    7028:	ldr	r2, [r0, #44]	; 0x2c
    702c:	clz	r2, r2
    7030:	lsr	r2, r2, #5
    7034:	str	r2, [r0, #44]	; 0x2c
    7038:	ldr	ip, [r3, #44]	; 0x2c
    703c:	add	r2, r3, #84	; 0x54
    7040:	cmp	ip, #0
    7044:	addeq	r2, r3, #60	; 0x3c
    7048:	ldr	r3, [r2]
    704c:	cmp	r3, #0
    7050:	bne	7038 <sf_gen_or+0x64>
    7054:	str	r0, [r2]
    7058:	ldr	r3, [r0, #96]	; 0x60
    705c:	str	r3, [r1, #96]	; 0x60
    7060:	pop	{pc}		; (ldr pc, [sp], #4)

00007064 <gen_fhostop>:
    7064:	push	{r4, r5, r6, lr}
    7068:	mov	r4, r0
    706c:	cmp	r1, #4
    7070:	addls	pc, pc, r1, lsl #2
    7074:	b	712c <gen_fhostop+0xc8>
    7078:	b	70f0 <gen_fhostop+0x8c>
    707c:	b	70dc <gen_fhostop+0x78>
    7080:	b	70c8 <gen_fhostop+0x64>
    7084:	b	70f0 <gen_fhostop+0x8c>
    7088:	b	708c <gen_fhostop+0x28>
    708c:	mov	r2, r0
    7090:	mov	r1, #6
    7094:	mov	r0, #7
    7098:	bl	6be0 <gen_bcmp.constprop.29>
    709c:	mov	r2, r4
    70a0:	mov	r1, #6
    70a4:	mov	r5, r0
    70a8:	mov	r0, #1
    70ac:	bl	6be0 <gen_bcmp.constprop.29>
    70b0:	mov	r4, r0
    70b4:	mov	r1, r0
    70b8:	mov	r0, r5
    70bc:	bl	6390 <sf_gen_and>
    70c0:	mov	r0, r4
    70c4:	pop	{r4, r5, r6, pc}
    70c8:	mov	r2, r0
    70cc:	mov	r1, #6
    70d0:	mov	r0, #1
    70d4:	pop	{r4, r5, r6, lr}
    70d8:	b	6be0 <gen_bcmp.constprop.29>
    70dc:	mov	r2, r0
    70e0:	mov	r1, #6
    70e4:	mov	r0, #7
    70e8:	pop	{r4, r5, r6, lr}
    70ec:	b	6be0 <gen_bcmp.constprop.29>
    70f0:	mov	r2, r0
    70f4:	mov	r1, #6
    70f8:	mov	r0, #7
    70fc:	bl	6be0 <gen_bcmp.constprop.29>
    7100:	mov	r2, r4
    7104:	mov	r1, #6
    7108:	mov	r5, r0
    710c:	mov	r0, #1
    7110:	bl	6be0 <gen_bcmp.constprop.29>
    7114:	mov	r4, r0
    7118:	mov	r1, r0
    711c:	mov	r0, r5
    7120:	bl	6fd4 <sf_gen_or>
    7124:	mov	r0, r4
    7128:	pop	{r4, r5, r6, pc}
    712c:	bl	f18 <abort@plt>

00007130 <gen_thostop>:
    7130:	push	{r4, r5, r6, lr}
    7134:	mov	r4, r0
    7138:	cmp	r1, #4
    713c:	addls	pc, pc, r1, lsl #2
    7140:	b	71f8 <gen_thostop+0xc8>
    7144:	b	71bc <gen_thostop+0x8c>
    7148:	b	71a8 <gen_thostop+0x78>
    714c:	b	7194 <gen_thostop+0x64>
    7150:	b	71bc <gen_thostop+0x8c>
    7154:	b	7158 <gen_thostop+0x28>
    7158:	mov	r2, r0
    715c:	mov	r1, #6
    7160:	mov	r0, #8
    7164:	bl	6be0 <gen_bcmp.constprop.29>
    7168:	mov	r2, r4
    716c:	mov	r1, #6
    7170:	mov	r5, r0
    7174:	mov	r0, #2
    7178:	bl	6be0 <gen_bcmp.constprop.29>
    717c:	mov	r4, r0
    7180:	mov	r1, r0
    7184:	mov	r0, r5
    7188:	bl	6390 <sf_gen_and>
    718c:	mov	r0, r4
    7190:	pop	{r4, r5, r6, pc}
    7194:	mov	r2, r0
    7198:	mov	r1, #6
    719c:	mov	r0, #2
    71a0:	pop	{r4, r5, r6, lr}
    71a4:	b	6be0 <gen_bcmp.constprop.29>
    71a8:	mov	r2, r0
    71ac:	mov	r1, #6
    71b0:	mov	r0, #8
    71b4:	pop	{r4, r5, r6, lr}
    71b8:	b	6be0 <gen_bcmp.constprop.29>
    71bc:	mov	r2, r0
    71c0:	mov	r1, #6
    71c4:	mov	r0, #8
    71c8:	bl	6be0 <gen_bcmp.constprop.29>
    71cc:	mov	r2, r4
    71d0:	mov	r1, #6
    71d4:	mov	r5, r0
    71d8:	mov	r0, #2
    71dc:	bl	6be0 <gen_bcmp.constprop.29>
    71e0:	mov	r4, r0
    71e4:	mov	r1, r0
    71e8:	mov	r0, r5
    71ec:	bl	6fd4 <sf_gen_or>
    71f0:	mov	r0, r4
    71f4:	pop	{r4, r5, r6, pc}
    71f8:	bl	f18 <abort@plt>

000071fc <gen_ipfchostop>:
    71fc:	push	{r4, r5, r6, lr}
    7200:	mov	r4, r0
    7204:	cmp	r1, #4
    7208:	addls	pc, pc, r1, lsl #2
    720c:	b	72c4 <gen_ipfchostop+0xc8>
    7210:	b	7288 <gen_ipfchostop+0x8c>
    7214:	b	7274 <gen_ipfchostop+0x78>
    7218:	b	7260 <gen_ipfchostop+0x64>
    721c:	b	7288 <gen_ipfchostop+0x8c>
    7220:	b	7224 <gen_ipfchostop+0x28>
    7224:	mov	r2, r0
    7228:	mov	r1, #6
    722c:	mov	r0, #10
    7230:	bl	6be0 <gen_bcmp.constprop.29>
    7234:	mov	r2, r4
    7238:	mov	r1, #6
    723c:	mov	r5, r0
    7240:	mov	r0, #2
    7244:	bl	6be0 <gen_bcmp.constprop.29>
    7248:	mov	r4, r0
    724c:	mov	r1, r0
    7250:	mov	r0, r5
    7254:	bl	6390 <sf_gen_and>
    7258:	mov	r0, r4
    725c:	pop	{r4, r5, r6, pc}
    7260:	mov	r2, r0
    7264:	mov	r1, #6
    7268:	mov	r0, #2
    726c:	pop	{r4, r5, r6, lr}
    7270:	b	6be0 <gen_bcmp.constprop.29>
    7274:	mov	r2, r0
    7278:	mov	r1, #6
    727c:	mov	r0, #10
    7280:	pop	{r4, r5, r6, lr}
    7284:	b	6be0 <gen_bcmp.constprop.29>
    7288:	mov	r2, r0
    728c:	mov	r1, #6
    7290:	mov	r0, #10
    7294:	bl	6be0 <gen_bcmp.constprop.29>
    7298:	mov	r2, r4
    729c:	mov	r1, #6
    72a0:	mov	r5, r0
    72a4:	mov	r0, #2
    72a8:	bl	6be0 <gen_bcmp.constprop.29>
    72ac:	mov	r4, r0
    72b0:	mov	r1, r0
    72b4:	mov	r0, r5
    72b8:	bl	6fd4 <sf_gen_or>
    72bc:	mov	r0, r4
    72c0:	pop	{r4, r5, r6, pc}
    72c4:	bl	f18 <abort@plt>

000072c8 <gen_ehostop>:
    72c8:	push	{r4, r5, r6, lr}
    72cc:	mov	r4, r0
    72d0:	cmp	r1, #4
    72d4:	addls	pc, pc, r1, lsl #2
    72d8:	b	73a4 <gen_ehostop+0xdc>
    72dc:	b	7368 <gen_ehostop+0xa0>
    72e0:	b	7348 <gen_ehostop+0x80>
    72e4:	b	732c <gen_ehostop+0x64>
    72e8:	b	7368 <gen_ehostop+0xa0>
    72ec:	b	72f0 <gen_ehostop+0x28>
    72f0:	mov	r1, #1
    72f4:	bl	72c8 <gen_ehostop>
    72f8:	ldr	r3, [pc, #168]	; 73a8 <gen_ehostop+0xe0>
    72fc:	mov	r2, r4
    7300:	add	r3, pc, r3
    7304:	mov	r1, #6
    7308:	mov	r5, r0
    730c:	ldr	r0, [r3, #916]	; 0x394
    7310:	bl	6be0 <gen_bcmp.constprop.29>
    7314:	mov	r4, r0
    7318:	mov	r1, r0
    731c:	mov	r0, r5
    7320:	bl	6390 <sf_gen_and>
    7324:	mov	r0, r4
    7328:	pop	{r4, r5, r6, pc}
    732c:	ldr	r3, [pc, #120]	; 73ac <gen_ehostop+0xe4>
    7330:	mov	r2, r0
    7334:	add	r3, pc, r3
    7338:	mov	r1, #6
    733c:	ldr	r0, [r3, #916]	; 0x394
    7340:	pop	{r4, r5, r6, lr}
    7344:	b	6be0 <gen_bcmp.constprop.29>
    7348:	ldr	r3, [pc, #96]	; 73b0 <gen_ehostop+0xe8>
    734c:	mov	r2, r0
    7350:	add	r3, pc, r3
    7354:	mov	r1, #6
    7358:	ldr	r0, [r3, #916]	; 0x394
    735c:	pop	{r4, r5, r6, lr}
    7360:	add	r0, r0, r1
    7364:	b	6be0 <gen_bcmp.constprop.29>
    7368:	mov	r1, #1
    736c:	bl	72c8 <gen_ehostop>
    7370:	ldr	r3, [pc, #60]	; 73b4 <gen_ehostop+0xec>
    7374:	mov	r2, r4
    7378:	add	r3, pc, r3
    737c:	mov	r1, #6
    7380:	mov	r5, r0
    7384:	ldr	r0, [r3, #916]	; 0x394
    7388:	bl	6be0 <gen_bcmp.constprop.29>
    738c:	mov	r4, r0
    7390:	mov	r1, r0
    7394:	mov	r0, r5
    7398:	bl	6fd4 <sf_gen_or>
    739c:	mov	r0, r4
    73a0:	pop	{r4, r5, r6, pc}
    73a4:	bl	f18 <abort@plt>
    73a8:	.word	0x00037068
    73ac:	.word	0x00037034
    73b0:	.word	0x00037018
    73b4:	.word	0x00036ff0

000073b8 <gen_ether_linktype>:
    73b8:	cmp	r0, #240	; 0xf0
    73bc:	push	{r4, r5, r6, r7, r8, lr}
    73c0:	mov	r4, r0
    73c4:	beq	7510 <gen_ether_linktype+0x158>
    73c8:	bgt	74c8 <gen_ether_linktype+0x110>
    73cc:	cmp	r0, #6
    73d0:	beq	7510 <gen_ether_linktype+0x158>
    73d4:	cmp	r0, #224	; 0xe0
    73d8:	bne	74e8 <gen_ether_linktype+0x130>
    73dc:	mov	r1, #16
    73e0:	mov	r0, #0
    73e4:	bl	431c <gen_load_macplrel>
    73e8:	mov	r7, #21
    73ec:	mov	r5, r0
    73f0:	bl	29f8 <newchunk.constprop.50>
    73f4:	mov	r1, #8
    73f8:	mov	r6, r0
    73fc:	str	r5, [r0, #4]
    7400:	str	r0, [r6, #96]	; 0x60
    7404:	str	r4, [r0, #20]
    7408:	str	r7, [r0, #8]
    740c:	mov	r0, #0
    7410:	bl	431c <gen_load_macplrel>
    7414:	mov	r4, r0
    7418:	bl	29f8 <newchunk.constprop.50>
    741c:	ldr	r3, [pc, #636]	; 76a0 <gen_ether_linktype+0x2e8>
    7420:	mov	r5, r0
    7424:	str	r7, [r0, #8]
    7428:	mov	r1, r5
    742c:	str	r0, [r5, #96]	; 0x60
    7430:	str	r4, [r0, #4]
    7434:	str	r3, [r5, #20]
    7438:	mov	r0, r6
    743c:	bl	6fd4 <sf_gen_or>
    7440:	ldr	r1, [pc, #604]	; 76a4 <gen_ether_linktype+0x2ec>
    7444:	mov	r0, #0
    7448:	bl	6434 <gen_snap>
    744c:	mov	r1, r5
    7450:	bl	6fd4 <sf_gen_or>
    7454:	ldr	r3, [pc, #588]	; 76a8 <gen_ether_linktype+0x2f0>
    7458:	mov	r1, #8
    745c:	add	r3, pc, r3
    7460:	ldr	r4, [r3, #952]	; 0x3b8
    7464:	mov	r0, r4
    7468:	bl	2ef8 <gen_load_llrel>
    746c:	mov	r6, r0
    7470:	bl	29f8 <newchunk.constprop.50>
    7474:	ldr	r1, [pc, #560]	; 76ac <gen_ether_linktype+0x2f4>
    7478:	mov	ip, #37	; 0x25
    747c:	mov	r3, r0
    7480:	ldr	r2, [r0, #44]	; 0x2c
    7484:	clz	r2, r2
    7488:	lsr	r2, r2, #5
    748c:	str	r6, [r0, #4]
    7490:	str	r0, [r3, #96]	; 0x60
    7494:	str	ip, [r0, #8]
    7498:	str	r1, [r0, #20]
    749c:	str	r2, [r0, #44]	; 0x2c
    74a0:	mov	r1, r5
    74a4:	bl	6390 <sf_gen_and>
    74a8:	mov	r1, #8
    74ac:	mov	r0, r4
    74b0:	ldr	r2, [pc, #492]	; 76a4 <gen_ether_linktype+0x2ec>
    74b4:	bl	3e70 <gen_cmp.constprop.42>
    74b8:	mov	r1, r5
    74bc:	bl	6fd4 <sf_gen_or>
    74c0:	mov	r0, r5
    74c4:	pop	{r4, r5, r6, r7, r8, pc}
    74c8:	ldr	r3, [pc, #480]	; 76b0 <gen_ether_linktype+0x2f8>
    74cc:	cmp	r0, r3
    74d0:	beq	759c <gen_ether_linktype+0x1e4>
    74d4:	add	r3, r3, #88	; 0x58
    74d8:	cmp	r0, r3
    74dc:	beq	759c <gen_ether_linktype+0x1e4>
    74e0:	cmp	r0, #254	; 0xfe
    74e4:	beq	7510 <gen_ether_linktype+0x158>
    74e8:	ldr	r5, [pc, #444]	; 76ac <gen_ether_linktype+0x2f4>
    74ec:	cmp	r4, r5
    74f0:	ble	7634 <gen_ether_linktype+0x27c>
    74f4:	ldr	r3, [pc, #440]	; 76b4 <gen_ether_linktype+0x2fc>
    74f8:	mov	r2, r4
    74fc:	add	r3, pc, r3
    7500:	mov	r1, #8
    7504:	ldr	r0, [r3, #952]	; 0x3b8
    7508:	pop	{r4, r5, r6, r7, r8, lr}
    750c:	b	3e70 <gen_cmp.constprop.42>
    7510:	ldr	r3, [pc, #416]	; 76b8 <gen_ether_linktype+0x300>
    7514:	mov	r1, #8
    7518:	add	r3, pc, r3
    751c:	orr	r4, r4, r4, lsl r1
    7520:	ldr	r0, [r3, #952]	; 0x3b8
    7524:	bl	2ef8 <gen_load_llrel>
    7528:	mov	r5, r0
    752c:	bl	29f8 <newchunk.constprop.50>
    7530:	ldr	r2, [pc, #372]	; 76ac <gen_ether_linktype+0x2f4>
    7534:	mov	r1, #37	; 0x25
    7538:	mov	r6, r0
    753c:	ldr	r3, [r0, #44]	; 0x2c
    7540:	clz	r3, r3
    7544:	lsr	r3, r3, #5
    7548:	str	r5, [r0, #4]
    754c:	str	r0, [r6, #96]	; 0x60
    7550:	str	r2, [r0, #20]
    7554:	str	r3, [r0, #44]	; 0x2c
    7558:	str	r1, [r0, #8]
    755c:	mov	r1, #8
    7560:	mov	r0, #0
    7564:	bl	431c <gen_load_macplrel>
    7568:	mov	r7, r0
    756c:	bl	29f8 <newchunk.constprop.50>
    7570:	mov	r3, #21
    7574:	mov	r5, r0
    7578:	str	r4, [r0, #20]
    757c:	mov	r1, r5
    7580:	str	r0, [r5, #96]	; 0x60
    7584:	str	r7, [r0, #4]
    7588:	mov	r0, r6
    758c:	str	r3, [r5, #8]
    7590:	bl	6390 <sf_gen_and>
    7594:	mov	r0, r5
    7598:	pop	{r4, r5, r6, r7, r8, pc}
    759c:	ldr	r3, [pc, #280]	; 76bc <gen_ether_linktype+0x304>
    75a0:	mov	r1, #8
    75a4:	add	r3, pc, r3
    75a8:	ldr	r7, [r3, #952]	; 0x3b8
    75ac:	mov	r0, r7
    75b0:	bl	2ef8 <gen_load_llrel>
    75b4:	mov	r5, r0
    75b8:	bl	29f8 <newchunk.constprop.50>
    75bc:	ldr	r3, [pc, #236]	; 76b0 <gen_ether_linktype+0x2f8>
    75c0:	ldr	r2, [pc, #228]	; 76ac <gen_ether_linktype+0x2f4>
    75c4:	cmp	r4, r3
    75c8:	mov	r1, #37	; 0x25
    75cc:	mov	r6, r0
    75d0:	ldr	r3, [r0, #44]	; 0x2c
    75d4:	clz	r3, r3
    75d8:	lsr	r3, r3, #5
    75dc:	str	r5, [r0, #4]
    75e0:	str	r0, [r6, #96]	; 0x60
    75e4:	str	r3, [r0, #44]	; 0x2c
    75e8:	str	r1, [r0, #8]
    75ec:	str	r2, [r0, #20]
    75f0:	moveq	r1, r4
    75f4:	ldrne	r1, [pc, #196]	; 76c0 <gen_ether_linktype+0x308>
    75f8:	ldreq	r0, [pc, #196]	; 76c4 <gen_ether_linktype+0x30c>
    75fc:	movne	r0, #0
    7600:	bl	6434 <gen_snap>
    7604:	mov	r5, r0
    7608:	mov	r1, r5
    760c:	mov	r0, r6
    7610:	bl	6390 <sf_gen_and>
    7614:	mov	r2, r4
    7618:	mov	r0, r7
    761c:	mov	r1, #8
    7620:	bl	3e70 <gen_cmp.constprop.42>
    7624:	mov	r1, r5
    7628:	bl	6fd4 <sf_gen_or>
    762c:	mov	r0, r5
    7630:	pop	{r4, r5, r6, r7, r8, pc}
    7634:	ldr	r3, [pc, #140]	; 76c8 <gen_ether_linktype+0x310>
    7638:	mov	r1, #8
    763c:	add	r3, pc, r3
    7640:	ldr	r7, [r3, #952]	; 0x3b8
    7644:	mov	r0, r7
    7648:	bl	2ef8 <gen_load_llrel>
    764c:	mov	r8, r0
    7650:	bl	29f8 <newchunk.constprop.50>
    7654:	mov	r1, #37	; 0x25
    7658:	mov	r2, r4
    765c:	mov	r6, r0
    7660:	ldr	r3, [r0, #44]	; 0x2c
    7664:	clz	r3, r3
    7668:	lsr	r3, r3, #5
    766c:	str	r8, [r0, #4]
    7670:	str	r5, [r6, #20]
    7674:	str	r1, [r6, #8]
    7678:	add	r0, r7, #2
    767c:	str	r6, [r6, #96]	; 0x60
    7680:	str	r3, [r6, #44]	; 0x2c
    7684:	mov	r1, #16
    7688:	bl	3e70 <gen_cmp.constprop.42>
    768c:	mov	r5, r0
    7690:	mov	r1, r0
    7694:	mov	r0, r6
    7698:	bl	6390 <sf_gen_and>
    769c:	b	74c0 <gen_ether_linktype+0x108>
    76a0:	.word	0x0000ffff
    76a4:	.word	0x00008137
    76a8:	.word	0x00036f0c
    76ac:	.word	0x000005dc
    76b0:	.word	0x0000809b
    76b4:	.word	0x00036e6c
    76b8:	.word	0x00036e50
    76bc:	.word	0x00036dc4
    76c0:	.word	0x000080f3
    76c4:	.word	0x00080007
    76c8:	.word	0x00036d2c

000076cc <gen_wlanhostop>:
    76cc:	push	{r4, r5, r6, r7, r8, r9, lr}
    76d0:	mov	r5, r0
    76d4:	sub	sp, sp, #12
    76d8:	cmp	r1, #8
    76dc:	addls	pc, pc, r1, lsl #2
    76e0:	b	7c34 <gen_wlanhostop+0x568>
    76e4:	b	7754 <gen_wlanhostop+0x88>
    76e8:	b	7788 <gen_wlanhostop+0xbc>
    76ec:	b	79b4 <gen_wlanhostop+0x2e8>
    76f0:	b	7754 <gen_wlanhostop+0x88>
    76f4:	b	7ae0 <gen_wlanhostop+0x414>
    76f8:	b	7b14 <gen_wlanhostop+0x448>
    76fc:	b	7b2c <gen_wlanhostop+0x460>
    7700:	b	7bf4 <gen_wlanhostop+0x528>
    7704:	b	7708 <gen_wlanhostop+0x3c>
    7708:	mov	r2, #3
    770c:	mov	r1, #0
    7710:	mov	r3, #16
    7714:	stm	sp, {r1, r2}
    7718:	mov	r0, #1
    771c:	mov	r1, r3
    7720:	bl	3bf0 <gen_ncmp.constprop.35>
    7724:	mov	r2, r5
    7728:	mov	r1, #6
    772c:	mov	r6, r0
    7730:	mov	r0, #24
    7734:	bl	6be0 <gen_bcmp.constprop.29>
    7738:	mov	r4, r0
    773c:	mov	r1, r0
    7740:	mov	r0, r6
    7744:	bl	6390 <sf_gen_and>
    7748:	mov	r0, r4
    774c:	add	sp, sp, #12
    7750:	pop	{r4, r5, r6, r7, r8, r9, pc}
    7754:	mov	r1, #1
    7758:	bl	76cc <gen_wlanhostop>
    775c:	mov	r1, #2
    7760:	mov	r6, r0
    7764:	mov	r0, r5
    7768:	bl	76cc <gen_wlanhostop>
    776c:	mov	r4, r0
    7770:	mov	r1, r0
    7774:	mov	r0, r6
    7778:	bl	6fd4 <sf_gen_or>
    777c:	mov	r0, r4
    7780:	add	sp, sp, #12
    7784:	pop	{r4, r5, r6, r7, r8, r9, pc}
    7788:	mov	r1, #16
    778c:	mov	r0, #1
    7790:	bl	2ef8 <gen_load_llrel>
    7794:	mov	r7, #69	; 0x45
    7798:	mov	r8, #1
    779c:	mov	r4, r0
    77a0:	bl	29f8 <newchunk.constprop.50>
    77a4:	mov	r2, r5
    77a8:	mov	r1, #6
    77ac:	mov	r6, r0
    77b0:	str	r4, [r0, #4]
    77b4:	str	r0, [r6, #96]	; 0x60
    77b8:	str	r8, [r0, #20]
    77bc:	str	r7, [r0, #8]
    77c0:	mov	r0, #24
    77c4:	bl	6be0 <gen_bcmp.constprop.29>
    77c8:	mov	r4, r0
    77cc:	mov	r1, r0
    77d0:	mov	r0, r6
    77d4:	bl	6390 <sf_gen_and>
    77d8:	mov	r1, #16
    77dc:	mov	r0, r8
    77e0:	bl	2ef8 <gen_load_llrel>
    77e4:	mov	r9, r0
    77e8:	bl	29f8 <newchunk.constprop.50>
    77ec:	mov	r2, r5
    77f0:	mov	r1, #6
    77f4:	mov	r6, r0
    77f8:	ldr	r3, [r0, #44]	; 0x2c
    77fc:	clz	r3, r3
    7800:	lsr	r3, r3, #5
    7804:	str	r9, [r0, #4]
    7808:	str	r7, [r0, #8]
    780c:	str	r0, [r6, #96]	; 0x60
    7810:	str	r3, [r0, #44]	; 0x2c
    7814:	str	r8, [r0, #20]
    7818:	mov	r0, #16
    781c:	bl	6be0 <gen_bcmp.constprop.29>
    7820:	mov	r9, r0
    7824:	mov	r1, r0
    7828:	mov	r0, r6
    782c:	bl	6390 <sf_gen_and>
    7830:	mov	r0, r9
    7834:	mov	r1, r4
    7838:	bl	6fd4 <sf_gen_or>
    783c:	mov	r1, #16
    7840:	mov	r0, r8
    7844:	bl	2ef8 <gen_load_llrel>
    7848:	mov	r9, #2
    784c:	mov	r6, r0
    7850:	bl	29f8 <newchunk.constprop.50>
    7854:	mov	r1, r4
    7858:	mov	r3, r0
    785c:	stmib	r0, {r6, r7}
    7860:	str	r0, [r3, #96]	; 0x60
    7864:	str	r9, [r0, #20]
    7868:	bl	6390 <sf_gen_and>
    786c:	mov	r1, #16
    7870:	mov	r0, r8
    7874:	bl	2ef8 <gen_load_llrel>
    7878:	mov	r8, r0
    787c:	bl	29f8 <newchunk.constprop.50>
    7880:	mov	r2, r5
    7884:	mov	r1, #6
    7888:	mov	r6, r0
    788c:	ldr	r3, [r0, #44]	; 0x2c
    7890:	clz	r3, r3
    7894:	lsr	r3, r3, #5
    7898:	str	r9, [r0, #20]
    789c:	str	r7, [r0, #8]
    78a0:	str	r0, [r6, #96]	; 0x60
    78a4:	str	r3, [r0, #44]	; 0x2c
    78a8:	str	r8, [r0, #4]
    78ac:	mov	r0, #10
    78b0:	bl	6be0 <gen_bcmp.constprop.29>
    78b4:	mov	r8, r0
    78b8:	mov	r1, r0
    78bc:	mov	r0, r6
    78c0:	bl	6390 <sf_gen_and>
    78c4:	mov	r0, r8
    78c8:	mov	r1, r4
    78cc:	bl	6fd4 <sf_gen_or>
    78d0:	mov	r1, #16
    78d4:	mov	r0, #0
    78d8:	bl	2ef8 <gen_load_llrel>
    78dc:	mov	r8, #8
    78e0:	mov	r6, r0
    78e4:	bl	29f8 <newchunk.constprop.50>
    78e8:	mov	r1, r4
    78ec:	mov	r3, r0
    78f0:	stmib	r0, {r6, r7}
    78f4:	str	r0, [r3, #96]	; 0x60
    78f8:	str	r8, [r0, #20]
    78fc:	bl	6390 <sf_gen_and>
    7900:	mov	r1, #16
    7904:	mov	r0, #0
    7908:	bl	2ef8 <gen_load_llrel>
    790c:	mov	r9, r0
    7910:	bl	29f8 <newchunk.constprop.50>
    7914:	mov	r2, r5
    7918:	mov	r1, #6
    791c:	mov	r6, r0
    7920:	ldr	r3, [r0, #44]	; 0x2c
    7924:	clz	r3, r3
    7928:	lsr	r3, r3, #5
    792c:	str	r8, [r0, #20]
    7930:	str	r7, [r0, #8]
    7934:	str	r0, [r6, #96]	; 0x60
    7938:	str	r9, [r0, #4]
    793c:	str	r3, [r0, #44]	; 0x2c
    7940:	mov	r0, #10
    7944:	bl	6be0 <gen_bcmp.constprop.29>
    7948:	mov	r5, r0
    794c:	mov	r1, r0
    7950:	mov	r0, r6
    7954:	bl	6390 <sf_gen_and>
    7958:	mov	r1, r4
    795c:	mov	r0, r5
    7960:	bl	6fd4 <sf_gen_or>
    7964:	mov	r1, #16
    7968:	mov	r0, #0
    796c:	bl	2ef8 <gen_load_llrel>
    7970:	mov	r5, r0
    7974:	bl	29f8 <newchunk.constprop.50>
    7978:	mov	r1, #4
    797c:	mov	r3, r0
    7980:	ldr	r2, [r0, #44]	; 0x2c
    7984:	clz	r2, r2
    7988:	lsr	r2, r2, #5
    798c:	str	r7, [r0, #8]
    7990:	str	r0, [r3, #96]	; 0x60
    7994:	str	r5, [r0, #4]
    7998:	str	r1, [r0, #20]
    799c:	str	r2, [r0, #44]	; 0x2c
    79a0:	mov	r1, r4
    79a4:	bl	6390 <sf_gen_and>
    79a8:	mov	r0, r4
    79ac:	add	sp, sp, #12
    79b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    79b4:	mov	r1, #16
    79b8:	mov	r0, #1
    79bc:	bl	2ef8 <gen_load_llrel>
    79c0:	mov	r7, #69	; 0x45
    79c4:	mov	r8, #1
    79c8:	mov	r4, r0
    79cc:	bl	29f8 <newchunk.constprop.50>
    79d0:	mov	r2, r5
    79d4:	mov	r1, #6
    79d8:	mov	r6, r0
    79dc:	str	r4, [r0, #4]
    79e0:	str	r0, [r6, #96]	; 0x60
    79e4:	str	r8, [r0, #20]
    79e8:	str	r7, [r0, #8]
    79ec:	mov	r0, #16
    79f0:	bl	6be0 <gen_bcmp.constprop.29>
    79f4:	mov	r4, r0
    79f8:	mov	r1, r0
    79fc:	mov	r0, r6
    7a00:	bl	6390 <sf_gen_and>
    7a04:	mov	r1, #16
    7a08:	mov	r0, r8
    7a0c:	bl	2ef8 <gen_load_llrel>
    7a10:	mov	r9, r0
    7a14:	bl	29f8 <newchunk.constprop.50>
    7a18:	mov	r2, r5
    7a1c:	mov	r1, #6
    7a20:	mov	r6, r0
    7a24:	ldr	r3, [r0, #44]	; 0x2c
    7a28:	clz	r3, r3
    7a2c:	lsr	r3, r3, #5
    7a30:	str	r8, [r0, #20]
    7a34:	str	r7, [r0, #8]
    7a38:	str	r0, [r6, #96]	; 0x60
    7a3c:	str	r3, [r0, #44]	; 0x2c
    7a40:	str	r9, [r0, #4]
    7a44:	mov	r0, #4
    7a48:	bl	6be0 <gen_bcmp.constprop.29>
    7a4c:	mov	r8, r0
    7a50:	mov	r1, r0
    7a54:	mov	r0, r6
    7a58:	bl	6390 <sf_gen_and>
    7a5c:	mov	r0, r8
    7a60:	mov	r1, r4
    7a64:	bl	6fd4 <sf_gen_or>
    7a68:	mov	r1, #16
    7a6c:	mov	r0, #0
    7a70:	bl	2ef8 <gen_load_llrel>
    7a74:	mov	r8, #8
    7a78:	mov	r6, r0
    7a7c:	bl	29f8 <newchunk.constprop.50>
    7a80:	mov	r1, r4
    7a84:	mov	r3, r0
    7a88:	stmib	r0, {r6, r7}
    7a8c:	str	r0, [r3, #96]	; 0x60
    7a90:	str	r8, [r0, #20]
    7a94:	bl	6390 <sf_gen_and>
    7a98:	mov	r1, #16
    7a9c:	mov	r0, #0
    7aa0:	bl	2ef8 <gen_load_llrel>
    7aa4:	mov	r9, r0
    7aa8:	bl	29f8 <newchunk.constprop.50>
    7aac:	mov	r2, r5
    7ab0:	mov	r1, #6
    7ab4:	mov	r6, r0
    7ab8:	ldr	r3, [r0, #44]	; 0x2c
    7abc:	clz	r3, r3
    7ac0:	lsr	r3, r3, #5
    7ac4:	str	r8, [r0, #20]
    7ac8:	str	r7, [r0, #8]
    7acc:	str	r0, [r6, #96]	; 0x60
    7ad0:	str	r9, [r0, #4]
    7ad4:	str	r3, [r0, #44]	; 0x2c
    7ad8:	mov	r0, #4
    7adc:	b	7944 <gen_wlanhostop+0x278>
    7ae0:	mov	r1, #1
    7ae4:	bl	76cc <gen_wlanhostop>
    7ae8:	mov	r1, #2
    7aec:	mov	r6, r0
    7af0:	mov	r0, r5
    7af4:	bl	76cc <gen_wlanhostop>
    7af8:	mov	r4, r0
    7afc:	mov	r1, r0
    7b00:	mov	r0, r6
    7b04:	bl	6390 <sf_gen_and>
    7b08:	mov	r0, r4
    7b0c:	add	sp, sp, #12
    7b10:	pop	{r4, r5, r6, r7, r8, r9, pc}
    7b14:	mov	r2, r0
    7b18:	mov	r1, #6
    7b1c:	mov	r0, #4
    7b20:	add	sp, sp, #12
    7b24:	pop	{r4, r5, r6, r7, r8, r9, lr}
    7b28:	b	6be0 <gen_bcmp.constprop.29>
    7b2c:	mov	r4, #0
    7b30:	mov	r3, #16
    7b34:	mov	r2, #4
    7b38:	mov	r1, r3
    7b3c:	str	r2, [sp, #4]
    7b40:	str	r4, [sp]
    7b44:	mov	r2, #12
    7b48:	mov	r0, r4
    7b4c:	bl	3bf0 <gen_ncmp.constprop.35>
    7b50:	mov	r3, #16
    7b54:	mov	r1, #192	; 0xc0
    7b58:	ldr	r2, [r0, #44]	; 0x2c
    7b5c:	clz	r2, r2
    7b60:	lsr	r2, r2, #5
    7b64:	str	r2, [r0, #44]	; 0x2c
    7b68:	mov	r7, r0
    7b6c:	str	r1, [sp, #4]
    7b70:	mov	r2, #240	; 0xf0
    7b74:	mov	r1, r3
    7b78:	mov	r0, r4
    7b7c:	str	r4, [sp]
    7b80:	bl	3bf0 <gen_ncmp.constprop.35>
    7b84:	mov	r3, #16
    7b88:	mov	r1, #208	; 0xd0
    7b8c:	ldr	r2, [r0, #44]	; 0x2c
    7b90:	clz	r2, r2
    7b94:	lsr	r2, r2, #5
    7b98:	str	r2, [r0, #44]	; 0x2c
    7b9c:	mov	r8, r0
    7ba0:	mov	r2, #240	; 0xf0
    7ba4:	str	r1, [sp, #4]
    7ba8:	mov	r0, r4
    7bac:	mov	r1, r3
    7bb0:	str	r4, [sp]
    7bb4:	bl	3bf0 <gen_ncmp.constprop.35>
    7bb8:	mov	r6, r0
    7bbc:	ldr	r3, [r0, #44]	; 0x2c
    7bc0:	clz	r3, r3
    7bc4:	lsr	r3, r3, #5
    7bc8:	mov	r1, r0
    7bcc:	str	r3, [r6, #44]	; 0x2c
    7bd0:	mov	r0, r8
    7bd4:	bl	6390 <sf_gen_and>
    7bd8:	mov	r1, r6
    7bdc:	mov	r0, r7
    7be0:	bl	6fd4 <sf_gen_or>
    7be4:	mov	r2, r5
    7be8:	mov	r1, #6
    7bec:	mov	r0, #10
    7bf0:	b	7734 <gen_wlanhostop+0x68>
    7bf4:	mov	r2, #4
    7bf8:	mov	r0, #0
    7bfc:	mov	r3, #16
    7c00:	mov	r1, r3
    7c04:	stm	sp, {r0, r2}
    7c08:	mov	r2, #12
    7c0c:	bl	3bf0 <gen_ncmp.constprop.35>
    7c10:	mov	r2, r5
    7c14:	mov	r1, #6
    7c18:	ldr	r3, [r0, #44]	; 0x2c
    7c1c:	clz	r3, r3
    7c20:	lsr	r3, r3, #5
    7c24:	mov	r6, r0
    7c28:	str	r3, [r0, #44]	; 0x2c
    7c2c:	mov	r0, #16
    7c30:	b	7734 <gen_wlanhostop+0x68>
    7c34:	bl	f18 <abort@plt>

00007c38 <gen_linktype>:
    7c38:	ldr	r3, [pc, #3700]	; 8ab4 <gen_linktype+0xe7c>
    7c3c:	push	{r4, r5, r6, r7, lr}
    7c40:	add	r3, pc, r3
    7c44:	sub	sp, sp, #12
    7c48:	ldr	r3, [r3, #4]
    7c4c:	mov	r5, r0
    7c50:	cmp	r3, #0
    7c54:	beq	7d5c <gen_linktype+0x124>
    7c58:	cmp	r0, #87	; 0x57
    7c5c:	beq	7c78 <gen_linktype+0x40>
    7c60:	ble	8254 <gen_linktype+0x61c>
    7c64:	cmp	r0, #2048	; 0x800
    7c68:	beq	8194 <gen_linktype+0x55c>
    7c6c:	ldr	r3, [pc, #3652]	; 8ab8 <gen_linktype+0xe80>
    7c70:	cmp	r0, r3
    7c74:	bne	825c <gen_linktype+0x624>
    7c78:	ldr	r3, [pc, #3644]	; 8abc <gen_linktype+0xe84>
    7c7c:	mov	r1, #16
    7c80:	add	r3, pc, r3
    7c84:	ldr	r4, [r3, #868]	; 0x364
    7c88:	sub	r0, r4, #2
    7c8c:	bl	431c <gen_load_macplrel>
    7c90:	mov	r6, r0
    7c94:	bl	2810 <newchunk.constprop.49>
    7c98:	mov	r2, #84	; 0x54
    7c9c:	mov	r3, #1
    7ca0:	str	r2, [r0]
    7ca4:	str	r3, [r0, #12]
    7ca8:	mov	r2, r6
    7cac:	b	7cb4 <gen_linktype+0x7c>
    7cb0:	mov	r2, r3
    7cb4:	ldr	r3, [r2, #16]
    7cb8:	cmp	r3, #0
    7cbc:	bne	7cb0 <gen_linktype+0x78>
    7cc0:	str	r0, [r2, #16]
    7cc4:	bl	29f8 <newchunk.constprop.50>
    7cc8:	mov	r2, #21
    7ccc:	mov	r3, #1
    7cd0:	mov	r1, #16
    7cd4:	mov	r5, r0
    7cd8:	str	r0, [r5, #96]	; 0x60
    7cdc:	str	r6, [r0, #4]
    7ce0:	str	r2, [r5, #8]
    7ce4:	str	r3, [r5, #20]
    7ce8:	mov	r0, r4
    7cec:	bl	431c <gen_load_macplrel>
    7cf0:	mov	r6, r0
    7cf4:	bl	2810 <newchunk.constprop.49>
    7cf8:	mov	r2, #84	; 0x54
    7cfc:	mov	r3, #240	; 0xf0
    7d00:	str	r2, [r0]
    7d04:	str	r3, [r0, #12]
    7d08:	mov	r2, r6
    7d0c:	b	7d14 <gen_linktype+0xdc>
    7d10:	mov	r2, r3
    7d14:	ldr	r3, [r2, #16]
    7d18:	cmp	r3, #0
    7d1c:	bne	7d10 <gen_linktype+0xd8>
    7d20:	str	r0, [r2, #16]
    7d24:	bl	29f8 <newchunk.constprop.50>
    7d28:	mov	r2, #21
    7d2c:	mov	r3, #96	; 0x60
    7d30:	mov	r4, r0
    7d34:	str	r4, [r4, #96]	; 0x60
    7d38:	str	r6, [r4, #4]
    7d3c:	mov	r0, r5
    7d40:	str	r2, [r4, #8]
    7d44:	str	r3, [r4, #20]
    7d48:	mov	r1, r4
    7d4c:	bl	6390 <sf_gen_and>
    7d50:	mov	r0, r4
    7d54:	add	sp, sp, #12
    7d58:	pop	{r4, r5, r6, r7, pc}
    7d5c:	ldr	r3, [pc, #3420]	; 8ac0 <gen_linktype+0xe88>
    7d60:	add	r3, pc, r3
    7d64:	ldr	r2, [r3, #928]	; 0x3a0
    7d68:	cmp	r2, #0
    7d6c:	bne	8118 <gen_linktype+0x4e0>
    7d70:	ldr	r3, [r3, #876]	; 0x36c
    7d74:	cmp	r3, #229	; 0xe5
    7d78:	addls	pc, pc, r3, lsl #2
    7d7c:	b	8764 <gen_linktype+0xb2c>
    7d80:	b	834c <gen_linktype+0x714>
    7d84:	b	8388 <gen_linktype+0x750>
    7d88:	b	8764 <gen_linktype+0xb2c>
    7d8c:	b	8764 <gen_linktype+0xb2c>
    7d90:	b	8764 <gen_linktype+0xb2c>
    7d94:	b	8764 <gen_linktype+0xb2c>
    7d98:	b	8268 <gen_linktype+0x630>
    7d9c:	b	86bc <gen_linktype+0xa84>
    7da0:	b	84d4 <gen_linktype+0x89c>
    7da4:	b	8710 <gen_linktype+0xad8>
    7da8:	b	8268 <gen_linktype+0x630>
    7dac:	b	8268 <gen_linktype+0x630>
    7db0:	b	84d4 <gen_linktype+0x89c>
    7db4:	b	8764 <gen_linktype+0xb2c>
    7db8:	b	8764 <gen_linktype+0xb2c>
    7dbc:	b	84d4 <gen_linktype+0x89c>
    7dc0:	b	850c <gen_linktype+0x8d4>
    7dc4:	b	8764 <gen_linktype+0xb2c>
    7dc8:	b	8764 <gen_linktype+0xb2c>
    7dcc:	b	8268 <gen_linktype+0x630>
    7dd0:	b	8764 <gen_linktype+0xb2c>
    7dd4:	b	8764 <gen_linktype+0xb2c>
    7dd8:	b	8764 <gen_linktype+0xb2c>
    7ddc:	b	8764 <gen_linktype+0xb2c>
    7de0:	b	8764 <gen_linktype+0xb2c>
    7de4:	b	8764 <gen_linktype+0xb2c>
    7de8:	b	8764 <gen_linktype+0xb2c>
    7dec:	b	8764 <gen_linktype+0xb2c>
    7df0:	b	8764 <gen_linktype+0xb2c>
    7df4:	b	8764 <gen_linktype+0xb2c>
    7df8:	b	8764 <gen_linktype+0xb2c>
    7dfc:	b	8764 <gen_linktype+0xb2c>
    7e00:	b	8764 <gen_linktype+0xb2c>
    7e04:	b	8764 <gen_linktype+0xb2c>
    7e08:	b	8764 <gen_linktype+0xb2c>
    7e0c:	b	8764 <gen_linktype+0xb2c>
    7e10:	b	8764 <gen_linktype+0xb2c>
    7e14:	b	8764 <gen_linktype+0xb2c>
    7e18:	b	8764 <gen_linktype+0xb2c>
    7e1c:	b	8764 <gen_linktype+0xb2c>
    7e20:	b	8764 <gen_linktype+0xb2c>
    7e24:	b	8764 <gen_linktype+0xb2c>
    7e28:	b	8764 <gen_linktype+0xb2c>
    7e2c:	b	8764 <gen_linktype+0xb2c>
    7e30:	b	8764 <gen_linktype+0xb2c>
    7e34:	b	8764 <gen_linktype+0xb2c>
    7e38:	b	8764 <gen_linktype+0xb2c>
    7e3c:	b	8764 <gen_linktype+0xb2c>
    7e40:	b	8764 <gen_linktype+0xb2c>
    7e44:	b	8764 <gen_linktype+0xb2c>
    7e48:	b	8710 <gen_linktype+0xad8>
    7e4c:	b	8710 <gen_linktype+0xad8>
    7e50:	b	8764 <gen_linktype+0xb2c>
    7e54:	b	8764 <gen_linktype+0xb2c>
    7e58:	b	8764 <gen_linktype+0xb2c>
    7e5c:	b	8764 <gen_linktype+0xb2c>
    7e60:	b	8764 <gen_linktype+0xb2c>
    7e64:	b	8764 <gen_linktype+0xb2c>
    7e68:	b	8764 <gen_linktype+0xb2c>
    7e6c:	b	8764 <gen_linktype+0xb2c>
    7e70:	b	8764 <gen_linktype+0xb2c>
    7e74:	b	8764 <gen_linktype+0xb2c>
    7e78:	b	8764 <gen_linktype+0xb2c>
    7e7c:	b	8764 <gen_linktype+0xb2c>
    7e80:	b	8764 <gen_linktype+0xb2c>
    7e84:	b	8764 <gen_linktype+0xb2c>
    7e88:	b	8764 <gen_linktype+0xb2c>
    7e8c:	b	8764 <gen_linktype+0xb2c>
    7e90:	b	8764 <gen_linktype+0xb2c>
    7e94:	b	8764 <gen_linktype+0xb2c>
    7e98:	b	8764 <gen_linktype+0xb2c>
    7e9c:	b	8764 <gen_linktype+0xb2c>
    7ea0:	b	8764 <gen_linktype+0xb2c>
    7ea4:	b	8764 <gen_linktype+0xb2c>
    7ea8:	b	8764 <gen_linktype+0xb2c>
    7eac:	b	8764 <gen_linktype+0xb2c>
    7eb0:	b	8764 <gen_linktype+0xb2c>
    7eb4:	b	8764 <gen_linktype+0xb2c>
    7eb8:	b	8764 <gen_linktype+0xb2c>
    7ebc:	b	8764 <gen_linktype+0xb2c>
    7ec0:	b	8764 <gen_linktype+0xb2c>
    7ec4:	b	8764 <gen_linktype+0xb2c>
    7ec8:	b	8764 <gen_linktype+0xb2c>
    7ecc:	b	8764 <gen_linktype+0xb2c>
    7ed0:	b	8764 <gen_linktype+0xb2c>
    7ed4:	b	8764 <gen_linktype+0xb2c>
    7ed8:	b	8764 <gen_linktype+0xb2c>
    7edc:	b	8764 <gen_linktype+0xb2c>
    7ee0:	b	8764 <gen_linktype+0xb2c>
    7ee4:	b	8764 <gen_linktype+0xb2c>
    7ee8:	b	8764 <gen_linktype+0xb2c>
    7eec:	b	8764 <gen_linktype+0xb2c>
    7ef0:	b	8764 <gen_linktype+0xb2c>
    7ef4:	b	8764 <gen_linktype+0xb2c>
    7ef8:	b	8764 <gen_linktype+0xb2c>
    7efc:	b	8764 <gen_linktype+0xb2c>
    7f00:	b	8764 <gen_linktype+0xb2c>
    7f04:	b	8764 <gen_linktype+0xb2c>
    7f08:	b	8764 <gen_linktype+0xb2c>
    7f0c:	b	8764 <gen_linktype+0xb2c>
    7f10:	b	8764 <gen_linktype+0xb2c>
    7f14:	b	8764 <gen_linktype+0xb2c>
    7f18:	b	8764 <gen_linktype+0xb2c>
    7f1c:	b	8764 <gen_linktype+0xb2c>
    7f20:	b	861c <gen_linktype+0x9e4>
    7f24:	b	858c <gen_linktype+0x954>
    7f28:	b	8764 <gen_linktype+0xb2c>
    7f2c:	b	8648 <gen_linktype+0xa10>
    7f30:	b	834c <gen_linktype+0x714>
    7f34:	b	834c <gen_linktype+0x714>
    7f38:	b	8764 <gen_linktype+0xb2c>
    7f3c:	b	8764 <gen_linktype+0xb2c>
    7f40:	b	8764 <gen_linktype+0xb2c>
    7f44:	b	8394 <gen_linktype+0x75c>
    7f48:	b	8438 <gen_linktype+0x800>
    7f4c:	b	8764 <gen_linktype+0xb2c>
    7f50:	b	8764 <gen_linktype+0xb2c>
    7f54:	b	8764 <gen_linktype+0xb2c>
    7f58:	b	8764 <gen_linktype+0xb2c>
    7f5c:	b	858c <gen_linktype+0x954>
    7f60:	b	8764 <gen_linktype+0xb2c>
    7f64:	b	8764 <gen_linktype+0xb2c>
    7f68:	b	8268 <gen_linktype+0x630>
    7f6c:	b	8454 <gen_linktype+0x81c>
    7f70:	b	8764 <gen_linktype+0xb2c>
    7f74:	b	8764 <gen_linktype+0xb2c>
    7f78:	b	8764 <gen_linktype+0xb2c>
    7f7c:	b	858c <gen_linktype+0x954>
    7f80:	b	8764 <gen_linktype+0xb2c>
    7f84:	b	86bc <gen_linktype+0xa84>
    7f88:	b	8274 <gen_linktype+0x63c>
    7f8c:	b	8274 <gen_linktype+0x63c>
    7f90:	b	8274 <gen_linktype+0x63c>
    7f94:	b	8274 <gen_linktype+0x63c>
    7f98:	b	8274 <gen_linktype+0x63c>
    7f9c:	b	8274 <gen_linktype+0x63c>
    7fa0:	b	8274 <gen_linktype+0x63c>
    7fa4:	b	8274 <gen_linktype+0x63c>
    7fa8:	b	8764 <gen_linktype+0xb2c>
    7fac:	b	8298 <gen_linktype+0x660>
    7fb0:	b	8298 <gen_linktype+0x660>
    7fb4:	b	8764 <gen_linktype+0xb2c>
    7fb8:	b	8764 <gen_linktype+0xb2c>
    7fbc:	b	82a4 <gen_linktype+0x66c>
    7fc0:	b	82b0 <gen_linktype+0x678>
    7fc4:	b	8764 <gen_linktype+0xb2c>
    7fc8:	b	8764 <gen_linktype+0xb2c>
    7fcc:	b	8764 <gen_linktype+0xb2c>
    7fd0:	b	8764 <gen_linktype+0xb2c>
    7fd4:	b	8764 <gen_linktype+0xb2c>
    7fd8:	b	8764 <gen_linktype+0xb2c>
    7fdc:	b	8764 <gen_linktype+0xb2c>
    7fe0:	b	8764 <gen_linktype+0xb2c>
    7fe4:	b	8764 <gen_linktype+0xb2c>
    7fe8:	b	8764 <gen_linktype+0xb2c>
    7fec:	b	8764 <gen_linktype+0xb2c>
    7ff0:	b	8764 <gen_linktype+0xb2c>
    7ff4:	b	8764 <gen_linktype+0xb2c>
    7ff8:	b	8764 <gen_linktype+0xb2c>
    7ffc:	b	8764 <gen_linktype+0xb2c>
    8000:	b	8764 <gen_linktype+0xb2c>
    8004:	b	8764 <gen_linktype+0xb2c>
    8008:	b	8764 <gen_linktype+0xb2c>
    800c:	b	858c <gen_linktype+0x954>
    8010:	b	8274 <gen_linktype+0x63c>
    8014:	b	8764 <gen_linktype+0xb2c>
    8018:	b	8710 <gen_linktype+0xad8>
    801c:	b	8274 <gen_linktype+0x63c>
    8020:	b	8274 <gen_linktype+0x63c>
    8024:	b	8764 <gen_linktype+0xb2c>
    8028:	b	8764 <gen_linktype+0xb2c>
    802c:	b	8764 <gen_linktype+0xb2c>
    8030:	b	8764 <gen_linktype+0xb2c>
    8034:	b	8764 <gen_linktype+0xb2c>
    8038:	b	8764 <gen_linktype+0xb2c>
    803c:	b	8764 <gen_linktype+0xb2c>
    8040:	b	8764 <gen_linktype+0xb2c>
    8044:	b	82bc <gen_linktype+0x684>
    8048:	b	8274 <gen_linktype+0x63c>
    804c:	b	8274 <gen_linktype+0x63c>
    8050:	b	8274 <gen_linktype+0x63c>
    8054:	b	8274 <gen_linktype+0x63c>
    8058:	b	82c8 <gen_linktype+0x690>
    805c:	b	8274 <gen_linktype+0x63c>
    8060:	b	8764 <gen_linktype+0xb2c>
    8064:	b	8764 <gen_linktype+0xb2c>
    8068:	b	82d4 <gen_linktype+0x69c>
    806c:	b	82e0 <gen_linktype+0x6a8>
    8070:	b	8764 <gen_linktype+0xb2c>
    8074:	b	82d4 <gen_linktype+0x69c>
    8078:	b	82ec <gen_linktype+0x6b4>
    807c:	b	82f8 <gen_linktype+0x6c0>
    8080:	b	858c <gen_linktype+0x954>
    8084:	b	8304 <gen_linktype+0x6cc>
    8088:	b	8274 <gen_linktype+0x63c>
    808c:	b	82f8 <gen_linktype+0x6c0>
    8090:	b	8310 <gen_linktype+0x6d8>
    8094:	b	831c <gen_linktype+0x6e4>
    8098:	b	8328 <gen_linktype+0x6f0>
    809c:	b	8334 <gen_linktype+0x6fc>
    80a0:	b	8274 <gen_linktype+0x63c>
    80a4:	b	82e0 <gen_linktype+0x6a8>
    80a8:	b	8340 <gen_linktype+0x708>
    80ac:	b	8764 <gen_linktype+0xb2c>
    80b0:	b	8764 <gen_linktype+0xb2c>
    80b4:	b	8764 <gen_linktype+0xb2c>
    80b8:	b	8764 <gen_linktype+0xb2c>
    80bc:	b	8764 <gen_linktype+0xb2c>
    80c0:	b	8764 <gen_linktype+0xb2c>
    80c4:	b	8764 <gen_linktype+0xb2c>
    80c8:	b	8764 <gen_linktype+0xb2c>
    80cc:	b	8764 <gen_linktype+0xb2c>
    80d0:	b	8764 <gen_linktype+0xb2c>
    80d4:	b	8764 <gen_linktype+0xb2c>
    80d8:	b	8764 <gen_linktype+0xb2c>
    80dc:	b	82f8 <gen_linktype+0x6c0>
    80e0:	b	8764 <gen_linktype+0xb2c>
    80e4:	b	8764 <gen_linktype+0xb2c>
    80e8:	b	8764 <gen_linktype+0xb2c>
    80ec:	b	8764 <gen_linktype+0xb2c>
    80f0:	b	82d4 <gen_linktype+0x69c>
    80f4:	b	8764 <gen_linktype+0xb2c>
    80f8:	b	8764 <gen_linktype+0xb2c>
    80fc:	b	8764 <gen_linktype+0xb2c>
    8100:	b	8764 <gen_linktype+0xb2c>
    8104:	b	8764 <gen_linktype+0xb2c>
    8108:	b	84a8 <gen_linktype+0x870>
    810c:	b	82ec <gen_linktype+0x6b4>
    8110:	b	863c <gen_linktype+0xa04>
    8114:	b	8578 <gen_linktype+0x940>
    8118:	cmp	r0, #1536	; 0x600
    811c:	beq	87b4 <gen_linktype+0xb7c>
    8120:	ble	8784 <gen_linktype+0xb4c>
    8124:	ldr	r3, [pc, #2456]	; 8ac4 <gen_linktype+0xe8c>
    8128:	cmp	r0, r3
    812c:	moveq	r5, #39	; 0x27
    8130:	beq	8154 <gen_linktype+0x51c>
    8134:	ble	87a8 <gen_linktype+0xb70>
    8138:	ldr	r3, [pc, #2440]	; 8ac8 <gen_linktype+0xe90>
    813c:	cmp	r5, r3
    8140:	moveq	r5, #41	; 0x29
    8144:	beq	8154 <gen_linktype+0x51c>
    8148:	ldr	r3, [pc, #2408]	; 8ab8 <gen_linktype+0xe80>
    814c:	cmp	r5, r3
    8150:	moveq	r5, #87	; 0x57
    8154:	ldr	r3, [pc, #2416]	; 8acc <gen_linktype+0xe94>
    8158:	mov	r1, #8
    815c:	add	r3, pc, r3
    8160:	ldr	r0, [r3, #952]	; 0x3b8
    8164:	bl	431c <gen_load_macplrel>
    8168:	mov	r6, r0
    816c:	bl	29f8 <newchunk.constprop.50>
    8170:	mov	r3, #21
    8174:	mov	r4, r0
    8178:	str	r6, [r0, #4]
    817c:	str	r0, [r4, #96]	; 0x60
    8180:	str	r5, [r0, #20]
    8184:	str	r3, [r0, #8]
    8188:	mov	r0, r4
    818c:	add	sp, sp, #12
    8190:	pop	{r4, r5, r6, r7, pc}
    8194:	ldr	r3, [pc, #2356]	; 8ad0 <gen_linktype+0xe98>
    8198:	mov	r1, #16
    819c:	add	r3, pc, r3
    81a0:	ldr	r4, [r3, #868]	; 0x364
    81a4:	sub	r0, r4, #2
    81a8:	bl	431c <gen_load_macplrel>
    81ac:	mov	r6, r0
    81b0:	bl	2810 <newchunk.constprop.49>
    81b4:	mov	r2, #84	; 0x54
    81b8:	mov	r3, #1
    81bc:	str	r2, [r0]
    81c0:	str	r3, [r0, #12]
    81c4:	mov	r2, r6
    81c8:	b	81d0 <gen_linktype+0x598>
    81cc:	mov	r2, r3
    81d0:	ldr	r3, [r2, #16]
    81d4:	cmp	r3, #0
    81d8:	bne	81cc <gen_linktype+0x594>
    81dc:	str	r0, [r2, #16]
    81e0:	bl	29f8 <newchunk.constprop.50>
    81e4:	mov	r2, #21
    81e8:	mov	r3, #1
    81ec:	mov	r1, #16
    81f0:	mov	r5, r0
    81f4:	str	r0, [r5, #96]	; 0x60
    81f8:	str	r6, [r0, #4]
    81fc:	str	r2, [r5, #8]
    8200:	str	r3, [r5, #20]
    8204:	mov	r0, r4
    8208:	bl	431c <gen_load_macplrel>
    820c:	mov	r6, r0
    8210:	bl	2810 <newchunk.constprop.49>
    8214:	mov	r2, #84	; 0x54
    8218:	mov	r3, #240	; 0xf0
    821c:	str	r2, [r0]
    8220:	str	r3, [r0, #12]
    8224:	mov	r2, r6
    8228:	b	8230 <gen_linktype+0x5f8>
    822c:	mov	r2, r3
    8230:	ldr	r3, [r2, #16]
    8234:	cmp	r3, #0
    8238:	bne	822c <gen_linktype+0x5f4>
    823c:	str	r0, [r2, #16]
    8240:	bl	29f8 <newchunk.constprop.50>
    8244:	mov	r2, #21
    8248:	mov	r3, #64	; 0x40
    824c:	mov	r4, r0
    8250:	b	7d34 <gen_linktype+0xfc>
    8254:	cmp	r0, #33	; 0x21
    8258:	beq	8194 <gen_linktype+0x55c>
    825c:	ldr	r0, [pc, #2160]	; 8ad4 <gen_linktype+0xe9c>
    8260:	add	r0, pc, r0
    8264:	bl	2370 <sf_bpf_error>
    8268:	add	sp, sp, #12
    826c:	pop	{r4, r5, r6, r7, lr}
    8270:	b	6b18 <gen_llc_linktype>
    8274:	ldr	r3, [pc, #2140]	; 8ad8 <gen_linktype+0xea0>
    8278:	mov	r1, #0
    827c:	mov	r0, r1
    8280:	stm	sp, {r1, r3}
    8284:	mvn	r2, #255	; 0xff
    8288:	mov	r3, #16
    828c:	bl	3bf0 <gen_ncmp.constprop.35>
    8290:	mov	r4, r0
    8294:	b	7d50 <gen_linktype+0x118>
    8298:	ldr	r0, [pc, #2108]	; 8adc <gen_linktype+0xea4>
    829c:	add	r0, pc, r0
    82a0:	bl	2370 <sf_bpf_error>
    82a4:	ldr	r0, [pc, #2100]	; 8ae0 <gen_linktype+0xea8>
    82a8:	add	r0, pc, r0
    82ac:	bl	2370 <sf_bpf_error>
    82b0:	ldr	r0, [pc, #2092]	; 8ae4 <gen_linktype+0xeac>
    82b4:	add	r0, pc, r0
    82b8:	bl	2370 <sf_bpf_error>
    82bc:	ldr	r0, [pc, #2084]	; 8ae8 <gen_linktype+0xeb0>
    82c0:	add	r0, pc, r0
    82c4:	bl	2370 <sf_bpf_error>
    82c8:	ldr	r0, [pc, #2076]	; 8aec <gen_linktype+0xeb4>
    82cc:	add	r0, pc, r0
    82d0:	bl	2370 <sf_bpf_error>
    82d4:	ldr	r0, [pc, #2068]	; 8af0 <gen_linktype+0xeb8>
    82d8:	add	r0, pc, r0
    82dc:	bl	2370 <sf_bpf_error>
    82e0:	ldr	r0, [pc, #2060]	; 8af4 <gen_linktype+0xebc>
    82e4:	add	r0, pc, r0
    82e8:	bl	2370 <sf_bpf_error>
    82ec:	ldr	r0, [pc, #2052]	; 8af8 <gen_linktype+0xec0>
    82f0:	add	r0, pc, r0
    82f4:	bl	2370 <sf_bpf_error>
    82f8:	ldr	r0, [pc, #2044]	; 8afc <gen_linktype+0xec4>
    82fc:	add	r0, pc, r0
    8300:	bl	2370 <sf_bpf_error>
    8304:	ldr	r0, [pc, #2036]	; 8b00 <gen_linktype+0xec8>
    8308:	add	r0, pc, r0
    830c:	bl	2370 <sf_bpf_error>
    8310:	ldr	r0, [pc, #2028]	; 8b04 <gen_linktype+0xecc>
    8314:	add	r0, pc, r0
    8318:	bl	2370 <sf_bpf_error>
    831c:	ldr	r0, [pc, #2020]	; 8b08 <gen_linktype+0xed0>
    8320:	add	r0, pc, r0
    8324:	bl	2370 <sf_bpf_error>
    8328:	ldr	r0, [pc, #2012]	; 8b0c <gen_linktype+0xed4>
    832c:	add	r0, pc, r0
    8330:	bl	2370 <sf_bpf_error>
    8334:	ldr	r0, [pc, #2004]	; 8b10 <gen_linktype+0xed8>
    8338:	add	r0, pc, r0
    833c:	bl	2370 <sf_bpf_error>
    8340:	ldr	r0, [pc, #1996]	; 8b14 <gen_linktype+0xedc>
    8344:	add	r0, pc, r0
    8348:	bl	2370 <sf_bpf_error>
    834c:	cmp	r0, #2048	; 0x800
    8350:	beq	88e0 <gen_linktype+0xca8>
    8354:	ldr	r2, [pc, #1884]	; 8ab8 <gen_linktype+0xe80>
    8358:	cmp	r0, r2
    835c:	bne	8584 <gen_linktype+0x94c>
    8360:	mov	r0, #167772160	; 0xa000000
    8364:	mov	r2, #10
    8368:	cmp	r3, #109	; 0x6d
    836c:	cmpne	r3, #0
    8370:	mov	r1, #0
    8374:	moveq	r2, r0
    8378:	mov	r0, r1
    837c:	add	sp, sp, #12
    8380:	pop	{r4, r5, r6, r7, lr}
    8384:	b	3e70 <gen_cmp.constprop.42>
    8388:	add	sp, sp, #12
    838c:	pop	{r4, r5, r6, r7, lr}
    8390:	b	73b8 <gen_ether_linktype>
    8394:	cmp	r0, #240	; 0xf0
    8398:	beq	898c <gen_linktype+0xd54>
    839c:	bgt	8840 <gen_linktype+0xc08>
    83a0:	cmp	r0, #6
    83a4:	beq	898c <gen_linktype+0xd54>
    83a8:	cmp	r0, #224	; 0xe0
    83ac:	bne	8860 <gen_linktype+0xc28>
    83b0:	mov	r2, r0
    83b4:	mov	r1, #16
    83b8:	mov	r0, #0
    83bc:	bl	47e0 <gen_cmp.constprop.38>
    83c0:	ldr	r1, [pc, #1872]	; 8b18 <gen_linktype+0xee0>
    83c4:	mov	r5, r0
    83c8:	mov	r0, #0
    83cc:	bl	6434 <gen_snap>
    83d0:	mov	r4, r0
    83d4:	mov	r1, r0
    83d8:	mov	r0, r5
    83dc:	bl	6fd4 <sf_gen_or>
    83e0:	ldr	r3, [pc, #1844]	; 8b1c <gen_linktype+0xee4>
    83e4:	mov	r2, #4
    83e8:	add	r3, pc, r3
    83ec:	mov	r1, #8
    83f0:	ldr	r5, [r3, #952]	; 0x3b8
    83f4:	mov	r0, r5
    83f8:	bl	3e70 <gen_cmp.constprop.42>
    83fc:	mov	r1, r4
    8400:	bl	6390 <sf_gen_and>
    8404:	mov	r2, #1
    8408:	mov	r0, r5
    840c:	mov	r1, #8
    8410:	bl	3e70 <gen_cmp.constprop.42>
    8414:	mov	r1, r4
    8418:	bl	6fd4 <sf_gen_or>
    841c:	mov	r0, r5
    8420:	ldr	r2, [pc, #1776]	; 8b18 <gen_linktype+0xee0>
    8424:	mov	r1, #8
    8428:	bl	3e70 <gen_cmp.constprop.42>
    842c:	mov	r1, r4
    8430:	bl	6fd4 <sf_gen_or>
    8434:	b	7d50 <gen_linktype+0x118>
    8438:	ldr	r3, [pc, #1672]	; 8ac8 <gen_linktype+0xe90>
    843c:	cmp	r0, r3
    8440:	bne	8584 <gen_linktype+0x94c>
    8444:	mov	r0, #1
    8448:	add	sp, sp, #12
    844c:	pop	{r4, r5, r6, r7, lr}
    8450:	b	3f34 <gen_uncond>
    8454:	ldr	r3, [pc, #1732]	; 8b20 <gen_linktype+0xee8>
    8458:	add	r3, pc, r3
    845c:	ldr	r2, [r3, #920]	; 0x398
    8460:	cmp	r2, #0
    8464:	beq	87bc <gen_linktype+0xb84>
    8468:	mov	r2, #65280	; 0xff00
    846c:	mov	r1, #8
    8470:	mov	r0, #4
    8474:	bl	3e70 <gen_cmp.constprop.42>
    8478:	mov	r6, r0
    847c:	mov	r0, r5
    8480:	ldr	r3, [r6, #44]	; 0x2c
    8484:	clz	r3, r3
    8488:	lsr	r3, r3, #5
    848c:	str	r3, [r6, #44]	; 0x2c
    8490:	bl	73b8 <gen_ether_linktype>
    8494:	mov	r4, r0
    8498:	mov	r1, r0
    849c:	mov	r0, r6
    84a0:	bl	6390 <sf_gen_and>
    84a4:	b	7d50 <gen_linktype+0x118>
    84a8:	cmp	r0, #2048	; 0x800
    84ac:	beq	88ec <gen_linktype+0xcb4>
    84b0:	ldr	r3, [pc, #1536]	; 8ab8 <gen_linktype+0xe80>
    84b4:	cmp	r0, r3
    84b8:	bne	8584 <gen_linktype+0x94c>
    84bc:	ldr	r3, [pc, #1632]	; 8b24 <gen_linktype+0xeec>
    84c0:	mov	r2, #26
    84c4:	add	r3, pc, r3
    84c8:	mov	r1, #16
    84cc:	ldr	r0, [r3, #952]	; 0x3b8
    84d0:	b	837c <gen_linktype+0x744>
    84d4:	cmp	r0, #2048	; 0x800
    84d8:	beq	88d8 <gen_linktype+0xca0>
    84dc:	ldr	r3, [pc, #1492]	; 8ab8 <gen_linktype+0xe80>
    84e0:	cmp	r0, r3
    84e4:	bne	8584 <gen_linktype+0x94c>
    84e8:	mov	r2, #96	; 0x60
    84ec:	mov	r0, #0
    84f0:	mov	r3, #16
    84f4:	stm	sp, {r0, r2}
    84f8:	mov	r1, r3
    84fc:	mov	r2, #240	; 0xf0
    8500:	bl	3bf0 <gen_ncmp.constprop.35>
    8504:	mov	r4, r0
    8508:	b	7d50 <gen_linktype+0x118>
    850c:	cmp	r0, #2048	; 0x800
    8510:	bne	87ec <gen_linktype+0xbb4>
    8514:	ldr	r3, [pc, #1548]	; 8b28 <gen_linktype+0xef0>
    8518:	mov	r2, #33	; 0x21
    851c:	add	r3, pc, r3
    8520:	mov	r1, #8
    8524:	ldr	r4, [r3, #952]	; 0x3b8
    8528:	mov	r0, r4
    852c:	bl	3e70 <gen_cmp.constprop.42>
    8530:	mov	r2, #45	; 0x2d
    8534:	mov	r1, #8
    8538:	mov	r6, r0
    853c:	mov	r0, r4
    8540:	bl	3e70 <gen_cmp.constprop.42>
    8544:	mov	r1, r0
    8548:	mov	r5, r0
    854c:	mov	r0, r6
    8550:	bl	6fd4 <sf_gen_or>
    8554:	mov	r0, r4
    8558:	mov	r2, #47	; 0x2f
    855c:	mov	r1, #8
    8560:	bl	3e70 <gen_cmp.constprop.42>
    8564:	mov	r4, r0
    8568:	mov	r1, r0
    856c:	mov	r0, r5
    8570:	bl	6fd4 <sf_gen_or>
    8574:	b	7d50 <gen_linktype+0x118>
    8578:	ldr	r3, [pc, #1336]	; 8ab8 <gen_linktype+0xe80>
    857c:	cmp	r0, r3
    8580:	beq	8444 <gen_linktype+0x80c>
    8584:	mov	r0, #0
    8588:	b	8448 <gen_linktype+0x810>
    858c:	mov	r1, #16
    8590:	mov	r0, #0
    8594:	bl	2ef8 <gen_load_llrel>
    8598:	mov	r4, #69	; 0x45
    859c:	mov	r7, r0
    85a0:	bl	29f8 <newchunk.constprop.50>
    85a4:	mov	r3, #8
    85a8:	mov	r1, #16
    85ac:	mov	r6, r0
    85b0:	str	r7, [r0, #4]
    85b4:	str	r0, [r6, #96]	; 0x60
    85b8:	str	r3, [r0, #20]
    85bc:	str	r4, [r0, #8]
    85c0:	mov	r0, #0
    85c4:	bl	2ef8 <gen_load_llrel>
    85c8:	mov	r7, r0
    85cc:	bl	29f8 <newchunk.constprop.50>
    85d0:	mov	r1, #4
    85d4:	mov	r3, r0
    85d8:	ldr	r2, [r0, #44]	; 0x2c
    85dc:	clz	r2, r2
    85e0:	lsr	r2, r2, #5
    85e4:	str	r4, [r0, #8]
    85e8:	str	r0, [r3, #96]	; 0x60
    85ec:	str	r1, [r0, #20]
    85f0:	str	r7, [r0, #4]
    85f4:	str	r2, [r0, #44]	; 0x2c
    85f8:	mov	r1, r6
    85fc:	bl	6390 <sf_gen_and>
    8600:	mov	r0, r5
    8604:	bl	6b18 <gen_llc_linktype>
    8608:	mov	r4, r0
    860c:	mov	r1, r0
    8610:	mov	r0, r6
    8614:	bl	6390 <sf_gen_and>
    8618:	b	7d50 <gen_linktype+0x118>
    861c:	ldr	r3, [pc, #1288]	; 8b2c <gen_linktype+0xef4>
    8620:	cmp	r5, #254	; 0xfe
    8624:	add	r3, pc, r3
    8628:	ldr	r2, [pc, #1280]	; 8b30 <gen_linktype+0xef8>
    862c:	mov	r1, #8
    8630:	ldr	r0, [r3, #952]	; 0x3b8
    8634:	movne	r2, r5
    8638:	b	837c <gen_linktype+0x744>
    863c:	cmp	r0, #2048	; 0x800
    8640:	bne	8584 <gen_linktype+0x94c>
    8644:	b	8444 <gen_linktype+0x80c>
    8648:	cmp	r0, #2048	; 0x800
    864c:	beq	8914 <gen_linktype+0xcdc>
    8650:	ldr	r3, [pc, #1120]	; 8ab8 <gen_linktype+0xe80>
    8654:	cmp	r0, r3
    8658:	beq	8904 <gen_linktype+0xccc>
    865c:	cmp	r0, #254	; 0xfe
    8660:	bne	8584 <gen_linktype+0x94c>
    8664:	ldr	r2, [pc, #1224]	; 8b34 <gen_linktype+0xefc>
    8668:	mov	r1, #8
    866c:	mov	r0, #2
    8670:	bl	3e70 <gen_cmp.constprop.42>
    8674:	ldr	r2, [pc, #1212]	; 8b38 <gen_linktype+0xf00>
    8678:	mov	r1, #8
    867c:	mov	r5, r0
    8680:	mov	r0, #2
    8684:	bl	3e70 <gen_cmp.constprop.42>
    8688:	ldr	r2, [pc, #1196]	; 8b3c <gen_linktype+0xf04>
    868c:	mov	r1, #8
    8690:	mov	r6, r0
    8694:	mov	r0, #2
    8698:	bl	3e70 <gen_cmp.constprop.42>
    869c:	mov	r4, r0
    86a0:	mov	r1, r0
    86a4:	mov	r0, r6
    86a8:	bl	6fd4 <sf_gen_or>
    86ac:	mov	r1, r4
    86b0:	mov	r0, r5
    86b4:	bl	6fd4 <sf_gen_or>
    86b8:	b	7d50 <gen_linktype+0x118>
    86bc:	ldr	r3, [pc, #1148]	; 8b40 <gen_linktype+0xf08>
    86c0:	cmp	r0, r3
    86c4:	beq	89f0 <gen_linktype+0xdb8>
    86c8:	bgt	8884 <gen_linktype+0xc4c>
    86cc:	cmp	r0, #2048	; 0x800
    86d0:	beq	8a08 <gen_linktype+0xdd0>
    86d4:	ldr	r3, [pc, #1128]	; 8b44 <gen_linktype+0xf0c>
    86d8:	cmp	r0, r3
    86dc:	bne	8584 <gen_linktype+0x94c>
    86e0:	ldr	r3, [pc, #1120]	; 8b48 <gen_linktype+0xf10>
    86e4:	mov	r2, #213	; 0xd5
    86e8:	add	r3, pc, r3
    86ec:	mov	r1, #16
    86f0:	ldr	r4, [r3, #952]	; 0x3b8
    86f4:	mov	r0, r4
    86f8:	bl	3e70 <gen_cmp.constprop.42>
    86fc:	mov	r2, #241	; 0xf1
    8700:	mov	r5, r0
    8704:	mov	r0, r4
    8708:	mov	r1, #16
    870c:	b	8560 <gen_linktype+0x928>
    8710:	cmp	r0, #1536	; 0x600
    8714:	beq	8a54 <gen_linktype+0xe1c>
    8718:	ble	88b4 <gen_linktype+0xc7c>
    871c:	ldr	r3, [pc, #928]	; 8ac4 <gen_linktype+0xe8c>
    8720:	cmp	r0, r3
    8724:	moveq	r5, #39	; 0x27
    8728:	beq	874c <gen_linktype+0xb14>
    872c:	ble	8a48 <gen_linktype+0xe10>
    8730:	ldr	r3, [pc, #912]	; 8ac8 <gen_linktype+0xe90>
    8734:	cmp	r5, r3
    8738:	moveq	r5, #41	; 0x29
    873c:	beq	874c <gen_linktype+0xb14>
    8740:	ldr	r3, [pc, #880]	; 8ab8 <gen_linktype+0xe80>
    8744:	cmp	r5, r3
    8748:	moveq	r5, #87	; 0x57
    874c:	ldr	r3, [pc, #1016]	; 8b4c <gen_linktype+0xf14>
    8750:	mov	r2, r5
    8754:	add	r3, pc, r3
    8758:	mov	r1, #8
    875c:	ldr	r0, [r3, #952]	; 0x3b8
    8760:	b	837c <gen_linktype+0x744>
    8764:	ldr	r3, [pc, #996]	; 8b50 <gen_linktype+0xf18>
    8768:	add	r3, pc, r3
    876c:	ldr	r0, [r3, #952]	; 0x3b8
    8770:	cmn	r0, #1
    8774:	beq	8ab0 <gen_linktype+0xe78>
    8778:	mov	r2, r5
    877c:	mov	r1, #8
    8780:	b	837c <gen_linktype+0x744>
    8784:	cmp	r0, #224	; 0xe0
    8788:	moveq	r5, #43	; 0x2b
    878c:	beq	8154 <gen_linktype+0x51c>
    8790:	cmp	r5, #254	; 0xfe
    8794:	moveq	r5, #35	; 0x23
    8798:	beq	8154 <gen_linktype+0x51c>
    879c:	cmp	r5, #66	; 0x42
    87a0:	moveq	r5, #49	; 0x31
    87a4:	b	8154 <gen_linktype+0x51c>
    87a8:	cmp	r5, #2048	; 0x800
    87ac:	moveq	r5, #33	; 0x21
    87b0:	b	8154 <gen_linktype+0x51c>
    87b4:	mov	r5, #37	; 0x25
    87b8:	b	8154 <gen_linktype+0x51c>
    87bc:	ldr	r0, [r3, #924]	; 0x39c
    87c0:	cmn	r0, #1
    87c4:	beq	8ab0 <gen_linktype+0xe78>
    87c8:	mov	r1, #2
    87cc:	mov	r3, #16
    87d0:	str	r2, [sp]
    87d4:	str	r1, [sp, #4]
    87d8:	mov	r2, #15
    87dc:	mov	r1, r3
    87e0:	bl	3bf0 <gen_ncmp.constprop.35>
    87e4:	mov	r6, r0
    87e8:	b	8600 <gen_linktype+0x9c8>
    87ec:	cmp	r0, #1536	; 0x600
    87f0:	beq	8aa8 <gen_linktype+0xe70>
    87f4:	ble	89cc <gen_linktype+0xd94>
    87f8:	ldr	r3, [pc, #708]	; 8ac4 <gen_linktype+0xe8c>
    87fc:	cmp	r0, r3
    8800:	moveq	r5, #39	; 0x27
    8804:	beq	8828 <gen_linktype+0xbf0>
    8808:	ble	8a9c <gen_linktype+0xe64>
    880c:	ldr	r3, [pc, #692]	; 8ac8 <gen_linktype+0xe90>
    8810:	cmp	r5, r3
    8814:	moveq	r5, #41	; 0x29
    8818:	beq	8828 <gen_linktype+0xbf0>
    881c:	ldr	r3, [pc, #660]	; 8ab8 <gen_linktype+0xe80>
    8820:	cmp	r5, r3
    8824:	moveq	r5, #87	; 0x57
    8828:	ldr	r3, [pc, #804]	; 8b54 <gen_linktype+0xf1c>
    882c:	mov	r2, r5
    8830:	add	r3, pc, r3
    8834:	mov	r1, #8
    8838:	ldr	r0, [r3, #952]	; 0x3b8
    883c:	b	837c <gen_linktype+0x744>
    8840:	ldr	r3, [pc, #640]	; 8ac8 <gen_linktype+0xe90>
    8844:	cmp	r0, r3
    8848:	beq	8924 <gen_linktype+0xcec>
    884c:	add	r3, r3, #88	; 0x58
    8850:	cmp	r0, r3
    8854:	beq	8924 <gen_linktype+0xcec>
    8858:	cmp	r0, #254	; 0xfe
    885c:	beq	898c <gen_linktype+0xd54>
    8860:	ldr	r3, [pc, #752]	; 8b58 <gen_linktype+0xf20>
    8864:	cmp	r5, r3
    8868:	ble	8a5c <gen_linktype+0xe24>
    886c:	ldr	r3, [pc, #744]	; 8b5c <gen_linktype+0xf24>
    8870:	mov	r2, r5
    8874:	add	r3, pc, r3
    8878:	mov	r1, #8
    887c:	ldr	r0, [r3, #952]	; 0x3b8
    8880:	b	837c <gen_linktype+0x744>
    8884:	ldr	r3, [pc, #572]	; 8ac8 <gen_linktype+0xe90>
    8888:	cmp	r0, r3
    888c:	beq	8a30 <gen_linktype+0xdf8>
    8890:	ldr	r3, [pc, #544]	; 8ab8 <gen_linktype+0xe80>
    8894:	cmp	r0, r3
    8898:	bne	8584 <gen_linktype+0x94c>
    889c:	ldr	r3, [pc, #700]	; 8b60 <gen_linktype+0xf28>
    88a0:	mov	r2, #196	; 0xc4
    88a4:	add	r3, pc, r3
    88a8:	mov	r1, #16
    88ac:	ldr	r0, [r3, #952]	; 0x3b8
    88b0:	b	837c <gen_linktype+0x744>
    88b4:	cmp	r0, #224	; 0xe0
    88b8:	moveq	r5, #43	; 0x2b
    88bc:	beq	874c <gen_linktype+0xb14>
    88c0:	cmp	r5, #254	; 0xfe
    88c4:	moveq	r5, #35	; 0x23
    88c8:	beq	874c <gen_linktype+0xb14>
    88cc:	cmp	r5, #66	; 0x42
    88d0:	moveq	r5, #49	; 0x31
    88d4:	b	874c <gen_linktype+0xb14>
    88d8:	mov	r2, #64	; 0x40
    88dc:	b	84ec <gen_linktype+0x8b4>
    88e0:	mov	r0, #33554432	; 0x2000000
    88e4:	mov	r2, #2
    88e8:	b	8368 <gen_linktype+0x730>
    88ec:	ldr	r3, [pc, #624]	; 8b64 <gen_linktype+0xf2c>
    88f0:	mov	r2, #2
    88f4:	add	r3, pc, r3
    88f8:	mov	r1, #16
    88fc:	ldr	r0, [r3, #952]	; 0x3b8
    8900:	b	837c <gen_linktype+0x744>
    8904:	ldr	r2, [pc, #604]	; 8b68 <gen_linktype+0xf30>
    8908:	mov	r1, #8
    890c:	mov	r0, #2
    8910:	b	837c <gen_linktype+0x744>
    8914:	mov	r2, #972	; 0x3cc
    8918:	mov	r1, #8
    891c:	mov	r0, #2
    8920:	b	837c <gen_linktype+0x744>
    8924:	ldr	r3, [pc, #576]	; 8b6c <gen_linktype+0xf34>
    8928:	mov	r1, #8
    892c:	add	r3, pc, r3
    8930:	mov	r2, #4
    8934:	ldr	r6, [r3, #952]	; 0x3b8
    8938:	mov	r0, r6
    893c:	bl	3e70 <gen_cmp.constprop.42>
    8940:	ldr	r3, [pc, #384]	; 8ac8 <gen_linktype+0xe90>
    8944:	cmp	r5, r3
    8948:	moveq	r1, r5
    894c:	ldrne	r1, [pc, #540]	; 8b70 <gen_linktype+0xf38>
    8950:	mov	r7, r0
    8954:	ldreq	r0, [pc, #536]	; 8b74 <gen_linktype+0xf3c>
    8958:	movne	r0, #0
    895c:	bl	6434 <gen_snap>
    8960:	mov	r4, r0
    8964:	mov	r1, r4
    8968:	mov	r0, r7
    896c:	bl	6390 <sf_gen_and>
    8970:	mov	r2, r5
    8974:	mov	r0, r6
    8978:	mov	r1, #8
    897c:	bl	3e70 <gen_cmp.constprop.42>
    8980:	mov	r1, r4
    8984:	bl	6fd4 <sf_gen_or>
    8988:	b	7d50 <gen_linktype+0x118>
    898c:	ldr	r3, [pc, #484]	; 8b78 <gen_linktype+0xf40>
    8990:	mov	r2, #4
    8994:	add	r3, pc, r3
    8998:	mov	r1, #8
    899c:	ldr	r0, [r3, #952]	; 0x3b8
    89a0:	bl	3e70 <gen_cmp.constprop.42>
    89a4:	orr	r2, r5, r5, lsl #8
    89a8:	mov	r1, #8
    89ac:	mov	r6, r0
    89b0:	mov	r0, #0
    89b4:	bl	47e0 <gen_cmp.constprop.38>
    89b8:	mov	r4, r0
    89bc:	mov	r1, r0
    89c0:	mov	r0, r6
    89c4:	bl	6390 <sf_gen_and>
    89c8:	b	7d50 <gen_linktype+0x118>
    89cc:	cmp	r0, #224	; 0xe0
    89d0:	moveq	r5, #43	; 0x2b
    89d4:	beq	8828 <gen_linktype+0xbf0>
    89d8:	cmp	r5, #254	; 0xfe
    89dc:	moveq	r5, #35	; 0x23
    89e0:	beq	8828 <gen_linktype+0xbf0>
    89e4:	cmp	r5, #66	; 0x42
    89e8:	moveq	r5, #49	; 0x31
    89ec:	b	8828 <gen_linktype+0xbf0>
    89f0:	ldr	r3, [pc, #388]	; 8b7c <gen_linktype+0xf44>
    89f4:	mov	r2, #214	; 0xd6
    89f8:	add	r3, pc, r3
    89fc:	mov	r1, #16
    8a00:	ldr	r0, [r3, #952]	; 0x3b8
    8a04:	b	837c <gen_linktype+0x744>
    8a08:	ldr	r3, [pc, #368]	; 8b80 <gen_linktype+0xf48>
    8a0c:	mov	r2, #212	; 0xd4
    8a10:	add	r3, pc, r3
    8a14:	mov	r1, #16
    8a18:	ldr	r4, [r3, #952]	; 0x3b8
    8a1c:	mov	r0, r4
    8a20:	bl	3e70 <gen_cmp.constprop.42>
    8a24:	mov	r2, #240	; 0xf0
    8a28:	mov	r5, r0
    8a2c:	b	8704 <gen_linktype+0xacc>
    8a30:	ldr	r3, [pc, #332]	; 8b84 <gen_linktype+0xf4c>
    8a34:	mov	r2, #221	; 0xdd
    8a38:	add	r3, pc, r3
    8a3c:	mov	r1, #16
    8a40:	ldr	r0, [r3, #952]	; 0x3b8
    8a44:	b	837c <gen_linktype+0x744>
    8a48:	cmp	r5, #2048	; 0x800
    8a4c:	moveq	r5, #33	; 0x21
    8a50:	b	874c <gen_linktype+0xb14>
    8a54:	mov	r5, #37	; 0x25
    8a58:	b	874c <gen_linktype+0xb14>
    8a5c:	ldr	r4, [pc, #292]	; 8b88 <gen_linktype+0xf50>
    8a60:	mov	r2, #4
    8a64:	add	r4, pc, r4
    8a68:	mov	r1, #8
    8a6c:	ldr	r0, [r4, #952]	; 0x3b8
    8a70:	bl	3e70 <gen_cmp.constprop.42>
    8a74:	mov	r2, r5
    8a78:	mov	r1, #16
    8a7c:	mov	r6, r0
    8a80:	ldr	r0, [r4, #872]	; 0x368
    8a84:	bl	3e70 <gen_cmp.constprop.42>
    8a88:	mov	r4, r0
    8a8c:	mov	r1, r0
    8a90:	mov	r0, r6
    8a94:	bl	6390 <sf_gen_and>
    8a98:	b	7d50 <gen_linktype+0x118>
    8a9c:	cmp	r5, #2048	; 0x800
    8aa0:	moveq	r5, #33	; 0x21
    8aa4:	b	8828 <gen_linktype+0xbf0>
    8aa8:	mov	r5, #37	; 0x25
    8aac:	b	8828 <gen_linktype+0xbf0>
    8ab0:	bl	f18 <abort@plt>
    8ab4:	.word	0x00036638
    8ab8:	.word	0x000086dd
    8abc:	.word	0x000366e8
    8ac0:	.word	0x00036608
    8ac4:	.word	0x00006003
    8ac8:	.word	0x0000809b
    8acc:	.word	0x0003620c
    8ad0:	.word	0x000361cc
    8ad4:	.word	0x00018854
    8ad8:	.word	0x4d474300
    8adc:	.word	0x000188e0
    8ae0:	.word	0x000188a0
    8ae4:	.word	0x00018864
    8ae8:	.word	0x0001891c
    8aec:	.word	0x00018808
    8af0:	.word	0x00018934
    8af4:	.word	0x00018958
    8af8:	.word	0x00018980
    8afc:	.word	0x000189a4
    8b00:	.word	0x000189d0
    8b04:	.word	0x000189fc
    8b08:	.word	0x0001888c
    8b0c:	.word	0x00018a14
    8b10:	.word	0x00018a38
    8b14:	.word	0x00018a5c
    8b18:	.word	0x00008137
    8b1c:	.word	0x00035f80
    8b20:	.word	0x00035f10
    8b24:	.word	0x00035ea4
    8b28:	.word	0x00035e4c
    8b2c:	.word	0x00035d44
    8b30:	.word	0x0000fefe
    8b34:	.word	0x00000381
    8b38:	.word	0x00000382
    8b3c:	.word	0x00000383
    8b40:	.word	0x00008035
    8b44:	.word	0x00000806
    8b48:	.word	0x00035c80
    8b4c:	.word	0x00035c14
    8b50:	.word	0x00035c00
    8b54:	.word	0x00035b38
    8b58:	.word	0x000005dc
    8b5c:	.word	0x00035af4
    8b60:	.word	0x00035ac4
    8b64:	.word	0x00035a74
    8b68:	.word	0x0000038e
    8b6c:	.word	0x00035a3c
    8b70:	.word	0x000080f3
    8b74:	.word	0x00080007
    8b78:	.word	0x000359d4
    8b7c:	.word	0x00035970
    8b80:	.word	0x00035958
    8b84:	.word	0x00035930
    8b88:	.word	0x00035904

00008b8c <gen_proto>:
    8b8c:	cmp	r2, #0
    8b90:	push	{r4, r5, r6, r7, r8, lr}
    8b94:	bne	8eb0 <gen_proto+0x324>
    8b98:	mov	r5, r0
    8b9c:	cmp	r1, #40	; 0x28
    8ba0:	addls	pc, pc, r1, lsl #2
    8ba4:	b	8e78 <gen_proto+0x2ec>
    8ba8:	b	8e44 <gen_proto+0x2b8>
    8bac:	b	8e3c <gen_proto+0x2b0>
    8bb0:	b	8e20 <gen_proto+0x294>
    8bb4:	b	8e14 <gen_proto+0x288>
    8bb8:	b	8e08 <gen_proto+0x27c>
    8bbc:	b	8dfc <gen_proto+0x270>
    8bc0:	b	8df0 <gen_proto+0x264>
    8bc4:	b	8de4 <gen_proto+0x258>
    8bc8:	b	8dd8 <gen_proto+0x24c>
    8bcc:	b	8dcc <gen_proto+0x240>
    8bd0:	b	8dc0 <gen_proto+0x234>
    8bd4:	b	8db4 <gen_proto+0x228>
    8bd8:	b	8da8 <gen_proto+0x21c>
    8bdc:	b	8d9c <gen_proto+0x210>
    8be0:	b	8d90 <gen_proto+0x204>
    8be4:	b	8d84 <gen_proto+0x1f8>
    8be8:	b	8d78 <gen_proto+0x1ec>
    8bec:	b	8d48 <gen_proto+0x1bc>
    8bf0:	b	8d3c <gen_proto+0x1b0>
    8bf4:	b	8d30 <gen_proto+0x1a4>
    8bf8:	b	8d24 <gen_proto+0x198>
    8bfc:	b	8d18 <gen_proto+0x18c>
    8c00:	b	8d0c <gen_proto+0x180>
    8c04:	b	8e78 <gen_proto+0x2ec>
    8c08:	b	8cdc <gen_proto+0x150>
    8c0c:	b	8e78 <gen_proto+0x2ec>
    8c10:	b	8c7c <gen_proto+0xf0>
    8c14:	b	8e78 <gen_proto+0x2ec>
    8c18:	b	8c70 <gen_proto+0xe4>
    8c1c:	b	8c64 <gen_proto+0xd8>
    8c20:	b	8c58 <gen_proto+0xcc>
    8c24:	b	8e78 <gen_proto+0x2ec>
    8c28:	b	8e78 <gen_proto+0x2ec>
    8c2c:	b	8e78 <gen_proto+0x2ec>
    8c30:	b	8e78 <gen_proto+0x2ec>
    8c34:	b	8e78 <gen_proto+0x2ec>
    8c38:	b	8e78 <gen_proto+0x2ec>
    8c3c:	b	8e78 <gen_proto+0x2ec>
    8c40:	b	8e78 <gen_proto+0x2ec>
    8c44:	b	8e78 <gen_proto+0x2ec>
    8c48:	b	8c4c <gen_proto+0xc0>
    8c4c:	ldr	r0, [pc, #616]	; 8ebc <gen_proto+0x330>
    8c50:	add	r0, pc, r0
    8c54:	bl	2370 <sf_bpf_error>
    8c58:	ldr	r0, [pc, #608]	; 8ec0 <gen_proto+0x334>
    8c5c:	add	r0, pc, r0
    8c60:	bl	2370 <sf_bpf_error>
    8c64:	ldr	r0, [pc, #600]	; 8ec4 <gen_proto+0x338>
    8c68:	add	r0, pc, r0
    8c6c:	bl	2370 <sf_bpf_error>
    8c70:	ldr	r0, [pc, #592]	; 8ec8 <gen_proto+0x33c>
    8c74:	add	r0, pc, r0
    8c78:	bl	2370 <sf_bpf_error>
    8c7c:	mov	r1, #24
    8c80:	mov	r2, #0
    8c84:	mov	r0, #131	; 0x83
    8c88:	bl	8b8c <gen_proto>
    8c8c:	ldr	r3, [pc, #568]	; 8ecc <gen_proto+0x340>
    8c90:	mov	r1, #16
    8c94:	add	r3, pc, r3
    8c98:	mov	r6, r0
    8c9c:	ldr	r0, [r3, #956]	; 0x3bc
    8ca0:	add	r0, r0, #4
    8ca4:	bl	431c <gen_load_macplrel>
    8ca8:	mov	r7, r0
    8cac:	bl	29f8 <newchunk.constprop.50>
    8cb0:	mov	r3, #21
    8cb4:	mov	r4, r0
    8cb8:	str	r7, [r0, #4]
    8cbc:	mov	r1, r4
    8cc0:	str	r0, [r4, #96]	; 0x60
    8cc4:	str	r5, [r0, #20]
    8cc8:	mov	r0, r6
    8ccc:	str	r3, [r4, #8]
    8cd0:	bl	6390 <sf_gen_and>
    8cd4:	mov	r0, r4
    8cd8:	pop	{r4, r5, r6, r7, r8, pc}
    8cdc:	ldr	r4, [pc, #492]	; 8ed0 <gen_proto+0x344>
    8ce0:	add	r4, pc, r4
    8ce4:	ldr	r3, [r4, #876]	; 0x36c
    8ce8:	cmp	r3, #104	; 0x68
    8cec:	beq	8e94 <gen_proto+0x308>
    8cf0:	cmp	r3, #107	; 0x6b
    8cf4:	bne	8e7c <gen_proto+0x2f0>
    8cf8:	orr	r2, r0, #768	; 0x300
    8cfc:	mov	r1, #8
    8d00:	mov	r0, #2
    8d04:	pop	{r4, r5, r6, r7, r8, lr}
    8d08:	b	3e70 <gen_cmp.constprop.42>
    8d0c:	ldr	r0, [pc, #448]	; 8ed4 <gen_proto+0x348>
    8d10:	add	r0, pc, r0
    8d14:	bl	2370 <sf_bpf_error>
    8d18:	ldr	r0, [pc, #440]	; 8ed8 <gen_proto+0x34c>
    8d1c:	add	r0, pc, r0
    8d20:	bl	2370 <sf_bpf_error>
    8d24:	ldr	r0, [pc, #432]	; 8edc <gen_proto+0x350>
    8d28:	add	r0, pc, r0
    8d2c:	bl	2370 <sf_bpf_error>
    8d30:	ldr	r0, [pc, #424]	; 8ee0 <gen_proto+0x354>
    8d34:	add	r0, pc, r0
    8d38:	bl	2370 <sf_bpf_error>
    8d3c:	ldr	r0, [pc, #416]	; 8ee4 <gen_proto+0x358>
    8d40:	add	r0, pc, r0
    8d44:	bl	2370 <sf_bpf_error>
    8d48:	ldr	r0, [pc, #408]	; 8ee8 <gen_proto+0x35c>
    8d4c:	bl	7c38 <gen_linktype>
    8d50:	mov	r2, r5
    8d54:	mov	r1, #16
    8d58:	mov	r6, r0
    8d5c:	mov	r0, #6
    8d60:	bl	48a4 <gen_cmp.constprop.41>
    8d64:	mov	r4, r0
    8d68:	mov	r1, r0
    8d6c:	mov	r0, r6
    8d70:	bl	6390 <sf_gen_and>
    8d74:	b	8cd4 <gen_proto+0x148>
    8d78:	ldr	r0, [pc, #364]	; 8eec <gen_proto+0x360>
    8d7c:	add	r0, pc, r0
    8d80:	bl	2370 <sf_bpf_error>
    8d84:	ldr	r0, [pc, #356]	; 8ef0 <gen_proto+0x364>
    8d88:	add	r0, pc, r0
    8d8c:	bl	2370 <sf_bpf_error>
    8d90:	ldr	r0, [pc, #348]	; 8ef4 <gen_proto+0x368>
    8d94:	add	r0, pc, r0
    8d98:	bl	2370 <sf_bpf_error>
    8d9c:	ldr	r0, [pc, #340]	; 8ef8 <gen_proto+0x36c>
    8da0:	add	r0, pc, r0
    8da4:	bl	2370 <sf_bpf_error>
    8da8:	ldr	r0, [pc, #332]	; 8efc <gen_proto+0x370>
    8dac:	add	r0, pc, r0
    8db0:	bl	2370 <sf_bpf_error>
    8db4:	ldr	r0, [pc, #324]	; 8f00 <gen_proto+0x374>
    8db8:	add	r0, pc, r0
    8dbc:	bl	2370 <sf_bpf_error>
    8dc0:	ldr	r0, [pc, #316]	; 8f04 <gen_proto+0x378>
    8dc4:	add	r0, pc, r0
    8dc8:	bl	2370 <sf_bpf_error>
    8dcc:	ldr	r0, [pc, #308]	; 8f08 <gen_proto+0x37c>
    8dd0:	add	r0, pc, r0
    8dd4:	bl	2370 <sf_bpf_error>
    8dd8:	ldr	r0, [pc, #300]	; 8f0c <gen_proto+0x380>
    8ddc:	add	r0, pc, r0
    8de0:	bl	2370 <sf_bpf_error>
    8de4:	ldr	r0, [pc, #292]	; 8f10 <gen_proto+0x384>
    8de8:	add	r0, pc, r0
    8dec:	bl	2370 <sf_bpf_error>
    8df0:	ldr	r0, [pc, #284]	; 8f14 <gen_proto+0x388>
    8df4:	add	r0, pc, r0
    8df8:	bl	2370 <sf_bpf_error>
    8dfc:	ldr	r0, [pc, #276]	; 8f18 <gen_proto+0x38c>
    8e00:	add	r0, pc, r0
    8e04:	bl	2370 <sf_bpf_error>
    8e08:	ldr	r0, [pc, #268]	; 8f1c <gen_proto+0x390>
    8e0c:	add	r0, pc, r0
    8e10:	bl	2370 <sf_bpf_error>
    8e14:	ldr	r0, [pc, #260]	; 8f20 <gen_proto+0x394>
    8e18:	add	r0, pc, r0
    8e1c:	bl	2370 <sf_bpf_error>
    8e20:	mov	r0, #2048	; 0x800
    8e24:	bl	7c38 <gen_linktype>
    8e28:	mov	r2, r5
    8e2c:	mov	r1, #16
    8e30:	mov	r6, r0
    8e34:	mov	r0, #9
    8e38:	b	8d60 <gen_proto+0x1d4>
    8e3c:	pop	{r4, r5, r6, r7, r8, lr}
    8e40:	b	7c38 <gen_linktype>
    8e44:	mov	r2, #0
    8e48:	mov	r1, #2
    8e4c:	bl	8b8c <gen_proto>
    8e50:	mov	r2, #0
    8e54:	mov	r1, #17
    8e58:	mov	r6, r0
    8e5c:	mov	r0, r5
    8e60:	bl	8b8c <gen_proto>
    8e64:	mov	r4, r0
    8e68:	mov	r1, r0
    8e6c:	mov	r0, r6
    8e70:	bl	6fd4 <sf_gen_or>
    8e74:	b	8cd4 <gen_proto+0x148>
    8e78:	bl	f18 <abort@plt>
    8e7c:	mov	r0, #254	; 0xfe
    8e80:	bl	7c38 <gen_linktype>
    8e84:	mov	r1, #16
    8e88:	mov	r6, r0
    8e8c:	ldr	r0, [r4, #956]	; 0x3bc
    8e90:	b	8ca4 <gen_proto+0x118>
    8e94:	ldr	r0, [pc, #136]	; 8f24 <gen_proto+0x398>
    8e98:	bl	7c38 <gen_linktype>
    8e9c:	mov	r1, #16
    8ea0:	mov	r6, r0
    8ea4:	ldr	r0, [r4, #956]	; 0x3bc
    8ea8:	add	r0, r0, #1
    8eac:	b	8ca4 <gen_proto+0x118>
    8eb0:	ldr	r0, [pc, #112]	; 8f28 <gen_proto+0x39c>
    8eb4:	add	r0, pc, r0
    8eb8:	bl	2370 <sf_bpf_error>
    8ebc:	.word	0x00018430
    8ec0:	.word	0x00018408
    8ec4:	.word	0x000183e4
    8ec8:	.word	0x000183c0
    8ecc:	.word	0x000356d4
    8ed0:	.word	0x00035688
    8ed4:	.word	0x000182e0
    8ed8:	.word	0x000182bc
    8edc:	.word	0x000182f8
    8ee0:	.word	0x000182ec
    8ee4:	.word	0x000182c8
    8ee8:	.word	0x000086dd
    8eec:	.word	0x000181a0
    8ef0:	.word	0x00018168
    8ef4:	.word	0x00018104
    8ef8:	.word	0x00018124
    8efc:	.word	0x000180c4
    8f00:	.word	0x00018090
    8f04:	.word	0x000181fc
    8f08:	.word	0x000181d8
    8f0c:	.word	0x000181b4
    8f10:	.word	0x00018160
    8f14:	.word	0x0001816c
    8f18:	.word	0x00018178
    8f1c:	.word	0x00018010
    8f20:	.word	0x00017fd8
    8f24:	.word	0x0000fefe
    8f28:	.word	0x00017f1c

00008f2c <gen_hostop>:
    8f2c:	push	{r4, r5, r6, r7, r8, lr}
    8f30:	sub	sp, sp, #8
    8f34:	mov	r6, r0
    8f38:	mov	r4, r1
    8f3c:	mov	r7, r3
    8f40:	ldr	r5, [sp, #32]
    8f44:	cmp	r2, #4
    8f48:	addls	pc, pc, r2, lsl #2
    8f4c:	b	90a8 <gen_hostop+0x17c>
    8f50:	b	8ff8 <gen_hostop+0xcc>
    8f54:	b	8f68 <gen_hostop+0x3c>
    8f58:	b	8f64 <gen_hostop+0x38>
    8f5c:	b	8ff8 <gen_hostop+0xcc>
    8f60:	b	9050 <gen_hostop+0x124>
    8f64:	ldr	r5, [sp, #36]	; 0x24
    8f68:	mov	r0, r7
    8f6c:	bl	7c38 <gen_linktype>
    8f70:	ldr	r3, [pc, #308]	; 90ac <gen_hostop+0x180>
    8f74:	mov	r1, #0
    8f78:	add	r3, pc, r3
    8f7c:	mov	r7, r0
    8f80:	ldr	r0, [r3, #868]	; 0x364
    8f84:	add	r0, r5, r0
    8f88:	bl	431c <gen_load_macplrel>
    8f8c:	cmn	r4, #1
    8f90:	mov	r5, r0
    8f94:	beq	8fc4 <gen_hostop+0x98>
    8f98:	bl	2810 <newchunk.constprop.49>
    8f9c:	mov	r3, #84	; 0x54
    8fa0:	mov	r2, r5
    8fa4:	str	r4, [r0, #12]
    8fa8:	str	r3, [r0]
    8fac:	b	8fb4 <gen_hostop+0x88>
    8fb0:	mov	r2, r3
    8fb4:	ldr	r3, [r2, #16]
    8fb8:	cmp	r3, #0
    8fbc:	bne	8fb0 <gen_hostop+0x84>
    8fc0:	str	r0, [r2, #16]
    8fc4:	bl	29f8 <newchunk.constprop.50>
    8fc8:	mov	r3, #21
    8fcc:	mov	r4, r0
    8fd0:	mov	r1, r4
    8fd4:	str	r0, [r4, #96]	; 0x60
    8fd8:	str	r5, [r0, #4]
    8fdc:	str	r6, [r0, #20]
    8fe0:	mov	r0, r7
    8fe4:	str	r3, [r4, #8]
    8fe8:	bl	6390 <sf_gen_and>
    8fec:	mov	r0, r4
    8ff0:	add	sp, sp, #8
    8ff4:	pop	{r4, r5, r6, r7, r8, pc}
    8ff8:	ldr	r3, [sp, #36]	; 0x24
    8ffc:	str	r5, [sp]
    9000:	str	r3, [sp, #4]
    9004:	mov	r2, #1
    9008:	mov	r3, r7
    900c:	bl	8f2c <gen_hostop>
    9010:	ldr	r3, [sp, #36]	; 0x24
    9014:	mov	r1, r4
    9018:	str	r3, [sp, #4]
    901c:	mov	r2, #2
    9020:	mov	r3, r7
    9024:	str	r5, [sp]
    9028:	mov	r8, r0
    902c:	mov	r0, r6
    9030:	bl	8f2c <gen_hostop>
    9034:	mov	r4, r0
    9038:	mov	r1, r0
    903c:	mov	r0, r8
    9040:	bl	6fd4 <sf_gen_or>
    9044:	mov	r0, r4
    9048:	add	sp, sp, #8
    904c:	pop	{r4, r5, r6, r7, r8, pc}
    9050:	ldr	r3, [sp, #36]	; 0x24
    9054:	str	r5, [sp]
    9058:	str	r3, [sp, #4]
    905c:	mov	r2, #1
    9060:	mov	r3, r7
    9064:	bl	8f2c <gen_hostop>
    9068:	ldr	r3, [sp, #36]	; 0x24
    906c:	mov	r1, r4
    9070:	str	r3, [sp, #4]
    9074:	mov	r2, #2
    9078:	mov	r3, r7
    907c:	str	r5, [sp]
    9080:	mov	r8, r0
    9084:	mov	r0, r6
    9088:	bl	8f2c <gen_hostop>
    908c:	mov	r4, r0
    9090:	mov	r1, r0
    9094:	mov	r0, r8
    9098:	bl	6390 <sf_gen_and>
    909c:	mov	r0, r4
    90a0:	add	sp, sp, #8
    90a4:	pop	{r4, r5, r6, r7, r8, pc}
    90a8:	bl	f18 <abort@plt>
    90ac:	.word	0x000353f0

000090b0 <gen_dnhostop>:
    90b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    90b4:	mov	r5, r0
    90b8:	sub	sp, sp, #12
    90bc:	cmp	r1, #24
    90c0:	addls	pc, pc, r1, lsl #2
    90c4:	b	948c <gen_dnhostop+0x3dc>
    90c8:	b	9458 <gen_dnhostop+0x3a8>
    90cc:	b	912c <gen_dnhostop+0x7c>
    90d0:	b	940c <gen_dnhostop+0x35c>
    90d4:	b	9458 <gen_dnhostop+0x3a8>
    90d8:	b	9418 <gen_dnhostop+0x368>
    90dc:	b	948c <gen_dnhostop+0x3dc>
    90e0:	b	948c <gen_dnhostop+0x3dc>
    90e4:	b	948c <gen_dnhostop+0x3dc>
    90e8:	b	948c <gen_dnhostop+0x3dc>
    90ec:	b	948c <gen_dnhostop+0x3dc>
    90f0:	b	948c <gen_dnhostop+0x3dc>
    90f4:	b	948c <gen_dnhostop+0x3dc>
    90f8:	b	948c <gen_dnhostop+0x3dc>
    90fc:	b	948c <gen_dnhostop+0x3dc>
    9100:	b	948c <gen_dnhostop+0x3dc>
    9104:	b	948c <gen_dnhostop+0x3dc>
    9108:	b	948c <gen_dnhostop+0x3dc>
    910c:	b	948c <gen_dnhostop+0x3dc>
    9110:	b	948c <gen_dnhostop+0x3dc>
    9114:	b	948c <gen_dnhostop+0x3dc>
    9118:	b	948c <gen_dnhostop+0x3dc>
    911c:	b	948c <gen_dnhostop+0x3dc>
    9120:	b	948c <gen_dnhostop+0x3dc>
    9124:	b	948c <gen_dnhostop+0x3dc>
    9128:	b	944c <gen_dnhostop+0x39c>
    912c:	mov	r8, #3
    9130:	mov	sl, #15
    9134:	ldr	r0, [pc, #852]	; 9490 <gen_dnhostop+0x3e0>
    9138:	bl	7c38 <gen_linktype>
    913c:	ldr	r3, [pc, #848]	; 9494 <gen_dnhostop+0x3e4>
    9140:	mov	r1, #8
    9144:	add	r3, pc, r3
    9148:	ldr	r7, [r3, #868]	; 0x364
    914c:	add	r6, r7, #2
    9150:	mov	r9, r0
    9154:	mov	r0, r6
    9158:	bl	431c <gen_load_macplrel>
    915c:	mov	r4, r0
    9160:	bl	2810 <newchunk.constprop.49>
    9164:	ldr	r3, [pc, #812]	; 9498 <gen_dnhostop+0x3e8>
    9168:	mov	r2, #84	; 0x54
    916c:	str	r2, [r0]
    9170:	str	r3, [r0, #12]
    9174:	mov	r2, r4
    9178:	b	9180 <gen_dnhostop+0xd0>
    917c:	mov	r2, r3
    9180:	ldr	r3, [r2, #16]
    9184:	cmp	r3, #0
    9188:	bne	917c <gen_dnhostop+0xcc>
    918c:	str	r0, [r2, #16]
    9190:	bl	29f8 <newchunk.constprop.50>
    9194:	ldr	r2, [pc, #768]	; 949c <gen_dnhostop+0x3ec>
    9198:	mov	r3, #21
    919c:	add	r7, r7, #3
    91a0:	mov	r1, #8
    91a4:	str	r3, [sp, #4]
    91a8:	rev16	r5, r5
    91ac:	uxth	r5, r5
    91b0:	mov	fp, r0
    91b4:	str	r0, [fp, #96]	; 0x60
    91b8:	str	r2, [r0, #20]
    91bc:	str	r3, [r0, #8]
    91c0:	str	r4, [r0, #4]
    91c4:	add	r0, sl, r7
    91c8:	bl	431c <gen_load_macplrel>
    91cc:	str	r0, [sp]
    91d0:	bl	29f8 <newchunk.constprop.50>
    91d4:	ldr	r3, [sp, #4]
    91d8:	ldr	r2, [sp]
    91dc:	mov	r4, r0
    91e0:	mov	r1, r4
    91e4:	str	r3, [r4, #8]
    91e8:	str	r2, [r4, #4]
    91ec:	mov	r0, fp
    91f0:	str	r5, [r4, #20]
    91f4:	str	r4, [r4, #96]	; 0x60
    91f8:	bl	6390 <sf_gen_and>
    91fc:	mov	r1, #16
    9200:	mov	r0, r6
    9204:	bl	431c <gen_load_macplrel>
    9208:	mov	fp, r0
    920c:	bl	2810 <newchunk.constprop.49>
    9210:	mov	r2, #84	; 0x54
    9214:	mov	r3, #7
    9218:	str	r2, [r0]
    921c:	str	r3, [r0, #12]
    9220:	mov	r2, fp
    9224:	b	922c <gen_dnhostop+0x17c>
    9228:	mov	r2, r3
    922c:	ldr	r3, [r2, #16]
    9230:	cmp	r3, #0
    9234:	bne	9228 <gen_dnhostop+0x178>
    9238:	str	r0, [r2, #16]
    923c:	bl	29f8 <newchunk.constprop.50>
    9240:	mov	r2, #21
    9244:	mov	r1, #6
    9248:	str	r2, [sp, #4]
    924c:	mov	r3, r0
    9250:	str	r3, [sp]
    9254:	str	r0, [r3, #96]	; 0x60
    9258:	str	fp, [r0, #4]
    925c:	str	r1, [r3, #20]
    9260:	str	r2, [r3, #8]
    9264:	mov	r1, #8
    9268:	add	r0, sl, r6
    926c:	bl	431c <gen_load_macplrel>
    9270:	mov	fp, r0
    9274:	bl	29f8 <newchunk.constprop.50>
    9278:	ldr	r3, [sp]
    927c:	ldr	r2, [sp, #4]
    9280:	mov	sl, r0
    9284:	mov	r1, sl
    9288:	mov	r0, r3
    928c:	str	r2, [sl, #8]
    9290:	str	sl, [sl, #96]	; 0x60
    9294:	str	fp, [sl, #4]
    9298:	str	r5, [sl, #20]
    929c:	bl	6390 <sf_gen_and>
    92a0:	mov	r0, sl
    92a4:	mov	r1, r4
    92a8:	bl	6fd4 <sf_gen_or>
    92ac:	mov	r1, #8
    92b0:	mov	r0, r6
    92b4:	bl	431c <gen_load_macplrel>
    92b8:	mov	sl, r0
    92bc:	bl	2810 <newchunk.constprop.49>
    92c0:	ldr	r3, [pc, #464]	; 9498 <gen_dnhostop+0x3e8>
    92c4:	mov	r2, #84	; 0x54
    92c8:	str	r2, [r0]
    92cc:	str	r3, [r0, #12]
    92d0:	mov	r2, sl
    92d4:	b	92dc <gen_dnhostop+0x22c>
    92d8:	mov	r2, r3
    92dc:	ldr	r3, [r2, #16]
    92e0:	cmp	r3, #0
    92e4:	bne	92d8 <gen_dnhostop+0x228>
    92e8:	str	r0, [r2, #16]
    92ec:	bl	29f8 <newchunk.constprop.50>
    92f0:	ldr	r2, [pc, #424]	; 94a0 <gen_dnhostop+0x3f0>
    92f4:	mov	r3, #21
    92f8:	mov	r1, #8
    92fc:	str	r3, [sp]
    9300:	mov	fp, r0
    9304:	str	r0, [fp, #96]	; 0x60
    9308:	str	sl, [r0, #4]
    930c:	str	r2, [fp, #20]
    9310:	str	r3, [fp, #8]
    9314:	add	r0, r8, r7
    9318:	bl	431c <gen_load_macplrel>
    931c:	mov	sl, r0
    9320:	bl	29f8 <newchunk.constprop.50>
    9324:	ldr	r3, [sp]
    9328:	mov	r7, r0
    932c:	mov	r1, r7
    9330:	str	r3, [r7, #8]
    9334:	mov	r0, fp
    9338:	str	r7, [r7, #96]	; 0x60
    933c:	str	sl, [r7, #4]
    9340:	str	r5, [r7, #20]
    9344:	bl	6390 <sf_gen_and>
    9348:	mov	r0, r7
    934c:	mov	r1, r4
    9350:	bl	6fd4 <sf_gen_or>
    9354:	mov	r1, #16
    9358:	mov	r0, r6
    935c:	bl	431c <gen_load_macplrel>
    9360:	mov	r7, r0
    9364:	bl	2810 <newchunk.constprop.49>
    9368:	mov	r2, #84	; 0x54
    936c:	mov	r3, #7
    9370:	str	r2, [r0]
    9374:	str	r3, [r0, #12]
    9378:	mov	r2, r7
    937c:	b	9384 <gen_dnhostop+0x2d4>
    9380:	mov	r2, r3
    9384:	ldr	r3, [r2, #16]
    9388:	cmp	r3, #0
    938c:	bne	9380 <gen_dnhostop+0x2d0>
    9390:	str	r0, [r2, #16]
    9394:	bl	29f8 <newchunk.constprop.50>
    9398:	mov	fp, #21
    939c:	mov	r3, #2
    93a0:	mov	r1, #8
    93a4:	mov	sl, r0
    93a8:	str	r0, [sl, #96]	; 0x60
    93ac:	str	r7, [r0, #4]
    93b0:	str	r3, [sl, #20]
    93b4:	add	r0, r8, r6
    93b8:	str	fp, [sl, #8]
    93bc:	bl	431c <gen_load_macplrel>
    93c0:	mov	r7, r0
    93c4:	bl	29f8 <newchunk.constprop.50>
    93c8:	mov	r6, r0
    93cc:	str	fp, [r0, #8]
    93d0:	mov	r1, r0
    93d4:	str	r0, [r6, #96]	; 0x60
    93d8:	str	r7, [r0, #4]
    93dc:	str	r5, [r0, #20]
    93e0:	mov	r0, sl
    93e4:	bl	6390 <sf_gen_and>
    93e8:	mov	r1, r4
    93ec:	mov	r0, r6
    93f0:	bl	6fd4 <sf_gen_or>
    93f4:	mov	r0, r9
    93f8:	mov	r1, r4
    93fc:	bl	6390 <sf_gen_and>
    9400:	mov	r0, r4
    9404:	add	sp, sp, #12
    9408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    940c:	mov	r8, #1
    9410:	mov	sl, #7
    9414:	b	9134 <gen_dnhostop+0x84>
    9418:	mov	r1, #1
    941c:	bl	90b0 <gen_dnhostop>
    9420:	mov	r1, #2
    9424:	mov	r6, r0
    9428:	mov	r0, r5
    942c:	bl	90b0 <gen_dnhostop>
    9430:	mov	r4, r0
    9434:	mov	r1, r0
    9438:	mov	r0, r6
    943c:	bl	6390 <sf_gen_and>
    9440:	mov	r0, r4
    9444:	add	sp, sp, #12
    9448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    944c:	ldr	r0, [pc, #80]	; 94a4 <gen_dnhostop+0x3f4>
    9450:	add	r0, pc, r0
    9454:	bl	2370 <sf_bpf_error>
    9458:	mov	r1, #1
    945c:	bl	90b0 <gen_dnhostop>
    9460:	mov	r1, #2
    9464:	mov	r6, r0
    9468:	mov	r0, r5
    946c:	bl	90b0 <gen_dnhostop>
    9470:	mov	r4, r0
    9474:	mov	r1, r0
    9478:	mov	r0, r6
    947c:	bl	6fd4 <sf_gen_or>
    9480:	mov	r0, r4
    9484:	add	sp, sp, #12
    9488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    948c:	bl	f18 <abort@plt>
    9490:	.word	0x00006003
    9494:	.word	0x00035224
    9498:	.word	0x0000ff07
    949c:	.word	0x00008106
    94a0:	.word	0x00008102
    94a4:	.word	0x00017c48

000094a8 <gen_host>:
    94a8:	push	{r4, r5, r6, r7, r8, r9, lr}
    94ac:	sub	sp, sp, #12
    94b0:	mov	r5, r0
    94b4:	ldr	r4, [sp, #40]	; 0x28
    94b8:	mov	r7, r1
    94bc:	cmp	r4, #2
    94c0:	mov	r6, r3
    94c4:	beq	9580 <gen_host+0xd8>
    94c8:	ldr	r1, [pc, #784]	; 97e0 <gen_host+0x338>
    94cc:	add	r1, pc, r1
    94d0:	cmp	r2, #40	; 0x28
    94d4:	addls	pc, pc, r2, lsl #2
    94d8:	b	97dc <gen_host+0x334>
    94dc:	b	9758 <gen_host+0x2b0>
    94e0:	b	97dc <gen_host+0x334>
    94e4:	b	9730 <gen_host+0x288>
    94e8:	b	9708 <gen_host+0x260>
    94ec:	b	96d8 <gen_host+0x230>
    94f0:	b	96cc <gen_host+0x224>
    94f4:	b	96c0 <gen_host+0x218>
    94f8:	b	96b4 <gen_host+0x20c>
    94fc:	b	96a8 <gen_host+0x200>
    9500:	b	969c <gen_host+0x1f4>
    9504:	b	9690 <gen_host+0x1e8>
    9508:	b	9684 <gen_host+0x1dc>
    950c:	b	9670 <gen_host+0x1c8>
    9510:	b	9664 <gen_host+0x1bc>
    9514:	b	9658 <gen_host+0x1b0>
    9518:	b	964c <gen_host+0x1a4>
    951c:	b	9640 <gen_host+0x198>
    9520:	b	9634 <gen_host+0x18c>
    9524:	b	9628 <gen_host+0x180>
    9528:	b	961c <gen_host+0x174>
    952c:	b	9610 <gen_host+0x168>
    9530:	b	9604 <gen_host+0x15c>
    9534:	b	95f8 <gen_host+0x150>
    9538:	b	95ec <gen_host+0x144>
    953c:	b	95e0 <gen_host+0x138>
    9540:	b	95d4 <gen_host+0x12c>
    9544:	b	95c8 <gen_host+0x120>
    9548:	b	95bc <gen_host+0x114>
    954c:	b	95b0 <gen_host+0x108>
    9550:	b	95a4 <gen_host+0xfc>
    9554:	b	9598 <gen_host+0xf0>
    9558:	b	97dc <gen_host+0x334>
    955c:	b	97dc <gen_host+0x334>
    9560:	b	97dc <gen_host+0x334>
    9564:	b	97dc <gen_host+0x334>
    9568:	b	97dc <gen_host+0x334>
    956c:	b	97dc <gen_host+0x334>
    9570:	b	97dc <gen_host+0x334>
    9574:	b	97dc <gen_host+0x334>
    9578:	b	97dc <gen_host+0x334>
    957c:	b	958c <gen_host+0xe4>
    9580:	ldr	r1, [pc, #604]	; 97e4 <gen_host+0x33c>
    9584:	add	r1, pc, r1
    9588:	b	94d0 <gen_host+0x28>
    958c:	ldr	r0, [pc, #596]	; 97e8 <gen_host+0x340>
    9590:	add	r0, pc, r0
    9594:	bl	2370 <sf_bpf_error>
    9598:	ldr	r0, [pc, #588]	; 97ec <gen_host+0x344>
    959c:	add	r0, pc, r0
    95a0:	bl	2370 <sf_bpf_error>
    95a4:	ldr	r0, [pc, #580]	; 97f0 <gen_host+0x348>
    95a8:	add	r0, pc, r0
    95ac:	bl	2370 <sf_bpf_error>
    95b0:	ldr	r0, [pc, #572]	; 97f4 <gen_host+0x34c>
    95b4:	add	r0, pc, r0
    95b8:	bl	2370 <sf_bpf_error>
    95bc:	ldr	r0, [pc, #564]	; 97f8 <gen_host+0x350>
    95c0:	add	r0, pc, r0
    95c4:	bl	2370 <sf_bpf_error>
    95c8:	ldr	r0, [pc, #556]	; 97fc <gen_host+0x354>
    95cc:	add	r0, pc, r0
    95d0:	bl	2370 <sf_bpf_error>
    95d4:	ldr	r0, [pc, #548]	; 9800 <gen_host+0x358>
    95d8:	add	r0, pc, r0
    95dc:	bl	2370 <sf_bpf_error>
    95e0:	ldr	r0, [pc, #540]	; 9804 <gen_host+0x35c>
    95e4:	add	r0, pc, r0
    95e8:	bl	2370 <sf_bpf_error>
    95ec:	ldr	r0, [pc, #532]	; 9808 <gen_host+0x360>
    95f0:	add	r0, pc, r0
    95f4:	bl	2370 <sf_bpf_error>
    95f8:	ldr	r0, [pc, #524]	; 980c <gen_host+0x364>
    95fc:	add	r0, pc, r0
    9600:	bl	2370 <sf_bpf_error>
    9604:	ldr	r0, [pc, #516]	; 9810 <gen_host+0x368>
    9608:	add	r0, pc, r0
    960c:	bl	2370 <sf_bpf_error>
    9610:	ldr	r0, [pc, #508]	; 9814 <gen_host+0x36c>
    9614:	add	r0, pc, r0
    9618:	bl	2370 <sf_bpf_error>
    961c:	ldr	r0, [pc, #500]	; 9818 <gen_host+0x370>
    9620:	add	r0, pc, r0
    9624:	bl	2370 <sf_bpf_error>
    9628:	ldr	r0, [pc, #492]	; 981c <gen_host+0x374>
    962c:	add	r0, pc, r0
    9630:	bl	2370 <sf_bpf_error>
    9634:	ldr	r0, [pc, #484]	; 9820 <gen_host+0x378>
    9638:	add	r0, pc, r0
    963c:	bl	2370 <sf_bpf_error>
    9640:	ldr	r0, [pc, #476]	; 9824 <gen_host+0x37c>
    9644:	add	r0, pc, r0
    9648:	bl	2370 <sf_bpf_error>
    964c:	ldr	r0, [pc, #468]	; 9828 <gen_host+0x380>
    9650:	add	r0, pc, r0
    9654:	bl	2370 <sf_bpf_error>
    9658:	ldr	r0, [pc, #460]	; 982c <gen_host+0x384>
    965c:	add	r0, pc, r0
    9660:	bl	2370 <sf_bpf_error>
    9664:	ldr	r0, [pc, #452]	; 9830 <gen_host+0x388>
    9668:	add	r0, pc, r0
    966c:	bl	2370 <sf_bpf_error>
    9670:	mov	r1, r6
    9674:	mov	r0, r5
    9678:	add	sp, sp, #12
    967c:	pop	{r4, r5, r6, r7, r8, r9, lr}
    9680:	b	90b0 <gen_dnhostop>
    9684:	ldr	r0, [pc, #424]	; 9834 <gen_host+0x38c>
    9688:	add	r0, pc, r0
    968c:	bl	2370 <sf_bpf_error>
    9690:	ldr	r0, [pc, #416]	; 9838 <gen_host+0x390>
    9694:	add	r0, pc, r0
    9698:	bl	2370 <sf_bpf_error>
    969c:	ldr	r0, [pc, #408]	; 983c <gen_host+0x394>
    96a0:	add	r0, pc, r0
    96a4:	bl	2370 <sf_bpf_error>
    96a8:	ldr	r0, [pc, #400]	; 9840 <gen_host+0x398>
    96ac:	add	r0, pc, r0
    96b0:	bl	2370 <sf_bpf_error>
    96b4:	ldr	r0, [pc, #392]	; 9844 <gen_host+0x39c>
    96b8:	add	r0, pc, r0
    96bc:	bl	2370 <sf_bpf_error>
    96c0:	ldr	r0, [pc, #384]	; 9848 <gen_host+0x3a0>
    96c4:	add	r0, pc, r0
    96c8:	bl	2370 <sf_bpf_error>
    96cc:	ldr	r0, [pc, #376]	; 984c <gen_host+0x3a4>
    96d0:	add	r0, pc, r0
    96d4:	bl	2370 <sf_bpf_error>
    96d8:	mov	ip, #24
    96dc:	mov	r3, #14
    96e0:	mov	r2, r6
    96e4:	stm	sp, {r3, ip}
    96e8:	mov	r1, r7
    96ec:	mov	r0, r5
    96f0:	ldr	r3, [pc, #344]	; 9850 <gen_host+0x3a8>
    96f4:	bl	8f2c <gen_hostop>
    96f8:	mov	r8, r0
    96fc:	mov	r0, r8
    9700:	add	sp, sp, #12
    9704:	pop	{r4, r5, r6, r7, r8, r9, pc}
    9708:	mov	ip, #24
    970c:	mov	r3, #14
    9710:	mov	r2, r6
    9714:	stm	sp, {r3, ip}
    9718:	mov	r1, r7
    971c:	mov	r0, r5
    9720:	ldr	r3, [pc, #300]	; 9854 <gen_host+0x3ac>
    9724:	bl	8f2c <gen_hostop>
    9728:	mov	r8, r0
    972c:	b	96fc <gen_host+0x254>
    9730:	mov	ip, #16
    9734:	mov	r3, #12
    9738:	mov	r2, r6
    973c:	stm	sp, {r3, ip}
    9740:	mov	r1, r7
    9744:	mov	r0, r5
    9748:	mov	r3, #2048	; 0x800
    974c:	bl	8f2c <gen_hostop>
    9750:	mov	r8, r0
    9754:	b	96fc <gen_host+0x254>
    9758:	mov	r3, r6
    975c:	str	r4, [sp]
    9760:	mov	r2, #2
    9764:	mov	r1, r7
    9768:	mov	r0, r5
    976c:	bl	94a8 <gen_host>
    9770:	ldr	r3, [pc, #224]	; 9858 <gen_host+0x3b0>
    9774:	add	r3, pc, r3
    9778:	ldr	r3, [r3, #4]
    977c:	cmp	r3, #0
    9780:	mov	r8, r0
    9784:	bne	96fc <gen_host+0x254>
    9788:	mov	r3, r6
    978c:	mov	r2, #3
    9790:	mov	r1, r7
    9794:	str	r4, [sp]
    9798:	mov	r0, r5
    979c:	bl	94a8 <gen_host>
    97a0:	mov	r9, r0
    97a4:	mov	r1, r0
    97a8:	mov	r0, r8
    97ac:	bl	6fd4 <sf_gen_or>
    97b0:	mov	r1, r7
    97b4:	str	r4, [sp]
    97b8:	mov	r3, r6
    97bc:	mov	r0, r5
    97c0:	mov	r2, #4
    97c4:	bl	94a8 <gen_host>
    97c8:	mov	r8, r0
    97cc:	mov	r1, r0
    97d0:	mov	r0, r9
    97d4:	bl	6fd4 <sf_gen_or>
    97d8:	b	96fc <gen_host+0x254>
    97dc:	bl	f18 <abort@plt>
    97e0:	.word	0x0001a050
    97e4:	.word	0x00017b38
    97e8:	.word	0x00017e5c
    97ec:	.word	0x00017e2c
    97f0:	.word	0x00017dfc
    97f4:	.word	0x00017dd0
    97f8:	.word	0x00017da4
    97fc:	.word	0x00017d78
    9800:	.word	0x00017d4c
    9804:	.word	0x00017ab4
    9808:	.word	0x00017bf8
    980c:	.word	0x00017ba4
    9810:	.word	0x00017b78
    9814:	.word	0x00017cf0
    9818:	.word	0x00017cc8
    981c:	.word	0x00017c9c
    9820:	.word	0x00017c6c
    9824:	.word	0x00017c10
    9828:	.word	0x00017c2c
    982c:	.word	0x00017bb0
    9830:	.word	0x00017bc8
    9834:	.word	0x00017b38
    9838:	.word	0x00017acc
    983c:	.word	0x00017aa0
    9840:	.word	0x00017a74
    9844:	.word	0x00017a48
    9848:	.word	0x000179fc
    984c:	.word	0x00017a10
    9850:	.word	0x00008035
    9854:	.word	0x00000806
    9858:	.word	0x00034b04

0000985c <gen_protochain>:
    985c:	ldr	r3, [pc, #2636]	; a2b0 <gen_protochain+0xa54>
    9860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9864:	add	r3, pc, r3
    9868:	mov	r8, r2
    986c:	ldr	r4, [r3, #656]	; 0x290
    9870:	ldr	fp, [pc, #2620]	; a2b4 <gen_protochain+0xa58>
    9874:	sub	sp, sp, #468	; 0x1d4
    9878:	lsl	r6, r4, #2
    987c:	add	r2, r3, r6
    9880:	add	fp, pc, fp
    9884:	ldr	r2, [r2, #660]	; 0x294
    9888:	mov	r7, r0
    988c:	cmp	r2, #0
    9890:	mov	sl, r1
    9894:	beq	9b5c <gen_protochain+0x300>
    9898:	add	r4, r4, #1
    989c:	asr	r2, r4, #31
    98a0:	lsr	r2, r2, #28
    98a4:	add	r4, r4, r2
    98a8:	and	r4, r4, #15
    98ac:	sub	r4, r4, r2
    98b0:	str	r4, [r3, #656]	; 0x290
    98b4:	lsl	r6, r4, #2
    98b8:	add	r2, r3, r6
    98bc:	ldr	r2, [r2, #660]	; 0x294
    98c0:	cmp	r2, #0
    98c4:	beq	9b5c <gen_protochain+0x300>
    98c8:	add	r4, r4, #1
    98cc:	asr	r2, r4, #31
    98d0:	lsr	r2, r2, #28
    98d4:	add	r4, r4, r2
    98d8:	and	r4, r4, #15
    98dc:	sub	r4, r4, r2
    98e0:	lsl	r6, r4, #2
    98e4:	add	r2, r3, r6
    98e8:	ldr	r2, [r2, #660]	; 0x294
    98ec:	cmp	r2, #0
    98f0:	beq	9b50 <gen_protochain+0x2f4>
    98f4:	add	r4, r4, #1
    98f8:	asr	r2, r4, #31
    98fc:	lsr	r2, r2, #28
    9900:	add	r4, r4, r2
    9904:	and	r4, r4, #15
    9908:	sub	r4, r4, r2
    990c:	lsl	r6, r4, #2
    9910:	add	r2, r3, r6
    9914:	ldr	r2, [r2, #660]	; 0x294
    9918:	cmp	r2, #0
    991c:	beq	9b50 <gen_protochain+0x2f4>
    9920:	add	r4, r4, #1
    9924:	asr	r2, r4, #31
    9928:	lsr	r2, r2, #28
    992c:	add	r4, r4, r2
    9930:	and	r4, r4, #15
    9934:	sub	r4, r4, r2
    9938:	lsl	r6, r4, #2
    993c:	add	r2, r3, r6
    9940:	ldr	r2, [r2, #660]	; 0x294
    9944:	cmp	r2, #0
    9948:	beq	9b50 <gen_protochain+0x2f4>
    994c:	add	r4, r4, #1
    9950:	asr	r2, r4, #31
    9954:	lsr	r2, r2, #28
    9958:	add	r4, r4, r2
    995c:	and	r4, r4, #15
    9960:	sub	r4, r4, r2
    9964:	lsl	r6, r4, #2
    9968:	add	r2, r3, r6
    996c:	ldr	r2, [r2, #660]	; 0x294
    9970:	cmp	r2, #0
    9974:	beq	9b50 <gen_protochain+0x2f4>
    9978:	add	r4, r4, #1
    997c:	asr	r2, r4, #31
    9980:	lsr	r2, r2, #28
    9984:	add	r4, r4, r2
    9988:	and	r4, r4, #15
    998c:	sub	r4, r4, r2
    9990:	lsl	r6, r4, #2
    9994:	add	r2, r3, r6
    9998:	ldr	r2, [r2, #660]	; 0x294
    999c:	cmp	r2, #0
    99a0:	beq	9b50 <gen_protochain+0x2f4>
    99a4:	add	r4, r4, #1
    99a8:	asr	r2, r4, #31
    99ac:	lsr	r2, r2, #28
    99b0:	add	r4, r4, r2
    99b4:	and	r4, r4, #15
    99b8:	sub	r4, r4, r2
    99bc:	lsl	r6, r4, #2
    99c0:	add	r2, r3, r6
    99c4:	ldr	r2, [r2, #660]	; 0x294
    99c8:	cmp	r2, #0
    99cc:	beq	9b50 <gen_protochain+0x2f4>
    99d0:	add	r4, r4, #1
    99d4:	asr	r2, r4, #31
    99d8:	lsr	r2, r2, #28
    99dc:	add	r4, r4, r2
    99e0:	and	r4, r4, #15
    99e4:	sub	r4, r4, r2
    99e8:	lsl	r6, r4, #2
    99ec:	add	r2, r3, r6
    99f0:	ldr	r2, [r2, #660]	; 0x294
    99f4:	cmp	r2, #0
    99f8:	beq	9b50 <gen_protochain+0x2f4>
    99fc:	add	r4, r4, #1
    9a00:	asr	r2, r4, #31
    9a04:	lsr	r2, r2, #28
    9a08:	add	r4, r4, r2
    9a0c:	and	r4, r4, #15
    9a10:	sub	r4, r4, r2
    9a14:	lsl	r6, r4, #2
    9a18:	add	r3, r3, r6
    9a1c:	ldr	r3, [r3, #660]	; 0x294
    9a20:	cmp	r3, #0
    9a24:	beq	9b50 <gen_protochain+0x2f4>
    9a28:	add	r4, r4, #1
    9a2c:	ldr	r3, [pc, #2180]	; a2b8 <gen_protochain+0xa5c>
    9a30:	asr	r2, r4, #31
    9a34:	add	r3, pc, r3
    9a38:	lsr	r2, r2, #28
    9a3c:	add	r4, r4, r2
    9a40:	and	r4, r4, #15
    9a44:	sub	r4, r4, r2
    9a48:	lsl	r6, r4, #2
    9a4c:	add	r2, r3, r6
    9a50:	ldr	r2, [r2, #660]	; 0x294
    9a54:	cmp	r2, #0
    9a58:	beq	9b50 <gen_protochain+0x2f4>
    9a5c:	add	r4, r4, #1
    9a60:	asr	r2, r4, #31
    9a64:	lsr	r2, r2, #28
    9a68:	add	r4, r4, r2
    9a6c:	and	r4, r4, #15
    9a70:	sub	r4, r4, r2
    9a74:	lsl	r6, r4, #2
    9a78:	add	r2, r3, r6
    9a7c:	ldr	r2, [r2, #660]	; 0x294
    9a80:	cmp	r2, #0
    9a84:	beq	9b50 <gen_protochain+0x2f4>
    9a88:	add	r4, r4, #1
    9a8c:	asr	r2, r4, #31
    9a90:	lsr	r2, r2, #28
    9a94:	add	r4, r4, r2
    9a98:	and	r4, r4, #15
    9a9c:	sub	r4, r4, r2
    9aa0:	lsl	r6, r4, #2
    9aa4:	add	r2, r3, r6
    9aa8:	ldr	r2, [r2, #660]	; 0x294
    9aac:	cmp	r2, #0
    9ab0:	beq	9b50 <gen_protochain+0x2f4>
    9ab4:	add	r4, r4, #1
    9ab8:	asr	r2, r4, #31
    9abc:	lsr	r2, r2, #28
    9ac0:	add	r4, r4, r2
    9ac4:	and	r4, r4, #15
    9ac8:	sub	r4, r4, r2
    9acc:	lsl	r6, r4, #2
    9ad0:	add	r2, r3, r6
    9ad4:	ldr	r2, [r2, #660]	; 0x294
    9ad8:	cmp	r2, #0
    9adc:	beq	9b50 <gen_protochain+0x2f4>
    9ae0:	add	r4, r4, #1
    9ae4:	asr	r2, r4, #31
    9ae8:	lsr	r2, r2, #28
    9aec:	add	r4, r4, r2
    9af0:	and	r4, r4, #15
    9af4:	sub	r4, r4, r2
    9af8:	lsl	r6, r4, #2
    9afc:	add	r2, r3, r6
    9b00:	ldr	r2, [r2, #660]	; 0x294
    9b04:	cmp	r2, #0
    9b08:	beq	9b50 <gen_protochain+0x2f4>
    9b0c:	add	r4, r4, #1
    9b10:	asr	r2, r4, #31
    9b14:	lsr	r2, r2, #28
    9b18:	add	r4, r4, r2
    9b1c:	and	r4, r4, #15
    9b20:	sub	r4, r4, r2
    9b24:	lsl	r6, r4, #2
    9b28:	add	r2, r3, r6
    9b2c:	ldr	r2, [r2, #660]	; 0x294
    9b30:	cmp	r2, #0
    9b34:	beq	9b50 <gen_protochain+0x2f4>
    9b38:	ldr	r0, [pc, #1916]	; a2bc <gen_protochain+0xa60>
    9b3c:	add	r4, r4, #1
    9b40:	and	r4, r4, #15
    9b44:	add	r0, pc, r0
    9b48:	str	r4, [r3, #656]	; 0x290
    9b4c:	bl	2370 <sf_bpf_error>
    9b50:	ldr	r3, [pc, #1896]	; a2c0 <gen_protochain+0xa64>
    9b54:	add	r3, pc, r3
    9b58:	str	r4, [r3, #656]	; 0x290
    9b5c:	ldr	r3, [pc, #1888]	; a2c4 <gen_protochain+0xa68>
    9b60:	mov	r1, #1
    9b64:	add	r3, pc, r3
    9b68:	add	r3, r3, r6
    9b6c:	add	r5, sp, #64	; 0x40
    9b70:	str	r1, [r3, #660]	; 0x294
    9b74:	mov	r0, r5
    9b78:	mov	r2, #400	; 0x190
    9b7c:	mov	r1, #0
    9b80:	bl	e88 <memset@plt>
    9b84:	cmp	sl, #2
    9b88:	beq	9be8 <gen_protochain+0x38c>
    9b8c:	cmp	sl, #17
    9b90:	beq	9be8 <gen_protochain+0x38c>
    9b94:	cmp	sl, #0
    9b98:	beq	9ba8 <gen_protochain+0x34c>
    9b9c:	ldr	r0, [pc, #1828]	; a2c8 <gen_protochain+0xa6c>
    9ba0:	add	r0, pc, r0
    9ba4:	bl	2370 <sf_bpf_error>
    9ba8:	mov	r2, r8
    9bac:	mov	r1, #2
    9bb0:	mov	r0, r7
    9bb4:	bl	985c <gen_protochain>
    9bb8:	mov	r1, #17
    9bbc:	mov	r2, r8
    9bc0:	mov	r5, r0
    9bc4:	mov	r0, r7
    9bc8:	bl	985c <gen_protochain>
    9bcc:	mov	r4, r0
    9bd0:	mov	r1, r0
    9bd4:	mov	r0, r5
    9bd8:	bl	6fd4 <sf_gen_or>
    9bdc:	mov	r0, r4
    9be0:	add	sp, sp, #468	; 0x1d4
    9be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9be8:	ldr	r3, [pc, #1756]	; a2cc <gen_protochain+0xa70>
    9bec:	add	r3, pc, r3
    9bf0:	ldr	r3, [r3, #876]	; 0x36c
    9bf4:	cmp	r3, #127	; 0x7f
    9bf8:	beq	9f3c <gen_protochain+0x6e0>
    9bfc:	bgt	9f2c <gen_protochain+0x6d0>
    9c00:	cmp	r3, #105	; 0x69
    9c04:	beq	9f3c <gen_protochain+0x6e0>
    9c08:	cmp	r3, #119	; 0x77
    9c0c:	beq	9f3c <gen_protochain+0x6e0>
    9c10:	ldr	r3, [pc, #1720]	; a2d0 <gen_protochain+0xa74>
    9c14:	mov	r9, #1
    9c18:	mov	r8, #0
    9c1c:	ldr	r3, [fp, r3]
    9c20:	str	r9, [r3]
    9c24:	bl	2810 <newchunk.constprop.49>
    9c28:	cmp	sl, #2
    9c2c:	str	r0, [sp, #64]	; 0x40
    9c30:	str	r8, [r0]
    9c34:	beq	9f48 <gen_protochain+0x6ec>
    9c38:	cmp	sl, #17
    9c3c:	bne	a2a4 <gen_protochain+0xa48>
    9c40:	ldr	r0, [pc, #1676]	; a2d4 <gen_protochain+0xa78>
    9c44:	bl	7c38 <gen_linktype>
    9c48:	str	r0, [sp, #8]
    9c4c:	bl	2810 <newchunk.constprop.49>
    9c50:	ldr	r3, [pc, #1664]	; a2d8 <gen_protochain+0xa7c>
    9c54:	mov	r2, #48	; 0x30
    9c58:	add	r3, pc, r3
    9c5c:	ldr	r1, [r3, #872]	; 0x368
    9c60:	ldr	r3, [r3, #868]	; 0x364
    9c64:	add	r1, r1, r3
    9c68:	add	r3, r1, #6
    9c6c:	str	r1, [sp, #16]
    9c70:	str	r2, [r0]
    9c74:	str	r3, [r0, #12]
    9c78:	str	r0, [sp, #68]	; 0x44
    9c7c:	bl	2810 <newchunk.constprop.49>
    9c80:	mov	r3, #40	; 0x28
    9c84:	str	r9, [r0]
    9c88:	str	r3, [r0, #12]
    9c8c:	str	r0, [sp, #72]	; 0x48
    9c90:	bl	2810 <newchunk.constprop.49>
    9c94:	mov	r3, #21
    9c98:	str	r8, [r0, #4]
    9c9c:	str	r8, [r0, #8]
    9ca0:	str	r3, [r0]
    9ca4:	str	r7, [r0, #12]
    9ca8:	mov	fp, r0
    9cac:	str	r0, [sp, #76]	; 0x4c
    9cb0:	bl	2810 <newchunk.constprop.49>
    9cb4:	mov	r2, #21
    9cb8:	mov	r3, #59	; 0x3b
    9cbc:	stm	r0, {r2, r8}
    9cc0:	str	r8, [r0, #8]
    9cc4:	str	r3, [r0, #12]
    9cc8:	str	r0, [fp, #8]
    9ccc:	mov	sl, r0
    9cd0:	str	r0, [sp, #80]	; 0x50
    9cd4:	bl	2810 <newchunk.constprop.49>
    9cd8:	mov	r3, #21
    9cdc:	str	r8, [r0, #8]
    9ce0:	stm	r0, {r3, r8}
    9ce4:	str	r8, [r0, #12]
    9ce8:	str	r0, [sl, #8]
    9cec:	str	r0, [sp, #84]	; 0x54
    9cf0:	str	r0, [sp, #4]
    9cf4:	bl	2810 <newchunk.constprop.49>
    9cf8:	mov	r2, #21
    9cfc:	mov	r3, r0
    9d00:	mov	r0, #60	; 0x3c
    9d04:	str	r2, [r3]
    9d08:	ldr	r2, [sp, #4]
    9d0c:	str	r3, [sp, #88]	; 0x58
    9d10:	str	r2, [sp, #24]
    9d14:	str	r3, [r2, #8]
    9d18:	str	r8, [r3, #4]
    9d1c:	str	r8, [r3, #8]
    9d20:	str	r0, [r3, #12]
    9d24:	str	r3, [sp, #4]
    9d28:	bl	2810 <newchunk.constprop.49>
    9d2c:	mov	r3, #21
    9d30:	mov	fp, r0
    9d34:	mov	r0, #43	; 0x2b
    9d38:	str	r3, [fp]
    9d3c:	ldr	r3, [sp, #4]
    9d40:	str	fp, [sp, #92]	; 0x5c
    9d44:	str	r3, [sp, #20]
    9d48:	str	fp, [r3, #8]
    9d4c:	str	r8, [fp, #4]
    9d50:	str	r8, [fp, #8]
    9d54:	str	r0, [fp, #12]
    9d58:	bl	2810 <newchunk.constprop.49>
    9d5c:	mov	r3, #21
    9d60:	mov	sl, r0
    9d64:	mov	r0, #44	; 0x2c
    9d68:	str	r3, [sl]
    9d6c:	str	sl, [fp, #8]
    9d70:	str	r8, [sl, #4]
    9d74:	str	r8, [sl, #8]
    9d78:	str	r0, [sl, #12]
    9d7c:	str	sl, [sp, #96]	; 0x60
    9d80:	bl	2810 <newchunk.constprop.49>
    9d84:	mov	r2, #135	; 0x87
    9d88:	str	r2, [r0]
    9d8c:	str	r0, [sp, #12]
    9d90:	str	r0, [sp, #100]	; 0x64
    9d94:	bl	2810 <newchunk.constprop.49>
    9d98:	ldr	r1, [sp, #16]
    9d9c:	mov	ip, #80	; 0x50
    9da0:	str	r1, [sp, #4]
    9da4:	str	ip, [r0]
    9da8:	str	r1, [r0, #12]
    9dac:	str	r0, [sp, #104]	; 0x68
    9db0:	bl	2810 <newchunk.constprop.49>
    9db4:	mov	r1, #2
    9db8:	str	r1, [r0]
    9dbc:	str	r4, [r0, #12]
    9dc0:	str	r0, [sp, #108]	; 0x6c
    9dc4:	bl	2810 <newchunk.constprop.49>
    9dc8:	mov	ip, #135	; 0x87
    9dcc:	str	ip, [r0]
    9dd0:	str	r0, [sp, #112]	; 0x70
    9dd4:	bl	2810 <newchunk.constprop.49>
    9dd8:	mov	r1, #4
    9ddc:	str	r1, [sp, #16]
    9de0:	str	r1, [r0]
    9de4:	str	r9, [r0, #12]
    9de8:	str	r0, [sp, #116]	; 0x74
    9dec:	bl	2810 <newchunk.constprop.49>
    9df0:	mov	ip, #7
    9df4:	str	ip, [r0]
    9df8:	str	r0, [sp, #120]	; 0x78
    9dfc:	bl	2810 <newchunk.constprop.49>
    9e00:	ldr	r1, [sp, #4]
    9e04:	mov	ip, #80	; 0x50
    9e08:	str	ip, [r0]
    9e0c:	str	r1, [r0, #12]
    9e10:	str	r0, [sp, #124]	; 0x7c
    9e14:	bl	2810 <newchunk.constprop.49>
    9e18:	ldr	r1, [sp, #16]
    9e1c:	str	r9, [r0, #12]
    9e20:	str	r1, [r0]
    9e24:	str	r0, [sp, #128]	; 0x80
    9e28:	bl	2810 <newchunk.constprop.49>
    9e2c:	mov	ip, #36	; 0x24
    9e30:	mov	r1, #8
    9e34:	str	ip, [r0]
    9e38:	str	r1, [r0, #12]
    9e3c:	str	r0, [sp, #132]	; 0x84
    9e40:	bl	2810 <newchunk.constprop.49>
    9e44:	mov	r1, #7
    9e48:	str	r1, [r0]
    9e4c:	str	r0, [sp, #136]	; 0x88
    9e50:	bl	2810 <newchunk.constprop.49>
    9e54:	mov	r1, #96	; 0x60
    9e58:	str	r1, [r0]
    9e5c:	str	r4, [r0, #12]
    9e60:	mov	r9, r0
    9e64:	str	r0, [sp, #140]	; 0x8c
    9e68:	bl	2810 <newchunk.constprop.49>
    9e6c:	ldr	r2, [sp, #24]
    9e70:	ldr	r3, [sp, #12]
    9e74:	mvn	r1, #17
    9e78:	mov	ip, #5
    9e7c:	str	r1, [r0, #12]
    9e80:	str	ip, [r0]
    9e84:	str	r0, [r9, #8]
    9e88:	str	r3, [r2, #4]
    9e8c:	mov	r2, r3
    9e90:	ldr	r3, [sp, #20]
    9e94:	str	r0, [sp, #144]	; 0x90
    9e98:	str	r2, [r3, #4]
    9e9c:	str	r2, [fp, #4]
    9ea0:	str	r2, [sl, #4]
    9ea4:	bl	2810 <newchunk.constprop.49>
    9ea8:	mov	r3, #51	; 0x33
    9eac:	mov	r2, #21
    9eb0:	str	r2, [sp, #48]	; 0x30
    9eb4:	mov	fp, #25
    9eb8:	mov	r1, #22
    9ebc:	str	r3, [r0, #12]
    9ec0:	mov	r3, #34	; 0x22
    9ec4:	str	r3, [sp, #12]
    9ec8:	mvn	r3, #30
    9ecc:	str	r3, [sp, #16]
    9ed0:	mov	r3, #33	; 0x21
    9ed4:	str	r3, [sp, #20]
    9ed8:	mov	r3, #32
    9edc:	str	r3, [sp, #28]
    9ee0:	mov	r3, #31
    9ee4:	str	r3, [sp, #24]
    9ee8:	mov	r3, #30
    9eec:	str	r3, [sp, #44]	; 0x2c
    9ef0:	mov	r3, #29
    9ef4:	str	r3, [sp, #32]
    9ef8:	mov	r3, #28
    9efc:	str	r3, [sp, #36]	; 0x24
    9f00:	mov	r3, #27
    9f04:	stm	r0, {r2, r8}
    9f08:	str	r8, [r0, #8]
    9f0c:	str	r3, [sp, #40]	; 0x28
    9f10:	str	r0, [sl, #8]
    9f14:	mov	r9, r0
    9f18:	str	r0, [sp, #148]	; 0x94
    9f1c:	mov	sl, #26
    9f20:	mov	r3, #24
    9f24:	mov	r8, #23
    9f28:	b	a078 <gen_protochain+0x81c>
    9f2c:	cmp	r3, #163	; 0xa3
    9f30:	beq	9f3c <gen_protochain+0x6e0>
    9f34:	cmp	r3, #192	; 0xc0
    9f38:	bne	9c10 <gen_protochain+0x3b4>
    9f3c:	ldr	r0, [pc, #920]	; a2dc <gen_protochain+0xa80>
    9f40:	add	r0, pc, r0
    9f44:	bl	2370 <sf_bpf_error>
    9f48:	mov	r0, #2048	; 0x800
    9f4c:	bl	7c38 <gen_linktype>
    9f50:	mov	fp, #21
    9f54:	str	r0, [sp, #8]
    9f58:	bl	2810 <newchunk.constprop.49>
    9f5c:	ldr	r3, [pc, #892]	; a2e0 <gen_protochain+0xa84>
    9f60:	mov	r2, #48	; 0x30
    9f64:	add	r3, pc, r3
    9f68:	ldr	r9, [r3, #872]	; 0x368
    9f6c:	ldr	r3, [r3, #868]	; 0x364
    9f70:	add	r9, r9, r3
    9f74:	add	r3, r9, #9
    9f78:	str	r2, [r0]
    9f7c:	str	r3, [r0, #12]
    9f80:	str	r0, [sp, #68]	; 0x44
    9f84:	bl	2810 <newchunk.constprop.49>
    9f88:	mov	r3, #177	; 0xb1
    9f8c:	str	r9, [sp, #4]
    9f90:	str	r3, [r0]
    9f94:	str	r9, [r0, #12]
    9f98:	str	r0, [sp, #72]	; 0x48
    9f9c:	bl	2810 <newchunk.constprop.49>
    9fa0:	str	r8, [r0, #4]
    9fa4:	str	r8, [r0, #8]
    9fa8:	str	fp, [r0]
    9fac:	str	r7, [r0, #12]
    9fb0:	mov	sl, r0
    9fb4:	str	r0, [sp, #76]	; 0x4c
    9fb8:	bl	2810 <newchunk.constprop.49>
    9fbc:	mov	r3, #59	; 0x3b
    9fc0:	str	fp, [r0]
    9fc4:	str	r8, [r0, #4]
    9fc8:	str	r8, [r0, #8]
    9fcc:	str	r3, [r0, #12]
    9fd0:	str	r0, [sl, #8]
    9fd4:	mov	r9, r0
    9fd8:	str	r0, [sp, #80]	; 0x50
    9fdc:	bl	2810 <newchunk.constprop.49>
    9fe0:	mov	r3, #4
    9fe4:	mov	sl, #11
    9fe8:	str	r8, [r0, #12]
    9fec:	str	r3, [r0]
    9ff0:	str	r0, [r9, #8]
    9ff4:	str	r0, [sp, #84]	; 0x54
    9ff8:	bl	2810 <newchunk.constprop.49>
    9ffc:	mov	r3, #51	; 0x33
    a000:	mov	r1, #7
    a004:	mov	r2, #6
    a008:	str	r2, [sp, #48]	; 0x30
    a00c:	str	r3, [r0, #12]
    a010:	mov	r3, #19
    a014:	str	r3, [sp, #12]
    a018:	mvn	r3, #15
    a01c:	str	r3, [sp, #16]
    a020:	mov	r3, #18
    a024:	str	r3, [sp, #20]
    a028:	mov	r3, #17
    a02c:	str	r3, [sp, #28]
    a030:	mov	r3, #16
    a034:	str	r3, [sp, #24]
    a038:	mov	r3, #15
    a03c:	str	r3, [sp, #44]	; 0x2c
    a040:	mov	r3, #14
    a044:	str	r3, [sp, #32]
    a048:	mov	r3, #13
    a04c:	str	r3, [sp, #36]	; 0x24
    a050:	mov	r3, #12
    a054:	str	fp, [r0]
    a058:	str	r8, [r0, #4]
    a05c:	str	r8, [r0, #8]
    a060:	str	r3, [sp, #40]	; 0x28
    a064:	mov	r9, r0
    a068:	mov	fp, #10
    a06c:	mov	r3, #9
    a070:	mov	r8, #8
    a074:	str	r0, [sp, #88]	; 0x58
    a078:	str	r3, [sp, #60]	; 0x3c
    a07c:	str	r1, [sp, #52]	; 0x34
    a080:	bl	2810 <newchunk.constprop.49>
    a084:	ldr	r1, [sp, #52]	; 0x34
    a088:	add	r3, sp, #464	; 0x1d0
    a08c:	mov	r2, #135	; 0x87
    a090:	add	r1, r3, r1, lsl #2
    a094:	str	r2, [sp, #56]	; 0x38
    a098:	str	r2, [r0]
    a09c:	str	r0, [r9, #4]
    a0a0:	str	r0, [r1, #-400]	; 0xfffffe70
    a0a4:	bl	2810 <newchunk.constprop.49>
    a0a8:	add	r3, sp, #464	; 0x1d0
    a0ac:	add	r8, r3, r8, lsl #2
    a0b0:	ldr	r3, [sp, #4]
    a0b4:	mov	r9, #80	; 0x50
    a0b8:	str	r3, [r0, #12]
    a0bc:	str	r9, [r0]
    a0c0:	str	r0, [r8, #-400]	; 0xfffffe70
    a0c4:	bl	2810 <newchunk.constprop.49>
    a0c8:	ldr	r3, [sp, #60]	; 0x3c
    a0cc:	add	r1, sp, #464	; 0x1d0
    a0d0:	add	r3, r1, r3, lsl #2
    a0d4:	mov	r1, #2
    a0d8:	str	r1, [sp, #52]	; 0x34
    a0dc:	str	r4, [r0, #12]
    a0e0:	str	r1, [r0]
    a0e4:	mov	r8, r0
    a0e8:	str	r0, [r3, #-400]	; 0xfffffe70
    a0ec:	bl	2810 <newchunk.constprop.49>
    a0f0:	ldr	r2, [sp, #56]	; 0x38
    a0f4:	add	r1, sp, #464	; 0x1d0
    a0f8:	add	fp, r1, fp, lsl #2
    a0fc:	str	r2, [r0]
    a100:	str	r0, [r8, #4]
    a104:	str	r0, [fp, #-400]	; 0xfffffe70
    a108:	bl	2810 <newchunk.constprop.49>
    a10c:	add	r1, sp, #464	; 0x1d0
    a110:	add	sl, r1, sl, lsl #2
    a114:	mov	r8, #4
    a118:	mov	r3, #1
    a11c:	str	r3, [r0, #12]
    a120:	str	r8, [r0]
    a124:	str	r0, [sl, #-400]	; 0xfffffe70
    a128:	bl	2810 <newchunk.constprop.49>
    a12c:	ldr	ip, [sp, #40]	; 0x28
    a130:	add	r1, sp, #464	; 0x1d0
    a134:	mov	sl, #7
    a138:	add	r3, r1, ip, lsl #2
    a13c:	str	sl, [r0]
    a140:	str	r0, [r3, #-400]	; 0xfffffe70
    a144:	bl	2810 <newchunk.constprop.49>
    a148:	ldr	ip, [sp, #36]	; 0x24
    a14c:	add	r1, sp, #464	; 0x1d0
    a150:	ldr	r2, [sp, #4]
    a154:	add	r3, r1, ip, lsl #2
    a158:	str	r2, [r0, #12]
    a15c:	str	r9, [r0]
    a160:	str	r0, [r3, #-400]	; 0xfffffe70
    a164:	bl	2810 <newchunk.constprop.49>
    a168:	ldr	r2, [sp, #32]
    a16c:	ldr	r1, [sp, #52]	; 0x34
    a170:	add	r3, sp, #464	; 0x1d0
    a174:	add	r3, r3, r2, lsl #2
    a178:	str	r1, [r0, #12]
    a17c:	str	r8, [r0]
    a180:	str	r0, [r3, #-400]	; 0xfffffe70
    a184:	bl	2810 <newchunk.constprop.49>
    a188:	ldr	r2, [sp, #44]	; 0x2c
    a18c:	add	r3, sp, #464	; 0x1d0
    a190:	add	r3, r3, r2, lsl #2
    a194:	mov	r2, #36	; 0x24
    a198:	str	r2, [r0]
    a19c:	str	r8, [r0, #12]
    a1a0:	str	r0, [r3, #-400]	; 0xfffffe70
    a1a4:	bl	2810 <newchunk.constprop.49>
    a1a8:	ldr	r2, [sp, #24]
    a1ac:	add	r3, sp, #464	; 0x1d0
    a1b0:	add	r3, r3, r2, lsl #2
    a1b4:	str	sl, [r0]
    a1b8:	str	r0, [r3, #-400]	; 0xfffffe70
    a1bc:	bl	2810 <newchunk.constprop.49>
    a1c0:	ldr	r2, [sp, #28]
    a1c4:	add	r3, sp, #464	; 0x1d0
    a1c8:	add	r3, r3, r2, lsl #2
    a1cc:	mov	r2, #96	; 0x60
    a1d0:	str	r4, [r0, #12]
    a1d4:	str	r2, [r0]
    a1d8:	str	r0, [r3, #-400]	; 0xfffffe70
    a1dc:	bl	2810 <newchunk.constprop.49>
    a1e0:	ldr	r2, [sp, #20]
    a1e4:	ldr	r1, [sp, #16]
    a1e8:	add	r3, sp, #464	; 0x1d0
    a1ec:	add	r3, r3, r2, lsl #2
    a1f0:	mov	r2, #5
    a1f4:	mov	r4, #0
    a1f8:	str	r1, [r0, #12]
    a1fc:	str	r2, [r0]
    a200:	str	r0, [r3, #-400]	; 0xfffffe70
    a204:	bl	2810 <newchunk.constprop.49>
    a208:	ldr	r3, [sp, #12]
    a20c:	ldr	ip, [sp, #48]	; 0x30
    a210:	lsl	r1, r3, #2
    a214:	add	r3, sp, #464	; 0x1d0
    a218:	add	r2, r3, r1
    a21c:	add	r3, r3, ip, lsl #2
    a220:	add	r1, r5, r1
    a224:	str	r0, [r2, #-400]	; 0xfffffe70
    a228:	ldr	lr, [sp, #80]	; 0x50
    a22c:	ldr	ip, [r3, #-400]	; 0xfffffe70
    a230:	ldr	r2, [sp, #64]	; 0x40
    a234:	ldr	r3, [sp, #76]	; 0x4c
    a238:	str	r8, [r0]
    a23c:	str	r4, [r0, #12]
    a240:	str	r0, [lr, #4]
    a244:	str	r0, [ip, #8]
    a248:	str	r0, [r3, #4]
    a24c:	ldr	r3, [r5, #4]!
    a250:	cmp	r5, r1
    a254:	str	r3, [r2, #16]
    a258:	mov	r2, r3
    a25c:	bne	a24c <gen_protochain+0x9f0>
    a260:	mov	r5, #0
    a264:	str	r5, [r0, #16]
    a268:	bl	29f8 <newchunk.constprop.50>
    a26c:	ldr	r3, [pc, #112]	; a2e4 <gen_protochain+0xa88>
    a270:	ldr	r2, [sp, #68]	; 0x44
    a274:	add	r3, pc, r3
    a278:	add	r6, r3, r6
    a27c:	mov	r3, #21
    a280:	mov	r4, r0
    a284:	str	r7, [r0, #20]
    a288:	mov	r1, r4
    a28c:	str	r0, [r4, #96]	; 0x60
    a290:	stmib	r4, {r2, r3}
    a294:	ldr	r0, [sp, #8]
    a298:	str	r5, [r6, #660]	; 0x294
    a29c:	bl	6390 <sf_gen_and>
    a2a0:	b	9bdc <gen_protochain+0x380>
    a2a4:	ldr	r0, [pc, #60]	; a2e8 <gen_protochain+0xa8c>
    a2a8:	add	r0, pc, r0
    a2ac:	bl	2370 <sf_bpf_error>
    a2b0:	.word	0x00034b04
    a2b4:	.word	0x00034778
    a2b8:	.word	0x00034934
    a2bc:	.word	0x00016e04
    a2c0:	.word	0x00034814
    a2c4:	.word	0x00034804
    a2c8:	.word	0x0001786c
    a2cc:	.word	0x0003477c
    a2d0:	.word	0x00000104
    a2d4:	.word	0x000086dd
    a2d8:	.word	0x00034710
    a2dc:	.word	0x000174f4
    a2e0:	.word	0x00034404
    a2e4:	.word	0x000340f4
    a2e8:	.word	0x000171b4

0000a2ec <gen_hostop6.constprop.23>:
    a2ec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a2f0:	mov	r5, r0
    a2f4:	mov	r6, r1
    a2f8:	cmp	r2, #4
    a2fc:	addls	pc, pc, r2, lsl #2
    a300:	b	a594 <gen_hostop6.constprop.23+0x2a8>
    a304:	b	a524 <gen_hostop6.constprop.23+0x238>
    a308:	b	a318 <gen_hostop6.constprop.23+0x2c>
    a30c:	b	a58c <gen_hostop6.constprop.23+0x2a0>
    a310:	b	a524 <gen_hostop6.constprop.23+0x238>
    a314:	b	a558 <gen_hostop6.constprop.23+0x26c>
    a318:	mov	r7, #8
    a31c:	ldr	r3, [pc, #628]	; a598 <gen_hostop6.constprop.23+0x2ac>
    a320:	mov	r1, #0
    a324:	add	r3, pc, r3
    a328:	ldr	r4, [r6, #12]
    a32c:	ldr	r8, [r3, #868]	; 0x364
    a330:	ldr	r9, [r5, #12]
    a334:	add	r0, r8, #12
    a338:	add	r0, r0, r7
    a33c:	bl	431c <gen_load_macplrel>
    a340:	rev	r4, r4
    a344:	cmn	r4, #1
    a348:	rev	r9, r9
    a34c:	mov	sl, r0
    a350:	beq	a380 <gen_hostop6.constprop.23+0x94>
    a354:	bl	2810 <newchunk.constprop.49>
    a358:	mov	r3, #84	; 0x54
    a35c:	mov	r2, sl
    a360:	str	r4, [r0, #12]
    a364:	str	r3, [r0]
    a368:	b	a370 <gen_hostop6.constprop.23+0x84>
    a36c:	mov	r2, r3
    a370:	ldr	r3, [r2, #16]
    a374:	cmp	r3, #0
    a378:	bne	a36c <gen_hostop6.constprop.23+0x80>
    a37c:	str	r0, [r2, #16]
    a380:	bl	29f8 <newchunk.constprop.50>
    a384:	mov	r3, #21
    a388:	mov	r1, #0
    a38c:	mov	r4, r0
    a390:	str	r0, [r4, #96]	; 0x60
    a394:	str	sl, [r0, #4]
    a398:	str	r9, [r0, #20]
    a39c:	str	r3, [r0, #8]
    a3a0:	add	r0, r8, #8
    a3a4:	add	r0, r0, r7
    a3a8:	ldr	fp, [r6, #8]
    a3ac:	ldr	r9, [r5, #8]
    a3b0:	bl	431c <gen_load_macplrel>
    a3b4:	rev	fp, fp
    a3b8:	cmn	fp, #1
    a3bc:	rev	r9, r9
    a3c0:	mov	sl, r0
    a3c4:	beq	a3f4 <gen_hostop6.constprop.23+0x108>
    a3c8:	bl	2810 <newchunk.constprop.49>
    a3cc:	mov	r3, #84	; 0x54
    a3d0:	mov	r2, sl
    a3d4:	str	fp, [r0, #12]
    a3d8:	str	r3, [r0]
    a3dc:	b	a3e4 <gen_hostop6.constprop.23+0xf8>
    a3e0:	mov	r2, r3
    a3e4:	ldr	r3, [r2, #16]
    a3e8:	cmp	r3, #0
    a3ec:	bne	a3e0 <gen_hostop6.constprop.23+0xf4>
    a3f0:	str	r0, [r2, #16]
    a3f4:	bl	29f8 <newchunk.constprop.50>
    a3f8:	mov	r2, #21
    a3fc:	mov	r1, r4
    a400:	mov	r3, r0
    a404:	str	r0, [r3, #96]	; 0x60
    a408:	str	sl, [r0, #4]
    a40c:	str	r9, [r0, #20]
    a410:	str	r2, [r0, #8]
    a414:	bl	6390 <sf_gen_and>
    a418:	add	r0, r8, #4
    a41c:	add	r0, r0, r7
    a420:	mov	r1, #0
    a424:	ldr	fp, [r6, #4]
    a428:	ldr	r9, [r5, #4]
    a42c:	bl	431c <gen_load_macplrel>
    a430:	rev	fp, fp
    a434:	cmn	fp, #1
    a438:	rev	r9, r9
    a43c:	mov	sl, r0
    a440:	beq	a470 <gen_hostop6.constprop.23+0x184>
    a444:	bl	2810 <newchunk.constprop.49>
    a448:	mov	r3, #84	; 0x54
    a44c:	mov	r2, sl
    a450:	str	fp, [r0, #12]
    a454:	str	r3, [r0]
    a458:	b	a460 <gen_hostop6.constprop.23+0x174>
    a45c:	mov	r2, r3
    a460:	ldr	r3, [r2, #16]
    a464:	cmp	r3, #0
    a468:	bne	a45c <gen_hostop6.constprop.23+0x170>
    a46c:	str	r0, [r2, #16]
    a470:	bl	29f8 <newchunk.constprop.50>
    a474:	mov	r2, #21
    a478:	mov	r1, r4
    a47c:	mov	r3, r0
    a480:	str	r0, [r3, #96]	; 0x60
    a484:	str	r2, [r0, #8]
    a488:	str	sl, [r0, #4]
    a48c:	str	r9, [r0, #20]
    a490:	bl	6390 <sf_gen_and>
    a494:	ldr	r3, [r6]
    a498:	add	r0, r7, r8
    a49c:	mov	r1, #0
    a4a0:	ldr	r6, [r5]
    a4a4:	rev	r5, r3
    a4a8:	bl	431c <gen_load_macplrel>
    a4ac:	cmn	r5, #1
    a4b0:	rev	r6, r6
    a4b4:	mov	r7, r0
    a4b8:	beq	a4e8 <gen_hostop6.constprop.23+0x1fc>
    a4bc:	bl	2810 <newchunk.constprop.49>
    a4c0:	mov	r3, #84	; 0x54
    a4c4:	mov	r2, r7
    a4c8:	str	r5, [r0, #12]
    a4cc:	str	r3, [r0]
    a4d0:	b	a4d8 <gen_hostop6.constprop.23+0x1ec>
    a4d4:	mov	r2, r3
    a4d8:	ldr	r3, [r2, #16]
    a4dc:	cmp	r3, #0
    a4e0:	bne	a4d4 <gen_hostop6.constprop.23+0x1e8>
    a4e4:	str	r0, [r2, #16]
    a4e8:	bl	29f8 <newchunk.constprop.50>
    a4ec:	mov	r2, #21
    a4f0:	mov	r1, r4
    a4f4:	mov	r3, r0
    a4f8:	str	r0, [r3, #96]	; 0x60
    a4fc:	str	r2, [r0, #8]
    a500:	str	r7, [r0, #4]
    a504:	str	r6, [r0, #20]
    a508:	bl	6390 <sf_gen_and>
    a50c:	ldr	r0, [pc, #136]	; a59c <gen_hostop6.constprop.23+0x2b0>
    a510:	bl	7c38 <gen_linktype>
    a514:	mov	r1, r4
    a518:	bl	6390 <sf_gen_and>
    a51c:	mov	r0, r4
    a520:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a524:	mov	r2, #1
    a528:	bl	a2ec <gen_hostop6.constprop.23>
    a52c:	mov	r1, r6
    a530:	mov	r2, #2
    a534:	mov	r7, r0
    a538:	mov	r0, r5
    a53c:	bl	a2ec <gen_hostop6.constprop.23>
    a540:	mov	r4, r0
    a544:	mov	r1, r0
    a548:	mov	r0, r7
    a54c:	bl	6fd4 <sf_gen_or>
    a550:	mov	r0, r4
    a554:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a558:	mov	r2, #1
    a55c:	bl	a2ec <gen_hostop6.constprop.23>
    a560:	mov	r1, r6
    a564:	mov	r2, #2
    a568:	mov	r7, r0
    a56c:	mov	r0, r5
    a570:	bl	a2ec <gen_hostop6.constprop.23>
    a574:	mov	r4, r0
    a578:	mov	r1, r0
    a57c:	mov	r0, r7
    a580:	bl	6390 <sf_gen_and>
    a584:	mov	r0, r4
    a588:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a58c:	mov	r7, #24
    a590:	b	a31c <gen_hostop6.constprop.23+0x30>
    a594:	bl	f18 <abort@plt>
    a598:	.word	0x00034044
    a59c:	.word	0x000086dd

0000a5a0 <gen_host6>:
    a5a0:	push	{r4, lr}
    a5a4:	ldr	r4, [sp, #8]
    a5a8:	ldr	lr, [pc, #640]	; a830 <gen_host6+0x290>
    a5ac:	ldr	ip, [pc, #640]	; a834 <gen_host6+0x294>
    a5b0:	add	lr, pc, lr
    a5b4:	cmp	r4, #2
    a5b8:	add	ip, pc, ip
    a5bc:	movne	ip, lr
    a5c0:	cmp	r2, #40	; 0x28
    a5c4:	addls	pc, pc, r2, lsl #2
    a5c8:	b	a82c <gen_host6+0x28c>
    a5cc:	b	a670 <gen_host6+0xd0>
    a5d0:	b	a82c <gen_host6+0x28c>
    a5d4:	b	a748 <gen_host6+0x1a8>
    a5d8:	b	a738 <gen_host6+0x198>
    a5dc:	b	a728 <gen_host6+0x188>
    a5e0:	b	a718 <gen_host6+0x178>
    a5e4:	b	a708 <gen_host6+0x168>
    a5e8:	b	a6f8 <gen_host6+0x158>
    a5ec:	b	a6e8 <gen_host6+0x148>
    a5f0:	b	a6d8 <gen_host6+0x138>
    a5f4:	b	a6c8 <gen_host6+0x128>
    a5f8:	b	a6bc <gen_host6+0x11c>
    a5fc:	b	a6ac <gen_host6+0x10c>
    a600:	b	a6a0 <gen_host6+0x100>
    a604:	b	a694 <gen_host6+0xf4>
    a608:	b	a688 <gen_host6+0xe8>
    a60c:	b	a67c <gen_host6+0xdc>
    a610:	b	a670 <gen_host6+0xd0>
    a614:	b	a81c <gen_host6+0x27c>
    a618:	b	a80c <gen_host6+0x26c>
    a61c:	b	a7fc <gen_host6+0x25c>
    a620:	b	a7ec <gen_host6+0x24c>
    a624:	b	a7dc <gen_host6+0x23c>
    a628:	b	a7d0 <gen_host6+0x230>
    a62c:	b	a7c4 <gen_host6+0x224>
    a630:	b	a7b4 <gen_host6+0x214>
    a634:	b	a7a4 <gen_host6+0x204>
    a638:	b	a794 <gen_host6+0x1f4>
    a63c:	b	a784 <gen_host6+0x1e4>
    a640:	b	a778 <gen_host6+0x1d8>
    a644:	b	a768 <gen_host6+0x1c8>
    a648:	b	a82c <gen_host6+0x28c>
    a64c:	b	a82c <gen_host6+0x28c>
    a650:	b	a82c <gen_host6+0x28c>
    a654:	b	a82c <gen_host6+0x28c>
    a658:	b	a82c <gen_host6+0x28c>
    a65c:	b	a82c <gen_host6+0x28c>
    a660:	b	a82c <gen_host6+0x28c>
    a664:	b	a82c <gen_host6+0x28c>
    a668:	b	a82c <gen_host6+0x28c>
    a66c:	b	a758 <gen_host6+0x1b8>
    a670:	mov	r2, r3
    a674:	pop	{r4, lr}
    a678:	b	a2ec <gen_hostop6.constprop.23>
    a67c:	ldr	r0, [pc, #436]	; a838 <gen_host6+0x298>
    a680:	add	r0, pc, r0
    a684:	bl	2370 <sf_bpf_error>
    a688:	ldr	r0, [pc, #428]	; a83c <gen_host6+0x29c>
    a68c:	add	r0, pc, r0
    a690:	bl	2370 <sf_bpf_error>
    a694:	ldr	r0, [pc, #420]	; a840 <gen_host6+0x2a0>
    a698:	add	r0, pc, r0
    a69c:	bl	2370 <sf_bpf_error>
    a6a0:	ldr	r0, [pc, #412]	; a844 <gen_host6+0x2a4>
    a6a4:	add	r0, pc, r0
    a6a8:	bl	2370 <sf_bpf_error>
    a6ac:	ldr	r0, [pc, #404]	; a848 <gen_host6+0x2a8>
    a6b0:	mov	r1, ip
    a6b4:	add	r0, pc, r0
    a6b8:	bl	2370 <sf_bpf_error>
    a6bc:	ldr	r0, [pc, #392]	; a84c <gen_host6+0x2ac>
    a6c0:	add	r0, pc, r0
    a6c4:	bl	2370 <sf_bpf_error>
    a6c8:	ldr	r0, [pc, #384]	; a850 <gen_host6+0x2b0>
    a6cc:	mov	r1, ip
    a6d0:	add	r0, pc, r0
    a6d4:	bl	2370 <sf_bpf_error>
    a6d8:	ldr	r0, [pc, #372]	; a854 <gen_host6+0x2b4>
    a6dc:	mov	r1, ip
    a6e0:	add	r0, pc, r0
    a6e4:	bl	2370 <sf_bpf_error>
    a6e8:	ldr	r0, [pc, #360]	; a858 <gen_host6+0x2b8>
    a6ec:	mov	r1, ip
    a6f0:	add	r0, pc, r0
    a6f4:	bl	2370 <sf_bpf_error>
    a6f8:	ldr	r0, [pc, #348]	; a85c <gen_host6+0x2bc>
    a6fc:	mov	r1, ip
    a700:	add	r0, pc, r0
    a704:	bl	2370 <sf_bpf_error>
    a708:	ldr	r0, [pc, #336]	; a860 <gen_host6+0x2c0>
    a70c:	mov	r1, ip
    a710:	add	r0, pc, r0
    a714:	bl	2370 <sf_bpf_error>
    a718:	ldr	r0, [pc, #324]	; a864 <gen_host6+0x2c4>
    a71c:	mov	r1, ip
    a720:	add	r0, pc, r0
    a724:	bl	2370 <sf_bpf_error>
    a728:	ldr	r0, [pc, #312]	; a868 <gen_host6+0x2c8>
    a72c:	mov	r1, ip
    a730:	add	r0, pc, r0
    a734:	bl	2370 <sf_bpf_error>
    a738:	ldr	r0, [pc, #300]	; a86c <gen_host6+0x2cc>
    a73c:	mov	r1, ip
    a740:	add	r0, pc, r0
    a744:	bl	2370 <sf_bpf_error>
    a748:	ldr	r0, [pc, #288]	; a870 <gen_host6+0x2d0>
    a74c:	mov	r1, ip
    a750:	add	r0, pc, r0
    a754:	bl	2370 <sf_bpf_error>
    a758:	ldr	r0, [pc, #276]	; a874 <gen_host6+0x2d4>
    a75c:	mov	r1, ip
    a760:	add	r0, pc, r0
    a764:	bl	2370 <sf_bpf_error>
    a768:	ldr	r0, [pc, #264]	; a878 <gen_host6+0x2d8>
    a76c:	mov	r1, ip
    a770:	add	r0, pc, r0
    a774:	bl	2370 <sf_bpf_error>
    a778:	ldr	r0, [pc, #252]	; a87c <gen_host6+0x2dc>
    a77c:	add	r0, pc, r0
    a780:	bl	2370 <sf_bpf_error>
    a784:	ldr	r0, [pc, #244]	; a880 <gen_host6+0x2e0>
    a788:	mov	r1, ip
    a78c:	add	r0, pc, r0
    a790:	bl	2370 <sf_bpf_error>
    a794:	ldr	r0, [pc, #232]	; a884 <gen_host6+0x2e4>
    a798:	mov	r1, ip
    a79c:	add	r0, pc, r0
    a7a0:	bl	2370 <sf_bpf_error>
    a7a4:	ldr	r0, [pc, #220]	; a888 <gen_host6+0x2e8>
    a7a8:	mov	r1, ip
    a7ac:	add	r0, pc, r0
    a7b0:	bl	2370 <sf_bpf_error>
    a7b4:	ldr	r0, [pc, #208]	; a88c <gen_host6+0x2ec>
    a7b8:	mov	r1, ip
    a7bc:	add	r0, pc, r0
    a7c0:	bl	2370 <sf_bpf_error>
    a7c4:	ldr	r0, [pc, #196]	; a890 <gen_host6+0x2f0>
    a7c8:	add	r0, pc, r0
    a7cc:	bl	2370 <sf_bpf_error>
    a7d0:	ldr	r0, [pc, #188]	; a894 <gen_host6+0x2f4>
    a7d4:	add	r0, pc, r0
    a7d8:	bl	2370 <sf_bpf_error>
    a7dc:	ldr	r0, [pc, #180]	; a898 <gen_host6+0x2f8>
    a7e0:	mov	r1, ip
    a7e4:	add	r0, pc, r0
    a7e8:	bl	2370 <sf_bpf_error>
    a7ec:	ldr	r0, [pc, #168]	; a89c <gen_host6+0x2fc>
    a7f0:	mov	r1, ip
    a7f4:	add	r0, pc, r0
    a7f8:	bl	2370 <sf_bpf_error>
    a7fc:	ldr	r0, [pc, #156]	; a8a0 <gen_host6+0x300>
    a800:	mov	r1, ip
    a804:	add	r0, pc, r0
    a808:	bl	2370 <sf_bpf_error>
    a80c:	ldr	r0, [pc, #144]	; a8a4 <gen_host6+0x304>
    a810:	mov	r1, ip
    a814:	add	r0, pc, r0
    a818:	bl	2370 <sf_bpf_error>
    a81c:	ldr	r0, [pc, #132]	; a8a8 <gen_host6+0x308>
    a820:	mov	r1, ip
    a824:	add	r0, pc, r0
    a828:	bl	2370 <sf_bpf_error>
    a82c:	bl	f18 <abort@plt>
    a830:	.word	0x00018f6c
    a834:	.word	0x00016b04
    a838:	.word	0x00016bd4
    a83c:	.word	0x00016bf0
    a840:	.word	0x00016b74
    a844:	.word	0x00016b8c
    a848:	.word	0x00016e34
    a84c:	.word	0x00016b00
    a850:	.word	0x00016a90
    a854:	.word	0x00016a60
    a858:	.word	0x00016a30
    a85c:	.word	0x00016a00
    a860:	.word	0x000169b0
    a864:	.word	0x000169c0
    a868:	.word	0x00016d70
    a86c:	.word	0x00016d84
    a870:	.word	0x00016d30
    a874:	.word	0x00016c8c
    a878:	.word	0x00016c58
    a87c:	.word	0x00016c28
    a880:	.word	0x00016bf8
    a884:	.word	0x00016bc8
    a888:	.word	0x00016b98
    a88c:	.word	0x00016b68
    a890:	.word	0x000168d0
    a894:	.word	0x00016a14
    a898:	.word	0x000169bc
    a89c:	.word	0x0001698c
    a8a0:	.word	0x00016b00
    a8a4:	.word	0x00016ad4
    a8a8:	.word	0x00016aa4

0000a8ac <sf_gen_not>:
    a8ac:	ldr	r3, [r0, #44]	; 0x2c
    a8b0:	clz	r3, r3
    a8b4:	lsr	r3, r3, #5
    a8b8:	str	r3, [r0, #44]	; 0x2c
    a8bc:	bx	lr

0000a8c0 <sf_gen_proto_abbrev>:
    a8c0:	sub	r0, r0, #1
    a8c4:	push	{r4, r5, r6, lr}
    a8c8:	cmp	r0, #39	; 0x27
    a8cc:	addls	pc, pc, r0, lsl #2
    a8d0:	b	ae04 <sf_gen_proto_abbrev+0x544>
    a8d4:	b	adf8 <sf_gen_proto_abbrev+0x538>
    a8d8:	b	adec <sf_gen_proto_abbrev+0x52c>
    a8dc:	b	ade0 <sf_gen_proto_abbrev+0x520>
    a8e0:	b	add4 <sf_gen_proto_abbrev+0x514>
    a8e4:	b	ada4 <sf_gen_proto_abbrev+0x4e4>
    a8e8:	b	ad74 <sf_gen_proto_abbrev+0x4b4>
    a8ec:	b	ad58 <sf_gen_proto_abbrev+0x498>
    a8f0:	b	ad44 <sf_gen_proto_abbrev+0x484>
    a8f4:	b	ad30 <sf_gen_proto_abbrev+0x470>
    a8f8:	b	ad1c <sf_gen_proto_abbrev+0x45c>
    a8fc:	b	ad10 <sf_gen_proto_abbrev+0x450>
    a900:	b	ad04 <sf_gen_proto_abbrev+0x444>
    a904:	b	acf8 <sf_gen_proto_abbrev+0x438>
    a908:	b	acec <sf_gen_proto_abbrev+0x42c>
    a90c:	b	ace0 <sf_gen_proto_abbrev+0x420>
    a910:	b	acd4 <sf_gen_proto_abbrev+0x414>
    a914:	b	acc8 <sf_gen_proto_abbrev+0x408>
    a918:	b	acb4 <sf_gen_proto_abbrev+0x3f4>
    a91c:	b	ac84 <sf_gen_proto_abbrev+0x3c4>
    a920:	b	ac54 <sf_gen_proto_abbrev+0x394>
    a924:	b	ac24 <sf_gen_proto_abbrev+0x364>
    a928:	b	ac10 <sf_gen_proto_abbrev+0x350>
    a92c:	b	ac04 <sf_gen_proto_abbrev+0x344>
    a930:	b	abf8 <sf_gen_proto_abbrev+0x338>
    a934:	b	abe4 <sf_gen_proto_abbrev+0x324>
    a938:	b	abd0 <sf_gen_proto_abbrev+0x310>
    a93c:	b	abbc <sf_gen_proto_abbrev+0x2fc>
    a940:	b	abb0 <sf_gen_proto_abbrev+0x2f0>
    a944:	b	aba4 <sf_gen_proto_abbrev+0x2e4>
    a948:	b	ab98 <sf_gen_proto_abbrev+0x2d8>
    a94c:	b	ab18 <sf_gen_proto_abbrev+0x258>
    a950:	b	aabc <sf_gen_proto_abbrev+0x1fc>
    a954:	b	aa6c <sf_gen_proto_abbrev+0x1ac>
    a958:	b	ae04 <sf_gen_proto_abbrev+0x544>
    a95c:	b	ae04 <sf_gen_proto_abbrev+0x544>
    a960:	b	aa04 <sf_gen_proto_abbrev+0x144>
    a964:	b	a9e0 <sf_gen_proto_abbrev+0x120>
    a968:	b	a9bc <sf_gen_proto_abbrev+0xfc>
    a96c:	b	a980 <sf_gen_proto_abbrev+0xc0>
    a970:	b	a974 <sf_gen_proto_abbrev+0xb4>
    a974:	ldr	r0, [pc, #1164]	; ae08 <sf_gen_proto_abbrev+0x548>
    a978:	add	r0, pc, r0
    a97c:	bl	2370 <sf_bpf_error>
    a980:	mov	r2, #0
    a984:	mov	r1, #26
    a988:	mov	r0, #18
    a98c:	bl	8b8c <gen_proto>
    a990:	mov	r2, #0
    a994:	mov	r1, #26
    a998:	mov	r5, r0
    a99c:	mov	r0, #20
    a9a0:	bl	8b8c <gen_proto>
    a9a4:	mov	r4, r0
    a9a8:	mov	r1, r0
    a9ac:	mov	r0, r5
    a9b0:	bl	6fd4 <sf_gen_or>
    a9b4:	mov	r0, r4
    a9b8:	pop	{r4, r5, r6, pc}
    a9bc:	mov	r1, #26
    a9c0:	mov	r0, r1
    a9c4:	mov	r2, #0
    a9c8:	bl	8b8c <gen_proto>
    a9cc:	mov	r2, #0
    a9d0:	mov	r1, #26
    a9d4:	mov	r5, r0
    a9d8:	mov	r0, #27
    a9dc:	b	a9a0 <sf_gen_proto_abbrev+0xe0>
    a9e0:	mov	r2, #0
    a9e4:	mov	r1, #26
    a9e8:	mov	r0, #24
    a9ec:	bl	8b8c <gen_proto>
    a9f0:	mov	r2, #0
    a9f4:	mov	r1, #26
    a9f8:	mov	r5, r0
    a9fc:	mov	r0, #25
    aa00:	b	a9a0 <sf_gen_proto_abbrev+0xe0>
    aa04:	mov	r2, #0
    aa08:	mov	r1, #26
    aa0c:	mov	r0, #24
    aa10:	bl	8b8c <gen_proto>
    aa14:	mov	r2, #0
    aa18:	mov	r1, #26
    aa1c:	mov	r5, r0
    aa20:	mov	r0, #25
    aa24:	bl	8b8c <gen_proto>
    aa28:	mov	r1, r0
    aa2c:	mov	r4, r0
    aa30:	mov	r0, r5
    aa34:	bl	6fd4 <sf_gen_or>
    aa38:	mov	r1, #26
    aa3c:	mov	r0, r1
    aa40:	mov	r2, #0
    aa44:	bl	8b8c <gen_proto>
    aa48:	mov	r1, r4
    aa4c:	bl	6fd4 <sf_gen_or>
    aa50:	mov	r2, #0
    aa54:	mov	r1, #26
    aa58:	mov	r0, #27
    aa5c:	bl	8b8c <gen_proto>
    aa60:	mov	r1, r4
    aa64:	bl	6fd4 <sf_gen_or>
    aa68:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    aa6c:	mov	r2, #0
    aa70:	mov	r1, #26
    aa74:	mov	r0, #15
    aa78:	bl	8b8c <gen_proto>
    aa7c:	mov	r2, #0
    aa80:	mov	r1, #26
    aa84:	mov	r5, r0
    aa88:	mov	r0, #16
    aa8c:	bl	8b8c <gen_proto>
    aa90:	mov	r4, r0
    aa94:	mov	r1, r0
    aa98:	mov	r0, r5
    aa9c:	bl	6fd4 <sf_gen_or>
    aaa0:	mov	r2, #0
    aaa4:	mov	r1, #26
    aaa8:	mov	r0, #17
    aaac:	bl	8b8c <gen_proto>
    aab0:	mov	r1, r4
    aab4:	bl	6fd4 <sf_gen_or>
    aab8:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    aabc:	mov	r2, #0
    aac0:	mov	r1, #26
    aac4:	mov	r0, #16
    aac8:	bl	8b8c <gen_proto>
    aacc:	mov	r2, #0
    aad0:	mov	r1, #26
    aad4:	mov	r5, r0
    aad8:	mov	r0, #17
    aadc:	bl	8b8c <gen_proto>
    aae0:	mov	r1, r0
    aae4:	mov	r4, r0
    aae8:	mov	r0, r5
    aaec:	bl	6fd4 <sf_gen_or>
    aaf0:	mov	r2, #0
    aaf4:	mov	r1, #26
    aaf8:	mov	r0, #20
    aafc:	bl	8b8c <gen_proto>
    ab00:	mov	r1, r4
    ab04:	bl	6fd4 <sf_gen_or>
    ab08:	mov	r2, #0
    ab0c:	mov	r1, #26
    ab10:	mov	r0, #25
    ab14:	b	aa44 <sf_gen_proto_abbrev+0x184>
    ab18:	mov	r2, #0
    ab1c:	mov	r1, #26
    ab20:	mov	r0, #15
    ab24:	bl	8b8c <gen_proto>
    ab28:	mov	r2, #0
    ab2c:	mov	r1, #26
    ab30:	mov	r5, r0
    ab34:	mov	r0, #17
    ab38:	bl	8b8c <gen_proto>
    ab3c:	mov	r4, r0
    ab40:	mov	r1, r0
    ab44:	mov	r0, r5
    ab48:	bl	6fd4 <sf_gen_or>
    ab4c:	mov	r2, #0
    ab50:	mov	r1, #26
    ab54:	mov	r0, #18
    ab58:	bl	8b8c <gen_proto>
    ab5c:	mov	r1, r4
    ab60:	bl	6fd4 <sf_gen_or>
    ab64:	mov	r2, #0
    ab68:	mov	r1, #26
    ab6c:	mov	r0, #24
    ab70:	bl	8b8c <gen_proto>
    ab74:	mov	r1, r4
    ab78:	bl	6fd4 <sf_gen_or>
    ab7c:	mov	r1, #26
    ab80:	mov	r0, r1
    ab84:	mov	r2, #0
    ab88:	bl	8b8c <gen_proto>
    ab8c:	mov	r1, r4
    ab90:	bl	6fd4 <sf_gen_or>
    ab94:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    ab98:	mov	r0, #240	; 0xf0
    ab9c:	pop	{r4, r5, r6, lr}
    aba0:	b	7c38 <gen_linktype>
    aba4:	mov	r0, #224	; 0xe0
    aba8:	pop	{r4, r5, r6, lr}
    abac:	b	7c38 <gen_linktype>
    abb0:	mov	r0, #66	; 0x42
    abb4:	pop	{r4, r5, r6, lr}
    abb8:	b	7c38 <gen_linktype>
    abbc:	mov	r2, #0
    abc0:	mov	r1, #24
    abc4:	mov	r0, #129	; 0x81
    abc8:	pop	{r4, r5, r6, lr}
    abcc:	b	8b8c <gen_proto>
    abd0:	mov	r2, #0
    abd4:	mov	r1, #24
    abd8:	mov	r0, #131	; 0x83
    abdc:	pop	{r4, r5, r6, lr}
    abe0:	b	8b8c <gen_proto>
    abe4:	mov	r2, #0
    abe8:	mov	r1, #24
    abec:	mov	r0, #130	; 0x82
    abf0:	pop	{r4, r5, r6, lr}
    abf4:	b	8b8c <gen_proto>
    abf8:	mov	r0, #254	; 0xfe
    abfc:	pop	{r4, r5, r6, lr}
    ac00:	b	7c38 <gen_linktype>
    ac04:	ldr	r0, [pc, #512]	; ae0c <sf_gen_proto_abbrev+0x54c>
    ac08:	pop	{r4, r5, r6, lr}
    ac0c:	b	7c38 <gen_linktype>
    ac10:	mov	r2, #0
    ac14:	mov	r1, #2
    ac18:	mov	r0, #112	; 0x70
    ac1c:	pop	{r4, r5, r6, lr}
    ac20:	b	8b8c <gen_proto>
    ac24:	mov	r2, #0
    ac28:	mov	r1, #2
    ac2c:	mov	r0, #103	; 0x67
    ac30:	bl	8b8c <gen_proto>
    ac34:	mov	r2, #0
    ac38:	mov	r1, #17
    ac3c:	mov	r4, r0
    ac40:	mov	r0, #103	; 0x67
    ac44:	bl	8b8c <gen_proto>
    ac48:	mov	r1, r4
    ac4c:	bl	6fd4 <sf_gen_or>
    ac50:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    ac54:	mov	r2, #0
    ac58:	mov	r1, #2
    ac5c:	mov	r0, #50	; 0x32
    ac60:	bl	8b8c <gen_proto>
    ac64:	mov	r2, #0
    ac68:	mov	r1, #17
    ac6c:	mov	r4, r0
    ac70:	mov	r0, #50	; 0x32
    ac74:	bl	8b8c <gen_proto>
    ac78:	mov	r1, r4
    ac7c:	bl	6fd4 <sf_gen_or>
    ac80:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    ac84:	mov	r2, #0
    ac88:	mov	r1, #2
    ac8c:	mov	r0, #51	; 0x33
    ac90:	bl	8b8c <gen_proto>
    ac94:	mov	r2, #0
    ac98:	mov	r1, #17
    ac9c:	mov	r4, r0
    aca0:	mov	r0, #51	; 0x33
    aca4:	bl	8b8c <gen_proto>
    aca8:	mov	r1, r4
    acac:	bl	6fd4 <sf_gen_or>
    acb0:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    acb4:	mov	r2, #0
    acb8:	mov	r1, #17
    acbc:	mov	r0, #58	; 0x3a
    acc0:	pop	{r4, r5, r6, lr}
    acc4:	b	8b8c <gen_proto>
    acc8:	ldr	r0, [pc, #320]	; ae10 <sf_gen_proto_abbrev+0x550>
    accc:	pop	{r4, r5, r6, lr}
    acd0:	b	7c38 <gen_linktype>
    acd4:	ldr	r0, [pc, #312]	; ae14 <sf_gen_proto_abbrev+0x554>
    acd8:	pop	{r4, r5, r6, lr}
    acdc:	b	7c38 <gen_linktype>
    ace0:	ldr	r0, [pc, #304]	; ae18 <sf_gen_proto_abbrev+0x558>
    ace4:	pop	{r4, r5, r6, lr}
    ace8:	b	7c38 <gen_linktype>
    acec:	ldr	r0, [pc, #296]	; ae1c <sf_gen_proto_abbrev+0x55c>
    acf0:	pop	{r4, r5, r6, lr}
    acf4:	b	7c38 <gen_linktype>
    acf8:	ldr	r0, [pc, #288]	; ae20 <sf_gen_proto_abbrev+0x560>
    acfc:	pop	{r4, r5, r6, lr}
    ad00:	b	7c38 <gen_linktype>
    ad04:	ldr	r0, [pc, #280]	; ae24 <sf_gen_proto_abbrev+0x564>
    ad08:	pop	{r4, r5, r6, lr}
    ad0c:	b	7c38 <gen_linktype>
    ad10:	ldr	r0, [pc, #272]	; ae28 <sf_gen_proto_abbrev+0x568>
    ad14:	pop	{r4, r5, r6, lr}
    ad18:	b	7c38 <gen_linktype>
    ad1c:	mov	r2, #0
    ad20:	mov	r1, #2
    ad24:	mov	r0, #9
    ad28:	pop	{r4, r5, r6, lr}
    ad2c:	b	8b8c <gen_proto>
    ad30:	mov	r1, #2
    ad34:	mov	r0, r1
    ad38:	mov	r2, #0
    ad3c:	pop	{r4, r5, r6, lr}
    ad40:	b	8b8c <gen_proto>
    ad44:	mov	r2, #0
    ad48:	mov	r1, #2
    ad4c:	mov	r0, #1
    ad50:	pop	{r4, r5, r6, lr}
    ad54:	b	8b8c <gen_proto>
    ad58:	mov	r1, #2
    ad5c:	mov	r2, #0
    ad60:	mov	r0, #17
    ad64:	bl	8b8c <gen_proto>
    ad68:	mov	r1, #17
    ad6c:	mov	r4, r0
    ad70:	b	ab80 <sf_gen_proto_abbrev+0x2c0>
    ad74:	mov	r2, #0
    ad78:	mov	r1, #2
    ad7c:	mov	r0, #6
    ad80:	bl	8b8c <gen_proto>
    ad84:	mov	r2, #0
    ad88:	mov	r1, #17
    ad8c:	mov	r4, r0
    ad90:	mov	r0, #6
    ad94:	bl	8b8c <gen_proto>
    ad98:	mov	r1, r4
    ad9c:	bl	6fd4 <sf_gen_or>
    ada0:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    ada4:	mov	r2, #0
    ada8:	mov	r1, #2
    adac:	mov	r0, #132	; 0x84
    adb0:	bl	8b8c <gen_proto>
    adb4:	mov	r2, #0
    adb8:	mov	r1, #17
    adbc:	mov	r4, r0
    adc0:	mov	r0, #132	; 0x84
    adc4:	bl	8b8c <gen_proto>
    adc8:	mov	r1, r4
    adcc:	bl	6fd4 <sf_gen_or>
    add0:	b	a9b4 <sf_gen_proto_abbrev+0xf4>
    add4:	ldr	r0, [pc, #80]	; ae2c <sf_gen_proto_abbrev+0x56c>
    add8:	pop	{r4, r5, r6, lr}
    addc:	b	7c38 <gen_linktype>
    ade0:	ldr	r0, [pc, #72]	; ae30 <sf_gen_proto_abbrev+0x570>
    ade4:	pop	{r4, r5, r6, lr}
    ade8:	b	7c38 <gen_linktype>
    adec:	mov	r0, #2048	; 0x800
    adf0:	pop	{r4, r5, r6, lr}
    adf4:	b	7c38 <gen_linktype>
    adf8:	ldr	r0, [pc, #52]	; ae34 <sf_gen_proto_abbrev+0x574>
    adfc:	add	r0, pc, r0
    ae00:	bl	2370 <sf_bpf_error>
    ae04:	bl	f18 <abort@plt>
    ae08:	.word	0x00016bb8
    ae0c:	.word	0x000080f3
    ae10:	.word	0x000086dd
    ae14:	.word	0x00006001
    ae18:	.word	0x00006002
    ae1c:	.word	0x00006007
    ae20:	.word	0x00006004
    ae24:	.word	0x00006003
    ae28:	.word	0x0000809b
    ae2c:	.word	0x00008035
    ae30:	.word	0x00000806
    ae34:	.word	0x00016710

0000ae38 <sf_gen_portop>:
    ae38:	ldr	r3, [pc, #1048]	; b258 <sf_gen_portop+0x420>
    ae3c:	push	{r4, r5, r6, r7, r8, r9, lr}
    ae40:	add	r3, pc, r3
    ae44:	sub	sp, sp, #12
    ae48:	ldr	r5, [r3, #868]	; 0x364
    ae4c:	mov	r9, r1
    ae50:	mov	r6, r0
    ae54:	mov	r1, #16
    ae58:	add	r0, r5, #9
    ae5c:	mov	r8, r2
    ae60:	bl	431c <gen_load_macplrel>
    ae64:	mov	r4, r0
    ae68:	bl	29f8 <newchunk.constprop.50>
    ae6c:	mov	r3, #21
    ae70:	mov	r1, #8
    ae74:	str	r3, [r0, #8]
    ae78:	str	r9, [r0, #20]
    ae7c:	str	r4, [r0, #4]
    ae80:	mov	r7, r0
    ae84:	str	r0, [r0, #96]	; 0x60
    ae88:	add	r0, r5, #6
    ae8c:	bl	431c <gen_load_macplrel>
    ae90:	mov	r9, r0
    ae94:	bl	29f8 <newchunk.constprop.50>
    ae98:	ldr	r2, [pc, #956]	; b25c <sf_gen_portop+0x424>
    ae9c:	mov	r1, #69	; 0x45
    aea0:	ldr	r3, [r0, #44]	; 0x2c
    aea4:	clz	r3, r3
    aea8:	lsr	r3, r3, #5
    aeac:	str	r3, [r0, #44]	; 0x2c
    aeb0:	mov	r4, r0
    aeb4:	str	r9, [r0, #4]
    aeb8:	str	r0, [r0, #96]	; 0x60
    aebc:	str	r1, [r0, #8]
    aec0:	str	r2, [r0, #20]
    aec4:	mov	r3, r7
    aec8:	b	aee0 <sf_gen_portop+0xa8>
    aecc:	ldr	r1, [r3, #60]	; 0x3c
    aed0:	str	r4, [r3, #60]	; 0x3c
    aed4:	cmp	r1, #0
    aed8:	beq	aefc <sf_gen_portop+0xc4>
    aedc:	mov	r3, r1
    aee0:	ldr	r2, [r3, #44]	; 0x2c
    aee4:	cmp	r2, #0
    aee8:	beq	aecc <sf_gen_portop+0x94>
    aeec:	ldr	r1, [r3, #84]	; 0x54
    aef0:	str	r4, [r3, #84]	; 0x54
    aef4:	cmp	r1, #0
    aef8:	bne	aedc <sf_gen_portop+0xa4>
    aefc:	ldr	r2, [r7, #44]	; 0x2c
    af00:	mov	r3, r4
    af04:	clz	r2, r2
    af08:	lsr	r2, r2, #5
    af0c:	str	r2, [r7, #44]	; 0x2c
    af10:	ldr	r2, [r4, #44]	; 0x2c
    af14:	clz	r2, r2
    af18:	lsr	r2, r2, #5
    af1c:	str	r4, [sp, #4]
    af20:	str	r2, [r4, #44]	; 0x2c
    af24:	ldr	r1, [r3, #44]	; 0x2c
    af28:	cmp	r1, #0
    af2c:	addeq	r1, r3, #60	; 0x3c
    af30:	addne	r1, r3, #84	; 0x54
    af34:	ldr	r3, [r1]
    af38:	cmp	r3, #0
    af3c:	bne	af24 <sf_gen_portop+0xec>
    af40:	str	r7, [r1]
    af44:	ldr	r3, [r4, #44]	; 0x2c
    af48:	clz	r3, r3
    af4c:	lsr	r3, r3, #5
    af50:	str	r3, [r4, #44]	; 0x2c
    af54:	ldr	r3, [r7, #96]	; 0x60
    af58:	str	r3, [r4, #96]	; 0x60
    af5c:	cmp	r8, #4
    af60:	addls	pc, pc, r8, lsl #2
    af64:	b	b254 <sf_gen_portop+0x41c>
    af68:	b	b148 <sf_gen_portop+0x310>
    af6c:	b	b210 <sf_gen_portop+0x3d8>
    af70:	b	b044 <sf_gen_portop+0x20c>
    af74:	b	b148 <sf_gen_portop+0x310>
    af78:	b	af7c <sf_gen_portop+0x144>
    af7c:	bl	2a98 <gen_loadx_iphdrlen>
    af80:	mov	r7, r0
    af84:	bl	2810 <newchunk.constprop.49>
    af88:	ldr	r3, [pc, #720]	; b260 <sf_gen_portop+0x428>
    af8c:	mov	r2, #72	; 0x48
    af90:	add	r3, pc, r3
    af94:	ldr	r3, [r3, #872]	; 0x368
    af98:	add	r5, r5, r3
    af9c:	str	r2, [r0]
    afa0:	str	r5, [r0, #12]
    afa4:	mov	r2, r7
    afa8:	b	afb0 <sf_gen_portop+0x178>
    afac:	mov	r2, r3
    afb0:	ldr	r3, [r2, #16]
    afb4:	cmp	r3, #0
    afb8:	bne	afac <sf_gen_portop+0x174>
    afbc:	str	r0, [r2, #16]
    afc0:	bl	29f8 <newchunk.constprop.50>
    afc4:	mov	r3, #21
    afc8:	add	r5, r5, #2
    afcc:	mov	r8, r0
    afd0:	str	r0, [r8, #96]	; 0x60
    afd4:	str	r3, [r0, #8]
    afd8:	str	r7, [r0, #4]
    afdc:	str	r6, [r0, #20]
    afe0:	bl	2a98 <gen_loadx_iphdrlen>
    afe4:	mov	r7, r0
    afe8:	bl	2810 <newchunk.constprop.49>
    afec:	mov	r3, #72	; 0x48
    aff0:	mov	r2, r7
    aff4:	str	r5, [r0, #12]
    aff8:	str	r3, [r0]
    affc:	b	b004 <sf_gen_portop+0x1cc>
    b000:	mov	r2, r3
    b004:	ldr	r3, [r2, #16]
    b008:	cmp	r3, #0
    b00c:	bne	b000 <sf_gen_portop+0x1c8>
    b010:	str	r0, [r2, #16]
    b014:	bl	29f8 <newchunk.constprop.50>
    b018:	mov	r3, #21
    b01c:	mov	r5, r0
    b020:	mov	r1, r5
    b024:	str	r0, [r5, #96]	; 0x60
    b028:	str	r7, [r0, #4]
    b02c:	str	r6, [r0, #20]
    b030:	mov	r0, r8
    b034:	str	r3, [r5, #8]
    b038:	bl	6390 <sf_gen_and>
    b03c:	ldr	r0, [r5, #96]	; 0x60
    b040:	b	b0a8 <sf_gen_portop+0x270>
    b044:	bl	2a98 <gen_loadx_iphdrlen>
    b048:	mov	r7, r0
    b04c:	bl	2810 <newchunk.constprop.49>
    b050:	ldr	r3, [pc, #524]	; b264 <sf_gen_portop+0x42c>
    b054:	mov	r2, #72	; 0x48
    b058:	add	r3, pc, r3
    b05c:	ldr	r3, [r3, #872]	; 0x368
    b060:	add	r5, r5, r3
    b064:	add	r5, r5, #2
    b068:	str	r2, [r0]
    b06c:	str	r5, [r0, #12]
    b070:	mov	r2, r7
    b074:	b	b07c <sf_gen_portop+0x244>
    b078:	mov	r2, r3
    b07c:	ldr	r3, [r2, #16]
    b080:	cmp	r3, #0
    b084:	bne	b078 <sf_gen_portop+0x240>
    b088:	str	r0, [r2, #16]
    b08c:	bl	29f8 <newchunk.constprop.50>
    b090:	mov	r3, #21
    b094:	mov	r5, r0
    b098:	str	r0, [r0, #96]	; 0x60
    b09c:	str	r7, [r0, #4]
    b0a0:	str	r6, [r0, #20]
    b0a4:	str	r3, [r0, #8]
    b0a8:	mov	r3, r4
    b0ac:	b	b0c4 <sf_gen_portop+0x28c>
    b0b0:	ldr	r2, [r3, #60]	; 0x3c
    b0b4:	str	r0, [r3, #60]	; 0x3c
    b0b8:	cmp	r2, #0
    b0bc:	beq	b0e0 <sf_gen_portop+0x2a8>
    b0c0:	mov	r3, r2
    b0c4:	ldr	r2, [r3, #44]	; 0x2c
    b0c8:	cmp	r2, #0
    b0cc:	beq	b0b0 <sf_gen_portop+0x278>
    b0d0:	ldr	r2, [r3, #84]	; 0x54
    b0d4:	str	r0, [r3, #84]	; 0x54
    b0d8:	cmp	r2, #0
    b0dc:	bne	b0c0 <sf_gen_portop+0x288>
    b0e0:	ldr	r2, [r4, #44]	; 0x2c
    b0e4:	mov	r3, r5
    b0e8:	clz	r2, r2
    b0ec:	lsr	r2, r2, #5
    b0f0:	str	r2, [r4, #44]	; 0x2c
    b0f4:	ldr	r2, [r5, #44]	; 0x2c
    b0f8:	clz	r2, r2
    b0fc:	lsr	r2, r2, #5
    b100:	str	r2, [r5, #44]	; 0x2c
    b104:	ldr	r2, [r3, #44]	; 0x2c
    b108:	cmp	r2, #0
    b10c:	addeq	r2, r3, #60	; 0x3c
    b110:	addne	r2, r3, #84	; 0x54
    b114:	ldr	r3, [r2]
    b118:	cmp	r3, #0
    b11c:	bne	b104 <sf_gen_portop+0x2cc>
    b120:	str	r4, [r2]
    b124:	ldr	r3, [r5, #44]	; 0x2c
    b128:	clz	r3, r3
    b12c:	lsr	r3, r3, #5
    b130:	str	r3, [r5, #44]	; 0x2c
    b134:	ldr	r3, [r4, #96]	; 0x60
    b138:	mov	r0, r5
    b13c:	str	r3, [r5, #96]	; 0x60
    b140:	add	sp, sp, #12
    b144:	pop	{r4, r5, r6, r7, r8, r9, pc}
    b148:	bl	2a98 <gen_loadx_iphdrlen>
    b14c:	mov	r8, r0
    b150:	bl	2810 <newchunk.constprop.49>
    b154:	ldr	r3, [pc, #268]	; b268 <sf_gen_portop+0x430>
    b158:	mov	r2, #72	; 0x48
    b15c:	add	r3, pc, r3
    b160:	ldr	r3, [r3, #872]	; 0x368
    b164:	add	r5, r5, r3
    b168:	str	r2, [r0]
    b16c:	str	r5, [r0, #12]
    b170:	mov	r2, r8
    b174:	b	b17c <sf_gen_portop+0x344>
    b178:	mov	r2, r3
    b17c:	ldr	r3, [r2, #16]
    b180:	cmp	r3, #0
    b184:	bne	b178 <sf_gen_portop+0x340>
    b188:	str	r0, [r2, #16]
    b18c:	bl	29f8 <newchunk.constprop.50>
    b190:	mov	r3, #21
    b194:	add	r5, r5, #2
    b198:	mov	r7, r0
    b19c:	str	r0, [r7, #96]	; 0x60
    b1a0:	str	r3, [r0, #8]
    b1a4:	str	r8, [r0, #4]
    b1a8:	str	r6, [r0, #20]
    b1ac:	bl	2a98 <gen_loadx_iphdrlen>
    b1b0:	mov	r8, r0
    b1b4:	bl	2810 <newchunk.constprop.49>
    b1b8:	mov	r3, #72	; 0x48
    b1bc:	mov	r2, r8
    b1c0:	str	r5, [r0, #12]
    b1c4:	str	r3, [r0]
    b1c8:	b	b1d0 <sf_gen_portop+0x398>
    b1cc:	mov	r2, r3
    b1d0:	ldr	r3, [r2, #16]
    b1d4:	cmp	r3, #0
    b1d8:	bne	b1cc <sf_gen_portop+0x394>
    b1dc:	str	r0, [r2, #16]
    b1e0:	bl	29f8 <newchunk.constprop.50>
    b1e4:	mov	r3, #21
    b1e8:	mov	r5, r0
    b1ec:	mov	r1, r5
    b1f0:	str	r0, [r5, #96]	; 0x60
    b1f4:	str	r8, [r0, #4]
    b1f8:	str	r6, [r0, #20]
    b1fc:	mov	r0, r7
    b200:	str	r3, [r5, #8]
    b204:	bl	6fd4 <sf_gen_or>
    b208:	ldr	r0, [r5, #96]	; 0x60
    b20c:	b	b0a8 <sf_gen_portop+0x270>
    b210:	bl	2a98 <gen_loadx_iphdrlen>
    b214:	mov	r7, r0
    b218:	bl	2810 <newchunk.constprop.49>
    b21c:	ldr	r3, [pc, #72]	; b26c <sf_gen_portop+0x434>
    b220:	mov	r2, #72	; 0x48
    b224:	add	r3, pc, r3
    b228:	ldr	r3, [r3, #872]	; 0x368
    b22c:	add	r5, r3, r5
    b230:	str	r2, [r0]
    b234:	str	r5, [r0, #12]
    b238:	mov	r2, r7
    b23c:	b	b244 <sf_gen_portop+0x40c>
    b240:	mov	r2, r3
    b244:	ldr	r3, [r2, #16]
    b248:	cmp	r3, #0
    b24c:	bne	b240 <sf_gen_portop+0x408>
    b250:	b	b088 <sf_gen_portop+0x250>
    b254:	bl	f18 <abort@plt>
    b258:	.word	0x00033528
    b25c:	.word	0x00001fff
    b260:	.word	0x000333d8
    b264:	.word	0x00033310
    b268:	.word	0x0003320c
    b26c:	.word	0x00033144

0000b270 <sf_gen_portop6>:
    b270:	ldr	r3, [pc, #516]	; b47c <sf_gen_portop6+0x20c>
    b274:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b278:	add	r3, pc, r3
    b27c:	mov	r9, r1
    b280:	ldr	r5, [r3, #868]	; 0x364
    b284:	mov	r1, #16
    b288:	mov	r7, r0
    b28c:	add	r0, r5, #6
    b290:	mov	r6, r2
    b294:	bl	431c <gen_load_macplrel>
    b298:	mov	r8, r0
    b29c:	bl	29f8 <newchunk.constprop.50>
    b2a0:	mov	r3, #21
    b2a4:	mov	r4, r0
    b2a8:	str	r9, [r0, #20]
    b2ac:	str	r0, [r0, #96]	; 0x60
    b2b0:	str	r8, [r0, #4]
    b2b4:	str	r3, [r0, #8]
    b2b8:	cmp	r6, #4
    b2bc:	addls	pc, pc, r6, lsl #2
    b2c0:	b	b478 <sf_gen_portop6+0x208>
    b2c4:	b	b410 <sf_gen_portop6+0x1a0>
    b2c8:	b	b408 <sf_gen_portop6+0x198>
    b2cc:	b	b3d8 <sf_gen_portop6+0x168>
    b2d0:	b	b410 <sf_gen_portop6+0x1a0>
    b2d4:	b	b2d8 <sf_gen_portop6+0x68>
    b2d8:	mov	r1, #8
    b2dc:	add	r0, r5, #40	; 0x28
    b2e0:	bl	431c <gen_load_macplrel>
    b2e4:	mov	r8, #21
    b2e8:	mov	r9, r0
    b2ec:	bl	29f8 <newchunk.constprop.50>
    b2f0:	mov	r1, #8
    b2f4:	mov	r6, r0
    b2f8:	str	r9, [r0, #4]
    b2fc:	str	r0, [r6, #96]	; 0x60
    b300:	str	r7, [r0, #20]
    b304:	add	r0, r5, #42	; 0x2a
    b308:	str	r8, [r6, #8]
    b30c:	bl	431c <gen_load_macplrel>
    b310:	mov	r9, r0
    b314:	bl	29f8 <newchunk.constprop.50>
    b318:	mov	r5, r0
    b31c:	str	r8, [r0, #8]
    b320:	mov	r1, r0
    b324:	str	r0, [r5, #96]	; 0x60
    b328:	str	r9, [r0, #4]
    b32c:	str	r7, [r0, #20]
    b330:	mov	r0, r6
    b334:	bl	6390 <sf_gen_and>
    b338:	ldr	r0, [r5, #96]	; 0x60
    b33c:	mov	r3, r4
    b340:	b	b358 <sf_gen_portop6+0xe8>
    b344:	ldr	r2, [r3, #60]	; 0x3c
    b348:	str	r0, [r3, #60]	; 0x3c
    b34c:	cmp	r2, #0
    b350:	beq	b374 <sf_gen_portop6+0x104>
    b354:	mov	r3, r2
    b358:	ldr	r2, [r3, #44]	; 0x2c
    b35c:	cmp	r2, #0
    b360:	beq	b344 <sf_gen_portop6+0xd4>
    b364:	ldr	r2, [r3, #84]	; 0x54
    b368:	str	r0, [r3, #84]	; 0x54
    b36c:	cmp	r2, #0
    b370:	bne	b354 <sf_gen_portop6+0xe4>
    b374:	ldr	r2, [r4, #44]	; 0x2c
    b378:	mov	r3, r5
    b37c:	clz	r2, r2
    b380:	lsr	r2, r2, #5
    b384:	str	r2, [r4, #44]	; 0x2c
    b388:	ldr	r2, [r5, #44]	; 0x2c
    b38c:	clz	r2, r2
    b390:	lsr	r2, r2, #5
    b394:	str	r2, [r5, #44]	; 0x2c
    b398:	ldr	r2, [r3, #44]	; 0x2c
    b39c:	cmp	r2, #0
    b3a0:	addeq	r2, r3, #60	; 0x3c
    b3a4:	addne	r2, r3, #84	; 0x54
    b3a8:	ldr	r3, [r2]
    b3ac:	cmp	r3, #0
    b3b0:	bne	b398 <sf_gen_portop6+0x128>
    b3b4:	str	r4, [r2]
    b3b8:	ldr	r3, [r5, #44]	; 0x2c
    b3bc:	clz	r3, r3
    b3c0:	lsr	r3, r3, #5
    b3c4:	str	r3, [r5, #44]	; 0x2c
    b3c8:	ldr	r3, [r4, #96]	; 0x60
    b3cc:	mov	r0, r5
    b3d0:	str	r3, [r5, #96]	; 0x60
    b3d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b3d8:	add	r0, r5, #42	; 0x2a
    b3dc:	mov	r1, #8
    b3e0:	bl	431c <gen_load_macplrel>
    b3e4:	mov	r5, r0
    b3e8:	bl	29f8 <newchunk.constprop.50>
    b3ec:	mov	r3, #21
    b3f0:	str	r5, [r0, #4]
    b3f4:	str	r0, [r0, #96]	; 0x60
    b3f8:	str	r7, [r0, #20]
    b3fc:	str	r3, [r0, #8]
    b400:	mov	r5, r0
    b404:	b	b33c <sf_gen_portop6+0xcc>
    b408:	add	r0, r5, #40	; 0x28
    b40c:	b	b3dc <sf_gen_portop6+0x16c>
    b410:	mov	r1, #8
    b414:	add	r0, r5, #40	; 0x28
    b418:	bl	431c <gen_load_macplrel>
    b41c:	mov	r8, #21
    b420:	mov	r9, r0
    b424:	bl	29f8 <newchunk.constprop.50>
    b428:	mov	r1, #8
    b42c:	mov	r6, r0
    b430:	str	r9, [r0, #4]
    b434:	str	r0, [r6, #96]	; 0x60
    b438:	str	r7, [r0, #20]
    b43c:	add	r0, r5, #42	; 0x2a
    b440:	str	r8, [r6, #8]
    b444:	bl	431c <gen_load_macplrel>
    b448:	mov	r9, r0
    b44c:	bl	29f8 <newchunk.constprop.50>
    b450:	mov	r5, r0
    b454:	str	r8, [r0, #8]
    b458:	mov	r1, r0
    b45c:	str	r0, [r5, #96]	; 0x60
    b460:	str	r9, [r0, #4]
    b464:	str	r7, [r0, #20]
    b468:	mov	r0, r6
    b46c:	bl	6fd4 <sf_gen_or>
    b470:	ldr	r0, [r5, #96]	; 0x60
    b474:	b	b33c <sf_gen_portop6+0xcc>
    b478:	bl	f18 <abort@plt>
    b47c:	.word	0x000330f0

0000b480 <sf_gen_portrangeop>:
    b480:	ldr	ip, [pc, #644]	; b70c <sf_gen_portrangeop+0x28c>
    b484:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b488:	add	ip, pc, ip
    b48c:	sub	sp, sp, #8
    b490:	ldr	r4, [ip, #868]	; 0x364
    b494:	mov	r5, r0
    b498:	mov	r6, r1
    b49c:	add	r0, r4, #9
    b4a0:	mov	r1, #16
    b4a4:	mov	sl, r2
    b4a8:	mov	r8, r3
    b4ac:	bl	431c <gen_load_macplrel>
    b4b0:	mov	r9, r0
    b4b4:	bl	29f8 <newchunk.constprop.50>
    b4b8:	mov	r3, #21
    b4bc:	mov	r1, #8
    b4c0:	mov	r7, r0
    b4c4:	str	sl, [r0, #20]
    b4c8:	str	r3, [r7, #8]
    b4cc:	add	r0, r4, #6
    b4d0:	str	r9, [r7, #4]
    b4d4:	str	r7, [r7, #96]	; 0x60
    b4d8:	bl	431c <gen_load_macplrel>
    b4dc:	mov	r9, r0
    b4e0:	bl	29f8 <newchunk.constprop.50>
    b4e4:	ldr	r2, [pc, #548]	; b710 <sf_gen_portrangeop+0x290>
    b4e8:	mov	r1, #69	; 0x45
    b4ec:	ldr	r3, [r0, #44]	; 0x2c
    b4f0:	clz	r3, r3
    b4f4:	lsr	r3, r3, #5
    b4f8:	str	r2, [r0, #20]
    b4fc:	mov	r4, r0
    b500:	str	r9, [r0, #4]
    b504:	str	r0, [r0, #96]	; 0x60
    b508:	str	r1, [r0, #8]
    b50c:	str	r3, [r0, #44]	; 0x2c
    b510:	mov	r2, r7
    b514:	b	b52c <sf_gen_portrangeop+0xac>
    b518:	ldr	r1, [r2, #60]	; 0x3c
    b51c:	str	r4, [r2, #60]	; 0x3c
    b520:	cmp	r1, #0
    b524:	beq	b548 <sf_gen_portrangeop+0xc8>
    b528:	mov	r2, r1
    b52c:	ldr	r3, [r2, #44]	; 0x2c
    b530:	cmp	r3, #0
    b534:	beq	b518 <sf_gen_portrangeop+0x98>
    b538:	ldr	r1, [r2, #84]	; 0x54
    b53c:	str	r4, [r2, #84]	; 0x54
    b540:	cmp	r1, #0
    b544:	bne	b528 <sf_gen_portrangeop+0xa8>
    b548:	ldr	r3, [r7, #44]	; 0x2c
    b54c:	mov	r2, r4
    b550:	clz	r3, r3
    b554:	lsr	r3, r3, #5
    b558:	str	r3, [r7, #44]	; 0x2c
    b55c:	ldr	r3, [r4, #44]	; 0x2c
    b560:	clz	r3, r3
    b564:	lsr	r3, r3, #5
    b568:	str	r4, [sp, #4]
    b56c:	str	r3, [r4, #44]	; 0x2c
    b570:	ldr	r1, [r2, #44]	; 0x2c
    b574:	cmp	r1, #0
    b578:	addeq	r1, r2, #60	; 0x3c
    b57c:	addne	r1, r2, #84	; 0x54
    b580:	ldr	r2, [r1]
    b584:	cmp	r2, #0
    b588:	bne	b570 <sf_gen_portrangeop+0xf0>
    b58c:	str	r7, [r1]
    b590:	ldr	r3, [r4, #44]	; 0x2c
    b594:	clz	r3, r3
    b598:	lsr	r3, r3, #5
    b59c:	str	r3, [r4, #44]	; 0x2c
    b5a0:	ldr	r3, [r7, #96]	; 0x60
    b5a4:	str	r3, [r4, #96]	; 0x60
    b5a8:	cmp	r8, #4
    b5ac:	addls	pc, pc, r8, lsl #2
    b5b0:	b	b708 <sf_gen_portrangeop+0x288>
    b5b4:	b	b6d0 <sf_gen_portrangeop+0x250>
    b5b8:	b	b6b8 <sf_gen_portrangeop+0x238>
    b5bc:	b	b6a0 <sf_gen_portrangeop+0x220>
    b5c0:	b	b6d0 <sf_gen_portrangeop+0x250>
    b5c4:	b	b5c8 <sf_gen_portrangeop+0x148>
    b5c8:	mov	r1, r5
    b5cc:	mov	r2, r6
    b5d0:	mov	r0, #0
    b5d4:	bl	4088 <gen_portrangeatom>
    b5d8:	mov	r1, r5
    b5dc:	mov	r2, r6
    b5e0:	mov	r7, r0
    b5e4:	mov	r0, #2
    b5e8:	bl	4088 <gen_portrangeatom>
    b5ec:	mov	r5, r0
    b5f0:	mov	r1, r0
    b5f4:	mov	r0, r7
    b5f8:	bl	6390 <sf_gen_and>
    b5fc:	ldr	r1, [r5, #96]	; 0x60
    b600:	mov	r3, r4
    b604:	b	b61c <sf_gen_portrangeop+0x19c>
    b608:	ldr	r2, [r3, #60]	; 0x3c
    b60c:	str	r1, [r3, #60]	; 0x3c
    b610:	cmp	r2, #0
    b614:	beq	b638 <sf_gen_portrangeop+0x1b8>
    b618:	mov	r3, r2
    b61c:	ldr	r2, [r3, #44]	; 0x2c
    b620:	cmp	r2, #0
    b624:	beq	b608 <sf_gen_portrangeop+0x188>
    b628:	ldr	r2, [r3, #84]	; 0x54
    b62c:	str	r1, [r3, #84]	; 0x54
    b630:	cmp	r2, #0
    b634:	bne	b618 <sf_gen_portrangeop+0x198>
    b638:	ldr	r2, [r4, #44]	; 0x2c
    b63c:	mov	r3, r5
    b640:	clz	r2, r2
    b644:	lsr	r2, r2, #5
    b648:	str	r2, [r4, #44]	; 0x2c
    b64c:	ldr	r2, [r5, #44]	; 0x2c
    b650:	clz	r2, r2
    b654:	lsr	r2, r2, #5
    b658:	str	r2, [r5, #44]	; 0x2c
    b65c:	ldr	r2, [r3, #44]	; 0x2c
    b660:	cmp	r2, #0
    b664:	addeq	r2, r3, #60	; 0x3c
    b668:	addne	r2, r3, #84	; 0x54
    b66c:	ldr	r3, [r2]
    b670:	cmp	r3, #0
    b674:	bne	b65c <sf_gen_portrangeop+0x1dc>
    b678:	str	r4, [r2]
    b67c:	ldr	r3, [r5, #44]	; 0x2c
    b680:	clz	r3, r3
    b684:	lsr	r3, r3, #5
    b688:	str	r3, [r5, #44]	; 0x2c
    b68c:	ldr	r3, [r4, #96]	; 0x60
    b690:	mov	r0, r5
    b694:	str	r3, [r5, #96]	; 0x60
    b698:	add	sp, sp, #8
    b69c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b6a0:	mov	r1, r5
    b6a4:	mov	r2, r6
    b6a8:	mov	r0, #2
    b6ac:	bl	4088 <gen_portrangeatom>
    b6b0:	mov	r5, r0
    b6b4:	b	b5fc <sf_gen_portrangeop+0x17c>
    b6b8:	mov	r1, r5
    b6bc:	mov	r2, r6
    b6c0:	mov	r0, #0
    b6c4:	bl	4088 <gen_portrangeatom>
    b6c8:	mov	r5, r0
    b6cc:	b	b5fc <sf_gen_portrangeop+0x17c>
    b6d0:	mov	r2, r6
    b6d4:	mov	r1, r5
    b6d8:	mov	r0, #0
    b6dc:	bl	4088 <gen_portrangeatom>
    b6e0:	mov	r1, r5
    b6e4:	mov	r2, r6
    b6e8:	mov	r7, r0
    b6ec:	mov	r0, #2
    b6f0:	bl	4088 <gen_portrangeatom>
    b6f4:	mov	r5, r0
    b6f8:	mov	r1, r0
    b6fc:	mov	r0, r7
    b700:	bl	6fd4 <sf_gen_or>
    b704:	b	b5fc <sf_gen_portrangeop+0x17c>
    b708:	bl	f18 <abort@plt>
    b70c:	.word	0x00032ee0
    b710:	.word	0x00001fff

0000b714 <gen_portrange>:
    b714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b718:	mov	r6, r0
    b71c:	mov	r0, #2048	; 0x800
    b720:	mov	r4, r2
    b724:	mov	r7, r1
    b728:	mov	r8, r3
    b72c:	bl	7c38 <gen_linktype>
    b730:	cmp	r4, #6
    b734:	mov	r5, r0
    b738:	beq	b85c <gen_portrange+0x148>
    b73c:	bgt	b848 <gen_portrange+0x134>
    b740:	cmn	r4, #1
    b744:	bne	b858 <gen_portrange+0x144>
    b748:	mov	r3, r8
    b74c:	mov	r2, #6
    b750:	mov	r1, r7
    b754:	mov	r0, r6
    b758:	bl	b480 <sf_gen_portrangeop>
    b75c:	mov	r3, r8
    b760:	mov	r2, #17
    b764:	mov	r1, r7
    b768:	mov	r9, r0
    b76c:	mov	r0, r6
    b770:	bl	b480 <sf_gen_portrangeop>
    b774:	mov	r1, r0
    b778:	mov	r4, r0
    b77c:	mov	r0, r9
    b780:	bl	6fd4 <sf_gen_or>
    b784:	mov	r1, r7
    b788:	mov	r3, r8
    b78c:	mov	r0, r6
    b790:	mov	r2, #132	; 0x84
    b794:	bl	b480 <sf_gen_portrangeop>
    b798:	mov	r1, r4
    b79c:	bl	6fd4 <sf_gen_or>
    b7a0:	cmp	r5, #0
    b7a4:	ldr	r1, [r4, #96]	; 0x60
    b7a8:	beq	b7e4 <gen_portrange+0xd0>
    b7ac:	mov	r3, r5
    b7b0:	b	b7c8 <gen_portrange+0xb4>
    b7b4:	ldr	r2, [r3, #84]	; 0x54
    b7b8:	str	r1, [r3, #84]	; 0x54
    b7bc:	cmp	r2, #0
    b7c0:	beq	b7e4 <gen_portrange+0xd0>
    b7c4:	mov	r3, r2
    b7c8:	ldr	r2, [r3, #44]	; 0x2c
    b7cc:	cmp	r2, #0
    b7d0:	bne	b7b4 <gen_portrange+0xa0>
    b7d4:	ldr	r2, [r3, #60]	; 0x3c
    b7d8:	str	r1, [r3, #60]	; 0x3c
    b7dc:	cmp	r2, #0
    b7e0:	bne	b7c4 <gen_portrange+0xb0>
    b7e4:	ldr	r3, [r5, #44]	; 0x2c
    b7e8:	clz	r3, r3
    b7ec:	lsr	r3, r3, #5
    b7f0:	str	r3, [r5, #44]	; 0x2c
    b7f4:	ldr	r3, [r4, #44]	; 0x2c
    b7f8:	clz	r3, r3
    b7fc:	lsr	r3, r3, #5
    b800:	str	r3, [r4, #44]	; 0x2c
    b804:	mov	r3, r4
    b808:	ldr	r2, [r3, #44]	; 0x2c
    b80c:	cmp	r2, #0
    b810:	addeq	r2, r3, #60	; 0x3c
    b814:	addne	r2, r3, #84	; 0x54
    b818:	ldr	r3, [r2]
    b81c:	cmp	r3, #0
    b820:	bne	b808 <gen_portrange+0xf4>
    b824:	str	r5, [r2]
    b828:	ldr	r3, [r4, #44]	; 0x2c
    b82c:	clz	r3, r3
    b830:	lsr	r3, r3, #5
    b834:	str	r3, [r4, #44]	; 0x2c
    b838:	ldr	r3, [r5, #96]	; 0x60
    b83c:	mov	r0, r4
    b840:	str	r3, [r4, #96]	; 0x60
    b844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b848:	cmp	r4, #17
    b84c:	beq	b85c <gen_portrange+0x148>
    b850:	cmp	r4, #132	; 0x84
    b854:	beq	b85c <gen_portrange+0x148>
    b858:	bl	f18 <abort@plt>
    b85c:	mov	r2, r4
    b860:	mov	r3, r8
    b864:	mov	r1, r7
    b868:	mov	r0, r6
    b86c:	bl	b480 <sf_gen_portrangeop>
    b870:	mov	r4, r0
    b874:	b	b7a0 <gen_portrange+0x8c>

0000b878 <sf_gen_portrangeop6>:
    b878:	ldr	ip, [pc, #420]	; ba24 <sf_gen_portrangeop6+0x1ac>
    b87c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    b880:	add	ip, pc, ip
    b884:	mov	r6, r0
    b888:	ldr	r0, [ip, #868]	; 0x364
    b88c:	mov	r7, r1
    b890:	add	r0, r0, #6
    b894:	mov	r1, #16
    b898:	mov	r9, r2
    b89c:	mov	r5, r3
    b8a0:	bl	431c <gen_load_macplrel>
    b8a4:	mov	r8, r0
    b8a8:	bl	29f8 <newchunk.constprop.50>
    b8ac:	mov	r3, #21
    b8b0:	mov	r4, r0
    b8b4:	str	r9, [r0, #20]
    b8b8:	str	r0, [r0, #96]	; 0x60
    b8bc:	str	r8, [r0, #4]
    b8c0:	str	r3, [r0, #8]
    b8c4:	cmp	r5, #4
    b8c8:	addls	pc, pc, r5, lsl #2
    b8cc:	b	ba20 <sf_gen_portrangeop6+0x1a8>
    b8d0:	b	b9e8 <sf_gen_portrangeop6+0x170>
    b8d4:	b	b9d0 <sf_gen_portrangeop6+0x158>
    b8d8:	b	b9b8 <sf_gen_portrangeop6+0x140>
    b8dc:	b	b9e8 <sf_gen_portrangeop6+0x170>
    b8e0:	b	b8e4 <sf_gen_portrangeop6+0x6c>
    b8e4:	mov	r2, r7
    b8e8:	mov	r1, r6
    b8ec:	mov	r0, #0
    b8f0:	bl	4970 <gen_portrangeatom6>
    b8f4:	mov	r1, r6
    b8f8:	mov	r2, r7
    b8fc:	mov	r8, r0
    b900:	mov	r0, #2
    b904:	bl	4970 <gen_portrangeatom6>
    b908:	mov	r5, r0
    b90c:	mov	r1, r0
    b910:	mov	r0, r8
    b914:	bl	6390 <sf_gen_and>
    b918:	ldr	r1, [r5, #96]	; 0x60
    b91c:	mov	r3, r4
    b920:	b	b938 <sf_gen_portrangeop6+0xc0>
    b924:	ldr	r2, [r3, #60]	; 0x3c
    b928:	str	r1, [r3, #60]	; 0x3c
    b92c:	cmp	r2, #0
    b930:	beq	b954 <sf_gen_portrangeop6+0xdc>
    b934:	mov	r3, r2
    b938:	ldr	r2, [r3, #44]	; 0x2c
    b93c:	cmp	r2, #0
    b940:	beq	b924 <sf_gen_portrangeop6+0xac>
    b944:	ldr	r2, [r3, #84]	; 0x54
    b948:	str	r1, [r3, #84]	; 0x54
    b94c:	cmp	r2, #0
    b950:	bne	b934 <sf_gen_portrangeop6+0xbc>
    b954:	ldr	r2, [r4, #44]	; 0x2c
    b958:	mov	r3, r5
    b95c:	clz	r2, r2
    b960:	lsr	r2, r2, #5
    b964:	str	r2, [r4, #44]	; 0x2c
    b968:	ldr	r2, [r5, #44]	; 0x2c
    b96c:	clz	r2, r2
    b970:	lsr	r2, r2, #5
    b974:	str	r2, [r5, #44]	; 0x2c
    b978:	ldr	r2, [r3, #44]	; 0x2c
    b97c:	cmp	r2, #0
    b980:	addeq	r2, r3, #60	; 0x3c
    b984:	addne	r2, r3, #84	; 0x54
    b988:	ldr	r3, [r2]
    b98c:	cmp	r3, #0
    b990:	bne	b978 <sf_gen_portrangeop6+0x100>
    b994:	str	r4, [r2]
    b998:	ldr	r3, [r5, #44]	; 0x2c
    b99c:	clz	r3, r3
    b9a0:	lsr	r3, r3, #5
    b9a4:	str	r3, [r5, #44]	; 0x2c
    b9a8:	ldr	r3, [r4, #96]	; 0x60
    b9ac:	mov	r0, r5
    b9b0:	str	r3, [r5, #96]	; 0x60
    b9b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    b9b8:	mov	r2, r7
    b9bc:	mov	r1, r6
    b9c0:	mov	r0, #2
    b9c4:	bl	4970 <gen_portrangeatom6>
    b9c8:	mov	r5, r0
    b9cc:	b	b918 <sf_gen_portrangeop6+0xa0>
    b9d0:	mov	r2, r7
    b9d4:	mov	r1, r6
    b9d8:	mov	r0, #0
    b9dc:	bl	4970 <gen_portrangeatom6>
    b9e0:	mov	r5, r0
    b9e4:	b	b918 <sf_gen_portrangeop6+0xa0>
    b9e8:	mov	r2, r7
    b9ec:	mov	r1, r6
    b9f0:	mov	r0, #0
    b9f4:	bl	4970 <gen_portrangeatom6>
    b9f8:	mov	r1, r6
    b9fc:	mov	r2, r7
    ba00:	mov	r8, r0
    ba04:	mov	r0, #2
    ba08:	bl	4970 <gen_portrangeatom6>
    ba0c:	mov	r5, r0
    ba10:	mov	r1, r0
    ba14:	mov	r0, r8
    ba18:	bl	6fd4 <sf_gen_or>
    ba1c:	b	b918 <sf_gen_portrangeop6+0xa0>
    ba20:	bl	f18 <abort@plt>
    ba24:	.word	0x00032ae8

0000ba28 <gen_portrange6>:
    ba28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ba2c:	mov	r6, r0
    ba30:	ldr	r0, [pc, #340]	; bb8c <gen_portrange6+0x164>
    ba34:	mov	r4, r2
    ba38:	mov	r7, r1
    ba3c:	mov	r8, r3
    ba40:	bl	7c38 <gen_linktype>
    ba44:	cmp	r4, #6
    ba48:	mov	r5, r0
    ba4c:	beq	bb70 <gen_portrange6+0x148>
    ba50:	bgt	bb5c <gen_portrange6+0x134>
    ba54:	cmn	r4, #1
    ba58:	bne	bb6c <gen_portrange6+0x144>
    ba5c:	mov	r3, r8
    ba60:	mov	r2, #6
    ba64:	mov	r1, r7
    ba68:	mov	r0, r6
    ba6c:	bl	b878 <sf_gen_portrangeop6>
    ba70:	mov	r3, r8
    ba74:	mov	r2, #17
    ba78:	mov	r1, r7
    ba7c:	mov	r9, r0
    ba80:	mov	r0, r6
    ba84:	bl	b878 <sf_gen_portrangeop6>
    ba88:	mov	r1, r0
    ba8c:	mov	r4, r0
    ba90:	mov	r0, r9
    ba94:	bl	6fd4 <sf_gen_or>
    ba98:	mov	r1, r7
    ba9c:	mov	r3, r8
    baa0:	mov	r0, r6
    baa4:	mov	r2, #132	; 0x84
    baa8:	bl	b878 <sf_gen_portrangeop6>
    baac:	mov	r1, r4
    bab0:	bl	6fd4 <sf_gen_or>
    bab4:	cmp	r5, #0
    bab8:	ldr	r1, [r4, #96]	; 0x60
    babc:	beq	baf8 <gen_portrange6+0xd0>
    bac0:	mov	r3, r5
    bac4:	b	badc <gen_portrange6+0xb4>
    bac8:	ldr	r2, [r3, #84]	; 0x54
    bacc:	str	r1, [r3, #84]	; 0x54
    bad0:	cmp	r2, #0
    bad4:	beq	baf8 <gen_portrange6+0xd0>
    bad8:	mov	r3, r2
    badc:	ldr	r2, [r3, #44]	; 0x2c
    bae0:	cmp	r2, #0
    bae4:	bne	bac8 <gen_portrange6+0xa0>
    bae8:	ldr	r2, [r3, #60]	; 0x3c
    baec:	str	r1, [r3, #60]	; 0x3c
    baf0:	cmp	r2, #0
    baf4:	bne	bad8 <gen_portrange6+0xb0>
    baf8:	ldr	r3, [r5, #44]	; 0x2c
    bafc:	clz	r3, r3
    bb00:	lsr	r3, r3, #5
    bb04:	str	r3, [r5, #44]	; 0x2c
    bb08:	ldr	r3, [r4, #44]	; 0x2c
    bb0c:	clz	r3, r3
    bb10:	lsr	r3, r3, #5
    bb14:	str	r3, [r4, #44]	; 0x2c
    bb18:	mov	r3, r4
    bb1c:	ldr	r2, [r3, #44]	; 0x2c
    bb20:	cmp	r2, #0
    bb24:	addeq	r2, r3, #60	; 0x3c
    bb28:	addne	r2, r3, #84	; 0x54
    bb2c:	ldr	r3, [r2]
    bb30:	cmp	r3, #0
    bb34:	bne	bb1c <gen_portrange6+0xf4>
    bb38:	str	r5, [r2]
    bb3c:	ldr	r3, [r4, #44]	; 0x2c
    bb40:	clz	r3, r3
    bb44:	lsr	r3, r3, #5
    bb48:	str	r3, [r4, #44]	; 0x2c
    bb4c:	ldr	r3, [r5, #96]	; 0x60
    bb50:	mov	r0, r4
    bb54:	str	r3, [r4, #96]	; 0x60
    bb58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    bb5c:	cmp	r4, #17
    bb60:	beq	bb70 <gen_portrange6+0x148>
    bb64:	cmp	r4, #132	; 0x84
    bb68:	beq	bb70 <gen_portrange6+0x148>
    bb6c:	bl	f18 <abort@plt>
    bb70:	mov	r2, r4
    bb74:	mov	r3, r8
    bb78:	mov	r1, r7
    bb7c:	mov	r0, r6
    bb80:	bl	b878 <sf_gen_portrangeop6>
    bb84:	mov	r4, r0
    bb88:	b	bab4 <gen_portrange6+0x8c>
    bb8c:	.word	0x000086dd

0000bb90 <sf_gen_scode>:
    bb90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bb94:	uxtb	r6, r1
    bb98:	sub	sp, sp, #60	; 0x3c
    bb9c:	cmp	r6, #4
    bba0:	str	r1, [sp, #20]
    bba4:	beq	c048 <sf_gen_scode+0x4b8>
    bba8:	lsr	r4, r1, #8
    bbac:	lsr	r5, r1, #16
    bbb0:	uxtb	r4, r4
    bbb4:	uxtb	r5, r5
    bbb8:	mov	r8, r0
    bbbc:	bls	bbe8 <sf_gen_scode+0x58>
    bbc0:	cmp	r6, #6
    bbc4:	beq	c084 <sf_gen_scode+0x4f4>
    bbc8:	bcc	c054 <sf_gen_scode+0x4c4>
    bbcc:	cmp	r6, #7
    bbd0:	beq	bf40 <sf_gen_scode+0x3b0>
    bbd4:	cmp	r6, #255	; 0xff
    bbd8:	bne	bff8 <sf_gen_scode+0x468>
    bbdc:	ldr	r0, [pc, #2628]	; c628 <sf_gen_scode+0xa98>
    bbe0:	add	r0, pc, r0
    bbe4:	bl	2370 <sf_bpf_error>
    bbe8:	cmp	r6, #2
    bbec:	beq	bffc <sf_gen_scode+0x46c>
    bbf0:	bhi	bcf0 <sf_gen_scode+0x160>
    bbf4:	cmp	r4, #1
    bbf8:	beq	c204 <sf_gen_scode+0x674>
    bbfc:	cmp	r4, #12
    bc00:	beq	c2d0 <sf_gen_scode+0x740>
    bc04:	add	sl, sp, #40	; 0x28
    bc08:	mvn	r3, #0
    bc0c:	str	r3, [sl, #4]
    bc10:	str	r3, [sp, #40]	; 0x28
    bc14:	str	r3, [sl, #8]
    bc18:	str	r3, [sl, #12]
    bc1c:	bl	10ffc <pcap_nametoaddrinfo>
    bc20:	subs	fp, r0, #0
    bc24:	beq	c4e4 <sf_gen_scode+0x954>
    bc28:	ldr	r3, [pc, #2556]	; c62c <sf_gen_scode+0xa9c>
    bc2c:	add	r3, pc, r3
    bc30:	ldr	r7, [r3, #952]	; 0x3b8
    bc34:	str	fp, [r3, #904]	; 0x388
    bc38:	cmp	r4, #0
    bc3c:	cmneq	r7, #1
    bc40:	moveq	r7, #1
    bc44:	movne	r7, #0
    bc48:	bne	c0b4 <sf_gen_scode+0x524>
    bc4c:	mov	r3, #17
    bc50:	str	r3, [sp, #12]
    bc54:	mov	r3, #2
    bc58:	str	r3, [sp, #8]
    bc5c:	mov	r9, fp
    bc60:	mov	r7, #0
    bc64:	str	r4, [sp, #16]
    bc68:	b	bcbc <sf_gen_scode+0x12c>
    bc6c:	cmp	r3, #10
    bc70:	bne	bcb0 <sf_gen_scode+0x120>
    bc74:	ldr	r0, [r9, #20]
    bc78:	mov	r3, r5
    bc7c:	add	r0, r0, #8
    bc80:	str	r6, [sp]
    bc84:	ldr	r2, [sp, #12]
    bc88:	mov	r1, sl
    bc8c:	bl	a5a0 <gen_host6>
    bc90:	mov	r4, r0
    bc94:	cmp	r7, #0
    bc98:	moveq	r7, r4
    bc9c:	beq	bcb0 <sf_gen_scode+0x120>
    bca0:	mov	r0, r7
    bca4:	mov	r1, r4
    bca8:	bl	6fd4 <sf_gen_or>
    bcac:	mov	r7, r4
    bcb0:	ldr	r9, [r9, #28]
    bcb4:	cmp	r9, #0
    bcb8:	beq	c27c <sf_gen_scode+0x6ec>
    bcbc:	ldr	r3, [r9, #4]
    bcc0:	cmp	r3, #2
    bcc4:	bne	bc6c <sf_gen_scode+0xdc>
    bcc8:	ldr	r1, [r9, #20]
    bccc:	mov	r3, r5
    bcd0:	ldr	r2, [sp, #8]
    bcd4:	ldr	r0, [r1, #4]
    bcd8:	mvn	r1, #0
    bcdc:	rev	r0, r0
    bce0:	str	r6, [sp]
    bce4:	bl	94a8 <gen_host>
    bce8:	mov	r4, r0
    bcec:	b	bc94 <sf_gen_scode+0x104>
    bcf0:	cmp	r4, #0
    bcf4:	beq	c15c <sf_gen_scode+0x5cc>
    bcf8:	sub	r3, r4, #5
    bcfc:	uxtb	r3, r3
    bd00:	cmp	r3, #2
    bd04:	bhi	c5dc <sf_gen_scode+0xa4c>
    bd08:	add	r2, sp, #32
    bd0c:	add	r1, sp, #28
    bd10:	bl	11068 <pcap_nametoport>
    bd14:	cmp	r0, #0
    bd18:	beq	c170 <sf_gen_scode+0x5e0>
    bd1c:	cmp	r4, #7
    bd20:	beq	c1d4 <sf_gen_scode+0x644>
    bd24:	cmp	r4, #6
    bd28:	beq	c13c <sf_gen_scode+0x5ac>
    bd2c:	cmp	r4, #5
    bd30:	bne	c564 <sf_gen_scode+0x9d4>
    bd34:	ldr	r3, [sp, #32]
    bd38:	cmp	r3, #17
    bd3c:	beq	c554 <sf_gen_scode+0x9c4>
    bd40:	cmp	r3, #6
    bd44:	beq	c4b4 <sf_gen_scode+0x924>
    bd48:	mov	r4, #132	; 0x84
    bd4c:	str	r4, [sp, #32]
    bd50:	mov	r0, #2048	; 0x800
    bd54:	ldr	r8, [sp, #28]
    bd58:	bl	7c38 <gen_linktype>
    bd5c:	mov	r6, r0
    bd60:	mov	r1, r4
    bd64:	mov	r0, r8
    bd68:	mov	r2, r5
    bd6c:	bl	ae38 <sf_gen_portop>
    bd70:	mov	r7, r0
    bd74:	cmp	r6, #0
    bd78:	ldr	r1, [r7, #96]	; 0x60
    bd7c:	beq	bdb8 <sf_gen_scode+0x228>
    bd80:	mov	r3, r6
    bd84:	b	bd9c <sf_gen_scode+0x20c>
    bd88:	ldr	r2, [r3, #84]	; 0x54
    bd8c:	str	r1, [r3, #84]	; 0x54
    bd90:	cmp	r2, #0
    bd94:	beq	bdb8 <sf_gen_scode+0x228>
    bd98:	mov	r3, r2
    bd9c:	ldr	r2, [r3, #44]	; 0x2c
    bda0:	cmp	r2, #0
    bda4:	bne	bd88 <sf_gen_scode+0x1f8>
    bda8:	ldr	r2, [r3, #60]	; 0x3c
    bdac:	str	r1, [r3, #60]	; 0x3c
    bdb0:	cmp	r2, #0
    bdb4:	bne	bd98 <sf_gen_scode+0x208>
    bdb8:	ldr	r3, [r6, #44]	; 0x2c
    bdbc:	clz	r3, r3
    bdc0:	lsr	r3, r3, #5
    bdc4:	str	r3, [r6, #44]	; 0x2c
    bdc8:	ldr	r3, [r7, #44]	; 0x2c
    bdcc:	clz	r3, r3
    bdd0:	lsr	r3, r3, #5
    bdd4:	str	r3, [r7, #44]	; 0x2c
    bdd8:	mov	r3, r7
    bddc:	str	r7, [sp, #36]	; 0x24
    bde0:	ldr	r2, [r3, #44]	; 0x2c
    bde4:	cmp	r2, #0
    bde8:	addeq	r2, r3, #60	; 0x3c
    bdec:	addne	r2, r3, #84	; 0x54
    bdf0:	ldr	r3, [r2]
    bdf4:	cmp	r3, #0
    bdf8:	bne	bde0 <sf_gen_scode+0x250>
    bdfc:	str	r6, [r2]
    be00:	ldr	r3, [r7, #44]	; 0x2c
    be04:	clz	r3, r3
    be08:	lsr	r3, r3, #5
    be0c:	str	r3, [r7, #44]	; 0x2c
    be10:	ldr	r3, [r6, #96]	; 0x60
    be14:	ldr	r0, [pc, #2068]	; c630 <sf_gen_scode+0xaa0>
    be18:	str	r3, [r7, #96]	; 0x60
    be1c:	ldr	r4, [sp, #32]
    be20:	ldr	r8, [sp, #28]
    be24:	bl	7c38 <gen_linktype>
    be28:	cmp	r4, #6
    be2c:	mov	r6, r0
    be30:	beq	c264 <sf_gen_scode+0x6d4>
    be34:	bgt	c254 <sf_gen_scode+0x6c4>
    be38:	cmn	r4, #1
    be3c:	bne	bff8 <sf_gen_scode+0x468>
    be40:	mov	r2, r5
    be44:	mov	r1, #6
    be48:	mov	r0, r8
    be4c:	bl	b270 <sf_gen_portop6>
    be50:	mov	r2, r5
    be54:	mov	r1, #17
    be58:	mov	r9, r0
    be5c:	mov	r0, r8
    be60:	bl	b270 <sf_gen_portop6>
    be64:	mov	r1, r0
    be68:	mov	r4, r0
    be6c:	mov	r0, r9
    be70:	bl	6fd4 <sf_gen_or>
    be74:	mov	r1, #132	; 0x84
    be78:	mov	r2, r5
    be7c:	mov	r0, r8
    be80:	bl	b270 <sf_gen_portop6>
    be84:	mov	r1, r4
    be88:	bl	6fd4 <sf_gen_or>
    be8c:	cmp	r6, #0
    be90:	ldr	r1, [r4, #96]	; 0x60
    be94:	beq	bed0 <sf_gen_scode+0x340>
    be98:	mov	r3, r6
    be9c:	b	beb4 <sf_gen_scode+0x324>
    bea0:	ldr	r2, [r3, #84]	; 0x54
    bea4:	str	r1, [r3, #84]	; 0x54
    bea8:	cmp	r2, #0
    beac:	beq	bed0 <sf_gen_scode+0x340>
    beb0:	mov	r3, r2
    beb4:	ldr	r2, [r3, #44]	; 0x2c
    beb8:	cmp	r2, #0
    bebc:	bne	bea0 <sf_gen_scode+0x310>
    bec0:	ldr	r2, [r3, #60]	; 0x3c
    bec4:	str	r1, [r3, #60]	; 0x3c
    bec8:	cmp	r2, #0
    becc:	bne	beb0 <sf_gen_scode+0x320>
    bed0:	ldr	r3, [r6, #44]	; 0x2c
    bed4:	clz	r3, r3
    bed8:	lsr	r3, r3, #5
    bedc:	str	r3, [r6, #44]	; 0x2c
    bee0:	ldr	r3, [r4, #44]	; 0x2c
    bee4:	clz	r3, r3
    bee8:	lsr	r3, r3, #5
    beec:	str	r3, [r4, #44]	; 0x2c
    bef0:	mov	r3, r4
    bef4:	str	r4, [sp, #40]	; 0x28
    bef8:	ldr	r2, [r3, #44]	; 0x2c
    befc:	cmp	r2, #0
    bf00:	addeq	r2, r3, #60	; 0x3c
    bf04:	addne	r2, r3, #84	; 0x54
    bf08:	ldr	r3, [r2]
    bf0c:	cmp	r3, #0
    bf10:	bne	bef8 <sf_gen_scode+0x368>
    bf14:	str	r6, [r2]
    bf18:	ldr	r3, [r4, #44]	; 0x2c
    bf1c:	clz	r3, r3
    bf20:	lsr	r3, r3, #5
    bf24:	str	r3, [r4, #44]	; 0x2c
    bf28:	ldr	r3, [r6, #96]	; 0x60
    bf2c:	mov	r0, r4
    bf30:	str	r3, [r4, #96]	; 0x60
    bf34:	mov	r1, r7
    bf38:	bl	6fd4 <sf_gen_or>
    bf3c:	b	c03c <sf_gen_scode+0x4ac>
    bf40:	cmp	r4, #0
    bf44:	beq	c180 <sf_gen_scode+0x5f0>
    bf48:	sub	r3, r4, #5
    bf4c:	uxtb	r3, r3
    bf50:	cmp	r3, #2
    bf54:	bhi	c610 <sf_gen_scode+0xa80>
    bf58:	add	r3, sp, #32
    bf5c:	add	r2, sp, #40	; 0x28
    bf60:	add	r1, sp, #36	; 0x24
    bf64:	bl	11134 <pcap_nametoportrange>
    bf68:	cmp	r0, #0
    bf6c:	beq	c198 <sf_gen_scode+0x608>
    bf70:	cmp	r4, #7
    bf74:	beq	c1a8 <sf_gen_scode+0x618>
    bf78:	cmp	r4, #6
    bf7c:	beq	c11c <sf_gen_scode+0x58c>
    bf80:	cmp	r4, #5
    bf84:	bne	c608 <sf_gen_scode+0xa78>
    bf88:	ldr	r3, [sp, #32]
    bf8c:	cmp	r3, #17
    bf90:	beq	c5f8 <sf_gen_scode+0xa68>
    bf94:	cmp	r3, #6
    bf98:	beq	c5e8 <sf_gen_scode+0xa58>
    bf9c:	mov	r3, #132	; 0x84
    bfa0:	mov	r4, r3
    bfa4:	str	r3, [sp, #32]
    bfa8:	mov	r2, r4
    bfac:	mov	r3, r5
    bfb0:	ldr	r1, [sp, #40]	; 0x28
    bfb4:	ldr	r0, [sp, #36]	; 0x24
    bfb8:	bl	b714 <gen_portrange>
    bfbc:	mov	r3, r5
    bfc0:	ldr	r2, [sp, #32]
    bfc4:	ldr	r1, [sp, #40]	; 0x28
    bfc8:	mov	r7, r0
    bfcc:	ldr	r0, [sp, #36]	; 0x24
    bfd0:	bl	ba28 <gen_portrange6>
    bfd4:	mov	r1, r7
    bfd8:	bl	6fd4 <sf_gen_or>
    bfdc:	mov	r0, r7
    bfe0:	add	sp, sp, #60	; 0x3c
    bfe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bfe8:	cmp	r4, #17
    bfec:	beq	bd60 <sf_gen_scode+0x1d0>
    bff0:	cmp	r4, #132	; 0x84
    bff4:	beq	bd60 <sf_gen_scode+0x1d0>
    bff8:	bl	f18 <abort@plt>
    bffc:	bl	11054 <pcap_nametonetaddr>
    c000:	cmp	r0, #0
    c004:	beq	c504 <sf_gen_scode+0x974>
    c008:	tst	r0, #-16777216	; 0xff000000
    c00c:	mvn	r1, #0
    c010:	bne	c024 <sf_gen_scode+0x494>
    c014:	lsl	r0, r0, #8
    c018:	tst	r0, #-16777216	; 0xff000000
    c01c:	lsl	r1, r1, #8
    c020:	beq	c014 <sf_gen_scode+0x484>
    c024:	mov	ip, #2
    c028:	mov	r3, r5
    c02c:	mov	r2, r4
    c030:	str	ip, [sp]
    c034:	bl	94a8 <gen_host>
    c038:	mov	r7, r0
    c03c:	mov	r0, r7
    c040:	add	sp, sp, #60	; 0x3c
    c044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c048:	ldr	r0, [pc, #1508]	; c634 <sf_gen_scode+0xaa4>
    c04c:	add	r0, pc, r0
    c050:	bl	2370 <sf_bpf_error>
    c054:	mov	r1, r4
    c058:	bl	26c4 <lookup_proto>
    c05c:	cmp	r0, #0
    c060:	str	r0, [sp, #32]
    c064:	blt	c4f4 <sf_gen_scode+0x964>
    c068:	mov	r2, r5
    c06c:	mov	r1, r4
    c070:	bl	8b8c <gen_proto>
    c074:	mov	r7, r0
    c078:	mov	r0, r7
    c07c:	add	sp, sp, #60	; 0x3c
    c080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c084:	mov	r1, r4
    c088:	bl	26c4 <lookup_proto>
    c08c:	cmp	r0, #0
    c090:	str	r0, [sp, #32]
    c094:	blt	c4f4 <sf_gen_scode+0x964>
    c098:	mov	r2, r5
    c09c:	mov	r1, r4
    c0a0:	bl	985c <gen_protochain>
    c0a4:	mov	r7, r0
    c0a8:	mov	r0, r7
    c0ac:	add	sp, sp, #60	; 0x3c
    c0b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c0b4:	cmp	r4, #17
    c0b8:	moveq	r9, fp
    c0bc:	streq	r8, [sp, #8]
    c0c0:	beq	c0d4 <sf_gen_scode+0x544>
    c0c4:	b	c438 <sf_gen_scode+0x8a8>
    c0c8:	ldr	r9, [r9, #28]
    c0cc:	cmp	r9, #0
    c0d0:	beq	c2c8 <sf_gen_scode+0x738>
    c0d4:	ldr	r3, [r9, #4]
    c0d8:	cmp	r3, #10
    c0dc:	bne	c0c8 <sf_gen_scode+0x538>
    c0e0:	ldr	r0, [r9, #20]
    c0e4:	mov	r3, r5
    c0e8:	add	r0, r0, #8
    c0ec:	str	r6, [sp]
    c0f0:	mov	r2, r4
    c0f4:	mov	r1, sl
    c0f8:	bl	a5a0 <gen_host6>
    c0fc:	cmp	r7, #0
    c100:	mov	r8, r0
    c104:	beq	c2c0 <sf_gen_scode+0x730>
    c108:	mov	r0, r7
    c10c:	mov	r1, r8
    c110:	bl	6fd4 <sf_gen_or>
    c114:	mov	r7, r8
    c118:	b	c0c8 <sf_gen_scode+0x538>
    c11c:	ldr	r3, [sp, #32]
    c120:	cmp	r3, #17
    c124:	beq	c5f8 <sf_gen_scode+0xa68>
    c128:	cmp	r3, #132	; 0x84
    c12c:	beq	c1c4 <sf_gen_scode+0x634>
    c130:	mov	r3, #6
    c134:	str	r3, [sp, #32]
    c138:	b	bfa8 <sf_gen_scode+0x418>
    c13c:	ldr	r3, [sp, #32]
    c140:	cmp	r3, #17
    c144:	beq	c554 <sf_gen_scode+0x9c4>
    c148:	cmp	r3, #132	; 0x84
    c14c:	beq	c4c4 <sf_gen_scode+0x934>
    c150:	mov	r3, #6
    c154:	str	r3, [sp, #32]
    c158:	b	bd50 <sf_gen_scode+0x1c0>
    c15c:	add	r2, sp, #32
    c160:	add	r1, sp, #28
    c164:	bl	11068 <pcap_nametoport>
    c168:	cmp	r0, #0
    c16c:	bne	c564 <sf_gen_scode+0x9d4>
    c170:	ldr	r0, [pc, #1216]	; c638 <sf_gen_scode+0xaa8>
    c174:	mov	r1, r8
    c178:	add	r0, pc, r0
    c17c:	bl	2370 <sf_bpf_error>
    c180:	add	r3, sp, #32
    c184:	add	r2, sp, #40	; 0x28
    c188:	add	r1, sp, #36	; 0x24
    c18c:	bl	11134 <pcap_nametoportrange>
    c190:	cmp	r0, #0
    c194:	bne	c608 <sf_gen_scode+0xa78>
    c198:	ldr	r0, [pc, #1180]	; c63c <sf_gen_scode+0xaac>
    c19c:	mov	r1, r8
    c1a0:	add	r0, pc, r0
    c1a4:	bl	2370 <sf_bpf_error>
    c1a8:	ldr	r3, [sp, #32]
    c1ac:	cmp	r3, #6
    c1b0:	beq	c5e8 <sf_gen_scode+0xa58>
    c1b4:	cmp	r3, #132	; 0x84
    c1b8:	movne	r4, #17
    c1bc:	strne	r4, [sp, #32]
    c1c0:	bne	bfa8 <sf_gen_scode+0x418>
    c1c4:	ldr	r0, [pc, #1140]	; c640 <sf_gen_scode+0xab0>
    c1c8:	mov	r1, r8
    c1cc:	add	r0, pc, r0
    c1d0:	bl	2370 <sf_bpf_error>
    c1d4:	ldr	r3, [sp, #32]
    c1d8:	cmp	r3, #6
    c1dc:	beq	c4b4 <sf_gen_scode+0x924>
    c1e0:	cmp	r3, #132	; 0x84
    c1e4:	beq	c4c4 <sf_gen_scode+0x934>
    c1e8:	mov	r4, #17
    c1ec:	mov	r0, #2048	; 0x800
    c1f0:	str	r4, [sp, #32]
    c1f4:	ldr	r8, [sp, #28]
    c1f8:	bl	7c38 <gen_linktype>
    c1fc:	mov	r6, r0
    c200:	b	bd60 <sf_gen_scode+0x1d0>
    c204:	ldr	r3, [pc, #1080]	; c644 <sf_gen_scode+0xab4>
    c208:	add	r3, pc, r3
    c20c:	ldr	r3, [r3, #876]	; 0x36c
    c210:	cmp	r3, #119	; 0x77
    c214:	beq	c3b4 <sf_gen_scode+0x824>
    c218:	bgt	c2f0 <sf_gen_scode+0x760>
    c21c:	cmp	r3, #6
    c220:	beq	c3dc <sf_gen_scode+0x84c>
    c224:	ble	c378 <sf_gen_scode+0x7e8>
    c228:	cmp	r3, #10
    c22c:	bne	c400 <sf_gen_scode+0x870>
    c230:	bl	115e4 <pcap_ether_hostton>
    c234:	subs	r4, r0, #0
    c238:	beq	c4d4 <sf_gen_scode+0x944>
    c23c:	mov	r1, r5
    c240:	bl	7064 <gen_fhostop>
    c244:	mov	r7, r0
    c248:	mov	r0, r4
    c24c:	bl	da4 <free@plt>
    c250:	b	c03c <sf_gen_scode+0x4ac>
    c254:	cmp	r4, #17
    c258:	beq	c264 <sf_gen_scode+0x6d4>
    c25c:	cmp	r4, #132	; 0x84
    c260:	bne	bff8 <sf_gen_scode+0x468>
    c264:	mov	r1, r4
    c268:	mov	r2, r5
    c26c:	mov	r0, r8
    c270:	bl	b270 <sf_gen_portop6>
    c274:	mov	r4, r0
    c278:	b	be8c <sf_gen_scode+0x2fc>
    c27c:	ldr	r4, [sp, #16]
    c280:	ldr	r3, [pc, #960]	; c648 <sf_gen_scode+0xab8>
    c284:	mov	r2, #0
    c288:	add	r3, pc, r3
    c28c:	mov	r0, fp
    c290:	str	r2, [r3, #904]	; 0x388
    c294:	bl	edc <freeaddrinfo@plt>
    c298:	cmp	r7, #0
    c29c:	bne	c03c <sf_gen_scode+0x4ac>
    c2a0:	cmp	r4, #0
    c2a4:	bne	c61c <sf_gen_scode+0xa8c>
    c2a8:	ldr	r2, [pc, #924]	; c64c <sf_gen_scode+0xabc>
    c2ac:	add	r2, pc, r2
    c2b0:	ldr	r0, [pc, #920]	; c650 <sf_gen_scode+0xac0>
    c2b4:	mov	r1, r8
    c2b8:	add	r0, pc, r0
    c2bc:	bl	2370 <sf_bpf_error>
    c2c0:	mov	r7, r0
    c2c4:	b	c0c8 <sf_gen_scode+0x538>
    c2c8:	ldr	r8, [sp, #8]
    c2cc:	b	c280 <sf_gen_scode+0x6f0>
    c2d0:	bl	116b8 <__pcap_nametodnaddr>
    c2d4:	str	r6, [sp]
    c2d8:	mov	r3, r5
    c2dc:	mov	r2, r4
    c2e0:	mov	r1, #0
    c2e4:	bl	94a8 <gen_host>
    c2e8:	mov	r7, r0
    c2ec:	b	c03c <sf_gen_scode+0x4ac>
    c2f0:	cmp	r3, #127	; 0x7f
    c2f4:	beq	c3b4 <sf_gen_scode+0x824>
    c2f8:	bgt	c3a4 <sf_gen_scode+0x814>
    c2fc:	cmp	r3, #122	; 0x7a
    c300:	beq	c414 <sf_gen_scode+0x884>
    c304:	cmp	r3, #123	; 0x7b
    c308:	bne	c408 <sf_gen_scode+0x878>
    c30c:	ldr	r3, [pc, #832]	; c654 <sf_gen_scode+0xac4>
    c310:	add	r3, pc, r3
    c314:	ldr	r3, [r3, #920]	; 0x398
    c318:	cmp	r3, #0
    c31c:	beq	c408 <sf_gen_scode+0x878>
    c320:	mov	r2, #65280	; 0xff00
    c324:	mov	r1, #8
    c328:	mov	r0, #4
    c32c:	bl	3e70 <gen_cmp.constprop.42>
    c330:	mov	r4, r0
    c334:	mov	r0, r8
    c338:	ldr	r3, [r4, #44]	; 0x2c
    c33c:	clz	r3, r3
    c340:	lsr	r3, r3, #5
    c344:	str	r3, [r4, #44]	; 0x2c
    c348:	bl	115e4 <pcap_ether_hostton>
    c34c:	subs	r6, r0, #0
    c350:	beq	c514 <sf_gen_scode+0x984>
    c354:	mov	r1, r5
    c358:	bl	72c8 <gen_ehostop>
    c35c:	mov	r1, r0
    c360:	mov	r7, r0
    c364:	mov	r0, r4
    c368:	bl	6390 <sf_gen_and>
    c36c:	mov	r0, r6
    c370:	bl	da4 <free@plt>
    c374:	b	c03c <sf_gen_scode+0x4ac>
    c378:	cmp	r3, #1
    c37c:	bne	c408 <sf_gen_scode+0x878>
    c380:	bl	115e4 <pcap_ether_hostton>
    c384:	subs	r4, r0, #0
    c388:	beq	c514 <sf_gen_scode+0x984>
    c38c:	mov	r1, r5
    c390:	bl	72c8 <gen_ehostop>
    c394:	mov	r7, r0
    c398:	mov	r0, r4
    c39c:	bl	da4 <free@plt>
    c3a0:	b	c03c <sf_gen_scode+0x4ac>
    c3a4:	cmp	r3, #163	; 0xa3
    c3a8:	beq	c3b4 <sf_gen_scode+0x824>
    c3ac:	cmp	r3, #192	; 0xc0
    c3b0:	bne	c408 <sf_gen_scode+0x878>
    c3b4:	mov	r0, r8
    c3b8:	bl	115e4 <pcap_ether_hostton>
    c3bc:	subs	r4, r0, #0
    c3c0:	beq	c534 <sf_gen_scode+0x9a4>
    c3c4:	mov	r1, r5
    c3c8:	bl	76cc <gen_wlanhostop>
    c3cc:	mov	r7, r0
    c3d0:	mov	r0, r4
    c3d4:	bl	da4 <free@plt>
    c3d8:	b	c03c <sf_gen_scode+0x4ac>
    c3dc:	bl	115e4 <pcap_ether_hostton>
    c3e0:	subs	r4, r0, #0
    c3e4:	beq	c524 <sf_gen_scode+0x994>
    c3e8:	mov	r1, r5
    c3ec:	bl	7130 <gen_thostop>
    c3f0:	mov	r7, r0
    c3f4:	mov	r0, r4
    c3f8:	bl	da4 <free@plt>
    c3fc:	b	c03c <sf_gen_scode+0x4ac>
    c400:	cmp	r3, #105	; 0x69
    c404:	beq	c3b4 <sf_gen_scode+0x824>
    c408:	ldr	r0, [pc, #584]	; c658 <sf_gen_scode+0xac8>
    c40c:	add	r0, pc, r0
    c410:	bl	2370 <sf_bpf_error>
    c414:	bl	115e4 <pcap_ether_hostton>
    c418:	subs	r4, r0, #0
    c41c:	beq	c544 <sf_gen_scode+0x9b4>
    c420:	mov	r1, r5
    c424:	bl	71fc <gen_ipfchostop>
    c428:	mov	r7, r0
    c42c:	mov	r0, r4
    c430:	bl	da4 <free@plt>
    c434:	b	c03c <sf_gen_scode+0x4ac>
    c438:	cmp	r4, #2
    c43c:	strne	r4, [sp, #12]
    c440:	strne	r4, [sp, #8]
    c444:	bne	bc5c <sf_gen_scode+0xcc>
    c448:	mov	r9, fp
    c44c:	mov	r7, #0
    c450:	b	c460 <sf_gen_scode+0x8d0>
    c454:	ldr	r9, [r9, #28]
    c458:	cmp	r9, #0
    c45c:	beq	c280 <sf_gen_scode+0x6f0>
    c460:	ldr	r3, [r9, #4]
    c464:	cmp	r3, #2
    c468:	bne	c454 <sf_gen_scode+0x8c4>
    c46c:	ldr	r1, [r9, #20]
    c470:	mov	r3, r5
    c474:	mov	r2, r4
    c478:	ldr	r0, [r1, #4]
    c47c:	mvn	r1, #0
    c480:	rev	r0, r0
    c484:	str	r6, [sp]
    c488:	bl	94a8 <gen_host>
    c48c:	cmp	r7, #0
    c490:	mov	sl, r0
    c494:	beq	c4ac <sf_gen_scode+0x91c>
    c498:	mov	r0, r7
    c49c:	mov	r1, sl
    c4a0:	bl	6fd4 <sf_gen_or>
    c4a4:	mov	r7, sl
    c4a8:	b	c454 <sf_gen_scode+0x8c4>
    c4ac:	mov	r7, r0
    c4b0:	b	c454 <sf_gen_scode+0x8c4>
    c4b4:	ldr	r0, [pc, #416]	; c65c <sf_gen_scode+0xacc>
    c4b8:	mov	r1, r8
    c4bc:	add	r0, pc, r0
    c4c0:	bl	2370 <sf_bpf_error>
    c4c4:	ldr	r0, [pc, #404]	; c660 <sf_gen_scode+0xad0>
    c4c8:	mov	r1, r8
    c4cc:	add	r0, pc, r0
    c4d0:	bl	2370 <sf_bpf_error>
    c4d4:	ldr	r0, [pc, #392]	; c664 <sf_gen_scode+0xad4>
    c4d8:	mov	r1, r8
    c4dc:	add	r0, pc, r0
    c4e0:	bl	2370 <sf_bpf_error>
    c4e4:	ldr	r0, [pc, #380]	; c668 <sf_gen_scode+0xad8>
    c4e8:	mov	r1, r8
    c4ec:	add	r0, pc, r0
    c4f0:	bl	2370 <sf_bpf_error>
    c4f4:	ldr	r0, [pc, #368]	; c66c <sf_gen_scode+0xadc>
    c4f8:	mov	r1, r8
    c4fc:	add	r0, pc, r0
    c500:	bl	2370 <sf_bpf_error>
    c504:	ldr	r0, [pc, #356]	; c670 <sf_gen_scode+0xae0>
    c508:	mov	r1, r8
    c50c:	add	r0, pc, r0
    c510:	bl	2370 <sf_bpf_error>
    c514:	ldr	r0, [pc, #344]	; c674 <sf_gen_scode+0xae4>
    c518:	mov	r1, r8
    c51c:	add	r0, pc, r0
    c520:	bl	2370 <sf_bpf_error>
    c524:	ldr	r0, [pc, #332]	; c678 <sf_gen_scode+0xae8>
    c528:	mov	r1, r8
    c52c:	add	r0, pc, r0
    c530:	bl	2370 <sf_bpf_error>
    c534:	ldr	r0, [pc, #320]	; c67c <sf_gen_scode+0xaec>
    c538:	mov	r1, r8
    c53c:	add	r0, pc, r0
    c540:	bl	2370 <sf_bpf_error>
    c544:	ldr	r0, [pc, #308]	; c680 <sf_gen_scode+0xaf0>
    c548:	mov	r1, r8
    c54c:	add	r0, pc, r0
    c550:	bl	2370 <sf_bpf_error>
    c554:	ldr	r0, [pc, #296]	; c684 <sf_gen_scode+0xaf4>
    c558:	mov	r1, r8
    c55c:	add	r0, pc, r0
    c560:	bl	2370 <sf_bpf_error>
    c564:	mov	r0, #2048	; 0x800
    c568:	ldr	r4, [sp, #32]
    c56c:	ldr	r8, [sp, #28]
    c570:	bl	7c38 <gen_linktype>
    c574:	cmp	r4, #6
    c578:	mov	r6, r0
    c57c:	beq	bd60 <sf_gen_scode+0x1d0>
    c580:	bgt	bfe8 <sf_gen_scode+0x458>
    c584:	cmn	r4, #1
    c588:	bne	bff8 <sf_gen_scode+0x468>
    c58c:	mov	r2, r5
    c590:	mov	r1, #6
    c594:	mov	r0, r8
    c598:	bl	ae38 <sf_gen_portop>
    c59c:	mov	r2, r5
    c5a0:	mov	r1, #17
    c5a4:	mov	r4, r0
    c5a8:	mov	r0, r8
    c5ac:	bl	ae38 <sf_gen_portop>
    c5b0:	mov	r7, r0
    c5b4:	mov	r1, r0
    c5b8:	mov	r0, r4
    c5bc:	bl	6fd4 <sf_gen_or>
    c5c0:	mov	r2, r5
    c5c4:	mov	r0, r8
    c5c8:	mov	r1, #132	; 0x84
    c5cc:	bl	ae38 <sf_gen_portop>
    c5d0:	mov	r1, r7
    c5d4:	bl	6fd4 <sf_gen_or>
    c5d8:	b	bd74 <sf_gen_scode+0x1e4>
    c5dc:	ldr	r0, [pc, #164]	; c688 <sf_gen_scode+0xaf8>
    c5e0:	add	r0, pc, r0
    c5e4:	bl	2370 <sf_bpf_error>
    c5e8:	ldr	r0, [pc, #156]	; c68c <sf_gen_scode+0xafc>
    c5ec:	mov	r1, r8
    c5f0:	add	r0, pc, r0
    c5f4:	bl	2370 <sf_bpf_error>
    c5f8:	ldr	r0, [pc, #144]	; c690 <sf_gen_scode+0xb00>
    c5fc:	mov	r1, r8
    c600:	add	r0, pc, r0
    c604:	bl	2370 <sf_bpf_error>
    c608:	ldr	r4, [sp, #32]
    c60c:	b	bfa8 <sf_gen_scode+0x418>
    c610:	ldr	r0, [pc, #124]	; c694 <sf_gen_scode+0xb04>
    c614:	add	r0, pc, r0
    c618:	bl	2370 <sf_bpf_error>
    c61c:	ldr	r2, [pc, #116]	; c698 <sf_gen_scode+0xb08>
    c620:	add	r2, pc, r2
    c624:	b	c2b0 <sf_gen_scode+0x720>
    c628:	.word	0x00014e90
    c62c:	.word	0x0003273c
    c630:	.word	0x000086dd
    c634:	.word	0x00015754
    c638:	.word	0x00015544
    c63c:	.word	0x00015590
    c640:	.word	0x0001559c
    c644:	.word	0x00032160
    c648:	.word	0x000320e0
    c64c:	.word	0x0001457c
    c650:	.word	0x000153d4
    c654:	.word	0x00032058
    c658:	.word	0x00015210
    c65c:	.word	0x00015214
    c660:	.word	0x00015218
    c664:	.word	0x000150cc
    c668:	.word	0x0001518c
    c66c:	.word	0x000152d4
    c670:	.word	0x0001506c
    c674:	.word	0x00015074
    c678:	.word	0x00015094
    c67c:	.word	0x000150a4
    c680:	.word	0x000150b0
    c684:	.word	0x0001519c
    c688:	.word	0x000150c0
    c68c:	.word	0x0001515c
    c690:	.word	0x00015184
    c694:	.word	0x000150f8
    c698:	.word	0x00014f38

0000c69c <sf_gen_mcode>:
    c69c:	push	{r4, r5, r6, r7, lr}
    c6a0:	sub	sp, sp, #28
    c6a4:	mov	r6, r1
    c6a8:	add	r1, sp, #16
    c6ac:	mov	r7, r2
    c6b0:	str	r3, [sp, #12]
    c6b4:	uxtb	r4, r3
    c6b8:	mov	r5, r0
    c6bc:	bl	11440 <__pcap_atoin>
    c6c0:	ldr	ip, [sp, #16]
    c6c4:	cmp	r6, #0
    c6c8:	rsb	r0, r0, #32
    c6cc:	lsl	ip, ip, r0
    c6d0:	str	ip, [sp, #16]
    c6d4:	beq	c724 <sf_gen_mcode+0x88>
    c6d8:	add	r1, sp, #20
    c6dc:	mov	r0, r6
    c6e0:	bl	11440 <__pcap_atoin>
    c6e4:	ldr	r1, [sp, #20]
    c6e8:	ldr	ip, [sp, #16]
    c6ec:	rsb	r0, r0, #32
    c6f0:	lsl	r1, r1, r0
    c6f4:	str	r1, [sp, #20]
    c6f8:	bics	r3, ip, r1
    c6fc:	bne	c774 <sf_gen_mcode+0xd8>
    c700:	cmp	r4, #2
    c704:	bne	c768 <sf_gen_mcode+0xcc>
    c708:	ldrb	r3, [sp, #14]
    c70c:	ldrb	r2, [sp, #13]
    c710:	str	r4, [sp]
    c714:	mov	r0, ip
    c718:	bl	94a8 <gen_host>
    c71c:	add	sp, sp, #28
    c720:	pop	{r4, r5, r6, r7, pc}
    c724:	cmp	r7, #32
    c728:	bgt	c788 <sf_gen_mcode+0xec>
    c72c:	cmp	r7, #0
    c730:	mvnne	r1, #0
    c734:	rsbne	r0, r7, #32
    c738:	mvneq	r3, #0
    c73c:	lslne	r1, r1, r0
    c740:	mvnne	r3, r1
    c744:	moveq	r1, r7
    c748:	tst	ip, r3
    c74c:	str	r1, [sp, #20]
    c750:	beq	c700 <sf_gen_mcode+0x64>
    c754:	ldr	r0, [pc, #56]	; c794 <sf_gen_mcode+0xf8>
    c758:	mov	r2, r7
    c75c:	mov	r1, r5
    c760:	add	r0, pc, r0
    c764:	bl	2370 <sf_bpf_error>
    c768:	ldr	r0, [pc, #40]	; c798 <sf_gen_mcode+0xfc>
    c76c:	add	r0, pc, r0
    c770:	bl	2370 <sf_bpf_error>
    c774:	ldr	r0, [pc, #32]	; c79c <sf_gen_mcode+0x100>
    c778:	mov	r2, r6
    c77c:	mov	r1, r5
    c780:	add	r0, pc, r0
    c784:	bl	2370 <sf_bpf_error>
    c788:	ldr	r0, [pc, #16]	; c7a0 <sf_gen_mcode+0x104>
    c78c:	add	r0, pc, r0
    c790:	bl	2370 <sf_bpf_error>
    c794:	.word	0x000150cc
    c798:	.word	0x000150e0
    c79c:	.word	0x00015068
    c7a0:	.word	0x00015084

0000c7a4 <sf_gen_ncode>:
    c7a4:	push	{r4, r5, r6, r7, r8, r9, lr}
    c7a8:	lsr	r4, r2, #8
    c7ac:	sub	sp, sp, #20
    c7b0:	lsr	r5, r2, #16
    c7b4:	subs	r7, r0, #0
    c7b8:	str	r1, [sp, #12]
    c7bc:	str	r2, [sp, #8]
    c7c0:	uxtb	r4, r4
    c7c4:	uxtb	r5, r5
    c7c8:	uxtb	r6, r2
    c7cc:	beq	ca20 <sf_gen_ncode+0x27c>
    c7d0:	cmp	r4, #12
    c7d4:	add	r1, sp, #12
    c7d8:	beq	c924 <sf_gen_ncode+0x180>
    c7dc:	bl	11440 <__pcap_atoin>
    c7e0:	cmp	r6, #4
    c7e4:	beq	ca68 <sf_gen_ncode+0x2c4>
    c7e8:	bls	c814 <sf_gen_ncode+0x70>
    c7ec:	cmp	r6, #6
    c7f0:	beq	ca48 <sf_gen_ncode+0x2a4>
    c7f4:	bcc	ca28 <sf_gen_ncode+0x284>
    c7f8:	cmp	r6, #7
    c7fc:	beq	c9a8 <sf_gen_ncode+0x204>
    c800:	cmp	r6, #255	; 0xff
    c804:	bne	ca74 <sf_gen_ncode+0x2d0>
    c808:	ldr	r0, [pc, #820]	; cb44 <sf_gen_ncode+0x3a0>
    c80c:	add	r0, pc, r0
    c810:	bl	2370 <sf_bpf_error>
    c814:	cmp	r6, #2
    c818:	bls	c954 <sf_gen_ncode+0x1b0>
    c81c:	cmp	r4, #7
    c820:	beq	cb30 <sf_gen_ncode+0x38c>
    c824:	cmp	r4, #6
    c828:	beq	ca7c <sf_gen_ncode+0x2d8>
    c82c:	cmp	r4, #5
    c830:	beq	ca78 <sf_gen_ncode+0x2d4>
    c834:	cmp	r4, #0
    c838:	bne	ca14 <sf_gen_ncode+0x270>
    c83c:	mov	r0, #2048	; 0x800
    c840:	ldr	r4, [sp, #12]
    c844:	bl	7c38 <gen_linktype>
    c848:	mov	r2, r5
    c84c:	mov	r1, #6
    c850:	mov	r7, r0
    c854:	mov	r0, r4
    c858:	bl	ae38 <sf_gen_portop>
    c85c:	mov	r2, r5
    c860:	mov	r1, #17
    c864:	mov	r8, r0
    c868:	mov	r0, r4
    c86c:	bl	ae38 <sf_gen_portop>
    c870:	mov	r6, r0
    c874:	mov	r1, r0
    c878:	mov	r0, r8
    c87c:	bl	6fd4 <sf_gen_or>
    c880:	mov	r2, r5
    c884:	mov	r0, r4
    c888:	mov	r1, #132	; 0x84
    c88c:	bl	ae38 <sf_gen_portop>
    c890:	mov	r1, r6
    c894:	bl	6fd4 <sf_gen_or>
    c898:	mov	r1, r6
    c89c:	mov	r0, r7
    c8a0:	bl	6390 <sf_gen_and>
    c8a4:	ldr	r0, [pc, #668]	; cb48 <sf_gen_ncode+0x3a4>
    c8a8:	ldr	r7, [sp, #12]
    c8ac:	bl	7c38 <gen_linktype>
    c8b0:	mov	r2, r5
    c8b4:	mov	r1, #6
    c8b8:	mov	r8, r0
    c8bc:	mov	r0, r7
    c8c0:	bl	b270 <sf_gen_portop6>
    c8c4:	mov	r2, r5
    c8c8:	mov	r1, #17
    c8cc:	mov	r9, r0
    c8d0:	mov	r0, r7
    c8d4:	bl	b270 <sf_gen_portop6>
    c8d8:	mov	r1, r0
    c8dc:	mov	r4, r0
    c8e0:	mov	r0, r9
    c8e4:	bl	6fd4 <sf_gen_or>
    c8e8:	mov	r1, #132	; 0x84
    c8ec:	mov	r2, r5
    c8f0:	mov	r0, r7
    c8f4:	bl	b270 <sf_gen_portop6>
    c8f8:	mov	r1, r4
    c8fc:	bl	6fd4 <sf_gen_or>
    c900:	mov	r0, r8
    c904:	mov	r1, r4
    c908:	bl	6390 <sf_gen_and>
    c90c:	mov	r1, r6
    c910:	mov	r0, r4
    c914:	bl	6fd4 <sf_gen_or>
    c918:	mov	r0, r6
    c91c:	add	sp, sp, #20
    c920:	pop	{r4, r5, r6, r7, r8, r9, pc}
    c924:	bl	114b0 <__pcap_atodn>
    c928:	cmp	r6, #4
    c92c:	beq	ca68 <sf_gen_ncode+0x2c4>
    c930:	bls	ca0c <sf_gen_ncode+0x268>
    c934:	cmp	r6, #6
    c938:	beq	ca48 <sf_gen_ncode+0x2a4>
    c93c:	bcc	ca28 <sf_gen_ncode+0x284>
    c940:	cmp	r6, #7
    c944:	bne	c800 <sf_gen_ncode+0x5c>
    c948:	ldr	r0, [pc, #508]	; cb4c <sf_gen_ncode+0x3a8>
    c94c:	add	r0, pc, r0
    c950:	bl	2370 <sf_bpf_error>
    c954:	cmp	r4, #12
    c958:	beq	cad4 <sf_gen_ncode+0x330>
    c95c:	cmp	r4, #1
    c960:	beq	cb38 <sf_gen_ncode+0x394>
    c964:	cmp	r6, #2
    c968:	cmpeq	r7, #0
    c96c:	beq	caf4 <sf_gen_ncode+0x350>
    c970:	ldr	r3, [sp, #12]
    c974:	rsb	r1, r0, #32
    c978:	mvn	r2, #0
    c97c:	lsl	r0, r3, r1
    c980:	lsl	r1, r2, r1
    c984:	str	r0, [sp, #12]
    c988:	str	r6, [sp]
    c98c:	mov	r3, r5
    c990:	mov	r2, r4
    c994:	bl	94a8 <gen_host>
    c998:	mov	r6, r0
    c99c:	mov	r0, r6
    c9a0:	add	sp, sp, #20
    c9a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    c9a8:	cmp	r4, #7
    c9ac:	beq	cb28 <sf_gen_ncode+0x384>
    c9b0:	cmp	r4, #6
    c9b4:	beq	c9cc <sf_gen_ncode+0x228>
    c9b8:	cmp	r4, #5
    c9bc:	beq	cb20 <sf_gen_ncode+0x37c>
    c9c0:	cmp	r4, #0
    c9c4:	mvneq	r4, #0
    c9c8:	bne	c948 <sf_gen_ncode+0x1a4>
    c9cc:	ldr	r1, [sp, #12]
    c9d0:	mov	r3, r5
    c9d4:	mov	r2, r4
    c9d8:	mov	r0, r1
    c9dc:	bl	b714 <gen_portrange>
    c9e0:	ldr	r1, [sp, #12]
    c9e4:	mov	r3, r5
    c9e8:	mov	r2, r4
    c9ec:	mov	r6, r0
    c9f0:	mov	r0, r1
    c9f4:	bl	ba28 <gen_portrange6>
    c9f8:	mov	r1, r6
    c9fc:	bl	6fd4 <sf_gen_or>
    ca00:	mov	r0, r6
    ca04:	add	sp, sp, #20
    ca08:	pop	{r4, r5, r6, r7, r8, r9, pc}
    ca0c:	cmp	r6, #2
    ca10:	bls	cad4 <sf_gen_ncode+0x330>
    ca14:	ldr	r0, [pc, #308]	; cb50 <sf_gen_ncode+0x3ac>
    ca18:	add	r0, pc, r0
    ca1c:	bl	2370 <sf_bpf_error>
    ca20:	mov	r0, #32
    ca24:	b	c7e0 <sf_gen_ncode+0x3c>
    ca28:	mov	r2, r5
    ca2c:	mov	r1, r4
    ca30:	ldr	r0, [sp, #12]
    ca34:	bl	8b8c <gen_proto>
    ca38:	mov	r6, r0
    ca3c:	mov	r0, r6
    ca40:	add	sp, sp, #20
    ca44:	pop	{r4, r5, r6, r7, r8, r9, pc}
    ca48:	mov	r2, r5
    ca4c:	mov	r1, r4
    ca50:	ldr	r0, [sp, #12]
    ca54:	bl	985c <gen_protochain>
    ca58:	mov	r6, r0
    ca5c:	mov	r0, r6
    ca60:	add	sp, sp, #20
    ca64:	pop	{r4, r5, r6, r7, r8, r9, pc}
    ca68:	ldr	r0, [pc, #228]	; cb54 <sf_gen_ncode+0x3b0>
    ca6c:	add	r0, pc, r0
    ca70:	bl	2370 <sf_bpf_error>
    ca74:	bl	f18 <abort@plt>
    ca78:	mov	r4, #132	; 0x84
    ca7c:	mov	r0, #2048	; 0x800
    ca80:	ldr	r6, [sp, #12]
    ca84:	bl	7c38 <gen_linktype>
    ca88:	mov	r2, r5
    ca8c:	mov	r1, r4
    ca90:	mov	r7, r0
    ca94:	mov	r0, r6
    ca98:	bl	ae38 <sf_gen_portop>
    ca9c:	mov	r1, r0
    caa0:	mov	r6, r0
    caa4:	mov	r0, r7
    caa8:	bl	6390 <sf_gen_and>
    caac:	ldr	r0, [pc, #148]	; cb48 <sf_gen_ncode+0x3a4>
    cab0:	ldr	r7, [sp, #12]
    cab4:	bl	7c38 <gen_linktype>
    cab8:	mov	r1, r4
    cabc:	mov	r2, r5
    cac0:	mov	r8, r0
    cac4:	mov	r0, r7
    cac8:	bl	b270 <sf_gen_portop6>
    cacc:	mov	r4, r0
    cad0:	b	c900 <sf_gen_ncode+0x15c>
    cad4:	str	r6, [sp]
    cad8:	ldr	r0, [sp, #12]
    cadc:	mov	r3, r5
    cae0:	mov	r2, #12
    cae4:	mov	r1, #0
    cae8:	bl	94a8 <gen_host>
    caec:	mov	r6, r0
    caf0:	b	c918 <sf_gen_ncode+0x174>
    caf4:	ldr	r0, [sp, #12]
    caf8:	mvn	r1, #0
    cafc:	cmp	r0, #0
    cb00:	beq	c988 <sf_gen_ncode+0x1e4>
    cb04:	tst	r0, #-16777216	; 0xff000000
    cb08:	bne	c988 <sf_gen_ncode+0x1e4>
    cb0c:	lsl	r0, r0, #8
    cb10:	tst	r0, #-16777216	; 0xff000000
    cb14:	lsl	r1, r1, #8
    cb18:	beq	cb0c <sf_gen_ncode+0x368>
    cb1c:	b	c984 <sf_gen_ncode+0x1e0>
    cb20:	mov	r4, #132	; 0x84
    cb24:	b	c9cc <sf_gen_ncode+0x228>
    cb28:	mov	r4, #17
    cb2c:	b	c9cc <sf_gen_ncode+0x228>
    cb30:	mov	r4, #17
    cb34:	b	ca7c <sf_gen_ncode+0x2d8>
    cb38:	ldr	r0, [pc, #24]	; cb58 <sf_gen_ncode+0x3b4>
    cb3c:	add	r0, pc, r0
    cb40:	bl	2370 <sf_bpf_error>
    cb44:	.word	0x00014264
    cb48:	.word	0x000086dd
    cb4c:	.word	0x00014dc0
    cb50:	.word	0x00014c88
    cb54:	.word	0x00014e1c
    cb58:	.word	0x00014d30

0000cb5c <sf_gen_mcode6>:
    cb5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    cb60:	sub	sp, sp, #32
    cb64:	cmp	r1, #0
    cb68:	str	r3, [sp, #12]
    cb6c:	bne	cccc <sf_gen_mcode6+0x170>
    cb70:	mov	r6, r2
    cb74:	uxtb	r8, r3
    cb78:	mov	r9, r0
    cb7c:	bl	10ffc <pcap_nametoaddrinfo>
    cb80:	subs	r7, r0, #0
    cb84:	beq	ccbc <sf_gen_mcode6+0x160>
    cb88:	ldr	r2, [pc, #360]	; ccf8 <sf_gen_mcode6+0x19c>
    cb8c:	ldr	r3, [r7, #28]
    cb90:	add	r2, pc, r2
    cb94:	cmp	r3, #0
    cb98:	str	r7, [r2, #904]	; 0x388
    cb9c:	bne	cce8 <sf_gen_mcode6+0x18c>
    cba0:	cmp	r6, #128	; 0x80
    cba4:	ldr	r5, [r7, #20]
    cba8:	bhi	ccd8 <sf_gen_mcode6+0x17c>
    cbac:	add	r4, sp, #16
    cbb0:	asr	sl, r6, #3
    cbb4:	str	r3, [sp, #16]
    cbb8:	mov	r0, r4
    cbbc:	str	r3, [r4, #4]
    cbc0:	str	r3, [r4, #8]
    cbc4:	str	r3, [r4, #12]
    cbc8:	mov	r2, sl
    cbcc:	mov	r1, #255	; 0xff
    cbd0:	bl	e88 <memset@plt>
    cbd4:	ands	r3, r6, #7
    cbd8:	bne	cc6c <sf_gen_mcode6+0x110>
    cbdc:	ldr	r2, [sp, #16]
    cbe0:	ldr	r3, [r5, #8]
    cbe4:	bics	r3, r3, r2
    cbe8:	bne	cca8 <sf_gen_mcode6+0x14c>
    cbec:	ldr	r2, [sp, #20]
    cbf0:	ldr	r3, [r5, #12]
    cbf4:	bics	r3, r3, r2
    cbf8:	bne	cca8 <sf_gen_mcode6+0x14c>
    cbfc:	ldr	r2, [sp, #24]
    cc00:	ldr	r3, [r5, #16]
    cc04:	bics	r3, r3, r2
    cc08:	bne	cca8 <sf_gen_mcode6+0x14c>
    cc0c:	ldr	r2, [sp, #28]
    cc10:	ldr	r3, [r5, #20]
    cc14:	bics	r3, r3, r2
    cc18:	bne	cca8 <sf_gen_mcode6+0x14c>
    cc1c:	cmp	r8, #1
    cc20:	bls	cc94 <sf_gen_mcode6+0x138>
    cc24:	cmp	r8, #2
    cc28:	bne	cc88 <sf_gen_mcode6+0x12c>
    cc2c:	mov	r1, r4
    cc30:	ldrb	r3, [sp, #14]
    cc34:	ldrb	r2, [sp, #13]
    cc38:	str	r8, [sp]
    cc3c:	add	r0, r5, #8
    cc40:	bl	a5a0 <gen_host6>
    cc44:	ldr	r3, [pc, #176]	; ccfc <sf_gen_mcode6+0x1a0>
    cc48:	mov	r2, #0
    cc4c:	add	r3, pc, r3
    cc50:	str	r2, [r3, #904]	; 0x388
    cc54:	mov	r4, r0
    cc58:	mov	r0, r7
    cc5c:	bl	edc <freeaddrinfo@plt>
    cc60:	mov	r0, r4
    cc64:	add	sp, sp, #32
    cc68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    cc6c:	rsb	r3, r3, #8
    cc70:	mov	r2, #255	; 0xff
    cc74:	add	r1, sp, #32
    cc78:	add	sl, r1, sl
    cc7c:	lsl	r3, r2, r3
    cc80:	strb	r3, [sl, #-16]
    cc84:	b	cbdc <sf_gen_mcode6+0x80>
    cc88:	ldr	r0, [pc, #112]	; cd00 <sf_gen_mcode6+0x1a4>
    cc8c:	add	r0, pc, r0
    cc90:	bl	2370 <sf_bpf_error>
    cc94:	cmp	r6, #128	; 0x80
    cc98:	beq	cc2c <sf_gen_mcode6+0xd0>
    cc9c:	ldr	r0, [pc, #96]	; cd04 <sf_gen_mcode6+0x1a8>
    cca0:	add	r0, pc, r0
    cca4:	bl	2370 <sf_bpf_error>
    cca8:	ldr	r0, [pc, #88]	; cd08 <sf_gen_mcode6+0x1ac>
    ccac:	mov	r2, r6
    ccb0:	mov	r1, r9
    ccb4:	add	r0, pc, r0
    ccb8:	bl	2370 <sf_bpf_error>
    ccbc:	ldr	r0, [pc, #72]	; cd0c <sf_gen_mcode6+0x1b0>
    ccc0:	mov	r1, r9
    ccc4:	add	r0, pc, r0
    ccc8:	bl	2370 <sf_bpf_error>
    cccc:	ldr	r0, [pc, #60]	; cd10 <sf_gen_mcode6+0x1b4>
    ccd0:	add	r0, pc, r0
    ccd4:	bl	2370 <sf_bpf_error>
    ccd8:	ldr	r0, [pc, #52]	; cd14 <sf_gen_mcode6+0x1b8>
    ccdc:	mov	r1, #128	; 0x80
    cce0:	add	r0, pc, r0
    cce4:	bl	2370 <sf_bpf_error>
    cce8:	ldr	r0, [pc, #40]	; cd18 <sf_gen_mcode6+0x1bc>
    ccec:	mov	r1, r9
    ccf0:	add	r0, pc, r0
    ccf4:	bl	2370 <sf_bpf_error>
    ccf8:	.word	0x000317d8
    ccfc:	.word	0x0003171c
    cd00:	.word	0x00014c84
    cd04:	.word	0x00014bac
    cd08:	.word	0x00014b78
    cd0c:	.word	0x00014bf8
    cd10:	.word	0x00014bd4
    cd14:	.word	0x00014c14
    cd18:	.word	0x00014be4

0000cd1c <sf_gen_ecode>:
    cd1c:	push	{r4, r5, r6, lr}
    cd20:	uxtb	r2, r1
    cd24:	sub	sp, sp, #8
    cd28:	cmp	r2, #1
    cd2c:	str	r1, [sp, #4]
    cd30:	bhi	ce6c <sf_gen_ecode+0x150>
    cd34:	lsr	r3, r1, #16
    cd38:	uxtb	r4, r3
    cd3c:	ldrb	r3, [sp, #5]
    cd40:	cmp	r3, #1
    cd44:	bne	ce6c <sf_gen_ecode+0x150>
    cd48:	ldr	r2, [pc, #296]	; ce78 <sf_gen_ecode+0x15c>
    cd4c:	mov	r5, r0
    cd50:	add	r2, pc, r2
    cd54:	ldr	r3, [r2, #876]	; 0x36c
    cd58:	cmp	r3, #119	; 0x77
    cd5c:	beq	ce40 <sf_gen_ecode+0x124>
    cd60:	bgt	cd88 <sf_gen_ecode+0x6c>
    cd64:	cmp	r3, #6
    cd68:	beq	ce0c <sf_gen_ecode+0xf0>
    cd6c:	ble	ce54 <sf_gen_ecode+0x138>
    cd70:	cmp	r3, #10
    cd74:	bne	ce1c <sf_gen_ecode+0x100>
    cd78:	mov	r1, r4
    cd7c:	add	sp, sp, #8
    cd80:	pop	{r4, r5, r6, lr}
    cd84:	b	7064 <gen_fhostop>
    cd88:	cmp	r3, #127	; 0x7f
    cd8c:	beq	ce40 <sf_gen_ecode+0x124>
    cd90:	bgt	ce30 <sf_gen_ecode+0x114>
    cd94:	cmp	r3, #122	; 0x7a
    cd98:	beq	cdfc <sf_gen_ecode+0xe0>
    cd9c:	cmp	r3, #123	; 0x7b
    cda0:	bne	ce24 <sf_gen_ecode+0x108>
    cda4:	ldr	r3, [r2, #920]	; 0x398
    cda8:	cmp	r3, #0
    cdac:	beq	ce6c <sf_gen_ecode+0x150>
    cdb0:	mov	r2, #65280	; 0xff00
    cdb4:	mov	r1, #8
    cdb8:	mov	r0, #4
    cdbc:	bl	3e70 <gen_cmp.constprop.42>
    cdc0:	mov	r1, r4
    cdc4:	mov	r6, r0
    cdc8:	ldr	r3, [r0, #44]	; 0x2c
    cdcc:	clz	r3, r3
    cdd0:	lsr	r3, r3, #5
    cdd4:	str	r3, [r6, #44]	; 0x2c
    cdd8:	mov	r0, r5
    cddc:	bl	72c8 <gen_ehostop>
    cde0:	mov	r4, r0
    cde4:	mov	r1, r0
    cde8:	mov	r0, r6
    cdec:	bl	6390 <sf_gen_and>
    cdf0:	mov	r0, r4
    cdf4:	add	sp, sp, #8
    cdf8:	pop	{r4, r5, r6, pc}
    cdfc:	mov	r1, r4
    ce00:	add	sp, sp, #8
    ce04:	pop	{r4, r5, r6, lr}
    ce08:	b	71fc <gen_ipfchostop>
    ce0c:	mov	r1, r4
    ce10:	add	sp, sp, #8
    ce14:	pop	{r4, r5, r6, lr}
    ce18:	b	7130 <gen_thostop>
    ce1c:	cmp	r3, #105	; 0x69
    ce20:	beq	ce40 <sf_gen_ecode+0x124>
    ce24:	ldr	r0, [pc, #80]	; ce7c <sf_gen_ecode+0x160>
    ce28:	add	r0, pc, r0
    ce2c:	bl	2370 <sf_bpf_error>
    ce30:	cmp	r3, #163	; 0xa3
    ce34:	beq	ce40 <sf_gen_ecode+0x124>
    ce38:	cmp	r3, #192	; 0xc0
    ce3c:	bne	ce24 <sf_gen_ecode+0x108>
    ce40:	mov	r1, r4
    ce44:	mov	r0, r5
    ce48:	add	sp, sp, #8
    ce4c:	pop	{r4, r5, r6, lr}
    ce50:	b	76cc <gen_wlanhostop>
    ce54:	cmp	r3, #1
    ce58:	bne	ce24 <sf_gen_ecode+0x108>
    ce5c:	mov	r1, r4
    ce60:	add	sp, sp, #8
    ce64:	pop	{r4, r5, r6, lr}
    ce68:	b	72c8 <gen_ehostop>
    ce6c:	ldr	r0, [pc, #12]	; ce80 <sf_gen_ecode+0x164>
    ce70:	add	r0, pc, r0
    ce74:	bl	2370 <sf_bpf_error>
    ce78:	.word	0x00031618
    ce7c:	.word	0x00014b10
    ce80:	.word	0x00014b24

0000ce84 <sf_append>:
    ce84:	b	ce8c <sf_append+0x8>
    ce88:	mov	r0, r3
    ce8c:	ldr	r3, [r0, #16]
    ce90:	cmp	r3, #0
    ce94:	bne	ce88 <sf_append+0x4>
    ce98:	str	r1, [r0, #16]
    ce9c:	bx	lr

0000cea0 <sf_gen_load>:
    cea0:	ldr	ip, [pc, #3168]	; db08 <sf_gen_load+0xc68>
    cea4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    cea8:	add	ip, pc, ip
    ceac:	mov	r5, r1
    ceb0:	ldr	r4, [ip, #656]	; 0x290
    ceb4:	mov	r6, r0
    ceb8:	lsl	r3, r4, #2
    cebc:	add	r1, ip, r3
    cec0:	ldr	r1, [r1, #660]	; 0x294
    cec4:	cmp	r1, #0
    cec8:	beq	d190 <sf_gen_load+0x2f0>
    cecc:	add	r4, r4, #1
    ced0:	asr	r3, r4, #31
    ced4:	lsr	r3, r3, #28
    ced8:	add	r4, r4, r3
    cedc:	and	r4, r4, #15
    cee0:	sub	r4, r4, r3
    cee4:	str	r4, [ip, #656]	; 0x290
    cee8:	lsl	r3, r4, #2
    ceec:	add	r1, ip, r3
    cef0:	ldr	r1, [r1, #660]	; 0x294
    cef4:	cmp	r1, #0
    cef8:	beq	d190 <sf_gen_load+0x2f0>
    cefc:	add	r4, r4, #1
    cf00:	asr	r3, r4, #31
    cf04:	lsr	r3, r3, #28
    cf08:	add	r4, r4, r3
    cf0c:	and	r4, r4, #15
    cf10:	sub	r4, r4, r3
    cf14:	lsl	r3, r4, #2
    cf18:	add	r1, ip, r3
    cf1c:	ldr	r1, [r1, #660]	; 0x294
    cf20:	cmp	r1, #0
    cf24:	beq	d184 <sf_gen_load+0x2e4>
    cf28:	add	r4, r4, #1
    cf2c:	asr	r3, r4, #31
    cf30:	lsr	r3, r3, #28
    cf34:	add	r4, r4, r3
    cf38:	and	r4, r4, #15
    cf3c:	sub	r4, r4, r3
    cf40:	lsl	r3, r4, #2
    cf44:	add	r1, ip, r3
    cf48:	ldr	r1, [r1, #660]	; 0x294
    cf4c:	cmp	r1, #0
    cf50:	beq	d184 <sf_gen_load+0x2e4>
    cf54:	add	r4, r4, #1
    cf58:	asr	r3, r4, #31
    cf5c:	lsr	r3, r3, #28
    cf60:	add	r4, r4, r3
    cf64:	and	r4, r4, #15
    cf68:	sub	r4, r4, r3
    cf6c:	lsl	r3, r4, #2
    cf70:	add	r1, ip, r3
    cf74:	ldr	r1, [r1, #660]	; 0x294
    cf78:	cmp	r1, #0
    cf7c:	beq	d184 <sf_gen_load+0x2e4>
    cf80:	add	r4, r4, #1
    cf84:	asr	r3, r4, #31
    cf88:	lsr	r3, r3, #28
    cf8c:	add	r4, r4, r3
    cf90:	and	r4, r4, #15
    cf94:	sub	r4, r4, r3
    cf98:	lsl	r3, r4, #2
    cf9c:	add	r1, ip, r3
    cfa0:	ldr	r1, [r1, #660]	; 0x294
    cfa4:	cmp	r1, #0
    cfa8:	beq	d184 <sf_gen_load+0x2e4>
    cfac:	add	r4, r4, #1
    cfb0:	asr	r3, r4, #31
    cfb4:	lsr	r3, r3, #28
    cfb8:	add	r4, r4, r3
    cfbc:	and	r4, r4, #15
    cfc0:	sub	r4, r4, r3
    cfc4:	lsl	r3, r4, #2
    cfc8:	add	r1, ip, r3
    cfcc:	ldr	r1, [r1, #660]	; 0x294
    cfd0:	cmp	r1, #0
    cfd4:	beq	d184 <sf_gen_load+0x2e4>
    cfd8:	add	r4, r4, #1
    cfdc:	asr	r3, r4, #31
    cfe0:	lsr	r3, r3, #28
    cfe4:	add	r4, r4, r3
    cfe8:	and	r4, r4, #15
    cfec:	sub	r4, r4, r3
    cff0:	lsl	r3, r4, #2
    cff4:	add	r1, ip, r3
    cff8:	ldr	r1, [r1, #660]	; 0x294
    cffc:	cmp	r1, #0
    d000:	beq	d184 <sf_gen_load+0x2e4>
    d004:	add	r4, r4, #1
    d008:	asr	r3, r4, #31
    d00c:	lsr	r3, r3, #28
    d010:	add	r4, r4, r3
    d014:	and	r4, r4, #15
    d018:	sub	r4, r4, r3
    d01c:	lsl	r3, r4, #2
    d020:	add	r1, ip, r3
    d024:	ldr	r1, [r1, #660]	; 0x294
    d028:	cmp	r1, #0
    d02c:	beq	d184 <sf_gen_load+0x2e4>
    d030:	add	r4, r4, #1
    d034:	asr	r3, r4, #31
    d038:	lsr	r3, r3, #28
    d03c:	add	r4, r4, r3
    d040:	and	r4, r4, #15
    d044:	sub	r4, r4, r3
    d048:	lsl	r3, r4, #2
    d04c:	add	r1, ip, r3
    d050:	ldr	r1, [r1, #660]	; 0x294
    d054:	cmp	r1, #0
    d058:	beq	d184 <sf_gen_load+0x2e4>
    d05c:	add	r4, r4, #1
    d060:	ldr	r1, [pc, #2724]	; db0c <sf_gen_load+0xc6c>
    d064:	asr	r3, r4, #31
    d068:	add	r1, pc, r1
    d06c:	lsr	r3, r3, #28
    d070:	add	r4, r4, r3
    d074:	and	r4, r4, #15
    d078:	sub	r4, r4, r3
    d07c:	lsl	r3, r4, #2
    d080:	add	r0, r1, r3
    d084:	ldr	r0, [r0, #660]	; 0x294
    d088:	cmp	r0, #0
    d08c:	beq	d184 <sf_gen_load+0x2e4>
    d090:	add	r4, r4, #1
    d094:	asr	r3, r4, #31
    d098:	lsr	r3, r3, #28
    d09c:	add	r4, r4, r3
    d0a0:	and	r4, r4, #15
    d0a4:	sub	r4, r4, r3
    d0a8:	lsl	r3, r4, #2
    d0ac:	add	r0, r1, r3
    d0b0:	ldr	r0, [r0, #660]	; 0x294
    d0b4:	cmp	r0, #0
    d0b8:	beq	d184 <sf_gen_load+0x2e4>
    d0bc:	add	r4, r4, #1
    d0c0:	asr	r3, r4, #31
    d0c4:	lsr	r3, r3, #28
    d0c8:	add	r4, r4, r3
    d0cc:	and	r4, r4, #15
    d0d0:	sub	r4, r4, r3
    d0d4:	lsl	r3, r4, #2
    d0d8:	add	r0, r1, r3
    d0dc:	ldr	r0, [r0, #660]	; 0x294
    d0e0:	cmp	r0, #0
    d0e4:	beq	d184 <sf_gen_load+0x2e4>
    d0e8:	add	r4, r4, #1
    d0ec:	asr	r3, r4, #31
    d0f0:	lsr	r3, r3, #28
    d0f4:	add	r4, r4, r3
    d0f8:	and	r4, r4, #15
    d0fc:	sub	r4, r4, r3
    d100:	lsl	r3, r4, #2
    d104:	add	r0, r1, r3
    d108:	ldr	r0, [r0, #660]	; 0x294
    d10c:	cmp	r0, #0
    d110:	beq	d184 <sf_gen_load+0x2e4>
    d114:	add	r4, r4, #1
    d118:	asr	r3, r4, #31
    d11c:	lsr	r3, r3, #28
    d120:	add	r4, r4, r3
    d124:	and	r4, r4, #15
    d128:	sub	r4, r4, r3
    d12c:	lsl	r3, r4, #2
    d130:	add	r0, r1, r3
    d134:	ldr	r0, [r0, #660]	; 0x294
    d138:	cmp	r0, #0
    d13c:	beq	d184 <sf_gen_load+0x2e4>
    d140:	add	r4, r4, #1
    d144:	asr	r3, r4, #31
    d148:	lsr	r3, r3, #28
    d14c:	add	r4, r4, r3
    d150:	and	r4, r4, #15
    d154:	sub	r4, r4, r3
    d158:	lsl	r3, r4, #2
    d15c:	add	r0, r1, r3
    d160:	ldr	r0, [r0, #660]	; 0x294
    d164:	cmp	r0, #0
    d168:	addne	r4, r4, #1
    d16c:	andne	r4, r4, #15
    d170:	strne	r4, [r1, #656]	; 0x290
    d174:	beq	d184 <sf_gen_load+0x2e4>
    d178:	ldr	r0, [pc, #2448]	; db10 <sf_gen_load+0xc70>
    d17c:	add	r0, pc, r0
    d180:	bl	2370 <sf_bpf_error>
    d184:	ldr	r1, [pc, #2440]	; db14 <sf_gen_load+0xc74>
    d188:	add	r1, pc, r1
    d18c:	str	r4, [r1, #656]	; 0x290
    d190:	ldr	r1, [pc, #2432]	; db18 <sf_gen_load+0xc78>
    d194:	mov	ip, #1
    d198:	add	r1, pc, r1
    d19c:	add	r0, r1, r3
    d1a0:	cmp	r2, #2
    d1a4:	str	ip, [r0, #660]	; 0x294
    d1a8:	ldr	ip, [r5, #8]
    d1ac:	mov	r0, #0
    d1b0:	add	r1, r1, ip, lsl #2
    d1b4:	str	r0, [r1, #660]	; 0x294
    d1b8:	beq	d1dc <sf_gen_load+0x33c>
    d1bc:	cmp	r2, #4
    d1c0:	beq	d704 <sf_gen_load+0x864>
    d1c4:	cmp	r2, #1
    d1c8:	moveq	r8, #80	; 0x50
    d1cc:	beq	d1e0 <sf_gen_load+0x340>
    d1d0:	ldr	r0, [pc, #2372]	; db1c <sf_gen_load+0xc7c>
    d1d4:	add	r0, pc, r0
    d1d8:	bl	2370 <sf_bpf_error>
    d1dc:	mov	r8, #72	; 0x48
    d1e0:	sub	r2, r6, #1
    d1e4:	cmp	r2, #39	; 0x27
    d1e8:	addls	pc, pc, r2, lsl #2
    d1ec:	b	d6f8 <sf_gen_load+0x858>
    d1f0:	b	d5e0 <sf_gen_load+0x740>
    d1f4:	b	d4ac <sf_gen_load+0x60c>
    d1f8:	b	d4ac <sf_gen_load+0x60c>
    d1fc:	b	d4ac <sf_gen_load+0x60c>
    d200:	b	d348 <sf_gen_load+0x4a8>
    d204:	b	d348 <sf_gen_load+0x4a8>
    d208:	b	d348 <sf_gen_load+0x4a8>
    d20c:	b	d348 <sf_gen_load+0x4a8>
    d210:	b	d348 <sf_gen_load+0x4a8>
    d214:	b	d348 <sf_gen_load+0x4a8>
    d218:	b	d4ac <sf_gen_load+0x60c>
    d21c:	b	d4ac <sf_gen_load+0x60c>
    d220:	b	d4ac <sf_gen_load+0x60c>
    d224:	b	d4ac <sf_gen_load+0x60c>
    d228:	b	d4ac <sf_gen_load+0x60c>
    d22c:	b	d4ac <sf_gen_load+0x60c>
    d230:	b	d4ac <sf_gen_load+0x60c>
    d234:	b	d33c <sf_gen_load+0x49c>
    d238:	b	d6f8 <sf_gen_load+0x858>
    d23c:	b	d6f8 <sf_gen_load+0x858>
    d240:	b	d348 <sf_gen_load+0x4a8>
    d244:	b	d348 <sf_gen_load+0x4a8>
    d248:	b	d6f8 <sf_gen_load+0x858>
    d24c:	b	d6f8 <sf_gen_load+0x858>
    d250:	b	d6f8 <sf_gen_load+0x858>
    d254:	b	d6f8 <sf_gen_load+0x858>
    d258:	b	d6f8 <sf_gen_load+0x858>
    d25c:	b	d6f8 <sf_gen_load+0x858>
    d260:	b	d6f8 <sf_gen_load+0x858>
    d264:	b	d6f8 <sf_gen_load+0x858>
    d268:	b	d6f8 <sf_gen_load+0x858>
    d26c:	b	d6f8 <sf_gen_load+0x858>
    d270:	b	d6f8 <sf_gen_load+0x858>
    d274:	b	d6f8 <sf_gen_load+0x858>
    d278:	b	d6f8 <sf_gen_load+0x858>
    d27c:	b	d6f8 <sf_gen_load+0x858>
    d280:	b	d6f8 <sf_gen_load+0x858>
    d284:	b	d6f8 <sf_gen_load+0x858>
    d288:	b	d6f8 <sf_gen_load+0x858>
    d28c:	b	d290 <sf_gen_load+0x3f0>
    d290:	ldr	r3, [pc, #2184]	; db20 <sf_gen_load+0xc80>
    d294:	add	r3, pc, r3
    d298:	ldr	r3, [r3, #876]	; 0x36c
    d29c:	bic	r2, r3, #8
    d2a0:	cmp	r2, #119	; 0x77
    d2a4:	cmpne	r3, #163	; 0xa3
    d2a8:	bne	dafc <sf_gen_load+0xc5c>
    d2ac:	bl	2810 <newchunk.constprop.49>
    d2b0:	mov	r3, #97	; 0x61
    d2b4:	str	r3, [r0]
    d2b8:	ldr	r3, [r5, #8]
    d2bc:	mov	r6, r0
    d2c0:	str	r3, [r0, #12]
    d2c4:	bl	2810 <newchunk.constprop.49>
    d2c8:	mov	r2, r6
    d2cc:	str	r8, [r0]
    d2d0:	b	d2d8 <sf_gen_load+0x438>
    d2d4:	mov	r2, r3
    d2d8:	ldr	r3, [r2, #16]
    d2dc:	cmp	r3, #0
    d2e0:	bne	d2d4 <sf_gen_load+0x434>
    d2e4:	str	r0, [r2, #16]
    d2e8:	ldr	r2, [r5, #4]
    d2ec:	b	d2f4 <sf_gen_load+0x454>
    d2f0:	mov	r2, r3
    d2f4:	ldr	r3, [r2, #16]
    d2f8:	cmp	r3, #0
    d2fc:	bne	d2f0 <sf_gen_load+0x450>
    d300:	str	r6, [r2, #16]
    d304:	str	r4, [r5, #8]
    d308:	bl	2810 <newchunk.constprop.49>
    d30c:	mov	r3, #2
    d310:	str	r4, [r0, #12]
    d314:	str	r3, [r0]
    d318:	ldr	r2, [r5, #4]
    d31c:	b	d324 <sf_gen_load+0x484>
    d320:	mov	r2, r3
    d324:	ldr	r3, [r2, #16]
    d328:	cmp	r3, #0
    d32c:	bne	d320 <sf_gen_load+0x480>
    d330:	str	r0, [r2, #16]
    d334:	mov	r0, r5
    d338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    d33c:	ldr	r0, [pc, #2016]	; db24 <sf_gen_load+0xc84>
    d340:	add	r0, pc, r0
    d344:	bl	2370 <sf_bpf_error>
    d348:	bl	2a98 <gen_loadx_iphdrlen>
    d34c:	mov	r7, r0
    d350:	bl	2810 <newchunk.constprop.49>
    d354:	mov	r3, #96	; 0x60
    d358:	mov	r2, r7
    d35c:	str	r3, [r0]
    d360:	ldr	r3, [r5, #8]
    d364:	str	r3, [r0, #12]
    d368:	b	d370 <sf_gen_load+0x4d0>
    d36c:	mov	r2, r3
    d370:	ldr	r3, [r2, #16]
    d374:	cmp	r3, #0
    d378:	bne	d36c <sf_gen_load+0x4cc>
    d37c:	str	r0, [r2, #16]
    d380:	bl	2810 <newchunk.constprop.49>
    d384:	mov	r3, #12
    d388:	mov	r2, r7
    d38c:	str	r3, [r0]
    d390:	b	d398 <sf_gen_load+0x4f8>
    d394:	mov	r2, r3
    d398:	ldr	r3, [r2, #16]
    d39c:	cmp	r3, #0
    d3a0:	bne	d394 <sf_gen_load+0x4f4>
    d3a4:	str	r0, [r2, #16]
    d3a8:	bl	2810 <newchunk.constprop.49>
    d3ac:	mov	r3, #7
    d3b0:	mov	r2, r7
    d3b4:	str	r3, [r0]
    d3b8:	b	d3c0 <sf_gen_load+0x520>
    d3bc:	mov	r2, r3
    d3c0:	ldr	r3, [r2, #16]
    d3c4:	cmp	r3, #0
    d3c8:	bne	d3bc <sf_gen_load+0x51c>
    d3cc:	str	r0, [r2, #16]
    d3d0:	bl	2810 <newchunk.constprop.49>
    d3d4:	mov	r2, r7
    d3d8:	str	r8, [r0]
    d3dc:	b	d3e4 <sf_gen_load+0x544>
    d3e0:	mov	r2, r3
    d3e4:	ldr	r3, [r2, #16]
    d3e8:	cmp	r3, #0
    d3ec:	bne	d3e0 <sf_gen_load+0x540>
    d3f0:	ldr	r3, [pc, #1840]	; db28 <sf_gen_load+0xc88>
    d3f4:	str	r0, [r2, #16]
    d3f8:	add	r3, pc, r3
    d3fc:	ldr	r8, [r3, #868]	; 0x364
    d400:	ldr	r3, [r3, #872]	; 0x368
    d404:	add	r3, r3, r8
    d408:	str	r3, [r0, #12]
    d40c:	ldr	r2, [r5, #4]
    d410:	b	d418 <sf_gen_load+0x578>
    d414:	mov	r2, r3
    d418:	ldr	r3, [r2, #16]
    d41c:	cmp	r3, #0
    d420:	bne	d414 <sf_gen_load+0x574>
    d424:	str	r7, [r2, #16]
    d428:	mov	r0, r6
    d42c:	bl	a8c0 <sf_gen_proto_abbrev>
    d430:	mov	r1, #8
    d434:	mov	r7, r0
    d438:	add	r0, r8, #6
    d43c:	bl	431c <gen_load_macplrel>
    d440:	mov	r8, r0
    d444:	bl	29f8 <newchunk.constprop.50>
    d448:	ldr	r2, [pc, #1756]	; db2c <sf_gen_load+0xc8c>
    d44c:	mov	r1, #69	; 0x45
    d450:	mov	r6, r0
    d454:	ldr	r3, [r0, #44]	; 0x2c
    d458:	clz	r3, r3
    d45c:	lsr	r3, r3, #5
    d460:	str	r8, [r0, #4]
    d464:	str	r0, [r6, #96]	; 0x60
    d468:	str	r1, [r6, #8]
    d46c:	mov	r0, r7
    d470:	str	r2, [r6, #20]
    d474:	str	r3, [r6, #44]	; 0x2c
    d478:	mov	r1, r6
    d47c:	bl	6390 <sf_gen_and>
    d480:	ldr	r0, [r5]
    d484:	cmp	r0, #0
    d488:	beq	d494 <sf_gen_load+0x5f4>
    d48c:	mov	r1, r6
    d490:	bl	6390 <sf_gen_and>
    d494:	mov	r0, #2
    d498:	bl	a8c0 <sf_gen_proto_abbrev>
    d49c:	mov	r1, r6
    d4a0:	bl	6390 <sf_gen_and>
    d4a4:	str	r6, [r5]
    d4a8:	b	d304 <sf_gen_load+0x464>
    d4ac:	ldr	r2, [pc, #1660]	; db30 <sf_gen_load+0xc90>
    d4b0:	add	r2, pc, r2
    d4b4:	ldr	r1, [r2, #860]	; 0x35c
    d4b8:	cmp	r1, #0
    d4bc:	beq	d73c <sf_gen_load+0x89c>
    d4c0:	ldr	r7, [r2, #864]	; 0x360
    d4c4:	cmn	r7, #1
    d4c8:	beq	d7dc <sf_gen_load+0x93c>
    d4cc:	bl	2810 <newchunk.constprop.49>
    d4d0:	mov	r3, #97	; 0x61
    d4d4:	str	r3, [r0]
    d4d8:	str	r7, [r0, #12]
    d4dc:	mov	r9, r0
    d4e0:	bl	2810 <newchunk.constprop.49>
    d4e4:	mov	r3, #96	; 0x60
    d4e8:	mov	r2, r9
    d4ec:	str	r3, [r0]
    d4f0:	ldr	r3, [r5, #8]
    d4f4:	str	r3, [r0, #12]
    d4f8:	b	d500 <sf_gen_load+0x660>
    d4fc:	mov	r2, r3
    d500:	ldr	r3, [r2, #16]
    d504:	cmp	r3, #0
    d508:	bne	d4fc <sf_gen_load+0x65c>
    d50c:	str	r0, [r2, #16]
    d510:	bl	2810 <newchunk.constprop.49>
    d514:	mov	r3, #12
    d518:	mov	r2, r9
    d51c:	str	r3, [r0]
    d520:	b	d528 <sf_gen_load+0x688>
    d524:	mov	r2, r3
    d528:	ldr	r3, [r2, #16]
    d52c:	cmp	r3, #0
    d530:	bne	d524 <sf_gen_load+0x684>
    d534:	str	r0, [r2, #16]
    d538:	bl	2810 <newchunk.constprop.49>
    d53c:	mov	r3, #7
    d540:	mov	r2, r9
    d544:	str	r3, [r0]
    d548:	b	d550 <sf_gen_load+0x6b0>
    d54c:	mov	r2, r3
    d550:	ldr	r3, [r2, #16]
    d554:	cmp	r3, #0
    d558:	bne	d54c <sf_gen_load+0x6ac>
    d55c:	str	r0, [r2, #16]
    d560:	bl	2810 <newchunk.constprop.49>
    d564:	ldr	r3, [pc, #1480]	; db34 <sf_gen_load+0xc94>
    d568:	mov	r2, r9
    d56c:	add	r3, pc, r3
    d570:	ldr	r1, [r3, #872]	; 0x368
    d574:	ldr	r3, [r3, #868]	; 0x364
    d578:	add	r3, r1, r3
    d57c:	str	r8, [r0]
    d580:	str	r3, [r0, #12]
    d584:	b	d58c <sf_gen_load+0x6ec>
    d588:	mov	r2, r3
    d58c:	ldr	r3, [r2, #16]
    d590:	cmp	r3, #0
    d594:	bne	d588 <sf_gen_load+0x6e8>
    d598:	str	r0, [r2, #16]
    d59c:	ldr	r2, [r5, #4]
    d5a0:	b	d5a8 <sf_gen_load+0x708>
    d5a4:	mov	r2, r3
    d5a8:	ldr	r3, [r2, #16]
    d5ac:	cmp	r3, #0
    d5b0:	bne	d5a4 <sf_gen_load+0x704>
    d5b4:	mov	r0, r6
    d5b8:	str	r9, [r2, #16]
    d5bc:	bl	a8c0 <sf_gen_proto_abbrev>
    d5c0:	mov	r6, r0
    d5c4:	ldr	r0, [r5]
    d5c8:	cmp	r0, #0
    d5cc:	beq	d5d8 <sf_gen_load+0x738>
    d5d0:	mov	r1, r6
    d5d4:	bl	6390 <sf_gen_and>
    d5d8:	str	r6, [r5]
    d5dc:	b	d304 <sf_gen_load+0x464>
    d5e0:	ldr	r6, [pc, #1360]	; db38 <sf_gen_load+0xc98>
    d5e4:	add	r6, pc, r6
    d5e8:	ldr	r3, [r6, #876]	; 0x36c
    d5ec:	cmp	r3, #127	; 0x7f
    d5f0:	beq	d70c <sf_gen_load+0x86c>
    d5f4:	ble	d758 <sf_gen_load+0x8b8>
    d5f8:	cmp	r3, #163	; 0xa3
    d5fc:	beq	d7ac <sf_gen_load+0x90c>
    d600:	cmp	r3, #192	; 0xc0
    d604:	bne	d790 <sf_gen_load+0x8f0>
    d608:	ldr	r7, [r6, #856]	; 0x358
    d60c:	cmn	r7, #1
    d610:	beq	dae0 <sf_gen_load+0xc40>
    d614:	bl	2810 <newchunk.constprop.49>
    d618:	mov	r3, #97	; 0x61
    d61c:	mov	r6, r0
    d620:	str	r7, [r0, #12]
    d624:	str	r3, [r0]
    d628:	bl	2810 <newchunk.constprop.49>
    d62c:	mov	r3, #96	; 0x60
    d630:	mov	r2, r6
    d634:	str	r3, [r0]
    d638:	ldr	r3, [r5, #8]
    d63c:	str	r3, [r0, #12]
    d640:	b	d648 <sf_gen_load+0x7a8>
    d644:	mov	r2, r3
    d648:	ldr	r3, [r2, #16]
    d64c:	cmp	r3, #0
    d650:	bne	d644 <sf_gen_load+0x7a4>
    d654:	str	r0, [r2, #16]
    d658:	bl	2810 <newchunk.constprop.49>
    d65c:	mov	r3, #12
    d660:	mov	r2, r6
    d664:	str	r3, [r0]
    d668:	b	d670 <sf_gen_load+0x7d0>
    d66c:	mov	r2, r3
    d670:	ldr	r3, [r2, #16]
    d674:	cmp	r3, #0
    d678:	bne	d66c <sf_gen_load+0x7cc>
    d67c:	str	r0, [r2, #16]
    d680:	bl	2810 <newchunk.constprop.49>
    d684:	mov	r3, #7
    d688:	mov	r2, r6
    d68c:	str	r3, [r0]
    d690:	b	d698 <sf_gen_load+0x7f8>
    d694:	mov	r2, r3
    d698:	ldr	r3, [r2, #16]
    d69c:	cmp	r3, #0
    d6a0:	bne	d694 <sf_gen_load+0x7f4>
    d6a4:	str	r0, [r2, #16]
    d6a8:	bl	2810 <newchunk.constprop.49>
    d6ac:	ldr	r3, [pc, #1160]	; db3c <sf_gen_load+0xc9c>
    d6b0:	mov	r2, r6
    d6b4:	add	r3, pc, r3
    d6b8:	ldr	r3, [r3, #880]	; 0x370
    d6bc:	str	r8, [r0]
    d6c0:	str	r3, [r0, #12]
    d6c4:	b	d6cc <sf_gen_load+0x82c>
    d6c8:	mov	r2, r3
    d6cc:	ldr	r3, [r2, #16]
    d6d0:	cmp	r3, #0
    d6d4:	bne	d6c8 <sf_gen_load+0x828>
    d6d8:	str	r0, [r2, #16]
    d6dc:	ldr	r2, [r5, #4]
    d6e0:	b	d6e8 <sf_gen_load+0x848>
    d6e4:	mov	r2, r3
    d6e8:	ldr	r3, [r2, #16]
    d6ec:	cmp	r3, #0
    d6f0:	bne	d6e4 <sf_gen_load+0x844>
    d6f4:	b	d300 <sf_gen_load+0x460>
    d6f8:	ldr	r0, [pc, #1088]	; db40 <sf_gen_load+0xca0>
    d6fc:	add	r0, pc, r0
    d700:	bl	2370 <sf_bpf_error>
    d704:	mov	r8, #64	; 0x40
    d708:	b	d1e0 <sf_gen_load+0x340>
    d70c:	ldr	r3, [r6, #856]	; 0x358
    d710:	cmn	r3, #1
    d714:	beq	dad4 <sf_gen_load+0xc34>
    d718:	bl	2810 <newchunk.constprop.49>
    d71c:	ldr	r3, [pc, #1056]	; db44 <sf_gen_load+0xca4>
    d720:	mov	r2, #97	; 0x61
    d724:	add	r3, pc, r3
    d728:	str	r2, [r0]
    d72c:	ldr	r3, [r3, #856]	; 0x358
    d730:	mov	r6, r0
    d734:	str	r3, [r0, #12]
    d738:	b	d628 <sf_gen_load+0x788>
    d73c:	bl	2810 <newchunk.constprop.49>
    d740:	mov	r3, #97	; 0x61
    d744:	str	r3, [r0]
    d748:	ldr	r3, [r5, #8]
    d74c:	mov	r9, r0
    d750:	str	r3, [r0, #12]
    d754:	b	d560 <sf_gen_load+0x6c0>
    d758:	cmp	r3, #119	; 0x77
    d75c:	bne	d790 <sf_gen_load+0x8f0>
    d760:	ldr	r3, [r6, #856]	; 0x358
    d764:	cmn	r3, #1
    d768:	beq	dac8 <sf_gen_load+0xc28>
    d76c:	bl	2810 <newchunk.constprop.49>
    d770:	ldr	r3, [pc, #976]	; db48 <sf_gen_load+0xca8>
    d774:	mov	r2, #97	; 0x61
    d778:	add	r3, pc, r3
    d77c:	str	r2, [r0]
    d780:	ldr	r3, [r3, #856]	; 0x358
    d784:	mov	r6, r0
    d788:	str	r3, [r0, #12]
    d78c:	b	d628 <sf_gen_load+0x788>
    d790:	bl	2810 <newchunk.constprop.49>
    d794:	mov	r3, #97	; 0x61
    d798:	str	r3, [r0]
    d79c:	ldr	r3, [r5, #8]
    d7a0:	mov	r6, r0
    d7a4:	str	r3, [r0, #12]
    d7a8:	b	d6a8 <sf_gen_load+0x808>
    d7ac:	ldr	r3, [r6, #856]	; 0x358
    d7b0:	cmn	r3, #1
    d7b4:	beq	daf0 <sf_gen_load+0xc50>
    d7b8:	bl	2810 <newchunk.constprop.49>
    d7bc:	ldr	r3, [pc, #904]	; db4c <sf_gen_load+0xcac>
    d7c0:	mov	r2, #97	; 0x61
    d7c4:	add	r3, pc, r3
    d7c8:	str	r2, [r0]
    d7cc:	ldr	r3, [r3, #856]	; 0x358
    d7d0:	mov	r6, r0
    d7d4:	str	r3, [r0, #12]
    d7d8:	b	d628 <sf_gen_load+0x788>
    d7dc:	add	r3, r2, r3
    d7e0:	ldr	r3, [r3, #660]	; 0x294
    d7e4:	cmp	r3, #0
    d7e8:	moveq	r7, r4
    d7ec:	lsleq	r3, r4, #2
    d7f0:	beq	daac <sf_gen_load+0xc0c>
    d7f4:	add	r3, r4, #1
    d7f8:	asr	r1, r3, #31
    d7fc:	lsr	r1, r1, #28
    d800:	add	r7, r3, r1
    d804:	and	r7, r7, #15
    d808:	sub	r7, r7, r1
    d80c:	str	r7, [r2, #656]	; 0x290
    d810:	lsl	r3, r7, #2
    d814:	add	r1, r2, r3
    d818:	ldr	r1, [r1, #660]	; 0x294
    d81c:	cmp	r1, #0
    d820:	beq	daac <sf_gen_load+0xc0c>
    d824:	add	r7, r7, #1
    d828:	asr	r3, r7, #31
    d82c:	lsr	r3, r3, #28
    d830:	add	r7, r7, r3
    d834:	and	r7, r7, #15
    d838:	sub	r7, r7, r3
    d83c:	lsl	r3, r7, #2
    d840:	add	r1, r2, r3
    d844:	ldr	r1, [r1, #660]	; 0x294
    d848:	cmp	r1, #0
    d84c:	beq	daa0 <sf_gen_load+0xc00>
    d850:	add	r7, r7, #1
    d854:	asr	r3, r7, #31
    d858:	lsr	r3, r3, #28
    d85c:	add	r7, r7, r3
    d860:	and	r7, r7, #15
    d864:	sub	r7, r7, r3
    d868:	lsl	r3, r7, #2
    d86c:	add	r1, r2, r3
    d870:	ldr	r1, [r1, #660]	; 0x294
    d874:	cmp	r1, #0
    d878:	beq	daa0 <sf_gen_load+0xc00>
    d87c:	add	r7, r7, #1
    d880:	asr	r3, r7, #31
    d884:	lsr	r3, r3, #28
    d888:	add	r7, r7, r3
    d88c:	and	r7, r7, #15
    d890:	sub	r7, r7, r3
    d894:	lsl	r3, r7, #2
    d898:	add	r1, r2, r3
    d89c:	ldr	r1, [r1, #660]	; 0x294
    d8a0:	cmp	r1, #0
    d8a4:	beq	daa0 <sf_gen_load+0xc00>
    d8a8:	add	r7, r7, #1
    d8ac:	asr	r3, r7, #31
    d8b0:	lsr	r3, r3, #28
    d8b4:	add	r7, r7, r3
    d8b8:	and	r7, r7, #15
    d8bc:	sub	r7, r7, r3
    d8c0:	lsl	r3, r7, #2
    d8c4:	add	r1, r2, r3
    d8c8:	ldr	r1, [r1, #660]	; 0x294
    d8cc:	cmp	r1, #0
    d8d0:	beq	daa0 <sf_gen_load+0xc00>
    d8d4:	add	r7, r7, #1
    d8d8:	asr	r3, r7, #31
    d8dc:	lsr	r3, r3, #28
    d8e0:	add	r7, r7, r3
    d8e4:	and	r7, r7, #15
    d8e8:	sub	r7, r7, r3
    d8ec:	lsl	r3, r7, #2
    d8f0:	add	r1, r2, r3
    d8f4:	ldr	r1, [r1, #660]	; 0x294
    d8f8:	cmp	r1, #0
    d8fc:	beq	daa0 <sf_gen_load+0xc00>
    d900:	add	r7, r7, #1
    d904:	asr	r3, r7, #31
    d908:	lsr	r3, r3, #28
    d90c:	add	r7, r7, r3
    d910:	and	r7, r7, #15
    d914:	sub	r7, r7, r3
    d918:	lsl	r3, r7, #2
    d91c:	add	r2, r2, r3
    d920:	ldr	r2, [r2, #660]	; 0x294
    d924:	cmp	r2, #0
    d928:	beq	daa0 <sf_gen_load+0xc00>
    d92c:	add	r7, r7, #1
    d930:	ldr	r2, [pc, #536]	; db50 <sf_gen_load+0xcb0>
    d934:	asr	r3, r7, #31
    d938:	add	r2, pc, r2
    d93c:	lsr	r3, r3, #28
    d940:	add	r7, r7, r3
    d944:	and	r7, r7, #15
    d948:	sub	r7, r7, r3
    d94c:	lsl	r3, r7, #2
    d950:	add	r1, r2, r3
    d954:	ldr	r1, [r1, #660]	; 0x294
    d958:	cmp	r1, #0
    d95c:	beq	daa0 <sf_gen_load+0xc00>
    d960:	add	r7, r7, #1
    d964:	asr	r3, r7, #31
    d968:	lsr	r3, r3, #28
    d96c:	add	r7, r7, r3
    d970:	and	r7, r7, #15
    d974:	sub	r7, r7, r3
    d978:	lsl	r3, r7, #2
    d97c:	add	r1, r2, r3
    d980:	ldr	r1, [r1, #660]	; 0x294
    d984:	cmp	r1, #0
    d988:	beq	daa0 <sf_gen_load+0xc00>
    d98c:	add	r7, r7, #1
    d990:	asr	r3, r7, #31
    d994:	lsr	r3, r3, #28
    d998:	add	r7, r7, r3
    d99c:	and	r7, r7, #15
    d9a0:	sub	r7, r7, r3
    d9a4:	lsl	r3, r7, #2
    d9a8:	add	r1, r2, r3
    d9ac:	ldr	r1, [r1, #660]	; 0x294
    d9b0:	cmp	r1, #0
    d9b4:	beq	daa0 <sf_gen_load+0xc00>
    d9b8:	add	r7, r7, #1
    d9bc:	asr	r3, r7, #31
    d9c0:	lsr	r3, r3, #28
    d9c4:	add	r7, r7, r3
    d9c8:	and	r7, r7, #15
    d9cc:	sub	r7, r7, r3
    d9d0:	lsl	r3, r7, #2
    d9d4:	add	r1, r2, r3
    d9d8:	ldr	r1, [r1, #660]	; 0x294
    d9dc:	cmp	r1, #0
    d9e0:	beq	daa0 <sf_gen_load+0xc00>
    d9e4:	add	r7, r7, #1
    d9e8:	asr	r3, r7, #31
    d9ec:	lsr	r3, r3, #28
    d9f0:	add	r7, r7, r3
    d9f4:	and	r7, r7, #15
    d9f8:	sub	r7, r7, r3
    d9fc:	lsl	r3, r7, #2
    da00:	add	r1, r2, r3
    da04:	ldr	r1, [r1, #660]	; 0x294
    da08:	cmp	r1, #0
    da0c:	beq	daa0 <sf_gen_load+0xc00>
    da10:	add	r7, r7, #1
    da14:	asr	r3, r7, #31
    da18:	lsr	r3, r3, #28
    da1c:	add	r7, r7, r3
    da20:	and	r7, r7, #15
    da24:	sub	r7, r7, r3
    da28:	lsl	r3, r7, #2
    da2c:	add	r1, r2, r3
    da30:	ldr	r1, [r1, #660]	; 0x294
    da34:	cmp	r1, #0
    da38:	beq	daa0 <sf_gen_load+0xc00>
    da3c:	add	r7, r7, #1
    da40:	asr	r3, r7, #31
    da44:	lsr	r3, r3, #28
    da48:	add	r7, r7, r3
    da4c:	and	r7, r7, #15
    da50:	sub	r7, r7, r3
    da54:	lsl	r3, r7, #2
    da58:	add	r1, r2, r3
    da5c:	ldr	r1, [r1, #660]	; 0x294
    da60:	cmp	r1, #0
    da64:	beq	daa0 <sf_gen_load+0xc00>
    da68:	add	r7, r7, #1
    da6c:	asr	r3, r7, #31
    da70:	lsr	r3, r3, #28
    da74:	add	r7, r7, r3
    da78:	and	r7, r7, #15
    da7c:	sub	r7, r7, r3
    da80:	lsl	r3, r7, #2
    da84:	add	r1, r2, r3
    da88:	ldr	r1, [r1, #660]	; 0x294
    da8c:	cmp	r1, #0
    da90:	addne	r3, r7, #1
    da94:	andne	r3, r3, #15
    da98:	strne	r3, [r2, #656]	; 0x290
    da9c:	bne	d178 <sf_gen_load+0x2d8>
    daa0:	ldr	r2, [pc, #172]	; db54 <sf_gen_load+0xcb4>
    daa4:	add	r2, pc, r2
    daa8:	str	r7, [r2, #656]	; 0x290
    daac:	ldr	r2, [pc, #164]	; db58 <sf_gen_load+0xcb8>
    dab0:	mov	r1, #1
    dab4:	add	r2, pc, r2
    dab8:	add	r3, r2, r3
    dabc:	str	r7, [r2, #864]	; 0x360
    dac0:	str	r1, [r3, #660]	; 0x294
    dac4:	b	d4cc <sf_gen_load+0x62c>
    dac8:	bl	23b0 <alloc_reg>
    dacc:	str	r0, [r6, #856]	; 0x358
    dad0:	b	d76c <sf_gen_load+0x8cc>
    dad4:	bl	23b0 <alloc_reg>
    dad8:	str	r0, [r6, #856]	; 0x358
    dadc:	b	d718 <sf_gen_load+0x878>
    dae0:	bl	23b0 <alloc_reg>
    dae4:	mov	r7, r0
    dae8:	str	r0, [r6, #856]	; 0x358
    daec:	b	d614 <sf_gen_load+0x774>
    daf0:	bl	23b0 <alloc_reg>
    daf4:	str	r0, [r6, #856]	; 0x358
    daf8:	b	d7b8 <sf_gen_load+0x918>
    dafc:	ldr	r0, [pc, #88]	; db5c <sf_gen_load+0xcbc>
    db00:	add	r0, pc, r0
    db04:	bl	2370 <sf_bpf_error>
    db08:	.word	0x000314c0
    db0c:	.word	0x00031300
    db10:	.word	0x000137cc
    db14:	.word	0x000311e0
    db18:	.word	0x000311d0
    db1c:	.word	0x000147f0
    db20:	.word	0x000310d4
    db24:	.word	0x000146ec
    db28:	.word	0x00030f70
    db2c:	.word	0x00001fff
    db30:	.word	0x00030eb8
    db34:	.word	0x00030dfc
    db38:	.word	0x00030d84
    db3c:	.word	0x00030cb4
    db40:	.word	0x000142e8
    db44:	.word	0x00030c44
    db48:	.word	0x00030bf0
    db4c:	.word	0x00030ba4
    db50:	.word	0x00030a30
    db54:	.word	0x000308c4
    db58:	.word	0x000308b4
    db5c:	.word	0x00013f00

0000db60 <sf_gen_relation>:
    db60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    db64:	mov	r5, r1
    db68:	mov	r6, r2
    db6c:	mov	sl, r0
    db70:	mov	r9, r3
    db74:	bl	2810 <newchunk.constprop.49>
    db78:	mov	r3, #97	; 0x61
    db7c:	str	r3, [r0]
    db80:	ldr	r3, [r6, #8]
    db84:	mov	r7, r0
    db88:	str	r3, [r0, #12]
    db8c:	bl	2810 <newchunk.constprop.49>
    db90:	mov	r3, #96	; 0x60
    db94:	cmp	sl, #16
    db98:	str	r3, [r0]
    db9c:	ldr	r3, [r5, #8]
    dba0:	mov	r8, r0
    dba4:	str	r3, [r0, #12]
    dba8:	beq	dc8c <sf_gen_relation+0x12c>
    dbac:	bl	29f8 <newchunk.constprop.50>
    dbb0:	orr	sl, sl, #13
    dbb4:	mov	r4, r0
    dbb8:	str	r0, [r4, #96]	; 0x60
    dbbc:	str	sl, [r0, #8]
    dbc0:	cmp	r9, #0
    dbc4:	mov	r0, r7
    dbc8:	ldrne	r3, [r4, #44]	; 0x2c
    dbcc:	clzne	r3, r3
    dbd0:	lsrne	r3, r3, #5
    dbd4:	strne	r3, [r4, #44]	; 0x2c
    dbd8:	b	dbe0 <sf_gen_relation+0x80>
    dbdc:	mov	r0, r3
    dbe0:	ldr	r3, [r0, #16]
    dbe4:	cmp	r3, #0
    dbe8:	bne	dbdc <sf_gen_relation+0x7c>
    dbec:	str	r8, [r0, #16]
    dbf0:	ldr	r0, [r6, #4]
    dbf4:	b	dbfc <sf_gen_relation+0x9c>
    dbf8:	mov	r0, r3
    dbfc:	ldr	r3, [r0, #16]
    dc00:	cmp	r3, #0
    dc04:	bne	dbf8 <sf_gen_relation+0x98>
    dc08:	str	r7, [r0, #16]
    dc0c:	ldr	r0, [r5, #4]
    dc10:	ldr	r2, [r6, #4]
    dc14:	b	dc1c <sf_gen_relation+0xbc>
    dc18:	mov	r0, r3
    dc1c:	ldr	r3, [r0, #16]
    dc20:	cmp	r3, #0
    dc24:	bne	dc18 <sf_gen_relation+0xb8>
    dc28:	str	r2, [r0, #16]
    dc2c:	ldr	r1, [r5, #4]
    dc30:	ldr	r2, [pc, #168]	; dce0 <sf_gen_relation+0x180>
    dc34:	str	r1, [r4, #4]
    dc38:	ldr	r1, [r5, #8]
    dc3c:	add	r2, pc, r2
    dc40:	add	r1, r2, r1, lsl #2
    dc44:	str	r3, [r1, #660]	; 0x294
    dc48:	ldr	r1, [r6, #8]
    dc4c:	add	r2, r2, r1, lsl #2
    dc50:	str	r3, [r2, #660]	; 0x294
    dc54:	ldr	r0, [r5]
    dc58:	ldr	r5, [r6]
    dc5c:	cmp	r0, #0
    dc60:	beq	dcd0 <sf_gen_relation+0x170>
    dc64:	cmp	r5, #0
    dc68:	moveq	r5, r0
    dc6c:	beq	dc78 <sf_gen_relation+0x118>
    dc70:	mov	r1, r5
    dc74:	bl	6390 <sf_gen_and>
    dc78:	mov	r0, r5
    dc7c:	mov	r1, r4
    dc80:	bl	6390 <sf_gen_and>
    dc84:	mov	r0, r4
    dc88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    dc8c:	bl	2810 <newchunk.constprop.49>
    dc90:	mov	r3, #28
    dc94:	str	r3, [r0]
    dc98:	mov	sl, r0
    dc9c:	bl	29f8 <newchunk.constprop.50>
    dca0:	mov	r3, #21
    dca4:	mov	r2, r8
    dca8:	mov	r4, r0
    dcac:	str	r0, [r4, #96]	; 0x60
    dcb0:	str	r3, [r0, #8]
    dcb4:	b	dcbc <sf_gen_relation+0x15c>
    dcb8:	mov	r2, r3
    dcbc:	ldr	r3, [r2, #16]
    dcc0:	cmp	r3, #0
    dcc4:	bne	dcb8 <sf_gen_relation+0x158>
    dcc8:	str	sl, [r2, #16]
    dccc:	b	dbc0 <sf_gen_relation+0x60>
    dcd0:	cmp	r5, #0
    dcd4:	bne	dc78 <sf_gen_relation+0x118>
    dcd8:	mov	r0, r4
    dcdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    dce0:	.word	0x0003072c

0000dce4 <sf_gen_loadlen>:
    dce4:	ldr	r2, [pc, #1188]	; e190 <sf_gen_loadlen+0x4ac>
    dce8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dcec:	add	r2, pc, r2
    dcf0:	ldr	r4, [r2, #656]	; 0x290
    dcf4:	lsl	r3, r4, #2
    dcf8:	add	r1, r2, r3
    dcfc:	ldr	r1, [r1, #660]	; 0x294
    dd00:	cmp	r1, #0
    dd04:	beq	dfcc <sf_gen_loadlen+0x2e8>
    dd08:	add	r4, r4, #1
    dd0c:	asr	r3, r4, #31
    dd10:	lsr	r3, r3, #28
    dd14:	add	r4, r4, r3
    dd18:	and	r4, r4, #15
    dd1c:	sub	r4, r4, r3
    dd20:	str	r4, [r2, #656]	; 0x290
    dd24:	lsl	r3, r4, #2
    dd28:	add	r1, r2, r3
    dd2c:	ldr	r1, [r1, #660]	; 0x294
    dd30:	cmp	r1, #0
    dd34:	beq	dfcc <sf_gen_loadlen+0x2e8>
    dd38:	add	r4, r4, #1
    dd3c:	asr	r3, r4, #31
    dd40:	lsr	r3, r3, #28
    dd44:	add	r4, r4, r3
    dd48:	and	r4, r4, #15
    dd4c:	sub	r4, r4, r3
    dd50:	lsl	r3, r4, #2
    dd54:	add	r1, r2, r3
    dd58:	ldr	r1, [r1, #660]	; 0x294
    dd5c:	cmp	r1, #0
    dd60:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    dd64:	add	r4, r4, #1
    dd68:	asr	r3, r4, #31
    dd6c:	lsr	r3, r3, #28
    dd70:	add	r4, r4, r3
    dd74:	and	r4, r4, #15
    dd78:	sub	r4, r4, r3
    dd7c:	lsl	r3, r4, #2
    dd80:	add	r1, r2, r3
    dd84:	ldr	r1, [r1, #660]	; 0x294
    dd88:	cmp	r1, #0
    dd8c:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    dd90:	add	r4, r4, #1
    dd94:	asr	r3, r4, #31
    dd98:	lsr	r3, r3, #28
    dd9c:	add	r4, r4, r3
    dda0:	and	r4, r4, #15
    dda4:	sub	r4, r4, r3
    dda8:	lsl	r3, r4, #2
    ddac:	add	r1, r2, r3
    ddb0:	ldr	r1, [r1, #660]	; 0x294
    ddb4:	cmp	r1, #0
    ddb8:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    ddbc:	add	r4, r4, #1
    ddc0:	asr	r3, r4, #31
    ddc4:	lsr	r3, r3, #28
    ddc8:	add	r4, r4, r3
    ddcc:	and	r4, r4, #15
    ddd0:	sub	r4, r4, r3
    ddd4:	lsl	r3, r4, #2
    ddd8:	add	r1, r2, r3
    dddc:	ldr	r1, [r1, #660]	; 0x294
    dde0:	cmp	r1, #0
    dde4:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    dde8:	add	r4, r4, #1
    ddec:	asr	r3, r4, #31
    ddf0:	lsr	r3, r3, #28
    ddf4:	add	r4, r4, r3
    ddf8:	and	r4, r4, #15
    ddfc:	sub	r4, r4, r3
    de00:	lsl	r3, r4, #2
    de04:	add	r1, r2, r3
    de08:	ldr	r1, [r1, #660]	; 0x294
    de0c:	cmp	r1, #0
    de10:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    de14:	add	r4, r4, #1
    de18:	asr	r3, r4, #31
    de1c:	lsr	r3, r3, #28
    de20:	add	r4, r4, r3
    de24:	and	r4, r4, #15
    de28:	sub	r4, r4, r3
    de2c:	lsl	r3, r4, #2
    de30:	add	r1, r2, r3
    de34:	ldr	r1, [r1, #660]	; 0x294
    de38:	cmp	r1, #0
    de3c:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    de40:	add	r4, r4, #1
    de44:	asr	r3, r4, #31
    de48:	lsr	r3, r3, #28
    de4c:	add	r4, r4, r3
    de50:	and	r4, r4, #15
    de54:	sub	r4, r4, r3
    de58:	lsl	r3, r4, #2
    de5c:	add	r1, r2, r3
    de60:	ldr	r1, [r1, #660]	; 0x294
    de64:	cmp	r1, #0
    de68:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    de6c:	add	r4, r4, #1
    de70:	asr	r3, r4, #31
    de74:	lsr	r3, r3, #28
    de78:	add	r4, r4, r3
    de7c:	and	r4, r4, #15
    de80:	sub	r4, r4, r3
    de84:	lsl	r3, r4, #2
    de88:	add	r2, r2, r3
    de8c:	ldr	r2, [r2, #660]	; 0x294
    de90:	cmp	r2, #0
    de94:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    de98:	add	r4, r4, #1
    de9c:	ldr	r2, [pc, #752]	; e194 <sf_gen_loadlen+0x4b0>
    dea0:	asr	r3, r4, #31
    dea4:	add	r2, pc, r2
    dea8:	lsr	r3, r3, #28
    deac:	add	r4, r4, r3
    deb0:	and	r4, r4, #15
    deb4:	sub	r4, r4, r3
    deb8:	lsl	r3, r4, #2
    debc:	add	r1, r2, r3
    dec0:	ldr	r1, [r1, #660]	; 0x294
    dec4:	cmp	r1, #0
    dec8:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    decc:	add	r4, r4, #1
    ded0:	asr	r3, r4, #31
    ded4:	lsr	r3, r3, #28
    ded8:	add	r4, r4, r3
    dedc:	and	r4, r4, #15
    dee0:	sub	r4, r4, r3
    dee4:	lsl	r3, r4, #2
    dee8:	add	r1, r2, r3
    deec:	ldr	r1, [r1, #660]	; 0x294
    def0:	cmp	r1, #0
    def4:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    def8:	add	r4, r4, #1
    defc:	asr	r3, r4, #31
    df00:	lsr	r3, r3, #28
    df04:	add	r4, r4, r3
    df08:	and	r4, r4, #15
    df0c:	sub	r4, r4, r3
    df10:	lsl	r3, r4, #2
    df14:	add	r1, r2, r3
    df18:	ldr	r1, [r1, #660]	; 0x294
    df1c:	cmp	r1, #0
    df20:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    df24:	add	r4, r4, #1
    df28:	asr	r3, r4, #31
    df2c:	lsr	r3, r3, #28
    df30:	add	r4, r4, r3
    df34:	and	r4, r4, #15
    df38:	sub	r4, r4, r3
    df3c:	lsl	r3, r4, #2
    df40:	add	r1, r2, r3
    df44:	ldr	r1, [r1, #660]	; 0x294
    df48:	cmp	r1, #0
    df4c:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    df50:	add	r4, r4, #1
    df54:	asr	r3, r4, #31
    df58:	lsr	r3, r3, #28
    df5c:	add	r4, r4, r3
    df60:	and	r4, r4, #15
    df64:	sub	r4, r4, r3
    df68:	lsl	r3, r4, #2
    df6c:	add	r1, r2, r3
    df70:	ldr	r1, [r1, #660]	; 0x294
    df74:	cmp	r1, #0
    df78:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    df7c:	add	r4, r4, #1
    df80:	asr	r3, r4, #31
    df84:	lsr	r3, r3, #28
    df88:	add	r4, r4, r3
    df8c:	and	r4, r4, #15
    df90:	sub	r4, r4, r3
    df94:	lsl	r3, r4, #2
    df98:	add	r1, r2, r3
    df9c:	ldr	r1, [r1, #660]	; 0x294
    dfa0:	cmp	r1, #0
    dfa4:	beq	dfc0 <sf_gen_loadlen+0x2dc>
    dfa8:	ldr	r0, [pc, #488]	; e198 <sf_gen_loadlen+0x4b4>
    dfac:	add	r4, r4, #1
    dfb0:	and	r4, r4, #15
    dfb4:	add	r0, pc, r0
    dfb8:	str	r4, [r2, #656]	; 0x290
    dfbc:	bl	2370 <sf_bpf_error>
    dfc0:	ldr	r2, [pc, #468]	; e19c <sf_gen_loadlen+0x4b8>
    dfc4:	add	r2, pc, r2
    dfc8:	str	r4, [r2, #656]	; 0x290
    dfcc:	ldr	r2, [pc, #460]	; e1a0 <sf_gen_loadlen+0x4bc>
    dfd0:	mov	r1, #1
    dfd4:	add	r2, pc, r2
    dfd8:	add	r3, r2, r3
    dfdc:	ldr	r5, [r2, #724]	; 0x2d4
    dfe0:	str	r1, [r3, #660]	; 0x294
    dfe4:	add	r6, r2, #728	; 0x2d8
    dfe8:	lsl	r7, r5, #3
    dfec:	add	r3, r2, r7
    dff0:	add	sl, r6, r7
    dff4:	ldr	r3, [r3, #728]	; 0x2d8
    dff8:	cmp	r3, #11
    dffc:	bhi	e150 <sf_gen_loadlen+0x46c>
    e000:	add	r5, r5, r1
    e004:	cmp	r5, #15
    e008:	str	r5, [r2, #724]	; 0x2d4
    e00c:	add	fp, sl, #8
    e010:	bgt	e184 <sf_gen_loadlen+0x4a0>
    e014:	mov	r9, #1024	; 0x400
    e018:	lsl	r9, r9, r5
    e01c:	mov	r0, r9
    e020:	bl	d38 <calloc@plt>
    e024:	cmp	r0, #0
    e028:	str	r0, [sl, #12]
    e02c:	beq	e184 <sf_gen_loadlen+0x4a0>
    e030:	cmp	r9, #11
    e034:	str	r9, [sl, #8]
    e038:	bls	e184 <sf_gen_loadlen+0x4a0>
    e03c:	add	r7, r7, #8
    e040:	add	r6, r6, r7
    e044:	lsl	r7, r5, #3
    e048:	ldr	sl, [pc, #340]	; e1a4 <sf_gen_loadlen+0x4c0>
    e04c:	sub	r9, r9, #12
    e050:	add	sl, pc, sl
    e054:	add	r3, sl, r7
    e058:	str	r9, [fp]
    e05c:	ldr	r3, [r3, #728]	; 0x2d8
    e060:	add	r8, r0, r9
    e064:	cmp	r3, #19
    e068:	bhi	e174 <sf_gen_loadlen+0x490>
    e06c:	add	r5, r5, #1
    e070:	cmp	r5, #15
    e074:	str	r5, [sl, #724]	; 0x2d4
    e078:	add	fp, r6, #8
    e07c:	bgt	e184 <sf_gen_loadlen+0x4a0>
    e080:	mov	r3, #1024	; 0x400
    e084:	mov	r1, #1
    e088:	lsl	r9, r3, r5
    e08c:	mov	r0, r9
    e090:	bl	d38 <calloc@plt>
    e094:	cmp	r0, #0
    e098:	str	r0, [r6, #12]
    e09c:	beq	e184 <sf_gen_loadlen+0x4a0>
    e0a0:	cmp	r9, #19
    e0a4:	str	r9, [r6, #8]
    e0a8:	bls	e184 <sf_gen_loadlen+0x4a0>
    e0ac:	add	r6, sl, #728	; 0x2d8
    e0b0:	lsl	r7, r5, #3
    e0b4:	add	r6, r6, r7
    e0b8:	ldr	r2, [pc, #232]	; e1a8 <sf_gen_loadlen+0x4c4>
    e0bc:	sub	r3, r9, #20
    e0c0:	add	r2, pc, r2
    e0c4:	add	r7, r2, r7
    e0c8:	mov	r1, #128	; 0x80
    e0cc:	str	r3, [fp]
    e0d0:	str	r1, [r0, r3]
    e0d4:	ldr	r1, [r7, #728]	; 0x2d8
    e0d8:	add	r7, r0, r3
    e0dc:	cmp	r1, #19
    e0e0:	bhi	e164 <sf_gen_loadlen+0x480>
    e0e4:	add	r5, r5, #1
    e0e8:	cmp	r5, #15
    e0ec:	str	r5, [r2, #724]	; 0x2d4
    e0f0:	add	r9, r6, #8
    e0f4:	bgt	e184 <sf_gen_loadlen+0x4a0>
    e0f8:	mov	r3, #1024	; 0x400
    e0fc:	mov	r1, #1
    e100:	lsl	r5, r3, r5
    e104:	mov	r0, r5
    e108:	bl	d38 <calloc@plt>
    e10c:	cmp	r0, #0
    e110:	str	r0, [r6, #12]
    e114:	beq	e184 <sf_gen_loadlen+0x4a0>
    e118:	cmp	r5, #19
    e11c:	str	r5, [r6, #8]
    e120:	bls	e184 <sf_gen_loadlen+0x4a0>
    e124:	sub	r5, r5, #20
    e128:	add	r3, r0, r5
    e12c:	mov	r2, #2
    e130:	str	r5, [r9]
    e134:	str	r2, [r0, r5]
    e138:	str	r3, [r7, #16]
    e13c:	mov	r0, r8
    e140:	str	r4, [r3, #12]
    e144:	str	r7, [r8, #4]
    e148:	str	r4, [r8, #8]
    e14c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e150:	ldr	r9, [r6, r5, lsl #3]
    e154:	ldr	r0, [sl, #4]
    e158:	mov	r6, sl
    e15c:	mov	fp, sl
    e160:	b	e048 <sf_gen_loadlen+0x364>
    e164:	ldr	r5, [r6]
    e168:	ldr	r0, [r6, #4]
    e16c:	mov	r9, r6
    e170:	b	e124 <sf_gen_loadlen+0x440>
    e174:	ldr	r9, [r6]
    e178:	ldr	r0, [r6, #4]
    e17c:	mov	fp, r6
    e180:	b	e0b8 <sf_gen_loadlen+0x3d4>
    e184:	ldr	r0, [pc, #32]	; e1ac <sf_gen_loadlen+0x4c8>
    e188:	add	r0, pc, r0
    e18c:	bl	2370 <sf_bpf_error>
    e190:	.word	0x0003067c
    e194:	.word	0x000304c4
    e198:	.word	0x00012994
    e19c:	.word	0x000303a4
    e1a0:	.word	0x00030394
    e1a4:	.word	0x00030318
    e1a8:	.word	0x000302a8
    e1ac:	.word	0x00012858

0000e1b0 <sf_gen_loadi>:
    e1b0:	ldr	r3, [pc, #1220]	; e67c <sf_gen_loadi+0x4cc>
    e1b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e1b8:	add	r3, pc, r3
    e1bc:	add	r2, r3, #728	; 0x2d8
    e1c0:	ldr	r6, [r3, #724]	; 0x2d4
    e1c4:	sub	sp, sp, #12
    e1c8:	mov	r5, r0
    e1cc:	lsl	r4, r6, #3
    e1d0:	add	r1, r3, r4
    e1d4:	add	r4, r2, r4
    e1d8:	ldr	r1, [r1, #728]	; 0x2d8
    e1dc:	cmp	r1, #11
    e1e0:	bhi	e63c <sf_gen_loadi+0x48c>
    e1e4:	add	r6, r6, #1
    e1e8:	cmp	r6, #15
    e1ec:	str	r6, [r3, #724]	; 0x2d4
    e1f0:	add	r9, r4, #8
    e1f4:	bgt	e670 <sf_gen_loadi+0x4c0>
    e1f8:	mov	r8, #1024	; 0x400
    e1fc:	mov	r1, #1
    e200:	lsl	r8, r8, r6
    e204:	mov	r0, r8
    e208:	bl	d38 <calloc@plt>
    e20c:	cmp	r0, #0
    e210:	mov	r7, r0
    e214:	str	r0, [r4, #12]
    e218:	beq	e670 <sf_gen_loadi+0x4c0>
    e21c:	cmp	r8, #11
    e220:	str	r8, [r4, #8]
    e224:	bls	e670 <sf_gen_loadi+0x4c0>
    e228:	ldr	r2, [pc, #1104]	; e680 <sf_gen_loadi+0x4d0>
    e22c:	sub	r8, r8, #12
    e230:	add	r2, pc, r2
    e234:	str	r8, [r9]
    e238:	ldr	r4, [r2, #656]	; 0x290
    e23c:	lsl	r3, r4, #2
    e240:	add	r1, r2, r3
    e244:	ldr	r1, [r1, #660]	; 0x294
    e248:	cmp	r1, #0
    e24c:	beq	e514 <sf_gen_loadi+0x364>
    e250:	add	r4, r4, #1
    e254:	asr	r3, r4, #31
    e258:	lsr	r3, r3, #28
    e25c:	add	r4, r4, r3
    e260:	and	r4, r4, #15
    e264:	sub	r4, r4, r3
    e268:	str	r4, [r2, #656]	; 0x290
    e26c:	lsl	r3, r4, #2
    e270:	add	r1, r2, r3
    e274:	ldr	r1, [r1, #660]	; 0x294
    e278:	cmp	r1, #0
    e27c:	beq	e514 <sf_gen_loadi+0x364>
    e280:	add	r4, r4, #1
    e284:	asr	r3, r4, #31
    e288:	lsr	r3, r3, #28
    e28c:	add	r4, r4, r3
    e290:	and	r4, r4, #15
    e294:	sub	r4, r4, r3
    e298:	lsl	r3, r4, #2
    e29c:	add	r1, r2, r3
    e2a0:	ldr	r1, [r1, #660]	; 0x294
    e2a4:	cmp	r1, #0
    e2a8:	beq	e508 <sf_gen_loadi+0x358>
    e2ac:	add	r4, r4, #1
    e2b0:	asr	r3, r4, #31
    e2b4:	lsr	r3, r3, #28
    e2b8:	add	r4, r4, r3
    e2bc:	and	r4, r4, #15
    e2c0:	sub	r4, r4, r3
    e2c4:	lsl	r3, r4, #2
    e2c8:	add	r1, r2, r3
    e2cc:	ldr	r1, [r1, #660]	; 0x294
    e2d0:	cmp	r1, #0
    e2d4:	beq	e508 <sf_gen_loadi+0x358>
    e2d8:	add	r4, r4, #1
    e2dc:	asr	r3, r4, #31
    e2e0:	lsr	r3, r3, #28
    e2e4:	add	r4, r4, r3
    e2e8:	and	r4, r4, #15
    e2ec:	sub	r4, r4, r3
    e2f0:	lsl	r3, r4, #2
    e2f4:	add	r1, r2, r3
    e2f8:	ldr	r1, [r1, #660]	; 0x294
    e2fc:	cmp	r1, #0
    e300:	beq	e508 <sf_gen_loadi+0x358>
    e304:	add	r4, r4, #1
    e308:	asr	r3, r4, #31
    e30c:	lsr	r3, r3, #28
    e310:	add	r4, r4, r3
    e314:	and	r4, r4, #15
    e318:	sub	r4, r4, r3
    e31c:	lsl	r3, r4, #2
    e320:	add	r1, r2, r3
    e324:	ldr	r1, [r1, #660]	; 0x294
    e328:	cmp	r1, #0
    e32c:	beq	e508 <sf_gen_loadi+0x358>
    e330:	add	r4, r4, #1
    e334:	asr	r3, r4, #31
    e338:	lsr	r3, r3, #28
    e33c:	add	r4, r4, r3
    e340:	and	r4, r4, #15
    e344:	sub	r4, r4, r3
    e348:	lsl	r3, r4, #2
    e34c:	add	r1, r2, r3
    e350:	ldr	r1, [r1, #660]	; 0x294
    e354:	cmp	r1, #0
    e358:	beq	e508 <sf_gen_loadi+0x358>
    e35c:	add	r4, r4, #1
    e360:	asr	r3, r4, #31
    e364:	lsr	r3, r3, #28
    e368:	add	r4, r4, r3
    e36c:	and	r4, r4, #15
    e370:	sub	r4, r4, r3
    e374:	lsl	r3, r4, #2
    e378:	add	r1, r2, r3
    e37c:	ldr	r1, [r1, #660]	; 0x294
    e380:	cmp	r1, #0
    e384:	beq	e508 <sf_gen_loadi+0x358>
    e388:	add	r4, r4, #1
    e38c:	asr	r3, r4, #31
    e390:	lsr	r3, r3, #28
    e394:	add	r4, r4, r3
    e398:	and	r4, r4, #15
    e39c:	sub	r4, r4, r3
    e3a0:	lsl	r3, r4, #2
    e3a4:	add	r1, r2, r3
    e3a8:	ldr	r1, [r1, #660]	; 0x294
    e3ac:	cmp	r1, #0
    e3b0:	beq	e508 <sf_gen_loadi+0x358>
    e3b4:	add	r4, r4, #1
    e3b8:	asr	r3, r4, #31
    e3bc:	lsr	r3, r3, #28
    e3c0:	add	r4, r4, r3
    e3c4:	and	r4, r4, #15
    e3c8:	sub	r4, r4, r3
    e3cc:	lsl	r3, r4, #2
    e3d0:	add	r2, r2, r3
    e3d4:	ldr	r2, [r2, #660]	; 0x294
    e3d8:	cmp	r2, #0
    e3dc:	beq	e508 <sf_gen_loadi+0x358>
    e3e0:	add	r4, r4, #1
    e3e4:	ldr	r2, [pc, #664]	; e684 <sf_gen_loadi+0x4d4>
    e3e8:	asr	r3, r4, #31
    e3ec:	add	r2, pc, r2
    e3f0:	lsr	r3, r3, #28
    e3f4:	add	r4, r4, r3
    e3f8:	and	r4, r4, #15
    e3fc:	sub	r4, r4, r3
    e400:	lsl	r3, r4, #2
    e404:	add	r1, r2, r3
    e408:	ldr	r1, [r1, #660]	; 0x294
    e40c:	cmp	r1, #0
    e410:	beq	e508 <sf_gen_loadi+0x358>
    e414:	add	r4, r4, #1
    e418:	asr	r3, r4, #31
    e41c:	lsr	r3, r3, #28
    e420:	add	r4, r4, r3
    e424:	and	r4, r4, #15
    e428:	sub	r4, r4, r3
    e42c:	lsl	r3, r4, #2
    e430:	add	r1, r2, r3
    e434:	ldr	r1, [r1, #660]	; 0x294
    e438:	cmp	r1, #0
    e43c:	beq	e508 <sf_gen_loadi+0x358>
    e440:	add	r4, r4, #1
    e444:	asr	r3, r4, #31
    e448:	lsr	r3, r3, #28
    e44c:	add	r4, r4, r3
    e450:	and	r4, r4, #15
    e454:	sub	r4, r4, r3
    e458:	lsl	r3, r4, #2
    e45c:	add	r1, r2, r3
    e460:	ldr	r1, [r1, #660]	; 0x294
    e464:	cmp	r1, #0
    e468:	beq	e508 <sf_gen_loadi+0x358>
    e46c:	add	r4, r4, #1
    e470:	asr	r3, r4, #31
    e474:	lsr	r3, r3, #28
    e478:	add	r4, r4, r3
    e47c:	and	r4, r4, #15
    e480:	sub	r4, r4, r3
    e484:	lsl	r3, r4, #2
    e488:	add	r1, r2, r3
    e48c:	ldr	r1, [r1, #660]	; 0x294
    e490:	cmp	r1, #0
    e494:	beq	e508 <sf_gen_loadi+0x358>
    e498:	add	r4, r4, #1
    e49c:	asr	r3, r4, #31
    e4a0:	lsr	r3, r3, #28
    e4a4:	add	r4, r4, r3
    e4a8:	and	r4, r4, #15
    e4ac:	sub	r4, r4, r3
    e4b0:	lsl	r3, r4, #2
    e4b4:	add	r1, r2, r3
    e4b8:	ldr	r1, [r1, #660]	; 0x294
    e4bc:	cmp	r1, #0
    e4c0:	beq	e508 <sf_gen_loadi+0x358>
    e4c4:	add	r4, r4, #1
    e4c8:	asr	r3, r4, #31
    e4cc:	lsr	r3, r3, #28
    e4d0:	add	r4, r4, r3
    e4d4:	and	r4, r4, #15
    e4d8:	sub	r4, r4, r3
    e4dc:	lsl	r3, r4, #2
    e4e0:	add	r1, r2, r3
    e4e4:	ldr	r1, [r1, #660]	; 0x294
    e4e8:	cmp	r1, #0
    e4ec:	beq	e508 <sf_gen_loadi+0x358>
    e4f0:	ldr	r0, [pc, #400]	; e688 <sf_gen_loadi+0x4d8>
    e4f4:	add	r4, r4, #1
    e4f8:	and	r4, r4, #15
    e4fc:	add	r0, pc, r0
    e500:	str	r4, [r2, #656]	; 0x290
    e504:	bl	2370 <sf_bpf_error>
    e508:	ldr	r2, [pc, #380]	; e68c <sf_gen_loadi+0x4dc>
    e50c:	add	r2, pc, r2
    e510:	str	r4, [r2, #656]	; 0x290
    e514:	ldr	r2, [pc, #372]	; e690 <sf_gen_loadi+0x4e0>
    e518:	lsl	r9, r6, #3
    e51c:	add	r2, pc, r2
    e520:	add	r1, r2, r9
    e524:	add	r3, r2, r3
    e528:	ldr	r0, [r1, #728]	; 0x2d8
    e52c:	add	sl, r2, #728	; 0x2d8
    e530:	mov	r1, #1
    e534:	cmp	r0, #19
    e538:	str	r1, [r3, #660]	; 0x294
    e53c:	add	r3, sl, r9
    e540:	bhi	e64c <sf_gen_loadi+0x49c>
    e544:	add	r6, r6, r1
    e548:	str	r6, [r2, #724]	; 0x2d4
    e54c:	add	r2, r3, #8
    e550:	cmp	r6, #15
    e554:	stm	sp, {r2, r3}
    e558:	bgt	e670 <sf_gen_loadi+0x4c0>
    e55c:	mov	fp, #1024	; 0x400
    e560:	lsl	fp, fp, r6
    e564:	mov	r0, fp
    e568:	bl	d38 <calloc@plt>
    e56c:	ldr	r3, [sp, #4]
    e570:	cmp	r0, #0
    e574:	str	r0, [r3, #12]
    e578:	beq	e670 <sf_gen_loadi+0x4c0>
    e57c:	cmp	fp, #19
    e580:	str	fp, [r3, #8]
    e584:	bls	e670 <sf_gen_loadi+0x4c0>
    e588:	add	r9, r9, #8
    e58c:	ldr	r2, [sp]
    e590:	add	sl, sl, r9
    e594:	lsl	r9, r6, #3
    e598:	ldr	ip, [pc, #244]	; e694 <sf_gen_loadi+0x4e4>
    e59c:	sub	r3, fp, #20
    e5a0:	add	ip, pc, ip
    e5a4:	add	r1, ip, r9
    e5a8:	add	r9, r0, r3
    e5ac:	str	r3, [r2]
    e5b0:	mov	r2, #0
    e5b4:	str	r2, [r0, r3]
    e5b8:	str	r5, [r9, #12]
    e5bc:	ldr	r3, [r1, #728]	; 0x2d8
    e5c0:	cmp	r3, #19
    e5c4:	bhi	e660 <sf_gen_loadi+0x4b0>
    e5c8:	add	r6, r6, #1
    e5cc:	cmp	r6, #15
    e5d0:	str	r6, [ip, #724]	; 0x2d4
    e5d4:	add	r5, sl, #8
    e5d8:	bgt	e670 <sf_gen_loadi+0x4c0>
    e5dc:	mov	r3, #1024	; 0x400
    e5e0:	mov	r1, #1
    e5e4:	lsl	r6, r3, r6
    e5e8:	mov	r0, r6
    e5ec:	bl	d38 <calloc@plt>
    e5f0:	cmp	r0, #0
    e5f4:	mov	r2, r0
    e5f8:	str	r0, [sl, #12]
    e5fc:	beq	e670 <sf_gen_loadi+0x4c0>
    e600:	cmp	r6, #19
    e604:	str	r6, [sl, #8]
    e608:	bls	e670 <sf_gen_loadi+0x4c0>
    e60c:	sub	r3, r6, #20
    e610:	add	r0, r7, r8
    e614:	add	r1, r2, r3
    e618:	mov	ip, #2
    e61c:	str	r3, [r5]
    e620:	str	ip, [r2, r3]
    e624:	str	r1, [r9, #16]
    e628:	str	r4, [r1, #12]
    e62c:	str	r9, [r0, #4]
    e630:	str	r4, [r0, #8]
    e634:	add	sp, sp, #12
    e638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e63c:	ldr	r8, [r2, r6, lsl #3]
    e640:	ldr	r7, [r4, #4]
    e644:	mov	r9, r4
    e648:	b	e228 <sf_gen_loadi+0x78>
    e64c:	ldr	fp, [sl, r6, lsl #3]
    e650:	ldr	r0, [r3, #4]
    e654:	mov	sl, r3
    e658:	mov	r2, r3
    e65c:	b	e598 <sf_gen_loadi+0x3e8>
    e660:	ldr	r6, [sl]
    e664:	ldr	r2, [sl, #4]
    e668:	mov	r5, sl
    e66c:	b	e60c <sf_gen_loadi+0x45c>
    e670:	ldr	r0, [pc, #32]	; e698 <sf_gen_loadi+0x4e8>
    e674:	add	r0, pc, r0
    e678:	bl	2370 <sf_bpf_error>
    e67c:	.word	0x000301b0
    e680:	.word	0x00030138
    e684:	.word	0x0002ff7c
    e688:	.word	0x0001244c
    e68c:	.word	0x0002fe5c
    e690:	.word	0x0002fe4c
    e694:	.word	0x0002fdc8
    e698:	.word	0x0001236c

0000e69c <sf_gen_neg>:
    e69c:	push	{r4, r5, r6, lr}
    e6a0:	mov	r5, r0
    e6a4:	bl	2810 <newchunk.constprop.49>
    e6a8:	mov	r3, #96	; 0x60
    e6ac:	str	r3, [r0]
    e6b0:	ldr	r3, [r5, #8]
    e6b4:	str	r3, [r0, #12]
    e6b8:	ldr	r3, [r5, #4]
    e6bc:	b	e6c4 <sf_gen_neg+0x28>
    e6c0:	mov	r3, r4
    e6c4:	ldr	r4, [r3, #16]
    e6c8:	cmp	r4, #0
    e6cc:	bne	e6c0 <sf_gen_neg+0x24>
    e6d0:	str	r0, [r3, #16]
    e6d4:	bl	2810 <newchunk.constprop.49>
    e6d8:	mov	r3, #132	; 0x84
    e6dc:	str	r4, [r0, #12]
    e6e0:	str	r3, [r0]
    e6e4:	ldr	r2, [r5, #4]
    e6e8:	b	e6f0 <sf_gen_neg+0x54>
    e6ec:	mov	r2, r3
    e6f0:	ldr	r3, [r2, #16]
    e6f4:	cmp	r3, #0
    e6f8:	bne	e6ec <sf_gen_neg+0x50>
    e6fc:	str	r0, [r2, #16]
    e700:	bl	2810 <newchunk.constprop.49>
    e704:	mov	r3, #2
    e708:	str	r3, [r0]
    e70c:	ldr	r3, [r5, #8]
    e710:	str	r3, [r0, #12]
    e714:	ldr	r2, [r5, #4]
    e718:	b	e720 <sf_gen_neg+0x84>
    e71c:	mov	r2, r3
    e720:	ldr	r3, [r2, #16]
    e724:	cmp	r3, #0
    e728:	bne	e71c <sf_gen_neg+0x80>
    e72c:	str	r0, [r2, #16]
    e730:	mov	r0, r5
    e734:	pop	{r4, r5, r6, pc}

0000e738 <sf_gen_arth>:
    e738:	push	{r4, r5, r6, r7, r8, lr}
    e73c:	mov	r4, r1
    e740:	mov	r6, r2
    e744:	mov	r8, r0
    e748:	bl	2810 <newchunk.constprop.49>
    e74c:	mov	r3, #97	; 0x61
    e750:	str	r3, [r0]
    e754:	ldr	r3, [r6, #8]
    e758:	mov	r5, r0
    e75c:	str	r3, [r0, #12]
    e760:	bl	2810 <newchunk.constprop.49>
    e764:	mov	r3, #96	; 0x60
    e768:	str	r3, [r0]
    e76c:	ldr	r3, [r4, #8]
    e770:	mov	r7, r0
    e774:	str	r3, [r0, #12]
    e778:	bl	2810 <newchunk.constprop.49>
    e77c:	orr	r3, r8, #12
    e780:	mov	ip, r7
    e784:	str	r3, [r0]
    e788:	b	e790 <sf_gen_arth+0x58>
    e78c:	mov	ip, r3
    e790:	ldr	r3, [ip, #16]
    e794:	cmp	r3, #0
    e798:	bne	e78c <sf_gen_arth+0x54>
    e79c:	str	r0, [ip, #16]
    e7a0:	mov	r0, r5
    e7a4:	b	e7ac <sf_gen_arth+0x74>
    e7a8:	mov	r0, r3
    e7ac:	ldr	r3, [r0, #16]
    e7b0:	cmp	r3, #0
    e7b4:	bne	e7a8 <sf_gen_arth+0x70>
    e7b8:	str	r7, [r0, #16]
    e7bc:	ldr	r0, [r6, #4]
    e7c0:	b	e7c8 <sf_gen_arth+0x90>
    e7c4:	mov	r0, r3
    e7c8:	ldr	r3, [r0, #16]
    e7cc:	cmp	r3, #0
    e7d0:	bne	e7c4 <sf_gen_arth+0x8c>
    e7d4:	str	r5, [r0, #16]
    e7d8:	ldr	r0, [r4, #4]
    e7dc:	ldr	r2, [r6, #4]
    e7e0:	b	e7e8 <sf_gen_arth+0xb0>
    e7e4:	mov	r0, r3
    e7e8:	ldr	r3, [r0, #16]
    e7ec:	cmp	r3, #0
    e7f0:	bne	e7e4 <sf_gen_arth+0xac>
    e7f4:	str	r2, [r0, #16]
    e7f8:	ldr	r5, [pc, #832]	; eb40 <sf_gen_arth+0x408>
    e7fc:	ldr	r2, [r4, #8]
    e800:	add	r5, pc, r5
    e804:	add	r2, r5, r2, lsl #2
    e808:	str	r3, [r2, #660]	; 0x294
    e80c:	ldr	r2, [r6, #8]
    e810:	add	r2, r5, r2, lsl #2
    e814:	str	r3, [r2, #660]	; 0x294
    e818:	bl	2810 <newchunk.constprop.49>
    e81c:	ldr	r3, [r5, #656]	; 0x290
    e820:	mov	r2, #2
    e824:	str	r2, [r0]
    e828:	lsl	r2, r3, r2
    e82c:	add	r1, r5, r2
    e830:	ldr	r1, [r1, #660]	; 0x294
    e834:	cmp	r1, #0
    e838:	beq	eb00 <sf_gen_arth+0x3c8>
    e83c:	add	r3, r3, #1
    e840:	asr	r2, r3, #31
    e844:	lsr	r2, r2, #28
    e848:	add	r3, r3, r2
    e84c:	and	r3, r3, #15
    e850:	sub	r3, r3, r2
    e854:	str	r3, [r5, #656]	; 0x290
    e858:	lsl	r2, r3, #2
    e85c:	add	r1, r5, r2
    e860:	ldr	r1, [r1, #660]	; 0x294
    e864:	cmp	r1, #0
    e868:	beq	eb00 <sf_gen_arth+0x3c8>
    e86c:	add	r3, r3, #1
    e870:	asr	r2, r3, #31
    e874:	lsr	r2, r2, #28
    e878:	add	r3, r3, r2
    e87c:	and	r3, r3, #15
    e880:	sub	r3, r3, r2
    e884:	lsl	r2, r3, #2
    e888:	add	r1, r5, r2
    e88c:	ldr	r1, [r1, #660]	; 0x294
    e890:	cmp	r1, #0
    e894:	beq	eaf4 <sf_gen_arth+0x3bc>
    e898:	add	r3, r3, #1
    e89c:	asr	r2, r3, #31
    e8a0:	lsr	r2, r2, #28
    e8a4:	add	r3, r3, r2
    e8a8:	and	r3, r3, #15
    e8ac:	sub	r3, r3, r2
    e8b0:	lsl	r2, r3, #2
    e8b4:	add	r1, r5, r2
    e8b8:	ldr	r1, [r1, #660]	; 0x294
    e8bc:	cmp	r1, #0
    e8c0:	beq	eaf4 <sf_gen_arth+0x3bc>
    e8c4:	add	r3, r3, #1
    e8c8:	asr	r2, r3, #31
    e8cc:	lsr	r2, r2, #28
    e8d0:	add	r3, r3, r2
    e8d4:	and	r3, r3, #15
    e8d8:	sub	r3, r3, r2
    e8dc:	lsl	r2, r3, #2
    e8e0:	add	r1, r5, r2
    e8e4:	ldr	r1, [r1, #660]	; 0x294
    e8e8:	cmp	r1, #0
    e8ec:	beq	eaf4 <sf_gen_arth+0x3bc>
    e8f0:	add	r3, r3, #1
    e8f4:	asr	r2, r3, #31
    e8f8:	lsr	r2, r2, #28
    e8fc:	add	r3, r3, r2
    e900:	and	r3, r3, #15
    e904:	sub	r3, r3, r2
    e908:	lsl	r2, r3, #2
    e90c:	add	r1, r5, r2
    e910:	ldr	r1, [r1, #660]	; 0x294
    e914:	cmp	r1, #0
    e918:	beq	eaf4 <sf_gen_arth+0x3bc>
    e91c:	add	r3, r3, #1
    e920:	asr	r2, r3, #31
    e924:	lsr	r2, r2, #28
    e928:	add	r3, r3, r2
    e92c:	and	r3, r3, #15
    e930:	sub	r3, r3, r2
    e934:	lsl	r2, r3, #2
    e938:	add	r1, r5, r2
    e93c:	ldr	r1, [r1, #660]	; 0x294
    e940:	cmp	r1, #0
    e944:	beq	eaf4 <sf_gen_arth+0x3bc>
    e948:	add	r3, r3, #1
    e94c:	asr	r2, r3, #31
    e950:	lsr	r2, r2, #28
    e954:	add	r3, r3, r2
    e958:	and	r3, r3, #15
    e95c:	sub	r3, r3, r2
    e960:	lsl	r2, r3, #2
    e964:	add	r1, r5, r2
    e968:	ldr	r1, [r1, #660]	; 0x294
    e96c:	cmp	r1, #0
    e970:	beq	eaf4 <sf_gen_arth+0x3bc>
    e974:	add	r3, r3, #1
    e978:	asr	r2, r3, #31
    e97c:	lsr	r2, r2, #28
    e980:	add	r3, r3, r2
    e984:	and	r3, r3, #15
    e988:	sub	r3, r3, r2
    e98c:	lsl	r2, r3, #2
    e990:	add	r1, r5, r2
    e994:	ldr	r1, [r1, #660]	; 0x294
    e998:	cmp	r1, #0
    e99c:	beq	eaf4 <sf_gen_arth+0x3bc>
    e9a0:	add	r3, r3, #1
    e9a4:	ldr	r1, [pc, #408]	; eb44 <sf_gen_arth+0x40c>
    e9a8:	asr	r2, r3, #31
    e9ac:	add	r1, pc, r1
    e9b0:	lsr	r2, r2, #28
    e9b4:	add	r3, r3, r2
    e9b8:	and	r3, r3, #15
    e9bc:	sub	r3, r3, r2
    e9c0:	lsl	r2, r3, #2
    e9c4:	add	ip, r1, r2
    e9c8:	ldr	ip, [ip, #660]	; 0x294
    e9cc:	cmp	ip, #0
    e9d0:	beq	eaf4 <sf_gen_arth+0x3bc>
    e9d4:	add	r3, r3, #1
    e9d8:	asr	r2, r3, #31
    e9dc:	lsr	r2, r2, #28
    e9e0:	add	r3, r3, r2
    e9e4:	and	r3, r3, #15
    e9e8:	sub	r3, r3, r2
    e9ec:	lsl	r2, r3, #2
    e9f0:	add	ip, r1, r2
    e9f4:	ldr	ip, [ip, #660]	; 0x294
    e9f8:	cmp	ip, #0
    e9fc:	beq	eaf4 <sf_gen_arth+0x3bc>
    ea00:	add	r3, r3, #1
    ea04:	asr	r2, r3, #31
    ea08:	lsr	r2, r2, #28
    ea0c:	add	r3, r3, r2
    ea10:	and	r3, r3, #15
    ea14:	sub	r3, r3, r2
    ea18:	lsl	r2, r3, #2
    ea1c:	add	ip, r1, r2
    ea20:	ldr	ip, [ip, #660]	; 0x294
    ea24:	cmp	ip, #0
    ea28:	beq	eaf4 <sf_gen_arth+0x3bc>
    ea2c:	add	r3, r3, #1
    ea30:	asr	r2, r3, #31
    ea34:	lsr	r2, r2, #28
    ea38:	add	r3, r3, r2
    ea3c:	and	r3, r3, #15
    ea40:	sub	r3, r3, r2
    ea44:	lsl	r2, r3, #2
    ea48:	add	ip, r1, r2
    ea4c:	ldr	ip, [ip, #660]	; 0x294
    ea50:	cmp	ip, #0
    ea54:	beq	eaf4 <sf_gen_arth+0x3bc>
    ea58:	add	r3, r3, #1
    ea5c:	asr	r2, r3, #31
    ea60:	lsr	r2, r2, #28
    ea64:	add	r3, r3, r2
    ea68:	and	r3, r3, #15
    ea6c:	sub	r3, r3, r2
    ea70:	lsl	r2, r3, #2
    ea74:	add	ip, r1, r2
    ea78:	ldr	ip, [ip, #660]	; 0x294
    ea7c:	cmp	ip, #0
    ea80:	beq	eaf4 <sf_gen_arth+0x3bc>
    ea84:	add	r3, r3, #1
    ea88:	asr	r2, r3, #31
    ea8c:	lsr	r2, r2, #28
    ea90:	add	r3, r3, r2
    ea94:	and	r3, r3, #15
    ea98:	sub	r3, r3, r2
    ea9c:	lsl	r2, r3, #2
    eaa0:	add	ip, r1, r2
    eaa4:	ldr	ip, [ip, #660]	; 0x294
    eaa8:	cmp	ip, #0
    eaac:	beq	eaf4 <sf_gen_arth+0x3bc>
    eab0:	add	r3, r3, #1
    eab4:	asr	r2, r3, #31
    eab8:	lsr	r2, r2, #28
    eabc:	add	r3, r3, r2
    eac0:	and	r3, r3, #15
    eac4:	sub	r3, r3, r2
    eac8:	lsl	r2, r3, #2
    eacc:	add	ip, r1, r2
    ead0:	ldr	ip, [ip, #660]	; 0x294
    ead4:	cmp	ip, #0
    ead8:	beq	eaf4 <sf_gen_arth+0x3bc>
    eadc:	ldr	r0, [pc, #100]	; eb48 <sf_gen_arth+0x410>
    eae0:	add	r3, r3, #1
    eae4:	and	r3, r3, #15
    eae8:	add	r0, pc, r0
    eaec:	str	r3, [r1, #656]	; 0x290
    eaf0:	bl	2370 <sf_bpf_error>
    eaf4:	ldr	r1, [pc, #80]	; eb4c <sf_gen_arth+0x414>
    eaf8:	add	r1, pc, r1
    eafc:	str	r3, [r1, #656]	; 0x290
    eb00:	ldr	r1, [pc, #72]	; eb50 <sf_gen_arth+0x418>
    eb04:	mov	ip, #1
    eb08:	add	r1, pc, r1
    eb0c:	add	r2, r1, r2
    eb10:	str	ip, [r2, #660]	; 0x294
    eb14:	str	r3, [r0, #12]
    eb18:	str	r3, [r4, #8]
    eb1c:	ldr	r2, [r4, #4]
    eb20:	b	eb28 <sf_gen_arth+0x3f0>
    eb24:	mov	r2, r3
    eb28:	ldr	r3, [r2, #16]
    eb2c:	cmp	r3, #0
    eb30:	bne	eb24 <sf_gen_arth+0x3ec>
    eb34:	str	r0, [r2, #16]
    eb38:	mov	r0, r4
    eb3c:	pop	{r4, r5, r6, r7, r8, pc}
    eb40:	.word	0x0002fb68
    eb44:	.word	0x0002f9bc
    eb48:	.word	0x00011e60
    eb4c:	.word	0x0002f870
    eb50:	.word	0x0002f860

0000eb54 <sf_gen_greater>:
    eb54:	ldr	r3, [pc, #312]	; ec94 <sf_gen_greater+0x140>
    eb58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    eb5c:	add	r3, pc, r3
    eb60:	add	r8, r3, #728	; 0x2d8
    eb64:	ldr	r4, [r3, #724]	; 0x2d4
    eb68:	mov	r5, r0
    eb6c:	lsl	r7, r4, #3
    eb70:	add	r2, r3, r7
    eb74:	add	r9, r8, r7
    eb78:	ldr	r2, [r2, #728]	; 0x2d8
    eb7c:	cmp	r2, #19
    eb80:	bhi	ec64 <sf_gen_greater+0x110>
    eb84:	add	r4, r4, #1
    eb88:	cmp	r4, #15
    eb8c:	str	r4, [r3, #724]	; 0x2d4
    eb90:	add	sl, r9, #8
    eb94:	bgt	ec88 <sf_gen_greater+0x134>
    eb98:	mov	r3, #1024	; 0x400
    eb9c:	mov	r1, #1
    eba0:	lsl	r6, r3, r4
    eba4:	mov	r0, r6
    eba8:	bl	d38 <calloc@plt>
    ebac:	cmp	r0, #0
    ebb0:	str	r0, [r9, #12]
    ebb4:	beq	ec88 <sf_gen_greater+0x134>
    ebb8:	cmp	r6, #19
    ebbc:	str	r6, [r9, #8]
    ebc0:	bls	ec88 <sf_gen_greater+0x134>
    ebc4:	add	r7, r7, #8
    ebc8:	add	r8, r8, r7
    ebcc:	lsl	r7, r4, #3
    ebd0:	ldr	r2, [pc, #192]	; ec98 <sf_gen_greater+0x144>
    ebd4:	sub	r3, r6, #20
    ebd8:	add	r2, pc, r2
    ebdc:	add	r7, r2, r7
    ebe0:	mov	r1, #128	; 0x80
    ebe4:	str	r3, [sl]
    ebe8:	str	r1, [r0, r3]
    ebec:	ldr	r1, [r7, #728]	; 0x2d8
    ebf0:	add	r6, r0, r3
    ebf4:	cmp	r1, #207	; 0xcf
    ebf8:	bhi	ec78 <sf_gen_greater+0x124>
    ebfc:	add	r4, r4, #1
    ec00:	cmp	r4, #15
    ec04:	str	r4, [r2, #724]	; 0x2d4
    ec08:	add	r7, r8, #8
    ec0c:	bgt	ec88 <sf_gen_greater+0x134>
    ec10:	mov	r3, #1024	; 0x400
    ec14:	mov	r1, #1
    ec18:	lsl	r4, r3, r4
    ec1c:	mov	r0, r4
    ec20:	bl	d38 <calloc@plt>
    ec24:	cmp	r0, #0
    ec28:	str	r0, [r8, #12]
    ec2c:	beq	ec88 <sf_gen_greater+0x134>
    ec30:	cmp	r4, #207	; 0xcf
    ec34:	str	r4, [r8, #8]
    ec38:	bls	ec88 <sf_gen_greater+0x134>
    ec3c:	sub	r4, r4, #208	; 0xd0
    ec40:	add	r3, r0, r4
    ec44:	mov	r2, #53	; 0x35
    ec48:	str	r4, [r7]
    ec4c:	mov	r0, r3
    ec50:	str	r3, [r3, #96]	; 0x60
    ec54:	str	r6, [r3, #4]
    ec58:	str	r5, [r3, #20]
    ec5c:	str	r2, [r3, #8]
    ec60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ec64:	ldr	r6, [r8, r4, lsl #3]
    ec68:	ldr	r0, [r9, #4]
    ec6c:	mov	r8, r9
    ec70:	mov	sl, r9
    ec74:	b	ebd0 <sf_gen_greater+0x7c>
    ec78:	ldr	r4, [r8]
    ec7c:	ldr	r0, [r8, #4]
    ec80:	mov	r7, r8
    ec84:	b	ec3c <sf_gen_greater+0xe8>
    ec88:	ldr	r0, [pc, #12]	; ec9c <sf_gen_greater+0x148>
    ec8c:	add	r0, pc, r0
    ec90:	bl	2370 <sf_bpf_error>
    ec94:	.word	0x0002f80c
    ec98:	.word	0x0002f790
    ec9c:	.word	0x00011d54

0000eca0 <sf_gen_less>:
    eca0:	ldr	r3, [pc, #324]	; edec <sf_gen_less+0x14c>
    eca4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    eca8:	add	r3, pc, r3
    ecac:	add	r8, r3, #728	; 0x2d8
    ecb0:	ldr	r4, [r3, #724]	; 0x2d4
    ecb4:	mov	r5, r0
    ecb8:	lsl	r7, r4, #3
    ecbc:	add	r2, r3, r7
    ecc0:	add	r9, r8, r7
    ecc4:	ldr	r2, [r2, #728]	; 0x2d8
    ecc8:	cmp	r2, #19
    eccc:	bhi	edbc <sf_gen_less+0x11c>
    ecd0:	add	r4, r4, #1
    ecd4:	cmp	r4, #15
    ecd8:	str	r4, [r3, #724]	; 0x2d4
    ecdc:	add	sl, r9, #8
    ece0:	bgt	ede0 <sf_gen_less+0x140>
    ece4:	mov	r3, #1024	; 0x400
    ece8:	mov	r1, #1
    ecec:	lsl	r6, r3, r4
    ecf0:	mov	r0, r6
    ecf4:	bl	d38 <calloc@plt>
    ecf8:	cmp	r0, #0
    ecfc:	str	r0, [r9, #12]
    ed00:	beq	ede0 <sf_gen_less+0x140>
    ed04:	cmp	r6, #19
    ed08:	str	r6, [r9, #8]
    ed0c:	bls	ede0 <sf_gen_less+0x140>
    ed10:	add	r7, r7, #8
    ed14:	add	r8, r8, r7
    ed18:	lsl	r7, r4, #3
    ed1c:	ldr	r2, [pc, #204]	; edf0 <sf_gen_less+0x150>
    ed20:	sub	r3, r6, #20
    ed24:	add	r2, pc, r2
    ed28:	add	r7, r2, r7
    ed2c:	mov	r1, #128	; 0x80
    ed30:	str	r3, [sl]
    ed34:	str	r1, [r0, r3]
    ed38:	ldr	r1, [r7, #728]	; 0x2d8
    ed3c:	add	r6, r0, r3
    ed40:	cmp	r1, #207	; 0xcf
    ed44:	bhi	edd0 <sf_gen_less+0x130>
    ed48:	add	r4, r4, #1
    ed4c:	cmp	r4, #15
    ed50:	str	r4, [r2, #724]	; 0x2d4
    ed54:	add	r7, r8, #8
    ed58:	bgt	ede0 <sf_gen_less+0x140>
    ed5c:	mov	r3, #1024	; 0x400
    ed60:	mov	r1, #1
    ed64:	lsl	r4, r3, r4
    ed68:	mov	r0, r4
    ed6c:	bl	d38 <calloc@plt>
    ed70:	cmp	r0, #0
    ed74:	str	r0, [r8, #12]
    ed78:	beq	ede0 <sf_gen_less+0x140>
    ed7c:	cmp	r4, #207	; 0xcf
    ed80:	str	r4, [r8, #8]
    ed84:	bls	ede0 <sf_gen_less+0x140>
    ed88:	sub	r4, r4, #208	; 0xd0
    ed8c:	add	r0, r0, r4
    ed90:	str	r4, [r7]
    ed94:	mov	r2, #37	; 0x25
    ed98:	ldr	r3, [r0, #44]	; 0x2c
    ed9c:	clz	r3, r3
    eda0:	lsr	r3, r3, #5
    eda4:	str	r0, [r0, #96]	; 0x60
    eda8:	str	r6, [r0, #4]
    edac:	str	r5, [r0, #20]
    edb0:	str	r2, [r0, #8]
    edb4:	str	r3, [r0, #44]	; 0x2c
    edb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    edbc:	ldr	r6, [r8, r4, lsl #3]
    edc0:	ldr	r0, [r9, #4]
    edc4:	mov	r8, r9
    edc8:	mov	sl, r9
    edcc:	b	ed1c <sf_gen_less+0x7c>
    edd0:	ldr	r4, [r8]
    edd4:	ldr	r0, [r8, #4]
    edd8:	mov	r7, r8
    eddc:	b	ed88 <sf_gen_less+0xe8>
    ede0:	ldr	r0, [pc, #12]	; edf4 <sf_gen_less+0x154>
    ede4:	add	r0, pc, r0
    ede8:	bl	2370 <sf_bpf_error>
    edec:	.word	0x0002f6c0
    edf0:	.word	0x0002f644
    edf4:	.word	0x00011bfc

0000edf8 <sf_gen_byteop>:
    edf8:	cmp	r0, #61	; 0x3d
    edfc:	beq	eee8 <sf_gen_byteop+0xf0>
    ee00:	push	{r4, r5, r6, lr}
    ee04:	mov	r4, r2
    ee08:	bgt	ee58 <sf_gen_byteop+0x60>
    ee0c:	cmp	r0, #38	; 0x26
    ee10:	beq	eed4 <sf_gen_byteop+0xdc>
    ee14:	cmp	r0, #60	; 0x3c
    ee18:	bne	eea4 <sf_gen_byteop+0xac>
    ee1c:	mov	r0, r1
    ee20:	mov	r1, #16
    ee24:	bl	2ef8 <gen_load_llrel>
    ee28:	mov	r5, r0
    ee2c:	bl	29f8 <newchunk.constprop.50>
    ee30:	mov	r2, #53	; 0x35
    ee34:	ldr	r3, [r0, #44]	; 0x2c
    ee38:	clz	r3, r3
    ee3c:	lsr	r3, r3, #5
    ee40:	str	r5, [r0, #4]
    ee44:	str	r0, [r0, #96]	; 0x60
    ee48:	str	r4, [r0, #20]
    ee4c:	str	r2, [r0, #8]
    ee50:	str	r3, [r0, #44]	; 0x2c
    ee54:	pop	{r4, r5, r6, pc}
    ee58:	cmp	r0, #62	; 0x3e
    ee5c:	beq	eea8 <sf_gen_byteop+0xb0>
    ee60:	cmp	r0, #124	; 0x7c
    ee64:	bne	eea4 <sf_gen_byteop+0xac>
    ee68:	bl	2810 <newchunk.constprop.49>
    ee6c:	mov	r3, #68	; 0x44
    ee70:	mov	r5, r0
    ee74:	str	r3, [r0]
    ee78:	str	r4, [r5, #12]
    ee7c:	bl	29f8 <newchunk.constprop.50>
    ee80:	mov	r2, #21
    ee84:	ldr	r3, [r0, #44]	; 0x2c
    ee88:	clz	r3, r3
    ee8c:	lsr	r3, r3, #5
    ee90:	str	r0, [r0, #96]	; 0x60
    ee94:	str	r5, [r0, #4]
    ee98:	str	r2, [r0, #8]
    ee9c:	str	r3, [r0, #44]	; 0x2c
    eea0:	pop	{r4, r5, r6, pc}
    eea4:	bl	f18 <abort@plt>
    eea8:	mov	r0, r1
    eeac:	mov	r1, #16
    eeb0:	bl	2ef8 <gen_load_llrel>
    eeb4:	mov	r5, r0
    eeb8:	bl	29f8 <newchunk.constprop.50>
    eebc:	mov	r3, #37	; 0x25
    eec0:	str	r5, [r0, #4]
    eec4:	str	r0, [r0, #96]	; 0x60
    eec8:	str	r4, [r0, #20]
    eecc:	str	r3, [r0, #8]
    eed0:	pop	{r4, r5, r6, pc}
    eed4:	bl	2810 <newchunk.constprop.49>
    eed8:	mov	r3, #84	; 0x54
    eedc:	mov	r5, r0
    eee0:	str	r3, [r0]
    eee4:	b	ee78 <sf_gen_byteop+0x80>
    eee8:	mov	r0, r1
    eeec:	mov	r1, #16
    eef0:	b	3e70 <gen_cmp.constprop.42>

0000eef4 <sf_gen_broadcast>:
    eef4:	cmp	r0, #0
    eef8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    eefc:	blt	f014 <sf_gen_broadcast+0x120>
    ef00:	cmp	r0, #1
    ef04:	ble	f020 <sf_gen_broadcast+0x12c>
    ef08:	cmp	r0, #2
    ef0c:	bne	f014 <sf_gen_broadcast+0x120>
    ef10:	ldr	r4, [pc, #708]	; f1dc <sf_gen_broadcast+0x2e8>
    ef14:	add	r4, pc, r4
    ef18:	ldr	r5, [r4, #908]	; 0x38c
    ef1c:	cmn	r5, #1
    ef20:	beq	f1d0 <sf_gen_broadcast+0x2dc>
    ef24:	mov	r0, #2048	; 0x800
    ef28:	bl	7c38 <gen_linktype>
    ef2c:	ldr	r8, [r4, #868]	; 0x364
    ef30:	mov	r1, #0
    ef34:	add	r8, r8, #16
    ef38:	mvn	r5, r5
    ef3c:	mov	r7, r0
    ef40:	mov	r0, r8
    ef44:	bl	431c <gen_load_macplrel>
    ef48:	cmn	r5, #1
    ef4c:	mov	r9, r0
    ef50:	beq	f06c <sf_gen_broadcast+0x178>
    ef54:	bl	2810 <newchunk.constprop.49>
    ef58:	mov	r3, #84	; 0x54
    ef5c:	str	r3, [r0]
    ef60:	str	r5, [r0, #12]
    ef64:	mov	r3, r9
    ef68:	b	ef70 <sf_gen_broadcast+0x7c>
    ef6c:	mov	r3, r4
    ef70:	ldr	r4, [r3, #16]
    ef74:	cmp	r4, #0
    ef78:	bne	ef6c <sf_gen_broadcast+0x78>
    ef7c:	str	r0, [r3, #16]
    ef80:	bl	29f8 <newchunk.constprop.50>
    ef84:	mov	r3, #21
    ef88:	mov	r1, r4
    ef8c:	mov	r6, r0
    ef90:	str	r0, [r6, #96]	; 0x60
    ef94:	str	r9, [r0, #4]
    ef98:	str	r4, [r0, #20]
    ef9c:	str	r3, [r6, #8]
    efa0:	mov	r0, r8
    efa4:	bl	431c <gen_load_macplrel>
    efa8:	mov	r8, r0
    efac:	bl	2810 <newchunk.constprop.49>
    efb0:	mov	r3, #84	; 0x54
    efb4:	mov	r2, r8
    efb8:	str	r5, [r0, #12]
    efbc:	str	r3, [r0]
    efc0:	b	efc8 <sf_gen_broadcast+0xd4>
    efc4:	mov	r2, r3
    efc8:	ldr	r3, [r2, #16]
    efcc:	cmp	r3, #0
    efd0:	bne	efc4 <sf_gen_broadcast+0xd0>
    efd4:	str	r0, [r2, #16]
    efd8:	bl	29f8 <newchunk.constprop.50>
    efdc:	mov	r3, #21
    efe0:	mov	r4, r0
    efe4:	mov	r1, r4
    efe8:	str	r0, [r4, #96]	; 0x60
    efec:	str	r8, [r0, #4]
    eff0:	str	r5, [r0, #20]
    eff4:	mov	r0, r6
    eff8:	str	r3, [r4, #8]
    effc:	bl	6fd4 <sf_gen_or>
    f000:	mov	r1, r4
    f004:	mov	r0, r7
    f008:	bl	6390 <sf_gen_and>
    f00c:	mov	r0, r4
    f010:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f014:	ldr	r0, [pc, #452]	; f1e0 <sf_gen_broadcast+0x2ec>
    f018:	add	r0, pc, r0
    f01c:	bl	2370 <sf_bpf_error>
    f020:	ldr	r4, [pc, #444]	; f1e4 <sf_gen_broadcast+0x2f0>
    f024:	add	r4, pc, r4
    f028:	ldr	r1, [r4, #876]	; 0x36c
    f02c:	cmp	r1, #119	; 0x77
    f030:	beq	f180 <sf_gen_broadcast+0x28c>
    f034:	bgt	f09c <sf_gen_broadcast+0x1a8>
    f038:	cmp	r1, #7
    f03c:	beq	f164 <sf_gen_broadcast+0x270>
    f040:	bgt	f114 <sf_gen_broadcast+0x220>
    f044:	cmp	r1, #1
    f048:	beq	f1b4 <sf_gen_broadcast+0x2c0>
    f04c:	cmp	r1, #6
    f050:	bne	f140 <sf_gen_broadcast+0x24c>
    f054:	ldr	r2, [pc, #396]	; f1e8 <sf_gen_broadcast+0x2f4>
    f058:	mov	r0, #2
    f05c:	add	r2, pc, r2
    f060:	add	r2, r2, #8
    f064:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f068:	b	6be0 <gen_bcmp.constprop.29>
    f06c:	bl	29f8 <newchunk.constprop.50>
    f070:	mov	r3, #21
    f074:	mov	r1, #0
    f078:	mov	r6, r0
    f07c:	str	r0, [r6, #96]	; 0x60
    f080:	str	r9, [r0, #4]
    f084:	mov	r0, r8
    f088:	str	r3, [r6, #8]
    f08c:	str	r1, [r6, #20]
    f090:	bl	431c <gen_load_macplrel>
    f094:	mov	r8, r0
    f098:	b	efd8 <sf_gen_broadcast+0xe4>
    f09c:	cmp	r1, #127	; 0x7f
    f0a0:	beq	f180 <sf_gen_broadcast+0x28c>
    f0a4:	bgt	f14c <sf_gen_broadcast+0x258>
    f0a8:	cmp	r1, #122	; 0x7a
    f0ac:	beq	f198 <sf_gen_broadcast+0x2a4>
    f0b0:	cmp	r1, #123	; 0x7b
    f0b4:	bne	f140 <sf_gen_broadcast+0x24c>
    f0b8:	ldr	r3, [r4, #920]	; 0x398
    f0bc:	cmp	r3, #0
    f0c0:	beq	f014 <sf_gen_broadcast+0x120>
    f0c4:	mov	r2, #65280	; 0xff00
    f0c8:	mov	r1, #8
    f0cc:	mov	r0, #4
    f0d0:	bl	3e70 <gen_cmp.constprop.42>
    f0d4:	ldr	r2, [pc, #272]	; f1ec <sf_gen_broadcast+0x2f8>
    f0d8:	mov	r1, #6
    f0dc:	add	r2, pc, r2
    f0e0:	add	r2, r2, #8
    f0e4:	mov	r5, r0
    f0e8:	ldr	r3, [r0, #44]	; 0x2c
    f0ec:	clz	r3, r3
    f0f0:	lsr	r3, r3, #5
    f0f4:	ldr	r0, [r4, #916]	; 0x394
    f0f8:	str	r3, [r5, #44]	; 0x2c
    f0fc:	bl	6be0 <gen_bcmp.constprop.29>
    f100:	mov	r4, r0
    f104:	mov	r1, r0
    f108:	mov	r0, r5
    f10c:	bl	6390 <sf_gen_and>
    f110:	b	f00c <sf_gen_broadcast+0x118>
    f114:	cmp	r1, #10
    f118:	bne	f138 <sf_gen_broadcast+0x244>
    f11c:	ldr	r2, [pc, #204]	; f1f0 <sf_gen_broadcast+0x2fc>
    f120:	mov	r1, #6
    f124:	add	r2, pc, r2
    f128:	add	r2, r2, #8
    f12c:	mov	r0, #1
    f130:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f134:	b	6be0 <gen_bcmp.constprop.29>
    f138:	cmp	r1, #105	; 0x69
    f13c:	beq	f180 <sf_gen_broadcast+0x28c>
    f140:	ldr	r0, [pc, #172]	; f1f4 <sf_gen_broadcast+0x300>
    f144:	add	r0, pc, r0
    f148:	bl	2370 <sf_bpf_error>
    f14c:	cmp	r1, #163	; 0xa3
    f150:	beq	f180 <sf_gen_broadcast+0x28c>
    f154:	cmp	r1, #192	; 0xc0
    f158:	beq	f180 <sf_gen_broadcast+0x28c>
    f15c:	cmp	r1, #129	; 0x81
    f160:	bne	f140 <sf_gen_broadcast+0x24c>
    f164:	ldr	r2, [pc, #140]	; f1f8 <sf_gen_broadcast+0x304>
    f168:	mov	r1, #1
    f16c:	add	r2, pc, r2
    f170:	add	r2, r2, #960	; 0x3c0
    f174:	mov	r0, r1
    f178:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f17c:	b	6be0 <gen_bcmp.constprop.29>
    f180:	ldr	r0, [pc, #116]	; f1fc <sf_gen_broadcast+0x308>
    f184:	mov	r1, #2
    f188:	add	r0, pc, r0
    f18c:	add	r0, r0, #8
    f190:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f194:	b	76cc <gen_wlanhostop>
    f198:	ldr	r2, [pc, #96]	; f200 <sf_gen_broadcast+0x30c>
    f19c:	mov	r1, #6
    f1a0:	add	r2, pc, r2
    f1a4:	add	r2, r2, #8
    f1a8:	mov	r0, #2
    f1ac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f1b0:	b	6be0 <gen_bcmp.constprop.29>
    f1b4:	ldr	r2, [pc, #72]	; f204 <sf_gen_broadcast+0x310>
    f1b8:	ldr	r0, [r4, #916]	; 0x394
    f1bc:	add	r2, pc, r2
    f1c0:	add	r2, r2, #8
    f1c4:	mov	r1, #6
    f1c8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    f1cc:	b	6be0 <gen_bcmp.constprop.29>
    f1d0:	ldr	r0, [pc, #48]	; f208 <sf_gen_broadcast+0x314>
    f1d4:	add	r0, pc, r0
    f1d8:	bl	2370 <sf_bpf_error>
    f1dc:	.word	0x0002f454
    f1e0:	.word	0x00012a98
    f1e4:	.word	0x0002f344
    f1e8:	.word	0x0002f21c
    f1ec:	.word	0x0002f19c
    f1f0:	.word	0x0002f154
    f1f4:	.word	0x00012920
    f1f8:	.word	0x0002f1fc
    f1fc:	.word	0x0002f0f0
    f200:	.word	0x0002f0d8
    f204:	.word	0x0002f0bc
    f208:	.word	0x000128a8

0000f20c <sf_gen_multicast>:
    f20c:	push	{r4, r5, r6, r7, r8, lr}
    f210:	cmp	r0, #17
    f214:	addls	pc, pc, r0, lsl #2
    f218:	b	f344 <sf_gen_multicast+0x138>
    f21c:	b	f2fc <sf_gen_multicast+0xf0>
    f220:	b	f2fc <sf_gen_multicast+0xf0>
    f224:	b	f2c0 <sf_gen_multicast+0xb4>
    f228:	b	f344 <sf_gen_multicast+0x138>
    f22c:	b	f344 <sf_gen_multicast+0x138>
    f230:	b	f344 <sf_gen_multicast+0x138>
    f234:	b	f344 <sf_gen_multicast+0x138>
    f238:	b	f344 <sf_gen_multicast+0x138>
    f23c:	b	f344 <sf_gen_multicast+0x138>
    f240:	b	f344 <sf_gen_multicast+0x138>
    f244:	b	f344 <sf_gen_multicast+0x138>
    f248:	b	f344 <sf_gen_multicast+0x138>
    f24c:	b	f344 <sf_gen_multicast+0x138>
    f250:	b	f344 <sf_gen_multicast+0x138>
    f254:	b	f344 <sf_gen_multicast+0x138>
    f258:	b	f344 <sf_gen_multicast+0x138>
    f25c:	b	f344 <sf_gen_multicast+0x138>
    f260:	b	f264 <sf_gen_multicast+0x58>
    f264:	ldr	r0, [pc, #792]	; f584 <sf_gen_multicast+0x378>
    f268:	bl	7c38 <gen_linktype>
    f26c:	ldr	r3, [pc, #788]	; f588 <sf_gen_multicast+0x37c>
    f270:	mov	r1, #16
    f274:	add	r3, pc, r3
    f278:	mov	r5, r0
    f27c:	ldr	r0, [r3, #868]	; 0x364
    f280:	add	r0, r0, #24
    f284:	bl	431c <gen_load_macplrel>
    f288:	mov	r6, r0
    f28c:	bl	29f8 <newchunk.constprop.50>
    f290:	mov	r2, #21
    f294:	mov	r3, #255	; 0xff
    f298:	mov	r4, r0
    f29c:	str	r6, [r4, #4]
    f2a0:	str	r4, [r4, #96]	; 0x60
    f2a4:	mov	r0, r5
    f2a8:	str	r2, [r4, #8]
    f2ac:	str	r3, [r4, #20]
    f2b0:	mov	r1, r4
    f2b4:	bl	6390 <sf_gen_and>
    f2b8:	mov	r0, r4
    f2bc:	pop	{r4, r5, r6, r7, r8, pc}
    f2c0:	mov	r0, #2048	; 0x800
    f2c4:	bl	7c38 <gen_linktype>
    f2c8:	ldr	r3, [pc, #700]	; f58c <sf_gen_multicast+0x380>
    f2cc:	mov	r1, #16
    f2d0:	add	r3, pc, r3
    f2d4:	mov	r5, r0
    f2d8:	ldr	r0, [r3, #868]	; 0x364
    f2dc:	add	r0, r0, r1
    f2e0:	bl	431c <gen_load_macplrel>
    f2e4:	mov	r6, r0
    f2e8:	bl	29f8 <newchunk.constprop.50>
    f2ec:	mov	r2, #53	; 0x35
    f2f0:	mov	r3, #224	; 0xe0
    f2f4:	mov	r4, r0
    f2f8:	b	f29c <sf_gen_multicast+0x90>
    f2fc:	ldr	r4, [pc, #652]	; f590 <sf_gen_multicast+0x384>
    f300:	add	r4, pc, r4
    f304:	ldr	r3, [r4, #876]	; 0x36c
    f308:	cmp	r3, #119	; 0x77
    f30c:	beq	f40c <sf_gen_multicast+0x200>
    f310:	bgt	f350 <sf_gen_multicast+0x144>
    f314:	cmp	r3, #7
    f318:	beq	f3f0 <sf_gen_multicast+0x1e4>
    f31c:	bgt	f3c4 <sf_gen_multicast+0x1b8>
    f320:	cmp	r3, #1
    f324:	beq	f3b8 <sf_gen_multicast+0x1ac>
    f328:	cmp	r3, #6
    f32c:	bne	f344 <sf_gen_multicast+0x138>
    f330:	mov	r0, #2
    f334:	pop	{r4, r5, r6, r7, r8, lr}
    f338:	b	3da8 <gen_mac_multicast>
    f33c:	cmp	r3, #105	; 0x69
    f340:	beq	f40c <sf_gen_multicast+0x200>
    f344:	ldr	r0, [pc, #584]	; f594 <sf_gen_multicast+0x388>
    f348:	add	r0, pc, r0
    f34c:	bl	2370 <sf_bpf_error>
    f350:	cmp	r3, #127	; 0x7f
    f354:	beq	f40c <sf_gen_multicast+0x200>
    f358:	bgt	f3d8 <sf_gen_multicast+0x1cc>
    f35c:	cmp	r3, #122	; 0x7a
    f360:	beq	f330 <sf_gen_multicast+0x124>
    f364:	cmp	r3, #123	; 0x7b
    f368:	bne	f344 <sf_gen_multicast+0x138>
    f36c:	ldr	r3, [r4, #920]	; 0x398
    f370:	cmp	r3, #0
    f374:	beq	f344 <sf_gen_multicast+0x138>
    f378:	mov	r2, #65280	; 0xff00
    f37c:	mov	r1, #8
    f380:	mov	r0, #4
    f384:	bl	3e70 <gen_cmp.constprop.42>
    f388:	mov	r5, r0
    f38c:	ldr	r0, [r4, #916]	; 0x394
    f390:	ldr	r3, [r5, #44]	; 0x2c
    f394:	clz	r3, r3
    f398:	lsr	r3, r3, #5
    f39c:	str	r3, [r5, #44]	; 0x2c
    f3a0:	bl	3da8 <gen_mac_multicast>
    f3a4:	mov	r4, r0
    f3a8:	mov	r1, r0
    f3ac:	mov	r0, r5
    f3b0:	bl	6390 <sf_gen_and>
    f3b4:	b	f2b8 <sf_gen_multicast+0xac>
    f3b8:	mov	r0, #0
    f3bc:	pop	{r4, r5, r6, r7, r8, lr}
    f3c0:	b	3da8 <gen_mac_multicast>
    f3c4:	cmp	r3, #10
    f3c8:	bne	f33c <sf_gen_multicast+0x130>
    f3cc:	mov	r0, #1
    f3d0:	pop	{r4, r5, r6, r7, r8, lr}
    f3d4:	b	3da8 <gen_mac_multicast>
    f3d8:	cmp	r3, #163	; 0xa3
    f3dc:	beq	f40c <sf_gen_multicast+0x200>
    f3e0:	cmp	r3, #192	; 0xc0
    f3e4:	beq	f40c <sf_gen_multicast+0x200>
    f3e8:	cmp	r3, #129	; 0x81
    f3ec:	bne	f344 <sf_gen_multicast+0x138>
    f3f0:	ldr	r2, [pc, #416]	; f598 <sf_gen_multicast+0x38c>
    f3f4:	mov	r1, #1
    f3f8:	add	r2, pc, r2
    f3fc:	add	r2, r2, #960	; 0x3c0
    f400:	mov	r0, r1
    f404:	pop	{r4, r5, r6, r7, r8, lr}
    f408:	b	6be0 <gen_bcmp.constprop.29>
    f40c:	mov	r1, #16
    f410:	mov	r0, #1
    f414:	bl	2ef8 <gen_load_llrel>
    f418:	mov	r6, #69	; 0x45
    f41c:	mov	r7, #1
    f420:	mov	r4, r0
    f424:	bl	29f8 <newchunk.constprop.50>
    f428:	mov	r5, r0
    f42c:	str	r4, [r0, #4]
    f430:	str	r0, [r5, #96]	; 0x60
    f434:	str	r6, [r0, #8]
    f438:	str	r7, [r0, #20]
    f43c:	mov	r0, #16
    f440:	bl	3da8 <gen_mac_multicast>
    f444:	mov	r4, r0
    f448:	mov	r1, r0
    f44c:	mov	r0, r5
    f450:	bl	6390 <sf_gen_and>
    f454:	mov	r1, #16
    f458:	mov	r0, r7
    f45c:	bl	2ef8 <gen_load_llrel>
    f460:	mov	r8, r0
    f464:	bl	29f8 <newchunk.constprop.50>
    f468:	mov	r5, r0
    f46c:	mov	r0, #4
    f470:	ldr	r3, [r5, #44]	; 0x2c
    f474:	clz	r3, r3
    f478:	lsr	r3, r3, #5
    f47c:	str	r3, [r5, #44]	; 0x2c
    f480:	str	r7, [r5, #20]
    f484:	str	r6, [r5, #8]
    f488:	str	r8, [r5, #4]
    f48c:	str	r5, [r5, #96]	; 0x60
    f490:	bl	3da8 <gen_mac_multicast>
    f494:	mov	r7, r0
    f498:	mov	r1, r0
    f49c:	mov	r0, r5
    f4a0:	bl	6390 <sf_gen_and>
    f4a4:	mov	r1, r4
    f4a8:	mov	r0, r7
    f4ac:	bl	6fd4 <sf_gen_or>
    f4b0:	mov	r1, #16
    f4b4:	mov	r0, #0
    f4b8:	bl	2ef8 <gen_load_llrel>
    f4bc:	mov	r7, #8
    f4c0:	mov	r5, r0
    f4c4:	bl	29f8 <newchunk.constprop.50>
    f4c8:	mov	r1, r4
    f4cc:	mov	r3, r0
    f4d0:	stmib	r0, {r5, r6}
    f4d4:	str	r0, [r3, #96]	; 0x60
    f4d8:	str	r7, [r0, #20]
    f4dc:	bl	6390 <sf_gen_and>
    f4e0:	mov	r1, #16
    f4e4:	mov	r0, #0
    f4e8:	bl	2ef8 <gen_load_llrel>
    f4ec:	mov	r8, r0
    f4f0:	bl	29f8 <newchunk.constprop.50>
    f4f4:	mov	r5, r0
    f4f8:	mov	r0, #4
    f4fc:	ldr	r3, [r5, #44]	; 0x2c
    f500:	clz	r3, r3
    f504:	lsr	r3, r3, #5
    f508:	str	r3, [r5, #44]	; 0x2c
    f50c:	str	r7, [r5, #20]
    f510:	str	r6, [r5, #8]
    f514:	str	r8, [r5, #4]
    f518:	str	r5, [r5, #96]	; 0x60
    f51c:	bl	3da8 <gen_mac_multicast>
    f520:	mov	r7, r0
    f524:	mov	r1, r0
    f528:	mov	r0, r5
    f52c:	bl	6390 <sf_gen_and>
    f530:	mov	r1, r4
    f534:	mov	r0, r7
    f538:	bl	6fd4 <sf_gen_or>
    f53c:	mov	r1, #16
    f540:	mov	r0, #0
    f544:	bl	2ef8 <gen_load_llrel>
    f548:	mov	r5, r0
    f54c:	bl	29f8 <newchunk.constprop.50>
    f550:	mov	r1, #4
    f554:	mov	r3, r0
    f558:	ldr	r2, [r0, #44]	; 0x2c
    f55c:	clz	r2, r2
    f560:	lsr	r2, r2, #5
    f564:	str	r6, [r0, #8]
    f568:	str	r0, [r3, #96]	; 0x60
    f56c:	str	r1, [r0, #20]
    f570:	str	r5, [r0, #4]
    f574:	str	r2, [r0, #44]	; 0x2c
    f578:	mov	r1, r4
    f57c:	bl	6390 <sf_gen_and>
    f580:	b	f2b8 <sf_gen_multicast+0xac>
    f584:	.word	0x000086dd
    f588:	.word	0x0002f0f4
    f58c:	.word	0x0002f098
    f590:	.word	0x0002f068
    f594:	.word	0x00012798
    f598:	.word	0x0002ef70

0000f59c <sf_gen_inbound>:
    f59c:	push	{r4, r5, r6, r7, r8, lr}
    f5a0:	mov	r6, r0
    f5a4:	ldr	r5, [pc, #1296]	; fabc <sf_gen_inbound+0x520>
    f5a8:	sub	sp, sp, #8
    f5ac:	add	r5, pc, r5
    f5b0:	ldr	r1, [r5, #876]	; 0x36c
    f5b4:	cmp	r1, #168	; 0xa8
    f5b8:	bgt	f63c <sf_gen_inbound+0xa0>
    f5bc:	cmp	r1, #167	; 0xa7
    f5c0:	bge	f984 <sf_gen_inbound+0x3e8>
    f5c4:	cmp	r1, #137	; 0x89
    f5c8:	bgt	f608 <sf_gen_inbound+0x6c>
    f5cc:	cmp	r1, #130	; 0x82
    f5d0:	bge	f984 <sf_gen_inbound+0x3e8>
    f5d4:	cmp	r1, #8
    f5d8:	beq	f694 <sf_gen_inbound+0xf8>
    f5dc:	cmp	r1, #113	; 0x71
    f5e0:	bne	f688 <sf_gen_inbound+0xec>
    f5e4:	cmp	r0, #0
    f5e8:	movne	r2, #4
    f5ec:	movne	r1, #8
    f5f0:	movne	r0, #0
    f5f4:	moveq	r2, r6
    f5f8:	moveq	r1, #8
    f5fc:	add	sp, sp, #8
    f600:	pop	{r4, r5, r6, r7, r8, lr}
    f604:	b	3e70 <gen_cmp.constprop.42>
    f608:	cmp	r1, #164	; 0xa4
    f60c:	beq	f984 <sf_gen_inbound+0x3e8>
    f610:	cmp	r1, #166	; 0xa6
    f614:	bne	f688 <sf_gen_inbound+0xec>
    f618:	cmp	r0, #0
    f61c:	movne	r2, #1
    f620:	movne	r1, #16
    f624:	movne	r0, #0
    f628:	moveq	r2, r6
    f62c:	moveq	r1, #16
    f630:	add	sp, sp, #8
    f634:	pop	{r4, r5, r6, r7, r8, lr}
    f638:	b	3e70 <gen_cmp.constprop.42>
    f63c:	cmp	r1, #183	; 0xb7
    f640:	beq	f984 <sf_gen_inbound+0x3e8>
    f644:	ble	f978 <sf_gen_inbound+0x3dc>
    f648:	cmp	r1, #200	; 0xc8
    f64c:	beq	f984 <sf_gen_inbound+0x3e8>
    f650:	cmp	r1, #226	; 0xe2
    f654:	bne	f680 <sf_gen_inbound+0xe4>
    f658:	cmp	r0, #0
    f65c:	moveq	r2, #2
    f660:	movne	r2, #1
    f664:	movne	r1, #8
    f668:	movne	r0, #2
    f66c:	moveq	r0, r2
    f670:	moveq	r1, #8
    f674:	add	sp, sp, #8
    f678:	pop	{r4, r5, r6, r7, r8, lr}
    f67c:	b	3e70 <gen_cmp.constprop.42>
    f680:	cmp	r1, #194	; 0xc2
    f684:	beq	f984 <sf_gen_inbound+0x3e8>
    f688:	ldr	r0, [pc, #1072]	; fac0 <sf_gen_inbound+0x524>
    f68c:	add	r0, pc, r0
    f690:	bl	2370 <sf_bpf_error>
    f694:	mov	r0, #0
    f698:	bl	e1b0 <sf_gen_loadi>
    f69c:	ldr	r4, [r5, #656]	; 0x290
    f6a0:	lsl	r3, r4, #2
    f6a4:	add	r2, r5, r3
    f6a8:	ldr	r2, [r2, #660]	; 0x294
    f6ac:	cmp	r2, #0
    f6b0:	mov	r7, r0
    f6b4:	beq	f9e0 <sf_gen_inbound+0x444>
    f6b8:	add	r4, r4, #1
    f6bc:	asr	r3, r4, #31
    f6c0:	lsr	r3, r3, #28
    f6c4:	add	r4, r4, r3
    f6c8:	and	r4, r4, #15
    f6cc:	sub	r4, r4, r3
    f6d0:	str	r4, [r5, #656]	; 0x290
    f6d4:	lsl	r3, r4, #2
    f6d8:	add	r2, r5, r3
    f6dc:	ldr	r2, [r2, #660]	; 0x294
    f6e0:	cmp	r2, #0
    f6e4:	beq	f9e0 <sf_gen_inbound+0x444>
    f6e8:	add	r4, r4, #1
    f6ec:	asr	r3, r4, #31
    f6f0:	lsr	r3, r3, #28
    f6f4:	add	r4, r4, r3
    f6f8:	and	r4, r4, #15
    f6fc:	sub	r4, r4, r3
    f700:	lsl	r3, r4, #2
    f704:	add	r2, r5, r3
    f708:	ldr	r2, [r2, #660]	; 0x294
    f70c:	cmp	r2, #0
    f710:	beq	f9d4 <sf_gen_inbound+0x438>
    f714:	add	r4, r4, #1
    f718:	asr	r3, r4, #31
    f71c:	lsr	r3, r3, #28
    f720:	add	r4, r4, r3
    f724:	and	r4, r4, #15
    f728:	sub	r4, r4, r3
    f72c:	lsl	r3, r4, #2
    f730:	add	r2, r5, r3
    f734:	ldr	r2, [r2, #660]	; 0x294
    f738:	cmp	r2, #0
    f73c:	beq	f9d4 <sf_gen_inbound+0x438>
    f740:	add	r4, r4, #1
    f744:	asr	r3, r4, #31
    f748:	lsr	r3, r3, #28
    f74c:	add	r4, r4, r3
    f750:	and	r4, r4, #15
    f754:	sub	r4, r4, r3
    f758:	lsl	r3, r4, #2
    f75c:	add	r5, r5, r3
    f760:	ldr	r2, [r5, #660]	; 0x294
    f764:	cmp	r2, #0
    f768:	beq	f9d4 <sf_gen_inbound+0x438>
    f76c:	add	r4, r4, #1
    f770:	ldr	r2, [pc, #844]	; fac4 <sf_gen_inbound+0x528>
    f774:	asr	r3, r4, #31
    f778:	add	r2, pc, r2
    f77c:	lsr	r3, r3, #28
    f780:	add	r4, r4, r3
    f784:	and	r4, r4, #15
    f788:	sub	r4, r4, r3
    f78c:	lsl	r3, r4, #2
    f790:	add	r1, r2, r3
    f794:	ldr	r1, [r1, #660]	; 0x294
    f798:	cmp	r1, #0
    f79c:	beq	f9d4 <sf_gen_inbound+0x438>
    f7a0:	add	r4, r4, #1
    f7a4:	asr	r3, r4, #31
    f7a8:	lsr	r3, r3, #28
    f7ac:	add	r4, r4, r3
    f7b0:	and	r4, r4, #15
    f7b4:	sub	r4, r4, r3
    f7b8:	lsl	r3, r4, #2
    f7bc:	add	r1, r2, r3
    f7c0:	ldr	r1, [r1, #660]	; 0x294
    f7c4:	cmp	r1, #0
    f7c8:	beq	f9d4 <sf_gen_inbound+0x438>
    f7cc:	add	r4, r4, #1
    f7d0:	asr	r3, r4, #31
    f7d4:	lsr	r3, r3, #28
    f7d8:	add	r4, r4, r3
    f7dc:	and	r4, r4, #15
    f7e0:	sub	r4, r4, r3
    f7e4:	lsl	r3, r4, #2
    f7e8:	add	r1, r2, r3
    f7ec:	ldr	r1, [r1, #660]	; 0x294
    f7f0:	cmp	r1, #0
    f7f4:	beq	f9d4 <sf_gen_inbound+0x438>
    f7f8:	add	r4, r4, #1
    f7fc:	asr	r3, r4, #31
    f800:	lsr	r3, r3, #28
    f804:	add	r4, r4, r3
    f808:	and	r4, r4, #15
    f80c:	sub	r4, r4, r3
    f810:	lsl	r3, r4, #2
    f814:	add	r1, r2, r3
    f818:	ldr	r1, [r1, #660]	; 0x294
    f81c:	cmp	r1, #0
    f820:	beq	f9d4 <sf_gen_inbound+0x438>
    f824:	add	r4, r4, #1
    f828:	asr	r3, r4, #31
    f82c:	lsr	r3, r3, #28
    f830:	add	r4, r4, r3
    f834:	and	r4, r4, #15
    f838:	sub	r4, r4, r3
    f83c:	lsl	r3, r4, #2
    f840:	add	r1, r2, r3
    f844:	ldr	r1, [r1, #660]	; 0x294
    f848:	cmp	r1, #0
    f84c:	beq	f9d4 <sf_gen_inbound+0x438>
    f850:	add	r4, r4, #1
    f854:	asr	r3, r4, #31
    f858:	lsr	r3, r3, #28
    f85c:	add	r4, r4, r3
    f860:	and	r4, r4, #15
    f864:	sub	r4, r4, r3
    f868:	lsl	r3, r4, #2
    f86c:	add	r1, r2, r3
    f870:	ldr	r1, [r1, #660]	; 0x294
    f874:	cmp	r1, #0
    f878:	beq	f9d4 <sf_gen_inbound+0x438>
    f87c:	add	r4, r4, #1
    f880:	asr	r3, r4, #31
    f884:	lsr	r3, r3, #28
    f888:	add	r4, r4, r3
    f88c:	and	r4, r4, #15
    f890:	sub	r4, r4, r3
    f894:	lsl	r3, r4, #2
    f898:	add	r1, r2, r3
    f89c:	ldr	r1, [r1, #660]	; 0x294
    f8a0:	cmp	r1, #0
    f8a4:	beq	f9d4 <sf_gen_inbound+0x438>
    f8a8:	add	r4, r4, #1
    f8ac:	asr	r3, r4, #31
    f8b0:	lsr	r3, r3, #28
    f8b4:	add	r4, r4, r3
    f8b8:	and	r4, r4, #15
    f8bc:	sub	r4, r4, r3
    f8c0:	lsl	r3, r4, #2
    f8c4:	add	r1, r2, r3
    f8c8:	ldr	r1, [r1, #660]	; 0x294
    f8cc:	cmp	r1, #0
    f8d0:	beq	f9d4 <sf_gen_inbound+0x438>
    f8d4:	add	r4, r4, #1
    f8d8:	asr	r3, r4, #31
    f8dc:	lsr	r3, r3, #28
    f8e0:	add	r4, r4, r3
    f8e4:	and	r4, r4, #15
    f8e8:	sub	r4, r4, r3
    f8ec:	lsl	r3, r4, #2
    f8f0:	add	r1, r2, r3
    f8f4:	ldr	r1, [r1, #660]	; 0x294
    f8f8:	cmp	r1, #0
    f8fc:	beq	f9d4 <sf_gen_inbound+0x438>
    f900:	add	r4, r4, #1
    f904:	asr	r3, r4, #31
    f908:	lsr	r3, r3, #28
    f90c:	add	r4, r4, r3
    f910:	and	r4, r4, #15
    f914:	sub	r4, r4, r3
    f918:	lsl	r3, r4, #2
    f91c:	add	r2, r2, r3
    f920:	ldr	r2, [r2, #660]	; 0x294
    f924:	cmp	r2, #0
    f928:	beq	f9d4 <sf_gen_inbound+0x438>
    f92c:	add	r4, r4, #1
    f930:	ldr	r2, [pc, #400]	; fac8 <sf_gen_inbound+0x52c>
    f934:	asr	r3, r4, #31
    f938:	add	r2, pc, r2
    f93c:	lsr	r3, r3, #28
    f940:	add	r4, r4, r3
    f944:	and	r4, r4, #15
    f948:	sub	r4, r4, r3
    f94c:	lsl	r3, r4, #2
    f950:	add	r1, r2, r3
    f954:	ldr	r1, [r1, #660]	; 0x294
    f958:	cmp	r1, #0
    f95c:	beq	f9d4 <sf_gen_inbound+0x438>
    f960:	ldr	r0, [pc, #356]	; facc <sf_gen_inbound+0x530>
    f964:	add	r4, r4, #1
    f968:	and	r4, r4, #15
    f96c:	add	r0, pc, r0
    f970:	str	r4, [r2, #656]	; 0x290
    f974:	bl	2370 <sf_bpf_error>
    f978:	sub	r3, r1, #178	; 0xb2
    f97c:	cmp	r3, #3
    f980:	bhi	f688 <sf_gen_inbound+0xec>
    f984:	cmp	r6, #0
    f988:	beq	f9b4 <sf_gen_inbound+0x418>
    f98c:	mov	r2, #0
    f990:	mov	r3, #16
    f994:	str	r2, [sp, #4]
    f998:	str	r2, [sp]
    f99c:	mov	r1, r3
    f9a0:	mov	r2, #1
    f9a4:	mov	r0, #3
    f9a8:	bl	3bf0 <gen_ncmp.constprop.35>
    f9ac:	add	sp, sp, #8
    f9b0:	pop	{r4, r5, r6, r7, r8, pc}
    f9b4:	mov	r2, #1
    f9b8:	mov	r3, #16
    f9bc:	str	r6, [sp]
    f9c0:	str	r2, [sp, #4]
    f9c4:	mov	r1, r3
    f9c8:	mov	r0, #3
    f9cc:	bl	3bf0 <gen_ncmp.constprop.35>
    f9d0:	b	f9ac <sf_gen_inbound+0x410>
    f9d4:	ldr	r2, [pc, #244]	; fad0 <sf_gen_inbound+0x534>
    f9d8:	add	r2, pc, r2
    f9dc:	str	r4, [r2, #656]	; 0x290
    f9e0:	ldr	r5, [pc, #236]	; fad4 <sf_gen_inbound+0x538>
    f9e4:	mov	r1, #1
    f9e8:	add	r5, pc, r5
    f9ec:	add	r3, r5, r3
    f9f0:	mov	r2, #0
    f9f4:	str	r1, [r3, #660]	; 0x294
    f9f8:	ldr	r3, [r7, #8]
    f9fc:	add	r3, r5, r3, lsl #2
    fa00:	str	r2, [r3, #660]	; 0x294
    fa04:	bl	2810 <newchunk.constprop.49>
    fa08:	mov	r3, #97	; 0x61
    fa0c:	str	r3, [r0]
    fa10:	ldr	r3, [r7, #8]
    fa14:	mov	r8, r0
    fa18:	str	r3, [r0, #12]
    fa1c:	bl	2810 <newchunk.constprop.49>
    fa20:	ldr	r2, [r5, #880]	; 0x370
    fa24:	mov	r3, #80	; 0x50
    fa28:	str	r2, [r0, #12]
    fa2c:	str	r3, [r0]
    fa30:	mov	r2, r8
    fa34:	b	fa3c <sf_gen_inbound+0x4a0>
    fa38:	mov	r2, r3
    fa3c:	ldr	r3, [r2, #16]
    fa40:	cmp	r3, #0
    fa44:	bne	fa38 <sf_gen_inbound+0x49c>
    fa48:	str	r0, [r2, #16]
    fa4c:	ldr	r2, [r7, #4]
    fa50:	b	fa58 <sf_gen_inbound+0x4bc>
    fa54:	mov	r2, r3
    fa58:	ldr	r3, [r2, #16]
    fa5c:	cmp	r3, #0
    fa60:	bne	fa54 <sf_gen_inbound+0x4b8>
    fa64:	str	r8, [r2, #16]
    fa68:	str	r4, [r7, #8]
    fa6c:	bl	2810 <newchunk.constprop.49>
    fa70:	mov	r3, #2
    fa74:	str	r4, [r0, #12]
    fa78:	str	r3, [r0]
    fa7c:	ldr	r2, [r7, #4]
    fa80:	b	fa88 <sf_gen_inbound+0x4ec>
    fa84:	mov	r2, r3
    fa88:	ldr	r3, [r2, #16]
    fa8c:	cmp	r3, #0
    fa90:	bne	fa84 <sf_gen_inbound+0x4e8>
    fa94:	str	r0, [r2, #16]
    fa98:	mov	r0, r3
    fa9c:	bl	e1b0 <sf_gen_loadi>
    faa0:	mov	r3, r6
    faa4:	mov	r1, r7
    faa8:	mov	r2, r0
    faac:	mov	r0, #16
    fab0:	add	sp, sp, #8
    fab4:	pop	{r4, r5, r6, r7, r8, lr}
    fab8:	b	db60 <sf_gen_relation>
    fabc:	.word	0x0002edbc
    fac0:	.word	0x000124c4
    fac4:	.word	0x0002ebf0
    fac8:	.word	0x0002ea30
    facc:	.word	0x00010fdc
    fad0:	.word	0x0002e990
    fad4:	.word	0x0002e980

0000fad8 <sf_gen_pf_ifname>:
    fad8:	ldr	r0, [pc, #8]	; fae8 <sf_gen_pf_ifname+0x10>
    fadc:	push	{r4, lr}
    fae0:	add	r0, pc, r0
    fae4:	bl	2370 <sf_bpf_error>
    fae8:	.word	0x000120a0

0000faec <sf_gen_pf_ruleset>:
    faec:	ldr	r0, [pc, #8]	; fafc <sf_gen_pf_ruleset+0x10>
    faf0:	push	{r4, lr}
    faf4:	add	r0, pc, r0
    faf8:	bl	2370 <sf_bpf_error>
    fafc:	.word	0x000120b4

0000fb00 <sf_gen_pf_rnr>:
    fb00:	ldr	r0, [pc, #8]	; fb10 <sf_gen_pf_rnr+0x10>
    fb04:	push	{r4, lr}
    fb08:	add	r0, pc, r0
    fb0c:	bl	2370 <sf_bpf_error>
    fb10:	.word	0x000120a0

0000fb14 <sf_gen_pf_srnr>:
    fb14:	ldr	r0, [pc, #8]	; fb24 <sf_gen_pf_srnr+0x10>
    fb18:	push	{r4, lr}
    fb1c:	add	r0, pc, r0
    fb20:	bl	2370 <sf_bpf_error>
    fb24:	.word	0x0001208c

0000fb28 <sf_gen_pf_reason>:
    fb28:	ldr	r0, [pc, #8]	; fb38 <sf_gen_pf_reason+0x10>
    fb2c:	push	{r4, lr}
    fb30:	add	r0, pc, r0
    fb34:	bl	2370 <sf_bpf_error>
    fb38:	.word	0x00012078

0000fb3c <sf_gen_pf_action>:
    fb3c:	ldr	r0, [pc, #8]	; fb4c <sf_gen_pf_action+0x10>
    fb40:	push	{r4, lr}
    fb44:	add	r0, pc, r0
    fb48:	bl	2370 <sf_bpf_error>
    fb4c:	.word	0x00012064

0000fb50 <sf_gen_p80211_type>:
    fb50:	ldr	r3, [pc, #300]	; fc84 <sf_gen_p80211_type+0x134>
    fb54:	push	{r4, r5, r6, r7, r8, lr}
    fb58:	add	r3, pc, r3
    fb5c:	mov	r5, r0
    fb60:	ldr	r3, [r3, #876]	; 0x36c
    fb64:	mov	r4, r1
    fb68:	cmp	r3, #119	; 0x77
    fb6c:	beq	fb84 <sf_gen_p80211_type+0x34>
    fb70:	ble	fc64 <sf_gen_p80211_type+0x114>
    fb74:	cmp	r3, #127	; 0x7f
    fb78:	beq	fb84 <sf_gen_p80211_type+0x34>
    fb7c:	cmp	r3, #163	; 0xa3
    fb80:	bne	fc6c <sf_gen_p80211_type+0x11c>
    fb84:	mov	r1, #16
    fb88:	mov	r0, #0
    fb8c:	bl	2ef8 <gen_load_llrel>
    fb90:	cmn	r4, #1
    fb94:	mov	r7, r0
    fb98:	beq	fbc8 <sf_gen_p80211_type+0x78>
    fb9c:	bl	2810 <newchunk.constprop.49>
    fba0:	mov	r3, #84	; 0x54
    fba4:	mov	r2, r7
    fba8:	str	r4, [r0, #12]
    fbac:	str	r3, [r0]
    fbb0:	b	fbb8 <sf_gen_p80211_type+0x68>
    fbb4:	mov	r2, r3
    fbb8:	ldr	r3, [r2, #16]
    fbbc:	cmp	r3, #0
    fbc0:	bne	fbb4 <sf_gen_p80211_type+0x64>
    fbc4:	str	r0, [r2, #16]
    fbc8:	ldr	r2, [pc, #184]	; fc88 <sf_gen_p80211_type+0x138>
    fbcc:	add	r2, pc, r2
    fbd0:	add	r3, r2, #728	; 0x2d8
    fbd4:	ldr	r4, [r2, #724]	; 0x2d4
    fbd8:	lsl	r6, r4, #3
    fbdc:	add	r1, r2, r6
    fbe0:	add	r6, r3, r6
    fbe4:	ldr	r1, [r1, #728]	; 0x2d8
    fbe8:	cmp	r1, #207	; 0xcf
    fbec:	bhi	fc54 <sf_gen_p80211_type+0x104>
    fbf0:	add	r3, r4, #1
    fbf4:	cmp	r3, #15
    fbf8:	str	r3, [r2, #724]	; 0x2d4
    fbfc:	add	r8, r6, #8
    fc00:	bgt	fc78 <sf_gen_p80211_type+0x128>
    fc04:	mov	r4, #1024	; 0x400
    fc08:	mov	r1, #1
    fc0c:	lsl	r4, r4, r3
    fc10:	mov	r0, r4
    fc14:	bl	d38 <calloc@plt>
    fc18:	cmp	r0, #0
    fc1c:	str	r0, [r6, #12]
    fc20:	beq	fc78 <sf_gen_p80211_type+0x128>
    fc24:	cmp	r4, #207	; 0xcf
    fc28:	str	r4, [r6, #8]
    fc2c:	bls	fc78 <sf_gen_p80211_type+0x128>
    fc30:	sub	r4, r4, #208	; 0xd0
    fc34:	add	r0, r0, r4
    fc38:	mov	r3, #21
    fc3c:	str	r4, [r8]
    fc40:	str	r0, [r0, #96]	; 0x60
    fc44:	str	r7, [r0, #4]
    fc48:	str	r5, [r0, #20]
    fc4c:	str	r3, [r0, #8]
    fc50:	pop	{r4, r5, r6, r7, r8, pc}
    fc54:	ldr	r4, [r3, r4, lsl #3]
    fc58:	ldr	r0, [r6, #4]
    fc5c:	mov	r8, r6
    fc60:	b	fc30 <sf_gen_p80211_type+0xe0>
    fc64:	cmp	r3, #105	; 0x69
    fc68:	beq	fb84 <sf_gen_p80211_type+0x34>
    fc6c:	ldr	r0, [pc, #24]	; fc8c <sf_gen_p80211_type+0x13c>
    fc70:	add	r0, pc, r0
    fc74:	bl	2370 <sf_bpf_error>
    fc78:	ldr	r0, [pc, #16]	; fc90 <sf_gen_p80211_type+0x140>
    fc7c:	add	r0, pc, r0
    fc80:	bl	2370 <sf_bpf_error>
    fc84:	.word	0x0002e810
    fc88:	.word	0x0002e79c
    fc8c:	.word	0x00011f70
    fc90:	.word	0x00010d64

0000fc94 <sf_gen_p80211_fcdir>:
    fc94:	ldr	r3, [pc, #296]	; fdc4 <sf_gen_p80211_fcdir+0x130>
    fc98:	push	{r4, r5, r6, r7, r8, lr}
    fc9c:	add	r3, pc, r3
    fca0:	mov	r6, r0
    fca4:	ldr	r3, [r3, #876]	; 0x36c
    fca8:	cmp	r3, #119	; 0x77
    fcac:	beq	fcc4 <sf_gen_p80211_fcdir+0x30>
    fcb0:	ble	fda4 <sf_gen_p80211_fcdir+0x110>
    fcb4:	cmp	r3, #127	; 0x7f
    fcb8:	beq	fcc4 <sf_gen_p80211_fcdir+0x30>
    fcbc:	cmp	r3, #163	; 0xa3
    fcc0:	bne	fdac <sf_gen_p80211_fcdir+0x118>
    fcc4:	mov	r1, #16
    fcc8:	mov	r0, #1
    fccc:	bl	2ef8 <gen_load_llrel>
    fcd0:	mov	r5, r0
    fcd4:	bl	2810 <newchunk.constprop.49>
    fcd8:	mov	r2, #84	; 0x54
    fcdc:	mov	r3, #3
    fce0:	str	r2, [r0]
    fce4:	str	r3, [r0, #12]
    fce8:	mov	r2, r5
    fcec:	b	fcf4 <sf_gen_p80211_fcdir+0x60>
    fcf0:	mov	r2, r3
    fcf4:	ldr	r3, [r2, #16]
    fcf8:	cmp	r3, #0
    fcfc:	bne	fcf0 <sf_gen_p80211_fcdir+0x5c>
    fd00:	ldr	r1, [pc, #192]	; fdc8 <sf_gen_p80211_fcdir+0x134>
    fd04:	str	r0, [r2, #16]
    fd08:	add	r1, pc, r1
    fd0c:	add	r3, r1, #728	; 0x2d8
    fd10:	ldr	r4, [r1, #724]	; 0x2d4
    fd14:	lsl	r7, r4, #3
    fd18:	add	r2, r1, r7
    fd1c:	add	r7, r3, r7
    fd20:	ldr	r2, [r2, #728]	; 0x2d8
    fd24:	cmp	r2, #207	; 0xcf
    fd28:	bhi	fd94 <sf_gen_p80211_fcdir+0x100>
    fd2c:	add	r3, r4, #1
    fd30:	cmp	r3, #15
    fd34:	str	r3, [r1, #724]	; 0x2d4
    fd38:	add	r8, r7, #8
    fd3c:	bgt	fdb8 <sf_gen_p80211_fcdir+0x124>
    fd40:	mov	r4, #1024	; 0x400
    fd44:	mov	r1, #1
    fd48:	lsl	r4, r4, r3
    fd4c:	mov	r0, r4
    fd50:	bl	d38 <calloc@plt>
    fd54:	cmp	r0, #0
    fd58:	str	r0, [r7, #12]
    fd5c:	beq	fdb8 <sf_gen_p80211_fcdir+0x124>
    fd60:	cmp	r4, #207	; 0xcf
    fd64:	str	r4, [r7, #8]
    fd68:	bls	fdb8 <sf_gen_p80211_fcdir+0x124>
    fd6c:	sub	r4, r4, #208	; 0xd0
    fd70:	add	r3, r0, r4
    fd74:	mov	r2, #21
    fd78:	str	r4, [r8]
    fd7c:	mov	r0, r3
    fd80:	str	r3, [r3, #96]	; 0x60
    fd84:	str	r5, [r3, #4]
    fd88:	str	r6, [r3, #20]
    fd8c:	str	r2, [r3, #8]
    fd90:	pop	{r4, r5, r6, r7, r8, pc}
    fd94:	ldr	r4, [r3, r4, lsl #3]
    fd98:	ldr	r0, [r7, #4]
    fd9c:	mov	r8, r7
    fda0:	b	fd6c <sf_gen_p80211_fcdir+0xd8>
    fda4:	cmp	r3, #105	; 0x69
    fda8:	beq	fcc4 <sf_gen_p80211_fcdir+0x30>
    fdac:	ldr	r0, [pc, #24]	; fdcc <sf_gen_p80211_fcdir+0x138>
    fdb0:	add	r0, pc, r0
    fdb4:	bl	2370 <sf_bpf_error>
    fdb8:	ldr	r0, [pc, #16]	; fdd0 <sf_gen_p80211_fcdir+0x13c>
    fdbc:	add	r0, pc, r0
    fdc0:	bl	2370 <sf_bpf_error>
    fdc4:	.word	0x0002e6cc
    fdc8:	.word	0x0002e660
    fdcc:	.word	0x00011e64
    fdd0:	.word	0x00010c24

0000fdd4 <sf_gen_acode>:
    fdd4:	ldr	r3, [pc, #300]	; ff08 <sf_gen_acode+0x134>
    fdd8:	push	{r4, r5, lr}
    fddc:	add	r3, pc, r3
    fde0:	sub	sp, sp, #12
    fde4:	mov	r4, r0
    fde8:	str	r1, [sp, #4]
    fdec:	ldr	r3, [r3, #876]	; 0x36c
    fdf0:	cmp	r3, #7
    fdf4:	beq	fe00 <sf_gen_acode+0x2c>
    fdf8:	cmp	r3, #129	; 0x81
    fdfc:	bne	fef0 <sf_gen_acode+0x11c>
    fe00:	ldrb	r3, [sp, #4]
    fe04:	cmp	r3, #1
    fe08:	bhi	fefc <sf_gen_acode+0x128>
    fe0c:	ldrb	r3, [sp, #5]
    fe10:	cmp	r3, #1
    fe14:	bne	fefc <sf_gen_acode+0x128>
    fe18:	ldrb	r3, [sp, #6]
    fe1c:	cmp	r3, #4
    fe20:	addls	pc, pc, r3, lsl #2
    fe24:	b	feec <sf_gen_acode+0x118>
    fe28:	b	fe7c <sf_gen_acode+0xa8>
    fe2c:	b	febc <sf_gen_acode+0xe8>
    fe30:	b	fed4 <sf_gen_acode+0x100>
    fe34:	b	fe7c <sf_gen_acode+0xa8>
    fe38:	b	fe3c <sf_gen_acode+0x68>
    fe3c:	mov	r2, r4
    fe40:	mov	r1, #1
    fe44:	mov	r0, #0
    fe48:	bl	6be0 <gen_bcmp.constprop.29>
    fe4c:	mov	r1, #1
    fe50:	mov	r2, r4
    fe54:	mov	r5, r0
    fe58:	mov	r0, r1
    fe5c:	bl	6be0 <gen_bcmp.constprop.29>
    fe60:	mov	r4, r0
    fe64:	mov	r1, r0
    fe68:	mov	r0, r5
    fe6c:	bl	6390 <sf_gen_and>
    fe70:	mov	r0, r4
    fe74:	add	sp, sp, #12
    fe78:	pop	{r4, r5, pc}
    fe7c:	mov	r2, r4
    fe80:	mov	r1, #1
    fe84:	mov	r0, #0
    fe88:	bl	6be0 <gen_bcmp.constprop.29>
    fe8c:	mov	r1, #1
    fe90:	mov	r2, r4
    fe94:	mov	r5, r0
    fe98:	mov	r0, r1
    fe9c:	bl	6be0 <gen_bcmp.constprop.29>
    fea0:	mov	r4, r0
    fea4:	mov	r1, r0
    fea8:	mov	r0, r5
    feac:	bl	6fd4 <sf_gen_or>
    feb0:	mov	r0, r4
    feb4:	add	sp, sp, #12
    feb8:	pop	{r4, r5, pc}
    febc:	mov	r2, r4
    fec0:	mov	r1, #1
    fec4:	mov	r0, #0
    fec8:	add	sp, sp, #12
    fecc:	pop	{r4, r5, lr}
    fed0:	b	6be0 <gen_bcmp.constprop.29>
    fed4:	mov	r1, #1
    fed8:	mov	r2, r4
    fedc:	mov	r0, r1
    fee0:	add	sp, sp, #12
    fee4:	pop	{r4, r5, lr}
    fee8:	b	6be0 <gen_bcmp.constprop.29>
    feec:	bl	f18 <abort@plt>
    fef0:	ldr	r0, [pc, #20]	; ff0c <sf_gen_acode+0x138>
    fef4:	add	r0, pc, r0
    fef8:	bl	2370 <sf_bpf_error>
    fefc:	ldr	r0, [pc, #12]	; ff10 <sf_gen_acode+0x13c>
    ff00:	add	r0, pc, r0
    ff04:	bl	2370 <sf_bpf_error>
    ff08:	.word	0x0002e58c
    ff0c:	.word	0x00011d80
    ff10:	.word	0x00011d48

0000ff14 <sf_gen_vlan>:
    ff14:	ldr	r2, [pc, #408]	; 100b4 <sf_gen_vlan+0x1a0>
    ff18:	push	{r4, r5, r6, r7, r8, lr}
    ff1c:	add	r2, pc, r2
    ff20:	ldr	r7, [r2, #4]
    ff24:	cmp	r7, #0
    ff28:	bne	1009c <sf_gen_vlan+0x188>
    ff2c:	ldr	r3, [pc, #388]	; 100b8 <sf_gen_vlan+0x1a4>
    ff30:	mov	r6, r0
    ff34:	add	r3, pc, r3
    ff38:	ldr	r1, [r3, #876]	; 0x36c
    ff3c:	ldr	r0, [r3, #868]	; 0x364
    ff40:	cmp	r1, #1
    ff44:	str	r0, [r2]
    ff48:	bne	100a8 <sf_gen_vlan+0x194>
    ff4c:	ldr	r4, [r3, #952]	; 0x3b8
    ff50:	mov	r1, #8
    ff54:	mov	r0, r4
    ff58:	bl	2ef8 <gen_load_llrel>
    ff5c:	mov	r8, r0
    ff60:	bl	29f8 <newchunk.constprop.50>
    ff64:	mov	r2, #21
    ff68:	mov	r3, #33024	; 0x8100
    ff6c:	cmp	r6, #0
    ff70:	mov	r5, r0
    ff74:	str	r8, [r0, #4]
    ff78:	str	r0, [r5, #96]	; 0x60
    ff7c:	str	r2, [r0, #8]
    ff80:	str	r3, [r0, #20]
    ff84:	blt	10078 <sf_gen_vlan+0x164>
    ff88:	mov	r0, r7
    ff8c:	mov	r1, #8
    ff90:	bl	431c <gen_load_macplrel>
    ff94:	mov	r7, r0
    ff98:	bl	2810 <newchunk.constprop.49>
    ff9c:	ldr	r3, [pc, #280]	; 100bc <sf_gen_vlan+0x1a8>
    ffa0:	mov	r2, #84	; 0x54
    ffa4:	str	r2, [r0]
    ffa8:	str	r3, [r0, #12]
    ffac:	mov	r2, r7
    ffb0:	b	ffb8 <sf_gen_vlan+0xa4>
    ffb4:	mov	r2, r3
    ffb8:	ldr	r3, [r2, #16]
    ffbc:	cmp	r3, #0
    ffc0:	bne	ffb4 <sf_gen_vlan+0xa0>
    ffc4:	str	r0, [r2, #16]
    ffc8:	bl	29f8 <newchunk.constprop.50>
    ffcc:	mov	r3, #21
    ffd0:	str	r3, [r0, #8]
    ffd4:	str	r0, [r0, #96]	; 0x60
    ffd8:	str	r7, [r0, #4]
    ffdc:	str	r6, [r0, #20]
    ffe0:	mov	r3, r5
    ffe4:	b	fffc <sf_gen_vlan+0xe8>
    ffe8:	ldr	r2, [r3, #60]	; 0x3c
    ffec:	str	r0, [r3, #60]	; 0x3c
    fff0:	cmp	r2, #0
    fff4:	beq	10018 <sf_gen_vlan+0x104>
    fff8:	mov	r3, r2
    fffc:	ldr	r2, [r3, #44]	; 0x2c
   10000:	cmp	r2, #0
   10004:	beq	ffe8 <sf_gen_vlan+0xd4>
   10008:	ldr	r2, [r3, #84]	; 0x54
   1000c:	str	r0, [r3, #84]	; 0x54
   10010:	cmp	r2, #0
   10014:	bne	fff8 <sf_gen_vlan+0xe4>
   10018:	ldr	r2, [r5, #44]	; 0x2c
   1001c:	mov	r3, r0
   10020:	clz	r2, r2
   10024:	lsr	r2, r2, #5
   10028:	str	r2, [r5, #44]	; 0x2c
   1002c:	ldr	r2, [r0, #44]	; 0x2c
   10030:	clz	r2, r2
   10034:	lsr	r2, r2, #5
   10038:	str	r2, [r0, #44]	; 0x2c
   1003c:	ldr	r2, [r3, #44]	; 0x2c
   10040:	cmp	r2, #0
   10044:	addeq	r2, r3, #60	; 0x3c
   10048:	addne	r2, r3, #84	; 0x54
   1004c:	ldr	r3, [r2]
   10050:	cmp	r3, #0
   10054:	bne	1003c <sf_gen_vlan+0x128>
   10058:	str	r5, [r2]
   1005c:	ldr	r3, [r0, #44]	; 0x2c
   10060:	clz	r3, r3
   10064:	lsr	r3, r3, #5
   10068:	str	r3, [r0, #44]	; 0x2c
   1006c:	ldr	r3, [r5, #96]	; 0x60
   10070:	mov	r5, r0
   10074:	str	r3, [r0, #96]	; 0x60
   10078:	ldr	r3, [pc, #64]	; 100c0 <sf_gen_vlan+0x1ac>
   1007c:	add	r4, r4, #4
   10080:	add	r3, pc, r3
   10084:	mov	r0, r5
   10088:	ldr	r2, [r3, #872]	; 0x368
   1008c:	str	r4, [r3, #952]	; 0x3b8
   10090:	add	r2, r2, #4
   10094:	str	r2, [r3, #872]	; 0x368
   10098:	pop	{r4, r5, r6, r7, r8, pc}
   1009c:	ldr	r0, [pc, #32]	; 100c4 <sf_gen_vlan+0x1b0>
   100a0:	add	r0, pc, r0
   100a4:	bl	2370 <sf_bpf_error>
   100a8:	ldr	r0, [pc, #24]	; 100c8 <sf_gen_vlan+0x1b4>
   100ac:	add	r0, pc, r0
   100b0:	bl	2370 <sf_bpf_error>
   100b4:	.word	0x0002e35c
   100b8:	.word	0x0002e434
   100bc:	.word	0x00000fff
   100c0:	.word	0x0002e2e8
   100c4:	.word	0x00011bf4
   100c8:	.word	0x00011c04

000100cc <sf_gen_mpls>:
   100cc:	ldr	r3, [pc, #372]	; 10248 <sf_gen_mpls+0x17c>
   100d0:	ldr	r2, [pc, #372]	; 1024c <sf_gen_mpls+0x180>
   100d4:	add	r3, pc, r3
   100d8:	add	r2, pc, r2
   100dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   100e0:	mov	r8, r0
   100e4:	ldr	r6, [r3, #4]
   100e8:	ldr	r5, [r2, #868]	; 0x364
   100ec:	cmp	r6, #0
   100f0:	str	r5, [r3]
   100f4:	bne	101d8 <sf_gen_mpls+0x10c>
   100f8:	ldr	r1, [r2, #876]	; 0x36c
   100fc:	cmp	r1, #9
   10100:	beq	10120 <sf_gen_mpls+0x54>
   10104:	cmp	r1, #104	; 0x68
   10108:	beq	10238 <sf_gen_mpls+0x16c>
   1010c:	cmp	r1, #1
   10110:	beq	10238 <sf_gen_mpls+0x16c>
   10114:	ldr	r0, [pc, #308]	; 10250 <sf_gen_mpls+0x184>
   10118:	add	r0, pc, r0
   1011c:	bl	2370 <sf_bpf_error>
   10120:	ldr	r0, [pc, #300]	; 10254 <sf_gen_mpls+0x188>
   10124:	bl	7c38 <gen_linktype>
   10128:	mov	r7, r0
   1012c:	cmp	r8, #0
   10130:	blt	101a4 <sf_gen_mpls+0xd8>
   10134:	mov	r1, #0
   10138:	mov	r0, r5
   1013c:	bl	431c <gen_load_macplrel>
   10140:	lsl	r8, r8, #12
   10144:	mov	r9, r0
   10148:	bl	2810 <newchunk.constprop.49>
   1014c:	ldr	r3, [pc, #260]	; 10258 <sf_gen_mpls+0x18c>
   10150:	mov	r2, #84	; 0x54
   10154:	str	r2, [r0]
   10158:	str	r3, [r0, #12]
   1015c:	mov	r2, r9
   10160:	b	10168 <sf_gen_mpls+0x9c>
   10164:	mov	r2, r3
   10168:	ldr	r3, [r2, #16]
   1016c:	cmp	r3, #0
   10170:	bne	10164 <sf_gen_mpls+0x98>
   10174:	str	r0, [r2, #16]
   10178:	bl	29f8 <newchunk.constprop.50>
   1017c:	mov	r3, #21
   10180:	mov	r4, r0
   10184:	mov	r1, r4
   10188:	str	r0, [r4, #96]	; 0x60
   1018c:	str	r9, [r0, #4]
   10190:	str	r8, [r0, #20]
   10194:	mov	r0, r7
   10198:	str	r3, [r4, #8]
   1019c:	bl	6390 <sf_gen_and>
   101a0:	mov	r7, r4
   101a4:	ldr	r2, [pc, #176]	; 1025c <sf_gen_mpls+0x190>
   101a8:	ldr	r3, [pc, #176]	; 10260 <sf_gen_mpls+0x194>
   101ac:	add	r2, pc, r2
   101b0:	add	r3, pc, r3
   101b4:	ldr	r1, [r2, #956]	; 0x3bc
   101b8:	add	r5, r5, #4
   101bc:	add	r6, r6, #1
   101c0:	add	r1, r1, #4
   101c4:	mov	r0, r7
   101c8:	str	r5, [r2, #868]	; 0x364
   101cc:	str	r1, [r2, #956]	; 0x3bc
   101d0:	str	r6, [r3, #4]
   101d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   101d8:	mov	r1, #16
   101dc:	sub	r0, r5, #2
   101e0:	bl	431c <gen_load_macplrel>
   101e4:	mov	r9, r0
   101e8:	bl	2810 <newchunk.constprop.49>
   101ec:	mov	r3, #1
   101f0:	mov	r2, #84	; 0x54
   101f4:	str	r3, [r0, #12]
   101f8:	str	r2, [r0]
   101fc:	mov	r3, r9
   10200:	b	10208 <sf_gen_mpls+0x13c>
   10204:	mov	r3, r4
   10208:	ldr	r4, [r3, #16]
   1020c:	cmp	r4, #0
   10210:	bne	10204 <sf_gen_mpls+0x138>
   10214:	str	r0, [r3, #16]
   10218:	bl	29f8 <newchunk.constprop.50>
   1021c:	mov	r3, #21
   10220:	mov	r7, r0
   10224:	str	r0, [r7, #96]	; 0x60
   10228:	str	r9, [r0, #4]
   1022c:	str	r4, [r0, #20]
   10230:	str	r3, [r0, #8]
   10234:	b	1012c <sf_gen_mpls+0x60>
   10238:	ldr	r0, [pc, #36]	; 10264 <sf_gen_mpls+0x198>
   1023c:	bl	7c38 <gen_linktype>
   10240:	mov	r7, r0
   10244:	b	1012c <sf_gen_mpls+0x60>
   10248:	.word	0x0002e1a4
   1024c:	.word	0x0002e290
   10250:	.word	0x00011bc0
   10254:	.word	0x00000281
   10258:	.word	0xfffff000
   1025c:	.word	0x0002e1bc
   10260:	.word	0x0002e0c8
   10264:	.word	0x00008847

00010268 <sf_gen_pppoed>:
   10268:	ldr	r0, [pc]	; 10270 <sf_gen_pppoed+0x8>
   1026c:	b	7c38 <gen_linktype>
   10270:	.word	0x00008863

00010274 <sf_gen_pppoes>:
   10274:	push	{r4, lr}
   10278:	mov	r4, #1
   1027c:	ldr	r0, [pc, #52]	; 102b8 <sf_gen_pppoes+0x44>
   10280:	bl	7c38 <gen_linktype>
   10284:	ldr	r3, [pc, #48]	; 102bc <sf_gen_pppoes+0x48>
   10288:	ldr	r2, [pc, #48]	; 102c0 <sf_gen_pppoes+0x4c>
   1028c:	add	r3, pc, r3
   10290:	add	r2, pc, r2
   10294:	ldr	ip, [r3, #868]	; 0x364
   10298:	mov	r1, #8
   1029c:	add	lr, ip, #6
   102a0:	str	r4, [r3, #928]	; 0x3a0
   102a4:	str	lr, [r3, #952]	; 0x3b8
   102a8:	str	ip, [r2]
   102ac:	str	r1, [r3, #868]	; 0x364
   102b0:	str	r1, [r3, #956]	; 0x3bc
   102b4:	pop	{r4, pc}
   102b8:	.word	0x00008864
   102bc:	.word	0x0002e0dc
   102c0:	.word	0x0002dfe8

000102c4 <sf_gen_atmfield_code>:
   102c4:	sub	r0, r0, #51	; 0x33
   102c8:	push	{r4, r5, r6, r7, lr}
   102cc:	mov	r5, r1
   102d0:	sub	sp, sp, #12
   102d4:	mov	r4, r2
   102d8:	mov	r6, r3
   102dc:	cmp	r0, #4
   102e0:	addls	pc, pc, r0, lsl #2
   102e4:	b	10388 <sf_gen_atmfield_code+0xc4>
   102e8:	b	10368 <sf_gen_atmfield_code+0xa4>
   102ec:	b	1038c <sf_gen_atmfield_code+0xc8>
   102f0:	b	103b4 <sf_gen_atmfield_code+0xf0>
   102f4:	b	103e8 <sf_gen_atmfield_code+0x124>
   102f8:	b	102fc <sf_gen_atmfield_code+0x38>
   102fc:	ldr	r3, [pc, #292]	; 10428 <sf_gen_atmfield_code+0x164>
   10300:	add	r3, pc, r3
   10304:	ldr	r2, [r3, #888]	; 0x378
   10308:	cmp	r2, #0
   1030c:	beq	10404 <sf_gen_atmfield_code+0x140>
   10310:	ldr	r0, [r3, #924]	; 0x39c
   10314:	cmn	r0, #1
   10318:	beq	10388 <sf_gen_atmfield_code+0xc4>
   1031c:	mov	r1, #16
   10320:	bl	2ef8 <gen_load_llrel>
   10324:	mov	r7, r0
   10328:	bl	29f8 <newchunk.constprop.50>
   1032c:	orr	r3, r4, #5
   10330:	cmp	r6, #0
   10334:	str	r7, [r0, #4]
   10338:	str	r0, [r0, #96]	; 0x60
   1033c:	str	r5, [r0, #20]
   10340:	str	r3, [r0, #8]
   10344:	beq	10360 <sf_gen_atmfield_code+0x9c>
   10348:	bic	r4, r4, #16
   1034c:	cmp	r4, #32
   10350:	ldreq	r3, [r0, #44]	; 0x2c
   10354:	clzeq	r3, r3
   10358:	lsreq	r3, r3, #5
   1035c:	streq	r3, [r0, #44]	; 0x2c
   10360:	add	sp, sp, #12
   10364:	pop	{r4, r5, r6, r7, pc}
   10368:	ldr	r3, [pc, #188]	; 1042c <sf_gen_atmfield_code+0x168>
   1036c:	add	r3, pc, r3
   10370:	ldr	r2, [r3, #888]	; 0x378
   10374:	cmp	r2, #0
   10378:	beq	1041c <sf_gen_atmfield_code+0x158>
   1037c:	ldr	r0, [r3, #896]	; 0x380
   10380:	cmn	r0, #1
   10384:	bne	1031c <sf_gen_atmfield_code+0x58>
   10388:	bl	f18 <abort@plt>
   1038c:	ldr	r3, [pc, #156]	; 10430 <sf_gen_atmfield_code+0x16c>
   10390:	add	r3, pc, r3
   10394:	ldr	r2, [r3, #888]	; 0x378
   10398:	cmp	r2, #0
   1039c:	beq	10410 <sf_gen_atmfield_code+0x14c>
   103a0:	ldr	r0, [r3, #892]	; 0x37c
   103a4:	cmn	r0, #1
   103a8:	beq	10388 <sf_gen_atmfield_code+0xc4>
   103ac:	mov	r1, #8
   103b0:	b	10320 <sf_gen_atmfield_code+0x5c>
   103b4:	ldr	r3, [pc, #120]	; 10434 <sf_gen_atmfield_code+0x170>
   103b8:	add	r3, pc, r3
   103bc:	ldr	r0, [r3, #924]	; 0x39c
   103c0:	cmn	r0, #1
   103c4:	beq	10388 <sf_gen_atmfield_code+0xc4>
   103c8:	str	r1, [sp, #4]
   103cc:	mov	r3, r2
   103d0:	str	r6, [sp]
   103d4:	mov	r2, #15
   103d8:	mov	r1, #16
   103dc:	bl	3bf0 <gen_ncmp.constprop.35>
   103e0:	add	sp, sp, #12
   103e4:	pop	{r4, r5, r6, r7, pc}
   103e8:	ldr	r3, [pc, #72]	; 10438 <sf_gen_atmfield_code+0x174>
   103ec:	add	r3, pc, r3
   103f0:	ldr	r0, [r3, #884]	; 0x374
   103f4:	cmn	r0, #1
   103f8:	beq	10388 <sf_gen_atmfield_code+0xc4>
   103fc:	add	r0, r0, #5
   10400:	b	1031c <sf_gen_atmfield_code+0x58>
   10404:	ldr	r0, [pc, #48]	; 1043c <sf_gen_atmfield_code+0x178>
   10408:	add	r0, pc, r0
   1040c:	bl	2370 <sf_bpf_error>
   10410:	ldr	r0, [pc, #40]	; 10440 <sf_gen_atmfield_code+0x17c>
   10414:	add	r0, pc, r0
   10418:	bl	2370 <sf_bpf_error>
   1041c:	ldr	r0, [pc, #32]	; 10444 <sf_gen_atmfield_code+0x180>
   10420:	add	r0, pc, r0
   10424:	bl	2370 <sf_bpf_error>
   10428:	.word	0x0002e068
   1042c:	.word	0x0002dffc
   10430:	.word	0x0002dfd8
   10434:	.word	0x0002dfb0
   10438:	.word	0x0002df7c
   1043c:	.word	0x000118f8
   10440:	.word	0x000105dc
   10444:	.word	0x000105f0

00010448 <sf_gen_atmtype_abbrev>:
   10448:	sub	r0, r0, #22
   1044c:	push	{r4, r5, r6, r7, lr}
   10450:	sub	sp, sp, #12
   10454:	cmp	r0, #9
   10458:	addls	pc, pc, r0, lsl #2
   1045c:	b	10768 <sf_gen_atmtype_abbrev+0x320>
   10460:	b	104dc <sf_gen_atmtype_abbrev+0x94>
   10464:	b	1054c <sf_gen_atmtype_abbrev+0x104>
   10468:	b	105a0 <sf_gen_atmtype_abbrev+0x158>
   1046c:	b	105f4 <sf_gen_atmtype_abbrev+0x1ac>
   10470:	b	10648 <sf_gen_atmtype_abbrev+0x200>
   10474:	b	1069c <sf_gen_atmtype_abbrev+0x254>
   10478:	b	10768 <sf_gen_atmtype_abbrev+0x320>
   1047c:	b	10768 <sf_gen_atmtype_abbrev+0x320>
   10480:	b	106f0 <sf_gen_atmtype_abbrev+0x2a8>
   10484:	b	10488 <sf_gen_atmtype_abbrev+0x40>
   10488:	ldr	r5, [pc, #828]	; 107cc <sf_gen_atmtype_abbrev+0x384>
   1048c:	add	r5, pc, r5
   10490:	ldr	r3, [r5, #888]	; 0x378
   10494:	cmp	r3, #0
   10498:	beq	1076c <sf_gen_atmtype_abbrev+0x324>
   1049c:	ldr	r0, [r5, #924]	; 0x39c
   104a0:	cmn	r0, #1
   104a4:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   104a8:	mov	r6, #0
   104ac:	mov	r3, #16
   104b0:	mov	r2, #2
   104b4:	str	r2, [sp, #4]
   104b8:	str	r6, [sp]
   104bc:	mov	r1, r3
   104c0:	mov	r2, #15
   104c4:	bl	3bf0 <gen_ncmp.constprop.35>
   104c8:	str	r6, [r5, #920]	; 0x398
   104cc:	mov	r4, r0
   104d0:	mov	r0, r4
   104d4:	add	sp, sp, #12
   104d8:	pop	{r4, r5, r6, r7, pc}
   104dc:	ldr	r3, [pc, #748]	; 107d0 <sf_gen_atmtype_abbrev+0x388>
   104e0:	add	r3, pc, r3
   104e4:	ldr	r2, [r3, #888]	; 0x378
   104e8:	cmp	r2, #0
   104ec:	beq	107c0 <sf_gen_atmtype_abbrev+0x378>
   104f0:	ldr	r0, [r3, #896]	; 0x380
   104f4:	cmn	r0, #1
   104f8:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   104fc:	mov	r1, #16
   10500:	bl	2ef8 <gen_load_llrel>
   10504:	mov	r4, r0
   10508:	bl	29f8 <newchunk.constprop.50>
   1050c:	mov	r2, #21
   10510:	mov	r3, #0
   10514:	mov	r5, r0
   10518:	str	r4, [r0, #4]
   1051c:	str	r0, [r5, #96]	; 0x60
   10520:	str	r2, [r0, #8]
   10524:	str	r3, [r0, #20]
   10528:	mov	r0, #1
   1052c:	bl	3cd0 <sf_gen_atmfield_code.constprop.26>
   10530:	mov	r4, r0
   10534:	mov	r1, r0
   10538:	mov	r0, r5
   1053c:	bl	6390 <sf_gen_and>
   10540:	mov	r0, r4
   10544:	add	sp, sp, #12
   10548:	pop	{r4, r5, r6, r7, pc}
   1054c:	ldr	r3, [pc, #640]	; 107d4 <sf_gen_atmtype_abbrev+0x38c>
   10550:	add	r3, pc, r3
   10554:	ldr	r2, [r3, #888]	; 0x378
   10558:	cmp	r2, #0
   1055c:	beq	107b4 <sf_gen_atmtype_abbrev+0x36c>
   10560:	ldr	r0, [r3, #896]	; 0x380
   10564:	cmn	r0, #1
   10568:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   1056c:	mov	r1, #16
   10570:	bl	2ef8 <gen_load_llrel>
   10574:	mov	r4, r0
   10578:	bl	29f8 <newchunk.constprop.50>
   1057c:	mov	r2, #21
   10580:	mov	r3, #0
   10584:	mov	r5, r0
   10588:	str	r4, [r0, #4]
   1058c:	str	r0, [r5, #96]	; 0x60
   10590:	str	r2, [r0, #8]
   10594:	str	r3, [r0, #20]
   10598:	mov	r0, #2
   1059c:	b	1052c <sf_gen_atmtype_abbrev+0xe4>
   105a0:	ldr	r3, [pc, #560]	; 107d8 <sf_gen_atmtype_abbrev+0x390>
   105a4:	add	r3, pc, r3
   105a8:	ldr	r2, [r3, #888]	; 0x378
   105ac:	cmp	r2, #0
   105b0:	beq	107a8 <sf_gen_atmtype_abbrev+0x360>
   105b4:	ldr	r0, [r3, #896]	; 0x380
   105b8:	cmn	r0, #1
   105bc:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   105c0:	mov	r1, #16
   105c4:	bl	2ef8 <gen_load_llrel>
   105c8:	mov	r4, r0
   105cc:	bl	29f8 <newchunk.constprop.50>
   105d0:	mov	r2, #21
   105d4:	mov	r3, #0
   105d8:	mov	r5, r0
   105dc:	str	r4, [r0, #4]
   105e0:	str	r0, [r5, #96]	; 0x60
   105e4:	str	r2, [r0, #8]
   105e8:	str	r3, [r0, #20]
   105ec:	mov	r0, #3
   105f0:	b	1052c <sf_gen_atmtype_abbrev+0xe4>
   105f4:	ldr	r3, [pc, #480]	; 107dc <sf_gen_atmtype_abbrev+0x394>
   105f8:	add	r3, pc, r3
   105fc:	ldr	r2, [r3, #888]	; 0x378
   10600:	cmp	r2, #0
   10604:	beq	1079c <sf_gen_atmtype_abbrev+0x354>
   10608:	ldr	r0, [r3, #896]	; 0x380
   1060c:	cmn	r0, #1
   10610:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   10614:	mov	r1, #16
   10618:	bl	2ef8 <gen_load_llrel>
   1061c:	mov	r4, r0
   10620:	bl	29f8 <newchunk.constprop.50>
   10624:	mov	r2, #21
   10628:	mov	r3, #0
   1062c:	mov	r5, r0
   10630:	str	r4, [r0, #4]
   10634:	str	r0, [r5, #96]	; 0x60
   10638:	str	r2, [r0, #8]
   1063c:	str	r3, [r0, #20]
   10640:	mov	r0, #4
   10644:	b	1052c <sf_gen_atmtype_abbrev+0xe4>
   10648:	ldr	r3, [pc, #400]	; 107e0 <sf_gen_atmtype_abbrev+0x398>
   1064c:	add	r3, pc, r3
   10650:	ldr	r2, [r3, #888]	; 0x378
   10654:	cmp	r2, #0
   10658:	beq	10790 <sf_gen_atmtype_abbrev+0x348>
   1065c:	ldr	r0, [r3, #896]	; 0x380
   10660:	cmn	r0, #1
   10664:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   10668:	mov	r1, #16
   1066c:	bl	2ef8 <gen_load_llrel>
   10670:	mov	r4, r0
   10674:	bl	29f8 <newchunk.constprop.50>
   10678:	mov	r2, #21
   1067c:	mov	r3, #0
   10680:	mov	r5, r0
   10684:	str	r4, [r0, #4]
   10688:	str	r0, [r5, #96]	; 0x60
   1068c:	str	r2, [r0, #8]
   10690:	str	r3, [r0, #20]
   10694:	mov	r0, #5
   10698:	b	1052c <sf_gen_atmtype_abbrev+0xe4>
   1069c:	ldr	r3, [pc, #320]	; 107e4 <sf_gen_atmtype_abbrev+0x39c>
   106a0:	add	r3, pc, r3
   106a4:	ldr	r2, [r3, #888]	; 0x378
   106a8:	cmp	r2, #0
   106ac:	beq	10784 <sf_gen_atmtype_abbrev+0x33c>
   106b0:	ldr	r0, [r3, #896]	; 0x380
   106b4:	cmn	r0, #1
   106b8:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   106bc:	mov	r1, #16
   106c0:	bl	2ef8 <gen_load_llrel>
   106c4:	mov	r4, r0
   106c8:	bl	29f8 <newchunk.constprop.50>
   106cc:	mov	r2, #21
   106d0:	mov	r3, #0
   106d4:	mov	r5, r0
   106d8:	str	r4, [r0, #4]
   106dc:	str	r0, [r5, #96]	; 0x60
   106e0:	str	r2, [r0, #8]
   106e4:	str	r3, [r0, #20]
   106e8:	mov	r0, #16
   106ec:	b	1052c <sf_gen_atmtype_abbrev+0xe4>
   106f0:	ldr	r5, [pc, #240]	; 107e8 <sf_gen_atmtype_abbrev+0x3a0>
   106f4:	add	r5, pc, r5
   106f8:	ldr	r3, [r5, #888]	; 0x378
   106fc:	cmp	r3, #0
   10700:	beq	10778 <sf_gen_atmtype_abbrev+0x330>
   10704:	ldr	r0, [r5, #924]	; 0x39c
   10708:	cmn	r0, #1
   1070c:	beq	10768 <sf_gen_atmtype_abbrev+0x320>
   10710:	mov	r7, #1
   10714:	mov	r6, #0
   10718:	mov	r3, #16
   1071c:	mov	r1, r3
   10720:	stm	sp, {r6, r7}
   10724:	mov	r2, #15
   10728:	bl	3bf0 <gen_ncmp.constprop.35>
   1072c:	ldr	r3, [r5, #884]	; 0x374
   10730:	mov	r2, #3
   10734:	add	r1, r3, #14
   10738:	str	r7, [r5, #920]	; 0x398
   1073c:	str	r6, [r5, #868]	; 0x364
   10740:	str	r1, [r5, #952]	; 0x3b8
   10744:	str	r2, [r5, #956]	; 0x3bc
   10748:	mov	r4, r0
   1074c:	add	r0, r3, #2
   10750:	add	r3, r3, #16
   10754:	str	r0, [r5, #916]	; 0x394
   10758:	str	r3, [r5, #872]	; 0x368
   1075c:	mov	r0, r4
   10760:	add	sp, sp, #12
   10764:	pop	{r4, r5, r6, r7, pc}
   10768:	bl	f18 <abort@plt>
   1076c:	ldr	r0, [pc, #120]	; 107ec <sf_gen_atmtype_abbrev+0x3a4>
   10770:	add	r0, pc, r0
   10774:	bl	2370 <sf_bpf_error>
   10778:	ldr	r0, [pc, #112]	; 107f0 <sf_gen_atmtype_abbrev+0x3a8>
   1077c:	add	r0, pc, r0
   10780:	bl	2370 <sf_bpf_error>
   10784:	ldr	r0, [pc, #104]	; 107f4 <sf_gen_atmtype_abbrev+0x3ac>
   10788:	add	r0, pc, r0
   1078c:	bl	2370 <sf_bpf_error>
   10790:	ldr	r0, [pc, #96]	; 107f8 <sf_gen_atmtype_abbrev+0x3b0>
   10794:	add	r0, pc, r0
   10798:	bl	2370 <sf_bpf_error>
   1079c:	ldr	r0, [pc, #88]	; 107fc <sf_gen_atmtype_abbrev+0x3b4>
   107a0:	add	r0, pc, r0
   107a4:	bl	2370 <sf_bpf_error>
   107a8:	ldr	r0, [pc, #80]	; 10800 <sf_gen_atmtype_abbrev+0x3b8>
   107ac:	add	r0, pc, r0
   107b0:	bl	2370 <sf_bpf_error>
   107b4:	ldr	r0, [pc, #72]	; 10804 <sf_gen_atmtype_abbrev+0x3bc>
   107b8:	add	r0, pc, r0
   107bc:	bl	2370 <sf_bpf_error>
   107c0:	ldr	r0, [pc, #64]	; 10808 <sf_gen_atmtype_abbrev+0x3c0>
   107c4:	add	r0, pc, r0
   107c8:	bl	2370 <sf_bpf_error>
   107cc:	.word	0x0002dedc
   107d0:	.word	0x0002de88
   107d4:	.word	0x0002de18
   107d8:	.word	0x0002ddc4
   107dc:	.word	0x0002dd70
   107e0:	.word	0x0002dd1c
   107e4:	.word	0x0002dcc8
   107e8:	.word	0x0002dc74
   107ec:	.word	0x000116a8
   107f0:	.word	0x00011678
   107f4:	.word	0x00011648
   107f8:	.word	0x0001161c
   107fc:	.word	0x000115ec
   10800:	.word	0x000115bc
   10804:	.word	0x00011590
   10808:	.word	0x00011560

0001080c <sf_gen_mtp2type_abbrev>:
   1080c:	cmp	r0, #23
   10810:	push	{r4, r5, r6, r7, r8, lr}
   10814:	beq	10940 <sf_gen_mtp2type_abbrev+0x134>
   10818:	cmp	r0, #24
   1081c:	beq	108b4 <sf_gen_mtp2type_abbrev+0xa8>
   10820:	cmp	r0, #22
   10824:	beq	1082c <sf_gen_mtp2type_abbrev+0x20>
   10828:	bl	f18 <abort@plt>
   1082c:	ldr	r3, [pc, #564]	; 10a68 <sf_gen_mtp2type_abbrev+0x25c>
   10830:	add	r3, pc, r3
   10834:	ldr	r2, [r3, #876]	; 0x36c
   10838:	sub	r1, r2, #139	; 0x8b
   1083c:	cmp	r2, #197	; 0xc5
   10840:	cmpne	r1, #1
   10844:	bhi	10a44 <sf_gen_mtp2type_abbrev+0x238>
   10848:	ldr	r4, [r3, #932]	; 0x3a4
   1084c:	bl	2810 <newchunk.constprop.49>
   10850:	mov	r3, #48	; 0x30
   10854:	str	r3, [r0]
   10858:	str	r4, [r0, #12]
   1085c:	mov	r6, r0
   10860:	bl	2810 <newchunk.constprop.49>
   10864:	mov	r3, #63	; 0x3f
   10868:	mov	r2, #84	; 0x54
   1086c:	str	r3, [r0, #12]
   10870:	str	r2, [r0]
   10874:	mov	r3, r6
   10878:	b	10880 <sf_gen_mtp2type_abbrev+0x74>
   1087c:	mov	r3, r4
   10880:	ldr	r4, [r3, #16]
   10884:	cmp	r4, #0
   10888:	bne	1087c <sf_gen_mtp2type_abbrev+0x70>
   1088c:	str	r0, [r3, #16]
   10890:	bl	29f8 <newchunk.constprop.50>
   10894:	mov	r3, #21
   10898:	mov	r5, r0
   1089c:	str	r0, [r5, #96]	; 0x60
   108a0:	str	r6, [r0, #4]
   108a4:	str	r4, [r0, #20]
   108a8:	str	r3, [r0, #8]
   108ac:	mov	r0, r5
   108b0:	pop	{r4, r5, r6, r7, r8, pc}
   108b4:	ldr	r3, [pc, #432]	; 10a6c <sf_gen_mtp2type_abbrev+0x260>
   108b8:	add	r3, pc, r3
   108bc:	ldr	r2, [r3, #876]	; 0x36c
   108c0:	sub	r1, r2, #139	; 0x8b
   108c4:	cmp	r2, #197	; 0xc5
   108c8:	cmpne	r1, #1
   108cc:	bhi	10a50 <sf_gen_mtp2type_abbrev+0x244>
   108d0:	ldr	r5, [r3, #932]	; 0x3a4
   108d4:	bl	2810 <newchunk.constprop.49>
   108d8:	mov	r3, #48	; 0x30
   108dc:	str	r3, [r0]
   108e0:	str	r5, [r0, #12]
   108e4:	mov	r4, r0
   108e8:	bl	2810 <newchunk.constprop.49>
   108ec:	mov	r2, #84	; 0x54
   108f0:	mov	r3, #63	; 0x3f
   108f4:	str	r2, [r0]
   108f8:	str	r3, [r0, #12]
   108fc:	mov	r2, r4
   10900:	b	10908 <sf_gen_mtp2type_abbrev+0xfc>
   10904:	mov	r2, r3
   10908:	ldr	r3, [r2, #16]
   1090c:	cmp	r3, #0
   10910:	bne	10904 <sf_gen_mtp2type_abbrev+0xf8>
   10914:	str	r0, [r2, #16]
   10918:	bl	29f8 <newchunk.constprop.50>
   1091c:	mov	r2, #37	; 0x25
   10920:	mov	r3, #2
   10924:	mov	r5, r0
   10928:	str	r0, [r5, #96]	; 0x60
   1092c:	str	r4, [r0, #4]
   10930:	str	r2, [r0, #8]
   10934:	str	r3, [r0, #20]
   10938:	mov	r0, r5
   1093c:	pop	{r4, r5, r6, r7, r8, pc}
   10940:	ldr	r3, [pc, #296]	; 10a70 <sf_gen_mtp2type_abbrev+0x264>
   10944:	add	r3, pc, r3
   10948:	ldr	r2, [r3, #876]	; 0x36c
   1094c:	sub	r1, r2, #139	; 0x8b
   10950:	cmp	r2, #197	; 0xc5
   10954:	cmpne	r1, #1
   10958:	bhi	10a5c <sf_gen_mtp2type_abbrev+0x250>
   1095c:	ldr	r7, [r3, #932]	; 0x3a4
   10960:	bl	2810 <newchunk.constprop.49>
   10964:	mov	r3, #48	; 0x30
   10968:	str	r3, [r0]
   1096c:	str	r7, [r0, #12]
   10970:	mov	r4, r0
   10974:	bl	2810 <newchunk.constprop.49>
   10978:	mov	r2, #84	; 0x54
   1097c:	mov	r3, #63	; 0x3f
   10980:	str	r2, [r0]
   10984:	str	r3, [r0, #12]
   10988:	mov	r2, r4
   1098c:	b	10994 <sf_gen_mtp2type_abbrev+0x188>
   10990:	mov	r2, r3
   10994:	ldr	r3, [r2, #16]
   10998:	cmp	r3, #0
   1099c:	bne	10990 <sf_gen_mtp2type_abbrev+0x184>
   109a0:	str	r0, [r2, #16]
   109a4:	bl	29f8 <newchunk.constprop.50>
   109a8:	mov	r2, #2
   109ac:	mov	r1, #37	; 0x25
   109b0:	mov	r5, r0
   109b4:	ldr	r3, [r0, #44]	; 0x2c
   109b8:	clz	r3, r3
   109bc:	lsr	r3, r3, #5
   109c0:	str	r0, [r5, #96]	; 0x60
   109c4:	str	r2, [r0, #20]
   109c8:	str	r1, [r0, #8]
   109cc:	str	r3, [r0, #44]	; 0x2c
   109d0:	str	r4, [r0, #4]
   109d4:	bl	2810 <newchunk.constprop.49>
   109d8:	mov	r3, #48	; 0x30
   109dc:	str	r3, [r0]
   109e0:	str	r7, [r0, #12]
   109e4:	mov	r6, r0
   109e8:	bl	2810 <newchunk.constprop.49>
   109ec:	mov	r3, #63	; 0x3f
   109f0:	mov	r2, #84	; 0x54
   109f4:	str	r3, [r0, #12]
   109f8:	str	r2, [r0]
   109fc:	mov	r3, r6
   10a00:	b	10a08 <sf_gen_mtp2type_abbrev+0x1fc>
   10a04:	mov	r3, r4
   10a08:	ldr	r4, [r3, #16]
   10a0c:	cmp	r4, #0
   10a10:	bne	10a04 <sf_gen_mtp2type_abbrev+0x1f8>
   10a14:	str	r0, [r3, #16]
   10a18:	bl	29f8 <newchunk.constprop.50>
   10a1c:	mov	r2, #37	; 0x25
   10a20:	mov	r1, r5
   10a24:	mov	r3, r0
   10a28:	str	r0, [r3, #96]	; 0x60
   10a2c:	str	r6, [r0, #4]
   10a30:	str	r4, [r0, #20]
   10a34:	str	r2, [r0, #8]
   10a38:	bl	6390 <sf_gen_and>
   10a3c:	mov	r0, r5
   10a40:	pop	{r4, r5, r6, r7, r8, pc}
   10a44:	ldr	r0, [pc, #40]	; 10a74 <sf_gen_mtp2type_abbrev+0x268>
   10a48:	add	r0, pc, r0
   10a4c:	bl	2370 <sf_bpf_error>
   10a50:	ldr	r0, [pc, #32]	; 10a78 <sf_gen_mtp2type_abbrev+0x26c>
   10a54:	add	r0, pc, r0
   10a58:	bl	2370 <sf_bpf_error>
   10a5c:	ldr	r0, [pc, #24]	; 10a7c <sf_gen_mtp2type_abbrev+0x270>
   10a60:	add	r0, pc, r0
   10a64:	bl	2370 <sf_bpf_error>
   10a68:	.word	0x0002db38
   10a6c:	.word	0x0002dab0
   10a70:	.word	0x0002da24
   10a74:	.word	0x000113f0
   10a78:	.word	0x00011424
   10a7c:	.word	0x000113f8

00010a80 <sf_gen_mtp3field_code>:
   10a80:	sub	r0, r0, #1
   10a84:	push	{r4, r5, r6, r7, r8, lr}
   10a88:	mov	r6, r1
   10a8c:	mov	r4, r2
   10a90:	mov	r5, r3
   10a94:	cmp	r0, #3
   10a98:	addls	pc, pc, r0, lsl #2
   10a9c:	b	10c88 <sf_gen_mtp3field_code+0x208>
   10aa0:	b	10bbc <sf_gen_mtp3field_code+0x13c>
   10aa4:	b	10c10 <sf_gen_mtp3field_code+0x190>
   10aa8:	b	10b50 <sf_gen_mtp3field_code+0xd0>
   10aac:	b	10ab0 <sf_gen_mtp3field_code+0x30>
   10ab0:	ldr	r3, [pc, #564]	; 10cec <sf_gen_mtp3field_code+0x26c>
   10ab4:	add	r3, pc, r3
   10ab8:	ldr	r8, [r3, #948]	; 0x3b4
   10abc:	cmn	r8, #1
   10ac0:	beq	10cb0 <sf_gen_mtp3field_code+0x230>
   10ac4:	cmp	r1, #15
   10ac8:	bhi	10cbc <sf_gen_mtp3field_code+0x23c>
   10acc:	bl	2810 <newchunk.constprop.49>
   10ad0:	mov	r3, #48	; 0x30
   10ad4:	lsl	r6, r6, #4
   10ad8:	str	r3, [r0]
   10adc:	str	r8, [r0, #12]
   10ae0:	mov	r7, r0
   10ae4:	bl	2810 <newchunk.constprop.49>
   10ae8:	mov	r2, #84	; 0x54
   10aec:	mov	r3, #240	; 0xf0
   10af0:	str	r2, [r0]
   10af4:	str	r3, [r0, #12]
   10af8:	mov	r2, r7
   10afc:	b	10b04 <sf_gen_mtp3field_code+0x84>
   10b00:	mov	r2, r3
   10b04:	ldr	r3, [r2, #16]
   10b08:	cmp	r3, #0
   10b0c:	bne	10b00 <sf_gen_mtp3field_code+0x80>
   10b10:	str	r0, [r2, #16]
   10b14:	bl	29f8 <newchunk.constprop.50>
   10b18:	cmp	r5, #0
   10b1c:	orr	r3, r4, #5
   10b20:	str	r0, [r0, #96]	; 0x60
   10b24:	str	r7, [r0, #4]
   10b28:	str	r6, [r0, #20]
   10b2c:	str	r3, [r0, #8]
   10b30:	popeq	{r4, r5, r6, r7, r8, pc}
   10b34:	bic	r4, r4, #16
   10b38:	cmp	r4, #32
   10b3c:	ldreq	r3, [r0, #44]	; 0x2c
   10b40:	clzeq	r3, r3
   10b44:	lsreq	r3, r3, #5
   10b48:	streq	r3, [r0, #44]	; 0x2c
   10b4c:	pop	{r4, r5, r6, r7, r8, pc}
   10b50:	ldr	r3, [pc, #408]	; 10cf0 <sf_gen_mtp3field_code+0x270>
   10b54:	add	r3, pc, r3
   10b58:	ldr	r8, [r3, #944]	; 0x3b0
   10b5c:	cmn	r8, #1
   10b60:	beq	10cc8 <sf_gen_mtp3field_code+0x248>
   10b64:	cmp	r1, #16384	; 0x4000
   10b68:	bcs	10cd4 <sf_gen_mtp3field_code+0x254>
   10b6c:	lsl	r1, r1, #8
   10b70:	and	r1, r1, #4128768	; 0x3f0000
   10b74:	add	r6, r1, r6, lsl #24
   10b78:	bl	2810 <newchunk.constprop.49>
   10b7c:	mov	r3, #32
   10b80:	str	r3, [r0]
   10b84:	str	r8, [r0, #12]
   10b88:	mov	r7, r0
   10b8c:	bl	2810 <newchunk.constprop.49>
   10b90:	ldr	r3, [pc, #348]	; 10cf4 <sf_gen_mtp3field_code+0x274>
   10b94:	mov	r2, #84	; 0x54
   10b98:	str	r2, [r0]
   10b9c:	str	r3, [r0, #12]
   10ba0:	mov	r2, r7
   10ba4:	b	10bac <sf_gen_mtp3field_code+0x12c>
   10ba8:	mov	r2, r3
   10bac:	ldr	r3, [r2, #16]
   10bb0:	cmp	r3, #0
   10bb4:	bne	10ba8 <sf_gen_mtp3field_code+0x128>
   10bb8:	b	10b10 <sf_gen_mtp3field_code+0x90>
   10bbc:	ldr	r3, [pc, #308]	; 10cf8 <sf_gen_mtp3field_code+0x278>
   10bc0:	add	r3, pc, r3
   10bc4:	ldr	r8, [r3, #936]	; 0x3a8
   10bc8:	cmn	r8, #1
   10bcc:	beq	10ce0 <sf_gen_mtp3field_code+0x260>
   10bd0:	cmp	r1, #255	; 0xff
   10bd4:	bhi	10c8c <sf_gen_mtp3field_code+0x20c>
   10bd8:	bl	2810 <newchunk.constprop.49>
   10bdc:	mov	r3, #48	; 0x30
   10be0:	str	r3, [r0]
   10be4:	str	r8, [r0, #12]
   10be8:	mov	r7, r0
   10bec:	bl	29f8 <newchunk.constprop.50>
   10bf0:	cmp	r5, #0
   10bf4:	orr	r3, r4, #5
   10bf8:	str	r7, [r0, #4]
   10bfc:	str	r0, [r0, #96]	; 0x60
   10c00:	str	r6, [r0, #20]
   10c04:	str	r3, [r0, #8]
   10c08:	bne	10b34 <sf_gen_mtp3field_code+0xb4>
   10c0c:	pop	{r4, r5, r6, r7, r8, pc}
   10c10:	ldr	r3, [pc, #228]	; 10cfc <sf_gen_mtp3field_code+0x27c>
   10c14:	add	r3, pc, r3
   10c18:	ldr	r8, [r3, #940]	; 0x3ac
   10c1c:	cmn	r8, #1
   10c20:	beq	10c98 <sf_gen_mtp3field_code+0x218>
   10c24:	cmp	r1, #16384	; 0x4000
   10c28:	bcs	10ca4 <sf_gen_mtp3field_code+0x224>
   10c2c:	lsl	r1, r1, #6
   10c30:	lsl	r3, r6, #22
   10c34:	and	r1, r1, #65280	; 0xff00
   10c38:	orr	r6, r1, r6, lsr #10
   10c3c:	and	r1, r3, #12582912	; 0xc00000
   10c40:	add	r6, r1, r6
   10c44:	bl	2810 <newchunk.constprop.49>
   10c48:	mov	r3, #32
   10c4c:	str	r3, [r0]
   10c50:	str	r8, [r0, #12]
   10c54:	mov	r7, r0
   10c58:	bl	2810 <newchunk.constprop.49>
   10c5c:	ldr	r3, [pc, #156]	; 10d00 <sf_gen_mtp3field_code+0x280>
   10c60:	mov	r2, #84	; 0x54
   10c64:	str	r2, [r0]
   10c68:	str	r3, [r0, #12]
   10c6c:	mov	r2, r7
   10c70:	b	10c78 <sf_gen_mtp3field_code+0x1f8>
   10c74:	mov	r2, r3
   10c78:	ldr	r3, [r2, #16]
   10c7c:	cmp	r3, #0
   10c80:	bne	10c74 <sf_gen_mtp3field_code+0x1f4>
   10c84:	b	10b10 <sf_gen_mtp3field_code+0x90>
   10c88:	bl	f18 <abort@plt>
   10c8c:	ldr	r0, [pc, #112]	; 10d04 <sf_gen_mtp3field_code+0x284>
   10c90:	add	r0, pc, r0
   10c94:	bl	2370 <sf_bpf_error>
   10c98:	ldr	r0, [pc, #104]	; 10d08 <sf_gen_mtp3field_code+0x288>
   10c9c:	add	r0, pc, r0
   10ca0:	bl	2370 <sf_bpf_error>
   10ca4:	ldr	r0, [pc, #96]	; 10d0c <sf_gen_mtp3field_code+0x28c>
   10ca8:	add	r0, pc, r0
   10cac:	bl	2370 <sf_bpf_error>
   10cb0:	ldr	r0, [pc, #88]	; 10d10 <sf_gen_mtp3field_code+0x290>
   10cb4:	add	r0, pc, r0
   10cb8:	bl	2370 <sf_bpf_error>
   10cbc:	ldr	r0, [pc, #80]	; 10d14 <sf_gen_mtp3field_code+0x294>
   10cc0:	add	r0, pc, r0
   10cc4:	bl	2370 <sf_bpf_error>
   10cc8:	ldr	r0, [pc, #72]	; 10d18 <sf_gen_mtp3field_code+0x298>
   10ccc:	add	r0, pc, r0
   10cd0:	bl	2370 <sf_bpf_error>
   10cd4:	ldr	r0, [pc, #64]	; 10d1c <sf_gen_mtp3field_code+0x29c>
   10cd8:	add	r0, pc, r0
   10cdc:	bl	2370 <sf_bpf_error>
   10ce0:	ldr	r0, [pc, #56]	; 10d20 <sf_gen_mtp3field_code+0x2a0>
   10ce4:	add	r0, pc, r0
   10ce8:	bl	2370 <sf_bpf_error>
   10cec:	.word	0x0002d8b4
   10cf0:	.word	0x0002d814
   10cf4:	.word	0xff3f0000
   10cf8:	.word	0x0002d7a8
   10cfc:	.word	0x0002d754
   10d00:	.word	0x00c0ff0f
   10d04:	.word	0x00011224
   10d08:	.word	0x00011240
   10d0c:	.word	0x00011250
   10d10:	.word	0x000112b0
   10d14:	.word	0x000112c0
   10d18:	.word	0x00011254
   10d1c:	.word	0x00011264
   10d20:	.word	0x000111b4

00010d24 <sf_gen_atmmulti_abbrev>:
   10d24:	cmp	r0, #29
   10d28:	push	{r4, r5, r6, r7, r8, lr}
   10d2c:	beq	10f70 <sf_gen_atmmulti_abbrev+0x24c>
   10d30:	ble	10e70 <sf_gen_atmmulti_abbrev+0x14c>
   10d34:	cmp	r0, #70	; 0x46
   10d38:	beq	10de4 <sf_gen_atmmulti_abbrev+0xc0>
   10d3c:	cmp	r0, #71	; 0x47
   10d40:	bne	10f48 <sf_gen_atmmulti_abbrev+0x224>
   10d44:	ldr	r3, [pc, #580]	; 10f90 <sf_gen_atmmulti_abbrev+0x26c>
   10d48:	add	r3, pc, r3
   10d4c:	ldr	r3, [r3, #888]	; 0x378
   10d50:	cmp	r3, #0
   10d54:	beq	10f4c <sf_gen_atmmulti_abbrev+0x228>
   10d58:	mov	r0, #5
   10d5c:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10d60:	mov	r5, r0
   10d64:	mov	r0, #2
   10d68:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10d6c:	mov	r4, r0
   10d70:	mov	r1, r0
   10d74:	mov	r0, r5
   10d78:	bl	6fd4 <sf_gen_or>
   10d7c:	mov	r0, #7
   10d80:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10d84:	mov	r1, r4
   10d88:	bl	6fd4 <sf_gen_or>
   10d8c:	mov	r0, #77	; 0x4d
   10d90:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10d94:	mov	r1, r4
   10d98:	bl	6fd4 <sf_gen_or>
   10d9c:	mov	r0, #90	; 0x5a
   10da0:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10da4:	mov	r1, r4
   10da8:	bl	6fd4 <sf_gen_or>
   10dac:	mov	r0, #0
   10db0:	bl	3d3c <sf_gen_atmfield_code.constprop.27>
   10db4:	mov	r6, r0
   10db8:	mov	r0, #1
   10dbc:	bl	3cd0 <sf_gen_atmfield_code.constprop.26>
   10dc0:	mov	r5, r0
   10dc4:	mov	r1, r0
   10dc8:	mov	r0, r6
   10dcc:	bl	6390 <sf_gen_and>
   10dd0:	mov	r0, r5
   10dd4:	mov	r1, r4
   10dd8:	bl	6390 <sf_gen_and>
   10ddc:	mov	r0, r4
   10de0:	pop	{r4, r5, r6, r7, r8, pc}
   10de4:	ldr	r3, [pc, #424]	; 10f94 <sf_gen_atmmulti_abbrev+0x270>
   10de8:	add	r3, pc, r3
   10dec:	ldr	r3, [r3, #888]	; 0x378
   10df0:	cmp	r3, #0
   10df4:	beq	10f58 <sf_gen_atmmulti_abbrev+0x234>
   10df8:	mov	r0, #5
   10dfc:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10e00:	mov	r5, r0
   10e04:	mov	r0, #2
   10e08:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10e0c:	mov	r4, r0
   10e10:	mov	r1, r0
   10e14:	mov	r0, r5
   10e18:	bl	6fd4 <sf_gen_or>
   10e1c:	mov	r0, #7
   10e20:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10e24:	mov	r1, r4
   10e28:	bl	6fd4 <sf_gen_or>
   10e2c:	mov	r0, #15
   10e30:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10e34:	mov	r1, r4
   10e38:	bl	6fd4 <sf_gen_or>
   10e3c:	mov	r0, #77	; 0x4d
   10e40:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10e44:	mov	r1, r4
   10e48:	bl	6fd4 <sf_gen_or>
   10e4c:	mov	r0, #90	; 0x5a
   10e50:	bl	3c7c <sf_gen_atmfield_code.constprop.25>
   10e54:	mov	r1, r4
   10e58:	bl	6fd4 <sf_gen_or>
   10e5c:	mov	r0, #0
   10e60:	bl	3d3c <sf_gen_atmfield_code.constprop.27>
   10e64:	mov	r6, r0
   10e68:	mov	r0, #5
   10e6c:	b	10dbc <sf_gen_atmmulti_abbrev+0x98>
   10e70:	cmp	r0, #28
   10e74:	bne	10f48 <sf_gen_atmmulti_abbrev+0x224>
   10e78:	ldr	r3, [pc, #280]	; 10f98 <sf_gen_atmmulti_abbrev+0x274>
   10e7c:	add	r3, pc, r3
   10e80:	ldr	r3, [r3, #888]	; 0x378
   10e84:	cmp	r3, #0
   10e88:	beq	10f64 <sf_gen_atmmulti_abbrev+0x240>
   10e8c:	ldr	r7, [pc, #264]	; 10f9c <sf_gen_atmmulti_abbrev+0x278>
   10e90:	add	r7, pc, r7
   10e94:	ldr	r4, [r7, #892]	; 0x37c
   10e98:	cmn	r4, #1
   10e9c:	beq	10f48 <sf_gen_atmmulti_abbrev+0x224>
   10ea0:	mov	r1, #8
   10ea4:	mov	r0, r4
   10ea8:	bl	2ef8 <gen_load_llrel>
   10eac:	mov	r6, #21
   10eb0:	mov	r8, r0
   10eb4:	bl	29f8 <newchunk.constprop.50>
   10eb8:	mov	r3, #3
   10ebc:	mov	r1, #8
   10ec0:	mov	r5, r0
   10ec4:	str	r8, [r0, #4]
   10ec8:	str	r3, [r5, #20]
   10ecc:	str	r0, [r5, #96]	; 0x60
   10ed0:	str	r6, [r5, #8]
   10ed4:	mov	r0, r4
   10ed8:	bl	2ef8 <gen_load_llrel>
   10edc:	mov	r8, r0
   10ee0:	bl	29f8 <newchunk.constprop.50>
   10ee4:	mov	r3, #4
   10ee8:	mov	r4, r0
   10eec:	str	r8, [r0, #4]
   10ef0:	str	r6, [r0, #8]
   10ef4:	mov	r1, r4
   10ef8:	str	r0, [r4, #96]	; 0x60
   10efc:	str	r3, [r4, #20]
   10f00:	mov	r0, r5
   10f04:	bl	6fd4 <sf_gen_or>
   10f08:	ldr	r0, [r7, #896]	; 0x380
   10f0c:	cmn	r0, #1
   10f10:	beq	10f48 <sf_gen_atmmulti_abbrev+0x224>
   10f14:	mov	r1, #16
   10f18:	bl	2ef8 <gen_load_llrel>
   10f1c:	mov	r5, r0
   10f20:	bl	29f8 <newchunk.constprop.50>
   10f24:	mov	r2, #0
   10f28:	mov	r1, r4
   10f2c:	mov	r3, r0
   10f30:	stmib	r0, {r5, r6}
   10f34:	str	r0, [r3, #96]	; 0x60
   10f38:	str	r2, [r0, #20]
   10f3c:	bl	6390 <sf_gen_and>
   10f40:	mov	r0, r4
   10f44:	pop	{r4, r5, r6, r7, r8, pc}
   10f48:	bl	f18 <abort@plt>
   10f4c:	ldr	r0, [pc, #76]	; 10fa0 <sf_gen_atmmulti_abbrev+0x27c>
   10f50:	add	r0, pc, r0
   10f54:	bl	2370 <sf_bpf_error>
   10f58:	ldr	r0, [pc, #68]	; 10fa4 <sf_gen_atmmulti_abbrev+0x280>
   10f5c:	add	r0, pc, r0
   10f60:	bl	2370 <sf_bpf_error>
   10f64:	ldr	r0, [pc, #60]	; 10fa8 <sf_gen_atmmulti_abbrev+0x284>
   10f68:	add	r0, pc, r0
   10f6c:	bl	2370 <sf_bpf_error>
   10f70:	ldr	r3, [pc, #52]	; 10fac <sf_gen_atmmulti_abbrev+0x288>
   10f74:	add	r3, pc, r3
   10f78:	ldr	r3, [r3, #888]	; 0x378
   10f7c:	cmp	r3, #0
   10f80:	bne	10e8c <sf_gen_atmmulti_abbrev+0x168>
   10f84:	ldr	r0, [pc, #36]	; 10fb0 <sf_gen_atmmulti_abbrev+0x28c>
   10f88:	add	r0, pc, r0
   10f8c:	bl	2370 <sf_bpf_error>
   10f90:	.word	0x0002d620
   10f94:	.word	0x0002d580
   10f98:	.word	0x0002d4ec
   10f9c:	.word	0x0002d4d8
   10fa0:	.word	0x000110c4
   10fa4:	.word	0x00011090
   10fa8:	.word	0x00011040
   10fac:	.word	0x0002d3f4
   10fb0:	.word	0x00011040

00010fb4 <pcap_nametoaddr>:
   10fb4:	push	{r4, lr}
   10fb8:	bl	f00 <gethostbyname@plt>
   10fbc:	cmp	r0, #0
   10fc0:	popeq	{r4, pc}
   10fc4:	ldr	r1, [r0, #16]
   10fc8:	ldr	r3, [r1]
   10fcc:	cmp	r3, #0
   10fd0:	beq	10ff4 <pcap_nametoaddr+0x40>
   10fd4:	ldr	r2, [r3]
   10fd8:	rev	r2, r2
   10fdc:	str	r2, [r3]
   10fe0:	ldr	r3, [r1, #4]!
   10fe4:	cmp	r3, #0
   10fe8:	bne	10fd4 <pcap_nametoaddr+0x20>
   10fec:	ldr	r0, [r0, #16]
   10ff0:	pop	{r4, pc}
   10ff4:	mov	r0, r1
   10ff8:	pop	{r4, pc}

00010ffc <pcap_nametoaddrinfo>:
   10ffc:	push	{r4, r5, lr}
   11000:	sub	sp, sp, #44	; 0x2c
   11004:	add	r4, sp, #8
   11008:	mov	r5, r0
   1100c:	mov	r2, #32
   11010:	mov	r0, r4
   11014:	mov	r1, #0
   11018:	bl	e88 <memset@plt>
   1101c:	mov	lr, #1
   11020:	mov	ip, #6
   11024:	mov	r2, r4
   11028:	mov	r0, r5
   1102c:	add	r3, sp, #4
   11030:	mov	r1, #0
   11034:	str	lr, [sp, #16]
   11038:	str	ip, [sp, #20]
   1103c:	bl	ee8 <getaddrinfo@plt>
   11040:	cmp	r0, #0
   11044:	movne	r0, #0
   11048:	ldreq	r0, [sp, #4]
   1104c:	add	sp, sp, #44	; 0x2c
   11050:	pop	{r4, r5, pc}

00011054 <pcap_nametonetaddr>:
   11054:	push	{r4, lr}
   11058:	bl	db0 <getnetbyname@plt>
   1105c:	cmp	r0, #0
   11060:	ldrne	r0, [r0, #12]
   11064:	pop	{r4, pc}

00011068 <pcap_nametoport>:
   11068:	push	{r4, r5, r6, r7, r8, lr}
   1106c:	mov	r6, r1
   11070:	ldr	r1, [pc, #176]	; 11128 <pcap_nametoport+0xc0>
   11074:	mov	r5, r2
   11078:	add	r1, pc, r1
   1107c:	mov	r7, r0
   11080:	bl	e7c <getservbyname@plt>
   11084:	cmp	r0, #0
   11088:	beq	110d8 <pcap_nametoport+0x70>
   1108c:	ldr	r1, [pc, #152]	; 1112c <pcap_nametoport+0xc4>
   11090:	ldr	r4, [r0, #8]
   11094:	add	r1, pc, r1
   11098:	mov	r0, r7
   1109c:	bl	e7c <getservbyname@plt>
   110a0:	rev16	r4, r4
   110a4:	uxth	r4, r4
   110a8:	cmp	r0, #0
   110ac:	beq	11114 <pcap_nametoport+0xac>
   110b0:	ldr	r3, [r0, #8]
   110b4:	str	r4, [r6]
   110b8:	rev16	r3, r3
   110bc:	mov	r0, #1
   110c0:	uxth	r3, r3
   110c4:	cmp	r4, r3
   110c8:	movne	r3, #6
   110cc:	mvneq	r3, #0
   110d0:	str	r3, [r5]
   110d4:	pop	{r4, r5, r6, r7, r8, pc}
   110d8:	ldr	r1, [pc, #80]	; 11130 <pcap_nametoport+0xc8>
   110dc:	mov	r0, r7
   110e0:	add	r1, pc, r1
   110e4:	bl	e7c <getservbyname@plt>
   110e8:	cmp	r0, #0
   110ec:	beq	11110 <pcap_nametoport+0xa8>
   110f0:	ldr	r3, [r0, #8]
   110f4:	mov	r2, #17
   110f8:	rev16	r3, r3
   110fc:	mov	r0, #1
   11100:	uxth	r3, r3
   11104:	str	r3, [r6]
   11108:	str	r2, [r5]
   1110c:	pop	{r4, r5, r6, r7, r8, pc}
   11110:	pop	{r4, r5, r6, r7, r8, pc}
   11114:	mov	r3, #6
   11118:	str	r4, [r6]
   1111c:	mov	r0, #1
   11120:	str	r3, [r5]
   11124:	pop	{r4, r5, r6, r7, r8, pc}
   11128:	.word	0x00010fc4
   1112c:	.word	0x00010fac
   11130:	.word	0x00010f60

00011134 <pcap_nametoportrange>:
   11134:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11138:	mov	r7, r1
   1113c:	ldr	r1, [pc, #548]	; 11368 <pcap_nametoportrange+0x234>
   11140:	sub	sp, sp, #8
   11144:	mov	r8, r2
   11148:	mov	r6, r3
   1114c:	mov	r2, sp
   11150:	add	r3, sp, #4
   11154:	add	r1, pc, r1
   11158:	mov	r4, r0
   1115c:	bl	eb8 <sscanf@plt>
   11160:	cmp	r0, #2
   11164:	beq	11278 <pcap_nametoportrange+0x144>
   11168:	mov	r0, r4
   1116c:	bl	dd4 <strdup@plt>
   11170:	subs	r9, r0, #0
   11174:	beq	11298 <pcap_nametoportrange+0x164>
   11178:	mov	r1, #45	; 0x2d
   1117c:	bl	e58 <strchr@plt>
   11180:	subs	r5, r0, #0
   11184:	beq	1134c <pcap_nametoportrange+0x218>
   11188:	ldr	r1, [pc, #476]	; 1136c <pcap_nametoportrange+0x238>
   1118c:	mov	r3, #0
   11190:	strb	r3, [r5]
   11194:	add	r1, pc, r1
   11198:	mov	r0, r9
   1119c:	bl	e7c <getservbyname@plt>
   111a0:	cmp	r0, #0
   111a4:	beq	112a0 <pcap_nametoportrange+0x16c>
   111a8:	ldr	r1, [pc, #448]	; 11370 <pcap_nametoportrange+0x23c>
   111ac:	ldr	r4, [r0, #8]
   111b0:	add	r1, pc, r1
   111b4:	mov	r0, r9
   111b8:	bl	e7c <getservbyname@plt>
   111bc:	rev16	r4, r4
   111c0:	uxth	r4, r4
   111c4:	cmp	r0, #0
   111c8:	beq	11324 <pcap_nametoportrange+0x1f0>
   111cc:	ldr	r3, [r0, #8]
   111d0:	str	r4, [r7]
   111d4:	rev16	r3, r3
   111d8:	uxth	r3, r3
   111dc:	cmp	r4, r3
   111e0:	mvneq	sl, #0
   111e4:	streq	sl, [r6]
   111e8:	movne	r3, #6
   111ec:	movne	sl, r3
   111f0:	strne	r3, [r6]
   111f4:	ldr	r1, [pc, #376]	; 11374 <pcap_nametoportrange+0x240>
   111f8:	add	r5, r5, #1
   111fc:	mov	r0, r5
   11200:	add	r1, pc, r1
   11204:	bl	e7c <getservbyname@plt>
   11208:	cmp	r0, #0
   1120c:	beq	112ec <pcap_nametoportrange+0x1b8>
   11210:	ldr	r1, [pc, #352]	; 11378 <pcap_nametoportrange+0x244>
   11214:	ldr	r4, [r0, #8]
   11218:	add	r1, pc, r1
   1121c:	mov	r0, r5
   11220:	bl	e7c <getservbyname@plt>
   11224:	rev16	r4, r4
   11228:	uxth	r4, r4
   1122c:	cmp	r0, #0
   11230:	beq	11338 <pcap_nametoportrange+0x204>
   11234:	ldr	r3, [r0, #8]
   11238:	str	r4, [r8]
   1123c:	rev16	r3, r3
   11240:	uxth	r3, r3
   11244:	cmp	r4, r3
   11248:	movne	r2, #6
   1124c:	movne	r3, r2
   11250:	strne	r2, [r6]
   11254:	beq	1135c <pcap_nametoportrange+0x228>
   11258:	cmp	sl, r3
   1125c:	moveq	r0, #1
   11260:	beq	11290 <pcap_nametoportrange+0x15c>
   11264:	mvn	r3, #0
   11268:	mov	r0, #1
   1126c:	str	r3, [r6]
   11270:	add	sp, sp, #8
   11274:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11278:	ldm	sp, {r1, r2}
   1127c:	mov	r0, #1
   11280:	mvn	r3, #0
   11284:	str	r1, [r7]
   11288:	str	r2, [r8]
   1128c:	str	r3, [r6]
   11290:	add	sp, sp, #8
   11294:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11298:	mov	r0, r9
   1129c:	b	11290 <pcap_nametoportrange+0x15c>
   112a0:	ldr	r1, [pc, #212]	; 1137c <pcap_nametoportrange+0x248>
   112a4:	mov	r0, r9
   112a8:	add	r1, pc, r1
   112ac:	bl	e7c <getservbyname@plt>
   112b0:	subs	r4, r0, #0
   112b4:	beq	112d8 <pcap_nametoportrange+0x1a4>
   112b8:	ldr	r3, [r4, #8]
   112bc:	mov	r2, #17
   112c0:	rev16	r3, r3
   112c4:	mov	sl, r2
   112c8:	uxth	r3, r3
   112cc:	str	r3, [r7]
   112d0:	str	r2, [r6]
   112d4:	b	111f4 <pcap_nametoportrange+0xc0>
   112d8:	mov	r0, r9
   112dc:	bl	da4 <free@plt>
   112e0:	mov	r0, r4
   112e4:	add	sp, sp, #8
   112e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112ec:	ldr	r1, [pc, #140]	; 11380 <pcap_nametoportrange+0x24c>
   112f0:	mov	r0, r5
   112f4:	add	r1, pc, r1
   112f8:	bl	e7c <getservbyname@plt>
   112fc:	subs	r4, r0, #0
   11300:	beq	112d8 <pcap_nametoportrange+0x1a4>
   11304:	ldr	r2, [r4, #8]
   11308:	mov	r1, #17
   1130c:	rev16	r2, r2
   11310:	mov	r3, r1
   11314:	uxth	r2, r2
   11318:	str	r2, [r8]
   1131c:	str	r1, [r6]
   11320:	b	11258 <pcap_nametoportrange+0x124>
   11324:	mov	r3, #6
   11328:	str	r4, [r7]
   1132c:	mov	sl, r3
   11330:	str	r3, [r6]
   11334:	b	111f4 <pcap_nametoportrange+0xc0>
   11338:	mov	r2, #6
   1133c:	str	r4, [r8]
   11340:	mov	r3, r2
   11344:	str	r2, [r6]
   11348:	b	11258 <pcap_nametoportrange+0x124>
   1134c:	mov	r0, r9
   11350:	bl	da4 <free@plt>
   11354:	mov	r0, r5
   11358:	b	11290 <pcap_nametoportrange+0x15c>
   1135c:	mvn	r3, #0
   11360:	str	r3, [r6]
   11364:	b	11258 <pcap_nametoportrange+0x124>
   11368:	.word	0x00010ef0
   1136c:	.word	0x00010ea8
   11370:	.word	0x00010e90
   11374:	.word	0x00010e3c
   11378:	.word	0x00010e28
   1137c:	.word	0x00010d98
   11380:	.word	0x00010d4c

00011384 <pcap_nametoproto>:
   11384:	push	{r4, lr}
   11388:	bl	d80 <getprotobyname@plt>
   1138c:	cmp	r0, #0
   11390:	ldrne	r0, [r0, #8]
   11394:	mvneq	r0, #0
   11398:	pop	{r4, pc}

0001139c <pcap_nametoeproto>:
   1139c:	push	{r4, r5, r6, lr}
   113a0:	mov	r5, r0
   113a4:	ldr	r4, [pc, #60]	; 113e8 <pcap_nametoeproto+0x4c>
   113a8:	add	r4, pc, r4
   113ac:	ldr	r0, [r4]
   113b0:	cmp	r0, #0
   113b4:	bne	113c8 <pcap_nametoeproto+0x2c>
   113b8:	b	113e0 <pcap_nametoeproto+0x44>
   113bc:	ldr	r0, [r4, #8]!
   113c0:	cmp	r0, #0
   113c4:	beq	113e0 <pcap_nametoeproto+0x44>
   113c8:	mov	r1, r5
   113cc:	bl	d50 <strcmp@plt>
   113d0:	cmp	r0, #0
   113d4:	bne	113bc <pcap_nametoeproto+0x20>
   113d8:	ldrh	r0, [r4, #4]
   113dc:	pop	{r4, r5, r6, pc}
   113e0:	mvn	r0, #0
   113e4:	pop	{r4, r5, r6, pc}
   113e8:	.word	0x0002cee0

000113ec <pcap_nametollc>:
   113ec:	push	{r4, r5, r6, lr}
   113f0:	mov	r5, r0
   113f4:	ldr	r4, [pc, #64]	; 1143c <pcap_nametollc+0x50>
   113f8:	add	r4, pc, r4
   113fc:	ldr	r0, [r4, #168]	; 0xa8
   11400:	cmp	r0, #0
   11404:	beq	11434 <pcap_nametollc+0x48>
   11408:	add	r4, r4, #168	; 0xa8
   1140c:	b	1141c <pcap_nametollc+0x30>
   11410:	ldr	r0, [r4, #8]!
   11414:	cmp	r0, #0
   11418:	beq	11434 <pcap_nametollc+0x48>
   1141c:	mov	r1, r5
   11420:	bl	d50 <strcmp@plt>
   11424:	cmp	r0, #0
   11428:	bne	11410 <pcap_nametollc+0x24>
   1142c:	ldrh	r0, [r4, #4]
   11430:	pop	{r4, r5, r6, pc}
   11434:	mvn	r0, #0
   11438:	pop	{r4, r5, r6, pc}
   1143c:	.word	0x0002ce90

00011440 <__pcap_atoin>:
   11440:	mov	r3, #0
   11444:	push	{r4, lr}
   11448:	mov	ip, r3
   1144c:	mov	lr, r3
   11450:	mov	r4, r3
   11454:	str	r3, [r1]
   11458:	ldrb	r2, [r0]
   1145c:	mov	r3, r4
   11460:	cmp	r2, #46	; 0x2e
   11464:	cmpne	r2, #0
   11468:	beq	1148c <__pcap_atoin+0x4c>
   1146c:	add	r3, r3, r3, lsl #2
   11470:	add	r3, r2, r3, lsl #1
   11474:	ldrb	r2, [r0, #1]!
   11478:	sub	r3, r3, #48	; 0x30
   1147c:	cmp	r2, #0
   11480:	cmpne	r2, #46	; 0x2e
   11484:	bne	1146c <__pcap_atoin+0x2c>
   11488:	uxtb	r3, r3
   1148c:	orr	ip, r3, ip, lsl #8
   11490:	str	ip, [r1]
   11494:	ldrb	r3, [r0]
   11498:	add	lr, lr, #8
   1149c:	cmp	r3, #0
   114a0:	addne	r0, r0, #1
   114a4:	bne	11458 <__pcap_atoin+0x18>
   114a8:	mov	r0, lr
   114ac:	pop	{r4, pc}

000114b0 <__pcap_atodn>:
   114b0:	push	{r4, r5, lr}
   114b4:	mov	r4, r1
   114b8:	ldr	r1, [pc, #88]	; 11518 <__pcap_atodn+0x68>
   114bc:	sub	sp, sp, #12
   114c0:	mov	r3, sp
   114c4:	add	r2, sp, #4
   114c8:	add	r1, pc, r1
   114cc:	mov	r5, r0
   114d0:	bl	eb8 <sscanf@plt>
   114d4:	cmp	r0, #2
   114d8:	bne	11508 <__pcap_atodn+0x58>
   114dc:	ldr	r2, [sp]
   114e0:	ldr	r1, [sp, #4]
   114e4:	ldr	r3, [pc, #48]	; 1151c <__pcap_atodn+0x6c>
   114e8:	lsl	r2, r2, #22
   114ec:	and	r3, r3, r1, lsl #10
   114f0:	lsr	r2, r2, #22
   114f4:	orr	r3, r3, r2
   114f8:	mov	r0, #32
   114fc:	str	r3, [r4]
   11500:	add	sp, sp, #12
   11504:	pop	{r4, r5, pc}
   11508:	ldr	r0, [pc, #16]	; 11520 <__pcap_atodn+0x70>
   1150c:	mov	r1, r5
   11510:	add	r0, pc, r0
   11514:	bl	2370 <sf_bpf_error>
   11518:	.word	0x00010b84
   1151c:	.word	0x0000ffff
   11520:	.word	0x00010b44

00011524 <pcap_ether_aton>:
   11524:	push	{r4, r5, r6, lr}
   11528:	mov	r5, r0
   1152c:	mov	r0, #6
   11530:	bl	e1c <malloc@plt>
   11534:	subs	r6, r0, #0
   11538:	beq	115dc <pcap_ether_aton+0xb8>
   1153c:	ldrb	r4, [r5]
   11540:	cmp	r4, #0
   11544:	beq	115dc <pcap_ether_aton+0xb8>
   11548:	bl	e34 <__ctype_b_loc@plt>
   1154c:	mov	ip, r6
   11550:	ldr	r0, [r0]
   11554:	sub	r3, r4, #45	; 0x2d
   11558:	cmp	r4, #58	; 0x3a
   1155c:	cmpne	r3, #1
   11560:	ldrbls	r4, [r5, #1]
   11564:	addls	r5, r5, #1
   11568:	lsl	r3, r4, #1
   1156c:	ldrh	r3, [r0, r3]
   11570:	tst	r3, #2048	; 0x800
   11574:	subne	r2, r4, #48	; 0x30
   11578:	bne	11588 <pcap_ether_aton+0x64>
   1157c:	tst	r3, #512	; 0x200
   11580:	subne	r2, r4, #87	; 0x57
   11584:	subeq	r2, r4, #55	; 0x37
   11588:	ldrb	r4, [r5, #1]
   1158c:	mov	r3, r2
   11590:	lsl	r1, r4, #1
   11594:	ldrh	r1, [r0, r1]
   11598:	tst	r1, #4096	; 0x1000
   1159c:	addeq	r5, r5, #1
   115a0:	beq	115d0 <pcap_ether_aton+0xac>
   115a4:	tst	r1, #2048	; 0x800
   115a8:	lsl	r2, r2, #4
   115ac:	add	lr, r5, #2
   115b0:	subne	r3, r4, #48	; 0x30
   115b4:	bne	115c4 <pcap_ether_aton+0xa0>
   115b8:	tst	r1, #512	; 0x200
   115bc:	subne	r3, r4, #87	; 0x57
   115c0:	subeq	r3, r4, #55	; 0x37
   115c4:	ldrb	r4, [r5, #2]
   115c8:	orr	r3, r3, r2
   115cc:	mov	r5, lr
   115d0:	cmp	r4, #0
   115d4:	strb	r3, [ip], #1
   115d8:	bne	11554 <pcap_ether_aton+0x30>
   115dc:	mov	r0, r6
   115e0:	pop	{r4, r5, r6, pc}

000115e4 <pcap_ether_hostton>:
   115e4:	push	{r4, r5, r6, lr}
   115e8:	mov	r5, r0
   115ec:	ldr	r4, [pc, #180]	; 116a8 <pcap_ether_hostton+0xc4>
   115f0:	add	r4, pc, r4
   115f4:	ldr	r3, [r4]
   115f8:	cmp	r3, #0
   115fc:	beq	11678 <pcap_ether_hostton+0x94>
   11600:	ldr	r0, [r4, #4]
   11604:	cmp	r0, #0
   11608:	beq	11644 <pcap_ether_hostton+0x60>
   1160c:	bl	de0 <rewind@plt>
   11610:	ldr	r0, [r4, #4]
   11614:	ldr	r6, [pc, #144]	; 116ac <pcap_ether_hostton+0xc8>
   11618:	add	r6, pc, r6
   1161c:	b	11630 <pcap_ether_hostton+0x4c>
   11620:	bl	d50 <strcmp@plt>
   11624:	cmp	r0, #0
   11628:	beq	11650 <pcap_ether_hostton+0x6c>
   1162c:	ldr	r0, [r6, #4]
   11630:	bl	1c420 <pcap_next_etherent>
   11634:	mov	r1, r5
   11638:	subs	r4, r0, #0
   1163c:	add	r0, r4, #6
   11640:	bne	11620 <pcap_ether_hostton+0x3c>
   11644:	mov	r3, #0
   11648:	mov	r0, r3
   1164c:	pop	{r4, r5, r6, pc}
   11650:	mov	r0, #6
   11654:	bl	e1c <malloc@plt>
   11658:	subs	r3, r0, #0
   1165c:	beq	11648 <pcap_ether_hostton+0x64>
   11660:	ldr	r0, [r4]
   11664:	str	r0, [r3]
   11668:	ldrh	r2, [r4, #4]
   1166c:	mov	r0, r3
   11670:	strh	r2, [r3, #4]
   11674:	pop	{r4, r5, r6, pc}
   11678:	ldr	r1, [pc, #48]	; 116b0 <pcap_ether_hostton+0xcc>
   1167c:	ldr	r0, [pc, #48]	; 116b4 <pcap_ether_hostton+0xd0>
   11680:	add	r1, pc, r1
   11684:	add	r0, pc, r0
   11688:	bl	d74 <fopen@plt>
   1168c:	ldr	r3, [r4]
   11690:	add	r3, r3, #1
   11694:	str	r3, [r4]
   11698:	cmp	r0, #0
   1169c:	str	r0, [r4, #4]
   116a0:	bne	11614 <pcap_ether_hostton+0x30>
   116a4:	b	11644 <pcap_ether_hostton+0x60>
   116a8:	.word	0x0002d13c
   116ac:	.word	0x0002d114
   116b0:	.word	0x000109f4
   116b4:	.word	0x000109f4

000116b8 <__pcap_nametodnaddr>:
   116b8:	mov	r1, r0
   116bc:	ldr	r0, [pc, #8]	; 116cc <__pcap_nametodnaddr+0x14>
   116c0:	push	{r4, lr}
   116c4:	add	r0, pc, r0
   116c8:	bl	2370 <sf_bpf_error>
   116cc:	.word	0x000109c0

000116d0 <opt_peep>:
   116d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d4:	ldr	lr, [r0, #4]
   116d8:	ldr	sl, [pc, #1364]	; 11c34 <opt_peep+0x564>
   116dc:	cmp	lr, #0
   116e0:	add	sl, pc, sl
   116e4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116e8:	ldr	r3, [pc, #1352]	; 11c38 <opt_peep+0x568>
   116ec:	mov	r4, #0
   116f0:	add	r3, pc, r3
   116f4:	ldr	r5, [lr]
   116f8:	ldr	r6, [r3]
   116fc:	ldr	ip, [lr, #16]
   11700:	mov	fp, r4
   11704:	mov	r7, #1
   11708:	mov	r9, #135	; 0x87
   1170c:	mov	r3, r5
   11710:	mov	r1, lr
   11714:	b	11724 <opt_peep+0x54>
   11718:	ldr	r3, [ip]
   1171c:	mov	r1, ip
   11720:	ldr	ip, [ip, #16]
   11724:	cmn	r3, #1
   11728:	bne	117fc <opt_peep+0x12c>
   1172c:	cmp	ip, #0
   11730:	bne	11718 <opt_peep+0x48>
   11734:	cmp	r4, #0
   11738:	bne	11c14 <opt_peep+0x544>
   1173c:	ldr	r2, [r0, #8]
   11740:	cmp	r2, #21
   11744:	beq	11a1c <opt_peep+0x34c>
   11748:	ldr	r3, [pc, #1260]	; 11c3c <opt_peep+0x56c>
   1174c:	ldr	r1, [sl, r3]
   11750:	cmp	r2, #69	; 0x45
   11754:	beq	119c4 <opt_peep+0x2f4>
   11758:	ldr	r3, [r1]
   1175c:	ldr	r1, [r0, #204]	; 0xcc
   11760:	add	lr, r3, r1, lsl #3
   11764:	ldr	r1, [r3, r1, lsl #3]
   11768:	cmp	r1, #0
   1176c:	beq	11788 <opt_peep+0xb8>
   11770:	tst	r2, #8
   11774:	beq	11abc <opt_peep+0x3ec>
   11778:	ldr	r1, [lr, #4]
   1177c:	bic	r2, r2, #8
   11780:	str	r1, [r0, #20]
   11784:	str	r2, [r0, #8]
   11788:	ldr	r1, [r0, #200]	; 0xc8
   1178c:	ldr	ip, [r3, r1, lsl #3]
   11790:	add	r3, r3, r1, lsl #3
   11794:	cmp	ip, #0
   11798:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1179c:	tst	r2, #8
   117a0:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117a4:	and	r2, r2, #240	; 0xf0
   117a8:	cmp	r2, #32
   117ac:	ldr	r3, [r3, #4]
   117b0:	beq	11ad4 <opt_peep+0x404>
   117b4:	bgt	11a90 <opt_peep+0x3c0>
   117b8:	cmp	r2, #16
   117bc:	bne	11ae8 <opt_peep+0x418>
   117c0:	ldr	ip, [r0, #20]
   117c4:	sub	r3, ip, r3
   117c8:	clz	r3, r3
   117cc:	lsr	r3, r3, #5
   117d0:	ldr	r1, [r0, #84]	; 0x54
   117d4:	ldr	ip, [r0, #60]	; 0x3c
   117d8:	cmp	r1, ip
   117dc:	ldrne	r2, [pc, #1116]	; 11c40 <opt_peep+0x570>
   117e0:	movne	lr, #0
   117e4:	addne	r2, pc, r2
   117e8:	strne	lr, [r2]
   117ec:	cmp	r3, #0
   117f0:	strne	ip, [r0, #84]	; 0x54
   117f4:	streq	r1, [r0, #60]	; 0x3c
   117f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117fc:	cmp	ip, #0
   11800:	bne	11814 <opt_peep+0x144>
   11804:	b	11a08 <opt_peep+0x338>
   11808:	ldr	ip, [ip, #16]
   1180c:	cmp	ip, #0
   11810:	beq	1186c <opt_peep+0x19c>
   11814:	ldr	r2, [ip]
   11818:	cmn	r2, #1
   1181c:	beq	11808 <opt_peep+0x138>
   11820:	cmp	r3, #2
   11824:	mov	lr, ip
   11828:	beq	118d8 <opt_peep+0x208>
   1182c:	cmp	r3, #0
   11830:	bne	118cc <opt_peep+0x1fc>
   11834:	cmp	r2, #7
   11838:	beq	118a4 <opt_peep+0x1d4>
   1183c:	ldr	r3, [r0, #128]	; 0x80
   11840:	tst	r3, #131072	; 0x20000
   11844:	bne	118cc <opt_peep+0x1fc>
   11848:	cmp	r2, #177	; 0xb1
   1184c:	movne	r3, ip
   11850:	movne	r5, r2
   11854:	beq	118ec <opt_peep+0x21c>
   11858:	cmp	r5, #12
   1185c:	beq	1192c <opt_peep+0x25c>
   11860:	mov	r5, r2
   11864:	ldr	ip, [lr, #16]
   11868:	b	1170c <opt_peep+0x3c>
   1186c:	cmp	r4, #0
   11870:	ldrne	r3, [pc, #972]	; 11c44 <opt_peep+0x574>
   11874:	addne	r3, pc, r3
   11878:	strne	r6, [r3]
   1187c:	b	1173c <opt_peep+0x6c>
   11880:	ldr	r5, [r1, #12]
   11884:	ldr	r3, [ip, #12]
   11888:	cmp	r5, r3
   1188c:	bne	118e0 <opt_peep+0x210>
   11890:	mov	r3, #7
   11894:	str	r3, [ip]
   11898:	ldr	r3, [r1]
   1189c:	cmp	r3, #0
   118a0:	bne	11aac <opt_peep+0x3dc>
   118a4:	str	r7, [r1]
   118a8:	str	r9, [ip]
   118ac:	ldr	r6, [r1]
   118b0:	cmp	r6, #0
   118b4:	bne	11c24 <opt_peep+0x554>
   118b8:	ldr	r3, [r0, #128]	; 0x80
   118bc:	mov	r2, r9
   118c0:	tst	r3, #131072	; 0x20000
   118c4:	mov	r4, r7
   118c8:	beq	11860 <opt_peep+0x190>
   118cc:	ldr	ip, [ip, #16]
   118d0:	mov	r5, r2
   118d4:	b	1170c <opt_peep+0x3c>
   118d8:	cmp	r2, #97	; 0x61
   118dc:	beq	11880 <opt_peep+0x1b0>
   118e0:	mov	r5, r2
   118e4:	ldr	ip, [ip, #16]
   118e8:	b	1170c <opt_peep+0x3c>
   118ec:	ldr	ip, [ip, #16]
   118f0:	cmp	ip, #0
   118f4:	beq	11b9c <opt_peep+0x4cc>
   118f8:	ldr	r5, [ip]
   118fc:	mov	r3, ip
   11900:	cmn	r5, #1
   11904:	beq	11918 <opt_peep+0x248>
   11908:	b	11858 <opt_peep+0x188>
   1190c:	ldr	r5, [r3]
   11910:	cmn	r5, #1
   11914:	bne	11858 <opt_peep+0x188>
   11918:	ldr	r3, [r3, #16]
   1191c:	cmp	r3, #0
   11920:	bne	1190c <opt_peep+0x23c>
   11924:	mov	r5, r2
   11928:	b	1170c <opt_peep+0x3c>
   1192c:	ldr	ip, [r3, #16]
   11930:	cmp	ip, #0
   11934:	bne	11948 <opt_peep+0x278>
   11938:	b	11860 <opt_peep+0x190>
   1193c:	ldr	ip, [ip, #16]
   11940:	cmp	ip, #0
   11944:	beq	11860 <opt_peep+0x190>
   11948:	ldr	r5, [ip]
   1194c:	cmn	r5, #1
   11950:	beq	1193c <opt_peep+0x26c>
   11954:	cmp	r5, #7
   11958:	bne	11860 <opt_peep+0x190>
   1195c:	ldr	r5, [ip, #16]
   11960:	cmp	r5, #0
   11964:	bne	11978 <opt_peep+0x2a8>
   11968:	b	11860 <opt_peep+0x190>
   1196c:	ldr	r5, [r5, #16]
   11970:	cmp	r5, #0
   11974:	beq	11860 <opt_peep+0x190>
   11978:	ldr	r8, [r5]
   1197c:	cmn	r8, #1
   11980:	beq	1196c <opt_peep+0x29c>
   11984:	and	r8, r8, #231	; 0xe7
   11988:	cmp	r8, #64	; 0x40
   1198c:	bne	11860 <opt_peep+0x190>
   11990:	ldr	r2, [r5, #12]
   11994:	ldr	r6, [r1, #12]
   11998:	mov	r4, r7
   1199c:	add	r2, r2, r6
   119a0:	str	r2, [r5, #12]
   119a4:	mvn	r2, #0
   119a8:	str	r2, [r1]
   119ac:	mov	r6, fp
   119b0:	str	r2, [r3]
   119b4:	str	r2, [ip]
   119b8:	ldr	r5, [lr]
   119bc:	ldr	ip, [lr, #16]
   119c0:	b	1170c <opt_peep+0x3c>
   119c4:	ldr	ip, [r0, #20]
   119c8:	ldr	r3, [r1]
   119cc:	cmp	ip, #0
   119d0:	ldr	r1, [r0, #204]	; 0xcc
   119d4:	beq	11a5c <opt_peep+0x38c>
   119d8:	cmn	ip, #1
   119dc:	ldreq	lr, [r0, #60]	; 0x3c
   119e0:	streq	lr, [r0, #84]	; 0x54
   119e4:	ldr	r1, [r3, r1, lsl #3]
   119e8:	cmp	r1, #0
   119ec:	bne	11a70 <opt_peep+0x3a0>
   119f0:	ldr	r1, [r0, #200]	; 0xc8
   119f4:	ldr	ip, [r3, r1, lsl #3]
   119f8:	add	r3, r3, r1, lsl #3
   119fc:	cmp	ip, #0
   11a00:	bne	117a4 <opt_peep+0xd4>
   11a04:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a08:	cmp	r4, #0
   11a0c:	ldrne	r3, [pc, #564]	; 11c48 <opt_peep+0x578>
   11a10:	addne	r3, pc, r3
   11a14:	strne	r6, [r3]
   11a18:	b	1173c <opt_peep+0x6c>
   11a1c:	ldr	r3, [r0, #128]	; 0x80
   11a20:	ands	r4, r3, #65536	; 0x10000
   11a24:	bne	11a40 <opt_peep+0x370>
   11a28:	cmp	r5, #28
   11a2c:	beq	11b50 <opt_peep+0x480>
   11a30:	cmp	r5, #20
   11a34:	beq	11ba4 <opt_peep+0x4d4>
   11a38:	cmp	r5, #84	; 0x54
   11a3c:	beq	11af0 <opt_peep+0x420>
   11a40:	ldr	r3, [pc, #500]	; 11c3c <opt_peep+0x56c>
   11a44:	ldr	r1, [r0, #204]	; 0xcc
   11a48:	ldr	r3, [sl, r3]
   11a4c:	ldr	r3, [r3]
   11a50:	add	lr, r3, r1, lsl #3
   11a54:	ldr	r1, [r3, r1, lsl #3]
   11a58:	b	11768 <opt_peep+0x98>
   11a5c:	ldr	lr, [r0, #84]	; 0x54
   11a60:	str	lr, [r0, #60]	; 0x3c
   11a64:	ldr	r1, [r3, r1, lsl #3]
   11a68:	cmp	r1, #0
   11a6c:	beq	119f0 <opt_peep+0x320>
   11a70:	ldr	r2, [r0, #200]	; 0xc8
   11a74:	ldr	r1, [r3, r2, lsl #3]
   11a78:	add	r3, r3, r2, lsl #3
   11a7c:	cmp	r1, #0
   11a80:	beq	11aec <opt_peep+0x41c>
   11a84:	ldr	r3, [r3, #4]
   11a88:	and	r3, r3, ip
   11a8c:	b	117d0 <opt_peep+0x100>
   11a90:	cmp	r2, #48	; 0x30
   11a94:	bne	11b40 <opt_peep+0x470>
   11a98:	ldr	ip, [r0, #20]
   11a9c:	cmp	ip, r3
   11aa0:	movhi	r3, #0
   11aa4:	movls	r3, #1
   11aa8:	b	117d0 <opt_peep+0x100>
   11aac:	mov	r4, r7
   11ab0:	mov	r6, fp
   11ab4:	mov	r2, #7
   11ab8:	b	118e0 <opt_peep+0x210>
   11abc:	ldr	r1, [r0, #200]	; 0xc8
   11ac0:	ldr	ip, [r3, r1, lsl #3]
   11ac4:	add	r3, r3, r1, lsl #3
   11ac8:	cmp	ip, #0
   11acc:	bne	117a4 <opt_peep+0xd4>
   11ad0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad4:	ldr	ip, [r0, #20]
   11ad8:	cmp	ip, r3
   11adc:	movcs	r3, #0
   11ae0:	movcc	r3, #1
   11ae4:	b	117d0 <opt_peep+0x100>
   11ae8:	bl	f18 <abort@plt>
   11aec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11af0:	ldr	ip, [r0, #20]
   11af4:	cmp	ip, #0
   11af8:	bne	11a40 <opt_peep+0x370>
   11afc:	ldr	r3, [lr, #12]
   11b00:	ldr	r2, [pc, #324]	; 11c4c <opt_peep+0x57c>
   11b04:	str	r3, [r0, #20]
   11b08:	mvn	r1, #0
   11b0c:	mov	r4, #69	; 0x45
   11b10:	ldr	r3, [pc, #292]	; 11c3c <opt_peep+0x56c>
   11b14:	str	r4, [r0, #8]
   11b18:	add	r2, pc, r2
   11b1c:	str	r1, [lr]
   11b20:	ldr	r1, [r0, #84]	; 0x54
   11b24:	ldr	lr, [r0, #60]	; 0x3c
   11b28:	str	ip, [r2]
   11b2c:	str	lr, [r0, #84]	; 0x54
   11b30:	str	r1, [r0, #60]	; 0x3c
   11b34:	ldr	r2, [r0, #8]
   11b38:	ldr	r1, [sl, r3]
   11b3c:	b	11750 <opt_peep+0x80>
   11b40:	cmp	r2, #64	; 0x40
   11b44:	bne	11ae8 <opt_peep+0x418>
   11b48:	ldr	ip, [r0, #20]
   11b4c:	b	11a88 <opt_peep+0x3b8>
   11b50:	ldr	r3, [pc, #228]	; 11c3c <opt_peep+0x56c>
   11b54:	ldr	ip, [r0, #204]	; 0xcc
   11b58:	ldr	r1, [sl, r3]
   11b5c:	ldr	r3, [r1]
   11b60:	add	r5, r3, ip, lsl #3
   11b64:	ldr	ip, [r3, ip, lsl #3]
   11b68:	cmp	ip, #0
   11b6c:	beq	11bd8 <opt_peep+0x508>
   11b70:	ldr	r3, [pc, #216]	; 11c50 <opt_peep+0x580>
   11b74:	ldr	ip, [r5, #4]
   11b78:	ldr	r2, [r0, #20]
   11b7c:	add	r3, pc, r3
   11b80:	add	r2, r2, ip
   11b84:	mvn	ip, #0
   11b88:	str	r2, [r0, #20]
   11b8c:	str	r4, [r3]
   11b90:	str	ip, [lr]
   11b94:	ldr	r2, [r0, #8]
   11b98:	b	11750 <opt_peep+0x80>
   11b9c:	mov	r5, #177	; 0xb1
   11ba0:	b	1170c <opt_peep+0x3c>
   11ba4:	mvn	r3, #0
   11ba8:	ldr	r2, [pc, #164]	; 11c54 <opt_peep+0x584>
   11bac:	str	r3, [lr]
   11bb0:	ldr	r1, [lr, #12]
   11bb4:	ldr	ip, [r0, #20]
   11bb8:	ldr	r3, [pc, #124]	; 11c3c <opt_peep+0x56c>
   11bbc:	add	r2, pc, r2
   11bc0:	add	ip, ip, r1
   11bc4:	str	r4, [r2]
   11bc8:	str	ip, [r0, #20]
   11bcc:	ldr	r2, [r0, #8]
   11bd0:	ldr	r1, [sl, r3]
   11bd4:	b	11750 <opt_peep+0x80>
   11bd8:	ldr	ip, [r0, #20]
   11bdc:	cmp	ip, #0
   11be0:	bne	119f0 <opt_peep+0x320>
   11be4:	mvn	r3, #0
   11be8:	ldr	r4, [pc, #104]	; 11c58 <opt_peep+0x588>
   11bec:	str	r3, [lr]
   11bf0:	ldr	r3, [r1]
   11bf4:	ldr	r1, [r0, #204]	; 0xcc
   11bf8:	add	r4, pc, r4
   11bfc:	mov	r2, #29
   11c00:	str	r2, [r0, #8]
   11c04:	add	lr, r3, r1, lsl #3
   11c08:	str	ip, [r4]
   11c0c:	ldr	r1, [r3, r1, lsl #3]
   11c10:	b	11768 <opt_peep+0x98>
   11c14:	ldr	r3, [pc, #64]	; 11c5c <opt_peep+0x58c>
   11c18:	add	r3, pc, r3
   11c1c:	str	r6, [r3]
   11c20:	b	1173c <opt_peep+0x6c>
   11c24:	mov	r5, r9
   11c28:	mov	r6, fp
   11c2c:	mov	r4, r7
   11c30:	b	118e4 <opt_peep+0x214>
   11c34:	.word	0x0002c918
   11c38:	.word	0x0002d044
   11c3c:	.word	0x00000108
   11c40:	.word	0x0002cf50
   11c44:	.word	0x0002cec0
   11c48:	.word	0x0002cd24
   11c4c:	.word	0x0002cc1c
   11c50:	.word	0x0002cbb8
   11c54:	.word	0x0002cb78
   11c58:	.word	0x0002cb3c
   11c5c:	.word	0x0002cb1c

00011c60 <convert_code_r>:
   11c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c64:	subs	r8, r0, #0
   11c68:	sub	sp, sp, #12
   11c6c:	beq	11cac <convert_code_r+0x4c>
   11c70:	ldr	r3, [pc, #888]	; 11ff0 <convert_code_r+0x390>
   11c74:	ldr	r2, [r8, #24]
   11c78:	add	r3, pc, r3
   11c7c:	ldr	r3, [r3, #4]
   11c80:	cmp	r2, r3
   11c84:	beq	11cac <convert_code_r+0x4c>
   11c88:	str	r3, [r8, #24]
   11c8c:	ldr	r0, [r8, #84]	; 0x54
   11c90:	bl	11c60 <convert_code_r>
   11c94:	cmp	r0, #0
   11c98:	bne	11cb8 <convert_code_r+0x58>
   11c9c:	mov	r0, #0
   11ca0:	add	sp, sp, #12
   11ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ca8:	strb	r3, [r7, #3]
   11cac:	mov	r0, #1
   11cb0:	add	sp, sp, #12
   11cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cb8:	ldr	r0, [r8, #60]	; 0x3c
   11cbc:	bl	11c60 <convert_code_r>
   11cc0:	cmp	r0, #0
   11cc4:	beq	11c9c <convert_code_r+0x3c>
   11cc8:	ldr	r4, [r8, #4]
   11ccc:	cmp	r4, #0
   11cd0:	beq	11f9c <convert_code_r+0x33c>
   11cd4:	mov	r3, r4
   11cd8:	mov	r6, #0
   11cdc:	ldr	r2, [r3]
   11ce0:	ldr	r3, [r3, #16]
   11ce4:	adds	r2, r2, #1
   11ce8:	movne	r2, #1
   11cec:	cmp	r3, #0
   11cf0:	add	r6, r6, r2
   11cf4:	bne	11cdc <convert_code_r+0x7c>
   11cf8:	add	r2, r6, #1
   11cfc:	ldr	r1, [pc, #752]	; 11ff4 <convert_code_r+0x394>
   11d00:	ldr	r3, [r8, #28]
   11d04:	add	r1, pc, r1
   11d08:	ldr	r7, [r8, #32]
   11d0c:	add	r2, r2, r3
   11d10:	add	r2, r2, r7
   11d14:	ldr	r7, [r1, #8]
   11d18:	ldr	r3, [r1, #12]
   11d1c:	sub	r7, r7, r2, lsl #3
   11d20:	sub	r3, r7, r3
   11d24:	cmp	r6, #0
   11d28:	asr	r3, r3, #3
   11d2c:	str	r7, [r1, #8]
   11d30:	str	r3, [r8, #40]	; 0x28
   11d34:	bne	11f40 <convert_code_r+0x2e0>
   11d38:	cmp	r4, #0
   11d3c:	strne	r6, [sp]
   11d40:	beq	11e6c <convert_code_r+0x20c>
   11d44:	str	r8, [sp, #4]
   11d48:	ldr	r8, [sp]
   11d4c:	mov	r2, #0
   11d50:	sub	fp, r6, #2
   11d54:	mov	sl, #1
   11d58:	ldr	r3, [r4]
   11d5c:	cmn	r3, #1
   11d60:	beq	11e4c <convert_code_r+0x1ec>
   11d64:	strh	r3, [r7]
   11d68:	ldr	r3, [r4, #12]
   11d6c:	str	r3, [r7, #4]
   11d70:	ldr	r3, [r4]
   11d74:	and	r1, r3, #7
   11d78:	sub	r5, r3, #5
   11d7c:	clz	r5, r5
   11d80:	lsr	r5, r5, #5
   11d84:	cmp	r1, #5
   11d88:	orrne	r5, r5, #1
   11d8c:	cmp	r5, #0
   11d90:	bne	11e44 <convert_code_r+0x1e4>
   11d94:	cmp	fp, r2
   11d98:	beq	11e44 <convert_code_r+0x1e4>
   11d9c:	ldr	ip, [r4, #4]
   11da0:	cmp	ip, #0
   11da4:	beq	11fd0 <convert_code_r+0x370>
   11da8:	ldr	r3, [r4, #8]
   11dac:	cmp	r3, #0
   11db0:	beq	11fd0 <convert_code_r+0x370>
   11db4:	cmp	r6, #0
   11db8:	beq	11f88 <convert_code_r+0x328>
   11dbc:	mvn	r3, r2
   11dc0:	mov	r1, r5
   11dc4:	uxtb	r3, r3
   11dc8:	sub	lr, r8, #4
   11dcc:	mov	r9, #0
   11dd0:	b	11df8 <convert_code_r+0x198>
   11dd4:	ldr	ip, [r4, #8]
   11dd8:	cmp	r0, ip
   11ddc:	beq	11e20 <convert_code_r+0x1c0>
   11de0:	add	r1, r1, #1
   11de4:	add	r3, r3, #1
   11de8:	cmp	r1, r6
   11dec:	uxtb	r3, r3
   11df0:	beq	11e34 <convert_code_r+0x1d4>
   11df4:	ldr	ip, [r4, #4]
   11df8:	ldr	r0, [lr, #4]!
   11dfc:	cmp	r0, ip
   11e00:	bne	11dd4 <convert_code_r+0x174>
   11e04:	cmp	r5, #0
   11e08:	bne	11fa8 <convert_code_r+0x348>
   11e0c:	strb	r3, [r7, #2]
   11e10:	ldr	ip, [r4, #8]
   11e14:	mov	r5, sl
   11e18:	cmp	r0, ip
   11e1c:	bne	11de0 <convert_code_r+0x180>
   11e20:	cmp	r9, #0
   11e24:	bne	11fbc <convert_code_r+0x35c>
   11e28:	mov	r9, sl
   11e2c:	strb	r3, [r7, #3]
   11e30:	b	11de0 <convert_code_r+0x180>
   11e34:	eor	r5, r5, #1
   11e38:	eor	r9, r9, #1
   11e3c:	orrs	r3, r5, r9
   11e40:	bne	11f88 <convert_code_r+0x328>
   11e44:	add	r7, r7, #8
   11e48:	add	r2, r2, #1
   11e4c:	ldr	r4, [r4, #16]
   11e50:	cmp	r4, #0
   11e54:	bne	11d58 <convert_code_r+0xf8>
   11e58:	ldm	sp, {r3, r8}
   11e5c:	cmp	r3, #0
   11e60:	beq	11e6c <convert_code_r+0x20c>
   11e64:	ldr	r0, [sp]
   11e68:	bl	da4 <free@plt>
   11e6c:	ldr	r3, [r8, #8]
   11e70:	strh	r3, [r7]
   11e74:	ldr	r3, [r8, #20]
   11e78:	str	r3, [r7, #4]
   11e7c:	ldr	r3, [r8, #60]	; 0x3c
   11e80:	cmp	r3, #0
   11e84:	beq	11cac <convert_code_r+0x4c>
   11e88:	ldr	r2, [r8, #40]	; 0x28
   11e8c:	ldr	r3, [r3, #40]	; 0x28
   11e90:	add	r2, r6, r2
   11e94:	sub	r3, r3, r2
   11e98:	sub	r3, r3, #1
   11e9c:	cmp	r3, #255	; 0xff
   11ea0:	bls	11ee0 <convert_code_r+0x280>
   11ea4:	ldr	r0, [r8, #28]
   11ea8:	cmp	r0, #0
   11eac:	moveq	r3, #1
   11eb0:	streq	r3, [r8, #28]
   11eb4:	beq	11cb0 <convert_code_r+0x50>
   11eb8:	mov	r1, #0
   11ebc:	sub	r3, r3, #1
   11ec0:	mov	r2, #5
   11ec4:	strb	r1, [r7, #2]
   11ec8:	str	r3, [r7, #12]
   11ecc:	strh	r2, [r7, #8]
   11ed0:	mov	r1, #16
   11ed4:	mov	lr, #2
   11ed8:	mov	ip, #1
   11edc:	b	11ef0 <convert_code_r+0x290>
   11ee0:	mov	r1, #8
   11ee4:	mov	lr, #1
   11ee8:	mov	ip, #0
   11eec:	strb	r3, [r7, #2]
   11ef0:	ldr	r3, [r8, #84]	; 0x54
   11ef4:	ldr	r2, [r8, #40]	; 0x28
   11ef8:	ldr	r3, [r3, #40]	; 0x28
   11efc:	add	r6, r6, r2
   11f00:	sub	r3, r3, r6
   11f04:	sub	r3, r3, #1
   11f08:	cmp	r3, #255	; 0xff
   11f0c:	bls	11ca8 <convert_code_r+0x48>
   11f10:	ldr	r0, [r8, #32]
   11f14:	cmp	r0, #0
   11f18:	addne	r2, r7, r1
   11f1c:	subne	r3, r3, lr
   11f20:	moveq	r3, #1
   11f24:	movne	lr, #5
   11f28:	strbne	ip, [r7, #3]
   11f2c:	streq	r3, [r8, #32]
   11f30:	strhne	lr, [r7, r1]
   11f34:	movne	r0, #1
   11f38:	strne	r3, [r2, #4]
   11f3c:	b	11cb0 <convert_code_r+0x50>
   11f40:	mov	r1, #4
   11f44:	mov	r0, r6
   11f48:	bl	d38 <calloc@plt>
   11f4c:	subs	r3, r0, #0
   11f50:	str	r3, [sp]
   11f54:	beq	11fe4 <convert_code_r+0x384>
   11f58:	cmp	r4, #0
   11f5c:	beq	11e64 <convert_code_r+0x204>
   11f60:	sub	r1, r3, #4
   11f64:	mov	r2, #0
   11f68:	mov	r3, r4
   11f6c:	str	r3, [r1, #4]!
   11f70:	ldr	r3, [r3, #16]
   11f74:	add	r2, r2, #1
   11f78:	cmp	r3, #0
   11f7c:	cmpne	r6, r2
   11f80:	bhi	11f6c <convert_code_r+0x30c>
   11f84:	b	11d44 <convert_code_r+0xe4>
   11f88:	ldr	r1, [pc, #104]	; 11ff8 <convert_code_r+0x398>
   11f8c:	ldr	r0, [pc, #104]	; 11ffc <convert_code_r+0x39c>
   11f90:	add	r1, pc, r1
   11f94:	add	r0, pc, r0
   11f98:	bl	2370 <sf_bpf_error>
   11f9c:	mov	r2, #1
   11fa0:	mov	r6, r4
   11fa4:	b	11cfc <convert_code_r+0x9c>
   11fa8:	ldr	r1, [pc, #80]	; 12000 <convert_code_r+0x3a0>
   11fac:	ldr	r0, [pc, #80]	; 12004 <convert_code_r+0x3a4>
   11fb0:	add	r1, pc, r1
   11fb4:	add	r0, pc, r0
   11fb8:	bl	2370 <sf_bpf_error>
   11fbc:	ldr	r1, [pc, #68]	; 12008 <convert_code_r+0x3a8>
   11fc0:	ldr	r0, [pc, #68]	; 1200c <convert_code_r+0x3ac>
   11fc4:	add	r1, pc, r1
   11fc8:	add	r0, pc, r0
   11fcc:	bl	2370 <sf_bpf_error>
   11fd0:	ldr	r1, [pc, #56]	; 12010 <convert_code_r+0x3b0>
   11fd4:	ldr	r0, [pc, #56]	; 12014 <convert_code_r+0x3b4>
   11fd8:	add	r1, pc, r1
   11fdc:	add	r0, pc, r0
   11fe0:	bl	2370 <sf_bpf_error>
   11fe4:	ldr	r0, [pc, #44]	; 12018 <convert_code_r+0x3b8>
   11fe8:	add	r0, pc, r0
   11fec:	bl	2370 <sf_bpf_error>
   11ff0:	.word	0x0002cabc
   11ff4:	.word	0x0002ca30
   11ff8:	.word	0x000101e8
   11ffc:	.word	0x000101fc
   12000:	.word	0x00010220
   12004:	.word	0x000101dc
   12008:	.word	0x0001020c
   1200c:	.word	0x000101c8
   12010:	.word	0x000101e4
   12014:	.word	0x000101b4
   12018:	.word	0x00010180

0001201c <find_dom.isra.0>:
   1201c:	ldr	r3, [pc, #312]	; 1215c <find_dom.isra.0+0x140>
   12020:	push	{r4, r5, r6, r7, r8, lr}
   12024:	add	r3, pc, r3
   12028:	ldr	r6, [pc, #304]	; 12160 <find_dom.isra.0+0x144>
   1202c:	ldr	r7, [r3, #20]
   12030:	ldr	r2, [r3, #24]
   12034:	mov	r5, r0
   12038:	add	r6, pc, r6
   1203c:	mul	r2, r2, r7
   12040:	mov	r4, r1
   12044:	cmp	r2, #0
   12048:	ldr	r0, [r3, #16]
   1204c:	ble	1205c <find_dom.isra.0+0x40>
   12050:	lsl	r2, r2, #2
   12054:	mov	r1, #255	; 0xff
   12058:	bl	e88 <memset@plt>
   1205c:	subs	ip, r7, #1
   12060:	movpl	r3, ip
   12064:	lslpl	r2, ip, #2
   12068:	movpl	r0, #0
   1206c:	bmi	12088 <find_dom.isra.0+0x6c>
   12070:	ldr	r1, [r4]
   12074:	sub	r3, r3, #1
   12078:	cmn	r3, #1
   1207c:	str	r0, [r1, r2]
   12080:	sub	r2, r2, #4
   12084:	bne	12070 <find_dom.isra.0+0x54>
   12088:	ldr	r4, [r5]
   1208c:	cmp	r4, #0
   12090:	blt	12158 <find_dom.isra.0+0x13c>
   12094:	ldr	r3, [pc, #200]	; 12164 <find_dom.isra.0+0x148>
   12098:	lsl	r5, r4, #2
   1209c:	mov	lr, #1
   120a0:	ldr	r6, [r6, r3]
   120a4:	ldr	r3, [r6]
   120a8:	ldr	r0, [r3, r5]
   120ac:	cmp	r0, #0
   120b0:	beq	12144 <find_dom.isra.0+0x128>
   120b4:	ldr	r3, [r0]
   120b8:	ldr	r1, [r0, #104]	; 0x68
   120bc:	and	r7, r3, #31
   120c0:	lsr	r3, r3, #5
   120c4:	ldr	r2, [r1, r3, lsl #2]
   120c8:	orr	r2, r2, lr, lsl r7
   120cc:	str	r2, [r1, r3, lsl #2]
   120d0:	ldr	r3, [r0, #60]	; 0x3c
   120d4:	cmp	r3, #0
   120d8:	beq	12138 <find_dom.isra.0+0x11c>
   120dc:	cmp	ip, #0
   120e0:	ldr	r2, [r3, #104]	; 0x68
   120e4:	ldr	r7, [r0, #104]	; 0x68
   120e8:	blt	12138 <find_dom.isra.0+0x11c>
   120ec:	mov	r1, ip
   120f0:	ldr	r3, [r2], #4
   120f4:	ldr	r8, [r7], #4
   120f8:	sub	r1, r1, #1
   120fc:	and	r3, r3, r8
   12100:	cmn	r1, #1
   12104:	str	r3, [r2, #-4]
   12108:	bne	120f0 <find_dom.isra.0+0xd4>
   1210c:	ldr	r3, [r0, #84]	; 0x54
   12110:	ldr	r7, [r0, #104]	; 0x68
   12114:	mov	r1, ip
   12118:	ldr	r2, [r3, #104]	; 0x68
   1211c:	ldr	r3, [r2], #4
   12120:	ldr	r8, [r7], #4
   12124:	sub	r1, r1, #1
   12128:	and	r3, r3, r8
   1212c:	cmn	r1, #1
   12130:	str	r3, [r2, #-4]
   12134:	bne	1211c <find_dom.isra.0+0x100>
   12138:	ldr	r0, [r0, #100]	; 0x64
   1213c:	cmp	r0, #0
   12140:	bne	120b4 <find_dom.isra.0+0x98>
   12144:	sub	r4, r4, #1
   12148:	cmn	r4, #1
   1214c:	sub	r5, r5, #4
   12150:	bne	120a4 <find_dom.isra.0+0x88>
   12154:	pop	{r4, r5, r6, r7, r8, pc}
   12158:	pop	{r4, r5, r6, r7, r8, pc}
   1215c:	.word	0x0002c710
   12160:	.word	0x0002bfc0
   12164:	.word	0x000000c8

00012168 <find_closure.isra.7>:
   12168:	ldr	r3, [pc, #256]	; 12270 <find_closure.isra.7+0x108>
   1216c:	push	{r4, r5, r6, r7, r8, lr}
   12170:	add	r3, pc, r3
   12174:	mov	r4, r0
   12178:	ldr	r5, [r3, #20]
   1217c:	ldr	r2, [r3, #24]
   12180:	mov	r1, #0
   12184:	ldr	r0, [r3, #28]
   12188:	mul	r2, r2, r5
   1218c:	ldr	r6, [pc, #224]	; 12274 <find_closure.isra.7+0x10c>
   12190:	lsl	r2, r2, #2
   12194:	bl	e88 <memset@plt>
   12198:	ldr	r4, [r4]
   1219c:	add	r6, pc, r6
   121a0:	cmp	r4, #0
   121a4:	poplt	{r4, r5, r6, r7, r8, pc}
   121a8:	ldr	r3, [pc, #200]	; 12278 <find_closure.isra.7+0x110>
   121ac:	sub	ip, r5, #1
   121b0:	mov	lr, #1
   121b4:	ldr	r6, [r6, r3]
   121b8:	lsl	r5, r4, #2
   121bc:	ldr	r3, [r6]
   121c0:	ldr	r0, [r3, r5]
   121c4:	cmp	r0, #0
   121c8:	beq	1225c <find_closure.isra.7+0xf4>
   121cc:	ldr	r3, [r0]
   121d0:	ldr	r1, [r0, #108]	; 0x6c
   121d4:	and	r7, r3, #31
   121d8:	lsr	r3, r3, #5
   121dc:	ldr	r2, [r1, r3, lsl #2]
   121e0:	orr	r2, r2, lr, lsl r7
   121e4:	str	r2, [r1, r3, lsl #2]
   121e8:	ldr	r3, [r0, #60]	; 0x3c
   121ec:	cmp	r3, #0
   121f0:	beq	12250 <find_closure.isra.7+0xe8>
   121f4:	cmp	ip, #0
   121f8:	ldr	r2, [r3, #108]	; 0x6c
   121fc:	ldr	r7, [r0, #108]	; 0x6c
   12200:	blt	12250 <find_closure.isra.7+0xe8>
   12204:	mov	r1, ip
   12208:	ldr	r3, [r2], #4
   1220c:	ldr	r8, [r7], #4
   12210:	sub	r1, r1, #1
   12214:	orr	r3, r3, r8
   12218:	cmn	r1, #1
   1221c:	str	r3, [r2, #-4]
   12220:	bne	12208 <find_closure.isra.7+0xa0>
   12224:	ldr	r3, [r0, #84]	; 0x54
   12228:	ldr	r7, [r0, #108]	; 0x6c
   1222c:	mov	r1, ip
   12230:	ldr	r2, [r3, #108]	; 0x6c
   12234:	ldr	r3, [r2], #4
   12238:	ldr	r8, [r7], #4
   1223c:	sub	r1, r1, #1
   12240:	orr	r3, r3, r8
   12244:	cmn	r1, #1
   12248:	str	r3, [r2, #-4]
   1224c:	bne	12234 <find_closure.isra.7+0xcc>
   12250:	ldr	r0, [r0, #100]	; 0x64
   12254:	cmp	r0, #0
   12258:	bne	121cc <find_closure.isra.7+0x64>
   1225c:	sub	r4, r4, #1
   12260:	cmn	r4, #1
   12264:	sub	r5, r5, #4
   12268:	bne	121bc <find_closure.isra.7+0x54>
   1226c:	pop	{r4, r5, r6, r7, r8, pc}
   12270:	.word	0x0002c5c4
   12274:	.word	0x0002be5c
   12278:	.word	0x000000c8

0001227c <fold_op.isra.10>:
   1227c:	ldr	ip, [pc, #252]	; 12380 <fold_op.isra.10+0x104>
   12280:	push	{r4, r5, r6, lr}
   12284:	add	ip, pc, ip
   12288:	ldr	lr, [pc, #244]	; 12384 <fold_op.isra.10+0x108>
   1228c:	mov	r4, r0
   12290:	mov	r5, r1
   12294:	ldr	r0, [ip, lr]
   12298:	mov	r1, ip
   1229c:	ldr	ip, [r4]
   122a0:	ldr	r1, [r0]
   122a4:	and	ip, ip, #240	; 0xf0
   122a8:	add	r2, r1, r2, lsl #3
   122ac:	add	r3, r1, r3, lsl #3
   122b0:	cmp	ip, #64	; 0x40
   122b4:	ldr	r0, [r2, #4]
   122b8:	ldr	r1, [r3, #4]
   122bc:	beq	1236c <fold_op.isra.10+0xf0>
   122c0:	ble	12300 <fold_op.isra.10+0x84>
   122c4:	cmp	ip, #96	; 0x60
   122c8:	beq	12364 <fold_op.isra.10+0xe8>
   122cc:	ble	1234c <fold_op.isra.10+0xd0>
   122d0:	cmp	ip, #112	; 0x70
   122d4:	beq	12334 <fold_op.isra.10+0xb8>
   122d8:	cmp	ip, #128	; 0x80
   122dc:	rsbeq	r0, r0, #0
   122e0:	bne	12348 <fold_op.isra.10+0xcc>
   122e4:	ldr	r3, [pc, #156]	; 12388 <fold_op.isra.10+0x10c>
   122e8:	mov	r2, #0
   122ec:	add	r3, pc, r3
   122f0:	str	r0, [r5]
   122f4:	str	r2, [r3]
   122f8:	str	r2, [r4]
   122fc:	pop	{r4, r5, r6, pc}
   12300:	cmp	ip, #16
   12304:	beq	1235c <fold_op.isra.10+0xe0>
   12308:	ble	1233c <fold_op.isra.10+0xc0>
   1230c:	cmp	ip, #32
   12310:	beq	1232c <fold_op.isra.10+0xb0>
   12314:	cmp	ip, #48	; 0x30
   12318:	bne	12348 <fold_op.isra.10+0xcc>
   1231c:	cmp	r1, #0
   12320:	beq	12374 <fold_op.isra.10+0xf8>
   12324:	bl	204e4 <__udivsi3>
   12328:	b	122e4 <fold_op.isra.10+0x68>
   1232c:	mul	r0, r1, r0
   12330:	b	122e4 <fold_op.isra.10+0x68>
   12334:	lsr	r0, r0, r1
   12338:	b	122e4 <fold_op.isra.10+0x68>
   1233c:	cmp	ip, #0
   12340:	addeq	r0, r0, r1
   12344:	beq	122e4 <fold_op.isra.10+0x68>
   12348:	bl	f18 <abort@plt>
   1234c:	cmp	ip, #80	; 0x50
   12350:	andeq	r0, r0, r1
   12354:	beq	122e4 <fold_op.isra.10+0x68>
   12358:	b	12348 <fold_op.isra.10+0xcc>
   1235c:	sub	r0, r0, r1
   12360:	b	122e4 <fold_op.isra.10+0x68>
   12364:	lsl	r0, r0, r1
   12368:	b	122e4 <fold_op.isra.10+0x68>
   1236c:	orr	r0, r0, r1
   12370:	b	122e4 <fold_op.isra.10+0x68>
   12374:	ldr	r0, [pc, #16]	; 1238c <fold_op.isra.10+0x110>
   12378:	add	r0, pc, r0
   1237c:	bl	2370 <sf_bpf_error>
   12380:	.word	0x0002bd74
   12384:	.word	0x00000108
   12388:	.word	0x0002c448
   1238c:	.word	0x0000fe6c

00012390 <opt_j>:
   12390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12394:	sub	sp, sp, #28
   12398:	ldr	r2, [r0, #12]
   1239c:	ldr	lr, [pc, #612]	; 12608 <opt_j+0x278>
   123a0:	ldr	r3, [r2, #60]	; 0x3c
   123a4:	add	lr, pc, lr
   123a8:	cmp	r3, #0
   123ac:	beq	12524 <opt_j+0x194>
   123b0:	ldr	r2, [r2, #84]	; 0x54
   123b4:	cmp	r3, r2
   123b8:	beq	125a4 <opt_j+0x214>
   123bc:	ldr	r2, [pc, #584]	; 1260c <opt_j+0x27c>
   123c0:	mov	r1, #0
   123c4:	str	r1, [sp, #8]
   123c8:	ldr	r3, [pc, #576]	; 12610 <opt_j+0x280>
   123cc:	ldr	r2, [lr, r2]
   123d0:	add	r3, pc, r3
   123d4:	mov	r7, r0
   123d8:	ldr	r8, [r2]
   123dc:	ldr	r1, [r3, #32]
   123e0:	mov	r4, #1
   123e4:	ldr	r3, [r3]
   123e8:	str	r1, [sp, #20]
   123ec:	str	r3, [sp, #4]
   123f0:	ldr	r3, [sp, #20]
   123f4:	cmp	r3, #0
   123f8:	ble	12580 <opt_j+0x1f0>
   123fc:	ldr	r3, [r7, #8]
   12400:	mov	r2, #0
   12404:	sub	r3, r3, #4
   12408:	str	r2, [sp, #16]
   1240c:	str	r3, [sp, #12]
   12410:	ldr	r3, [sp, #12]
   12414:	ldr	r9, [r3, #4]!
   12418:	cmp	r9, #0
   1241c:	str	r3, [sp, #12]
   12420:	beq	12534 <opt_j+0x1a4>
   12424:	ldr	sl, [r7, #12]
   12428:	ldr	r3, [sp, #16]
   1242c:	ldr	r5, [sl, #8]
   12430:	lsl	r6, r3, #5
   12434:	mov	r0, r9
   12438:	bl	ef4 <ffs@plt>
   1243c:	sub	r0, r0, #1
   12440:	add	r3, r0, r6
   12444:	bic	r9, r9, r4, lsl r0
   12448:	ldr	r2, [r8, r3, lsl #2]
   1244c:	ldr	r3, [r2, #4]
   12450:	cmp	r3, #0
   12454:	movlt	r1, #0
   12458:	rsblt	r3, r3, #0
   1245c:	movlt	ip, r1
   12460:	movge	r1, r4
   12464:	movge	ip, #1
   12468:	cmp	r3, r5
   1246c:	bne	1252c <opt_j+0x19c>
   12470:	ldr	r3, [r2, #16]
   12474:	ldr	r0, [sl, #200]	; 0xc8
   12478:	ldr	r2, [r3, #200]	; 0xc8
   1247c:	cmp	r0, r2
   12480:	bne	1252c <opt_j+0x19c>
   12484:	ldr	r3, [r3, #132]	; 0x84
   12488:	ldr	r2, [sl, #132]	; 0x84
   1248c:	cmp	r2, r3
   12490:	beq	12570 <opt_j+0x1e0>
   12494:	cmp	r5, #21
   12498:	movne	r1, #0
   1249c:	andeq	r1, r1, #1
   124a0:	cmp	r1, #0
   124a4:	beq	1252c <opt_j+0x19c>
   124a8:	ldr	fp, [sl, #84]	; 0x54
   124ac:	cmp	fp, #0
   124b0:	beq	1252c <opt_j+0x19c>
   124b4:	ldr	r0, [fp, #128]	; 0x80
   124b8:	ldr	r2, [r7, #16]
   124bc:	cmp	r0, #0
   124c0:	beq	124fc <opt_j+0x16c>
   124c4:	add	r2, r2, #136	; 0x88
   124c8:	add	r1, fp, #136	; 0x88
   124cc:	mov	r3, #0
   124d0:	ands	ip, r0, r4, lsl r3
   124d4:	add	r3, r3, #1
   124d8:	beq	124ec <opt_j+0x15c>
   124dc:	ldr	lr, [r2]
   124e0:	ldr	ip, [r1]
   124e4:	cmp	lr, ip
   124e8:	bne	1252c <opt_j+0x19c>
   124ec:	cmp	r3, #18
   124f0:	add	r2, r2, #4
   124f4:	add	r1, r1, #4
   124f8:	bne	124d0 <opt_j+0x140>
   124fc:	str	fp, [r7, #12]
   12500:	ldr	r3, [fp, #60]	; 0x3c
   12504:	mov	r2, #0
   12508:	cmp	r3, r2
   1250c:	str	r2, [sp, #4]
   12510:	str	r4, [sp, #8]
   12514:	bne	123f0 <opt_j+0x60>
   12518:	ldr	r2, [pc, #244]	; 12614 <opt_j+0x284>
   1251c:	add	r2, pc, r2
   12520:	str	r3, [r2]
   12524:	add	sp, sp, #28
   12528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1252c:	cmp	r9, #0
   12530:	bne	12434 <opt_j+0xa4>
   12534:	ldr	r3, [sp, #16]
   12538:	ldr	r2, [sp, #20]
   1253c:	add	r3, r3, #1
   12540:	cmp	r3, r2
   12544:	str	r3, [sp, #16]
   12548:	bne	12410 <opt_j+0x80>
   1254c:	ldr	r3, [sp, #8]
   12550:	cmp	r3, #0
   12554:	beq	12524 <opt_j+0x194>
   12558:	ldr	r3, [pc, #184]	; 12618 <opt_j+0x288>
   1255c:	ldr	r2, [sp, #4]
   12560:	add	r3, pc, r3
   12564:	str	r2, [r3]
   12568:	add	sp, sp, #28
   1256c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12570:	cmp	ip, #0
   12574:	beq	124a8 <opt_j+0x118>
   12578:	ldr	fp, [sl, #60]	; 0x3c
   1257c:	b	124ac <opt_j+0x11c>
   12580:	ldr	r3, [sp, #8]
   12584:	cmp	r3, #0
   12588:	beq	12524 <opt_j+0x194>
   1258c:	ldr	r3, [pc, #136]	; 1261c <opt_j+0x28c>
   12590:	ldr	r2, [sp, #4]
   12594:	add	r3, pc, r3
   12598:	str	r2, [r3]
   1259c:	add	sp, sp, #28
   125a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125a4:	ldr	r4, [r3, #128]	; 0x80
   125a8:	ldr	r2, [r0, #16]
   125ac:	cmp	r4, #0
   125b0:	beq	125f0 <opt_j+0x260>
   125b4:	add	r2, r2, #136	; 0x88
   125b8:	add	ip, r3, #136	; 0x88
   125bc:	mov	r1, #0
   125c0:	mov	r5, #1
   125c4:	ands	r6, r4, r5, lsl r1
   125c8:	add	r1, r1, #1
   125cc:	beq	125e0 <opt_j+0x250>
   125d0:	ldr	r7, [r2]
   125d4:	ldr	r6, [ip]
   125d8:	cmp	r7, r6
   125dc:	bne	123bc <opt_j+0x2c>
   125e0:	cmp	r1, #18
   125e4:	add	r2, r2, #4
   125e8:	add	ip, ip, #4
   125ec:	bne	125c4 <opt_j+0x234>
   125f0:	ldr	r2, [pc, #40]	; 12620 <opt_j+0x290>
   125f4:	mov	r1, #0
   125f8:	add	r2, pc, r2
   125fc:	str	r3, [r0, #12]
   12600:	str	r1, [r2]
   12604:	b	123bc <opt_j+0x2c>
   12608:	.word	0x0002bc54
   1260c:	.word	0x000000e8
   12610:	.word	0x0002c364
   12614:	.word	0x0002c218
   12618:	.word	0x0002c1d4
   1261c:	.word	0x0002c1a0
   12620:	.word	0x0002c13c

00012624 <find_edom>:
   12624:	ldr	r3, [pc, #436]	; 127e0 <find_edom+0x1bc>
   12628:	push	{r4, r5, r6, r7, r8, lr}
   1262c:	add	r3, pc, r3
   12630:	ldr	r4, [pc, #428]	; 127e4 <find_edom+0x1c0>
   12634:	ldr	r5, [r3, #32]
   12638:	ldr	r2, [r3, #40]	; 0x28
   1263c:	mov	r6, r0
   12640:	add	r4, pc, r4
   12644:	mul	r2, r2, r5
   12648:	ldr	r0, [r3, #36]	; 0x24
   1264c:	cmp	r2, #0
   12650:	ble	12660 <find_edom+0x3c>
   12654:	lsl	r2, r2, #2
   12658:	mov	r1, #255	; 0xff
   1265c:	bl	e88 <memset@plt>
   12660:	lsl	r7, r5, #2
   12664:	mov	r2, r7
   12668:	mov	r1, #0
   1266c:	ldr	r0, [r6, #56]	; 0x38
   12670:	bl	e88 <memset@plt>
   12674:	mov	r2, r7
   12678:	mov	r1, #0
   1267c:	ldr	r0, [r6, #80]	; 0x50
   12680:	bl	e88 <memset@plt>
   12684:	ldr	ip, [r6, #36]	; 0x24
   12688:	cmp	ip, #0
   1268c:	blt	127dc <find_edom+0x1b8>
   12690:	ldr	r3, [pc, #336]	; 127e8 <find_edom+0x1c4>
   12694:	sub	r1, r5, #1
   12698:	lsl	lr, ip, #2
   1269c:	ldr	r4, [r4, r3]
   126a0:	mov	r0, #1
   126a4:	ldr	r3, [r4]
   126a8:	ldr	r2, [r3, lr]
   126ac:	cmp	r2, #0
   126b0:	beq	127c8 <find_edom+0x1a4>
   126b4:	ldr	r3, [r2, #48]	; 0x30
   126b8:	ldr	r6, [r2, #56]	; 0x38
   126bc:	and	r7, r3, #31
   126c0:	lsr	r3, r3, #5
   126c4:	ldr	r5, [r6, r3, lsl #2]
   126c8:	orr	r5, r5, r0, lsl r7
   126cc:	str	r5, [r6, r3, lsl #2]
   126d0:	ldr	r3, [r2, #60]	; 0x3c
   126d4:	cmp	r3, #0
   126d8:	beq	12738 <find_edom+0x114>
   126dc:	cmp	r1, #0
   126e0:	ldr	r5, [r3, #56]	; 0x38
   126e4:	ldr	r7, [r2, #56]	; 0x38
   126e8:	blt	12738 <find_edom+0x114>
   126ec:	mov	r6, r1
   126f0:	ldr	r3, [r5], #4
   126f4:	ldr	r8, [r7], #4
   126f8:	sub	r6, r6, #1
   126fc:	and	r3, r3, r8
   12700:	cmn	r6, #1
   12704:	str	r3, [r5, #-4]
   12708:	bne	126f0 <find_edom+0xcc>
   1270c:	ldr	r3, [r2, #60]	; 0x3c
   12710:	ldr	r7, [r2, #56]	; 0x38
   12714:	mov	r6, r1
   12718:	ldr	r5, [r3, #80]	; 0x50
   1271c:	ldr	r3, [r5], #4
   12720:	ldr	r8, [r7], #4
   12724:	sub	r6, r6, #1
   12728:	and	r3, r3, r8
   1272c:	cmn	r6, #1
   12730:	str	r3, [r5, #-4]
   12734:	bne	1271c <find_edom+0xf8>
   12738:	ldr	r3, [r2, #72]	; 0x48
   1273c:	ldr	r6, [r2, #80]	; 0x50
   12740:	and	r7, r3, #31
   12744:	lsr	r3, r3, #5
   12748:	ldr	r5, [r6, r3, lsl #2]
   1274c:	orr	r5, r5, r0, lsl r7
   12750:	str	r5, [r6, r3, lsl #2]
   12754:	ldr	r3, [r2, #84]	; 0x54
   12758:	cmp	r3, #0
   1275c:	beq	127bc <find_edom+0x198>
   12760:	cmp	r1, #0
   12764:	ldr	r5, [r3, #56]	; 0x38
   12768:	ldr	r7, [r2, #80]	; 0x50
   1276c:	blt	127bc <find_edom+0x198>
   12770:	mov	r6, r1
   12774:	ldr	r3, [r5], #4
   12778:	ldr	r8, [r7], #4
   1277c:	sub	r6, r6, #1
   12780:	and	r3, r3, r8
   12784:	cmn	r6, #1
   12788:	str	r3, [r5, #-4]
   1278c:	bne	12774 <find_edom+0x150>
   12790:	ldr	r3, [r2, #84]	; 0x54
   12794:	ldr	r7, [r2, #80]	; 0x50
   12798:	mov	r6, r1
   1279c:	ldr	r5, [r3, #80]	; 0x50
   127a0:	ldr	r3, [r5], #4
   127a4:	ldr	r8, [r7], #4
   127a8:	sub	r6, r6, #1
   127ac:	and	r3, r3, r8
   127b0:	cmn	r6, #1
   127b4:	str	r3, [r5, #-4]
   127b8:	bne	127a0 <find_edom+0x17c>
   127bc:	ldr	r2, [r2, #100]	; 0x64
   127c0:	cmp	r2, #0
   127c4:	bne	126b4 <find_edom+0x90>
   127c8:	sub	ip, ip, #1
   127cc:	cmn	ip, #1
   127d0:	sub	lr, lr, #4
   127d4:	bne	126a4 <find_edom+0x80>
   127d8:	pop	{r4, r5, r6, r7, r8, pc}
   127dc:	pop	{r4, r5, r6, r7, r8, pc}
   127e0:	.word	0x0002c108
   127e4:	.word	0x0002b9b8
   127e8:	.word	0x000000c8

000127ec <make_marks>:
   127ec:	ldr	r3, [pc, #540]	; 12a10 <make_marks+0x224>
   127f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f4:	add	r3, pc, r3
   127f8:	sub	sp, sp, #12
   127fc:	ldr	r6, [r3, #4]
   12800:	ldr	r3, [r0, #24]
   12804:	str	r0, [sp, #4]
   12808:	cmp	r3, r6
   1280c:	beq	12a08 <make_marks+0x21c>
   12810:	mov	r2, r0
   12814:	ldr	r3, [r2, #8]
   12818:	str	r6, [r2, #24]
   1281c:	and	r3, r3, #7
   12820:	cmp	r3, #6
   12824:	beq	12a08 <make_marks+0x21c>
   12828:	ldr	r3, [sp, #4]
   1282c:	ldr	r3, [r3, #60]	; 0x3c
   12830:	str	r3, [sp]
   12834:	ldr	r3, [r3, #24]
   12838:	cmp	r6, r3
   1283c:	beq	129ec <make_marks+0x200>
   12840:	ldr	r2, [sp]
   12844:	ldr	r3, [r2, #8]
   12848:	str	r6, [r2, #24]
   1284c:	and	r3, r3, #7
   12850:	cmp	r3, #6
   12854:	beq	129ec <make_marks+0x200>
   12858:	ldr	r3, [sp]
   1285c:	ldr	r8, [r3, #60]	; 0x3c
   12860:	ldr	r3, [r8, #24]
   12864:	cmp	r3, r6
   12868:	beq	129d4 <make_marks+0x1e8>
   1286c:	ldr	r3, [r8, #8]
   12870:	str	r6, [r8, #24]
   12874:	and	r3, r3, #7
   12878:	cmp	r3, #6
   1287c:	beq	129d4 <make_marks+0x1e8>
   12880:	ldr	r9, [r8, #60]	; 0x3c
   12884:	ldr	r3, [r9, #24]
   12888:	cmp	r6, r3
   1288c:	beq	129c4 <make_marks+0x1d8>
   12890:	ldr	r3, [r9, #8]
   12894:	str	r6, [r9, #24]
   12898:	and	r3, r3, #7
   1289c:	cmp	r3, #6
   128a0:	beq	129c4 <make_marks+0x1d8>
   128a4:	ldr	sl, [r9, #60]	; 0x3c
   128a8:	ldr	r3, [sl, #24]
   128ac:	cmp	r6, r3
   128b0:	beq	129b4 <make_marks+0x1c8>
   128b4:	ldr	r3, [sl, #8]
   128b8:	str	r6, [sl, #24]
   128bc:	and	r3, r3, #7
   128c0:	cmp	r3, #6
   128c4:	beq	129b4 <make_marks+0x1c8>
   128c8:	ldr	fp, [sl, #60]	; 0x3c
   128cc:	ldr	r3, [fp, #24]
   128d0:	cmp	r6, r3
   128d4:	beq	129a4 <make_marks+0x1b8>
   128d8:	ldr	r3, [fp, #8]
   128dc:	str	r6, [fp, #24]
   128e0:	and	r3, r3, #7
   128e4:	cmp	r3, #6
   128e8:	beq	129a4 <make_marks+0x1b8>
   128ec:	ldr	r5, [fp, #60]	; 0x3c
   128f0:	ldr	r3, [r5, #24]
   128f4:	cmp	r6, r3
   128f8:	beq	12994 <make_marks+0x1a8>
   128fc:	ldr	r3, [r5, #8]
   12900:	str	r6, [r5, #24]
   12904:	and	r3, r3, #7
   12908:	cmp	r3, #6
   1290c:	beq	12994 <make_marks+0x1a8>
   12910:	ldr	r4, [r5, #60]	; 0x3c
   12914:	ldr	r3, [r4, #24]
   12918:	cmp	r6, r3
   1291c:	beq	12984 <make_marks+0x198>
   12920:	ldr	r3, [r4, #8]
   12924:	str	r6, [r4, #24]
   12928:	and	r3, r3, #7
   1292c:	cmp	r3, #6
   12930:	beq	12984 <make_marks+0x198>
   12934:	ldr	r7, [r4, #60]	; 0x3c
   12938:	ldr	r2, [r7, #24]
   1293c:	cmp	r6, r2
   12940:	bne	12960 <make_marks+0x174>
   12944:	b	12974 <make_marks+0x188>
   12948:	ldr	r0, [r7, #60]	; 0x3c
   1294c:	bl	127ec <make_marks>
   12950:	ldr	r7, [r7, #84]	; 0x54
   12954:	ldr	r2, [r7, #24]
   12958:	cmp	r6, r2
   1295c:	beq	12974 <make_marks+0x188>
   12960:	ldr	r2, [r7, #8]
   12964:	str	r6, [r7, #24]
   12968:	and	r2, r2, #7
   1296c:	cmp	r2, #6
   12970:	bne	12948 <make_marks+0x15c>
   12974:	ldr	r4, [r4, #84]	; 0x54
   12978:	ldr	r3, [r4, #24]
   1297c:	cmp	r6, r3
   12980:	bne	12920 <make_marks+0x134>
   12984:	ldr	r5, [r5, #84]	; 0x54
   12988:	ldr	r3, [r5, #24]
   1298c:	cmp	r6, r3
   12990:	bne	128fc <make_marks+0x110>
   12994:	ldr	fp, [fp, #84]	; 0x54
   12998:	ldr	r3, [fp, #24]
   1299c:	cmp	r6, r3
   129a0:	bne	128d8 <make_marks+0xec>
   129a4:	ldr	sl, [sl, #84]	; 0x54
   129a8:	ldr	r3, [sl, #24]
   129ac:	cmp	r6, r3
   129b0:	bne	128b4 <make_marks+0xc8>
   129b4:	ldr	r9, [r9, #84]	; 0x54
   129b8:	ldr	r3, [r9, #24]
   129bc:	cmp	r3, r6
   129c0:	bne	12890 <make_marks+0xa4>
   129c4:	ldr	r8, [r8, #84]	; 0x54
   129c8:	ldr	r3, [r8, #24]
   129cc:	cmp	r3, r6
   129d0:	bne	1286c <make_marks+0x80>
   129d4:	ldr	r3, [sp]
   129d8:	ldr	r3, [r3, #84]	; 0x54
   129dc:	str	r3, [sp]
   129e0:	ldr	r3, [r3, #24]
   129e4:	cmp	r3, r6
   129e8:	bne	12840 <make_marks+0x54>
   129ec:	ldr	r3, [sp, #4]
   129f0:	ldr	r3, [r3, #84]	; 0x54
   129f4:	str	r3, [sp, #4]
   129f8:	ldr	r3, [r3, #24]
   129fc:	cmp	r3, r6
   12a00:	ldrne	r2, [sp, #4]
   12a04:	bne	12814 <make_marks+0x28>
   12a08:	add	sp, sp, #12
   12a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a10:	.word	0x0002bf40

00012a14 <count_blocks>:
   12a14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a18:	sub	sp, sp, #52	; 0x34
   12a1c:	subs	r3, r0, #0
   12a20:	mov	r2, r3
   12a24:	str	r3, [sp, #4]
   12a28:	beq	12d6c <count_blocks+0x358>
   12a2c:	ldr	r3, [pc, #936]	; 12ddc <count_blocks+0x3c8>
   12a30:	ldr	r2, [r2, #24]
   12a34:	add	r3, pc, r3
   12a38:	ldr	r9, [r3, #4]
   12a3c:	mov	r3, #0
   12a40:	cmp	r9, r2
   12a44:	str	r3, [sp]
   12a48:	beq	12d54 <count_blocks+0x340>
   12a4c:	ldr	r2, [sp, #4]
   12a50:	mov	r8, #1
   12a54:	ldr	r3, [r2, #60]	; 0x3c
   12a58:	str	r9, [r2, #24]
   12a5c:	cmp	r3, #0
   12a60:	str	r3, [sp, #12]
   12a64:	beq	12d28 <count_blocks+0x314>
   12a68:	ldr	r3, [r3, #24]
   12a6c:	cmp	r3, r9
   12a70:	beq	12d28 <count_blocks+0x314>
   12a74:	ldr	r2, [sp, #12]
   12a78:	mov	r3, #0
   12a7c:	str	r3, [sp, #8]
   12a80:	ldr	r3, [r2, #60]	; 0x3c
   12a84:	str	r9, [r2, #24]
   12a88:	cmp	r3, #0
   12a8c:	str	r3, [sp, #44]	; 0x2c
   12a90:	beq	12cec <count_blocks+0x2d8>
   12a94:	ldr	r3, [r3, #24]
   12a98:	cmp	r3, r9
   12a9c:	beq	12cec <count_blocks+0x2d8>
   12aa0:	ldr	r2, [sp, #44]	; 0x2c
   12aa4:	mov	sl, r9
   12aa8:	mov	r3, #0
   12aac:	str	r3, [sp, #16]
   12ab0:	ldr	r3, [r2, #60]	; 0x3c
   12ab4:	str	sl, [r2, #24]
   12ab8:	cmp	r3, #0
   12abc:	str	r3, [sp, #40]	; 0x28
   12ac0:	beq	12d7c <count_blocks+0x368>
   12ac4:	ldr	r3, [r3, #24]
   12ac8:	cmp	sl, r3
   12acc:	beq	12d7c <count_blocks+0x368>
   12ad0:	ldr	r2, [sp, #40]	; 0x28
   12ad4:	mov	r9, sl
   12ad8:	mov	r3, #0
   12adc:	str	r3, [sp, #20]
   12ae0:	ldr	r3, [r2, #60]	; 0x3c
   12ae4:	str	r9, [r2, #24]
   12ae8:	cmp	r3, #0
   12aec:	str	r3, [sp, #36]	; 0x24
   12af0:	beq	12d74 <count_blocks+0x360>
   12af4:	ldr	r3, [r3, #24]
   12af8:	cmp	r9, r3
   12afc:	beq	12d74 <count_blocks+0x360>
   12b00:	mov	r3, #0
   12b04:	str	r3, [sp, #28]
   12b08:	ldr	r2, [sp, #36]	; 0x24
   12b0c:	ldr	r3, [r2, #60]	; 0x3c
   12b10:	str	r9, [r2, #24]
   12b14:	cmp	r3, #0
   12b18:	str	r3, [sp, #32]
   12b1c:	beq	12ce0 <count_blocks+0x2cc>
   12b20:	ldr	r3, [r3, #24]
   12b24:	cmp	r9, r3
   12b28:	beq	12ce0 <count_blocks+0x2cc>
   12b2c:	mov	r3, #0
   12b30:	str	r3, [sp, #24]
   12b34:	ldr	r3, [sp, #32]
   12b38:	mov	fp, r9
   12b3c:	ldr	r7, [r3, #60]	; 0x3c
   12b40:	str	fp, [r3, #24]
   12b44:	cmp	r7, #0
   12b48:	beq	12cd8 <count_blocks+0x2c4>
   12b4c:	ldr	r2, [r7, #24]
   12b50:	cmp	r2, fp
   12b54:	beq	12cd8 <count_blocks+0x2c4>
   12b58:	mov	sl, #0
   12b5c:	ldr	r6, [r7, #60]	; 0x3c
   12b60:	str	fp, [r7, #24]
   12b64:	cmp	r6, #0
   12b68:	beq	12cc0 <count_blocks+0x2ac>
   12b6c:	ldr	r3, [r6, #24]
   12b70:	cmp	r3, fp
   12b74:	beq	12cc0 <count_blocks+0x2ac>
   12b78:	mov	r9, #0
   12b7c:	ldr	r4, [r6, #60]	; 0x3c
   12b80:	str	fp, [r6, #24]
   12b84:	cmp	r4, #0
   12b88:	beq	12cb8 <count_blocks+0x2a4>
   12b8c:	ldr	r3, [r4, #24]
   12b90:	cmp	r3, fp
   12b94:	beq	12cb8 <count_blocks+0x2a4>
   12b98:	mov	r5, #0
   12b9c:	b	12bac <count_blocks+0x198>
   12ba0:	ldr	r3, [r4, #24]
   12ba4:	cmp	fp, r3
   12ba8:	beq	12bcc <count_blocks+0x1b8>
   12bac:	str	fp, [r4, #24]
   12bb0:	ldr	r0, [r4, #60]	; 0x3c
   12bb4:	bl	12a14 <count_blocks>
   12bb8:	ldr	r4, [r4, #84]	; 0x54
   12bbc:	cmp	r4, #0
   12bc0:	add	r0, r0, #1
   12bc4:	add	r5, r5, r0
   12bc8:	bne	12ba0 <count_blocks+0x18c>
   12bcc:	add	r5, r5, #1
   12bd0:	ldr	r6, [r6, #84]	; 0x54
   12bd4:	add	r9, r9, r5
   12bd8:	cmp	r6, #0
   12bdc:	beq	12bec <count_blocks+0x1d8>
   12be0:	ldr	r3, [r6, #24]
   12be4:	cmp	fp, r3
   12be8:	bne	12b7c <count_blocks+0x168>
   12bec:	add	r9, r9, #1
   12bf0:	ldr	r7, [r7, #84]	; 0x54
   12bf4:	add	sl, sl, r9
   12bf8:	cmp	r7, #0
   12bfc:	beq	12c0c <count_blocks+0x1f8>
   12c00:	ldr	r3, [r7, #24]
   12c04:	cmp	fp, r3
   12c08:	bne	12b5c <count_blocks+0x148>
   12c0c:	ldr	r3, [sp, #32]
   12c10:	add	sl, sl, #1
   12c14:	ldr	r3, [r3, #84]	; 0x54
   12c18:	ldr	r2, [sp, #24]
   12c1c:	cmp	r3, #0
   12c20:	add	r2, r2, sl
   12c24:	str	r3, [sp, #32]
   12c28:	str	r2, [sp, #24]
   12c2c:	beq	12cc8 <count_blocks+0x2b4>
   12c30:	ldr	r2, [r3, #24]
   12c34:	cmp	r2, fp
   12c38:	bne	12b3c <count_blocks+0x128>
   12c3c:	ldr	r3, [sp, #24]
   12c40:	mov	r9, fp
   12c44:	add	sl, r3, #1
   12c48:	ldr	r3, [sp, #36]	; 0x24
   12c4c:	ldr	r3, [r3, #84]	; 0x54
   12c50:	ldr	r2, [sp, #28]
   12c54:	cmp	r3, #0
   12c58:	add	r2, r2, sl
   12c5c:	str	r3, [sp, #36]	; 0x24
   12c60:	str	r2, [sp, #28]
   12c64:	beq	12c74 <count_blocks+0x260>
   12c68:	ldr	r3, [r3, #24]
   12c6c:	cmp	r3, r9
   12c70:	bne	12b08 <count_blocks+0xf4>
   12c74:	add	r3, r2, #1
   12c78:	ldr	r2, [sp, #40]	; 0x28
   12c7c:	ldr	r2, [r2, #84]	; 0x54
   12c80:	ldr	r1, [sp, #20]
   12c84:	cmp	r2, #0
   12c88:	add	r3, r1, r3
   12c8c:	str	r2, [sp, #40]	; 0x28
   12c90:	str	r3, [sp, #20]
   12c94:	beq	12dbc <count_blocks+0x3a8>
   12c98:	ldr	r3, [r2, #24]
   12c9c:	cmp	r3, r9
   12ca0:	bne	12ae0 <count_blocks+0xcc>
   12ca4:	ldr	r3, [sp, #20]
   12ca8:	mov	sl, r9
   12cac:	add	r3, r3, #1
   12cb0:	ldr	r2, [sp, #44]	; 0x2c
   12cb4:	b	12d80 <count_blocks+0x36c>
   12cb8:	mov	r5, r8
   12cbc:	b	12bd0 <count_blocks+0x1bc>
   12cc0:	mov	r9, r8
   12cc4:	b	12bf0 <count_blocks+0x1dc>
   12cc8:	mov	r9, fp
   12ccc:	add	sl, r2, #1
   12cd0:	ldr	r3, [sp, #36]	; 0x24
   12cd4:	b	12c4c <count_blocks+0x238>
   12cd8:	mov	sl, r8
   12cdc:	b	12c14 <count_blocks+0x200>
   12ce0:	mov	sl, r8
   12ce4:	mov	r3, r2
   12ce8:	b	12c4c <count_blocks+0x238>
   12cec:	mov	r3, r8
   12cf0:	ldr	r2, [r2, #84]	; 0x54
   12cf4:	ldr	r1, [sp, #8]
   12cf8:	cmp	r2, #0
   12cfc:	add	r3, r1, r3
   12d00:	str	r2, [sp, #12]
   12d04:	str	r3, [sp, #8]
   12d08:	beq	12d60 <count_blocks+0x34c>
   12d0c:	ldr	r3, [r2, #24]
   12d10:	cmp	r3, r9
   12d14:	bne	12a80 <count_blocks+0x6c>
   12d18:	ldr	r3, [sp, #8]
   12d1c:	ldr	r2, [sp, #4]
   12d20:	add	r3, r3, #1
   12d24:	b	12d2c <count_blocks+0x318>
   12d28:	mov	r3, r8
   12d2c:	ldr	r2, [r2, #84]	; 0x54
   12d30:	ldr	r1, [sp]
   12d34:	cmp	r2, #0
   12d38:	add	r3, r1, r3
   12d3c:	str	r2, [sp, #4]
   12d40:	str	r3, [sp]
   12d44:	beq	12d54 <count_blocks+0x340>
   12d48:	ldr	r3, [r2, #24]
   12d4c:	cmp	r3, r9
   12d50:	bne	12a54 <count_blocks+0x40>
   12d54:	ldr	r0, [sp]
   12d58:	add	sp, sp, #52	; 0x34
   12d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d60:	add	r3, r3, #1
   12d64:	ldr	r2, [sp, #4]
   12d68:	b	12d2c <count_blocks+0x318>
   12d6c:	str	r3, [sp]
   12d70:	b	12d54 <count_blocks+0x340>
   12d74:	mov	r3, r8
   12d78:	b	12c7c <count_blocks+0x268>
   12d7c:	mov	r3, r8
   12d80:	ldr	r2, [r2, #84]	; 0x54
   12d84:	ldr	r1, [sp, #16]
   12d88:	cmp	r2, #0
   12d8c:	add	r3, r1, r3
   12d90:	str	r2, [sp, #44]	; 0x2c
   12d94:	str	r3, [sp, #16]
   12d98:	beq	12dcc <count_blocks+0x3b8>
   12d9c:	ldr	r3, [r2, #24]
   12da0:	cmp	r3, sl
   12da4:	bne	12ab0 <count_blocks+0x9c>
   12da8:	ldr	r3, [sp, #16]
   12dac:	mov	r9, sl
   12db0:	add	r3, r3, #1
   12db4:	ldr	r2, [sp, #12]
   12db8:	b	12cf0 <count_blocks+0x2dc>
   12dbc:	mov	sl, r9
   12dc0:	add	r3, r3, #1
   12dc4:	ldr	r2, [sp, #44]	; 0x2c
   12dc8:	b	12d80 <count_blocks+0x36c>
   12dcc:	mov	r9, sl
   12dd0:	add	r3, r3, #1
   12dd4:	ldr	r2, [sp, #12]
   12dd8:	b	12cf0 <count_blocks+0x2dc>
   12ddc:	.word	0x0002bd00

00012de0 <find_ud.isra.9>:
   12de0:	ldr	r2, [pc, #648]	; 13070 <find_ud.isra.9+0x290>
   12de4:	cmp	r0, #0
   12de8:	add	r2, pc, r2
   12dec:	blt	13040 <find_ud.isra.9+0x260>
   12df0:	ldr	r3, [pc, #636]	; 13074 <find_ud.isra.9+0x294>
   12df4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12df8:	sub	sp, sp, #20
   12dfc:	lsl	r1, r0, #2
   12e00:	str	r1, [sp, #12]
   12e04:	str	r0, [sp, #4]
   12e08:	ldr	r3, [r2, r3]
   12e0c:	mov	fp, #131072	; 0x20000
   12e10:	mov	r8, #1
   12e14:	ldr	r7, [r3]
   12e18:	mov	sl, #16
   12e1c:	add	r7, r7, r1
   12e20:	mov	r9, #17
   12e24:	str	r3, [sp, #8]
   12e28:	ldr	r6, [r7], #-4
   12e2c:	cmp	r6, #0
   12e30:	beq	12f64 <find_ud.isra.9+0x184>
   12e34:	ldr	r3, [r6, #4]
   12e38:	cmp	r3, #0
   12e3c:	beq	13044 <find_ud.isra.9+0x264>
   12e40:	mov	r5, #0
   12e44:	mov	r4, r5
   12e48:	mov	lr, r5
   12e4c:	ldr	r2, [r3]
   12e50:	cmn	r2, #1
   12e54:	beq	12f28 <find_ud.isra.9+0x148>
   12e58:	and	r1, r2, #7
   12e5c:	sub	ip, r1, #2
   12e60:	cmp	ip, #5
   12e64:	addls	pc, pc, ip, lsl #2
   12e68:	b	12ee4 <find_ud.isra.9+0x104>
   12e6c:	b	12edc <find_ud.isra.9+0xfc>
   12e70:	b	12e98 <find_ud.isra.9+0xb8>
   12e74:	b	12ed4 <find_ud.isra.9+0xf4>
   12e78:	b	12ed4 <find_ud.isra.9+0xf4>
   12e7c:	b	12e84 <find_ud.isra.9+0xa4>
   12e80:	b	1302c <find_ud.isra.9+0x24c>
   12e84:	and	ip, r2, #24
   12e88:	cmp	ip, #16
   12e8c:	beq	12e9c <find_ud.isra.9+0xbc>
   12e90:	cmp	ip, #8
   12e94:	bne	12ea8 <find_ud.isra.9+0xc8>
   12e98:	mov	ip, r9
   12e9c:	lsl	ip, r8, ip
   12ea0:	tst	ip, lr
   12ea4:	orreq	r4, r4, ip
   12ea8:	cmp	r1, #7
   12eac:	addls	pc, pc, r1, lsl #2
   12eb0:	b	12f28 <find_ud.isra.9+0x148>
   12eb4:	b	12fec <find_ud.isra.9+0x20c>
   12eb8:	b	12f18 <find_ud.isra.9+0x138>
   12ebc:	b	13004 <find_ud.isra.9+0x224>
   12ec0:	b	13004 <find_ud.isra.9+0x224>
   12ec4:	b	12fec <find_ud.isra.9+0x20c>
   12ec8:	b	12f28 <find_ud.isra.9+0x148>
   12ecc:	b	12f28 <find_ud.isra.9+0x148>
   12ed0:	b	12ff4 <find_ud.isra.9+0x214>
   12ed4:	tst	r2, #8
   12ed8:	bne	13018 <find_ud.isra.9+0x238>
   12edc:	mov	ip, sl
   12ee0:	b	12e9c <find_ud.isra.9+0xbc>
   12ee4:	and	ip, r2, #224	; 0xe0
   12ee8:	cmp	ip, #64	; 0x40
   12eec:	beq	12e98 <find_ud.isra.9+0xb8>
   12ef0:	cmp	ip, #96	; 0x60
   12ef4:	bne	12ea8 <find_ud.isra.9+0xc8>
   12ef8:	ldr	ip, [r3, #12]
   12efc:	cmp	ip, #0
   12f00:	blt	12ea8 <find_ud.isra.9+0xc8>
   12f04:	cmp	ip, #18
   12f08:	beq	13018 <find_ud.isra.9+0x238>
   12f0c:	cmp	ip, #17
   12f10:	ble	12e9c <find_ud.isra.9+0xbc>
   12f14:	bl	f18 <abort@plt>
   12f18:	mov	r2, fp
   12f1c:	tst	r2, r4
   12f20:	orreq	r5, r5, r2
   12f24:	orr	lr, lr, r2
   12f28:	ldr	r3, [r3, #16]
   12f2c:	cmp	r3, #0
   12f30:	bne	12e4c <find_ud.isra.9+0x6c>
   12f34:	ldr	r3, [r6, #8]
   12f38:	and	r2, r3, #7
   12f3c:	cmp	r2, #5
   12f40:	beq	13054 <find_ud.isra.9+0x274>
   12f44:	mov	r3, #0
   12f48:	str	lr, [r6, #116]	; 0x74
   12f4c:	str	r5, [r6, #120]	; 0x78
   12f50:	str	r4, [r6, #124]	; 0x7c
   12f54:	str	r3, [r6, #128]	; 0x80
   12f58:	ldr	r6, [r6, #100]	; 0x64
   12f5c:	cmp	r6, r3
   12f60:	bne	12e34 <find_ud.isra.9+0x54>
   12f64:	ldr	r3, [sp, #4]
   12f68:	sub	r3, r3, #1
   12f6c:	cmn	r3, #1
   12f70:	str	r3, [sp, #4]
   12f74:	bne	12e28 <find_ud.isra.9+0x48>
   12f78:	cmp	r0, #0
   12f7c:	ble	12fe4 <find_ud.isra.9+0x204>
   12f80:	ldr	r3, [sp, #8]
   12f84:	ldr	lr, [r3]
   12f88:	ldr	r3, [sp, #12]
   12f8c:	add	r4, lr, r3
   12f90:	ldr	r3, [lr, #4]!
   12f94:	cmp	r3, #0
   12f98:	beq	12fdc <find_ud.isra.9+0x1fc>
   12f9c:	ldr	r0, [r3, #84]	; 0x54
   12fa0:	ldr	r2, [r3, #60]	; 0x3c
   12fa4:	ldr	r1, [r3, #128]	; 0x80
   12fa8:	ldr	ip, [r0, #124]	; 0x7c
   12fac:	ldr	r2, [r2, #124]	; 0x7c
   12fb0:	ldr	r0, [r3, #120]	; 0x78
   12fb4:	orr	r2, r2, ip
   12fb8:	orr	r2, r2, r1
   12fbc:	ldr	r1, [r3, #124]	; 0x7c
   12fc0:	bic	r0, r2, r0
   12fc4:	orr	r1, r1, r0
   12fc8:	str	r2, [r3, #128]	; 0x80
   12fcc:	str	r1, [r3, #124]	; 0x7c
   12fd0:	ldr	r3, [r3, #100]	; 0x64
   12fd4:	cmp	r3, #0
   12fd8:	bne	12f9c <find_ud.isra.9+0x1bc>
   12fdc:	cmp	lr, r4
   12fe0:	bne	12f90 <find_ud.isra.9+0x1b0>
   12fe4:	add	sp, sp, #20
   12fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fec:	mov	r2, #65536	; 0x10000
   12ff0:	b	12f1c <find_ud.isra.9+0x13c>
   12ff4:	tst	r2, #248	; 0xf8
   12ff8:	movne	r2, #65536	; 0x10000
   12ffc:	moveq	r2, #131072	; 0x20000
   13000:	b	12f1c <find_ud.isra.9+0x13c>
   13004:	ldr	r2, [r3, #12]
   13008:	cmp	r2, #0
   1300c:	lslge	r2, r8, r2
   13010:	blt	12f28 <find_ud.isra.9+0x148>
   13014:	b	12f1c <find_ud.isra.9+0x13c>
   13018:	tst	lr, #131072	; 0x20000
   1301c:	orreq	r4, r4, #131072	; 0x20000
   13020:	tst	lr, #65536	; 0x10000
   13024:	orreq	r4, r4, #65536	; 0x10000
   13028:	b	12ea8 <find_ud.isra.9+0xc8>
   1302c:	and	ip, r2, #248	; 0xf8
   13030:	cmp	ip, #128	; 0x80
   13034:	movne	ip, #16
   13038:	moveq	ip, #17
   1303c:	b	12e9c <find_ud.isra.9+0xbc>
   13040:	bx	lr
   13044:	mov	r5, r3
   13048:	mov	r4, r3
   1304c:	mov	lr, r3
   13050:	b	12f34 <find_ud.isra.9+0x154>
   13054:	tst	r3, #8
   13058:	beq	13064 <find_ud.isra.9+0x284>
   1305c:	tst	lr, #131072	; 0x20000
   13060:	orreq	r4, r4, #131072	; 0x20000
   13064:	tst	lr, #65536	; 0x10000
   13068:	orreq	r4, r4, #65536	; 0x10000
   1306c:	b	12f44 <find_ud.isra.9+0x164>
   13070:	.word	0x0002b210
   13074:	.word	0x000000c8

00013078 <number_blks_r>:
   13078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1307c:	sub	sp, sp, #60	; 0x3c
   13080:	ldr	r1, [pc, #1080]	; 134c0 <number_blks_r+0x448>
   13084:	subs	r3, r0, #0
   13088:	str	r3, [sp, #28]
   1308c:	add	r1, pc, r1
   13090:	beq	134b8 <number_blks_r+0x440>
   13094:	ldr	r0, [pc, #1064]	; 134c4 <number_blks_r+0x44c>
   13098:	ldr	r3, [r3, #24]
   1309c:	add	r0, pc, r0
   130a0:	ldr	sl, [r0, #4]
   130a4:	cmp	sl, r3
   130a8:	beq	134b8 <number_blks_r+0x440>
   130ac:	ldr	r2, [pc, #1044]	; 134c8 <number_blks_r+0x450>
   130b0:	ldr	r3, [pc, #1044]	; 134cc <number_blks_r+0x454>
   130b4:	add	r2, pc, r2
   130b8:	str	r2, [sp, #36]	; 0x24
   130bc:	ldr	r2, [pc, #1036]	; 134d0 <number_blks_r+0x458>
   130c0:	add	r2, pc, r2
   130c4:	str	r2, [sp, #40]	; 0x28
   130c8:	ldr	r9, [r1, r3]
   130cc:	ldr	r3, [pc, #1024]	; 134d4 <number_blks_r+0x45c>
   130d0:	str	r0, [sp, #32]
   130d4:	add	r3, pc, r3
   130d8:	str	r3, [sp, #44]	; 0x2c
   130dc:	ldr	r3, [pc, #1012]	; 134d8 <number_blks_r+0x460>
   130e0:	add	r3, pc, r3
   130e4:	str	r3, [sp, #48]	; 0x30
   130e8:	ldr	r3, [pc, #1004]	; 134dc <number_blks_r+0x464>
   130ec:	add	r3, pc, r3
   130f0:	str	r3, [sp, #52]	; 0x34
   130f4:	mov	r3, r9
   130f8:	mov	r9, sl
   130fc:	mov	sl, r3
   13100:	ldr	r1, [sp, #32]
   13104:	ldr	r2, [sp, #28]
   13108:	ldr	r0, [r1, #24]
   1310c:	str	r9, [r2, #24]
   13110:	str	r0, [r2]
   13114:	ldr	ip, [sl]
   13118:	add	r3, r0, #1
   1311c:	str	r3, [r1, #24]
   13120:	str	r2, [ip, r0, lsl #2]
   13124:	ldr	r2, [r2, #60]	; 0x3c
   13128:	cmp	r2, #0
   1312c:	str	r2, [sp, #8]
   13130:	beq	13498 <number_blks_r+0x420>
   13134:	ldr	r0, [r2, #24]
   13138:	cmp	r9, r0
   1313c:	beq	13498 <number_blks_r+0x420>
   13140:	ldr	r2, [pc, #920]	; 134e0 <number_blks_r+0x468>
   13144:	mov	r8, sl
   13148:	mov	sl, r9
   1314c:	add	r2, pc, r2
   13150:	str	r2, [sp]
   13154:	ldr	r2, [sp, #8]
   13158:	add	r0, r3, #1
   1315c:	str	r3, [r2]
   13160:	ldr	ip, [r8]
   13164:	str	sl, [r2, #24]
   13168:	str	r2, [ip, r3, lsl #2]
   1316c:	ldr	r3, [r2, #60]	; 0x3c
   13170:	ldr	r2, [sp, #36]	; 0x24
   13174:	cmp	r3, #0
   13178:	str	r3, [sp, #12]
   1317c:	str	r0, [r2, #24]
   13180:	beq	13464 <number_blks_r+0x3ec>
   13184:	ldr	r3, [r3, #24]
   13188:	cmp	sl, r3
   1318c:	beq	13464 <number_blks_r+0x3ec>
   13190:	ldr	r9, [pc, #844]	; 134e4 <number_blks_r+0x46c>
   13194:	add	r9, pc, r9
   13198:	ldr	r2, [sp, #12]
   1319c:	ldr	r1, [sp, #40]	; 0x28
   131a0:	add	r3, r0, #1
   131a4:	str	r0, [r2]
   131a8:	ldr	ip, [r8]
   131ac:	str	sl, [r2, #24]
   131b0:	str	r3, [r1, #24]
   131b4:	str	r2, [ip, r0, lsl #2]
   131b8:	ldr	r2, [r2, #60]	; 0x3c
   131bc:	cmp	r2, #0
   131c0:	str	r2, [sp, #16]
   131c4:	beq	13438 <number_blks_r+0x3c0>
   131c8:	ldr	r0, [r2, #24]
   131cc:	cmp	sl, r0
   131d0:	beq	13438 <number_blks_r+0x3c0>
   131d4:	ldr	r4, [pc, #780]	; 134e8 <number_blks_r+0x470>
   131d8:	add	r4, pc, r4
   131dc:	str	r3, [r2]
   131e0:	ldr	ip, [r8]
   131e4:	str	sl, [r2, #24]
   131e8:	add	r0, r3, #1
   131ec:	str	r2, [ip, r3, lsl #2]
   131f0:	ldr	r3, [r2, #60]	; 0x3c
   131f4:	ldr	r2, [sp, #44]	; 0x2c
   131f8:	cmp	r3, #0
   131fc:	str	r3, [sp, #20]
   13200:	str	r0, [r2, #24]
   13204:	beq	13404 <number_blks_r+0x38c>
   13208:	ldr	r3, [r3, #24]
   1320c:	cmp	sl, r3
   13210:	beq	13404 <number_blks_r+0x38c>
   13214:	ldr	r6, [pc, #720]	; 134ec <number_blks_r+0x474>
   13218:	mov	r3, r8
   1321c:	add	r6, pc, r6
   13220:	mov	r8, sl
   13224:	mov	sl, r3
   13228:	ldr	r2, [sp, #20]
   1322c:	ldr	r1, [sp, #48]	; 0x30
   13230:	add	r3, r0, #1
   13234:	str	r0, [r2]
   13238:	ldr	ip, [sl]
   1323c:	str	r8, [r2, #24]
   13240:	str	r3, [r1, #24]
   13244:	str	r2, [ip, r0, lsl #2]
   13248:	ldr	r2, [r2, #60]	; 0x3c
   1324c:	cmp	r2, #0
   13250:	str	r2, [sp, #24]
   13254:	beq	133cc <number_blks_r+0x354>
   13258:	ldr	r0, [r2, #24]
   1325c:	cmp	r8, r0
   13260:	beq	133cc <number_blks_r+0x354>
   13264:	ldr	r2, [pc, #644]	; 134f0 <number_blks_r+0x478>
   13268:	add	r2, pc, r2
   1326c:	str	r2, [sp, #4]
   13270:	mov	r2, sl
   13274:	mov	sl, r8
   13278:	mov	r8, r2
   1327c:	ldr	r2, [sp, #24]
   13280:	add	r0, r3, #1
   13284:	str	r3, [r2]
   13288:	ldr	ip, [r8]
   1328c:	str	sl, [r2, #24]
   13290:	str	r2, [ip, r3, lsl #2]
   13294:	ldr	r3, [sp, #52]	; 0x34
   13298:	ldr	r7, [r2, #60]	; 0x3c
   1329c:	cmp	r7, #0
   132a0:	str	r0, [r3, #24]
   132a4:	beq	13394 <number_blks_r+0x31c>
   132a8:	ldr	r3, [r7, #24]
   132ac:	cmp	sl, r3
   132b0:	beq	13394 <number_blks_r+0x31c>
   132b4:	str	r0, [r7]
   132b8:	ldr	r3, [r8]
   132bc:	str	sl, [r7, #24]
   132c0:	add	ip, r0, #1
   132c4:	str	r7, [r3, r0, lsl #2]
   132c8:	ldr	r3, [sp]
   132cc:	ldr	fp, [r7, #60]	; 0x3c
   132d0:	cmp	fp, #0
   132d4:	str	ip, [r3, #24]
   132d8:	beq	13374 <number_blks_r+0x2fc>
   132dc:	ldr	r3, [fp, #24]
   132e0:	cmp	sl, r3
   132e4:	beq	13374 <number_blks_r+0x2fc>
   132e8:	str	ip, [fp]
   132ec:	ldr	r2, [r8]
   132f0:	str	sl, [fp, #24]
   132f4:	add	r3, ip, #1
   132f8:	str	fp, [r2, ip, lsl #2]
   132fc:	ldr	r5, [fp, #60]	; 0x3c
   13300:	str	r3, [r9, #24]
   13304:	cmp	r5, #0
   13308:	beq	13358 <number_blks_r+0x2e0>
   1330c:	ldr	r2, [r5, #24]
   13310:	cmp	sl, r2
   13314:	bne	1332c <number_blks_r+0x2b4>
   13318:	b	13358 <number_blks_r+0x2e0>
   1331c:	ldr	r3, [r5, #24]
   13320:	cmp	sl, r3
   13324:	beq	13358 <number_blks_r+0x2e0>
   13328:	ldr	r3, [r4, #24]
   1332c:	str	r3, [r5]
   13330:	ldr	r1, [r8]
   13334:	str	sl, [r5, #24]
   13338:	add	r2, r3, #1
   1333c:	str	r5, [r1, r3, lsl #2]
   13340:	ldr	r0, [r5, #60]	; 0x3c
   13344:	str	r2, [r4, #24]
   13348:	bl	13078 <number_blks_r>
   1334c:	ldr	r5, [r5, #84]	; 0x54
   13350:	cmp	r5, #0
   13354:	bne	1331c <number_blks_r+0x2a4>
   13358:	ldr	fp, [fp, #84]	; 0x54
   1335c:	cmp	fp, #0
   13360:	beq	13374 <number_blks_r+0x2fc>
   13364:	ldr	r3, [fp, #24]
   13368:	cmp	sl, r3
   1336c:	ldrne	ip, [r6, #24]
   13370:	bne	132e8 <number_blks_r+0x270>
   13374:	ldr	r7, [r7, #84]	; 0x54
   13378:	cmp	r7, #0
   1337c:	beq	13394 <number_blks_r+0x31c>
   13380:	ldr	r3, [r7, #24]
   13384:	cmp	sl, r3
   13388:	ldrne	r3, [sp, #4]
   1338c:	ldrne	r0, [r3, #24]
   13390:	bne	132b4 <number_blks_r+0x23c>
   13394:	ldr	r3, [sp, #24]
   13398:	ldr	r3, [r3, #84]	; 0x54
   1339c:	cmp	r3, #0
   133a0:	str	r3, [sp, #24]
   133a4:	beq	133c0 <number_blks_r+0x348>
   133a8:	ldr	r3, [r3, #24]
   133ac:	cmp	sl, r3
   133b0:	ldrne	r3, [pc, #316]	; 134f4 <number_blks_r+0x47c>
   133b4:	addne	r3, pc, r3
   133b8:	ldrne	r3, [r3, #24]
   133bc:	bne	1327c <number_blks_r+0x204>
   133c0:	mov	r3, r8
   133c4:	mov	r8, sl
   133c8:	mov	sl, r3
   133cc:	ldr	r3, [sp, #20]
   133d0:	ldr	r3, [r3, #84]	; 0x54
   133d4:	cmp	r3, #0
   133d8:	str	r3, [sp, #20]
   133dc:	beq	133f8 <number_blks_r+0x380>
   133e0:	ldr	r3, [r3, #24]
   133e4:	cmp	r8, r3
   133e8:	ldrne	r3, [pc, #264]	; 134f8 <number_blks_r+0x480>
   133ec:	addne	r3, pc, r3
   133f0:	ldrne	r0, [r3, #24]
   133f4:	bne	13228 <number_blks_r+0x1b0>
   133f8:	mov	r3, sl
   133fc:	mov	sl, r8
   13400:	mov	r8, r3
   13404:	ldr	r3, [sp, #16]
   13408:	ldr	r3, [r3, #84]	; 0x54
   1340c:	cmp	r3, #0
   13410:	str	r3, [sp, #16]
   13414:	beq	13438 <number_blks_r+0x3c0>
   13418:	ldr	r3, [r3, #24]
   1341c:	cmp	sl, r3
   13420:	beq	13438 <number_blks_r+0x3c0>
   13424:	ldr	r3, [pc, #208]	; 134fc <number_blks_r+0x484>
   13428:	ldr	r2, [sp, #16]
   1342c:	add	r3, pc, r3
   13430:	ldr	r3, [r3, #24]
   13434:	b	131dc <number_blks_r+0x164>
   13438:	ldr	r3, [sp, #12]
   1343c:	ldr	r3, [r3, #84]	; 0x54
   13440:	cmp	r3, #0
   13444:	str	r3, [sp, #12]
   13448:	beq	13464 <number_blks_r+0x3ec>
   1344c:	ldr	r3, [r3, #24]
   13450:	cmp	sl, r3
   13454:	ldrne	r3, [pc, #164]	; 13500 <number_blks_r+0x488>
   13458:	addne	r3, pc, r3
   1345c:	ldrne	r0, [r3, #24]
   13460:	bne	13198 <number_blks_r+0x120>
   13464:	ldr	r3, [sp, #8]
   13468:	ldr	r3, [r3, #84]	; 0x54
   1346c:	cmp	r3, #0
   13470:	str	r3, [sp, #8]
   13474:	beq	13490 <number_blks_r+0x418>
   13478:	ldr	r3, [r3, #24]
   1347c:	cmp	sl, r3
   13480:	ldrne	r3, [pc, #124]	; 13504 <number_blks_r+0x48c>
   13484:	addne	r3, pc, r3
   13488:	ldrne	r3, [r3, #24]
   1348c:	bne	13154 <number_blks_r+0xdc>
   13490:	mov	r9, sl
   13494:	mov	sl, r8
   13498:	ldr	r3, [sp, #28]
   1349c:	ldr	r3, [r3, #84]	; 0x54
   134a0:	cmp	r3, #0
   134a4:	str	r3, [sp, #28]
   134a8:	beq	134b8 <number_blks_r+0x440>
   134ac:	ldr	r3, [r3, #24]
   134b0:	cmp	r3, r9
   134b4:	bne	13100 <number_blks_r+0x88>
   134b8:	add	sp, sp, #60	; 0x3c
   134bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134c0:	.word	0x0002af6c
   134c4:	.word	0x0002b698
   134c8:	.word	0x0002b680
   134cc:	.word	0x000000d0
   134d0:	.word	0x0002b674
   134d4:	.word	0x0002b660
   134d8:	.word	0x0002b654
   134dc:	.word	0x0002b648
   134e0:	.word	0x0002b5e8
   134e4:	.word	0x0002b5a0
   134e8:	.word	0x0002b55c
   134ec:	.word	0x0002b518
   134f0:	.word	0x0002b4cc
   134f4:	.word	0x0002b380
   134f8:	.word	0x0002b348
   134fc:	.word	0x0002b308
   13500:	.word	0x0002b2dc
   13504:	.word	0x0002b2b0

00013508 <find_levels_r>:
   13508:	ldr	r3, [pc, #1580]	; 13b3c <find_levels_r+0x634>
   1350c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13510:	add	r3, pc, r3
   13514:	ldr	r2, [r0, #24]
   13518:	ldr	r5, [r3, #4]
   1351c:	ldr	r8, [pc, #1564]	; 13b40 <find_levels_r+0x638>
   13520:	cmp	r2, r5
   13524:	add	r8, pc, r8
   13528:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1352c:	ldr	r6, [r0, #60]	; 0x3c
   13530:	mov	r3, #0
   13534:	cmp	r6, r3
   13538:	mov	r4, r0
   1353c:	str	r5, [r0, #24]
   13540:	str	r3, [r0, #100]	; 0x64
   13544:	beq	13ad4 <find_levels_r+0x5cc>
   13548:	ldr	r2, [r6, #24]
   1354c:	cmp	r5, r2
   13550:	beq	13af8 <find_levels_r+0x5f0>
   13554:	ldr	r7, [r6, #60]	; 0x3c
   13558:	str	r5, [r6, #24]
   1355c:	cmp	r7, #0
   13560:	str	r3, [r6, #100]	; 0x64
   13564:	beq	13b14 <find_levels_r+0x60c>
   13568:	ldr	r2, [r7, #24]
   1356c:	cmp	r5, r2
   13570:	beq	13b24 <find_levels_r+0x61c>
   13574:	ldr	r9, [r7, #60]	; 0x3c
   13578:	str	r5, [r7, #24]
   1357c:	cmp	r9, #0
   13580:	str	r3, [r7, #100]	; 0x64
   13584:	beq	13b04 <find_levels_r+0x5fc>
   13588:	ldr	r2, [r9, #24]
   1358c:	cmp	r5, r2
   13590:	beq	13b30 <find_levels_r+0x628>
   13594:	ldr	r0, [r9, #60]	; 0x3c
   13598:	str	r3, [r9, #100]	; 0x64
   1359c:	cmp	r0, #0
   135a0:	str	r5, [r9, #24]
   135a4:	moveq	r3, r0
   135a8:	beq	135d8 <find_levels_r+0xd0>
   135ac:	bl	13508 <find_levels_r>
   135b0:	ldr	r0, [r9, #84]	; 0x54
   135b4:	bl	13508 <find_levels_r>
   135b8:	ldr	r3, [r9, #84]	; 0x54
   135bc:	ldr	r2, [r9, #60]	; 0x3c
   135c0:	ldr	r3, [r3, #36]	; 0x24
   135c4:	ldr	r2, [r2, #36]	; 0x24
   135c8:	cmp	r3, r2
   135cc:	movlt	r3, r2
   135d0:	add	r3, r3, #1
   135d4:	lsl	r0, r3, #2
   135d8:	ldr	r2, [pc, #1380]	; 13b44 <find_levels_r+0x63c>
   135dc:	str	r3, [r9, #36]	; 0x24
   135e0:	ldr	r8, [r8, r2]
   135e4:	ldr	r3, [r8]
   135e8:	ldr	r2, [r3, r0]
   135ec:	str	r2, [r9, #100]	; 0x64
   135f0:	str	r9, [r3, r0]
   135f4:	ldr	r9, [r7, #84]	; 0x54
   135f8:	ldr	r3, [r9, #24]
   135fc:	cmp	r5, r3
   13600:	beq	13664 <find_levels_r+0x15c>
   13604:	ldr	r0, [r9, #60]	; 0x3c
   13608:	mov	r3, #0
   1360c:	cmp	r0, r3
   13610:	str	r3, [r9, #100]	; 0x64
   13614:	str	r5, [r9, #24]
   13618:	moveq	r3, r0
   1361c:	beq	1364c <find_levels_r+0x144>
   13620:	bl	13508 <find_levels_r>
   13624:	ldr	r0, [r9, #84]	; 0x54
   13628:	bl	13508 <find_levels_r>
   1362c:	ldr	r3, [r9, #84]	; 0x54
   13630:	ldr	r2, [r9, #60]	; 0x3c
   13634:	ldr	r3, [r3, #36]	; 0x24
   13638:	ldr	r2, [r2, #36]	; 0x24
   1363c:	cmp	r3, r2
   13640:	movlt	r3, r2
   13644:	add	r3, r3, #1
   13648:	lsl	r0, r3, #2
   1364c:	ldr	r2, [r8]
   13650:	str	r3, [r9, #36]	; 0x24
   13654:	ldr	r3, [r2, r0]
   13658:	str	r3, [r9, #100]	; 0x64
   1365c:	str	r9, [r2, r0]
   13660:	ldr	r9, [r7, #84]	; 0x54
   13664:	ldr	r3, [r7, #60]	; 0x3c
   13668:	ldr	r2, [r9, #36]	; 0x24
   1366c:	ldr	r3, [r3, #36]	; 0x24
   13670:	cmp	r3, r2
   13674:	movlt	r3, r2
   13678:	add	r3, r3, #1
   1367c:	lsl	r9, r3, #2
   13680:	ldr	r2, [r8]
   13684:	str	r3, [r7, #36]	; 0x24
   13688:	ldr	r3, [r2, r9]
   1368c:	str	r3, [r7, #100]	; 0x64
   13690:	str	r7, [r2, r9]
   13694:	ldr	r7, [r6, #84]	; 0x54
   13698:	ldr	r3, [r7, #24]
   1369c:	cmp	r5, r3
   136a0:	beq	137c8 <find_levels_r+0x2c0>
   136a4:	ldr	r9, [r7, #60]	; 0x3c
   136a8:	mov	r3, #0
   136ac:	cmp	r9, r3
   136b0:	str	r3, [r7, #100]	; 0x64
   136b4:	str	r5, [r7, #24]
   136b8:	moveq	r3, r9
   136bc:	beq	137b0 <find_levels_r+0x2a8>
   136c0:	ldr	r2, [r9, #24]
   136c4:	cmp	r5, r2
   136c8:	beq	13724 <find_levels_r+0x21c>
   136cc:	ldr	r0, [r9, #60]	; 0x3c
   136d0:	str	r3, [r9, #100]	; 0x64
   136d4:	cmp	r0, r3
   136d8:	str	r5, [r9, #24]
   136dc:	moveq	r3, r0
   136e0:	beq	13710 <find_levels_r+0x208>
   136e4:	bl	13508 <find_levels_r>
   136e8:	ldr	r0, [r9, #84]	; 0x54
   136ec:	bl	13508 <find_levels_r>
   136f0:	ldr	r3, [r9, #84]	; 0x54
   136f4:	ldr	r2, [r9, #60]	; 0x3c
   136f8:	ldr	r3, [r3, #36]	; 0x24
   136fc:	ldr	r2, [r2, #36]	; 0x24
   13700:	cmp	r3, r2
   13704:	movlt	r3, r2
   13708:	add	r3, r3, #1
   1370c:	lsl	r0, r3, #2
   13710:	ldr	r2, [r8]
   13714:	str	r3, [r9, #36]	; 0x24
   13718:	ldr	r3, [r2, r0]
   1371c:	str	r3, [r9, #100]	; 0x64
   13720:	str	r9, [r2, r0]
   13724:	ldr	r9, [r7, #84]	; 0x54
   13728:	ldr	r3, [r9, #24]
   1372c:	cmp	r5, r3
   13730:	beq	13794 <find_levels_r+0x28c>
   13734:	ldr	r0, [r9, #60]	; 0x3c
   13738:	mov	r3, #0
   1373c:	cmp	r0, r3
   13740:	str	r3, [r9, #100]	; 0x64
   13744:	str	r5, [r9, #24]
   13748:	moveq	r3, r0
   1374c:	beq	1377c <find_levels_r+0x274>
   13750:	bl	13508 <find_levels_r>
   13754:	ldr	r0, [r9, #84]	; 0x54
   13758:	bl	13508 <find_levels_r>
   1375c:	ldr	r3, [r9, #84]	; 0x54
   13760:	ldr	r2, [r9, #60]	; 0x3c
   13764:	ldr	r3, [r3, #36]	; 0x24
   13768:	ldr	r2, [r2, #36]	; 0x24
   1376c:	cmp	r3, r2
   13770:	movlt	r3, r2
   13774:	add	r3, r3, #1
   13778:	lsl	r0, r3, #2
   1377c:	ldr	r2, [r8]
   13780:	str	r3, [r9, #36]	; 0x24
   13784:	ldr	r3, [r2, r0]
   13788:	str	r3, [r9, #100]	; 0x64
   1378c:	str	r9, [r2, r0]
   13790:	ldr	r9, [r7, #84]	; 0x54
   13794:	ldr	r3, [r7, #60]	; 0x3c
   13798:	ldr	r2, [r9, #36]	; 0x24
   1379c:	ldr	r3, [r3, #36]	; 0x24
   137a0:	cmp	r3, r2
   137a4:	movlt	r3, r2
   137a8:	add	r3, r3, #1
   137ac:	lsl	r9, r3, #2
   137b0:	ldr	r2, [r8]
   137b4:	str	r3, [r7, #36]	; 0x24
   137b8:	ldr	r3, [r2, r9]
   137bc:	str	r3, [r7, #100]	; 0x64
   137c0:	str	r7, [r2, r9]
   137c4:	ldr	r7, [r6, #84]	; 0x54
   137c8:	ldr	r3, [r6, #60]	; 0x3c
   137cc:	ldr	r2, [r7, #36]	; 0x24
   137d0:	ldr	r3, [r3, #36]	; 0x24
   137d4:	cmp	r3, r2
   137d8:	movlt	r3, r2
   137dc:	add	r3, r3, #1
   137e0:	lsl	r7, r3, #2
   137e4:	ldr	r2, [r8]
   137e8:	str	r3, [r6, #36]	; 0x24
   137ec:	ldr	r3, [r2, r7]
   137f0:	str	r3, [r6, #100]	; 0x64
   137f4:	str	r6, [r2, r7]
   137f8:	ldr	r6, [r4, #84]	; 0x54
   137fc:	ldr	r3, [r6, #24]
   13800:	cmp	r5, r3
   13804:	beq	13ab4 <find_levels_r+0x5ac>
   13808:	ldr	r7, [r6, #60]	; 0x3c
   1380c:	mov	r3, #0
   13810:	cmp	r7, r3
   13814:	str	r3, [r6, #100]	; 0x64
   13818:	str	r5, [r6, #24]
   1381c:	moveq	r3, r7
   13820:	beq	13a9c <find_levels_r+0x594>
   13824:	ldr	r2, [r7, #24]
   13828:	cmp	r5, r2
   1382c:	beq	1394c <find_levels_r+0x444>
   13830:	ldr	r9, [r7, #60]	; 0x3c
   13834:	str	r3, [r7, #100]	; 0x64
   13838:	cmp	r9, r3
   1383c:	str	r5, [r7, #24]
   13840:	moveq	r3, r9
   13844:	beq	13938 <find_levels_r+0x430>
   13848:	ldr	r2, [r9, #24]
   1384c:	cmp	r5, r2
   13850:	beq	138ac <find_levels_r+0x3a4>
   13854:	ldr	r0, [r9, #60]	; 0x3c
   13858:	str	r3, [r9, #100]	; 0x64
   1385c:	cmp	r0, r3
   13860:	str	r5, [r9, #24]
   13864:	moveq	r3, r0
   13868:	beq	13898 <find_levels_r+0x390>
   1386c:	bl	13508 <find_levels_r>
   13870:	ldr	r0, [r9, #84]	; 0x54
   13874:	bl	13508 <find_levels_r>
   13878:	ldr	r3, [r9, #84]	; 0x54
   1387c:	ldr	r2, [r9, #60]	; 0x3c
   13880:	ldr	r3, [r3, #36]	; 0x24
   13884:	ldr	r2, [r2, #36]	; 0x24
   13888:	cmp	r3, r2
   1388c:	movlt	r3, r2
   13890:	add	r3, r3, #1
   13894:	lsl	r0, r3, #2
   13898:	ldr	r2, [r8]
   1389c:	str	r3, [r9, #36]	; 0x24
   138a0:	ldr	r3, [r2, r0]
   138a4:	str	r3, [r9, #100]	; 0x64
   138a8:	str	r9, [r2, r0]
   138ac:	ldr	r9, [r7, #84]	; 0x54
   138b0:	ldr	r3, [r9, #24]
   138b4:	cmp	r5, r3
   138b8:	beq	1391c <find_levels_r+0x414>
   138bc:	ldr	r0, [r9, #60]	; 0x3c
   138c0:	mov	r3, #0
   138c4:	cmp	r0, r3
   138c8:	str	r3, [r9, #100]	; 0x64
   138cc:	str	r5, [r9, #24]
   138d0:	moveq	r3, r0
   138d4:	beq	13904 <find_levels_r+0x3fc>
   138d8:	bl	13508 <find_levels_r>
   138dc:	ldr	r0, [r9, #84]	; 0x54
   138e0:	bl	13508 <find_levels_r>
   138e4:	ldr	r3, [r9, #84]	; 0x54
   138e8:	ldr	r2, [r9, #60]	; 0x3c
   138ec:	ldr	r3, [r3, #36]	; 0x24
   138f0:	ldr	r2, [r2, #36]	; 0x24
   138f4:	cmp	r3, r2
   138f8:	movlt	r3, r2
   138fc:	add	r3, r3, #1
   13900:	lsl	r0, r3, #2
   13904:	ldr	r2, [r8]
   13908:	str	r3, [r9, #36]	; 0x24
   1390c:	ldr	r3, [r2, r0]
   13910:	str	r3, [r9, #100]	; 0x64
   13914:	str	r9, [r2, r0]
   13918:	ldr	r9, [r7, #84]	; 0x54
   1391c:	ldr	r3, [r7, #60]	; 0x3c
   13920:	ldr	r2, [r9, #36]	; 0x24
   13924:	ldr	r3, [r3, #36]	; 0x24
   13928:	cmp	r3, r2
   1392c:	movlt	r3, r2
   13930:	add	r3, r3, #1
   13934:	lsl	r9, r3, #2
   13938:	ldr	r2, [r8]
   1393c:	str	r3, [r7, #36]	; 0x24
   13940:	ldr	r3, [r2, r9]
   13944:	str	r3, [r7, #100]	; 0x64
   13948:	str	r7, [r2, r9]
   1394c:	ldr	r7, [r6, #84]	; 0x54
   13950:	ldr	r3, [r7, #24]
   13954:	cmp	r5, r3
   13958:	beq	13a80 <find_levels_r+0x578>
   1395c:	ldr	r9, [r7, #60]	; 0x3c
   13960:	mov	r3, #0
   13964:	cmp	r9, r3
   13968:	str	r3, [r7, #100]	; 0x64
   1396c:	str	r5, [r7, #24]
   13970:	moveq	r3, r9
   13974:	beq	13a68 <find_levels_r+0x560>
   13978:	ldr	r2, [r9, #24]
   1397c:	cmp	r5, r2
   13980:	beq	139dc <find_levels_r+0x4d4>
   13984:	ldr	r0, [r9, #60]	; 0x3c
   13988:	str	r3, [r9, #100]	; 0x64
   1398c:	cmp	r0, r3
   13990:	str	r5, [r9, #24]
   13994:	moveq	r3, r0
   13998:	beq	139c8 <find_levels_r+0x4c0>
   1399c:	bl	13508 <find_levels_r>
   139a0:	ldr	r0, [r9, #84]	; 0x54
   139a4:	bl	13508 <find_levels_r>
   139a8:	ldr	r3, [r9, #84]	; 0x54
   139ac:	ldr	r2, [r9, #60]	; 0x3c
   139b0:	ldr	r3, [r3, #36]	; 0x24
   139b4:	ldr	r2, [r2, #36]	; 0x24
   139b8:	cmp	r3, r2
   139bc:	movlt	r3, r2
   139c0:	add	r3, r3, #1
   139c4:	lsl	r0, r3, #2
   139c8:	ldr	r2, [r8]
   139cc:	str	r3, [r9, #36]	; 0x24
   139d0:	ldr	r3, [r2, r0]
   139d4:	str	r3, [r9, #100]	; 0x64
   139d8:	str	r9, [r2, r0]
   139dc:	ldr	r9, [r7, #84]	; 0x54
   139e0:	ldr	r3, [r9, #24]
   139e4:	cmp	r5, r3
   139e8:	beq	13a4c <find_levels_r+0x544>
   139ec:	ldr	r0, [r9, #60]	; 0x3c
   139f0:	mov	r3, #0
   139f4:	cmp	r0, r3
   139f8:	str	r3, [r9, #100]	; 0x64
   139fc:	str	r5, [r9, #24]
   13a00:	moveq	r3, r0
   13a04:	beq	13a34 <find_levels_r+0x52c>
   13a08:	bl	13508 <find_levels_r>
   13a0c:	ldr	r0, [r9, #84]	; 0x54
   13a10:	bl	13508 <find_levels_r>
   13a14:	ldr	r3, [r9, #84]	; 0x54
   13a18:	ldr	r2, [r9, #60]	; 0x3c
   13a1c:	ldr	r3, [r3, #36]	; 0x24
   13a20:	ldr	r2, [r2, #36]	; 0x24
   13a24:	cmp	r3, r2
   13a28:	movlt	r3, r2
   13a2c:	add	r3, r3, #1
   13a30:	lsl	r0, r3, #2
   13a34:	ldr	r2, [r8]
   13a38:	str	r3, [r9, #36]	; 0x24
   13a3c:	ldr	r3, [r2, r0]
   13a40:	str	r3, [r9, #100]	; 0x64
   13a44:	str	r9, [r2, r0]
   13a48:	ldr	r9, [r7, #84]	; 0x54
   13a4c:	ldr	r3, [r7, #60]	; 0x3c
   13a50:	ldr	r2, [r9, #36]	; 0x24
   13a54:	ldr	r3, [r3, #36]	; 0x24
   13a58:	cmp	r3, r2
   13a5c:	movlt	r3, r2
   13a60:	add	r3, r3, #1
   13a64:	lsl	r9, r3, #2
   13a68:	ldr	r2, [r8]
   13a6c:	str	r3, [r7, #36]	; 0x24
   13a70:	ldr	r3, [r2, r9]
   13a74:	str	r3, [r7, #100]	; 0x64
   13a78:	str	r7, [r2, r9]
   13a7c:	ldr	r7, [r6, #84]	; 0x54
   13a80:	ldr	r3, [r6, #60]	; 0x3c
   13a84:	ldr	r2, [r7, #36]	; 0x24
   13a88:	ldr	r3, [r3, #36]	; 0x24
   13a8c:	cmp	r3, r2
   13a90:	movlt	r3, r2
   13a94:	add	r3, r3, #1
   13a98:	lsl	r7, r3, #2
   13a9c:	ldr	r2, [r8]
   13aa0:	str	r3, [r6, #36]	; 0x24
   13aa4:	ldr	r3, [r2, r7]
   13aa8:	str	r3, [r6, #100]	; 0x64
   13aac:	str	r6, [r2, r7]
   13ab0:	ldr	r6, [r4, #84]	; 0x54
   13ab4:	ldr	r3, [r4, #60]	; 0x3c
   13ab8:	ldr	r2, [r6, #36]	; 0x24
   13abc:	ldr	r3, [r3, #36]	; 0x24
   13ac0:	cmp	r3, r2
   13ac4:	movlt	r3, r2
   13ac8:	add	r3, r3, #1
   13acc:	lsl	r6, r3, #2
   13ad0:	b	13ae0 <find_levels_r+0x5d8>
   13ad4:	ldr	r2, [pc, #104]	; 13b44 <find_levels_r+0x63c>
   13ad8:	mov	r3, r6
   13adc:	ldr	r8, [r8, r2]
   13ae0:	ldr	r2, [r8]
   13ae4:	str	r3, [r4, #36]	; 0x24
   13ae8:	ldr	r3, [r2, r6]
   13aec:	str	r3, [r4, #100]	; 0x64
   13af0:	str	r4, [r2, r6]
   13af4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13af8:	ldr	r3, [pc, #68]	; 13b44 <find_levels_r+0x63c>
   13afc:	ldr	r8, [r8, r3]
   13b00:	b	137f8 <find_levels_r+0x2f0>
   13b04:	ldr	r2, [pc, #56]	; 13b44 <find_levels_r+0x63c>
   13b08:	mov	r3, r9
   13b0c:	ldr	r8, [r8, r2]
   13b10:	b	13680 <find_levels_r+0x178>
   13b14:	ldr	r2, [pc, #40]	; 13b44 <find_levels_r+0x63c>
   13b18:	mov	r3, r7
   13b1c:	ldr	r8, [r8, r2]
   13b20:	b	137e4 <find_levels_r+0x2dc>
   13b24:	ldr	r3, [pc, #24]	; 13b44 <find_levels_r+0x63c>
   13b28:	ldr	r8, [r8, r3]
   13b2c:	b	13694 <find_levels_r+0x18c>
   13b30:	ldr	r3, [pc, #12]	; 13b44 <find_levels_r+0x63c>
   13b34:	ldr	r8, [r8, r3]
   13b38:	b	135f4 <find_levels_r+0xec>
   13b3c:	.word	0x0002b224
   13b40:	.word	0x0002aad4
   13b44:	.word	0x000000c8

00013b48 <count_stmts>:
   13b48:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b4c:	subs	r4, r0, #0
   13b50:	beq	13ed0 <count_stmts+0x388>
   13b54:	ldr	r3, [pc, #1868]	; 142a8 <count_stmts+0x760>
   13b58:	ldr	r2, [r4, #24]
   13b5c:	add	r3, pc, r3
   13b60:	ldr	r6, [r3, #4]
   13b64:	cmp	r2, r6
   13b68:	beq	13ed0 <count_stmts+0x388>
   13b6c:	ldr	r7, [r4, #60]	; 0x3c
   13b70:	str	r6, [r4, #24]
   13b74:	cmp	r7, #0
   13b78:	beq	13d08 <count_stmts+0x1c0>
   13b7c:	ldr	r3, [r7, #24]
   13b80:	cmp	r6, r3
   13b84:	moveq	r7, #0
   13b88:	beq	13d08 <count_stmts+0x1c0>
   13b8c:	ldr	r5, [r7, #60]	; 0x3c
   13b90:	str	r6, [r7, #24]
   13b94:	cmp	r5, #0
   13b98:	beq	13ed8 <count_stmts+0x390>
   13b9c:	ldr	r3, [r5, #24]
   13ba0:	cmp	r6, r3
   13ba4:	beq	13ed8 <count_stmts+0x390>
   13ba8:	ldr	r8, [r5, #60]	; 0x3c
   13bac:	str	r6, [r5, #24]
   13bb0:	cmp	r8, #0
   13bb4:	beq	14230 <count_stmts+0x6e8>
   13bb8:	ldr	r3, [r8, #24]
   13bbc:	cmp	r6, r3
   13bc0:	beq	14230 <count_stmts+0x6e8>
   13bc4:	str	r6, [r8, #24]
   13bc8:	ldr	r0, [r8, #60]	; 0x3c
   13bcc:	bl	13b48 <count_stmts>
   13bd0:	mov	r9, r0
   13bd4:	ldr	r0, [r8, #84]	; 0x54
   13bd8:	bl	13b48 <count_stmts>
   13bdc:	ldr	r2, [r8, #4]
   13be0:	cmp	r2, #0
   13be4:	add	r0, r9, r0
   13be8:	beq	14278 <count_stmts+0x730>
   13bec:	mov	r1, #0
   13bf0:	ldr	r3, [r2]
   13bf4:	ldr	r2, [r2, #16]
   13bf8:	adds	r3, r3, #1
   13bfc:	movne	r3, #1
   13c00:	cmp	r2, #0
   13c04:	add	r1, r1, r3
   13c08:	bne	13bf0 <count_stmts+0xa8>
   13c0c:	ldr	r9, [r8, #28]
   13c10:	add	r3, r0, r1
   13c14:	add	r3, r3, #1
   13c18:	ldr	r8, [r8, #32]
   13c1c:	add	r3, r3, r9
   13c20:	add	r9, r3, r8
   13c24:	ldr	r8, [r5, #84]	; 0x54
   13c28:	cmp	r8, #0
   13c2c:	beq	13ca0 <count_stmts+0x158>
   13c30:	ldr	r3, [r8, #24]
   13c34:	cmp	r6, r3
   13c38:	moveq	r8, #0
   13c3c:	beq	13ca0 <count_stmts+0x158>
   13c40:	str	r6, [r8, #24]
   13c44:	ldr	r0, [r8, #60]	; 0x3c
   13c48:	bl	13b48 <count_stmts>
   13c4c:	mov	sl, r0
   13c50:	ldr	r0, [r8, #84]	; 0x54
   13c54:	bl	13b48 <count_stmts>
   13c58:	ldr	r2, [r8, #4]
   13c5c:	cmp	r2, #0
   13c60:	add	r0, sl, r0
   13c64:	beq	14268 <count_stmts+0x720>
   13c68:	mov	r3, #0
   13c6c:	ldr	r1, [r2]
   13c70:	ldr	r2, [r2, #16]
   13c74:	adds	r1, r1, #1
   13c78:	movne	r1, #1
   13c7c:	cmp	r2, #0
   13c80:	add	r3, r3, r1
   13c84:	bne	13c6c <count_stmts+0x124>
   13c88:	ldr	r2, [r8, #28]
   13c8c:	add	r3, r0, r3
   13c90:	add	r3, r3, #1
   13c94:	ldr	r8, [r8, #32]
   13c98:	add	r3, r3, r2
   13c9c:	add	r8, r3, r8
   13ca0:	ldr	r3, [r5, #4]
   13ca4:	add	r8, r8, r9
   13ca8:	cmp	r3, #0
   13cac:	beq	14258 <count_stmts+0x710>
   13cb0:	mov	r1, #0
   13cb4:	ldr	r2, [r3]
   13cb8:	ldr	r3, [r3, #16]
   13cbc:	adds	r2, r2, #1
   13cc0:	movne	r2, #1
   13cc4:	cmp	r3, #0
   13cc8:	add	r1, r1, r2
   13ccc:	bne	13cb4 <count_stmts+0x16c>
   13cd0:	add	r3, r8, r1
   13cd4:	ldr	r8, [r5, #28]
   13cd8:	add	r3, r3, #1
   13cdc:	ldr	r5, [r5, #32]
   13ce0:	add	r3, r3, r8
   13ce4:	add	r8, r3, r5
   13ce8:	b	13edc <count_stmts+0x394>
   13cec:	mov	r1, r3
   13cf0:	ldr	r2, [r7, #28]
   13cf4:	add	r3, r5, r1
   13cf8:	add	r3, r3, #1
   13cfc:	ldr	r0, [r7, #32]
   13d00:	add	r3, r3, r2
   13d04:	add	r7, r3, r0
   13d08:	ldr	r5, [r4, #84]	; 0x54
   13d0c:	cmp	r5, #0
   13d10:	beq	13e80 <count_stmts+0x338>
   13d14:	ldr	r3, [r5, #24]
   13d18:	cmp	r6, r3
   13d1c:	beq	13e80 <count_stmts+0x338>
   13d20:	ldr	r8, [r5, #60]	; 0x3c
   13d24:	str	r6, [r5, #24]
   13d28:	cmp	r8, #0
   13d2c:	beq	1406c <count_stmts+0x524>
   13d30:	ldr	r3, [r8, #24]
   13d34:	cmp	r6, r3
   13d38:	beq	1406c <count_stmts+0x524>
   13d3c:	ldr	r9, [r8, #60]	; 0x3c
   13d40:	str	r6, [r8, #24]
   13d44:	cmp	r9, #0
   13d48:	beq	14228 <count_stmts+0x6e0>
   13d4c:	ldr	r3, [r9, #24]
   13d50:	cmp	r6, r3
   13d54:	beq	14228 <count_stmts+0x6e0>
   13d58:	str	r6, [r9, #24]
   13d5c:	ldr	r0, [r9, #60]	; 0x3c
   13d60:	bl	13b48 <count_stmts>
   13d64:	mov	sl, r0
   13d68:	ldr	r0, [r9, #84]	; 0x54
   13d6c:	bl	13b48 <count_stmts>
   13d70:	ldr	r3, [r9, #4]
   13d74:	cmp	r3, #0
   13d78:	add	r0, sl, r0
   13d7c:	beq	142a0 <count_stmts+0x758>
   13d80:	mov	r1, #0
   13d84:	ldr	r2, [r3]
   13d88:	ldr	r3, [r3, #16]
   13d8c:	adds	r2, r2, #1
   13d90:	movne	r2, #1
   13d94:	cmp	r3, #0
   13d98:	add	r1, r1, r2
   13d9c:	bne	13d84 <count_stmts+0x23c>
   13da0:	ldr	sl, [r9, #28]
   13da4:	add	r3, r1, r0
   13da8:	add	r3, r3, #1
   13dac:	ldr	r9, [r9, #32]
   13db0:	add	r3, r3, sl
   13db4:	add	sl, r3, r9
   13db8:	ldr	r9, [r8, #84]	; 0x54
   13dbc:	cmp	r9, #0
   13dc0:	beq	13e34 <count_stmts+0x2ec>
   13dc4:	ldr	r3, [r9, #24]
   13dc8:	cmp	r6, r3
   13dcc:	moveq	r9, #0
   13dd0:	beq	13e34 <count_stmts+0x2ec>
   13dd4:	str	r6, [r9, #24]
   13dd8:	ldr	r0, [r9, #60]	; 0x3c
   13ddc:	bl	13b48 <count_stmts>
   13de0:	mov	fp, r0
   13de4:	ldr	r0, [r9, #84]	; 0x54
   13de8:	bl	13b48 <count_stmts>
   13dec:	ldr	r3, [r9, #4]
   13df0:	cmp	r3, #0
   13df4:	add	r0, fp, r0
   13df8:	beq	14270 <count_stmts+0x728>
   13dfc:	mov	r1, #0
   13e00:	ldr	r2, [r3]
   13e04:	ldr	r3, [r3, #16]
   13e08:	adds	r2, r2, #1
   13e0c:	movne	r2, #1
   13e10:	cmp	r3, #0
   13e14:	add	r1, r1, r2
   13e18:	bne	13e00 <count_stmts+0x2b8>
   13e1c:	ldr	r2, [r9, #28]
   13e20:	add	r3, r0, r1
   13e24:	add	r3, r3, #1
   13e28:	ldr	r9, [r9, #32]
   13e2c:	add	r3, r3, r2
   13e30:	add	r9, r3, r9
   13e34:	ldr	r3, [r8, #4]
   13e38:	add	r9, r9, sl
   13e3c:	cmp	r3, #0
   13e40:	beq	14260 <count_stmts+0x718>
   13e44:	mov	r1, #0
   13e48:	ldr	r2, [r3]
   13e4c:	ldr	r3, [r3, #16]
   13e50:	adds	r2, r2, #1
   13e54:	movne	r2, #1
   13e58:	cmp	r3, #0
   13e5c:	add	r1, r1, r2
   13e60:	bne	13e48 <count_stmts+0x300>
   13e64:	add	r3, r9, r1
   13e68:	ldr	r9, [r8, #28]
   13e6c:	add	r3, r3, #1
   13e70:	ldr	r8, [r8, #32]
   13e74:	add	r3, r3, r9
   13e78:	add	r9, r3, r8
   13e7c:	b	14070 <count_stmts+0x528>
   13e80:	mov	r0, #0
   13e84:	ldr	r3, [r4, #4]
   13e88:	add	r0, r0, r7
   13e8c:	cmp	r3, #0
   13e90:	beq	14238 <count_stmts+0x6f0>
   13e94:	mov	r1, #0
   13e98:	ldr	r2, [r3]
   13e9c:	ldr	r3, [r3, #16]
   13ea0:	adds	r2, r2, #1
   13ea4:	movne	r2, #1
   13ea8:	cmp	r3, #0
   13eac:	add	r1, r1, r2
   13eb0:	bne	13e98 <count_stmts+0x350>
   13eb4:	add	r0, r0, r1
   13eb8:	ldr	r1, [r4, #28]
   13ebc:	add	r0, r0, #1
   13ec0:	ldr	r4, [r4, #32]
   13ec4:	add	r0, r0, r1
   13ec8:	add	r0, r0, r4
   13ecc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ed0:	mov	r0, #0
   13ed4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ed8:	mov	r8, #0
   13edc:	ldr	r5, [r7, #84]	; 0x54
   13ee0:	cmp	r5, #0
   13ee4:	beq	14038 <count_stmts+0x4f0>
   13ee8:	ldr	r3, [r5, #24]
   13eec:	cmp	r6, r3
   13ef0:	moveq	r5, #0
   13ef4:	beq	14038 <count_stmts+0x4f0>
   13ef8:	ldr	r9, [r5, #60]	; 0x3c
   13efc:	str	r6, [r5, #24]
   13f00:	cmp	r9, #0
   13f04:	beq	14218 <count_stmts+0x6d0>
   13f08:	ldr	r3, [r9, #24]
   13f0c:	cmp	r6, r3
   13f10:	beq	14218 <count_stmts+0x6d0>
   13f14:	str	r6, [r9, #24]
   13f18:	ldr	r0, [r9, #60]	; 0x3c
   13f1c:	bl	13b48 <count_stmts>
   13f20:	mov	sl, r0
   13f24:	ldr	r0, [r9, #84]	; 0x54
   13f28:	bl	13b48 <count_stmts>
   13f2c:	ldr	r3, [r9, #4]
   13f30:	cmp	r3, #0
   13f34:	add	r0, sl, r0
   13f38:	beq	14298 <count_stmts+0x750>
   13f3c:	mov	r1, #0
   13f40:	ldr	r2, [r3]
   13f44:	ldr	r3, [r3, #16]
   13f48:	adds	r2, r2, #1
   13f4c:	movne	r2, #1
   13f50:	cmp	r3, #0
   13f54:	add	r1, r1, r2
   13f58:	bne	13f40 <count_stmts+0x3f8>
   13f5c:	ldr	sl, [r9, #28]
   13f60:	add	r3, r0, r1
   13f64:	add	r3, r3, #1
   13f68:	ldr	r9, [r9, #32]
   13f6c:	add	r3, r3, sl
   13f70:	add	sl, r3, r9
   13f74:	ldr	r9, [r5, #84]	; 0x54
   13f78:	cmp	r9, #0
   13f7c:	beq	13ff0 <count_stmts+0x4a8>
   13f80:	ldr	r3, [r9, #24]
   13f84:	cmp	r6, r3
   13f88:	moveq	r9, #0
   13f8c:	beq	13ff0 <count_stmts+0x4a8>
   13f90:	str	r6, [r9, #24]
   13f94:	ldr	r0, [r9, #60]	; 0x3c
   13f98:	bl	13b48 <count_stmts>
   13f9c:	mov	fp, r0
   13fa0:	ldr	r0, [r9, #84]	; 0x54
   13fa4:	bl	13b48 <count_stmts>
   13fa8:	ldr	r3, [r9, #4]
   13fac:	cmp	r3, #0
   13fb0:	add	r0, fp, r0
   13fb4:	beq	14280 <count_stmts+0x738>
   13fb8:	mov	r1, #0
   13fbc:	ldr	r2, [r3]
   13fc0:	ldr	r3, [r3, #16]
   13fc4:	adds	r2, r2, #1
   13fc8:	movne	r2, #1
   13fcc:	cmp	r3, #0
   13fd0:	add	r1, r1, r2
   13fd4:	bne	13fbc <count_stmts+0x474>
   13fd8:	ldr	r2, [r9, #28]
   13fdc:	add	r3, r0, r1
   13fe0:	add	r3, r3, #1
   13fe4:	ldr	r9, [r9, #32]
   13fe8:	add	r3, r3, r2
   13fec:	add	r9, r3, r9
   13ff0:	ldr	r3, [r5, #4]
   13ff4:	add	r9, r9, sl
   13ff8:	cmp	r3, #0
   13ffc:	beq	14250 <count_stmts+0x708>
   14000:	mov	r1, #0
   14004:	ldr	r2, [r3]
   14008:	ldr	r3, [r3, #16]
   1400c:	adds	r2, r2, #1
   14010:	movne	r2, #1
   14014:	cmp	r3, #0
   14018:	add	r1, r1, r2
   1401c:	bne	14004 <count_stmts+0x4bc>
   14020:	ldr	r2, [r5, #28]
   14024:	add	r3, r9, r1
   14028:	add	r3, r3, #1
   1402c:	ldr	r5, [r5, #32]
   14030:	add	r3, r3, r2
   14034:	add	r5, r3, r5
   14038:	ldr	r3, [r7, #4]
   1403c:	add	r5, r5, r8
   14040:	cmp	r3, #0
   14044:	beq	13cec <count_stmts+0x1a4>
   14048:	mov	r1, #0
   1404c:	ldr	r2, [r3]
   14050:	ldr	r3, [r3, #16]
   14054:	adds	r2, r2, #1
   14058:	movne	r2, #1
   1405c:	cmp	r3, #0
   14060:	add	r1, r1, r2
   14064:	bne	1404c <count_stmts+0x504>
   14068:	b	13cf0 <count_stmts+0x1a8>
   1406c:	mov	r9, #0
   14070:	ldr	r8, [r5, #84]	; 0x54
   14074:	cmp	r8, #0
   14078:	beq	141cc <count_stmts+0x684>
   1407c:	ldr	r3, [r8, #24]
   14080:	cmp	r6, r3
   14084:	moveq	r8, #0
   14088:	beq	141cc <count_stmts+0x684>
   1408c:	ldr	sl, [r8, #60]	; 0x3c
   14090:	str	r6, [r8, #24]
   14094:	cmp	sl, #0
   14098:	beq	1410c <count_stmts+0x5c4>
   1409c:	ldr	r3, [sl, #24]
   140a0:	cmp	r6, r3
   140a4:	moveq	sl, #0
   140a8:	beq	1410c <count_stmts+0x5c4>
   140ac:	str	r6, [sl, #24]
   140b0:	ldr	r0, [sl, #60]	; 0x3c
   140b4:	bl	13b48 <count_stmts>
   140b8:	mov	fp, r0
   140bc:	ldr	r0, [sl, #84]	; 0x54
   140c0:	bl	13b48 <count_stmts>
   140c4:	ldr	r3, [sl, #4]
   140c8:	cmp	r3, #0
   140cc:	add	r0, fp, r0
   140d0:	beq	14290 <count_stmts+0x748>
   140d4:	mov	r1, #0
   140d8:	ldr	r2, [r3]
   140dc:	ldr	r3, [r3, #16]
   140e0:	adds	r2, r2, #1
   140e4:	movne	r2, #1
   140e8:	cmp	r3, #0
   140ec:	add	r1, r1, r2
   140f0:	bne	140d8 <count_stmts+0x590>
   140f4:	ldr	r2, [sl, #28]
   140f8:	add	r3, r0, r1
   140fc:	add	r3, r3, #1
   14100:	ldr	sl, [sl, #32]
   14104:	add	r3, r3, r2
   14108:	add	sl, r3, sl
   1410c:	ldr	fp, [r8, #84]	; 0x54
   14110:	cmp	fp, #0
   14114:	beq	14220 <count_stmts+0x6d8>
   14118:	ldr	r3, [fp, #24]
   1411c:	cmp	r6, r3
   14120:	beq	14220 <count_stmts+0x6d8>
   14124:	str	r6, [fp, #24]
   14128:	ldr	r0, [fp, #60]	; 0x3c
   1412c:	bl	13b48 <count_stmts>
   14130:	mov	r6, r0
   14134:	ldr	r0, [fp, #84]	; 0x54
   14138:	bl	13b48 <count_stmts>
   1413c:	ldr	r3, [fp, #4]
   14140:	cmp	r3, #0
   14144:	add	r0, r6, r0
   14148:	beq	14288 <count_stmts+0x740>
   1414c:	mov	r1, #0
   14150:	ldr	r2, [r3]
   14154:	ldr	r3, [r3, #16]
   14158:	adds	r2, r2, #1
   1415c:	movne	r2, #1
   14160:	cmp	r3, #0
   14164:	add	r1, r1, r2
   14168:	bne	14150 <count_stmts+0x608>
   1416c:	add	r3, r0, r1
   14170:	ldr	r2, [fp, #28]
   14174:	ldr	r1, [fp, #32]
   14178:	add	r3, r3, #1
   1417c:	add	fp, r3, r2
   14180:	add	r1, fp, r1
   14184:	ldr	r3, [r8, #4]
   14188:	add	sl, r1, sl
   1418c:	cmp	r3, #0
   14190:	beq	14248 <count_stmts+0x700>
   14194:	mov	r1, #0
   14198:	ldr	r2, [r3]
   1419c:	ldr	r3, [r3, #16]
   141a0:	adds	r2, r2, #1
   141a4:	movne	r2, #1
   141a8:	cmp	r3, #0
   141ac:	add	r1, r1, r2
   141b0:	bne	14198 <count_stmts+0x650>
   141b4:	ldr	r3, [r8, #28]
   141b8:	add	r1, sl, r1
   141bc:	add	r1, r1, #1
   141c0:	ldr	r8, [r8, #32]
   141c4:	add	r1, r1, r3
   141c8:	add	r8, r1, r8
   141cc:	ldr	r3, [r5, #4]
   141d0:	add	r8, r8, r9
   141d4:	cmp	r3, #0
   141d8:	beq	14240 <count_stmts+0x6f8>
   141dc:	mov	r1, #0
   141e0:	ldr	r2, [r3]
   141e4:	ldr	r3, [r3, #16]
   141e8:	adds	r2, r2, #1
   141ec:	movne	r2, #1
   141f0:	cmp	r3, #0
   141f4:	add	r1, r1, r2
   141f8:	bne	141e0 <count_stmts+0x698>
   141fc:	add	r1, r8, r1
   14200:	ldr	r3, [r5, #28]
   14204:	ldr	r0, [r5, #32]
   14208:	add	r1, r1, #1
   1420c:	add	r5, r1, r3
   14210:	add	r0, r5, r0
   14214:	b	13e84 <count_stmts+0x33c>
   14218:	mov	sl, #0
   1421c:	b	13f74 <count_stmts+0x42c>
   14220:	mov	r1, #0
   14224:	b	14184 <count_stmts+0x63c>
   14228:	mov	sl, #0
   1422c:	b	13db8 <count_stmts+0x270>
   14230:	mov	r9, #0
   14234:	b	13c24 <count_stmts+0xdc>
   14238:	mov	r1, r3
   1423c:	b	13eb4 <count_stmts+0x36c>
   14240:	mov	r1, r3
   14244:	b	141fc <count_stmts+0x6b4>
   14248:	mov	r1, r3
   1424c:	b	141b4 <count_stmts+0x66c>
   14250:	mov	r1, r3
   14254:	b	14020 <count_stmts+0x4d8>
   14258:	mov	r1, r3
   1425c:	b	13cd0 <count_stmts+0x188>
   14260:	mov	r1, r3
   14264:	b	13e64 <count_stmts+0x31c>
   14268:	mov	r3, r2
   1426c:	b	13c88 <count_stmts+0x140>
   14270:	mov	r1, r3
   14274:	b	13e1c <count_stmts+0x2d4>
   14278:	mov	r1, r2
   1427c:	b	13c0c <count_stmts+0xc4>
   14280:	mov	r1, r3
   14284:	b	13fd8 <count_stmts+0x490>
   14288:	mov	r1, r3
   1428c:	b	1416c <count_stmts+0x624>
   14290:	mov	r1, r3
   14294:	b	140f4 <count_stmts+0x5ac>
   14298:	mov	r1, r3
   1429c:	b	13f5c <count_stmts+0x414>
   142a0:	mov	r1, r3
   142a4:	b	13da0 <count_stmts+0x258>
   142a8:	.word	0x0002abd8

000142ac <opt_stmt>:
   142ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   142b0:	mov	r4, r1
   142b4:	ldr	r6, [pc, #3936]	; 1521c <opt_stmt+0xf70>
   142b8:	ldr	r1, [r0]
   142bc:	mov	r5, r0
   142c0:	add	r6, pc, r6
   142c4:	cmp	r1, #177	; 0xb1
   142c8:	addls	pc, pc, r1, lsl #2
   142cc:	b	14598 <opt_stmt+0x2ec>
   142d0:	b	14618 <opt_stmt+0x36c>
   142d4:	b	14690 <opt_stmt+0x3e4>
   142d8:	b	14704 <opt_stmt+0x458>
   142dc:	b	14728 <opt_stmt+0x47c>
   142e0:	b	1473c <opt_stmt+0x490>
   142e4:	b	14598 <opt_stmt+0x2ec>
   142e8:	b	14598 <opt_stmt+0x2ec>
   142ec:	b	14884 <opt_stmt+0x5d8>
   142f0:	b	14598 <opt_stmt+0x2ec>
   142f4:	b	14598 <opt_stmt+0x2ec>
   142f8:	b	14598 <opt_stmt+0x2ec>
   142fc:	b	14598 <opt_stmt+0x2ec>
   14300:	b	148a4 <opt_stmt+0x5f8>
   14304:	b	14598 <opt_stmt+0x2ec>
   14308:	b	14598 <opt_stmt+0x2ec>
   1430c:	b	14598 <opt_stmt+0x2ec>
   14310:	b	14598 <opt_stmt+0x2ec>
   14314:	b	14598 <opt_stmt+0x2ec>
   14318:	b	14598 <opt_stmt+0x2ec>
   1431c:	b	14598 <opt_stmt+0x2ec>
   14320:	b	1473c <opt_stmt+0x490>
   14324:	b	14598 <opt_stmt+0x2ec>
   14328:	b	14598 <opt_stmt+0x2ec>
   1432c:	b	14598 <opt_stmt+0x2ec>
   14330:	b	14598 <opt_stmt+0x2ec>
   14334:	b	14598 <opt_stmt+0x2ec>
   14338:	b	14598 <opt_stmt+0x2ec>
   1433c:	b	14598 <opt_stmt+0x2ec>
   14340:	b	148a4 <opt_stmt+0x5f8>
   14344:	b	14598 <opt_stmt+0x2ec>
   14348:	b	14598 <opt_stmt+0x2ec>
   1434c:	b	14598 <opt_stmt+0x2ec>
   14350:	b	14964 <opt_stmt+0x6b8>
   14354:	b	14598 <opt_stmt+0x2ec>
   14358:	b	14598 <opt_stmt+0x2ec>
   1435c:	b	14598 <opt_stmt+0x2ec>
   14360:	b	1473c <opt_stmt+0x490>
   14364:	b	14598 <opt_stmt+0x2ec>
   14368:	b	14598 <opt_stmt+0x2ec>
   1436c:	b	14598 <opt_stmt+0x2ec>
   14370:	b	14964 <opt_stmt+0x6b8>
   14374:	b	14598 <opt_stmt+0x2ec>
   14378:	b	14598 <opt_stmt+0x2ec>
   1437c:	b	14598 <opt_stmt+0x2ec>
   14380:	b	148a4 <opt_stmt+0x5f8>
   14384:	b	14598 <opt_stmt+0x2ec>
   14388:	b	14598 <opt_stmt+0x2ec>
   1438c:	b	14598 <opt_stmt+0x2ec>
   14390:	b	14964 <opt_stmt+0x6b8>
   14394:	b	14598 <opt_stmt+0x2ec>
   14398:	b	14598 <opt_stmt+0x2ec>
   1439c:	b	14598 <opt_stmt+0x2ec>
   143a0:	b	1473c <opt_stmt+0x490>
   143a4:	b	14598 <opt_stmt+0x2ec>
   143a8:	b	14598 <opt_stmt+0x2ec>
   143ac:	b	14598 <opt_stmt+0x2ec>
   143b0:	b	14598 <opt_stmt+0x2ec>
   143b4:	b	14598 <opt_stmt+0x2ec>
   143b8:	b	14598 <opt_stmt+0x2ec>
   143bc:	b	14598 <opt_stmt+0x2ec>
   143c0:	b	148a4 <opt_stmt+0x5f8>
   143c4:	b	14598 <opt_stmt+0x2ec>
   143c8:	b	14598 <opt_stmt+0x2ec>
   143cc:	b	14598 <opt_stmt+0x2ec>
   143d0:	b	14b44 <opt_stmt+0x898>
   143d4:	b	14598 <opt_stmt+0x2ec>
   143d8:	b	14598 <opt_stmt+0x2ec>
   143dc:	b	14598 <opt_stmt+0x2ec>
   143e0:	b	1473c <opt_stmt+0x490>
   143e4:	b	14598 <opt_stmt+0x2ec>
   143e8:	b	14598 <opt_stmt+0x2ec>
   143ec:	b	14598 <opt_stmt+0x2ec>
   143f0:	b	14b44 <opt_stmt+0x898>
   143f4:	b	14598 <opt_stmt+0x2ec>
   143f8:	b	14598 <opt_stmt+0x2ec>
   143fc:	b	14598 <opt_stmt+0x2ec>
   14400:	b	148a4 <opt_stmt+0x5f8>
   14404:	b	14598 <opt_stmt+0x2ec>
   14408:	b	14598 <opt_stmt+0x2ec>
   1440c:	b	14598 <opt_stmt+0x2ec>
   14410:	b	14b44 <opt_stmt+0x898>
   14414:	b	14598 <opt_stmt+0x2ec>
   14418:	b	14598 <opt_stmt+0x2ec>
   1441c:	b	14598 <opt_stmt+0x2ec>
   14420:	b	1473c <opt_stmt+0x490>
   14424:	b	14598 <opt_stmt+0x2ec>
   14428:	b	14598 <opt_stmt+0x2ec>
   1442c:	b	14598 <opt_stmt+0x2ec>
   14430:	b	14598 <opt_stmt+0x2ec>
   14434:	b	14598 <opt_stmt+0x2ec>
   14438:	b	14598 <opt_stmt+0x2ec>
   1443c:	b	14598 <opt_stmt+0x2ec>
   14440:	b	148a4 <opt_stmt+0x5f8>
   14444:	b	14598 <opt_stmt+0x2ec>
   14448:	b	14598 <opt_stmt+0x2ec>
   1444c:	b	14598 <opt_stmt+0x2ec>
   14450:	b	14c00 <opt_stmt+0x954>
   14454:	b	149dc <opt_stmt+0x730>
   14458:	b	14598 <opt_stmt+0x2ec>
   1445c:	b	14598 <opt_stmt+0x2ec>
   14460:	b	1473c <opt_stmt+0x490>
   14464:	b	14598 <opt_stmt+0x2ec>
   14468:	b	14598 <opt_stmt+0x2ec>
   1446c:	b	14598 <opt_stmt+0x2ec>
   14470:	b	14598 <opt_stmt+0x2ec>
   14474:	b	14598 <opt_stmt+0x2ec>
   14478:	b	14598 <opt_stmt+0x2ec>
   1447c:	b	14598 <opt_stmt+0x2ec>
   14480:	b	148a4 <opt_stmt+0x5f8>
   14484:	b	14598 <opt_stmt+0x2ec>
   14488:	b	14598 <opt_stmt+0x2ec>
   1448c:	b	14598 <opt_stmt+0x2ec>
   14490:	b	14598 <opt_stmt+0x2ec>
   14494:	b	14598 <opt_stmt+0x2ec>
   14498:	b	14598 <opt_stmt+0x2ec>
   1449c:	b	14598 <opt_stmt+0x2ec>
   144a0:	b	1473c <opt_stmt+0x490>
   144a4:	b	14598 <opt_stmt+0x2ec>
   144a8:	b	14598 <opt_stmt+0x2ec>
   144ac:	b	14598 <opt_stmt+0x2ec>
   144b0:	b	14598 <opt_stmt+0x2ec>
   144b4:	b	14598 <opt_stmt+0x2ec>
   144b8:	b	14598 <opt_stmt+0x2ec>
   144bc:	b	14598 <opt_stmt+0x2ec>
   144c0:	b	148a4 <opt_stmt+0x5f8>
   144c4:	b	14598 <opt_stmt+0x2ec>
   144c8:	b	14598 <opt_stmt+0x2ec>
   144cc:	b	14598 <opt_stmt+0x2ec>
   144d0:	b	14a34 <opt_stmt+0x788>
   144d4:	b	14598 <opt_stmt+0x2ec>
   144d8:	b	14598 <opt_stmt+0x2ec>
   144dc:	b	14598 <opt_stmt+0x2ec>
   144e0:	b	14a84 <opt_stmt+0x7d8>
   144e4:	b	14598 <opt_stmt+0x2ec>
   144e8:	b	14598 <opt_stmt+0x2ec>
   144ec:	b	14b24 <opt_stmt+0x878>
   144f0:	b	14598 <opt_stmt+0x2ec>
   144f4:	b	14598 <opt_stmt+0x2ec>
   144f8:	b	14598 <opt_stmt+0x2ec>
   144fc:	b	14598 <opt_stmt+0x2ec>
   14500:	b	14598 <opt_stmt+0x2ec>
   14504:	b	14598 <opt_stmt+0x2ec>
   14508:	b	14598 <opt_stmt+0x2ec>
   1450c:	b	14598 <opt_stmt+0x2ec>
   14510:	b	14598 <opt_stmt+0x2ec>
   14514:	b	14598 <opt_stmt+0x2ec>
   14518:	b	14598 <opt_stmt+0x2ec>
   1451c:	b	14598 <opt_stmt+0x2ec>
   14520:	b	14598 <opt_stmt+0x2ec>
   14524:	b	14598 <opt_stmt+0x2ec>
   14528:	b	14598 <opt_stmt+0x2ec>
   1452c:	b	14598 <opt_stmt+0x2ec>
   14530:	b	14598 <opt_stmt+0x2ec>
   14534:	b	14598 <opt_stmt+0x2ec>
   14538:	b	14598 <opt_stmt+0x2ec>
   1453c:	b	14598 <opt_stmt+0x2ec>
   14540:	b	14598 <opt_stmt+0x2ec>
   14544:	b	14598 <opt_stmt+0x2ec>
   14548:	b	14598 <opt_stmt+0x2ec>
   1454c:	b	14598 <opt_stmt+0x2ec>
   14550:	b	14598 <opt_stmt+0x2ec>
   14554:	b	14598 <opt_stmt+0x2ec>
   14558:	b	14598 <opt_stmt+0x2ec>
   1455c:	b	14598 <opt_stmt+0x2ec>
   14560:	b	14598 <opt_stmt+0x2ec>
   14564:	b	14598 <opt_stmt+0x2ec>
   14568:	b	14598 <opt_stmt+0x2ec>
   1456c:	b	14598 <opt_stmt+0x2ec>
   14570:	b	14598 <opt_stmt+0x2ec>
   14574:	b	14598 <opt_stmt+0x2ec>
   14578:	b	14598 <opt_stmt+0x2ec>
   1457c:	b	14598 <opt_stmt+0x2ec>
   14580:	b	14598 <opt_stmt+0x2ec>
   14584:	b	14598 <opt_stmt+0x2ec>
   14588:	b	14598 <opt_stmt+0x2ec>
   1458c:	b	14598 <opt_stmt+0x2ec>
   14590:	b	14598 <opt_stmt+0x2ec>
   14594:	b	1459c <opt_stmt+0x2f0>
   14598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1459c:	ldr	ip, [r0, #12]
   145a0:	ldr	r3, [pc, #3332]	; 152ac <opt_stmt+0x1000>
   145a4:	mov	lr, #213	; 0xd5
   145a8:	lsl	r0, ip, #4
   145ac:	eor	r0, r0, #177	; 0xb1
   145b0:	ldr	r1, [pc, #3176]	; 15220 <opt_stmt+0xf74>
   145b4:	umull	r7, r3, r3, r0
   145b8:	add	r1, pc, r1
   145bc:	lsr	r3, r3, #7
   145c0:	mul	r3, lr, r3
   145c4:	sub	r3, r0, r3
   145c8:	lsl	r0, r3, #2
   145cc:	add	r3, r1, r0
   145d0:	ldr	r3, [r3, #44]	; 0x2c
   145d4:	cmp	r3, #0
   145d8:	bne	145ec <opt_stmt+0x340>
   145dc:	b	14d80 <opt_stmt+0xad4>
   145e0:	ldr	r3, [r3, #16]
   145e4:	cmp	r3, #0
   145e8:	beq	14d80 <opt_stmt+0xad4>
   145ec:	ldr	r1, [r3]
   145f0:	cmp	r1, #177	; 0xb1
   145f4:	bne	145e0 <opt_stmt+0x334>
   145f8:	ldr	r1, [r3, #4]
   145fc:	cmp	ip, r1
   14600:	bne	145e0 <opt_stmt+0x334>
   14604:	ldr	r1, [r3, #8]
   14608:	cmp	r1, #0
   1460c:	bne	145e0 <opt_stmt+0x334>
   14610:	ldr	lr, [r3, #12]
   14614:	b	14dd0 <opt_stmt+0xb24>
   14618:	ldr	ip, [r0, #12]
   1461c:	ldr	r3, [pc, #3208]	; 152ac <opt_stmt+0x1000>
   14620:	mov	lr, #213	; 0xd5
   14624:	lsl	r0, ip, #4
   14628:	ldr	r1, [pc, #3060]	; 15224 <opt_stmt+0xf78>
   1462c:	umull	r7, r3, r3, r0
   14630:	add	r1, pc, r1
   14634:	lsr	r3, r3, #7
   14638:	mul	r3, lr, r3
   1463c:	sub	r3, r0, r3
   14640:	lsl	r0, r3, #2
   14644:	add	r3, r1, r0
   14648:	ldr	r3, [r3, #44]	; 0x2c
   1464c:	cmp	r3, #0
   14650:	bne	14664 <opt_stmt+0x3b8>
   14654:	b	14d00 <opt_stmt+0xa54>
   14658:	ldr	r3, [r3, #16]
   1465c:	cmp	r3, #0
   14660:	beq	14d00 <opt_stmt+0xa54>
   14664:	ldr	r1, [r3]
   14668:	cmp	r1, #0
   1466c:	bne	14658 <opt_stmt+0x3ac>
   14670:	ldr	r1, [r3, #4]
   14674:	cmp	ip, r1
   14678:	bne	14658 <opt_stmt+0x3ac>
   1467c:	ldr	r1, [r3, #8]
   14680:	cmp	r1, #0
   14684:	bne	14658 <opt_stmt+0x3ac>
   14688:	ldr	lr, [r3, #12]
   1468c:	b	14d68 <opt_stmt+0xabc>
   14690:	ldr	ip, [r0, #12]
   14694:	ldr	r3, [pc, #3088]	; 152ac <opt_stmt+0x1000>
   14698:	mov	lr, #213	; 0xd5
   1469c:	lsl	r0, ip, #4
   146a0:	ldr	r1, [pc, #2944]	; 15228 <opt_stmt+0xf7c>
   146a4:	umull	r7, r3, r3, r0
   146a8:	add	r1, pc, r1
   146ac:	lsr	r3, r3, #7
   146b0:	mul	r3, lr, r3
   146b4:	sub	r3, r0, r3
   146b8:	lsl	r0, r3, #2
   146bc:	add	r3, r1, r0
   146c0:	ldr	r3, [r3, #44]	; 0x2c
   146c4:	cmp	r3, #0
   146c8:	bne	146dc <opt_stmt+0x430>
   146cc:	b	14e54 <opt_stmt+0xba8>
   146d0:	ldr	r3, [r3, #16]
   146d4:	cmp	r3, #0
   146d8:	beq	14e54 <opt_stmt+0xba8>
   146dc:	ldr	r1, [r3]
   146e0:	cmp	r1, #0
   146e4:	bne	146d0 <opt_stmt+0x424>
   146e8:	ldr	r1, [r3, #4]
   146ec:	cmp	ip, r1
   146f0:	bne	146d0 <opt_stmt+0x424>
   146f4:	ldr	r1, [r3, #8]
   146f8:	cmp	r1, #0
   146fc:	bne	146d0 <opt_stmt+0x424>
   14700:	b	14610 <opt_stmt+0x364>
   14704:	cmp	r2, #0
   14708:	ldr	r3, [r0, #12]
   1470c:	ldr	r2, [r4, #64]	; 0x40
   14710:	beq	14720 <opt_stmt+0x474>
   14714:	ldr	r1, [r4, r3, lsl #2]
   14718:	cmp	r2, r1
   1471c:	beq	14c94 <opt_stmt+0x9e8>
   14720:	str	r2, [r4, r3, lsl #2]
   14724:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14728:	cmp	r2, #0
   1472c:	ldr	r3, [r0, #12]
   14730:	ldr	r2, [r4, #68]	; 0x44
   14734:	beq	14720 <opt_stmt+0x474>
   14738:	b	14714 <opt_stmt+0x468>
   1473c:	cmp	r2, #0
   14740:	ldr	lr, [r0, #12]
   14744:	beq	14f48 <opt_stmt+0xc9c>
   14748:	cmp	lr, #0
   1474c:	bne	1477c <opt_stmt+0x4d0>
   14750:	and	r3, r1, #224	; 0xe0
   14754:	and	r2, r1, #176	; 0xb0
   14758:	cmp	r2, #0
   1475c:	cmpne	r3, #96	; 0x60
   14760:	moveq	r3, #1
   14764:	movne	r3, #0
   14768:	beq	14c94 <opt_stmt+0x9e8>
   1476c:	and	r2, r1, #240	; 0xf0
   14770:	cmp	r2, #80	; 0x50
   14774:	cmpne	r2, #32
   14778:	beq	15868 <opt_stmt+0x15bc>
   1477c:	ldr	r3, [pc, #2892]	; 152d0 <opt_stmt+0x1024>
   14780:	ldr	r2, [r4, #64]	; 0x40
   14784:	ldr	r7, [r6, r3]
   14788:	ldr	ip, [r7]
   1478c:	ldr	r3, [ip, r2, lsl #3]
   14790:	cmp	r3, #0
   14794:	bne	153d0 <opt_stmt+0x1124>
   14798:	ldr	r3, [pc, #2828]	; 152ac <opt_stmt+0x1000>
   1479c:	lsl	ip, lr, #4
   147a0:	mov	r5, #213	; 0xd5
   147a4:	umull	r0, r3, r3, ip
   147a8:	ldr	r0, [pc, #2684]	; 1522c <opt_stmt+0xf80>
   147ac:	lsr	r3, r3, #7
   147b0:	add	r0, pc, r0
   147b4:	mul	r3, r5, r3
   147b8:	sub	r3, ip, r3
   147bc:	lsl	ip, r3, #2
   147c0:	add	r3, r0, ip
   147c4:	ldr	r3, [r3, #44]	; 0x2c
   147c8:	cmp	r3, #0
   147cc:	bne	147e0 <opt_stmt+0x534>
   147d0:	b	15058 <opt_stmt+0xdac>
   147d4:	ldr	r3, [r3, #16]
   147d8:	cmp	r3, #0
   147dc:	beq	15058 <opt_stmt+0xdac>
   147e0:	ldr	r0, [r3]
   147e4:	cmp	r0, #0
   147e8:	bne	147d4 <opt_stmt+0x528>
   147ec:	ldr	r0, [r3, #4]
   147f0:	cmp	lr, r0
   147f4:	bne	147d4 <opt_stmt+0x528>
   147f8:	ldr	r0, [r3, #8]
   147fc:	cmp	r0, #0
   14800:	bne	147d4 <opt_stmt+0x528>
   14804:	ldr	r5, [r3, #12]
   14808:	eor	r0, r1, r2, lsl #4
   1480c:	ldr	r3, [pc, #2712]	; 152ac <opt_stmt+0x1000>
   14810:	eor	r0, r0, r5, lsl #8
   14814:	mov	ip, #213	; 0xd5
   14818:	umull	lr, r3, r3, r0
   1481c:	ldr	lr, [pc, #2572]	; 15230 <opt_stmt+0xf84>
   14820:	lsr	r3, r3, #7
   14824:	add	lr, pc, lr
   14828:	mul	r3, ip, r3
   1482c:	sub	r3, r0, r3
   14830:	lsl	ip, r3, #2
   14834:	add	r3, lr, ip
   14838:	ldr	r3, [r3, #44]	; 0x2c
   1483c:	cmp	r3, #0
   14840:	bne	14854 <opt_stmt+0x5a8>
   14844:	b	14ff8 <opt_stmt+0xd4c>
   14848:	ldr	r3, [r3, #16]
   1484c:	cmp	r3, #0
   14850:	beq	14ff8 <opt_stmt+0xd4c>
   14854:	ldr	r0, [r3]
   14858:	cmp	r1, r0
   1485c:	bne	14848 <opt_stmt+0x59c>
   14860:	ldr	r0, [r3, #4]
   14864:	cmp	r2, r0
   14868:	bne	14848 <opt_stmt+0x59c>
   1486c:	ldr	r0, [r3, #8]
   14870:	cmp	r0, r5
   14874:	bne	14848 <opt_stmt+0x59c>
   14878:	ldr	lr, [r3, #12]
   1487c:	str	lr, [r4, #64]	; 0x40
   14880:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14884:	cmp	r2, #0
   14888:	ldr	r3, [r4, #64]	; 0x40
   1488c:	beq	1489c <opt_stmt+0x5f0>
   14890:	ldr	r2, [r4, #68]	; 0x44
   14894:	cmp	r3, r2
   14898:	beq	14c94 <opt_stmt+0x9e8>
   1489c:	str	r3, [r4, #68]	; 0x44
   148a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148a4:	cmp	r2, #0
   148a8:	beq	14ec0 <opt_stmt+0xc14>
   148ac:	ldr	r2, [pc, #2588]	; 152d0 <opt_stmt+0x1024>
   148b0:	ldr	r3, [r4, #68]	; 0x44
   148b4:	and	ip, r1, #240	; 0xf0
   148b8:	ldr	r7, [r6, r2]
   148bc:	ldr	r0, [r7]
   148c0:	ldr	r2, [r0, r3, lsl #3]
   148c4:	cmp	r2, #0
   148c8:	beq	14c54 <opt_stmt+0x9a8>
   148cc:	ldr	r2, [r4, #64]	; 0x40
   148d0:	ldr	r0, [r0, r2, lsl #3]
   148d4:	cmp	r0, #0
   148d8:	beq	15584 <opt_stmt+0x12d8>
   148dc:	add	r1, r5, #12
   148e0:	mov	r0, r5
   148e4:	bl	1227c <fold_op.isra.10>
   148e8:	ldr	r0, [r5, #12]
   148ec:	ldr	r3, [pc, #2488]	; 152ac <opt_stmt+0x1000>
   148f0:	mov	ip, #213	; 0xd5
   148f4:	lsl	r1, r0, #4
   148f8:	ldr	r2, [pc, #2356]	; 15234 <opt_stmt+0xf88>
   148fc:	umull	lr, r3, r3, r1
   14900:	add	r2, pc, r2
   14904:	lsr	r3, r3, #7
   14908:	mul	r3, ip, r3
   1490c:	sub	r3, r1, r3
   14910:	lsl	r1, r3, #2
   14914:	add	r3, r2, r1
   14918:	ldr	r3, [r3, #44]	; 0x2c
   1491c:	cmp	r3, #0
   14920:	bne	14934 <opt_stmt+0x688>
   14924:	b	15738 <opt_stmt+0x148c>
   14928:	ldr	r3, [r3, #16]
   1492c:	cmp	r3, #0
   14930:	beq	15738 <opt_stmt+0x148c>
   14934:	ldr	r2, [r3]
   14938:	cmp	r2, #0
   1493c:	bne	14928 <opt_stmt+0x67c>
   14940:	ldr	r2, [r3, #4]
   14944:	cmp	r0, r2
   14948:	bne	14928 <opt_stmt+0x67c>
   1494c:	ldr	r2, [r3, #8]
   14950:	cmp	r2, #0
   14954:	bne	14928 <opt_stmt+0x67c>
   14958:	ldr	r2, [r3, #12]
   1495c:	str	r2, [r4, #64]	; 0x40
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14964:	ldr	lr, [r0, #12]
   14968:	ldr	r3, [pc, #2364]	; 152ac <opt_stmt+0x1000>
   1496c:	mov	r7, #213	; 0xd5
   14970:	eor	ip, r1, lr, lsl #4
   14974:	ldr	r0, [pc, #2236]	; 15238 <opt_stmt+0xf8c>
   14978:	umull	r8, r3, r3, ip
   1497c:	add	r0, pc, r0
   14980:	lsr	r3, r3, #7
   14984:	mul	r3, r7, r3
   14988:	sub	r3, ip, r3
   1498c:	lsl	ip, r3, #2
   14990:	add	r3, r0, ip
   14994:	ldr	r3, [r3, #44]	; 0x2c
   14998:	cmp	r3, #0
   1499c:	bne	149b0 <opt_stmt+0x704>
   149a0:	b	14dec <opt_stmt+0xb40>
   149a4:	ldr	r3, [r3, #16]
   149a8:	cmp	r3, #0
   149ac:	beq	14dec <opt_stmt+0xb40>
   149b0:	ldr	r0, [r3]
   149b4:	cmp	r1, r0
   149b8:	bne	149a4 <opt_stmt+0x6f8>
   149bc:	ldr	r0, [r3, #4]
   149c0:	cmp	lr, r0
   149c4:	bne	149a4 <opt_stmt+0x6f8>
   149c8:	ldr	r0, [r3, #8]
   149cc:	cmp	r0, #0
   149d0:	bne	149a4 <opt_stmt+0x6f8>
   149d4:	ldr	r8, [r3, #12]
   149d8:	b	14e38 <opt_stmt+0xb8c>
   149dc:	ldr	r3, [r0, #12]
   149e0:	cmp	r2, #0
   149e4:	ldr	r3, [r4, r3, lsl #2]
   149e8:	beq	1489c <opt_stmt+0x5f0>
   149ec:	ldr	r2, [pc, #2268]	; 152d0 <opt_stmt+0x1024>
   149f0:	lsl	r0, r3, #3
   149f4:	ldr	r2, [r6, r2]
   149f8:	ldr	r1, [r2]
   149fc:	ldr	r1, [r1, r3, lsl #3]
   14a00:	cmp	r1, #0
   14a04:	beq	14890 <opt_stmt+0x5e4>
   14a08:	mov	r1, #1
   14a0c:	str	r1, [r5]
   14a10:	ldr	r1, [r2]
   14a14:	ldr	r2, [pc, #2080]	; 1523c <opt_stmt+0xf90>
   14a18:	add	r1, r1, r0
   14a1c:	add	r2, pc, r2
   14a20:	ldr	r1, [r1, #4]
   14a24:	mov	r0, #0
   14a28:	str	r0, [r2]
   14a2c:	str	r1, [r5, #12]
   14a30:	b	14890 <opt_stmt+0x5e4>
   14a34:	ldr	r3, [pc, #2052]	; 15240 <opt_stmt+0xf94>
   14a38:	add	r3, pc, r3
   14a3c:	ldr	r3, [r3, #556]	; 0x22c
   14a40:	cmp	r3, #0
   14a44:	bne	14a58 <opt_stmt+0x7ac>
   14a48:	b	14ca0 <opt_stmt+0x9f4>
   14a4c:	ldr	r3, [r3, #16]
   14a50:	cmp	r3, #0
   14a54:	beq	14ca0 <opt_stmt+0x9f4>
   14a58:	ldr	r1, [r3]
   14a5c:	cmp	r1, #128	; 0x80
   14a60:	bne	14a4c <opt_stmt+0x7a0>
   14a64:	ldr	r1, [r3, #4]
   14a68:	cmp	r1, #0
   14a6c:	bne	14a4c <opt_stmt+0x7a0>
   14a70:	ldr	r1, [r3, #8]
   14a74:	cmp	r1, #0
   14a78:	bne	14a4c <opt_stmt+0x7a0>
   14a7c:	ldr	r1, [r3, #12]
   14a80:	b	14ce8 <opt_stmt+0xa3c>
   14a84:	cmp	r2, #0
   14a88:	beq	14f50 <opt_stmt+0xca4>
   14a8c:	ldr	r3, [pc, #2108]	; 152d0 <opt_stmt+0x1024>
   14a90:	ldr	r0, [r4, #64]	; 0x40
   14a94:	ldr	r3, [r6, r3]
   14a98:	ldr	r2, [r3]
   14a9c:	ldr	r2, [r2, r0, lsl #3]
   14aa0:	cmp	r2, #0
   14aa4:	bne	1512c <opt_stmt+0xe80>
   14aa8:	lsl	r2, r0, #4
   14aac:	ldr	r3, [pc, #2040]	; 152ac <opt_stmt+0x1000>
   14ab0:	eor	r2, r2, #132	; 0x84
   14ab4:	mov	r1, #213	; 0xd5
   14ab8:	umull	ip, r3, r3, r2
   14abc:	ldr	ip, [pc, #1920]	; 15244 <opt_stmt+0xf98>
   14ac0:	lsr	r3, r3, #7
   14ac4:	add	ip, pc, ip
   14ac8:	mul	r3, r1, r3
   14acc:	sub	r3, r2, r3
   14ad0:	lsl	r1, r3, #2
   14ad4:	add	r3, ip, r1
   14ad8:	ldr	r3, [r3, #44]	; 0x2c
   14adc:	cmp	r3, #0
   14ae0:	bne	14af4 <opt_stmt+0x848>
   14ae4:	b	14fa4 <opt_stmt+0xcf8>
   14ae8:	ldr	r3, [r3, #16]
   14aec:	cmp	r3, #0
   14af0:	beq	14fa4 <opt_stmt+0xcf8>
   14af4:	ldr	r2, [r3]
   14af8:	cmp	r2, #132	; 0x84
   14afc:	bne	14ae8 <opt_stmt+0x83c>
   14b00:	ldr	r2, [r3, #4]
   14b04:	cmp	r0, r2
   14b08:	bne	14ae8 <opt_stmt+0x83c>
   14b0c:	ldr	r2, [r3, #8]
   14b10:	cmp	r2, #0
   14b14:	bne	14ae8 <opt_stmt+0x83c>
   14b18:	ldr	r1, [r3, #12]
   14b1c:	str	r1, [r4, #64]	; 0x40
   14b20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b24:	cmp	r2, #0
   14b28:	ldr	r3, [r4, #68]	; 0x44
   14b2c:	beq	14b3c <opt_stmt+0x890>
   14b30:	ldr	r2, [r4, #64]	; 0x40
   14b34:	cmp	r3, r2
   14b38:	beq	14c94 <opt_stmt+0x9e8>
   14b3c:	str	r3, [r4, #64]	; 0x40
   14b40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b44:	cmp	r2, #0
   14b48:	ldr	r7, [r4, #68]	; 0x44
   14b4c:	beq	14b6c <opt_stmt+0x8c0>
   14b50:	ldr	r3, [pc, #1912]	; 152d0 <opt_stmt+0x1024>
   14b54:	lsl	ip, r7, #3
   14b58:	ldr	r3, [r6, r3]
   14b5c:	ldr	r0, [r3]
   14b60:	ldr	r0, [r0, r7, lsl #3]
   14b64:	cmp	r0, #0
   14b68:	bne	152d8 <opt_stmt+0x102c>
   14b6c:	ldr	lr, [r5, #12]
   14b70:	eor	r0, r1, r7, lsl #8
   14b74:	ldr	r3, [pc, #1840]	; 152ac <opt_stmt+0x1000>
   14b78:	eor	r0, r0, lr, lsl #4
   14b7c:	mov	ip, #213	; 0xd5
   14b80:	umull	r8, r3, r3, r0
   14b84:	ldr	r8, [pc, #1724]	; 15248 <opt_stmt+0xf9c>
   14b88:	lsr	r3, r3, #7
   14b8c:	add	r8, pc, r8
   14b90:	mul	r3, ip, r3
   14b94:	sub	r3, r0, r3
   14b98:	lsl	ip, r3, #2
   14b9c:	add	r3, r8, ip
   14ba0:	ldr	r3, [r3, #44]	; 0x2c
   14ba4:	cmp	r3, #0
   14ba8:	bne	14bbc <opt_stmt+0x910>
   14bac:	b	14f58 <opt_stmt+0xcac>
   14bb0:	ldr	r3, [r3, #16]
   14bb4:	cmp	r3, #0
   14bb8:	beq	14f58 <opt_stmt+0xcac>
   14bbc:	ldr	r0, [r3]
   14bc0:	cmp	r1, r0
   14bc4:	bne	14bb0 <opt_stmt+0x904>
   14bc8:	ldr	r0, [r3, #4]
   14bcc:	cmp	lr, r0
   14bd0:	bne	14bb0 <opt_stmt+0x904>
   14bd4:	ldr	r0, [r3, #8]
   14bd8:	cmp	r7, r0
   14bdc:	bne	14bb0 <opt_stmt+0x904>
   14be0:	ldr	r9, [r3, #12]
   14be4:	cmp	r2, #0
   14be8:	beq	14bf8 <opt_stmt+0x94c>
   14bec:	ldr	r3, [r4, #64]	; 0x40
   14bf0:	cmp	r3, r9
   14bf4:	beq	14c94 <opt_stmt+0x9e8>
   14bf8:	str	r9, [r4, #64]	; 0x40
   14bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c00:	ldr	r3, [r0, #12]
   14c04:	cmp	r2, #0
   14c08:	ldr	r3, [r4, r3, lsl #2]
   14c0c:	beq	14b3c <opt_stmt+0x890>
   14c10:	ldr	r2, [pc, #1720]	; 152d0 <opt_stmt+0x1024>
   14c14:	lsl	ip, r3, #3
   14c18:	ldr	r2, [r6, r2]
   14c1c:	ldr	r1, [r2]
   14c20:	ldr	r1, [r1, r3, lsl #3]
   14c24:	cmp	r1, #0
   14c28:	beq	14b30 <opt_stmt+0x884>
   14c2c:	mov	r0, #0
   14c30:	str	r0, [r5]
   14c34:	ldr	r1, [r2]
   14c38:	ldr	r2, [pc, #1548]	; 1524c <opt_stmt+0xfa0>
   14c3c:	add	r1, r1, ip
   14c40:	add	r2, pc, r2
   14c44:	ldr	r1, [r1, #4]
   14c48:	str	r0, [r2]
   14c4c:	str	r1, [r5, #12]
   14c50:	b	14b30 <opt_stmt+0x884>
   14c54:	ldr	lr, [r4, #64]	; 0x40
   14c58:	ldr	r2, [r0, lr, lsl #3]
   14c5c:	add	r0, r0, lr, lsl #3
   14c60:	cmp	r2, #0
   14c64:	beq	14ec8 <opt_stmt+0xc1c>
   14c68:	ldr	r2, [r0, #4]
   14c6c:	cmp	r2, #0
   14c70:	bne	14ec8 <opt_stmt+0xc1c>
   14c74:	tst	r1, #176	; 0xb0
   14c78:	bne	15744 <opt_stmt+0x1498>
   14c7c:	mov	r3, #135	; 0x87
   14c80:	str	r3, [r5]
   14c84:	ldr	r3, [r4, #68]	; 0x44
   14c88:	ldr	r2, [r4, #64]	; 0x40
   14c8c:	cmp	r3, r2
   14c90:	bne	14b3c <opt_stmt+0x890>
   14c94:	mvn	r3, #0
   14c98:	str	r3, [r5]
   14c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ca0:	ldr	r0, [pc, #1448]	; 15250 <opt_stmt+0xfa4>
   14ca4:	ldr	r3, [pc, #1576]	; 152d4 <opt_stmt+0x1028>
   14ca8:	add	r0, pc, r0
   14cac:	mov	ip, #0
   14cb0:	ldr	r1, [r0, #896]	; 0x380
   14cb4:	mov	r7, #128	; 0x80
   14cb8:	add	r1, r1, #1
   14cbc:	str	r1, [r0, #896]	; 0x380
   14cc0:	ldr	lr, [r6, r3]
   14cc4:	ldr	r3, [lr]
   14cc8:	add	r6, r3, #20
   14ccc:	str	r1, [r3, #12]
   14cd0:	str	ip, [r3, #8]
   14cd4:	str	r6, [lr]
   14cd8:	stm	r3, {r7, ip}
   14cdc:	ldr	ip, [r0, #556]	; 0x22c
   14ce0:	str	ip, [r3, #16]
   14ce4:	str	r3, [r0, #556]	; 0x22c
   14ce8:	cmp	r2, #0
   14cec:	beq	14b1c <opt_stmt+0x870>
   14cf0:	ldr	r3, [r4, #64]	; 0x40
   14cf4:	cmp	r3, r1
   14cf8:	bne	14b1c <opt_stmt+0x870>
   14cfc:	b	14c94 <opt_stmt+0x9e8>
   14d00:	ldr	r8, [pc, #1356]	; 15254 <opt_stmt+0xfa8>
   14d04:	ldr	r7, [pc, #1476]	; 152d0 <opt_stmt+0x1024>
   14d08:	add	r8, pc, r8
   14d0c:	add	r3, r8, r0
   14d10:	ldr	lr, [r8, #896]	; 0x380
   14d14:	ldr	r1, [pc, #1464]	; 152d4 <opt_stmt+0x1028>
   14d18:	add	lr, lr, #1
   14d1c:	str	lr, [r8, #896]	; 0x380
   14d20:	ldr	r0, [r6, r7]
   14d24:	mov	r7, #1
   14d28:	ldr	r0, [r0]
   14d2c:	add	r8, r0, lr, lsl #3
   14d30:	str	ip, [r8, #4]
   14d34:	str	r7, [r0, lr, lsl #3]
   14d38:	ldr	r6, [r6, r1]
   14d3c:	mov	r0, #0
   14d40:	ldr	r1, [r6]
   14d44:	add	r7, r1, #20
   14d48:	str	lr, [r1, #12]
   14d4c:	str	ip, [r1, #4]
   14d50:	str	r0, [r1, #8]
   14d54:	str	r7, [r6]
   14d58:	str	r0, [r1]
   14d5c:	ldr	r0, [r3, #44]	; 0x2c
   14d60:	str	r0, [r1, #16]
   14d64:	str	r1, [r3, #44]	; 0x2c
   14d68:	cmp	r2, #0
   14d6c:	beq	1487c <opt_stmt+0x5d0>
   14d70:	ldr	r3, [r4, #64]	; 0x40
   14d74:	cmp	r3, lr
   14d78:	bne	1487c <opt_stmt+0x5d0>
   14d7c:	b	14c94 <opt_stmt+0x9e8>
   14d80:	ldr	r7, [pc, #1232]	; 15258 <opt_stmt+0xfac>
   14d84:	ldr	r1, [pc, #1352]	; 152d4 <opt_stmt+0x1028>
   14d88:	add	r7, pc, r7
   14d8c:	add	r3, r7, r0
   14d90:	ldr	lr, [r7, #896]	; 0x380
   14d94:	mov	r0, #177	; 0xb1
   14d98:	add	lr, lr, #1
   14d9c:	str	lr, [r7, #896]	; 0x380
   14da0:	ldr	r6, [r6, r1]
   14da4:	mov	r7, #0
   14da8:	ldr	r1, [r6]
   14dac:	str	ip, [r1, #4]
   14db0:	add	ip, r1, #20
   14db4:	str	lr, [r1, #12]
   14db8:	str	ip, [r6]
   14dbc:	str	r7, [r1, #8]
   14dc0:	str	r0, [r1]
   14dc4:	ldr	r0, [r3, #44]	; 0x2c
   14dc8:	str	r0, [r1, #16]
   14dcc:	str	r1, [r3, #44]	; 0x2c
   14dd0:	cmp	r2, #0
   14dd4:	beq	14de4 <opt_stmt+0xb38>
   14dd8:	ldr	r3, [r4, #68]	; 0x44
   14ddc:	cmp	r3, lr
   14de0:	beq	14c94 <opt_stmt+0x9e8>
   14de4:	str	lr, [r4, #68]	; 0x44
   14de8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dec:	ldr	r7, [pc, #1128]	; 1525c <opt_stmt+0xfb0>
   14df0:	ldr	r0, [pc, #1244]	; 152d4 <opt_stmt+0x1028>
   14df4:	add	r7, pc, r7
   14df8:	add	r3, r7, ip
   14dfc:	ldr	r8, [r7, #896]	; 0x380
   14e00:	mov	ip, #0
   14e04:	add	r8, r8, #1
   14e08:	str	r8, [r7, #896]	; 0x380
   14e0c:	ldr	r6, [r6, r0]
   14e10:	ldr	r0, [r6]
   14e14:	add	r7, r0, #20
   14e18:	str	r8, [r0, #12]
   14e1c:	str	lr, [r0, #4]
   14e20:	str	ip, [r0, #8]
   14e24:	str	r7, [r6]
   14e28:	str	r1, [r0]
   14e2c:	ldr	r1, [r3, #44]	; 0x2c
   14e30:	str	r1, [r0, #16]
   14e34:	str	r0, [r3, #44]	; 0x2c
   14e38:	cmp	r2, #0
   14e3c:	beq	14e4c <opt_stmt+0xba0>
   14e40:	ldr	r3, [r4, #64]	; 0x40
   14e44:	cmp	r3, r8
   14e48:	beq	14c94 <opt_stmt+0x9e8>
   14e4c:	str	r8, [r4, #64]	; 0x40
   14e50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e54:	ldr	r8, [pc, #1028]	; 15260 <opt_stmt+0xfb4>
   14e58:	ldr	r7, [pc, #1136]	; 152d0 <opt_stmt+0x1024>
   14e5c:	add	r8, pc, r8
   14e60:	add	r3, r8, r0
   14e64:	ldr	lr, [r8, #896]	; 0x380
   14e68:	ldr	r1, [pc, #1124]	; 152d4 <opt_stmt+0x1028>
   14e6c:	add	lr, lr, #1
   14e70:	str	lr, [r8, #896]	; 0x380
   14e74:	ldr	r0, [r6, r7]
   14e78:	mov	r7, #1
   14e7c:	ldr	r0, [r0]
   14e80:	add	r8, r0, lr, lsl #3
   14e84:	str	ip, [r8, #4]
   14e88:	str	r7, [r0, lr, lsl #3]
   14e8c:	ldr	r6, [r6, r1]
   14e90:	mov	r0, #0
   14e94:	ldr	r1, [r6]
   14e98:	add	r7, r1, #20
   14e9c:	str	lr, [r1, #12]
   14ea0:	str	ip, [r1, #4]
   14ea4:	str	r7, [r6]
   14ea8:	str	r0, [r1, #8]
   14eac:	str	r0, [r1]
   14eb0:	ldr	r0, [r3, #44]	; 0x2c
   14eb4:	str	r0, [r1, #16]
   14eb8:	str	r1, [r3, #44]	; 0x2c
   14ebc:	b	14dd0 <opt_stmt+0xb24>
   14ec0:	ldr	r3, [r4, #68]	; 0x44
   14ec4:	ldr	lr, [r4, #64]	; 0x40
   14ec8:	lsl	r0, r3, #8
   14ecc:	eor	r0, r0, lr, lsl #4
   14ed0:	ldr	r2, [pc, #980]	; 152ac <opt_stmt+0x1000>
   14ed4:	eor	r0, r0, r1
   14ed8:	mov	ip, #213	; 0xd5
   14edc:	umull	r5, r2, r2, r0
   14ee0:	ldr	r5, [pc, #892]	; 15264 <opt_stmt+0xfb8>
   14ee4:	lsr	r2, r2, #7
   14ee8:	add	r5, pc, r5
   14eec:	mul	r2, ip, r2
   14ef0:	sub	r2, r0, r2
   14ef4:	lsl	ip, r2, #2
   14ef8:	add	r2, r5, ip
   14efc:	ldr	r2, [r2, #44]	; 0x2c
   14f00:	cmp	r2, #0
   14f04:	bne	14f18 <opt_stmt+0xc6c>
   14f08:	b	150c4 <opt_stmt+0xe18>
   14f0c:	ldr	r2, [r2, #16]
   14f10:	cmp	r2, #0
   14f14:	beq	150c4 <opt_stmt+0xe18>
   14f18:	ldr	r0, [r2]
   14f1c:	cmp	r1, r0
   14f20:	bne	14f0c <opt_stmt+0xc60>
   14f24:	ldr	r0, [r2, #4]
   14f28:	cmp	lr, r0
   14f2c:	bne	14f0c <opt_stmt+0xc60>
   14f30:	ldr	r0, [r2, #8]
   14f34:	cmp	r0, r3
   14f38:	bne	14f0c <opt_stmt+0xc60>
   14f3c:	ldr	r5, [r2, #12]
   14f40:	str	r5, [r4, #64]	; 0x40
   14f44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f48:	ldr	r2, [r4, #64]	; 0x40
   14f4c:	b	14798 <opt_stmt+0x4ec>
   14f50:	ldr	r0, [r4, #64]	; 0x40
   14f54:	b	14aa8 <opt_stmt+0x7fc>
   14f58:	ldr	r8, [pc, #776]	; 15268 <opt_stmt+0xfbc>
   14f5c:	ldr	r0, [pc, #880]	; 152d4 <opt_stmt+0x1028>
   14f60:	add	r8, pc, r8
   14f64:	add	r3, r8, ip
   14f68:	ldr	r9, [r8, #896]	; 0x380
   14f6c:	add	r9, r9, #1
   14f70:	str	r9, [r8, #896]	; 0x380
   14f74:	ldr	r6, [r6, r0]
   14f78:	ldr	r0, [r6]
   14f7c:	add	ip, r0, #20
   14f80:	str	r9, [r0, #12]
   14f84:	str	lr, [r0, #4]
   14f88:	str	r7, [r0, #8]
   14f8c:	str	ip, [r6]
   14f90:	str	r1, [r0]
   14f94:	ldr	r1, [r3, #44]	; 0x2c
   14f98:	str	r1, [r0, #16]
   14f9c:	str	r0, [r3, #44]	; 0x2c
   14fa0:	b	14be4 <opt_stmt+0x938>
   14fa4:	ldr	ip, [pc, #704]	; 1526c <opt_stmt+0xfc0>
   14fa8:	ldr	r2, [pc, #804]	; 152d4 <opt_stmt+0x1028>
   14fac:	add	ip, pc, ip
   14fb0:	add	r3, ip, r1
   14fb4:	ldr	r1, [ip, #896]	; 0x380
   14fb8:	mov	lr, #132	; 0x84
   14fbc:	add	r1, r1, #1
   14fc0:	str	r1, [ip, #896]	; 0x380
   14fc4:	ldr	ip, [r6, r2]
   14fc8:	mov	r5, #0
   14fcc:	ldr	r2, [ip]
   14fd0:	add	r6, r2, #20
   14fd4:	str	r1, [r2, #12]
   14fd8:	str	r0, [r2, #4]
   14fdc:	str	r6, [ip]
   14fe0:	str	r5, [r2, #8]
   14fe4:	str	lr, [r2]
   14fe8:	ldr	r0, [r3, #44]	; 0x2c
   14fec:	str	r0, [r2, #16]
   14ff0:	str	r2, [r3, #44]	; 0x2c
   14ff4:	b	14b1c <opt_stmt+0x870>
   14ff8:	ldr	r3, [pc, #624]	; 15270 <opt_stmt+0xfc4>
   14ffc:	tst	r1, #224	; 0xe0
   15000:	add	r3, pc, r3
   15004:	ldr	lr, [r3, #896]	; 0x380
   15008:	add	lr, lr, #1
   1500c:	str	lr, [r3, #896]	; 0x380
   15010:	bne	15020 <opt_stmt+0xd74>
   15014:	and	r3, r1, #7
   15018:	cmp	r3, #1
   1501c:	bls	15828 <opt_stmt+0x157c>
   15020:	ldr	r0, [pc, #684]	; 152d4 <opt_stmt+0x1028>
   15024:	ldr	r3, [pc, #584]	; 15274 <opt_stmt+0xfc8>
   15028:	ldr	r6, [r6, r0]
   1502c:	add	r3, pc, r3
   15030:	add	r3, r3, ip
   15034:	ldr	r0, [r6]
   15038:	add	ip, r0, #20
   1503c:	stmib	r0, {r2, r5, lr}
   15040:	str	ip, [r6]
   15044:	str	r1, [r0]
   15048:	ldr	r2, [r3, #44]	; 0x2c
   1504c:	str	r2, [r0, #16]
   15050:	str	r0, [r3, #44]	; 0x2c
   15054:	b	1487c <opt_stmt+0x5d0>
   15058:	ldr	r8, [pc, #536]	; 15278 <opt_stmt+0xfcc>
   1505c:	ldr	r7, [pc, #620]	; 152d0 <opt_stmt+0x1024>
   15060:	add	r8, pc, r8
   15064:	add	r3, r8, ip
   15068:	ldr	r5, [r8, #896]	; 0x380
   1506c:	ldr	r0, [pc, #608]	; 152d4 <opt_stmt+0x1028>
   15070:	add	r5, r5, #1
   15074:	str	r5, [r8, #896]	; 0x380
   15078:	ldr	ip, [r6, r7]
   1507c:	mov	r7, #1
   15080:	ldr	ip, [ip]
   15084:	add	r8, ip, r5, lsl #3
   15088:	str	lr, [r8, #4]
   1508c:	str	r7, [ip, r5, lsl #3]
   15090:	ldr	r7, [r6, r0]
   15094:	mov	ip, #0
   15098:	ldr	r0, [r7]
   1509c:	add	r8, r0, #20
   150a0:	str	r5, [r0, #12]
   150a4:	str	lr, [r0, #4]
   150a8:	str	ip, [r0, #8]
   150ac:	str	r8, [r7]
   150b0:	str	ip, [r0]
   150b4:	ldr	ip, [r3, #44]	; 0x2c
   150b8:	str	ip, [r0, #16]
   150bc:	str	r0, [r3, #44]	; 0x2c
   150c0:	b	14808 <opt_stmt+0x55c>
   150c4:	ldr	r2, [pc, #432]	; 1527c <opt_stmt+0xfd0>
   150c8:	tst	r1, #224	; 0xe0
   150cc:	add	r2, pc, r2
   150d0:	ldr	r5, [r2, #896]	; 0x380
   150d4:	add	r5, r5, #1
   150d8:	str	r5, [r2, #896]	; 0x380
   150dc:	bne	150ec <opt_stmt+0xe40>
   150e0:	and	r2, r1, #7
   150e4:	cmp	r2, #1
   150e8:	bls	15848 <opt_stmt+0x159c>
   150ec:	ldr	r0, [pc, #480]	; 152d4 <opt_stmt+0x1028>
   150f0:	ldr	r2, [pc, #392]	; 15280 <opt_stmt+0xfd4>
   150f4:	ldr	r6, [r6, r0]
   150f8:	add	r2, pc, r2
   150fc:	add	r2, r2, ip
   15100:	ldr	r0, [r6]
   15104:	add	ip, r0, #20
   15108:	str	r5, [r0, #12]
   1510c:	str	lr, [r0, #4]
   15110:	str	r3, [r0, #8]
   15114:	str	ip, [r6]
   15118:	str	r1, [r0]
   1511c:	ldr	r3, [r2, #44]	; 0x2c
   15120:	str	r3, [r0, #16]
   15124:	str	r0, [r2, #44]	; 0x2c
   15128:	b	14f40 <opt_stmt+0xc94>
   1512c:	mov	r2, #0
   15130:	str	r2, [r5]
   15134:	ldr	r2, [r4, #64]	; 0x40
   15138:	ldr	ip, [r3]
   1513c:	ldr	r3, [pc, #360]	; 152ac <opt_stmt+0x1000>
   15140:	add	r2, ip, r2, lsl #3
   15144:	mov	lr, #213	; 0xd5
   15148:	ldr	r0, [r2, #4]
   1514c:	ldr	r2, [pc, #304]	; 15284 <opt_stmt+0xfd8>
   15150:	rsb	r0, r0, #0
   15154:	str	r0, [r5, #12]
   15158:	lsl	r1, r0, #4
   1515c:	add	r2, pc, r2
   15160:	umull	r5, r3, r3, r1
   15164:	lsr	r3, r3, #7
   15168:	mul	r3, lr, r3
   1516c:	sub	r3, r1, r3
   15170:	lsl	r1, r3, #2
   15174:	add	r3, r2, r1
   15178:	ldr	r3, [r3, #44]	; 0x2c
   1517c:	cmp	r3, #0
   15180:	bne	15194 <opt_stmt+0xee8>
   15184:	b	151bc <opt_stmt+0xf10>
   15188:	ldr	r3, [r3, #16]
   1518c:	cmp	r3, #0
   15190:	beq	151bc <opt_stmt+0xf10>
   15194:	ldr	r2, [r3]
   15198:	cmp	r2, #0
   1519c:	bne	15188 <opt_stmt+0xedc>
   151a0:	ldr	r2, [r3, #4]
   151a4:	cmp	r0, r2
   151a8:	bne	15188 <opt_stmt+0xedc>
   151ac:	ldr	r2, [r3, #8]
   151b0:	cmp	r2, #0
   151b4:	bne	15188 <opt_stmt+0xedc>
   151b8:	b	14b18 <opt_stmt+0x86c>
   151bc:	ldr	lr, [pc, #196]	; 15288 <opt_stmt+0xfdc>
   151c0:	ldr	r2, [pc, #268]	; 152d4 <opt_stmt+0x1028>
   151c4:	add	lr, pc, lr
   151c8:	add	r3, lr, r1
   151cc:	ldr	r1, [lr, #896]	; 0x380
   151d0:	add	r1, r1, #1
   151d4:	str	r1, [lr, #896]	; 0x380
   151d8:	add	r5, ip, r1, lsl #3
   151dc:	mov	lr, #1
   151e0:	str	r0, [r5, #4]
   151e4:	str	lr, [ip, r1, lsl #3]
   151e8:	ldr	lr, [r6, r2]
   151ec:	mov	ip, #0
   151f0:	ldr	r2, [lr]
   151f4:	add	r5, r2, #20
   151f8:	str	r1, [r2, #12]
   151fc:	str	r0, [r2, #4]
   15200:	str	r5, [lr]
   15204:	str	ip, [r2, #8]
   15208:	str	ip, [r2]
   1520c:	ldr	r0, [r3, #44]	; 0x2c
   15210:	str	r0, [r2, #16]
   15214:	str	r2, [r3, #44]	; 0x2c
   15218:	b	14b1c <opt_stmt+0x870>
   1521c:	.word	0x00029d38
   15220:	.word	0x0002a17c
   15224:	.word	0x0002a104
   15228:	.word	0x0002a08c
   1522c:	.word	0x00029f84
   15230:	.word	0x00029f10
   15234:	.word	0x00029e34
   15238:	.word	0x00029db8
   1523c:	.word	0x00029d18
   15240:	.word	0x00029cfc
   15244:	.word	0x00029c70
   15248:	.word	0x00029ba8
   1524c:	.word	0x00029af4
   15250:	.word	0x00029a8c
   15254:	.word	0x00029a2c
   15258:	.word	0x000299ac
   1525c:	.word	0x00029940
   15260:	.word	0x000298d8
   15264:	.word	0x0002984c
   15268:	.word	0x000297d4
   1526c:	.word	0x00029788
   15270:	.word	0x00029734
   15274:	.word	0x00029708
   15278:	.word	0x000296d4
   1527c:	.word	0x00029668
   15280:	.word	0x0002963c
   15284:	.word	0x000295d8
   15288:	.word	0x00029570
   1528c:	.word	0x0002942c
   15290:	.word	0x000293c0
   15294:	.word	0x000293ac
   15298:	.word	0x0002934c
   1529c:	.word	0x000292d0
   152a0:	.word	0x00029270
   152a4:	.word	0x00029208
   152a8:	.word	0x00029188
   152ac:	.word	0x99d722db
   152b0:	.word	0x00029100
   152b4:	.word	0x000290a0
   152b8:	.word	0x00029054
   152bc:	.word	0x00028ff8
   152c0:	.word	0x00028fcc
   152c4:	.word	0x00028f64
   152c8:	.word	0x00028ec4
   152cc:	.word	0x00028e70
   152d0:	.word	0x00000108
   152d4:	.word	0x000000f0
   152d8:	and	r1, r1, #24
   152dc:	orr	r0, r1, #32
   152e0:	str	r0, [r5]
   152e4:	ldr	r3, [r3]
   152e8:	ldr	r2, [r5, #12]
   152ec:	add	ip, r3, ip
   152f0:	ldr	r3, [pc, #-76]	; 152ac <opt_stmt+0x1000>
   152f4:	ldr	ip, [ip, #4]
   152f8:	mov	lr, #213	; 0xd5
   152fc:	add	ip, ip, r2
   15300:	ldr	r2, [pc, #-124]	; 1528c <opt_stmt+0xfe0>
   15304:	eor	r1, r0, ip, lsl #4
   15308:	add	r2, pc, r2
   1530c:	umull	r7, r3, r3, r1
   15310:	str	ip, [r5, #12]
   15314:	lsr	r3, r3, #7
   15318:	mul	r3, lr, r3
   1531c:	sub	r3, r1, r3
   15320:	lsl	r1, r3, #2
   15324:	add	r3, r2, r1
   15328:	ldr	r3, [r3, #44]	; 0x2c
   1532c:	cmp	r3, #0
   15330:	bne	15344 <opt_stmt+0x1098>
   15334:	b	15380 <opt_stmt+0x10d4>
   15338:	ldr	r3, [r3, #16]
   1533c:	cmp	r3, #0
   15340:	beq	15380 <opt_stmt+0x10d4>
   15344:	ldr	r2, [r3]
   15348:	cmp	r0, r2
   1534c:	bne	15338 <opt_stmt+0x108c>
   15350:	ldr	r2, [r3, #4]
   15354:	cmp	ip, r2
   15358:	bne	15338 <opt_stmt+0x108c>
   1535c:	ldr	r2, [r3, #8]
   15360:	cmp	r2, #0
   15364:	bne	15338 <opt_stmt+0x108c>
   15368:	ldr	r9, [r3, #12]
   1536c:	ldr	r3, [pc, #-228]	; 15290 <opt_stmt+0xfe4>
   15370:	mov	r2, #0
   15374:	add	r3, pc, r3
   15378:	str	r2, [r3]
   1537c:	b	14bec <opt_stmt+0x940>
   15380:	ldr	lr, [pc, #-244]	; 15294 <opt_stmt+0xfe8>
   15384:	ldr	r2, [pc, #-184]	; 152d4 <opt_stmt+0x1028>
   15388:	add	lr, pc, lr
   1538c:	add	r3, lr, r1
   15390:	ldr	r9, [lr, #896]	; 0x380
   15394:	add	r9, r9, #1
   15398:	str	r9, [lr, #896]	; 0x380
   1539c:	ldr	r1, [r6, r2]
   153a0:	mov	lr, #0
   153a4:	ldr	r2, [r1]
   153a8:	add	r6, r2, #20
   153ac:	str	r9, [r2, #12]
   153b0:	str	ip, [r2, #4]
   153b4:	str	r6, [r1]
   153b8:	str	lr, [r2, #8]
   153bc:	str	r0, [r2]
   153c0:	ldr	r1, [r3, #44]	; 0x2c
   153c4:	str	r1, [r2, #16]
   153c8:	str	r2, [r3, #44]	; 0x2c
   153cc:	b	1536c <opt_stmt+0x10c0>
   153d0:	ldr	r3, [pc, #-300]	; 152ac <opt_stmt+0x1000>
   153d4:	lsl	r0, lr, #4
   153d8:	mov	r8, #213	; 0xd5
   153dc:	umull	r1, r3, r3, r0
   153e0:	ldr	r1, [pc, #-336]	; 15298 <opt_stmt+0xfec>
   153e4:	lsr	r3, r3, #7
   153e8:	add	r1, pc, r1
   153ec:	mul	r3, r8, r3
   153f0:	sub	r3, r0, r3
   153f4:	lsl	r0, r3, #2
   153f8:	add	r3, r1, r0
   153fc:	ldr	r3, [r3, #44]	; 0x2c
   15400:	cmp	r3, #0
   15404:	bne	15418 <opt_stmt+0x116c>
   15408:	b	15524 <opt_stmt+0x1278>
   1540c:	ldr	r3, [r3, #16]
   15410:	cmp	r3, #0
   15414:	beq	15524 <opt_stmt+0x1278>
   15418:	ldr	r1, [r3]
   1541c:	cmp	r1, #0
   15420:	bne	1540c <opt_stmt+0x1160>
   15424:	ldr	r1, [r3, #4]
   15428:	cmp	lr, r1
   1542c:	bne	1540c <opt_stmt+0x1160>
   15430:	ldr	r1, [r3, #8]
   15434:	cmp	r1, #0
   15438:	bne	1540c <opt_stmt+0x1160>
   1543c:	ldr	r3, [r3, #12]
   15440:	add	r1, r5, #12
   15444:	mov	r0, r5
   15448:	bl	1227c <fold_op.isra.10>
   1544c:	ldr	r0, [r5, #12]
   15450:	ldr	r3, [pc, #-428]	; 152ac <opt_stmt+0x1000>
   15454:	mov	ip, #213	; 0xd5
   15458:	lsl	r1, r0, #4
   1545c:	ldr	r2, [pc, #-456]	; 1529c <opt_stmt+0xff0>
   15460:	umull	lr, r3, r3, r1
   15464:	add	r2, pc, r2
   15468:	lsr	r3, r3, #7
   1546c:	mul	r3, ip, r3
   15470:	sub	r3, r1, r3
   15474:	lsl	r1, r3, #2
   15478:	add	r3, r2, r1
   1547c:	ldr	r3, [r3, #44]	; 0x2c
   15480:	cmp	r3, #0
   15484:	bne	15498 <opt_stmt+0x11ec>
   15488:	b	154c0 <opt_stmt+0x1214>
   1548c:	ldr	r3, [r3, #16]
   15490:	cmp	r3, #0
   15494:	beq	154c0 <opt_stmt+0x1214>
   15498:	ldr	r2, [r3]
   1549c:	cmp	r2, #0
   154a0:	bne	1548c <opt_stmt+0x11e0>
   154a4:	ldr	r2, [r3, #4]
   154a8:	cmp	r0, r2
   154ac:	bne	1548c <opt_stmt+0x11e0>
   154b0:	ldr	r2, [r3, #8]
   154b4:	cmp	r2, #0
   154b8:	bne	1548c <opt_stmt+0x11e0>
   154bc:	b	14958 <opt_stmt+0x6ac>
   154c0:	ldr	ip, [pc, #-552]	; 152a0 <opt_stmt+0xff4>
   154c4:	add	ip, pc, ip
   154c8:	ldr	r2, [ip, #896]	; 0x380
   154cc:	ldr	lr, [r7]
   154d0:	add	r2, r2, #1
   154d4:	add	r3, ip, r1
   154d8:	ldr	r1, [pc, #-524]	; 152d4 <opt_stmt+0x1028>
   154dc:	add	r5, lr, r2, lsl #3
   154e0:	str	r2, [ip, #896]	; 0x380
   154e4:	mov	ip, #1
   154e8:	str	r0, [r5, #4]
   154ec:	str	ip, [lr, r2, lsl #3]
   154f0:	ldr	lr, [r6, r1]
   154f4:	mov	ip, #0
   154f8:	ldr	r1, [lr]
   154fc:	add	r5, r1, #20
   15500:	str	r2, [r1, #12]
   15504:	str	r0, [r1, #4]
   15508:	str	r5, [lr]
   1550c:	str	ip, [r1, #8]
   15510:	str	ip, [r1]
   15514:	ldr	r0, [r3, #44]	; 0x2c
   15518:	str	r0, [r1, #16]
   1551c:	str	r1, [r3, #44]	; 0x2c
   15520:	b	1495c <opt_stmt+0x6b0>
   15524:	ldr	r8, [pc, #-648]	; 152a4 <opt_stmt+0xff8>
   15528:	ldr	r1, [pc, #-604]	; 152d4 <opt_stmt+0x1028>
   1552c:	add	r8, pc, r8
   15530:	add	r0, r8, r0
   15534:	ldr	r3, [r8, #896]	; 0x380
   15538:	add	r3, r3, #1
   1553c:	str	r3, [r8, #896]	; 0x380
   15540:	add	r9, ip, r3, lsl #3
   15544:	mov	r8, #1
   15548:	str	lr, [r9, #4]
   1554c:	str	r8, [ip, r3, lsl #3]
   15550:	ldr	r8, [r6, r1]
   15554:	mov	ip, #0
   15558:	ldr	r1, [r8]
   1555c:	add	r9, r1, #20
   15560:	str	r3, [r1, #12]
   15564:	str	lr, [r1, #4]
   15568:	str	ip, [r1, #8]
   1556c:	str	r9, [r8]
   15570:	str	ip, [r1]
   15574:	ldr	ip, [r0, #44]	; 0x2c
   15578:	str	ip, [r1, #16]
   1557c:	str	r1, [r0, #44]	; 0x2c
   15580:	b	15440 <opt_stmt+0x1194>
   15584:	orr	r1, ip, #4
   15588:	str	r1, [r5]
   1558c:	ldr	r2, [r4, #68]	; 0x44
   15590:	ldr	r7, [r7]
   15594:	ldr	r3, [pc, #-752]	; 152ac <opt_stmt+0x1000>
   15598:	add	r2, r7, r2, lsl #3
   1559c:	mov	r8, #213	; 0xd5
   155a0:	ldr	lr, [r2, #4]
   155a4:	ldr	r2, [pc, #-772]	; 152a8 <opt_stmt+0xffc>
   155a8:	str	lr, [r5, #12]
   155ac:	add	r2, pc, r2
   155b0:	lsl	r5, lr, #4
   155b4:	str	r0, [r2]
   155b8:	umull	r0, r3, r3, r5
   155bc:	ldr	ip, [r4, #64]	; 0x40
   155c0:	lsr	r3, r3, #7
   155c4:	mul	r3, r8, r3
   155c8:	sub	r3, r5, r3
   155cc:	lsl	r0, r3, #2
   155d0:	add	r2, r2, r0
   155d4:	ldr	r3, [r2, #44]	; 0x2c
   155d8:	cmp	r3, #0
   155dc:	bne	155f0 <opt_stmt+0x1344>
   155e0:	b	156d8 <opt_stmt+0x142c>
   155e4:	ldr	r3, [r3, #16]
   155e8:	cmp	r3, #0
   155ec:	beq	156d8 <opt_stmt+0x142c>
   155f0:	ldr	r2, [r3]
   155f4:	cmp	r2, #0
   155f8:	bne	155e4 <opt_stmt+0x1338>
   155fc:	ldr	r2, [r3, #4]
   15600:	cmp	lr, r2
   15604:	bne	155e4 <opt_stmt+0x1338>
   15608:	ldr	r2, [r3, #8]
   1560c:	cmp	r2, #0
   15610:	bne	155e4 <opt_stmt+0x1338>
   15614:	ldr	r5, [r3, #12]
   15618:	eor	r2, r1, ip, lsl #4
   1561c:	ldr	r3, [pc, #-888]	; 152ac <opt_stmt+0x1000>
   15620:	eor	r2, r2, r5, lsl #8
   15624:	mov	r0, #213	; 0xd5
   15628:	umull	lr, r3, r3, r2
   1562c:	ldr	lr, [pc, #-900]	; 152b0 <opt_stmt+0x1004>
   15630:	lsr	r3, r3, #7
   15634:	add	lr, pc, lr
   15638:	mul	r3, r0, r3
   1563c:	sub	r3, r2, r3
   15640:	lsl	r0, r3, #2
   15644:	add	r3, lr, r0
   15648:	ldr	r3, [r3, #44]	; 0x2c
   1564c:	cmp	r3, #0
   15650:	bne	15664 <opt_stmt+0x13b8>
   15654:	b	1568c <opt_stmt+0x13e0>
   15658:	ldr	r3, [r3, #16]
   1565c:	cmp	r3, #0
   15660:	beq	1568c <opt_stmt+0x13e0>
   15664:	ldr	r2, [r3]
   15668:	cmp	r1, r2
   1566c:	bne	15658 <opt_stmt+0x13ac>
   15670:	ldr	r2, [r3, #4]
   15674:	cmp	ip, r2
   15678:	bne	15658 <opt_stmt+0x13ac>
   1567c:	ldr	r2, [r3, #8]
   15680:	cmp	r2, r5
   15684:	bne	15658 <opt_stmt+0x13ac>
   15688:	b	14878 <opt_stmt+0x5cc>
   1568c:	ldr	r7, [pc, #-992]	; 152b4 <opt_stmt+0x1008>
   15690:	ldr	r2, [pc, #-964]	; 152d4 <opt_stmt+0x1028>
   15694:	add	r7, pc, r7
   15698:	add	r3, r7, r0
   1569c:	ldr	lr, [r7, #896]	; 0x380
   156a0:	add	lr, lr, #1
   156a4:	str	lr, [r7, #896]	; 0x380
   156a8:	ldr	r0, [r6, r2]
   156ac:	ldr	r2, [r0]
   156b0:	add	r6, r2, #20
   156b4:	str	lr, [r2, #12]
   156b8:	str	ip, [r2, #4]
   156bc:	str	r5, [r2, #8]
   156c0:	str	r6, [r0]
   156c4:	str	r1, [r2]
   156c8:	ldr	r1, [r3, #44]	; 0x2c
   156cc:	str	r1, [r2, #16]
   156d0:	str	r2, [r3, #44]	; 0x2c
   156d4:	b	1487c <opt_stmt+0x5d0>
   156d8:	ldr	r8, [pc, #-1064]	; 152b8 <opt_stmt+0x100c>
   156dc:	ldr	r2, [pc, #-1040]	; 152d4 <opt_stmt+0x1028>
   156e0:	add	r8, pc, r8
   156e4:	add	r3, r8, r0
   156e8:	ldr	r5, [r8, #896]	; 0x380
   156ec:	mov	r0, #1
   156f0:	add	r5, r5, #1
   156f4:	str	r5, [r8, #896]	; 0x380
   156f8:	add	r8, r7, r5, lsl #3
   156fc:	str	lr, [r8, #4]
   15700:	str	r0, [r7, r5, lsl #3]
   15704:	ldr	r7, [r6, r2]
   15708:	mov	r0, #0
   1570c:	ldr	r2, [r7]
   15710:	add	r8, r2, #20
   15714:	str	r5, [r2, #12]
   15718:	str	lr, [r2, #4]
   1571c:	str	r0, [r2, #8]
   15720:	str	r8, [r7]
   15724:	str	r0, [r2]
   15728:	ldr	r0, [r3, #44]	; 0x2c
   1572c:	str	r0, [r2, #16]
   15730:	str	r2, [r3, #44]	; 0x2c
   15734:	b	15618 <opt_stmt+0x136c>
   15738:	ldr	ip, [pc, #-1156]	; 152bc <opt_stmt+0x1010>
   1573c:	add	ip, pc, ip
   15740:	b	154c8 <opt_stmt+0x121c>
   15744:	and	r2, r1, #224	; 0xe0
   15748:	cmp	r2, #32
   1574c:	beq	15760 <opt_stmt+0x14b4>
   15750:	and	r2, r1, #208	; 0xd0
   15754:	cmp	ip, #96	; 0x60
   15758:	cmpne	r2, #80	; 0x50
   1575c:	bne	14ec8 <opt_stmt+0xc1c>
   15760:	ldr	r3, [pc, #-1192]	; 152c0 <opt_stmt+0x1014>
   15764:	mov	r2, #0
   15768:	add	r3, pc, r3
   1576c:	str	r2, [r5]
   15770:	str	r2, [r5, #12]
   15774:	ldr	r3, [r3, #44]	; 0x2c
   15778:	cmp	r3, r2
   1577c:	bne	15790 <opt_stmt+0x14e4>
   15780:	b	157c8 <opt_stmt+0x151c>
   15784:	ldr	r3, [r3, #16]
   15788:	cmp	r3, #0
   1578c:	beq	157c8 <opt_stmt+0x151c>
   15790:	ldr	r2, [r3]
   15794:	cmp	r2, #0
   15798:	bne	15784 <opt_stmt+0x14d8>
   1579c:	ldr	r2, [r3, #4]
   157a0:	cmp	r2, #0
   157a4:	bne	15784 <opt_stmt+0x14d8>
   157a8:	ldr	r2, [r3, #8]
   157ac:	cmp	r2, #0
   157b0:	bne	15784 <opt_stmt+0x14d8>
   157b4:	ldr	r3, [r3, #12]
   157b8:	ldr	r2, [r4, #64]	; 0x40
   157bc:	cmp	r2, r3
   157c0:	bne	14b3c <opt_stmt+0x890>
   157c4:	b	14c94 <opt_stmt+0x9e8>
   157c8:	ldr	r1, [pc, #-1292]	; 152c4 <opt_stmt+0x1018>
   157cc:	ldr	ip, [r7]
   157d0:	add	r1, pc, r1
   157d4:	ldr	r2, [pc, #-1288]	; 152d4 <opt_stmt+0x1028>
   157d8:	ldr	r3, [r1, #896]	; 0x380
   157dc:	mov	r0, #0
   157e0:	add	r3, r3, #1
   157e4:	mov	lr, #1
   157e8:	add	r7, ip, r3, lsl #3
   157ec:	str	r3, [r1, #896]	; 0x380
   157f0:	str	r0, [r7, #4]
   157f4:	str	lr, [ip, r3, lsl #3]
   157f8:	ldr	ip, [r6, r2]
   157fc:	ldr	r2, [ip]
   15800:	add	lr, r2, #20
   15804:	str	r3, [r2, #12]
   15808:	str	r0, [r2, #4]
   1580c:	str	r0, [r2, #8]
   15810:	str	lr, [ip]
   15814:	str	r0, [r2]
   15818:	ldr	r0, [r1, #44]	; 0x2c
   1581c:	str	r0, [r2, #16]
   15820:	str	r2, [r1, #44]	; 0x2c
   15824:	b	157b8 <opt_stmt+0x150c>
   15828:	ldr	r3, [pc, #-1376]	; 152d0 <opt_stmt+0x1024>
   1582c:	mov	r0, #1
   15830:	ldr	r3, [r6, r3]
   15834:	ldr	r3, [r3]
   15838:	add	r7, r3, lr, lsl #3
   1583c:	str	r2, [r7, #4]
   15840:	str	r0, [r3, lr, lsl #3]
   15844:	b	15020 <opt_stmt+0xd74>
   15848:	ldr	r2, [pc, #-1408]	; 152d0 <opt_stmt+0x1024>
   1584c:	mov	r0, #1
   15850:	ldr	r2, [r6, r2]
   15854:	ldr	r2, [r2]
   15858:	add	r7, r2, r5, lsl #3
   1585c:	str	lr, [r7, #4]
   15860:	str	r0, [r2, r5, lsl #3]
   15864:	b	150ec <opt_stmt+0xe40>
   15868:	ldr	r2, [pc, #-1448]	; 152c8 <opt_stmt+0x101c>
   1586c:	str	r3, [r0]
   15870:	add	r2, pc, r2
   15874:	ldr	r3, [r2, #44]	; 0x2c
   15878:	cmp	r3, #0
   1587c:	bne	15890 <opt_stmt+0x15e4>
   15880:	b	158bc <opt_stmt+0x1610>
   15884:	ldr	r3, [r3, #16]
   15888:	cmp	r3, #0
   1588c:	beq	158bc <opt_stmt+0x1610>
   15890:	ldr	r2, [r3]
   15894:	cmp	r2, #0
   15898:	bne	15884 <opt_stmt+0x15d8>
   1589c:	ldr	r2, [r3, #4]
   158a0:	cmp	r2, #0
   158a4:	bne	15884 <opt_stmt+0x15d8>
   158a8:	ldr	r2, [r3, #8]
   158ac:	cmp	r2, #0
   158b0:	bne	15884 <opt_stmt+0x15d8>
   158b4:	ldr	r3, [r3, #12]
   158b8:	b	14b3c <opt_stmt+0x890>
   158bc:	ldr	r1, [pc, #-1528]	; 152cc <opt_stmt+0x1020>
   158c0:	ldr	ip, [pc, #-1528]	; 152d0 <opt_stmt+0x1024>
   158c4:	add	r1, pc, r1
   158c8:	ldr	r2, [pc, #-1532]	; 152d4 <opt_stmt+0x1028>
   158cc:	ldr	r3, [r1, #896]	; 0x380
   158d0:	mov	r0, #0
   158d4:	add	r3, r3, #1
   158d8:	str	r3, [r1, #896]	; 0x380
   158dc:	ldr	ip, [r6, ip]
   158e0:	mov	lr, #1
   158e4:	ldr	ip, [ip]
   158e8:	add	r5, ip, r3, lsl #3
   158ec:	str	r0, [r5, #4]
   158f0:	str	lr, [ip, r3, lsl #3]
   158f4:	ldr	ip, [r6, r2]
   158f8:	ldr	r2, [ip]
   158fc:	add	lr, r2, #20
   15900:	str	r3, [r2, #12]
   15904:	str	r0, [r2, #4]
   15908:	str	r0, [r2, #8]
   1590c:	str	lr, [ip]
   15910:	str	r0, [r2]
   15914:	ldr	r0, [r1, #44]	; 0x2c
   15918:	str	r0, [r2, #16]
   1591c:	str	r2, [r1, #44]	; 0x2c
   15920:	b	14b3c <opt_stmt+0x890>

00015924 <opt_blks>:
   15924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15928:	mov	r5, #0
   1592c:	ldr	r6, [pc, #3344]	; 16644 <opt_blks+0xd20>
   15930:	ldr	sl, [pc, #3344]	; 16648 <opt_blks+0xd24>
   15934:	ldr	r2, [pc, #3344]	; 1664c <opt_blks+0xd28>
   15938:	ldr	r3, [pc, #3344]	; 16650 <opt_blks+0xd2c>
   1593c:	add	r6, pc, r6
   15940:	add	sl, pc, sl
   15944:	sub	sp, sp, #132	; 0x84
   15948:	str	r5, [r6, #896]	; 0x380
   1594c:	ldr	r2, [sl, r2]
   15950:	ldr	r3, [sl, r3]
   15954:	mov	r7, r0
   15958:	mov	lr, r3
   1595c:	str	r3, [sp, #24]
   15960:	ldr	r3, [pc, #3308]	; 16654 <opt_blks+0xd30>
   15964:	ldr	ip, [r2]
   15968:	ldr	r2, [r6, #900]	; 0x384
   1596c:	str	ip, [lr]
   15970:	ldr	r3, [sl, r3]
   15974:	lsl	r2, r2, #3
   15978:	str	r0, [sp, #8]
   1597c:	mov	r4, r1
   15980:	ldr	r0, [r3]
   15984:	mov	r1, r5
   15988:	str	r3, [sp, #28]
   1598c:	bl	e88 <memset@plt>
   15990:	mov	r1, r5
   15994:	add	r0, r6, #44	; 0x2c
   15998:	mov	r2, #852	; 0x354
   1599c:	bl	e88 <memset@plt>
   159a0:	ldr	r0, [r6, #24]
   159a4:	ldr	fp, [r7, #36]	; 0x24
   159a8:	cmp	r0, r5
   159ac:	ble	165bc <opt_blks+0xc98>
   159b0:	ldr	r3, [pc, #3232]	; 16658 <opt_blks+0xd34>
   159b4:	mov	r1, r5
   159b8:	ldr	r3, [sl, r3]
   159bc:	ldr	r3, [r3]
   159c0:	add	r0, r3, r0, lsl #2
   159c4:	ldr	r2, [r3], #4
   159c8:	cmp	r3, r0
   159cc:	str	r1, [r2, #112]	; 0x70
   159d0:	bne	159c4 <opt_blks+0xa0>
   159d4:	ldr	r3, [sp, #8]
   159d8:	ldr	ip, [r3, #36]	; 0x24
   159dc:	cmp	ip, #0
   159e0:	ble	15a3c <opt_blks+0x118>
   159e4:	ldr	r3, [pc, #3184]	; 1665c <opt_blks+0xd38>
   159e8:	ldr	r3, [sl, r3]
   159ec:	ldr	lr, [r3]
   159f0:	add	ip, lr, ip, lsl #2
   159f4:	ldr	r3, [ip], #-4
   159f8:	cmp	r3, #0
   159fc:	beq	15a34 <opt_blks+0x110>
   15a00:	ldr	r2, [r3, #60]	; 0x3c
   15a04:	add	r0, r3, #48	; 0x30
   15a08:	add	r1, r3, #72	; 0x48
   15a0c:	ldr	r5, [r2, #112]	; 0x70
   15a10:	str	r5, [r3, #68]	; 0x44
   15a14:	str	r0, [r2, #112]	; 0x70
   15a18:	ldr	r2, [r3, #84]	; 0x54
   15a1c:	ldr	r0, [r2, #112]	; 0x70
   15a20:	str	r0, [r3, #92]	; 0x5c
   15a24:	str	r1, [r2, #112]	; 0x70
   15a28:	ldr	r3, [r3, #100]	; 0x64
   15a2c:	cmp	r3, #0
   15a30:	bne	15a00 <opt_blks+0xdc>
   15a34:	cmp	lr, ip
   15a38:	bne	159f4 <opt_blks+0xd0>
   15a3c:	cmp	fp, #0
   15a40:	blt	15e6c <opt_blks+0x548>
   15a44:	ldr	r2, [pc, #3092]	; 16660 <opt_blks+0xd3c>
   15a48:	ldr	r3, [pc, #3084]	; 1665c <opt_blks+0xd38>
   15a4c:	add	r2, pc, r2
   15a50:	str	r2, [sp, #12]
   15a54:	ldr	r2, [pc, #3080]	; 16664 <opt_blks+0xd40>
   15a58:	add	r2, pc, r2
   15a5c:	str	r2, [sp, #32]
   15a60:	ldr	r3, [sl, r3]
   15a64:	str	fp, [sp, #16]
   15a68:	str	r3, [sp]
   15a6c:	ldr	r3, [pc, #3060]	; 16668 <opt_blks+0xd44>
   15a70:	str	fp, [sp, #48]	; 0x30
   15a74:	add	r3, pc, r3
   15a78:	str	r3, [sp, #36]	; 0x24
   15a7c:	ldr	r3, [pc, #3048]	; 1666c <opt_blks+0xd48>
   15a80:	str	sl, [sp, #52]	; 0x34
   15a84:	add	r3, pc, r3
   15a88:	str	r3, [sp, #40]	; 0x28
   15a8c:	ldr	r3, [pc, #3036]	; 16670 <opt_blks+0xd4c>
   15a90:	add	r3, pc, r3
   15a94:	str	r3, [sp, #44]	; 0x2c
   15a98:	lsl	r3, fp, #2
   15a9c:	str	r3, [sp, #4]
   15aa0:	ldr	r3, [sp]
   15aa4:	ldr	r2, [sp, #4]
   15aa8:	ldr	r3, [r3]
   15aac:	ldr	r5, [r3, r2]
   15ab0:	cmp	r5, #0
   15ab4:	beq	15e44 <opt_blks+0x520>
   15ab8:	ldr	r6, [r5, #112]	; 0x70
   15abc:	cmp	r6, #0
   15ac0:	beq	163a4 <opt_blks+0xa80>
   15ac4:	ldr	r1, [r6, #16]
   15ac8:	add	r8, r5, #136	; 0x88
   15acc:	add	r1, r1, #136	; 0x88
   15ad0:	mov	r0, r8
   15ad4:	mov	r2, #72	; 0x48
   15ad8:	bl	dc8 <memcpy@plt>
   15adc:	ldr	r6, [r6, #20]
   15ae0:	mov	r7, r8
   15ae4:	cmp	r6, #0
   15ae8:	mov	lr, #0
   15aec:	beq	15b2c <opt_blks+0x208>
   15af0:	mov	r2, r8
   15af4:	mov	r3, #0
   15af8:	ldr	r1, [r6, #16]
   15afc:	add	ip, r3, #34	; 0x22
   15b00:	ldr	r0, [r2]
   15b04:	ldr	r1, [r1, ip, lsl #2]
   15b08:	add	r3, r3, #1
   15b0c:	cmp	r0, r1
   15b10:	strne	lr, [r2]
   15b14:	cmp	r3, #18
   15b18:	add	r2, r2, #4
   15b1c:	bne	15af8 <opt_blks+0x1d4>
   15b20:	ldr	r6, [r6, #20]
   15b24:	cmp	r6, #0
   15b28:	bne	15af0 <opt_blks+0x1cc>
   15b2c:	ldr	r6, [r5, #4]
   15b30:	ldr	r2, [r5, #200]	; 0xc8
   15b34:	cmp	r6, #0
   15b38:	ldr	r9, [r5, #204]	; 0xcc
   15b3c:	movne	r8, r2
   15b40:	beq	15b64 <opt_blks+0x240>
   15b44:	mov	r0, r6
   15b48:	mov	r2, r4
   15b4c:	mov	r1, r7
   15b50:	bl	142ac <opt_stmt>
   15b54:	ldr	r6, [r6, #16]
   15b58:	cmp	r6, #0
   15b5c:	bne	15b44 <opt_blks+0x220>
   15b60:	mov	r2, r8
   15b64:	cmp	r4, #0
   15b68:	beq	15bb8 <opt_blks+0x294>
   15b6c:	cmp	r2, #0
   15b70:	ldr	r1, [r5, #128]	; 0x80
   15b74:	clz	r3, r1
   15b78:	lsr	r3, r3, #5
   15b7c:	moveq	r3, #0
   15b80:	cmp	r3, #0
   15b84:	beq	15ba8 <opt_blks+0x284>
   15b88:	ldr	r3, [r5, #200]	; 0xc8
   15b8c:	cmp	r9, #0
   15b90:	sub	r8, r3, r2
   15b94:	clz	r8, r8
   15b98:	lsr	r8, r8, #5
   15b9c:	moveq	r8, #0
   15ba0:	cmp	r8, #0
   15ba4:	bne	162f4 <opt_blks+0x9d0>
   15ba8:	ldr	r1, [r5, #8]
   15bac:	and	r3, r1, #7
   15bb0:	cmp	r3, #6
   15bb4:	beq	16304 <opt_blks+0x9e0>
   15bb8:	mov	r0, r5
   15bbc:	add	r6, sp, #56	; 0x38
   15bc0:	bl	116d0 <opt_peep>
   15bc4:	mov	r0, r6
   15bc8:	mov	r2, #72	; 0x48
   15bcc:	mov	r1, #0
   15bd0:	bl	e88 <memset@plt>
   15bd4:	ldr	r3, [r5, #4]
   15bd8:	cmp	r3, #0
   15bdc:	beq	15d0c <opt_blks+0x3e8>
   15be0:	ldr	r2, [sp, #12]
   15be4:	mov	lr, #0
   15be8:	mov	ip, lr
   15bec:	ldr	r7, [r2]
   15bf0:	mov	fp, #68	; 0x44
   15bf4:	mov	sl, #64	; 0x40
   15bf8:	mvn	r9, #0
   15bfc:	mov	r8, #1
   15c00:	str	r4, [sp, #20]
   15c04:	ldr	r1, [r3]
   15c08:	cmn	r1, #1
   15c0c:	beq	15cf4 <opt_blks+0x3d0>
   15c10:	and	r2, r1, #7
   15c14:	sub	r0, r2, #2
   15c18:	cmp	r0, #5
   15c1c:	addls	pc, pc, r0, lsl #2
   15c20:	b	15c9c <opt_blks+0x378>
   15c24:	b	15c44 <opt_blks+0x320>
   15c28:	b	15c94 <opt_blks+0x370>
   15c2c:	b	15c3c <opt_blks+0x318>
   15c30:	b	15c3c <opt_blks+0x318>
   15c34:	b	15c80 <opt_blks+0x35c>
   15c38:	b	15d70 <opt_blks+0x44c>
   15c3c:	tst	r1, #8
   15c40:	bne	15cc8 <opt_blks+0x3a4>
   15c44:	mov	r0, sl
   15c48:	add	r4, sp, #128	; 0x80
   15c4c:	add	r0, r4, r0
   15c50:	str	ip, [r0, #-72]	; 0xffffffb8
   15c54:	cmp	r2, #7
   15c58:	addls	pc, pc, r2, lsl #2
   15c5c:	b	15cf4 <opt_blks+0x3d0>
   15c60:	b	15cd4 <opt_blks+0x3b0>
   15c64:	b	15d54 <opt_blks+0x430>
   15c68:	b	15d5c <opt_blks+0x438>
   15c6c:	b	15d5c <opt_blks+0x438>
   15c70:	b	15cd4 <opt_blks+0x3b0>
   15c74:	b	15cf4 <opt_blks+0x3d0>
   15c78:	b	15cf4 <opt_blks+0x3d0>
   15c7c:	b	15d44 <opt_blks+0x420>
   15c80:	and	r0, r1, #24
   15c84:	cmp	r0, #16
   15c88:	beq	15c44 <opt_blks+0x320>
   15c8c:	cmp	r0, #8
   15c90:	bne	15cf4 <opt_blks+0x3d0>
   15c94:	mov	r0, fp
   15c98:	b	15c48 <opt_blks+0x324>
   15c9c:	and	r0, r1, #224	; 0xe0
   15ca0:	cmp	r0, #64	; 0x40
   15ca4:	beq	15c94 <opt_blks+0x370>
   15ca8:	cmp	r0, #96	; 0x60
   15cac:	bne	15c54 <opt_blks+0x330>
   15cb0:	ldr	r0, [r3, #12]
   15cb4:	cmp	r0, #0
   15cb8:	blt	16590 <opt_blks+0xc6c>
   15cbc:	cmp	r0, #18
   15cc0:	lslne	r0, r0, #2
   15cc4:	bne	15c48 <opt_blks+0x324>
   15cc8:	str	ip, [sp, #124]	; 0x7c
   15ccc:	str	ip, [sp, #120]	; 0x78
   15cd0:	b	15c54 <opt_blks+0x330>
   15cd4:	mov	r2, sl
   15cd8:	ldr	r1, [r6, r2]
   15cdc:	add	r2, r6, r2
   15ce0:	cmp	r1, #0
   15ce4:	movne	lr, r8
   15ce8:	movne	r7, ip
   15cec:	strne	r9, [r1]
   15cf0:	str	r3, [r2]
   15cf4:	ldr	r3, [r3, #16]
   15cf8:	cmp	r3, #0
   15cfc:	bne	15c04 <opt_blks+0x2e0>
   15d00:	cmp	lr, #0
   15d04:	ldr	r4, [sp, #20]
   15d08:	bne	16624 <opt_blks+0xd00>
   15d0c:	ldr	r2, [r5, #8]
   15d10:	cmn	r2, #1
   15d14:	beq	15dbc <opt_blks+0x498>
   15d18:	and	r1, r2, #7
   15d1c:	sub	r3, r1, #2
   15d20:	cmp	r3, #5
   15d24:	addls	pc, pc, r3, lsl #2
   15d28:	b	163e4 <opt_blks+0xac0>
   15d2c:	b	163bc <opt_blks+0xa98>
   15d30:	b	162b4 <opt_blks+0x990>
   15d34:	b	16414 <opt_blks+0xaf0>
   15d38:	b	16414 <opt_blks+0xaf0>
   15d3c:	b	162a0 <opt_blks+0x97c>
   15d40:	b	165cc <opt_blks+0xca8>
   15d44:	tst	r1, #248	; 0xf8
   15d48:	movne	r2, #64	; 0x40
   15d4c:	moveq	r2, #68	; 0x44
   15d50:	b	15cd8 <opt_blks+0x3b4>
   15d54:	mov	r2, fp
   15d58:	b	15cd8 <opt_blks+0x3b4>
   15d5c:	ldr	r2, [r3, #12]
   15d60:	cmp	r2, #0
   15d64:	blt	15cf4 <opt_blks+0x3d0>
   15d68:	lsl	r2, r2, #2
   15d6c:	b	15cd8 <opt_blks+0x3b4>
   15d70:	and	r0, r1, #248	; 0xf8
   15d74:	cmp	r0, #128	; 0x80
   15d78:	moveq	r0, #68	; 0x44
   15d7c:	movne	r0, #64	; 0x40
   15d80:	b	15c48 <opt_blks+0x324>
   15d84:	ldr	r3, [r5, #20]
   15d88:	cmp	r3, #0
   15d8c:	lslge	r3, r3, #2
   15d90:	blt	15dbc <opt_blks+0x498>
   15d94:	ldr	r2, [r6, r3]
   15d98:	add	r3, r6, r3
   15d9c:	cmp	r2, #0
   15da0:	mvnne	r1, #0
   15da4:	ldrne	ip, [sp, #44]	; 0x2c
   15da8:	movne	r0, #0
   15dac:	strne	r1, [r2]
   15db0:	add	r2, r5, #8
   15db4:	strne	r0, [ip]
   15db8:	str	r2, [r3]
   15dbc:	ldr	r3, [sp, #36]	; 0x24
   15dc0:	mov	r6, #0
   15dc4:	mov	r2, r6
   15dc8:	ldr	r7, [r3]
   15dcc:	mov	r9, r6
   15dd0:	add	r3, sp, #52	; 0x34
   15dd4:	add	lr, sp, #124	; 0x7c
   15dd8:	mov	ip, #1
   15ddc:	mvn	r8, #0
   15de0:	ldr	r1, [r3, #4]!
   15de4:	cmp	r1, #0
   15de8:	beq	15e00 <opt_blks+0x4dc>
   15dec:	ldr	r0, [r5, #128]	; 0x80
   15df0:	ands	r0, r0, ip, lsl r2
   15df4:	moveq	r6, ip
   15df8:	moveq	r7, r9
   15dfc:	streq	r8, [r1]
   15e00:	cmp	r3, lr
   15e04:	add	r2, r2, #1
   15e08:	bne	15de0 <opt_blks+0x4bc>
   15e0c:	cmp	r6, #0
   15e10:	ldr	r1, [r5, #8]
   15e14:	ldrne	r3, [sp, #40]	; 0x28
   15e18:	strne	r7, [r3]
   15e1c:	tst	r1, #8
   15e20:	beq	1632c <opt_blks+0xa08>
   15e24:	ldr	r3, [r5, #204]	; 0xcc
   15e28:	str	r3, [r5, #132]	; 0x84
   15e2c:	rsb	r3, r1, #0
   15e30:	str	r1, [r5, #52]	; 0x34
   15e34:	str	r3, [r5, #76]	; 0x4c
   15e38:	ldr	r5, [r5, #100]	; 0x64
   15e3c:	cmp	r5, #0
   15e40:	bne	15ab8 <opt_blks+0x194>
   15e44:	ldr	r3, [sp, #16]
   15e48:	sub	r3, r3, #1
   15e4c:	str	r3, [sp, #16]
   15e50:	cmn	r3, #1
   15e54:	ldr	r3, [sp, #4]
   15e58:	sub	r3, r3, #4
   15e5c:	str	r3, [sp, #4]
   15e60:	bne	15aa0 <opt_blks+0x17c>
   15e64:	ldr	fp, [sp, #48]	; 0x30
   15e68:	ldr	sl, [sp, #52]	; 0x34
   15e6c:	cmp	r4, #0
   15e70:	bne	16298 <opt_blks+0x974>
   15e74:	cmp	fp, #0
   15e78:	ble	15ec4 <opt_blks+0x5a0>
   15e7c:	ldr	r3, [pc, #2008]	; 1665c <opt_blks+0xd38>
   15e80:	mov	r6, #1
   15e84:	ldr	r3, [sl, r3]
   15e88:	mov	r7, r3
   15e8c:	ldr	r3, [r7]
   15e90:	ldr	r5, [r3, r6, lsl #2]
   15e94:	cmp	r5, #0
   15e98:	beq	15eb8 <opt_blks+0x594>
   15e9c:	add	r0, r5, #48	; 0x30
   15ea0:	bl	12390 <opt_j>
   15ea4:	add	r0, r5, #72	; 0x48
   15ea8:	bl	12390 <opt_j>
   15eac:	ldr	r5, [r5, #100]	; 0x64
   15eb0:	cmp	r5, #0
   15eb4:	bne	15e9c <opt_blks+0x578>
   15eb8:	add	r6, r6, #1
   15ebc:	cmp	fp, r6
   15ec0:	bge	15e8c <opt_blks+0x568>
   15ec4:	ldr	r3, [pc, #1960]	; 16674 <opt_blks+0xd50>
   15ec8:	add	r3, pc, r3
   15ecc:	ldr	r2, [r3, #24]
   15ed0:	cmp	r2, #0
   15ed4:	ble	15efc <opt_blks+0x5d8>
   15ed8:	ldr	r3, [pc, #1912]	; 16658 <opt_blks+0xd34>
   15edc:	mov	r0, #0
   15ee0:	ldr	r3, [sl, r3]
   15ee4:	ldr	r3, [r3]
   15ee8:	add	r2, r3, r2, lsl #2
   15eec:	ldr	r1, [r3], #4
   15ef0:	cmp	r3, r2
   15ef4:	str	r0, [r1, #112]	; 0x70
   15ef8:	bne	15eec <opt_blks+0x5c8>
   15efc:	ldr	r3, [sp, #8]
   15f00:	ldr	lr, [r3, #36]	; 0x24
   15f04:	cmp	lr, #0
   15f08:	ble	15f64 <opt_blks+0x640>
   15f0c:	ldr	r3, [pc, #1864]	; 1665c <opt_blks+0xd38>
   15f10:	ldr	r3, [sl, r3]
   15f14:	ldr	r5, [r3]
   15f18:	add	lr, r5, lr, lsl #2
   15f1c:	ldr	r3, [lr], #-4
   15f20:	cmp	r3, #0
   15f24:	beq	15f5c <opt_blks+0x638>
   15f28:	ldr	r2, [r3, #60]	; 0x3c
   15f2c:	add	r0, r3, #48	; 0x30
   15f30:	add	r1, r3, #72	; 0x48
   15f34:	ldr	ip, [r2, #112]	; 0x70
   15f38:	str	ip, [r3, #68]	; 0x44
   15f3c:	str	r0, [r2, #112]	; 0x70
   15f40:	ldr	r2, [r3, #84]	; 0x54
   15f44:	ldr	r0, [r2, #112]	; 0x70
   15f48:	str	r0, [r3, #92]	; 0x5c
   15f4c:	str	r1, [r2, #112]	; 0x70
   15f50:	ldr	r3, [r3, #100]	; 0x64
   15f54:	cmp	r3, #0
   15f58:	bne	15f28 <opt_blks+0x604>
   15f5c:	cmp	r5, lr
   15f60:	bne	15f1c <opt_blks+0x5f8>
   15f64:	cmp	fp, #0
   15f68:	ble	16298 <opt_blks+0x974>
   15f6c:	ldr	r2, [pc, #1796]	; 16678 <opt_blks+0xd54>
   15f70:	ldr	r3, [pc, #1764]	; 1665c <opt_blks+0xd38>
   15f74:	add	r2, pc, r2
   15f78:	mov	r1, #1
   15f7c:	ldr	r2, [r2]
   15f80:	str	r1, [sp, #4]
   15f84:	str	r2, [sp, #12]
   15f88:	ldr	r3, [sl, r3]
   15f8c:	str	r3, [sp]
   15f90:	add	r3, fp, r1
   15f94:	mov	fp, r1
   15f98:	str	r3, [sp, #20]
   15f9c:	mov	r3, #0
   15fa0:	str	r3, [sp, #8]
   15fa4:	ldr	r3, [sp]
   15fa8:	ldr	r2, [sp, #4]
   15fac:	ldr	r3, [r3]
   15fb0:	ldr	sl, [r3, r2, lsl #2]
   15fb4:	cmp	sl, #0
   15fb8:	beq	16274 <opt_blks+0x950>
   15fbc:	ldr	r3, [sl, #112]	; 0x70
   15fc0:	cmp	r3, #0
   15fc4:	beq	16268 <opt_blks+0x944>
   15fc8:	ldr	r0, [r3, #16]
   15fcc:	ldr	r3, [r3, #20]
   15fd0:	cmp	r3, #0
   15fd4:	ldr	r1, [r0, #200]	; 0xc8
   15fd8:	beq	16010 <opt_blks+0x6ec>
   15fdc:	ldr	r2, [r3, #16]
   15fe0:	ldr	r2, [r2, #200]	; 0xc8
   15fe4:	cmp	r1, r2
   15fe8:	bne	1612c <opt_blks+0x808>
   15fec:	mov	r2, r3
   15ff0:	b	16004 <opt_blks+0x6e0>
   15ff4:	ldr	ip, [r2, #16]
   15ff8:	ldr	ip, [ip, #200]	; 0xc8
   15ffc:	cmp	r1, ip
   16000:	bne	1612c <opt_blks+0x808>
   16004:	ldr	r2, [r2, #20]
   16008:	cmp	r2, #0
   1600c:	bne	15ff4 <opt_blks+0x6d0>
   16010:	ldr	r2, [r0, #60]	; 0x3c
   16014:	cmp	r2, sl
   16018:	addeq	r6, r0, #60	; 0x3c
   1601c:	moveq	r2, sl
   16020:	beq	16034 <opt_blks+0x710>
   16024:	ldr	r2, [r0, #84]	; 0x54
   16028:	add	r6, r0, #84	; 0x54
   1602c:	cmp	r2, #0
   16030:	beq	16124 <opt_blks+0x800>
   16034:	ldr	lr, [r2, #60]	; 0x3c
   16038:	ldr	ip, [sl, #60]	; 0x3c
   1603c:	cmp	lr, ip
   16040:	bne	16124 <opt_blks+0x800>
   16044:	ldr	r7, [sl]
   16048:	ldr	r5, [r2, #104]	; 0x68
   1604c:	and	ip, r7, #31
   16050:	lsr	r9, r7, #5
   16054:	lsl	ip, fp, ip
   16058:	ldr	r7, [r5, r9, lsl #2]
   1605c:	lsl	r5, r9, #2
   16060:	tst	ip, r7
   16064:	beq	16124 <opt_blks+0x800>
   16068:	mov	r7, fp
   1606c:	b	160a0 <opt_blks+0x77c>
   16070:	add	r6, r2, #84	; 0x54
   16074:	ldr	r2, [r2, #84]	; 0x54
   16078:	mov	r7, r4
   1607c:	cmp	r2, #0
   16080:	beq	16124 <opt_blks+0x800>
   16084:	ldr	r8, [r2, #60]	; 0x3c
   16088:	cmp	lr, r8
   1608c:	bne	16124 <opt_blks+0x800>
   16090:	ldr	r8, [r2, #104]	; 0x68
   16094:	ldr	r8, [r8, r5]
   16098:	tst	ip, r8
   1609c:	beq	16124 <opt_blks+0x800>
   160a0:	ldr	r8, [r2, #200]	; 0xc8
   160a4:	cmp	r1, r8
   160a8:	beq	16070 <opt_blks+0x74c>
   160ac:	ldr	r8, [r2, #84]	; 0x54
   160b0:	str	r5, [sp, #16]
   160b4:	cmp	r8, #0
   160b8:	beq	16124 <opt_blks+0x800>
   160bc:	ldr	r5, [r8, #60]	; 0x3c
   160c0:	cmp	lr, r5
   160c4:	bne	16124 <opt_blks+0x800>
   160c8:	ldr	r5, [r8, #104]	; 0x68
   160cc:	ldr	r9, [r5, r9, lsl #2]
   160d0:	tst	ip, r9
   160d4:	beq	16124 <opt_blks+0x800>
   160d8:	ldr	r9, [r8, #200]	; 0xc8
   160dc:	cmp	r1, r9
   160e0:	ldrne	r5, [sp, #16]
   160e4:	bne	16118 <opt_blks+0x7f4>
   160e8:	b	165ec <opt_blks+0xcc8>
   160ec:	ldr	r2, [r9, #60]	; 0x3c
   160f0:	cmp	lr, r2
   160f4:	bne	16124 <opt_blks+0x800>
   160f8:	ldr	r2, [r9, #104]	; 0x68
   160fc:	ldr	r2, [r2, r5]
   16100:	tst	ip, r2
   16104:	beq	16124 <opt_blks+0x800>
   16108:	ldr	r2, [r9, #200]	; 0xc8
   1610c:	cmp	r1, r2
   16110:	beq	164a4 <opt_blks+0xb80>
   16114:	mov	r8, r9
   16118:	ldr	r9, [r8, #84]	; 0x54
   1611c:	cmp	r9, #0
   16120:	bne	160ec <opt_blks+0x7c8>
   16124:	cmp	r3, #0
   16128:	beq	1615c <opt_blks+0x838>
   1612c:	ldr	r2, [r3, #16]
   16130:	ldr	ip, [r2, #200]	; 0xc8
   16134:	cmp	ip, r1
   16138:	beq	16150 <opt_blks+0x82c>
   1613c:	b	16268 <opt_blks+0x944>
   16140:	ldr	r2, [r3, #16]
   16144:	ldr	r2, [r2, #200]	; 0xc8
   16148:	cmp	ip, r2
   1614c:	bne	16268 <opt_blks+0x944>
   16150:	ldr	r3, [r3, #20]
   16154:	cmp	r3, #0
   16158:	bne	16140 <opt_blks+0x81c>
   1615c:	ldr	r3, [r0, #60]	; 0x3c
   16160:	cmp	r3, sl
   16164:	addeq	r0, r0, #60	; 0x3c
   16168:	moveq	r3, sl
   1616c:	beq	16180 <opt_blks+0x85c>
   16170:	ldr	r3, [r0, #84]	; 0x54
   16174:	add	r0, r0, #84	; 0x54
   16178:	cmp	r3, #0
   1617c:	beq	16268 <opt_blks+0x944>
   16180:	ldr	ip, [r3, #84]	; 0x54
   16184:	ldr	r2, [sl, #84]	; 0x54
   16188:	cmp	ip, r2
   1618c:	bne	16268 <opt_blks+0x944>
   16190:	ldr	r7, [sl]
   16194:	ldr	lr, [r3, #104]	; 0x68
   16198:	and	r2, r7, #31
   1619c:	lsr	r7, r7, #5
   161a0:	lsl	r2, fp, r2
   161a4:	ldr	r5, [lr, r7, lsl #2]
   161a8:	lsl	lr, r7, #2
   161ac:	tst	r2, r5
   161b0:	beq	16268 <opt_blks+0x944>
   161b4:	mov	r5, fp
   161b8:	b	161ec <opt_blks+0x8c8>
   161bc:	add	r0, r3, #60	; 0x3c
   161c0:	ldr	r3, [r3, #60]	; 0x3c
   161c4:	mov	r5, r4
   161c8:	cmp	r3, #0
   161cc:	beq	16268 <opt_blks+0x944>
   161d0:	ldr	r6, [r3, #84]	; 0x54
   161d4:	cmp	ip, r6
   161d8:	bne	16268 <opt_blks+0x944>
   161dc:	ldr	r6, [r3, #104]	; 0x68
   161e0:	ldr	r6, [r6, lr]
   161e4:	tst	r2, r6
   161e8:	beq	16268 <opt_blks+0x944>
   161ec:	ldr	r6, [r3, #200]	; 0xc8
   161f0:	cmp	r6, r1
   161f4:	beq	161bc <opt_blks+0x898>
   161f8:	ldr	r6, [r3, #60]	; 0x3c
   161fc:	cmp	r6, #0
   16200:	beq	16268 <opt_blks+0x944>
   16204:	ldr	r8, [r6, #84]	; 0x54
   16208:	cmp	ip, r8
   1620c:	bne	16268 <opt_blks+0x944>
   16210:	ldr	r8, [r6, #104]	; 0x68
   16214:	ldr	r7, [r8, r7, lsl #2]
   16218:	tst	r2, r7
   1621c:	beq	16268 <opt_blks+0x944>
   16220:	ldr	r7, [r6, #200]	; 0xc8
   16224:	cmp	r7, r1
   16228:	bne	1625c <opt_blks+0x938>
   1622c:	b	165e0 <opt_blks+0xcbc>
   16230:	ldr	r3, [r7, #84]	; 0x54
   16234:	cmp	ip, r3
   16238:	bne	16268 <opt_blks+0x944>
   1623c:	ldr	r3, [r7, #104]	; 0x68
   16240:	ldr	r3, [r3, lr]
   16244:	tst	r2, r3
   16248:	beq	16268 <opt_blks+0x944>
   1624c:	ldr	r3, [r7, #200]	; 0xc8
   16250:	cmp	r3, r1
   16254:	beq	1642c <opt_blks+0xb08>
   16258:	mov	r6, r7
   1625c:	ldr	r7, [r6, #60]	; 0x3c
   16260:	cmp	r7, #0
   16264:	bne	16230 <opt_blks+0x90c>
   16268:	ldr	sl, [sl, #100]	; 0x64
   1626c:	cmp	sl, #0
   16270:	bne	15fbc <opt_blks+0x698>
   16274:	ldr	r3, [sp, #4]
   16278:	ldr	r2, [sp, #20]
   1627c:	add	r3, r3, #1
   16280:	cmp	r3, r2
   16284:	str	r3, [sp, #4]
   16288:	bne	15fa4 <opt_blks+0x680>
   1628c:	ldr	r3, [sp, #8]
   16290:	cmp	r3, #0
   16294:	bne	16630 <opt_blks+0xd0c>
   16298:	add	sp, sp, #132	; 0x84
   1629c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162a0:	and	r3, r2, #24
   162a4:	cmp	r3, #16
   162a8:	beq	163bc <opt_blks+0xa98>
   162ac:	cmp	r3, #8
   162b0:	bne	15dbc <opt_blks+0x498>
   162b4:	mov	r3, #68	; 0x44
   162b8:	add	r0, sp, #128	; 0x80
   162bc:	add	r3, r0, r3
   162c0:	mov	r0, #0
   162c4:	str	r0, [r3, #-72]	; 0xffffffb8
   162c8:	cmp	r1, #7
   162cc:	addls	pc, pc, r1, lsl #2
   162d0:	b	15dbc <opt_blks+0x498>
   162d4:	b	163dc <opt_blks+0xab8>
   162d8:	b	163c4 <opt_blks+0xaa0>
   162dc:	b	15d84 <opt_blks+0x460>
   162e0:	b	15d84 <opt_blks+0x460>
   162e4:	b	163dc <opt_blks+0xab8>
   162e8:	b	15dbc <opt_blks+0x498>
   162ec:	b	15dbc <opt_blks+0x498>
   162f0:	b	163cc <opt_blks+0xaa8>
   162f4:	ldr	r3, [r5, #204]	; 0xcc
   162f8:	cmp	r9, r3
   162fc:	ldreq	r1, [r5, #8]
   16300:	bne	15ba8 <opt_blks+0x284>
   16304:	ldr	r3, [r5, #4]
   16308:	cmp	r3, #0
   1630c:	beq	15e1c <opt_blks+0x4f8>
   16310:	ldr	r3, [pc, #868]	; 1667c <opt_blks+0xd58>
   16314:	mov	r2, #0
   16318:	add	r3, pc, r3
   1631c:	tst	r1, #8
   16320:	str	r2, [r5, #4]
   16324:	str	r2, [r3]
   16328:	bne	15e24 <opt_blks+0x500>
   1632c:	ldr	ip, [r5, #20]
   16330:	ldr	r3, [pc, #840]	; 16680 <opt_blks+0xd5c>
   16334:	mov	lr, #213	; 0xd5
   16338:	lsl	r0, ip, #4
   1633c:	ldr	r2, [pc, #832]	; 16684 <opt_blks+0xd60>
   16340:	umull	r6, r3, r3, r0
   16344:	add	r2, pc, r2
   16348:	lsr	r3, r3, #7
   1634c:	mul	r3, lr, r3
   16350:	sub	r3, r0, r3
   16354:	lsl	r0, r3, #2
   16358:	add	r3, r2, r0
   1635c:	ldr	r3, [r3, #44]	; 0x2c
   16360:	cmp	r3, #0
   16364:	bne	16378 <opt_blks+0xa54>
   16368:	b	16524 <opt_blks+0xc00>
   1636c:	ldr	r3, [r3, #16]
   16370:	cmp	r3, #0
   16374:	beq	16524 <opt_blks+0xc00>
   16378:	ldr	r2, [r3]
   1637c:	cmp	r2, #0
   16380:	bne	1636c <opt_blks+0xa48>
   16384:	ldr	r2, [r3, #4]
   16388:	cmp	ip, r2
   1638c:	bne	1636c <opt_blks+0xa48>
   16390:	ldr	r2, [r3, #8]
   16394:	cmp	r2, #0
   16398:	bne	1636c <opt_blks+0xa48>
   1639c:	ldr	r0, [r3, #12]
   163a0:	b	16588 <opt_blks+0xc64>
   163a4:	add	r7, r5, #136	; 0x88
   163a8:	mov	r1, r6
   163ac:	mov	r0, r7
   163b0:	mov	r2, #72	; 0x48
   163b4:	bl	e88 <memset@plt>
   163b8:	b	15b2c <opt_blks+0x208>
   163bc:	mov	r3, #64	; 0x40
   163c0:	b	162b8 <opt_blks+0x994>
   163c4:	mov	r3, #68	; 0x44
   163c8:	b	15d94 <opt_blks+0x470>
   163cc:	tst	r2, #248	; 0xf8
   163d0:	moveq	r3, #68	; 0x44
   163d4:	movne	r3, #64	; 0x40
   163d8:	b	15d94 <opt_blks+0x470>
   163dc:	mov	r3, #64	; 0x40
   163e0:	b	15d94 <opt_blks+0x470>
   163e4:	and	r3, r2, #224	; 0xe0
   163e8:	cmp	r3, #64	; 0x40
   163ec:	beq	162b4 <opt_blks+0x990>
   163f0:	cmp	r3, #96	; 0x60
   163f4:	bne	162c8 <opt_blks+0x9a4>
   163f8:	ldr	r3, [r5, #20]
   163fc:	cmp	r3, #0
   16400:	blt	165f8 <opt_blks+0xcd4>
   16404:	cmp	r3, #18
   16408:	lslne	r3, r3, #2
   1640c:	bne	162b8 <opt_blks+0x994>
   16410:	b	1641c <opt_blks+0xaf8>
   16414:	tst	r2, #8
   16418:	beq	163bc <opt_blks+0xa98>
   1641c:	mov	r3, #0
   16420:	str	r3, [sp, #124]	; 0x7c
   16424:	str	r3, [sp, #120]	; 0x78
   16428:	b	162c8 <opt_blks+0x9a4>
   1642c:	add	r3, r6, #60	; 0x3c
   16430:	ldr	r2, [r7, #60]	; 0x3c
   16434:	cmp	r5, #0
   16438:	str	r2, [r3]
   1643c:	ldr	r3, [r0]
   16440:	str	r3, [r7, #60]	; 0x3c
   16444:	streq	r7, [r0]
   16448:	beq	1648c <opt_blks+0xb68>
   1644c:	ldr	r3, [sl, #112]	; 0x70
   16450:	cmp	r3, #0
   16454:	bne	1646c <opt_blks+0xb48>
   16458:	b	1648c <opt_blks+0xb68>
   1645c:	str	r7, [r2, #84]	; 0x54
   16460:	ldr	r3, [r3, #20]
   16464:	cmp	r3, #0
   16468:	beq	1648c <opt_blks+0xb68>
   1646c:	ldr	r2, [r3, #16]
   16470:	ldr	r1, [r2, #60]	; 0x3c
   16474:	cmp	sl, r1
   16478:	bne	1645c <opt_blks+0xb38>
   1647c:	str	r7, [r2, #60]	; 0x3c
   16480:	ldr	r3, [r3, #20]
   16484:	cmp	r3, #0
   16488:	bne	1646c <opt_blks+0xb48>
   1648c:	ldr	sl, [sl, #100]	; 0x64
   16490:	str	r4, [sp, #12]
   16494:	cmp	sl, #0
   16498:	str	fp, [sp, #8]
   1649c:	bne	15fbc <opt_blks+0x698>
   164a0:	b	16274 <opt_blks+0x950>
   164a4:	add	r2, r8, #84	; 0x54
   164a8:	ldr	r3, [r9, #84]	; 0x54
   164ac:	cmp	r7, #0
   164b0:	str	r3, [r2]
   164b4:	ldr	r3, [r6]
   164b8:	str	r3, [r9, #84]	; 0x54
   164bc:	beq	165c4 <opt_blks+0xca0>
   164c0:	ldr	r3, [sl, #112]	; 0x70
   164c4:	cmp	r3, #0
   164c8:	bne	164e0 <opt_blks+0xbbc>
   164cc:	b	1648c <opt_blks+0xb68>
   164d0:	str	r9, [r2, #84]	; 0x54
   164d4:	ldr	r3, [r3, #20]
   164d8:	cmp	r3, #0
   164dc:	beq	16500 <opt_blks+0xbdc>
   164e0:	ldr	r2, [r3, #16]
   164e4:	ldr	r1, [r2, #60]	; 0x3c
   164e8:	cmp	sl, r1
   164ec:	bne	164d0 <opt_blks+0xbac>
   164f0:	str	r9, [r2, #60]	; 0x3c
   164f4:	ldr	r3, [r3, #20]
   164f8:	cmp	r3, #0
   164fc:	bne	164e0 <opt_blks+0xbbc>
   16500:	ldr	r3, [sl, #112]	; 0x70
   16504:	cmp	r3, #0
   16508:	beq	1648c <opt_blks+0xb68>
   1650c:	ldr	r0, [r3, #16]
   16510:	str	r4, [sp, #12]
   16514:	ldr	r3, [r3, #20]
   16518:	ldr	r1, [r0, #200]	; 0xc8
   1651c:	str	fp, [sp, #8]
   16520:	b	16124 <opt_blks+0x800>
   16524:	ldr	r3, [pc, #348]	; 16688 <opt_blks+0xd64>
   16528:	ldr	r2, [sp, #28]
   1652c:	add	r3, pc, r3
   16530:	mov	r6, #1
   16534:	ldr	lr, [r2]
   16538:	add	r2, r3, r0
   1653c:	ldr	r0, [r3, #896]	; 0x380
   16540:	mov	r1, #0
   16544:	add	r0, r0, r6
   16548:	str	r0, [r3, #896]	; 0x380
   1654c:	add	r7, lr, r0, lsl #3
   16550:	str	ip, [r7, #4]
   16554:	str	r6, [lr, r0, lsl #3]
   16558:	ldr	r6, [sp, #24]
   1655c:	ldr	r3, [r6]
   16560:	add	lr, r3, #20
   16564:	str	r0, [r3, #12]
   16568:	str	ip, [r3, #4]
   1656c:	str	r1, [r3, #8]
   16570:	str	lr, [r6]
   16574:	str	r1, [r3]
   16578:	ldr	r1, [r2, #44]	; 0x2c
   1657c:	str	r1, [r3, #16]
   16580:	str	r3, [r2, #44]	; 0x2c
   16584:	ldr	r1, [r5, #8]
   16588:	str	r0, [r5, #132]	; 0x84
   1658c:	b	15e2c <opt_blks+0x508>
   16590:	cmp	r2, #7
   16594:	addls	pc, pc, r2, lsl #2
   16598:	b	15cf4 <opt_blks+0x3d0>
   1659c:	b	15cd4 <opt_blks+0x3b0>
   165a0:	b	15d54 <opt_blks+0x430>
   165a4:	b	15cf4 <opt_blks+0x3d0>
   165a8:	b	15cf4 <opt_blks+0x3d0>
   165ac:	b	15cd4 <opt_blks+0x3b0>
   165b0:	b	15cf4 <opt_blks+0x3d0>
   165b4:	b	15cf4 <opt_blks+0x3d0>
   165b8:	b	15d44 <opt_blks+0x420>
   165bc:	mov	ip, fp
   165c0:	b	159dc <opt_blks+0xb8>
   165c4:	str	r9, [r6]
   165c8:	b	16500 <opt_blks+0xbdc>
   165cc:	and	r3, r2, #248	; 0xf8
   165d0:	cmp	r3, #128	; 0x80
   165d4:	moveq	r3, #68	; 0x44
   165d8:	movne	r3, #64	; 0x40
   165dc:	b	162b8 <opt_blks+0x994>
   165e0:	add	r3, r3, #60	; 0x3c
   165e4:	mov	r7, r6
   165e8:	b	16430 <opt_blks+0xb0c>
   165ec:	add	r2, r2, #84	; 0x54
   165f0:	mov	r9, r8
   165f4:	b	164a8 <opt_blks+0xb84>
   165f8:	cmp	r1, #7
   165fc:	addls	pc, pc, r1, lsl #2
   16600:	b	15dbc <opt_blks+0x498>
   16604:	b	163dc <opt_blks+0xab8>
   16608:	b	163c4 <opt_blks+0xaa0>
   1660c:	b	15dbc <opt_blks+0x498>
   16610:	b	15dbc <opt_blks+0x498>
   16614:	b	163dc <opt_blks+0xab8>
   16618:	b	15dbc <opt_blks+0x498>
   1661c:	b	15dbc <opt_blks+0x498>
   16620:	b	163cc <opt_blks+0xaa8>
   16624:	ldr	r3, [sp, #32]
   16628:	str	r7, [r3]
   1662c:	b	15d0c <opt_blks+0x3e8>
   16630:	ldr	r3, [pc, #84]	; 1668c <opt_blks+0xd68>
   16634:	ldr	r2, [sp, #12]
   16638:	add	r3, pc, r3
   1663c:	str	r2, [r3]
   16640:	b	16298 <opt_blks+0x974>
   16644:	.word	0x00028df8
   16648:	.word	0x000286b8
   1664c:	.word	0x000000fc
   16650:	.word	0x000000f0
   16654:	.word	0x00000108
   16658:	.word	0x000000d0
   1665c:	.word	0x000000c8
   16660:	.word	0x00028ce8
   16664:	.word	0x00028cdc
   16668:	.word	0x00028cc0
   1666c:	.word	0x00028cb0
   16670:	.word	0x00028ca4
   16674:	.word	0x0002886c
   16678:	.word	0x000287c0
   1667c:	.word	0x0002841c
   16680:	.word	0x99d722db
   16684:	.word	0x000283f0
   16688:	.word	0x00028208
   1668c:	.word	0x000280fc

00016690 <sf_bpf_optimize>:
   16690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16694:	sub	sp, sp, #164	; 0xa4
   16698:	ldr	r4, [pc, #604]	; 168fc <sf_bpf_optimize+0x26c>
   1669c:	ldr	r3, [pc, #604]	; 16900 <sf_bpf_optimize+0x270>
   166a0:	add	r4, pc, r4
   166a4:	ldr	fp, [r0]
   166a8:	ldr	r7, [r4, #4]
   166ac:	add	r3, pc, r3
   166b0:	add	r6, r7, #1
   166b4:	cmp	fp, #0
   166b8:	str	r0, [sp, #44]	; 0x2c
   166bc:	str	r3, [sp, #28]
   166c0:	str	r6, [r4, #4]
   166c4:	beq	19d74 <sf_bpf_optimize+0x36e4>
   166c8:	ldr	r3, [fp, #24]
   166cc:	cmp	r6, r3
   166d0:	beq	19d68 <sf_bpf_optimize+0x36d8>
   166d4:	mov	r4, fp
   166d8:	mov	r5, #0
   166dc:	b	166ec <sf_bpf_optimize+0x5c>
   166e0:	ldr	r3, [r4, #24]
   166e4:	cmp	r6, r3
   166e8:	beq	1670c <sf_bpf_optimize+0x7c>
   166ec:	str	r6, [r4, #24]
   166f0:	ldr	r0, [r4, #60]	; 0x3c
   166f4:	bl	12a14 <count_blocks>
   166f8:	ldr	r4, [r4, #84]	; 0x54
   166fc:	cmp	r4, #0
   16700:	add	r0, r0, #1
   16704:	add	r5, r5, r0
   16708:	bne	166e0 <sf_bpf_optimize+0x50>
   1670c:	mov	r0, r5
   16710:	mov	r1, #4
   16714:	bl	d38 <calloc@plt>
   16718:	ldr	r3, [pc, #484]	; 16904 <sf_bpf_optimize+0x274>
   1671c:	ldr	r2, [sp, #28]
   16720:	ldr	r3, [r2, r3]
   16724:	str	r3, [sp, #24]
   16728:	cmp	r0, #0
   1672c:	str	r0, [r3]
   16730:	beq	19eb4 <sf_bpf_optimize+0x3824>
   16734:	ldr	r8, [pc, #460]	; 16908 <sf_bpf_optimize+0x278>
   16738:	ldr	r3, [fp, #24]
   1673c:	add	r8, pc, r8
   16740:	add	r7, r7, #2
   16744:	mov	r4, #0
   16748:	cmp	r7, r3
   1674c:	str	r7, [r8, #4]
   16750:	str	r4, [r8, #24]
   16754:	beq	19d5c <sf_bpf_optimize+0x36cc>
   16758:	mov	r6, fp
   1675c:	ldr	r9, [sp, #24]
   16760:	b	16774 <sf_bpf_optimize+0xe4>
   16764:	ldr	r3, [r6, #24]
   16768:	cmp	r3, r7
   1676c:	beq	167a0 <sf_bpf_optimize+0x110>
   16770:	ldr	r4, [r8, #24]
   16774:	str	r4, [r6]
   16778:	ldr	r2, [r9]
   1677c:	str	r7, [r6, #24]
   16780:	add	r3, r4, #1
   16784:	str	r6, [r2, r4, lsl #2]
   16788:	ldr	r0, [r6, #60]	; 0x3c
   1678c:	str	r3, [r8, #24]
   16790:	bl	13078 <number_blks_r>
   16794:	ldr	r6, [r6, #84]	; 0x54
   16798:	cmp	r6, #0
   1679c:	bne	16764 <sf_bpf_optimize+0xd4>
   167a0:	ldr	r3, [r8, #24]
   167a4:	str	r3, [sp, #20]
   167a8:	lsl	r9, r3, #1
   167ac:	mov	r4, r9
   167b0:	ldr	r7, [pc, #340]	; 1690c <sf_bpf_optimize+0x27c>
   167b4:	mov	r1, #4
   167b8:	add	r7, pc, r7
   167bc:	mov	r0, r4
   167c0:	str	r9, [r7, #40]	; 0x28
   167c4:	bl	d38 <calloc@plt>
   167c8:	ldr	r3, [pc, #320]	; 16910 <sf_bpf_optimize+0x280>
   167cc:	ldr	r8, [sp, #28]
   167d0:	ldr	r3, [r8, r3]
   167d4:	str	r3, [sp, #64]	; 0x40
   167d8:	cmp	r0, #0
   167dc:	mov	r6, r0
   167e0:	str	r0, [r3]
   167e4:	beq	19eb4 <sf_bpf_optimize+0x3824>
   167e8:	mov	r1, #4
   167ec:	ldr	r0, [sp, #20]
   167f0:	bl	d38 <calloc@plt>
   167f4:	ldr	r3, [pc, #280]	; 16914 <sf_bpf_optimize+0x284>
   167f8:	str	r8, [sp, #28]
   167fc:	ldr	sl, [r8, r3]
   16800:	cmp	r0, #0
   16804:	str	r0, [sl]
   16808:	beq	19eb4 <sf_bpf_optimize+0x3824>
   1680c:	ldr	r3, [sp, #20]
   16810:	lsr	r4, r4, #5
   16814:	add	r4, r4, #1
   16818:	lsr	lr, r3, #5
   1681c:	mul	r0, r9, r4
   16820:	add	r8, lr, #1
   16824:	str	r4, [r7, #32]
   16828:	mla	r0, r9, r8, r0
   1682c:	str	r8, [r7, #20]
   16830:	lsl	r0, r0, #2
   16834:	bl	e1c <malloc@plt>
   16838:	ldr	r3, [pc, #216]	; 16918 <sf_bpf_optimize+0x288>
   1683c:	ldr	r2, [sp, #28]
   16840:	ldr	r3, [r2, r3]
   16844:	str	r3, [sp, #68]	; 0x44
   16848:	cmp	r0, #0
   1684c:	str	r0, [r3]
   16850:	beq	19eb4 <sf_bpf_optimize+0x3824>
   16854:	cmp	r5, #0
   16858:	str	r0, [r7, #16]
   1685c:	ble	19d04 <sf_bpf_optimize+0x3674>
   16860:	ldr	r3, [sp, #24]
   16864:	lsl	lr, r8, #2
   16868:	ldr	r7, [r3]
   1686c:	lsl	r3, r5, #2
   16870:	str	r3, [sp]
   16874:	add	r8, r7, r3
   16878:	mov	ip, r7
   1687c:	mov	r2, r7
   16880:	mov	r3, r0
   16884:	ldr	r1, [r2], #4
   16888:	cmp	r8, r2
   1688c:	str	r3, [r1, #104]	; 0x68
   16890:	add	r3, r3, lr
   16894:	bne	16884 <sf_bpf_optimize+0x1f4>
   16898:	mul	r3, r5, lr
   1689c:	ldr	r9, [pc, #120]	; 1691c <sf_bpf_optimize+0x28c>
   168a0:	add	r8, r0, r3
   168a4:	add	r9, pc, r9
   168a8:	mov	r1, r8
   168ac:	str	r8, [r9, #28]
   168b0:	ldr	r0, [ip], #4
   168b4:	cmp	r2, ip
   168b8:	str	r1, [r0, #108]	; 0x6c
   168bc:	add	r1, r1, lr
   168c0:	bne	168b0 <sf_bpf_optimize+0x220>
   168c4:	ldr	r2, [pc, #84]	; 16920 <sf_bpf_optimize+0x290>
   168c8:	add	r3, r8, r3
   168cc:	add	r2, pc, r2
   168d0:	lsl	lr, r4, #2
   168d4:	str	r3, [r2, #36]	; 0x24
   168d8:	ldr	r2, [sp, #20]
   168dc:	str	fp, [sp, #4]
   168e0:	lsl	r4, r4, #3
   168e4:	lsl	ip, r2, #2
   168e8:	mov	r1, #0
   168ec:	mov	r9, r2
   168f0:	ldr	r8, [sp, #64]	; 0x40
   168f4:	ldr	fp, [sp, #24]
   168f8:	b	16938 <sf_bpf_optimize+0x2a8>
   168fc:	.word	0x00028094
   16900:	.word	0x0002794c
   16904:	.word	0x000000d0
   16908:	.word	0x00027ff8
   1690c:	.word	0x00027f7c
   16910:	.word	0x000000e8
   16914:	.word	0x000000c8
   16918:	.word	0x000000b8
   1691c:	.word	0x00027e90
   16920:	.word	0x00027e68
   16924:	.word	0x00027d40
   16928:	.word	0x00000108
   1692c:	.word	0x000000fc
   16930:	ldr	r7, [fp]
   16934:	ldr	r6, [r8]
   16938:	ldr	r2, [r7, r1, lsl #2]
   1693c:	add	r7, r3, lr
   16940:	mov	r0, r2
   16944:	str	r3, [r2, #56]	; 0x38
   16948:	str	r7, [r2, #80]	; 0x50
   1694c:	str	r1, [r0, #48]!	; 0x30
   16950:	str	r0, [r6, r1, lsl #2]
   16954:	ldr	r6, [r8]
   16958:	mov	r0, r2
   1695c:	add	r7, r9, r1
   16960:	add	r1, r1, #1
   16964:	cmp	r1, r5
   16968:	str	r7, [r0, #72]!	; 0x48
   1696c:	add	r3, r3, r4
   16970:	str	r0, [r6, ip]
   16974:	str	r2, [r2, #64]	; 0x40
   16978:	str	r2, [r2, #88]	; 0x58
   1697c:	add	ip, ip, #4
   16980:	bne	16930 <sf_bpf_optimize+0x2a0>
   16984:	ldr	r3, [sp, #24]
   16988:	ldr	fp, [sp, #4]
   1698c:	mov	ip, #0
   16990:	ldr	r0, [r3]
   16994:	ldr	r3, [sp]
   16998:	mov	lr, #1
   1699c:	add	r4, r0, r3
   169a0:	ldr	r3, [r0], #4
   169a4:	ldr	r3, [r3, #4]
   169a8:	cmp	r3, #0
   169ac:	beq	196c0 <sf_bpf_optimize+0x3030>
   169b0:	mov	r1, #0
   169b4:	ldr	r2, [r3]
   169b8:	ldr	r3, [r3, #16]
   169bc:	adds	r2, r2, #1
   169c0:	movne	r2, #1
   169c4:	cmp	r3, #0
   169c8:	add	r1, r1, r2
   169cc:	bne	169b4 <sf_bpf_optimize+0x324>
   169d0:	add	r1, r1, #1
   169d4:	cmp	r4, r0
   169d8:	add	ip, ip, r1
   169dc:	bne	169a0 <sf_bpf_optimize+0x310>
   169e0:	add	r3, ip, ip, lsl #1
   169e4:	mov	r4, r3
   169e8:	str	r3, [sp, #32]
   169ec:	ldr	r6, [pc, #-208]	; 16924 <sf_bpf_optimize+0x294>
   169f0:	mov	r1, #8
   169f4:	add	r6, pc, r6
   169f8:	mov	r0, r4
   169fc:	str	r3, [r6, #900]	; 0x384
   16a00:	bl	d38 <calloc@plt>
   16a04:	ldr	r3, [pc, #-228]	; 16928 <sf_bpf_optimize+0x298>
   16a08:	mov	r1, #20
   16a0c:	mov	r5, r0
   16a10:	mov	r0, r4
   16a14:	ldr	r4, [sp, #28]
   16a18:	ldr	r3, [r4, r3]
   16a1c:	str	r3, [sp, #40]	; 0x28
   16a20:	str	r5, [r3]
   16a24:	bl	d38 <calloc@plt>
   16a28:	ldr	r3, [pc, #-260]	; 1692c <sf_bpf_optimize+0x29c>
   16a2c:	cmp	r0, #0
   16a30:	cmpne	r5, #0
   16a34:	moveq	r2, #1
   16a38:	movne	r2, #0
   16a3c:	str	r2, [sp, #36]	; 0x24
   16a40:	ldr	r3, [r4, r3]
   16a44:	mov	r5, r2
   16a48:	str	r3, [sp, #48]	; 0x30
   16a4c:	str	r0, [r3]
   16a50:	beq	19eb4 <sf_bpf_optimize+0x3824>
   16a54:	add	r2, fp, #36	; 0x24
   16a58:	str	r2, [sp, #8]
   16a5c:	add	r2, fp, #104	; 0x68
   16a60:	ldr	r4, [r6, #4]
   16a64:	str	r2, [sp, #12]
   16a68:	ldr	r2, [sp, #20]
   16a6c:	add	r4, r4, #1
   16a70:	mov	r7, r6
   16a74:	lsl	r2, r2, #2
   16a78:	str	r2, [sp, #4]
   16a7c:	mov	r3, #1
   16a80:	ldr	r2, [sp, #4]
   16a84:	mov	r1, r5
   16a88:	ldr	r0, [sl]
   16a8c:	str	r3, [r6]
   16a90:	bl	e88 <memset@plt>
   16a94:	ldr	r3, [fp, #24]
   16a98:	str	r4, [r6, #4]
   16a9c:	cmp	r4, r3
   16aa0:	str	r4, [sp, #16]
   16aa4:	beq	17fe8 <sf_bpf_optimize+0x1958>
   16aa8:	ldr	r3, [fp, #60]	; 0x3c
   16aac:	str	r4, [fp, #24]
   16ab0:	subs	r2, r3, #0
   16ab4:	str	r3, [sp]
   16ab8:	str	r5, [fp, #100]	; 0x64
   16abc:	beq	19560 <sf_bpf_optimize+0x2ed0>
   16ac0:	ldr	r3, [r3, #24]
   16ac4:	cmp	r4, r3
   16ac8:	beq	17518 <sf_bpf_optimize+0xe88>
   16acc:	ldr	r8, [r2, #60]	; 0x3c
   16ad0:	str	r4, [r2, #24]
   16ad4:	cmp	r8, #0
   16ad8:	str	r5, [r2, #100]	; 0x64
   16adc:	moveq	r2, r5
   16ae0:	beq	17500 <sf_bpf_optimize+0xe70>
   16ae4:	ldr	r3, [r8, #24]
   16ae8:	cmp	r4, r3
   16aec:	beq	16f68 <sf_bpf_optimize+0x8d8>
   16af0:	ldr	r9, [r8, #60]	; 0x3c
   16af4:	str	r4, [r8, #24]
   16af8:	cmp	r9, #0
   16afc:	str	r5, [r8, #100]	; 0x64
   16b00:	moveq	r3, r5
   16b04:	beq	16f54 <sf_bpf_optimize+0x8c4>
   16b08:	ldr	r3, [r9, #24]
   16b0c:	cmp	r4, r3
   16b10:	beq	16d1c <sf_bpf_optimize+0x68c>
   16b14:	ldr	r3, [r9, #60]	; 0x3c
   16b18:	str	r4, [r9, #24]
   16b1c:	cmp	r3, #0
   16b20:	str	r5, [r9, #100]	; 0x64
   16b24:	moveq	r2, r5
   16b28:	beq	16d08 <sf_bpf_optimize+0x678>
   16b2c:	ldr	r2, [r3, #24]
   16b30:	cmp	r4, r2
   16b34:	beq	16c74 <sf_bpf_optimize+0x5e4>
   16b38:	ldr	r2, [r3, #60]	; 0x3c
   16b3c:	str	r4, [r3, #24]
   16b40:	cmp	r2, #0
   16b44:	str	r5, [r3, #100]	; 0x64
   16b48:	beq	19900 <sf_bpf_optimize+0x3270>
   16b4c:	ldr	r0, [r2, #24]
   16b50:	cmp	r4, r0
   16b54:	beq	16bc4 <sf_bpf_optimize+0x534>
   16b58:	ldr	r0, [r2, #60]	; 0x3c
   16b5c:	str	r4, [r2, #24]
   16b60:	cmp	r0, #0
   16b64:	str	r5, [r2, #100]	; 0x64
   16b68:	moveq	ip, r5
   16b6c:	beq	16bb0 <sf_bpf_optimize+0x520>
   16b70:	str	r3, [sp, #56]	; 0x38
   16b74:	str	r2, [sp, #52]	; 0x34
   16b78:	bl	13508 <find_levels_r>
   16b7c:	ldr	r2, [sp, #52]	; 0x34
   16b80:	ldr	r0, [r2, #84]	; 0x54
   16b84:	bl	13508 <find_levels_r>
   16b88:	ldr	r2, [sp, #52]	; 0x34
   16b8c:	ldr	r3, [sp, #56]	; 0x38
   16b90:	ldr	r0, [r2, #84]	; 0x54
   16b94:	ldr	ip, [r2, #60]	; 0x3c
   16b98:	ldr	r0, [r0, #36]	; 0x24
   16b9c:	ldr	ip, [ip, #36]	; 0x24
   16ba0:	cmp	r0, ip
   16ba4:	movlt	r0, ip
   16ba8:	add	r0, r0, #1
   16bac:	lsl	ip, r0, #2
   16bb0:	ldr	lr, [sl]
   16bb4:	str	r0, [r2, #36]	; 0x24
   16bb8:	ldr	r0, [lr, ip]
   16bbc:	str	r0, [r2, #100]	; 0x64
   16bc0:	str	r2, [lr, ip]
   16bc4:	ldr	r2, [r3, #84]	; 0x54
   16bc8:	ldr	r0, [r2, #24]
   16bcc:	cmp	r4, r0
   16bd0:	beq	16c44 <sf_bpf_optimize+0x5b4>
   16bd4:	ldr	r0, [r2, #60]	; 0x3c
   16bd8:	str	r4, [r2, #24]
   16bdc:	cmp	r0, #0
   16be0:	str	r5, [r2, #100]	; 0x64
   16be4:	moveq	ip, r5
   16be8:	beq	16c2c <sf_bpf_optimize+0x59c>
   16bec:	str	r3, [sp, #56]	; 0x38
   16bf0:	str	r2, [sp, #52]	; 0x34
   16bf4:	bl	13508 <find_levels_r>
   16bf8:	ldr	r2, [sp, #52]	; 0x34
   16bfc:	ldr	r0, [r2, #84]	; 0x54
   16c00:	bl	13508 <find_levels_r>
   16c04:	ldr	r2, [sp, #52]	; 0x34
   16c08:	ldr	r3, [sp, #56]	; 0x38
   16c0c:	ldr	r0, [r2, #84]	; 0x54
   16c10:	ldr	ip, [r2, #60]	; 0x3c
   16c14:	ldr	r0, [r0, #36]	; 0x24
   16c18:	ldr	ip, [ip, #36]	; 0x24
   16c1c:	cmp	r0, ip
   16c20:	movlt	r0, ip
   16c24:	add	r0, r0, #1
   16c28:	lsl	ip, r0, #2
   16c2c:	ldr	lr, [sl]
   16c30:	str	r0, [r2, #36]	; 0x24
   16c34:	ldr	r0, [lr, ip]
   16c38:	str	r0, [r2, #100]	; 0x64
   16c3c:	str	r2, [lr, ip]
   16c40:	ldr	r2, [r3, #84]	; 0x54
   16c44:	ldr	ip, [r3, #60]	; 0x3c
   16c48:	ldr	r0, [r2, #36]	; 0x24
   16c4c:	ldr	r2, [ip, #36]	; 0x24
   16c50:	cmp	r2, r0
   16c54:	movlt	r2, r0
   16c58:	add	r2, r2, #1
   16c5c:	lsl	r0, r2, #2
   16c60:	ldr	ip, [sl]
   16c64:	str	r2, [r3, #36]	; 0x24
   16c68:	ldr	r2, [ip, r0]
   16c6c:	str	r2, [r3, #100]	; 0x64
   16c70:	str	r3, [ip, r0]
   16c74:	ldr	r3, [r9, #84]	; 0x54
   16c78:	ldr	r2, [r3, #24]
   16c7c:	cmp	r4, r2
   16c80:	beq	16cec <sf_bpf_optimize+0x65c>
   16c84:	ldr	r0, [r3, #60]	; 0x3c
   16c88:	str	r4, [r3, #24]
   16c8c:	cmp	r0, #0
   16c90:	str	r5, [r3, #100]	; 0x64
   16c94:	moveq	r2, r5
   16c98:	beq	16cd4 <sf_bpf_optimize+0x644>
   16c9c:	str	r3, [sp, #52]	; 0x34
   16ca0:	bl	13508 <find_levels_r>
   16ca4:	ldr	r3, [sp, #52]	; 0x34
   16ca8:	ldr	r0, [r3, #84]	; 0x54
   16cac:	bl	13508 <find_levels_r>
   16cb0:	ldr	r3, [sp, #52]	; 0x34
   16cb4:	ldr	r2, [r3, #84]	; 0x54
   16cb8:	ldr	r0, [r3, #60]	; 0x3c
   16cbc:	ldr	r2, [r2, #36]	; 0x24
   16cc0:	ldr	r0, [r0, #36]	; 0x24
   16cc4:	cmp	r2, r0
   16cc8:	movge	r0, r2
   16ccc:	add	r0, r0, #1
   16cd0:	lsl	r2, r0, #2
   16cd4:	ldr	ip, [sl]
   16cd8:	str	r0, [r3, #36]	; 0x24
   16cdc:	ldr	r0, [ip, r2]
   16ce0:	str	r0, [r3, #100]	; 0x64
   16ce4:	str	r3, [ip, r2]
   16ce8:	ldr	r3, [r9, #84]	; 0x54
   16cec:	ldr	r0, [r9, #60]	; 0x3c
   16cf0:	ldr	r2, [r3, #36]	; 0x24
   16cf4:	ldr	r3, [r0, #36]	; 0x24
   16cf8:	cmp	r3, r2
   16cfc:	movlt	r3, r2
   16d00:	add	r3, r3, #1
   16d04:	lsl	r2, r3, #2
   16d08:	ldr	r0, [sl]
   16d0c:	str	r3, [r9, #36]	; 0x24
   16d10:	ldr	r3, [r0, r2]
   16d14:	str	r3, [r9, #100]	; 0x64
   16d18:	str	r9, [r0, r2]
   16d1c:	ldr	r3, [r8, #84]	; 0x54
   16d20:	ldr	r2, [r3, #24]
   16d24:	cmp	r4, r2
   16d28:	beq	16f38 <sf_bpf_optimize+0x8a8>
   16d2c:	ldr	r9, [r3, #60]	; 0x3c
   16d30:	str	r4, [r3, #24]
   16d34:	cmp	r9, #0
   16d38:	str	r5, [r3, #100]	; 0x64
   16d3c:	moveq	r2, r5
   16d40:	beq	16f20 <sf_bpf_optimize+0x890>
   16d44:	ldr	r2, [r9, #24]
   16d48:	cmp	r4, r2
   16d4c:	beq	16e90 <sf_bpf_optimize+0x800>
   16d50:	ldr	r2, [r9, #60]	; 0x3c
   16d54:	str	r4, [r9, #24]
   16d58:	cmp	r2, #0
   16d5c:	str	r5, [r9, #100]	; 0x64
   16d60:	moveq	r0, r5
   16d64:	beq	16e7c <sf_bpf_optimize+0x7ec>
   16d68:	ldr	r0, [r2, #24]
   16d6c:	cmp	r4, r0
   16d70:	beq	16de0 <sf_bpf_optimize+0x750>
   16d74:	ldr	r0, [r2, #60]	; 0x3c
   16d78:	str	r4, [r2, #24]
   16d7c:	cmp	r0, #0
   16d80:	str	r5, [r2, #100]	; 0x64
   16d84:	moveq	ip, r5
   16d88:	beq	16dcc <sf_bpf_optimize+0x73c>
   16d8c:	str	r3, [sp, #56]	; 0x38
   16d90:	str	r2, [sp, #52]	; 0x34
   16d94:	bl	13508 <find_levels_r>
   16d98:	ldr	r2, [sp, #52]	; 0x34
   16d9c:	ldr	r0, [r2, #84]	; 0x54
   16da0:	bl	13508 <find_levels_r>
   16da4:	ldr	r2, [sp, #52]	; 0x34
   16da8:	ldr	r3, [sp, #56]	; 0x38
   16dac:	ldr	r0, [r2, #84]	; 0x54
   16db0:	ldr	ip, [r2, #60]	; 0x3c
   16db4:	ldr	r0, [r0, #36]	; 0x24
   16db8:	ldr	ip, [ip, #36]	; 0x24
   16dbc:	cmp	r0, ip
   16dc0:	movlt	r0, ip
   16dc4:	add	r0, r0, #1
   16dc8:	lsl	ip, r0, #2
   16dcc:	ldr	lr, [sl]
   16dd0:	str	r0, [r2, #36]	; 0x24
   16dd4:	ldr	r0, [lr, ip]
   16dd8:	str	r0, [r2, #100]	; 0x64
   16ddc:	str	r2, [lr, ip]
   16de0:	ldr	r2, [r9, #84]	; 0x54
   16de4:	ldr	r0, [r2, #24]
   16de8:	cmp	r4, r0
   16dec:	beq	16e60 <sf_bpf_optimize+0x7d0>
   16df0:	ldr	r0, [r2, #60]	; 0x3c
   16df4:	str	r4, [r2, #24]
   16df8:	cmp	r0, #0
   16dfc:	str	r5, [r2, #100]	; 0x64
   16e00:	moveq	ip, r5
   16e04:	beq	16e48 <sf_bpf_optimize+0x7b8>
   16e08:	str	r3, [sp, #56]	; 0x38
   16e0c:	str	r2, [sp, #52]	; 0x34
   16e10:	bl	13508 <find_levels_r>
   16e14:	ldr	r2, [sp, #52]	; 0x34
   16e18:	ldr	r0, [r2, #84]	; 0x54
   16e1c:	bl	13508 <find_levels_r>
   16e20:	ldr	r2, [sp, #52]	; 0x34
   16e24:	ldr	r3, [sp, #56]	; 0x38
   16e28:	ldr	r0, [r2, #84]	; 0x54
   16e2c:	ldr	ip, [r2, #60]	; 0x3c
   16e30:	ldr	r0, [r0, #36]	; 0x24
   16e34:	ldr	ip, [ip, #36]	; 0x24
   16e38:	cmp	r0, ip
   16e3c:	movlt	r0, ip
   16e40:	add	r0, r0, #1
   16e44:	lsl	ip, r0, #2
   16e48:	ldr	lr, [sl]
   16e4c:	str	r0, [r2, #36]	; 0x24
   16e50:	ldr	r0, [lr, ip]
   16e54:	str	r0, [r2, #100]	; 0x64
   16e58:	str	r2, [lr, ip]
   16e5c:	ldr	r2, [r9, #84]	; 0x54
   16e60:	ldr	ip, [r9, #60]	; 0x3c
   16e64:	ldr	r0, [r2, #36]	; 0x24
   16e68:	ldr	r2, [ip, #36]	; 0x24
   16e6c:	cmp	r2, r0
   16e70:	movlt	r2, r0
   16e74:	add	r2, r2, #1
   16e78:	lsl	r0, r2, #2
   16e7c:	ldr	ip, [sl]
   16e80:	str	r2, [r9, #36]	; 0x24
   16e84:	ldr	r2, [ip, r0]
   16e88:	str	r2, [r9, #100]	; 0x64
   16e8c:	str	r9, [ip, r0]
   16e90:	ldr	r9, [r3, #84]	; 0x54
   16e94:	ldr	r2, [r9, #24]
   16e98:	cmp	r4, r2
   16e9c:	beq	16f04 <sf_bpf_optimize+0x874>
   16ea0:	ldr	r0, [r9, #60]	; 0x3c
   16ea4:	str	r4, [r9, #24]
   16ea8:	cmp	r0, #0
   16eac:	str	r5, [r9, #100]	; 0x64
   16eb0:	moveq	r2, r5
   16eb4:	beq	16eec <sf_bpf_optimize+0x85c>
   16eb8:	str	r3, [sp, #52]	; 0x34
   16ebc:	bl	13508 <find_levels_r>
   16ec0:	ldr	r0, [r9, #84]	; 0x54
   16ec4:	bl	13508 <find_levels_r>
   16ec8:	ldr	r2, [r9, #84]	; 0x54
   16ecc:	ldr	r0, [r9, #60]	; 0x3c
   16ed0:	ldr	r3, [sp, #52]	; 0x34
   16ed4:	ldr	r2, [r2, #36]	; 0x24
   16ed8:	ldr	r0, [r0, #36]	; 0x24
   16edc:	cmp	r2, r0
   16ee0:	movge	r0, r2
   16ee4:	add	r0, r0, #1
   16ee8:	lsl	r2, r0, #2
   16eec:	ldr	ip, [sl]
   16ef0:	str	r0, [r9, #36]	; 0x24
   16ef4:	ldr	r0, [ip, r2]
   16ef8:	str	r0, [r9, #100]	; 0x64
   16efc:	str	r9, [ip, r2]
   16f00:	ldr	r9, [r3, #84]	; 0x54
   16f04:	ldr	r2, [r3, #60]	; 0x3c
   16f08:	ldr	r9, [r9, #36]	; 0x24
   16f0c:	ldr	r2, [r2, #36]	; 0x24
   16f10:	cmp	r2, r9
   16f14:	movge	r9, r2
   16f18:	add	r9, r9, #1
   16f1c:	lsl	r2, r9, #2
   16f20:	ldr	r0, [sl]
   16f24:	str	r9, [r3, #36]	; 0x24
   16f28:	ldr	ip, [r0, r2]
   16f2c:	str	ip, [r3, #100]	; 0x64
   16f30:	str	r3, [r0, r2]
   16f34:	ldr	r3, [r8, #84]	; 0x54
   16f38:	ldr	r2, [r8, #60]	; 0x3c
   16f3c:	ldr	r9, [r3, #36]	; 0x24
   16f40:	ldr	r3, [r2, #36]	; 0x24
   16f44:	cmp	r3, r9
   16f48:	movge	r9, r3
   16f4c:	add	r9, r9, #1
   16f50:	lsl	r3, r9, #2
   16f54:	ldr	r2, [sl]
   16f58:	str	r9, [r8, #36]	; 0x24
   16f5c:	ldr	r0, [r2, r3]
   16f60:	str	r0, [r8, #100]	; 0x64
   16f64:	str	r8, [r2, r3]
   16f68:	ldr	r3, [sp]
   16f6c:	ldr	r9, [r3, #84]	; 0x54
   16f70:	ldr	r3, [r9, #24]
   16f74:	cmp	r4, r3
   16f78:	beq	174e0 <sf_bpf_optimize+0xe50>
   16f7c:	ldr	r8, [r9, #60]	; 0x3c
   16f80:	str	r4, [r9, #24]
   16f84:	cmp	r8, #0
   16f88:	str	r5, [r9, #100]	; 0x64
   16f8c:	moveq	r3, r5
   16f90:	beq	174c4 <sf_bpf_optimize+0xe34>
   16f94:	ldr	r3, [r8, #24]
   16f98:	cmp	r4, r3
   16f9c:	beq	171ac <sf_bpf_optimize+0xb1c>
   16fa0:	ldr	r3, [r8, #60]	; 0x3c
   16fa4:	str	r4, [r8, #24]
   16fa8:	cmp	r3, #0
   16fac:	str	r5, [r8, #100]	; 0x64
   16fb0:	moveq	r2, r5
   16fb4:	beq	17198 <sf_bpf_optimize+0xb08>
   16fb8:	ldr	r2, [r3, #24]
   16fbc:	cmp	r4, r2
   16fc0:	beq	17104 <sf_bpf_optimize+0xa74>
   16fc4:	ldr	r2, [r3, #60]	; 0x3c
   16fc8:	str	r4, [r3, #24]
   16fcc:	cmp	r2, #0
   16fd0:	str	r5, [r3, #100]	; 0x64
   16fd4:	moveq	r0, r5
   16fd8:	beq	170f0 <sf_bpf_optimize+0xa60>
   16fdc:	ldr	r0, [r2, #24]
   16fe0:	cmp	r4, r0
   16fe4:	beq	17054 <sf_bpf_optimize+0x9c4>
   16fe8:	ldr	r0, [r2, #60]	; 0x3c
   16fec:	str	r4, [r2, #24]
   16ff0:	cmp	r0, #0
   16ff4:	str	r5, [r2, #100]	; 0x64
   16ff8:	moveq	ip, r5
   16ffc:	beq	17040 <sf_bpf_optimize+0x9b0>
   17000:	str	r3, [sp, #56]	; 0x38
   17004:	str	r2, [sp, #52]	; 0x34
   17008:	bl	13508 <find_levels_r>
   1700c:	ldr	r2, [sp, #52]	; 0x34
   17010:	ldr	r0, [r2, #84]	; 0x54
   17014:	bl	13508 <find_levels_r>
   17018:	ldr	r2, [sp, #52]	; 0x34
   1701c:	ldr	r3, [sp, #56]	; 0x38
   17020:	ldr	r0, [r2, #84]	; 0x54
   17024:	ldr	ip, [r2, #60]	; 0x3c
   17028:	ldr	r0, [r0, #36]	; 0x24
   1702c:	ldr	ip, [ip, #36]	; 0x24
   17030:	cmp	r0, ip
   17034:	movlt	r0, ip
   17038:	add	r0, r0, #1
   1703c:	lsl	ip, r0, #2
   17040:	ldr	lr, [sl]
   17044:	str	r0, [r2, #36]	; 0x24
   17048:	ldr	r0, [lr, ip]
   1704c:	str	r0, [r2, #100]	; 0x64
   17050:	str	r2, [lr, ip]
   17054:	ldr	r2, [r3, #84]	; 0x54
   17058:	ldr	r0, [r2, #24]
   1705c:	cmp	r4, r0
   17060:	beq	170d4 <sf_bpf_optimize+0xa44>
   17064:	ldr	r0, [r2, #60]	; 0x3c
   17068:	str	r4, [r2, #24]
   1706c:	cmp	r0, #0
   17070:	str	r5, [r2, #100]	; 0x64
   17074:	moveq	ip, r5
   17078:	beq	170bc <sf_bpf_optimize+0xa2c>
   1707c:	str	r3, [sp, #56]	; 0x38
   17080:	str	r2, [sp, #52]	; 0x34
   17084:	bl	13508 <find_levels_r>
   17088:	ldr	r2, [sp, #52]	; 0x34
   1708c:	ldr	r0, [r2, #84]	; 0x54
   17090:	bl	13508 <find_levels_r>
   17094:	ldr	r2, [sp, #52]	; 0x34
   17098:	ldr	r3, [sp, #56]	; 0x38
   1709c:	ldr	r0, [r2, #84]	; 0x54
   170a0:	ldr	ip, [r2, #60]	; 0x3c
   170a4:	ldr	r0, [r0, #36]	; 0x24
   170a8:	ldr	ip, [ip, #36]	; 0x24
   170ac:	cmp	r0, ip
   170b0:	movlt	r0, ip
   170b4:	add	r0, r0, #1
   170b8:	lsl	ip, r0, #2
   170bc:	ldr	lr, [sl]
   170c0:	str	r0, [r2, #36]	; 0x24
   170c4:	ldr	r0, [lr, ip]
   170c8:	str	r0, [r2, #100]	; 0x64
   170cc:	str	r2, [lr, ip]
   170d0:	ldr	r2, [r3, #84]	; 0x54
   170d4:	ldr	ip, [r3, #60]	; 0x3c
   170d8:	ldr	r0, [r2, #36]	; 0x24
   170dc:	ldr	r2, [ip, #36]	; 0x24
   170e0:	cmp	r2, r0
   170e4:	movlt	r2, r0
   170e8:	add	r2, r2, #1
   170ec:	lsl	r0, r2, #2
   170f0:	ldr	ip, [sl]
   170f4:	str	r2, [r3, #36]	; 0x24
   170f8:	ldr	r2, [ip, r0]
   170fc:	str	r2, [r3, #100]	; 0x64
   17100:	str	r3, [ip, r0]
   17104:	ldr	r3, [r8, #84]	; 0x54
   17108:	ldr	r2, [r3, #24]
   1710c:	cmp	r4, r2
   17110:	beq	1717c <sf_bpf_optimize+0xaec>
   17114:	ldr	r0, [r3, #60]	; 0x3c
   17118:	str	r4, [r3, #24]
   1711c:	cmp	r0, #0
   17120:	str	r5, [r3, #100]	; 0x64
   17124:	moveq	r2, r5
   17128:	beq	17164 <sf_bpf_optimize+0xad4>
   1712c:	str	r3, [sp, #52]	; 0x34
   17130:	bl	13508 <find_levels_r>
   17134:	ldr	r3, [sp, #52]	; 0x34
   17138:	ldr	r0, [r3, #84]	; 0x54
   1713c:	bl	13508 <find_levels_r>
   17140:	ldr	r3, [sp, #52]	; 0x34
   17144:	ldr	r2, [r3, #84]	; 0x54
   17148:	ldr	r0, [r3, #60]	; 0x3c
   1714c:	ldr	r2, [r2, #36]	; 0x24
   17150:	ldr	r0, [r0, #36]	; 0x24
   17154:	cmp	r2, r0
   17158:	movge	r0, r2
   1715c:	add	r0, r0, #1
   17160:	lsl	r2, r0, #2
   17164:	ldr	ip, [sl]
   17168:	str	r0, [r3, #36]	; 0x24
   1716c:	ldr	r0, [ip, r2]
   17170:	str	r0, [r3, #100]	; 0x64
   17174:	str	r3, [ip, r2]
   17178:	ldr	r3, [r8, #84]	; 0x54
   1717c:	ldr	r0, [r8, #60]	; 0x3c
   17180:	ldr	r2, [r3, #36]	; 0x24
   17184:	ldr	r3, [r0, #36]	; 0x24
   17188:	cmp	r3, r2
   1718c:	movlt	r3, r2
   17190:	add	r3, r3, #1
   17194:	lsl	r2, r3, #2
   17198:	ldr	r0, [sl]
   1719c:	str	r3, [r8, #36]	; 0x24
   171a0:	ldr	r3, [r0, r2]
   171a4:	str	r3, [r8, #100]	; 0x64
   171a8:	str	r8, [r0, r2]
   171ac:	ldr	r3, [r9, #84]	; 0x54
   171b0:	ldr	r2, [r3, #24]
   171b4:	cmp	r4, r2
   171b8:	beq	174a8 <sf_bpf_optimize+0xe18>
   171bc:	ldr	r8, [r3, #60]	; 0x3c
   171c0:	str	r4, [r3, #24]
   171c4:	cmp	r8, #0
   171c8:	str	r5, [r3, #100]	; 0x64
   171cc:	moveq	r2, r5
   171d0:	beq	17490 <sf_bpf_optimize+0xe00>
   171d4:	ldr	r2, [r8, #24]
   171d8:	cmp	r4, r2
   171dc:	beq	17320 <sf_bpf_optimize+0xc90>
   171e0:	ldr	r2, [r8, #60]	; 0x3c
   171e4:	str	r4, [r8, #24]
   171e8:	cmp	r2, #0
   171ec:	str	r5, [r8, #100]	; 0x64
   171f0:	moveq	r0, r5
   171f4:	beq	1730c <sf_bpf_optimize+0xc7c>
   171f8:	ldr	r0, [r2, #24]
   171fc:	cmp	r4, r0
   17200:	beq	17270 <sf_bpf_optimize+0xbe0>
   17204:	ldr	r0, [r2, #60]	; 0x3c
   17208:	str	r4, [r2, #24]
   1720c:	cmp	r0, #0
   17210:	str	r5, [r2, #100]	; 0x64
   17214:	moveq	ip, r5
   17218:	beq	1725c <sf_bpf_optimize+0xbcc>
   1721c:	str	r3, [sp, #56]	; 0x38
   17220:	str	r2, [sp, #52]	; 0x34
   17224:	bl	13508 <find_levels_r>
   17228:	ldr	r2, [sp, #52]	; 0x34
   1722c:	ldr	r0, [r2, #84]	; 0x54
   17230:	bl	13508 <find_levels_r>
   17234:	ldr	r2, [sp, #52]	; 0x34
   17238:	ldr	r3, [sp, #56]	; 0x38
   1723c:	ldr	r0, [r2, #84]	; 0x54
   17240:	ldr	ip, [r2, #60]	; 0x3c
   17244:	ldr	r0, [r0, #36]	; 0x24
   17248:	ldr	ip, [ip, #36]	; 0x24
   1724c:	cmp	r0, ip
   17250:	movlt	r0, ip
   17254:	add	r0, r0, #1
   17258:	lsl	ip, r0, #2
   1725c:	ldr	lr, [sl]
   17260:	str	r0, [r2, #36]	; 0x24
   17264:	ldr	r0, [lr, ip]
   17268:	str	r0, [r2, #100]	; 0x64
   1726c:	str	r2, [lr, ip]
   17270:	ldr	r2, [r8, #84]	; 0x54
   17274:	ldr	r0, [r2, #24]
   17278:	cmp	r4, r0
   1727c:	beq	172f0 <sf_bpf_optimize+0xc60>
   17280:	ldr	r0, [r2, #60]	; 0x3c
   17284:	str	r4, [r2, #24]
   17288:	cmp	r0, #0
   1728c:	str	r5, [r2, #100]	; 0x64
   17290:	moveq	ip, r5
   17294:	beq	172d8 <sf_bpf_optimize+0xc48>
   17298:	str	r3, [sp, #56]	; 0x38
   1729c:	str	r2, [sp, #52]	; 0x34
   172a0:	bl	13508 <find_levels_r>
   172a4:	ldr	r2, [sp, #52]	; 0x34
   172a8:	ldr	r0, [r2, #84]	; 0x54
   172ac:	bl	13508 <find_levels_r>
   172b0:	ldr	r2, [sp, #52]	; 0x34
   172b4:	ldr	r3, [sp, #56]	; 0x38
   172b8:	ldr	r0, [r2, #84]	; 0x54
   172bc:	ldr	ip, [r2, #60]	; 0x3c
   172c0:	ldr	r0, [r0, #36]	; 0x24
   172c4:	ldr	ip, [ip, #36]	; 0x24
   172c8:	cmp	r0, ip
   172cc:	movlt	r0, ip
   172d0:	add	r0, r0, #1
   172d4:	lsl	ip, r0, #2
   172d8:	ldr	lr, [sl]
   172dc:	str	r0, [r2, #36]	; 0x24
   172e0:	ldr	r0, [lr, ip]
   172e4:	str	r0, [r2, #100]	; 0x64
   172e8:	str	r2, [lr, ip]
   172ec:	ldr	r2, [r8, #84]	; 0x54
   172f0:	ldr	ip, [r8, #60]	; 0x3c
   172f4:	ldr	r0, [r2, #36]	; 0x24
   172f8:	ldr	r2, [ip, #36]	; 0x24
   172fc:	cmp	r2, r0
   17300:	movlt	r2, r0
   17304:	add	r2, r2, #1
   17308:	lsl	r0, r2, #2
   1730c:	ldr	ip, [sl]
   17310:	str	r2, [r8, #36]	; 0x24
   17314:	ldr	r2, [ip, r0]
   17318:	str	r2, [r8, #100]	; 0x64
   1731c:	str	r8, [ip, r0]
   17320:	ldr	r8, [r3, #84]	; 0x54
   17324:	ldr	r2, [r8, #24]
   17328:	cmp	r4, r2
   1732c:	beq	17474 <sf_bpf_optimize+0xde4>
   17330:	ldr	r2, [r8, #60]	; 0x3c
   17334:	str	r4, [r8, #24]
   17338:	cmp	r2, #0
   1733c:	str	r5, [r8, #100]	; 0x64
   17340:	moveq	r0, r5
   17344:	beq	1745c <sf_bpf_optimize+0xdcc>
   17348:	ldr	r0, [r2, #24]
   1734c:	cmp	r4, r0
   17350:	beq	173c0 <sf_bpf_optimize+0xd30>
   17354:	ldr	r0, [r2, #60]	; 0x3c
   17358:	str	r4, [r2, #24]
   1735c:	cmp	r0, #0
   17360:	str	r5, [r2, #100]	; 0x64
   17364:	moveq	ip, r5
   17368:	beq	173ac <sf_bpf_optimize+0xd1c>
   1736c:	str	r3, [sp, #56]	; 0x38
   17370:	str	r2, [sp, #52]	; 0x34
   17374:	bl	13508 <find_levels_r>
   17378:	ldr	r2, [sp, #52]	; 0x34
   1737c:	ldr	r0, [r2, #84]	; 0x54
   17380:	bl	13508 <find_levels_r>
   17384:	ldr	r2, [sp, #52]	; 0x34
   17388:	ldr	r3, [sp, #56]	; 0x38
   1738c:	ldr	r0, [r2, #84]	; 0x54
   17390:	ldr	ip, [r2, #60]	; 0x3c
   17394:	ldr	r0, [r0, #36]	; 0x24
   17398:	ldr	ip, [ip, #36]	; 0x24
   1739c:	cmp	r0, ip
   173a0:	movlt	r0, ip
   173a4:	add	r0, r0, #1
   173a8:	lsl	ip, r0, #2
   173ac:	ldr	lr, [sl]
   173b0:	str	r0, [r2, #36]	; 0x24
   173b4:	ldr	r0, [lr, ip]
   173b8:	str	r0, [r2, #100]	; 0x64
   173bc:	str	r2, [lr, ip]
   173c0:	ldr	r2, [r8, #84]	; 0x54
   173c4:	ldr	r0, [r2, #24]
   173c8:	cmp	r4, r0
   173cc:	beq	17440 <sf_bpf_optimize+0xdb0>
   173d0:	ldr	r0, [r2, #60]	; 0x3c
   173d4:	str	r4, [r2, #24]
   173d8:	cmp	r0, #0
   173dc:	str	r5, [r2, #100]	; 0x64
   173e0:	moveq	ip, r5
   173e4:	beq	17428 <sf_bpf_optimize+0xd98>
   173e8:	str	r3, [sp, #56]	; 0x38
   173ec:	str	r2, [sp, #52]	; 0x34
   173f0:	bl	13508 <find_levels_r>
   173f4:	ldr	r2, [sp, #52]	; 0x34
   173f8:	ldr	r0, [r2, #84]	; 0x54
   173fc:	bl	13508 <find_levels_r>
   17400:	ldr	r2, [sp, #52]	; 0x34
   17404:	ldr	r3, [sp, #56]	; 0x38
   17408:	ldr	r0, [r2, #84]	; 0x54
   1740c:	ldr	ip, [r2, #60]	; 0x3c
   17410:	ldr	r0, [r0, #36]	; 0x24
   17414:	ldr	ip, [ip, #36]	; 0x24
   17418:	cmp	r0, ip
   1741c:	movlt	r0, ip
   17420:	add	r0, r0, #1
   17424:	lsl	ip, r0, #2
   17428:	ldr	lr, [sl]
   1742c:	str	r0, [r2, #36]	; 0x24
   17430:	ldr	r0, [lr, ip]
   17434:	str	r0, [r2, #100]	; 0x64
   17438:	str	r2, [lr, ip]
   1743c:	ldr	r2, [r8, #84]	; 0x54
   17440:	ldr	ip, [r8, #60]	; 0x3c
   17444:	ldr	r0, [r2, #36]	; 0x24
   17448:	ldr	r2, [ip, #36]	; 0x24
   1744c:	cmp	r2, r0
   17450:	movlt	r2, r0
   17454:	add	r2, r2, #1
   17458:	lsl	r0, r2, #2
   1745c:	ldr	ip, [sl]
   17460:	str	r2, [r8, #36]	; 0x24
   17464:	ldr	r2, [ip, r0]
   17468:	str	r2, [r8, #100]	; 0x64
   1746c:	str	r8, [ip, r0]
   17470:	ldr	r8, [r3, #84]	; 0x54
   17474:	ldr	r2, [r3, #60]	; 0x3c
   17478:	ldr	r8, [r8, #36]	; 0x24
   1747c:	ldr	r2, [r2, #36]	; 0x24
   17480:	cmp	r2, r8
   17484:	movge	r8, r2
   17488:	add	r8, r8, #1
   1748c:	lsl	r2, r8, #2
   17490:	ldr	r0, [sl]
   17494:	str	r8, [r3, #36]	; 0x24
   17498:	ldr	ip, [r0, r2]
   1749c:	str	ip, [r3, #100]	; 0x64
   174a0:	str	r3, [r0, r2]
   174a4:	ldr	r3, [r9, #84]	; 0x54
   174a8:	ldr	r2, [r9, #60]	; 0x3c
   174ac:	ldr	r8, [r3, #36]	; 0x24
   174b0:	ldr	r3, [r2, #36]	; 0x24
   174b4:	cmp	r3, r8
   174b8:	movge	r8, r3
   174bc:	add	r8, r8, #1
   174c0:	lsl	r3, r8, #2
   174c4:	ldr	r2, [sl]
   174c8:	str	r8, [r9, #36]	; 0x24
   174cc:	ldr	r0, [r2, r3]
   174d0:	str	r0, [r9, #100]	; 0x64
   174d4:	str	r9, [r2, r3]
   174d8:	ldr	r3, [sp]
   174dc:	ldr	r9, [r3, #84]	; 0x54
   174e0:	ldr	r3, [sp]
   174e4:	ldr	r8, [r9, #36]	; 0x24
   174e8:	ldr	r3, [r3, #60]	; 0x3c
   174ec:	ldr	r3, [r3, #36]	; 0x24
   174f0:	cmp	r3, r8
   174f4:	movge	r8, r3
   174f8:	add	r8, r8, #1
   174fc:	lsl	r2, r8, #2
   17500:	ldr	r1, [sp]
   17504:	ldr	r3, [sl]
   17508:	str	r8, [r1, #36]	; 0x24
   1750c:	ldr	r0, [r3, r2]
   17510:	str	r0, [r1, #100]	; 0x64
   17514:	str	r1, [r3, r2]
   17518:	ldr	r8, [fp, #84]	; 0x54
   1751c:	ldr	r3, [r8, #24]
   17520:	cmp	r4, r3
   17524:	beq	17fb8 <sf_bpf_optimize+0x1928>
   17528:	ldr	r3, [r8, #60]	; 0x3c
   1752c:	str	r4, [r8, #24]
   17530:	subs	r2, r3, #0
   17534:	str	r3, [sp]
   17538:	str	r5, [r8, #100]	; 0x64
   1753c:	beq	196a0 <sf_bpf_optimize+0x3010>
   17540:	ldr	r3, [r3, #24]
   17544:	cmp	r4, r3
   17548:	beq	179dc <sf_bpf_optimize+0x134c>
   1754c:	ldr	r9, [r2, #60]	; 0x3c
   17550:	mov	r3, r2
   17554:	cmp	r9, #0
   17558:	str	r4, [r2, #24]
   1755c:	str	r5, [r2, #100]	; 0x64
   17560:	moveq	r3, r5
   17564:	beq	179c4 <sf_bpf_optimize+0x1334>
   17568:	ldr	r3, [r9, #24]
   1756c:	cmp	r4, r3
   17570:	beq	17780 <sf_bpf_optimize+0x10f0>
   17574:	ldr	r3, [r9, #60]	; 0x3c
   17578:	str	r4, [r9, #24]
   1757c:	cmp	r3, #0
   17580:	str	r5, [r9, #100]	; 0x64
   17584:	moveq	r2, r5
   17588:	beq	1776c <sf_bpf_optimize+0x10dc>
   1758c:	ldr	r2, [r3, #24]
   17590:	cmp	r4, r2
   17594:	beq	175fc <sf_bpf_optimize+0xf6c>
   17598:	ldr	r0, [r3, #60]	; 0x3c
   1759c:	str	r4, [r3, #24]
   175a0:	cmp	r0, #0
   175a4:	str	r5, [r3, #100]	; 0x64
   175a8:	moveq	r2, r5
   175ac:	beq	175e8 <sf_bpf_optimize+0xf58>
   175b0:	str	r3, [sp, #52]	; 0x34
   175b4:	bl	13508 <find_levels_r>
   175b8:	ldr	r3, [sp, #52]	; 0x34
   175bc:	ldr	r0, [r3, #84]	; 0x54
   175c0:	bl	13508 <find_levels_r>
   175c4:	ldr	r3, [sp, #52]	; 0x34
   175c8:	ldr	r2, [r3, #84]	; 0x54
   175cc:	ldr	r0, [r3, #60]	; 0x3c
   175d0:	ldr	r2, [r2, #36]	; 0x24
   175d4:	ldr	r0, [r0, #36]	; 0x24
   175d8:	cmp	r2, r0
   175dc:	movge	r0, r2
   175e0:	add	r0, r0, #1
   175e4:	lsl	r2, r0, #2
   175e8:	ldr	ip, [sl]
   175ec:	str	r0, [r3, #36]	; 0x24
   175f0:	ldr	r0, [ip, r2]
   175f4:	str	r0, [r3, #100]	; 0x64
   175f8:	str	r3, [ip, r2]
   175fc:	ldr	r3, [r9, #84]	; 0x54
   17600:	ldr	r2, [r3, #24]
   17604:	cmp	r4, r2
   17608:	beq	17750 <sf_bpf_optimize+0x10c0>
   1760c:	ldr	r2, [r3, #60]	; 0x3c
   17610:	str	r4, [r3, #24]
   17614:	cmp	r2, #0
   17618:	str	r5, [r3, #100]	; 0x64
   1761c:	moveq	r0, r5
   17620:	beq	17738 <sf_bpf_optimize+0x10a8>
   17624:	ldr	r0, [r2, #24]
   17628:	cmp	r4, r0
   1762c:	beq	1769c <sf_bpf_optimize+0x100c>
   17630:	ldr	r0, [r2, #60]	; 0x3c
   17634:	str	r4, [r2, #24]
   17638:	cmp	r0, #0
   1763c:	str	r5, [r2, #100]	; 0x64
   17640:	moveq	ip, r5
   17644:	beq	17688 <sf_bpf_optimize+0xff8>
   17648:	str	r3, [sp, #56]	; 0x38
   1764c:	str	r2, [sp, #52]	; 0x34
   17650:	bl	13508 <find_levels_r>
   17654:	ldr	r2, [sp, #52]	; 0x34
   17658:	ldr	r0, [r2, #84]	; 0x54
   1765c:	bl	13508 <find_levels_r>
   17660:	ldr	r2, [sp, #52]	; 0x34
   17664:	ldr	r3, [sp, #56]	; 0x38
   17668:	ldr	r0, [r2, #84]	; 0x54
   1766c:	ldr	ip, [r2, #60]	; 0x3c
   17670:	ldr	r0, [r0, #36]	; 0x24
   17674:	ldr	ip, [ip, #36]	; 0x24
   17678:	cmp	r0, ip
   1767c:	movlt	r0, ip
   17680:	add	r0, r0, #1
   17684:	lsl	ip, r0, #2
   17688:	ldr	lr, [sl]
   1768c:	str	r0, [r2, #36]	; 0x24
   17690:	ldr	r0, [lr, ip]
   17694:	str	r0, [r2, #100]	; 0x64
   17698:	str	r2, [lr, ip]
   1769c:	ldr	r2, [r3, #84]	; 0x54
   176a0:	ldr	r0, [r2, #24]
   176a4:	cmp	r4, r0
   176a8:	beq	1771c <sf_bpf_optimize+0x108c>
   176ac:	ldr	r0, [r2, #60]	; 0x3c
   176b0:	str	r4, [r2, #24]
   176b4:	cmp	r0, #0
   176b8:	str	r5, [r2, #100]	; 0x64
   176bc:	moveq	ip, r5
   176c0:	beq	17704 <sf_bpf_optimize+0x1074>
   176c4:	str	r3, [sp, #56]	; 0x38
   176c8:	str	r2, [sp, #52]	; 0x34
   176cc:	bl	13508 <find_levels_r>
   176d0:	ldr	r2, [sp, #52]	; 0x34
   176d4:	ldr	r0, [r2, #84]	; 0x54
   176d8:	bl	13508 <find_levels_r>
   176dc:	ldr	r2, [sp, #52]	; 0x34
   176e0:	ldr	r3, [sp, #56]	; 0x38
   176e4:	ldr	r0, [r2, #84]	; 0x54
   176e8:	ldr	ip, [r2, #60]	; 0x3c
   176ec:	ldr	r0, [r0, #36]	; 0x24
   176f0:	ldr	ip, [ip, #36]	; 0x24
   176f4:	cmp	r0, ip
   176f8:	movlt	r0, ip
   176fc:	add	r0, r0, #1
   17700:	lsl	ip, r0, #2
   17704:	ldr	lr, [sl]
   17708:	str	r0, [r2, #36]	; 0x24
   1770c:	ldr	r0, [lr, ip]
   17710:	str	r0, [r2, #100]	; 0x64
   17714:	str	r2, [lr, ip]
   17718:	ldr	r2, [r3, #84]	; 0x54
   1771c:	ldr	ip, [r3, #60]	; 0x3c
   17720:	ldr	r0, [r2, #36]	; 0x24
   17724:	ldr	r2, [ip, #36]	; 0x24
   17728:	cmp	r2, r0
   1772c:	movlt	r2, r0
   17730:	add	r2, r2, #1
   17734:	lsl	r0, r2, #2
   17738:	ldr	ip, [sl]
   1773c:	str	r2, [r3, #36]	; 0x24
   17740:	ldr	r2, [ip, r0]
   17744:	str	r2, [r3, #100]	; 0x64
   17748:	str	r3, [ip, r0]
   1774c:	ldr	r3, [r9, #84]	; 0x54
   17750:	ldr	r0, [r9, #60]	; 0x3c
   17754:	ldr	r2, [r3, #36]	; 0x24
   17758:	ldr	r3, [r0, #36]	; 0x24
   1775c:	cmp	r3, r2
   17760:	movlt	r3, r2
   17764:	add	r3, r3, #1
   17768:	lsl	r2, r3, #2
   1776c:	ldr	r0, [sl]
   17770:	str	r3, [r9, #36]	; 0x24
   17774:	ldr	r3, [r0, r2]
   17778:	str	r3, [r9, #100]	; 0x64
   1777c:	str	r9, [r0, r2]
   17780:	ldr	r3, [sp]
   17784:	ldr	r3, [r3, #84]	; 0x54
   17788:	ldr	r2, [r3, #24]
   1778c:	cmp	r4, r2
   17790:	beq	179a4 <sf_bpf_optimize+0x1314>
   17794:	ldr	r9, [r3, #60]	; 0x3c
   17798:	str	r4, [r3, #24]
   1779c:	cmp	r9, #0
   177a0:	str	r5, [r3, #100]	; 0x64
   177a4:	moveq	r2, r5
   177a8:	beq	17988 <sf_bpf_optimize+0x12f8>
   177ac:	ldr	r2, [r9, #24]
   177b0:	cmp	r4, r2
   177b4:	beq	178f8 <sf_bpf_optimize+0x1268>
   177b8:	ldr	r2, [r9, #60]	; 0x3c
   177bc:	str	r4, [r9, #24]
   177c0:	cmp	r2, #0
   177c4:	str	r5, [r9, #100]	; 0x64
   177c8:	moveq	r0, r5
   177cc:	beq	178e4 <sf_bpf_optimize+0x1254>
   177d0:	ldr	r0, [r2, #24]
   177d4:	cmp	r4, r0
   177d8:	beq	17848 <sf_bpf_optimize+0x11b8>
   177dc:	ldr	r0, [r2, #60]	; 0x3c
   177e0:	str	r4, [r2, #24]
   177e4:	cmp	r0, #0
   177e8:	str	r5, [r2, #100]	; 0x64
   177ec:	moveq	ip, r5
   177f0:	beq	17834 <sf_bpf_optimize+0x11a4>
   177f4:	str	r3, [sp, #56]	; 0x38
   177f8:	str	r2, [sp, #52]	; 0x34
   177fc:	bl	13508 <find_levels_r>
   17800:	ldr	r2, [sp, #52]	; 0x34
   17804:	ldr	r0, [r2, #84]	; 0x54
   17808:	bl	13508 <find_levels_r>
   1780c:	ldr	r2, [sp, #52]	; 0x34
   17810:	ldr	r3, [sp, #56]	; 0x38
   17814:	ldr	r0, [r2, #84]	; 0x54
   17818:	ldr	ip, [r2, #60]	; 0x3c
   1781c:	ldr	r0, [r0, #36]	; 0x24
   17820:	ldr	ip, [ip, #36]	; 0x24
   17824:	cmp	r0, ip
   17828:	movlt	r0, ip
   1782c:	add	r0, r0, #1
   17830:	lsl	ip, r0, #2
   17834:	ldr	lr, [sl]
   17838:	str	r0, [r2, #36]	; 0x24
   1783c:	ldr	r0, [lr, ip]
   17840:	str	r0, [r2, #100]	; 0x64
   17844:	str	r2, [lr, ip]
   17848:	ldr	r2, [r9, #84]	; 0x54
   1784c:	ldr	r0, [r2, #24]
   17850:	cmp	r4, r0
   17854:	beq	178c8 <sf_bpf_optimize+0x1238>
   17858:	ldr	r0, [r2, #60]	; 0x3c
   1785c:	str	r4, [r2, #24]
   17860:	cmp	r0, #0
   17864:	str	r5, [r2, #100]	; 0x64
   17868:	moveq	ip, r5
   1786c:	beq	178b0 <sf_bpf_optimize+0x1220>
   17870:	str	r3, [sp, #56]	; 0x38
   17874:	str	r2, [sp, #52]	; 0x34
   17878:	bl	13508 <find_levels_r>
   1787c:	ldr	r2, [sp, #52]	; 0x34
   17880:	ldr	r0, [r2, #84]	; 0x54
   17884:	bl	13508 <find_levels_r>
   17888:	ldr	r2, [sp, #52]	; 0x34
   1788c:	ldr	r3, [sp, #56]	; 0x38
   17890:	ldr	r0, [r2, #84]	; 0x54
   17894:	ldr	ip, [r2, #60]	; 0x3c
   17898:	ldr	r0, [r0, #36]	; 0x24
   1789c:	ldr	ip, [ip, #36]	; 0x24
   178a0:	cmp	r0, ip
   178a4:	movlt	r0, ip
   178a8:	add	r0, r0, #1
   178ac:	lsl	ip, r0, #2
   178b0:	ldr	lr, [sl]
   178b4:	str	r0, [r2, #36]	; 0x24
   178b8:	ldr	r0, [lr, ip]
   178bc:	str	r0, [r2, #100]	; 0x64
   178c0:	str	r2, [lr, ip]
   178c4:	ldr	r2, [r9, #84]	; 0x54
   178c8:	ldr	ip, [r9, #60]	; 0x3c
   178cc:	ldr	r0, [r2, #36]	; 0x24
   178d0:	ldr	r2, [ip, #36]	; 0x24
   178d4:	cmp	r2, r0
   178d8:	movlt	r2, r0
   178dc:	add	r2, r2, #1
   178e0:	lsl	r0, r2, #2
   178e4:	ldr	ip, [sl]
   178e8:	str	r2, [r9, #36]	; 0x24
   178ec:	ldr	r2, [ip, r0]
   178f0:	str	r2, [r9, #100]	; 0x64
   178f4:	str	r9, [ip, r0]
   178f8:	ldr	r9, [r3, #84]	; 0x54
   178fc:	ldr	r2, [r9, #24]
   17900:	cmp	r4, r2
   17904:	beq	1796c <sf_bpf_optimize+0x12dc>
   17908:	ldr	r0, [r9, #60]	; 0x3c
   1790c:	str	r4, [r9, #24]
   17910:	cmp	r0, #0
   17914:	str	r5, [r9, #100]	; 0x64
   17918:	moveq	r2, r5
   1791c:	beq	17954 <sf_bpf_optimize+0x12c4>
   17920:	str	r3, [sp, #52]	; 0x34
   17924:	bl	13508 <find_levels_r>
   17928:	ldr	r0, [r9, #84]	; 0x54
   1792c:	bl	13508 <find_levels_r>
   17930:	ldr	r2, [r9, #84]	; 0x54
   17934:	ldr	r0, [r9, #60]	; 0x3c
   17938:	ldr	r3, [sp, #52]	; 0x34
   1793c:	ldr	r2, [r2, #36]	; 0x24
   17940:	ldr	r0, [r0, #36]	; 0x24
   17944:	cmp	r2, r0
   17948:	movge	r0, r2
   1794c:	add	r0, r0, #1
   17950:	lsl	r2, r0, #2
   17954:	ldr	ip, [sl]
   17958:	str	r0, [r9, #36]	; 0x24
   1795c:	ldr	r0, [ip, r2]
   17960:	str	r0, [r9, #100]	; 0x64
   17964:	str	r9, [ip, r2]
   17968:	ldr	r9, [r3, #84]	; 0x54
   1796c:	ldr	r2, [r3, #60]	; 0x3c
   17970:	ldr	r9, [r9, #36]	; 0x24
   17974:	ldr	r2, [r2, #36]	; 0x24
   17978:	cmp	r2, r9
   1797c:	movge	r9, r2
   17980:	add	r9, r9, #1
   17984:	lsl	r2, r9, #2
   17988:	ldr	r0, [sl]
   1798c:	str	r9, [r3, #36]	; 0x24
   17990:	ldr	ip, [r0, r2]
   17994:	str	ip, [r3, #100]	; 0x64
   17998:	str	r3, [r0, r2]
   1799c:	ldr	r3, [sp]
   179a0:	ldr	r3, [r3, #84]	; 0x54
   179a4:	ldr	r2, [sp]
   179a8:	ldr	r9, [r3, #36]	; 0x24
   179ac:	ldr	r2, [r2, #60]	; 0x3c
   179b0:	ldr	r3, [r2, #36]	; 0x24
   179b4:	cmp	r3, r9
   179b8:	movge	r9, r3
   179bc:	add	r9, r9, #1
   179c0:	lsl	r3, r9, #2
   179c4:	ldr	r1, [sp]
   179c8:	ldr	r2, [sl]
   179cc:	str	r9, [r1, #36]	; 0x24
   179d0:	ldr	r0, [r2, r3]
   179d4:	str	r0, [r1, #100]	; 0x64
   179d8:	str	r1, [r2, r3]
   179dc:	ldr	r9, [r8, #84]	; 0x54
   179e0:	ldr	r3, [r9, #24]
   179e4:	cmp	r4, r3
   179e8:	beq	17f84 <sf_bpf_optimize+0x18f4>
   179ec:	ldr	r2, [r9, #60]	; 0x3c
   179f0:	str	r4, [r9, #24]
   179f4:	cmp	r2, #0
   179f8:	str	r2, [sp]
   179fc:	str	r5, [r9, #100]	; 0x64
   17a00:	beq	196c8 <sf_bpf_optimize+0x3038>
   17a04:	ldr	r3, [r2, #24]
   17a08:	cmp	r4, r3
   17a0c:	beq	17c2c <sf_bpf_optimize+0x159c>
   17a10:	ldr	r3, [r2, #60]	; 0x3c
   17a14:	str	r4, [r2, #24]
   17a18:	cmp	r3, #0
   17a1c:	str	r5, [r2, #100]	; 0x64
   17a20:	moveq	r2, r5
   17a24:	beq	17c14 <sf_bpf_optimize+0x1584>
   17a28:	ldr	r2, [r3, #24]
   17a2c:	cmp	r4, r2
   17a30:	beq	17b74 <sf_bpf_optimize+0x14e4>
   17a34:	ldr	r2, [r3, #60]	; 0x3c
   17a38:	str	r4, [r3, #24]
   17a3c:	cmp	r2, #0
   17a40:	str	r5, [r3, #100]	; 0x64
   17a44:	moveq	r0, r5
   17a48:	beq	17b60 <sf_bpf_optimize+0x14d0>
   17a4c:	ldr	r0, [r2, #24]
   17a50:	cmp	r4, r0
   17a54:	beq	17ac4 <sf_bpf_optimize+0x1434>
   17a58:	ldr	r0, [r2, #60]	; 0x3c
   17a5c:	str	r4, [r2, #24]
   17a60:	cmp	r0, #0
   17a64:	str	r5, [r2, #100]	; 0x64
   17a68:	moveq	ip, r5
   17a6c:	beq	17ab0 <sf_bpf_optimize+0x1420>
   17a70:	str	r3, [sp, #56]	; 0x38
   17a74:	str	r2, [sp, #52]	; 0x34
   17a78:	bl	13508 <find_levels_r>
   17a7c:	ldr	r2, [sp, #52]	; 0x34
   17a80:	ldr	r0, [r2, #84]	; 0x54
   17a84:	bl	13508 <find_levels_r>
   17a88:	ldr	r2, [sp, #52]	; 0x34
   17a8c:	ldr	r3, [sp, #56]	; 0x38
   17a90:	ldr	r0, [r2, #84]	; 0x54
   17a94:	ldr	ip, [r2, #60]	; 0x3c
   17a98:	ldr	r0, [r0, #36]	; 0x24
   17a9c:	ldr	ip, [ip, #36]	; 0x24
   17aa0:	cmp	r0, ip
   17aa4:	movlt	r0, ip
   17aa8:	add	r0, r0, #1
   17aac:	lsl	ip, r0, #2
   17ab0:	ldr	lr, [sl]
   17ab4:	str	r0, [r2, #36]	; 0x24
   17ab8:	ldr	r0, [lr, ip]
   17abc:	str	r0, [r2, #100]	; 0x64
   17ac0:	str	r2, [lr, ip]
   17ac4:	ldr	r2, [r3, #84]	; 0x54
   17ac8:	ldr	r0, [r2, #24]
   17acc:	cmp	r4, r0
   17ad0:	beq	17b44 <sf_bpf_optimize+0x14b4>
   17ad4:	ldr	r0, [r2, #60]	; 0x3c
   17ad8:	str	r4, [r2, #24]
   17adc:	cmp	r0, #0
   17ae0:	str	r5, [r2, #100]	; 0x64
   17ae4:	moveq	ip, r5
   17ae8:	beq	17b2c <sf_bpf_optimize+0x149c>
   17aec:	str	r3, [sp, #56]	; 0x38
   17af0:	str	r2, [sp, #52]	; 0x34
   17af4:	bl	13508 <find_levels_r>
   17af8:	ldr	r2, [sp, #52]	; 0x34
   17afc:	ldr	r0, [r2, #84]	; 0x54
   17b00:	bl	13508 <find_levels_r>
   17b04:	ldr	r2, [sp, #52]	; 0x34
   17b08:	ldr	r3, [sp, #56]	; 0x38
   17b0c:	ldr	r0, [r2, #84]	; 0x54
   17b10:	ldr	ip, [r2, #60]	; 0x3c
   17b14:	ldr	r0, [r0, #36]	; 0x24
   17b18:	ldr	ip, [ip, #36]	; 0x24
   17b1c:	cmp	r0, ip
   17b20:	movlt	r0, ip
   17b24:	add	r0, r0, #1
   17b28:	lsl	ip, r0, #2
   17b2c:	ldr	lr, [sl]
   17b30:	str	r0, [r2, #36]	; 0x24
   17b34:	ldr	r0, [lr, ip]
   17b38:	str	r0, [r2, #100]	; 0x64
   17b3c:	str	r2, [lr, ip]
   17b40:	ldr	r2, [r3, #84]	; 0x54
   17b44:	ldr	ip, [r3, #60]	; 0x3c
   17b48:	ldr	r0, [r2, #36]	; 0x24
   17b4c:	ldr	r2, [ip, #36]	; 0x24
   17b50:	cmp	r2, r0
   17b54:	movlt	r2, r0
   17b58:	add	r2, r2, #1
   17b5c:	lsl	r0, r2, #2
   17b60:	ldr	ip, [sl]
   17b64:	str	r2, [r3, #36]	; 0x24
   17b68:	ldr	r2, [ip, r0]
   17b6c:	str	r2, [r3, #100]	; 0x64
   17b70:	str	r3, [ip, r0]
   17b74:	ldr	r3, [sp]
   17b78:	ldr	r3, [r3, #84]	; 0x54
   17b7c:	ldr	r2, [r3, #24]
   17b80:	cmp	r4, r2
   17b84:	beq	17bf4 <sf_bpf_optimize+0x1564>
   17b88:	ldr	r0, [r3, #60]	; 0x3c
   17b8c:	str	r4, [r3, #24]
   17b90:	cmp	r0, #0
   17b94:	str	r5, [r3, #100]	; 0x64
   17b98:	moveq	r2, r5
   17b9c:	beq	17bd8 <sf_bpf_optimize+0x1548>
   17ba0:	str	r3, [sp, #52]	; 0x34
   17ba4:	bl	13508 <find_levels_r>
   17ba8:	ldr	r3, [sp, #52]	; 0x34
   17bac:	ldr	r0, [r3, #84]	; 0x54
   17bb0:	bl	13508 <find_levels_r>
   17bb4:	ldr	r3, [sp, #52]	; 0x34
   17bb8:	ldr	r2, [r3, #84]	; 0x54
   17bbc:	ldr	r0, [r3, #60]	; 0x3c
   17bc0:	ldr	r2, [r2, #36]	; 0x24
   17bc4:	ldr	r0, [r0, #36]	; 0x24
   17bc8:	cmp	r2, r0
   17bcc:	movge	r0, r2
   17bd0:	add	r0, r0, #1
   17bd4:	lsl	r2, r0, #2
   17bd8:	ldr	ip, [sl]
   17bdc:	str	r0, [r3, #36]	; 0x24
   17be0:	ldr	r0, [ip, r2]
   17be4:	str	r0, [r3, #100]	; 0x64
   17be8:	str	r3, [ip, r2]
   17bec:	ldr	r3, [sp]
   17bf0:	ldr	r3, [r3, #84]	; 0x54
   17bf4:	ldr	r2, [sp]
   17bf8:	ldr	r0, [r2, #60]	; 0x3c
   17bfc:	ldr	r2, [r3, #36]	; 0x24
   17c00:	ldr	r3, [r0, #36]	; 0x24
   17c04:	cmp	r3, r2
   17c08:	movlt	r3, r2
   17c0c:	add	r3, r3, #1
   17c10:	lsl	r2, r3, #2
   17c14:	ldr	r1, [sp]
   17c18:	ldr	r0, [sl]
   17c1c:	str	r3, [r1, #36]	; 0x24
   17c20:	ldr	r3, [r0, r2]
   17c24:	str	r3, [r1, #100]	; 0x64
   17c28:	str	r1, [r0, r2]
   17c2c:	ldr	r3, [r9, #84]	; 0x54
   17c30:	ldr	r2, [r3, #24]
   17c34:	cmp	r4, r2
   17c38:	beq	17f50 <sf_bpf_optimize+0x18c0>
   17c3c:	ldr	r1, [r3, #60]	; 0x3c
   17c40:	str	r4, [r3, #24]
   17c44:	cmp	r1, #0
   17c48:	str	r1, [sp]
   17c4c:	str	r5, [r3, #100]	; 0x64
   17c50:	moveq	r2, r5
   17c54:	beq	17f38 <sf_bpf_optimize+0x18a8>
   17c58:	ldr	r2, [r1, #24]
   17c5c:	cmp	r4, r2
   17c60:	beq	17db0 <sf_bpf_optimize+0x1720>
   17c64:	ldr	r2, [r1, #60]	; 0x3c
   17c68:	str	r4, [r1, #24]
   17c6c:	cmp	r2, #0
   17c70:	str	r5, [r1, #100]	; 0x64
   17c74:	moveq	r0, r5
   17c78:	beq	17d9c <sf_bpf_optimize+0x170c>
   17c7c:	ldr	r0, [r2, #24]
   17c80:	cmp	r4, r0
   17c84:	beq	17cf4 <sf_bpf_optimize+0x1664>
   17c88:	ldr	r0, [r2, #60]	; 0x3c
   17c8c:	str	r4, [r2, #24]
   17c90:	cmp	r0, #0
   17c94:	str	r5, [r2, #100]	; 0x64
   17c98:	moveq	ip, r5
   17c9c:	beq	17ce0 <sf_bpf_optimize+0x1650>
   17ca0:	str	r3, [sp, #56]	; 0x38
   17ca4:	str	r2, [sp, #52]	; 0x34
   17ca8:	bl	13508 <find_levels_r>
   17cac:	ldr	r2, [sp, #52]	; 0x34
   17cb0:	ldr	r0, [r2, #84]	; 0x54
   17cb4:	bl	13508 <find_levels_r>
   17cb8:	ldr	r2, [sp, #52]	; 0x34
   17cbc:	ldr	r3, [sp, #56]	; 0x38
   17cc0:	ldr	r0, [r2, #84]	; 0x54
   17cc4:	ldr	ip, [r2, #60]	; 0x3c
   17cc8:	ldr	r0, [r0, #36]	; 0x24
   17ccc:	ldr	ip, [ip, #36]	; 0x24
   17cd0:	cmp	r0, ip
   17cd4:	movlt	r0, ip
   17cd8:	add	r0, r0, #1
   17cdc:	lsl	ip, r0, #2
   17ce0:	ldr	lr, [sl]
   17ce4:	str	r0, [r2, #36]	; 0x24
   17ce8:	ldr	r0, [lr, ip]
   17cec:	str	r0, [r2, #100]	; 0x64
   17cf0:	str	r2, [lr, ip]
   17cf4:	ldr	r2, [sp]
   17cf8:	ldr	r2, [r2, #84]	; 0x54
   17cfc:	ldr	r0, [r2, #24]
   17d00:	cmp	r4, r0
   17d04:	beq	17d7c <sf_bpf_optimize+0x16ec>
   17d08:	ldr	r0, [r2, #60]	; 0x3c
   17d0c:	str	r4, [r2, #24]
   17d10:	cmp	r0, #0
   17d14:	str	r5, [r2, #100]	; 0x64
   17d18:	moveq	ip, r5
   17d1c:	beq	17d60 <sf_bpf_optimize+0x16d0>
   17d20:	str	r3, [sp, #56]	; 0x38
   17d24:	str	r2, [sp, #52]	; 0x34
   17d28:	bl	13508 <find_levels_r>
   17d2c:	ldr	r2, [sp, #52]	; 0x34
   17d30:	ldr	r0, [r2, #84]	; 0x54
   17d34:	bl	13508 <find_levels_r>
   17d38:	ldr	r2, [sp, #52]	; 0x34
   17d3c:	ldr	r3, [sp, #56]	; 0x38
   17d40:	ldr	r0, [r2, #84]	; 0x54
   17d44:	ldr	ip, [r2, #60]	; 0x3c
   17d48:	ldr	r0, [r0, #36]	; 0x24
   17d4c:	ldr	ip, [ip, #36]	; 0x24
   17d50:	cmp	r0, ip
   17d54:	movlt	r0, ip
   17d58:	add	r0, r0, #1
   17d5c:	lsl	ip, r0, #2
   17d60:	ldr	lr, [sl]
   17d64:	str	r0, [r2, #36]	; 0x24
   17d68:	ldr	r0, [lr, ip]
   17d6c:	str	r0, [r2, #100]	; 0x64
   17d70:	str	r2, [lr, ip]
   17d74:	ldr	r2, [sp]
   17d78:	ldr	r2, [r2, #84]	; 0x54
   17d7c:	ldr	r1, [sp]
   17d80:	ldr	r0, [r2, #36]	; 0x24
   17d84:	ldr	ip, [r1, #60]	; 0x3c
   17d88:	ldr	r2, [ip, #36]	; 0x24
   17d8c:	cmp	r2, r0
   17d90:	movlt	r2, r0
   17d94:	add	r2, r2, #1
   17d98:	lsl	r0, r2, #2
   17d9c:	ldr	ip, [sl]
   17da0:	str	r2, [r1, #36]	; 0x24
   17da4:	ldr	r2, [ip, r0]
   17da8:	str	r2, [r1, #100]	; 0x64
   17dac:	str	r1, [ip, r0]
   17db0:	ldr	r1, [r3, #84]	; 0x54
   17db4:	str	r1, [sp]
   17db8:	ldr	r2, [r1, #24]
   17dbc:	cmp	r4, r2
   17dc0:	beq	17f1c <sf_bpf_optimize+0x188c>
   17dc4:	ldr	r2, [r1, #60]	; 0x3c
   17dc8:	str	r4, [r1, #24]
   17dcc:	cmp	r2, #0
   17dd0:	str	r5, [r1, #100]	; 0x64
   17dd4:	moveq	r0, r5
   17dd8:	beq	17efc <sf_bpf_optimize+0x186c>
   17ddc:	ldr	r0, [r2, #24]
   17de0:	cmp	r4, r0
   17de4:	beq	17e54 <sf_bpf_optimize+0x17c4>
   17de8:	ldr	r0, [r2, #60]	; 0x3c
   17dec:	str	r4, [r2, #24]
   17df0:	cmp	r0, #0
   17df4:	str	r5, [r2, #100]	; 0x64
   17df8:	moveq	ip, r5
   17dfc:	beq	17e40 <sf_bpf_optimize+0x17b0>
   17e00:	str	r3, [sp, #56]	; 0x38
   17e04:	str	r2, [sp, #52]	; 0x34
   17e08:	bl	13508 <find_levels_r>
   17e0c:	ldr	r2, [sp, #52]	; 0x34
   17e10:	ldr	r0, [r2, #84]	; 0x54
   17e14:	bl	13508 <find_levels_r>
   17e18:	ldr	r2, [sp, #52]	; 0x34
   17e1c:	ldr	r3, [sp, #56]	; 0x38
   17e20:	ldr	r0, [r2, #84]	; 0x54
   17e24:	ldr	ip, [r2, #60]	; 0x3c
   17e28:	ldr	r0, [r0, #36]	; 0x24
   17e2c:	ldr	ip, [ip, #36]	; 0x24
   17e30:	cmp	r0, ip
   17e34:	movlt	r0, ip
   17e38:	add	r0, r0, #1
   17e3c:	lsl	ip, r0, #2
   17e40:	ldr	lr, [sl]
   17e44:	str	r0, [r2, #36]	; 0x24
   17e48:	ldr	r0, [lr, ip]
   17e4c:	str	r0, [r2, #100]	; 0x64
   17e50:	str	r2, [lr, ip]
   17e54:	ldr	r2, [sp]
   17e58:	ldr	r2, [r2, #84]	; 0x54
   17e5c:	ldr	r0, [r2, #24]
   17e60:	cmp	r4, r0
   17e64:	beq	17edc <sf_bpf_optimize+0x184c>
   17e68:	ldr	r0, [r2, #60]	; 0x3c
   17e6c:	str	r4, [r2, #24]
   17e70:	cmp	r0, #0
   17e74:	str	r5, [r2, #100]	; 0x64
   17e78:	moveq	ip, r5
   17e7c:	beq	17ec0 <sf_bpf_optimize+0x1830>
   17e80:	str	r3, [sp, #56]	; 0x38
   17e84:	str	r2, [sp, #52]	; 0x34
   17e88:	bl	13508 <find_levels_r>
   17e8c:	ldr	r2, [sp, #52]	; 0x34
   17e90:	ldr	r0, [r2, #84]	; 0x54
   17e94:	bl	13508 <find_levels_r>
   17e98:	ldr	r2, [sp, #52]	; 0x34
   17e9c:	ldr	r3, [sp, #56]	; 0x38
   17ea0:	ldr	r0, [r2, #84]	; 0x54
   17ea4:	ldr	ip, [r2, #60]	; 0x3c
   17ea8:	ldr	r0, [r0, #36]	; 0x24
   17eac:	ldr	ip, [ip, #36]	; 0x24
   17eb0:	cmp	r0, ip
   17eb4:	movlt	r0, ip
   17eb8:	add	r0, r0, #1
   17ebc:	lsl	ip, r0, #2
   17ec0:	ldr	lr, [sl]
   17ec4:	str	r0, [r2, #36]	; 0x24
   17ec8:	ldr	r0, [lr, ip]
   17ecc:	str	r0, [r2, #100]	; 0x64
   17ed0:	str	r2, [lr, ip]
   17ed4:	ldr	r2, [sp]
   17ed8:	ldr	r2, [r2, #84]	; 0x54
   17edc:	ldr	r1, [sp]
   17ee0:	ldr	r0, [r2, #36]	; 0x24
   17ee4:	ldr	ip, [r1, #60]	; 0x3c
   17ee8:	ldr	r2, [ip, #36]	; 0x24
   17eec:	cmp	r2, r0
   17ef0:	movlt	r2, r0
   17ef4:	add	r2, r2, #1
   17ef8:	lsl	r0, r2, #2
   17efc:	ldr	ip, [sl]
   17f00:	str	r2, [r1, #36]	; 0x24
   17f04:	ldr	r2, [ip, r0]
   17f08:	str	r2, [r1, #100]	; 0x64
   17f0c:	str	r1, [ip, r0]
   17f10:	ldr	r2, [r3, #84]	; 0x54
   17f14:	mov	r1, r2
   17f18:	str	r2, [sp]
   17f1c:	ldr	r2, [r3, #60]	; 0x3c
   17f20:	ldr	r1, [r1, #36]	; 0x24
   17f24:	ldr	r2, [r2, #36]	; 0x24
   17f28:	cmp	r2, r1
   17f2c:	movge	r1, r2
   17f30:	add	r1, r1, #1
   17f34:	lsl	r2, r1, #2
   17f38:	ldr	r0, [sl]
   17f3c:	str	r1, [r3, #36]	; 0x24
   17f40:	ldr	r1, [r0, r2]
   17f44:	str	r1, [r3, #100]	; 0x64
   17f48:	str	r3, [r0, r2]
   17f4c:	ldr	r3, [r9, #84]	; 0x54
   17f50:	ldr	r2, [r9, #60]	; 0x3c
   17f54:	ldr	r1, [r3, #36]	; 0x24
   17f58:	ldr	r3, [r2, #36]	; 0x24
   17f5c:	cmp	r3, r1
   17f60:	movge	r1, r3
   17f64:	add	r1, r1, #1
   17f68:	lsl	r3, r1, #2
   17f6c:	ldr	r2, [sl]
   17f70:	str	r1, [r9, #36]	; 0x24
   17f74:	ldr	r1, [r2, r3]
   17f78:	str	r1, [r9, #100]	; 0x64
   17f7c:	str	r9, [r2, r3]
   17f80:	ldr	r9, [r8, #84]	; 0x54
   17f84:	ldr	r3, [r8, #60]	; 0x3c
   17f88:	ldr	r1, [r9, #36]	; 0x24
   17f8c:	ldr	r3, [r3, #36]	; 0x24
   17f90:	cmp	r3, r1
   17f94:	movge	r1, r3
   17f98:	add	r1, r1, #1
   17f9c:	lsl	r2, r1, #2
   17fa0:	ldr	r3, [sl]
   17fa4:	str	r1, [r8, #36]	; 0x24
   17fa8:	ldr	r1, [r3, r2]
   17fac:	str	r1, [r8, #100]	; 0x64
   17fb0:	str	r8, [r3, r2]
   17fb4:	ldr	r8, [fp, #84]	; 0x54
   17fb8:	ldr	r2, [fp, #60]	; 0x3c
   17fbc:	ldr	r3, [r8, #36]	; 0x24
   17fc0:	ldr	r1, [r2, #36]	; 0x24
   17fc4:	cmp	r1, r3
   17fc8:	movlt	r1, r3
   17fcc:	add	r1, r1, #1
   17fd0:	lsl	r2, r1, #2
   17fd4:	ldr	r3, [sl]
   17fd8:	str	r1, [fp, #36]	; 0x24
   17fdc:	ldr	r1, [r3, r2]
   17fe0:	str	r1, [fp, #100]	; 0x64
   17fe4:	str	fp, [r3, r2]
   17fe8:	ldr	r8, [sp, #8]
   17fec:	ldr	r1, [sp, #12]
   17ff0:	mov	r0, r8
   17ff4:	bl	1201c <find_dom.isra.0>
   17ff8:	mov	r0, r8
   17ffc:	bl	12168 <find_closure.isra.7>
   18000:	ldr	r0, [fp, #36]	; 0x24
   18004:	bl	12de0 <find_ud.isra.9>
   18008:	mov	r0, fp
   1800c:	bl	12624 <find_edom>
   18010:	mov	r1, r5
   18014:	mov	r0, fp
   18018:	bl	15924 <opt_blks>
   1801c:	ldr	r3, [r7]
   18020:	add	r4, r4, #1
   18024:	cmp	r3, #0
   18028:	beq	16a7c <sf_bpf_optimize+0x3ec>
   1802c:	ldr	r1, [pc, #4084]	; 19028 <sf_bpf_optimize+0x2998>
   18030:	ldr	r3, [pc, #4084]	; 1902c <sf_bpf_optimize+0x299c>
   18034:	add	r1, pc, r1
   18038:	str	r1, [sp, #84]	; 0x54
   1803c:	ldr	r2, [pc, #4076]	; 19030 <sf_bpf_optimize+0x29a0>
   18040:	ldr	r1, [sp, #28]
   18044:	add	r2, pc, r2
   18048:	str	r2, [sp, #52]	; 0x34
   1804c:	ldr	r4, [sp, #16]
   18050:	ldr	r3, [r1, r3]
   18054:	ldr	r6, [sp, #4]
   18058:	mov	r9, #1
   1805c:	mov	r5, r2
   18060:	str	r3, [sp, #28]
   18064:	add	r3, r2, #44	; 0x2c
   18068:	str	r2, [sp, #56]	; 0x38
   1806c:	str	r3, [sp, #60]	; 0x3c
   18070:	str	fp, [sp]
   18074:	mov	r2, r6
   18078:	mov	r1, #0
   1807c:	ldr	r0, [sl]
   18080:	str	r9, [r5]
   18084:	bl	e88 <memset@plt>
   18088:	ldr	r2, [sp]
   1808c:	add	r4, r4, #1
   18090:	str	r4, [r5, #4]
   18094:	ldr	r3, [r2, #24]
   18098:	cmp	r4, r3
   1809c:	beq	19294 <sf_bpf_optimize+0x2c04>
   180a0:	ldr	r1, [r2, #60]	; 0x3c
   180a4:	mov	r3, #0
   180a8:	cmp	r1, r3
   180ac:	str	r1, [sp, #4]
   180b0:	str	r4, [r2, #24]
   180b4:	str	r3, [r2, #100]	; 0x64
   180b8:	beq	1990c <sf_bpf_optimize+0x327c>
   180bc:	ldr	r2, [r1, #24]
   180c0:	cmp	r4, r2
   180c4:	beq	1896c <sf_bpf_optimize+0x22dc>
   180c8:	ldr	r5, [r1, #60]	; 0x3c
   180cc:	str	r3, [r1, #100]	; 0x64
   180d0:	cmp	r5, r3
   180d4:	str	r4, [r1, #24]
   180d8:	moveq	r3, r5
   180dc:	beq	18958 <sf_bpf_optimize+0x22c8>
   180e0:	ldr	r2, [r5, #24]
   180e4:	cmp	r4, r2
   180e8:	beq	18500 <sf_bpf_optimize+0x1e70>
   180ec:	ldr	r7, [r5, #60]	; 0x3c
   180f0:	str	r3, [r5, #100]	; 0x64
   180f4:	cmp	r7, r3
   180f8:	str	r4, [r5, #24]
   180fc:	moveq	r3, r7
   18100:	beq	184ec <sf_bpf_optimize+0x1e5c>
   18104:	ldr	r2, [r7, #24]
   18108:	cmp	r4, r2
   1810c:	beq	182e4 <sf_bpf_optimize+0x1c54>
   18110:	ldr	r8, [r7, #60]	; 0x3c
   18114:	str	r3, [r7, #100]	; 0x64
   18118:	cmp	r8, r3
   1811c:	str	r4, [r7, #24]
   18120:	moveq	r3, r8
   18124:	beq	182d0 <sf_bpf_optimize+0x1c40>
   18128:	ldr	r2, [r8, #24]
   1812c:	cmp	r4, r2
   18130:	beq	18248 <sf_bpf_optimize+0x1bb8>
   18134:	ldr	fp, [r8, #60]	; 0x3c
   18138:	str	r4, [r8, #24]
   1813c:	cmp	fp, r3
   18140:	str	r3, [r8, #100]	; 0x64
   18144:	beq	19dd4 <sf_bpf_optimize+0x3744>
   18148:	ldr	r3, [fp, #24]
   1814c:	cmp	r4, r3
   18150:	beq	181ac <sf_bpf_optimize+0x1b1c>
   18154:	ldr	r0, [fp, #60]	; 0x3c
   18158:	mov	r3, #0
   1815c:	cmp	r0, r3
   18160:	str	r4, [fp, #24]
   18164:	str	r3, [fp, #100]	; 0x64
   18168:	beq	19f14 <sf_bpf_optimize+0x3884>
   1816c:	bl	13508 <find_levels_r>
   18170:	ldr	r0, [fp, #84]	; 0x54
   18174:	bl	13508 <find_levels_r>
   18178:	ldr	r3, [fp, #84]	; 0x54
   1817c:	ldr	r2, [fp, #60]	; 0x3c
   18180:	ldr	r3, [r3, #36]	; 0x24
   18184:	ldr	r2, [r2, #36]	; 0x24
   18188:	cmp	r3, r2
   1818c:	movlt	r3, r2
   18190:	add	r2, r3, #1
   18194:	lsl	r3, r2, #2
   18198:	ldr	r0, [sl]
   1819c:	str	r2, [fp, #36]	; 0x24
   181a0:	ldr	r2, [r0, r3]
   181a4:	str	r2, [fp, #100]	; 0x64
   181a8:	str	fp, [r0, r3]
   181ac:	ldr	fp, [r8, #84]	; 0x54
   181b0:	ldr	r3, [fp, #24]
   181b4:	cmp	r4, r3
   181b8:	beq	18218 <sf_bpf_optimize+0x1b88>
   181bc:	ldr	r0, [fp, #60]	; 0x3c
   181c0:	mov	r3, #0
   181c4:	cmp	r0, r3
   181c8:	str	r4, [fp, #24]
   181cc:	str	r3, [fp, #100]	; 0x64
   181d0:	beq	19f08 <sf_bpf_optimize+0x3878>
   181d4:	bl	13508 <find_levels_r>
   181d8:	ldr	r0, [fp, #84]	; 0x54
   181dc:	bl	13508 <find_levels_r>
   181e0:	ldr	r3, [fp, #84]	; 0x54
   181e4:	ldr	r2, [fp, #60]	; 0x3c
   181e8:	ldr	r3, [r3, #36]	; 0x24
   181ec:	ldr	r2, [r2, #36]	; 0x24
   181f0:	cmp	r3, r2
   181f4:	movlt	r3, r2
   181f8:	add	r2, r3, #1
   181fc:	lsl	r3, r2, #2
   18200:	ldr	r0, [sl]
   18204:	str	r2, [fp, #36]	; 0x24
   18208:	ldr	r2, [r0, r3]
   1820c:	str	r2, [fp, #100]	; 0x64
   18210:	str	fp, [r0, r3]
   18214:	ldr	fp, [r8, #84]	; 0x54
   18218:	ldr	r3, [r8, #60]	; 0x3c
   1821c:	ldr	r2, [fp, #36]	; 0x24
   18220:	ldr	r3, [r3, #36]	; 0x24
   18224:	cmp	r3, r2
   18228:	movlt	r3, r2
   1822c:	add	r3, r3, #1
   18230:	lsl	r2, r3, #2
   18234:	ldr	r0, [sl]
   18238:	str	r3, [r8, #36]	; 0x24
   1823c:	ldr	r3, [r0, r2]
   18240:	str	r3, [r8, #100]	; 0x64
   18244:	str	r8, [r0, r2]
   18248:	ldr	r8, [r7, #84]	; 0x54
   1824c:	ldr	r3, [r8, #24]
   18250:	cmp	r4, r3
   18254:	beq	182b4 <sf_bpf_optimize+0x1c24>
   18258:	ldr	r0, [r8, #60]	; 0x3c
   1825c:	mov	r3, #0
   18260:	cmp	r0, r3
   18264:	str	r4, [r8, #24]
   18268:	str	r3, [r8, #100]	; 0x64
   1826c:	beq	19de0 <sf_bpf_optimize+0x3750>
   18270:	bl	13508 <find_levels_r>
   18274:	ldr	r0, [r8, #84]	; 0x54
   18278:	bl	13508 <find_levels_r>
   1827c:	ldr	r3, [r8, #84]	; 0x54
   18280:	ldr	r2, [r8, #60]	; 0x3c
   18284:	ldr	r3, [r3, #36]	; 0x24
   18288:	ldr	r2, [r2, #36]	; 0x24
   1828c:	cmp	r3, r2
   18290:	movlt	r3, r2
   18294:	add	r2, r3, #1
   18298:	lsl	r3, r2, #2
   1829c:	ldr	r0, [sl]
   182a0:	str	r2, [r8, #36]	; 0x24
   182a4:	ldr	r2, [r0, r3]
   182a8:	str	r2, [r8, #100]	; 0x64
   182ac:	str	r8, [r0, r3]
   182b0:	ldr	r8, [r7, #84]	; 0x54
   182b4:	ldr	r3, [r7, #60]	; 0x3c
   182b8:	ldr	r2, [r8, #36]	; 0x24
   182bc:	ldr	r3, [r3, #36]	; 0x24
   182c0:	cmp	r3, r2
   182c4:	movlt	r3, r2
   182c8:	add	r3, r3, #1
   182cc:	lsl	r8, r3, #2
   182d0:	ldr	r2, [sl]
   182d4:	str	r3, [r7, #36]	; 0x24
   182d8:	ldr	r3, [r2, r8]
   182dc:	str	r3, [r7, #100]	; 0x64
   182e0:	str	r7, [r2, r8]
   182e4:	ldr	fp, [r5, #84]	; 0x54
   182e8:	ldr	r3, [fp, #24]
   182ec:	cmp	r4, r3
   182f0:	beq	184d0 <sf_bpf_optimize+0x1e40>
   182f4:	ldr	r7, [fp, #60]	; 0x3c
   182f8:	mov	r3, #0
   182fc:	cmp	r7, r3
   18300:	str	r3, [fp, #100]	; 0x64
   18304:	str	r4, [fp, #24]
   18308:	moveq	r3, r7
   1830c:	beq	184b8 <sf_bpf_optimize+0x1e28>
   18310:	ldr	r2, [r7, #24]
   18314:	cmp	r4, r2
   18318:	beq	18430 <sf_bpf_optimize+0x1da0>
   1831c:	ldr	r8, [r7, #60]	; 0x3c
   18320:	str	r3, [r7, #100]	; 0x64
   18324:	cmp	r8, r3
   18328:	str	r4, [r7, #24]
   1832c:	moveq	r3, r8
   18330:	beq	1841c <sf_bpf_optimize+0x1d8c>
   18334:	ldr	r2, [r8, #24]
   18338:	cmp	r4, r2
   1833c:	beq	18394 <sf_bpf_optimize+0x1d04>
   18340:	ldr	r0, [r8, #60]	; 0x3c
   18344:	str	r4, [r8, #24]
   18348:	cmp	r0, r3
   1834c:	str	r3, [r8, #100]	; 0x64
   18350:	beq	19f4c <sf_bpf_optimize+0x38bc>
   18354:	bl	13508 <find_levels_r>
   18358:	ldr	r0, [r8, #84]	; 0x54
   1835c:	bl	13508 <find_levels_r>
   18360:	ldr	r3, [r8, #84]	; 0x54
   18364:	ldr	r2, [r8, #60]	; 0x3c
   18368:	ldr	r3, [r3, #36]	; 0x24
   1836c:	ldr	r2, [r2, #36]	; 0x24
   18370:	cmp	r3, r2
   18374:	movlt	r3, r2
   18378:	add	r2, r3, #1
   1837c:	lsl	r3, r2, #2
   18380:	ldr	r0, [sl]
   18384:	str	r2, [r8, #36]	; 0x24
   18388:	ldr	r2, [r0, r3]
   1838c:	str	r2, [r8, #100]	; 0x64
   18390:	str	r8, [r0, r3]
   18394:	ldr	r8, [r7, #84]	; 0x54
   18398:	ldr	r3, [r8, #24]
   1839c:	cmp	r4, r3
   183a0:	beq	18400 <sf_bpf_optimize+0x1d70>
   183a4:	ldr	r0, [r8, #60]	; 0x3c
   183a8:	mov	r3, #0
   183ac:	cmp	r0, r3
   183b0:	str	r4, [r8, #24]
   183b4:	str	r3, [r8, #100]	; 0x64
   183b8:	beq	19f88 <sf_bpf_optimize+0x38f8>
   183bc:	bl	13508 <find_levels_r>
   183c0:	ldr	r0, [r8, #84]	; 0x54
   183c4:	bl	13508 <find_levels_r>
   183c8:	ldr	r3, [r8, #84]	; 0x54
   183cc:	ldr	r2, [r8, #60]	; 0x3c
   183d0:	ldr	r3, [r3, #36]	; 0x24
   183d4:	ldr	r2, [r2, #36]	; 0x24
   183d8:	cmp	r3, r2
   183dc:	movlt	r3, r2
   183e0:	add	r2, r3, #1
   183e4:	lsl	r3, r2, #2
   183e8:	ldr	r0, [sl]
   183ec:	str	r2, [r8, #36]	; 0x24
   183f0:	ldr	r2, [r0, r3]
   183f4:	str	r2, [r8, #100]	; 0x64
   183f8:	str	r8, [r0, r3]
   183fc:	ldr	r8, [r7, #84]	; 0x54
   18400:	ldr	r3, [r7, #60]	; 0x3c
   18404:	ldr	r2, [r8, #36]	; 0x24
   18408:	ldr	r3, [r3, #36]	; 0x24
   1840c:	cmp	r3, r2
   18410:	movlt	r3, r2
   18414:	add	r3, r3, #1
   18418:	lsl	r8, r3, #2
   1841c:	ldr	r2, [sl]
   18420:	str	r3, [r7, #36]	; 0x24
   18424:	ldr	r3, [r2, r8]
   18428:	str	r3, [r7, #100]	; 0x64
   1842c:	str	r7, [r2, r8]
   18430:	ldr	r7, [fp, #84]	; 0x54
   18434:	ldr	r3, [r7, #24]
   18438:	cmp	r4, r3
   1843c:	beq	1849c <sf_bpf_optimize+0x1e0c>
   18440:	ldr	r0, [r7, #60]	; 0x3c
   18444:	mov	r3, #0
   18448:	cmp	r0, r3
   1844c:	str	r4, [r7, #24]
   18450:	str	r3, [r7, #100]	; 0x64
   18454:	beq	19d44 <sf_bpf_optimize+0x36b4>
   18458:	bl	13508 <find_levels_r>
   1845c:	ldr	r0, [r7, #84]	; 0x54
   18460:	bl	13508 <find_levels_r>
   18464:	ldr	r3, [r7, #84]	; 0x54
   18468:	ldr	r2, [r7, #60]	; 0x3c
   1846c:	ldr	r3, [r3, #36]	; 0x24
   18470:	ldr	r2, [r2, #36]	; 0x24
   18474:	cmp	r3, r2
   18478:	movlt	r3, r2
   1847c:	add	r2, r3, #1
   18480:	lsl	r3, r2, #2
   18484:	ldr	r0, [sl]
   18488:	str	r2, [r7, #36]	; 0x24
   1848c:	ldr	r2, [r0, r3]
   18490:	str	r2, [r7, #100]	; 0x64
   18494:	str	r7, [r0, r3]
   18498:	ldr	r7, [fp, #84]	; 0x54
   1849c:	ldr	r3, [fp, #60]	; 0x3c
   184a0:	ldr	r2, [r7, #36]	; 0x24
   184a4:	ldr	r3, [r3, #36]	; 0x24
   184a8:	cmp	r3, r2
   184ac:	movlt	r3, r2
   184b0:	add	r3, r3, #1
   184b4:	lsl	r7, r3, #2
   184b8:	ldr	r2, [sl]
   184bc:	str	r3, [fp, #36]	; 0x24
   184c0:	ldr	r3, [r2, r7]
   184c4:	str	r3, [fp, #100]	; 0x64
   184c8:	str	fp, [r2, r7]
   184cc:	ldr	fp, [r5, #84]	; 0x54
   184d0:	ldr	r3, [r5, #60]	; 0x3c
   184d4:	ldr	r2, [fp, #36]	; 0x24
   184d8:	ldr	r3, [r3, #36]	; 0x24
   184dc:	cmp	r3, r2
   184e0:	movlt	r3, r2
   184e4:	add	r3, r3, #1
   184e8:	lsl	r7, r3, #2
   184ec:	ldr	r2, [sl]
   184f0:	str	r3, [r5, #36]	; 0x24
   184f4:	ldr	r3, [r2, r7]
   184f8:	str	r3, [r5, #100]	; 0x64
   184fc:	str	r5, [r2, r7]
   18500:	ldr	r3, [sp, #4]
   18504:	ldr	r8, [r3, #84]	; 0x54
   18508:	ldr	r3, [r8, #24]
   1850c:	cmp	r4, r3
   18510:	beq	18934 <sf_bpf_optimize+0x22a4>
   18514:	ldr	r5, [r8, #60]	; 0x3c
   18518:	mov	r3, #0
   1851c:	cmp	r5, r3
   18520:	str	r3, [r8, #100]	; 0x64
   18524:	str	r4, [r8, #24]
   18528:	moveq	r3, r5
   1852c:	beq	18918 <sf_bpf_optimize+0x2288>
   18530:	ldr	r2, [r5, #24]
   18534:	cmp	r4, r2
   18538:	beq	18710 <sf_bpf_optimize+0x2080>
   1853c:	ldr	r7, [r5, #60]	; 0x3c
   18540:	str	r3, [r5, #100]	; 0x64
   18544:	cmp	r7, r3
   18548:	str	r4, [r5, #24]
   1854c:	moveq	r3, r7
   18550:	beq	186fc <sf_bpf_optimize+0x206c>
   18554:	ldr	r2, [r7, #24]
   18558:	cmp	r4, r2
   1855c:	beq	18674 <sf_bpf_optimize+0x1fe4>
   18560:	ldr	fp, [r7, #60]	; 0x3c
   18564:	str	r3, [r7, #100]	; 0x64
   18568:	cmp	fp, r3
   1856c:	str	r4, [r7, #24]
   18570:	moveq	r3, fp
   18574:	beq	18660 <sf_bpf_optimize+0x1fd0>
   18578:	ldr	r2, [fp, #24]
   1857c:	cmp	r4, r2
   18580:	beq	185d8 <sf_bpf_optimize+0x1f48>
   18584:	ldr	r0, [fp, #60]	; 0x3c
   18588:	str	r4, [fp, #24]
   1858c:	cmp	r0, r3
   18590:	str	r3, [fp, #100]	; 0x64
   18594:	beq	19f64 <sf_bpf_optimize+0x38d4>
   18598:	bl	13508 <find_levels_r>
   1859c:	ldr	r0, [fp, #84]	; 0x54
   185a0:	bl	13508 <find_levels_r>
   185a4:	ldr	r3, [fp, #84]	; 0x54
   185a8:	ldr	r2, [fp, #60]	; 0x3c
   185ac:	ldr	r3, [r3, #36]	; 0x24
   185b0:	ldr	r2, [r2, #36]	; 0x24
   185b4:	cmp	r3, r2
   185b8:	movlt	r3, r2
   185bc:	add	r2, r3, #1
   185c0:	lsl	r3, r2, #2
   185c4:	ldr	r0, [sl]
   185c8:	str	r2, [fp, #36]	; 0x24
   185cc:	ldr	r2, [r0, r3]
   185d0:	str	r2, [fp, #100]	; 0x64
   185d4:	str	fp, [r0, r3]
   185d8:	ldr	fp, [r7, #84]	; 0x54
   185dc:	ldr	r3, [fp, #24]
   185e0:	cmp	r4, r3
   185e4:	beq	18644 <sf_bpf_optimize+0x1fb4>
   185e8:	ldr	r0, [fp, #60]	; 0x3c
   185ec:	mov	r3, #0
   185f0:	cmp	r0, r3
   185f4:	str	r4, [fp, #24]
   185f8:	str	r3, [fp, #100]	; 0x64
   185fc:	beq	19f58 <sf_bpf_optimize+0x38c8>
   18600:	bl	13508 <find_levels_r>
   18604:	ldr	r0, [fp, #84]	; 0x54
   18608:	bl	13508 <find_levels_r>
   1860c:	ldr	r3, [fp, #84]	; 0x54
   18610:	ldr	r2, [fp, #60]	; 0x3c
   18614:	ldr	r3, [r3, #36]	; 0x24
   18618:	ldr	r2, [r2, #36]	; 0x24
   1861c:	cmp	r3, r2
   18620:	movlt	r3, r2
   18624:	add	r2, r3, #1
   18628:	lsl	r3, r2, #2
   1862c:	ldr	r0, [sl]
   18630:	str	r2, [fp, #36]	; 0x24
   18634:	ldr	r2, [r0, r3]
   18638:	str	r2, [fp, #100]	; 0x64
   1863c:	str	fp, [r0, r3]
   18640:	ldr	fp, [r7, #84]	; 0x54
   18644:	ldr	r3, [r7, #60]	; 0x3c
   18648:	ldr	r2, [fp, #36]	; 0x24
   1864c:	ldr	r3, [r3, #36]	; 0x24
   18650:	cmp	r3, r2
   18654:	movlt	r3, r2
   18658:	add	r3, r3, #1
   1865c:	lsl	fp, r3, #2
   18660:	ldr	r2, [sl]
   18664:	str	r3, [r7, #36]	; 0x24
   18668:	ldr	r3, [r2, fp]
   1866c:	str	r3, [r7, #100]	; 0x64
   18670:	str	r7, [r2, fp]
   18674:	ldr	r7, [r5, #84]	; 0x54
   18678:	ldr	r3, [r7, #24]
   1867c:	cmp	r4, r3
   18680:	beq	186e0 <sf_bpf_optimize+0x2050>
   18684:	ldr	r0, [r7, #60]	; 0x3c
   18688:	mov	r3, #0
   1868c:	cmp	r0, r3
   18690:	str	r4, [r7, #24]
   18694:	str	r3, [r7, #100]	; 0x64
   18698:	beq	19dc8 <sf_bpf_optimize+0x3738>
   1869c:	bl	13508 <find_levels_r>
   186a0:	ldr	r0, [r7, #84]	; 0x54
   186a4:	bl	13508 <find_levels_r>
   186a8:	ldr	r3, [r7, #84]	; 0x54
   186ac:	ldr	r2, [r7, #60]	; 0x3c
   186b0:	ldr	r3, [r3, #36]	; 0x24
   186b4:	ldr	r2, [r2, #36]	; 0x24
   186b8:	cmp	r3, r2
   186bc:	movlt	r3, r2
   186c0:	add	r2, r3, #1
   186c4:	lsl	r3, r2, #2
   186c8:	ldr	r0, [sl]
   186cc:	str	r2, [r7, #36]	; 0x24
   186d0:	ldr	r2, [r0, r3]
   186d4:	str	r2, [r7, #100]	; 0x64
   186d8:	str	r7, [r0, r3]
   186dc:	ldr	r7, [r5, #84]	; 0x54
   186e0:	ldr	r3, [r5, #60]	; 0x3c
   186e4:	ldr	r2, [r7, #36]	; 0x24
   186e8:	ldr	r3, [r3, #36]	; 0x24
   186ec:	cmp	r3, r2
   186f0:	movlt	r3, r2
   186f4:	add	r3, r3, #1
   186f8:	lsl	r7, r3, #2
   186fc:	ldr	r2, [sl]
   18700:	str	r3, [r5, #36]	; 0x24
   18704:	ldr	r3, [r2, r7]
   18708:	str	r3, [r5, #100]	; 0x64
   1870c:	str	r5, [r2, r7]
   18710:	ldr	fp, [r8, #84]	; 0x54
   18714:	ldr	r3, [fp, #24]
   18718:	cmp	r4, r3
   1871c:	beq	188fc <sf_bpf_optimize+0x226c>
   18720:	ldr	r5, [fp, #60]	; 0x3c
   18724:	mov	r3, #0
   18728:	cmp	r5, r3
   1872c:	str	r3, [fp, #100]	; 0x64
   18730:	str	r4, [fp, #24]
   18734:	moveq	r3, r5
   18738:	beq	188e4 <sf_bpf_optimize+0x2254>
   1873c:	ldr	r2, [r5, #24]
   18740:	cmp	r4, r2
   18744:	beq	1885c <sf_bpf_optimize+0x21cc>
   18748:	ldr	r7, [r5, #60]	; 0x3c
   1874c:	str	r3, [r5, #100]	; 0x64
   18750:	cmp	r7, r3
   18754:	str	r4, [r5, #24]
   18758:	moveq	r3, r7
   1875c:	beq	18848 <sf_bpf_optimize+0x21b8>
   18760:	ldr	r2, [r7, #24]
   18764:	cmp	r4, r2
   18768:	beq	187c0 <sf_bpf_optimize+0x2130>
   1876c:	ldr	r0, [r7, #60]	; 0x3c
   18770:	str	r4, [r7, #24]
   18774:	cmp	r0, r3
   18778:	str	r3, [r7, #100]	; 0x64
   1877c:	beq	19ee4 <sf_bpf_optimize+0x3854>
   18780:	bl	13508 <find_levels_r>
   18784:	ldr	r0, [r7, #84]	; 0x54
   18788:	bl	13508 <find_levels_r>
   1878c:	ldr	r3, [r7, #84]	; 0x54
   18790:	ldr	r2, [r7, #60]	; 0x3c
   18794:	ldr	r3, [r3, #36]	; 0x24
   18798:	ldr	r2, [r2, #36]	; 0x24
   1879c:	cmp	r3, r2
   187a0:	movlt	r3, r2
   187a4:	add	r2, r3, #1
   187a8:	lsl	r3, r2, #2
   187ac:	ldr	r0, [sl]
   187b0:	str	r2, [r7, #36]	; 0x24
   187b4:	ldr	r2, [r0, r3]
   187b8:	str	r2, [r7, #100]	; 0x64
   187bc:	str	r7, [r0, r3]
   187c0:	ldr	r7, [r5, #84]	; 0x54
   187c4:	ldr	r3, [r7, #24]
   187c8:	cmp	r4, r3
   187cc:	beq	1882c <sf_bpf_optimize+0x219c>
   187d0:	ldr	r0, [r7, #60]	; 0x3c
   187d4:	mov	r3, #0
   187d8:	cmp	r0, r3
   187dc:	str	r4, [r7, #24]
   187e0:	str	r3, [r7, #100]	; 0x64
   187e4:	beq	19ed8 <sf_bpf_optimize+0x3848>
   187e8:	bl	13508 <find_levels_r>
   187ec:	ldr	r0, [r7, #84]	; 0x54
   187f0:	bl	13508 <find_levels_r>
   187f4:	ldr	r3, [r7, #84]	; 0x54
   187f8:	ldr	r2, [r7, #60]	; 0x3c
   187fc:	ldr	r3, [r3, #36]	; 0x24
   18800:	ldr	r2, [r2, #36]	; 0x24
   18804:	cmp	r3, r2
   18808:	movlt	r3, r2
   1880c:	add	r2, r3, #1
   18810:	lsl	r3, r2, #2
   18814:	ldr	r0, [sl]
   18818:	str	r2, [r7, #36]	; 0x24
   1881c:	ldr	r2, [r0, r3]
   18820:	str	r2, [r7, #100]	; 0x64
   18824:	str	r7, [r0, r3]
   18828:	ldr	r7, [r5, #84]	; 0x54
   1882c:	ldr	r3, [r5, #60]	; 0x3c
   18830:	ldr	r2, [r7, #36]	; 0x24
   18834:	ldr	r3, [r3, #36]	; 0x24
   18838:	cmp	r3, r2
   1883c:	movlt	r3, r2
   18840:	add	r3, r3, #1
   18844:	lsl	r7, r3, #2
   18848:	ldr	r2, [sl]
   1884c:	str	r3, [r5, #36]	; 0x24
   18850:	ldr	r3, [r2, r7]
   18854:	str	r3, [r5, #100]	; 0x64
   18858:	str	r5, [r2, r7]
   1885c:	ldr	r5, [fp, #84]	; 0x54
   18860:	ldr	r3, [r5, #24]
   18864:	cmp	r4, r3
   18868:	beq	188c8 <sf_bpf_optimize+0x2238>
   1886c:	ldr	r0, [r5, #60]	; 0x3c
   18870:	mov	r3, #0
   18874:	cmp	r0, r3
   18878:	str	r4, [r5, #24]
   1887c:	str	r3, [r5, #100]	; 0x64
   18880:	beq	19df8 <sf_bpf_optimize+0x3768>
   18884:	bl	13508 <find_levels_r>
   18888:	ldr	r0, [r5, #84]	; 0x54
   1888c:	bl	13508 <find_levels_r>
   18890:	ldr	r3, [r5, #84]	; 0x54
   18894:	ldr	r2, [r5, #60]	; 0x3c
   18898:	ldr	r3, [r3, #36]	; 0x24
   1889c:	ldr	r2, [r2, #36]	; 0x24
   188a0:	cmp	r3, r2
   188a4:	movlt	r3, r2
   188a8:	add	r2, r3, #1
   188ac:	lsl	r3, r2, #2
   188b0:	ldr	r0, [sl]
   188b4:	str	r2, [r5, #36]	; 0x24
   188b8:	ldr	r2, [r0, r3]
   188bc:	str	r2, [r5, #100]	; 0x64
   188c0:	str	r5, [r0, r3]
   188c4:	ldr	r5, [fp, #84]	; 0x54
   188c8:	ldr	r3, [fp, #60]	; 0x3c
   188cc:	ldr	r2, [r5, #36]	; 0x24
   188d0:	ldr	r3, [r3, #36]	; 0x24
   188d4:	cmp	r3, r2
   188d8:	movlt	r3, r2
   188dc:	add	r3, r3, #1
   188e0:	lsl	r5, r3, #2
   188e4:	ldr	r2, [sl]
   188e8:	str	r3, [fp, #36]	; 0x24
   188ec:	ldr	r3, [r2, r5]
   188f0:	str	r3, [fp, #100]	; 0x64
   188f4:	str	fp, [r2, r5]
   188f8:	ldr	fp, [r8, #84]	; 0x54
   188fc:	ldr	r3, [r8, #60]	; 0x3c
   18900:	ldr	r2, [fp, #36]	; 0x24
   18904:	ldr	r3, [r3, #36]	; 0x24
   18908:	cmp	r3, r2
   1890c:	movlt	r3, r2
   18910:	add	r3, r3, #1
   18914:	lsl	r5, r3, #2
   18918:	ldr	r2, [sl]
   1891c:	str	r3, [r8, #36]	; 0x24
   18920:	ldr	r3, [r2, r5]
   18924:	str	r3, [r8, #100]	; 0x64
   18928:	ldr	r3, [sp, #4]
   1892c:	str	r8, [r2, r5]
   18930:	ldr	r8, [r3, #84]	; 0x54
   18934:	ldr	r3, [sp, #4]
   18938:	ldr	r2, [r8, #36]	; 0x24
   1893c:	ldr	r1, [sp, #4]
   18940:	ldr	r3, [r3, #60]	; 0x3c
   18944:	ldr	r3, [r3, #36]	; 0x24
   18948:	cmp	r3, r2
   1894c:	movlt	r3, r2
   18950:	add	r3, r3, #1
   18954:	lsl	r5, r3, #2
   18958:	ldr	r2, [sl]
   1895c:	str	r3, [r1, #36]	; 0x24
   18960:	ldr	r3, [r2, r5]
   18964:	str	r3, [r1, #100]	; 0x64
   18968:	str	r1, [r2, r5]
   1896c:	ldr	r3, [sp]
   18970:	ldr	r7, [r3, #84]	; 0x54
   18974:	ldr	r3, [r7, #24]
   18978:	cmp	r4, r3
   1897c:	beq	1925c <sf_bpf_optimize+0x2bcc>
   18980:	ldr	r2, [r7, #60]	; 0x3c
   18984:	mov	r3, #0
   18988:	cmp	r2, r3
   1898c:	str	r3, [r7, #100]	; 0x64
   18990:	mov	r1, r2
   18994:	str	r2, [sp, #4]
   18998:	str	r4, [r7, #24]
   1899c:	moveq	r3, r2
   189a0:	beq	19240 <sf_bpf_optimize+0x2bb0>
   189a4:	ldr	r2, [r2, #24]
   189a8:	cmp	r4, r2
   189ac:	beq	18d78 <sf_bpf_optimize+0x26e8>
   189b0:	ldr	r5, [r1, #60]	; 0x3c
   189b4:	str	r3, [r1, #100]	; 0x64
   189b8:	cmp	r5, r3
   189bc:	str	r4, [r1, #24]
   189c0:	moveq	r3, r5
   189c4:	beq	18d64 <sf_bpf_optimize+0x26d4>
   189c8:	ldr	r2, [r5, #24]
   189cc:	cmp	r4, r2
   189d0:	beq	18ba8 <sf_bpf_optimize+0x2518>
   189d4:	ldr	r8, [r5, #60]	; 0x3c
   189d8:	str	r3, [r5, #100]	; 0x64
   189dc:	cmp	r8, r3
   189e0:	str	r4, [r5, #24]
   189e4:	moveq	r3, r8
   189e8:	beq	18b94 <sf_bpf_optimize+0x2504>
   189ec:	ldr	r2, [r8, #24]
   189f0:	cmp	r4, r2
   189f4:	beq	18b0c <sf_bpf_optimize+0x247c>
   189f8:	ldr	fp, [r8, #60]	; 0x3c
   189fc:	str	r3, [r8, #100]	; 0x64
   18a00:	cmp	fp, r3
   18a04:	str	r4, [r8, #24]
   18a08:	moveq	r3, fp
   18a0c:	beq	18af8 <sf_bpf_optimize+0x2468>
   18a10:	ldr	r2, [fp, #24]
   18a14:	cmp	r4, r2
   18a18:	beq	18a70 <sf_bpf_optimize+0x23e0>
   18a1c:	ldr	r0, [fp, #60]	; 0x3c
   18a20:	str	r4, [fp, #24]
   18a24:	cmp	r0, r3
   18a28:	str	r3, [fp, #100]	; 0x64
   18a2c:	beq	19efc <sf_bpf_optimize+0x386c>
   18a30:	bl	13508 <find_levels_r>
   18a34:	ldr	r0, [fp, #84]	; 0x54
   18a38:	bl	13508 <find_levels_r>
   18a3c:	ldr	r3, [fp, #84]	; 0x54
   18a40:	ldr	r2, [fp, #60]	; 0x3c
   18a44:	ldr	r3, [r3, #36]	; 0x24
   18a48:	ldr	r2, [r2, #36]	; 0x24
   18a4c:	cmp	r3, r2
   18a50:	movlt	r3, r2
   18a54:	add	r3, r3, #1
   18a58:	lsl	r2, r3, #2
   18a5c:	ldr	r0, [sl]
   18a60:	str	r3, [fp, #36]	; 0x24
   18a64:	ldr	r3, [r0, r2]
   18a68:	str	r3, [fp, #100]	; 0x64
   18a6c:	str	fp, [r0, r2]
   18a70:	ldr	fp, [r8, #84]	; 0x54
   18a74:	ldr	r3, [fp, #24]
   18a78:	cmp	r4, r3
   18a7c:	beq	18adc <sf_bpf_optimize+0x244c>
   18a80:	ldr	r0, [fp, #60]	; 0x3c
   18a84:	mov	r3, #0
   18a88:	cmp	r0, r3
   18a8c:	str	r4, [fp, #24]
   18a90:	str	r3, [fp, #100]	; 0x64
   18a94:	beq	19ef0 <sf_bpf_optimize+0x3860>
   18a98:	bl	13508 <find_levels_r>
   18a9c:	ldr	r0, [fp, #84]	; 0x54
   18aa0:	bl	13508 <find_levels_r>
   18aa4:	ldr	r3, [fp, #84]	; 0x54
   18aa8:	ldr	r2, [fp, #60]	; 0x3c
   18aac:	ldr	r3, [r3, #36]	; 0x24
   18ab0:	ldr	r2, [r2, #36]	; 0x24
   18ab4:	cmp	r3, r2
   18ab8:	movlt	r3, r2
   18abc:	add	r2, r3, #1
   18ac0:	lsl	r3, r2, #2
   18ac4:	ldr	r0, [sl]
   18ac8:	str	r2, [fp, #36]	; 0x24
   18acc:	ldr	r2, [r0, r3]
   18ad0:	str	r2, [fp, #100]	; 0x64
   18ad4:	str	fp, [r0, r3]
   18ad8:	ldr	fp, [r8, #84]	; 0x54
   18adc:	ldr	r3, [r8, #60]	; 0x3c
   18ae0:	ldr	r2, [fp, #36]	; 0x24
   18ae4:	ldr	r3, [r3, #36]	; 0x24
   18ae8:	cmp	r3, r2
   18aec:	movlt	r3, r2
   18af0:	add	r3, r3, #1
   18af4:	lsl	fp, r3, #2
   18af8:	ldr	r2, [sl]
   18afc:	str	r3, [r8, #36]	; 0x24
   18b00:	ldr	r3, [r2, fp]
   18b04:	str	r3, [r8, #100]	; 0x64
   18b08:	str	r8, [r2, fp]
   18b0c:	ldr	r8, [r5, #84]	; 0x54
   18b10:	ldr	r3, [r8, #24]
   18b14:	cmp	r4, r3
   18b18:	beq	18b78 <sf_bpf_optimize+0x24e8>
   18b1c:	ldr	r0, [r8, #60]	; 0x3c
   18b20:	mov	r3, #0
   18b24:	cmp	r0, r3
   18b28:	str	r4, [r8, #24]
   18b2c:	str	r3, [r8, #100]	; 0x64
   18b30:	beq	19e04 <sf_bpf_optimize+0x3774>
   18b34:	bl	13508 <find_levels_r>
   18b38:	ldr	r0, [r8, #84]	; 0x54
   18b3c:	bl	13508 <find_levels_r>
   18b40:	ldr	r3, [r8, #84]	; 0x54
   18b44:	ldr	r2, [r8, #60]	; 0x3c
   18b48:	ldr	r3, [r3, #36]	; 0x24
   18b4c:	ldr	r2, [r2, #36]	; 0x24
   18b50:	cmp	r3, r2
   18b54:	movlt	r3, r2
   18b58:	add	r2, r3, #1
   18b5c:	lsl	r3, r2, #2
   18b60:	ldr	r0, [sl]
   18b64:	str	r2, [r8, #36]	; 0x24
   18b68:	ldr	r2, [r0, r3]
   18b6c:	str	r2, [r8, #100]	; 0x64
   18b70:	str	r8, [r0, r3]
   18b74:	ldr	r8, [r5, #84]	; 0x54
   18b78:	ldr	r3, [r5, #60]	; 0x3c
   18b7c:	ldr	r2, [r8, #36]	; 0x24
   18b80:	ldr	r3, [r3, #36]	; 0x24
   18b84:	cmp	r3, r2
   18b88:	movlt	r3, r2
   18b8c:	add	r3, r3, #1
   18b90:	lsl	r8, r3, #2
   18b94:	ldr	r2, [sl]
   18b98:	str	r3, [r5, #36]	; 0x24
   18b9c:	ldr	r3, [r2, r8]
   18ba0:	str	r3, [r5, #100]	; 0x64
   18ba4:	str	r5, [r2, r8]
   18ba8:	ldr	r3, [sp, #4]
   18bac:	ldr	r8, [r3, #84]	; 0x54
   18bb0:	ldr	r3, [r8, #24]
   18bb4:	cmp	r4, r3
   18bb8:	beq	18d40 <sf_bpf_optimize+0x26b0>
   18bbc:	ldr	r5, [r8, #60]	; 0x3c
   18bc0:	mov	r3, #0
   18bc4:	cmp	r5, r3
   18bc8:	str	r3, [r8, #100]	; 0x64
   18bcc:	str	r4, [r8, #24]
   18bd0:	moveq	r3, r5
   18bd4:	beq	18d24 <sf_bpf_optimize+0x2694>
   18bd8:	ldr	r2, [r5, #24]
   18bdc:	cmp	r4, r2
   18be0:	beq	18c9c <sf_bpf_optimize+0x260c>
   18be4:	ldr	r0, [r5, #60]	; 0x3c
   18be8:	str	r4, [r5, #24]
   18bec:	cmp	r0, r3
   18bf0:	str	r3, [r5, #100]	; 0x64
   18bf4:	str	r3, [sp, #16]
   18bf8:	beq	19d38 <sf_bpf_optimize+0x36a8>
   18bfc:	bl	13508 <find_levels_r>
   18c00:	ldr	fp, [r5, #84]	; 0x54
   18c04:	ldr	r2, [fp, #24]
   18c08:	cmp	r4, r2
   18c0c:	beq	18c6c <sf_bpf_optimize+0x25dc>
   18c10:	ldr	r0, [fp, #60]	; 0x3c
   18c14:	ldr	r3, [sp, #16]
   18c18:	cmp	r0, #0
   18c1c:	str	r4, [fp, #24]
   18c20:	str	r3, [fp, #100]	; 0x64
   18c24:	beq	19f7c <sf_bpf_optimize+0x38ec>
   18c28:	bl	13508 <find_levels_r>
   18c2c:	ldr	r0, [fp, #84]	; 0x54
   18c30:	bl	13508 <find_levels_r>
   18c34:	ldr	r3, [fp, #84]	; 0x54
   18c38:	ldr	r2, [fp, #60]	; 0x3c
   18c3c:	ldr	r3, [r3, #36]	; 0x24
   18c40:	ldr	r2, [r2, #36]	; 0x24
   18c44:	cmp	r3, r2
   18c48:	movlt	r3, r2
   18c4c:	add	r2, r3, #1
   18c50:	lsl	r3, r2, #2
   18c54:	ldr	r0, [sl]
   18c58:	str	r2, [fp, #36]	; 0x24
   18c5c:	ldr	r2, [r0, r3]
   18c60:	str	r2, [fp, #100]	; 0x64
   18c64:	str	fp, [r0, r3]
   18c68:	ldr	fp, [r5, #84]	; 0x54
   18c6c:	ldr	r3, [r5, #60]	; 0x3c
   18c70:	ldr	r2, [fp, #36]	; 0x24
   18c74:	ldr	r3, [r3, #36]	; 0x24
   18c78:	cmp	r3, r2
   18c7c:	movlt	r3, r2
   18c80:	add	r2, r3, #1
   18c84:	lsl	r3, r2, #2
   18c88:	ldr	r0, [sl]
   18c8c:	str	r2, [r5, #36]	; 0x24
   18c90:	ldr	r2, [r0, r3]
   18c94:	str	r2, [r5, #100]	; 0x64
   18c98:	str	r5, [r0, r3]
   18c9c:	ldr	r5, [r8, #84]	; 0x54
   18ca0:	ldr	r3, [r5, #24]
   18ca4:	cmp	r4, r3
   18ca8:	beq	18d08 <sf_bpf_optimize+0x2678>
   18cac:	ldr	r0, [r5, #60]	; 0x3c
   18cb0:	mov	r3, #0
   18cb4:	cmp	r0, r3
   18cb8:	str	r4, [r5, #24]
   18cbc:	str	r3, [r5, #100]	; 0x64
   18cc0:	beq	19d50 <sf_bpf_optimize+0x36c0>
   18cc4:	bl	13508 <find_levels_r>
   18cc8:	ldr	r0, [r5, #84]	; 0x54
   18ccc:	bl	13508 <find_levels_r>
   18cd0:	ldr	r3, [r5, #84]	; 0x54
   18cd4:	ldr	r2, [r5, #60]	; 0x3c
   18cd8:	ldr	r3, [r3, #36]	; 0x24
   18cdc:	ldr	r2, [r2, #36]	; 0x24
   18ce0:	cmp	r3, r2
   18ce4:	movlt	r3, r2
   18ce8:	add	r2, r3, #1
   18cec:	lsl	r3, r2, #2
   18cf0:	ldr	r0, [sl]
   18cf4:	str	r2, [r5, #36]	; 0x24
   18cf8:	ldr	r2, [r0, r3]
   18cfc:	str	r2, [r5, #100]	; 0x64
   18d00:	str	r5, [r0, r3]
   18d04:	ldr	r5, [r8, #84]	; 0x54
   18d08:	ldr	r3, [r8, #60]	; 0x3c
   18d0c:	ldr	r2, [r5, #36]	; 0x24
   18d10:	ldr	r3, [r3, #36]	; 0x24
   18d14:	cmp	r3, r2
   18d18:	movlt	r3, r2
   18d1c:	add	r3, r3, #1
   18d20:	lsl	r5, r3, #2
   18d24:	ldr	r2, [sl]
   18d28:	str	r3, [r8, #36]	; 0x24
   18d2c:	ldr	r3, [r2, r5]
   18d30:	str	r3, [r8, #100]	; 0x64
   18d34:	ldr	r3, [sp, #4]
   18d38:	str	r8, [r2, r5]
   18d3c:	ldr	r8, [r3, #84]	; 0x54
   18d40:	ldr	r3, [sp, #4]
   18d44:	ldr	r2, [r8, #36]	; 0x24
   18d48:	ldr	r1, [sp, #4]
   18d4c:	ldr	r3, [r3, #60]	; 0x3c
   18d50:	ldr	r3, [r3, #36]	; 0x24
   18d54:	cmp	r3, r2
   18d58:	movlt	r3, r2
   18d5c:	add	r3, r3, #1
   18d60:	lsl	r5, r3, #2
   18d64:	ldr	r2, [sl]
   18d68:	str	r3, [r1, #36]	; 0x24
   18d6c:	ldr	r3, [r2, r5]
   18d70:	str	r3, [r1, #100]	; 0x64
   18d74:	str	r1, [r2, r5]
   18d78:	ldr	r8, [r7, #84]	; 0x54
   18d7c:	ldr	r3, [r8, #24]
   18d80:	cmp	r4, r3
   18d84:	beq	19224 <sf_bpf_optimize+0x2b94>
   18d88:	ldr	r2, [r8, #60]	; 0x3c
   18d8c:	mov	r3, #0
   18d90:	cmp	r2, r3
   18d94:	str	r3, [r8, #100]	; 0x64
   18d98:	mov	r1, r2
   18d9c:	str	r2, [sp, #4]
   18da0:	str	r4, [r8, #24]
   18da4:	moveq	r3, r2
   18da8:	beq	1920c <sf_bpf_optimize+0x2b7c>
   18dac:	ldr	r2, [r2, #24]
   18db0:	cmp	r4, r2
   18db4:	beq	18f9c <sf_bpf_optimize+0x290c>
   18db8:	ldr	r5, [r1, #60]	; 0x3c
   18dbc:	str	r3, [r1, #100]	; 0x64
   18dc0:	cmp	r5, r3
   18dc4:	str	r4, [r1, #24]
   18dc8:	moveq	r3, r5
   18dcc:	beq	18f88 <sf_bpf_optimize+0x28f8>
   18dd0:	ldr	r2, [r5, #24]
   18dd4:	cmp	r4, r2
   18dd8:	beq	18e30 <sf_bpf_optimize+0x27a0>
   18ddc:	ldr	r0, [r5, #60]	; 0x3c
   18de0:	str	r4, [r5, #24]
   18de4:	cmp	r0, r3
   18de8:	str	r3, [r5, #100]	; 0x64
   18dec:	beq	19dec <sf_bpf_optimize+0x375c>
   18df0:	bl	13508 <find_levels_r>
   18df4:	ldr	r0, [r5, #84]	; 0x54
   18df8:	bl	13508 <find_levels_r>
   18dfc:	ldr	r3, [r5, #84]	; 0x54
   18e00:	ldr	r2, [r5, #60]	; 0x3c
   18e04:	ldr	r3, [r3, #36]	; 0x24
   18e08:	ldr	r2, [r2, #36]	; 0x24
   18e0c:	cmp	r3, r2
   18e10:	movlt	r3, r2
   18e14:	add	r2, r3, #1
   18e18:	lsl	r3, r2, #2
   18e1c:	ldr	r0, [sl]
   18e20:	str	r2, [r5, #36]	; 0x24
   18e24:	ldr	r2, [r0, r3]
   18e28:	str	r2, [r5, #100]	; 0x64
   18e2c:	str	r5, [r0, r3]
   18e30:	ldr	r3, [sp, #4]
   18e34:	ldr	fp, [r3, #84]	; 0x54
   18e38:	ldr	r3, [fp, #24]
   18e3c:	cmp	r4, r3
   18e40:	beq	18f64 <sf_bpf_optimize+0x28d4>
   18e44:	ldr	r5, [fp, #60]	; 0x3c
   18e48:	mov	r3, #0
   18e4c:	cmp	r5, r3
   18e50:	str	r3, [fp, #100]	; 0x64
   18e54:	str	r4, [fp, #24]
   18e58:	moveq	r3, r5
   18e5c:	beq	18f48 <sf_bpf_optimize+0x28b8>
   18e60:	ldr	r2, [r5, #24]
   18e64:	cmp	r4, r2
   18e68:	beq	18ec0 <sf_bpf_optimize+0x2830>
   18e6c:	ldr	r0, [r5, #60]	; 0x3c
   18e70:	str	r4, [r5, #24]
   18e74:	cmp	r0, r3
   18e78:	str	r3, [r5, #100]	; 0x64
   18e7c:	beq	19ecc <sf_bpf_optimize+0x383c>
   18e80:	bl	13508 <find_levels_r>
   18e84:	ldr	r0, [r5, #84]	; 0x54
   18e88:	bl	13508 <find_levels_r>
   18e8c:	ldr	r3, [r5, #84]	; 0x54
   18e90:	ldr	r2, [r5, #60]	; 0x3c
   18e94:	ldr	r3, [r3, #36]	; 0x24
   18e98:	ldr	r2, [r2, #36]	; 0x24
   18e9c:	cmp	r3, r2
   18ea0:	movlt	r3, r2
   18ea4:	add	r2, r3, #1
   18ea8:	lsl	r3, r2, #2
   18eac:	ldr	r0, [sl]
   18eb0:	str	r2, [r5, #36]	; 0x24
   18eb4:	ldr	r2, [r0, r3]
   18eb8:	str	r2, [r5, #100]	; 0x64
   18ebc:	str	r5, [r0, r3]
   18ec0:	ldr	r5, [fp, #84]	; 0x54
   18ec4:	ldr	r3, [r5, #24]
   18ec8:	cmp	r4, r3
   18ecc:	beq	18f2c <sf_bpf_optimize+0x289c>
   18ed0:	ldr	r0, [r5, #60]	; 0x3c
   18ed4:	mov	r3, #0
   18ed8:	cmp	r0, r3
   18edc:	str	r4, [r5, #24]
   18ee0:	str	r3, [r5, #100]	; 0x64
   18ee4:	beq	19f70 <sf_bpf_optimize+0x38e0>
   18ee8:	bl	13508 <find_levels_r>
   18eec:	ldr	r0, [r5, #84]	; 0x54
   18ef0:	bl	13508 <find_levels_r>
   18ef4:	ldr	r3, [r5, #84]	; 0x54
   18ef8:	ldr	r2, [r5, #60]	; 0x3c
   18efc:	ldr	r3, [r3, #36]	; 0x24
   18f00:	ldr	r2, [r2, #36]	; 0x24
   18f04:	cmp	r3, r2
   18f08:	movlt	r3, r2
   18f0c:	add	r2, r3, #1
   18f10:	lsl	r3, r2, #2
   18f14:	ldr	r0, [sl]
   18f18:	str	r2, [r5, #36]	; 0x24
   18f1c:	ldr	r2, [r0, r3]
   18f20:	str	r2, [r5, #100]	; 0x64
   18f24:	str	r5, [r0, r3]
   18f28:	ldr	r5, [fp, #84]	; 0x54
   18f2c:	ldr	r3, [fp, #60]	; 0x3c
   18f30:	ldr	r2, [r5, #36]	; 0x24
   18f34:	ldr	r3, [r3, #36]	; 0x24
   18f38:	cmp	r3, r2
   18f3c:	movlt	r3, r2
   18f40:	add	r3, r3, #1
   18f44:	lsl	r5, r3, #2
   18f48:	ldr	r2, [sl]
   18f4c:	str	r3, [fp, #36]	; 0x24
   18f50:	ldr	r3, [r2, r5]
   18f54:	str	r3, [fp, #100]	; 0x64
   18f58:	ldr	r3, [sp, #4]
   18f5c:	str	fp, [r2, r5]
   18f60:	ldr	fp, [r3, #84]	; 0x54
   18f64:	ldr	r3, [sp, #4]
   18f68:	ldr	r2, [fp, #36]	; 0x24
   18f6c:	ldr	r1, [sp, #4]
   18f70:	ldr	r3, [r3, #60]	; 0x3c
   18f74:	ldr	r3, [r3, #36]	; 0x24
   18f78:	cmp	r3, r2
   18f7c:	movlt	r3, r2
   18f80:	add	r3, r3, #1
   18f84:	lsl	r5, r3, #2
   18f88:	ldr	r2, [sl]
   18f8c:	str	r3, [r1, #36]	; 0x24
   18f90:	ldr	r3, [r2, r5]
   18f94:	str	r3, [r1, #100]	; 0x64
   18f98:	str	r1, [r2, r5]
   18f9c:	ldr	r5, [r8, #84]	; 0x54
   18fa0:	ldr	r3, [r5, #24]
   18fa4:	cmp	r4, r3
   18fa8:	beq	191f0 <sf_bpf_optimize+0x2b60>
   18fac:	ldr	fp, [r5, #60]	; 0x3c
   18fb0:	mov	r3, #0
   18fb4:	cmp	fp, r3
   18fb8:	str	r4, [r5, #24]
   18fbc:	str	r3, [r5, #100]	; 0x64
   18fc0:	beq	19a1c <sf_bpf_optimize+0x338c>
   18fc4:	ldr	r2, [fp, #24]
   18fc8:	cmp	r4, r2
   18fcc:	beq	19064 <sf_bpf_optimize+0x29d4>
   18fd0:	ldr	r0, [fp, #60]	; 0x3c
   18fd4:	str	r4, [fp, #24]
   18fd8:	cmp	r0, r3
   18fdc:	str	r3, [fp, #100]	; 0x64
   18fe0:	beq	19dbc <sf_bpf_optimize+0x372c>
   18fe4:	bl	13508 <find_levels_r>
   18fe8:	ldr	r0, [fp, #84]	; 0x54
   18fec:	bl	13508 <find_levels_r>
   18ff0:	ldr	r3, [fp, #84]	; 0x54
   18ff4:	ldr	r2, [fp, #60]	; 0x3c
   18ff8:	ldr	r3, [r3, #36]	; 0x24
   18ffc:	ldr	r2, [r2, #36]	; 0x24
   19000:	cmp	r3, r2
   19004:	movlt	r3, r2
   19008:	add	r2, r3, #1
   1900c:	lsl	r3, r2, #2
   19010:	ldr	r0, [sl]
   19014:	str	r2, [fp, #36]	; 0x24
   19018:	ldr	r2, [r0, r3]
   1901c:	str	r2, [fp, #100]	; 0x64
   19020:	str	fp, [r0, r3]
   19024:	b	19064 <sf_bpf_optimize+0x29d4>
   19028:	.word	0x00026700
   1902c:	.word	0x000000f0
   19030:	.word	0x000266f0
   19034:	.word	0x00025394
   19038:	.word	0x00025388
   1903c:	.word	0x0002537c
   19040:	.word	0x00025370
   19044:	.word	0x00024fec
   19048:	.word	0x00024fa0
   1904c:	.word	0x99d722db
   19050:	.word	0x00024f08
   19054:	.word	0x00024e14
   19058:	.word	0x00024cfc
   1905c:	.word	0x000000d0
   19060:	.word	0x00008340
   19064:	ldr	fp, [r5, #84]	; 0x54
   19068:	ldr	r3, [fp, #24]
   1906c:	cmp	r4, r3
   19070:	beq	191bc <sf_bpf_optimize+0x2b2c>
   19074:	ldr	r2, [fp, #60]	; 0x3c
   19078:	mov	r3, #0
   1907c:	cmp	r2, r3
   19080:	str	r3, [fp, #100]	; 0x64
   19084:	mov	r1, r2
   19088:	str	r2, [sp, #4]
   1908c:	str	r4, [fp, #24]
   19090:	moveq	r3, r2
   19094:	beq	191a4 <sf_bpf_optimize+0x2b14>
   19098:	ldr	r2, [r2, #24]
   1909c:	cmp	r4, r2
   190a0:	beq	19104 <sf_bpf_optimize+0x2a74>
   190a4:	ldr	r0, [r1, #60]	; 0x3c
   190a8:	str	r4, [r1, #24]
   190ac:	cmp	r0, r3
   190b0:	str	r3, [r1, #100]	; 0x64
   190b4:	beq	19f94 <sf_bpf_optimize+0x3904>
   190b8:	bl	13508 <find_levels_r>
   190bc:	ldr	r2, [sp, #4]
   190c0:	ldr	r0, [r2, #84]	; 0x54
   190c4:	bl	13508 <find_levels_r>
   190c8:	ldr	r2, [sp, #4]
   190cc:	ldr	r1, [sp, #4]
   190d0:	ldr	r3, [r2, #84]	; 0x54
   190d4:	ldr	r2, [r2, #60]	; 0x3c
   190d8:	ldr	r3, [r3, #36]	; 0x24
   190dc:	ldr	r2, [r2, #36]	; 0x24
   190e0:	cmp	r3, r2
   190e4:	movlt	r3, r2
   190e8:	add	r2, r3, #1
   190ec:	lsl	r3, r2, #2
   190f0:	ldr	r0, [sl]
   190f4:	str	r2, [r1, #36]	; 0x24
   190f8:	ldr	r2, [r0, r3]
   190fc:	str	r2, [r1, #100]	; 0x64
   19100:	str	r1, [r0, r3]
   19104:	ldr	r2, [fp, #84]	; 0x54
   19108:	str	r2, [sp, #4]
   1910c:	ldr	r3, [r2, #24]
   19110:	cmp	r4, r3
   19114:	beq	19188 <sf_bpf_optimize+0x2af8>
   19118:	ldr	r0, [r2, #60]	; 0x3c
   1911c:	mov	r3, #0
   19120:	cmp	r0, r3
   19124:	str	r4, [r2, #24]
   19128:	str	r3, [r2, #100]	; 0x64
   1912c:	beq	19ec0 <sf_bpf_optimize+0x3830>
   19130:	bl	13508 <find_levels_r>
   19134:	ldr	r2, [sp, #4]
   19138:	ldr	r0, [r2, #84]	; 0x54
   1913c:	bl	13508 <find_levels_r>
   19140:	ldr	r2, [sp, #4]
   19144:	ldr	r3, [r2, #84]	; 0x54
   19148:	ldr	r2, [r2, #60]	; 0x3c
   1914c:	ldr	r3, [r3, #36]	; 0x24
   19150:	ldr	r2, [r2, #36]	; 0x24
   19154:	cmp	r3, r2
   19158:	movlt	r3, r2
   1915c:	add	r2, r3, #1
   19160:	lsl	r3, r2, #2
   19164:	ldr	r1, [sp, #4]
   19168:	ldr	r0, [sl]
   1916c:	str	r2, [r1, #36]	; 0x24
   19170:	ldr	r2, [r0, r3]
   19174:	str	r2, [r1, #100]	; 0x64
   19178:	str	r1, [r0, r3]
   1917c:	ldr	r3, [fp, #84]	; 0x54
   19180:	mov	r2, r3
   19184:	str	r3, [sp, #4]
   19188:	ldr	r3, [fp, #60]	; 0x3c
   1918c:	ldr	r2, [r2, #36]	; 0x24
   19190:	ldr	r3, [r3, #36]	; 0x24
   19194:	cmp	r3, r2
   19198:	movlt	r3, r2
   1919c:	add	r3, r3, #1
   191a0:	lsl	r1, r3, #2
   191a4:	ldr	r2, [sl]
   191a8:	str	r3, [fp, #36]	; 0x24
   191ac:	ldr	r3, [r2, r1]
   191b0:	str	r3, [fp, #100]	; 0x64
   191b4:	str	fp, [r2, r1]
   191b8:	ldr	fp, [r5, #84]	; 0x54
   191bc:	ldr	r3, [r5, #60]	; 0x3c
   191c0:	ldr	r2, [fp, #36]	; 0x24
   191c4:	ldr	r3, [r3, #36]	; 0x24
   191c8:	cmp	r3, r2
   191cc:	movlt	r3, r2
   191d0:	add	r3, r3, #1
   191d4:	lsl	r1, r3, #2
   191d8:	ldr	r2, [sl]
   191dc:	str	r3, [r5, #36]	; 0x24
   191e0:	ldr	r3, [r2, r1]
   191e4:	str	r3, [r5, #100]	; 0x64
   191e8:	str	r5, [r2, r1]
   191ec:	ldr	r5, [r8, #84]	; 0x54
   191f0:	ldr	r3, [r8, #60]	; 0x3c
   191f4:	ldr	r2, [r5, #36]	; 0x24
   191f8:	ldr	r3, [r3, #36]	; 0x24
   191fc:	cmp	r3, r2
   19200:	movlt	r3, r2
   19204:	add	r3, r3, #1
   19208:	lsl	r1, r3, #2
   1920c:	ldr	r2, [sl]
   19210:	str	r3, [r8, #36]	; 0x24
   19214:	ldr	r3, [r2, r1]
   19218:	str	r3, [r8, #100]	; 0x64
   1921c:	str	r8, [r2, r1]
   19220:	ldr	r8, [r7, #84]	; 0x54
   19224:	ldr	r3, [r7, #60]	; 0x3c
   19228:	ldr	r2, [r8, #36]	; 0x24
   1922c:	ldr	r3, [r3, #36]	; 0x24
   19230:	cmp	r3, r2
   19234:	movlt	r3, r2
   19238:	add	r3, r3, #1
   1923c:	lsl	r1, r3, #2
   19240:	ldr	r2, [sl]
   19244:	str	r3, [r7, #36]	; 0x24
   19248:	ldr	r3, [r2, r1]
   1924c:	str	r3, [r7, #100]	; 0x64
   19250:	ldr	r3, [sp]
   19254:	str	r7, [r2, r1]
   19258:	ldr	r7, [r3, #84]	; 0x54
   1925c:	ldr	r3, [sp]
   19260:	ldr	r2, [r7, #36]	; 0x24
   19264:	ldr	r0, [sp]
   19268:	ldr	r3, [r3, #60]	; 0x3c
   1926c:	ldr	r3, [r3, #36]	; 0x24
   19270:	cmp	r3, r2
   19274:	movlt	r3, r2
   19278:	add	r3, r3, #1
   1927c:	lsl	r1, r3, #2
   19280:	ldr	r2, [sl]
   19284:	str	r3, [r0, #36]	; 0x24
   19288:	ldr	r3, [r2, r1]
   1928c:	str	r3, [r0, #100]	; 0x64
   19290:	str	r0, [r2, r1]
   19294:	ldr	r5, [sp, #8]
   19298:	ldr	r1, [sp, #12]
   1929c:	mov	r0, r5
   192a0:	bl	1201c <find_dom.isra.0>
   192a4:	mov	r0, r5
   192a8:	bl	12168 <find_closure.isra.7>
   192ac:	ldr	r7, [sp]
   192b0:	mov	r5, #0
   192b4:	ldr	r0, [r7, #36]	; 0x24
   192b8:	bl	12de0 <find_ud.isra.9>
   192bc:	mov	r0, r7
   192c0:	bl	12624 <find_edom>
   192c4:	ldr	ip, [sp, #56]	; 0x38
   192c8:	ldr	r3, [sp, #48]	; 0x30
   192cc:	ldr	r2, [sp, #32]
   192d0:	ldr	r0, [sp, #40]	; 0x28
   192d4:	str	r5, [ip, #896]	; 0x380
   192d8:	ldr	ip, [sp, #28]
   192dc:	ldr	r3, [r3]
   192e0:	lsl	r2, r2, #3
   192e4:	mov	r1, r5
   192e8:	ldr	r0, [r0]
   192ec:	str	r3, [ip]
   192f0:	bl	e88 <memset@plt>
   192f4:	mov	r1, r5
   192f8:	mov	r2, #852	; 0x354
   192fc:	ldr	r0, [sp, #60]	; 0x3c
   19300:	bl	e88 <memset@plt>
   19304:	ldr	r3, [sp, #20]
   19308:	ldr	fp, [r7, #36]	; 0x24
   1930c:	cmp	r3, r5
   19310:	ble	19d30 <sf_bpf_optimize+0x36a0>
   19314:	ldr	r3, [sp, #24]
   19318:	ldr	r3, [r3]
   1931c:	add	r1, r3, r6
   19320:	ldr	r2, [r3], #4
   19324:	cmp	r1, r3
   19328:	str	r5, [r2, #112]	; 0x70
   1932c:	bne	19320 <sf_bpf_optimize+0x2c90>
   19330:	ldr	r3, [sp]
   19334:	ldr	r0, [r3, #36]	; 0x24
   19338:	cmp	r0, #0
   1933c:	ldrgt	ip, [sl]
   19340:	addgt	r0, ip, r0, lsl #2
   19344:	ble	19390 <sf_bpf_optimize+0x2d00>
   19348:	ldr	r3, [r0], #-4
   1934c:	cmp	r3, #0
   19350:	beq	19388 <sf_bpf_optimize+0x2cf8>
   19354:	ldr	r2, [r3, #60]	; 0x3c
   19358:	add	r1, r3, #48	; 0x30
   1935c:	ldr	lr, [r2, #112]	; 0x70
   19360:	str	lr, [r3, #68]	; 0x44
   19364:	str	r1, [r2, #112]	; 0x70
   19368:	ldr	r2, [r3, #84]	; 0x54
   1936c:	add	r1, r3, #72	; 0x48
   19370:	ldr	lr, [r2, #112]	; 0x70
   19374:	str	lr, [r3, #92]	; 0x5c
   19378:	str	r1, [r2, #112]	; 0x70
   1937c:	ldr	r3, [r3, #100]	; 0x64
   19380:	cmp	r3, #0
   19384:	bne	19354 <sf_bpf_optimize+0x2cc4>
   19388:	cmp	ip, r0
   1938c:	bne	19348 <sf_bpf_optimize+0x2cb8>
   19390:	cmp	fp, #0
   19394:	blt	19a28 <sf_bpf_optimize+0x3398>
   19398:	ldr	r3, [pc, #-876]	; 19034 <sf_bpf_optimize+0x29a4>
   1939c:	str	fp, [sp, #32]
   193a0:	add	r3, pc, r3
   193a4:	str	r3, [sp, #16]
   193a8:	ldr	r3, [pc, #-888]	; 19038 <sf_bpf_optimize+0x29a8>
   193ac:	add	r3, pc, r3
   193b0:	str	r3, [sp, #72]	; 0x48
   193b4:	ldr	r3, [pc, #-896]	; 1903c <sf_bpf_optimize+0x29ac>
   193b8:	add	r3, pc, r3
   193bc:	str	r3, [sp, #76]	; 0x4c
   193c0:	ldr	r3, [pc, #-904]	; 19040 <sf_bpf_optimize+0x29b0>
   193c4:	add	r3, pc, r3
   193c8:	str	r3, [sp, #80]	; 0x50
   193cc:	lsl	r3, fp, #2
   193d0:	str	r3, [sp, #4]
   193d4:	ldr	r3, [sl]
   193d8:	ldr	r2, [sp, #4]
   193dc:	ldr	r4, [r3, r2]
   193e0:	cmp	r4, #0
   193e4:	beq	19724 <sf_bpf_optimize+0x3094>
   193e8:	ldr	r5, [r4, #112]	; 0x70
   193ec:	cmp	r5, #0
   193f0:	beq	198e8 <sf_bpf_optimize+0x3258>
   193f4:	ldr	r1, [r5, #16]
   193f8:	add	r7, r4, #136	; 0x88
   193fc:	add	r1, r1, #136	; 0x88
   19400:	mov	r0, r7
   19404:	mov	r2, #72	; 0x48
   19408:	bl	dc8 <memcpy@plt>
   1940c:	ldr	r5, [r5, #20]
   19410:	mov	r6, r7
   19414:	cmp	r5, #0
   19418:	mov	lr, #0
   1941c:	beq	1945c <sf_bpf_optimize+0x2dcc>
   19420:	mov	r1, r7
   19424:	mov	r3, #0
   19428:	ldr	ip, [r5, #16]
   1942c:	add	r2, r3, #34	; 0x22
   19430:	ldr	r0, [r1]
   19434:	ldr	r2, [ip, r2, lsl #2]
   19438:	add	r3, r3, #1
   1943c:	cmp	r0, r2
   19440:	strne	lr, [r1]
   19444:	cmp	r3, #18
   19448:	add	r1, r1, #4
   1944c:	bne	19428 <sf_bpf_optimize+0x2d98>
   19450:	ldr	r5, [r5, #20]
   19454:	cmp	r5, #0
   19458:	bne	19420 <sf_bpf_optimize+0x2d90>
   1945c:	ldr	r8, [r4, #4]
   19460:	ldr	r2, [r4, #200]	; 0xc8
   19464:	cmp	r8, #0
   19468:	ldr	r7, [r4, #204]	; 0xcc
   1946c:	movne	r5, r2
   19470:	beq	19494 <sf_bpf_optimize+0x2e04>
   19474:	mov	r0, r8
   19478:	mov	r2, r9
   1947c:	mov	r1, r6
   19480:	bl	142ac <opt_stmt>
   19484:	ldr	r8, [r8, #16]
   19488:	cmp	r8, #0
   1948c:	bne	19474 <sf_bpf_optimize+0x2de4>
   19490:	mov	r2, r5
   19494:	cmp	r2, #0
   19498:	ldr	r1, [r4, #128]	; 0x80
   1949c:	clz	r3, r1
   194a0:	lsr	r3, r3, #5
   194a4:	moveq	r3, #0
   194a8:	cmp	r3, #0
   194ac:	beq	194d0 <sf_bpf_optimize+0x2e40>
   194b0:	ldr	r3, [r4, #200]	; 0xc8
   194b4:	cmp	r7, #0
   194b8:	sub	r5, r3, r2
   194bc:	clz	r5, r5
   194c0:	lsr	r5, r5, #5
   194c4:	moveq	r5, #0
   194c8:	cmp	r5, #0
   194cc:	bne	196d4 <sf_bpf_optimize+0x3044>
   194d0:	ldr	r1, [r4, #8]
   194d4:	and	r3, r1, #7
   194d8:	cmp	r3, #6
   194dc:	beq	196e4 <sf_bpf_optimize+0x3054>
   194e0:	mov	r0, r4
   194e4:	add	r5, sp, #88	; 0x58
   194e8:	bl	116d0 <opt_peep>
   194ec:	mov	r0, r5
   194f0:	mov	r2, #72	; 0x48
   194f4:	mov	r1, #0
   194f8:	bl	e88 <memset@plt>
   194fc:	ldr	r3, [r4, #4]
   19500:	cmp	r3, #0
   19504:	beq	1963c <sf_bpf_optimize+0x2fac>
   19508:	ldr	r2, [sp, #16]
   1950c:	ldr	r6, [sp, #36]	; 0x24
   19510:	mov	fp, #68	; 0x44
   19514:	ldr	lr, [r2]
   19518:	mov	r8, #64	; 0x40
   1951c:	mvn	r7, #0
   19520:	mov	ip, #0
   19524:	str	r4, [sp, #20]
   19528:	ldr	r1, [r3]
   1952c:	cmn	r1, #1
   19530:	beq	19624 <sf_bpf_optimize+0x2f94>
   19534:	and	r2, r1, #7
   19538:	sub	r0, r2, #2
   1953c:	cmp	r0, #5
   19540:	addls	pc, pc, r0, lsl #2
   19544:	b	195cc <sf_bpf_optimize+0x2f3c>
   19548:	b	19574 <sf_bpf_optimize+0x2ee4>
   1954c:	b	195c4 <sf_bpf_optimize+0x2f34>
   19550:	b	1956c <sf_bpf_optimize+0x2edc>
   19554:	b	1956c <sf_bpf_optimize+0x2edc>
   19558:	b	195b0 <sf_bpf_optimize+0x2f20>
   1955c:	b	196ac <sf_bpf_optimize+0x301c>
   19560:	mov	r1, r3
   19564:	mov	r2, r5
   19568:	b	17fd4 <sf_bpf_optimize+0x1944>
   1956c:	tst	r1, #8
   19570:	bne	195f8 <sf_bpf_optimize+0x2f68>
   19574:	mov	r0, r8
   19578:	add	r4, sp, #160	; 0xa0
   1957c:	add	r0, r4, r0
   19580:	str	ip, [r0, #-72]	; 0xffffffb8
   19584:	cmp	r2, #7
   19588:	addls	pc, pc, r2, lsl #2
   1958c:	b	19624 <sf_bpf_optimize+0x2f94>
   19590:	b	19604 <sf_bpf_optimize+0x2f74>
   19594:	b	19674 <sf_bpf_optimize+0x2fe4>
   19598:	b	1968c <sf_bpf_optimize+0x2ffc>
   1959c:	b	1968c <sf_bpf_optimize+0x2ffc>
   195a0:	b	19604 <sf_bpf_optimize+0x2f74>
   195a4:	b	19624 <sf_bpf_optimize+0x2f94>
   195a8:	b	19624 <sf_bpf_optimize+0x2f94>
   195ac:	b	1967c <sf_bpf_optimize+0x2fec>
   195b0:	and	r0, r1, #24
   195b4:	cmp	r0, #16
   195b8:	beq	19574 <sf_bpf_optimize+0x2ee4>
   195bc:	cmp	r0, #8
   195c0:	bne	19624 <sf_bpf_optimize+0x2f94>
   195c4:	mov	r0, fp
   195c8:	b	19578 <sf_bpf_optimize+0x2ee8>
   195cc:	and	r0, r1, #224	; 0xe0
   195d0:	cmp	r0, #64	; 0x40
   195d4:	beq	195c4 <sf_bpf_optimize+0x2f34>
   195d8:	cmp	r0, #96	; 0x60
   195dc:	bne	19584 <sf_bpf_optimize+0x2ef4>
   195e0:	ldr	r0, [r3, #12]
   195e4:	cmp	r0, #0
   195e8:	blt	1997c <sf_bpf_optimize+0x32ec>
   195ec:	cmp	r0, #18
   195f0:	lslne	r0, r0, #2
   195f4:	bne	19578 <sf_bpf_optimize+0x2ee8>
   195f8:	str	ip, [sp, #156]	; 0x9c
   195fc:	str	ip, [sp, #152]	; 0x98
   19600:	b	19584 <sf_bpf_optimize+0x2ef4>
   19604:	mov	r2, r8
   19608:	ldr	r1, [r5, r2]
   1960c:	add	r2, r5, r2
   19610:	cmp	r1, #0
   19614:	movne	r6, r9
   19618:	movne	lr, ip
   1961c:	strne	r7, [r1]
   19620:	str	r3, [r2]
   19624:	ldr	r3, [r3, #16]
   19628:	cmp	r3, #0
   1962c:	bne	19528 <sf_bpf_optimize+0x2e98>
   19630:	cmp	r6, #0
   19634:	ldr	r4, [sp, #20]
   19638:	bne	19ea8 <sf_bpf_optimize+0x3818>
   1963c:	ldr	r2, [r4, #8]
   19640:	cmn	r2, #1
   19644:	beq	197ac <sf_bpf_optimize+0x311c>
   19648:	and	r1, r2, #7
   1964c:	sub	r3, r1, #2
   19650:	cmp	r3, #5
   19654:	addls	pc, pc, r3, lsl #2
   19658:	b	199d4 <sf_bpf_optimize+0x3344>
   1965c:	b	1988c <sf_bpf_optimize+0x31fc>
   19660:	b	198e0 <sf_bpf_optimize+0x3250>
   19664:	b	19a04 <sf_bpf_optimize+0x3374>
   19668:	b	19a04 <sf_bpf_optimize+0x3374>
   1966c:	b	198cc <sf_bpf_optimize+0x323c>
   19670:	b	19d1c <sf_bpf_optimize+0x368c>
   19674:	mov	r2, fp
   19678:	b	19608 <sf_bpf_optimize+0x2f78>
   1967c:	tst	r1, #248	; 0xf8
   19680:	movne	r2, #64	; 0x40
   19684:	moveq	r2, #68	; 0x44
   19688:	b	19608 <sf_bpf_optimize+0x2f78>
   1968c:	ldr	r2, [r3, #12]
   19690:	cmp	r2, #0
   19694:	blt	19624 <sf_bpf_optimize+0x2f94>
   19698:	lsl	r2, r2, #2
   1969c:	b	19608 <sf_bpf_optimize+0x2f78>
   196a0:	mov	r1, r3
   196a4:	mov	r2, r5
   196a8:	b	17fa0 <sf_bpf_optimize+0x1910>
   196ac:	and	r0, r1, #248	; 0xf8
   196b0:	cmp	r0, #128	; 0x80
   196b4:	moveq	r0, #68	; 0x44
   196b8:	movne	r0, #64	; 0x40
   196bc:	b	19578 <sf_bpf_optimize+0x2ee8>
   196c0:	mov	r1, lr
   196c4:	b	169d4 <sf_bpf_optimize+0x344>
   196c8:	mov	r1, r2
   196cc:	mov	r3, r5
   196d0:	b	17f6c <sf_bpf_optimize+0x18dc>
   196d4:	ldr	r3, [r4, #204]	; 0xcc
   196d8:	cmp	r7, r3
   196dc:	ldreq	r1, [r4, #8]
   196e0:	bne	194d0 <sf_bpf_optimize+0x2e40>
   196e4:	ldr	r3, [r4, #4]
   196e8:	cmp	r3, #0
   196ec:	ldrne	r2, [sp, #84]	; 0x54
   196f0:	movne	r3, #0
   196f4:	strne	r3, [r4, #4]
   196f8:	strne	r3, [r2]
   196fc:	tst	r1, #8
   19700:	ldrne	r3, [r4, #204]	; 0xcc
   19704:	beq	19814 <sf_bpf_optimize+0x3184>
   19708:	str	r3, [r4, #132]	; 0x84
   1970c:	rsb	r3, r1, #0
   19710:	str	r1, [r4, #52]	; 0x34
   19714:	str	r3, [r4, #76]	; 0x4c
   19718:	ldr	r4, [r4, #100]	; 0x64
   1971c:	cmp	r4, #0
   19720:	bne	193e8 <sf_bpf_optimize+0x2d58>
   19724:	ldr	r3, [sp, #32]
   19728:	sub	r3, r3, #1
   1972c:	str	r3, [sp, #32]
   19730:	cmn	r3, #1
   19734:	ldr	r3, [sp, #4]
   19738:	sub	r3, r3, #4
   1973c:	str	r3, [sp, #4]
   19740:	bne	193d4 <sf_bpf_optimize+0x2d44>
   19744:	ldr	r3, [pc, #-1800]	; 19044 <sf_bpf_optimize+0x29b4>
   19748:	add	r3, pc, r3
   1974c:	ldr	r2, [r3]
   19750:	cmp	r2, #0
   19754:	bne	19e8c <sf_bpf_optimize+0x37fc>
   19758:	ldr	r2, [r3, #24]
   1975c:	ldr	r4, [r3, #4]
   19760:	ldr	r3, [r3, #900]	; 0x384
   19764:	str	r2, [sp, #20]
   19768:	str	r3, [sp, #32]
   1976c:	lsl	r6, r2, #2
   19770:	ldr	r5, [sp, #52]	; 0x34
   19774:	b	18074 <sf_bpf_optimize+0x19e4>
   19778:	mov	r3, #68	; 0x44
   1977c:	ldr	r1, [r5, r3]
   19780:	add	r3, r5, r3
   19784:	cmp	r1, #0
   19788:	beq	197a4 <sf_bpf_optimize+0x3114>
   1978c:	ldr	r2, [pc, #-1868]	; 19048 <sf_bpf_optimize+0x29b8>
   19790:	mov	ip, #0
   19794:	add	r2, pc, r2
   19798:	mvn	r0, #0
   1979c:	str	ip, [r2]
   197a0:	str	r0, [r1]
   197a4:	add	r2, r4, #8
   197a8:	str	r2, [r3]
   197ac:	ldr	r3, [sp, #76]	; 0x4c
   197b0:	mov	r2, #0
   197b4:	ldr	r5, [sp, #36]	; 0x24
   197b8:	ldr	lr, [r3]
   197bc:	mov	r7, r2
   197c0:	add	r3, sp, #84	; 0x54
   197c4:	add	ip, sp, #156	; 0x9c
   197c8:	mvn	r6, #0
   197cc:	ldr	r1, [r3, #4]!
   197d0:	cmp	r1, #0
   197d4:	beq	197ec <sf_bpf_optimize+0x315c>
   197d8:	ldr	r0, [r4, #128]	; 0x80
   197dc:	ands	r0, r0, r9, lsl r2
   197e0:	moveq	r5, r9
   197e4:	moveq	lr, r7
   197e8:	streq	r6, [r1]
   197ec:	cmp	ip, r3
   197f0:	add	r2, r2, #1
   197f4:	bne	197cc <sf_bpf_optimize+0x313c>
   197f8:	cmp	r5, #0
   197fc:	ldr	r1, [r4, #8]
   19800:	ldrne	r3, [sp, #80]	; 0x50
   19804:	strne	lr, [r3]
   19808:	tst	r1, #8
   1980c:	ldrne	r3, [r4, #204]	; 0xcc
   19810:	bne	19708 <sf_bpf_optimize+0x3078>
   19814:	ldr	ip, [r4, #20]
   19818:	ldr	r3, [pc, #-2004]	; 1904c <sf_bpf_optimize+0x29bc>
   1981c:	mov	lr, #213	; 0xd5
   19820:	lsl	r0, ip, #4
   19824:	ldr	r2, [pc, #-2012]	; 19050 <sf_bpf_optimize+0x29c0>
   19828:	umull	r5, r3, r3, r0
   1982c:	add	r2, pc, r2
   19830:	lsr	r3, r3, #7
   19834:	mul	r3, lr, r3
   19838:	sub	r3, r0, r3
   1983c:	lsl	r0, r3, #2
   19840:	add	r3, r2, r0
   19844:	ldr	r3, [r3, #44]	; 0x2c
   19848:	cmp	r3, #0
   1984c:	bne	19860 <sf_bpf_optimize+0x31d0>
   19850:	b	19918 <sf_bpf_optimize+0x3288>
   19854:	ldr	r3, [r3, #16]
   19858:	cmp	r3, #0
   1985c:	beq	19918 <sf_bpf_optimize+0x3288>
   19860:	ldr	r2, [r3]
   19864:	cmp	r2, #0
   19868:	bne	19854 <sf_bpf_optimize+0x31c4>
   1986c:	ldr	r2, [r3, #4]
   19870:	cmp	ip, r2
   19874:	bne	19854 <sf_bpf_optimize+0x31c4>
   19878:	ldr	r2, [r3, #8]
   1987c:	cmp	r2, #0
   19880:	bne	19854 <sf_bpf_optimize+0x31c4>
   19884:	ldr	r3, [r3, #12]
   19888:	b	19708 <sf_bpf_optimize+0x3078>
   1988c:	mov	r3, #64	; 0x40
   19890:	add	r0, sp, #160	; 0xa0
   19894:	add	r3, r0, r3
   19898:	mov	r0, #0
   1989c:	str	r0, [r3, #-72]	; 0xffffffb8
   198a0:	cmp	r1, #7
   198a4:	addls	pc, pc, r1, lsl #2
   198a8:	b	197ac <sf_bpf_optimize+0x311c>
   198ac:	b	199b8 <sf_bpf_optimize+0x3328>
   198b0:	b	19778 <sf_bpf_optimize+0x30e8>
   198b4:	b	199c0 <sf_bpf_optimize+0x3330>
   198b8:	b	199c0 <sf_bpf_optimize+0x3330>
   198bc:	b	199b8 <sf_bpf_optimize+0x3328>
   198c0:	b	197ac <sf_bpf_optimize+0x311c>
   198c4:	b	197ac <sf_bpf_optimize+0x311c>
   198c8:	b	199a8 <sf_bpf_optimize+0x3318>
   198cc:	and	r3, r2, #24
   198d0:	cmp	r3, #16
   198d4:	beq	1988c <sf_bpf_optimize+0x31fc>
   198d8:	cmp	r3, #8
   198dc:	bne	197ac <sf_bpf_optimize+0x311c>
   198e0:	mov	r3, #68	; 0x44
   198e4:	b	19890 <sf_bpf_optimize+0x3200>
   198e8:	add	r6, r4, #136	; 0x88
   198ec:	mov	r1, r5
   198f0:	mov	r0, r6
   198f4:	mov	r2, #72	; 0x48
   198f8:	bl	e88 <memset@plt>
   198fc:	b	1945c <sf_bpf_optimize+0x2dcc>
   19900:	mov	r0, r5
   19904:	mov	r2, #0
   19908:	b	16c60 <sf_bpf_optimize+0x5d0>
   1990c:	mov	r3, r1
   19910:	mov	r0, r2
   19914:	b	19280 <sf_bpf_optimize+0x2bf0>
   19918:	ldr	r2, [pc, #-2252]	; 19054 <sf_bpf_optimize+0x29c4>
   1991c:	ldr	r3, [sp, #40]	; 0x28
   19920:	add	r2, pc, r2
   19924:	ldr	r5, [sp, #28]
   19928:	ldr	lr, [r3]
   1992c:	ldr	r3, [r2, #896]	; 0x380
   19930:	add	r0, r2, r0
   19934:	add	r3, r3, #1
   19938:	str	r3, [r2, #896]	; 0x380
   1993c:	add	r2, lr, r3, lsl #3
   19940:	mov	r1, #0
   19944:	str	ip, [r2, #4]
   19948:	str	r9, [lr, r3, lsl #3]
   1994c:	ldr	r2, [r5]
   19950:	add	lr, r2, #20
   19954:	str	r3, [r2, #12]
   19958:	str	ip, [r2, #4]
   1995c:	str	r1, [r2, #8]
   19960:	str	lr, [r5]
   19964:	str	r1, [r2]
   19968:	ldr	r1, [r0, #44]	; 0x2c
   1996c:	str	r1, [r2, #16]
   19970:	str	r2, [r0, #44]	; 0x2c
   19974:	ldr	r1, [r4, #8]
   19978:	b	19708 <sf_bpf_optimize+0x3078>
   1997c:	cmp	r2, #7
   19980:	addls	pc, pc, r2, lsl #2
   19984:	b	19624 <sf_bpf_optimize+0x2f94>
   19988:	b	19604 <sf_bpf_optimize+0x2f74>
   1998c:	b	19674 <sf_bpf_optimize+0x2fe4>
   19990:	b	19624 <sf_bpf_optimize+0x2f94>
   19994:	b	19624 <sf_bpf_optimize+0x2f94>
   19998:	b	19604 <sf_bpf_optimize+0x2f74>
   1999c:	b	19624 <sf_bpf_optimize+0x2f94>
   199a0:	b	19624 <sf_bpf_optimize+0x2f94>
   199a4:	b	1967c <sf_bpf_optimize+0x2fec>
   199a8:	tst	r2, #248	; 0xf8
   199ac:	moveq	r3, #68	; 0x44
   199b0:	movne	r3, #64	; 0x40
   199b4:	b	1977c <sf_bpf_optimize+0x30ec>
   199b8:	mov	r3, #64	; 0x40
   199bc:	b	1977c <sf_bpf_optimize+0x30ec>
   199c0:	ldr	r3, [r4, #20]
   199c4:	cmp	r3, #0
   199c8:	lslge	r3, r3, #2
   199cc:	bge	1977c <sf_bpf_optimize+0x30ec>
   199d0:	b	197ac <sf_bpf_optimize+0x311c>
   199d4:	and	r3, r2, #224	; 0xe0
   199d8:	cmp	r3, #64	; 0x40
   199dc:	beq	198e0 <sf_bpf_optimize+0x3250>
   199e0:	cmp	r3, #96	; 0x60
   199e4:	bne	198a0 <sf_bpf_optimize+0x3210>
   199e8:	ldr	r3, [r4, #20]
   199ec:	cmp	r3, #0
   199f0:	blt	19f20 <sf_bpf_optimize+0x3890>
   199f4:	cmp	r3, #18
   199f8:	lslne	r3, r3, #2
   199fc:	bne	19890 <sf_bpf_optimize+0x3200>
   19a00:	b	19a0c <sf_bpf_optimize+0x337c>
   19a04:	tst	r2, #8
   19a08:	beq	1988c <sf_bpf_optimize+0x31fc>
   19a0c:	mov	r3, #0
   19a10:	str	r3, [sp, #156]	; 0x9c
   19a14:	str	r3, [sp, #152]	; 0x98
   19a18:	b	198a0 <sf_bpf_optimize+0x3210>
   19a1c:	mov	r1, fp
   19a20:	mov	r3, fp
   19a24:	b	191d8 <sf_bpf_optimize+0x2b48>
   19a28:	ldr	fp, [sp]
   19a2c:	str	r6, [sp, #4]
   19a30:	ldr	r3, [pc, #-2528]	; 19058 <sf_bpf_optimize+0x29c8>
   19a34:	add	r9, r4, #1
   19a38:	add	r3, pc, r3
   19a3c:	str	r3, [sp, #16]
   19a40:	ldr	r3, [sp, #20]
   19a44:	str	sl, [sp]
   19a48:	sub	r2, r3, #1
   19a4c:	str	r2, [sp, #8]
   19a50:	ldr	r2, [sp, #4]
   19a54:	mov	r4, r3
   19a58:	sub	r2, r2, #4
   19a5c:	str	r2, [sp, #12]
   19a60:	cmp	r4, #0
   19a64:	ble	19a8c <sf_bpf_optimize+0x33fc>
   19a68:	ldr	r3, [sp, #24]
   19a6c:	ldr	r2, [sp, #4]
   19a70:	ldr	r3, [r3]
   19a74:	add	r1, r3, r2
   19a78:	ldr	r2, [r3], #4
   19a7c:	mov	r0, #0
   19a80:	cmp	r1, r3
   19a84:	str	r0, [r2, #100]	; 0x64
   19a88:	bne	19a78 <sf_bpf_optimize+0x33e8>
   19a8c:	ldr	r3, [fp, #24]
   19a90:	ldr	r2, [sp, #16]
   19a94:	cmp	r9, r3
   19a98:	str	r9, [r2, #4]
   19a9c:	beq	19aec <sf_bpf_optimize+0x345c>
   19aa0:	ldr	r3, [fp, #8]
   19aa4:	str	r9, [fp, #24]
   19aa8:	and	r3, r3, #7
   19aac:	cmp	r3, #6
   19ab0:	movne	r1, fp
   19ab4:	movne	r5, r1
   19ab8:	bne	19ad4 <sf_bpf_optimize+0x3444>
   19abc:	b	19aec <sf_bpf_optimize+0x345c>
   19ac0:	ldr	r3, [r5, #8]
   19ac4:	str	r9, [r5, #24]
   19ac8:	and	r3, r3, #7
   19acc:	cmp	r3, #6
   19ad0:	beq	19aec <sf_bpf_optimize+0x345c>
   19ad4:	ldr	r0, [r5, #60]	; 0x3c
   19ad8:	bl	127ec <make_marks>
   19adc:	ldr	r5, [r5, #84]	; 0x54
   19ae0:	ldr	r3, [r5, #24]
   19ae4:	cmp	r9, r3
   19ae8:	bne	19ac0 <sf_bpf_optimize+0x3430>
   19aec:	ldr	r3, [sp, #24]
   19af0:	ldr	r2, [sp, #12]
   19af4:	ldr	sl, [r3]
   19af8:	ldr	r3, [sp, #8]
   19afc:	add	r2, sl, r2
   19b00:	b	19b0c <sf_bpf_optimize+0x347c>
   19b04:	mov	r3, r5
   19b08:	mov	r2, r6
   19b0c:	subs	r5, r3, #1
   19b10:	bmi	19bc0 <sf_bpf_optimize+0x3530>
   19b14:	ldr	r0, [r2, #-4]
   19b18:	sub	r6, r2, #4
   19b1c:	ldr	r1, [r0, #24]
   19b20:	cmp	r9, r1
   19b24:	bne	19b04 <sf_bpf_optimize+0x3474>
   19b28:	cmp	r3, r4
   19b2c:	blt	19b40 <sf_bpf_optimize+0x34b0>
   19b30:	b	19b04 <sf_bpf_optimize+0x3474>
   19b34:	add	r3, r3, #1
   19b38:	cmp	r3, r4
   19b3c:	beq	19b04 <sf_bpf_optimize+0x3474>
   19b40:	ldr	r1, [r2], #4
   19b44:	ldr	ip, [r1, #24]
   19b48:	cmp	r9, ip
   19b4c:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19b50:	ldr	lr, [r0, #8]
   19b54:	ldr	ip, [r1, #8]
   19b58:	cmp	lr, ip
   19b5c:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19b60:	ldr	lr, [r0, #20]
   19b64:	ldr	ip, [r1, #20]
   19b68:	cmp	lr, ip
   19b6c:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19b70:	ldr	lr, [r0, #60]	; 0x3c
   19b74:	ldr	ip, [r1, #60]	; 0x3c
   19b78:	cmp	lr, ip
   19b7c:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19b80:	ldr	lr, [r0, #84]	; 0x54
   19b84:	ldr	ip, [r1, #84]	; 0x54
   19b88:	cmp	lr, ip
   19b8c:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19b90:	ldr	ip, [r0, #4]
   19b94:	ldr	lr, [r1, #4]
   19b98:	cmp	ip, #0
   19b9c:	bne	19bb0 <sf_bpf_optimize+0x3520>
   19ba0:	b	19e74 <sf_bpf_optimize+0x37e4>
   19ba4:	ldr	ip, [ip, #16]
   19ba8:	cmp	ip, #0
   19bac:	beq	19e20 <sf_bpf_optimize+0x3790>
   19bb0:	ldr	r7, [ip]
   19bb4:	cmn	r7, #1
   19bb8:	beq	19ba4 <sf_bpf_optimize+0x3514>
   19bbc:	b	19e20 <sf_bpf_optimize+0x3790>
   19bc0:	cmp	r4, #0
   19bc4:	ble	19c20 <sf_bpf_optimize+0x3590>
   19bc8:	ldr	r3, [sp, #4]
   19bcc:	mov	r2, sl
   19bd0:	add	ip, sl, r3
   19bd4:	mov	r0, #1
   19bd8:	ldr	r3, [r2], #4
   19bdc:	ldr	r1, [r3, #60]	; 0x3c
   19be0:	cmp	r1, #0
   19be4:	beq	19c0c <sf_bpf_optimize+0x357c>
   19be8:	ldr	r1, [r1, #100]	; 0x64
   19bec:	cmp	r1, #0
   19bf0:	strne	r1, [r3, #60]	; 0x3c
   19bf4:	ldr	r1, [r3, #84]	; 0x54
   19bf8:	movne	r0, #0
   19bfc:	ldr	r1, [r1, #100]	; 0x64
   19c00:	cmp	r1, #0
   19c04:	movne	r0, #0
   19c08:	strne	r1, [r3, #84]	; 0x54
   19c0c:	cmp	r2, ip
   19c10:	bne	19bd8 <sf_bpf_optimize+0x3548>
   19c14:	cmp	r0, #0
   19c18:	add	r9, r9, #1
   19c1c:	beq	19a60 <sf_bpf_optimize+0x33d0>
   19c20:	ldr	r1, [sp, #44]	; 0x2c
   19c24:	mov	r2, #0
   19c28:	ldr	sl, [sp]
   19c2c:	ldr	r3, [r1]
   19c30:	ldr	r4, [r3, #4]
   19c34:	str	r2, [r3, #4]
   19c38:	ldr	r3, [r1]
   19c3c:	ldr	r2, [r3, #8]
   19c40:	and	r2, r2, #7
   19c44:	cmp	r2, #5
   19c48:	beq	19c6c <sf_bpf_optimize+0x35dc>
   19c4c:	b	19c7c <sf_bpf_optimize+0x35ec>
   19c50:	mov	r3, r2
   19c54:	ldr	r2, [sp, #44]	; 0x2c
   19c58:	str	r3, [r2]
   19c5c:	ldr	r2, [r3, #8]
   19c60:	and	r2, r2, #7
   19c64:	cmp	r2, #5
   19c68:	bne	19c7c <sf_bpf_optimize+0x35ec>
   19c6c:	ldr	r2, [r3, #60]	; 0x3c
   19c70:	ldr	r1, [r3, #84]	; 0x54
   19c74:	cmp	r2, r1
   19c78:	beq	19c50 <sf_bpf_optimize+0x35c0>
   19c7c:	ldr	r1, [r3, #4]
   19c80:	cmp	r1, #0
   19c84:	beq	19c98 <sf_bpf_optimize+0x3608>
   19c88:	mov	r0, r4
   19c8c:	bl	ce84 <sf_append>
   19c90:	ldr	r3, [sp, #44]	; 0x2c
   19c94:	ldr	r3, [r3]
   19c98:	str	r4, [r3, #4]
   19c9c:	ldr	r3, [sp, #44]	; 0x2c
   19ca0:	ldr	r2, [r3]
   19ca4:	ldr	r3, [r2, #8]
   19ca8:	and	r3, r3, #7
   19cac:	cmp	r3, #6
   19cb0:	moveq	r3, #0
   19cb4:	streq	r3, [r2, #4]
   19cb8:	ldr	r3, [sp, #48]	; 0x30
   19cbc:	ldr	r0, [r3]
   19cc0:	bl	da4 <free@plt>
   19cc4:	ldr	r3, [sp, #40]	; 0x28
   19cc8:	ldr	r0, [r3]
   19ccc:	bl	da4 <free@plt>
   19cd0:	ldr	r3, [sp, #64]	; 0x40
   19cd4:	ldr	r0, [r3]
   19cd8:	bl	da4 <free@plt>
   19cdc:	ldr	r3, [sp, #68]	; 0x44
   19ce0:	ldr	r0, [r3]
   19ce4:	bl	da4 <free@plt>
   19ce8:	ldr	r0, [sl]
   19cec:	bl	da4 <free@plt>
   19cf0:	ldr	r3, [sp, #24]
   19cf4:	ldr	r0, [r3]
   19cf8:	add	sp, sp, #164	; 0xa4
   19cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d00:	b	da4 <free@plt>
   19d04:	mov	r4, #0
   19d08:	str	r0, [r7, #28]
   19d0c:	str	r0, [r7, #36]	; 0x24
   19d10:	str	r4, [sp, #32]
   19d14:	mov	r3, r4
   19d18:	b	169ec <sf_bpf_optimize+0x35c>
   19d1c:	and	r3, r2, #248	; 0xf8
   19d20:	cmp	r3, #128	; 0x80
   19d24:	moveq	r3, #68	; 0x44
   19d28:	movne	r3, #64	; 0x40
   19d2c:	b	19890 <sf_bpf_optimize+0x3200>
   19d30:	mov	r0, fp
   19d34:	b	19338 <sf_bpf_optimize+0x2ca8>
   19d38:	mov	r3, r0
   19d3c:	mov	r2, r0
   19d40:	b	18c88 <sf_bpf_optimize+0x25f8>
   19d44:	mov	r3, r0
   19d48:	mov	r2, r0
   19d4c:	b	18484 <sf_bpf_optimize+0x1df4>
   19d50:	mov	r3, r0
   19d54:	mov	r2, r0
   19d58:	b	18cf0 <sf_bpf_optimize+0x2660>
   19d5c:	mov	r9, r4
   19d60:	str	r4, [sp, #20]
   19d64:	b	167b0 <sf_bpf_optimize+0x120>
   19d68:	mov	r0, #0
   19d6c:	mov	r5, r0
   19d70:	b	16710 <sf_bpf_optimize+0x80>
   19d74:	mov	r1, #4
   19d78:	mov	r0, fp
   19d7c:	bl	d38 <calloc@plt>
   19d80:	ldr	r3, [pc, #-3372]	; 1905c <sf_bpf_optimize+0x29cc>
   19d84:	ldr	r2, [sp, #28]
   19d88:	ldr	r3, [r2, r3]
   19d8c:	str	r3, [sp, #24]
   19d90:	cmp	r0, #0
   19d94:	str	r0, [r3]
   19d98:	beq	19eb4 <sf_bpf_optimize+0x3824>
   19d9c:	add	r7, r7, #2
   19da0:	str	r7, [r4, #4]
   19da4:	str	fp, [r4, #24]
   19da8:	mov	r9, fp
   19dac:	mov	r4, fp
   19db0:	str	fp, [sp, #20]
   19db4:	mov	r5, fp
   19db8:	b	167b0 <sf_bpf_optimize+0x120>
   19dbc:	mov	r3, r0
   19dc0:	mov	r2, r0
   19dc4:	b	19010 <sf_bpf_optimize+0x2980>
   19dc8:	mov	r3, r0
   19dcc:	mov	r2, r0
   19dd0:	b	186c8 <sf_bpf_optimize+0x2038>
   19dd4:	mov	r2, #0
   19dd8:	mov	r3, r2
   19ddc:	b	18234 <sf_bpf_optimize+0x1ba4>
   19de0:	mov	r3, r0
   19de4:	mov	r2, r0
   19de8:	b	1829c <sf_bpf_optimize+0x1c0c>
   19dec:	mov	r3, r0
   19df0:	mov	r2, r0
   19df4:	b	18e1c <sf_bpf_optimize+0x278c>
   19df8:	mov	r3, r0
   19dfc:	mov	r2, r0
   19e00:	b	188b0 <sf_bpf_optimize+0x2220>
   19e04:	mov	r3, r0
   19e08:	mov	r2, r0
   19e0c:	b	18b60 <sf_bpf_optimize+0x24d0>
   19e10:	ldr	r7, [lr]
   19e14:	cmn	r7, #1
   19e18:	bne	19e44 <sf_bpf_optimize+0x37b4>
   19e1c:	ldr	lr, [lr, #16]
   19e20:	cmp	lr, #0
   19e24:	bne	19e10 <sf_bpf_optimize+0x3780>
   19e28:	cmp	ip, #0
   19e2c:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19e30:	ldr	r3, [r1, #100]	; 0x64
   19e34:	cmp	r3, #0
   19e38:	movne	r1, r3
   19e3c:	str	r1, [r0, #100]	; 0x64
   19e40:	b	19b04 <sf_bpf_optimize+0x3474>
   19e44:	cmp	ip, #0
   19e48:	beq	19b34 <sf_bpf_optimize+0x34a4>
   19e4c:	ldr	r8, [ip]
   19e50:	cmp	r8, r7
   19e54:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19e58:	ldr	r7, [lr, #12]
   19e5c:	ldr	r8, [ip, #12]
   19e60:	cmp	r8, r7
   19e64:	bne	19b34 <sf_bpf_optimize+0x34a4>
   19e68:	ldr	ip, [ip, #16]
   19e6c:	ldr	lr, [lr, #16]
   19e70:	b	19b98 <sf_bpf_optimize+0x3508>
   19e74:	cmp	lr, #0
   19e78:	beq	19e30 <sf_bpf_optimize+0x37a0>
   19e7c:	ldr	r7, [lr]
   19e80:	cmn	r7, #1
   19e84:	beq	19e1c <sf_bpf_optimize+0x378c>
   19e88:	b	19b34 <sf_bpf_optimize+0x34a4>
   19e8c:	ldr	r2, [r3, #24]
   19e90:	ldr	r4, [r3, #4]
   19e94:	ldr	fp, [sp]
   19e98:	lsl	r3, r2, #2
   19e9c:	str	r2, [sp, #20]
   19ea0:	str	r3, [sp, #4]
   19ea4:	b	19a30 <sf_bpf_optimize+0x33a0>
   19ea8:	ldr	r3, [sp, #72]	; 0x48
   19eac:	str	lr, [r3]
   19eb0:	b	1963c <sf_bpf_optimize+0x2fac>
   19eb4:	ldr	r0, [pc, #-3676]	; 19060 <sf_bpf_optimize+0x29d0>
   19eb8:	add	r0, pc, r0
   19ebc:	bl	2370 <sf_bpf_error>
   19ec0:	mov	r3, r0
   19ec4:	mov	r2, r0
   19ec8:	b	19164 <sf_bpf_optimize+0x2ad4>
   19ecc:	mov	r3, r0
   19ed0:	mov	r2, r0
   19ed4:	b	18eac <sf_bpf_optimize+0x281c>
   19ed8:	mov	r3, r0
   19edc:	mov	r2, r0
   19ee0:	b	18814 <sf_bpf_optimize+0x2184>
   19ee4:	mov	r3, r0
   19ee8:	mov	r2, r0
   19eec:	b	187ac <sf_bpf_optimize+0x211c>
   19ef0:	mov	r3, r0
   19ef4:	mov	r2, r0
   19ef8:	b	18ac4 <sf_bpf_optimize+0x2434>
   19efc:	mov	r2, #0
   19f00:	mov	r3, r2
   19f04:	b	18a5c <sf_bpf_optimize+0x23cc>
   19f08:	mov	r3, r0
   19f0c:	mov	r2, r0
   19f10:	b	18200 <sf_bpf_optimize+0x1b70>
   19f14:	mov	r3, r0
   19f18:	mov	r2, r0
   19f1c:	b	18198 <sf_bpf_optimize+0x1b08>
   19f20:	cmp	r1, #7
   19f24:	addls	pc, pc, r1, lsl #2
   19f28:	b	197ac <sf_bpf_optimize+0x311c>
   19f2c:	b	199b8 <sf_bpf_optimize+0x3328>
   19f30:	b	19778 <sf_bpf_optimize+0x30e8>
   19f34:	b	197ac <sf_bpf_optimize+0x311c>
   19f38:	b	197ac <sf_bpf_optimize+0x311c>
   19f3c:	b	199b8 <sf_bpf_optimize+0x3328>
   19f40:	b	197ac <sf_bpf_optimize+0x311c>
   19f44:	b	197ac <sf_bpf_optimize+0x311c>
   19f48:	b	199a8 <sf_bpf_optimize+0x3318>
   19f4c:	mov	r3, r0
   19f50:	mov	r2, r0
   19f54:	b	18380 <sf_bpf_optimize+0x1cf0>
   19f58:	mov	r3, r0
   19f5c:	mov	r2, r0
   19f60:	b	1862c <sf_bpf_optimize+0x1f9c>
   19f64:	mov	r3, r0
   19f68:	mov	r2, r0
   19f6c:	b	185c4 <sf_bpf_optimize+0x1f34>
   19f70:	mov	r3, r0
   19f74:	mov	r2, r0
   19f78:	b	18f14 <sf_bpf_optimize+0x2884>
   19f7c:	mov	r3, r0
   19f80:	mov	r2, r0
   19f84:	b	18c54 <sf_bpf_optimize+0x25c4>
   19f88:	mov	r3, r0
   19f8c:	mov	r2, r0
   19f90:	b	183e8 <sf_bpf_optimize+0x1d58>
   19f94:	mov	r3, r0
   19f98:	mov	r2, r0
   19f9c:	b	190f0 <sf_bpf_optimize+0x2a60>

00019fa0 <sf_icode_to_fcode>:
   19fa0:	ldr	r3, [pc, #3884]	; 1aed4 <sf_icode_to_fcode+0xf34>
   19fa4:	ldr	r2, [pc, #3884]	; 1aed8 <sf_icode_to_fcode+0xf38>
   19fa8:	add	r3, pc, r3
   19fac:	add	r2, pc, r2
   19fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fb4:	mov	r7, r2
   19fb8:	ldr	r2, [r3, #4]
   19fbc:	sub	sp, sp, #36	; 0x24
   19fc0:	add	r2, r2, #2
   19fc4:	mov	fp, r0
   19fc8:	mov	r6, r2
   19fcc:	sub	r4, r6, #1
   19fd0:	cmp	fp, #0
   19fd4:	str	r1, [sp, #4]
   19fd8:	str	r3, [sp, #8]
   19fdc:	str	r4, [r3, #4]
   19fe0:	beq	1bea0 <sf_icode_to_fcode+0x1f00>
   19fe4:	ldr	r3, [fp, #24]
   19fe8:	cmp	r3, r4
   19fec:	moveq	r4, #0
   19ff0:	moveq	r3, r4
   19ff4:	beq	1be44 <sf_icode_to_fcode+0x1ea4>
   19ff8:	ldr	r5, [fp, #60]	; 0x3c
   19ffc:	str	r4, [fp, #24]
   1a000:	cmp	r5, #0
   1a004:	beq	1beac <sf_icode_to_fcode+0x1f0c>
   1a008:	ldr	r3, [r5, #24]
   1a00c:	cmp	r3, r4
   1a010:	beq	1beac <sf_icode_to_fcode+0x1f0c>
   1a014:	ldr	r8, [r5, #60]	; 0x3c
   1a018:	str	r4, [r5, #24]
   1a01c:	cmp	r8, #0
   1a020:	beq	1befc <sf_icode_to_fcode+0x1f5c>
   1a024:	ldr	r3, [r8, #24]
   1a028:	cmp	r3, r4
   1a02c:	beq	1befc <sf_icode_to_fcode+0x1f5c>
   1a030:	ldr	sl, [r8, #60]	; 0x3c
   1a034:	str	r4, [r8, #24]
   1a038:	cmp	sl, #0
   1a03c:	beq	1bf3c <sf_icode_to_fcode+0x1f9c>
   1a040:	ldr	r3, [sl, #24]
   1a044:	cmp	r3, r4
   1a048:	beq	1bf3c <sf_icode_to_fcode+0x1f9c>
   1a04c:	ldr	r3, [sl, #60]	; 0x3c
   1a050:	str	r4, [sl, #24]
   1a054:	cmp	r3, #0
   1a058:	beq	1bff8 <sf_icode_to_fcode+0x2058>
   1a05c:	ldr	r2, [r3, #24]
   1a060:	cmp	r4, r2
   1a064:	beq	1bff8 <sf_icode_to_fcode+0x2058>
   1a068:	ldr	r9, [r3, #60]	; 0x3c
   1a06c:	str	r4, [r3, #24]
   1a070:	cmp	r9, #0
   1a074:	beq	1c138 <sf_icode_to_fcode+0x2198>
   1a078:	ldr	r2, [r9, #24]
   1a07c:	cmp	r4, r2
   1a080:	beq	1c138 <sf_icode_to_fcode+0x2198>
   1a084:	str	r4, [r9, #24]
   1a088:	ldr	r0, [r9, #60]	; 0x3c
   1a08c:	str	r3, [sp, #12]
   1a090:	bl	13b48 <count_stmts>
   1a094:	str	r0, [sp]
   1a098:	ldr	r0, [r9, #84]	; 0x54
   1a09c:	bl	13b48 <count_stmts>
   1a0a0:	ldr	r1, [r9, #4]
   1a0a4:	ldr	r2, [sp]
   1a0a8:	cmp	r1, #0
   1a0ac:	ldr	r3, [sp, #12]
   1a0b0:	add	r2, r2, r0
   1a0b4:	beq	1c390 <sf_icode_to_fcode+0x23f0>
   1a0b8:	mov	lr, #0
   1a0bc:	ldr	r0, [r1]
   1a0c0:	ldr	r1, [r1, #16]
   1a0c4:	adds	r0, r0, #1
   1a0c8:	movne	r0, #1
   1a0cc:	cmp	r1, #0
   1a0d0:	add	lr, lr, r0
   1a0d4:	bne	1a0bc <sf_icode_to_fcode+0x11c>
   1a0d8:	add	r2, r2, lr
   1a0dc:	ldr	r1, [r9, #28]
   1a0e0:	add	r2, r2, #1
   1a0e4:	ldr	r0, [r9, #32]
   1a0e8:	add	r2, r2, r1
   1a0ec:	add	r2, r2, r0
   1a0f0:	ldr	r1, [r3, #84]	; 0x54
   1a0f4:	cmp	r1, #0
   1a0f8:	beq	1c11c <sf_icode_to_fcode+0x217c>
   1a0fc:	ldr	r0, [r1, #24]
   1a100:	cmp	r4, r0
   1a104:	beq	1c11c <sf_icode_to_fcode+0x217c>
   1a108:	str	r4, [r1, #24]
   1a10c:	ldr	r0, [r1, #60]	; 0x3c
   1a110:	str	r2, [sp, #16]
   1a114:	str	r3, [sp, #12]
   1a118:	str	r1, [sp]
   1a11c:	bl	13b48 <count_stmts>
   1a120:	ldr	r1, [sp]
   1a124:	mov	r9, r0
   1a128:	ldr	r0, [r1, #84]	; 0x54
   1a12c:	bl	13b48 <count_stmts>
   1a130:	ldr	r1, [sp]
   1a134:	ldr	r3, [sp, #12]
   1a138:	ldr	r2, [sp, #16]
   1a13c:	ldr	ip, [r1, #4]
   1a140:	cmp	ip, #0
   1a144:	add	r0, r9, r0
   1a148:	beq	1c398 <sf_icode_to_fcode+0x23f8>
   1a14c:	mov	r9, #0
   1a150:	ldr	lr, [ip]
   1a154:	ldr	ip, [ip, #16]
   1a158:	adds	lr, lr, #1
   1a15c:	movne	lr, #1
   1a160:	cmp	ip, #0
   1a164:	add	r9, r9, lr
   1a168:	bne	1a150 <sf_icode_to_fcode+0x1b0>
   1a16c:	ldr	lr, [r1, #28]
   1a170:	add	ip, r0, r9
   1a174:	ldr	r1, [r1, #32]
   1a178:	add	ip, ip, #1
   1a17c:	add	ip, ip, lr
   1a180:	add	ip, ip, r1
   1a184:	ldr	r1, [r3, #4]
   1a188:	add	ip, ip, r2
   1a18c:	cmp	r1, #0
   1a190:	beq	1c130 <sf_icode_to_fcode+0x2190>
   1a194:	mov	r0, #0
   1a198:	ldr	r2, [r1]
   1a19c:	ldr	r1, [r1, #16]
   1a1a0:	adds	r2, r2, #1
   1a1a4:	movne	r2, #1
   1a1a8:	cmp	r1, #0
   1a1ac:	add	r0, r0, r2
   1a1b0:	bne	1a198 <sf_icode_to_fcode+0x1f8>
   1a1b4:	add	r2, ip, r0
   1a1b8:	ldr	r0, [r3, #28]
   1a1bc:	ldr	r1, [r3, #32]
   1a1c0:	add	r2, r2, #1
   1a1c4:	add	r3, r2, r0
   1a1c8:	add	r3, r3, r1
   1a1cc:	str	r3, [sp]
   1a1d0:	ldr	r3, [sl, #84]	; 0x54
   1a1d4:	cmp	r3, #0
   1a1d8:	beq	1c00c <sf_icode_to_fcode+0x206c>
   1a1dc:	ldr	r2, [r3, #24]
   1a1e0:	cmp	r2, r4
   1a1e4:	beq	1c00c <sf_icode_to_fcode+0x206c>
   1a1e8:	ldr	r9, [r3, #60]	; 0x3c
   1a1ec:	str	r4, [r3, #24]
   1a1f0:	cmp	r9, #0
   1a1f4:	beq	1c190 <sf_icode_to_fcode+0x21f0>
   1a1f8:	ldr	r2, [r9, #24]
   1a1fc:	cmp	r4, r2
   1a200:	beq	1c190 <sf_icode_to_fcode+0x21f0>
   1a204:	str	r4, [r9, #24]
   1a208:	ldr	r0, [r9, #60]	; 0x3c
   1a20c:	str	r3, [sp, #16]
   1a210:	bl	13b48 <count_stmts>
   1a214:	str	r0, [sp, #12]
   1a218:	ldr	r0, [r9, #84]	; 0x54
   1a21c:	bl	13b48 <count_stmts>
   1a220:	ldr	r1, [r9, #4]
   1a224:	ldr	r2, [sp, #12]
   1a228:	cmp	r1, #0
   1a22c:	ldr	r3, [sp, #16]
   1a230:	add	r2, r2, r0
   1a234:	beq	1c2e8 <sf_icode_to_fcode+0x2348>
   1a238:	mov	lr, #0
   1a23c:	ldr	r0, [r1]
   1a240:	ldr	r1, [r1, #16]
   1a244:	adds	r0, r0, #1
   1a248:	movne	r0, #1
   1a24c:	cmp	r1, #0
   1a250:	add	lr, lr, r0
   1a254:	bne	1a23c <sf_icode_to_fcode+0x29c>
   1a258:	add	r2, r2, lr
   1a25c:	ldr	r0, [r9, #28]
   1a260:	ldr	r1, [r9, #32]
   1a264:	add	r2, r2, #1
   1a268:	add	r2, r2, r0
   1a26c:	add	r2, r2, r1
   1a270:	ldr	r1, [r3, #84]	; 0x54
   1a274:	cmp	r1, #0
   1a278:	beq	1c1a0 <sf_icode_to_fcode+0x2200>
   1a27c:	ldr	r0, [r1, #24]
   1a280:	cmp	r4, r0
   1a284:	beq	1c1a0 <sf_icode_to_fcode+0x2200>
   1a288:	str	r4, [r1, #24]
   1a28c:	ldr	r0, [r1, #60]	; 0x3c
   1a290:	str	r2, [sp, #20]
   1a294:	str	r3, [sp, #16]
   1a298:	str	r1, [sp, #12]
   1a29c:	bl	13b48 <count_stmts>
   1a2a0:	ldr	r1, [sp, #12]
   1a2a4:	mov	r9, r0
   1a2a8:	ldr	r0, [r1, #84]	; 0x54
   1a2ac:	bl	13b48 <count_stmts>
   1a2b0:	ldr	r1, [sp, #12]
   1a2b4:	ldr	r3, [sp, #16]
   1a2b8:	ldr	r2, [sp, #20]
   1a2bc:	ldr	ip, [r1, #4]
   1a2c0:	cmp	ip, #0
   1a2c4:	add	r0, r9, r0
   1a2c8:	beq	1c2f0 <sf_icode_to_fcode+0x2350>
   1a2cc:	mov	r9, #0
   1a2d0:	ldr	lr, [ip]
   1a2d4:	ldr	ip, [ip, #16]
   1a2d8:	adds	lr, lr, #1
   1a2dc:	movne	lr, #1
   1a2e0:	cmp	ip, #0
   1a2e4:	add	r9, r9, lr
   1a2e8:	bne	1a2d0 <sf_icode_to_fcode+0x330>
   1a2ec:	ldr	ip, [r1, #28]
   1a2f0:	add	r0, r0, r9
   1a2f4:	ldr	r1, [r1, #32]
   1a2f8:	add	r0, r0, #1
   1a2fc:	add	r0, r0, ip
   1a300:	add	r0, r0, r1
   1a304:	ldr	r1, [r3, #4]
   1a308:	add	r0, r0, r2
   1a30c:	cmp	r1, #0
   1a310:	beq	1c1b4 <sf_icode_to_fcode+0x2214>
   1a314:	mov	ip, #0
   1a318:	ldr	r2, [r1]
   1a31c:	ldr	r1, [r1, #16]
   1a320:	adds	r2, r2, #1
   1a324:	movne	r2, #1
   1a328:	cmp	r1, #0
   1a32c:	add	ip, ip, r2
   1a330:	bne	1a318 <sf_icode_to_fcode+0x378>
   1a334:	ldr	r2, [r3, #28]
   1a338:	add	r0, r0, ip
   1a33c:	add	r0, r0, #1
   1a340:	ldr	r3, [r3, #32]
   1a344:	add	r0, r0, r2
   1a348:	add	r0, r0, r3
   1a34c:	ldr	r3, [sl, #4]
   1a350:	ldr	r2, [sp]
   1a354:	cmp	r3, #0
   1a358:	add	r0, r0, r2
   1a35c:	beq	1c260 <sf_icode_to_fcode+0x22c0>
   1a360:	mov	r1, #0
   1a364:	ldr	r2, [r3]
   1a368:	ldr	r3, [r3, #16]
   1a36c:	adds	r2, r2, #1
   1a370:	movne	r2, #1
   1a374:	cmp	r3, #0
   1a378:	add	r1, r1, r2
   1a37c:	bne	1a364 <sf_icode_to_fcode+0x3c4>
   1a380:	add	r3, r0, r1
   1a384:	ldr	r1, [sl, #28]
   1a388:	add	r3, r3, #1
   1a38c:	ldr	r2, [sl, #32]
   1a390:	ldr	r9, [r8, #84]	; 0x54
   1a394:	add	r3, r3, r1
   1a398:	add	r3, r3, r2
   1a39c:	cmp	r9, #0
   1a3a0:	str	r3, [sp]
   1a3a4:	beq	1bf50 <sf_icode_to_fcode+0x1fb0>
   1a3a8:	ldr	r3, [r9, #24]
   1a3ac:	cmp	r3, r4
   1a3b0:	beq	1bf50 <sf_icode_to_fcode+0x1fb0>
   1a3b4:	ldr	r3, [r9, #60]	; 0x3c
   1a3b8:	str	r4, [r9, #24]
   1a3bc:	cmp	r3, #0
   1a3c0:	beq	1bfec <sf_icode_to_fcode+0x204c>
   1a3c4:	ldr	r2, [r3, #24]
   1a3c8:	cmp	r4, r2
   1a3cc:	beq	1bfec <sf_icode_to_fcode+0x204c>
   1a3d0:	ldr	sl, [r3, #60]	; 0x3c
   1a3d4:	str	r4, [r3, #24]
   1a3d8:	cmp	sl, #0
   1a3dc:	beq	1c0f0 <sf_icode_to_fcode+0x2150>
   1a3e0:	ldr	r2, [sl, #24]
   1a3e4:	cmp	r4, r2
   1a3e8:	beq	1c0f0 <sf_icode_to_fcode+0x2150>
   1a3ec:	str	r4, [sl, #24]
   1a3f0:	ldr	r0, [sl, #60]	; 0x3c
   1a3f4:	str	r3, [sp, #16]
   1a3f8:	bl	13b48 <count_stmts>
   1a3fc:	str	r0, [sp, #12]
   1a400:	ldr	r0, [sl, #84]	; 0x54
   1a404:	bl	13b48 <count_stmts>
   1a408:	ldr	r1, [sl, #4]
   1a40c:	ldr	r2, [sp, #12]
   1a410:	cmp	r1, #0
   1a414:	ldr	r3, [sp, #16]
   1a418:	add	r2, r2, r0
   1a41c:	beq	1c318 <sf_icode_to_fcode+0x2378>
   1a420:	mov	lr, #0
   1a424:	ldr	r0, [r1]
   1a428:	ldr	r1, [r1, #16]
   1a42c:	adds	r0, r0, #1
   1a430:	movne	r0, #1
   1a434:	cmp	r1, #0
   1a438:	add	lr, lr, r0
   1a43c:	bne	1a424 <sf_icode_to_fcode+0x484>
   1a440:	add	r2, r2, lr
   1a444:	ldr	r0, [sl, #28]
   1a448:	ldr	r1, [sl, #32]
   1a44c:	add	r2, r2, #1
   1a450:	add	r2, r2, r0
   1a454:	add	r2, r2, r1
   1a458:	ldr	r1, [r3, #84]	; 0x54
   1a45c:	cmp	r1, #0
   1a460:	beq	1c100 <sf_icode_to_fcode+0x2160>
   1a464:	ldr	r0, [r1, #24]
   1a468:	cmp	r4, r0
   1a46c:	beq	1c100 <sf_icode_to_fcode+0x2160>
   1a470:	str	r4, [r1, #24]
   1a474:	ldr	r0, [r1, #60]	; 0x3c
   1a478:	str	r2, [sp, #20]
   1a47c:	str	r3, [sp, #16]
   1a480:	str	r1, [sp, #12]
   1a484:	bl	13b48 <count_stmts>
   1a488:	ldr	r1, [sp, #12]
   1a48c:	mov	sl, r0
   1a490:	ldr	r0, [r1, #84]	; 0x54
   1a494:	bl	13b48 <count_stmts>
   1a498:	ldr	r1, [sp, #12]
   1a49c:	ldr	r3, [sp, #16]
   1a4a0:	ldr	r2, [sp, #20]
   1a4a4:	ldr	ip, [r1, #4]
   1a4a8:	cmp	ip, #0
   1a4ac:	add	r0, sl, r0
   1a4b0:	beq	1c328 <sf_icode_to_fcode+0x2388>
   1a4b4:	mov	sl, #0
   1a4b8:	ldr	lr, [ip]
   1a4bc:	ldr	ip, [ip, #16]
   1a4c0:	adds	lr, lr, #1
   1a4c4:	movne	lr, #1
   1a4c8:	cmp	ip, #0
   1a4cc:	add	sl, sl, lr
   1a4d0:	bne	1a4b8 <sf_icode_to_fcode+0x518>
   1a4d4:	ldr	lr, [r1, #28]
   1a4d8:	add	ip, r0, sl
   1a4dc:	ldr	r1, [r1, #32]
   1a4e0:	add	ip, ip, #1
   1a4e4:	add	ip, ip, lr
   1a4e8:	add	ip, ip, r1
   1a4ec:	ldr	r1, [r3, #4]
   1a4f0:	add	ip, ip, r2
   1a4f4:	cmp	r1, #0
   1a4f8:	beq	1c114 <sf_icode_to_fcode+0x2174>
   1a4fc:	mov	r0, #0
   1a500:	ldr	r2, [r1]
   1a504:	ldr	r1, [r1, #16]
   1a508:	adds	r2, r2, #1
   1a50c:	movne	r2, #1
   1a510:	cmp	r1, #0
   1a514:	add	r0, r0, r2
   1a518:	bne	1a500 <sf_icode_to_fcode+0x560>
   1a51c:	add	r2, ip, r0
   1a520:	ldr	r1, [r3, #28]
   1a524:	ldr	r0, [r3, #32]
   1a528:	add	r2, r2, #1
   1a52c:	add	r3, r2, r1
   1a530:	add	r3, r3, r0
   1a534:	str	r3, [sp, #12]
   1a538:	ldr	r3, [r9, #84]	; 0x54
   1a53c:	cmp	r3, #0
   1a540:	beq	1bfe4 <sf_icode_to_fcode+0x2044>
   1a544:	ldr	r2, [r3, #24]
   1a548:	cmp	r4, r2
   1a54c:	beq	1bfe4 <sf_icode_to_fcode+0x2044>
   1a550:	ldr	sl, [r3, #60]	; 0x3c
   1a554:	str	r4, [r3, #24]
   1a558:	cmp	sl, #0
   1a55c:	beq	1c1d8 <sf_icode_to_fcode+0x2238>
   1a560:	ldr	r2, [sl, #24]
   1a564:	cmp	r4, r2
   1a568:	beq	1c1d8 <sf_icode_to_fcode+0x2238>
   1a56c:	str	r4, [sl, #24]
   1a570:	ldr	r0, [sl, #60]	; 0x3c
   1a574:	str	r3, [sp, #20]
   1a578:	bl	13b48 <count_stmts>
   1a57c:	str	r0, [sp, #16]
   1a580:	ldr	r0, [sl, #84]	; 0x54
   1a584:	bl	13b48 <count_stmts>
   1a588:	ldr	r1, [sl, #4]
   1a58c:	ldr	r2, [sp, #16]
   1a590:	cmp	r1, #0
   1a594:	ldr	r3, [sp, #20]
   1a598:	add	r2, r2, r0
   1a59c:	beq	1c348 <sf_icode_to_fcode+0x23a8>
   1a5a0:	mov	lr, #0
   1a5a4:	ldr	r0, [r1]
   1a5a8:	ldr	r1, [r1, #16]
   1a5ac:	adds	r0, r0, #1
   1a5b0:	movne	r0, #1
   1a5b4:	cmp	r1, #0
   1a5b8:	add	lr, lr, r0
   1a5bc:	bne	1a5a4 <sf_icode_to_fcode+0x604>
   1a5c0:	ldr	r0, [sl, #28]
   1a5c4:	add	r2, r2, lr
   1a5c8:	add	r2, r2, #1
   1a5cc:	ldr	r1, [sl, #32]
   1a5d0:	add	r2, r2, r0
   1a5d4:	add	sl, r2, r1
   1a5d8:	ldr	r2, [r3, #84]	; 0x54
   1a5dc:	cmp	r2, #0
   1a5e0:	beq	1c1bc <sf_icode_to_fcode+0x221c>
   1a5e4:	ldr	r1, [r2, #24]
   1a5e8:	cmp	r4, r1
   1a5ec:	beq	1c1bc <sf_icode_to_fcode+0x221c>
   1a5f0:	str	r4, [r2, #24]
   1a5f4:	ldr	r0, [r2, #60]	; 0x3c
   1a5f8:	str	r3, [sp, #24]
   1a5fc:	str	r2, [sp, #20]
   1a600:	bl	13b48 <count_stmts>
   1a604:	ldr	r2, [sp, #20]
   1a608:	str	r0, [sp, #16]
   1a60c:	ldr	r0, [r2, #84]	; 0x54
   1a610:	bl	13b48 <count_stmts>
   1a614:	ldr	r2, [sp, #20]
   1a618:	ldr	r3, [sp, #16]
   1a61c:	ldr	r1, [r2, #4]
   1a620:	cmp	r1, #0
   1a624:	add	r0, r3, r0
   1a628:	ldr	r3, [sp, #24]
   1a62c:	beq	1c350 <sf_icode_to_fcode+0x23b0>
   1a630:	mov	lr, #0
   1a634:	ldr	ip, [r1]
   1a638:	ldr	r1, [r1, #16]
   1a63c:	adds	ip, ip, #1
   1a640:	movne	ip, #1
   1a644:	cmp	r1, #0
   1a648:	add	lr, lr, ip
   1a64c:	bne	1a634 <sf_icode_to_fcode+0x694>
   1a650:	add	r1, r0, lr
   1a654:	ldr	ip, [r2, #28]
   1a658:	add	r1, r1, #1
   1a65c:	ldr	r0, [r2, #32]
   1a660:	add	r2, r1, ip
   1a664:	ldr	r1, [r3, #4]
   1a668:	add	r2, r2, r0
   1a66c:	cmp	r1, #0
   1a670:	add	r2, r2, sl
   1a674:	beq	1c1d0 <sf_icode_to_fcode+0x2230>
   1a678:	mov	ip, #0
   1a67c:	ldr	r0, [r1]
   1a680:	ldr	r1, [r1, #16]
   1a684:	adds	r0, r0, #1
   1a688:	movne	r0, #1
   1a68c:	cmp	r1, #0
   1a690:	add	ip, ip, r0
   1a694:	bne	1a67c <sf_icode_to_fcode+0x6dc>
   1a698:	ldr	r0, [r3, #28]
   1a69c:	add	r1, r2, ip
   1a6a0:	add	r1, r1, #1
   1a6a4:	ldr	r3, [r3, #32]
   1a6a8:	add	r1, r1, r0
   1a6ac:	add	r1, r1, r3
   1a6b0:	ldr	r3, [r9, #4]
   1a6b4:	ldr	r2, [sp, #12]
   1a6b8:	cmp	r3, #0
   1a6bc:	add	r1, r1, r2
   1a6c0:	beq	1c268 <sf_icode_to_fcode+0x22c8>
   1a6c4:	mov	r0, #0
   1a6c8:	ldr	r2, [r3]
   1a6cc:	ldr	r3, [r3, #16]
   1a6d0:	adds	r2, r2, #1
   1a6d4:	movne	r2, #1
   1a6d8:	cmp	r3, #0
   1a6dc:	add	r0, r0, r2
   1a6e0:	bne	1a6c8 <sf_icode_to_fcode+0x728>
   1a6e4:	add	r0, r1, r0
   1a6e8:	ldr	r2, [r9, #28]
   1a6ec:	add	r0, r0, #1
   1a6f0:	ldr	r3, [r9, #32]
   1a6f4:	add	r0, r0, r2
   1a6f8:	add	r0, r0, r3
   1a6fc:	ldr	r3, [r8, #4]
   1a700:	ldr	r2, [sp]
   1a704:	cmp	r3, #0
   1a708:	add	r0, r0, r2
   1a70c:	beq	1c248 <sf_icode_to_fcode+0x22a8>
   1a710:	mov	r1, #0
   1a714:	ldr	r2, [r3]
   1a718:	ldr	r3, [r3, #16]
   1a71c:	adds	r2, r2, #1
   1a720:	movne	r2, #1
   1a724:	cmp	r3, #0
   1a728:	add	r1, r1, r2
   1a72c:	bne	1a714 <sf_icode_to_fcode+0x774>
   1a730:	add	r3, r0, r1
   1a734:	ldr	r1, [r8, #28]
   1a738:	add	r3, r3, #1
   1a73c:	ldr	r2, [r8, #32]
   1a740:	add	r3, r3, r1
   1a744:	add	r3, r3, r2
   1a748:	str	r3, [sp]
   1a74c:	ldr	r8, [r5, #84]	; 0x54
   1a750:	cmp	r8, #0
   1a754:	beq	1bef4 <sf_icode_to_fcode+0x1f54>
   1a758:	ldr	r3, [r8, #24]
   1a75c:	cmp	r3, r4
   1a760:	beq	1bef4 <sf_icode_to_fcode+0x1f54>
   1a764:	ldr	r9, [r8, #60]	; 0x3c
   1a768:	str	r4, [r8, #24]
   1a76c:	cmp	r9, #0
   1a770:	beq	1bf64 <sf_icode_to_fcode+0x1fc4>
   1a774:	ldr	r3, [r9, #24]
   1a778:	cmp	r4, r3
   1a77c:	beq	1bf64 <sf_icode_to_fcode+0x1fc4>
   1a780:	ldr	r3, [r9, #60]	; 0x3c
   1a784:	str	r4, [r9, #24]
   1a788:	cmp	r3, #0
   1a78c:	beq	1c04c <sf_icode_to_fcode+0x20ac>
   1a790:	ldr	r2, [r3, #24]
   1a794:	cmp	r4, r2
   1a798:	beq	1c04c <sf_icode_to_fcode+0x20ac>
   1a79c:	ldr	sl, [r3, #60]	; 0x3c
   1a7a0:	str	r4, [r3, #24]
   1a7a4:	cmp	sl, #0
   1a7a8:	beq	1c0a0 <sf_icode_to_fcode+0x2100>
   1a7ac:	ldr	r2, [sl, #24]
   1a7b0:	cmp	r4, r2
   1a7b4:	beq	1c0a0 <sf_icode_to_fcode+0x2100>
   1a7b8:	str	r4, [sl, #24]
   1a7bc:	ldr	r0, [sl, #60]	; 0x3c
   1a7c0:	str	r3, [sp, #16]
   1a7c4:	bl	13b48 <count_stmts>
   1a7c8:	str	r0, [sp, #12]
   1a7cc:	ldr	r0, [sl, #84]	; 0x54
   1a7d0:	bl	13b48 <count_stmts>
   1a7d4:	ldr	r1, [sl, #4]
   1a7d8:	ldr	r2, [sp, #12]
   1a7dc:	cmp	r1, #0
   1a7e0:	ldr	r3, [sp, #16]
   1a7e4:	add	r2, r2, r0
   1a7e8:	beq	1c3c0 <sf_icode_to_fcode+0x2420>
   1a7ec:	mov	lr, #0
   1a7f0:	ldr	r0, [r1]
   1a7f4:	ldr	r1, [r1, #16]
   1a7f8:	adds	r0, r0, #1
   1a7fc:	movne	r0, #1
   1a800:	cmp	r1, #0
   1a804:	add	lr, lr, r0
   1a808:	bne	1a7f0 <sf_icode_to_fcode+0x850>
   1a80c:	add	r2, r2, lr
   1a810:	ldr	r0, [sl, #28]
   1a814:	add	r2, r2, #1
   1a818:	ldr	r1, [sl, #32]
   1a81c:	add	r2, r2, r0
   1a820:	add	r2, r2, r1
   1a824:	ldr	r1, [r3, #84]	; 0x54
   1a828:	cmp	r1, #0
   1a82c:	beq	1c084 <sf_icode_to_fcode+0x20e4>
   1a830:	ldr	r0, [r1, #24]
   1a834:	cmp	r4, r0
   1a838:	beq	1c084 <sf_icode_to_fcode+0x20e4>
   1a83c:	str	r4, [r1, #24]
   1a840:	ldr	r0, [r1, #60]	; 0x3c
   1a844:	str	r2, [sp, #20]
   1a848:	str	r3, [sp, #16]
   1a84c:	str	r1, [sp, #12]
   1a850:	bl	13b48 <count_stmts>
   1a854:	ldr	r1, [sp, #12]
   1a858:	mov	sl, r0
   1a85c:	ldr	r0, [r1, #84]	; 0x54
   1a860:	bl	13b48 <count_stmts>
   1a864:	ldr	r1, [sp, #12]
   1a868:	ldr	r3, [sp, #16]
   1a86c:	ldr	r2, [sp, #20]
   1a870:	ldr	ip, [r1, #4]
   1a874:	cmp	ip, #0
   1a878:	add	r0, sl, r0
   1a87c:	beq	1c3c8 <sf_icode_to_fcode+0x2428>
   1a880:	mov	sl, #0
   1a884:	ldr	lr, [ip]
   1a888:	ldr	ip, [ip, #16]
   1a88c:	adds	lr, lr, #1
   1a890:	movne	lr, #1
   1a894:	cmp	ip, #0
   1a898:	add	sl, sl, lr
   1a89c:	bne	1a884 <sf_icode_to_fcode+0x8e4>
   1a8a0:	ldr	lr, [r1, #28]
   1a8a4:	add	ip, r0, sl
   1a8a8:	ldr	r1, [r1, #32]
   1a8ac:	add	ip, ip, #1
   1a8b0:	add	ip, ip, lr
   1a8b4:	add	ip, ip, r1
   1a8b8:	ldr	r1, [r3, #4]
   1a8bc:	add	ip, ip, r2
   1a8c0:	cmp	r1, #0
   1a8c4:	beq	1c098 <sf_icode_to_fcode+0x20f8>
   1a8c8:	mov	r0, #0
   1a8cc:	ldr	r2, [r1]
   1a8d0:	ldr	r1, [r1, #16]
   1a8d4:	adds	r2, r2, #1
   1a8d8:	movne	r2, #1
   1a8dc:	cmp	r1, #0
   1a8e0:	add	r0, r0, r2
   1a8e4:	bne	1a8cc <sf_icode_to_fcode+0x92c>
   1a8e8:	add	r2, ip, r0
   1a8ec:	ldr	r1, [r3, #28]
   1a8f0:	ldr	r0, [r3, #32]
   1a8f4:	add	r2, r2, #1
   1a8f8:	add	r3, r2, r1
   1a8fc:	add	r3, r3, r0
   1a900:	str	r3, [sp, #12]
   1a904:	ldr	r3, [r9, #84]	; 0x54
   1a908:	cmp	r3, #0
   1a90c:	beq	1c044 <sf_icode_to_fcode+0x20a4>
   1a910:	ldr	r2, [r3, #24]
   1a914:	cmp	r4, r2
   1a918:	beq	1c044 <sf_icode_to_fcode+0x20a4>
   1a91c:	ldr	sl, [r3, #60]	; 0x3c
   1a920:	str	r4, [r3, #24]
   1a924:	cmp	sl, #0
   1a928:	beq	1c240 <sf_icode_to_fcode+0x22a0>
   1a92c:	ldr	r2, [sl, #24]
   1a930:	cmp	r4, r2
   1a934:	beq	1c240 <sf_icode_to_fcode+0x22a0>
   1a938:	str	r4, [sl, #24]
   1a93c:	ldr	r0, [sl, #60]	; 0x3c
   1a940:	str	r3, [sp, #20]
   1a944:	bl	13b48 <count_stmts>
   1a948:	str	r0, [sp, #16]
   1a94c:	ldr	r0, [sl, #84]	; 0x54
   1a950:	bl	13b48 <count_stmts>
   1a954:	ldr	r1, [sl, #4]
   1a958:	ldr	r2, [sp, #16]
   1a95c:	cmp	r1, #0
   1a960:	ldr	r3, [sp, #20]
   1a964:	add	r2, r2, r0
   1a968:	beq	1c3a8 <sf_icode_to_fcode+0x2408>
   1a96c:	mov	lr, #0
   1a970:	ldr	r0, [r1]
   1a974:	ldr	r1, [r1, #16]
   1a978:	adds	r0, r0, #1
   1a97c:	movne	r0, #1
   1a980:	cmp	r1, #0
   1a984:	add	lr, lr, r0
   1a988:	bne	1a970 <sf_icode_to_fcode+0x9d0>
   1a98c:	ldr	r0, [sl, #28]
   1a990:	add	r2, r2, lr
   1a994:	add	r2, r2, #1
   1a998:	ldr	r1, [sl, #32]
   1a99c:	add	r2, r2, r0
   1a9a0:	add	sl, r2, r1
   1a9a4:	ldr	r2, [r3, #84]	; 0x54
   1a9a8:	cmp	r2, #0
   1a9ac:	beq	1c224 <sf_icode_to_fcode+0x2284>
   1a9b0:	ldr	r1, [r2, #24]
   1a9b4:	cmp	r4, r1
   1a9b8:	beq	1c224 <sf_icode_to_fcode+0x2284>
   1a9bc:	str	r4, [r2, #24]
   1a9c0:	ldr	r0, [r2, #60]	; 0x3c
   1a9c4:	str	r3, [sp, #24]
   1a9c8:	str	r2, [sp, #20]
   1a9cc:	bl	13b48 <count_stmts>
   1a9d0:	ldr	r2, [sp, #20]
   1a9d4:	str	r0, [sp, #16]
   1a9d8:	ldr	r0, [r2, #84]	; 0x54
   1a9dc:	bl	13b48 <count_stmts>
   1a9e0:	ldr	r2, [sp, #20]
   1a9e4:	ldr	r3, [sp, #16]
   1a9e8:	ldr	r1, [r2, #4]
   1a9ec:	cmp	r1, #0
   1a9f0:	add	r0, r3, r0
   1a9f4:	ldr	r3, [sp, #24]
   1a9f8:	beq	1c310 <sf_icode_to_fcode+0x2370>
   1a9fc:	mov	lr, #0
   1aa00:	ldr	ip, [r1]
   1aa04:	ldr	r1, [r1, #16]
   1aa08:	adds	ip, ip, #1
   1aa0c:	movne	ip, #1
   1aa10:	cmp	r1, #0
   1aa14:	add	lr, lr, ip
   1aa18:	bne	1aa00 <sf_icode_to_fcode+0xa60>
   1aa1c:	ldr	r1, [r2, #28]
   1aa20:	add	r0, r0, lr
   1aa24:	ldr	r2, [r2, #32]
   1aa28:	add	r0, r0, #1
   1aa2c:	add	r0, r0, r1
   1aa30:	add	r0, r0, r2
   1aa34:	ldr	r2, [r3, #4]
   1aa38:	add	r0, r0, sl
   1aa3c:	cmp	r2, #0
   1aa40:	beq	1c238 <sf_icode_to_fcode+0x2298>
   1aa44:	mov	ip, #0
   1aa48:	ldr	r1, [r2]
   1aa4c:	ldr	r2, [r2, #16]
   1aa50:	adds	r1, r1, #1
   1aa54:	movne	r1, #1
   1aa58:	cmp	r2, #0
   1aa5c:	add	ip, ip, r1
   1aa60:	bne	1aa48 <sf_icode_to_fcode+0xaa8>
   1aa64:	ldr	r2, [r3, #28]
   1aa68:	add	r0, r0, ip
   1aa6c:	add	r0, r0, #1
   1aa70:	ldr	r3, [r3, #32]
   1aa74:	add	r0, r0, r2
   1aa78:	add	r0, r0, r3
   1aa7c:	ldr	r3, [r9, #4]
   1aa80:	ldr	r2, [sp, #12]
   1aa84:	cmp	r3, #0
   1aa88:	add	r0, r0, r2
   1aa8c:	beq	1c288 <sf_icode_to_fcode+0x22e8>
   1aa90:	mov	r1, #0
   1aa94:	ldr	r2, [r3]
   1aa98:	ldr	r3, [r3, #16]
   1aa9c:	adds	r2, r2, #1
   1aaa0:	movne	r2, #1
   1aaa4:	cmp	r3, #0
   1aaa8:	add	r1, r1, r2
   1aaac:	bne	1aa94 <sf_icode_to_fcode+0xaf4>
   1aab0:	add	r3, r0, r1
   1aab4:	ldr	r1, [r9, #28]
   1aab8:	add	r3, r3, #1
   1aabc:	ldr	r2, [r9, #32]
   1aac0:	ldr	sl, [r8, #84]	; 0x54
   1aac4:	add	r3, r3, r1
   1aac8:	add	r3, r3, r2
   1aacc:	cmp	sl, #0
   1aad0:	str	r3, [sp, #12]
   1aad4:	beq	1bf78 <sf_icode_to_fcode+0x1fd8>
   1aad8:	ldr	r3, [sl, #24]
   1aadc:	cmp	r4, r3
   1aae0:	beq	1bf78 <sf_icode_to_fcode+0x1fd8>
   1aae4:	ldr	r3, [sl, #60]	; 0x3c
   1aae8:	str	r4, [sl, #24]
   1aaec:	cmp	r3, #0
   1aaf0:	beq	1c028 <sf_icode_to_fcode+0x2088>
   1aaf4:	ldr	r2, [r3, #24]
   1aaf8:	cmp	r4, r2
   1aafc:	beq	1c028 <sf_icode_to_fcode+0x2088>
   1ab00:	ldr	r9, [r3, #60]	; 0x3c
   1ab04:	str	r4, [r3, #24]
   1ab08:	cmp	r9, #0
   1ab0c:	beq	1c210 <sf_icode_to_fcode+0x2270>
   1ab10:	ldr	r2, [r9, #24]
   1ab14:	cmp	r4, r2
   1ab18:	beq	1c210 <sf_icode_to_fcode+0x2270>
   1ab1c:	str	r4, [r9, #24]
   1ab20:	ldr	r0, [r9, #60]	; 0x3c
   1ab24:	str	r3, [sp, #20]
   1ab28:	bl	13b48 <count_stmts>
   1ab2c:	str	r0, [sp, #16]
   1ab30:	ldr	r0, [r9, #84]	; 0x54
   1ab34:	bl	13b48 <count_stmts>
   1ab38:	ldr	r1, [r9, #4]
   1ab3c:	ldr	r2, [sp, #16]
   1ab40:	cmp	r1, #0
   1ab44:	ldr	r3, [sp, #20]
   1ab48:	add	r2, r2, r0
   1ab4c:	beq	1c388 <sf_icode_to_fcode+0x23e8>
   1ab50:	mov	lr, #0
   1ab54:	ldr	r0, [r1]
   1ab58:	ldr	r1, [r1, #16]
   1ab5c:	adds	r0, r0, #1
   1ab60:	movne	r0, #1
   1ab64:	cmp	r1, #0
   1ab68:	add	lr, lr, r0
   1ab6c:	bne	1ab54 <sf_icode_to_fcode+0xbb4>
   1ab70:	ldr	r0, [r9, #28]
   1ab74:	add	r2, r2, lr
   1ab78:	add	r2, r2, #1
   1ab7c:	ldr	r1, [r9, #32]
   1ab80:	add	r2, r2, r0
   1ab84:	add	r9, r2, r1
   1ab88:	ldr	r2, [r3, #84]	; 0x54
   1ab8c:	cmp	r2, #0
   1ab90:	beq	1c1f4 <sf_icode_to_fcode+0x2254>
   1ab94:	ldr	r1, [r2, #24]
   1ab98:	cmp	r4, r1
   1ab9c:	beq	1c1f4 <sf_icode_to_fcode+0x2254>
   1aba0:	str	r4, [r2, #24]
   1aba4:	ldr	r0, [r2, #60]	; 0x3c
   1aba8:	str	r3, [sp, #24]
   1abac:	str	r2, [sp, #20]
   1abb0:	bl	13b48 <count_stmts>
   1abb4:	ldr	r2, [sp, #20]
   1abb8:	str	r0, [sp, #16]
   1abbc:	ldr	r0, [r2, #84]	; 0x54
   1abc0:	bl	13b48 <count_stmts>
   1abc4:	ldr	r2, [sp, #20]
   1abc8:	ldr	r3, [sp, #16]
   1abcc:	ldr	r1, [r2, #4]
   1abd0:	cmp	r1, #0
   1abd4:	add	r0, r3, r0
   1abd8:	ldr	r3, [sp, #24]
   1abdc:	beq	1c2d0 <sf_icode_to_fcode+0x2330>
   1abe0:	mov	lr, #0
   1abe4:	ldr	ip, [r1]
   1abe8:	ldr	r1, [r1, #16]
   1abec:	adds	ip, ip, #1
   1abf0:	movne	ip, #1
   1abf4:	cmp	r1, #0
   1abf8:	add	lr, lr, ip
   1abfc:	bne	1abe4 <sf_icode_to_fcode+0xc44>
   1ac00:	ldr	r1, [r2, #28]
   1ac04:	add	ip, r0, lr
   1ac08:	ldr	r2, [r2, #32]
   1ac0c:	add	ip, ip, #1
   1ac10:	add	ip, ip, r1
   1ac14:	add	ip, ip, r2
   1ac18:	ldr	r2, [r3, #4]
   1ac1c:	add	ip, ip, r9
   1ac20:	cmp	r2, #0
   1ac24:	beq	1c208 <sf_icode_to_fcode+0x2268>
   1ac28:	mov	r0, #0
   1ac2c:	ldr	r1, [r2]
   1ac30:	ldr	r2, [r2, #16]
   1ac34:	adds	r1, r1, #1
   1ac38:	movne	r1, #1
   1ac3c:	cmp	r2, #0
   1ac40:	add	r0, r0, r1
   1ac44:	bne	1ac2c <sf_icode_to_fcode+0xc8c>
   1ac48:	add	r2, ip, r0
   1ac4c:	ldr	r0, [r3, #28]
   1ac50:	ldr	r1, [r3, #32]
   1ac54:	add	r2, r2, #1
   1ac58:	add	r3, r2, r0
   1ac5c:	add	r3, r3, r1
   1ac60:	str	r3, [sp, #16]
   1ac64:	ldr	r3, [sl, #84]	; 0x54
   1ac68:	cmp	r3, #0
   1ac6c:	beq	1c03c <sf_icode_to_fcode+0x209c>
   1ac70:	ldr	r2, [r3, #24]
   1ac74:	cmp	r4, r2
   1ac78:	beq	1c03c <sf_icode_to_fcode+0x209c>
   1ac7c:	ldr	r9, [r3, #60]	; 0x3c
   1ac80:	str	r4, [r3, #24]
   1ac84:	cmp	r9, #0
   1ac88:	beq	1c188 <sf_icode_to_fcode+0x21e8>
   1ac8c:	ldr	r2, [r9, #24]
   1ac90:	cmp	r4, r2
   1ac94:	beq	1c188 <sf_icode_to_fcode+0x21e8>
   1ac98:	str	r4, [r9, #24]
   1ac9c:	ldr	r0, [r9, #60]	; 0x3c
   1aca0:	str	r3, [sp, #24]
   1aca4:	bl	13b48 <count_stmts>
   1aca8:	str	r0, [sp, #20]
   1acac:	ldr	r0, [r9, #84]	; 0x54
   1acb0:	bl	13b48 <count_stmts>
   1acb4:	ldr	r1, [r9, #4]
   1acb8:	ldr	r2, [sp, #20]
   1acbc:	cmp	r1, #0
   1acc0:	ldr	r3, [sp, #24]
   1acc4:	add	r2, r2, r0
   1acc8:	beq	1c3b0 <sf_icode_to_fcode+0x2410>
   1accc:	mov	lr, #0
   1acd0:	ldr	r0, [r1]
   1acd4:	ldr	r1, [r1, #16]
   1acd8:	adds	r0, r0, #1
   1acdc:	movne	r0, #1
   1ace0:	cmp	r1, #0
   1ace4:	add	lr, lr, r0
   1ace8:	bne	1acd0 <sf_icode_to_fcode+0xd30>
   1acec:	ldr	r0, [r9, #28]
   1acf0:	add	r2, r2, lr
   1acf4:	add	r2, r2, #1
   1acf8:	ldr	r1, [r9, #32]
   1acfc:	add	r2, r2, r0
   1ad00:	add	r9, r2, r1
   1ad04:	ldr	r2, [r3, #84]	; 0x54
   1ad08:	cmp	r2, #0
   1ad0c:	beq	1c068 <sf_icode_to_fcode+0x20c8>
   1ad10:	ldr	r1, [r2, #24]
   1ad14:	cmp	r4, r1
   1ad18:	beq	1c068 <sf_icode_to_fcode+0x20c8>
   1ad1c:	str	r4, [r2, #24]
   1ad20:	ldr	r0, [r2, #60]	; 0x3c
   1ad24:	str	r3, [sp, #28]
   1ad28:	str	r2, [sp, #24]
   1ad2c:	bl	13b48 <count_stmts>
   1ad30:	ldr	r2, [sp, #24]
   1ad34:	str	r0, [sp, #20]
   1ad38:	ldr	r0, [r2, #84]	; 0x54
   1ad3c:	bl	13b48 <count_stmts>
   1ad40:	ldr	r2, [sp, #24]
   1ad44:	ldr	r3, [sp, #20]
   1ad48:	ldr	r1, [r2, #4]
   1ad4c:	cmp	r1, #0
   1ad50:	add	r0, r3, r0
   1ad54:	ldr	r3, [sp, #28]
   1ad58:	beq	1c3b8 <sf_icode_to_fcode+0x2418>
   1ad5c:	mov	lr, #0
   1ad60:	ldr	ip, [r1]
   1ad64:	ldr	r1, [r1, #16]
   1ad68:	adds	ip, ip, #1
   1ad6c:	movne	ip, #1
   1ad70:	cmp	r1, #0
   1ad74:	add	lr, lr, ip
   1ad78:	bne	1ad60 <sf_icode_to_fcode+0xdc0>
   1ad7c:	add	r1, r0, lr
   1ad80:	ldr	ip, [r2, #28]
   1ad84:	add	r1, r1, #1
   1ad88:	ldr	r0, [r2, #32]
   1ad8c:	add	r2, r1, ip
   1ad90:	ldr	r1, [r3, #4]
   1ad94:	add	r2, r2, r0
   1ad98:	cmp	r1, #0
   1ad9c:	add	r2, r2, r9
   1ada0:	beq	1c07c <sf_icode_to_fcode+0x20dc>
   1ada4:	mov	ip, #0
   1ada8:	ldr	r0, [r1]
   1adac:	ldr	r1, [r1, #16]
   1adb0:	adds	r0, r0, #1
   1adb4:	movne	r0, #1
   1adb8:	cmp	r1, #0
   1adbc:	add	ip, ip, r0
   1adc0:	bne	1ada8 <sf_icode_to_fcode+0xe08>
   1adc4:	add	r2, r2, ip
   1adc8:	ldr	r0, [r3, #28]
   1adcc:	ldr	r1, [r3, #32]
   1add0:	add	r2, r2, #1
   1add4:	add	r3, r2, r0
   1add8:	add	r3, r3, r1
   1addc:	ldr	r2, [sl, #4]
   1ade0:	ldr	r1, [sp, #16]
   1ade4:	cmp	r2, #0
   1ade8:	add	r3, r3, r1
   1adec:	beq	1c280 <sf_icode_to_fcode+0x22e0>
   1adf0:	mov	r0, #0
   1adf4:	ldr	r1, [r2]
   1adf8:	ldr	r2, [r2, #16]
   1adfc:	adds	r1, r1, #1
   1ae00:	movne	r1, #1
   1ae04:	cmp	r2, #0
   1ae08:	add	r0, r0, r1
   1ae0c:	bne	1adf4 <sf_icode_to_fcode+0xe54>
   1ae10:	add	r0, r3, r0
   1ae14:	ldr	r3, [sl, #28]
   1ae18:	add	r0, r0, #1
   1ae1c:	ldr	r2, [sl, #32]
   1ae20:	add	r0, r0, r3
   1ae24:	add	r0, r0, r2
   1ae28:	ldr	r3, [r8, #4]
   1ae2c:	ldr	r2, [sp, #12]
   1ae30:	cmp	r3, #0
   1ae34:	add	r0, r0, r2
   1ae38:	beq	1c258 <sf_icode_to_fcode+0x22b8>
   1ae3c:	mov	r1, #0
   1ae40:	ldr	r2, [r3]
   1ae44:	ldr	r3, [r3, #16]
   1ae48:	adds	r2, r2, #1
   1ae4c:	movne	r2, #1
   1ae50:	cmp	r3, #0
   1ae54:	add	r1, r1, r2
   1ae58:	bne	1ae40 <sf_icode_to_fcode+0xea0>
   1ae5c:	add	r0, r0, r1
   1ae60:	ldr	r2, [r8, #28]
   1ae64:	add	r0, r0, #1
   1ae68:	ldr	r3, [r8, #32]
   1ae6c:	add	r0, r0, r2
   1ae70:	add	r0, r0, r3
   1ae74:	ldr	r3, [r5, #4]
   1ae78:	ldr	r2, [sp]
   1ae7c:	cmp	r3, #0
   1ae80:	add	r0, r0, r2
   1ae84:	beq	1c058 <sf_icode_to_fcode+0x20b8>
   1ae88:	mov	r1, #0
   1ae8c:	ldr	r2, [r3]
   1ae90:	ldr	r3, [r3, #16]
   1ae94:	adds	r2, r2, #1
   1ae98:	movne	r2, #1
   1ae9c:	cmp	r3, #0
   1aea0:	add	r1, r1, r2
   1aea4:	bne	1ae8c <sf_icode_to_fcode+0xeec>
   1aea8:	add	r3, r0, r1
   1aeac:	ldr	r1, [r5, #28]
   1aeb0:	add	r3, r3, #1
   1aeb4:	ldr	r2, [r5, #32]
   1aeb8:	ldr	r8, [fp, #84]	; 0x54
   1aebc:	add	r3, r3, r1
   1aec0:	add	r3, r3, r2
   1aec4:	cmp	r8, #0
   1aec8:	str	r3, [sp]
   1aecc:	beq	1bec0 <sf_icode_to_fcode+0x1f20>
   1aed0:	b	1aedc <sf_icode_to_fcode+0xf3c>
   1aed4:	.word	0x0002478c
   1aed8:	.word	0x00024788
   1aedc:	ldr	r3, [r8, #24]
   1aee0:	cmp	r3, r4
   1aee4:	beq	1bec0 <sf_icode_to_fcode+0x1f20>
   1aee8:	ldr	sl, [r8, #60]	; 0x3c
   1aeec:	str	r4, [r8, #24]
   1aef0:	cmp	sl, #0
   1aef4:	beq	1bec8 <sf_icode_to_fcode+0x1f28>
   1aef8:	ldr	r3, [sl, #24]
   1aefc:	cmp	r4, r3
   1af00:	beq	1bec8 <sf_icode_to_fcode+0x1f28>
   1af04:	ldr	r3, [sl, #60]	; 0x3c
   1af08:	str	r4, [sl, #24]
   1af0c:	cmp	r3, #0
   1af10:	beq	1bf10 <sf_icode_to_fcode+0x1f70>
   1af14:	ldr	r2, [r3, #24]
   1af18:	cmp	r4, r2
   1af1c:	beq	1bf10 <sf_icode_to_fcode+0x1f70>
   1af20:	ldr	r9, [r3, #60]	; 0x3c
   1af24:	str	r4, [r3, #24]
   1af28:	cmp	r9, #0
   1af2c:	beq	1bfdc <sf_icode_to_fcode+0x203c>
   1af30:	ldr	r2, [r9, #24]
   1af34:	cmp	r4, r2
   1af38:	beq	1bfdc <sf_icode_to_fcode+0x203c>
   1af3c:	ldr	r5, [r9, #60]	; 0x3c
   1af40:	str	r4, [r9, #24]
   1af44:	cmp	r5, #0
   1af48:	beq	1c0e8 <sf_icode_to_fcode+0x2148>
   1af4c:	ldr	r2, [r5, #24]
   1af50:	cmp	r4, r2
   1af54:	beq	1c0e8 <sf_icode_to_fcode+0x2148>
   1af58:	str	r4, [r5, #24]
   1af5c:	ldr	r0, [r5, #60]	; 0x3c
   1af60:	str	r3, [sp, #16]
   1af64:	bl	13b48 <count_stmts>
   1af68:	str	r0, [sp, #12]
   1af6c:	ldr	r0, [r5, #84]	; 0x54
   1af70:	bl	13b48 <count_stmts>
   1af74:	ldr	r1, [r5, #4]
   1af78:	ldr	r2, [sp, #12]
   1af7c:	cmp	r1, #0
   1af80:	ldr	r3, [sp, #16]
   1af84:	add	r2, r2, r0
   1af88:	beq	1c320 <sf_icode_to_fcode+0x2380>
   1af8c:	mov	lr, #0
   1af90:	ldr	r0, [r1]
   1af94:	ldr	r1, [r1, #16]
   1af98:	adds	r0, r0, #1
   1af9c:	movne	r0, #1
   1afa0:	cmp	r1, #0
   1afa4:	add	lr, lr, r0
   1afa8:	bne	1af90 <sf_icode_to_fcode+0xff0>
   1afac:	add	r2, lr, r2
   1afb0:	ldr	r0, [r5, #28]
   1afb4:	ldr	r1, [r5, #32]
   1afb8:	add	r2, r2, #1
   1afbc:	add	r5, r2, r0
   1afc0:	add	r5, r5, r1
   1afc4:	ldr	r2, [r9, #84]	; 0x54
   1afc8:	cmp	r2, #0
   1afcc:	beq	1c0cc <sf_icode_to_fcode+0x212c>
   1afd0:	ldr	r1, [r2, #24]
   1afd4:	cmp	r4, r1
   1afd8:	beq	1c0cc <sf_icode_to_fcode+0x212c>
   1afdc:	str	r4, [r2, #24]
   1afe0:	ldr	r0, [r2, #60]	; 0x3c
   1afe4:	str	r3, [sp, #20]
   1afe8:	str	r2, [sp, #12]
   1afec:	bl	13b48 <count_stmts>
   1aff0:	ldr	r2, [sp, #12]
   1aff4:	str	r0, [sp, #16]
   1aff8:	ldr	r0, [r2, #84]	; 0x54
   1affc:	bl	13b48 <count_stmts>
   1b000:	ldr	r2, [sp, #12]
   1b004:	ldr	r1, [sp, #16]
   1b008:	ldr	r3, [sp, #20]
   1b00c:	ldr	ip, [r2, #4]
   1b010:	cmp	ip, #0
   1b014:	add	r0, r1, r0
   1b018:	beq	1c308 <sf_icode_to_fcode+0x2368>
   1b01c:	mov	r1, #0
   1b020:	ldr	lr, [ip]
   1b024:	ldr	ip, [ip, #16]
   1b028:	adds	lr, lr, #1
   1b02c:	movne	lr, #1
   1b030:	cmp	ip, #0
   1b034:	add	r1, r1, lr
   1b038:	bne	1b020 <sf_icode_to_fcode+0x1080>
   1b03c:	add	r1, r1, r0
   1b040:	ldr	r0, [r2, #28]
   1b044:	add	r1, r1, #1
   1b048:	ldr	r2, [r2, #32]
   1b04c:	add	r1, r1, r0
   1b050:	add	r1, r1, r2
   1b054:	ldr	r2, [r9, #4]
   1b058:	add	r5, r1, r5
   1b05c:	cmp	r2, #0
   1b060:	beq	1c0e0 <sf_icode_to_fcode+0x2140>
   1b064:	mov	r0, #0
   1b068:	ldr	r1, [r2]
   1b06c:	ldr	r2, [r2, #16]
   1b070:	adds	r1, r1, #1
   1b074:	movne	r1, #1
   1b078:	cmp	r2, #0
   1b07c:	add	r0, r0, r1
   1b080:	bne	1b068 <sf_icode_to_fcode+0x10c8>
   1b084:	add	r5, r0, r5
   1b088:	ldr	r2, [r9, #28]
   1b08c:	add	r5, r5, #1
   1b090:	ldr	r1, [r9, #32]
   1b094:	add	r5, r5, r2
   1b098:	add	r5, r5, r1
   1b09c:	ldr	r2, [r3, #84]	; 0x54
   1b0a0:	cmp	r2, #0
   1b0a4:	beq	1bf90 <sf_icode_to_fcode+0x1ff0>
   1b0a8:	ldr	r1, [r2, #24]
   1b0ac:	cmp	r4, r1
   1b0b0:	beq	1bf90 <sf_icode_to_fcode+0x1ff0>
   1b0b4:	ldr	r9, [r2, #60]	; 0x3c
   1b0b8:	str	r4, [r2, #24]
   1b0bc:	cmp	r9, #0
   1b0c0:	beq	1c0a8 <sf_icode_to_fcode+0x2108>
   1b0c4:	ldr	r1, [r9, #24]
   1b0c8:	cmp	r4, r1
   1b0cc:	beq	1c0a8 <sf_icode_to_fcode+0x2108>
   1b0d0:	str	r4, [r9, #24]
   1b0d4:	ldr	r0, [r9, #60]	; 0x3c
   1b0d8:	str	r2, [sp, #20]
   1b0dc:	str	r3, [sp, #16]
   1b0e0:	bl	13b48 <count_stmts>
   1b0e4:	str	r0, [sp, #12]
   1b0e8:	ldr	r0, [r9, #84]	; 0x54
   1b0ec:	bl	13b48 <count_stmts>
   1b0f0:	ldr	ip, [r9, #4]
   1b0f4:	ldr	r1, [sp, #12]
   1b0f8:	cmp	ip, #0
   1b0fc:	ldr	r3, [sp, #16]
   1b100:	ldr	r2, [sp, #20]
   1b104:	add	r0, r1, r0
   1b108:	beq	1c2f8 <sf_icode_to_fcode+0x2358>
   1b10c:	mov	r1, #0
   1b110:	ldr	lr, [ip]
   1b114:	ldr	ip, [ip, #16]
   1b118:	adds	lr, lr, #1
   1b11c:	movne	lr, #1
   1b120:	cmp	ip, #0
   1b124:	add	r1, r1, lr
   1b128:	bne	1b110 <sf_icode_to_fcode+0x1170>
   1b12c:	add	r1, r0, r1
   1b130:	ldr	ip, [r9, #28]
   1b134:	add	r1, r1, #1
   1b138:	ldr	r0, [r9, #32]
   1b13c:	add	r1, r1, ip
   1b140:	add	r1, r1, r0
   1b144:	str	r1, [sp, #12]
   1b148:	ldr	r1, [r2, #84]	; 0x54
   1b14c:	cmp	r1, #0
   1b150:	beq	1c0bc <sf_icode_to_fcode+0x211c>
   1b154:	ldr	r0, [r1, #24]
   1b158:	cmp	r4, r0
   1b15c:	beq	1c0bc <sf_icode_to_fcode+0x211c>
   1b160:	str	r4, [r1, #24]
   1b164:	ldr	r0, [r1, #60]	; 0x3c
   1b168:	str	r2, [sp, #24]
   1b16c:	str	r3, [sp, #20]
   1b170:	str	r1, [sp, #16]
   1b174:	bl	13b48 <count_stmts>
   1b178:	ldr	r1, [sp, #16]
   1b17c:	mov	r9, r0
   1b180:	ldr	r0, [r1, #84]	; 0x54
   1b184:	bl	13b48 <count_stmts>
   1b188:	ldr	r1, [sp, #16]
   1b18c:	ldr	r3, [sp, #20]
   1b190:	ldr	r2, [sp, #24]
   1b194:	ldr	ip, [r1, #4]
   1b198:	cmp	ip, #0
   1b19c:	add	r0, r9, r0
   1b1a0:	beq	1c300 <sf_icode_to_fcode+0x2360>
   1b1a4:	mov	r9, #0
   1b1a8:	ldr	lr, [ip]
   1b1ac:	ldr	ip, [ip, #16]
   1b1b0:	adds	lr, lr, #1
   1b1b4:	movne	lr, #1
   1b1b8:	cmp	ip, #0
   1b1bc:	add	r9, r9, lr
   1b1c0:	bne	1b1a8 <sf_icode_to_fcode+0x1208>
   1b1c4:	ldr	lr, [r1, #28]
   1b1c8:	add	ip, r0, r9
   1b1cc:	add	ip, ip, #1
   1b1d0:	ldr	r1, [r1, #32]
   1b1d4:	add	ip, ip, lr
   1b1d8:	add	ip, ip, r1
   1b1dc:	ldr	r1, [r2, #4]
   1b1e0:	ldr	r0, [sp, #12]
   1b1e4:	cmp	r1, #0
   1b1e8:	add	ip, ip, r0
   1b1ec:	beq	1c298 <sf_icode_to_fcode+0x22f8>
   1b1f0:	mov	lr, #0
   1b1f4:	ldr	r0, [r1]
   1b1f8:	ldr	r1, [r1, #16]
   1b1fc:	adds	r0, r0, #1
   1b200:	movne	r0, #1
   1b204:	cmp	r1, #0
   1b208:	add	lr, lr, r0
   1b20c:	bne	1b1f4 <sf_icode_to_fcode+0x1254>
   1b210:	ldr	r0, [r2, #28]
   1b214:	add	r1, ip, lr
   1b218:	ldr	r2, [r2, #32]
   1b21c:	add	r1, r1, #1
   1b220:	add	r1, r1, r0
   1b224:	add	r1, r1, r2
   1b228:	ldr	r2, [r3, #4]
   1b22c:	add	r5, r1, r5
   1b230:	cmp	r2, #0
   1b234:	beq	1bfa4 <sf_icode_to_fcode+0x2004>
   1b238:	mov	r0, #0
   1b23c:	ldr	r1, [r2]
   1b240:	ldr	r2, [r2, #16]
   1b244:	adds	r1, r1, #1
   1b248:	movne	r1, #1
   1b24c:	cmp	r2, #0
   1b250:	add	r0, r0, r1
   1b254:	bne	1b23c <sf_icode_to_fcode+0x129c>
   1b258:	ldr	r2, [r3, #28]
   1b25c:	add	r5, r5, r0
   1b260:	ldr	r3, [r3, #32]
   1b264:	add	r9, r5, #1
   1b268:	add	r9, r9, r2
   1b26c:	add	r9, r9, r3
   1b270:	ldr	r3, [sl, #84]	; 0x54
   1b274:	cmp	r3, #0
   1b278:	beq	1bf20 <sf_icode_to_fcode+0x1f80>
   1b27c:	ldr	r2, [r3, #24]
   1b280:	cmp	r4, r2
   1b284:	beq	1bf20 <sf_icode_to_fcode+0x1f80>
   1b288:	ldr	r2, [r3, #60]	; 0x3c
   1b28c:	str	r4, [r3, #24]
   1b290:	cmp	r2, #0
   1b294:	beq	1bfb4 <sf_icode_to_fcode+0x2014>
   1b298:	ldr	r1, [r2, #24]
   1b29c:	cmp	r4, r1
   1b2a0:	beq	1bfb4 <sf_icode_to_fcode+0x2014>
   1b2a4:	ldr	r5, [r2, #60]	; 0x3c
   1b2a8:	str	r4, [r2, #24]
   1b2ac:	cmp	r5, #0
   1b2b0:	beq	1c17c <sf_icode_to_fcode+0x21dc>
   1b2b4:	ldr	r1, [r5, #24]
   1b2b8:	cmp	r4, r1
   1b2bc:	beq	1c17c <sf_icode_to_fcode+0x21dc>
   1b2c0:	str	r4, [r5, #24]
   1b2c4:	ldr	r0, [r5, #60]	; 0x3c
   1b2c8:	str	r2, [sp, #20]
   1b2cc:	str	r3, [sp, #16]
   1b2d0:	bl	13b48 <count_stmts>
   1b2d4:	str	r0, [sp, #12]
   1b2d8:	ldr	r0, [r5, #84]	; 0x54
   1b2dc:	bl	13b48 <count_stmts>
   1b2e0:	ldr	ip, [r5, #4]
   1b2e4:	ldr	r1, [sp, #12]
   1b2e8:	cmp	ip, #0
   1b2ec:	ldr	r3, [sp, #16]
   1b2f0:	ldr	r2, [sp, #20]
   1b2f4:	add	r0, r1, r0
   1b2f8:	beq	1c2d8 <sf_icode_to_fcode+0x2338>
   1b2fc:	mov	r1, #0
   1b300:	ldr	lr, [ip]
   1b304:	ldr	ip, [ip, #16]
   1b308:	adds	lr, lr, #1
   1b30c:	movne	lr, #1
   1b310:	cmp	ip, #0
   1b314:	add	r1, r1, lr
   1b318:	bne	1b300 <sf_icode_to_fcode+0x1360>
   1b31c:	add	r1, r0, r1
   1b320:	ldr	ip, [r5, #28]
   1b324:	add	r1, r1, #1
   1b328:	ldr	r0, [r5, #32]
   1b32c:	add	r1, r1, ip
   1b330:	add	r1, r1, r0
   1b334:	str	r1, [sp, #12]
   1b338:	ldr	r1, [r2, #84]	; 0x54
   1b33c:	cmp	r1, #0
   1b340:	beq	1c0c4 <sf_icode_to_fcode+0x2124>
   1b344:	ldr	r0, [r1, #24]
   1b348:	cmp	r4, r0
   1b34c:	beq	1c0c4 <sf_icode_to_fcode+0x2124>
   1b350:	str	r4, [r1, #24]
   1b354:	ldr	r0, [r1, #60]	; 0x3c
   1b358:	str	r2, [sp, #24]
   1b35c:	str	r3, [sp, #20]
   1b360:	str	r1, [sp, #16]
   1b364:	bl	13b48 <count_stmts>
   1b368:	ldr	r1, [sp, #16]
   1b36c:	mov	r5, r0
   1b370:	ldr	r0, [r1, #84]	; 0x54
   1b374:	bl	13b48 <count_stmts>
   1b378:	ldr	r1, [sp, #16]
   1b37c:	ldr	r3, [sp, #20]
   1b380:	ldr	r2, [sp, #24]
   1b384:	ldr	ip, [r1, #4]
   1b388:	cmp	ip, #0
   1b38c:	add	r0, r5, r0
   1b390:	beq	1c2e0 <sf_icode_to_fcode+0x2340>
   1b394:	mov	r5, #0
   1b398:	ldr	lr, [ip]
   1b39c:	ldr	ip, [ip, #16]
   1b3a0:	adds	lr, lr, #1
   1b3a4:	movne	lr, #1
   1b3a8:	cmp	ip, #0
   1b3ac:	add	r5, r5, lr
   1b3b0:	bne	1b398 <sf_icode_to_fcode+0x13f8>
   1b3b4:	ldr	ip, [r1, #28]
   1b3b8:	add	lr, r0, r5
   1b3bc:	add	lr, lr, #1
   1b3c0:	ldr	r1, [r1, #32]
   1b3c4:	add	lr, lr, ip
   1b3c8:	add	lr, lr, r1
   1b3cc:	ldr	r1, [r2, #4]
   1b3d0:	ldr	r0, [sp, #12]
   1b3d4:	cmp	r1, #0
   1b3d8:	add	lr, lr, r0
   1b3dc:	beq	1c2a8 <sf_icode_to_fcode+0x2308>
   1b3e0:	mov	ip, #0
   1b3e4:	ldr	r0, [r1]
   1b3e8:	ldr	r1, [r1, #16]
   1b3ec:	adds	r0, r0, #1
   1b3f0:	movne	r0, #1
   1b3f4:	cmp	r1, #0
   1b3f8:	add	ip, ip, r0
   1b3fc:	bne	1b3e4 <sf_icode_to_fcode+0x1444>
   1b400:	add	r1, lr, ip
   1b404:	ldr	ip, [r2, #28]
   1b408:	ldr	r0, [r2, #32]
   1b40c:	add	r1, r1, #1
   1b410:	add	r2, r1, ip
   1b414:	add	r2, r2, r0
   1b418:	str	r2, [sp, #12]
   1b41c:	ldr	r2, [r3, #84]	; 0x54
   1b420:	cmp	r2, #0
   1b424:	beq	1bfac <sf_icode_to_fcode+0x200c>
   1b428:	ldr	r1, [r2, #24]
   1b42c:	cmp	r4, r1
   1b430:	beq	1bfac <sf_icode_to_fcode+0x200c>
   1b434:	ldr	r5, [r2, #60]	; 0x3c
   1b438:	str	r4, [r2, #24]
   1b43c:	cmp	r5, #0
   1b440:	beq	1c148 <sf_icode_to_fcode+0x21a8>
   1b444:	ldr	r1, [r5, #24]
   1b448:	cmp	r4, r1
   1b44c:	beq	1c148 <sf_icode_to_fcode+0x21a8>
   1b450:	str	r4, [r5, #24]
   1b454:	ldr	r0, [r5, #60]	; 0x3c
   1b458:	str	r2, [sp, #24]
   1b45c:	str	r3, [sp, #20]
   1b460:	bl	13b48 <count_stmts>
   1b464:	str	r0, [sp, #16]
   1b468:	ldr	r0, [r5, #84]	; 0x54
   1b46c:	bl	13b48 <count_stmts>
   1b470:	ldr	ip, [r5, #4]
   1b474:	ldr	r1, [sp, #16]
   1b478:	cmp	ip, #0
   1b47c:	ldr	r3, [sp, #20]
   1b480:	ldr	r2, [sp, #24]
   1b484:	add	r0, r1, r0
   1b488:	beq	1c368 <sf_icode_to_fcode+0x23c8>
   1b48c:	mov	r1, #0
   1b490:	ldr	lr, [ip]
   1b494:	ldr	ip, [ip, #16]
   1b498:	adds	lr, lr, #1
   1b49c:	movne	lr, #1
   1b4a0:	cmp	ip, #0
   1b4a4:	add	r1, r1, lr
   1b4a8:	bne	1b490 <sf_icode_to_fcode+0x14f0>
   1b4ac:	add	r1, r0, r1
   1b4b0:	ldr	ip, [r5, #28]
   1b4b4:	add	r1, r1, #1
   1b4b8:	ldr	r0, [r5, #32]
   1b4bc:	add	r1, r1, ip
   1b4c0:	add	r1, r1, r0
   1b4c4:	str	r1, [sp, #16]
   1b4c8:	ldr	r1, [r2, #84]	; 0x54
   1b4cc:	cmp	r1, #0
   1b4d0:	beq	1c140 <sf_icode_to_fcode+0x21a0>
   1b4d4:	ldr	r0, [r1, #24]
   1b4d8:	cmp	r4, r0
   1b4dc:	beq	1c140 <sf_icode_to_fcode+0x21a0>
   1b4e0:	str	r4, [r1, #24]
   1b4e4:	ldr	r0, [r1, #60]	; 0x3c
   1b4e8:	str	r2, [sp, #28]
   1b4ec:	str	r3, [sp, #24]
   1b4f0:	str	r1, [sp, #20]
   1b4f4:	bl	13b48 <count_stmts>
   1b4f8:	ldr	r1, [sp, #20]
   1b4fc:	mov	r5, r0
   1b500:	ldr	r0, [r1, #84]	; 0x54
   1b504:	bl	13b48 <count_stmts>
   1b508:	ldr	r1, [sp, #20]
   1b50c:	ldr	r3, [sp, #24]
   1b510:	ldr	r2, [sp, #28]
   1b514:	ldr	ip, [r1, #4]
   1b518:	cmp	ip, #0
   1b51c:	add	r0, r5, r0
   1b520:	beq	1c370 <sf_icode_to_fcode+0x23d0>
   1b524:	mov	r5, #0
   1b528:	ldr	lr, [ip]
   1b52c:	ldr	ip, [ip, #16]
   1b530:	adds	lr, lr, #1
   1b534:	movne	lr, #1
   1b538:	cmp	ip, #0
   1b53c:	add	r5, r5, lr
   1b540:	bne	1b528 <sf_icode_to_fcode+0x1588>
   1b544:	add	r0, r0, r5
   1b548:	ldr	lr, [r1, #28]
   1b54c:	ldr	ip, [r1, #32]
   1b550:	add	r0, r0, #1
   1b554:	add	r1, r0, lr
   1b558:	add	r1, r1, ip
   1b55c:	ldr	r0, [r2, #4]
   1b560:	ldr	ip, [sp, #16]
   1b564:	cmp	r0, #0
   1b568:	add	r1, r1, ip
   1b56c:	beq	1c2b0 <sf_icode_to_fcode+0x2310>
   1b570:	mov	lr, #0
   1b574:	ldr	ip, [r0]
   1b578:	ldr	r0, [r0, #16]
   1b57c:	adds	ip, ip, #1
   1b580:	movne	ip, #1
   1b584:	cmp	r0, #0
   1b588:	add	lr, lr, ip
   1b58c:	bne	1b574 <sf_icode_to_fcode+0x15d4>
   1b590:	ldr	ip, [r2, #28]
   1b594:	add	r0, r1, lr
   1b598:	add	r0, r0, #1
   1b59c:	ldr	r2, [r2, #32]
   1b5a0:	add	r0, r0, ip
   1b5a4:	add	r0, r0, r2
   1b5a8:	ldr	r2, [r3, #4]
   1b5ac:	ldr	r1, [sp, #12]
   1b5b0:	cmp	r2, #0
   1b5b4:	add	r0, r0, r1
   1b5b8:	beq	1c290 <sf_icode_to_fcode+0x22f0>
   1b5bc:	mov	ip, #0
   1b5c0:	ldr	r1, [r2]
   1b5c4:	ldr	r2, [r2, #16]
   1b5c8:	adds	r1, r1, #1
   1b5cc:	movne	r1, #1
   1b5d0:	cmp	r2, #0
   1b5d4:	add	ip, ip, r1
   1b5d8:	bne	1b5c0 <sf_icode_to_fcode+0x1620>
   1b5dc:	ldr	r2, [r3, #28]
   1b5e0:	add	r5, r0, ip
   1b5e4:	ldr	r3, [r3, #32]
   1b5e8:	add	r5, r5, #1
   1b5ec:	add	r5, r5, r2
   1b5f0:	add	r5, r5, r3
   1b5f4:	ldr	r3, [sl, #4]
   1b5f8:	add	r5, r5, r9
   1b5fc:	cmp	r3, #0
   1b600:	beq	1bf34 <sf_icode_to_fcode+0x1f94>
   1b604:	mov	r1, #0
   1b608:	ldr	r2, [r3]
   1b60c:	ldr	r3, [r3, #16]
   1b610:	adds	r2, r2, #1
   1b614:	movne	r2, #1
   1b618:	cmp	r3, #0
   1b61c:	add	r1, r1, r2
   1b620:	bne	1b608 <sf_icode_to_fcode+0x1668>
   1b624:	add	r5, r5, r1
   1b628:	ldr	r2, [sl, #28]
   1b62c:	ldr	r9, [r8, #84]	; 0x54
   1b630:	add	r5, r5, #1
   1b634:	ldr	r3, [sl, #32]
   1b638:	add	r5, r5, r2
   1b63c:	cmp	r9, #0
   1b640:	add	r5, r5, r3
   1b644:	beq	1bed8 <sf_icode_to_fcode+0x1f38>
   1b648:	ldr	r3, [r9, #24]
   1b64c:	cmp	r4, r3
   1b650:	beq	1bed8 <sf_icode_to_fcode+0x1f38>
   1b654:	ldr	r3, [r9, #60]	; 0x3c
   1b658:	str	r4, [r9, #24]
   1b65c:	cmp	r3, #0
   1b660:	beq	1bf58 <sf_icode_to_fcode+0x1fb8>
   1b664:	ldr	r2, [r3, #24]
   1b668:	cmp	r4, r2
   1b66c:	beq	1bf58 <sf_icode_to_fcode+0x1fb8>
   1b670:	ldr	r2, [r3, #60]	; 0x3c
   1b674:	str	r4, [r3, #24]
   1b678:	cmp	r2, #0
   1b67c:	beq	1c01c <sf_icode_to_fcode+0x207c>
   1b680:	ldr	r1, [r2, #24]
   1b684:	cmp	r4, r1
   1b688:	beq	1c01c <sf_icode_to_fcode+0x207c>
   1b68c:	ldr	sl, [r2, #60]	; 0x3c
   1b690:	str	r4, [r2, #24]
   1b694:	cmp	sl, #0
   1b698:	beq	1c170 <sf_icode_to_fcode+0x21d0>
   1b69c:	ldr	r1, [sl, #24]
   1b6a0:	cmp	r4, r1
   1b6a4:	beq	1c170 <sf_icode_to_fcode+0x21d0>
   1b6a8:	str	r4, [sl, #24]
   1b6ac:	ldr	r0, [sl, #60]	; 0x3c
   1b6b0:	str	r2, [sp, #20]
   1b6b4:	str	r3, [sp, #16]
   1b6b8:	bl	13b48 <count_stmts>
   1b6bc:	str	r0, [sp, #12]
   1b6c0:	ldr	r0, [sl, #84]	; 0x54
   1b6c4:	bl	13b48 <count_stmts>
   1b6c8:	ldr	ip, [sl, #4]
   1b6cc:	ldr	r1, [sp, #12]
   1b6d0:	cmp	ip, #0
   1b6d4:	ldr	r3, [sp, #16]
   1b6d8:	ldr	r2, [sp, #20]
   1b6dc:	add	r0, r1, r0
   1b6e0:	beq	1c378 <sf_icode_to_fcode+0x23d8>
   1b6e4:	mov	r1, #0
   1b6e8:	ldr	lr, [ip]
   1b6ec:	ldr	ip, [ip, #16]
   1b6f0:	adds	lr, lr, #1
   1b6f4:	movne	lr, #1
   1b6f8:	cmp	ip, #0
   1b6fc:	add	r1, r1, lr
   1b700:	bne	1b6e8 <sf_icode_to_fcode+0x1748>
   1b704:	add	r1, r1, r0
   1b708:	ldr	ip, [sl, #28]
   1b70c:	add	r1, r1, #1
   1b710:	ldr	r0, [sl, #32]
   1b714:	add	r1, r1, ip
   1b718:	add	r1, r1, r0
   1b71c:	str	r1, [sp, #12]
   1b720:	ldr	r1, [r2, #84]	; 0x54
   1b724:	cmp	r1, #0
   1b728:	beq	1c168 <sf_icode_to_fcode+0x21c8>
   1b72c:	ldr	r0, [r1, #24]
   1b730:	cmp	r4, r0
   1b734:	beq	1c168 <sf_icode_to_fcode+0x21c8>
   1b738:	str	r4, [r1, #24]
   1b73c:	ldr	r0, [r1, #60]	; 0x3c
   1b740:	str	r2, [sp, #24]
   1b744:	str	r3, [sp, #20]
   1b748:	str	r1, [sp, #16]
   1b74c:	bl	13b48 <count_stmts>
   1b750:	ldr	r1, [sp, #16]
   1b754:	mov	sl, r0
   1b758:	ldr	r0, [r1, #84]	; 0x54
   1b75c:	bl	13b48 <count_stmts>
   1b760:	ldr	r1, [sp, #16]
   1b764:	ldr	r3, [sp, #20]
   1b768:	ldr	r2, [sp, #24]
   1b76c:	ldr	ip, [r1, #4]
   1b770:	cmp	ip, #0
   1b774:	add	r0, sl, r0
   1b778:	beq	1c380 <sf_icode_to_fcode+0x23e0>
   1b77c:	mov	sl, #0
   1b780:	ldr	lr, [ip]
   1b784:	ldr	ip, [ip, #16]
   1b788:	adds	lr, lr, #1
   1b78c:	movne	lr, #1
   1b790:	cmp	ip, #0
   1b794:	add	sl, sl, lr
   1b798:	bne	1b780 <sf_icode_to_fcode+0x17e0>
   1b79c:	ldr	ip, [r1, #28]
   1b7a0:	add	lr, r0, sl
   1b7a4:	add	lr, lr, #1
   1b7a8:	ldr	r1, [r1, #32]
   1b7ac:	add	lr, lr, ip
   1b7b0:	add	lr, lr, r1
   1b7b4:	ldr	r1, [r2, #4]
   1b7b8:	ldr	r0, [sp, #12]
   1b7bc:	cmp	r1, #0
   1b7c0:	add	lr, lr, r0
   1b7c4:	beq	1c2b8 <sf_icode_to_fcode+0x2318>
   1b7c8:	mov	ip, #0
   1b7cc:	ldr	r0, [r1]
   1b7d0:	ldr	r1, [r1, #16]
   1b7d4:	adds	r0, r0, #1
   1b7d8:	movne	r0, #1
   1b7dc:	cmp	r1, #0
   1b7e0:	add	ip, ip, r0
   1b7e4:	bne	1b7cc <sf_icode_to_fcode+0x182c>
   1b7e8:	add	r1, lr, ip
   1b7ec:	ldr	ip, [r2, #28]
   1b7f0:	ldr	r0, [r2, #32]
   1b7f4:	add	r1, r1, #1
   1b7f8:	add	r2, r1, ip
   1b7fc:	add	r2, r2, r0
   1b800:	str	r2, [sp, #12]
   1b804:	ldr	r2, [r3, #84]	; 0x54
   1b808:	cmp	r2, #0
   1b80c:	beq	1c014 <sf_icode_to_fcode+0x2074>
   1b810:	ldr	r1, [r2, #24]
   1b814:	cmp	r4, r1
   1b818:	beq	1c014 <sf_icode_to_fcode+0x2074>
   1b81c:	ldr	sl, [r2, #60]	; 0x3c
   1b820:	str	r4, [r2, #24]
   1b824:	cmp	sl, #0
   1b828:	beq	1c15c <sf_icode_to_fcode+0x21bc>
   1b82c:	ldr	r1, [sl, #24]
   1b830:	cmp	r4, r1
   1b834:	beq	1c15c <sf_icode_to_fcode+0x21bc>
   1b838:	str	r4, [sl, #24]
   1b83c:	ldr	r0, [sl, #60]	; 0x3c
   1b840:	str	r2, [sp, #24]
   1b844:	str	r3, [sp, #20]
   1b848:	bl	13b48 <count_stmts>
   1b84c:	str	r0, [sp, #16]
   1b850:	ldr	r0, [sl, #84]	; 0x54
   1b854:	bl	13b48 <count_stmts>
   1b858:	ldr	ip, [sl, #4]
   1b85c:	ldr	r1, [sp, #16]
   1b860:	cmp	ip, #0
   1b864:	ldr	r3, [sp, #20]
   1b868:	ldr	r2, [sp, #24]
   1b86c:	add	r0, r1, r0
   1b870:	beq	1c330 <sf_icode_to_fcode+0x2390>
   1b874:	mov	r1, #0
   1b878:	ldr	lr, [ip]
   1b87c:	ldr	ip, [ip, #16]
   1b880:	adds	lr, lr, #1
   1b884:	movne	lr, #1
   1b888:	cmp	ip, #0
   1b88c:	add	r1, r1, lr
   1b890:	bne	1b878 <sf_icode_to_fcode+0x18d8>
   1b894:	add	r1, r0, r1
   1b898:	ldr	ip, [sl, #28]
   1b89c:	add	r1, r1, #1
   1b8a0:	ldr	r0, [sl, #32]
   1b8a4:	add	r1, r1, ip
   1b8a8:	add	r1, r1, r0
   1b8ac:	str	r1, [sp, #16]
   1b8b0:	ldr	r1, [r2, #84]	; 0x54
   1b8b4:	cmp	r1, #0
   1b8b8:	beq	1c154 <sf_icode_to_fcode+0x21b4>
   1b8bc:	ldr	r0, [r1, #24]
   1b8c0:	cmp	r4, r0
   1b8c4:	beq	1c154 <sf_icode_to_fcode+0x21b4>
   1b8c8:	str	r4, [r1, #24]
   1b8cc:	ldr	r0, [r1, #60]	; 0x3c
   1b8d0:	str	r2, [sp, #28]
   1b8d4:	str	r3, [sp, #24]
   1b8d8:	str	r1, [sp, #20]
   1b8dc:	bl	13b48 <count_stmts>
   1b8e0:	ldr	r1, [sp, #20]
   1b8e4:	mov	sl, r0
   1b8e8:	ldr	r0, [r1, #84]	; 0x54
   1b8ec:	bl	13b48 <count_stmts>
   1b8f0:	ldr	r1, [sp, #20]
   1b8f4:	ldr	r3, [sp, #24]
   1b8f8:	ldr	r2, [sp, #28]
   1b8fc:	ldr	ip, [r1, #4]
   1b900:	cmp	ip, #0
   1b904:	add	r0, sl, r0
   1b908:	beq	1c338 <sf_icode_to_fcode+0x2398>
   1b90c:	mov	sl, #0
   1b910:	ldr	lr, [ip]
   1b914:	ldr	ip, [ip, #16]
   1b918:	adds	lr, lr, #1
   1b91c:	movne	lr, #1
   1b920:	cmp	ip, #0
   1b924:	add	sl, sl, lr
   1b928:	bne	1b910 <sf_icode_to_fcode+0x1970>
   1b92c:	ldr	lr, [r1, #28]
   1b930:	add	ip, r0, sl
   1b934:	add	ip, ip, #1
   1b938:	ldr	r1, [r1, #32]
   1b93c:	add	ip, ip, lr
   1b940:	add	ip, ip, r1
   1b944:	ldr	r1, [r2, #4]
   1b948:	ldr	r0, [sp, #16]
   1b94c:	cmp	r1, #0
   1b950:	add	ip, ip, r0
   1b954:	beq	1c2c0 <sf_icode_to_fcode+0x2320>
   1b958:	mov	lr, #0
   1b95c:	ldr	r0, [r1]
   1b960:	ldr	r1, [r1, #16]
   1b964:	adds	r0, r0, #1
   1b968:	movne	r0, #1
   1b96c:	cmp	r1, #0
   1b970:	add	lr, lr, r0
   1b974:	bne	1b95c <sf_icode_to_fcode+0x19bc>
   1b978:	ldr	r1, [r2, #28]
   1b97c:	add	ip, ip, lr
   1b980:	add	ip, ip, #1
   1b984:	ldr	r2, [r2, #32]
   1b988:	add	ip, ip, r1
   1b98c:	add	ip, ip, r2
   1b990:	ldr	r2, [r3, #4]
   1b994:	ldr	r1, [sp, #12]
   1b998:	cmp	r2, #0
   1b99c:	add	ip, ip, r1
   1b9a0:	beq	1c278 <sf_icode_to_fcode+0x22d8>
   1b9a4:	mov	r0, #0
   1b9a8:	ldr	r1, [r2]
   1b9ac:	ldr	r2, [r2, #16]
   1b9b0:	adds	r1, r1, #1
   1b9b4:	movne	r1, #1
   1b9b8:	cmp	r2, #0
   1b9bc:	add	r0, r0, r1
   1b9c0:	bne	1b9a8 <sf_icode_to_fcode+0x1a08>
   1b9c4:	add	r2, ip, r0
   1b9c8:	ldr	r1, [r3, #28]
   1b9cc:	ldr	r0, [r3, #32]
   1b9d0:	add	r2, r2, #1
   1b9d4:	add	r3, r2, r1
   1b9d8:	add	r3, r3, r0
   1b9dc:	str	r3, [sp, #12]
   1b9e0:	ldr	sl, [r9, #84]	; 0x54
   1b9e4:	cmp	sl, #0
   1b9e8:	beq	1bf08 <sf_icode_to_fcode+0x1f68>
   1b9ec:	ldr	r3, [sl, #24]
   1b9f0:	cmp	r4, r3
   1b9f4:	beq	1bf08 <sf_icode_to_fcode+0x1f68>
   1b9f8:	ldr	r3, [sl, #60]	; 0x3c
   1b9fc:	str	r4, [sl, #24]
   1ba00:	cmp	r3, #0
   1ba04:	beq	1bfc0 <sf_icode_to_fcode+0x2020>
   1ba08:	ldr	r2, [r3, #24]
   1ba0c:	cmp	r4, r2
   1ba10:	beq	1bfc0 <sf_icode_to_fcode+0x2020>
   1ba14:	ldr	r2, [r3, #60]	; 0x3c
   1ba18:	str	r4, [r3, #24]
   1ba1c:	cmp	r2, #0
   1ba20:	beq	1c1e8 <sf_icode_to_fcode+0x2248>
   1ba24:	ldr	r1, [r2, #24]
   1ba28:	cmp	r4, r1
   1ba2c:	beq	1c1e8 <sf_icode_to_fcode+0x2248>
   1ba30:	str	r4, [r2, #24]
   1ba34:	ldr	r0, [r2, #60]	; 0x3c
   1ba38:	str	r3, [sp, #24]
   1ba3c:	str	r2, [sp, #16]
   1ba40:	bl	13b48 <count_stmts>
   1ba44:	ldr	r2, [sp, #16]
   1ba48:	str	r0, [sp, #20]
   1ba4c:	ldr	r0, [r2, #84]	; 0x54
   1ba50:	bl	13b48 <count_stmts>
   1ba54:	ldr	r2, [sp, #16]
   1ba58:	ldr	r1, [sp, #20]
   1ba5c:	ldr	r3, [sp, #24]
   1ba60:	ldr	ip, [r2, #4]
   1ba64:	cmp	ip, #0
   1ba68:	add	r0, r1, r0
   1ba6c:	beq	1c3a0 <sf_icode_to_fcode+0x2400>
   1ba70:	mov	r1, #0
   1ba74:	ldr	lr, [ip]
   1ba78:	ldr	ip, [ip, #16]
   1ba7c:	adds	lr, lr, #1
   1ba80:	movne	lr, #1
   1ba84:	cmp	ip, #0
   1ba88:	add	r1, r1, lr
   1ba8c:	bne	1ba74 <sf_icode_to_fcode+0x1ad4>
   1ba90:	add	r1, r1, r0
   1ba94:	ldr	ip, [r2, #28]
   1ba98:	ldr	r0, [r2, #32]
   1ba9c:	add	r1, r1, #1
   1baa0:	add	r2, r1, ip
   1baa4:	add	r2, r2, r0
   1baa8:	str	r2, [sp, #16]
   1baac:	ldr	r2, [r3, #84]	; 0x54
   1bab0:	cmp	r2, #0
   1bab4:	beq	1c1e0 <sf_icode_to_fcode+0x2240>
   1bab8:	ldr	r1, [r2, #24]
   1babc:	cmp	r4, r1
   1bac0:	beq	1c1e0 <sf_icode_to_fcode+0x2240>
   1bac4:	str	r4, [r2, #24]
   1bac8:	ldr	r0, [r2, #60]	; 0x3c
   1bacc:	str	r3, [sp, #28]
   1bad0:	str	r2, [sp, #20]
   1bad4:	bl	13b48 <count_stmts>
   1bad8:	ldr	r2, [sp, #20]
   1badc:	str	r0, [sp, #24]
   1bae0:	ldr	r0, [r2, #84]	; 0x54
   1bae4:	bl	13b48 <count_stmts>
   1bae8:	ldr	r2, [sp, #20]
   1baec:	ldr	r1, [sp, #24]
   1baf0:	ldr	r3, [sp, #28]
   1baf4:	ldr	ip, [r2, #4]
   1baf8:	cmp	ip, #0
   1bafc:	add	r0, r1, r0
   1bb00:	beq	1c340 <sf_icode_to_fcode+0x23a0>
   1bb04:	mov	r1, #0
   1bb08:	ldr	lr, [ip]
   1bb0c:	ldr	ip, [ip, #16]
   1bb10:	adds	lr, lr, #1
   1bb14:	movne	lr, #1
   1bb18:	cmp	ip, #0
   1bb1c:	add	r1, r1, lr
   1bb20:	bne	1bb08 <sf_icode_to_fcode+0x1b68>
   1bb24:	add	r1, r1, r0
   1bb28:	ldr	r0, [r2, #28]
   1bb2c:	add	ip, r1, #1
   1bb30:	ldr	r2, [r2, #32]
   1bb34:	add	ip, ip, r0
   1bb38:	add	ip, ip, r2
   1bb3c:	ldr	r2, [r3, #4]
   1bb40:	ldr	r1, [sp, #16]
   1bb44:	cmp	r2, #0
   1bb48:	add	ip, ip, r1
   1bb4c:	beq	1c2c8 <sf_icode_to_fcode+0x2328>
   1bb50:	mov	r0, #0
   1bb54:	ldr	r1, [r2]
   1bb58:	ldr	r2, [r2, #16]
   1bb5c:	adds	r1, r1, #1
   1bb60:	movne	r1, #1
   1bb64:	cmp	r2, #0
   1bb68:	add	r0, r0, r1
   1bb6c:	bne	1bb54 <sf_icode_to_fcode+0x1bb4>
   1bb70:	add	r2, r0, ip
   1bb74:	ldr	ip, [r3, #28]
   1bb78:	ldr	r1, [r3, #32]
   1bb7c:	add	r2, r2, #1
   1bb80:	add	r3, r2, ip
   1bb84:	add	r3, r3, r1
   1bb88:	str	r3, [sp, #16]
   1bb8c:	ldr	r3, [sl, #84]	; 0x54
   1bb90:	cmp	r3, #0
   1bb94:	beq	1bfd4 <sf_icode_to_fcode+0x2034>
   1bb98:	ldr	r2, [r3, #24]
   1bb9c:	cmp	r4, r2
   1bba0:	beq	1bfd4 <sf_icode_to_fcode+0x2034>
   1bba4:	ldr	r2, [r3, #60]	; 0x3c
   1bba8:	str	r4, [r3, #24]
   1bbac:	cmp	r2, #0
   1bbb0:	beq	1c218 <sf_icode_to_fcode+0x2278>
   1bbb4:	ldr	r1, [r2, #24]
   1bbb8:	cmp	r4, r1
   1bbbc:	beq	1c218 <sf_icode_to_fcode+0x2278>
   1bbc0:	str	r4, [r2, #24]
   1bbc4:	ldr	r0, [r2, #60]	; 0x3c
   1bbc8:	str	r3, [sp, #28]
   1bbcc:	str	r2, [sp, #20]
   1bbd0:	bl	13b48 <count_stmts>
   1bbd4:	ldr	r2, [sp, #20]
   1bbd8:	str	r0, [sp, #24]
   1bbdc:	ldr	r0, [r2, #84]	; 0x54
   1bbe0:	bl	13b48 <count_stmts>
   1bbe4:	ldr	r2, [sp, #20]
   1bbe8:	ldr	r1, [sp, #24]
   1bbec:	ldr	r3, [sp, #28]
   1bbf0:	ldr	ip, [r2, #4]
   1bbf4:	cmp	ip, #0
   1bbf8:	add	r0, r1, r0
   1bbfc:	beq	1c358 <sf_icode_to_fcode+0x23b8>
   1bc00:	mov	r1, #0
   1bc04:	ldr	lr, [ip]
   1bc08:	ldr	ip, [ip, #16]
   1bc0c:	adds	lr, lr, #1
   1bc10:	movne	lr, #1
   1bc14:	cmp	ip, #0
   1bc18:	add	r1, r1, lr
   1bc1c:	bne	1bc04 <sf_icode_to_fcode+0x1c64>
   1bc20:	add	r1, r1, r0
   1bc24:	ldr	ip, [r2, #28]
   1bc28:	ldr	r0, [r2, #32]
   1bc2c:	add	r1, r1, #1
   1bc30:	add	r2, r1, ip
   1bc34:	add	r2, r2, r0
   1bc38:	str	r2, [sp, #20]
   1bc3c:	ldr	r2, [r3, #84]	; 0x54
   1bc40:	cmp	r2, #0
   1bc44:	beq	1c060 <sf_icode_to_fcode+0x20c0>
   1bc48:	ldr	r1, [r2, #24]
   1bc4c:	cmp	r4, r1
   1bc50:	beq	1c060 <sf_icode_to_fcode+0x20c0>
   1bc54:	str	r4, [r2, #24]
   1bc58:	ldr	r0, [r2, #60]	; 0x3c
   1bc5c:	str	r3, [sp, #28]
   1bc60:	str	r2, [sp, #24]
   1bc64:	bl	13b48 <count_stmts>
   1bc68:	ldr	r2, [sp, #24]
   1bc6c:	mov	r4, r0
   1bc70:	ldr	r0, [r2, #84]	; 0x54
   1bc74:	bl	13b48 <count_stmts>
   1bc78:	ldr	r2, [sp, #24]
   1bc7c:	ldr	r3, [sp, #28]
   1bc80:	ldr	r1, [r2, #4]
   1bc84:	cmp	r1, #0
   1bc88:	add	r0, r4, r0
   1bc8c:	beq	1c360 <sf_icode_to_fcode+0x23c0>
   1bc90:	mov	lr, #0
   1bc94:	ldr	ip, [r1]
   1bc98:	ldr	r1, [r1, #16]
   1bc9c:	adds	ip, ip, #1
   1bca0:	movne	ip, #1
   1bca4:	cmp	r1, #0
   1bca8:	add	lr, lr, ip
   1bcac:	bne	1bc94 <sf_icode_to_fcode+0x1cf4>
   1bcb0:	ldr	r1, [r2, #28]
   1bcb4:	add	ip, lr, r0
   1bcb8:	add	ip, ip, #1
   1bcbc:	ldr	r2, [r2, #32]
   1bcc0:	add	ip, ip, r1
   1bcc4:	add	ip, ip, r2
   1bcc8:	ldr	r1, [r3, #4]
   1bccc:	ldr	r2, [sp, #20]
   1bcd0:	cmp	r1, #0
   1bcd4:	add	ip, ip, r2
   1bcd8:	beq	1c2a0 <sf_icode_to_fcode+0x2300>
   1bcdc:	mov	r2, #0
   1bce0:	ldr	r0, [r1]
   1bce4:	ldr	r1, [r1, #16]
   1bce8:	adds	r0, r0, #1
   1bcec:	movne	r0, #1
   1bcf0:	cmp	r1, #0
   1bcf4:	add	r2, r2, r0
   1bcf8:	bne	1bce0 <sf_icode_to_fcode+0x1d40>
   1bcfc:	add	r2, r2, ip
   1bd00:	ldr	r0, [r3, #28]
   1bd04:	ldr	r1, [r3, #32]
   1bd08:	add	r2, r2, #1
   1bd0c:	add	r3, r2, r0
   1bd10:	add	r3, r3, r1
   1bd14:	ldr	r2, [sl, #4]
   1bd18:	ldr	r1, [sp, #16]
   1bd1c:	cmp	r2, #0
   1bd20:	add	r3, r3, r1
   1bd24:	beq	1c270 <sf_icode_to_fcode+0x22d0>
   1bd28:	mov	r0, #0
   1bd2c:	ldr	r1, [r2]
   1bd30:	ldr	r2, [r2, #16]
   1bd34:	adds	r1, r1, #1
   1bd38:	movne	r1, #1
   1bd3c:	cmp	r2, #0
   1bd40:	add	r0, r0, r1
   1bd44:	bne	1bd2c <sf_icode_to_fcode+0x1d8c>
   1bd48:	add	r1, r3, r0
   1bd4c:	ldr	r3, [sl, #28]
   1bd50:	add	r1, r1, #1
   1bd54:	ldr	r2, [sl, #32]
   1bd58:	add	r1, r1, r3
   1bd5c:	add	r1, r1, r2
   1bd60:	ldr	r3, [r9, #4]
   1bd64:	ldr	r2, [sp, #12]
   1bd68:	cmp	r3, #0
   1bd6c:	add	r1, r1, r2
   1bd70:	beq	1c250 <sf_icode_to_fcode+0x22b0>
   1bd74:	mov	r0, #0
   1bd78:	ldr	r2, [r3]
   1bd7c:	ldr	r3, [r3, #16]
   1bd80:	adds	r2, r2, #1
   1bd84:	movne	r2, #1
   1bd88:	cmp	r3, #0
   1bd8c:	add	r0, r0, r2
   1bd90:	bne	1bd78 <sf_icode_to_fcode+0x1dd8>
   1bd94:	add	r1, r1, r0
   1bd98:	ldr	r2, [r9, #28]
   1bd9c:	ldr	r3, [r9, #32]
   1bda0:	add	r1, r1, #1
   1bda4:	add	r1, r1, r2
   1bda8:	add	r1, r1, r3
   1bdac:	ldr	r3, [r8, #4]
   1bdb0:	add	r1, r1, r5
   1bdb4:	cmp	r3, #0
   1bdb8:	beq	1beec <sf_icode_to_fcode+0x1f4c>
   1bdbc:	mov	r5, #0
   1bdc0:	ldr	r2, [r3]
   1bdc4:	ldr	r3, [r3, #16]
   1bdc8:	adds	r2, r2, #1
   1bdcc:	movne	r2, #1
   1bdd0:	cmp	r3, #0
   1bdd4:	add	r5, r5, r2
   1bdd8:	bne	1bdc0 <sf_icode_to_fcode+0x1e20>
   1bddc:	add	r1, r1, r5
   1bde0:	ldr	r2, [r8, #28]
   1bde4:	add	r1, r1, #1
   1bde8:	ldr	r3, [r8, #32]
   1bdec:	add	r1, r1, r2
   1bdf0:	add	r1, r1, r3
   1bdf4:	ldr	r3, [fp, #4]
   1bdf8:	ldr	r2, [sp]
   1bdfc:	cmp	r3, #0
   1be00:	add	r1, r1, r2
   1be04:	beq	1bf80 <sf_icode_to_fcode+0x1fe0>
   1be08:	mov	r0, #0
   1be0c:	ldr	r2, [r3]
   1be10:	ldr	r3, [r3, #16]
   1be14:	adds	r2, r2, #1
   1be18:	movne	r2, #1
   1be1c:	cmp	r3, #0
   1be20:	add	r0, r0, r2
   1be24:	bne	1be0c <sf_icode_to_fcode+0x1e6c>
   1be28:	add	r3, r1, r0
   1be2c:	ldr	r1, [fp, #28]
   1be30:	add	r3, r3, #1
   1be34:	ldr	r2, [fp, #32]
   1be38:	add	r3, r3, r1
   1be3c:	add	r3, r3, r2
   1be40:	lsl	r4, r3, #3
   1be44:	ldr	r2, [sp, #4]
   1be48:	mov	r1, #1
   1be4c:	mov	r0, r4
   1be50:	str	r3, [r2]
   1be54:	bl	d38 <calloc@plt>
   1be58:	subs	r5, r0, #0
   1be5c:	beq	1c3d0 <sf_icode_to_fcode+0x2430>
   1be60:	add	r4, r5, r4
   1be64:	mov	r0, fp
   1be68:	str	r6, [r7, #4]
   1be6c:	str	r4, [r7, #8]
   1be70:	str	r5, [r7, #12]
   1be74:	bl	11c60 <convert_code_r>
   1be78:	add	r6, r6, #2
   1be7c:	cmp	r0, #0
   1be80:	mov	r0, r5
   1be84:	bne	1bf88 <sf_icode_to_fcode+0x1fe8>
   1be88:	bl	da4 <free@plt>
   1be8c:	ldr	r3, [sp, #8]
   1be90:	sub	r4, r6, #1
   1be94:	cmp	fp, #0
   1be98:	str	r4, [r3, #4]
   1be9c:	bne	19fe4 <sf_icode_to_fcode+0x44>
   1bea0:	mov	r4, #0
   1bea4:	mov	r3, fp
   1bea8:	b	1be44 <sf_icode_to_fcode+0x1ea4>
   1beac:	ldr	r8, [fp, #84]	; 0x54
   1beb0:	mov	r3, #0
   1beb4:	cmp	r8, #0
   1beb8:	str	r3, [sp]
   1bebc:	bne	1aedc <sf_icode_to_fcode+0xf3c>
   1bec0:	mov	r1, #0
   1bec4:	b	1bdf4 <sf_icode_to_fcode+0x1e54>
   1bec8:	ldr	r9, [r8, #84]	; 0x54
   1becc:	mov	r5, #0
   1bed0:	cmp	r9, #0
   1bed4:	bne	1b648 <sf_icode_to_fcode+0x16a8>
   1bed8:	ldr	r3, [r8, #4]
   1bedc:	mov	r1, #0
   1bee0:	cmp	r3, #0
   1bee4:	add	r1, r1, r5
   1bee8:	bne	1bdbc <sf_icode_to_fcode+0x1e1c>
   1beec:	mov	r5, r3
   1bef0:	b	1bddc <sf_icode_to_fcode+0x1e3c>
   1bef4:	mov	r0, #0
   1bef8:	b	1ae74 <sf_icode_to_fcode+0xed4>
   1befc:	mov	r3, #0
   1bf00:	str	r3, [sp]
   1bf04:	b	1a74c <sf_icode_to_fcode+0x7ac>
   1bf08:	mov	r1, #0
   1bf0c:	b	1bd60 <sf_icode_to_fcode+0x1dc0>
   1bf10:	ldr	r3, [sl, #84]	; 0x54
   1bf14:	mov	r9, #0
   1bf18:	cmp	r3, #0
   1bf1c:	bne	1b27c <sf_icode_to_fcode+0x12dc>
   1bf20:	ldr	r3, [sl, #4]
   1bf24:	mov	r5, #0
   1bf28:	cmp	r3, #0
   1bf2c:	add	r5, r5, r9
   1bf30:	bne	1b604 <sf_icode_to_fcode+0x1664>
   1bf34:	mov	r1, r3
   1bf38:	b	1b624 <sf_icode_to_fcode+0x1684>
   1bf3c:	ldr	r9, [r8, #84]	; 0x54
   1bf40:	mov	r3, #0
   1bf44:	cmp	r9, #0
   1bf48:	str	r3, [sp]
   1bf4c:	bne	1a3a8 <sf_icode_to_fcode+0x408>
   1bf50:	mov	r0, #0
   1bf54:	b	1a6fc <sf_icode_to_fcode+0x75c>
   1bf58:	mov	r3, #0
   1bf5c:	str	r3, [sp, #12]
   1bf60:	b	1b9e0 <sf_icode_to_fcode+0x1a40>
   1bf64:	ldr	sl, [r8, #84]	; 0x54
   1bf68:	mov	r3, #0
   1bf6c:	cmp	sl, #0
   1bf70:	str	r3, [sp, #12]
   1bf74:	bne	1aad8 <sf_icode_to_fcode+0xb38>
   1bf78:	mov	r0, #0
   1bf7c:	b	1ae28 <sf_icode_to_fcode+0xe88>
   1bf80:	mov	r0, r3
   1bf84:	b	1be28 <sf_icode_to_fcode+0x1e88>
   1bf88:	add	sp, sp, #36	; 0x24
   1bf8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf90:	ldr	r2, [r3, #4]
   1bf94:	mov	r1, #0
   1bf98:	cmp	r2, #0
   1bf9c:	add	r5, r1, r5
   1bfa0:	bne	1b238 <sf_icode_to_fcode+0x1298>
   1bfa4:	mov	r0, r2
   1bfa8:	b	1b258 <sf_icode_to_fcode+0x12b8>
   1bfac:	mov	r0, #0
   1bfb0:	b	1b5a8 <sf_icode_to_fcode+0x1608>
   1bfb4:	mov	r2, #0
   1bfb8:	str	r2, [sp, #12]
   1bfbc:	b	1b41c <sf_icode_to_fcode+0x147c>
   1bfc0:	mov	r3, #0
   1bfc4:	str	r3, [sp, #16]
   1bfc8:	ldr	r3, [sl, #84]	; 0x54
   1bfcc:	cmp	r3, #0
   1bfd0:	bne	1bb98 <sf_icode_to_fcode+0x1bf8>
   1bfd4:	mov	r3, #0
   1bfd8:	b	1bd14 <sf_icode_to_fcode+0x1d74>
   1bfdc:	mov	r5, #0
   1bfe0:	b	1b09c <sf_icode_to_fcode+0x10fc>
   1bfe4:	mov	r1, #0
   1bfe8:	b	1a6b0 <sf_icode_to_fcode+0x710>
   1bfec:	mov	r3, #0
   1bff0:	str	r3, [sp, #12]
   1bff4:	b	1a538 <sf_icode_to_fcode+0x598>
   1bff8:	mov	r3, #0
   1bffc:	str	r3, [sp]
   1c000:	ldr	r3, [sl, #84]	; 0x54
   1c004:	cmp	r3, #0
   1c008:	bne	1a1dc <sf_icode_to_fcode+0x23c>
   1c00c:	mov	r0, #0
   1c010:	b	1a34c <sf_icode_to_fcode+0x3ac>
   1c014:	mov	ip, #0
   1c018:	b	1b990 <sf_icode_to_fcode+0x19f0>
   1c01c:	mov	r2, #0
   1c020:	str	r2, [sp, #12]
   1c024:	b	1b804 <sf_icode_to_fcode+0x1864>
   1c028:	mov	r3, #0
   1c02c:	str	r3, [sp, #16]
   1c030:	ldr	r3, [sl, #84]	; 0x54
   1c034:	cmp	r3, #0
   1c038:	bne	1ac70 <sf_icode_to_fcode+0xcd0>
   1c03c:	mov	r3, #0
   1c040:	b	1addc <sf_icode_to_fcode+0xe3c>
   1c044:	mov	r0, #0
   1c048:	b	1aa7c <sf_icode_to_fcode+0xadc>
   1c04c:	mov	r3, #0
   1c050:	str	r3, [sp, #12]
   1c054:	b	1a904 <sf_icode_to_fcode+0x964>
   1c058:	mov	r1, r3
   1c05c:	b	1aea8 <sf_icode_to_fcode+0xf08>
   1c060:	mov	ip, #0
   1c064:	b	1bcc8 <sf_icode_to_fcode+0x1d28>
   1c068:	ldr	r1, [r3, #4]
   1c06c:	mov	r2, #0
   1c070:	cmp	r1, #0
   1c074:	add	r2, r2, r9
   1c078:	bne	1ada4 <sf_icode_to_fcode+0xe04>
   1c07c:	mov	ip, r1
   1c080:	b	1adc4 <sf_icode_to_fcode+0xe24>
   1c084:	ldr	r1, [r3, #4]
   1c088:	mov	ip, #0
   1c08c:	cmp	r1, #0
   1c090:	add	ip, ip, r2
   1c094:	bne	1a8c8 <sf_icode_to_fcode+0x928>
   1c098:	mov	r0, r1
   1c09c:	b	1a8e8 <sf_icode_to_fcode+0x948>
   1c0a0:	mov	r2, #0
   1c0a4:	b	1a824 <sf_icode_to_fcode+0x884>
   1c0a8:	mov	r1, #0
   1c0ac:	str	r1, [sp, #12]
   1c0b0:	ldr	r1, [r2, #84]	; 0x54
   1c0b4:	cmp	r1, #0
   1c0b8:	bne	1b154 <sf_icode_to_fcode+0x11b4>
   1c0bc:	mov	ip, #0
   1c0c0:	b	1b1dc <sf_icode_to_fcode+0x123c>
   1c0c4:	mov	lr, #0
   1c0c8:	b	1b3cc <sf_icode_to_fcode+0x142c>
   1c0cc:	ldr	r2, [r9, #4]
   1c0d0:	mov	r1, #0
   1c0d4:	cmp	r2, #0
   1c0d8:	add	r5, r1, r5
   1c0dc:	bne	1b064 <sf_icode_to_fcode+0x10c4>
   1c0e0:	mov	r0, r2
   1c0e4:	b	1b084 <sf_icode_to_fcode+0x10e4>
   1c0e8:	mov	r5, #0
   1c0ec:	b	1afc4 <sf_icode_to_fcode+0x1024>
   1c0f0:	ldr	r1, [r3, #84]	; 0x54
   1c0f4:	mov	r2, #0
   1c0f8:	cmp	r1, #0
   1c0fc:	bne	1a464 <sf_icode_to_fcode+0x4c4>
   1c100:	ldr	r1, [r3, #4]
   1c104:	mov	ip, #0
   1c108:	cmp	r1, #0
   1c10c:	add	ip, ip, r2
   1c110:	bne	1a4fc <sf_icode_to_fcode+0x55c>
   1c114:	mov	r0, r1
   1c118:	b	1a51c <sf_icode_to_fcode+0x57c>
   1c11c:	ldr	r1, [r3, #4]
   1c120:	mov	ip, #0
   1c124:	cmp	r1, #0
   1c128:	add	ip, ip, r2
   1c12c:	bne	1a194 <sf_icode_to_fcode+0x1f4>
   1c130:	mov	r0, r1
   1c134:	b	1a1b4 <sf_icode_to_fcode+0x214>
   1c138:	mov	r2, #0
   1c13c:	b	1a0f0 <sf_icode_to_fcode+0x150>
   1c140:	mov	r1, #0
   1c144:	b	1b55c <sf_icode_to_fcode+0x15bc>
   1c148:	mov	r1, #0
   1c14c:	str	r1, [sp, #16]
   1c150:	b	1b4c8 <sf_icode_to_fcode+0x1528>
   1c154:	mov	ip, #0
   1c158:	b	1b944 <sf_icode_to_fcode+0x19a4>
   1c15c:	mov	r1, #0
   1c160:	str	r1, [sp, #16]
   1c164:	b	1b8b0 <sf_icode_to_fcode+0x1910>
   1c168:	mov	lr, #0
   1c16c:	b	1b7b4 <sf_icode_to_fcode+0x1814>
   1c170:	mov	r1, #0
   1c174:	str	r1, [sp, #12]
   1c178:	b	1b720 <sf_icode_to_fcode+0x1780>
   1c17c:	mov	r1, #0
   1c180:	str	r1, [sp, #12]
   1c184:	b	1b338 <sf_icode_to_fcode+0x1398>
   1c188:	mov	r9, #0
   1c18c:	b	1ad04 <sf_icode_to_fcode+0xd64>
   1c190:	ldr	r1, [r3, #84]	; 0x54
   1c194:	mov	r2, #0
   1c198:	cmp	r1, #0
   1c19c:	bne	1a27c <sf_icode_to_fcode+0x2dc>
   1c1a0:	ldr	r1, [r3, #4]
   1c1a4:	mov	r0, #0
   1c1a8:	cmp	r1, #0
   1c1ac:	add	r0, r0, r2
   1c1b0:	bne	1a314 <sf_icode_to_fcode+0x374>
   1c1b4:	mov	ip, r1
   1c1b8:	b	1a334 <sf_icode_to_fcode+0x394>
   1c1bc:	ldr	r1, [r3, #4]
   1c1c0:	mov	r2, #0
   1c1c4:	cmp	r1, #0
   1c1c8:	add	r2, r2, sl
   1c1cc:	bne	1a678 <sf_icode_to_fcode+0x6d8>
   1c1d0:	mov	ip, r1
   1c1d4:	b	1a698 <sf_icode_to_fcode+0x6f8>
   1c1d8:	mov	sl, #0
   1c1dc:	b	1a5d8 <sf_icode_to_fcode+0x638>
   1c1e0:	mov	ip, #0
   1c1e4:	b	1bb3c <sf_icode_to_fcode+0x1b9c>
   1c1e8:	mov	r2, #0
   1c1ec:	str	r2, [sp, #16]
   1c1f0:	b	1baac <sf_icode_to_fcode+0x1b0c>
   1c1f4:	ldr	r2, [r3, #4]
   1c1f8:	mov	ip, #0
   1c1fc:	cmp	r2, #0
   1c200:	add	ip, ip, r9
   1c204:	bne	1ac28 <sf_icode_to_fcode+0xc88>
   1c208:	mov	r0, r2
   1c20c:	b	1ac48 <sf_icode_to_fcode+0xca8>
   1c210:	mov	r9, #0
   1c214:	b	1ab88 <sf_icode_to_fcode+0xbe8>
   1c218:	mov	r2, #0
   1c21c:	str	r2, [sp, #20]
   1c220:	b	1bc3c <sf_icode_to_fcode+0x1c9c>
   1c224:	ldr	r2, [r3, #4]
   1c228:	mov	r0, #0
   1c22c:	cmp	r2, #0
   1c230:	add	r0, r0, sl
   1c234:	bne	1aa44 <sf_icode_to_fcode+0xaa4>
   1c238:	mov	ip, r2
   1c23c:	b	1aa64 <sf_icode_to_fcode+0xac4>
   1c240:	mov	sl, #0
   1c244:	b	1a9a4 <sf_icode_to_fcode+0xa04>
   1c248:	mov	r1, r3
   1c24c:	b	1a730 <sf_icode_to_fcode+0x790>
   1c250:	mov	r0, r3
   1c254:	b	1bd94 <sf_icode_to_fcode+0x1df4>
   1c258:	mov	r1, r3
   1c25c:	b	1ae5c <sf_icode_to_fcode+0xebc>
   1c260:	mov	r1, r3
   1c264:	b	1a380 <sf_icode_to_fcode+0x3e0>
   1c268:	mov	r0, r3
   1c26c:	b	1a6e4 <sf_icode_to_fcode+0x744>
   1c270:	mov	r0, r2
   1c274:	b	1bd48 <sf_icode_to_fcode+0x1da8>
   1c278:	mov	r0, r2
   1c27c:	b	1b9c4 <sf_icode_to_fcode+0x1a24>
   1c280:	mov	r0, r2
   1c284:	b	1ae10 <sf_icode_to_fcode+0xe70>
   1c288:	mov	r1, r3
   1c28c:	b	1aab0 <sf_icode_to_fcode+0xb10>
   1c290:	mov	ip, r2
   1c294:	b	1b5dc <sf_icode_to_fcode+0x163c>
   1c298:	mov	lr, r1
   1c29c:	b	1b210 <sf_icode_to_fcode+0x1270>
   1c2a0:	mov	r2, r1
   1c2a4:	b	1bcfc <sf_icode_to_fcode+0x1d5c>
   1c2a8:	mov	ip, r1
   1c2ac:	b	1b400 <sf_icode_to_fcode+0x1460>
   1c2b0:	mov	lr, r0
   1c2b4:	b	1b590 <sf_icode_to_fcode+0x15f0>
   1c2b8:	mov	ip, r1
   1c2bc:	b	1b7e8 <sf_icode_to_fcode+0x1848>
   1c2c0:	mov	lr, r1
   1c2c4:	b	1b978 <sf_icode_to_fcode+0x19d8>
   1c2c8:	mov	r0, r2
   1c2cc:	b	1bb70 <sf_icode_to_fcode+0x1bd0>
   1c2d0:	mov	lr, r1
   1c2d4:	b	1ac00 <sf_icode_to_fcode+0xc60>
   1c2d8:	mov	r1, ip
   1c2dc:	b	1b31c <sf_icode_to_fcode+0x137c>
   1c2e0:	mov	r5, ip
   1c2e4:	b	1b3b4 <sf_icode_to_fcode+0x1414>
   1c2e8:	mov	lr, r1
   1c2ec:	b	1a258 <sf_icode_to_fcode+0x2b8>
   1c2f0:	mov	r9, ip
   1c2f4:	b	1a2ec <sf_icode_to_fcode+0x34c>
   1c2f8:	mov	r1, ip
   1c2fc:	b	1b12c <sf_icode_to_fcode+0x118c>
   1c300:	mov	r9, ip
   1c304:	b	1b1c4 <sf_icode_to_fcode+0x1224>
   1c308:	mov	r1, ip
   1c30c:	b	1b03c <sf_icode_to_fcode+0x109c>
   1c310:	mov	lr, r1
   1c314:	b	1aa1c <sf_icode_to_fcode+0xa7c>
   1c318:	mov	lr, r1
   1c31c:	b	1a440 <sf_icode_to_fcode+0x4a0>
   1c320:	mov	lr, r1
   1c324:	b	1afac <sf_icode_to_fcode+0x100c>
   1c328:	mov	sl, ip
   1c32c:	b	1a4d4 <sf_icode_to_fcode+0x534>
   1c330:	mov	r1, ip
   1c334:	b	1b894 <sf_icode_to_fcode+0x18f4>
   1c338:	mov	sl, ip
   1c33c:	b	1b92c <sf_icode_to_fcode+0x198c>
   1c340:	mov	r1, ip
   1c344:	b	1bb24 <sf_icode_to_fcode+0x1b84>
   1c348:	mov	lr, r1
   1c34c:	b	1a5c0 <sf_icode_to_fcode+0x620>
   1c350:	mov	lr, r1
   1c354:	b	1a650 <sf_icode_to_fcode+0x6b0>
   1c358:	mov	r1, ip
   1c35c:	b	1bc20 <sf_icode_to_fcode+0x1c80>
   1c360:	mov	lr, r1
   1c364:	b	1bcb0 <sf_icode_to_fcode+0x1d10>
   1c368:	mov	r1, ip
   1c36c:	b	1b4ac <sf_icode_to_fcode+0x150c>
   1c370:	mov	r5, ip
   1c374:	b	1b544 <sf_icode_to_fcode+0x15a4>
   1c378:	mov	r1, ip
   1c37c:	b	1b704 <sf_icode_to_fcode+0x1764>
   1c380:	mov	sl, ip
   1c384:	b	1b79c <sf_icode_to_fcode+0x17fc>
   1c388:	mov	lr, r1
   1c38c:	b	1ab70 <sf_icode_to_fcode+0xbd0>
   1c390:	mov	lr, r1
   1c394:	b	1a0d8 <sf_icode_to_fcode+0x138>
   1c398:	mov	r9, ip
   1c39c:	b	1a16c <sf_icode_to_fcode+0x1cc>
   1c3a0:	mov	r1, ip
   1c3a4:	b	1ba90 <sf_icode_to_fcode+0x1af0>
   1c3a8:	mov	lr, r1
   1c3ac:	b	1a98c <sf_icode_to_fcode+0x9ec>
   1c3b0:	mov	lr, r1
   1c3b4:	b	1acec <sf_icode_to_fcode+0xd4c>
   1c3b8:	mov	lr, r1
   1c3bc:	b	1ad7c <sf_icode_to_fcode+0xddc>
   1c3c0:	mov	lr, r1
   1c3c4:	b	1a80c <sf_icode_to_fcode+0x86c>
   1c3c8:	mov	sl, ip
   1c3cc:	b	1a8a0 <sf_icode_to_fcode+0x900>
   1c3d0:	ldr	r0, [pc, #4]	; 1c3dc <sf_icode_to_fcode+0x243c>
   1c3d4:	add	r0, pc, r0
   1c3d8:	bl	2370 <sf_bpf_error>
   1c3dc:	.word	0x00005e24

0001c3e0 <sfbpf_strcasecmp>:
   1c3e0:	ldr	r3, [pc, #52]	; 1c41c <sfbpf_strcasecmp+0x3c>
   1c3e4:	push	{lr}		; (str lr, [sp, #-4]!)
   1c3e8:	sub	r2, r0, #1
   1c3ec:	add	r3, pc, r3
   1c3f0:	b	1c3fc <sfbpf_strcasecmp+0x1c>
   1c3f4:	cmp	r0, #0
   1c3f8:	popeq	{pc}		; (ldreq pc, [sp], #4)
   1c3fc:	ldrb	r0, [r2, #1]!
   1c400:	ldrb	ip, [r1], #1
   1c404:	ldrb	lr, [r3, r0]
   1c408:	ldrb	ip, [r3, ip]
   1c40c:	cmp	lr, ip
   1c410:	beq	1c3f4 <sfbpf_strcasecmp+0x14>
   1c414:	sub	r0, lr, ip
   1c418:	pop	{pc}		; (ldr pc, [sp], #4)
   1c41c:	.word	0x00005e14

0001c420 <pcap_next_etherent>:
   1c420:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c424:	mov	r4, r0
   1c428:	ldr	r0, [pc, #544]	; 1c650 <pcap_next_etherent+0x230>
   1c42c:	mov	r2, #128	; 0x80
   1c430:	mov	r1, #0
   1c434:	add	r0, pc, r0
   1c438:	bl	e88 <memset@plt>
   1c43c:	bl	e34 <__ctype_b_loc@plt>
   1c440:	ldr	r7, [pc, #524]	; 1c654 <pcap_next_etherent+0x234>
   1c444:	add	r7, pc, r7
   1c448:	add	r6, r7, #5
   1c44c:	mov	r5, r0
   1c450:	mov	r0, r4
   1c454:	bl	f24 <getc@plt>
   1c458:	ldr	r2, [r5]
   1c45c:	lsl	r3, r0, #1
   1c460:	ldrh	r3, [r2, r3]
   1c464:	tst	r3, #8192	; 0x2000
   1c468:	bne	1c450 <pcap_next_etherent+0x30>
   1c46c:	cmp	r0, #10
   1c470:	beq	1c450 <pcap_next_etherent+0x30>
   1c474:	tst	r3, #4096	; 0x1000
   1c478:	subne	r8, r7, #1
   1c47c:	beq	1c4ec <pcap_next_etherent+0xcc>
   1c480:	tst	r3, #2048	; 0x800
   1c484:	subne	r9, r0, #48	; 0x30
   1c488:	bne	1c498 <pcap_next_etherent+0x78>
   1c48c:	tst	r3, #512	; 0x200
   1c490:	subne	r9, r0, #87	; 0x57
   1c494:	subeq	r9, r0, #55	; 0x37
   1c498:	mov	r0, r4
   1c49c:	bl	f24 <getc@plt>
   1c4a0:	ldr	r2, [r5]
   1c4a4:	lsl	r3, r0, #1
   1c4a8:	ldrh	r3, [r2, r3]
   1c4ac:	tst	r3, #4096	; 0x1000
   1c4b0:	bne	1c510 <pcap_next_etherent+0xf0>
   1c4b4:	cmp	r0, #58	; 0x3a
   1c4b8:	strb	r9, [r8, #1]!
   1c4bc:	bne	1c544 <pcap_next_etherent+0x124>
   1c4c0:	mov	r0, r4
   1c4c4:	bl	f24 <getc@plt>
   1c4c8:	cmp	r8, r6
   1c4cc:	beq	1c544 <pcap_next_etherent+0x124>
   1c4d0:	ldr	r2, [r5]
   1c4d4:	lsl	r3, r0, #1
   1c4d8:	ldrh	r3, [r2, r3]
   1c4dc:	tst	r3, #2048	; 0x800
   1c4e0:	subne	r9, r0, #48	; 0x30
   1c4e4:	beq	1c48c <pcap_next_etherent+0x6c>
   1c4e8:	b	1c498 <pcap_next_etherent+0x78>
   1c4ec:	mov	r0, r4
   1c4f0:	bl	f24 <getc@plt>
   1c4f4:	cmp	r0, #10
   1c4f8:	cmnne	r0, #1
   1c4fc:	bne	1c4ec <pcap_next_etherent+0xcc>
   1c500:	cmn	r0, #1
   1c504:	bne	1c450 <pcap_next_etherent+0x30>
   1c508:	mov	r0, #0
   1c50c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c510:	tst	r3, #2048	; 0x800
   1c514:	lsl	r9, r9, #4
   1c518:	subne	r3, r0, #48	; 0x30
   1c51c:	bne	1c52c <pcap_next_etherent+0x10c>
   1c520:	tst	r3, #512	; 0x200
   1c524:	subne	r3, r0, #87	; 0x57
   1c528:	subeq	r3, r0, #55	; 0x37
   1c52c:	mov	r0, r4
   1c530:	orr	r9, r9, r3
   1c534:	bl	f24 <getc@plt>
   1c538:	strb	r9, [r8, #1]!
   1c53c:	cmp	r0, #58	; 0x3a
   1c540:	beq	1c4c0 <pcap_next_etherent+0xa0>
   1c544:	cmn	r0, #1
   1c548:	beq	1c508 <pcap_next_etherent+0xe8>
   1c54c:	ldr	r3, [r5]
   1c550:	lsl	r0, r0, #1
   1c554:	ldrh	r3, [r3, r0]
   1c558:	tst	r3, #8192	; 0x2000
   1c55c:	bne	1c588 <pcap_next_etherent+0x168>
   1c560:	mov	r0, r4
   1c564:	bl	f24 <getc@plt>
   1c568:	cmp	r0, #10
   1c56c:	cmnne	r0, #1
   1c570:	bne	1c560 <pcap_next_etherent+0x140>
   1c574:	cmn	r0, #1
   1c578:	bne	1c450 <pcap_next_etherent+0x30>
   1c57c:	b	1c508 <pcap_next_etherent+0xe8>
   1c580:	cmp	r0, #10
   1c584:	beq	1c450 <pcap_next_etherent+0x30>
   1c588:	mov	r0, r4
   1c58c:	bl	f24 <getc@plt>
   1c590:	ldr	r2, [r5]
   1c594:	lsl	r3, r0, #1
   1c598:	ldrh	r3, [r2, r3]
   1c59c:	tst	r3, #8192	; 0x2000
   1c5a0:	bne	1c580 <pcap_next_etherent+0x160>
   1c5a4:	cmp	r0, #10
   1c5a8:	beq	1c450 <pcap_next_etherent+0x30>
   1c5ac:	cmp	r0, #35	; 0x23
   1c5b0:	beq	1c630 <pcap_next_etherent+0x210>
   1c5b4:	ldr	r6, [pc, #156]	; 1c658 <pcap_next_etherent+0x238>
   1c5b8:	ldr	r7, [pc, #156]	; 1c65c <pcap_next_etherent+0x23c>
   1c5bc:	add	r6, pc, r6
   1c5c0:	add	r7, pc, r7
   1c5c4:	add	r6, r6, #6
   1c5c8:	add	r7, r7, #127	; 0x7f
   1c5cc:	b	1c5e0 <pcap_next_etherent+0x1c0>
   1c5d0:	cmn	r0, #1
   1c5d4:	beq	1c648 <pcap_next_etherent+0x228>
   1c5d8:	cmp	r6, r7
   1c5dc:	beq	1c600 <pcap_next_etherent+0x1e0>
   1c5e0:	strb	r0, [r6], #1
   1c5e4:	mov	r0, r4
   1c5e8:	bl	f24 <getc@plt>
   1c5ec:	ldr	r2, [r5]
   1c5f0:	lsl	r3, r0, #1
   1c5f4:	ldrh	r3, [r2, r3]
   1c5f8:	ands	r3, r3, #8192	; 0x2000
   1c5fc:	beq	1c5d0 <pcap_next_etherent+0x1b0>
   1c600:	mov	r3, #0
   1c604:	cmp	r0, #10
   1c608:	strb	r3, [r6]
   1c60c:	beq	1c624 <pcap_next_etherent+0x204>
   1c610:	mov	r0, r4
   1c614:	bl	f24 <getc@plt>
   1c618:	cmp	r0, #10
   1c61c:	cmnne	r0, #1
   1c620:	bne	1c610 <pcap_next_etherent+0x1f0>
   1c624:	ldr	r0, [pc, #52]	; 1c660 <pcap_next_etherent+0x240>
   1c628:	add	r0, pc, r0
   1c62c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c630:	mov	r0, r4
   1c634:	bl	f24 <getc@plt>
   1c638:	cmp	r0, #10
   1c63c:	cmnne	r0, #1
   1c640:	bne	1c630 <pcap_next_etherent+0x210>
   1c644:	b	1c500 <pcap_next_etherent+0xe0>
   1c648:	strb	r3, [r6]
   1c64c:	b	1c610 <pcap_next_etherent+0x1f0>
   1c650:	.word	0x00022688
   1c654:	.word	0x00022678
   1c658:	.word	0x00022500
   1c65c:	.word	0x000224fc
   1c660:	.word	0x00022494

0001c664 <sfbpf_parse>:
   1c664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c668:	sub	sp, sp, #3664	; 0xe50
   1c66c:	ldr	r3, [pc, #4056]	; 1d64c <sfbpf_parse+0xfe8>
   1c670:	sub	sp, sp, #12
   1c674:	add	r3, pc, r3
   1c678:	mov	r1, r3
   1c67c:	str	r3, [sp, #36]	; 0x24
   1c680:	ldr	r3, [pc, #4040]	; 1d650 <sfbpf_parse+0xfec>
   1c684:	ldr	r2, [pc, #4040]	; 1d654 <sfbpf_parse+0xff0>
   1c688:	mov	r4, #0
   1c68c:	ldr	r3, [r1, r3]
   1c690:	add	r0, sp, #72	; 0x48
   1c694:	mov	lr, r3
   1c698:	str	r3, [sp, #40]	; 0x28
   1c69c:	str	r4, [lr]
   1c6a0:	str	r0, [sp, #32]
   1c6a4:	ldr	r3, [pc, #4012]	; 1d658 <sfbpf_parse+0xff4>
   1c6a8:	ldr	r2, [r1, r2]
   1c6ac:	add	r3, pc, r3
   1c6b0:	mov	lr, r2
   1c6b4:	str	r2, [sp, #12]
   1c6b8:	ldr	r2, [pc, #3996]	; 1d65c <sfbpf_parse+0xff8>
   1c6bc:	sub	r3, r3, #3888	; 0xf30
   1c6c0:	sub	r3, r3, #12
   1c6c4:	add	r2, pc, r2
   1c6c8:	str	r3, [sp, #24]
   1c6cc:	sub	r3, r2, #3808	; 0xee0
   1c6d0:	mov	ip, r0
   1c6d4:	str	r3, [sp, #28]
   1c6d8:	ldr	r3, [pc, #3968]	; 1d660 <sfbpf_parse+0xffc>
   1c6dc:	mov	r6, r4
   1c6e0:	mov	fp, ip
   1c6e4:	mov	sl, #200	; 0xc8
   1c6e8:	mov	r7, ip
   1c6ec:	mov	r0, r1
   1c6f0:	add	r8, sp, #472	; 0x1d8
   1c6f4:	mvn	r1, #1
   1c6f8:	add	r3, pc, r3
   1c6fc:	str	r1, [lr]
   1c700:	strh	r4, [ip]
   1c704:	str	r8, [sp, #16]
   1c708:	str	r3, [sp, #20]
   1c70c:	ldr	r2, [sp, #20]
   1c710:	lsl	r3, r6, #1
   1c714:	ldrsh	r4, [r2, r3]
   1c718:	cmn	r4, #198	; 0xc6
   1c71c:	beq	1c780 <sfbpf_parse+0x11c>
   1c720:	ldr	r3, [sp, #12]
   1c724:	ldr	r0, [r3]
   1c728:	cmn	r0, #2
   1c72c:	beq	1cd18 <sfbpf_parse+0x6b4>
   1c730:	cmp	r0, #0
   1c734:	ble	1ccb8 <sfbpf_parse+0x654>
   1c738:	ldr	r3, [pc, #3876]	; 1d664 <sfbpf_parse+0x1000>
   1c73c:	cmp	r0, r3
   1c740:	movgt	r2, #2
   1c744:	ldrle	r3, [pc, #3868]	; 1d668 <sfbpf_parse+0x1004>
   1c748:	addle	r3, pc, r3
   1c74c:	addle	r0, r3, r0
   1c750:	ldrble	r2, [r0, #548]	; 0x224
   1c754:	ldr	r1, [pc, #3856]	; 1d66c <sfbpf_parse+0x1008>
   1c758:	add	r3, r2, r4
   1c75c:	cmp	r3, r1
   1c760:	bhi	1c780 <sfbpf_parse+0x11c>
   1c764:	ldr	r1, [pc, #3844]	; 1d670 <sfbpf_parse+0x100c>
   1c768:	lsl	r3, r3, #1
   1c76c:	add	r1, pc, r1
   1c770:	add	r0, r1, #916	; 0x394
   1c774:	ldrsh	r0, [r0, r3]
   1c778:	cmp	r2, r0
   1c77c:	beq	1ccd4 <sfbpf_parse+0x670>
   1c780:	ldr	r4, [pc, #3820]	; 1d674 <sfbpf_parse+0x1010>
   1c784:	add	r4, pc, r4
   1c788:	add	r4, r4, r6
   1c78c:	ldrb	r4, [r4, #3596]	; 0xe0c
   1c790:	cmp	r4, #0
   1c794:	beq	1dd7c <sfbpf_parse+0x1718>
   1c798:	ldr	r3, [pc, #3800]	; 1d678 <sfbpf_parse+0x1014>
   1c79c:	add	r9, sp, #56	; 0x38
   1c7a0:	add	r3, pc, r3
   1c7a4:	add	r3, r3, r4
   1c7a8:	sub	ip, r4, #2
   1c7ac:	ldrb	r5, [r3, #3872]	; 0xf20
   1c7b0:	rsb	r3, r5, #1
   1c7b4:	add	r3, r8, r3, lsl #4
   1c7b8:	ldm	r3, {r0, r1, r2, r3}
   1c7bc:	stm	r9, {r0, r1, r2, r3}
   1c7c0:	str	r1, [sp, #8]
   1c7c4:	str	r2, [sp, #4]
   1c7c8:	str	r3, [sp]
   1c7cc:	cmp	ip, #200	; 0xc8
   1c7d0:	addls	pc, pc, ip, lsl #2
   1c7d4:	b	1cb38 <sfbpf_parse+0x4d4>
   1c7d8:	b	1cd5c <sfbpf_parse+0x6f8>
   1c7dc:	b	1cb38 <sfbpf_parse+0x4d4>
   1c7e0:	b	1cd68 <sfbpf_parse+0x704>
   1c7e4:	b	1cb38 <sfbpf_parse+0x4d4>
   1c7e8:	b	1cd7c <sfbpf_parse+0x718>
   1c7ec:	b	1cda4 <sfbpf_parse+0x740>
   1c7f0:	b	1cdcc <sfbpf_parse+0x768>
   1c7f4:	b	1cdf4 <sfbpf_parse+0x790>
   1c7f8:	b	1ce1c <sfbpf_parse+0x7b8>
   1c7fc:	b	1ce38 <sfbpf_parse+0x7d4>
   1c800:	b	1cb38 <sfbpf_parse+0x4d4>
   1c804:	b	1ce54 <sfbpf_parse+0x7f0>
   1c808:	b	1ce74 <sfbpf_parse+0x810>
   1c80c:	b	1ce90 <sfbpf_parse+0x82c>
   1c810:	b	1ceac <sfbpf_parse+0x848>
   1c814:	b	1ced0 <sfbpf_parse+0x86c>
   1c818:	b	1cafc <sfbpf_parse+0x498>
   1c81c:	b	1cef4 <sfbpf_parse+0x890>
   1c820:	b	1cf18 <sfbpf_parse+0x8b4>
   1c824:	b	1cf3c <sfbpf_parse+0x8d8>
   1c828:	b	1cf64 <sfbpf_parse+0x900>
   1c82c:	b	1cf8c <sfbpf_parse+0x928>
   1c830:	b	1cfb0 <sfbpf_parse+0x94c>
   1c834:	b	1cfcc <sfbpf_parse+0x968>
   1c838:	b	1cb38 <sfbpf_parse+0x4d4>
   1c83c:	b	1cfe8 <sfbpf_parse+0x984>
   1c840:	b	1d010 <sfbpf_parse+0x9ac>
   1c844:	b	1d038 <sfbpf_parse+0x9d4>
   1c848:	b	1cb38 <sfbpf_parse+0x4d4>
   1c84c:	b	1cb38 <sfbpf_parse+0x4d4>
   1c850:	b	1d058 <sfbpf_parse+0x9f4>
   1c854:	b	1d07c <sfbpf_parse+0xa18>
   1c858:	b	1d098 <sfbpf_parse+0xa34>
   1c85c:	b	1d0b4 <sfbpf_parse+0xa50>
   1c860:	b	1d0d0 <sfbpf_parse+0xa6c>
   1c864:	b	1d0ec <sfbpf_parse+0xa88>
   1c868:	b	1d108 <sfbpf_parse+0xaa4>
   1c86c:	b	1d124 <sfbpf_parse+0xac0>
   1c870:	b	1d13c <sfbpf_parse+0xad8>
   1c874:	b	1d150 <sfbpf_parse+0xaec>
   1c878:	b	1d170 <sfbpf_parse+0xb0c>
   1c87c:	b	1d19c <sfbpf_parse+0xb38>
   1c880:	b	1d1c8 <sfbpf_parse+0xb64>
   1c884:	b	1d1e4 <sfbpf_parse+0xb80>
   1c888:	b	1d204 <sfbpf_parse+0xba0>
   1c88c:	b	1d224 <sfbpf_parse+0xbc0>
   1c890:	b	1d240 <sfbpf_parse+0xbdc>
   1c894:	b	1d260 <sfbpf_parse+0xbfc>
   1c898:	b	1cb38 <sfbpf_parse+0x4d4>
   1c89c:	b	1d27c <sfbpf_parse+0xc18>
   1c8a0:	b	1d288 <sfbpf_parse+0xc24>
   1c8a4:	b	1d294 <sfbpf_parse+0xc30>
   1c8a8:	b	1d2a0 <sfbpf_parse+0xc3c>
   1c8ac:	b	1d2ac <sfbpf_parse+0xc48>
   1c8b0:	b	1d2b8 <sfbpf_parse+0xc54>
   1c8b4:	b	1d2c4 <sfbpf_parse+0xc60>
   1c8b8:	b	1d2d0 <sfbpf_parse+0xc6c>
   1c8bc:	b	1d2dc <sfbpf_parse+0xc78>
   1c8c0:	b	1d2e8 <sfbpf_parse+0xc84>
   1c8c4:	b	1d2f4 <sfbpf_parse+0xc90>
   1c8c8:	b	1d300 <sfbpf_parse+0xc9c>
   1c8cc:	b	1d30c <sfbpf_parse+0xca8>
   1c8d0:	b	1d318 <sfbpf_parse+0xcb4>
   1c8d4:	b	1d324 <sfbpf_parse+0xcc0>
   1c8d8:	b	1d330 <sfbpf_parse+0xccc>
   1c8dc:	b	1d33c <sfbpf_parse+0xcd8>
   1c8e0:	b	1d348 <sfbpf_parse+0xce4>
   1c8e4:	b	1d354 <sfbpf_parse+0xcf0>
   1c8e8:	b	1d360 <sfbpf_parse+0xcfc>
   1c8ec:	b	1d36c <sfbpf_parse+0xd08>
   1c8f0:	b	1d378 <sfbpf_parse+0xd14>
   1c8f4:	b	1d384 <sfbpf_parse+0xd20>
   1c8f8:	b	1d390 <sfbpf_parse+0xd2c>
   1c8fc:	b	1d39c <sfbpf_parse+0xd38>
   1c900:	b	1d3a8 <sfbpf_parse+0xd44>
   1c904:	b	1d3b4 <sfbpf_parse+0xd50>
   1c908:	b	1d3c0 <sfbpf_parse+0xd5c>
   1c90c:	b	1d3cc <sfbpf_parse+0xd68>
   1c910:	b	1d3d8 <sfbpf_parse+0xd74>
   1c914:	b	1d3e4 <sfbpf_parse+0xd80>
   1c918:	b	1d3f0 <sfbpf_parse+0xd8c>
   1c91c:	b	1d3fc <sfbpf_parse+0xd98>
   1c920:	b	1d408 <sfbpf_parse+0xda4>
   1c924:	b	1d414 <sfbpf_parse+0xdb0>
   1c928:	b	1d420 <sfbpf_parse+0xdbc>
   1c92c:	b	1d42c <sfbpf_parse+0xdc8>
   1c930:	b	1d438 <sfbpf_parse+0xdd4>
   1c934:	b	1d444 <sfbpf_parse+0xde0>
   1c938:	b	1d450 <sfbpf_parse+0xdec>
   1c93c:	b	1d45c <sfbpf_parse+0xdf8>
   1c940:	b	1d468 <sfbpf_parse+0xe04>
   1c944:	b	1d474 <sfbpf_parse+0xe10>
   1c948:	b	1d480 <sfbpf_parse+0xe1c>
   1c94c:	b	1d48c <sfbpf_parse+0xe28>
   1c950:	b	1d498 <sfbpf_parse+0xe34>
   1c954:	b	1d4a4 <sfbpf_parse+0xe40>
   1c958:	b	1d4b0 <sfbpf_parse+0xe4c>
   1c95c:	b	1d4bc <sfbpf_parse+0xe58>
   1c960:	b	1d4c8 <sfbpf_parse+0xe64>
   1c964:	b	1d4d4 <sfbpf_parse+0xe70>
   1c968:	b	1d4e0 <sfbpf_parse+0xe7c>
   1c96c:	b	1d4ec <sfbpf_parse+0xe88>
   1c970:	b	1d4f8 <sfbpf_parse+0xe94>
   1c974:	b	1d504 <sfbpf_parse+0xea0>
   1c978:	b	1d514 <sfbpf_parse+0xeb0>
   1c97c:	b	1d524 <sfbpf_parse+0xec0>
   1c980:	b	1d534 <sfbpf_parse+0xed0>
   1c984:	b	1d544 <sfbpf_parse+0xee0>
   1c988:	b	1d55c <sfbpf_parse+0xef8>
   1c98c:	b	1d56c <sfbpf_parse+0xf08>
   1c990:	b	1d57c <sfbpf_parse+0xf18>
   1c994:	b	1d58c <sfbpf_parse+0xf28>
   1c998:	b	1d59c <sfbpf_parse+0xf38>
   1c99c:	b	1d5ac <sfbpf_parse+0xf48>
   1c9a0:	b	1d5bc <sfbpf_parse+0xf58>
   1c9a4:	b	1d5c8 <sfbpf_parse+0xf64>
   1c9a8:	b	1d5d4 <sfbpf_parse+0xf70>
   1c9ac:	b	1d5e0 <sfbpf_parse+0xf7c>
   1c9b0:	b	1d5ec <sfbpf_parse+0xf88>
   1c9b4:	b	1d5fc <sfbpf_parse+0xf98>
   1c9b8:	b	1d60c <sfbpf_parse+0xfa8>
   1c9bc:	b	1d61c <sfbpf_parse+0xfb8>
   1c9c0:	b	1d62c <sfbpf_parse+0xfc8>
   1c9c4:	b	1d63c <sfbpf_parse+0xfd8>
   1c9c8:	b	1d738 <sfbpf_parse+0x10d4>
   1c9cc:	b	1d754 <sfbpf_parse+0x10f0>
   1c9d0:	b	1d768 <sfbpf_parse+0x1104>
   1c9d4:	b	1d77c <sfbpf_parse+0x1118>
   1c9d8:	b	1cb38 <sfbpf_parse+0x4d4>
   1c9dc:	b	1d78c <sfbpf_parse+0x1128>
   1c9e0:	b	1cb38 <sfbpf_parse+0x4d4>
   1c9e4:	b	1d7f4 <sfbpf_parse+0x1190>
   1c9e8:	b	1dc68 <sfbpf_parse+0x1604>
   1c9ec:	b	1cb38 <sfbpf_parse+0x4d4>
   1c9f0:	b	1dc00 <sfbpf_parse+0x159c>
   1c9f4:	b	1dc44 <sfbpf_parse+0x15e0>
   1c9f8:	b	1dc50 <sfbpf_parse+0x15ec>
   1c9fc:	b	1dc5c <sfbpf_parse+0x15f8>
   1ca00:	b	1db90 <sfbpf_parse+0x152c>
   1ca04:	b	1db9c <sfbpf_parse+0x1538>
   1ca08:	b	1dba8 <sfbpf_parse+0x1544>
   1ca0c:	b	1dbb4 <sfbpf_parse+0x1550>
   1ca10:	b	1dbc0 <sfbpf_parse+0x155c>
   1ca14:	b	1dbcc <sfbpf_parse+0x1568>
   1ca18:	b	1dbd8 <sfbpf_parse+0x1574>
   1ca1c:	b	1cb38 <sfbpf_parse+0x4d4>
   1ca20:	b	1dbe8 <sfbpf_parse+0x1584>
   1ca24:	b	1da60 <sfbpf_parse+0x13fc>
   1ca28:	b	1da78 <sfbpf_parse+0x1414>
   1ca2c:	b	1da90 <sfbpf_parse+0x142c>
   1ca30:	b	1daa8 <sfbpf_parse+0x1444>
   1ca34:	b	1dac0 <sfbpf_parse+0x145c>
   1ca38:	b	1dad8 <sfbpf_parse+0x1474>
   1ca3c:	b	1daf0 <sfbpf_parse+0x148c>
   1ca40:	b	1db08 <sfbpf_parse+0x14a4>
   1ca44:	b	1db20 <sfbpf_parse+0x14bc>
   1ca48:	b	1db38 <sfbpf_parse+0x14d4>
   1ca4c:	b	1db48 <sfbpf_parse+0x14e4>
   1ca50:	b	1db54 <sfbpf_parse+0x14f0>
   1ca54:	b	1db60 <sfbpf_parse+0x14fc>
   1ca58:	b	1db6c <sfbpf_parse+0x1508>
   1ca5c:	b	1db78 <sfbpf_parse+0x1514>
   1ca60:	b	1db84 <sfbpf_parse+0x1520>
   1ca64:	b	1d81c <sfbpf_parse+0x11b8>
   1ca68:	b	1cb38 <sfbpf_parse+0x4d4>
   1ca6c:	b	1d828 <sfbpf_parse+0x11c4>
   1ca70:	b	1d834 <sfbpf_parse+0x11d0>
   1ca74:	b	1d840 <sfbpf_parse+0x11dc>
   1ca78:	b	1d84c <sfbpf_parse+0x11e8>
   1ca7c:	b	1d858 <sfbpf_parse+0x11f4>
   1ca80:	b	1d864 <sfbpf_parse+0x1200>
   1ca84:	b	1d870 <sfbpf_parse+0x120c>
   1ca88:	b	1d87c <sfbpf_parse+0x1218>
   1ca8c:	b	1d888 <sfbpf_parse+0x1224>
   1ca90:	b	1d894 <sfbpf_parse+0x1230>
   1ca94:	b	1d8a0 <sfbpf_parse+0x123c>
   1ca98:	b	1d8ac <sfbpf_parse+0x1248>
   1ca9c:	b	1d8b8 <sfbpf_parse+0x1254>
   1caa0:	b	1d8c4 <sfbpf_parse+0x1260>
   1caa4:	b	1d8d0 <sfbpf_parse+0x126c>
   1caa8:	b	1cb38 <sfbpf_parse+0x4d4>
   1caac:	b	1d8dc <sfbpf_parse+0x1278>
   1cab0:	b	1d8f8 <sfbpf_parse+0x1294>
   1cab4:	b	1d914 <sfbpf_parse+0x12b0>
   1cab8:	b	1d930 <sfbpf_parse+0x12cc>
   1cabc:	b	1cb38 <sfbpf_parse+0x4d4>
   1cac0:	b	1d960 <sfbpf_parse+0x12fc>
   1cac4:	b	1d988 <sfbpf_parse+0x1324>
   1cac8:	b	1d994 <sfbpf_parse+0x1330>
   1cacc:	b	1d9a0 <sfbpf_parse+0x133c>
   1cad0:	b	1d9ac <sfbpf_parse+0x1348>
   1cad4:	b	1d9b8 <sfbpf_parse+0x1354>
   1cad8:	b	1d9c4 <sfbpf_parse+0x1360>
   1cadc:	b	1d9d0 <sfbpf_parse+0x136c>
   1cae0:	b	1cb38 <sfbpf_parse+0x4d4>
   1cae4:	b	1d9dc <sfbpf_parse+0x1378>
   1cae8:	b	1d9f8 <sfbpf_parse+0x1394>
   1caec:	b	1da14 <sfbpf_parse+0x13b0>
   1caf0:	b	1da30 <sfbpf_parse+0x13cc>
   1caf4:	b	1cb38 <sfbpf_parse+0x4d4>
   1caf8:	b	1cd34 <sfbpf_parse+0x6d0>
   1cafc:	ldr	r2, [r8, #-16]
   1cb00:	str	r2, [sp, #56]	; 0x38
   1cb04:	uxtb	r3, r2
   1cb08:	cmp	r3, #3
   1cb0c:	beq	1de80 <sfbpf_parse+0x181c>
   1cb10:	cmp	r3, #7
   1cb14:	beq	1de74 <sfbpf_parse+0x1810>
   1cb18:	cmp	r3, #5
   1cb1c:	beq	1de98 <sfbpf_parse+0x1834>
   1cb20:	cmp	r3, #6
   1cb24:	beq	1de8c <sfbpf_parse+0x1828>
   1cb28:	mov	r1, #0
   1cb2c:	ldr	r0, [r8]
   1cb30:	bl	c7a4 <sf_gen_ncode>
   1cb34:	str	r0, [sp]
   1cb38:	ldr	r3, [sp, #8]
   1cb3c:	ldr	lr, [pc, #2872]	; 1d67c <sfbpf_parse+0x1018>
   1cb40:	str	r3, [sp, #60]	; 0x3c
   1cb44:	ldr	r3, [sp, #4]
   1cb48:	add	lr, pc, lr
   1cb4c:	str	r3, [sp, #64]	; 0x40
   1cb50:	add	r4, lr, r4
   1cb54:	ldr	r3, [sp]
   1cb58:	sxth	ip, r5
   1cb5c:	ldrb	r4, [r4, #4080]	; 0xff0
   1cb60:	str	r3, [sp, #68]	; 0x44
   1cb64:	ldm	r9, {r0, r1, r2, r3}
   1cb68:	sub	r8, r8, ip, lsl #4
   1cb6c:	add	r8, r8, #16
   1cb70:	sub	r4, r4, #126	; 0x7e
   1cb74:	stm	r8, {r0, r1, r2, r3}
   1cb78:	sub	ip, fp, ip, lsl #1
   1cb7c:	ldr	r3, [sp, #24]
   1cb80:	lsl	r4, r4, #1
   1cb84:	ldrsh	r2, [ip]
   1cb88:	ldrsh	r3, [r3, r4]
   1cb8c:	ldr	r1, [pc, #2776]	; 1d66c <sfbpf_parse+0x1008>
   1cb90:	add	r3, r3, r2
   1cb94:	cmp	r3, r1
   1cb98:	bhi	1cbb0 <sfbpf_parse+0x54c>
   1cb9c:	lsl	r3, r3, #1
   1cba0:	add	r1, lr, #916	; 0x394
   1cba4:	ldrsh	r1, [r1, r3]
   1cba8:	cmp	r1, r2
   1cbac:	beq	1ccc8 <sfbpf_parse+0x664>
   1cbb0:	ldr	r3, [sp, #28]
   1cbb4:	ldrsh	r6, [r3, r4]
   1cbb8:	sub	r3, sl, #-2147483647	; 0x80000001
   1cbbc:	add	fp, ip, #2
   1cbc0:	lsl	r3, r3, #1
   1cbc4:	add	r2, r7, r3
   1cbc8:	cmp	fp, r2
   1cbcc:	strh	r6, [ip, #2]
   1cbd0:	bcc	1cc84 <sfbpf_parse+0x620>
   1cbd4:	sub	r8, fp, r7
   1cbd8:	ldr	r2, [pc, #2720]	; 1d680 <sfbpf_parse+0x101c>
   1cbdc:	asr	r8, r8, #1
   1cbe0:	cmp	sl, r2
   1cbe4:	add	r8, r8, #1
   1cbe8:	bhi	1dd30 <sfbpf_parse+0x16cc>
   1cbec:	ldr	sl, [pc, #2704]	; 1d684 <sfbpf_parse+0x1020>
   1cbf0:	add	r3, r3, #2
   1cbf4:	cmp	r3, sl
   1cbf8:	movcc	sl, r3
   1cbfc:	add	r0, sl, sl, lsl #3
   1cc00:	lsl	r0, r0, #1
   1cc04:	add	r0, r0, #15
   1cc08:	bl	e1c <malloc@plt>
   1cc0c:	subs	r5, r0, #0
   1cc10:	beq	1dd30 <sfbpf_parse+0x16cc>
   1cc14:	lsl	r4, sl, #1
   1cc18:	add	r9, r4, #15
   1cc1c:	lsl	fp, r8, #1
   1cc20:	bic	r9, r9, #15
   1cc24:	mov	r2, fp
   1cc28:	mov	r1, r7
   1cc2c:	lsl	r8, r8, #4
   1cc30:	add	r9, r5, r9
   1cc34:	bl	dc8 <memcpy@plt>
   1cc38:	ldr	r1, [sp, #16]
   1cc3c:	mov	r0, r9
   1cc40:	mov	r2, r8
   1cc44:	bl	dc8 <memcpy@plt>
   1cc48:	ldr	r3, [sp, #32]
   1cc4c:	cmp	r7, r3
   1cc50:	beq	1cc5c <sfbpf_parse+0x5f8>
   1cc54:	mov	r0, r7
   1cc58:	bl	da4 <free@plt>
   1cc5c:	sub	fp, fp, #2
   1cc60:	sub	r4, r4, #2
   1cc64:	add	fp, r5, fp
   1cc68:	add	r4, r5, r4
   1cc6c:	sub	r8, r8, #16
   1cc70:	cmp	fp, r4
   1cc74:	add	r8, r9, r8
   1cc78:	bcs	1cd28 <sfbpf_parse+0x6c4>
   1cc7c:	mov	r7, r5
   1cc80:	str	r9, [sp, #16]
   1cc84:	cmp	r6, #3
   1cc88:	bne	1c70c <sfbpf_parse+0xa8>
   1cc8c:	mov	r3, r7
   1cc90:	mov	r4, #0
   1cc94:	ldr	r2, [sp, #32]
   1cc98:	cmp	r3, r2
   1cc9c:	beq	1cca8 <sfbpf_parse+0x644>
   1cca0:	mov	r0, r3
   1cca4:	bl	da4 <free@plt>
   1cca8:	mov	r0, r4
   1ccac:	add	sp, sp, #3664	; 0xe50
   1ccb0:	add	sp, sp, #12
   1ccb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccb8:	ldr	r3, [sp, #12]
   1ccbc:	mov	r2, #0
   1ccc0:	str	r2, [r3]
   1ccc4:	b	1c754 <sfbpf_parse+0xf0>
   1ccc8:	add	lr, lr, #2256	; 0x8d0
   1cccc:	ldrsh	r6, [lr, r3]
   1ccd0:	b	1cbb8 <sfbpf_parse+0x554>
   1ccd4:	add	r1, r1, #2256	; 0x8d0
   1ccd8:	ldrsh	r6, [r1, r3]
   1ccdc:	cmp	r6, #0
   1cce0:	rsble	r4, r6, #0
   1cce4:	ble	1c798 <sfbpf_parse+0x134>
   1cce8:	ldr	r1, [sp, #12]
   1ccec:	mvn	r2, #1
   1ccf0:	ldr	r3, [pc, #2448]	; 1d688 <sfbpf_parse+0x1024>
   1ccf4:	str	r2, [r1]
   1ccf8:	ldr	r2, [sp, #36]	; 0x24
   1ccfc:	add	lr, r8, #16
   1cd00:	mov	ip, fp
   1cd04:	ldr	r3, [r2, r3]
   1cd08:	mov	r8, lr
   1cd0c:	ldm	r3, {r0, r1, r2, r3}
   1cd10:	stm	lr, {r0, r1, r2, r3}
   1cd14:	b	1cbb8 <sfbpf_parse+0x554>
   1cd18:	bl	1e394 <sfbpf_lex>
   1cd1c:	ldr	r3, [sp, #12]
   1cd20:	str	r0, [r3]
   1cd24:	b	1c730 <sfbpf_parse+0xcc>
   1cd28:	mov	r3, r5
   1cd2c:	mov	r4, #1
   1cd30:	b	1cc94 <sfbpf_parse+0x630>
   1cd34:	ldr	r3, [r8, #12]
   1cd38:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cd3c:	mov	r1, r3
   1cd40:	str	r3, [sp]
   1cd44:	bl	6fd4 <sf_gen_or>
   1cd48:	ldm	r8, {r0, r1, r2, r3}
   1cd4c:	stm	r9, {r0, r1, r2, r3}
   1cd50:	str	r1, [sp, #8]
   1cd54:	str	r2, [sp, #4]
   1cd58:	b	1cb38 <sfbpf_parse+0x4d4>
   1cd5c:	ldr	r0, [r8, #12]
   1cd60:	bl	5a20 <sf_finish_parse>
   1cd64:	b	1cb38 <sfbpf_parse+0x4d4>
   1cd68:	ldr	r3, [pc, #2332]	; 1d68c <sfbpf_parse+0x1028>
   1cd6c:	add	r3, pc, r3
   1cd70:	ldr	r3, [r3, #4076]	; 0xfec
   1cd74:	str	r3, [sp, #56]	; 0x38
   1cd78:	b	1cb38 <sfbpf_parse+0x4d4>
   1cd7c:	ldr	r3, [r8, #12]
   1cd80:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cd84:	mov	r1, r3
   1cd88:	str	r3, [sp]
   1cd8c:	bl	6390 <sf_gen_and>
   1cd90:	ldm	r8, {r0, r1, r2, r3}
   1cd94:	stm	r9, {r0, r1, r2, r3}
   1cd98:	str	r1, [sp, #8]
   1cd9c:	str	r2, [sp, #4]
   1cda0:	b	1cb38 <sfbpf_parse+0x4d4>
   1cda4:	ldr	r3, [r8, #12]
   1cda8:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cdac:	mov	r1, r3
   1cdb0:	str	r3, [sp]
   1cdb4:	bl	6390 <sf_gen_and>
   1cdb8:	ldm	r8, {r0, r1, r2, r3}
   1cdbc:	stm	r9, {r0, r1, r2, r3}
   1cdc0:	str	r1, [sp, #8]
   1cdc4:	str	r2, [sp, #4]
   1cdc8:	b	1cb38 <sfbpf_parse+0x4d4>
   1cdcc:	ldr	r3, [r8, #12]
   1cdd0:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cdd4:	mov	r1, r3
   1cdd8:	str	r3, [sp]
   1cddc:	bl	6fd4 <sf_gen_or>
   1cde0:	ldm	r8, {r0, r1, r2, r3}
   1cde4:	stm	r9, {r0, r1, r2, r3}
   1cde8:	str	r1, [sp, #8]
   1cdec:	str	r2, [sp, #4]
   1cdf0:	b	1cb38 <sfbpf_parse+0x4d4>
   1cdf4:	ldr	r3, [r8, #12]
   1cdf8:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cdfc:	mov	r1, r3
   1ce00:	str	r3, [sp]
   1ce04:	bl	6fd4 <sf_gen_or>
   1ce08:	ldm	r8, {r0, r1, r2, r3}
   1ce0c:	stm	r9, {r0, r1, r2, r3}
   1ce10:	str	r1, [sp, #8]
   1ce14:	str	r2, [sp, #4]
   1ce18:	b	1cb38 <sfbpf_parse+0x4d4>
   1ce1c:	ldmdb	r8, {r0, r1, r2, r3}
   1ce20:	stm	r9, {r0, r1, r2, r3}
   1ce24:	ldr	r3, [r8, #-4]
   1ce28:	str	r1, [sp, #8]
   1ce2c:	str	r2, [sp, #4]
   1ce30:	str	r3, [sp]
   1ce34:	b	1cb38 <sfbpf_parse+0x4d4>
   1ce38:	ldmdb	r8, {r0, r1, r2, r3}
   1ce3c:	stm	r9, {r0, r1, r2, r3}
   1ce40:	ldr	r3, [r8, #-4]
   1ce44:	str	r1, [sp, #8]
   1ce48:	str	r2, [sp, #4]
   1ce4c:	str	r3, [sp]
   1ce50:	b	1cb38 <sfbpf_parse+0x4d4>
   1ce54:	ldr	r3, [r8, #-16]
   1ce58:	ldr	r1, [r8]
   1ce5c:	mov	r2, r3
   1ce60:	mov	r0, #0
   1ce64:	str	r3, [sp, #56]	; 0x38
   1ce68:	bl	c7a4 <sf_gen_ncode>
   1ce6c:	str	r0, [sp]
   1ce70:	b	1cb38 <sfbpf_parse+0x4d4>
   1ce74:	ldmdb	r8, {r0, r1, r2, r3}
   1ce78:	stm	r9, {r0, r1, r2, r3}
   1ce7c:	ldr	r3, [r8, #-4]
   1ce80:	str	r1, [sp, #8]
   1ce84:	str	r2, [sp, #4]
   1ce88:	str	r3, [sp]
   1ce8c:	b	1cb38 <sfbpf_parse+0x4d4>
   1ce90:	ldr	r3, [r8, #-16]
   1ce94:	ldr	r0, [r8]
   1ce98:	mov	r1, r3
   1ce9c:	str	r3, [sp, #56]	; 0x38
   1cea0:	bl	bb90 <sf_gen_scode>
   1cea4:	str	r0, [sp]
   1cea8:	b	1cb38 <sfbpf_parse+0x4d4>
   1ceac:	ldr	ip, [r8, #-48]	; 0xffffffd0
   1ceb0:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1ceb4:	ldr	r2, [r8]
   1ceb8:	mov	r3, ip
   1cebc:	mov	r1, #0
   1cec0:	str	ip, [sp, #56]	; 0x38
   1cec4:	bl	c69c <sf_gen_mcode>
   1cec8:	str	r0, [sp]
   1cecc:	b	1cb38 <sfbpf_parse+0x4d4>
   1ced0:	ldr	ip, [r8, #-48]	; 0xffffffd0
   1ced4:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1ced8:	ldr	r1, [r8]
   1cedc:	mov	r3, ip
   1cee0:	mov	r2, #0
   1cee4:	str	ip, [sp, #56]	; 0x38
   1cee8:	bl	c69c <sf_gen_mcode>
   1ceec:	str	r0, [sp]
   1cef0:	b	1cb38 <sfbpf_parse+0x4d4>
   1cef4:	ldr	ip, [r8, #-48]	; 0xffffffd0
   1cef8:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1cefc:	ldr	r2, [r8]
   1cf00:	mov	r3, ip
   1cf04:	mov	r1, #0
   1cf08:	str	ip, [sp, #56]	; 0x38
   1cf0c:	bl	cb5c <sf_gen_mcode6>
   1cf10:	str	r0, [sp]
   1cf14:	b	1cb38 <sfbpf_parse+0x4d4>
   1cf18:	ldr	ip, [r8, #-16]
   1cf1c:	ldr	r0, [r8]
   1cf20:	mov	r3, ip
   1cf24:	mov	r2, #128	; 0x80
   1cf28:	mov	r1, #0
   1cf2c:	str	ip, [sp, #56]	; 0x38
   1cf30:	bl	cb5c <sf_gen_mcode6>
   1cf34:	str	r0, [sp]
   1cf38:	b	1cb38 <sfbpf_parse+0x4d4>
   1cf3c:	ldr	r6, [r8]
   1cf40:	ldr	r3, [r8, #-16]
   1cf44:	mov	r0, r6
   1cf48:	mov	r1, r3
   1cf4c:	str	r3, [sp, #56]	; 0x38
   1cf50:	bl	cd1c <sf_gen_ecode>
   1cf54:	str	r0, [sp]
   1cf58:	mov	r0, r6
   1cf5c:	bl	da4 <free@plt>
   1cf60:	b	1cb38 <sfbpf_parse+0x4d4>
   1cf64:	ldr	r6, [r8]
   1cf68:	ldr	r3, [r8, #-16]
   1cf6c:	mov	r0, r6
   1cf70:	mov	r1, r3
   1cf74:	str	r3, [sp, #56]	; 0x38
   1cf78:	bl	fdd4 <sf_gen_acode>
   1cf7c:	str	r0, [sp]
   1cf80:	mov	r0, r6
   1cf84:	bl	da4 <free@plt>
   1cf88:	b	1cb38 <sfbpf_parse+0x4d4>
   1cf8c:	ldr	r3, [r8, #12]
   1cf90:	mov	r0, r3
   1cf94:	str	r3, [sp]
   1cf98:	bl	a8ac <sf_gen_not>
   1cf9c:	ldm	r8, {r0, r1, r2, r3}
   1cfa0:	stm	r9, {r0, r1, r2, r3}
   1cfa4:	str	r1, [sp, #8]
   1cfa8:	str	r2, [sp, #4]
   1cfac:	b	1cb38 <sfbpf_parse+0x4d4>
   1cfb0:	ldmdb	r8, {r0, r1, r2, r3}
   1cfb4:	stm	r9, {r0, r1, r2, r3}
   1cfb8:	ldr	r3, [r8, #-4]
   1cfbc:	str	r1, [sp, #8]
   1cfc0:	str	r2, [sp, #4]
   1cfc4:	str	r3, [sp]
   1cfc8:	b	1cb38 <sfbpf_parse+0x4d4>
   1cfcc:	ldmdb	r8, {r0, r1, r2, r3}
   1cfd0:	stm	r9, {r0, r1, r2, r3}
   1cfd4:	ldr	r3, [r8, #-4]
   1cfd8:	str	r1, [sp, #8]
   1cfdc:	str	r2, [sp, #4]
   1cfe0:	str	r3, [sp]
   1cfe4:	b	1cb38 <sfbpf_parse+0x4d4>
   1cfe8:	ldr	r3, [r8, #12]
   1cfec:	ldr	r0, [r8, #-20]	; 0xffffffec
   1cff0:	mov	r1, r3
   1cff4:	str	r3, [sp]
   1cff8:	bl	6390 <sf_gen_and>
   1cffc:	ldm	r8, {r0, r1, r2, r3}
   1d000:	stm	r9, {r0, r1, r2, r3}
   1d004:	str	r1, [sp, #8]
   1d008:	str	r2, [sp, #4]
   1d00c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d010:	ldr	r3, [r8, #12]
   1d014:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d018:	mov	r1, r3
   1d01c:	str	r3, [sp]
   1d020:	bl	6fd4 <sf_gen_or>
   1d024:	ldm	r8, {r0, r1, r2, r3}
   1d028:	stm	r9, {r0, r1, r2, r3}
   1d02c:	str	r1, [sp, #8]
   1d030:	str	r2, [sp, #4]
   1d034:	b	1cb38 <sfbpf_parse+0x4d4>
   1d038:	ldr	r3, [r8, #-16]
   1d03c:	ldr	r1, [r8]
   1d040:	mov	r2, r3
   1d044:	mov	r0, #0
   1d048:	str	r3, [sp, #56]	; 0x38
   1d04c:	bl	c7a4 <sf_gen_ncode>
   1d050:	str	r0, [sp]
   1d054:	b	1cb38 <sfbpf_parse+0x4d4>
   1d058:	ldr	r3, [r8, #12]
   1d05c:	mov	r0, r3
   1d060:	str	r3, [sp]
   1d064:	bl	a8ac <sf_gen_not>
   1d068:	ldm	r8, {r0, r1, r2, r3}
   1d06c:	stm	r9, {r0, r1, r2, r3}
   1d070:	str	r1, [sp, #8]
   1d074:	str	r2, [sp, #4]
   1d078:	b	1cb38 <sfbpf_parse+0x4d4>
   1d07c:	ldr	r3, [r8, #-32]	; 0xffffffe0
   1d080:	ldr	r2, [r8, #-16]
   1d084:	strb	r3, [sp, #57]	; 0x39
   1d088:	ldr	r3, [r8]
   1d08c:	strb	r2, [sp, #58]	; 0x3a
   1d090:	strb	r3, [sp, #56]	; 0x38
   1d094:	b	1cb38 <sfbpf_parse+0x4d4>
   1d098:	ldr	r3, [r8, #-16]
   1d09c:	ldr	r2, [r8]
   1d0a0:	strb	r3, [sp, #57]	; 0x39
   1d0a4:	mov	r3, #0
   1d0a8:	strb	r2, [sp, #58]	; 0x3a
   1d0ac:	strb	r3, [sp, #56]	; 0x38
   1d0b0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d0b4:	ldr	r3, [r8, #-16]
   1d0b8:	ldr	r2, [r8]
   1d0bc:	strb	r3, [sp, #57]	; 0x39
   1d0c0:	mov	r3, #0
   1d0c4:	strb	r2, [sp, #56]	; 0x38
   1d0c8:	strb	r3, [sp, #58]	; 0x3a
   1d0cc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d0d0:	ldr	r3, [r8, #-16]
   1d0d4:	mov	r2, #0
   1d0d8:	strb	r3, [sp, #57]	; 0x39
   1d0dc:	mov	r3, #5
   1d0e0:	strb	r2, [sp, #58]	; 0x3a
   1d0e4:	strb	r3, [sp, #56]	; 0x38
   1d0e8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d0ec:	ldr	r3, [r8, #-16]
   1d0f0:	mov	r2, #0
   1d0f4:	strb	r3, [sp, #57]	; 0x39
   1d0f8:	mov	r3, #6
   1d0fc:	strb	r2, [sp, #58]	; 0x3a
   1d100:	strb	r3, [sp, #56]	; 0x38
   1d104:	b	1cb38 <sfbpf_parse+0x4d4>
   1d108:	ldr	r3, [r8, #-16]
   1d10c:	ldr	r2, [r8]
   1d110:	strb	r3, [sp, #57]	; 0x39
   1d114:	mov	r3, #0
   1d118:	strb	r2, [sp, #56]	; 0x38
   1d11c:	strb	r3, [sp, #58]	; 0x3a
   1d120:	b	1cb38 <sfbpf_parse+0x4d4>
   1d124:	ldm	r8, {r0, r1, r2, r3}
   1d128:	stm	r9, {r0, r1, r2, r3}
   1d12c:	str	r1, [sp, #8]
   1d130:	str	r2, [sp, #4]
   1d134:	str	r3, [sp]
   1d138:	b	1cb38 <sfbpf_parse+0x4d4>
   1d13c:	ldr	r3, [r8, #-32]	; 0xffffffe0
   1d140:	ldr	r2, [r8, #-4]
   1d144:	str	r3, [sp, #56]	; 0x38
   1d148:	str	r2, [sp]
   1d14c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d150:	ldr	r0, [r8]
   1d154:	bl	a8c0 <sf_gen_proto_abbrev>
   1d158:	ldr	r3, [pc, #1328]	; 1d690 <sfbpf_parse+0x102c>
   1d15c:	add	r3, pc, r3
   1d160:	ldr	r3, [r3, #4076]	; 0xfec
   1d164:	str	r3, [sp, #56]	; 0x38
   1d168:	str	r0, [sp]
   1d16c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d170:	mov	r3, #0
   1d174:	ldr	r2, [r8]
   1d178:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1d17c:	ldr	r0, [r8, #-16]
   1d180:	bl	db60 <sf_gen_relation>
   1d184:	ldr	r3, [pc, #1288]	; 1d694 <sfbpf_parse+0x1030>
   1d188:	add	r3, pc, r3
   1d18c:	ldr	r3, [r3, #4076]	; 0xfec
   1d190:	str	r3, [sp, #56]	; 0x38
   1d194:	str	r0, [sp]
   1d198:	b	1cb38 <sfbpf_parse+0x4d4>
   1d19c:	mov	r3, #1
   1d1a0:	ldr	r2, [r8]
   1d1a4:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1d1a8:	ldr	r0, [r8, #-16]
   1d1ac:	bl	db60 <sf_gen_relation>
   1d1b0:	ldr	r3, [pc, #1248]	; 1d698 <sfbpf_parse+0x1034>
   1d1b4:	add	r3, pc, r3
   1d1b8:	ldr	r3, [r3, #4076]	; 0xfec
   1d1bc:	str	r3, [sp, #56]	; 0x38
   1d1c0:	str	r0, [sp]
   1d1c4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d1c8:	ldr	r3, [pc, #1228]	; 1d69c <sfbpf_parse+0x1038>
   1d1cc:	ldr	r2, [r8]
   1d1d0:	add	r3, pc, r3
   1d1d4:	str	r2, [sp]
   1d1d8:	ldr	r3, [r3, #4076]	; 0xfec
   1d1dc:	str	r3, [sp, #56]	; 0x38
   1d1e0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d1e4:	ldr	r0, [r8]
   1d1e8:	bl	10448 <sf_gen_atmtype_abbrev>
   1d1ec:	ldr	r3, [pc, #1196]	; 1d6a0 <sfbpf_parse+0x103c>
   1d1f0:	add	r3, pc, r3
   1d1f4:	ldr	r3, [r3, #4076]	; 0xfec
   1d1f8:	str	r3, [sp, #56]	; 0x38
   1d1fc:	str	r0, [sp]
   1d200:	b	1cb38 <sfbpf_parse+0x4d4>
   1d204:	ldr	r0, [r8]
   1d208:	bl	10d24 <sf_gen_atmmulti_abbrev>
   1d20c:	ldr	r3, [pc, #1168]	; 1d6a4 <sfbpf_parse+0x1040>
   1d210:	add	r3, pc, r3
   1d214:	ldr	r3, [r3, #4076]	; 0xfec
   1d218:	str	r3, [sp, #56]	; 0x38
   1d21c:	str	r0, [sp]
   1d220:	b	1cb38 <sfbpf_parse+0x4d4>
   1d224:	ldr	r3, [pc, #1148]	; 1d6a8 <sfbpf_parse+0x1044>
   1d228:	ldr	r2, [r8, #12]
   1d22c:	add	r3, pc, r3
   1d230:	str	r2, [sp]
   1d234:	ldr	r3, [r3, #4076]	; 0xfec
   1d238:	str	r3, [sp, #56]	; 0x38
   1d23c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d240:	ldr	r0, [r8]
   1d244:	bl	1080c <sf_gen_mtp2type_abbrev>
   1d248:	ldr	r3, [pc, #1116]	; 1d6ac <sfbpf_parse+0x1048>
   1d24c:	add	r3, pc, r3
   1d250:	ldr	r3, [r3, #4076]	; 0xfec
   1d254:	str	r3, [sp, #56]	; 0x38
   1d258:	str	r0, [sp]
   1d25c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d260:	ldr	r3, [pc, #1096]	; 1d6b0 <sfbpf_parse+0x104c>
   1d264:	ldr	r2, [r8, #12]
   1d268:	add	r3, pc, r3
   1d26c:	str	r2, [sp]
   1d270:	ldr	r3, [r3, #4076]	; 0xfec
   1d274:	str	r3, [sp, #56]	; 0x38
   1d278:	b	1cb38 <sfbpf_parse+0x4d4>
   1d27c:	mov	r3, #0
   1d280:	str	r3, [sp, #56]	; 0x38
   1d284:	b	1cb38 <sfbpf_parse+0x4d4>
   1d288:	mov	r3, #1
   1d28c:	str	r3, [sp, #56]	; 0x38
   1d290:	b	1cb38 <sfbpf_parse+0x4d4>
   1d294:	mov	r3, #2
   1d298:	str	r3, [sp, #56]	; 0x38
   1d29c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2a0:	mov	r3, #3
   1d2a4:	str	r3, [sp, #56]	; 0x38
   1d2a8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2ac:	mov	r3, #3
   1d2b0:	str	r3, [sp, #56]	; 0x38
   1d2b4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2b8:	mov	r3, #4
   1d2bc:	str	r3, [sp, #56]	; 0x38
   1d2c0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2c4:	mov	r3, #4
   1d2c8:	str	r3, [sp, #56]	; 0x38
   1d2cc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2d0:	mov	r3, #5
   1d2d4:	str	r3, [sp, #56]	; 0x38
   1d2d8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2dc:	mov	r3, #6
   1d2e0:	str	r3, [sp, #56]	; 0x38
   1d2e4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2e8:	mov	r3, #7
   1d2ec:	str	r3, [sp, #56]	; 0x38
   1d2f0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d2f4:	mov	r3, #8
   1d2f8:	str	r3, [sp, #56]	; 0x38
   1d2fc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d300:	mov	r3, #1
   1d304:	str	r3, [sp, #56]	; 0x38
   1d308:	b	1cb38 <sfbpf_parse+0x4d4>
   1d30c:	mov	r3, #2
   1d310:	str	r3, [sp, #56]	; 0x38
   1d314:	b	1cb38 <sfbpf_parse+0x4d4>
   1d318:	mov	r3, #3
   1d31c:	str	r3, [sp, #56]	; 0x38
   1d320:	b	1cb38 <sfbpf_parse+0x4d4>
   1d324:	mov	r3, #7
   1d328:	str	r3, [sp, #56]	; 0x38
   1d32c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d330:	mov	r3, #4
   1d334:	str	r3, [sp, #56]	; 0x38
   1d338:	b	1cb38 <sfbpf_parse+0x4d4>
   1d33c:	mov	r3, #1
   1d340:	str	r3, [sp, #56]	; 0x38
   1d344:	b	1cb38 <sfbpf_parse+0x4d4>
   1d348:	mov	r3, #2
   1d34c:	str	r3, [sp, #56]	; 0x38
   1d350:	b	1cb38 <sfbpf_parse+0x4d4>
   1d354:	mov	r3, #3
   1d358:	str	r3, [sp, #56]	; 0x38
   1d35c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d360:	mov	r3, #4
   1d364:	str	r3, [sp, #56]	; 0x38
   1d368:	b	1cb38 <sfbpf_parse+0x4d4>
   1d36c:	mov	r3, #5
   1d370:	str	r3, [sp, #56]	; 0x38
   1d374:	b	1cb38 <sfbpf_parse+0x4d4>
   1d378:	mov	r3, #6
   1d37c:	str	r3, [sp, #56]	; 0x38
   1d380:	b	1cb38 <sfbpf_parse+0x4d4>
   1d384:	mov	r3, #7
   1d388:	str	r3, [sp, #56]	; 0x38
   1d38c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d390:	mov	r3, #8
   1d394:	str	r3, [sp, #56]	; 0x38
   1d398:	b	1cb38 <sfbpf_parse+0x4d4>
   1d39c:	mov	r3, #9
   1d3a0:	str	r3, [sp, #56]	; 0x38
   1d3a4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3a8:	mov	r3, #10
   1d3ac:	str	r3, [sp, #56]	; 0x38
   1d3b0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3b4:	mov	r3, #21
   1d3b8:	str	r3, [sp, #56]	; 0x38
   1d3bc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3c0:	mov	r3, #22
   1d3c4:	str	r3, [sp, #56]	; 0x38
   1d3c8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3cc:	mov	r3, #11
   1d3d0:	str	r3, [sp, #56]	; 0x38
   1d3d4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3d8:	mov	r3, #23
   1d3dc:	str	r3, [sp, #56]	; 0x38
   1d3e0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3e4:	mov	r3, #12
   1d3e8:	str	r3, [sp, #56]	; 0x38
   1d3ec:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3f0:	mov	r3, #13
   1d3f4:	str	r3, [sp, #56]	; 0x38
   1d3f8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d3fc:	mov	r3, #14
   1d400:	str	r3, [sp, #56]	; 0x38
   1d404:	b	1cb38 <sfbpf_parse+0x4d4>
   1d408:	mov	r3, #16
   1d40c:	str	r3, [sp, #56]	; 0x38
   1d410:	b	1cb38 <sfbpf_parse+0x4d4>
   1d414:	mov	r3, #15
   1d418:	str	r3, [sp, #56]	; 0x38
   1d41c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d420:	mov	r3, #17
   1d424:	str	r3, [sp, #56]	; 0x38
   1d428:	b	1cb38 <sfbpf_parse+0x4d4>
   1d42c:	mov	r3, #18
   1d430:	str	r3, [sp, #56]	; 0x38
   1d434:	b	1cb38 <sfbpf_parse+0x4d4>
   1d438:	mov	r3, #19
   1d43c:	str	r3, [sp, #56]	; 0x38
   1d440:	b	1cb38 <sfbpf_parse+0x4d4>
   1d444:	mov	r3, #20
   1d448:	str	r3, [sp, #56]	; 0x38
   1d44c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d450:	mov	r3, #24
   1d454:	str	r3, [sp, #56]	; 0x38
   1d458:	b	1cb38 <sfbpf_parse+0x4d4>
   1d45c:	mov	r3, #25
   1d460:	str	r3, [sp, #56]	; 0x38
   1d464:	b	1cb38 <sfbpf_parse+0x4d4>
   1d468:	mov	r3, #26
   1d46c:	str	r3, [sp, #56]	; 0x38
   1d470:	b	1cb38 <sfbpf_parse+0x4d4>
   1d474:	mov	r3, #31
   1d478:	str	r3, [sp, #56]	; 0x38
   1d47c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d480:	mov	r3, #32
   1d484:	str	r3, [sp, #56]	; 0x38
   1d488:	b	1cb38 <sfbpf_parse+0x4d4>
   1d48c:	mov	r3, #33	; 0x21
   1d490:	str	r3, [sp, #56]	; 0x38
   1d494:	b	1cb38 <sfbpf_parse+0x4d4>
   1d498:	mov	r3, #39	; 0x27
   1d49c:	str	r3, [sp, #56]	; 0x38
   1d4a0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4a4:	mov	r3, #36	; 0x24
   1d4a8:	str	r3, [sp, #56]	; 0x38
   1d4ac:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4b0:	mov	r3, #38	; 0x26
   1d4b4:	str	r3, [sp, #56]	; 0x38
   1d4b8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4bc:	mov	r3, #37	; 0x25
   1d4c0:	str	r3, [sp, #56]	; 0x38
   1d4c4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4c8:	mov	r3, #27
   1d4cc:	str	r3, [sp, #56]	; 0x38
   1d4d0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4d4:	mov	r3, #28
   1d4d8:	str	r3, [sp, #56]	; 0x38
   1d4dc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4e0:	mov	r3, #29
   1d4e4:	str	r3, [sp, #56]	; 0x38
   1d4e8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4ec:	mov	r3, #30
   1d4f0:	str	r3, [sp, #56]	; 0x38
   1d4f4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d4f8:	mov	r3, #40	; 0x28
   1d4fc:	str	r3, [sp, #56]	; 0x38
   1d500:	b	1cb38 <sfbpf_parse+0x4d4>
   1d504:	ldr	r0, [r8, #-16]
   1d508:	bl	eef4 <sf_gen_broadcast>
   1d50c:	str	r0, [sp, #56]	; 0x38
   1d510:	b	1cb38 <sfbpf_parse+0x4d4>
   1d514:	ldr	r0, [r8, #-16]
   1d518:	bl	f20c <sf_gen_multicast>
   1d51c:	str	r0, [sp, #56]	; 0x38
   1d520:	b	1cb38 <sfbpf_parse+0x4d4>
   1d524:	ldr	r0, [r8]
   1d528:	bl	eca0 <sf_gen_less>
   1d52c:	str	r0, [sp, #56]	; 0x38
   1d530:	b	1cb38 <sfbpf_parse+0x4d4>
   1d534:	ldr	r0, [r8]
   1d538:	bl	eb54 <sf_gen_greater>
   1d53c:	str	r0, [sp, #56]	; 0x38
   1d540:	b	1cb38 <sfbpf_parse+0x4d4>
   1d544:	ldr	r2, [r8]
   1d548:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1d54c:	ldr	r0, [r8, #-16]
   1d550:	bl	edf8 <sf_gen_byteop>
   1d554:	str	r0, [sp, #56]	; 0x38
   1d558:	b	1cb38 <sfbpf_parse+0x4d4>
   1d55c:	mov	r0, #0
   1d560:	bl	f59c <sf_gen_inbound>
   1d564:	str	r0, [sp, #56]	; 0x38
   1d568:	b	1cb38 <sfbpf_parse+0x4d4>
   1d56c:	mov	r0, #1
   1d570:	bl	f59c <sf_gen_inbound>
   1d574:	str	r0, [sp, #56]	; 0x38
   1d578:	b	1cb38 <sfbpf_parse+0x4d4>
   1d57c:	ldr	r0, [r8]
   1d580:	bl	ff14 <sf_gen_vlan>
   1d584:	str	r0, [sp, #56]	; 0x38
   1d588:	b	1cb38 <sfbpf_parse+0x4d4>
   1d58c:	mvn	r0, #0
   1d590:	bl	ff14 <sf_gen_vlan>
   1d594:	str	r0, [sp, #56]	; 0x38
   1d598:	b	1cb38 <sfbpf_parse+0x4d4>
   1d59c:	ldr	r0, [r8]
   1d5a0:	bl	100cc <sf_gen_mpls>
   1d5a4:	str	r0, [sp, #56]	; 0x38
   1d5a8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5ac:	mvn	r0, #0
   1d5b0:	bl	100cc <sf_gen_mpls>
   1d5b4:	str	r0, [sp, #56]	; 0x38
   1d5b8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5bc:	bl	10268 <sf_gen_pppoed>
   1d5c0:	str	r0, [sp, #56]	; 0x38
   1d5c4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5c8:	bl	10274 <sf_gen_pppoes>
   1d5cc:	str	r0, [sp, #56]	; 0x38
   1d5d0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5d4:	ldr	r3, [r8]
   1d5d8:	str	r3, [sp, #56]	; 0x38
   1d5dc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5e0:	ldr	r3, [r8]
   1d5e4:	str	r3, [sp, #56]	; 0x38
   1d5e8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5ec:	ldr	r0, [r8]
   1d5f0:	bl	fad8 <sf_gen_pf_ifname>
   1d5f4:	str	r0, [sp, #56]	; 0x38
   1d5f8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d5fc:	ldr	r0, [r8]
   1d600:	bl	faec <sf_gen_pf_ruleset>
   1d604:	str	r0, [sp, #56]	; 0x38
   1d608:	b	1cb38 <sfbpf_parse+0x4d4>
   1d60c:	ldr	r0, [r8]
   1d610:	bl	fb00 <sf_gen_pf_rnr>
   1d614:	str	r0, [sp, #56]	; 0x38
   1d618:	b	1cb38 <sfbpf_parse+0x4d4>
   1d61c:	ldr	r0, [r8]
   1d620:	bl	fb14 <sf_gen_pf_srnr>
   1d624:	str	r0, [sp, #56]	; 0x38
   1d628:	b	1cb38 <sfbpf_parse+0x4d4>
   1d62c:	ldr	r0, [r8]
   1d630:	bl	fb28 <sf_gen_pf_reason>
   1d634:	str	r0, [sp, #56]	; 0x38
   1d638:	b	1cb38 <sfbpf_parse+0x4d4>
   1d63c:	ldr	r0, [r8]
   1d640:	bl	fb3c <sf_gen_pf_action>
   1d644:	str	r0, [sp, #56]	; 0x38
   1d648:	b	1cb38 <sfbpf_parse+0x4d4>
   1d64c:	.word	0x00021984
   1d650:	.word	0x000000cc
   1d654:	.word	0x000000b4
   1d658:	.word	0x00007c4c
   1d65c:	.word	0x00007c34
   1d660:	.word	0x00005c08
   1d664:	.word	0x0000016d
   1d668:	.word	0x00005bb8
   1d66c:	.word	0x0000029d
   1d670:	.word	0x00005b94
   1d674:	.word	0x00005b7c
   1d678:	.word	0x00005b60
   1d67c:	.word	0x000057b8
   1d680:	.word	0x0000270f
   1d684:	.word	0x00002710
   1d688:	.word	0x000000f4
   1d68c:	.word	0x00005594
   1d690:	.word	0x000051a4
   1d694:	.word	0x00005178
   1d698:	.word	0x0000514c
   1d69c:	.word	0x00005130
   1d6a0:	.word	0x00005110
   1d6a4:	.word	0x000050f0
   1d6a8:	.word	0x000050d4
   1d6ac:	.word	0x000050b4
   1d6b0:	.word	0x00005098
   1d6b4:	.word	0x000205cc
   1d6b8:	.word	0x00005e40
   1d6bc:	.word	0x00005d38
   1d6c0:	.word	0x00005d2c
   1d6c4:	.word	0x000049e4
   1d6c8:	.word	0x000048e4
   1d6cc:	.word	0x00005964
   1d6d0:	.word	0x00005950
   1d6d4:	.word	0x00003f54
   1d6d8:	.word	0x00003f48
   1d6dc:	.word	0x000200f0
   1d6e0:	.word	0x00005800
   1d6e4:	.word	0x00020050
   1d6e8:	.word	0x00020e04
   1d6ec:	.word	0x00005878
   1d6f0:	.word	0x00003598
   1d6f4:	.word	0x00005820
   1d6f8:	.word	0x00020db8
   1d6fc:	.word	0x00005808
   1d700:	.word	0x0000353c
   1d704:	.word	0x0001ffa4
   1d708:	.word	0x00005824
   1d70c:	.word	0x00005740
   1d710:	.word	0x0001ff3c
   1d714:	.word	0x00005658
   1d718:	.word	0x00005638
   1d71c:	.word	0x0001ff20
   1d720:	.word	0x00005738
   1d724:	.word	0x00005724
   1d728:	.word	0x00005634
   1d72c:	.word	0x00005604
   1d730:	.word	0x00005668
   1d734:	.word	0x00005638
   1d738:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1d73c:	ldr	r3, [r8]
   1d740:	mov	r1, #252	; 0xfc
   1d744:	orr	r0, r0, r3
   1d748:	bl	fb50 <sf_gen_p80211_type>
   1d74c:	str	r0, [sp, #56]	; 0x38
   1d750:	b	1cb38 <sfbpf_parse+0x4d4>
   1d754:	mov	r1, #12
   1d758:	ldr	r0, [r8]
   1d75c:	bl	fb50 <sf_gen_p80211_type>
   1d760:	str	r0, [sp, #56]	; 0x38
   1d764:	b	1cb38 <sfbpf_parse+0x4d4>
   1d768:	mov	r1, #252	; 0xfc
   1d76c:	ldr	r0, [r8]
   1d770:	bl	fb50 <sf_gen_p80211_type>
   1d774:	str	r0, [sp, #56]	; 0x38
   1d778:	b	1cb38 <sfbpf_parse+0x4d4>
   1d77c:	ldr	r0, [r8]
   1d780:	bl	fc94 <sf_gen_p80211_fcdir>
   1d784:	str	r0, [sp, #56]	; 0x38
   1d788:	b	1cb38 <sfbpf_parse+0x4d4>
   1d78c:	ldr	r3, [pc, #-224]	; 1d6b4 <sfbpf_parse+0x1050>
   1d790:	ldr	r0, [pc, #-224]	; 1d6b8 <sfbpf_parse+0x1054>
   1d794:	add	r3, pc, r3
   1d798:	add	r3, r3, #384	; 0x180
   1d79c:	str	r4, [sp, #44]	; 0x2c
   1d7a0:	ldr	r6, [r8]
   1d7a4:	add	r0, pc, r0
   1d7a8:	mov	r4, r3
   1d7ac:	b	1d7c0 <sfbpf_parse+0x115c>
   1d7b0:	add	r4, r4, #8
   1d7b4:	ldr	r0, [r4, #4]
   1d7b8:	cmp	r0, #0
   1d7bc:	beq	1d7e8 <sfbpf_parse+0x1184>
   1d7c0:	mov	r1, r6
   1d7c4:	bl	1c3e0 <sfbpf_strcasecmp>
   1d7c8:	cmp	r0, #0
   1d7cc:	bne	1d7b0 <sfbpf_parse+0x114c>
   1d7d0:	mov	r3, r4
   1d7d4:	ldr	r4, [sp, #44]	; 0x2c
   1d7d8:	ldr	r3, [r3]
   1d7dc:	cmn	r3, #1
   1d7e0:	str	r3, [sp, #56]	; 0x38
   1d7e4:	bne	1cb38 <sfbpf_parse+0x4d4>
   1d7e8:	ldr	r0, [pc, #-308]	; 1d6bc <sfbpf_parse+0x1058>
   1d7ec:	add	r0, pc, r0
   1d7f0:	bl	2370 <sf_bpf_error>
   1d7f4:	ldr	r3, [r8, #-32]	; 0xffffffe0
   1d7f8:	cmp	r3, #0
   1d7fc:	beq	1de34 <sfbpf_parse+0x17d0>
   1d800:	cmp	r3, #4
   1d804:	beq	1de1c <sfbpf_parse+0x17b8>
   1d808:	cmp	r3, #8
   1d80c:	beq	1ddb4 <sfbpf_parse+0x1750>
   1d810:	ldr	r0, [pc, #-344]	; 1d6c0 <sfbpf_parse+0x105c>
   1d814:	add	r0, pc, r0
   1d818:	bl	2370 <sf_bpf_error>
   1d81c:	mov	r3, #61	; 0x3d
   1d820:	str	r3, [sp, #56]	; 0x38
   1d824:	b	1cb38 <sfbpf_parse+0x4d4>
   1d828:	ldr	r3, [r8, #-16]
   1d82c:	str	r3, [sp, #56]	; 0x38
   1d830:	b	1cb38 <sfbpf_parse+0x4d4>
   1d834:	mov	r3, #30
   1d838:	str	r3, [sp, #56]	; 0x38
   1d83c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d840:	mov	r3, #31
   1d844:	str	r3, [sp, #56]	; 0x38
   1d848:	b	1cb38 <sfbpf_parse+0x4d4>
   1d84c:	mov	r3, #22
   1d850:	str	r3, [sp, #56]	; 0x38
   1d854:	b	1cb38 <sfbpf_parse+0x4d4>
   1d858:	mov	r3, #23
   1d85c:	str	r3, [sp, #56]	; 0x38
   1d860:	b	1cb38 <sfbpf_parse+0x4d4>
   1d864:	mov	r3, #25
   1d868:	str	r3, [sp, #56]	; 0x38
   1d86c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d870:	mov	r3, #24
   1d874:	str	r3, [sp, #56]	; 0x38
   1d878:	b	1cb38 <sfbpf_parse+0x4d4>
   1d87c:	mov	r3, #26
   1d880:	str	r3, [sp, #56]	; 0x38
   1d884:	b	1cb38 <sfbpf_parse+0x4d4>
   1d888:	mov	r3, #27
   1d88c:	str	r3, [sp, #56]	; 0x38
   1d890:	b	1cb38 <sfbpf_parse+0x4d4>
   1d894:	mov	r3, #28
   1d898:	str	r3, [sp, #56]	; 0x38
   1d89c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8a0:	mov	r3, #29
   1d8a4:	str	r3, [sp, #56]	; 0x38
   1d8a8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8ac:	mov	r3, #70	; 0x46
   1d8b0:	str	r3, [sp, #56]	; 0x38
   1d8b4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8b8:	mov	r3, #71	; 0x47
   1d8bc:	str	r3, [sp, #56]	; 0x38
   1d8c0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8c4:	mov	r3, #51	; 0x33
   1d8c8:	str	r3, [sp, #8]
   1d8cc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8d0:	mov	r3, #52	; 0x34
   1d8d4:	str	r3, [sp, #8]
   1d8d8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8dc:	mov	r3, #0
   1d8e0:	ldr	r2, [r8, #-16]
   1d8e4:	ldr	r1, [r8]
   1d8e8:	ldr	r0, [r8, #-28]	; 0xffffffe4
   1d8ec:	bl	102c4 <sf_gen_atmfield_code>
   1d8f0:	str	r0, [sp]
   1d8f4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d8f8:	mov	r3, #1
   1d8fc:	ldr	r2, [r8, #-16]
   1d900:	ldr	r1, [r8]
   1d904:	ldr	r0, [r8, #-28]	; 0xffffffe4
   1d908:	bl	102c4 <sf_gen_atmfield_code>
   1d90c:	str	r0, [sp]
   1d910:	b	1cb38 <sfbpf_parse+0x4d4>
   1d914:	ldr	r3, [pc, #-600]	; 1d6c4 <sfbpf_parse+0x1060>
   1d918:	ldr	r2, [r8, #-4]
   1d91c:	add	r3, pc, r3
   1d920:	str	r2, [sp]
   1d924:	ldr	r3, [r3, #4076]	; 0xfec
   1d928:	str	r3, [sp, #56]	; 0x38
   1d92c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d930:	ldr	r3, [r8, #-12]
   1d934:	str	r3, [sp, #8]
   1d938:	sub	r3, r3, #51	; 0x33
   1d93c:	cmp	r3, #1
   1d940:	bhi	1cb38 <sfbpf_parse+0x4d4>
   1d944:	mov	r3, #0
   1d948:	mov	r2, #16
   1d94c:	ldr	r1, [r8]
   1d950:	ldr	r0, [sp, #8]
   1d954:	bl	102c4 <sf_gen_atmfield_code>
   1d958:	str	r0, [sp]
   1d95c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d960:	ldr	r3, [r8, #12]
   1d964:	ldr	r0, [r8, #-20]	; 0xffffffec
   1d968:	mov	r1, r3
   1d96c:	str	r3, [sp]
   1d970:	bl	6fd4 <sf_gen_or>
   1d974:	ldm	r8, {r0, r1, r2, r3}
   1d978:	stm	r9, {r0, r1, r2, r3}
   1d97c:	str	r1, [sp, #8]
   1d980:	str	r2, [sp, #4]
   1d984:	b	1cb38 <sfbpf_parse+0x4d4>
   1d988:	mov	r3, #22
   1d98c:	str	r3, [sp, #56]	; 0x38
   1d990:	b	1cb38 <sfbpf_parse+0x4d4>
   1d994:	mov	r3, #23
   1d998:	str	r3, [sp, #56]	; 0x38
   1d99c:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9a0:	mov	r3, #24
   1d9a4:	str	r3, [sp, #56]	; 0x38
   1d9a8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9ac:	mov	r3, #1
   1d9b0:	str	r3, [sp, #4]
   1d9b4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9b8:	mov	r3, #2
   1d9bc:	str	r3, [sp, #4]
   1d9c0:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9c4:	mov	r3, #3
   1d9c8:	str	r3, [sp, #4]
   1d9cc:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9d0:	mov	r3, #4
   1d9d4:	str	r3, [sp, #4]
   1d9d8:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9dc:	mov	r3, #0
   1d9e0:	ldr	r2, [r8, #-16]
   1d9e4:	ldr	r1, [r8]
   1d9e8:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1d9ec:	bl	10a80 <sf_gen_mtp3field_code>
   1d9f0:	str	r0, [sp]
   1d9f4:	b	1cb38 <sfbpf_parse+0x4d4>
   1d9f8:	mov	r3, #1
   1d9fc:	ldr	r2, [r8, #-16]
   1da00:	ldr	r1, [r8]
   1da04:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1da08:	bl	10a80 <sf_gen_mtp3field_code>
   1da0c:	str	r0, [sp]
   1da10:	b	1cb38 <sfbpf_parse+0x4d4>
   1da14:	ldr	r3, [pc, #-852]	; 1d6c8 <sfbpf_parse+0x1064>
   1da18:	ldr	r2, [r8, #-4]
   1da1c:	add	r3, pc, r3
   1da20:	str	r2, [sp]
   1da24:	ldr	r3, [r3, #4076]	; 0xfec
   1da28:	str	r3, [sp, #56]	; 0x38
   1da2c:	b	1cb38 <sfbpf_parse+0x4d4>
   1da30:	ldr	r3, [r8, #-8]
   1da34:	str	r3, [sp, #4]
   1da38:	sub	r3, r3, #1
   1da3c:	cmp	r3, #3
   1da40:	bhi	1cb38 <sfbpf_parse+0x4d4>
   1da44:	mov	r3, #0
   1da48:	mov	r2, #16
   1da4c:	ldr	r1, [r8]
   1da50:	ldr	r0, [sp, #4]
   1da54:	bl	10a80 <sf_gen_mtp3field_code>
   1da58:	str	r0, [sp]
   1da5c:	b	1cb38 <sfbpf_parse+0x4d4>
   1da60:	ldr	r2, [r8, #-16]
   1da64:	ldr	r1, [r8, #-48]	; 0xffffffd0
   1da68:	ldr	r0, [r8, #-80]	; 0xffffffb0
   1da6c:	bl	cea0 <sf_gen_load>
   1da70:	str	r0, [sp, #56]	; 0x38
   1da74:	b	1cb38 <sfbpf_parse+0x4d4>
   1da78:	ldr	r2, [r8]
   1da7c:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1da80:	mov	r0, #0
   1da84:	bl	e738 <sf_gen_arth>
   1da88:	str	r0, [sp, #56]	; 0x38
   1da8c:	b	1cb38 <sfbpf_parse+0x4d4>
   1da90:	ldr	r2, [r8]
   1da94:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1da98:	mov	r0, #16
   1da9c:	bl	e738 <sf_gen_arth>
   1daa0:	str	r0, [sp, #56]	; 0x38
   1daa4:	b	1cb38 <sfbpf_parse+0x4d4>
   1daa8:	ldr	r2, [r8]
   1daac:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1dab0:	mov	r0, #32
   1dab4:	bl	e738 <sf_gen_arth>
   1dab8:	str	r0, [sp, #56]	; 0x38
   1dabc:	b	1cb38 <sfbpf_parse+0x4d4>
   1dac0:	ldr	r2, [r8]
   1dac4:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1dac8:	mov	r0, #48	; 0x30
   1dacc:	bl	e738 <sf_gen_arth>
   1dad0:	str	r0, [sp, #56]	; 0x38
   1dad4:	b	1cb38 <sfbpf_parse+0x4d4>
   1dad8:	ldr	r2, [r8]
   1dadc:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1dae0:	mov	r0, #80	; 0x50
   1dae4:	bl	e738 <sf_gen_arth>
   1dae8:	str	r0, [sp, #56]	; 0x38
   1daec:	b	1cb38 <sfbpf_parse+0x4d4>
   1daf0:	ldr	r2, [r8]
   1daf4:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1daf8:	mov	r0, #64	; 0x40
   1dafc:	bl	e738 <sf_gen_arth>
   1db00:	str	r0, [sp, #56]	; 0x38
   1db04:	b	1cb38 <sfbpf_parse+0x4d4>
   1db08:	ldr	r2, [r8]
   1db0c:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1db10:	mov	r0, #96	; 0x60
   1db14:	bl	e738 <sf_gen_arth>
   1db18:	str	r0, [sp, #56]	; 0x38
   1db1c:	b	1cb38 <sfbpf_parse+0x4d4>
   1db20:	ldr	r2, [r8]
   1db24:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1db28:	mov	r0, #112	; 0x70
   1db2c:	bl	e738 <sf_gen_arth>
   1db30:	str	r0, [sp, #56]	; 0x38
   1db34:	b	1cb38 <sfbpf_parse+0x4d4>
   1db38:	ldr	r0, [r8]
   1db3c:	bl	e69c <sf_gen_neg>
   1db40:	str	r0, [sp, #56]	; 0x38
   1db44:	b	1cb38 <sfbpf_parse+0x4d4>
   1db48:	ldr	r3, [r8, #-16]
   1db4c:	str	r3, [sp, #56]	; 0x38
   1db50:	b	1cb38 <sfbpf_parse+0x4d4>
   1db54:	bl	dce4 <sf_gen_loadlen>
   1db58:	str	r0, [sp, #56]	; 0x38
   1db5c:	b	1cb38 <sfbpf_parse+0x4d4>
   1db60:	mov	r3, #38	; 0x26
   1db64:	str	r3, [sp, #56]	; 0x38
   1db68:	b	1cb38 <sfbpf_parse+0x4d4>
   1db6c:	mov	r3, #124	; 0x7c
   1db70:	str	r3, [sp, #56]	; 0x38
   1db74:	b	1cb38 <sfbpf_parse+0x4d4>
   1db78:	mov	r3, #60	; 0x3c
   1db7c:	str	r3, [sp, #56]	; 0x38
   1db80:	b	1cb38 <sfbpf_parse+0x4d4>
   1db84:	mov	r3, #62	; 0x3e
   1db88:	str	r3, [sp, #56]	; 0x38
   1db8c:	b	1cb38 <sfbpf_parse+0x4d4>
   1db90:	mov	r3, #32
   1db94:	str	r3, [sp, #56]	; 0x38
   1db98:	b	1cb38 <sfbpf_parse+0x4d4>
   1db9c:	mov	r3, #48	; 0x30
   1dba0:	str	r3, [sp, #56]	; 0x38
   1dba4:	b	1cb38 <sfbpf_parse+0x4d4>
   1dba8:	mov	r3, #16
   1dbac:	str	r3, [sp, #56]	; 0x38
   1dbb0:	b	1cb38 <sfbpf_parse+0x4d4>
   1dbb4:	mov	r3, #32
   1dbb8:	str	r3, [sp, #56]	; 0x38
   1dbbc:	b	1cb38 <sfbpf_parse+0x4d4>
   1dbc0:	mov	r3, #48	; 0x30
   1dbc4:	str	r3, [sp, #56]	; 0x38
   1dbc8:	b	1cb38 <sfbpf_parse+0x4d4>
   1dbcc:	mov	r3, #16
   1dbd0:	str	r3, [sp, #56]	; 0x38
   1dbd4:	b	1cb38 <sfbpf_parse+0x4d4>
   1dbd8:	ldr	r0, [r8]
   1dbdc:	bl	e1b0 <sf_gen_loadi>
   1dbe0:	str	r0, [sp, #56]	; 0x38
   1dbe4:	b	1cb38 <sfbpf_parse+0x4d4>
   1dbe8:	mov	r2, #1
   1dbec:	ldr	r1, [r8, #-16]
   1dbf0:	ldr	r0, [r8, #-48]	; 0xffffffd0
   1dbf4:	bl	cea0 <sf_gen_load>
   1dbf8:	str	r0, [sp, #56]	; 0x38
   1dbfc:	b	1cb38 <sfbpf_parse+0x4d4>
   1dc00:	ldr	r6, [r8]
   1dc04:	ldr	r1, [pc, #-1344]	; 1d6cc <sfbpf_parse+0x1068>
   1dc08:	mov	r0, r6
   1dc0c:	add	r1, pc, r1
   1dc10:	bl	1c3e0 <sfbpf_strcasecmp>
   1dc14:	cmp	r0, #0
   1dc18:	streq	r0, [sp, #56]	; 0x38
   1dc1c:	beq	1cb38 <sfbpf_parse+0x4d4>
   1dc20:	ldr	r1, [pc, #-1368]	; 1d6d0 <sfbpf_parse+0x106c>
   1dc24:	mov	r0, r6
   1dc28:	add	r1, pc, r1
   1dc2c:	bl	1c3e0 <sfbpf_strcasecmp>
   1dc30:	cmp	r0, #0
   1dc34:	bne	1dd58 <sfbpf_parse+0x16f4>
   1dc38:	mov	r3, #1
   1dc3c:	str	r3, [sp, #56]	; 0x38
   1dc40:	b	1cb38 <sfbpf_parse+0x4d4>
   1dc44:	ldr	r3, [r8]
   1dc48:	str	r3, [sp, #56]	; 0x38
   1dc4c:	b	1cb38 <sfbpf_parse+0x4d4>
   1dc50:	ldr	r0, [pc, #-1412]	; 1d6d4 <sfbpf_parse+0x1070>
   1dc54:	add	r0, pc, r0
   1dc58:	bl	2370 <sf_bpf_error>
   1dc5c:	ldr	r0, [pc, #-1420]	; 1d6d8 <sfbpf_parse+0x1074>
   1dc60:	add	r0, pc, r0
   1dc64:	bl	2370 <sf_bpf_error>
   1dc68:	ldr	r3, [pc, #-1428]	; 1d6dc <sfbpf_parse+0x1078>
   1dc6c:	ldr	r0, [pc, #-1428]	; 1d6e0 <sfbpf_parse+0x107c>
   1dc70:	add	r3, pc, r3
   1dc74:	add	r0, pc, r0
   1dc78:	add	r2, r3, #352	; 0x160
   1dc7c:	mov	r1, #0
   1dc80:	cmp	r0, #0
   1dc84:	str	r4, [sp, #44]	; 0x2c
   1dc88:	str	r5, [sp, #48]	; 0x30
   1dc8c:	mov	r6, r1
   1dc90:	str	r7, [sp, #52]	; 0x34
   1dc94:	mov	r5, r2
   1dc98:	ldr	r4, [r8]
   1dc9c:	beq	1dcfc <sfbpf_parse+0x1698>
   1dca0:	mov	r7, r3
   1dca4:	b	1dcb8 <sfbpf_parse+0x1654>
   1dca8:	add	r7, r7, #8
   1dcac:	ldr	r0, [r7, #4]
   1dcb0:	cmp	r0, #0
   1dcb4:	beq	1dcfc <sfbpf_parse+0x1698>
   1dcb8:	mov	r1, r4
   1dcbc:	bl	1c3e0 <sfbpf_strcasecmp>
   1dcc0:	cmp	r0, #0
   1dcc4:	bne	1dca8 <sfbpf_parse+0x1644>
   1dcc8:	ldr	r3, [r7]
   1dccc:	cmn	r3, #1
   1dcd0:	str	r3, [sp, #56]	; 0x38
   1dcd4:	bne	1dd08 <sfbpf_parse+0x16a4>
   1dcd8:	add	r5, r5, #8
   1dcdc:	ldr	r3, [r5, #4]
   1dce0:	add	r6, r6, #1
   1dce4:	cmp	r3, #0
   1dce8:	beq	1d7e8 <sfbpf_parse+0x1184>
   1dcec:	ldr	r0, [r3, #4]
   1dcf0:	ldr	r4, [r8]
   1dcf4:	cmp	r0, #0
   1dcf8:	bne	1dca0 <sfbpf_parse+0x163c>
   1dcfc:	mvn	r3, #0
   1dd00:	str	r3, [sp, #56]	; 0x38
   1dd04:	b	1dcd8 <sfbpf_parse+0x1674>
   1dd08:	ldr	r2, [pc, #-1580]	; 1d6e4 <sfbpf_parse+0x1080>
   1dd0c:	ldr	r4, [sp, #44]	; 0x2c
   1dd10:	add	r2, pc, r2
   1dd14:	add	r2, r2, r6, lsl #3
   1dd18:	ldr	r5, [sp, #48]	; 0x30
   1dd1c:	ldr	r2, [r2, #352]	; 0x160
   1dd20:	ldr	r7, [sp, #52]	; 0x34
   1dd24:	orr	r3, r2, r3
   1dd28:	str	r3, [sp, #56]	; 0x38
   1dd2c:	b	1cb38 <sfbpf_parse+0x4d4>
   1dd30:	ldr	r2, [pc, #-1616]	; 1d6e8 <sfbpf_parse+0x1084>
   1dd34:	ldr	r1, [pc, #-1616]	; 1d6ec <sfbpf_parse+0x1088>
   1dd38:	add	r2, pc, r2
   1dd3c:	ldr	r0, [pc, #-1620]	; 1d6f0 <sfbpf_parse+0x108c>
   1dd40:	ldr	r3, [r2]
   1dd44:	add	r1, pc, r1
   1dd48:	add	r3, r3, #1
   1dd4c:	add	r0, pc, r0
   1dd50:	str	r3, [r2]
   1dd54:	bl	2370 <sf_bpf_error>
   1dd58:	ldr	r1, [pc, #-1644]	; 1d6f4 <sfbpf_parse+0x1090>
   1dd5c:	mov	r0, r6
   1dd60:	add	r1, pc, r1
   1dd64:	bl	1c3e0 <sfbpf_strcasecmp>
   1dd68:	cmp	r0, #0
   1dd6c:	bne	1de48 <sfbpf_parse+0x17e4>
   1dd70:	mov	r3, #2
   1dd74:	str	r3, [sp, #56]	; 0x38
   1dd78:	b	1cb38 <sfbpf_parse+0x4d4>
   1dd7c:	ldr	ip, [pc, #-1676]	; 1d6f8 <sfbpf_parse+0x1094>
   1dd80:	ldr	lr, [sp, #40]	; 0x28
   1dd84:	add	ip, pc, ip
   1dd88:	ldr	r1, [pc, #-1684]	; 1d6fc <sfbpf_parse+0x1098>
   1dd8c:	ldr	r2, [ip]
   1dd90:	ldr	r3, [lr]
   1dd94:	ldr	r0, [pc, #-1692]	; 1d700 <sfbpf_parse+0x109c>
   1dd98:	add	r3, r3, #1
   1dd9c:	add	r2, r2, #1
   1dda0:	str	r2, [ip]
   1dda4:	add	r1, pc, r1
   1dda8:	add	r0, pc, r0
   1ddac:	str	r3, [lr]
   1ddb0:	bl	2370 <sf_bpf_error>
   1ddb4:	ldr	r3, [pc, #-1720]	; 1d704 <sfbpf_parse+0x10a0>
   1ddb8:	ldr	r0, [pc, #-1720]	; 1d708 <sfbpf_parse+0x10a4>
   1ddbc:	add	r3, pc, r3
   1ddc0:	add	r0, pc, r0
   1ddc4:	add	r3, r3, #224	; 0xe0
   1ddc8:	str	r4, [sp, #44]	; 0x2c
   1ddcc:	ldr	r6, [r8]
   1ddd0:	mov	r4, r3
   1ddd4:	b	1dde8 <sfbpf_parse+0x1784>
   1ddd8:	add	r4, r4, #8
   1dddc:	ldr	r0, [r4, #4]
   1dde0:	cmp	r0, #0
   1dde4:	beq	1de10 <sfbpf_parse+0x17ac>
   1dde8:	mov	r1, r6
   1ddec:	bl	1c3e0 <sfbpf_strcasecmp>
   1ddf0:	cmp	r0, #0
   1ddf4:	bne	1ddd8 <sfbpf_parse+0x1774>
   1ddf8:	mov	r3, r4
   1ddfc:	ldr	r4, [sp, #44]	; 0x2c
   1de00:	ldr	r3, [r3]
   1de04:	cmn	r3, #1
   1de08:	str	r3, [sp, #56]	; 0x38
   1de0c:	bne	1cb38 <sfbpf_parse+0x4d4>
   1de10:	ldr	r0, [pc, #-1804]	; 1d70c <sfbpf_parse+0x10a8>
   1de14:	add	r0, pc, r0
   1de18:	bl	2370 <sf_bpf_error>
   1de1c:	ldr	r3, [pc, #-1812]	; 1d710 <sfbpf_parse+0x10ac>
   1de20:	ldr	r0, [pc, #-1812]	; 1d714 <sfbpf_parse+0x10b0>
   1de24:	add	r3, pc, r3
   1de28:	add	r0, pc, r0
   1de2c:	add	r3, r3, #168	; 0xa8
   1de30:	b	1ddc8 <sfbpf_parse+0x1764>
   1de34:	ldr	r0, [pc, #-1828]	; 1d718 <sfbpf_parse+0x10b4>
   1de38:	ldr	r3, [pc, #-1828]	; 1d71c <sfbpf_parse+0x10b8>
   1de3c:	add	r0, pc, r0
   1de40:	add	r3, pc, r3
   1de44:	b	1ddc8 <sfbpf_parse+0x1764>
   1de48:	ldr	r1, [pc, #-1840]	; 1d720 <sfbpf_parse+0x10bc>
   1de4c:	mov	r0, r6
   1de50:	add	r1, pc, r1
   1de54:	bl	1c3e0 <sfbpf_strcasecmp>
   1de58:	cmp	r0, #0
   1de5c:	moveq	r3, #3
   1de60:	streq	r3, [sp, #56]	; 0x38
   1de64:	beq	1cb38 <sfbpf_parse+0x4d4>
   1de68:	ldr	r0, [pc, #-1868]	; 1d724 <sfbpf_parse+0x10c0>
   1de6c:	add	r0, pc, r0
   1de70:	bl	2370 <sf_bpf_error>
   1de74:	ldr	r0, [pc, #-1876]	; 1d728 <sfbpf_parse+0x10c4>
   1de78:	add	r0, pc, r0
   1de7c:	bl	2370 <sf_bpf_error>
   1de80:	ldr	r0, [pc, #-1884]	; 1d72c <sfbpf_parse+0x10c8>
   1de84:	add	r0, pc, r0
   1de88:	bl	2370 <sf_bpf_error>
   1de8c:	ldr	r0, [pc, #-1892]	; 1d730 <sfbpf_parse+0x10cc>
   1de90:	add	r0, pc, r0
   1de94:	bl	2370 <sf_bpf_error>
   1de98:	ldr	r0, [pc, #-1900]	; 1d734 <sfbpf_parse+0x10d0>
   1de9c:	add	r0, pc, r0
   1dea0:	bl	2370 <sf_bpf_error>

0001dea4 <yy_fatal_error>:
   1dea4:	ldr	r3, [pc, #40]	; 1ded4 <yy_fatal_error+0x30>
   1dea8:	ldr	ip, [pc, #40]	; 1ded8 <yy_fatal_error+0x34>
   1deac:	add	r3, pc, r3
   1deb0:	push	{r4, lr}
   1deb4:	mov	r2, r0
   1deb8:	ldr	r0, [r3, ip]
   1debc:	ldr	r1, [pc, #24]	; 1dedc <yy_fatal_error+0x38>
   1dec0:	add	r1, pc, r1
   1dec4:	ldr	r0, [r0]
   1dec8:	bl	e64 <fprintf@plt>
   1decc:	mov	r0, #2
   1ded0:	bl	e40 <exit@plt>
   1ded4:	.word	0x0002014c
   1ded8:	.word	0x000000d4
   1dedc:	.word	0x0000f72c

0001dee0 <sfbpf__switch_to_buffer>:
   1dee0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dee4:	mov	r7, r0
   1dee8:	ldr	r6, [pc, #304]	; 1e020 <sfbpf__switch_to_buffer+0x140>
   1deec:	ldr	r8, [pc, #304]	; 1e024 <sfbpf__switch_to_buffer+0x144>
   1def0:	add	r6, pc, r6
   1def4:	add	r8, pc, r8
   1def8:	ldr	r5, [r6, #16]
   1defc:	cmp	r5, #0
   1df00:	beq	1dfe4 <sfbpf__switch_to_buffer+0x104>
   1df04:	ldr	r3, [r6, #20]
   1df08:	ldr	r4, [r6, #24]
   1df0c:	sub	r2, r3, #1
   1df10:	cmp	r2, r4
   1df14:	lslhi	r0, r4, #2
   1df18:	bls	1dfa0 <sfbpf__switch_to_buffer+0xc0>
   1df1c:	ldr	r3, [r5, r0]
   1df20:	add	r0, r5, r0
   1df24:	cmp	r3, r7
   1df28:	beq	1df9c <sfbpf__switch_to_buffer+0xbc>
   1df2c:	cmp	r3, #0
   1df30:	beq	1df5c <sfbpf__switch_to_buffer+0x7c>
   1df34:	ldr	r3, [pc, #236]	; 1e028 <sfbpf__switch_to_buffer+0x148>
   1df38:	add	r3, pc, r3
   1df3c:	ldr	r2, [r3, #4]
   1df40:	ldrb	ip, [r3, #28]
   1df44:	ldr	r1, [r3, #32]
   1df48:	strb	ip, [r2]
   1df4c:	ldr	r3, [r0]
   1df50:	str	r2, [r3, #8]
   1df54:	ldr	r3, [r0]
   1df58:	str	r1, [r3, #16]
   1df5c:	ldr	r3, [pc, #200]	; 1e02c <sfbpf__switch_to_buffer+0x14c>
   1df60:	ldr	r1, [pc, #200]	; 1e030 <sfbpf__switch_to_buffer+0x150>
   1df64:	str	r7, [r0]
   1df68:	add	r3, pc, r3
   1df6c:	ldr	r2, [r7, #8]
   1df70:	ldr	ip, [r7, #16]
   1df74:	str	r2, [r3, #4]
   1df78:	str	ip, [r3, #32]
   1df7c:	ldr	r1, [r8, r1]
   1df80:	str	r2, [r1]
   1df84:	ldr	r1, [r0]
   1df88:	ldr	r1, [r1]
   1df8c:	str	r1, [r3, #36]	; 0x24
   1df90:	ldrb	r2, [r2]
   1df94:	strb	r2, [r3, #28]
   1df98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1df9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dfa0:	add	r9, r3, #8
   1dfa4:	mov	r0, r5
   1dfa8:	lsl	sl, r9, #2
   1dfac:	mov	r1, sl
   1dfb0:	bl	dec <realloc@plt>
   1dfb4:	cmp	r0, #0
   1dfb8:	mov	r5, r0
   1dfbc:	str	r0, [r6, #16]
   1dfc0:	beq	1e014 <sfbpf__switch_to_buffer+0x134>
   1dfc4:	sub	r0, sl, #32
   1dfc8:	add	r0, r5, r0
   1dfcc:	mov	r2, #32
   1dfd0:	mov	r1, #0
   1dfd4:	bl	e88 <memset@plt>
   1dfd8:	str	r9, [r6, #20]
   1dfdc:	lsl	r0, r4, #2
   1dfe0:	b	1df1c <sfbpf__switch_to_buffer+0x3c>
   1dfe4:	mov	r1, #1
   1dfe8:	mov	r0, #4
   1dfec:	bl	d38 <calloc@plt>
   1dff0:	cmp	r0, #0
   1dff4:	str	r0, [r6, #16]
   1dff8:	beq	1e014 <sfbpf__switch_to_buffer+0x134>
   1dffc:	mov	r3, #1
   1e000:	str	r5, [r6, #24]
   1e004:	str	r3, [r6, #20]
   1e008:	mov	r5, r0
   1e00c:	mov	r0, #0
   1e010:	b	1df1c <sfbpf__switch_to_buffer+0x3c>
   1e014:	ldr	r0, [pc, #24]	; 1e034 <sfbpf__switch_to_buffer+0x154>
   1e018:	add	r0, pc, r0
   1e01c:	bl	1dea4 <yy_fatal_error>
   1e020:	.word	0x00020c50
   1e024:	.word	0x00020104
   1e028:	.word	0x00020c08
   1e02c:	.word	0x00020bd8
   1e030:	.word	0x000000dc
   1e034:	.word	0x0000f5d8

0001e038 <sfbpf__create_buffer>:
   1e038:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e03c:	mov	r6, r0
   1e040:	mov	r0, #48	; 0x30
   1e044:	mov	r5, r1
   1e048:	bl	e1c <malloc@plt>
   1e04c:	ldr	r7, [pc, #276]	; 1e168 <sfbpf__create_buffer+0x130>
   1e050:	add	r7, pc, r7
   1e054:	subs	r4, r0, #0
   1e058:	beq	1e15c <sfbpf__create_buffer+0x124>
   1e05c:	str	r5, [r4, #12]
   1e060:	add	r0, r5, #2
   1e064:	bl	e1c <malloc@plt>
   1e068:	cmp	r0, #0
   1e06c:	mov	r5, r0
   1e070:	str	r0, [r4, #4]
   1e074:	beq	1e15c <sfbpf__create_buffer+0x124>
   1e078:	bl	e70 <__errno_location@plt>
   1e07c:	ldr	ip, [pc, #232]	; 1e16c <sfbpf__create_buffer+0x134>
   1e080:	mov	r1, #1
   1e084:	add	ip, pc, ip
   1e088:	mov	r3, #0
   1e08c:	ldr	r2, [ip, #16]
   1e090:	str	r5, [r4, #8]
   1e094:	cmp	r2, r3
   1e098:	strb	r3, [r5]
   1e09c:	strb	r3, [r5, #1]
   1e0a0:	str	r3, [r4, #44]	; 0x2c
   1e0a4:	mov	r8, r0
   1e0a8:	mov	r0, #0
   1e0ac:	ldr	r9, [r8]
   1e0b0:	strd	r0, [r4, #16]
   1e0b4:	mov	r1, #1
   1e0b8:	str	r1, [r4, #28]
   1e0bc:	beq	1e150 <sfbpf__create_buffer+0x118>
   1e0c0:	ldr	r1, [ip, #24]
   1e0c4:	ldr	r0, [r2, r1, lsl #2]
   1e0c8:	cmp	r4, r0
   1e0cc:	beq	1e128 <sfbpf__create_buffer+0xf0>
   1e0d0:	mov	r3, #1
   1e0d4:	str	r6, [r4]
   1e0d8:	str	r3, [r4, #40]	; 0x28
   1e0dc:	ldr	r3, [r2, r1, lsl #2]
   1e0e0:	cmp	r4, r3
   1e0e4:	beq	1e0f8 <sfbpf__create_buffer+0xc0>
   1e0e8:	mov	r2, #1
   1e0ec:	mov	r3, #0
   1e0f0:	str	r2, [r4, #32]
   1e0f4:	str	r3, [r4, #36]	; 0x24
   1e0f8:	cmp	r6, #0
   1e0fc:	beq	1e118 <sfbpf__create_buffer+0xe0>
   1e100:	mov	r0, r6
   1e104:	bl	eac <fileno@plt>
   1e108:	bl	f0c <isatty@plt>
   1e10c:	cmp	r0, #0
   1e110:	movle	r6, #0
   1e114:	movgt	r6, #1
   1e118:	str	r6, [r4, #24]
   1e11c:	str	r9, [r8]
   1e120:	mov	r0, r4
   1e124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e128:	ldr	r0, [pc, #64]	; 1e170 <sfbpf__create_buffer+0x138>
   1e12c:	str	r3, [ip, #32]
   1e130:	str	r5, [ip, #4]
   1e134:	ldr	r0, [r7, r0]
   1e138:	strb	r3, [ip, #28]
   1e13c:	str	r5, [r0]
   1e140:	ldr	r3, [r2, r1, lsl #2]
   1e144:	ldr	r3, [r3]
   1e148:	str	r3, [ip, #36]	; 0x24
   1e14c:	b	1e0d0 <sfbpf__create_buffer+0x98>
   1e150:	str	r6, [r4]
   1e154:	str	r1, [r4, #40]	; 0x28
   1e158:	b	1e0e8 <sfbpf__create_buffer+0xb0>
   1e15c:	ldr	r0, [pc, #16]	; 1e174 <sfbpf__create_buffer+0x13c>
   1e160:	add	r0, pc, r0
   1e164:	bl	1dea4 <yy_fatal_error>
   1e168:	.word	0x0001ffa8
   1e16c:	.word	0x00020abc
   1e170:	.word	0x000000dc
   1e174:	.word	0x0000f4c4

0001e178 <sfbpf_restart>:
   1e178:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e17c:	mov	r5, r0
   1e180:	ldr	r8, [pc, #496]	; 1e378 <sfbpf_restart+0x200>
   1e184:	ldr	r9, [pc, #496]	; 1e37c <sfbpf_restart+0x204>
   1e188:	add	r8, pc, r8
   1e18c:	add	r9, pc, r9
   1e190:	ldr	r7, [r8, #16]
   1e194:	cmp	r7, #0
   1e198:	beq	1e344 <sfbpf_restart+0x1cc>
   1e19c:	ldr	r3, [r8, #24]
   1e1a0:	ldr	r4, [r7, r3, lsl #2]
   1e1a4:	lsl	sl, r3, #2
   1e1a8:	cmp	r4, #0
   1e1ac:	add	r6, r7, sl
   1e1b0:	beq	1e2b8 <sfbpf_restart+0x140>
   1e1b4:	bl	e70 <__errno_location@plt>
   1e1b8:	ldr	sl, [r0]
   1e1bc:	mov	r7, r0
   1e1c0:	ldr	r2, [r4, #4]
   1e1c4:	mov	r3, #0
   1e1c8:	str	r3, [r4, #16]
   1e1cc:	strb	r3, [r2]
   1e1d0:	ldr	r2, [r4, #4]
   1e1d4:	mov	r1, #1
   1e1d8:	strb	r3, [r2, #1]
   1e1dc:	ldr	r2, [r4, #4]
   1e1e0:	str	r3, [r4, #44]	; 0x2c
   1e1e4:	str	r2, [r4, #8]
   1e1e8:	str	r1, [r4, #28]
   1e1ec:	ldr	r3, [r6]
   1e1f0:	cmp	r3, r4
   1e1f4:	beq	1e280 <sfbpf_restart+0x108>
   1e1f8:	ldr	r3, [pc, #384]	; 1e380 <sfbpf_restart+0x208>
   1e1fc:	ldr	r8, [r9, r3]
   1e200:	mov	r3, #1
   1e204:	str	r5, [r4]
   1e208:	str	r3, [r4, #40]	; 0x28
   1e20c:	ldr	r2, [r6]
   1e210:	cmp	r2, r4
   1e214:	movne	r2, #0
   1e218:	strne	r3, [r4, #32]
   1e21c:	strne	r2, [r4, #36]	; 0x24
   1e220:	cmp	r5, #0
   1e224:	beq	1e240 <sfbpf_restart+0xc8>
   1e228:	mov	r0, r5
   1e22c:	bl	eac <fileno@plt>
   1e230:	bl	f0c <isatty@plt>
   1e234:	cmp	r0, #0
   1e238:	movle	r5, #0
   1e23c:	movgt	r5, #1
   1e240:	str	r5, [r4, #24]
   1e244:	str	sl, [r7]
   1e248:	ldr	r1, [r6]
   1e24c:	ldr	r3, [pc, #304]	; 1e384 <sfbpf_restart+0x20c>
   1e250:	ldr	r2, [r1, #8]
   1e254:	ldr	r0, [r1, #16]
   1e258:	str	r2, [r8]
   1e25c:	ldr	r1, [r6]
   1e260:	add	r3, pc, r3
   1e264:	ldr	r1, [r1]
   1e268:	str	r2, [r3, #4]
   1e26c:	str	r1, [r3, #36]	; 0x24
   1e270:	ldrb	r2, [r2]
   1e274:	str	r0, [r3, #32]
   1e278:	strb	r2, [r3, #28]
   1e27c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e280:	ldr	r3, [pc, #256]	; 1e388 <sfbpf_restart+0x210>
   1e284:	ldr	r1, [pc, #244]	; 1e380 <sfbpf_restart+0x208>
   1e288:	add	r3, pc, r3
   1e28c:	ldr	r0, [r4, #16]
   1e290:	str	r2, [r3, #4]
   1e294:	str	r0, [r3, #32]
   1e298:	ldr	r8, [r9, r1]
   1e29c:	str	r2, [r8]
   1e2a0:	ldr	r1, [r6]
   1e2a4:	ldr	r1, [r1]
   1e2a8:	str	r1, [r3, #36]	; 0x24
   1e2ac:	ldrb	r2, [r2]
   1e2b0:	strb	r2, [r3, #28]
   1e2b4:	b	1e200 <sfbpf_restart+0x88>
   1e2b8:	ldr	r2, [r8, #20]
   1e2bc:	sub	r1, r2, #1
   1e2c0:	cmp	r3, r1
   1e2c4:	bcs	1e300 <sfbpf_restart+0x188>
   1e2c8:	ldr	r3, [pc, #188]	; 1e38c <sfbpf_restart+0x214>
   1e2cc:	mov	r1, #16384	; 0x4000
   1e2d0:	add	r3, pc, r3
   1e2d4:	ldr	r0, [r3, #36]	; 0x24
   1e2d8:	bl	1e038 <sfbpf__create_buffer>
   1e2dc:	str	r0, [r6]
   1e2e0:	mov	r4, r0
   1e2e4:	bl	e70 <__errno_location@plt>
   1e2e8:	cmp	r4, #0
   1e2ec:	mov	r7, r0
   1e2f0:	ldr	sl, [r0]
   1e2f4:	bne	1e1c0 <sfbpf_restart+0x48>
   1e2f8:	str	r5, [r4]
   1e2fc:	udf	#0
   1e300:	add	fp, r2, #8
   1e304:	mov	r0, r7
   1e308:	lsl	r7, fp, #2
   1e30c:	mov	r1, r7
   1e310:	bl	dec <realloc@plt>
   1e314:	cmp	r0, #0
   1e318:	mov	r6, r0
   1e31c:	str	r0, [r8, #16]
   1e320:	beq	1e36c <sfbpf_restart+0x1f4>
   1e324:	sub	r0, r7, #32
   1e328:	add	r0, r6, r0
   1e32c:	mov	r1, r4
   1e330:	mov	r2, #32
   1e334:	bl	e88 <memset@plt>
   1e338:	add	r6, r6, sl
   1e33c:	str	fp, [r8, #20]
   1e340:	b	1e2c8 <sfbpf_restart+0x150>
   1e344:	mov	r1, #1
   1e348:	mov	r0, #4
   1e34c:	bl	d38 <calloc@plt>
   1e350:	cmp	r0, #0
   1e354:	movne	r3, #1
   1e358:	str	r0, [r8, #16]
   1e35c:	strne	r7, [r8, #24]
   1e360:	movne	r6, r0
   1e364:	strne	r3, [r8, #20]
   1e368:	bne	1e2c8 <sfbpf_restart+0x150>
   1e36c:	ldr	r0, [pc, #28]	; 1e390 <sfbpf_restart+0x218>
   1e370:	add	r0, pc, r0
   1e374:	bl	1dea4 <yy_fatal_error>
   1e378:	.word	0x000209b8
   1e37c:	.word	0x0001fe6c
   1e380:	.word	0x000000dc
   1e384:	.word	0x000208e0
   1e388:	.word	0x000208b8
   1e38c:	.word	0x00020870
   1e390:	.word	0x0000f280

0001e394 <sfbpf_lex>:
   1e394:	ldr	r3, [pc, #4080]	; 1f38c <sfbpf_lex+0xff8>
   1e398:	ldr	r2, [pc, #4080]	; 1f390 <sfbpf_lex+0xffc>
   1e39c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3a0:	add	r3, pc, r3
   1e3a4:	sub	sp, sp, #132	; 0x84
   1e3a8:	add	r2, pc, r2
   1e3ac:	mov	r0, r2
   1e3b0:	str	r2, [sp, #20]
   1e3b4:	ldr	r2, [r3, #40]	; 0x28
   1e3b8:	cmp	r2, #0
   1e3bc:	beq	1e888 <sfbpf_lex+0x4f4>
   1e3c0:	ldr	r2, [pc, #4044]	; 1f394 <sfbpf_lex+0x1000>
   1e3c4:	ldr	fp, [r3, #4]
   1e3c8:	ldrb	r1, [r3, #28]
   1e3cc:	mov	r3, r2
   1e3d0:	mov	lr, r0
   1e3d4:	ldr	r3, [r0, r3]
   1e3d8:	str	r3, [sp, #24]
   1e3dc:	ldr	r6, [pc, #4020]	; 1f398 <sfbpf_lex+0x1004>
   1e3e0:	ldr	r2, [pc, #4020]	; 1f39c <sfbpf_lex+0x1008>
   1e3e4:	add	r6, pc, r6
   1e3e8:	ldr	r0, [pc, #4016]	; 1f3a0 <sfbpf_lex+0x100c>
   1e3ec:	add	r2, pc, r2
   1e3f0:	ldr	r3, [pc, #4012]	; 1f3a4 <sfbpf_lex+0x1010>
   1e3f4:	add	ip, r6, #2560	; 0xa00
   1e3f8:	add	r2, r2, #3120	; 0xc30
   1e3fc:	add	r8, ip, #12
   1e400:	add	sl, r2, #4
   1e404:	add	r3, pc, r3
   1e408:	ldr	r0, [lr, r0]
   1e40c:	add	r3, r3, #1104	; 0x450
   1e410:	mov	r9, r8
   1e414:	mov	r8, sl
   1e418:	mov	sl, r6
   1e41c:	add	r3, r3, #12
   1e420:	str	r0, [sp, #32]
   1e424:	str	r3, [sp, #4]
   1e428:	ldr	r3, [pc, #3960]	; 1f3a8 <sfbpf_lex+0x1014>
   1e42c:	str	fp, [sp, #28]
   1e430:	add	r3, pc, r3
   1e434:	strb	r1, [fp]
   1e438:	ldr	r7, [r3]
   1e43c:	mov	r3, r8
   1e440:	mov	r4, fp
   1e444:	mov	r8, r9
   1e448:	mov	fp, sl
   1e44c:	mov	r9, r3
   1e450:	ldr	r3, [pc, #3924]	; 1f3ac <sfbpf_lex+0x1018>
   1e454:	ldr	r0, [pc, #3924]	; 1f3b0 <sfbpf_lex+0x101c>
   1e458:	add	r3, pc, r3
   1e45c:	add	r0, pc, r0
   1e460:	lsl	r2, r7, #1
   1e464:	sub	r3, r3, #1216	; 0x4c0
   1e468:	ldr	ip, [r0, #8]
   1e46c:	ldr	r1, [pc, #3904]	; 1f3b4 <sfbpf_lex+0x1020>
   1e470:	ldr	r0, [r0, #12]
   1e474:	ldr	r6, [pc, #3900]	; 1f3b8 <sfbpf_lex+0x1024>
   1e478:	ldrsh	r3, [r3, r2]
   1e47c:	add	r1, pc, r1
   1e480:	str	r0, [sp, #16]
   1e484:	ldr	r0, [pc, #3888]	; 1f3bc <sfbpf_lex+0x1028>
   1e488:	add	r6, pc, r6
   1e48c:	mov	sl, r4
   1e490:	sub	r1, r1, #1216	; 0x4c0
   1e494:	str	ip, [sp, #12]
   1e498:	mov	r5, #0
   1e49c:	add	ip, r6, #256	; 0x100
   1e4a0:	str	ip, [sp]
   1e4a4:	str	r5, [sp, #8]
   1e4a8:	ldr	ip, [sp]
   1e4ac:	ldrb	r4, [sl]
   1e4b0:	mov	lr, sl
   1e4b4:	ldrsh	ip, [ip, r2]
   1e4b8:	add	sl, sl, #1
   1e4bc:	cmp	ip, #0
   1e4c0:	ldrb	ip, [r6, r4]
   1e4c4:	movne	r5, #1
   1e4c8:	strne	lr, [sp, #16]
   1e4cc:	strne	r5, [sp, #8]
   1e4d0:	strne	r7, [sp, #12]
   1e4d4:	b	1e4f0 <sfbpf_lex+0x15c>
   1e4d8:	ldrsh	r7, [r9, r2]
   1e4dc:	cmp	r7, r0
   1e4e0:	addgt	ip, fp, ip
   1e4e4:	lsl	r2, r7, #1
   1e4e8:	ldrbgt	ip, [ip, #-1272]	; 0xfffffb08
   1e4ec:	ldrsh	r3, [r1, r2]
   1e4f0:	add	r3, r3, ip
   1e4f4:	lsl	r3, r3, #1
   1e4f8:	ldrsh	lr, [r8, r3]
   1e4fc:	cmp	r7, lr
   1e500:	bne	1e4d8 <sfbpf_lex+0x144>
   1e504:	ldr	r2, [sp, #4]
   1e508:	ldr	ip, [pc, #3760]	; 1f3c0 <sfbpf_lex+0x102c>
   1e50c:	mov	r4, sl
   1e510:	ldrsh	r7, [r2, r3]
   1e514:	sub	r3, fp, #1216	; 0x4c0
   1e518:	lsl	r2, r7, #1
   1e51c:	ldrsh	r3, [r3, r2]
   1e520:	cmp	r3, ip
   1e524:	bne	1e4a8 <sfbpf_lex+0x114>
   1e528:	ldr	r3, [sp, #8]
   1e52c:	cmp	r3, #0
   1e530:	bne	1fbf8 <sfbpf_lex+0x1864>
   1e534:	cmp	r5, #0
   1e538:	bne	1f6ac <sfbpf_lex+0x1318>
   1e53c:	ldr	r1, [pc, #3712]	; 1f3c4 <sfbpf_lex+0x1030>
   1e540:	ldr	r3, [pc, #3712]	; 1f3c8 <sfbpf_lex+0x1034>
   1e544:	add	r1, pc, r1
   1e548:	mov	r0, r1
   1e54c:	add	r3, pc, r3
   1e550:	str	r1, [sp, #48]	; 0x30
   1e554:	ldr	r1, [pc, #3696]	; 1f3cc <sfbpf_lex+0x1038>
   1e558:	add	r3, r3, #256	; 0x100
   1e55c:	add	r1, pc, r1
   1e560:	add	r0, r0, #2560	; 0xa00
   1e564:	add	r1, r1, #1104	; 0x450
   1e568:	ldrsh	r3, [r3, r2]
   1e56c:	str	fp, [sp]
   1e570:	add	r2, r0, #12
   1e574:	mov	fp, r4
   1e578:	str	r2, [sp, #52]	; 0x34
   1e57c:	add	r2, r1, #12
   1e580:	str	r2, [sp, #56]	; 0x38
   1e584:	str	r8, [sp, #8]
   1e588:	str	r9, [sp, #12]
   1e58c:	cmp	r3, #0
   1e590:	bne	1e5b8 <sfbpf_lex+0x224>
   1e594:	ldr	r2, [pc, #3636]	; 1f3d0 <sfbpf_lex+0x103c>
   1e598:	ldr	r3, [pc, #3636]	; 1f3d4 <sfbpf_lex+0x1040>
   1e59c:	add	r2, pc, r2
   1e5a0:	add	r3, pc, r3
   1e5a4:	ldr	r1, [r2, #8]
   1e5a8:	add	r3, r3, #256	; 0x100
   1e5ac:	ldr	fp, [r2, #12]
   1e5b0:	lsl	r2, r1, #1
   1e5b4:	ldrsh	r3, [r3, r2]
   1e5b8:	ldr	r0, [sp, #24]
   1e5bc:	ldr	r1, [sp, #28]
   1e5c0:	ldr	r4, [pc, #3600]	; 1f3d8 <sfbpf_lex+0x1044>
   1e5c4:	str	r1, [r0]
   1e5c8:	ldr	r0, [pc, #3596]	; 1f3dc <sfbpf_lex+0x1048>
   1e5cc:	sub	r2, fp, r1
   1e5d0:	add	r0, pc, r0
   1e5d4:	str	r0, [sp, #16]
   1e5d8:	ldr	r0, [pc, #3584]	; 1f3e0 <sfbpf_lex+0x104c>
   1e5dc:	ldr	r1, [sp, #32]
   1e5e0:	add	r0, pc, r0
   1e5e4:	str	r0, [sp, #36]	; 0x24
   1e5e8:	ldr	r0, [pc, #3572]	; 1f3e4 <sfbpf_lex+0x1050>
   1e5ec:	str	r2, [r1]
   1e5f0:	ldr	r2, [pc, #3568]	; 1f3e8 <sfbpf_lex+0x1054>
   1e5f4:	ldrb	r1, [fp]
   1e5f8:	add	r0, pc, r0
   1e5fc:	ldr	r6, [pc, #3560]	; 1f3ec <sfbpf_lex+0x1058>
   1e600:	add	r2, pc, r2
   1e604:	str	r0, [sp, #40]	; 0x28
   1e608:	ldr	r0, [pc, #3552]	; 1f3f0 <sfbpf_lex+0x105c>
   1e60c:	add	r4, pc, r4
   1e610:	add	r6, pc, r6
   1e614:	mov	lr, fp
   1e618:	add	r0, pc, r0
   1e61c:	strb	r1, [r2, #28]
   1e620:	str	fp, [r2, #4]
   1e624:	mov	r2, #0
   1e628:	str	r0, [sp, #44]	; 0x2c
   1e62c:	strb	r2, [fp]
   1e630:	cmp	r3, #146	; 0x92
   1e634:	addls	pc, pc, r3, lsl #2
   1e638:	b	1f378 <sfbpf_lex+0xfe4>
   1e63c:	b	1f0e8 <sfbpf_lex+0xd54>
   1e640:	b	1f0e0 <sfbpf_lex+0xd4c>
   1e644:	b	1f0d8 <sfbpf_lex+0xd44>
   1e648:	b	1f0d0 <sfbpf_lex+0xd3c>
   1e64c:	b	1f0d0 <sfbpf_lex+0xd3c>
   1e650:	b	1f18c <sfbpf_lex+0xdf8>
   1e654:	b	1f184 <sfbpf_lex+0xdf0>
   1e658:	b	1f17c <sfbpf_lex+0xde8>
   1e65c:	b	1f174 <sfbpf_lex+0xde0>
   1e660:	b	1f16c <sfbpf_lex+0xdd8>
   1e664:	b	1f164 <sfbpf_lex+0xdd0>
   1e668:	b	1f15c <sfbpf_lex+0xdc8>
   1e66c:	b	1f154 <sfbpf_lex+0xdc0>
   1e670:	b	1f14c <sfbpf_lex+0xdb8>
   1e674:	b	1f144 <sfbpf_lex+0xdb0>
   1e678:	b	1f13c <sfbpf_lex+0xda8>
   1e67c:	b	1f134 <sfbpf_lex+0xda0>
   1e680:	b	1f12c <sfbpf_lex+0xd98>
   1e684:	b	1f124 <sfbpf_lex+0xd90>
   1e688:	b	1f11c <sfbpf_lex+0xd88>
   1e68c:	b	1ebcc <sfbpf_lex+0x838>
   1e690:	b	1ebc4 <sfbpf_lex+0x830>
   1e694:	b	1ebbc <sfbpf_lex+0x828>
   1e698:	b	1ebb4 <sfbpf_lex+0x820>
   1e69c:	b	1ebac <sfbpf_lex+0x818>
   1e6a0:	b	1eba4 <sfbpf_lex+0x810>
   1e6a4:	b	1eb9c <sfbpf_lex+0x808>
   1e6a8:	b	1eb94 <sfbpf_lex+0x800>
   1e6ac:	b	1eb8c <sfbpf_lex+0x7f8>
   1e6b0:	b	1eb84 <sfbpf_lex+0x7f0>
   1e6b4:	b	1eb7c <sfbpf_lex+0x7e8>
   1e6b8:	b	1eb74 <sfbpf_lex+0x7e0>
   1e6bc:	b	1eb6c <sfbpf_lex+0x7d8>
   1e6c0:	b	1eb64 <sfbpf_lex+0x7d0>
   1e6c4:	b	1eb5c <sfbpf_lex+0x7c8>
   1e6c8:	b	1eb54 <sfbpf_lex+0x7c0>
   1e6cc:	b	1eb4c <sfbpf_lex+0x7b8>
   1e6d0:	b	1eb44 <sfbpf_lex+0x7b0>
   1e6d4:	b	1eb3c <sfbpf_lex+0x7a8>
   1e6d8:	b	1eb34 <sfbpf_lex+0x7a0>
   1e6dc:	b	1eb2c <sfbpf_lex+0x798>
   1e6e0:	b	1eb24 <sfbpf_lex+0x790>
   1e6e4:	b	1eb1c <sfbpf_lex+0x788>
   1e6e8:	b	1eb14 <sfbpf_lex+0x780>
   1e6ec:	b	1eb0c <sfbpf_lex+0x778>
   1e6f0:	b	1eb04 <sfbpf_lex+0x770>
   1e6f4:	b	1eafc <sfbpf_lex+0x768>
   1e6f8:	b	1eaf4 <sfbpf_lex+0x760>
   1e6fc:	b	1eaec <sfbpf_lex+0x758>
   1e700:	b	1eae4 <sfbpf_lex+0x750>
   1e704:	b	1eadc <sfbpf_lex+0x748>
   1e708:	b	1ead4 <sfbpf_lex+0x740>
   1e70c:	b	1eacc <sfbpf_lex+0x738>
   1e710:	b	1eac4 <sfbpf_lex+0x730>
   1e714:	b	1eabc <sfbpf_lex+0x728>
   1e718:	b	1eab4 <sfbpf_lex+0x720>
   1e71c:	b	1eaac <sfbpf_lex+0x718>
   1e720:	b	1eaa4 <sfbpf_lex+0x710>
   1e724:	b	1ea9c <sfbpf_lex+0x708>
   1e728:	b	1ea94 <sfbpf_lex+0x700>
   1e72c:	b	1ea8c <sfbpf_lex+0x6f8>
   1e730:	b	1ea84 <sfbpf_lex+0x6f0>
   1e734:	b	1ea7c <sfbpf_lex+0x6e8>
   1e738:	b	1ea74 <sfbpf_lex+0x6e0>
   1e73c:	b	1ea6c <sfbpf_lex+0x6d8>
   1e740:	b	1ea64 <sfbpf_lex+0x6d0>
   1e744:	b	1ea5c <sfbpf_lex+0x6c8>
   1e748:	b	1ea54 <sfbpf_lex+0x6c0>
   1e74c:	b	1ea4c <sfbpf_lex+0x6b8>
   1e750:	b	1ea44 <sfbpf_lex+0x6b0>
   1e754:	b	1ea3c <sfbpf_lex+0x6a8>
   1e758:	b	1ea34 <sfbpf_lex+0x6a0>
   1e75c:	b	1ea2c <sfbpf_lex+0x698>
   1e760:	b	1ea24 <sfbpf_lex+0x690>
   1e764:	b	1ea1c <sfbpf_lex+0x688>
   1e768:	b	1ea14 <sfbpf_lex+0x680>
   1e76c:	b	1ea0c <sfbpf_lex+0x678>
   1e770:	b	1ea04 <sfbpf_lex+0x670>
   1e774:	b	1e9fc <sfbpf_lex+0x668>
   1e778:	b	1e9f4 <sfbpf_lex+0x660>
   1e77c:	b	1e9ec <sfbpf_lex+0x658>
   1e780:	b	1e9e4 <sfbpf_lex+0x650>
   1e784:	b	1e9dc <sfbpf_lex+0x648>
   1e788:	b	1e9cc <sfbpf_lex+0x638>
   1e78c:	b	1ee28 <sfbpf_lex+0xa94>
   1e790:	b	1ee20 <sfbpf_lex+0xa8c>
   1e794:	b	1ee18 <sfbpf_lex+0xa84>
   1e798:	b	1ee10 <sfbpf_lex+0xa7c>
   1e79c:	b	1ee08 <sfbpf_lex+0xa74>
   1e7a0:	b	1ee00 <sfbpf_lex+0xa6c>
   1e7a4:	b	1edf8 <sfbpf_lex+0xa64>
   1e7a8:	b	1edf0 <sfbpf_lex+0xa5c>
   1e7ac:	b	1ede8 <sfbpf_lex+0xa54>
   1e7b0:	b	1ede0 <sfbpf_lex+0xa4c>
   1e7b4:	b	1edd8 <sfbpf_lex+0xa44>
   1e7b8:	b	1edd0 <sfbpf_lex+0xa3c>
   1e7bc:	b	1edc8 <sfbpf_lex+0xa34>
   1e7c0:	b	1edc0 <sfbpf_lex+0xa2c>
   1e7c4:	b	1ecd4 <sfbpf_lex+0x940>
   1e7c8:	b	1eccc <sfbpf_lex+0x938>
   1e7cc:	b	1ecc4 <sfbpf_lex+0x930>
   1e7d0:	b	1ecbc <sfbpf_lex+0x928>
   1e7d4:	b	1ec9c <sfbpf_lex+0x908>
   1e7d8:	b	1ec8c <sfbpf_lex+0x8f8>
   1e7dc:	b	1ec84 <sfbpf_lex+0x8f0>
   1e7e0:	b	1ec7c <sfbpf_lex+0x8e8>
   1e7e4:	b	1ecf4 <sfbpf_lex+0x960>
   1e7e8:	b	1ecec <sfbpf_lex+0x958>
   1e7ec:	b	1ece4 <sfbpf_lex+0x950>
   1e7f0:	b	1ecdc <sfbpf_lex+0x948>
   1e7f4:	b	1ed20 <sfbpf_lex+0x98c>
   1e7f8:	b	1ecfc <sfbpf_lex+0x968>
   1e7fc:	b	1ed48 <sfbpf_lex+0x9b4>
   1e800:	b	1ec58 <sfbpf_lex+0x8c4>
   1e804:	b	1ebe8 <sfbpf_lex+0x854>
   1e808:	b	1ebd4 <sfbpf_lex+0x840>
   1e80c:	b	1efd4 <sfbpf_lex+0xc40>
   1e810:	b	1efb8 <sfbpf_lex+0xc24>
   1e814:	b	1ef9c <sfbpf_lex+0xc08>
   1e818:	b	1ef80 <sfbpf_lex+0xbec>
   1e81c:	b	1ef64 <sfbpf_lex+0xbd0>
   1e820:	b	1ef48 <sfbpf_lex+0xbb4>
   1e824:	b	1ef2c <sfbpf_lex+0xb98>
   1e828:	b	1ef10 <sfbpf_lex+0xb7c>
   1e82c:	b	1eef4 <sfbpf_lex+0xb60>
   1e830:	b	1eed8 <sfbpf_lex+0xb44>
   1e834:	b	1eebc <sfbpf_lex+0xb28>
   1e838:	b	1eea0 <sfbpf_lex+0xb0c>
   1e83c:	b	1ee84 <sfbpf_lex+0xaf0>
   1e840:	b	1ee68 <sfbpf_lex+0xad4>
   1e844:	b	1ee4c <sfbpf_lex+0xab8>
   1e848:	b	1ee30 <sfbpf_lex+0xa9c>
   1e84c:	b	1f0b4 <sfbpf_lex+0xd20>
   1e850:	b	1f098 <sfbpf_lex+0xd04>
   1e854:	b	1f07c <sfbpf_lex+0xce8>
   1e858:	b	1f060 <sfbpf_lex+0xccc>
   1e85c:	b	1f044 <sfbpf_lex+0xcb0>
   1e860:	b	1f028 <sfbpf_lex+0xc94>
   1e864:	b	1f00c <sfbpf_lex+0xc78>
   1e868:	b	1eff0 <sfbpf_lex+0xc5c>
   1e86c:	b	1f1f0 <sfbpf_lex+0xe5c>
   1e870:	b	1f1c8 <sfbpf_lex+0xe34>
   1e874:	b	1f1b4 <sfbpf_lex+0xe20>
   1e878:	b	1f19c <sfbpf_lex+0xe08>
   1e87c:	b	1f2fc <sfbpf_lex+0xf68>
   1e880:	b	1f214 <sfbpf_lex+0xe80>
   1e884:	b	1f194 <sfbpf_lex+0xe00>
   1e888:	ldr	r1, [r3]
   1e88c:	mov	r2, #1
   1e890:	cmp	r1, #0
   1e894:	streq	r2, [r3]
   1e898:	str	r2, [r3, #40]	; 0x28
   1e89c:	ldr	r3, [pc, #2896]	; 1f3f4 <sfbpf_lex+0x1060>
   1e8a0:	add	r3, pc, r3
   1e8a4:	ldr	r2, [r3, #36]	; 0x24
   1e8a8:	cmp	r2, #0
   1e8ac:	beq	1e950 <sfbpf_lex+0x5bc>
   1e8b0:	ldr	r3, [pc, #2880]	; 1f3f8 <sfbpf_lex+0x1064>
   1e8b4:	add	r3, pc, r3
   1e8b8:	ldr	r2, [r3, #44]	; 0x2c
   1e8bc:	cmp	r2, #0
   1e8c0:	beq	1e938 <sfbpf_lex+0x5a4>
   1e8c4:	ldr	r5, [pc, #2864]	; 1f3fc <sfbpf_lex+0x1068>
   1e8c8:	add	r5, pc, r5
   1e8cc:	ldr	r7, [r5, #16]
   1e8d0:	cmp	r7, #0
   1e8d4:	beq	1e998 <sfbpf_lex+0x604>
   1e8d8:	ldr	r3, [r5, #24]
   1e8dc:	ldr	r4, [r7, r3, lsl #2]
   1e8e0:	lsl	r8, r3, #2
   1e8e4:	cmp	r4, #0
   1e8e8:	add	r6, r7, r8
   1e8ec:	beq	1e968 <sfbpf_lex+0x5d4>
   1e8f0:	ldr	r3, [pc, #2824]	; 1f400 <sfbpf_lex+0x106c>
   1e8f4:	ldr	r1, [r4, #16]
   1e8f8:	add	r3, pc, r3
   1e8fc:	ldr	r2, [pc, #2704]	; 1f394 <sfbpf_lex+0x1000>
   1e900:	str	r1, [r3, #32]
   1e904:	ldr	r1, [sp, #20]
   1e908:	ldr	fp, [r4, #8]
   1e90c:	ldr	lr, [sp, #20]
   1e910:	str	fp, [r3, #4]
   1e914:	ldr	r2, [r1, r2]
   1e918:	str	r2, [sp, #24]
   1e91c:	str	fp, [r2]
   1e920:	ldr	r2, [r6]
   1e924:	ldr	r2, [r2]
   1e928:	str	r2, [r3, #36]	; 0x24
   1e92c:	ldrb	r1, [fp]
   1e930:	strb	r1, [r3, #28]
   1e934:	b	1e3dc <sfbpf_lex+0x48>
   1e938:	ldr	r2, [pc, #2756]	; 1f404 <sfbpf_lex+0x1070>
   1e93c:	ldr	r1, [sp, #20]
   1e940:	ldr	r2, [r1, r2]
   1e944:	ldr	r2, [r2]
   1e948:	str	r2, [r3, #44]	; 0x2c
   1e94c:	b	1e8c4 <sfbpf_lex+0x530>
   1e950:	ldr	r2, [pc, #2736]	; 1f408 <sfbpf_lex+0x1074>
   1e954:	ldr	r1, [sp, #20]
   1e958:	ldr	r2, [r1, r2]
   1e95c:	ldr	r2, [r2]
   1e960:	str	r2, [r3, #36]	; 0x24
   1e964:	b	1e8b0 <sfbpf_lex+0x51c>
   1e968:	ldr	r9, [r5, #20]
   1e96c:	sub	r2, r9, #1
   1e970:	cmp	r3, r2
   1e974:	bcs	1f338 <sfbpf_lex+0xfa4>
   1e978:	ldr	r3, [pc, #2700]	; 1f40c <sfbpf_lex+0x1078>
   1e97c:	mov	r1, #16384	; 0x4000
   1e980:	add	r3, pc, r3
   1e984:	ldr	r0, [r3, #36]	; 0x24
   1e988:	bl	1e038 <sfbpf__create_buffer>
   1e98c:	mov	r4, r0
   1e990:	str	r0, [r6]
   1e994:	b	1e8f0 <sfbpf_lex+0x55c>
   1e998:	mov	r1, #1
   1e99c:	mov	r0, #4
   1e9a0:	bl	d38 <calloc@plt>
   1e9a4:	cmp	r0, #0
   1e9a8:	movne	r3, #1
   1e9ac:	str	r0, [r5, #16]
   1e9b0:	strne	r7, [r5, #24]
   1e9b4:	movne	r6, r0
   1e9b8:	strne	r3, [r5, #20]
   1e9bc:	bne	1e978 <sfbpf_lex+0x5e4>
   1e9c0:	ldr	r0, [pc, #2632]	; 1f410 <sfbpf_lex+0x107c>
   1e9c4:	add	r0, pc, r0
   1e9c8:	bl	1dea4 <yy_fatal_error>
   1e9cc:	ldr	r3, [pc, #2624]	; 1f414 <sfbpf_lex+0x1080>
   1e9d0:	mov	r0, r3
   1e9d4:	add	sp, sp, #132	; 0x84
   1e9d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9dc:	ldr	r3, [pc, #2612]	; 1f418 <sfbpf_lex+0x1084>
   1e9e0:	b	1e9d0 <sfbpf_lex+0x63c>
   1e9e4:	mov	r3, #348	; 0x15c
   1e9e8:	b	1e9d0 <sfbpf_lex+0x63c>
   1e9ec:	ldr	r3, [pc, #2600]	; 1f41c <sfbpf_lex+0x1088>
   1e9f0:	b	1e9d0 <sfbpf_lex+0x63c>
   1e9f4:	ldr	r3, [pc, #2596]	; 1f420 <sfbpf_lex+0x108c>
   1e9f8:	b	1e9d0 <sfbpf_lex+0x63c>
   1e9fc:	ldr	r3, [pc, #2592]	; 1f424 <sfbpf_lex+0x1090>
   1ea00:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea04:	mov	r3, #344	; 0x158
   1ea08:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea0c:	ldr	r3, [pc, #2580]	; 1f428 <sfbpf_lex+0x1094>
   1ea10:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea14:	ldr	r3, [pc, #2576]	; 1f42c <sfbpf_lex+0x1098>
   1ea18:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea1c:	ldr	r3, [pc, #2572]	; 1f430 <sfbpf_lex+0x109c>
   1ea20:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea24:	ldr	r3, [pc, #2568]	; 1f434 <sfbpf_lex+0x10a0>
   1ea28:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea2c:	ldr	r3, [pc, #2564]	; 1f438 <sfbpf_lex+0x10a4>
   1ea30:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea34:	mov	r3, #324	; 0x144
   1ea38:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea3c:	ldr	r3, [pc, #2552]	; 1f43c <sfbpf_lex+0x10a8>
   1ea40:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea44:	ldr	r3, [pc, #2548]	; 1f440 <sfbpf_lex+0x10ac>
   1ea48:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea4c:	mov	r3, #292	; 0x124
   1ea50:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea54:	ldr	r3, [pc, #2536]	; 1f444 <sfbpf_lex+0x10b0>
   1ea58:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea5c:	mov	r3, #33	; 0x21
   1ea60:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea64:	ldr	r3, [pc, #2524]	; 1f448 <sfbpf_lex+0x10b4>
   1ea68:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea6c:	mov	r3, #364	; 0x16c
   1ea70:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea74:	ldr	r3, [pc, #2512]	; 1f44c <sfbpf_lex+0x10b8>
   1ea78:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea7c:	ldr	r3, [pc, #2508]	; 1f450 <sfbpf_lex+0x10bc>
   1ea80:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea84:	ldr	r3, [pc, #2504]	; 1f454 <sfbpf_lex+0x10c0>
   1ea88:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea8c:	ldr	r3, [pc, #2500]	; 1f458 <sfbpf_lex+0x10c4>
   1ea90:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea94:	ldr	r3, [pc, #2496]	; 1f45c <sfbpf_lex+0x10c8>
   1ea98:	b	1e9d0 <sfbpf_lex+0x63c>
   1ea9c:	ldr	r3, [pc, #2492]	; 1f460 <sfbpf_lex+0x10cc>
   1eaa0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eaa4:	ldr	r3, [pc, #2488]	; 1f464 <sfbpf_lex+0x10d0>
   1eaa8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eaac:	mov	r3, #304	; 0x130
   1eab0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eab4:	ldr	r3, [pc, #2476]	; 1f468 <sfbpf_lex+0x10d4>
   1eab8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eabc:	ldr	r3, [pc, #2472]	; 1f46c <sfbpf_lex+0x10d8>
   1eac0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eac4:	ldr	r3, [pc, #2468]	; 1f470 <sfbpf_lex+0x10dc>
   1eac8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eacc:	mov	r3, #300	; 0x12c
   1ead0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ead4:	ldr	r3, [pc, #2456]	; 1f474 <sfbpf_lex+0x10e0>
   1ead8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eadc:	ldr	r3, [pc, #2452]	; 1f478 <sfbpf_lex+0x10e4>
   1eae0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eae4:	mov	r3, #268	; 0x10c
   1eae8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eaec:	ldr	r3, [pc, #2440]	; 1f47c <sfbpf_lex+0x10e8>
   1eaf0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eaf4:	mov	r3, #264	; 0x108
   1eaf8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eafc:	ldr	r3, [pc, #2428]	; 1f480 <sfbpf_lex+0x10ec>
   1eb00:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb04:	ldr	r3, [pc, #2424]	; 1f484 <sfbpf_lex+0x10f0>
   1eb08:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb0c:	mov	r3, #260	; 0x104
   1eb10:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb14:	mov	r3, #340	; 0x154
   1eb18:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb1c:	ldr	r3, [pc, #2404]	; 1f488 <sfbpf_lex+0x10f4>
   1eb20:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb24:	ldr	r3, [pc, #2400]	; 1f48c <sfbpf_lex+0x10f8>
   1eb28:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb2c:	ldr	r3, [pc, #2396]	; 1f490 <sfbpf_lex+0x10fc>
   1eb30:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb34:	ldr	r3, [pc, #2392]	; 1f494 <sfbpf_lex+0x1100>
   1eb38:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb3c:	mov	r3, #336	; 0x150
   1eb40:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb44:	ldr	r3, [pc, #2380]	; 1f498 <sfbpf_lex+0x1104>
   1eb48:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb4c:	ldr	r3, [pc, #2376]	; 1f49c <sfbpf_lex+0x1108>
   1eb50:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb54:	ldr	r3, [pc, #2372]	; 1f4a0 <sfbpf_lex+0x110c>
   1eb58:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb5c:	mov	r3, #332	; 0x14c
   1eb60:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb64:	ldr	r3, [pc, #2360]	; 1f4a4 <sfbpf_lex+0x1110>
   1eb68:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb6c:	ldr	r3, [pc, #2356]	; 1f4a8 <sfbpf_lex+0x1114>
   1eb70:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb74:	ldr	r3, [pc, #2348]	; 1f4a8 <sfbpf_lex+0x1114>
   1eb78:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb7c:	mov	r3, #328	; 0x148
   1eb80:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb84:	mov	r3, #328	; 0x148
   1eb88:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb8c:	ldr	r3, [pc, #2328]	; 1f4ac <sfbpf_lex+0x1118>
   1eb90:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb94:	mov	r3, #288	; 0x120
   1eb98:	b	1e9d0 <sfbpf_lex+0x63c>
   1eb9c:	ldr	r3, [pc, #2316]	; 1f4b0 <sfbpf_lex+0x111c>
   1eba0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eba4:	ldr	r3, [pc, #2312]	; 1f4b4 <sfbpf_lex+0x1120>
   1eba8:	b	1e9d0 <sfbpf_lex+0x63c>
   1ebac:	ldr	r3, [pc, #2308]	; 1f4b8 <sfbpf_lex+0x1124>
   1ebb0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ebb4:	mov	r3, #284	; 0x11c
   1ebb8:	b	1e9d0 <sfbpf_lex+0x63c>
   1ebbc:	ldr	r3, [pc, #2296]	; 1f4bc <sfbpf_lex+0x1128>
   1ebc0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ebc4:	ldr	r3, [pc, #2292]	; 1f4c0 <sfbpf_lex+0x112c>
   1ebc8:	b	1e9d0 <sfbpf_lex+0x63c>
   1ebcc:	ldr	r3, [pc, #2288]	; 1f4c4 <sfbpf_lex+0x1130>
   1ebd0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ebd4:	ldr	r3, [sp, #24]
   1ebd8:	ldr	r0, [pc, #2280]	; 1f4c8 <sfbpf_lex+0x1134>
   1ebdc:	ldr	r1, [r3]
   1ebe0:	add	r0, pc, r0
   1ebe4:	bl	2370 <sf_bpf_error>
   1ebe8:	add	r4, sp, #96	; 0x60
   1ebec:	mov	r2, #32
   1ebf0:	mov	r1, #0
   1ebf4:	mov	r0, r4
   1ebf8:	bl	e88 <memset@plt>
   1ebfc:	ldr	r0, [sp, #24]
   1ec00:	mov	lr, #10
   1ec04:	mov	ip, #4
   1ec08:	mov	r2, r4
   1ec0c:	add	r3, sp, #92	; 0x5c
   1ec10:	mov	r1, #0
   1ec14:	ldr	r0, [r0]
   1ec18:	str	lr, [sp, #100]	; 0x64
   1ec1c:	str	ip, [sp, #96]	; 0x60
   1ec20:	bl	ee8 <getaddrinfo@plt>
   1ec24:	cmp	r0, #0
   1ec28:	bne	1f6e4 <sfbpf_lex+0x1350>
   1ec2c:	ldr	r0, [sp, #92]	; 0x5c
   1ec30:	bl	edc <freeaddrinfo@plt>
   1ec34:	ldr	r3, [sp, #24]
   1ec38:	ldr	r0, [r3]
   1ec3c:	bl	4ba8 <sf_sdup>
   1ec40:	ldr	r2, [pc, #2180]	; 1f4cc <sfbpf_lex+0x1138>
   1ec44:	ldr	r1, [sp, #20]
   1ec48:	ldr	r3, [pc, #2176]	; 1f4d0 <sfbpf_lex+0x113c>
   1ec4c:	ldr	r2, [r1, r2]
   1ec50:	str	r0, [r2]
   1ec54:	b	1e9d0 <sfbpf_lex+0x63c>
   1ec58:	ldr	r3, [sp, #24]
   1ec5c:	ldr	r0, [r3]
   1ec60:	bl	4ba8 <sf_sdup>
   1ec64:	ldr	r2, [pc, #2144]	; 1f4cc <sfbpf_lex+0x1138>
   1ec68:	ldr	r1, [sp, #20]
   1ec6c:	ldr	r3, [pc, #2144]	; 1f4d4 <sfbpf_lex+0x1140>
   1ec70:	ldr	r2, [r1, r2]
   1ec74:	str	r0, [r2]
   1ec78:	b	1e9d0 <sfbpf_lex+0x63c>
   1ec7c:	ldr	r3, [pc, #2132]	; 1f4d8 <sfbpf_lex+0x1144>
   1ec80:	b	1e9d0 <sfbpf_lex+0x63c>
   1ec84:	mov	r3, #308	; 0x134
   1ec88:	b	1e9d0 <sfbpf_lex+0x63c>
   1ec8c:	ldr	r3, [sp, #24]
   1ec90:	ldr	r3, [r3]
   1ec94:	ldrb	r3, [r3]
   1ec98:	b	1e9d0 <sfbpf_lex+0x63c>
   1ec9c:	ldr	r3, [pc, #2104]	; 1f4dc <sfbpf_lex+0x1148>
   1eca0:	mov	fp, lr
   1eca4:	add	r3, pc, r3
   1eca8:	ldr	sl, [sp]
   1ecac:	ldr	r9, [sp, #8]
   1ecb0:	ldr	r8, [sp, #12]
   1ecb4:	ldrb	r1, [r3, #28]
   1ecb8:	b	1e428 <sfbpf_lex+0x94>
   1ecbc:	ldr	r3, [pc, #2076]	; 1f4e0 <sfbpf_lex+0x114c>
   1ecc0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ecc4:	ldr	r3, [pc, #2072]	; 1f4e4 <sfbpf_lex+0x1150>
   1ecc8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eccc:	mov	r3, #360	; 0x168
   1ecd0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ecd4:	ldr	r3, [pc, #2060]	; 1f4e8 <sfbpf_lex+0x1154>
   1ecd8:	b	1e9d0 <sfbpf_lex+0x63c>
   1ecdc:	ldr	r3, [pc, #2056]	; 1f4ec <sfbpf_lex+0x1158>
   1ece0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ece4:	mov	r3, #316	; 0x13c
   1ece8:	b	1e9d0 <sfbpf_lex+0x63c>
   1ecec:	mov	r3, #61	; 0x3d
   1ecf0:	b	1e9d0 <sfbpf_lex+0x63c>
   1ecf4:	ldr	r3, [pc, #2036]	; 1f4f0 <sfbpf_lex+0x115c>
   1ecf8:	b	1e9d0 <sfbpf_lex+0x63c>
   1ecfc:	ldr	r3, [sp, #24]
   1ed00:	ldr	r0, [r3]
   1ed04:	bl	11524 <pcap_ether_aton>
   1ed08:	ldr	r2, [pc, #1980]	; 1f4cc <sfbpf_lex+0x1138>
   1ed0c:	ldr	r1, [sp, #20]
   1ed10:	mov	r3, #312	; 0x138
   1ed14:	ldr	r2, [r1, r2]
   1ed18:	str	r0, [r2]
   1ed1c:	b	1e9d0 <sfbpf_lex+0x63c>
   1ed20:	ldr	r3, [sp, #24]
   1ed24:	ldr	r0, [r3]
   1ed28:	add	r0, r0, #1
   1ed2c:	bl	11524 <pcap_ether_aton>
   1ed30:	ldr	r2, [pc, #1940]	; 1f4cc <sfbpf_lex+0x1138>
   1ed34:	ldr	r1, [sp, #20]
   1ed38:	ldr	r3, [pc, #1972]	; 1f4f4 <sfbpf_lex+0x1160>
   1ed3c:	ldr	r2, [r1, r2]
   1ed40:	str	r0, [r2]
   1ed44:	b	1e9d0 <sfbpf_lex+0x63c>
   1ed48:	ldr	r3, [sp, #24]
   1ed4c:	ldr	r5, [r3]
   1ed50:	ldrb	r4, [r5]
   1ed54:	cmp	r4, #48	; 0x30
   1ed58:	movne	r6, #10
   1ed5c:	beq	1f6c0 <sfbpf_lex+0x132c>
   1ed60:	cmp	r4, #0
   1ed64:	beq	1f6f8 <sfbpf_lex+0x1364>
   1ed68:	bl	e34 <__ctype_b_loc@plt>
   1ed6c:	mov	r2, #0
   1ed70:	ldr	r1, [r0]
   1ed74:	lsl	r3, r4, #1
   1ed78:	mul	r2, r2, r6
   1ed7c:	ldrh	r3, [r1, r3]
   1ed80:	tst	r3, #2048	; 0x800
   1ed84:	subne	r3, r4, #48	; 0x30
   1ed88:	bne	1ed98 <sfbpf_lex+0xa04>
   1ed8c:	tst	r3, #512	; 0x200
   1ed90:	subne	r3, r4, #87	; 0x57
   1ed94:	subeq	r3, r4, #55	; 0x37
   1ed98:	ldrb	r4, [r5, #1]!
   1ed9c:	add	r2, r2, r3
   1eda0:	cmp	r4, #0
   1eda4:	bne	1ed74 <sfbpf_lex+0x9e0>
   1eda8:	ldr	r1, [pc, #1820]	; 1f4cc <sfbpf_lex+0x1138>
   1edac:	ldr	r0, [sp, #20]
   1edb0:	ldr	r3, [pc, #1856]	; 1f4f8 <sfbpf_lex+0x1164>
   1edb4:	ldr	r1, [r0, r1]
   1edb8:	str	r2, [r1]
   1edbc:	b	1e9d0 <sfbpf_lex+0x63c>
   1edc0:	ldr	r3, [pc, #1844]	; 1f4fc <sfbpf_lex+0x1168>
   1edc4:	b	1e9d0 <sfbpf_lex+0x63c>
   1edc8:	ldr	r3, [pc, #1840]	; 1f500 <sfbpf_lex+0x116c>
   1edcc:	b	1e9d0 <sfbpf_lex+0x63c>
   1edd0:	ldr	r3, [pc, #1832]	; 1f500 <sfbpf_lex+0x116c>
   1edd4:	b	1e9d0 <sfbpf_lex+0x63c>
   1edd8:	mov	r3, #356	; 0x164
   1eddc:	b	1e9d0 <sfbpf_lex+0x63c>
   1ede0:	ldr	r3, [pc, #1820]	; 1f504 <sfbpf_lex+0x1170>
   1ede4:	b	1e9d0 <sfbpf_lex+0x63c>
   1ede8:	ldr	r3, [pc, #1816]	; 1f508 <sfbpf_lex+0x1174>
   1edec:	b	1e9d0 <sfbpf_lex+0x63c>
   1edf0:	ldr	r3, [pc, #1812]	; 1f50c <sfbpf_lex+0x1178>
   1edf4:	b	1e9d0 <sfbpf_lex+0x63c>
   1edf8:	mov	r3, #296	; 0x128
   1edfc:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee00:	ldr	r3, [pc, #1800]	; 1f510 <sfbpf_lex+0x117c>
   1ee04:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee08:	ldr	r3, [pc, #1796]	; 1f514 <sfbpf_lex+0x1180>
   1ee0c:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee10:	mov	r3, #352	; 0x160
   1ee14:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee18:	ldr	r3, [pc, #1784]	; 1f518 <sfbpf_lex+0x1184>
   1ee1c:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee20:	ldr	r3, [pc, #1780]	; 1f51c <sfbpf_lex+0x1188>
   1ee24:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee28:	ldr	r3, [pc, #1776]	; 1f520 <sfbpf_lex+0x118c>
   1ee2c:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee30:	ldr	r2, [pc, #1684]	; 1f4cc <sfbpf_lex+0x1138>
   1ee34:	ldr	r0, [sp, #20]
   1ee38:	mov	r1, #17
   1ee3c:	ldr	r3, [pc, #1716]	; 1f4f8 <sfbpf_lex+0x1164>
   1ee40:	ldr	r2, [r0, r2]
   1ee44:	str	r1, [r2]
   1ee48:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee4c:	ldr	r2, [pc, #1656]	; 1f4cc <sfbpf_lex+0x1138>
   1ee50:	ldr	r0, [sp, #20]
   1ee54:	mov	r1, #16
   1ee58:	ldr	r3, [pc, #1688]	; 1f4f8 <sfbpf_lex+0x1164>
   1ee5c:	ldr	r2, [r0, r2]
   1ee60:	str	r1, [r2]
   1ee64:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee68:	ldr	r2, [pc, #1628]	; 1f4cc <sfbpf_lex+0x1138>
   1ee6c:	ldr	r0, [sp, #20]
   1ee70:	mov	r1, #15
   1ee74:	ldr	r3, [pc, #1660]	; 1f4f8 <sfbpf_lex+0x1164>
   1ee78:	ldr	r2, [r0, r2]
   1ee7c:	str	r1, [r2]
   1ee80:	b	1e9d0 <sfbpf_lex+0x63c>
   1ee84:	ldr	r2, [pc, #1600]	; 1f4cc <sfbpf_lex+0x1138>
   1ee88:	ldr	r0, [sp, #20]
   1ee8c:	mov	r1, #14
   1ee90:	ldr	r3, [pc, #1632]	; 1f4f8 <sfbpf_lex+0x1164>
   1ee94:	ldr	r2, [r0, r2]
   1ee98:	str	r1, [r2]
   1ee9c:	b	1e9d0 <sfbpf_lex+0x63c>
   1eea0:	ldr	r2, [pc, #1572]	; 1f4cc <sfbpf_lex+0x1138>
   1eea4:	ldr	r0, [sp, #20]
   1eea8:	mov	r1, #13
   1eeac:	ldr	r3, [pc, #1604]	; 1f4f8 <sfbpf_lex+0x1164>
   1eeb0:	ldr	r2, [r0, r2]
   1eeb4:	str	r1, [r2]
   1eeb8:	b	1e9d0 <sfbpf_lex+0x63c>
   1eebc:	ldr	r2, [pc, #1544]	; 1f4cc <sfbpf_lex+0x1138>
   1eec0:	ldr	r0, [sp, #20]
   1eec4:	mov	r1, #12
   1eec8:	ldr	r3, [pc, #1576]	; 1f4f8 <sfbpf_lex+0x1164>
   1eecc:	ldr	r2, [r0, r2]
   1eed0:	str	r1, [r2]
   1eed4:	b	1e9d0 <sfbpf_lex+0x63c>
   1eed8:	ldr	r2, [pc, #1516]	; 1f4cc <sfbpf_lex+0x1138>
   1eedc:	ldr	r0, [sp, #20]
   1eee0:	mov	r1, #11
   1eee4:	ldr	r3, [pc, #1548]	; 1f4f8 <sfbpf_lex+0x1164>
   1eee8:	ldr	r2, [r0, r2]
   1eeec:	str	r1, [r2]
   1eef0:	b	1e9d0 <sfbpf_lex+0x63c>
   1eef4:	ldr	r2, [pc, #1488]	; 1f4cc <sfbpf_lex+0x1138>
   1eef8:	ldr	r0, [sp, #20]
   1eefc:	mov	r1, #10
   1ef00:	ldr	r3, [pc, #1520]	; 1f4f8 <sfbpf_lex+0x1164>
   1ef04:	ldr	r2, [r0, r2]
   1ef08:	str	r1, [r2]
   1ef0c:	b	1e9d0 <sfbpf_lex+0x63c>
   1ef10:	ldr	r2, [pc, #1460]	; 1f4cc <sfbpf_lex+0x1138>
   1ef14:	ldr	r0, [sp, #20]
   1ef18:	mov	r1, #9
   1ef1c:	ldr	r3, [pc, #1492]	; 1f4f8 <sfbpf_lex+0x1164>
   1ef20:	ldr	r2, [r0, r2]
   1ef24:	str	r1, [r2]
   1ef28:	b	1e9d0 <sfbpf_lex+0x63c>
   1ef2c:	ldr	r2, [pc, #1432]	; 1f4cc <sfbpf_lex+0x1138>
   1ef30:	ldr	r0, [sp, #20]
   1ef34:	mov	r1, #8
   1ef38:	ldr	r3, [pc, #1464]	; 1f4f8 <sfbpf_lex+0x1164>
   1ef3c:	ldr	r2, [r0, r2]
   1ef40:	str	r1, [r2]
   1ef44:	b	1e9d0 <sfbpf_lex+0x63c>
   1ef48:	ldr	r2, [pc, #1404]	; 1f4cc <sfbpf_lex+0x1138>
   1ef4c:	ldr	r0, [sp, #20]
   1ef50:	mov	r1, #5
   1ef54:	ldr	r3, [pc, #1436]	; 1f4f8 <sfbpf_lex+0x1164>
   1ef58:	ldr	r2, [r0, r2]
   1ef5c:	str	r1, [r2]
   1ef60:	b	1e9d0 <sfbpf_lex+0x63c>
   1ef64:	ldr	r2, [pc, #1376]	; 1f4cc <sfbpf_lex+0x1138>
   1ef68:	ldr	r0, [sp, #20]
   1ef6c:	mov	r1, #4
   1ef70:	ldr	r3, [pc, #1408]	; 1f4f8 <sfbpf_lex+0x1164>
   1ef74:	ldr	r2, [r0, r2]
   1ef78:	str	r1, [r2]
   1ef7c:	b	1e9d0 <sfbpf_lex+0x63c>
   1ef80:	ldr	r2, [pc, #1348]	; 1f4cc <sfbpf_lex+0x1138>
   1ef84:	ldr	r0, [sp, #20]
   1ef88:	mov	r1, #3
   1ef8c:	ldr	r3, [pc, #1380]	; 1f4f8 <sfbpf_lex+0x1164>
   1ef90:	ldr	r2, [r0, r2]
   1ef94:	str	r1, [r2]
   1ef98:	b	1e9d0 <sfbpf_lex+0x63c>
   1ef9c:	ldr	r2, [pc, #1320]	; 1f4cc <sfbpf_lex+0x1138>
   1efa0:	ldr	r0, [sp, #20]
   1efa4:	mov	r1, #0
   1efa8:	ldr	r3, [pc, #1352]	; 1f4f8 <sfbpf_lex+0x1164>
   1efac:	ldr	r2, [r0, r2]
   1efb0:	str	r1, [r2]
   1efb4:	b	1e9d0 <sfbpf_lex+0x63c>
   1efb8:	ldr	r2, [pc, #1292]	; 1f4cc <sfbpf_lex+0x1138>
   1efbc:	ldr	r0, [sp, #20]
   1efc0:	mov	r1, #1
   1efc4:	ldr	r3, [pc, #1324]	; 1f4f8 <sfbpf_lex+0x1164>
   1efc8:	ldr	r2, [r0, r2]
   1efcc:	str	r1, [r2]
   1efd0:	b	1e9d0 <sfbpf_lex+0x63c>
   1efd4:	ldr	r2, [pc, #1264]	; 1f4cc <sfbpf_lex+0x1138>
   1efd8:	ldr	r0, [sp, #20]
   1efdc:	mov	r1, #0
   1efe0:	ldr	r3, [pc, #1296]	; 1f4f8 <sfbpf_lex+0x1164>
   1efe4:	ldr	r2, [r0, r2]
   1efe8:	str	r1, [r2]
   1efec:	b	1e9d0 <sfbpf_lex+0x63c>
   1eff0:	ldr	r2, [pc, #1236]	; 1f4cc <sfbpf_lex+0x1138>
   1eff4:	ldr	r0, [sp, #20]
   1eff8:	mov	r1, #32
   1effc:	ldr	r3, [pc, #1268]	; 1f4f8 <sfbpf_lex+0x1164>
   1f000:	ldr	r2, [r0, r2]
   1f004:	str	r1, [r2]
   1f008:	b	1e9d0 <sfbpf_lex+0x63c>
   1f00c:	ldr	r2, [pc, #1208]	; 1f4cc <sfbpf_lex+0x1138>
   1f010:	ldr	r0, [sp, #20]
   1f014:	mov	r1, #16
   1f018:	ldr	r3, [pc, #1240]	; 1f4f8 <sfbpf_lex+0x1164>
   1f01c:	ldr	r2, [r0, r2]
   1f020:	str	r1, [r2]
   1f024:	b	1e9d0 <sfbpf_lex+0x63c>
   1f028:	ldr	r2, [pc, #1180]	; 1f4cc <sfbpf_lex+0x1138>
   1f02c:	ldr	r0, [sp, #20]
   1f030:	mov	r1, #8
   1f034:	ldr	r3, [pc, #1212]	; 1f4f8 <sfbpf_lex+0x1164>
   1f038:	ldr	r2, [r0, r2]
   1f03c:	str	r1, [r2]
   1f040:	b	1e9d0 <sfbpf_lex+0x63c>
   1f044:	ldr	r2, [pc, #1152]	; 1f4cc <sfbpf_lex+0x1138>
   1f048:	ldr	r0, [sp, #20]
   1f04c:	mov	r1, #4
   1f050:	ldr	r3, [pc, #1184]	; 1f4f8 <sfbpf_lex+0x1164>
   1f054:	ldr	r2, [r0, r2]
   1f058:	str	r1, [r2]
   1f05c:	b	1e9d0 <sfbpf_lex+0x63c>
   1f060:	ldr	r2, [pc, #1124]	; 1f4cc <sfbpf_lex+0x1138>
   1f064:	ldr	r0, [sp, #20]
   1f068:	mov	r1, #2
   1f06c:	ldr	r3, [pc, #1156]	; 1f4f8 <sfbpf_lex+0x1164>
   1f070:	ldr	r2, [r0, r2]
   1f074:	str	r1, [r2]
   1f078:	b	1e9d0 <sfbpf_lex+0x63c>
   1f07c:	ldr	r2, [pc, #1096]	; 1f4cc <sfbpf_lex+0x1138>
   1f080:	ldr	r0, [sp, #20]
   1f084:	mov	r1, #1
   1f088:	ldr	r3, [pc, #1128]	; 1f4f8 <sfbpf_lex+0x1164>
   1f08c:	ldr	r2, [r0, r2]
   1f090:	str	r1, [r2]
   1f094:	b	1e9d0 <sfbpf_lex+0x63c>
   1f098:	ldr	r2, [pc, #1068]	; 1f4cc <sfbpf_lex+0x1138>
   1f09c:	ldr	r0, [sp, #20]
   1f0a0:	mov	r1, #13
   1f0a4:	ldr	r3, [pc, #1100]	; 1f4f8 <sfbpf_lex+0x1164>
   1f0a8:	ldr	r2, [r0, r2]
   1f0ac:	str	r1, [r2]
   1f0b0:	b	1e9d0 <sfbpf_lex+0x63c>
   1f0b4:	ldr	r2, [pc, #1040]	; 1f4cc <sfbpf_lex+0x1138>
   1f0b8:	ldr	r0, [sp, #20]
   1f0bc:	mov	r1, #18
   1f0c0:	ldr	r3, [pc, #1072]	; 1f4f8 <sfbpf_lex+0x1164>
   1f0c4:	ldr	r2, [r0, r2]
   1f0c8:	str	r1, [r2]
   1f0cc:	b	1e9d0 <sfbpf_lex+0x63c>
   1f0d0:	ldr	r3, [pc, #1100]	; 1f524 <sfbpf_lex+0x1190>
   1f0d4:	b	1e9d0 <sfbpf_lex+0x63c>
   1f0d8:	ldr	r3, [pc, #1096]	; 1f528 <sfbpf_lex+0x1194>
   1f0dc:	b	1e9d0 <sfbpf_lex+0x63c>
   1f0e0:	ldr	r3, [pc, #1092]	; 1f52c <sfbpf_lex+0x1198>
   1f0e4:	b	1e9d0 <sfbpf_lex+0x63c>
   1f0e8:	ldr	r2, [pc, #1088]	; 1f530 <sfbpf_lex+0x119c>
   1f0ec:	ldr	r3, [pc, #1088]	; 1f534 <sfbpf_lex+0x11a0>
   1f0f0:	add	r2, pc, r2
   1f0f4:	add	r3, pc, r3
   1f0f8:	ldr	r1, [r2, #8]
   1f0fc:	add	r3, r3, #256	; 0x100
   1f100:	ldrb	r0, [r2, #28]
   1f104:	lsl	r1, r1, #1
   1f108:	ldr	r5, [r2, #12]
   1f10c:	ldrsh	r3, [r3, r1]
   1f110:	strb	r0, [fp]
   1f114:	mov	fp, r5
   1f118:	b	1e58c <sfbpf_lex+0x1f8>
   1f11c:	ldr	r3, [pc, #1044]	; 1f538 <sfbpf_lex+0x11a4>
   1f120:	b	1e9d0 <sfbpf_lex+0x63c>
   1f124:	mov	r3, #320	; 0x140
   1f128:	b	1e9d0 <sfbpf_lex+0x63c>
   1f12c:	ldr	r3, [pc, #1032]	; 1f53c <sfbpf_lex+0x11a8>
   1f130:	b	1e9d0 <sfbpf_lex+0x63c>
   1f134:	ldr	r3, [pc, #1028]	; 1f540 <sfbpf_lex+0x11ac>
   1f138:	b	1e9d0 <sfbpf_lex+0x63c>
   1f13c:	ldr	r3, [pc, #1024]	; 1f544 <sfbpf_lex+0x11b0>
   1f140:	b	1e9d0 <sfbpf_lex+0x63c>
   1f144:	mov	r3, #280	; 0x118
   1f148:	b	1e9d0 <sfbpf_lex+0x63c>
   1f14c:	ldr	r3, [pc, #1012]	; 1f548 <sfbpf_lex+0x11b4>
   1f150:	b	1e9d0 <sfbpf_lex+0x63c>
   1f154:	ldr	r3, [pc, #1008]	; 1f54c <sfbpf_lex+0x11b8>
   1f158:	b	1e9d0 <sfbpf_lex+0x63c>
   1f15c:	ldr	r3, [pc, #1004]	; 1f550 <sfbpf_lex+0x11bc>
   1f160:	b	1e9d0 <sfbpf_lex+0x63c>
   1f164:	mov	r3, #276	; 0x114
   1f168:	b	1e9d0 <sfbpf_lex+0x63c>
   1f16c:	ldr	r3, [pc, #992]	; 1f554 <sfbpf_lex+0x11c0>
   1f170:	b	1e9d0 <sfbpf_lex+0x63c>
   1f174:	ldr	r3, [pc, #988]	; 1f558 <sfbpf_lex+0x11c4>
   1f178:	b	1e9d0 <sfbpf_lex+0x63c>
   1f17c:	ldr	r3, [pc, #984]	; 1f55c <sfbpf_lex+0x11c8>
   1f180:	b	1e9d0 <sfbpf_lex+0x63c>
   1f184:	mov	r3, #272	; 0x110
   1f188:	b	1e9d0 <sfbpf_lex+0x63c>
   1f18c:	ldr	r3, [pc, #972]	; 1f560 <sfbpf_lex+0x11cc>
   1f190:	b	1e9d0 <sfbpf_lex+0x63c>
   1f194:	mov	r3, #0
   1f198:	b	1e9d0 <sfbpf_lex+0x63c>
   1f19c:	ldr	r3, [sp, #24]
   1f1a0:	ldr	r0, [pc, #956]	; 1f564 <sfbpf_lex+0x11d0>
   1f1a4:	ldr	r3, [r3]
   1f1a8:	add	r0, pc, r0
   1f1ac:	ldrb	r1, [r3]
   1f1b0:	bl	2370 <sf_bpf_error>
   1f1b4:	ldr	r3, [sp, #24]
   1f1b8:	ldr	r0, [pc, #936]	; 1f568 <sfbpf_lex+0x11d4>
   1f1bc:	ldr	r1, [r3]
   1f1c0:	add	r0, pc, r0
   1f1c4:	bl	2370 <sf_bpf_error>
   1f1c8:	ldr	r3, [sp, #24]
   1f1cc:	ldr	r0, [r3]
   1f1d0:	add	r0, r0, #1
   1f1d4:	bl	4ba8 <sf_sdup>
   1f1d8:	ldr	r2, [pc, #748]	; 1f4cc <sfbpf_lex+0x1138>
   1f1dc:	ldr	r1, [sp, #20]
   1f1e0:	ldr	r3, [pc, #900]	; 1f56c <sfbpf_lex+0x11d8>
   1f1e4:	ldr	r2, [r1, r2]
   1f1e8:	str	r0, [r2]
   1f1ec:	b	1e9d0 <sfbpf_lex+0x63c>
   1f1f0:	ldr	r3, [sp, #24]
   1f1f4:	ldr	r0, [r3]
   1f1f8:	bl	4ba8 <sf_sdup>
   1f1fc:	ldr	r2, [pc, #712]	; 1f4cc <sfbpf_lex+0x1138>
   1f200:	ldr	r1, [sp, #20]
   1f204:	ldr	r3, [pc, #864]	; 1f56c <sfbpf_lex+0x11d8>
   1f208:	ldr	r2, [r1, r2]
   1f20c:	str	r0, [r2]
   1f210:	b	1e9d0 <sfbpf_lex+0x63c>
   1f214:	ldr	r3, [sp, #16]
   1f218:	ldr	r1, [r3, #16]
   1f21c:	ldrb	r2, [r3, #28]
   1f220:	mov	r0, r1
   1f224:	ldr	r7, [r3, #24]
   1f228:	str	r1, [sp, #68]	; 0x44
   1f22c:	mov	r1, r3
   1f230:	ldr	r3, [sp, #24]
   1f234:	add	r9, r0, r7, lsl #2
   1f238:	ldr	r3, [r3]
   1f23c:	strb	r2, [fp]
   1f240:	ldr	sl, [r0, r7, lsl #2]
   1f244:	sub	r3, fp, r3
   1f248:	sub	r3, r3, #1
   1f24c:	str	r3, [sp, #64]	; 0x40
   1f250:	ldr	r3, [sl, #44]	; 0x2c
   1f254:	mov	r2, r0
   1f258:	cmp	r3, #0
   1f25c:	bne	1f384 <sfbpf_lex+0xff0>
   1f260:	mov	ip, r0
   1f264:	ldr	r0, [sp, #16]
   1f268:	mov	r1, #1
   1f26c:	ldr	r3, [r0, #36]	; 0x24
   1f270:	str	r3, [sl]
   1f274:	ldr	r2, [r2, r7, lsl #2]
   1f278:	ldr	r3, [sl, #16]
   1f27c:	str	r1, [r2, #44]	; 0x2c
   1f280:	ldr	sl, [ip, r7, lsl #2]
   1f284:	str	r3, [r0, #32]
   1f288:	ldr	r2, [sl, #4]
   1f28c:	add	r5, r2, r3
   1f290:	cmp	r5, lr
   1f294:	bcs	1f5c0 <sfbpf_lex+0x122c>
   1f298:	add	r3, r3, #1
   1f29c:	add	r3, r2, r3
   1f2a0:	cmp	lr, r3
   1f2a4:	ldr	r3, [sp, #24]
   1f2a8:	ldr	r3, [r3]
   1f2ac:	bhi	1f910 <sfbpf_lex+0x157c>
   1f2b0:	ldr	r1, [sl, #40]	; 0x28
   1f2b4:	cmp	r1, #0
   1f2b8:	bne	1f72c <sfbpf_lex+0x1398>
   1f2bc:	sub	r3, lr, r3
   1f2c0:	cmp	r3, #1
   1f2c4:	beq	1f700 <sfbpf_lex+0x136c>
   1f2c8:	ldr	r3, [pc, #672]	; 1f570 <sfbpf_lex+0x11dc>
   1f2cc:	add	r3, pc, r3
   1f2d0:	str	r5, [r3, #4]
   1f2d4:	bl	f30 <yy_get_previous_state>
   1f2d8:	ldr	r3, [pc, #660]	; 1f574 <sfbpf_lex+0x11e0>
   1f2dc:	ldr	r2, [sp, #24]
   1f2e0:	add	r3, pc, r3
   1f2e4:	add	r3, r3, #256	; 0x100
   1f2e8:	ldr	r2, [r2]
   1f2ec:	str	r2, [sp, #28]
   1f2f0:	lsl	r0, r0, #1
   1f2f4:	ldrsh	r3, [r3, r0]
   1f2f8:	b	1f114 <sfbpf_lex+0xd80>
   1f2fc:	ldr	r4, [pc, #628]	; 1f578 <sfbpf_lex+0x11e4>
   1f300:	ldr	r3, [sp, #32]
   1f304:	ldr	r0, [sp, #24]
   1f308:	add	r4, pc, r4
   1f30c:	ldr	r1, [r3]
   1f310:	mov	r2, #1
   1f314:	ldr	r3, [r4, #44]	; 0x2c
   1f318:	ldr	r0, [r0]
   1f31c:	ldr	sl, [sp]
   1f320:	ldr	r9, [sp, #8]
   1f324:	ldr	r8, [sp, #12]
   1f328:	bl	df8 <fwrite@plt>
   1f32c:	ldr	fp, [r4, #4]
   1f330:	ldrb	r1, [r4, #28]
   1f334:	b	1e428 <sfbpf_lex+0x94>
   1f338:	add	r9, r9, #8
   1f33c:	mov	r0, r7
   1f340:	lsl	r6, r9, #2
   1f344:	mov	r1, r6
   1f348:	bl	dec <realloc@plt>
   1f34c:	cmp	r0, #0
   1f350:	str	r0, [r5, #16]
   1f354:	beq	1e9c0 <sfbpf_lex+0x62c>
   1f358:	sub	r3, r6, #32
   1f35c:	mov	r1, r4
   1f360:	add	r6, r0, r8
   1f364:	mov	r2, #32
   1f368:	add	r0, r0, r3
   1f36c:	bl	e88 <memset@plt>
   1f370:	str	r9, [r5, #20]
   1f374:	b	1e978 <sfbpf_lex+0x5e4>
   1f378:	ldr	r0, [pc, #508]	; 1f57c <sfbpf_lex+0x11e8>
   1f37c:	add	r0, pc, r0
   1f380:	bl	1dea4 <yy_fatal_error>
   1f384:	ldr	r3, [r1, #32]
   1f388:	b	1f288 <sfbpf_lex+0xef4>
   1f38c:	.word	0x000207a0
   1f390:	.word	0x0001fc50
   1f394:	.word	0x000000dc
   1f398:	.word	0x0000737c
   1f39c:	.word	0x0000537c
   1f3a0:	.word	0x000000c4
   1f3a4:	.word	0x0000b34c
   1f3a8:	.word	0x00020710
   1f3ac:	.word	0x00007308
   1f3b0:	.word	0x000206e4
   1f3b4:	.word	0x000072e4
   1f3b8:	.word	0x000052e0
   1f3bc:	.word	0x00000599
   1f3c0:	.word	0x00001ce9
   1f3c4:	.word	0x0000721c
   1f3c8:	.word	0x0000521c
   1f3cc:	.word	0x0000b1f4
   1f3d0:	.word	0x000205a4
   1f3d4:	.word	0x000051c8
   1f3d8:	.word	0x00020534
   1f3dc:	.word	0x00020570
   1f3e0:	.word	0x00020560
   1f3e4:	.word	0x00020548
   1f3e8:	.word	0x00020540
   1f3ec:	.word	0x00020530
   1f3f0:	.word	0x00020528
   1f3f4:	.word	0x000202a0
   1f3f8:	.word	0x0002028c
   1f3fc:	.word	0x00020278
   1f400:	.word	0x00020248
   1f404:	.word	0x000000ec
   1f408:	.word	0x000000e4
   1f40c:	.word	0x000201c0
   1f410:	.word	0x0000ec2c
   1f414:	.word	0x0000015a
   1f418:	.word	0x00000159
   1f41c:	.word	0x0000015b
   1f420:	.word	0x0000015e
   1f424:	.word	0x0000015d
   1f428:	.word	0x00000157
   1f42c:	.word	0x00000156
   1f430:	.word	0x00000155
   1f434:	.word	0x00000146
   1f438:	.word	0x00000145
   1f43c:	.word	0x00000143
   1f440:	.word	0x00000125
   1f444:	.word	0x0000013e
   1f448:	.word	0x0000016b
   1f44c:	.word	0x00000122
   1f450:	.word	0x00000121
   1f454:	.word	0x0000010e
   1f458:	.word	0x0000010b
   1f45c:	.word	0x0000010a
   1f460:	.word	0x00000132
   1f464:	.word	0x00000131
   1f468:	.word	0x0000012f
   1f46c:	.word	0x0000012e
   1f470:	.word	0x0000012d
   1f474:	.word	0x00000105
   1f478:	.word	0x0000010d
   1f47c:	.word	0x00000109
   1f480:	.word	0x00000107
   1f484:	.word	0x00000106
   1f488:	.word	0x00000153
   1f48c:	.word	0x00000152
   1f490:	.word	0x00000149
   1f494:	.word	0x00000151
   1f498:	.word	0x0000014f
   1f49c:	.word	0x0000014e
   1f4a0:	.word	0x0000014d
   1f4a4:	.word	0x0000014b
   1f4a8:	.word	0x0000014a
   1f4ac:	.word	0x00000147
   1f4b0:	.word	0x0000011f
   1f4b4:	.word	0x0000011e
   1f4b8:	.word	0x0000011d
   1f4bc:	.word	0x0000011b
   1f4c0:	.word	0x0000011a
   1f4c4:	.word	0x00000142
   1f4c8:	.word	0x0000ea88
   1f4cc:	.word	0x000000f4
   1f4d0:	.word	0x0000013a
   1f4d4:	.word	0x00000139
   1f4d8:	.word	0x00000135
   1f4dc:	.word	0x0001fe9c
   1f4e0:	.word	0x0000016a
   1f4e4:	.word	0x00000169
   1f4e8:	.word	0x00000167
   1f4ec:	.word	0x0000013d
   1f4f0:	.word	0x00000136
   1f4f4:	.word	0x0000013b
   1f4f8:	.word	0x00000123
   1f4fc:	.word	0x00000166
   1f500:	.word	0x00000165
   1f504:	.word	0x0000012b
   1f508:	.word	0x0000012a
   1f50c:	.word	0x00000129
   1f510:	.word	0x00000127
   1f514:	.word	0x00000126
   1f518:	.word	0x0000015f
   1f51c:	.word	0x00000162
   1f520:	.word	0x00000161
   1f524:	.word	0x00000133
   1f528:	.word	0x00000103
   1f52c:	.word	0x00000102
   1f530:	.word	0x0001fa50
   1f534:	.word	0x00004674
   1f538:	.word	0x00000141
   1f53c:	.word	0x0000013f
   1f540:	.word	0x00000163
   1f544:	.word	0x00000119
   1f548:	.word	0x00000117
   1f54c:	.word	0x00000116
   1f550:	.word	0x00000115
   1f554:	.word	0x00000113
   1f558:	.word	0x00000112
   1f55c:	.word	0x00000111
   1f560:	.word	0x0000010f
   1f564:	.word	0x0000e4f0
   1f568:	.word	0x0000e4c4
   1f56c:	.word	0x00000137
   1f570:	.word	0x0001f874
   1f574:	.word	0x00004488
   1f578:	.word	0x0001f838
   1f57c:	.word	0x0000e3e4
   1f580:	.word	0x0001f570
   1f584:	.word	0x0000417c
   1f588:	.word	0x0000413c
   1f58c:	.word	0x00000599
   1f590:	.word	0x0001f4b0
   1f594:	.word	0x0001f48c
   1f598:	.word	0x0000df60
   1f59c:	.word	0x0001f438
   1f5a0:	.word	0x0001f2b4
   1f5a4:	.word	0x0000dddc
   1f5a8:	.word	0x0000dd98
   1f5ac:	.word	0x0001f188
   1f5b0:	.word	0x0001f164
   1f5b4:	.word	0x0000dc10
   1f5b8:	.word	0x0000db50
   1f5bc:	.word	0x0001ef40
   1f5c0:	ldr	r3, [sp, #24]
   1f5c4:	ldr	r4, [pc, #-76]	; 1f580 <sfbpf_lex+0x11ec>
   1f5c8:	ldr	r5, [r3]
   1f5cc:	ldr	r3, [sp, #64]	; 0x40
   1f5d0:	add	r4, pc, r4
   1f5d4:	add	r5, r5, r3
   1f5d8:	str	r5, [r4, #4]
   1f5dc:	bl	f30 <yy_get_previous_state>
   1f5e0:	ldr	r2, [sp, #48]	; 0x30
   1f5e4:	ldr	r3, [pc, #-104]	; 1f584 <sfbpf_lex+0x11f0>
   1f5e8:	sub	lr, r2, #1216	; 0x4c0
   1f5ec:	add	r3, pc, r3
   1f5f0:	add	r3, r3, #256	; 0x100
   1f5f4:	ldr	r1, [sp, #52]	; 0x34
   1f5f8:	lsl	ip, r0, #1
   1f5fc:	ldrsh	r2, [lr, ip]
   1f600:	ldrsh	r3, [r3, ip]
   1f604:	add	r2, r2, #1
   1f608:	cmp	r3, #0
   1f60c:	lsl	r2, r2, #1
   1f610:	strne	r0, [r4, #8]
   1f614:	ldrsh	r1, [r1, r2]
   1f618:	strne	r5, [r4, #12]
   1f61c:	cmp	r0, r1
   1f620:	beq	1f660 <sfbpf_lex+0x12cc>
   1f624:	ldr	r1, [pc, #-164]	; 1f588 <sfbpf_lex+0x11f4>
   1f628:	mov	r0, lr
   1f62c:	add	r1, pc, r1
   1f630:	add	lr, lr, #3776	; 0xec0
   1f634:	add	r1, r1, #3120	; 0xc30
   1f638:	add	lr, lr, #12
   1f63c:	add	r1, r1, #4
   1f640:	ldrsh	r4, [r1, ip]
   1f644:	lsl	ip, r4, #1
   1f648:	ldrsh	r2, [r0, ip]
   1f64c:	add	r2, r2, #1
   1f650:	lsl	r2, r2, #1
   1f654:	ldrsh	r6, [lr, r2]
   1f658:	cmp	r4, r6
   1f65c:	bne	1f640 <sfbpf_lex+0x12ac>
   1f660:	ldr	r1, [sp, #56]	; 0x38
   1f664:	ldrsh	r7, [r1, r2]
   1f668:	ldr	r2, [pc, #-228]	; 1f58c <sfbpf_lex+0x11f8>
   1f66c:	cmp	r7, r2
   1f670:	beq	1fc0c <sfbpf_lex+0x1878>
   1f674:	ldr	r2, [sp, #24]
   1f678:	cmp	r7, #0
   1f67c:	ldr	r2, [r2]
   1f680:	str	r2, [sp, #28]
   1f684:	beq	1f114 <sfbpf_lex+0xd80>
   1f688:	ldr	r3, [pc, #-256]	; 1f590 <sfbpf_lex+0x11fc>
   1f68c:	add	r2, r5, #1
   1f690:	add	r3, pc, r3
   1f694:	ldr	fp, [sp]
   1f698:	ldr	r8, [sp, #8]
   1f69c:	ldr	r9, [sp, #12]
   1f6a0:	mov	r4, r2
   1f6a4:	str	r2, [r3, #4]
   1f6a8:	b	1e450 <sfbpf_lex+0xbc>
   1f6ac:	ldr	r3, [pc, #-288]	; 1f594 <sfbpf_lex+0x1200>
   1f6b0:	ldr	r1, [sp, #12]
   1f6b4:	add	r3, pc, r3
   1f6b8:	str	r1, [r3, #8]
   1f6bc:	b	1e53c <sfbpf_lex+0x1a8>
   1f6c0:	ldrb	r4, [r5, #1]
   1f6c4:	and	r3, r4, #223	; 0xdf
   1f6c8:	cmp	r3, #88	; 0x58
   1f6cc:	moveq	r6, #16
   1f6d0:	ldrbeq	r4, [r5, #2]
   1f6d4:	addne	r5, r5, #1
   1f6d8:	addeq	r5, r5, #2
   1f6dc:	movne	r6, #8
   1f6e0:	b	1ed60 <sfbpf_lex+0x9cc>
   1f6e4:	ldr	r3, [sp, #24]
   1f6e8:	ldr	r0, [pc, #-344]	; 1f598 <sfbpf_lex+0x1204>
   1f6ec:	ldr	r1, [r3]
   1f6f0:	add	r0, pc, r0
   1f6f4:	bl	2370 <sf_bpf_error>
   1f6f8:	mov	r2, r4
   1f6fc:	b	1eda8 <sfbpf_lex+0xa14>
   1f700:	ldr	r2, [pc, #-364]	; 1f59c <sfbpf_lex+0x1208>
   1f704:	ldr	r3, [sp, #24]
   1f708:	add	r2, pc, r2
   1f70c:	ldr	lr, [r3]
   1f710:	ldr	r3, [r2]
   1f714:	str	lr, [r2, #4]
   1f718:	sub	r3, r3, #1
   1f71c:	add	r3, r3, r3, lsr #31
   1f720:	asr	r3, r3, #1
   1f724:	add	r3, r3, #146	; 0x92
   1f728:	b	1e630 <sfbpf_lex+0x29c>
   1f72c:	sub	r1, lr, r3
   1f730:	sub	r5, r1, #1
   1f734:	cmp	r5, #0
   1f738:	str	r1, [sp, #84]	; 0x54
   1f73c:	ble	1f864 <sfbpf_lex+0x14d0>
   1f740:	add	r1, r2, #4
   1f744:	add	r0, r3, #4
   1f748:	cmp	r2, r0
   1f74c:	cmpcc	r3, r1
   1f750:	movcs	r1, #1
   1f754:	movcc	r1, #0
   1f758:	cmp	r5, #11
   1f75c:	movls	r1, #0
   1f760:	andhi	r1, r1, #1
   1f764:	cmp	r1, #0
   1f768:	beq	1fb20 <sfbpf_lex+0x178c>
   1f76c:	rsb	ip, r3, #0
   1f770:	ands	ip, ip, #3
   1f774:	beq	1fbe8 <sfbpf_lex+0x1854>
   1f778:	ldrb	r1, [r3]
   1f77c:	cmp	ip, #1
   1f780:	add	sl, r2, #1
   1f784:	strb	r1, [r2]
   1f788:	add	r1, r3, #1
   1f78c:	str	r1, [sp, #60]	; 0x3c
   1f790:	beq	1fbf0 <sfbpf_lex+0x185c>
   1f794:	ldrb	r1, [r3, #1]
   1f798:	cmp	ip, #3
   1f79c:	add	sl, r2, #2
   1f7a0:	strb	r1, [r2, #1]
   1f7a4:	add	r1, r3, #2
   1f7a8:	str	r1, [sp, #60]	; 0x3c
   1f7ac:	ldrbeq	r1, [r3, #2]
   1f7b0:	addeq	sl, r2, #3
   1f7b4:	movne	r1, #2
   1f7b8:	strbeq	r1, [r2, #2]
   1f7bc:	moveq	r1, ip
   1f7c0:	addeq	r0, r3, #3
   1f7c4:	streq	r0, [sp, #60]	; 0x3c
   1f7c8:	sub	r0, r5, ip
   1f7cc:	str	r0, [sp, #80]	; 0x50
   1f7d0:	sub	r0, r0, #4
   1f7d4:	add	r3, r3, ip
   1f7d8:	lsr	r0, r0, #2
   1f7dc:	add	r0, r0, #1
   1f7e0:	add	r2, r2, ip
   1f7e4:	mov	r8, #0
   1f7e8:	lsl	ip, r0, #2
   1f7ec:	str	r2, [sp, #72]	; 0x48
   1f7f0:	str	r3, [sp, #76]	; 0x4c
   1f7f4:	ldr	r3, [sp, #76]	; 0x4c
   1f7f8:	add	r8, r8, #1
   1f7fc:	cmp	r0, r8
   1f800:	ldr	r2, [r3], #4
   1f804:	str	r3, [sp, #76]	; 0x4c
   1f808:	ldr	r3, [sp, #72]	; 0x48
   1f80c:	str	r2, [r3], #4
   1f810:	str	r3, [sp, #72]	; 0x48
   1f814:	bhi	1f7f4 <sfbpf_lex+0x1460>
   1f818:	ldr	r3, [sp, #80]	; 0x50
   1f81c:	add	r1, ip, r1
   1f820:	cmp	r3, ip
   1f824:	ldr	r3, [sp, #60]	; 0x3c
   1f828:	add	r8, sl, ip
   1f82c:	add	ip, r3, ip
   1f830:	beq	1f860 <sfbpf_lex+0x14cc>
   1f834:	ldrb	r3, [r3, r0, lsl #2]
   1f838:	add	r2, r1, #1
   1f83c:	cmp	r5, r2
   1f840:	strb	r3, [sl, r0, lsl #2]
   1f844:	ble	1f860 <sfbpf_lex+0x14cc>
   1f848:	ldrb	r3, [ip, #1]
   1f84c:	add	r1, r1, #2
   1f850:	cmp	r5, r1
   1f854:	strb	r3, [r8, #1]
   1f858:	ldrbgt	r3, [ip, #2]
   1f85c:	strbgt	r3, [r8, #2]
   1f860:	ldr	sl, [r9]
   1f864:	ldr	r3, [sl, #44]	; 0x2c
   1f868:	cmp	r3, #2
   1f86c:	beq	1f9d4 <sfbpf_lex+0x1640>
   1f870:	ldr	r1, [sl, #12]
   1f874:	sub	r2, r1, r5
   1f878:	sub	r2, r2, #1
   1f87c:	cmp	r2, #0
   1f880:	bgt	1f924 <sfbpf_lex+0x1590>
   1f884:	ldr	r3, [pc, #-748]	; 1f5a0 <sfbpf_lex+0x120c>
   1f888:	str	r6, [sp, #60]	; 0x3c
   1f88c:	add	r3, pc, r3
   1f890:	mov	r6, r4
   1f894:	mov	r4, r3
   1f898:	b	1f8ec <sfbpf_lex+0x1558>
   1f89c:	cmp	r1, #0
   1f8a0:	lslgt	r1, r1, #1
   1f8a4:	bgt	1f8b4 <sfbpf_lex+0x1520>
   1f8a8:	add	r2, r1, #7
   1f8ac:	movge	r2, r1
   1f8b0:	add	r1, r1, r2, asr #3
   1f8b4:	str	r1, [sl, #12]
   1f8b8:	add	r1, r1, #2
   1f8bc:	bl	dec <realloc@plt>
   1f8c0:	cmp	r0, #0
   1f8c4:	str	r0, [sl, #4]
   1f8c8:	beq	1f904 <sfbpf_lex+0x1570>
   1f8cc:	ldr	sl, [r9]
   1f8d0:	add	lr, r0, r8
   1f8d4:	str	lr, [r4, #4]
   1f8d8:	ldr	r1, [sl, #12]
   1f8dc:	sub	r2, r1, r5
   1f8e0:	sub	r2, r2, #1
   1f8e4:	cmp	r2, #0
   1f8e8:	bgt	1f91c <sfbpf_lex+0x1588>
   1f8ec:	ldr	ip, [sl, #20]
   1f8f0:	ldr	r0, [sl, #4]
   1f8f4:	cmp	ip, #0
   1f8f8:	sub	r8, lr, r0
   1f8fc:	bne	1f89c <sfbpf_lex+0x1508>
   1f900:	str	ip, [sl, #4]
   1f904:	ldr	r0, [pc, #-872]	; 1f5a4 <sfbpf_lex+0x1210>
   1f908:	add	r0, pc, r0
   1f90c:	bl	1dea4 <yy_fatal_error>
   1f910:	ldr	r0, [pc, #-880]	; 1f5a8 <sfbpf_lex+0x1214>
   1f914:	add	r0, pc, r0
   1f918:	bl	1dea4 <yy_fatal_error>
   1f91c:	mov	r4, r6
   1f920:	ldr	r6, [sp, #60]	; 0x3c
   1f924:	ldr	sl, [sl, #24]
   1f928:	cmp	r2, #8192	; 0x2000
   1f92c:	movlt	r3, r2
   1f930:	movge	r3, #8192	; 0x2000
   1f934:	cmp	sl, #0
   1f938:	str	r3, [sp, #60]	; 0x3c
   1f93c:	beq	1fa70 <sfbpf_lex+0x16dc>
   1f940:	mov	r7, #0
   1f944:	b	1f984 <sfbpf_lex+0x15f0>
   1f948:	ldr	r2, [r6, #24]
   1f94c:	ldr	r3, [r6, #16]
   1f950:	cmp	r0, #10
   1f954:	add	r9, r3, r2, lsl #2
   1f958:	ldr	r3, [r3, r2, lsl #2]
   1f95c:	ldr	r3, [r3, #4]
   1f960:	beq	1fb3c <sfbpf_lex+0x17a8>
   1f964:	ldr	r2, [sp, #84]	; 0x54
   1f968:	add	r3, r3, r2
   1f96c:	ldr	r2, [sp, #60]	; 0x3c
   1f970:	add	r3, r3, r7
   1f974:	add	r7, r7, #1
   1f978:	cmp	r2, r7
   1f97c:	strb	r0, [r3, #-1]
   1f980:	ble	1f9b0 <sfbpf_lex+0x161c>
   1f984:	ldr	r0, [r6, #36]	; 0x24
   1f988:	bl	f24 <getc@plt>
   1f98c:	cmn	r0, #1
   1f990:	bne	1f948 <sfbpf_lex+0x15b4>
   1f994:	ldr	r0, [r6, #36]	; 0x24
   1f998:	bl	dbc <ferror@plt>
   1f99c:	cmp	r0, #0
   1f9a0:	bne	1fafc <sfbpf_lex+0x1768>
   1f9a4:	ldr	r3, [r6, #24]
   1f9a8:	ldr	r9, [r6, #16]
   1f9ac:	add	r9, r9, r3, lsl #2
   1f9b0:	ldr	r3, [pc, #-1036]	; 1f5ac <sfbpf_lex+0x1218>
   1f9b4:	ldr	r2, [r9]
   1f9b8:	add	r3, pc, r3
   1f9bc:	cmp	r7, #0
   1f9c0:	str	r7, [r3, #32]
   1f9c4:	str	r7, [r2, #16]
   1f9c8:	movne	sl, #0
   1f9cc:	bne	1fa04 <sfbpf_lex+0x1670>
   1f9d0:	b	1f9e8 <sfbpf_lex+0x1654>
   1f9d4:	ldr	r3, [pc, #-1068]	; 1f5b0 <sfbpf_lex+0x121c>
   1f9d8:	mov	r2, #0
   1f9dc:	add	r3, pc, r3
   1f9e0:	str	r2, [sl, #16]
   1f9e4:	str	r2, [r3, #32]
   1f9e8:	cmp	r5, #0
   1f9ec:	beq	1fbb8 <sfbpf_lex+0x1824>
   1f9f0:	ldr	r2, [sp, #40]	; 0x28
   1f9f4:	ldr	r3, [r9]
   1f9f8:	mov	sl, #2
   1f9fc:	ldr	r7, [r2, #32]
   1fa00:	str	sl, [r3, #44]	; 0x2c
   1fa04:	ldr	r8, [r9]
   1fa08:	add	r5, r5, r7
   1fa0c:	ldr	r3, [r8, #12]
   1fa10:	cmp	r5, r3
   1fa14:	bgt	1fb84 <sfbpf_lex+0x17f0>
   1fa18:	ldr	r3, [r8, #4]
   1fa1c:	mov	r2, #0
   1fa20:	ldr	r1, [sp, #36]	; 0x24
   1fa24:	strb	r2, [r3, r5]
   1fa28:	ldr	r3, [r9]
   1fa2c:	cmp	sl, #1
   1fa30:	str	r5, [r1, #32]
   1fa34:	ldr	r3, [r3, #4]
   1fa38:	add	r3, r3, r5
   1fa3c:	strb	r2, [r3, #1]
   1fa40:	ldr	r3, [r9]
   1fa44:	ldr	r2, [sp, #24]
   1fa48:	ldr	r3, [r3, #4]
   1fa4c:	str	r3, [r2]
   1fa50:	beq	1f700 <sfbpf_lex+0x136c>
   1fa54:	cmp	sl, #2
   1fa58:	mov	r2, r5
   1fa5c:	bne	1fb4c <sfbpf_lex+0x17b8>
   1fa60:	ldr	r3, [r9]
   1fa64:	ldr	r5, [r3, #4]
   1fa68:	add	r5, r5, r2
   1fa6c:	b	1f2c8 <sfbpf_lex+0xf34>
   1fa70:	bl	e70 <__errno_location@plt>
   1fa74:	mov	r9, #1
   1fa78:	ldr	r3, [sp, #68]	; 0x44
   1fa7c:	mov	r8, r0
   1fa80:	str	sl, [r0]
   1fa84:	b	1fab8 <sfbpf_lex+0x1724>
   1fa88:	ldr	r0, [r4, #36]	; 0x24
   1fa8c:	bl	dbc <ferror@plt>
   1fa90:	cmp	r0, #0
   1fa94:	beq	1fb08 <sfbpf_lex+0x1774>
   1fa98:	ldr	r3, [r8]
   1fa9c:	cmp	r3, #4
   1faa0:	bne	1fafc <sfbpf_lex+0x1768>
   1faa4:	str	r7, [r8]
   1faa8:	ldr	r0, [r4, #36]	; 0x24
   1faac:	bl	ec4 <clearerr@plt>
   1fab0:	ldr	r3, [r4, #16]
   1fab4:	ldr	r7, [r4, #24]
   1fab8:	ldr	r1, [r3, r7, lsl #2]
   1fabc:	ldr	r2, [sp, #60]	; 0x3c
   1fac0:	ldr	r3, [r4, #36]	; 0x24
   1fac4:	ldr	r0, [r1, #4]
   1fac8:	mov	r1, r9
   1facc:	add	r0, r0, r5
   1fad0:	bl	e04 <fread@plt>
   1fad4:	cmp	r0, #0
   1fad8:	mov	r7, r0
   1fadc:	str	r0, [r4, #32]
   1fae0:	beq	1fa88 <sfbpf_lex+0x16f4>
   1fae4:	ldr	r2, [r4, #24]
   1fae8:	ldr	r3, [r4, #16]
   1faec:	add	r9, r3, r2, lsl #2
   1faf0:	ldr	r3, [r3, r2, lsl #2]
   1faf4:	str	r0, [r3, #16]
   1faf8:	b	1fa04 <sfbpf_lex+0x1670>
   1fafc:	ldr	r0, [pc, #-1360]	; 1f5b4 <sfbpf_lex+0x1220>
   1fb00:	add	r0, pc, r0
   1fb04:	bl	1dea4 <yy_fatal_error>
   1fb08:	ldr	r2, [r4, #24]
   1fb0c:	ldr	r3, [r4, #16]
   1fb10:	add	r9, r3, r2, lsl #2
   1fb14:	ldr	r3, [r3, r2, lsl #2]
   1fb18:	str	r0, [r3, #16]
   1fb1c:	b	1f9e8 <sfbpf_lex+0x1654>
   1fb20:	sub	r2, r2, #1
   1fb24:	add	r1, r3, r5
   1fb28:	ldrb	r0, [r3], #1
   1fb2c:	cmp	r1, r3
   1fb30:	strb	r0, [r2, #1]!
   1fb34:	bne	1fb28 <sfbpf_lex+0x1794>
   1fb38:	b	1f860 <sfbpf_lex+0x14cc>
   1fb3c:	add	r3, r3, r5
   1fb40:	strb	r0, [r3, r7]
   1fb44:	add	r7, r7, #1
   1fb48:	b	1f9b0 <sfbpf_lex+0x161c>
   1fb4c:	ldr	r2, [sp, #64]	; 0x40
   1fb50:	ldr	fp, [sp]
   1fb54:	add	r3, r3, r2
   1fb58:	ldr	r2, [sp, #36]	; 0x24
   1fb5c:	mov	r4, r3
   1fb60:	ldr	r8, [sp, #8]
   1fb64:	str	r3, [r2, #4]
   1fb68:	ldr	r9, [sp, #12]
   1fb6c:	bl	f30 <yy_get_previous_state>
   1fb70:	ldr	r3, [sp, #24]
   1fb74:	ldr	r3, [r3]
   1fb78:	str	r3, [sp, #28]
   1fb7c:	mov	r7, r0
   1fb80:	b	1e450 <sfbpf_lex+0xbc>
   1fb84:	add	r7, r5, r7, asr #1
   1fb88:	mov	r1, r7
   1fb8c:	ldr	r0, [r8, #4]
   1fb90:	bl	dec <realloc@plt>
   1fb94:	str	r0, [r8, #4]
   1fb98:	ldr	r3, [r9]
   1fb9c:	ldr	r2, [r3, #4]
   1fba0:	cmp	r2, #0
   1fba4:	beq	1fbdc <sfbpf_lex+0x1848>
   1fba8:	sub	r7, r7, #2
   1fbac:	str	r7, [r3, #12]
   1fbb0:	ldr	r8, [r9]
   1fbb4:	b	1fa18 <sfbpf_lex+0x1684>
   1fbb8:	ldr	r7, [sp, #44]	; 0x2c
   1fbbc:	mov	sl, #1
   1fbc0:	ldr	r0, [r7, #36]	; 0x24
   1fbc4:	bl	1e178 <sfbpf_restart>
   1fbc8:	ldr	r3, [r7, #24]
   1fbcc:	ldr	r9, [r7, #16]
   1fbd0:	ldr	r7, [r7, #32]
   1fbd4:	add	r9, r9, r3, lsl #2
   1fbd8:	b	1fa04 <sfbpf_lex+0x1670>
   1fbdc:	ldr	r0, [pc, #-1580]	; 1f5b8 <sfbpf_lex+0x1224>
   1fbe0:	add	r0, pc, r0
   1fbe4:	bl	1dea4 <yy_fatal_error>
   1fbe8:	mov	sl, r2
   1fbec:	str	r3, [sp, #60]	; 0x3c
   1fbf0:	mov	r1, ip
   1fbf4:	b	1f7c8 <sfbpf_lex+0x1434>
   1fbf8:	ldr	r3, [pc, #-1604]	; 1f5bc <sfbpf_lex+0x1228>
   1fbfc:	ldr	r1, [sp, #16]
   1fc00:	add	r3, pc, r3
   1fc04:	str	r1, [r3, #12]
   1fc08:	b	1e534 <sfbpf_lex+0x1a0>
   1fc0c:	ldr	r2, [sp, #24]
   1fc10:	ldr	r2, [r2]
   1fc14:	str	r2, [sp, #28]
   1fc18:	b	1f114 <sfbpf_lex+0xd80>

0001fc1c <sfbpf__delete_buffer>:
   1fc1c:	push	{r4, lr}
   1fc20:	subs	r4, r0, #0
   1fc24:	popeq	{r4, pc}
   1fc28:	ldr	r2, [pc, #76]	; 1fc7c <sfbpf__delete_buffer+0x60>
   1fc2c:	add	r2, pc, r2
   1fc30:	ldr	r3, [r2, #16]
   1fc34:	cmp	r3, #0
   1fc38:	beq	1fc50 <sfbpf__delete_buffer+0x34>
   1fc3c:	ldr	r2, [r2, #24]
   1fc40:	ldr	r1, [r3, r2, lsl #2]
   1fc44:	cmp	r4, r1
   1fc48:	moveq	r1, #0
   1fc4c:	streq	r1, [r3, r2, lsl #2]
   1fc50:	ldr	r3, [r4, #20]
   1fc54:	cmp	r3, #0
   1fc58:	bne	1fc68 <sfbpf__delete_buffer+0x4c>
   1fc5c:	mov	r0, r4
   1fc60:	pop	{r4, lr}
   1fc64:	b	da4 <free@plt>
   1fc68:	ldr	r0, [r4, #4]
   1fc6c:	bl	da4 <free@plt>
   1fc70:	mov	r0, r4
   1fc74:	pop	{r4, lr}
   1fc78:	b	da4 <free@plt>
   1fc7c:	.word	0x0001ef14

0001fc80 <sfbpf__flush_buffer>:
   1fc80:	push	{r4, lr}
   1fc84:	cmp	r0, #0
   1fc88:	ldr	lr, [pc, #132]	; 1fd14 <sfbpf__flush_buffer+0x94>
   1fc8c:	add	lr, pc, lr
   1fc90:	popeq	{r4, pc}
   1fc94:	ldr	r1, [r0, #4]
   1fc98:	ldr	r2, [pc, #120]	; 1fd18 <sfbpf__flush_buffer+0x98>
   1fc9c:	mov	r3, #0
   1fca0:	add	r2, pc, r2
   1fca4:	str	r3, [r0, #16]
   1fca8:	strb	r3, [r1]
   1fcac:	ldr	ip, [r0, #4]
   1fcb0:	ldr	r1, [r2, #16]
   1fcb4:	mov	r4, #1
   1fcb8:	strb	r3, [ip, #1]
   1fcbc:	cmp	r1, r3
   1fcc0:	ldr	ip, [r0, #4]
   1fcc4:	str	r3, [r0, #44]	; 0x2c
   1fcc8:	str	ip, [r0, #8]
   1fccc:	str	r4, [r0, #28]
   1fcd0:	popeq	{r4, pc}
   1fcd4:	ldr	r3, [r2, #24]
   1fcd8:	ldr	r4, [r1, r3, lsl #2]
   1fcdc:	cmp	r0, r4
   1fce0:	popne	{r4, pc}
   1fce4:	ldr	r4, [pc, #48]	; 1fd1c <sfbpf__flush_buffer+0x9c>
   1fce8:	ldr	r0, [r0, #16]
   1fcec:	str	ip, [r2, #4]
   1fcf0:	str	r0, [r2, #32]
   1fcf4:	ldr	r0, [lr, r4]
   1fcf8:	str	ip, [r0]
   1fcfc:	ldr	r3, [r1, r3, lsl #2]
   1fd00:	ldr	r3, [r3]
   1fd04:	str	r3, [r2, #36]	; 0x24
   1fd08:	ldrb	r3, [ip]
   1fd0c:	strb	r3, [r2, #28]
   1fd10:	pop	{r4, pc}
   1fd14:	.word	0x0001e36c
   1fd18:	.word	0x0001eea0
   1fd1c:	.word	0x000000dc

0001fd20 <sfbpf_push_buffer_state>:
   1fd20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fd24:	subs	r5, r0, #0
   1fd28:	ldr	r7, [pc, #320]	; 1fe70 <sfbpf_push_buffer_state+0x150>
   1fd2c:	add	r7, pc, r7
   1fd30:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd34:	ldr	r6, [pc, #312]	; 1fe74 <sfbpf_push_buffer_state+0x154>
   1fd38:	add	r6, pc, r6
   1fd3c:	ldr	r4, [r6, #16]
   1fd40:	cmp	r4, #0
   1fd44:	beq	1fe30 <sfbpf_push_buffer_state+0x110>
   1fd48:	ldr	r3, [r6, #20]
   1fd4c:	ldr	r8, [r6, #24]
   1fd50:	sub	r2, r3, #1
   1fd54:	cmp	r2, r8
   1fd58:	lslhi	r2, r8, #2
   1fd5c:	bls	1fdec <sfbpf_push_buffer_state+0xcc>
   1fd60:	ldr	r1, [r4, r2]
   1fd64:	add	r3, r4, r2
   1fd68:	cmp	r1, #0
   1fd6c:	beq	1fdac <sfbpf_push_buffer_state+0x8c>
   1fd70:	ldr	r1, [pc, #256]	; 1fe78 <sfbpf_push_buffer_state+0x158>
   1fd74:	add	r1, pc, r1
   1fd78:	ldr	r0, [r1, #4]
   1fd7c:	ldrb	lr, [r1, #28]
   1fd80:	ldr	ip, [r1, #32]
   1fd84:	strb	lr, [r0]
   1fd88:	ldr	lr, [r4, r2]
   1fd8c:	str	r0, [lr, #8]
   1fd90:	ldr	r0, [r4, r2]
   1fd94:	str	ip, [r0, #16]
   1fd98:	ldr	r2, [r4, r2]
   1fd9c:	cmp	r2, #0
   1fda0:	addne	r3, r8, #1
   1fda4:	strne	r3, [r1, #24]
   1fda8:	addne	r3, r4, r3, lsl #2
   1fdac:	ldr	r2, [pc, #200]	; 1fe7c <sfbpf_push_buffer_state+0x15c>
   1fdb0:	ldr	r0, [pc, #200]	; 1fe80 <sfbpf_push_buffer_state+0x160>
   1fdb4:	str	r5, [r3]
   1fdb8:	add	r2, pc, r2
   1fdbc:	ldr	r1, [r5, #8]
   1fdc0:	ldr	ip, [r5, #16]
   1fdc4:	str	r1, [r2, #4]
   1fdc8:	str	ip, [r2, #32]
   1fdcc:	ldr	r0, [r7, r0]
   1fdd0:	str	r1, [r0]
   1fdd4:	ldr	r3, [r3]
   1fdd8:	ldr	r3, [r3]
   1fddc:	str	r3, [r2, #36]	; 0x24
   1fde0:	ldrb	r3, [r1]
   1fde4:	strb	r3, [r2, #28]
   1fde8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fdec:	add	r9, r3, #8
   1fdf0:	mov	r0, r4
   1fdf4:	lsl	sl, r9, #2
   1fdf8:	mov	r1, sl
   1fdfc:	bl	dec <realloc@plt>
   1fe00:	cmp	r0, #0
   1fe04:	mov	r4, r0
   1fe08:	str	r0, [r6, #16]
   1fe0c:	beq	1fe64 <sfbpf_push_buffer_state+0x144>
   1fe10:	sub	r0, sl, #32
   1fe14:	mov	r2, #32
   1fe18:	add	r0, r4, r0
   1fe1c:	mov	r1, #0
   1fe20:	bl	e88 <memset@plt>
   1fe24:	str	r9, [r6, #20]
   1fe28:	lsl	r2, r8, #2
   1fe2c:	b	1fd60 <sfbpf_push_buffer_state+0x40>
   1fe30:	mov	r1, #1
   1fe34:	mov	r0, #4
   1fe38:	bl	d38 <calloc@plt>
   1fe3c:	cmp	r0, #0
   1fe40:	str	r0, [r6, #16]
   1fe44:	beq	1fe64 <sfbpf_push_buffer_state+0x144>
   1fe48:	mov	r3, #1
   1fe4c:	mov	r2, #0
   1fe50:	str	r4, [r6, #24]
   1fe54:	str	r3, [r6, #20]
   1fe58:	mov	r4, r0
   1fe5c:	mov	r8, r2
   1fe60:	b	1fd60 <sfbpf_push_buffer_state+0x40>
   1fe64:	ldr	r0, [pc, #24]	; 1fe84 <sfbpf_push_buffer_state+0x164>
   1fe68:	add	r0, pc, r0
   1fe6c:	bl	1dea4 <yy_fatal_error>
   1fe70:	.word	0x0001e2cc
   1fe74:	.word	0x0001ee08
   1fe78:	.word	0x0001edcc
   1fe7c:	.word	0x0001ed88
   1fe80:	.word	0x000000dc
   1fe84:	.word	0x0000d788

0001fe88 <sfbpf_pop_buffer_state>:
   1fe88:	ldr	r3, [pc, #176]	; 1ff40 <sfbpf_pop_buffer_state+0xb8>
   1fe8c:	push	{r4, r5, r6, r7, r8, lr}
   1fe90:	add	r3, pc, r3
   1fe94:	ldr	r7, [pc, #168]	; 1ff44 <sfbpf_pop_buffer_state+0xbc>
   1fe98:	ldr	r5, [r3, #16]
   1fe9c:	add	r7, pc, r7
   1fea0:	cmp	r5, #0
   1fea4:	popeq	{r4, r5, r6, r7, r8, pc}
   1fea8:	ldr	r4, [r3, #24]
   1feac:	ldr	r6, [r5, r4, lsl #2]
   1feb0:	cmp	r6, #0
   1feb4:	popeq	{r4, r5, r6, r7, r8, pc}
   1feb8:	mov	r3, #0
   1febc:	str	r3, [r5, r4, lsl #2]
   1fec0:	ldr	r3, [r6, #20]
   1fec4:	cmp	r3, #0
   1fec8:	bne	1ff34 <sfbpf_pop_buffer_state+0xac>
   1fecc:	mov	r0, r6
   1fed0:	bl	da4 <free@plt>
   1fed4:	cmp	r4, #0
   1fed8:	mov	r3, #0
   1fedc:	str	r3, [r5, r4, lsl #2]
   1fee0:	popeq	{r4, r5, r6, r7, r8, pc}
   1fee4:	sub	r4, r4, #1
   1fee8:	ldr	r3, [pc, #88]	; 1ff48 <sfbpf_pop_buffer_state+0xc0>
   1feec:	ldr	r2, [r5, r4, lsl #2]
   1fef0:	add	r3, pc, r3
   1fef4:	cmp	r2, #0
   1fef8:	str	r4, [r3, #24]
   1fefc:	popeq	{r4, r5, r6, r7, r8, pc}
   1ff00:	ldr	r1, [pc, #68]	; 1ff4c <sfbpf_pop_buffer_state+0xc4>
   1ff04:	ldr	r0, [r2, #16]
   1ff08:	ldr	r2, [r2, #8]
   1ff0c:	str	r0, [r3, #32]
   1ff10:	str	r2, [r3, #4]
   1ff14:	ldr	r1, [r7, r1]
   1ff18:	str	r2, [r1]
   1ff1c:	ldr	r1, [r5, r4, lsl #2]
   1ff20:	ldr	r1, [r1]
   1ff24:	str	r1, [r3, #36]	; 0x24
   1ff28:	ldrb	r2, [r2]
   1ff2c:	strb	r2, [r3, #28]
   1ff30:	pop	{r4, r5, r6, r7, r8, pc}
   1ff34:	ldr	r0, [r6, #4]
   1ff38:	bl	da4 <free@plt>
   1ff3c:	b	1fecc <sfbpf_pop_buffer_state+0x44>
   1ff40:	.word	0x0001ecb0
   1ff44:	.word	0x0001e15c
   1ff48:	.word	0x0001ec50
   1ff4c:	.word	0x000000dc

0001ff50 <sfbpf__scan_buffer>:
   1ff50:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff54:	cmp	r1, #1
   1ff58:	ldr	r5, [pc, #424]	; 20108 <sfbpf__scan_buffer+0x1b8>
   1ff5c:	add	r5, pc, r5
   1ff60:	bls	200c0 <sfbpf__scan_buffer+0x170>
   1ff64:	sub	r9, r1, #2
   1ff68:	ldrb	r2, [r0, r9]
   1ff6c:	cmp	r2, #0
   1ff70:	bne	200c0 <sfbpf__scan_buffer+0x170>
   1ff74:	add	r1, r0, r1
   1ff78:	ldrb	r7, [r1, #-1]
   1ff7c:	cmp	r7, #0
   1ff80:	bne	200c0 <sfbpf__scan_buffer+0x170>
   1ff84:	mov	r6, r0
   1ff88:	mov	r0, #48	; 0x30
   1ff8c:	bl	e1c <malloc@plt>
   1ff90:	subs	r4, r0, #0
   1ff94:	beq	200fc <sfbpf__scan_buffer+0x1ac>
   1ff98:	ldr	sl, [pc, #364]	; 2010c <sfbpf__scan_buffer+0x1bc>
   1ff9c:	mov	fp, #1
   1ffa0:	add	sl, pc, sl
   1ffa4:	str	r9, [r4, #12]
   1ffa8:	ldr	r8, [sl, #16]
   1ffac:	str	r6, [r4, #4]
   1ffb0:	cmp	r8, #0
   1ffb4:	str	r6, [r4, #8]
   1ffb8:	str	r7, [r4, #20]
   1ffbc:	str	r7, [r4]
   1ffc0:	str	r9, [r4, #16]
   1ffc4:	str	r7, [r4, #24]
   1ffc8:	str	r7, [r4, #40]	; 0x28
   1ffcc:	str	r7, [r4, #44]	; 0x2c
   1ffd0:	str	fp, [r4, #28]
   1ffd4:	beq	200c8 <sfbpf__scan_buffer+0x178>
   1ffd8:	ldr	r3, [sl, #20]
   1ffdc:	ldr	r6, [sl, #24]
   1ffe0:	sub	r2, r3, #1
   1ffe4:	cmp	r2, r6
   1ffe8:	lslhi	r3, r6, #2
   1ffec:	bls	20078 <sfbpf__scan_buffer+0x128>
   1fff0:	ldr	r0, [r8, r3]
   1fff4:	add	r3, r8, r3
   1fff8:	cmp	r4, r0
   1fffc:	beq	20074 <sfbpf__scan_buffer+0x124>
   20000:	cmp	r0, #0
   20004:	beq	20030 <sfbpf__scan_buffer+0xe0>
   20008:	ldr	r2, [pc, #256]	; 20110 <sfbpf__scan_buffer+0x1c0>
   2000c:	add	r2, pc, r2
   20010:	ldr	r1, [r2, #4]
   20014:	ldrb	ip, [r2, #28]
   20018:	ldr	r0, [r2, #32]
   2001c:	strb	ip, [r1]
   20020:	ldr	r2, [r3]
   20024:	str	r1, [r2, #8]
   20028:	ldr	r2, [r3]
   2002c:	str	r0, [r2, #16]
   20030:	ldr	r2, [pc, #220]	; 20114 <sfbpf__scan_buffer+0x1c4>
   20034:	ldr	r0, [pc, #220]	; 20118 <sfbpf__scan_buffer+0x1c8>
   20038:	str	r4, [r3]
   2003c:	add	r2, pc, r2
   20040:	ldr	r1, [r4, #8]
   20044:	ldr	ip, [r4, #16]
   20048:	str	r1, [r2, #4]
   2004c:	str	ip, [r2, #32]
   20050:	ldr	ip, [r5, r0]
   20054:	mov	r0, r4
   20058:	str	r1, [ip]
   2005c:	ldr	r3, [r3]
   20060:	ldr	r3, [r3]
   20064:	str	r3, [r2, #36]	; 0x24
   20068:	ldrb	r3, [r1]
   2006c:	strb	r3, [r2, #28]
   20070:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20074:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20078:	add	r9, r3, #8
   2007c:	mov	r0, r8
   20080:	lsl	r8, r9, #2
   20084:	mov	r1, r8
   20088:	bl	dec <realloc@plt>
   2008c:	cmp	r0, #0
   20090:	mov	r3, r0
   20094:	str	r0, [sl, #16]
   20098:	beq	200f0 <sfbpf__scan_buffer+0x1a0>
   2009c:	sub	r0, r8, #32
   200a0:	add	r0, r3, r0
   200a4:	mov	r1, r7
   200a8:	mov	r2, #32
   200ac:	mov	r8, r3
   200b0:	bl	e88 <memset@plt>
   200b4:	str	r9, [sl, #20]
   200b8:	lsl	r3, r6, #2
   200bc:	b	1fff0 <sfbpf__scan_buffer+0xa0>
   200c0:	mov	r0, #0
   200c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200c8:	mov	r1, fp
   200cc:	mov	r0, #4
   200d0:	bl	d38 <calloc@plt>
   200d4:	cmp	r0, #0
   200d8:	strne	r8, [sl, #24]
   200dc:	str	r0, [sl, #16]
   200e0:	strne	fp, [sl, #20]
   200e4:	movne	r8, r0
   200e8:	movne	r3, r7
   200ec:	bne	1fff0 <sfbpf__scan_buffer+0xa0>
   200f0:	ldr	r0, [pc, #36]	; 2011c <sfbpf__scan_buffer+0x1cc>
   200f4:	add	r0, pc, r0
   200f8:	bl	1dea4 <yy_fatal_error>
   200fc:	ldr	r0, [pc, #28]	; 20120 <sfbpf__scan_buffer+0x1d0>
   20100:	add	r0, pc, r0
   20104:	bl	1dea4 <yy_fatal_error>
   20108:	.word	0x0001e09c
   2010c:	.word	0x0001eba0
   20110:	.word	0x0001eb34
   20114:	.word	0x0001eb04
   20118:	.word	0x000000dc
   2011c:	.word	0x0000d4fc
   20120:	.word	0x0000d694

00020124 <sfbpf__scan_bytes>:
   20124:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20128:	add	r4, r1, #2
   2012c:	mov	r8, r0
   20130:	mov	r0, r4
   20134:	mov	r5, r1
   20138:	bl	e1c <malloc@plt>
   2013c:	ldr	r6, [pc, #488]	; 2032c <sfbpf__scan_bytes+0x208>
   20140:	add	r6, pc, r6
   20144:	subs	r7, r0, #0
   20148:	beq	20320 <sfbpf__scan_bytes+0x1fc>
   2014c:	cmp	r5, #0
   20150:	ble	20160 <sfbpf__scan_bytes+0x3c>
   20154:	mov	r1, r8
   20158:	mov	r2, r5
   2015c:	bl	dc8 <memcpy@plt>
   20160:	add	r2, r7, r5
   20164:	mov	r3, #0
   20168:	cmp	r4, #1
   2016c:	strb	r3, [r2, #1]
   20170:	strb	r3, [r7, r5]
   20174:	bls	202d4 <sfbpf__scan_bytes+0x1b0>
   20178:	sub	r5, r4, #2
   2017c:	ldrb	r3, [r7, r5]
   20180:	cmp	r3, #0
   20184:	bne	202d4 <sfbpf__scan_bytes+0x1b0>
   20188:	add	r4, r7, r4
   2018c:	ldrb	r8, [r4, #-1]
   20190:	cmp	r8, #0
   20194:	bne	202d4 <sfbpf__scan_bytes+0x1b0>
   20198:	mov	r0, #48	; 0x30
   2019c:	bl	e1c <malloc@plt>
   201a0:	subs	r4, r0, #0
   201a4:	beq	20314 <sfbpf__scan_bytes+0x1f0>
   201a8:	ldr	sl, [pc, #384]	; 20330 <sfbpf__scan_bytes+0x20c>
   201ac:	mov	fp, #1
   201b0:	add	sl, pc, sl
   201b4:	str	r5, [r4, #12]
   201b8:	ldr	r9, [sl, #16]
   201bc:	str	r7, [r4, #4]
   201c0:	cmp	r9, #0
   201c4:	str	r7, [r4, #8]
   201c8:	str	r8, [r4, #20]
   201cc:	str	r8, [r4]
   201d0:	str	r5, [r4, #16]
   201d4:	str	r8, [r4, #24]
   201d8:	str	r8, [r4, #40]	; 0x28
   201dc:	str	r8, [r4, #44]	; 0x2c
   201e0:	str	fp, [r4, #28]
   201e4:	beq	202e0 <sfbpf__scan_bytes+0x1bc>
   201e8:	ldr	r3, [sl, #20]
   201ec:	ldr	r5, [sl, #24]
   201f0:	sub	r2, r3, #1
   201f4:	cmp	r2, r5
   201f8:	lslhi	r3, r5, #2
   201fc:	bls	2028c <sfbpf__scan_bytes+0x168>
   20200:	ldr	r2, [r9, r3]
   20204:	add	r3, r9, r3
   20208:	cmp	r4, r2
   2020c:	beq	2027c <sfbpf__scan_bytes+0x158>
   20210:	cmp	r2, #0
   20214:	beq	20240 <sfbpf__scan_bytes+0x11c>
   20218:	ldr	r2, [pc, #276]	; 20334 <sfbpf__scan_bytes+0x210>
   2021c:	add	r2, pc, r2
   20220:	ldr	r1, [r2, #4]
   20224:	ldrb	ip, [r2, #28]
   20228:	ldr	r0, [r2, #32]
   2022c:	strb	ip, [r1]
   20230:	ldr	r2, [r3]
   20234:	str	r1, [r2, #8]
   20238:	ldr	r2, [r3]
   2023c:	str	r0, [r2, #16]
   20240:	ldr	r2, [pc, #240]	; 20338 <sfbpf__scan_bytes+0x214>
   20244:	ldr	r0, [pc, #240]	; 2033c <sfbpf__scan_bytes+0x218>
   20248:	str	r4, [r3]
   2024c:	add	r2, pc, r2
   20250:	ldr	r1, [r4, #8]
   20254:	ldr	ip, [r4, #16]
   20258:	str	r1, [r2, #4]
   2025c:	str	ip, [r2, #32]
   20260:	ldr	r0, [r6, r0]
   20264:	str	r1, [r0]
   20268:	ldr	r3, [r3]
   2026c:	ldr	r3, [r3]
   20270:	str	r3, [r2, #36]	; 0x24
   20274:	ldrb	r3, [r1]
   20278:	strb	r3, [r2, #28]
   2027c:	mov	r3, #1
   20280:	str	r3, [r4, #20]
   20284:	mov	r0, r4
   20288:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2028c:	add	r7, r3, #8
   20290:	mov	r0, r9
   20294:	lsl	r9, r7, #2
   20298:	mov	r1, r9
   2029c:	bl	dec <realloc@plt>
   202a0:	cmp	r0, #0
   202a4:	mov	r3, r0
   202a8:	str	r0, [sl, #16]
   202ac:	beq	20308 <sfbpf__scan_bytes+0x1e4>
   202b0:	sub	r0, r9, #32
   202b4:	add	r0, r3, r0
   202b8:	mov	r1, r8
   202bc:	mov	r2, #32
   202c0:	mov	r9, r3
   202c4:	bl	e88 <memset@plt>
   202c8:	str	r7, [sl, #20]
   202cc:	lsl	r3, r5, #2
   202d0:	b	20200 <sfbpf__scan_bytes+0xdc>
   202d4:	ldr	r0, [pc, #100]	; 20340 <sfbpf__scan_bytes+0x21c>
   202d8:	add	r0, pc, r0
   202dc:	bl	1dea4 <yy_fatal_error>
   202e0:	mov	r1, fp
   202e4:	mov	r0, #4
   202e8:	bl	d38 <calloc@plt>
   202ec:	cmp	r0, #0
   202f0:	strne	r9, [sl, #24]
   202f4:	str	r0, [sl, #16]
   202f8:	strne	fp, [sl, #20]
   202fc:	movne	r9, r0
   20300:	movne	r3, r8
   20304:	bne	20200 <sfbpf__scan_bytes+0xdc>
   20308:	ldr	r0, [pc, #52]	; 20344 <sfbpf__scan_bytes+0x220>
   2030c:	add	r0, pc, r0
   20310:	bl	1dea4 <yy_fatal_error>
   20314:	ldr	r0, [pc, #44]	; 20348 <sfbpf__scan_bytes+0x224>
   20318:	add	r0, pc, r0
   2031c:	bl	1dea4 <yy_fatal_error>
   20320:	ldr	r0, [pc, #36]	; 2034c <sfbpf__scan_bytes+0x228>
   20324:	add	r0, pc, r0
   20328:	bl	1dea4 <yy_fatal_error>
   2032c:	.word	0x0001deb8
   20330:	.word	0x0001e990
   20334:	.word	0x0001e924
   20338:	.word	0x0001e8f4
   2033c:	.word	0x000000dc
   20340:	.word	0x0000d514
   20344:	.word	0x0000d2e4
   20348:	.word	0x0000d47c
   2034c:	.word	0x0000d49c

00020350 <sfbpf__scan_string>:
   20350:	push	{r4, lr}
   20354:	mov	r4, r0
   20358:	bl	e4c <strlen@plt>
   2035c:	mov	r1, r0
   20360:	mov	r0, r4
   20364:	pop	{r4, lr}
   20368:	b	20124 <sfbpf__scan_bytes>

0002036c <sfbpf_get_debug>:
   2036c:	ldr	r3, [pc, #8]	; 2037c <sfbpf_get_debug+0x10>
   20370:	add	r3, pc, r3
   20374:	ldr	r0, [r3, #48]	; 0x30
   20378:	bx	lr
   2037c:	.word	0x0001e7d0

00020380 <sfbpf_set_debug>:
   20380:	ldr	r3, [pc, #8]	; 20390 <sfbpf_set_debug+0x10>
   20384:	add	r3, pc, r3
   20388:	str	r0, [r3, #48]	; 0x30
   2038c:	bx	lr
   20390:	.word	0x0001e7bc

00020394 <sfbpf_lex_destroy>:
   20394:	ldr	r3, [pc, #140]	; 20428 <sfbpf_lex_destroy+0x94>
   20398:	push	{r4, r5, r6, lr}
   2039c:	add	r3, pc, r3
   203a0:	ldr	r5, [r3, #16]
   203a4:	cmp	r5, #0
   203a8:	beq	203e0 <sfbpf_lex_destroy+0x4c>
   203ac:	ldr	r6, [r3, #24]
   203b0:	ldr	r4, [r5, r6, lsl #2]
   203b4:	cmp	r4, #0
   203b8:	beq	203e0 <sfbpf_lex_destroy+0x4c>
   203bc:	mov	r3, #0
   203c0:	str	r3, [r5, r6, lsl #2]
   203c4:	ldr	r3, [r4, #20]
   203c8:	cmp	r3, #0
   203cc:	bne	2041c <sfbpf_lex_destroy+0x88>
   203d0:	mov	r0, r4
   203d4:	bl	da4 <free@plt>
   203d8:	mov	r3, #0
   203dc:	str	r3, [r5, r6, lsl #2]
   203e0:	mov	r0, r5
   203e4:	bl	da4 <free@plt>
   203e8:	ldr	r3, [pc, #60]	; 2042c <sfbpf_lex_destroy+0x98>
   203ec:	mov	r2, #0
   203f0:	add	r3, pc, r3
   203f4:	mov	r0, r2
   203f8:	str	r2, [r3, #16]
   203fc:	str	r2, [r3, #24]
   20400:	str	r2, [r3, #20]
   20404:	str	r2, [r3, #4]
   20408:	str	r2, [r3, #40]	; 0x28
   2040c:	str	r2, [r3]
   20410:	str	r2, [r3, #36]	; 0x24
   20414:	str	r2, [r3, #44]	; 0x2c
   20418:	pop	{r4, r5, r6, pc}
   2041c:	ldr	r0, [r4, #4]
   20420:	bl	da4 <free@plt>
   20424:	b	203d0 <sfbpf_lex_destroy+0x3c>
   20428:	.word	0x0001e7a4
   2042c:	.word	0x0001e750

00020430 <sfbpf_alloc>:
   20430:	b	e1c <malloc@plt>

00020434 <sfbpf_realloc>:
   20434:	b	dec <realloc@plt>

00020438 <sfbpf_free>:
   20438:	b	da4 <free@plt>

0002043c <sf_lex_init>:
   2043c:	push	{r4, lr}
   20440:	mov	r4, r0
   20444:	bl	e4c <strlen@plt>
   20448:	mov	r1, r0
   2044c:	mov	r0, r4
   20450:	bl	20124 <sfbpf__scan_bytes>
   20454:	ldr	r3, [pc, #8]	; 20464 <sf_lex_init+0x28>
   20458:	add	r3, pc, r3
   2045c:	str	r0, [r3, #52]	; 0x34
   20460:	pop	{r4, pc}
   20464:	.word	0x0001e6e8

00020468 <sf_lex_cleanup>:
   20468:	ldr	r3, [pc, #100]	; 204d4 <sf_lex_cleanup+0x6c>
   2046c:	push	{r4, lr}
   20470:	add	r3, pc, r3
   20474:	ldr	r4, [r3, #52]	; 0x34
   20478:	cmp	r4, #0
   2047c:	beq	204b4 <sf_lex_cleanup+0x4c>
   20480:	ldr	r2, [r3, #16]
   20484:	cmp	r2, #0
   20488:	beq	204a0 <sf_lex_cleanup+0x38>
   2048c:	ldr	r3, [r3, #24]
   20490:	ldr	r1, [r2, r3, lsl #2]
   20494:	cmp	r4, r1
   20498:	moveq	r1, #0
   2049c:	streq	r1, [r2, r3, lsl #2]
   204a0:	ldr	r3, [r4, #20]
   204a4:	cmp	r3, #0
   204a8:	bne	204c8 <sf_lex_cleanup+0x60>
   204ac:	mov	r0, r4
   204b0:	bl	da4 <free@plt>
   204b4:	ldr	r3, [pc, #28]	; 204d8 <sf_lex_cleanup+0x70>
   204b8:	mov	r2, #0
   204bc:	add	r3, pc, r3
   204c0:	str	r2, [r3, #52]	; 0x34
   204c4:	pop	{r4, pc}
   204c8:	ldr	r0, [r4, #4]
   204cc:	bl	da4 <free@plt>
   204d0:	b	204ac <sf_lex_cleanup+0x44>
   204d4:	.word	0x0001e6d0
   204d8:	.word	0x0001e684

000204dc <sfbpf_wrap>:
   204dc:	mov	r0, #1
   204e0:	bx	lr

000204e4 <__udivsi3>:
   204e4:	subs	r2, r1, #1
   204e8:	bxeq	lr
   204ec:	bcc	206c4 <__udivsi3+0x1e0>
   204f0:	cmp	r0, r1
   204f4:	bls	206a8 <__udivsi3+0x1c4>
   204f8:	tst	r1, r2
   204fc:	beq	206b4 <__udivsi3+0x1d0>
   20500:	clz	r3, r0
   20504:	clz	r2, r1
   20508:	sub	r3, r2, r3
   2050c:	rsbs	r3, r3, #31
   20510:	addne	r3, r3, r3, lsl #1
   20514:	mov	r2, #0
   20518:	addne	pc, pc, r3, lsl #2
   2051c:	nop			; (mov r0, r0)
   20520:	cmp	r0, r1, lsl #31
   20524:	adc	r2, r2, r2
   20528:	subcs	r0, r0, r1, lsl #31
   2052c:	cmp	r0, r1, lsl #30
   20530:	adc	r2, r2, r2
   20534:	subcs	r0, r0, r1, lsl #30
   20538:	cmp	r0, r1, lsl #29
   2053c:	adc	r2, r2, r2
   20540:	subcs	r0, r0, r1, lsl #29
   20544:	cmp	r0, r1, lsl #28
   20548:	adc	r2, r2, r2
   2054c:	subcs	r0, r0, r1, lsl #28
   20550:	cmp	r0, r1, lsl #27
   20554:	adc	r2, r2, r2
   20558:	subcs	r0, r0, r1, lsl #27
   2055c:	cmp	r0, r1, lsl #26
   20560:	adc	r2, r2, r2
   20564:	subcs	r0, r0, r1, lsl #26
   20568:	cmp	r0, r1, lsl #25
   2056c:	adc	r2, r2, r2
   20570:	subcs	r0, r0, r1, lsl #25
   20574:	cmp	r0, r1, lsl #24
   20578:	adc	r2, r2, r2
   2057c:	subcs	r0, r0, r1, lsl #24
   20580:	cmp	r0, r1, lsl #23
   20584:	adc	r2, r2, r2
   20588:	subcs	r0, r0, r1, lsl #23
   2058c:	cmp	r0, r1, lsl #22
   20590:	adc	r2, r2, r2
   20594:	subcs	r0, r0, r1, lsl #22
   20598:	cmp	r0, r1, lsl #21
   2059c:	adc	r2, r2, r2
   205a0:	subcs	r0, r0, r1, lsl #21
   205a4:	cmp	r0, r1, lsl #20
   205a8:	adc	r2, r2, r2
   205ac:	subcs	r0, r0, r1, lsl #20
   205b0:	cmp	r0, r1, lsl #19
   205b4:	adc	r2, r2, r2
   205b8:	subcs	r0, r0, r1, lsl #19
   205bc:	cmp	r0, r1, lsl #18
   205c0:	adc	r2, r2, r2
   205c4:	subcs	r0, r0, r1, lsl #18
   205c8:	cmp	r0, r1, lsl #17
   205cc:	adc	r2, r2, r2
   205d0:	subcs	r0, r0, r1, lsl #17
   205d4:	cmp	r0, r1, lsl #16
   205d8:	adc	r2, r2, r2
   205dc:	subcs	r0, r0, r1, lsl #16
   205e0:	cmp	r0, r1, lsl #15
   205e4:	adc	r2, r2, r2
   205e8:	subcs	r0, r0, r1, lsl #15
   205ec:	cmp	r0, r1, lsl #14
   205f0:	adc	r2, r2, r2
   205f4:	subcs	r0, r0, r1, lsl #14
   205f8:	cmp	r0, r1, lsl #13
   205fc:	adc	r2, r2, r2
   20600:	subcs	r0, r0, r1, lsl #13
   20604:	cmp	r0, r1, lsl #12
   20608:	adc	r2, r2, r2
   2060c:	subcs	r0, r0, r1, lsl #12
   20610:	cmp	r0, r1, lsl #11
   20614:	adc	r2, r2, r2
   20618:	subcs	r0, r0, r1, lsl #11
   2061c:	cmp	r0, r1, lsl #10
   20620:	adc	r2, r2, r2
   20624:	subcs	r0, r0, r1, lsl #10
   20628:	cmp	r0, r1, lsl #9
   2062c:	adc	r2, r2, r2
   20630:	subcs	r0, r0, r1, lsl #9
   20634:	cmp	r0, r1, lsl #8
   20638:	adc	r2, r2, r2
   2063c:	subcs	r0, r0, r1, lsl #8
   20640:	cmp	r0, r1, lsl #7
   20644:	adc	r2, r2, r2
   20648:	subcs	r0, r0, r1, lsl #7
   2064c:	cmp	r0, r1, lsl #6
   20650:	adc	r2, r2, r2
   20654:	subcs	r0, r0, r1, lsl #6
   20658:	cmp	r0, r1, lsl #5
   2065c:	adc	r2, r2, r2
   20660:	subcs	r0, r0, r1, lsl #5
   20664:	cmp	r0, r1, lsl #4
   20668:	adc	r2, r2, r2
   2066c:	subcs	r0, r0, r1, lsl #4
   20670:	cmp	r0, r1, lsl #3
   20674:	adc	r2, r2, r2
   20678:	subcs	r0, r0, r1, lsl #3
   2067c:	cmp	r0, r1, lsl #2
   20680:	adc	r2, r2, r2
   20684:	subcs	r0, r0, r1, lsl #2
   20688:	cmp	r0, r1, lsl #1
   2068c:	adc	r2, r2, r2
   20690:	subcs	r0, r0, r1, lsl #1
   20694:	cmp	r0, r1
   20698:	adc	r2, r2, r2
   2069c:	subcs	r0, r0, r1
   206a0:	mov	r0, r2
   206a4:	bx	lr
   206a8:	moveq	r0, #1
   206ac:	movne	r0, #0
   206b0:	bx	lr
   206b4:	clz	r2, r1
   206b8:	rsb	r2, r2, #31
   206bc:	lsr	r0, r0, r2
   206c0:	bx	lr
   206c4:	cmp	r0, #0
   206c8:	mvnne	r0, #0
   206cc:	b	206f0 <__aeabi_idiv0>

000206d0 <__aeabi_uidivmod>:
   206d0:	cmp	r1, #0
   206d4:	beq	206c4 <__udivsi3+0x1e0>
   206d8:	push	{r0, r1, lr}
   206dc:	bl	204e4 <__udivsi3>
   206e0:	pop	{r1, r2, lr}
   206e4:	mul	r3, r2, r0
   206e8:	sub	r1, r1, r3
   206ec:	bx	lr

000206f0 <__aeabi_idiv0>:
   206f0:	push	{r1, lr}
   206f4:	mov	r0, #8
   206f8:	bl	d44 <raise@plt>
   206fc:	pop	{r1, pc}

Disassembly of section .fini:

00020700 <_fini>:
   20700:	push	{r3, lr}
   20704:	pop	{r3, pc}
