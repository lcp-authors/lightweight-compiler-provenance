
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014e08 <.init>:
   14e08:	push	{r3, lr}
   14e0c:	bl	14f84 <_start@@Base+0x3c>
   14e10:	pop	{r3, pc}

Disassembly of section .plt:

00014e14 <raise@plt-0x14>:
   14e14:	push	{lr}		; (str lr, [sp, #-4]!)
   14e18:	ldr	lr, [pc, #4]	; 14e24 <raise@plt-0x4>
   14e1c:	add	lr, pc, lr
   14e20:	ldr	pc, [lr, #8]!
   14e24:	ldrdeq	r7, [r4], -ip

00014e28 <raise@plt>:
   14e28:	add	ip, pc, #0, 12
   14e2c:	add	ip, ip, #290816	; 0x47000
   14e30:	ldr	pc, [ip, #476]!	; 0x1dc

00014e34 <strcmp@plt>:
   14e34:	add	ip, pc, #0, 12
   14e38:	add	ip, ip, #290816	; 0x47000
   14e3c:	ldr	pc, [ip, #468]!	; 0x1d4

00014e40 <memmove@plt>:
   14e40:	add	ip, pc, #0, 12
   14e44:	add	ip, ip, #290816	; 0x47000
   14e48:	ldr	pc, [ip, #460]!	; 0x1cc

00014e4c <free@plt>:
   14e4c:	add	ip, pc, #0, 12
   14e50:	add	ip, ip, #290816	; 0x47000
   14e54:	ldr	pc, [ip, #452]!	; 0x1c4

00014e58 <memcpy@plt>:
   14e58:	add	ip, pc, #0, 12
   14e5c:	add	ip, ip, #290816	; 0x47000
   14e60:	ldr	pc, [ip, #444]!	; 0x1bc

00014e64 <memcmp@plt>:
   14e64:	add	ip, pc, #0, 12
   14e68:	add	ip, ip, #290816	; 0x47000
   14e6c:	ldr	pc, [ip, #436]!	; 0x1b4

00014e70 <__isinff@plt>:
   14e70:	add	ip, pc, #0, 12
   14e74:	add	ip, ip, #290816	; 0x47000
   14e78:	ldr	pc, [ip, #428]!	; 0x1ac

00014e7c <__isinf@plt>:
   14e7c:	add	ip, pc, #0, 12
   14e80:	add	ip, ip, #290816	; 0x47000
   14e84:	ldr	pc, [ip, #420]!	; 0x1a4

00014e88 <realloc@plt>:
   14e88:	add	ip, pc, #0, 12
   14e8c:	add	ip, ip, #290816	; 0x47000
   14e90:	ldr	pc, [ip, #412]!	; 0x19c

00014e94 <fwrite@plt>:
   14e94:	add	ip, pc, #0, 12
   14e98:	add	ip, ip, #290816	; 0x47000
   14e9c:	ldr	pc, [ip, #404]!	; 0x194

00014ea0 <malloc@plt>:
   14ea0:	add	ip, pc, #0, 12
   14ea4:	add	ip, ip, #290816	; 0x47000
   14ea8:	ldr	pc, [ip, #396]!	; 0x18c

00014eac <__libc_start_main@plt>:
   14eac:	add	ip, pc, #0, 12
   14eb0:	add	ip, ip, #290816	; 0x47000
   14eb4:	ldr	pc, [ip, #388]!	; 0x184

00014eb8 <__gmon_start__@plt>:
   14eb8:	add	ip, pc, #0, 12
   14ebc:	add	ip, ip, #290816	; 0x47000
   14ec0:	ldr	pc, [ip, #380]!	; 0x17c

00014ec4 <strlen@plt>:
   14ec4:	add	ip, pc, #0, 12
   14ec8:	add	ip, ip, #290816	; 0x47000
   14ecc:	ldr	pc, [ip, #372]!	; 0x174

00014ed0 <fprintf@plt>:
   14ed0:	add	ip, pc, #0, 12
   14ed4:	add	ip, ip, #290816	; 0x47000
   14ed8:	ldr	pc, [ip, #364]!	; 0x16c

00014edc <posix_memalign@plt>:
   14edc:	add	ip, pc, #0, 12
   14ee0:	add	ip, ip, #290816	; 0x47000
   14ee4:	ldr	pc, [ip, #356]!	; 0x164

00014ee8 <memset@plt>:
   14ee8:	add	ip, pc, #0, 12
   14eec:	add	ip, ip, #290816	; 0x47000
   14ef0:	ldr	pc, [ip, #348]!	; 0x15c

00014ef4 <strncpy@plt>:
   14ef4:	add	ip, pc, #0, 12
   14ef8:	add	ip, ip, #290816	; 0x47000
   14efc:	ldr	pc, [ip, #340]!	; 0x154

00014f00 <strtod@plt>:
   14f00:	add	ip, pc, #0, 12
   14f04:	add	ip, ip, #290816	; 0x47000
   14f08:	ldr	pc, [ip, #332]!	; 0x14c

00014f0c <memchr@plt>:
   14f0c:	add	ip, pc, #0, 12
   14f10:	add	ip, ip, #290816	; 0x47000
   14f14:	ldr	pc, [ip, #324]!	; 0x144

00014f18 <fputc@plt>:
   14f18:	add	ip, pc, #0, 12
   14f1c:	add	ip, ip, #290816	; 0x47000
   14f20:	ldr	pc, [ip, #316]!	; 0x13c

00014f24 <sprintf@plt>:
   14f24:	add	ip, pc, #0, 12
   14f28:	add	ip, ip, #290816	; 0x47000
   14f2c:	ldr	pc, [ip, #308]!	; 0x134

00014f30 <abort@plt>:
   14f30:	add	ip, pc, #0, 12
   14f34:	add	ip, ip, #290816	; 0x47000
   14f38:	ldr	pc, [ip, #300]!	; 0x12c

00014f3c <__assert_fail@plt>:
   14f3c:	add	ip, pc, #0, 12
   14f40:	add	ip, ip, #290816	; 0x47000
   14f44:	ldr	pc, [ip, #292]!	; 0x124

Disassembly of section .text:

00014f48 <_start@@Base>:
   14f48:	mov	fp, #0
   14f4c:	mov	lr, #0
   14f50:	pop	{r1}		; (ldr r1, [sp], #4)
   14f54:	mov	r2, sp
   14f58:	push	{r2}		; (str r2, [sp, #-4]!)
   14f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f60:	ldr	ip, [pc, #16]	; 14f78 <_start@@Base+0x30>
   14f64:	push	{ip}		; (str ip, [sp, #-4]!)
   14f68:	ldr	r0, [pc, #12]	; 14f7c <_start@@Base+0x34>
   14f6c:	ldr	r3, [pc, #12]	; 14f80 <_start@@Base+0x38>
   14f70:	bl	14eac <__libc_start_main@plt>
   14f74:	bl	14f30 <abort@plt>
   14f78:	muleq	r4, ip, r6
   14f7c:	muleq	r1, ip, lr
   14f80:	andeq	r5, r4, ip, lsr r6
   14f84:	ldr	r3, [pc, #20]	; 14fa0 <_start@@Base+0x58>
   14f88:	ldr	r2, [pc, #20]	; 14fa4 <_start@@Base+0x5c>
   14f8c:	add	r3, pc, r3
   14f90:	ldr	r2, [r3, r2]
   14f94:	cmp	r2, #0
   14f98:	bxeq	lr
   14f9c:	b	14eb8 <__gmon_start__@plt>
   14fa0:	andeq	r7, r4, ip, rrx
   14fa4:	andeq	r0, r0, r4, ror r0
   14fa8:	ldr	r0, [pc, #24]	; 14fc8 <_start@@Base+0x80>
   14fac:	ldr	r3, [pc, #24]	; 14fcc <_start@@Base+0x84>
   14fb0:	cmp	r3, r0
   14fb4:	bxeq	lr
   14fb8:	ldr	r3, [pc, #16]	; 14fd0 <_start@@Base+0x88>
   14fbc:	cmp	r3, #0
   14fc0:	bxeq	lr
   14fc4:	bx	r3
   14fc8:	andeq	ip, r5, r8, asr r3
   14fcc:	andeq	ip, r5, r8, asr r3
   14fd0:	andeq	r0, r0, r0
   14fd4:	ldr	r0, [pc, #36]	; 15000 <_start@@Base+0xb8>
   14fd8:	ldr	r1, [pc, #36]	; 15004 <_start@@Base+0xbc>
   14fdc:	sub	r1, r1, r0
   14fe0:	asr	r1, r1, #2
   14fe4:	add	r1, r1, r1, lsr #31
   14fe8:	asrs	r1, r1, #1
   14fec:	bxeq	lr
   14ff0:	ldr	r3, [pc, #16]	; 15008 <_start@@Base+0xc0>
   14ff4:	cmp	r3, #0
   14ff8:	bxeq	lr
   14ffc:	bx	r3
   15000:	andeq	ip, r5, r8, asr r3
   15004:	andeq	ip, r5, r8, asr r3
   15008:	andeq	r0, r0, r0
   1500c:	push	{r4, lr}
   15010:	ldr	r4, [pc, #24]	; 15030 <_start@@Base+0xe8>
   15014:	ldrb	r3, [r4]
   15018:	cmp	r3, #0
   1501c:	popne	{r4, pc}
   15020:	bl	14fa8 <_start@@Base+0x60>
   15024:	mov	r3, #1
   15028:	strb	r3, [r4]
   1502c:	pop	{r4, pc}
   15030:	andeq	ip, r5, r8, asr r3
   15034:	b	14fd4 <_start@@Base+0x8c>

00015038 <test_json@@Base>:
   15038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1503c:	add	fp, sp, #28
   15040:	sub	sp, sp, #364	; 0x16c
   15044:	mov	r6, r0
   15048:	add	r0, sp, #100	; 0x64
   1504c:	mov	r7, r3
   15050:	mov	r9, r2
   15054:	mov	r4, r1
   15058:	bl	2cfc4 <flatcc_builder_init@@Base>
   1505c:	add	r0, sp, #12
   15060:	mov	r1, #0
   15064:	bl	44b74 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15068:	ldr	r0, [fp, #12]
   1506c:	ldr	r5, [fp, #8]
   15070:	ldr	r8, [fp, #16]
   15074:	and	r1, r0, #1
   15078:	tst	r0, #16
   1507c:	strb	r1, [sp, #38]	; 0x26
   15080:	uxtb	r1, r0
   15084:	ubfx	r2, r1, #1, #1
   15088:	strb	r2, [sp, #39]	; 0x27
   1508c:	ubfx	r2, r1, #2, #1
   15090:	strb	r2, [sp, #40]	; 0x28
   15094:	ubfx	r1, r1, #3, #1
   15098:	strb	r1, [sp, #41]	; 0x29
   1509c:	movne	r1, #2
   150a0:	strbne	r1, [sp, #37]	; 0x25
   150a4:	tst	r0, #32
   150a8:	movne	r0, #0
   150ac:	strbne	r0, [sp, #39]	; 0x27
   150b0:	movwne	r0, #258	; 0x102
   150b4:	strhne	r0, [sp, #37]	; 0x25
   150b8:	mov	r0, r4
   150bc:	bl	14ec4 <strlen@plt>
   150c0:	mov	r3, r0
   150c4:	ldm	r6, {r0, r1}
   150c8:	str	r5, [sp]
   150cc:	mov	r2, r4
   150d0:	stmib	sp, {r0, r1}
   150d4:	add	r0, sp, #100	; 0x64
   150d8:	add	r1, sp, #60	; 0x3c
   150dc:	bl	37ffc <flatcc_json_parser_table_as_root@@Base>
   150e0:	cmp	r0, r7
   150e4:	bne	15194 <test_json@@Base+0x15c>
   150e8:	mov	r5, #0
   150ec:	cmp	r7, #0
   150f0:	beq	150fc <test_json@@Base+0xc4>
   150f4:	mov	r4, #0
   150f8:	b	15170 <test_json@@Base+0x138>
   150fc:	add	r0, sp, #100	; 0x64
   15100:	sub	r1, fp, #56	; 0x38
   15104:	bl	31a60 <flatcc_builder_finalize_aligned_buffer@@Base>
   15108:	ldr	r2, [r6]
   1510c:	ldr	r3, [r6, #12]
   15110:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15114:	mov	r4, r0
   15118:	bl	32da0 <flatcc_verify_table_as_root@@Base>
   1511c:	cmp	r0, #0
   15120:	bne	1524c <test_json@@Base+0x214>
   15124:	ldr	r0, [r6, #8]
   15128:	ldr	r3, [r6]
   1512c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15130:	add	r6, sp, #12
   15134:	mov	r1, r4
   15138:	str	r0, [sp]
   1513c:	mov	r0, r6
   15140:	bl	441dc <flatcc_json_printer_table_as_root@@Base>
   15144:	sub	r1, fp, #60	; 0x3c
   15148:	mov	r0, r6
   1514c:	bl	44c9c <flatcc_json_printer_get_buffer@@Base>
   15150:	mov	r6, r0
   15154:	cmp	r0, #0
   15158:	beq	151c8 <test_json@@Base+0x190>
   1515c:	mov	r0, r9
   15160:	mov	r1, r6
   15164:	bl	14e34 <strcmp@plt>
   15168:	cmp	r0, #0
   1516c:	bne	151c8 <test_json@@Base+0x190>
   15170:	mov	r0, r4
   15174:	bl	31ba0 <flatcc_builder_aligned_free@@Base>
   15178:	add	r0, sp, #100	; 0x64
   1517c:	bl	2d32c <flatcc_builder_clear@@Base>
   15180:	add	r0, sp, #12
   15184:	bl	44d24 <flatcc_json_printer_clear@@Base>
   15188:	mov	r0, r5
   1518c:	sub	sp, fp, #28
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15194:	ldr	r6, [pc, #692]	; 15450 <test_json@@Base+0x418>
   15198:	cmp	r7, #0
   1519c:	ldr	r6, [pc, r6]
   151a0:	beq	15228 <test_json@@Base+0x1f0>
   151a4:	ldr	r5, [r6]
   151a8:	cmp	r0, #0
   151ac:	bne	153a4 <test_json@@Base+0x36c>
   151b0:	mov	r0, r7
   151b4:	bl	33ed0 <flatcc_json_parser_error_string@@Base>
   151b8:	ldr	r1, [pc, #668]	; 1545c <test_json@@Base+0x424>
   151bc:	mov	r3, r0
   151c0:	add	r1, pc, r1
   151c4:	b	1523c <test_json@@Base+0x204>
   151c8:	ldr	r7, [pc, #684]	; 1547c <test_json@@Base+0x444>
   151cc:	mov	r2, r8
   151d0:	ldr	r7, [pc, r7]
   151d4:	ldr	r0, [r7]
   151d8:	ldr	r1, [pc, #672]	; 15480 <test_json@@Base+0x448>
   151dc:	add	r1, pc, r1
   151e0:	bl	14ed0 <fprintf@plt>
   151e4:	ldr	r0, [r7]
   151e8:	ldr	r5, [pc, #660]	; 15484 <test_json@@Base+0x44c>
   151ec:	mov	r2, r6
   151f0:	add	r5, pc, r5
   151f4:	mov	r1, r5
   151f8:	bl	14ed0 <fprintf@plt>
   151fc:	ldr	r3, [r7]
   15200:	ldr	r0, [pc, #640]	; 15488 <test_json@@Base+0x450>
   15204:	mov	r1, #10
   15208:	mov	r2, #1
   1520c:	add	r0, pc, r0
   15210:	bl	14e94 <fwrite@plt>
   15214:	ldr	r0, [r7]
   15218:	mov	r1, r5
   1521c:	mov	r2, r9
   15220:	bl	14ed0 <fprintf@plt>
   15224:	b	1527c <test_json@@Base+0x244>
   15228:	ldr	r5, [r6]
   1522c:	bl	33ed0 <flatcc_json_parser_error_string@@Base>
   15230:	ldr	r1, [pc, #552]	; 15460 <test_json@@Base+0x428>
   15234:	mov	r3, r0
   15238:	add	r1, pc, r1
   1523c:	mov	r0, r5
   15240:	mov	r2, r8
   15244:	bl	14ed0 <fprintf@plt>
   15248:	b	153e0 <test_json@@Base+0x3a8>
   1524c:	ldr	r1, [pc, #540]	; 15470 <test_json@@Base+0x438>
   15250:	ldr	r1, [pc, r1]
   15254:	ldr	r5, [r1]
   15258:	bl	32134 <flatcc_verify_error_string@@Base>
   1525c:	str	r0, [sp]
   15260:	mov	r0, r5
   15264:	mov	r3, r8
   15268:	ldr	r1, [pc, #516]	; 15474 <test_json@@Base+0x43c>
   1526c:	ldr	r2, [pc, #516]	; 15478 <test_json@@Base+0x440>
   15270:	add	r1, pc, r1
   15274:	add	r2, pc, r2
   15278:	bl	14ed0 <fprintf@plt>
   1527c:	mvn	r5, #0
   15280:	cmp	r4, #0
   15284:	beq	150f4 <test_json@@Base+0xbc>
   15288:	ldr	r0, [pc, #508]	; 1548c <test_json@@Base+0x454>
   1528c:	ldr	r0, [pc, r0]
   15290:	ldr	r9, [fp, #-56]	; 0xffffffc8
   15294:	ldr	r6, [r0]
   15298:	ldr	r1, [pc, #496]	; 15490 <test_json@@Base+0x458>
   1529c:	ldr	r2, [pc, #496]	; 15494 <test_json@@Base+0x45c>
   152a0:	add	r1, pc, r1
   152a4:	add	r2, pc, r2
   152a8:	mov	r0, r6
   152ac:	bl	14ed0 <fprintf@plt>
   152b0:	cmp	r9, #0
   152b4:	beq	1538c <test_json@@Base+0x354>
   152b8:	sub	r7, fp, #49	; 0x31
   152bc:	mov	r8, #0
   152c0:	ands	sl, r8, #15
   152c4:	bne	152fc <test_json@@Base+0x2c4>
   152c8:	cmp	r8, #0
   152cc:	beq	152e4 <test_json@@Base+0x2ac>
   152d0:	ldr	r1, [pc, #448]	; 15498 <test_json@@Base+0x460>
   152d4:	mov	r0, r6
   152d8:	mov	r2, r7
   152dc:	add	r1, pc, r1
   152e0:	bl	14ed0 <fprintf@plt>
   152e4:	ldr	r1, [pc, #432]	; 1549c <test_json@@Base+0x464>
   152e8:	mov	r0, r6
   152ec:	mov	r2, r8
   152f0:	add	r1, pc, r1
   152f4:	bl	14ed0 <fprintf@plt>
   152f8:	b	15310 <test_json@@Base+0x2d8>
   152fc:	tst	r8, #7
   15300:	bne	15310 <test_json@@Base+0x2d8>
   15304:	mov	r0, #32
   15308:	mov	r1, r6
   1530c:	bl	14f18 <fputc@plt>
   15310:	ldrb	r2, [r4, r8]
   15314:	ldr	r1, [pc, #396]	; 154a8 <test_json@@Base+0x470>
   15318:	mov	r0, r6
   1531c:	add	r1, pc, r1
   15320:	bl	14ed0 <fprintf@plt>
   15324:	ldrb	r0, [r4, r8]
   15328:	add	r8, r8, #1
   1532c:	sub	r1, r0, #32
   15330:	uxtb	r1, r1
   15334:	cmp	r1, #94	; 0x5e
   15338:	mov	r1, #0
   1533c:	movwhi	r0, #46	; 0x2e
   15340:	cmp	r9, r8
   15344:	strb	r0, [r7, sl]
   15348:	add	r0, r7, sl
   1534c:	strb	r1, [r0, #1]
   15350:	bne	152c0 <test_json@@Base+0x288>
   15354:	tst	r9, #15
   15358:	beq	1538c <test_json@@Base+0x354>
   1535c:	ldr	r8, [pc, #316]	; 154a0 <test_json@@Base+0x468>
   15360:	add	r7, r9, #1
   15364:	add	r8, pc, r8
   15368:	mov	r0, r8
   1536c:	mov	r1, #3
   15370:	mov	r2, #1
   15374:	mov	r3, r6
   15378:	bl	14e94 <fwrite@plt>
   1537c:	add	r0, r7, #1
   15380:	tst	r7, #15
   15384:	mov	r7, r0
   15388:	bne	15368 <test_json@@Base+0x330>
   1538c:	ldr	r1, [pc, #272]	; 154a4 <test_json@@Base+0x46c>
   15390:	sub	r2, fp, #49	; 0x31
   15394:	mov	r0, r6
   15398:	add	r1, pc, r1
   1539c:	bl	14ed0 <fprintf@plt>
   153a0:	b	15170 <test_json@@Base+0x138>
   153a4:	bl	33ed0 <flatcc_json_parser_error_string@@Base>
   153a8:	ldr	r1, [pc, #164]	; 15454 <test_json@@Base+0x41c>
   153ac:	mov	r3, r0
   153b0:	mov	r0, r5
   153b4:	mov	r2, r8
   153b8:	add	r1, pc, r1
   153bc:	bl	14ed0 <fprintf@plt>
   153c0:	ldr	r5, [r6]
   153c4:	mov	r0, r7
   153c8:	bl	33ed0 <flatcc_json_parser_error_string@@Base>
   153cc:	ldr	r1, [pc, #132]	; 15458 <test_json@@Base+0x420>
   153d0:	mov	r2, r0
   153d4:	mov	r0, r5
   153d8:	add	r1, pc, r1
   153dc:	bl	14ed0 <fprintf@plt>
   153e0:	ldr	r0, [r6]
   153e4:	ldr	r1, [pc, #120]	; 15464 <test_json@@Base+0x42c>
   153e8:	mov	r2, r4
   153ec:	add	r1, pc, r1
   153f0:	bl	14ed0 <fprintf@plt>
   153f4:	ldr	r4, [pc, #108]	; 15468 <test_json@@Base+0x430>
   153f8:	ldr	r4, [pc, r4]
   153fc:	ldr	r0, [sp, #76]	; 0x4c
   15400:	ldr	r3, [r4]
   15404:	cmp	r0, #2
   15408:	blt	15434 <test_json@@Base+0x3fc>
   1540c:	mov	r5, #0
   15410:	mov	r0, #32
   15414:	mov	r1, r3
   15418:	bl	14f18 <fputc@plt>
   1541c:	ldr	r0, [sp, #76]	; 0x4c
   15420:	ldr	r3, [r4]
   15424:	add	r5, r5, #1
   15428:	sub	r0, r0, #1
   1542c:	cmp	r5, r0
   15430:	blt	15410 <test_json@@Base+0x3d8>
   15434:	ldr	r0, [pc, #48]	; 1546c <test_json@@Base+0x434>
   15438:	mov	r1, #2
   1543c:	mov	r2, #1
   15440:	add	r0, pc, r0
   15444:	bl	14e94 <fwrite@plt>
   15448:	mvn	r5, #0
   1544c:	b	150f4 <test_json@@Base+0xbc>
   15450:	andeq	r6, r4, ip, asr #29
   15454:	strdeq	r0, [r3], -r4
   15458:	andeq	r0, r3, fp, lsl r3
   1545c:	andeq	r0, r3, r2, lsl r5
   15460:	ldrdeq	r0, [r3], -sl
   15464:	andeq	r2, r3, ip, lsl lr
   15468:	andeq	r6, r4, r0, ror ip
   1546c:	strdeq	r0, [r3], -r3
   15470:	andeq	r6, r4, r8, lsl lr
   15474:	andeq	r0, r3, r6, asr #9
   15478:	andeq	r0, r3, r9, ror #9
   1547c:	muleq	r4, r8, lr
   15480:	andeq	r0, r3, r3, ror #11
   15484:	andeq	r3, r3, r8, lsl r0
   15488:	andeq	r0, r3, r8, ror #11
   1548c:	ldrdeq	r6, [r4], -ip
   15490:	andeq	r2, r3, r1, ror #30
   15494:	andeq	r0, r3, fp, asr r5
   15498:	andeq	r2, r3, sl, lsr #30
   1549c:	andeq	r2, r3, ip, lsl pc
   154a0:			; <UNDEFINED> instruction: 0x00032eb6
   154a4:	andeq	r2, r3, lr, ror #28
   154a8:	strdeq	r2, [r3], -r8

000154ac <edge_case_tests@@Base>:
   154ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154b0:	add	fp, sp, #28
   154b4:	sub	sp, sp, #28
   154b8:	mov	r9, #0
   154bc:	mov	r0, #158	; 0x9e
   154c0:	mov	r3, #0
   154c4:	str	r9, [sp]
   154c8:	str	r9, [sp, #4]
   154cc:	str	r0, [sp, #8]
   154d0:	ldr	r4, [pc, #468]	; 156ac <edge_case_tests@@Base+0x200>
   154d4:	ldr	r1, [pc, #468]	; 156b0 <edge_case_tests@@Base+0x204>
   154d8:	ldr	r2, [pc, #468]	; 156b4 <edge_case_tests@@Base+0x208>
   154dc:	add	r4, pc, r4
   154e0:	add	r1, pc, r1
   154e4:	add	r2, pc, r2
   154e8:	mov	r0, r4
   154ec:	bl	15038 <test_json@@Base>
   154f0:	str	r0, [sp, #24]
   154f4:	mov	r7, #2
   154f8:	mov	r0, #168	; 0xa8
   154fc:	mov	r3, #0
   15500:	stm	sp, {r7, r9}
   15504:	str	r0, [sp, #8]
   15508:	mov	r0, r4
   1550c:	ldr	r5, [pc, #420]	; 156b8 <edge_case_tests@@Base+0x20c>
   15510:	ldr	sl, [pc, #420]	; 156bc <edge_case_tests@@Base+0x210>
   15514:	add	r5, pc, r5
   15518:	add	sl, pc, sl
   1551c:	mov	r1, r5
   15520:	mov	r2, sl
   15524:	bl	15038 <test_json@@Base>
   15528:	str	r0, [sp, #20]
   1552c:	mov	r0, #172	; 0xac
   15530:	str	r9, [sp]
   15534:	str	r7, [sp, #4]
   15538:	mov	r3, #0
   1553c:	str	r0, [sp, #8]
   15540:	mov	r0, r4
   15544:	ldr	r1, [pc, #372]	; 156c0 <edge_case_tests@@Base+0x214>
   15548:	ldr	r2, [pc, #372]	; 156c4 <edge_case_tests@@Base+0x218>
   1554c:	add	r1, pc, r1
   15550:	add	r2, pc, r2
   15554:	bl	15038 <test_json@@Base>
   15558:	str	r0, [sp, #16]
   1555c:	mov	r0, #176	; 0xb0
   15560:	mov	r1, #4
   15564:	str	r7, [sp]
   15568:	mov	r3, #0
   1556c:	str	r1, [sp, #4]
   15570:	str	r0, [sp, #8]
   15574:	mov	r0, r4
   15578:	mov	r1, r5
   1557c:	ldr	r2, [pc, #324]	; 156c8 <edge_case_tests@@Base+0x21c>
   15580:	add	r2, pc, r2
   15584:	bl	15038 <test_json@@Base>
   15588:	str	r0, [sp, #12]
   1558c:	mov	r0, #180	; 0xb4
   15590:	mov	r1, #8
   15594:	str	r9, [sp]
   15598:	mov	r3, #0
   1559c:	str	r0, [sp, #8]
   155a0:	str	r1, [sp, #4]
   155a4:	mov	r0, r4
   155a8:	ldr	r1, [pc, #284]	; 156cc <edge_case_tests@@Base+0x220>
   155ac:	ldr	r2, [pc, #284]	; 156d0 <edge_case_tests@@Base+0x224>
   155b0:	add	r1, pc, r1
   155b4:	add	r2, pc, r2
   155b8:	bl	15038 <test_json@@Base>
   155bc:	mov	r6, r0
   155c0:	mov	r0, #195	; 0xc3
   155c4:	stm	sp, {r7, r9}
   155c8:	mov	r2, sl
   155cc:	mov	r3, #0
   155d0:	str	r0, [sp, #8]
   155d4:	mov	r0, r4
   155d8:	ldr	r1, [pc, #244]	; 156d4 <edge_case_tests@@Base+0x228>
   155dc:	add	r1, pc, r1
   155e0:	bl	15038 <test_json@@Base>
   155e4:	mov	r7, r0
   155e8:	mov	r0, #199	; 0xc7
   155ec:	mov	sl, #1
   155f0:	str	r9, [sp, #4]
   155f4:	mov	r3, #0
   155f8:	str	r0, [sp, #8]
   155fc:	str	sl, [sp]
   15600:	mov	r0, r4
   15604:	ldr	r5, [pc, #204]	; 156d8 <edge_case_tests@@Base+0x22c>
   15608:	ldr	r2, [pc, #204]	; 156dc <edge_case_tests@@Base+0x230>
   1560c:	add	r5, pc, r5
   15610:	add	r2, pc, r2
   15614:	mov	r1, r5
   15618:	bl	15038 <test_json@@Base>
   1561c:	mov	r8, r0
   15620:	mov	r0, #203	; 0xcb
   15624:	str	sl, [sp]
   15628:	str	sl, [sp, #4]
   1562c:	mov	r1, r5
   15630:	mov	r3, #0
   15634:	str	r0, [sp, #8]
   15638:	mov	r0, r4
   1563c:	ldr	r2, [pc, #156]	; 156e0 <edge_case_tests@@Base+0x234>
   15640:	add	r2, pc, r2
   15644:	bl	15038 <test_json@@Base>
   15648:	mov	r1, #209	; 0xd1
   1564c:	ldr	r2, [sp, #20]
   15650:	str	sl, [sp]
   15654:	str	r9, [sp, #4]
   15658:	mov	r3, #0
   1565c:	str	r1, [sp, #8]
   15660:	ldr	r1, [sp, #24]
   15664:	orr	r1, r2, r1
   15668:	ldr	r2, [sp, #16]
   1566c:	orr	r1, r1, r2
   15670:	ldr	r2, [sp, #12]
   15674:	orr	r1, r1, r2
   15678:	orr	r1, r1, r6
   1567c:	orr	r1, r1, r7
   15680:	orr	r1, r1, r8
   15684:	orr	r5, r1, r0
   15688:	ldr	r1, [pc, #84]	; 156e4 <edge_case_tests@@Base+0x238>
   1568c:	ldr	r2, [pc, #84]	; 156e8 <edge_case_tests@@Base+0x23c>
   15690:	mov	r0, r4
   15694:	add	r1, pc, r1
   15698:	add	r2, pc, r2
   1569c:	bl	15038 <test_json@@Base>
   156a0:	orr	r0, r5, r0
   156a4:	sub	sp, fp, #28
   156a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156ac:	andeq	r6, r4, ip, lsr #17
   156b0:	andeq	r0, r3, sp, lsr #6
   156b4:	andeq	r0, r3, lr, asr r3
   156b8:	andeq	r0, r3, ip, asr #6
   156bc:	andeq	r0, r3, r9, ror #6
   156c0:	andeq	r0, r3, r7, asr r3
   156c4:	andeq	r0, r3, sl, ror r3
   156c8:	andeq	r0, r3, r7, ror #6
   156cc:	andeq	r0, r3, sl, asr #6
   156d0:	andeq	r0, r3, r8, ror #6
   156d4:	andeq	r0, r3, r2, asr r4
   156d8:	andeq	r0, r3, r8, asr #8
   156dc:	andeq	r0, r3, r6, ror r4
   156e0:	andeq	r0, r3, r1, ror #8
   156e4:	andeq	r0, r3, r4, lsr #8
   156e8:	andeq	r0, r3, lr, ror #7

000156ec <error_case_tests@@Base>:
   156ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156f0:	add	fp, sp, #28
   156f4:	sub	sp, sp, #36	; 0x24
   156f8:	mov	r6, #0
   156fc:	movw	r0, #285	; 0x11d
   15700:	mov	r2, #0
   15704:	mov	r3, #13
   15708:	str	r6, [sp]
   1570c:	str	r6, [sp, #4]
   15710:	str	r0, [sp, #8]
   15714:	ldr	r4, [pc, #568]	; 15954 <error_case_tests@@Base+0x268>
   15718:	ldr	r1, [pc, #568]	; 15958 <error_case_tests@@Base+0x26c>
   1571c:	add	r4, pc, r4
   15720:	add	r1, pc, r1
   15724:	mov	r0, r4
   15728:	bl	15038 <test_json@@Base>
   1572c:	str	r0, [sp, #32]
   15730:	movw	r0, #287	; 0x11f
   15734:	str	r6, [sp]
   15738:	str	r6, [sp, #4]
   1573c:	mov	r2, #0
   15740:	mov	r3, #13
   15744:	str	r0, [sp, #8]
   15748:	mov	r0, r4
   1574c:	ldr	r1, [pc, #520]	; 1595c <error_case_tests@@Base+0x270>
   15750:	add	r1, pc, r1
   15754:	bl	15038 <test_json@@Base>
   15758:	str	r0, [sp, #28]
   1575c:	movw	r0, #289	; 0x121
   15760:	str	r6, [sp]
   15764:	str	r6, [sp, #4]
   15768:	mov	r2, #0
   1576c:	mov	r3, #13
   15770:	str	r0, [sp, #8]
   15774:	mov	r0, r4
   15778:	ldr	r1, [pc, #480]	; 15960 <error_case_tests@@Base+0x274>
   1577c:	add	r1, pc, r1
   15780:	bl	15038 <test_json@@Base>
   15784:	str	r0, [sp, #24]
   15788:	movw	r0, #291	; 0x123
   1578c:	str	r6, [sp]
   15790:	str	r6, [sp, #4]
   15794:	mov	r2, #0
   15798:	mov	r3, #13
   1579c:	str	r0, [sp, #8]
   157a0:	mov	r0, r4
   157a4:	ldr	r1, [pc, #440]	; 15964 <error_case_tests@@Base+0x278>
   157a8:	add	r1, pc, r1
   157ac:	bl	15038 <test_json@@Base>
   157b0:	str	r0, [sp, #20]
   157b4:	movw	r0, #293	; 0x125
   157b8:	str	r6, [sp]
   157bc:	str	r6, [sp, #4]
   157c0:	mov	r2, #0
   157c4:	mov	r3, #13
   157c8:	str	r0, [sp, #8]
   157cc:	mov	r0, r4
   157d0:	ldr	r1, [pc, #400]	; 15968 <error_case_tests@@Base+0x27c>
   157d4:	add	r1, pc, r1
   157d8:	bl	15038 <test_json@@Base>
   157dc:	str	r0, [sp, #16]
   157e0:	mov	r0, #296	; 0x128
   157e4:	str	r6, [sp]
   157e8:	str	r6, [sp, #4]
   157ec:	mov	r2, #0
   157f0:	mov	r3, #13
   157f4:	str	r0, [sp, #8]
   157f8:	mov	r0, r4
   157fc:	ldr	r1, [pc, #360]	; 1596c <error_case_tests@@Base+0x280>
   15800:	add	r1, pc, r1
   15804:	bl	15038 <test_json@@Base>
   15808:	mov	r7, r0
   1580c:	movw	r0, #299	; 0x12b
   15810:	str	r6, [sp]
   15814:	str	r6, [sp, #4]
   15818:	mov	r2, #0
   1581c:	mov	r3, #13
   15820:	str	r0, [sp, #8]
   15824:	mov	r0, r4
   15828:	ldr	r1, [pc, #320]	; 15970 <error_case_tests@@Base+0x284>
   1582c:	add	r1, pc, r1
   15830:	bl	15038 <test_json@@Base>
   15834:	mov	r8, r0
   15838:	movw	r0, #303	; 0x12f
   1583c:	str	r6, [sp]
   15840:	str	r6, [sp, #4]
   15844:	mov	r2, #0
   15848:	mov	r3, #13
   1584c:	str	r0, [sp, #8]
   15850:	mov	r0, r4
   15854:	ldr	r1, [pc, #280]	; 15974 <error_case_tests@@Base+0x288>
   15858:	add	r1, pc, r1
   1585c:	bl	15038 <test_json@@Base>
   15860:	mov	r9, r0
   15864:	movw	r0, #307	; 0x133
   15868:	str	r6, [sp]
   1586c:	str	r6, [sp, #4]
   15870:	mov	r2, #0
   15874:	mov	r3, #13
   15878:	str	r0, [sp, #8]
   1587c:	mov	r0, r4
   15880:	ldr	r1, [pc, #240]	; 15978 <error_case_tests@@Base+0x28c>
   15884:	add	r1, pc, r1
   15888:	bl	15038 <test_json@@Base>
   1588c:	mov	sl, r0
   15890:	movw	r0, #311	; 0x137
   15894:	str	r6, [sp]
   15898:	str	r6, [sp, #4]
   1589c:	mov	r2, #0
   158a0:	mov	r3, #5
   158a4:	str	r0, [sp, #8]
   158a8:	mov	r0, r4
   158ac:	ldr	r1, [pc, #200]	; 1597c <error_case_tests@@Base+0x290>
   158b0:	add	r1, pc, r1
   158b4:	bl	15038 <test_json@@Base>
   158b8:	mov	r5, r0
   158bc:	movw	r0, #314	; 0x13a
   158c0:	str	r6, [sp]
   158c4:	str	r6, [sp, #4]
   158c8:	mov	r2, #0
   158cc:	mov	r3, #5
   158d0:	str	r0, [sp, #8]
   158d4:	mov	r0, r4
   158d8:	ldr	r1, [pc, #160]	; 15980 <error_case_tests@@Base+0x294>
   158dc:	add	r1, pc, r1
   158e0:	bl	15038 <test_json@@Base>
   158e4:	movw	r1, #317	; 0x13d
   158e8:	ldr	r2, [sp, #28]
   158ec:	str	r6, [sp]
   158f0:	str	r6, [sp, #4]
   158f4:	mov	r3, #5
   158f8:	str	r1, [sp, #8]
   158fc:	ldr	r1, [sp, #32]
   15900:	orr	r1, r2, r1
   15904:	ldr	r2, [sp, #24]
   15908:	orr	r1, r1, r2
   1590c:	ldr	r2, [sp, #20]
   15910:	orr	r1, r1, r2
   15914:	ldr	r2, [sp, #16]
   15918:	orr	r1, r1, r2
   1591c:	mov	r2, #0
   15920:	orr	r1, r1, r7
   15924:	orr	r1, r1, r8
   15928:	orr	r1, r1, r9
   1592c:	orr	r1, r1, sl
   15930:	orr	r1, r1, r5
   15934:	orr	r5, r1, r0
   15938:	ldr	r1, [pc, #68]	; 15984 <error_case_tests@@Base+0x298>
   1593c:	mov	r0, r4
   15940:	add	r1, pc, r1
   15944:	bl	15038 <test_json@@Base>
   15948:	orr	r0, r5, r0
   1594c:	sub	sp, fp, #28
   15950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15954:	andeq	r6, r4, ip, ror #12
   15958:	andeq	r0, r3, r9, lsl #8
   1595c:	strdeq	r0, [r3], -r3
   15960:	andeq	r0, r3, r8, lsr #8
   15964:	andeq	r0, r3, sl, asr r4
   15968:	andeq	r0, r3, r6, lsl #9
   1596c:	andeq	r0, r3, pc, lsr #9
   15970:	andeq	r0, r3, r1, lsr #10
   15974:	muleq	r3, r0, r5
   15978:	andeq	r0, r3, fp, lsr #12
   1597c:	andeq	r0, r3, r6, asr #13
   15980:			; <UNDEFINED> instruction: 0x000306b2
   15984:	andeq	r0, r3, r4, ror r6

00015988 <base64_tests@@Base>:
   15988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1598c:	add	fp, sp, #28
   15990:	sub	sp, sp, #20
   15994:	mov	r8, #0
   15998:	movw	r0, #369	; 0x171
   1599c:	mov	r3, #0
   159a0:	str	r8, [sp]
   159a4:	str	r8, [sp, #4]
   159a8:	str	r0, [sp, #8]
   159ac:	ldr	r4, [pc, #388]	; 15b38 <base64_tests@@Base+0x1b0>
   159b0:	ldr	r1, [pc, #388]	; 15b3c <base64_tests@@Base+0x1b4>
   159b4:	ldr	r2, [pc, #388]	; 15b40 <base64_tests@@Base+0x1b8>
   159b8:	add	r4, pc, r4
   159bc:	add	r1, pc, r1
   159c0:	add	r2, pc, r2
   159c4:	mov	r0, r4
   159c8:	bl	15038 <test_json@@Base>
   159cc:	str	r0, [sp, #16]
   159d0:	mov	r0, #372	; 0x174
   159d4:	str	r8, [sp]
   159d8:	str	r8, [sp, #4]
   159dc:	mov	r3, #0
   159e0:	str	r0, [sp, #8]
   159e4:	mov	r0, r4
   159e8:	ldr	r1, [pc, #340]	; 15b44 <base64_tests@@Base+0x1bc>
   159ec:	ldr	r2, [pc, #340]	; 15b48 <base64_tests@@Base+0x1c0>
   159f0:	add	r1, pc, r1
   159f4:	add	r2, pc, r2
   159f8:	bl	15038 <test_json@@Base>
   159fc:	mov	r9, r0
   15a00:	mov	r0, #376	; 0x178
   15a04:	str	r8, [sp]
   15a08:	str	r8, [sp, #4]
   15a0c:	mov	r3, #0
   15a10:	str	r0, [sp, #8]
   15a14:	mov	r0, r4
   15a18:	ldr	r1, [pc, #300]	; 15b4c <base64_tests@@Base+0x1c4>
   15a1c:	ldr	r6, [pc, #300]	; 15b50 <base64_tests@@Base+0x1c8>
   15a20:	add	r6, pc, r6
   15a24:	add	r1, pc, r1
   15a28:	mov	r2, r6
   15a2c:	bl	15038 <test_json@@Base>
   15a30:	mov	sl, r0
   15a34:	movw	r0, #379	; 0x17b
   15a38:	str	r8, [sp]
   15a3c:	str	r8, [sp, #4]
   15a40:	mov	r3, #0
   15a44:	str	r0, [sp, #8]
   15a48:	mov	r0, r4
   15a4c:	ldr	r1, [pc, #256]	; 15b54 <base64_tests@@Base+0x1cc>
   15a50:	ldr	r7, [pc, #256]	; 15b58 <base64_tests@@Base+0x1d0>
   15a54:	add	r7, pc, r7
   15a58:	add	r1, pc, r1
   15a5c:	mov	r2, r7
   15a60:	bl	15038 <test_json@@Base>
   15a64:	mov	r5, r0
   15a68:	movw	r0, #382	; 0x17e
   15a6c:	str	r8, [sp]
   15a70:	str	r8, [sp, #4]
   15a74:	mov	r2, r6
   15a78:	mov	r3, #0
   15a7c:	str	r0, [sp, #8]
   15a80:	mov	r0, r4
   15a84:	ldr	r1, [pc, #208]	; 15b5c <base64_tests@@Base+0x1d4>
   15a88:	add	r1, pc, r1
   15a8c:	bl	15038 <test_json@@Base>
   15a90:	mov	r6, r0
   15a94:	movw	r0, #385	; 0x181
   15a98:	str	r8, [sp]
   15a9c:	str	r8, [sp, #4]
   15aa0:	mov	r2, r7
   15aa4:	mov	r3, #0
   15aa8:	str	r0, [sp, #8]
   15aac:	mov	r0, r4
   15ab0:	ldr	r1, [pc, #168]	; 15b60 <base64_tests@@Base+0x1d8>
   15ab4:	add	r1, pc, r1
   15ab8:	bl	15038 <test_json@@Base>
   15abc:	mov	r7, r0
   15ac0:	mov	r0, #388	; 0x184
   15ac4:	str	r8, [sp]
   15ac8:	str	r8, [sp, #4]
   15acc:	mov	r2, #0
   15ad0:	mov	r3, #31
   15ad4:	str	r0, [sp, #8]
   15ad8:	mov	r0, r4
   15adc:	ldr	r1, [pc, #128]	; 15b64 <base64_tests@@Base+0x1dc>
   15ae0:	add	r1, pc, r1
   15ae4:	bl	15038 <test_json@@Base>
   15ae8:	movw	r1, #391	; 0x187
   15aec:	str	r8, [sp]
   15af0:	str	r8, [sp, #4]
   15af4:	mov	r2, #0
   15af8:	mov	r3, #32
   15afc:	str	r1, [sp, #8]
   15b00:	ldr	r1, [sp, #16]
   15b04:	orr	r1, r9, r1
   15b08:	orr	r1, r1, sl
   15b0c:	orr	r1, r1, r5
   15b10:	orr	r1, r1, r6
   15b14:	orr	r1, r1, r7
   15b18:	orr	r5, r1, r0
   15b1c:	ldr	r1, [pc, #68]	; 15b68 <base64_tests@@Base+0x1e0>
   15b20:	mov	r0, r4
   15b24:	add	r1, pc, r1
   15b28:	bl	15038 <test_json@@Base>
   15b2c:	orr	r0, r5, r0
   15b30:	sub	sp, fp, #28
   15b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b38:	ldrdeq	r6, [r4], -r0
   15b3c:	andeq	r0, r3, r0, lsr r6
   15b40:	andeq	pc, r2, r7, lsr #30
   15b44:	andeq	r0, r3, r2, lsl r6
   15b48:	andeq	r0, r3, r5, lsr r6
   15b4c:	andeq	r0, r3, r8, lsr #12
   15b50:	andeq	r0, r3, r5, ror #13
   15b54:	andeq	r0, r3, r1, ror #14
   15b58:	andeq	r0, r3, r1, lsr #16
   15b5c:	andeq	r0, r3, r4, lsr #17
   15b60:	andeq	r0, r3, pc, lsr #18
   15b64:			; <UNDEFINED> instruction: 0x000309bd
   15b68:	andeq	r0, r3, r2, lsr sl

00015b6c <mixed_type_union_tests@@Base>:
   15b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b70:	add	fp, sp, #28
   15b74:	sub	sp, sp, #20
   15b78:	mov	r8, #0
   15b7c:	mov	r0, #432	; 0x1b0
   15b80:	mov	r3, #0
   15b84:	str	r8, [sp]
   15b88:	str	r8, [sp, #4]
   15b8c:	str	r0, [sp, #8]
   15b90:	ldr	r4, [pc, #340]	; 15cec <mixed_type_union_tests@@Base+0x180>
   15b94:	ldr	r1, [pc, #340]	; 15cf0 <mixed_type_union_tests@@Base+0x184>
   15b98:	ldr	r2, [pc, #340]	; 15cf4 <mixed_type_union_tests@@Base+0x188>
   15b9c:	add	r4, pc, r4
   15ba0:	add	r1, pc, r1
   15ba4:	add	r2, pc, r2
   15ba8:	mov	r0, r4
   15bac:	bl	15038 <test_json@@Base>
   15bb0:	str	r0, [sp, #16]
   15bb4:	movw	r0, #437	; 0x1b5
   15bb8:	str	r8, [sp]
   15bbc:	str	r8, [sp, #4]
   15bc0:	mov	r3, #0
   15bc4:	str	r0, [sp, #8]
   15bc8:	mov	r0, r4
   15bcc:	ldr	r1, [pc, #292]	; 15cf8 <mixed_type_union_tests@@Base+0x18c>
   15bd0:	ldr	r9, [pc, #292]	; 15cfc <mixed_type_union_tests@@Base+0x190>
   15bd4:	add	r9, pc, r9
   15bd8:	add	r1, pc, r1
   15bdc:	mov	r2, r9
   15be0:	bl	15038 <test_json@@Base>
   15be4:	mov	sl, r0
   15be8:	movw	r0, #442	; 0x1ba
   15bec:	str	r8, [sp]
   15bf0:	str	r8, [sp, #4]
   15bf4:	mov	r2, r9
   15bf8:	mov	r3, #0
   15bfc:	str	r0, [sp, #8]
   15c00:	mov	r0, r4
   15c04:	ldr	r1, [pc, #244]	; 15d00 <mixed_type_union_tests@@Base+0x194>
   15c08:	add	r1, pc, r1
   15c0c:	bl	15038 <test_json@@Base>
   15c10:	mov	r5, r0
   15c14:	movw	r0, #449	; 0x1c1
   15c18:	str	r8, [sp]
   15c1c:	str	r8, [sp, #4]
   15c20:	mov	r3, #0
   15c24:	str	r0, [sp, #8]
   15c28:	mov	r0, r4
   15c2c:	ldr	r1, [pc, #208]	; 15d04 <mixed_type_union_tests@@Base+0x198>
   15c30:	ldr	r2, [pc, #208]	; 15d08 <mixed_type_union_tests@@Base+0x19c>
   15c34:	add	r1, pc, r1
   15c38:	add	r2, pc, r2
   15c3c:	bl	15038 <test_json@@Base>
   15c40:	mov	r6, r0
   15c44:	movw	r0, #458	; 0x1ca
   15c48:	str	r8, [sp]
   15c4c:	str	r8, [sp, #4]
   15c50:	mov	r3, #0
   15c54:	str	r0, [sp, #8]
   15c58:	mov	r0, r4
   15c5c:	ldr	r1, [pc, #168]	; 15d0c <mixed_type_union_tests@@Base+0x1a0>
   15c60:	ldr	r2, [pc, #168]	; 15d10 <mixed_type_union_tests@@Base+0x1a4>
   15c64:	add	r1, pc, r1
   15c68:	add	r2, pc, r2
   15c6c:	bl	15038 <test_json@@Base>
   15c70:	mov	r7, r0
   15c74:	movw	r0, #469	; 0x1d5
   15c78:	str	r8, [sp]
   15c7c:	str	r8, [sp, #4]
   15c80:	mov	r3, #0
   15c84:	str	r0, [sp, #8]
   15c88:	mov	r0, r4
   15c8c:	ldr	r1, [pc, #128]	; 15d14 <mixed_type_union_tests@@Base+0x1a8>
   15c90:	ldr	r2, [pc, #128]	; 15d18 <mixed_type_union_tests@@Base+0x1ac>
   15c94:	add	r1, pc, r1
   15c98:	add	r2, pc, r2
   15c9c:	bl	15038 <test_json@@Base>
   15ca0:	movw	r1, #474	; 0x1da
   15ca4:	str	r8, [sp]
   15ca8:	str	r8, [sp, #4]
   15cac:	mov	r2, r9
   15cb0:	mov	r3, #0
   15cb4:	str	r1, [sp, #8]
   15cb8:	ldr	r1, [sp, #16]
   15cbc:	orr	r1, sl, r1
   15cc0:	orr	r1, r1, r5
   15cc4:	orr	r1, r1, r6
   15cc8:	orr	r1, r1, r7
   15ccc:	orr	r5, r1, r0
   15cd0:	ldr	r1, [pc, #68]	; 15d1c <mixed_type_union_tests@@Base+0x1b0>
   15cd4:	mov	r0, r4
   15cd8:	add	r1, pc, r1
   15cdc:	bl	15038 <test_json@@Base>
   15ce0:	orr	r0, r5, r0
   15ce4:	sub	sp, fp, #28
   15ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cec:	strdeq	r6, [r4], -ip
   15cf0:	andeq	r0, r3, r2, ror sl
   15cf4:			; <UNDEFINED> instruction: 0x00030abd
   15cf8:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   15cfc:	andeq	r0, r3, r7, asr fp
   15d00:	muleq	r3, sl, fp
   15d04:	andeq	r0, r3, r4, lsl #24
   15d08:	ldrdeq	r0, [r3], -sp
   15d0c:	andeq	r0, r3, sl, ror #26
   15d10:	andeq	r0, r3, ip, ror #28
   15d14:	andeq	r0, r3, lr, lsl pc
   15d18:	muleq	r3, fp, r0
   15d1c:	andeq	r1, r3, r1, lsr #3

00015d20 <union_vector_tests@@Base>:
   15d20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d24:	add	fp, sp, #28
   15d28:	sub	sp, sp, #12
   15d2c:	mov	r7, #0
   15d30:	movw	r0, #485	; 0x1e5
   15d34:	mov	r3, #0
   15d38:	str	r7, [sp]
   15d3c:	str	r7, [sp, #4]
   15d40:	str	r0, [sp, #8]
   15d44:	ldr	r4, [pc, #288]	; 15e6c <union_vector_tests@@Base+0x14c>
   15d48:	ldr	r1, [pc, #288]	; 15e70 <union_vector_tests@@Base+0x150>
   15d4c:	ldr	r8, [pc, #288]	; 15e74 <union_vector_tests@@Base+0x154>
   15d50:	add	r4, pc, r4
   15d54:	add	r8, pc, r8
   15d58:	add	r1, pc, r1
   15d5c:	mov	r0, r4
   15d60:	mov	r2, r8
   15d64:	bl	15038 <test_json@@Base>
   15d68:	mov	r9, r0
   15d6c:	mov	r0, #488	; 0x1e8
   15d70:	str	r7, [sp]
   15d74:	str	r7, [sp, #4]
   15d78:	mov	r3, #0
   15d7c:	str	r0, [sp, #8]
   15d80:	mov	r0, r4
   15d84:	ldr	r1, [pc, #236]	; 15e78 <union_vector_tests@@Base+0x158>
   15d88:	ldr	r2, [pc, #236]	; 15e7c <union_vector_tests@@Base+0x15c>
   15d8c:	add	r1, pc, r1
   15d90:	add	r2, pc, r2
   15d94:	bl	15038 <test_json@@Base>
   15d98:	mov	sl, r0
   15d9c:	movw	r0, #491	; 0x1eb
   15da0:	str	r7, [sp]
   15da4:	str	r7, [sp, #4]
   15da8:	mov	r3, #0
   15dac:	str	r0, [sp, #8]
   15db0:	mov	r0, r4
   15db4:	ldr	r1, [pc, #196]	; 15e80 <union_vector_tests@@Base+0x160>
   15db8:	ldr	r2, [pc, #196]	; 15e84 <union_vector_tests@@Base+0x164>
   15dbc:	add	r1, pc, r1
   15dc0:	add	r2, pc, r2
   15dc4:	bl	15038 <test_json@@Base>
   15dc8:	mov	r6, r0
   15dcc:	movw	r0, #494	; 0x1ee
   15dd0:	str	r7, [sp]
   15dd4:	str	r7, [sp, #4]
   15dd8:	mov	r3, #0
   15ddc:	str	r0, [sp, #8]
   15de0:	mov	r0, r4
   15de4:	ldr	r1, [pc, #156]	; 15e88 <union_vector_tests@@Base+0x168>
   15de8:	ldr	r2, [pc, #156]	; 15e8c <union_vector_tests@@Base+0x16c>
   15dec:	add	r1, pc, r1
   15df0:	add	r2, pc, r2
   15df4:	bl	15038 <test_json@@Base>
   15df8:	mov	r5, r0
   15dfc:	movw	r0, #497	; 0x1f1
   15e00:	str	r7, [sp]
   15e04:	str	r7, [sp, #4]
   15e08:	mov	r2, r8
   15e0c:	mov	r3, #0
   15e10:	str	r0, [sp, #8]
   15e14:	mov	r0, r4
   15e18:	ldr	r1, [pc, #112]	; 15e90 <union_vector_tests@@Base+0x170>
   15e1c:	add	r1, pc, r1
   15e20:	bl	15038 <test_json@@Base>
   15e24:	mov	r1, #500	; 0x1f4
   15e28:	str	r7, [sp]
   15e2c:	str	r7, [sp, #4]
   15e30:	mov	r3, #0
   15e34:	str	r1, [sp, #8]
   15e38:	orr	r1, sl, r9
   15e3c:	orr	r1, r1, r6
   15e40:	orr	r1, r1, r5
   15e44:	orr	r5, r1, r0
   15e48:	ldr	r1, [pc, #68]	; 15e94 <union_vector_tests@@Base+0x174>
   15e4c:	ldr	r2, [pc, #68]	; 15e98 <union_vector_tests@@Base+0x178>
   15e50:	mov	r0, r4
   15e54:	add	r1, pc, r1
   15e58:	add	r2, pc, r2
   15e5c:	bl	15038 <test_json@@Base>
   15e60:	orr	r0, r5, r0
   15e64:	sub	sp, fp, #28
   15e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e6c:	andeq	r6, r4, r8, asr r0
   15e70:	andeq	r1, r3, lr, lsr #3
   15e74:	strdeq	r1, [r3], -r2
   15e78:	strdeq	r1, [r3], -r2
   15e7c:	andeq	r1, r3, r1, lsr #4
   15e80:	andeq	r1, r3, r0, lsr #4
   15e84:	andeq	r1, r3, r9, ror #4
   15e88:	andeq	r1, r3, r1, lsl #5
   15e8c:	strdeq	r1, [r3], -sl
   15e90:	andeq	r1, r3, sl, lsr r3
   15e94:	andeq	r1, r3, r1, asr #6
   15e98:	andeq	r1, r3, r3, lsr #7

00015e9c <main@@Base>:
   15e9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ea0:	add	fp, sp, #28
   15ea4:	sub	sp, sp, #164	; 0xa4
   15ea8:	bl	154ac <edge_case_tests@@Base>
   15eac:	str	r0, [fp, #-32]	; 0xffffffe0
   15eb0:	bl	156ec <error_case_tests@@Base>
   15eb4:	str	r0, [fp, #-36]	; 0xffffffdc
   15eb8:	bl	15d20 <union_vector_tests@@Base>
   15ebc:	str	r0, [fp, #-40]	; 0xffffffd8
   15ec0:	bl	15988 <base64_tests@@Base>
   15ec4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ec8:	bl	15b6c <mixed_type_union_tests@@Base>
   15ecc:	mov	r8, #0
   15ed0:	str	r0, [fp, #-48]	; 0xffffffd0
   15ed4:	movw	r0, #525	; 0x20d
   15ed8:	mov	r3, #0
   15edc:	str	r8, [sp]
   15ee0:	str	r8, [sp, #4]
   15ee4:	str	r0, [sp, #8]
   15ee8:	ldr	r4, [pc, #2140]	; 1674c <main@@Base+0x8b0>
   15eec:	ldr	r1, [pc, #2140]	; 16750 <main@@Base+0x8b4>
   15ef0:	ldr	r9, [pc, #2140]	; 16754 <main@@Base+0x8b8>
   15ef4:	add	r4, pc, r4
   15ef8:	add	r9, pc, r9
   15efc:	add	r1, pc, r1
   15f00:	mov	r0, r4
   15f04:	mov	r2, r9
   15f08:	bl	15038 <test_json@@Base>
   15f0c:	str	r0, [fp, #-52]	; 0xffffffcc
   15f10:	mov	r0, #528	; 0x210
   15f14:	str	r8, [sp]
   15f18:	str	r8, [sp, #4]
   15f1c:	mov	r3, #0
   15f20:	str	r0, [sp, #8]
   15f24:	mov	r0, r4
   15f28:	ldr	r1, [pc, #2088]	; 16758 <main@@Base+0x8bc>
   15f2c:	ldr	r5, [pc, #2088]	; 1675c <main@@Base+0x8c0>
   15f30:	add	r5, pc, r5
   15f34:	add	r1, pc, r1
   15f38:	mov	r2, r5
   15f3c:	bl	15038 <test_json@@Base>
   15f40:	str	r0, [fp, #-56]	; 0xffffffc8
   15f44:	movw	r0, #531	; 0x213
   15f48:	str	r8, [sp]
   15f4c:	str	r8, [sp, #4]
   15f50:	mov	r3, #0
   15f54:	str	r0, [sp, #8]
   15f58:	mov	r0, r4
   15f5c:	ldr	r1, [pc, #2044]	; 16760 <main@@Base+0x8c4>
   15f60:	ldr	r7, [pc, #2044]	; 16764 <main@@Base+0x8c8>
   15f64:	add	r7, pc, r7
   15f68:	add	r1, pc, r1
   15f6c:	mov	r2, r7
   15f70:	bl	15038 <test_json@@Base>
   15f74:	str	r0, [fp, #-60]	; 0xffffffc4
   15f78:	movw	r0, #534	; 0x216
   15f7c:	str	r8, [sp]
   15f80:	str	r8, [sp, #4]
   15f84:	mov	r3, #0
   15f88:	str	r0, [sp, #8]
   15f8c:	mov	r0, r4
   15f90:	ldr	r1, [pc, #2000]	; 16768 <main@@Base+0x8cc>
   15f94:	ldr	r6, [pc, #2000]	; 1676c <main@@Base+0x8d0>
   15f98:	add	r6, pc, r6
   15f9c:	add	r1, pc, r1
   15fa0:	mov	r2, r6
   15fa4:	bl	15038 <test_json@@Base>
   15fa8:	str	r0, [fp, #-64]	; 0xffffffc0
   15fac:	movw	r0, #537	; 0x219
   15fb0:	str	r8, [sp]
   15fb4:	str	r8, [sp, #4]
   15fb8:	mov	r2, r6
   15fbc:	mov	r3, #0
   15fc0:	str	r0, [sp, #8]
   15fc4:	mov	r0, r4
   15fc8:	ldr	r1, [pc, #1952]	; 16770 <main@@Base+0x8d4>
   15fcc:	add	r1, pc, r1
   15fd0:	bl	15038 <test_json@@Base>
   15fd4:	str	r0, [fp, #-68]	; 0xffffffbc
   15fd8:	mov	r0, #540	; 0x21c
   15fdc:	str	r8, [sp]
   15fe0:	str	r8, [sp, #4]
   15fe4:	mov	r2, r5
   15fe8:	mov	r3, #0
   15fec:	str	r0, [sp, #8]
   15ff0:	mov	r0, r4
   15ff4:	ldr	r1, [pc, #1912]	; 16774 <main@@Base+0x8d8>
   15ff8:	add	r1, pc, r1
   15ffc:	bl	15038 <test_json@@Base>
   16000:	str	r0, [fp, #-72]	; 0xffffffb8
   16004:	movw	r0, #543	; 0x21f
   16008:	str	r8, [sp]
   1600c:	str	r8, [sp, #4]
   16010:	mov	r2, r7
   16014:	mov	r3, #0
   16018:	str	r0, [sp, #8]
   1601c:	mov	r0, r4
   16020:	ldr	r1, [pc, #1872]	; 16778 <main@@Base+0x8dc>
   16024:	add	r1, pc, r1
   16028:	bl	15038 <test_json@@Base>
   1602c:	str	r0, [fp, #-76]	; 0xffffffb4
   16030:	movw	r0, #547	; 0x223
   16034:	str	r8, [sp]
   16038:	str	r8, [sp, #4]
   1603c:	mov	r2, r9
   16040:	mov	r3, #0
   16044:	str	r0, [sp, #8]
   16048:	mov	r0, r4
   1604c:	ldr	r1, [pc, #1832]	; 1677c <main@@Base+0x8e0>
   16050:	add	r1, pc, r1
   16054:	bl	15038 <test_json@@Base>
   16058:	str	r0, [fp, #-80]	; 0xffffffb0
   1605c:	movw	r0, #551	; 0x227
   16060:	str	r8, [sp]
   16064:	str	r8, [sp, #4]
   16068:	mov	r2, r9
   1606c:	mov	r3, #0
   16070:	str	r0, [sp, #8]
   16074:	mov	r0, r4
   16078:	ldr	r1, [pc, #1792]	; 16780 <main@@Base+0x8e4>
   1607c:	add	r1, pc, r1
   16080:	bl	15038 <test_json@@Base>
   16084:	str	r0, [fp, #-84]	; 0xffffffac
   16088:	movw	r0, #601	; 0x259
   1608c:	str	r8, [sp]
   16090:	str	r8, [sp, #4]
   16094:	mov	r2, r5
   16098:	mov	r3, #0
   1609c:	str	r0, [sp, #8]
   160a0:	mov	r0, r4
   160a4:	ldr	r1, [pc, #1752]	; 16784 <main@@Base+0x8e8>
   160a8:	add	r1, pc, r1
   160ac:	bl	15038 <test_json@@Base>
   160b0:	str	r0, [fp, #-88]	; 0xffffffa8
   160b4:	mov	r0, #604	; 0x25c
   160b8:	str	r8, [sp]
   160bc:	str	r8, [sp, #4]
   160c0:	mov	r2, r7
   160c4:	mov	r3, #0
   160c8:	str	r0, [sp, #8]
   160cc:	mov	r0, r4
   160d0:	ldr	r1, [pc, #1712]	; 16788 <main@@Base+0x8ec>
   160d4:	add	r1, pc, r1
   160d8:	bl	15038 <test_json@@Base>
   160dc:	str	r0, [fp, #-92]	; 0xffffffa4
   160e0:	movw	r0, #607	; 0x25f
   160e4:	str	r8, [sp]
   160e8:	str	r8, [sp, #4]
   160ec:	mov	r3, #0
   160f0:	str	r0, [sp, #8]
   160f4:	mov	r0, r4
   160f8:	ldr	r1, [pc, #1676]	; 1678c <main@@Base+0x8f0>
   160fc:	ldr	r2, [pc, #1676]	; 16790 <main@@Base+0x8f4>
   16100:	add	r1, pc, r1
   16104:	add	r2, pc, r2
   16108:	bl	15038 <test_json@@Base>
   1610c:	str	r0, [sp, #96]	; 0x60
   16110:	movw	r0, #610	; 0x262
   16114:	str	r8, [sp]
   16118:	str	r8, [sp, #4]
   1611c:	mov	r2, r6
   16120:	mov	r3, #0
   16124:	str	r0, [sp, #8]
   16128:	mov	r0, r4
   1612c:	ldr	r1, [pc, #1632]	; 16794 <main@@Base+0x8f8>
   16130:	add	r1, pc, r1
   16134:	bl	15038 <test_json@@Base>
   16138:	str	r0, [sp, #92]	; 0x5c
   1613c:	movw	r0, #613	; 0x265
   16140:	str	r8, [sp]
   16144:	str	r8, [sp, #4]
   16148:	mov	r3, #0
   1614c:	str	r0, [sp, #8]
   16150:	mov	r0, r4
   16154:	ldr	r1, [pc, #1596]	; 16798 <main@@Base+0x8fc>
   16158:	ldr	r2, [pc, #1596]	; 1679c <main@@Base+0x900>
   1615c:	add	r1, pc, r1
   16160:	add	r2, pc, r2
   16164:	bl	15038 <test_json@@Base>
   16168:	str	r0, [sp, #88]	; 0x58
   1616c:	mov	r0, #616	; 0x268
   16170:	str	r8, [sp]
   16174:	str	r8, [sp, #4]
   16178:	mov	r3, #0
   1617c:	str	r0, [sp, #8]
   16180:	mov	r0, r4
   16184:	ldr	r1, [pc, #1556]	; 167a0 <main@@Base+0x904>
   16188:	ldr	r2, [pc, #1556]	; 167a4 <main@@Base+0x908>
   1618c:	add	r1, pc, r1
   16190:	add	r2, pc, r2
   16194:	bl	15038 <test_json@@Base>
   16198:	str	r0, [sp, #84]	; 0x54
   1619c:	movw	r0, #619	; 0x26b
   161a0:	str	r8, [sp]
   161a4:	str	r8, [sp, #4]
   161a8:	mov	r3, #0
   161ac:	str	r0, [sp, #8]
   161b0:	mov	r0, r4
   161b4:	ldr	r1, [pc, #1516]	; 167a8 <main@@Base+0x90c>
   161b8:	ldr	r2, [pc, #1516]	; 167ac <main@@Base+0x910>
   161bc:	add	r1, pc, r1
   161c0:	add	r2, pc, r2
   161c4:	bl	15038 <test_json@@Base>
   161c8:	str	r0, [sp, #80]	; 0x50
   161cc:	movw	r0, #622	; 0x26e
   161d0:	str	r8, [sp]
   161d4:	str	r8, [sp, #4]
   161d8:	mov	r2, r5
   161dc:	mov	r3, #0
   161e0:	str	r0, [sp, #8]
   161e4:	mov	r0, r4
   161e8:	ldr	r1, [pc, #1472]	; 167b0 <main@@Base+0x914>
   161ec:	add	r1, pc, r1
   161f0:	bl	15038 <test_json@@Base>
   161f4:	str	r0, [sp, #76]	; 0x4c
   161f8:	movw	r0, #625	; 0x271
   161fc:	str	r8, [sp]
   16200:	str	r8, [sp, #4]
   16204:	mov	r2, r5
   16208:	mov	r3, #0
   1620c:	str	r0, [sp, #8]
   16210:	mov	r0, r4
   16214:	ldr	r1, [pc, #1432]	; 167b4 <main@@Base+0x918>
   16218:	add	r1, pc, r1
   1621c:	bl	15038 <test_json@@Base>
   16220:	str	r0, [sp, #72]	; 0x48
   16224:	mov	r0, #628	; 0x274
   16228:	str	r8, [sp]
   1622c:	str	r8, [sp, #4]
   16230:	mov	r3, #0
   16234:	str	r0, [sp, #8]
   16238:	mov	r0, r4
   1623c:	ldr	r5, [pc, #1396]	; 167b8 <main@@Base+0x91c>
   16240:	ldr	r6, [pc, #1396]	; 167bc <main@@Base+0x920>
   16244:	add	r5, pc, r5
   16248:	add	r6, pc, r6
   1624c:	mov	r1, r5
   16250:	mov	r2, r6
   16254:	bl	15038 <test_json@@Base>
   16258:	str	r0, [sp, #68]	; 0x44
   1625c:	movw	r0, #631	; 0x277
   16260:	mov	r1, r5
   16264:	mov	r2, r6
   16268:	mov	r3, #0
   1626c:	str	r8, [sp]
   16270:	str	r8, [sp, #4]
   16274:	str	r0, [sp, #8]
   16278:	mov	r0, r4
   1627c:	bl	15038 <test_json@@Base>
   16280:	str	r0, [sp, #64]	; 0x40
   16284:	movw	r0, #634	; 0x27a
   16288:	str	r8, [sp]
   1628c:	str	r8, [sp, #4]
   16290:	mov	r3, #0
   16294:	str	r0, [sp, #8]
   16298:	mov	r0, r4
   1629c:	ldr	r1, [pc, #1308]	; 167c0 <main@@Base+0x924>
   162a0:	ldr	r2, [pc, #1308]	; 167c4 <main@@Base+0x928>
   162a4:	add	r1, pc, r1
   162a8:	add	r2, pc, r2
   162ac:	bl	15038 <test_json@@Base>
   162b0:	str	r0, [sp, #60]	; 0x3c
   162b4:	movw	r0, #638	; 0x27e
   162b8:	str	r8, [sp]
   162bc:	str	r8, [sp, #4]
   162c0:	mov	r3, #0
   162c4:	str	r0, [sp, #8]
   162c8:	mov	r0, r4
   162cc:	ldr	r1, [pc, #1268]	; 167c8 <main@@Base+0x92c>
   162d0:	ldr	r2, [pc, #1268]	; 167cc <main@@Base+0x930>
   162d4:	add	r1, pc, r1
   162d8:	add	r2, pc, r2
   162dc:	bl	15038 <test_json@@Base>
   162e0:	str	r0, [sp, #56]	; 0x38
   162e4:	movw	r0, #642	; 0x282
   162e8:	str	r8, [sp]
   162ec:	str	r8, [sp, #4]
   162f0:	mov	r3, #0
   162f4:	str	r0, [sp, #8]
   162f8:	mov	r0, r4
   162fc:	ldr	r1, [pc, #1228]	; 167d0 <main@@Base+0x934>
   16300:	ldr	r2, [pc, #1228]	; 167d4 <main@@Base+0x938>
   16304:	add	r1, pc, r1
   16308:	add	r2, pc, r2
   1630c:	bl	15038 <test_json@@Base>
   16310:	str	r0, [sp, #52]	; 0x34
   16314:	movw	r0, #646	; 0x286
   16318:	str	r8, [sp]
   1631c:	str	r8, [sp, #4]
   16320:	mov	r2, r9
   16324:	mov	r3, #0
   16328:	str	r0, [sp, #8]
   1632c:	mov	r0, r4
   16330:	ldr	r1, [pc, #1184]	; 167d8 <main@@Base+0x93c>
   16334:	add	r1, pc, r1
   16338:	bl	15038 <test_json@@Base>
   1633c:	str	r0, [sp, #48]	; 0x30
   16340:	movw	r0, #649	; 0x289
   16344:	str	r8, [sp]
   16348:	str	r8, [sp, #4]
   1634c:	mov	r2, r9
   16350:	mov	r3, #0
   16354:	str	r0, [sp, #8]
   16358:	mov	r0, r4
   1635c:	ldr	r1, [pc, #1144]	; 167dc <main@@Base+0x940>
   16360:	add	r1, pc, r1
   16364:	bl	15038 <test_json@@Base>
   16368:	str	r0, [sp, #44]	; 0x2c
   1636c:	mov	r0, #716	; 0x2cc
   16370:	str	r8, [sp]
   16374:	str	r8, [sp, #4]
   16378:	mov	r3, #0
   1637c:	str	r0, [sp, #8]
   16380:	mov	r0, r4
   16384:	ldr	r1, [pc, #1108]	; 167e0 <main@@Base+0x944>
   16388:	ldr	r2, [pc, #1108]	; 167e4 <main@@Base+0x948>
   1638c:	add	r1, pc, r1
   16390:	add	r2, pc, r2
   16394:	bl	15038 <test_json@@Base>
   16398:	str	r0, [sp, #40]	; 0x28
   1639c:	movw	r0, #731	; 0x2db
   163a0:	str	r8, [sp]
   163a4:	str	r8, [sp, #4]
   163a8:	mov	r3, #0
   163ac:	str	r0, [sp, #8]
   163b0:	mov	r0, r4
   163b4:	ldr	r1, [pc, #1068]	; 167e8 <main@@Base+0x94c>
   163b8:	ldr	r2, [pc, #1068]	; 167ec <main@@Base+0x950>
   163bc:	add	r1, pc, r1
   163c0:	add	r2, pc, r2
   163c4:	bl	15038 <test_json@@Base>
   163c8:	str	r0, [sp, #36]	; 0x24
   163cc:	movw	r0, #734	; 0x2de
   163d0:	str	r8, [sp]
   163d4:	str	r8, [sp, #4]
   163d8:	mov	r3, #0
   163dc:	str	r0, [sp, #8]
   163e0:	mov	r0, r4
   163e4:	ldr	r1, [pc, #1028]	; 167f0 <main@@Base+0x954>
   163e8:	ldr	r2, [pc, #1028]	; 167f4 <main@@Base+0x958>
   163ec:	add	r1, pc, r1
   163f0:	add	r2, pc, r2
   163f4:	bl	15038 <test_json@@Base>
   163f8:	str	r0, [sp, #32]
   163fc:	movw	r0, #738	; 0x2e2
   16400:	str	r8, [sp]
   16404:	str	r8, [sp, #4]
   16408:	mov	r3, #0
   1640c:	str	r0, [sp, #8]
   16410:	mov	r0, r4
   16414:	ldr	r1, [pc, #988]	; 167f8 <main@@Base+0x95c>
   16418:	ldr	r5, [pc, #988]	; 167fc <main@@Base+0x960>
   1641c:	add	r5, pc, r5
   16420:	add	r1, pc, r1
   16424:	mov	r2, r5
   16428:	bl	15038 <test_json@@Base>
   1642c:	str	r0, [sp, #28]
   16430:	movw	r0, #750	; 0x2ee
   16434:	str	r8, [sp]
   16438:	str	r8, [sp, #4]
   1643c:	mov	r2, r5
   16440:	mov	r3, #0
   16444:	str	r0, [sp, #8]
   16448:	mov	r0, r4
   1644c:	ldr	r1, [pc, #940]	; 16800 <main@@Base+0x964>
   16450:	add	r1, pc, r1
   16454:	bl	15038 <test_json@@Base>
   16458:	str	r0, [sp, #24]
   1645c:	movw	r0, #766	; 0x2fe
   16460:	str	r8, [sp]
   16464:	str	r8, [sp, #4]
   16468:	mov	r3, #0
   1646c:	str	r0, [sp, #8]
   16470:	mov	r0, r4
   16474:	ldr	r1, [pc, #904]	; 16804 <main@@Base+0x968>
   16478:	ldr	r2, [pc, #904]	; 16808 <main@@Base+0x96c>
   1647c:	add	r1, pc, r1
   16480:	add	r2, pc, r2
   16484:	bl	15038 <test_json@@Base>
   16488:	str	r0, [sp, #20]
   1648c:	movw	r0, #770	; 0x302
   16490:	str	r8, [sp]
   16494:	str	r8, [sp, #4]
   16498:	mov	r3, #0
   1649c:	str	r0, [sp, #8]
   164a0:	mov	r0, r4
   164a4:	ldr	r1, [pc, #864]	; 1680c <main@@Base+0x970>
   164a8:	ldr	r2, [pc, #864]	; 16810 <main@@Base+0x974>
   164ac:	add	r1, pc, r1
   164b0:	add	r2, pc, r2
   164b4:	bl	15038 <test_json@@Base>
   164b8:	str	r0, [sp, #16]
   164bc:	mov	r0, #776	; 0x308
   164c0:	str	r8, [sp]
   164c4:	str	r8, [sp, #4]
   164c8:	mov	r3, #0
   164cc:	str	r0, [sp, #8]
   164d0:	mov	r0, r4
   164d4:	ldr	r1, [pc, #824]	; 16814 <main@@Base+0x978>
   164d8:	ldr	r2, [pc, #824]	; 16818 <main@@Base+0x97c>
   164dc:	add	r1, pc, r1
   164e0:	add	r2, pc, r2
   164e4:	bl	15038 <test_json@@Base>
   164e8:	mov	r7, r0
   164ec:	movw	r0, #781	; 0x30d
   164f0:	str	r8, [sp]
   164f4:	str	r8, [sp, #4]
   164f8:	mov	r2, r9
   164fc:	mov	r3, #0
   16500:	str	r0, [sp, #8]
   16504:	mov	r0, r4
   16508:	ldr	r1, [pc, #780]	; 1681c <main@@Base+0x980>
   1650c:	add	r1, pc, r1
   16510:	bl	15038 <test_json@@Base>
   16514:	mov	r6, r0
   16518:	movw	r0, #786	; 0x312
   1651c:	str	r8, [sp]
   16520:	str	r8, [sp, #4]
   16524:	mov	r3, #0
   16528:	str	r0, [sp, #8]
   1652c:	mov	r0, r4
   16530:	ldr	r1, [pc, #744]	; 16820 <main@@Base+0x984>
   16534:	ldr	r2, [pc, #744]	; 16824 <main@@Base+0x988>
   16538:	add	r1, pc, r1
   1653c:	add	r2, pc, r2
   16540:	bl	15038 <test_json@@Base>
   16544:	mov	r9, r0
   16548:	movw	r0, #791	; 0x317
   1654c:	str	r8, [sp]
   16550:	str	r8, [sp, #4]
   16554:	mov	r3, #0
   16558:	str	r0, [sp, #8]
   1655c:	mov	r0, r4
   16560:	ldr	r1, [pc, #704]	; 16828 <main@@Base+0x98c>
   16564:	ldr	r2, [pc, #704]	; 1682c <main@@Base+0x990>
   16568:	add	r1, pc, r1
   1656c:	add	r2, pc, r2
   16570:	bl	15038 <test_json@@Base>
   16574:	mov	sl, r0
   16578:	mov	r0, #796	; 0x31c
   1657c:	str	r8, [sp]
   16580:	str	r8, [sp, #4]
   16584:	mov	r3, #0
   16588:	str	r0, [sp, #8]
   1658c:	mov	r0, r4
   16590:	ldr	r1, [pc, #664]	; 16830 <main@@Base+0x994>
   16594:	ldr	r2, [pc, #664]	; 16834 <main@@Base+0x998>
   16598:	add	r1, pc, r1
   1659c:	add	r2, pc, r2
   165a0:	bl	15038 <test_json@@Base>
   165a4:	mov	r5, r0
   165a8:	movw	r0, #801	; 0x321
   165ac:	str	r8, [sp]
   165b0:	str	r8, [sp, #4]
   165b4:	mov	r3, #0
   165b8:	str	r0, [sp, #8]
   165bc:	mov	r0, r4
   165c0:	ldr	r1, [pc, #624]	; 16838 <main@@Base+0x99c>
   165c4:	ldr	r2, [pc, #624]	; 1683c <main@@Base+0x9a0>
   165c8:	add	r1, pc, r1
   165cc:	add	r2, pc, r2
   165d0:	bl	15038 <test_json@@Base>
   165d4:	movw	r1, #806	; 0x326
   165d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   165dc:	str	r8, [sp]
   165e0:	str	r8, [sp, #4]
   165e4:	mov	r3, #0
   165e8:	str	r1, [sp, #8]
   165ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   165f0:	orr	r1, r2, r1
   165f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   165f8:	orr	r1, r1, r2
   165fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16600:	orr	r1, r1, r2
   16604:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16608:	orr	r1, r1, r2
   1660c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16610:	orr	r1, r1, r2
   16614:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16618:	orr	r1, r1, r2
   1661c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16620:	orr	r1, r1, r2
   16624:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16628:	orr	r1, r1, r2
   1662c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16630:	orr	r1, r1, r2
   16634:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16638:	orr	r1, r1, r2
   1663c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16640:	orr	r1, r1, r2
   16644:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16648:	orr	r1, r1, r2
   1664c:	ldr	r2, [fp, #-84]	; 0xffffffac
   16650:	orr	r1, r1, r2
   16654:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16658:	orr	r1, r1, r2
   1665c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16660:	orr	r1, r1, r2
   16664:	ldr	r2, [sp, #96]	; 0x60
   16668:	orr	r1, r1, r2
   1666c:	ldr	r2, [sp, #92]	; 0x5c
   16670:	orr	r1, r1, r2
   16674:	ldr	r2, [sp, #88]	; 0x58
   16678:	orr	r1, r1, r2
   1667c:	ldr	r2, [sp, #84]	; 0x54
   16680:	orr	r1, r1, r2
   16684:	ldr	r2, [sp, #80]	; 0x50
   16688:	orr	r1, r1, r2
   1668c:	ldr	r2, [sp, #76]	; 0x4c
   16690:	orr	r1, r1, r2
   16694:	ldr	r2, [sp, #72]	; 0x48
   16698:	orr	r1, r1, r2
   1669c:	ldr	r2, [sp, #68]	; 0x44
   166a0:	orr	r1, r1, r2
   166a4:	ldr	r2, [sp, #64]	; 0x40
   166a8:	orr	r1, r1, r2
   166ac:	ldr	r2, [sp, #60]	; 0x3c
   166b0:	orr	r1, r1, r2
   166b4:	ldr	r2, [sp, #56]	; 0x38
   166b8:	orr	r1, r1, r2
   166bc:	ldr	r2, [sp, #52]	; 0x34
   166c0:	orr	r1, r1, r2
   166c4:	ldr	r2, [sp, #48]	; 0x30
   166c8:	orr	r1, r1, r2
   166cc:	ldr	r2, [sp, #44]	; 0x2c
   166d0:	orr	r1, r1, r2
   166d4:	ldr	r2, [sp, #40]	; 0x28
   166d8:	orr	r1, r1, r2
   166dc:	ldr	r2, [sp, #36]	; 0x24
   166e0:	orr	r1, r1, r2
   166e4:	ldr	r2, [sp, #32]
   166e8:	orr	r1, r1, r2
   166ec:	ldr	r2, [sp, #28]
   166f0:	orr	r1, r1, r2
   166f4:	ldr	r2, [sp, #24]
   166f8:	orr	r1, r1, r2
   166fc:	ldr	r2, [sp, #20]
   16700:	orr	r1, r1, r2
   16704:	ldr	r2, [sp, #16]
   16708:	orr	r1, r1, r2
   1670c:	orr	r1, r1, r7
   16710:	orr	r1, r1, r6
   16714:	orr	r1, r1, r9
   16718:	orr	r1, r1, sl
   1671c:	orr	r1, r1, r5
   16720:	orr	r5, r1, r0
   16724:	ldr	r1, [pc, #276]	; 16840 <main@@Base+0x9a4>
   16728:	ldr	r2, [pc, #276]	; 16844 <main@@Base+0x9a8>
   1672c:	mov	r0, r4
   16730:	add	r1, pc, r1
   16734:	add	r2, pc, r2
   16738:	bl	15038 <test_json@@Base>
   1673c:	orrs	r0, r5, r0
   16740:	mvnne	r0, #0
   16744:	sub	sp, fp, #28
   16748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1674c:	muleq	r4, r4, lr
   16750:	andeq	r1, r3, fp, asr r3
   16754:	andeq	pc, r2, pc, ror #19
   16758:	andeq	r1, r3, sl, lsr r3
   1675c:	andeq	r1, r3, r5, ror #6
   16760:	andeq	r1, r3, lr, asr #6
   16764:	andeq	r1, r3, sl, ror r3
   16768:	andeq	r1, r3, r5, ror #6
   1676c:	muleq	r3, sl, r3
   16770:	muleq	r3, r2, r3
   16774:	andeq	r1, r3, r0, lsr #7
   16778:	muleq	r3, sl, r3
   1677c:	muleq	r3, r7, r3
   16780:	andeq	pc, r2, r4, ror #15
   16784:	andeq	r1, r3, r6, ror #6
   16788:	andeq	r1, r3, fp, asr r3
   1678c:	andeq	r1, r3, r0, asr r3
   16790:	andeq	r1, r3, sp, ror #6
   16794:	andeq	r1, r3, r7, ror #6
   16798:	andeq	r1, r3, sp, asr r3
   1679c:	andeq	r1, r3, fp, ror r3
   167a0:	andeq	r1, r3, sp, ror #6
   167a4:	andeq	r1, r3, fp, lsl #7
   167a8:	andeq	r1, r3, sp, ror r3
   167ac:	muleq	r3, sl, r3
   167b0:	andeq	r1, r3, fp, lsl #7
   167b4:	andeq	r1, r3, sl, lsl #7
   167b8:	muleq	r3, r8, r3
   167bc:			; <UNDEFINED> instruction: 0x000313be
   167c0:	andeq	r1, r3, ip, ror r3
   167c4:	andeq	r1, r3, r9, asr #7
   167c8:	andeq	r1, r3, r4, ror #7
   167cc:	andeq	r1, r3, r5, lsr r4
   167d0:	andeq	r1, r3, r3, asr r4
   167d4:			; <UNDEFINED> instruction: 0x000314be
   167d8:	strdeq	r1, [r3], -r4
   167dc:	strdeq	r1, [r3], -r3
   167e0:	andeq	r1, r3, sp, ror #9
   167e4:	andeq	r1, r3, r6, asr r5
   167e8:	andeq	r1, r3, r8, lsl #11
   167ec:	andeq	r1, r3, r1, asr #11
   167f0:	andeq	r1, r3, r5, asr #11
   167f4:	ldrdeq	r1, [r3], -fp
   167f8:			; <UNDEFINED> instruction: 0x000315bd
   167fc:	andeq	r1, r3, r9, lsl #12
   16800:	andeq	r1, r3, r6, lsl r6
   16804:	andeq	r1, r3, r7, lsl #13
   16808:	andeq	r1, r3, sl, lsr #13
   1680c:	andeq	r1, r3, r0, lsr #13
   16810:	andeq	r1, r3, fp, asr #13
   16814:	andeq	r1, r3, r9, asr #13
   16818:	andeq	r1, r3, r0, asr #14
   1681c:	andeq	r1, r3, r4, lsl #15
   16820:	ldrdeq	r1, [r3], -r0
   16824:	andeq	r1, r3, r6, asr #16
   16828:	andeq	r1, r3, r9, lsl #17
   1682c:	andeq	r1, r3, r0, lsl r9
   16830:	andeq	r1, r3, r2, ror #18
   16834:	ldrdeq	r1, [r3], -r9
   16838:	andeq	r1, r3, sp, lsl sl
   1683c:	andeq	r1, r3, r3, lsr #21
   16840:			; <UNDEFINED> instruction: 0x000319be
   16844:	andeq	r1, r3, r9, asr #20
   16848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1684c:	add	fp, sp, #28
   16850:	sub	sp, sp, #4
   16854:	vpush	{d8-d9}
   16858:	sub	sp, sp, #72	; 0x48
   1685c:	mov	sl, r0
   16860:	mov	r0, #0
   16864:	mov	r8, r1
   16868:	mov	r1, #36	; 0x24
   1686c:	mov	r4, r3
   16870:	mov	r6, r2
   16874:	str	r0, [r3]
   16878:	ldr	r0, [sl]
   1687c:	bl	2f340 <flatcc_builder_start_table@@Base>
   16880:	cmp	r0, #0
   16884:	beq	168b4 <main@@Base+0xa18>
   16888:	mov	r0, sl
   1688c:	mov	r1, r8
   16890:	mov	r2, r6
   16894:	mov	r3, #33	; 0x21
   16898:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1689c:	mov	r8, r0
   168a0:	mov	r0, r8
   168a4:	sub	sp, fp, #48	; 0x30
   168a8:	vpop	{d8-d9}
   168ac:	add	sp, sp, #4
   168b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168b4:	add	r0, sp, #40	; 0x28
   168b8:	mov	r1, r8
   168bc:	mov	r2, r6
   168c0:	mov	r3, #1
   168c4:	str	r0, [sp]
   168c8:	mov	r0, sl
   168cc:	bl	36c44 <flatcc_json_parser_prepare_unions@@Base>
   168d0:	cmp	r0, r6
   168d4:	beq	16888 <main@@Base+0x9ec>
   168d8:	cmp	r8, r6
   168dc:	beq	16910 <main@@Base+0xa74>
   168e0:	ldrb	r0, [r8]
   168e4:	cmp	r0, #123	; 0x7b
   168e8:	bne	16910 <main@@Base+0xa74>
   168ec:	add	r1, r8, #1
   168f0:	sub	r0, r6, r1
   168f4:	cmp	r0, #2
   168f8:	blt	169a8 <main@@Base+0xb0c>
   168fc:	ldrb	r0, [r1]
   16900:	cmp	r0, #32
   16904:	bls	16998 <main@@Base+0xafc>
   16908:	mov	r8, r1
   1690c:	b	169b8 <main@@Base+0xb1c>
   16910:	mov	r0, sl
   16914:	mov	r1, r8
   16918:	mov	r2, r6
   1691c:	mov	r3, #21
   16920:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   16924:	mov	r8, r0
   16928:	add	r0, sl, #20
   1692c:	ldr	r0, [r0]
   16930:	cmp	r0, #0
   16934:	bne	16888 <main@@Base+0x9ec>
   16938:	ldr	r0, [sl]
   1693c:	mov	r1, #3
   16940:	bl	2fbc0 <flatcc_builder_check_required_field@@Base>
   16944:	cmp	r0, #0
   16948:	beq	1697c <main@@Base+0xae0>
   1694c:	ldr	r3, [sp, #40]	; 0x28
   16950:	mov	r0, sl
   16954:	mov	r1, r8
   16958:	mov	r2, r6
   1695c:	bl	36cd4 <flatcc_json_parser_finalize_unions@@Base>
   16960:	mov	r8, r0
   16964:	ldr	r0, [sl]
   16968:	bl	2fd70 <flatcc_builder_end_table@@Base>
   1696c:	cmp	r0, #0
   16970:	str	r0, [r4]
   16974:	bne	168a0 <main@@Base+0xa04>
   16978:	b	16888 <main@@Base+0x9ec>
   1697c:	mov	r0, sl
   16980:	mov	r1, r8
   16984:	mov	r2, r6
   16988:	mov	r3, #29
   1698c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   16990:	mov	r8, r0
   16994:	b	16888 <main@@Base+0x9ec>
   16998:	bne	169a8 <main@@Base+0xb0c>
   1699c:	ldrb	r0, [r8, #2]!
   169a0:	cmp	r0, #32
   169a4:	bhi	169b8 <main@@Base+0xb1c>
   169a8:	mov	r0, sl
   169ac:	mov	r2, r6
   169b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   169b4:	mov	r8, r0
   169b8:	cmp	r8, r6
   169bc:	mov	r2, r6
   169c0:	beq	169f8 <main@@Base+0xb5c>
   169c4:	ldrb	r0, [r8]
   169c8:	cmp	r0, #125	; 0x7d
   169cc:	bne	169f4 <main@@Base+0xb58>
   169d0:	add	r1, r8, #1
   169d4:	sub	r0, r6, r1
   169d8:	cmp	r0, #2
   169dc:	blt	1fc08 <main@@Base+0x9d6c>
   169e0:	ldrb	r0, [r1]
   169e4:	cmp	r0, #32
   169e8:	bls	1fbf8 <main@@Base+0x9d5c>
   169ec:	mov	r8, r1
   169f0:	b	16928 <main@@Base+0xa8c>
   169f4:	mov	r2, r8
   169f8:	add	r0, sl, #20
   169fc:	vldr	s18, [pc, #1016]	; 16dfc <main@@Base+0xf60>
   16a00:	vmov.f32	s16, #8	; 0x40400000  3.0
   16a04:	str	r6, [sp, #36]	; 0x24
   16a08:	str	sl, [sp, #32]
   16a0c:	str	r4, [sp, #28]
   16a10:	str	r0, [sp, #24]
   16a14:	movw	r0, #13407	; 0x345f
   16a18:	movt	r0, #29494	; 0x7336
   16a1c:	sub	r0, r0, #512	; 0x200
   16a20:	sub	r0, r0, #196608	; 0x30000
   16a24:	str	r0, [sp, #20]
   16a28:	cmp	r2, r6
   16a2c:	mov	r8, r6
   16a30:	beq	16a60 <main@@Base+0xbc4>
   16a34:	ldrb	r0, [r2]
   16a38:	cmp	r0, #34	; 0x22
   16a3c:	bne	16a48 <main@@Base+0xbac>
   16a40:	add	r8, r2, #1
   16a44:	b	16a60 <main@@Base+0xbc4>
   16a48:	mov	r1, r2
   16a4c:	mov	r0, sl
   16a50:	mov	r2, r6
   16a54:	mov	r3, #5
   16a58:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   16a5c:	mov	r8, r0
   16a60:	sub	r9, r6, r8
   16a64:	mov	r0, #8
   16a68:	cmp	r9, #8
   16a6c:	movcc	r0, r9
   16a70:	and	r0, r0, #15
   16a74:	sub	r0, r0, #1
   16a78:	cmp	r0, #7
   16a7c:	bhi	19434 <main@@Base+0x3598>
   16a80:	add	r6, pc, #36	; 0x24
   16a84:	mov	sl, #0
   16a88:	mov	ip, #0
   16a8c:	mov	r7, #0
   16a90:	mov	r1, #0
   16a94:	mov	r2, #0
   16a98:	mov	r3, #0
   16a9c:	mov	r5, #0
   16aa0:	mov	r4, #0
   16aa4:	ldr	r0, [r6, r0, lsl #2]
   16aa8:	add	pc, r6, r0
   16aac:	andeq	r0, r0, r4, rrx
   16ab0:	andeq	r0, r0, ip, asr r0
   16ab4:	andeq	r0, r0, r4, asr r0
   16ab8:	andeq	r0, r0, ip, asr #32
   16abc:	andeq	r0, r0, r0, asr #32
   16ac0:	andeq	r0, r0, r4, lsr r0
   16ac4:	andeq	r0, r0, r4, lsr #32
   16ac8:	andeq	r0, r0, r0, lsr #32
   16acc:	ldrb	ip, [r8, #7]
   16ad0:	ldrb	r0, [r8, #6]
   16ad4:	mov	r7, sl
   16ad8:	orr	r0, ip, r0, lsl #8
   16adc:	mov	sl, r0
   16ae0:	ldrb	r0, [r8, #5]
   16ae4:	mov	r1, r7
   16ae8:	orr	sl, sl, r0, lsl #16
   16aec:	ldrb	r0, [r8, #4]
   16af0:	mov	r2, r1
   16af4:	orr	sl, sl, r0, lsl #24
   16af8:	ldrb	r0, [r8, #3]
   16afc:	orr	r3, r0, r2
   16b00:	ldrb	r0, [r8, #2]
   16b04:	orr	r5, r3, r0, lsl #8
   16b08:	ldrb	r0, [r8, #1]
   16b0c:	orr	r4, r5, r0, lsl #16
   16b10:	ldrb	r0, [r8]
   16b14:	movw	r1, #29281	; 0x7261
   16b18:	movw	r5, #29556	; 0x7374
   16b1c:	movt	r1, #24946	; 0x6172
   16b20:	movt	r5, #29797	; 0x7465
   16b24:	subs	r1, sl, r1
   16b28:	orr	r0, r4, r0, lsl #24
   16b2c:	sbcs	r1, r0, r5
   16b30:	bcs	16bf0 <main@@Base+0xd54>
   16b34:	movw	r1, #28004	; 0x6d64
   16b38:	movw	r2, #30309	; 0x7665
   16b3c:	movw	r3, #28530	; 0x6f72
   16b40:	movw	r7, #24430	; 0x5f6e
   16b44:	movt	r1, #28257	; 0x6e61
   16b48:	movt	r2, #26990	; 0x696e
   16b4c:	movt	r3, #28276	; 0x6e74
   16b50:	movt	r7, #28276	; 0x6e74
   16b54:	cmp	r0, r1
   16b58:	bhi	16d78 <main@@Base+0xedc>
   16b5c:	ldr	r6, [sp, #36]	; 0x24
   16b60:	movw	r1, #25975	; 0x6577
   16b64:	movt	r1, #26220	; 0x666c
   16b68:	cmp	r0, r1
   16b6c:	bhi	16e80 <main@@Base+0xfe4>
   16b70:	movw	r1, #27759	; 0x6c6f
   16b74:	movt	r1, #25455	; 0x636f
   16b78:	eor	r2, r0, r1
   16b7c:	and	r1, sl, #-16777216	; 0xff000000
   16b80:	eor	r3, r1, #1912602624	; 0x72000000
   16b84:	orrs	r2, r3, r2
   16b88:	beq	17748 <main@@Base+0x18ac>
   16b8c:	movw	r2, #25965	; 0x656d
   16b90:	ldr	sl, [sp, #32]
   16b94:	eor	r1, r1, #2030043136	; 0x79000000
   16b98:	movt	r2, #25966	; 0x656e
   16b9c:	eor	r0, r0, r2
   16ba0:	orrs	r0, r1, r0
   16ba4:	bne	19434 <main@@Base+0x3598>
   16ba8:	cmp	r9, #6
   16bac:	mov	r1, r8
   16bb0:	blt	189f0 <main@@Base+0x2b54>
   16bb4:	ldrb	r0, [r8, #5]
   16bb8:	mov	r1, r8
   16bbc:	cmp	r0, #34	; 0x22
   16bc0:	bne	189f0 <main@@Base+0x2b54>
   16bc4:	add	r2, r8, #6
   16bc8:	sub	r0, r6, r2
   16bcc:	cmp	r0, #2
   16bd0:	blt	18024 <main@@Base+0x2188>
   16bd4:	ldrb	r0, [r2]
   16bd8:	cmp	r0, #32
   16bdc:	bls	18010 <main@@Base+0x2174>
   16be0:	mov	r1, r2
   16be4:	cmp	r1, r6
   16be8:	bne	18040 <main@@Base+0x21a4>
   16bec:	b	18078 <main@@Base+0x21dc>
   16bf0:	movw	r1, #0
   16bf4:	movt	r1, #26163	; 0x6633
   16bf8:	subs	r1, sl, r1
   16bfc:	sbcs	r1, r0, r5
   16c00:	bcs	16e00 <main@@Base+0xf64>
   16c04:	movw	r1, #29281	; 0x7261
   16c08:	ldr	r6, [sp, #36]	; 0x24
   16c0c:	movt	r1, #24946	; 0x6172
   16c10:	eor	r2, sl, r1
   16c14:	eor	r1, r0, r5
   16c18:	orrs	r2, r2, r1
   16c1c:	bne	16eec <main@@Base+0x1050>
   16c20:	add	r9, r8, #8
   16c24:	mov	r0, #8
   16c28:	sub	ip, r6, r9
   16c2c:	cmp	ip, #8
   16c30:	movcc	r0, ip
   16c34:	and	r0, r0, #15
   16c38:	sub	r0, r0, #1
   16c3c:	cmp	r0, #7
   16c40:	bhi	18738 <main@@Base+0x289c>
   16c44:	add	r2, pc, #36	; 0x24
   16c48:	mov	r1, #0
   16c4c:	mov	lr, #0
   16c50:	mov	sl, #0
   16c54:	mov	r6, #0
   16c58:	mov	r3, #0
   16c5c:	mov	r5, #0
   16c60:	mov	r4, #0
   16c64:	ldr	r7, [r2, r0, lsl #2]
   16c68:	mov	r0, #0
   16c6c:	add	pc, r2, r7
   16c70:	andeq	r0, r0, r4, rrx
   16c74:	andeq	r0, r0, ip, asr r0
   16c78:	andeq	r0, r0, r4, asr r0
   16c7c:	andeq	r0, r0, ip, asr #32
   16c80:	andeq	r0, r0, r0, asr #32
   16c84:	andeq	r0, r0, r4, lsr r0
   16c88:	andeq	r0, r0, r4, lsr #32
   16c8c:	andeq	r0, r0, r0, lsr #32
   16c90:	ldrb	lr, [r8, #15]
   16c94:	ldrb	r0, [r8, #14]
   16c98:	mov	sl, r1
   16c9c:	orr	r0, lr, r0, lsl #8
   16ca0:	mov	r1, r0
   16ca4:	ldrb	r0, [r8, #13]
   16ca8:	mov	r6, sl
   16cac:	orr	r1, r1, r0, lsl #16
   16cb0:	ldrb	r0, [r8, #12]
   16cb4:	mov	r3, r6
   16cb8:	orr	r1, r1, r0, lsl #24
   16cbc:	ldrb	r0, [r8, #11]
   16cc0:	orr	r5, r0, r3
   16cc4:	ldrb	r0, [r8, #10]
   16cc8:	orr	r0, r5, r0, lsl #8
   16ccc:	ldrb	r2, [r8, #9]
   16cd0:	orr	r4, r0, r2, lsl #16
   16cd4:	ldrb	r0, [r9]
   16cd8:	movw	r3, #26227	; 0x6673
   16cdc:	movt	r3, #31087	; 0x796f
   16ce0:	orr	r2, r4, r0, lsl #24
   16ce4:	movw	r0, #26989	; 0x696d
   16ce8:	movt	r0, #29810	; 0x7472
   16cec:	subs	r0, r0, r1
   16cf0:	sbcs	r0, r3, r2
   16cf4:	bcc	17674 <main@@Base+0x17d8>
   16cf8:	movw	r0, #29797	; 0x7465
   16cfc:	ldr	r6, [sp, #36]	; 0x24
   16d00:	eor	r3, r2, r3
   16d04:	movt	r0, #28530	; 0x6f72
   16d08:	eor	r0, r1, r0
   16d0c:	orrs	r0, r0, r3
   16d10:	beq	17b30 <main@@Base+0x1c94>
   16d14:	movw	r0, #27763	; 0x6c73
   16d18:	movt	r0, #28527	; 0x6f6f
   16d1c:	eor	r0, r1, r0
   16d20:	movw	r1, #26210	; 0x6662
   16d24:	movt	r1, #31087	; 0x796f
   16d28:	eor	r1, r2, r1
   16d2c:	orrs	r0, r0, r1
   16d30:	bne	18738 <main@@Base+0x289c>
   16d34:	cmp	ip, #9
   16d38:	blt	18738 <main@@Base+0x289c>
   16d3c:	ldrb	r0, [r8, #16]
   16d40:	cmp	r0, #34	; 0x22
   16d44:	bne	18738 <main@@Base+0x289c>
   16d48:	ldr	r4, [sp, #32]
   16d4c:	add	r1, r8, #17
   16d50:	sub	r0, r6, r1
   16d54:	cmp	r0, #2
   16d58:	blt	186ec <main@@Base+0x2850>
   16d5c:	ldrb	r0, [r1]
   16d60:	cmp	r0, #32
   16d64:	bls	186dc <main@@Base+0x2840>
   16d68:	mov	r8, r1
   16d6c:	cmp	r8, r6
   16d70:	bne	18704 <main@@Base+0x2868>
   16d74:	b	18748 <main@@Base+0x28ac>
   16d78:	ldr	r6, [sp, #36]	; 0x24
   16d7c:	movw	r1, #29555	; 0x7373
   16d80:	movt	r1, #29797	; 0x7465
   16d84:	cmp	r0, r1
   16d88:	bhi	16fb8 <main@@Base+0x111c>
   16d8c:	movw	r2, #29285	; 0x7265
   16d90:	subs	r1, sl, r7
   16d94:	movt	r2, #28769	; 0x7061
   16d98:	sbcs	r1, r0, r2
   16d9c:	bcs	17164 <main@@Base+0x12c8>
   16da0:	movw	r1, #28005	; 0x6d65
   16da4:	movt	r1, #28257	; 0x6e61
   16da8:	teq	r0, r1
   16dac:	bne	19430 <main@@Base+0x3594>
   16db0:	ldr	sl, [sp, #32]
   16db4:	cmp	r9, #5
   16db8:	mov	r1, r8
   16dbc:	blt	18bbc <main@@Base+0x2d20>
   16dc0:	ldrb	r0, [r8, #4]
   16dc4:	mov	r1, r8
   16dc8:	cmp	r0, #34	; 0x22
   16dcc:	bne	18bbc <main@@Base+0x2d20>
   16dd0:	add	r2, r8, #5
   16dd4:	sub	r0, r6, r2
   16dd8:	cmp	r0, #2
   16ddc:	blt	1811c <main@@Base+0x2280>
   16de0:	ldrb	r0, [r2]
   16de4:	cmp	r0, #32
   16de8:	bls	18108 <main@@Base+0x226c>
   16dec:	mov	r1, r2
   16df0:	cmp	r1, r6
   16df4:	bne	18138 <main@@Base+0x229c>
   16df8:	b	18170 <main@@Base+0x22d4>
   16dfc:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   16e00:	movw	r2, #29544	; 0x7368
   16e04:	ldr	r6, [sp, #36]	; 0x24
   16e08:	movt	r2, #26721	; 0x6861
   16e0c:	subs	r1, sl, r2
   16e10:	sbcs	r1, r0, r5
   16e14:	bcs	17018 <main@@Base+0x117c>
   16e18:	movw	r1, #0
   16e1c:	bfc	sl, #0, #16
   16e20:	eor	r0, r0, r5
   16e24:	movt	r1, #26163	; 0x6633
   16e28:	eor	r1, sl, r1
   16e2c:	orrs	r0, r1, r0
   16e30:	bne	19430 <main@@Base+0x3594>
   16e34:	ldr	sl, [sp, #32]
   16e38:	cmp	r9, #7
   16e3c:	mov	r7, r8
   16e40:	blt	183e4 <main@@Base+0x2548>
   16e44:	ldrb	r0, [r8, #6]
   16e48:	mov	r7, r8
   16e4c:	cmp	r0, #34	; 0x22
   16e50:	bne	183e4 <main@@Base+0x2548>
   16e54:	add	r1, r8, #7
   16e58:	sub	r0, r6, r1
   16e5c:	cmp	r0, #2
   16e60:	blt	17f2c <main@@Base+0x2090>
   16e64:	ldrb	r0, [r1]
   16e68:	cmp	r0, #32
   16e6c:	bls	17f18 <main@@Base+0x207c>
   16e70:	mov	r7, r1
   16e74:	cmp	r7, r6
   16e78:	bne	17f44 <main@@Base+0x20a8>
   16e7c:	b	17f7c <main@@Base+0x20e0>
   16e80:	movw	r1, #65535	; 0xffff
   16e84:	movt	r1, #26735	; 0x686f
   16e88:	cmp	r0, r1
   16e8c:	bhi	17348 <main@@Base+0x14ac>
   16e90:	movw	r1, #25976	; 0x6578
   16e94:	movt	r1, #26220	; 0x666c
   16e98:	teq	r0, r1
   16e9c:	bne	19430 <main@@Base+0x3594>
   16ea0:	ldr	sl, [sp, #32]
   16ea4:	cmp	r9, #5
   16ea8:	mov	r9, r8
   16eac:	blt	18c10 <main@@Base+0x2d74>
   16eb0:	ldrb	r0, [r8, #4]
   16eb4:	mov	r9, r8
   16eb8:	cmp	r0, #34	; 0x22
   16ebc:	bne	18c10 <main@@Base+0x2d74>
   16ec0:	add	r1, r8, #5
   16ec4:	sub	r0, r6, r1
   16ec8:	cmp	r0, #2
   16ecc:	blt	18198 <main@@Base+0x22fc>
   16ed0:	ldrb	r0, [r1]
   16ed4:	cmp	r0, #32
   16ed8:	bls	18184 <main@@Base+0x22e8>
   16edc:	mov	r9, r1
   16ee0:	cmp	r9, r6
   16ee4:	bne	181b0 <main@@Base+0x2314>
   16ee8:	b	181e8 <main@@Base+0x234c>
   16eec:	movw	r2, #28788	; 0x7074
   16ef0:	movt	r2, #25965	; 0x656d
   16ef4:	subs	r2, sl, r2
   16ef8:	sbcs	r2, r0, r5
   16efc:	bcs	173b4 <main@@Base+0x1518>
   16f00:	movw	r0, #28524	; 0x6f6c
   16f04:	movt	r0, #25199	; 0x626f
   16f08:	eor	r0, sl, r0
   16f0c:	orrs	r0, r0, r1
   16f10:	beq	17ae4 <main@@Base+0x1c48>
   16f14:	movw	r0, #29541	; 0x7365
   16f18:	movt	r0, #25185	; 0x6261
   16f1c:	eor	r0, sl, r0
   16f20:	orrs	r0, r0, r1
   16f24:	bne	19430 <main@@Base+0x3594>
   16f28:	add	r7, r8, #8
   16f2c:	mov	r1, #8
   16f30:	ldr	sl, [sp, #32]
   16f34:	sub	r0, r6, r7
   16f38:	cmp	r0, #8
   16f3c:	movcc	r1, r0
   16f40:	and	r2, r1, #15
   16f44:	sub	r1, r2, #2
   16f48:	cmp	r1, #7
   16f4c:	bcs	17ea8 <main@@Base+0x200c>
   16f50:	ldrb	r1, [r8, #9]
   16f54:	lsl	r2, r1, #16
   16f58:	mov	r1, #0
   16f5c:	ldrb	r3, [r7]
   16f60:	orr	r2, r2, r3, lsl #24
   16f64:	movw	r3, #0
   16f68:	movt	r3, #13876	; 0x3634
   16f6c:	eor	r2, r2, r3
   16f70:	orrs	r1, r1, r2
   16f74:	bne	1e9b4 <main@@Base+0x8b18>
   16f78:	cmp	r0, #3
   16f7c:	blt	1e9b4 <main@@Base+0x8b18>
   16f80:	ldrb	r0, [r8, #10]
   16f84:	cmp	r0, #34	; 0x22
   16f88:	bne	1e9b4 <main@@Base+0x8b18>
   16f8c:	add	r1, r8, #11
   16f90:	sub	r0, r6, r1
   16f94:	cmp	r0, #2
   16f98:	blt	18fd8 <main@@Base+0x313c>
   16f9c:	ldrb	r0, [r1]
   16fa0:	cmp	r0, #32
   16fa4:	bls	18fc8 <main@@Base+0x312c>
   16fa8:	mov	r8, r1
   16fac:	cmp	r8, r6
   16fb0:	bne	18ff0 <main@@Base+0x3154>
   16fb4:	b	19028 <main@@Base+0x318c>
   16fb8:	eor	r7, r0, r5
   16fbc:	mov	r2, r5
   16fc0:	and	r5, sl, #-16777216	; 0xff000000
   16fc4:	eor	r1, r5, #872415232	; 0x34000000
   16fc8:	orrs	r1, r1, r7
   16fcc:	bne	17450 <main@@Base+0x15b4>
   16fd0:	cmp	r9, #6
   16fd4:	mov	r9, r8
   16fd8:	blt	184a8 <main@@Base+0x260c>
   16fdc:	ldrb	r0, [r8, #5]
   16fe0:	mov	r9, r8
   16fe4:	cmp	r0, #34	; 0x22
   16fe8:	bne	184a8 <main@@Base+0x260c>
   16fec:	add	r1, r8, #6
   16ff0:	sub	r0, r6, r1
   16ff4:	cmp	r0, #2
   16ff8:	blt	17fa8 <main@@Base+0x210c>
   16ffc:	ldrb	r0, [r1]
   17000:	cmp	r0, #32
   17004:	bls	17f94 <main@@Base+0x20f8>
   17008:	mov	r9, r1
   1700c:	cmp	r9, r6
   17010:	bne	17fc0 <main@@Base+0x2124>
   17014:	b	17ff8 <main@@Base+0x215c>
   17018:	eor	r2, sl, r2
   1701c:	eor	r1, r0, r5
   17020:	orrs	r2, r2, r1
   17024:	bne	174a0 <main@@Base+0x1604>
   17028:	add	r9, r8, #8
   1702c:	mov	r0, #8
   17030:	sub	ip, r6, r9
   17034:	cmp	ip, #8
   17038:	movcc	r0, ip
   1703c:	and	r0, r0, #15
   17040:	sub	r0, r0, #1
   17044:	cmp	r0, #7
   17048:	bhi	18738 <main@@Base+0x289c>
   1704c:	add	r2, pc, #36	; 0x24
   17050:	mov	r1, #0
   17054:	mov	lr, #0
   17058:	mov	sl, #0
   1705c:	mov	r6, #0
   17060:	mov	r3, #0
   17064:	mov	r5, #0
   17068:	mov	r4, #0
   1706c:	ldr	r7, [r2, r0, lsl #2]
   17070:	mov	r0, #0
   17074:	add	pc, r2, r7
   17078:	andeq	r0, r0, r4, rrx
   1707c:	andeq	r0, r0, ip, asr r0
   17080:	andeq	r0, r0, r4, asr r0
   17084:	andeq	r0, r0, ip, asr #32
   17088:	andeq	r0, r0, r0, asr #32
   1708c:	andeq	r0, r0, r4, lsr r0
   17090:	andeq	r0, r0, r4, lsr #32
   17094:	andeq	r0, r0, r0, lsr #32
   17098:	ldrb	lr, [r8, #15]
   1709c:	ldrb	r0, [r8, #14]
   170a0:	mov	sl, r1
   170a4:	orr	r0, lr, r0, lsl #8
   170a8:	mov	r1, r0
   170ac:	ldrb	r0, [r8, #13]
   170b0:	mov	r6, sl
   170b4:	orr	r1, r1, r0, lsl #16
   170b8:	ldrb	r0, [r8, #12]
   170bc:	mov	r3, r6
   170c0:	orr	r1, r1, r0, lsl #24
   170c4:	ldrb	r0, [r8, #11]
   170c8:	orr	r5, r0, r3
   170cc:	ldrb	r0, [r8, #10]
   170d0:	orr	r0, r5, r0, lsl #8
   170d4:	ldrb	r2, [r8, #9]
   170d8:	orr	r4, r0, r2, lsl #16
   170dc:	ldrb	r0, [r9]
   170e0:	movw	r3, #30257	; 0x7631
   170e4:	movt	r3, #26222	; 0x666e
   170e8:	orr	r2, r4, r0, lsl #24
   170ec:	subs	r0, r1, r3
   170f0:	movw	r0, #13407	; 0x345f
   170f4:	movt	r0, #29494	; 0x7336
   170f8:	sbcs	r0, r2, r0
   170fc:	bcs	17a58 <main@@Base+0x1bbc>
   17100:	eor	r0, r1, r3
   17104:	ldr	r1, [sp, #20]
   17108:	ldr	r6, [sp, #36]	; 0x24
   1710c:	eor	r1, r2, r1
   17110:	orrs	r0, r0, r1
   17114:	bne	18738 <main@@Base+0x289c>
   17118:	ldr	sl, [sp, #32]
   1711c:	cmp	ip, #9
   17120:	blt	1893c <main@@Base+0x2aa0>
   17124:	ldrb	r0, [r8, #16]
   17128:	cmp	r0, #34	; 0x22
   1712c:	bne	1893c <main@@Base+0x2aa0>
   17130:	ldr	r4, [sp, #36]	; 0x24
   17134:	add	r1, r8, #17
   17138:	sub	r0, r4, r1
   1713c:	cmp	r0, #2
   17140:	blt	188ec <main@@Base+0x2a50>
   17144:	ldrb	r0, [r1]
   17148:	cmp	r0, #32
   1714c:	bls	188d4 <main@@Base+0x2a38>
   17150:	ldr	r4, [sp, #36]	; 0x24
   17154:	mov	r6, r1
   17158:	cmp	r6, r4
   1715c:	bne	18904 <main@@Base+0x2a68>
   17160:	b	189b4 <main@@Base+0x2b18>
   17164:	eor	r1, sl, r7
   17168:	eor	r2, r0, r2
   1716c:	orrs	r1, r1, r2
   17170:	bne	17794 <main@@Base+0x18f8>
   17174:	add	r1, r8, #8
   17178:	mov	r2, #8
   1717c:	ldr	sl, [sp, #32]
   17180:	sub	r0, r6, r1
   17184:	cmp	r0, #8
   17188:	movcs	r0, r2
   1718c:	and	r0, r0, #15
   17190:	sub	r2, r0, #1
   17194:	cmp	r2, #7
   17198:	bhi	17adc <main@@Base+0x1c40>
   1719c:	add	r4, pc, #36	; 0x24
   171a0:	mov	r9, #0
   171a4:	mov	ip, #0
   171a8:	mov	lr, #0
   171ac:	mov	r7, #0
   171b0:	mov	r3, #0
   171b4:	mov	r6, #0
   171b8:	mov	r5, #0
   171bc:	ldr	r0, [r4, r2, lsl #2]
   171c0:	mov	r2, #0
   171c4:	add	pc, r4, r0
   171c8:	andeq	r0, r0, r4, rrx
   171cc:	andeq	r0, r0, ip, asr r0
   171d0:	andeq	r0, r0, r4, asr r0
   171d4:	andeq	r0, r0, ip, asr #32
   171d8:	andeq	r0, r0, r0, asr #32
   171dc:	andeq	r0, r0, r4, lsr r0
   171e0:	andeq	r0, r0, r4, lsr #32
   171e4:	andeq	r0, r0, r0, lsr #32
   171e8:	ldrb	ip, [r8, #15]
   171ec:	ldrb	r0, [r8, #14]
   171f0:	mov	lr, r9
   171f4:	orr	r0, ip, r0, lsl #8
   171f8:	mov	r9, r0
   171fc:	ldrb	r0, [r8, #13]
   17200:	mov	r7, lr
   17204:	orr	r9, r9, r0, lsl #16
   17208:	ldrb	r0, [r8, #12]
   1720c:	mov	r3, r7
   17210:	orr	r9, r9, r0, lsl #24
   17214:	ldrb	r0, [r8, #11]
   17218:	orr	r6, r0, r3
   1721c:	ldrb	r0, [r8, #10]
   17220:	orr	r2, r6, r0, lsl #8
   17224:	ldrb	r0, [r8, #9]
   17228:	orr	r5, r2, r0, lsl #16
   1722c:	ldrb	r2, [r1]
   17230:	movw	r0, #25445	; 0x6365
   17234:	movw	r3, #25971	; 0x6573
   17238:	ldr	r6, [sp, #36]	; 0x24
   1723c:	movt	r0, #28769	; 0x7061
   17240:	movt	r3, #24941	; 0x616d
   17244:	eor	r0, r9, r0
   17248:	orr	r2, r5, r2, lsl #24
   1724c:	eor	r2, r2, r3
   17250:	orrs	r0, r0, r2
   17254:	bne	17adc <main@@Base+0x1c40>
   17258:	add	r9, r8, #16
   1725c:	mov	r1, #8
   17260:	sub	r0, r6, r9
   17264:	cmp	r0, #8
   17268:	movcc	r1, r0
   1726c:	and	r1, r1, #15
   17270:	sub	r2, r1, #1
   17274:	cmp	r2, #7
   17278:	bhi	1873c <main@@Base+0x28a0>
   1727c:	add	r4, pc, #24
   17280:	mov	r1, #0
   17284:	mov	r3, #0
   17288:	mov	r6, #0
   1728c:	mov	r5, #0
   17290:	ldr	r7, [r4, r2, lsl #2]
   17294:	mov	r2, #0
   17298:	add	pc, r4, r7
   1729c:	andeq	r0, r0, r4, asr #32
   172a0:	andeq	r0, r0, ip, lsr r0
   172a4:	andeq	r0, r0, r4, lsr r0
   172a8:	andeq	r0, r0, r8, lsr #32
   172ac:	andeq	r0, r0, r0, lsr #32
   172b0:	andeq	r0, r0, r0, lsr #32
   172b4:	andeq	r0, r0, r0, lsr #32
   172b8:	andeq	r0, r0, r0, lsr #32
   172bc:	ldrb	r2, [r8, #20]
   172c0:	lsl	r2, r2, #24
   172c4:	ldrb	r3, [r8, #19]
   172c8:	orr	r3, r3, r1
   172cc:	mov	r1, r2
   172d0:	ldrb	r2, [r8, #18]
   172d4:	orr	r6, r3, r2, lsl #8
   172d8:	ldrb	r2, [r8, #17]
   172dc:	orr	r5, r6, r2, lsl #16
   172e0:	ldrb	r2, [r9]
   172e4:	movw	r3, #25971	; 0x6573
   172e8:	ldr	r6, [sp, #36]	; 0x24
   172ec:	and	r1, r1, #-16777216	; 0xff000000
   172f0:	movt	r3, #24436	; 0x5f74
   172f4:	eor	r1, r1, #1946157056	; 0x74000000
   172f8:	orr	r2, r5, r2, lsl #24
   172fc:	eor	r2, r2, r3
   17300:	orrs	r1, r1, r2
   17304:	bne	1873c <main@@Base+0x28a0>
   17308:	cmp	r0, #6
   1730c:	blt	1873c <main@@Base+0x28a0>
   17310:	ldrb	r0, [r8, #21]
   17314:	cmp	r0, #34	; 0x22
   17318:	bne	1873c <main@@Base+0x28a0>
   1731c:	add	r1, r8, #22
   17320:	sub	r0, r6, r1
   17324:	cmp	r0, #2
   17328:	blt	1988c <main@@Base+0x39f0>
   1732c:	ldrb	r0, [r1]
   17330:	cmp	r0, #32
   17334:	bls	1987c <main@@Base+0x39e0>
   17338:	mov	r8, r1
   1733c:	cmp	r8, r6
   17340:	bne	198a4 <main@@Base+0x3a08>
   17344:	b	198dc <main@@Base+0x3a40>
   17348:	subs	r1, sl, r3
   1734c:	sbcs	r1, r0, r2
   17350:	bcs	177f4 <main@@Base+0x1958>
   17354:	movw	r1, #0
   17358:	bfc	r0, #0, #16
   1735c:	movt	r1, #26736	; 0x6870
   17360:	teq	r0, r1
   17364:	bne	19430 <main@@Base+0x3594>
   17368:	ldr	sl, [sp, #32]
   1736c:	cmp	r9, #3
   17370:	mov	r7, r8
   17374:	blt	19b4c <main@@Base+0x3cb0>
   17378:	ldrb	r0, [r8, #2]
   1737c:	mov	r7, r8
   17380:	cmp	r0, #34	; 0x22
   17384:	bne	19b4c <main@@Base+0x3cb0>
   17388:	add	r1, r8, #3
   1738c:	sub	r0, r6, r1
   17390:	cmp	r0, #2
   17394:	blt	18774 <main@@Base+0x28d8>
   17398:	ldrb	r0, [r1]
   1739c:	cmp	r0, #32
   173a0:	bls	18760 <main@@Base+0x28c4>
   173a4:	mov	r7, r1
   173a8:	cmp	r7, r6
   173ac:	bne	1878c <main@@Base+0x28f0>
   173b0:	b	187c4 <main@@Base+0x2928>
   173b4:	mvn	r2, #-1711276032	; 0x9a000000
   173b8:	subs	r2, r2, sl
   173bc:	sbcs	r2, r5, r0
   173c0:	bcc	1787c <main@@Base+0x19e0>
   173c4:	movw	r0, #28788	; 0x7074
   173c8:	movt	r0, #25965	; 0x656d
   173cc:	eor	r0, sl, r0
   173d0:	orrs	r0, r0, r1
   173d4:	bne	19430 <main@@Base+0x3594>
   173d8:	add	r7, r8, #8
   173dc:	mov	r1, #8
   173e0:	mov	r2, #-268435456	; 0xf0000000
   173e4:	ldr	sl, [sp, #32]
   173e8:	sub	r0, r6, r7
   173ec:	cmp	r0, #8
   173f0:	movcc	r1, r0
   173f4:	add	r1, r2, r1, lsl #28
   173f8:	asr	r1, r1, #28
   173fc:	cmp	r1, #0
   17400:	blt	1e9b4 <main@@Base+0x8b18>
   17404:	ldrb	r1, [r7]
   17408:	cmp	r1, #121	; 0x79
   1740c:	bne	1e9b4 <main@@Base+0x8b18>
   17410:	cmp	r0, #2
   17414:	blt	1e9b4 <main@@Base+0x8b18>
   17418:	ldrb	r0, [r8, #9]
   1741c:	cmp	r0, #34	; 0x22
   17420:	bne	1e9b4 <main@@Base+0x8b18>
   17424:	add	r1, r8, #10
   17428:	sub	r0, r6, r1
   1742c:	cmp	r0, #2
   17430:	blt	19a48 <main@@Base+0x3bac>
   17434:	ldrb	r0, [r1]
   17438:	cmp	r0, #32
   1743c:	bls	19a38 <main@@Base+0x3b9c>
   17440:	mov	r8, r1
   17444:	cmp	r8, r6
   17448:	bne	19a60 <main@@Base+0x3bc4>
   1744c:	b	19a98 <main@@Base+0x3bfc>
   17450:	teq	r0, r2
   17454:	bne	18264 <main@@Base+0x23c8>
   17458:	cmp	r9, #5
   1745c:	mov	r1, r8
   17460:	blt	18f68 <main@@Base+0x30cc>
   17464:	ldrb	r0, [r8, #4]
   17468:	mov	r1, r8
   1746c:	cmp	r0, #34	; 0x22
   17470:	bne	18f68 <main@@Base+0x30cc>
   17474:	add	r2, r8, #5
   17478:	sub	r0, r6, r2
   1747c:	cmp	r0, #2
   17480:	blt	18214 <main@@Base+0x2378>
   17484:	ldrb	r0, [r2]
   17488:	cmp	r0, #32
   1748c:	bls	18200 <main@@Base+0x2364>
   17490:	mov	r1, r2
   17494:	cmp	r1, r6
   17498:	bne	18230 <main@@Base+0x2394>
   1749c:	b	182b8 <main@@Base+0x241c>
   174a0:	movw	r7, #24431	; 0x5f6f
   174a4:	movw	r3, #25460	; 0x6374
   174a8:	movt	r7, #28530	; 0x6f72
   174ac:	movt	r3, #30309	; 0x7665
   174b0:	subs	r2, sl, r7
   174b4:	sbcs	r2, r0, r3
   174b8:	bcs	178f0 <main@@Base+0x1a54>
   174bc:	movw	r0, #29556	; 0x7374
   174c0:	movt	r0, #28261	; 0x6e65
   174c4:	eor	r0, sl, r0
   174c8:	orrs	r0, r0, r1
   174cc:	bne	19430 <main@@Base+0x3594>
   174d0:	add	r1, r8, #8
   174d4:	mov	r2, #8
   174d8:	ldr	sl, [sp, #32]
   174dc:	sub	r0, r6, r1
   174e0:	cmp	r0, #8
   174e4:	movcs	r0, r2
   174e8:	and	r0, r0, #15
   174ec:	sub	r2, r0, #1
   174f0:	cmp	r2, #7
   174f4:	bhi	17adc <main@@Base+0x1c40>
   174f8:	add	r4, pc, #36	; 0x24
   174fc:	mov	r9, #0
   17500:	mov	ip, #0
   17504:	mov	lr, #0
   17508:	mov	r7, #0
   1750c:	mov	r3, #0
   17510:	mov	r6, #0
   17514:	mov	r5, #0
   17518:	ldr	r0, [r4, r2, lsl #2]
   1751c:	mov	r2, #0
   17520:	add	pc, r4, r0
   17524:	andeq	r0, r0, r4, rrx
   17528:	andeq	r0, r0, ip, asr r0
   1752c:	andeq	r0, r0, r4, asr r0
   17530:	andeq	r0, r0, ip, asr #32
   17534:	andeq	r0, r0, r0, asr #32
   17538:	andeq	r0, r0, r4, lsr r0
   1753c:	andeq	r0, r0, r4, lsr #32
   17540:	andeq	r0, r0, r0, lsr #32
   17544:	ldrb	ip, [r8, #15]
   17548:	ldrb	r0, [r8, #14]
   1754c:	mov	lr, r9
   17550:	orr	r0, ip, r0, lsl #8
   17554:	mov	r9, r0
   17558:	ldrb	r0, [r8, #13]
   1755c:	mov	r7, lr
   17560:	orr	r9, r9, r0, lsl #16
   17564:	ldrb	r0, [r8, #12]
   17568:	mov	r3, r7
   1756c:	orr	r9, r9, r0, lsl #24
   17570:	ldrb	r0, [r8, #11]
   17574:	orr	r6, r0, r3
   17578:	ldrb	r0, [r8, #10]
   1757c:	orr	r2, r6, r0, lsl #8
   17580:	ldrb	r0, [r8, #9]
   17584:	orr	r5, r2, r0, lsl #16
   17588:	ldrb	r2, [r1]
   1758c:	movw	r0, #25205	; 0x6275
   17590:	movw	r3, #26220	; 0x666c
   17594:	ldr	r6, [sp, #36]	; 0x24
   17598:	movt	r0, #24948	; 0x6174
   1759c:	movt	r3, #25956	; 0x6564
   175a0:	eor	r0, r9, r0
   175a4:	orr	r2, r5, r2, lsl #24
   175a8:	eor	r2, r2, r3
   175ac:	orrs	r0, r0, r2
   175b0:	bne	17adc <main@@Base+0x1c40>
   175b4:	add	r7, r8, #16
   175b8:	mov	r1, #8
   175bc:	sub	r0, r6, r7
   175c0:	cmp	r0, #8
   175c4:	movcc	r1, r0
   175c8:	and	r1, r1, #15
   175cc:	sub	r2, r1, #1
   175d0:	cmp	r2, #7
   175d4:	bhi	1e9b4 <main@@Base+0x8b18>
   175d8:	add	r3, pc, #8
   175dc:	mov	r1, #0
   175e0:	ldr	r2, [r3, r2, lsl #2]
   175e4:	add	pc, r3, r2
   175e8:	andeq	r0, r0, r4, lsr r0
   175ec:	andeq	r0, r0, ip, lsr #32
   175f0:	andeq	r0, r0, r4, lsr #32
   175f4:	andeq	r0, r0, r0, lsr #32
   175f8:	andeq	r0, r0, r0, lsr #32
   175fc:	andeq	r0, r0, r0, lsr #32
   17600:	andeq	r0, r0, r0, lsr #32
   17604:	andeq	r0, r0, r0, lsr #32
   17608:	ldrb	r1, [r8, #19]
   1760c:	ldrb	r2, [r8, #18]
   17610:	orr	r1, r1, r2, lsl #8
   17614:	ldrb	r2, [r8, #17]
   17618:	orr	r1, r1, r2, lsl #16
   1761c:	ldrb	r2, [r7]
   17620:	orr	r1, r1, r2, lsl #24
   17624:	movw	r2, #25970	; 0x6572
   17628:	movt	r2, #26214	; 0x6666
   1762c:	teq	r1, r2
   17630:	bne	1e9b4 <main@@Base+0x8b18>
   17634:	cmp	r0, #5
   17638:	blt	1e9b4 <main@@Base+0x8b18>
   1763c:	ldrb	r0, [r8, #20]
   17640:	cmp	r0, #34	; 0x22
   17644:	bne	1e9b4 <main@@Base+0x8b18>
   17648:	add	r1, r8, #21
   1764c:	sub	r0, r6, r1
   17650:	cmp	r0, #2
   17654:	blt	1b128 <main@@Base+0x528c>
   17658:	ldrb	r0, [r1]
   1765c:	cmp	r0, #32
   17660:	bls	1b118 <main@@Base+0x527c>
   17664:	mov	r8, r1
   17668:	cmp	r8, r6
   1766c:	bne	1b140 <main@@Base+0x52a4>
   17670:	b	1b180 <main@@Base+0x52e4>
   17674:	movw	r0, #27749	; 0x6c65
   17678:	movw	r3, #26228	; 0x6674
   1767c:	ldr	r6, [sp, #36]	; 0x24
   17680:	ldr	sl, [sp, #32]
   17684:	movt	r0, #24930	; 0x6162
   17688:	movt	r3, #31087	; 0x796f
   1768c:	eor	r0, r1, r0
   17690:	eor	r3, r2, r3
   17694:	orrs	r0, r0, r3
   17698:	beq	17c4c <main@@Base+0x1db0>
   1769c:	movw	r0, #26990	; 0x696e
   176a0:	movt	r0, #29810	; 0x7472
   176a4:	eor	r0, r1, r0
   176a8:	movw	r1, #26227	; 0x6673
   176ac:	movt	r1, #31087	; 0x796f
   176b0:	eor	r1, r2, r1
   176b4:	orrs	r0, r0, r1
   176b8:	bne	1873c <main@@Base+0x28a0>
   176bc:	add	r7, r8, #16
   176c0:	mov	r1, #8
   176c4:	sub	r0, r6, r7
   176c8:	cmp	r0, #8
   176cc:	movcc	r1, r0
   176d0:	and	r2, r1, #15
   176d4:	sub	r1, r2, #2
   176d8:	cmp	r1, #7
   176dc:	bcs	17f04 <main@@Base+0x2068>
   176e0:	ldrb	r1, [r8, #17]
   176e4:	lsl	r2, r1, #16
   176e8:	mov	r1, #0
   176ec:	ldrb	r3, [r7]
   176f0:	orr	r2, r2, r3, lsl #24
   176f4:	movw	r3, #0
   176f8:	movt	r3, #26418	; 0x6732
   176fc:	eor	r3, r2, r3
   17700:	orrs	r1, r1, r3
   17704:	bne	17dec <main@@Base+0x1f50>
   17708:	cmp	r0, #3
   1770c:	blt	1e9b4 <main@@Base+0x8b18>
   17710:	ldrb	r0, [r8, #18]
   17714:	cmp	r0, #34	; 0x22
   17718:	bne	1e9b4 <main@@Base+0x8b18>
   1771c:	add	r1, r8, #19
   17720:	sub	r0, r6, r1
   17724:	cmp	r0, #2
   17728:	blt	19050 <main@@Base+0x31b4>
   1772c:	ldrb	r0, [r1]
   17730:	cmp	r0, #32
   17734:	bls	19040 <main@@Base+0x31a4>
   17738:	mov	r8, r1
   1773c:	cmp	r8, r6
   17740:	bne	19068 <main@@Base+0x31cc>
   17744:	b	190a0 <main@@Base+0x3204>
   17748:	ldr	sl, [sp, #32]
   1774c:	cmp	r9, #6
   17750:	mov	r7, r8
   17754:	blt	18a44 <main@@Base+0x2ba8>
   17758:	ldrb	r0, [r8, #5]
   1775c:	mov	r7, r8
   17760:	cmp	r0, #34	; 0x22
   17764:	bne	18a44 <main@@Base+0x2ba8>
   17768:	add	r1, r8, #6
   1776c:	sub	r0, r6, r1
   17770:	cmp	r0, #2
   17774:	blt	180a0 <main@@Base+0x2204>
   17778:	ldrb	r0, [r1]
   1777c:	cmp	r0, #32
   17780:	bls	1808c <main@@Base+0x21f0>
   17784:	mov	r7, r1
   17788:	cmp	r7, r6
   1778c:	bne	180b8 <main@@Base+0x221c>
   17790:	b	180f0 <main@@Base+0x2254>
   17794:	ldr	sl, [sp, #32]
   17798:	movw	r1, #29440	; 0x7300
   1779c:	bic	r0, r0, #255	; 0xff
   177a0:	movt	r1, #28783	; 0x706f
   177a4:	teq	r0, r1
   177a8:	bne	19434 <main@@Base+0x3598>
   177ac:	cmp	r9, #4
   177b0:	mov	r9, r8
   177b4:	blt	19cc4 <main@@Base+0x3e28>
   177b8:	ldrb	r0, [r8, #3]
   177bc:	mov	r9, r8
   177c0:	cmp	r0, #34	; 0x22
   177c4:	bne	19cc4 <main@@Base+0x3e28>
   177c8:	add	r1, r8, #4
   177cc:	sub	r0, r6, r1
   177d0:	cmp	r0, #2
   177d4:	blt	187f0 <main@@Base+0x2954>
   177d8:	ldrb	r0, [r1]
   177dc:	cmp	r0, #32
   177e0:	bls	187dc <main@@Base+0x2940>
   177e4:	mov	r9, r1
   177e8:	cmp	r9, r6
   177ec:	bne	18808 <main@@Base+0x296c>
   177f0:	b	18840 <main@@Base+0x29a4>
   177f4:	eor	r1, sl, r3
   177f8:	eor	r2, r0, r2
   177fc:	orrs	r1, r1, r2
   17800:	bne	17cc0 <main@@Base+0x1e24>
   17804:	add	r7, r8, #8
   17808:	mov	r1, #8
   1780c:	mov	r2, #-268435456	; 0xf0000000
   17810:	ldr	sl, [sp, #32]
   17814:	sub	r0, r6, r7
   17818:	cmp	r0, #8
   1781c:	movcc	r1, r0
   17820:	add	r1, r2, r1, lsl #28
   17824:	asr	r1, r1, #28
   17828:	cmp	r1, #0
   1782c:	blt	1e9b4 <main@@Base+0x8b18>
   17830:	ldrb	r1, [r7]
   17834:	cmp	r1, #121	; 0x79
   17838:	bne	1e9b4 <main@@Base+0x8b18>
   1783c:	cmp	r0, #2
   17840:	blt	1e9b4 <main@@Base+0x8b18>
   17844:	ldrb	r0, [r8, #9]
   17848:	cmp	r0, #34	; 0x22
   1784c:	bne	1e9b4 <main@@Base+0x8b18>
   17850:	add	r1, r8, #10
   17854:	sub	r0, r6, r1
   17858:	cmp	r0, #2
   1785c:	blt	19ac0 <main@@Base+0x3c24>
   17860:	ldrb	r0, [r1]
   17864:	cmp	r0, #32
   17868:	bls	19ab0 <main@@Base+0x3c14>
   1786c:	mov	r8, r1
   17870:	cmp	r8, r6
   17874:	bne	19ad8 <main@@Base+0x3c3c>
   17878:	b	19b10 <main@@Base+0x3c74>
   1787c:	movw	r3, #0
   17880:	mov	r2, sl
   17884:	movt	r3, #26163	; 0x6633
   17888:	bfc	r2, #0, #16
   1788c:	subs	r3, r3, #65536	; 0x10000
   17890:	eor	r2, r2, r3
   17894:	sbc	r3, r5, #0
   17898:	eor	r0, r0, r3
   1789c:	orrs	r0, r2, r0
   178a0:	bne	17d1c <main@@Base+0x1e80>
   178a4:	ldr	sl, [sp, #32]
   178a8:	cmp	r9, #7
   178ac:	mov	r7, r8
   178b0:	blt	1a968 <main@@Base+0x4acc>
   178b4:	ldrb	r0, [r8, #6]
   178b8:	mov	r7, r8
   178bc:	cmp	r0, #34	; 0x22
   178c0:	bne	1a968 <main@@Base+0x4acc>
   178c4:	add	r1, r8, #7
   178c8:	sub	r0, r6, r1
   178cc:	cmp	r0, #2
   178d0:	blt	1886c <main@@Base+0x29d0>
   178d4:	ldrb	r0, [r1]
   178d8:	cmp	r0, #32
   178dc:	bls	18858 <main@@Base+0x29bc>
   178e0:	mov	r7, r1
   178e4:	cmp	r7, r6
   178e8:	bne	18884 <main@@Base+0x29e8>
   178ec:	b	188bc <main@@Base+0x2a20>
   178f0:	eor	r1, sl, r7
   178f4:	eor	r0, r0, r3
   178f8:	orrs	r0, r1, r0
   178fc:	bne	19430 <main@@Base+0x3594>
   17900:	add	r9, r8, #8
   17904:	mov	r0, #8
   17908:	sub	lr, r6, r9
   1790c:	cmp	lr, #8
   17910:	movcc	r0, lr
   17914:	and	r0, r0, #15
   17918:	sub	r0, r0, #1
   1791c:	cmp	r0, #7
   17920:	bhi	18738 <main@@Base+0x289c>
   17924:	add	r4, pc, #36	; 0x24
   17928:	mov	r1, #0
   1792c:	mov	ip, #0
   17930:	mov	sl, #0
   17934:	mov	r6, #0
   17938:	mov	r3, #0
   1793c:	mov	r5, #0
   17940:	mov	r2, #0
   17944:	ldr	r7, [r4, r0, lsl #2]
   17948:	mov	r0, #0
   1794c:	add	pc, r4, r7
   17950:	andeq	r0, r0, r4, rrx
   17954:	andeq	r0, r0, ip, asr r0
   17958:	andeq	r0, r0, r4, asr r0
   1795c:	andeq	r0, r0, ip, asr #32
   17960:	andeq	r0, r0, r0, asr #32
   17964:	andeq	r0, r0, r4, lsr r0
   17968:	andeq	r0, r0, r4, lsr #32
   1796c:	andeq	r0, r0, r0, lsr #32
   17970:	ldrb	ip, [r8, #15]
   17974:	ldrb	r0, [r8, #14]
   17978:	mov	sl, r1
   1797c:	orr	r0, ip, r0, lsl #8
   17980:	mov	r1, r0
   17984:	ldrb	r0, [r8, #13]
   17988:	mov	r6, sl
   1798c:	orr	r1, r1, r0, lsl #16
   17990:	ldrb	r0, [r8, #12]
   17994:	mov	r3, r6
   17998:	orr	r1, r1, r0, lsl #24
   1799c:	ldrb	r0, [r8, #11]
   179a0:	orr	r5, r0, r3
   179a4:	ldrb	r0, [r8, #10]
   179a8:	orr	r2, r5, r0, lsl #8
   179ac:	ldrb	r0, [r8, #9]
   179b0:	orr	r0, r2, r0, lsl #16
   179b4:	ldrb	r3, [r9]
   179b8:	movw	r2, #27749	; 0x6c65
   179bc:	movt	r2, #30050	; 0x7562
   179c0:	eor	r2, r1, r2
   179c4:	orr	r0, r0, r3, lsl #24
   179c8:	movw	r3, #25711	; 0x646f
   179cc:	movt	r3, #26207	; 0x665f
   179d0:	eor	r3, r0, r3
   179d4:	orrs	r2, r2, r3
   179d8:	bne	17e38 <main@@Base+0x1f9c>
   179dc:	ldr	r6, [sp, #36]	; 0x24
   179e0:	add	r7, r8, #16
   179e4:	mov	r1, #8
   179e8:	mov	r2, #-268435456	; 0xf0000000
   179ec:	ldr	sl, [sp, #32]
   179f0:	sub	r0, r6, r7
   179f4:	cmp	r0, #8
   179f8:	movcc	r1, r0
   179fc:	add	r1, r2, r1, lsl #28
   17a00:	asr	r1, r1, #28
   17a04:	cmp	r1, #0
   17a08:	blt	1e9b4 <main@@Base+0x8b18>
   17a0c:	ldrb	r1, [r7]
   17a10:	cmp	r1, #115	; 0x73
   17a14:	bne	1e9b4 <main@@Base+0x8b18>
   17a18:	cmp	r0, #2
   17a1c:	blt	1e9b4 <main@@Base+0x8b18>
   17a20:	ldrb	r0, [r8, #17]
   17a24:	cmp	r0, #34	; 0x22
   17a28:	bne	1e9b4 <main@@Base+0x8b18>
   17a2c:	add	r1, r8, #18
   17a30:	sub	r0, r6, r1
   17a34:	cmp	r0, #2
   17a38:	blt	1b710 <main@@Base+0x5874>
   17a3c:	ldrb	r0, [r1]
   17a40:	cmp	r0, #32
   17a44:	bls	1b700 <main@@Base+0x5864>
   17a48:	mov	r8, r1
   17a4c:	cmp	r8, r6
   17a50:	bne	1b728 <main@@Base+0x588c>
   17a54:	b	1b768 <main@@Base+0x58cc>
   17a58:	movw	r0, #30256	; 0x7630
   17a5c:	ldr	r6, [sp, #36]	; 0x24
   17a60:	movt	r0, #26222	; 0x666e
   17a64:	subs	r0, r0, r1
   17a68:	movw	r0, #12895	; 0x325f
   17a6c:	movt	r0, #30003	; 0x7533
   17a70:	sbcs	r0, r0, r2
   17a74:	eor	r0, r1, r3
   17a78:	bcc	17d78 <main@@Base+0x1edc>
   17a7c:	movw	r1, #13407	; 0x345f
   17a80:	ldr	sl, [sp, #32]
   17a84:	movt	r1, #29494	; 0x7336
   17a88:	eor	r1, r2, r1
   17a8c:	orrs	r0, r0, r1
   17a90:	bne	1873c <main@@Base+0x28a0>
   17a94:	cmp	ip, #9
   17a98:	blt	19290 <main@@Base+0x33f4>
   17a9c:	ldrb	r0, [r8, #16]
   17aa0:	cmp	r0, #34	; 0x22
   17aa4:	bne	19290 <main@@Base+0x33f4>
   17aa8:	ldr	r4, [sp, #36]	; 0x24
   17aac:	add	r1, r8, #17
   17ab0:	sub	r0, r4, r1
   17ab4:	cmp	r0, #2
   17ab8:	blt	19240 <main@@Base+0x33a4>
   17abc:	ldrb	r0, [r1]
   17ac0:	cmp	r0, #32
   17ac4:	bls	19228 <main@@Base+0x338c>
   17ac8:	ldr	r4, [sp, #36]	; 0x24
   17acc:	mov	r6, r1
   17ad0:	cmp	r6, r4
   17ad4:	bne	19258 <main@@Base+0x33bc>
   17ad8:	b	19308 <main@@Base+0x346c>
   17adc:	mov	r0, sl
   17ae0:	b	1e9bc <main@@Base+0x8b20>
   17ae4:	ldr	sl, [sp, #32]
   17ae8:	cmp	r9, #9
   17aec:	mov	r7, r8
   17af0:	blt	196e8 <main@@Base+0x384c>
   17af4:	ldrb	r0, [r8, #8]
   17af8:	mov	r7, r8
   17afc:	cmp	r0, #34	; 0x22
   17b00:	bne	196e8 <main@@Base+0x384c>
   17b04:	add	r1, r8, #9
   17b08:	sub	r0, r6, r1
   17b0c:	cmp	r0, #2
   17b10:	blt	1835c <main@@Base+0x24c0>
   17b14:	ldrb	r0, [r1]
   17b18:	cmp	r0, #32
   17b1c:	bls	18348 <main@@Base+0x24ac>
   17b20:	mov	r7, r1
   17b24:	cmp	r7, r6
   17b28:	bne	18374 <main@@Base+0x24d8>
   17b2c:	b	183ac <main@@Base+0x2510>
   17b30:	add	r9, r8, #16
   17b34:	mov	r0, #8
   17b38:	ldr	sl, [sp, #32]
   17b3c:	sub	ip, r6, r9
   17b40:	cmp	ip, #8
   17b44:	movcc	r0, ip
   17b48:	and	r0, r0, #15
   17b4c:	sub	r0, r0, #1
   17b50:	cmp	r0, #7
   17b54:	bhi	1873c <main@@Base+0x28a0>
   17b58:	add	r4, pc, #32
   17b5c:	mov	r1, #0
   17b60:	mov	lr, #0
   17b64:	mov	r5, #0
   17b68:	mov	r3, #0
   17b6c:	mov	r6, #0
   17b70:	mov	r7, #0
   17b74:	ldr	r2, [r4, r0, lsl #2]
   17b78:	mov	r0, #0
   17b7c:	add	pc, r4, r2
   17b80:	andeq	r0, r0, ip, asr r0
   17b84:	andeq	r0, r0, r4, asr r0
   17b88:	andeq	r0, r0, ip, asr #32
   17b8c:	andeq	r0, r0, r4, asr #32
   17b90:	andeq	r0, r0, r8, lsr r0
   17b94:	andeq	r0, r0, r8, lsr #32
   17b98:	andeq	r0, r0, r0, lsr #32
   17b9c:	andeq	r0, r0, r0, lsr #32
   17ba0:	ldrb	r0, [r8, #22]
   17ba4:	lsl	lr, r0, #8
   17ba8:	ldrb	r0, [r8, #21]
   17bac:	mov	r5, r1
   17bb0:	orr	r0, lr, r0, lsl #16
   17bb4:	mov	r1, r0
   17bb8:	ldrb	r0, [r8, #20]
   17bbc:	mov	r3, r5
   17bc0:	orr	r1, r1, r0, lsl #24
   17bc4:	ldrb	r0, [r8, #19]
   17bc8:	orr	r6, r0, r3
   17bcc:	ldrb	r0, [r8, #18]
   17bd0:	orr	r7, r6, r0, lsl #8
   17bd4:	ldrb	r0, [r8, #17]
   17bd8:	orr	r0, r7, r0, lsl #16
   17bdc:	movw	r2, #29696	; 0x7400
   17be0:	bic	r1, r1, #255	; 0xff
   17be4:	ldr	r6, [sp, #36]	; 0x24
   17be8:	movt	r2, #30051	; 0x7563
   17bec:	eor	r1, r1, r2
   17bf0:	ldrb	r2, [r9]
   17bf4:	orr	r0, r0, r2, lsl #24
   17bf8:	movw	r2, #29810	; 0x7472
   17bfc:	movt	r2, #25715	; 0x6473
   17c00:	eor	r0, r0, r2
   17c04:	orrs	r0, r1, r0
   17c08:	bne	1873c <main@@Base+0x28a0>
   17c0c:	cmp	ip, #8
   17c10:	blt	1873c <main@@Base+0x28a0>
   17c14:	ldrb	r0, [r8, #23]
   17c18:	cmp	r0, #34	; 0x22
   17c1c:	bne	1873c <main@@Base+0x28a0>
   17c20:	add	r1, r8, #24
   17c24:	sub	r0, r6, r1
   17c28:	cmp	r0, #2
   17c2c:	blt	190c8 <main@@Base+0x322c>
   17c30:	ldrb	r0, [r1]
   17c34:	cmp	r0, #32
   17c38:	bls	190b8 <main@@Base+0x321c>
   17c3c:	mov	r8, r1
   17c40:	cmp	r8, r6
   17c44:	bne	190e0 <main@@Base+0x3244>
   17c48:	b	19118 <main@@Base+0x327c>
   17c4c:	add	r7, r8, #16
   17c50:	mov	r1, #8
   17c54:	mov	r2, #-268435456	; 0xf0000000
   17c58:	sub	r0, r6, r7
   17c5c:	cmp	r0, #8
   17c60:	movcc	r1, r0
   17c64:	add	r1, r2, r1, lsl #28
   17c68:	asr	r1, r1, #28
   17c6c:	cmp	r1, #0
   17c70:	blt	1e9b4 <main@@Base+0x8b18>
   17c74:	ldrb	r1, [r7]
   17c78:	cmp	r1, #115	; 0x73
   17c7c:	bne	1e9b4 <main@@Base+0x8b18>
   17c80:	cmp	r0, #2
   17c84:	blt	1e9b4 <main@@Base+0x8b18>
   17c88:	ldrb	r0, [r8, #17]
   17c8c:	cmp	r0, #34	; 0x22
   17c90:	bne	1e9b4 <main@@Base+0x8b18>
   17c94:	add	r1, r8, #18
   17c98:	sub	r0, r6, r1
   17c9c:	cmp	r0, #2
   17ca0:	blt	19918 <main@@Base+0x3a7c>
   17ca4:	ldrb	r0, [r1]
   17ca8:	cmp	r0, #32
   17cac:	bls	19908 <main@@Base+0x3a6c>
   17cb0:	mov	r8, r1
   17cb4:	cmp	r8, r6
   17cb8:	bne	19930 <main@@Base+0x3a94>
   17cbc:	b	19968 <main@@Base+0x3acc>
   17cc0:	ldr	sl, [sp, #32]
   17cc4:	movw	r1, #28257	; 0x6e61
   17cc8:	movt	r1, #28001	; 0x6d61
   17ccc:	teq	r0, r1
   17cd0:	bne	19434 <main@@Base+0x3598>
   17cd4:	cmp	r9, #5
   17cd8:	mov	r7, r8
   17cdc:	blt	1b4f8 <main@@Base+0x565c>
   17ce0:	ldrb	r0, [r8, #4]
   17ce4:	mov	r7, r8
   17ce8:	cmp	r0, #34	; 0x22
   17cec:	bne	1b4f8 <main@@Base+0x565c>
   17cf0:	add	r1, r8, #5
   17cf4:	sub	r0, r6, r1
   17cf8:	cmp	r0, #2
   17cfc:	blt	19144 <main@@Base+0x32a8>
   17d00:	ldrb	r0, [r1]
   17d04:	cmp	r0, #32
   17d08:	bls	19130 <main@@Base+0x3294>
   17d0c:	mov	r7, r1
   17d10:	cmp	r7, r6
   17d14:	bne	1915c <main@@Base+0x32c0>
   17d18:	b	19194 <main@@Base+0x32f8>
   17d1c:	and	r0, sl, #-16777216	; 0xff000000
   17d20:	eor	r0, r0, #1711276032	; 0x66000000
   17d24:	orrs	r0, r0, r1
   17d28:	bne	19430 <main@@Base+0x3594>
   17d2c:	ldr	sl, [sp, #32]
   17d30:	cmp	r9, #6
   17d34:	mov	r7, r8
   17d38:	blt	1b674 <main@@Base+0x57d8>
   17d3c:	ldrb	r0, [r8, #5]
   17d40:	mov	r7, r8
   17d44:	cmp	r0, #34	; 0x22
   17d48:	bne	1b674 <main@@Base+0x57d8>
   17d4c:	add	r1, r8, #6
   17d50:	sub	r0, r6, r1
   17d54:	cmp	r0, #2
   17d58:	blt	191c0 <main@@Base+0x3324>
   17d5c:	ldrb	r0, [r1]
   17d60:	cmp	r0, #32
   17d64:	bls	191ac <main@@Base+0x3310>
   17d68:	mov	r7, r1
   17d6c:	cmp	r7, r6
   17d70:	bne	191d8 <main@@Base+0x333c>
   17d74:	b	19210 <main@@Base+0x3374>
   17d78:	movw	r1, #13407	; 0x345f
   17d7c:	ldr	sl, [sp, #32]
   17d80:	movt	r1, #30006	; 0x7536
   17d84:	eor	r1, r2, r1
   17d88:	orrs	r1, r0, r1
   17d8c:	beq	17ebc <main@@Base+0x2020>
   17d90:	movw	r1, #12895	; 0x325f
   17d94:	movt	r1, #30003	; 0x7533
   17d98:	eor	r1, r2, r1
   17d9c:	orrs	r0, r0, r1
   17da0:	bne	1873c <main@@Base+0x28a0>
   17da4:	cmp	ip, #9
   17da8:	blt	1aa5c <main@@Base+0x4bc0>
   17dac:	ldrb	r0, [r8, #16]
   17db0:	cmp	r0, #34	; 0x22
   17db4:	bne	1aa5c <main@@Base+0x4bc0>
   17db8:	ldr	r4, [sp, #36]	; 0x24
   17dbc:	add	r1, r8, #17
   17dc0:	sub	r0, r4, r1
   17dc4:	cmp	r0, #2
   17dc8:	blt	1aa08 <main@@Base+0x4b6c>
   17dcc:	ldrb	r0, [r1]
   17dd0:	cmp	r0, #32
   17dd4:	bls	1a9f0 <main@@Base+0x4b54>
   17dd8:	ldr	r4, [sp, #36]	; 0x24
   17ddc:	mov	r6, r1
   17de0:	cmp	r6, r4
   17de4:	bne	1aa20 <main@@Base+0x4b84>
   17de8:	b	1aadc <main@@Base+0x4c40>
   17dec:	and	r1, r2, #-16777216	; 0xff000000
   17df0:	teq	r1, #1728053248	; 0x67000000
   17df4:	bne	1e9b4 <main@@Base+0x8b18>
   17df8:	cmp	r0, #2
   17dfc:	blt	1e9b4 <main@@Base+0x8b18>
   17e00:	ldrb	r0, [r8, #17]
   17e04:	cmp	r0, #34	; 0x22
   17e08:	bne	1e9b4 <main@@Base+0x8b18>
   17e0c:	add	r1, r8, #18
   17e10:	sub	r0, r6, r1
   17e14:	cmp	r0, #2
   17e18:	blt	1ad18 <main@@Base+0x4e7c>
   17e1c:	ldrb	r0, [r1]
   17e20:	cmp	r0, #32
   17e24:	bls	1ad08 <main@@Base+0x4e6c>
   17e28:	mov	r8, r1
   17e2c:	cmp	r8, r6
   17e30:	bne	1ad30 <main@@Base+0x4e94>
   17e34:	b	1ad70 <main@@Base+0x4ed4>
   17e38:	movw	r2, #24428	; 0x5f6c
   17e3c:	lsr	r1, r1, #8
   17e40:	ldr	r6, [sp, #36]	; 0x24
   17e44:	movt	r2, #102	; 0x66
   17e48:	eor	r2, r2, r0, lsr #8
   17e4c:	orr	r0, r1, r0, lsl #24
   17e50:	movw	r1, #26483	; 0x6773
   17e54:	movt	r1, #28526	; 0x6f6e
   17e58:	eor	r0, r0, r1
   17e5c:	orrs	r0, r0, r2
   17e60:	bne	18738 <main@@Base+0x289c>
   17e64:	ldr	sl, [sp, #32]
   17e68:	cmp	lr, #8
   17e6c:	blt	1873c <main@@Base+0x28a0>
   17e70:	ldrb	r0, [r8, #15]
   17e74:	cmp	r0, #34	; 0x22
   17e78:	bne	1873c <main@@Base+0x28a0>
   17e7c:	add	r1, r8, #16
   17e80:	sub	r0, r6, r1
   17e84:	cmp	r0, #2
   17e88:	blt	1b0a8 <main@@Base+0x520c>
   17e8c:	ldrb	r0, [r1]
   17e90:	cmp	r0, #32
   17e94:	bls	1b098 <main@@Base+0x51fc>
   17e98:	mov	r8, r1
   17e9c:	cmp	r8, r6
   17ea0:	bne	1b0c0 <main@@Base+0x5224>
   17ea4:	b	1b100 <main@@Base+0x5264>
   17ea8:	cmp	r2, #1
   17eac:	mov	r1, #0
   17eb0:	mov	r2, #0
   17eb4:	beq	16f5c <main@@Base+0x10c0>
   17eb8:	b	1e9b4 <main@@Base+0x8b18>
   17ebc:	cmp	ip, #9
   17ec0:	blt	1ab60 <main@@Base+0x4cc4>
   17ec4:	ldrb	r0, [r8, #16]
   17ec8:	cmp	r0, #34	; 0x22
   17ecc:	bne	1ab60 <main@@Base+0x4cc4>
   17ed0:	ldr	r4, [sp, #36]	; 0x24
   17ed4:	add	r1, r8, #17
   17ed8:	sub	r0, r4, r1
   17edc:	cmp	r0, #2
   17ee0:	blt	1ab0c <main@@Base+0x4c70>
   17ee4:	ldrb	r0, [r1]
   17ee8:	cmp	r0, #32
   17eec:	bls	1aaf4 <main@@Base+0x4c58>
   17ef0:	ldr	r4, [sp, #36]	; 0x24
   17ef4:	mov	r6, r1
   17ef8:	cmp	r6, r4
   17efc:	bne	1ab24 <main@@Base+0x4c88>
   17f00:	b	1abe0 <main@@Base+0x4d44>
   17f04:	cmp	r2, #1
   17f08:	mov	r1, #0
   17f0c:	mov	r2, #0
   17f10:	beq	176ec <main@@Base+0x1850>
   17f14:	b	1e9b4 <main@@Base+0x8b18>
   17f18:	bne	17f2c <main@@Base+0x2090>
   17f1c:	mov	r7, r8
   17f20:	ldrb	r0, [r7, #8]!
   17f24:	cmp	r0, #32
   17f28:	bhi	17f3c <main@@Base+0x20a0>
   17f2c:	mov	r0, sl
   17f30:	mov	r2, r6
   17f34:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   17f38:	mov	r7, r0
   17f3c:	cmp	r7, r6
   17f40:	beq	17f7c <main@@Base+0x20e0>
   17f44:	ldrb	r0, [r7]
   17f48:	cmp	r0, #58	; 0x3a
   17f4c:	bne	17f7c <main@@Base+0x20e0>
   17f50:	add	r1, r7, #1
   17f54:	sub	r0, r6, r1
   17f58:	cmp	r0, #2
   17f5c:	blt	183d4 <main@@Base+0x2538>
   17f60:	ldrb	r0, [r1]
   17f64:	cmp	r0, #32
   17f68:	bls	183c4 <main@@Base+0x2528>
   17f6c:	mov	r7, r1
   17f70:	cmp	r8, r7
   17f74:	bne	183ec <main@@Base+0x2550>
   17f78:	b	19434 <main@@Base+0x3598>
   17f7c:	mov	r0, sl
   17f80:	mov	r1, r7
   17f84:	mov	r2, r6
   17f88:	mov	r3, #4
   17f8c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   17f90:	b	183e0 <main@@Base+0x2544>
   17f94:	bne	17fa8 <main@@Base+0x210c>
   17f98:	mov	r9, r8
   17f9c:	ldrb	r0, [r9, #7]!
   17fa0:	cmp	r0, #32
   17fa4:	bhi	17fb8 <main@@Base+0x211c>
   17fa8:	ldr	r0, [sp, #32]
   17fac:	mov	r2, r6
   17fb0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   17fb4:	mov	r9, r0
   17fb8:	cmp	r9, r6
   17fbc:	beq	17ff8 <main@@Base+0x215c>
   17fc0:	ldrb	r0, [r9]
   17fc4:	cmp	r0, #58	; 0x3a
   17fc8:	bne	17ff8 <main@@Base+0x215c>
   17fcc:	add	r1, r9, #1
   17fd0:	sub	r0, r6, r1
   17fd4:	cmp	r0, #2
   17fd8:	blt	18498 <main@@Base+0x25fc>
   17fdc:	ldrb	r0, [r1]
   17fe0:	cmp	r0, #32
   17fe4:	bls	18488 <main@@Base+0x25ec>
   17fe8:	mov	r9, r1
   17fec:	cmp	r8, r9
   17ff0:	bne	184b0 <main@@Base+0x2614>
   17ff4:	b	193a0 <main@@Base+0x3504>
   17ff8:	ldr	r0, [sp, #32]
   17ffc:	mov	r1, r9
   18000:	mov	r2, r6
   18004:	mov	r3, #4
   18008:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1800c:	b	184a4 <main@@Base+0x2608>
   18010:	bne	18024 <main@@Base+0x2188>
   18014:	mov	r1, r8
   18018:	ldrb	r0, [r1, #7]!
   1801c:	cmp	r0, #32
   18020:	bhi	18038 <main@@Base+0x219c>
   18024:	mov	r1, r2
   18028:	mov	r0, sl
   1802c:	mov	r2, r6
   18030:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18034:	mov	r1, r0
   18038:	cmp	r1, r6
   1803c:	beq	18078 <main@@Base+0x21dc>
   18040:	ldrb	r0, [r1]
   18044:	cmp	r0, #58	; 0x3a
   18048:	bne	18078 <main@@Base+0x21dc>
   1804c:	add	r2, r1, #1
   18050:	sub	r0, r6, r2
   18054:	cmp	r0, #2
   18058:	blt	189dc <main@@Base+0x2b40>
   1805c:	ldrb	r0, [r2]
   18060:	cmp	r0, #32
   18064:	bls	189cc <main@@Base+0x2b30>
   18068:	mov	r1, r2
   1806c:	cmp	r8, r1
   18070:	bne	189f8 <main@@Base+0x2b5c>
   18074:	b	19434 <main@@Base+0x3598>
   18078:	mov	r0, sl
   1807c:	mov	r2, r6
   18080:	mov	r3, #4
   18084:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18088:	b	189ec <main@@Base+0x2b50>
   1808c:	bne	180a0 <main@@Base+0x2204>
   18090:	mov	r7, r8
   18094:	ldrb	r0, [r7, #7]!
   18098:	cmp	r0, #32
   1809c:	bhi	180b0 <main@@Base+0x2214>
   180a0:	mov	r0, sl
   180a4:	mov	r2, r6
   180a8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   180ac:	mov	r7, r0
   180b0:	cmp	r7, r6
   180b4:	beq	180f0 <main@@Base+0x2254>
   180b8:	ldrb	r0, [r7]
   180bc:	cmp	r0, #58	; 0x3a
   180c0:	bne	180f0 <main@@Base+0x2254>
   180c4:	add	r1, r7, #1
   180c8:	sub	r0, r6, r1
   180cc:	cmp	r0, #2
   180d0:	blt	18a34 <main@@Base+0x2b98>
   180d4:	ldrb	r0, [r1]
   180d8:	cmp	r0, #32
   180dc:	bls	18a24 <main@@Base+0x2b88>
   180e0:	mov	r7, r1
   180e4:	cmp	r8, r7
   180e8:	bne	18a4c <main@@Base+0x2bb0>
   180ec:	b	19434 <main@@Base+0x3598>
   180f0:	mov	r0, sl
   180f4:	mov	r1, r7
   180f8:	mov	r2, r6
   180fc:	mov	r3, #4
   18100:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18104:	b	18a40 <main@@Base+0x2ba4>
   18108:	bne	1811c <main@@Base+0x2280>
   1810c:	mov	r1, r8
   18110:	ldrb	r0, [r1, #6]!
   18114:	cmp	r0, #32
   18118:	bhi	18130 <main@@Base+0x2294>
   1811c:	mov	r1, r2
   18120:	mov	r0, sl
   18124:	mov	r2, r6
   18128:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1812c:	mov	r1, r0
   18130:	cmp	r1, r6
   18134:	beq	18170 <main@@Base+0x22d4>
   18138:	ldrb	r0, [r1]
   1813c:	cmp	r0, #58	; 0x3a
   18140:	bne	18170 <main@@Base+0x22d4>
   18144:	add	r2, r1, #1
   18148:	sub	r0, r6, r2
   1814c:	cmp	r0, #2
   18150:	blt	18ba8 <main@@Base+0x2d0c>
   18154:	ldrb	r0, [r2]
   18158:	cmp	r0, #32
   1815c:	bls	18b98 <main@@Base+0x2cfc>
   18160:	mov	r1, r2
   18164:	cmp	r8, r1
   18168:	bne	18bc4 <main@@Base+0x2d28>
   1816c:	b	19434 <main@@Base+0x3598>
   18170:	mov	r0, sl
   18174:	mov	r2, r6
   18178:	mov	r3, #4
   1817c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18180:	b	18bb8 <main@@Base+0x2d1c>
   18184:	bne	18198 <main@@Base+0x22fc>
   18188:	mov	r9, r8
   1818c:	ldrb	r0, [r9, #6]!
   18190:	cmp	r0, #32
   18194:	bhi	181a8 <main@@Base+0x230c>
   18198:	mov	r0, sl
   1819c:	mov	r2, r6
   181a0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   181a4:	mov	r9, r0
   181a8:	cmp	r9, r6
   181ac:	beq	181e8 <main@@Base+0x234c>
   181b0:	ldrb	r0, [r9]
   181b4:	cmp	r0, #58	; 0x3a
   181b8:	bne	181e8 <main@@Base+0x234c>
   181bc:	add	r1, r9, #1
   181c0:	sub	r0, r6, r1
   181c4:	cmp	r0, #2
   181c8:	blt	18c00 <main@@Base+0x2d64>
   181cc:	ldrb	r0, [r1]
   181d0:	cmp	r0, #32
   181d4:	bls	18bf0 <main@@Base+0x2d54>
   181d8:	mov	r9, r1
   181dc:	cmp	r8, r9
   181e0:	bne	18c18 <main@@Base+0x2d7c>
   181e4:	b	19434 <main@@Base+0x3598>
   181e8:	mov	r0, sl
   181ec:	mov	r1, r9
   181f0:	mov	r2, r6
   181f4:	mov	r3, #4
   181f8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   181fc:	b	18c0c <main@@Base+0x2d70>
   18200:	bne	18214 <main@@Base+0x2378>
   18204:	mov	r1, r8
   18208:	ldrb	r0, [r1, #6]!
   1820c:	cmp	r0, #32
   18210:	bhi	18228 <main@@Base+0x238c>
   18214:	ldr	r0, [sp, #32]
   18218:	mov	r1, r2
   1821c:	mov	r2, r6
   18220:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18224:	mov	r1, r0
   18228:	cmp	r1, r6
   1822c:	beq	182b8 <main@@Base+0x241c>
   18230:	ldrb	r0, [r1]
   18234:	cmp	r0, #58	; 0x3a
   18238:	bne	182b8 <main@@Base+0x241c>
   1823c:	add	r2, r1, #1
   18240:	sub	r0, r6, r2
   18244:	cmp	r0, #2
   18248:	blt	18f54 <main@@Base+0x30b8>
   1824c:	ldrb	r0, [r2]
   18250:	cmp	r0, #32
   18254:	bls	18f44 <main@@Base+0x30a8>
   18258:	mov	r1, r2
   1825c:	cmp	r8, r1
   18260:	bne	18f70 <main@@Base+0x30d4>
   18264:	eor	r0, r5, #889192448	; 0x35000000
   18268:	orrs	r0, r0, r7
   1826c:	bne	193a0 <main@@Base+0x3504>
   18270:	cmp	r9, #6
   18274:	mov	r9, r8
   18278:	blt	19340 <main@@Base+0x34a4>
   1827c:	ldrb	r0, [r8, #5]
   18280:	mov	r9, r8
   18284:	cmp	r0, #34	; 0x22
   18288:	bne	19340 <main@@Base+0x34a4>
   1828c:	add	r1, r8, #6
   18290:	sub	r0, r6, r1
   18294:	cmp	r0, #2
   18298:	blt	182e0 <main@@Base+0x2444>
   1829c:	ldrb	r0, [r1]
   182a0:	cmp	r0, #32
   182a4:	bls	182cc <main@@Base+0x2430>
   182a8:	mov	r9, r1
   182ac:	cmp	r9, r6
   182b0:	bne	182f8 <main@@Base+0x245c>
   182b4:	b	18330 <main@@Base+0x2494>
   182b8:	ldr	r0, [sp, #32]
   182bc:	mov	r2, r6
   182c0:	mov	r3, #4
   182c4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   182c8:	b	18f64 <main@@Base+0x30c8>
   182cc:	bne	182e0 <main@@Base+0x2444>
   182d0:	mov	r9, r8
   182d4:	ldrb	r0, [r9, #7]!
   182d8:	cmp	r0, #32
   182dc:	bhi	182f0 <main@@Base+0x2454>
   182e0:	ldr	r0, [sp, #32]
   182e4:	mov	r2, r6
   182e8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   182ec:	mov	r9, r0
   182f0:	cmp	r9, r6
   182f4:	beq	18330 <main@@Base+0x2494>
   182f8:	ldrb	r0, [r9]
   182fc:	cmp	r0, #58	; 0x3a
   18300:	bne	18330 <main@@Base+0x2494>
   18304:	add	r1, r9, #1
   18308:	sub	r0, r6, r1
   1830c:	cmp	r0, #2
   18310:	blt	19330 <main@@Base+0x3494>
   18314:	ldrb	r0, [r1]
   18318:	cmp	r0, #32
   1831c:	bls	19320 <main@@Base+0x3484>
   18320:	mov	r9, r1
   18324:	cmp	r8, r9
   18328:	bne	19348 <main@@Base+0x34ac>
   1832c:	b	193a0 <main@@Base+0x3504>
   18330:	ldr	r0, [sp, #32]
   18334:	mov	r1, r9
   18338:	mov	r2, r6
   1833c:	mov	r3, #4
   18340:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18344:	b	1933c <main@@Base+0x34a0>
   18348:	bne	1835c <main@@Base+0x24c0>
   1834c:	mov	r7, r8
   18350:	ldrb	r0, [r7, #10]!
   18354:	cmp	r0, #32
   18358:	bhi	1836c <main@@Base+0x24d0>
   1835c:	mov	r0, sl
   18360:	mov	r2, r6
   18364:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18368:	mov	r7, r0
   1836c:	cmp	r7, r6
   18370:	beq	183ac <main@@Base+0x2510>
   18374:	ldrb	r0, [r7]
   18378:	cmp	r0, #58	; 0x3a
   1837c:	bne	183ac <main@@Base+0x2510>
   18380:	add	r1, r7, #1
   18384:	sub	r0, r6, r1
   18388:	cmp	r0, #2
   1838c:	blt	196d8 <main@@Base+0x383c>
   18390:	ldrb	r0, [r1]
   18394:	cmp	r0, #32
   18398:	bls	196c8 <main@@Base+0x382c>
   1839c:	mov	r7, r1
   183a0:	cmp	r8, r7
   183a4:	bne	196f0 <main@@Base+0x3854>
   183a8:	b	19434 <main@@Base+0x3598>
   183ac:	mov	r0, sl
   183b0:	mov	r1, r7
   183b4:	mov	r2, r6
   183b8:	mov	r3, #4
   183bc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   183c0:	b	196e4 <main@@Base+0x3848>
   183c4:	bne	183d4 <main@@Base+0x2538>
   183c8:	ldrb	r0, [r7, #2]!
   183cc:	cmp	r0, #32
   183d0:	bhi	183e4 <main@@Base+0x2548>
   183d4:	mov	r0, sl
   183d8:	mov	r2, r6
   183dc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   183e0:	mov	r7, r0
   183e4:	cmp	r8, r7
   183e8:	beq	19434 <main@@Base+0x3598>
   183ec:	mov	r0, #0
   183f0:	mov	r1, r7
   183f4:	mov	r2, r6
   183f8:	sub	r3, fp, #56	; 0x38
   183fc:	str	r0, [fp, #-56]	; 0xffffffc8
   18400:	mov	r0, sl
   18404:	bl	362a0 <flatcc_json_parser_float@@Base>
   18408:	mov	r9, r0
   1840c:	cmp	r7, r0
   18410:	bne	18444 <main@@Base+0x25a8>
   18414:	sub	r0, fp, #56	; 0x38
   18418:	mov	r1, r7
   1841c:	mov	r2, r6
   18420:	str	r0, [sp]
   18424:	mov	r0, sl
   18428:	ldr	r3, [pc, #4092]	; 1942c <main@@Base+0x3590>
   1842c:	add	r3, pc, r3
   18430:	bl	23e50 <main@@Base+0xdfb4>
   18434:	mov	r9, r0
   18438:	cmp	r0, r7
   1843c:	cmpne	r9, r6
   18440:	beq	1fbf0 <main@@Base+0x9d54>
   18444:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18448:	vcmp.f32	s0, #0.0
   1844c:	vmrs	APSR_nzcv, fpscr
   18450:	bne	18460 <main@@Base+0x25c4>
   18454:	ldrb	r0, [sl, #8]
   18458:	tst	r0, #2
   1845c:	beq	1e9c8 <main@@Base+0x8b2c>
   18460:	ldr	r0, [sl]
   18464:	mov	r1, #27
   18468:	mov	r2, #4
   1846c:	mov	r3, #4
   18470:	bl	307e4 <flatcc_builder_table_add@@Base>
   18474:	cmp	r0, #0
   18478:	beq	1fbf0 <main@@Base+0x9d54>
   1847c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18480:	str	r1, [r0]
   18484:	b	1e9c8 <main@@Base+0x8b2c>
   18488:	bne	18498 <main@@Base+0x25fc>
   1848c:	ldrb	r0, [r9, #2]!
   18490:	cmp	r0, #32
   18494:	bhi	184a8 <main@@Base+0x260c>
   18498:	ldr	r0, [sp, #32]
   1849c:	mov	r2, r6
   184a0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   184a4:	mov	r9, r0
   184a8:	cmp	r8, r9
   184ac:	beq	193a0 <main@@Base+0x3504>
   184b0:	ldr	sl, [sp, #32]
   184b4:	mov	r1, #4
   184b8:	mov	r2, #2
   184bc:	mvn	r3, #-1073741824	; 0xc0000000
   184c0:	ldr	r0, [sl]
   184c4:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   184c8:	cmp	r0, #0
   184cc:	bne	1fbf0 <main@@Base+0x9d54>
   184d0:	cmp	r9, r6
   184d4:	beq	18508 <main@@Base+0x266c>
   184d8:	ldrb	r0, [r9]
   184dc:	cmp	r0, #91	; 0x5b
   184e0:	bne	18508 <main@@Base+0x266c>
   184e4:	add	r1, r9, #1
   184e8:	sub	r0, r6, r1
   184ec:	cmp	r0, #2
   184f0:	blt	18550 <main@@Base+0x26b4>
   184f4:	ldrb	r0, [r1]
   184f8:	cmp	r0, #32
   184fc:	bls	18540 <main@@Base+0x26a4>
   18500:	mov	r9, r1
   18504:	b	18560 <main@@Base+0x26c4>
   18508:	mov	r0, sl
   1850c:	mov	r1, r9
   18510:	mov	r2, r6
   18514:	mov	r3, #22
   18518:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1851c:	mov	r9, r0
   18520:	ldr	r0, [sl]
   18524:	bl	300b4 <flatcc_builder_end_vector@@Base>
   18528:	cmp	r0, #0
   1852c:	str	r0, [sp, #44]	; 0x2c
   18530:	beq	1fbf0 <main@@Base+0x9d54>
   18534:	ldr	r0, [sl]
   18538:	mov	r1, #9
   1853c:	b	19474 <main@@Base+0x35d8>
   18540:	bne	18550 <main@@Base+0x26b4>
   18544:	ldrb	r0, [r9, #2]!
   18548:	cmp	r0, #32
   1854c:	bhi	18560 <main@@Base+0x26c4>
   18550:	mov	r0, sl
   18554:	mov	r2, r6
   18558:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1855c:	mov	r9, r0
   18560:	cmp	r9, r6
   18564:	mov	r8, r6
   18568:	beq	185ac <main@@Base+0x2710>
   1856c:	ldrb	r0, [r9]
   18570:	cmp	r0, #93	; 0x5d
   18574:	bne	185a8 <main@@Base+0x270c>
   18578:	add	r1, r9, #1
   1857c:	sub	r0, r6, r1
   18580:	cmp	r0, #2
   18584:	blt	18fb8 <main@@Base+0x311c>
   18588:	ldrb	r0, [r1]
   1858c:	cmp	r0, #32
   18590:	bhi	186c8 <main@@Base+0x282c>
   18594:	bne	18fb8 <main@@Base+0x311c>
   18598:	ldrb	r0, [r9, #2]!
   1859c:	cmp	r0, #32
   185a0:	bhi	18520 <main@@Base+0x2684>
   185a4:	b	18fb8 <main@@Base+0x311c>
   185a8:	mov	r8, r9
   185ac:	ldr	r0, [sl]
   185b0:	mov	r1, #1
   185b4:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   185b8:	mov	r3, r0
   185bc:	cmp	r0, #0
   185c0:	beq	16888 <main@@Base+0x9ec>
   185c4:	mov	r0, sl
   185c8:	mov	r1, r8
   185cc:	mov	r2, r6
   185d0:	bl	221c4 <main@@Base+0xc328>
   185d4:	mov	r1, r0
   185d8:	sub	r0, r6, r0
   185dc:	cmp	r0, #2
   185e0:	blt	18614 <main@@Base+0x2778>
   185e4:	ldrb	r0, [r1]
   185e8:	cmp	r0, #32
   185ec:	bls	18600 <main@@Base+0x2764>
   185f0:	mov	r8, r1
   185f4:	cmp	r8, r6
   185f8:	bne	1862c <main@@Base+0x2790>
   185fc:	b	1869c <main@@Base+0x2800>
   18600:	bne	18614 <main@@Base+0x2778>
   18604:	mov	r8, r1
   18608:	ldrb	r0, [r8, #1]!
   1860c:	cmp	r0, #32
   18610:	bhi	18624 <main@@Base+0x2788>
   18614:	mov	r0, sl
   18618:	mov	r2, r6
   1861c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18620:	mov	r8, r0
   18624:	cmp	r8, r6
   18628:	beq	1869c <main@@Base+0x2800>
   1862c:	ldrb	r0, [r8]
   18630:	cmp	r0, #44	; 0x2c
   18634:	bne	186a4 <main@@Base+0x2808>
   18638:	add	r1, r8, #1
   1863c:	sub	r0, r6, r1
   18640:	cmp	r0, #2
   18644:	blt	18674 <main@@Base+0x27d8>
   18648:	ldrb	r0, [r1]
   1864c:	cmp	r0, #32
   18650:	bls	18664 <main@@Base+0x27c8>
   18654:	mov	r8, r1
   18658:	cmp	r8, r6
   1865c:	bne	1868c <main@@Base+0x27f0>
   18660:	b	186d0 <main@@Base+0x2834>
   18664:	bne	18674 <main@@Base+0x27d8>
   18668:	ldrb	r0, [r8, #2]!
   1866c:	cmp	r0, #32
   18670:	bhi	18684 <main@@Base+0x27e8>
   18674:	mov	r0, sl
   18678:	mov	r2, r6
   1867c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18680:	mov	r8, r0
   18684:	cmp	r8, r6
   18688:	beq	186d0 <main@@Base+0x2834>
   1868c:	ldrb	r0, [r8]
   18690:	cmp	r0, #93	; 0x5d
   18694:	bne	185ac <main@@Base+0x2710>
   18698:	b	186ac <main@@Base+0x2810>
   1869c:	mov	r9, r6
   186a0:	b	18520 <main@@Base+0x2684>
   186a4:	cmp	r0, #93	; 0x5d
   186a8:	bne	18b84 <main@@Base+0x2ce8>
   186ac:	add	r1, r8, #1
   186b0:	sub	r0, r6, r1
   186b4:	cmp	r0, #2
   186b8:	blt	18fb8 <main@@Base+0x311c>
   186bc:	ldrb	r0, [r1]
   186c0:	cmp	r0, #32
   186c4:	bls	18fa4 <main@@Base+0x3108>
   186c8:	mov	r9, r1
   186cc:	b	18520 <main@@Base+0x2684>
   186d0:	mov	r0, sl
   186d4:	mov	r1, r6
   186d8:	b	18b8c <main@@Base+0x2cf0>
   186dc:	bne	186ec <main@@Base+0x2850>
   186e0:	ldrb	r0, [r8, #18]!
   186e4:	cmp	r0, #32
   186e8:	bhi	186fc <main@@Base+0x2860>
   186ec:	mov	r0, r4
   186f0:	mov	r2, r6
   186f4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   186f8:	mov	r8, r0
   186fc:	cmp	r8, r6
   18700:	beq	18748 <main@@Base+0x28ac>
   18704:	ldrb	r0, [r8]
   18708:	cmp	r0, #58	; 0x3a
   1870c:	bne	18748 <main@@Base+0x28ac>
   18710:	add	r1, r8, #1
   18714:	sub	r0, r6, r1
   18718:	cmp	r0, #2
   1871c:	blt	19990 <main@@Base+0x3af4>
   18720:	ldrb	r0, [r1]
   18724:	cmp	r0, #32
   18728:	bls	19980 <main@@Base+0x3ae4>
   1872c:	mov	r8, r1
   18730:	cmp	r9, r8
   18734:	bne	199a8 <main@@Base+0x3b0c>
   18738:	ldr	sl, [sp, #32]
   1873c:	mov	r0, sl
   18740:	mov	r1, r9
   18744:	b	1e9bc <main@@Base+0x8b20>
   18748:	mov	r0, r4
   1874c:	mov	r1, r8
   18750:	mov	r2, r6
   18754:	mov	r3, #4
   18758:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1875c:	b	1999c <main@@Base+0x3b00>
   18760:	bne	18774 <main@@Base+0x28d8>
   18764:	mov	r7, r8
   18768:	ldrb	r0, [r7, #4]!
   1876c:	cmp	r0, #32
   18770:	bhi	18784 <main@@Base+0x28e8>
   18774:	mov	r0, sl
   18778:	mov	r2, r6
   1877c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18780:	mov	r7, r0
   18784:	cmp	r7, r6
   18788:	beq	187c4 <main@@Base+0x2928>
   1878c:	ldrb	r0, [r7]
   18790:	cmp	r0, #58	; 0x3a
   18794:	bne	187c4 <main@@Base+0x2928>
   18798:	add	r1, r7, #1
   1879c:	sub	r0, r6, r1
   187a0:	cmp	r0, #2
   187a4:	blt	19b3c <main@@Base+0x3ca0>
   187a8:	ldrb	r0, [r1]
   187ac:	cmp	r0, #32
   187b0:	bls	19b2c <main@@Base+0x3c90>
   187b4:	mov	r7, r1
   187b8:	cmp	r8, r7
   187bc:	bne	19b54 <main@@Base+0x3cb8>
   187c0:	b	19434 <main@@Base+0x3598>
   187c4:	mov	r0, sl
   187c8:	mov	r1, r7
   187cc:	mov	r2, r6
   187d0:	mov	r3, #4
   187d4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   187d8:	b	19b48 <main@@Base+0x3cac>
   187dc:	bne	187f0 <main@@Base+0x2954>
   187e0:	mov	r9, r8
   187e4:	ldrb	r0, [r9, #5]!
   187e8:	cmp	r0, #32
   187ec:	bhi	18800 <main@@Base+0x2964>
   187f0:	mov	r0, sl
   187f4:	mov	r2, r6
   187f8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   187fc:	mov	r9, r0
   18800:	cmp	r9, r6
   18804:	beq	18840 <main@@Base+0x29a4>
   18808:	ldrb	r0, [r9]
   1880c:	cmp	r0, #58	; 0x3a
   18810:	bne	18840 <main@@Base+0x29a4>
   18814:	add	r1, r9, #1
   18818:	sub	r0, r6, r1
   1881c:	cmp	r0, #2
   18820:	blt	19cb4 <main@@Base+0x3e18>
   18824:	ldrb	r0, [r1]
   18828:	cmp	r0, #32
   1882c:	bls	19ca4 <main@@Base+0x3e08>
   18830:	mov	r9, r1
   18834:	cmp	r8, r9
   18838:	bne	19ccc <main@@Base+0x3e30>
   1883c:	b	19434 <main@@Base+0x3598>
   18840:	mov	r0, sl
   18844:	mov	r1, r9
   18848:	mov	r2, r6
   1884c:	mov	r3, #4
   18850:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18854:	b	19cc0 <main@@Base+0x3e24>
   18858:	bne	1886c <main@@Base+0x29d0>
   1885c:	mov	r7, r8
   18860:	ldrb	r0, [r7, #8]!
   18864:	cmp	r0, #32
   18868:	bhi	1887c <main@@Base+0x29e0>
   1886c:	mov	r0, sl
   18870:	mov	r2, r6
   18874:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18878:	mov	r7, r0
   1887c:	cmp	r7, r6
   18880:	beq	188bc <main@@Base+0x2a20>
   18884:	ldrb	r0, [r7]
   18888:	cmp	r0, #58	; 0x3a
   1888c:	bne	188bc <main@@Base+0x2a20>
   18890:	add	r1, r7, #1
   18894:	sub	r0, r6, r1
   18898:	cmp	r0, #2
   1889c:	blt	1a958 <main@@Base+0x4abc>
   188a0:	ldrb	r0, [r1]
   188a4:	cmp	r0, #32
   188a8:	bls	1a948 <main@@Base+0x4aac>
   188ac:	mov	r7, r1
   188b0:	cmp	r8, r7
   188b4:	bne	1a970 <main@@Base+0x4ad4>
   188b8:	b	19434 <main@@Base+0x3598>
   188bc:	mov	r0, sl
   188c0:	mov	r1, r7
   188c4:	mov	r2, r6
   188c8:	mov	r3, #4
   188cc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   188d0:	b	1a964 <main@@Base+0x4ac8>
   188d4:	ldr	r4, [sp, #36]	; 0x24
   188d8:	bne	188ec <main@@Base+0x2a50>
   188dc:	mov	r6, r8
   188e0:	ldrb	r0, [r6, #18]!
   188e4:	cmp	r0, #32
   188e8:	bhi	188fc <main@@Base+0x2a60>
   188ec:	mov	r0, sl
   188f0:	mov	r2, r4
   188f4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   188f8:	mov	r6, r0
   188fc:	cmp	r6, r4
   18900:	beq	189b4 <main@@Base+0x2b18>
   18904:	ldrb	r0, [r6]
   18908:	cmp	r0, #58	; 0x3a
   1890c:	bne	189b4 <main@@Base+0x2b18>
   18910:	ldr	r0, [sp, #36]	; 0x24
   18914:	add	r1, r6, #1
   18918:	sub	r0, r0, r1
   1891c:	cmp	r0, #2
   18920:	blt	1ac20 <main@@Base+0x4d84>
   18924:	ldrb	r0, [r1]
   18928:	cmp	r0, #32
   1892c:	bls	1ac10 <main@@Base+0x4d74>
   18930:	mov	r6, r1
   18934:	cmp	r9, r6
   18938:	bne	1ac38 <main@@Base+0x4d9c>
   1893c:	ldr	r6, [sp, #36]	; 0x24
   18940:	add	r7, r8, #16
   18944:	mov	r1, #8
   18948:	mov	r2, #-268435456	; 0xf0000000
   1894c:	sub	r0, r6, r7
   18950:	cmp	r0, #8
   18954:	movcc	r1, r0
   18958:	add	r1, r2, r1, lsl #28
   1895c:	asr	r1, r1, #28
   18960:	cmp	r1, #0
   18964:	blt	1e9b4 <main@@Base+0x8b18>
   18968:	ldrb	r1, [r7]
   1896c:	cmp	r1, #97	; 0x61
   18970:	bne	1e9b4 <main@@Base+0x8b18>
   18974:	cmp	r0, #2
   18978:	blt	1e9b4 <main@@Base+0x8b18>
   1897c:	ldrb	r0, [r8, #17]
   18980:	cmp	r0, #34	; 0x22
   18984:	bne	1e9b4 <main@@Base+0x8b18>
   18988:	add	r1, r8, #18
   1898c:	sub	r0, r6, r1
   18990:	cmp	r0, #2
   18994:	blt	1ad98 <main@@Base+0x4efc>
   18998:	ldrb	r0, [r1]
   1899c:	cmp	r0, #32
   189a0:	bls	1ad88 <main@@Base+0x4eec>
   189a4:	mov	r8, r1
   189a8:	cmp	r8, r6
   189ac:	bne	1adb0 <main@@Base+0x4f14>
   189b0:	b	1adf0 <main@@Base+0x4f54>
   189b4:	ldr	r2, [sp, #36]	; 0x24
   189b8:	mov	r0, sl
   189bc:	mov	r1, r6
   189c0:	mov	r3, #4
   189c4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   189c8:	b	1ac2c <main@@Base+0x4d90>
   189cc:	bne	189dc <main@@Base+0x2b40>
   189d0:	ldrb	r0, [r1, #2]!
   189d4:	cmp	r0, #32
   189d8:	bhi	189f0 <main@@Base+0x2b54>
   189dc:	mov	r1, r2
   189e0:	mov	r0, sl
   189e4:	mov	r2, r6
   189e8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   189ec:	mov	r1, r0
   189f0:	cmp	r8, r1
   189f4:	beq	19434 <main@@Base+0x3598>
   189f8:	mov	r0, sl
   189fc:	mov	r2, r6
   18a00:	add	r3, sp, #44	; 0x2c
   18a04:	bl	16848 <main@@Base+0x9ac>
   18a08:	mov	r9, r0
   18a0c:	ldr	r0, [sp, #44]	; 0x2c
   18a10:	cmp	r0, #0
   18a14:	beq	1fbf0 <main@@Base+0x9d54>
   18a18:	ldr	r0, [sl]
   18a1c:	mov	r1, #12
   18a20:	b	19474 <main@@Base+0x35d8>
   18a24:	bne	18a34 <main@@Base+0x2b98>
   18a28:	ldrb	r0, [r7, #2]!
   18a2c:	cmp	r0, #32
   18a30:	bhi	18a44 <main@@Base+0x2ba8>
   18a34:	mov	r0, sl
   18a38:	mov	r2, r6
   18a3c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18a40:	mov	r7, r0
   18a44:	cmp	r8, r7
   18a48:	beq	19434 <main@@Base+0x3598>
   18a4c:	mov	r4, #0
   18a50:	cmp	r7, r6
   18a54:	str	r4, [fp, #-52]	; 0xffffffcc
   18a58:	str	r4, [fp, #-56]	; 0xffffffc8
   18a5c:	strb	r4, [sp, #60]	; 0x3c
   18a60:	str	r4, [sp, #48]	; 0x30
   18a64:	beq	18ac4 <main@@Base+0x2c28>
   18a68:	sub	r0, fp, #56	; 0x38
   18a6c:	mov	r1, r7
   18a70:	mov	r2, r6
   18a74:	add	r3, sp, #48	; 0x30
   18a78:	str	r0, [sp]
   18a7c:	mov	r0, sl
   18a80:	bl	363e0 <flatcc_json_parser_integer@@Base>
   18a84:	cmp	r0, r7
   18a88:	beq	18ad4 <main@@Base+0x2c38>
   18a8c:	ldr	r2, [sp, #48]	; 0x30
   18a90:	mov	r9, r0
   18a94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a9c:	cmp	r2, #0
   18aa0:	beq	18ae4 <main@@Base+0x2c48>
   18aa4:	subs	r2, r0, #129	; 0x81
   18aa8:	sbcs	r1, r1, #0
   18aac:	bcc	18b14 <main@@Base+0x2c78>
   18ab0:	mov	r0, sl
   18ab4:	mov	r1, r9
   18ab8:	mov	r2, r6
   18abc:	mov	r3, #8
   18ac0:	b	18b00 <main@@Base+0x2c64>
   18ac4:	mov	r9, r6
   18ac8:	cmp	r7, r9
   18acc:	bne	18b64 <main@@Base+0x2cc8>
   18ad0:	b	18b2c <main@@Base+0x2c90>
   18ad4:	mov	r9, r7
   18ad8:	cmp	r7, r9
   18adc:	bne	18b64 <main@@Base+0x2cc8>
   18ae0:	b	18b2c <main@@Base+0x2c90>
   18ae4:	subs	r2, r0, #128	; 0x80
   18ae8:	sbcs	r1, r1, #0
   18aec:	bcc	18b1c <main@@Base+0x2c80>
   18af0:	mov	r0, sl
   18af4:	mov	r1, r9
   18af8:	mov	r2, r6
   18afc:	mov	r3, #7
   18b00:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18b04:	mov	r9, r0
   18b08:	cmp	r7, r9
   18b0c:	bne	18b64 <main@@Base+0x2cc8>
   18b10:	b	18b2c <main@@Base+0x2c90>
   18b14:	rsb	r4, r0, #0
   18b18:	b	18b20 <main@@Base+0x2c84>
   18b1c:	mov	r4, r0
   18b20:	strb	r4, [sp, #60]	; 0x3c
   18b24:	cmp	r7, r9
   18b28:	bne	18b64 <main@@Base+0x2cc8>
   18b2c:	add	r0, sp, #60	; 0x3c
   18b30:	mov	r1, r7
   18b34:	mov	r2, r6
   18b38:	str	r0, [sp]
   18b3c:	mov	r0, sl
   18b40:	ldr	r3, [pc, #4064]	; 19b28 <main@@Base+0x3c8c>
   18b44:	add	r3, pc, r3
   18b48:	bl	21c04 <main@@Base+0xbd68>
   18b4c:	mov	r9, r0
   18b50:	cmp	r0, r7
   18b54:	beq	1fbf0 <main@@Base+0x9d54>
   18b58:	cmp	r9, r6
   18b5c:	beq	1fbf0 <main@@Base+0x9d54>
   18b60:	ldrb	r4, [sp, #60]	; 0x3c
   18b64:	uxtb	r0, r4
   18b68:	cmp	r0, #8
   18b6c:	ldrbeq	r0, [sl, #8]
   18b70:	tsteq	r0, #2
   18b74:	beq	1e9c8 <main@@Base+0x8b2c>
   18b78:	ldr	r0, [sl]
   18b7c:	mov	r1, #6
   18b80:	b	1984c <main@@Base+0x39b0>
   18b84:	mov	r0, sl
   18b88:	mov	r1, r8
   18b8c:	mov	r2, r6
   18b90:	mov	r3, #9
   18b94:	b	18518 <main@@Base+0x267c>
   18b98:	bne	18ba8 <main@@Base+0x2d0c>
   18b9c:	ldrb	r0, [r1, #2]!
   18ba0:	cmp	r0, #32
   18ba4:	bhi	18bbc <main@@Base+0x2d20>
   18ba8:	mov	r1, r2
   18bac:	mov	r0, sl
   18bb0:	mov	r2, r6
   18bb4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18bb8:	mov	r1, r0
   18bbc:	cmp	r8, r1
   18bc0:	beq	19434 <main@@Base+0x3598>
   18bc4:	mov	r0, sl
   18bc8:	mov	r2, r6
   18bcc:	add	r3, sp, #44	; 0x2c
   18bd0:	bl	36974 <flatcc_json_parser_build_string@@Base>
   18bd4:	mov	r9, r0
   18bd8:	ldr	r0, [sp, #44]	; 0x2c
   18bdc:	cmp	r0, #0
   18be0:	beq	1fbf0 <main@@Base+0x9d54>
   18be4:	ldr	r0, [sl]
   18be8:	mov	r1, #3
   18bec:	b	19474 <main@@Base+0x35d8>
   18bf0:	bne	18c00 <main@@Base+0x2d64>
   18bf4:	ldrb	r0, [r9, #2]!
   18bf8:	cmp	r0, #32
   18bfc:	bhi	18c10 <main@@Base+0x2d74>
   18c00:	mov	r0, sl
   18c04:	mov	r2, r6
   18c08:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18c0c:	mov	r9, r0
   18c10:	cmp	r8, r9
   18c14:	beq	19434 <main@@Base+0x3598>
   18c18:	ldr	r0, [sl]
   18c1c:	mov	r1, #1
   18c20:	mov	r2, #1
   18c24:	mvn	r3, #0
   18c28:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   18c2c:	cmp	r0, #0
   18c30:	bne	1fbf0 <main@@Base+0x9d54>
   18c34:	cmp	r9, r6
   18c38:	beq	18c6c <main@@Base+0x2dd0>
   18c3c:	ldrb	r0, [r9]
   18c40:	cmp	r0, #91	; 0x5b
   18c44:	bne	18c6c <main@@Base+0x2dd0>
   18c48:	add	r1, r9, #1
   18c4c:	sub	r0, r6, r1
   18c50:	cmp	r0, #2
   18c54:	blt	18cb4 <main@@Base+0x2e18>
   18c58:	ldrb	r0, [r1]
   18c5c:	cmp	r0, #32
   18c60:	bls	18ca4 <main@@Base+0x2e08>
   18c64:	mov	r9, r1
   18c68:	b	18cc4 <main@@Base+0x2e28>
   18c6c:	mov	r0, sl
   18c70:	mov	r1, r9
   18c74:	mov	r2, r6
   18c78:	mov	r3, #22
   18c7c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18c80:	mov	r9, r0
   18c84:	ldr	r0, [sl]
   18c88:	bl	300b4 <flatcc_builder_end_vector@@Base>
   18c8c:	cmp	r0, #0
   18c90:	str	r0, [sp, #44]	; 0x2c
   18c94:	beq	1fbf0 <main@@Base+0x9d54>
   18c98:	ldr	r0, [sl]
   18c9c:	mov	r1, #30
   18ca0:	b	19474 <main@@Base+0x35d8>
   18ca4:	bne	18cb4 <main@@Base+0x2e18>
   18ca8:	ldrb	r0, [r9, #2]!
   18cac:	cmp	r0, #32
   18cb0:	bhi	18cc4 <main@@Base+0x2e28>
   18cb4:	mov	r0, sl
   18cb8:	mov	r2, r6
   18cbc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18cc0:	mov	r9, r0
   18cc4:	cmp	r9, r6
   18cc8:	mov	r5, r6
   18ccc:	beq	18ce0 <main@@Base+0x2e44>
   18cd0:	ldrb	r0, [r9]
   18cd4:	cmp	r0, #93	; 0x5d
   18cd8:	beq	18ef4 <main@@Base+0x3058>
   18cdc:	mov	r5, r9
   18ce0:	mov	r0, #0
   18ce4:	mov	r1, #1
   18ce8:	strb	r0, [sp, #60]	; 0x3c
   18cec:	ldr	r0, [sl]
   18cf0:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   18cf4:	cmp	r0, #0
   18cf8:	beq	1fc60 <main@@Base+0x9dc4>
   18cfc:	mov	r4, r0
   18d00:	mov	r9, r5
   18d04:	mov	r5, #0
   18d08:	cmp	r9, r6
   18d0c:	str	r5, [fp, #-52]	; 0xffffffcc
   18d10:	str	r5, [fp, #-56]	; 0xffffffc8
   18d14:	strb	r5, [sp, #60]	; 0x3c
   18d18:	str	r5, [sp, #48]	; 0x30
   18d1c:	beq	18d64 <main@@Base+0x2ec8>
   18d20:	sub	r0, fp, #56	; 0x38
   18d24:	mov	r1, r9
   18d28:	mov	r2, r6
   18d2c:	add	r3, sp, #48	; 0x30
   18d30:	str	r0, [sp]
   18d34:	mov	r0, sl
   18d38:	bl	363e0 <flatcc_json_parser_integer@@Base>
   18d3c:	cmp	r0, r9
   18d40:	beq	18d74 <main@@Base+0x2ed8>
   18d44:	mov	r1, r0
   18d48:	ldr	r0, [sp, #48]	; 0x30
   18d4c:	cmp	r0, #0
   18d50:	beq	18d84 <main@@Base+0x2ee8>
   18d54:	mov	r0, sl
   18d58:	mov	r2, r6
   18d5c:	mov	r3, #8
   18d60:	b	18da4 <main@@Base+0x2f08>
   18d64:	mov	r1, r6
   18d68:	cmp	r9, r1
   18d6c:	bne	18de8 <main@@Base+0x2f4c>
   18d70:	b	18db4 <main@@Base+0x2f18>
   18d74:	mov	r1, r9
   18d78:	cmp	r9, r1
   18d7c:	bne	18de8 <main@@Base+0x2f4c>
   18d80:	b	18db4 <main@@Base+0x2f18>
   18d84:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18d88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18d8c:	subs	r3, r0, #256	; 0x100
   18d90:	sbcs	r2, r2, #0
   18d94:	bcc	18ed0 <main@@Base+0x3034>
   18d98:	mov	r0, sl
   18d9c:	mov	r2, r6
   18da0:	mov	r3, #7
   18da4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   18da8:	mov	r1, r0
   18dac:	cmp	r9, r1
   18db0:	bne	18de8 <main@@Base+0x2f4c>
   18db4:	add	r0, sp, #60	; 0x3c
   18db8:	mov	r1, r9
   18dbc:	mov	r2, r6
   18dc0:	str	r0, [sp]
   18dc4:	mov	r0, sl
   18dc8:	ldr	r3, [pc, #4060]	; 19dac <main@@Base+0x3f10>
   18dcc:	add	r3, pc, r3
   18dd0:	bl	21df0 <main@@Base+0xbf54>
   18dd4:	mov	r1, r0
   18dd8:	cmp	r0, r9
   18ddc:	cmpne	r1, r6
   18de0:	beq	1fc54 <main@@Base+0x9db8>
   18de4:	ldrb	r5, [sp, #60]	; 0x3c
   18de8:	sub	r0, r6, r1
   18dec:	strb	r5, [r4]
   18df0:	cmp	r0, #2
   18df4:	blt	18e28 <main@@Base+0x2f8c>
   18df8:	ldrb	r0, [r1]
   18dfc:	cmp	r0, #32
   18e00:	bls	18e14 <main@@Base+0x2f78>
   18e04:	mov	r9, r1
   18e08:	cmp	r9, r6
   18e0c:	bne	18e40 <main@@Base+0x2fa4>
   18e10:	b	18ee4 <main@@Base+0x3048>
   18e14:	bne	18e28 <main@@Base+0x2f8c>
   18e18:	mov	r9, r1
   18e1c:	ldrb	r0, [r9, #1]!
   18e20:	cmp	r0, #32
   18e24:	bhi	18e38 <main@@Base+0x2f9c>
   18e28:	mov	r0, sl
   18e2c:	mov	r2, r6
   18e30:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18e34:	mov	r9, r0
   18e38:	cmp	r9, r6
   18e3c:	beq	18ee4 <main@@Base+0x3048>
   18e40:	ldrb	r0, [r9]
   18e44:	cmp	r0, #44	; 0x2c
   18e48:	bne	18eec <main@@Base+0x3050>
   18e4c:	add	r1, r9, #1
   18e50:	sub	r0, r6, r1
   18e54:	cmp	r0, #2
   18e58:	blt	18e88 <main@@Base+0x2fec>
   18e5c:	ldrb	r0, [r1]
   18e60:	cmp	r0, #32
   18e64:	bls	18e78 <main@@Base+0x2fdc>
   18e68:	mov	r9, r1
   18e6c:	cmp	r9, r6
   18e70:	bne	18ea0 <main@@Base+0x3004>
   18e74:	b	18f38 <main@@Base+0x309c>
   18e78:	bne	18e88 <main@@Base+0x2fec>
   18e7c:	ldrb	r0, [r9, #2]!
   18e80:	cmp	r0, #32
   18e84:	bhi	18e98 <main@@Base+0x2ffc>
   18e88:	mov	r0, sl
   18e8c:	mov	r2, r6
   18e90:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18e94:	mov	r9, r0
   18e98:	cmp	r9, r6
   18e9c:	beq	18f38 <main@@Base+0x309c>
   18ea0:	ldrb	r0, [r9]
   18ea4:	cmp	r0, #93	; 0x5d
   18ea8:	beq	18ef4 <main@@Base+0x3058>
   18eac:	mov	r0, #0
   18eb0:	mov	r1, #1
   18eb4:	strb	r0, [sp, #60]	; 0x3c
   18eb8:	ldr	r0, [sl]
   18ebc:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   18ec0:	mov	r4, r0
   18ec4:	cmp	r0, #0
   18ec8:	bne	18d04 <main@@Base+0x2e68>
   18ecc:	b	1fbf0 <main@@Base+0x9d54>
   18ed0:	mov	r5, r0
   18ed4:	strb	r0, [sp, #60]	; 0x3c
   18ed8:	cmp	r9, r1
   18edc:	bne	18de8 <main@@Base+0x2f4c>
   18ee0:	b	18db4 <main@@Base+0x2f18>
   18ee4:	mov	r9, r6
   18ee8:	b	18c84 <main@@Base+0x2de8>
   18eec:	cmp	r0, #93	; 0x5d
   18ef0:	bne	198f4 <main@@Base+0x3a58>
   18ef4:	add	r1, r9, #1
   18ef8:	sub	r0, r6, r1
   18efc:	cmp	r0, #2
   18f00:	blt	18f28 <main@@Base+0x308c>
   18f04:	ldrb	r0, [r1]
   18f08:	cmp	r0, #32
   18f0c:	bls	18f18 <main@@Base+0x307c>
   18f10:	mov	r9, r1
   18f14:	b	18c84 <main@@Base+0x2de8>
   18f18:	bne	18f28 <main@@Base+0x308c>
   18f1c:	ldrb	r0, [r9, #2]!
   18f20:	cmp	r0, #32
   18f24:	bhi	18c84 <main@@Base+0x2de8>
   18f28:	mov	r0, sl
   18f2c:	mov	r2, r6
   18f30:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18f34:	b	18c80 <main@@Base+0x2de4>
   18f38:	mov	r0, sl
   18f3c:	mov	r1, r6
   18f40:	b	198fc <main@@Base+0x3a60>
   18f44:	bne	18f54 <main@@Base+0x30b8>
   18f48:	ldrb	r0, [r1, #2]!
   18f4c:	cmp	r0, #32
   18f50:	bhi	18f68 <main@@Base+0x30cc>
   18f54:	ldr	r0, [sp, #32]
   18f58:	mov	r1, r2
   18f5c:	mov	r2, r6
   18f60:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18f64:	mov	r1, r0
   18f68:	cmp	r8, r1
   18f6c:	beq	18264 <main@@Base+0x23c8>
   18f70:	ldr	r0, [sp, #40]	; 0x28
   18f74:	mov	r2, #8
   18f78:	mov	r3, #0
   18f7c:	str	r2, [sp]
   18f80:	mov	r2, r6
   18f84:	str	r0, [sp, #4]
   18f88:	ldr	r0, [pc, #4000]	; 19f30 <main@@Base+0x4094>
   18f8c:	ldr	sl, [sp, #32]
   18f90:	add	r0, pc, r0
   18f94:	str	r0, [sp, #8]
   18f98:	mov	r0, sl
   18f9c:	bl	36d48 <flatcc_json_parser_union@@Base>
   18fa0:	b	1e9c4 <main@@Base+0x8b28>
   18fa4:	bne	18fb8 <main@@Base+0x311c>
   18fa8:	ldrb	r0, [r8, #2]!
   18fac:	cmp	r0, #32
   18fb0:	mov	r9, r8
   18fb4:	bhi	18520 <main@@Base+0x2684>
   18fb8:	mov	r0, sl
   18fbc:	mov	r2, r6
   18fc0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18fc4:	b	1851c <main@@Base+0x2680>
   18fc8:	bne	18fd8 <main@@Base+0x313c>
   18fcc:	ldrb	r0, [r8, #12]!
   18fd0:	cmp	r0, #32
   18fd4:	bhi	18fe8 <main@@Base+0x314c>
   18fd8:	mov	r0, sl
   18fdc:	mov	r2, r6
   18fe0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   18fe4:	mov	r8, r0
   18fe8:	cmp	r8, r6
   18fec:	beq	19028 <main@@Base+0x318c>
   18ff0:	ldrb	r0, [r8]
   18ff4:	cmp	r0, #58	; 0x3a
   18ff8:	bne	19028 <main@@Base+0x318c>
   18ffc:	add	r1, r8, #1
   19000:	sub	r0, r6, r1
   19004:	cmp	r0, #2
   19008:	blt	1b1a8 <main@@Base+0x530c>
   1900c:	ldrb	r0, [r1]
   19010:	cmp	r0, #32
   19014:	bls	1b198 <main@@Base+0x52fc>
   19018:	mov	r8, r1
   1901c:	cmp	r7, r8
   19020:	bne	1b1c0 <main@@Base+0x5324>
   19024:	b	1e9b4 <main@@Base+0x8b18>
   19028:	mov	r0, sl
   1902c:	mov	r1, r8
   19030:	mov	r2, r6
   19034:	mov	r3, #4
   19038:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1903c:	b	1b1b4 <main@@Base+0x5318>
   19040:	bne	19050 <main@@Base+0x31b4>
   19044:	ldrb	r0, [r8, #20]!
   19048:	cmp	r0, #32
   1904c:	bhi	19060 <main@@Base+0x31c4>
   19050:	mov	r0, sl
   19054:	mov	r2, r6
   19058:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1905c:	mov	r8, r0
   19060:	cmp	r8, r6
   19064:	beq	190a0 <main@@Base+0x3204>
   19068:	ldrb	r0, [r8]
   1906c:	cmp	r0, #58	; 0x3a
   19070:	bne	190a0 <main@@Base+0x3204>
   19074:	add	r1, r8, #1
   19078:	sub	r0, r6, r1
   1907c:	cmp	r0, #2
   19080:	blt	1b318 <main@@Base+0x547c>
   19084:	ldrb	r0, [r1]
   19088:	cmp	r0, #32
   1908c:	bls	1b308 <main@@Base+0x546c>
   19090:	mov	r8, r1
   19094:	cmp	r7, r8
   19098:	bne	1b330 <main@@Base+0x5494>
   1909c:	b	1e9b4 <main@@Base+0x8b18>
   190a0:	mov	r0, sl
   190a4:	mov	r1, r8
   190a8:	mov	r2, r6
   190ac:	mov	r3, #4
   190b0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   190b4:	b	1b324 <main@@Base+0x5488>
   190b8:	bne	190c8 <main@@Base+0x322c>
   190bc:	ldrb	r0, [r8, #25]!
   190c0:	cmp	r0, #32
   190c4:	bhi	190d8 <main@@Base+0x323c>
   190c8:	mov	r0, sl
   190cc:	mov	r2, r6
   190d0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   190d4:	mov	r8, r0
   190d8:	cmp	r8, r6
   190dc:	beq	19118 <main@@Base+0x327c>
   190e0:	ldrb	r0, [r8]
   190e4:	cmp	r0, #58	; 0x3a
   190e8:	bne	19118 <main@@Base+0x327c>
   190ec:	add	r1, r8, #1
   190f0:	sub	r0, r6, r1
   190f4:	cmp	r0, #2
   190f8:	blt	1b3c4 <main@@Base+0x5528>
   190fc:	ldrb	r0, [r1]
   19100:	cmp	r0, #32
   19104:	bls	1b3b4 <main@@Base+0x5518>
   19108:	mov	r8, r1
   1910c:	cmp	r9, r8
   19110:	bne	1b3dc <main@@Base+0x5540>
   19114:	b	1873c <main@@Base+0x28a0>
   19118:	mov	r0, sl
   1911c:	mov	r1, r8
   19120:	mov	r2, r6
   19124:	mov	r3, #4
   19128:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1912c:	b	1b3d0 <main@@Base+0x5534>
   19130:	bne	19144 <main@@Base+0x32a8>
   19134:	mov	r7, r8
   19138:	ldrb	r0, [r7, #6]!
   1913c:	cmp	r0, #32
   19140:	bhi	19154 <main@@Base+0x32b8>
   19144:	mov	r0, sl
   19148:	mov	r2, r6
   1914c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19150:	mov	r7, r0
   19154:	cmp	r7, r6
   19158:	beq	19194 <main@@Base+0x32f8>
   1915c:	ldrb	r0, [r7]
   19160:	cmp	r0, #58	; 0x3a
   19164:	bne	19194 <main@@Base+0x32f8>
   19168:	add	r1, r7, #1
   1916c:	sub	r0, r6, r1
   19170:	cmp	r0, #2
   19174:	blt	1b4e8 <main@@Base+0x564c>
   19178:	ldrb	r0, [r1]
   1917c:	cmp	r0, #32
   19180:	bls	1b4d8 <main@@Base+0x563c>
   19184:	mov	r7, r1
   19188:	cmp	r8, r7
   1918c:	bne	1b500 <main@@Base+0x5664>
   19190:	b	19434 <main@@Base+0x3598>
   19194:	mov	r0, sl
   19198:	mov	r1, r7
   1919c:	mov	r2, r6
   191a0:	mov	r3, #4
   191a4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   191a8:	b	1b4f4 <main@@Base+0x5658>
   191ac:	bne	191c0 <main@@Base+0x3324>
   191b0:	mov	r7, r8
   191b4:	ldrb	r0, [r7, #7]!
   191b8:	cmp	r0, #32
   191bc:	bhi	191d0 <main@@Base+0x3334>
   191c0:	mov	r0, sl
   191c4:	mov	r2, r6
   191c8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   191cc:	mov	r7, r0
   191d0:	cmp	r7, r6
   191d4:	beq	19210 <main@@Base+0x3374>
   191d8:	ldrb	r0, [r7]
   191dc:	cmp	r0, #58	; 0x3a
   191e0:	bne	19210 <main@@Base+0x3374>
   191e4:	add	r1, r7, #1
   191e8:	sub	r0, r6, r1
   191ec:	cmp	r0, #2
   191f0:	blt	1b664 <main@@Base+0x57c8>
   191f4:	ldrb	r0, [r1]
   191f8:	cmp	r0, #32
   191fc:	bls	1b654 <main@@Base+0x57b8>
   19200:	mov	r7, r1
   19204:	cmp	r8, r7
   19208:	bne	1b67c <main@@Base+0x57e0>
   1920c:	b	19434 <main@@Base+0x3598>
   19210:	mov	r0, sl
   19214:	mov	r1, r7
   19218:	mov	r2, r6
   1921c:	mov	r3, #4
   19220:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19224:	b	1b670 <main@@Base+0x57d4>
   19228:	ldr	r4, [sp, #36]	; 0x24
   1922c:	bne	19240 <main@@Base+0x33a4>
   19230:	mov	r6, r8
   19234:	ldrb	r0, [r6, #18]!
   19238:	cmp	r0, #32
   1923c:	bhi	19250 <main@@Base+0x33b4>
   19240:	mov	r0, sl
   19244:	mov	r2, r4
   19248:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1924c:	mov	r6, r0
   19250:	cmp	r6, r4
   19254:	beq	19308 <main@@Base+0x346c>
   19258:	ldrb	r0, [r6]
   1925c:	cmp	r0, #58	; 0x3a
   19260:	bne	19308 <main@@Base+0x346c>
   19264:	ldr	r0, [sp, #36]	; 0x24
   19268:	add	r1, r6, #1
   1926c:	sub	r0, r0, r1
   19270:	cmp	r0, #2
   19274:	blt	1b794 <main@@Base+0x58f8>
   19278:	ldrb	r0, [r1]
   1927c:	cmp	r0, #32
   19280:	bls	1b784 <main@@Base+0x58e8>
   19284:	mov	r6, r1
   19288:	cmp	r9, r6
   1928c:	bne	1b7ac <main@@Base+0x5910>
   19290:	ldr	r6, [sp, #36]	; 0x24
   19294:	add	r7, r8, #16
   19298:	mov	r1, #8
   1929c:	mov	r2, #-268435456	; 0xf0000000
   192a0:	sub	r0, r6, r7
   192a4:	cmp	r0, #8
   192a8:	movcc	r1, r0
   192ac:	add	r1, r2, r1, lsl #28
   192b0:	asr	r1, r1, #28
   192b4:	cmp	r1, #0
   192b8:	blt	1e9b4 <main@@Base+0x8b18>
   192bc:	ldrb	r1, [r7]
   192c0:	cmp	r1, #97	; 0x61
   192c4:	bne	1e9b4 <main@@Base+0x8b18>
   192c8:	cmp	r0, #2
   192cc:	blt	1e9b4 <main@@Base+0x8b18>
   192d0:	ldrb	r0, [r8, #17]
   192d4:	cmp	r0, #34	; 0x22
   192d8:	bne	1e9b4 <main@@Base+0x8b18>
   192dc:	add	r1, r8, #18
   192e0:	sub	r0, r6, r1
   192e4:	cmp	r0, #2
   192e8:	blt	1ba14 <main@@Base+0x5b78>
   192ec:	ldrb	r0, [r1]
   192f0:	cmp	r0, #32
   192f4:	bls	1ba04 <main@@Base+0x5b68>
   192f8:	mov	r8, r1
   192fc:	cmp	r8, r6
   19300:	bne	1ba2c <main@@Base+0x5b90>
   19304:	b	1ba6c <main@@Base+0x5bd0>
   19308:	ldr	r2, [sp, #36]	; 0x24
   1930c:	mov	r0, sl
   19310:	mov	r1, r6
   19314:	mov	r3, #4
   19318:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1931c:	b	1b7a0 <main@@Base+0x5904>
   19320:	bne	19330 <main@@Base+0x3494>
   19324:	ldrb	r0, [r9, #2]!
   19328:	cmp	r0, #32
   1932c:	bhi	19340 <main@@Base+0x34a4>
   19330:	ldr	r0, [sp, #32]
   19334:	mov	r2, r6
   19338:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1933c:	mov	r9, r0
   19340:	cmp	r8, r9
   19344:	beq	193a0 <main@@Base+0x3504>
   19348:	ldr	sl, [sp, #32]
   1934c:	mov	r1, #4
   19350:	mov	r2, #2
   19354:	mvn	r3, #-1073741824	; 0xc0000000
   19358:	ldr	r0, [sl]
   1935c:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   19360:	cmp	r0, #0
   19364:	bne	1fbf0 <main@@Base+0x9d54>
   19368:	cmp	r9, r6
   1936c:	beq	19440 <main@@Base+0x35a4>
   19370:	ldrb	r0, [r9]
   19374:	cmp	r0, #91	; 0x5b
   19378:	bne	19440 <main@@Base+0x35a4>
   1937c:	add	r1, r9, #1
   19380:	sub	r0, r6, r1
   19384:	cmp	r0, #2
   19388:	blt	1949c <main@@Base+0x3600>
   1938c:	ldrb	r0, [r1]
   19390:	cmp	r0, #32
   19394:	bls	1948c <main@@Base+0x35f0>
   19398:	mov	r9, r1
   1939c:	b	194ac <main@@Base+0x3610>
   193a0:	movw	r0, #31088	; 0x7970
   193a4:	movt	r0, #24436	; 0x5f74
   193a8:	eor	r0, sl, r0
   193ac:	orrs	r0, r0, r7
   193b0:	bne	19430 <main@@Base+0x3594>
   193b4:	add	r7, r8, #8
   193b8:	mov	r1, #8
   193bc:	mov	r2, #-268435456	; 0xf0000000
   193c0:	ldr	sl, [sp, #32]
   193c4:	sub	r0, r6, r7
   193c8:	cmp	r0, #8
   193cc:	movcc	r1, r0
   193d0:	add	r1, r2, r1, lsl #28
   193d4:	asr	r1, r1, #28
   193d8:	cmp	r1, #0
   193dc:	blt	1e9b4 <main@@Base+0x8b18>
   193e0:	ldrb	r1, [r7]
   193e4:	cmp	r1, #101	; 0x65
   193e8:	bne	1e9b4 <main@@Base+0x8b18>
   193ec:	cmp	r0, #2
   193f0:	blt	1e9b4 <main@@Base+0x8b18>
   193f4:	ldrb	r0, [r8, #9]
   193f8:	cmp	r0, #34	; 0x22
   193fc:	bne	1e9b4 <main@@Base+0x8b18>
   19400:	add	r1, r8, #10
   19404:	sub	r0, r6, r1
   19408:	cmp	r0, #2
   1940c:	blt	19660 <main@@Base+0x37c4>
   19410:	ldrb	r0, [r1]
   19414:	cmp	r0, #32
   19418:	bls	19650 <main@@Base+0x37b4>
   1941c:	mov	r8, r1
   19420:	cmp	r8, r6
   19424:	bne	19678 <main@@Base+0x37dc>
   19428:	b	196b0 <main@@Base+0x3814>
   1942c:	ldrdeq	r3, [r4], -r8
   19430:	ldr	sl, [sp, #32]
   19434:	mov	r0, sl
   19438:	mov	r1, r8
   1943c:	b	1e9bc <main@@Base+0x8b20>
   19440:	mov	r0, sl
   19444:	mov	r1, r9
   19448:	mov	r2, r6
   1944c:	mov	r3, #22
   19450:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19454:	mov	r9, r0
   19458:	ldr	r0, [sl]
   1945c:	bl	300b4 <flatcc_builder_end_vector@@Base>
   19460:	cmp	r0, #0
   19464:	str	r0, [sp, #44]	; 0x2c
   19468:	beq	1fbf0 <main@@Base+0x9d54>
   1946c:	ldr	r0, [sl]
   19470:	mov	r1, #31
   19474:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   19478:	cmp	r0, #0
   1947c:	beq	1fbf0 <main@@Base+0x9d54>
   19480:	ldr	r1, [sp, #44]	; 0x2c
   19484:	str	r1, [r0]
   19488:	b	1e9c8 <main@@Base+0x8b2c>
   1948c:	bne	1949c <main@@Base+0x3600>
   19490:	ldrb	r0, [r9, #2]!
   19494:	cmp	r0, #32
   19498:	bhi	194ac <main@@Base+0x3610>
   1949c:	mov	r0, sl
   194a0:	mov	r2, r6
   194a4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   194a8:	mov	r9, r0
   194ac:	cmp	r9, r6
   194b0:	mov	r8, r6
   194b4:	beq	194f8 <main@@Base+0x365c>
   194b8:	ldrb	r0, [r9]
   194bc:	cmp	r0, #93	; 0x5d
   194c0:	bne	194f4 <main@@Base+0x3658>
   194c4:	add	r1, r9, #1
   194c8:	sub	r0, r6, r1
   194cc:	cmp	r0, #2
   194d0:	blt	1cdfc <main@@Base+0x6f60>
   194d4:	ldrb	r0, [r1]
   194d8:	cmp	r0, #32
   194dc:	bhi	19600 <main@@Base+0x3764>
   194e0:	bne	1cdfc <main@@Base+0x6f60>
   194e4:	ldrb	r0, [r9, #2]!
   194e8:	cmp	r0, #32
   194ec:	bhi	19458 <main@@Base+0x35bc>
   194f0:	b	1cdfc <main@@Base+0x6f60>
   194f4:	mov	r8, r9
   194f8:	ldr	r0, [sl]
   194fc:	mov	r1, #1
   19500:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   19504:	mov	r3, r0
   19508:	cmp	r0, #0
   1950c:	beq	16888 <main@@Base+0x9ec>
   19510:	mov	r0, sl
   19514:	mov	r1, r8
   19518:	mov	r2, r6
   1951c:	bl	221c4 <main@@Base+0xc328>
   19520:	mov	r1, r0
   19524:	sub	r0, r6, r0
   19528:	cmp	r0, #2
   1952c:	blt	19560 <main@@Base+0x36c4>
   19530:	ldrb	r0, [r1]
   19534:	cmp	r0, #32
   19538:	bls	1954c <main@@Base+0x36b0>
   1953c:	mov	r8, r1
   19540:	cmp	r8, r6
   19544:	bne	19578 <main@@Base+0x36dc>
   19548:	b	19608 <main@@Base+0x376c>
   1954c:	bne	19560 <main@@Base+0x36c4>
   19550:	mov	r8, r1
   19554:	ldrb	r0, [r8, #1]!
   19558:	cmp	r0, #32
   1955c:	bhi	19570 <main@@Base+0x36d4>
   19560:	mov	r0, sl
   19564:	mov	r2, r6
   19568:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1956c:	mov	r8, r0
   19570:	cmp	r8, r6
   19574:	beq	19608 <main@@Base+0x376c>
   19578:	ldrb	r0, [r8]
   1957c:	cmp	r0, #44	; 0x2c
   19580:	bne	19610 <main@@Base+0x3774>
   19584:	add	r1, r8, #1
   19588:	sub	r0, r6, r1
   1958c:	cmp	r0, #2
   19590:	blt	195c0 <main@@Base+0x3724>
   19594:	ldrb	r0, [r1]
   19598:	cmp	r0, #32
   1959c:	bls	195b0 <main@@Base+0x3714>
   195a0:	mov	r8, r1
   195a4:	cmp	r8, r6
   195a8:	bne	195d8 <main@@Base+0x373c>
   195ac:	b	19644 <main@@Base+0x37a8>
   195b0:	bne	195c0 <main@@Base+0x3724>
   195b4:	ldrb	r0, [r8, #2]!
   195b8:	cmp	r0, #32
   195bc:	bhi	195d0 <main@@Base+0x3734>
   195c0:	mov	r0, sl
   195c4:	mov	r2, r6
   195c8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   195cc:	mov	r8, r0
   195d0:	cmp	r8, r6
   195d4:	beq	19644 <main@@Base+0x37a8>
   195d8:	ldrb	r0, [r8]
   195dc:	cmp	r0, #93	; 0x5d
   195e0:	bne	194f8 <main@@Base+0x365c>
   195e4:	add	r1, r8, #1
   195e8:	sub	r0, r6, r1
   195ec:	cmp	r0, #2
   195f0:	blt	1cdfc <main@@Base+0x6f60>
   195f4:	ldrb	r0, [r1]
   195f8:	cmp	r0, #32
   195fc:	bls	1b900 <main@@Base+0x5a64>
   19600:	mov	r9, r1
   19604:	b	19458 <main@@Base+0x35bc>
   19608:	mov	r9, r6
   1960c:	b	19458 <main@@Base+0x35bc>
   19610:	cmp	r0, #93	; 0x5d
   19614:	bne	1abf8 <main@@Base+0x4d5c>
   19618:	add	r1, r8, #1
   1961c:	sub	r0, r6, r1
   19620:	cmp	r0, #2
   19624:	blt	1cdfc <main@@Base+0x6f60>
   19628:	ldrb	r0, [r1]
   1962c:	cmp	r0, #32
   19630:	bls	1cde0 <main@@Base+0x6f44>
   19634:	ldr	r6, [sp, #36]	; 0x24
   19638:	ldr	sl, [sp, #32]
   1963c:	mov	r9, r1
   19640:	b	19458 <main@@Base+0x35bc>
   19644:	mov	r0, sl
   19648:	mov	r1, r6
   1964c:	b	1ac00 <main@@Base+0x4d64>
   19650:	bne	19660 <main@@Base+0x37c4>
   19654:	ldrb	r0, [r8, #11]!
   19658:	cmp	r0, #32
   1965c:	bhi	19670 <main@@Base+0x37d4>
   19660:	mov	r0, sl
   19664:	mov	r2, r6
   19668:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1966c:	mov	r8, r0
   19670:	cmp	r8, r6
   19674:	beq	196b0 <main@@Base+0x3814>
   19678:	ldrb	r0, [r8]
   1967c:	cmp	r0, #58	; 0x3a
   19680:	bne	196b0 <main@@Base+0x3814>
   19684:	add	r1, r8, #1
   19688:	sub	r0, r6, r1
   1968c:	cmp	r0, #2
   19690:	blt	1b2b0 <main@@Base+0x5414>
   19694:	ldrb	r0, [r1]
   19698:	cmp	r0, #32
   1969c:	bls	1b2a0 <main@@Base+0x5404>
   196a0:	mov	r8, r1
   196a4:	cmp	r7, r8
   196a8:	bne	1b2c8 <main@@Base+0x542c>
   196ac:	b	1e9b4 <main@@Base+0x8b18>
   196b0:	mov	r0, sl
   196b4:	mov	r1, r8
   196b8:	mov	r2, r6
   196bc:	mov	r3, #4
   196c0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   196c4:	b	1b2bc <main@@Base+0x5420>
   196c8:	bne	196d8 <main@@Base+0x383c>
   196cc:	ldrb	r0, [r7, #2]!
   196d0:	cmp	r0, #32
   196d4:	bhi	196e8 <main@@Base+0x384c>
   196d8:	mov	r0, sl
   196dc:	mov	r2, r6
   196e0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   196e4:	mov	r7, r0
   196e8:	cmp	r8, r7
   196ec:	beq	19434 <main@@Base+0x3598>
   196f0:	mov	r0, #0
   196f4:	strb	r0, [sp, #60]	; 0x3c
   196f8:	sub	r0, r6, r7
   196fc:	cmp	r0, #4
   19700:	blt	1973c <main@@Base+0x38a0>
   19704:	ldr	r1, [r7]
   19708:	movw	r2, #29300	; 0x7274
   1970c:	movt	r2, #25973	; 0x6575
   19710:	cmp	r1, r2
   19714:	beq	197a4 <main@@Base+0x3908>
   19718:	cmp	r0, #5
   1971c:	blt	1973c <main@@Base+0x38a0>
   19720:	ldr	r1, [pc, #3980]	; 1a6b4 <main@@Base+0x4818>
   19724:	mov	r0, r7
   19728:	mov	r2, #5
   1972c:	add	r1, pc, r1
   19730:	bl	14e64 <memcmp@plt>
   19734:	cmp	r0, #0
   19738:	beq	19868 <main@@Base+0x39cc>
   1973c:	mov	r4, #0
   19740:	cmp	r7, r6
   19744:	str	r4, [fp, #-52]	; 0xffffffcc
   19748:	str	r4, [fp, #-56]	; 0xffffffc8
   1974c:	str	r4, [sp, #48]	; 0x30
   19750:	beq	1979c <main@@Base+0x3900>
   19754:	sub	r0, fp, #56	; 0x38
   19758:	mov	r1, r7
   1975c:	mov	r2, r6
   19760:	add	r3, sp, #48	; 0x30
   19764:	str	r0, [sp]
   19768:	mov	r0, sl
   1976c:	bl	363e0 <flatcc_json_parser_integer@@Base>
   19770:	cmp	r0, r7
   19774:	beq	197b0 <main@@Base+0x3914>
   19778:	mov	r9, r0
   1977c:	ldr	r0, [sp, #48]	; 0x30
   19780:	cmp	r0, #0
   19784:	beq	197b8 <main@@Base+0x391c>
   19788:	mov	r0, sl
   1978c:	mov	r1, r9
   19790:	mov	r2, r6
   19794:	mov	r3, #8
   19798:	b	197dc <main@@Base+0x3940>
   1979c:	mov	r9, r6
   197a0:	b	197e4 <main@@Base+0x3948>
   197a4:	mov	r4, #1
   197a8:	add	r9, r7, #4
   197ac:	b	197f0 <main@@Base+0x3954>
   197b0:	mov	r9, r7
   197b4:	b	197e4 <main@@Base+0x3948>
   197b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   197bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   197c0:	subs	r2, r0, #256	; 0x100
   197c4:	sbcs	r1, r1, #0
   197c8:	bcc	19874 <main@@Base+0x39d8>
   197cc:	mov	r0, sl
   197d0:	mov	r1, r9
   197d4:	mov	r2, r6
   197d8:	mov	r3, #7
   197dc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   197e0:	mov	r9, r0
   197e4:	uxtb	r4, r4
   197e8:	cmp	r4, #0
   197ec:	movwne	r4, #1
   197f0:	strb	r4, [sp, #60]	; 0x3c
   197f4:	cmp	r7, r9
   197f8:	bne	19834 <main@@Base+0x3998>
   197fc:	add	r0, sp, #60	; 0x3c
   19800:	mov	r1, r7
   19804:	mov	r2, r6
   19808:	str	r0, [sp]
   1980c:	mov	r0, sl
   19810:	ldr	r3, [pc, #4092]	; 1a814 <main@@Base+0x4978>
   19814:	add	r3, pc, r3
   19818:	bl	23c9c <main@@Base+0xde00>
   1981c:	mov	r9, r0
   19820:	cmp	r0, r7
   19824:	beq	1fbf0 <main@@Base+0x9d54>
   19828:	cmp	r9, r6
   1982c:	beq	1fbf0 <main@@Base+0x9d54>
   19830:	ldrb	r4, [sp, #60]	; 0x3c
   19834:	cmp	r4, #1
   19838:	ldrbeq	r0, [sl, #8]
   1983c:	tsteq	r0, #2
   19840:	beq	1e9c8 <main@@Base+0x8b2c>
   19844:	ldr	r0, [sl]
   19848:	mov	r1, #15
   1984c:	mov	r2, #1
   19850:	mov	r3, #1
   19854:	bl	307e4 <flatcc_builder_table_add@@Base>
   19858:	cmp	r0, #0
   1985c:	beq	1fbf0 <main@@Base+0x9d54>
   19860:	strb	r4, [r0]
   19864:	b	1e9c8 <main@@Base+0x8b2c>
   19868:	mov	r4, #0
   1986c:	add	r9, r7, #5
   19870:	b	197f0 <main@@Base+0x3954>
   19874:	mov	r4, r0
   19878:	b	197e4 <main@@Base+0x3948>
   1987c:	bne	1988c <main@@Base+0x39f0>
   19880:	ldrb	r0, [r8, #23]!
   19884:	cmp	r0, #32
   19888:	bhi	1989c <main@@Base+0x3a00>
   1988c:	mov	r0, sl
   19890:	mov	r2, r6
   19894:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19898:	mov	r8, r0
   1989c:	cmp	r8, r6
   198a0:	beq	198dc <main@@Base+0x3a40>
   198a4:	ldrb	r0, [r8]
   198a8:	cmp	r0, #58	; 0x3a
   198ac:	bne	198dc <main@@Base+0x3a40>
   198b0:	add	r1, r8, #1
   198b4:	sub	r0, r6, r1
   198b8:	cmp	r0, #2
   198bc:	blt	1b918 <main@@Base+0x5a7c>
   198c0:	ldrb	r0, [r1]
   198c4:	cmp	r0, #32
   198c8:	bls	1b908 <main@@Base+0x5a6c>
   198cc:	mov	r8, r1
   198d0:	cmp	r9, r8
   198d4:	bne	1b930 <main@@Base+0x5a94>
   198d8:	b	1873c <main@@Base+0x28a0>
   198dc:	mov	r0, sl
   198e0:	mov	r1, r8
   198e4:	mov	r2, r6
   198e8:	mov	r3, #4
   198ec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   198f0:	b	1b924 <main@@Base+0x5a88>
   198f4:	mov	r0, sl
   198f8:	mov	r1, r9
   198fc:	mov	r2, r6
   19900:	mov	r3, #9
   19904:	b	18c7c <main@@Base+0x2de0>
   19908:	bne	19918 <main@@Base+0x3a7c>
   1990c:	ldrb	r0, [r8, #19]!
   19910:	cmp	r0, #32
   19914:	bhi	19928 <main@@Base+0x3a8c>
   19918:	mov	r0, sl
   1991c:	mov	r2, r6
   19920:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19924:	mov	r8, r0
   19928:	cmp	r8, r6
   1992c:	beq	19968 <main@@Base+0x3acc>
   19930:	ldrb	r0, [r8]
   19934:	cmp	r0, #58	; 0x3a
   19938:	bne	19968 <main@@Base+0x3acc>
   1993c:	add	r1, r8, #1
   19940:	sub	r0, r6, r1
   19944:	cmp	r0, #2
   19948:	blt	1ba94 <main@@Base+0x5bf8>
   1994c:	ldrb	r0, [r1]
   19950:	cmp	r0, #32
   19954:	bls	1ba84 <main@@Base+0x5be8>
   19958:	mov	r8, r1
   1995c:	cmp	r7, r8
   19960:	bne	1baac <main@@Base+0x5c10>
   19964:	b	1e9b4 <main@@Base+0x8b18>
   19968:	mov	r0, sl
   1996c:	mov	r1, r8
   19970:	mov	r2, r6
   19974:	mov	r3, #4
   19978:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1997c:	b	1baa0 <main@@Base+0x5c04>
   19980:	bne	19990 <main@@Base+0x3af4>
   19984:	ldrb	r0, [r8, #2]!
   19988:	cmp	r0, #32
   1998c:	bhi	199a0 <main@@Base+0x3b04>
   19990:	mov	r0, r4
   19994:	mov	r2, r6
   19998:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1999c:	mov	r8, r0
   199a0:	cmp	r9, r8
   199a4:	beq	18738 <main@@Base+0x289c>
   199a8:	ldr	sl, [sp, #32]
   199ac:	mov	r1, #1
   199b0:	mov	r2, #1
   199b4:	mvn	r3, #0
   199b8:	ldr	r0, [sl]
   199bc:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   199c0:	cmp	r0, #0
   199c4:	bne	16888 <main@@Base+0x9ec>
   199c8:	cmp	r8, r6
   199cc:	beq	19a00 <main@@Base+0x3b64>
   199d0:	ldrb	r0, [r8]
   199d4:	cmp	r0, #91	; 0x5b
   199d8:	bne	19a00 <main@@Base+0x3b64>
   199dc:	add	r1, r8, #1
   199e0:	sub	r0, r6, r1
   199e4:	cmp	r0, #2
   199e8:	blt	1ae18 <main@@Base+0x4f7c>
   199ec:	ldrb	r0, [r1]
   199f0:	cmp	r0, #32
   199f4:	bls	1ae08 <main@@Base+0x4f6c>
   199f8:	mov	r8, r1
   199fc:	b	1ae28 <main@@Base+0x4f8c>
   19a00:	mov	r0, sl
   19a04:	mov	r1, r8
   19a08:	mov	r2, r6
   19a0c:	mov	r3, #22
   19a10:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19a14:	mov	r8, r0
   19a18:	ldr	r0, [sl]
   19a1c:	bl	300b4 <flatcc_builder_end_vector@@Base>
   19a20:	cmp	r0, #0
   19a24:	str	r0, [sp, #44]	; 0x2c
   19a28:	beq	16888 <main@@Base+0x9ec>
   19a2c:	ldr	r0, [sl]
   19a30:	mov	r1, #24
   19a34:	b	1fa58 <main@@Base+0x9bbc>
   19a38:	bne	19a48 <main@@Base+0x3bac>
   19a3c:	ldrb	r0, [r8, #11]!
   19a40:	cmp	r0, #32
   19a44:	bhi	19a58 <main@@Base+0x3bbc>
   19a48:	mov	r0, sl
   19a4c:	mov	r2, r6
   19a50:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19a54:	mov	r8, r0
   19a58:	cmp	r8, r6
   19a5c:	beq	19a98 <main@@Base+0x3bfc>
   19a60:	ldrb	r0, [r8]
   19a64:	cmp	r0, #58	; 0x3a
   19a68:	bne	19a98 <main@@Base+0x3bfc>
   19a6c:	add	r1, r8, #1
   19a70:	sub	r0, r6, r1
   19a74:	cmp	r0, #2
   19a78:	blt	1c694 <main@@Base+0x67f8>
   19a7c:	ldrb	r0, [r1]
   19a80:	cmp	r0, #32
   19a84:	bls	1c684 <main@@Base+0x67e8>
   19a88:	mov	r8, r1
   19a8c:	cmp	r7, r8
   19a90:	bne	1c6ac <main@@Base+0x6810>
   19a94:	b	1e9b4 <main@@Base+0x8b18>
   19a98:	mov	r0, sl
   19a9c:	mov	r1, r8
   19aa0:	mov	r2, r6
   19aa4:	mov	r3, #4
   19aa8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19aac:	b	1c6a0 <main@@Base+0x6804>
   19ab0:	bne	19ac0 <main@@Base+0x3c24>
   19ab4:	ldrb	r0, [r8, #11]!
   19ab8:	cmp	r0, #32
   19abc:	bhi	19ad0 <main@@Base+0x3c34>
   19ac0:	mov	r0, sl
   19ac4:	mov	r2, r6
   19ac8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19acc:	mov	r8, r0
   19ad0:	cmp	r8, r6
   19ad4:	beq	19b10 <main@@Base+0x3c74>
   19ad8:	ldrb	r0, [r8]
   19adc:	cmp	r0, #58	; 0x3a
   19ae0:	bne	19b10 <main@@Base+0x3c74>
   19ae4:	add	r1, r8, #1
   19ae8:	sub	r0, r6, r1
   19aec:	cmp	r0, #2
   19af0:	blt	1c794 <main@@Base+0x68f8>
   19af4:	ldrb	r0, [r1]
   19af8:	cmp	r0, #32
   19afc:	bls	1c784 <main@@Base+0x68e8>
   19b00:	mov	r8, r1
   19b04:	cmp	r7, r8
   19b08:	bne	1c7ac <main@@Base+0x6910>
   19b0c:	b	1e9b4 <main@@Base+0x8b18>
   19b10:	mov	r0, sl
   19b14:	mov	r1, r8
   19b18:	mov	r2, r6
   19b1c:	mov	r3, #4
   19b20:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19b24:	b	1c7a0 <main@@Base+0x6904>
   19b28:	andeq	r3, r4, r0, asr #10
   19b2c:	bne	19b3c <main@@Base+0x3ca0>
   19b30:	ldrb	r0, [r7, #2]!
   19b34:	cmp	r0, #32
   19b38:	bhi	19b4c <main@@Base+0x3cb0>
   19b3c:	mov	r0, sl
   19b40:	mov	r2, r6
   19b44:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19b48:	mov	r7, r0
   19b4c:	cmp	r8, r7
   19b50:	beq	19434 <main@@Base+0x3598>
   19b54:	mov	r4, #0
   19b58:	cmp	r7, r6
   19b5c:	str	r4, [fp, #-52]	; 0xffffffcc
   19b60:	str	r4, [fp, #-56]	; 0xffffffc8
   19b64:	strh	r4, [sp, #60]	; 0x3c
   19b68:	str	r4, [sp, #48]	; 0x30
   19b6c:	beq	19bd0 <main@@Base+0x3d34>
   19b70:	sub	r0, fp, #56	; 0x38
   19b74:	mov	r1, r7
   19b78:	mov	r2, r6
   19b7c:	add	r3, sp, #48	; 0x30
   19b80:	str	r0, [sp]
   19b84:	mov	r0, sl
   19b88:	bl	363e0 <flatcc_json_parser_integer@@Base>
   19b8c:	cmp	r0, r7
   19b90:	beq	19be0 <main@@Base+0x3d44>
   19b94:	ldr	r2, [sp, #48]	; 0x30
   19b98:	mov	r9, r0
   19b9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19ba0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19ba4:	cmp	r2, #0
   19ba8:	beq	19bf0 <main@@Base+0x3d54>
   19bac:	movw	r2, #32769	; 0x8001
   19bb0:	subs	r2, r0, r2
   19bb4:	sbcs	r1, r1, #0
   19bb8:	bcc	19c20 <main@@Base+0x3d84>
   19bbc:	mov	r0, sl
   19bc0:	mov	r1, r9
   19bc4:	mov	r2, r6
   19bc8:	mov	r3, #8
   19bcc:	b	19c0c <main@@Base+0x3d70>
   19bd0:	mov	r9, r6
   19bd4:	cmp	r7, r9
   19bd8:	bne	19c70 <main@@Base+0x3dd4>
   19bdc:	b	19c38 <main@@Base+0x3d9c>
   19be0:	mov	r9, r7
   19be4:	cmp	r7, r9
   19be8:	bne	19c70 <main@@Base+0x3dd4>
   19bec:	b	19c38 <main@@Base+0x3d9c>
   19bf0:	subs	r2, r0, #32768	; 0x8000
   19bf4:	sbcs	r1, r1, #0
   19bf8:	bcc	19c28 <main@@Base+0x3d8c>
   19bfc:	mov	r0, sl
   19c00:	mov	r1, r9
   19c04:	mov	r2, r6
   19c08:	mov	r3, #7
   19c0c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19c10:	mov	r9, r0
   19c14:	cmp	r7, r9
   19c18:	bne	19c70 <main@@Base+0x3dd4>
   19c1c:	b	19c38 <main@@Base+0x3d9c>
   19c20:	rsb	r4, r0, #0
   19c24:	b	19c2c <main@@Base+0x3d90>
   19c28:	mov	r4, r0
   19c2c:	strh	r4, [sp, #60]	; 0x3c
   19c30:	cmp	r7, r9
   19c34:	bne	19c70 <main@@Base+0x3dd4>
   19c38:	add	r0, sp, #60	; 0x3c
   19c3c:	mov	r1, r7
   19c40:	mov	r2, r6
   19c44:	str	r0, [sp]
   19c48:	mov	r0, sl
   19c4c:	ldr	r3, [pc, #4024]	; 1ac0c <main@@Base+0x4d70>
   19c50:	add	r3, pc, r3
   19c54:	bl	21fd4 <main@@Base+0xc138>
   19c58:	mov	r9, r0
   19c5c:	cmp	r0, r7
   19c60:	beq	1fbf0 <main@@Base+0x9d54>
   19c64:	cmp	r9, r6
   19c68:	beq	1fbf0 <main@@Base+0x9d54>
   19c6c:	ldrh	r4, [sp, #60]	; 0x3c
   19c70:	uxth	r0, r4
   19c74:	cmp	r0, #100	; 0x64
   19c78:	ldrbeq	r0, [sl, #8]
   19c7c:	tsteq	r0, #2
   19c80:	beq	1e9c8 <main@@Base+0x8b2c>
   19c84:	ldr	r0, [sl]
   19c88:	mov	r1, #2
   19c8c:	mov	r2, #2
   19c90:	mov	r3, #2
   19c94:	bl	307e4 <flatcc_builder_table_add@@Base>
   19c98:	cmp	r0, #0
   19c9c:	bne	1b648 <main@@Base+0x57ac>
   19ca0:	b	1fbf0 <main@@Base+0x9d54>
   19ca4:	bne	19cb4 <main@@Base+0x3e18>
   19ca8:	ldrb	r0, [r9, #2]!
   19cac:	cmp	r0, #32
   19cb0:	bhi	19cc4 <main@@Base+0x3e28>
   19cb4:	mov	r0, sl
   19cb8:	mov	r2, r6
   19cbc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19cc0:	mov	r9, r0
   19cc4:	cmp	r8, r9
   19cc8:	beq	19434 <main@@Base+0x3598>
   19ccc:	ldr	r0, [sl]
   19cd0:	mov	r1, #0
   19cd4:	mov	r2, #32
   19cd8:	mov	r3, #16
   19cdc:	bl	307e4 <flatcc_builder_table_add@@Base>
   19ce0:	cmp	r0, #0
   19ce4:	beq	1fc48 <main@@Base+0x9dac>
   19ce8:	cmp	r9, r6
   19cec:	beq	19d24 <main@@Base+0x3e88>
   19cf0:	mov	sl, r0
   19cf4:	ldrb	r0, [r9]
   19cf8:	cmp	r0, #123	; 0x7b
   19cfc:	bne	19d24 <main@@Base+0x3e88>
   19d00:	add	r1, r9, #1
   19d04:	sub	r0, r6, r1
   19d08:	cmp	r0, #2
   19d0c:	blt	19d50 <main@@Base+0x3eb4>
   19d10:	ldrb	r0, [r1]
   19d14:	cmp	r0, #32
   19d18:	bls	19d40 <main@@Base+0x3ea4>
   19d1c:	mov	r9, r1
   19d20:	b	19d60 <main@@Base+0x3ec4>
   19d24:	ldr	sl, [sp, #32]
   19d28:	mov	r1, r9
   19d2c:	mov	r2, r6
   19d30:	mov	r3, #21
   19d34:	mov	r0, sl
   19d38:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19d3c:	b	1e9c4 <main@@Base+0x8b28>
   19d40:	bne	19d50 <main@@Base+0x3eb4>
   19d44:	ldrb	r0, [r9, #2]!
   19d48:	cmp	r0, #32
   19d4c:	bhi	19d60 <main@@Base+0x3ec4>
   19d50:	ldr	r0, [sp, #32]
   19d54:	mov	r2, r6
   19d58:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   19d5c:	mov	r9, r0
   19d60:	cmp	r9, r6
   19d64:	mov	r2, r6
   19d68:	beq	19db4 <main@@Base+0x3f18>
   19d6c:	ldrb	r0, [r9]
   19d70:	cmp	r0, #125	; 0x7d
   19d74:	bne	19db0 <main@@Base+0x3f14>
   19d78:	ldr	sl, [sp, #32]
   19d7c:	add	r1, r9, #1
   19d80:	sub	r0, r6, r1
   19d84:	cmp	r0, #2
   19d88:	blt	1d62c <main@@Base+0x7790>
   19d8c:	ldrb	r0, [r1]
   19d90:	cmp	r0, #32
   19d94:	bhi	1a8d0 <main@@Base+0x4a34>
   19d98:	bne	1d62c <main@@Base+0x7790>
   19d9c:	ldrb	r0, [r9, #2]!
   19da0:	cmp	r0, #32
   19da4:	bls	1d62c <main@@Base+0x7790>
   19da8:	b	1e9c8 <main@@Base+0x8b2c>
   19dac:	andeq	r3, r4, r8, asr #5
   19db0:	mov	r2, r9
   19db4:	add	r0, sl, #26
   19db8:	str	r0, [sp, #16]
   19dbc:	cmp	r2, r6
   19dc0:	mov	r9, r6
   19dc4:	beq	19df4 <main@@Base+0x3f58>
   19dc8:	ldrb	r0, [r2]
   19dcc:	cmp	r0, #34	; 0x22
   19dd0:	bne	19ddc <main@@Base+0x3f40>
   19dd4:	add	r9, r2, #1
   19dd8:	b	19df4 <main@@Base+0x3f58>
   19ddc:	ldr	r0, [sp, #32]
   19de0:	mov	r1, r2
   19de4:	mov	r2, r6
   19de8:	mov	r3, #5
   19dec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   19df0:	mov	r9, r0
   19df4:	sub	ip, r6, r9
   19df8:	mov	r0, #8
   19dfc:	cmp	ip, #8
   19e00:	movcc	r0, ip
   19e04:	and	r0, r0, #15
   19e08:	sub	r0, r0, #1
   19e0c:	cmp	r0, #7
   19e10:	bhi	1a7d8 <main@@Base+0x493c>
   19e14:	add	r2, pc, #36	; 0x24
   19e18:	mov	r1, #0
   19e1c:	mov	lr, #0
   19e20:	mov	r8, #0
   19e24:	mov	r7, #0
   19e28:	mov	r3, #0
   19e2c:	mov	r6, #0
   19e30:	mov	r4, #0
   19e34:	ldr	r5, [r2, r0, lsl #2]
   19e38:	mov	r0, #0
   19e3c:	add	pc, r2, r5
   19e40:	andeq	r0, r0, r4, rrx
   19e44:	andeq	r0, r0, ip, asr r0
   19e48:	andeq	r0, r0, r4, asr r0
   19e4c:	andeq	r0, r0, ip, asr #32
   19e50:	andeq	r0, r0, r0, asr #32
   19e54:	andeq	r0, r0, r4, lsr r0
   19e58:	andeq	r0, r0, r4, lsr #32
   19e5c:	andeq	r0, r0, r0, lsr #32
   19e60:	ldrb	lr, [r9, #7]
   19e64:	ldrb	r0, [r9, #6]
   19e68:	mov	r8, r1
   19e6c:	orr	r0, lr, r0, lsl #8
   19e70:	mov	r1, r0
   19e74:	ldrb	r0, [r9, #5]
   19e78:	mov	r7, r8
   19e7c:	orr	r1, r1, r0, lsl #16
   19e80:	ldrb	r0, [r9, #4]
   19e84:	mov	r3, r7
   19e88:	orr	r1, r1, r0, lsl #24
   19e8c:	ldrb	r0, [r9, #3]
   19e90:	orr	r6, r0, r3
   19e94:	ldrb	r0, [r9, #2]
   19e98:	orr	r4, r6, r0, lsl #8
   19e9c:	ldrb	r0, [r9, #1]
   19ea0:	orr	r0, r4, r0, lsl #16
   19ea4:	ldrb	r2, [r9]
   19ea8:	movw	r3, #29556	; 0x7374
   19eac:	movt	r3, #29797	; 0x7465
   19eb0:	orr	r2, r0, r2, lsl #24
   19eb4:	mvn	r0, #-855638016	; 0xcd000000
   19eb8:	subs	r0, r0, r1
   19ebc:	sbcs	r0, r3, r2
   19ec0:	bcc	19f34 <main@@Base+0x4098>
   19ec4:	ldr	r6, [sp, #36]	; 0x24
   19ec8:	and	r1, r1, #-16777216	; 0xff000000
   19ecc:	eor	r0, r2, r3
   19ed0:	eor	r2, r1, #822083584	; 0x31000000
   19ed4:	orrs	r2, r2, r0
   19ed8:	beq	1a000 <main@@Base+0x4164>
   19edc:	eor	r1, r1, #838860800	; 0x32000000
   19ee0:	orrs	r0, r1, r0
   19ee4:	bne	1a7d8 <main@@Base+0x493c>
   19ee8:	cmp	ip, #6
   19eec:	mov	r7, r9
   19ef0:	blt	1a318 <main@@Base+0x447c>
   19ef4:	ldrb	r0, [r9, #5]
   19ef8:	mov	r7, r9
   19efc:	cmp	r0, #34	; 0x22
   19f00:	bne	1a318 <main@@Base+0x447c>
   19f04:	add	r1, r9, #6
   19f08:	sub	r0, r6, r1
   19f0c:	cmp	r0, #2
   19f10:	blt	1a104 <main@@Base+0x4268>
   19f14:	ldrb	r0, [r1]
   19f18:	cmp	r0, #32
   19f1c:	bls	1a0f0 <main@@Base+0x4254>
   19f20:	mov	r7, r1
   19f24:	cmp	r7, r6
   19f28:	bne	1a11c <main@@Base+0x4280>
   19f2c:	b	1a158 <main@@Base+0x42bc>
   19f30:	andeq	r9, r0, r0, lsr r9
   19f34:	ldr	r6, [sp, #36]	; 0x24
   19f38:	cmn	r2, #-2013265919	; 0x88000001
   19f3c:	bhi	19f9c <main@@Base+0x4100>
   19f40:	and	r1, r1, #-16777216	; 0xff000000
   19f44:	eor	r0, r2, r3
   19f48:	eor	r1, r1, #855638016	; 0x33000000
   19f4c:	orrs	r0, r1, r0
   19f50:	bne	1a7d8 <main@@Base+0x493c>
   19f54:	cmp	ip, #6
   19f58:	mov	r1, r9
   19f5c:	blt	1a608 <main@@Base+0x476c>
   19f60:	ldrb	r0, [r9, #5]
   19f64:	mov	r1, r9
   19f68:	cmp	r0, #34	; 0x22
   19f6c:	bne	1a608 <main@@Base+0x476c>
   19f70:	add	r2, r9, #6
   19f74:	sub	r0, r6, r2
   19f78:	cmp	r0, #2
   19f7c:	blt	1a204 <main@@Base+0x4368>
   19f80:	ldrb	r0, [r2]
   19f84:	cmp	r0, #32
   19f88:	bls	1a1f0 <main@@Base+0x4354>
   19f8c:	mov	r1, r2
   19f90:	cmp	r1, r6
   19f94:	bne	1a220 <main@@Base+0x4384>
   19f98:	b	1a25c <main@@Base+0x43c0>
   19f9c:	lsr	r0, r2, #24
   19fa0:	and	r1, r2, #-16777216	; 0xff000000
   19fa4:	cmp	r0, #120	; 0x78
   19fa8:	bhi	1a048 <main@@Base+0x41ac>
   19fac:	teq	r1, #2013265920	; 0x78000000
   19fb0:	bne	1a7d8 <main@@Base+0x493c>
   19fb4:	cmp	ip, #2
   19fb8:	mov	r7, r9
   19fbc:	blt	1a648 <main@@Base+0x47ac>
   19fc0:	ldrb	r0, [r9, #1]
   19fc4:	mov	r7, r9
   19fc8:	cmp	r0, #34	; 0x22
   19fcc:	bne	1a648 <main@@Base+0x47ac>
   19fd0:	add	r1, r9, #2
   19fd4:	sub	r0, r6, r1
   19fd8:	cmp	r0, #2
   19fdc:	blt	1a288 <main@@Base+0x43ec>
   19fe0:	ldrb	r0, [r1]
   19fe4:	cmp	r0, #32
   19fe8:	bls	1a270 <main@@Base+0x43d4>
   19fec:	ldr	r6, [sp, #36]	; 0x24
   19ff0:	mov	r7, r1
   19ff4:	cmp	r7, r6
   19ff8:	bne	1a2a0 <main@@Base+0x4404>
   19ffc:	b	1a2dc <main@@Base+0x4440>
   1a000:	cmp	ip, #6
   1a004:	mov	r7, r9
   1a008:	blt	1a458 <main@@Base+0x45bc>
   1a00c:	ldrb	r0, [r9, #5]
   1a010:	mov	r7, r9
   1a014:	cmp	r0, #34	; 0x22
   1a018:	bne	1a458 <main@@Base+0x45bc>
   1a01c:	add	r1, r9, #6
   1a020:	sub	r0, r6, r1
   1a024:	cmp	r0, #2
   1a028:	blt	1a184 <main@@Base+0x42e8>
   1a02c:	ldrb	r0, [r1]
   1a030:	cmp	r0, #32
   1a034:	bls	1a170 <main@@Base+0x42d4>
   1a038:	mov	r7, r1
   1a03c:	cmp	r7, r6
   1a040:	bne	1a19c <main@@Base+0x4300>
   1a044:	b	1a1d8 <main@@Base+0x433c>
   1a048:	teq	r1, #2030043136	; 0x79000000
   1a04c:	beq	1a0a4 <main@@Base+0x4208>
   1a050:	teq	r1, #2046820352	; 0x7a000000
   1a054:	bne	1a7d8 <main@@Base+0x493c>
   1a058:	cmp	ip, #2
   1a05c:	mov	r7, r9
   1a060:	blt	1a6dc <main@@Base+0x4840>
   1a064:	ldrb	r0, [r9, #1]
   1a068:	mov	r7, r9
   1a06c:	cmp	r0, #34	; 0x22
   1a070:	bne	1a6dc <main@@Base+0x4840>
   1a074:	add	r1, r9, #2
   1a078:	sub	r0, r6, r1
   1a07c:	cmp	r0, #2
   1a080:	blt	1a4e0 <main@@Base+0x4644>
   1a084:	ldrb	r0, [r1]
   1a088:	cmp	r0, #32
   1a08c:	bls	1a4c8 <main@@Base+0x462c>
   1a090:	ldr	r6, [sp, #36]	; 0x24
   1a094:	mov	r7, r1
   1a098:	cmp	r7, r6
   1a09c:	bne	1a4f8 <main@@Base+0x465c>
   1a0a0:	b	1a538 <main@@Base+0x469c>
   1a0a4:	cmp	ip, #2
   1a0a8:	mov	r7, r9
   1a0ac:	blt	1a76c <main@@Base+0x48d0>
   1a0b0:	ldrb	r0, [r9, #1]
   1a0b4:	mov	r7, r9
   1a0b8:	cmp	r0, #34	; 0x22
   1a0bc:	bne	1a76c <main@@Base+0x48d0>
   1a0c0:	add	r1, r9, #2
   1a0c4:	sub	r0, r6, r1
   1a0c8:	cmp	r0, #2
   1a0cc:	blt	1a56c <main@@Base+0x46d0>
   1a0d0:	ldrb	r0, [r1]
   1a0d4:	cmp	r0, #32
   1a0d8:	bls	1a554 <main@@Base+0x46b8>
   1a0dc:	ldr	r6, [sp, #36]	; 0x24
   1a0e0:	mov	r7, r1
   1a0e4:	cmp	r7, r6
   1a0e8:	bne	1a584 <main@@Base+0x46e8>
   1a0ec:	b	1a5c4 <main@@Base+0x4728>
   1a0f0:	bne	1a104 <main@@Base+0x4268>
   1a0f4:	mov	r7, r9
   1a0f8:	ldrb	r0, [r7, #7]!
   1a0fc:	cmp	r0, #32
   1a100:	bhi	1a114 <main@@Base+0x4278>
   1a104:	ldr	r0, [sp, #32]
   1a108:	mov	r2, r6
   1a10c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a110:	mov	r7, r0
   1a114:	cmp	r7, r6
   1a118:	beq	1a158 <main@@Base+0x42bc>
   1a11c:	ldrb	r0, [r7]
   1a120:	cmp	r0, #58	; 0x3a
   1a124:	bne	1a158 <main@@Base+0x42bc>
   1a128:	add	r1, r7, #1
   1a12c:	sub	r0, r6, r1
   1a130:	cmp	r0, #2
   1a134:	blt	1a308 <main@@Base+0x446c>
   1a138:	ldrb	r0, [r1]
   1a13c:	cmp	r0, #32
   1a140:	bls	1a2f4 <main@@Base+0x4458>
   1a144:	ldr	r6, [sp, #36]	; 0x24
   1a148:	mov	r7, r1
   1a14c:	cmp	r9, r7
   1a150:	bne	1a320 <main@@Base+0x4484>
   1a154:	b	1a7d8 <main@@Base+0x493c>
   1a158:	ldr	r0, [sp, #32]
   1a15c:	mov	r1, r7
   1a160:	mov	r2, r6
   1a164:	mov	r3, #4
   1a168:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a16c:	b	1a314 <main@@Base+0x4478>
   1a170:	bne	1a184 <main@@Base+0x42e8>
   1a174:	mov	r7, r9
   1a178:	ldrb	r0, [r7, #7]!
   1a17c:	cmp	r0, #32
   1a180:	bhi	1a194 <main@@Base+0x42f8>
   1a184:	ldr	r0, [sp, #32]
   1a188:	mov	r2, r6
   1a18c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a190:	mov	r7, r0
   1a194:	cmp	r7, r6
   1a198:	beq	1a1d8 <main@@Base+0x433c>
   1a19c:	ldrb	r0, [r7]
   1a1a0:	cmp	r0, #58	; 0x3a
   1a1a4:	bne	1a1d8 <main@@Base+0x433c>
   1a1a8:	add	r1, r7, #1
   1a1ac:	sub	r0, r6, r1
   1a1b0:	cmp	r0, #2
   1a1b4:	blt	1a448 <main@@Base+0x45ac>
   1a1b8:	ldrb	r0, [r1]
   1a1bc:	cmp	r0, #32
   1a1c0:	bls	1a434 <main@@Base+0x4598>
   1a1c4:	ldr	r6, [sp, #36]	; 0x24
   1a1c8:	mov	r7, r1
   1a1cc:	cmp	r9, r7
   1a1d0:	bne	1a460 <main@@Base+0x45c4>
   1a1d4:	b	1a7d8 <main@@Base+0x493c>
   1a1d8:	ldr	r0, [sp, #32]
   1a1dc:	mov	r1, r7
   1a1e0:	mov	r2, r6
   1a1e4:	mov	r3, #4
   1a1e8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a1ec:	b	1a454 <main@@Base+0x45b8>
   1a1f0:	bne	1a204 <main@@Base+0x4368>
   1a1f4:	mov	r1, r9
   1a1f8:	ldrb	r0, [r1, #7]!
   1a1fc:	cmp	r0, #32
   1a200:	bhi	1a218 <main@@Base+0x437c>
   1a204:	ldr	r0, [sp, #32]
   1a208:	mov	r1, r2
   1a20c:	mov	r2, r6
   1a210:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a214:	mov	r1, r0
   1a218:	cmp	r1, r6
   1a21c:	beq	1a25c <main@@Base+0x43c0>
   1a220:	ldrb	r0, [r1]
   1a224:	cmp	r0, #58	; 0x3a
   1a228:	bne	1a25c <main@@Base+0x43c0>
   1a22c:	add	r2, r1, #1
   1a230:	sub	r0, r6, r2
   1a234:	cmp	r0, #2
   1a238:	blt	1a5f4 <main@@Base+0x4758>
   1a23c:	ldrb	r0, [r2]
   1a240:	cmp	r0, #32
   1a244:	bls	1a5e0 <main@@Base+0x4744>
   1a248:	ldr	r6, [sp, #36]	; 0x24
   1a24c:	mov	r1, r2
   1a250:	cmp	r9, r1
   1a254:	bne	1a610 <main@@Base+0x4774>
   1a258:	b	1a7d8 <main@@Base+0x493c>
   1a25c:	ldr	r0, [sp, #32]
   1a260:	mov	r2, r6
   1a264:	mov	r3, #4
   1a268:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a26c:	b	1a604 <main@@Base+0x4768>
   1a270:	ldr	r6, [sp, #36]	; 0x24
   1a274:	bne	1a288 <main@@Base+0x43ec>
   1a278:	mov	r7, r9
   1a27c:	ldrb	r0, [r7, #3]!
   1a280:	cmp	r0, #32
   1a284:	bhi	1a298 <main@@Base+0x43fc>
   1a288:	ldr	r0, [sp, #32]
   1a28c:	mov	r2, r6
   1a290:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a294:	mov	r7, r0
   1a298:	cmp	r7, r6
   1a29c:	beq	1a2dc <main@@Base+0x4440>
   1a2a0:	ldrb	r0, [r7]
   1a2a4:	cmp	r0, #58	; 0x3a
   1a2a8:	bne	1a2dc <main@@Base+0x4440>
   1a2ac:	add	r1, r7, #1
   1a2b0:	sub	r0, r6, r1
   1a2b4:	cmp	r0, #2
   1a2b8:	blt	1a638 <main@@Base+0x479c>
   1a2bc:	ldrb	r0, [r1]
   1a2c0:	cmp	r0, #32
   1a2c4:	bls	1a624 <main@@Base+0x4788>
   1a2c8:	ldr	r6, [sp, #36]	; 0x24
   1a2cc:	mov	r7, r1
   1a2d0:	cmp	r9, r7
   1a2d4:	bne	1a650 <main@@Base+0x47b4>
   1a2d8:	b	1a7d8 <main@@Base+0x493c>
   1a2dc:	ldr	r0, [sp, #32]
   1a2e0:	mov	r1, r7
   1a2e4:	mov	r2, r6
   1a2e8:	mov	r3, #4
   1a2ec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a2f0:	b	1a644 <main@@Base+0x47a8>
   1a2f4:	ldr	r6, [sp, #36]	; 0x24
   1a2f8:	bne	1a308 <main@@Base+0x446c>
   1a2fc:	ldrb	r0, [r7, #2]!
   1a300:	cmp	r0, #32
   1a304:	bhi	1a318 <main@@Base+0x447c>
   1a308:	ldr	r0, [sp, #32]
   1a30c:	mov	r2, r6
   1a310:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a314:	mov	r7, r0
   1a318:	cmp	r9, r7
   1a31c:	beq	1a7d8 <main@@Base+0x493c>
   1a320:	mov	r5, #0
   1a324:	cmp	r7, r6
   1a328:	str	r5, [fp, #-52]	; 0xffffffcc
   1a32c:	str	r5, [fp, #-56]	; 0xffffffc8
   1a330:	strb	r5, [sp, #60]	; 0x3c
   1a334:	str	r5, [sp, #48]	; 0x30
   1a338:	beq	1a394 <main@@Base+0x44f8>
   1a33c:	sub	r0, fp, #56	; 0x38
   1a340:	mov	r1, r7
   1a344:	mov	r2, r6
   1a348:	add	r3, sp, #48	; 0x30
   1a34c:	str	r0, [sp]
   1a350:	ldr	r0, [sp, #32]
   1a354:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1a358:	cmp	r0, r7
   1a35c:	beq	1a3a4 <main@@Base+0x4508>
   1a360:	ldr	r3, [sp, #48]	; 0x30
   1a364:	mov	r1, r0
   1a368:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a36c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a370:	cmp	r3, #0
   1a374:	beq	1a3b4 <main@@Base+0x4518>
   1a378:	subs	r3, r0, #129	; 0x81
   1a37c:	sbcs	r2, r2, #0
   1a380:	bcc	1a3e0 <main@@Base+0x4544>
   1a384:	ldr	r0, [sp, #32]
   1a388:	mov	r2, r6
   1a38c:	mov	r3, #8
   1a390:	b	1a3cc <main@@Base+0x4530>
   1a394:	mov	r1, r6
   1a398:	cmp	r7, r1
   1a39c:	bne	1a42c <main@@Base+0x4590>
   1a3a0:	b	1a3f8 <main@@Base+0x455c>
   1a3a4:	mov	r1, r7
   1a3a8:	cmp	r7, r1
   1a3ac:	bne	1a42c <main@@Base+0x4590>
   1a3b0:	b	1a3f8 <main@@Base+0x455c>
   1a3b4:	subs	r3, r0, #128	; 0x80
   1a3b8:	sbcs	r2, r2, #0
   1a3bc:	bcc	1a3e8 <main@@Base+0x454c>
   1a3c0:	ldr	r0, [sp, #32]
   1a3c4:	mov	r2, r6
   1a3c8:	mov	r3, #7
   1a3cc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a3d0:	mov	r1, r0
   1a3d4:	cmp	r7, r1
   1a3d8:	bne	1a42c <main@@Base+0x4590>
   1a3dc:	b	1a3f8 <main@@Base+0x455c>
   1a3e0:	rsb	r5, r0, #0
   1a3e4:	b	1a3ec <main@@Base+0x4550>
   1a3e8:	mov	r5, r0
   1a3ec:	strb	r5, [sp, #60]	; 0x3c
   1a3f0:	cmp	r7, r1
   1a3f4:	bne	1a42c <main@@Base+0x4590>
   1a3f8:	add	r0, sp, #60	; 0x3c
   1a3fc:	mov	r1, r7
   1a400:	mov	r2, r6
   1a404:	str	r0, [sp]
   1a408:	ldr	r0, [sp, #32]
   1a40c:	ldr	r3, [pc, #3996]	; 1b3b0 <main@@Base+0x5514>
   1a410:	add	r3, pc, r3
   1a414:	bl	21c04 <main@@Base+0xbd68>
   1a418:	mov	r1, r0
   1a41c:	cmp	r0, r7
   1a420:	cmpne	r1, r6
   1a424:	beq	1a8d8 <main@@Base+0x4a3c>
   1a428:	ldrb	r5, [sp, #60]	; 0x3c
   1a42c:	strb	r5, [sl, #24]
   1a430:	b	1a7ec <main@@Base+0x4950>
   1a434:	ldr	r6, [sp, #36]	; 0x24
   1a438:	bne	1a448 <main@@Base+0x45ac>
   1a43c:	ldrb	r0, [r7, #2]!
   1a440:	cmp	r0, #32
   1a444:	bhi	1a458 <main@@Base+0x45bc>
   1a448:	ldr	r0, [sp, #32]
   1a44c:	mov	r2, r6
   1a450:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a454:	mov	r7, r0
   1a458:	cmp	r9, r7
   1a45c:	beq	1a7d8 <main@@Base+0x493c>
   1a460:	mov	r0, #0
   1a464:	mov	r1, r7
   1a468:	mov	r2, r6
   1a46c:	sub	r3, fp, #56	; 0x38
   1a470:	str	r0, [fp, #-52]	; 0xffffffcc
   1a474:	str	r0, [fp, #-56]	; 0xffffffc8
   1a478:	ldr	r0, [sp, #32]
   1a47c:	bl	358c0 <flatcc_json_parser_double@@Base>
   1a480:	mov	r1, r0
   1a484:	cmp	r7, r0
   1a488:	bne	1a4bc <main@@Base+0x4620>
   1a48c:	sub	r0, fp, #56	; 0x38
   1a490:	mov	r1, r7
   1a494:	mov	r2, r6
   1a498:	str	r0, [sp]
   1a49c:	ldr	r0, [sp, #32]
   1a4a0:	ldr	r3, [pc, #4032]	; 1b468 <main@@Base+0x55cc>
   1a4a4:	add	r3, pc, r3
   1a4a8:	bl	24758 <main@@Base+0xe8bc>
   1a4ac:	mov	r1, r0
   1a4b0:	cmp	r0, r7
   1a4b4:	cmpne	r1, r6
   1a4b8:	beq	1a8d8 <main@@Base+0x4a3c>
   1a4bc:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1a4c0:	vstr	d16, [sl, #16]
   1a4c4:	b	1a7ec <main@@Base+0x4950>
   1a4c8:	ldr	r6, [sp, #36]	; 0x24
   1a4cc:	bne	1a4e0 <main@@Base+0x4644>
   1a4d0:	mov	r7, r9
   1a4d4:	ldrb	r0, [r7, #3]!
   1a4d8:	cmp	r0, #32
   1a4dc:	bhi	1a4f0 <main@@Base+0x4654>
   1a4e0:	ldr	r0, [sp, #32]
   1a4e4:	mov	r2, r6
   1a4e8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a4ec:	mov	r7, r0
   1a4f0:	cmp	r7, r6
   1a4f4:	beq	1a538 <main@@Base+0x469c>
   1a4f8:	ldrb	r0, [r7]
   1a4fc:	cmp	r0, #58	; 0x3a
   1a500:	bne	1a538 <main@@Base+0x469c>
   1a504:	ldr	r6, [sp, #36]	; 0x24
   1a508:	add	r1, r7, #1
   1a50c:	sub	r0, r6, r1
   1a510:	cmp	r0, #2
   1a514:	blt	1a6cc <main@@Base+0x4830>
   1a518:	ldrb	r0, [r1]
   1a51c:	cmp	r0, #32
   1a520:	bls	1a6b8 <main@@Base+0x481c>
   1a524:	ldr	r6, [sp, #36]	; 0x24
   1a528:	mov	r7, r1
   1a52c:	cmp	r9, r7
   1a530:	bne	1a6e4 <main@@Base+0x4848>
   1a534:	b	1a7d8 <main@@Base+0x493c>
   1a538:	ldr	r6, [sp, #36]	; 0x24
   1a53c:	ldr	r0, [sp, #32]
   1a540:	mov	r1, r7
   1a544:	mov	r3, #4
   1a548:	mov	r2, r6
   1a54c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a550:	b	1a6d8 <main@@Base+0x483c>
   1a554:	ldr	r6, [sp, #36]	; 0x24
   1a558:	bne	1a56c <main@@Base+0x46d0>
   1a55c:	mov	r7, r9
   1a560:	ldrb	r0, [r7, #3]!
   1a564:	cmp	r0, #32
   1a568:	bhi	1a57c <main@@Base+0x46e0>
   1a56c:	ldr	r0, [sp, #32]
   1a570:	mov	r2, r6
   1a574:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a578:	mov	r7, r0
   1a57c:	cmp	r7, r6
   1a580:	beq	1a5c4 <main@@Base+0x4728>
   1a584:	ldrb	r0, [r7]
   1a588:	cmp	r0, #58	; 0x3a
   1a58c:	bne	1a5c4 <main@@Base+0x4728>
   1a590:	ldr	r6, [sp, #36]	; 0x24
   1a594:	add	r1, r7, #1
   1a598:	sub	r0, r6, r1
   1a59c:	cmp	r0, #2
   1a5a0:	blt	1a75c <main@@Base+0x48c0>
   1a5a4:	ldrb	r0, [r1]
   1a5a8:	cmp	r0, #32
   1a5ac:	bls	1a748 <main@@Base+0x48ac>
   1a5b0:	ldr	r6, [sp, #36]	; 0x24
   1a5b4:	mov	r7, r1
   1a5b8:	cmp	r9, r7
   1a5bc:	bne	1a774 <main@@Base+0x48d8>
   1a5c0:	b	1a7d8 <main@@Base+0x493c>
   1a5c4:	ldr	r6, [sp, #36]	; 0x24
   1a5c8:	ldr	r0, [sp, #32]
   1a5cc:	mov	r1, r7
   1a5d0:	mov	r3, #4
   1a5d4:	mov	r2, r6
   1a5d8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a5dc:	b	1a768 <main@@Base+0x48cc>
   1a5e0:	ldr	r6, [sp, #36]	; 0x24
   1a5e4:	bne	1a5f4 <main@@Base+0x4758>
   1a5e8:	ldrb	r0, [r1, #2]!
   1a5ec:	cmp	r0, #32
   1a5f0:	bhi	1a608 <main@@Base+0x476c>
   1a5f4:	ldr	r0, [sp, #32]
   1a5f8:	mov	r1, r2
   1a5fc:	mov	r2, r6
   1a600:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a604:	mov	r1, r0
   1a608:	cmp	r9, r1
   1a60c:	beq	1a7d8 <main@@Base+0x493c>
   1a610:	ldr	r0, [sp, #32]
   1a614:	ldr	r3, [sp, #16]
   1a618:	mov	r2, r6
   1a61c:	bl	221c4 <main@@Base+0xc328>
   1a620:	b	1a7e8 <main@@Base+0x494c>
   1a624:	ldr	r6, [sp, #36]	; 0x24
   1a628:	bne	1a638 <main@@Base+0x479c>
   1a62c:	ldrb	r0, [r7, #2]!
   1a630:	cmp	r0, #32
   1a634:	bhi	1a648 <main@@Base+0x47ac>
   1a638:	ldr	r0, [sp, #32]
   1a63c:	mov	r2, r6
   1a640:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a644:	mov	r7, r0
   1a648:	cmp	r9, r7
   1a64c:	beq	1a7d8 <main@@Base+0x493c>
   1a650:	mov	r0, #0
   1a654:	mov	r1, r7
   1a658:	mov	r2, r6
   1a65c:	sub	r3, fp, #56	; 0x38
   1a660:	str	r0, [fp, #-56]	; 0xffffffc8
   1a664:	ldr	r0, [sp, #32]
   1a668:	bl	362a0 <flatcc_json_parser_float@@Base>
   1a66c:	mov	r1, r0
   1a670:	cmp	r7, r0
   1a674:	bne	1a6a8 <main@@Base+0x480c>
   1a678:	sub	r0, fp, #56	; 0x38
   1a67c:	mov	r1, r7
   1a680:	mov	r2, r6
   1a684:	str	r0, [sp]
   1a688:	ldr	r0, [sp, #32]
   1a68c:	ldr	r3, [pc, #4028]	; 1b650 <main@@Base+0x57b4>
   1a690:	add	r3, pc, r3
   1a694:	bl	23e50 <main@@Base+0xdfb4>
   1a698:	mov	r1, r0
   1a69c:	cmp	r0, r7
   1a6a0:	cmpne	r1, r6
   1a6a4:	beq	1a8d8 <main@@Base+0x4a3c>
   1a6a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a6ac:	str	r0, [sl]
   1a6b0:	b	1a7ec <main@@Base+0x4950>
   1a6b4:	strdeq	lr, [r2], -ip
   1a6b8:	ldr	r6, [sp, #36]	; 0x24
   1a6bc:	bne	1a6cc <main@@Base+0x4830>
   1a6c0:	ldrb	r0, [r7, #2]!
   1a6c4:	cmp	r0, #32
   1a6c8:	bhi	1a6dc <main@@Base+0x4840>
   1a6cc:	ldr	r0, [sp, #32]
   1a6d0:	mov	r2, r6
   1a6d4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a6d8:	mov	r7, r0
   1a6dc:	cmp	r9, r7
   1a6e0:	beq	1a7d8 <main@@Base+0x493c>
   1a6e4:	mov	r0, #0
   1a6e8:	mov	r1, r7
   1a6ec:	mov	r2, r6
   1a6f0:	sub	r3, fp, #56	; 0x38
   1a6f4:	str	r0, [fp, #-56]	; 0xffffffc8
   1a6f8:	ldr	r0, [sp, #32]
   1a6fc:	bl	362a0 <flatcc_json_parser_float@@Base>
   1a700:	mov	r1, r0
   1a704:	cmp	r7, r0
   1a708:	bne	1a73c <main@@Base+0x48a0>
   1a70c:	sub	r0, fp, #56	; 0x38
   1a710:	mov	r1, r7
   1a714:	mov	r2, r6
   1a718:	str	r0, [sp]
   1a71c:	ldr	r0, [sp, #32]
   1a720:	ldr	r3, [pc, #4052]	; 1b6fc <main@@Base+0x5860>
   1a724:	add	r3, pc, r3
   1a728:	bl	23e50 <main@@Base+0xdfb4>
   1a72c:	mov	r1, r0
   1a730:	cmp	r0, r7
   1a734:	cmpne	r1, r6
   1a738:	beq	1a8d8 <main@@Base+0x4a3c>
   1a73c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a740:	str	r0, [sl, #8]
   1a744:	b	1a7ec <main@@Base+0x4950>
   1a748:	ldr	r6, [sp, #36]	; 0x24
   1a74c:	bne	1a75c <main@@Base+0x48c0>
   1a750:	ldrb	r0, [r7, #2]!
   1a754:	cmp	r0, #32
   1a758:	bhi	1a76c <main@@Base+0x48d0>
   1a75c:	ldr	r0, [sp, #32]
   1a760:	mov	r2, r6
   1a764:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a768:	mov	r7, r0
   1a76c:	cmp	r9, r7
   1a770:	beq	1a7d8 <main@@Base+0x493c>
   1a774:	mov	r0, #0
   1a778:	mov	r1, r7
   1a77c:	mov	r2, r6
   1a780:	sub	r3, fp, #56	; 0x38
   1a784:	str	r0, [fp, #-56]	; 0xffffffc8
   1a788:	ldr	r0, [sp, #32]
   1a78c:	bl	362a0 <flatcc_json_parser_float@@Base>
   1a790:	mov	r1, r0
   1a794:	cmp	r7, r0
   1a798:	bne	1a7cc <main@@Base+0x4930>
   1a79c:	sub	r0, fp, #56	; 0x38
   1a7a0:	mov	r1, r7
   1a7a4:	mov	r2, r6
   1a7a8:	str	r0, [sp]
   1a7ac:	ldr	r0, [sp, #32]
   1a7b0:	ldr	r3, [pc, #4040]	; 1b780 <main@@Base+0x58e4>
   1a7b4:	add	r3, pc, r3
   1a7b8:	bl	23e50 <main@@Base+0xdfb4>
   1a7bc:	mov	r1, r0
   1a7c0:	cmp	r0, r7
   1a7c4:	cmpne	r1, r6
   1a7c8:	beq	1a8d8 <main@@Base+0x4a3c>
   1a7cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a7d0:	str	r0, [sl, #4]
   1a7d4:	b	1a7ec <main@@Base+0x4950>
   1a7d8:	ldr	r0, [sp, #32]
   1a7dc:	mov	r1, r9
   1a7e0:	mov	r2, r6
   1a7e4:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   1a7e8:	mov	r1, r0
   1a7ec:	sub	r0, r6, r1
   1a7f0:	cmp	r0, #2
   1a7f4:	blt	1a82c <main@@Base+0x4990>
   1a7f8:	ldrb	r0, [r1]
   1a7fc:	cmp	r0, #32
   1a800:	bls	1a818 <main@@Base+0x497c>
   1a804:	mov	r2, r1
   1a808:	cmp	r2, r6
   1a80c:	bne	1a844 <main@@Base+0x49a8>
   1a810:	b	1a8f4 <main@@Base+0x4a58>
   1a814:	andeq	r2, r4, ip, asr #17
   1a818:	bne	1a82c <main@@Base+0x4990>
   1a81c:	mov	r2, r1
   1a820:	ldrb	r0, [r2, #1]!
   1a824:	cmp	r0, #32
   1a828:	bhi	1a83c <main@@Base+0x49a0>
   1a82c:	ldr	r0, [sp, #32]
   1a830:	mov	r2, r6
   1a834:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a838:	mov	r2, r0
   1a83c:	cmp	r2, r6
   1a840:	beq	1a8f4 <main@@Base+0x4a58>
   1a844:	ldrb	r0, [r2]
   1a848:	cmp	r0, #44	; 0x2c
   1a84c:	bne	1a900 <main@@Base+0x4a64>
   1a850:	add	r1, r2, #1
   1a854:	sub	r0, r6, r1
   1a858:	cmp	r0, #2
   1a85c:	blt	1a88c <main@@Base+0x49f0>
   1a860:	ldrb	r0, [r1]
   1a864:	cmp	r0, #32
   1a868:	bls	1a87c <main@@Base+0x49e0>
   1a86c:	mov	r2, r1
   1a870:	cmp	r2, r6
   1a874:	bne	1a8a4 <main@@Base+0x4a08>
   1a878:	b	1a938 <main@@Base+0x4a9c>
   1a87c:	bne	1a88c <main@@Base+0x49f0>
   1a880:	ldrb	r0, [r2, #2]!
   1a884:	cmp	r0, #32
   1a888:	bhi	1a89c <main@@Base+0x4a00>
   1a88c:	ldr	r0, [sp, #32]
   1a890:	mov	r2, r6
   1a894:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a898:	mov	r2, r0
   1a89c:	cmp	r2, r6
   1a8a0:	beq	1a938 <main@@Base+0x4a9c>
   1a8a4:	ldrb	r0, [r2]
   1a8a8:	cmp	r0, #125	; 0x7d
   1a8ac:	bne	19dbc <main@@Base+0x3f20>
   1a8b0:	ldr	sl, [sp, #32]
   1a8b4:	add	r1, r2, #1
   1a8b8:	sub	r0, r6, r1
   1a8bc:	cmp	r0, #2
   1a8c0:	blt	1d62c <main@@Base+0x7790>
   1a8c4:	ldrb	r0, [r1]
   1a8c8:	cmp	r0, #32
   1a8cc:	bls	1cb10 <main@@Base+0x6c74>
   1a8d0:	mov	r9, r1
   1a8d4:	b	1e9c8 <main@@Base+0x8b2c>
   1a8d8:	ldr	sl, [sp, #32]
   1a8dc:	ldr	r6, [sp, #36]	; 0x24
   1a8e0:	mov	r3, #33	; 0x21
   1a8e4:	mov	r0, sl
   1a8e8:	mov	r2, r6
   1a8ec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1a8f0:	b	1e9c4 <main@@Base+0x8b28>
   1a8f4:	ldr	sl, [sp, #32]
   1a8f8:	mov	r9, r6
   1a8fc:	b	1e9c8 <main@@Base+0x8b2c>
   1a900:	ldr	sl, [sp, #32]
   1a904:	cmp	r0, #125	; 0x7d
   1a908:	bne	1b288 <main@@Base+0x53ec>
   1a90c:	add	r1, r2, #1
   1a910:	sub	r0, r6, r1
   1a914:	cmp	r0, #2
   1a918:	blt	1d62c <main@@Base+0x7790>
   1a91c:	ldrb	r0, [r1]
   1a920:	cmp	r0, #32
   1a924:	bls	1d610 <main@@Base+0x7774>
   1a928:	ldr	r6, [sp, #36]	; 0x24
   1a92c:	ldr	sl, [sp, #32]
   1a930:	mov	r9, r1
   1a934:	b	1e9c8 <main@@Base+0x8b2c>
   1a938:	ldr	sl, [sp, #32]
   1a93c:	mov	r1, r6
   1a940:	mov	r0, sl
   1a944:	b	1b290 <main@@Base+0x53f4>
   1a948:	bne	1a958 <main@@Base+0x4abc>
   1a94c:	ldrb	r0, [r7, #2]!
   1a950:	cmp	r0, #32
   1a954:	bhi	1a968 <main@@Base+0x4acc>
   1a958:	mov	r0, sl
   1a95c:	mov	r2, r6
   1a960:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1a964:	mov	r7, r0
   1a968:	cmp	r8, r7
   1a96c:	beq	19434 <main@@Base+0x3598>
   1a970:	mov	r0, #0
   1a974:	mov	r1, r7
   1a978:	mov	r2, r6
   1a97c:	sub	r3, fp, #56	; 0x38
   1a980:	str	r0, [fp, #-56]	; 0xffffffc8
   1a984:	mov	r0, sl
   1a988:	bl	362a0 <flatcc_json_parser_float@@Base>
   1a98c:	mov	r9, r0
   1a990:	cmp	r7, r0
   1a994:	bne	1a9c8 <main@@Base+0x4b2c>
   1a998:	sub	r0, fp, #56	; 0x38
   1a99c:	mov	r1, r7
   1a9a0:	mov	r2, r6
   1a9a4:	str	r0, [sp]
   1a9a8:	mov	r0, sl
   1a9ac:	ldr	r3, [pc, #4052]	; 1b988 <main@@Base+0x5aec>
   1a9b0:	add	r3, pc, r3
   1a9b4:	bl	23e50 <main@@Base+0xdfb4>
   1a9b8:	mov	r9, r0
   1a9bc:	cmp	r0, r7
   1a9c0:	cmpne	r9, r6
   1a9c4:	beq	1fbf0 <main@@Base+0x9d54>
   1a9c8:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1a9cc:	vcmp.f32	s0, s16
   1a9d0:	vmrs	APSR_nzcv, fpscr
   1a9d4:	bne	1a9e4 <main@@Base+0x4b48>
   1a9d8:	ldrb	r0, [sl, #8]
   1a9dc:	tst	r0, #2
   1a9e0:	beq	1e9c8 <main@@Base+0x8b2c>
   1a9e4:	ldr	r0, [sl]
   1a9e8:	mov	r1, #26
   1a9ec:	b	18468 <main@@Base+0x25cc>
   1a9f0:	ldr	r4, [sp, #36]	; 0x24
   1a9f4:	bne	1aa08 <main@@Base+0x4b6c>
   1a9f8:	mov	r6, r8
   1a9fc:	ldrb	r0, [r6, #18]!
   1aa00:	cmp	r0, #32
   1aa04:	bhi	1aa18 <main@@Base+0x4b7c>
   1aa08:	mov	r0, sl
   1aa0c:	mov	r2, r4
   1aa10:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1aa14:	mov	r6, r0
   1aa18:	cmp	r6, r4
   1aa1c:	beq	1aadc <main@@Base+0x4c40>
   1aa20:	ldrb	r0, [r6]
   1aa24:	cmp	r0, #58	; 0x3a
   1aa28:	bne	1aadc <main@@Base+0x4c40>
   1aa2c:	ldr	r0, [sp, #36]	; 0x24
   1aa30:	add	r1, r6, #1
   1aa34:	sub	r0, r0, r1
   1aa38:	cmp	r0, #2
   1aa3c:	blt	1c860 <main@@Base+0x69c4>
   1aa40:	ldrb	r0, [r1]
   1aa44:	cmp	r0, #32
   1aa48:	bls	1c84c <main@@Base+0x69b0>
   1aa4c:	ldr	sl, [sp, #32]
   1aa50:	mov	r6, r1
   1aa54:	cmp	r9, r6
   1aa58:	bne	1c878 <main@@Base+0x69dc>
   1aa5c:	ldr	r6, [sp, #36]	; 0x24
   1aa60:	add	r7, r8, #16
   1aa64:	mov	r1, #8
   1aa68:	mov	r2, #-268435456	; 0xf0000000
   1aa6c:	sub	r0, r6, r7
   1aa70:	cmp	r0, #8
   1aa74:	movcc	r1, r0
   1aa78:	add	r1, r2, r1, lsl #28
   1aa7c:	asr	r1, r1, #28
   1aa80:	cmp	r1, #0
   1aa84:	blt	1e9b4 <main@@Base+0x8b18>
   1aa88:	ldrb	r1, [r7]
   1aa8c:	cmp	r1, #97	; 0x61
   1aa90:	bne	1e9b4 <main@@Base+0x8b18>
   1aa94:	cmp	r0, #2
   1aa98:	blt	1e9b4 <main@@Base+0x8b18>
   1aa9c:	ldrb	r0, [r8, #17]
   1aaa0:	cmp	r0, #34	; 0x22
   1aaa4:	bne	1e9b4 <main@@Base+0x8b18>
   1aaa8:	add	r1, r8, #18
   1aaac:	sub	r0, r6, r1
   1aab0:	cmp	r0, #2
   1aab4:	blt	1cbe4 <main@@Base+0x6d48>
   1aab8:	ldrb	r0, [r1]
   1aabc:	cmp	r0, #32
   1aac0:	bls	1cbcc <main@@Base+0x6d30>
   1aac4:	ldr	r6, [sp, #36]	; 0x24
   1aac8:	ldr	sl, [sp, #32]
   1aacc:	mov	r8, r1
   1aad0:	cmp	r8, r6
   1aad4:	bne	1cbfc <main@@Base+0x6d60>
   1aad8:	b	1cc3c <main@@Base+0x6da0>
   1aadc:	ldr	r2, [sp, #36]	; 0x24
   1aae0:	mov	r0, sl
   1aae4:	mov	r1, r6
   1aae8:	mov	r3, #4
   1aaec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1aaf0:	b	1c86c <main@@Base+0x69d0>
   1aaf4:	ldr	r4, [sp, #36]	; 0x24
   1aaf8:	bne	1ab0c <main@@Base+0x4c70>
   1aafc:	mov	r6, r8
   1ab00:	ldrb	r0, [r6, #18]!
   1ab04:	cmp	r0, #32
   1ab08:	bhi	1ab1c <main@@Base+0x4c80>
   1ab0c:	mov	r0, sl
   1ab10:	mov	r2, r4
   1ab14:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ab18:	mov	r6, r0
   1ab1c:	cmp	r6, r4
   1ab20:	beq	1abe0 <main@@Base+0x4d44>
   1ab24:	ldrb	r0, [r6]
   1ab28:	cmp	r0, #58	; 0x3a
   1ab2c:	bne	1abe0 <main@@Base+0x4d44>
   1ab30:	ldr	r0, [sp, #36]	; 0x24
   1ab34:	add	r1, r6, #1
   1ab38:	sub	r0, r0, r1
   1ab3c:	cmp	r0, #2
   1ab40:	blt	1c9b8 <main@@Base+0x6b1c>
   1ab44:	ldrb	r0, [r1]
   1ab48:	cmp	r0, #32
   1ab4c:	bls	1c9a4 <main@@Base+0x6b08>
   1ab50:	ldr	sl, [sp, #32]
   1ab54:	mov	r6, r1
   1ab58:	cmp	r9, r6
   1ab5c:	bne	1c9d0 <main@@Base+0x6b34>
   1ab60:	ldr	r6, [sp, #36]	; 0x24
   1ab64:	add	r7, r8, #16
   1ab68:	mov	r1, #8
   1ab6c:	mov	r2, #-268435456	; 0xf0000000
   1ab70:	sub	r0, r6, r7
   1ab74:	cmp	r0, #8
   1ab78:	movcc	r1, r0
   1ab7c:	add	r1, r2, r1, lsl #28
   1ab80:	asr	r1, r1, #28
   1ab84:	cmp	r1, #0
   1ab88:	blt	1e9b4 <main@@Base+0x8b18>
   1ab8c:	ldrb	r1, [r7]
   1ab90:	cmp	r1, #97	; 0x61
   1ab94:	bne	1e9b4 <main@@Base+0x8b18>
   1ab98:	cmp	r0, #2
   1ab9c:	blt	1e9b4 <main@@Base+0x8b18>
   1aba0:	ldrb	r0, [r8, #17]
   1aba4:	cmp	r0, #34	; 0x22
   1aba8:	bne	1e9b4 <main@@Base+0x8b18>
   1abac:	add	r1, r8, #18
   1abb0:	sub	r0, r6, r1
   1abb4:	cmp	r0, #2
   1abb8:	blt	1cc6c <main@@Base+0x6dd0>
   1abbc:	ldrb	r0, [r1]
   1abc0:	cmp	r0, #32
   1abc4:	bls	1cc54 <main@@Base+0x6db8>
   1abc8:	ldr	r6, [sp, #36]	; 0x24
   1abcc:	ldr	sl, [sp, #32]
   1abd0:	mov	r8, r1
   1abd4:	cmp	r8, r6
   1abd8:	bne	1cc84 <main@@Base+0x6de8>
   1abdc:	b	1ccc4 <main@@Base+0x6e28>
   1abe0:	ldr	r2, [sp, #36]	; 0x24
   1abe4:	mov	r0, sl
   1abe8:	mov	r1, r6
   1abec:	mov	r3, #4
   1abf0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1abf4:	b	1c9c4 <main@@Base+0x6b28>
   1abf8:	mov	r0, sl
   1abfc:	mov	r1, r8
   1ac00:	mov	r2, r6
   1ac04:	mov	r3, #9
   1ac08:	b	19450 <main@@Base+0x35b4>
   1ac0c:	andeq	r2, r4, r0, asr r4
   1ac10:	bne	1ac20 <main@@Base+0x4d84>
   1ac14:	ldrb	r0, [r6, #2]!
   1ac18:	cmp	r0, #32
   1ac1c:	bhi	1ac30 <main@@Base+0x4d94>
   1ac20:	ldr	r2, [sp, #36]	; 0x24
   1ac24:	mov	r0, sl
   1ac28:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ac2c:	mov	r6, r0
   1ac30:	cmp	r9, r6
   1ac34:	beq	1893c <main@@Base+0x2aa0>
   1ac38:	ldr	r2, [sp, #36]	; 0x24
   1ac3c:	mov	r4, #0
   1ac40:	str	r4, [fp, #-52]	; 0xffffffcc
   1ac44:	str	r4, [fp, #-56]	; 0xffffffc8
   1ac48:	str	r4, [sp, #60]	; 0x3c
   1ac4c:	str	r4, [sp, #48]	; 0x30
   1ac50:	cmp	r6, r2
   1ac54:	beq	1acb0 <main@@Base+0x4e14>
   1ac58:	sub	r0, fp, #56	; 0x38
   1ac5c:	mov	r1, r6
   1ac60:	add	r3, sp, #48	; 0x30
   1ac64:	str	r0, [sp]
   1ac68:	mov	r0, sl
   1ac6c:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1ac70:	cmp	r0, r6
   1ac74:	beq	1acc0 <main@@Base+0x4e24>
   1ac78:	ldr	r2, [sp, #48]	; 0x30
   1ac7c:	mov	r9, r0
   1ac80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ac84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ac88:	cmp	r2, #0
   1ac8c:	beq	1acd0 <main@@Base+0x4e34>
   1ac90:	subs	r2, r0, #-2147483647	; 0x80000001
   1ac94:	sbcs	r1, r1, #0
   1ac98:	bcc	1ad00 <main@@Base+0x4e64>
   1ac9c:	ldr	r2, [sp, #36]	; 0x24
   1aca0:	mov	r0, sl
   1aca4:	mov	r1, r9
   1aca8:	mov	r3, #8
   1acac:	b	1acec <main@@Base+0x4e50>
   1acb0:	mov	r9, r2
   1acb4:	cmp	r6, r9
   1acb8:	bne	1b4b4 <main@@Base+0x5618>
   1acbc:	b	1b47c <main@@Base+0x55e0>
   1acc0:	mov	r9, r6
   1acc4:	cmp	r6, r9
   1acc8:	bne	1b4b4 <main@@Base+0x5618>
   1accc:	b	1b47c <main@@Base+0x55e0>
   1acd0:	subs	r2, r0, #-2147483648	; 0x80000000
   1acd4:	sbcs	r1, r1, #0
   1acd8:	bcc	1b46c <main@@Base+0x55d0>
   1acdc:	ldr	r2, [sp, #36]	; 0x24
   1ace0:	mov	r0, sl
   1ace4:	mov	r1, r9
   1ace8:	mov	r3, #7
   1acec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1acf0:	mov	r9, r0
   1acf4:	cmp	r6, r9
   1acf8:	bne	1b4b4 <main@@Base+0x5618>
   1acfc:	b	1b47c <main@@Base+0x55e0>
   1ad00:	rsb	r4, r0, #0
   1ad04:	b	1b470 <main@@Base+0x55d4>
   1ad08:	bne	1ad18 <main@@Base+0x4e7c>
   1ad0c:	ldrb	r0, [r8, #19]!
   1ad10:	cmp	r0, #32
   1ad14:	bhi	1ad28 <main@@Base+0x4e8c>
   1ad18:	mov	r0, sl
   1ad1c:	mov	r2, r6
   1ad20:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ad24:	mov	r8, r0
   1ad28:	cmp	r8, r6
   1ad2c:	beq	1ad70 <main@@Base+0x4ed4>
   1ad30:	ldrb	r0, [r8]
   1ad34:	cmp	r0, #58	; 0x3a
   1ad38:	bne	1ad70 <main@@Base+0x4ed4>
   1ad3c:	add	r1, r8, #1
   1ad40:	sub	r0, r6, r1
   1ad44:	cmp	r0, #2
   1ad48:	blt	1cb30 <main@@Base+0x6c94>
   1ad4c:	ldrb	r0, [r1]
   1ad50:	cmp	r0, #32
   1ad54:	bls	1cb18 <main@@Base+0x6c7c>
   1ad58:	ldr	r6, [sp, #36]	; 0x24
   1ad5c:	ldr	sl, [sp, #32]
   1ad60:	mov	r8, r1
   1ad64:	cmp	r7, r8
   1ad68:	bne	1cb48 <main@@Base+0x6cac>
   1ad6c:	b	1e9b4 <main@@Base+0x8b18>
   1ad70:	mov	r0, sl
   1ad74:	mov	r1, r8
   1ad78:	mov	r2, r6
   1ad7c:	mov	r3, #4
   1ad80:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ad84:	b	1cb3c <main@@Base+0x6ca0>
   1ad88:	bne	1ad98 <main@@Base+0x4efc>
   1ad8c:	ldrb	r0, [r8, #19]!
   1ad90:	cmp	r0, #32
   1ad94:	bhi	1ada8 <main@@Base+0x4f0c>
   1ad98:	mov	r0, sl
   1ad9c:	mov	r2, r6
   1ada0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ada4:	mov	r8, r0
   1ada8:	cmp	r8, r6
   1adac:	beq	1adf0 <main@@Base+0x4f54>
   1adb0:	ldrb	r0, [r8]
   1adb4:	cmp	r0, #58	; 0x3a
   1adb8:	bne	1adf0 <main@@Base+0x4f54>
   1adbc:	add	r1, r8, #1
   1adc0:	sub	r0, r6, r1
   1adc4:	cmp	r0, #2
   1adc8:	blt	1ccf4 <main@@Base+0x6e58>
   1adcc:	ldrb	r0, [r1]
   1add0:	cmp	r0, #32
   1add4:	bls	1ccdc <main@@Base+0x6e40>
   1add8:	ldr	r6, [sp, #36]	; 0x24
   1addc:	ldr	sl, [sp, #32]
   1ade0:	mov	r8, r1
   1ade4:	cmp	r7, r8
   1ade8:	bne	1cd0c <main@@Base+0x6e70>
   1adec:	b	1e9b4 <main@@Base+0x8b18>
   1adf0:	mov	r0, sl
   1adf4:	mov	r1, r8
   1adf8:	mov	r2, r6
   1adfc:	mov	r3, #4
   1ae00:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ae04:	b	1cd00 <main@@Base+0x6e64>
   1ae08:	bne	1ae18 <main@@Base+0x4f7c>
   1ae0c:	ldrb	r0, [r8, #2]!
   1ae10:	cmp	r0, #32
   1ae14:	bhi	1ae28 <main@@Base+0x4f8c>
   1ae18:	mov	r0, sl
   1ae1c:	mov	r2, r6
   1ae20:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ae24:	mov	r8, r0
   1ae28:	cmp	r8, r6
   1ae2c:	mov	r5, r6
   1ae30:	beq	1ae44 <main@@Base+0x4fa8>
   1ae34:	ldrb	r0, [r8]
   1ae38:	cmp	r0, #93	; 0x5d
   1ae3c:	beq	1bb44 <main@@Base+0x5ca8>
   1ae40:	mov	r5, r8
   1ae44:	mov	r0, #0
   1ae48:	mov	r1, #1
   1ae4c:	strb	r0, [sp, #60]	; 0x3c
   1ae50:	ldr	r0, [sl]
   1ae54:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1ae58:	cmp	r0, #0
   1ae5c:	beq	1fc64 <main@@Base+0x9dc8>
   1ae60:	mov	r7, r0
   1ae64:	mov	r8, r5
   1ae68:	sub	r0, r6, r8
   1ae6c:	cmp	r0, #4
   1ae70:	blt	1aeac <main@@Base+0x5010>
   1ae74:	ldr	r1, [r8]
   1ae78:	movw	r2, #29300	; 0x7274
   1ae7c:	movt	r2, #25973	; 0x6575
   1ae80:	cmp	r1, r2
   1ae84:	beq	1af10 <main@@Base+0x5074>
   1ae88:	cmp	r0, #5
   1ae8c:	blt	1aeac <main@@Base+0x5010>
   1ae90:	ldr	r1, [pc, #3996]	; 1be34 <main@@Base+0x5f98>
   1ae94:	mov	r0, r8
   1ae98:	mov	r2, #5
   1ae9c:	add	r1, pc, r1
   1aea0:	bl	14e64 <memcmp@plt>
   1aea4:	cmp	r0, #0
   1aea8:	beq	1b084 <main@@Base+0x51e8>
   1aeac:	mov	r5, #0
   1aeb0:	cmp	r8, r6
   1aeb4:	str	r5, [fp, #-52]	; 0xffffffcc
   1aeb8:	str	r5, [fp, #-56]	; 0xffffffc8
   1aebc:	str	r5, [sp, #48]	; 0x30
   1aec0:	beq	1af08 <main@@Base+0x506c>
   1aec4:	sub	r0, fp, #56	; 0x38
   1aec8:	mov	r1, r8
   1aecc:	mov	r2, r6
   1aed0:	add	r3, sp, #48	; 0x30
   1aed4:	str	r0, [sp]
   1aed8:	mov	r0, sl
   1aedc:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1aee0:	cmp	r0, r8
   1aee4:	beq	1af1c <main@@Base+0x5080>
   1aee8:	mov	r1, r0
   1aeec:	ldr	r0, [sp, #48]	; 0x30
   1aef0:	cmp	r0, #0
   1aef4:	beq	1af24 <main@@Base+0x5088>
   1aef8:	mov	r0, sl
   1aefc:	mov	r2, r6
   1af00:	mov	r3, #8
   1af04:	b	1af44 <main@@Base+0x50a8>
   1af08:	mov	r1, r6
   1af0c:	b	1af4c <main@@Base+0x50b0>
   1af10:	mov	r0, #1
   1af14:	add	r1, r8, #4
   1af18:	b	1af58 <main@@Base+0x50bc>
   1af1c:	mov	r1, r8
   1af20:	b	1af4c <main@@Base+0x50b0>
   1af24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1af28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1af2c:	subs	r3, r0, #256	; 0x100
   1af30:	sbcs	r2, r2, #0
   1af34:	bcc	1b090 <main@@Base+0x51f4>
   1af38:	mov	r0, sl
   1af3c:	mov	r2, r6
   1af40:	mov	r3, #7
   1af44:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1af48:	mov	r1, r0
   1af4c:	uxtb	r0, r5
   1af50:	cmp	r0, #0
   1af54:	movwne	r0, #1
   1af58:	strb	r0, [sp, #60]	; 0x3c
   1af5c:	cmp	r8, r1
   1af60:	bne	1af9c <main@@Base+0x5100>
   1af64:	add	r0, sp, #60	; 0x3c
   1af68:	mov	r1, r8
   1af6c:	mov	r2, r6
   1af70:	str	r0, [sp]
   1af74:	mov	r0, sl
   1af78:	ldr	r3, [pc, #4072]	; 1bf68 <main@@Base+0x60cc>
   1af7c:	add	r3, pc, r3
   1af80:	bl	23c9c <main@@Base+0xde00>
   1af84:	mov	r1, r0
   1af88:	cmp	r0, r8
   1af8c:	beq	1fc90 <main@@Base+0x9df4>
   1af90:	cmp	r1, r6
   1af94:	beq	1fc90 <main@@Base+0x9df4>
   1af98:	ldrb	r0, [sp, #60]	; 0x3c
   1af9c:	strb	r0, [r7]
   1afa0:	sub	r0, r6, r1
   1afa4:	cmp	r0, #2
   1afa8:	blt	1afdc <main@@Base+0x5140>
   1afac:	ldrb	r0, [r1]
   1afb0:	cmp	r0, #32
   1afb4:	bls	1afc8 <main@@Base+0x512c>
   1afb8:	mov	r8, r1
   1afbc:	cmp	r8, r6
   1afc0:	bne	1aff4 <main@@Base+0x5158>
   1afc4:	b	1b9fc <main@@Base+0x5b60>
   1afc8:	bne	1afdc <main@@Base+0x5140>
   1afcc:	mov	r8, r1
   1afd0:	ldrb	r0, [r8, #1]!
   1afd4:	cmp	r0, #32
   1afd8:	bhi	1afec <main@@Base+0x5150>
   1afdc:	mov	r0, sl
   1afe0:	mov	r2, r6
   1afe4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1afe8:	mov	r8, r0
   1afec:	cmp	r8, r6
   1aff0:	beq	1b9fc <main@@Base+0x5b60>
   1aff4:	ldrb	r0, [r8]
   1aff8:	cmp	r0, #44	; 0x2c
   1affc:	bne	1bb34 <main@@Base+0x5c98>
   1b000:	add	r1, r8, #1
   1b004:	sub	r0, r6, r1
   1b008:	cmp	r0, #2
   1b00c:	blt	1b03c <main@@Base+0x51a0>
   1b010:	ldrb	r0, [r1]
   1b014:	cmp	r0, #32
   1b018:	bls	1b02c <main@@Base+0x5190>
   1b01c:	mov	r8, r1
   1b020:	cmp	r8, r6
   1b024:	bne	1b054 <main@@Base+0x51b8>
   1b028:	b	1bb98 <main@@Base+0x5cfc>
   1b02c:	bne	1b03c <main@@Base+0x51a0>
   1b030:	ldrb	r0, [r8, #2]!
   1b034:	cmp	r0, #32
   1b038:	bhi	1b04c <main@@Base+0x51b0>
   1b03c:	mov	r0, sl
   1b040:	mov	r2, r6
   1b044:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b048:	mov	r8, r0
   1b04c:	cmp	r8, r6
   1b050:	beq	1bb98 <main@@Base+0x5cfc>
   1b054:	ldrb	r0, [r8]
   1b058:	cmp	r0, #93	; 0x5d
   1b05c:	beq	1bb44 <main@@Base+0x5ca8>
   1b060:	mov	r0, #0
   1b064:	mov	r1, #1
   1b068:	strb	r0, [sp, #60]	; 0x3c
   1b06c:	ldr	r0, [sl]
   1b070:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1b074:	mov	r7, r0
   1b078:	cmp	r0, #0
   1b07c:	bne	1ae68 <main@@Base+0x4fcc>
   1b080:	b	16888 <main@@Base+0x9ec>
   1b084:	mov	r0, #0
   1b088:	add	r1, r8, #5
   1b08c:	b	1af58 <main@@Base+0x50bc>
   1b090:	mov	r5, r0
   1b094:	b	1af4c <main@@Base+0x50b0>
   1b098:	bne	1b0a8 <main@@Base+0x520c>
   1b09c:	ldrb	r0, [r8, #17]!
   1b0a0:	cmp	r0, #32
   1b0a4:	bhi	1b0b8 <main@@Base+0x521c>
   1b0a8:	mov	r0, sl
   1b0ac:	mov	r2, r6
   1b0b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b0b4:	mov	r8, r0
   1b0b8:	cmp	r8, r6
   1b0bc:	beq	1b100 <main@@Base+0x5264>
   1b0c0:	ldrb	r0, [r8]
   1b0c4:	cmp	r0, #58	; 0x3a
   1b0c8:	bne	1b100 <main@@Base+0x5264>
   1b0cc:	add	r1, r8, #1
   1b0d0:	sub	r0, r6, r1
   1b0d4:	cmp	r0, #2
   1b0d8:	blt	1cfbc <main@@Base+0x7120>
   1b0dc:	ldrb	r0, [r1]
   1b0e0:	cmp	r0, #32
   1b0e4:	bls	1cfa4 <main@@Base+0x7108>
   1b0e8:	ldr	r6, [sp, #36]	; 0x24
   1b0ec:	ldr	sl, [sp, #32]
   1b0f0:	mov	r8, r1
   1b0f4:	cmp	r9, r8
   1b0f8:	bne	1cfd4 <main@@Base+0x7138>
   1b0fc:	b	1873c <main@@Base+0x28a0>
   1b100:	mov	r0, sl
   1b104:	mov	r1, r8
   1b108:	mov	r2, r6
   1b10c:	mov	r3, #4
   1b110:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b114:	b	1cfc8 <main@@Base+0x712c>
   1b118:	bne	1b128 <main@@Base+0x528c>
   1b11c:	ldrb	r0, [r8, #22]!
   1b120:	cmp	r0, #32
   1b124:	bhi	1b138 <main@@Base+0x529c>
   1b128:	mov	r0, sl
   1b12c:	mov	r2, r6
   1b130:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b134:	mov	r8, r0
   1b138:	cmp	r8, r6
   1b13c:	beq	1b180 <main@@Base+0x52e4>
   1b140:	ldrb	r0, [r8]
   1b144:	cmp	r0, #58	; 0x3a
   1b148:	bne	1b180 <main@@Base+0x52e4>
   1b14c:	add	r1, r8, #1
   1b150:	sub	r0, r6, r1
   1b154:	cmp	r0, #2
   1b158:	blt	1d084 <main@@Base+0x71e8>
   1b15c:	ldrb	r0, [r1]
   1b160:	cmp	r0, #32
   1b164:	bls	1d06c <main@@Base+0x71d0>
   1b168:	ldr	r6, [sp, #36]	; 0x24
   1b16c:	ldr	sl, [sp, #32]
   1b170:	mov	r8, r1
   1b174:	cmp	r7, r8
   1b178:	bne	1d09c <main@@Base+0x7200>
   1b17c:	b	1e9b4 <main@@Base+0x8b18>
   1b180:	mov	r0, sl
   1b184:	mov	r1, r8
   1b188:	mov	r2, r6
   1b18c:	mov	r3, #4
   1b190:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b194:	b	1d090 <main@@Base+0x71f4>
   1b198:	bne	1b1a8 <main@@Base+0x530c>
   1b19c:	ldrb	r0, [r8, #2]!
   1b1a0:	cmp	r0, #32
   1b1a4:	bhi	1b1b8 <main@@Base+0x531c>
   1b1a8:	mov	r0, sl
   1b1ac:	mov	r2, r6
   1b1b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b1b4:	mov	r8, r0
   1b1b8:	cmp	r7, r8
   1b1bc:	beq	1e9b4 <main@@Base+0x8b18>
   1b1c0:	mov	r0, #0
   1b1c4:	mov	r1, #3
   1b1c8:	str	r0, [sp, #44]	; 0x2c
   1b1cc:	ldr	r0, [sl]
   1b1d0:	bl	2f340 <flatcc_builder_start_table@@Base>
   1b1d4:	cmp	r0, #0
   1b1d8:	bne	1b240 <main@@Base+0x53a4>
   1b1dc:	cmp	r8, r6
   1b1e0:	beq	1b218 <main@@Base+0x537c>
   1b1e4:	ldrb	r0, [r8]
   1b1e8:	cmp	r0, #123	; 0x7b
   1b1ec:	bne	1b218 <main@@Base+0x537c>
   1b1f0:	add	r1, r8, #1
   1b1f4:	sub	r0, r6, r1
   1b1f8:	cmp	r0, #2
   1b1fc:	blt	1d69c <main@@Base+0x7800>
   1b200:	ldrb	r0, [r1]
   1b204:	cmp	r0, #32
   1b208:	bls	1d684 <main@@Base+0x77e8>
   1b20c:	ldr	r6, [sp, #36]	; 0x24
   1b210:	mov	r8, r1
   1b214:	b	1d6ac <main@@Base+0x7810>
   1b218:	mov	r0, sl
   1b21c:	mov	r1, r8
   1b220:	mov	r2, r6
   1b224:	mov	r3, #21
   1b228:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b22c:	mov	r8, r0
   1b230:	ldr	r0, [sp, #24]
   1b234:	ldr	r0, [r0]
   1b238:	cmp	r0, #0
   1b23c:	beq	1b270 <main@@Base+0x53d4>
   1b240:	mov	r0, sl
   1b244:	mov	r1, r8
   1b248:	mov	r2, r6
   1b24c:	mov	r3, #33	; 0x21
   1b250:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b254:	mov	r8, r0
   1b258:	ldr	r0, [sp, #44]	; 0x2c
   1b25c:	cmp	r0, #0
   1b260:	beq	16888 <main@@Base+0x9ec>
   1b264:	ldr	r0, [sl]
   1b268:	mov	r1, #35	; 0x23
   1b26c:	b	1fa58 <main@@Base+0x9bbc>
   1b270:	ldr	r0, [sl]
   1b274:	bl	2fd70 <flatcc_builder_end_table@@Base>
   1b278:	cmp	r0, #0
   1b27c:	str	r0, [sp, #44]	; 0x2c
   1b280:	bne	1b264 <main@@Base+0x53c8>
   1b284:	b	1b240 <main@@Base+0x53a4>
   1b288:	mov	r0, sl
   1b28c:	mov	r1, r2
   1b290:	mov	r2, r6
   1b294:	mov	r3, #10
   1b298:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b29c:	b	1e9c4 <main@@Base+0x8b28>
   1b2a0:	bne	1b2b0 <main@@Base+0x5414>
   1b2a4:	ldrb	r0, [r8, #2]!
   1b2a8:	cmp	r0, #32
   1b2ac:	bhi	1b2c0 <main@@Base+0x5424>
   1b2b0:	mov	r0, sl
   1b2b4:	mov	r2, r6
   1b2b8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b2bc:	mov	r8, r0
   1b2c0:	cmp	r7, r8
   1b2c4:	beq	1e9b4 <main@@Base+0x8b18>
   1b2c8:	ldr	r0, [sp, #40]	; 0x28
   1b2cc:	mov	r1, #8
   1b2d0:	mov	r2, r6
   1b2d4:	mov	r3, #0
   1b2d8:	str	r1, [sp]
   1b2dc:	mov	r1, r8
   1b2e0:	str	r0, [sp, #4]
   1b2e4:	ldr	r0, [pc, #4084]	; 1c2e0 <main@@Base+0x6444>
   1b2e8:	add	r0, pc, r0
   1b2ec:	str	r0, [sp, #8]
   1b2f0:	ldr	r0, [pc, #4076]	; 1c2e4 <main@@Base+0x6448>
   1b2f4:	add	r0, pc, r0
   1b2f8:	str	r0, [sp, #12]
   1b2fc:	mov	r0, sl
   1b300:	bl	36e88 <flatcc_json_parser_union_type@@Base>
   1b304:	b	1e9c4 <main@@Base+0x8b28>
   1b308:	bne	1b318 <main@@Base+0x547c>
   1b30c:	ldrb	r0, [r8, #2]!
   1b310:	cmp	r0, #32
   1b314:	bhi	1b328 <main@@Base+0x548c>
   1b318:	mov	r0, sl
   1b31c:	mov	r2, r6
   1b320:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b324:	mov	r8, r0
   1b328:	cmp	r7, r8
   1b32c:	beq	1e9b4 <main@@Base+0x8b18>
   1b330:	ldr	r0, [sl]
   1b334:	bl	2eec0 <flatcc_builder_start_offset_vector@@Base>
   1b338:	cmp	r0, #0
   1b33c:	bne	16888 <main@@Base+0x9ec>
   1b340:	cmp	r8, r6
   1b344:	beq	1b378 <main@@Base+0x54dc>
   1b348:	ldrb	r0, [r8]
   1b34c:	cmp	r0, #91	; 0x5b
   1b350:	bne	1b378 <main@@Base+0x54dc>
   1b354:	add	r1, r8, #1
   1b358:	sub	r0, r6, r1
   1b35c:	cmp	r0, #2
   1b360:	blt	1bbb4 <main@@Base+0x5d18>
   1b364:	ldrb	r0, [r1]
   1b368:	cmp	r0, #32
   1b36c:	bls	1bba4 <main@@Base+0x5d08>
   1b370:	mov	r8, r1
   1b374:	b	1bbc4 <main@@Base+0x5d28>
   1b378:	mov	r0, sl
   1b37c:	mov	r1, r8
   1b380:	mov	r2, r6
   1b384:	mov	r3, #22
   1b388:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b38c:	mov	r8, r0
   1b390:	ldr	r0, [sl]
   1b394:	bl	2f0a8 <flatcc_builder_end_offset_vector@@Base>
   1b398:	cmp	r0, #0
   1b39c:	str	r0, [sp, #44]	; 0x2c
   1b3a0:	beq	16888 <main@@Base+0x9ec>
   1b3a4:	ldr	r0, [sl]
   1b3a8:	mov	r1, #28
   1b3ac:	b	1fa58 <main@@Base+0x9bbc>
   1b3b0:	andeq	r1, r4, r4, lsl #27
   1b3b4:	bne	1b3c4 <main@@Base+0x5528>
   1b3b8:	ldrb	r0, [r8, #2]!
   1b3bc:	cmp	r0, #32
   1b3c0:	bhi	1b3d4 <main@@Base+0x5538>
   1b3c4:	mov	r0, sl
   1b3c8:	mov	r2, r6
   1b3cc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b3d0:	mov	r8, r0
   1b3d4:	cmp	r9, r8
   1b3d8:	beq	1873c <main@@Base+0x28a0>
   1b3dc:	ldr	r0, [sl]
   1b3e0:	mov	r1, #8
   1b3e4:	mov	r2, #4
   1b3e8:	mvn	r3, #-536870912	; 0xe0000000
   1b3ec:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   1b3f0:	cmp	r0, #0
   1b3f4:	bne	16888 <main@@Base+0x9ec>
   1b3f8:	cmp	r8, r6
   1b3fc:	beq	1b430 <main@@Base+0x5594>
   1b400:	ldrb	r0, [r8]
   1b404:	cmp	r0, #91	; 0x5b
   1b408:	bne	1b430 <main@@Base+0x5594>
   1b40c:	add	r1, r8, #1
   1b410:	sub	r0, r6, r1
   1b414:	cmp	r0, #2
   1b418:	blt	1bd34 <main@@Base+0x5e98>
   1b41c:	ldrb	r0, [r1]
   1b420:	cmp	r0, #32
   1b424:	bls	1bd20 <main@@Base+0x5e84>
   1b428:	mov	r9, r1
   1b42c:	b	1bd44 <main@@Base+0x5ea8>
   1b430:	mov	r0, sl
   1b434:	mov	r1, r8
   1b438:	mov	r2, r6
   1b43c:	mov	r3, #22
   1b440:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b444:	mov	r9, r0
   1b448:	ldr	r0, [sl]
   1b44c:	bl	300b4 <flatcc_builder_end_vector@@Base>
   1b450:	cmp	r0, #0
   1b454:	str	r0, [sp, #44]	; 0x2c
   1b458:	beq	1fbf0 <main@@Base+0x9d54>
   1b45c:	ldr	r0, [sl]
   1b460:	mov	r1, #29
   1b464:	b	19474 <main@@Base+0x35d8>
   1b468:	andeq	r1, r4, r0, lsl #26
   1b46c:	mov	r4, r0
   1b470:	str	r4, [sp, #60]	; 0x3c
   1b474:	cmp	r6, r9
   1b478:	bne	1b4b4 <main@@Base+0x5618>
   1b47c:	add	r0, sp, #60	; 0x3c
   1b480:	ldr	r4, [sp, #36]	; 0x24
   1b484:	mov	r1, r6
   1b488:	str	r0, [sp]
   1b48c:	mov	r0, sl
   1b490:	ldr	r3, [pc, #4084]	; 1c48c <main@@Base+0x65f0>
   1b494:	mov	r2, r4
   1b498:	add	r3, pc, r3
   1b49c:	bl	23fd0 <main@@Base+0xe134>
   1b4a0:	mov	r9, r0
   1b4a4:	cmp	r0, r6
   1b4a8:	cmpne	r9, r4
   1b4ac:	beq	1fc38 <main@@Base+0x9d9c>
   1b4b0:	ldr	r4, [sp, #60]	; 0x3c
   1b4b4:	ldr	r6, [sp, #36]	; 0x24
   1b4b8:	cmp	r4, #0
   1b4bc:	bne	1b4cc <main@@Base+0x5630>
   1b4c0:	ldrb	r0, [sl, #8]
   1b4c4:	tst	r0, #2
   1b4c8:	beq	1e9c8 <main@@Base+0x8b2c>
   1b4cc:	ldr	r0, [sl]
   1b4d0:	mov	r1, #16
   1b4d4:	b	1c988 <main@@Base+0x6aec>
   1b4d8:	bne	1b4e8 <main@@Base+0x564c>
   1b4dc:	ldrb	r0, [r7, #2]!
   1b4e0:	cmp	r0, #32
   1b4e4:	bhi	1b4f8 <main@@Base+0x565c>
   1b4e8:	mov	r0, sl
   1b4ec:	mov	r2, r6
   1b4f0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b4f4:	mov	r7, r0
   1b4f8:	cmp	r8, r7
   1b4fc:	beq	19434 <main@@Base+0x3598>
   1b500:	mov	r4, #0
   1b504:	cmp	r7, r6
   1b508:	str	r4, [fp, #-52]	; 0xffffffcc
   1b50c:	str	r4, [fp, #-56]	; 0xffffffc8
   1b510:	strh	r4, [sp, #60]	; 0x3c
   1b514:	str	r4, [sp, #48]	; 0x30
   1b518:	beq	1b57c <main@@Base+0x56e0>
   1b51c:	sub	r0, fp, #56	; 0x38
   1b520:	mov	r1, r7
   1b524:	mov	r2, r6
   1b528:	add	r3, sp, #48	; 0x30
   1b52c:	str	r0, [sp]
   1b530:	mov	r0, sl
   1b534:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1b538:	cmp	r0, r7
   1b53c:	beq	1b58c <main@@Base+0x56f0>
   1b540:	ldr	r2, [sp, #48]	; 0x30
   1b544:	mov	r9, r0
   1b548:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b54c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b550:	cmp	r2, #0
   1b554:	beq	1b59c <main@@Base+0x5700>
   1b558:	movw	r2, #32769	; 0x8001
   1b55c:	subs	r2, r0, r2
   1b560:	sbcs	r1, r1, #0
   1b564:	bcc	1b5cc <main@@Base+0x5730>
   1b568:	mov	r0, sl
   1b56c:	mov	r1, r9
   1b570:	mov	r2, r6
   1b574:	mov	r3, #8
   1b578:	b	1b5b8 <main@@Base+0x571c>
   1b57c:	mov	r9, r6
   1b580:	cmp	r7, r9
   1b584:	bne	1b618 <main@@Base+0x577c>
   1b588:	b	1b5e4 <main@@Base+0x5748>
   1b58c:	mov	r9, r7
   1b590:	cmp	r7, r9
   1b594:	bne	1b618 <main@@Base+0x577c>
   1b598:	b	1b5e4 <main@@Base+0x5748>
   1b59c:	subs	r2, r0, #32768	; 0x8000
   1b5a0:	sbcs	r1, r1, #0
   1b5a4:	bcc	1b5d4 <main@@Base+0x5738>
   1b5a8:	mov	r0, sl
   1b5ac:	mov	r1, r9
   1b5b0:	mov	r2, r6
   1b5b4:	mov	r3, #7
   1b5b8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b5bc:	mov	r9, r0
   1b5c0:	cmp	r7, r9
   1b5c4:	bne	1b618 <main@@Base+0x577c>
   1b5c8:	b	1b5e4 <main@@Base+0x5748>
   1b5cc:	rsb	r4, r0, #0
   1b5d0:	b	1b5d8 <main@@Base+0x573c>
   1b5d4:	mov	r4, r0
   1b5d8:	strh	r4, [sp, #60]	; 0x3c
   1b5dc:	cmp	r7, r9
   1b5e0:	bne	1b618 <main@@Base+0x577c>
   1b5e4:	add	r0, sp, #60	; 0x3c
   1b5e8:	mov	r1, r7
   1b5ec:	mov	r2, r6
   1b5f0:	str	r0, [sp]
   1b5f4:	mov	r0, sl
   1b5f8:	ldr	r3, [pc, #4016]	; 1c5b0 <main@@Base+0x6714>
   1b5fc:	add	r3, pc, r3
   1b600:	bl	21fd4 <main@@Base+0xc138>
   1b604:	mov	r9, r0
   1b608:	cmp	r0, r7
   1b60c:	cmpne	r9, r6
   1b610:	beq	1fc38 <main@@Base+0x9d9c>
   1b614:	ldrh	r4, [sp, #60]	; 0x3c
   1b618:	uxth	r0, r4
   1b61c:	cmp	r0, #150	; 0x96
   1b620:	ldrbeq	r0, [sl, #8]
   1b624:	tsteq	r0, #2
   1b628:	beq	1e9c8 <main@@Base+0x8b2c>
   1b62c:	ldr	r0, [sl]
   1b630:	mov	r1, #1
   1b634:	mov	r2, #2
   1b638:	mov	r3, #2
   1b63c:	bl	307e4 <flatcc_builder_table_add@@Base>
   1b640:	cmp	r0, #0
   1b644:	beq	1fc38 <main@@Base+0x9d9c>
   1b648:	strh	r4, [r0]
   1b64c:	b	1e9c8 <main@@Base+0x8b2c>
   1b650:	andeq	r1, r4, r0, lsr #22
   1b654:	bne	1b664 <main@@Base+0x57c8>
   1b658:	ldrb	r0, [r7, #2]!
   1b65c:	cmp	r0, #32
   1b660:	bhi	1b674 <main@@Base+0x57d8>
   1b664:	mov	r0, sl
   1b668:	mov	r2, r6
   1b66c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b670:	mov	r7, r0
   1b674:	cmp	r8, r7
   1b678:	beq	19434 <main@@Base+0x3598>
   1b67c:	mov	r0, #0
   1b680:	mov	r1, r7
   1b684:	mov	r2, r6
   1b688:	sub	r3, fp, #56	; 0x38
   1b68c:	str	r0, [fp, #-56]	; 0xffffffc8
   1b690:	mov	r0, sl
   1b694:	bl	362a0 <flatcc_json_parser_float@@Base>
   1b698:	mov	r9, r0
   1b69c:	cmp	r7, r0
   1b6a0:	bne	1b6d4 <main@@Base+0x5838>
   1b6a4:	sub	r0, fp, #56	; 0x38
   1b6a8:	mov	r1, r7
   1b6ac:	mov	r2, r6
   1b6b0:	str	r0, [sp]
   1b6b4:	mov	r0, sl
   1b6b8:	ldr	r3, [pc, #4032]	; 1c680 <main@@Base+0x67e4>
   1b6bc:	add	r3, pc, r3
   1b6c0:	bl	23e50 <main@@Base+0xdfb4>
   1b6c4:	mov	r9, r0
   1b6c8:	cmp	r0, r7
   1b6cc:	cmpne	r9, r6
   1b6d0:	beq	1fbf0 <main@@Base+0x9d54>
   1b6d4:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1b6d8:	vcmp.f32	s0, s18
   1b6dc:	vmrs	APSR_nzcv, fpscr
   1b6e0:	bne	1b6f0 <main@@Base+0x5854>
   1b6e4:	ldrb	r0, [sl, #8]
   1b6e8:	tst	r0, #2
   1b6ec:	beq	1e9c8 <main@@Base+0x8b2c>
   1b6f0:	ldr	r0, [sl]
   1b6f4:	mov	r1, #25
   1b6f8:	b	18468 <main@@Base+0x25cc>
   1b6fc:	muleq	r4, r8, sl
   1b700:	bne	1b710 <main@@Base+0x5874>
   1b704:	ldrb	r0, [r8, #19]!
   1b708:	cmp	r0, #32
   1b70c:	bhi	1b720 <main@@Base+0x5884>
   1b710:	mov	r0, sl
   1b714:	mov	r2, r6
   1b718:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b71c:	mov	r8, r0
   1b720:	cmp	r8, r6
   1b724:	beq	1b768 <main@@Base+0x58cc>
   1b728:	ldrb	r0, [r8]
   1b72c:	cmp	r0, #58	; 0x3a
   1b730:	bne	1b768 <main@@Base+0x58cc>
   1b734:	add	r1, r8, #1
   1b738:	sub	r0, r6, r1
   1b73c:	cmp	r0, #2
   1b740:	blt	1dd24 <main@@Base+0x7e88>
   1b744:	ldrb	r0, [r1]
   1b748:	cmp	r0, #32
   1b74c:	bls	1dd0c <main@@Base+0x7e70>
   1b750:	ldr	r6, [sp, #36]	; 0x24
   1b754:	ldr	sl, [sp, #32]
   1b758:	mov	r8, r1
   1b75c:	cmp	r7, r8
   1b760:	bne	1dd3c <main@@Base+0x7ea0>
   1b764:	b	1e9b4 <main@@Base+0x8b18>
   1b768:	mov	r0, sl
   1b76c:	mov	r1, r8
   1b770:	mov	r2, r6
   1b774:	mov	r3, #4
   1b778:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b77c:	b	1dd30 <main@@Base+0x7e94>
   1b780:	andeq	r1, r4, r4, lsl sl
   1b784:	bne	1b794 <main@@Base+0x58f8>
   1b788:	ldrb	r0, [r6, #2]!
   1b78c:	cmp	r0, #32
   1b790:	bhi	1b7a4 <main@@Base+0x5908>
   1b794:	ldr	r2, [sp, #36]	; 0x24
   1b798:	mov	r0, sl
   1b79c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b7a0:	mov	r6, r0
   1b7a4:	cmp	r9, r6
   1b7a8:	beq	19290 <main@@Base+0x33f4>
   1b7ac:	ldr	r2, [sp, #36]	; 0x24
   1b7b0:	mov	r4, #0
   1b7b4:	str	r4, [fp, #-52]	; 0xffffffcc
   1b7b8:	str	r4, [fp, #-56]	; 0xffffffc8
   1b7bc:	str	r4, [sp, #52]	; 0x34
   1b7c0:	str	r4, [sp, #48]	; 0x30
   1b7c4:	str	r4, [sp, #60]	; 0x3c
   1b7c8:	cmp	r6, r2
   1b7cc:	beq	1b828 <main@@Base+0x598c>
   1b7d0:	sub	r0, fp, #56	; 0x38
   1b7d4:	mov	r1, r6
   1b7d8:	add	r3, sp, #60	; 0x3c
   1b7dc:	str	r0, [sp]
   1b7e0:	mov	r0, sl
   1b7e4:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1b7e8:	cmp	r0, r6
   1b7ec:	beq	1b83c <main@@Base+0x59a0>
   1b7f0:	mov	r9, r0
   1b7f4:	ldr	r0, [sp, #60]	; 0x3c
   1b7f8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b7fc:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1b800:	cmp	r0, #0
   1b804:	beq	1b854 <main@@Base+0x59b8>
   1b808:	subs	r0, r4, #1
   1b80c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1b810:	bcc	1b888 <main@@Base+0x59ec>
   1b814:	ldr	r2, [sp, #36]	; 0x24
   1b818:	mov	r0, sl
   1b81c:	mov	r1, r9
   1b820:	mov	r3, #8
   1b824:	b	1b86c <main@@Base+0x59d0>
   1b828:	mov	r5, #0
   1b82c:	mov	r9, r2
   1b830:	cmp	r6, r9
   1b834:	bne	1b8dc <main@@Base+0x5a40>
   1b838:	b	1b8a0 <main@@Base+0x5a04>
   1b83c:	mov	r4, #0
   1b840:	mov	r5, #0
   1b844:	mov	r9, r6
   1b848:	cmp	r6, r9
   1b84c:	bne	1b8dc <main@@Base+0x5a40>
   1b850:	b	1b8a0 <main@@Base+0x5a04>
   1b854:	cmn	r5, #1
   1b858:	bgt	1b890 <main@@Base+0x59f4>
   1b85c:	ldr	r2, [sp, #36]	; 0x24
   1b860:	mov	r0, sl
   1b864:	mov	r1, r9
   1b868:	mov	r3, #7
   1b86c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b870:	mov	r9, r0
   1b874:	mov	r4, #0
   1b878:	mov	r5, #0
   1b87c:	cmp	r6, r9
   1b880:	bne	1b8dc <main@@Base+0x5a40>
   1b884:	b	1b8a0 <main@@Base+0x5a04>
   1b888:	rsbs	r4, r4, #0
   1b88c:	rsc	r5, r5, #0
   1b890:	str	r4, [sp, #48]	; 0x30
   1b894:	str	r5, [sp, #52]	; 0x34
   1b898:	cmp	r6, r9
   1b89c:	bne	1b8dc <main@@Base+0x5a40>
   1b8a0:	add	r0, sp, #48	; 0x30
   1b8a4:	ldr	r4, [sp, #36]	; 0x24
   1b8a8:	mov	r1, r6
   1b8ac:	str	r0, [sp]
   1b8b0:	mov	r0, sl
   1b8b4:	ldr	r3, [pc, #3980]	; 1c848 <main@@Base+0x69ac>
   1b8b8:	mov	r2, r4
   1b8bc:	add	r3, pc, r3
   1b8c0:	bl	241bc <main@@Base+0xe320>
   1b8c4:	mov	r9, r0
   1b8c8:	cmp	r0, r6
   1b8cc:	cmpne	r9, r4
   1b8d0:	beq	1fc38 <main@@Base+0x9d9c>
   1b8d4:	ldr	r4, [sp, #48]	; 0x30
   1b8d8:	ldr	r5, [sp, #52]	; 0x34
   1b8dc:	ldr	r6, [sp, #36]	; 0x24
   1b8e0:	orrs	r0, r4, r5
   1b8e4:	bne	1b8f4 <main@@Base+0x5a58>
   1b8e8:	ldrb	r0, [sl, #8]
   1b8ec:	tst	r0, #2
   1b8f0:	beq	1e9c8 <main@@Base+0x8b2c>
   1b8f4:	ldr	r0, [sl]
   1b8f8:	mov	r1, #18
   1b8fc:	b	1caf4 <main@@Base+0x6c58>
   1b900:	beq	1cdec <main@@Base+0x6f50>
   1b904:	b	1cdfc <main@@Base+0x6f60>
   1b908:	bne	1b918 <main@@Base+0x5a7c>
   1b90c:	ldrb	r0, [r8, #2]!
   1b910:	cmp	r0, #32
   1b914:	bhi	1b928 <main@@Base+0x5a8c>
   1b918:	mov	r0, sl
   1b91c:	mov	r2, r6
   1b920:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1b924:	mov	r8, r0
   1b928:	cmp	r9, r8
   1b92c:	beq	1873c <main@@Base+0x28a0>
   1b930:	mov	r0, #0
   1b934:	mov	r1, #0
   1b938:	str	r0, [sp, #44]	; 0x2c
   1b93c:	ldr	r0, [sl]
   1b940:	bl	2f340 <flatcc_builder_start_table@@Base>
   1b944:	cmp	r0, #0
   1b948:	bne	1b9b4 <main@@Base+0x5b18>
   1b94c:	cmp	r8, r6
   1b950:	beq	1b98c <main@@Base+0x5af0>
   1b954:	ldrb	r0, [r8]
   1b958:	cmp	r0, #123	; 0x7b
   1b95c:	bne	1b98c <main@@Base+0x5af0>
   1b960:	add	r1, r8, #1
   1b964:	sub	r0, r6, r1
   1b968:	cmp	r0, #2
   1b96c:	blt	1e38c <main@@Base+0x84f0>
   1b970:	ldrb	r0, [r1]
   1b974:	cmp	r0, #32
   1b978:	bls	1e378 <main@@Base+0x84dc>
   1b97c:	ldr	r6, [sp, #36]	; 0x24
   1b980:	mov	r8, r1
   1b984:	b	1e39c <main@@Base+0x8500>
   1b988:	andeq	r1, r4, ip, lsr r7
   1b98c:	mov	r0, sl
   1b990:	mov	r1, r8
   1b994:	mov	r2, r6
   1b998:	mov	r3, #21
   1b99c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b9a0:	mov	r8, r0
   1b9a4:	ldr	r0, [sp, #24]
   1b9a8:	ldr	r0, [r0]
   1b9ac:	cmp	r0, #0
   1b9b0:	beq	1b9e4 <main@@Base+0x5b48>
   1b9b4:	mov	r0, sl
   1b9b8:	mov	r1, r8
   1b9bc:	mov	r2, r6
   1b9c0:	mov	r3, #33	; 0x21
   1b9c4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1b9c8:	mov	r8, r0
   1b9cc:	ldr	r0, [sp, #44]	; 0x2c
   1b9d0:	cmp	r0, #0
   1b9d4:	beq	16888 <main@@Base+0x9ec>
   1b9d8:	ldr	r0, [sl]
   1b9dc:	mov	r1, #34	; 0x22
   1b9e0:	b	1fa58 <main@@Base+0x9bbc>
   1b9e4:	ldr	r0, [sl]
   1b9e8:	bl	2fd70 <flatcc_builder_end_table@@Base>
   1b9ec:	cmp	r0, #0
   1b9f0:	str	r0, [sp, #44]	; 0x2c
   1b9f4:	bne	1b9d8 <main@@Base+0x5b3c>
   1b9f8:	b	1b9b4 <main@@Base+0x5b18>
   1b9fc:	mov	r8, r6
   1ba00:	b	19a18 <main@@Base+0x3b7c>
   1ba04:	bne	1ba14 <main@@Base+0x5b78>
   1ba08:	ldrb	r0, [r8, #19]!
   1ba0c:	cmp	r0, #32
   1ba10:	bhi	1ba24 <main@@Base+0x5b88>
   1ba14:	mov	r0, sl
   1ba18:	mov	r2, r6
   1ba1c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ba20:	mov	r8, r0
   1ba24:	cmp	r8, r6
   1ba28:	beq	1ba6c <main@@Base+0x5bd0>
   1ba2c:	ldrb	r0, [r8]
   1ba30:	cmp	r0, #58	; 0x3a
   1ba34:	bne	1ba6c <main@@Base+0x5bd0>
   1ba38:	add	r1, r8, #1
   1ba3c:	sub	r0, r6, r1
   1ba40:	cmp	r0, #2
   1ba44:	blt	1e168 <main@@Base+0x82cc>
   1ba48:	ldrb	r0, [r1]
   1ba4c:	cmp	r0, #32
   1ba50:	bls	1e150 <main@@Base+0x82b4>
   1ba54:	ldr	r6, [sp, #36]	; 0x24
   1ba58:	ldr	sl, [sp, #32]
   1ba5c:	mov	r8, r1
   1ba60:	cmp	r7, r8
   1ba64:	bne	1e180 <main@@Base+0x82e4>
   1ba68:	b	1e9b4 <main@@Base+0x8b18>
   1ba6c:	mov	r0, sl
   1ba70:	mov	r1, r8
   1ba74:	mov	r2, r6
   1ba78:	mov	r3, #4
   1ba7c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ba80:	b	1e174 <main@@Base+0x82d8>
   1ba84:	bne	1ba94 <main@@Base+0x5bf8>
   1ba88:	ldrb	r0, [r8, #2]!
   1ba8c:	cmp	r0, #32
   1ba90:	bhi	1baa4 <main@@Base+0x5c08>
   1ba94:	mov	r0, sl
   1ba98:	mov	r2, r6
   1ba9c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1baa0:	mov	r8, r0
   1baa4:	cmp	r7, r8
   1baa8:	beq	1e9b4 <main@@Base+0x8b18>
   1baac:	ldr	r0, [sl]
   1bab0:	bl	2eec0 <flatcc_builder_start_offset_vector@@Base>
   1bab4:	cmp	r0, #0
   1bab8:	bne	16888 <main@@Base+0x9ec>
   1babc:	cmp	r8, r6
   1bac0:	beq	1bafc <main@@Base+0x5c60>
   1bac4:	ldrb	r0, [r8]
   1bac8:	cmp	r0, #91	; 0x5b
   1bacc:	bne	1bafc <main@@Base+0x5c60>
   1bad0:	add	r1, r8, #1
   1bad4:	sub	r0, r6, r1
   1bad8:	cmp	r0, #2
   1badc:	blt	1ce28 <main@@Base+0x6f8c>
   1bae0:	ldrb	r0, [r1]
   1bae4:	cmp	r0, #32
   1bae8:	bls	1ce10 <main@@Base+0x6f74>
   1baec:	ldr	r6, [sp, #36]	; 0x24
   1baf0:	ldr	sl, [sp, #32]
   1baf4:	mov	r8, r1
   1baf8:	b	1ce38 <main@@Base+0x6f9c>
   1bafc:	mov	r0, sl
   1bb00:	mov	r1, r8
   1bb04:	mov	r2, r6
   1bb08:	mov	r3, #22
   1bb0c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1bb10:	mov	r8, r0
   1bb14:	ldr	r0, [sl]
   1bb18:	bl	2f0a8 <flatcc_builder_end_offset_vector@@Base>
   1bb1c:	cmp	r0, #0
   1bb20:	str	r0, [sp, #44]	; 0x2c
   1bb24:	beq	16888 <main@@Base+0x9ec>
   1bb28:	ldr	r0, [sl]
   1bb2c:	mov	r1, #11
   1bb30:	b	1fa58 <main@@Base+0x9bbc>
   1bb34:	cmp	r0, #93	; 0x5d
   1bb38:	bne	1d418 <main@@Base+0x757c>
   1bb3c:	ldr	r6, [sp, #36]	; 0x24
   1bb40:	ldr	sl, [sp, #32]
   1bb44:	add	r1, r8, #1
   1bb48:	sub	r0, r6, r1
   1bb4c:	cmp	r0, #2
   1bb50:	blt	1bb88 <main@@Base+0x5cec>
   1bb54:	ldrb	r0, [r1]
   1bb58:	cmp	r0, #32
   1bb5c:	bls	1bb70 <main@@Base+0x5cd4>
   1bb60:	ldr	r6, [sp, #36]	; 0x24
   1bb64:	ldr	sl, [sp, #32]
   1bb68:	mov	r8, r1
   1bb6c:	b	19a18 <main@@Base+0x3b7c>
   1bb70:	ldr	r6, [sp, #36]	; 0x24
   1bb74:	ldr	sl, [sp, #32]
   1bb78:	bne	1bb88 <main@@Base+0x5cec>
   1bb7c:	ldrb	r0, [r8, #2]!
   1bb80:	cmp	r0, #32
   1bb84:	bhi	19a18 <main@@Base+0x3b7c>
   1bb88:	mov	r0, sl
   1bb8c:	mov	r2, r6
   1bb90:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1bb94:	b	19a14 <main@@Base+0x3b78>
   1bb98:	mov	r0, sl
   1bb9c:	mov	r1, r6
   1bba0:	b	1d428 <main@@Base+0x758c>
   1bba4:	bne	1bbb4 <main@@Base+0x5d18>
   1bba8:	ldrb	r0, [r8, #2]!
   1bbac:	cmp	r0, #32
   1bbb0:	bhi	1bbc4 <main@@Base+0x5d28>
   1bbb4:	mov	r0, sl
   1bbb8:	mov	r2, r6
   1bbbc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1bbc0:	mov	r8, r0
   1bbc4:	cmp	r8, r6
   1bbc8:	mov	r2, r6
   1bbcc:	beq	1bc18 <main@@Base+0x5d7c>
   1bbd0:	ldrb	r0, [r8]
   1bbd4:	cmp	r0, #93	; 0x5d
   1bbd8:	bne	1bc14 <main@@Base+0x5d78>
   1bbdc:	add	r1, r8, #1
   1bbe0:	sub	r0, r6, r1
   1bbe4:	cmp	r0, #2
   1bbe8:	blt	1f7a8 <main@@Base+0x990c>
   1bbec:	ldrb	r0, [r1]
   1bbf0:	cmp	r0, #32
   1bbf4:	bhi	1d668 <main@@Base+0x77cc>
   1bbf8:	ldr	r6, [sp, #36]	; 0x24
   1bbfc:	ldr	sl, [sp, #32]
   1bc00:	bne	1f7a8 <main@@Base+0x990c>
   1bc04:	ldrb	r0, [r8, #2]!
   1bc08:	cmp	r0, #32
   1bc0c:	bhi	1b390 <main@@Base+0x54f4>
   1bc10:	b	1f7a8 <main@@Base+0x990c>
   1bc14:	mov	r2, r8
   1bc18:	mov	r1, r2
   1bc1c:	mov	r0, sl
   1bc20:	mov	r2, r6
   1bc24:	add	r3, sp, #44	; 0x2c
   1bc28:	bl	36974 <flatcc_json_parser_build_string@@Base>
   1bc2c:	mov	r8, r0
   1bc30:	ldr	r0, [sp, #44]	; 0x2c
   1bc34:	cmp	r0, #0
   1bc38:	beq	16888 <main@@Base+0x9ec>
   1bc3c:	ldr	r0, [sl]
   1bc40:	mov	r1, #1
   1bc44:	bl	2e618 <flatcc_builder_extend_offset_vector@@Base>
   1bc48:	cmp	r0, #0
   1bc4c:	beq	16888 <main@@Base+0x9ec>
   1bc50:	ldr	r1, [sp, #44]	; 0x2c
   1bc54:	str	r1, [r0]
   1bc58:	sub	r0, r6, r8
   1bc5c:	cmp	r0, #2
   1bc60:	blt	1bc94 <main@@Base+0x5df8>
   1bc64:	ldrb	r0, [r8]
   1bc68:	cmp	r0, #32
   1bc6c:	bls	1bc80 <main@@Base+0x5de4>
   1bc70:	mov	r2, r8
   1bc74:	cmp	r2, r6
   1bc78:	bne	1bcb0 <main@@Base+0x5e14>
   1bc7c:	b	1d608 <main@@Base+0x776c>
   1bc80:	bne	1bc94 <main@@Base+0x5df8>
   1bc84:	mov	r2, r8
   1bc88:	ldrb	r0, [r2, #1]!
   1bc8c:	cmp	r0, #32
   1bc90:	bhi	1bca8 <main@@Base+0x5e0c>
   1bc94:	mov	r0, sl
   1bc98:	mov	r1, r8
   1bc9c:	mov	r2, r6
   1bca0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1bca4:	mov	r2, r0
   1bca8:	cmp	r2, r6
   1bcac:	beq	1d608 <main@@Base+0x776c>
   1bcb0:	ldrb	r0, [r2]
   1bcb4:	cmp	r0, #44	; 0x2c
   1bcb8:	bne	1d63c <main@@Base+0x77a0>
   1bcbc:	add	r1, r2, #1
   1bcc0:	sub	r0, r6, r1
   1bcc4:	cmp	r0, #2
   1bcc8:	blt	1bcf8 <main@@Base+0x5e5c>
   1bccc:	ldrb	r0, [r1]
   1bcd0:	cmp	r0, #32
   1bcd4:	bls	1bce8 <main@@Base+0x5e4c>
   1bcd8:	mov	r2, r1
   1bcdc:	cmp	r2, r6
   1bce0:	bne	1bd10 <main@@Base+0x5e74>
   1bce4:	b	1d678 <main@@Base+0x77dc>
   1bce8:	bne	1bcf8 <main@@Base+0x5e5c>
   1bcec:	ldrb	r0, [r2, #2]!
   1bcf0:	cmp	r0, #32
   1bcf4:	bhi	1bd08 <main@@Base+0x5e6c>
   1bcf8:	mov	r0, sl
   1bcfc:	mov	r2, r6
   1bd00:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1bd04:	mov	r2, r0
   1bd08:	cmp	r2, r6
   1bd0c:	beq	1d678 <main@@Base+0x77dc>
   1bd10:	ldrb	r0, [r2]
   1bd14:	cmp	r0, #93	; 0x5d
   1bd18:	bne	1bc18 <main@@Base+0x5d7c>
   1bd1c:	b	1d64c <main@@Base+0x77b0>
   1bd20:	bne	1bd34 <main@@Base+0x5e98>
   1bd24:	ldrb	r0, [r8, #2]!
   1bd28:	cmp	r0, #32
   1bd2c:	mov	r9, r8
   1bd30:	bhi	1bd44 <main@@Base+0x5ea8>
   1bd34:	mov	r0, sl
   1bd38:	mov	r2, r6
   1bd3c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1bd40:	mov	r9, r0
   1bd44:	cmp	r9, r6
   1bd48:	mov	r8, r6
   1bd4c:	beq	1c520 <main@@Base+0x6684>
   1bd50:	ldrb	r0, [r9]
   1bd54:	cmp	r0, #93	; 0x5d
   1bd58:	bne	1bd94 <main@@Base+0x5ef8>
   1bd5c:	add	r1, r9, #1
   1bd60:	sub	r0, r6, r1
   1bd64:	cmp	r0, #2
   1bd68:	blt	1f858 <main@@Base+0x99bc>
   1bd6c:	ldrb	r0, [r1]
   1bd70:	cmp	r0, #32
   1bd74:	bhi	1c670 <main@@Base+0x67d4>
   1bd78:	ldr	r6, [sp, #36]	; 0x24
   1bd7c:	ldr	sl, [sp, #32]
   1bd80:	bne	1f858 <main@@Base+0x99bc>
   1bd84:	ldrb	r0, [r9, #2]!
   1bd88:	cmp	r0, #32
   1bd8c:	bhi	1b448 <main@@Base+0x55ac>
   1bd90:	b	1f858 <main@@Base+0x99bc>
   1bd94:	mov	r8, r9
   1bd98:	b	1c520 <main@@Base+0x6684>
   1bd9c:	bne	1bdac <main@@Base+0x5f10>
   1bda0:	ldrb	r0, [r8, #2]!
   1bda4:	cmp	r0, #32
   1bda8:	bhi	1bdbc <main@@Base+0x5f20>
   1bdac:	mov	r0, sl
   1bdb0:	mov	r2, r6
   1bdb4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1bdb8:	mov	r8, r0
   1bdbc:	cmp	r8, r6
   1bdc0:	mov	r2, r6
   1bdc4:	beq	1bec4 <main@@Base+0x6028>
   1bdc8:	ldrb	r0, [r8]
   1bdcc:	cmp	r0, #125	; 0x7d
   1bdd0:	bne	1be0c <main@@Base+0x5f70>
   1bdd4:	add	r1, r8, #1
   1bdd8:	sub	r0, r6, r1
   1bddc:	cmp	r0, #2
   1bde0:	blt	1c510 <main@@Base+0x6674>
   1bde4:	ldrb	r0, [r1]
   1bde8:	cmp	r0, #32
   1bdec:	bhi	1c4bc <main@@Base+0x6620>
   1bdf0:	ldr	r6, [sp, #36]	; 0x24
   1bdf4:	ldr	sl, [sp, #32]
   1bdf8:	bne	1c510 <main@@Base+0x6674>
   1bdfc:	ldrb	r0, [r8, #2]!
   1be00:	cmp	r0, #32
   1be04:	bls	1c510 <main@@Base+0x6674>
   1be08:	b	1c588 <main@@Base+0x66ec>
   1be0c:	mov	r2, r8
   1be10:	b	1bec4 <main@@Base+0x6028>
   1be14:	mov	r1, r6
   1be18:	cmp	r7, r1
   1be1c:	bne	1bea0 <main@@Base+0x6004>
   1be20:	b	1be68 <main@@Base+0x5fcc>
   1be24:	mov	r1, r7
   1be28:	cmp	r7, r1
   1be2c:	bne	1bea0 <main@@Base+0x6004>
   1be30:	b	1be68 <main@@Base+0x5fcc>
   1be34:	andeq	sp, r2, ip, lsl #7
   1be38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1be3c:	cmp	r0, #0
   1be40:	beq	1bea8 <main@@Base+0x600c>
   1be44:	ldr	sl, [sp, #32]
   1be48:	ldr	r6, [sp, #36]	; 0x24
   1be4c:	mov	r3, #7
   1be50:	mov	r0, sl
   1be54:	mov	r2, r6
   1be58:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1be5c:	mov	r1, r0
   1be60:	cmp	r7, r1
   1be64:	bne	1bea0 <main@@Base+0x6004>
   1be68:	add	r0, sp, #60	; 0x3c
   1be6c:	mov	r1, r7
   1be70:	mov	r2, r6
   1be74:	str	r0, [sp]
   1be78:	mov	r0, sl
   1be7c:	ldr	r3, [pc, #3976]	; 1ce0c <main@@Base+0x6f70>
   1be80:	add	r3, pc, r3
   1be84:	bl	243b4 <main@@Base+0xe518>
   1be88:	mov	r1, r0
   1be8c:	cmp	r0, r7
   1be90:	cmpne	r1, r6
   1be94:	beq	1c46c <main@@Base+0x65d0>
   1be98:	ldr	r4, [sp, #60]	; 0x3c
   1be9c:	ldr	sl, [sp, #32]
   1bea0:	str	r4, [r9, #4]
   1bea4:	b	1c3a8 <main@@Base+0x650c>
   1bea8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1beac:	ldr	r6, [sp, #36]	; 0x24
   1beb0:	ldr	sl, [sp, #32]
   1beb4:	str	r4, [sp, #60]	; 0x3c
   1beb8:	cmp	r7, r1
   1bebc:	bne	1bea0 <main@@Base+0x6004>
   1bec0:	b	1be68 <main@@Base+0x5fcc>
   1bec4:	cmp	r2, r6
   1bec8:	mov	r8, r6
   1becc:	beq	1befc <main@@Base+0x6060>
   1bed0:	ldrb	r0, [r2]
   1bed4:	cmp	r0, #34	; 0x22
   1bed8:	bne	1bee4 <main@@Base+0x6048>
   1bedc:	add	r8, r2, #1
   1bee0:	b	1befc <main@@Base+0x6060>
   1bee4:	mov	r1, r2
   1bee8:	mov	r0, sl
   1beec:	mov	r2, r6
   1bef0:	mov	r3, #5
   1bef4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1bef8:	mov	r8, r0
   1befc:	sub	lr, r6, r8
   1bf00:	mov	r1, #8
   1bf04:	cmp	lr, #8
   1bf08:	movcc	r1, lr
   1bf0c:	and	r1, r1, #15
   1bf10:	sub	r2, r1, #1
   1bf14:	cmp	r2, #7
   1bf18:	bhi	1c394 <main@@Base+0x64f8>
   1bf1c:	add	r0, pc, #36	; 0x24
   1bf20:	mov	r1, #0
   1bf24:	mov	ip, #0
   1bf28:	mov	sl, #0
   1bf2c:	mov	r7, #0
   1bf30:	mov	r3, #0
   1bf34:	mov	r6, #0
   1bf38:	mov	r4, #0
   1bf3c:	ldr	r5, [r0, r2, lsl #2]
   1bf40:	mov	r2, #0
   1bf44:	add	pc, r0, r5
   1bf48:	andeq	r0, r0, r8, rrx
   1bf4c:	andeq	r0, r0, r0, rrx
   1bf50:	andeq	r0, r0, r8, asr r0
   1bf54:	andeq	r0, r0, r0, asr r0
   1bf58:	andeq	r0, r0, r4, asr #32
   1bf5c:	andeq	r0, r0, r8, lsr r0
   1bf60:	andeq	r0, r0, r8, lsr #32
   1bf64:	andeq	r0, r0, r4, lsr #32
   1bf68:	andeq	r1, r4, r8, asr r1
   1bf6c:	ldrb	ip, [r8, #7]
   1bf70:	ldrb	r0, [r8, #6]
   1bf74:	mov	sl, r1
   1bf78:	orr	r0, ip, r0, lsl #8
   1bf7c:	mov	r1, r0
   1bf80:	ldrb	r0, [r8, #5]
   1bf84:	mov	r7, sl
   1bf88:	orr	r1, r1, r0, lsl #16
   1bf8c:	ldrb	r0, [r8, #4]
   1bf90:	mov	r3, r7
   1bf94:	orr	r1, r1, r0, lsl #24
   1bf98:	ldrb	r0, [r8, #3]
   1bf9c:	orr	r6, r0, r3
   1bfa0:	ldrb	r0, [r8, #2]
   1bfa4:	orr	r2, r6, r0, lsl #8
   1bfa8:	ldrb	r0, [r8, #1]
   1bfac:	orr	r4, r2, r0, lsl #16
   1bfb0:	ldrb	r0, [r8]
   1bfb4:	movw	r3, #0
   1bfb8:	movt	r3, #26980	; 0x6964
   1bfbc:	orr	r2, r4, r0, lsl #24
   1bfc0:	mov	r0, r2
   1bfc4:	bfc	r0, #0, #16
   1bfc8:	teq	r0, r3
   1bfcc:	bne	1c028 <main@@Base+0x618c>
   1bfd0:	ldr	r6, [sp, #36]	; 0x24
   1bfd4:	ldr	sl, [sp, #32]
   1bfd8:	cmp	lr, #3
   1bfdc:	mov	r7, r8
   1bfe0:	blt	1c1ec <main@@Base+0x6350>
   1bfe4:	ldrb	r0, [r8, #2]
   1bfe8:	mov	r7, r8
   1bfec:	cmp	r0, #34	; 0x22
   1bff0:	bne	1c1ec <main@@Base+0x6350>
   1bff4:	add	r1, r8, #3
   1bff8:	sub	r0, r6, r1
   1bffc:	cmp	r0, #2
   1c000:	blt	1c0b8 <main@@Base+0x621c>
   1c004:	ldrb	r0, [r1]
   1c008:	cmp	r0, #32
   1c00c:	bls	1c09c <main@@Base+0x6200>
   1c010:	ldr	r6, [sp, #36]	; 0x24
   1c014:	ldr	sl, [sp, #32]
   1c018:	mov	r7, r1
   1c01c:	cmp	r7, r6
   1c020:	bne	1c0d0 <main@@Base+0x6234>
   1c024:	b	1c110 <main@@Base+0x6274>
   1c028:	movw	r0, #25445	; 0x6365
   1c02c:	ldr	r6, [sp, #36]	; 0x24
   1c030:	ldr	sl, [sp, #32]
   1c034:	movt	r0, #24942	; 0x616e
   1c038:	eor	r0, r1, r0
   1c03c:	movw	r1, #29556	; 0x7374
   1c040:	movt	r1, #25705	; 0x6469
   1c044:	eor	r1, r2, r1
   1c048:	orrs	r0, r0, r1
   1c04c:	bne	1c394 <main@@Base+0x64f8>
   1c050:	cmp	lr, #9
   1c054:	mov	r7, r8
   1c058:	blt	1c32c <main@@Base+0x6490>
   1c05c:	ldrb	r0, [r8, #8]
   1c060:	mov	r7, r8
   1c064:	cmp	r0, #34	; 0x22
   1c068:	bne	1c32c <main@@Base+0x6490>
   1c06c:	add	r1, r8, #9
   1c070:	sub	r0, r6, r1
   1c074:	cmp	r0, #2
   1c078:	blt	1c144 <main@@Base+0x62a8>
   1c07c:	ldrb	r0, [r1]
   1c080:	cmp	r0, #32
   1c084:	bls	1c128 <main@@Base+0x628c>
   1c088:	ldr	r6, [sp, #36]	; 0x24
   1c08c:	mov	r7, r1
   1c090:	cmp	r7, r6
   1c094:	bne	1c15c <main@@Base+0x62c0>
   1c098:	b	1c1a4 <main@@Base+0x6308>
   1c09c:	ldr	r6, [sp, #36]	; 0x24
   1c0a0:	ldr	sl, [sp, #32]
   1c0a4:	bne	1c0b8 <main@@Base+0x621c>
   1c0a8:	mov	r7, r8
   1c0ac:	ldrb	r0, [r7, #4]!
   1c0b0:	cmp	r0, #32
   1c0b4:	bhi	1c0c8 <main@@Base+0x622c>
   1c0b8:	mov	r0, sl
   1c0bc:	mov	r2, r6
   1c0c0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c0c4:	mov	r7, r0
   1c0c8:	cmp	r7, r6
   1c0cc:	beq	1c110 <main@@Base+0x6274>
   1c0d0:	ldrb	r0, [r7]
   1c0d4:	cmp	r0, #58	; 0x3a
   1c0d8:	bne	1c110 <main@@Base+0x6274>
   1c0dc:	add	r1, r7, #1
   1c0e0:	sub	r0, r6, r1
   1c0e4:	cmp	r0, #2
   1c0e8:	blt	1c1dc <main@@Base+0x6340>
   1c0ec:	ldrb	r0, [r1]
   1c0f0:	cmp	r0, #32
   1c0f4:	bls	1c1c4 <main@@Base+0x6328>
   1c0f8:	ldr	r6, [sp, #36]	; 0x24
   1c0fc:	ldr	sl, [sp, #32]
   1c100:	mov	r7, r1
   1c104:	cmp	r8, r7
   1c108:	bne	1c1f4 <main@@Base+0x6358>
   1c10c:	b	1c394 <main@@Base+0x64f8>
   1c110:	mov	r0, sl
   1c114:	mov	r1, r7
   1c118:	mov	r2, r6
   1c11c:	mov	r3, #4
   1c120:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c124:	b	1c1e8 <main@@Base+0x634c>
   1c128:	ldr	r6, [sp, #36]	; 0x24
   1c12c:	ldr	sl, [sp, #32]
   1c130:	bne	1c144 <main@@Base+0x62a8>
   1c134:	mov	r7, r8
   1c138:	ldrb	r0, [r7, #10]!
   1c13c:	cmp	r0, #32
   1c140:	bhi	1c154 <main@@Base+0x62b8>
   1c144:	mov	r0, sl
   1c148:	mov	r2, r6
   1c14c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c150:	mov	r7, r0
   1c154:	cmp	r7, r6
   1c158:	beq	1c1a4 <main@@Base+0x6308>
   1c15c:	ldrb	r0, [r7]
   1c160:	cmp	r0, #58	; 0x3a
   1c164:	bne	1c1a4 <main@@Base+0x6308>
   1c168:	ldr	r6, [sp, #36]	; 0x24
   1c16c:	ldr	sl, [sp, #32]
   1c170:	add	r1, r7, #1
   1c174:	sub	r0, r6, r1
   1c178:	cmp	r0, #2
   1c17c:	blt	1c31c <main@@Base+0x6480>
   1c180:	ldrb	r0, [r1]
   1c184:	cmp	r0, #32
   1c188:	bls	1c304 <main@@Base+0x6468>
   1c18c:	ldr	r6, [sp, #36]	; 0x24
   1c190:	ldr	sl, [sp, #32]
   1c194:	mov	r7, r1
   1c198:	cmp	r8, r7
   1c19c:	bne	1c334 <main@@Base+0x6498>
   1c1a0:	b	1c394 <main@@Base+0x64f8>
   1c1a4:	ldr	sl, [sp, #32]
   1c1a8:	ldr	r6, [sp, #36]	; 0x24
   1c1ac:	mov	r1, r7
   1c1b0:	mov	r3, #4
   1c1b4:	mov	r0, sl
   1c1b8:	mov	r2, r6
   1c1bc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c1c0:	b	1c328 <main@@Base+0x648c>
   1c1c4:	ldr	r6, [sp, #36]	; 0x24
   1c1c8:	ldr	sl, [sp, #32]
   1c1cc:	bne	1c1dc <main@@Base+0x6340>
   1c1d0:	ldrb	r0, [r7, #2]!
   1c1d4:	cmp	r0, #32
   1c1d8:	bhi	1c1ec <main@@Base+0x6350>
   1c1dc:	mov	r0, sl
   1c1e0:	mov	r2, r6
   1c1e4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c1e8:	mov	r7, r0
   1c1ec:	cmp	r8, r7
   1c1f0:	beq	1c394 <main@@Base+0x64f8>
   1c1f4:	mov	r4, #0
   1c1f8:	cmp	r7, r6
   1c1fc:	str	r4, [fp, #-52]	; 0xffffffcc
   1c200:	str	r4, [fp, #-56]	; 0xffffffc8
   1c204:	str	r4, [sp, #60]	; 0x3c
   1c208:	str	r4, [sp, #48]	; 0x30
   1c20c:	beq	1c254 <main@@Base+0x63b8>
   1c210:	sub	r0, fp, #56	; 0x38
   1c214:	mov	r1, r7
   1c218:	mov	r2, r6
   1c21c:	add	r3, sp, #48	; 0x30
   1c220:	str	r0, [sp]
   1c224:	mov	r0, sl
   1c228:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1c22c:	cmp	r0, r7
   1c230:	beq	1c264 <main@@Base+0x63c8>
   1c234:	mov	r1, r0
   1c238:	ldr	r0, [sp, #48]	; 0x30
   1c23c:	cmp	r0, #0
   1c240:	beq	1c274 <main@@Base+0x63d8>
   1c244:	mov	r0, sl
   1c248:	mov	r2, r6
   1c24c:	mov	r3, #8
   1c250:	b	1c294 <main@@Base+0x63f8>
   1c254:	mov	r1, r6
   1c258:	cmp	r7, r1
   1c25c:	bne	1c2d8 <main@@Base+0x643c>
   1c260:	b	1c2a4 <main@@Base+0x6408>
   1c264:	mov	r1, r7
   1c268:	cmp	r7, r1
   1c26c:	bne	1c2d8 <main@@Base+0x643c>
   1c270:	b	1c2a4 <main@@Base+0x6408>
   1c274:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c278:	cmp	r0, #0
   1c27c:	beq	1c2e8 <main@@Base+0x644c>
   1c280:	ldr	sl, [sp, #32]
   1c284:	ldr	r6, [sp, #36]	; 0x24
   1c288:	mov	r3, #7
   1c28c:	mov	r0, sl
   1c290:	mov	r2, r6
   1c294:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c298:	mov	r1, r0
   1c29c:	cmp	r7, r1
   1c2a0:	bne	1c2d8 <main@@Base+0x643c>
   1c2a4:	add	r0, sp, #60	; 0x3c
   1c2a8:	mov	r1, r7
   1c2ac:	mov	r2, r6
   1c2b0:	str	r0, [sp]
   1c2b4:	mov	r0, sl
   1c2b8:	ldr	r3, [pc, #4064]	; 1d2a0 <main@@Base+0x7404>
   1c2bc:	add	r3, pc, r3
   1c2c0:	bl	243b4 <main@@Base+0xe518>
   1c2c4:	mov	r1, r0
   1c2c8:	cmp	r0, r7
   1c2cc:	cmpne	r1, r6
   1c2d0:	beq	1c46c <main@@Base+0x65d0>
   1c2d4:	ldr	r4, [sp, #60]	; 0x3c
   1c2d8:	str	r4, [r9]
   1c2dc:	b	1c3a8 <main@@Base+0x650c>
   1c2e0:	ldrdeq	r0, [r4], -ip
   1c2e4:	andeq	r7, r0, ip, asr #11
   1c2e8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c2ec:	ldr	r6, [sp, #36]	; 0x24
   1c2f0:	ldr	sl, [sp, #32]
   1c2f4:	str	r4, [sp, #60]	; 0x3c
   1c2f8:	cmp	r7, r1
   1c2fc:	bne	1c2d8 <main@@Base+0x643c>
   1c300:	b	1c2a4 <main@@Base+0x6408>
   1c304:	ldr	r6, [sp, #36]	; 0x24
   1c308:	ldr	sl, [sp, #32]
   1c30c:	bne	1c31c <main@@Base+0x6480>
   1c310:	ldrb	r0, [r7, #2]!
   1c314:	cmp	r0, #32
   1c318:	bhi	1c32c <main@@Base+0x6490>
   1c31c:	mov	r0, sl
   1c320:	mov	r2, r6
   1c324:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c328:	mov	r7, r0
   1c32c:	cmp	r8, r7
   1c330:	beq	1c394 <main@@Base+0x64f8>
   1c334:	mov	r4, #0
   1c338:	cmp	r7, r6
   1c33c:	str	r4, [fp, #-52]	; 0xffffffcc
   1c340:	str	r4, [fp, #-56]	; 0xffffffc8
   1c344:	str	r4, [sp, #60]	; 0x3c
   1c348:	str	r4, [sp, #48]	; 0x30
   1c34c:	beq	1be14 <main@@Base+0x5f78>
   1c350:	sub	r0, fp, #56	; 0x38
   1c354:	mov	r1, r7
   1c358:	mov	r2, r6
   1c35c:	add	r3, sp, #48	; 0x30
   1c360:	str	r0, [sp]
   1c364:	mov	r0, sl
   1c368:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1c36c:	cmp	r0, r7
   1c370:	beq	1be24 <main@@Base+0x5f88>
   1c374:	mov	r1, r0
   1c378:	ldr	r0, [sp, #48]	; 0x30
   1c37c:	cmp	r0, #0
   1c380:	beq	1be38 <main@@Base+0x5f9c>
   1c384:	ldr	sl, [sp, #32]
   1c388:	ldr	r6, [sp, #36]	; 0x24
   1c38c:	mov	r3, #8
   1c390:	b	1be50 <main@@Base+0x5fb4>
   1c394:	mov	r0, sl
   1c398:	mov	r1, r8
   1c39c:	mov	r2, r6
   1c3a0:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   1c3a4:	mov	r1, r0
   1c3a8:	sub	r0, r6, r1
   1c3ac:	cmp	r0, #2
   1c3b0:	blt	1c3e4 <main@@Base+0x6548>
   1c3b4:	ldrb	r0, [r1]
   1c3b8:	cmp	r0, #32
   1c3bc:	bls	1c3d0 <main@@Base+0x6534>
   1c3c0:	mov	r2, r1
   1c3c4:	cmp	r2, r6
   1c3c8:	bne	1c3fc <main@@Base+0x6560>
   1c3cc:	b	1c484 <main@@Base+0x65e8>
   1c3d0:	bne	1c3e4 <main@@Base+0x6548>
   1c3d4:	mov	r2, r1
   1c3d8:	ldrb	r0, [r2, #1]!
   1c3dc:	cmp	r0, #32
   1c3e0:	bhi	1c3f4 <main@@Base+0x6558>
   1c3e4:	mov	r0, sl
   1c3e8:	mov	r2, r6
   1c3ec:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c3f0:	mov	r2, r0
   1c3f4:	cmp	r2, r6
   1c3f8:	beq	1c484 <main@@Base+0x65e8>
   1c3fc:	ldrb	r0, [r2]
   1c400:	cmp	r0, #44	; 0x2c
   1c404:	bne	1c490 <main@@Base+0x65f4>
   1c408:	add	r1, r2, #1
   1c40c:	sub	r0, r6, r1
   1c410:	cmp	r0, #2
   1c414:	blt	1c444 <main@@Base+0x65a8>
   1c418:	ldrb	r0, [r1]
   1c41c:	cmp	r0, #32
   1c420:	bls	1c434 <main@@Base+0x6598>
   1c424:	mov	r2, r1
   1c428:	cmp	r2, r6
   1c42c:	bne	1c45c <main@@Base+0x65c0>
   1c430:	b	1c4cc <main@@Base+0x6630>
   1c434:	bne	1c444 <main@@Base+0x65a8>
   1c438:	ldrb	r0, [r2, #2]!
   1c43c:	cmp	r0, #32
   1c440:	bhi	1c454 <main@@Base+0x65b8>
   1c444:	mov	r0, sl
   1c448:	mov	r2, r6
   1c44c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c450:	mov	r2, r0
   1c454:	cmp	r2, r6
   1c458:	beq	1c4cc <main@@Base+0x6630>
   1c45c:	ldrb	r0, [r2]
   1c460:	cmp	r0, #125	; 0x7d
   1c464:	bne	1bec4 <main@@Base+0x6028>
   1c468:	b	1c4a0 <main@@Base+0x6604>
   1c46c:	ldr	sl, [sp, #32]
   1c470:	ldr	r6, [sp, #36]	; 0x24
   1c474:	mov	r3, #33	; 0x21
   1c478:	mov	r0, sl
   1c47c:	mov	r2, r6
   1c480:	b	1c580 <main@@Base+0x66e4>
   1c484:	mov	r8, r6
   1c488:	b	1c588 <main@@Base+0x66ec>
   1c48c:	andeq	r0, r4, r8, ror ip
   1c490:	cmp	r0, #125	; 0x7d
   1c494:	bne	1c4d8 <main@@Base+0x663c>
   1c498:	ldr	r6, [sp, #36]	; 0x24
   1c49c:	ldr	sl, [sp, #32]
   1c4a0:	add	r1, r2, #1
   1c4a4:	sub	r0, r6, r1
   1c4a8:	cmp	r0, #2
   1c4ac:	blt	1c510 <main@@Base+0x6674>
   1c4b0:	ldrb	r0, [r1]
   1c4b4:	cmp	r0, #32
   1c4b8:	bls	1c4f4 <main@@Base+0x6658>
   1c4bc:	ldr	r6, [sp, #36]	; 0x24
   1c4c0:	ldr	sl, [sp, #32]
   1c4c4:	mov	r8, r1
   1c4c8:	b	1c588 <main@@Base+0x66ec>
   1c4cc:	mov	r0, sl
   1c4d0:	mov	r1, r6
   1c4d4:	b	1c4e8 <main@@Base+0x664c>
   1c4d8:	ldr	sl, [sp, #32]
   1c4dc:	ldr	r6, [sp, #36]	; 0x24
   1c4e0:	mov	r1, r2
   1c4e4:	mov	r0, sl
   1c4e8:	mov	r2, r6
   1c4ec:	mov	r3, #10
   1c4f0:	b	1c580 <main@@Base+0x66e4>
   1c4f4:	ldr	r6, [sp, #36]	; 0x24
   1c4f8:	ldr	sl, [sp, #32]
   1c4fc:	bne	1c510 <main@@Base+0x6674>
   1c500:	ldrb	r0, [r2, #2]!
   1c504:	cmp	r0, #32
   1c508:	mov	r8, r2
   1c50c:	bhi	1c588 <main@@Base+0x66ec>
   1c510:	mov	r0, sl
   1c514:	mov	r2, r6
   1c518:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c51c:	b	1c584 <main@@Base+0x66e8>
   1c520:	ldr	r0, [sl]
   1c524:	mov	r1, #1
   1c528:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1c52c:	mov	r9, r0
   1c530:	cmp	r0, #0
   1c534:	beq	16888 <main@@Base+0x9ec>
   1c538:	cmp	r8, r6
   1c53c:	beq	1c570 <main@@Base+0x66d4>
   1c540:	ldrb	r0, [r8]
   1c544:	cmp	r0, #123	; 0x7b
   1c548:	bne	1c570 <main@@Base+0x66d4>
   1c54c:	add	r1, r8, #1
   1c550:	sub	r0, r6, r1
   1c554:	cmp	r0, #2
   1c558:	blt	1bdac <main@@Base+0x5f10>
   1c55c:	ldrb	r0, [r1]
   1c560:	cmp	r0, #32
   1c564:	bls	1bd9c <main@@Base+0x5f00>
   1c568:	mov	r8, r1
   1c56c:	b	1bdbc <main@@Base+0x5f20>
   1c570:	mov	r0, sl
   1c574:	mov	r1, r8
   1c578:	mov	r2, r6
   1c57c:	mov	r3, #21
   1c580:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c584:	mov	r8, r0
   1c588:	sub	r0, r6, r8
   1c58c:	cmp	r0, #2
   1c590:	blt	1c5c8 <main@@Base+0x672c>
   1c594:	ldrb	r0, [r8]
   1c598:	cmp	r0, #32
   1c59c:	bls	1c5b4 <main@@Base+0x6718>
   1c5a0:	mov	r9, r8
   1c5a4:	cmp	r9, r6
   1c5a8:	bne	1c5e4 <main@@Base+0x6748>
   1c5ac:	b	1d434 <main@@Base+0x7598>
   1c5b0:			; <UNDEFINED> instruction: 0x00040abc
   1c5b4:	bne	1c5c8 <main@@Base+0x672c>
   1c5b8:	mov	r9, r8
   1c5bc:	ldrb	r0, [r9, #1]!
   1c5c0:	cmp	r0, #32
   1c5c4:	bhi	1c5dc <main@@Base+0x6740>
   1c5c8:	mov	r0, sl
   1c5cc:	mov	r1, r8
   1c5d0:	mov	r2, r6
   1c5d4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c5d8:	mov	r9, r0
   1c5dc:	cmp	r9, r6
   1c5e0:	beq	1d434 <main@@Base+0x7598>
   1c5e4:	ldrb	r0, [r9]
   1c5e8:	cmp	r0, #44	; 0x2c
   1c5ec:	bne	1d43c <main@@Base+0x75a0>
   1c5f0:	add	r1, r9, #1
   1c5f4:	sub	r0, r6, r1
   1c5f8:	cmp	r0, #2
   1c5fc:	blt	1c630 <main@@Base+0x6794>
   1c600:	ldrb	r0, [r1]
   1c604:	cmp	r0, #32
   1c608:	bls	1c61c <main@@Base+0x6780>
   1c60c:	mov	r8, r1
   1c610:	cmp	r8, r6
   1c614:	bne	1c648 <main@@Base+0x67ac>
   1c618:	b	1d468 <main@@Base+0x75cc>
   1c61c:	bne	1c630 <main@@Base+0x6794>
   1c620:	ldrb	r0, [r9, #2]!
   1c624:	cmp	r0, #32
   1c628:	mov	r8, r9
   1c62c:	bhi	1c640 <main@@Base+0x67a4>
   1c630:	mov	r0, sl
   1c634:	mov	r2, r6
   1c638:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c63c:	mov	r8, r0
   1c640:	cmp	r8, r6
   1c644:	beq	1d468 <main@@Base+0x75cc>
   1c648:	ldrb	r0, [r8]
   1c64c:	cmp	r0, #93	; 0x5d
   1c650:	bne	1c520 <main@@Base+0x6684>
   1c654:	add	r1, r8, #1
   1c658:	sub	r0, r6, r1
   1c65c:	cmp	r0, #2
   1c660:	blt	1f858 <main@@Base+0x99bc>
   1c664:	ldrb	r0, [r1]
   1c668:	cmp	r0, #32
   1c66c:	bls	1f83c <main@@Base+0x99a0>
   1c670:	ldr	r6, [sp, #36]	; 0x24
   1c674:	ldr	sl, [sp, #32]
   1c678:	mov	r9, r1
   1c67c:	b	1b448 <main@@Base+0x55ac>
   1c680:	andeq	r0, r4, ip, lsr sl
   1c684:	bne	1c694 <main@@Base+0x67f8>
   1c688:	ldrb	r0, [r8, #2]!
   1c68c:	cmp	r0, #32
   1c690:	bhi	1c6a4 <main@@Base+0x6808>
   1c694:	mov	r0, sl
   1c698:	mov	r2, r6
   1c69c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c6a0:	mov	r8, r0
   1c6a4:	cmp	r7, r8
   1c6a8:	beq	1e9b4 <main@@Base+0x8b18>
   1c6ac:	mov	r0, #0
   1c6b0:	mov	r1, #3
   1c6b4:	str	r0, [sp, #44]	; 0x2c
   1c6b8:	ldr	r0, [sl]
   1c6bc:	bl	2f340 <flatcc_builder_start_table@@Base>
   1c6c0:	cmp	r0, #0
   1c6c4:	bne	1c730 <main@@Base+0x6894>
   1c6c8:	cmp	r8, r6
   1c6cc:	beq	1c700 <main@@Base+0x6864>
   1c6d0:	ldrb	r0, [r8]
   1c6d4:	cmp	r0, #123	; 0x7b
   1c6d8:	bne	1c700 <main@@Base+0x6864>
   1c6dc:	add	r1, r8, #1
   1c6e0:	sub	r0, r6, r1
   1c6e4:	cmp	r0, #2
   1c6e8:	blt	1eb70 <main@@Base+0x8cd4>
   1c6ec:	ldrb	r0, [r1]
   1c6f0:	cmp	r0, #32
   1c6f4:	bls	1eb60 <main@@Base+0x8cc4>
   1c6f8:	mov	r8, r1
   1c6fc:	b	1eb80 <main@@Base+0x8ce4>
   1c700:	mov	r0, sl
   1c704:	mov	r1, r8
   1c708:	mov	r2, r6
   1c70c:	mov	r3, #21
   1c710:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c714:	mov	r8, r0
   1c718:	ldr	r0, [sp, #24]
   1c71c:	ldr	r0, [r0]
   1c720:	cmp	r0, #0
   1c724:	beq	1c760 <main@@Base+0x68c4>
   1c728:	ldr	r6, [sp, #36]	; 0x24
   1c72c:	ldr	sl, [sp, #32]
   1c730:	mov	r0, sl
   1c734:	mov	r1, r8
   1c738:	mov	r2, r6
   1c73c:	mov	r3, #33	; 0x21
   1c740:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c744:	mov	r8, r0
   1c748:	ldr	r0, [sp, #44]	; 0x2c
   1c74c:	cmp	r0, #0
   1c750:	beq	16888 <main@@Base+0x9ec>
   1c754:	ldr	r0, [sl]
   1c758:	mov	r1, #14
   1c75c:	b	1fa58 <main@@Base+0x9bbc>
   1c760:	ldr	r0, [sp, #32]
   1c764:	ldr	r0, [r0]
   1c768:	bl	2fd70 <flatcc_builder_end_table@@Base>
   1c76c:	cmp	r0, #0
   1c770:	str	r0, [sp, #44]	; 0x2c
   1c774:	beq	1c728 <main@@Base+0x688c>
   1c778:	ldr	r6, [sp, #36]	; 0x24
   1c77c:	ldr	sl, [sp, #32]
   1c780:	b	1c754 <main@@Base+0x68b8>
   1c784:	bne	1c794 <main@@Base+0x68f8>
   1c788:	ldrb	r0, [r8, #2]!
   1c78c:	cmp	r0, #32
   1c790:	bhi	1c7a4 <main@@Base+0x6908>
   1c794:	mov	r0, sl
   1c798:	mov	r2, r6
   1c79c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c7a0:	mov	r8, r0
   1c7a4:	cmp	r7, r8
   1c7a8:	beq	1e9b4 <main@@Base+0x8b18>
   1c7ac:	ldr	r0, [sl]
   1c7b0:	mov	r1, #1
   1c7b4:	mov	r2, #1
   1c7b8:	mvn	r3, #0
   1c7bc:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   1c7c0:	cmp	r0, #0
   1c7c4:	bne	16888 <main@@Base+0x9ec>
   1c7c8:	cmp	r8, r6
   1c7cc:	beq	1c810 <main@@Base+0x6974>
   1c7d0:	ldrb	r0, [r8]
   1c7d4:	cmp	r0, #91	; 0x5b
   1c7d8:	bne	1c810 <main@@Base+0x6974>
   1c7dc:	add	r1, r8, #1
   1c7e0:	sub	r0, r6, r1
   1c7e4:	cmp	r0, #2
   1c7e8:	blt	1d17c <main@@Base+0x72e0>
   1c7ec:	ldrb	r0, [r1]
   1c7f0:	cmp	r0, #32
   1c7f4:	bls	1d164 <main@@Base+0x72c8>
   1c7f8:	ldr	r6, [sp, #36]	; 0x24
   1c7fc:	ldr	sl, [sp, #32]
   1c800:	mov	r8, r1
   1c804:	cmp	r8, r6
   1c808:	bne	1d194 <main@@Base+0x72f8>
   1c80c:	b	1d1f4 <main@@Base+0x7358>
   1c810:	mov	r0, sl
   1c814:	mov	r1, r8
   1c818:	mov	r2, r6
   1c81c:	mov	r3, #22
   1c820:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c824:	mov	r8, r0
   1c828:	ldr	r0, [sl]
   1c82c:	bl	300b4 <flatcc_builder_end_vector@@Base>
   1c830:	cmp	r0, #0
   1c834:	str	r0, [sp, #44]	; 0x2c
   1c838:	beq	16888 <main@@Base+0x9ec>
   1c83c:	ldr	r0, [sl]
   1c840:	mov	r1, #5
   1c844:	b	1fa58 <main@@Base+0x9bbc>
   1c848:	andeq	r0, r4, ip, ror #16
   1c84c:	ldr	sl, [sp, #32]
   1c850:	bne	1c860 <main@@Base+0x69c4>
   1c854:	ldrb	r0, [r6, #2]!
   1c858:	cmp	r0, #32
   1c85c:	bhi	1c870 <main@@Base+0x69d4>
   1c860:	ldr	r2, [sp, #36]	; 0x24
   1c864:	mov	r0, sl
   1c868:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c86c:	mov	r6, r0
   1c870:	cmp	r9, r6
   1c874:	beq	1aa5c <main@@Base+0x4bc0>
   1c878:	ldr	r2, [sp, #36]	; 0x24
   1c87c:	mov	r4, #0
   1c880:	str	r4, [fp, #-52]	; 0xffffffcc
   1c884:	str	r4, [fp, #-56]	; 0xffffffc8
   1c888:	str	r4, [sp, #60]	; 0x3c
   1c88c:	str	r4, [sp, #48]	; 0x30
   1c890:	cmp	r6, r2
   1c894:	beq	1c8dc <main@@Base+0x6a40>
   1c898:	sub	r0, fp, #56	; 0x38
   1c89c:	mov	r1, r6
   1c8a0:	add	r3, sp, #48	; 0x30
   1c8a4:	str	r0, [sp]
   1c8a8:	mov	r0, sl
   1c8ac:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1c8b0:	cmp	r0, r6
   1c8b4:	beq	1c8ec <main@@Base+0x6a50>
   1c8b8:	mov	r9, r0
   1c8bc:	ldr	r0, [sp, #48]	; 0x30
   1c8c0:	cmp	r0, #0
   1c8c4:	beq	1c8fc <main@@Base+0x6a60>
   1c8c8:	ldr	r2, [sp, #36]	; 0x24
   1c8cc:	mov	r0, sl
   1c8d0:	mov	r1, r9
   1c8d4:	mov	r3, #8
   1c8d8:	b	1c91c <main@@Base+0x6a80>
   1c8dc:	mov	r9, r2
   1c8e0:	cmp	r6, r9
   1c8e4:	bne	1c968 <main@@Base+0x6acc>
   1c8e8:	b	1c92c <main@@Base+0x6a90>
   1c8ec:	mov	r9, r6
   1c8f0:	cmp	r6, r9
   1c8f4:	bne	1c968 <main@@Base+0x6acc>
   1c8f8:	b	1c92c <main@@Base+0x6a90>
   1c8fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c900:	cmp	r0, #0
   1c904:	beq	1d450 <main@@Base+0x75b4>
   1c908:	ldr	sl, [sp, #32]
   1c90c:	ldr	r2, [sp, #36]	; 0x24
   1c910:	mov	r1, r9
   1c914:	mov	r3, #7
   1c918:	mov	r0, sl
   1c91c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1c920:	mov	r9, r0
   1c924:	cmp	r6, r9
   1c928:	bne	1c968 <main@@Base+0x6acc>
   1c92c:	add	r0, sp, #60	; 0x3c
   1c930:	ldr	r4, [sp, #36]	; 0x24
   1c934:	mov	r1, r6
   1c938:	str	r0, [sp]
   1c93c:	mov	r0, sl
   1c940:	ldr	r3, [pc, #4004]	; 1d8ec <main@@Base+0x7a50>
   1c944:	mov	r2, r4
   1c948:	add	r3, pc, r3
   1c94c:	bl	243b4 <main@@Base+0xe518>
   1c950:	mov	r9, r0
   1c954:	cmp	r0, r6
   1c958:	cmpne	r9, r4
   1c95c:	beq	1fc38 <main@@Base+0x9d9c>
   1c960:	ldr	r4, [sp, #60]	; 0x3c
   1c964:	ldr	sl, [sp, #32]
   1c968:	ldr	r6, [sp, #36]	; 0x24
   1c96c:	cmp	r4, #0
   1c970:	bne	1c980 <main@@Base+0x6ae4>
   1c974:	ldrb	r0, [sl, #8]
   1c978:	tst	r0, #2
   1c97c:	beq	1e9c8 <main@@Base+0x8b2c>
   1c980:	ldr	r0, [sl]
   1c984:	mov	r1, #17
   1c988:	mov	r2, #4
   1c98c:	mov	r3, #4
   1c990:	bl	307e4 <flatcc_builder_table_add@@Base>
   1c994:	cmp	r0, #0
   1c998:	beq	1fc38 <main@@Base+0x9d9c>
   1c99c:	str	r4, [r0]
   1c9a0:	b	1e9c8 <main@@Base+0x8b2c>
   1c9a4:	ldr	sl, [sp, #32]
   1c9a8:	bne	1c9b8 <main@@Base+0x6b1c>
   1c9ac:	ldrb	r0, [r6, #2]!
   1c9b0:	cmp	r0, #32
   1c9b4:	bhi	1c9c8 <main@@Base+0x6b2c>
   1c9b8:	ldr	r2, [sp, #36]	; 0x24
   1c9bc:	mov	r0, sl
   1c9c0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1c9c4:	mov	r6, r0
   1c9c8:	cmp	r9, r6
   1c9cc:	beq	1ab60 <main@@Base+0x4cc4>
   1c9d0:	ldr	r2, [sp, #36]	; 0x24
   1c9d4:	mov	r4, #0
   1c9d8:	str	r4, [fp, #-52]	; 0xffffffcc
   1c9dc:	str	r4, [fp, #-56]	; 0xffffffc8
   1c9e0:	str	r4, [sp, #52]	; 0x34
   1c9e4:	str	r4, [sp, #48]	; 0x30
   1c9e8:	str	r4, [sp, #60]	; 0x3c
   1c9ec:	cmp	r6, r2
   1c9f0:	beq	1ca50 <main@@Base+0x6bb4>
   1c9f4:	sub	r0, fp, #56	; 0x38
   1c9f8:	mov	r1, r6
   1c9fc:	add	r3, sp, #60	; 0x3c
   1ca00:	str	r0, [sp]
   1ca04:	mov	r0, sl
   1ca08:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1ca0c:	cmp	r0, r6
   1ca10:	beq	1ca64 <main@@Base+0x6bc8>
   1ca14:	mov	r9, r0
   1ca18:	ldr	r0, [sp, #60]	; 0x3c
   1ca1c:	cmp	r0, #0
   1ca20:	beq	1ca7c <main@@Base+0x6be0>
   1ca24:	ldr	r2, [sp, #36]	; 0x24
   1ca28:	mov	r0, sl
   1ca2c:	mov	r1, r9
   1ca30:	mov	r3, #8
   1ca34:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ca38:	mov	r9, r0
   1ca3c:	mov	r4, #0
   1ca40:	mov	r5, #0
   1ca44:	cmp	r6, r9
   1ca48:	bne	1cad4 <main@@Base+0x6c38>
   1ca4c:	b	1ca94 <main@@Base+0x6bf8>
   1ca50:	mov	r5, #0
   1ca54:	mov	r9, r2
   1ca58:	cmp	r6, r9
   1ca5c:	bne	1cad4 <main@@Base+0x6c38>
   1ca60:	b	1ca94 <main@@Base+0x6bf8>
   1ca64:	mov	r4, #0
   1ca68:	mov	r5, #0
   1ca6c:	mov	r9, r6
   1ca70:	cmp	r6, r9
   1ca74:	bne	1cad4 <main@@Base+0x6c38>
   1ca78:	b	1ca94 <main@@Base+0x6bf8>
   1ca7c:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1ca80:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1ca84:	str	r5, [sp, #52]	; 0x34
   1ca88:	str	r4, [sp, #48]	; 0x30
   1ca8c:	cmp	r6, r9
   1ca90:	bne	1cad4 <main@@Base+0x6c38>
   1ca94:	add	r0, sp, #48	; 0x30
   1ca98:	ldr	r4, [sp, #36]	; 0x24
   1ca9c:	mov	r1, r6
   1caa0:	str	r0, [sp]
   1caa4:	mov	r0, sl
   1caa8:	ldr	r3, [pc, #4016]	; 1da60 <main@@Base+0x7bc4>
   1caac:	mov	r2, r4
   1cab0:	add	r3, pc, r3
   1cab4:	bl	24594 <main@@Base+0xe6f8>
   1cab8:	mov	r9, r0
   1cabc:	cmp	r0, r6
   1cac0:	cmpne	r9, r4
   1cac4:	beq	1fc38 <main@@Base+0x9d9c>
   1cac8:	ldr	r4, [sp, #48]	; 0x30
   1cacc:	ldr	r5, [sp, #52]	; 0x34
   1cad0:	ldr	sl, [sp, #32]
   1cad4:	ldr	r6, [sp, #36]	; 0x24
   1cad8:	orrs	r0, r4, r5
   1cadc:	bne	1caec <main@@Base+0x6c50>
   1cae0:	ldrb	r0, [sl, #8]
   1cae4:	tst	r0, #2
   1cae8:	beq	1e9c8 <main@@Base+0x8b2c>
   1caec:	ldr	r0, [sl]
   1caf0:	mov	r1, #19
   1caf4:	mov	r2, #8
   1caf8:	mov	r3, #8
   1cafc:	bl	307e4 <flatcc_builder_table_add@@Base>
   1cb00:	cmp	r0, #0
   1cb04:	beq	1fc38 <main@@Base+0x9d9c>
   1cb08:	strd	r4, [r0]
   1cb0c:	b	1e9c8 <main@@Base+0x8b2c>
   1cb10:	beq	1d61c <main@@Base+0x7780>
   1cb14:	b	1d62c <main@@Base+0x7790>
   1cb18:	ldr	r6, [sp, #36]	; 0x24
   1cb1c:	ldr	sl, [sp, #32]
   1cb20:	bne	1cb30 <main@@Base+0x6c94>
   1cb24:	ldrb	r0, [r8, #2]!
   1cb28:	cmp	r0, #32
   1cb2c:	bhi	1cb40 <main@@Base+0x6ca4>
   1cb30:	mov	r0, sl
   1cb34:	mov	r2, r6
   1cb38:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cb3c:	mov	r8, r0
   1cb40:	cmp	r7, r8
   1cb44:	beq	1e9b4 <main@@Base+0x8b18>
   1cb48:	ldr	r0, [sl]
   1cb4c:	bl	2eec0 <flatcc_builder_start_offset_vector@@Base>
   1cb50:	cmp	r0, #0
   1cb54:	bne	16888 <main@@Base+0x9ec>
   1cb58:	cmp	r8, r6
   1cb5c:	beq	1cb94 <main@@Base+0x6cf8>
   1cb60:	ldrb	r0, [r8]
   1cb64:	cmp	r0, #91	; 0x5b
   1cb68:	bne	1cb94 <main@@Base+0x6cf8>
   1cb6c:	add	r1, r8, #1
   1cb70:	sub	r0, r6, r1
   1cb74:	cmp	r0, #2
   1cb78:	blt	1d48c <main@@Base+0x75f0>
   1cb7c:	ldrb	r0, [r1]
   1cb80:	cmp	r0, #32
   1cb84:	bls	1d474 <main@@Base+0x75d8>
   1cb88:	ldr	r6, [sp, #36]	; 0x24
   1cb8c:	mov	r8, r1
   1cb90:	b	1d49c <main@@Base+0x7600>
   1cb94:	mov	r0, sl
   1cb98:	mov	r1, r8
   1cb9c:	mov	r2, r6
   1cba0:	mov	r3, #22
   1cba4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1cba8:	mov	r8, r0
   1cbac:	ldr	r0, [sl]
   1cbb0:	bl	2f0a8 <flatcc_builder_end_offset_vector@@Base>
   1cbb4:	cmp	r0, #0
   1cbb8:	str	r0, [sp, #44]	; 0x2c
   1cbbc:	beq	16888 <main@@Base+0x9ec>
   1cbc0:	ldr	r0, [sl]
   1cbc4:	mov	r1, #10
   1cbc8:	b	1fa58 <main@@Base+0x9bbc>
   1cbcc:	ldr	r6, [sp, #36]	; 0x24
   1cbd0:	ldr	sl, [sp, #32]
   1cbd4:	bne	1cbe4 <main@@Base+0x6d48>
   1cbd8:	ldrb	r0, [r8, #19]!
   1cbdc:	cmp	r0, #32
   1cbe0:	bhi	1cbf4 <main@@Base+0x6d58>
   1cbe4:	mov	r0, sl
   1cbe8:	mov	r2, r6
   1cbec:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cbf0:	mov	r8, r0
   1cbf4:	cmp	r8, r6
   1cbf8:	beq	1cc3c <main@@Base+0x6da0>
   1cbfc:	ldrb	r0, [r8]
   1cc00:	cmp	r0, #58	; 0x3a
   1cc04:	bne	1cc3c <main@@Base+0x6da0>
   1cc08:	add	r1, r8, #1
   1cc0c:	sub	r0, r6, r1
   1cc10:	cmp	r0, #2
   1cc14:	blt	1e7c4 <main@@Base+0x8928>
   1cc18:	ldrb	r0, [r1]
   1cc1c:	cmp	r0, #32
   1cc20:	bls	1e7ac <main@@Base+0x8910>
   1cc24:	ldr	r6, [sp, #36]	; 0x24
   1cc28:	ldr	sl, [sp, #32]
   1cc2c:	mov	r8, r1
   1cc30:	cmp	r7, r8
   1cc34:	bne	1e7dc <main@@Base+0x8940>
   1cc38:	b	1e9b4 <main@@Base+0x8b18>
   1cc3c:	mov	r0, sl
   1cc40:	mov	r1, r8
   1cc44:	mov	r2, r6
   1cc48:	mov	r3, #4
   1cc4c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1cc50:	b	1e7d0 <main@@Base+0x8934>
   1cc54:	ldr	r6, [sp, #36]	; 0x24
   1cc58:	ldr	sl, [sp, #32]
   1cc5c:	bne	1cc6c <main@@Base+0x6dd0>
   1cc60:	ldrb	r0, [r8, #19]!
   1cc64:	cmp	r0, #32
   1cc68:	bhi	1cc7c <main@@Base+0x6de0>
   1cc6c:	mov	r0, sl
   1cc70:	mov	r2, r6
   1cc74:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cc78:	mov	r8, r0
   1cc7c:	cmp	r8, r6
   1cc80:	beq	1ccc4 <main@@Base+0x6e28>
   1cc84:	ldrb	r0, [r8]
   1cc88:	cmp	r0, #58	; 0x3a
   1cc8c:	bne	1ccc4 <main@@Base+0x6e28>
   1cc90:	add	r1, r8, #1
   1cc94:	sub	r0, r6, r1
   1cc98:	cmp	r0, #2
   1cc9c:	blt	1e91c <main@@Base+0x8a80>
   1cca0:	ldrb	r0, [r1]
   1cca4:	cmp	r0, #32
   1cca8:	bls	1e904 <main@@Base+0x8a68>
   1ccac:	ldr	r6, [sp, #36]	; 0x24
   1ccb0:	ldr	sl, [sp, #32]
   1ccb4:	mov	r8, r1
   1ccb8:	cmp	r7, r8
   1ccbc:	bne	1e934 <main@@Base+0x8a98>
   1ccc0:	b	1e9b4 <main@@Base+0x8b18>
   1ccc4:	mov	r0, sl
   1ccc8:	mov	r1, r8
   1cccc:	mov	r2, r6
   1ccd0:	mov	r3, #4
   1ccd4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ccd8:	b	1e928 <main@@Base+0x8a8c>
   1ccdc:	ldr	r6, [sp, #36]	; 0x24
   1cce0:	ldr	sl, [sp, #32]
   1cce4:	bne	1ccf4 <main@@Base+0x6e58>
   1cce8:	ldrb	r0, [r8, #2]!
   1ccec:	cmp	r0, #32
   1ccf0:	bhi	1cd04 <main@@Base+0x6e68>
   1ccf4:	mov	r0, sl
   1ccf8:	mov	r2, r6
   1ccfc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cd00:	mov	r8, r0
   1cd04:	cmp	r7, r8
   1cd08:	beq	1e9b4 <main@@Base+0x8b18>
   1cd0c:	mov	r2, r6
   1cd10:	mov	r6, #0
   1cd14:	cmp	r8, r2
   1cd18:	str	r6, [fp, #-52]	; 0xffffffcc
   1cd1c:	str	r6, [fp, #-56]	; 0xffffffc8
   1cd20:	str	r6, [sp, #60]	; 0x3c
   1cd24:	str	r6, [sp, #48]	; 0x30
   1cd28:	beq	1cd84 <main@@Base+0x6ee8>
   1cd2c:	sub	r0, fp, #56	; 0x38
   1cd30:	mov	r1, r8
   1cd34:	add	r3, sp, #48	; 0x30
   1cd38:	str	r0, [sp]
   1cd3c:	mov	r0, sl
   1cd40:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1cd44:	cmp	r0, r8
   1cd48:	beq	1cd94 <main@@Base+0x6ef8>
   1cd4c:	ldr	r2, [sp, #48]	; 0x30
   1cd50:	mov	r9, r0
   1cd54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cd58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1cd5c:	cmp	r2, #0
   1cd60:	beq	1cda4 <main@@Base+0x6f08>
   1cd64:	subs	r2, r0, #-2147483647	; 0x80000001
   1cd68:	sbcs	r1, r1, #0
   1cd6c:	bcc	1cdd8 <main@@Base+0x6f3c>
   1cd70:	ldr	sl, [sp, #32]
   1cd74:	ldr	r2, [sp, #36]	; 0x24
   1cd78:	mov	r1, r9
   1cd7c:	mov	r3, #8
   1cd80:	b	1cdc0 <main@@Base+0x6f24>
   1cd84:	mov	r9, r2
   1cd88:	cmp	r8, r9
   1cd8c:	bne	1de30 <main@@Base+0x7f94>
   1cd90:	b	1ddf4 <main@@Base+0x7f58>
   1cd94:	mov	r9, r8
   1cd98:	cmp	r8, r9
   1cd9c:	bne	1de30 <main@@Base+0x7f94>
   1cda0:	b	1ddf4 <main@@Base+0x7f58>
   1cda4:	subs	r2, r0, #-2147483648	; 0x80000000
   1cda8:	sbcs	r1, r1, #0
   1cdac:	bcc	1dde0 <main@@Base+0x7f44>
   1cdb0:	ldr	sl, [sp, #32]
   1cdb4:	ldr	r2, [sp, #36]	; 0x24
   1cdb8:	mov	r1, r9
   1cdbc:	mov	r3, #7
   1cdc0:	mov	r0, sl
   1cdc4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1cdc8:	mov	r9, r0
   1cdcc:	cmp	r8, r9
   1cdd0:	bne	1de30 <main@@Base+0x7f94>
   1cdd4:	b	1ddf4 <main@@Base+0x7f58>
   1cdd8:	rsb	r6, r0, #0
   1cddc:	b	1dde4 <main@@Base+0x7f48>
   1cde0:	ldr	r6, [sp, #36]	; 0x24
   1cde4:	ldr	sl, [sp, #32]
   1cde8:	bne	1cdfc <main@@Base+0x6f60>
   1cdec:	ldrb	r0, [r8, #2]!
   1cdf0:	cmp	r0, #32
   1cdf4:	mov	r9, r8
   1cdf8:	bhi	19458 <main@@Base+0x35bc>
   1cdfc:	mov	r0, sl
   1ce00:	mov	r2, r6
   1ce04:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ce08:	b	19454 <main@@Base+0x35b8>
   1ce0c:	andeq	r0, r4, ip, lsr #9
   1ce10:	ldr	r6, [sp, #36]	; 0x24
   1ce14:	ldr	sl, [sp, #32]
   1ce18:	bne	1ce28 <main@@Base+0x6f8c>
   1ce1c:	ldrb	r0, [r8, #2]!
   1ce20:	cmp	r0, #32
   1ce24:	bhi	1ce38 <main@@Base+0x6f9c>
   1ce28:	mov	r0, sl
   1ce2c:	mov	r2, r6
   1ce30:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ce34:	mov	r8, r0
   1ce38:	cmp	r8, r6
   1ce3c:	mov	r2, r6
   1ce40:	beq	1ce9c <main@@Base+0x7000>
   1ce44:	ldrb	r0, [r8]
   1ce48:	cmp	r0, #93	; 0x5d
   1ce4c:	bne	1ce90 <main@@Base+0x6ff4>
   1ce50:	ldr	r6, [sp, #36]	; 0x24
   1ce54:	ldr	sl, [sp, #32]
   1ce58:	add	r1, r8, #1
   1ce5c:	sub	r0, r6, r1
   1ce60:	cmp	r0, #2
   1ce64:	blt	1f8cc <main@@Base+0x9a30>
   1ce68:	ldrb	r0, [r1]
   1ce6c:	cmp	r0, #32
   1ce70:	bhi	1e324 <main@@Base+0x8488>
   1ce74:	ldr	r6, [sp, #36]	; 0x24
   1ce78:	ldr	sl, [sp, #32]
   1ce7c:	bne	1f8cc <main@@Base+0x9a30>
   1ce80:	ldrb	r0, [r8, #2]!
   1ce84:	cmp	r0, #32
   1ce88:	bhi	1bb14 <main@@Base+0x5c78>
   1ce8c:	b	1f8cc <main@@Base+0x9a30>
   1ce90:	ldr	r6, [sp, #36]	; 0x24
   1ce94:	ldr	sl, [sp, #32]
   1ce98:	mov	r2, r8
   1ce9c:	mov	r1, r2
   1cea0:	mov	r0, sl
   1cea4:	mov	r2, r6
   1cea8:	add	r3, sp, #44	; 0x2c
   1ceac:	bl	16848 <main@@Base+0x9ac>
   1ceb0:	mov	r8, r0
   1ceb4:	ldr	r0, [sp, #44]	; 0x2c
   1ceb8:	cmp	r0, #0
   1cebc:	beq	16888 <main@@Base+0x9ec>
   1cec0:	ldr	r0, [sl]
   1cec4:	mov	r1, #1
   1cec8:	bl	2e618 <flatcc_builder_extend_offset_vector@@Base>
   1cecc:	cmp	r0, #0
   1ced0:	beq	16888 <main@@Base+0x9ec>
   1ced4:	ldr	r1, [sp, #44]	; 0x2c
   1ced8:	str	r1, [r0]
   1cedc:	sub	r0, r6, r8
   1cee0:	cmp	r0, #2
   1cee4:	blt	1cf18 <main@@Base+0x707c>
   1cee8:	ldrb	r0, [r8]
   1ceec:	cmp	r0, #32
   1cef0:	bls	1cf04 <main@@Base+0x7068>
   1cef4:	mov	r2, r8
   1cef8:	cmp	r2, r6
   1cefc:	bne	1cf34 <main@@Base+0x7098>
   1cf00:	b	1e2ec <main@@Base+0x8450>
   1cf04:	bne	1cf18 <main@@Base+0x707c>
   1cf08:	mov	r2, r8
   1cf0c:	ldrb	r0, [r2, #1]!
   1cf10:	cmp	r0, #32
   1cf14:	bhi	1cf2c <main@@Base+0x7090>
   1cf18:	mov	r0, sl
   1cf1c:	mov	r1, r8
   1cf20:	mov	r2, r6
   1cf24:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cf28:	mov	r2, r0
   1cf2c:	cmp	r2, r6
   1cf30:	beq	1e2ec <main@@Base+0x8450>
   1cf34:	ldrb	r0, [r2]
   1cf38:	cmp	r0, #44	; 0x2c
   1cf3c:	bne	1e2f8 <main@@Base+0x845c>
   1cf40:	add	r1, r2, #1
   1cf44:	sub	r0, r6, r1
   1cf48:	cmp	r0, #2
   1cf4c:	blt	1cf7c <main@@Base+0x70e0>
   1cf50:	ldrb	r0, [r1]
   1cf54:	cmp	r0, #32
   1cf58:	bls	1cf6c <main@@Base+0x70d0>
   1cf5c:	mov	r2, r1
   1cf60:	cmp	r2, r6
   1cf64:	bne	1cf94 <main@@Base+0x70f8>
   1cf68:	b	1e33c <main@@Base+0x84a0>
   1cf6c:	bne	1cf7c <main@@Base+0x70e0>
   1cf70:	ldrb	r0, [r2, #2]!
   1cf74:	cmp	r0, #32
   1cf78:	bhi	1cf8c <main@@Base+0x70f0>
   1cf7c:	mov	r0, sl
   1cf80:	mov	r2, r6
   1cf84:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cf88:	mov	r2, r0
   1cf8c:	cmp	r2, r6
   1cf90:	beq	1e33c <main@@Base+0x84a0>
   1cf94:	ldrb	r0, [r2]
   1cf98:	cmp	r0, #93	; 0x5d
   1cf9c:	bne	1ce9c <main@@Base+0x7000>
   1cfa0:	b	1e308 <main@@Base+0x846c>
   1cfa4:	ldr	r6, [sp, #36]	; 0x24
   1cfa8:	ldr	sl, [sp, #32]
   1cfac:	bne	1cfbc <main@@Base+0x7120>
   1cfb0:	ldrb	r0, [r8, #2]!
   1cfb4:	cmp	r0, #32
   1cfb8:	bhi	1cfcc <main@@Base+0x7130>
   1cfbc:	mov	r0, sl
   1cfc0:	mov	r2, r6
   1cfc4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1cfc8:	mov	r8, r0
   1cfcc:	cmp	r9, r8
   1cfd0:	beq	1873c <main@@Base+0x28a0>
   1cfd4:	ldr	r0, [sl]
   1cfd8:	mov	r1, #8
   1cfdc:	mov	r2, #8
   1cfe0:	mvn	r3, #-536870912	; 0xe0000000
   1cfe4:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   1cfe8:	cmp	r0, #0
   1cfec:	bne	16888 <main@@Base+0x9ec>
   1cff0:	cmp	r8, r6
   1cff4:	beq	1d034 <main@@Base+0x7198>
   1cff8:	ldrb	r0, [r8]
   1cffc:	cmp	r0, #91	; 0x5b
   1d000:	bne	1d034 <main@@Base+0x7198>
   1d004:	add	r1, r8, #1
   1d008:	sub	r0, r6, r1
   1d00c:	cmp	r0, #2
   1d010:	blt	1de80 <main@@Base+0x7fe4>
   1d014:	ldrb	r0, [r1]
   1d018:	cmp	r0, #32
   1d01c:	bls	1de68 <main@@Base+0x7fcc>
   1d020:	ldr	r6, [sp, #36]	; 0x24
   1d024:	mov	r8, r1
   1d028:	cmp	r8, r6
   1d02c:	bne	1de98 <main@@Base+0x7ffc>
   1d030:	b	1def4 <main@@Base+0x8058>
   1d034:	mov	r0, sl
   1d038:	mov	r1, r8
   1d03c:	mov	r2, r6
   1d040:	mov	r3, #22
   1d044:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1d048:	mov	r8, r0
   1d04c:	ldr	r0, [sl]
   1d050:	bl	300b4 <flatcc_builder_end_vector@@Base>
   1d054:	cmp	r0, #0
   1d058:	str	r0, [sp, #44]	; 0x2c
   1d05c:	beq	16888 <main@@Base+0x9ec>
   1d060:	ldr	r0, [sl]
   1d064:	mov	r1, #32
   1d068:	b	1fa58 <main@@Base+0x9bbc>
   1d06c:	ldr	r6, [sp, #36]	; 0x24
   1d070:	ldr	sl, [sp, #32]
   1d074:	bne	1d084 <main@@Base+0x71e8>
   1d078:	ldrb	r0, [r8, #2]!
   1d07c:	cmp	r0, #32
   1d080:	bhi	1d094 <main@@Base+0x71f8>
   1d084:	mov	r0, sl
   1d088:	mov	r2, r6
   1d08c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d090:	mov	r8, r0
   1d094:	cmp	r7, r8
   1d098:	beq	1e9b4 <main@@Base+0x8b18>
   1d09c:	cmp	r8, r6
   1d0a0:	beq	1d100 <main@@Base+0x7264>
   1d0a4:	ldrb	r0, [r8]
   1d0a8:	cmp	r0, #91	; 0x5b
   1d0ac:	bne	1d100 <main@@Base+0x7264>
   1d0b0:	ldr	r0, [sl]
   1d0b4:	mov	r1, #1
   1d0b8:	mov	r2, #1
   1d0bc:	mvn	r3, #0
   1d0c0:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   1d0c4:	cmp	r0, #0
   1d0c8:	bne	1fc3c <main@@Base+0x9da0>
   1d0cc:	ldrb	r0, [r8]
   1d0d0:	cmp	r0, #91	; 0x5b
   1d0d4:	bne	1d14c <main@@Base+0x72b0>
   1d0d8:	ldr	r0, [sp, #36]	; 0x24
   1d0dc:	add	r1, r8, #1
   1d0e0:	sub	r0, r0, r1
   1d0e4:	cmp	r0, #2
   1d0e8:	blt	1f514 <main@@Base+0x9678>
   1d0ec:	ldrb	r0, [r1]
   1d0f0:	cmp	r0, #32
   1d0f4:	bls	1f504 <main@@Base+0x9668>
   1d0f8:	mov	r8, r1
   1d0fc:	b	1f524 <main@@Base+0x9688>
   1d100:	ldr	r0, [sl]
   1d104:	mov	r1, #0
   1d108:	mov	r2, #0
   1d10c:	mov	r3, #0
   1d110:	bl	2dd68 <flatcc_builder_start_buffer@@Base>
   1d114:	cmp	r0, #0
   1d118:	bne	16888 <main@@Base+0x9ec>
   1d11c:	mov	r0, sl
   1d120:	mov	r1, r8
   1d124:	mov	r2, r6
   1d128:	add	r3, sp, #44	; 0x2c
   1d12c:	bl	16848 <main@@Base+0x9ac>
   1d130:	ldr	r1, [sp, #44]	; 0x2c
   1d134:	mov	r8, r0
   1d138:	cmp	r1, #0
   1d13c:	beq	16888 <main@@Base+0x9ec>
   1d140:	ldr	r0, [sl]
   1d144:	bl	2df68 <flatcc_builder_end_buffer@@Base>
   1d148:	b	1fa44 <main@@Base+0x9ba8>
   1d14c:	ldr	r0, [sp, #32]
   1d150:	ldr	r2, [sp, #36]	; 0x24
   1d154:	mov	r1, r8
   1d158:	mov	r3, #22
   1d15c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1d160:	b	1fa30 <main@@Base+0x9b94>
   1d164:	ldr	r6, [sp, #36]	; 0x24
   1d168:	ldr	sl, [sp, #32]
   1d16c:	bne	1d17c <main@@Base+0x72e0>
   1d170:	ldrb	r0, [r8, #2]!
   1d174:	cmp	r0, #32
   1d178:	bhi	1d18c <main@@Base+0x72f0>
   1d17c:	mov	r0, sl
   1d180:	mov	r2, r6
   1d184:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d188:	mov	r8, r0
   1d18c:	cmp	r8, r6
   1d190:	beq	1d1f4 <main@@Base+0x7358>
   1d194:	ldrb	r0, [r8]
   1d198:	cmp	r0, #93	; 0x5d
   1d19c:	bne	1d1ec <main@@Base+0x7350>
   1d1a0:	ldr	r6, [sp, #36]	; 0x24
   1d1a4:	ldr	sl, [sp, #32]
   1d1a8:	add	r1, r8, #1
   1d1ac:	sub	r0, r6, r1
   1d1b0:	cmp	r0, #2
   1d1b4:	blt	1d1dc <main@@Base+0x7340>
   1d1b8:	ldrb	r0, [r1]
   1d1bc:	cmp	r0, #32
   1d1c0:	bhi	1e52c <main@@Base+0x8690>
   1d1c4:	ldr	r6, [sp, #36]	; 0x24
   1d1c8:	ldr	sl, [sp, #32]
   1d1cc:	bne	1d1dc <main@@Base+0x7340>
   1d1d0:	ldrb	r0, [r8, #2]!
   1d1d4:	cmp	r0, #32
   1d1d8:	bhi	1c828 <main@@Base+0x698c>
   1d1dc:	mov	r0, sl
   1d1e0:	mov	r2, r6
   1d1e4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d1e8:	b	1c824 <main@@Base+0x6988>
   1d1ec:	ldr	sl, [sp, #32]
   1d1f0:	mov	r6, r8
   1d1f4:	mov	r0, #0
   1d1f8:	mov	r1, #1
   1d1fc:	strb	r0, [sp, #60]	; 0x3c
   1d200:	ldr	r0, [sl]
   1d204:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1d208:	cmp	r0, #0
   1d20c:	beq	1fc84 <main@@Base+0x9de8>
   1d210:	mov	r8, r6
   1d214:	ldr	r6, [sp, #36]	; 0x24
   1d218:	ldr	sl, [sp, #32]
   1d21c:	mov	r7, r0
   1d220:	mov	r5, #0
   1d224:	cmp	r8, r6
   1d228:	str	r5, [fp, #-52]	; 0xffffffcc
   1d22c:	str	r5, [fp, #-56]	; 0xffffffc8
   1d230:	strb	r5, [sp, #60]	; 0x3c
   1d234:	str	r5, [sp, #48]	; 0x30
   1d238:	beq	1d280 <main@@Base+0x73e4>
   1d23c:	sub	r0, fp, #56	; 0x38
   1d240:	mov	r1, r8
   1d244:	mov	r2, r6
   1d248:	add	r3, sp, #48	; 0x30
   1d24c:	str	r0, [sp]
   1d250:	mov	r0, sl
   1d254:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1d258:	cmp	r0, r8
   1d25c:	beq	1d290 <main@@Base+0x73f4>
   1d260:	mov	r1, r0
   1d264:	ldr	r0, [sp, #48]	; 0x30
   1d268:	cmp	r0, #0
   1d26c:	beq	1d2a4 <main@@Base+0x7408>
   1d270:	mov	r0, sl
   1d274:	mov	r2, r6
   1d278:	mov	r3, #8
   1d27c:	b	1d2cc <main@@Base+0x7430>
   1d280:	mov	r1, r6
   1d284:	cmp	r8, r1
   1d288:	bne	1d314 <main@@Base+0x7478>
   1d28c:	b	1d2dc <main@@Base+0x7440>
   1d290:	mov	r1, r8
   1d294:	cmp	r8, r1
   1d298:	bne	1d314 <main@@Base+0x7478>
   1d29c:	b	1d2dc <main@@Base+0x7440>
   1d2a0:	andeq	r0, r4, r4, rrx
   1d2a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d2a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d2ac:	subs	r3, r0, #256	; 0x100
   1d2b0:	sbcs	r2, r2, #0
   1d2b4:	bcc	1d3fc <main@@Base+0x7560>
   1d2b8:	ldr	sl, [sp, #32]
   1d2bc:	ldr	r6, [sp, #36]	; 0x24
   1d2c0:	mov	r3, #7
   1d2c4:	mov	r0, sl
   1d2c8:	mov	r2, r6
   1d2cc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1d2d0:	mov	r1, r0
   1d2d4:	cmp	r8, r1
   1d2d8:	bne	1d314 <main@@Base+0x7478>
   1d2dc:	add	r0, sp, #60	; 0x3c
   1d2e0:	mov	r1, r8
   1d2e4:	mov	r2, r6
   1d2e8:	str	r0, [sp]
   1d2ec:	mov	r0, sl
   1d2f0:	ldr	r3, [pc, #4092]	; 1e2f4 <main@@Base+0x8458>
   1d2f4:	add	r3, pc, r3
   1d2f8:	bl	21df0 <main@@Base+0xbf54>
   1d2fc:	mov	r1, r0
   1d300:	cmp	r0, r8
   1d304:	beq	1fc90 <main@@Base+0x9df4>
   1d308:	cmp	r1, r6
   1d30c:	beq	1fc90 <main@@Base+0x9df4>
   1d310:	ldrb	r5, [sp, #60]	; 0x3c
   1d314:	sub	r0, r6, r1
   1d318:	strb	r5, [r7]
   1d31c:	cmp	r0, #2
   1d320:	blt	1d354 <main@@Base+0x74b8>
   1d324:	ldrb	r0, [r1]
   1d328:	cmp	r0, #32
   1d32c:	bls	1d340 <main@@Base+0x74a4>
   1d330:	mov	r8, r1
   1d334:	cmp	r8, r6
   1d338:	bne	1d36c <main@@Base+0x74d0>
   1d33c:	b	1e334 <main@@Base+0x8498>
   1d340:	bne	1d354 <main@@Base+0x74b8>
   1d344:	mov	r8, r1
   1d348:	ldrb	r0, [r8, #1]!
   1d34c:	cmp	r0, #32
   1d350:	bhi	1d364 <main@@Base+0x74c8>
   1d354:	mov	r0, sl
   1d358:	mov	r2, r6
   1d35c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d360:	mov	r8, r0
   1d364:	cmp	r8, r6
   1d368:	beq	1e334 <main@@Base+0x8498>
   1d36c:	ldrb	r0, [r8]
   1d370:	cmp	r0, #44	; 0x2c
   1d374:	bne	1e348 <main@@Base+0x84ac>
   1d378:	add	r1, r8, #1
   1d37c:	sub	r0, r6, r1
   1d380:	cmp	r0, #2
   1d384:	blt	1d3b4 <main@@Base+0x7518>
   1d388:	ldrb	r0, [r1]
   1d38c:	cmp	r0, #32
   1d390:	bls	1d3a4 <main@@Base+0x7508>
   1d394:	mov	r8, r1
   1d398:	cmp	r8, r6
   1d39c:	bne	1d3cc <main@@Base+0x7530>
   1d3a0:	b	1e368 <main@@Base+0x84cc>
   1d3a4:	bne	1d3b4 <main@@Base+0x7518>
   1d3a8:	ldrb	r0, [r8, #2]!
   1d3ac:	cmp	r0, #32
   1d3b0:	bhi	1d3c4 <main@@Base+0x7528>
   1d3b4:	mov	r0, sl
   1d3b8:	mov	r2, r6
   1d3bc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d3c0:	mov	r8, r0
   1d3c4:	cmp	r8, r6
   1d3c8:	beq	1e368 <main@@Base+0x84cc>
   1d3cc:	ldrb	r0, [r8]
   1d3d0:	cmp	r0, #93	; 0x5d
   1d3d4:	beq	1e510 <main@@Base+0x8674>
   1d3d8:	mov	r0, #0
   1d3dc:	mov	r1, #1
   1d3e0:	strb	r0, [sp, #60]	; 0x3c
   1d3e4:	ldr	r0, [sl]
   1d3e8:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1d3ec:	mov	r7, r0
   1d3f0:	cmp	r0, #0
   1d3f4:	bne	1d220 <main@@Base+0x7384>
   1d3f8:	b	16888 <main@@Base+0x9ec>
   1d3fc:	ldr	r6, [sp, #36]	; 0x24
   1d400:	ldr	sl, [sp, #32]
   1d404:	mov	r5, r0
   1d408:	strb	r0, [sp, #60]	; 0x3c
   1d40c:	cmp	r8, r1
   1d410:	bne	1d314 <main@@Base+0x7478>
   1d414:	b	1d2dc <main@@Base+0x7440>
   1d418:	ldr	sl, [sp, #32]
   1d41c:	ldr	r6, [sp, #36]	; 0x24
   1d420:	mov	r1, r8
   1d424:	mov	r0, sl
   1d428:	mov	r2, r6
   1d42c:	mov	r3, #9
   1d430:	b	19a10 <main@@Base+0x3b74>
   1d434:	mov	r9, r6
   1d438:	b	1b448 <main@@Base+0x55ac>
   1d43c:	cmp	r0, #93	; 0x5d
   1d440:	bne	1e534 <main@@Base+0x8698>
   1d444:	ldr	r6, [sp, #36]	; 0x24
   1d448:	ldr	sl, [sp, #32]
   1d44c:	b	1bd5c <main@@Base+0x5ec0>
   1d450:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d454:	ldr	sl, [sp, #32]
   1d458:	str	r4, [sp, #60]	; 0x3c
   1d45c:	cmp	r6, r9
   1d460:	bne	1c968 <main@@Base+0x6acc>
   1d464:	b	1c92c <main@@Base+0x6a90>
   1d468:	mov	r0, sl
   1d46c:	mov	r1, r6
   1d470:	b	1e544 <main@@Base+0x86a8>
   1d474:	ldr	r6, [sp, #36]	; 0x24
   1d478:	ldr	sl, [sp, #32]
   1d47c:	bne	1d48c <main@@Base+0x75f0>
   1d480:	ldrb	r0, [r8, #2]!
   1d484:	cmp	r0, #32
   1d488:	bhi	1d49c <main@@Base+0x7600>
   1d48c:	mov	r0, sl
   1d490:	mov	r2, r6
   1d494:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d498:	mov	r8, r0
   1d49c:	cmp	r8, r6
   1d4a0:	mov	r2, r6
   1d4a4:	beq	1d4f8 <main@@Base+0x765c>
   1d4a8:	ldrb	r0, [r8]
   1d4ac:	cmp	r0, #93	; 0x5d
   1d4b0:	bne	1d4f4 <main@@Base+0x7658>
   1d4b4:	ldr	r6, [sp, #36]	; 0x24
   1d4b8:	ldr	sl, [sp, #32]
   1d4bc:	add	r1, r8, #1
   1d4c0:	sub	r0, r6, r1
   1d4c4:	cmp	r0, #2
   1d4c8:	blt	1fa90 <main@@Base+0x9bf4>
   1d4cc:	ldrb	r0, [r1]
   1d4d0:	cmp	r0, #32
   1d4d4:	bhi	1f420 <main@@Base+0x9584>
   1d4d8:	ldr	r6, [sp, #36]	; 0x24
   1d4dc:	ldr	sl, [sp, #32]
   1d4e0:	bne	1fa90 <main@@Base+0x9bf4>
   1d4e4:	ldrb	r0, [r8, #2]!
   1d4e8:	cmp	r0, #32
   1d4ec:	bhi	1cbac <main@@Base+0x6d10>
   1d4f0:	b	1fa90 <main@@Base+0x9bf4>
   1d4f4:	mov	r2, r8
   1d4f8:	ldr	r6, [sp, #36]	; 0x24
   1d4fc:	ldr	sl, [sp, #32]
   1d500:	mov	r1, r2
   1d504:	mov	r0, sl
   1d508:	mov	r2, r6
   1d50c:	add	r3, sp, #44	; 0x2c
   1d510:	bl	36974 <flatcc_json_parser_build_string@@Base>
   1d514:	mov	r8, r0
   1d518:	ldr	r0, [sp, #44]	; 0x2c
   1d51c:	cmp	r0, #0
   1d520:	beq	16888 <main@@Base+0x9ec>
   1d524:	ldr	r0, [sl]
   1d528:	mov	r1, #1
   1d52c:	bl	2e618 <flatcc_builder_extend_offset_vector@@Base>
   1d530:	cmp	r0, #0
   1d534:	beq	16888 <main@@Base+0x9ec>
   1d538:	ldr	r1, [sp, #44]	; 0x2c
   1d53c:	str	r1, [r0]
   1d540:	sub	r0, r6, r8
   1d544:	cmp	r0, #2
   1d548:	blt	1d57c <main@@Base+0x76e0>
   1d54c:	ldrb	r0, [r8]
   1d550:	cmp	r0, #32
   1d554:	bls	1d568 <main@@Base+0x76cc>
   1d558:	mov	r2, r8
   1d55c:	cmp	r2, r6
   1d560:	bne	1d598 <main@@Base+0x76fc>
   1d564:	b	1eb58 <main@@Base+0x8cbc>
   1d568:	bne	1d57c <main@@Base+0x76e0>
   1d56c:	mov	r2, r8
   1d570:	ldrb	r0, [r2, #1]!
   1d574:	cmp	r0, #32
   1d578:	bhi	1d590 <main@@Base+0x76f4>
   1d57c:	mov	r0, sl
   1d580:	mov	r1, r8
   1d584:	mov	r2, r6
   1d588:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d58c:	mov	r2, r0
   1d590:	cmp	r2, r6
   1d594:	beq	1eb58 <main@@Base+0x8cbc>
   1d598:	ldrb	r0, [r2]
   1d59c:	cmp	r0, #44	; 0x2c
   1d5a0:	bne	1f3f4 <main@@Base+0x9558>
   1d5a4:	add	r1, r2, #1
   1d5a8:	sub	r0, r6, r1
   1d5ac:	cmp	r0, #2
   1d5b0:	blt	1d5e0 <main@@Base+0x7744>
   1d5b4:	ldrb	r0, [r1]
   1d5b8:	cmp	r0, #32
   1d5bc:	bls	1d5d0 <main@@Base+0x7734>
   1d5c0:	mov	r2, r1
   1d5c4:	cmp	r2, r6
   1d5c8:	bne	1d5f8 <main@@Base+0x775c>
   1d5cc:	b	1f454 <main@@Base+0x95b8>
   1d5d0:	bne	1d5e0 <main@@Base+0x7744>
   1d5d4:	ldrb	r0, [r2, #2]!
   1d5d8:	cmp	r0, #32
   1d5dc:	bhi	1d5f0 <main@@Base+0x7754>
   1d5e0:	mov	r0, sl
   1d5e4:	mov	r2, r6
   1d5e8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d5ec:	mov	r2, r0
   1d5f0:	cmp	r2, r6
   1d5f4:	beq	1f454 <main@@Base+0x95b8>
   1d5f8:	ldrb	r0, [r2]
   1d5fc:	cmp	r0, #93	; 0x5d
   1d600:	bne	1d500 <main@@Base+0x7664>
   1d604:	b	1f404 <main@@Base+0x9568>
   1d608:	mov	r8, r6
   1d60c:	b	1b390 <main@@Base+0x54f4>
   1d610:	ldr	r6, [sp, #36]	; 0x24
   1d614:	ldr	sl, [sp, #32]
   1d618:	bne	1d62c <main@@Base+0x7790>
   1d61c:	ldrb	r0, [r2, #2]!
   1d620:	cmp	r0, #32
   1d624:	mov	r9, r2
   1d628:	bhi	1e9c8 <main@@Base+0x8b2c>
   1d62c:	mov	r0, sl
   1d630:	mov	r2, r6
   1d634:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d638:	b	1e9c4 <main@@Base+0x8b28>
   1d63c:	cmp	r0, #93	; 0x5d
   1d640:	bne	1f430 <main@@Base+0x9594>
   1d644:	ldr	r6, [sp, #36]	; 0x24
   1d648:	ldr	sl, [sp, #32]
   1d64c:	add	r1, r2, #1
   1d650:	sub	r0, r6, r1
   1d654:	cmp	r0, #2
   1d658:	blt	1f7a8 <main@@Base+0x990c>
   1d65c:	ldrb	r0, [r1]
   1d660:	cmp	r0, #32
   1d664:	bls	1f78c <main@@Base+0x98f0>
   1d668:	ldr	r6, [sp, #36]	; 0x24
   1d66c:	ldr	sl, [sp, #32]
   1d670:	mov	r8, r1
   1d674:	b	1b390 <main@@Base+0x54f4>
   1d678:	mov	r0, sl
   1d67c:	mov	r1, r6
   1d680:	b	1f440 <main@@Base+0x95a4>
   1d684:	ldr	r6, [sp, #36]	; 0x24
   1d688:	ldr	sl, [sp, #32]
   1d68c:	bne	1d69c <main@@Base+0x7800>
   1d690:	ldrb	r0, [r8, #2]!
   1d694:	cmp	r0, #32
   1d698:	bhi	1d6ac <main@@Base+0x7810>
   1d69c:	mov	r0, sl
   1d6a0:	mov	r2, r6
   1d6a4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d6a8:	mov	r8, r0
   1d6ac:	cmp	r8, r6
   1d6b0:	mov	r2, r6
   1d6b4:	beq	1d708 <main@@Base+0x786c>
   1d6b8:	ldrb	r0, [r8]
   1d6bc:	cmp	r0, #125	; 0x7d
   1d6c0:	bne	1d704 <main@@Base+0x7868>
   1d6c4:	ldr	r6, [sp, #36]	; 0x24
   1d6c8:	ldr	sl, [sp, #32]
   1d6cc:	add	r1, r8, #1
   1d6d0:	sub	r0, r6, r1
   1d6d4:	cmp	r0, #2
   1d6d8:	blt	1f9f4 <main@@Base+0x9b58>
   1d6dc:	ldrb	r0, [r1]
   1d6e0:	cmp	r0, #32
   1d6e4:	bhi	1e790 <main@@Base+0x88f4>
   1d6e8:	ldr	r6, [sp, #36]	; 0x24
   1d6ec:	ldr	sl, [sp, #32]
   1d6f0:	bne	1f9f4 <main@@Base+0x9b58>
   1d6f4:	ldrb	r0, [r8, #2]!
   1d6f8:	cmp	r0, #32
   1d6fc:	bhi	1b230 <main@@Base+0x5394>
   1d700:	b	1f9f4 <main@@Base+0x9b58>
   1d704:	mov	r2, r8
   1d708:	ldr	r6, [sp, #36]	; 0x24
   1d70c:	ldr	sl, [sp, #32]
   1d710:	cmp	r2, r6
   1d714:	mov	r9, r6
   1d718:	beq	1d748 <main@@Base+0x78ac>
   1d71c:	ldrb	r0, [r2]
   1d720:	cmp	r0, #34	; 0x22
   1d724:	bne	1d730 <main@@Base+0x7894>
   1d728:	add	r9, r2, #1
   1d72c:	b	1d748 <main@@Base+0x78ac>
   1d730:	mov	r1, r2
   1d734:	mov	r0, sl
   1d738:	mov	r2, r6
   1d73c:	mov	r3, #5
   1d740:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1d744:	mov	r9, r0
   1d748:	sub	lr, r6, r9
   1d74c:	mov	r1, #8
   1d750:	cmp	lr, #8
   1d754:	movcc	r1, lr
   1d758:	and	r1, r1, #15
   1d75c:	sub	r2, r1, #1
   1d760:	cmp	r2, #7
   1d764:	bhi	1d8e0 <main@@Base+0x7a44>
   1d768:	add	r0, pc, #36	; 0x24
   1d76c:	mov	r1, #0
   1d770:	mov	ip, #0
   1d774:	mov	r8, #0
   1d778:	mov	r7, #0
   1d77c:	mov	r3, #0
   1d780:	mov	r6, #0
   1d784:	mov	r4, #0
   1d788:	ldr	r5, [r0, r2, lsl #2]
   1d78c:	mov	r2, #0
   1d790:	add	pc, r0, r5
   1d794:	andeq	r0, r0, r4, rrx
   1d798:	andeq	r0, r0, ip, asr r0
   1d79c:	andeq	r0, r0, r4, asr r0
   1d7a0:	andeq	r0, r0, ip, asr #32
   1d7a4:	andeq	r0, r0, r0, asr #32
   1d7a8:	andeq	r0, r0, r4, lsr r0
   1d7ac:	andeq	r0, r0, r4, lsr #32
   1d7b0:	andeq	r0, r0, r0, lsr #32
   1d7b4:	ldrb	ip, [r9, #7]
   1d7b8:	ldrb	r0, [r9, #6]
   1d7bc:	mov	r8, r1
   1d7c0:	orr	r0, ip, r0, lsl #8
   1d7c4:	mov	r1, r0
   1d7c8:	ldrb	r0, [r9, #5]
   1d7cc:	mov	r7, r8
   1d7d0:	orr	r1, r1, r0, lsl #16
   1d7d4:	ldrb	r0, [r9, #4]
   1d7d8:	mov	r3, r7
   1d7dc:	orr	r1, r1, r0, lsl #24
   1d7e0:	ldrb	r0, [r9, #3]
   1d7e4:	orr	r6, r0, r3
   1d7e8:	ldrb	r0, [r9, #2]
   1d7ec:	orr	r4, r6, r0, lsl #8
   1d7f0:	ldrb	r0, [r9, #1]
   1d7f4:	orr	r2, r4, r0, lsl #16
   1d7f8:	ldrb	r0, [r9]
   1d7fc:	orr	r2, r2, r0, lsl #24
   1d800:	movw	r0, #0
   1d804:	movt	r0, #25956	; 0x6564
   1d808:	subs	r0, r1, r0
   1d80c:	movw	r0, #29556	; 0x7374
   1d810:	movt	r0, #28261	; 0x6e65
   1d814:	sbcs	r0, r2, r0
   1d818:	bcs	1d874 <main@@Base+0x79d8>
   1d81c:	ldr	r6, [sp, #36]	; 0x24
   1d820:	movw	r0, #29793	; 0x7461
   1d824:	movt	r0, #25697	; 0x6461
   1d828:	teq	r2, r0
   1d82c:	bne	1d8e0 <main@@Base+0x7a44>
   1d830:	cmp	lr, #5
   1d834:	mov	r1, r9
   1d838:	blt	1db0c <main@@Base+0x7c70>
   1d83c:	ldrb	r0, [r9, #4]
   1d840:	mov	r1, r9
   1d844:	cmp	r0, #34	; 0x22
   1d848:	bne	1db0c <main@@Base+0x7c70>
   1d84c:	ldr	r0, [sp, #36]	; 0x24
   1d850:	add	r2, r9, #5
   1d854:	sub	r0, r0, r2
   1d858:	cmp	r0, #2
   1d85c:	blt	1d96c <main@@Base+0x7ad0>
   1d860:	ldrb	r0, [r2]
   1d864:	cmp	r0, #32
   1d868:	bls	1d958 <main@@Base+0x7abc>
   1d86c:	mov	r1, r2
   1d870:	b	1d980 <main@@Base+0x7ae4>
   1d874:	movw	r0, #29292	; 0x726c
   1d878:	lsr	r3, r1, #8
   1d87c:	movw	r7, #29793	; 0x7461
   1d880:	movt	r0, #117	; 0x75
   1d884:	orr	r3, r3, r2, lsl #24
   1d888:	movt	r7, #25697	; 0x6461
   1d88c:	eor	r0, r0, r2, lsr #8
   1d890:	eor	r3, r3, r7
   1d894:	orrs	r0, r3, r0
   1d898:	bne	1d8f0 <main@@Base+0x7a54>
   1d89c:	cmp	lr, #8
   1d8a0:	mov	r1, r9
   1d8a4:	blt	1db6c <main@@Base+0x7cd0>
   1d8a8:	ldrb	r0, [r9, #7]
   1d8ac:	mov	r1, r9
   1d8b0:	cmp	r0, #34	; 0x22
   1d8b4:	bne	1db6c <main@@Base+0x7cd0>
   1d8b8:	ldr	r0, [sp, #36]	; 0x24
   1d8bc:	add	r2, r9, #8
   1d8c0:	sub	r0, r0, r2
   1d8c4:	cmp	r0, #2
   1d8c8:	blt	1d9f0 <main@@Base+0x7b54>
   1d8cc:	ldrb	r0, [r2]
   1d8d0:	cmp	r0, #32
   1d8d4:	bls	1d9dc <main@@Base+0x7b40>
   1d8d8:	mov	r1, r2
   1d8dc:	b	1da04 <main@@Base+0x7b68>
   1d8e0:	mov	r0, sl
   1d8e4:	mov	r1, r9
   1d8e8:	b	1dc38 <main@@Base+0x7d9c>
   1d8ec:	strdeq	pc, [r3], -r8
   1d8f0:	movw	r0, #29556	; 0x7374
   1d8f4:	bfc	r1, #0, #16
   1d8f8:	movt	r0, #28261	; 0x6e65
   1d8fc:	eor	r0, r2, r0
   1d900:	movw	r2, #0
   1d904:	movt	r2, #25956	; 0x6564
   1d908:	eor	r1, r1, r2
   1d90c:	orrs	r0, r1, r0
   1d910:	bne	1dc28 <main@@Base+0x7d8c>
   1d914:	cmp	lr, #7
   1d918:	mov	r1, r9
   1d91c:	blt	1dbcc <main@@Base+0x7d30>
   1d920:	ldrb	r0, [r9, #6]
   1d924:	mov	r1, r9
   1d928:	cmp	r0, #34	; 0x22
   1d92c:	bne	1dbcc <main@@Base+0x7d30>
   1d930:	ldr	r0, [sp, #36]	; 0x24
   1d934:	add	r2, r9, #7
   1d938:	sub	r0, r0, r2
   1d93c:	cmp	r0, #2
   1d940:	blt	1da78 <main@@Base+0x7bdc>
   1d944:	ldrb	r0, [r2]
   1d948:	cmp	r0, #32
   1d94c:	bls	1da64 <main@@Base+0x7bc8>
   1d950:	mov	r1, r2
   1d954:	b	1da8c <main@@Base+0x7bf0>
   1d958:	bne	1d96c <main@@Base+0x7ad0>
   1d95c:	mov	r1, r9
   1d960:	ldrb	r0, [r1, #6]!
   1d964:	cmp	r0, #32
   1d968:	bhi	1d980 <main@@Base+0x7ae4>
   1d96c:	mov	r1, r2
   1d970:	ldr	r0, [sp, #32]
   1d974:	ldr	r2, [sp, #36]	; 0x24
   1d978:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1d97c:	mov	r1, r0
   1d980:	ldr	r0, [sp, #36]	; 0x24
   1d984:	cmp	r1, r0
   1d988:	beq	1d9c8 <main@@Base+0x7b2c>
   1d98c:	ldrb	r0, [r1]
   1d990:	cmp	r0, #58	; 0x3a
   1d994:	bne	1d9c8 <main@@Base+0x7b2c>
   1d998:	ldr	r0, [sp, #36]	; 0x24
   1d99c:	add	r2, r1, #1
   1d9a0:	sub	r0, r0, r2
   1d9a4:	cmp	r0, #2
   1d9a8:	blt	1daf8 <main@@Base+0x7c5c>
   1d9ac:	ldrb	r0, [r2]
   1d9b0:	cmp	r0, #32
   1d9b4:	bls	1dae8 <main@@Base+0x7c4c>
   1d9b8:	mov	r1, r2
   1d9bc:	cmp	r9, r1
   1d9c0:	bne	1db14 <main@@Base+0x7c78>
   1d9c4:	b	1dc28 <main@@Base+0x7d8c>
   1d9c8:	ldr	r0, [sp, #32]
   1d9cc:	ldr	r2, [sp, #36]	; 0x24
   1d9d0:	mov	r3, #4
   1d9d4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1d9d8:	b	1db08 <main@@Base+0x7c6c>
   1d9dc:	bne	1d9f0 <main@@Base+0x7b54>
   1d9e0:	mov	r1, r9
   1d9e4:	ldrb	r0, [r1, #9]!
   1d9e8:	cmp	r0, #32
   1d9ec:	bhi	1da04 <main@@Base+0x7b68>
   1d9f0:	mov	r1, r2
   1d9f4:	ldr	r0, [sp, #32]
   1d9f8:	ldr	r2, [sp, #36]	; 0x24
   1d9fc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1da00:	mov	r1, r0
   1da04:	ldr	r0, [sp, #36]	; 0x24
   1da08:	cmp	r1, r0
   1da0c:	beq	1da4c <main@@Base+0x7bb0>
   1da10:	ldrb	r0, [r1]
   1da14:	cmp	r0, #58	; 0x3a
   1da18:	bne	1da4c <main@@Base+0x7bb0>
   1da1c:	ldr	r0, [sp, #36]	; 0x24
   1da20:	add	r2, r1, #1
   1da24:	sub	r0, r0, r2
   1da28:	cmp	r0, #2
   1da2c:	blt	1db58 <main@@Base+0x7cbc>
   1da30:	ldrb	r0, [r2]
   1da34:	cmp	r0, #32
   1da38:	bls	1db48 <main@@Base+0x7cac>
   1da3c:	mov	r1, r2
   1da40:	cmp	r9, r1
   1da44:	bne	1db74 <main@@Base+0x7cd8>
   1da48:	b	1dc28 <main@@Base+0x7d8c>
   1da4c:	ldr	r0, [sp, #32]
   1da50:	ldr	r2, [sp, #36]	; 0x24
   1da54:	mov	r3, #4
   1da58:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1da5c:	b	1db68 <main@@Base+0x7ccc>
   1da60:	andeq	pc, r3, r8, lsr #13
   1da64:	bne	1da78 <main@@Base+0x7bdc>
   1da68:	mov	r1, r9
   1da6c:	ldrb	r0, [r1, #8]!
   1da70:	cmp	r0, #32
   1da74:	bhi	1da8c <main@@Base+0x7bf0>
   1da78:	mov	r1, r2
   1da7c:	ldr	r0, [sp, #32]
   1da80:	ldr	r2, [sp, #36]	; 0x24
   1da84:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1da88:	mov	r1, r0
   1da8c:	ldr	r0, [sp, #36]	; 0x24
   1da90:	cmp	r1, r0
   1da94:	beq	1dad4 <main@@Base+0x7c38>
   1da98:	ldrb	r0, [r1]
   1da9c:	cmp	r0, #58	; 0x3a
   1daa0:	bne	1dad4 <main@@Base+0x7c38>
   1daa4:	ldr	r0, [sp, #36]	; 0x24
   1daa8:	add	r2, r1, #1
   1daac:	sub	r0, r0, r2
   1dab0:	cmp	r0, #2
   1dab4:	blt	1dbb8 <main@@Base+0x7d1c>
   1dab8:	ldrb	r0, [r2]
   1dabc:	cmp	r0, #32
   1dac0:	bls	1dba8 <main@@Base+0x7d0c>
   1dac4:	mov	r1, r2
   1dac8:	cmp	r9, r1
   1dacc:	bne	1dbd4 <main@@Base+0x7d38>
   1dad0:	b	1dc28 <main@@Base+0x7d8c>
   1dad4:	ldr	r0, [sp, #32]
   1dad8:	ldr	r2, [sp, #36]	; 0x24
   1dadc:	mov	r3, #4
   1dae0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1dae4:	b	1dbc8 <main@@Base+0x7d2c>
   1dae8:	bne	1daf8 <main@@Base+0x7c5c>
   1daec:	ldrb	r0, [r1, #2]!
   1daf0:	cmp	r0, #32
   1daf4:	bhi	1db0c <main@@Base+0x7c70>
   1daf8:	mov	r1, r2
   1dafc:	ldr	r0, [sp, #32]
   1db00:	ldr	r2, [sp, #36]	; 0x24
   1db04:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1db08:	mov	r1, r0
   1db0c:	cmp	r9, r1
   1db10:	beq	1dc28 <main@@Base+0x7d8c>
   1db14:	mov	r0, #0
   1db18:	ldr	r2, [sp, #36]	; 0x24
   1db1c:	sub	r3, fp, #56	; 0x38
   1db20:	str	r0, [sp]
   1db24:	ldr	r0, [sp, #32]
   1db28:	bl	36550 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1db2c:	mov	r8, r0
   1db30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1db34:	cmp	r0, #0
   1db38:	beq	1f780 <main@@Base+0x98e4>
   1db3c:	ldr	r0, [sp, #32]
   1db40:	mov	r1, #0
   1db44:	b	1dc04 <main@@Base+0x7d68>
   1db48:	bne	1db58 <main@@Base+0x7cbc>
   1db4c:	ldrb	r0, [r1, #2]!
   1db50:	cmp	r0, #32
   1db54:	bhi	1db6c <main@@Base+0x7cd0>
   1db58:	mov	r1, r2
   1db5c:	ldr	r0, [sp, #32]
   1db60:	ldr	r2, [sp, #36]	; 0x24
   1db64:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1db68:	mov	r1, r0
   1db6c:	cmp	r9, r1
   1db70:	beq	1dc28 <main@@Base+0x7d8c>
   1db74:	mov	r0, #1
   1db78:	ldr	r2, [sp, #36]	; 0x24
   1db7c:	sub	r3, fp, #56	; 0x38
   1db80:	str	r0, [sp]
   1db84:	ldr	r0, [sp, #32]
   1db88:	bl	36550 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1db8c:	mov	r8, r0
   1db90:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1db94:	cmp	r0, #0
   1db98:	beq	1f780 <main@@Base+0x98e4>
   1db9c:	ldr	r0, [sp, #32]
   1dba0:	mov	r1, #1
   1dba4:	b	1dc04 <main@@Base+0x7d68>
   1dba8:	bne	1dbb8 <main@@Base+0x7d1c>
   1dbac:	ldrb	r0, [r1, #2]!
   1dbb0:	cmp	r0, #32
   1dbb4:	bhi	1dbcc <main@@Base+0x7d30>
   1dbb8:	mov	r1, r2
   1dbbc:	ldr	r0, [sp, #32]
   1dbc0:	ldr	r2, [sp, #36]	; 0x24
   1dbc4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1dbc8:	mov	r1, r0
   1dbcc:	cmp	r9, r1
   1dbd0:	beq	1dc28 <main@@Base+0x7d8c>
   1dbd4:	mov	r0, #0
   1dbd8:	ldr	r2, [sp, #36]	; 0x24
   1dbdc:	sub	r3, fp, #56	; 0x38
   1dbe0:	str	r0, [sp]
   1dbe4:	ldr	r0, [sp, #32]
   1dbe8:	bl	36550 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1dbec:	mov	r8, r0
   1dbf0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dbf4:	cmp	r0, #0
   1dbf8:	beq	1f780 <main@@Base+0x98e4>
   1dbfc:	ldr	r0, [sp, #32]
   1dc00:	mov	r1, #2
   1dc04:	ldr	r0, [r0]
   1dc08:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   1dc0c:	cmp	r0, #0
   1dc10:	beq	1f780 <main@@Base+0x98e4>
   1dc14:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1dc18:	str	r1, [r0]
   1dc1c:	ldr	r6, [sp, #36]	; 0x24
   1dc20:	ldr	sl, [sp, #32]
   1dc24:	b	1dc44 <main@@Base+0x7da8>
   1dc28:	ldr	sl, [sp, #32]
   1dc2c:	ldr	r6, [sp, #36]	; 0x24
   1dc30:	mov	r1, r9
   1dc34:	mov	r0, sl
   1dc38:	mov	r2, r6
   1dc3c:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   1dc40:	mov	r8, r0
   1dc44:	sub	r0, r6, r8
   1dc48:	cmp	r0, #2
   1dc4c:	blt	1dc80 <main@@Base+0x7de4>
   1dc50:	ldrb	r0, [r8]
   1dc54:	cmp	r0, #32
   1dc58:	bls	1dc6c <main@@Base+0x7dd0>
   1dc5c:	mov	r2, r8
   1dc60:	cmp	r2, r6
   1dc64:	bne	1dc9c <main@@Base+0x7e00>
   1dc68:	b	1e550 <main@@Base+0x86b4>
   1dc6c:	bne	1dc80 <main@@Base+0x7de4>
   1dc70:	mov	r2, r8
   1dc74:	ldrb	r0, [r2, #1]!
   1dc78:	cmp	r0, #32
   1dc7c:	bhi	1dc94 <main@@Base+0x7df8>
   1dc80:	mov	r0, sl
   1dc84:	mov	r1, r8
   1dc88:	mov	r2, r6
   1dc8c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1dc90:	mov	r2, r0
   1dc94:	cmp	r2, r6
   1dc98:	beq	1e550 <main@@Base+0x86b4>
   1dc9c:	ldrb	r0, [r2]
   1dca0:	cmp	r0, #44	; 0x2c
   1dca4:	bne	1e764 <main@@Base+0x88c8>
   1dca8:	add	r1, r2, #1
   1dcac:	sub	r0, r6, r1
   1dcb0:	cmp	r0, #2
   1dcb4:	blt	1dce4 <main@@Base+0x7e48>
   1dcb8:	ldrb	r0, [r1]
   1dcbc:	cmp	r0, #32
   1dcc0:	bls	1dcd4 <main@@Base+0x7e38>
   1dcc4:	mov	r2, r1
   1dcc8:	cmp	r2, r6
   1dccc:	bne	1dcfc <main@@Base+0x7e60>
   1dcd0:	b	1e7a0 <main@@Base+0x8904>
   1dcd4:	bne	1dce4 <main@@Base+0x7e48>
   1dcd8:	ldrb	r0, [r2, #2]!
   1dcdc:	cmp	r0, #32
   1dce0:	bhi	1dcf4 <main@@Base+0x7e58>
   1dce4:	mov	r0, sl
   1dce8:	mov	r2, r6
   1dcec:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1dcf0:	mov	r2, r0
   1dcf4:	cmp	r2, r6
   1dcf8:	beq	1e7a0 <main@@Base+0x8904>
   1dcfc:	ldrb	r0, [r2]
   1dd00:	cmp	r0, #125	; 0x7d
   1dd04:	bne	1d710 <main@@Base+0x7874>
   1dd08:	b	1e774 <main@@Base+0x88d8>
   1dd0c:	ldr	r6, [sp, #36]	; 0x24
   1dd10:	ldr	sl, [sp, #32]
   1dd14:	bne	1dd24 <main@@Base+0x7e88>
   1dd18:	ldrb	r0, [r8, #2]!
   1dd1c:	cmp	r0, #32
   1dd20:	bhi	1dd34 <main@@Base+0x7e98>
   1dd24:	mov	r0, sl
   1dd28:	mov	r2, r6
   1dd2c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1dd30:	mov	r8, r0
   1dd34:	cmp	r7, r8
   1dd38:	beq	1e9b4 <main@@Base+0x8b18>
   1dd3c:	ldr	r0, [sl]
   1dd40:	mov	r1, #8
   1dd44:	mov	r2, #8
   1dd48:	mvn	r3, #-536870912	; 0xe0000000
   1dd4c:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   1dd50:	cmp	r0, #0
   1dd54:	bne	1fc7c <main@@Base+0x9de0>
   1dd58:	cmp	r8, r6
   1dd5c:	beq	1dd90 <main@@Base+0x7ef4>
   1dd60:	ldrb	r0, [r8]
   1dd64:	cmp	r0, #91	; 0x5b
   1dd68:	bne	1dd90 <main@@Base+0x7ef4>
   1dd6c:	add	r1, r8, #1
   1dd70:	sub	r0, r6, r1
   1dd74:	cmp	r0, #2
   1dd78:	blt	1e568 <main@@Base+0x86cc>
   1dd7c:	ldrb	r0, [r1]
   1dd80:	cmp	r0, #32
   1dd84:	bls	1e558 <main@@Base+0x86bc>
   1dd88:	mov	r8, r1
   1dd8c:	b	1e578 <main@@Base+0x86dc>
   1dd90:	ldr	sl, [sp, #32]
   1dd94:	mov	r1, r8
   1dd98:	mov	r2, r6
   1dd9c:	mov	r3, #22
   1dda0:	mov	r0, sl
   1dda4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1dda8:	mov	r8, r0
   1ddac:	ldr	r0, [sl]
   1ddb0:	bl	300b4 <flatcc_builder_end_vector@@Base>
   1ddb4:	cmp	r0, #0
   1ddb8:	str	r0, [sp, #44]	; 0x2c
   1ddbc:	beq	1fc6c <main@@Base+0x9dd0>
   1ddc0:	ldr	r0, [sl]
   1ddc4:	mov	r1, #33	; 0x21
   1ddc8:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   1ddcc:	cmp	r0, #0
   1ddd0:	beq	1fc6c <main@@Base+0x9dd0>
   1ddd4:	ldr	r1, [sp, #44]	; 0x2c
   1ddd8:	ldr	r6, [sp, #36]	; 0x24
   1dddc:	b	1fa68 <main@@Base+0x9bcc>
   1dde0:	mov	r6, r0
   1dde4:	ldr	sl, [sp, #32]
   1dde8:	str	r6, [sp, #60]	; 0x3c
   1ddec:	cmp	r8, r9
   1ddf0:	bne	1de30 <main@@Base+0x7f94>
   1ddf4:	add	r0, sp, #60	; 0x3c
   1ddf8:	ldr	r4, [sp, #36]	; 0x24
   1ddfc:	mov	r1, r8
   1de00:	str	r0, [sp]
   1de04:	mov	r0, sl
   1de08:	ldr	r3, [pc, #4056]	; 1ede8 <main@@Base+0x8f4c>
   1de0c:	mov	r2, r4
   1de10:	add	r3, pc, r3
   1de14:	bl	23fd0 <main@@Base+0xe134>
   1de18:	mov	r9, r0
   1de1c:	cmp	r0, r8
   1de20:	cmpne	r9, r4
   1de24:	beq	1fc38 <main@@Base+0x9d9c>
   1de28:	ldr	r6, [sp, #60]	; 0x3c
   1de2c:	ldr	sl, [sp, #32]
   1de30:	cmp	r6, #0
   1de34:	bne	1de44 <main@@Base+0x7fa8>
   1de38:	ldrb	r0, [sl, #8]
   1de3c:	tst	r0, #2
   1de40:	beq	1eb50 <main@@Base+0x8cb4>
   1de44:	ldr	r0, [sl]
   1de48:	mov	r1, #20
   1de4c:	mov	r2, #4
   1de50:	mov	r3, #4
   1de54:	bl	307e4 <flatcc_builder_table_add@@Base>
   1de58:	cmp	r0, #0
   1de5c:	beq	1fc38 <main@@Base+0x9d9c>
   1de60:	str	r6, [r0]
   1de64:	b	1eb50 <main@@Base+0x8cb4>
   1de68:	ldr	r6, [sp, #36]	; 0x24
   1de6c:	ldr	sl, [sp, #32]
   1de70:	bne	1de80 <main@@Base+0x7fe4>
   1de74:	ldrb	r0, [r8, #2]!
   1de78:	cmp	r0, #32
   1de7c:	bhi	1de90 <main@@Base+0x7ff4>
   1de80:	mov	r0, sl
   1de84:	mov	r2, r6
   1de88:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1de8c:	mov	r8, r0
   1de90:	cmp	r8, r6
   1de94:	beq	1def4 <main@@Base+0x8058>
   1de98:	ldrb	r0, [r8]
   1de9c:	cmp	r0, #93	; 0x5d
   1dea0:	bne	1def0 <main@@Base+0x8054>
   1dea4:	ldr	r6, [sp, #36]	; 0x24
   1dea8:	ldr	sl, [sp, #32]
   1deac:	add	r1, r8, #1
   1deb0:	sub	r0, r6, r1
   1deb4:	cmp	r0, #2
   1deb8:	blt	1dee0 <main@@Base+0x8044>
   1debc:	ldrb	r0, [r1]
   1dec0:	cmp	r0, #32
   1dec4:	bhi	1f4f0 <main@@Base+0x9654>
   1dec8:	ldr	r6, [sp, #36]	; 0x24
   1decc:	ldr	sl, [sp, #32]
   1ded0:	bne	1dee0 <main@@Base+0x8044>
   1ded4:	ldrb	r0, [r8, #2]!
   1ded8:	cmp	r0, #32
   1dedc:	bhi	1d04c <main@@Base+0x71b0>
   1dee0:	mov	r0, sl
   1dee4:	mov	r2, r6
   1dee8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1deec:	b	1d048 <main@@Base+0x71ac>
   1def0:	mov	r6, r8
   1def4:	mov	r0, #0
   1def8:	mov	r1, #1
   1defc:	str	r0, [sp, #52]	; 0x34
   1df00:	str	r0, [sp, #48]	; 0x30
   1df04:	ldr	r0, [sp, #32]
   1df08:	ldr	r0, [r0]
   1df0c:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1df10:	cmp	r0, #0
   1df14:	beq	1fc84 <main@@Base+0x9de8>
   1df18:	mov	r8, r6
   1df1c:	ldr	r6, [sp, #36]	; 0x24
   1df20:	ldr	sl, [sp, #32]
   1df24:	mov	r7, r0
   1df28:	mov	r0, #0
   1df2c:	cmp	r8, r6
   1df30:	str	r0, [fp, #-52]	; 0xffffffcc
   1df34:	str	r0, [fp, #-56]	; 0xffffffc8
   1df38:	str	r0, [sp, #52]	; 0x34
   1df3c:	str	r0, [sp, #48]	; 0x30
   1df40:	str	r0, [sp, #60]	; 0x3c
   1df44:	beq	1dfa4 <main@@Base+0x8108>
   1df48:	sub	r0, fp, #56	; 0x38
   1df4c:	mov	r1, r8
   1df50:	mov	r2, r6
   1df54:	add	r3, sp, #60	; 0x3c
   1df58:	str	r0, [sp]
   1df5c:	mov	r0, sl
   1df60:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1df64:	cmp	r0, r8
   1df68:	beq	1dfb8 <main@@Base+0x811c>
   1df6c:	ldr	r2, [sp, #60]	; 0x3c
   1df70:	mov	r1, r0
   1df74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1df78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1df7c:	cmp	r2, #0
   1df80:	beq	1dfd0 <main@@Base+0x8134>
   1df84:	rsbs	r2, r0, #0
   1df88:	mov	r2, #-2147483648	; 0x80000000
   1df8c:	sbcs	r2, r2, r3
   1df90:	bcs	1e008 <main@@Base+0x816c>
   1df94:	ldr	sl, [sp, #32]
   1df98:	ldr	r6, [sp, #36]	; 0x24
   1df9c:	mov	r3, #8
   1dfa0:	b	1dfe4 <main@@Base+0x8148>
   1dfa4:	mov	r3, #0
   1dfa8:	mov	r1, r6
   1dfac:	cmp	r8, r1
   1dfb0:	bne	1e064 <main@@Base+0x81c8>
   1dfb4:	b	1e028 <main@@Base+0x818c>
   1dfb8:	mov	r0, #0
   1dfbc:	mov	r3, #0
   1dfc0:	mov	r1, r8
   1dfc4:	cmp	r8, r1
   1dfc8:	bne	1e064 <main@@Base+0x81c8>
   1dfcc:	b	1e028 <main@@Base+0x818c>
   1dfd0:	cmn	r3, #1
   1dfd4:	bgt	1e010 <main@@Base+0x8174>
   1dfd8:	ldr	sl, [sp, #32]
   1dfdc:	ldr	r6, [sp, #36]	; 0x24
   1dfe0:	mov	r3, #7
   1dfe4:	mov	r0, sl
   1dfe8:	mov	r2, r6
   1dfec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1dff0:	mov	r1, r0
   1dff4:	mov	r0, #0
   1dff8:	mov	r3, #0
   1dffc:	cmp	r8, r1
   1e000:	bne	1e064 <main@@Base+0x81c8>
   1e004:	b	1e028 <main@@Base+0x818c>
   1e008:	rsbs	r0, r0, #0
   1e00c:	rsc	r3, r3, #0
   1e010:	ldr	r6, [sp, #36]	; 0x24
   1e014:	ldr	sl, [sp, #32]
   1e018:	str	r0, [sp, #48]	; 0x30
   1e01c:	str	r3, [sp, #52]	; 0x34
   1e020:	cmp	r8, r1
   1e024:	bne	1e064 <main@@Base+0x81c8>
   1e028:	add	r0, sp, #48	; 0x30
   1e02c:	mov	r1, r8
   1e030:	mov	r2, r6
   1e034:	str	r0, [sp]
   1e038:	mov	r0, sl
   1e03c:	ldr	r3, [pc, #4068]	; 1f028 <main@@Base+0x918c>
   1e040:	add	r3, pc, r3
   1e044:	bl	241bc <main@@Base+0xe320>
   1e048:	mov	r1, r0
   1e04c:	cmp	r0, r8
   1e050:	cmpne	r1, r6
   1e054:	beq	1fc8c <main@@Base+0x9df0>
   1e058:	ldr	r0, [sp, #48]	; 0x30
   1e05c:	ldr	r3, [sp, #52]	; 0x34
   1e060:	ldr	sl, [sp, #32]
   1e064:	stm	r7, {r0, r3}
   1e068:	sub	r0, r6, r1
   1e06c:	cmp	r0, #2
   1e070:	blt	1e0a4 <main@@Base+0x8208>
   1e074:	ldrb	r0, [r1]
   1e078:	cmp	r0, #32
   1e07c:	bls	1e090 <main@@Base+0x81f4>
   1e080:	mov	r8, r1
   1e084:	cmp	r8, r6
   1e088:	bne	1e0bc <main@@Base+0x8220>
   1e08c:	b	1f44c <main@@Base+0x95b0>
   1e090:	bne	1e0a4 <main@@Base+0x8208>
   1e094:	mov	r8, r1
   1e098:	ldrb	r0, [r8, #1]!
   1e09c:	cmp	r0, #32
   1e0a0:	bhi	1e0b4 <main@@Base+0x8218>
   1e0a4:	mov	r0, sl
   1e0a8:	mov	r2, r6
   1e0ac:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e0b0:	mov	r8, r0
   1e0b4:	cmp	r8, r6
   1e0b8:	beq	1f44c <main@@Base+0x95b0>
   1e0bc:	ldrb	r0, [r8]
   1e0c0:	cmp	r0, #44	; 0x2c
   1e0c4:	bne	1f460 <main@@Base+0x95c4>
   1e0c8:	add	r1, r8, #1
   1e0cc:	sub	r0, r6, r1
   1e0d0:	cmp	r0, #2
   1e0d4:	blt	1e104 <main@@Base+0x8268>
   1e0d8:	ldrb	r0, [r1]
   1e0dc:	cmp	r0, #32
   1e0e0:	bls	1e0f4 <main@@Base+0x8258>
   1e0e4:	mov	r8, r1
   1e0e8:	cmp	r8, r6
   1e0ec:	bne	1e11c <main@@Base+0x8280>
   1e0f0:	b	1f488 <main@@Base+0x95ec>
   1e0f4:	bne	1e104 <main@@Base+0x8268>
   1e0f8:	ldrb	r0, [r8, #2]!
   1e0fc:	cmp	r0, #32
   1e100:	bhi	1e114 <main@@Base+0x8278>
   1e104:	mov	r0, sl
   1e108:	mov	r2, r6
   1e10c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e110:	mov	r8, r0
   1e114:	cmp	r8, r6
   1e118:	beq	1f488 <main@@Base+0x95ec>
   1e11c:	ldrb	r0, [r8]
   1e120:	cmp	r0, #93	; 0x5d
   1e124:	beq	1f4d4 <main@@Base+0x9638>
   1e128:	mov	r0, #0
   1e12c:	mov	r1, #1
   1e130:	str	r0, [sp, #52]	; 0x34
   1e134:	str	r0, [sp, #48]	; 0x30
   1e138:	ldr	r0, [sl]
   1e13c:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1e140:	mov	r7, r0
   1e144:	cmp	r0, #0
   1e148:	bne	1df28 <main@@Base+0x808c>
   1e14c:	b	16888 <main@@Base+0x9ec>
   1e150:	ldr	r6, [sp, #36]	; 0x24
   1e154:	ldr	sl, [sp, #32]
   1e158:	bne	1e168 <main@@Base+0x82cc>
   1e15c:	ldrb	r0, [r8, #2]!
   1e160:	cmp	r0, #32
   1e164:	bhi	1e178 <main@@Base+0x82dc>
   1e168:	mov	r0, sl
   1e16c:	mov	r2, r6
   1e170:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e174:	mov	r8, r0
   1e178:	cmp	r7, r8
   1e17c:	beq	1e9b4 <main@@Base+0x8b18>
   1e180:	mov	r2, r6
   1e184:	mov	r6, #0
   1e188:	cmp	r8, r2
   1e18c:	str	r6, [fp, #-52]	; 0xffffffcc
   1e190:	str	r6, [fp, #-56]	; 0xffffffc8
   1e194:	str	r6, [sp, #52]	; 0x34
   1e198:	str	r6, [sp, #48]	; 0x30
   1e19c:	str	r6, [sp, #60]	; 0x3c
   1e1a0:	beq	1e1fc <main@@Base+0x8360>
   1e1a4:	sub	r0, fp, #56	; 0x38
   1e1a8:	mov	r1, r8
   1e1ac:	add	r3, sp, #60	; 0x3c
   1e1b0:	str	r0, [sp]
   1e1b4:	mov	r0, sl
   1e1b8:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1e1bc:	cmp	r0, r8
   1e1c0:	beq	1e210 <main@@Base+0x8374>
   1e1c4:	mov	r9, r0
   1e1c8:	ldr	r0, [sp, #60]	; 0x3c
   1e1cc:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e1d0:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e1d4:	cmp	r0, #0
   1e1d8:	beq	1e220 <main@@Base+0x8384>
   1e1dc:	subs	r0, r6, #1
   1e1e0:	sbcs	r0, r7, #-2147483648	; 0x80000000
   1e1e4:	bcc	1e258 <main@@Base+0x83bc>
   1e1e8:	ldr	sl, [sp, #32]
   1e1ec:	ldr	r2, [sp, #36]	; 0x24
   1e1f0:	mov	r1, r9
   1e1f4:	mov	r3, #8
   1e1f8:	b	1e238 <main@@Base+0x839c>
   1e1fc:	mov	r7, #0
   1e200:	mov	r9, r2
   1e204:	cmp	r8, r9
   1e208:	bne	1e2b4 <main@@Base+0x8418>
   1e20c:	b	1e274 <main@@Base+0x83d8>
   1e210:	mov	r6, #0
   1e214:	mov	r7, #0
   1e218:	mov	r9, r8
   1e21c:	b	1e268 <main@@Base+0x83cc>
   1e220:	cmn	r7, #1
   1e224:	bgt	1e260 <main@@Base+0x83c4>
   1e228:	ldr	sl, [sp, #32]
   1e22c:	ldr	r2, [sp, #36]	; 0x24
   1e230:	mov	r1, r9
   1e234:	mov	r3, #7
   1e238:	mov	r0, sl
   1e23c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1e240:	mov	r9, r0
   1e244:	mov	r6, #0
   1e248:	mov	r7, #0
   1e24c:	cmp	r8, r9
   1e250:	bne	1e2b4 <main@@Base+0x8418>
   1e254:	b	1e274 <main@@Base+0x83d8>
   1e258:	rsbs	r6, r6, #0
   1e25c:	rsc	r7, r7, #0
   1e260:	str	r6, [sp, #48]	; 0x30
   1e264:	str	r7, [sp, #52]	; 0x34
   1e268:	ldr	sl, [sp, #32]
   1e26c:	cmp	r8, r9
   1e270:	bne	1e2b4 <main@@Base+0x8418>
   1e274:	add	r0, sp, #48	; 0x30
   1e278:	ldr	r2, [sp, #36]	; 0x24
   1e27c:	mov	r1, r8
   1e280:	str	r0, [sp]
   1e284:	mov	r0, sl
   1e288:	ldr	r3, [pc, #4084]	; 1f284 <main@@Base+0x93e8>
   1e28c:	add	r3, pc, r3
   1e290:	bl	241bc <main@@Base+0xe320>
   1e294:	cmp	r0, r8
   1e298:	mov	r9, r0
   1e29c:	ldrne	r0, [sp, #36]	; 0x24
   1e2a0:	cmpne	r9, r0
   1e2a4:	beq	1fc38 <main@@Base+0x9d9c>
   1e2a8:	ldr	r6, [sp, #48]	; 0x30
   1e2ac:	ldr	r7, [sp, #52]	; 0x34
   1e2b0:	ldr	sl, [sp, #32]
   1e2b4:	orrs	r0, r6, r7
   1e2b8:	bne	1e2c8 <main@@Base+0x842c>
   1e2bc:	ldrb	r0, [sl, #8]
   1e2c0:	tst	r0, #2
   1e2c4:	beq	1eb50 <main@@Base+0x8cb4>
   1e2c8:	ldr	r0, [sl]
   1e2cc:	mov	r1, #22
   1e2d0:	mov	r2, #8
   1e2d4:	mov	r3, #8
   1e2d8:	bl	307e4 <flatcc_builder_table_add@@Base>
   1e2dc:	cmp	r0, #0
   1e2e0:	beq	1fc38 <main@@Base+0x9d9c>
   1e2e4:	strd	r6, [r0]
   1e2e8:	b	1eb50 <main@@Base+0x8cb4>
   1e2ec:	mov	r8, r6
   1e2f0:	b	1bb14 <main@@Base+0x5c78>
   1e2f4:			; <UNDEFINED> instruction: 0x0003edb8
   1e2f8:	cmp	r0, #93	; 0x5d
   1e2fc:	bne	1f7b8 <main@@Base+0x991c>
   1e300:	ldr	r6, [sp, #36]	; 0x24
   1e304:	ldr	sl, [sp, #32]
   1e308:	add	r1, r2, #1
   1e30c:	sub	r0, r6, r1
   1e310:	cmp	r0, #2
   1e314:	blt	1f8cc <main@@Base+0x9a30>
   1e318:	ldrb	r0, [r1]
   1e31c:	cmp	r0, #32
   1e320:	bls	1f8b0 <main@@Base+0x9a14>
   1e324:	ldr	r6, [sp, #36]	; 0x24
   1e328:	ldr	sl, [sp, #32]
   1e32c:	mov	r8, r1
   1e330:	b	1bb14 <main@@Base+0x5c78>
   1e334:	mov	r8, r6
   1e338:	b	1f918 <main@@Base+0x9a7c>
   1e33c:	mov	r0, sl
   1e340:	mov	r1, r6
   1e344:	b	1f7c8 <main@@Base+0x992c>
   1e348:	cmp	r0, #93	; 0x5d
   1e34c:	bne	1f7d4 <main@@Base+0x9938>
   1e350:	ldr	r0, [sp, #36]	; 0x24
   1e354:	add	r1, r8, #1
   1e358:	sub	r0, r0, r1
   1e35c:	cmp	r0, #2
   1e360:	blt	1f908 <main@@Base+0x9a6c>
   1e364:	b	1e520 <main@@Base+0x8684>
   1e368:	mov	r0, sl
   1e36c:	mov	r1, r6
   1e370:	mov	r2, r6
   1e374:	b	1f7e0 <main@@Base+0x9944>
   1e378:	ldr	r6, [sp, #36]	; 0x24
   1e37c:	bne	1e38c <main@@Base+0x84f0>
   1e380:	ldrb	r0, [r8, #2]!
   1e384:	cmp	r0, #32
   1e388:	bhi	1e39c <main@@Base+0x8500>
   1e38c:	ldr	r0, [sp, #32]
   1e390:	mov	r2, r6
   1e394:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e398:	mov	r8, r0
   1e39c:	cmp	r8, r6
   1e3a0:	mov	r3, r6
   1e3a4:	beq	1e3f8 <main@@Base+0x855c>
   1e3a8:	ldrb	r0, [r8]
   1e3ac:	cmp	r0, #125	; 0x7d
   1e3b0:	bne	1e3f4 <main@@Base+0x8558>
   1e3b4:	ldr	r6, [sp, #36]	; 0x24
   1e3b8:	ldr	sl, [sp, #32]
   1e3bc:	add	r1, r8, #1
   1e3c0:	sub	r0, r6, r1
   1e3c4:	cmp	r0, #2
   1e3c8:	blt	1faec <main@@Base+0x9c50>
   1e3cc:	ldrb	r0, [r1]
   1e3d0:	cmp	r0, #32
   1e3d4:	bhi	1f4c4 <main@@Base+0x9628>
   1e3d8:	ldr	r6, [sp, #36]	; 0x24
   1e3dc:	ldr	sl, [sp, #32]
   1e3e0:	bne	1faec <main@@Base+0x9c50>
   1e3e4:	ldrb	r0, [r8, #2]!
   1e3e8:	cmp	r0, #32
   1e3ec:	bhi	1b9a4 <main@@Base+0x5b08>
   1e3f0:	b	1faec <main@@Base+0x9c50>
   1e3f4:	mov	r3, r8
   1e3f8:	ldr	r6, [sp, #36]	; 0x24
   1e3fc:	ldr	sl, [sp, #32]
   1e400:	cmp	r3, r6
   1e404:	mov	r1, r6
   1e408:	beq	1e438 <main@@Base+0x859c>
   1e40c:	ldrb	r0, [r3]
   1e410:	cmp	r0, #34	; 0x22
   1e414:	bne	1e420 <main@@Base+0x8584>
   1e418:	add	r1, r3, #1
   1e41c:	b	1e438 <main@@Base+0x859c>
   1e420:	mov	r1, r3
   1e424:	mov	r0, sl
   1e428:	mov	r2, r6
   1e42c:	mov	r3, #5
   1e430:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1e434:	mov	r1, r0
   1e438:	mov	r0, sl
   1e43c:	mov	r2, r6
   1e440:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   1e444:	mov	r2, r0
   1e448:	sub	r0, r6, r0
   1e44c:	cmp	r0, #2
   1e450:	blt	1e484 <main@@Base+0x85e8>
   1e454:	ldrb	r0, [r2]
   1e458:	cmp	r0, #32
   1e45c:	bls	1e470 <main@@Base+0x85d4>
   1e460:	mov	r3, r2
   1e464:	cmp	r3, r6
   1e468:	bne	1e4a0 <main@@Base+0x8604>
   1e46c:	b	1f480 <main@@Base+0x95e4>
   1e470:	bne	1e484 <main@@Base+0x85e8>
   1e474:	mov	r3, r2
   1e478:	ldrb	r0, [r3, #1]!
   1e47c:	cmp	r0, #32
   1e480:	bhi	1e498 <main@@Base+0x85fc>
   1e484:	mov	r1, r2
   1e488:	mov	r0, sl
   1e48c:	mov	r2, r6
   1e490:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e494:	mov	r3, r0
   1e498:	cmp	r3, r6
   1e49c:	beq	1f480 <main@@Base+0x95e4>
   1e4a0:	ldrb	r0, [r3]
   1e4a4:	cmp	r0, #44	; 0x2c
   1e4a8:	bne	1f498 <main@@Base+0x95fc>
   1e4ac:	add	r1, r3, #1
   1e4b0:	sub	r0, r6, r1
   1e4b4:	cmp	r0, #2
   1e4b8:	blt	1e4e8 <main@@Base+0x864c>
   1e4bc:	ldrb	r0, [r1]
   1e4c0:	cmp	r0, #32
   1e4c4:	bls	1e4d8 <main@@Base+0x863c>
   1e4c8:	mov	r3, r1
   1e4cc:	cmp	r3, r6
   1e4d0:	bne	1e500 <main@@Base+0x8664>
   1e4d4:	b	1f4f8 <main@@Base+0x965c>
   1e4d8:	bne	1e4e8 <main@@Base+0x864c>
   1e4dc:	ldrb	r0, [r3, #2]!
   1e4e0:	cmp	r0, #32
   1e4e4:	bhi	1e4f8 <main@@Base+0x865c>
   1e4e8:	mov	r0, sl
   1e4ec:	mov	r2, r6
   1e4f0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e4f4:	mov	r3, r0
   1e4f8:	cmp	r3, r6
   1e4fc:	beq	1f4f8 <main@@Base+0x965c>
   1e500:	ldrb	r0, [r3]
   1e504:	cmp	r0, #125	; 0x7d
   1e508:	bne	1e400 <main@@Base+0x8564>
   1e50c:	b	1f4a8 <main@@Base+0x960c>
   1e510:	add	r1, r8, #1
   1e514:	sub	r0, r6, r1
   1e518:	cmp	r0, #2
   1e51c:	blt	1f908 <main@@Base+0x9a6c>
   1e520:	ldrb	r0, [r1]
   1e524:	cmp	r0, #32
   1e528:	bls	1f8f8 <main@@Base+0x9a5c>
   1e52c:	mov	r8, r1
   1e530:	b	1f918 <main@@Base+0x9a7c>
   1e534:	ldr	sl, [sp, #32]
   1e538:	ldr	r6, [sp, #36]	; 0x24
   1e53c:	mov	r1, r9
   1e540:	mov	r0, sl
   1e544:	mov	r2, r6
   1e548:	mov	r3, #9
   1e54c:	b	1b440 <main@@Base+0x55a4>
   1e550:	mov	r8, r6
   1e554:	b	1b230 <main@@Base+0x5394>
   1e558:	bne	1e568 <main@@Base+0x86cc>
   1e55c:	ldrb	r0, [r8, #2]!
   1e560:	cmp	r0, #32
   1e564:	bhi	1e578 <main@@Base+0x86dc>
   1e568:	ldr	r0, [sp, #32]
   1e56c:	ldr	r2, [sp, #36]	; 0x24
   1e570:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e574:	mov	r8, r0
   1e578:	ldr	r7, [sp, #36]	; 0x24
   1e57c:	cmp	r8, r7
   1e580:	beq	1e5dc <main@@Base+0x8740>
   1e584:	ldrb	r0, [r8]
   1e588:	cmp	r0, #93	; 0x5d
   1e58c:	bne	1e5d8 <main@@Base+0x873c>
   1e590:	ldr	r0, [sp, #36]	; 0x24
   1e594:	ldr	sl, [sp, #32]
   1e598:	add	r1, r8, #1
   1e59c:	sub	r0, r0, r1
   1e5a0:	cmp	r0, #2
   1e5a4:	blt	1e5c8 <main@@Base+0x872c>
   1e5a8:	ldrb	r0, [r1]
   1e5ac:	cmp	r0, #32
   1e5b0:	bhi	1f8a4 <main@@Base+0x9a08>
   1e5b4:	ldr	sl, [sp, #32]
   1e5b8:	bne	1e5c8 <main@@Base+0x872c>
   1e5bc:	ldrb	r0, [r8, #2]!
   1e5c0:	cmp	r0, #32
   1e5c4:	bhi	1ddac <main@@Base+0x7f10>
   1e5c8:	ldr	r2, [sp, #36]	; 0x24
   1e5cc:	mov	r0, sl
   1e5d0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e5d4:	b	1dda8 <main@@Base+0x7f0c>
   1e5d8:	mov	r7, r8
   1e5dc:	mov	r0, #0
   1e5e0:	mov	r1, #1
   1e5e4:	str	r0, [fp, #-52]	; 0xffffffcc
   1e5e8:	str	r0, [fp, #-56]	; 0xffffffc8
   1e5ec:	ldr	r0, [sp, #32]
   1e5f0:	ldr	r0, [r0]
   1e5f4:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1e5f8:	cmp	r0, #0
   1e5fc:	beq	1fc98 <main@@Base+0x9dfc>
   1e600:	ldr	r6, [sp, #36]	; 0x24
   1e604:	ldr	sl, [sp, #32]
   1e608:	mov	r9, r0
   1e60c:	mov	r8, r7
   1e610:	mov	r0, sl
   1e614:	mov	r1, r8
   1e618:	mov	r2, r6
   1e61c:	sub	r3, fp, #56	; 0x38
   1e620:	bl	358c0 <flatcc_json_parser_double@@Base>
   1e624:	mov	r7, r0
   1e628:	cmp	r8, r0
   1e62c:	bne	1e66c <main@@Base+0x87d0>
   1e630:	sub	r0, fp, #56	; 0x38
   1e634:	mov	r1, r8
   1e638:	mov	r2, r6
   1e63c:	str	r0, [sp]
   1e640:	mov	r0, sl
   1e644:	ldr	r3, [pc, #4044]	; 1f618 <main@@Base+0x977c>
   1e648:	add	r3, pc, r3
   1e64c:	bl	24758 <main@@Base+0xe8bc>
   1e650:	mov	r7, r0
   1e654:	cmp	r0, r8
   1e658:	beq	1fc98 <main@@Base+0x9dfc>
   1e65c:	ldr	r6, [sp, #36]	; 0x24
   1e660:	ldr	sl, [sp, #32]
   1e664:	cmp	r7, r6
   1e668:	beq	1fc74 <main@@Base+0x9dd8>
   1e66c:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1e670:	sub	r0, r6, r7
   1e674:	cmp	r0, #2
   1e678:	vstr	d16, [r9]
   1e67c:	blt	1e6b0 <main@@Base+0x8814>
   1e680:	ldrb	r0, [r7]
   1e684:	cmp	r0, #32
   1e688:	bls	1e69c <main@@Base+0x8800>
   1e68c:	mov	r8, r7
   1e690:	cmp	r8, r6
   1e694:	bne	1e6cc <main@@Base+0x8830>
   1e698:	b	1f800 <main@@Base+0x9964>
   1e69c:	bne	1e6b0 <main@@Base+0x8814>
   1e6a0:	mov	r8, r7
   1e6a4:	ldrb	r0, [r8, #1]!
   1e6a8:	cmp	r0, #32
   1e6ac:	bhi	1e6c4 <main@@Base+0x8828>
   1e6b0:	mov	r0, sl
   1e6b4:	mov	r1, r7
   1e6b8:	mov	r2, r6
   1e6bc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e6c0:	mov	r8, r0
   1e6c4:	cmp	r8, r6
   1e6c8:	beq	1f800 <main@@Base+0x9964>
   1e6cc:	ldrb	r0, [r8]
   1e6d0:	cmp	r0, #44	; 0x2c
   1e6d4:	bne	1f80c <main@@Base+0x9970>
   1e6d8:	add	r1, r8, #1
   1e6dc:	sub	r0, r6, r1
   1e6e0:	cmp	r0, #2
   1e6e4:	blt	1e714 <main@@Base+0x8878>
   1e6e8:	ldrb	r0, [r1]
   1e6ec:	cmp	r0, #32
   1e6f0:	bls	1e704 <main@@Base+0x8868>
   1e6f4:	mov	r8, r1
   1e6f8:	cmp	r8, r6
   1e6fc:	bne	1e72c <main@@Base+0x8890>
   1e700:	b	1f82c <main@@Base+0x9990>
   1e704:	bne	1e714 <main@@Base+0x8878>
   1e708:	ldrb	r0, [r8, #2]!
   1e70c:	cmp	r0, #32
   1e710:	bhi	1e724 <main@@Base+0x8888>
   1e714:	mov	r0, sl
   1e718:	mov	r2, r6
   1e71c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e720:	mov	r8, r0
   1e724:	cmp	r8, r6
   1e728:	beq	1f82c <main@@Base+0x9990>
   1e72c:	ldrb	r0, [r8]
   1e730:	cmp	r0, #93	; 0x5d
   1e734:	beq	1f888 <main@@Base+0x99ec>
   1e738:	mov	r0, #0
   1e73c:	mov	r1, #1
   1e740:	str	r0, [fp, #-52]	; 0xffffffcc
   1e744:	str	r0, [fp, #-56]	; 0xffffffc8
   1e748:	ldr	r0, [sl]
   1e74c:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1e750:	mov	r9, r0
   1e754:	cmp	r0, #0
   1e758:	mov	r7, r8
   1e75c:	bne	1e610 <main@@Base+0x8774>
   1e760:	b	1fc74 <main@@Base+0x9dd8>
   1e764:	cmp	r0, #125	; 0x7d
   1e768:	bne	1f868 <main@@Base+0x99cc>
   1e76c:	ldr	r6, [sp, #36]	; 0x24
   1e770:	ldr	sl, [sp, #32]
   1e774:	add	r1, r2, #1
   1e778:	sub	r0, r6, r1
   1e77c:	cmp	r0, #2
   1e780:	blt	1f9f4 <main@@Base+0x9b58>
   1e784:	ldrb	r0, [r1]
   1e788:	cmp	r0, #32
   1e78c:	bls	1f9d8 <main@@Base+0x9b3c>
   1e790:	ldr	r6, [sp, #36]	; 0x24
   1e794:	ldr	sl, [sp, #32]
   1e798:	mov	r8, r1
   1e79c:	b	1b230 <main@@Base+0x5394>
   1e7a0:	mov	r0, sl
   1e7a4:	mov	r1, r6
   1e7a8:	b	1f878 <main@@Base+0x99dc>
   1e7ac:	ldr	r6, [sp, #36]	; 0x24
   1e7b0:	ldr	sl, [sp, #32]
   1e7b4:	bne	1e7c4 <main@@Base+0x8928>
   1e7b8:	ldrb	r0, [r8, #2]!
   1e7bc:	cmp	r0, #32
   1e7c0:	bhi	1e7d4 <main@@Base+0x8938>
   1e7c4:	mov	r0, sl
   1e7c8:	mov	r2, r6
   1e7cc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e7d0:	mov	r8, r0
   1e7d4:	cmp	r7, r8
   1e7d8:	beq	1e9b4 <main@@Base+0x8b18>
   1e7dc:	mov	r5, #0
   1e7e0:	cmp	r8, r6
   1e7e4:	str	r5, [fp, #-52]	; 0xffffffcc
   1e7e8:	str	r5, [fp, #-56]	; 0xffffffc8
   1e7ec:	str	r5, [sp, #60]	; 0x3c
   1e7f0:	str	r5, [sp, #48]	; 0x30
   1e7f4:	beq	1e840 <main@@Base+0x89a4>
   1e7f8:	sub	r0, fp, #56	; 0x38
   1e7fc:	mov	r1, r8
   1e800:	mov	r2, r6
   1e804:	add	r3, sp, #48	; 0x30
   1e808:	str	r0, [sp]
   1e80c:	ldr	r0, [sp, #32]
   1e810:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1e814:	cmp	r0, r8
   1e818:	beq	1e850 <main@@Base+0x89b4>
   1e81c:	mov	r9, r0
   1e820:	ldr	r0, [sp, #48]	; 0x30
   1e824:	cmp	r0, #0
   1e828:	beq	1e860 <main@@Base+0x89c4>
   1e82c:	ldr	r0, [sp, #32]
   1e830:	ldr	r2, [sp, #36]	; 0x24
   1e834:	mov	r1, r9
   1e838:	mov	r3, #8
   1e83c:	b	1e87c <main@@Base+0x89e0>
   1e840:	mov	r9, r6
   1e844:	cmp	r8, r9
   1e848:	bne	1e8c4 <main@@Base+0x8a28>
   1e84c:	b	1e88c <main@@Base+0x89f0>
   1e850:	mov	r9, r8
   1e854:	cmp	r8, r9
   1e858:	bne	1e8c4 <main@@Base+0x8a28>
   1e85c:	b	1e88c <main@@Base+0x89f0>
   1e860:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e864:	cmp	r0, #0
   1e868:	beq	1f7ec <main@@Base+0x9950>
   1e86c:	ldr	r0, [sp, #32]
   1e870:	ldr	r2, [sp, #36]	; 0x24
   1e874:	mov	r1, r9
   1e878:	mov	r3, #7
   1e87c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1e880:	mov	r9, r0
   1e884:	cmp	r8, r9
   1e888:	bne	1e8c4 <main@@Base+0x8a28>
   1e88c:	add	r0, sp, #60	; 0x3c
   1e890:	ldr	r2, [sp, #36]	; 0x24
   1e894:	mov	r1, r8
   1e898:	str	r0, [sp]
   1e89c:	ldr	r0, [sp, #32]
   1e8a0:	ldr	r3, [pc, #4060]	; 1f884 <main@@Base+0x99e8>
   1e8a4:	add	r3, pc, r3
   1e8a8:	bl	243b4 <main@@Base+0xe518>
   1e8ac:	cmp	r0, r8
   1e8b0:	mov	r9, r0
   1e8b4:	ldrne	r0, [sp, #36]	; 0x24
   1e8b8:	cmpne	r9, r0
   1e8bc:	beq	1fc38 <main@@Base+0x9d9c>
   1e8c0:	ldr	r5, [sp, #60]	; 0x3c
   1e8c4:	ldr	sl, [sp, #32]
   1e8c8:	cmp	r5, #0
   1e8cc:	bne	1e8dc <main@@Base+0x8a40>
   1e8d0:	ldrb	r0, [sl, #8]
   1e8d4:	tst	r0, #2
   1e8d8:	beq	1eb50 <main@@Base+0x8cb4>
   1e8dc:	ldr	r0, [sl]
   1e8e0:	mov	r1, #21
   1e8e4:	mov	r2, #4
   1e8e8:	mov	r3, #4
   1e8ec:	bl	307e4 <flatcc_builder_table_add@@Base>
   1e8f0:	cmp	r0, #0
   1e8f4:	beq	1fc38 <main@@Base+0x9d9c>
   1e8f8:	ldr	sl, [sp, #32]
   1e8fc:	str	r5, [r0]
   1e900:	b	1eb50 <main@@Base+0x8cb4>
   1e904:	ldr	r6, [sp, #36]	; 0x24
   1e908:	ldr	sl, [sp, #32]
   1e90c:	bne	1e91c <main@@Base+0x8a80>
   1e910:	ldrb	r0, [r8, #2]!
   1e914:	cmp	r0, #32
   1e918:	bhi	1e92c <main@@Base+0x8a90>
   1e91c:	mov	r0, sl
   1e920:	mov	r2, r6
   1e924:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1e928:	mov	r8, r0
   1e92c:	cmp	r7, r8
   1e930:	beq	1e9b4 <main@@Base+0x8b18>
   1e934:	mov	r2, r6
   1e938:	mov	r6, #0
   1e93c:	cmp	r8, r2
   1e940:	str	r6, [fp, #-52]	; 0xffffffcc
   1e944:	str	r6, [fp, #-56]	; 0xffffffc8
   1e948:	str	r6, [sp, #52]	; 0x34
   1e94c:	str	r6, [sp, #48]	; 0x30
   1e950:	str	r6, [sp, #60]	; 0x3c
   1e954:	beq	1ea94 <main@@Base+0x8bf8>
   1e958:	sub	r0, fp, #56	; 0x38
   1e95c:	mov	r1, r8
   1e960:	add	r3, sp, #60	; 0x3c
   1e964:	str	r0, [sp]
   1e968:	ldr	r0, [sp, #32]
   1e96c:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1e970:	cmp	r0, r8
   1e974:	beq	1eaa8 <main@@Base+0x8c0c>
   1e978:	mov	r9, r0
   1e97c:	ldr	r0, [sp, #60]	; 0x3c
   1e980:	cmp	r0, #0
   1e984:	beq	1eac0 <main@@Base+0x8c24>
   1e988:	ldr	r0, [sp, #32]
   1e98c:	ldr	r2, [sp, #36]	; 0x24
   1e990:	mov	r1, r9
   1e994:	mov	r3, #8
   1e998:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1e99c:	mov	r9, r0
   1e9a0:	mov	r6, #0
   1e9a4:	mov	r7, #0
   1e9a8:	cmp	r8, r9
   1e9ac:	bne	1eb14 <main@@Base+0x8c78>
   1e9b0:	b	1ead8 <main@@Base+0x8c3c>
   1e9b4:	mov	r0, sl
   1e9b8:	mov	r1, r7
   1e9bc:	mov	r2, r6
   1e9c0:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   1e9c4:	mov	r9, r0
   1e9c8:	sub	r0, r6, r9
   1e9cc:	cmp	r0, #2
   1e9d0:	blt	1ea04 <main@@Base+0x8b68>
   1e9d4:	ldrb	r0, [r9]
   1e9d8:	cmp	r0, #32
   1e9dc:	bls	1e9f0 <main@@Base+0x8b54>
   1e9e0:	mov	r2, r9
   1e9e4:	cmp	r2, r6
   1e9e8:	bne	1ea20 <main@@Base+0x8b84>
   1e9ec:	b	1fb88 <main@@Base+0x9cec>
   1e9f0:	bne	1ea04 <main@@Base+0x8b68>
   1e9f4:	mov	r2, r9
   1e9f8:	ldrb	r0, [r2, #1]!
   1e9fc:	cmp	r0, #32
   1ea00:	bhi	1ea18 <main@@Base+0x8b7c>
   1ea04:	mov	r0, sl
   1ea08:	mov	r1, r9
   1ea0c:	mov	r2, r6
   1ea10:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ea14:	mov	r2, r0
   1ea18:	cmp	r2, r6
   1ea1c:	beq	1fb88 <main@@Base+0x9cec>
   1ea20:	ldrb	r0, [r2]
   1ea24:	ldr	r4, [sp, #28]
   1ea28:	cmp	r0, #44	; 0x2c
   1ea2c:	bne	1fb94 <main@@Base+0x9cf8>
   1ea30:	add	r1, r2, #1
   1ea34:	sub	r0, r6, r1
   1ea38:	cmp	r0, #2
   1ea3c:	blt	1ea6c <main@@Base+0x8bd0>
   1ea40:	ldrb	r0, [r1]
   1ea44:	cmp	r0, #32
   1ea48:	bls	1ea5c <main@@Base+0x8bc0>
   1ea4c:	mov	r2, r1
   1ea50:	cmp	r2, r6
   1ea54:	bne	1ea84 <main@@Base+0x8be8>
   1ea58:	b	1fbe4 <main@@Base+0x9d48>
   1ea5c:	bne	1ea6c <main@@Base+0x8bd0>
   1ea60:	ldrb	r0, [r2, #2]!
   1ea64:	cmp	r0, #32
   1ea68:	bhi	1ea7c <main@@Base+0x8be0>
   1ea6c:	mov	r0, sl
   1ea70:	mov	r2, r6
   1ea74:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ea78:	mov	r2, r0
   1ea7c:	cmp	r2, r6
   1ea80:	beq	1fbe4 <main@@Base+0x9d48>
   1ea84:	ldrb	r0, [r2]
   1ea88:	cmp	r0, #125	; 0x7d
   1ea8c:	bne	16a28 <main@@Base+0xb8c>
   1ea90:	b	1fb9c <main@@Base+0x9d00>
   1ea94:	mov	r7, #0
   1ea98:	mov	r9, r2
   1ea9c:	cmp	r8, r9
   1eaa0:	bne	1eb14 <main@@Base+0x8c78>
   1eaa4:	b	1ead8 <main@@Base+0x8c3c>
   1eaa8:	mov	r6, #0
   1eaac:	mov	r7, #0
   1eab0:	mov	r9, r8
   1eab4:	cmp	r8, r9
   1eab8:	bne	1eb14 <main@@Base+0x8c78>
   1eabc:	b	1ead8 <main@@Base+0x8c3c>
   1eac0:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1eac4:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1eac8:	str	r7, [sp, #52]	; 0x34
   1eacc:	str	r6, [sp, #48]	; 0x30
   1ead0:	cmp	r8, r9
   1ead4:	bne	1eb14 <main@@Base+0x8c78>
   1ead8:	add	r0, sp, #48	; 0x30
   1eadc:	ldr	r2, [sp, #36]	; 0x24
   1eae0:	mov	r1, r8
   1eae4:	str	r0, [sp]
   1eae8:	ldr	r0, [sp, #32]
   1eaec:	ldr	r3, [pc, #4056]	; 1facc <main@@Base+0x9c30>
   1eaf0:	add	r3, pc, r3
   1eaf4:	bl	24594 <main@@Base+0xe6f8>
   1eaf8:	cmp	r0, r8
   1eafc:	mov	r9, r0
   1eb00:	ldrne	r0, [sp, #36]	; 0x24
   1eb04:	cmpne	r9, r0
   1eb08:	beq	1fc38 <main@@Base+0x9d9c>
   1eb0c:	ldr	r6, [sp, #48]	; 0x30
   1eb10:	ldr	r7, [sp, #52]	; 0x34
   1eb14:	ldr	sl, [sp, #32]
   1eb18:	orrs	r0, r6, r7
   1eb1c:	bne	1eb2c <main@@Base+0x8c90>
   1eb20:	ldrb	r0, [sl, #8]
   1eb24:	tst	r0, #2
   1eb28:	beq	1eb50 <main@@Base+0x8cb4>
   1eb2c:	ldr	r0, [sl]
   1eb30:	mov	r1, #23
   1eb34:	mov	r2, #8
   1eb38:	mov	r3, #8
   1eb3c:	bl	307e4 <flatcc_builder_table_add@@Base>
   1eb40:	cmp	r0, #0
   1eb44:	beq	1fc38 <main@@Base+0x9d9c>
   1eb48:	strd	r6, [r0]
   1eb4c:	ldr	sl, [sp, #32]
   1eb50:	ldr	r6, [sp, #36]	; 0x24
   1eb54:	b	1e9c8 <main@@Base+0x8b2c>
   1eb58:	mov	r8, r6
   1eb5c:	b	1cbac <main@@Base+0x6d10>
   1eb60:	bne	1eb70 <main@@Base+0x8cd4>
   1eb64:	ldrb	r0, [r8, #2]!
   1eb68:	cmp	r0, #32
   1eb6c:	bhi	1eb80 <main@@Base+0x8ce4>
   1eb70:	ldr	r0, [sp, #32]
   1eb74:	ldr	r2, [sp, #36]	; 0x24
   1eb78:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1eb7c:	mov	r8, r0
   1eb80:	ldr	r2, [sp, #36]	; 0x24
   1eb84:	cmp	r8, r2
   1eb88:	beq	1ebd0 <main@@Base+0x8d34>
   1eb8c:	ldrb	r0, [r8]
   1eb90:	cmp	r0, #125	; 0x7d
   1eb94:	bne	1ebcc <main@@Base+0x8d30>
   1eb98:	ldr	r0, [sp, #36]	; 0x24
   1eb9c:	add	r1, r8, #1
   1eba0:	sub	r0, r0, r1
   1eba4:	cmp	r0, #2
   1eba8:	blt	1fb78 <main@@Base+0x9cdc>
   1ebac:	ldrb	r0, [r1]
   1ebb0:	cmp	r0, #32
   1ebb4:	bhi	1f96c <main@@Base+0x9ad0>
   1ebb8:	bne	1fb78 <main@@Base+0x9cdc>
   1ebbc:	ldrb	r0, [r8, #2]!
   1ebc0:	cmp	r0, #32
   1ebc4:	bhi	1c718 <main@@Base+0x687c>
   1ebc8:	b	1fb78 <main@@Base+0x9cdc>
   1ebcc:	mov	r2, r8
   1ebd0:	ldr	r4, [sp, #36]	; 0x24
   1ebd4:	ldr	sl, [sp, #32]
   1ebd8:	cmp	r2, r4
   1ebdc:	mov	r9, r4
   1ebe0:	beq	1ec10 <main@@Base+0x8d74>
   1ebe4:	ldrb	r0, [r2]
   1ebe8:	cmp	r0, #34	; 0x22
   1ebec:	bne	1ebf8 <main@@Base+0x8d5c>
   1ebf0:	add	r9, r2, #1
   1ebf4:	b	1ec10 <main@@Base+0x8d74>
   1ebf8:	mov	r1, r2
   1ebfc:	mov	r0, sl
   1ec00:	mov	r2, r4
   1ec04:	mov	r3, #5
   1ec08:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ec0c:	mov	r9, r0
   1ec10:	sub	lr, r4, r9
   1ec14:	mov	r1, #8
   1ec18:	cmp	lr, #8
   1ec1c:	movcc	r1, lr
   1ec20:	and	r1, r1, #15
   1ec24:	sub	r2, r1, #1
   1ec28:	cmp	r2, #7
   1ec2c:	bhi	1f304 <main@@Base+0x9468>
   1ec30:	add	r0, pc, #36	; 0x24
   1ec34:	mov	r1, #0
   1ec38:	mov	ip, #0
   1ec3c:	mov	r8, #0
   1ec40:	mov	r7, #0
   1ec44:	mov	r3, #0
   1ec48:	mov	r6, #0
   1ec4c:	mov	r4, #0
   1ec50:	ldr	r5, [r0, r2, lsl #2]
   1ec54:	mov	r2, #0
   1ec58:	add	pc, r0, r5
   1ec5c:	andeq	r0, r0, r4, rrx
   1ec60:	andeq	r0, r0, ip, asr r0
   1ec64:	andeq	r0, r0, r4, asr r0
   1ec68:	andeq	r0, r0, ip, asr #32
   1ec6c:	andeq	r0, r0, r0, asr #32
   1ec70:	andeq	r0, r0, r4, lsr r0
   1ec74:	andeq	r0, r0, r4, lsr #32
   1ec78:	andeq	r0, r0, r0, lsr #32
   1ec7c:	ldrb	ip, [r9, #7]
   1ec80:	ldrb	r0, [r9, #6]
   1ec84:	mov	r8, r1
   1ec88:	orr	r0, ip, r0, lsl #8
   1ec8c:	mov	r1, r0
   1ec90:	ldrb	r0, [r9, #5]
   1ec94:	mov	r7, r8
   1ec98:	orr	r1, r1, r0, lsl #16
   1ec9c:	ldrb	r0, [r9, #4]
   1eca0:	mov	r3, r7
   1eca4:	orr	r1, r1, r0, lsl #24
   1eca8:	ldrb	r0, [r9, #3]
   1ecac:	orr	r6, r0, r3
   1ecb0:	ldrb	r0, [r9, #2]
   1ecb4:	orr	r4, r6, r0, lsl #8
   1ecb8:	ldrb	r0, [r9, #1]
   1ecbc:	orr	r2, r4, r0, lsl #16
   1ecc0:	ldrb	r0, [r9]
   1ecc4:	orr	r2, r2, r0, lsl #24
   1ecc8:	movw	r0, #65535	; 0xffff
   1eccc:	movt	r0, #26979	; 0x6963
   1ecd0:	cmp	r2, r0
   1ecd4:	bhi	1ed38 <main@@Base+0x8e9c>
   1ecd8:	movw	r0, #30062	; 0x756e
   1ecdc:	and	r1, r1, #-16777216	; 0xff000000
   1ece0:	movt	r0, #25455	; 0x636f
   1ece4:	eor	r1, r1, #1946157056	; 0x74000000
   1ece8:	eor	r0, r2, r0
   1ecec:	orrs	r0, r1, r0
   1ecf0:	bne	1f304 <main@@Base+0x9468>
   1ecf4:	cmp	lr, #6
   1ecf8:	mov	r7, r9
   1ecfc:	blt	1ef98 <main@@Base+0x90fc>
   1ed00:	ldrb	r0, [r9, #5]
   1ed04:	mov	r7, r9
   1ed08:	cmp	r0, #34	; 0x22
   1ed0c:	bne	1ef98 <main@@Base+0x90fc>
   1ed10:	ldr	r0, [sp, #36]	; 0x24
   1ed14:	add	r1, r9, #6
   1ed18:	sub	r0, r0, r1
   1ed1c:	cmp	r0, #2
   1ed20:	blt	1ee00 <main@@Base+0x8f64>
   1ed24:	ldrb	r0, [r1]
   1ed28:	cmp	r0, #32
   1ed2c:	bls	1edec <main@@Base+0x8f50>
   1ed30:	mov	r7, r1
   1ed34:	b	1ee10 <main@@Base+0x8f74>
   1ed38:	movw	r1, #27648	; 0x6c00
   1ed3c:	bic	r0, r2, #255	; 0xff
   1ed40:	movt	r1, #30305	; 0x7661
   1ed44:	teq	r0, r1
   1ed48:	bne	1ed90 <main@@Base+0x8ef4>
   1ed4c:	cmp	lr, #4
   1ed50:	mov	r7, r9
   1ed54:	blt	1f110 <main@@Base+0x9274>
   1ed58:	ldrb	r0, [r9, #3]
   1ed5c:	mov	r7, r9
   1ed60:	cmp	r0, #34	; 0x22
   1ed64:	bne	1f110 <main@@Base+0x9274>
   1ed68:	ldr	r0, [sp, #36]	; 0x24
   1ed6c:	add	r1, r9, #4
   1ed70:	sub	r0, r0, r1
   1ed74:	cmp	r0, #2
   1ed78:	blt	1ee84 <main@@Base+0x8fe8>
   1ed7c:	ldrb	r0, [r1]
   1ed80:	cmp	r0, #32
   1ed84:	bls	1ee70 <main@@Base+0x8fd4>
   1ed88:	mov	r7, r1
   1ed8c:	b	1ee94 <main@@Base+0x8ff8>
   1ed90:	movw	r0, #0
   1ed94:	bfc	r2, #0, #16
   1ed98:	movt	r0, #26980	; 0x6964
   1ed9c:	teq	r2, r0
   1eda0:	bne	1f300 <main@@Base+0x9464>
   1eda4:	cmp	lr, #3
   1eda8:	mov	r1, r9
   1edac:	blt	1f2ac <main@@Base+0x9410>
   1edb0:	ldrb	r0, [r9, #2]
   1edb4:	mov	r1, r9
   1edb8:	cmp	r0, #34	; 0x22
   1edbc:	bne	1f2ac <main@@Base+0x9410>
   1edc0:	ldr	r0, [sp, #36]	; 0x24
   1edc4:	add	r2, r9, #3
   1edc8:	sub	r0, r0, r2
   1edcc:	cmp	r0, #2
   1edd0:	blt	1ef08 <main@@Base+0x906c>
   1edd4:	ldrb	r0, [r2]
   1edd8:	cmp	r0, #32
   1eddc:	bls	1eef4 <main@@Base+0x9058>
   1ede0:	mov	r1, r2
   1ede4:	b	1ef1c <main@@Base+0x9080>
   1ede8:	andeq	lr, r3, ip, lsl #6
   1edec:	bne	1ee00 <main@@Base+0x8f64>
   1edf0:	mov	r7, r9
   1edf4:	ldrb	r0, [r7, #7]!
   1edf8:	cmp	r0, #32
   1edfc:	bhi	1ee10 <main@@Base+0x8f74>
   1ee00:	ldr	r0, [sp, #32]
   1ee04:	ldr	r2, [sp, #36]	; 0x24
   1ee08:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ee0c:	mov	r7, r0
   1ee10:	ldr	r0, [sp, #36]	; 0x24
   1ee14:	cmp	r7, r0
   1ee18:	beq	1ee58 <main@@Base+0x8fbc>
   1ee1c:	ldrb	r0, [r7]
   1ee20:	cmp	r0, #58	; 0x3a
   1ee24:	bne	1ee58 <main@@Base+0x8fbc>
   1ee28:	ldr	r0, [sp, #36]	; 0x24
   1ee2c:	add	r1, r7, #1
   1ee30:	sub	r0, r0, r1
   1ee34:	cmp	r0, #2
   1ee38:	blt	1ef88 <main@@Base+0x90ec>
   1ee3c:	ldrb	r0, [r1]
   1ee40:	cmp	r0, #32
   1ee44:	bls	1ef78 <main@@Base+0x90dc>
   1ee48:	mov	r7, r1
   1ee4c:	cmp	r9, r7
   1ee50:	bne	1efa0 <main@@Base+0x9104>
   1ee54:	b	1f300 <main@@Base+0x9464>
   1ee58:	ldr	r0, [sp, #32]
   1ee5c:	ldr	r2, [sp, #36]	; 0x24
   1ee60:	mov	r1, r7
   1ee64:	mov	r3, #4
   1ee68:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ee6c:	b	1ef94 <main@@Base+0x90f8>
   1ee70:	bne	1ee84 <main@@Base+0x8fe8>
   1ee74:	mov	r7, r9
   1ee78:	ldrb	r0, [r7, #5]!
   1ee7c:	cmp	r0, #32
   1ee80:	bhi	1ee94 <main@@Base+0x8ff8>
   1ee84:	ldr	r0, [sp, #32]
   1ee88:	ldr	r2, [sp, #36]	; 0x24
   1ee8c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ee90:	mov	r7, r0
   1ee94:	ldr	r0, [sp, #36]	; 0x24
   1ee98:	cmp	r7, r0
   1ee9c:	beq	1eedc <main@@Base+0x9040>
   1eea0:	ldrb	r0, [r7]
   1eea4:	cmp	r0, #58	; 0x3a
   1eea8:	bne	1eedc <main@@Base+0x9040>
   1eeac:	ldr	r0, [sp, #36]	; 0x24
   1eeb0:	add	r1, r7, #1
   1eeb4:	sub	r0, r0, r1
   1eeb8:	cmp	r0, #2
   1eebc:	blt	1f100 <main@@Base+0x9264>
   1eec0:	ldrb	r0, [r1]
   1eec4:	cmp	r0, #32
   1eec8:	bls	1f0f0 <main@@Base+0x9254>
   1eecc:	mov	r7, r1
   1eed0:	cmp	r9, r7
   1eed4:	bne	1f118 <main@@Base+0x927c>
   1eed8:	b	1f300 <main@@Base+0x9464>
   1eedc:	ldr	r0, [sp, #32]
   1eee0:	ldr	r2, [sp, #36]	; 0x24
   1eee4:	mov	r1, r7
   1eee8:	mov	r3, #4
   1eeec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1eef0:	b	1f10c <main@@Base+0x9270>
   1eef4:	bne	1ef08 <main@@Base+0x906c>
   1eef8:	mov	r1, r9
   1eefc:	ldrb	r0, [r1, #4]!
   1ef00:	cmp	r0, #32
   1ef04:	bhi	1ef1c <main@@Base+0x9080>
   1ef08:	mov	r1, r2
   1ef0c:	ldr	r0, [sp, #32]
   1ef10:	ldr	r2, [sp, #36]	; 0x24
   1ef14:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ef18:	mov	r1, r0
   1ef1c:	ldr	r0, [sp, #36]	; 0x24
   1ef20:	cmp	r1, r0
   1ef24:	beq	1ef64 <main@@Base+0x90c8>
   1ef28:	ldrb	r0, [r1]
   1ef2c:	cmp	r0, #58	; 0x3a
   1ef30:	bne	1ef64 <main@@Base+0x90c8>
   1ef34:	ldr	r0, [sp, #36]	; 0x24
   1ef38:	add	r2, r1, #1
   1ef3c:	sub	r0, r0, r2
   1ef40:	cmp	r0, #2
   1ef44:	blt	1f298 <main@@Base+0x93fc>
   1ef48:	ldrb	r0, [r2]
   1ef4c:	cmp	r0, #32
   1ef50:	bls	1f288 <main@@Base+0x93ec>
   1ef54:	mov	r1, r2
   1ef58:	cmp	r9, r1
   1ef5c:	bne	1f2b4 <main@@Base+0x9418>
   1ef60:	b	1f300 <main@@Base+0x9464>
   1ef64:	ldr	r0, [sp, #32]
   1ef68:	ldr	r2, [sp, #36]	; 0x24
   1ef6c:	mov	r3, #4
   1ef70:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1ef74:	b	1f2a8 <main@@Base+0x940c>
   1ef78:	bne	1ef88 <main@@Base+0x90ec>
   1ef7c:	ldrb	r0, [r7, #2]!
   1ef80:	cmp	r0, #32
   1ef84:	bhi	1ef98 <main@@Base+0x90fc>
   1ef88:	ldr	r0, [sp, #32]
   1ef8c:	ldr	r2, [sp, #36]	; 0x24
   1ef90:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1ef94:	mov	r7, r0
   1ef98:	cmp	r9, r7
   1ef9c:	beq	1f300 <main@@Base+0x9464>
   1efa0:	ldr	r0, [sp, #36]	; 0x24
   1efa4:	mov	r5, #0
   1efa8:	str	r5, [fp, #-52]	; 0xffffffcc
   1efac:	str	r5, [fp, #-56]	; 0xffffffc8
   1efb0:	strh	r5, [sp, #60]	; 0x3c
   1efb4:	str	r5, [sp, #48]	; 0x30
   1efb8:	cmp	r7, r0
   1efbc:	beq	1f008 <main@@Base+0x916c>
   1efc0:	sub	r0, fp, #56	; 0x38
   1efc4:	ldr	r2, [sp, #36]	; 0x24
   1efc8:	mov	r1, r7
   1efcc:	add	r3, sp, #48	; 0x30
   1efd0:	str	r0, [sp]
   1efd4:	ldr	r0, [sp, #32]
   1efd8:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1efdc:	cmp	r0, r7
   1efe0:	beq	1f018 <main@@Base+0x917c>
   1efe4:	mov	r8, r0
   1efe8:	ldr	r0, [sp, #48]	; 0x30
   1efec:	cmp	r0, #0
   1eff0:	beq	1f02c <main@@Base+0x9190>
   1eff4:	ldr	r0, [sp, #32]
   1eff8:	ldr	r2, [sp, #36]	; 0x24
   1effc:	mov	r1, r8
   1f000:	mov	r3, #8
   1f004:	b	1f050 <main@@Base+0x91b4>
   1f008:	ldr	r8, [sp, #36]	; 0x24
   1f00c:	cmp	r7, r8
   1f010:	bne	1f098 <main@@Base+0x91fc>
   1f014:	b	1f060 <main@@Base+0x91c4>
   1f018:	mov	r8, r7
   1f01c:	cmp	r7, r8
   1f020:	bne	1f098 <main@@Base+0x91fc>
   1f024:	b	1f060 <main@@Base+0x91c4>
   1f028:	andeq	lr, r3, r8, asr #2
   1f02c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f030:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f034:	subs	r2, r0, #65536	; 0x10000
   1f038:	sbcs	r1, r1, #0
   1f03c:	bcc	1f0dc <main@@Base+0x9240>
   1f040:	ldr	r0, [sp, #32]
   1f044:	ldr	r2, [sp, #36]	; 0x24
   1f048:	mov	r1, r8
   1f04c:	mov	r3, #7
   1f050:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1f054:	mov	r8, r0
   1f058:	cmp	r7, r8
   1f05c:	bne	1f098 <main@@Base+0x91fc>
   1f060:	add	r0, sp, #60	; 0x3c
   1f064:	ldr	r2, [sp, #36]	; 0x24
   1f068:	mov	r1, r7
   1f06c:	str	r0, [sp]
   1f070:	ldr	r0, [sp, #32]
   1f074:	ldr	r3, [pc, #3132]	; 1fcb8 <main@@Base+0x9e1c>
   1f078:	add	r3, pc, r3
   1f07c:	bl	2ba58 <main@@Base+0x15bbc>
   1f080:	cmp	r0, r7
   1f084:	mov	r8, r0
   1f088:	ldrne	r0, [sp, #36]	; 0x24
   1f08c:	cmpne	r8, r0
   1f090:	beq	1c728 <main@@Base+0x688c>
   1f094:	ldrh	r5, [sp, #60]	; 0x3c
   1f098:	movw	r0, #65535	; 0xffff
   1f09c:	tst	r5, r0
   1f0a0:	bne	1f0b4 <main@@Base+0x9218>
   1f0a4:	ldr	r0, [sp, #32]
   1f0a8:	ldrb	r0, [r0, #8]
   1f0ac:	tst	r0, #2
   1f0b0:	beq	1f2f4 <main@@Base+0x9458>
   1f0b4:	ldr	r0, [sp, #32]
   1f0b8:	mov	r1, #2
   1f0bc:	mov	r2, #2
   1f0c0:	mov	r3, #2
   1f0c4:	ldr	r0, [r0]
   1f0c8:	bl	307e4 <flatcc_builder_table_add@@Base>
   1f0cc:	cmp	r0, #0
   1f0d0:	beq	1c728 <main@@Base+0x688c>
   1f0d4:	strh	r5, [r0]
   1f0d8:	b	1f2f4 <main@@Base+0x9458>
   1f0dc:	mov	r5, r0
   1f0e0:	strh	r0, [sp, #60]	; 0x3c
   1f0e4:	cmp	r7, r8
   1f0e8:	bne	1f098 <main@@Base+0x91fc>
   1f0ec:	b	1f060 <main@@Base+0x91c4>
   1f0f0:	bne	1f100 <main@@Base+0x9264>
   1f0f4:	ldrb	r0, [r7, #2]!
   1f0f8:	cmp	r0, #32
   1f0fc:	bhi	1f110 <main@@Base+0x9274>
   1f100:	ldr	r0, [sp, #32]
   1f104:	ldr	r2, [sp, #36]	; 0x24
   1f108:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f10c:	mov	r7, r0
   1f110:	cmp	r9, r7
   1f114:	beq	1f300 <main@@Base+0x9464>
   1f118:	ldr	r0, [sp, #36]	; 0x24
   1f11c:	mov	r6, #0
   1f120:	str	r6, [fp, #-52]	; 0xffffffcc
   1f124:	str	r6, [fp, #-56]	; 0xffffffc8
   1f128:	str	r6, [sp, #52]	; 0x34
   1f12c:	str	r6, [sp, #48]	; 0x30
   1f130:	str	r6, [sp, #60]	; 0x3c
   1f134:	cmp	r7, r0
   1f138:	beq	1f198 <main@@Base+0x92fc>
   1f13c:	sub	r0, fp, #56	; 0x38
   1f140:	ldr	r2, [sp, #36]	; 0x24
   1f144:	mov	r1, r7
   1f148:	add	r3, sp, #60	; 0x3c
   1f14c:	str	r0, [sp]
   1f150:	ldr	r0, [sp, #32]
   1f154:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1f158:	cmp	r0, r7
   1f15c:	beq	1f1a0 <main@@Base+0x9304>
   1f160:	mov	r8, r0
   1f164:	ldr	r0, [sp, #60]	; 0x3c
   1f168:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1f16c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1f170:	cmp	r0, #0
   1f174:	beq	1f1b8 <main@@Base+0x931c>
   1f178:	subs	r0, r6, #1
   1f17c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1f180:	bcc	1f1ec <main@@Base+0x9350>
   1f184:	ldr	r0, [sp, #32]
   1f188:	ldr	r2, [sp, #36]	; 0x24
   1f18c:	mov	r1, r8
   1f190:	mov	r3, #8
   1f194:	b	1f1d0 <main@@Base+0x9334>
   1f198:	ldr	r8, [sp, #36]	; 0x24
   1f19c:	b	1f1dc <main@@Base+0x9340>
   1f1a0:	mov	r6, #0
   1f1a4:	mov	r5, #0
   1f1a8:	mov	r8, r7
   1f1ac:	cmp	r7, r8
   1f1b0:	bne	1f240 <main@@Base+0x93a4>
   1f1b4:	b	1f204 <main@@Base+0x9368>
   1f1b8:	cmn	r5, #1
   1f1bc:	bgt	1f1f4 <main@@Base+0x9358>
   1f1c0:	ldr	r0, [sp, #32]
   1f1c4:	ldr	r2, [sp, #36]	; 0x24
   1f1c8:	mov	r1, r8
   1f1cc:	mov	r3, #7
   1f1d0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1f1d4:	mov	r8, r0
   1f1d8:	mov	r6, #0
   1f1dc:	mov	r5, #0
   1f1e0:	cmp	r7, r8
   1f1e4:	bne	1f240 <main@@Base+0x93a4>
   1f1e8:	b	1f204 <main@@Base+0x9368>
   1f1ec:	rsbs	r6, r6, #0
   1f1f0:	rsc	r5, r5, #0
   1f1f4:	str	r6, [sp, #48]	; 0x30
   1f1f8:	str	r5, [sp, #52]	; 0x34
   1f1fc:	cmp	r7, r8
   1f200:	bne	1f240 <main@@Base+0x93a4>
   1f204:	add	r0, sp, #48	; 0x30
   1f208:	ldr	r2, [sp, #36]	; 0x24
   1f20c:	mov	r1, r7
   1f210:	str	r0, [sp]
   1f214:	ldr	r0, [sp, #32]
   1f218:	ldr	r3, [pc, #2716]	; 1fcbc <main@@Base+0x9e20>
   1f21c:	add	r3, pc, r3
   1f220:	bl	241bc <main@@Base+0xe320>
   1f224:	cmp	r0, r7
   1f228:	mov	r8, r0
   1f22c:	ldrne	r0, [sp, #36]	; 0x24
   1f230:	cmpne	r8, r0
   1f234:	beq	1c728 <main@@Base+0x688c>
   1f238:	ldr	r6, [sp, #48]	; 0x30
   1f23c:	ldr	r5, [sp, #52]	; 0x34
   1f240:	orrs	r0, r6, r5
   1f244:	bne	1f258 <main@@Base+0x93bc>
   1f248:	ldr	r0, [sp, #32]
   1f24c:	ldrb	r0, [r0, #8]
   1f250:	tst	r0, #2
   1f254:	beq	1f2f4 <main@@Base+0x9458>
   1f258:	ldr	r0, [sp, #32]
   1f25c:	mov	r1, #1
   1f260:	mov	r2, #8
   1f264:	mov	r3, #8
   1f268:	ldr	r0, [r0]
   1f26c:	bl	307e4 <flatcc_builder_table_add@@Base>
   1f270:	cmp	r0, #0
   1f274:	beq	1c728 <main@@Base+0x688c>
   1f278:	str	r6, [r0]
   1f27c:	str	r5, [r0, #4]
   1f280:	b	1f2f4 <main@@Base+0x9458>
   1f284:	andeq	sp, r3, r8, lsr #29
   1f288:	bne	1f298 <main@@Base+0x93fc>
   1f28c:	ldrb	r0, [r1, #2]!
   1f290:	cmp	r0, #32
   1f294:	bhi	1f2ac <main@@Base+0x9410>
   1f298:	mov	r1, r2
   1f29c:	ldr	r0, [sp, #32]
   1f2a0:	ldr	r2, [sp, #36]	; 0x24
   1f2a4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f2a8:	mov	r1, r0
   1f2ac:	cmp	r9, r1
   1f2b0:	beq	1f300 <main@@Base+0x9464>
   1f2b4:	ldr	r0, [sp, #32]
   1f2b8:	ldr	r2, [sp, #36]	; 0x24
   1f2bc:	add	r3, sp, #56	; 0x38
   1f2c0:	bl	36974 <flatcc_json_parser_build_string@@Base>
   1f2c4:	mov	r8, r0
   1f2c8:	ldr	r0, [sp, #56]	; 0x38
   1f2cc:	cmp	r0, #0
   1f2d0:	beq	1c728 <main@@Base+0x688c>
   1f2d4:	ldr	r0, [sp, #32]
   1f2d8:	mov	r1, #0
   1f2dc:	ldr	r0, [r0]
   1f2e0:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   1f2e4:	cmp	r0, #0
   1f2e8:	beq	1c728 <main@@Base+0x688c>
   1f2ec:	ldr	r1, [sp, #56]	; 0x38
   1f2f0:	str	r1, [r0]
   1f2f4:	ldr	r4, [sp, #36]	; 0x24
   1f2f8:	ldr	sl, [sp, #32]
   1f2fc:	b	1f31c <main@@Base+0x9480>
   1f300:	ldr	sl, [sp, #32]
   1f304:	ldr	r4, [sp, #36]	; 0x24
   1f308:	mov	r0, sl
   1f30c:	mov	r1, r9
   1f310:	mov	r2, r4
   1f314:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   1f318:	mov	r8, r0
   1f31c:	sub	r0, r4, r8
   1f320:	cmp	r0, #2
   1f324:	blt	1f358 <main@@Base+0x94bc>
   1f328:	ldrb	r0, [r8]
   1f32c:	cmp	r0, #32
   1f330:	bls	1f344 <main@@Base+0x94a8>
   1f334:	mov	r2, r8
   1f338:	cmp	r2, r4
   1f33c:	bne	1f374 <main@@Base+0x94d8>
   1f340:	b	1f93c <main@@Base+0x9aa0>
   1f344:	bne	1f358 <main@@Base+0x94bc>
   1f348:	mov	r2, r8
   1f34c:	ldrb	r0, [r2, #1]!
   1f350:	cmp	r0, #32
   1f354:	bhi	1f36c <main@@Base+0x94d0>
   1f358:	mov	r0, sl
   1f35c:	mov	r1, r8
   1f360:	mov	r2, r4
   1f364:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f368:	mov	r2, r0
   1f36c:	cmp	r2, r4
   1f370:	beq	1f93c <main@@Base+0x9aa0>
   1f374:	ldrb	r0, [r2]
   1f378:	cmp	r0, #44	; 0x2c
   1f37c:	bne	1f944 <main@@Base+0x9aa8>
   1f380:	add	r1, r2, #1
   1f384:	sub	r0, r4, r1
   1f388:	cmp	r0, #2
   1f38c:	blt	1f3bc <main@@Base+0x9520>
   1f390:	ldrb	r0, [r1]
   1f394:	cmp	r0, #32
   1f398:	bls	1f3ac <main@@Base+0x9510>
   1f39c:	mov	r2, r1
   1f3a0:	cmp	r2, r4
   1f3a4:	bne	1f3d4 <main@@Base+0x9538>
   1f3a8:	b	1f990 <main@@Base+0x9af4>
   1f3ac:	bne	1f3bc <main@@Base+0x9520>
   1f3b0:	ldrb	r0, [r2, #2]!
   1f3b4:	cmp	r0, #32
   1f3b8:	bhi	1f3cc <main@@Base+0x9530>
   1f3bc:	mov	r0, sl
   1f3c0:	mov	r2, r4
   1f3c4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f3c8:	mov	r2, r0
   1f3cc:	cmp	r2, r4
   1f3d0:	beq	1f990 <main@@Base+0x9af4>
   1f3d4:	ldrb	r0, [r2]
   1f3d8:	cmp	r0, #125	; 0x7d
   1f3dc:	bne	1ebd8 <main@@Base+0x8d3c>
   1f3e0:	add	r1, r2, #1
   1f3e4:	sub	r0, r4, r1
   1f3e8:	cmp	r0, #2
   1f3ec:	blt	1fb78 <main@@Base+0x9cdc>
   1f3f0:	b	1f960 <main@@Base+0x9ac4>
   1f3f4:	cmp	r0, #93	; 0x5d
   1f3f8:	bne	1f8dc <main@@Base+0x9a40>
   1f3fc:	ldr	r6, [sp, #36]	; 0x24
   1f400:	ldr	sl, [sp, #32]
   1f404:	add	r1, r2, #1
   1f408:	sub	r0, r6, r1
   1f40c:	cmp	r0, #2
   1f410:	blt	1fa90 <main@@Base+0x9bf4>
   1f414:	ldrb	r0, [r1]
   1f418:	cmp	r0, #32
   1f41c:	bls	1fa74 <main@@Base+0x9bd8>
   1f420:	ldr	r6, [sp, #36]	; 0x24
   1f424:	ldr	sl, [sp, #32]
   1f428:	mov	r8, r1
   1f42c:	b	1cbac <main@@Base+0x6d10>
   1f430:	ldr	sl, [sp, #32]
   1f434:	ldr	r6, [sp, #36]	; 0x24
   1f438:	mov	r1, r2
   1f43c:	mov	r0, sl
   1f440:	mov	r2, r6
   1f444:	mov	r3, #9
   1f448:	b	1b388 <main@@Base+0x54ec>
   1f44c:	mov	r8, r6
   1f450:	b	1fac0 <main@@Base+0x9c24>
   1f454:	mov	r0, sl
   1f458:	mov	r1, r6
   1f45c:	b	1f8ec <main@@Base+0x9a50>
   1f460:	cmp	r0, #93	; 0x5d
   1f464:	bne	1f924 <main@@Base+0x9a88>
   1f468:	ldr	r0, [sp, #36]	; 0x24
   1f46c:	add	r1, r8, #1
   1f470:	sub	r0, r0, r1
   1f474:	cmp	r0, #2
   1f478:	blt	1fab0 <main@@Base+0x9c14>
   1f47c:	b	1f4e4 <main@@Base+0x9648>
   1f480:	mov	r8, r6
   1f484:	b	1b9a4 <main@@Base+0x5b08>
   1f488:	mov	r0, sl
   1f48c:	mov	r1, r6
   1f490:	mov	r2, r6
   1f494:	b	1f930 <main@@Base+0x9a94>
   1f498:	cmp	r0, #125	; 0x7d
   1f49c:	bne	1f974 <main@@Base+0x9ad8>
   1f4a0:	ldr	r6, [sp, #36]	; 0x24
   1f4a4:	ldr	sl, [sp, #32]
   1f4a8:	add	r1, r3, #1
   1f4ac:	sub	r0, r6, r1
   1f4b0:	cmp	r0, #2
   1f4b4:	blt	1faec <main@@Base+0x9c50>
   1f4b8:	ldrb	r0, [r1]
   1f4bc:	cmp	r0, #32
   1f4c0:	bls	1fad0 <main@@Base+0x9c34>
   1f4c4:	ldr	r6, [sp, #36]	; 0x24
   1f4c8:	ldr	sl, [sp, #32]
   1f4cc:	mov	r8, r1
   1f4d0:	b	1b9a4 <main@@Base+0x5b08>
   1f4d4:	add	r1, r8, #1
   1f4d8:	sub	r0, r6, r1
   1f4dc:	cmp	r0, #2
   1f4e0:	blt	1fab0 <main@@Base+0x9c14>
   1f4e4:	ldrb	r0, [r1]
   1f4e8:	cmp	r0, #32
   1f4ec:	bls	1faa0 <main@@Base+0x9c04>
   1f4f0:	mov	r8, r1
   1f4f4:	b	1fac0 <main@@Base+0x9c24>
   1f4f8:	mov	r0, sl
   1f4fc:	mov	r1, r6
   1f500:	b	1f984 <main@@Base+0x9ae8>
   1f504:	bne	1f514 <main@@Base+0x9678>
   1f508:	ldrb	r0, [r8, #2]!
   1f50c:	cmp	r0, #32
   1f510:	bhi	1f524 <main@@Base+0x9688>
   1f514:	ldr	r0, [sp, #32]
   1f518:	ldr	r2, [sp, #36]	; 0x24
   1f51c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f520:	mov	r8, r0
   1f524:	ldr	r5, [sp, #36]	; 0x24
   1f528:	cmp	r8, r5
   1f52c:	beq	1f540 <main@@Base+0x96a4>
   1f530:	ldrb	r0, [r8]
   1f534:	cmp	r0, #93	; 0x5d
   1f538:	beq	1f9b0 <main@@Base+0x9b14>
   1f53c:	mov	r5, r8
   1f540:	mov	r0, #0
   1f544:	mov	r1, #1
   1f548:	strb	r0, [sp, #60]	; 0x3c
   1f54c:	ldr	r0, [sp, #32]
   1f550:	ldr	r0, [r0]
   1f554:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1f558:	cmp	r0, #0
   1f55c:	beq	1fcb0 <main@@Base+0x9e14>
   1f560:	mov	r7, r0
   1f564:	mov	r8, r5
   1f568:	ldr	r4, [sp, #36]	; 0x24
   1f56c:	mov	r5, #0
   1f570:	str	r5, [fp, #-52]	; 0xffffffcc
   1f574:	str	r5, [fp, #-56]	; 0xffffffc8
   1f578:	strb	r5, [sp, #60]	; 0x3c
   1f57c:	str	r5, [sp, #48]	; 0x30
   1f580:	cmp	r8, r4
   1f584:	beq	1f5cc <main@@Base+0x9730>
   1f588:	sub	r0, fp, #56	; 0x38
   1f58c:	mov	r1, r8
   1f590:	mov	r2, r4
   1f594:	add	r3, sp, #48	; 0x30
   1f598:	str	r0, [sp]
   1f59c:	ldr	r0, [sp, #32]
   1f5a0:	bl	363e0 <flatcc_json_parser_integer@@Base>
   1f5a4:	cmp	r0, r8
   1f5a8:	beq	1f5d4 <main@@Base+0x9738>
   1f5ac:	mov	r1, r0
   1f5b0:	ldr	r0, [sp, #48]	; 0x30
   1f5b4:	cmp	r0, #0
   1f5b8:	beq	1f5dc <main@@Base+0x9740>
   1f5bc:	ldr	r6, [sp, #32]
   1f5c0:	ldr	r4, [sp, #36]	; 0x24
   1f5c4:	mov	r3, #8
   1f5c8:	b	1f5fc <main@@Base+0x9760>
   1f5cc:	mov	r1, r4
   1f5d0:	b	1f628 <main@@Base+0x978c>
   1f5d4:	mov	r1, r8
   1f5d8:	b	1f624 <main@@Base+0x9788>
   1f5dc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f5e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f5e4:	subs	r3, r0, #256	; 0x100
   1f5e8:	sbcs	r2, r2, #0
   1f5ec:	bcc	1f61c <main@@Base+0x9780>
   1f5f0:	ldr	r6, [sp, #32]
   1f5f4:	ldr	r4, [sp, #36]	; 0x24
   1f5f8:	mov	r3, #7
   1f5fc:	mov	r0, r6
   1f600:	mov	r2, r4
   1f604:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1f608:	mov	r1, r0
   1f60c:	cmp	r8, r1
   1f610:	bne	1f678 <main@@Base+0x97dc>
   1f614:	b	1f634 <main@@Base+0x9798>
   1f618:	andeq	sp, r3, r4, lsr fp
   1f61c:	mov	r5, r0
   1f620:	strb	r0, [sp, #60]	; 0x3c
   1f624:	ldr	r4, [sp, #36]	; 0x24
   1f628:	ldr	r6, [sp, #32]
   1f62c:	cmp	r8, r1
   1f630:	bne	1f678 <main@@Base+0x97dc>
   1f634:	add	r0, sp, #60	; 0x3c
   1f638:	mov	r1, r8
   1f63c:	mov	r2, r4
   1f640:	str	r0, [sp]
   1f644:	mov	r0, r6
   1f648:	ldr	r3, [pc, #1648]	; 1fcc0 <main@@Base+0x9e24>
   1f64c:	add	r3, pc, r3
   1f650:	bl	21df0 <main@@Base+0xbf54>
   1f654:	mov	r1, r0
   1f658:	cmp	r0, r8
   1f65c:	beq	1fca8 <main@@Base+0x9e0c>
   1f660:	ldr	r0, [sp, #36]	; 0x24
   1f664:	cmp	r1, r0
   1f668:	beq	1fca8 <main@@Base+0x9e0c>
   1f66c:	ldrb	r5, [sp, #60]	; 0x3c
   1f670:	ldr	r4, [sp, #36]	; 0x24
   1f674:	ldr	r6, [sp, #32]
   1f678:	sub	r0, r4, r1
   1f67c:	strb	r5, [r7]
   1f680:	cmp	r0, #2
   1f684:	blt	1f6c4 <main@@Base+0x9828>
   1f688:	ldrb	r0, [r1]
   1f68c:	cmp	r0, #32
   1f690:	bls	1f6a8 <main@@Base+0x980c>
   1f694:	ldr	r4, [sp, #36]	; 0x24
   1f698:	mov	r8, r1
   1f69c:	cmp	r8, r4
   1f6a0:	bne	1f6dc <main@@Base+0x9840>
   1f6a4:	b	1f9a0 <main@@Base+0x9b04>
   1f6a8:	ldr	r4, [sp, #36]	; 0x24
   1f6ac:	ldr	r6, [sp, #32]
   1f6b0:	bne	1f6c4 <main@@Base+0x9828>
   1f6b4:	mov	r8, r1
   1f6b8:	ldrb	r0, [r8, #1]!
   1f6bc:	cmp	r0, #32
   1f6c0:	bhi	1f6d4 <main@@Base+0x9838>
   1f6c4:	mov	r0, r6
   1f6c8:	mov	r2, r4
   1f6cc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f6d0:	mov	r8, r0
   1f6d4:	cmp	r8, r4
   1f6d8:	beq	1f9a0 <main@@Base+0x9b04>
   1f6dc:	ldrb	r0, [r8]
   1f6e0:	cmp	r0, #44	; 0x2c
   1f6e4:	bne	1f9a8 <main@@Base+0x9b0c>
   1f6e8:	ldr	r4, [sp, #36]	; 0x24
   1f6ec:	add	r1, r8, #1
   1f6f0:	sub	r0, r4, r1
   1f6f4:	cmp	r0, #2
   1f6f8:	ldr	r0, [sp, #32]
   1f6fc:	blt	1f738 <main@@Base+0x989c>
   1f700:	ldrb	r0, [r1]
   1f704:	cmp	r0, #32
   1f708:	bls	1f720 <main@@Base+0x9884>
   1f70c:	ldr	r4, [sp, #36]	; 0x24
   1f710:	mov	r8, r1
   1f714:	cmp	r8, r4
   1f718:	bne	1f74c <main@@Base+0x98b0>
   1f71c:	b	1fa04 <main@@Base+0x9b68>
   1f720:	ldr	r4, [sp, #36]	; 0x24
   1f724:	ldr	r0, [sp, #32]
   1f728:	bne	1f738 <main@@Base+0x989c>
   1f72c:	ldrb	r2, [r8, #2]!
   1f730:	cmp	r2, #32
   1f734:	bhi	1f744 <main@@Base+0x98a8>
   1f738:	mov	r2, r4
   1f73c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f740:	mov	r8, r0
   1f744:	cmp	r8, r4
   1f748:	beq	1fa04 <main@@Base+0x9b68>
   1f74c:	ldrb	r0, [r8]
   1f750:	cmp	r0, #93	; 0x5d
   1f754:	beq	1f9b0 <main@@Base+0x9b14>
   1f758:	mov	r0, #0
   1f75c:	mov	r1, #1
   1f760:	strb	r0, [sp, #60]	; 0x3c
   1f764:	ldr	r0, [sp, #32]
   1f768:	ldr	r0, [r0]
   1f76c:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   1f770:	mov	r7, r0
   1f774:	cmp	r0, #0
   1f778:	bne	1f568 <main@@Base+0x96cc>
   1f77c:	b	1fc3c <main@@Base+0x9da0>
   1f780:	ldr	r6, [sp, #36]	; 0x24
   1f784:	ldr	sl, [sp, #32]
   1f788:	b	1b240 <main@@Base+0x53a4>
   1f78c:	ldr	r6, [sp, #36]	; 0x24
   1f790:	ldr	sl, [sp, #32]
   1f794:	bne	1f7a8 <main@@Base+0x990c>
   1f798:	ldrb	r0, [r2, #2]!
   1f79c:	cmp	r0, #32
   1f7a0:	mov	r8, r2
   1f7a4:	bhi	1b390 <main@@Base+0x54f4>
   1f7a8:	mov	r0, sl
   1f7ac:	mov	r2, r6
   1f7b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f7b4:	b	1b38c <main@@Base+0x54f0>
   1f7b8:	ldr	sl, [sp, #32]
   1f7bc:	ldr	r6, [sp, #36]	; 0x24
   1f7c0:	mov	r1, r2
   1f7c4:	mov	r0, sl
   1f7c8:	mov	r2, r6
   1f7cc:	mov	r3, #9
   1f7d0:	b	1bb0c <main@@Base+0x5c70>
   1f7d4:	ldr	r0, [sp, #32]
   1f7d8:	ldr	r2, [sp, #36]	; 0x24
   1f7dc:	mov	r1, r8
   1f7e0:	mov	r3, #9
   1f7e4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1f7e8:	b	1f914 <main@@Base+0x9a78>
   1f7ec:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1f7f0:	str	r5, [sp, #60]	; 0x3c
   1f7f4:	cmp	r8, r9
   1f7f8:	bne	1e8c4 <main@@Base+0x8a28>
   1f7fc:	b	1e88c <main@@Base+0x89f0>
   1f800:	ldr	sl, [sp, #32]
   1f804:	mov	r8, r6
   1f808:	b	1ddac <main@@Base+0x7f10>
   1f80c:	cmp	r0, #93	; 0x5d
   1f810:	bne	1fafc <main@@Base+0x9c60>
   1f814:	ldr	r0, [sp, #36]	; 0x24
   1f818:	add	r1, r8, #1
   1f81c:	sub	r0, r0, r1
   1f820:	cmp	r0, #2
   1f824:	blt	1fb38 <main@@Base+0x9c9c>
   1f828:	b	1f898 <main@@Base+0x99fc>
   1f82c:	mov	r0, sl
   1f830:	mov	r1, r6
   1f834:	mov	r2, r6
   1f838:	b	1fb08 <main@@Base+0x9c6c>
   1f83c:	ldr	r6, [sp, #36]	; 0x24
   1f840:	ldr	sl, [sp, #32]
   1f844:	bne	1f858 <main@@Base+0x99bc>
   1f848:	ldrb	r0, [r8, #2]!
   1f84c:	cmp	r0, #32
   1f850:	mov	r9, r8
   1f854:	bhi	1b448 <main@@Base+0x55ac>
   1f858:	mov	r0, sl
   1f85c:	mov	r2, r6
   1f860:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f864:	b	1b444 <main@@Base+0x55a8>
   1f868:	ldr	sl, [sp, #32]
   1f86c:	ldr	r6, [sp, #36]	; 0x24
   1f870:	mov	r1, r2
   1f874:	mov	r0, sl
   1f878:	mov	r2, r6
   1f87c:	mov	r3, #10
   1f880:	b	1b228 <main@@Base+0x538c>
   1f884:	andeq	sp, r3, r8, lsr #17
   1f888:	add	r1, r8, #1
   1f88c:	sub	r0, r6, r1
   1f890:	cmp	r0, #2
   1f894:	blt	1fb38 <main@@Base+0x9c9c>
   1f898:	ldrb	r0, [r1]
   1f89c:	cmp	r0, #32
   1f8a0:	bls	1fb28 <main@@Base+0x9c8c>
   1f8a4:	ldr	sl, [sp, #32]
   1f8a8:	mov	r8, r1
   1f8ac:	b	1ddac <main@@Base+0x7f10>
   1f8b0:	ldr	r6, [sp, #36]	; 0x24
   1f8b4:	ldr	sl, [sp, #32]
   1f8b8:	bne	1f8cc <main@@Base+0x9a30>
   1f8bc:	ldrb	r0, [r2, #2]!
   1f8c0:	cmp	r0, #32
   1f8c4:	mov	r8, r2
   1f8c8:	bhi	1bb14 <main@@Base+0x5c78>
   1f8cc:	mov	r0, sl
   1f8d0:	mov	r2, r6
   1f8d4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f8d8:	b	1bb10 <main@@Base+0x5c74>
   1f8dc:	ldr	sl, [sp, #32]
   1f8e0:	ldr	r6, [sp, #36]	; 0x24
   1f8e4:	mov	r1, r2
   1f8e8:	mov	r0, sl
   1f8ec:	mov	r2, r6
   1f8f0:	mov	r3, #9
   1f8f4:	b	1cba4 <main@@Base+0x6d08>
   1f8f8:	bne	1f908 <main@@Base+0x9a6c>
   1f8fc:	ldrb	r0, [r8, #2]!
   1f900:	cmp	r0, #32
   1f904:	bhi	1f918 <main@@Base+0x9a7c>
   1f908:	ldr	r0, [sp, #32]
   1f90c:	ldr	r2, [sp, #36]	; 0x24
   1f910:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1f914:	mov	r8, r0
   1f918:	ldr	r6, [sp, #36]	; 0x24
   1f91c:	ldr	sl, [sp, #32]
   1f920:	b	1c828 <main@@Base+0x698c>
   1f924:	ldr	r0, [sp, #32]
   1f928:	ldr	r2, [sp, #36]	; 0x24
   1f92c:	mov	r1, r8
   1f930:	mov	r3, #9
   1f934:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1f938:	b	1fabc <main@@Base+0x9c20>
   1f93c:	mov	r8, r4
   1f940:	b	1c718 <main@@Base+0x687c>
   1f944:	cmp	r0, #125	; 0x7d
   1f948:	bne	1fb14 <main@@Base+0x9c78>
   1f94c:	ldr	r0, [sp, #36]	; 0x24
   1f950:	add	r1, r2, #1
   1f954:	sub	r0, r0, r1
   1f958:	cmp	r0, #2
   1f95c:	blt	1fb78 <main@@Base+0x9cdc>
   1f960:	ldrb	r0, [r1]
   1f964:	cmp	r0, #32
   1f968:	bls	1fb64 <main@@Base+0x9cc8>
   1f96c:	mov	r8, r1
   1f970:	b	1c718 <main@@Base+0x687c>
   1f974:	ldr	sl, [sp, #32]
   1f978:	ldr	r6, [sp, #36]	; 0x24
   1f97c:	mov	r1, r3
   1f980:	mov	r0, sl
   1f984:	mov	r2, r6
   1f988:	mov	r3, #10
   1f98c:	b	1b99c <main@@Base+0x5b00>
   1f990:	mov	r0, sl
   1f994:	mov	r1, r4
   1f998:	mov	r2, r4
   1f99c:	b	1fb20 <main@@Base+0x9c84>
   1f9a0:	ldr	r8, [sp, #36]	; 0x24
   1f9a4:	b	1fa34 <main@@Base+0x9b98>
   1f9a8:	cmp	r0, #93	; 0x5d
   1f9ac:	bne	1fb50 <main@@Base+0x9cb4>
   1f9b0:	ldr	r0, [sp, #36]	; 0x24
   1f9b4:	add	r1, r8, #1
   1f9b8:	sub	r0, r0, r1
   1f9bc:	cmp	r0, #2
   1f9c0:	blt	1fa24 <main@@Base+0x9b88>
   1f9c4:	ldrb	r0, [r1]
   1f9c8:	cmp	r0, #32
   1f9cc:	bls	1fa14 <main@@Base+0x9b78>
   1f9d0:	mov	r8, r1
   1f9d4:	b	1fa34 <main@@Base+0x9b98>
   1f9d8:	ldr	r6, [sp, #36]	; 0x24
   1f9dc:	ldr	sl, [sp, #32]
   1f9e0:	bne	1f9f4 <main@@Base+0x9b58>
   1f9e4:	ldrb	r0, [r2, #2]!
   1f9e8:	cmp	r0, #32
   1f9ec:	mov	r8, r2
   1f9f0:	bhi	1b230 <main@@Base+0x5394>
   1f9f4:	mov	r0, sl
   1f9f8:	mov	r2, r6
   1f9fc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fa00:	b	1b22c <main@@Base+0x5390>
   1fa04:	ldr	r1, [sp, #36]	; 0x24
   1fa08:	ldr	r0, [sp, #32]
   1fa0c:	mov	r2, r1
   1fa10:	b	1fb5c <main@@Base+0x9cc0>
   1fa14:	bne	1fa24 <main@@Base+0x9b88>
   1fa18:	ldrb	r0, [r8, #2]!
   1fa1c:	cmp	r0, #32
   1fa20:	bhi	1fa34 <main@@Base+0x9b98>
   1fa24:	ldr	r0, [sp, #32]
   1fa28:	ldr	r2, [sp, #36]	; 0x24
   1fa2c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fa30:	mov	r8, r0
   1fa34:	ldr	sl, [sp, #32]
   1fa38:	ldr	r0, [sl]
   1fa3c:	bl	300b4 <flatcc_builder_end_vector@@Base>
   1fa40:	ldr	r6, [sp, #36]	; 0x24
   1fa44:	cmp	r0, #0
   1fa48:	str	r0, [sp, #44]	; 0x2c
   1fa4c:	beq	16888 <main@@Base+0x9ec>
   1fa50:	ldr	r0, [sl]
   1fa54:	mov	r1, #13
   1fa58:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   1fa5c:	cmp	r0, #0
   1fa60:	beq	16888 <main@@Base+0x9ec>
   1fa64:	ldr	r1, [sp, #44]	; 0x2c
   1fa68:	mov	r9, r8
   1fa6c:	str	r1, [r0]
   1fa70:	b	1e9c8 <main@@Base+0x8b2c>
   1fa74:	ldr	r6, [sp, #36]	; 0x24
   1fa78:	ldr	sl, [sp, #32]
   1fa7c:	bne	1fa90 <main@@Base+0x9bf4>
   1fa80:	ldrb	r0, [r2, #2]!
   1fa84:	cmp	r0, #32
   1fa88:	mov	r8, r2
   1fa8c:	bhi	1cbac <main@@Base+0x6d10>
   1fa90:	mov	r0, sl
   1fa94:	mov	r2, r6
   1fa98:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fa9c:	b	1cba8 <main@@Base+0x6d0c>
   1faa0:	bne	1fab0 <main@@Base+0x9c14>
   1faa4:	ldrb	r0, [r8, #2]!
   1faa8:	cmp	r0, #32
   1faac:	bhi	1fac0 <main@@Base+0x9c24>
   1fab0:	ldr	r0, [sp, #32]
   1fab4:	ldr	r2, [sp, #36]	; 0x24
   1fab8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fabc:	mov	r8, r0
   1fac0:	ldr	r6, [sp, #36]	; 0x24
   1fac4:	ldr	sl, [sp, #32]
   1fac8:	b	1d04c <main@@Base+0x71b0>
   1facc:	andeq	sp, r3, r4, ror r6
   1fad0:	ldr	r6, [sp, #36]	; 0x24
   1fad4:	ldr	sl, [sp, #32]
   1fad8:	bne	1faec <main@@Base+0x9c50>
   1fadc:	ldrb	r0, [r3, #2]!
   1fae0:	cmp	r0, #32
   1fae4:	mov	r8, r3
   1fae8:	bhi	1b9a4 <main@@Base+0x5b08>
   1faec:	mov	r0, sl
   1faf0:	mov	r2, r6
   1faf4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1faf8:	b	1b9a0 <main@@Base+0x5b04>
   1fafc:	ldr	r0, [sp, #32]
   1fb00:	ldr	r2, [sp, #36]	; 0x24
   1fb04:	mov	r1, r8
   1fb08:	mov	r3, #9
   1fb0c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1fb10:	b	1fb44 <main@@Base+0x9ca8>
   1fb14:	mov	r1, r2
   1fb18:	ldr	r0, [sp, #32]
   1fb1c:	ldr	r2, [sp, #36]	; 0x24
   1fb20:	mov	r3, #10
   1fb24:	b	1c710 <main@@Base+0x6874>
   1fb28:	bne	1fb38 <main@@Base+0x9c9c>
   1fb2c:	ldrb	r0, [r8, #2]!
   1fb30:	cmp	r0, #32
   1fb34:	bhi	1fb48 <main@@Base+0x9cac>
   1fb38:	ldr	r0, [sp, #32]
   1fb3c:	ldr	r2, [sp, #36]	; 0x24
   1fb40:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fb44:	mov	r8, r0
   1fb48:	ldr	sl, [sp, #32]
   1fb4c:	b	1ddac <main@@Base+0x7f10>
   1fb50:	ldr	r0, [sp, #32]
   1fb54:	ldr	r2, [sp, #36]	; 0x24
   1fb58:	mov	r1, r8
   1fb5c:	mov	r3, #9
   1fb60:	b	1d15c <main@@Base+0x72c0>
   1fb64:	bne	1fb78 <main@@Base+0x9cdc>
   1fb68:	ldrb	r0, [r2, #2]!
   1fb6c:	cmp	r0, #32
   1fb70:	mov	r8, r2
   1fb74:	bhi	1c718 <main@@Base+0x687c>
   1fb78:	ldr	r0, [sp, #32]
   1fb7c:	ldr	r2, [sp, #36]	; 0x24
   1fb80:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fb84:	b	1c714 <main@@Base+0x6878>
   1fb88:	ldr	r4, [sp, #28]
   1fb8c:	mov	r8, r6
   1fb90:	b	1fc30 <main@@Base+0x9d94>
   1fb94:	cmp	r0, #125	; 0x7d
   1fb98:	bne	1fc18 <main@@Base+0x9d7c>
   1fb9c:	add	r8, r2, #1
   1fba0:	sub	r0, r6, r8
   1fba4:	cmp	r0, #2
   1fba8:	blt	1fbd0 <main@@Base+0x9d34>
   1fbac:	ldrb	r0, [r8]
   1fbb0:	cmp	r0, #32
   1fbb4:	bhi	1fc30 <main@@Base+0x9d94>
   1fbb8:	bne	1fbd0 <main@@Base+0x9d34>
   1fbbc:	ldrb	r0, [r2, #2]!
   1fbc0:	cmp	r0, #32
   1fbc4:	bls	1fbd0 <main@@Base+0x9d34>
   1fbc8:	mov	r8, r2
   1fbcc:	b	1fc30 <main@@Base+0x9d94>
   1fbd0:	mov	r0, sl
   1fbd4:	mov	r1, r8
   1fbd8:	mov	r2, r6
   1fbdc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fbe0:	b	1fc2c <main@@Base+0x9d90>
   1fbe4:	mov	r0, sl
   1fbe8:	mov	r1, r6
   1fbec:	b	1fc20 <main@@Base+0x9d84>
   1fbf0:	mov	r8, r9
   1fbf4:	b	16888 <main@@Base+0x9ec>
   1fbf8:	bne	1fc08 <main@@Base+0x9d6c>
   1fbfc:	ldrb	r0, [r8, #2]!
   1fc00:	cmp	r0, #32
   1fc04:	bhi	16928 <main@@Base+0xa8c>
   1fc08:	mov	r0, sl
   1fc0c:	mov	r2, r6
   1fc10:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   1fc14:	b	16924 <main@@Base+0xa88>
   1fc18:	mov	r0, sl
   1fc1c:	mov	r1, r2
   1fc20:	mov	r2, r6
   1fc24:	mov	r3, #10
   1fc28:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   1fc2c:	mov	r8, r0
   1fc30:	ldr	r0, [sp, #24]
   1fc34:	b	1692c <main@@Base+0xa90>
   1fc38:	mov	r8, r9
   1fc3c:	ldr	r6, [sp, #36]	; 0x24
   1fc40:	ldr	sl, [sp, #32]
   1fc44:	b	16888 <main@@Base+0x9ec>
   1fc48:	ldr	sl, [sp, #32]
   1fc4c:	mov	r8, r9
   1fc50:	b	16888 <main@@Base+0x9ec>
   1fc54:	mov	r9, r1
   1fc58:	mov	r8, r1
   1fc5c:	b	16888 <main@@Base+0x9ec>
   1fc60:	mov	r9, r5
   1fc64:	mov	r8, r5
   1fc68:	b	16888 <main@@Base+0x9ec>
   1fc6c:	ldr	r6, [sp, #36]	; 0x24
   1fc70:	b	16888 <main@@Base+0x9ec>
   1fc74:	mov	r8, r7
   1fc78:	b	16888 <main@@Base+0x9ec>
   1fc7c:	ldr	sl, [sp, #32]
   1fc80:	b	16888 <main@@Base+0x9ec>
   1fc84:	mov	r8, r6
   1fc88:	b	1fc3c <main@@Base+0x9da0>
   1fc8c:	ldr	sl, [sp, #32]
   1fc90:	mov	r8, r1
   1fc94:	b	16888 <main@@Base+0x9ec>
   1fc98:	ldr	r6, [sp, #36]	; 0x24
   1fc9c:	ldr	sl, [sp, #32]
   1fca0:	mov	r8, r7
   1fca4:	b	16888 <main@@Base+0x9ec>
   1fca8:	mov	r8, r1
   1fcac:	b	1fc3c <main@@Base+0x9da0>
   1fcb0:	mov	r8, r5
   1fcb4:	b	1fc3c <main@@Base+0x9da0>
   1fcb8:	andeq	sp, r3, r0, asr #5
   1fcbc:	andeq	sp, r3, r8, lsr #2
   1fcc0:	andeq	ip, r3, r4, lsr #22
   1fcc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcc8:	add	fp, sp, #28
   1fccc:	sub	sp, sp, #20
   1fcd0:	mov	r5, r0
   1fcd4:	ldr	r0, [pc, #1268]	; 201d0 <main@@Base+0xa334>
   1fcd8:	mov	r4, r1
   1fcdc:	mov	r1, #3
   1fce0:	mov	r2, #0
   1fce4:	mov	r8, #0
   1fce8:	str	r1, [sp]
   1fcec:	mov	r1, r4
   1fcf0:	add	r0, pc, r0
   1fcf4:	str	r0, [sp, #4]
   1fcf8:	mov	r0, r5
   1fcfc:	ldr	r3, [pc, #1232]	; 201d4 <main@@Base+0xa338>
   1fd00:	add	r3, pc, r3
   1fd04:	bl	43e0c <flatcc_json_printer_struct_field@@Base>
   1fd08:	mov	r0, #150	; 0x96
   1fd0c:	mov	r1, #4
   1fd10:	mov	r2, #1
   1fd14:	mov	r6, #4
   1fd18:	str	r1, [sp]
   1fd1c:	str	r0, [sp, #4]
   1fd20:	mov	r0, r5
   1fd24:	mov	r1, r4
   1fd28:	ldr	r3, [pc, #1192]	; 201d8 <main@@Base+0xa33c>
   1fd2c:	add	r3, pc, r3
   1fd30:	bl	3ae68 <flatcc_json_printer_int16_field@@Base>
   1fd34:	mov	r0, #100	; 0x64
   1fd38:	mov	r1, #2
   1fd3c:	mov	r2, #2
   1fd40:	str	r1, [sp]
   1fd44:	str	r0, [sp, #4]
   1fd48:	mov	r0, r5
   1fd4c:	mov	r1, r4
   1fd50:	ldr	r3, [pc, #1156]	; 201dc <main@@Base+0xa340>
   1fd54:	add	r3, pc, r3
   1fd58:	bl	3ae68 <flatcc_json_printer_int16_field@@Base>
   1fd5c:	str	r6, [sp]
   1fd60:	mov	r0, r5
   1fd64:	mov	r1, r4
   1fd68:	mov	r2, #3
   1fd6c:	ldr	r3, [pc, #1132]	; 201e0 <main@@Base+0xa344>
   1fd70:	add	r3, pc, r3
   1fd74:	bl	3a4a0 <flatcc_json_printer_string_field@@Base>
   1fd78:	mov	r0, #9
   1fd7c:	mov	r1, r4
   1fd80:	mov	r2, #5
   1fd84:	mov	r7, #5
   1fd88:	str	r0, [sp]
   1fd8c:	mov	r0, r5
   1fd90:	ldr	r3, [pc, #1100]	; 201e4 <main@@Base+0xa348>
   1fd94:	add	r3, pc, r3
   1fd98:	bl	3cf20 <flatcc_json_printer_uint8_vector_field@@Base>
   1fd9c:	ldr	r0, [pc, #1092]	; 201e8 <main@@Base+0xa34c>
   1fda0:	mov	r1, #8
   1fda4:	str	r7, [sp]
   1fda8:	mov	r2, #6
   1fdac:	mov	r7, #5
   1fdb0:	str	r1, [sp, #4]
   1fdb4:	mov	r1, r4
   1fdb8:	add	r0, pc, r0
   1fdbc:	str	r0, [sp, #8]
   1fdc0:	mov	r0, r5
   1fdc4:	ldr	r3, [pc, #1056]	; 201ec <main@@Base+0xa350>
   1fdc8:	add	r3, pc, r3
   1fdcc:	bl	3b800 <flatcc_json_printer_int8_enum_field@@Base>
   1fdd0:	ldr	r0, [pc, #1048]	; 201f0 <main@@Base+0xa354>
   1fdd4:	ldr	r1, [pc, #1048]	; 201f4 <main@@Base+0xa358>
   1fdd8:	str	r6, [sp]
   1fddc:	mov	r2, #8
   1fde0:	add	r0, pc, r0
   1fde4:	add	r1, pc, r1
   1fde8:	str	r1, [sp, #4]
   1fdec:	str	r0, [sp, #8]
   1fdf0:	mov	r0, r5
   1fdf4:	mov	r1, r4
   1fdf8:	ldr	r3, [pc, #1016]	; 201f8 <main@@Base+0xa35c>
   1fdfc:	add	r3, pc, r3
   1fe00:	bl	43508 <flatcc_json_printer_union_field@@Base>
   1fe04:	ldr	r0, [pc, #1008]	; 201fc <main@@Base+0xa360>
   1fe08:	str	r7, [sp]
   1fe0c:	str	r6, [sp, #4]
   1fe10:	mov	r1, r4
   1fe14:	mov	r2, #9
   1fe18:	mov	sl, #5
   1fe1c:	add	r0, pc, r0
   1fe20:	str	r0, [sp, #8]
   1fe24:	mov	r0, r5
   1fe28:	ldr	r3, [pc, #976]	; 20200 <main@@Base+0xa364>
   1fe2c:	add	r3, pc, r3
   1fe30:	bl	42160 <flatcc_json_printer_struct_vector_field@@Base>
   1fe34:	mov	r7, #17
   1fe38:	mov	r0, r5
   1fe3c:	mov	r1, r4
   1fe40:	mov	r2, #10
   1fe44:	str	r7, [sp]
   1fe48:	ldr	r3, [pc, #948]	; 20204 <main@@Base+0xa368>
   1fe4c:	add	r3, pc, r3
   1fe50:	bl	426fc <flatcc_json_printer_string_vector_field@@Base>
   1fe54:	ldr	r9, [pc, #940]	; 20208 <main@@Base+0xa36c>
   1fe58:	mov	r0, r5
   1fe5c:	mov	r1, r4
   1fe60:	mov	r2, #11
   1fe64:	add	r9, pc, r9
   1fe68:	stm	sp, {r7, r9}
   1fe6c:	ldr	r3, [pc, #920]	; 2020c <main@@Base+0xa370>
   1fe70:	add	r3, pc, r3
   1fe74:	bl	42ab4 <flatcc_json_printer_table_vector_field@@Base>
   1fe78:	str	sl, [sp]
   1fe7c:	str	r9, [sp, #4]
   1fe80:	mov	r0, r5
   1fe84:	mov	r1, r4
   1fe88:	mov	r2, #12
   1fe8c:	mov	sl, #5
   1fe90:	ldr	r3, [pc, #888]	; 20210 <main@@Base+0xa374>
   1fe94:	add	r3, pc, r3
   1fe98:	bl	43320 <flatcc_json_printer_table_field@@Base>
   1fe9c:	mov	r0, #20
   1fea0:	mov	r1, r4
   1fea4:	mov	r2, #13
   1fea8:	stm	sp, {r0, r8, r9}
   1feac:	mov	r0, r5
   1feb0:	ldr	r3, [pc, #860]	; 20214 <main@@Base+0xa378>
   1feb4:	add	r3, pc, r3
   1feb8:	bl	446b0 <flatcc_json_printer_table_as_nested_root@@Base>
   1febc:	ldr	r0, [pc, #852]	; 20218 <main@@Base+0xa37c>
   1fec0:	mov	r1, #9
   1fec4:	mov	r2, #14
   1fec8:	str	r1, [sp]
   1fecc:	mov	r1, r4
   1fed0:	add	r0, pc, r0
   1fed4:	str	r0, [sp, #4]
   1fed8:	mov	r0, r5
   1fedc:	ldr	r3, [pc, #824]	; 2021c <main@@Base+0xa380>
   1fee0:	add	r3, pc, r3
   1fee4:	bl	43320 <flatcc_json_printer_table_field@@Base>
   1fee8:	mov	r9, #8
   1feec:	mov	r0, #1
   1fef0:	mov	r1, r4
   1fef4:	mov	r2, #15
   1fef8:	str	r0, [sp, #4]
   1fefc:	str	r9, [sp]
   1ff00:	mov	r0, r5
   1ff04:	ldr	r3, [pc, #788]	; 20220 <main@@Base+0xa384>
   1ff08:	add	r3, pc, r3
   1ff0c:	bl	3b118 <flatcc_json_printer_bool_field@@Base>
   1ff10:	mov	r6, #16
   1ff14:	mov	r0, r5
   1ff18:	mov	r1, r4
   1ff1c:	mov	r2, #16
   1ff20:	stm	sp, {r6, r8}
   1ff24:	ldr	r3, [pc, #760]	; 20224 <main@@Base+0xa388>
   1ff28:	add	r3, pc, r3
   1ff2c:	bl	3af48 <flatcc_json_printer_int32_field@@Base>
   1ff30:	stm	sp, {r6, r8}
   1ff34:	mov	r0, r5
   1ff38:	mov	r1, r4
   1ff3c:	mov	r2, #17
   1ff40:	ldr	r3, [pc, #736]	; 20228 <main@@Base+0xa38c>
   1ff44:	add	r3, pc, r3
   1ff48:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   1ff4c:	str	r8, [sp, #8]
   1ff50:	str	r8, [sp, #12]
   1ff54:	str	r6, [sp]
   1ff58:	mov	r0, r5
   1ff5c:	mov	r1, r4
   1ff60:	mov	r2, #18
   1ff64:	ldr	r3, [pc, #704]	; 2022c <main@@Base+0xa390>
   1ff68:	add	r3, pc, r3
   1ff6c:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   1ff70:	str	r8, [sp, #8]
   1ff74:	str	r8, [sp, #12]
   1ff78:	str	r6, [sp]
   1ff7c:	mov	r0, r5
   1ff80:	mov	r1, r4
   1ff84:	mov	r2, #19
   1ff88:	ldr	r3, [pc, #672]	; 20230 <main@@Base+0xa394>
   1ff8c:	add	r3, pc, r3
   1ff90:	bl	3ac00 <flatcc_json_printer_uint64_field@@Base>
   1ff94:	stm	sp, {r7, r8}
   1ff98:	mov	r0, r5
   1ff9c:	mov	r1, r4
   1ffa0:	mov	r2, #20
   1ffa4:	ldr	r3, [pc, #648]	; 20234 <main@@Base+0xa398>
   1ffa8:	add	r3, pc, r3
   1ffac:	bl	3af48 <flatcc_json_printer_int32_field@@Base>
   1ffb0:	stm	sp, {r7, r8}
   1ffb4:	mov	r0, r5
   1ffb8:	mov	r1, r4
   1ffbc:	mov	r2, #21
   1ffc0:	ldr	r3, [pc, #624]	; 20238 <main@@Base+0xa39c>
   1ffc4:	add	r3, pc, r3
   1ffc8:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   1ffcc:	str	r8, [sp, #8]
   1ffd0:	str	r8, [sp, #12]
   1ffd4:	str	r7, [sp]
   1ffd8:	mov	r0, r5
   1ffdc:	mov	r1, r4
   1ffe0:	mov	r2, #22
   1ffe4:	ldr	r3, [pc, #592]	; 2023c <main@@Base+0xa3a0>
   1ffe8:	add	r3, pc, r3
   1ffec:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   1fff0:	str	r8, [sp, #8]
   1fff4:	str	r8, [sp, #12]
   1fff8:	str	r7, [sp]
   1fffc:	mov	r0, r5
   20000:	mov	r1, r4
   20004:	mov	r2, #23
   20008:	mov	r8, #23
   2000c:	ldr	r3, [pc, #556]	; 20240 <main@@Base+0xa3a4>
   20010:	add	r3, pc, r3
   20014:	bl	3ac00 <flatcc_json_printer_uint64_field@@Base>
   20018:	str	r6, [sp]
   2001c:	mov	r0, r5
   20020:	mov	r1, r4
   20024:	mov	r2, #24
   20028:	ldr	r3, [pc, #532]	; 20244 <main@@Base+0xa3a8>
   2002c:	add	r3, pc, r3
   20030:	bl	3f060 <flatcc_json_printer_bool_vector_field@@Base>
   20034:	str	sl, [sp]
   20038:	vldr	s0, [pc, #392]	; 201c8 <main@@Base+0xa32c>
   2003c:	mov	r0, r5
   20040:	mov	r1, r4
   20044:	mov	r2, #25
   20048:	ldr	r3, [pc, #504]	; 20248 <main@@Base+0xa3ac>
   2004c:	add	r3, pc, r3
   20050:	bl	3b20c <flatcc_json_printer_float_field@@Base>
   20054:	mov	r6, #6
   20058:	vmov.f32	s0, #8	; 0x40400000  3.0
   2005c:	mov	r0, r5
   20060:	mov	r1, r4
   20064:	mov	r2, #26
   20068:	str	r6, [sp]
   2006c:	ldr	r3, [pc, #472]	; 2024c <main@@Base+0xa3b0>
   20070:	add	r3, pc, r3
   20074:	bl	3b20c <flatcc_json_printer_float_field@@Base>
   20078:	str	r6, [sp]
   2007c:	vldr	s0, [pc, #328]	; 201cc <main@@Base+0xa330>
   20080:	mov	r0, r5
   20084:	mov	r1, r4
   20088:	mov	r2, #27
   2008c:	ldr	r3, [pc, #444]	; 20250 <main@@Base+0xa3b4>
   20090:	add	r3, pc, r3
   20094:	bl	3b20c <flatcc_json_printer_float_field@@Base>
   20098:	mov	r0, #18
   2009c:	mov	r1, r4
   200a0:	mov	r2, #28
   200a4:	str	r0, [sp]
   200a8:	mov	r0, r5
   200ac:	ldr	r3, [pc, #416]	; 20254 <main@@Base+0xa3b8>
   200b0:	add	r3, pc, r3
   200b4:	bl	426fc <flatcc_json_printer_string_vector_field@@Base>
   200b8:	ldr	r0, [pc, #408]	; 20258 <main@@Base+0xa3bc>
   200bc:	stm	sp, {r8, r9}
   200c0:	mov	r1, r4
   200c4:	mov	r2, #29
   200c8:	add	r0, pc, r0
   200cc:	str	r0, [sp, #8]
   200d0:	mov	r0, r5
   200d4:	ldr	r3, [pc, #384]	; 2025c <main@@Base+0xa3c0>
   200d8:	add	r3, pc, r3
   200dc:	bl	42160 <flatcc_json_printer_struct_vector_field@@Base>
   200e0:	mov	r6, #4
   200e4:	mov	r0, r5
   200e8:	mov	r1, r4
   200ec:	mov	r2, #30
   200f0:	str	r6, [sp]
   200f4:	ldr	r3, [pc, #356]	; 20260 <main@@Base+0xa3c4>
   200f8:	add	r3, pc, r3
   200fc:	bl	3cf20 <flatcc_json_printer_uint8_vector_field@@Base>
   20100:	str	sl, [sp]
   20104:	str	r6, [sp, #4]
   20108:	mov	r1, r4
   2010c:	mov	r2, #31
   20110:	ldr	r0, [pc, #332]	; 20264 <main@@Base+0xa3c8>
   20114:	add	r0, pc, r0
   20118:	str	r0, [sp, #8]
   2011c:	mov	r0, r5
   20120:	ldr	r3, [pc, #320]	; 20268 <main@@Base+0xa3cc>
   20124:	add	r3, pc, r3
   20128:	bl	42160 <flatcc_json_printer_struct_vector_field@@Base>
   2012c:	mov	r0, #15
   20130:	mov	r1, r4
   20134:	mov	r2, #32
   20138:	str	r0, [sp]
   2013c:	mov	r0, r5
   20140:	ldr	r3, [pc, #292]	; 2026c <main@@Base+0xa3d0>
   20144:	add	r3, pc, r3
   20148:	bl	3ec68 <flatcc_json_printer_int64_vector_field@@Base>
   2014c:	str	r7, [sp]
   20150:	mov	r0, r5
   20154:	mov	r1, r4
   20158:	mov	r2, #33	; 0x21
   2015c:	ldr	r3, [pc, #268]	; 20270 <main@@Base+0xa3d4>
   20160:	add	r3, pc, r3
   20164:	bl	3f848 <flatcc_json_printer_double_vector_field@@Base>
   20168:	ldr	r0, [pc, #260]	; 20274 <main@@Base+0xa3d8>
   2016c:	mov	r1, #21
   20170:	mov	r2, #34	; 0x22
   20174:	str	r1, [sp]
   20178:	mov	r1, r4
   2017c:	add	r0, pc, r0
   20180:	str	r0, [sp, #4]
   20184:	mov	r0, r5
   20188:	ldr	r3, [pc, #232]	; 20278 <main@@Base+0xa3dc>
   2018c:	add	r3, pc, r3
   20190:	bl	43320 <flatcc_json_printer_table_field@@Base>
   20194:	ldr	r0, [pc, #224]	; 2027c <main@@Base+0xa3e0>
   20198:	mov	r1, #10
   2019c:	mov	r2, #35	; 0x23
   201a0:	str	r1, [sp]
   201a4:	mov	r1, r4
   201a8:	add	r0, pc, r0
   201ac:	str	r0, [sp, #4]
   201b0:	mov	r0, r5
   201b4:	ldr	r3, [pc, #196]	; 20280 <main@@Base+0xa3e4>
   201b8:	add	r3, pc, r3
   201bc:	bl	43320 <flatcc_json_printer_table_field@@Base>
   201c0:	sub	sp, fp, #28
   201c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201c8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   201cc:	andeq	r0, r0, r0
   201d0:	andeq	fp, r0, r4, asr #30
   201d4:	andeq	r8, r2, lr, lsr #10
   201d8:	andeq	r8, r2, r6, lsl #10
   201dc:	andeq	r8, r2, r3, ror #9
   201e0:	andeq	r8, r2, sl, asr #9
   201e4:	andeq	r8, r2, fp, lsr #9
   201e8:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   201ec:	andeq	r8, r2, r1, lsl #9
   201f0:	andeq	ip, r0, r0, ror #1
   201f4:	andeq	ip, r0, r0, asr r0
   201f8:	andeq	r8, r2, r5, asr #11
   201fc:	andeq	ip, r0, r0, lsl r1
   20200:	andeq	r8, r2, r3, lsr #8
   20204:	andeq	r8, r2, r9, lsl #8
   20208:			; <UNDEFINED> instruction: 0xfffffe58
   2020c:	strdeq	r8, [r2], -r7
   20210:	andeq	r8, r2, r5, ror #7
   20214:	andeq	r8, r2, fp, asr #7
   20218:	andeq	ip, r0, r4, asr #1
   2021c:			; <UNDEFINED> instruction: 0x000283b4
   20220:	muleq	r2, r6, r3
   20224:	andeq	r8, r2, pc, ror r3
   20228:	andeq	r8, r2, r4, ror r3
   2022c:	andeq	r8, r2, r1, ror #6
   20230:	andeq	r8, r2, lr, asr #6
   20234:	andeq	r8, r2, r3, asr #6
   20238:	andeq	r8, r2, r9, lsr r3
   2023c:	andeq	r8, r2, r7, lsr #6
   20240:	andeq	r8, r2, r1, lsl r3
   20244:	andeq	r8, r2, r7, lsl #6
   20248:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   2024c:	ldrdeq	r8, [r2], -sl
   20250:	andeq	r8, r2, r1, asr #5
   20254:	andeq	r8, r2, r8, lsr #5
   20258:	andeq	fp, r0, ip, asr pc
   2025c:	muleq	r2, r3, r2
   20260:	andeq	r8, r2, fp, lsl #5
   20264:	andeq	fp, r0, r8, lsl lr
   20268:	andeq	r8, r2, r4, ror #4
   2026c:	andeq	r8, r2, sl, asr #4
   20270:	andeq	r8, r2, lr, lsr r2
   20274:	andeq	fp, r0, ip, lsl pc
   20278:	andeq	r8, r2, r4, lsr #4
   2027c:	strdeq	fp, [r0], -r4
   20280:	andeq	r8, r2, lr, lsl #4
   20284:	push	{r4, r5, r6, r7, fp, lr}
   20288:	add	fp, sp, #16
   2028c:	sub	sp, sp, #8
   20290:	mov	r1, #0
   20294:	mov	r2, #32
   20298:	mov	r3, #16
   2029c:	mov	r4, r0
   202a0:	bl	3215c <flatcc_verify_field@@Base>
   202a4:	cmp	r0, #0
   202a8:	bne	206b0 <main@@Base+0xa814>
   202ac:	mov	r0, r4
   202b0:	mov	r1, #2
   202b4:	mov	r2, #2
   202b8:	mov	r3, #2
   202bc:	bl	3215c <flatcc_verify_field@@Base>
   202c0:	cmp	r0, #0
   202c4:	bne	206b0 <main@@Base+0xa814>
   202c8:	mov	r0, r4
   202cc:	mov	r1, #1
   202d0:	mov	r2, #2
   202d4:	mov	r3, #2
   202d8:	bl	3215c <flatcc_verify_field@@Base>
   202dc:	cmp	r0, #0
   202e0:	bne	206b0 <main@@Base+0xa814>
   202e4:	mov	r0, r4
   202e8:	mov	r1, #3
   202ec:	mov	r2, #1
   202f0:	bl	321e0 <flatcc_verify_string_field@@Base>
   202f4:	cmp	r0, #0
   202f8:	bne	206b0 <main@@Base+0xa814>
   202fc:	mov	r0, r4
   20300:	mov	r1, #6
   20304:	mov	r2, #1
   20308:	mov	r3, #1
   2030c:	mov	r5, #1
   20310:	bl	3215c <flatcc_verify_field@@Base>
   20314:	cmp	r0, #0
   20318:	bne	206b0 <main@@Base+0xa814>
   2031c:	mvn	r0, #0
   20320:	mov	r1, #5
   20324:	mov	r2, #0
   20328:	mov	r3, #1
   2032c:	str	r5, [sp]
   20330:	str	r0, [sp, #4]
   20334:	mov	r0, r4
   20338:	bl	322c4 <flatcc_verify_vector_field@@Base>
   2033c:	cmp	r0, #0
   20340:	bne	206b0 <main@@Base+0xa814>
   20344:	ldr	r3, [pc, #908]	; 206d8 <main@@Base+0xa83c>
   20348:	mov	r0, r4
   2034c:	mov	r1, #11
   20350:	mov	r2, #0
   20354:	add	r3, pc, r3
   20358:	bl	326b4 <flatcc_verify_table_vector_field@@Base>
   2035c:	cmp	r0, #0
   20360:	bne	206b0 <main@@Base+0xa814>
   20364:	mov	r0, r4
   20368:	mov	r1, #10
   2036c:	mov	r2, #0
   20370:	bl	323bc <flatcc_verify_string_vector_field@@Base>
   20374:	cmp	r0, #0
   20378:	bne	206b0 <main@@Base+0xa814>
   2037c:	mov	r0, r4
   20380:	mov	r1, #28
   20384:	mov	r2, #0
   20388:	bl	323bc <flatcc_verify_string_vector_field@@Base>
   2038c:	cmp	r0, #0
   20390:	bne	206b0 <main@@Base+0xa814>
   20394:	mvn	r0, #0
   20398:	mov	r1, #1
   2039c:	mov	r2, #0
   203a0:	mov	r3, #1
   203a4:	str	r1, [sp]
   203a8:	str	r0, [sp, #4]
   203ac:	mov	r0, r4
   203b0:	mov	r1, #24
   203b4:	bl	322c4 <flatcc_verify_vector_field@@Base>
   203b8:	cmp	r0, #0
   203bc:	bne	206b0 <main@@Base+0xa814>
   203c0:	mvn	r0, #-536870912	; 0xe0000000
   203c4:	mov	r1, #4
   203c8:	mov	r2, #0
   203cc:	mov	r3, #8
   203d0:	str	r1, [sp]
   203d4:	str	r0, [sp, #4]
   203d8:	mov	r0, r4
   203dc:	mov	r1, #29
   203e0:	bl	322c4 <flatcc_verify_vector_field@@Base>
   203e4:	cmp	r0, #0
   203e8:	bne	206b0 <main@@Base+0xa814>
   203ec:	ldr	r5, [pc, #744]	; 206dc <main@@Base+0xa840>
   203f0:	mov	r0, r4
   203f4:	mov	r1, #12
   203f8:	mov	r2, #0
   203fc:	add	r5, pc, r5
   20400:	mov	r3, r5
   20404:	bl	32560 <flatcc_verify_table_field@@Base>
   20408:	cmp	r0, #0
   2040c:	bne	206b0 <main@@Base+0xa814>
   20410:	ldr	r3, [pc, #712]	; 206e0 <main@@Base+0xa844>
   20414:	mov	r0, r4
   20418:	mov	r1, #8
   2041c:	mov	r2, #0
   20420:	add	r3, pc, r3
   20424:	bl	334e4 <flatcc_verify_union_field@@Base>
   20428:	cmp	r0, #0
   2042c:	bne	206b0 <main@@Base+0xa814>
   20430:	mvn	r6, #-1073741824	; 0xc0000000
   20434:	mov	r7, #2
   20438:	mov	r0, r4
   2043c:	mov	r1, #9
   20440:	mov	r2, #0
   20444:	mov	r3, #4
   20448:	str	r7, [sp]
   2044c:	str	r6, [sp, #4]
   20450:	bl	322c4 <flatcc_verify_vector_field@@Base>
   20454:	cmp	r0, #0
   20458:	bne	206b0 <main@@Base+0xa814>
   2045c:	mov	r0, r4
   20460:	mov	r1, #31
   20464:	mov	r2, #0
   20468:	mov	r3, #4
   2046c:	str	r7, [sp]
   20470:	str	r6, [sp, #4]
   20474:	bl	322c4 <flatcc_verify_vector_field@@Base>
   20478:	cmp	r0, #0
   2047c:	bne	206b0 <main@@Base+0xa814>
   20480:	mov	r0, #1
   20484:	mov	r1, #13
   20488:	mov	r2, #0
   2048c:	mov	r3, #0
   20490:	stm	sp, {r0, r5}
   20494:	mov	r0, r4
   20498:	bl	331d4 <flatcc_verify_table_as_nested_root@@Base>
   2049c:	cmp	r0, #0
   204a0:	bne	206b0 <main@@Base+0xa814>
   204a4:	ldr	r3, [pc, #568]	; 206e4 <main@@Base+0xa848>
   204a8:	mov	r0, r4
   204ac:	mov	r1, #14
   204b0:	mov	r2, #0
   204b4:	add	r3, pc, r3
   204b8:	bl	32560 <flatcc_verify_table_field@@Base>
   204bc:	cmp	r0, #0
   204c0:	bne	206b0 <main@@Base+0xa814>
   204c4:	mov	r0, r4
   204c8:	mov	r1, #15
   204cc:	mov	r2, #1
   204d0:	mov	r3, #1
   204d4:	bl	3215c <flatcc_verify_field@@Base>
   204d8:	cmp	r0, #0
   204dc:	bne	206b0 <main@@Base+0xa814>
   204e0:	mov	r0, r4
   204e4:	mov	r1, #16
   204e8:	mov	r2, #4
   204ec:	mov	r3, #4
   204f0:	bl	3215c <flatcc_verify_field@@Base>
   204f4:	cmp	r0, #0
   204f8:	bne	206b0 <main@@Base+0xa814>
   204fc:	mov	r0, r4
   20500:	mov	r1, #17
   20504:	mov	r2, #4
   20508:	mov	r3, #4
   2050c:	bl	3215c <flatcc_verify_field@@Base>
   20510:	cmp	r0, #0
   20514:	bne	206b0 <main@@Base+0xa814>
   20518:	mov	r0, r4
   2051c:	mov	r1, #18
   20520:	mov	r2, #8
   20524:	mov	r3, #8
   20528:	bl	3215c <flatcc_verify_field@@Base>
   2052c:	cmp	r0, #0
   20530:	bne	206b0 <main@@Base+0xa814>
   20534:	mov	r0, r4
   20538:	mov	r1, #19
   2053c:	mov	r2, #8
   20540:	mov	r3, #8
   20544:	bl	3215c <flatcc_verify_field@@Base>
   20548:	cmp	r0, #0
   2054c:	bne	206b0 <main@@Base+0xa814>
   20550:	mov	r0, r4
   20554:	mov	r1, #20
   20558:	mov	r2, #4
   2055c:	mov	r3, #4
   20560:	bl	3215c <flatcc_verify_field@@Base>
   20564:	cmp	r0, #0
   20568:	bne	206b0 <main@@Base+0xa814>
   2056c:	mov	r0, r4
   20570:	mov	r1, #21
   20574:	mov	r2, #4
   20578:	mov	r3, #4
   2057c:	bl	3215c <flatcc_verify_field@@Base>
   20580:	cmp	r0, #0
   20584:	bne	206b0 <main@@Base+0xa814>
   20588:	mov	r0, r4
   2058c:	mov	r1, #22
   20590:	mov	r2, #8
   20594:	mov	r3, #8
   20598:	bl	3215c <flatcc_verify_field@@Base>
   2059c:	cmp	r0, #0
   205a0:	bne	206b0 <main@@Base+0xa814>
   205a4:	mov	r0, r4
   205a8:	mov	r1, #23
   205ac:	mov	r2, #8
   205b0:	mov	r3, #8
   205b4:	bl	3215c <flatcc_verify_field@@Base>
   205b8:	cmp	r0, #0
   205bc:	bne	206b0 <main@@Base+0xa814>
   205c0:	mov	r0, r4
   205c4:	mov	r1, #25
   205c8:	mov	r2, #4
   205cc:	mov	r3, #4
   205d0:	bl	3215c <flatcc_verify_field@@Base>
   205d4:	cmp	r0, #0
   205d8:	bne	206b0 <main@@Base+0xa814>
   205dc:	mov	r0, r4
   205e0:	mov	r1, #26
   205e4:	mov	r2, #4
   205e8:	mov	r3, #4
   205ec:	bl	3215c <flatcc_verify_field@@Base>
   205f0:	cmp	r0, #0
   205f4:	bne	206b0 <main@@Base+0xa814>
   205f8:	mov	r0, r4
   205fc:	mov	r1, #27
   20600:	mov	r2, #4
   20604:	mov	r3, #4
   20608:	bl	3215c <flatcc_verify_field@@Base>
   2060c:	cmp	r0, #0
   20610:	bne	206b0 <main@@Base+0xa814>
   20614:	mvn	r0, #0
   20618:	mov	r1, #1
   2061c:	mov	r2, #0
   20620:	mov	r3, #1
   20624:	str	r1, [sp]
   20628:	str	r0, [sp, #4]
   2062c:	mov	r0, r4
   20630:	mov	r1, #30
   20634:	bl	322c4 <flatcc_verify_vector_field@@Base>
   20638:	cmp	r0, #0
   2063c:	bne	206b0 <main@@Base+0xa814>
   20640:	mvn	r5, #-536870912	; 0xe0000000
   20644:	mov	r6, #8
   20648:	mov	r0, r4
   2064c:	mov	r1, #32
   20650:	mov	r2, #0
   20654:	mov	r3, #8
   20658:	str	r6, [sp]
   2065c:	str	r5, [sp, #4]
   20660:	bl	322c4 <flatcc_verify_vector_field@@Base>
   20664:	cmp	r0, #0
   20668:	bne	206b0 <main@@Base+0xa814>
   2066c:	mov	r0, r4
   20670:	mov	r1, #33	; 0x21
   20674:	mov	r2, #0
   20678:	mov	r3, #8
   2067c:	str	r6, [sp]
   20680:	str	r5, [sp, #4]
   20684:	bl	322c4 <flatcc_verify_vector_field@@Base>
   20688:	cmp	r0, #0
   2068c:	bne	206b0 <main@@Base+0xa814>
   20690:	ldr	r3, [pc, #80]	; 206e8 <main@@Base+0xa84c>
   20694:	mov	r0, r4
   20698:	mov	r1, #34	; 0x22
   2069c:	mov	r2, #0
   206a0:	add	r3, pc, r3
   206a4:	bl	32560 <flatcc_verify_table_field@@Base>
   206a8:	cmp	r0, #0
   206ac:	beq	206b8 <main@@Base+0xa81c>
   206b0:	sub	sp, fp, #16
   206b4:	pop	{r4, r5, r6, r7, fp, pc}
   206b8:	ldr	r3, [pc, #44]	; 206ec <main@@Base+0xa850>
   206bc:	mov	r0, r4
   206c0:	mov	r1, #35	; 0x23
   206c4:	mov	r2, #0
   206c8:	add	r3, pc, r3
   206cc:	sub	sp, fp, #16
   206d0:	pop	{r4, r5, r6, r7, fp, lr}
   206d4:	b	32560 <flatcc_verify_table_field@@Base>
   206d8:			; <UNDEFINED> instruction: 0xffffff28
   206dc:			; <UNDEFINED> instruction: 0xfffffe80
   206e0:	andeq	ip, r0, ip, lsl #9
   206e4:	andeq	ip, r0, r8, lsr #8
   206e8:	muleq	r0, r4, r2
   206ec:	andeq	ip, r0, r4, ror r2
   206f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206f4:	add	fp, sp, #28
   206f8:	sub	sp, sp, #12
   206fc:	mov	r5, r1
   20700:	sub	r1, r2, r1
   20704:	cmp	r1, #8
   20708:	movcs	r1, #8
   2070c:	and	r1, r1, #15
   20710:	sub	r1, r1, #1
   20714:	cmp	r1, #7
   20718:	bhi	2088c <main@@Base+0xa9f0>
   2071c:	str	r3, [sp, #8]
   20720:	add	r4, pc, #36	; 0x24
   20724:	mov	r9, #0
   20728:	mov	ip, #0
   2072c:	mov	lr, #0
   20730:	mov	sl, #0
   20734:	mov	r6, #0
   20738:	mov	r7, #0
   2073c:	mov	r3, #0
   20740:	ldr	r8, [r4, r1, lsl #2]
   20744:	mov	r1, #0
   20748:	add	pc, r4, r8
   2074c:	andeq	r0, r0, r4, rrx
   20750:	andeq	r0, r0, ip, asr r0
   20754:	andeq	r0, r0, r4, asr r0
   20758:	andeq	r0, r0, ip, asr #32
   2075c:	andeq	r0, r0, r0, asr #32
   20760:	andeq	r0, r0, r4, lsr r0
   20764:	andeq	r0, r0, r4, lsr #32
   20768:	andeq	r0, r0, r0, lsr #32
   2076c:	ldrb	ip, [r5, #7]
   20770:	ldrb	r1, [r5, #6]
   20774:	mov	lr, r9
   20778:	orr	r1, ip, r1, lsl #8
   2077c:	mov	r9, r1
   20780:	ldrb	r1, [r5, #5]
   20784:	mov	sl, lr
   20788:	orr	r9, r9, r1, lsl #16
   2078c:	ldrb	r1, [r5, #4]
   20790:	mov	r6, sl
   20794:	orr	r9, r9, r1, lsl #24
   20798:	ldrb	r1, [r5, #3]
   2079c:	orr	r7, r1, r6
   207a0:	ldrb	r1, [r5, #2]
   207a4:	orr	r3, r7, r1, lsl #8
   207a8:	ldrb	r1, [r5, #1]
   207ac:	orr	r1, r3, r1, lsl #16
   207b0:	ldrb	r7, [r5]
   207b4:	ldr	r3, [fp, #12]
   207b8:	ldr	r8, [fp, #8]
   207bc:	orr	r4, r1, r7, lsl #24
   207c0:	movw	r7, #25957	; 0x6565
   207c4:	mvn	r1, #-1845493760	; 0x92000000
   207c8:	movt	r7, #18290	; 0x4772
   207cc:	subs	r1, r1, r9
   207d0:	sbcs	r1, r7, r4
   207d4:	bcc	2080c <main@@Base+0xa970>
   207d8:	movw	r1, #30053	; 0x7565
   207dc:	movt	r1, #17004	; 0x426c
   207e0:	teq	r4, r1
   207e4:	bne	2088c <main@@Base+0xa9f0>
   207e8:	str	r3, [sp]
   207ec:	mov	r1, r5
   207f0:	mov	r3, #4
   207f4:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   207f8:	cmp	r0, r5
   207fc:	beq	2088c <main@@Base+0xa9f0>
   20800:	mov	r1, #0
   20804:	mov	r2, #8
   20808:	b	20878 <main@@Base+0xa9dc>
   2080c:	movw	r6, #25600	; 0x6400
   20810:	bic	r1, r4, #255	; 0xff
   20814:	movt	r6, #21093	; 0x5265
   20818:	teq	r1, r6
   2081c:	bne	20844 <main@@Base+0xa9a8>
   20820:	str	r3, [sp]
   20824:	mov	r1, r5
   20828:	mov	r3, #3
   2082c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   20830:	cmp	r0, r5
   20834:	beq	2088c <main@@Base+0xa9f0>
   20838:	mov	r1, #0
   2083c:	mov	r2, #1
   20840:	b	20878 <main@@Base+0xa9dc>
   20844:	eor	r1, r4, r7
   20848:	and	r7, r9, #-16777216	; 0xff000000
   2084c:	eor	r7, r7, #1845493760	; 0x6e000000
   20850:	orrs	r1, r7, r1
   20854:	bne	2088c <main@@Base+0xa9f0>
   20858:	str	r3, [sp]
   2085c:	mov	r1, r5
   20860:	mov	r3, #5
   20864:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   20868:	cmp	r0, r5
   2086c:	beq	2088c <main@@Base+0xa9f0>
   20870:	mov	r1, #0
   20874:	mov	r2, #2
   20878:	str	r2, [r8]
   2087c:	str	r1, [r8, #4]
   20880:	mov	r5, r0
   20884:	ldr	r2, [sp, #8]
   20888:	str	r1, [r2]
   2088c:	mov	r0, r5
   20890:	sub	sp, fp, #28
   20894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2089c:	add	fp, sp, #28
   208a0:	sub	sp, sp, #20
   208a4:	sub	sl, r2, r1
   208a8:	cmp	sl, #8
   208ac:	mov	r7, sl
   208b0:	movcs	r7, #8
   208b4:	and	r7, r7, #15
   208b8:	sub	r7, r7, #1
   208bc:	cmp	r7, #7
   208c0:	bhi	20cd0 <main@@Base+0xae34>
   208c4:	str	r0, [sp, #16]
   208c8:	str	r3, [sp, #12]
   208cc:	mov	r4, #0
   208d0:	mov	lr, #0
   208d4:	mov	r6, #0
   208d8:	mov	r3, #0
   208dc:	mov	r5, #0
   208e0:	mov	r8, #0
   208e4:	mov	r9, #0
   208e8:	ldr	r0, [fp, #12]
   208ec:	str	r0, [sp, #8]
   208f0:	ldr	r0, [fp, #8]
   208f4:	str	r0, [sp, #4]
   208f8:	add	ip, pc, #8
   208fc:	ldr	r0, [ip, r7, lsl #2]
   20900:	mov	r7, #0
   20904:	add	pc, ip, r0
   20908:	andeq	r0, r0, r4, rrx
   2090c:	andeq	r0, r0, ip, asr r0
   20910:	andeq	r0, r0, r4, asr r0
   20914:	andeq	r0, r0, ip, asr #32
   20918:	andeq	r0, r0, r0, asr #32
   2091c:	andeq	r0, r0, r4, lsr r0
   20920:	andeq	r0, r0, r4, lsr #32
   20924:	andeq	r0, r0, r0, lsr #32
   20928:	ldrb	lr, [r1, #7]
   2092c:	ldrb	r0, [r1, #6]
   20930:	mov	r7, r4
   20934:	orr	r0, lr, r0, lsl #8
   20938:	mov	r4, r0
   2093c:	ldrb	r0, [r1, #5]
   20940:	mov	r6, r7
   20944:	orr	r4, r4, r0, lsl #16
   20948:	ldrb	r0, [r1, #4]
   2094c:	mov	r3, r6
   20950:	orr	r4, r4, r0, lsl #24
   20954:	ldrb	r0, [r1, #3]
   20958:	orr	r5, r0, r3
   2095c:	ldrb	r0, [r1, #2]
   20960:	orr	r8, r5, r0, lsl #8
   20964:	ldrb	r0, [r1, #1]
   20968:	orr	r9, r8, r0, lsl #16
   2096c:	ldrb	r0, [r1]
   20970:	movw	lr, #30061	; 0x756d
   20974:	movw	r3, #30815	; 0x785f
   20978:	movt	lr, #25966	; 0x656e
   2097c:	movt	r3, #26725	; 0x6865
   20980:	orr	r6, r9, r0, lsl #24
   20984:	subs	r0, r4, lr
   20988:	sbcs	r0, r6, r3
   2098c:	bcs	209f4 <main@@Base+0xab58>
   20990:	movw	r3, #27759	; 0x6c6f
   20994:	mvn	r0, #-1912602624	; 0x8e000000
   20998:	bic	r7, r6, #255	; 0xff
   2099c:	movt	r3, #17263	; 0x436f
   209a0:	subs	r0, r0, r4
   209a4:	sbcs	r0, r3, r6
   209a8:	bcc	20a50 <main@@Base+0xabb4>
   209ac:	cmp	sl, #4
   209b0:	blt	20cd0 <main@@Base+0xae34>
   209b4:	movw	r0, #30976	; 0x7900
   209b8:	movt	r0, #16750	; 0x416e
   209bc:	teq	r7, r0
   209c0:	bne	20cd0 <main@@Base+0xae34>
   209c4:	ldrb	r0, [r1, #3]
   209c8:	mov	r3, r1
   209cc:	cmp	r0, #46	; 0x2e
   209d0:	addeq	r3, r3, #4
   209d4:	cmp	r3, r1
   209d8:	beq	20cd0 <main@@Base+0xae34>
   209dc:	mov	r1, r3
   209e0:	ldr	r0, [sp, #16]
   209e4:	ldr	r3, [sp, #12]
   209e8:	sub	sp, fp, #28
   209ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209f0:	b	23854 <main@@Base+0xd9b8>
   209f4:	add	r0, r3, #64512	; 0xfc00
   209f8:	add	r7, r0, #17301504	; 0x1080000
   209fc:	subs	r0, r4, lr
   20a00:	sbcs	r0, r6, r7
   20a04:	bcs	20a98 <main@@Base+0xabfc>
   20a08:	cmp	sl, #9
   20a0c:	blt	20cd0 <main@@Base+0xae34>
   20a10:	eor	r0, r4, lr
   20a14:	eor	r3, r6, r3
   20a18:	orrs	r0, r0, r3
   20a1c:	bne	20cd0 <main@@Base+0xae34>
   20a20:	ldrb	r0, [r1, #8]
   20a24:	mov	r3, r1
   20a28:	cmp	r0, #46	; 0x2e
   20a2c:	addeq	r3, r3, #9
   20a30:	cmp	r3, r1
   20a34:	beq	20cd0 <main@@Base+0xae34>
   20a38:	mov	r1, r3
   20a3c:	ldr	r0, [sp, #16]
   20a40:	ldr	r3, [sp, #12]
   20a44:	sub	sp, fp, #28
   20a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a4c:	b	24b5c <main@@Base+0xecc0>
   20a50:	movw	r0, #28416	; 0x6f00
   20a54:	movt	r0, #18031	; 0x466f
   20a58:	teq	r7, r0
   20a5c:	bne	20af4 <main@@Base+0xac58>
   20a60:	cmp	sl, #4
   20a64:	blt	20cd0 <main@@Base+0xae34>
   20a68:	ldrb	r0, [r1, #3]
   20a6c:	mov	r3, r1
   20a70:	cmp	r0, #46	; 0x2e
   20a74:	addeq	r3, r3, #4
   20a78:	cmp	r3, r1
   20a7c:	beq	20cd0 <main@@Base+0xae34>
   20a80:	mov	r1, r3
   20a84:	ldr	r0, [sp, #16]
   20a88:	ldr	r3, [sp, #12]
   20a8c:	sub	sp, fp, #28
   20a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a94:	b	248e4 <main@@Base+0xea48>
   20a98:	sub	r0, r3, #4352	; 0x1100
   20a9c:	subs	r3, r4, lr
   20aa0:	sub	r0, r0, #-100663296	; 0xfa000000
   20aa4:	sbcs	r0, r6, r0
   20aa8:	bcs	20b40 <main@@Base+0xaca4>
   20aac:	cmp	sl, #9
   20ab0:	blt	20cd0 <main@@Base+0xae34>
   20ab4:	eor	r0, r4, lr
   20ab8:	eor	r3, r6, r7
   20abc:	orrs	r0, r0, r3
   20ac0:	bne	20cd0 <main@@Base+0xae34>
   20ac4:	ldrb	r0, [r1, #8]
   20ac8:	mov	r3, r1
   20acc:	cmp	r0, #46	; 0x2e
   20ad0:	addeq	r3, r3, #9
   20ad4:	cmp	r3, r1
   20ad8:	beq	20cd0 <main@@Base+0xae34>
   20adc:	mov	r1, r3
   20ae0:	ldr	r0, [sp, #16]
   20ae4:	ldr	r3, [sp, #12]
   20ae8:	sub	sp, fp, #28
   20aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20af0:	b	24d10 <main@@Base+0xee74>
   20af4:	cmp	sl, #6
   20af8:	blt	20cd0 <main@@Base+0xae34>
   20afc:	and	r0, r4, #-16777216	; 0xff000000
   20b00:	eor	r3, r6, r3
   20b04:	eor	r0, r0, #1912602624	; 0x72000000
   20b08:	orrs	r0, r0, r3
   20b0c:	bne	20cd0 <main@@Base+0xae34>
   20b10:	ldrb	r0, [r1, #5]
   20b14:	mov	r3, r1
   20b18:	cmp	r0, #46	; 0x2e
   20b1c:	addeq	r3, r3, #6
   20b20:	cmp	r3, r1
   20b24:	beq	20cd0 <main@@Base+0xae34>
   20b28:	mov	r1, r3
   20b2c:	ldr	r0, [sp, #16]
   20b30:	ldr	r3, [sp, #12]
   20b34:	sub	sp, fp, #28
   20b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b3c:	b	206f0 <main@@Base+0xa854>
   20b40:	movw	r0, #29817	; 0x7479
   20b44:	movw	r3, #29797	; 0x7465
   20b48:	movt	r0, #28016	; 0x6d70
   20b4c:	movt	r3, #28271	; 0x6e6f
   20b50:	eor	r0, r4, r0
   20b54:	eor	r3, r6, r3
   20b58:	orrs	r0, r0, r3
   20b5c:	beq	20bb0 <main@@Base+0xad14>
   20b60:	movw	r3, #26463	; 0x675f
   20b64:	eor	r0, r4, lr
   20b68:	movt	r3, #28261	; 0x6e65
   20b6c:	eor	r3, r6, r3
   20b70:	orrs	r0, r0, r3
   20b74:	bne	20cd0 <main@@Base+0xae34>
   20b78:	cmp	sl, #9
   20b7c:	blt	20cd0 <main@@Base+0xae34>
   20b80:	ldrb	r0, [r1, #8]
   20b84:	mov	r3, r1
   20b88:	cmp	r0, #46	; 0x2e
   20b8c:	addeq	r3, r3, #9
   20b90:	cmp	r3, r1
   20b94:	beq	20cd0 <main@@Base+0xae34>
   20b98:	mov	r1, r3
   20b9c:	ldr	r0, [sp, #16]
   20ba0:	ldr	r3, [sp, #12]
   20ba4:	sub	sp, fp, #28
   20ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20bac:	b	24f08 <main@@Base+0xf06c>
   20bb0:	add	ip, r1, #8
   20bb4:	sub	r5, r2, ip
   20bb8:	cmp	r5, #8
   20bbc:	mov	r0, r5
   20bc0:	movcs	r0, #8
   20bc4:	and	r0, r0, #15
   20bc8:	sub	r3, r0, #1
   20bcc:	cmp	r3, #7
   20bd0:	bhi	20cd0 <main@@Base+0xae34>
   20bd4:	add	r0, pc, #20
   20bd8:	mov	r8, #0
   20bdc:	mov	r4, #0
   20be0:	mov	r7, #0
   20be4:	ldr	r6, [r0, r3, lsl #2]
   20be8:	mov	r3, #0
   20bec:	add	pc, r0, r6
   20bf0:	andeq	r0, r0, r8, lsr r0
   20bf4:	andeq	r0, r0, r0, lsr r0
   20bf8:	andeq	r0, r0, r8, lsr #32
   20bfc:	andeq	r0, r0, r0, lsr #32
   20c00:	andeq	r0, r0, r0, lsr #32
   20c04:	andeq	r0, r0, r0, lsr #32
   20c08:	andeq	r0, r0, r0, lsr #32
   20c0c:	andeq	r0, r0, r0, lsr #32
   20c10:	ldrb	r3, [r1, #11]
   20c14:	mov	r8, #0
   20c18:	ldrb	r0, [r1, #10]
   20c1c:	orr	r4, r3, r0, lsl #8
   20c20:	ldrb	r0, [r1, #9]
   20c24:	orr	r7, r4, r0, lsl #16
   20c28:	cmp	r5, #5
   20c2c:	blt	20cd0 <main@@Base+0xae34>
   20c30:	ldrb	r0, [ip]
   20c34:	orr	r0, r7, r0, lsl #24
   20c38:	eor	r0, r0, lr
   20c3c:	orrs	r0, r8, r0
   20c40:	bne	20cd0 <main@@Base+0xae34>
   20c44:	ldrb	r0, [r1, #12]
   20c48:	mov	r5, ip
   20c4c:	cmp	r0, #46	; 0x2e
   20c50:	addeq	r5, r1, #13
   20c54:	cmp	r5, ip
   20c58:	beq	20cd0 <main@@Base+0xae34>
   20c5c:	sub	r0, r2, r5
   20c60:	mov	r1, #-268435456	; 0xf0000000
   20c64:	cmp	r0, #8
   20c68:	movcs	r0, #8
   20c6c:	add	r0, r1, r0, lsl #28
   20c70:	asr	r0, r0, #28
   20c74:	cmp	r0, #0
   20c78:	blt	20ccc <main@@Base+0xae30>
   20c7c:	ldrb	r0, [r5]
   20c80:	cmp	r0, #120	; 0x78
   20c84:	bne	20ccc <main@@Base+0xae30>
   20c88:	ldr	r0, [sp, #8]
   20c8c:	mov	r1, r5
   20c90:	mov	r3, #1
   20c94:	str	r0, [sp]
   20c98:	ldr	r0, [sp, #16]
   20c9c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   20ca0:	cmp	r0, r5
   20ca4:	mov	r1, r5
   20ca8:	beq	20cd0 <main@@Base+0xae34>
   20cac:	ldr	r2, [sp, #4]
   20cb0:	mov	r1, #0
   20cb4:	str	r1, [r2]
   20cb8:	str	r1, [r2, #4]
   20cbc:	ldr	r2, [sp, #12]
   20cc0:	str	r1, [r2]
   20cc4:	mov	r1, r0
   20cc8:	b	20cd0 <main@@Base+0xae34>
   20ccc:	mov	r1, r5
   20cd0:	mov	r0, r1
   20cd4:	sub	sp, fp, #28
   20cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ce0:	add	fp, sp, #28
   20ce4:	sub	sp, sp, #28
   20ce8:	mov	r8, r2
   20cec:	sub	r2, r2, r1
   20cf0:	cmp	r2, #8
   20cf4:	movcs	r2, #8
   20cf8:	and	r2, r2, #15
   20cfc:	sub	r2, r2, #1
   20d00:	cmp	r2, #7
   20d04:	bhi	21bf8 <main@@Base+0xbd5c>
   20d08:	str	r0, [sp, #24]
   20d0c:	mov	r0, #0
   20d10:	mov	ip, #0
   20d14:	mov	lr, #0
   20d18:	mov	sl, #0
   20d1c:	mov	r6, #0
   20d20:	mov	r5, #0
   20d24:	ldr	r7, [fp, #12]
   20d28:	str	r7, [sp, #20]
   20d2c:	ldr	r7, [fp, #8]
   20d30:	str	r7, [sp, #16]
   20d34:	add	r4, pc, #12
   20d38:	mov	r7, #0
   20d3c:	ldr	r9, [r4, r2, lsl #2]
   20d40:	mov	r2, #0
   20d44:	add	pc, r4, r9
   20d48:	andeq	r0, r0, r4, rrx
   20d4c:	andeq	r0, r0, ip, asr r0
   20d50:	andeq	r0, r0, r4, asr r0
   20d54:	andeq	r0, r0, ip, asr #32
   20d58:	andeq	r0, r0, r0, asr #32
   20d5c:	andeq	r0, r0, r4, lsr r0
   20d60:	andeq	r0, r0, r4, lsr #32
   20d64:	andeq	r0, r0, r0, lsr #32
   20d68:	ldrb	ip, [r1, #7]
   20d6c:	ldrb	r2, [r1, #6]
   20d70:	mov	lr, r0
   20d74:	orr	r2, ip, r2, lsl #8
   20d78:	mov	r0, r2
   20d7c:	ldrb	r2, [r1, #5]
   20d80:	mov	sl, lr
   20d84:	orr	r0, r0, r2, lsl #16
   20d88:	ldrb	r2, [r1, #4]
   20d8c:	mov	r6, sl
   20d90:	orr	r0, r0, r2, lsl #24
   20d94:	ldrb	r2, [r1, #3]
   20d98:	orr	r7, r2, r6
   20d9c:	ldrb	r2, [r1, #2]
   20da0:	orr	r5, r7, r2, lsl #8
   20da4:	ldrb	r2, [r1, #1]
   20da8:	orr	r2, r5, r2, lsl #16
   20dac:	ldrb	r7, [r1]
   20db0:	movw	r6, #18273	; 0x4761
   20db4:	movt	r6, #19833	; 0x4d79
   20db8:	orr	r2, r2, r7, lsl #24
   20dbc:	movw	r7, #11844	; 0x2e44
   20dc0:	movt	r7, #28005	; 0x6d65
   20dc4:	subs	r7, r7, r0
   20dc8:	sbcs	r7, r6, r2
   20dcc:	bcc	20f38 <main@@Base+0xb09c>
   20dd0:	movw	r7, #31022	; 0x792e
   20dd4:	movt	r7, #24947	; 0x6173
   20dd8:	eor	r0, r0, r7
   20ddc:	movw	r7, #28276	; 0x6e74
   20de0:	movt	r7, #18017	; 0x4661
   20de4:	eor	r2, r2, r7
   20de8:	orrs	r0, r0, r2
   20dec:	bne	21bf8 <main@@Base+0xbd5c>
   20df0:	add	lr, r1, #8
   20df4:	sub	r0, r8, lr
   20df8:	cmp	r0, #8
   20dfc:	movcs	r0, #8
   20e00:	and	r0, r0, #15
   20e04:	sub	r0, r0, #1
   20e08:	cmp	r0, #7
   20e0c:	bhi	21bf8 <main@@Base+0xbd5c>
   20e10:	str	r3, [sp, #12]
   20e14:	add	r5, pc, #36	; 0x24
   20e18:	mov	sl, #0
   20e1c:	mov	ip, #0
   20e20:	mov	r9, #0
   20e24:	mov	r6, #0
   20e28:	mov	r7, #0
   20e2c:	mov	r4, #0
   20e30:	mov	r3, #0
   20e34:	ldr	r2, [r5, r0, lsl #2]
   20e38:	mov	r0, #0
   20e3c:	add	pc, r5, r2
   20e40:	andeq	r0, r0, r4, rrx
   20e44:	andeq	r0, r0, ip, asr r0
   20e48:	andeq	r0, r0, r4, asr r0
   20e4c:	andeq	r0, r0, ip, asr #32
   20e50:	andeq	r0, r0, r0, asr #32
   20e54:	andeq	r0, r0, r4, lsr r0
   20e58:	andeq	r0, r0, r4, lsr #32
   20e5c:	andeq	r0, r0, r0, lsr #32
   20e60:	ldrb	ip, [r1, #15]
   20e64:	ldrb	r0, [r1, #14]
   20e68:	mov	r9, sl
   20e6c:	orr	r0, ip, r0, lsl #8
   20e70:	mov	sl, r0
   20e74:	ldrb	r0, [r1, #13]
   20e78:	mov	r6, r9
   20e7c:	orr	sl, sl, r0, lsl #16
   20e80:	ldrb	r0, [r1, #12]
   20e84:	mov	r7, r6
   20e88:	orr	sl, sl, r0, lsl #24
   20e8c:	ldrb	r0, [r1, #11]
   20e90:	orr	r4, r0, r7
   20e94:	ldrb	r0, [r1, #10]
   20e98:	orr	r3, r4, r0, lsl #8
   20e9c:	ldrb	r0, [r1, #9]
   20ea0:	orr	r0, r3, r0, lsl #16
   20ea4:	ldrb	r3, [lr]
   20ea8:	movw	r2, #29797	; 0x7465
   20eac:	movt	r2, #24931	; 0x6163
   20eb0:	eor	r2, sl, r2
   20eb4:	orr	r0, r0, r3, lsl #24
   20eb8:	movw	r3, #24946	; 0x6172
   20ebc:	movt	r3, #17256	; 0x4368
   20ec0:	eor	r0, r0, r3
   20ec4:	orrs	r0, r2, r0
   20ec8:	bne	21bf8 <main@@Base+0xbd5c>
   20ecc:	add	r0, r1, #16
   20ed0:	mov	r7, #-268435456	; 0xf0000000
   20ed4:	sub	r2, r8, r0
   20ed8:	cmp	r2, #8
   20edc:	mov	r3, r2
   20ee0:	movcs	r3, #8
   20ee4:	add	r3, r7, r3, lsl #28
   20ee8:	asr	r3, r3, #28
   20eec:	cmp	r3, #0
   20ef0:	cmpge	r2, #2
   20ef4:	blt	21bf8 <main@@Base+0xbd5c>
   20ef8:	ldrb	r2, [r0]
   20efc:	cmp	r2, #114	; 0x72
   20f00:	bne	21bf8 <main@@Base+0xbd5c>
   20f04:	ldrb	r2, [r1, #17]
   20f08:	ldr	r3, [sp, #12]
   20f0c:	cmp	r2, #46	; 0x2e
   20f10:	mov	r2, r0
   20f14:	addeq	r2, r1, #18
   20f18:	cmp	r2, r0
   20f1c:	beq	21bf8 <main@@Base+0xbd5c>
   20f20:	ldr	r0, [sp, #24]
   20f24:	mov	r1, r2
   20f28:	mov	r2, r8
   20f2c:	sub	sp, fp, #28
   20f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f34:	b	25058 <main@@Base+0xf1bc>
   20f38:	movw	r7, #11855	; 0x2e4f
   20f3c:	eor	r2, r2, r6
   20f40:	movt	r7, #28005	; 0x6d65
   20f44:	eor	r7, r0, r7
   20f48:	orrs	r7, r7, r2
   20f4c:	beq	210f0 <main@@Base+0xb254>
   20f50:	movw	r7, #11845	; 0x2e45
   20f54:	movt	r7, #28005	; 0x6d65
   20f58:	eor	r0, r0, r7
   20f5c:	orrs	r0, r0, r2
   20f60:	bne	21bf8 <main@@Base+0xbd5c>
   20f64:	add	lr, r1, #8
   20f68:	sub	r0, r8, lr
   20f6c:	cmp	r0, #8
   20f70:	movcs	r0, #8
   20f74:	and	r0, r0, #15
   20f78:	sub	r2, r0, #1
   20f7c:	cmp	r2, #7
   20f80:	bhi	21bf8 <main@@Base+0xbd5c>
   20f84:	str	r3, [sp, #12]
   20f88:	add	r5, pc, #36	; 0x24
   20f8c:	mov	r0, #0
   20f90:	mov	ip, #0
   20f94:	mov	r9, #0
   20f98:	mov	r7, #0
   20f9c:	mov	r6, #0
   20fa0:	mov	r4, #0
   20fa4:	mov	r3, #0
   20fa8:	ldr	sl, [r5, r2, lsl #2]
   20fac:	mov	r2, #0
   20fb0:	add	pc, r5, sl
   20fb4:	andeq	r0, r0, r4, rrx
   20fb8:	andeq	r0, r0, ip, asr r0
   20fbc:	andeq	r0, r0, r4, asr r0
   20fc0:	andeq	r0, r0, ip, asr #32
   20fc4:	andeq	r0, r0, r0, asr #32
   20fc8:	andeq	r0, r0, r4, lsr r0
   20fcc:	andeq	r0, r0, r4, lsr #32
   20fd0:	andeq	r0, r0, r0, lsr #32
   20fd4:	ldrb	ip, [r1, #15]
   20fd8:	ldrb	r2, [r1, #14]
   20fdc:	mov	r9, r0
   20fe0:	orr	r2, ip, r2, lsl #8
   20fe4:	mov	r0, r2
   20fe8:	ldrb	r2, [r1, #13]
   20fec:	mov	r7, r9
   20ff0:	orr	r0, r0, r2, lsl #16
   20ff4:	ldrb	r2, [r1, #12]
   20ff8:	mov	r6, r7
   20ffc:	orr	r0, r0, r2, lsl #24
   21000:	ldrb	r2, [r1, #11]
   21004:	orr	r4, r2, r6
   21008:	ldrb	r2, [r1, #10]
   2100c:	orr	r3, r4, r2, lsl #8
   21010:	ldrb	r2, [r1, #9]
   21014:	orr	r2, r3, r2, lsl #16
   21018:	ldrb	r3, [lr]
   2101c:	movw	r6, #11880	; 0x2e68
   21020:	movt	r6, #27749	; 0x6c65
   21024:	subs	r7, r0, r6
   21028:	orr	r2, r2, r3, lsl #24
   2102c:	movw	r3, #28016	; 0x6d70
   21030:	movt	r3, #30817	; 0x7861
   21034:	sbcs	r7, r2, r3
   21038:	bcs	214d0 <main@@Base+0xb634>
   2103c:	ldr	lr, [sp, #12]
   21040:	subs	r7, r6, #37	; 0x25
   21044:	sbc	r5, r3, #0
   21048:	subs	r7, r0, r7
   2104c:	sbcs	r7, r2, r5
   21050:	bcs	215f0 <main@@Base+0xb754>
   21054:	subs	r7, r6, #39	; 0x27
   21058:	sbc	r3, r3, #0
   2105c:	eor	r0, r0, r7
   21060:	eor	r2, r2, r3
   21064:	orrs	r0, r0, r2
   21068:	bne	21bf8 <main@@Base+0xbd5c>
   2106c:	add	r0, r1, #16
   21070:	sub	r2, r8, r0
   21074:	cmp	r2, #8
   21078:	mov	r3, r2
   2107c:	movcs	r3, #8
   21080:	and	r7, r3, #15
   21084:	sub	r3, r7, #2
   21088:	cmp	r3, #7
   2108c:	bcs	21ad8 <main@@Base+0xbc3c>
   21090:	ldrb	r3, [r1, #17]
   21094:	lsl	r7, r3, #16
   21098:	mov	r3, #0
   2109c:	cmp	r2, #3
   210a0:	blt	21bf8 <main@@Base+0xbd5c>
   210a4:	ldrb	r2, [r0]
   210a8:	orr	r2, r7, r2, lsl #24
   210ac:	eor	r2, r2, #7929856	; 0x790000
   210b0:	eor	r2, r2, #1845493760	; 0x6e000000
   210b4:	orrs	r2, r3, r2
   210b8:	bne	21bf8 <main@@Base+0xbd5c>
   210bc:	ldrb	r2, [r1, #18]
   210c0:	cmp	r2, #46	; 0x2e
   210c4:	mov	r2, r0
   210c8:	addeq	r2, r1, #19
   210cc:	cmp	r2, r0
   210d0:	beq	21bf8 <main@@Base+0xbd5c>
   210d4:	ldr	r0, [sp, #24]
   210d8:	mov	r1, r2
   210dc:	mov	r2, r8
   210e0:	mov	r3, lr
   210e4:	sub	sp, fp, #28
   210e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210ec:	b	23854 <main@@Base+0xd9b8>
   210f0:	add	lr, r1, #8
   210f4:	sub	r0, r8, lr
   210f8:	cmp	r0, #8
   210fc:	movcs	r0, #8
   21100:	and	r0, r0, #15
   21104:	sub	r0, r0, #1
   21108:	cmp	r0, #7
   2110c:	bhi	21bf8 <main@@Base+0xbd5c>
   21110:	str	r3, [sp, #12]
   21114:	add	r5, pc, #36	; 0x24
   21118:	mov	sl, #0
   2111c:	mov	ip, #0
   21120:	mov	r9, #0
   21124:	mov	r7, #0
   21128:	mov	r6, #0
   2112c:	mov	r4, #0
   21130:	mov	r3, #0
   21134:	ldr	r2, [r5, r0, lsl #2]
   21138:	mov	r0, #0
   2113c:	add	pc, r5, r2
   21140:	andeq	r0, r0, r4, rrx
   21144:	andeq	r0, r0, ip, asr r0
   21148:	andeq	r0, r0, r4, asr r0
   2114c:	andeq	r0, r0, ip, asr #32
   21150:	andeq	r0, r0, r0, asr #32
   21154:	andeq	r0, r0, r4, lsr r0
   21158:	andeq	r0, r0, r4, lsr #32
   2115c:	andeq	r0, r0, r0, lsr #32
   21160:	ldrb	ip, [r1, #15]
   21164:	ldrb	r0, [r1, #14]
   21168:	mov	r9, sl
   2116c:	orr	r0, ip, r0, lsl #8
   21170:	mov	sl, r0
   21174:	ldrb	r0, [r1, #13]
   21178:	mov	r7, r9
   2117c:	orr	sl, sl, r0, lsl #16
   21180:	ldrb	r0, [r1, #12]
   21184:	mov	r6, r7
   21188:	orr	sl, sl, r0, lsl #24
   2118c:	ldrb	r0, [r1, #11]
   21190:	orr	r4, r0, r6
   21194:	ldrb	r0, [r1, #10]
   21198:	orr	r3, r4, r0, lsl #8
   2119c:	ldrb	r0, [r1, #9]
   211a0:	orr	r0, r3, r0, lsl #16
   211a4:	ldrb	r3, [lr]
   211a8:	movw	r2, #28005	; 0x6d65
   211ac:	movt	r2, #20065	; 0x4e61
   211b0:	eor	r2, sl, r2
   211b4:	orr	r0, r0, r3, lsl #24
   211b8:	movw	r3, #25970	; 0x6572
   211bc:	movt	r3, #29800	; 0x7468
   211c0:	eor	r0, r0, r3
   211c4:	orrs	r0, r2, r0
   211c8:	bne	21bf8 <main@@Base+0xbd5c>
   211cc:	add	lr, r1, #16
   211d0:	sub	r0, r8, lr
   211d4:	cmp	r0, #8
   211d8:	movcs	r0, #8
   211dc:	and	r0, r0, #15
   211e0:	sub	r0, r0, #1
   211e4:	cmp	r0, #7
   211e8:	bhi	21bf8 <main@@Base+0xbd5c>
   211ec:	add	r5, pc, #36	; 0x24
   211f0:	mov	sl, #0
   211f4:	mov	ip, #0
   211f8:	mov	r9, #0
   211fc:	mov	r7, #0
   21200:	mov	r6, #0
   21204:	mov	r4, #0
   21208:	mov	r3, #0
   2120c:	ldr	r2, [r5, r0, lsl #2]
   21210:	mov	r0, #0
   21214:	add	pc, r5, r2
   21218:	andeq	r0, r0, r4, rrx
   2121c:	andeq	r0, r0, ip, asr r0
   21220:	andeq	r0, r0, r4, asr r0
   21224:	andeq	r0, r0, ip, asr #32
   21228:	andeq	r0, r0, r0, asr #32
   2122c:	andeq	r0, r0, r4, lsr r0
   21230:	andeq	r0, r0, r4, lsr #32
   21234:	andeq	r0, r0, r0, lsr #32
   21238:	ldrb	ip, [r1, #23]
   2123c:	ldrb	r0, [r1, #22]
   21240:	mov	r9, sl
   21244:	orr	r0, ip, r0, lsl #8
   21248:	mov	sl, r0
   2124c:	ldrb	r0, [r1, #21]
   21250:	mov	r7, r9
   21254:	orr	sl, sl, r0, lsl #16
   21258:	ldrb	r0, [r1, #20]
   2125c:	mov	r6, r7
   21260:	orr	sl, sl, r0, lsl #24
   21264:	ldrb	r0, [r1, #19]
   21268:	orr	r4, r0, r6
   2126c:	ldrb	r0, [r1, #18]
   21270:	orr	r3, r4, r0, lsl #8
   21274:	ldrb	r0, [r1, #17]
   21278:	orr	r0, r3, r0, lsl #16
   2127c:	ldrb	r3, [lr]
   21280:	movw	r2, #18034	; 0x4672
   21284:	movt	r2, #25902	; 0x652e
   21288:	eor	r2, sl, r2
   2128c:	orr	r0, r0, r3, lsl #24
   21290:	movw	r3, #24931	; 0x6163
   21294:	movt	r3, #21360	; 0x5370
   21298:	eor	r0, r0, r3
   2129c:	orrs	r0, r2, r0
   212a0:	bne	21bf8 <main@@Base+0xbd5c>
   212a4:	add	lr, r1, #24
   212a8:	sub	r0, r8, lr
   212ac:	cmp	r0, #8
   212b0:	movcs	r0, #8
   212b4:	and	r0, r0, #15
   212b8:	sub	r0, r0, #1
   212bc:	cmp	r0, #7
   212c0:	bhi	21bf8 <main@@Base+0xbd5c>
   212c4:	add	r5, pc, #36	; 0x24
   212c8:	mov	sl, #0
   212cc:	mov	ip, #0
   212d0:	mov	r9, #0
   212d4:	mov	r7, #0
   212d8:	mov	r6, #0
   212dc:	mov	r4, #0
   212e0:	mov	r3, #0
   212e4:	ldr	r2, [r5, r0, lsl #2]
   212e8:	mov	r0, #0
   212ec:	add	pc, r5, r2
   212f0:	andeq	r0, r0, r4, rrx
   212f4:	andeq	r0, r0, ip, asr r0
   212f8:	andeq	r0, r0, r4, asr r0
   212fc:	andeq	r0, r0, ip, asr #32
   21300:	andeq	r0, r0, r0, asr #32
   21304:	andeq	r0, r0, r4, lsr r0
   21308:	andeq	r0, r0, r4, lsr #32
   2130c:	andeq	r0, r0, r0, lsr #32
   21310:	ldrb	ip, [r1, #31]
   21314:	ldrb	r0, [r1, #30]
   21318:	mov	r9, sl
   2131c:	orr	r0, ip, r0, lsl #8
   21320:	mov	sl, r0
   21324:	ldrb	r0, [r1, #29]
   21328:	mov	r7, r9
   2132c:	orr	sl, sl, r0, lsl #16
   21330:	ldrb	r0, [r1, #28]
   21334:	mov	r6, r7
   21338:	orr	sl, sl, r0, lsl #24
   2133c:	ldrb	r0, [r1, #27]
   21340:	orr	r4, r0, r6
   21344:	ldrb	r0, [r1, #26]
   21348:	orr	r3, r4, r0, lsl #8
   2134c:	ldrb	r0, [r1, #25]
   21350:	orr	r0, r3, r0, lsl #16
   21354:	ldrb	r3, [lr]
   21358:	movw	r2, #30052	; 0x7564
   2135c:	movt	r2, #25452	; 0x636c
   21360:	eor	r2, sl, r2
   21364:	orr	r0, r0, r3, lsl #24
   21368:	movw	r3, #18798	; 0x496e
   2136c:	movt	r3, #28525	; 0x6f6d
   21370:	eor	r0, r0, r3
   21374:	orrs	r0, r2, r0
   21378:	bne	21bf8 <main@@Base+0xbd5c>
   2137c:	add	r0, r1, #32
   21380:	mov	r7, #-268435456	; 0xf0000000
   21384:	sub	r2, r8, r0
   21388:	cmp	r2, #8
   2138c:	mov	r3, r2
   21390:	movcs	r3, #8
   21394:	add	r3, r7, r3, lsl #28
   21398:	asr	r3, r3, #28
   2139c:	cmp	r3, #0
   213a0:	cmpge	r2, #2
   213a4:	blt	21bf8 <main@@Base+0xbd5c>
   213a8:	ldrb	r2, [r0]
   213ac:	cmp	r2, #101	; 0x65
   213b0:	bne	21bf8 <main@@Base+0xbd5c>
   213b4:	ldrb	r2, [r1, #33]	; 0x21
   213b8:	ldr	r9, [sp, #12]
   213bc:	mov	r7, r0
   213c0:	cmp	r2, #46	; 0x2e
   213c4:	addeq	r7, r1, #34	; 0x22
   213c8:	cmp	r7, r0
   213cc:	beq	21bf8 <main@@Base+0xbd5c>
   213d0:	sub	r0, r8, r7
   213d4:	cmp	r0, #8
   213d8:	movcs	r0, #8
   213dc:	and	r0, r0, #15
   213e0:	sub	r0, r0, #1
   213e4:	cmp	r0, #7
   213e8:	bhi	21bf4 <main@@Base+0xbd58>
   213ec:	add	r6, pc, #36	; 0x24
   213f0:	mov	sl, #0
   213f4:	mov	ip, #0
   213f8:	mov	lr, #0
   213fc:	mov	r1, #0
   21400:	mov	r2, #0
   21404:	mov	r3, #0
   21408:	mov	r5, #0
   2140c:	mov	r4, #0
   21410:	ldr	r0, [r6, r0, lsl #2]
   21414:	add	pc, r6, r0
   21418:	andeq	r0, r0, r4, rrx
   2141c:	andeq	r0, r0, ip, asr r0
   21420:	andeq	r0, r0, r4, asr r0
   21424:	andeq	r0, r0, ip, asr #32
   21428:	andeq	r0, r0, r0, asr #32
   2142c:	andeq	r0, r0, r4, lsr r0
   21430:	andeq	r0, r0, r4, lsr #32
   21434:	andeq	r0, r0, r0, lsr #32
   21438:	ldrb	ip, [r7, #7]
   2143c:	ldrb	r0, [r7, #6]
   21440:	mov	lr, sl
   21444:	orr	r0, ip, r0, lsl #8
   21448:	mov	sl, r0
   2144c:	ldrb	r0, [r7, #5]
   21450:	mov	r1, lr
   21454:	orr	sl, sl, r0, lsl #16
   21458:	ldrb	r0, [r7, #4]
   2145c:	mov	r2, r1
   21460:	orr	sl, sl, r0, lsl #24
   21464:	ldrb	r0, [r7, #3]
   21468:	orr	r3, r0, r2
   2146c:	ldrb	r0, [r7, #2]
   21470:	orr	r5, r3, r0, lsl #8
   21474:	ldrb	r0, [r7, #1]
   21478:	orr	r4, r5, r0, lsl #16
   2147c:	ldrb	r0, [r7]
   21480:	movw	r1, #28416	; 0x6f00
   21484:	movt	r1, #18031	; 0x466f
   21488:	orr	r6, r4, r0, lsl #24
   2148c:	ldr	r4, [sp, #24]
   21490:	bic	r0, r6, #255	; 0xff
   21494:	teq	r0, r1
   21498:	bne	21b00 <main@@Base+0xbc64>
   2149c:	ldr	r0, [sp, #20]
   214a0:	mov	r1, r7
   214a4:	mov	r2, r8
   214a8:	mov	r3, #3
   214ac:	str	r0, [sp]
   214b0:	mov	r0, r4
   214b4:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   214b8:	cmp	r0, r7
   214bc:	beq	21b00 <main@@Base+0xbc64>
   214c0:	mov	r1, r0
   214c4:	mov	r3, #0
   214c8:	mov	r2, #17
   214cc:	b	21b98 <main@@Base+0xbcfc>
   214d0:	eor	r5, r0, r6
   214d4:	eor	r7, r2, r3
   214d8:	orrs	r5, r5, r7
   214dc:	bne	216ec <main@@Base+0xb850>
   214e0:	add	ip, r1, #16
   214e4:	sub	r2, r8, ip
   214e8:	cmp	r2, #8
   214ec:	mov	r0, r2
   214f0:	movcs	r0, #8
   214f4:	and	r0, r0, #15
   214f8:	sub	r0, r0, #1
   214fc:	cmp	r0, #7
   21500:	bhi	21bf8 <main@@Base+0xbd5c>
   21504:	add	r5, pc, #32
   21508:	mov	r9, #0
   2150c:	mov	lr, #0
   21510:	mov	sl, #0
   21514:	mov	r3, #0
   21518:	mov	r4, #0
   2151c:	mov	r7, #0
   21520:	ldr	r6, [r5, r0, lsl #2]
   21524:	mov	r0, #0
   21528:	add	pc, r5, r6
   2152c:	andeq	r0, r0, ip, asr r0
   21530:	andeq	r0, r0, r4, asr r0
   21534:	andeq	r0, r0, ip, asr #32
   21538:	andeq	r0, r0, r4, asr #32
   2153c:	andeq	r0, r0, r8, lsr r0
   21540:	andeq	r0, r0, r8, lsr #32
   21544:	andeq	r0, r0, r0, lsr #32
   21548:	andeq	r0, r0, r0, lsr #32
   2154c:	ldrb	r0, [r1, #22]
   21550:	lsl	lr, r0, #8
   21554:	ldrb	r0, [r1, #21]
   21558:	mov	sl, r9
   2155c:	orr	r0, lr, r0, lsl #16
   21560:	mov	r9, r0
   21564:	ldrb	r0, [r1, #20]
   21568:	mov	r3, sl
   2156c:	orr	r9, r9, r0, lsl #24
   21570:	ldrb	r0, [r1, #19]
   21574:	orr	r4, r0, r3
   21578:	ldrb	r0, [r1, #18]
   2157c:	orr	r7, r4, r0, lsl #8
   21580:	ldrb	r0, [r1, #17]
   21584:	orr	r0, r7, r0, lsl #16
   21588:	cmp	r2, #8
   2158c:	blt	21bf8 <main@@Base+0xbd5c>
   21590:	ldrb	r2, [ip]
   21594:	movw	r3, #27904	; 0x6d00
   21598:	movt	r3, #28277	; 0x6e75
   2159c:	eor	r3, r9, r3
   215a0:	orr	r0, r0, r2, lsl #24
   215a4:	movw	r2, #24421	; 0x5f65
   215a8:	movt	r2, #25959	; 0x6567
   215ac:	add	r2, r2, #1114112	; 0x110000
   215b0:	eor	r0, r0, r2
   215b4:	orrs	r0, r3, r0
   215b8:	bne	21bf8 <main@@Base+0xbd5c>
   215bc:	ldrb	r0, [r1, #23]
   215c0:	ldr	r3, [sp, #12]
   215c4:	mov	r2, ip
   215c8:	cmp	r0, #46	; 0x2e
   215cc:	addeq	r2, r1, #24
   215d0:	cmp	r2, ip
   215d4:	beq	21bf8 <main@@Base+0xbd5c>
   215d8:	ldr	r0, [sp, #24]
   215dc:	mov	r1, r2
   215e0:	mov	r2, r8
   215e4:	sub	sp, fp, #28
   215e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   215ec:	b	24b5c <main@@Base+0xecc0>
   215f0:	movw	r7, #11846	; 0x2e46
   215f4:	eor	r2, r2, r3
   215f8:	movt	r7, #27749	; 0x6c65
   215fc:	eor	r7, r0, r7
   21600:	orrs	r3, r7, r2
   21604:	beq	21954 <main@@Base+0xbab8>
   21608:	movw	r3, #11843	; 0x2e43
   2160c:	movt	r3, #27749	; 0x6c65
   21610:	eor	r0, r0, r3
   21614:	orrs	r0, r0, r2
   21618:	bne	21bf8 <main@@Base+0xbd5c>
   2161c:	add	r0, r1, #16
   21620:	sub	r2, r8, r0
   21624:	cmp	r2, #8
   21628:	mov	r3, r2
   2162c:	movcs	r3, #8
   21630:	and	r3, r3, #15
   21634:	sub	r7, r3, #1
   21638:	cmp	r7, #7
   2163c:	bhi	21bf8 <main@@Base+0xbd5c>
   21640:	add	r4, pc, #20
   21644:	mov	ip, #0
   21648:	mov	r5, #0
   2164c:	mov	r6, #0
   21650:	ldr	r3, [r4, r7, lsl #2]
   21654:	mov	r7, #0
   21658:	add	pc, r4, r3
   2165c:	andeq	r0, r0, r8, lsr r0
   21660:	andeq	r0, r0, r0, lsr r0
   21664:	andeq	r0, r0, r8, lsr #32
   21668:	andeq	r0, r0, r0, lsr #32
   2166c:	andeq	r0, r0, r0, lsr #32
   21670:	andeq	r0, r0, r0, lsr #32
   21674:	andeq	r0, r0, r0, lsr #32
   21678:	andeq	r0, r0, r0, lsr #32
   2167c:	ldrb	r7, [r1, #19]
   21680:	mov	ip, #0
   21684:	ldrb	r3, [r1, #18]
   21688:	orr	r5, r7, r3, lsl #8
   2168c:	ldrb	r3, [r1, #17]
   21690:	orr	r6, r5, r3, lsl #16
   21694:	cmp	r2, #5
   21698:	blt	21bf8 <main@@Base+0xbd5c>
   2169c:	ldrb	r2, [r0]
   216a0:	movw	r3, #28530	; 0x6f72
   216a4:	movt	r3, #28524	; 0x6f6c
   216a8:	orr	r2, r6, r2, lsl #24
   216ac:	eor	r2, r2, r3
   216b0:	orrs	r2, ip, r2
   216b4:	bne	21bf8 <main@@Base+0xbd5c>
   216b8:	ldrb	r2, [r1, #20]
   216bc:	cmp	r2, #46	; 0x2e
   216c0:	mov	r2, r0
   216c4:	addeq	r2, r1, #21
   216c8:	cmp	r2, r0
   216cc:	beq	21bf8 <main@@Base+0xbd5c>
   216d0:	ldr	r0, [sp, #24]
   216d4:	mov	r1, r2
   216d8:	mov	r2, r8
   216dc:	mov	r3, lr
   216e0:	sub	sp, fp, #28
   216e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   216e8:	b	206f0 <main@@Base+0xa854>
   216ec:	add	r5, r6, #6
   216f0:	subs	r4, r0, r5
   216f4:	sbcs	r2, r2, r3
   216f8:	bcs	21820 <main@@Base+0xb984>
   216fc:	add	r2, r6, #1
   21700:	eor	r0, r0, r2
   21704:	orrs	r0, r0, r7
   21708:	bne	21bf8 <main@@Base+0xbd5c>
   2170c:	add	ip, r1, #16
   21710:	sub	r2, r8, ip
   21714:	cmp	r2, #8
   21718:	mov	r0, r2
   2171c:	movcs	r0, #8
   21720:	and	r0, r0, #15
   21724:	sub	r0, r0, #1
   21728:	cmp	r0, #7
   2172c:	bhi	21bf8 <main@@Base+0xbd5c>
   21730:	add	r7, pc, #32
   21734:	mov	lr, #0
   21738:	mov	r9, #0
   2173c:	mov	sl, #0
   21740:	mov	r3, #0
   21744:	mov	r5, #0
   21748:	mov	r4, #0
   2174c:	ldr	r6, [r7, r0, lsl #2]
   21750:	mov	r0, #0
   21754:	add	pc, r7, r6
   21758:	andeq	r0, r0, ip, asr r0
   2175c:	andeq	r0, r0, r4, asr r0
   21760:	andeq	r0, r0, ip, asr #32
   21764:	andeq	r0, r0, r4, asr #32
   21768:	andeq	r0, r0, r8, lsr r0
   2176c:	andeq	r0, r0, r8, lsr #32
   21770:	andeq	r0, r0, r0, lsr #32
   21774:	andeq	r0, r0, r0, lsr #32
   21778:	ldrb	r0, [r1, #22]
   2177c:	lsl	r9, r0, #8
   21780:	ldrb	r0, [r1, #21]
   21784:	mov	sl, lr
   21788:	orr	r0, r9, r0, lsl #16
   2178c:	mov	lr, r0
   21790:	ldrb	r0, [r1, #20]
   21794:	mov	r3, sl
   21798:	orr	lr, lr, r0, lsl #24
   2179c:	ldrb	r0, [r1, #19]
   217a0:	orr	r0, r0, r3
   217a4:	ldrb	r3, [r1, #18]
   217a8:	orr	r5, r0, r3, lsl #8
   217ac:	ldrb	r0, [r1, #17]
   217b0:	orr	r4, r5, r0, lsl #16
   217b4:	cmp	r2, #8
   217b8:	blt	21bf8 <main@@Base+0xbd5c>
   217bc:	ldrb	r2, [ip]
   217c0:	movw	r0, #24421	; 0x5f65
   217c4:	movw	r3, #27904	; 0x6d00
   217c8:	movt	r0, #25959	; 0x6567
   217cc:	movt	r3, #28277	; 0x6e75
   217d0:	add	r0, r0, #851968	; 0xd0000
   217d4:	eor	r3, lr, r3
   217d8:	add	r0, r0, #150994944	; 0x9000000
   217dc:	orr	r2, r4, r2, lsl #24
   217e0:	eor	r0, r2, r0
   217e4:	orrs	r0, r3, r0
   217e8:	bne	21bf8 <main@@Base+0xbd5c>
   217ec:	ldrb	r0, [r1, #23]
   217f0:	ldr	r3, [sp, #12]
   217f4:	mov	r2, ip
   217f8:	cmp	r0, #46	; 0x2e
   217fc:	addeq	r2, r1, #24
   21800:	cmp	r2, ip
   21804:	beq	21bf8 <main@@Base+0xbd5c>
   21808:	ldr	r0, [sp, #24]
   2180c:	mov	r1, r2
   21810:	mov	r2, r8
   21814:	sub	sp, fp, #28
   21818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2181c:	b	24d10 <main@@Base+0xee74>
   21820:	eor	r0, r0, r5
   21824:	orrs	r0, r0, r7
   21828:	bne	21bf8 <main@@Base+0xbd5c>
   2182c:	add	lr, r1, #16
   21830:	sub	r2, r8, lr
   21834:	cmp	r2, #8
   21838:	mov	r0, r2
   2183c:	movcs	r0, #8
   21840:	and	r0, r0, #15
   21844:	sub	r0, r0, #1
   21848:	cmp	r0, #7
   2184c:	bhi	21bf8 <main@@Base+0xbd5c>
   21850:	add	r5, pc, #40	; 0x28
   21854:	mov	sl, #0
   21858:	mov	r9, #0
   2185c:	mov	r7, #0
   21860:	mov	r6, #0
   21864:	mov	r4, #0
   21868:	mov	ip, #0
   2186c:	ldr	r3, [r5, r0, lsl #2]
   21870:	mov	r0, #0
   21874:	str	r0, [sp, #8]
   21878:	mov	r0, #0
   2187c:	add	pc, r5, r3
   21880:	andeq	r0, r0, ip, rrx
   21884:	andeq	r0, r0, r4, rrx
   21888:	andeq	r0, r0, ip, asr r0
   2188c:	andeq	r0, r0, r4, asr r0
   21890:	andeq	r0, r0, r8, asr #32
   21894:	andeq	r0, r0, ip, lsr r0
   21898:	andeq	r0, r0, r8, lsr #32
   2189c:	andeq	r0, r0, r0, lsr #32
   218a0:	ldrb	r0, [r1, #23]
   218a4:	str	r0, [sp, #8]
   218a8:	ldrb	r0, [r1, #22]
   218ac:	ldr	r3, [sp, #8]
   218b0:	mov	r9, sl
   218b4:	orr	r0, r3, r0, lsl #8
   218b8:	mov	sl, r0
   218bc:	ldrb	r0, [r1, #21]
   218c0:	mov	r7, r9
   218c4:	orr	sl, sl, r0, lsl #16
   218c8:	ldrb	r0, [r1, #20]
   218cc:	mov	r6, r7
   218d0:	orr	sl, sl, r0, lsl #24
   218d4:	ldrb	r0, [r1, #19]
   218d8:	orr	r4, r0, r6
   218dc:	ldrb	r0, [r1, #18]
   218e0:	orr	r0, r4, r0, lsl #8
   218e4:	ldrb	r3, [r1, #17]
   218e8:	orr	ip, r0, r3, lsl #16
   218ec:	ldrb	r0, [lr]
   218f0:	cmp	r2, #8
   218f4:	orr	r6, ip, r0, lsl #24
   218f8:	movw	ip, #27904	; 0x6d00
   218fc:	movt	ip, #28277	; 0x6e75
   21900:	blt	219d8 <main@@Base+0xbb3c>
   21904:	movw	r2, #24421	; 0x5f65
   21908:	bic	r0, sl, #255	; 0xff
   2190c:	movt	r2, #25959	; 0x6567
   21910:	eor	r0, r0, ip
   21914:	eor	r2, r6, r2
   21918:	orrs	r0, r0, r2
   2191c:	bne	219d8 <main@@Base+0xbb3c>
   21920:	ldrb	r0, [r1, #23]
   21924:	mov	r2, lr
   21928:	cmp	r0, #46	; 0x2e
   2192c:	addeq	r2, r1, #24
   21930:	cmp	r2, lr
   21934:	beq	219d8 <main@@Base+0xbb3c>
   21938:	ldr	r0, [sp, #24]
   2193c:	ldr	r3, [sp, #12]
   21940:	mov	r1, r2
   21944:	mov	r2, r8
   21948:	sub	sp, fp, #28
   2194c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21950:	b	24f08 <main@@Base+0xf06c>
   21954:	add	r0, r1, #16
   21958:	sub	r2, r8, r0
   2195c:	cmp	r2, #8
   21960:	mov	r3, r2
   21964:	movcs	r3, #8
   21968:	and	r7, r3, #15
   2196c:	sub	r3, r7, #2
   21970:	cmp	r3, #7
   21974:	bcs	21aec <main@@Base+0xbc50>
   21978:	ldrb	r3, [r1, #17]
   2197c:	lsl	r7, r3, #16
   21980:	mov	r3, #0
   21984:	cmp	r2, #3
   21988:	blt	21bf8 <main@@Base+0xbd5c>
   2198c:	ldrb	r2, [r0]
   21990:	orr	r2, r7, r2, lsl #24
   21994:	eor	r2, r2, #7274496	; 0x6f0000
   21998:	eor	r2, r2, #1862270976	; 0x6f000000
   2199c:	orrs	r2, r3, r2
   219a0:	bne	21bf8 <main@@Base+0xbd5c>
   219a4:	ldrb	r2, [r1, #18]
   219a8:	cmp	r2, #46	; 0x2e
   219ac:	mov	r2, r0
   219b0:	addeq	r2, r1, #19
   219b4:	cmp	r2, r0
   219b8:	beq	21bf8 <main@@Base+0xbd5c>
   219bc:	ldr	r0, [sp, #24]
   219c0:	mov	r1, r2
   219c4:	mov	r2, r8
   219c8:	mov	r3, lr
   219cc:	sub	sp, fp, #28
   219d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   219d4:	b	248e4 <main@@Base+0xea48>
   219d8:	movw	r0, #31077	; 0x7965
   219dc:	movw	r2, #25965	; 0x656d
   219e0:	movt	r0, #28788	; 0x7074
   219e4:	movt	r2, #28532	; 0x6f74
   219e8:	eor	r0, sl, r0
   219ec:	eor	r2, r6, r2
   219f0:	orrs	r0, r0, r2
   219f4:	bne	21bf8 <main@@Base+0xbd5c>
   219f8:	add	r0, r1, #24
   219fc:	sub	r2, r8, r0
   21a00:	cmp	r2, #8
   21a04:	mov	r3, r2
   21a08:	movcs	r3, #8
   21a0c:	and	r7, r3, #15
   21a10:	sub	r3, r7, #3
   21a14:	cmp	r3, #6
   21a18:	bcs	21bac <main@@Base+0xbd10>
   21a1c:	ldrb	r3, [r1, #26]
   21a20:	ldr	r4, [sp, #12]
   21a24:	lsl	r7, r3, #8
   21a28:	mov	r3, #0
   21a2c:	ldrb	r6, [r1, #25]
   21a30:	orr	r7, r7, r6, lsl #16
   21a34:	cmp	r2, #4
   21a38:	blt	21bf8 <main@@Base+0xbd5c>
   21a3c:	ldrb	r2, [r0]
   21a40:	orr	r2, r7, r2, lsl #24
   21a44:	eor	r2, r2, ip
   21a48:	orrs	r2, r3, r2
   21a4c:	bne	21bf8 <main@@Base+0xbd5c>
   21a50:	ldrb	r2, [r1, #27]
   21a54:	mov	r6, r0
   21a58:	cmp	r2, #46	; 0x2e
   21a5c:	addeq	r6, r1, #28
   21a60:	cmp	r6, r0
   21a64:	beq	21bf8 <main@@Base+0xbd5c>
   21a68:	sub	r0, r8, r6
   21a6c:	mov	r1, #-268435456	; 0xf0000000
   21a70:	cmp	r0, #8
   21a74:	movcs	r0, #8
   21a78:	add	r0, r1, r0, lsl #28
   21a7c:	asr	r0, r0, #28
   21a80:	cmp	r0, #0
   21a84:	blt	21bcc <main@@Base+0xbd30>
   21a88:	ldrb	r0, [r6]
   21a8c:	cmp	r0, #120	; 0x78
   21a90:	bne	21bcc <main@@Base+0xbd30>
   21a94:	ldr	r0, [sp, #20]
   21a98:	mov	r1, r6
   21a9c:	mov	r2, r8
   21aa0:	mov	r3, #1
   21aa4:	str	r0, [sp]
   21aa8:	ldr	r0, [sp, #24]
   21aac:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   21ab0:	cmp	r0, r6
   21ab4:	mov	r1, r6
   21ab8:	beq	21bf8 <main@@Base+0xbd5c>
   21abc:	ldr	r2, [sp, #16]
   21ac0:	mov	r1, #0
   21ac4:	str	r1, [r2]
   21ac8:	str	r1, [r2, #4]
   21acc:	str	r1, [r4]
   21ad0:	mov	r1, r0
   21ad4:	b	21bf8 <main@@Base+0xbd5c>
   21ad8:	cmp	r7, #1
   21adc:	mov	r3, #0
   21ae0:	mov	r7, #0
   21ae4:	beq	2109c <main@@Base+0xb200>
   21ae8:	b	21bf8 <main@@Base+0xbd5c>
   21aec:	cmp	r7, #1
   21af0:	mov	r3, #0
   21af4:	mov	r7, #0
   21af8:	beq	21984 <main@@Base+0xbae8>
   21afc:	b	21bf8 <main@@Base+0xbd5c>
   21b00:	movw	r0, #25942	; 0x6556
   21b04:	movw	r1, #25452	; 0x636c
   21b08:	movt	r0, #30052	; 0x7564
   21b0c:	movt	r1, #18798	; 0x496e
   21b10:	eor	r0, sl, r0
   21b14:	eor	r1, r6, r1
   21b18:	orrs	r0, r0, r1
   21b1c:	bne	21bf4 <main@@Base+0xbd58>
   21b20:	add	r6, r7, #8
   21b24:	sub	r0, r8, r6
   21b28:	cmp	r0, #8
   21b2c:	movcs	r0, #8
   21b30:	and	r1, r0, #15
   21b34:	sub	r0, r1, #2
   21b38:	cmp	r0, #7
   21b3c:	bcs	21be4 <main@@Base+0xbd48>
   21b40:	ldrb	r0, [r7, #9]
   21b44:	lsl	r1, r0, #16
   21b48:	mov	r0, #0
   21b4c:	ldrb	r2, [r6]
   21b50:	orr	r1, r1, r2, lsl #24
   21b54:	eor	r1, r1, #23855104	; 0x16c0000
   21b58:	eor	r1, r1, #1610612736	; 0x60000000
   21b5c:	orrs	r0, r0, r1
   21b60:	bne	21bf4 <main@@Base+0xbd58>
   21b64:	ldr	r0, [sp, #20]
   21b68:	mov	r1, r6
   21b6c:	mov	r2, r8
   21b70:	mov	r3, #2
   21b74:	str	r0, [sp]
   21b78:	mov	r0, r4
   21b7c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   21b80:	cmp	r0, r6
   21b84:	mov	r1, r7
   21b88:	beq	21bf8 <main@@Base+0xbd5c>
   21b8c:	mov	r2, #0
   21b90:	mov	r3, #0
   21b94:	mov	r1, r0
   21b98:	ldr	r0, [sp, #16]
   21b9c:	strd	r2, [r0]
   21ba0:	mov	r0, #0
   21ba4:	str	r0, [r9]
   21ba8:	b	21bf8 <main@@Base+0xbd5c>
   21bac:	ldr	r4, [sp, #12]
   21bb0:	mov	r3, #0
   21bb4:	cmp	r7, #1
   21bb8:	beq	21bd4 <main@@Base+0xbd38>
   21bbc:	cmp	r7, #2
   21bc0:	mov	r7, #0
   21bc4:	beq	21a2c <main@@Base+0xbb90>
   21bc8:	b	21bf8 <main@@Base+0xbd5c>
   21bcc:	mov	r1, r6
   21bd0:	b	21bf8 <main@@Base+0xbd5c>
   21bd4:	mov	r7, #0
   21bd8:	cmp	r2, #4
   21bdc:	bge	21a3c <main@@Base+0xbba0>
   21be0:	b	21bf8 <main@@Base+0xbd5c>
   21be4:	cmp	r1, #1
   21be8:	mov	r0, #0
   21bec:	mov	r1, #0
   21bf0:	beq	21b4c <main@@Base+0xbcb0>
   21bf4:	mov	r1, r7
   21bf8:	mov	r0, r1
   21bfc:	sub	sp, fp, #28
   21c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21c08:	add	fp, sp, #28
   21c0c:	sub	sp, sp, #44	; 0x2c
   21c10:	mov	r6, r2
   21c14:	ldr	r2, [fp, #8]
   21c18:	mov	r5, r0
   21c1c:	mov	r0, #0
   21c20:	mov	sl, r3
   21c24:	cmp	r1, r6
   21c28:	strb	r0, [r2]
   21c2c:	beq	21c58 <main@@Base+0xbdbc>
   21c30:	ldrb	r0, [r1]
   21c34:	cmp	r0, #34	; 0x22
   21c38:	bne	21c44 <main@@Base+0xbda8>
   21c3c:	add	r1, r1, #1
   21c40:	b	21c58 <main@@Base+0xbdbc>
   21c44:	mov	r0, r5
   21c48:	mov	r2, r6
   21c4c:	mov	r3, #5
   21c50:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21c54:	mov	r1, r0
   21c58:	sub	r0, r6, r1
   21c5c:	cmp	r0, #2
   21c60:	blt	21c94 <main@@Base+0xbdf8>
   21c64:	ldrb	r0, [r1]
   21c68:	cmp	r0, #32
   21c6c:	bls	21c80 <main@@Base+0xbde4>
   21c70:	mov	r7, r1
   21c74:	cmp	r7, r6
   21c78:	bne	21cac <main@@Base+0xbe10>
   21c7c:	b	21dc4 <main@@Base+0xbf28>
   21c80:	bne	21c94 <main@@Base+0xbdf8>
   21c84:	mov	r7, r1
   21c88:	ldrb	r0, [r7, #1]!
   21c8c:	cmp	r0, #32
   21c90:	bhi	21ca4 <main@@Base+0xbe08>
   21c94:	mov	r0, r5
   21c98:	mov	r2, r6
   21c9c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   21ca0:	mov	r7, r0
   21ca4:	cmp	r7, r6
   21ca8:	beq	21dc4 <main@@Base+0xbf28>
   21cac:	add	r0, sl, #4
   21cb0:	mov	r2, #0
   21cb4:	add	r8, sp, #32
   21cb8:	add	r9, sp, #28
   21cbc:	str	sl, [sp, #16]
   21cc0:	str	r0, [sp, #12]
   21cc4:	ldr	r4, [sl]
   21cc8:	mov	sl, r0
   21ccc:	str	r2, [sp, #20]
   21cd0:	add	r0, sp, #24
   21cd4:	mov	r1, r7
   21cd8:	mov	r2, r6
   21cdc:	mov	r3, r9
   21ce0:	str	r8, [sp]
   21ce4:	str	r0, [sp, #4]
   21ce8:	mov	r0, r5
   21cec:	blx	r4
   21cf0:	cmp	r0, r6
   21cf4:	beq	21dc4 <main@@Base+0xbf28>
   21cf8:	mov	r4, r0
   21cfc:	cmp	r0, r7
   21d00:	bne	21d14 <main@@Base+0xbe78>
   21d04:	ldr	r4, [sl], #4
   21d08:	cmp	r4, #0
   21d0c:	bne	21cd0 <main@@Base+0xbe34>
   21d10:	b	21dcc <main@@Base+0xbf30>
   21d14:	ldr	r2, [sp, #28]
   21d18:	ldr	r0, [sp, #32]
   21d1c:	ldr	r1, [sp, #36]	; 0x24
   21d20:	cmp	r2, #0
   21d24:	beq	21d4c <main@@Base+0xbeb0>
   21d28:	ldr	sl, [sp, #16]
   21d2c:	subs	r2, r0, #129	; 0x81
   21d30:	sbcs	r1, r1, #0
   21d34:	bcc	21d80 <main@@Base+0xbee4>
   21d38:	mov	r0, r5
   21d3c:	mov	r1, r4
   21d40:	mov	r2, r6
   21d44:	mov	r3, #8
   21d48:	b	21d6c <main@@Base+0xbed0>
   21d4c:	ldr	sl, [sp, #16]
   21d50:	subs	r2, r0, #128	; 0x80
   21d54:	sbcs	r1, r1, #0
   21d58:	bcc	21d88 <main@@Base+0xbeec>
   21d5c:	mov	r0, r5
   21d60:	mov	r1, r4
   21d64:	mov	r2, r6
   21d68:	mov	r3, #7
   21d6c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21d70:	ldr	r2, [sp, #20]
   21d74:	cmp	r0, r6
   21d78:	bne	21d98 <main@@Base+0xbefc>
   21d7c:	b	21dc4 <main@@Base+0xbf28>
   21d80:	rsb	r2, r0, #0
   21d84:	b	21d8c <main@@Base+0xbef0>
   21d88:	mov	r2, r0
   21d8c:	mov	r0, r4
   21d90:	cmp	r0, r6
   21d94:	beq	21dc4 <main@@Base+0xbf28>
   21d98:	ldr	r0, [fp, #8]
   21d9c:	mov	r7, r4
   21da0:	mov	r1, r0
   21da4:	ldrb	r0, [r0]
   21da8:	add	r0, r0, r2
   21dac:	strb	r0, [r1]
   21db0:	ldr	r0, [sp, #24]
   21db4:	cmp	r0, #0
   21db8:	ldr	r0, [sp, #12]
   21dbc:	bne	21cc4 <main@@Base+0xbe28>
   21dc0:	b	21de4 <main@@Base+0xbf48>
   21dc4:	mov	r4, r6
   21dc8:	b	21de4 <main@@Base+0xbf48>
   21dcc:	mov	r0, r5
   21dd0:	mov	r1, r7
   21dd4:	mov	r2, r6
   21dd8:	mov	r3, #23
   21ddc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21de0:	mov	r4, r0
   21de4:	mov	r0, r4
   21de8:	sub	sp, fp, #28
   21dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21df4:	add	fp, sp, #28
   21df8:	sub	sp, sp, #44	; 0x2c
   21dfc:	mov	r6, r2
   21e00:	ldr	r2, [fp, #8]
   21e04:	mov	r5, r0
   21e08:	mov	r0, #0
   21e0c:	mov	sl, r3
   21e10:	cmp	r1, r6
   21e14:	strb	r0, [r2]
   21e18:	beq	21e44 <main@@Base+0xbfa8>
   21e1c:	ldrb	r0, [r1]
   21e20:	cmp	r0, #34	; 0x22
   21e24:	bne	21e30 <main@@Base+0xbf94>
   21e28:	add	r1, r1, #1
   21e2c:	b	21e44 <main@@Base+0xbfa8>
   21e30:	mov	r0, r5
   21e34:	mov	r2, r6
   21e38:	mov	r3, #5
   21e3c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21e40:	mov	r1, r0
   21e44:	sub	r0, r6, r1
   21e48:	cmp	r0, #2
   21e4c:	blt	21e80 <main@@Base+0xbfe4>
   21e50:	ldrb	r0, [r1]
   21e54:	cmp	r0, #32
   21e58:	bls	21e6c <main@@Base+0xbfd0>
   21e5c:	mov	r7, r1
   21e60:	cmp	r7, r6
   21e64:	bne	21e98 <main@@Base+0xbffc>
   21e68:	b	21fa8 <main@@Base+0xc10c>
   21e6c:	bne	21e80 <main@@Base+0xbfe4>
   21e70:	mov	r7, r1
   21e74:	ldrb	r0, [r7, #1]!
   21e78:	cmp	r0, #32
   21e7c:	bhi	21e90 <main@@Base+0xbff4>
   21e80:	mov	r0, r5
   21e84:	mov	r2, r6
   21e88:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   21e8c:	mov	r7, r0
   21e90:	cmp	r7, r6
   21e94:	beq	21fa8 <main@@Base+0xc10c>
   21e98:	add	r0, sl, #4
   21e9c:	mov	r1, #0
   21ea0:	add	r8, sp, #32
   21ea4:	add	r9, sp, #28
   21ea8:	str	sl, [sp, #16]
   21eac:	str	r1, [sp, #20]
   21eb0:	str	r0, [sp, #12]
   21eb4:	ldr	r4, [sl]
   21eb8:	mov	sl, r0
   21ebc:	add	r0, sp, #24
   21ec0:	mov	r1, r7
   21ec4:	mov	r2, r6
   21ec8:	mov	r3, r9
   21ecc:	str	r8, [sp]
   21ed0:	str	r0, [sp, #4]
   21ed4:	mov	r0, r5
   21ed8:	blx	r4
   21edc:	cmp	r0, r6
   21ee0:	beq	21fa8 <main@@Base+0xc10c>
   21ee4:	mov	r4, r0
   21ee8:	cmp	r0, r7
   21eec:	bne	21f00 <main@@Base+0xc064>
   21ef0:	ldr	r4, [sl], #4
   21ef4:	cmp	r4, #0
   21ef8:	bne	21ebc <main@@Base+0xc020>
   21efc:	b	21fb0 <main@@Base+0xc114>
   21f00:	ldr	r0, [sp, #28]
   21f04:	cmp	r0, #0
   21f08:	beq	21f30 <main@@Base+0xc094>
   21f0c:	mov	r0, r5
   21f10:	mov	r1, r4
   21f14:	mov	r2, r6
   21f18:	mov	r3, #8
   21f1c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21f20:	ldr	sl, [sp, #16]
   21f24:	cmp	r0, r6
   21f28:	bne	21f78 <main@@Base+0xc0dc>
   21f2c:	b	21fa8 <main@@Base+0xc10c>
   21f30:	ldr	r0, [sp, #32]
   21f34:	ldr	r1, [sp, #36]	; 0x24
   21f38:	ldr	sl, [sp, #16]
   21f3c:	subs	r2, r0, #256	; 0x100
   21f40:	sbcs	r1, r1, #0
   21f44:	bcc	21f68 <main@@Base+0xc0cc>
   21f48:	mov	r0, r5
   21f4c:	mov	r1, r4
   21f50:	mov	r2, r6
   21f54:	mov	r3, #7
   21f58:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21f5c:	cmp	r0, r6
   21f60:	bne	21f78 <main@@Base+0xc0dc>
   21f64:	b	21fa8 <main@@Base+0xc10c>
   21f68:	str	r0, [sp, #20]
   21f6c:	mov	r0, r4
   21f70:	cmp	r0, r6
   21f74:	beq	21fa8 <main@@Base+0xc10c>
   21f78:	ldr	r0, [fp, #8]
   21f7c:	ldr	r2, [sp, #20]
   21f80:	mov	r7, r4
   21f84:	mov	r1, r0
   21f88:	ldrb	r0, [r0]
   21f8c:	add	r0, r0, r2
   21f90:	strb	r0, [r1]
   21f94:	ldr	r0, [sp, #24]
   21f98:	cmp	r0, #0
   21f9c:	ldr	r0, [sp, #12]
   21fa0:	bne	21eb4 <main@@Base+0xc018>
   21fa4:	b	21fc8 <main@@Base+0xc12c>
   21fa8:	mov	r4, r6
   21fac:	b	21fc8 <main@@Base+0xc12c>
   21fb0:	mov	r0, r5
   21fb4:	mov	r1, r7
   21fb8:	mov	r2, r6
   21fbc:	mov	r3, #23
   21fc0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   21fc4:	mov	r4, r0
   21fc8:	mov	r0, r4
   21fcc:	sub	sp, fp, #28
   21fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21fd8:	add	fp, sp, #28
   21fdc:	sub	sp, sp, #44	; 0x2c
   21fe0:	mov	r6, r2
   21fe4:	ldr	r2, [fp, #8]
   21fe8:	mov	r5, r0
   21fec:	mov	r0, #0
   21ff0:	mov	sl, r3
   21ff4:	cmp	r1, r6
   21ff8:	strh	r0, [r2]
   21ffc:	beq	22028 <main@@Base+0xc18c>
   22000:	ldrb	r0, [r1]
   22004:	cmp	r0, #34	; 0x22
   22008:	bne	22014 <main@@Base+0xc178>
   2200c:	add	r1, r1, #1
   22010:	b	22028 <main@@Base+0xc18c>
   22014:	mov	r0, r5
   22018:	mov	r2, r6
   2201c:	mov	r3, #5
   22020:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22024:	mov	r1, r0
   22028:	sub	r0, r6, r1
   2202c:	cmp	r0, #2
   22030:	blt	22064 <main@@Base+0xc1c8>
   22034:	ldrb	r0, [r1]
   22038:	cmp	r0, #32
   2203c:	bls	22050 <main@@Base+0xc1b4>
   22040:	mov	r7, r1
   22044:	cmp	r7, r6
   22048:	bne	2207c <main@@Base+0xc1e0>
   2204c:	b	22198 <main@@Base+0xc2fc>
   22050:	bne	22064 <main@@Base+0xc1c8>
   22054:	mov	r7, r1
   22058:	ldrb	r0, [r7, #1]!
   2205c:	cmp	r0, #32
   22060:	bhi	22074 <main@@Base+0xc1d8>
   22064:	mov	r0, r5
   22068:	mov	r2, r6
   2206c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22070:	mov	r7, r0
   22074:	cmp	r7, r6
   22078:	beq	22198 <main@@Base+0xc2fc>
   2207c:	add	r0, sl, #4
   22080:	mov	r2, #0
   22084:	add	r8, sp, #32
   22088:	add	r9, sp, #28
   2208c:	str	sl, [sp, #16]
   22090:	str	r0, [sp, #12]
   22094:	ldr	r4, [sl]
   22098:	mov	sl, r0
   2209c:	str	r2, [sp, #20]
   220a0:	add	r0, sp, #24
   220a4:	mov	r1, r7
   220a8:	mov	r2, r6
   220ac:	mov	r3, r9
   220b0:	str	r8, [sp]
   220b4:	str	r0, [sp, #4]
   220b8:	mov	r0, r5
   220bc:	blx	r4
   220c0:	cmp	r0, r6
   220c4:	beq	22198 <main@@Base+0xc2fc>
   220c8:	mov	r4, r0
   220cc:	cmp	r0, r7
   220d0:	bne	220e4 <main@@Base+0xc248>
   220d4:	ldr	r4, [sl], #4
   220d8:	cmp	r4, #0
   220dc:	bne	220a0 <main@@Base+0xc204>
   220e0:	b	221a0 <main@@Base+0xc304>
   220e4:	ldr	r2, [sp, #28]
   220e8:	ldr	r0, [sp, #32]
   220ec:	ldr	r1, [sp, #36]	; 0x24
   220f0:	cmp	r2, #0
   220f4:	beq	22120 <main@@Base+0xc284>
   220f8:	ldr	sl, [sp, #16]
   220fc:	movw	r2, #32769	; 0x8001
   22100:	subs	r2, r0, r2
   22104:	sbcs	r1, r1, #0
   22108:	bcc	22154 <main@@Base+0xc2b8>
   2210c:	mov	r0, r5
   22110:	mov	r1, r4
   22114:	mov	r2, r6
   22118:	mov	r3, #8
   2211c:	b	22140 <main@@Base+0xc2a4>
   22120:	ldr	sl, [sp, #16]
   22124:	subs	r2, r0, #32768	; 0x8000
   22128:	sbcs	r1, r1, #0
   2212c:	bcc	2215c <main@@Base+0xc2c0>
   22130:	mov	r0, r5
   22134:	mov	r1, r4
   22138:	mov	r2, r6
   2213c:	mov	r3, #7
   22140:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22144:	ldr	r2, [sp, #20]
   22148:	cmp	r0, r6
   2214c:	bne	2216c <main@@Base+0xc2d0>
   22150:	b	22198 <main@@Base+0xc2fc>
   22154:	rsb	r2, r0, #0
   22158:	b	22160 <main@@Base+0xc2c4>
   2215c:	mov	r2, r0
   22160:	mov	r0, r4
   22164:	cmp	r0, r6
   22168:	beq	22198 <main@@Base+0xc2fc>
   2216c:	ldr	r0, [fp, #8]
   22170:	mov	r7, r4
   22174:	mov	r1, r0
   22178:	ldrh	r0, [r0]
   2217c:	add	r0, r0, r2
   22180:	strh	r0, [r1]
   22184:	ldr	r0, [sp, #24]
   22188:	cmp	r0, #0
   2218c:	ldr	r0, [sp, #12]
   22190:	bne	22094 <main@@Base+0xc1f8>
   22194:	b	221b8 <main@@Base+0xc31c>
   22198:	mov	r4, r6
   2219c:	b	221b8 <main@@Base+0xc31c>
   221a0:	mov	r0, r5
   221a4:	mov	r1, r7
   221a8:	mov	r2, r6
   221ac:	mov	r3, #23
   221b0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   221b4:	mov	r4, r0
   221b8:	mov	r0, r4
   221bc:	sub	sp, fp, #28
   221c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   221c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221c8:	add	fp, sp, #28
   221cc:	sub	sp, sp, #28
   221d0:	mov	r7, r2
   221d4:	mov	r5, r0
   221d8:	cmp	r1, r2
   221dc:	beq	22214 <main@@Base+0xc378>
   221e0:	ldrb	r0, [r1]
   221e4:	cmp	r0, #123	; 0x7b
   221e8:	bne	22214 <main@@Base+0xc378>
   221ec:	add	r2, r1, #1
   221f0:	mov	r9, r3
   221f4:	sub	r0, r7, r2
   221f8:	cmp	r0, #2
   221fc:	blt	2223c <main@@Base+0xc3a0>
   22200:	ldrb	r0, [r2]
   22204:	cmp	r0, #32
   22208:	bls	2222c <main@@Base+0xc390>
   2220c:	mov	r1, r2
   22210:	b	22250 <main@@Base+0xc3b4>
   22214:	mov	r0, r5
   22218:	mov	r2, r7
   2221c:	mov	r3, #21
   22220:	sub	sp, fp, #28
   22224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22228:	b	33ef8 <flatcc_json_parser_set_error@@Base>
   2222c:	bne	2223c <main@@Base+0xc3a0>
   22230:	ldrb	r0, [r1, #2]!
   22234:	cmp	r0, #32
   22238:	bhi	22250 <main@@Base+0xc3b4>
   2223c:	mov	r1, r2
   22240:	mov	r0, r5
   22244:	mov	r2, r7
   22248:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2224c:	mov	r1, r0
   22250:	cmp	r1, r7
   22254:	mov	r2, r7
   22258:	beq	22290 <main@@Base+0xc3f4>
   2225c:	ldrb	r0, [r1]
   22260:	cmp	r0, #125	; 0x7d
   22264:	bne	2228c <main@@Base+0xc3f0>
   22268:	add	r2, r1, #1
   2226c:	sub	r0, r7, r2
   22270:	cmp	r0, #2
   22274:	blt	2285c <main@@Base+0xc9c0>
   22278:	ldrb	r0, [r2]
   2227c:	cmp	r0, #32
   22280:	bls	2284c <main@@Base+0xc9b0>
   22284:	mov	r1, r2
   22288:	b	228b4 <main@@Base+0xca18>
   2228c:	mov	r2, r1
   22290:	mov	sl, #-268435456	; 0xf0000000
   22294:	mov	r6, #1627389952	; 0x61000000
   22298:	cmp	r2, r7
   2229c:	mov	r4, r7
   222a0:	beq	222d0 <main@@Base+0xc434>
   222a4:	ldrb	r0, [r2]
   222a8:	cmp	r0, #34	; 0x22
   222ac:	bne	222b8 <main@@Base+0xc41c>
   222b0:	add	r4, r2, #1
   222b4:	b	222d0 <main@@Base+0xc434>
   222b8:	mov	r1, r2
   222bc:	mov	r0, r5
   222c0:	mov	r2, r7
   222c4:	mov	r3, #5
   222c8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   222cc:	mov	r4, r0
   222d0:	sub	r0, r7, r4
   222d4:	mov	r1, #8
   222d8:	cmp	r0, #8
   222dc:	movcc	r1, r0
   222e0:	add	r1, sl, r1, lsl #28
   222e4:	asr	r1, r1, #28
   222e8:	cmp	r1, #0
   222ec:	blt	223f8 <main@@Base+0xc55c>
   222f0:	ldrb	r1, [r4]
   222f4:	teq	r6, r1, lsl #24
   222f8:	beq	22350 <main@@Base+0xc4b4>
   222fc:	lsl	r1, r1, #24
   22300:	teq	r1, #1644167168	; 0x62000000
   22304:	bne	223f8 <main@@Base+0xc55c>
   22308:	cmp	r0, #2
   2230c:	mov	r8, r4
   22310:	blt	2259c <main@@Base+0xc700>
   22314:	ldrb	r0, [r4, #1]
   22318:	mov	r8, r4
   2231c:	cmp	r0, #34	; 0x22
   22320:	bne	2259c <main@@Base+0xc700>
   22324:	add	r1, r4, #2
   22328:	sub	r0, r7, r1
   2232c:	cmp	r0, #2
   22330:	blt	223ac <main@@Base+0xc510>
   22334:	ldrb	r0, [r1]
   22338:	cmp	r0, #32
   2233c:	bls	22398 <main@@Base+0xc4fc>
   22340:	mov	r8, r1
   22344:	cmp	r8, r7
   22348:	bne	223c4 <main@@Base+0xc528>
   2234c:	b	224d0 <main@@Base+0xc634>
   22350:	cmp	r0, #2
   22354:	mov	r6, r4
   22358:	blt	226d8 <main@@Base+0xc83c>
   2235c:	ldrb	r0, [r4, #1]
   22360:	mov	r6, r4
   22364:	cmp	r0, #34	; 0x22
   22368:	bne	226d8 <main@@Base+0xc83c>
   2236c:	add	r1, r4, #2
   22370:	sub	r0, r7, r1
   22374:	cmp	r0, #2
   22378:	blt	224fc <main@@Base+0xc660>
   2237c:	ldrb	r0, [r1]
   22380:	cmp	r0, #32
   22384:	bls	224e8 <main@@Base+0xc64c>
   22388:	mov	r6, r1
   2238c:	cmp	r6, r7
   22390:	bne	22514 <main@@Base+0xc678>
   22394:	b	22564 <main@@Base+0xc6c8>
   22398:	bne	223ac <main@@Base+0xc510>
   2239c:	mov	r8, r4
   223a0:	ldrb	r0, [r8, #3]!
   223a4:	cmp	r0, #32
   223a8:	bhi	223bc <main@@Base+0xc520>
   223ac:	mov	r0, r5
   223b0:	mov	r2, r7
   223b4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   223b8:	mov	r8, r0
   223bc:	cmp	r8, r7
   223c0:	beq	224d0 <main@@Base+0xc634>
   223c4:	ldrb	r0, [r8]
   223c8:	cmp	r0, #58	; 0x3a
   223cc:	bne	224d0 <main@@Base+0xc634>
   223d0:	add	r1, r8, #1
   223d4:	sub	r0, r7, r1
   223d8:	cmp	r0, #2
   223dc:	blt	2258c <main@@Base+0xc6f0>
   223e0:	ldrb	r0, [r1]
   223e4:	cmp	r0, #32
   223e8:	bls	2257c <main@@Base+0xc6e0>
   223ec:	mov	r8, r1
   223f0:	cmp	r4, r8
   223f4:	bne	225a4 <main@@Base+0xc708>
   223f8:	mov	r0, r5
   223fc:	mov	r1, r4
   22400:	mov	r2, r7
   22404:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   22408:	mov	r1, r0
   2240c:	sub	r0, r7, r1
   22410:	cmp	r0, #2
   22414:	blt	22448 <main@@Base+0xc5ac>
   22418:	ldrb	r0, [r1]
   2241c:	cmp	r0, #32
   22420:	bls	22434 <main@@Base+0xc598>
   22424:	mov	r2, r1
   22428:	cmp	r2, r7
   2242c:	bne	22460 <main@@Base+0xc5c4>
   22430:	b	2280c <main@@Base+0xc970>
   22434:	bne	22448 <main@@Base+0xc5ac>
   22438:	mov	r2, r1
   2243c:	ldrb	r0, [r2, #1]!
   22440:	cmp	r0, #32
   22444:	bhi	22458 <main@@Base+0xc5bc>
   22448:	mov	r0, r5
   2244c:	mov	r2, r7
   22450:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22454:	mov	r2, r0
   22458:	cmp	r2, r7
   2245c:	beq	2280c <main@@Base+0xc970>
   22460:	ldrb	r0, [r2]
   22464:	cmp	r0, #44	; 0x2c
   22468:	bne	22814 <main@@Base+0xc978>
   2246c:	add	r1, r2, #1
   22470:	sub	r0, r7, r1
   22474:	cmp	r0, #2
   22478:	blt	224a8 <main@@Base+0xc60c>
   2247c:	ldrb	r0, [r1]
   22480:	cmp	r0, #32
   22484:	bls	22498 <main@@Base+0xc5fc>
   22488:	mov	r2, r1
   2248c:	cmp	r2, r7
   22490:	bne	224c0 <main@@Base+0xc624>
   22494:	b	22840 <main@@Base+0xc9a4>
   22498:	bne	224a8 <main@@Base+0xc60c>
   2249c:	ldrb	r0, [r2, #2]!
   224a0:	cmp	r0, #32
   224a4:	bhi	224b8 <main@@Base+0xc61c>
   224a8:	mov	r0, r5
   224ac:	mov	r2, r7
   224b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   224b4:	mov	r2, r0
   224b8:	cmp	r2, r7
   224bc:	beq	22840 <main@@Base+0xc9a4>
   224c0:	ldrb	r0, [r2]
   224c4:	cmp	r0, #125	; 0x7d
   224c8:	bne	22298 <main@@Base+0xc3fc>
   224cc:	b	2281c <main@@Base+0xc980>
   224d0:	mov	r0, r5
   224d4:	mov	r1, r8
   224d8:	mov	r2, r7
   224dc:	mov	r3, #4
   224e0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   224e4:	b	22598 <main@@Base+0xc6fc>
   224e8:	bne	224fc <main@@Base+0xc660>
   224ec:	mov	r6, r4
   224f0:	ldrb	r0, [r6, #3]!
   224f4:	cmp	r0, #32
   224f8:	bhi	2250c <main@@Base+0xc670>
   224fc:	mov	r0, r5
   22500:	mov	r2, r7
   22504:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22508:	mov	r6, r0
   2250c:	cmp	r6, r7
   22510:	beq	22564 <main@@Base+0xc6c8>
   22514:	ldrb	r0, [r6]
   22518:	cmp	r0, #58	; 0x3a
   2251c:	bne	22564 <main@@Base+0xc6c8>
   22520:	add	r1, r6, #1
   22524:	sub	r0, r7, r1
   22528:	cmp	r0, #2
   2252c:	blt	226c8 <main@@Base+0xc82c>
   22530:	ldrb	r0, [r1]
   22534:	cmp	r0, #32
   22538:	bls	226b8 <main@@Base+0xc81c>
   2253c:	mov	r6, r1
   22540:	cmp	r4, r6
   22544:	bne	226e0 <main@@Base+0xc844>
   22548:	mov	r0, r5
   2254c:	mov	r1, r4
   22550:	mov	r2, r7
   22554:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   22558:	mov	r1, r0
   2255c:	mov	r6, #1627389952	; 0x61000000
   22560:	b	2240c <main@@Base+0xc570>
   22564:	mov	r0, r5
   22568:	mov	r1, r6
   2256c:	mov	r2, r7
   22570:	mov	r3, #4
   22574:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22578:	b	226d4 <main@@Base+0xc838>
   2257c:	bne	2258c <main@@Base+0xc6f0>
   22580:	ldrb	r0, [r8, #2]!
   22584:	cmp	r0, #32
   22588:	bhi	2259c <main@@Base+0xc700>
   2258c:	mov	r0, r5
   22590:	mov	r2, r7
   22594:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22598:	mov	r8, r0
   2259c:	cmp	r4, r8
   225a0:	beq	223f8 <main@@Base+0xc55c>
   225a4:	mov	r4, #0
   225a8:	cmp	r8, r7
   225ac:	str	r4, [sp, #20]
   225b0:	str	r4, [sp, #16]
   225b4:	strb	r4, [sp, #10]
   225b8:	str	r4, [sp, #12]
   225bc:	beq	22618 <main@@Base+0xc77c>
   225c0:	add	r0, sp, #16
   225c4:	mov	r1, r8
   225c8:	mov	r2, r7
   225cc:	add	r3, sp, #12
   225d0:	str	r0, [sp]
   225d4:	mov	r0, r5
   225d8:	bl	363e0 <flatcc_json_parser_integer@@Base>
   225dc:	cmp	r0, r8
   225e0:	beq	22628 <main@@Base+0xc78c>
   225e4:	ldr	r3, [sp, #12]
   225e8:	mov	r1, r0
   225ec:	ldr	r0, [sp, #16]
   225f0:	ldr	r2, [sp, #20]
   225f4:	cmp	r3, #0
   225f8:	beq	22638 <main@@Base+0xc79c>
   225fc:	subs	r3, r0, #129	; 0x81
   22600:	sbcs	r2, r2, #0
   22604:	bcc	22664 <main@@Base+0xc7c8>
   22608:	mov	r0, r5
   2260c:	mov	r2, r7
   22610:	mov	r3, #8
   22614:	b	22650 <main@@Base+0xc7b4>
   22618:	mov	r1, r7
   2261c:	cmp	r8, r1
   22620:	bne	226b0 <main@@Base+0xc814>
   22624:	b	2267c <main@@Base+0xc7e0>
   22628:	mov	r1, r8
   2262c:	cmp	r8, r1
   22630:	bne	226b0 <main@@Base+0xc814>
   22634:	b	2267c <main@@Base+0xc7e0>
   22638:	subs	r3, r0, #128	; 0x80
   2263c:	sbcs	r2, r2, #0
   22640:	bcc	2266c <main@@Base+0xc7d0>
   22644:	mov	r0, r5
   22648:	mov	r2, r7
   2264c:	mov	r3, #7
   22650:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22654:	mov	r1, r0
   22658:	cmp	r8, r1
   2265c:	bne	226b0 <main@@Base+0xc814>
   22660:	b	2267c <main@@Base+0xc7e0>
   22664:	rsb	r4, r0, #0
   22668:	b	22670 <main@@Base+0xc7d4>
   2266c:	mov	r4, r0
   22670:	strb	r4, [sp, #10]
   22674:	cmp	r8, r1
   22678:	bne	226b0 <main@@Base+0xc814>
   2267c:	add	r0, sp, #10
   22680:	mov	r1, r8
   22684:	mov	r2, r7
   22688:	str	r0, [sp]
   2268c:	mov	r0, r5
   22690:	ldr	r3, [pc, #552]	; 228c0 <main@@Base+0xca24>
   22694:	add	r3, pc, r3
   22698:	bl	21c04 <main@@Base+0xbd68>
   2269c:	mov	r1, r0
   226a0:	cmp	r0, r8
   226a4:	cmpne	r1, r7
   226a8:	beq	227fc <main@@Base+0xc960>
   226ac:	ldrb	r4, [sp, #10]
   226b0:	strb	r4, [r9, #2]
   226b4:	b	2240c <main@@Base+0xc570>
   226b8:	bne	226c8 <main@@Base+0xc82c>
   226bc:	ldrb	r0, [r6, #2]!
   226c0:	cmp	r0, #32
   226c4:	bhi	226d8 <main@@Base+0xc83c>
   226c8:	mov	r0, r5
   226cc:	mov	r2, r7
   226d0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   226d4:	mov	r6, r0
   226d8:	cmp	r4, r6
   226dc:	beq	22548 <main@@Base+0xc6ac>
   226e0:	mov	r4, #0
   226e4:	cmp	r6, r7
   226e8:	str	r4, [sp, #20]
   226ec:	str	r4, [sp, #16]
   226f0:	strh	r4, [sp, #10]
   226f4:	str	r4, [sp, #12]
   226f8:	beq	22758 <main@@Base+0xc8bc>
   226fc:	add	r0, sp, #16
   22700:	mov	r1, r6
   22704:	mov	r2, r7
   22708:	add	r3, sp, #12
   2270c:	str	r0, [sp]
   22710:	mov	r0, r5
   22714:	bl	363e0 <flatcc_json_parser_integer@@Base>
   22718:	cmp	r0, r6
   2271c:	beq	22768 <main@@Base+0xc8cc>
   22720:	ldr	r3, [sp, #12]
   22724:	mov	r1, r0
   22728:	ldr	r0, [sp, #16]
   2272c:	ldr	r2, [sp, #20]
   22730:	cmp	r3, #0
   22734:	beq	22778 <main@@Base+0xc8dc>
   22738:	movw	r3, #32769	; 0x8001
   2273c:	subs	r3, r0, r3
   22740:	sbcs	r2, r2, #0
   22744:	bcc	227a4 <main@@Base+0xc908>
   22748:	mov	r0, r5
   2274c:	mov	r2, r7
   22750:	mov	r3, #8
   22754:	b	22790 <main@@Base+0xc8f4>
   22758:	mov	r1, r7
   2275c:	cmp	r6, r1
   22760:	bne	227f0 <main@@Base+0xc954>
   22764:	b	227bc <main@@Base+0xc920>
   22768:	mov	r1, r6
   2276c:	cmp	r6, r1
   22770:	bne	227f0 <main@@Base+0xc954>
   22774:	b	227bc <main@@Base+0xc920>
   22778:	subs	r3, r0, #32768	; 0x8000
   2277c:	sbcs	r2, r2, #0
   22780:	bcc	227ac <main@@Base+0xc910>
   22784:	mov	r0, r5
   22788:	mov	r2, r7
   2278c:	mov	r3, #7
   22790:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22794:	mov	r1, r0
   22798:	cmp	r6, r1
   2279c:	bne	227f0 <main@@Base+0xc954>
   227a0:	b	227bc <main@@Base+0xc920>
   227a4:	rsb	r4, r0, #0
   227a8:	b	227b0 <main@@Base+0xc914>
   227ac:	mov	r4, r0
   227b0:	strh	r4, [sp, #10]
   227b4:	cmp	r6, r1
   227b8:	bne	227f0 <main@@Base+0xc954>
   227bc:	add	r0, sp, #10
   227c0:	mov	r1, r6
   227c4:	mov	r2, r7
   227c8:	str	r0, [sp]
   227cc:	mov	r0, r5
   227d0:	ldr	r3, [pc, #236]	; 228c4 <main@@Base+0xca28>
   227d4:	add	r3, pc, r3
   227d8:	bl	21fd4 <main@@Base+0xc138>
   227dc:	mov	r1, r0
   227e0:	cmp	r0, r6
   227e4:	cmpne	r1, r7
   227e8:	beq	227fc <main@@Base+0xc960>
   227ec:	ldrh	r4, [sp, #10]
   227f0:	strh	r4, [r9]
   227f4:	mov	r6, #1627389952	; 0x61000000
   227f8:	b	2240c <main@@Base+0xc570>
   227fc:	mov	r0, r5
   22800:	mov	r2, r7
   22804:	mov	r3, #33	; 0x21
   22808:	b	22884 <main@@Base+0xc9e8>
   2280c:	mov	r1, r7
   22810:	b	228b4 <main@@Base+0xca18>
   22814:	cmp	r0, #125	; 0x7d
   22818:	bne	22874 <main@@Base+0xc9d8>
   2281c:	add	r3, r2, #1
   22820:	sub	r0, r7, r3
   22824:	cmp	r0, #2
   22828:	blt	228a0 <main@@Base+0xca04>
   2282c:	ldrb	r0, [r3]
   22830:	cmp	r0, #32
   22834:	bls	2288c <main@@Base+0xc9f0>
   22838:	mov	r1, r3
   2283c:	b	228b4 <main@@Base+0xca18>
   22840:	mov	r0, r5
   22844:	mov	r1, r7
   22848:	b	2287c <main@@Base+0xc9e0>
   2284c:	bne	2285c <main@@Base+0xc9c0>
   22850:	ldrb	r0, [r1, #2]!
   22854:	cmp	r0, #32
   22858:	bhi	228b4 <main@@Base+0xca18>
   2285c:	mov	r1, r2
   22860:	mov	r0, r5
   22864:	mov	r2, r7
   22868:	sub	sp, fp, #28
   2286c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22870:	b	33fa8 <flatcc_json_parser_space_ext@@Base>
   22874:	mov	r0, r5
   22878:	mov	r1, r2
   2287c:	mov	r2, r7
   22880:	mov	r3, #10
   22884:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22888:	b	228b0 <main@@Base+0xca14>
   2288c:	bne	228a0 <main@@Base+0xca04>
   22890:	ldrb	r0, [r2, #2]!
   22894:	cmp	r0, #32
   22898:	mov	r1, r2
   2289c:	bhi	228b4 <main@@Base+0xca18>
   228a0:	mov	r0, r5
   228a4:	mov	r1, r3
   228a8:	mov	r2, r7
   228ac:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   228b0:	mov	r1, r0
   228b4:	mov	r0, r1
   228b8:	sub	sp, fp, #28
   228bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   228c0:	andeq	r9, r3, r0, asr #22
   228c4:	andeq	r9, r3, ip, lsl #20
   228c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228cc:	add	fp, sp, #28
   228d0:	sub	sp, sp, #28
   228d4:	ldr	r5, [fp, #8]
   228d8:	mov	r8, r0
   228dc:	mov	r0, #0
   228e0:	mov	sl, r2
   228e4:	mov	r4, r1
   228e8:	cmp	r3, #4
   228ec:	str	r0, [r5]
   228f0:	bhi	22948 <main@@Base+0xcaac>
   228f4:	add	r0, pc, #4
   228f8:	ldr	r1, [r0, r3, lsl #2]
   228fc:	add	pc, r0, r1
   22900:	andeq	r0, r0, r4, lsl r0
   22904:	andeq	r0, r0, r0, ror r0
   22908:	andeq	r0, r0, r8, lsl #1
   2290c:	ldrdeq	r0, [r0], -ip
   22910:	andeq	r0, r0, r0, lsr r1
   22914:	sub	r0, sl, r4
   22918:	cmp	r0, #4
   2291c:	blt	22934 <main@@Base+0xca98>
   22920:	ldr	r0, [r4]
   22924:	movw	r1, #30062	; 0x756e
   22928:	movt	r1, #27756	; 0x6c6c
   2292c:	cmp	r0, r1
   22930:	beq	22ae8 <main@@Base+0xcc4c>
   22934:	mov	r0, r8
   22938:	mov	r1, r4
   2293c:	mov	r2, sl
   22940:	mov	r3, #26
   22944:	b	22964 <main@@Base+0xcac8>
   22948:	ldrb	r0, [r8, #8]
   2294c:	tst	r0, #1
   22950:	bne	22ab8 <main@@Base+0xcc1c>
   22954:	mov	r0, r8
   22958:	mov	r1, r4
   2295c:	mov	r2, sl
   22960:	mov	r3, #15
   22964:	sub	sp, fp, #28
   22968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2296c:	b	33ef8 <flatcc_json_parser_set_error@@Base>
   22970:	mov	r0, r8
   22974:	mov	r1, r4
   22978:	mov	r2, sl
   2297c:	mov	r3, r5
   22980:	bl	16848 <main@@Base+0x9ac>
   22984:	b	22a80 <main@@Base+0xcbe4>
   22988:	mov	r0, #0
   2298c:	mov	r1, #4
   22990:	str	r0, [r5]
   22994:	ldr	r0, [r8]
   22998:	bl	2f340 <flatcc_builder_start_table@@Base>
   2299c:	cmp	r0, #0
   229a0:	bne	22a6c <main@@Base+0xcbd0>
   229a4:	cmp	r4, sl
   229a8:	beq	22a48 <main@@Base+0xcbac>
   229ac:	ldrb	r0, [r4]
   229b0:	cmp	r0, #123	; 0x7b
   229b4:	bne	22a48 <main@@Base+0xcbac>
   229b8:	add	r1, r4, #1
   229bc:	sub	r0, sl, r1
   229c0:	cmp	r0, #2
   229c4:	blt	22b08 <main@@Base+0xcc6c>
   229c8:	ldrb	r0, [r1]
   229cc:	cmp	r0, #32
   229d0:	bls	22af8 <main@@Base+0xcc5c>
   229d4:	mov	r4, r1
   229d8:	b	22b18 <main@@Base+0xcc7c>
   229dc:	mov	r0, #0
   229e0:	mov	r1, #0
   229e4:	str	r0, [r5]
   229e8:	ldr	r0, [r8]
   229ec:	bl	2f340 <flatcc_builder_start_table@@Base>
   229f0:	cmp	r0, #0
   229f4:	bne	22a6c <main@@Base+0xcbd0>
   229f8:	cmp	r4, sl
   229fc:	beq	22a48 <main@@Base+0xcbac>
   22a00:	ldrb	r0, [r4]
   22a04:	cmp	r0, #123	; 0x7b
   22a08:	bne	22a48 <main@@Base+0xcbac>
   22a0c:	add	r1, r4, #1
   22a10:	sub	r0, sl, r1
   22a14:	cmp	r0, #2
   22a18:	blt	23618 <main@@Base+0xd77c>
   22a1c:	ldrb	r0, [r1]
   22a20:	cmp	r0, #32
   22a24:	bls	23608 <main@@Base+0xd76c>
   22a28:	mov	r4, r1
   22a2c:	b	23628 <main@@Base+0xd78c>
   22a30:	mov	r0, r8
   22a34:	mov	r1, r4
   22a38:	mov	r2, sl
   22a3c:	mov	r3, r5
   22a40:	bl	25344 <main@@Base+0xf4a8>
   22a44:	b	22a80 <main@@Base+0xcbe4>
   22a48:	mov	r0, r8
   22a4c:	mov	r1, r4
   22a50:	mov	r2, sl
   22a54:	mov	r3, #21
   22a58:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22a5c:	mov	r4, r0
   22a60:	ldr	r0, [r8, #20]
   22a64:	cmp	r0, #0
   22a68:	beq	22ad0 <main@@Base+0xcc34>
   22a6c:	mov	r0, r8
   22a70:	mov	r1, r4
   22a74:	mov	r2, sl
   22a78:	mov	r3, #33	; 0x21
   22a7c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22a80:	mov	r4, r0
   22a84:	ldr	r0, [r8, #20]
   22a88:	cmp	r0, #0
   22a8c:	bne	22aec <main@@Base+0xcc50>
   22a90:	ldr	r0, [r5]
   22a94:	cmp	r0, #0
   22a98:	bne	22aec <main@@Base+0xcc50>
   22a9c:	mov	r0, r8
   22aa0:	mov	r1, r4
   22aa4:	mov	r2, sl
   22aa8:	mov	r3, #33	; 0x21
   22aac:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22ab0:	mov	r4, r0
   22ab4:	b	22aec <main@@Base+0xcc50>
   22ab8:	mov	r0, r8
   22abc:	mov	r1, r4
   22ac0:	mov	r2, sl
   22ac4:	sub	sp, fp, #28
   22ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22acc:	b	3489c <flatcc_json_parser_generic_json@@Base>
   22ad0:	ldr	r0, [r8]
   22ad4:	bl	2fd70 <flatcc_builder_end_table@@Base>
   22ad8:	cmp	r0, #0
   22adc:	str	r0, [r5]
   22ae0:	bne	22a84 <main@@Base+0xcbe8>
   22ae4:	b	22a6c <main@@Base+0xcbd0>
   22ae8:	add	r4, r4, #4
   22aec:	mov	r0, r4
   22af0:	sub	sp, fp, #28
   22af4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22af8:	bne	22b08 <main@@Base+0xcc6c>
   22afc:	ldrb	r0, [r4, #2]!
   22b00:	cmp	r0, #32
   22b04:	bhi	22b18 <main@@Base+0xcc7c>
   22b08:	mov	r0, r8
   22b0c:	mov	r2, sl
   22b10:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22b14:	mov	r4, r0
   22b18:	cmp	r4, sl
   22b1c:	mov	r2, sl
   22b20:	beq	22b34 <main@@Base+0xcc98>
   22b24:	ldrb	r0, [r4]
   22b28:	cmp	r0, #125	; 0x7d
   22b2c:	beq	23640 <main@@Base+0xd7a4>
   22b30:	mov	r2, r4
   22b34:	cmp	r2, sl
   22b38:	mov	r9, sl
   22b3c:	beq	22b6c <main@@Base+0xccd0>
   22b40:	ldrb	r0, [r2]
   22b44:	cmp	r0, #34	; 0x22
   22b48:	bne	22b54 <main@@Base+0xccb8>
   22b4c:	add	r9, r2, #1
   22b50:	b	22b6c <main@@Base+0xccd0>
   22b54:	mov	r1, r2
   22b58:	mov	r0, r8
   22b5c:	mov	r2, sl
   22b60:	mov	r3, #5
   22b64:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22b68:	mov	r9, r0
   22b6c:	sub	lr, sl, r9
   22b70:	mov	r0, #8
   22b74:	cmp	lr, #8
   22b78:	movcc	r0, lr
   22b7c:	and	r0, r0, #15
   22b80:	sub	r1, r0, #1
   22b84:	cmp	r1, #7
   22b88:	bhi	23458 <main@@Base+0xd5bc>
   22b8c:	add	r4, pc, #32
   22b90:	mov	ip, r5
   22b94:	mov	r0, #0
   22b98:	mov	r2, #0
   22b9c:	mov	r3, #0
   22ba0:	mov	r7, #0
   22ba4:	mov	r6, #0
   22ba8:	ldr	r5, [r4, r1, lsl #2]
   22bac:	mov	r1, #0
   22bb0:	add	pc, r4, r5
   22bb4:	andeq	r0, r0, r0, asr r0
   22bb8:	andeq	r0, r0, r8, asr #32
   22bbc:	andeq	r0, r0, r0, asr #32
   22bc0:	andeq	r0, r0, r8, lsr r0
   22bc4:	andeq	r0, r0, r8, lsr #32
   22bc8:	andeq	r0, r0, r0, lsr #32
   22bcc:	andeq	r0, r0, r0, lsr #32
   22bd0:	andeq	r0, r0, r0, lsr #32
   22bd4:	ldrb	r1, [r9, #5]
   22bd8:	lsl	r1, r1, #16
   22bdc:	ldrb	r2, [r9, #4]
   22be0:	orr	r1, r1, r2, lsl #24
   22be4:	mov	r2, r0
   22be8:	mov	r0, r1
   22bec:	ldrb	r1, [r9, #3]
   22bf0:	orr	r3, r1, r2
   22bf4:	ldrb	r1, [r9, #2]
   22bf8:	orr	r7, r3, r1, lsl #8
   22bfc:	ldrb	r1, [r9, #1]
   22c00:	orr	r6, r7, r1, lsl #16
   22c04:	ldrb	r1, [r9]
   22c08:	movw	r3, #29234	; 0x7232
   22c0c:	lsr	r2, r0, #16
   22c10:	movt	r3, #27759	; 0x6c6f
   22c14:	orr	r7, r6, r1, lsl #24
   22c18:	movw	r1, #25455	; 0x636f
   22c1c:	orr	r2, r2, r7, lsl #16
   22c20:	eor	r1, r1, r7, lsr #16
   22c24:	eor	r2, r2, r3
   22c28:	orrs	r1, r2, r1
   22c2c:	bne	22c7c <main@@Base+0xcde0>
   22c30:	cmp	lr, #7
   22c34:	mov	r6, r9
   22c38:	mov	r5, ip
   22c3c:	blt	22e1c <main@@Base+0xcf80>
   22c40:	ldrb	r0, [r9, #6]
   22c44:	mov	r6, r9
   22c48:	cmp	r0, #34	; 0x22
   22c4c:	bne	22e1c <main@@Base+0xcf80>
   22c50:	add	r1, r9, #7
   22c54:	sub	r0, sl, r1
   22c58:	cmp	r0, #2
   22c5c:	blt	22cf8 <main@@Base+0xce5c>
   22c60:	ldrb	r0, [r1]
   22c64:	cmp	r0, #32
   22c68:	bls	22ce4 <main@@Base+0xce48>
   22c6c:	mov	r6, r1
   22c70:	cmp	r6, sl
   22c74:	bne	22d18 <main@@Base+0xce7c>
   22c78:	b	22d50 <main@@Base+0xceb4>
   22c7c:	movw	r1, #27759	; 0x6c6f
   22c80:	and	r0, r0, #-16777216	; 0xff000000
   22c84:	mov	r5, ip
   22c88:	movt	r1, #25455	; 0x636f
   22c8c:	eor	r0, r0, #1912602624	; 0x72000000
   22c90:	eor	r1, r7, r1
   22c94:	orrs	r0, r0, r1
   22c98:	bne	23000 <main@@Base+0xd164>
   22c9c:	cmp	lr, #6
   22ca0:	mov	r6, r9
   22ca4:	blt	22f80 <main@@Base+0xd0e4>
   22ca8:	ldrb	r0, [r9, #5]
   22cac:	mov	r6, r9
   22cb0:	cmp	r0, #34	; 0x22
   22cb4:	bne	22f80 <main@@Base+0xd0e4>
   22cb8:	add	r1, r9, #6
   22cbc:	sub	r0, sl, r1
   22cc0:	cmp	r0, #2
   22cc4:	blt	22d80 <main@@Base+0xcee4>
   22cc8:	ldrb	r0, [r1]
   22ccc:	cmp	r0, #32
   22cd0:	bls	22d6c <main@@Base+0xced0>
   22cd4:	mov	r6, r1
   22cd8:	cmp	r6, sl
   22cdc:	bne	22da0 <main@@Base+0xcf04>
   22ce0:	b	22dd8 <main@@Base+0xcf3c>
   22ce4:	bne	22cf8 <main@@Base+0xce5c>
   22ce8:	mov	r6, r9
   22cec:	ldrb	r0, [r6, #8]!
   22cf0:	cmp	r0, #32
   22cf4:	bhi	22d10 <main@@Base+0xce74>
   22cf8:	mov	r0, r8
   22cfc:	mov	r2, sl
   22d00:	mov	r4, lr
   22d04:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22d08:	mov	lr, r4
   22d0c:	mov	r6, r0
   22d10:	cmp	r6, sl
   22d14:	beq	22d50 <main@@Base+0xceb4>
   22d18:	ldrb	r0, [r6]
   22d1c:	cmp	r0, #58	; 0x3a
   22d20:	bne	22d50 <main@@Base+0xceb4>
   22d24:	add	r1, r6, #1
   22d28:	sub	r0, sl, r1
   22d2c:	cmp	r0, #2
   22d30:	blt	22e04 <main@@Base+0xcf68>
   22d34:	ldrb	r0, [r1]
   22d38:	cmp	r0, #32
   22d3c:	bls	22df4 <main@@Base+0xcf58>
   22d40:	mov	r6, r1
   22d44:	cmp	r9, r6
   22d48:	bne	22e24 <main@@Base+0xcf88>
   22d4c:	b	23000 <main@@Base+0xd164>
   22d50:	mov	r0, r8
   22d54:	mov	r1, r6
   22d58:	mov	r2, sl
   22d5c:	mov	r3, #4
   22d60:	mov	r4, lr
   22d64:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22d68:	b	22e14 <main@@Base+0xcf78>
   22d6c:	bne	22d80 <main@@Base+0xcee4>
   22d70:	mov	r6, r9
   22d74:	ldrb	r0, [r6, #7]!
   22d78:	cmp	r0, #32
   22d7c:	bhi	22d98 <main@@Base+0xcefc>
   22d80:	mov	r0, r8
   22d84:	mov	r2, sl
   22d88:	mov	r4, lr
   22d8c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22d90:	mov	lr, r4
   22d94:	mov	r6, r0
   22d98:	cmp	r6, sl
   22d9c:	beq	22dd8 <main@@Base+0xcf3c>
   22da0:	ldrb	r0, [r6]
   22da4:	cmp	r0, #58	; 0x3a
   22da8:	bne	22dd8 <main@@Base+0xcf3c>
   22dac:	add	r1, r6, #1
   22db0:	sub	r0, sl, r1
   22db4:	cmp	r0, #2
   22db8:	blt	22f68 <main@@Base+0xd0cc>
   22dbc:	ldrb	r0, [r1]
   22dc0:	cmp	r0, #32
   22dc4:	bls	22f58 <main@@Base+0xd0bc>
   22dc8:	mov	r6, r1
   22dcc:	cmp	r9, r6
   22dd0:	bne	22f88 <main@@Base+0xd0ec>
   22dd4:	b	23000 <main@@Base+0xd164>
   22dd8:	mov	r0, r8
   22ddc:	mov	r1, r6
   22de0:	mov	r2, sl
   22de4:	mov	r3, #4
   22de8:	mov	r4, lr
   22dec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22df0:	b	22f78 <main@@Base+0xd0dc>
   22df4:	bne	22e04 <main@@Base+0xcf68>
   22df8:	ldrb	r0, [r6, #2]!
   22dfc:	cmp	r0, #32
   22e00:	bhi	22e1c <main@@Base+0xcf80>
   22e04:	mov	r0, r8
   22e08:	mov	r2, sl
   22e0c:	mov	r4, lr
   22e10:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22e14:	mov	lr, r4
   22e18:	mov	r6, r0
   22e1c:	cmp	r9, r6
   22e20:	beq	23000 <main@@Base+0xd164>
   22e24:	mov	r7, #0
   22e28:	cmp	r6, sl
   22e2c:	str	r7, [sp, #20]
   22e30:	str	r7, [sp, #16]
   22e34:	strb	r7, [sp, #11]
   22e38:	str	r7, [sp, #12]
   22e3c:	beq	22e9c <main@@Base+0xd000>
   22e40:	add	r0, sp, #16
   22e44:	mov	r1, r6
   22e48:	mov	r2, sl
   22e4c:	add	r3, sp, #12
   22e50:	str	r0, [sp]
   22e54:	mov	r0, r8
   22e58:	bl	363e0 <flatcc_json_parser_integer@@Base>
   22e5c:	cmp	r0, r6
   22e60:	beq	22eac <main@@Base+0xd010>
   22e64:	ldr	r2, [sp, #12]
   22e68:	mov	r4, r0
   22e6c:	ldr	r0, [sp, #16]
   22e70:	ldr	r1, [sp, #20]
   22e74:	cmp	r2, #0
   22e78:	beq	22ebc <main@@Base+0xd020>
   22e7c:	subs	r2, r0, #129	; 0x81
   22e80:	sbcs	r1, r1, #0
   22e84:	bcc	22eec <main@@Base+0xd050>
   22e88:	mov	r0, r8
   22e8c:	mov	r1, r4
   22e90:	mov	r2, sl
   22e94:	mov	r3, #8
   22e98:	b	22ed8 <main@@Base+0xd03c>
   22e9c:	mov	r4, sl
   22ea0:	cmp	r6, r4
   22ea4:	bne	22f38 <main@@Base+0xd09c>
   22ea8:	b	22f04 <main@@Base+0xd068>
   22eac:	mov	r4, r6
   22eb0:	cmp	r6, r4
   22eb4:	bne	22f38 <main@@Base+0xd09c>
   22eb8:	b	22f04 <main@@Base+0xd068>
   22ebc:	subs	r2, r0, #128	; 0x80
   22ec0:	sbcs	r1, r1, #0
   22ec4:	bcc	22ef4 <main@@Base+0xd058>
   22ec8:	mov	r0, r8
   22ecc:	mov	r1, r4
   22ed0:	mov	r2, sl
   22ed4:	mov	r3, #7
   22ed8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   22edc:	mov	r4, r0
   22ee0:	cmp	r6, r4
   22ee4:	bne	22f38 <main@@Base+0xd09c>
   22ee8:	b	22f04 <main@@Base+0xd068>
   22eec:	rsb	r7, r0, #0
   22ef0:	b	22ef8 <main@@Base+0xd05c>
   22ef4:	mov	r7, r0
   22ef8:	strb	r7, [sp, #11]
   22efc:	cmp	r6, r4
   22f00:	bne	22f38 <main@@Base+0xd09c>
   22f04:	add	r0, sp, #11
   22f08:	mov	r1, r6
   22f0c:	mov	r2, sl
   22f10:	str	r0, [sp]
   22f14:	mov	r0, r8
   22f18:	ldr	r3, [pc, #2340]	; 23844 <main@@Base+0xd9a8>
   22f1c:	add	r3, pc, r3
   22f20:	bl	21c04 <main@@Base+0xbd68>
   22f24:	mov	r4, r0
   22f28:	cmp	r0, r6
   22f2c:	cmpne	r4, sl
   22f30:	beq	22a6c <main@@Base+0xcbd0>
   22f34:	ldrb	r7, [sp, #11]
   22f38:	uxtb	r0, r7
   22f3c:	cmp	r0, #2
   22f40:	ldrbeq	r0, [r8, #8]
   22f44:	tsteq	r0, #2
   22f48:	beq	23540 <main@@Base+0xd6a4>
   22f4c:	ldr	r0, [r8]
   22f50:	mov	r1, #1
   22f54:	b	231ec <main@@Base+0xd350>
   22f58:	bne	22f68 <main@@Base+0xd0cc>
   22f5c:	ldrb	r0, [r6, #2]!
   22f60:	cmp	r0, #32
   22f64:	bhi	22f80 <main@@Base+0xd0e4>
   22f68:	mov	r0, r8
   22f6c:	mov	r2, sl
   22f70:	mov	r4, lr
   22f74:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   22f78:	mov	lr, r4
   22f7c:	mov	r6, r0
   22f80:	cmp	r9, r6
   22f84:	beq	23000 <main@@Base+0xd164>
   22f88:	mov	r7, #0
   22f8c:	cmp	r6, sl
   22f90:	str	r7, [sp, #20]
   22f94:	str	r7, [sp, #16]
   22f98:	strb	r7, [sp, #11]
   22f9c:	str	r7, [sp, #12]
   22fa0:	beq	230b8 <main@@Base+0xd21c>
   22fa4:	add	r0, sp, #16
   22fa8:	mov	r1, r6
   22fac:	mov	r2, sl
   22fb0:	add	r3, sp, #12
   22fb4:	str	r0, [sp]
   22fb8:	mov	r0, r8
   22fbc:	bl	363e0 <flatcc_json_parser_integer@@Base>
   22fc0:	cmp	r0, r6
   22fc4:	beq	230c8 <main@@Base+0xd22c>
   22fc8:	ldr	r2, [sp, #12]
   22fcc:	mov	r4, r0
   22fd0:	ldr	r0, [sp, #16]
   22fd4:	ldr	r1, [sp, #20]
   22fd8:	cmp	r2, #0
   22fdc:	beq	230d8 <main@@Base+0xd23c>
   22fe0:	subs	r2, r0, #129	; 0x81
   22fe4:	sbcs	r1, r1, #0
   22fe8:	bcc	23108 <main@@Base+0xd26c>
   22fec:	mov	r0, r8
   22ff0:	mov	r1, r4
   22ff4:	mov	r2, sl
   22ff8:	mov	r3, #8
   22ffc:	b	230f4 <main@@Base+0xd258>
   23000:	movw	r1, #12800	; 0x3200
   23004:	bic	r0, r7, #255	; 0xff
   23008:	movt	r1, #30051	; 0x7563
   2300c:	teq	r0, r1
   23010:	bne	2305c <main@@Base+0xd1c0>
   23014:	cmp	lr, #4
   23018:	mov	r7, r9
   2301c:	blt	232a4 <main@@Base+0xd408>
   23020:	ldrb	r0, [r9, #3]
   23024:	mov	r7, r9
   23028:	cmp	r0, #34	; 0x22
   2302c:	bne	232a4 <main@@Base+0xd408>
   23030:	add	r1, r9, #4
   23034:	sub	r0, sl, r1
   23038:	cmp	r0, #2
   2303c:	blt	23124 <main@@Base+0xd288>
   23040:	ldrb	r0, [r1]
   23044:	cmp	r0, #32
   23048:	bls	23110 <main@@Base+0xd274>
   2304c:	mov	r7, r1
   23050:	cmp	r7, sl
   23054:	bne	2313c <main@@Base+0xd2a0>
   23058:	b	23174 <main@@Base+0xd2d8>
   2305c:	movw	r0, #0
   23060:	bfc	r7, #0, #16
   23064:	movt	r0, #30051	; 0x7563
   23068:	teq	r7, r0
   2306c:	bne	23458 <main@@Base+0xd5bc>
   23070:	cmp	lr, #3
   23074:	mov	r7, r9
   23078:	blt	233ec <main@@Base+0xd550>
   2307c:	ldrb	r0, [r9, #2]
   23080:	mov	r7, r9
   23084:	cmp	r0, #34	; 0x22
   23088:	bne	233ec <main@@Base+0xd550>
   2308c:	add	r1, r9, #3
   23090:	sub	r0, sl, r1
   23094:	cmp	r0, #2
   23098:	blt	2321c <main@@Base+0xd380>
   2309c:	ldrb	r0, [r1]
   230a0:	cmp	r0, #32
   230a4:	bls	23208 <main@@Base+0xd36c>
   230a8:	mov	r7, r1
   230ac:	cmp	r7, sl
   230b0:	bne	23234 <main@@Base+0xd398>
   230b4:	b	2326c <main@@Base+0xd3d0>
   230b8:	mov	r4, sl
   230bc:	cmp	r6, r4
   230c0:	bne	231d0 <main@@Base+0xd334>
   230c4:	b	2319c <main@@Base+0xd300>
   230c8:	mov	r4, r6
   230cc:	cmp	r6, r4
   230d0:	bne	231d0 <main@@Base+0xd334>
   230d4:	b	2319c <main@@Base+0xd300>
   230d8:	subs	r2, r0, #128	; 0x80
   230dc:	sbcs	r1, r1, #0
   230e0:	bcc	2318c <main@@Base+0xd2f0>
   230e4:	mov	r0, r8
   230e8:	mov	r1, r4
   230ec:	mov	r2, sl
   230f0:	mov	r3, #7
   230f4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   230f8:	mov	r4, r0
   230fc:	cmp	r6, r4
   23100:	bne	231d0 <main@@Base+0xd334>
   23104:	b	2319c <main@@Base+0xd300>
   23108:	rsb	r7, r0, #0
   2310c:	b	23190 <main@@Base+0xd2f4>
   23110:	bne	23124 <main@@Base+0xd288>
   23114:	mov	r7, r9
   23118:	ldrb	r0, [r7, #5]!
   2311c:	cmp	r0, #32
   23120:	bhi	23134 <main@@Base+0xd298>
   23124:	mov	r0, r8
   23128:	mov	r2, sl
   2312c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23130:	mov	r7, r0
   23134:	cmp	r7, sl
   23138:	beq	23174 <main@@Base+0xd2d8>
   2313c:	ldrb	r0, [r7]
   23140:	cmp	r0, #58	; 0x3a
   23144:	bne	23174 <main@@Base+0xd2d8>
   23148:	add	r1, r7, #1
   2314c:	sub	r0, sl, r1
   23150:	cmp	r0, #2
   23154:	blt	23294 <main@@Base+0xd3f8>
   23158:	ldrb	r0, [r1]
   2315c:	cmp	r0, #32
   23160:	bls	23284 <main@@Base+0xd3e8>
   23164:	mov	r7, r1
   23168:	cmp	r9, r7
   2316c:	bne	232ac <main@@Base+0xd410>
   23170:	b	23458 <main@@Base+0xd5bc>
   23174:	mov	r0, r8
   23178:	mov	r1, r7
   2317c:	mov	r2, sl
   23180:	mov	r3, #4
   23184:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23188:	b	232a0 <main@@Base+0xd404>
   2318c:	mov	r7, r0
   23190:	strb	r7, [sp, #11]
   23194:	cmp	r6, r4
   23198:	bne	231d0 <main@@Base+0xd334>
   2319c:	add	r0, sp, #11
   231a0:	mov	r1, r6
   231a4:	mov	r2, sl
   231a8:	str	r0, [sp]
   231ac:	mov	r0, r8
   231b0:	ldr	r3, [pc, #1680]	; 23848 <main@@Base+0xd9ac>
   231b4:	add	r3, pc, r3
   231b8:	bl	21c04 <main@@Base+0xbd68>
   231bc:	mov	r4, r0
   231c0:	cmp	r0, r6
   231c4:	cmpne	r4, sl
   231c8:	beq	22a6c <main@@Base+0xcbd0>
   231cc:	ldrb	r7, [sp, #11]
   231d0:	uxtb	r0, r7
   231d4:	cmp	r0, #2
   231d8:	ldrbeq	r0, [r8, #8]
   231dc:	tsteq	r0, #2
   231e0:	beq	23540 <main@@Base+0xd6a4>
   231e4:	ldr	r0, [r8]
   231e8:	mov	r1, #0
   231ec:	mov	r2, #1
   231f0:	mov	r3, #1
   231f4:	bl	307e4 <flatcc_builder_table_add@@Base>
   231f8:	cmp	r0, #0
   231fc:	beq	22a6c <main@@Base+0xcbd0>
   23200:	strb	r7, [r0]
   23204:	b	23540 <main@@Base+0xd6a4>
   23208:	bne	2321c <main@@Base+0xd380>
   2320c:	mov	r7, r9
   23210:	ldrb	r0, [r7, #4]!
   23214:	cmp	r0, #32
   23218:	bhi	2322c <main@@Base+0xd390>
   2321c:	mov	r0, r8
   23220:	mov	r2, sl
   23224:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23228:	mov	r7, r0
   2322c:	cmp	r7, sl
   23230:	beq	2326c <main@@Base+0xd3d0>
   23234:	ldrb	r0, [r7]
   23238:	cmp	r0, #58	; 0x3a
   2323c:	bne	2326c <main@@Base+0xd3d0>
   23240:	add	r1, r7, #1
   23244:	sub	r0, sl, r1
   23248:	cmp	r0, #2
   2324c:	blt	233dc <main@@Base+0xd540>
   23250:	ldrb	r0, [r1]
   23254:	cmp	r0, #32
   23258:	bls	233cc <main@@Base+0xd530>
   2325c:	mov	r7, r1
   23260:	cmp	r9, r7
   23264:	bne	233f4 <main@@Base+0xd558>
   23268:	b	23458 <main@@Base+0xd5bc>
   2326c:	mov	r0, r8
   23270:	mov	r1, r7
   23274:	mov	r2, sl
   23278:	mov	r3, #4
   2327c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23280:	b	233e8 <main@@Base+0xd54c>
   23284:	bne	23294 <main@@Base+0xd3f8>
   23288:	ldrb	r0, [r7, #2]!
   2328c:	cmp	r0, #32
   23290:	bhi	232a4 <main@@Base+0xd408>
   23294:	mov	r0, r8
   23298:	mov	r2, sl
   2329c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   232a0:	mov	r7, r0
   232a4:	cmp	r9, r7
   232a8:	beq	23458 <main@@Base+0xd5bc>
   232ac:	mov	r6, #0
   232b0:	cmp	r7, sl
   232b4:	str	r6, [sp, #20]
   232b8:	str	r6, [sp, #16]
   232bc:	strb	r6, [sp, #11]
   232c0:	str	r6, [sp, #12]
   232c4:	beq	23310 <main@@Base+0xd474>
   232c8:	add	r0, sp, #16
   232cc:	mov	r1, r7
   232d0:	mov	r2, sl
   232d4:	add	r3, sp, #12
   232d8:	str	r0, [sp]
   232dc:	mov	r0, r8
   232e0:	bl	363e0 <flatcc_json_parser_integer@@Base>
   232e4:	cmp	r0, r7
   232e8:	beq	23320 <main@@Base+0xd484>
   232ec:	mov	r4, r0
   232f0:	ldr	r0, [sp, #12]
   232f4:	cmp	r0, #0
   232f8:	beq	23330 <main@@Base+0xd494>
   232fc:	mov	r0, r8
   23300:	mov	r1, r4
   23304:	mov	r2, sl
   23308:	mov	r3, #8
   2330c:	b	23354 <main@@Base+0xd4b8>
   23310:	mov	r4, sl
   23314:	cmp	r7, r4
   23318:	bne	23398 <main@@Base+0xd4fc>
   2331c:	b	23364 <main@@Base+0xd4c8>
   23320:	mov	r4, r7
   23324:	cmp	r7, r4
   23328:	bne	23398 <main@@Base+0xd4fc>
   2332c:	b	23364 <main@@Base+0xd4c8>
   23330:	ldr	r0, [sp, #16]
   23334:	ldr	r1, [sp, #20]
   23338:	subs	r2, r0, #256	; 0x100
   2333c:	sbcs	r1, r1, #0
   23340:	bcc	233b8 <main@@Base+0xd51c>
   23344:	mov	r0, r8
   23348:	mov	r1, r4
   2334c:	mov	r2, sl
   23350:	mov	r3, #7
   23354:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23358:	mov	r4, r0
   2335c:	cmp	r7, r4
   23360:	bne	23398 <main@@Base+0xd4fc>
   23364:	add	r0, sp, #11
   23368:	mov	r1, r7
   2336c:	mov	r2, sl
   23370:	str	r0, [sp]
   23374:	mov	r0, r8
   23378:	ldr	r3, [pc, #1228]	; 2384c <main@@Base+0xd9b0>
   2337c:	add	r3, pc, r3
   23380:	bl	21df0 <main@@Base+0xbf54>
   23384:	mov	r4, r0
   23388:	cmp	r0, r7
   2338c:	cmpne	r4, sl
   23390:	beq	22a6c <main@@Base+0xcbd0>
   23394:	ldrb	r6, [sp, #11]
   23398:	uxtb	r0, r6
   2339c:	cmp	r0, #2
   233a0:	ldrbeq	r0, [r8, #8]
   233a4:	tsteq	r0, #2
   233a8:	beq	23540 <main@@Base+0xd6a4>
   233ac:	ldr	r0, [r8]
   233b0:	mov	r1, #3
   233b4:	b	23528 <main@@Base+0xd68c>
   233b8:	mov	r6, r0
   233bc:	strb	r0, [sp, #11]
   233c0:	cmp	r7, r4
   233c4:	bne	23398 <main@@Base+0xd4fc>
   233c8:	b	23364 <main@@Base+0xd4c8>
   233cc:	bne	233dc <main@@Base+0xd540>
   233d0:	ldrb	r0, [r7, #2]!
   233d4:	cmp	r0, #32
   233d8:	bhi	233ec <main@@Base+0xd550>
   233dc:	mov	r0, r8
   233e0:	mov	r2, sl
   233e4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   233e8:	mov	r7, r0
   233ec:	cmp	r9, r7
   233f0:	beq	23458 <main@@Base+0xd5bc>
   233f4:	mov	r6, #0
   233f8:	cmp	r7, sl
   233fc:	str	r6, [sp, #20]
   23400:	str	r6, [sp, #16]
   23404:	strb	r6, [sp, #11]
   23408:	str	r6, [sp, #12]
   2340c:	beq	23470 <main@@Base+0xd5d4>
   23410:	add	r0, sp, #16
   23414:	mov	r1, r7
   23418:	mov	r2, sl
   2341c:	add	r3, sp, #12
   23420:	str	r0, [sp]
   23424:	mov	r0, r8
   23428:	bl	363e0 <flatcc_json_parser_integer@@Base>
   2342c:	cmp	r0, r7
   23430:	beq	23480 <main@@Base+0xd5e4>
   23434:	mov	r4, r0
   23438:	ldr	r0, [sp, #12]
   2343c:	cmp	r0, #0
   23440:	beq	23490 <main@@Base+0xd5f4>
   23444:	mov	r0, r8
   23448:	mov	r1, r4
   2344c:	mov	r2, sl
   23450:	mov	r3, #8
   23454:	b	234b4 <main@@Base+0xd618>
   23458:	mov	r0, r8
   2345c:	mov	r1, r9
   23460:	mov	r2, sl
   23464:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   23468:	mov	r4, r0
   2346c:	b	23540 <main@@Base+0xd6a4>
   23470:	mov	r4, sl
   23474:	cmp	r7, r4
   23478:	bne	2350c <main@@Base+0xd670>
   2347c:	b	234c4 <main@@Base+0xd628>
   23480:	mov	r4, r7
   23484:	cmp	r7, r4
   23488:	bne	2350c <main@@Base+0xd670>
   2348c:	b	234c4 <main@@Base+0xd628>
   23490:	ldr	r0, [sp, #16]
   23494:	ldr	r1, [sp, #20]
   23498:	subs	r2, r0, #256	; 0x100
   2349c:	sbcs	r1, r1, #0
   234a0:	bcc	234fc <main@@Base+0xd660>
   234a4:	mov	r0, r8
   234a8:	mov	r1, r4
   234ac:	mov	r2, sl
   234b0:	mov	r3, #7
   234b4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   234b8:	mov	r4, r0
   234bc:	cmp	r7, r4
   234c0:	bne	2350c <main@@Base+0xd670>
   234c4:	add	r0, sp, #11
   234c8:	mov	r1, r7
   234cc:	mov	r2, sl
   234d0:	str	r0, [sp]
   234d4:	mov	r0, r8
   234d8:	ldr	r3, [pc, #880]	; 23850 <main@@Base+0xd9b4>
   234dc:	add	r3, pc, r3
   234e0:	bl	21df0 <main@@Base+0xbf54>
   234e4:	mov	r4, r0
   234e8:	cmp	r0, r7
   234ec:	cmpne	r4, sl
   234f0:	beq	22a6c <main@@Base+0xcbd0>
   234f4:	ldrb	r6, [sp, #11]
   234f8:	b	2350c <main@@Base+0xd670>
   234fc:	mov	r6, r0
   23500:	strb	r0, [sp, #11]
   23504:	cmp	r7, r4
   23508:	beq	234c4 <main@@Base+0xd628>
   2350c:	uxtb	r0, r6
   23510:	cmp	r0, #2
   23514:	ldrbeq	r0, [r8, #8]
   23518:	tsteq	r0, #2
   2351c:	beq	23540 <main@@Base+0xd6a4>
   23520:	ldr	r0, [r8]
   23524:	mov	r1, #2
   23528:	mov	r2, #1
   2352c:	mov	r3, #1
   23530:	bl	307e4 <flatcc_builder_table_add@@Base>
   23534:	cmp	r0, #0
   23538:	beq	22a6c <main@@Base+0xcbd0>
   2353c:	strb	r6, [r0]
   23540:	sub	r0, sl, r4
   23544:	cmp	r0, #2
   23548:	blt	2357c <main@@Base+0xd6e0>
   2354c:	ldrb	r0, [r4]
   23550:	cmp	r0, #32
   23554:	bls	23568 <main@@Base+0xd6cc>
   23558:	mov	r2, r4
   2355c:	cmp	r2, sl
   23560:	bne	23598 <main@@Base+0xd6fc>
   23564:	b	23784 <main@@Base+0xd8e8>
   23568:	bne	2357c <main@@Base+0xd6e0>
   2356c:	mov	r2, r4
   23570:	ldrb	r0, [r2, #1]!
   23574:	cmp	r0, #32
   23578:	bhi	23590 <main@@Base+0xd6f4>
   2357c:	mov	r0, r8
   23580:	mov	r1, r4
   23584:	mov	r2, sl
   23588:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2358c:	mov	r2, r0
   23590:	cmp	r2, sl
   23594:	beq	23784 <main@@Base+0xd8e8>
   23598:	ldrb	r0, [r2]
   2359c:	cmp	r0, #44	; 0x2c
   235a0:	bne	237e0 <main@@Base+0xd944>
   235a4:	add	r1, r2, #1
   235a8:	sub	r0, sl, r1
   235ac:	cmp	r0, #2
   235b0:	blt	235e0 <main@@Base+0xd744>
   235b4:	ldrb	r0, [r1]
   235b8:	cmp	r0, #32
   235bc:	bls	235d0 <main@@Base+0xd734>
   235c0:	mov	r2, r1
   235c4:	cmp	r2, sl
   235c8:	bne	235f8 <main@@Base+0xd75c>
   235cc:	b	2378c <main@@Base+0xd8f0>
   235d0:	bne	235e0 <main@@Base+0xd744>
   235d4:	ldrb	r0, [r2, #2]!
   235d8:	cmp	r0, #32
   235dc:	bhi	235f0 <main@@Base+0xd754>
   235e0:	mov	r0, r8
   235e4:	mov	r2, sl
   235e8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   235ec:	mov	r2, r0
   235f0:	cmp	r2, sl
   235f4:	beq	2378c <main@@Base+0xd8f0>
   235f8:	ldrb	r0, [r2]
   235fc:	cmp	r0, #125	; 0x7d
   23600:	bne	22b34 <main@@Base+0xcc98>
   23604:	b	237e8 <main@@Base+0xd94c>
   23608:	bne	23618 <main@@Base+0xd77c>
   2360c:	ldrb	r0, [r4, #2]!
   23610:	cmp	r0, #32
   23614:	bhi	23628 <main@@Base+0xd78c>
   23618:	mov	r0, r8
   2361c:	mov	r2, sl
   23620:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23624:	mov	r4, r0
   23628:	cmp	r4, sl
   2362c:	mov	r3, sl
   23630:	beq	23674 <main@@Base+0xd7d8>
   23634:	ldrb	r0, [r4]
   23638:	cmp	r0, #125	; 0x7d
   2363c:	bne	23670 <main@@Base+0xd7d4>
   23640:	add	r1, r4, #1
   23644:	sub	r0, sl, r1
   23648:	cmp	r0, #2
   2364c:	blt	23834 <main@@Base+0xd998>
   23650:	ldrb	r0, [r1]
   23654:	cmp	r0, #32
   23658:	bhi	23804 <main@@Base+0xd968>
   2365c:	bne	23834 <main@@Base+0xd998>
   23660:	ldrb	r0, [r4, #2]!
   23664:	cmp	r0, #32
   23668:	bhi	22a60 <main@@Base+0xcbc4>
   2366c:	b	23834 <main@@Base+0xd998>
   23670:	mov	r3, r4
   23674:	cmp	r3, sl
   23678:	mov	r1, sl
   2367c:	beq	236ac <main@@Base+0xd810>
   23680:	ldrb	r0, [r3]
   23684:	cmp	r0, #34	; 0x22
   23688:	bne	23694 <main@@Base+0xd7f8>
   2368c:	add	r1, r3, #1
   23690:	b	236ac <main@@Base+0xd810>
   23694:	mov	r1, r3
   23698:	mov	r0, r8
   2369c:	mov	r2, sl
   236a0:	mov	r3, #5
   236a4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   236a8:	mov	r1, r0
   236ac:	mov	r0, r8
   236b0:	mov	r2, sl
   236b4:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   236b8:	mov	r2, r0
   236bc:	sub	r0, sl, r0
   236c0:	cmp	r0, #2
   236c4:	blt	236f8 <main@@Base+0xd85c>
   236c8:	ldrb	r0, [r2]
   236cc:	cmp	r0, #32
   236d0:	bls	236e4 <main@@Base+0xd848>
   236d4:	mov	r3, r2
   236d8:	cmp	r3, sl
   236dc:	bne	23714 <main@@Base+0xd878>
   236e0:	b	23784 <main@@Base+0xd8e8>
   236e4:	bne	236f8 <main@@Base+0xd85c>
   236e8:	mov	r3, r2
   236ec:	ldrb	r0, [r3, #1]!
   236f0:	cmp	r0, #32
   236f4:	bhi	2370c <main@@Base+0xd870>
   236f8:	mov	r1, r2
   236fc:	mov	r0, r8
   23700:	mov	r2, sl
   23704:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23708:	mov	r3, r0
   2370c:	cmp	r3, sl
   23710:	beq	23784 <main@@Base+0xd8e8>
   23714:	ldrb	r0, [r3]
   23718:	cmp	r0, #44	; 0x2c
   2371c:	bne	23798 <main@@Base+0xd8fc>
   23720:	add	r1, r3, #1
   23724:	sub	r0, sl, r1
   23728:	cmp	r0, #2
   2372c:	blt	2375c <main@@Base+0xd8c0>
   23730:	ldrb	r0, [r1]
   23734:	cmp	r0, #32
   23738:	bls	2374c <main@@Base+0xd8b0>
   2373c:	mov	r3, r1
   23740:	cmp	r3, sl
   23744:	bne	23774 <main@@Base+0xd8d8>
   23748:	b	2378c <main@@Base+0xd8f0>
   2374c:	bne	2375c <main@@Base+0xd8c0>
   23750:	ldrb	r0, [r3, #2]!
   23754:	cmp	r0, #32
   23758:	bhi	2376c <main@@Base+0xd8d0>
   2375c:	mov	r0, r8
   23760:	mov	r2, sl
   23764:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23768:	mov	r3, r0
   2376c:	cmp	r3, sl
   23770:	beq	2378c <main@@Base+0xd8f0>
   23774:	ldrb	r0, [r3]
   23778:	cmp	r0, #125	; 0x7d
   2377c:	bne	23674 <main@@Base+0xd7d8>
   23780:	b	237a0 <main@@Base+0xd904>
   23784:	mov	r4, sl
   23788:	b	22a60 <main@@Base+0xcbc4>
   2378c:	mov	r0, r8
   23790:	mov	r1, sl
   23794:	b	23814 <main@@Base+0xd978>
   23798:	cmp	r0, #125	; 0x7d
   2379c:	bne	237d4 <main@@Base+0xd938>
   237a0:	add	r1, r3, #1
   237a4:	sub	r0, sl, r1
   237a8:	cmp	r0, #2
   237ac:	blt	23834 <main@@Base+0xd998>
   237b0:	ldrb	r0, [r1]
   237b4:	cmp	r0, #32
   237b8:	bhi	23804 <main@@Base+0xd968>
   237bc:	bne	23834 <main@@Base+0xd998>
   237c0:	ldrb	r0, [r3, #2]!
   237c4:	cmp	r0, #32
   237c8:	mov	r4, r3
   237cc:	bhi	22a60 <main@@Base+0xcbc4>
   237d0:	b	23834 <main@@Base+0xd998>
   237d4:	mov	r0, r8
   237d8:	mov	r1, r3
   237dc:	b	23814 <main@@Base+0xd978>
   237e0:	cmp	r0, #125	; 0x7d
   237e4:	bne	2380c <main@@Base+0xd970>
   237e8:	add	r1, r2, #1
   237ec:	sub	r0, sl, r1
   237f0:	cmp	r0, #2
   237f4:	blt	23834 <main@@Base+0xd998>
   237f8:	ldrb	r0, [r1]
   237fc:	cmp	r0, #32
   23800:	bls	23820 <main@@Base+0xd984>
   23804:	mov	r4, r1
   23808:	b	22a60 <main@@Base+0xcbc4>
   2380c:	mov	r0, r8
   23810:	mov	r1, r2
   23814:	mov	r2, sl
   23818:	mov	r3, #10
   2381c:	b	22a58 <main@@Base+0xcbbc>
   23820:	bne	23834 <main@@Base+0xd998>
   23824:	ldrb	r0, [r2, #2]!
   23828:	cmp	r0, #32
   2382c:	mov	r4, r2
   23830:	bhi	22a60 <main@@Base+0xcbc4>
   23834:	mov	r0, r8
   23838:	mov	r2, sl
   2383c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23840:	b	22a5c <main@@Base+0xcbc0>
   23844:	ldrdeq	r9, [r3], -r0
   23848:	andeq	r9, r3, r8, asr #32
   2384c:	muleq	r3, r0, lr
   23850:	andeq	r8, r3, ip, lsr sp
   23854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23858:	add	fp, sp, #28
   2385c:	sub	sp, sp, #20
   23860:	mov	r8, r1
   23864:	sub	r1, r2, r1
   23868:	cmp	r1, #8
   2386c:	movcs	r1, #8
   23870:	and	r1, r1, #15
   23874:	sub	r1, r1, #1
   23878:	cmp	r1, #7
   2387c:	bhi	23a84 <main@@Base+0xdbe8>
   23880:	str	r2, [sp, #16]
   23884:	str	r0, [sp, #12]
   23888:	add	r4, pc, #40	; 0x28
   2388c:	mov	lr, r3
   23890:	mov	sl, #0
   23894:	mov	ip, #0
   23898:	mov	r5, #0
   2389c:	mov	r2, #0
   238a0:	mov	r3, #0
   238a4:	mov	r7, #0
   238a8:	mov	r6, #0
   238ac:	ldr	r0, [r4, r1, lsl #2]
   238b0:	mov	r1, #0
   238b4:	add	pc, r4, r0
   238b8:	andeq	r0, r0, r4, rrx
   238bc:	andeq	r0, r0, ip, asr r0
   238c0:	andeq	r0, r0, r4, asr r0
   238c4:	andeq	r0, r0, ip, asr #32
   238c8:	andeq	r0, r0, r0, asr #32
   238cc:	andeq	r0, r0, r4, lsr r0
   238d0:	andeq	r0, r0, r4, lsr #32
   238d4:	andeq	r0, r0, r0, lsr #32
   238d8:	ldrb	ip, [r8, #7]
   238dc:	ldrb	r0, [r8, #6]
   238e0:	mov	r5, sl
   238e4:	orr	r0, ip, r0, lsl #8
   238e8:	mov	sl, r0
   238ec:	ldrb	r0, [r8, #5]
   238f0:	mov	r1, r5
   238f4:	orr	sl, sl, r0, lsl #16
   238f8:	ldrb	r0, [r8, #4]
   238fc:	mov	r2, r1
   23900:	orr	sl, sl, r0, lsl #24
   23904:	ldrb	r0, [r8, #3]
   23908:	orr	r3, r0, r2
   2390c:	ldrb	r0, [r8, #2]
   23910:	orr	r7, r3, r0, lsl #8
   23914:	ldrb	r0, [r8, #1]
   23918:	orr	r6, r7, r0, lsl #16
   2391c:	ldrb	r0, [r8]
   23920:	ldr	r5, [fp, #12]
   23924:	ldr	r7, [fp, #8]
   23928:	movw	r1, #28275	; 0x6e73
   2392c:	movt	r1, #19823	; 0x4d6f
   23930:	orr	r9, r6, r0, lsl #24
   23934:	movw	r0, #29184	; 0x7200
   23938:	movt	r0, #29797	; 0x7465
   2393c:	subs	r2, sl, r0
   23940:	sbcs	r2, r9, r1
   23944:	bcs	2398c <main@@Base+0xdaf0>
   23948:	movw	r1, #29696	; 0x7400
   2394c:	bic	r0, r9, #255	; 0xff
   23950:	movt	r1, #16748	; 0x416c
   23954:	teq	r0, r1
   23958:	bne	23a84 <main@@Base+0xdbe8>
   2395c:	ldr	r0, [sp, #12]
   23960:	ldr	r2, [sp, #16]
   23964:	mov	r1, r8
   23968:	mov	r3, #3
   2396c:	mov	r4, lr
   23970:	str	r5, [sp]
   23974:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   23978:	cmp	r0, r8
   2397c:	beq	23a84 <main@@Base+0xdbe8>
   23980:	mov	r1, #0
   23984:	mov	r2, #4
   23988:	b	239cc <main@@Base+0xdb30>
   2398c:	add	r2, r0, #50	; 0x32
   23990:	eor	r1, r9, r1
   23994:	eor	r2, sl, r2
   23998:	orrs	r2, r2, r1
   2399c:	bne	239dc <main@@Base+0xdb40>
   239a0:	ldr	r0, [sp, #12]
   239a4:	ldr	r2, [sp, #16]
   239a8:	mov	r1, r8
   239ac:	mov	r3, #8
   239b0:	mov	r4, lr
   239b4:	str	r5, [sp]
   239b8:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   239bc:	cmp	r0, r8
   239c0:	beq	23a84 <main@@Base+0xdbe8>
   239c4:	mov	r1, #0
   239c8:	mov	r2, #3
   239cc:	str	r2, [r7]
   239d0:	str	r1, [r7, #4]
   239d4:	str	r1, [r4]
   239d8:	b	23a80 <main@@Base+0xdbe4>
   239dc:	ldr	r6, [sp, #16]
   239e0:	ldr	r7, [sp, #12]
   239e4:	bic	r2, sl, #255	; 0xff
   239e8:	eor	r0, r2, r0
   239ec:	orrs	r0, r0, r1
   239f0:	bne	23a34 <main@@Base+0xdb98>
   239f4:	mov	r0, r7
   239f8:	mov	r1, r8
   239fc:	mov	r2, r6
   23a00:	mov	r3, #7
   23a04:	str	r5, [sp]
   23a08:	mov	r4, lr
   23a0c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   23a10:	mov	lr, r4
   23a14:	cmp	r0, r8
   23a18:	beq	23a34 <main@@Base+0xdb98>
   23a1c:	ldr	r3, [fp, #8]
   23a20:	mov	r2, #1
   23a24:	mov	r1, #0
   23a28:	str	r2, [r3]
   23a2c:	str	r1, [r3, #4]
   23a30:	b	23a7c <main@@Base+0xdbe0>
   23a34:	movw	r0, #20037	; 0x4e45
   23a38:	movt	r0, #20047	; 0x4e4f
   23a3c:	teq	r9, r0
   23a40:	bne	23a90 <main@@Base+0xdbf4>
   23a44:	mov	r0, r7
   23a48:	mov	r1, r8
   23a4c:	mov	r2, r6
   23a50:	mov	r3, #4
   23a54:	str	r5, [sp]
   23a58:	mov	r4, lr
   23a5c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   23a60:	mov	lr, r4
   23a64:	cmp	r0, r8
   23a68:	beq	23a90 <main@@Base+0xdbf4>
   23a6c:	ldr	r2, [fp, #8]
   23a70:	mov	r1, #0
   23a74:	str	r1, [r2]
   23a78:	str	r1, [r2, #4]
   23a7c:	str	r1, [lr]
   23a80:	mov	r8, r0
   23a84:	mov	r0, r8
   23a88:	sub	sp, fp, #28
   23a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a90:	movw	r0, #28016	; 0x6d70
   23a94:	movw	r1, #29556	; 0x7374
   23a98:	movt	r0, #21353	; 0x5369
   23a9c:	movt	r1, #21605	; 0x5465
   23aa0:	eor	r0, sl, r0
   23aa4:	eor	r1, r9, r1
   23aa8:	orrs	r0, r0, r1
   23aac:	bne	23a84 <main@@Base+0xdbe8>
   23ab0:	str	lr, [sp, #8]
   23ab4:	add	lr, r8, #8
   23ab8:	sub	r0, r6, lr
   23abc:	cmp	r0, #8
   23ac0:	movcs	r0, #8
   23ac4:	and	r0, r0, #15
   23ac8:	sub	r0, r0, #1
   23acc:	cmp	r0, #7
   23ad0:	bhi	23a84 <main@@Base+0xdbe8>
   23ad4:	add	r4, pc, #36	; 0x24
   23ad8:	mov	sl, #0
   23adc:	mov	ip, #0
   23ae0:	mov	r9, #0
   23ae4:	mov	r3, #0
   23ae8:	mov	r2, #0
   23aec:	mov	r6, #0
   23af0:	mov	r7, #0
   23af4:	ldr	r1, [r4, r0, lsl #2]
   23af8:	mov	r0, #0
   23afc:	add	pc, r4, r1
   23b00:	andeq	r0, r0, r4, rrx
   23b04:	andeq	r0, r0, ip, asr r0
   23b08:	andeq	r0, r0, r4, asr r0
   23b0c:	andeq	r0, r0, ip, asr #32
   23b10:	andeq	r0, r0, r0, asr #32
   23b14:	andeq	r0, r0, r4, lsr r0
   23b18:	andeq	r0, r0, r4, lsr #32
   23b1c:	andeq	r0, r0, r0, lsr #32
   23b20:	ldrb	ip, [r8, #15]
   23b24:	ldrb	r0, [r8, #14]
   23b28:	mov	r9, sl
   23b2c:	orr	r0, ip, r0, lsl #8
   23b30:	mov	sl, r0
   23b34:	ldrb	r0, [r8, #13]
   23b38:	orr	sl, sl, r0, lsl #16
   23b3c:	mov	r0, r9
   23b40:	ldrb	r1, [r8, #12]
   23b44:	mov	r3, r0
   23b48:	orr	sl, sl, r1, lsl #24
   23b4c:	ldrb	r0, [r8, #11]
   23b50:	orr	r2, r0, r3
   23b54:	ldrb	r0, [r8, #10]
   23b58:	orr	r6, r2, r0, lsl #8
   23b5c:	ldrb	r0, [r8, #9]
   23b60:	orr	r7, r6, r0, lsl #16
   23b64:	ldrb	r1, [lr]
   23b68:	movw	r0, #25943	; 0x6557
   23b6c:	movw	r2, #21601	; 0x5461
   23b70:	movt	r0, #25196	; 0x626c
   23b74:	movt	r2, #27749	; 0x6c65
   23b78:	eor	r0, sl, r0
   23b7c:	orr	r1, r7, r1, lsl #24
   23b80:	eor	r1, r1, r2
   23b84:	orrs	r0, r0, r1
   23b88:	bne	23a84 <main@@Base+0xdbe8>
   23b8c:	ldr	r0, [sp, #16]
   23b90:	add	r9, r8, #16
   23b94:	sub	r0, r0, r9
   23b98:	cmp	r0, #8
   23b9c:	movcs	r0, #8
   23ba0:	and	r0, r0, #15
   23ba4:	sub	r0, r0, #1
   23ba8:	cmp	r0, #7
   23bac:	bhi	23a84 <main@@Base+0xdbe8>
   23bb0:	add	r4, pc, #32
   23bb4:	mov	lr, #0
   23bb8:	mov	ip, #0
   23bbc:	mov	r2, #0
   23bc0:	mov	r3, #0
   23bc4:	mov	r7, #0
   23bc8:	mov	r6, #0
   23bcc:	ldr	r1, [r4, r0, lsl #2]
   23bd0:	mov	r0, #0
   23bd4:	add	pc, r4, r1
   23bd8:	andeq	r0, r0, ip, asr r0
   23bdc:	andeq	r0, r0, r4, asr r0
   23be0:	andeq	r0, r0, ip, asr #32
   23be4:	andeq	r0, r0, r4, asr #32
   23be8:	andeq	r0, r0, r8, lsr r0
   23bec:	andeq	r0, r0, r8, lsr #32
   23bf0:	andeq	r0, r0, r0, lsr #32
   23bf4:	andeq	r0, r0, r0, lsr #32
   23bf8:	ldrb	r0, [r8, #22]
   23bfc:	lsl	ip, r0, #8
   23c00:	ldrb	r0, [r8, #21]
   23c04:	orr	r1, ip, r0, lsl #16
   23c08:	mov	r0, lr
   23c0c:	mov	lr, r1
   23c10:	ldrb	r1, [r8, #20]
   23c14:	mov	r2, r0
   23c18:	orr	lr, lr, r1, lsl #24
   23c1c:	ldrb	r0, [r8, #19]
   23c20:	orr	r3, r0, r2
   23c24:	ldrb	r0, [r8, #18]
   23c28:	orr	r7, r3, r0, lsl #8
   23c2c:	ldrb	r0, [r8, #17]
   23c30:	orr	r6, r7, r0, lsl #16
   23c34:	ldrb	r1, [r9]
   23c38:	movw	r0, #27904	; 0x6d00
   23c3c:	movw	r2, #26693	; 0x6845
   23c40:	movt	r0, #28277	; 0x6e75
   23c44:	movt	r2, #26996	; 0x6974
   23c48:	eor	r0, lr, r0
   23c4c:	orr	r1, r6, r1, lsl #24
   23c50:	eor	r1, r1, r2
   23c54:	orrs	r0, r0, r1
   23c58:	bne	23a84 <main@@Base+0xdbe8>
   23c5c:	ldr	r0, [sp, #12]
   23c60:	ldr	r2, [sp, #16]
   23c64:	mov	r1, r9
   23c68:	mov	r3, #7
   23c6c:	str	r5, [sp]
   23c70:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   23c74:	ldr	r3, [fp, #8]
   23c78:	cmp	r0, r9
   23c7c:	beq	23a84 <main@@Base+0xdbe8>
   23c80:	mov	r2, #2
   23c84:	mov	r1, #0
   23c88:	str	r2, [r3]
   23c8c:	str	r1, [r3, #4]
   23c90:	ldr	r2, [sp, #8]
   23c94:	str	r1, [r2]
   23c98:	b	23a80 <main@@Base+0xdbe4>
   23c9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ca0:	add	fp, sp, #28
   23ca4:	sub	sp, sp, #44	; 0x2c
   23ca8:	mov	r7, r2
   23cac:	ldr	r2, [fp, #8]
   23cb0:	mov	r5, r0
   23cb4:	mov	r0, #0
   23cb8:	mov	sl, r3
   23cbc:	cmp	r1, r7
   23cc0:	strb	r0, [r2]
   23cc4:	beq	23cf0 <main@@Base+0xde54>
   23cc8:	ldrb	r0, [r1]
   23ccc:	cmp	r0, #34	; 0x22
   23cd0:	bne	23cdc <main@@Base+0xde40>
   23cd4:	add	r1, r1, #1
   23cd8:	b	23cf0 <main@@Base+0xde54>
   23cdc:	mov	r0, r5
   23ce0:	mov	r2, r7
   23ce4:	mov	r3, #5
   23ce8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23cec:	mov	r1, r0
   23cf0:	sub	r0, r7, r1
   23cf4:	cmp	r0, #2
   23cf8:	blt	23d2c <main@@Base+0xde90>
   23cfc:	ldrb	r0, [r1]
   23d00:	cmp	r0, #32
   23d04:	bls	23d18 <main@@Base+0xde7c>
   23d08:	mov	r6, r1
   23d0c:	cmp	r6, r7
   23d10:	bne	23d44 <main@@Base+0xdea8>
   23d14:	b	23e24 <main@@Base+0xdf88>
   23d18:	bne	23d2c <main@@Base+0xde90>
   23d1c:	mov	r6, r1
   23d20:	ldrb	r0, [r6, #1]!
   23d24:	cmp	r0, #32
   23d28:	bhi	23d3c <main@@Base+0xdea0>
   23d2c:	mov	r0, r5
   23d30:	mov	r2, r7
   23d34:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23d38:	mov	r6, r0
   23d3c:	cmp	r6, r7
   23d40:	beq	23e24 <main@@Base+0xdf88>
   23d44:	add	r0, sl, #4
   23d48:	mov	r1, #0
   23d4c:	add	r8, sp, #32
   23d50:	add	r9, sp, #28
   23d54:	str	sl, [sp, #16]
   23d58:	str	r1, [sp, #20]
   23d5c:	str	r0, [sp, #12]
   23d60:	ldr	r4, [sl]
   23d64:	mov	sl, r0
   23d68:	add	r0, sp, #24
   23d6c:	mov	r1, r6
   23d70:	mov	r2, r7
   23d74:	mov	r3, r9
   23d78:	str	r8, [sp]
   23d7c:	str	r0, [sp, #4]
   23d80:	mov	r0, r5
   23d84:	blx	r4
   23d88:	cmp	r0, r7
   23d8c:	beq	23e24 <main@@Base+0xdf88>
   23d90:	mov	r4, r0
   23d94:	cmp	r0, r6
   23d98:	bne	23dac <main@@Base+0xdf10>
   23d9c:	ldr	r4, [sl], #4
   23da0:	cmp	r4, #0
   23da4:	bne	23d68 <main@@Base+0xdecc>
   23da8:	b	23e2c <main@@Base+0xdf90>
   23dac:	ldr	r0, [sp, #28]
   23db0:	cmp	r0, #0
   23db4:	beq	23dd0 <main@@Base+0xdf34>
   23db8:	mov	r0, r5
   23dbc:	mov	r1, r4
   23dc0:	mov	r2, r7
   23dc4:	mov	r3, #8
   23dc8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23dcc:	b	23de8 <main@@Base+0xdf4c>
   23dd0:	ldr	r0, [sp, #32]
   23dd4:	ldr	r1, [sp, #36]	; 0x24
   23dd8:	orrs	r0, r0, r1
   23ddc:	movwne	r0, #1
   23de0:	str	r0, [sp, #20]
   23de4:	mov	r0, r4
   23de8:	ldr	sl, [sp, #16]
   23dec:	cmp	r0, r7
   23df0:	beq	23e24 <main@@Base+0xdf88>
   23df4:	ldr	r0, [fp, #8]
   23df8:	ldr	r2, [sp, #20]
   23dfc:	mov	r6, r4
   23e00:	mov	r1, r0
   23e04:	ldrb	r0, [r0]
   23e08:	add	r0, r0, r2
   23e0c:	strb	r0, [r1]
   23e10:	ldr	r0, [sp, #24]
   23e14:	cmp	r0, #0
   23e18:	ldr	r0, [sp, #12]
   23e1c:	bne	23d60 <main@@Base+0xdec4>
   23e20:	b	23e44 <main@@Base+0xdfa8>
   23e24:	mov	r4, r7
   23e28:	b	23e44 <main@@Base+0xdfa8>
   23e2c:	mov	r0, r5
   23e30:	mov	r1, r6
   23e34:	mov	r2, r7
   23e38:	mov	r3, #23
   23e3c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23e40:	mov	r4, r0
   23e44:	mov	r0, r4
   23e48:	sub	sp, fp, #28
   23e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e54:	add	fp, sp, #28
   23e58:	sub	sp, sp, #36	; 0x24
   23e5c:	mov	r6, r2
   23e60:	ldr	r2, [fp, #8]
   23e64:	mov	r5, r0
   23e68:	mov	r0, #0
   23e6c:	mov	r8, r3
   23e70:	cmp	r1, r6
   23e74:	str	r0, [r2]
   23e78:	beq	23ea4 <main@@Base+0xe008>
   23e7c:	ldrb	r0, [r1]
   23e80:	cmp	r0, #34	; 0x22
   23e84:	bne	23e90 <main@@Base+0xdff4>
   23e88:	add	r1, r1, #1
   23e8c:	b	23ea4 <main@@Base+0xe008>
   23e90:	mov	r0, r5
   23e94:	mov	r2, r6
   23e98:	mov	r3, #5
   23e9c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23ea0:	mov	r1, r0
   23ea4:	sub	r0, r6, r1
   23ea8:	cmp	r0, #2
   23eac:	blt	23ee0 <main@@Base+0xe044>
   23eb0:	ldrb	r0, [r1]
   23eb4:	cmp	r0, #32
   23eb8:	bls	23ecc <main@@Base+0xe030>
   23ebc:	mov	r7, r1
   23ec0:	cmp	r7, r6
   23ec4:	bne	23ef8 <main@@Base+0xe05c>
   23ec8:	b	23fa4 <main@@Base+0xe108>
   23ecc:	bne	23ee0 <main@@Base+0xe044>
   23ed0:	mov	r7, r1
   23ed4:	ldrb	r0, [r7, #1]!
   23ed8:	cmp	r0, #32
   23edc:	bhi	23ef0 <main@@Base+0xe054>
   23ee0:	mov	r0, r5
   23ee4:	mov	r2, r6
   23ee8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   23eec:	mov	r7, r0
   23ef0:	cmp	r7, r6
   23ef4:	beq	23fa4 <main@@Base+0xe108>
   23ef8:	add	r0, r8, #4
   23efc:	add	sl, sp, #24
   23f00:	add	r9, sp, #20
   23f04:	str	r8, [sp, #12]
   23f08:	str	r0, [sp, #8]
   23f0c:	ldr	r4, [r8]
   23f10:	mov	r8, r0
   23f14:	add	r0, sp, #16
   23f18:	mov	r1, r7
   23f1c:	mov	r2, r6
   23f20:	mov	r3, r9
   23f24:	str	sl, [sp]
   23f28:	str	r0, [sp, #4]
   23f2c:	mov	r0, r5
   23f30:	blx	r4
   23f34:	cmp	r0, r6
   23f38:	beq	23fa4 <main@@Base+0xe108>
   23f3c:	mov	r4, r0
   23f40:	cmp	r0, r7
   23f44:	bne	23f58 <main@@Base+0xe0bc>
   23f48:	ldr	r4, [r8], #4
   23f4c:	cmp	r4, #0
   23f50:	bne	23f14 <main@@Base+0xe078>
   23f54:	b	23fac <main@@Base+0xe110>
   23f58:	ldr	r0, [sp, #24]
   23f5c:	ldr	r1, [sp, #28]
   23f60:	bl	4543c <flatcc_json_printer_clear@@Base+0x718>
   23f64:	ldr	r2, [fp, #8]
   23f68:	ldr	r1, [sp, #20]
   23f6c:	vmov	s2, r0
   23f70:	ldr	r8, [sp, #12]
   23f74:	mov	r7, r4
   23f78:	vneg.f32	s4, s2
   23f7c:	vldr	s0, [r2]
   23f80:	cmp	r1, #0
   23f84:	vseleq.f32	s2, s2, s4
   23f88:	vadd.f32	s0, s0, s2
   23f8c:	vstr	s0, [r2]
   23f90:	ldr	r0, [sp, #16]
   23f94:	cmp	r0, #0
   23f98:	ldr	r0, [sp, #8]
   23f9c:	bne	23f0c <main@@Base+0xe070>
   23fa0:	b	23fc4 <main@@Base+0xe128>
   23fa4:	mov	r4, r6
   23fa8:	b	23fc4 <main@@Base+0xe128>
   23fac:	mov	r0, r5
   23fb0:	mov	r1, r7
   23fb4:	mov	r2, r6
   23fb8:	mov	r3, #23
   23fbc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   23fc0:	mov	r4, r0
   23fc4:	mov	r0, r4
   23fc8:	sub	sp, fp, #28
   23fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23fd4:	add	fp, sp, #28
   23fd8:	sub	sp, sp, #44	; 0x2c
   23fdc:	mov	r6, r2
   23fe0:	ldr	r2, [fp, #8]
   23fe4:	mov	r5, r0
   23fe8:	mov	r0, #0
   23fec:	mov	sl, r3
   23ff0:	cmp	r1, r6
   23ff4:	str	r0, [r2]
   23ff8:	beq	24024 <main@@Base+0xe188>
   23ffc:	ldrb	r0, [r1]
   24000:	cmp	r0, #34	; 0x22
   24004:	bne	24010 <main@@Base+0xe174>
   24008:	add	r1, r1, #1
   2400c:	b	24024 <main@@Base+0xe188>
   24010:	mov	r0, r5
   24014:	mov	r2, r6
   24018:	mov	r3, #5
   2401c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24020:	mov	r1, r0
   24024:	sub	r0, r6, r1
   24028:	cmp	r0, #2
   2402c:	blt	24060 <main@@Base+0xe1c4>
   24030:	ldrb	r0, [r1]
   24034:	cmp	r0, #32
   24038:	bls	2404c <main@@Base+0xe1b0>
   2403c:	mov	r7, r1
   24040:	cmp	r7, r6
   24044:	bne	24078 <main@@Base+0xe1dc>
   24048:	b	24190 <main@@Base+0xe2f4>
   2404c:	bne	24060 <main@@Base+0xe1c4>
   24050:	mov	r7, r1
   24054:	ldrb	r0, [r7, #1]!
   24058:	cmp	r0, #32
   2405c:	bhi	24070 <main@@Base+0xe1d4>
   24060:	mov	r0, r5
   24064:	mov	r2, r6
   24068:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2406c:	mov	r7, r0
   24070:	cmp	r7, r6
   24074:	beq	24190 <main@@Base+0xe2f4>
   24078:	add	r0, sl, #4
   2407c:	mov	r2, #0
   24080:	add	r8, sp, #32
   24084:	add	r9, sp, #28
   24088:	str	sl, [sp, #16]
   2408c:	str	r0, [sp, #12]
   24090:	ldr	r4, [sl]
   24094:	mov	sl, r0
   24098:	str	r2, [sp, #20]
   2409c:	add	r0, sp, #24
   240a0:	mov	r1, r7
   240a4:	mov	r2, r6
   240a8:	mov	r3, r9
   240ac:	str	r8, [sp]
   240b0:	str	r0, [sp, #4]
   240b4:	mov	r0, r5
   240b8:	blx	r4
   240bc:	cmp	r0, r6
   240c0:	beq	24190 <main@@Base+0xe2f4>
   240c4:	mov	r4, r0
   240c8:	cmp	r0, r7
   240cc:	bne	240e0 <main@@Base+0xe244>
   240d0:	ldr	r4, [sl], #4
   240d4:	cmp	r4, #0
   240d8:	bne	2409c <main@@Base+0xe200>
   240dc:	b	24198 <main@@Base+0xe2fc>
   240e0:	ldr	r2, [sp, #28]
   240e4:	ldr	r0, [sp, #32]
   240e8:	ldr	r1, [sp, #36]	; 0x24
   240ec:	cmp	r2, #0
   240f0:	beq	24118 <main@@Base+0xe27c>
   240f4:	ldr	sl, [sp, #16]
   240f8:	subs	r2, r0, #-2147483647	; 0x80000001
   240fc:	sbcs	r1, r1, #0
   24100:	bcc	2414c <main@@Base+0xe2b0>
   24104:	mov	r0, r5
   24108:	mov	r1, r4
   2410c:	mov	r2, r6
   24110:	mov	r3, #8
   24114:	b	24138 <main@@Base+0xe29c>
   24118:	ldr	sl, [sp, #16]
   2411c:	subs	r2, r0, #-2147483648	; 0x80000000
   24120:	sbcs	r1, r1, #0
   24124:	bcc	24154 <main@@Base+0xe2b8>
   24128:	mov	r0, r5
   2412c:	mov	r1, r4
   24130:	mov	r2, r6
   24134:	mov	r3, #7
   24138:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2413c:	ldr	r2, [sp, #20]
   24140:	cmp	r0, r6
   24144:	bne	24164 <main@@Base+0xe2c8>
   24148:	b	24190 <main@@Base+0xe2f4>
   2414c:	rsb	r2, r0, #0
   24150:	b	24158 <main@@Base+0xe2bc>
   24154:	mov	r2, r0
   24158:	mov	r0, r4
   2415c:	cmp	r0, r6
   24160:	beq	24190 <main@@Base+0xe2f4>
   24164:	ldr	r0, [fp, #8]
   24168:	mov	r7, r4
   2416c:	mov	r1, r0
   24170:	ldr	r0, [r0]
   24174:	add	r0, r0, r2
   24178:	str	r0, [r1]
   2417c:	ldr	r0, [sp, #24]
   24180:	cmp	r0, #0
   24184:	ldr	r0, [sp, #12]
   24188:	bne	24090 <main@@Base+0xe1f4>
   2418c:	b	241b0 <main@@Base+0xe314>
   24190:	mov	r4, r6
   24194:	b	241b0 <main@@Base+0xe314>
   24198:	mov	r0, r5
   2419c:	mov	r1, r7
   241a0:	mov	r2, r6
   241a4:	mov	r3, #23
   241a8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   241ac:	mov	r4, r0
   241b0:	mov	r0, r4
   241b4:	sub	sp, fp, #28
   241b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   241bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   241c0:	add	fp, sp, #28
   241c4:	sub	sp, sp, #44	; 0x2c
   241c8:	mov	r6, r2
   241cc:	ldr	r2, [fp, #8]
   241d0:	mov	r5, r0
   241d4:	mov	r0, #0
   241d8:	mov	sl, r3
   241dc:	cmp	r1, r6
   241e0:	str	r0, [r2]
   241e4:	str	r0, [r2, #4]
   241e8:	beq	24214 <main@@Base+0xe378>
   241ec:	ldrb	r0, [r1]
   241f0:	cmp	r0, #34	; 0x22
   241f4:	bne	24200 <main@@Base+0xe364>
   241f8:	add	r1, r1, #1
   241fc:	b	24214 <main@@Base+0xe378>
   24200:	mov	r0, r5
   24204:	mov	r2, r6
   24208:	mov	r3, #5
   2420c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24210:	mov	r1, r0
   24214:	sub	r0, r6, r1
   24218:	cmp	r0, #2
   2421c:	blt	24250 <main@@Base+0xe3b4>
   24220:	ldrb	r0, [r1]
   24224:	cmp	r0, #32
   24228:	bls	2423c <main@@Base+0xe3a0>
   2422c:	mov	r7, r1
   24230:	cmp	r7, r6
   24234:	bne	24268 <main@@Base+0xe3cc>
   24238:	b	24388 <main@@Base+0xe4ec>
   2423c:	bne	24250 <main@@Base+0xe3b4>
   24240:	mov	r7, r1
   24244:	ldrb	r0, [r7, #1]!
   24248:	cmp	r0, #32
   2424c:	bhi	24260 <main@@Base+0xe3c4>
   24250:	mov	r0, r5
   24254:	mov	r2, r6
   24258:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2425c:	mov	r7, r0
   24260:	cmp	r7, r6
   24264:	beq	24388 <main@@Base+0xe4ec>
   24268:	add	r0, sl, #4
   2426c:	mov	r1, #0
   24270:	add	r8, sp, #32
   24274:	add	r9, sp, #28
   24278:	mov	r2, #0
   2427c:	str	sl, [sp, #12]
   24280:	str	r0, [sp, #8]
   24284:	ldr	r4, [sl]
   24288:	mov	sl, r0
   2428c:	str	r2, [sp, #16]
   24290:	str	r1, [sp, #20]
   24294:	add	r0, sp, #24
   24298:	mov	r1, r7
   2429c:	mov	r2, r6
   242a0:	mov	r3, r9
   242a4:	str	r8, [sp]
   242a8:	str	r0, [sp, #4]
   242ac:	mov	r0, r5
   242b0:	blx	r4
   242b4:	cmp	r0, r6
   242b8:	beq	24388 <main@@Base+0xe4ec>
   242bc:	mov	r4, r0
   242c0:	cmp	r0, r7
   242c4:	bne	242d8 <main@@Base+0xe43c>
   242c8:	ldr	r4, [sl], #4
   242cc:	cmp	r4, #0
   242d0:	bne	24294 <main@@Base+0xe3f8>
   242d4:	b	24390 <main@@Base+0xe4f4>
   242d8:	add	r2, sp, #28
   242dc:	ldm	r2, {r0, r1, r2}
   242e0:	cmp	r0, #0
   242e4:	beq	2430c <main@@Base+0xe470>
   242e8:	ldr	sl, [sp, #12]
   242ec:	subs	r0, r1, #1
   242f0:	sbcs	r0, r2, #-2147483648	; 0x80000000
   242f4:	bcc	24344 <main@@Base+0xe4a8>
   242f8:	mov	r0, r5
   242fc:	mov	r1, r4
   24300:	mov	r2, r6
   24304:	mov	r3, #8
   24308:	b	2432c <main@@Base+0xe490>
   2430c:	ldr	sl, [sp, #12]
   24310:	cmn	r2, #1
   24314:	mov	r0, r4
   24318:	bgt	24338 <main@@Base+0xe49c>
   2431c:	mov	r0, r5
   24320:	mov	r1, r4
   24324:	mov	r2, r6
   24328:	mov	r3, #7
   2432c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24330:	ldr	r1, [sp, #20]
   24334:	ldr	r2, [sp, #16]
   24338:	cmp	r0, r6
   2433c:	bne	24358 <main@@Base+0xe4bc>
   24340:	b	24388 <main@@Base+0xe4ec>
   24344:	rsbs	r1, r1, #0
   24348:	mov	r0, r4
   2434c:	rsc	r2, r2, #0
   24350:	cmp	r0, r6
   24354:	beq	24388 <main@@Base+0xe4ec>
   24358:	ldr	r0, [fp, #8]
   2435c:	mov	r7, r0
   24360:	ldm	r0, {r0, r3}
   24364:	adds	r0, r0, r1
   24368:	adc	r3, r3, r2
   2436c:	stm	r7, {r0, r3}
   24370:	mov	r7, r4
   24374:	ldr	r0, [sp, #24]
   24378:	cmp	r0, #0
   2437c:	ldr	r0, [sp, #8]
   24380:	bne	24284 <main@@Base+0xe3e8>
   24384:	b	243a8 <main@@Base+0xe50c>
   24388:	mov	r4, r6
   2438c:	b	243a8 <main@@Base+0xe50c>
   24390:	mov	r0, r5
   24394:	mov	r1, r7
   24398:	mov	r2, r6
   2439c:	mov	r3, #23
   243a0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   243a4:	mov	r4, r0
   243a8:	mov	r0, r4
   243ac:	sub	sp, fp, #28
   243b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243b8:	add	fp, sp, #28
   243bc:	sub	sp, sp, #44	; 0x2c
   243c0:	mov	r6, r2
   243c4:	ldr	r2, [fp, #8]
   243c8:	mov	r5, r0
   243cc:	mov	r0, #0
   243d0:	mov	sl, r3
   243d4:	cmp	r1, r6
   243d8:	str	r0, [r2]
   243dc:	beq	24408 <main@@Base+0xe56c>
   243e0:	ldrb	r0, [r1]
   243e4:	cmp	r0, #34	; 0x22
   243e8:	bne	243f4 <main@@Base+0xe558>
   243ec:	add	r1, r1, #1
   243f0:	b	24408 <main@@Base+0xe56c>
   243f4:	mov	r0, r5
   243f8:	mov	r2, r6
   243fc:	mov	r3, #5
   24400:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24404:	mov	r1, r0
   24408:	sub	r0, r6, r1
   2440c:	cmp	r0, #2
   24410:	blt	24444 <main@@Base+0xe5a8>
   24414:	ldrb	r0, [r1]
   24418:	cmp	r0, #32
   2441c:	bls	24430 <main@@Base+0xe594>
   24420:	mov	r7, r1
   24424:	cmp	r7, r6
   24428:	bne	2445c <main@@Base+0xe5c0>
   2442c:	b	24568 <main@@Base+0xe6cc>
   24430:	bne	24444 <main@@Base+0xe5a8>
   24434:	mov	r7, r1
   24438:	ldrb	r0, [r7, #1]!
   2443c:	cmp	r0, #32
   24440:	bhi	24454 <main@@Base+0xe5b8>
   24444:	mov	r0, r5
   24448:	mov	r2, r6
   2444c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   24450:	mov	r7, r0
   24454:	cmp	r7, r6
   24458:	beq	24568 <main@@Base+0xe6cc>
   2445c:	add	r0, sl, #4
   24460:	mov	r1, #0
   24464:	add	r8, sp, #32
   24468:	add	r9, sp, #28
   2446c:	str	sl, [sp, #16]
   24470:	str	r1, [sp, #20]
   24474:	str	r0, [sp, #12]
   24478:	ldr	r4, [sl]
   2447c:	mov	sl, r0
   24480:	add	r0, sp, #24
   24484:	mov	r1, r7
   24488:	mov	r2, r6
   2448c:	mov	r3, r9
   24490:	str	r8, [sp]
   24494:	str	r0, [sp, #4]
   24498:	mov	r0, r5
   2449c:	blx	r4
   244a0:	cmp	r0, r6
   244a4:	beq	24568 <main@@Base+0xe6cc>
   244a8:	mov	r4, r0
   244ac:	cmp	r0, r7
   244b0:	bne	244c4 <main@@Base+0xe628>
   244b4:	ldr	r4, [sl], #4
   244b8:	cmp	r4, #0
   244bc:	bne	24480 <main@@Base+0xe5e4>
   244c0:	b	24570 <main@@Base+0xe6d4>
   244c4:	ldr	r0, [sp, #28]
   244c8:	cmp	r0, #0
   244cc:	beq	244f4 <main@@Base+0xe658>
   244d0:	mov	r0, r5
   244d4:	mov	r1, r4
   244d8:	mov	r2, r6
   244dc:	mov	r3, #8
   244e0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   244e4:	ldr	sl, [sp, #16]
   244e8:	cmp	r0, r6
   244ec:	bne	24538 <main@@Base+0xe69c>
   244f0:	b	24568 <main@@Base+0xe6cc>
   244f4:	ldr	r0, [sp, #36]	; 0x24
   244f8:	ldr	sl, [sp, #16]
   244fc:	cmp	r0, #0
   24500:	beq	24524 <main@@Base+0xe688>
   24504:	mov	r0, r5
   24508:	mov	r1, r4
   2450c:	mov	r2, r6
   24510:	mov	r3, #7
   24514:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24518:	cmp	r0, r6
   2451c:	bne	24538 <main@@Base+0xe69c>
   24520:	b	24568 <main@@Base+0xe6cc>
   24524:	ldr	r0, [sp, #32]
   24528:	str	r0, [sp, #20]
   2452c:	mov	r0, r4
   24530:	cmp	r0, r6
   24534:	beq	24568 <main@@Base+0xe6cc>
   24538:	ldr	r0, [fp, #8]
   2453c:	ldr	r2, [sp, #20]
   24540:	mov	r7, r4
   24544:	mov	r1, r0
   24548:	ldr	r0, [r0]
   2454c:	add	r0, r0, r2
   24550:	str	r0, [r1]
   24554:	ldr	r0, [sp, #24]
   24558:	cmp	r0, #0
   2455c:	ldr	r0, [sp, #12]
   24560:	bne	24478 <main@@Base+0xe5dc>
   24564:	b	24588 <main@@Base+0xe6ec>
   24568:	mov	r4, r6
   2456c:	b	24588 <main@@Base+0xe6ec>
   24570:	mov	r0, r5
   24574:	mov	r1, r7
   24578:	mov	r2, r6
   2457c:	mov	r3, #23
   24580:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24584:	mov	r4, r0
   24588:	mov	r0, r4
   2458c:	sub	sp, fp, #28
   24590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24598:	add	fp, sp, #28
   2459c:	sub	sp, sp, #44	; 0x2c
   245a0:	mov	r7, r2
   245a4:	ldr	r2, [fp, #8]
   245a8:	mov	r5, r0
   245ac:	mov	r0, #0
   245b0:	mov	sl, r3
   245b4:	cmp	r1, r7
   245b8:	str	r0, [r2]
   245bc:	str	r0, [r2, #4]
   245c0:	beq	245ec <main@@Base+0xe750>
   245c4:	ldrb	r0, [r1]
   245c8:	cmp	r0, #34	; 0x22
   245cc:	bne	245d8 <main@@Base+0xe73c>
   245d0:	add	r1, r1, #1
   245d4:	b	245ec <main@@Base+0xe750>
   245d8:	mov	r0, r5
   245dc:	mov	r2, r7
   245e0:	mov	r3, #5
   245e4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   245e8:	mov	r1, r0
   245ec:	sub	r0, r7, r1
   245f0:	cmp	r0, #2
   245f4:	blt	24628 <main@@Base+0xe78c>
   245f8:	ldrb	r0, [r1]
   245fc:	cmp	r0, #32
   24600:	bls	24614 <main@@Base+0xe778>
   24604:	mov	r6, r1
   24608:	cmp	r6, r7
   2460c:	bne	24640 <main@@Base+0xe7a4>
   24610:	b	2472c <main@@Base+0xe890>
   24614:	bne	24628 <main@@Base+0xe78c>
   24618:	mov	r6, r1
   2461c:	ldrb	r0, [r6, #1]!
   24620:	cmp	r0, #32
   24624:	bhi	24638 <main@@Base+0xe79c>
   24628:	mov	r0, r5
   2462c:	mov	r2, r7
   24630:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   24634:	mov	r6, r0
   24638:	cmp	r6, r7
   2463c:	beq	2472c <main@@Base+0xe890>
   24640:	mov	r1, #0
   24644:	add	r0, sl, #4
   24648:	add	r8, sp, #32
   2464c:	add	r9, sp, #28
   24650:	str	sl, [sp, #12]
   24654:	str	r1, [sp, #20]
   24658:	mov	r1, #0
   2465c:	str	r0, [sp, #8]
   24660:	str	r1, [sp, #16]
   24664:	ldr	r4, [sl]
   24668:	mov	sl, r0
   2466c:	add	r0, sp, #24
   24670:	mov	r1, r6
   24674:	mov	r2, r7
   24678:	mov	r3, r9
   2467c:	str	r8, [sp]
   24680:	str	r0, [sp, #4]
   24684:	mov	r0, r5
   24688:	blx	r4
   2468c:	cmp	r0, r7
   24690:	beq	2472c <main@@Base+0xe890>
   24694:	mov	r4, r0
   24698:	cmp	r0, r6
   2469c:	bne	246b0 <main@@Base+0xe814>
   246a0:	ldr	r4, [sl], #4
   246a4:	cmp	r4, #0
   246a8:	bne	2466c <main@@Base+0xe7d0>
   246ac:	b	24734 <main@@Base+0xe898>
   246b0:	ldr	r0, [sp, #28]
   246b4:	cmp	r0, #0
   246b8:	beq	246d4 <main@@Base+0xe838>
   246bc:	mov	r0, r5
   246c0:	mov	r1, r4
   246c4:	mov	r2, r7
   246c8:	mov	r3, #8
   246cc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   246d0:	b	246e8 <main@@Base+0xe84c>
   246d4:	ldr	r0, [sp, #32]
   246d8:	str	r0, [sp, #20]
   246dc:	ldr	r0, [sp, #36]	; 0x24
   246e0:	str	r0, [sp, #16]
   246e4:	mov	r0, r4
   246e8:	ldr	sl, [sp, #12]
   246ec:	cmp	r0, r7
   246f0:	beq	2472c <main@@Base+0xe890>
   246f4:	ldr	r0, [fp, #8]
   246f8:	ldr	r3, [sp, #20]
   246fc:	mov	r6, r4
   24700:	mov	r2, r0
   24704:	ldrd	r0, [r0]
   24708:	adds	r0, r0, r3
   2470c:	ldr	r3, [sp, #16]
   24710:	adc	r1, r1, r3
   24714:	strd	r0, [r2]
   24718:	ldr	r0, [sp, #24]
   2471c:	cmp	r0, #0
   24720:	ldr	r0, [sp, #8]
   24724:	bne	24664 <main@@Base+0xe7c8>
   24728:	b	2474c <main@@Base+0xe8b0>
   2472c:	mov	r4, r7
   24730:	b	2474c <main@@Base+0xe8b0>
   24734:	mov	r0, r5
   24738:	mov	r1, r6
   2473c:	mov	r2, r7
   24740:	mov	r3, #23
   24744:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   24748:	mov	r4, r0
   2474c:	mov	r0, r4
   24750:	sub	sp, fp, #28
   24754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2475c:	add	fp, sp, #28
   24760:	sub	sp, sp, #36	; 0x24
   24764:	mov	r6, r2
   24768:	ldr	r2, [fp, #8]
   2476c:	mov	r5, r0
   24770:	mov	r0, #0
   24774:	mov	r8, r3
   24778:	cmp	r1, r6
   2477c:	str	r0, [r2]
   24780:	str	r0, [r2, #4]
   24784:	beq	247b0 <main@@Base+0xe914>
   24788:	ldrb	r0, [r1]
   2478c:	cmp	r0, #34	; 0x22
   24790:	bne	2479c <main@@Base+0xe900>
   24794:	add	r1, r1, #1
   24798:	b	247b0 <main@@Base+0xe914>
   2479c:	mov	r0, r5
   247a0:	mov	r2, r6
   247a4:	mov	r3, #5
   247a8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   247ac:	mov	r1, r0
   247b0:	sub	r0, r6, r1
   247b4:	cmp	r0, #2
   247b8:	blt	247ec <main@@Base+0xe950>
   247bc:	ldrb	r0, [r1]
   247c0:	cmp	r0, #32
   247c4:	bls	247d8 <main@@Base+0xe93c>
   247c8:	mov	r7, r1
   247cc:	cmp	r7, r6
   247d0:	bne	24804 <main@@Base+0xe968>
   247d4:	b	248b8 <main@@Base+0xea1c>
   247d8:	bne	247ec <main@@Base+0xe950>
   247dc:	mov	r7, r1
   247e0:	ldrb	r0, [r7, #1]!
   247e4:	cmp	r0, #32
   247e8:	bhi	247fc <main@@Base+0xe960>
   247ec:	mov	r0, r5
   247f0:	mov	r2, r6
   247f4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   247f8:	mov	r7, r0
   247fc:	cmp	r7, r6
   24800:	beq	248b8 <main@@Base+0xea1c>
   24804:	add	r0, r8, #4
   24808:	add	sl, sp, #24
   2480c:	add	r9, sp, #20
   24810:	str	r8, [sp, #12]
   24814:	str	r0, [sp, #8]
   24818:	ldr	r4, [r8]
   2481c:	mov	r8, r0
   24820:	add	r0, sp, #16
   24824:	mov	r1, r7
   24828:	mov	r2, r6
   2482c:	mov	r3, r9
   24830:	str	sl, [sp]
   24834:	str	r0, [sp, #4]
   24838:	mov	r0, r5
   2483c:	blx	r4
   24840:	cmp	r0, r6
   24844:	beq	248b8 <main@@Base+0xea1c>
   24848:	mov	r4, r0
   2484c:	cmp	r0, r7
   24850:	bne	24864 <main@@Base+0xe9c8>
   24854:	ldr	r4, [r8], #4
   24858:	cmp	r4, #0
   2485c:	bne	24820 <main@@Base+0xe984>
   24860:	b	248c0 <main@@Base+0xea24>
   24864:	ldr	r0, [sp, #24]
   24868:	ldr	r1, [sp, #28]
   2486c:	bl	45204 <flatcc_json_printer_clear@@Base+0x4e0>
   24870:	ldr	r2, [fp, #8]
   24874:	ldr	r3, [sp, #20]
   24878:	vmov	d17, r0, r1
   2487c:	ldr	r8, [sp, #12]
   24880:	vldr	d16, [r2]
   24884:	mov	r7, r2
   24888:	eor	r2, r1, #-2147483648	; 0x80000000
   2488c:	cmp	r3, #0
   24890:	vmov	d18, r0, r2
   24894:	vseleq.f64	d17, d17, d18
   24898:	vadd.f64	d16, d16, d17
   2489c:	vstr	d16, [r7]
   248a0:	mov	r7, r4
   248a4:	ldr	r0, [sp, #16]
   248a8:	cmp	r0, #0
   248ac:	ldr	r0, [sp, #8]
   248b0:	bne	24818 <main@@Base+0xe97c>
   248b4:	b	248d8 <main@@Base+0xea3c>
   248b8:	mov	r4, r6
   248bc:	b	248d8 <main@@Base+0xea3c>
   248c0:	mov	r0, r5
   248c4:	mov	r1, r7
   248c8:	mov	r2, r6
   248cc:	mov	r3, #23
   248d0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   248d4:	mov	r4, r0
   248d8:	mov	r0, r4
   248dc:	sub	sp, fp, #28
   248e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   248e8:	add	fp, sp, #28
   248ec:	sub	sp, sp, #12
   248f0:	mov	sl, r1
   248f4:	sub	r1, r2, r1
   248f8:	cmp	r1, #8
   248fc:	movcs	r1, #8
   24900:	and	r1, r1, #15
   24904:	sub	r1, r1, #1
   24908:	cmp	r1, #7
   2490c:	bhi	24b50 <main@@Base+0xecb4>
   24910:	str	r3, [sp, #8]
   24914:	add	r3, pc, #36	; 0x24
   24918:	mov	r8, #0
   2491c:	mov	ip, #0
   24920:	mov	lr, #0
   24924:	mov	r5, #0
   24928:	mov	r6, #0
   2492c:	mov	r7, #0
   24930:	mov	r4, #0
   24934:	ldr	r9, [r3, r1, lsl #2]
   24938:	mov	r1, #0
   2493c:	add	pc, r3, r9
   24940:	andeq	r0, r0, r4, rrx
   24944:	andeq	r0, r0, ip, asr r0
   24948:	andeq	r0, r0, r4, asr r0
   2494c:	andeq	r0, r0, ip, asr #32
   24950:	andeq	r0, r0, r0, asr #32
   24954:	andeq	r0, r0, r4, lsr r0
   24958:	andeq	r0, r0, r4, lsr #32
   2495c:	andeq	r0, r0, r0, lsr #32
   24960:	ldrb	ip, [sl, #7]
   24964:	ldrb	r1, [sl, #6]
   24968:	mov	lr, r8
   2496c:	orr	r1, ip, r1, lsl #8
   24970:	mov	r8, r1
   24974:	ldrb	r1, [sl, #5]
   24978:	mov	r5, lr
   2497c:	orr	r8, r8, r1, lsl #16
   24980:	ldrb	r1, [sl, #4]
   24984:	mov	r6, r5
   24988:	orr	r8, r8, r1, lsl #24
   2498c:	ldrb	r1, [sl, #3]
   24990:	orr	r7, r1, r6
   24994:	ldrb	r1, [sl, #2]
   24998:	orr	r4, r7, r1, lsl #8
   2499c:	ldrb	r1, [sl, #1]
   249a0:	orr	r1, r4, r1, lsl #16
   249a4:	ldrb	r7, [sl]
   249a8:	movw	r3, #28276	; 0x6e74
   249ac:	ldr	r6, [fp, #12]
   249b0:	movt	r3, #29285	; 0x7265
   249b4:	eor	r3, r8, r3
   249b8:	orr	r1, r1, r7, lsl #24
   249bc:	movw	r7, #20577	; 0x5061
   249c0:	movt	r7, #18798	; 0x496e
   249c4:	eor	r7, r1, r7
   249c8:	orrs	r3, r3, r7
   249cc:	bne	24b04 <main@@Base+0xec68>
   249d0:	add	r8, sl, #8
   249d4:	sub	r1, r2, r8
   249d8:	cmp	r1, #8
   249dc:	movcs	r1, #8
   249e0:	and	r1, r1, #15
   249e4:	sub	r1, r1, #1
   249e8:	cmp	r1, #7
   249ec:	bhi	24b50 <main@@Base+0xecb4>
   249f0:	str	r0, [sp, #4]
   249f4:	add	r3, pc, #36	; 0x24
   249f8:	mov	r6, #0
   249fc:	mov	r0, #0
   24a00:	mov	r9, #0
   24a04:	mov	r7, #0
   24a08:	mov	r5, #0
   24a0c:	mov	r4, #0
   24a10:	mov	ip, #0
   24a14:	ldr	lr, [r3, r1, lsl #2]
   24a18:	mov	r1, #0
   24a1c:	add	pc, r3, lr
   24a20:	andeq	r0, r0, r4, rrx
   24a24:	andeq	r0, r0, ip, asr r0
   24a28:	andeq	r0, r0, r4, asr r0
   24a2c:	andeq	r0, r0, ip, asr #32
   24a30:	andeq	r0, r0, r0, asr #32
   24a34:	andeq	r0, r0, r4, lsr r0
   24a38:	andeq	r0, r0, r4, lsr #32
   24a3c:	andeq	r0, r0, r0, lsr #32
   24a40:	ldrb	r0, [sl, #15]
   24a44:	ldrb	r1, [sl, #14]
   24a48:	mov	r9, r6
   24a4c:	orr	r0, r0, r1, lsl #8
   24a50:	mov	r6, r0
   24a54:	ldrb	r0, [sl, #13]
   24a58:	mov	r7, r9
   24a5c:	orr	r6, r6, r0, lsl #16
   24a60:	ldrb	r0, [sl, #12]
   24a64:	mov	r5, r7
   24a68:	orr	r6, r6, r0, lsl #24
   24a6c:	ldrb	r0, [sl, #11]
   24a70:	orr	r1, r0, r5
   24a74:	ldrb	r0, [sl, #10]
   24a78:	orr	r4, r1, r0, lsl #8
   24a7c:	ldrb	r0, [sl, #9]
   24a80:	orr	ip, r4, r0, lsl #16
   24a84:	ldrb	r1, [r8]
   24a88:	movw	r0, #24931	; 0x6163
   24a8c:	movw	r3, #28005	; 0x6d65
   24a90:	movt	r0, #29552	; 0x7370
   24a94:	movt	r3, #20065	; 0x4e61
   24a98:	eor	r0, r6, r0
   24a9c:	orr	r1, ip, r1, lsl #24
   24aa0:	eor	r1, r1, r3
   24aa4:	orrs	r0, r0, r1
   24aa8:	bne	24b50 <main@@Base+0xecb4>
   24aac:	add	r6, sl, #16
   24ab0:	mov	r1, #-268435456	; 0xf0000000
   24ab4:	sub	r0, r2, r6
   24ab8:	cmp	r0, #8
   24abc:	movcs	r0, #8
   24ac0:	add	r0, r1, r0, lsl #28
   24ac4:	asr	r0, r0, #28
   24ac8:	cmp	r0, #0
   24acc:	blt	24b50 <main@@Base+0xecb4>
   24ad0:	ldrb	r0, [r6]
   24ad4:	cmp	r0, #101	; 0x65
   24ad8:	bne	24b50 <main@@Base+0xecb4>
   24adc:	ldr	r0, [fp, #12]
   24ae0:	mov	r1, r6
   24ae4:	mov	r3, #1
   24ae8:	mov	r8, #1
   24aec:	str	r0, [sp]
   24af0:	ldr	r0, [sp, #4]
   24af4:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24af8:	cmp	r0, r6
   24afc:	bne	24b30 <main@@Base+0xec94>
   24b00:	b	24b50 <main@@Base+0xecb4>
   24b04:	movw	r3, #20037	; 0x4e45
   24b08:	movt	r3, #20047	; 0x4e4f
   24b0c:	teq	r1, r3
   24b10:	bne	24b50 <main@@Base+0xecb4>
   24b14:	mov	r1, sl
   24b18:	mov	r3, #4
   24b1c:	str	r6, [sp]
   24b20:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24b24:	cmp	r0, sl
   24b28:	beq	24b50 <main@@Base+0xecb4>
   24b2c:	mov	r8, #0
   24b30:	mov	sl, r0
   24b34:	ldr	r0, [fp, #8]
   24b38:	mov	r1, #0
   24b3c:	str	r8, [r0]
   24b40:	str	r1, [r0, #4]
   24b44:	mov	r0, #0
   24b48:	ldr	r1, [sp, #8]
   24b4c:	str	r0, [r1]
   24b50:	mov	r0, sl
   24b54:	sub	sp, fp, #28
   24b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b60:	add	fp, sp, #28
   24b64:	sub	sp, sp, #12
   24b68:	mov	r5, r1
   24b6c:	sub	r1, r2, r1
   24b70:	cmp	r1, #8
   24b74:	movcs	r1, #8
   24b78:	and	r1, r1, #15
   24b7c:	sub	r1, r1, #1
   24b80:	cmp	r1, #7
   24b84:	bhi	24d04 <main@@Base+0xee68>
   24b88:	str	r3, [sp, #8]
   24b8c:	add	r6, pc, #36	; 0x24
   24b90:	mov	lr, #0
   24b94:	mov	ip, #0
   24b98:	mov	r9, #0
   24b9c:	mov	sl, #0
   24ba0:	mov	r4, #0
   24ba4:	mov	r3, #0
   24ba8:	mov	r7, #0
   24bac:	ldr	r8, [r6, r1, lsl #2]
   24bb0:	mov	r1, #0
   24bb4:	add	pc, r6, r8
   24bb8:	andeq	r0, r0, r4, rrx
   24bbc:	andeq	r0, r0, ip, asr r0
   24bc0:	andeq	r0, r0, r4, asr r0
   24bc4:	andeq	r0, r0, ip, asr #32
   24bc8:	andeq	r0, r0, r0, asr #32
   24bcc:	andeq	r0, r0, r4, lsr r0
   24bd0:	andeq	r0, r0, r4, lsr #32
   24bd4:	andeq	r0, r0, r0, lsr #32
   24bd8:	ldrb	ip, [r5, #7]
   24bdc:	ldrb	r1, [r5, #6]
   24be0:	mov	r9, lr
   24be4:	orr	r1, ip, r1, lsl #8
   24be8:	mov	lr, r1
   24bec:	ldrb	r1, [r5, #5]
   24bf0:	mov	sl, r9
   24bf4:	orr	lr, lr, r1, lsl #16
   24bf8:	ldrb	r1, [r5, #4]
   24bfc:	orr	lr, lr, r1, lsl #24
   24c00:	mov	r1, sl
   24c04:	ldrb	r3, [r5, #3]
   24c08:	orr	r4, r3, r1
   24c0c:	ldrb	r1, [r5, #2]
   24c10:	orr	r3, r4, r1, lsl #8
   24c14:	ldrb	r1, [r5, #1]
   24c18:	orr	r7, r3, r1, lsl #16
   24c1c:	ldrb	r1, [r5]
   24c20:	ldr	r3, [fp, #12]
   24c24:	ldr	r8, [fp, #8]
   24c28:	orr	r1, r7, r1, lsl #24
   24c2c:	movw	r7, #30769	; 0x7831
   24c30:	movt	r7, #26725	; 0x6865
   24c34:	cmp	r1, r7
   24c38:	bhi	24c68 <main@@Base+0xedcc>
   24c3c:	teq	r1, r7
   24c40:	bne	24d04 <main@@Base+0xee68>
   24c44:	str	r3, [sp]
   24c48:	mov	r1, r5
   24c4c:	mov	r3, #4
   24c50:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24c54:	cmp	r0, r5
   24c58:	beq	24d04 <main@@Base+0xee68>
   24c5c:	mov	r1, #0
   24c60:	mov	r2, #3
   24c64:	b	24cf0 <main@@Base+0xee54>
   24c68:	lsr	r4, lr, #16
   24c6c:	movw	r6, #25959	; 0x6567
   24c70:	movw	r7, #26725	; 0x6865
   24c74:	orr	r4, r4, r1, lsl #16
   24c78:	movt	r6, #30830	; 0x786e
   24c7c:	eor	r7, r7, r1, lsr #16
   24c80:	eor	r6, r4, r6
   24c84:	orrs	r7, r6, r7
   24c88:	bne	24cbc <main@@Base+0xee20>
   24c8c:	str	r3, [sp]
   24c90:	mov	r1, r5
   24c94:	mov	r3, #6
   24c98:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24c9c:	cmp	r0, r5
   24ca0:	beq	24d04 <main@@Base+0xee68>
   24ca4:	mvn	r2, #1
   24ca8:	mvn	r1, #0
   24cac:	str	r2, [r8]
   24cb0:	str	r1, [r8, #4]
   24cb4:	mov	r1, #1
   24cb8:	b	24cf8 <main@@Base+0xee5c>
   24cbc:	movw	r7, #30770	; 0x7832
   24cc0:	movt	r7, #26725	; 0x6865
   24cc4:	teq	r1, r7
   24cc8:	bne	24d04 <main@@Base+0xee68>
   24ccc:	str	r3, [sp]
   24cd0:	mov	r1, r5
   24cd4:	mov	r3, #4
   24cd8:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24cdc:	cmp	r0, r5
   24ce0:	beq	24d04 <main@@Base+0xee68>
   24ce4:	movw	r2, #48815	; 0xbeaf
   24ce8:	mov	r1, #0
   24cec:	movt	r2, #32431	; 0x7eaf
   24cf0:	str	r2, [r8]
   24cf4:	str	r1, [r8, #4]
   24cf8:	ldr	r2, [sp, #8]
   24cfc:	mov	r5, r0
   24d00:	str	r1, [r2]
   24d04:	mov	r0, r5
   24d08:	sub	sp, fp, #28
   24d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d14:	add	fp, sp, #28
   24d18:	sub	sp, sp, #12
   24d1c:	mov	r8, r1
   24d20:	sub	r1, r2, r1
   24d24:	cmp	r1, #8
   24d28:	movcs	r1, #8
   24d2c:	and	r1, r1, #15
   24d30:	sub	r1, r1, #1
   24d34:	cmp	r1, #7
   24d38:	bhi	24efc <main@@Base+0xf060>
   24d3c:	str	r3, [sp, #8]
   24d40:	add	r5, pc, #36	; 0x24
   24d44:	mov	sl, #0
   24d48:	mov	ip, #0
   24d4c:	mov	lr, #0
   24d50:	mov	r4, #0
   24d54:	mov	r6, #0
   24d58:	mov	r7, #0
   24d5c:	mov	r3, #0
   24d60:	ldr	r9, [r5, r1, lsl #2]
   24d64:	mov	r1, #0
   24d68:	add	pc, r5, r9
   24d6c:	andeq	r0, r0, r4, rrx
   24d70:	andeq	r0, r0, ip, asr r0
   24d74:	andeq	r0, r0, r4, asr r0
   24d78:	andeq	r0, r0, ip, asr #32
   24d7c:	andeq	r0, r0, r0, asr #32
   24d80:	andeq	r0, r0, r4, lsr r0
   24d84:	andeq	r0, r0, r4, lsr #32
   24d88:	andeq	r0, r0, r0, lsr #32
   24d8c:	ldrb	ip, [r8, #7]
   24d90:	ldrb	r1, [r8, #6]
   24d94:	mov	lr, sl
   24d98:	orr	r1, ip, r1, lsl #8
   24d9c:	mov	sl, r1
   24da0:	ldrb	r1, [r8, #5]
   24da4:	mov	r4, lr
   24da8:	orr	sl, sl, r1, lsl #16
   24dac:	ldrb	r1, [r8, #4]
   24db0:	mov	r6, r4
   24db4:	orr	sl, sl, r1, lsl #24
   24db8:	ldrb	r1, [r8, #3]
   24dbc:	orr	r7, r1, r6
   24dc0:	ldrb	r1, [r8, #2]
   24dc4:	orr	r3, r7, r1, lsl #8
   24dc8:	ldrb	r1, [r8, #1]
   24dcc:	orr	r1, r3, r1, lsl #16
   24dd0:	ldrb	r7, [r8]
   24dd4:	ldr	r3, [fp, #12]
   24dd8:	ldr	r5, [fp, #8]
   24ddc:	orr	r4, r1, r7, lsl #24
   24de0:	movw	r1, #29745	; 0x7431
   24de4:	movt	r1, #26990	; 0x696e
   24de8:	cmp	r4, r1
   24dec:	bhi	24e1c <main@@Base+0xef80>
   24df0:	teq	r4, r1
   24df4:	bne	24efc <main@@Base+0xf060>
   24df8:	str	r3, [sp]
   24dfc:	mov	r1, r8
   24e00:	mov	r3, #4
   24e04:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24e08:	cmp	r0, r8
   24e0c:	beq	24efc <main@@Base+0xf060>
   24e10:	mov	r1, #0
   24e14:	mov	r2, #2
   24e18:	b	24e68 <main@@Base+0xefcc>
   24e1c:	movw	r6, #0
   24e20:	movw	r1, #29806	; 0x746e
   24e24:	movt	r6, #25959	; 0x6567
   24e28:	movt	r1, #26990	; 0x696e
   24e2c:	subs	r7, sl, r6
   24e30:	sbcs	r7, r4, r1
   24e34:	bcs	24e74 <main@@Base+0xefd8>
   24e38:	movw	r1, #29746	; 0x7432
   24e3c:	movt	r1, #26990	; 0x696e
   24e40:	teq	r4, r1
   24e44:	bne	24efc <main@@Base+0xf060>
   24e48:	str	r3, [sp]
   24e4c:	mov	r1, r8
   24e50:	mov	r3, #4
   24e54:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24e58:	cmp	r0, r8
   24e5c:	beq	24efc <main@@Base+0xf060>
   24e60:	mov	r1, #0
   24e64:	mov	r2, #42	; 0x2a
   24e68:	str	r2, [r5]
   24e6c:	str	r1, [r5, #4]
   24e70:	b	24ef0 <main@@Base+0xf054>
   24e74:	eor	r1, r4, r1
   24e78:	add	r7, r6, #12800	; 0x3200
   24e7c:	bic	r4, sl, #255	; 0xff
   24e80:	eor	r7, r4, r7
   24e84:	orrs	r7, r7, r1
   24e88:	bne	24eb4 <main@@Base+0xf018>
   24e8c:	str	r3, [sp]
   24e90:	mov	r1, r8
   24e94:	mov	r3, #7
   24e98:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24e9c:	cmp	r0, r8
   24ea0:	beq	24efc <main@@Base+0xf060>
   24ea4:	mvn	r2, #1
   24ea8:	mvn	r1, #0
   24eac:	add	r2, r2, #1
   24eb0:	b	24ee4 <main@@Base+0xf048>
   24eb4:	bfc	sl, #0, #16
   24eb8:	eor	r7, sl, r6
   24ebc:	orrs	r1, r7, r1
   24ec0:	bne	24efc <main@@Base+0xf060>
   24ec4:	str	r3, [sp]
   24ec8:	mov	r1, r8
   24ecc:	mov	r3, #6
   24ed0:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24ed4:	cmp	r0, r8
   24ed8:	beq	24efc <main@@Base+0xf060>
   24edc:	mvn	r1, #0
   24ee0:	mvn	r2, #1
   24ee4:	str	r2, [r5]
   24ee8:	str	r1, [r5, #4]
   24eec:	mov	r1, #1
   24ef0:	ldr	r2, [sp, #8]
   24ef4:	mov	r8, r0
   24ef8:	str	r1, [r2]
   24efc:	mov	r0, r8
   24f00:	sub	sp, fp, #28
   24f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f08:	push	{r4, r5, r6, r7, fp, lr}
   24f0c:	add	fp, sp, #16
   24f10:	sub	sp, sp, #8
   24f14:	mov	r5, r1
   24f18:	sub	r1, r2, r1
   24f1c:	mov	r4, r3
   24f20:	cmp	r1, #8
   24f24:	movcs	r1, #8
   24f28:	and	r1, r1, #15
   24f2c:	sub	r3, r1, #1
   24f30:	cmp	r3, #7
   24f34:	bhi	2504c <main@@Base+0xf1b0>
   24f38:	add	r7, pc, #8
   24f3c:	mov	r1, #0
   24f40:	ldr	r3, [r7, r3, lsl #2]
   24f44:	add	pc, r7, r3
   24f48:	andeq	r0, r0, r8, lsr r0
   24f4c:	andeq	r0, r0, r0, lsr r0
   24f50:	andeq	r0, r0, r8, lsr #32
   24f54:	andeq	r0, r0, r0, lsr #32
   24f58:	andeq	r0, r0, r0, lsr #32
   24f5c:	andeq	r0, r0, r0, lsr #32
   24f60:	andeq	r0, r0, r0, lsr #32
   24f64:	andeq	r0, r0, r0, lsr #32
   24f68:	ldrb	r3, [r5, #3]
   24f6c:	orr	r1, r3, r1
   24f70:	ldrb	r3, [r5, #2]
   24f74:	orr	r1, r1, r3, lsl #8
   24f78:	ldrb	r3, [r5, #1]
   24f7c:	orr	r1, r1, r3, lsl #16
   24f80:	ldrb	r6, [r5]
   24f84:	ldr	r3, [fp, #12]
   24f88:	ldr	r7, [fp, #8]
   24f8c:	orr	r1, r1, r6, lsl #24
   24f90:	movw	r6, #26417	; 0x6731
   24f94:	movt	r6, #28261	; 0x6e65
   24f98:	cmp	r1, r6
   24f9c:	bhi	24fcc <main@@Base+0xf130>
   24fa0:	teq	r1, r6
   24fa4:	bne	2504c <main@@Base+0xf1b0>
   24fa8:	str	r3, [sp]
   24fac:	mov	r1, r5
   24fb0:	mov	r3, #4
   24fb4:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24fb8:	cmp	r0, r5
   24fbc:	beq	2504c <main@@Base+0xf1b0>
   24fc0:	mvn	r1, #0
   24fc4:	mvn	r2, #11
   24fc8:	b	25038 <main@@Base+0xf19c>
   24fcc:	movw	r6, #26418	; 0x6732
   24fd0:	movt	r6, #28261	; 0x6e65
   24fd4:	teq	r1, r6
   24fd8:	beq	25014 <main@@Base+0xf178>
   24fdc:	movw	r6, #26419	; 0x6733
   24fe0:	movt	r6, #28261	; 0x6e65
   24fe4:	teq	r1, r6
   24fe8:	bne	2504c <main@@Base+0xf1b0>
   24fec:	str	r3, [sp]
   24ff0:	mov	r1, r5
   24ff4:	mov	r3, #4
   24ff8:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   24ffc:	cmp	r0, r5
   25000:	beq	2504c <main@@Base+0xf1b0>
   25004:	mvn	r2, #11
   25008:	mvn	r1, #0
   2500c:	add	r2, r2, #2
   25010:	b	25038 <main@@Base+0xf19c>
   25014:	str	r3, [sp]
   25018:	mov	r1, r5
   2501c:	mov	r3, #4
   25020:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   25024:	cmp	r0, r5
   25028:	beq	2504c <main@@Base+0xf1b0>
   2502c:	mvn	r2, #11
   25030:	mvn	r1, #0
   25034:	add	r2, r2, #1
   25038:	str	r2, [r7]
   2503c:	str	r1, [r7, #4]
   25040:	mov	r1, #1
   25044:	mov	r5, r0
   25048:	str	r1, [r4]
   2504c:	mov	r0, r5
   25050:	sub	sp, fp, #16
   25054:	pop	{r4, r5, r6, r7, fp, pc}
   25058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2505c:	add	fp, sp, #28
   25060:	sub	sp, sp, #12
   25064:	mov	sl, r1
   25068:	sub	r1, r2, r1
   2506c:	cmp	r1, #8
   25070:	movcs	r1, #8
   25074:	and	r1, r1, #15
   25078:	sub	r7, r1, #1
   2507c:	cmp	r7, #7
   25080:	bhi	25300 <main@@Base+0xf464>
   25084:	str	r3, [sp, #8]
   25088:	add	r1, pc, #36	; 0x24
   2508c:	mov	r9, #0
   25090:	mov	ip, #0
   25094:	mov	lr, #0
   25098:	mov	r6, #0
   2509c:	mov	r4, #0
   250a0:	mov	r5, #0
   250a4:	mov	r8, #0
   250a8:	ldr	r3, [r1, r7, lsl #2]
   250ac:	mov	r7, #0
   250b0:	add	pc, r1, r3
   250b4:	andeq	r0, r0, r4, rrx
   250b8:	andeq	r0, r0, ip, asr r0
   250bc:	andeq	r0, r0, r4, asr r0
   250c0:	andeq	r0, r0, ip, asr #32
   250c4:	andeq	r0, r0, r0, asr #32
   250c8:	andeq	r0, r0, r4, lsr r0
   250cc:	andeq	r0, r0, r4, lsr #32
   250d0:	andeq	r0, r0, r0, lsr #32
   250d4:	ldrb	ip, [sl, #7]
   250d8:	ldrb	r1, [sl, #6]
   250dc:	mov	lr, r9
   250e0:	orr	r1, ip, r1, lsl #8
   250e4:	mov	r9, r1
   250e8:	ldrb	r1, [sl, #5]
   250ec:	mov	r6, lr
   250f0:	orr	r9, r9, r1, lsl #16
   250f4:	ldrb	r1, [sl, #4]
   250f8:	mov	r7, r6
   250fc:	orr	r9, r9, r1, lsl #24
   25100:	ldrb	r1, [sl, #3]
   25104:	orr	r4, r1, r7
   25108:	ldrb	r1, [sl, #2]
   2510c:	orr	r5, r4, r1, lsl #8
   25110:	ldrb	r1, [sl, #1]
   25114:	orr	r8, r5, r1, lsl #16
   25118:	ldrb	r1, [sl]
   2511c:	ldr	lr, [fp, #12]
   25120:	ldr	r5, [fp, #8]
   25124:	orr	r6, r8, r1, lsl #24
   25128:	movw	r1, #20036	; 0x4e44
   2512c:	movt	r1, #20047	; 0x4e4f
   25130:	cmp	r6, r1
   25134:	bhi	25194 <main@@Base+0xf2f8>
   25138:	movw	r7, #28160	; 0x6e00
   2513c:	movw	r4, #28523	; 0x6f6b
   25140:	and	r3, r9, #-16777216	; 0xff000000
   25144:	movt	r7, #18017	; 0x4661
   25148:	movt	r4, #17007	; 0x426f
   2514c:	subs	r1, r9, r7
   25150:	sbcs	r1, r6, r4
   25154:	bcs	251e0 <main@@Base+0xf344>
   25158:	movw	r1, #27756	; 0x6c6c
   2515c:	eor	r3, r3, #1694498816	; 0x65000000
   25160:	movt	r1, #16997	; 0x4265
   25164:	eor	r1, r6, r1
   25168:	orrs	r1, r3, r1
   2516c:	bne	25300 <main@@Base+0xf464>
   25170:	mov	r1, sl
   25174:	mov	r3, #5
   25178:	str	lr, [sp]
   2517c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   25180:	cmp	r0, sl
   25184:	beq	25300 <main@@Base+0xf464>
   25188:	mov	r1, #0
   2518c:	mov	r2, #9
   25190:	b	252ec <main@@Base+0xf450>
   25194:	movw	r7, #26725	; 0x6865
   25198:	mvn	r1, #-1912602624	; 0x8e000000
   2519c:	movt	r7, #20340	; 0x4f74
   251a0:	subs	r1, r1, r9
   251a4:	sbcs	r1, r7, r6
   251a8:	bcc	2521c <main@@Base+0xf380>
   251ac:	movw	r1, #20037	; 0x4e45
   251b0:	movt	r1, #20047	; 0x4e4f
   251b4:	teq	r6, r1
   251b8:	bne	25300 <main@@Base+0xf464>
   251bc:	mov	r1, sl
   251c0:	mov	r3, #4
   251c4:	str	lr, [sp]
   251c8:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   251cc:	cmp	r0, sl
   251d0:	beq	25300 <main@@Base+0xf464>
   251d4:	mov	r1, #0
   251d8:	str	r1, [r5]
   251dc:	b	252f0 <main@@Base+0xf454>
   251e0:	movw	r1, #19553	; 0x4c61
   251e4:	eor	r3, r3, #1845493760	; 0x6e000000
   251e8:	movt	r1, #19829	; 0x4d75
   251ec:	eor	r1, r6, r1
   251f0:	orrs	r1, r3, r1
   251f4:	bne	25270 <main@@Base+0xf3d4>
   251f8:	mov	r1, sl
   251fc:	mov	r3, #5
   25200:	str	lr, [sp]
   25204:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   25208:	cmp	r0, sl
   2520c:	beq	25300 <main@@Base+0xf464>
   25210:	mov	r1, #0
   25214:	mov	r2, #2
   25218:	b	252ec <main@@Base+0xf450>
   2521c:	movw	r4, #25964	; 0x656c
   25220:	movw	ip, #28789	; 0x7075
   25224:	movt	r4, #28282	; 0x6e7a
   25228:	movt	ip, #21089	; 0x5261
   2522c:	subs	r1, r9, r4
   25230:	sbcs	r1, r6, ip
   25234:	bcs	252a8 <main@@Base+0xf40c>
   25238:	and	r3, r9, #-16777216	; 0xff000000
   2523c:	eor	r1, r6, r7
   25240:	eor	r3, r3, #1912602624	; 0x72000000
   25244:	orrs	r1, r3, r1
   25248:	bne	25300 <main@@Base+0xf464>
   2524c:	mov	r1, sl
   25250:	mov	r3, #5
   25254:	str	lr, [sp]
   25258:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   2525c:	cmp	r0, sl
   25260:	beq	25300 <main@@Base+0xf464>
   25264:	mov	r1, #0
   25268:	mov	r2, #11
   2526c:	b	252ec <main@@Base+0xf450>
   25270:	bic	r3, r9, #255	; 0xff
   25274:	eor	r1, r6, r4
   25278:	eor	r3, r3, r7
   2527c:	orrs	r1, r3, r1
   25280:	bne	25300 <main@@Base+0xf464>
   25284:	mov	r1, sl
   25288:	mov	r3, #7
   2528c:	str	lr, [sp]
   25290:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   25294:	cmp	r0, sl
   25298:	beq	25300 <main@@Base+0xf464>
   2529c:	mov	r1, #0
   252a0:	mov	r2, #10
   252a4:	b	252ec <main@@Base+0xf450>
   252a8:	lsr	r3, r9, #16
   252ac:	movw	r7, #25956	; 0x6564
   252b0:	movw	r1, #21870	; 0x556e
   252b4:	orr	r3, r3, r6, lsl #16
   252b8:	movt	r7, #30067	; 0x7573
   252bc:	eor	r1, r1, r6, lsr #16
   252c0:	eor	r3, r3, r7
   252c4:	orrs	r1, r3, r1
   252c8:	bne	2530c <main@@Base+0xf470>
   252cc:	mov	r1, sl
   252d0:	mov	r3, #6
   252d4:	str	lr, [sp]
   252d8:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   252dc:	cmp	r0, sl
   252e0:	beq	25300 <main@@Base+0xf464>
   252e4:	mov	r1, #0
   252e8:	mov	r2, #255	; 0xff
   252ec:	str	r2, [r5]
   252f0:	str	r1, [r5, #4]
   252f4:	mov	sl, r0
   252f8:	ldr	r2, [sp, #8]
   252fc:	str	r1, [r2]
   25300:	mov	r0, sl
   25304:	sub	sp, fp, #28
   25308:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2530c:	eor	r1, r9, r4
   25310:	eor	r3, r6, ip
   25314:	orrs	r1, r1, r3
   25318:	bne	25300 <main@@Base+0xf464>
   2531c:	mov	r1, sl
   25320:	mov	r3, #8
   25324:	str	lr, [sp]
   25328:	mov	r4, #8
   2532c:	bl	345cc <flatcc_json_parser_match_constant@@Base>
   25330:	cmp	r0, sl
   25334:	beq	25300 <main@@Base+0xf464>
   25338:	mov	r1, #0
   2533c:	str	r4, [r5]
   25340:	b	252f0 <main@@Base+0xf454>
   25344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25348:	add	fp, sp, #28
   2534c:	sub	sp, sp, #44	; 0x2c
   25350:	mov	r7, r0
   25354:	mov	r0, #0
   25358:	mov	r4, r1
   2535c:	mov	r1, #4
   25360:	mov	r8, r3
   25364:	mov	r5, r2
   25368:	str	r0, [r3]
   2536c:	ldr	r0, [r7]
   25370:	bl	2f340 <flatcc_builder_start_table@@Base>
   25374:	cmp	r0, #0
   25378:	beq	253a0 <main@@Base+0xf504>
   2537c:	mov	r0, r7
   25380:	mov	r1, r4
   25384:	mov	r2, r5
   25388:	mov	r3, #33	; 0x21
   2538c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   25390:	mov	r4, r0
   25394:	mov	r0, r4
   25398:	sub	sp, fp, #28
   2539c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   253a0:	add	r0, sp, #36	; 0x24
   253a4:	mov	r1, r4
   253a8:	mov	r2, r5
   253ac:	mov	r3, #1
   253b0:	str	r0, [sp]
   253b4:	mov	r0, r7
   253b8:	bl	36c44 <flatcc_json_parser_prepare_unions@@Base>
   253bc:	cmp	r0, r5
   253c0:	beq	2537c <main@@Base+0xf4e0>
   253c4:	cmp	r4, r5
   253c8:	beq	253fc <main@@Base+0xf560>
   253cc:	ldrb	r0, [r4]
   253d0:	cmp	r0, #123	; 0x7b
   253d4:	bne	253fc <main@@Base+0xf560>
   253d8:	add	r1, r4, #1
   253dc:	sub	r0, r5, r1
   253e0:	cmp	r0, #2
   253e4:	blt	25460 <main@@Base+0xf5c4>
   253e8:	ldrb	r0, [r1]
   253ec:	cmp	r0, #32
   253f0:	bls	25450 <main@@Base+0xf5b4>
   253f4:	mov	r4, r1
   253f8:	b	25470 <main@@Base+0xf5d4>
   253fc:	mov	r0, r7
   25400:	mov	r1, r4
   25404:	mov	r2, r5
   25408:	mov	r3, #21
   2540c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   25410:	mov	r4, r0
   25414:	ldr	r0, [r7, #20]
   25418:	cmp	r0, #0
   2541c:	bne	2537c <main@@Base+0xf4e0>
   25420:	ldr	r3, [sp, #36]	; 0x24
   25424:	mov	r0, r7
   25428:	mov	r1, r4
   2542c:	mov	r2, r5
   25430:	bl	36cd4 <flatcc_json_parser_finalize_unions@@Base>
   25434:	mov	r4, r0
   25438:	ldr	r0, [r7]
   2543c:	bl	2fd70 <flatcc_builder_end_table@@Base>
   25440:	cmp	r0, #0
   25444:	str	r0, [r8]
   25448:	bne	25394 <main@@Base+0xf4f8>
   2544c:	b	2537c <main@@Base+0xf4e0>
   25450:	bne	25460 <main@@Base+0xf5c4>
   25454:	ldrb	r0, [r4, #2]!
   25458:	cmp	r0, #32
   2545c:	bhi	25470 <main@@Base+0xf5d4>
   25460:	mov	r0, r7
   25464:	mov	r2, r5
   25468:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2546c:	mov	r4, r0
   25470:	cmp	r4, r5
   25474:	mov	r2, r5
   25478:	beq	254bc <main@@Base+0xf620>
   2547c:	ldrb	r0, [r4]
   25480:	cmp	r0, #125	; 0x7d
   25484:	bne	254b8 <main@@Base+0xf61c>
   25488:	add	r1, r4, #1
   2548c:	sub	r0, r5, r1
   25490:	cmp	r0, #2
   25494:	blt	25cb0 <main@@Base+0xfe14>
   25498:	ldrb	r0, [r1]
   2549c:	cmp	r0, #32
   254a0:	bhi	25c74 <main@@Base+0xfdd8>
   254a4:	bne	25cb0 <main@@Base+0xfe14>
   254a8:	ldrb	r0, [r4, #2]!
   254ac:	cmp	r0, #32
   254b0:	bhi	25414 <main@@Base+0xf578>
   254b4:	b	25cb0 <main@@Base+0xfe14>
   254b8:	mov	r2, r4
   254bc:	str	r7, [sp, #28]
   254c0:	str	r8, [sp, #24]
   254c4:	cmp	r2, r5
   254c8:	mov	r9, r5
   254cc:	beq	254fc <main@@Base+0xf660>
   254d0:	ldrb	r0, [r2]
   254d4:	cmp	r0, #34	; 0x22
   254d8:	bne	254e4 <main@@Base+0xf648>
   254dc:	add	r9, r2, #1
   254e0:	b	254fc <main@@Base+0xf660>
   254e4:	mov	r1, r2
   254e8:	mov	r0, r7
   254ec:	mov	r2, r5
   254f0:	mov	r3, #5
   254f4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   254f8:	mov	r9, r0
   254fc:	sub	r1, r5, r9
   25500:	mov	r0, #8
   25504:	cmp	r1, #8
   25508:	movcc	r0, r1
   2550c:	and	r0, r0, #15
   25510:	sub	r0, r0, #1
   25514:	cmp	r0, #7
   25518:	bhi	25b6c <main@@Base+0xfcd0>
   2551c:	str	r1, [sp, #32]
   25520:	add	r4, pc, #40	; 0x28
   25524:	mov	lr, r5
   25528:	mov	sl, #0
   2552c:	mov	ip, #0
   25530:	mov	r5, #0
   25534:	mov	r1, #0
   25538:	mov	r2, #0
   2553c:	mov	r3, #0
   25540:	mov	r6, #0
   25544:	mov	r7, #0
   25548:	ldr	r0, [r4, r0, lsl #2]
   2554c:	add	pc, r4, r0
   25550:	andeq	r0, r0, r4, rrx
   25554:	andeq	r0, r0, ip, asr r0
   25558:	andeq	r0, r0, r4, asr r0
   2555c:	andeq	r0, r0, ip, asr #32
   25560:	andeq	r0, r0, r0, asr #32
   25564:	andeq	r0, r0, r4, lsr r0
   25568:	andeq	r0, r0, r4, lsr #32
   2556c:	andeq	r0, r0, r0, lsr #32
   25570:	ldrb	ip, [r9, #7]
   25574:	ldrb	r0, [r9, #6]
   25578:	mov	r5, sl
   2557c:	orr	r0, ip, r0, lsl #8
   25580:	mov	sl, r0
   25584:	ldrb	r0, [r9, #5]
   25588:	mov	r1, r5
   2558c:	orr	sl, sl, r0, lsl #16
   25590:	ldrb	r0, [r9, #4]
   25594:	mov	r2, r1
   25598:	orr	sl, sl, r0, lsl #24
   2559c:	ldrb	r0, [r9, #3]
   255a0:	orr	r3, r0, r2
   255a4:	ldrb	r0, [r9, #2]
   255a8:	orr	r6, r3, r0, lsl #8
   255ac:	ldrb	r0, [r9, #1]
   255b0:	orr	r7, r6, r0, lsl #16
   255b4:	movw	r2, #30976	; 0x7900
   255b8:	movt	r2, #24942	; 0x616e
   255bc:	add	r0, r2, #95	; 0x5f
   255c0:	eor	r1, sl, r0
   255c4:	ldrb	r0, [r9]
   255c8:	orr	r8, r7, r0, lsl #24
   255cc:	movw	r0, #28281	; 0x6e79
   255d0:	movt	r0, #28001	; 0x6d61
   255d4:	eor	r0, r8, r0
   255d8:	orrs	r1, r1, r0
   255dc:	bne	256ac <main@@Base+0xf810>
   255e0:	add	r6, r9, #8
   255e4:	mov	r1, #8
   255e8:	ldr	r7, [sp, #28]
   255ec:	ldr	r8, [sp, #24]
   255f0:	mov	r5, lr
   255f4:	sub	r0, lr, r6
   255f8:	cmp	r0, #8
   255fc:	movcc	r1, r0
   25600:	and	r1, r1, #15
   25604:	sub	r2, r1, #1
   25608:	cmp	r2, #7
   2560c:	bhi	258bc <main@@Base+0xfa20>
   25610:	add	r3, pc, #8
   25614:	mov	r1, #0
   25618:	ldr	r2, [r3, r2, lsl #2]
   2561c:	add	pc, r3, r2
   25620:	andeq	r0, r0, r4, lsr r0
   25624:	andeq	r0, r0, ip, lsr #32
   25628:	andeq	r0, r0, r4, lsr #32
   2562c:	andeq	r0, r0, r0, lsr #32
   25630:	andeq	r0, r0, r0, lsr #32
   25634:	andeq	r0, r0, r0, lsr #32
   25638:	andeq	r0, r0, r0, lsr #32
   2563c:	andeq	r0, r0, r0, lsr #32
   25640:	ldrb	r1, [r9, #11]
   25644:	ldrb	r2, [r9, #10]
   25648:	orr	r1, r1, r2, lsl #8
   2564c:	ldrb	r2, [r9, #9]
   25650:	orr	r1, r1, r2, lsl #16
   25654:	ldrb	r2, [r6]
   25658:	orr	r1, r1, r2, lsl #24
   2565c:	movw	r2, #28773	; 0x7065
   25660:	movt	r2, #29817	; 0x7479
   25664:	teq	r1, r2
   25668:	bne	258bc <main@@Base+0xfa20>
   2566c:	cmp	r0, #5
   25670:	blt	258bc <main@@Base+0xfa20>
   25674:	ldrb	r0, [r9, #12]
   25678:	cmp	r0, #34	; 0x22
   2567c:	bne	258bc <main@@Base+0xfa20>
   25680:	add	r1, r9, #13
   25684:	sub	r0, r5, r1
   25688:	cmp	r0, #2
   2568c:	blt	25870 <main@@Base+0xf9d4>
   25690:	ldrb	r0, [r1]
   25694:	cmp	r0, #32
   25698:	bls	25860 <main@@Base+0xf9c4>
   2569c:	mov	r9, r1
   256a0:	cmp	r9, r5
   256a4:	bne	25888 <main@@Base+0xf9ec>
   256a8:	b	258c8 <main@@Base+0xfa2c>
   256ac:	ldr	r7, [sp, #28]
   256b0:	ldr	r4, [sp, #32]
   256b4:	bic	r1, sl, #255	; 0xff
   256b8:	mov	r5, lr
   256bc:	eor	r1, r1, r2
   256c0:	orrs	r0, r1, r0
   256c4:	bne	25774 <main@@Base+0xf8d8>
   256c8:	cmp	r4, #8
   256cc:	mov	r1, r9
   256d0:	blt	259fc <main@@Base+0xfb60>
   256d4:	ldrb	r0, [r9, #7]
   256d8:	mov	r1, r9
   256dc:	cmp	r0, #34	; 0x22
   256e0:	bne	259fc <main@@Base+0xfb60>
   256e4:	add	r2, r9, #8
   256e8:	sub	r0, r5, r2
   256ec:	cmp	r0, #2
   256f0:	blt	25724 <main@@Base+0xf888>
   256f4:	ldrb	r0, [r2]
   256f8:	cmp	r0, #32
   256fc:	bls	25710 <main@@Base+0xf874>
   25700:	mov	r1, r2
   25704:	cmp	r1, r5
   25708:	bne	25740 <main@@Base+0xf8a4>
   2570c:	b	2584c <main@@Base+0xf9b0>
   25710:	bne	25724 <main@@Base+0xf888>
   25714:	mov	r1, r9
   25718:	ldrb	r0, [r1, #9]!
   2571c:	cmp	r0, #32
   25720:	bhi	25738 <main@@Base+0xf89c>
   25724:	mov	r1, r2
   25728:	mov	r0, r7
   2572c:	mov	r2, r5
   25730:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25734:	mov	r1, r0
   25738:	cmp	r1, r5
   2573c:	beq	2584c <main@@Base+0xf9b0>
   25740:	ldrb	r0, [r1]
   25744:	cmp	r0, #58	; 0x3a
   25748:	bne	2584c <main@@Base+0xf9b0>
   2574c:	add	r2, r1, #1
   25750:	sub	r0, r5, r2
   25754:	cmp	r0, #2
   25758:	blt	259e8 <main@@Base+0xfb4c>
   2575c:	ldrb	r0, [r2]
   25760:	cmp	r0, #32
   25764:	bls	259d8 <main@@Base+0xfb3c>
   25768:	mov	r1, r2
   2576c:	cmp	r9, r1
   25770:	bne	25a04 <main@@Base+0xfb68>
   25774:	lsr	r1, sl, #16
   25778:	movw	r2, #27000	; 0x6978
   2577c:	movw	r0, #28786	; 0x7072
   25780:	orr	r1, r1, r8, lsl #16
   25784:	movt	r2, #25958	; 0x6566
   25788:	eor	r0, r0, r8, lsr #16
   2578c:	eor	r1, r1, r2
   25790:	orrs	r0, r1, r0
   25794:	bne	257e4 <main@@Base+0xf948>
   25798:	ldr	r8, [sp, #24]
   2579c:	cmp	r4, #7
   257a0:	mov	r1, r9
   257a4:	blt	25ad0 <main@@Base+0xfc34>
   257a8:	ldrb	r0, [r9, #6]
   257ac:	mov	r1, r9
   257b0:	cmp	r0, #34	; 0x22
   257b4:	bne	25ad0 <main@@Base+0xfc34>
   257b8:	add	r2, r9, #7
   257bc:	sub	r0, r5, r2
   257c0:	cmp	r0, #2
   257c4:	blt	258f4 <main@@Base+0xfa58>
   257c8:	ldrb	r0, [r2]
   257cc:	cmp	r0, #32
   257d0:	bls	258e0 <main@@Base+0xfa44>
   257d4:	mov	r1, r2
   257d8:	cmp	r1, r5
   257dc:	bne	25910 <main@@Base+0xfa74>
   257e0:	b	25948 <main@@Base+0xfaac>
   257e4:	movw	r0, #30313	; 0x7669
   257e8:	and	r1, sl, #-16777216	; 0xff000000
   257ec:	movt	r0, #28015	; 0x6d6f
   257f0:	eor	r1, r1, #1694498816	; 0x65000000
   257f4:	eor	r0, r8, r0
   257f8:	ldr	r8, [sp, #24]
   257fc:	orrs	r0, r1, r0
   25800:	bne	25b6c <main@@Base+0xfcd0>
   25804:	cmp	r4, #6
   25808:	mov	r1, r9
   2580c:	blt	25b28 <main@@Base+0xfc8c>
   25810:	ldrb	r0, [r9, #5]
   25814:	mov	r1, r9
   25818:	cmp	r0, #34	; 0x22
   2581c:	bne	25b28 <main@@Base+0xfc8c>
   25820:	add	r2, r9, #6
   25824:	sub	r0, r5, r2
   25828:	cmp	r0, #2
   2582c:	blt	25970 <main@@Base+0xfad4>
   25830:	ldrb	r0, [r2]
   25834:	cmp	r0, #32
   25838:	bls	2595c <main@@Base+0xfac0>
   2583c:	mov	r1, r2
   25840:	cmp	r1, r5
   25844:	bne	2598c <main@@Base+0xfaf0>
   25848:	b	259c4 <main@@Base+0xfb28>
   2584c:	mov	r0, r7
   25850:	mov	r2, r5
   25854:	mov	r3, #4
   25858:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2585c:	b	259f8 <main@@Base+0xfb5c>
   25860:	bne	25870 <main@@Base+0xf9d4>
   25864:	ldrb	r0, [r9, #14]!
   25868:	cmp	r0, #32
   2586c:	bhi	25880 <main@@Base+0xf9e4>
   25870:	mov	r0, r7
   25874:	mov	r2, r5
   25878:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2587c:	mov	r9, r0
   25880:	cmp	r9, r5
   25884:	beq	258c8 <main@@Base+0xfa2c>
   25888:	ldrb	r0, [r9]
   2588c:	cmp	r0, #58	; 0x3a
   25890:	bne	258c8 <main@@Base+0xfa2c>
   25894:	add	r1, r9, #1
   25898:	sub	r0, r5, r1
   2589c:	cmp	r0, #2
   258a0:	blt	25a48 <main@@Base+0xfbac>
   258a4:	ldrb	r0, [r1]
   258a8:	cmp	r0, #32
   258ac:	bls	25a38 <main@@Base+0xfb9c>
   258b0:	mov	r9, r1
   258b4:	cmp	r6, r9
   258b8:	bne	25a60 <main@@Base+0xfbc4>
   258bc:	mov	r0, r7
   258c0:	mov	r1, r6
   258c4:	b	25b74 <main@@Base+0xfcd8>
   258c8:	mov	r0, r7
   258cc:	mov	r1, r9
   258d0:	mov	r2, r5
   258d4:	mov	r3, #4
   258d8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   258dc:	b	25a54 <main@@Base+0xfbb8>
   258e0:	bne	258f4 <main@@Base+0xfa58>
   258e4:	mov	r1, r9
   258e8:	ldrb	r0, [r1, #8]!
   258ec:	cmp	r0, #32
   258f0:	bhi	25908 <main@@Base+0xfa6c>
   258f4:	mov	r1, r2
   258f8:	mov	r0, r7
   258fc:	mov	r2, r5
   25900:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25904:	mov	r1, r0
   25908:	cmp	r1, r5
   2590c:	beq	25948 <main@@Base+0xfaac>
   25910:	ldrb	r0, [r1]
   25914:	cmp	r0, #58	; 0x3a
   25918:	bne	25948 <main@@Base+0xfaac>
   2591c:	add	r2, r1, #1
   25920:	sub	r0, r5, r2
   25924:	cmp	r0, #2
   25928:	blt	25abc <main@@Base+0xfc20>
   2592c:	ldrb	r0, [r2]
   25930:	cmp	r0, #32
   25934:	bls	25aac <main@@Base+0xfc10>
   25938:	mov	r1, r2
   2593c:	cmp	r9, r1
   25940:	bne	25ad8 <main@@Base+0xfc3c>
   25944:	b	25b6c <main@@Base+0xfcd0>
   25948:	mov	r0, r7
   2594c:	mov	r2, r5
   25950:	mov	r3, #4
   25954:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   25958:	b	25acc <main@@Base+0xfc30>
   2595c:	bne	25970 <main@@Base+0xfad4>
   25960:	mov	r1, r9
   25964:	ldrb	r0, [r1, #7]!
   25968:	cmp	r0, #32
   2596c:	bhi	25984 <main@@Base+0xfae8>
   25970:	mov	r1, r2
   25974:	mov	r0, r7
   25978:	mov	r2, r5
   2597c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25980:	mov	r1, r0
   25984:	cmp	r1, r5
   25988:	beq	259c4 <main@@Base+0xfb28>
   2598c:	ldrb	r0, [r1]
   25990:	cmp	r0, #58	; 0x3a
   25994:	bne	259c4 <main@@Base+0xfb28>
   25998:	add	r2, r1, #1
   2599c:	sub	r0, r5, r2
   259a0:	cmp	r0, #2
   259a4:	blt	25b14 <main@@Base+0xfc78>
   259a8:	ldrb	r0, [r2]
   259ac:	cmp	r0, #32
   259b0:	bls	25b04 <main@@Base+0xfc68>
   259b4:	mov	r1, r2
   259b8:	cmp	r9, r1
   259bc:	bne	25b30 <main@@Base+0xfc94>
   259c0:	b	25b6c <main@@Base+0xfcd0>
   259c4:	mov	r0, r7
   259c8:	mov	r2, r5
   259cc:	mov	r3, #4
   259d0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   259d4:	b	25b24 <main@@Base+0xfc88>
   259d8:	bne	259e8 <main@@Base+0xfb4c>
   259dc:	ldrb	r0, [r1, #2]!
   259e0:	cmp	r0, #32
   259e4:	bhi	259fc <main@@Base+0xfb60>
   259e8:	mov	r1, r2
   259ec:	mov	r0, r7
   259f0:	mov	r2, r5
   259f4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   259f8:	mov	r1, r0
   259fc:	cmp	r9, r1
   25a00:	beq	25774 <main@@Base+0xf8d8>
   25a04:	ldr	r0, [sp, #36]	; 0x24
   25a08:	mov	r2, #3
   25a0c:	mov	r3, #0
   25a10:	str	r2, [sp]
   25a14:	mov	r2, r5
   25a18:	str	r0, [sp, #4]
   25a1c:	ldr	r0, [pc, #680]	; 25ccc <main@@Base+0xfe30>
   25a20:	add	r0, pc, r0
   25a24:	str	r0, [sp, #8]
   25a28:	mov	r0, r7
   25a2c:	bl	373fc <flatcc_json_parser_union_vector@@Base>
   25a30:	ldr	r8, [sp, #24]
   25a34:	b	25b7c <main@@Base+0xfce0>
   25a38:	bne	25a48 <main@@Base+0xfbac>
   25a3c:	ldrb	r0, [r9, #2]!
   25a40:	cmp	r0, #32
   25a44:	bhi	25a58 <main@@Base+0xfbbc>
   25a48:	mov	r0, r7
   25a4c:	mov	r2, r5
   25a50:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25a54:	mov	r9, r0
   25a58:	cmp	r6, r9
   25a5c:	beq	258bc <main@@Base+0xfa20>
   25a60:	ldr	r0, [sp, #36]	; 0x24
   25a64:	mov	r1, #3
   25a68:	mov	r2, r5
   25a6c:	mov	r3, #0
   25a70:	str	r1, [sp]
   25a74:	mov	r1, r9
   25a78:	str	r0, [sp, #4]
   25a7c:	ldr	r0, [pc, #572]	; 25cc0 <main@@Base+0xfe24>
   25a80:	add	r0, pc, r0
   25a84:	str	r0, [sp, #8]
   25a88:	ldr	r0, [pc, #564]	; 25cc4 <main@@Base+0xfe28>
   25a8c:	add	r0, pc, r0
   25a90:	str	r0, [sp, #12]
   25a94:	ldr	r0, [pc, #556]	; 25cc8 <main@@Base+0xfe2c>
   25a98:	add	r0, pc, r0
   25a9c:	str	r0, [sp, #16]
   25aa0:	mov	r0, r7
   25aa4:	bl	378f0 <flatcc_json_parser_union_type_vector@@Base>
   25aa8:	b	25b7c <main@@Base+0xfce0>
   25aac:	bne	25abc <main@@Base+0xfc20>
   25ab0:	ldrb	r0, [r1, #2]!
   25ab4:	cmp	r0, #32
   25ab8:	bhi	25ad0 <main@@Base+0xfc34>
   25abc:	mov	r1, r2
   25ac0:	mov	r0, r7
   25ac4:	mov	r2, r5
   25ac8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25acc:	mov	r1, r0
   25ad0:	cmp	r9, r1
   25ad4:	beq	25b6c <main@@Base+0xfcd0>
   25ad8:	mov	r0, r7
   25adc:	mov	r2, r5
   25ae0:	sub	r3, fp, #32
   25ae4:	bl	25ce4 <main@@Base+0xfe48>
   25ae8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   25aec:	mov	r4, r0
   25af0:	cmp	r6, #0
   25af4:	beq	2537c <main@@Base+0xf4e0>
   25af8:	ldr	r0, [r7]
   25afc:	mov	r1, #0
   25b00:	b	25b58 <main@@Base+0xfcbc>
   25b04:	bne	25b14 <main@@Base+0xfc78>
   25b08:	ldrb	r0, [r1, #2]!
   25b0c:	cmp	r0, #32
   25b10:	bhi	25b28 <main@@Base+0xfc8c>
   25b14:	mov	r1, r2
   25b18:	mov	r0, r7
   25b1c:	mov	r2, r5
   25b20:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25b24:	mov	r1, r0
   25b28:	cmp	r9, r1
   25b2c:	beq	25b6c <main@@Base+0xfcd0>
   25b30:	mov	r0, r7
   25b34:	mov	r2, r5
   25b38:	sub	r3, fp, #32
   25b3c:	bl	28fa4 <main@@Base+0x13108>
   25b40:	ldr	r6, [fp, #-32]	; 0xffffffe0
   25b44:	mov	r4, r0
   25b48:	cmp	r6, #0
   25b4c:	beq	2537c <main@@Base+0xf4e0>
   25b50:	ldr	r0, [r7]
   25b54:	mov	r1, #1
   25b58:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   25b5c:	cmp	r0, #0
   25b60:	beq	2537c <main@@Base+0xf4e0>
   25b64:	str	r6, [r0]
   25b68:	b	25b80 <main@@Base+0xfce4>
   25b6c:	mov	r0, r7
   25b70:	mov	r1, r9
   25b74:	mov	r2, r5
   25b78:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   25b7c:	mov	r4, r0
   25b80:	sub	r0, r5, r4
   25b84:	cmp	r0, #2
   25b88:	blt	25bbc <main@@Base+0xfd20>
   25b8c:	ldrb	r0, [r4]
   25b90:	cmp	r0, #32
   25b94:	bls	25ba8 <main@@Base+0xfd0c>
   25b98:	mov	r2, r4
   25b9c:	cmp	r2, r5
   25ba0:	bne	25bd8 <main@@Base+0xfd3c>
   25ba4:	b	25c48 <main@@Base+0xfdac>
   25ba8:	bne	25bbc <main@@Base+0xfd20>
   25bac:	mov	r2, r4
   25bb0:	ldrb	r0, [r2, #1]!
   25bb4:	cmp	r0, #32
   25bb8:	bhi	25bd0 <main@@Base+0xfd34>
   25bbc:	mov	r0, r7
   25bc0:	mov	r1, r4
   25bc4:	mov	r2, r5
   25bc8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25bcc:	mov	r2, r0
   25bd0:	cmp	r2, r5
   25bd4:	beq	25c48 <main@@Base+0xfdac>
   25bd8:	ldrb	r0, [r2]
   25bdc:	cmp	r0, #44	; 0x2c
   25be0:	bne	25c50 <main@@Base+0xfdb4>
   25be4:	add	r1, r2, #1
   25be8:	sub	r0, r5, r1
   25bec:	cmp	r0, #2
   25bf0:	blt	25c20 <main@@Base+0xfd84>
   25bf4:	ldrb	r0, [r1]
   25bf8:	cmp	r0, #32
   25bfc:	bls	25c10 <main@@Base+0xfd74>
   25c00:	mov	r2, r1
   25c04:	cmp	r2, r5
   25c08:	bne	25c38 <main@@Base+0xfd9c>
   25c0c:	b	25c7c <main@@Base+0xfde0>
   25c10:	bne	25c20 <main@@Base+0xfd84>
   25c14:	ldrb	r0, [r2, #2]!
   25c18:	cmp	r0, #32
   25c1c:	bhi	25c30 <main@@Base+0xfd94>
   25c20:	mov	r0, r7
   25c24:	mov	r2, r5
   25c28:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25c2c:	mov	r2, r0
   25c30:	cmp	r2, r5
   25c34:	beq	25c7c <main@@Base+0xfde0>
   25c38:	ldrb	r0, [r2]
   25c3c:	cmp	r0, #125	; 0x7d
   25c40:	bne	254c4 <main@@Base+0xf628>
   25c44:	b	25c58 <main@@Base+0xfdbc>
   25c48:	mov	r4, r5
   25c4c:	b	25414 <main@@Base+0xf578>
   25c50:	cmp	r0, #125	; 0x7d
   25c54:	bne	25c88 <main@@Base+0xfdec>
   25c58:	add	r1, r2, #1
   25c5c:	sub	r0, r5, r1
   25c60:	cmp	r0, #2
   25c64:	blt	25cb0 <main@@Base+0xfe14>
   25c68:	ldrb	r0, [r1]
   25c6c:	cmp	r0, #32
   25c70:	bls	25c9c <main@@Base+0xfe00>
   25c74:	mov	r4, r1
   25c78:	b	25414 <main@@Base+0xf578>
   25c7c:	mov	r0, r7
   25c80:	mov	r1, r5
   25c84:	b	25c90 <main@@Base+0xfdf4>
   25c88:	mov	r0, r7
   25c8c:	mov	r1, r2
   25c90:	mov	r2, r5
   25c94:	mov	r3, #10
   25c98:	b	2540c <main@@Base+0xf570>
   25c9c:	bne	25cb0 <main@@Base+0xfe14>
   25ca0:	ldrb	r0, [r2, #2]!
   25ca4:	cmp	r0, #32
   25ca8:	mov	r4, r2
   25cac:	bhi	25414 <main@@Base+0xf578>
   25cb0:	mov	r0, r7
   25cb4:	mov	r2, r5
   25cb8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25cbc:	b	25410 <main@@Base+0xf574>
   25cc0:	andeq	r6, r3, r4, lsr #15
   25cc4:			; <UNDEFINED> instruction: 0xffffce34
   25cc8:	andeq	r0, r0, r0, lsr r2
   25ccc:			; <UNDEFINED> instruction: 0xffffcea0
   25cd0:	mov	r1, #0
   25cd4:	cmp	r0, #5
   25cd8:	movwcc	r1, #1
   25cdc:	mov	r0, r1
   25ce0:	bx	lr
   25ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25ce8:	add	fp, sp, #28
   25cec:	sub	sp, sp, #60	; 0x3c
   25cf0:	mov	r6, r0
   25cf4:	mov	r0, #0
   25cf8:	mov	sl, r1
   25cfc:	mov	r1, #3
   25d00:	mov	r4, r3
   25d04:	mov	r8, r2
   25d08:	str	r0, [r3]
   25d0c:	ldr	r0, [r6]
   25d10:	bl	2f340 <flatcc_builder_start_table@@Base>
   25d14:	cmp	r0, #0
   25d18:	bne	28ee4 <main@@Base+0x13048>
   25d1c:	cmp	sl, r8
   25d20:	beq	25d54 <main@@Base+0xfeb8>
   25d24:	ldrb	r0, [sl]
   25d28:	cmp	r0, #123	; 0x7b
   25d2c:	bne	25d54 <main@@Base+0xfeb8>
   25d30:	add	r1, sl, #1
   25d34:	sub	r0, r8, r1
   25d38:	cmp	r0, #2
   25d3c:	blt	25d84 <main@@Base+0xfee8>
   25d40:	ldrb	r0, [r1]
   25d44:	cmp	r0, #32
   25d48:	bls	25d74 <main@@Base+0xfed8>
   25d4c:	mov	sl, r1
   25d50:	b	25d94 <main@@Base+0xfef8>
   25d54:	mov	r0, r6
   25d58:	mov	r1, sl
   25d5c:	mov	r2, r8
   25d60:	mov	r3, #21
   25d64:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   25d68:	mov	sl, r0
   25d6c:	add	r0, r6, #20
   25d70:	b	28ed8 <main@@Base+0x1303c>
   25d74:	bne	25d84 <main@@Base+0xfee8>
   25d78:	ldrb	r0, [sl, #2]!
   25d7c:	cmp	r0, #32
   25d80:	bhi	25d94 <main@@Base+0xfef8>
   25d84:	mov	r0, r6
   25d88:	mov	r2, r8
   25d8c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   25d90:	mov	sl, r0
   25d94:	cmp	sl, r8
   25d98:	mov	r2, r8
   25d9c:	beq	25dd8 <main@@Base+0xff3c>
   25da0:	ldrb	r0, [sl]
   25da4:	cmp	r0, #125	; 0x7d
   25da8:	bne	25dd4 <main@@Base+0xff38>
   25dac:	add	r1, sl, #1
   25db0:	sub	r0, r8, r1
   25db4:	cmp	r0, #2
   25db8:	blt	28f30 <main@@Base+0x13094>
   25dbc:	ldrb	r0, [r1]
   25dc0:	cmp	r0, #32
   25dc4:	bls	28f20 <main@@Base+0x13084>
   25dc8:	mov	sl, r1
   25dcc:	add	r0, r6, #20
   25dd0:	b	28ed8 <main@@Base+0x1303c>
   25dd4:	mov	r2, sl
   25dd8:	add	r0, r6, #20
   25ddc:	movw	r1, #25186	; 0x6262
   25de0:	movw	sl, #0
   25de4:	str	r8, [sp, #16]
   25de8:	str	r6, [sp, #24]
   25dec:	str	r4, [sp, #20]
   25df0:	str	r0, [sp, #12]
   25df4:	movw	r0, #257	; 0x101
   25df8:	movt	r1, #25186	; 0x6262
   25dfc:	movt	sl, #26418	; 0x6732
   25e00:	movt	r0, #257	; 0x101
   25e04:	add	r0, r1, r0
   25e08:	str	r0, [sp, #8]
   25e0c:	movw	r0, #514	; 0x202
   25e10:	movt	r0, #514	; 0x202
   25e14:	add	r0, r1, r0
   25e18:	str	r0, [sp, #4]
   25e1c:	cmp	r2, r8
   25e20:	mov	r9, r8
   25e24:	beq	25e54 <main@@Base+0xffb8>
   25e28:	ldrb	r0, [r2]
   25e2c:	cmp	r0, #34	; 0x22
   25e30:	bne	25e3c <main@@Base+0xffa0>
   25e34:	add	r9, r2, #1
   25e38:	b	25e54 <main@@Base+0xffb8>
   25e3c:	mov	r1, r2
   25e40:	mov	r0, r6
   25e44:	mov	r2, r8
   25e48:	mov	r3, #5
   25e4c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   25e50:	mov	r9, r0
   25e54:	sub	r0, r8, r9
   25e58:	mov	r1, #8
   25e5c:	cmp	r0, #8
   25e60:	movcs	r0, r1
   25e64:	and	r0, r0, #15
   25e68:	sub	r1, r0, #1
   25e6c:	cmp	r1, #7
   25e70:	bhi	26114 <main@@Base+0x10278>
   25e74:	add	r6, pc, #36	; 0x24
   25e78:	mov	r0, #0
   25e7c:	mov	ip, #0
   25e80:	mov	lr, #0
   25e84:	mov	r2, #0
   25e88:	mov	r3, #0
   25e8c:	mov	r7, #0
   25e90:	mov	r5, #0
   25e94:	mov	r4, #0
   25e98:	ldr	r1, [r6, r1, lsl #2]
   25e9c:	add	pc, r6, r1
   25ea0:	andeq	r0, r0, r4, rrx
   25ea4:	andeq	r0, r0, ip, asr r0
   25ea8:	andeq	r0, r0, r4, asr r0
   25eac:	andeq	r0, r0, ip, asr #32
   25eb0:	andeq	r0, r0, r0, asr #32
   25eb4:	andeq	r0, r0, r4, lsr r0
   25eb8:	andeq	r0, r0, r4, lsr #32
   25ebc:	andeq	r0, r0, r0, lsr #32
   25ec0:	ldrb	ip, [r9, #7]
   25ec4:	ldrb	r1, [r9, #6]
   25ec8:	mov	lr, r0
   25ecc:	orr	r1, ip, r1, lsl #8
   25ed0:	mov	r0, r1
   25ed4:	ldrb	r1, [r9, #5]
   25ed8:	mov	r2, lr
   25edc:	orr	r0, r0, r1, lsl #16
   25ee0:	ldrb	r1, [r9, #4]
   25ee4:	mov	r3, r2
   25ee8:	orr	r0, r0, r1, lsl #24
   25eec:	ldrb	r1, [r9, #3]
   25ef0:	orr	r7, r1, r3
   25ef4:	ldrb	r1, [r9, #2]
   25ef8:	orr	r5, r7, r1, lsl #8
   25efc:	ldrb	r1, [r9, #1]
   25f00:	orr	r4, r5, r1, lsl #16
   25f04:	movw	r1, #28526	; 0x6f6e
   25f08:	movw	r2, #29556	; 0x7374
   25f0c:	ldr	r6, [sp, #24]
   25f10:	movt	r1, #27251	; 0x6a73
   25f14:	movt	r2, #29797	; 0x7465
   25f18:	eor	r0, r0, r1
   25f1c:	ldrb	r1, [r9]
   25f20:	orr	r1, r4, r1, lsl #24
   25f24:	eor	r1, r1, r2
   25f28:	orrs	r0, r0, r1
   25f2c:	bne	26114 <main@@Base+0x10278>
   25f30:	add	r1, r9, #8
   25f34:	mov	r2, #8
   25f38:	sub	r0, r8, r1
   25f3c:	cmp	r0, #8
   25f40:	movcs	r0, r2
   25f44:	and	r0, r0, #15
   25f48:	sub	r2, r0, #1
   25f4c:	cmp	r2, #7
   25f50:	bhi	26120 <main@@Base+0x10284>
   25f54:	add	r5, pc, #36	; 0x24
   25f58:	mov	r8, #0
   25f5c:	mov	ip, #0
   25f60:	mov	lr, #0
   25f64:	mov	r7, #0
   25f68:	mov	r3, #0
   25f6c:	mov	r6, #0
   25f70:	mov	r4, #0
   25f74:	ldr	r0, [r5, r2, lsl #2]
   25f78:	mov	r2, #0
   25f7c:	add	pc, r5, r0
   25f80:	andeq	r0, r0, r4, rrx
   25f84:	andeq	r0, r0, ip, asr r0
   25f88:	andeq	r0, r0, r4, asr r0
   25f8c:	andeq	r0, r0, ip, asr #32
   25f90:	andeq	r0, r0, r0, asr #32
   25f94:	andeq	r0, r0, r4, lsr r0
   25f98:	andeq	r0, r0, r4, lsr #32
   25f9c:	andeq	r0, r0, r0, lsr #32
   25fa0:	ldrb	ip, [r9, #15]
   25fa4:	ldrb	r0, [r9, #14]
   25fa8:	mov	lr, r8
   25fac:	orr	r0, ip, r0, lsl #8
   25fb0:	mov	r8, r0
   25fb4:	ldrb	r0, [r9, #13]
   25fb8:	mov	r7, lr
   25fbc:	orr	r8, r8, r0, lsl #16
   25fc0:	ldrb	r0, [r9, #12]
   25fc4:	mov	r3, r7
   25fc8:	orr	r8, r8, r0, lsl #24
   25fcc:	ldrb	r0, [r9, #11]
   25fd0:	orr	r6, r0, r3
   25fd4:	ldrb	r0, [r9, #10]
   25fd8:	orr	r4, r6, r0, lsl #8
   25fdc:	ldrb	r0, [r9, #9]
   25fe0:	orr	r2, r4, r0, lsl #16
   25fe4:	ldrb	r3, [r1]
   25fe8:	movw	r0, #28769	; 0x7061
   25fec:	ldr	r6, [sp, #24]
   25ff0:	movt	r0, #27000	; 0x6978
   25ff4:	eor	r0, r8, r0
   25ff8:	ldr	r8, [sp, #16]
   25ffc:	orr	r2, r2, r3, lsl #24
   26000:	movw	r3, #25958	; 0x6566
   26004:	movt	r3, #28786	; 0x7072
   26008:	eor	r2, r2, r3
   2600c:	orrs	r0, r0, r2
   26010:	bne	26120 <main@@Base+0x10284>
   26014:	add	ip, r9, #16
   26018:	mov	r0, #8
   2601c:	sub	r8, r8, ip
   26020:	cmp	r8, #8
   26024:	movcc	r0, r8
   26028:	and	r0, r0, #15
   2602c:	sub	r1, r0, #1
   26030:	cmp	r1, #7
   26034:	bhi	263d4 <main@@Base+0x10538>
   26038:	add	r4, pc, #28
   2603c:	mov	r0, #0
   26040:	mov	r2, #0
   26044:	mov	r3, #0
   26048:	mov	r6, #0
   2604c:	mov	r5, #0
   26050:	ldr	r7, [r4, r1, lsl #2]
   26054:	mov	r1, #0
   26058:	add	pc, r4, r7
   2605c:	andeq	r0, r0, r0, asr r0
   26060:	andeq	r0, r0, r8, asr #32
   26064:	andeq	r0, r0, r0, asr #32
   26068:	andeq	r0, r0, r8, lsr r0
   2606c:	andeq	r0, r0, r8, lsr #32
   26070:	andeq	r0, r0, r0, lsr #32
   26074:	andeq	r0, r0, r0, lsr #32
   26078:	andeq	r0, r0, r0, lsr #32
   2607c:	ldrb	r1, [r9, #21]
   26080:	lsl	r1, r1, #16
   26084:	ldrb	r2, [r9, #20]
   26088:	orr	r1, r1, r2, lsl #24
   2608c:	mov	r2, r0
   26090:	mov	r0, r1
   26094:	ldrb	r1, [r9, #19]
   26098:	orr	r3, r1, r2
   2609c:	ldrb	r1, [r9, #18]
   260a0:	orr	r6, r3, r1, lsl #8
   260a4:	ldrb	r1, [r9, #17]
   260a8:	orr	r5, r6, r1, lsl #16
   260ac:	ldrb	r1, [ip]
   260b0:	mov	r6, r0
   260b4:	movw	r3, #26990	; 0x696e
   260b8:	bfc	r6, #0, #16
   260bc:	movt	r3, #29299	; 0x7273
   260c0:	eor	r2, r6, sl
   260c4:	orr	r1, r5, r1, lsl #24
   260c8:	eor	r5, r1, r3
   260cc:	orrs	r2, r2, r5
   260d0:	bne	26128 <main@@Base+0x1028c>
   260d4:	ldr	r6, [sp, #24]
   260d8:	cmp	r8, #7
   260dc:	blt	263d4 <main@@Base+0x10538>
   260e0:	ldrb	r0, [r9, #22]
   260e4:	cmp	r0, #34	; 0x22
   260e8:	bne	263d4 <main@@Base+0x10538>
   260ec:	ldr	r4, [sp, #16]
   260f0:	add	r1, r9, #23
   260f4:	sub	r0, r4, r1
   260f8:	cmp	r0, #2
   260fc:	blt	261e8 <main@@Base+0x1034c>
   26100:	ldrb	r0, [r1]
   26104:	cmp	r0, #32
   26108:	bls	261d8 <main@@Base+0x1033c>
   2610c:	mov	r9, r1
   26110:	b	26200 <main@@Base+0x10364>
   26114:	mov	r0, r6
   26118:	mov	r1, r9
   2611c:	b	263e0 <main@@Base+0x10544>
   26120:	mov	r0, r6
   26124:	b	263e0 <main@@Base+0x10544>
   26128:	cmp	r8, #6
   2612c:	blt	26154 <main@@Base+0x102b8>
   26130:	movw	r2, #26990	; 0x696e
   26134:	and	r0, r0, #-16777216	; 0xff000000
   26138:	movt	r2, #29299	; 0x7273
   2613c:	eor	r0, r0, #1728053248	; 0x67000000
   26140:	eor	r1, r1, r2
   26144:	orrs	r0, r0, r1
   26148:	ldrbeq	r0, [r9, #21]
   2614c:	cmpeq	r0, #34	; 0x22
   26150:	beq	261ac <main@@Base+0x10310>
   26154:	movw	sl, #0
   26158:	movt	sl, #26418	; 0x6732
   2615c:	add	r0, sl, #65536	; 0x10000
   26160:	eor	r0, r6, r0
   26164:	ldr	r6, [sp, #24]
   26168:	orrs	r0, r0, r5
   2616c:	bne	263d4 <main@@Base+0x10538>
   26170:	cmp	r8, #7
   26174:	ldr	r8, [sp, #16]
   26178:	blt	263d8 <main@@Base+0x1053c>
   2617c:	ldrb	r0, [r9, #22]
   26180:	cmp	r0, #34	; 0x22
   26184:	bne	263d8 <main@@Base+0x1053c>
   26188:	add	r1, r9, #23
   2618c:	sub	r0, r8, r1
   26190:	cmp	r0, #2
   26194:	blt	262ec <main@@Base+0x10450>
   26198:	ldrb	r0, [r1]
   2619c:	cmp	r0, #32
   261a0:	bls	262dc <main@@Base+0x10440>
   261a4:	mov	r9, r1
   261a8:	b	26304 <main@@Base+0x10468>
   261ac:	ldr	r4, [sp, #16]
   261b0:	add	r1, r9, #22
   261b4:	sub	r0, r4, r1
   261b8:	cmp	r0, #2
   261bc:	blt	2626c <main@@Base+0x103d0>
   261c0:	ldrb	r0, [r1]
   261c4:	cmp	r0, #32
   261c8:	bls	26254 <main@@Base+0x103b8>
   261cc:	ldr	r4, [sp, #16]
   261d0:	mov	sl, r1
   261d4:	b	26284 <main@@Base+0x103e8>
   261d8:	bne	261e8 <main@@Base+0x1034c>
   261dc:	ldrb	r0, [r9, #24]!
   261e0:	cmp	r0, #32
   261e4:	bhi	26200 <main@@Base+0x10364>
   261e8:	mov	r0, r6
   261ec:	mov	r2, r4
   261f0:	mov	r5, ip
   261f4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   261f8:	mov	ip, r5
   261fc:	mov	r9, r0
   26200:	mov	r5, ip
   26204:	cmp	r9, r4
   26208:	beq	2623c <main@@Base+0x103a0>
   2620c:	ldrb	r0, [r9]
   26210:	cmp	r0, #58	; 0x3a
   26214:	bne	2623c <main@@Base+0x103a0>
   26218:	add	r1, r9, #1
   2621c:	sub	r0, r4, r1
   26220:	cmp	r0, #2
   26224:	blt	26368 <main@@Base+0x104cc>
   26228:	ldrb	r0, [r1]
   2622c:	cmp	r0, #32
   26230:	bls	26358 <main@@Base+0x104bc>
   26234:	mov	r9, r1
   26238:	b	26378 <main@@Base+0x104dc>
   2623c:	mov	r0, r6
   26240:	mov	r1, r9
   26244:	mov	r2, r4
   26248:	mov	r3, #4
   2624c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26250:	b	26374 <main@@Base+0x104d8>
   26254:	ldr	r4, [sp, #16]
   26258:	bne	2626c <main@@Base+0x103d0>
   2625c:	mov	sl, r9
   26260:	ldrb	r0, [sl, #23]!
   26264:	cmp	r0, #32
   26268:	bhi	26284 <main@@Base+0x103e8>
   2626c:	ldr	r0, [sp, #24]
   26270:	mov	r2, r4
   26274:	mov	r7, ip
   26278:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2627c:	mov	ip, r7
   26280:	mov	sl, r0
   26284:	mov	r7, ip
   26288:	cmp	sl, r4
   2628c:	beq	262c4 <main@@Base+0x10428>
   26290:	ldrb	r0, [sl]
   26294:	cmp	r0, #58	; 0x3a
   26298:	bne	262c4 <main@@Base+0x10428>
   2629c:	ldr	r0, [sp, #16]
   262a0:	add	r1, sl, #1
   262a4:	sub	r0, r0, r1
   262a8:	cmp	r0, #2
   262ac:	blt	26510 <main@@Base+0x10674>
   262b0:	ldrb	r0, [r1]
   262b4:	cmp	r0, #32
   262b8:	bls	26500 <main@@Base+0x10664>
   262bc:	mov	sl, r1
   262c0:	b	26520 <main@@Base+0x10684>
   262c4:	ldr	r0, [sp, #24]
   262c8:	ldr	r2, [sp, #16]
   262cc:	mov	r1, sl
   262d0:	mov	r3, #4
   262d4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   262d8:	b	2651c <main@@Base+0x10680>
   262dc:	bne	262ec <main@@Base+0x10450>
   262e0:	ldrb	r0, [r9, #24]!
   262e4:	cmp	r0, #32
   262e8:	bhi	26304 <main@@Base+0x10468>
   262ec:	mov	r0, r6
   262f0:	mov	r2, r8
   262f4:	mov	r4, ip
   262f8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   262fc:	mov	ip, r4
   26300:	mov	r9, r0
   26304:	mov	r4, ip
   26308:	cmp	r9, r8
   2630c:	beq	26340 <main@@Base+0x104a4>
   26310:	ldrb	r0, [r9]
   26314:	cmp	r0, #58	; 0x3a
   26318:	bne	26340 <main@@Base+0x104a4>
   2631c:	add	r1, r9, #1
   26320:	sub	r0, r8, r1
   26324:	cmp	r0, #2
   26328:	blt	266d4 <main@@Base+0x10838>
   2632c:	ldrb	r0, [r1]
   26330:	cmp	r0, #32
   26334:	bls	266c4 <main@@Base+0x10828>
   26338:	mov	r9, r1
   2633c:	b	266e4 <main@@Base+0x10848>
   26340:	mov	r0, r6
   26344:	mov	r1, r9
   26348:	mov	r2, r8
   2634c:	mov	r3, #4
   26350:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26354:	b	266e0 <main@@Base+0x10844>
   26358:	bne	26368 <main@@Base+0x104cc>
   2635c:	ldrb	r0, [r9, #2]!
   26360:	cmp	r0, #32
   26364:	bhi	26378 <main@@Base+0x104dc>
   26368:	mov	r0, r6
   2636c:	mov	r2, r4
   26370:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26374:	mov	r9, r0
   26378:	mov	ip, r5
   2637c:	cmp	r5, r9
   26380:	beq	263d4 <main@@Base+0x10538>
   26384:	ldr	r0, [r6]
   26388:	mov	r1, #2
   2638c:	bl	2f340 <flatcc_builder_start_table@@Base>
   26390:	cmp	r0, #0
   26394:	bne	28f48 <main@@Base+0x130ac>
   26398:	ldr	r8, [sp, #16]
   2639c:	cmp	r9, r8
   263a0:	beq	264b8 <main@@Base+0x1061c>
   263a4:	ldrb	r0, [r9]
   263a8:	cmp	r0, #123	; 0x7b
   263ac:	bne	264b8 <main@@Base+0x1061c>
   263b0:	add	r1, r9, #1
   263b4:	sub	r0, r8, r1
   263b8:	cmp	r0, #2
   263bc:	blt	265f4 <main@@Base+0x10758>
   263c0:	ldrb	r0, [r1]
   263c4:	cmp	r0, #32
   263c8:	bls	265e4 <main@@Base+0x10748>
   263cc:	mov	r9, r1
   263d0:	b	26604 <main@@Base+0x10768>
   263d4:	ldr	r8, [sp, #16]
   263d8:	mov	r0, r6
   263dc:	mov	r1, ip
   263e0:	mov	r2, r8
   263e4:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   263e8:	mov	r9, r0
   263ec:	sub	r0, r8, r9
   263f0:	cmp	r0, #2
   263f4:	blt	26428 <main@@Base+0x1058c>
   263f8:	ldrb	r0, [r9]
   263fc:	cmp	r0, #32
   26400:	bls	26414 <main@@Base+0x10578>
   26404:	mov	r2, r9
   26408:	cmp	r2, r8
   2640c:	bne	26444 <main@@Base+0x105a8>
   26410:	b	28e54 <main@@Base+0x12fb8>
   26414:	bne	26428 <main@@Base+0x1058c>
   26418:	mov	r2, r9
   2641c:	ldrb	r0, [r2, #1]!
   26420:	cmp	r0, #32
   26424:	bhi	2643c <main@@Base+0x105a0>
   26428:	mov	r0, r6
   2642c:	mov	r1, r9
   26430:	mov	r2, r8
   26434:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26438:	mov	r2, r0
   2643c:	cmp	r2, r8
   26440:	beq	28e54 <main@@Base+0x12fb8>
   26444:	ldrb	r0, [r2]
   26448:	ldr	r4, [sp, #20]
   2644c:	cmp	r0, #44	; 0x2c
   26450:	bne	28e60 <main@@Base+0x12fc4>
   26454:	add	r1, r2, #1
   26458:	sub	r0, r8, r1
   2645c:	cmp	r0, #2
   26460:	blt	26490 <main@@Base+0x105f4>
   26464:	ldrb	r0, [r1]
   26468:	cmp	r0, #32
   2646c:	bls	26480 <main@@Base+0x105e4>
   26470:	mov	r2, r1
   26474:	cmp	r2, r8
   26478:	bne	264a8 <main@@Base+0x1060c>
   2647c:	b	28eb0 <main@@Base+0x13014>
   26480:	bne	26490 <main@@Base+0x105f4>
   26484:	ldrb	r0, [r2, #2]!
   26488:	cmp	r0, #32
   2648c:	bhi	264a0 <main@@Base+0x10604>
   26490:	mov	r0, r6
   26494:	mov	r2, r8
   26498:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2649c:	mov	r2, r0
   264a0:	cmp	r2, r8
   264a4:	beq	28eb0 <main@@Base+0x13014>
   264a8:	ldrb	r0, [r2]
   264ac:	cmp	r0, #125	; 0x7d
   264b0:	bne	25e1c <main@@Base+0xff80>
   264b4:	b	28e68 <main@@Base+0x12fcc>
   264b8:	mov	r0, r6
   264bc:	mov	r1, r9
   264c0:	mov	r2, r8
   264c4:	mov	r3, #21
   264c8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   264cc:	mov	r9, r0
   264d0:	ldr	r0, [sp, #12]
   264d4:	ldr	r0, [r0]
   264d8:	cmp	r0, #0
   264dc:	bne	28f74 <main@@Base+0x130d8>
   264e0:	ldr	r0, [r6]
   264e4:	bl	2fd70 <flatcc_builder_end_table@@Base>
   264e8:	cmp	r0, #0
   264ec:	beq	28f74 <main@@Base+0x130d8>
   264f0:	mov	r7, r0
   264f4:	ldr	r0, [r6]
   264f8:	mov	r1, #1
   264fc:	b	26780 <main@@Base+0x108e4>
   26500:	bne	26510 <main@@Base+0x10674>
   26504:	ldrb	r0, [sl, #2]!
   26508:	cmp	r0, #32
   2650c:	bhi	26520 <main@@Base+0x10684>
   26510:	ldr	r0, [sp, #24]
   26514:	ldr	r2, [sp, #16]
   26518:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2651c:	mov	sl, r0
   26520:	mov	ip, r7
   26524:	cmp	r7, sl
   26528:	beq	26154 <main@@Base+0x102b8>
   2652c:	ldr	r6, [sp, #24]
   26530:	mov	r1, #9
   26534:	ldr	r0, [r6]
   26538:	bl	2f340 <flatcc_builder_start_table@@Base>
   2653c:	cmp	r0, #0
   26540:	bne	28f50 <main@@Base+0x130b4>
   26544:	ldr	r8, [sp, #16]
   26548:	cmp	sl, r8
   2654c:	beq	26580 <main@@Base+0x106e4>
   26550:	ldrb	r0, [sl]
   26554:	cmp	r0, #123	; 0x7b
   26558:	bne	26580 <main@@Base+0x106e4>
   2655c:	add	r1, sl, #1
   26560:	sub	r0, r8, r1
   26564:	cmp	r0, #2
   26568:	blt	26664 <main@@Base+0x107c8>
   2656c:	ldrb	r0, [r1]
   26570:	cmp	r0, #32
   26574:	bls	26654 <main@@Base+0x107b8>
   26578:	mov	sl, r1
   2657c:	b	26674 <main@@Base+0x107d8>
   26580:	mov	r0, r6
   26584:	mov	r1, sl
   26588:	mov	r2, r8
   2658c:	mov	r3, #21
   26590:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26594:	mov	sl, r0
   26598:	ldr	r0, [sp, #12]
   2659c:	ldr	r0, [r0]
   265a0:	cmp	r0, #0
   265a4:	bne	28f60 <main@@Base+0x130c4>
   265a8:	ldr	r0, [r6]
   265ac:	bl	2fd70 <flatcc_builder_end_table@@Base>
   265b0:	cmp	r0, #0
   265b4:	beq	28f60 <main@@Base+0x130c4>
   265b8:	mov	r4, r0
   265bc:	ldr	r0, [r6]
   265c0:	mov	r1, #0
   265c4:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   265c8:	cmp	r0, #0
   265cc:	beq	28ee4 <main@@Base+0x13048>
   265d0:	mov	r9, sl
   265d4:	movw	sl, #0
   265d8:	str	r4, [r0]
   265dc:	movt	sl, #26418	; 0x6732
   265e0:	b	263ec <main@@Base+0x10550>
   265e4:	bne	265f4 <main@@Base+0x10758>
   265e8:	ldrb	r0, [r9, #2]!
   265ec:	cmp	r0, #32
   265f0:	bhi	26604 <main@@Base+0x10768>
   265f4:	mov	r0, r6
   265f8:	mov	r2, r8
   265fc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26600:	mov	r9, r0
   26604:	cmp	r9, r8
   26608:	mov	r2, r8
   2660c:	beq	268ec <main@@Base+0x10a50>
   26610:	ldrb	r0, [r9]
   26614:	cmp	r0, #125	; 0x7d
   26618:	bne	2664c <main@@Base+0x107b0>
   2661c:	add	r1, r9, #1
   26620:	sub	r0, r8, r1
   26624:	cmp	r0, #2
   26628:	blt	2702c <main@@Base+0x11190>
   2662c:	ldrb	r0, [r1]
   26630:	cmp	r0, #32
   26634:	bhi	26ff0 <main@@Base+0x11154>
   26638:	bne	2702c <main@@Base+0x11190>
   2663c:	ldrb	r0, [r9, #2]!
   26640:	cmp	r0, #32
   26644:	bhi	264d0 <main@@Base+0x10634>
   26648:	b	2702c <main@@Base+0x11190>
   2664c:	mov	r2, r9
   26650:	b	268ec <main@@Base+0x10a50>
   26654:	bne	26664 <main@@Base+0x107c8>
   26658:	ldrb	r0, [sl, #2]!
   2665c:	cmp	r0, #32
   26660:	bhi	26674 <main@@Base+0x107d8>
   26664:	mov	r0, r6
   26668:	mov	r2, r8
   2666c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26670:	mov	sl, r0
   26674:	cmp	sl, r8
   26678:	mov	r2, r8
   2667c:	beq	27a44 <main@@Base+0x11ba8>
   26680:	ldrb	r0, [sl]
   26684:	cmp	r0, #125	; 0x7d
   26688:	bne	266bc <main@@Base+0x10820>
   2668c:	add	r1, sl, #1
   26690:	sub	r0, r8, r1
   26694:	cmp	r0, #2
   26698:	blt	28e44 <main@@Base+0x12fa8>
   2669c:	ldrb	r0, [r1]
   266a0:	cmp	r0, #32
   266a4:	bhi	28e08 <main@@Base+0x12f6c>
   266a8:	bne	28e44 <main@@Base+0x12fa8>
   266ac:	ldrb	r0, [sl, #2]!
   266b0:	cmp	r0, #32
   266b4:	bhi	26598 <main@@Base+0x106fc>
   266b8:	b	28e44 <main@@Base+0x12fa8>
   266bc:	mov	r2, sl
   266c0:	b	27a44 <main@@Base+0x11ba8>
   266c4:	bne	266d4 <main@@Base+0x10838>
   266c8:	ldrb	r0, [r9, #2]!
   266cc:	cmp	r0, #32
   266d0:	bhi	266e4 <main@@Base+0x10848>
   266d4:	mov	r0, r6
   266d8:	mov	r2, r8
   266dc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   266e0:	mov	r9, r0
   266e4:	mov	ip, r4
   266e8:	cmp	r4, r9
   266ec:	beq	263d8 <main@@Base+0x1053c>
   266f0:	ldr	r0, [r6]
   266f4:	mov	r1, #2
   266f8:	bl	2f340 <flatcc_builder_start_table@@Base>
   266fc:	cmp	r0, #0
   26700:	bne	28f74 <main@@Base+0x130d8>
   26704:	cmp	r9, r8
   26708:	beq	2673c <main@@Base+0x108a0>
   2670c:	ldrb	r0, [r9]
   26710:	cmp	r0, #123	; 0x7b
   26714:	bne	2673c <main@@Base+0x108a0>
   26718:	add	r1, r9, #1
   2671c:	sub	r0, r8, r1
   26720:	cmp	r0, #2
   26724:	blt	267a4 <main@@Base+0x10908>
   26728:	ldrb	r0, [r1]
   2672c:	cmp	r0, #32
   26730:	bls	26794 <main@@Base+0x108f8>
   26734:	mov	r9, r1
   26738:	b	267b4 <main@@Base+0x10918>
   2673c:	mov	r0, r6
   26740:	mov	r1, r9
   26744:	mov	r2, r8
   26748:	mov	r3, #21
   2674c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26750:	mov	r9, r0
   26754:	ldr	r0, [sp, #12]
   26758:	ldr	r0, [r0]
   2675c:	cmp	r0, #0
   26760:	bne	28f74 <main@@Base+0x130d8>
   26764:	ldr	r0, [r6]
   26768:	bl	2fd70 <flatcc_builder_end_table@@Base>
   2676c:	cmp	r0, #0
   26770:	beq	28f74 <main@@Base+0x130d8>
   26774:	mov	r7, r0
   26778:	ldr	r0, [r6]
   2677c:	mov	r1, #2
   26780:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   26784:	cmp	r0, #0
   26788:	beq	28f40 <main@@Base+0x130a4>
   2678c:	str	r7, [r0]
   26790:	b	263ec <main@@Base+0x10550>
   26794:	bne	267a4 <main@@Base+0x10908>
   26798:	ldrb	r0, [r9, #2]!
   2679c:	cmp	r0, #32
   267a0:	bhi	267b4 <main@@Base+0x10918>
   267a4:	mov	r0, r6
   267a8:	mov	r2, r8
   267ac:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   267b0:	mov	r9, r0
   267b4:	cmp	r9, r8
   267b8:	mov	r2, r8
   267bc:	beq	27454 <main@@Base+0x115b8>
   267c0:	ldrb	r0, [r9]
   267c4:	cmp	r0, #125	; 0x7d
   267c8:	bne	267fc <main@@Base+0x10960>
   267cc:	add	r1, r9, #1
   267d0:	sub	r0, r8, r1
   267d4:	cmp	r0, #2
   267d8:	blt	27954 <main@@Base+0x11ab8>
   267dc:	ldrb	r0, [r1]
   267e0:	cmp	r0, #32
   267e4:	bhi	278bc <main@@Base+0x11a20>
   267e8:	bne	27954 <main@@Base+0x11ab8>
   267ec:	ldrb	r0, [r9, #2]!
   267f0:	cmp	r0, #32
   267f4:	bhi	26754 <main@@Base+0x108b8>
   267f8:	b	27954 <main@@Base+0x11ab8>
   267fc:	mov	r2, r9
   26800:	b	27454 <main@@Base+0x115b8>
   26804:	mov	r9, r8
   26808:	cmp	sl, r9
   2680c:	bne	26890 <main@@Base+0x109f4>
   26810:	b	26858 <main@@Base+0x109bc>
   26814:	mov	r9, sl
   26818:	cmp	sl, r9
   2681c:	bne	26890 <main@@Base+0x109f4>
   26820:	b	26858 <main@@Base+0x109bc>
   26824:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26828:	cmp	r0, #0
   2682c:	beq	268d0 <main@@Base+0x10a34>
   26830:	ldr	r6, [sp, #24]
   26834:	ldr	r8, [sp, #16]
   26838:	mov	r1, r9
   2683c:	mov	r3, #7
   26840:	mov	r0, r6
   26844:	mov	r2, r8
   26848:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2684c:	mov	r9, r0
   26850:	cmp	sl, r9
   26854:	bne	26890 <main@@Base+0x109f4>
   26858:	add	r0, sp, #44	; 0x2c
   2685c:	mov	r1, sl
   26860:	mov	r2, r8
   26864:	str	r0, [sp]
   26868:	mov	r0, r6
   2686c:	ldr	r3, [pc, #4084]	; 27868 <main@@Base+0x119cc>
   26870:	add	r3, pc, r3
   26874:	bl	243b4 <main@@Base+0xe518>
   26878:	mov	r9, r0
   2687c:	cmp	r0, sl
   26880:	cmpne	r9, r8
   26884:	beq	28f6c <main@@Base+0x130d0>
   26888:	ldr	r5, [sp, #44]	; 0x2c
   2688c:	ldr	r6, [sp, #24]
   26890:	movw	sl, #0
   26894:	cmp	r5, #0
   26898:	movt	sl, #26418	; 0x6732
   2689c:	bne	268ac <main@@Base+0x10a10>
   268a0:	ldrb	r0, [r6, #8]
   268a4:	tst	r0, #2
   268a8:	beq	26efc <main@@Base+0x11060>
   268ac:	ldr	r0, [r6]
   268b0:	mov	r1, #1
   268b4:	mov	r2, #4
   268b8:	mov	r3, #4
   268bc:	bl	307e4 <flatcc_builder_table_add@@Base>
   268c0:	cmp	r0, #0
   268c4:	beq	28f6c <main@@Base+0x130d0>
   268c8:	str	r5, [r0]
   268cc:	b	26efc <main@@Base+0x11060>
   268d0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   268d4:	ldr	r8, [sp, #16]
   268d8:	ldr	r6, [sp, #24]
   268dc:	str	r5, [sp, #44]	; 0x2c
   268e0:	cmp	sl, r9
   268e4:	bne	26890 <main@@Base+0x109f4>
   268e8:	b	26858 <main@@Base+0x109bc>
   268ec:	cmp	r2, r8
   268f0:	mov	sl, r8
   268f4:	beq	26924 <main@@Base+0x10a88>
   268f8:	ldrb	r0, [r2]
   268fc:	cmp	r0, #34	; 0x22
   26900:	bne	2690c <main@@Base+0x10a70>
   26904:	add	sl, r2, #1
   26908:	b	26924 <main@@Base+0x10a88>
   2690c:	mov	r1, r2
   26910:	mov	r0, r6
   26914:	mov	r2, r8
   26918:	mov	r3, #5
   2691c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26920:	mov	sl, r0
   26924:	sub	r0, r8, sl
   26928:	mov	r1, #8
   2692c:	cmp	r0, #8
   26930:	movcs	r0, r1
   26934:	and	r0, r0, #15
   26938:	sub	r1, r0, #1
   2693c:	cmp	r1, #7
   26940:	bhi	26b30 <main@@Base+0x10c94>
   26944:	add	r5, pc, #36	; 0x24
   26948:	mov	r0, #0
   2694c:	mov	ip, #0
   26950:	mov	lr, #0
   26954:	mov	r2, #0
   26958:	mov	r3, #0
   2695c:	mov	r6, #0
   26960:	mov	r4, #0
   26964:	mov	r7, #0
   26968:	ldr	r1, [r5, r1, lsl #2]
   2696c:	add	pc, r5, r1
   26970:	andeq	r0, r0, r4, rrx
   26974:	andeq	r0, r0, ip, asr r0
   26978:	andeq	r0, r0, r4, asr r0
   2697c:	andeq	r0, r0, ip, asr #32
   26980:	andeq	r0, r0, r0, asr #32
   26984:	andeq	r0, r0, r4, lsr r0
   26988:	andeq	r0, r0, r4, lsr #32
   2698c:	andeq	r0, r0, r0, lsr #32
   26990:	ldrb	ip, [sl, #7]
   26994:	ldrb	r1, [sl, #6]
   26998:	mov	lr, r0
   2699c:	orr	r1, ip, r1, lsl #8
   269a0:	mov	r0, r1
   269a4:	ldrb	r1, [sl, #5]
   269a8:	mov	r2, lr
   269ac:	orr	r0, r0, r1, lsl #16
   269b0:	ldrb	r1, [sl, #4]
   269b4:	mov	r3, r2
   269b8:	orr	r0, r0, r1, lsl #24
   269bc:	ldrb	r1, [sl, #3]
   269c0:	orr	r6, r1, r3
   269c4:	ldrb	r1, [sl, #2]
   269c8:	orr	r4, r6, r1, lsl #8
   269cc:	ldrb	r1, [sl, #1]
   269d0:	orr	r7, r4, r1, lsl #16
   269d4:	movw	r1, #25186	; 0x6262
   269d8:	movw	r2, #24929	; 0x6161
   269dc:	ldr	r6, [sp, #24]
   269e0:	movt	r1, #24418	; 0x5f62
   269e4:	movt	r2, #24929	; 0x6161
   269e8:	eor	r0, r0, r1
   269ec:	ldrb	r1, [sl]
   269f0:	orr	r1, r7, r1, lsl #24
   269f4:	eor	r1, r1, r2
   269f8:	orrs	r0, r0, r1
   269fc:	bne	26b30 <main@@Base+0x10c94>
   26a00:	mov	r0, r8
   26a04:	add	r8, sl, #8
   26a08:	sub	lr, r0, r8
   26a0c:	mov	r0, #8
   26a10:	cmp	lr, #8
   26a14:	movcc	r0, lr
   26a18:	and	r0, r0, #15
   26a1c:	sub	r0, r0, #1
   26a20:	cmp	r0, #7
   26a24:	bhi	26edc <main@@Base+0x11040>
   26a28:	add	r7, pc, #36	; 0x24
   26a2c:	mov	r1, #0
   26a30:	mov	ip, #0
   26a34:	mov	r9, #0
   26a38:	mov	r6, #0
   26a3c:	mov	r3, #0
   26a40:	mov	r5, #0
   26a44:	mov	r2, #0
   26a48:	ldr	r4, [r7, r0, lsl #2]
   26a4c:	mov	r0, #0
   26a50:	add	pc, r7, r4
   26a54:	andeq	r0, r0, r4, rrx
   26a58:	andeq	r0, r0, ip, asr r0
   26a5c:	andeq	r0, r0, r4, asr r0
   26a60:	andeq	r0, r0, ip, asr #32
   26a64:	andeq	r0, r0, r0, asr #32
   26a68:	andeq	r0, r0, r4, lsr r0
   26a6c:	andeq	r0, r0, r4, lsr #32
   26a70:	andeq	r0, r0, r0, lsr #32
   26a74:	ldrb	ip, [sl, #15]
   26a78:	ldrb	r0, [sl, #14]
   26a7c:	mov	r9, r1
   26a80:	orr	r0, ip, r0, lsl #8
   26a84:	mov	r1, r0
   26a88:	ldrb	r0, [sl, #13]
   26a8c:	mov	r6, r9
   26a90:	orr	r1, r1, r0, lsl #16
   26a94:	ldrb	r0, [sl, #12]
   26a98:	mov	r3, r6
   26a9c:	orr	r1, r1, r0, lsl #24
   26aa0:	ldrb	r0, [sl, #11]
   26aa4:	orr	r5, r0, r3
   26aa8:	ldrb	r0, [sl, #10]
   26aac:	orr	r2, r5, r0, lsl #8
   26ab0:	ldrb	r0, [sl, #9]
   26ab4:	orr	r0, r2, r0, lsl #16
   26ab8:	movw	r3, #29440	; 0x7300
   26abc:	bic	r2, r1, #255	; 0xff
   26ac0:	movt	r3, #25968	; 0x6570
   26ac4:	eor	r2, r2, r3
   26ac8:	ldrb	r3, [r8]
   26acc:	orr	r0, r0, r3, lsl #24
   26ad0:	movw	r3, #29556	; 0x7374
   26ad4:	movt	r3, #25183	; 0x625f
   26ad8:	eor	r0, r0, r3
   26adc:	orrs	r2, r2, r0
   26ae0:	bne	26b3c <main@@Base+0x10ca0>
   26ae4:	ldr	r6, [sp, #24]
   26ae8:	cmp	lr, #8
   26aec:	blt	26edc <main@@Base+0x11040>
   26af0:	ldrb	r0, [sl, #15]
   26af4:	cmp	r0, #34	; 0x22
   26af8:	bne	26edc <main@@Base+0x11040>
   26afc:	ldr	r4, [sp, #16]
   26b00:	add	r1, sl, #16
   26b04:	sub	r0, r4, r1
   26b08:	cmp	r0, #2
   26b0c:	blt	26bb0 <main@@Base+0x10d14>
   26b10:	ldrb	r0, [r1]
   26b14:	cmp	r0, #32
   26b18:	bls	26b9c <main@@Base+0x10d00>
   26b1c:	ldr	r4, [sp, #16]
   26b20:	mov	sl, r1
   26b24:	cmp	sl, r4
   26b28:	bne	26bc8 <main@@Base+0x10d2c>
   26b2c:	b	26c04 <main@@Base+0x10d68>
   26b30:	mov	r0, r6
   26b34:	mov	r1, sl
   26b38:	b	26ee8 <main@@Base+0x1104c>
   26b3c:	movw	r2, #29791	; 0x745f
   26b40:	ldr	r6, [sp, #24]
   26b44:	movt	r2, #24946	; 0x6172
   26b48:	eor	r1, r1, r2
   26b4c:	orrs	r0, r1, r0
   26b50:	bne	26edc <main@@Base+0x11040>
   26b54:	cmp	lr, #9
   26b58:	blt	26edc <main@@Base+0x11040>
   26b5c:	ldrb	r0, [sl, #16]
   26b60:	cmp	r0, #34	; 0x22
   26b64:	bne	26edc <main@@Base+0x11040>
   26b68:	ldr	r4, [sp, #16]
   26b6c:	add	r1, sl, #17
   26b70:	sub	r0, r4, r1
   26b74:	cmp	r0, #2
   26b78:	blt	26c30 <main@@Base+0x10d94>
   26b7c:	ldrb	r0, [r1]
   26b80:	cmp	r0, #32
   26b84:	bls	26c1c <main@@Base+0x10d80>
   26b88:	ldr	r4, [sp, #16]
   26b8c:	mov	sl, r1
   26b90:	cmp	sl, r4
   26b94:	bne	26c48 <main@@Base+0x10dac>
   26b98:	b	26c88 <main@@Base+0x10dec>
   26b9c:	ldr	r4, [sp, #16]
   26ba0:	bne	26bb0 <main@@Base+0x10d14>
   26ba4:	ldrb	r0, [sl, #17]!
   26ba8:	cmp	r0, #32
   26bac:	bhi	26bc0 <main@@Base+0x10d24>
   26bb0:	mov	r0, r6
   26bb4:	mov	r2, r4
   26bb8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26bbc:	mov	sl, r0
   26bc0:	cmp	sl, r4
   26bc4:	beq	26c04 <main@@Base+0x10d68>
   26bc8:	ldrb	r0, [sl]
   26bcc:	cmp	r0, #58	; 0x3a
   26bd0:	bne	26c04 <main@@Base+0x10d68>
   26bd4:	ldr	r0, [sp, #16]
   26bd8:	add	r1, sl, #1
   26bdc:	sub	r0, r0, r1
   26be0:	cmp	r0, #2
   26be4:	blt	26cb0 <main@@Base+0x10e14>
   26be8:	ldrb	r0, [r1]
   26bec:	cmp	r0, #32
   26bf0:	bls	26ca0 <main@@Base+0x10e04>
   26bf4:	mov	sl, r1
   26bf8:	cmp	r8, sl
   26bfc:	bne	26cc8 <main@@Base+0x10e2c>
   26c00:	b	26edc <main@@Base+0x11040>
   26c04:	ldr	r2, [sp, #16]
   26c08:	mov	r0, r6
   26c0c:	mov	r1, sl
   26c10:	mov	r3, #4
   26c14:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26c18:	b	26cbc <main@@Base+0x10e20>
   26c1c:	ldr	r4, [sp, #16]
   26c20:	bne	26c30 <main@@Base+0x10d94>
   26c24:	ldrb	r0, [sl, #18]!
   26c28:	cmp	r0, #32
   26c2c:	bhi	26c40 <main@@Base+0x10da4>
   26c30:	mov	r0, r6
   26c34:	mov	r2, r4
   26c38:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26c3c:	mov	sl, r0
   26c40:	cmp	sl, r4
   26c44:	beq	26c88 <main@@Base+0x10dec>
   26c48:	ldrb	r0, [sl]
   26c4c:	cmp	r0, #58	; 0x3a
   26c50:	bne	26c88 <main@@Base+0x10dec>
   26c54:	ldr	r0, [sp, #16]
   26c58:	add	r1, sl, #1
   26c5c:	sub	r0, r0, r1
   26c60:	cmp	r0, #2
   26c64:	blt	26e5c <main@@Base+0x10fc0>
   26c68:	ldrb	r0, [r1]
   26c6c:	cmp	r0, #32
   26c70:	bls	26e48 <main@@Base+0x10fac>
   26c74:	ldr	r6, [sp, #24]
   26c78:	mov	sl, r1
   26c7c:	cmp	r8, sl
   26c80:	bne	26e74 <main@@Base+0x10fd8>
   26c84:	b	26edc <main@@Base+0x11040>
   26c88:	ldr	r2, [sp, #16]
   26c8c:	mov	r0, r6
   26c90:	mov	r1, sl
   26c94:	mov	r3, #4
   26c98:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26c9c:	b	26e68 <main@@Base+0x10fcc>
   26ca0:	bne	26cb0 <main@@Base+0x10e14>
   26ca4:	ldrb	r0, [sl, #2]!
   26ca8:	cmp	r0, #32
   26cac:	bhi	26cc0 <main@@Base+0x10e24>
   26cb0:	ldr	r2, [sp, #16]
   26cb4:	mov	r0, r6
   26cb8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26cbc:	mov	sl, r0
   26cc0:	cmp	r8, sl
   26cc4:	beq	26edc <main@@Base+0x11040>
   26cc8:	ldr	r8, [sp, #16]
   26ccc:	mov	r6, #0
   26cd0:	str	r6, [fp, #-36]	; 0xffffffdc
   26cd4:	str	r6, [fp, #-40]	; 0xffffffd8
   26cd8:	str	r6, [sp, #36]	; 0x24
   26cdc:	str	r6, [sp, #32]
   26ce0:	str	r6, [sp, #44]	; 0x2c
   26ce4:	cmp	sl, r8
   26ce8:	beq	26d48 <main@@Base+0x10eac>
   26cec:	sub	r0, fp, #40	; 0x28
   26cf0:	mov	r1, sl
   26cf4:	mov	r2, r8
   26cf8:	add	r3, sp, #44	; 0x2c
   26cfc:	str	r0, [sp]
   26d00:	ldr	r0, [sp, #24]
   26d04:	bl	363e0 <flatcc_json_parser_integer@@Base>
   26d08:	cmp	r0, sl
   26d0c:	beq	26d5c <main@@Base+0x10ec0>
   26d10:	mov	r9, r0
   26d14:	ldr	r0, [sp, #44]	; 0x2c
   26d18:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26d1c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26d20:	cmp	r0, #0
   26d24:	beq	26d74 <main@@Base+0x10ed8>
   26d28:	subs	r0, r6, #1
   26d2c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26d30:	bcc	26da8 <main@@Base+0x10f0c>
   26d34:	ldr	r0, [sp, #24]
   26d38:	mov	r1, r9
   26d3c:	mov	r2, r8
   26d40:	mov	r3, #8
   26d44:	b	26d8c <main@@Base+0x10ef0>
   26d48:	mov	r5, #0
   26d4c:	mov	r9, r8
   26d50:	cmp	sl, r9
   26d54:	bne	26df8 <main@@Base+0x10f5c>
   26d58:	b	26dc0 <main@@Base+0x10f24>
   26d5c:	mov	r6, #0
   26d60:	mov	r5, #0
   26d64:	mov	r9, sl
   26d68:	cmp	sl, r9
   26d6c:	bne	26df8 <main@@Base+0x10f5c>
   26d70:	b	26dc0 <main@@Base+0x10f24>
   26d74:	cmn	r5, #1
   26d78:	bgt	26db0 <main@@Base+0x10f14>
   26d7c:	ldr	r0, [sp, #24]
   26d80:	mov	r1, r9
   26d84:	mov	r2, r8
   26d88:	mov	r3, #7
   26d8c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   26d90:	mov	r9, r0
   26d94:	mov	r6, #0
   26d98:	mov	r5, #0
   26d9c:	cmp	sl, r9
   26da0:	bne	26df8 <main@@Base+0x10f5c>
   26da4:	b	26dc0 <main@@Base+0x10f24>
   26da8:	rsbs	r6, r6, #0
   26dac:	rsc	r5, r5, #0
   26db0:	str	r6, [sp, #32]
   26db4:	str	r5, [sp, #36]	; 0x24
   26db8:	cmp	sl, r9
   26dbc:	bne	26df8 <main@@Base+0x10f5c>
   26dc0:	add	r0, sp, #32
   26dc4:	mov	r1, sl
   26dc8:	mov	r2, r8
   26dcc:	str	r0, [sp]
   26dd0:	ldr	r0, [sp, #24]
   26dd4:	ldr	r3, [pc, #3880]	; 27d04 <main@@Base+0x11e68>
   26dd8:	add	r3, pc, r3
   26ddc:	bl	241bc <main@@Base+0xe320>
   26de0:	mov	r9, r0
   26de4:	cmp	r0, sl
   26de8:	cmpne	r9, r8
   26dec:	beq	28f6c <main@@Base+0x130d0>
   26df0:	ldr	r6, [sp, #32]
   26df4:	ldr	r5, [sp, #36]	; 0x24
   26df8:	movw	sl, #0
   26dfc:	orrs	r0, r6, r5
   26e00:	movt	sl, #26418	; 0x6732
   26e04:	bne	26e18 <main@@Base+0x10f7c>
   26e08:	ldr	r0, [sp, #24]
   26e0c:	ldrb	r0, [r0, #8]
   26e10:	tst	r0, #2
   26e14:	beq	26e40 <main@@Base+0x10fa4>
   26e18:	ldr	r0, [sp, #24]
   26e1c:	mov	r1, #0
   26e20:	mov	r2, #8
   26e24:	mov	r3, #8
   26e28:	ldr	r0, [r0]
   26e2c:	bl	307e4 <flatcc_builder_table_add@@Base>
   26e30:	cmp	r0, #0
   26e34:	beq	28f6c <main@@Base+0x130d0>
   26e38:	str	r6, [r0]
   26e3c:	str	r5, [r0, #4]
   26e40:	ldr	r6, [sp, #24]
   26e44:	b	26efc <main@@Base+0x11060>
   26e48:	ldr	r6, [sp, #24]
   26e4c:	bne	26e5c <main@@Base+0x10fc0>
   26e50:	ldrb	r0, [sl, #2]!
   26e54:	cmp	r0, #32
   26e58:	bhi	26e6c <main@@Base+0x10fd0>
   26e5c:	ldr	r2, [sp, #16]
   26e60:	mov	r0, r6
   26e64:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26e68:	mov	sl, r0
   26e6c:	cmp	r8, sl
   26e70:	beq	26edc <main@@Base+0x11040>
   26e74:	ldr	r8, [sp, #16]
   26e78:	mov	r5, #0
   26e7c:	str	r5, [fp, #-36]	; 0xffffffdc
   26e80:	str	r5, [fp, #-40]	; 0xffffffd8
   26e84:	str	r5, [sp, #44]	; 0x2c
   26e88:	str	r5, [sp, #32]
   26e8c:	cmp	sl, r8
   26e90:	beq	26804 <main@@Base+0x10968>
   26e94:	sub	r0, fp, #40	; 0x28
   26e98:	mov	r1, sl
   26e9c:	mov	r2, r8
   26ea0:	add	r3, sp, #32
   26ea4:	str	r0, [sp]
   26ea8:	mov	r0, r6
   26eac:	bl	363e0 <flatcc_json_parser_integer@@Base>
   26eb0:	cmp	r0, sl
   26eb4:	beq	26814 <main@@Base+0x10978>
   26eb8:	mov	r9, r0
   26ebc:	ldr	r0, [sp, #32]
   26ec0:	cmp	r0, #0
   26ec4:	beq	26824 <main@@Base+0x10988>
   26ec8:	mov	r0, r6
   26ecc:	mov	r1, r9
   26ed0:	mov	r2, r8
   26ed4:	mov	r3, #8
   26ed8:	b	26848 <main@@Base+0x109ac>
   26edc:	mov	r1, r8
   26ee0:	ldr	r8, [sp, #16]
   26ee4:	mov	r0, r6
   26ee8:	mov	r2, r8
   26eec:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   26ef0:	movw	sl, #0
   26ef4:	mov	r9, r0
   26ef8:	movt	sl, #26418	; 0x6732
   26efc:	sub	r0, r8, r9
   26f00:	cmp	r0, #2
   26f04:	blt	26f38 <main@@Base+0x1109c>
   26f08:	ldrb	r0, [r9]
   26f0c:	cmp	r0, #32
   26f10:	bls	26f24 <main@@Base+0x11088>
   26f14:	mov	r2, r9
   26f18:	cmp	r2, r8
   26f1c:	bne	26f54 <main@@Base+0x110b8>
   26f20:	b	26fc4 <main@@Base+0x11128>
   26f24:	bne	26f38 <main@@Base+0x1109c>
   26f28:	mov	r2, r9
   26f2c:	ldrb	r0, [r2, #1]!
   26f30:	cmp	r0, #32
   26f34:	bhi	26f4c <main@@Base+0x110b0>
   26f38:	mov	r0, r6
   26f3c:	mov	r1, r9
   26f40:	mov	r2, r8
   26f44:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26f48:	mov	r2, r0
   26f4c:	cmp	r2, r8
   26f50:	beq	26fc4 <main@@Base+0x11128>
   26f54:	ldrb	r0, [r2]
   26f58:	cmp	r0, #44	; 0x2c
   26f5c:	bne	26fcc <main@@Base+0x11130>
   26f60:	add	r1, r2, #1
   26f64:	sub	r0, r8, r1
   26f68:	cmp	r0, #2
   26f6c:	blt	26f9c <main@@Base+0x11100>
   26f70:	ldrb	r0, [r1]
   26f74:	cmp	r0, #32
   26f78:	bls	26f8c <main@@Base+0x110f0>
   26f7c:	mov	r2, r1
   26f80:	cmp	r2, r8
   26f84:	bne	26fb4 <main@@Base+0x11118>
   26f88:	b	26ff8 <main@@Base+0x1115c>
   26f8c:	bne	26f9c <main@@Base+0x11100>
   26f90:	ldrb	r0, [r2, #2]!
   26f94:	cmp	r0, #32
   26f98:	bhi	26fac <main@@Base+0x11110>
   26f9c:	mov	r0, r6
   26fa0:	mov	r2, r8
   26fa4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   26fa8:	mov	r2, r0
   26fac:	cmp	r2, r8
   26fb0:	beq	26ff8 <main@@Base+0x1115c>
   26fb4:	ldrb	r0, [r2]
   26fb8:	cmp	r0, #125	; 0x7d
   26fbc:	bne	268ec <main@@Base+0x10a50>
   26fc0:	b	26fd4 <main@@Base+0x11138>
   26fc4:	mov	r9, r8
   26fc8:	b	264d0 <main@@Base+0x10634>
   26fcc:	cmp	r0, #125	; 0x7d
   26fd0:	bne	27004 <main@@Base+0x11168>
   26fd4:	add	r1, r2, #1
   26fd8:	sub	r0, r8, r1
   26fdc:	cmp	r0, #2
   26fe0:	blt	2702c <main@@Base+0x11190>
   26fe4:	ldrb	r0, [r1]
   26fe8:	cmp	r0, #32
   26fec:	bls	27018 <main@@Base+0x1117c>
   26ff0:	mov	r9, r1
   26ff4:	b	264d0 <main@@Base+0x10634>
   26ff8:	mov	r0, r6
   26ffc:	mov	r1, r8
   27000:	b	2700c <main@@Base+0x11170>
   27004:	mov	r0, r6
   27008:	mov	r1, r2
   2700c:	mov	r2, r8
   27010:	mov	r3, #10
   27014:	b	264c8 <main@@Base+0x1062c>
   27018:	bne	2702c <main@@Base+0x11190>
   2701c:	ldrb	r0, [r2, #2]!
   27020:	cmp	r0, #32
   27024:	mov	r9, r2
   27028:	bhi	264d0 <main@@Base+0x10634>
   2702c:	mov	r0, r6
   27030:	mov	r2, r8
   27034:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27038:	b	264cc <main@@Base+0x10630>
   2703c:	ldr	r4, [sp, #16]
   27040:	bne	27050 <main@@Base+0x111b4>
   27044:	ldrb	r0, [sl, #17]!
   27048:	cmp	r0, #32
   2704c:	bhi	27060 <main@@Base+0x111c4>
   27050:	mov	r0, r6
   27054:	mov	r2, r4
   27058:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2705c:	mov	sl, r0
   27060:	cmp	sl, r4
   27064:	beq	270a8 <main@@Base+0x1120c>
   27068:	ldrb	r0, [sl]
   2706c:	cmp	r0, #58	; 0x3a
   27070:	bne	270a8 <main@@Base+0x1120c>
   27074:	ldr	r0, [sp, #16]
   27078:	add	r1, sl, #1
   2707c:	sub	r0, r0, r1
   27080:	cmp	r0, #2
   27084:	blt	27158 <main@@Base+0x112bc>
   27088:	ldrb	r0, [r1]
   2708c:	cmp	r0, #32
   27090:	bls	27144 <main@@Base+0x112a8>
   27094:	ldr	r6, [sp, #24]
   27098:	mov	sl, r1
   2709c:	cmp	r8, sl
   270a0:	bne	27170 <main@@Base+0x112d4>
   270a4:	b	277b8 <main@@Base+0x1191c>
   270a8:	ldr	r2, [sp, #16]
   270ac:	mov	r0, r6
   270b0:	mov	r1, sl
   270b4:	mov	r3, #4
   270b8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   270bc:	b	27164 <main@@Base+0x112c8>
   270c0:	ldr	r4, [sp, #16]
   270c4:	bne	270d4 <main@@Base+0x11238>
   270c8:	ldrb	r0, [sl, #23]!
   270cc:	cmp	r0, #32
   270d0:	bhi	270e4 <main@@Base+0x11248>
   270d4:	mov	r0, r6
   270d8:	mov	r2, r4
   270dc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   270e0:	mov	sl, r0
   270e4:	cmp	sl, r4
   270e8:	beq	2712c <main@@Base+0x11290>
   270ec:	ldrb	r0, [sl]
   270f0:	cmp	r0, #58	; 0x3a
   270f4:	bne	2712c <main@@Base+0x11290>
   270f8:	ldr	r0, [sp, #16]
   270fc:	add	r1, sl, #1
   27100:	sub	r0, r0, r1
   27104:	cmp	r0, #2
   27108:	blt	27300 <main@@Base+0x11464>
   2710c:	ldrb	r0, [r1]
   27110:	cmp	r0, #32
   27114:	bls	272ec <main@@Base+0x11450>
   27118:	ldr	r6, [sp, #24]
   2711c:	mov	sl, r1
   27120:	cmp	r8, sl
   27124:	bne	27318 <main@@Base+0x1147c>
   27128:	b	277b8 <main@@Base+0x1191c>
   2712c:	ldr	r2, [sp, #16]
   27130:	mov	r0, r6
   27134:	mov	r1, sl
   27138:	mov	r3, #4
   2713c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   27140:	b	2730c <main@@Base+0x11470>
   27144:	ldr	r6, [sp, #24]
   27148:	bne	27158 <main@@Base+0x112bc>
   2714c:	ldrb	r0, [sl, #2]!
   27150:	cmp	r0, #32
   27154:	bhi	27168 <main@@Base+0x112cc>
   27158:	ldr	r2, [sp, #16]
   2715c:	mov	r0, r6
   27160:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27164:	mov	sl, r0
   27168:	cmp	r8, sl
   2716c:	beq	277b8 <main@@Base+0x1191c>
   27170:	ldr	r2, [sp, #16]
   27174:	mov	r6, #0
   27178:	str	r6, [fp, #-36]	; 0xffffffdc
   2717c:	str	r6, [fp, #-40]	; 0xffffffd8
   27180:	str	r6, [sp, #36]	; 0x24
   27184:	str	r6, [sp, #32]
   27188:	str	r6, [sp, #44]	; 0x2c
   2718c:	cmp	sl, r2
   27190:	beq	271ec <main@@Base+0x11350>
   27194:	sub	r0, fp, #40	; 0x28
   27198:	mov	r1, sl
   2719c:	add	r3, sp, #44	; 0x2c
   271a0:	str	r0, [sp]
   271a4:	ldr	r0, [sp, #24]
   271a8:	bl	363e0 <flatcc_json_parser_integer@@Base>
   271ac:	cmp	r0, sl
   271b0:	beq	27200 <main@@Base+0x11364>
   271b4:	mov	r9, r0
   271b8:	ldr	r0, [sp, #44]	; 0x2c
   271bc:	ldr	r6, [fp, #-40]	; 0xffffffd8
   271c0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   271c4:	cmp	r0, #0
   271c8:	beq	27218 <main@@Base+0x1137c>
   271cc:	subs	r0, r6, #1
   271d0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   271d4:	bcc	2724c <main@@Base+0x113b0>
   271d8:	ldr	r0, [sp, #24]
   271dc:	ldr	r2, [sp, #16]
   271e0:	mov	r1, r9
   271e4:	mov	r3, #8
   271e8:	b	27230 <main@@Base+0x11394>
   271ec:	mov	r5, #0
   271f0:	mov	r9, r2
   271f4:	cmp	sl, r9
   271f8:	bne	272a0 <main@@Base+0x11404>
   271fc:	b	27264 <main@@Base+0x113c8>
   27200:	mov	r6, #0
   27204:	mov	r5, #0
   27208:	mov	r9, sl
   2720c:	cmp	sl, r9
   27210:	bne	272a0 <main@@Base+0x11404>
   27214:	b	27264 <main@@Base+0x113c8>
   27218:	cmn	r5, #1
   2721c:	bgt	27254 <main@@Base+0x113b8>
   27220:	ldr	r0, [sp, #24]
   27224:	ldr	r2, [sp, #16]
   27228:	mov	r1, r9
   2722c:	mov	r3, #7
   27230:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   27234:	mov	r9, r0
   27238:	mov	r6, #0
   2723c:	mov	r5, #0
   27240:	cmp	sl, r9
   27244:	bne	272a0 <main@@Base+0x11404>
   27248:	b	27264 <main@@Base+0x113c8>
   2724c:	rsbs	r6, r6, #0
   27250:	rsc	r5, r5, #0
   27254:	str	r6, [sp, #32]
   27258:	str	r5, [sp, #36]	; 0x24
   2725c:	cmp	sl, r9
   27260:	bne	272a0 <main@@Base+0x11404>
   27264:	add	r0, sp, #32
   27268:	ldr	r2, [sp, #16]
   2726c:	mov	r1, sl
   27270:	str	r0, [sp]
   27274:	ldr	r0, [sp, #24]
   27278:	ldr	r3, [pc, #4004]	; 28224 <main@@Base+0x12388>
   2727c:	add	r3, pc, r3
   27280:	bl	241bc <main@@Base+0xe320>
   27284:	cmp	r0, sl
   27288:	mov	r9, r0
   2728c:	ldrne	r0, [sp, #16]
   27290:	cmpne	r9, r0
   27294:	beq	28f6c <main@@Base+0x130d0>
   27298:	ldr	r6, [sp, #32]
   2729c:	ldr	r5, [sp, #36]	; 0x24
   272a0:	orrs	r0, r6, r5
   272a4:	bne	272b8 <main@@Base+0x1141c>
   272a8:	ldr	r0, [sp, #24]
   272ac:	ldrb	r0, [r0, #8]
   272b0:	tst	r0, #2
   272b4:	beq	272e0 <main@@Base+0x11444>
   272b8:	ldr	r0, [sp, #24]
   272bc:	mov	r1, #0
   272c0:	mov	r2, #8
   272c4:	mov	r3, #8
   272c8:	ldr	r0, [r0]
   272cc:	bl	307e4 <flatcc_builder_table_add@@Base>
   272d0:	cmp	r0, #0
   272d4:	beq	28f6c <main@@Base+0x130d0>
   272d8:	str	r6, [r0]
   272dc:	str	r5, [r0, #4]
   272e0:	ldr	r8, [sp, #16]
   272e4:	ldr	r6, [sp, #24]
   272e8:	b	277d0 <main@@Base+0x11934>
   272ec:	ldr	r6, [sp, #24]
   272f0:	bne	27300 <main@@Base+0x11464>
   272f4:	ldrb	r0, [sl, #2]!
   272f8:	cmp	r0, #32
   272fc:	bhi	27310 <main@@Base+0x11474>
   27300:	ldr	r2, [sp, #16]
   27304:	mov	r0, r6
   27308:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2730c:	mov	sl, r0
   27310:	cmp	r8, sl
   27314:	beq	277b8 <main@@Base+0x1191c>
   27318:	ldr	r2, [sp, #16]
   2731c:	mov	r5, #0
   27320:	str	r5, [fp, #-36]	; 0xffffffdc
   27324:	str	r5, [fp, #-40]	; 0xffffffd8
   27328:	str	r5, [sp, #44]	; 0x2c
   2732c:	str	r5, [sp, #32]
   27330:	cmp	sl, r2
   27334:	beq	2737c <main@@Base+0x114e0>
   27338:	sub	r0, fp, #40	; 0x28
   2733c:	mov	r1, sl
   27340:	add	r3, sp, #32
   27344:	str	r0, [sp]
   27348:	mov	r0, r6
   2734c:	bl	363e0 <flatcc_json_parser_integer@@Base>
   27350:	cmp	r0, sl
   27354:	beq	2738c <main@@Base+0x114f0>
   27358:	mov	r9, r0
   2735c:	ldr	r0, [sp, #32]
   27360:	cmp	r0, #0
   27364:	beq	27394 <main@@Base+0x114f8>
   27368:	ldr	r6, [sp, #24]
   2736c:	ldr	r2, [sp, #16]
   27370:	mov	r1, r9
   27374:	mov	r3, #8
   27378:	b	273b0 <main@@Base+0x11514>
   2737c:	mov	r9, r2
   27380:	cmp	sl, r9
   27384:	bne	27418 <main@@Base+0x1157c>
   27388:	b	273dc <main@@Base+0x11540>
   2738c:	mov	r9, sl
   27390:	b	273d0 <main@@Base+0x11534>
   27394:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27398:	cmp	r0, #0
   2739c:	beq	273c8 <main@@Base+0x1152c>
   273a0:	ldr	r6, [sp, #24]
   273a4:	ldr	r2, [sp, #16]
   273a8:	mov	r1, r9
   273ac:	mov	r3, #7
   273b0:	mov	r0, r6
   273b4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   273b8:	mov	r9, r0
   273bc:	cmp	sl, r9
   273c0:	bne	27418 <main@@Base+0x1157c>
   273c4:	b	273dc <main@@Base+0x11540>
   273c8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   273cc:	str	r5, [sp, #44]	; 0x2c
   273d0:	ldr	r6, [sp, #24]
   273d4:	cmp	sl, r9
   273d8:	bne	27418 <main@@Base+0x1157c>
   273dc:	add	r0, sp, #44	; 0x2c
   273e0:	ldr	r2, [sp, #16]
   273e4:	mov	r1, sl
   273e8:	str	r0, [sp]
   273ec:	mov	r0, r6
   273f0:	ldr	r3, [pc, #4024]	; 283b0 <main@@Base+0x12514>
   273f4:	add	r3, pc, r3
   273f8:	bl	243b4 <main@@Base+0xe518>
   273fc:	cmp	r0, sl
   27400:	mov	r9, r0
   27404:	ldrne	r0, [sp, #16]
   27408:	cmpne	r9, r0
   2740c:	beq	28f6c <main@@Base+0x130d0>
   27410:	ldr	r5, [sp, #44]	; 0x2c
   27414:	ldr	r6, [sp, #24]
   27418:	cmp	r5, #0
   2741c:	bne	2742c <main@@Base+0x11590>
   27420:	ldrb	r0, [r6, #8]
   27424:	tst	r0, #2
   27428:	beq	2744c <main@@Base+0x115b0>
   2742c:	ldr	r0, [r6]
   27430:	mov	r1, #1
   27434:	mov	r2, #4
   27438:	mov	r3, #4
   2743c:	bl	307e4 <flatcc_builder_table_add@@Base>
   27440:	cmp	r0, #0
   27444:	beq	28f6c <main@@Base+0x130d0>
   27448:	str	r5, [r0]
   2744c:	ldr	r8, [sp, #16]
   27450:	b	277d0 <main@@Base+0x11934>
   27454:	cmp	r2, r8
   27458:	mov	sl, r8
   2745c:	beq	2748c <main@@Base+0x115f0>
   27460:	ldrb	r0, [r2]
   27464:	cmp	r0, #34	; 0x22
   27468:	bne	27474 <main@@Base+0x115d8>
   2746c:	add	sl, r2, #1
   27470:	b	2748c <main@@Base+0x115f0>
   27474:	mov	r1, r2
   27478:	mov	r0, r6
   2747c:	mov	r2, r8
   27480:	mov	r3, #5
   27484:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   27488:	mov	sl, r0
   2748c:	sub	r0, r8, sl
   27490:	mov	r1, #8
   27494:	cmp	r0, #8
   27498:	movcs	r0, r1
   2749c:	and	r0, r0, #15
   274a0:	sub	r1, r0, #1
   274a4:	cmp	r1, #7
   274a8:	bhi	27744 <main@@Base+0x118a8>
   274ac:	add	r5, pc, #36	; 0x24
   274b0:	mov	r0, #0
   274b4:	mov	ip, #0
   274b8:	mov	lr, #0
   274bc:	mov	r2, #0
   274c0:	mov	r3, #0
   274c4:	mov	r6, #0
   274c8:	mov	r4, #0
   274cc:	mov	r7, #0
   274d0:	ldr	r1, [r5, r1, lsl #2]
   274d4:	add	pc, r5, r1
   274d8:	andeq	r0, r0, r4, rrx
   274dc:	andeq	r0, r0, ip, asr r0
   274e0:	andeq	r0, r0, r4, asr r0
   274e4:	andeq	r0, r0, ip, asr #32
   274e8:	andeq	r0, r0, r0, asr #32
   274ec:	andeq	r0, r0, r4, lsr r0
   274f0:	andeq	r0, r0, r4, lsr #32
   274f4:	andeq	r0, r0, r0, lsr #32
   274f8:	ldrb	ip, [sl, #7]
   274fc:	ldrb	r1, [sl, #6]
   27500:	mov	lr, r0
   27504:	orr	r1, ip, r1, lsl #8
   27508:	mov	r0, r1
   2750c:	ldrb	r1, [sl, #5]
   27510:	mov	r2, lr
   27514:	orr	r0, r0, r1, lsl #16
   27518:	ldrb	r1, [sl, #4]
   2751c:	mov	r3, r2
   27520:	orr	r0, r0, r1, lsl #24
   27524:	ldrb	r1, [sl, #3]
   27528:	orr	r6, r1, r3
   2752c:	ldrb	r1, [sl, #2]
   27530:	orr	r4, r6, r1, lsl #8
   27534:	ldrb	r1, [sl, #1]
   27538:	orr	r7, r4, r1, lsl #16
   2753c:	movw	r1, #25186	; 0x6262
   27540:	movw	r2, #24929	; 0x6161
   27544:	ldr	r6, [sp, #24]
   27548:	movt	r1, #24418	; 0x5f62
   2754c:	movt	r2, #24929	; 0x6161
   27550:	eor	r0, r0, r1
   27554:	ldrb	r1, [sl]
   27558:	orr	r1, r7, r1, lsl #24
   2755c:	eor	r1, r1, r2
   27560:	orrs	r0, r0, r1
   27564:	bne	27744 <main@@Base+0x118a8>
   27568:	mov	r0, r8
   2756c:	add	r8, sl, #8
   27570:	mov	r1, #8
   27574:	sub	lr, r0, r8
   27578:	cmp	lr, #8
   2757c:	movcc	r1, lr
   27580:	and	r1, r1, #15
   27584:	sub	r2, r1, #1
   27588:	cmp	r2, #7
   2758c:	bhi	277b8 <main@@Base+0x1191c>
   27590:	add	r0, pc, #36	; 0x24
   27594:	mov	r1, #0
   27598:	mov	ip, #0
   2759c:	mov	r9, #0
   275a0:	mov	r6, #0
   275a4:	mov	r3, #0
   275a8:	mov	r5, #0
   275ac:	mov	r7, #0
   275b0:	ldr	r4, [r0, r2, lsl #2]
   275b4:	mov	r2, #0
   275b8:	add	pc, r0, r4
   275bc:	andeq	r0, r0, r4, rrx
   275c0:	andeq	r0, r0, ip, asr r0
   275c4:	andeq	r0, r0, r4, asr r0
   275c8:	andeq	r0, r0, ip, asr #32
   275cc:	andeq	r0, r0, r0, asr #32
   275d0:	andeq	r0, r0, r4, lsr r0
   275d4:	andeq	r0, r0, r4, lsr #32
   275d8:	andeq	r0, r0, r0, lsr #32
   275dc:	ldrb	ip, [sl, #15]
   275e0:	ldrb	r0, [sl, #14]
   275e4:	mov	r9, r1
   275e8:	orr	r0, ip, r0, lsl #8
   275ec:	mov	r1, r0
   275f0:	ldrb	r0, [sl, #13]
   275f4:	mov	r6, r9
   275f8:	orr	r1, r1, r0, lsl #16
   275fc:	ldrb	r0, [sl, #12]
   27600:	mov	r3, r6
   27604:	orr	r1, r1, r0, lsl #24
   27608:	ldrb	r0, [sl, #11]
   2760c:	orr	r5, r0, r3
   27610:	ldrb	r0, [sl, #10]
   27614:	orr	r2, r5, r0, lsl #8
   27618:	ldrb	r0, [sl, #9]
   2761c:	orr	r7, r2, r0, lsl #16
   27620:	ldrb	r2, [r8]
   27624:	movw	r0, #29791	; 0x745f
   27628:	movw	r3, #29556	; 0x7374
   2762c:	movt	r0, #24946	; 0x6172
   27630:	movt	r3, #25183	; 0x625f
   27634:	eor	r0, r1, r0
   27638:	orr	r2, r7, r2, lsl #24
   2763c:	eor	r2, r2, r3
   27640:	orrs	r0, r0, r2
   27644:	bne	27750 <main@@Base+0x118b4>
   27648:	ldr	r0, [sp, #16]
   2764c:	add	r8, sl, #16
   27650:	mov	r1, #8
   27654:	sub	r0, r0, r8
   27658:	cmp	r0, #8
   2765c:	movcc	r1, r0
   27660:	and	r1, r1, #15
   27664:	sub	r2, r1, #1
   27668:	cmp	r2, #7
   2766c:	bhi	277b4 <main@@Base+0x11918>
   27670:	add	r5, pc, #24
   27674:	mov	r1, #0
   27678:	mov	r3, #0
   2767c:	mov	r6, #0
   27680:	mov	r7, #0
   27684:	ldr	r4, [r5, r2, lsl #2]
   27688:	mov	r2, #0
   2768c:	add	pc, r5, r4
   27690:	andeq	r0, r0, r4, asr #32
   27694:	andeq	r0, r0, ip, lsr r0
   27698:	andeq	r0, r0, r4, lsr r0
   2769c:	andeq	r0, r0, r8, lsr #32
   276a0:	andeq	r0, r0, r0, lsr #32
   276a4:	andeq	r0, r0, r0, lsr #32
   276a8:	andeq	r0, r0, r0, lsr #32
   276ac:	andeq	r0, r0, r0, lsr #32
   276b0:	ldrb	r2, [sl, #20]
   276b4:	lsl	r2, r2, #24
   276b8:	ldrb	r3, [sl, #19]
   276bc:	orr	r3, r3, r1
   276c0:	mov	r1, r2
   276c4:	ldrb	r2, [sl, #18]
   276c8:	orr	r6, r3, r2, lsl #8
   276cc:	ldrb	r2, [sl, #17]
   276d0:	orr	r7, r6, r2, lsl #16
   276d4:	ldrb	r2, [r8]
   276d8:	movw	r3, #25968	; 0x6570
   276dc:	and	r1, r1, #-16777216	; 0xff000000
   276e0:	movt	r3, #29556	; 0x7374
   276e4:	eor	r1, r1, #1929379840	; 0x73000000
   276e8:	orr	r2, r7, r2, lsl #24
   276ec:	eor	r2, r2, r3
   276f0:	orrs	r1, r1, r2
   276f4:	bne	277b4 <main@@Base+0x11918>
   276f8:	ldr	r6, [sp, #24]
   276fc:	cmp	r0, #6
   27700:	blt	277b8 <main@@Base+0x1191c>
   27704:	ldrb	r0, [sl, #21]
   27708:	cmp	r0, #34	; 0x22
   2770c:	bne	277b8 <main@@Base+0x1191c>
   27710:	ldr	r4, [sp, #16]
   27714:	add	r1, sl, #22
   27718:	sub	r0, r4, r1
   2771c:	cmp	r0, #2
   27720:	blt	270d4 <main@@Base+0x11238>
   27724:	ldrb	r0, [r1]
   27728:	cmp	r0, #32
   2772c:	bls	270c0 <main@@Base+0x11224>
   27730:	ldr	r4, [sp, #16]
   27734:	mov	sl, r1
   27738:	cmp	sl, r4
   2773c:	bne	270ec <main@@Base+0x11250>
   27740:	b	2712c <main@@Base+0x11290>
   27744:	mov	r0, r6
   27748:	mov	r1, sl
   2774c:	b	277c4 <main@@Base+0x11928>
   27750:	bic	r0, r1, #255	; 0xff
   27754:	movw	r1, #29440	; 0x7300
   27758:	ldr	r6, [sp, #24]
   2775c:	movt	r1, #25968	; 0x6570
   27760:	eor	r0, r0, r1
   27764:	orrs	r0, r0, r2
   27768:	bne	277b8 <main@@Base+0x1191c>
   2776c:	cmp	lr, #8
   27770:	blt	277b8 <main@@Base+0x1191c>
   27774:	ldrb	r0, [sl, #15]
   27778:	cmp	r0, #34	; 0x22
   2777c:	bne	277b8 <main@@Base+0x1191c>
   27780:	ldr	r4, [sp, #16]
   27784:	add	r1, sl, #16
   27788:	sub	r0, r4, r1
   2778c:	cmp	r0, #2
   27790:	blt	27050 <main@@Base+0x111b4>
   27794:	ldrb	r0, [r1]
   27798:	cmp	r0, #32
   2779c:	bls	2703c <main@@Base+0x111a0>
   277a0:	ldr	r4, [sp, #16]
   277a4:	mov	sl, r1
   277a8:	cmp	sl, r4
   277ac:	bne	27068 <main@@Base+0x111cc>
   277b0:	b	270a8 <main@@Base+0x1120c>
   277b4:	ldr	r6, [sp, #24]
   277b8:	mov	r1, r8
   277bc:	ldr	r8, [sp, #16]
   277c0:	mov	r0, r6
   277c4:	mov	r2, r8
   277c8:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   277cc:	mov	r9, r0
   277d0:	movw	sl, #0
   277d4:	sub	r0, r8, r9
   277d8:	movt	sl, #26418	; 0x6732
   277dc:	cmp	r0, #2
   277e0:	blt	27814 <main@@Base+0x11978>
   277e4:	ldrb	r0, [r9]
   277e8:	cmp	r0, #32
   277ec:	bls	27800 <main@@Base+0x11964>
   277f0:	mov	r2, r9
   277f4:	cmp	r2, r8
   277f8:	bne	27830 <main@@Base+0x11994>
   277fc:	b	278c4 <main@@Base+0x11a28>
   27800:	bne	27814 <main@@Base+0x11978>
   27804:	mov	r2, r9
   27808:	ldrb	r0, [r2, #1]!
   2780c:	cmp	r0, #32
   27810:	bhi	27828 <main@@Base+0x1198c>
   27814:	mov	r0, r6
   27818:	mov	r1, r9
   2781c:	mov	r2, r8
   27820:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27824:	mov	r2, r0
   27828:	cmp	r2, r8
   2782c:	beq	278c4 <main@@Base+0x11a28>
   27830:	ldrb	r0, [r2]
   27834:	cmp	r0, #44	; 0x2c
   27838:	bne	278cc <main@@Base+0x11a30>
   2783c:	add	r1, r2, #1
   27840:	sub	r0, r8, r1
   27844:	cmp	r0, #2
   27848:	blt	2787c <main@@Base+0x119e0>
   2784c:	ldrb	r0, [r1]
   27850:	cmp	r0, #32
   27854:	bls	2786c <main@@Base+0x119d0>
   27858:	mov	r2, r1
   2785c:	cmp	r2, r8
   27860:	bne	27894 <main@@Base+0x119f8>
   27864:	b	27908 <main@@Base+0x11a6c>
   27868:	ldrdeq	r5, [r3], -r0
   2786c:	bne	2787c <main@@Base+0x119e0>
   27870:	ldrb	r0, [r2, #2]!
   27874:	cmp	r0, #32
   27878:	bhi	2788c <main@@Base+0x119f0>
   2787c:	mov	r0, r6
   27880:	mov	r2, r8
   27884:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27888:	mov	r2, r0
   2788c:	cmp	r2, r8
   27890:	beq	27908 <main@@Base+0x11a6c>
   27894:	ldrb	r0, [r2]
   27898:	cmp	r0, #125	; 0x7d
   2789c:	bne	27454 <main@@Base+0x115b8>
   278a0:	add	r1, r2, #1
   278a4:	sub	r0, r8, r1
   278a8:	cmp	r0, #2
   278ac:	blt	27954 <main@@Base+0x11ab8>
   278b0:	ldrb	r0, [r1]
   278b4:	cmp	r0, #32
   278b8:	bls	27928 <main@@Base+0x11a8c>
   278bc:	mov	r9, r1
   278c0:	b	26754 <main@@Base+0x108b8>
   278c4:	mov	r9, r8
   278c8:	b	26754 <main@@Base+0x108b8>
   278cc:	cmp	r0, #125	; 0x7d
   278d0:	bne	27914 <main@@Base+0x11a78>
   278d4:	add	r1, r2, #1
   278d8:	sub	r0, r8, r1
   278dc:	cmp	r0, #2
   278e0:	blt	27954 <main@@Base+0x11ab8>
   278e4:	ldrb	r0, [r1]
   278e8:	cmp	r0, #32
   278ec:	bls	27930 <main@@Base+0x11a94>
   278f0:	ldr	r8, [sp, #16]
   278f4:	ldr	r6, [sp, #24]
   278f8:	movw	sl, #0
   278fc:	mov	r9, r1
   27900:	movt	sl, #26418	; 0x6732
   27904:	b	26754 <main@@Base+0x108b8>
   27908:	mov	r0, r6
   2790c:	mov	r1, r8
   27910:	b	2791c <main@@Base+0x11a80>
   27914:	mov	r0, r6
   27918:	mov	r1, r2
   2791c:	mov	r2, r8
   27920:	mov	r3, #10
   27924:	b	2674c <main@@Base+0x108b0>
   27928:	beq	27944 <main@@Base+0x11aa8>
   2792c:	b	27954 <main@@Base+0x11ab8>
   27930:	ldr	r8, [sp, #16]
   27934:	ldr	r6, [sp, #24]
   27938:	movw	sl, #0
   2793c:	movt	sl, #26418	; 0x6732
   27940:	bne	27954 <main@@Base+0x11ab8>
   27944:	ldrb	r0, [r2, #2]!
   27948:	cmp	r0, #32
   2794c:	mov	r9, r2
   27950:	bhi	26754 <main@@Base+0x108b8>
   27954:	mov	r0, r6
   27958:	mov	r2, r8
   2795c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27960:	b	26750 <main@@Base+0x108b4>
   27964:	ldr	sl, [sp, #16]
   27968:	cmp	r9, sl
   2796c:	bne	279e8 <main@@Base+0x11b4c>
   27970:	b	279b0 <main@@Base+0x11b14>
   27974:	mov	sl, r9
   27978:	cmp	r9, sl
   2797c:	bne	279e8 <main@@Base+0x11b4c>
   27980:	b	279b0 <main@@Base+0x11b14>
   27984:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27988:	cmp	r0, #0
   2798c:	beq	27a30 <main@@Base+0x11b94>
   27990:	ldr	r0, [sp, #24]
   27994:	ldr	r2, [sp, #16]
   27998:	mov	r1, sl
   2799c:	mov	r3, #7
   279a0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   279a4:	mov	sl, r0
   279a8:	cmp	r9, sl
   279ac:	bne	279e8 <main@@Base+0x11b4c>
   279b0:	add	r0, sp, #44	; 0x2c
   279b4:	ldr	r2, [sp, #16]
   279b8:	mov	r1, r9
   279bc:	str	r0, [sp]
   279c0:	ldr	r0, [sp, #24]
   279c4:	ldr	r3, [pc, #3960]	; 28944 <main@@Base+0x12aa8>
   279c8:	add	r3, pc, r3
   279cc:	bl	243b4 <main@@Base+0xe518>
   279d0:	cmp	r0, r9
   279d4:	mov	sl, r0
   279d8:	ldrne	r0, [sp, #16]
   279dc:	cmpne	sl, r0
   279e0:	beq	28f58 <main@@Base+0x130bc>
   279e4:	ldr	r4, [sp, #44]	; 0x2c
   279e8:	cmp	r4, #0
   279ec:	bne	27a00 <main@@Base+0x11b64>
   279f0:	ldr	r0, [sp, #24]
   279f4:	ldrb	r0, [r0, #8]
   279f8:	tst	r0, #2
   279fc:	beq	27a24 <main@@Base+0x11b88>
   27a00:	ldr	r0, [sp, #24]
   27a04:	mov	r1, #8
   27a08:	mov	r2, #4
   27a0c:	mov	r3, #4
   27a10:	ldr	r0, [r0]
   27a14:	bl	307e4 <flatcc_builder_table_add@@Base>
   27a18:	cmp	r0, #0
   27a1c:	beq	28f58 <main@@Base+0x130bc>
   27a20:	str	r4, [r0]
   27a24:	ldr	r8, [sp, #16]
   27a28:	ldr	r6, [sp, #24]
   27a2c:	b	28d14 <main@@Base+0x12e78>
   27a30:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27a34:	str	r4, [sp, #44]	; 0x2c
   27a38:	cmp	r9, sl
   27a3c:	bne	279e8 <main@@Base+0x11b4c>
   27a40:	b	279b0 <main@@Base+0x11b14>
   27a44:	cmp	r2, r8
   27a48:	mov	r9, r8
   27a4c:	beq	27a7c <main@@Base+0x11be0>
   27a50:	ldrb	r0, [r2]
   27a54:	cmp	r0, #34	; 0x22
   27a58:	bne	27a64 <main@@Base+0x11bc8>
   27a5c:	add	r9, r2, #1
   27a60:	b	27a7c <main@@Base+0x11be0>
   27a64:	mov	r1, r2
   27a68:	mov	r0, r6
   27a6c:	mov	r2, r8
   27a70:	mov	r3, #5
   27a74:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   27a78:	mov	r9, r0
   27a7c:	sub	r8, r8, r9
   27a80:	mov	r0, #8
   27a84:	cmp	r8, #8
   27a88:	movcc	r0, r8
   27a8c:	and	r0, r0, #15
   27a90:	sub	r1, r0, #1
   27a94:	cmp	r1, #7
   27a98:	bhi	2800c <main@@Base+0x12170>
   27a9c:	add	r5, pc, #36	; 0x24
   27aa0:	mov	r0, #0
   27aa4:	mov	ip, #0
   27aa8:	mov	lr, #0
   27aac:	mov	r2, #0
   27ab0:	mov	r3, #0
   27ab4:	mov	r6, #0
   27ab8:	mov	r4, #0
   27abc:	mov	r7, #0
   27ac0:	ldr	r1, [r5, r1, lsl #2]
   27ac4:	add	pc, r5, r1
   27ac8:	andeq	r0, r0, r4, rrx
   27acc:	andeq	r0, r0, ip, asr r0
   27ad0:	andeq	r0, r0, r4, asr r0
   27ad4:	andeq	r0, r0, ip, asr #32
   27ad8:	andeq	r0, r0, r0, asr #32
   27adc:	andeq	r0, r0, r4, lsr r0
   27ae0:	andeq	r0, r0, r4, lsr #32
   27ae4:	andeq	r0, r0, r0, lsr #32
   27ae8:	ldrb	ip, [r9, #7]
   27aec:	ldrb	r1, [r9, #6]
   27af0:	mov	lr, r0
   27af4:	orr	r1, ip, r1, lsl #8
   27af8:	mov	r0, r1
   27afc:	ldrb	r1, [r9, #5]
   27b00:	mov	r2, lr
   27b04:	orr	r0, r0, r1, lsl #16
   27b08:	ldrb	r1, [r9, #4]
   27b0c:	mov	r3, r2
   27b10:	orr	r0, r0, r1, lsl #24
   27b14:	ldrb	r1, [r9, #3]
   27b18:	orr	r6, r1, r3
   27b1c:	ldrb	r1, [r9, #2]
   27b20:	orr	r4, r6, r1, lsl #8
   27b24:	ldrb	r1, [r9, #1]
   27b28:	orr	r7, r4, r1, lsl #16
   27b2c:	ldrb	r1, [r9]
   27b30:	orr	r4, r7, r1, lsl #24
   27b34:	movw	r1, #25442	; 0x6362
   27b38:	movt	r1, #25443	; 0x6363
   27b3c:	cmp	r4, r1
   27b40:	bhi	27be0 <main@@Base+0x11d44>
   27b44:	movw	r1, #13108	; 0x3334
   27b48:	ldr	r6, [sp, #24]
   27b4c:	movt	r1, #12594	; 0x3132
   27b50:	eor	r5, r0, r1
   27b54:	movw	r1, #24929	; 0x6161
   27b58:	movt	r1, #24929	; 0x6161
   27b5c:	eor	r0, r4, r1
   27b60:	orrs	r0, r5, r0
   27b64:	bne	27c4c <main@@Base+0x11db0>
   27b68:	ldr	r8, [sp, #16]
   27b6c:	add	r7, r9, #8
   27b70:	mov	r1, #8
   27b74:	mov	r2, #-268435456	; 0xf0000000
   27b78:	sub	r0, r8, r7
   27b7c:	cmp	r0, #8
   27b80:	movcc	r1, r0
   27b84:	add	r1, r2, r1, lsl #28
   27b88:	asr	r1, r1, #28
   27b8c:	cmp	r1, #0
   27b90:	blt	28d00 <main@@Base+0x12e64>
   27b94:	ldrb	r1, [r7]
   27b98:	cmp	r1, #53	; 0x35
   27b9c:	bne	28d00 <main@@Base+0x12e64>
   27ba0:	cmp	r0, #2
   27ba4:	blt	28d00 <main@@Base+0x12e64>
   27ba8:	ldrb	r0, [r9, #9]
   27bac:	cmp	r0, #34	; 0x22
   27bb0:	bne	28d00 <main@@Base+0x12e64>
   27bb4:	add	r1, r9, #10
   27bb8:	sub	r0, r8, r1
   27bbc:	cmp	r0, #2
   27bc0:	blt	281b4 <main@@Base+0x12318>
   27bc4:	ldrb	r0, [r1]
   27bc8:	cmp	r0, #32
   27bcc:	bls	281a4 <main@@Base+0x12308>
   27bd0:	mov	r9, r1
   27bd4:	cmp	r9, r8
   27bd8:	bne	281cc <main@@Base+0x12330>
   27bdc:	b	2820c <main@@Base+0x12370>
   27be0:	movw	r1, #13108	; 0x3334
   27be4:	ldr	r6, [sp, #24]
   27be8:	movt	r1, #12594	; 0x3132
   27bec:	eor	r5, r0, r1
   27bf0:	ldr	r0, [sp, #8]
   27bf4:	eor	r0, r4, r0
   27bf8:	orrs	r0, r5, r0
   27bfc:	bne	27ca4 <main@@Base+0x11e08>
   27c00:	cmp	r8, #9
   27c04:	ldr	r8, [sp, #16]
   27c08:	mov	r7, r9
   27c0c:	blt	28248 <main@@Base+0x123ac>
   27c10:	ldrb	r0, [r9, #8]
   27c14:	mov	r7, r9
   27c18:	cmp	r0, #34	; 0x22
   27c1c:	bne	28248 <main@@Base+0x123ac>
   27c20:	add	r1, r9, #9
   27c24:	sub	r0, r8, r1
   27c28:	cmp	r0, #2
   27c2c:	blt	27d1c <main@@Base+0x11e80>
   27c30:	ldrb	r0, [r1]
   27c34:	cmp	r0, #32
   27c38:	bls	27d08 <main@@Base+0x11e6c>
   27c3c:	mov	r7, r1
   27c40:	cmp	r7, r8
   27c44:	bne	27d34 <main@@Base+0x11e98>
   27c48:	b	27de4 <main@@Base+0x11f48>
   27c4c:	teq	r4, r1
   27c50:	bne	27e70 <main@@Base+0x11fd4>
   27c54:	cmp	r8, #5
   27c58:	mov	r1, r9
   27c5c:	blt	28460 <main@@Base+0x125c4>
   27c60:	ldrb	r0, [r9, #4]
   27c64:	mov	r1, r9
   27c68:	cmp	r0, #34	; 0x22
   27c6c:	bne	28460 <main@@Base+0x125c4>
   27c70:	ldr	r6, [sp, #16]
   27c74:	add	r2, r9, #5
   27c78:	sub	r0, r6, r2
   27c7c:	cmp	r0, #2
   27c80:	blt	27e14 <main@@Base+0x11f78>
   27c84:	ldrb	r0, [r2]
   27c88:	cmp	r0, #32
   27c8c:	bls	27dfc <main@@Base+0x11f60>
   27c90:	ldr	r6, [sp, #16]
   27c94:	mov	r1, r2
   27c98:	cmp	r1, r6
   27c9c:	bne	27e30 <main@@Base+0x11f94>
   27ca0:	b	27f24 <main@@Base+0x12088>
   27ca4:	movw	r0, #25443	; 0x6363
   27ca8:	movt	r0, #25443	; 0x6363
   27cac:	teq	r4, r0
   27cb0:	bne	27fb0 <main@@Base+0x12114>
   27cb4:	cmp	r8, #5
   27cb8:	mov	r1, r9
   27cbc:	blt	284c0 <main@@Base+0x12624>
   27cc0:	ldrb	r0, [r9, #4]
   27cc4:	mov	r1, r9
   27cc8:	cmp	r0, #34	; 0x22
   27ccc:	bne	284c0 <main@@Base+0x12624>
   27cd0:	ldr	r6, [sp, #16]
   27cd4:	add	r2, r9, #5
   27cd8:	sub	r0, r6, r2
   27cdc:	cmp	r0, #2
   27ce0:	blt	27f54 <main@@Base+0x120b8>
   27ce4:	ldrb	r0, [r2]
   27ce8:	cmp	r0, #32
   27cec:	bls	27f3c <main@@Base+0x120a0>
   27cf0:	ldr	r6, [sp, #16]
   27cf4:	mov	r1, r2
   27cf8:	cmp	r1, r6
   27cfc:	bne	27f70 <main@@Base+0x120d4>
   27d00:	b	2801c <main@@Base+0x12180>
   27d04:	andeq	r5, r3, ip, asr r4
   27d08:	bne	27d1c <main@@Base+0x11e80>
   27d0c:	mov	r7, r9
   27d10:	ldrb	r0, [r7, #10]!
   27d14:	cmp	r0, #32
   27d18:	bhi	27d2c <main@@Base+0x11e90>
   27d1c:	mov	r0, r6
   27d20:	mov	r2, r8
   27d24:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27d28:	mov	r7, r0
   27d2c:	cmp	r7, r8
   27d30:	beq	27de4 <main@@Base+0x11f48>
   27d34:	ldrb	r0, [r7]
   27d38:	cmp	r0, #58	; 0x3a
   27d3c:	bne	27de4 <main@@Base+0x11f48>
   27d40:	add	r1, r7, #1
   27d44:	sub	r0, r8, r1
   27d48:	cmp	r0, #2
   27d4c:	blt	28238 <main@@Base+0x1239c>
   27d50:	ldrb	r0, [r1]
   27d54:	cmp	r0, #32
   27d58:	bls	28228 <main@@Base+0x1238c>
   27d5c:	mov	r7, r1
   27d60:	cmp	r9, r7
   27d64:	bne	28250 <main@@Base+0x123b4>
   27d68:	add	r7, r9, #8
   27d6c:	mov	r1, #8
   27d70:	mov	r2, #-268435456	; 0xf0000000
   27d74:	sub	r0, r8, r7
   27d78:	cmp	r0, #8
   27d7c:	movcc	r1, r0
   27d80:	add	r1, r2, r1, lsl #28
   27d84:	asr	r1, r1, #28
   27d88:	cmp	r1, #0
   27d8c:	blt	28d00 <main@@Base+0x12e64>
   27d90:	ldrb	r1, [r7]
   27d94:	cmp	r1, #53	; 0x35
   27d98:	bne	28d00 <main@@Base+0x12e64>
   27d9c:	cmp	r0, #2
   27da0:	blt	28d00 <main@@Base+0x12e64>
   27da4:	ldrb	r0, [r9, #9]
   27da8:	cmp	r0, #34	; 0x22
   27dac:	bne	28d00 <main@@Base+0x12e64>
   27db0:	add	r1, r9, #10
   27db4:	sub	r0, r8, r1
   27db8:	cmp	r0, #2
   27dbc:	blt	28510 <main@@Base+0x12674>
   27dc0:	ldrb	r0, [r1]
   27dc4:	cmp	r0, #32
   27dc8:	bls	284f8 <main@@Base+0x1265c>
   27dcc:	ldr	r8, [sp, #16]
   27dd0:	ldr	r6, [sp, #24]
   27dd4:	mov	r9, r1
   27dd8:	cmp	r9, r8
   27ddc:	bne	28528 <main@@Base+0x1268c>
   27de0:	b	28568 <main@@Base+0x126cc>
   27de4:	mov	r0, r6
   27de8:	mov	r1, r7
   27dec:	mov	r2, r8
   27df0:	mov	r3, #4
   27df4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   27df8:	b	28244 <main@@Base+0x123a8>
   27dfc:	ldr	r6, [sp, #16]
   27e00:	bne	27e14 <main@@Base+0x11f78>
   27e04:	mov	r1, r9
   27e08:	ldrb	r0, [r1, #6]!
   27e0c:	cmp	r0, #32
   27e10:	bhi	27e28 <main@@Base+0x11f8c>
   27e14:	ldr	r0, [sp, #24]
   27e18:	mov	r1, r2
   27e1c:	mov	r2, r6
   27e20:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27e24:	mov	r1, r0
   27e28:	cmp	r1, r6
   27e2c:	beq	27f24 <main@@Base+0x12088>
   27e30:	ldrb	r0, [r1]
   27e34:	cmp	r0, #58	; 0x3a
   27e38:	bne	27f24 <main@@Base+0x12088>
   27e3c:	ldr	r0, [sp, #16]
   27e40:	ldr	r6, [sp, #24]
   27e44:	add	r2, r1, #1
   27e48:	sub	r0, r0, r2
   27e4c:	cmp	r0, #2
   27e50:	blt	2844c <main@@Base+0x125b0>
   27e54:	ldrb	r0, [r2]
   27e58:	cmp	r0, #32
   27e5c:	bls	28438 <main@@Base+0x1259c>
   27e60:	ldr	r6, [sp, #24]
   27e64:	mov	r1, r2
   27e68:	cmp	r9, r1
   27e6c:	bne	28468 <main@@Base+0x125cc>
   27e70:	movw	r1, #25186	; 0x6262
   27e74:	movt	r1, #25186	; 0x6262
   27e78:	eor	r0, r4, r1
   27e7c:	orrs	r0, r5, r0
   27e80:	bne	27ed0 <main@@Base+0x12034>
   27e84:	cmp	r8, #9
   27e88:	ldr	r8, [sp, #16]
   27e8c:	mov	r7, r9
   27e90:	blt	285a8 <main@@Base+0x1270c>
   27e94:	ldrb	r0, [r9, #8]
   27e98:	mov	r7, r9
   27e9c:	cmp	r0, #34	; 0x22
   27ea0:	bne	285a8 <main@@Base+0x1270c>
   27ea4:	add	r1, r9, #9
   27ea8:	sub	r0, r8, r1
   27eac:	cmp	r0, #2
   27eb0:	blt	28048 <main@@Base+0x121ac>
   27eb4:	ldrb	r0, [r1]
   27eb8:	cmp	r0, #32
   27ebc:	bls	28034 <main@@Base+0x12198>
   27ec0:	mov	r7, r1
   27ec4:	cmp	r7, r8
   27ec8:	bne	28060 <main@@Base+0x121c4>
   27ecc:	b	280a0 <main@@Base+0x12204>
   27ed0:	teq	r4, r1
   27ed4:	bne	2800c <main@@Base+0x12170>
   27ed8:	cmp	r8, #5
   27edc:	ldr	r8, [sp, #16]
   27ee0:	mov	r1, r9
   27ee4:	blt	28a3c <main@@Base+0x12ba0>
   27ee8:	ldrb	r0, [r9, #4]
   27eec:	mov	r1, r9
   27ef0:	cmp	r0, #34	; 0x22
   27ef4:	bne	28a3c <main@@Base+0x12ba0>
   27ef8:	add	r2, r9, #5
   27efc:	sub	r0, r8, r2
   27f00:	cmp	r0, #2
   27f04:	blt	283c8 <main@@Base+0x1252c>
   27f08:	ldrb	r0, [r2]
   27f0c:	cmp	r0, #32
   27f10:	bls	283b4 <main@@Base+0x12518>
   27f14:	mov	r1, r2
   27f18:	cmp	r1, r8
   27f1c:	bne	283e4 <main@@Base+0x12548>
   27f20:	b	28424 <main@@Base+0x12588>
   27f24:	ldr	r6, [sp, #24]
   27f28:	ldr	r2, [sp, #16]
   27f2c:	mov	r3, #4
   27f30:	mov	r0, r6
   27f34:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   27f38:	b	2845c <main@@Base+0x125c0>
   27f3c:	ldr	r6, [sp, #16]
   27f40:	bne	27f54 <main@@Base+0x120b8>
   27f44:	mov	r1, r9
   27f48:	ldrb	r0, [r1, #6]!
   27f4c:	cmp	r0, #32
   27f50:	bhi	27f68 <main@@Base+0x120cc>
   27f54:	ldr	r0, [sp, #24]
   27f58:	mov	r1, r2
   27f5c:	mov	r2, r6
   27f60:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   27f64:	mov	r1, r0
   27f68:	cmp	r1, r6
   27f6c:	beq	2801c <main@@Base+0x12180>
   27f70:	ldrb	r0, [r1]
   27f74:	cmp	r0, #58	; 0x3a
   27f78:	bne	2801c <main@@Base+0x12180>
   27f7c:	ldr	r0, [sp, #16]
   27f80:	ldr	r6, [sp, #24]
   27f84:	add	r2, r1, #1
   27f88:	sub	r0, r0, r2
   27f8c:	cmp	r0, #2
   27f90:	blt	284ac <main@@Base+0x12610>
   27f94:	ldrb	r0, [r2]
   27f98:	cmp	r0, #32
   27f9c:	bls	28498 <main@@Base+0x125fc>
   27fa0:	ldr	r6, [sp, #24]
   27fa4:	mov	r1, r2
   27fa8:	cmp	r9, r1
   27fac:	bne	284c8 <main@@Base+0x1262c>
   27fb0:	ldr	r0, [sp, #4]
   27fb4:	eor	r0, r4, r0
   27fb8:	orrs	r0, r5, r0
   27fbc:	bne	2800c <main@@Base+0x12170>
   27fc0:	cmp	r8, #9
   27fc4:	ldr	r8, [sp, #16]
   27fc8:	mov	r7, r9
   27fcc:	blt	28724 <main@@Base+0x12888>
   27fd0:	ldrb	r0, [r9, #8]
   27fd4:	mov	r7, r9
   27fd8:	cmp	r0, #34	; 0x22
   27fdc:	bne	28724 <main@@Base+0x12888>
   27fe0:	add	r1, r9, #9
   27fe4:	sub	r0, r8, r1
   27fe8:	cmp	r0, #2
   27fec:	blt	280cc <main@@Base+0x12230>
   27ff0:	ldrb	r0, [r1]
   27ff4:	cmp	r0, #32
   27ff8:	bls	280b8 <main@@Base+0x1221c>
   27ffc:	mov	r7, r1
   28000:	cmp	r7, r8
   28004:	bne	280e4 <main@@Base+0x12248>
   28008:	b	2818c <main@@Base+0x122f0>
   2800c:	ldr	r8, [sp, #16]
   28010:	mov	r0, r6
   28014:	mov	r1, r9
   28018:	b	28d08 <main@@Base+0x12e6c>
   2801c:	ldr	r6, [sp, #24]
   28020:	ldr	r2, [sp, #16]
   28024:	mov	r3, #4
   28028:	mov	r0, r6
   2802c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28030:	b	284bc <main@@Base+0x12620>
   28034:	bne	28048 <main@@Base+0x121ac>
   28038:	mov	r7, r9
   2803c:	ldrb	r0, [r7, #10]!
   28040:	cmp	r0, #32
   28044:	bhi	28058 <main@@Base+0x121bc>
   28048:	mov	r0, r6
   2804c:	mov	r2, r8
   28050:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28054:	mov	r7, r0
   28058:	cmp	r7, r8
   2805c:	beq	280a0 <main@@Base+0x12204>
   28060:	ldrb	r0, [r7]
   28064:	cmp	r0, #58	; 0x3a
   28068:	bne	280a0 <main@@Base+0x12204>
   2806c:	add	r1, r7, #1
   28070:	sub	r0, r8, r1
   28074:	cmp	r0, #2
   28078:	blt	28598 <main@@Base+0x126fc>
   2807c:	ldrb	r0, [r1]
   28080:	cmp	r0, #32
   28084:	bls	28580 <main@@Base+0x126e4>
   28088:	ldr	r8, [sp, #16]
   2808c:	ldr	r6, [sp, #24]
   28090:	mov	r7, r1
   28094:	cmp	r9, r7
   28098:	bne	285b0 <main@@Base+0x12714>
   2809c:	b	28010 <main@@Base+0x12174>
   280a0:	mov	r0, r6
   280a4:	mov	r1, r7
   280a8:	mov	r2, r8
   280ac:	mov	r3, #4
   280b0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   280b4:	b	285a4 <main@@Base+0x12708>
   280b8:	bne	280cc <main@@Base+0x12230>
   280bc:	mov	r7, r9
   280c0:	ldrb	r0, [r7, #10]!
   280c4:	cmp	r0, #32
   280c8:	bhi	280dc <main@@Base+0x12240>
   280cc:	mov	r0, r6
   280d0:	mov	r2, r8
   280d4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   280d8:	mov	r7, r0
   280dc:	cmp	r7, r8
   280e0:	beq	2818c <main@@Base+0x122f0>
   280e4:	ldrb	r0, [r7]
   280e8:	cmp	r0, #58	; 0x3a
   280ec:	bne	2818c <main@@Base+0x122f0>
   280f0:	add	r1, r7, #1
   280f4:	sub	r0, r8, r1
   280f8:	cmp	r0, #2
   280fc:	blt	28714 <main@@Base+0x12878>
   28100:	ldrb	r0, [r1]
   28104:	cmp	r0, #32
   28108:	bls	286fc <main@@Base+0x12860>
   2810c:	ldr	r8, [sp, #16]
   28110:	ldr	r6, [sp, #24]
   28114:	mov	r7, r1
   28118:	cmp	r9, r7
   2811c:	bne	2872c <main@@Base+0x12890>
   28120:	add	r7, r9, #8
   28124:	mov	r1, #8
   28128:	mov	r2, #-268435456	; 0xf0000000
   2812c:	sub	r0, r8, r7
   28130:	cmp	r0, #8
   28134:	movcc	r1, r0
   28138:	add	r1, r2, r1, lsl #28
   2813c:	asr	r1, r1, #28
   28140:	cmp	r1, #0
   28144:	blt	28d00 <main@@Base+0x12e64>
   28148:	ldrb	r1, [r7]
   2814c:	cmp	r1, #53	; 0x35
   28150:	bne	28d00 <main@@Base+0x12e64>
   28154:	cmp	r0, #2
   28158:	blt	28d00 <main@@Base+0x12e64>
   2815c:	ldrb	r0, [r9, #9]
   28160:	cmp	r0, #34	; 0x22
   28164:	bne	28d00 <main@@Base+0x12e64>
   28168:	add	r1, r9, #10
   2816c:	sub	r0, r8, r1
   28170:	cmp	r0, #2
   28174:	blt	28a94 <main@@Base+0x12bf8>
   28178:	ldrb	r0, [r1]
   2817c:	cmp	r0, #32
   28180:	bls	28a84 <main@@Base+0x12be8>
   28184:	mov	r9, r1
   28188:	b	28aa4 <main@@Base+0x12c08>
   2818c:	mov	r0, r6
   28190:	mov	r1, r7
   28194:	mov	r2, r8
   28198:	mov	r3, #4
   2819c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   281a0:	b	28720 <main@@Base+0x12884>
   281a4:	bne	281b4 <main@@Base+0x12318>
   281a8:	ldrb	r0, [r9, #11]!
   281ac:	cmp	r0, #32
   281b0:	bhi	281c4 <main@@Base+0x12328>
   281b4:	mov	r0, r6
   281b8:	mov	r2, r8
   281bc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   281c0:	mov	r9, r0
   281c4:	cmp	r9, r8
   281c8:	beq	2820c <main@@Base+0x12370>
   281cc:	ldrb	r0, [r9]
   281d0:	cmp	r0, #58	; 0x3a
   281d4:	bne	2820c <main@@Base+0x12370>
   281d8:	add	r1, r9, #1
   281dc:	sub	r0, r8, r1
   281e0:	cmp	r0, #2
   281e4:	blt	288a8 <main@@Base+0x12a0c>
   281e8:	ldrb	r0, [r1]
   281ec:	cmp	r0, #32
   281f0:	bls	28890 <main@@Base+0x129f4>
   281f4:	ldr	r8, [sp, #16]
   281f8:	ldr	r6, [sp, #24]
   281fc:	mov	r9, r1
   28200:	cmp	r7, r9
   28204:	bne	288c0 <main@@Base+0x12a24>
   28208:	b	28d00 <main@@Base+0x12e64>
   2820c:	mov	r0, r6
   28210:	mov	r1, r9
   28214:	mov	r2, r8
   28218:	mov	r3, #4
   2821c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28220:	b	288b4 <main@@Base+0x12a18>
   28224:	andeq	r5, r3, r4, lsr #32
   28228:	bne	28238 <main@@Base+0x1239c>
   2822c:	ldrb	r0, [r7, #2]!
   28230:	cmp	r0, #32
   28234:	bhi	28248 <main@@Base+0x123ac>
   28238:	mov	r0, r6
   2823c:	mov	r2, r8
   28240:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28244:	mov	r7, r0
   28248:	cmp	r9, r7
   2824c:	beq	27d68 <main@@Base+0x11ecc>
   28250:	mov	r4, #0
   28254:	cmp	r7, r8
   28258:	str	r4, [fp, #-36]	; 0xffffffdc
   2825c:	str	r4, [fp, #-40]	; 0xffffffd8
   28260:	str	r4, [sp, #36]	; 0x24
   28264:	str	r4, [sp, #32]
   28268:	str	r4, [sp, #44]	; 0x2c
   2826c:	beq	282cc <main@@Base+0x12430>
   28270:	sub	r0, fp, #40	; 0x28
   28274:	mov	r1, r7
   28278:	mov	r2, r8
   2827c:	add	r3, sp, #44	; 0x2c
   28280:	str	r0, [sp]
   28284:	mov	r0, r6
   28288:	bl	363e0 <flatcc_json_parser_integer@@Base>
   2828c:	cmp	r0, r7
   28290:	beq	282e0 <main@@Base+0x12444>
   28294:	mov	sl, r0
   28298:	ldr	r0, [sp, #44]	; 0x2c
   2829c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   282a0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   282a4:	cmp	r0, #0
   282a8:	beq	282f8 <main@@Base+0x1245c>
   282ac:	subs	r0, r4, #1
   282b0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   282b4:	bcc	2832c <main@@Base+0x12490>
   282b8:	mov	r0, r6
   282bc:	mov	r1, sl
   282c0:	mov	r2, r8
   282c4:	mov	r3, #8
   282c8:	b	28310 <main@@Base+0x12474>
   282cc:	mov	r5, #0
   282d0:	mov	sl, r8
   282d4:	cmp	r7, sl
   282d8:	bne	2837c <main@@Base+0x124e0>
   282dc:	b	28344 <main@@Base+0x124a8>
   282e0:	mov	r4, #0
   282e4:	mov	r5, #0
   282e8:	mov	sl, r7
   282ec:	cmp	r7, sl
   282f0:	bne	2837c <main@@Base+0x124e0>
   282f4:	b	28344 <main@@Base+0x124a8>
   282f8:	cmn	r5, #1
   282fc:	bgt	28334 <main@@Base+0x12498>
   28300:	mov	r0, r6
   28304:	mov	r1, sl
   28308:	mov	r2, r8
   2830c:	mov	r3, #7
   28310:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28314:	mov	sl, r0
   28318:	mov	r4, #0
   2831c:	mov	r5, #0
   28320:	cmp	r7, sl
   28324:	bne	2837c <main@@Base+0x124e0>
   28328:	b	28344 <main@@Base+0x124a8>
   2832c:	rsbs	r4, r4, #0
   28330:	rsc	r5, r5, #0
   28334:	str	r4, [sp, #32]
   28338:	str	r5, [sp, #36]	; 0x24
   2833c:	cmp	r7, sl
   28340:	bne	2837c <main@@Base+0x124e0>
   28344:	add	r0, sp, #32
   28348:	mov	r1, r7
   2834c:	mov	r2, r8
   28350:	str	r0, [sp]
   28354:	mov	r0, r6
   28358:	ldr	r3, [pc, #3128]	; 28f98 <main@@Base+0x130fc>
   2835c:	add	r3, pc, r3
   28360:	bl	241bc <main@@Base+0xe320>
   28364:	mov	sl, r0
   28368:	cmp	r0, r7
   2836c:	cmpne	sl, r8
   28370:	beq	28f60 <main@@Base+0x130c4>
   28374:	ldr	r4, [sp, #32]
   28378:	ldr	r5, [sp, #36]	; 0x24
   2837c:	orrs	r0, r4, r5
   28380:	bne	28390 <main@@Base+0x124f4>
   28384:	ldrb	r0, [r6, #8]
   28388:	tst	r0, #2
   2838c:	beq	28d14 <main@@Base+0x12e78>
   28390:	ldr	r0, [r6]
   28394:	mov	r1, #5
   28398:	mov	r2, #8
   2839c:	mov	r3, #8
   283a0:	bl	307e4 <flatcc_builder_table_add@@Base>
   283a4:	cmp	r0, #0
   283a8:	bne	28888 <main@@Base+0x129ec>
   283ac:	b	28f60 <main@@Base+0x130c4>
   283b0:	andeq	r4, r3, r0, lsr #29
   283b4:	bne	283c8 <main@@Base+0x1252c>
   283b8:	mov	r1, r9
   283bc:	ldrb	r0, [r1, #6]!
   283c0:	cmp	r0, #32
   283c4:	bhi	283dc <main@@Base+0x12540>
   283c8:	mov	r1, r2
   283cc:	mov	r0, r6
   283d0:	mov	r2, r8
   283d4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   283d8:	mov	r1, r0
   283dc:	cmp	r1, r8
   283e0:	beq	28424 <main@@Base+0x12588>
   283e4:	ldrb	r0, [r1]
   283e8:	cmp	r0, #58	; 0x3a
   283ec:	bne	28424 <main@@Base+0x12588>
   283f0:	add	r2, r1, #1
   283f4:	sub	r0, r8, r2
   283f8:	cmp	r0, #2
   283fc:	blt	28a28 <main@@Base+0x12b8c>
   28400:	ldrb	r0, [r2]
   28404:	cmp	r0, #32
   28408:	bls	28a10 <main@@Base+0x12b74>
   2840c:	ldr	r8, [sp, #16]
   28410:	ldr	r6, [sp, #24]
   28414:	mov	r1, r2
   28418:	cmp	r9, r1
   2841c:	bne	28a44 <main@@Base+0x12ba8>
   28420:	b	28010 <main@@Base+0x12174>
   28424:	mov	r0, r6
   28428:	mov	r2, r8
   2842c:	mov	r3, #4
   28430:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28434:	b	28a38 <main@@Base+0x12b9c>
   28438:	ldr	r6, [sp, #24]
   2843c:	bne	2844c <main@@Base+0x125b0>
   28440:	ldrb	r0, [r1, #2]!
   28444:	cmp	r0, #32
   28448:	bhi	28460 <main@@Base+0x125c4>
   2844c:	mov	r1, r2
   28450:	ldr	r2, [sp, #16]
   28454:	mov	r0, r6
   28458:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2845c:	mov	r1, r0
   28460:	cmp	r9, r1
   28464:	beq	27e70 <main@@Base+0x11fd4>
   28468:	ldr	r8, [sp, #16]
   2846c:	mov	r0, r6
   28470:	add	r3, sp, #28
   28474:	mov	r2, r8
   28478:	bl	36974 <flatcc_json_parser_build_string@@Base>
   2847c:	mov	sl, r0
   28480:	ldr	r0, [sp, #28]
   28484:	cmp	r0, #0
   28488:	beq	28f60 <main@@Base+0x130c4>
   2848c:	ldr	r0, [r6]
   28490:	mov	r1, #0
   28494:	b	28a6c <main@@Base+0x12bd0>
   28498:	ldr	r6, [sp, #24]
   2849c:	bne	284ac <main@@Base+0x12610>
   284a0:	ldrb	r0, [r1, #2]!
   284a4:	cmp	r0, #32
   284a8:	bhi	284c0 <main@@Base+0x12624>
   284ac:	mov	r1, r2
   284b0:	ldr	r2, [sp, #16]
   284b4:	mov	r0, r6
   284b8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   284bc:	mov	r1, r0
   284c0:	cmp	r9, r1
   284c4:	beq	27fb0 <main@@Base+0x12114>
   284c8:	ldr	r8, [sp, #16]
   284cc:	mov	r0, r6
   284d0:	add	r3, sp, #28
   284d4:	mov	r2, r8
   284d8:	bl	36974 <flatcc_json_parser_build_string@@Base>
   284dc:	mov	sl, r0
   284e0:	ldr	r0, [sp, #28]
   284e4:	cmp	r0, #0
   284e8:	beq	28f60 <main@@Base+0x130c4>
   284ec:	ldr	r0, [r6]
   284f0:	mov	r1, #4
   284f4:	b	28a6c <main@@Base+0x12bd0>
   284f8:	ldr	r8, [sp, #16]
   284fc:	ldr	r6, [sp, #24]
   28500:	bne	28510 <main@@Base+0x12674>
   28504:	ldrb	r0, [r9, #11]!
   28508:	cmp	r0, #32
   2850c:	bhi	28520 <main@@Base+0x12684>
   28510:	mov	r0, r6
   28514:	mov	r2, r8
   28518:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2851c:	mov	r9, r0
   28520:	cmp	r9, r8
   28524:	beq	28568 <main@@Base+0x126cc>
   28528:	ldrb	r0, [r9]
   2852c:	cmp	r0, #58	; 0x3a
   28530:	bne	28568 <main@@Base+0x126cc>
   28534:	add	r1, r9, #1
   28538:	sub	r0, r8, r1
   2853c:	cmp	r0, #2
   28540:	blt	28b14 <main@@Base+0x12c78>
   28544:	ldrb	r0, [r1]
   28548:	cmp	r0, #32
   2854c:	bls	28afc <main@@Base+0x12c60>
   28550:	ldr	r8, [sp, #16]
   28554:	ldr	r6, [sp, #24]
   28558:	mov	r9, r1
   2855c:	cmp	r7, r9
   28560:	bne	28b2c <main@@Base+0x12c90>
   28564:	b	28d00 <main@@Base+0x12e64>
   28568:	mov	r0, r6
   2856c:	mov	r1, r9
   28570:	mov	r2, r8
   28574:	mov	r3, #4
   28578:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2857c:	b	28b20 <main@@Base+0x12c84>
   28580:	ldr	r8, [sp, #16]
   28584:	ldr	r6, [sp, #24]
   28588:	bne	28598 <main@@Base+0x126fc>
   2858c:	ldrb	r0, [r7, #2]!
   28590:	cmp	r0, #32
   28594:	bhi	285a8 <main@@Base+0x1270c>
   28598:	mov	r0, r6
   2859c:	mov	r2, r8
   285a0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   285a4:	mov	r7, r0
   285a8:	cmp	r9, r7
   285ac:	beq	28010 <main@@Base+0x12174>
   285b0:	mov	r4, #0
   285b4:	cmp	r7, r8
   285b8:	str	r4, [fp, #-36]	; 0xffffffdc
   285bc:	str	r4, [fp, #-40]	; 0xffffffd8
   285c0:	str	r4, [sp, #36]	; 0x24
   285c4:	str	r4, [sp, #32]
   285c8:	str	r4, [sp, #44]	; 0x2c
   285cc:	beq	2862c <main@@Base+0x12790>
   285d0:	sub	r0, fp, #40	; 0x28
   285d4:	mov	r1, r7
   285d8:	mov	r2, r8
   285dc:	add	r3, sp, #44	; 0x2c
   285e0:	str	r0, [sp]
   285e4:	mov	r0, r6
   285e8:	bl	363e0 <flatcc_json_parser_integer@@Base>
   285ec:	cmp	r0, r7
   285f0:	beq	28640 <main@@Base+0x127a4>
   285f4:	mov	sl, r0
   285f8:	ldr	r0, [sp, #44]	; 0x2c
   285fc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28600:	ldr	r5, [fp, #-36]	; 0xffffffdc
   28604:	cmp	r0, #0
   28608:	beq	28658 <main@@Base+0x127bc>
   2860c:	subs	r0, r4, #1
   28610:	sbcs	r0, r5, #-2147483648	; 0x80000000
   28614:	bcc	2868c <main@@Base+0x127f0>
   28618:	mov	r0, r6
   2861c:	mov	r1, sl
   28620:	mov	r2, r8
   28624:	mov	r3, #8
   28628:	b	28670 <main@@Base+0x127d4>
   2862c:	mov	r5, #0
   28630:	mov	sl, r8
   28634:	cmp	r7, sl
   28638:	bne	286dc <main@@Base+0x12840>
   2863c:	b	286a4 <main@@Base+0x12808>
   28640:	mov	r4, #0
   28644:	mov	r5, #0
   28648:	mov	sl, r7
   2864c:	cmp	r7, sl
   28650:	bne	286dc <main@@Base+0x12840>
   28654:	b	286a4 <main@@Base+0x12808>
   28658:	cmn	r5, #1
   2865c:	bgt	28694 <main@@Base+0x127f8>
   28660:	mov	r0, r6
   28664:	mov	r1, sl
   28668:	mov	r2, r8
   2866c:	mov	r3, #7
   28670:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28674:	mov	sl, r0
   28678:	mov	r4, #0
   2867c:	mov	r5, #0
   28680:	cmp	r7, sl
   28684:	bne	286dc <main@@Base+0x12840>
   28688:	b	286a4 <main@@Base+0x12808>
   2868c:	rsbs	r4, r4, #0
   28690:	rsc	r5, r5, #0
   28694:	str	r4, [sp, #32]
   28698:	str	r5, [sp, #36]	; 0x24
   2869c:	cmp	r7, sl
   286a0:	bne	286dc <main@@Base+0x12840>
   286a4:	add	r0, sp, #32
   286a8:	mov	r1, r7
   286ac:	mov	r2, r8
   286b0:	str	r0, [sp]
   286b4:	mov	r0, r6
   286b8:	ldr	r3, [pc, #2260]	; 28f94 <main@@Base+0x130f8>
   286bc:	add	r3, pc, r3
   286c0:	bl	241bc <main@@Base+0xe320>
   286c4:	mov	sl, r0
   286c8:	cmp	r0, r7
   286cc:	cmpne	sl, r8
   286d0:	beq	28f58 <main@@Base+0x130bc>
   286d4:	ldr	r4, [sp, #32]
   286d8:	ldr	r5, [sp, #36]	; 0x24
   286dc:	orrs	r0, r4, r5
   286e0:	bne	286f0 <main@@Base+0x12854>
   286e4:	ldrb	r0, [r6, #8]
   286e8:	tst	r0, #2
   286ec:	beq	28d14 <main@@Base+0x12e78>
   286f0:	ldr	r0, [r6]
   286f4:	mov	r1, #3
   286f8:	b	28874 <main@@Base+0x129d8>
   286fc:	ldr	r8, [sp, #16]
   28700:	ldr	r6, [sp, #24]
   28704:	bne	28714 <main@@Base+0x12878>
   28708:	ldrb	r0, [r7, #2]!
   2870c:	cmp	r0, #32
   28710:	bhi	28724 <main@@Base+0x12888>
   28714:	mov	r0, r6
   28718:	mov	r2, r8
   2871c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28720:	mov	r7, r0
   28724:	cmp	r9, r7
   28728:	beq	28120 <main@@Base+0x12284>
   2872c:	mov	r4, #0
   28730:	cmp	r7, r8
   28734:	str	r4, [fp, #-36]	; 0xffffffdc
   28738:	str	r4, [fp, #-40]	; 0xffffffd8
   2873c:	str	r4, [sp, #36]	; 0x24
   28740:	str	r4, [sp, #32]
   28744:	str	r4, [sp, #44]	; 0x2c
   28748:	beq	287a8 <main@@Base+0x1290c>
   2874c:	sub	r0, fp, #40	; 0x28
   28750:	mov	r1, r7
   28754:	mov	r2, r8
   28758:	add	r3, sp, #44	; 0x2c
   2875c:	str	r0, [sp]
   28760:	mov	r0, r6
   28764:	bl	363e0 <flatcc_json_parser_integer@@Base>
   28768:	cmp	r0, r7
   2876c:	beq	287bc <main@@Base+0x12920>
   28770:	mov	sl, r0
   28774:	ldr	r0, [sp, #44]	; 0x2c
   28778:	ldr	r4, [fp, #-40]	; 0xffffffd8
   2877c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   28780:	cmp	r0, #0
   28784:	beq	287d4 <main@@Base+0x12938>
   28788:	subs	r0, r4, #1
   2878c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   28790:	bcc	28808 <main@@Base+0x1296c>
   28794:	mov	r0, r6
   28798:	mov	r1, sl
   2879c:	mov	r2, r8
   287a0:	mov	r3, #8
   287a4:	b	287ec <main@@Base+0x12950>
   287a8:	mov	r5, #0
   287ac:	mov	sl, r8
   287b0:	cmp	r7, sl
   287b4:	bne	28858 <main@@Base+0x129bc>
   287b8:	b	28820 <main@@Base+0x12984>
   287bc:	mov	r4, #0
   287c0:	mov	r5, #0
   287c4:	mov	sl, r7
   287c8:	cmp	r7, sl
   287cc:	bne	28858 <main@@Base+0x129bc>
   287d0:	b	28820 <main@@Base+0x12984>
   287d4:	cmn	r5, #1
   287d8:	bgt	28810 <main@@Base+0x12974>
   287dc:	mov	r0, r6
   287e0:	mov	r1, sl
   287e4:	mov	r2, r8
   287e8:	mov	r3, #7
   287ec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   287f0:	mov	sl, r0
   287f4:	mov	r4, #0
   287f8:	mov	r5, #0
   287fc:	cmp	r7, sl
   28800:	bne	28858 <main@@Base+0x129bc>
   28804:	b	28820 <main@@Base+0x12984>
   28808:	rsbs	r4, r4, #0
   2880c:	rsc	r5, r5, #0
   28810:	str	r4, [sp, #32]
   28814:	str	r5, [sp, #36]	; 0x24
   28818:	cmp	r7, sl
   2881c:	bne	28858 <main@@Base+0x129bc>
   28820:	add	r0, sp, #32
   28824:	mov	r1, r7
   28828:	mov	r2, r8
   2882c:	str	r0, [sp]
   28830:	mov	r0, r6
   28834:	ldr	r3, [pc, #1892]	; 28fa0 <main@@Base+0x13104>
   28838:	add	r3, pc, r3
   2883c:	bl	241bc <main@@Base+0xe320>
   28840:	mov	sl, r0
   28844:	cmp	r0, r7
   28848:	cmpne	sl, r8
   2884c:	beq	28f58 <main@@Base+0x130bc>
   28850:	ldr	r4, [sp, #32]
   28854:	ldr	r5, [sp, #36]	; 0x24
   28858:	orrs	r0, r4, r5
   2885c:	bne	2886c <main@@Base+0x129d0>
   28860:	ldrb	r0, [r6, #8]
   28864:	tst	r0, #2
   28868:	beq	28d14 <main@@Base+0x12e78>
   2886c:	ldr	r0, [r6]
   28870:	mov	r1, #7
   28874:	mov	r2, #8
   28878:	mov	r3, #8
   2887c:	bl	307e4 <flatcc_builder_table_add@@Base>
   28880:	cmp	r0, #0
   28884:	beq	28f58 <main@@Base+0x130bc>
   28888:	strd	r4, [r0]
   2888c:	b	28d14 <main@@Base+0x12e78>
   28890:	ldr	r8, [sp, #16]
   28894:	ldr	r6, [sp, #24]
   28898:	bne	288a8 <main@@Base+0x12a0c>
   2889c:	ldrb	r0, [r9, #2]!
   288a0:	cmp	r0, #32
   288a4:	bhi	288b8 <main@@Base+0x12a1c>
   288a8:	mov	r0, r6
   288ac:	mov	r2, r8
   288b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   288b4:	mov	r9, r0
   288b8:	cmp	r7, r9
   288bc:	beq	28d00 <main@@Base+0x12e64>
   288c0:	mov	r4, #0
   288c4:	cmp	r9, r8
   288c8:	str	r4, [fp, #-36]	; 0xffffffdc
   288cc:	str	r4, [fp, #-40]	; 0xffffffd8
   288d0:	str	r4, [sp, #44]	; 0x2c
   288d4:	str	r4, [sp, #32]
   288d8:	beq	28924 <main@@Base+0x12a88>
   288dc:	sub	r0, fp, #40	; 0x28
   288e0:	mov	r1, r9
   288e4:	mov	r2, r8
   288e8:	add	r3, sp, #32
   288ec:	str	r0, [sp]
   288f0:	mov	r0, r6
   288f4:	bl	363e0 <flatcc_json_parser_integer@@Base>
   288f8:	cmp	r0, r9
   288fc:	beq	28934 <main@@Base+0x12a98>
   28900:	mov	sl, r0
   28904:	ldr	r0, [sp, #32]
   28908:	cmp	r0, #0
   2890c:	beq	28948 <main@@Base+0x12aac>
   28910:	ldr	r6, [sp, #24]
   28914:	ldr	r8, [sp, #16]
   28918:	mov	r1, sl
   2891c:	mov	r3, #8
   28920:	b	28964 <main@@Base+0x12ac8>
   28924:	mov	sl, r8
   28928:	cmp	r9, sl
   2892c:	bne	289bc <main@@Base+0x12b20>
   28930:	b	2897c <main@@Base+0x12ae0>
   28934:	mov	sl, r9
   28938:	cmp	r9, sl
   2893c:	bne	289bc <main@@Base+0x12b20>
   28940:	b	2897c <main@@Base+0x12ae0>
   28944:	andeq	r4, r3, r0, asr #17
   28948:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2894c:	cmp	r0, #0
   28950:	beq	289f4 <main@@Base+0x12b58>
   28954:	ldr	r6, [sp, #24]
   28958:	ldr	r8, [sp, #16]
   2895c:	mov	r1, sl
   28960:	mov	r3, #7
   28964:	mov	r0, r6
   28968:	mov	r2, r8
   2896c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28970:	mov	sl, r0
   28974:	cmp	r9, sl
   28978:	bne	289bc <main@@Base+0x12b20>
   2897c:	add	r0, sp, #44	; 0x2c
   28980:	mov	r1, r9
   28984:	mov	r2, r8
   28988:	str	r0, [sp]
   2898c:	mov	r0, r6
   28990:	ldr	r3, [pc, #1528]	; 28f90 <main@@Base+0x130f4>
   28994:	add	r3, pc, r3
   28998:	bl	243b4 <main@@Base+0xe518>
   2899c:	cmp	r0, r9
   289a0:	mov	sl, r0
   289a4:	ldrne	r0, [sp, #16]
   289a8:	cmpne	sl, r0
   289ac:	beq	28f58 <main@@Base+0x130bc>
   289b0:	ldr	r4, [sp, #44]	; 0x2c
   289b4:	ldr	r8, [sp, #16]
   289b8:	ldr	r6, [sp, #24]
   289bc:	cmp	r4, #0
   289c0:	bne	289d0 <main@@Base+0x12b34>
   289c4:	ldrb	r0, [r6, #8]
   289c8:	tst	r0, #2
   289cc:	beq	28d14 <main@@Base+0x12e78>
   289d0:	ldr	r0, [r6]
   289d4:	mov	r1, #1
   289d8:	mov	r2, #4
   289dc:	mov	r3, #4
   289e0:	bl	307e4 <flatcc_builder_table_add@@Base>
   289e4:	cmp	r0, #0
   289e8:	beq	28f58 <main@@Base+0x130bc>
   289ec:	str	r4, [r0]
   289f0:	b	28d14 <main@@Base+0x12e78>
   289f4:	ldr	r4, [fp, #-40]	; 0xffffffd8
   289f8:	ldr	r8, [sp, #16]
   289fc:	ldr	r6, [sp, #24]
   28a00:	str	r4, [sp, #44]	; 0x2c
   28a04:	cmp	r9, sl
   28a08:	bne	289bc <main@@Base+0x12b20>
   28a0c:	b	2897c <main@@Base+0x12ae0>
   28a10:	ldr	r8, [sp, #16]
   28a14:	ldr	r6, [sp, #24]
   28a18:	bne	28a28 <main@@Base+0x12b8c>
   28a1c:	ldrb	r0, [r1, #2]!
   28a20:	cmp	r0, #32
   28a24:	bhi	28a3c <main@@Base+0x12ba0>
   28a28:	mov	r1, r2
   28a2c:	mov	r0, r6
   28a30:	mov	r2, r8
   28a34:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28a38:	mov	r1, r0
   28a3c:	cmp	r9, r1
   28a40:	beq	28010 <main@@Base+0x12174>
   28a44:	mov	r0, r6
   28a48:	mov	r2, r8
   28a4c:	add	r3, sp, #28
   28a50:	bl	36974 <flatcc_json_parser_build_string@@Base>
   28a54:	mov	sl, r0
   28a58:	ldr	r0, [sp, #28]
   28a5c:	cmp	r0, #0
   28a60:	beq	28f60 <main@@Base+0x130c4>
   28a64:	ldr	r0, [r6]
   28a68:	mov	r1, #2
   28a6c:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   28a70:	cmp	r0, #0
   28a74:	beq	28f60 <main@@Base+0x130c4>
   28a78:	ldr	r1, [sp, #28]
   28a7c:	str	r1, [r0]
   28a80:	b	28d14 <main@@Base+0x12e78>
   28a84:	bne	28a94 <main@@Base+0x12bf8>
   28a88:	ldrb	r0, [r9, #11]!
   28a8c:	cmp	r0, #32
   28a90:	bhi	28aa4 <main@@Base+0x12c08>
   28a94:	ldr	r0, [sp, #24]
   28a98:	ldr	r2, [sp, #16]
   28a9c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28aa0:	mov	r9, r0
   28aa4:	ldr	r0, [sp, #16]
   28aa8:	cmp	r9, r0
   28aac:	beq	28ae4 <main@@Base+0x12c48>
   28ab0:	ldrb	r0, [r9]
   28ab4:	cmp	r0, #58	; 0x3a
   28ab8:	bne	28ae4 <main@@Base+0x12c48>
   28abc:	ldr	r0, [sp, #16]
   28ac0:	add	r1, r9, #1
   28ac4:	sub	r0, r0, r1
   28ac8:	cmp	r0, #2
   28acc:	blt	28c7c <main@@Base+0x12de0>
   28ad0:	ldrb	r0, [r1]
   28ad4:	cmp	r0, #32
   28ad8:	bls	28c6c <main@@Base+0x12dd0>
   28adc:	mov	r9, r1
   28ae0:	b	28c8c <main@@Base+0x12df0>
   28ae4:	ldr	r0, [sp, #24]
   28ae8:	ldr	r2, [sp, #16]
   28aec:	mov	r1, r9
   28af0:	mov	r3, #4
   28af4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28af8:	b	28c88 <main@@Base+0x12dec>
   28afc:	ldr	r8, [sp, #16]
   28b00:	ldr	r6, [sp, #24]
   28b04:	bne	28b14 <main@@Base+0x12c78>
   28b08:	ldrb	r0, [r9, #2]!
   28b0c:	cmp	r0, #32
   28b10:	bhi	28b24 <main@@Base+0x12c88>
   28b14:	mov	r0, r6
   28b18:	mov	r2, r8
   28b1c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28b20:	mov	r9, r0
   28b24:	cmp	r7, r9
   28b28:	beq	28d00 <main@@Base+0x12e64>
   28b2c:	mov	r4, #0
   28b30:	cmp	r9, r8
   28b34:	str	r4, [fp, #-36]	; 0xffffffdc
   28b38:	str	r4, [fp, #-40]	; 0xffffffd8
   28b3c:	str	r4, [sp, #44]	; 0x2c
   28b40:	str	r4, [sp, #32]
   28b44:	beq	28b90 <main@@Base+0x12cf4>
   28b48:	sub	r0, fp, #40	; 0x28
   28b4c:	ldr	r2, [sp, #16]
   28b50:	mov	r1, r9
   28b54:	add	r3, sp, #32
   28b58:	str	r0, [sp]
   28b5c:	ldr	r0, [sp, #24]
   28b60:	bl	363e0 <flatcc_json_parser_integer@@Base>
   28b64:	cmp	r0, r9
   28b68:	beq	28ba0 <main@@Base+0x12d04>
   28b6c:	mov	sl, r0
   28b70:	ldr	r0, [sp, #32]
   28b74:	cmp	r0, #0
   28b78:	beq	28bb0 <main@@Base+0x12d14>
   28b7c:	ldr	r0, [sp, #24]
   28b80:	ldr	r2, [sp, #16]
   28b84:	mov	r1, sl
   28b88:	mov	r3, #8
   28b8c:	b	28bcc <main@@Base+0x12d30>
   28b90:	ldr	sl, [sp, #16]
   28b94:	cmp	r9, sl
   28b98:	bne	28c14 <main@@Base+0x12d78>
   28b9c:	b	28bdc <main@@Base+0x12d40>
   28ba0:	mov	sl, r9
   28ba4:	cmp	r9, sl
   28ba8:	bne	28c14 <main@@Base+0x12d78>
   28bac:	b	28bdc <main@@Base+0x12d40>
   28bb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28bb4:	cmp	r0, #0
   28bb8:	beq	28c58 <main@@Base+0x12dbc>
   28bbc:	ldr	r0, [sp, #24]
   28bc0:	ldr	r2, [sp, #16]
   28bc4:	mov	r1, sl
   28bc8:	mov	r3, #7
   28bcc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28bd0:	mov	sl, r0
   28bd4:	cmp	r9, sl
   28bd8:	bne	28c14 <main@@Base+0x12d78>
   28bdc:	add	r0, sp, #44	; 0x2c
   28be0:	ldr	r2, [sp, #16]
   28be4:	mov	r1, r9
   28be8:	str	r0, [sp]
   28bec:	ldr	r0, [sp, #24]
   28bf0:	ldr	r3, [pc, #932]	; 28f9c <main@@Base+0x13100>
   28bf4:	add	r3, pc, r3
   28bf8:	bl	243b4 <main@@Base+0xe518>
   28bfc:	cmp	r0, r9
   28c00:	mov	sl, r0
   28c04:	ldrne	r0, [sp, #16]
   28c08:	cmpne	sl, r0
   28c0c:	beq	28f58 <main@@Base+0x130bc>
   28c10:	ldr	r4, [sp, #44]	; 0x2c
   28c14:	ldr	r6, [sp, #24]
   28c18:	cmp	r4, #0
   28c1c:	bne	28c2c <main@@Base+0x12d90>
   28c20:	ldrb	r0, [r6, #8]
   28c24:	tst	r0, #2
   28c28:	beq	28c50 <main@@Base+0x12db4>
   28c2c:	ldr	r0, [r6]
   28c30:	mov	r1, #6
   28c34:	mov	r2, #4
   28c38:	mov	r3, #4
   28c3c:	bl	307e4 <flatcc_builder_table_add@@Base>
   28c40:	cmp	r0, #0
   28c44:	beq	28f58 <main@@Base+0x130bc>
   28c48:	ldr	r6, [sp, #24]
   28c4c:	str	r4, [r0]
   28c50:	ldr	r8, [sp, #16]
   28c54:	b	28d14 <main@@Base+0x12e78>
   28c58:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28c5c:	str	r4, [sp, #44]	; 0x2c
   28c60:	cmp	r9, sl
   28c64:	bne	28c14 <main@@Base+0x12d78>
   28c68:	b	28bdc <main@@Base+0x12d40>
   28c6c:	bne	28c7c <main@@Base+0x12de0>
   28c70:	ldrb	r0, [r9, #2]!
   28c74:	cmp	r0, #32
   28c78:	bhi	28c8c <main@@Base+0x12df0>
   28c7c:	ldr	r0, [sp, #24]
   28c80:	ldr	r2, [sp, #16]
   28c84:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28c88:	mov	r9, r0
   28c8c:	ldr	r8, [sp, #16]
   28c90:	ldr	r6, [sp, #24]
   28c94:	cmp	r7, r9
   28c98:	beq	28d00 <main@@Base+0x12e64>
   28c9c:	mov	r4, #0
   28ca0:	cmp	r9, r8
   28ca4:	str	r4, [fp, #-36]	; 0xffffffdc
   28ca8:	str	r4, [fp, #-40]	; 0xffffffd8
   28cac:	str	r4, [sp, #44]	; 0x2c
   28cb0:	str	r4, [sp, #32]
   28cb4:	beq	27964 <main@@Base+0x11ac8>
   28cb8:	sub	r0, fp, #40	; 0x28
   28cbc:	ldr	r2, [sp, #16]
   28cc0:	mov	r1, r9
   28cc4:	add	r3, sp, #32
   28cc8:	str	r0, [sp]
   28ccc:	ldr	r0, [sp, #24]
   28cd0:	bl	363e0 <flatcc_json_parser_integer@@Base>
   28cd4:	cmp	r0, r9
   28cd8:	beq	27974 <main@@Base+0x11ad8>
   28cdc:	mov	sl, r0
   28ce0:	ldr	r0, [sp, #32]
   28ce4:	cmp	r0, #0
   28ce8:	beq	27984 <main@@Base+0x11ae8>
   28cec:	ldr	r0, [sp, #24]
   28cf0:	ldr	r2, [sp, #16]
   28cf4:	mov	r1, sl
   28cf8:	mov	r3, #8
   28cfc:	b	279a0 <main@@Base+0x11b04>
   28d00:	mov	r0, r6
   28d04:	mov	r1, r7
   28d08:	mov	r2, r8
   28d0c:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   28d10:	mov	sl, r0
   28d14:	sub	r0, r8, sl
   28d18:	cmp	r0, #2
   28d1c:	blt	28d50 <main@@Base+0x12eb4>
   28d20:	ldrb	r0, [sl]
   28d24:	cmp	r0, #32
   28d28:	bls	28d3c <main@@Base+0x12ea0>
   28d2c:	mov	r2, sl
   28d30:	cmp	r2, r8
   28d34:	bne	28d6c <main@@Base+0x12ed0>
   28d38:	b	28ddc <main@@Base+0x12f40>
   28d3c:	bne	28d50 <main@@Base+0x12eb4>
   28d40:	mov	r2, sl
   28d44:	ldrb	r0, [r2, #1]!
   28d48:	cmp	r0, #32
   28d4c:	bhi	28d64 <main@@Base+0x12ec8>
   28d50:	mov	r0, r6
   28d54:	mov	r1, sl
   28d58:	mov	r2, r8
   28d5c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28d60:	mov	r2, r0
   28d64:	cmp	r2, r8
   28d68:	beq	28ddc <main@@Base+0x12f40>
   28d6c:	ldrb	r0, [r2]
   28d70:	cmp	r0, #44	; 0x2c
   28d74:	bne	28de4 <main@@Base+0x12f48>
   28d78:	add	r1, r2, #1
   28d7c:	sub	r0, r8, r1
   28d80:	cmp	r0, #2
   28d84:	blt	28db4 <main@@Base+0x12f18>
   28d88:	ldrb	r0, [r1]
   28d8c:	cmp	r0, #32
   28d90:	bls	28da4 <main@@Base+0x12f08>
   28d94:	mov	r2, r1
   28d98:	cmp	r2, r8
   28d9c:	bne	28dcc <main@@Base+0x12f30>
   28da0:	b	28e10 <main@@Base+0x12f74>
   28da4:	bne	28db4 <main@@Base+0x12f18>
   28da8:	ldrb	r0, [r2, #2]!
   28dac:	cmp	r0, #32
   28db0:	bhi	28dc4 <main@@Base+0x12f28>
   28db4:	mov	r0, r6
   28db8:	mov	r2, r8
   28dbc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28dc0:	mov	r2, r0
   28dc4:	cmp	r2, r8
   28dc8:	beq	28e10 <main@@Base+0x12f74>
   28dcc:	ldrb	r0, [r2]
   28dd0:	cmp	r0, #125	; 0x7d
   28dd4:	bne	27a44 <main@@Base+0x11ba8>
   28dd8:	b	28dec <main@@Base+0x12f50>
   28ddc:	mov	sl, r8
   28de0:	b	26598 <main@@Base+0x106fc>
   28de4:	cmp	r0, #125	; 0x7d
   28de8:	bne	28e1c <main@@Base+0x12f80>
   28dec:	add	r1, r2, #1
   28df0:	sub	r0, r8, r1
   28df4:	cmp	r0, #2
   28df8:	blt	28e44 <main@@Base+0x12fa8>
   28dfc:	ldrb	r0, [r1]
   28e00:	cmp	r0, #32
   28e04:	bls	28e30 <main@@Base+0x12f94>
   28e08:	mov	sl, r1
   28e0c:	b	26598 <main@@Base+0x106fc>
   28e10:	mov	r0, r6
   28e14:	mov	r1, r8
   28e18:	b	28e24 <main@@Base+0x12f88>
   28e1c:	mov	r0, r6
   28e20:	mov	r1, r2
   28e24:	mov	r2, r8
   28e28:	mov	r3, #10
   28e2c:	b	26590 <main@@Base+0x106f4>
   28e30:	bne	28e44 <main@@Base+0x12fa8>
   28e34:	ldrb	r0, [r2, #2]!
   28e38:	cmp	r0, #32
   28e3c:	mov	sl, r2
   28e40:	bhi	26598 <main@@Base+0x106fc>
   28e44:	mov	r0, r6
   28e48:	mov	r2, r8
   28e4c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28e50:	b	26594 <main@@Base+0x106f8>
   28e54:	ldr	r4, [sp, #20]
   28e58:	mov	sl, r8
   28e5c:	b	28ed4 <main@@Base+0x13038>
   28e60:	cmp	r0, #125	; 0x7d
   28e64:	bne	28ebc <main@@Base+0x13020>
   28e68:	add	sl, r2, #1
   28e6c:	sub	r0, r8, sl
   28e70:	cmp	r0, #2
   28e74:	blt	28e9c <main@@Base+0x13000>
   28e78:	ldrb	r0, [sl]
   28e7c:	cmp	r0, #32
   28e80:	bhi	28ed4 <main@@Base+0x13038>
   28e84:	bne	28e9c <main@@Base+0x13000>
   28e88:	ldrb	r0, [r2, #2]!
   28e8c:	cmp	r0, #32
   28e90:	bls	28e9c <main@@Base+0x13000>
   28e94:	mov	sl, r2
   28e98:	b	28ed4 <main@@Base+0x13038>
   28e9c:	mov	r0, r6
   28ea0:	mov	r1, sl
   28ea4:	mov	r2, r8
   28ea8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28eac:	b	28ed0 <main@@Base+0x13034>
   28eb0:	mov	r0, r6
   28eb4:	mov	r1, r8
   28eb8:	b	28ec4 <main@@Base+0x13028>
   28ebc:	mov	r0, r6
   28ec0:	mov	r1, r2
   28ec4:	mov	r2, r8
   28ec8:	mov	r3, #10
   28ecc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28ed0:	mov	sl, r0
   28ed4:	ldr	r0, [sp, #12]
   28ed8:	ldr	r0, [r0]
   28edc:	cmp	r0, #0
   28ee0:	beq	28f08 <main@@Base+0x1306c>
   28ee4:	mov	r0, r6
   28ee8:	mov	r1, sl
   28eec:	mov	r2, r8
   28ef0:	mov	r3, #33	; 0x21
   28ef4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28ef8:	mov	sl, r0
   28efc:	mov	r0, sl
   28f00:	sub	sp, fp, #28
   28f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28f08:	ldr	r0, [r6]
   28f0c:	bl	2fd70 <flatcc_builder_end_table@@Base>
   28f10:	cmp	r0, #0
   28f14:	str	r0, [r4]
   28f18:	bne	28efc <main@@Base+0x13060>
   28f1c:	b	28ee4 <main@@Base+0x13048>
   28f20:	bne	28f30 <main@@Base+0x13094>
   28f24:	ldrb	r0, [sl, #2]!
   28f28:	cmp	r0, #32
   28f2c:	bhi	25d6c <main@@Base+0xfed0>
   28f30:	mov	r0, r6
   28f34:	mov	r2, r8
   28f38:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   28f3c:	b	25d68 <main@@Base+0xfecc>
   28f40:	mov	sl, r9
   28f44:	b	28ee4 <main@@Base+0x13048>
   28f48:	ldr	r8, [sp, #16]
   28f4c:	b	28f74 <main@@Base+0x130d8>
   28f50:	ldr	r8, [sp, #16]
   28f54:	b	28f60 <main@@Base+0x130c4>
   28f58:	ldr	r8, [sp, #16]
   28f5c:	ldr	r6, [sp, #24]
   28f60:	mov	r0, r6
   28f64:	mov	r1, sl
   28f68:	b	28f7c <main@@Base+0x130e0>
   28f6c:	ldr	r8, [sp, #16]
   28f70:	ldr	r6, [sp, #24]
   28f74:	mov	r0, r6
   28f78:	mov	r1, r9
   28f7c:	mov	r2, r8
   28f80:	mov	r3, #33	; 0x21
   28f84:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28f88:	mov	sl, r0
   28f8c:	b	28ee4 <main@@Base+0x13048>
   28f90:			; <UNDEFINED> instruction: 0x000338b8
   28f94:	muleq	r3, ip, fp
   28f98:	andeq	r3, r3, r8, lsl #30
   28f9c:	andeq	r3, r3, ip, ror r6
   28fa0:	andeq	r3, r3, r4, asr #20
   28fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28fa8:	add	fp, sp, #28
   28fac:	sub	sp, sp, #44	; 0x2c
   28fb0:	mov	sl, r0
   28fb4:	mov	r0, #0
   28fb8:	mov	r7, r1
   28fbc:	mov	r1, #10
   28fc0:	mov	r4, r3
   28fc4:	mov	r8, r2
   28fc8:	str	r0, [r3]
   28fcc:	ldr	r0, [sl]
   28fd0:	bl	2f340 <flatcc_builder_start_table@@Base>
   28fd4:	cmp	r0, #0
   28fd8:	beq	29000 <main@@Base+0x13164>
   28fdc:	mov	r0, sl
   28fe0:	mov	r1, r7
   28fe4:	mov	r2, r8
   28fe8:	mov	r3, #33	; 0x21
   28fec:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   28ff0:	mov	r7, r0
   28ff4:	mov	r0, r7
   28ff8:	sub	sp, fp, #28
   28ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29000:	sub	r0, fp, #32
   29004:	mov	r1, r7
   29008:	mov	r2, r8
   2900c:	mov	r3, #5
   29010:	str	r0, [sp]
   29014:	mov	r0, sl
   29018:	bl	36c44 <flatcc_json_parser_prepare_unions@@Base>
   2901c:	cmp	r0, r8
   29020:	beq	28fdc <main@@Base+0x13140>
   29024:	cmp	r7, r8
   29028:	beq	2905c <main@@Base+0x131c0>
   2902c:	ldrb	r0, [r7]
   29030:	cmp	r0, #123	; 0x7b
   29034:	bne	2905c <main@@Base+0x131c0>
   29038:	add	r1, r7, #1
   2903c:	sub	r0, r8, r1
   29040:	cmp	r0, #2
   29044:	blt	290c0 <main@@Base+0x13224>
   29048:	ldrb	r0, [r1]
   2904c:	cmp	r0, #32
   29050:	bls	290b0 <main@@Base+0x13214>
   29054:	mov	r7, r1
   29058:	b	290d0 <main@@Base+0x13234>
   2905c:	mov	r0, sl
   29060:	mov	r1, r7
   29064:	mov	r2, r8
   29068:	mov	r3, #21
   2906c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29070:	mov	r7, r0
   29074:	ldr	r0, [sl, #20]
   29078:	cmp	r0, #0
   2907c:	bne	28fdc <main@@Base+0x13140>
   29080:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29084:	mov	r0, sl
   29088:	mov	r1, r7
   2908c:	mov	r2, r8
   29090:	bl	36cd4 <flatcc_json_parser_finalize_unions@@Base>
   29094:	mov	r7, r0
   29098:	ldr	r0, [sl]
   2909c:	bl	2fd70 <flatcc_builder_end_table@@Base>
   290a0:	cmp	r0, #0
   290a4:	str	r0, [r4]
   290a8:	bne	28ff4 <main@@Base+0x13158>
   290ac:	b	28fdc <main@@Base+0x13140>
   290b0:	bne	290c0 <main@@Base+0x13224>
   290b4:	ldrb	r0, [r7, #2]!
   290b8:	cmp	r0, #32
   290bc:	bhi	290d0 <main@@Base+0x13234>
   290c0:	mov	r0, sl
   290c4:	mov	r2, r8
   290c8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   290cc:	mov	r7, r0
   290d0:	cmp	r7, r8
   290d4:	mov	r3, r8
   290d8:	beq	2911c <main@@Base+0x13280>
   290dc:	ldrb	r0, [r7]
   290e0:	cmp	r0, #125	; 0x7d
   290e4:	bne	29118 <main@@Base+0x1327c>
   290e8:	add	r1, r7, #1
   290ec:	sub	r0, r8, r1
   290f0:	cmp	r0, #2
   290f4:	blt	2a3e8 <main@@Base+0x1454c>
   290f8:	ldrb	r0, [r1]
   290fc:	cmp	r0, #32
   29100:	bhi	2a3ac <main@@Base+0x14510>
   29104:	bne	2a3e8 <main@@Base+0x1454c>
   29108:	ldrb	r0, [r7, #2]!
   2910c:	cmp	r0, #32
   29110:	bhi	29074 <main@@Base+0x131d8>
   29114:	b	2a3e8 <main@@Base+0x1454c>
   29118:	mov	r3, r7
   2911c:	movw	r0, #24436	; 0x5f74
   29120:	str	sl, [sp, #36]	; 0x24
   29124:	str	r4, [sp, #32]
   29128:	movt	r0, #29299	; 0x7273
   2912c:	add	r0, r0, #65536	; 0x10000
   29130:	add	r0, r0, #16777216	; 0x1000000
   29134:	str	r0, [sp, #24]
   29138:	cmp	r3, r8
   2913c:	mov	r9, r8
   29140:	beq	29170 <main@@Base+0x132d4>
   29144:	ldrb	r0, [r3]
   29148:	cmp	r0, #34	; 0x22
   2914c:	bne	29158 <main@@Base+0x132bc>
   29150:	add	r9, r3, #1
   29154:	b	29170 <main@@Base+0x132d4>
   29158:	mov	r1, r3
   2915c:	mov	r0, sl
   29160:	mov	r2, r8
   29164:	mov	r3, #5
   29168:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2916c:	mov	r9, r0
   29170:	sub	ip, r8, r9
   29174:	mov	r0, #8
   29178:	cmp	ip, #8
   2917c:	movcc	r0, ip
   29180:	and	r0, r0, #15
   29184:	sub	r0, r0, #1
   29188:	cmp	r0, #7
   2918c:	bhi	29a88 <main@@Base+0x13bec>
   29190:	add	r2, pc, #36	; 0x24
   29194:	mov	r1, #0
   29198:	mov	lr, #0
   2919c:	mov	r7, #0
   291a0:	mov	r6, #0
   291a4:	mov	r3, #0
   291a8:	mov	r5, #0
   291ac:	mov	r4, #0
   291b0:	ldr	sl, [r2, r0, lsl #2]
   291b4:	mov	r0, #0
   291b8:	add	pc, r2, sl
   291bc:	andeq	r0, r0, r4, rrx
   291c0:	andeq	r0, r0, ip, asr r0
   291c4:	andeq	r0, r0, r4, asr r0
   291c8:	andeq	r0, r0, ip, asr #32
   291cc:	andeq	r0, r0, r0, asr #32
   291d0:	andeq	r0, r0, r4, lsr r0
   291d4:	andeq	r0, r0, r4, lsr #32
   291d8:	andeq	r0, r0, r0, lsr #32
   291dc:	ldrb	lr, [r9, #7]
   291e0:	ldrb	r0, [r9, #6]
   291e4:	mov	r7, r1
   291e8:	orr	r0, lr, r0, lsl #8
   291ec:	mov	r1, r0
   291f0:	ldrb	r0, [r9, #5]
   291f4:	mov	r6, r7
   291f8:	orr	r1, r1, r0, lsl #16
   291fc:	ldrb	r0, [r9, #4]
   29200:	mov	r3, r6
   29204:	orr	r1, r1, r0, lsl #24
   29208:	ldrb	r0, [r9, #3]
   2920c:	orr	r5, r0, r3
   29210:	ldrb	r0, [r9, #2]
   29214:	orr	r4, r5, r0, lsl #8
   29218:	ldrb	r0, [r9, #1]
   2921c:	orr	r0, r4, r0, lsl #16
   29220:	ldrb	r2, [r9]
   29224:	orr	r2, r0, r2, lsl #24
   29228:	movw	r0, #29797	; 0x7465
   2922c:	movt	r0, #24931	; 0x6163
   29230:	subs	r0, r1, r0
   29234:	movw	r0, #24946	; 0x6172
   29238:	movt	r0, #25448	; 0x6368
   2923c:	sbcs	r0, r2, r0
   29240:	bcs	293a0 <main@@Base+0x13504>
   29244:	movw	r0, #29817	; 0x7479
   29248:	movw	r3, #28005	; 0x6d65
   2924c:	ldr	sl, [sp, #36]	; 0x24
   29250:	movt	r0, #28511	; 0x6f5f
   29254:	movt	r3, #25441	; 0x6361
   29258:	eor	r0, r1, r0
   2925c:	eor	r3, r2, r3
   29260:	orrs	r0, r0, r3
   29264:	beq	296b4 <main@@Base+0x13818>
   29268:	movw	r0, #28265	; 0x6e69
   2926c:	movw	r7, #29793	; 0x7461
   29270:	movt	r0, #26479	; 0x676f
   29274:	movt	r7, #24942	; 0x616e
   29278:	eor	r0, r1, r0
   2927c:	eor	r2, r2, r7
   29280:	orrs	r0, r0, r2
   29284:	bne	29740 <main@@Base+0x138a4>
   29288:	add	r4, r9, #8
   2928c:	mov	r1, #8
   29290:	sub	ip, r8, r4
   29294:	cmp	ip, #8
   29298:	movcc	r1, ip
   2929c:	and	r1, r1, #15
   292a0:	sub	r1, r1, #1
   292a4:	cmp	r1, #7
   292a8:	bhi	2a1d4 <main@@Base+0x14338>
   292ac:	str	r4, [sp, #28]
   292b0:	add	r0, pc, #32
   292b4:	mov	r7, #0
   292b8:	mov	lr, #0
   292bc:	mov	r3, #0
   292c0:	mov	r6, #0
   292c4:	mov	r4, #0
   292c8:	mov	r5, #0
   292cc:	ldr	r2, [r0, r1, lsl #2]
   292d0:	mov	r1, #0
   292d4:	add	pc, r0, r2
   292d8:	andeq	r0, r0, ip, asr r0
   292dc:	andeq	r0, r0, r4, asr r0
   292e0:	andeq	r0, r0, ip, asr #32
   292e4:	andeq	r0, r0, r4, asr #32
   292e8:	andeq	r0, r0, r8, lsr r0
   292ec:	andeq	r0, r0, r8, lsr #32
   292f0:	andeq	r0, r0, r0, lsr #32
   292f4:	andeq	r0, r0, r0, lsr #32
   292f8:	ldrb	r0, [r9, #14]
   292fc:	lsl	lr, r0, #8
   29300:	ldrb	r0, [r9, #13]
   29304:	mov	r1, r7
   29308:	orr	r0, lr, r0, lsl #16
   2930c:	mov	r7, r0
   29310:	ldrb	r0, [r9, #12]
   29314:	mov	r3, r1
   29318:	orr	r7, r7, r0, lsl #24
   2931c:	ldrb	r0, [r9, #11]
   29320:	orr	r6, r0, r3
   29324:	ldrb	r0, [r9, #10]
   29328:	orr	r4, r6, r0, lsl #8
   2932c:	ldrb	r0, [r9, #9]
   29330:	orr	r5, r4, r0, lsl #16
   29334:	ldr	r4, [sp, #28]
   29338:	movw	r3, #25856	; 0x6500
   2933c:	bic	r2, r7, #255	; 0xff
   29340:	movt	r3, #31088	; 0x7970
   29344:	eor	r2, r2, r3
   29348:	ldrb	r0, [r4]
   2934c:	orr	r1, r5, r0, lsl #24
   29350:	ldr	r0, [sp, #24]
   29354:	eor	r0, r1, r0
   29358:	orrs	r0, r2, r0
   2935c:	bne	2989c <main@@Base+0x13a00>
   29360:	cmp	ip, #8
   29364:	blt	2a1d4 <main@@Base+0x14338>
   29368:	ldrb	r0, [r9, #15]
   2936c:	cmp	r0, #34	; 0x22
   29370:	bne	2a1d4 <main@@Base+0x14338>
   29374:	add	r1, r9, #16
   29378:	sub	r0, r8, r1
   2937c:	cmp	r0, #2
   29380:	blt	29ab8 <main@@Base+0x13c1c>
   29384:	ldrb	r0, [r1]
   29388:	cmp	r0, #32
   2938c:	bls	29aa8 <main@@Base+0x13c0c>
   29390:	mov	r9, r1
   29394:	cmp	r9, r8
   29398:	bne	29ad0 <main@@Base+0x13c34>
   2939c:	b	29b08 <main@@Base+0x13c6c>
   293a0:	movw	r0, #26720	; 0x6860
   293a4:	ldr	sl, [sp, #36]	; 0x24
   293a8:	movt	r0, #24419	; 0x5f63
   293ac:	subs	r0, r0, r1
   293b0:	movw	r0, #26990	; 0x696e
   293b4:	movt	r0, #28001	; 0x6d61
   293b8:	sbcs	r0, r0, r2
   293bc:	bcc	294fc <main@@Base+0x13660>
   293c0:	movw	r0, #29797	; 0x7465
   293c4:	movt	r0, #24931	; 0x6163
   293c8:	eor	r0, r1, r0
   293cc:	movw	r1, #24946	; 0x6172
   293d0:	movt	r1, #25448	; 0x6368
   293d4:	eor	r1, r2, r1
   293d8:	orrs	r0, r0, r1
   293dc:	bne	29a88 <main@@Base+0x13bec>
   293e0:	add	r4, r9, #8
   293e4:	mov	r1, #8
   293e8:	sub	ip, r8, r4
   293ec:	cmp	ip, #8
   293f0:	movcc	r1, ip
   293f4:	and	r1, r1, #15
   293f8:	sub	r2, r1, #1
   293fc:	cmp	r2, #7
   29400:	bhi	2a1d4 <main@@Base+0x14338>
   29404:	str	r4, [sp, #28]
   29408:	add	r0, pc, #32
   2940c:	mov	r1, #0
   29410:	mov	lr, #0
   29414:	mov	r7, #0
   29418:	mov	r3, #0
   2941c:	mov	r6, #0
   29420:	mov	r4, #0
   29424:	mov	r5, #0
   29428:	ldr	r2, [r0, r2, lsl #2]
   2942c:	add	pc, r0, r2
   29430:	andeq	r0, r0, ip, asr r0
   29434:	andeq	r0, r0, r4, asr r0
   29438:	andeq	r0, r0, ip, asr #32
   2943c:	andeq	r0, r0, r4, asr #32
   29440:	andeq	r0, r0, r8, lsr r0
   29444:	andeq	r0, r0, r8, lsr #32
   29448:	andeq	r0, r0, r0, lsr #32
   2944c:	andeq	r0, r0, r0, lsr #32
   29450:	ldrb	r0, [r9, #14]
   29454:	lsl	lr, r0, #8
   29458:	ldrb	r0, [r9, #13]
   2945c:	mov	r7, r1
   29460:	orr	r0, lr, r0, lsl #16
   29464:	mov	r1, r0
   29468:	ldrb	r0, [r9, #12]
   2946c:	mov	r3, r7
   29470:	orr	r1, r1, r0, lsl #24
   29474:	ldrb	r0, [r9, #11]
   29478:	orr	r6, r0, r3
   2947c:	ldrb	r0, [r9, #10]
   29480:	orr	r4, r6, r0, lsl #8
   29484:	ldrb	r0, [r9, #9]
   29488:	orr	r5, r4, r0, lsl #16
   2948c:	ldr	r4, [sp, #28]
   29490:	bic	r0, r1, #255	; 0xff
   29494:	movw	r1, #25856	; 0x6500
   29498:	movw	r2, #24436	; 0x5f74
   2949c:	movt	r1, #31088	; 0x7970
   294a0:	movt	r2, #29299	; 0x7273
   294a4:	eor	r0, r0, r1
   294a8:	ldrb	r1, [r4]
   294ac:	orr	r1, r5, r1, lsl #24
   294b0:	eor	r2, r1, r2
   294b4:	orrs	r0, r0, r2
   294b8:	bne	298f0 <main@@Base+0x13a54>
   294bc:	cmp	ip, #8
   294c0:	blt	2a1d4 <main@@Base+0x14338>
   294c4:	ldrb	r0, [r9, #15]
   294c8:	cmp	r0, #34	; 0x22
   294cc:	bne	2a1d4 <main@@Base+0x14338>
   294d0:	add	r1, r9, #16
   294d4:	sub	r0, r8, r1
   294d8:	cmp	r0, #2
   294dc:	blt	29bb0 <main@@Base+0x13d14>
   294e0:	ldrb	r0, [r1]
   294e4:	cmp	r0, #32
   294e8:	bls	29ba0 <main@@Base+0x13d04>
   294ec:	mov	r9, r1
   294f0:	cmp	r9, r8
   294f4:	bne	29bc8 <main@@Base+0x13d2c>
   294f8:	b	29c00 <main@@Base+0x13d64>
   294fc:	movw	r0, #26979	; 0x6963
   29500:	movw	r3, #25701	; 0x6465
   29504:	movt	r0, #24427	; 0x5f6b
   29508:	movt	r3, #29545	; 0x7369
   2950c:	eor	r0, r1, r0
   29510:	eor	r3, r2, r3
   29514:	orrs	r0, r0, r3
   29518:	beq	29798 <main@@Base+0x138fc>
   2951c:	movw	r0, #26721	; 0x6861
   29520:	movt	r0, #24419	; 0x5f63
   29524:	eor	r0, r1, r0
   29528:	movw	r1, #26990	; 0x696e
   2952c:	movt	r1, #28001	; 0x6d61
   29530:	eor	r1, r2, r1
   29534:	orrs	r0, r0, r1
   29538:	bne	29a88 <main@@Base+0x13bec>
   2953c:	add	r4, r9, #8
   29540:	mov	r1, #8
   29544:	sub	lr, r8, r4
   29548:	cmp	lr, #8
   2954c:	movcc	r1, lr
   29550:	and	r1, r1, #15
   29554:	sub	r2, r1, #1
   29558:	cmp	r2, #7
   2955c:	bhi	2a1d4 <main@@Base+0x14338>
   29560:	str	r4, [sp, #28]
   29564:	add	r0, pc, #36	; 0x24
   29568:	mov	r1, #0
   2956c:	mov	ip, #0
   29570:	mov	sl, #0
   29574:	mov	r6, #0
   29578:	mov	r3, #0
   2957c:	mov	r5, #0
   29580:	mov	r4, #0
   29584:	ldr	r7, [r0, r2, lsl #2]
   29588:	mov	r2, #0
   2958c:	add	pc, r0, r7
   29590:	andeq	r0, r0, r4, rrx
   29594:	andeq	r0, r0, ip, asr r0
   29598:	andeq	r0, r0, r4, asr r0
   2959c:	andeq	r0, r0, ip, asr #32
   295a0:	andeq	r0, r0, r0, asr #32
   295a4:	andeq	r0, r0, r4, lsr r0
   295a8:	andeq	r0, r0, r4, lsr #32
   295ac:	andeq	r0, r0, r0, lsr #32
   295b0:	ldrb	ip, [r9, #15]
   295b4:	ldrb	r0, [r9, #14]
   295b8:	mov	sl, r1
   295bc:	orr	r0, ip, r0, lsl #8
   295c0:	mov	r1, r0
   295c4:	ldrb	r0, [r9, #13]
   295c8:	mov	r6, sl
   295cc:	orr	r1, r1, r0, lsl #16
   295d0:	ldrb	r0, [r9, #12]
   295d4:	mov	r3, r6
   295d8:	orr	r1, r1, r0, lsl #24
   295dc:	ldrb	r0, [r9, #11]
   295e0:	orr	r5, r0, r3
   295e4:	ldrb	r0, [r9, #10]
   295e8:	orr	r4, r5, r0, lsl #8
   295ec:	ldrb	r0, [r9, #9]
   295f0:	orr	r2, r4, r0, lsl #16
   295f4:	ldr	r4, [sp, #28]
   295f8:	movw	r0, #24436	; 0x5f74
   295fc:	movt	r0, #25970	; 0x6572
   29600:	eor	r0, r1, r0
   29604:	ldrb	r3, [r4]
   29608:	orr	r2, r2, r3, lsl #24
   2960c:	movw	r3, #25460	; 0x6374
   29610:	movt	r3, #29281	; 0x7261
   29614:	eor	r3, r2, r3
   29618:	orrs	r0, r0, r3
   2961c:	bne	29944 <main@@Base+0x13aa8>
   29620:	add	r5, r9, #16
   29624:	mov	r1, #8
   29628:	ldr	sl, [sp, #36]	; 0x24
   2962c:	sub	r0, r8, r5
   29630:	cmp	r0, #8
   29634:	movcc	r1, r0
   29638:	and	r2, r1, #15
   2963c:	sub	r1, r2, #3
   29640:	cmp	r1, #6
   29644:	bcs	29a0c <main@@Base+0x13b70>
   29648:	ldrb	r1, [r9, #18]
   2964c:	lsl	r1, r1, #8
   29650:	ldrb	r2, [r9, #17]
   29654:	orr	r1, r1, r2, lsl #16
   29658:	ldrb	r2, [r5]
   2965c:	bic	r1, r1, #255	; 0xff
   29660:	orr	r1, r1, r2, lsl #24
   29664:	movw	r2, #25856	; 0x6500
   29668:	movt	r2, #31088	; 0x7970
   2966c:	teq	r1, r2
   29670:	bne	2a054 <main@@Base+0x141b8>
   29674:	cmp	r0, #4
   29678:	blt	2a054 <main@@Base+0x141b8>
   2967c:	ldrb	r0, [r9, #19]
   29680:	cmp	r0, #34	; 0x22
   29684:	bne	2a054 <main@@Base+0x141b8>
   29688:	add	r1, r9, #20
   2968c:	sub	r0, r8, r1
   29690:	cmp	r0, #2
   29694:	blt	2a008 <main@@Base+0x1416c>
   29698:	ldrb	r0, [r1]
   2969c:	cmp	r0, #32
   296a0:	bls	29ff8 <main@@Base+0x1415c>
   296a4:	mov	r9, r1
   296a8:	cmp	r9, r8
   296ac:	bne	2a020 <main@@Base+0x14184>
   296b0:	b	2a060 <main@@Base+0x141c4>
   296b4:	add	r6, r9, #8
   296b8:	mov	r1, #8
   296bc:	sub	r0, r8, r6
   296c0:	cmp	r0, #8
   296c4:	movcc	r1, r0
   296c8:	and	r2, r1, #15
   296cc:	sub	r1, r2, #2
   296d0:	cmp	r1, #7
   296d4:	bcs	299ac <main@@Base+0x13b10>
   296d8:	ldrb	r1, [r9, #9]
   296dc:	lsl	r2, r1, #16
   296e0:	mov	r1, #0
   296e4:	ldrb	r3, [r6]
   296e8:	orr	r2, r2, r3, lsl #24
   296ec:	movw	r3, #0
   296f0:	movt	r3, #28773	; 0x7065
   296f4:	eor	r2, r2, r3
   296f8:	orrs	r1, r1, r2
   296fc:	bne	29b7c <main@@Base+0x13ce0>
   29700:	cmp	r0, #3
   29704:	blt	29b7c <main@@Base+0x13ce0>
   29708:	ldrb	r0, [r9, #10]
   2970c:	cmp	r0, #34	; 0x22
   29710:	bne	29b7c <main@@Base+0x13ce0>
   29714:	add	r1, r9, #11
   29718:	sub	r0, r8, r1
   2971c:	cmp	r0, #2
   29720:	blt	29b30 <main@@Base+0x13c94>
   29724:	ldrb	r0, [r1]
   29728:	cmp	r0, #32
   2972c:	bls	29b20 <main@@Base+0x13c84>
   29730:	mov	r9, r1
   29734:	cmp	r9, r8
   29738:	bne	29b48 <main@@Base+0x13cac>
   2973c:	b	29b88 <main@@Base+0x13cec>
   29740:	and	r0, r1, #-16777216	; 0xff000000
   29744:	eor	r0, r0, #1862270976	; 0x6f000000
   29748:	orrs	r0, r0, r3
   2974c:	bne	29a88 <main@@Base+0x13bec>
   29750:	cmp	ip, #6
   29754:	mov	r1, r9
   29758:	blt	29da4 <main@@Base+0x13f08>
   2975c:	ldrb	r0, [r9, #5]
   29760:	mov	r1, r9
   29764:	cmp	r0, #34	; 0x22
   29768:	bne	29da4 <main@@Base+0x13f08>
   2976c:	add	r2, r9, #6
   29770:	sub	r0, r8, r2
   29774:	cmp	r0, #2
   29778:	blt	29a38 <main@@Base+0x13b9c>
   2977c:	ldrb	r0, [r2]
   29780:	cmp	r0, #32
   29784:	bls	29a24 <main@@Base+0x13b88>
   29788:	mov	r1, r2
   2978c:	cmp	r1, r8
   29790:	bne	29a54 <main@@Base+0x13bb8>
   29794:	b	29a94 <main@@Base+0x13bf8>
   29798:	add	sl, r9, #8
   2979c:	mov	r1, #8
   297a0:	sub	r0, r8, sl
   297a4:	cmp	r0, #8
   297a8:	movcc	r1, r0
   297ac:	and	r1, r1, #15
   297b0:	sub	r2, r1, #1
   297b4:	cmp	r2, #7
   297b8:	bhi	2a308 <main@@Base+0x1446c>
   297bc:	add	r5, pc, #28
   297c0:	mov	ip, #0
   297c4:	mov	r3, #0
   297c8:	mov	r6, #0
   297cc:	mov	r7, #0
   297d0:	mov	r4, #0
   297d4:	ldr	r1, [r5, r2, lsl #2]
   297d8:	mov	r2, #0
   297dc:	add	pc, r5, r1
   297e0:	andeq	r0, r0, r0, asr r0
   297e4:	andeq	r0, r0, r8, asr #32
   297e8:	andeq	r0, r0, r0, asr #32
   297ec:	andeq	r0, r0, r8, lsr r0
   297f0:	andeq	r0, r0, r8, lsr #32
   297f4:	andeq	r0, r0, r0, lsr #32
   297f8:	andeq	r0, r0, r0, lsr #32
   297fc:	andeq	r0, r0, r0, lsr #32
   29800:	ldrb	r1, [r9, #13]
   29804:	lsl	r2, r1, #16
   29808:	ldrb	r1, [r9, #12]
   2980c:	mov	r3, ip
   29810:	orr	r1, r2, r1, lsl #24
   29814:	mov	ip, r1
   29818:	ldrb	r1, [r9, #11]
   2981c:	orr	r6, r1, r3
   29820:	ldrb	r1, [r9, #10]
   29824:	orr	r7, r6, r1, lsl #8
   29828:	ldrb	r1, [r9, #9]
   2982c:	orr	r4, r7, r1, lsl #16
   29830:	ldrb	r1, [sl]
   29834:	movw	r7, #28773	; 0x7065
   29838:	lsr	r3, ip, #16
   2983c:	movt	r7, #29817	; 0x7479
   29840:	orr	r2, r4, r1, lsl #24
   29844:	movw	r1, #27487	; 0x6b5f
   29848:	orr	r3, r3, r2, lsl #16
   2984c:	eor	r1, r1, r2, lsr #16
   29850:	eor	r3, r3, r7
   29854:	orrs	r1, r3, r1
   29858:	bne	299c0 <main@@Base+0x13b24>
   2985c:	cmp	r0, #7
   29860:	blt	2a308 <main@@Base+0x1446c>
   29864:	ldrb	r0, [r9, #14]
   29868:	cmp	r0, #34	; 0x22
   2986c:	bne	2a308 <main@@Base+0x1446c>
   29870:	add	r1, r9, #15
   29874:	sub	r0, r8, r1
   29878:	cmp	r0, #2
   2987c:	blt	29c28 <main@@Base+0x13d8c>
   29880:	ldrb	r0, [r1]
   29884:	cmp	r0, #32
   29888:	bls	29c18 <main@@Base+0x13d7c>
   2988c:	mov	r9, r1
   29890:	cmp	r9, r8
   29894:	bne	29c40 <main@@Base+0x13da4>
   29898:	b	29c78 <main@@Base+0x13ddc>
   2989c:	movw	r0, #0
   298a0:	bfc	r1, #0, #16
   298a4:	movt	r0, #29556	; 0x7374
   298a8:	teq	r1, r0
   298ac:	bne	2a1d4 <main@@Base+0x14338>
   298b0:	cmp	ip, #3
   298b4:	blt	2a1d4 <main@@Base+0x14338>
   298b8:	ldrb	r0, [r9, #10]
   298bc:	cmp	r0, #34	; 0x22
   298c0:	bne	2a1d4 <main@@Base+0x14338>
   298c4:	add	r1, r9, #11
   298c8:	sub	r0, r8, r1
   298cc:	cmp	r0, #2
   298d0:	blt	29ca0 <main@@Base+0x13e04>
   298d4:	ldrb	r0, [r1]
   298d8:	cmp	r0, #32
   298dc:	bls	29c90 <main@@Base+0x13df4>
   298e0:	mov	r9, r1
   298e4:	cmp	r9, r8
   298e8:	bne	29cb8 <main@@Base+0x13e1c>
   298ec:	b	29cf0 <main@@Base+0x13e54>
   298f0:	movw	r0, #0
   298f4:	bfc	r1, #0, #16
   298f8:	movt	r0, #29299	; 0x7273
   298fc:	teq	r1, r0
   29900:	bne	2a1d4 <main@@Base+0x14338>
   29904:	cmp	ip, #3
   29908:	blt	2a1d4 <main@@Base+0x14338>
   2990c:	ldrb	r0, [r9, #10]
   29910:	cmp	r0, #34	; 0x22
   29914:	bne	2a1d4 <main@@Base+0x14338>
   29918:	add	r1, r9, #11
   2991c:	sub	r0, r8, r1
   29920:	cmp	r0, #2
   29924:	blt	29d18 <main@@Base+0x13e7c>
   29928:	ldrb	r0, [r1]
   2992c:	cmp	r0, #32
   29930:	bls	29d08 <main@@Base+0x13e6c>
   29934:	mov	r9, r1
   29938:	cmp	r9, r8
   2993c:	bne	29d30 <main@@Base+0x13e94>
   29940:	b	29d68 <main@@Base+0x13ecc>
   29944:	movw	r0, #29281	; 0x7261
   29948:	lsr	r1, r1, #16
   2994c:	ldr	sl, [sp, #36]	; 0x24
   29950:	eor	r0, r0, r2, lsr #16
   29954:	orr	r1, r1, r2, lsl #16
   29958:	movw	r2, #25970	; 0x6572
   2995c:	movt	r2, #25460	; 0x6374
   29960:	eor	r1, r1, r2
   29964:	orrs	r0, r1, r0
   29968:	bne	2a1d4 <main@@Base+0x14338>
   2996c:	cmp	lr, #7
   29970:	blt	2a1d4 <main@@Base+0x14338>
   29974:	ldrb	r0, [r9, #14]
   29978:	cmp	r0, #34	; 0x22
   2997c:	bne	2a1d4 <main@@Base+0x14338>
   29980:	add	r1, r9, #15
   29984:	sub	r0, r8, r1
   29988:	cmp	r0, #2
   2998c:	blt	29ea4 <main@@Base+0x14008>
   29990:	ldrb	r0, [r1]
   29994:	cmp	r0, #32
   29998:	bls	29e94 <main@@Base+0x13ff8>
   2999c:	mov	r9, r1
   299a0:	cmp	r9, r8
   299a4:	bne	29ebc <main@@Base+0x14020>
   299a8:	b	29ef4 <main@@Base+0x14058>
   299ac:	cmp	r2, #1
   299b0:	mov	r1, #0
   299b4:	mov	r2, #0
   299b8:	beq	296e4 <main@@Base+0x13848>
   299bc:	b	29b7c <main@@Base+0x13ce0>
   299c0:	and	r1, r2, #-16777216	; 0xff000000
   299c4:	teq	r1, #1795162112	; 0x6b000000
   299c8:	bne	2a308 <main@@Base+0x1446c>
   299cc:	cmp	r0, #2
   299d0:	blt	2a308 <main@@Base+0x1446c>
   299d4:	ldrb	r0, [r9, #9]
   299d8:	cmp	r0, #34	; 0x22
   299dc:	bne	2a308 <main@@Base+0x1446c>
   299e0:	add	r1, r9, #10
   299e4:	sub	r0, r8, r1
   299e8:	cmp	r0, #2
   299ec:	blt	29f1c <main@@Base+0x14080>
   299f0:	ldrb	r0, [r1]
   299f4:	cmp	r0, #32
   299f8:	bls	29f0c <main@@Base+0x14070>
   299fc:	mov	r9, r1
   29a00:	cmp	r9, r8
   29a04:	bne	29f34 <main@@Base+0x14098>
   29a08:	b	29f6c <main@@Base+0x140d0>
   29a0c:	mov	r1, #0
   29a10:	cmp	r2, #1
   29a14:	beq	29658 <main@@Base+0x137bc>
   29a18:	cmp	r2, #2
   29a1c:	beq	29650 <main@@Base+0x137b4>
   29a20:	b	2a054 <main@@Base+0x141b8>
   29a24:	bne	29a38 <main@@Base+0x13b9c>
   29a28:	mov	r1, r9
   29a2c:	ldrb	r0, [r1, #7]!
   29a30:	cmp	r0, #32
   29a34:	bhi	29a4c <main@@Base+0x13bb0>
   29a38:	mov	r1, r2
   29a3c:	mov	r0, sl
   29a40:	mov	r2, r8
   29a44:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29a48:	mov	r1, r0
   29a4c:	cmp	r1, r8
   29a50:	beq	29a94 <main@@Base+0x13bf8>
   29a54:	ldrb	r0, [r1]
   29a58:	cmp	r0, #58	; 0x3a
   29a5c:	bne	29a94 <main@@Base+0x13bf8>
   29a60:	add	r2, r1, #1
   29a64:	sub	r0, r8, r2
   29a68:	cmp	r0, #2
   29a6c:	blt	29d90 <main@@Base+0x13ef4>
   29a70:	ldrb	r0, [r2]
   29a74:	cmp	r0, #32
   29a78:	bls	29d80 <main@@Base+0x13ee4>
   29a7c:	mov	r1, r2
   29a80:	cmp	r9, r1
   29a84:	bne	29dac <main@@Base+0x13f10>
   29a88:	mov	r0, sl
   29a8c:	mov	r1, r9
   29a90:	b	2a1dc <main@@Base+0x14340>
   29a94:	mov	r0, sl
   29a98:	mov	r2, r8
   29a9c:	mov	r3, #4
   29aa0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29aa4:	b	29da0 <main@@Base+0x13f04>
   29aa8:	bne	29ab8 <main@@Base+0x13c1c>
   29aac:	ldrb	r0, [r9, #17]!
   29ab0:	cmp	r0, #32
   29ab4:	bhi	29ac8 <main@@Base+0x13c2c>
   29ab8:	mov	r0, sl
   29abc:	mov	r2, r8
   29ac0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29ac4:	mov	r9, r0
   29ac8:	cmp	r9, r8
   29acc:	beq	29b08 <main@@Base+0x13c6c>
   29ad0:	ldrb	r0, [r9]
   29ad4:	cmp	r0, #58	; 0x3a
   29ad8:	bne	29b08 <main@@Base+0x13c6c>
   29adc:	add	r1, r9, #1
   29ae0:	sub	r0, r8, r1
   29ae4:	cmp	r0, #2
   29ae8:	blt	29dec <main@@Base+0x13f50>
   29aec:	ldrb	r0, [r1]
   29af0:	cmp	r0, #32
   29af4:	bls	29ddc <main@@Base+0x13f40>
   29af8:	mov	r9, r1
   29afc:	cmp	r4, r9
   29b00:	bne	29e04 <main@@Base+0x13f68>
   29b04:	b	2a1d4 <main@@Base+0x14338>
   29b08:	mov	r0, sl
   29b0c:	mov	r1, r9
   29b10:	mov	r2, r8
   29b14:	mov	r3, #4
   29b18:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29b1c:	b	29df8 <main@@Base+0x13f5c>
   29b20:	bne	29b30 <main@@Base+0x13c94>
   29b24:	ldrb	r0, [r9, #12]!
   29b28:	cmp	r0, #32
   29b2c:	bhi	29b40 <main@@Base+0x13ca4>
   29b30:	mov	r0, sl
   29b34:	mov	r2, r8
   29b38:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29b3c:	mov	r9, r0
   29b40:	cmp	r9, r8
   29b44:	beq	29b88 <main@@Base+0x13cec>
   29b48:	ldrb	r0, [r9]
   29b4c:	cmp	r0, #58	; 0x3a
   29b50:	bne	29b88 <main@@Base+0x13cec>
   29b54:	add	r1, r9, #1
   29b58:	sub	r0, r8, r1
   29b5c:	cmp	r0, #2
   29b60:	blt	29e48 <main@@Base+0x13fac>
   29b64:	ldrb	r0, [r1]
   29b68:	cmp	r0, #32
   29b6c:	bls	29e38 <main@@Base+0x13f9c>
   29b70:	mov	r9, r1
   29b74:	cmp	r6, r9
   29b78:	bne	29e60 <main@@Base+0x13fc4>
   29b7c:	mov	r0, sl
   29b80:	mov	r1, r6
   29b84:	b	2a1dc <main@@Base+0x14340>
   29b88:	mov	r0, sl
   29b8c:	mov	r1, r9
   29b90:	mov	r2, r8
   29b94:	mov	r3, #4
   29b98:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29b9c:	b	29e54 <main@@Base+0x13fb8>
   29ba0:	bne	29bb0 <main@@Base+0x13d14>
   29ba4:	ldrb	r0, [r9, #17]!
   29ba8:	cmp	r0, #32
   29bac:	bhi	29bc0 <main@@Base+0x13d24>
   29bb0:	mov	r0, sl
   29bb4:	mov	r2, r8
   29bb8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29bbc:	mov	r9, r0
   29bc0:	cmp	r9, r8
   29bc4:	beq	29c00 <main@@Base+0x13d64>
   29bc8:	ldrb	r0, [r9]
   29bcc:	cmp	r0, #58	; 0x3a
   29bd0:	bne	29c00 <main@@Base+0x13d64>
   29bd4:	add	r1, r9, #1
   29bd8:	sub	r0, r8, r1
   29bdc:	cmp	r0, #2
   29be0:	blt	29f94 <main@@Base+0x140f8>
   29be4:	ldrb	r0, [r1]
   29be8:	cmp	r0, #32
   29bec:	bls	29f84 <main@@Base+0x140e8>
   29bf0:	mov	r9, r1
   29bf4:	cmp	r4, r9
   29bf8:	bne	29fac <main@@Base+0x14110>
   29bfc:	b	2a1d4 <main@@Base+0x14338>
   29c00:	mov	r0, sl
   29c04:	mov	r1, r9
   29c08:	mov	r2, r8
   29c0c:	mov	r3, #4
   29c10:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29c14:	b	29fa0 <main@@Base+0x14104>
   29c18:	bne	29c28 <main@@Base+0x13d8c>
   29c1c:	ldrb	r0, [r9, #16]!
   29c20:	cmp	r0, #32
   29c24:	bhi	29c38 <main@@Base+0x13d9c>
   29c28:	ldr	r0, [sp, #36]	; 0x24
   29c2c:	mov	r2, r8
   29c30:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29c34:	mov	r9, r0
   29c38:	cmp	r9, r8
   29c3c:	beq	29c78 <main@@Base+0x13ddc>
   29c40:	ldrb	r0, [r9]
   29c44:	cmp	r0, #58	; 0x3a
   29c48:	bne	29c78 <main@@Base+0x13ddc>
   29c4c:	add	r1, r9, #1
   29c50:	sub	r0, r8, r1
   29c54:	cmp	r0, #2
   29c58:	blt	2a0d8 <main@@Base+0x1423c>
   29c5c:	ldrb	r0, [r1]
   29c60:	cmp	r0, #32
   29c64:	bls	2a0c8 <main@@Base+0x1422c>
   29c68:	mov	r9, r1
   29c6c:	cmp	sl, r9
   29c70:	bne	2a0f0 <main@@Base+0x14254>
   29c74:	b	2a308 <main@@Base+0x1446c>
   29c78:	ldr	r0, [sp, #36]	; 0x24
   29c7c:	mov	r1, r9
   29c80:	mov	r2, r8
   29c84:	mov	r3, #4
   29c88:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29c8c:	b	2a0e4 <main@@Base+0x14248>
   29c90:	bne	29ca0 <main@@Base+0x13e04>
   29c94:	ldrb	r0, [r9, #12]!
   29c98:	cmp	r0, #32
   29c9c:	bhi	29cb0 <main@@Base+0x13e14>
   29ca0:	mov	r0, sl
   29ca4:	mov	r2, r8
   29ca8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29cac:	mov	r9, r0
   29cb0:	cmp	r9, r8
   29cb4:	beq	29cf0 <main@@Base+0x13e54>
   29cb8:	ldrb	r0, [r9]
   29cbc:	cmp	r0, #58	; 0x3a
   29cc0:	bne	29cf0 <main@@Base+0x13e54>
   29cc4:	add	r1, r9, #1
   29cc8:	sub	r0, r8, r1
   29ccc:	cmp	r0, #2
   29cd0:	blt	2a088 <main@@Base+0x141ec>
   29cd4:	ldrb	r0, [r1]
   29cd8:	cmp	r0, #32
   29cdc:	bls	2a078 <main@@Base+0x141dc>
   29ce0:	mov	r9, r1
   29ce4:	cmp	r4, r9
   29ce8:	bne	2a0a0 <main@@Base+0x14204>
   29cec:	b	2a1d4 <main@@Base+0x14338>
   29cf0:	mov	r0, sl
   29cf4:	mov	r1, r9
   29cf8:	mov	r2, r8
   29cfc:	mov	r3, #4
   29d00:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29d04:	b	2a094 <main@@Base+0x141f8>
   29d08:	bne	29d18 <main@@Base+0x13e7c>
   29d0c:	ldrb	r0, [r9, #12]!
   29d10:	cmp	r0, #32
   29d14:	bhi	29d28 <main@@Base+0x13e8c>
   29d18:	mov	r0, sl
   29d1c:	mov	r2, r8
   29d20:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29d24:	mov	r9, r0
   29d28:	cmp	r9, r8
   29d2c:	beq	29d68 <main@@Base+0x13ecc>
   29d30:	ldrb	r0, [r9]
   29d34:	cmp	r0, #58	; 0x3a
   29d38:	bne	29d68 <main@@Base+0x13ecc>
   29d3c:	add	r1, r9, #1
   29d40:	sub	r0, r8, r1
   29d44:	cmp	r0, #2
   29d48:	blt	2a138 <main@@Base+0x1429c>
   29d4c:	ldrb	r0, [r1]
   29d50:	cmp	r0, #32
   29d54:	bls	2a128 <main@@Base+0x1428c>
   29d58:	mov	r9, r1
   29d5c:	cmp	r4, r9
   29d60:	bne	2a150 <main@@Base+0x142b4>
   29d64:	b	2a1d4 <main@@Base+0x14338>
   29d68:	mov	r0, sl
   29d6c:	mov	r1, r9
   29d70:	mov	r2, r8
   29d74:	mov	r3, #4
   29d78:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29d7c:	b	2a144 <main@@Base+0x142a8>
   29d80:	bne	29d90 <main@@Base+0x13ef4>
   29d84:	ldrb	r0, [r1, #2]!
   29d88:	cmp	r0, #32
   29d8c:	bhi	29da4 <main@@Base+0x13f08>
   29d90:	mov	r1, r2
   29d94:	mov	r0, sl
   29d98:	mov	r2, r8
   29d9c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29da0:	mov	r1, r0
   29da4:	cmp	r9, r1
   29da8:	beq	29a88 <main@@Base+0x13bec>
   29dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29db0:	mov	r2, #7
   29db4:	mov	r3, #3
   29db8:	str	r2, [sp]
   29dbc:	mov	r2, r8
   29dc0:	str	r0, [sp, #4]
   29dc4:	ldr	r0, [pc, #1600]	; 2a40c <main@@Base+0x14570>
   29dc8:	add	r0, pc, r0
   29dcc:	str	r0, [sp, #8]
   29dd0:	mov	r0, sl
   29dd4:	bl	36d48 <flatcc_json_parser_union@@Base>
   29dd8:	b	2a1e4 <main@@Base+0x14348>
   29ddc:	bne	29dec <main@@Base+0x13f50>
   29de0:	ldrb	r0, [r9, #2]!
   29de4:	cmp	r0, #32
   29de8:	bhi	29dfc <main@@Base+0x13f60>
   29dec:	mov	r0, sl
   29df0:	mov	r2, r8
   29df4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29df8:	mov	r9, r0
   29dfc:	cmp	r4, r9
   29e00:	beq	2a1d4 <main@@Base+0x14338>
   29e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e08:	mov	r1, #3
   29e0c:	mov	r2, r8
   29e10:	mov	r3, #1
   29e14:	str	r1, [sp]
   29e18:	mov	r1, r9
   29e1c:	str	r0, [sp, #4]
   29e20:	ldr	r0, [pc, #1488]	; 2a3f8 <main@@Base+0x1455c>
   29e24:	add	r0, pc, r0
   29e28:	str	r0, [sp, #8]
   29e2c:	ldr	r0, [pc, #1480]	; 2a3fc <main@@Base+0x14560>
   29e30:	add	r0, pc, r0
   29e34:	b	2a370 <main@@Base+0x144d4>
   29e38:	bne	29e48 <main@@Base+0x13fac>
   29e3c:	ldrb	r0, [r9, #2]!
   29e40:	cmp	r0, #32
   29e44:	bhi	29e58 <main@@Base+0x13fbc>
   29e48:	mov	r0, sl
   29e4c:	mov	r2, r8
   29e50:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29e54:	mov	r9, r0
   29e58:	cmp	r6, r9
   29e5c:	beq	29b7c <main@@Base+0x13ce0>
   29e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e64:	mov	r1, #7
   29e68:	mov	r2, r8
   29e6c:	mov	r3, #3
   29e70:	str	r1, [sp]
   29e74:	mov	r1, r9
   29e78:	str	r0, [sp, #4]
   29e7c:	ldr	r0, [pc, #1408]	; 2a404 <main@@Base+0x14568>
   29e80:	add	r0, pc, r0
   29e84:	str	r0, [sp, #8]
   29e88:	ldr	r0, [pc, #1400]	; 2a408 <main@@Base+0x1456c>
   29e8c:	add	r0, pc, r0
   29e90:	b	2a370 <main@@Base+0x144d4>
   29e94:	bne	29ea4 <main@@Base+0x14008>
   29e98:	ldrb	r0, [r9, #16]!
   29e9c:	cmp	r0, #32
   29ea0:	bhi	29eb4 <main@@Base+0x14018>
   29ea4:	mov	r0, sl
   29ea8:	mov	r2, r8
   29eac:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29eb0:	mov	r9, r0
   29eb4:	cmp	r9, r8
   29eb8:	beq	29ef4 <main@@Base+0x14058>
   29ebc:	ldrb	r0, [r9]
   29ec0:	cmp	r0, #58	; 0x3a
   29ec4:	bne	29ef4 <main@@Base+0x14058>
   29ec8:	add	r1, r9, #1
   29ecc:	sub	r0, r8, r1
   29ed0:	cmp	r0, #2
   29ed4:	blt	2a194 <main@@Base+0x142f8>
   29ed8:	ldrb	r0, [r1]
   29edc:	cmp	r0, #32
   29ee0:	bls	2a184 <main@@Base+0x142e8>
   29ee4:	mov	r9, r1
   29ee8:	cmp	r4, r9
   29eec:	bne	2a1ac <main@@Base+0x14310>
   29ef0:	b	2a1d4 <main@@Base+0x14338>
   29ef4:	mov	r0, sl
   29ef8:	mov	r1, r9
   29efc:	mov	r2, r8
   29f00:	mov	r3, #4
   29f04:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29f08:	b	2a1a0 <main@@Base+0x14304>
   29f0c:	bne	29f1c <main@@Base+0x14080>
   29f10:	ldrb	r0, [r9, #11]!
   29f14:	cmp	r0, #32
   29f18:	bhi	29f2c <main@@Base+0x14090>
   29f1c:	ldr	r0, [sp, #36]	; 0x24
   29f20:	mov	r2, r8
   29f24:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29f28:	mov	r9, r0
   29f2c:	cmp	r9, r8
   29f30:	beq	29f6c <main@@Base+0x140d0>
   29f34:	ldrb	r0, [r9]
   29f38:	cmp	r0, #58	; 0x3a
   29f3c:	bne	29f6c <main@@Base+0x140d0>
   29f40:	add	r1, r9, #1
   29f44:	sub	r0, r8, r1
   29f48:	cmp	r0, #2
   29f4c:	blt	2a2c4 <main@@Base+0x14428>
   29f50:	ldrb	r0, [r1]
   29f54:	cmp	r0, #32
   29f58:	bls	2a2b4 <main@@Base+0x14418>
   29f5c:	mov	r9, r1
   29f60:	cmp	sl, r9
   29f64:	bne	2a2dc <main@@Base+0x14440>
   29f68:	b	2a308 <main@@Base+0x1446c>
   29f6c:	ldr	r0, [sp, #36]	; 0x24
   29f70:	mov	r1, r9
   29f74:	mov	r2, r8
   29f78:	mov	r3, #4
   29f7c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   29f80:	b	2a2d0 <main@@Base+0x14434>
   29f84:	bne	29f94 <main@@Base+0x140f8>
   29f88:	ldrb	r0, [r9, #2]!
   29f8c:	cmp	r0, #32
   29f90:	bhi	29fa4 <main@@Base+0x14108>
   29f94:	mov	r0, sl
   29f98:	mov	r2, r8
   29f9c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   29fa0:	mov	r9, r0
   29fa4:	cmp	r4, r9
   29fa8:	beq	2a1d4 <main@@Base+0x14338>
   29fac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29fb0:	mov	r1, #9
   29fb4:	mov	r2, r8
   29fb8:	mov	r3, #4
   29fbc:	str	r1, [sp]
   29fc0:	mov	r1, r9
   29fc4:	str	r0, [sp, #4]
   29fc8:	ldr	r0, [pc, #1088]	; 2a410 <main@@Base+0x14574>
   29fcc:	add	r0, pc, r0
   29fd0:	str	r0, [sp, #8]
   29fd4:	ldr	r0, [pc, #1080]	; 2a414 <main@@Base+0x14578>
   29fd8:	add	r0, pc, r0
   29fdc:	str	r0, [sp, #12]
   29fe0:	ldr	r0, [pc, #1072]	; 2a418 <main@@Base+0x1457c>
   29fe4:	add	r0, pc, r0
   29fe8:	str	r0, [sp, #16]
   29fec:	mov	r0, sl
   29ff0:	bl	378f0 <flatcc_json_parser_union_type_vector@@Base>
   29ff4:	b	2a1e4 <main@@Base+0x14348>
   29ff8:	bne	2a008 <main@@Base+0x1416c>
   29ffc:	ldrb	r0, [r9, #21]!
   2a000:	cmp	r0, #32
   2a004:	bhi	2a018 <main@@Base+0x1417c>
   2a008:	mov	r0, sl
   2a00c:	mov	r2, r8
   2a010:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a014:	mov	r9, r0
   2a018:	cmp	r9, r8
   2a01c:	beq	2a060 <main@@Base+0x141c4>
   2a020:	ldrb	r0, [r9]
   2a024:	cmp	r0, #58	; 0x3a
   2a028:	bne	2a060 <main@@Base+0x141c4>
   2a02c:	add	r1, r9, #1
   2a030:	sub	r0, r8, r1
   2a034:	cmp	r0, #2
   2a038:	blt	2a328 <main@@Base+0x1448c>
   2a03c:	ldrb	r0, [r1]
   2a040:	cmp	r0, #32
   2a044:	bls	2a318 <main@@Base+0x1447c>
   2a048:	mov	r9, r1
   2a04c:	cmp	r5, r9
   2a050:	bne	2a340 <main@@Base+0x144a4>
   2a054:	mov	r0, sl
   2a058:	mov	r1, r5
   2a05c:	b	2a1dc <main@@Base+0x14340>
   2a060:	mov	r0, sl
   2a064:	mov	r1, r9
   2a068:	mov	r2, r8
   2a06c:	mov	r3, #4
   2a070:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2a074:	b	2a334 <main@@Base+0x14498>
   2a078:	bne	2a088 <main@@Base+0x141ec>
   2a07c:	ldrb	r0, [r9, #2]!
   2a080:	cmp	r0, #32
   2a084:	bhi	2a098 <main@@Base+0x141fc>
   2a088:	mov	r0, sl
   2a08c:	mov	r2, r8
   2a090:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a094:	mov	r9, r0
   2a098:	cmp	r4, r9
   2a09c:	beq	2a1d4 <main@@Base+0x14338>
   2a0a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a0a4:	mov	r1, #3
   2a0a8:	mov	r2, r8
   2a0ac:	mov	r3, #1
   2a0b0:	str	r1, [sp]
   2a0b4:	mov	r1, r9
   2a0b8:	str	r0, [sp, #4]
   2a0bc:	ldr	r0, [pc, #828]	; 2a400 <main@@Base+0x14564>
   2a0c0:	add	r0, pc, r0
   2a0c4:	b	29dcc <main@@Base+0x13f30>
   2a0c8:	bne	2a0d8 <main@@Base+0x1423c>
   2a0cc:	ldrb	r0, [r9, #2]!
   2a0d0:	cmp	r0, #32
   2a0d4:	bhi	2a0e8 <main@@Base+0x1424c>
   2a0d8:	ldr	r0, [sp, #36]	; 0x24
   2a0dc:	mov	r2, r8
   2a0e0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a0e4:	mov	r9, r0
   2a0e8:	cmp	sl, r9
   2a0ec:	beq	2a308 <main@@Base+0x1446c>
   2a0f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a0f4:	mov	r1, #5
   2a0f8:	mov	r2, r8
   2a0fc:	mov	r3, #2
   2a100:	str	r1, [sp]
   2a104:	mov	r1, r9
   2a108:	str	r0, [sp, #4]
   2a10c:	ldr	r0, [pc, #792]	; 2a42c <main@@Base+0x14590>
   2a110:	add	r0, pc, r0
   2a114:	str	r0, [sp, #8]
   2a118:	ldr	r0, [pc, #784]	; 2a430 <main@@Base+0x14594>
   2a11c:	ldr	sl, [sp, #36]	; 0x24
   2a120:	add	r0, pc, r0
   2a124:	b	2a370 <main@@Base+0x144d4>
   2a128:	bne	2a138 <main@@Base+0x1429c>
   2a12c:	ldrb	r0, [r9, #2]!
   2a130:	cmp	r0, #32
   2a134:	bhi	2a148 <main@@Base+0x142ac>
   2a138:	mov	r0, sl
   2a13c:	mov	r2, r8
   2a140:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a144:	mov	r9, r0
   2a148:	cmp	r4, r9
   2a14c:	beq	2a1d4 <main@@Base+0x14338>
   2a150:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a154:	mov	r1, #9
   2a158:	mov	r2, r8
   2a15c:	mov	r3, #4
   2a160:	str	r1, [sp]
   2a164:	mov	r1, r9
   2a168:	str	r0, [sp, #4]
   2a16c:	ldr	r0, [pc, #680]	; 2a41c <main@@Base+0x14580>
   2a170:	add	r0, pc, r0
   2a174:	str	r0, [sp, #8]
   2a178:	mov	r0, sl
   2a17c:	bl	373fc <flatcc_json_parser_union_vector@@Base>
   2a180:	b	2a1e4 <main@@Base+0x14348>
   2a184:	bne	2a194 <main@@Base+0x142f8>
   2a188:	ldrb	r0, [r9, #2]!
   2a18c:	cmp	r0, #32
   2a190:	bhi	2a1a4 <main@@Base+0x14308>
   2a194:	mov	r0, sl
   2a198:	mov	r2, r8
   2a19c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a1a0:	mov	r9, r0
   2a1a4:	cmp	r4, r9
   2a1a8:	beq	2a1d4 <main@@Base+0x14338>
   2a1ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a1b0:	mov	r1, #1
   2a1b4:	mov	r2, r8
   2a1b8:	mov	r3, #0
   2a1bc:	str	r1, [sp]
   2a1c0:	mov	r1, r9
   2a1c4:	str	r0, [sp, #4]
   2a1c8:	ldr	r0, [pc, #600]	; 2a428 <main@@Base+0x1458c>
   2a1cc:	add	r0, pc, r0
   2a1d0:	b	29dcc <main@@Base+0x13f30>
   2a1d4:	mov	r0, sl
   2a1d8:	mov	r1, r4
   2a1dc:	mov	r2, r8
   2a1e0:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   2a1e4:	ldr	r4, [sp, #32]
   2a1e8:	mov	r2, r0
   2a1ec:	sub	r0, r8, r0
   2a1f0:	cmp	r0, #2
   2a1f4:	blt	2a228 <main@@Base+0x1438c>
   2a1f8:	ldrb	r0, [r2]
   2a1fc:	cmp	r0, #32
   2a200:	bls	2a214 <main@@Base+0x14378>
   2a204:	mov	r3, r2
   2a208:	cmp	r3, r8
   2a20c:	bne	2a244 <main@@Base+0x143a8>
   2a210:	b	2a380 <main@@Base+0x144e4>
   2a214:	bne	2a228 <main@@Base+0x1438c>
   2a218:	mov	r3, r2
   2a21c:	ldrb	r0, [r3, #1]!
   2a220:	cmp	r0, #32
   2a224:	bhi	2a23c <main@@Base+0x143a0>
   2a228:	mov	r1, r2
   2a22c:	mov	r0, sl
   2a230:	mov	r2, r8
   2a234:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a238:	mov	r3, r0
   2a23c:	cmp	r3, r8
   2a240:	beq	2a380 <main@@Base+0x144e4>
   2a244:	ldrb	r0, [r3]
   2a248:	cmp	r0, #44	; 0x2c
   2a24c:	bne	2a388 <main@@Base+0x144ec>
   2a250:	add	r1, r3, #1
   2a254:	sub	r0, r8, r1
   2a258:	cmp	r0, #2
   2a25c:	blt	2a28c <main@@Base+0x143f0>
   2a260:	ldrb	r0, [r1]
   2a264:	cmp	r0, #32
   2a268:	bls	2a27c <main@@Base+0x143e0>
   2a26c:	mov	r3, r1
   2a270:	cmp	r3, r8
   2a274:	bne	2a2a4 <main@@Base+0x14408>
   2a278:	b	2a3b4 <main@@Base+0x14518>
   2a27c:	bne	2a28c <main@@Base+0x143f0>
   2a280:	ldrb	r0, [r3, #2]!
   2a284:	cmp	r0, #32
   2a288:	bhi	2a29c <main@@Base+0x14400>
   2a28c:	mov	r0, sl
   2a290:	mov	r2, r8
   2a294:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a298:	mov	r3, r0
   2a29c:	cmp	r3, r8
   2a2a0:	beq	2a3b4 <main@@Base+0x14518>
   2a2a4:	ldrb	r0, [r3]
   2a2a8:	cmp	r0, #125	; 0x7d
   2a2ac:	bne	29138 <main@@Base+0x1329c>
   2a2b0:	b	2a390 <main@@Base+0x144f4>
   2a2b4:	bne	2a2c4 <main@@Base+0x14428>
   2a2b8:	ldrb	r0, [r9, #2]!
   2a2bc:	cmp	r0, #32
   2a2c0:	bhi	2a2d4 <main@@Base+0x14438>
   2a2c4:	ldr	r0, [sp, #36]	; 0x24
   2a2c8:	mov	r2, r8
   2a2cc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a2d0:	mov	r9, r0
   2a2d4:	cmp	sl, r9
   2a2d8:	beq	2a308 <main@@Base+0x1446c>
   2a2dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a2e0:	mov	r1, #5
   2a2e4:	mov	r2, r8
   2a2e8:	mov	r3, #2
   2a2ec:	str	r1, [sp]
   2a2f0:	mov	r1, r9
   2a2f4:	str	r0, [sp, #4]
   2a2f8:	ldr	r0, [pc, #308]	; 2a434 <main@@Base+0x14598>
   2a2fc:	ldr	sl, [sp, #36]	; 0x24
   2a300:	add	r0, pc, r0
   2a304:	b	29dcc <main@@Base+0x13f30>
   2a308:	ldr	r0, [sp, #36]	; 0x24
   2a30c:	mov	r1, sl
   2a310:	mov	sl, r0
   2a314:	b	2a1dc <main@@Base+0x14340>
   2a318:	bne	2a328 <main@@Base+0x1448c>
   2a31c:	ldrb	r0, [r9, #2]!
   2a320:	cmp	r0, #32
   2a324:	bhi	2a338 <main@@Base+0x1449c>
   2a328:	mov	r0, sl
   2a32c:	mov	r2, r8
   2a330:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a334:	mov	r9, r0
   2a338:	cmp	r5, r9
   2a33c:	beq	2a054 <main@@Base+0x141b8>
   2a340:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a344:	mov	r1, #1
   2a348:	mov	r2, r8
   2a34c:	mov	r3, #0
   2a350:	str	r1, [sp]
   2a354:	mov	r1, r9
   2a358:	str	r0, [sp, #4]
   2a35c:	ldr	r0, [pc, #188]	; 2a420 <main@@Base+0x14584>
   2a360:	add	r0, pc, r0
   2a364:	str	r0, [sp, #8]
   2a368:	ldr	r0, [pc, #180]	; 2a424 <main@@Base+0x14588>
   2a36c:	add	r0, pc, r0
   2a370:	str	r0, [sp, #12]
   2a374:	mov	r0, sl
   2a378:	bl	36e88 <flatcc_json_parser_union_type@@Base>
   2a37c:	b	2a1e4 <main@@Base+0x14348>
   2a380:	mov	r7, r8
   2a384:	b	29074 <main@@Base+0x131d8>
   2a388:	cmp	r0, #125	; 0x7d
   2a38c:	bne	2a3c0 <main@@Base+0x14524>
   2a390:	add	r1, r3, #1
   2a394:	sub	r0, r8, r1
   2a398:	cmp	r0, #2
   2a39c:	blt	2a3e8 <main@@Base+0x1454c>
   2a3a0:	ldrb	r0, [r1]
   2a3a4:	cmp	r0, #32
   2a3a8:	bls	2a3d4 <main@@Base+0x14538>
   2a3ac:	mov	r7, r1
   2a3b0:	b	29074 <main@@Base+0x131d8>
   2a3b4:	mov	r0, sl
   2a3b8:	mov	r1, r8
   2a3bc:	b	2a3c8 <main@@Base+0x1452c>
   2a3c0:	mov	r0, sl
   2a3c4:	mov	r1, r3
   2a3c8:	mov	r2, r8
   2a3cc:	mov	r3, #10
   2a3d0:	b	2906c <main@@Base+0x131d0>
   2a3d4:	bne	2a3e8 <main@@Base+0x1454c>
   2a3d8:	ldrb	r0, [r3, #2]!
   2a3dc:	cmp	r0, #32
   2a3e0:	mov	r7, r3
   2a3e4:	bhi	29074 <main@@Base+0x131d8>
   2a3e8:	mov	r0, sl
   2a3ec:	mov	r2, r8
   2a3f0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a3f4:	b	29070 <main@@Base+0x131d4>
   2a3f8:	andeq	r2, r3, r8, lsl #9
   2a3fc:	andeq	r0, r0, r0, asr r7
   2a400:	andeq	r0, r0, r0, asr #9
   2a404:	andeq	r2, r3, ip, lsr r4
   2a408:	strdeq	r0, [r0], -r4
   2a40c:			; <UNDEFINED> instruction: 0x000007b8
   2a410:	andeq	r2, r3, r0, lsl #6
   2a414:	andeq	r0, r0, r8, lsr #11
   2a418:	strdeq	r1, [r0], -r8
   2a41c:	andeq	r0, r0, r0, lsl r4
   2a420:	andeq	r1, r3, ip, ror pc
   2a424:	andeq	r0, r0, r4, lsl r2
   2a428:			; <UNDEFINED> instruction: 0x000003b4
   2a42c:	ldrdeq	r2, [r3], -ip
   2a430:	andeq	r0, r0, r0, ror #8
   2a434:	andeq	r0, r0, r0, lsl #5
   2a438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a43c:	add	fp, sp, #28
   2a440:	push	{r3}		; (str r3, [sp, #-4]!)
   2a444:	sub	r7, r2, r1
   2a448:	cmp	r7, #8
   2a44c:	movcs	r7, #8
   2a450:	and	r7, r7, #15
   2a454:	sub	r7, r7, #1
   2a458:	cmp	r7, #7
   2a45c:	bhi	2a544 <main@@Base+0x146a8>
   2a460:	add	r6, pc, #36	; 0x24
   2a464:	mov	ip, #0
   2a468:	mov	r3, #0
   2a46c:	mov	r8, #0
   2a470:	mov	r9, #0
   2a474:	mov	sl, #0
   2a478:	mov	r4, #0
   2a47c:	mov	r5, #0
   2a480:	ldr	lr, [r6, r7, lsl #2]
   2a484:	mov	r7, #0
   2a488:	add	pc, r6, lr
   2a48c:	andeq	r0, r0, r4, rrx
   2a490:	andeq	r0, r0, ip, asr r0
   2a494:	andeq	r0, r0, r4, asr r0
   2a498:	andeq	r0, r0, ip, asr #32
   2a49c:	andeq	r0, r0, r0, asr #32
   2a4a0:	andeq	r0, r0, r4, lsr r0
   2a4a4:	andeq	r0, r0, r4, lsr #32
   2a4a8:	andeq	r0, r0, r0, lsr #32
   2a4ac:	ldrb	r3, [r1, #7]
   2a4b0:	ldrb	r7, [r1, #6]
   2a4b4:	mov	r8, ip
   2a4b8:	orr	r3, r3, r7, lsl #8
   2a4bc:	mov	ip, r3
   2a4c0:	ldrb	r3, [r1, #5]
   2a4c4:	mov	r9, r8
   2a4c8:	orr	ip, ip, r3, lsl #16
   2a4cc:	ldrb	r3, [r1, #4]
   2a4d0:	mov	sl, r9
   2a4d4:	orr	ip, ip, r3, lsl #24
   2a4d8:	ldrb	r3, [r1, #3]
   2a4dc:	orr	r7, r3, sl
   2a4e0:	ldrb	r3, [r1, #2]
   2a4e4:	orr	r4, r7, r3, lsl #8
   2a4e8:	ldrb	r3, [r1, #1]
   2a4ec:	orr	r5, r4, r3, lsl #16
   2a4f0:	ldrb	r7, [r1]
   2a4f4:	movw	r3, #29797	; 0x7465
   2a4f8:	movw	r6, #24946	; 0x6172
   2a4fc:	movt	r3, #24931	; 0x6163
   2a500:	movt	r6, #17256	; 0x4368
   2a504:	eor	r3, ip, r3
   2a508:	orr	r7, r5, r7, lsl #24
   2a50c:	eor	r7, r7, r6
   2a510:	orrs	r3, r3, r7
   2a514:	bne	2a544 <main@@Base+0x146a8>
   2a518:	add	lr, r1, #8
   2a51c:	mov	r6, #-268435456	; 0xf0000000
   2a520:	sub	r7, r2, lr
   2a524:	cmp	r7, #8
   2a528:	mov	r3, r7
   2a52c:	movcs	r3, #8
   2a530:	add	r3, r6, r3, lsl #28
   2a534:	asr	r3, r3, #28
   2a538:	cmp	r3, #0
   2a53c:	cmpge	r7, #2
   2a540:	bge	2a550 <main@@Base+0x146b4>
   2a544:	mov	r0, r1
   2a548:	sub	sp, fp, #28
   2a54c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a550:	ldrb	r3, [lr]
   2a554:	cmp	r3, #114	; 0x72
   2a558:	bne	2a544 <main@@Base+0x146a8>
   2a55c:	ldrb	r3, [r1, #9]
   2a560:	mov	ip, lr
   2a564:	cmp	r3, #46	; 0x2e
   2a568:	addeq	ip, r1, #10
   2a56c:	cmp	ip, lr
   2a570:	beq	2a544 <main@@Base+0x146a8>
   2a574:	ldr	r3, [sp]
   2a578:	mov	r1, ip
   2a57c:	sub	sp, fp, #28
   2a580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a584:	b	25058 <main@@Base+0xf1bc>
   2a588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a58c:	add	fp, sp, #28
   2a590:	sub	sp, sp, #36	; 0x24
   2a594:	ldr	r5, [fp, #8]
   2a598:	mov	r8, r0
   2a59c:	mov	r0, #0
   2a5a0:	mov	r9, r2
   2a5a4:	mov	r4, r1
   2a5a8:	cmp	r3, #11
   2a5ac:	str	r0, [r5]
   2a5b0:	bhi	2a608 <main@@Base+0x1476c>
   2a5b4:	add	r0, pc, #4
   2a5b8:	ldr	r1, [r0, r3, lsl #2]
   2a5bc:	add	pc, r0, r1
   2a5c0:	andeq	r0, r0, r8, lsl #1
   2a5c4:	andeq	r0, r0, r8, rrx
   2a5c8:	andeq	r0, r0, r4, asr #1
   2a5cc:	andeq	r0, r0, r8, rrx
   2a5d0:	andeq	r0, r0, r8, rrx
   2a5d4:	andeq	r0, r0, r8, rrx
   2a5d8:	andeq	r0, r0, r8, rrx
   2a5dc:	andeq	r0, r0, r8, rrx
   2a5e0:	andeq	r0, r0, r8, lsl r1
   2a5e4:	andeq	r0, r0, r0, lsr r0
   2a5e8:	andeq	r0, r0, r0, lsr r0
   2a5ec:	andeq	r0, r0, r0, asr r0
   2a5f0:	mov	r0, r8
   2a5f4:	mov	r1, r4
   2a5f8:	mov	r2, r9
   2a5fc:	mov	r3, r5
   2a600:	bl	2b410 <main@@Base+0x15574>
   2a604:	b	2a7d0 <main@@Base+0x14934>
   2a608:	cmp	r3, #255	; 0xff
   2a60c:	bne	2a628 <main@@Base+0x1478c>
   2a610:	mov	r0, r8
   2a614:	mov	r1, r4
   2a618:	mov	r2, r9
   2a61c:	mov	r3, r5
   2a620:	bl	36974 <flatcc_json_parser_build_string@@Base>
   2a624:	b	2a7d0 <main@@Base+0x14934>
   2a628:	ldrb	r0, [r8, #8]
   2a62c:	tst	r0, #1
   2a630:	bne	2a734 <main@@Base+0x14898>
   2a634:	mov	r0, r8
   2a638:	mov	r1, r4
   2a63c:	mov	r2, r9
   2a640:	mov	r3, #15
   2a644:	b	2a678 <main@@Base+0x147dc>
   2a648:	sub	r0, r9, r4
   2a64c:	cmp	r0, #4
   2a650:	blt	2a668 <main@@Base+0x147cc>
   2a654:	ldr	r0, [r4]
   2a658:	movw	r1, #30062	; 0x756e
   2a65c:	movt	r1, #27756	; 0x6c6c
   2a660:	cmp	r0, r1
   2a664:	beq	2a810 <main@@Base+0x14974>
   2a668:	mov	r0, r8
   2a66c:	mov	r1, r4
   2a670:	mov	r2, r9
   2a674:	mov	r3, #26
   2a678:	sub	sp, fp, #28
   2a67c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a680:	b	33ef8 <flatcc_json_parser_set_error@@Base>
   2a684:	mov	r0, #0
   2a688:	mov	r1, #1
   2a68c:	str	r0, [r5]
   2a690:	ldr	r0, [r8]
   2a694:	bl	2f340 <flatcc_builder_start_table@@Base>
   2a698:	cmp	r0, #0
   2a69c:	bne	2a7bc <main@@Base+0x14920>
   2a6a0:	cmp	r4, r9
   2a6a4:	beq	2a798 <main@@Base+0x148fc>
   2a6a8:	ldrb	r0, [r4]
   2a6ac:	cmp	r0, #123	; 0x7b
   2a6b0:	bne	2a798 <main@@Base+0x148fc>
   2a6b4:	add	r1, r4, #1
   2a6b8:	sub	r0, r9, r1
   2a6bc:	cmp	r0, #2
   2a6c0:	blt	2ad28 <main@@Base+0x14e8c>
   2a6c4:	ldrb	r0, [r1]
   2a6c8:	cmp	r0, #32
   2a6cc:	bls	2ad18 <main@@Base+0x14e7c>
   2a6d0:	mov	r4, r1
   2a6d4:	b	2ad38 <main@@Base+0x14e9c>
   2a6d8:	mov	r0, #0
   2a6dc:	mov	r1, #2
   2a6e0:	mov	r2, #2
   2a6e4:	str	r0, [r5]
   2a6e8:	ldr	r0, [r8]
   2a6ec:	bl	2e0a4 <flatcc_builder_start_struct@@Base>
   2a6f0:	cmp	r0, #0
   2a6f4:	beq	2a78c <main@@Base+0x148f0>
   2a6f8:	cmp	r4, r9
   2a6fc:	beq	2a74c <main@@Base+0x148b0>
   2a700:	ldrb	r1, [r4]
   2a704:	cmp	r1, #123	; 0x7b
   2a708:	bne	2a74c <main@@Base+0x148b0>
   2a70c:	add	r1, r4, #1
   2a710:	str	r0, [sp, #8]
   2a714:	sub	r0, r9, r1
   2a718:	cmp	r0, #2
   2a71c:	blt	2a840 <main@@Base+0x149a4>
   2a720:	ldrb	r0, [r1]
   2a724:	cmp	r0, #32
   2a728:	bls	2a830 <main@@Base+0x14994>
   2a72c:	mov	r4, r1
   2a730:	b	2a850 <main@@Base+0x149b4>
   2a734:	mov	r0, r8
   2a738:	mov	r1, r4
   2a73c:	mov	r2, r9
   2a740:	sub	sp, fp, #28
   2a744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a748:	b	3489c <flatcc_json_parser_generic_json@@Base>
   2a74c:	mov	r0, r8
   2a750:	mov	r1, r4
   2a754:	mov	r2, r9
   2a758:	mov	r3, #21
   2a75c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2a760:	mov	r4, r0
   2a764:	cmp	r4, r9
   2a768:	mov	r1, r9
   2a76c:	beq	2a790 <main@@Base+0x148f4>
   2a770:	ldr	r0, [r8]
   2a774:	bl	2e18c <flatcc_builder_end_struct@@Base>
   2a778:	cmp	r0, #0
   2a77c:	mov	r1, r4
   2a780:	str	r0, [r5]
   2a784:	bne	2a7d4 <main@@Base+0x14938>
   2a788:	b	2a790 <main@@Base+0x148f4>
   2a78c:	mov	r1, r4
   2a790:	mov	r0, r8
   2a794:	b	2a7c4 <main@@Base+0x14928>
   2a798:	mov	r0, r8
   2a79c:	mov	r1, r4
   2a7a0:	mov	r2, r9
   2a7a4:	mov	r3, #21
   2a7a8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2a7ac:	mov	r4, r0
   2a7b0:	ldr	r0, [r8, #20]
   2a7b4:	cmp	r0, #0
   2a7b8:	beq	2a818 <main@@Base+0x1497c>
   2a7bc:	mov	r0, r8
   2a7c0:	mov	r1, r4
   2a7c4:	mov	r2, r9
   2a7c8:	mov	r3, #33	; 0x21
   2a7cc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2a7d0:	mov	r4, r0
   2a7d4:	ldr	r0, [r8, #20]
   2a7d8:	cmp	r0, #0
   2a7dc:	bne	2a804 <main@@Base+0x14968>
   2a7e0:	ldr	r0, [r5]
   2a7e4:	cmp	r0, #0
   2a7e8:	bne	2a804 <main@@Base+0x14968>
   2a7ec:	mov	r0, r8
   2a7f0:	mov	r1, r4
   2a7f4:	mov	r2, r9
   2a7f8:	mov	r3, #33	; 0x21
   2a7fc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2a800:	mov	r4, r0
   2a804:	mov	r0, r4
   2a808:	sub	sp, fp, #28
   2a80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a810:	add	r4, r4, #4
   2a814:	b	2a804 <main@@Base+0x14968>
   2a818:	ldr	r0, [r8]
   2a81c:	bl	2fd70 <flatcc_builder_end_table@@Base>
   2a820:	cmp	r0, #0
   2a824:	str	r0, [r5]
   2a828:	bne	2a7d4 <main@@Base+0x14938>
   2a82c:	b	2a7bc <main@@Base+0x14920>
   2a830:	bne	2a840 <main@@Base+0x149a4>
   2a834:	ldrb	r0, [r4, #2]!
   2a838:	cmp	r0, #32
   2a83c:	bhi	2a850 <main@@Base+0x149b4>
   2a840:	mov	r0, r8
   2a844:	mov	r2, r9
   2a848:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2a84c:	mov	r4, r0
   2a850:	cmp	r4, r9
   2a854:	mov	r3, r9
   2a858:	beq	2a89c <main@@Base+0x14a00>
   2a85c:	ldrb	r0, [r4]
   2a860:	cmp	r0, #125	; 0x7d
   2a864:	bne	2a898 <main@@Base+0x149fc>
   2a868:	add	r1, r4, #1
   2a86c:	sub	r0, r9, r1
   2a870:	cmp	r0, #2
   2a874:	blt	2b370 <main@@Base+0x154d4>
   2a878:	ldrb	r0, [r1]
   2a87c:	cmp	r0, #32
   2a880:	bhi	2ad04 <main@@Base+0x14e68>
   2a884:	bne	2b370 <main@@Base+0x154d4>
   2a888:	ldrb	r0, [r4, #2]!
   2a88c:	cmp	r0, #32
   2a890:	bhi	2a764 <main@@Base+0x148c8>
   2a894:	b	2b370 <main@@Base+0x154d4>
   2a898:	mov	r3, r4
   2a89c:	str	r5, [sp, #12]
   2a8a0:	cmp	r3, r9
   2a8a4:	mov	sl, r9
   2a8a8:	beq	2a8d8 <main@@Base+0x14a3c>
   2a8ac:	ldrb	r0, [r3]
   2a8b0:	cmp	r0, #34	; 0x22
   2a8b4:	bne	2a8c0 <main@@Base+0x14a24>
   2a8b8:	add	sl, r3, #1
   2a8bc:	b	2a8d8 <main@@Base+0x14a3c>
   2a8c0:	mov	r1, r3
   2a8c4:	mov	r0, r8
   2a8c8:	mov	r2, r9
   2a8cc:	mov	r3, #5
   2a8d0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2a8d4:	mov	sl, r0
   2a8d8:	sub	r0, r9, sl
   2a8dc:	mov	r1, #8
   2a8e0:	cmp	r0, #8
   2a8e4:	movcs	r0, r1
   2a8e8:	and	r0, r0, #15
   2a8ec:	sub	r1, r0, #1
   2a8f0:	cmp	r1, #7
   2a8f4:	bhi	2aa40 <main@@Base+0x14ba4>
   2a8f8:	add	r6, pc, #36	; 0x24
   2a8fc:	mov	r0, #0
   2a900:	mov	ip, #0
   2a904:	mov	lr, #0
   2a908:	mov	r2, #0
   2a90c:	mov	r3, #0
   2a910:	mov	r4, #0
   2a914:	mov	r7, #0
   2a918:	ldr	r5, [r6, r1, lsl #2]
   2a91c:	mov	r1, #0
   2a920:	add	pc, r6, r5
   2a924:	andeq	r0, r0, r4, rrx
   2a928:	andeq	r0, r0, ip, asr r0
   2a92c:	andeq	r0, r0, r4, asr r0
   2a930:	andeq	r0, r0, ip, asr #32
   2a934:	andeq	r0, r0, r0, asr #32
   2a938:	andeq	r0, r0, r4, lsr r0
   2a93c:	andeq	r0, r0, r4, lsr #32
   2a940:	andeq	r0, r0, r0, lsr #32
   2a944:	ldrb	ip, [sl, #7]
   2a948:	ldrb	r1, [sl, #6]
   2a94c:	mov	lr, r0
   2a950:	orr	r1, ip, r1, lsl #8
   2a954:	mov	r0, r1
   2a958:	ldrb	r1, [sl, #5]
   2a95c:	mov	r2, lr
   2a960:	orr	r0, r0, r1, lsl #16
   2a964:	ldrb	r1, [sl, #4]
   2a968:	mov	r3, r2
   2a96c:	orr	r0, r0, r1, lsl #24
   2a970:	ldrb	r1, [sl, #3]
   2a974:	orr	r4, r1, r3
   2a978:	ldrb	r1, [sl, #2]
   2a97c:	orr	r7, r4, r1, lsl #8
   2a980:	ldrb	r1, [sl, #1]
   2a984:	orr	r1, r7, r1, lsl #16
   2a988:	movw	r2, #25966	; 0x656e
   2a98c:	movt	r2, #24428	; 0x5f6c
   2a990:	eor	r0, r0, r2
   2a994:	ldrb	r2, [sl]
   2a998:	orr	r1, r1, r2, lsl #24
   2a99c:	movw	r2, #26994	; 0x6972
   2a9a0:	movt	r2, #26721	; 0x6861
   2a9a4:	eor	r1, r1, r2
   2a9a8:	orrs	r0, r0, r1
   2a9ac:	bne	2aa40 <main@@Base+0x14ba4>
   2a9b0:	add	r4, sl, #8
   2a9b4:	mov	r1, #8
   2a9b8:	sub	r0, r9, r4
   2a9bc:	cmp	r0, #8
   2a9c0:	movcc	r1, r0
   2a9c4:	and	r2, r1, #15
   2a9c8:	sub	r1, r2, #3
   2a9cc:	cmp	r1, #6
   2a9d0:	bcs	2aa4c <main@@Base+0x14bb0>
   2a9d4:	ldrb	r1, [sl, #10]
   2a9d8:	lsl	r1, r1, #8
   2a9dc:	ldrb	r2, [sl, #9]
   2a9e0:	orr	r1, r1, r2, lsl #16
   2a9e4:	ldrb	r2, [r4]
   2a9e8:	bic	r1, r1, #255	; 0xff
   2a9ec:	orr	r1, r1, r2, lsl #24
   2a9f0:	movw	r2, #26624	; 0x6800
   2a9f4:	movt	r2, #26484	; 0x6774
   2a9f8:	teq	r1, r2
   2a9fc:	bne	2aac0 <main@@Base+0x14c24>
   2aa00:	cmp	r0, #4
   2aa04:	blt	2aac0 <main@@Base+0x14c24>
   2aa08:	ldrb	r0, [sl, #11]
   2aa0c:	cmp	r0, #34	; 0x22
   2aa10:	bne	2aac0 <main@@Base+0x14c24>
   2aa14:	add	r1, sl, #12
   2aa18:	sub	r0, r9, r1
   2aa1c:	cmp	r0, #2
   2aa20:	blt	2aa74 <main@@Base+0x14bd8>
   2aa24:	ldrb	r0, [r1]
   2aa28:	cmp	r0, #32
   2aa2c:	bls	2aa64 <main@@Base+0x14bc8>
   2aa30:	mov	sl, r1
   2aa34:	cmp	sl, r9
   2aa38:	bne	2aa8c <main@@Base+0x14bf0>
   2aa3c:	b	2aba0 <main@@Base+0x14d04>
   2aa40:	mov	r0, r8
   2aa44:	mov	r1, sl
   2aa48:	b	2aac8 <main@@Base+0x14c2c>
   2aa4c:	mov	r1, #0
   2aa50:	cmp	r2, #1
   2aa54:	beq	2a9e4 <main@@Base+0x14b48>
   2aa58:	cmp	r2, #2
   2aa5c:	beq	2a9dc <main@@Base+0x14b40>
   2aa60:	b	2aac0 <main@@Base+0x14c24>
   2aa64:	bne	2aa74 <main@@Base+0x14bd8>
   2aa68:	ldrb	r0, [sl, #13]!
   2aa6c:	cmp	r0, #32
   2aa70:	bhi	2aa84 <main@@Base+0x14be8>
   2aa74:	mov	r0, r8
   2aa78:	mov	r2, r9
   2aa7c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2aa80:	mov	sl, r0
   2aa84:	cmp	sl, r9
   2aa88:	beq	2aba0 <main@@Base+0x14d04>
   2aa8c:	ldrb	r0, [sl]
   2aa90:	cmp	r0, #58	; 0x3a
   2aa94:	bne	2aba0 <main@@Base+0x14d04>
   2aa98:	add	r1, sl, #1
   2aa9c:	sub	r0, r9, r1
   2aaa0:	cmp	r0, #2
   2aaa4:	blt	2abc8 <main@@Base+0x14d2c>
   2aaa8:	ldrb	r0, [r1]
   2aaac:	cmp	r0, #32
   2aab0:	bls	2abb8 <main@@Base+0x14d1c>
   2aab4:	mov	sl, r1
   2aab8:	cmp	r4, sl
   2aabc:	bne	2abe0 <main@@Base+0x14d44>
   2aac0:	mov	r0, r8
   2aac4:	mov	r1, r4
   2aac8:	mov	r2, r9
   2aacc:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   2aad0:	mov	r2, r0
   2aad4:	ldr	r5, [sp, #12]
   2aad8:	sub	r0, r9, r2
   2aadc:	cmp	r0, #2
   2aae0:	blt	2ab14 <main@@Base+0x14c78>
   2aae4:	ldrb	r0, [r2]
   2aae8:	cmp	r0, #32
   2aaec:	bls	2ab00 <main@@Base+0x14c64>
   2aaf0:	mov	r3, r2
   2aaf4:	cmp	r3, r9
   2aaf8:	bne	2ab30 <main@@Base+0x14c94>
   2aafc:	b	2acd8 <main@@Base+0x14e3c>
   2ab00:	bne	2ab14 <main@@Base+0x14c78>
   2ab04:	mov	r3, r2
   2ab08:	ldrb	r0, [r3, #1]!
   2ab0c:	cmp	r0, #32
   2ab10:	bhi	2ab28 <main@@Base+0x14c8c>
   2ab14:	mov	r1, r2
   2ab18:	mov	r0, r8
   2ab1c:	mov	r2, r9
   2ab20:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2ab24:	mov	r3, r0
   2ab28:	cmp	r3, r9
   2ab2c:	beq	2acd8 <main@@Base+0x14e3c>
   2ab30:	ldrb	r0, [r3]
   2ab34:	cmp	r0, #44	; 0x2c
   2ab38:	bne	2ace0 <main@@Base+0x14e44>
   2ab3c:	add	r1, r3, #1
   2ab40:	sub	r0, r9, r1
   2ab44:	cmp	r0, #2
   2ab48:	blt	2ab78 <main@@Base+0x14cdc>
   2ab4c:	ldrb	r0, [r1]
   2ab50:	cmp	r0, #32
   2ab54:	bls	2ab68 <main@@Base+0x14ccc>
   2ab58:	mov	r3, r1
   2ab5c:	cmp	r3, r9
   2ab60:	bne	2ab90 <main@@Base+0x14cf4>
   2ab64:	b	2ad0c <main@@Base+0x14e70>
   2ab68:	bne	2ab78 <main@@Base+0x14cdc>
   2ab6c:	ldrb	r0, [r3, #2]!
   2ab70:	cmp	r0, #32
   2ab74:	bhi	2ab88 <main@@Base+0x14cec>
   2ab78:	mov	r0, r8
   2ab7c:	mov	r2, r9
   2ab80:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2ab84:	mov	r3, r0
   2ab88:	cmp	r3, r9
   2ab8c:	beq	2ad0c <main@@Base+0x14e70>
   2ab90:	ldrb	r0, [r3]
   2ab94:	cmp	r0, #125	; 0x7d
   2ab98:	bne	2a8a0 <main@@Base+0x14a04>
   2ab9c:	b	2ace8 <main@@Base+0x14e4c>
   2aba0:	mov	r0, r8
   2aba4:	mov	r1, sl
   2aba8:	mov	r2, r9
   2abac:	mov	r3, #4
   2abb0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2abb4:	b	2abd4 <main@@Base+0x14d38>
   2abb8:	bne	2abc8 <main@@Base+0x14d2c>
   2abbc:	ldrb	r0, [sl, #2]!
   2abc0:	cmp	r0, #32
   2abc4:	bhi	2abd8 <main@@Base+0x14d3c>
   2abc8:	mov	r0, r8
   2abcc:	mov	r2, r9
   2abd0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2abd4:	mov	sl, r0
   2abd8:	cmp	r4, sl
   2abdc:	beq	2aac0 <main@@Base+0x14c24>
   2abe0:	mov	r4, #0
   2abe4:	cmp	sl, r9
   2abe8:	str	r4, [sp, #28]
   2abec:	str	r4, [sp, #24]
   2abf0:	strh	r4, [sp, #16]
   2abf4:	str	r4, [sp, #20]
   2abf8:	beq	2ac44 <main@@Base+0x14da8>
   2abfc:	add	r0, sp, #24
   2ac00:	mov	r1, sl
   2ac04:	mov	r2, r9
   2ac08:	add	r3, sp, #20
   2ac0c:	str	r0, [sp]
   2ac10:	mov	r0, r8
   2ac14:	bl	363e0 <flatcc_json_parser_integer@@Base>
   2ac18:	cmp	r0, sl
   2ac1c:	beq	2ac4c <main@@Base+0x14db0>
   2ac20:	mov	r2, r0
   2ac24:	ldr	r0, [sp, #20]
   2ac28:	cmp	r0, #0
   2ac2c:	beq	2ac54 <main@@Base+0x14db8>
   2ac30:	mov	r1, r2
   2ac34:	mov	r0, r8
   2ac38:	mov	r2, r9
   2ac3c:	mov	r3, #8
   2ac40:	b	2ac78 <main@@Base+0x14ddc>
   2ac44:	mov	r2, r9
   2ac48:	b	2ac80 <main@@Base+0x14de4>
   2ac4c:	mov	r2, sl
   2ac50:	b	2ac80 <main@@Base+0x14de4>
   2ac54:	ldr	r0, [sp, #24]
   2ac58:	ldr	r1, [sp, #28]
   2ac5c:	subs	r3, r0, #65536	; 0x10000
   2ac60:	sbcs	r1, r1, #0
   2ac64:	bcc	2accc <main@@Base+0x14e30>
   2ac68:	mov	r1, r2
   2ac6c:	mov	r0, r8
   2ac70:	mov	r2, r9
   2ac74:	mov	r3, #7
   2ac78:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2ac7c:	mov	r2, r0
   2ac80:	ldr	r0, [sp, #8]
   2ac84:	cmp	sl, r2
   2ac88:	bne	2acc4 <main@@Base+0x14e28>
   2ac8c:	add	r0, sp, #16
   2ac90:	mov	r1, sl
   2ac94:	mov	r2, r9
   2ac98:	str	r0, [sp]
   2ac9c:	mov	r0, r8
   2aca0:	ldr	r3, [pc, #1848]	; 2b3e0 <main@@Base+0x15544>
   2aca4:	add	r3, pc, r3
   2aca8:	bl	2ba58 <main@@Base+0x15bbc>
   2acac:	mov	r2, r0
   2acb0:	cmp	r0, sl
   2acb4:	cmpne	r2, r9
   2acb8:	beq	2b3b8 <main@@Base+0x1551c>
   2acbc:	ldrh	r4, [sp, #16]
   2acc0:	ldr	r0, [sp, #8]
   2acc4:	strh	r4, [r0]
   2acc8:	b	2aad4 <main@@Base+0x14c38>
   2accc:	mov	r4, r0
   2acd0:	strh	r0, [sp, #16]
   2acd4:	b	2ac80 <main@@Base+0x14de4>
   2acd8:	mov	r1, r9
   2acdc:	b	2a790 <main@@Base+0x148f4>
   2ace0:	cmp	r0, #125	; 0x7d
   2ace4:	bne	2b348 <main@@Base+0x154ac>
   2ace8:	add	r1, r3, #1
   2acec:	sub	r0, r9, r1
   2acf0:	cmp	r0, #2
   2acf4:	blt	2b370 <main@@Base+0x154d4>
   2acf8:	ldrb	r0, [r1]
   2acfc:	cmp	r0, #32
   2ad00:	bls	2b35c <main@@Base+0x154c0>
   2ad04:	mov	r4, r1
   2ad08:	b	2a764 <main@@Base+0x148c8>
   2ad0c:	mov	r0, r8
   2ad10:	mov	r1, r9
   2ad14:	b	2b350 <main@@Base+0x154b4>
   2ad18:	bne	2ad28 <main@@Base+0x14e8c>
   2ad1c:	ldrb	r0, [r4, #2]!
   2ad20:	cmp	r0, #32
   2ad24:	bhi	2ad38 <main@@Base+0x14e9c>
   2ad28:	mov	r0, r8
   2ad2c:	mov	r2, r9
   2ad30:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2ad34:	mov	r4, r0
   2ad38:	cmp	r4, r9
   2ad3c:	mov	r2, r9
   2ad40:	beq	2ad84 <main@@Base+0x14ee8>
   2ad44:	ldrb	r0, [r4]
   2ad48:	cmp	r0, #125	; 0x7d
   2ad4c:	bne	2ad80 <main@@Base+0x14ee4>
   2ad50:	add	r1, r4, #1
   2ad54:	sub	r0, r9, r1
   2ad58:	cmp	r0, #2
   2ad5c:	blt	2b3a8 <main@@Base+0x1550c>
   2ad60:	ldrb	r0, [r1]
   2ad64:	cmp	r0, #32
   2ad68:	bhi	2b334 <main@@Base+0x15498>
   2ad6c:	bne	2b3a8 <main@@Base+0x1550c>
   2ad70:	ldrb	r0, [r4, #2]!
   2ad74:	cmp	r0, #32
   2ad78:	bhi	2a7b0 <main@@Base+0x14914>
   2ad7c:	b	2b3a8 <main@@Base+0x1550c>
   2ad80:	mov	r2, r4
   2ad84:	str	r5, [sp, #12]
   2ad88:	cmp	r2, r9
   2ad8c:	mov	sl, r9
   2ad90:	beq	2adc0 <main@@Base+0x14f24>
   2ad94:	ldrb	r0, [r2]
   2ad98:	cmp	r0, #34	; 0x22
   2ad9c:	bne	2ada8 <main@@Base+0x14f0c>
   2ada0:	add	sl, r2, #1
   2ada4:	b	2adc0 <main@@Base+0x14f24>
   2ada8:	mov	r1, r2
   2adac:	mov	r0, r8
   2adb0:	mov	r2, r9
   2adb4:	mov	r3, #5
   2adb8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2adbc:	mov	sl, r0
   2adc0:	sub	r0, r9, sl
   2adc4:	mov	r1, #8
   2adc8:	cmp	r0, #8
   2adcc:	movcs	r0, r1
   2add0:	and	r0, r0, #15
   2add4:	sub	r1, r0, #1
   2add8:	cmp	r1, #7
   2addc:	bhi	2b010 <main@@Base+0x15174>
   2ade0:	add	r6, pc, #36	; 0x24
   2ade4:	mov	r0, #0
   2ade8:	mov	ip, #0
   2adec:	mov	lr, #0
   2adf0:	mov	r2, #0
   2adf4:	mov	r3, #0
   2adf8:	mov	r4, #0
   2adfc:	mov	r5, #0
   2ae00:	mov	r7, #0
   2ae04:	ldr	r1, [r6, r1, lsl #2]
   2ae08:	add	pc, r6, r1
   2ae0c:	andeq	r0, r0, r4, rrx
   2ae10:	andeq	r0, r0, ip, asr r0
   2ae14:	andeq	r0, r0, r4, asr r0
   2ae18:	andeq	r0, r0, ip, asr #32
   2ae1c:	andeq	r0, r0, r0, asr #32
   2ae20:	andeq	r0, r0, r4, lsr r0
   2ae24:	andeq	r0, r0, r4, lsr #32
   2ae28:	andeq	r0, r0, r0, lsr #32
   2ae2c:	ldrb	ip, [sl, #7]
   2ae30:	ldrb	r1, [sl, #6]
   2ae34:	mov	lr, r0
   2ae38:	orr	r1, ip, r1, lsl #8
   2ae3c:	mov	r0, r1
   2ae40:	ldrb	r1, [sl, #5]
   2ae44:	mov	r2, lr
   2ae48:	orr	r0, r0, r1, lsl #16
   2ae4c:	ldrb	r1, [sl, #4]
   2ae50:	mov	r3, r2
   2ae54:	orr	r0, r0, r1, lsl #24
   2ae58:	ldrb	r1, [sl, #3]
   2ae5c:	orr	r4, r1, r3
   2ae60:	ldrb	r1, [sl, #2]
   2ae64:	orr	r5, r4, r1, lsl #8
   2ae68:	ldrb	r1, [sl, #1]
   2ae6c:	orr	r7, r5, r1, lsl #16
   2ae70:	movw	r1, #24948	; 0x6174
   2ae74:	movw	r2, #28530	; 0x6f72
   2ae78:	movt	r1, #25695	; 0x645f
   2ae7c:	movt	r2, #29559	; 0x7377
   2ae80:	eor	r0, r0, r1
   2ae84:	ldrb	r1, [sl]
   2ae88:	orr	r1, r7, r1, lsl #24
   2ae8c:	eor	r1, r1, r2
   2ae90:	orrs	r0, r0, r1
   2ae94:	bne	2b010 <main@@Base+0x15174>
   2ae98:	add	r1, sl, #8
   2ae9c:	mov	r2, #8
   2aea0:	sub	r0, r9, r1
   2aea4:	cmp	r0, #8
   2aea8:	movcs	r0, r2
   2aeac:	and	r0, r0, #15
   2aeb0:	sub	r2, r0, #1
   2aeb4:	cmp	r2, #7
   2aeb8:	bhi	2b01c <main@@Base+0x15180>
   2aebc:	add	r6, pc, #40	; 0x28
   2aec0:	mov	r0, #0
   2aec4:	mov	lr, #0
   2aec8:	mov	r4, #0
   2aecc:	mov	r3, #0
   2aed0:	mov	r5, #0
   2aed4:	mov	r7, #0
   2aed8:	ldr	ip, [r6, r2, lsl #2]
   2aedc:	mov	r2, #0
   2aee0:	str	r2, [sp, #8]
   2aee4:	mov	r2, #0
   2aee8:	add	pc, r6, ip
   2aeec:	andeq	r0, r0, ip, rrx
   2aef0:	andeq	r0, r0, r4, rrx
   2aef4:	andeq	r0, r0, ip, asr r0
   2aef8:	andeq	r0, r0, r4, asr r0
   2aefc:	andeq	r0, r0, r8, asr #32
   2af00:	andeq	r0, r0, ip, lsr r0
   2af04:	andeq	r0, r0, r8, lsr #32
   2af08:	andeq	r0, r0, r0, lsr #32
   2af0c:	ldrb	r2, [sl, #15]
   2af10:	str	r2, [sp, #8]
   2af14:	ldrb	r2, [sl, #14]
   2af18:	ldr	r3, [sp, #8]
   2af1c:	mov	lr, r0
   2af20:	orr	r2, r3, r2, lsl #8
   2af24:	mov	r0, r2
   2af28:	ldrb	r2, [sl, #13]
   2af2c:	mov	r4, lr
   2af30:	orr	r0, r0, r2, lsl #16
   2af34:	ldrb	r2, [sl, #12]
   2af38:	mov	r3, r4
   2af3c:	orr	r0, r0, r2, lsl #24
   2af40:	ldrb	r2, [sl, #11]
   2af44:	orr	r2, r2, r3
   2af48:	ldrb	r3, [sl, #10]
   2af4c:	orr	r5, r2, r3, lsl #8
   2af50:	ldrb	r2, [sl, #9]
   2af54:	orr	r7, r5, r2, lsl #16
   2af58:	movw	r2, #24941	; 0x616d
   2af5c:	movw	r3, #25451	; 0x636b
   2af60:	movt	r2, #24420	; 0x5f64
   2af64:	movt	r3, #29793	; 0x7461
   2af68:	eor	r0, r0, r2
   2af6c:	ldrb	r2, [r1]
   2af70:	orr	r2, r7, r2, lsl #24
   2af74:	eor	r2, r2, r3
   2af78:	orrs	r0, r0, r2
   2af7c:	bne	2b01c <main@@Base+0x15180>
   2af80:	add	r4, sl, #16
   2af84:	mov	r1, #8
   2af88:	sub	r0, r9, r4
   2af8c:	cmp	r0, #8
   2af90:	movcc	r1, r0
   2af94:	and	r2, r1, #15
   2af98:	sub	r1, r2, #3
   2af9c:	cmp	r1, #6
   2afa0:	bcs	2b024 <main@@Base+0x15188>
   2afa4:	ldrb	r1, [sl, #18]
   2afa8:	lsl	r1, r1, #8
   2afac:	ldrb	r2, [sl, #17]
   2afb0:	orr	r1, r1, r2, lsl #16
   2afb4:	ldrb	r2, [r4]
   2afb8:	bic	r1, r1, #255	; 0xff
   2afbc:	orr	r1, r1, r2, lsl #24
   2afc0:	movw	r2, #25856	; 0x6500
   2afc4:	movt	r2, #24935	; 0x6167
   2afc8:	teq	r1, r2
   2afcc:	bne	2b098 <main@@Base+0x151fc>
   2afd0:	cmp	r0, #4
   2afd4:	blt	2b098 <main@@Base+0x151fc>
   2afd8:	ldrb	r0, [sl, #19]
   2afdc:	cmp	r0, #34	; 0x22
   2afe0:	bne	2b098 <main@@Base+0x151fc>
   2afe4:	add	r1, sl, #20
   2afe8:	sub	r0, r9, r1
   2afec:	cmp	r0, #2
   2aff0:	blt	2b04c <main@@Base+0x151b0>
   2aff4:	ldrb	r0, [r1]
   2aff8:	cmp	r0, #32
   2affc:	bls	2b03c <main@@Base+0x151a0>
   2b000:	mov	sl, r1
   2b004:	cmp	sl, r9
   2b008:	bne	2b064 <main@@Base+0x151c8>
   2b00c:	b	2b178 <main@@Base+0x152dc>
   2b010:	mov	r0, r8
   2b014:	mov	r1, sl
   2b018:	b	2b0a0 <main@@Base+0x15204>
   2b01c:	mov	r0, r8
   2b020:	b	2b0a0 <main@@Base+0x15204>
   2b024:	mov	r1, #0
   2b028:	cmp	r2, #1
   2b02c:	beq	2afb4 <main@@Base+0x15118>
   2b030:	cmp	r2, #2
   2b034:	beq	2afac <main@@Base+0x15110>
   2b038:	b	2b098 <main@@Base+0x151fc>
   2b03c:	bne	2b04c <main@@Base+0x151b0>
   2b040:	ldrb	r0, [sl, #21]!
   2b044:	cmp	r0, #32
   2b048:	bhi	2b05c <main@@Base+0x151c0>
   2b04c:	mov	r0, r8
   2b050:	mov	r2, r9
   2b054:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b058:	mov	sl, r0
   2b05c:	cmp	sl, r9
   2b060:	beq	2b178 <main@@Base+0x152dc>
   2b064:	ldrb	r0, [sl]
   2b068:	cmp	r0, #58	; 0x3a
   2b06c:	bne	2b178 <main@@Base+0x152dc>
   2b070:	add	r1, sl, #1
   2b074:	sub	r0, r9, r1
   2b078:	cmp	r0, #2
   2b07c:	blt	2b1a0 <main@@Base+0x15304>
   2b080:	ldrb	r0, [r1]
   2b084:	cmp	r0, #32
   2b088:	bls	2b190 <main@@Base+0x152f4>
   2b08c:	mov	sl, r1
   2b090:	cmp	r4, sl
   2b094:	bne	2b1b8 <main@@Base+0x1531c>
   2b098:	mov	r0, r8
   2b09c:	mov	r1, r4
   2b0a0:	mov	r2, r9
   2b0a4:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   2b0a8:	ldr	r5, [sp, #12]
   2b0ac:	mov	r4, r0
   2b0b0:	sub	r0, r9, r4
   2b0b4:	cmp	r0, #2
   2b0b8:	blt	2b0ec <main@@Base+0x15250>
   2b0bc:	ldrb	r0, [r4]
   2b0c0:	cmp	r0, #32
   2b0c4:	bls	2b0d8 <main@@Base+0x1523c>
   2b0c8:	mov	r2, r4
   2b0cc:	cmp	r2, r9
   2b0d0:	bne	2b108 <main@@Base+0x1526c>
   2b0d4:	b	2b308 <main@@Base+0x1546c>
   2b0d8:	bne	2b0ec <main@@Base+0x15250>
   2b0dc:	mov	r2, r4
   2b0e0:	ldrb	r0, [r2, #1]!
   2b0e4:	cmp	r0, #32
   2b0e8:	bhi	2b100 <main@@Base+0x15264>
   2b0ec:	mov	r0, r8
   2b0f0:	mov	r1, r4
   2b0f4:	mov	r2, r9
   2b0f8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b0fc:	mov	r2, r0
   2b100:	cmp	r2, r9
   2b104:	beq	2b308 <main@@Base+0x1546c>
   2b108:	ldrb	r0, [r2]
   2b10c:	cmp	r0, #44	; 0x2c
   2b110:	bne	2b310 <main@@Base+0x15474>
   2b114:	add	r1, r2, #1
   2b118:	sub	r0, r9, r1
   2b11c:	cmp	r0, #2
   2b120:	blt	2b150 <main@@Base+0x152b4>
   2b124:	ldrb	r0, [r1]
   2b128:	cmp	r0, #32
   2b12c:	bls	2b140 <main@@Base+0x152a4>
   2b130:	mov	r2, r1
   2b134:	cmp	r2, r9
   2b138:	bne	2b168 <main@@Base+0x152cc>
   2b13c:	b	2b33c <main@@Base+0x154a0>
   2b140:	bne	2b150 <main@@Base+0x152b4>
   2b144:	ldrb	r0, [r2, #2]!
   2b148:	cmp	r0, #32
   2b14c:	bhi	2b160 <main@@Base+0x152c4>
   2b150:	mov	r0, r8
   2b154:	mov	r2, r9
   2b158:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b15c:	mov	r2, r0
   2b160:	cmp	r2, r9
   2b164:	beq	2b33c <main@@Base+0x154a0>
   2b168:	ldrb	r0, [r2]
   2b16c:	cmp	r0, #125	; 0x7d
   2b170:	bne	2ad88 <main@@Base+0x14eec>
   2b174:	b	2b318 <main@@Base+0x1547c>
   2b178:	mov	r0, r8
   2b17c:	mov	r1, sl
   2b180:	mov	r2, r9
   2b184:	mov	r3, #4
   2b188:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b18c:	b	2b1ac <main@@Base+0x15310>
   2b190:	bne	2b1a0 <main@@Base+0x15304>
   2b194:	ldrb	r0, [sl, #2]!
   2b198:	cmp	r0, #32
   2b19c:	bhi	2b1b0 <main@@Base+0x15314>
   2b1a0:	mov	r0, r8
   2b1a4:	mov	r2, r9
   2b1a8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b1ac:	mov	sl, r0
   2b1b0:	cmp	r4, sl
   2b1b4:	beq	2b098 <main@@Base+0x151fc>
   2b1b8:	mov	r6, #0
   2b1bc:	cmp	sl, r9
   2b1c0:	str	r6, [sp, #28]
   2b1c4:	str	r6, [sp, #24]
   2b1c8:	str	r6, [sp, #16]
   2b1cc:	str	r6, [sp, #20]
   2b1d0:	beq	2b230 <main@@Base+0x15394>
   2b1d4:	add	r0, sp, #24
   2b1d8:	mov	r1, sl
   2b1dc:	mov	r2, r9
   2b1e0:	add	r3, sp, #20
   2b1e4:	str	r0, [sp]
   2b1e8:	mov	r0, r8
   2b1ec:	bl	363e0 <flatcc_json_parser_integer@@Base>
   2b1f0:	cmp	r0, sl
   2b1f4:	beq	2b240 <main@@Base+0x153a4>
   2b1f8:	ldr	r2, [sp, #20]
   2b1fc:	mov	r4, r0
   2b200:	ldr	r0, [sp, #24]
   2b204:	ldr	r1, [sp, #28]
   2b208:	cmp	r2, #0
   2b20c:	beq	2b250 <main@@Base+0x153b4>
   2b210:	subs	r2, r0, #-2147483647	; 0x80000001
   2b214:	sbcs	r1, r1, #0
   2b218:	bcc	2b280 <main@@Base+0x153e4>
   2b21c:	mov	r0, r8
   2b220:	mov	r1, r4
   2b224:	mov	r2, r9
   2b228:	mov	r3, #8
   2b22c:	b	2b26c <main@@Base+0x153d0>
   2b230:	mov	r4, r9
   2b234:	cmp	sl, r4
   2b238:	bne	2b2cc <main@@Base+0x15430>
   2b23c:	b	2b298 <main@@Base+0x153fc>
   2b240:	mov	r4, sl
   2b244:	cmp	sl, r4
   2b248:	bne	2b2cc <main@@Base+0x15430>
   2b24c:	b	2b298 <main@@Base+0x153fc>
   2b250:	subs	r2, r0, #-2147483648	; 0x80000000
   2b254:	sbcs	r1, r1, #0
   2b258:	bcc	2b288 <main@@Base+0x153ec>
   2b25c:	mov	r0, r8
   2b260:	mov	r1, r4
   2b264:	mov	r2, r9
   2b268:	mov	r3, #7
   2b26c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b270:	mov	r4, r0
   2b274:	cmp	sl, r4
   2b278:	bne	2b2cc <main@@Base+0x15430>
   2b27c:	b	2b298 <main@@Base+0x153fc>
   2b280:	rsb	r6, r0, #0
   2b284:	b	2b28c <main@@Base+0x153f0>
   2b288:	mov	r6, r0
   2b28c:	str	r6, [sp, #16]
   2b290:	cmp	sl, r4
   2b294:	bne	2b2cc <main@@Base+0x15430>
   2b298:	add	r0, sp, #16
   2b29c:	mov	r1, sl
   2b2a0:	mov	r2, r9
   2b2a4:	str	r0, [sp]
   2b2a8:	mov	r0, r8
   2b2ac:	ldr	r3, [pc, #296]	; 2b3dc <main@@Base+0x15540>
   2b2b0:	add	r3, pc, r3
   2b2b4:	bl	23fd0 <main@@Base+0xe134>
   2b2b8:	mov	r4, r0
   2b2bc:	cmp	r0, sl
   2b2c0:	cmpne	r4, r9
   2b2c4:	beq	2b3d4 <main@@Base+0x15538>
   2b2c8:	ldr	r6, [sp, #16]
   2b2cc:	ldr	r5, [sp, #12]
   2b2d0:	cmp	r6, #0
   2b2d4:	bne	2b2e4 <main@@Base+0x15448>
   2b2d8:	ldrb	r0, [r8, #8]
   2b2dc:	tst	r0, #2
   2b2e0:	beq	2b0b0 <main@@Base+0x15214>
   2b2e4:	ldr	r0, [r8]
   2b2e8:	mov	r1, #0
   2b2ec:	mov	r2, #4
   2b2f0:	mov	r3, #4
   2b2f4:	bl	307e4 <flatcc_builder_table_add@@Base>
   2b2f8:	cmp	r0, #0
   2b2fc:	beq	2b3d4 <main@@Base+0x15538>
   2b300:	str	r6, [r0]
   2b304:	b	2b0b0 <main@@Base+0x15214>
   2b308:	mov	r4, r9
   2b30c:	b	2a7b0 <main@@Base+0x14914>
   2b310:	cmp	r0, #125	; 0x7d
   2b314:	bne	2b380 <main@@Base+0x154e4>
   2b318:	add	r1, r2, #1
   2b31c:	sub	r0, r9, r1
   2b320:	cmp	r0, #2
   2b324:	blt	2b3a8 <main@@Base+0x1550c>
   2b328:	ldrb	r0, [r1]
   2b32c:	cmp	r0, #32
   2b330:	bls	2b394 <main@@Base+0x154f8>
   2b334:	mov	r4, r1
   2b338:	b	2a7b0 <main@@Base+0x14914>
   2b33c:	mov	r0, r8
   2b340:	mov	r1, r9
   2b344:	b	2b388 <main@@Base+0x154ec>
   2b348:	mov	r0, r8
   2b34c:	mov	r1, r3
   2b350:	mov	r2, r9
   2b354:	mov	r3, #10
   2b358:	b	2a75c <main@@Base+0x148c0>
   2b35c:	bne	2b370 <main@@Base+0x154d4>
   2b360:	ldrb	r0, [r3, #2]!
   2b364:	cmp	r0, #32
   2b368:	mov	r4, r3
   2b36c:	bhi	2a764 <main@@Base+0x148c8>
   2b370:	mov	r0, r8
   2b374:	mov	r2, r9
   2b378:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b37c:	b	2a760 <main@@Base+0x148c4>
   2b380:	mov	r0, r8
   2b384:	mov	r1, r2
   2b388:	mov	r2, r9
   2b38c:	mov	r3, #10
   2b390:	b	2a7a8 <main@@Base+0x1490c>
   2b394:	bne	2b3a8 <main@@Base+0x1550c>
   2b398:	ldrb	r0, [r2, #2]!
   2b39c:	cmp	r0, #32
   2b3a0:	mov	r4, r2
   2b3a4:	bhi	2a7b0 <main@@Base+0x14914>
   2b3a8:	mov	r0, r8
   2b3ac:	mov	r2, r9
   2b3b0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b3b4:	b	2a7ac <main@@Base+0x14910>
   2b3b8:	mov	r1, r2
   2b3bc:	mov	r0, r8
   2b3c0:	mov	r2, r9
   2b3c4:	mov	r3, #33	; 0x21
   2b3c8:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b3cc:	ldr	r5, [sp, #12]
   2b3d0:	b	2a760 <main@@Base+0x148c4>
   2b3d4:	ldr	r5, [sp, #12]
   2b3d8:	b	2a7bc <main@@Base+0x14920>
   2b3dc:	andeq	r1, r3, ip, asr #32
   2b3e0:	andeq	r1, r3, r4, ror #12
   2b3e4:	add	r0, r0, #1
   2b3e8:	uxtb	r1, r0
   2b3ec:	cmp	r1, #12
   2b3f0:	movhi	r0, #0
   2b3f4:	bxhi	lr
   2b3f8:	ldr	r1, [pc, #12]	; 2b40c <main@@Base+0x15570>
   2b3fc:	sxtb	r0, r0
   2b400:	add	r1, pc, r1
   2b404:	ldr	r0, [r1, r0, lsl #2]
   2b408:	bx	lr
   2b40c:	andeq	sp, r1, r8, asr #3
   2b410:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b414:	add	fp, sp, #28
   2b418:	sub	sp, sp, #36	; 0x24
   2b41c:	mov	r5, r0
   2b420:	mov	r0, #0
   2b424:	mov	sl, r2
   2b428:	mov	r4, r1
   2b42c:	mov	r1, #4
   2b430:	mov	r2, #4
   2b434:	str	r3, [sp, #12]
   2b438:	str	r0, [r3]
   2b43c:	ldr	r0, [r5]
   2b440:	bl	2e0a4 <flatcc_builder_start_struct@@Base>
   2b444:	cmp	r0, #0
   2b448:	beq	2b4cc <main@@Base+0x15630>
   2b44c:	cmp	r4, sl
   2b450:	beq	2b488 <main@@Base+0x155ec>
   2b454:	ldrb	r1, [r4]
   2b458:	cmp	r1, #123	; 0x7b
   2b45c:	bne	2b488 <main@@Base+0x155ec>
   2b460:	add	r1, r4, #1
   2b464:	str	r0, [sp, #8]
   2b468:	sub	r0, sl, r1
   2b46c:	cmp	r0, #2
   2b470:	blt	2b500 <main@@Base+0x15664>
   2b474:	ldrb	r0, [r1]
   2b478:	cmp	r0, #32
   2b47c:	bls	2b4f0 <main@@Base+0x15654>
   2b480:	mov	r4, r1
   2b484:	b	2b510 <main@@Base+0x15674>
   2b488:	mov	r0, r5
   2b48c:	mov	r1, r4
   2b490:	mov	r2, sl
   2b494:	mov	r3, #21
   2b498:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b49c:	mov	r4, r0
   2b4a0:	cmp	r4, sl
   2b4a4:	mov	r1, sl
   2b4a8:	beq	2b4d0 <main@@Base+0x15634>
   2b4ac:	ldr	r0, [r5]
   2b4b0:	bl	2e18c <flatcc_builder_end_struct@@Base>
   2b4b4:	ldr	r1, [sp, #12]
   2b4b8:	cmp	r0, #0
   2b4bc:	str	r0, [r1]
   2b4c0:	mov	r1, r4
   2b4c4:	bne	2b4e4 <main@@Base+0x15648>
   2b4c8:	b	2b4d0 <main@@Base+0x15634>
   2b4cc:	mov	r1, r4
   2b4d0:	mov	r0, r5
   2b4d4:	mov	r2, sl
   2b4d8:	mov	r3, #33	; 0x21
   2b4dc:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b4e0:	mov	r4, r0
   2b4e4:	mov	r0, r4
   2b4e8:	sub	sp, fp, #28
   2b4ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b4f0:	bne	2b500 <main@@Base+0x15664>
   2b4f4:	ldrb	r0, [r4, #2]!
   2b4f8:	cmp	r0, #32
   2b4fc:	bhi	2b510 <main@@Base+0x15674>
   2b500:	mov	r0, r5
   2b504:	mov	r2, sl
   2b508:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b50c:	mov	r4, r0
   2b510:	cmp	r4, sl
   2b514:	mov	r3, sl
   2b518:	beq	2b55c <main@@Base+0x156c0>
   2b51c:	ldrb	r0, [r4]
   2b520:	cmp	r0, #125	; 0x7d
   2b524:	bne	2b558 <main@@Base+0x156bc>
   2b528:	add	r1, r4, #1
   2b52c:	sub	r0, sl, r1
   2b530:	cmp	r0, #2
   2b534:	blt	2ba30 <main@@Base+0x15b94>
   2b538:	ldrb	r0, [r1]
   2b53c:	cmp	r0, #32
   2b540:	bhi	2b9f4 <main@@Base+0x15b58>
   2b544:	bne	2ba30 <main@@Base+0x15b94>
   2b548:	ldrb	r0, [r4, #2]!
   2b54c:	cmp	r0, #32
   2b550:	bhi	2b4a0 <main@@Base+0x15604>
   2b554:	b	2ba30 <main@@Base+0x15b94>
   2b558:	mov	r3, r4
   2b55c:	cmp	r3, sl
   2b560:	mov	r9, sl
   2b564:	beq	2b594 <main@@Base+0x156f8>
   2b568:	ldrb	r0, [r3]
   2b56c:	cmp	r0, #34	; 0x22
   2b570:	bne	2b57c <main@@Base+0x156e0>
   2b574:	add	r9, r3, #1
   2b578:	b	2b594 <main@@Base+0x156f8>
   2b57c:	mov	r1, r3
   2b580:	mov	r0, r5
   2b584:	mov	r2, sl
   2b588:	mov	r3, #5
   2b58c:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b590:	mov	r9, r0
   2b594:	sub	r0, sl, r9
   2b598:	mov	r1, #8
   2b59c:	cmp	r0, #8
   2b5a0:	movcs	r0, r1
   2b5a4:	and	r0, r0, #15
   2b5a8:	sub	r1, r0, #1
   2b5ac:	cmp	r1, #7
   2b5b0:	bhi	2b700 <main@@Base+0x15864>
   2b5b4:	mov	r8, r5
   2b5b8:	add	r5, pc, #36	; 0x24
   2b5bc:	mov	r0, #0
   2b5c0:	mov	ip, #0
   2b5c4:	mov	lr, #0
   2b5c8:	mov	r2, #0
   2b5cc:	mov	r3, #0
   2b5d0:	mov	r7, #0
   2b5d4:	mov	r6, #0
   2b5d8:	mov	r4, #0
   2b5dc:	ldr	r1, [r5, r1, lsl #2]
   2b5e0:	add	pc, r5, r1
   2b5e4:	andeq	r0, r0, r4, rrx
   2b5e8:	andeq	r0, r0, ip, asr r0
   2b5ec:	andeq	r0, r0, r4, asr r0
   2b5f0:	andeq	r0, r0, ip, asr #32
   2b5f4:	andeq	r0, r0, r0, asr #32
   2b5f8:	andeq	r0, r0, r4, lsr r0
   2b5fc:	andeq	r0, r0, r4, lsr #32
   2b600:	andeq	r0, r0, r0, lsr #32
   2b604:	ldrb	ip, [r9, #7]
   2b608:	ldrb	r1, [r9, #6]
   2b60c:	mov	lr, r0
   2b610:	orr	r1, ip, r1, lsl #8
   2b614:	mov	r0, r1
   2b618:	ldrb	r1, [r9, #5]
   2b61c:	mov	r2, lr
   2b620:	orr	r0, r0, r1, lsl #16
   2b624:	ldrb	r1, [r9, #4]
   2b628:	mov	r3, r2
   2b62c:	orr	r0, r0, r1, lsl #24
   2b630:	ldrb	r1, [r9, #3]
   2b634:	orr	r7, r1, r3
   2b638:	ldrb	r1, [r9, #2]
   2b63c:	orr	r6, r7, r1, lsl #8
   2b640:	ldrb	r1, [r9, #1]
   2b644:	orr	r4, r6, r1, lsl #16
   2b648:	movw	r1, #29285	; 0x7265
   2b64c:	movw	r2, #28523	; 0x6f6b
   2b650:	mov	r5, r8
   2b654:	movt	r1, #29535	; 0x735f
   2b658:	movt	r2, #25199	; 0x626f
   2b65c:	eor	r0, r0, r1
   2b660:	ldrb	r1, [r9]
   2b664:	orr	r1, r4, r1, lsl #24
   2b668:	eor	r1, r1, r2
   2b66c:	orrs	r0, r0, r1
   2b670:	bne	2b700 <main@@Base+0x15864>
   2b674:	add	r8, r9, #8
   2b678:	mov	r1, #8
   2b67c:	sub	r0, sl, r8
   2b680:	cmp	r0, #8
   2b684:	movcc	r1, r0
   2b688:	and	r2, r1, #15
   2b68c:	sub	r1, r2, #2
   2b690:	cmp	r1, #7
   2b694:	bcs	2b70c <main@@Base+0x15870>
   2b698:	ldrb	r1, [r9, #9]
   2b69c:	lsl	r2, r1, #16
   2b6a0:	mov	r1, #0
   2b6a4:	ldrb	r3, [r8]
   2b6a8:	orr	r2, r2, r3, lsl #24
   2b6ac:	movw	r3, #0
   2b6b0:	movt	r3, #24932	; 0x6164
   2b6b4:	eor	r2, r2, r3
   2b6b8:	orrs	r1, r1, r2
   2b6bc:	bne	2b77c <main@@Base+0x158e0>
   2b6c0:	cmp	r0, #3
   2b6c4:	blt	2b77c <main@@Base+0x158e0>
   2b6c8:	ldrb	r0, [r9, #10]
   2b6cc:	cmp	r0, #34	; 0x22
   2b6d0:	bne	2b77c <main@@Base+0x158e0>
   2b6d4:	add	r1, r9, #11
   2b6d8:	sub	r0, sl, r1
   2b6dc:	cmp	r0, #2
   2b6e0:	blt	2b730 <main@@Base+0x15894>
   2b6e4:	ldrb	r0, [r1]
   2b6e8:	cmp	r0, #32
   2b6ec:	bls	2b720 <main@@Base+0x15884>
   2b6f0:	mov	r9, r1
   2b6f4:	cmp	r9, sl
   2b6f8:	bne	2b748 <main@@Base+0x158ac>
   2b6fc:	b	2b858 <main@@Base+0x159bc>
   2b700:	mov	r0, r5
   2b704:	mov	r1, r9
   2b708:	b	2b784 <main@@Base+0x158e8>
   2b70c:	cmp	r2, #1
   2b710:	mov	r1, #0
   2b714:	mov	r2, #0
   2b718:	beq	2b6a4 <main@@Base+0x15808>
   2b71c:	b	2b77c <main@@Base+0x158e0>
   2b720:	bne	2b730 <main@@Base+0x15894>
   2b724:	ldrb	r0, [r9, #12]!
   2b728:	cmp	r0, #32
   2b72c:	bhi	2b740 <main@@Base+0x158a4>
   2b730:	mov	r0, r5
   2b734:	mov	r2, sl
   2b738:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b73c:	mov	r9, r0
   2b740:	cmp	r9, sl
   2b744:	beq	2b858 <main@@Base+0x159bc>
   2b748:	ldrb	r0, [r9]
   2b74c:	cmp	r0, #58	; 0x3a
   2b750:	bne	2b858 <main@@Base+0x159bc>
   2b754:	add	r1, r9, #1
   2b758:	sub	r0, sl, r1
   2b75c:	cmp	r0, #2
   2b760:	blt	2b880 <main@@Base+0x159e4>
   2b764:	ldrb	r0, [r1]
   2b768:	cmp	r0, #32
   2b76c:	bls	2b870 <main@@Base+0x159d4>
   2b770:	mov	r9, r1
   2b774:	cmp	r8, r9
   2b778:	bne	2b898 <main@@Base+0x159fc>
   2b77c:	mov	r0, r5
   2b780:	mov	r1, r8
   2b784:	mov	r2, sl
   2b788:	bl	346f0 <flatcc_json_parser_unmatched_symbol@@Base>
   2b78c:	mov	r2, r0
   2b790:	sub	r0, sl, r2
   2b794:	cmp	r0, #2
   2b798:	blt	2b7cc <main@@Base+0x15930>
   2b79c:	ldrb	r0, [r2]
   2b7a0:	cmp	r0, #32
   2b7a4:	bls	2b7b8 <main@@Base+0x1591c>
   2b7a8:	mov	r3, r2
   2b7ac:	cmp	r3, sl
   2b7b0:	bne	2b7e8 <main@@Base+0x1594c>
   2b7b4:	b	2b9c8 <main@@Base+0x15b2c>
   2b7b8:	bne	2b7cc <main@@Base+0x15930>
   2b7bc:	mov	r3, r2
   2b7c0:	ldrb	r0, [r3, #1]!
   2b7c4:	cmp	r0, #32
   2b7c8:	bhi	2b7e0 <main@@Base+0x15944>
   2b7cc:	mov	r1, r2
   2b7d0:	mov	r0, r5
   2b7d4:	mov	r2, sl
   2b7d8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b7dc:	mov	r3, r0
   2b7e0:	cmp	r3, sl
   2b7e4:	beq	2b9c8 <main@@Base+0x15b2c>
   2b7e8:	ldrb	r0, [r3]
   2b7ec:	cmp	r0, #44	; 0x2c
   2b7f0:	bne	2b9d0 <main@@Base+0x15b34>
   2b7f4:	add	r1, r3, #1
   2b7f8:	sub	r0, sl, r1
   2b7fc:	cmp	r0, #2
   2b800:	blt	2b830 <main@@Base+0x15994>
   2b804:	ldrb	r0, [r1]
   2b808:	cmp	r0, #32
   2b80c:	bls	2b820 <main@@Base+0x15984>
   2b810:	mov	r3, r1
   2b814:	cmp	r3, sl
   2b818:	bne	2b848 <main@@Base+0x159ac>
   2b81c:	b	2b9fc <main@@Base+0x15b60>
   2b820:	bne	2b830 <main@@Base+0x15994>
   2b824:	ldrb	r0, [r3, #2]!
   2b828:	cmp	r0, #32
   2b82c:	bhi	2b840 <main@@Base+0x159a4>
   2b830:	mov	r0, r5
   2b834:	mov	r2, sl
   2b838:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b83c:	mov	r3, r0
   2b840:	cmp	r3, sl
   2b844:	beq	2b9fc <main@@Base+0x15b60>
   2b848:	ldrb	r0, [r3]
   2b84c:	cmp	r0, #125	; 0x7d
   2b850:	bne	2b55c <main@@Base+0x156c0>
   2b854:	b	2b9d8 <main@@Base+0x15b3c>
   2b858:	mov	r0, r5
   2b85c:	mov	r1, r9
   2b860:	mov	r2, sl
   2b864:	mov	r3, #4
   2b868:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b86c:	b	2b88c <main@@Base+0x159f0>
   2b870:	bne	2b880 <main@@Base+0x159e4>
   2b874:	ldrb	r0, [r9, #2]!
   2b878:	cmp	r0, #32
   2b87c:	bhi	2b890 <main@@Base+0x159f4>
   2b880:	mov	r0, r5
   2b884:	mov	r2, sl
   2b888:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2b88c:	mov	r9, r0
   2b890:	cmp	r8, r9
   2b894:	beq	2b77c <main@@Base+0x158e0>
   2b898:	mov	r8, #0
   2b89c:	cmp	r9, sl
   2b8a0:	str	r8, [sp, #28]
   2b8a4:	str	r8, [sp, #24]
   2b8a8:	str	r8, [sp, #16]
   2b8ac:	str	r8, [sp, #20]
   2b8b0:	beq	2b910 <main@@Base+0x15a74>
   2b8b4:	add	r0, sp, #24
   2b8b8:	mov	r1, r9
   2b8bc:	mov	r2, sl
   2b8c0:	add	r3, sp, #20
   2b8c4:	str	r0, [sp]
   2b8c8:	mov	r0, r5
   2b8cc:	bl	363e0 <flatcc_json_parser_integer@@Base>
   2b8d0:	cmp	r0, r9
   2b8d4:	beq	2b924 <main@@Base+0x15a88>
   2b8d8:	ldr	r3, [sp, #20]
   2b8dc:	mov	r2, r0
   2b8e0:	ldr	r0, [sp, #24]
   2b8e4:	ldr	r1, [sp, #28]
   2b8e8:	cmp	r3, #0
   2b8ec:	beq	2b938 <main@@Base+0x15a9c>
   2b8f0:	subs	r3, r0, #-2147483647	; 0x80000001
   2b8f4:	sbcs	r1, r1, #0
   2b8f8:	bcc	2b96c <main@@Base+0x15ad0>
   2b8fc:	mov	r1, r2
   2b900:	mov	r0, r5
   2b904:	mov	r2, sl
   2b908:	mov	r3, #8
   2b90c:	b	2b954 <main@@Base+0x15ab8>
   2b910:	ldr	r0, [sp, #8]
   2b914:	mov	r2, sl
   2b918:	cmp	r9, r2
   2b91c:	bne	2b9c0 <main@@Base+0x15b24>
   2b920:	b	2b988 <main@@Base+0x15aec>
   2b924:	ldr	r0, [sp, #8]
   2b928:	mov	r2, r9
   2b92c:	cmp	r9, r2
   2b930:	bne	2b9c0 <main@@Base+0x15b24>
   2b934:	b	2b988 <main@@Base+0x15aec>
   2b938:	subs	r3, r0, #-2147483648	; 0x80000000
   2b93c:	sbcs	r1, r1, #0
   2b940:	bcc	2b974 <main@@Base+0x15ad8>
   2b944:	mov	r1, r2
   2b948:	mov	r0, r5
   2b94c:	mov	r2, sl
   2b950:	mov	r3, #7
   2b954:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2b958:	mov	r2, r0
   2b95c:	ldr	r0, [sp, #8]
   2b960:	cmp	r9, r2
   2b964:	bne	2b9c0 <main@@Base+0x15b24>
   2b968:	b	2b988 <main@@Base+0x15aec>
   2b96c:	rsb	r8, r0, #0
   2b970:	b	2b978 <main@@Base+0x15adc>
   2b974:	mov	r8, r0
   2b978:	ldr	r0, [sp, #8]
   2b97c:	str	r8, [sp, #16]
   2b980:	cmp	r9, r2
   2b984:	bne	2b9c0 <main@@Base+0x15b24>
   2b988:	add	r0, sp, #16
   2b98c:	mov	r1, r9
   2b990:	mov	r2, sl
   2b994:	str	r0, [sp]
   2b998:	mov	r0, r5
   2b99c:	ldr	r3, [pc, #176]	; 2ba54 <main@@Base+0x15bb8>
   2b9a0:	add	r3, pc, r3
   2b9a4:	bl	23fd0 <main@@Base+0xe134>
   2b9a8:	mov	r2, r0
   2b9ac:	cmp	r0, r9
   2b9b0:	cmpne	r2, sl
   2b9b4:	beq	2ba40 <main@@Base+0x15ba4>
   2b9b8:	ldr	r8, [sp, #16]
   2b9bc:	ldr	r0, [sp, #8]
   2b9c0:	str	r8, [r0]
   2b9c4:	b	2b790 <main@@Base+0x158f4>
   2b9c8:	mov	r1, sl
   2b9cc:	b	2b4d0 <main@@Base+0x15634>
   2b9d0:	cmp	r0, #125	; 0x7d
   2b9d4:	bne	2ba08 <main@@Base+0x15b6c>
   2b9d8:	add	r1, r3, #1
   2b9dc:	sub	r0, sl, r1
   2b9e0:	cmp	r0, #2
   2b9e4:	blt	2ba30 <main@@Base+0x15b94>
   2b9e8:	ldrb	r0, [r1]
   2b9ec:	cmp	r0, #32
   2b9f0:	bls	2ba1c <main@@Base+0x15b80>
   2b9f4:	mov	r4, r1
   2b9f8:	b	2b4a0 <main@@Base+0x15604>
   2b9fc:	mov	r0, r5
   2ba00:	mov	r1, sl
   2ba04:	b	2ba10 <main@@Base+0x15b74>
   2ba08:	mov	r0, r5
   2ba0c:	mov	r1, r3
   2ba10:	mov	r2, sl
   2ba14:	mov	r3, #10
   2ba18:	b	2b498 <main@@Base+0x155fc>
   2ba1c:	bne	2ba30 <main@@Base+0x15b94>
   2ba20:	ldrb	r0, [r3, #2]!
   2ba24:	cmp	r0, #32
   2ba28:	mov	r4, r3
   2ba2c:	bhi	2b4a0 <main@@Base+0x15604>
   2ba30:	mov	r0, r5
   2ba34:	mov	r2, sl
   2ba38:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2ba3c:	b	2b49c <main@@Base+0x15600>
   2ba40:	mov	r1, r2
   2ba44:	mov	r0, r5
   2ba48:	mov	r2, sl
   2ba4c:	mov	r3, #33	; 0x21
   2ba50:	b	2b498 <main@@Base+0x155fc>
   2ba54:	andeq	r0, r3, r4, ror r9
   2ba58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ba5c:	add	fp, sp, #28
   2ba60:	sub	sp, sp, #44	; 0x2c
   2ba64:	mov	r6, r2
   2ba68:	ldr	r2, [fp, #8]
   2ba6c:	mov	r5, r0
   2ba70:	mov	r0, #0
   2ba74:	mov	sl, r3
   2ba78:	cmp	r1, r6
   2ba7c:	strh	r0, [r2]
   2ba80:	beq	2baac <main@@Base+0x15c10>
   2ba84:	ldrb	r0, [r1]
   2ba88:	cmp	r0, #34	; 0x22
   2ba8c:	bne	2ba98 <main@@Base+0x15bfc>
   2ba90:	add	r1, r1, #1
   2ba94:	b	2baac <main@@Base+0x15c10>
   2ba98:	mov	r0, r5
   2ba9c:	mov	r2, r6
   2baa0:	mov	r3, #5
   2baa4:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2baa8:	mov	r1, r0
   2baac:	sub	r0, r6, r1
   2bab0:	cmp	r0, #2
   2bab4:	blt	2bae8 <main@@Base+0x15c4c>
   2bab8:	ldrb	r0, [r1]
   2babc:	cmp	r0, #32
   2bac0:	bls	2bad4 <main@@Base+0x15c38>
   2bac4:	mov	r7, r1
   2bac8:	cmp	r7, r6
   2bacc:	bne	2bb00 <main@@Base+0x15c64>
   2bad0:	b	2bc10 <main@@Base+0x15d74>
   2bad4:	bne	2bae8 <main@@Base+0x15c4c>
   2bad8:	mov	r7, r1
   2badc:	ldrb	r0, [r7, #1]!
   2bae0:	cmp	r0, #32
   2bae4:	bhi	2baf8 <main@@Base+0x15c5c>
   2bae8:	mov	r0, r5
   2baec:	mov	r2, r6
   2baf0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   2baf4:	mov	r7, r0
   2baf8:	cmp	r7, r6
   2bafc:	beq	2bc10 <main@@Base+0x15d74>
   2bb00:	add	r0, sl, #4
   2bb04:	mov	r1, #0
   2bb08:	add	r8, sp, #32
   2bb0c:	add	r9, sp, #28
   2bb10:	str	sl, [sp, #16]
   2bb14:	str	r1, [sp, #20]
   2bb18:	str	r0, [sp, #12]
   2bb1c:	ldr	r4, [sl]
   2bb20:	mov	sl, r0
   2bb24:	add	r0, sp, #24
   2bb28:	mov	r1, r7
   2bb2c:	mov	r2, r6
   2bb30:	mov	r3, r9
   2bb34:	str	r8, [sp]
   2bb38:	str	r0, [sp, #4]
   2bb3c:	mov	r0, r5
   2bb40:	blx	r4
   2bb44:	cmp	r0, r6
   2bb48:	beq	2bc10 <main@@Base+0x15d74>
   2bb4c:	mov	r4, r0
   2bb50:	cmp	r0, r7
   2bb54:	bne	2bb68 <main@@Base+0x15ccc>
   2bb58:	ldr	r4, [sl], #4
   2bb5c:	cmp	r4, #0
   2bb60:	bne	2bb24 <main@@Base+0x15c88>
   2bb64:	b	2bc18 <main@@Base+0x15d7c>
   2bb68:	ldr	r0, [sp, #28]
   2bb6c:	cmp	r0, #0
   2bb70:	beq	2bb98 <main@@Base+0x15cfc>
   2bb74:	mov	r0, r5
   2bb78:	mov	r1, r4
   2bb7c:	mov	r2, r6
   2bb80:	mov	r3, #8
   2bb84:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2bb88:	ldr	sl, [sp, #16]
   2bb8c:	cmp	r0, r6
   2bb90:	bne	2bbe0 <main@@Base+0x15d44>
   2bb94:	b	2bc10 <main@@Base+0x15d74>
   2bb98:	ldr	r0, [sp, #32]
   2bb9c:	ldr	r1, [sp, #36]	; 0x24
   2bba0:	ldr	sl, [sp, #16]
   2bba4:	subs	r2, r0, #65536	; 0x10000
   2bba8:	sbcs	r1, r1, #0
   2bbac:	bcc	2bbd0 <main@@Base+0x15d34>
   2bbb0:	mov	r0, r5
   2bbb4:	mov	r1, r4
   2bbb8:	mov	r2, r6
   2bbbc:	mov	r3, #7
   2bbc0:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2bbc4:	cmp	r0, r6
   2bbc8:	bne	2bbe0 <main@@Base+0x15d44>
   2bbcc:	b	2bc10 <main@@Base+0x15d74>
   2bbd0:	str	r0, [sp, #20]
   2bbd4:	mov	r0, r4
   2bbd8:	cmp	r0, r6
   2bbdc:	beq	2bc10 <main@@Base+0x15d74>
   2bbe0:	ldr	r0, [fp, #8]
   2bbe4:	ldr	r2, [sp, #20]
   2bbe8:	mov	r7, r4
   2bbec:	mov	r1, r0
   2bbf0:	ldrh	r0, [r0]
   2bbf4:	add	r0, r0, r2
   2bbf8:	strh	r0, [r1]
   2bbfc:	ldr	r0, [sp, #24]
   2bc00:	cmp	r0, #0
   2bc04:	ldr	r0, [sp, #12]
   2bc08:	bne	2bb1c <main@@Base+0x15c80>
   2bc0c:	b	2bc30 <main@@Base+0x15d94>
   2bc10:	mov	r4, r6
   2bc14:	b	2bc30 <main@@Base+0x15d94>
   2bc18:	mov	r0, r5
   2bc1c:	mov	r1, r7
   2bc20:	mov	r2, r6
   2bc24:	mov	r3, #23
   2bc28:	bl	33ef8 <flatcc_json_parser_set_error@@Base>
   2bc2c:	mov	r4, r0
   2bc30:	mov	r0, r4
   2bc34:	sub	sp, fp, #28
   2bc38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bc3c:	push	{r4, r5, r6, sl, fp, lr}
   2bc40:	add	fp, sp, #16
   2bc44:	sub	sp, sp, #16
   2bc48:	mov	r5, r0
   2bc4c:	ldr	r0, [pc, #228]	; 2bd38 <main@@Base+0x15e9c>
   2bc50:	mov	r4, r1
   2bc54:	mov	r6, #1
   2bc58:	mov	r1, #0
   2bc5c:	mov	r3, #0
   2bc60:	mov	r2, r4
   2bc64:	add	r0, pc, r0
   2bc68:	stm	sp, {r0, r6}
   2bc6c:	mov	r0, r5
   2bc70:	bl	3c314 <flatcc_json_printer_float_struct_field@@Base>
   2bc74:	ldr	r0, [pc, #192]	; 2bd3c <main@@Base+0x15ea0>
   2bc78:	mov	r1, #1
   2bc7c:	mov	r2, r4
   2bc80:	mov	r3, #4
   2bc84:	add	r0, pc, r0
   2bc88:	stm	sp, {r0, r6}
   2bc8c:	mov	r0, r5
   2bc90:	bl	3c314 <flatcc_json_printer_float_struct_field@@Base>
   2bc94:	ldr	r0, [pc, #164]	; 2bd40 <main@@Base+0x15ea4>
   2bc98:	mov	r1, #2
   2bc9c:	mov	r2, r4
   2bca0:	mov	r3, #8
   2bca4:	add	r0, pc, r0
   2bca8:	stm	sp, {r0, r6}
   2bcac:	mov	r0, r5
   2bcb0:	bl	3c314 <flatcc_json_printer_float_struct_field@@Base>
   2bcb4:	ldr	r0, [pc, #136]	; 2bd44 <main@@Base+0x15ea8>
   2bcb8:	mov	r6, #5
   2bcbc:	mov	r1, #3
   2bcc0:	mov	r2, r4
   2bcc4:	mov	r3, #16
   2bcc8:	add	r0, pc, r0
   2bccc:	stm	sp, {r0, r6}
   2bcd0:	mov	r0, r5
   2bcd4:	bl	3c378 <flatcc_json_printer_double_struct_field@@Base>
   2bcd8:	ldr	r0, [pc, #104]	; 2bd48 <main@@Base+0x15eac>
   2bcdc:	ldr	r1, [pc, #104]	; 2bd4c <main@@Base+0x15eb0>
   2bce0:	mov	r2, r4
   2bce4:	mov	r3, #24
   2bce8:	add	r1, pc, r1
   2bcec:	add	r0, pc, r0
   2bcf0:	stm	sp, {r1, r6}
   2bcf4:	str	r0, [sp, #8]
   2bcf8:	mov	r0, r5
   2bcfc:	mov	r1, #4
   2bd00:	bl	3c66c <flatcc_json_printer_int8_enum_struct_field@@Base>
   2bd04:	ldr	r0, [pc, #68]	; 2bd50 <main@@Base+0x15eb4>
   2bd08:	ldr	r1, [pc, #68]	; 2bd54 <main@@Base+0x15eb8>
   2bd0c:	mov	r2, r4
   2bd10:	mov	r3, #26
   2bd14:	add	r1, pc, r1
   2bd18:	add	r0, pc, r0
   2bd1c:	stm	sp, {r1, r6}
   2bd20:	str	r0, [sp, #8]
   2bd24:	mov	r0, r5
   2bd28:	mov	r1, #5
   2bd2c:	bl	43cc0 <flatcc_json_printer_embedded_struct_field@@Base>
   2bd30:	sub	sp, fp, #16
   2bd34:	pop	{r4, r5, r6, sl, fp, pc}
   2bd38:			; <UNDEFINED> instruction: 0x0001c5b4
   2bd3c:	andeq	lr, r1, lr, lsr #22
   2bd40:	andeq	ip, r1, sp, lsr #14
   2bd44:	andeq	ip, r1, fp, lsl #14
   2bd48:	andeq	r0, r0, r4, rrx
   2bd4c:	strdeq	ip, [r1], -r1
   2bd50:	andeq	r0, r0, r4, lsl r2
   2bd54:	andeq	ip, r1, fp, asr #13
   2bd58:	push	{r4, r5, r6, r7, fp, lr}
   2bd5c:	add	fp, sp, #16
   2bd60:	mov	r4, r0
   2bd64:	mvn	r0, #0
   2bd68:	uxtb	r7, r1
   2bd6c:	uxtab	r0, r0, r1
   2bd70:	ands	r5, r0, r7
   2bd74:	movwne	r5, #1
   2bd78:	cmp	r1, #0
   2bd7c:	beq	2bdd8 <main@@Base+0x15f3c>
   2bd80:	ands	r0, r1, #244	; 0xf4
   2bd84:	bne	2bdd8 <main@@Base+0x15f3c>
   2bd88:	mov	r0, r4
   2bd8c:	mov	r1, r5
   2bd90:	bl	3a3a0 <flatcc_json_printer_delimit_enum_flags@@Base>
   2bd94:	mov	r6, #0
   2bd98:	tst	r7, #1
   2bd9c:	bne	2bde4 <main@@Base+0x15f48>
   2bda0:	tst	r7, #2
   2bda4:	bne	2be08 <main@@Base+0x15f6c>
   2bda8:	tst	r7, #8
   2bdac:	beq	2bdc8 <main@@Base+0x15f2c>
   2bdb0:	ldr	r2, [pc, #128]	; 2be38 <main@@Base+0x15f9c>
   2bdb4:	mov	r0, r4
   2bdb8:	mov	r1, r6
   2bdbc:	mov	r3, #4
   2bdc0:	add	r2, pc, r2
   2bdc4:	bl	3a3d4 <flatcc_json_printer_enum_flag@@Base>
   2bdc8:	mov	r0, r4
   2bdcc:	mov	r1, r5
   2bdd0:	pop	{r4, r5, r6, r7, fp, lr}
   2bdd4:	b	3a3a0 <flatcc_json_printer_delimit_enum_flags@@Base>
   2bdd8:	mov	r0, r4
   2bddc:	pop	{r4, r5, r6, r7, fp, lr}
   2bde0:	b	3a0a8 <flatcc_json_printer_int8@@Base>
   2bde4:	ldr	r2, [pc, #68]	; 2be30 <main@@Base+0x15f94>
   2bde8:	mov	r0, r4
   2bdec:	mov	r1, #0
   2bdf0:	mov	r3, #3
   2bdf4:	add	r2, pc, r2
   2bdf8:	bl	3a3d4 <flatcc_json_printer_enum_flag@@Base>
   2bdfc:	mov	r6, #1
   2be00:	tst	r7, #2
   2be04:	beq	2bda8 <main@@Base+0x15f0c>
   2be08:	ldr	r2, [pc, #36]	; 2be34 <main@@Base+0x15f98>
   2be0c:	mov	r0, r4
   2be10:	mov	r1, r6
   2be14:	mov	r3, #5
   2be18:	add	r2, pc, r2
   2be1c:	bl	3a3d4 <flatcc_json_printer_enum_flag@@Base>
   2be20:	add	r6, r6, #1
   2be24:	tst	r7, #8
   2be28:	bne	2bdb0 <main@@Base+0x15f14>
   2be2c:	b	2bdc8 <main@@Base+0x15f2c>
   2be30:	strdeq	ip, [r1], -r1
   2be34:	ldrdeq	ip, [r1], -r1
   2be38:	andeq	ip, r1, pc, lsr #12
   2be3c:	sub	r1, r1, #1
   2be40:	cmp	r1, #3
   2be44:	bhi	2be74 <main@@Base+0x15fd8>
   2be48:	add	r2, pc, #4
   2be4c:	ldr	r1, [r2, r1, lsl #2]
   2be50:	add	pc, r2, r1
   2be54:	andeq	r0, r0, r0, lsl r0
   2be58:	andeq	r0, r0, r0, lsr r0
   2be5c:	andeq	r0, r0, r0, asr #32
   2be60:	andeq	r0, r0, r0, asr r0
   2be64:	ldr	r1, [pc, #72]	; 2beb4 <main@@Base+0x16018>
   2be68:	mov	r2, #7
   2be6c:	add	r1, pc, r1
   2be70:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2be74:	ldr	r1, [pc, #72]	; 2bec4 <main@@Base+0x16028>
   2be78:	mov	r2, #4
   2be7c:	add	r1, pc, r1
   2be80:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2be84:	ldr	r1, [pc, #44]	; 2beb8 <main@@Base+0x1601c>
   2be88:	mov	r2, #23
   2be8c:	add	r1, pc, r1
   2be90:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2be94:	ldr	r1, [pc, #32]	; 2bebc <main@@Base+0x16020>
   2be98:	mov	r2, #8
   2be9c:	add	r1, pc, r1
   2bea0:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2bea4:	ldr	r1, [pc, #20]	; 2bec0 <main@@Base+0x16024>
   2bea8:	mov	r2, #3
   2beac:	add	r1, pc, r1
   2beb0:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2beb4:	andeq	ip, r1, r8, lsl #11
   2beb8:	andeq	ip, r1, r0, ror r5
   2bebc:	andeq	ip, r1, r8, ror r5
   2bec0:	andeq	ip, r1, r1, ror r5
   2bec4:	andeq	sp, r1, r7, lsl #29
   2bec8:	ldrb	r2, [r1, #8]
   2becc:	sub	r2, r2, #1
   2bed0:	cmp	r2, #3
   2bed4:	bxhi	lr
   2bed8:	add	r3, pc, #4
   2bedc:	ldr	r2, [r3, r2, lsl #2]
   2bee0:	add	pc, r3, r2
   2bee4:	andeq	r0, r0, r0, lsl r0
   2bee8:	andeq	r0, r0, r4, lsr r0
   2beec:	andeq	r0, r0, ip, lsl r0
   2bef0:	andeq	r0, r0, r8, lsr #32
   2bef4:	ldr	r2, [pc, #40]	; 2bf24 <main@@Base+0x16088>
   2bef8:	add	r2, pc, r2
   2befc:	b	43a0c <flatcc_json_printer_union_table@@Base>
   2bf00:	ldr	r2, [pc, #36]	; 2bf2c <main@@Base+0x16090>
   2bf04:	add	r2, pc, r2
   2bf08:	b	43a0c <flatcc_json_printer_union_table@@Base>
   2bf0c:	ldr	r2, [pc, #28]	; 2bf30 <main@@Base+0x16094>
   2bf10:	add	r2, pc, r2
   2bf14:	b	43a0c <flatcc_json_printer_union_table@@Base>
   2bf18:	ldr	r2, [pc, #8]	; 2bf28 <main@@Base+0x1608c>
   2bf1c:	add	r2, pc, r2
   2bf20:	b	43a0c <flatcc_json_printer_union_table@@Base>
   2bf24:			; <UNDEFINED> instruction: 0xffff3dc4
   2bf28:	andeq	r0, r0, r0, lsl r2
   2bf2c:	andeq	r0, r0, r0, ror #5
   2bf30:	ldrdeq	r0, [r0], -r8
   2bf34:	push	{r4, r5, r6, sl, fp, lr}
   2bf38:	add	fp, sp, #16
   2bf3c:	sub	sp, sp, #8
   2bf40:	mov	r5, r0
   2bf44:	ldr	r0, [pc, #72]	; 2bf94 <main@@Base+0x160f8>
   2bf48:	mov	r4, r1
   2bf4c:	mov	r6, #1
   2bf50:	mov	r1, #0
   2bf54:	mov	r3, #0
   2bf58:	mov	r2, r4
   2bf5c:	add	r0, pc, r0
   2bf60:	stm	sp, {r0, r6}
   2bf64:	mov	r0, r5
   2bf68:	bl	3c124 <flatcc_json_printer_int16_struct_field@@Base>
   2bf6c:	ldr	r0, [pc, #36]	; 2bf98 <main@@Base+0x160fc>
   2bf70:	mov	r1, #1
   2bf74:	mov	r2, r4
   2bf78:	mov	r3, #2
   2bf7c:	add	r0, pc, r0
   2bf80:	stm	sp, {r0, r6}
   2bf84:	mov	r0, r5
   2bf88:	bl	3c004 <flatcc_json_printer_int8_struct_field@@Base>
   2bf8c:	sub	sp, fp, #16
   2bf90:	pop	{r4, r5, r6, sl, fp, pc}
   2bf94:	muleq	r1, pc, r3	; <UNPREDICTABLE>
   2bf98:	andeq	ip, r1, lr, lsl r5
   2bf9c:	push	{r4, r5, r6, sl, fp, lr}
   2bfa0:	add	fp, sp, #16
   2bfa4:	sub	sp, sp, #16
   2bfa8:	mov	r5, r0
   2bfac:	mov	r0, #2
   2bfb0:	mov	r2, #0
   2bfb4:	mov	r4, r1
   2bfb8:	mov	r6, #0
   2bfbc:	str	r0, [sp]
   2bfc0:	mov	r0, r5
   2bfc4:	ldr	r3, [pc, #84]	; 2c020 <main@@Base+0x16184>
   2bfc8:	add	r3, pc, r3
   2bfcc:	bl	3a4a0 <flatcc_json_printer_string_field@@Base>
   2bfd0:	mov	r0, #3
   2bfd4:	str	r6, [sp, #8]
   2bfd8:	str	r6, [sp, #12]
   2bfdc:	mov	r1, r4
   2bfe0:	mov	r2, #1
   2bfe4:	str	r0, [sp]
   2bfe8:	mov	r0, r5
   2bfec:	ldr	r3, [pc, #48]	; 2c024 <main@@Base+0x16188>
   2bff0:	add	r3, pc, r3
   2bff4:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   2bff8:	mov	r0, #5
   2bffc:	mov	r1, r4
   2c000:	mov	r2, #2
   2c004:	stm	sp, {r0, r6}
   2c008:	mov	r0, r5
   2c00c:	ldr	r3, [pc, #20]	; 2c028 <main@@Base+0x1618c>
   2c010:	add	r3, pc, r3
   2c014:	bl	3aa80 <flatcc_json_printer_uint16_field@@Base>
   2c018:	sub	sp, fp, #16
   2c01c:	pop	{r4, r5, r6, sl, fp, pc}
   2c020:	andeq	ip, r1, r9, asr #11
   2c024:	andeq	ip, r1, r4, lsr #11
   2c028:	andeq	ip, r1, pc, asr #28
   2c02c:	push	{r4, r5, fp, lr}
   2c030:	add	fp, sp, #8
   2c034:	sub	sp, sp, #8
   2c038:	mov	r4, r1
   2c03c:	ldr	r1, [pc, #84]	; 2c098 <main@@Base+0x161fc>
   2c040:	mov	r5, r0
   2c044:	mov	r0, #2
   2c048:	mov	r3, #0
   2c04c:	str	r0, [sp, #4]
   2c050:	mov	r0, r5
   2c054:	mov	r2, r4
   2c058:	add	r1, pc, r1
   2c05c:	str	r1, [sp]
   2c060:	mov	r1, #0
   2c064:	bl	3bf4c <flatcc_json_printer_uint32_struct_field@@Base>
   2c068:	ldr	r1, [pc, #44]	; 2c09c <main@@Base+0x16200>
   2c06c:	mov	r0, #8
   2c070:	mov	r2, r4
   2c074:	mov	r3, #4
   2c078:	str	r0, [sp, #4]
   2c07c:	mov	r0, r5
   2c080:	add	r1, pc, r1
   2c084:	str	r1, [sp]
   2c088:	mov	r1, #1
   2c08c:	bl	3bf4c <flatcc_json_printer_uint32_struct_field@@Base>
   2c090:	sub	sp, fp, #8
   2c094:	pop	{r4, r5, fp, pc}
   2c098:	andeq	ip, r1, r9, lsr r5
   2c09c:	andeq	ip, r1, r8, lsl r5
   2c0a0:	bx	lr
   2c0a4:	push	{r4, r5, r6, sl, fp, lr}
   2c0a8:	add	fp, sp, #16
   2c0ac:	sub	sp, sp, #8
   2c0b0:	mov	r5, r0
   2c0b4:	mov	r6, #0
   2c0b8:	mov	r0, #4
   2c0bc:	mov	r2, #0
   2c0c0:	mov	r4, r1
   2c0c4:	stm	sp, {r0, r6}
   2c0c8:	mov	r0, r5
   2c0cc:	ldr	r3, [pc, #84]	; 2c128 <main@@Base+0x1628c>
   2c0d0:	add	r3, pc, r3
   2c0d4:	bl	3a730 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c0d8:	mov	r0, #1
   2c0dc:	mov	r1, #7
   2c0e0:	mov	r2, #1
   2c0e4:	str	r1, [sp]
   2c0e8:	str	r0, [sp, #4]
   2c0ec:	mov	r0, r5
   2c0f0:	mov	r1, r4
   2c0f4:	ldr	r3, [pc, #48]	; 2c12c <main@@Base+0x16290>
   2c0f8:	add	r3, pc, r3
   2c0fc:	bl	3a730 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c100:	mov	r0, #6
   2c104:	mov	r1, r4
   2c108:	mov	r2, #2
   2c10c:	stm	sp, {r0, r6}
   2c110:	mov	r0, r5
   2c114:	ldr	r3, [pc, #20]	; 2c130 <main@@Base+0x16294>
   2c118:	add	r3, pc, r3
   2c11c:	bl	3a730 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2c120:	sub	sp, fp, #16
   2c124:	pop	{r4, r5, r6, sl, fp, pc}
   2c128:	ldrdeq	ip, [r1], -r4
   2c12c:	andeq	ip, r1, r9, lsr #9
   2c130:	muleq	r1, r1, r4
   2c134:	push	{r4, r5, r6, r7, fp, lr}
   2c138:	add	fp, sp, #16
   2c13c:	sub	sp, sp, #16
   2c140:	ldr	r7, [pc, #144]	; 2c1d8 <main@@Base+0x1633c>
   2c144:	mov	r5, r0
   2c148:	mov	r6, #2
   2c14c:	mov	r0, #5
   2c150:	mov	r2, #0
   2c154:	mov	r4, r1
   2c158:	add	r7, pc, r7
   2c15c:	stm	sp, {r0, r6, r7}
   2c160:	mov	r0, r5
   2c164:	ldr	r3, [pc, #112]	; 2c1dc <main@@Base+0x16340>
   2c168:	add	r3, pc, r3
   2c16c:	bl	3b800 <flatcc_json_printer_int8_enum_field@@Base>
   2c170:	mov	r0, #6
   2c174:	mov	r1, r4
   2c178:	mov	r2, #1
   2c17c:	stm	sp, {r0, r6, r7}
   2c180:	mov	r0, r5
   2c184:	ldr	r3, [pc, #84]	; 2c1e0 <main@@Base+0x16344>
   2c188:	add	r3, pc, r3
   2c18c:	bl	3b800 <flatcc_json_printer_int8_enum_field@@Base>
   2c190:	str	r6, [sp]
   2c194:	str	r6, [sp, #4]
   2c198:	mov	r0, r5
   2c19c:	mov	r1, r4
   2c1a0:	mov	r2, #2
   2c1a4:	ldr	r3, [pc, #56]	; 2c1e4 <main@@Base+0x16348>
   2c1a8:	add	r3, pc, r3
   2c1ac:	bl	3a920 <flatcc_json_printer_uint8_field@@Base>
   2c1b0:	mov	r0, #3
   2c1b4:	mov	r1, r4
   2c1b8:	mov	r2, #3
   2c1bc:	stm	sp, {r0, r6}
   2c1c0:	mov	r0, r5
   2c1c4:	ldr	r3, [pc, #28]	; 2c1e8 <main@@Base+0x1634c>
   2c1c8:	add	r3, pc, r3
   2c1cc:	bl	3a920 <flatcc_json_printer_uint8_field@@Base>
   2c1d0:	sub	sp, fp, #16
   2c1d4:	pop	{r4, r5, r6, r7, fp, pc}
   2c1d8:			; <UNDEFINED> instruction: 0xfffffbf8
   2c1dc:	andeq	ip, r1, r1, ror #1
   2c1e0:	muleq	r1, r9, r2
   2c1e4:	andeq	ip, r1, r0, lsl #5
   2c1e8:	andeq	ip, r1, r3, ror #4
   2c1ec:	bx	lr
   2c1f0:	push	{r4, r5, fp, lr}
   2c1f4:	add	fp, sp, #8
   2c1f8:	sub	sp, sp, #16
   2c1fc:	mov	r5, r0
   2c200:	ldr	r0, [pc, #148]	; 2c29c <main@@Base+0x16400>
   2c204:	mov	r4, r1
   2c208:	mov	r1, #6
   2c20c:	mov	r2, #0
   2c210:	str	r1, [sp]
   2c214:	mov	r1, r4
   2c218:	add	r0, pc, r0
   2c21c:	str	r0, [sp, #4]
   2c220:	mov	r0, r5
   2c224:	ldr	r3, [pc, #116]	; 2c2a0 <main@@Base+0x16404>
   2c228:	add	r3, pc, r3
   2c22c:	bl	43320 <flatcc_json_printer_table_field@@Base>
   2c230:	ldr	r0, [pc, #108]	; 2c2a4 <main@@Base+0x16408>
   2c234:	mov	r1, #5
   2c238:	mov	r2, #1
   2c23c:	str	r1, [sp]
   2c240:	mov	r1, r4
   2c244:	add	r0, pc, r0
   2c248:	str	r0, [sp, #4]
   2c24c:	mov	r0, r5
   2c250:	ldr	r3, [pc, #80]	; 2c2a8 <main@@Base+0x1640c>
   2c254:	add	r3, pc, r3
   2c258:	bl	43320 <flatcc_json_printer_table_field@@Base>
   2c25c:	ldr	r0, [pc, #72]	; 2c2ac <main@@Base+0x16410>
   2c260:	ldr	r1, [pc, #72]	; 2c2b0 <main@@Base+0x16414>
   2c264:	mov	r2, #7
   2c268:	str	r2, [sp]
   2c26c:	mov	r2, #3
   2c270:	add	r0, pc, r0
   2c274:	add	r1, pc, r1
   2c278:	str	r1, [sp, #4]
   2c27c:	str	r0, [sp, #8]
   2c280:	mov	r0, r5
   2c284:	mov	r1, r4
   2c288:	ldr	r3, [pc, #36]	; 2c2b4 <main@@Base+0x16418>
   2c28c:	add	r3, pc, r3
   2c290:	bl	42f4c <flatcc_json_printer_union_vector_field@@Base>
   2c294:	sub	sp, fp, #8
   2c298:	pop	{r4, r5, fp, pc}
   2c29c:	muleq	r0, r8, r0
   2c2a0:	andeq	ip, r1, r7, lsl #4
   2c2a4:	andeq	r0, r0, r0, lsr #2
   2c2a8:	andeq	ip, r1, r2, ror #3
   2c2ac:			; <UNDEFINED> instruction: 0xfffffc50
   2c2b0:			; <UNDEFINED> instruction: 0xfffffbc0
   2c2b4:			; <UNDEFINED> instruction: 0x0001c1b0
   2c2b8:	push	{r4, r5, r6, sl, fp, lr}
   2c2bc:	add	fp, sp, #16
   2c2c0:	sub	sp, sp, #8
   2c2c4:	mov	r5, r0
   2c2c8:	ldr	r0, [pc, #132]	; 2c354 <main@@Base+0x164b8>
   2c2cc:	mov	r4, r1
   2c2d0:	mov	r1, #21
   2c2d4:	mov	r2, #0
   2c2d8:	str	r1, [sp]
   2c2dc:	mov	r1, r4
   2c2e0:	add	r0, pc, r0
   2c2e4:	str	r0, [sp, #4]
   2c2e8:	mov	r0, r5
   2c2ec:	ldr	r3, [pc, #100]	; 2c358 <main@@Base+0x164bc>
   2c2f0:	add	r3, pc, r3
   2c2f4:	bl	43320 <flatcc_json_printer_table_field@@Base>
   2c2f8:	ldr	r0, [pc, #92]	; 2c35c <main@@Base+0x164c0>
   2c2fc:	mov	r6, #22
   2c300:	mov	r1, r4
   2c304:	mov	r2, #1
   2c308:	str	r6, [sp]
   2c30c:	add	r0, pc, r0
   2c310:	str	r0, [sp, #4]
   2c314:	mov	r0, r5
   2c318:	ldr	r3, [pc, #64]	; 2c360 <main@@Base+0x164c4>
   2c31c:	add	r3, pc, r3
   2c320:	bl	43320 <flatcc_json_printer_table_field@@Base>
   2c324:	ldr	r0, [pc, #56]	; 2c364 <main@@Base+0x164c8>
   2c328:	str	r6, [sp]
   2c32c:	mov	r1, r4
   2c330:	mov	r2, #2
   2c334:	add	r0, pc, r0
   2c338:	str	r0, [sp, #4]
   2c33c:	mov	r0, r5
   2c340:	ldr	r3, [pc, #32]	; 2c368 <main@@Base+0x164cc>
   2c344:	add	r3, pc, r3
   2c348:	bl	43320 <flatcc_json_printer_table_field@@Base>
   2c34c:	sub	sp, fp, #16
   2c350:	pop	{r4, r5, r6, sl, fp, pc}
   2c354:	andeq	r0, r0, r4, lsl #3
   2c358:	andeq	ip, r1, r4, asr r1
   2c35c:	andeq	r0, r0, r0, asr #5
   2c360:	andeq	ip, r1, lr, lsr r1
   2c364:	andeq	r0, r0, r4, lsl #6
   2c368:	andeq	ip, r1, sp, lsr #2
   2c36c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c370:	add	fp, sp, #24
   2c374:	sub	sp, sp, #16
   2c378:	ldr	r6, [pc, #208]	; 2c450 <main@@Base+0x165b4>
   2c37c:	ldr	r7, [pc, #208]	; 2c454 <main@@Base+0x165b8>
   2c380:	mov	r5, r0
   2c384:	mov	r0, #14
   2c388:	mov	r2, #1
   2c38c:	mov	r4, r1
   2c390:	add	r7, pc, r7
   2c394:	add	r6, pc, r6
   2c398:	stm	sp, {r0, r7}
   2c39c:	str	r6, [sp, #8]
   2c3a0:	mov	r0, r5
   2c3a4:	ldr	r3, [pc, #172]	; 2c458 <main@@Base+0x165bc>
   2c3a8:	add	r3, pc, r3
   2c3ac:	bl	43508 <flatcc_json_printer_union_field@@Base>
   2c3b0:	mov	r8, #10
   2c3b4:	str	r7, [sp, #4]
   2c3b8:	str	r6, [sp, #8]
   2c3bc:	mov	r0, r5
   2c3c0:	mov	r1, r4
   2c3c4:	mov	r2, #3
   2c3c8:	str	r8, [sp]
   2c3cc:	ldr	r3, [pc, #136]	; 2c45c <main@@Base+0x165c0>
   2c3d0:	add	r3, pc, r3
   2c3d4:	bl	43508 <flatcc_json_printer_union_field@@Base>
   2c3d8:	mov	r0, #9
   2c3dc:	mov	r1, r4
   2c3e0:	mov	r2, #5
   2c3e4:	mov	r9, #5
   2c3e8:	stm	sp, {r0, r7}
   2c3ec:	str	r6, [sp, #8]
   2c3f0:	mov	r0, r5
   2c3f4:	ldr	r3, [pc, #100]	; 2c460 <main@@Base+0x165c4>
   2c3f8:	add	r3, pc, r3
   2c3fc:	bl	43508 <flatcc_json_printer_union_field@@Base>
   2c400:	str	r9, [sp]
   2c404:	str	r7, [sp, #4]
   2c408:	str	r6, [sp, #8]
   2c40c:	mov	r0, r5
   2c410:	mov	r1, r4
   2c414:	mov	r2, #7
   2c418:	ldr	r3, [pc, #68]	; 2c464 <main@@Base+0x165c8>
   2c41c:	add	r3, pc, r3
   2c420:	bl	43508 <flatcc_json_printer_union_field@@Base>
   2c424:	str	r8, [sp]
   2c428:	str	r7, [sp, #4]
   2c42c:	str	r6, [sp, #8]
   2c430:	mov	r0, r5
   2c434:	mov	r1, r4
   2c438:	mov	r2, #9
   2c43c:	ldr	r3, [pc, #36]	; 2c468 <main@@Base+0x165cc>
   2c440:	add	r3, pc, r3
   2c444:	bl	42f4c <flatcc_json_printer_union_vector_field@@Base>
   2c448:	sub	sp, fp, #24
   2c44c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c450:	andeq	r0, r0, r4, ror #7
   2c454:	andeq	r0, r0, r4, lsl r3
   2c458:	andeq	ip, r1, pc, asr r1
   2c45c:	andeq	ip, r1, r6, asr #2
   2c460:	andeq	ip, r1, r9, lsr #2
   2c464:	andeq	ip, r1, pc, lsl #2
   2c468:	strdeq	ip, [r1], -r1
   2c46c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c470:	add	fp, sp, #24
   2c474:	sub	sp, sp, #16
   2c478:	mov	r9, #4
   2c47c:	mov	r2, #0
   2c480:	mov	r4, r1
   2c484:	mov	r5, r0
   2c488:	mov	r6, #0
   2c48c:	str	r9, [sp]
   2c490:	ldr	r3, [pc, #280]	; 2c5b0 <main@@Base+0x16714>
   2c494:	add	r3, pc, r3
   2c498:	bl	3a4a0 <flatcc_json_printer_string_field@@Base>
   2c49c:	mov	r8, #9
   2c4a0:	str	r6, [sp, #4]
   2c4a4:	mov	r0, r5
   2c4a8:	mov	r1, r4
   2c4ac:	mov	r2, #1
   2c4b0:	str	r8, [sp]
   2c4b4:	ldr	r3, [pc, #248]	; 2c5b4 <main@@Base+0x16718>
   2c4b8:	add	r3, pc, r3
   2c4bc:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   2c4c0:	str	r9, [sp]
   2c4c4:	mov	r0, r5
   2c4c8:	mov	r1, r4
   2c4cc:	mov	r2, #2
   2c4d0:	ldr	r3, [pc, #224]	; 2c5b8 <main@@Base+0x1671c>
   2c4d4:	add	r3, pc, r3
   2c4d8:	bl	3a4a0 <flatcc_json_printer_string_field@@Base>
   2c4dc:	mov	r7, #8
   2c4e0:	str	r6, [sp, #8]
   2c4e4:	str	r6, [sp, #12]
   2c4e8:	mov	r0, r5
   2c4ec:	mov	r1, r4
   2c4f0:	mov	r2, #3
   2c4f4:	str	r7, [sp]
   2c4f8:	ldr	r3, [pc, #188]	; 2c5bc <main@@Base+0x16720>
   2c4fc:	add	r3, pc, r3
   2c500:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   2c504:	str	r9, [sp]
   2c508:	mov	r0, r5
   2c50c:	mov	r1, r4
   2c510:	mov	r2, #4
   2c514:	ldr	r3, [pc, #164]	; 2c5c0 <main@@Base+0x16724>
   2c518:	add	r3, pc, r3
   2c51c:	bl	3a4a0 <flatcc_json_printer_string_field@@Base>
   2c520:	str	r6, [sp, #8]
   2c524:	str	r6, [sp, #12]
   2c528:	str	r7, [sp]
   2c52c:	mov	r0, r5
   2c530:	mov	r1, r4
   2c534:	mov	r2, #5
   2c538:	ldr	r3, [pc, #132]	; 2c5c4 <main@@Base+0x16728>
   2c53c:	add	r3, pc, r3
   2c540:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   2c544:	str	r8, [sp]
   2c548:	str	r6, [sp, #4]
   2c54c:	mov	r0, r5
   2c550:	mov	r1, r4
   2c554:	mov	r2, #6
   2c558:	ldr	r3, [pc, #104]	; 2c5c8 <main@@Base+0x1672c>
   2c55c:	add	r3, pc, r3
   2c560:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   2c564:	str	r6, [sp, #8]
   2c568:	str	r6, [sp, #12]
   2c56c:	str	r7, [sp]
   2c570:	mov	r0, r5
   2c574:	mov	r1, r4
   2c578:	mov	r2, #7
   2c57c:	ldr	r3, [pc, #72]	; 2c5cc <main@@Base+0x16730>
   2c580:	add	r3, pc, r3
   2c584:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   2c588:	str	r8, [sp]
   2c58c:	str	r6, [sp, #4]
   2c590:	mov	r0, r5
   2c594:	mov	r1, r4
   2c598:	mov	r2, #8
   2c59c:	ldr	r3, [pc, #44]	; 2c5d0 <main@@Base+0x16734>
   2c5a0:	add	r3, pc, r3
   2c5a4:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   2c5a8:	sub	sp, fp, #24
   2c5ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c5b0:	strdeq	fp, [r1], -r4
   2c5b4:	ldrdeq	fp, [r1], -r5
   2c5b8:	andeq	fp, r1, r3, asr #31
   2c5bc:	andeq	fp, r1, r0, lsr #31
   2c5c0:	andeq	fp, r1, sp, lsl #31
   2c5c4:	andeq	fp, r1, lr, ror #30
   2c5c8:	andeq	fp, r1, r7, asr pc
   2c5cc:	andeq	fp, r1, sp, lsr pc
   2c5d0:	andeq	fp, r1, r6, lsr #30
   2c5d4:	push	{r4, r5, r6, sl, fp, lr}
   2c5d8:	add	fp, sp, #16
   2c5dc:	sub	sp, sp, #16
   2c5e0:	mov	r6, #0
   2c5e4:	mov	r5, r0
   2c5e8:	mov	r0, #15
   2c5ec:	mov	r2, #0
   2c5f0:	mov	r4, r1
   2c5f4:	str	r0, [sp]
   2c5f8:	str	r6, [sp, #8]
   2c5fc:	str	r6, [sp, #12]
   2c600:	mov	r0, r5
   2c604:	ldr	r3, [pc, #44]	; 2c638 <main@@Base+0x1679c>
   2c608:	add	r3, pc, r3
   2c60c:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   2c610:	mov	r0, #16
   2c614:	mov	r1, r4
   2c618:	mov	r2, #1
   2c61c:	stm	sp, {r0, r6}
   2c620:	mov	r0, r5
   2c624:	ldr	r3, [pc, #16]	; 2c63c <main@@Base+0x167a0>
   2c628:	add	r3, pc, r3
   2c62c:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   2c630:	sub	sp, fp, #16
   2c634:	pop	{r4, r5, r6, sl, fp, pc}
   2c638:	andeq	fp, r1, r8, asr #29
   2c63c:			; <UNDEFINED> instruction: 0x0001beb8
   2c640:	push	{r4, r5, r6, sl, fp, lr}
   2c644:	add	fp, sp, #16
   2c648:	sub	sp, sp, #16
   2c64c:	mov	r6, #0
   2c650:	mov	r5, r0
   2c654:	mov	r0, #15
   2c658:	mov	r2, #0
   2c65c:	mov	r4, r1
   2c660:	str	r0, [sp]
   2c664:	str	r6, [sp, #8]
   2c668:	str	r6, [sp, #12]
   2c66c:	mov	r0, r5
   2c670:	ldr	r3, [pc, #44]	; 2c6a4 <main@@Base+0x16808>
   2c674:	add	r3, pc, r3
   2c678:	bl	3b020 <flatcc_json_printer_int64_field@@Base>
   2c67c:	mov	r0, #21
   2c680:	mov	r1, r4
   2c684:	mov	r2, #1
   2c688:	stm	sp, {r0, r6}
   2c68c:	mov	r0, r5
   2c690:	ldr	r3, [pc, #16]	; 2c6a8 <main@@Base+0x1680c>
   2c694:	add	r3, pc, r3
   2c698:	bl	3ab40 <flatcc_json_printer_uint32_field@@Base>
   2c69c:	sub	sp, fp, #16
   2c6a0:	pop	{r4, r5, r6, sl, fp, pc}
   2c6a4:	andeq	fp, r1, ip, asr lr
   2c6a8:	andeq	fp, r1, sp, asr lr
   2c6ac:	sub	r2, r1, #2
   2c6b0:	cmp	r2, #9
   2c6b4:	bhi	2c6fc <main@@Base+0x16860>
   2c6b8:	add	r1, pc, #4
   2c6bc:	ldr	r2, [r1, r2, lsl #2]
   2c6c0:	add	pc, r1, r2
   2c6c4:	andeq	r0, r0, r8, lsr #32
   2c6c8:	andeq	r0, r0, r0, asr r0
   2c6cc:	andeq	r0, r0, r0, asr r0
   2c6d0:	andeq	r0, r0, r0, asr r0
   2c6d4:	andeq	r0, r0, r0, asr r0
   2c6d8:	andeq	r0, r0, r0, asr r0
   2c6dc:	andeq	r0, r0, r0, rrx
   2c6e0:	andeq	r0, r0, r0, ror r0
   2c6e4:	andeq	r0, r0, r0, lsl #1
   2c6e8:	muleq	r0, r0, r0
   2c6ec:	ldr	r1, [pc, #116]	; 2c768 <main@@Base+0x168cc>
   2c6f0:	mov	r2, #5
   2c6f4:	add	r1, pc, r1
   2c6f8:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c6fc:	cmp	r1, #255	; 0xff
   2c700:	bne	2c714 <main@@Base+0x16878>
   2c704:	ldr	r1, [pc, #88]	; 2c764 <main@@Base+0x168c8>
   2c708:	mov	r2, #6
   2c70c:	add	r1, pc, r1
   2c710:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c714:	ldr	r1, [pc, #96]	; 2c77c <main@@Base+0x168e0>
   2c718:	mov	r2, #4
   2c71c:	add	r1, pc, r1
   2c720:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c724:	ldr	r1, [pc, #64]	; 2c76c <main@@Base+0x168d0>
   2c728:	mov	r2, #8
   2c72c:	add	r1, pc, r1
   2c730:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c734:	ldr	r1, [pc, #52]	; 2c770 <main@@Base+0x168d4>
   2c738:	mov	r2, #5
   2c73c:	add	r1, pc, r1
   2c740:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c744:	ldr	r1, [pc, #40]	; 2c774 <main@@Base+0x168d8>
   2c748:	mov	r2, #7
   2c74c:	add	r1, pc, r1
   2c750:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c754:	ldr	r1, [pc, #28]	; 2c778 <main@@Base+0x168dc>
   2c758:	mov	r2, #5
   2c75c:	add	r1, pc, r1
   2c760:	b	3a2b4 <flatcc_json_printer_enum@@Base>
   2c764:	andeq	fp, r1, r3, asr lr
   2c768:	andeq	fp, r1, r8, asr #28
   2c76c:	andeq	fp, r1, r6, lsl lr
   2c770:	andeq	fp, r1, pc, lsl #28
   2c774:	andeq	fp, r1, r5, lsl #28
   2c778:	strdeq	fp, [r1], -sp
   2c77c:	andeq	sp, r1, r7, ror #11
   2c780:	ldrb	r3, [r1, #8]
   2c784:	sub	r2, r3, #2
   2c788:	cmp	r2, #9
   2c78c:	bhi	2c7d0 <main@@Base+0x16934>
   2c790:	add	r3, pc, #4
   2c794:	ldr	r2, [r3, r2, lsl #2]
   2c798:	add	pc, r3, r2
   2c79c:	andeq	r0, r0, r0, asr #32
   2c7a0:	andeq	r0, r0, r8, asr r0
   2c7a4:	andeq	r0, r0, r8, asr r0
   2c7a8:	andeq	r0, r0, r8, asr r0
   2c7ac:	andeq	r0, r0, r8, asr r0
   2c7b0:	andeq	r0, r0, r8, asr r0
   2c7b4:	andeq	r0, r0, ip, asr #32
   2c7b8:	andeq	r0, r0, r8, lsr #32
   2c7bc:	andeq	r0, r0, r8, lsr #32
   2c7c0:	andeq	r0, r0, ip, lsr r0
   2c7c4:	ldr	r2, [pc, #52]	; 2c800 <main@@Base+0x16964>
   2c7c8:	add	r2, pc, r2
   2c7cc:	b	43b8c <flatcc_json_printer_union_struct@@Base>
   2c7d0:	cmp	r3, #255	; 0xff
   2c7d4:	bxne	lr
   2c7d8:	b	43cac <flatcc_json_printer_union_string@@Base>
   2c7dc:	ldr	r2, [pc, #20]	; 2c7f8 <main@@Base+0x1695c>
   2c7e0:	add	r2, pc, r2
   2c7e4:	b	43a0c <flatcc_json_printer_union_table@@Base>
   2c7e8:	ldr	r2, [pc, #12]	; 2c7fc <main@@Base+0x16960>
   2c7ec:	add	r2, pc, r2
   2c7f0:	b	43b8c <flatcc_json_printer_union_struct@@Base>
   2c7f4:	bx	lr
   2c7f8:	andeq	r0, r0, ip, lsl r0
   2c7fc:	andeq	r0, r0, r8, asr #32
   2c800:	andeq	r0, r0, r8, lsr #1
   2c804:	push	{fp, lr}
   2c808:	mov	fp, sp
   2c80c:	sub	sp, sp, #8
   2c810:	mov	r2, #0
   2c814:	mov	r3, #19
   2c818:	str	r2, [sp, #4]
   2c81c:	str	r3, [sp]
   2c820:	mov	r2, #0
   2c824:	ldr	r3, [pc, #12]	; 2c838 <main@@Base+0x1699c>
   2c828:	add	r3, pc, r3
   2c82c:	bl	3af48 <flatcc_json_printer_int32_field@@Base>
   2c830:	mov	sp, fp
   2c834:	pop	{fp, pc}
   2c838:	andeq	fp, r1, lr, lsr sp
   2c83c:	push	{fp, lr}
   2c840:	mov	fp, sp
   2c844:	sub	sp, sp, #8
   2c848:	ldr	r3, [pc, #36]	; 2c874 <main@@Base+0x169d8>
   2c84c:	mov	r2, r1
   2c850:	mov	r1, #11
   2c854:	str	r1, [sp, #4]
   2c858:	mov	r1, #0
   2c85c:	add	r3, pc, r3
   2c860:	str	r3, [sp]
   2c864:	mov	r3, #0
   2c868:	bl	3bef0 <flatcc_json_printer_uint16_struct_field@@Base>
   2c86c:	mov	sp, fp
   2c870:	pop	{fp, pc}
   2c874:	andeq	fp, r1, lr, lsl sp
   2c878:	push	{fp, lr}
   2c87c:	mov	fp, sp
   2c880:	sub	sp, sp, #8
   2c884:	ldr	r3, [pc, #36]	; 2c8b0 <main@@Base+0x16a14>
   2c888:	mov	r2, r1
   2c88c:	mov	r1, #10
   2c890:	str	r1, [sp, #4]
   2c894:	mov	r1, #0
   2c898:	add	r3, pc, r3
   2c89c:	str	r3, [sp]
   2c8a0:	mov	r3, #0
   2c8a4:	bl	3c198 <flatcc_json_printer_int32_struct_field@@Base>
   2c8a8:	mov	sp, fp
   2c8ac:	pop	{fp, pc}
   2c8b0:	andeq	fp, r1, lr, ror #25
   2c8b4:	ldrb	r1, [r0, #12]
   2c8b8:	sub	r1, r1, #1
   2c8bc:	uxtb	r2, r1
   2c8c0:	cmp	r2, #3
   2c8c4:	movhi	r0, #0
   2c8c8:	bxhi	lr
   2c8cc:	ldr	r2, [pc, #12]	; 2c8e0 <main@@Base+0x16a44>
   2c8d0:	sxtb	r1, r1
   2c8d4:	add	r2, pc, r2
   2c8d8:	ldr	r1, [r2, r1, lsl #2]
   2c8dc:	b	329ac <flatcc_verify_union_table@@Base>
   2c8e0:	andeq	pc, r2, r4, ror #9
   2c8e4:	push	{r4, sl, fp, lr}
   2c8e8:	add	fp, sp, #8
   2c8ec:	mov	r1, #0
   2c8f0:	mov	r2, #0
   2c8f4:	mov	r4, r0
   2c8f8:	bl	321e0 <flatcc_verify_string_field@@Base>
   2c8fc:	cmp	r0, #0
   2c900:	popne	{r4, sl, fp, pc}
   2c904:	mov	r0, r4
   2c908:	mov	r1, #1
   2c90c:	mov	r2, #8
   2c910:	mov	r3, #8
   2c914:	bl	3215c <flatcc_verify_field@@Base>
   2c918:	cmp	r0, #0
   2c91c:	beq	2c924 <main@@Base+0x16a88>
   2c920:	pop	{r4, sl, fp, pc}
   2c924:	mov	r0, r4
   2c928:	mov	r1, #2
   2c92c:	mov	r2, #2
   2c930:	mov	r3, #2
   2c934:	pop	{r4, sl, fp, lr}
   2c938:	b	3215c <flatcc_verify_field@@Base>
   2c93c:	mov	r0, #0
   2c940:	bx	lr
   2c944:	push	{r4, r5, r6, sl, fp, lr}
   2c948:	add	fp, sp, #16
   2c94c:	sub	sp, sp, #8
   2c950:	mvn	r5, #0
   2c954:	mov	r6, #1
   2c958:	mov	r1, #0
   2c95c:	mov	r2, #0
   2c960:	mov	r3, #1
   2c964:	mov	r4, r0
   2c968:	str	r6, [sp]
   2c96c:	str	r5, [sp, #4]
   2c970:	bl	322c4 <flatcc_verify_vector_field@@Base>
   2c974:	cmp	r0, #0
   2c978:	bne	2c9a0 <main@@Base+0x16b04>
   2c97c:	mov	r0, r4
   2c980:	mov	r1, #1
   2c984:	mov	r2, #0
   2c988:	mov	r3, #1
   2c98c:	str	r6, [sp]
   2c990:	str	r5, [sp, #4]
   2c994:	bl	322c4 <flatcc_verify_vector_field@@Base>
   2c998:	cmp	r0, #0
   2c99c:	beq	2c9a8 <main@@Base+0x16b0c>
   2c9a0:	sub	sp, fp, #16
   2c9a4:	pop	{r4, r5, r6, sl, fp, pc}
   2c9a8:	ldr	r0, [pc, #40]	; 2c9d8 <main@@Base+0x16b3c>
   2c9ac:	mov	r1, #1
   2c9b0:	mov	r2, #0
   2c9b4:	mov	r3, #0
   2c9b8:	str	r1, [sp]
   2c9bc:	mov	r1, #2
   2c9c0:	add	r0, pc, r0
   2c9c4:	str	r0, [sp, #4]
   2c9c8:	mov	r0, r4
   2c9cc:	bl	331d4 <flatcc_verify_table_as_nested_root@@Base>
   2c9d0:	sub	sp, fp, #16
   2c9d4:	pop	{r4, r5, r6, sl, fp, pc}
   2c9d8:			; <UNDEFINED> instruction: 0xffff38bc
   2c9dc:	push	{r4, sl, fp, lr}
   2c9e0:	add	fp, sp, #8
   2c9e4:	mov	r1, #0
   2c9e8:	mov	r2, #1
   2c9ec:	mov	r3, #1
   2c9f0:	mov	r4, r0
   2c9f4:	bl	3215c <flatcc_verify_field@@Base>
   2c9f8:	cmp	r0, #0
   2c9fc:	bne	2ca38 <main@@Base+0x16b9c>
   2ca00:	mov	r0, r4
   2ca04:	mov	r1, #1
   2ca08:	mov	r2, #1
   2ca0c:	mov	r3, #1
   2ca10:	bl	3215c <flatcc_verify_field@@Base>
   2ca14:	cmp	r0, #0
   2ca18:	popne	{r4, sl, fp, pc}
   2ca1c:	mov	r0, r4
   2ca20:	mov	r1, #2
   2ca24:	mov	r2, #1
   2ca28:	mov	r3, #1
   2ca2c:	bl	3215c <flatcc_verify_field@@Base>
   2ca30:	cmp	r0, #0
   2ca34:	beq	2ca3c <main@@Base+0x16ba0>
   2ca38:	pop	{r4, sl, fp, pc}
   2ca3c:	mov	r0, r4
   2ca40:	mov	r1, #3
   2ca44:	mov	r2, #1
   2ca48:	mov	r3, #1
   2ca4c:	pop	{r4, sl, fp, lr}
   2ca50:	b	3215c <flatcc_verify_field@@Base>
   2ca54:	mov	r0, #0
   2ca58:	bx	lr
   2ca5c:	push	{r4, sl, fp, lr}
   2ca60:	add	fp, sp, #8
   2ca64:	ldr	r3, [pc, #88]	; 2cac4 <main@@Base+0x16c28>
   2ca68:	mov	r1, #0
   2ca6c:	mov	r2, #0
   2ca70:	mov	r4, r0
   2ca74:	add	r3, pc, r3
   2ca78:	bl	32560 <flatcc_verify_table_field@@Base>
   2ca7c:	cmp	r0, #0
   2ca80:	popne	{r4, sl, fp, pc}
   2ca84:	ldr	r3, [pc, #60]	; 2cac8 <main@@Base+0x16c2c>
   2ca88:	mov	r0, r4
   2ca8c:	mov	r1, #1
   2ca90:	mov	r2, #0
   2ca94:	add	r3, pc, r3
   2ca98:	bl	32560 <flatcc_verify_table_field@@Base>
   2ca9c:	cmp	r0, #0
   2caa0:	beq	2caa8 <main@@Base+0x16c0c>
   2caa4:	pop	{r4, sl, fp, pc}
   2caa8:	ldr	r3, [pc, #28]	; 2cacc <main@@Base+0x16c30>
   2caac:	mov	r0, r4
   2cab0:	mov	r1, #3
   2cab4:	mov	r2, #0
   2cab8:	add	r3, pc, r3
   2cabc:	pop	{r4, sl, fp, lr}
   2cac0:	b	33648 <flatcc_verify_union_vector_field@@Base>
   2cac4:	andeq	r0, r0, r4, asr r0
   2cac8:	andeq	r0, r0, r8, lsr #1
   2cacc:			; <UNDEFINED> instruction: 0xfffffdf4
   2cad0:	push	{r4, sl, fp, lr}
   2cad4:	add	fp, sp, #8
   2cad8:	ldr	r3, [pc, #88]	; 2cb38 <main@@Base+0x16c9c>
   2cadc:	mov	r1, #0
   2cae0:	mov	r2, #0
   2cae4:	mov	r4, r0
   2cae8:	add	r3, pc, r3
   2caec:	bl	32560 <flatcc_verify_table_field@@Base>
   2caf0:	cmp	r0, #0
   2caf4:	popne	{r4, sl, fp, pc}
   2caf8:	ldr	r3, [pc, #60]	; 2cb3c <main@@Base+0x16ca0>
   2cafc:	mov	r0, r4
   2cb00:	mov	r1, #1
   2cb04:	mov	r2, #0
   2cb08:	add	r3, pc, r3
   2cb0c:	bl	32560 <flatcc_verify_table_field@@Base>
   2cb10:	cmp	r0, #0
   2cb14:	beq	2cb1c <main@@Base+0x16c80>
   2cb18:	pop	{r4, sl, fp, pc}
   2cb1c:	ldr	r3, [pc, #28]	; 2cb40 <main@@Base+0x16ca4>
   2cb20:	mov	r0, r4
   2cb24:	mov	r1, #2
   2cb28:	mov	r2, #0
   2cb2c:	add	r3, pc, r3
   2cb30:	pop	{r4, sl, fp, lr}
   2cb34:	b	32560 <flatcc_verify_table_field@@Base>
   2cb38:	andeq	r0, r0, r0, lsl r1
   2cb3c:	andeq	r0, r0, r8, ror #3
   2cb40:	andeq	r0, r0, r0, lsl #4
   2cb44:	push	{r4, sl, fp, lr}
   2cb48:	add	fp, sp, #8
   2cb4c:	ldr	r3, [pc, #152]	; 2cbec <main@@Base+0x16d50>
   2cb50:	mov	r1, #1
   2cb54:	mov	r2, #0
   2cb58:	mov	r4, r0
   2cb5c:	add	r3, pc, r3
   2cb60:	bl	334e4 <flatcc_verify_union_field@@Base>
   2cb64:	cmp	r0, #0
   2cb68:	bne	2cbcc <main@@Base+0x16d30>
   2cb6c:	ldr	r3, [pc, #124]	; 2cbf0 <main@@Base+0x16d54>
   2cb70:	mov	r0, r4
   2cb74:	mov	r1, #3
   2cb78:	mov	r2, #0
   2cb7c:	add	r3, pc, r3
   2cb80:	bl	334e4 <flatcc_verify_union_field@@Base>
   2cb84:	cmp	r0, #0
   2cb88:	bne	2cbcc <main@@Base+0x16d30>
   2cb8c:	ldr	r3, [pc, #96]	; 2cbf4 <main@@Base+0x16d58>
   2cb90:	mov	r0, r4
   2cb94:	mov	r1, #5
   2cb98:	mov	r2, #0
   2cb9c:	add	r3, pc, r3
   2cba0:	bl	334e4 <flatcc_verify_union_field@@Base>
   2cba4:	cmp	r0, #0
   2cba8:	popne	{r4, sl, fp, pc}
   2cbac:	ldr	r3, [pc, #68]	; 2cbf8 <main@@Base+0x16d5c>
   2cbb0:	mov	r0, r4
   2cbb4:	mov	r1, #7
   2cbb8:	mov	r2, #0
   2cbbc:	add	r3, pc, r3
   2cbc0:	bl	334e4 <flatcc_verify_union_field@@Base>
   2cbc4:	cmp	r0, #0
   2cbc8:	beq	2cbd0 <main@@Base+0x16d34>
   2cbcc:	pop	{r4, sl, fp, pc}
   2cbd0:	ldr	r3, [pc, #36]	; 2cbfc <main@@Base+0x16d60>
   2cbd4:	mov	r0, r4
   2cbd8:	mov	r1, #9
   2cbdc:	mov	r2, #0
   2cbe0:	add	r3, pc, r3
   2cbe4:	pop	{r4, sl, fp, lr}
   2cbe8:	b	33648 <flatcc_verify_union_vector_field@@Base>
   2cbec:	andeq	r0, r0, ip, lsl #4
   2cbf0:	andeq	r0, r0, ip, ror #3
   2cbf4:	andeq	r0, r0, ip, asr #3
   2cbf8:	andeq	r0, r0, ip, lsr #3
   2cbfc:	andeq	r0, r0, r8, lsl #3
   2cc00:	push	{r4, sl, fp, lr}
   2cc04:	add	fp, sp, #8
   2cc08:	mov	r1, #0
   2cc0c:	mov	r2, #0
   2cc10:	mov	r4, r0
   2cc14:	bl	321e0 <flatcc_verify_string_field@@Base>
   2cc18:	cmp	r0, #0
   2cc1c:	bne	2ccdc <main@@Base+0x16e40>
   2cc20:	mov	r0, r4
   2cc24:	mov	r1, #1
   2cc28:	mov	r2, #4
   2cc2c:	mov	r3, #4
   2cc30:	bl	3215c <flatcc_verify_field@@Base>
   2cc34:	cmp	r0, #0
   2cc38:	bne	2ccdc <main@@Base+0x16e40>
   2cc3c:	mov	r0, r4
   2cc40:	mov	r1, #2
   2cc44:	mov	r2, #0
   2cc48:	bl	321e0 <flatcc_verify_string_field@@Base>
   2cc4c:	cmp	r0, #0
   2cc50:	bne	2ccdc <main@@Base+0x16e40>
   2cc54:	mov	r0, r4
   2cc58:	mov	r1, #3
   2cc5c:	mov	r2, #8
   2cc60:	mov	r3, #8
   2cc64:	bl	3215c <flatcc_verify_field@@Base>
   2cc68:	cmp	r0, #0
   2cc6c:	bne	2ccdc <main@@Base+0x16e40>
   2cc70:	mov	r0, r4
   2cc74:	mov	r1, #4
   2cc78:	mov	r2, #0
   2cc7c:	bl	321e0 <flatcc_verify_string_field@@Base>
   2cc80:	cmp	r0, #0
   2cc84:	bne	2ccdc <main@@Base+0x16e40>
   2cc88:	mov	r0, r4
   2cc8c:	mov	r1, #5
   2cc90:	mov	r2, #8
   2cc94:	mov	r3, #8
   2cc98:	bl	3215c <flatcc_verify_field@@Base>
   2cc9c:	cmp	r0, #0
   2cca0:	bne	2ccdc <main@@Base+0x16e40>
   2cca4:	mov	r0, r4
   2cca8:	mov	r1, #6
   2ccac:	mov	r2, #4
   2ccb0:	mov	r3, #4
   2ccb4:	bl	3215c <flatcc_verify_field@@Base>
   2ccb8:	cmp	r0, #0
   2ccbc:	popne	{r4, sl, fp, pc}
   2ccc0:	mov	r0, r4
   2ccc4:	mov	r1, #7
   2ccc8:	mov	r2, #8
   2cccc:	mov	r3, #8
   2ccd0:	bl	3215c <flatcc_verify_field@@Base>
   2ccd4:	cmp	r0, #0
   2ccd8:	beq	2cce0 <main@@Base+0x16e44>
   2ccdc:	pop	{r4, sl, fp, pc}
   2cce0:	mov	r0, r4
   2cce4:	mov	r1, #8
   2cce8:	mov	r2, #4
   2ccec:	mov	r3, #4
   2ccf0:	pop	{r4, sl, fp, lr}
   2ccf4:	b	3215c <flatcc_verify_field@@Base>
   2ccf8:	push	{r4, sl, fp, lr}
   2ccfc:	add	fp, sp, #8
   2cd00:	mov	r1, #0
   2cd04:	mov	r2, #8
   2cd08:	mov	r3, #8
   2cd0c:	mov	r4, r0
   2cd10:	bl	3215c <flatcc_verify_field@@Base>
   2cd14:	cmp	r0, #0
   2cd18:	popne	{r4, sl, fp, pc}
   2cd1c:	mov	r0, r4
   2cd20:	mov	r1, #1
   2cd24:	mov	r2, #4
   2cd28:	mov	r3, #4
   2cd2c:	pop	{r4, sl, fp, lr}
   2cd30:	b	3215c <flatcc_verify_field@@Base>
   2cd34:	push	{r4, sl, fp, lr}
   2cd38:	add	fp, sp, #8
   2cd3c:	mov	r1, #0
   2cd40:	mov	r2, #8
   2cd44:	mov	r3, #8
   2cd48:	mov	r4, r0
   2cd4c:	bl	3215c <flatcc_verify_field@@Base>
   2cd50:	cmp	r0, #0
   2cd54:	popne	{r4, sl, fp, pc}
   2cd58:	mov	r0, r4
   2cd5c:	mov	r1, #1
   2cd60:	mov	r2, #4
   2cd64:	mov	r3, #4
   2cd68:	pop	{r4, sl, fp, lr}
   2cd6c:	b	3215c <flatcc_verify_field@@Base>
   2cd70:	ldrb	r2, [r0, #12]
   2cd74:	sub	r1, r2, #2
   2cd78:	cmp	r1, #9
   2cd7c:	bhi	2cdc0 <main@@Base+0x16f24>
   2cd80:	add	r2, pc, #4
   2cd84:	ldr	r1, [r2, r1, lsl #2]
   2cd88:	add	pc, r2, r1
   2cd8c:	andeq	r0, r0, r8, asr #32
   2cd90:	andeq	r0, r0, r0, asr #32
   2cd94:	andeq	r0, r0, r0, asr #32
   2cd98:	andeq	r0, r0, r0, asr #32
   2cd9c:	andeq	r0, r0, r0, asr #32
   2cda0:	andeq	r0, r0, r0, asr #32
   2cda4:	andeq	r0, r0, r4, asr r0
   2cda8:	andeq	r0, r0, r8, lsr #32
   2cdac:	andeq	r0, r0, r8, lsr #32
   2cdb0:	andeq	r0, r0, ip, lsr r0
   2cdb4:	mov	r1, #4
   2cdb8:	mov	r2, #4
   2cdbc:	b	32a94 <flatcc_verify_union_struct@@Base>
   2cdc0:	cmp	r2, #255	; 0xff
   2cdc4:	bne	2cdcc <main@@Base+0x16f30>
   2cdc8:	b	32aec <flatcc_verify_union_string@@Base>
   2cdcc:	mov	r0, #0
   2cdd0:	bx	lr
   2cdd4:	ldr	r1, [pc, #16]	; 2cdec <main@@Base+0x16f50>
   2cdd8:	add	r1, pc, r1
   2cddc:	b	329ac <flatcc_verify_union_table@@Base>
   2cde0:	mov	r1, #2
   2cde4:	mov	r2, #2
   2cde8:	b	32a94 <flatcc_verify_union_struct@@Base>
   2cdec:	andeq	r0, r0, r0, lsl r0
   2cdf0:	mov	r1, #0
   2cdf4:	mov	r2, #4
   2cdf8:	mov	r3, #4
   2cdfc:	b	3215c <flatcc_verify_field@@Base>

0002ce00 <flatcc_builder_default_alloc@@Base>:
   2ce00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ce04:	add	fp, sp, #24
   2ce08:	mov	r4, r1
   2ce0c:	cmp	r2, #0
   2ce10:	beq	2ce5c <flatcc_builder_default_alloc@@Base+0x5c>
   2ce14:	ldr	r0, [fp, #8]
   2ce18:	mov	r8, r3
   2ce1c:	sub	r1, r0, #1
   2ce20:	cmp	r1, #6
   2ce24:	bhi	2ce88 <flatcc_builder_default_alloc@@Base+0x88>
   2ce28:	add	r3, pc, #8
   2ce2c:	mov	r0, #256	; 0x100
   2ce30:	ldr	r1, [r3, r1, lsl #2]
   2ce34:	add	pc, r3, r1
   2ce38:	andeq	r0, r0, r4, rrx
   2ce3c:	andeq	r0, r0, r0, asr r0
   2ce40:	andeq	r0, r0, r0, asr r0
   2ce44:	andeq	r0, r0, ip, lsl r0
   2ce48:	andeq	r0, r0, r8, asr r0
   2ce4c:	andeq	r0, r0, r0, asr r0
   2ce50:	andeq	r0, r0, r0, rrx
   2ce54:	mov	r0, #288	; 0x120
   2ce58:	b	2ce9c <flatcc_builder_default_alloc@@Base+0x9c>
   2ce5c:	ldr	r0, [r4]
   2ce60:	cmp	r0, #0
   2ce64:	moveq	r6, #0
   2ce68:	moveq	r0, r6
   2ce6c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ce70:	bl	14e4c <free@plt>
   2ce74:	mov	r6, #0
   2ce78:	mov	r0, r6
   2ce7c:	str	r6, [r4]
   2ce80:	str	r6, [r4, #4]
   2ce84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ce88:	mov	r0, #32
   2ce8c:	b	2ce9c <flatcc_builder_default_alloc@@Base+0x9c>
   2ce90:	mov	r0, r2
   2ce94:	b	2ce9c <flatcc_builder_default_alloc@@Base+0x9c>
   2ce98:	mov	r0, #64	; 0x40
   2ce9c:	mov	r7, r0
   2cea0:	lsl	r0, r0, #1
   2cea4:	cmp	r7, r2
   2cea8:	bcc	2ce9c <flatcc_builder_default_alloc@@Base+0x9c>
   2ceac:	ldr	r0, [r4, #4]
   2ceb0:	mov	r6, #0
   2ceb4:	cmp	r0, r2
   2ceb8:	lsrcs	r0, r0, #1
   2cebc:	cmpcs	r0, r7
   2cec0:	bcs	2cef8 <flatcc_builder_default_alloc@@Base+0xf8>
   2cec4:	ldr	r0, [r4]
   2cec8:	mov	r1, r7
   2cecc:	bl	14e88 <realloc@plt>
   2ced0:	cmp	r0, #0
   2ced4:	mvneq	r6, #0
   2ced8:	moveq	r0, r6
   2cedc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cee0:	cmp	r8, #0
   2cee4:	mov	r5, r0
   2cee8:	ldrne	r1, [r4, #4]
   2ceec:	cmpne	r7, r1
   2cef0:	bhi	2cf00 <flatcc_builder_default_alloc@@Base+0x100>
   2cef4:	stm	r4, {r5, r7}
   2cef8:	mov	r0, r6
   2cefc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cf00:	add	r0, r5, r1
   2cf04:	sub	r2, r7, r1
   2cf08:	mov	r1, #0
   2cf0c:	bl	14ee8 <memset@plt>
   2cf10:	b	2cef4 <flatcc_builder_default_alloc@@Base+0xf4>

0002cf14 <flatcc_builder_flush_vtable_cache@@Base>:
   2cf14:	push	{r4, r5, fp, lr}
   2cf18:	add	fp, sp, #8
   2cf1c:	mov	r4, r0
   2cf20:	ldr	r0, [r0, #116]	; 0x74
   2cf24:	cmp	r0, #0
   2cf28:	popeq	{r4, r5, fp, pc}
   2cf2c:	ldr	r0, [r4, #92]	; 0x5c
   2cf30:	ldr	r2, [r4, #96]	; 0x60
   2cf34:	mov	r1, #0
   2cf38:	mov	r5, #0
   2cf3c:	bl	14ee8 <memset@plt>
   2cf40:	mov	r0, #16
   2cf44:	str	r5, [r4, #120]	; 0x78
   2cf48:	str	r0, [r4, #124]	; 0x7c
   2cf4c:	pop	{r4, r5, fp, pc}

0002cf50 <flatcc_builder_custom_init@@Base>:
   2cf50:	push	{r4, r5, r6, r7, fp, lr}
   2cf54:	add	fp, sp, #16
   2cf58:	mov	r6, r2
   2cf5c:	mov	r7, r1
   2cf60:	mov	r1, #0
   2cf64:	mov	r2, #232	; 0xe8
   2cf68:	mov	r5, r3
   2cf6c:	mov	r4, r0
   2cf70:	bl	14ee8 <memset@plt>
   2cf74:	ldr	r0, [fp, #8]
   2cf78:	cmp	r7, #0
   2cf7c:	bne	2cf94 <flatcc_builder_custom_init@@Base+0x44>
   2cf80:	mov	r1, #1
   2cf84:	add	r6, r4, #188	; 0xbc
   2cf88:	str	r1, [r4, #184]	; 0xb8
   2cf8c:	ldr	r7, [pc, #40]	; 2cfbc <flatcc_builder_custom_init@@Base+0x6c>
   2cf90:	ldr	r7, [pc, r7]
   2cf94:	ldr	r1, [pc, #36]	; 2cfc0 <flatcc_builder_custom_init@@Base+0x70>
   2cf98:	cmp	r5, #0
   2cf9c:	ldr	r1, [pc, r1]
   2cfa0:	str	r6, [r4, #36]	; 0x24
   2cfa4:	str	r0, [r4, #40]	; 0x28
   2cfa8:	mov	r0, #0
   2cfac:	str	r7, [r4, #44]	; 0x2c
   2cfb0:	movne	r1, r5
   2cfb4:	str	r1, [r4, #48]	; 0x30
   2cfb8:	pop	{r4, r5, r6, r7, fp, pc}
   2cfbc:	andeq	pc, r2, r8, ror #1
   2cfc0:	ldrdeq	pc, [r2], -r4

0002cfc4 <flatcc_builder_init@@Base>:
   2cfc4:	push	{r4, r5, fp, lr}
   2cfc8:	add	fp, sp, #8
   2cfcc:	mov	r1, #0
   2cfd0:	mov	r2, #232	; 0xe8
   2cfd4:	mov	r4, r0
   2cfd8:	mov	r5, #0
   2cfdc:	bl	14ee8 <memset@plt>
   2cfe0:	mov	r0, #1
   2cfe4:	str	r0, [r4, #184]	; 0xb8
   2cfe8:	add	r0, r4, #188	; 0xbc
   2cfec:	ldr	r1, [pc, #32]	; 2d014 <flatcc_builder_init@@Base+0x50>
   2cff0:	ldr	r1, [pc, r1]
   2cff4:	ldr	r2, [pc, #28]	; 2d018 <flatcc_builder_init@@Base+0x54>
   2cff8:	ldr	r2, [pc, r2]
   2cffc:	str	r0, [r4, #36]	; 0x24
   2d000:	mov	r0, #0
   2d004:	str	r5, [r4, #40]	; 0x28
   2d008:	str	r2, [r4, #44]	; 0x2c
   2d00c:	str	r1, [r4, #48]	; 0x30
   2d010:	pop	{r4, r5, fp, pc}
   2d014:	andeq	pc, r2, r0, lsl #1
   2d018:	andeq	pc, r2, r0, lsl #1

0002d01c <flatcc_builder_custom_reset@@Base>:
   2d01c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d020:	add	fp, sp, #24
   2d024:	sub	sp, sp, #8
   2d028:	mov	r9, r2
   2d02c:	mov	r8, r1
   2d030:	mov	r4, r0
   2d034:	add	r7, r0, #52	; 0x34
   2d038:	mov	r5, #0
   2d03c:	ldr	r0, [r7]
   2d040:	cmp	r0, #0
   2d044:	beq	2d08c <flatcc_builder_custom_reset@@Base+0x70>
   2d048:	cmp	r9, #0
   2d04c:	cmpne	r5, #5
   2d050:	beq	2d07c <flatcc_builder_custom_reset@@Base+0x60>
   2d054:	ldr	r0, [r4, #40]	; 0x28
   2d058:	ldr	r6, [r4, #48]	; 0x30
   2d05c:	mov	r1, r7
   2d060:	mov	r2, #1
   2d064:	mov	r3, #1
   2d068:	str	r5, [sp]
   2d06c:	blx	r6
   2d070:	cmp	r0, #0
   2d074:	bne	2d12c <flatcc_builder_custom_reset@@Base+0x110>
   2d078:	ldr	r0, [r7]
   2d07c:	ldr	r2, [r7, #4]
   2d080:	mov	r1, #0
   2d084:	bl	14ee8 <memset@plt>
   2d088:	b	2d098 <flatcc_builder_custom_reset@@Base+0x7c>
   2d08c:	ldr	r0, [r7, #4]
   2d090:	cmp	r0, #0
   2d094:	bne	2d13c <flatcc_builder_custom_reset@@Base+0x120>
   2d098:	add	r5, r5, #1
   2d09c:	add	r7, r7, #8
   2d0a0:	cmp	r5, #8
   2d0a4:	bcc	2d03c <flatcc_builder_custom_reset@@Base+0x20>
   2d0a8:	mov	r0, #0
   2d0ac:	vmov.i32	q8, #0	; 0x00000000
   2d0b0:	mov	r5, #0
   2d0b4:	str	r0, [r4, #120]	; 0x78
   2d0b8:	ldr	r1, [r4, #124]	; 0x7c
   2d0bc:	cmp	r1, #0
   2d0c0:	movne	r1, #16
   2d0c4:	strne	r1, [r4, #124]	; 0x7c
   2d0c8:	add	r1, r4, #148	; 0x94
   2d0cc:	strh	r0, [r4, #128]	; 0x80
   2d0d0:	str	r0, [r4, #136]	; 0x88
   2d0d4:	str	r0, [r4, #140]	; 0x8c
   2d0d8:	str	r0, [r4, #32]
   2d0dc:	cmp	r8, #0
   2d0e0:	vst1.32	{d16-d17}, [r1]
   2d0e4:	ldr	r2, [r4, #60]	; 0x3c
   2d0e8:	ldr	r1, [r4, #52]	; 0x34
   2d0ec:	ldr	r3, [r4, #76]	; 0x4c
   2d0f0:	str	r2, [r4, #16]
   2d0f4:	str	r0, [r4, #20]
   2d0f8:	str	r0, [r4, #24]
   2d0fc:	movne	r0, #0
   2d100:	str	r3, [r4]
   2d104:	str	r1, [r4, #4]
   2d108:	strne	r0, [r4, #172]	; 0xac
   2d10c:	strne	r0, [r4, #176]	; 0xb0
   2d110:	strne	r0, [r4, #180]	; 0xb4
   2d114:	ldr	r0, [r4, #184]	; 0xb8
   2d118:	cmp	r0, #0
   2d11c:	beq	2d130 <flatcc_builder_custom_reset@@Base+0x114>
   2d120:	add	r0, r4, #188	; 0xbc
   2d124:	bl	31c00 <flatcc_emitter_reset@@Base>
   2d128:	b	2d130 <flatcc_builder_custom_reset@@Base+0x114>
   2d12c:	mvn	r5, #0
   2d130:	mov	r0, r5
   2d134:	sub	sp, fp, #24
   2d138:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2d13c:	ldr	r0, [pc, #24]	; 2d15c <flatcc_builder_custom_reset@@Base+0x140>
   2d140:	ldr	r1, [pc, #24]	; 2d160 <flatcc_builder_custom_reset@@Base+0x144>
   2d144:	ldr	r3, [pc, #24]	; 2d164 <flatcc_builder_custom_reset@@Base+0x148>
   2d148:	movw	r2, #434	; 0x1b2
   2d14c:	add	r0, pc, r0
   2d150:	add	r1, pc, r1
   2d154:	add	r3, pc, r3
   2d158:	bl	14f3c <__assert_fail@plt>
   2d15c:			; <UNDEFINED> instruction: 0x0001b6b0
   2d160:			; <UNDEFINED> instruction: 0x0001b6be
   2d164:	andeq	fp, r1, r7, lsl r7

0002d168 <flatcc_builder_reset@@Base>:
   2d168:	push	{r4, sl, fp, lr}
   2d16c:	add	fp, sp, #8
   2d170:	mov	r4, r0
   2d174:	ldr	r0, [r0, #52]	; 0x34
   2d178:	ldr	r2, [r4, #56]	; 0x38
   2d17c:	cmp	r0, #0
   2d180:	beq	2d190 <flatcc_builder_reset@@Base+0x28>
   2d184:	mov	r1, #0
   2d188:	bl	14ee8 <memset@plt>
   2d18c:	b	2d198 <flatcc_builder_reset@@Base+0x30>
   2d190:	cmp	r2, #0
   2d194:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d198:	ldr	r0, [r4, #60]	; 0x3c
   2d19c:	ldr	r2, [r4, #64]	; 0x40
   2d1a0:	cmp	r0, #0
   2d1a4:	beq	2d1b4 <flatcc_builder_reset@@Base+0x4c>
   2d1a8:	mov	r1, #0
   2d1ac:	bl	14ee8 <memset@plt>
   2d1b0:	b	2d1bc <flatcc_builder_reset@@Base+0x54>
   2d1b4:	cmp	r2, #0
   2d1b8:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d1bc:	ldr	r0, [r4, #68]	; 0x44
   2d1c0:	ldr	r2, [r4, #72]	; 0x48
   2d1c4:	cmp	r0, #0
   2d1c8:	beq	2d1d8 <flatcc_builder_reset@@Base+0x70>
   2d1cc:	mov	r1, #0
   2d1d0:	bl	14ee8 <memset@plt>
   2d1d4:	b	2d1e0 <flatcc_builder_reset@@Base+0x78>
   2d1d8:	cmp	r2, #0
   2d1dc:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d1e0:	ldr	r0, [r4, #76]	; 0x4c
   2d1e4:	ldr	r2, [r4, #80]	; 0x50
   2d1e8:	cmp	r0, #0
   2d1ec:	beq	2d1fc <flatcc_builder_reset@@Base+0x94>
   2d1f0:	mov	r1, #0
   2d1f4:	bl	14ee8 <memset@plt>
   2d1f8:	b	2d204 <flatcc_builder_reset@@Base+0x9c>
   2d1fc:	cmp	r2, #0
   2d200:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d204:	ldr	r0, [r4, #84]	; 0x54
   2d208:	ldr	r2, [r4, #88]	; 0x58
   2d20c:	cmp	r0, #0
   2d210:	beq	2d220 <flatcc_builder_reset@@Base+0xb8>
   2d214:	mov	r1, #0
   2d218:	bl	14ee8 <memset@plt>
   2d21c:	b	2d228 <flatcc_builder_reset@@Base+0xc0>
   2d220:	cmp	r2, #0
   2d224:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d228:	ldr	r0, [r4, #92]	; 0x5c
   2d22c:	ldr	r2, [r4, #96]	; 0x60
   2d230:	cmp	r0, #0
   2d234:	beq	2d244 <flatcc_builder_reset@@Base+0xdc>
   2d238:	mov	r1, #0
   2d23c:	bl	14ee8 <memset@plt>
   2d240:	b	2d24c <flatcc_builder_reset@@Base+0xe4>
   2d244:	cmp	r2, #0
   2d248:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d24c:	ldr	r0, [r4, #100]	; 0x64
   2d250:	ldr	r2, [r4, #104]	; 0x68
   2d254:	cmp	r0, #0
   2d258:	beq	2d268 <flatcc_builder_reset@@Base+0x100>
   2d25c:	mov	r1, #0
   2d260:	bl	14ee8 <memset@plt>
   2d264:	b	2d270 <flatcc_builder_reset@@Base+0x108>
   2d268:	cmp	r2, #0
   2d26c:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d270:	ldr	r0, [r4, #108]	; 0x6c
   2d274:	ldr	r2, [r4, #112]	; 0x70
   2d278:	cmp	r0, #0
   2d27c:	beq	2d28c <flatcc_builder_reset@@Base+0x124>
   2d280:	mov	r1, #0
   2d284:	bl	14ee8 <memset@plt>
   2d288:	b	2d294 <flatcc_builder_reset@@Base+0x12c>
   2d28c:	cmp	r2, #0
   2d290:	bne	2d300 <flatcc_builder_reset@@Base+0x198>
   2d294:	mov	r0, #0
   2d298:	str	r0, [r4, #120]	; 0x78
   2d29c:	ldr	r1, [r4, #124]	; 0x7c
   2d2a0:	cmp	r1, #0
   2d2a4:	movne	r1, #16
   2d2a8:	strne	r1, [r4, #124]	; 0x7c
   2d2ac:	vmov.i32	q8, #0	; 0x00000000
   2d2b0:	add	r1, r4, #148	; 0x94
   2d2b4:	strh	r0, [r4, #128]	; 0x80
   2d2b8:	str	r0, [r4, #136]	; 0x88
   2d2bc:	str	r0, [r4, #140]	; 0x8c
   2d2c0:	str	r0, [r4, #32]
   2d2c4:	vst1.32	{d16-d17}, [r1]
   2d2c8:	ldr	r1, [r4, #184]	; 0xb8
   2d2cc:	ldr	ip, [r4, #52]	; 0x34
   2d2d0:	ldr	r2, [r4, #60]	; 0x3c
   2d2d4:	ldr	r3, [r4, #76]	; 0x4c
   2d2d8:	cmp	r1, #0
   2d2dc:	str	r2, [r4, #16]
   2d2e0:	str	r0, [r4, #20]
   2d2e4:	str	r0, [r4, #24]
   2d2e8:	stm	r4, {r3, ip}
   2d2ec:	beq	2d2f8 <flatcc_builder_reset@@Base+0x190>
   2d2f0:	add	r0, r4, #188	; 0xbc
   2d2f4:	bl	31c00 <flatcc_emitter_reset@@Base>
   2d2f8:	mov	r0, #0
   2d2fc:	pop	{r4, sl, fp, pc}
   2d300:	ldr	r0, [pc, #24]	; 2d320 <flatcc_builder_reset@@Base+0x1b8>
   2d304:	ldr	r1, [pc, #24]	; 2d324 <flatcc_builder_reset@@Base+0x1bc>
   2d308:	ldr	r3, [pc, #24]	; 2d328 <flatcc_builder_reset@@Base+0x1c0>
   2d30c:	movw	r2, #434	; 0x1b2
   2d310:	add	r0, pc, r0
   2d314:	add	r1, pc, r1
   2d318:	add	r3, pc, r3
   2d31c:	bl	14f3c <__assert_fail@plt>
   2d320:	andeq	fp, r1, ip, ror #9
   2d324:	strdeq	fp, [r1], -sl
   2d328:	andeq	fp, r1, r3, asr r5

0002d32c <flatcc_builder_clear@@Base>:
   2d32c:	push	{r4, sl, fp, lr}
   2d330:	add	fp, sp, #8
   2d334:	sub	sp, sp, #8
   2d338:	mov	r4, r0
   2d33c:	ldr	r0, [r0, #40]	; 0x28
   2d340:	mov	r1, #0
   2d344:	mov	r2, #0
   2d348:	mov	r3, #0
   2d34c:	ldr	ip, [r4, #48]	; 0x30
   2d350:	str	r1, [sp]
   2d354:	add	r1, r4, #52	; 0x34
   2d358:	blx	ip
   2d35c:	ldr	r0, [r4, #40]	; 0x28
   2d360:	ldr	ip, [r4, #48]	; 0x30
   2d364:	mov	r1, #1
   2d368:	mov	r2, #0
   2d36c:	mov	r3, #0
   2d370:	str	r1, [sp]
   2d374:	add	r1, r4, #60	; 0x3c
   2d378:	blx	ip
   2d37c:	ldr	r0, [r4, #40]	; 0x28
   2d380:	ldr	ip, [r4, #48]	; 0x30
   2d384:	mov	r1, #2
   2d388:	mov	r2, #0
   2d38c:	mov	r3, #0
   2d390:	str	r1, [sp]
   2d394:	add	r1, r4, #68	; 0x44
   2d398:	blx	ip
   2d39c:	ldr	r0, [r4, #40]	; 0x28
   2d3a0:	ldr	ip, [r4, #48]	; 0x30
   2d3a4:	mov	r1, #3
   2d3a8:	mov	r2, #0
   2d3ac:	mov	r3, #0
   2d3b0:	str	r1, [sp]
   2d3b4:	add	r1, r4, #76	; 0x4c
   2d3b8:	blx	ip
   2d3bc:	ldr	r0, [r4, #40]	; 0x28
   2d3c0:	ldr	ip, [r4, #48]	; 0x30
   2d3c4:	mov	r1, #4
   2d3c8:	mov	r2, #0
   2d3cc:	mov	r3, #0
   2d3d0:	str	r1, [sp]
   2d3d4:	add	r1, r4, #84	; 0x54
   2d3d8:	blx	ip
   2d3dc:	ldr	r0, [r4, #40]	; 0x28
   2d3e0:	ldr	ip, [r4, #48]	; 0x30
   2d3e4:	mov	r1, #5
   2d3e8:	mov	r2, #0
   2d3ec:	mov	r3, #0
   2d3f0:	str	r1, [sp]
   2d3f4:	add	r1, r4, #92	; 0x5c
   2d3f8:	blx	ip
   2d3fc:	ldr	r0, [r4, #40]	; 0x28
   2d400:	ldr	ip, [r4, #48]	; 0x30
   2d404:	mov	r1, #6
   2d408:	mov	r2, #0
   2d40c:	mov	r3, #0
   2d410:	str	r1, [sp]
   2d414:	add	r1, r4, #100	; 0x64
   2d418:	blx	ip
   2d41c:	ldr	r0, [r4, #40]	; 0x28
   2d420:	ldr	ip, [r4, #48]	; 0x30
   2d424:	mov	r1, #7
   2d428:	mov	r2, #0
   2d42c:	mov	r3, #0
   2d430:	str	r1, [sp]
   2d434:	add	r1, r4, #108	; 0x6c
   2d438:	blx	ip
   2d43c:	ldr	r0, [r4, #184]	; 0xb8
   2d440:	cmp	r0, #0
   2d444:	beq	2d450 <flatcc_builder_clear@@Base+0x124>
   2d448:	add	r0, r4, #188	; 0xbc
   2d44c:	bl	31ccc <flatcc_emitter_clear@@Base>
   2d450:	mov	r0, r4
   2d454:	mov	r1, #0
   2d458:	mov	r2, #232	; 0xe8
   2d45c:	sub	sp, fp, #8
   2d460:	pop	{r4, sl, fp, lr}
   2d464:	b	14ee8 <memset@plt>

0002d468 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2d468:	push	{r4, r5, r6, r7, fp, lr}
   2d46c:	add	fp, sp, #16
   2d470:	sub	sp, sp, #8
   2d474:	mov	r4, r0
   2d478:	ldr	r0, [r0, #112]	; 0x70
   2d47c:	add	r1, r1, #7
   2d480:	ldr	r7, [r4, #228]	; 0xe4
   2d484:	bic	r5, r1, #3
   2d488:	add	r6, r4, #108	; 0x6c
   2d48c:	add	r2, r7, r5
   2d490:	cmp	r2, r0
   2d494:	bls	2d4bc <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2d498:	ldr	r0, [r4, #40]	; 0x28
   2d49c:	ldr	ip, [r4, #48]	; 0x30
   2d4a0:	mov	r1, #7
   2d4a4:	mov	r3, #0
   2d4a8:	str	r1, [sp]
   2d4ac:	mov	r1, r6
   2d4b0:	blx	ip
   2d4b4:	cmp	r0, #0
   2d4b8:	bne	2d508 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2d4bc:	ldr	r0, [r6]
   2d4c0:	adds	r6, r0, r7
   2d4c4:	beq	2d4f8 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2d4c8:	mov	r0, r6
   2d4cc:	mov	r1, #0
   2d4d0:	mov	r2, r5
   2d4d4:	bl	14ee8 <memset@plt>
   2d4d8:	ldr	r0, [r4, #224]	; 0xe0
   2d4dc:	str	r0, [r6], #4
   2d4e0:	ldr	r0, [r4, #228]	; 0xe4
   2d4e4:	add	r1, r0, #4
   2d4e8:	add	r0, r0, r5
   2d4ec:	str	r1, [r4, #224]	; 0xe0
   2d4f0:	str	r0, [r4, #228]	; 0xe4
   2d4f4:	b	2d4fc <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2d4f8:	mov	r6, #0
   2d4fc:	mov	r0, r6
   2d500:	sub	sp, fp, #16
   2d504:	pop	{r4, r5, r6, r7, fp, pc}
   2d508:	ldr	r0, [pc, #24]	; 2d528 <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   2d50c:	ldr	r1, [pc, #24]	; 2d52c <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2d510:	ldr	r3, [pc, #24]	; 2d530 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   2d514:	mov	r2, #308	; 0x134
   2d518:	add	r0, pc, r0
   2d51c:	add	r1, pc, r1
   2d520:	add	r3, pc, r3
   2d524:	bl	14f3c <__assert_fail@plt>
   2d528:			; <UNDEFINED> instruction: 0x0001c4b3
   2d52c:	strdeq	fp, [r1], -r2
   2d530:	andeq	ip, r1, r5, ror #5

0002d534 <flatcc_builder_enter_user_frame@@Base>:
   2d534:	push	{r4, r5, r6, r7, fp, lr}
   2d538:	add	fp, sp, #16
   2d53c:	sub	sp, sp, #8
   2d540:	mov	r4, r0
   2d544:	ldr	r0, [r0, #112]	; 0x70
   2d548:	add	r1, r1, #7
   2d54c:	ldr	r7, [r4, #228]	; 0xe4
   2d550:	bic	r5, r1, #3
   2d554:	add	r6, r4, #108	; 0x6c
   2d558:	add	r2, r7, r5
   2d55c:	cmp	r2, r0
   2d560:	bls	2d588 <flatcc_builder_enter_user_frame@@Base+0x54>
   2d564:	ldr	r0, [r4, #40]	; 0x28
   2d568:	ldr	ip, [r4, #48]	; 0x30
   2d56c:	mov	r1, #7
   2d570:	mov	r3, #0
   2d574:	str	r1, [sp]
   2d578:	mov	r1, r6
   2d57c:	blx	ip
   2d580:	cmp	r0, #0
   2d584:	bne	2d5d0 <flatcc_builder_enter_user_frame@@Base+0x9c>
   2d588:	ldr	r0, [r6]
   2d58c:	adds	r6, r0, r7
   2d590:	moveq	r0, #0
   2d594:	subeq	sp, fp, #16
   2d598:	popeq	{r4, r5, r6, r7, fp, pc}
   2d59c:	mov	r0, r6
   2d5a0:	mov	r1, #0
   2d5a4:	mov	r2, r5
   2d5a8:	bl	14ee8 <memset@plt>
   2d5ac:	ldr	r0, [r4, #224]	; 0xe0
   2d5b0:	str	r0, [r6]
   2d5b4:	ldr	r1, [r4, #228]	; 0xe4
   2d5b8:	add	r0, r1, #4
   2d5bc:	add	r1, r1, r5
   2d5c0:	str	r0, [r4, #224]	; 0xe0
   2d5c4:	str	r1, [r4, #228]	; 0xe4
   2d5c8:	sub	sp, fp, #16
   2d5cc:	pop	{r4, r5, r6, r7, fp, pc}
   2d5d0:	ldr	r0, [pc, #24]	; 2d5f0 <flatcc_builder_enter_user_frame@@Base+0xbc>
   2d5d4:	ldr	r1, [pc, #24]	; 2d5f4 <flatcc_builder_enter_user_frame@@Base+0xc0>
   2d5d8:	ldr	r3, [pc, #24]	; 2d5f8 <flatcc_builder_enter_user_frame@@Base+0xc4>
   2d5dc:	mov	r2, #308	; 0x134
   2d5e0:	add	r0, pc, r0
   2d5e4:	add	r1, pc, r1
   2d5e8:	add	r3, pc, r3
   2d5ec:	bl	14f3c <__assert_fail@plt>
   2d5f0:	andeq	ip, r1, fp, ror #7
   2d5f4:	andeq	fp, r1, sl, lsr #4
   2d5f8:	andeq	ip, r1, sp, lsl r2

0002d5fc <flatcc_builder_exit_user_frame@@Base>:
   2d5fc:	ldr	r1, [r0, #224]	; 0xe0
   2d600:	cmp	r1, #0
   2d604:	subne	r2, r1, #4
   2d608:	strne	r2, [r0, #228]	; 0xe4
   2d60c:	ldrne	r2, [r0, #108]	; 0x6c
   2d610:	addne	r1, r2, r1
   2d614:	ldrne	r1, [r1, #-4]
   2d618:	strne	r1, [r0, #224]	; 0xe0
   2d61c:	movne	r0, r1
   2d620:	bxne	lr
   2d624:	push	{fp, lr}
   2d628:	mov	fp, sp
   2d62c:	ldr	r0, [pc, #24]	; 2d64c <flatcc_builder_exit_user_frame@@Base+0x50>
   2d630:	ldr	r1, [pc, #24]	; 2d650 <flatcc_builder_exit_user_frame@@Base+0x54>
   2d634:	ldr	r3, [pc, #24]	; 2d654 <flatcc_builder_exit_user_frame@@Base+0x58>
   2d638:	movw	r2, #542	; 0x21e
   2d63c:	add	r0, pc, r0
   2d640:	add	r1, pc, r1
   2d644:	add	r3, pc, r3
   2d648:	bl	14f3c <__assert_fail@plt>
   2d64c:	andeq	fp, r1, sp, ror #4
   2d650:	andeq	fp, r1, lr, asr #3
   2d654:	andeq	fp, r1, lr, ror r2

0002d658 <flatcc_builder_exit_user_frame_at@@Base>:
   2d658:	push	{fp, lr}
   2d65c:	mov	fp, sp
   2d660:	ldr	r2, [r0, #224]	; 0xe0
   2d664:	cmp	r2, r1
   2d668:	bcc	2d6b4 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2d66c:	cmp	r1, #0
   2d670:	str	r1, [r0, #224]	; 0xe0
   2d674:	subne	r2, r1, #4
   2d678:	strne	r2, [r0, #228]	; 0xe4
   2d67c:	ldrne	r2, [r0, #108]	; 0x6c
   2d680:	addne	r1, r2, r1
   2d684:	ldrne	r1, [r1, #-4]
   2d688:	strne	r1, [r0, #224]	; 0xe0
   2d68c:	movne	r0, r1
   2d690:	popne	{fp, pc}
   2d694:	ldr	r0, [pc, #68]	; 2d6e0 <flatcc_builder_exit_user_frame_at@@Base+0x88>
   2d698:	ldr	r1, [pc, #68]	; 2d6e4 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   2d69c:	ldr	r3, [pc, #68]	; 2d6e8 <flatcc_builder_exit_user_frame_at@@Base+0x90>
   2d6a0:	movw	r2, #542	; 0x21e
   2d6a4:	add	r0, pc, r0
   2d6a8:	add	r1, pc, r1
   2d6ac:	add	r3, pc, r3
   2d6b0:	bl	14f3c <__assert_fail@plt>
   2d6b4:	ldr	r0, [pc, #24]	; 2d6d4 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   2d6b8:	ldr	r1, [pc, #24]	; 2d6d8 <flatcc_builder_exit_user_frame_at@@Base+0x80>
   2d6bc:	ldr	r3, [pc, #24]	; 2d6dc <flatcc_builder_exit_user_frame_at@@Base+0x84>
   2d6c0:	movw	r2, #551	; 0x227
   2d6c4:	add	r0, pc, r0
   2d6c8:	add	r1, pc, r1
   2d6cc:	add	r3, pc, r3
   2d6d0:	bl	14f3c <__assert_fail@plt>
   2d6d4:	andeq	fp, r1, r8, lsr r2
   2d6d8:	andeq	fp, r1, r6, asr #2
   2d6dc:	andeq	fp, r1, pc, asr #4
   2d6e0:	andeq	fp, r1, r5, lsl #4
   2d6e4:	andeq	fp, r1, r6, ror #2
   2d6e8:	andeq	fp, r1, r6, lsl r2

0002d6ec <flatcc_builder_get_current_user_frame@@Base>:
   2d6ec:	ldr	r0, [r0, #224]	; 0xe0
   2d6f0:	bx	lr

0002d6f4 <flatcc_builder_get_user_frame_ptr@@Base>:
   2d6f4:	ldr	r0, [r0, #108]	; 0x6c
   2d6f8:	add	r0, r0, r1
   2d6fc:	bx	lr

0002d700 <flatcc_builder_embed_buffer@@Base>:
   2d700:	push	{r4, r5, r6, r7, fp, lr}
   2d704:	add	fp, sp, #16
   2d708:	sub	sp, sp, #88	; 0x58
   2d70c:	mov	r4, r0
   2d710:	ldr	r0, [fp, #8]
   2d714:	mov	r5, r3
   2d718:	mov	r7, r2
   2d71c:	mov	r2, r1
   2d720:	sub	r1, fp, #18
   2d724:	strh	r0, [fp, #-18]	; 0xffffffee
   2d728:	mov	r0, r4
   2d72c:	ldr	r3, [r4, #152]	; 0x98
   2d730:	cmp	r3, #0
   2d734:	movwne	r3, #1
   2d738:	bl	2d88c <flatcc_builder_embed_buffer@@Base+0x18c>
   2d73c:	ldr	r1, [fp, #12]
   2d740:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2d744:	ldr	r0, [r4, #136]	; 0x88
   2d748:	mov	r2, #0
   2d74c:	str	r2, [sp, #8]
   2d750:	str	r2, [sp, #12]
   2d754:	and	r1, r1, #2
   2d758:	sub	r3, r3, #1
   2d75c:	add	r1, r5, r1, lsl #1
   2d760:	sub	r1, r0, r1
   2d764:	and	r3, r1, r3
   2d768:	add	r1, r3, r5
   2d76c:	str	r1, [fp, #-24]	; 0xffffffe8
   2d770:	ldr	r1, [r4, #152]	; 0x98
   2d774:	cmp	r1, #0
   2d778:	mov	r1, #0
   2d77c:	beq	2d79c <flatcc_builder_embed_buffer@@Base+0x9c>
   2d780:	sub	r1, fp, #24
   2d784:	mov	r2, #1
   2d788:	str	r1, [sp, #16]
   2d78c:	mov	r1, #4
   2d790:	str	r1, [sp, #8]
   2d794:	str	r1, [sp, #20]
   2d798:	str	r2, [sp, #12]
   2d79c:	cmp	r5, #0
   2d7a0:	beq	2d7c4 <flatcc_builder_embed_buffer@@Base+0xc4>
   2d7a4:	add	r6, sp, #8
   2d7a8:	add	r1, r1, r5
   2d7ac:	add	r6, r6, r2, lsl #3
   2d7b0:	add	r2, r2, #1
   2d7b4:	str	r1, [sp, #8]
   2d7b8:	str	r7, [r6, #8]
   2d7bc:	str	r5, [r6, #12]
   2d7c0:	str	r2, [sp, #12]
   2d7c4:	cmp	r3, #0
   2d7c8:	beq	2d7f4 <flatcc_builder_embed_buffer@@Base+0xf4>
   2d7cc:	add	r1, r1, r3
   2d7d0:	add	r7, sp, #8
   2d7d4:	str	r1, [sp, #8]
   2d7d8:	add	r7, r7, r2, lsl #3
   2d7dc:	add	r2, r2, #1
   2d7e0:	ldr	r6, [pc, #136]	; 2d870 <flatcc_builder_embed_buffer@@Base+0x170>
   2d7e4:	ldr	r6, [pc, r6]
   2d7e8:	str	r6, [r7, #8]
   2d7ec:	str	r3, [r7, #12]
   2d7f0:	str	r2, [sp, #12]
   2d7f4:	cmp	r1, #0
   2d7f8:	ble	2d850 <flatcc_builder_embed_buffer@@Base+0x150>
   2d7fc:	sub	r5, r0, r1
   2d800:	ldr	r0, [r4, #36]	; 0x24
   2d804:	ldr	r7, [r4, #44]	; 0x2c
   2d808:	str	r1, [sp]
   2d80c:	add	r1, sp, #8
   2d810:	add	r1, r1, #8
   2d814:	mov	r3, r5
   2d818:	blx	r7
   2d81c:	cmp	r0, #0
   2d820:	streq	r5, [r4, #136]	; 0x88
   2d824:	moveq	r0, r5
   2d828:	subeq	sp, fp, #16
   2d82c:	popeq	{r4, r5, r6, r7, fp, pc}
   2d830:	ldr	r0, [pc, #72]	; 2d880 <flatcc_builder_embed_buffer@@Base+0x180>
   2d834:	ldr	r1, [pc, #72]	; 2d884 <flatcc_builder_embed_buffer@@Base+0x184>
   2d838:	ldr	r3, [pc, #72]	; 2d888 <flatcc_builder_embed_buffer@@Base+0x188>
   2d83c:	movw	r2, #651	; 0x28b
   2d840:	add	r0, pc, r0
   2d844:	add	r1, pc, r1
   2d848:	add	r3, pc, r3
   2d84c:	bl	14f3c <__assert_fail@plt>
   2d850:	ldr	r0, [pc, #28]	; 2d874 <flatcc_builder_embed_buffer@@Base+0x174>
   2d854:	ldr	r1, [pc, #28]	; 2d878 <flatcc_builder_embed_buffer@@Base+0x178>
   2d858:	ldr	r3, [pc, #28]	; 2d87c <flatcc_builder_embed_buffer@@Base+0x17c>
   2d85c:	movw	r2, #647	; 0x287
   2d860:	add	r0, pc, r0
   2d864:	add	r1, pc, r1
   2d868:	add	r3, pc, r3
   2d86c:	bl	14f3c <__assert_fail@plt>
   2d870:	andeq	lr, r2, r0, lsl #17
   2d874:	andeq	ip, r1, fp, ror #2
   2d878:	andeq	sl, r1, sl, lsr #31
   2d87c:	andeq	ip, r1, r2, lsr #32
   2d880:	andeq	ip, r1, fp, lsl #3
   2d884:	andeq	sl, r1, sl, asr #31
   2d888:	andeq	ip, r1, r2, asr #32
   2d88c:	push	{r4, sl, fp, lr}
   2d890:	add	fp, sp, #8
   2d894:	sub	sp, sp, #80	; 0x50
   2d898:	cmp	r2, #0
   2d89c:	bne	2d8ac <flatcc_builder_embed_buffer@@Base+0x1ac>
   2d8a0:	ldrh	r2, [r0, #132]	; 0x84
   2d8a4:	cmp	r2, #0
   2d8a8:	movweq	r2, #1
   2d8ac:	ldrh	r4, [r1]
   2d8b0:	cmp	r4, #4
   2d8b4:	movwcc	r4, #4
   2d8b8:	cmpcs	r4, r2
   2d8bc:	bcs	2d8cc <flatcc_builder_embed_buffer@@Base+0x1cc>
   2d8c0:	cmp	r4, r2
   2d8c4:	movcc	r4, r2
   2d8c8:	strh	r4, [r1]
   2d8cc:	cmp	r3, #0
   2d8d0:	bne	2d944 <flatcc_builder_embed_buffer@@Base+0x244>
   2d8d4:	ldr	r4, [r0, #140]	; 0x8c
   2d8d8:	sub	r1, r2, #1
   2d8dc:	ands	r1, r4, r1
   2d8e0:	beq	2d944 <flatcc_builder_embed_buffer@@Base+0x244>
   2d8e4:	mov	r2, #1
   2d8e8:	str	r1, [sp, #8]
   2d8ec:	str	r1, [sp, #20]
   2d8f0:	cmn	r1, #1
   2d8f4:	str	r2, [sp, #12]
   2d8f8:	ldr	r2, [pc, #172]	; 2d9ac <flatcc_builder_embed_buffer@@Base+0x2ac>
   2d8fc:	ldr	r2, [pc, r2]
   2d900:	str	r2, [sp, #16]
   2d904:	add	r2, r1, r4
   2d908:	str	r2, [r0, #140]	; 0x8c
   2d90c:	ble	2d94c <flatcc_builder_embed_buffer@@Base+0x24c>
   2d910:	ldr	r2, [r0, #36]	; 0x24
   2d914:	ldr	ip, [r0, #44]	; 0x2c
   2d918:	add	r0, sp, #8
   2d91c:	str	r1, [sp]
   2d920:	mov	r3, r4
   2d924:	add	r1, r0, #8
   2d928:	mov	r0, r2
   2d92c:	mov	r2, #1
   2d930:	blx	ip
   2d934:	cmp	r0, #0
   2d938:	bne	2d96c <flatcc_builder_embed_buffer@@Base+0x26c>
   2d93c:	cmn	r4, #1
   2d940:	beq	2d98c <flatcc_builder_embed_buffer@@Base+0x28c>
   2d944:	sub	sp, fp, #8
   2d948:	pop	{r4, sl, fp, pc}
   2d94c:	ldr	r0, [pc, #92]	; 2d9b0 <flatcc_builder_embed_buffer@@Base+0x2b0>
   2d950:	ldr	r1, [pc, #92]	; 2d9b4 <flatcc_builder_embed_buffer@@Base+0x2b4>
   2d954:	ldr	r3, [pc, #92]	; 2d9b8 <flatcc_builder_embed_buffer@@Base+0x2b8>
   2d958:	movw	r2, #673	; 0x2a1
   2d95c:	add	r0, pc, r0
   2d960:	add	r1, pc, r1
   2d964:	add	r3, pc, r3
   2d968:	bl	14f3c <__assert_fail@plt>
   2d96c:	ldr	r0, [pc, #72]	; 2d9bc <flatcc_builder_embed_buffer@@Base+0x2bc>
   2d970:	ldr	r1, [pc, #72]	; 2d9c0 <flatcc_builder_embed_buffer@@Base+0x2c0>
   2d974:	ldr	r3, [pc, #72]	; 2d9c4 <flatcc_builder_embed_buffer@@Base+0x2c4>
   2d978:	movw	r2, #677	; 0x2a5
   2d97c:	add	r0, pc, r0
   2d980:	add	r1, pc, r1
   2d984:	add	r3, pc, r3
   2d988:	bl	14f3c <__assert_fail@plt>
   2d98c:	ldr	r0, [pc, #52]	; 2d9c8 <flatcc_builder_embed_buffer@@Base+0x2c8>
   2d990:	ldr	r1, [pc, #52]	; 2d9cc <flatcc_builder_embed_buffer@@Base+0x2cc>
   2d994:	ldr	r3, [pc, #52]	; 2d9d0 <flatcc_builder_embed_buffer@@Base+0x2d0>
   2d998:	movw	r2, #702	; 0x2be
   2d99c:	add	r0, pc, r0
   2d9a0:	add	r1, pc, r1
   2d9a4:	add	r3, pc, r3
   2d9a8:	bl	14f3c <__assert_fail@plt>
   2d9ac:	andeq	lr, r2, r8, ror #14
   2d9b0:	andeq	ip, r1, pc, rrx
   2d9b4:	andeq	sl, r1, lr, lsr #29
   2d9b8:	andeq	fp, r1, r2, ror #31
   2d9bc:	andeq	ip, r1, pc, asr #32
   2d9c0:	andeq	sl, r1, lr, lsl #29
   2d9c4:	andeq	fp, r1, r2, asr #31
   2d9c8:	andeq	ip, r1, pc, lsr #32
   2d9cc:	andeq	sl, r1, lr, ror #28
   2d9d0:	andeq	fp, r1, r4, lsr #29

0002d9d4 <flatcc_builder_create_buffer@@Base>:
   2d9d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d9d8:	add	fp, sp, #28
   2d9dc:	sub	sp, sp, #100	; 0x64
   2d9e0:	ldr	r8, [fp, #12]
   2d9e4:	mov	r4, r0
   2d9e8:	ldr	r0, [fp, #8]
   2d9ec:	mov	r7, r1
   2d9f0:	mov	r5, #0
   2d9f4:	mov	r9, r3
   2d9f8:	sub	r1, fp, #30
   2d9fc:	str	r5, [sp, #12]
   2da00:	and	r6, r8, #1
   2da04:	strh	r0, [fp, #-30]	; 0xffffffe2
   2da08:	mov	r0, r4
   2da0c:	mov	r3, r6
   2da10:	bl	2d88c <flatcc_builder_embed_buffer@@Base+0x18c>
   2da14:	ldrh	r0, [r4, #128]	; 0x80
   2da18:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2da1c:	cmp	r0, r1
   2da20:	strhcc	r1, [r4, #128]	; 0x80
   2da24:	cmp	r7, #0
   2da28:	stmib	sp, {r6, r9}
   2da2c:	beq	2da48 <flatcc_builder_create_buffer@@Base+0x74>
   2da30:	ldr	r5, [r7]
   2da34:	cmp	r5, #0
   2da38:	str	r5, [sp, #12]
   2da3c:	movwne	r5, #1
   2da40:	lsl	r7, r5, #2
   2da44:	b	2da4c <flatcc_builder_create_buffer@@Base+0x78>
   2da48:	mov	r7, #0
   2da4c:	ldr	r9, [r4, #136]	; 0x88
   2da50:	mov	sl, #4
   2da54:	mvn	r6, #3
   2da58:	mov	r3, #0
   2da5c:	ands	ip, r8, #3
   2da60:	and	r2, sl, r8, lsl #1
   2da64:	str	r3, [sp, #20]
   2da68:	str	r3, [sp, #16]
   2da6c:	sub	r2, r6, r2
   2da70:	sub	r6, r1, #1
   2da74:	mov	r1, #4
   2da78:	add	r2, r2, r9
   2da7c:	sub	r2, r2, r7
   2da80:	beq	2daa4 <flatcc_builder_create_buffer@@Base+0xd0>
   2da84:	sub	r1, fp, #40	; 0x28
   2da88:	mov	r3, #1
   2da8c:	str	r1, [sp, #24]
   2da90:	mov	r1, #4
   2da94:	str	r1, [sp, #16]
   2da98:	str	r1, [sp, #28]
   2da9c:	mov	r1, #8
   2daa0:	str	r3, [sp, #20]
   2daa4:	add	lr, sp, #16
   2daa8:	and	r6, r2, r6
   2daac:	sub	r0, fp, #36	; 0x24
   2dab0:	str	r1, [sp, #16]
   2dab4:	cmp	r5, #0
   2dab8:	add	r2, lr, r3, lsl #3
   2dabc:	str	r0, [r2, #8]
   2dac0:	str	sl, [r2, #12]
   2dac4:	add	r2, r3, #1
   2dac8:	str	r2, [sp, #20]
   2dacc:	beq	2daf0 <flatcc_builder_create_buffer@@Base+0x11c>
   2dad0:	add	r1, r1, r7
   2dad4:	add	r0, lr, r2, lsl #3
   2dad8:	add	r2, sp, #12
   2dadc:	str	r1, [sp, #16]
   2dae0:	str	r2, [r0, #8]
   2dae4:	orr	r2, r3, #2
   2dae8:	str	r7, [r0, #12]
   2daec:	str	r2, [sp, #20]
   2daf0:	cmp	r6, #0
   2daf4:	beq	2db1c <flatcc_builder_create_buffer@@Base+0x148>
   2daf8:	add	r1, r1, r6
   2dafc:	add	r0, lr, r2, lsl #3
   2db00:	add	r2, r2, #1
   2db04:	str	r1, [sp, #16]
   2db08:	ldr	r3, [pc, #224]	; 2dbf0 <flatcc_builder_create_buffer@@Base+0x21c>
   2db0c:	ldr	r3, [pc, r3]
   2db10:	str	r3, [r0, #8]
   2db14:	str	r6, [r0, #12]
   2db18:	str	r2, [sp, #20]
   2db1c:	ldr	r5, [sp, #4]
   2db20:	sub	r7, r9, r1
   2db24:	cmp	ip, #0
   2db28:	mov	r6, #144	; 0x90
   2db2c:	ldr	r3, [sp, #8]
   2db30:	mov	r0, r7
   2db34:	addne	r0, r0, #4
   2db38:	cmp	r5, #0
   2db3c:	sub	r3, r3, r0
   2db40:	movweq	r6, #140	; 0x8c
   2db44:	cmp	r1, #0
   2db48:	ldr	r6, [r4, r6]
   2db4c:	str	r3, [fp, #-36]	; 0xffffffdc
   2db50:	sub	r0, r6, r0
   2db54:	str	r0, [fp, #-40]	; 0xffffffd8
   2db58:	ble	2dbb0 <flatcc_builder_create_buffer@@Base+0x1dc>
   2db5c:	ldr	r0, [r4, #36]	; 0x24
   2db60:	ldr	r6, [r4, #44]	; 0x2c
   2db64:	str	r1, [sp]
   2db68:	add	r1, lr, #8
   2db6c:	mov	r3, r7
   2db70:	blx	r6
   2db74:	cmp	r0, #0
   2db78:	bne	2dbd0 <flatcc_builder_create_buffer@@Base+0x1fc>
   2db7c:	cmp	r7, #0
   2db80:	str	r7, [r4, #136]	; 0x88
   2db84:	movne	r0, r7
   2db88:	subne	sp, fp, #28
   2db8c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2db90:	ldr	r0, [pc, #116]	; 2dc0c <flatcc_builder_create_buffer@@Base+0x238>
   2db94:	ldr	r1, [pc, #116]	; 2dc10 <flatcc_builder_create_buffer@@Base+0x23c>
   2db98:	ldr	r3, [pc, #116]	; 2dc14 <flatcc_builder_create_buffer@@Base+0x240>
   2db9c:	mov	r2, #772	; 0x304
   2dba0:	add	r0, pc, r0
   2dba4:	add	r1, pc, r1
   2dba8:	add	r3, pc, r3
   2dbac:	bl	14f3c <__assert_fail@plt>
   2dbb0:	ldr	r0, [pc, #60]	; 2dbf4 <flatcc_builder_create_buffer@@Base+0x220>
   2dbb4:	ldr	r1, [pc, #60]	; 2dbf8 <flatcc_builder_create_buffer@@Base+0x224>
   2dbb8:	ldr	r3, [pc, #60]	; 2dbfc <flatcc_builder_create_buffer@@Base+0x228>
   2dbbc:	movw	r2, #647	; 0x287
   2dbc0:	add	r0, pc, r0
   2dbc4:	add	r1, pc, r1
   2dbc8:	add	r3, pc, r3
   2dbcc:	bl	14f3c <__assert_fail@plt>
   2dbd0:	ldr	r0, [pc, #40]	; 2dc00 <flatcc_builder_create_buffer@@Base+0x22c>
   2dbd4:	ldr	r1, [pc, #40]	; 2dc04 <flatcc_builder_create_buffer@@Base+0x230>
   2dbd8:	ldr	r3, [pc, #40]	; 2dc08 <flatcc_builder_create_buffer@@Base+0x234>
   2dbdc:	movw	r2, #651	; 0x28b
   2dbe0:	add	r0, pc, r0
   2dbe4:	add	r1, pc, r1
   2dbe8:	add	r3, pc, r3
   2dbec:	bl	14f3c <__assert_fail@plt>
   2dbf0:	andeq	lr, r2, r8, asr r5
   2dbf4:	andeq	fp, r1, fp, lsl #28
   2dbf8:	andeq	sl, r1, sl, asr #24
   2dbfc:	andeq	fp, r1, r2, asr #25
   2dc00:	andeq	fp, r1, fp, ror #27
   2dc04:	andeq	sl, r1, sl, lsr #24
   2dc08:	andeq	fp, r1, r2, lsr #25
   2dc0c:	andeq	fp, r1, fp, lsr #28
   2dc10:	andeq	sl, r1, sl, ror #24
   2dc14:			; <UNDEFINED> instruction: 0x0001adb8

0002dc18 <flatcc_builder_create_struct@@Base>:
   2dc18:	push	{r4, r5, r6, sl, fp, lr}
   2dc1c:	add	fp, sp, #16
   2dc20:	sub	sp, sp, #80	; 0x50
   2dc24:	cmp	r3, #0
   2dc28:	beq	2dd00 <flatcc_builder_create_struct@@Base+0xe8>
   2dc2c:	mov	r5, r0
   2dc30:	ldrh	r0, [r0, #128]	; 0x80
   2dc34:	mov	r4, #0
   2dc38:	cmp	r0, r3
   2dc3c:	strhcc	r3, [r5, #128]	; 0x80
   2dc40:	sub	r3, r3, #1
   2dc44:	cmp	r2, #0
   2dc48:	ldr	r0, [r5, #136]	; 0x88
   2dc4c:	str	r4, [sp, #12]
   2dc50:	str	r4, [sp, #8]
   2dc54:	movne	r4, #1
   2dc58:	strne	r1, [sp, #16]
   2dc5c:	strne	r2, [sp, #8]
   2dc60:	strne	r2, [sp, #20]
   2dc64:	strne	r4, [sp, #12]
   2dc68:	sub	r6, r0, r2
   2dc6c:	and	r3, r6, r3
   2dc70:	cmp	r3, #0
   2dc74:	beq	2dca0 <flatcc_builder_create_struct@@Base+0x88>
   2dc78:	add	r2, r3, r2
   2dc7c:	add	r1, sp, #8
   2dc80:	str	r2, [sp, #8]
   2dc84:	add	r1, r1, r4, lsl #3
   2dc88:	add	r4, r4, #1
   2dc8c:	ldr	r6, [pc, #172]	; 2dd40 <flatcc_builder_create_struct@@Base+0x128>
   2dc90:	ldr	r6, [pc, r6]
   2dc94:	str	r6, [r1, #8]
   2dc98:	str	r3, [r1, #12]
   2dc9c:	str	r4, [sp, #12]
   2dca0:	cmp	r2, #0
   2dca4:	ble	2dd20 <flatcc_builder_create_struct@@Base+0x108>
   2dca8:	sub	r6, r0, r2
   2dcac:	ldr	r0, [r5, #36]	; 0x24
   2dcb0:	ldr	ip, [r5, #44]	; 0x2c
   2dcb4:	add	r1, sp, #8
   2dcb8:	str	r2, [sp]
   2dcbc:	mov	r2, r4
   2dcc0:	add	r1, r1, #8
   2dcc4:	mov	r3, r6
   2dcc8:	blx	ip
   2dccc:	cmp	r0, #0
   2dcd0:	streq	r6, [r5, #136]	; 0x88
   2dcd4:	moveq	r0, r6
   2dcd8:	subeq	sp, fp, #16
   2dcdc:	popeq	{r4, r5, r6, sl, fp, pc}
   2dce0:	ldr	r0, [pc, #116]	; 2dd5c <flatcc_builder_create_struct@@Base+0x144>
   2dce4:	ldr	r1, [pc, #116]	; 2dd60 <flatcc_builder_create_struct@@Base+0x148>
   2dce8:	ldr	r3, [pc, #116]	; 2dd64 <flatcc_builder_create_struct@@Base+0x14c>
   2dcec:	movw	r2, #651	; 0x28b
   2dcf0:	add	r0, pc, r0
   2dcf4:	add	r1, pc, r1
   2dcf8:	add	r3, pc, r3
   2dcfc:	bl	14f3c <__assert_fail@plt>
   2dd00:	ldr	r0, [pc, #60]	; 2dd44 <flatcc_builder_create_struct@@Base+0x12c>
   2dd04:	ldr	r1, [pc, #60]	; 2dd48 <flatcc_builder_create_struct@@Base+0x130>
   2dd08:	ldr	r3, [pc, #60]	; 2dd4c <flatcc_builder_create_struct@@Base+0x134>
   2dd0c:	movw	r2, #783	; 0x30f
   2dd10:	add	r0, pc, r0
   2dd14:	add	r1, pc, r1
   2dd18:	add	r3, pc, r3
   2dd1c:	bl	14f3c <__assert_fail@plt>
   2dd20:	ldr	r0, [pc, #40]	; 2dd50 <flatcc_builder_create_struct@@Base+0x138>
   2dd24:	ldr	r1, [pc, #40]	; 2dd54 <flatcc_builder_create_struct@@Base+0x13c>
   2dd28:	ldr	r3, [pc, #40]	; 2dd58 <flatcc_builder_create_struct@@Base+0x140>
   2dd2c:	movw	r2, #647	; 0x287
   2dd30:	add	r0, pc, r0
   2dd34:	add	r1, pc, r1
   2dd38:	add	r3, pc, r3
   2dd3c:	bl	14f3c <__assert_fail@plt>
   2dd40:	ldrdeq	lr, [r2], -r4
   2dd44:	ldrdeq	sl, [r1], -r3
   2dd48:	strdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   2dd4c:	ldrdeq	sl, [r1], -r6
   2dd50:	muleq	r1, fp, ip
   2dd54:	ldrdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   2dd58:	andeq	fp, r1, r2, asr fp
   2dd5c:	ldrdeq	fp, [r1], -fp	; <UNPREDICTABLE>
   2dd60:	andeq	sl, r1, sl, lsl fp
   2dd64:	muleq	r1, r2, fp

0002dd68 <flatcc_builder_start_buffer@@Base>:
   2dd68:	push	{r4, r5, r6, r7, fp, lr}
   2dd6c:	add	fp, sp, #16
   2dd70:	mov	r5, r1
   2dd74:	ldrh	r1, [r0, #128]	; 0x80
   2dd78:	mov	r6, r3
   2dd7c:	mov	r7, r2
   2dd80:	mov	r4, r0
   2dd84:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2dd88:	mov	r1, r0
   2dd8c:	mvn	r0, #0
   2dd90:	cmp	r1, #0
   2dd94:	popne	{r4, r5, r6, r7, fp, pc}
   2dd98:	mov	r0, #1
   2dd9c:	cmp	r5, #0
   2dda0:	strh	r0, [r4, #128]	; 0x80
   2dda4:	ldrh	r1, [r4, #132]	; 0x84
   2dda8:	ldr	r2, [r4, #32]
   2ddac:	strh	r1, [r2, #34]	; 0x22
   2ddb0:	strh	r7, [r4, #132]	; 0x84
   2ddb4:	ldrh	r1, [r4, #164]	; 0xa4
   2ddb8:	ldr	r2, [r4, #32]
   2ddbc:	strh	r1, [r2, #32]
   2ddc0:	strh	r6, [r4, #164]	; 0xa4
   2ddc4:	ldr	r1, [r4, #32]
   2ddc8:	ldr	r2, [r4, #144]	; 0x90
   2ddcc:	str	r2, [r1, #20]
   2ddd0:	ldr	r1, [r4, #32]
   2ddd4:	ldr	r2, [r4, #152]	; 0x98
   2ddd8:	str	r2, [r1, #28]
   2dddc:	ldr	r3, [r4, #148]	; 0x94
   2dde0:	ldr	r1, [r4, #32]
   2dde4:	ldr	r2, [r4, #136]	; 0x88
   2dde8:	ldr	r7, [r4, #168]	; 0xa8
   2ddec:	add	r6, r3, #1
   2ddf0:	str	r2, [r4, #144]	; 0x90
   2ddf4:	str	r6, [r4, #148]	; 0x94
   2ddf8:	str	r3, [r4, #152]	; 0x98
   2ddfc:	str	r7, [r1, #16]
   2de00:	ldr	r1, [pc, #28]	; 2de24 <flatcc_builder_start_buffer@@Base+0xbc>
   2de04:	ldr	r1, [pc, r1]
   2de08:	movne	r1, r5
   2de0c:	ldr	r1, [r1]
   2de10:	str	r1, [r4, #168]	; 0xa8
   2de14:	ldr	r1, [r4, #32]
   2de18:	strh	r0, [r1, #14]
   2de1c:	mov	r0, #0
   2de20:	pop	{r4, r5, r6, r7, fp, pc}
   2de24:	andeq	lr, r2, r0, ror #4
   2de28:	push	{r4, r5, r6, r7, fp, lr}
   2de2c:	add	fp, sp, #16
   2de30:	sub	sp, sp, #8
   2de34:	mov	r5, r1
   2de38:	ldr	r1, [r0, #156]	; 0x9c
   2de3c:	ldr	r2, [r0, #160]	; 0xa0
   2de40:	mov	r4, r0
   2de44:	add	r0, r1, #1
   2de48:	cmp	r1, r2
   2de4c:	str	r0, [r4, #156]	; 0x9c
   2de50:	bge	2de64 <flatcc_builder_start_buffer@@Base+0xfc>
   2de54:	ldr	r0, [r4, #32]
   2de58:	add	r0, r0, #36	; 0x24
   2de5c:	str	r0, [r4, #32]
   2de60:	b	2def8 <flatcc_builder_start_buffer@@Base+0x190>
   2de64:	ldr	r2, [r4, #176]	; 0xb0
   2de68:	mvn	r6, #0
   2de6c:	cmp	r2, #1
   2de70:	cmpge	r1, r2
   2de74:	bge	2df30 <flatcc_builder_start_buffer@@Base+0x1c8>
   2de78:	add	r7, r0, r0, lsl #3
   2de7c:	ldr	r0, [r4, #88]	; 0x58
   2de80:	lsl	r2, r7, #2
   2de84:	cmp	r2, r0
   2de88:	bls	2deb0 <flatcc_builder_start_buffer@@Base+0x148>
   2de8c:	ldr	r0, [r4, #40]	; 0x28
   2de90:	ldr	ip, [r4, #48]	; 0x30
   2de94:	mov	r3, #4
   2de98:	add	r1, r4, #84	; 0x54
   2de9c:	str	r3, [sp]
   2dea0:	mov	r3, #0
   2dea4:	blx	ip
   2dea8:	cmp	r0, #0
   2deac:	bne	2df3c <flatcc_builder_start_buffer@@Base+0x1d4>
   2deb0:	ldr	r1, [r4, #84]	; 0x54
   2deb4:	mvn	r0, #35	; 0x23
   2deb8:	add	r0, r0, r7, lsl #2
   2debc:	adds	r0, r0, r1
   2dec0:	str	r0, [r4, #32]
   2dec4:	beq	2df30 <flatcc_builder_start_buffer@@Base+0x1c8>
   2dec8:	ldr	r1, [r4, #88]	; 0x58
   2decc:	movw	r3, #36409	; 0x8e39
   2ded0:	ldr	r2, [r4, #176]	; 0xb0
   2ded4:	movt	r3, #14563	; 0x38e3
   2ded8:	umull	r1, r3, r1, r3
   2dedc:	lsr	r1, r3, #3
   2dee0:	cmp	r2, r3, lsr #3
   2dee4:	mov	r3, r1
   2dee8:	movlt	r3, r2
   2deec:	cmp	r2, #0
   2def0:	movle	r3, r1
   2def4:	str	r3, [r4, #160]	; 0xa0
   2def8:	ldr	r1, [r4, #20]
   2defc:	mvn	r3, #3
   2df00:	mov	r6, #0
   2df04:	str	r1, [r0, #8]
   2df08:	ldrh	r2, [r4, #130]	; 0x82
   2df0c:	strh	r2, [r0, #12]
   2df10:	strh	r5, [r4, #130]	; 0x82
   2df14:	ldr	r2, [r4, #28]
   2df18:	stm	r0, {r2, r3}
   2df1c:	add	r0, r1, r2
   2df20:	str	r6, [r4, #20]
   2df24:	add	r0, r0, #7
   2df28:	bic	r0, r0, #7
   2df2c:	str	r0, [r4, #28]
   2df30:	mov	r0, r6
   2df34:	sub	sp, fp, #16
   2df38:	pop	{r4, r5, r6, r7, fp, pc}
   2df3c:	ldr	r0, [pc, #24]	; 2df5c <flatcc_builder_start_buffer@@Base+0x1f4>
   2df40:	ldr	r1, [pc, #24]	; 2df60 <flatcc_builder_start_buffer@@Base+0x1f8>
   2df44:	ldr	r3, [pc, #24]	; 2df64 <flatcc_builder_start_buffer@@Base+0x1fc>
   2df48:	mov	r2, #308	; 0x134
   2df4c:	add	r0, pc, r0
   2df50:	add	r1, pc, r1
   2df54:	add	r3, pc, r3
   2df58:	bl	14f3c <__assert_fail@plt>
   2df5c:	andeq	fp, r1, pc, ror sl
   2df60:			; <UNDEFINED> instruction: 0x0001a8be
   2df64:			; <UNDEFINED> instruction: 0x0001b8b1

0002df68 <flatcc_builder_end_buffer@@Base>:
   2df68:	push	{r4, r5, r6, sl, fp, lr}
   2df6c:	add	fp, sp, #16
   2df70:	sub	sp, sp, #8
   2df74:	mov	r4, r0
   2df78:	ldr	r0, [r0, #32]
   2df7c:	ldrh	r0, [r0, #14]
   2df80:	cmp	r0, #1
   2df84:	bne	2e078 <flatcc_builder_end_buffer@@Base+0x110>
   2df88:	mov	r3, r1
   2df8c:	ldr	r1, [r4, #152]	; 0x98
   2df90:	ldrh	r0, [r4, #164]	; 0xa4
   2df94:	ldrh	r2, [r4, #132]	; 0x84
   2df98:	cmp	r1, #0
   2df9c:	ldrh	r1, [r4, #128]	; 0x80
   2dfa0:	and	r0, r0, #2
   2dfa4:	orrne	r0, r0, #1
   2dfa8:	cmp	r1, r2
   2dfac:	movcc	r1, r2
   2dfb0:	strhcc	r2, [r4, #128]	; 0x80
   2dfb4:	str	r0, [sp, #4]
   2dfb8:	mov	r0, r4
   2dfbc:	str	r1, [sp]
   2dfc0:	add	r1, r4, #168	; 0xa8
   2dfc4:	bl	2d9d4 <flatcc_builder_create_buffer@@Base>
   2dfc8:	mov	r6, r0
   2dfcc:	cmp	r0, #0
   2dfd0:	beq	2e06c <flatcc_builder_end_buffer@@Base+0x104>
   2dfd4:	ldr	r1, [r4, #32]
   2dfd8:	ldr	r0, [r4, #16]
   2dfdc:	ldr	r2, [r4, #20]
   2dfe0:	ldr	r3, [r1, #20]
   2dfe4:	str	r3, [r4, #144]	; 0x90
   2dfe8:	ldr	r3, [r1, #28]
   2dfec:	str	r3, [r4, #152]	; 0x98
   2dff0:	ldr	r3, [r1, #16]
   2dff4:	str	r3, [r4, #168]	; 0xa8
   2dff8:	ldrh	r1, [r1, #32]
   2dffc:	strh	r1, [r4, #164]	; 0xa4
   2e000:	mov	r1, #0
   2e004:	bl	14ee8 <memset@plt>
   2e008:	ldr	r0, [r4, #32]
   2e00c:	ldr	r1, [r4, #60]	; 0x3c
   2e010:	ldr	r2, [r4, #64]	; 0x40
   2e014:	ldr	r3, [r0, #8]
   2e018:	str	r3, [r4, #20]
   2e01c:	ldr	r3, [r0]
   2e020:	str	r3, [r4, #28]
   2e024:	add	r1, r1, r3
   2e028:	ldr	r5, [r0, #4]
   2e02c:	str	r1, [r4, #16]
   2e030:	sub	r1, r2, r3
   2e034:	cmp	r1, r5
   2e038:	movhi	r1, r5
   2e03c:	str	r1, [r4, #24]
   2e040:	ldrh	r1, [r4, #130]	; 0x82
   2e044:	ldrh	r2, [r4, #128]	; 0x80
   2e048:	cmp	r2, r1
   2e04c:	strhcc	r1, [r4, #128]	; 0x80
   2e050:	ldrh	r1, [r0, #12]
   2e054:	sub	r0, r0, #36	; 0x24
   2e058:	str	r0, [r4, #32]
   2e05c:	strh	r1, [r4, #130]	; 0x82
   2e060:	ldr	r0, [r4, #156]	; 0x9c
   2e064:	sub	r0, r0, #1
   2e068:	str	r0, [r4, #156]	; 0x9c
   2e06c:	mov	r0, r6
   2e070:	sub	sp, fp, #16
   2e074:	pop	{r4, r5, r6, sl, fp, pc}
   2e078:	ldr	r0, [pc, #24]	; 2e098 <flatcc_builder_end_buffer@@Base+0x130>
   2e07c:	ldr	r1, [pc, #24]	; 2e09c <flatcc_builder_end_buffer@@Base+0x134>
   2e080:	ldr	r3, [pc, #24]	; 2e0a0 <flatcc_builder_end_buffer@@Base+0x138>
   2e084:	movw	r2, #838	; 0x346
   2e088:	add	r0, pc, r0
   2e08c:	add	r1, pc, r1
   2e090:	add	r3, pc, r3
   2e094:	bl	14f3c <__assert_fail@plt>
   2e098:	andeq	sl, r1, ip, asr #19
   2e09c:	andeq	sl, r1, r2, lsl #15
   2e0a0:	strdeq	sl, [r1], -r0

0002e0a4 <flatcc_builder_start_struct@@Base>:
   2e0a4:	push	{r4, r5, r6, r7, fp, lr}
   2e0a8:	add	fp, sp, #16
   2e0ac:	sub	sp, sp, #8
   2e0b0:	mov	r6, r1
   2e0b4:	mov	r1, r2
   2e0b8:	mov	r4, r0
   2e0bc:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2e0c0:	mov	r5, #0
   2e0c4:	cmp	r0, #0
   2e0c8:	bne	2e178 <flatcc_builder_start_struct@@Base+0xd4>
   2e0cc:	ldr	r2, [r4, #32]
   2e0d0:	mov	r0, #2
   2e0d4:	mvn	r7, #3
   2e0d8:	strh	r0, [r2, #14]
   2e0dc:	ldr	r1, [r4, #28]
   2e0e0:	ldr	r3, [r4, #64]	; 0x40
   2e0e4:	ldr	r0, [r4, #60]	; 0x3c
   2e0e8:	sub	r3, r3, r1
   2e0ec:	add	r0, r0, r1
   2e0f0:	cmn	r3, #4
   2e0f4:	str	r0, [r4, #16]
   2e0f8:	movcs	r3, r7
   2e0fc:	str	r3, [r4, #24]
   2e100:	str	r7, [r2, #4]
   2e104:	ldr	r7, [r4, #20]
   2e108:	add	r2, r7, r6
   2e10c:	cmp	r2, r3
   2e110:	str	r2, [r4, #20]
   2e114:	bcc	2e174 <flatcc_builder_start_struct@@Base+0xd0>
   2e118:	ldr	r0, [r4, #40]	; 0x28
   2e11c:	ldr	r6, [r4, #48]	; 0x30
   2e120:	add	r1, r1, r2
   2e124:	mov	r3, #1
   2e128:	str	r3, [sp]
   2e12c:	add	r2, r1, #1
   2e130:	add	r1, r4, #60	; 0x3c
   2e134:	mov	r3, #1
   2e138:	blx	r6
   2e13c:	cmp	r0, #0
   2e140:	bne	2e178 <flatcc_builder_start_struct@@Base+0xd4>
   2e144:	ldr	r1, [r4, #28]
   2e148:	ldr	r0, [r4, #60]	; 0x3c
   2e14c:	ldr	r3, [r4, #64]	; 0x40
   2e150:	ldr	r2, [r4, #32]
   2e154:	add	r0, r0, r1
   2e158:	sub	r1, r3, r1
   2e15c:	mvn	r3, #3
   2e160:	cmn	r1, #4
   2e164:	str	r0, [r4, #16]
   2e168:	movcs	r1, r3
   2e16c:	str	r1, [r4, #24]
   2e170:	str	r3, [r2, #4]
   2e174:	add	r5, r0, r7
   2e178:	mov	r0, r5
   2e17c:	sub	sp, fp, #16
   2e180:	pop	{r4, r5, r6, r7, fp, pc}

0002e184 <flatcc_builder_struct_edit@@Base>:
   2e184:	ldr	r0, [r0, #16]
   2e188:	bx	lr

0002e18c <flatcc_builder_end_struct@@Base>:
   2e18c:	push	{r4, r5, fp, lr}
   2e190:	add	fp, sp, #8
   2e194:	mov	r4, r0
   2e198:	ldr	r0, [r0, #32]
   2e19c:	ldrh	r0, [r0, #14]
   2e1a0:	cmp	r0, #2
   2e1a4:	bne	2e244 <flatcc_builder_end_struct@@Base+0xb8>
   2e1a8:	ldrh	r3, [r4, #130]	; 0x82
   2e1ac:	ldr	r1, [r4, #16]
   2e1b0:	ldr	r2, [r4, #20]
   2e1b4:	mov	r0, r4
   2e1b8:	bl	2dc18 <flatcc_builder_create_struct@@Base>
   2e1bc:	mov	r5, r0
   2e1c0:	cmp	r0, #0
   2e1c4:	beq	2e23c <flatcc_builder_end_struct@@Base+0xb0>
   2e1c8:	ldr	r0, [r4, #16]
   2e1cc:	ldr	r2, [r4, #20]
   2e1d0:	mov	r1, #0
   2e1d4:	bl	14ee8 <memset@plt>
   2e1d8:	ldr	r0, [r4, #32]
   2e1dc:	ldr	r1, [r4, #60]	; 0x3c
   2e1e0:	ldr	ip, [r4, #64]	; 0x40
   2e1e4:	ldr	r3, [r0, #8]
   2e1e8:	str	r3, [r4, #20]
   2e1ec:	ldr	r3, [r0]
   2e1f0:	str	r3, [r4, #28]
   2e1f4:	add	r1, r1, r3
   2e1f8:	ldr	r2, [r0, #4]
   2e1fc:	str	r1, [r4, #16]
   2e200:	sub	r1, ip, r3
   2e204:	cmp	r1, r2
   2e208:	movhi	r1, r2
   2e20c:	str	r1, [r4, #24]
   2e210:	ldrh	r1, [r4, #130]	; 0x82
   2e214:	ldrh	r2, [r4, #128]	; 0x80
   2e218:	cmp	r2, r1
   2e21c:	strhcc	r1, [r4, #128]	; 0x80
   2e220:	ldrh	r1, [r0, #12]
   2e224:	sub	r0, r0, #36	; 0x24
   2e228:	str	r0, [r4, #32]
   2e22c:	strh	r1, [r4, #130]	; 0x82
   2e230:	ldr	r0, [r4, #156]	; 0x9c
   2e234:	sub	r0, r0, #1
   2e238:	str	r0, [r4, #156]	; 0x9c
   2e23c:	mov	r0, r5
   2e240:	pop	{r4, r5, fp, pc}
   2e244:	ldr	r0, [pc, #24]	; 2e264 <flatcc_builder_end_struct@@Base+0xd8>
   2e248:	ldr	r1, [pc, #24]	; 2e268 <flatcc_builder_end_struct@@Base+0xdc>
   2e24c:	ldr	r3, [pc, #24]	; 2e26c <flatcc_builder_end_struct@@Base+0xe0>
   2e250:	mov	r2, #872	; 0x368
   2e254:	add	r0, pc, r0
   2e258:	add	r1, pc, r1
   2e25c:	add	r3, pc, r3
   2e260:	bl	14f3c <__assert_fail@plt>
   2e264:	andeq	sl, r1, r5, lsl #17
   2e268:			; <UNDEFINED> instruction: 0x0001a5b6
   2e26c:	andeq	sl, r1, r9, lsr #17

0002e270 <flatcc_builder_extend_vector@@Base>:
   2e270:	push	{r4, r5, fp, lr}
   2e274:	add	fp, sp, #8
   2e278:	sub	sp, sp, #8
   2e27c:	mov	r4, r0
   2e280:	ldr	r0, [r0, #32]
   2e284:	ldr	r2, [r0, #20]
   2e288:	adds	r2, r2, r1
   2e28c:	bcs	2e344 <flatcc_builder_extend_vector@@Base+0xd4>
   2e290:	ldr	r3, [r0, #24]
   2e294:	cmp	r2, r3
   2e298:	bhi	2e344 <flatcc_builder_extend_vector@@Base+0xd4>
   2e29c:	str	r2, [r0, #20]
   2e2a0:	ldr	r2, [r4, #32]
   2e2a4:	ldr	r5, [r4, #20]
   2e2a8:	ldr	r0, [r4, #24]
   2e2ac:	ldr	r2, [r2, #16]
   2e2b0:	mla	r1, r2, r1, r5
   2e2b4:	cmp	r1, r0
   2e2b8:	str	r1, [r4, #20]
   2e2bc:	bcs	2e2c8 <flatcc_builder_extend_vector@@Base+0x58>
   2e2c0:	ldr	r0, [r4, #16]
   2e2c4:	b	2e338 <flatcc_builder_extend_vector@@Base+0xc8>
   2e2c8:	ldr	r2, [r4, #28]
   2e2cc:	ldr	r0, [r4, #40]	; 0x28
   2e2d0:	ldr	ip, [r4, #48]	; 0x30
   2e2d4:	mov	r3, #1
   2e2d8:	str	r3, [sp]
   2e2dc:	mov	r3, #1
   2e2e0:	add	r1, r1, r2
   2e2e4:	add	r2, r1, #1
   2e2e8:	add	r1, r4, #60	; 0x3c
   2e2ec:	blx	ip
   2e2f0:	mov	r1, r0
   2e2f4:	mov	r0, #0
   2e2f8:	cmp	r1, #0
   2e2fc:	beq	2e308 <flatcc_builder_extend_vector@@Base+0x98>
   2e300:	sub	sp, fp, #8
   2e304:	pop	{r4, r5, fp, pc}
   2e308:	ldr	r1, [r4, #28]
   2e30c:	ldr	r0, [r4, #60]	; 0x3c
   2e310:	ldr	r3, [r4, #64]	; 0x40
   2e314:	ldr	r2, [r4, #32]
   2e318:	add	r0, r0, r1
   2e31c:	sub	r1, r3, r1
   2e320:	mvn	r3, #3
   2e324:	cmn	r1, #4
   2e328:	str	r0, [r4, #16]
   2e32c:	movcs	r1, r3
   2e330:	str	r1, [r4, #24]
   2e334:	str	r3, [r2, #4]
   2e338:	add	r0, r0, r5
   2e33c:	sub	sp, fp, #8
   2e340:	pop	{r4, r5, fp, pc}
   2e344:	ldr	r0, [pc, #24]	; 2e364 <flatcc_builder_extend_vector@@Base+0xf4>
   2e348:	ldr	r1, [pc, #24]	; 2e368 <flatcc_builder_extend_vector@@Base+0xf8>
   2e34c:	ldr	r3, [pc, #24]	; 2e36c <flatcc_builder_extend_vector@@Base+0xfc>
   2e350:	mov	r2, #892	; 0x37c
   2e354:	add	r0, pc, r0
   2e358:	add	r1, pc, r1
   2e35c:	add	r3, pc, r3
   2e360:	bl	14f3c <__assert_fail@plt>
   2e364:	andeq	fp, r1, r0, lsl #11
   2e368:			; <UNDEFINED> instruction: 0x0001a4b6
   2e36c:	muleq	r1, r3, r5

0002e370 <flatcc_builder_vector_push@@Base>:
   2e370:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e374:	add	fp, sp, #24
   2e378:	sub	sp, sp, #8
   2e37c:	mov	r5, r0
   2e380:	ldr	r0, [r0, #32]
   2e384:	mov	r8, r1
   2e388:	ldrh	r1, [r0, #14]
   2e38c:	cmp	r1, #4
   2e390:	bne	2e468 <flatcc_builder_vector_push@@Base+0xf8>
   2e394:	ldr	r1, [r0, #20]
   2e398:	ldr	r2, [r0, #24]
   2e39c:	cmp	r1, r2
   2e3a0:	bhi	2e488 <flatcc_builder_vector_push@@Base+0x118>
   2e3a4:	add	r1, r1, #1
   2e3a8:	str	r1, [r0, #20]
   2e3ac:	ldr	r1, [r5, #32]
   2e3b0:	ldr	r4, [r5, #20]
   2e3b4:	ldr	r0, [r5, #24]
   2e3b8:	ldr	r6, [r1, #16]
   2e3bc:	add	r1, r4, r6
   2e3c0:	cmp	r1, r0
   2e3c4:	str	r1, [r5, #20]
   2e3c8:	bcs	2e3ec <flatcc_builder_vector_push@@Base+0x7c>
   2e3cc:	ldr	r0, [r5, #16]
   2e3d0:	adds	r7, r0, r4
   2e3d4:	beq	2e458 <flatcc_builder_vector_push@@Base+0xe8>
   2e3d8:	mov	r0, r7
   2e3dc:	mov	r1, r8
   2e3e0:	mov	r2, r6
   2e3e4:	bl	14e58 <memcpy@plt>
   2e3e8:	b	2e45c <flatcc_builder_vector_push@@Base+0xec>
   2e3ec:	ldr	r2, [r5, #28]
   2e3f0:	ldr	r0, [r5, #40]	; 0x28
   2e3f4:	ldr	r7, [r5, #48]	; 0x30
   2e3f8:	mov	r3, #1
   2e3fc:	str	r3, [sp]
   2e400:	mov	r3, #1
   2e404:	add	r1, r1, r2
   2e408:	add	r2, r1, #1
   2e40c:	add	r1, r5, #60	; 0x3c
   2e410:	blx	r7
   2e414:	mov	r7, #0
   2e418:	cmp	r0, #0
   2e41c:	bne	2e45c <flatcc_builder_vector_push@@Base+0xec>
   2e420:	ldr	r1, [r5, #28]
   2e424:	ldr	r0, [r5, #60]	; 0x3c
   2e428:	ldr	r3, [r5, #64]	; 0x40
   2e42c:	ldr	r2, [r5, #32]
   2e430:	add	r0, r0, r1
   2e434:	sub	r1, r3, r1
   2e438:	mvn	r3, #3
   2e43c:	cmn	r1, #4
   2e440:	str	r0, [r5, #16]
   2e444:	movcs	r1, r3
   2e448:	str	r1, [r5, #24]
   2e44c:	str	r3, [r2, #4]
   2e450:	adds	r7, r0, r4
   2e454:	bne	2e3d8 <flatcc_builder_vector_push@@Base+0x68>
   2e458:	mov	r7, #0
   2e45c:	mov	r0, r7
   2e460:	sub	sp, fp, #24
   2e464:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e468:	ldr	r0, [pc, #56]	; 2e4a8 <flatcc_builder_vector_push@@Base+0x138>
   2e46c:	ldr	r1, [pc, #56]	; 2e4ac <flatcc_builder_vector_push@@Base+0x13c>
   2e470:	ldr	r3, [pc, #56]	; 2e4b0 <flatcc_builder_vector_push@@Base+0x140>
   2e474:	movw	r2, #907	; 0x38b
   2e478:	add	r0, pc, r0
   2e47c:	add	r1, pc, r1
   2e480:	add	r3, pc, r3
   2e484:	bl	14f3c <__assert_fail@plt>
   2e488:	ldr	r0, [pc, #36]	; 2e4b4 <flatcc_builder_vector_push@@Base+0x144>
   2e48c:	ldr	r1, [pc, #36]	; 2e4b8 <flatcc_builder_vector_push@@Base+0x148>
   2e490:	ldr	r3, [pc, #36]	; 2e4bc <flatcc_builder_vector_push@@Base+0x14c>
   2e494:	mov	r2, #908	; 0x38c
   2e498:	add	r0, pc, r0
   2e49c:	add	r1, pc, r1
   2e4a0:	add	r3, pc, r3
   2e4a4:	bl	14f3c <__assert_fail@plt>
   2e4a8:	ldrdeq	sl, [r1], -r0
   2e4ac:	muleq	r1, r2, r3
   2e4b0:	strdeq	sl, [r1], -r4
   2e4b4:	andeq	sl, r1, pc, lsl r7
   2e4b8:	andeq	sl, r1, r2, ror r3
   2e4bc:	ldrdeq	sl, [r1], -r4

0002e4c0 <flatcc_builder_append_vector@@Base>:
   2e4c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e4c4:	add	fp, sp, #24
   2e4c8:	sub	sp, sp, #8
   2e4cc:	mov	r6, r0
   2e4d0:	ldr	r0, [r0, #32]
   2e4d4:	mov	r8, r1
   2e4d8:	ldrh	r1, [r0, #14]
   2e4dc:	cmp	r1, #4
   2e4e0:	bne	2e5e0 <flatcc_builder_append_vector@@Base+0x120>
   2e4e4:	ldr	r1, [r0, #20]
   2e4e8:	mov	r5, r2
   2e4ec:	adds	r1, r1, r2
   2e4f0:	bcs	2e5c0 <flatcc_builder_append_vector@@Base+0x100>
   2e4f4:	ldr	r2, [r0, #24]
   2e4f8:	cmp	r1, r2
   2e4fc:	bhi	2e5c0 <flatcc_builder_append_vector@@Base+0x100>
   2e500:	str	r1, [r0, #20]
   2e504:	ldr	r1, [r6, #32]
   2e508:	ldr	r4, [r6, #20]
   2e50c:	ldr	r0, [r6, #24]
   2e510:	ldr	r9, [r1, #16]
   2e514:	mla	r1, r9, r5, r4
   2e518:	cmp	r1, r0
   2e51c:	str	r1, [r6, #20]
   2e520:	bcs	2e544 <flatcc_builder_append_vector@@Base+0x84>
   2e524:	ldr	r0, [r6, #16]
   2e528:	adds	r7, r0, r4
   2e52c:	beq	2e5b0 <flatcc_builder_append_vector@@Base+0xf0>
   2e530:	mul	r2, r9, r5
   2e534:	mov	r0, r7
   2e538:	mov	r1, r8
   2e53c:	bl	14e58 <memcpy@plt>
   2e540:	b	2e5b4 <flatcc_builder_append_vector@@Base+0xf4>
   2e544:	ldr	r2, [r6, #28]
   2e548:	ldr	r0, [r6, #40]	; 0x28
   2e54c:	ldr	r7, [r6, #48]	; 0x30
   2e550:	mov	r3, #1
   2e554:	str	r3, [sp]
   2e558:	mov	r3, #1
   2e55c:	add	r1, r1, r2
   2e560:	add	r2, r1, #1
   2e564:	add	r1, r6, #60	; 0x3c
   2e568:	blx	r7
   2e56c:	mov	r7, #0
   2e570:	cmp	r0, #0
   2e574:	bne	2e5b4 <flatcc_builder_append_vector@@Base+0xf4>
   2e578:	ldr	r1, [r6, #28]
   2e57c:	ldr	r0, [r6, #60]	; 0x3c
   2e580:	ldr	r3, [r6, #64]	; 0x40
   2e584:	ldr	r2, [r6, #32]
   2e588:	add	r0, r0, r1
   2e58c:	sub	r1, r3, r1
   2e590:	mvn	r3, #3
   2e594:	cmn	r1, #4
   2e598:	str	r0, [r6, #16]
   2e59c:	movcs	r1, r3
   2e5a0:	str	r1, [r6, #24]
   2e5a4:	str	r3, [r2, #4]
   2e5a8:	adds	r7, r0, r4
   2e5ac:	bne	2e530 <flatcc_builder_append_vector@@Base+0x70>
   2e5b0:	mov	r7, #0
   2e5b4:	mov	r0, r7
   2e5b8:	sub	sp, fp, #24
   2e5bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e5c0:	ldr	r0, [pc, #68]	; 2e60c <flatcc_builder_append_vector@@Base+0x14c>
   2e5c4:	ldr	r1, [pc, #68]	; 2e610 <flatcc_builder_append_vector@@Base+0x150>
   2e5c8:	ldr	r3, [pc, #68]	; 2e614 <flatcc_builder_append_vector@@Base+0x154>
   2e5cc:	mov	r2, #892	; 0x37c
   2e5d0:	add	r0, pc, r0
   2e5d4:	add	r1, pc, r1
   2e5d8:	add	r3, pc, r3
   2e5dc:	bl	14f3c <__assert_fail@plt>
   2e5e0:	ldr	r0, [pc, #24]	; 2e600 <flatcc_builder_append_vector@@Base+0x140>
   2e5e4:	ldr	r1, [pc, #24]	; 2e604 <flatcc_builder_append_vector@@Base+0x144>
   2e5e8:	ldr	r3, [pc, #24]	; 2e608 <flatcc_builder_append_vector@@Base+0x148>
   2e5ec:	movw	r2, #915	; 0x393
   2e5f0:	add	r0, pc, r0
   2e5f4:	add	r1, pc, r1
   2e5f8:	add	r3, pc, r3
   2e5fc:	bl	14f3c <__assert_fail@plt>
   2e600:	andeq	sl, r1, r8, asr r5
   2e604:	andeq	sl, r1, sl, lsl r2
   2e608:	strdeq	sl, [r1], -ip
   2e60c:	andeq	fp, r1, r4, lsl #6
   2e610:	andeq	sl, r1, sl, lsr r2
   2e614:	andeq	fp, r1, r7, lsl r3

0002e618 <flatcc_builder_extend_offset_vector@@Base>:
   2e618:	push	{r4, r5, fp, lr}
   2e61c:	add	fp, sp, #8
   2e620:	sub	sp, sp, #8
   2e624:	mov	r4, r0
   2e628:	ldr	r0, [r0, #32]
   2e62c:	ldr	r2, [r0, #20]
   2e630:	adds	r2, r2, r1
   2e634:	cmpcc	r2, #1073741824	; 0x40000000
   2e638:	bcc	2e65c <flatcc_builder_extend_offset_vector@@Base+0x44>
   2e63c:	ldr	r0, [pc, #184]	; 2e6fc <flatcc_builder_extend_offset_vector@@Base+0xe4>
   2e640:	ldr	r1, [pc, #184]	; 2e700 <flatcc_builder_extend_offset_vector@@Base+0xe8>
   2e644:	ldr	r3, [pc, #184]	; 2e704 <flatcc_builder_extend_offset_vector@@Base+0xec>
   2e648:	mov	r2, #892	; 0x37c
   2e64c:	add	r0, pc, r0
   2e650:	add	r1, pc, r1
   2e654:	add	r3, pc, r3
   2e658:	bl	14f3c <__assert_fail@plt>
   2e65c:	str	r2, [r0, #20]
   2e660:	ldr	r5, [r4, #20]
   2e664:	ldr	r0, [r4, #24]
   2e668:	add	r1, r5, r1, lsl #2
   2e66c:	cmp	r1, r0
   2e670:	str	r1, [r4, #20]
   2e674:	bcs	2e680 <flatcc_builder_extend_offset_vector@@Base+0x68>
   2e678:	ldr	r0, [r4, #16]
   2e67c:	b	2e6f0 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   2e680:	ldr	r2, [r4, #28]
   2e684:	ldr	r0, [r4, #40]	; 0x28
   2e688:	ldr	ip, [r4, #48]	; 0x30
   2e68c:	mov	r3, #1
   2e690:	str	r3, [sp]
   2e694:	mov	r3, #1
   2e698:	add	r1, r1, r2
   2e69c:	add	r2, r1, #1
   2e6a0:	add	r1, r4, #60	; 0x3c
   2e6a4:	blx	ip
   2e6a8:	mov	r1, r0
   2e6ac:	mov	r0, #0
   2e6b0:	cmp	r1, #0
   2e6b4:	beq	2e6c0 <flatcc_builder_extend_offset_vector@@Base+0xa8>
   2e6b8:	sub	sp, fp, #8
   2e6bc:	pop	{r4, r5, fp, pc}
   2e6c0:	ldr	r1, [r4, #28]
   2e6c4:	ldr	r0, [r4, #60]	; 0x3c
   2e6c8:	ldr	r3, [r4, #64]	; 0x40
   2e6cc:	ldr	r2, [r4, #32]
   2e6d0:	add	r0, r0, r1
   2e6d4:	sub	r1, r3, r1
   2e6d8:	mvn	r3, #3
   2e6dc:	cmn	r1, #4
   2e6e0:	str	r0, [r4, #16]
   2e6e4:	movcs	r1, r3
   2e6e8:	str	r1, [r4, #24]
   2e6ec:	str	r3, [r2, #4]
   2e6f0:	add	r0, r0, r5
   2e6f4:	sub	sp, fp, #8
   2e6f8:	pop	{r4, r5, fp, pc}
   2e6fc:	andeq	fp, r1, r8, lsl #5
   2e700:			; <UNDEFINED> instruction: 0x0001a1be
   2e704:	muleq	r1, fp, r2

0002e708 <flatcc_builder_offset_vector_push@@Base>:
   2e708:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e70c:	add	fp, sp, #24
   2e710:	sub	sp, sp, #8
   2e714:	mov	r6, r0
   2e718:	ldr	r0, [r0, #32]
   2e71c:	mov	r8, r1
   2e720:	ldrh	r1, [r0, #14]
   2e724:	cmp	r1, #5
   2e728:	bne	2e7dc <flatcc_builder_offset_vector_push@@Base+0xd4>
   2e72c:	ldr	r1, [r0, #20]
   2e730:	mov	r5, #0
   2e734:	cmn	r1, #-1073741823	; 0xc0000001
   2e738:	beq	2e7d0 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2e73c:	add	r1, r1, #1
   2e740:	str	r1, [r0, #20]
   2e744:	ldr	r7, [r6, #20]
   2e748:	ldr	r0, [r6, #24]
   2e74c:	add	r1, r7, #4
   2e750:	cmp	r1, r0
   2e754:	str	r1, [r6, #20]
   2e758:	bcs	2e764 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2e75c:	ldr	r0, [r6, #16]
   2e760:	b	2e7c4 <flatcc_builder_offset_vector_push@@Base+0xbc>
   2e764:	ldr	r1, [r6, #28]
   2e768:	ldr	r0, [r6, #40]	; 0x28
   2e76c:	ldr	r4, [r6, #48]	; 0x30
   2e770:	mov	r2, #1
   2e774:	mov	r3, #1
   2e778:	str	r2, [sp]
   2e77c:	add	r1, r7, r1
   2e780:	add	r2, r1, #5
   2e784:	add	r1, r6, #60	; 0x3c
   2e788:	blx	r4
   2e78c:	cmp	r0, #0
   2e790:	bne	2e7d0 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2e794:	ldr	r1, [r6, #28]
   2e798:	ldr	r0, [r6, #60]	; 0x3c
   2e79c:	ldr	r3, [r6, #64]	; 0x40
   2e7a0:	ldr	r2, [r6, #32]
   2e7a4:	add	r0, r0, r1
   2e7a8:	sub	r1, r3, r1
   2e7ac:	mvn	r3, #3
   2e7b0:	cmn	r1, #4
   2e7b4:	str	r0, [r6, #16]
   2e7b8:	movcs	r1, r3
   2e7bc:	str	r1, [r6, #24]
   2e7c0:	str	r3, [r2, #4]
   2e7c4:	adds	r0, r0, r7
   2e7c8:	movne	r5, r0
   2e7cc:	strne	r8, [r0]
   2e7d0:	mov	r0, r5
   2e7d4:	sub	sp, fp, #24
   2e7d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e7dc:	ldr	r0, [pc, #24]	; 2e7fc <flatcc_builder_offset_vector_push@@Base+0xf4>
   2e7e0:	ldr	r1, [pc, #24]	; 2e800 <flatcc_builder_offset_vector_push@@Base+0xf8>
   2e7e4:	ldr	r3, [pc, #24]	; 2e804 <flatcc_builder_offset_vector_push@@Base+0xfc>
   2e7e8:	movw	r2, #934	; 0x3a6
   2e7ec:	add	r0, pc, r0
   2e7f0:	add	r1, pc, r1
   2e7f4:	add	r3, pc, r3
   2e7f8:	bl	14f3c <__assert_fail@plt>
   2e7fc:	andeq	sl, r1, r5, asr r4
   2e800:	andeq	sl, r1, lr, lsl r0
   2e804:	andeq	sl, r1, r0, lsl #9

0002e808 <flatcc_builder_append_offset_vector@@Base>:
   2e808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e80c:	add	fp, sp, #24
   2e810:	sub	sp, sp, #8
   2e814:	mov	r6, r0
   2e818:	ldr	r0, [r0, #32]
   2e81c:	mov	r8, r1
   2e820:	ldrh	r1, [r0, #14]
   2e824:	cmp	r1, #5
   2e828:	bne	2e918 <flatcc_builder_append_offset_vector@@Base+0x110>
   2e82c:	ldr	r1, [r0, #20]
   2e830:	mov	r5, r2
   2e834:	adds	r1, r1, r2
   2e838:	cmpcc	r1, #1073741824	; 0x40000000
   2e83c:	bcc	2e860 <flatcc_builder_append_offset_vector@@Base+0x58>
   2e840:	ldr	r0, [pc, #252]	; 2e944 <flatcc_builder_append_offset_vector@@Base+0x13c>
   2e844:	ldr	r1, [pc, #252]	; 2e948 <flatcc_builder_append_offset_vector@@Base+0x140>
   2e848:	ldr	r3, [pc, #252]	; 2e94c <flatcc_builder_append_offset_vector@@Base+0x144>
   2e84c:	mov	r2, #892	; 0x37c
   2e850:	add	r0, pc, r0
   2e854:	add	r1, pc, r1
   2e858:	add	r3, pc, r3
   2e85c:	bl	14f3c <__assert_fail@plt>
   2e860:	str	r1, [r0, #20]
   2e864:	ldr	r4, [r6, #20]
   2e868:	ldr	r0, [r6, #24]
   2e86c:	add	r1, r4, r5, lsl #2
   2e870:	cmp	r1, r0
   2e874:	str	r1, [r6, #20]
   2e878:	bcs	2e89c <flatcc_builder_append_offset_vector@@Base+0x94>
   2e87c:	ldr	r0, [r6, #16]
   2e880:	adds	r7, r0, r4
   2e884:	beq	2e908 <flatcc_builder_append_offset_vector@@Base+0x100>
   2e888:	lsl	r2, r5, #2
   2e88c:	mov	r0, r7
   2e890:	mov	r1, r8
   2e894:	bl	14e58 <memcpy@plt>
   2e898:	b	2e90c <flatcc_builder_append_offset_vector@@Base+0x104>
   2e89c:	ldr	r2, [r6, #28]
   2e8a0:	ldr	r0, [r6, #40]	; 0x28
   2e8a4:	ldr	r7, [r6, #48]	; 0x30
   2e8a8:	mov	r3, #1
   2e8ac:	str	r3, [sp]
   2e8b0:	mov	r3, #1
   2e8b4:	add	r1, r1, r2
   2e8b8:	add	r2, r1, #1
   2e8bc:	add	r1, r6, #60	; 0x3c
   2e8c0:	blx	r7
   2e8c4:	mov	r7, #0
   2e8c8:	cmp	r0, #0
   2e8cc:	bne	2e90c <flatcc_builder_append_offset_vector@@Base+0x104>
   2e8d0:	ldr	r1, [r6, #28]
   2e8d4:	ldr	r0, [r6, #60]	; 0x3c
   2e8d8:	ldr	r3, [r6, #64]	; 0x40
   2e8dc:	ldr	r2, [r6, #32]
   2e8e0:	add	r0, r0, r1
   2e8e4:	sub	r1, r3, r1
   2e8e8:	mvn	r3, #3
   2e8ec:	cmn	r1, #4
   2e8f0:	str	r0, [r6, #16]
   2e8f4:	movcs	r1, r3
   2e8f8:	str	r1, [r6, #24]
   2e8fc:	str	r3, [r2, #4]
   2e900:	adds	r7, r0, r4
   2e904:	bne	2e888 <flatcc_builder_append_offset_vector@@Base+0x80>
   2e908:	mov	r7, #0
   2e90c:	mov	r0, r7
   2e910:	sub	sp, fp, #24
   2e914:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e918:	ldr	r0, [pc, #24]	; 2e938 <flatcc_builder_append_offset_vector@@Base+0x130>
   2e91c:	ldr	r1, [pc, #24]	; 2e93c <flatcc_builder_append_offset_vector@@Base+0x134>
   2e920:	ldr	r3, [pc, #24]	; 2e940 <flatcc_builder_append_offset_vector@@Base+0x138>
   2e924:	mov	r2, #948	; 0x3b4
   2e928:	add	r0, pc, r0
   2e92c:	add	r1, pc, r1
   2e930:	add	r3, pc, r3
   2e934:	bl	14f3c <__assert_fail@plt>
   2e938:	andeq	sl, r1, r9, lsl r3
   2e93c:	andeq	r9, r1, r2, ror #29
   2e940:	andeq	sl, r1, r6, lsr #7
   2e944:	andeq	fp, r1, r4, lsl #1
   2e948:			; <UNDEFINED> instruction: 0x00019fba
   2e94c:	muleq	r1, r7, r0

0002e950 <flatcc_builder_extend_string@@Base>:
   2e950:	push	{r4, r5, fp, lr}
   2e954:	add	fp, sp, #8
   2e958:	sub	sp, sp, #8
   2e95c:	mov	r4, r0
   2e960:	ldr	r0, [r0, #32]
   2e964:	ldrh	r2, [r0, #14]
   2e968:	cmp	r2, #6
   2e96c:	bne	2ea1c <flatcc_builder_extend_string@@Base+0xcc>
   2e970:	ldr	r2, [r0, #20]
   2e974:	adds	r2, r2, r1
   2e978:	bcs	2ea3c <flatcc_builder_extend_string@@Base+0xec>
   2e97c:	str	r2, [r0, #20]
   2e980:	ldr	r5, [r4, #20]
   2e984:	ldr	r0, [r4, #24]
   2e988:	add	r1, r5, r1
   2e98c:	cmp	r1, r0
   2e990:	str	r1, [r4, #20]
   2e994:	bcs	2e9a0 <flatcc_builder_extend_string@@Base+0x50>
   2e998:	ldr	r0, [r4, #16]
   2e99c:	b	2ea10 <flatcc_builder_extend_string@@Base+0xc0>
   2e9a0:	ldr	r2, [r4, #28]
   2e9a4:	ldr	r0, [r4, #40]	; 0x28
   2e9a8:	ldr	ip, [r4, #48]	; 0x30
   2e9ac:	mov	r3, #1
   2e9b0:	str	r3, [sp]
   2e9b4:	mov	r3, #1
   2e9b8:	add	r1, r1, r2
   2e9bc:	add	r2, r1, #1
   2e9c0:	add	r1, r4, #60	; 0x3c
   2e9c4:	blx	ip
   2e9c8:	mov	r1, r0
   2e9cc:	mov	r0, #0
   2e9d0:	cmp	r1, #0
   2e9d4:	beq	2e9e0 <flatcc_builder_extend_string@@Base+0x90>
   2e9d8:	sub	sp, fp, #8
   2e9dc:	pop	{r4, r5, fp, pc}
   2e9e0:	ldr	r1, [r4, #28]
   2e9e4:	ldr	r0, [r4, #60]	; 0x3c
   2e9e8:	ldr	r3, [r4, #64]	; 0x40
   2e9ec:	ldr	r2, [r4, #32]
   2e9f0:	add	r0, r0, r1
   2e9f4:	sub	r1, r3, r1
   2e9f8:	mvn	r3, #3
   2e9fc:	cmn	r1, #4
   2ea00:	str	r0, [r4, #16]
   2ea04:	movcs	r1, r3
   2ea08:	str	r1, [r4, #24]
   2ea0c:	str	r3, [r2, #4]
   2ea10:	add	r0, r0, r5
   2ea14:	sub	sp, fp, #8
   2ea18:	pop	{r4, r5, fp, pc}
   2ea1c:	ldr	r0, [pc, #56]	; 2ea5c <flatcc_builder_extend_string@@Base+0x10c>
   2ea20:	ldr	r1, [pc, #56]	; 2ea60 <flatcc_builder_extend_string@@Base+0x110>
   2ea24:	ldr	r3, [pc, #56]	; 2ea64 <flatcc_builder_extend_string@@Base+0x114>
   2ea28:	movw	r2, #957	; 0x3bd
   2ea2c:	add	r0, pc, r0
   2ea30:	add	r1, pc, r1
   2ea34:	add	r3, pc, r3
   2ea38:	bl	14f3c <__assert_fail@plt>
   2ea3c:	ldr	r0, [pc, #36]	; 2ea68 <flatcc_builder_extend_string@@Base+0x118>
   2ea40:	ldr	r1, [pc, #36]	; 2ea6c <flatcc_builder_extend_string@@Base+0x11c>
   2ea44:	ldr	r3, [pc, #36]	; 2ea70 <flatcc_builder_extend_string@@Base+0x120>
   2ea48:	mov	r2, #892	; 0x37c
   2ea4c:	add	r0, pc, r0
   2ea50:	add	r1, pc, r1
   2ea54:	add	r3, pc, r3
   2ea58:	bl	14f3c <__assert_fail@plt>
   2ea5c:	andeq	sl, r1, lr, lsl r3
   2ea60:	ldrdeq	r9, [r1], -lr
   2ea64:	andeq	sl, r1, r2, asr #6
   2ea68:	andeq	sl, r1, r8, lsl #29
   2ea6c:			; <UNDEFINED> instruction: 0x00019dbe
   2ea70:	muleq	r1, fp, lr

0002ea74 <flatcc_builder_append_string@@Base>:
   2ea74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ea78:	add	fp, sp, #24
   2ea7c:	sub	sp, sp, #8
   2ea80:	mov	r6, r0
   2ea84:	ldr	r0, [r0, #32]
   2ea88:	mov	r8, r1
   2ea8c:	ldrh	r1, [r0, #14]
   2ea90:	cmp	r1, #6
   2ea94:	bne	2eb60 <flatcc_builder_append_string@@Base+0xec>
   2ea98:	ldr	r1, [r0, #20]
   2ea9c:	mov	r4, r2
   2eaa0:	adds	r1, r1, r2
   2eaa4:	bcs	2eb80 <flatcc_builder_append_string@@Base+0x10c>
   2eaa8:	str	r1, [r0, #20]
   2eaac:	ldr	r5, [r6, #20]
   2eab0:	ldr	r0, [r6, #24]
   2eab4:	add	r1, r5, r4
   2eab8:	cmp	r1, r0
   2eabc:	str	r1, [r6, #20]
   2eac0:	bcs	2eae4 <flatcc_builder_append_string@@Base+0x70>
   2eac4:	ldr	r0, [r6, #16]
   2eac8:	adds	r7, r0, r5
   2eacc:	beq	2eb50 <flatcc_builder_append_string@@Base+0xdc>
   2ead0:	mov	r0, r7
   2ead4:	mov	r1, r8
   2ead8:	mov	r2, r4
   2eadc:	bl	14e58 <memcpy@plt>
   2eae0:	b	2eb54 <flatcc_builder_append_string@@Base+0xe0>
   2eae4:	ldr	r2, [r6, #28]
   2eae8:	ldr	r0, [r6, #40]	; 0x28
   2eaec:	ldr	r7, [r6, #48]	; 0x30
   2eaf0:	mov	r3, #1
   2eaf4:	str	r3, [sp]
   2eaf8:	mov	r3, #1
   2eafc:	add	r1, r1, r2
   2eb00:	add	r2, r1, #1
   2eb04:	add	r1, r6, #60	; 0x3c
   2eb08:	blx	r7
   2eb0c:	mov	r7, #0
   2eb10:	cmp	r0, #0
   2eb14:	bne	2eb54 <flatcc_builder_append_string@@Base+0xe0>
   2eb18:	ldr	r1, [r6, #28]
   2eb1c:	ldr	r0, [r6, #60]	; 0x3c
   2eb20:	ldr	r3, [r6, #64]	; 0x40
   2eb24:	ldr	r2, [r6, #32]
   2eb28:	add	r0, r0, r1
   2eb2c:	sub	r1, r3, r1
   2eb30:	mvn	r3, #3
   2eb34:	cmn	r1, #4
   2eb38:	str	r0, [r6, #16]
   2eb3c:	movcs	r1, r3
   2eb40:	str	r1, [r6, #24]
   2eb44:	str	r3, [r2, #4]
   2eb48:	adds	r7, r0, r5
   2eb4c:	bne	2ead0 <flatcc_builder_append_string@@Base+0x5c>
   2eb50:	mov	r7, #0
   2eb54:	mov	r0, r7
   2eb58:	sub	sp, fp, #24
   2eb5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2eb60:	ldr	r0, [pc, #56]	; 2eba0 <flatcc_builder_append_string@@Base+0x12c>
   2eb64:	ldr	r1, [pc, #56]	; 2eba4 <flatcc_builder_append_string@@Base+0x130>
   2eb68:	ldr	r3, [pc, #56]	; 2eba8 <flatcc_builder_append_string@@Base+0x134>
   2eb6c:	movw	r2, #966	; 0x3c6
   2eb70:	add	r0, pc, r0
   2eb74:	add	r1, pc, r1
   2eb78:	add	r3, pc, r3
   2eb7c:	bl	14f3c <__assert_fail@plt>
   2eb80:	ldr	r0, [pc, #36]	; 2ebac <flatcc_builder_append_string@@Base+0x138>
   2eb84:	ldr	r1, [pc, #36]	; 2ebb0 <flatcc_builder_append_string@@Base+0x13c>
   2eb88:	ldr	r3, [pc, #36]	; 2ebb4 <flatcc_builder_append_string@@Base+0x140>
   2eb8c:	mov	r2, #892	; 0x37c
   2eb90:	add	r0, pc, r0
   2eb94:	add	r1, pc, r1
   2eb98:	add	r3, pc, r3
   2eb9c:	bl	14f3c <__assert_fail@plt>
   2eba0:	ldrdeq	sl, [r1], -sl	; <UNPREDICTABLE>
   2eba4:	muleq	r1, sl, ip
   2eba8:	andeq	sl, r1, sp, lsr r2
   2ebac:	andeq	sl, r1, r4, asr #26
   2ebb0:	andeq	r9, r1, sl, ror ip
   2ebb4:	andeq	sl, r1, r7, asr sp

0002ebb8 <flatcc_builder_append_string_str@@Base>:
   2ebb8:	push	{r4, r5, fp, lr}
   2ebbc:	add	fp, sp, #8
   2ebc0:	mov	r5, r0
   2ebc4:	mov	r0, r1
   2ebc8:	mov	r4, r1
   2ebcc:	bl	14ec4 <strlen@plt>
   2ebd0:	mov	r2, r0
   2ebd4:	mov	r0, r5
   2ebd8:	mov	r1, r4
   2ebdc:	pop	{r4, r5, fp, lr}
   2ebe0:	b	2ea74 <flatcc_builder_append_string@@Base>

0002ebe4 <flatcc_builder_append_string_strn@@Base>:
   2ebe4:	push	{r4, r5, r6, sl, fp, lr}
   2ebe8:	add	fp, sp, #16
   2ebec:	mov	r6, r0
   2ebf0:	mov	r5, r1
   2ebf4:	mov	r0, r1
   2ebf8:	mov	r1, #0
   2ebfc:	mov	r4, r2
   2ec00:	bl	14f0c <memchr@plt>
   2ec04:	cmp	r0, #0
   2ec08:	mov	r1, r5
   2ec0c:	subne	r4, r0, r5
   2ec10:	mov	r0, r6
   2ec14:	mov	r2, r4
   2ec18:	pop	{r4, r5, r6, sl, fp, lr}
   2ec1c:	b	2ea74 <flatcc_builder_append_string@@Base>

0002ec20 <flatcc_builder_truncate_vector@@Base>:
   2ec20:	push	{fp, lr}
   2ec24:	mov	fp, sp
   2ec28:	ldr	r2, [r0, #32]
   2ec2c:	ldrh	r3, [r2, #14]
   2ec30:	cmp	r3, #4
   2ec34:	bne	2ec7c <flatcc_builder_truncate_vector@@Base+0x5c>
   2ec38:	ldr	r3, [r2, #20]
   2ec3c:	cmp	r3, r1
   2ec40:	bcc	2ec9c <flatcc_builder_truncate_vector@@Base+0x7c>
   2ec44:	sub	r3, r3, r1
   2ec48:	str	r3, [r2, #20]
   2ec4c:	ldr	r2, [r0, #32]
   2ec50:	ldr	r3, [r0, #20]
   2ec54:	ldr	ip, [r0, #16]
   2ec58:	ldr	r2, [r2, #16]
   2ec5c:	mls	r3, r2, r1, r3
   2ec60:	mul	r2, r2, r1
   2ec64:	mov	r1, #0
   2ec68:	str	r3, [r0, #20]
   2ec6c:	add	r0, ip, r3
   2ec70:	bl	14ee8 <memset@plt>
   2ec74:	mov	r0, #0
   2ec78:	pop	{fp, pc}
   2ec7c:	ldr	r0, [pc, #56]	; 2ecbc <flatcc_builder_truncate_vector@@Base+0x9c>
   2ec80:	ldr	r1, [pc, #56]	; 2ecc0 <flatcc_builder_truncate_vector@@Base+0xa0>
   2ec84:	ldr	r3, [pc, #56]	; 2ecc4 <flatcc_builder_truncate_vector@@Base+0xa4>
   2ec88:	movw	r2, #985	; 0x3d9
   2ec8c:	add	r0, pc, r0
   2ec90:	add	r1, pc, r1
   2ec94:	add	r3, pc, r3
   2ec98:	bl	14f3c <__assert_fail@plt>
   2ec9c:	ldr	r0, [pc, #36]	; 2ecc8 <flatcc_builder_truncate_vector@@Base+0xa8>
   2eca0:	ldr	r1, [pc, #36]	; 2eccc <flatcc_builder_truncate_vector@@Base+0xac>
   2eca4:	ldr	r3, [pc, #36]	; 2ecd0 <flatcc_builder_truncate_vector@@Base+0xb0>
   2eca8:	movw	r2, #986	; 0x3da
   2ecac:	add	r0, pc, r0
   2ecb0:	add	r1, pc, r1
   2ecb4:	add	r3, pc, r3
   2ecb8:	bl	14f3c <__assert_fail@plt>
   2ecbc:			; <UNDEFINED> instruction: 0x00019ebc
   2ecc0:	andeq	r9, r1, lr, ror fp
   2ecc4:	andeq	sl, r1, lr, ror #2
   2ecc8:	muleq	r1, r5, r1
   2eccc:	andeq	r9, r1, lr, asr fp
   2ecd0:	andeq	sl, r1, lr, asr #2

0002ecd4 <flatcc_builder_truncate_offset_vector@@Base>:
   2ecd4:	push	{fp, lr}
   2ecd8:	mov	fp, sp
   2ecdc:	ldr	r2, [r0, #32]
   2ece0:	ldrh	r3, [r2, #14]
   2ece4:	cmp	r3, #5
   2ece8:	bne	2ed30 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2ecec:	ldr	r3, [r2, #20]
   2ecf0:	cmp	r3, r1
   2ecf4:	bcc	2ed50 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2ecf8:	sub	r3, r3, r1
   2ecfc:	str	r3, [r2, #20]
   2ed00:	ldr	r2, [r0, #32]
   2ed04:	ldr	r3, [r0, #20]
   2ed08:	ldr	ip, [r0, #16]
   2ed0c:	ldr	r2, [r2, #16]
   2ed10:	mls	r3, r2, r1, r3
   2ed14:	mul	r2, r2, r1
   2ed18:	mov	r1, #0
   2ed1c:	str	r3, [r0, #20]
   2ed20:	add	r0, ip, r3
   2ed24:	bl	14ee8 <memset@plt>
   2ed28:	mov	r0, #0
   2ed2c:	pop	{fp, pc}
   2ed30:	ldr	r0, [pc, #56]	; 2ed70 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   2ed34:	ldr	r1, [pc, #56]	; 2ed74 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2ed38:	ldr	r3, [pc, #56]	; 2ed78 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   2ed3c:	movw	r2, #994	; 0x3e2
   2ed40:	add	r0, pc, r0
   2ed44:	add	r1, pc, r1
   2ed48:	add	r3, pc, r3
   2ed4c:	bl	14f3c <__assert_fail@plt>
   2ed50:	ldr	r0, [pc, #36]	; 2ed7c <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   2ed54:	ldr	r1, [pc, #36]	; 2ed80 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2ed58:	ldr	r3, [pc, #36]	; 2ed84 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   2ed5c:	movw	r2, #995	; 0x3e3
   2ed60:	add	r0, pc, r0
   2ed64:	add	r1, pc, r1
   2ed68:	add	r3, pc, r3
   2ed6c:	bl	14f3c <__assert_fail@plt>
   2ed70:	andeq	r9, r1, r1, lsl #30
   2ed74:	andeq	r9, r1, sl, asr #21
   2ed78:	andeq	sl, r1, sp, lsl r1
   2ed7c:	andeq	sl, r1, fp, asr #2
   2ed80:	andeq	r9, r1, sl, lsr #21
   2ed84:	strdeq	sl, [r1], -sp

0002ed88 <flatcc_builder_truncate_string@@Base>:
   2ed88:	push	{fp, lr}
   2ed8c:	mov	fp, sp
   2ed90:	mov	r2, r1
   2ed94:	ldr	r1, [r0, #32]
   2ed98:	ldrh	r3, [r1, #14]
   2ed9c:	cmp	r3, #6
   2eda0:	bne	2eddc <flatcc_builder_truncate_string@@Base+0x54>
   2eda4:	ldr	r3, [r1, #20]
   2eda8:	cmp	r3, r2
   2edac:	bcc	2edfc <flatcc_builder_truncate_string@@Base+0x74>
   2edb0:	sub	r3, r3, r2
   2edb4:	str	r3, [r1, #20]
   2edb8:	ldr	r3, [r0, #20]
   2edbc:	ldr	r1, [r0, #16]
   2edc0:	sub	r3, r3, r2
   2edc4:	str	r3, [r0, #20]
   2edc8:	add	r0, r1, r3
   2edcc:	mov	r1, #0
   2edd0:	bl	14ee8 <memset@plt>
   2edd4:	mov	r0, #0
   2edd8:	pop	{fp, pc}
   2eddc:	ldr	r0, [pc, #56]	; 2ee1c <flatcc_builder_truncate_string@@Base+0x94>
   2ede0:	ldr	r1, [pc, #56]	; 2ee20 <flatcc_builder_truncate_string@@Base+0x98>
   2ede4:	ldr	r3, [pc, #56]	; 2ee24 <flatcc_builder_truncate_string@@Base+0x9c>
   2ede8:	movw	r2, #1003	; 0x3eb
   2edec:	add	r0, pc, r0
   2edf0:	add	r1, pc, r1
   2edf4:	add	r3, pc, r3
   2edf8:	bl	14f3c <__assert_fail@plt>
   2edfc:	ldr	r0, [pc, #36]	; 2ee28 <flatcc_builder_truncate_string@@Base+0xa0>
   2ee00:	ldr	r1, [pc, #36]	; 2ee2c <flatcc_builder_truncate_string@@Base+0xa4>
   2ee04:	ldr	r3, [pc, #36]	; 2ee30 <flatcc_builder_truncate_string@@Base+0xa8>
   2ee08:	mov	r2, #1004	; 0x3ec
   2ee0c:	add	r0, pc, r0
   2ee10:	add	r1, pc, r1
   2ee14:	add	r3, pc, r3
   2ee18:	bl	14f3c <__assert_fail@plt>
   2ee1c:	andeq	r9, r1, lr, asr pc
   2ee20:	andeq	r9, r1, lr, lsl sl
   2ee24:	strdeq	sl, [r1], -r2
   2ee28:	andeq	sl, r1, r9, lsl r1
   2ee2c:	strdeq	r9, [r1], -lr
   2ee30:	ldrdeq	sl, [r1], -r2

0002ee34 <flatcc_builder_start_vector@@Base>:
   2ee34:	push	{r4, r5, r6, r7, fp, lr}
   2ee38:	add	fp, sp, #16
   2ee3c:	mov	r7, #4
   2ee40:	cmp	r2, #4
   2ee44:	mov	r6, r1
   2ee48:	mov	r5, r3
   2ee4c:	mov	r4, r0
   2ee50:	movls	r2, r7
   2ee54:	mov	r1, r2
   2ee58:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2ee5c:	mov	r1, r0
   2ee60:	mvn	r0, #0
   2ee64:	cmp	r1, #0
   2ee68:	popne	{r4, r5, r6, r7, fp, pc}
   2ee6c:	ldr	r0, [r4, #32]
   2ee70:	str	r6, [r0, #16]
   2ee74:	mov	r0, #0
   2ee78:	ldr	r1, [r4, #32]
   2ee7c:	str	r0, [r1, #20]
   2ee80:	ldr	r1, [r4, #32]
   2ee84:	str	r5, [r1, #24]
   2ee88:	ldr	r1, [r4, #32]
   2ee8c:	strh	r7, [r1, #14]
   2ee90:	ldr	r2, [r4, #28]
   2ee94:	ldr	r3, [r4, #60]	; 0x3c
   2ee98:	ldr	r7, [r4, #64]	; 0x40
   2ee9c:	add	r3, r3, r2
   2eea0:	sub	r2, r7, r2
   2eea4:	str	r3, [r4, #16]
   2eea8:	mvn	r3, #3
   2eeac:	cmn	r2, #4
   2eeb0:	movcs	r2, r3
   2eeb4:	str	r2, [r4, #24]
   2eeb8:	str	r3, [r1, #4]
   2eebc:	pop	{r4, r5, r6, r7, fp, pc}

0002eec0 <flatcc_builder_start_offset_vector@@Base>:
   2eec0:	push	{r4, r5, fp, lr}
   2eec4:	add	fp, sp, #8
   2eec8:	mov	r1, #4
   2eecc:	mov	r4, r0
   2eed0:	mov	r5, #4
   2eed4:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2eed8:	mov	r1, r0
   2eedc:	mvn	r0, #0
   2eee0:	cmp	r1, #0
   2eee4:	popne	{r4, r5, fp, pc}
   2eee8:	ldr	r0, [r4, #32]
   2eeec:	mov	r2, #5
   2eef0:	str	r5, [r0, #16]
   2eef4:	mov	r0, #0
   2eef8:	ldr	r1, [r4, #32]
   2eefc:	str	r0, [r1, #20]
   2ef00:	ldr	r1, [r4, #32]
   2ef04:	strh	r2, [r1, #14]
   2ef08:	ldr	r2, [r4, #28]
   2ef0c:	ldr	r3, [r4, #60]	; 0x3c
   2ef10:	ldr	r5, [r4, #64]	; 0x40
   2ef14:	add	r3, r3, r2
   2ef18:	sub	r2, r5, r2
   2ef1c:	str	r3, [r4, #16]
   2ef20:	mvn	r3, #3
   2ef24:	cmn	r2, #4
   2ef28:	movcs	r2, r3
   2ef2c:	str	r2, [r4, #24]
   2ef30:	str	r3, [r1, #4]
   2ef34:	pop	{r4, r5, fp, pc}

0002ef38 <flatcc_builder_create_offset_vector@@Base>:
   2ef38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ef3c:	add	fp, sp, #24
   2ef40:	sub	sp, sp, #8
   2ef44:	mov	r8, r1
   2ef48:	mov	r1, #4
   2ef4c:	mov	r6, r2
   2ef50:	mov	r4, r0
   2ef54:	mov	r7, #4
   2ef58:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2ef5c:	cmp	r0, #0
   2ef60:	beq	2ef70 <flatcc_builder_create_offset_vector@@Base+0x38>
   2ef64:	mov	r0, #0
   2ef68:	sub	sp, fp, #24
   2ef6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ef70:	ldr	r0, [r4, #32]
   2ef74:	mov	r1, #0
   2ef78:	str	r7, [r0, #16]
   2ef7c:	ldr	r0, [r4, #32]
   2ef80:	str	r1, [r0, #20]
   2ef84:	mov	r1, #5
   2ef88:	ldr	r0, [r4, #32]
   2ef8c:	strh	r1, [r0, #14]
   2ef90:	ldr	r1, [r4, #28]
   2ef94:	ldr	r2, [r4, #60]	; 0x3c
   2ef98:	ldr	r3, [r4, #64]	; 0x40
   2ef9c:	add	r2, r2, r1
   2efa0:	sub	r1, r3, r1
   2efa4:	str	r2, [r4, #16]
   2efa8:	mvn	r2, #3
   2efac:	cmn	r1, #4
   2efb0:	movcs	r1, r2
   2efb4:	str	r1, [r4, #24]
   2efb8:	str	r2, [r0, #4]
   2efbc:	ldr	r1, [r0, #20]
   2efc0:	adds	r1, r1, r6
   2efc4:	cmpcc	r1, #1073741824	; 0x40000000
   2efc8:	bcc	2efec <flatcc_builder_create_offset_vector@@Base+0xb4>
   2efcc:	ldr	r0, [pc, #200]	; 2f09c <flatcc_builder_create_offset_vector@@Base+0x164>
   2efd0:	ldr	r1, [pc, #200]	; 2f0a0 <flatcc_builder_create_offset_vector@@Base+0x168>
   2efd4:	ldr	r3, [pc, #200]	; 2f0a4 <flatcc_builder_create_offset_vector@@Base+0x16c>
   2efd8:	mov	r2, #892	; 0x37c
   2efdc:	add	r0, pc, r0
   2efe0:	add	r1, pc, r1
   2efe4:	add	r3, pc, r3
   2efe8:	bl	14f3c <__assert_fail@plt>
   2efec:	str	r1, [r0, #20]
   2eff0:	ldr	r7, [r4, #20]
   2eff4:	ldr	r0, [r4, #24]
   2eff8:	add	r1, r7, r6, lsl #2
   2effc:	cmp	r1, r0
   2f000:	str	r1, [r4, #20]
   2f004:	bcs	2f018 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2f008:	ldr	r0, [r4, #16]
   2f00c:	adds	r0, r0, r7
   2f010:	bne	2f080 <flatcc_builder_create_offset_vector@@Base+0x148>
   2f014:	b	2ef64 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2f018:	ldr	r2, [r4, #28]
   2f01c:	ldr	r0, [r4, #40]	; 0x28
   2f020:	ldr	r5, [r4, #48]	; 0x30
   2f024:	mov	r3, #1
   2f028:	str	r3, [sp]
   2f02c:	mov	r3, #1
   2f030:	add	r1, r1, r2
   2f034:	add	r2, r1, #1
   2f038:	add	r1, r4, #60	; 0x3c
   2f03c:	blx	r5
   2f040:	cmp	r0, #0
   2f044:	bne	2ef64 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2f048:	ldr	r1, [r4, #28]
   2f04c:	ldr	r0, [r4, #60]	; 0x3c
   2f050:	ldr	r3, [r4, #64]	; 0x40
   2f054:	ldr	r2, [r4, #32]
   2f058:	add	r0, r0, r1
   2f05c:	sub	r1, r3, r1
   2f060:	mvn	r3, #3
   2f064:	cmn	r1, #4
   2f068:	str	r0, [r4, #16]
   2f06c:	movcs	r1, r3
   2f070:	str	r1, [r4, #24]
   2f074:	str	r3, [r2, #4]
   2f078:	adds	r0, r0, r7
   2f07c:	beq	2ef64 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2f080:	lsl	r2, r6, #2
   2f084:	mov	r1, r8
   2f088:	bl	14e58 <memcpy@plt>
   2f08c:	mov	r0, r4
   2f090:	sub	sp, fp, #24
   2f094:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f098:	b	2f0a8 <flatcc_builder_end_offset_vector@@Base>
   2f09c:	strdeq	sl, [r1], -r8
   2f0a0:	andeq	r9, r1, lr, lsr #16
   2f0a4:	andeq	sl, r1, fp, lsl #18

0002f0a8 <flatcc_builder_end_offset_vector@@Base>:
   2f0a8:	push	{r4, r5, fp, lr}
   2f0ac:	add	fp, sp, #8
   2f0b0:	mov	r4, r0
   2f0b4:	ldr	r0, [r0, #32]
   2f0b8:	ldrh	r1, [r0, #14]
   2f0bc:	cmp	r1, #5
   2f0c0:	bne	2f160 <flatcc_builder_end_offset_vector@@Base+0xb8>
   2f0c4:	ldr	r2, [r0, #20]
   2f0c8:	ldr	r1, [r4, #16]
   2f0cc:	mov	r0, r4
   2f0d0:	mov	r3, #0
   2f0d4:	bl	301cc <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2f0d8:	mov	r5, r0
   2f0dc:	cmp	r0, #0
   2f0e0:	beq	2f158 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2f0e4:	ldr	r0, [r4, #16]
   2f0e8:	ldr	r2, [r4, #20]
   2f0ec:	mov	r1, #0
   2f0f0:	bl	14ee8 <memset@plt>
   2f0f4:	ldr	r0, [r4, #32]
   2f0f8:	ldr	r1, [r4, #60]	; 0x3c
   2f0fc:	ldr	ip, [r4, #64]	; 0x40
   2f100:	ldr	r3, [r0, #8]
   2f104:	str	r3, [r4, #20]
   2f108:	ldr	r3, [r0]
   2f10c:	str	r3, [r4, #28]
   2f110:	add	r1, r1, r3
   2f114:	ldr	r2, [r0, #4]
   2f118:	str	r1, [r4, #16]
   2f11c:	sub	r1, ip, r3
   2f120:	cmp	r1, r2
   2f124:	movhi	r1, r2
   2f128:	str	r1, [r4, #24]
   2f12c:	ldrh	r1, [r4, #130]	; 0x82
   2f130:	ldrh	r2, [r4, #128]	; 0x80
   2f134:	cmp	r2, r1
   2f138:	strhcc	r1, [r4, #128]	; 0x80
   2f13c:	ldrh	r1, [r0, #12]
   2f140:	sub	r0, r0, #36	; 0x24
   2f144:	str	r0, [r4, #32]
   2f148:	strh	r1, [r4, #130]	; 0x82
   2f14c:	ldr	r0, [r4, #156]	; 0x9c
   2f150:	sub	r0, r0, #1
   2f154:	str	r0, [r4, #156]	; 0x9c
   2f158:	mov	r0, r5
   2f15c:	pop	{r4, r5, fp, pc}
   2f160:	ldr	r0, [pc, #24]	; 2f180 <flatcc_builder_end_offset_vector@@Base+0xd8>
   2f164:	ldr	r1, [pc, #24]	; 2f184 <flatcc_builder_end_offset_vector@@Base+0xdc>
   2f168:	ldr	r3, [pc, #24]	; 2f188 <flatcc_builder_end_offset_vector@@Base+0xe0>
   2f16c:	movw	r2, #1480	; 0x5c8
   2f170:	add	r0, pc, r0
   2f174:	add	r1, pc, r1
   2f178:	add	r3, pc, r3
   2f17c:	bl	14f3c <__assert_fail@plt>
   2f180:	ldrdeq	r9, [r1], -r1
   2f184:	muleq	r1, sl, r6
   2f188:	strdeq	sl, [r1], -r8

0002f18c <flatcc_builder_start_string@@Base>:
   2f18c:	push	{r4, r5, fp, lr}
   2f190:	add	fp, sp, #8
   2f194:	mov	r1, #1
   2f198:	mov	r4, r0
   2f19c:	mov	r5, #1
   2f1a0:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2f1a4:	mov	r1, r0
   2f1a8:	mvn	r0, #0
   2f1ac:	cmp	r1, #0
   2f1b0:	popne	{r4, r5, fp, pc}
   2f1b4:	ldr	r0, [r4, #32]
   2f1b8:	mov	r2, #6
   2f1bc:	str	r5, [r0, #16]
   2f1c0:	mov	r0, #0
   2f1c4:	ldr	r1, [r4, #32]
   2f1c8:	str	r0, [r1, #20]
   2f1cc:	ldr	r1, [r4, #32]
   2f1d0:	strh	r2, [r1, #14]
   2f1d4:	ldr	r2, [r4, #28]
   2f1d8:	ldr	r3, [r4, #60]	; 0x3c
   2f1dc:	ldr	r5, [r4, #64]	; 0x40
   2f1e0:	add	r3, r3, r2
   2f1e4:	sub	r2, r5, r2
   2f1e8:	str	r3, [r4, #16]
   2f1ec:	mvn	r3, #3
   2f1f0:	cmn	r2, #4
   2f1f4:	movcs	r2, r3
   2f1f8:	str	r2, [r4, #24]
   2f1fc:	str	r3, [r1, #4]
   2f200:	pop	{r4, r5, fp, pc}

0002f204 <flatcc_builder_reserve_table@@Base>:
   2f204:	push	{r4, r5, r6, sl, fp, lr}
   2f208:	add	fp, sp, #16
   2f20c:	sub	sp, sp, #8
   2f210:	cmn	r1, #1
   2f214:	ble	2f2e8 <flatcc_builder_reserve_table@@Base+0xe4>
   2f218:	mov	r4, r0
   2f21c:	ldr	r0, [r0, #32]
   2f220:	mov	r5, r1
   2f224:	ldr	r1, [r4, #56]	; 0x38
   2f228:	ldrh	r2, [r0, #28]
   2f22c:	ldr	r0, [r0, #16]
   2f230:	add	r6, r0, r2, lsl #1
   2f234:	add	r0, r6, r5, lsl #1
   2f238:	add	r2, r0, #4
   2f23c:	cmp	r2, r1
   2f240:	bls	2f268 <flatcc_builder_reserve_table@@Base+0x64>
   2f244:	ldr	r0, [r4, #40]	; 0x28
   2f248:	ldr	ip, [r4, #48]	; 0x30
   2f24c:	mov	r3, #0
   2f250:	add	r1, r4, #52	; 0x34
   2f254:	str	r3, [sp]
   2f258:	mov	r3, #1
   2f25c:	blx	ip
   2f260:	cmp	r0, #0
   2f264:	bne	2f308 <flatcc_builder_reserve_table@@Base+0x104>
   2f268:	ldr	r0, [r4, #52]	; 0x34
   2f26c:	adds	r0, r0, r6
   2f270:	str	r0, [r4, #4]
   2f274:	mvneq	r0, #0
   2f278:	subeq	sp, fp, #16
   2f27c:	popeq	{r4, r5, r6, sl, fp, pc}
   2f280:	add	r0, r0, #4
   2f284:	lsl	r1, r5, #1
   2f288:	str	r0, [r4, #4]
   2f28c:	ldr	r0, [r4, #32]
   2f290:	ldr	r3, [r4, #80]	; 0x50
   2f294:	ldr	r5, [r0, #20]
   2f298:	orr	r0, r1, #1
   2f29c:	add	r2, r5, r0
   2f2a0:	cmp	r2, r3
   2f2a4:	bls	2f2cc <flatcc_builder_reserve_table@@Base+0xc8>
   2f2a8:	ldr	r0, [r4, #40]	; 0x28
   2f2ac:	ldr	r6, [r4, #48]	; 0x30
   2f2b0:	mov	r3, #3
   2f2b4:	add	r1, r4, #76	; 0x4c
   2f2b8:	str	r3, [sp]
   2f2bc:	mov	r3, #0
   2f2c0:	blx	r6
   2f2c4:	cmp	r0, #0
   2f2c8:	bne	2f308 <flatcc_builder_reserve_table@@Base+0x104>
   2f2cc:	ldr	r0, [r4, #76]	; 0x4c
   2f2d0:	adds	r0, r0, r5
   2f2d4:	str	r0, [r4]
   2f2d8:	mov	r0, #0
   2f2dc:	mvneq	r0, #0
   2f2e0:	sub	sp, fp, #16
   2f2e4:	pop	{r4, r5, r6, sl, fp, pc}
   2f2e8:	ldr	r0, [pc, #56]	; 2f328 <flatcc_builder_reserve_table@@Base+0x124>
   2f2ec:	ldr	r1, [pc, #56]	; 2f32c <flatcc_builder_reserve_table@@Base+0x128>
   2f2f0:	ldr	r3, [pc, #56]	; 2f330 <flatcc_builder_reserve_table@@Base+0x12c>
   2f2f4:	movw	r2, #1065	; 0x429
   2f2f8:	add	r0, pc, r0
   2f2fc:	add	r1, pc, r1
   2f300:	add	r3, pc, r3
   2f304:	bl	14f3c <__assert_fail@plt>
   2f308:	ldr	r0, [pc, #36]	; 2f334 <flatcc_builder_reserve_table@@Base+0x130>
   2f30c:	ldr	r1, [pc, #36]	; 2f338 <flatcc_builder_reserve_table@@Base+0x134>
   2f310:	ldr	r3, [pc, #36]	; 2f33c <flatcc_builder_reserve_table@@Base+0x138>
   2f314:	mov	r2, #308	; 0x134
   2f318:	add	r0, pc, r0
   2f31c:	add	r1, pc, r1
   2f320:	add	r3, pc, r3
   2f324:	bl	14f3c <__assert_fail@plt>
   2f328:	muleq	r1, r0, ip
   2f32c:	andeq	r9, r1, r2, lsl r5
   2f330:	andeq	r9, r1, r7, asr #24
   2f334:			; <UNDEFINED> instruction: 0x0001a6b3
   2f338:	strdeq	r9, [r1], -r2
   2f33c:	andeq	sl, r1, r5, ror #9

0002f340 <flatcc_builder_start_table@@Base>:
   2f340:	push	{r4, r5, r6, r7, fp, lr}
   2f344:	add	fp, sp, #16
   2f348:	sub	sp, sp, #8
   2f34c:	mov	r6, r1
   2f350:	mov	r1, #4
   2f354:	mov	r4, r0
   2f358:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   2f35c:	mvn	r5, #0
   2f360:	cmp	r0, #0
   2f364:	beq	2f374 <flatcc_builder_start_table@@Base+0x34>
   2f368:	mov	r0, r5
   2f36c:	sub	sp, fp, #16
   2f370:	pop	{r4, r5, r6, r7, fp, pc}
   2f374:	mov	r1, r4
   2f378:	ldr	r2, [r4, #4]
   2f37c:	ldr	r3, [r4, #32]
   2f380:	ldr	r0, [r1, #52]!	; 0x34
   2f384:	sub	r0, r2, r0
   2f388:	str	r0, [r3, #16]
   2f38c:	ldr	r0, [r4]
   2f390:	ldr	r3, [r4, #76]	; 0x4c
   2f394:	ldr	r2, [r4, #32]
   2f398:	sub	r0, r0, r3
   2f39c:	mov	r3, #0
   2f3a0:	str	r0, [r2, #20]
   2f3a4:	ldr	r0, [r4, #12]
   2f3a8:	ldr	r2, [r4, #32]
   2f3ac:	str	r0, [r2, #24]
   2f3b0:	ldr	r0, [r4, #32]
   2f3b4:	ldrh	r2, [r4, #8]
   2f3b8:	strh	r2, [r0, #28]
   2f3bc:	movw	r0, #15186	; 0x3b52
   2f3c0:	strh	r3, [r4, #8]
   2f3c4:	mov	r2, #3
   2f3c8:	movt	r0, #12137	; 0x2f69
   2f3cc:	str	r0, [r4, #12]
   2f3d0:	ldr	r0, [r4, #32]
   2f3d4:	strh	r2, [r0, #14]
   2f3d8:	ldrh	r2, [r0, #28]
   2f3dc:	ldr	r0, [r0, #16]
   2f3e0:	add	r7, r0, r2, lsl #1
   2f3e4:	add	r0, r7, r6, lsl #1
   2f3e8:	add	r2, r0, #4
   2f3ec:	ldr	r0, [r4, #56]	; 0x38
   2f3f0:	cmp	r2, r0
   2f3f4:	bls	2f414 <flatcc_builder_start_table@@Base+0xd4>
   2f3f8:	ldr	r0, [r4, #40]	; 0x28
   2f3fc:	ldr	ip, [r4, #48]	; 0x30
   2f400:	str	r3, [sp]
   2f404:	mov	r3, #1
   2f408:	blx	ip
   2f40c:	cmp	r0, #0
   2f410:	bne	2f4b8 <flatcc_builder_start_table@@Base+0x178>
   2f414:	ldr	r0, [r4, #52]	; 0x34
   2f418:	adds	r0, r0, r7
   2f41c:	str	r0, [r4, #4]
   2f420:	beq	2f368 <flatcc_builder_start_table@@Base+0x28>
   2f424:	add	r0, r0, #4
   2f428:	lsl	r1, r6, #1
   2f42c:	str	r0, [r4, #4]
   2f430:	ldr	r0, [r4, #32]
   2f434:	ldr	r3, [r4, #80]	; 0x50
   2f438:	ldr	r6, [r0, #20]
   2f43c:	orr	r0, r1, #1
   2f440:	add	r2, r6, r0
   2f444:	cmp	r2, r3
   2f448:	bls	2f470 <flatcc_builder_start_table@@Base+0x130>
   2f44c:	ldr	r0, [r4, #40]	; 0x28
   2f450:	ldr	r7, [r4, #48]	; 0x30
   2f454:	mov	r3, #3
   2f458:	add	r1, r4, #76	; 0x4c
   2f45c:	str	r3, [sp]
   2f460:	mov	r3, #0
   2f464:	blx	r7
   2f468:	cmp	r0, #0
   2f46c:	bne	2f4b8 <flatcc_builder_start_table@@Base+0x178>
   2f470:	ldr	r0, [r4, #76]	; 0x4c
   2f474:	adds	r0, r0, r6
   2f478:	str	r0, [r4]
   2f47c:	beq	2f368 <flatcc_builder_start_table@@Base+0x28>
   2f480:	ldr	r0, [r4, #28]
   2f484:	ldr	r2, [r4, #60]	; 0x3c
   2f488:	ldr	r3, [r4, #64]	; 0x40
   2f48c:	ldr	r1, [r4, #32]
   2f490:	mov	r5, #0
   2f494:	add	r2, r2, r0
   2f498:	sub	r0, r3, r0
   2f49c:	str	r2, [r4, #16]
   2f4a0:	movw	r2, #65532	; 0xfffc
   2f4a4:	cmp	r0, r2
   2f4a8:	movcs	r0, r2
   2f4ac:	str	r0, [r4, #24]
   2f4b0:	str	r2, [r1, #4]
   2f4b4:	b	2f368 <flatcc_builder_start_table@@Base+0x28>
   2f4b8:	ldr	r0, [pc, #24]	; 2f4d8 <flatcc_builder_start_table@@Base+0x198>
   2f4bc:	ldr	r1, [pc, #24]	; 2f4dc <flatcc_builder_start_table@@Base+0x19c>
   2f4c0:	ldr	r3, [pc, #24]	; 2f4e0 <flatcc_builder_start_table@@Base+0x1a0>
   2f4c4:	mov	r2, #308	; 0x134
   2f4c8:	add	r0, pc, r0
   2f4cc:	add	r1, pc, r1
   2f4d0:	add	r3, pc, r3
   2f4d4:	bl	14f3c <__assert_fail@plt>
   2f4d8:	andeq	sl, r1, r3, lsl #10
   2f4dc:	andeq	r9, r1, r2, asr #6
   2f4e0:	andeq	sl, r1, r5, lsr r3

0002f4e4 <flatcc_builder_create_vtable@@Base>:
   2f4e4:	push	{r4, r5, fp, lr}
   2f4e8:	add	fp, sp, #8
   2f4ec:	sub	sp, sp, #80	; 0x50
   2f4f0:	mov	r3, r2
   2f4f4:	mov	r2, #0
   2f4f8:	mov	r4, r0
   2f4fc:	cmp	r3, #0
   2f500:	str	r2, [sp, #12]
   2f504:	str	r2, [sp, #8]
   2f508:	movne	r2, #1
   2f50c:	strne	r1, [sp, #16]
   2f510:	strne	r3, [sp, #8]
   2f514:	strne	r3, [sp, #20]
   2f518:	strne	r2, [sp, #12]
   2f51c:	ldr	r0, [r4, #152]	; 0x98
   2f520:	cmp	r0, #0
   2f524:	bne	2f534 <flatcc_builder_create_vtable@@Base+0x50>
   2f528:	ldr	r0, [r4, #180]	; 0xb4
   2f52c:	cmp	r0, #0
   2f530:	beq	2f580 <flatcc_builder_create_vtable@@Base+0x9c>
   2f534:	cmp	r3, #0
   2f538:	beq	2f5c4 <flatcc_builder_create_vtable@@Base+0xe0>
   2f53c:	ldr	r0, [r4, #136]	; 0x88
   2f540:	ldr	ip, [r4, #44]	; 0x2c
   2f544:	add	r1, sp, #8
   2f548:	add	r1, r1, #8
   2f54c:	sub	r5, r0, r3
   2f550:	ldr	r0, [r4, #36]	; 0x24
   2f554:	str	r3, [sp]
   2f558:	mov	r3, r5
   2f55c:	blx	ip
   2f560:	cmp	r0, #0
   2f564:	bne	2f5e4 <flatcc_builder_create_vtable@@Base+0x100>
   2f568:	cmp	r5, #0
   2f56c:	str	r5, [r4, #136]	; 0x88
   2f570:	beq	2f5b8 <flatcc_builder_create_vtable@@Base+0xd4>
   2f574:	add	r0, r5, #1
   2f578:	sub	sp, fp, #8
   2f57c:	pop	{r4, r5, fp, pc}
   2f580:	ldr	r5, [r4, #140]	; 0x8c
   2f584:	ldr	r0, [r4, #36]	; 0x24
   2f588:	ldr	ip, [r4, #44]	; 0x2c
   2f58c:	add	r1, r5, r3
   2f590:	str	r1, [r4, #140]	; 0x8c
   2f594:	add	r1, sp, #8
   2f598:	str	r3, [sp]
   2f59c:	mov	r3, r5
   2f5a0:	add	r1, r1, #8
   2f5a4:	blx	ip
   2f5a8:	cmp	r0, #0
   2f5ac:	bne	2f604 <flatcc_builder_create_vtable@@Base+0x120>
   2f5b0:	adds	r0, r5, #1
   2f5b4:	bne	2f578 <flatcc_builder_create_vtable@@Base+0x94>
   2f5b8:	mov	r0, #0
   2f5bc:	sub	sp, fp, #8
   2f5c0:	pop	{r4, r5, fp, pc}
   2f5c4:	ldr	r0, [pc, #100]	; 2f630 <flatcc_builder_create_vtable@@Base+0x14c>
   2f5c8:	ldr	r1, [pc, #100]	; 2f634 <flatcc_builder_create_vtable@@Base+0x150>
   2f5cc:	ldr	r3, [pc, #100]	; 2f638 <flatcc_builder_create_vtable@@Base+0x154>
   2f5d0:	movw	r2, #647	; 0x287
   2f5d4:	add	r0, pc, r0
   2f5d8:	add	r1, pc, r1
   2f5dc:	add	r3, pc, r3
   2f5e0:	bl	14f3c <__assert_fail@plt>
   2f5e4:	ldr	r0, [pc, #80]	; 2f63c <flatcc_builder_create_vtable@@Base+0x158>
   2f5e8:	ldr	r1, [pc, #80]	; 2f640 <flatcc_builder_create_vtable@@Base+0x15c>
   2f5ec:	ldr	r3, [pc, #80]	; 2f644 <flatcc_builder_create_vtable@@Base+0x160>
   2f5f0:	movw	r2, #651	; 0x28b
   2f5f4:	add	r0, pc, r0
   2f5f8:	add	r1, pc, r1
   2f5fc:	add	r3, pc, r3
   2f600:	bl	14f3c <__assert_fail@plt>
   2f604:	ldr	r0, [pc, #24]	; 2f624 <flatcc_builder_create_vtable@@Base+0x140>
   2f608:	ldr	r1, [pc, #24]	; 2f628 <flatcc_builder_create_vtable@@Base+0x144>
   2f60c:	ldr	r3, [pc, #24]	; 2f62c <flatcc_builder_create_vtable@@Base+0x148>
   2f610:	movw	r2, #677	; 0x2a5
   2f614:	add	r0, pc, r0
   2f618:	add	r1, pc, r1
   2f61c:	add	r3, pc, r3
   2f620:	bl	14f3c <__assert_fail@plt>
   2f624:			; <UNDEFINED> instruction: 0x0001a3b7
   2f628:	strdeq	r9, [r1], -r6
   2f62c:	andeq	sl, r1, sl, lsr #6
   2f630:	strdeq	sl, [r1], -r7
   2f634:	andeq	r9, r1, r6, lsr r2
   2f638:	andeq	sl, r1, lr, lsr #5
   2f63c:	ldrdeq	sl, [r1], -r7
   2f640:	andeq	r9, r1, r6, lsl r2
   2f644:	andeq	sl, r1, lr, lsl #5

0002f648 <flatcc_builder_create_cached_vtable@@Base>:
   2f648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f64c:	add	fp, sp, #28
   2f650:	sub	sp, sp, #20
   2f654:	mov	sl, r0
   2f658:	ldr	r0, [r0, #116]	; 0x74
   2f65c:	mov	r8, r3
   2f660:	mov	r5, r2
   2f664:	str	r1, [sp, #16]
   2f668:	cmp	r0, #0
   2f66c:	beq	2f710 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2f670:	ldr	r1, [sl, #92]	; 0x5c
   2f674:	rsb	r0, r0, #32
   2f678:	lsr	r0, r8, r0
   2f67c:	add	r6, r1, r0, lsl #2
   2f680:	cmp	r6, #0
   2f684:	beq	2f7d4 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2f688:	ldr	r7, [r6]
   2f68c:	str	r6, [sp, #12]
   2f690:	cmp	r7, #0
   2f694:	beq	2f7dc <flatcc_builder_create_cached_vtable@@Base+0x194>
   2f698:	ldr	r4, [sl, #68]	; 0x44
   2f69c:	ldr	r8, [sl, #100]	; 0x64
   2f6a0:	mov	r0, #0
   2f6a4:	str	r0, [sp, #8]
   2f6a8:	add	r9, r8, r7
   2f6ac:	mov	r1, r4
   2f6b0:	ldr	r0, [r9, #8]
   2f6b4:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2f6b8:	cmp	r0, r5
   2f6bc:	bne	2f6d4 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   2f6c0:	ldr	r0, [sp, #16]
   2f6c4:	mov	r2, r5
   2f6c8:	bl	14e64 <memcmp@plt>
   2f6cc:	cmp	r0, #0
   2f6d0:	beq	2f6e8 <flatcc_builder_create_cached_vtable@@Base+0xa0>
   2f6d4:	ldr	r7, [r9, #12]!
   2f6d8:	cmp	r7, #0
   2f6dc:	mov	r6, r9
   2f6e0:	bne	2f6a8 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2f6e4:	b	2f7cc <flatcc_builder_create_cached_vtable@@Base+0x184>
   2f6e8:	ldr	r0, [sl, #152]	; 0x98
   2f6ec:	ldr	r1, [r9, #4]
   2f6f0:	cmp	r1, r0
   2f6f4:	beq	2f940 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2f6f8:	mov	r6, r9
   2f6fc:	mov	r0, r9
   2f700:	ldr	r7, [r6, #12]!
   2f704:	cmp	r7, #0
   2f708:	bne	2f6a4 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2f70c:	b	2f7e0 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2f710:	ldr	r0, [sl, #124]	; 0x7c
   2f714:	cmp	r0, #0
   2f718:	bne	2f98c <flatcc_builder_create_cached_vtable@@Base+0x344>
   2f71c:	ldr	r0, [sl, #104]	; 0x68
   2f720:	add	r7, sl, #100	; 0x64
   2f724:	cmp	r0, #15
   2f728:	bhi	2f754 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2f72c:	ldr	r0, [sl, #40]	; 0x28
   2f730:	ldr	r6, [sl, #48]	; 0x30
   2f734:	mov	r1, #6
   2f738:	mov	r2, #16
   2f73c:	mov	r3, #0
   2f740:	str	r1, [sp]
   2f744:	mov	r1, r7
   2f748:	blx	r6
   2f74c:	cmp	r0, #0
   2f750:	bne	2f96c <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f754:	ldr	r0, [r7]
   2f758:	mov	r7, #0
   2f75c:	cmp	r0, #0
   2f760:	beq	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f764:	mov	r0, #16
   2f768:	mov	r2, #5
   2f76c:	add	r1, sl, #92	; 0x5c
   2f770:	mov	r3, #1
   2f774:	mov	r4, #256	; 0x100
   2f778:	str	r0, [sl, #124]	; 0x7c
   2f77c:	ldr	r0, [sl, #40]	; 0x28
   2f780:	ldr	r6, [sl, #48]	; 0x30
   2f784:	str	r2, [sp]
   2f788:	mov	r2, #256	; 0x100
   2f78c:	blx	r6
   2f790:	cmp	r0, #0
   2f794:	bne	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f798:	ldr	r0, [sl, #96]	; 0x60
   2f79c:	mov	r1, r4
   2f7a0:	lsl	r4, r4, #1
   2f7a4:	cmp	r0, r1, lsl #1
   2f7a8:	bcs	2f79c <flatcc_builder_create_cached_vtable@@Base+0x154>
   2f7ac:	lsr	r1, r1, #2
   2f7b0:	mvn	r0, #0
   2f7b4:	mov	r2, #1
   2f7b8:	add	r0, r0, #1
   2f7bc:	cmp	r1, r2, lsl r0
   2f7c0:	bhi	2f7b8 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2f7c4:	str	r0, [sl, #116]	; 0x74
   2f7c8:	b	2f670 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2f7cc:	ldr	r9, [sp, #8]
   2f7d0:	b	2f7e0 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2f7d4:	mov	r7, #0
   2f7d8:	b	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f7dc:	mov	r9, #0
   2f7e0:	ldr	r4, [sl, #124]	; 0x7c
   2f7e4:	ldr	r0, [sl, #104]	; 0x68
   2f7e8:	add	r7, sl, #100	; 0x64
   2f7ec:	add	r2, r4, #16
   2f7f0:	cmp	r2, r0
   2f7f4:	bls	2f81c <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2f7f8:	ldr	r0, [sl, #40]	; 0x28
   2f7fc:	ldr	r6, [sl, #48]	; 0x30
   2f800:	mov	r1, #6
   2f804:	mov	r3, #0
   2f808:	str	r1, [sp]
   2f80c:	mov	r1, r7
   2f810:	blx	r6
   2f814:	cmp	r0, #0
   2f818:	bne	2f96c <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f81c:	ldr	r0, [r7]
   2f820:	mov	r7, #0
   2f824:	adds	r4, r0, r4
   2f828:	beq	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f82c:	ldr	r0, [sl, #124]	; 0x7c
   2f830:	ldr	r1, [sl, #152]	; 0x98
   2f834:	add	r2, r0, #16
   2f838:	str	r2, [sl, #124]	; 0x7c
   2f83c:	ldr	r2, [sp, #12]
   2f840:	str	r1, [r4, #4]
   2f844:	ldr	r1, [r2]
   2f848:	str	r1, [r4, #12]
   2f84c:	ldr	r1, [sp, #16]
   2f850:	str	r0, [r2]
   2f854:	mov	r0, sl
   2f858:	mov	r2, r5
   2f85c:	bl	2f4e4 <flatcc_builder_create_vtable@@Base>
   2f860:	cmp	r0, #0
   2f864:	str	r0, [r4]
   2f868:	beq	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f86c:	cmp	r9, #0
   2f870:	beq	2f88c <flatcc_builder_create_cached_vtable@@Base+0x244>
   2f874:	ldr	r0, [r9, #8]
   2f878:	str	r0, [r4, #8]
   2f87c:	ldr	r7, [r4]
   2f880:	mov	r0, r7
   2f884:	sub	sp, fp, #28
   2f888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f88c:	ldr	r6, [sl, #120]	; 0x78
   2f890:	ldr	r0, [sl, #172]	; 0xac
   2f894:	add	r2, r6, r5
   2f898:	cmp	r0, #0
   2f89c:	beq	2f8d8 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2f8a0:	cmp	r0, r2
   2f8a4:	bcs	2f8d8 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2f8a8:	ldr	r0, [sl, #116]	; 0x74
   2f8ac:	cmp	r0, #0
   2f8b0:	beq	2f87c <flatcc_builder_create_cached_vtable@@Base+0x234>
   2f8b4:	ldr	r0, [sl, #92]	; 0x5c
   2f8b8:	ldr	r2, [sl, #96]	; 0x60
   2f8bc:	mov	r1, #0
   2f8c0:	mov	r5, #0
   2f8c4:	bl	14ee8 <memset@plt>
   2f8c8:	mov	r0, #16
   2f8cc:	str	r5, [sl, #120]	; 0x78
   2f8d0:	str	r0, [sl, #124]	; 0x7c
   2f8d4:	b	2f87c <flatcc_builder_create_cached_vtable@@Base+0x234>
   2f8d8:	ldr	r0, [sl, #72]	; 0x48
   2f8dc:	add	r7, sl, #68	; 0x44
   2f8e0:	cmp	r2, r0
   2f8e4:	bls	2f90c <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2f8e8:	ldr	r0, [sl, #40]	; 0x28
   2f8ec:	ldr	ip, [sl, #48]	; 0x30
   2f8f0:	mov	r1, #2
   2f8f4:	mov	r3, #0
   2f8f8:	str	r1, [sp]
   2f8fc:	mov	r1, r7
   2f900:	blx	ip
   2f904:	cmp	r0, #0
   2f908:	bne	2f96c <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f90c:	ldr	r0, [r7]
   2f910:	adds	r0, r0, r6
   2f914:	beq	2f938 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2f918:	ldr	r1, [sl, #120]	; 0x78
   2f91c:	mov	r2, r5
   2f920:	str	r1, [r4, #8]
   2f924:	add	r1, r1, r5
   2f928:	str	r1, [sl, #120]	; 0x78
   2f92c:	ldr	r1, [sp, #16]
   2f930:	bl	14e58 <memcpy@plt>
   2f934:	b	2f87c <flatcc_builder_create_cached_vtable@@Base+0x234>
   2f938:	mvn	r7, #0
   2f93c:	b	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f940:	ldr	r0, [sp, #12]
   2f944:	cmp	r6, r0
   2f948:	beq	2f964 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2f94c:	mov	r1, r0
   2f950:	ldr	r0, [r9, #12]
   2f954:	str	r0, [r6]
   2f958:	ldr	r0, [r1]
   2f95c:	str	r0, [r9, #12]
   2f960:	str	r7, [r1]
   2f964:	ldr	r7, [r9]
   2f968:	b	2f880 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f96c:	ldr	r0, [pc, #68]	; 2f9b8 <flatcc_builder_create_cached_vtable@@Base+0x370>
   2f970:	ldr	r1, [pc, #68]	; 2f9bc <flatcc_builder_create_cached_vtable@@Base+0x374>
   2f974:	ldr	r3, [pc, #68]	; 2f9c0 <flatcc_builder_create_cached_vtable@@Base+0x378>
   2f978:	mov	r2, #308	; 0x134
   2f97c:	add	r0, pc, r0
   2f980:	add	r1, pc, r1
   2f984:	add	r3, pc, r3
   2f988:	bl	14f3c <__assert_fail@plt>
   2f98c:	ldr	r0, [pc, #24]	; 2f9ac <flatcc_builder_create_cached_vtable@@Base+0x364>
   2f990:	ldr	r1, [pc, #24]	; 2f9b0 <flatcc_builder_create_cached_vtable@@Base+0x368>
   2f994:	ldr	r3, [pc, #24]	; 2f9b4 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   2f998:	movw	r2, #342	; 0x156
   2f99c:	add	r0, pc, r0
   2f9a0:	add	r1, pc, r1
   2f9a4:	add	r3, pc, r3
   2f9a8:	bl	14f3c <__assert_fail@plt>
   2f9ac:	strdeq	r9, [r1], -r3
   2f9b0:	andeq	r8, r1, lr, ror #28
   2f9b4:	strdeq	r9, [r1], -sl
   2f9b8:	andeq	sl, r1, pc, asr #32
   2f9bc:	andeq	r8, r1, lr, lsl #29
   2f9c0:	andeq	r9, r1, r1, lsl #29

0002f9c4 <flatcc_builder_create_table@@Base>:
   2f9c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f9c8:	add	fp, sp, #24
   2f9cc:	sub	sp, sp, #80	; 0x50
   2f9d0:	ldr	r5, [fp, #12]
   2f9d4:	cmn	r5, #1
   2f9d8:	ble	2fb2c <flatcc_builder_create_table@@Base+0x168>
   2f9dc:	ldr	ip, [fp, #16]
   2f9e0:	tst	ip, #1
   2f9e4:	beq	2fb4c <flatcc_builder_create_table@@Base+0x188>
   2f9e8:	mov	r8, r0
   2f9ec:	ldrh	r0, [r0, #128]	; 0x80
   2f9f0:	cmp	r3, #4
   2f9f4:	movls	r3, #4
   2f9f8:	cmp	r0, r3
   2f9fc:	strhcc	r3, [r8, #128]	; 0x80
   2fa00:	sub	r3, r3, #1
   2fa04:	cmp	r5, #1
   2fa08:	ldr	r4, [r8, #136]	; 0x88
   2fa0c:	sub	r0, r4, r2
   2fa10:	and	r0, r0, r3
   2fa14:	add	r3, ip, r0
   2fa18:	mvn	ip, #3
   2fa1c:	sub	r6, ip, r2
   2fa20:	add	r4, r6, r4
   2fa24:	add	r6, r4, #1
   2fa28:	sub	r3, r6, r3
   2fa2c:	str	r3, [fp, #-28]	; 0xffffffe4
   2fa30:	blt	2fa5c <flatcc_builder_create_table@@Base+0x98>
   2fa34:	ldr	r3, [fp, #8]
   2fa38:	sub	r6, r4, r0
   2fa3c:	sub	r4, ip, r6
   2fa40:	ldrh	r6, [r3], #2
   2fa44:	subs	r5, r5, #1
   2fa48:	ldr	r7, [r6, r1]
   2fa4c:	add	r7, r4, r7
   2fa50:	sub	r7, r7, r6
   2fa54:	str	r7, [r6, r1]
   2fa58:	bne	2fa40 <flatcc_builder_create_table@@Base+0x7c>
   2fa5c:	sub	r3, fp, #28
   2fa60:	mov	r4, #4
   2fa64:	cmp	r2, #0
   2fa68:	str	r3, [sp, #12]
   2fa6c:	mov	r3, #1
   2fa70:	str	r4, [sp, #4]
   2fa74:	str	r4, [sp, #16]
   2fa78:	str	r3, [sp, #8]
   2fa7c:	beq	2fa98 <flatcc_builder_create_table@@Base+0xd4>
   2fa80:	mov	r3, #2
   2fa84:	add	r4, r2, #4
   2fa88:	str	r1, [sp, #20]
   2fa8c:	str	r2, [sp, #24]
   2fa90:	str	r3, [sp, #8]
   2fa94:	str	r4, [sp, #4]
   2fa98:	cmp	r0, #0
   2fa9c:	beq	2fac8 <flatcc_builder_create_table@@Base+0x104>
   2faa0:	add	r4, r4, r0
   2faa4:	add	r1, sp, #4
   2faa8:	str	r4, [sp, #4]
   2faac:	add	r1, r1, r3, lsl #3
   2fab0:	add	r3, r3, #1
   2fab4:	ldr	r2, [pc, #208]	; 2fb8c <flatcc_builder_create_table@@Base+0x1c8>
   2fab8:	ldr	r2, [pc, r2]
   2fabc:	str	r2, [r1, #8]
   2fac0:	str	r0, [r1, #12]
   2fac4:	str	r3, [sp, #8]
   2fac8:	cmp	r4, #0
   2facc:	ble	2fb6c <flatcc_builder_create_table@@Base+0x1a8>
   2fad0:	ldr	r0, [r8, #136]	; 0x88
   2fad4:	ldr	r7, [r8, #44]	; 0x2c
   2fad8:	add	r1, sp, #4
   2fadc:	mov	r2, r3
   2fae0:	add	r1, r1, #8
   2fae4:	sub	r5, r0, r4
   2fae8:	ldr	r0, [r8, #36]	; 0x24
   2faec:	str	r4, [sp]
   2faf0:	mov	r3, r5
   2faf4:	blx	r7
   2faf8:	cmp	r0, #0
   2fafc:	streq	r5, [r8, #136]	; 0x88
   2fb00:	moveq	r0, r5
   2fb04:	subeq	sp, fp, #24
   2fb08:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fb0c:	ldr	r0, [pc, #160]	; 2fbb4 <flatcc_builder_create_table@@Base+0x1f0>
   2fb10:	ldr	r1, [pc, #160]	; 2fbb8 <flatcc_builder_create_table@@Base+0x1f4>
   2fb14:	ldr	r3, [pc, #160]	; 2fbbc <flatcc_builder_create_table@@Base+0x1f8>
   2fb18:	movw	r2, #651	; 0x28b
   2fb1c:	add	r0, pc, r0
   2fb20:	add	r1, pc, r1
   2fb24:	add	r3, pc, r3
   2fb28:	bl	14f3c <__assert_fail@plt>
   2fb2c:	ldr	r0, [pc, #92]	; 2fb90 <flatcc_builder_create_table@@Base+0x1cc>
   2fb30:	ldr	r1, [pc, #92]	; 2fb94 <flatcc_builder_create_table@@Base+0x1d0>
   2fb34:	ldr	r3, [pc, #92]	; 2fb98 <flatcc_builder_create_table@@Base+0x1d4>
   2fb38:	movw	r2, #1237	; 0x4d5
   2fb3c:	add	r0, pc, r0
   2fb40:	add	r1, pc, r1
   2fb44:	add	r3, pc, r3
   2fb48:	bl	14f3c <__assert_fail@plt>
   2fb4c:	ldr	r0, [pc, #72]	; 2fb9c <flatcc_builder_create_table@@Base+0x1d8>
   2fb50:	ldr	r1, [pc, #72]	; 2fba0 <flatcc_builder_create_table@@Base+0x1dc>
   2fb54:	ldr	r3, [pc, #72]	; 2fba4 <flatcc_builder_create_table@@Base+0x1e0>
   2fb58:	movw	r2, #1243	; 0x4db
   2fb5c:	add	r0, pc, r0
   2fb60:	add	r1, pc, r1
   2fb64:	add	r3, pc, r3
   2fb68:	bl	14f3c <__assert_fail@plt>
   2fb6c:	ldr	r0, [pc, #52]	; 2fba8 <flatcc_builder_create_table@@Base+0x1e4>
   2fb70:	ldr	r1, [pc, #52]	; 2fbac <flatcc_builder_create_table@@Base+0x1e8>
   2fb74:	ldr	r3, [pc, #52]	; 2fbb0 <flatcc_builder_create_table@@Base+0x1ec>
   2fb78:	movw	r2, #647	; 0x287
   2fb7c:	add	r0, pc, r0
   2fb80:	add	r1, pc, r1
   2fb84:	add	r3, pc, r3
   2fb88:	bl	14f3c <__assert_fail@plt>
   2fb8c:	andeq	ip, r2, ip, lsr #11
   2fb90:	andeq	r9, r1, r5, asr #8
   2fb94:	andeq	r8, r1, lr, asr #25
   2fb98:	andeq	r9, r1, pc, asr #8
   2fb9c:	ldrdeq	r9, [r1], -r3
   2fba0:	andeq	r8, r1, lr, lsr #25
   2fba4:	andeq	r9, r1, pc, lsr #8
   2fba8:	andeq	r9, r1, pc, asr #28
   2fbac:	andeq	r8, r1, lr, lsl #25
   2fbb0:	andeq	r9, r1, r6, lsl #26
   2fbb4:	andeq	r9, r1, pc, lsr #29
   2fbb8:	andeq	r8, r1, lr, ror #25
   2fbbc:	andeq	r9, r1, r6, ror #26

0002fbc0 <flatcc_builder_check_required_field@@Base>:
   2fbc0:	ldr	r2, [r0, #32]
   2fbc4:	ldrh	r2, [r2, #14]
   2fbc8:	cmp	r2, #3
   2fbcc:	bne	2fbfc <flatcc_builder_check_required_field@@Base+0x3c>
   2fbd0:	ldrh	r3, [r0, #8]
   2fbd4:	mov	r2, #0
   2fbd8:	cmp	r3, r1
   2fbdc:	bls	2fbf4 <flatcc_builder_check_required_field@@Base+0x34>
   2fbe0:	ldr	r0, [r0, #4]
   2fbe4:	add	r0, r0, r1, lsl #1
   2fbe8:	ldrh	r2, [r0]
   2fbec:	cmp	r2, #0
   2fbf0:	movwne	r2, #1
   2fbf4:	mov	r0, r2
   2fbf8:	bx	lr
   2fbfc:	push	{fp, lr}
   2fc00:	mov	fp, sp
   2fc04:	ldr	r0, [pc, #24]	; 2fc24 <flatcc_builder_check_required_field@@Base+0x64>
   2fc08:	ldr	r1, [pc, #24]	; 2fc28 <flatcc_builder_check_required_field@@Base+0x68>
   2fc0c:	ldr	r3, [pc, #24]	; 2fc2c <flatcc_builder_check_required_field@@Base+0x6c>
   2fc10:	movw	r2, #1272	; 0x4f8
   2fc14:	add	r0, pc, r0
   2fc18:	add	r1, pc, r1
   2fc1c:	add	r3, pc, r3
   2fc20:	bl	14f3c <__assert_fail@plt>
   2fc24:	andeq	r9, r1, r6, lsr #8
   2fc28:	strdeq	r8, [r1], -r6
   2fc2c:	andeq	r9, r1, r9, asr #8

0002fc30 <flatcc_builder_check_union_field@@Base>:
   2fc30:	mov	r2, r0
   2fc34:	ldr	r0, [r0, #32]
   2fc38:	ldrh	r0, [r0, #14]
   2fc3c:	cmp	r0, #3
   2fc40:	bne	2fca0 <flatcc_builder_check_union_field@@Base+0x70>
   2fc44:	cmp	r1, #0
   2fc48:	mov	r0, #0
   2fc4c:	ldrhne	r3, [r2, #8]
   2fc50:	cmpne	r3, r1
   2fc54:	bhi	2fc5c <flatcc_builder_check_union_field@@Base+0x2c>
   2fc58:	bx	lr
   2fc5c:	ldr	r0, [r2, #4]
   2fc60:	add	r0, r0, r1, lsl #1
   2fc64:	ldrh	r1, [r0, #-2]
   2fc68:	cmp	r1, #0
   2fc6c:	beq	2fc90 <flatcc_builder_check_union_field@@Base+0x60>
   2fc70:	ldr	r2, [r2, #16]
   2fc74:	ldrh	r0, [r0]
   2fc78:	ldrb	r1, [r2, r1]
   2fc7c:	cmp	r1, #0
   2fc80:	beq	2fc94 <flatcc_builder_check_union_field@@Base+0x64>
   2fc84:	cmp	r0, #0
   2fc88:	movwne	r0, #1
   2fc8c:	bx	lr
   2fc90:	ldrh	r0, [r0]
   2fc94:	clz	r0, r0
   2fc98:	lsr	r0, r0, #5
   2fc9c:	bx	lr
   2fca0:	push	{fp, lr}
   2fca4:	mov	fp, sp
   2fca8:	ldr	r0, [pc, #24]	; 2fcc8 <flatcc_builder_check_union_field@@Base+0x98>
   2fcac:	ldr	r1, [pc, #24]	; 2fccc <flatcc_builder_check_union_field@@Base+0x9c>
   2fcb0:	ldr	r3, [pc, #24]	; 2fcd0 <flatcc_builder_check_union_field@@Base+0xa0>
   2fcb4:	movw	r2, #1279	; 0x4ff
   2fcb8:	add	r0, pc, r0
   2fcbc:	add	r1, pc, r1
   2fcc0:	add	r3, pc, r3
   2fcc4:	bl	14f3c <__assert_fail@plt>
   2fcc8:	andeq	r9, r1, r2, lsl #7
   2fccc:	andeq	r8, r1, r2, asr fp
   2fcd0:	strdeq	r9, [r1], -r8

0002fcd4 <flatcc_builder_check_required@@Base>:
   2fcd4:	push	{fp, lr}
   2fcd8:	mov	fp, sp
   2fcdc:	mov	r3, r0
   2fce0:	ldr	r0, [r0, #32]
   2fce4:	ldrh	r0, [r0, #14]
   2fce8:	cmp	r0, #3
   2fcec:	bne	2fd44 <flatcc_builder_check_required@@Base+0x70>
   2fcf0:	ldrh	ip, [r3, #8]
   2fcf4:	mov	r0, #0
   2fcf8:	cmp	ip, r2
   2fcfc:	movge	r0, #1
   2fd00:	cmpge	r2, #1
   2fd04:	bge	2fd0c <flatcc_builder_check_required@@Base+0x38>
   2fd08:	pop	{fp, pc}
   2fd0c:	ldr	ip, [r3, #4]
   2fd10:	mov	lr, #0
   2fd14:	b	2fd28 <flatcc_builder_check_required@@Base+0x54>
   2fd18:	add	lr, lr, #1
   2fd1c:	add	r1, r1, #2
   2fd20:	cmp	lr, r2
   2fd24:	popge	{fp, pc}
   2fd28:	ldrh	r3, [r1]
   2fd2c:	add	r3, ip, r3, lsl #1
   2fd30:	ldrh	r3, [r3]
   2fd34:	cmp	r3, #0
   2fd38:	bne	2fd18 <flatcc_builder_check_required@@Base+0x44>
   2fd3c:	mov	r0, #0
   2fd40:	pop	{fp, pc}
   2fd44:	ldr	r0, [pc, #24]	; 2fd64 <flatcc_builder_check_required@@Base+0x90>
   2fd48:	ldr	r1, [pc, #24]	; 2fd68 <flatcc_builder_check_required@@Base+0x94>
   2fd4c:	ldr	r3, [pc, #24]	; 2fd6c <flatcc_builder_check_required@@Base+0x98>
   2fd50:	movw	r2, #1297	; 0x511
   2fd54:	add	r0, pc, r0
   2fd58:	add	r1, pc, r1
   2fd5c:	add	r3, pc, r3
   2fd60:	bl	14f3c <__assert_fail@plt>
   2fd64:	andeq	r9, r1, r6, ror #5
   2fd68:			; <UNDEFINED> instruction: 0x00018ab6
   2fd6c:	andeq	r9, r1, ip, lsr #7

0002fd70 <flatcc_builder_end_table@@Base>:
   2fd70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2fd74:	add	fp, sp, #24
   2fd78:	sub	sp, sp, #16
   2fd7c:	mov	r4, r0
   2fd80:	ldr	r0, [r0, #32]
   2fd84:	ldrh	r0, [r0, #14]
   2fd88:	cmp	r0, #3
   2fd8c:	bne	2ff08 <flatcc_builder_end_table@@Base+0x198>
   2fd90:	ldrh	r0, [r4, #8]
   2fd94:	ldr	r5, [r4, #4]
   2fd98:	mov	r1, #4
   2fd9c:	movw	r2, #31153	; 0x79b1
   2fda0:	movt	r2, #40503	; 0x9e37
   2fda4:	add	r0, r1, r0, lsl #1
   2fda8:	strh	r0, [r5, #-4]!
   2fdac:	ldrh	r1, [r4, #20]
   2fdb0:	uxth	r6, r0
   2fdb4:	add	r1, r1, #4
   2fdb8:	strh	r1, [r5, #2]
   2fdbc:	uxth	r1, r1
   2fdc0:	ldr	r0, [r4, #12]
   2fdc4:	eor	r0, r0, r6
   2fdc8:	mul	r0, r0, r2
   2fdcc:	eor	r0, r0, r1
   2fdd0:	mov	r1, r5
   2fdd4:	mul	r3, r0, r2
   2fdd8:	mov	r0, r4
   2fddc:	mov	r2, r6
   2fde0:	str	r3, [r4, #12]
   2fde4:	bl	2f648 <flatcc_builder_create_cached_vtable@@Base>
   2fde8:	cmp	r0, #0
   2fdec:	beq	2fef8 <flatcc_builder_end_table@@Base+0x188>
   2fdf0:	mov	r7, r0
   2fdf4:	mov	r0, r5
   2fdf8:	mov	r1, #0
   2fdfc:	mov	r2, r6
   2fe00:	mov	r8, #0
   2fe04:	bl	14ee8 <memset@plt>
   2fe08:	ldr	r5, [r4, #32]
   2fe0c:	ldr	r0, [r4, #76]	; 0x4c
   2fe10:	ldr	r6, [r4]
   2fe14:	ldrh	r3, [r4, #130]	; 0x82
   2fe18:	ldr	r1, [r4, #16]
   2fe1c:	ldr	r2, [r4, #20]
   2fe20:	ldr	r5, [r5, #20]
   2fe24:	add	r0, r0, r5
   2fe28:	sub	r6, r6, r0
   2fe2c:	asr	r6, r6, #1
   2fe30:	stm	sp, {r0, r6, r7}
   2fe34:	mov	r0, r4
   2fe38:	bl	2f9c4 <flatcc_builder_create_table@@Base>
   2fe3c:	cmp	r0, #0
   2fe40:	beq	2fefc <flatcc_builder_end_table@@Base+0x18c>
   2fe44:	ldr	r1, [r4, #32]
   2fe48:	mov	r5, r0
   2fe4c:	ldr	r0, [r4, #16]
   2fe50:	ldr	r2, [r4, #20]
   2fe54:	ldr	r3, [r4, #52]	; 0x34
   2fe58:	ldr	r7, [r1, #24]
   2fe5c:	str	r7, [r4, #12]
   2fe60:	ldrh	r7, [r1, #28]
   2fe64:	strh	r7, [r4, #8]
   2fe68:	ldr	r7, [r1, #16]
   2fe6c:	add	r3, r3, r7
   2fe70:	str	r3, [r4, #4]
   2fe74:	ldr	r3, [r4, #76]	; 0x4c
   2fe78:	ldr	r1, [r1, #20]
   2fe7c:	add	r1, r3, r1
   2fe80:	str	r1, [r4]
   2fe84:	mov	r1, #0
   2fe88:	bl	14ee8 <memset@plt>
   2fe8c:	ldr	r0, [r4, #32]
   2fe90:	ldr	r1, [r4, #60]	; 0x3c
   2fe94:	ldr	r2, [r4, #64]	; 0x40
   2fe98:	mov	r8, r5
   2fe9c:	ldr	r3, [r0, #8]
   2fea0:	str	r3, [r4, #20]
   2fea4:	ldr	r3, [r0]
   2fea8:	str	r3, [r4, #28]
   2feac:	add	r1, r1, r3
   2feb0:	ldr	r7, [r0, #4]
   2feb4:	str	r1, [r4, #16]
   2feb8:	sub	r1, r2, r3
   2febc:	cmp	r1, r7
   2fec0:	movhi	r1, r7
   2fec4:	str	r1, [r4, #24]
   2fec8:	ldrh	r1, [r4, #130]	; 0x82
   2fecc:	ldrh	r2, [r4, #128]	; 0x80
   2fed0:	cmp	r2, r1
   2fed4:	strhcc	r1, [r4, #128]	; 0x80
   2fed8:	ldrh	r1, [r0, #12]
   2fedc:	sub	r0, r0, #36	; 0x24
   2fee0:	str	r0, [r4, #32]
   2fee4:	strh	r1, [r4, #130]	; 0x82
   2fee8:	ldr	r0, [r4, #156]	; 0x9c
   2feec:	sub	r0, r0, #1
   2fef0:	str	r0, [r4, #156]	; 0x9c
   2fef4:	b	2fefc <flatcc_builder_end_table@@Base+0x18c>
   2fef8:	mov	r8, #0
   2fefc:	mov	r0, r8
   2ff00:	sub	sp, fp, #24
   2ff04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ff08:	ldr	r0, [pc, #24]	; 2ff28 <flatcc_builder_end_table@@Base+0x1b8>
   2ff0c:	ldr	r1, [pc, #24]	; 2ff2c <flatcc_builder_end_table@@Base+0x1bc>
   2ff10:	ldr	r3, [pc, #24]	; 2ff30 <flatcc_builder_end_table@@Base+0x1c0>
   2ff14:	movw	r2, #1317	; 0x525
   2ff18:	add	r0, pc, r0
   2ff1c:	add	r1, pc, r1
   2ff20:	add	r3, pc, r3
   2ff24:	bl	14f3c <__assert_fail@plt>
   2ff28:	andeq	r9, r1, r2, lsr #2
   2ff2c:	strdeq	r8, [r1], -r2
   2ff30:	andeq	r9, r1, r2, asr #4

0002ff34 <flatcc_builder_create_vector@@Base>:
   2ff34:	push	{r4, r5, r6, r7, fp, lr}
   2ff38:	add	fp, sp, #16
   2ff3c:	sub	sp, sp, #80	; 0x50
   2ff40:	mov	r7, r0
   2ff44:	ldr	r0, [fp, #12]
   2ff48:	cmp	r2, r0
   2ff4c:	bhi	3004c <flatcc_builder_create_vector@@Base+0x118>
   2ff50:	ldr	r0, [fp, #8]
   2ff54:	mov	r4, r2
   2ff58:	ldrh	r2, [r7, #128]	; 0x80
   2ff5c:	mov	r5, #4
   2ff60:	cmp	r0, #4
   2ff64:	movls	r0, r5
   2ff68:	cmp	r2, r0
   2ff6c:	sub	r2, fp, #20
   2ff70:	strhcc	r0, [r7, #128]	; 0x80
   2ff74:	str	r4, [fp, #-20]	; 0xffffffec
   2ff78:	sub	r0, r0, #1
   2ff7c:	ldr	ip, [r7, #136]	; 0x88
   2ff80:	str	r2, [sp, #12]
   2ff84:	mov	r2, #1
   2ff88:	str	r5, [sp, #4]
   2ff8c:	str	r5, [sp, #16]
   2ff90:	str	r2, [sp, #8]
   2ff94:	mls	r6, r3, r4, ip
   2ff98:	mul	r3, r3, r4
   2ff9c:	and	r0, r6, r0
   2ffa0:	cmp	r3, #0
   2ffa4:	beq	2ffc0 <flatcc_builder_create_vector@@Base+0x8c>
   2ffa8:	mov	r2, #2
   2ffac:	add	r5, r3, #4
   2ffb0:	str	r1, [sp, #20]
   2ffb4:	str	r3, [sp, #24]
   2ffb8:	str	r2, [sp, #8]
   2ffbc:	str	r5, [sp, #4]
   2ffc0:	cmp	r0, #0
   2ffc4:	beq	2fff0 <flatcc_builder_create_vector@@Base+0xbc>
   2ffc8:	add	r5, r5, r0
   2ffcc:	add	r1, sp, #4
   2ffd0:	str	r5, [sp, #4]
   2ffd4:	add	r1, r1, r2, lsl #3
   2ffd8:	add	r2, r2, #1
   2ffdc:	ldr	r3, [pc, #168]	; 3008c <flatcc_builder_create_vector@@Base+0x158>
   2ffe0:	ldr	r3, [pc, r3]
   2ffe4:	str	r3, [r1, #8]
   2ffe8:	str	r0, [r1, #12]
   2ffec:	str	r2, [sp, #8]
   2fff0:	cmp	r5, #0
   2fff4:	ble	3006c <flatcc_builder_create_vector@@Base+0x138>
   2fff8:	ldr	r0, [r7, #36]	; 0x24
   2fffc:	ldr	r6, [r7, #44]	; 0x2c
   30000:	add	r1, sp, #4
   30004:	sub	r4, ip, r5
   30008:	str	r5, [sp]
   3000c:	add	r1, r1, #8
   30010:	mov	r3, r4
   30014:	blx	r6
   30018:	cmp	r0, #0
   3001c:	streq	r4, [r7, #136]	; 0x88
   30020:	moveq	r0, r4
   30024:	subeq	sp, fp, #16
   30028:	popeq	{r4, r5, r6, r7, fp, pc}
   3002c:	ldr	r0, [pc, #116]	; 300a8 <flatcc_builder_create_vector@@Base+0x174>
   30030:	ldr	r1, [pc, #116]	; 300ac <flatcc_builder_create_vector@@Base+0x178>
   30034:	ldr	r3, [pc, #116]	; 300b0 <flatcc_builder_create_vector@@Base+0x17c>
   30038:	movw	r2, #651	; 0x28b
   3003c:	add	r0, pc, r0
   30040:	add	r1, pc, r1
   30044:	add	r3, pc, r3
   30048:	bl	14f3c <__assert_fail@plt>
   3004c:	ldr	r0, [pc, #60]	; 30090 <flatcc_builder_create_vector@@Base+0x15c>
   30050:	ldr	r1, [pc, #60]	; 30094 <flatcc_builder_create_vector@@Base+0x160>
   30054:	ldr	r3, [pc, #60]	; 30098 <flatcc_builder_create_vector@@Base+0x164>
   30058:	movw	r2, #1365	; 0x555
   3005c:	add	r0, pc, r0
   30060:	add	r1, pc, r1
   30064:	add	r3, pc, r3
   30068:	bl	14f3c <__assert_fail@plt>
   3006c:	ldr	r0, [pc, #40]	; 3009c <flatcc_builder_create_vector@@Base+0x168>
   30070:	ldr	r1, [pc, #40]	; 300a0 <flatcc_builder_create_vector@@Base+0x16c>
   30074:	ldr	r3, [pc, #40]	; 300a4 <flatcc_builder_create_vector@@Base+0x170>
   30078:	movw	r2, #647	; 0x287
   3007c:	add	r0, pc, r0
   30080:	add	r1, pc, r1
   30084:	add	r3, pc, r3
   30088:	bl	14f3c <__assert_fail@plt>
   3008c:	andeq	ip, r2, r4, lsl #1
   30090:	andeq	r9, r1, r8, asr #2
   30094:	andeq	r8, r1, lr, lsr #15
   30098:	andeq	r9, r1, r3, asr r1
   3009c:	andeq	r9, r1, pc, asr #18
   300a0:	andeq	r8, r1, lr, lsl #15
   300a4:	andeq	r9, r1, r6, lsl #16
   300a8:	andeq	r9, r1, pc, lsl #19
   300ac:	andeq	r8, r1, lr, asr #15
   300b0:	andeq	r9, r1, r6, asr #16

000300b4 <flatcc_builder_end_vector@@Base>:
   300b4:	push	{r4, r5, fp, lr}
   300b8:	add	fp, sp, #8
   300bc:	sub	sp, sp, #8
   300c0:	mov	r4, r0
   300c4:	ldr	r0, [r0, #32]
   300c8:	ldrh	r1, [r0, #14]
   300cc:	cmp	r1, #4
   300d0:	bne	30184 <flatcc_builder_end_vector@@Base+0xd0>
   300d4:	ldr	r3, [r0, #16]
   300d8:	ldr	r2, [r0, #20]
   300dc:	ldr	r0, [r0, #24]
   300e0:	ldr	r1, [r4, #16]
   300e4:	ldrh	r5, [r4, #130]	; 0x82
   300e8:	str	r0, [sp, #4]
   300ec:	mov	r0, r4
   300f0:	str	r5, [sp]
   300f4:	bl	2ff34 <flatcc_builder_create_vector@@Base>
   300f8:	mov	r5, r0
   300fc:	cmp	r0, #0
   30100:	beq	30178 <flatcc_builder_end_vector@@Base+0xc4>
   30104:	ldr	r0, [r4, #16]
   30108:	ldr	r2, [r4, #20]
   3010c:	mov	r1, #0
   30110:	bl	14ee8 <memset@plt>
   30114:	ldr	r0, [r4, #32]
   30118:	ldr	r1, [r4, #60]	; 0x3c
   3011c:	ldr	ip, [r4, #64]	; 0x40
   30120:	ldr	r3, [r0, #8]
   30124:	str	r3, [r4, #20]
   30128:	ldr	r3, [r0]
   3012c:	str	r3, [r4, #28]
   30130:	add	r1, r1, r3
   30134:	ldr	r2, [r0, #4]
   30138:	str	r1, [r4, #16]
   3013c:	sub	r1, ip, r3
   30140:	cmp	r1, r2
   30144:	movhi	r1, r2
   30148:	str	r1, [r4, #24]
   3014c:	ldrh	r1, [r4, #130]	; 0x82
   30150:	ldrh	r2, [r4, #128]	; 0x80
   30154:	cmp	r2, r1
   30158:	strhcc	r1, [r4, #128]	; 0x80
   3015c:	ldrh	r1, [r0, #12]
   30160:	sub	r0, r0, #36	; 0x24
   30164:	str	r0, [r4, #32]
   30168:	strh	r1, [r4, #130]	; 0x82
   3016c:	ldr	r0, [r4, #156]	; 0x9c
   30170:	sub	r0, r0, #1
   30174:	str	r0, [r4, #156]	; 0x9c
   30178:	mov	r0, r5
   3017c:	sub	sp, fp, #8
   30180:	pop	{r4, r5, fp, pc}
   30184:	ldr	r0, [pc, #24]	; 301a4 <flatcc_builder_end_vector@@Base+0xf0>
   30188:	ldr	r1, [pc, #24]	; 301a8 <flatcc_builder_end_vector@@Base+0xf4>
   3018c:	ldr	r3, [pc, #24]	; 301ac <flatcc_builder_end_vector@@Base+0xf8>
   30190:	movw	r2, #1400	; 0x578
   30194:	add	r0, pc, r0
   30198:	add	r1, pc, r1
   3019c:	add	r3, pc, r3
   301a0:	bl	14f3c <__assert_fail@plt>
   301a4:			; <UNDEFINED> instruction: 0x000189b4
   301a8:	andeq	r8, r1, r6, ror r6
   301ac:	muleq	r1, r1, r0

000301b0 <flatcc_builder_vector_count@@Base>:
   301b0:	ldr	r0, [r0, #32]
   301b4:	ldr	r0, [r0, #20]
   301b8:	bx	lr

000301bc <flatcc_builder_vector_edit@@Base>:
   301bc:	ldr	r0, [r0, #16]
   301c0:	bx	lr

000301c4 <flatcc_builder_create_offset_vector_direct@@Base>:
   301c4:	mov	r3, #0
   301c8:	b	301cc <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   301cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   301d0:	add	fp, sp, #24
   301d4:	sub	sp, sp, #80	; 0x50
   301d8:	mov	r6, #0
   301dc:	cmn	r2, #-1073741823	; 0xc0000001
   301e0:	bhi	3031c <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   301e4:	mov	r8, r0
   301e8:	ldrh	r0, [r0, #128]	; 0x80
   301ec:	sub	r7, fp, #28
   301f0:	mov	r5, #4
   301f4:	mov	r4, #1
   301f8:	cmp	r0, #3
   301fc:	movls	r0, #4
   30200:	strhls	r0, [r8, #128]	; 0x80
   30204:	str	r2, [fp, #-28]	; 0xffffffe4
   30208:	ldr	ip, [r8, #136]	; 0x88
   3020c:	str	r7, [sp, #12]
   30210:	mov	r7, #0
   30214:	str	r5, [sp, #4]
   30218:	str	r5, [sp, #16]
   3021c:	str	r4, [sp, #8]
   30220:	cmp	r7, r2, lsl #2
   30224:	and	r6, ip, #3
   30228:	beq	30248 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   3022c:	lsl	r7, r2, #2
   30230:	mov	r4, #2
   30234:	str	r1, [sp, #20]
   30238:	add	r5, r7, #4
   3023c:	str	r7, [sp, #24]
   30240:	str	r4, [sp, #8]
   30244:	str	r5, [sp, #4]
   30248:	cmp	r6, #0
   3024c:	beq	30278 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   30250:	add	r5, r5, r6
   30254:	add	r7, sp, #4
   30258:	str	r5, [sp, #4]
   3025c:	add	r7, r7, r4, lsl #3
   30260:	add	r4, r4, #1
   30264:	ldr	r0, [pc, #348]	; 303c8 <flatcc_builder_create_offset_vector_direct@@Base+0x204>
   30268:	ldr	r0, [pc, r0]
   3026c:	str	r0, [r7, #8]
   30270:	str	r6, [r7, #12]
   30274:	str	r4, [sp, #8]
   30278:	cmp	r2, #0
   3027c:	beq	302e4 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   30280:	mvn	r0, #3
   30284:	mov	r6, #0
   30288:	sub	r0, r0, ip
   3028c:	add	r0, r0, r5
   30290:	ldr	r7, [r1, r6, lsl #2]
   30294:	cmp	r7, #0
   30298:	beq	302bc <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   3029c:	add	r7, r0, r7
   302a0:	cmp	r3, #0
   302a4:	str	r7, [r1, r6, lsl #2]
   302a8:	beq	302d0 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   302ac:	ldrb	r7, [r3, r6]
   302b0:	cmp	r7, #0
   302b4:	bne	302d0 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   302b8:	b	30328 <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   302bc:	cmp	r3, #0
   302c0:	beq	30368 <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   302c4:	ldrb	r7, [r3, r6]
   302c8:	cmp	r7, #0
   302cc:	bne	30348 <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   302d0:	add	r6, r6, #1
   302d4:	sub	r0, r0, #4
   302d8:	cmp	r6, r2
   302dc:	bcc	30290 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   302e0:	ldr	ip, [r8, #136]	; 0x88
   302e4:	cmp	r5, #0
   302e8:	ble	30388 <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   302ec:	ldr	r0, [r8, #36]	; 0x24
   302f0:	ldr	r7, [r8, #44]	; 0x2c
   302f4:	add	r1, sp, #4
   302f8:	sub	r6, ip, r5
   302fc:	mov	r2, r4
   30300:	str	r5, [sp]
   30304:	add	r1, r1, #8
   30308:	mov	r3, r6
   3030c:	blx	r7
   30310:	cmp	r0, #0
   30314:	bne	303a8 <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   30318:	str	r6, [r8, #136]	; 0x88
   3031c:	mov	r0, r6
   30320:	sub	sp, fp, #24
   30324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30328:	ldr	r0, [pc, #156]	; 303cc <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   3032c:	ldr	r1, [pc, #156]	; 303d0 <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   30330:	ldr	r3, [pc, #156]	; 303d4 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   30334:	movw	r2, #1457	; 0x5b1
   30338:	add	r0, pc, r0
   3033c:	add	r1, pc, r1
   30340:	add	r3, pc, r3
   30344:	bl	14f3c <__assert_fail@plt>
   30348:	ldr	r0, [pc, #136]	; 303d8 <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   3034c:	ldr	r1, [pc, #136]	; 303dc <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   30350:	ldr	r3, [pc, #136]	; 303e0 <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   30354:	movw	r2, #1461	; 0x5b5
   30358:	add	r0, pc, r0
   3035c:	add	r1, pc, r1
   30360:	add	r3, pc, r3
   30364:	bl	14f3c <__assert_fail@plt>
   30368:	ldr	r0, [pc, #116]	; 303e4 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   3036c:	ldr	r1, [pc, #116]	; 303e8 <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   30370:	ldr	r3, [pc, #116]	; 303ec <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   30374:	movw	r2, #1463	; 0x5b7
   30378:	add	r0, pc, r0
   3037c:	add	r1, pc, r1
   30380:	add	r3, pc, r3
   30384:	bl	14f3c <__assert_fail@plt>
   30388:	ldr	r0, [pc, #96]	; 303f0 <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   3038c:	ldr	r1, [pc, #96]	; 303f4 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   30390:	ldr	r3, [pc, #96]	; 303f8 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   30394:	movw	r2, #647	; 0x287
   30398:	add	r0, pc, r0
   3039c:	add	r1, pc, r1
   303a0:	add	r3, pc, r3
   303a4:	bl	14f3c <__assert_fail@plt>
   303a8:	ldr	r0, [pc, #76]	; 303fc <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   303ac:	ldr	r1, [pc, #76]	; 30400 <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   303b0:	ldr	r3, [pc, #76]	; 30404 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   303b4:	movw	r2, #651	; 0x28b
   303b8:	add	r0, pc, r0
   303bc:	add	r1, pc, r1
   303c0:	add	r3, pc, r3
   303c4:	bl	14f3c <__assert_fail@plt>
   303c8:	strdeq	fp, [r2], -ip
   303cc:	andeq	r9, r1, r7, lsl #13
   303d0:	ldrdeq	r8, [r1], -r2
   303d4:	andeq	r9, r1, sp, lsl #13
   303d8:	strdeq	r9, [r1], -r8
   303dc:			; <UNDEFINED> instruction: 0x000184b2
   303e0:	andeq	r9, r1, sp, ror #12
   303e4:	andeq	r9, r1, r3, asr r6
   303e8:	muleq	r1, r2, r4
   303ec:	andeq	r9, r1, sp, asr #12
   303f0:	andeq	r9, r1, r3, lsr r6
   303f4:	andeq	r8, r1, r2, ror r4
   303f8:	andeq	r9, r1, sl, ror #9
   303fc:	andeq	r9, r1, r3, lsl r6
   30400:	andeq	r8, r1, r2, asr r4
   30404:	andeq	r9, r1, sl, asr #9

00030408 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30408:	push	{r4, r5, fp, lr}
   3040c:	add	fp, sp, #8
   30410:	mov	r4, r0
   30414:	ldr	r0, [r0, #32]
   30418:	mov	r3, r1
   3041c:	ldrh	r1, [r0, #14]
   30420:	cmp	r1, #5
   30424:	bne	304c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   30428:	ldr	r2, [r0, #20]
   3042c:	ldr	r1, [r4, #16]
   30430:	mov	r0, r4
   30434:	bl	301cc <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30438:	mov	r5, r0
   3043c:	cmp	r0, #0
   30440:	beq	304b8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   30444:	ldr	r0, [r4, #16]
   30448:	ldr	r2, [r4, #20]
   3044c:	mov	r1, #0
   30450:	bl	14ee8 <memset@plt>
   30454:	ldr	r0, [r4, #32]
   30458:	ldr	r1, [r4, #60]	; 0x3c
   3045c:	ldr	ip, [r4, #64]	; 0x40
   30460:	ldr	r3, [r0, #8]
   30464:	str	r3, [r4, #20]
   30468:	ldr	r3, [r0]
   3046c:	str	r3, [r4, #28]
   30470:	add	r1, r1, r3
   30474:	ldr	r2, [r0, #4]
   30478:	str	r1, [r4, #16]
   3047c:	sub	r1, ip, r3
   30480:	cmp	r1, r2
   30484:	movhi	r1, r2
   30488:	str	r1, [r4, #24]
   3048c:	ldrh	r1, [r4, #130]	; 0x82
   30490:	ldrh	r2, [r4, #128]	; 0x80
   30494:	cmp	r2, r1
   30498:	strhcc	r1, [r4, #128]	; 0x80
   3049c:	ldrh	r1, [r0, #12]
   304a0:	sub	r0, r0, #36	; 0x24
   304a4:	str	r0, [r4, #32]
   304a8:	strh	r1, [r4, #130]	; 0x82
   304ac:	ldr	r0, [r4, #156]	; 0x9c
   304b0:	sub	r0, r0, #1
   304b4:	str	r0, [r4, #156]	; 0x9c
   304b8:	mov	r0, r5
   304bc:	pop	{r4, r5, fp, pc}
   304c0:	ldr	r0, [pc, #24]	; 304e0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   304c4:	ldr	r1, [pc, #24]	; 304e4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   304c8:	ldr	r3, [pc, #24]	; 304e8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   304cc:	movw	r2, #1493	; 0x5d5
   304d0:	add	r0, pc, r0
   304d4:	add	r1, pc, r1
   304d8:	add	r3, pc, r3
   304dc:	bl	14f3c <__assert_fail@plt>
   304e0:	andeq	r8, r1, r1, ror r7
   304e4:	andeq	r8, r1, sl, lsr r3
   304e8:	andeq	r8, r1, r2, ror #27

000304ec <flatcc_builder_offset_vector_edit@@Base>:
   304ec:	ldr	r0, [r0, #16]
   304f0:	bx	lr

000304f4 <flatcc_builder_offset_vector_count@@Base>:
   304f4:	ldr	r0, [r0, #32]
   304f8:	ldr	r0, [r0, #20]
   304fc:	bx	lr

00030500 <flatcc_builder_table_add_union@@Base>:
   30500:	push	{r4, r5, r6, r7, fp, lr}
   30504:	add	fp, sp, #16
   30508:	mov	r5, r0
   3050c:	ldr	r0, [r0, #32]
   30510:	ldrh	r0, [r0, #14]
   30514:	cmp	r0, #3
   30518:	bne	305a0 <flatcc_builder_table_add_union@@Base+0xa0>
   3051c:	mov	r7, r3
   30520:	mov	r4, r2
   30524:	mov	r6, r1
   30528:	cmp	r3, #0
   3052c:	beq	3053c <flatcc_builder_table_add_union@@Base+0x3c>
   30530:	uxtb	r0, r4
   30534:	cmp	r0, #0
   30538:	beq	305c0 <flatcc_builder_table_add_union@@Base+0xc0>
   3053c:	cmp	r7, #0
   30540:	beq	3055c <flatcc_builder_table_add_union@@Base+0x5c>
   30544:	mov	r0, r5
   30548:	mov	r1, r6
   3054c:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   30550:	cmp	r0, #0
   30554:	beq	305e0 <flatcc_builder_table_add_union@@Base+0xe0>
   30558:	str	r7, [r0]
   3055c:	sub	r1, r6, #1
   30560:	mov	r0, r5
   30564:	mov	r2, #1
   30568:	mov	r3, #1
   3056c:	bl	307e4 <flatcc_builder_table_add@@Base>
   30570:	cmp	r0, #0
   30574:	strbne	r4, [r0]
   30578:	movne	r0, #0
   3057c:	popne	{r4, r5, r6, r7, fp, pc}
   30580:	ldr	r0, [pc, #156]	; 30624 <flatcc_builder_table_add_union@@Base+0x124>
   30584:	ldr	r1, [pc, #156]	; 30628 <flatcc_builder_table_add_union@@Base+0x128>
   30588:	ldr	r3, [pc, #156]	; 3062c <flatcc_builder_table_add_union@@Base+0x12c>
   3058c:	movw	r2, #1526	; 0x5f6
   30590:	add	r0, pc, r0
   30594:	add	r1, pc, r1
   30598:	add	r3, pc, r3
   3059c:	bl	14f3c <__assert_fail@plt>
   305a0:	ldr	r0, [pc, #88]	; 30600 <flatcc_builder_table_add_union@@Base+0x100>
   305a4:	ldr	r1, [pc, #88]	; 30604 <flatcc_builder_table_add_union@@Base+0x104>
   305a8:	ldr	r3, [pc, #88]	; 30608 <flatcc_builder_table_add_union@@Base+0x108>
   305ac:	movw	r2, #1518	; 0x5ee
   305b0:	add	r0, pc, r0
   305b4:	add	r1, pc, r1
   305b8:	add	r3, pc, r3
   305bc:	bl	14f3c <__assert_fail@plt>
   305c0:	ldr	r0, [pc, #68]	; 3060c <flatcc_builder_table_add_union@@Base+0x10c>
   305c4:	ldr	r1, [pc, #68]	; 30610 <flatcc_builder_table_add_union@@Base+0x110>
   305c8:	ldr	r3, [pc, #68]	; 30614 <flatcc_builder_table_add_union@@Base+0x114>
   305cc:	movw	r2, #1519	; 0x5ef
   305d0:	add	r0, pc, r0
   305d4:	add	r1, pc, r1
   305d8:	add	r3, pc, r3
   305dc:	bl	14f3c <__assert_fail@plt>
   305e0:	ldr	r0, [pc, #48]	; 30618 <flatcc_builder_table_add_union@@Base+0x118>
   305e4:	ldr	r1, [pc, #48]	; 3061c <flatcc_builder_table_add_union@@Base+0x11c>
   305e8:	ldr	r3, [pc, #48]	; 30620 <flatcc_builder_table_add_union@@Base+0x120>
   305ec:	movw	r2, #1522	; 0x5f2
   305f0:	add	r0, pc, r0
   305f4:	add	r1, pc, r1
   305f8:	add	r3, pc, r3
   305fc:	bl	14f3c <__assert_fail@plt>
   30600:	andeq	r8, r1, sl, lsl #21
   30604:	andeq	r8, r1, sl, asr r2
   30608:	andeq	r8, r1, r4, ror sp
   3060c:			; <UNDEFINED> instruction: 0x00018db4
   30610:	andeq	r8, r1, sl, lsr r2
   30614:	andeq	r8, r1, r4, asr sp
   30618:			; <UNDEFINED> instruction: 0x00018db6
   3061c:	andeq	r8, r1, sl, lsl r2
   30620:	andeq	r8, r1, r4, lsr sp
   30624:	andeq	r8, r1, r0, lsr #28
   30628:	andeq	r8, r1, sl, ror r2
   3062c:	muleq	r1, r4, sp

00030630 <flatcc_builder_table_add_offset@@Base>:
   30630:	push	{r4, r5, r6, r7, fp, lr}
   30634:	add	fp, sp, #16
   30638:	sub	sp, sp, #8
   3063c:	mov	r4, r0
   30640:	ldr	r0, [r0, #32]
   30644:	ldrh	r0, [r0, #14]
   30648:	cmp	r0, #3
   3064c:	bne	30760 <flatcc_builder_table_add_offset@@Base+0x130>
   30650:	movw	r0, #32765	; 0x7ffd
   30654:	mov	r5, r1
   30658:	cmp	r1, r0
   3065c:	bcs	30780 <flatcc_builder_table_add_offset@@Base+0x150>
   30660:	ldr	r0, [r4, #4]
   30664:	add	r1, r0, r5, lsl #1
   30668:	ldrh	r1, [r1]
   3066c:	cmp	r1, #0
   30670:	bne	307a0 <flatcc_builder_table_add_offset@@Base+0x170>
   30674:	ldr	r2, [r4, #20]
   30678:	ldr	r1, [r4, #12]
   3067c:	ldr	r3, [r4, #24]
   30680:	add	r2, r2, #3
   30684:	eor	r1, r1, r5
   30688:	bic	r6, r2, #3
   3068c:	movw	r2, #31153	; 0x79b1
   30690:	movt	r2, #40503	; 0x9e37
   30694:	add	r7, r6, #4
   30698:	mul	r1, r1, r2
   3069c:	cmp	r7, r3
   306a0:	str	r7, [r4, #20]
   306a4:	eor	r1, r1, #4
   306a8:	mul	r1, r1, r2
   306ac:	str	r1, [r4, #12]
   306b0:	bls	30724 <flatcc_builder_table_add_offset@@Base+0xf4>
   306b4:	ldr	r1, [r4, #28]
   306b8:	ldr	r0, [r4, #40]	; 0x28
   306bc:	ldr	ip, [r4, #48]	; 0x30
   306c0:	mov	r2, #1
   306c4:	mov	r3, #1
   306c8:	str	r2, [sp]
   306cc:	add	r2, r1, r7
   306d0:	add	r1, r4, #60	; 0x3c
   306d4:	blx	ip
   306d8:	mov	r1, r0
   306dc:	mov	r0, #0
   306e0:	cmp	r1, #0
   306e4:	beq	306f0 <flatcc_builder_table_add_offset@@Base+0xc0>
   306e8:	sub	sp, fp, #16
   306ec:	pop	{r4, r5, r6, r7, fp, pc}
   306f0:	ldr	r0, [r4, #28]
   306f4:	ldr	r2, [r4, #60]	; 0x3c
   306f8:	ldr	r3, [r4, #64]	; 0x40
   306fc:	ldr	r1, [r4, #32]
   30700:	add	r2, r2, r0
   30704:	sub	r0, r3, r0
   30708:	str	r2, [r4, #16]
   3070c:	movw	r2, #65532	; 0xfffc
   30710:	cmp	r0, r2
   30714:	movcs	r0, r2
   30718:	str	r0, [r4, #24]
   3071c:	str	r2, [r1, #4]
   30720:	ldr	r0, [r4, #4]
   30724:	uxth	r1, r5
   30728:	add	r0, r0, r1, lsl #1
   3072c:	strh	r7, [r0]
   30730:	ldrh	r0, [r4, #8]
   30734:	cmp	r0, r1
   30738:	addls	r0, r5, #1
   3073c:	strhls	r0, [r4, #8]
   30740:	ldr	r0, [r4]
   30744:	add	r1, r0, #2
   30748:	str	r1, [r4]
   3074c:	strh	r6, [r0]
   30750:	ldr	r0, [r4, #16]
   30754:	add	r0, r0, r6
   30758:	sub	sp, fp, #16
   3075c:	pop	{r4, r5, r6, r7, fp, pc}
   30760:	ldr	r0, [pc, #88]	; 307c0 <flatcc_builder_table_add_offset@@Base+0x190>
   30764:	ldr	r1, [pc, #88]	; 307c4 <flatcc_builder_table_add_offset@@Base+0x194>
   30768:	ldr	r3, [pc, #88]	; 307c8 <flatcc_builder_table_add_offset@@Base+0x198>
   3076c:	movw	r2, #1811	; 0x713
   30770:	add	r0, pc, r0
   30774:	add	r1, pc, r1
   30778:	add	r3, pc, r3
   3077c:	bl	14f3c <__assert_fail@plt>
   30780:	ldr	r0, [pc, #68]	; 307cc <flatcc_builder_table_add_offset@@Base+0x19c>
   30784:	ldr	r1, [pc, #68]	; 307d0 <flatcc_builder_table_add_offset@@Base+0x1a0>
   30788:	ldr	r3, [pc, #68]	; 307d4 <flatcc_builder_table_add_offset@@Base+0x1a4>
   3078c:	movw	r2, #1812	; 0x714
   30790:	add	r0, pc, r0
   30794:	add	r1, pc, r1
   30798:	add	r3, pc, r3
   3079c:	bl	14f3c <__assert_fail@plt>
   307a0:	ldr	r0, [pc, #48]	; 307d8 <flatcc_builder_table_add_offset@@Base+0x1a8>
   307a4:	ldr	r1, [pc, #48]	; 307dc <flatcc_builder_table_add_offset@@Base+0x1ac>
   307a8:	ldr	r3, [pc, #48]	; 307e0 <flatcc_builder_table_add_offset@@Base+0x1b0>
   307ac:	movw	r2, #1819	; 0x71b
   307b0:	add	r0, pc, r0
   307b4:	add	r1, pc, r1
   307b8:	add	r3, pc, r3
   307bc:	bl	14f3c <__assert_fail@plt>
   307c0:	andeq	r8, r1, sl, asr #17
   307c4:	muleq	r1, sl, r0
   307c8:			; <UNDEFINED> instruction: 0x00018fb6
   307cc:	andeq	r8, r1, lr, lsl pc
   307d0:	andeq	r8, r1, sl, ror r0
   307d4:	muleq	r1, r6, pc	; <UNPREDICTABLE>
   307d8:	andeq	r9, r1, fp, lsl r2
   307dc:	andeq	r8, r1, sl, asr r0
   307e0:	andeq	r8, r1, r6, ror pc

000307e4 <flatcc_builder_table_add@@Base>:
   307e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   307e8:	add	fp, sp, #24
   307ec:	sub	sp, sp, #8
   307f0:	mov	r4, r0
   307f4:	ldr	r0, [r0, #32]
   307f8:	ldrh	r0, [r0, #14]
   307fc:	cmp	r0, #3
   30800:	bne	30920 <flatcc_builder_table_add@@Base+0x13c>
   30804:	movw	r0, #32765	; 0x7ffd
   30808:	mov	r8, r1
   3080c:	cmp	r1, r0
   30810:	bcs	30940 <flatcc_builder_table_add@@Base+0x15c>
   30814:	ldrh	r0, [r4, #130]	; 0x82
   30818:	cmp	r0, r3
   3081c:	strhcc	r3, [r4, #130]	; 0x82
   30820:	ldr	r0, [r4, #4]
   30824:	add	r1, r0, r8, lsl #1
   30828:	ldrh	r1, [r1]
   3082c:	cmp	r1, #0
   30830:	bne	30960 <flatcc_builder_table_add@@Base+0x17c>
   30834:	ldr	r1, [r4, #12]
   30838:	movw	r7, #31153	; 0x79b1
   3083c:	ldr	r6, [r4, #20]
   30840:	ldr	r5, [r4, #24]
   30844:	movt	r7, #40503	; 0x9e37
   30848:	eor	r1, r1, r8
   3084c:	mul	r1, r1, r7
   30850:	eor	r1, r1, r2
   30854:	mul	r1, r1, r7
   30858:	str	r1, [r4, #12]
   3085c:	add	r1, r3, r6
   30860:	rsb	r3, r3, #0
   30864:	sub	r1, r1, #1
   30868:	and	r6, r1, r3
   3086c:	add	r1, r6, r2
   30870:	cmp	r1, r5
   30874:	str	r1, [r4, #20]
   30878:	bcc	308f0 <flatcc_builder_table_add@@Base+0x10c>
   3087c:	ldr	r2, [r4, #28]
   30880:	ldr	r0, [r4, #40]	; 0x28
   30884:	ldr	r7, [r4, #48]	; 0x30
   30888:	mov	r3, #1
   3088c:	str	r3, [sp]
   30890:	mov	r3, #1
   30894:	add	r1, r1, r2
   30898:	add	r2, r1, #1
   3089c:	add	r1, r4, #60	; 0x3c
   308a0:	blx	r7
   308a4:	mov	r1, r0
   308a8:	mov	r0, #0
   308ac:	cmp	r1, #0
   308b0:	beq	308bc <flatcc_builder_table_add@@Base+0xd8>
   308b4:	sub	sp, fp, #24
   308b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   308bc:	ldr	r0, [r4, #28]
   308c0:	ldr	r2, [r4, #60]	; 0x3c
   308c4:	ldr	r3, [r4, #64]	; 0x40
   308c8:	ldr	r1, [r4, #32]
   308cc:	add	r2, r2, r0
   308d0:	sub	r0, r3, r0
   308d4:	str	r2, [r4, #16]
   308d8:	movw	r2, #65532	; 0xfffc
   308dc:	cmp	r0, r2
   308e0:	movcs	r0, r2
   308e4:	str	r0, [r4, #24]
   308e8:	str	r2, [r1, #4]
   308ec:	ldr	r0, [r4, #4]
   308f0:	uxth	r1, r8
   308f4:	add	r2, r6, #4
   308f8:	add	r0, r0, r1, lsl #1
   308fc:	strh	r2, [r0]
   30900:	ldrh	r0, [r4, #8]
   30904:	cmp	r0, r1
   30908:	addls	r0, r8, #1
   3090c:	strhls	r0, [r4, #8]
   30910:	ldr	r0, [r4, #16]
   30914:	add	r0, r0, r6
   30918:	sub	sp, fp, #24
   3091c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30920:	ldr	r0, [pc, #88]	; 30980 <flatcc_builder_table_add@@Base+0x19c>
   30924:	ldr	r1, [pc, #88]	; 30984 <flatcc_builder_table_add@@Base+0x1a0>
   30928:	ldr	r3, [pc, #88]	; 30988 <flatcc_builder_table_add@@Base+0x1a4>
   3092c:	movw	r2, #1773	; 0x6ed
   30930:	add	r0, pc, r0
   30934:	add	r1, pc, r1
   30938:	add	r3, pc, r3
   3093c:	bl	14f3c <__assert_fail@plt>
   30940:	ldr	r0, [pc, #68]	; 3098c <flatcc_builder_table_add@@Base+0x1a8>
   30944:	ldr	r1, [pc, #68]	; 30990 <flatcc_builder_table_add@@Base+0x1ac>
   30948:	ldr	r3, [pc, #68]	; 30994 <flatcc_builder_table_add@@Base+0x1b0>
   3094c:	movw	r2, #1774	; 0x6ee
   30950:	add	r0, pc, r0
   30954:	add	r1, pc, r1
   30958:	add	r3, pc, r3
   3095c:	bl	14f3c <__assert_fail@plt>
   30960:	ldr	r0, [pc, #48]	; 30998 <flatcc_builder_table_add@@Base+0x1b4>
   30964:	ldr	r1, [pc, #48]	; 3099c <flatcc_builder_table_add@@Base+0x1b8>
   30968:	ldr	r3, [pc, #48]	; 309a0 <flatcc_builder_table_add@@Base+0x1bc>
   3096c:	movw	r2, #1784	; 0x6f8
   30970:	add	r0, pc, r0
   30974:	add	r1, pc, r1
   30978:	add	r3, pc, r3
   3097c:	bl	14f3c <__assert_fail@plt>
   30980:	andeq	r8, r1, sl, lsl #14
   30984:	ldrdeq	r7, [r1], -sl
   30988:	andeq	r8, r1, ip, lsr #26
   3098c:	andeq	r8, r1, lr, asr sp
   30990:			; <UNDEFINED> instruction: 0x00017eba
   30994:	andeq	r8, r1, ip, lsl #26
   30998:	andeq	r9, r1, fp, asr r0
   3099c:	muleq	r1, sl, lr
   309a0:	andeq	r8, r1, ip, ror #25

000309a4 <flatcc_builder_table_add_union_vector@@Base>:
   309a4:	push	{r4, r5, r6, r7, fp, lr}
   309a8:	add	fp, sp, #16
   309ac:	mov	r6, r0
   309b0:	ldr	r0, [r0, #32]
   309b4:	ldrh	r0, [r0, #14]
   309b8:	cmp	r0, #3
   309bc:	bne	30a24 <flatcc_builder_table_add_union_vector@@Base+0x80>
   309c0:	clz	r0, r3
   309c4:	mov	r5, r1
   309c8:	clz	r1, r2
   309cc:	mov	r4, r3
   309d0:	mov	r7, r2
   309d4:	lsr	r0, r0, #5
   309d8:	lsr	r1, r1, #5
   309dc:	cmp	r1, r0
   309e0:	bne	30a44 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   309e4:	cmp	r7, #0
   309e8:	beq	30a1c <flatcc_builder_table_add_union_vector@@Base+0x78>
   309ec:	sub	r1, r5, #1
   309f0:	mov	r0, r6
   309f4:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   309f8:	cmp	r0, #0
   309fc:	beq	30a64 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   30a00:	str	r7, [r0]
   30a04:	mov	r0, r6
   30a08:	mov	r1, r5
   30a0c:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   30a10:	cmp	r0, #0
   30a14:	beq	30a84 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   30a18:	str	r4, [r0]
   30a1c:	mov	r0, #0
   30a20:	pop	{r4, r5, r6, r7, fp, pc}
   30a24:	ldr	r0, [pc, #120]	; 30aa4 <flatcc_builder_table_add_union_vector@@Base+0x100>
   30a28:	ldr	r1, [pc, #120]	; 30aa8 <flatcc_builder_table_add_union_vector@@Base+0x104>
   30a2c:	ldr	r3, [pc, #120]	; 30aac <flatcc_builder_table_add_union_vector@@Base+0x108>
   30a30:	mov	r2, #1536	; 0x600
   30a34:	add	r0, pc, r0
   30a38:	add	r1, pc, r1
   30a3c:	add	r3, pc, r3
   30a40:	bl	14f3c <__assert_fail@plt>
   30a44:	ldr	r0, [pc, #100]	; 30ab0 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   30a48:	ldr	r1, [pc, #100]	; 30ab4 <flatcc_builder_table_add_union_vector@@Base+0x110>
   30a4c:	ldr	r3, [pc, #100]	; 30ab8 <flatcc_builder_table_add_union_vector@@Base+0x114>
   30a50:	movw	r2, #1537	; 0x601
   30a54:	add	r0, pc, r0
   30a58:	add	r1, pc, r1
   30a5c:	add	r3, pc, r3
   30a60:	bl	14f3c <__assert_fail@plt>
   30a64:	ldr	r0, [pc, #80]	; 30abc <flatcc_builder_table_add_union_vector@@Base+0x118>
   30a68:	ldr	r1, [pc, #80]	; 30ac0 <flatcc_builder_table_add_union_vector@@Base+0x11c>
   30a6c:	ldr	r3, [pc, #80]	; 30ac4 <flatcc_builder_table_add_union_vector@@Base+0x120>
   30a70:	movw	r2, #1540	; 0x604
   30a74:	add	r0, pc, r0
   30a78:	add	r1, pc, r1
   30a7c:	add	r3, pc, r3
   30a80:	bl	14f3c <__assert_fail@plt>
   30a84:	ldr	r0, [pc, #60]	; 30ac8 <flatcc_builder_table_add_union_vector@@Base+0x124>
   30a88:	ldr	r1, [pc, #60]	; 30acc <flatcc_builder_table_add_union_vector@@Base+0x128>
   30a8c:	ldr	r3, [pc, #60]	; 30ad0 <flatcc_builder_table_add_union_vector@@Base+0x12c>
   30a90:	movw	r2, #1544	; 0x608
   30a94:	add	r0, pc, r0
   30a98:	add	r1, pc, r1
   30a9c:	add	r3, pc, r3
   30aa0:	bl	14f3c <__assert_fail@plt>
   30aa4:	andeq	r8, r1, r6, lsl #12
   30aa8:	ldrdeq	r7, [r1], -r6
   30aac:	andeq	r8, r1, r0, lsl #19
   30ab0:	andeq	r8, r1, fp, asr #19
   30ab4:			; <UNDEFINED> instruction: 0x00017db6
   30ab8:	andeq	r8, r1, r0, ror #18
   30abc:	andeq	r8, r1, r2, lsr r9
   30ac0:	muleq	r1, r6, sp
   30ac4:	andeq	r8, r1, r0, asr #18
   30ac8:	andeq	r8, r1, r2, lsl r9
   30acc:	andeq	r7, r1, r6, ror sp
   30ad0:	andeq	r8, r1, r0, lsr #18

00030ad4 <flatcc_builder_create_union_vector@@Base>:
   30ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ad8:	add	fp, sp, #28
   30adc:	sub	sp, sp, #12
   30ae0:	mov	r7, #0
   30ae4:	mov	r4, r1
   30ae8:	mov	r5, r0
   30aec:	mov	sl, r3
   30af0:	mov	r9, r2
   30af4:	mov	r6, #4
   30af8:	str	r7, [r0]
   30afc:	str	r7, [r0, #4]
   30b00:	mov	r0, r1
   30b04:	mov	r1, #4
   30b08:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   30b0c:	cmp	r0, #0
   30b10:	beq	30b1c <flatcc_builder_create_union_vector@@Base+0x48>
   30b14:	sub	sp, fp, #28
   30b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30b1c:	ldr	r0, [r4, #32]
   30b20:	mov	r1, #5
   30b24:	str	r6, [r0, #16]
   30b28:	ldr	r0, [r4, #32]
   30b2c:	str	r7, [r0, #20]
   30b30:	ldr	r0, [r4, #32]
   30b34:	strh	r1, [r0, #14]
   30b38:	ldr	r1, [r4, #28]
   30b3c:	ldr	r2, [r4, #60]	; 0x3c
   30b40:	ldr	r3, [r4, #64]	; 0x40
   30b44:	add	r2, r2, r1
   30b48:	sub	r1, r3, r1
   30b4c:	str	r2, [r4, #16]
   30b50:	mvn	r2, #3
   30b54:	cmn	r1, #4
   30b58:	movcs	r1, r2
   30b5c:	str	r1, [r4, #24]
   30b60:	str	r2, [r0, #4]
   30b64:	ldr	r1, [r0, #20]
   30b68:	adds	r1, r1, sl
   30b6c:	cmpcc	r1, #1073741824	; 0x40000000
   30b70:	bcc	30b94 <flatcc_builder_create_union_vector@@Base+0xc0>
   30b74:	ldr	r0, [pc, #556]	; 30da8 <flatcc_builder_create_union_vector@@Base+0x2d4>
   30b78:	ldr	r1, [pc, #556]	; 30dac <flatcc_builder_create_union_vector@@Base+0x2d8>
   30b7c:	ldr	r3, [pc, #556]	; 30db0 <flatcc_builder_create_union_vector@@Base+0x2dc>
   30b80:	mov	r2, #892	; 0x37c
   30b84:	add	r0, pc, r0
   30b88:	add	r1, pc, r1
   30b8c:	add	r3, pc, r3
   30b90:	bl	14f3c <__assert_fail@plt>
   30b94:	str	r1, [r0, #20]
   30b98:	ldr	r7, [r4, #20]
   30b9c:	ldr	r0, [r4, #24]
   30ba0:	add	r1, r7, sl, lsl #2
   30ba4:	cmp	r1, r0
   30ba8:	str	r1, [r4, #20]
   30bac:	bcs	30bc0 <flatcc_builder_create_union_vector@@Base+0xec>
   30bb0:	ldr	r1, [r4, #16]
   30bb4:	adds	r2, r1, r7
   30bb8:	bne	30c28 <flatcc_builder_create_union_vector@@Base+0x154>
   30bbc:	b	30b14 <flatcc_builder_create_union_vector@@Base+0x40>
   30bc0:	ldr	r2, [r4, #28]
   30bc4:	ldr	r0, [r4, #40]	; 0x28
   30bc8:	ldr	r6, [r4, #48]	; 0x30
   30bcc:	mov	r3, #1
   30bd0:	str	r3, [sp]
   30bd4:	mov	r3, #1
   30bd8:	add	r1, r1, r2
   30bdc:	add	r2, r1, #1
   30be0:	add	r1, r4, #60	; 0x3c
   30be4:	blx	r6
   30be8:	cmp	r0, #0
   30bec:	bne	30b14 <flatcc_builder_create_union_vector@@Base+0x40>
   30bf0:	ldr	r0, [r4, #28]
   30bf4:	ldr	r1, [r4, #60]	; 0x3c
   30bf8:	ldr	r3, [r4, #64]	; 0x40
   30bfc:	ldr	r2, [r4, #32]
   30c00:	add	r1, r1, r0
   30c04:	sub	r0, r3, r0
   30c08:	mvn	r3, #3
   30c0c:	cmn	r0, #4
   30c10:	str	r1, [r4, #16]
   30c14:	movcs	r0, r3
   30c18:	str	r0, [r4, #24]
   30c1c:	str	r3, [r2, #4]
   30c20:	adds	r2, r1, r7
   30c24:	beq	30b14 <flatcc_builder_create_union_vector@@Base+0x40>
   30c28:	ldr	r7, [r4, #20]
   30c2c:	add	r2, r7, sl
   30c30:	cmp	r2, r0
   30c34:	str	r2, [r4, #20]
   30c38:	bcc	30c9c <flatcc_builder_create_union_vector@@Base+0x1c8>
   30c3c:	ldr	r1, [r4, #28]
   30c40:	ldr	r0, [r4, #40]	; 0x28
   30c44:	ldr	r6, [r4, #48]	; 0x30
   30c48:	mov	r3, #1
   30c4c:	str	r3, [sp]
   30c50:	mov	r3, #1
   30c54:	add	r1, r2, r1
   30c58:	add	r2, r1, #1
   30c5c:	add	r1, r4, #60	; 0x3c
   30c60:	blx	r6
   30c64:	cmp	r0, #0
   30c68:	bne	30b14 <flatcc_builder_create_union_vector@@Base+0x40>
   30c6c:	ldr	r0, [r4, #28]
   30c70:	ldr	r1, [r4, #60]	; 0x3c
   30c74:	ldr	r3, [r4, #64]	; 0x40
   30c78:	ldr	r2, [r4, #32]
   30c7c:	add	r1, r1, r0
   30c80:	sub	r0, r3, r0
   30c84:	mvn	r3, #3
   30c88:	cmn	r0, #4
   30c8c:	str	r1, [r4, #16]
   30c90:	movcs	r0, r3
   30c94:	str	r0, [r4, #24]
   30c98:	str	r3, [r2, #4]
   30c9c:	adds	r8, r1, r7
   30ca0:	beq	30b14 <flatcc_builder_create_union_vector@@Base+0x40>
   30ca4:	cmp	sl, #0
   30ca8:	beq	30cd8 <flatcc_builder_create_union_vector@@Base+0x204>
   30cac:	add	r0, r9, #4
   30cb0:	mov	r2, sl
   30cb4:	mov	r3, r1
   30cb8:	mov	r7, r8
   30cbc:	ldrb	r6, [r0, #-4]
   30cc0:	subs	r2, r2, #1
   30cc4:	strb	r6, [r7], #1
   30cc8:	ldr	r6, [r0]
   30ccc:	add	r0, r0, #8
   30cd0:	str	r6, [r3], #4
   30cd4:	bne	30cbc <flatcc_builder_create_union_vector@@Base+0x1e8>
   30cd8:	mov	r0, r4
   30cdc:	mov	r2, sl
   30ce0:	mov	r3, r8
   30ce4:	bl	301cc <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30ce8:	mov	r7, r0
   30cec:	mov	r9, #0
   30cf0:	cmp	r0, #0
   30cf4:	beq	30d20 <flatcc_builder_create_union_vector@@Base+0x24c>
   30cf8:	mvn	r0, #0
   30cfc:	mov	r1, #1
   30d00:	mov	r2, sl
   30d04:	mov	r3, #1
   30d08:	str	r1, [sp]
   30d0c:	str	r0, [sp, #4]
   30d10:	mov	r0, r4
   30d14:	mov	r1, r8
   30d18:	bl	2ff34 <flatcc_builder_create_vector@@Base>
   30d1c:	b	30d24 <flatcc_builder_create_union_vector@@Base+0x250>
   30d20:	mov	r0, #0
   30d24:	orr	r1, r9, r7
   30d28:	stm	r5, {r0, r1}
   30d2c:	mov	r1, #0
   30d30:	ldr	r0, [r4, #16]
   30d34:	ldr	r2, [r4, #20]
   30d38:	bl	14ee8 <memset@plt>
   30d3c:	ldr	r0, [r4, #32]
   30d40:	ldr	r1, [r4, #60]	; 0x3c
   30d44:	ldr	r2, [r4, #64]	; 0x40
   30d48:	ldr	r3, [r0, #8]
   30d4c:	str	r3, [r4, #20]
   30d50:	ldr	r3, [r0]
   30d54:	str	r3, [r4, #28]
   30d58:	add	r1, r1, r3
   30d5c:	ldr	r7, [r0, #4]
   30d60:	str	r1, [r4, #16]
   30d64:	sub	r1, r2, r3
   30d68:	cmp	r1, r7
   30d6c:	movhi	r1, r7
   30d70:	str	r1, [r4, #24]
   30d74:	ldrh	r1, [r4, #130]	; 0x82
   30d78:	ldrh	r2, [r4, #128]	; 0x80
   30d7c:	cmp	r2, r1
   30d80:	strhcc	r1, [r4, #128]	; 0x80
   30d84:	ldrh	r1, [r0, #12]
   30d88:	sub	r0, r0, #36	; 0x24
   30d8c:	str	r0, [r4, #32]
   30d90:	strh	r1, [r4, #130]	; 0x82
   30d94:	ldr	r0, [r4, #156]	; 0x9c
   30d98:	sub	r0, r0, #1
   30d9c:	str	r0, [r4, #156]	; 0x9c
   30da0:	sub	sp, fp, #28
   30da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30da8:	andeq	r8, r1, r0, asr sp
   30dac:	andeq	r7, r1, r6, lsl #25
   30db0:	andeq	r8, r1, r3, ror #26

00030db4 <flatcc_builder_create_union_vector_direct@@Base>:
   30db4:	push	{r4, r5, r6, r7, fp, lr}
   30db8:	add	fp, sp, #16
   30dbc:	sub	sp, sp, #8
   30dc0:	ldr	r7, [fp, #8]
   30dc4:	mov	r5, r2
   30dc8:	mov	r4, r0
   30dcc:	mov	r0, #0
   30dd0:	mov	r6, r1
   30dd4:	str	r0, [r4]
   30dd8:	str	r0, [r4, #4]
   30ddc:	mov	r0, r1
   30de0:	mov	r1, r3
   30de4:	mov	r3, r5
   30de8:	mov	r2, r7
   30dec:	bl	301cc <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30df0:	cmp	r0, #0
   30df4:	str	r0, [r4, #4]
   30df8:	beq	30e24 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   30dfc:	mvn	r0, #0
   30e00:	mov	r1, #1
   30e04:	mov	r2, r7
   30e08:	mov	r3, #1
   30e0c:	str	r1, [sp]
   30e10:	str	r0, [sp, #4]
   30e14:	mov	r0, r6
   30e18:	mov	r1, r5
   30e1c:	bl	2ff34 <flatcc_builder_create_vector@@Base>
   30e20:	str	r0, [r4]
   30e24:	sub	sp, fp, #16
   30e28:	pop	{r4, r5, r6, r7, fp, pc}

00030e2c <flatcc_builder_start_union_vector@@Base>:
   30e2c:	push	{r4, sl, fp, lr}
   30e30:	add	fp, sp, #8
   30e34:	mov	r1, #4
   30e38:	mov	r4, r0
   30e3c:	bl	2de28 <flatcc_builder_start_buffer@@Base+0xc0>
   30e40:	mov	r1, r0
   30e44:	mvn	r0, #0
   30e48:	cmp	r1, #0
   30e4c:	popne	{r4, sl, fp, pc}
   30e50:	ldr	r0, [r4, #32]
   30e54:	mov	r1, #8
   30e58:	mov	r2, #7
   30e5c:	str	r1, [r0, #16]
   30e60:	mov	r0, #0
   30e64:	ldr	r1, [r4, #32]
   30e68:	str	r0, [r1, #20]
   30e6c:	ldr	r1, [r4, #32]
   30e70:	strh	r2, [r1, #14]
   30e74:	ldr	r2, [r4, #28]
   30e78:	ldr	r3, [r4, #60]	; 0x3c
   30e7c:	ldr	ip, [r4, #64]	; 0x40
   30e80:	add	r3, r3, r2
   30e84:	sub	r2, ip, r2
   30e88:	str	r3, [r4, #16]
   30e8c:	mvn	r3, #3
   30e90:	cmn	r2, #4
   30e94:	movcs	r2, r3
   30e98:	str	r2, [r4, #24]
   30e9c:	str	r3, [r1, #4]
   30ea0:	pop	{r4, sl, fp, pc}

00030ea4 <flatcc_builder_end_union_vector@@Base>:
   30ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ea8:	add	fp, sp, #28
   30eac:	sub	sp, sp, #12
   30eb0:	mov	sl, r0
   30eb4:	mov	r0, #0
   30eb8:	mov	r4, r1
   30ebc:	str	r0, [sl]
   30ec0:	str	r0, [sl, #4]
   30ec4:	ldr	r0, [r1, #32]
   30ec8:	ldrh	r1, [r0, #14]
   30ecc:	cmp	r1, #7
   30ed0:	bne	31074 <flatcc_builder_end_union_vector@@Base+0x1d0>
   30ed4:	ldr	r6, [r0, #20]
   30ed8:	ldr	r7, [r4, #20]
   30edc:	ldr	r2, [r4, #24]
   30ee0:	add	r0, r6, r6, lsl #2
   30ee4:	add	r1, r7, r0
   30ee8:	cmp	r1, r2
   30eec:	str	r1, [r4, #20]
   30ef0:	bcs	30f04 <flatcc_builder_end_union_vector@@Base+0x60>
   30ef4:	ldr	r0, [r4, #16]
   30ef8:	adds	r1, r0, r7
   30efc:	bne	30f6c <flatcc_builder_end_union_vector@@Base+0xc8>
   30f00:	b	3106c <flatcc_builder_end_union_vector@@Base+0x1c8>
   30f04:	ldr	r2, [r4, #28]
   30f08:	ldr	r0, [r4, #40]	; 0x28
   30f0c:	ldr	r5, [r4, #48]	; 0x30
   30f10:	mov	r3, #1
   30f14:	str	r3, [sp]
   30f18:	mov	r3, #1
   30f1c:	add	r1, r1, r2
   30f20:	add	r2, r1, #1
   30f24:	add	r1, r4, #60	; 0x3c
   30f28:	blx	r5
   30f2c:	cmp	r0, #0
   30f30:	bne	3106c <flatcc_builder_end_union_vector@@Base+0x1c8>
   30f34:	ldr	r1, [r4, #28]
   30f38:	ldr	r0, [r4, #60]	; 0x3c
   30f3c:	ldr	r3, [r4, #64]	; 0x40
   30f40:	ldr	r2, [r4, #32]
   30f44:	add	r0, r0, r1
   30f48:	sub	r1, r3, r1
   30f4c:	mvn	r3, #3
   30f50:	cmn	r1, #4
   30f54:	str	r0, [r4, #16]
   30f58:	movcs	r1, r3
   30f5c:	str	r1, [r4, #24]
   30f60:	str	r3, [r2, #4]
   30f64:	adds	r1, r0, r7
   30f68:	beq	3106c <flatcc_builder_end_union_vector@@Base+0x1c8>
   30f6c:	add	r8, r1, r6, lsl #2
   30f70:	cmp	r6, #0
   30f74:	beq	30fa4 <flatcc_builder_end_union_vector@@Base+0x100>
   30f78:	add	r0, r0, #4
   30f7c:	mov	r2, r6
   30f80:	mov	r3, r1
   30f84:	mov	r7, r8
   30f88:	ldrb	r5, [r0, #-4]
   30f8c:	subs	r2, r2, #1
   30f90:	strb	r5, [r7], #1
   30f94:	ldr	r5, [r0]
   30f98:	add	r0, r0, #8
   30f9c:	str	r5, [r3], #4
   30fa0:	bne	30f88 <flatcc_builder_end_union_vector@@Base+0xe4>
   30fa4:	mov	r0, r4
   30fa8:	mov	r2, r6
   30fac:	mov	r3, r8
   30fb0:	bl	301cc <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30fb4:	mov	r7, r0
   30fb8:	mov	r9, #0
   30fbc:	cmp	r0, #0
   30fc0:	beq	30fec <flatcc_builder_end_union_vector@@Base+0x148>
   30fc4:	mvn	r0, #0
   30fc8:	mov	r1, #1
   30fcc:	mov	r2, r6
   30fd0:	mov	r3, #1
   30fd4:	str	r1, [sp]
   30fd8:	str	r0, [sp, #4]
   30fdc:	mov	r0, r4
   30fe0:	mov	r1, r8
   30fe4:	bl	2ff34 <flatcc_builder_create_vector@@Base>
   30fe8:	b	30ff0 <flatcc_builder_end_union_vector@@Base+0x14c>
   30fec:	mov	r0, #0
   30ff0:	orr	r1, r9, r7
   30ff4:	stm	sl, {r0, r1}
   30ff8:	mov	r1, #0
   30ffc:	ldr	r0, [r4, #16]
   31000:	ldr	r2, [r4, #20]
   31004:	bl	14ee8 <memset@plt>
   31008:	ldr	r0, [r4, #32]
   3100c:	ldr	r1, [r4, #60]	; 0x3c
   31010:	ldr	r2, [r4, #64]	; 0x40
   31014:	ldr	r3, [r0, #8]
   31018:	str	r3, [r4, #20]
   3101c:	ldr	r3, [r0]
   31020:	str	r3, [r4, #28]
   31024:	add	r1, r1, r3
   31028:	ldr	r7, [r0, #4]
   3102c:	str	r1, [r4, #16]
   31030:	sub	r1, r2, r3
   31034:	cmp	r1, r7
   31038:	movhi	r1, r7
   3103c:	str	r1, [r4, #24]
   31040:	ldrh	r1, [r4, #130]	; 0x82
   31044:	ldrh	r2, [r4, #128]	; 0x80
   31048:	cmp	r2, r1
   3104c:	strhcc	r1, [r4, #128]	; 0x80
   31050:	ldrh	r1, [r0, #12]
   31054:	sub	r0, r0, #36	; 0x24
   31058:	str	r0, [r4, #32]
   3105c:	strh	r1, [r4, #130]	; 0x82
   31060:	ldr	r0, [r4, #156]	; 0x9c
   31064:	sub	r0, r0, #1
   31068:	str	r0, [r4, #156]	; 0x9c
   3106c:	sub	sp, fp, #28
   31070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31074:	ldr	r0, [pc, #24]	; 31094 <flatcc_builder_end_union_vector@@Base+0x1f0>
   31078:	ldr	r1, [pc, #24]	; 31098 <flatcc_builder_end_union_vector@@Base+0x1f4>
   3107c:	ldr	r3, [pc, #24]	; 3109c <flatcc_builder_end_union_vector@@Base+0x1f8>
   31080:	movw	r2, #1617	; 0x651
   31084:	add	r0, pc, r0
   31088:	add	r1, pc, r1
   3108c:	add	r3, pc, r3
   31090:	bl	14f3c <__assert_fail@plt>
   31094:	andeq	r8, r1, r3, asr #7
   31098:	andeq	r7, r1, r6, lsl #15
   3109c:	andeq	r8, r1, sp, ror #7

000310a0 <flatcc_builder_union_vector_count@@Base>:
   310a0:	ldr	r0, [r0, #32]
   310a4:	ldr	r0, [r0, #20]
   310a8:	bx	lr

000310ac <flatcc_builder_union_vector_edit@@Base>:
   310ac:	ldr	r0, [r0, #16]
   310b0:	bx	lr

000310b4 <flatcc_builder_extend_union_vector@@Base>:
   310b4:	push	{r4, r5, fp, lr}
   310b8:	add	fp, sp, #8
   310bc:	sub	sp, sp, #8
   310c0:	mov	r4, r0
   310c4:	ldr	r0, [r0, #32]
   310c8:	ldr	r2, [r0, #20]
   310cc:	adds	r2, r2, r1
   310d0:	cmpcc	r2, #536870912	; 0x20000000
   310d4:	bcc	310f8 <flatcc_builder_extend_union_vector@@Base+0x44>
   310d8:	ldr	r0, [pc, #184]	; 31198 <flatcc_builder_extend_union_vector@@Base+0xe4>
   310dc:	ldr	r1, [pc, #184]	; 3119c <flatcc_builder_extend_union_vector@@Base+0xe8>
   310e0:	ldr	r3, [pc, #184]	; 311a0 <flatcc_builder_extend_union_vector@@Base+0xec>
   310e4:	mov	r2, #892	; 0x37c
   310e8:	add	r0, pc, r0
   310ec:	add	r1, pc, r1
   310f0:	add	r3, pc, r3
   310f4:	bl	14f3c <__assert_fail@plt>
   310f8:	str	r2, [r0, #20]
   310fc:	ldr	r5, [r4, #20]
   31100:	ldr	r0, [r4, #24]
   31104:	add	r1, r5, r1, lsl #3
   31108:	cmp	r1, r0
   3110c:	str	r1, [r4, #20]
   31110:	bcs	3111c <flatcc_builder_extend_union_vector@@Base+0x68>
   31114:	ldr	r0, [r4, #16]
   31118:	b	3118c <flatcc_builder_extend_union_vector@@Base+0xd8>
   3111c:	ldr	r2, [r4, #28]
   31120:	ldr	r0, [r4, #40]	; 0x28
   31124:	ldr	ip, [r4, #48]	; 0x30
   31128:	mov	r3, #1
   3112c:	str	r3, [sp]
   31130:	mov	r3, #1
   31134:	add	r1, r1, r2
   31138:	add	r2, r1, #1
   3113c:	add	r1, r4, #60	; 0x3c
   31140:	blx	ip
   31144:	mov	r1, r0
   31148:	mov	r0, #0
   3114c:	cmp	r1, #0
   31150:	beq	3115c <flatcc_builder_extend_union_vector@@Base+0xa8>
   31154:	sub	sp, fp, #8
   31158:	pop	{r4, r5, fp, pc}
   3115c:	ldr	r1, [r4, #28]
   31160:	ldr	r0, [r4, #60]	; 0x3c
   31164:	ldr	r3, [r4, #64]	; 0x40
   31168:	ldr	r2, [r4, #32]
   3116c:	add	r0, r0, r1
   31170:	sub	r1, r3, r1
   31174:	mvn	r3, #3
   31178:	cmn	r1, #4
   3117c:	str	r0, [r4, #16]
   31180:	movcs	r1, r3
   31184:	str	r1, [r4, #24]
   31188:	str	r3, [r2, #4]
   3118c:	add	r0, r0, r5
   31190:	sub	sp, fp, #8
   31194:	pop	{r4, r5, fp, pc}
   31198:	andeq	r8, r1, ip, ror #15
   3119c:	andeq	r7, r1, r2, lsr #14
   311a0:	strdeq	r8, [r1], -pc	; <UNPREDICTABLE>

000311a4 <flatcc_builder_truncate_union_vector@@Base>:
   311a4:	push	{fp, lr}
   311a8:	mov	fp, sp
   311ac:	ldr	r2, [r0, #32]
   311b0:	ldrh	r3, [r2, #14]
   311b4:	cmp	r3, #7
   311b8:	bne	31200 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   311bc:	ldr	r3, [r2, #20]
   311c0:	cmp	r3, r1
   311c4:	bcc	31220 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   311c8:	sub	r3, r3, r1
   311cc:	str	r3, [r2, #20]
   311d0:	ldr	r2, [r0, #32]
   311d4:	ldr	r3, [r0, #20]
   311d8:	ldr	ip, [r0, #16]
   311dc:	ldr	r2, [r2, #16]
   311e0:	mls	r3, r2, r1, r3
   311e4:	mul	r2, r2, r1
   311e8:	mov	r1, #0
   311ec:	str	r3, [r0, #20]
   311f0:	add	r0, ip, r3
   311f4:	bl	14ee8 <memset@plt>
   311f8:	mov	r0, #0
   311fc:	pop	{fp, pc}
   31200:	ldr	r0, [pc, #56]	; 31240 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   31204:	ldr	r1, [pc, #56]	; 31244 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   31208:	ldr	r3, [pc, #56]	; 31248 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   3120c:	movw	r2, #1665	; 0x681
   31210:	add	r0, pc, r0
   31214:	add	r1, pc, r1
   31218:	add	r3, pc, r3
   3121c:	bl	14f3c <__assert_fail@plt>
   31220:	ldr	r0, [pc, #36]	; 3124c <flatcc_builder_truncate_union_vector@@Base+0xa8>
   31224:	ldr	r1, [pc, #36]	; 31250 <flatcc_builder_truncate_union_vector@@Base+0xac>
   31228:	ldr	r3, [pc, #36]	; 31254 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3122c:	movw	r2, #1666	; 0x682
   31230:	add	r0, pc, r0
   31234:	add	r1, pc, r1
   31238:	add	r3, pc, r3
   3123c:	bl	14f3c <__assert_fail@plt>
   31240:	andeq	r8, r1, r7, lsr r2
   31244:	strdeq	r7, [r1], -sl
   31248:			; <UNDEFINED> instruction: 0x000182b4
   3124c:	andeq	r7, r1, fp, ror ip
   31250:	ldrdeq	r7, [r1], -sl
   31254:	muleq	r1, r4, r2

00031258 <flatcc_builder_union_vector_push@@Base>:
   31258:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3125c:	add	fp, sp, #24
   31260:	sub	sp, sp, #8
   31264:	mov	r7, r0
   31268:	ldr	r0, [r0, #32]
   3126c:	mov	r9, r1
   31270:	ldrh	r1, [r0, #14]
   31274:	cmp	r1, #7
   31278:	bne	31334 <flatcc_builder_union_vector_push@@Base+0xdc>
   3127c:	ldr	r1, [r0, #20]
   31280:	mov	r6, #0
   31284:	cmn	r1, #-536870911	; 0xe0000001
   31288:	beq	31328 <flatcc_builder_union_vector_push@@Base+0xd0>
   3128c:	add	r1, r1, #1
   31290:	mov	r8, r2
   31294:	str	r1, [r0, #20]
   31298:	ldr	r4, [r7, #20]
   3129c:	ldr	r0, [r7, #24]
   312a0:	add	r1, r4, #8
   312a4:	cmp	r1, r0
   312a8:	str	r1, [r7, #20]
   312ac:	bcs	312b8 <flatcc_builder_union_vector_push@@Base+0x60>
   312b0:	ldr	r0, [r7, #16]
   312b4:	b	31318 <flatcc_builder_union_vector_push@@Base+0xc0>
   312b8:	ldr	r1, [r7, #28]
   312bc:	ldr	r0, [r7, #40]	; 0x28
   312c0:	ldr	r5, [r7, #48]	; 0x30
   312c4:	mov	r2, #1
   312c8:	mov	r3, #1
   312cc:	str	r2, [sp]
   312d0:	add	r1, r4, r1
   312d4:	add	r2, r1, #9
   312d8:	add	r1, r7, #60	; 0x3c
   312dc:	blx	r5
   312e0:	cmp	r0, #0
   312e4:	bne	31328 <flatcc_builder_union_vector_push@@Base+0xd0>
   312e8:	ldr	r1, [r7, #28]
   312ec:	ldr	r0, [r7, #60]	; 0x3c
   312f0:	ldr	r3, [r7, #64]	; 0x40
   312f4:	ldr	r2, [r7, #32]
   312f8:	add	r0, r0, r1
   312fc:	sub	r1, r3, r1
   31300:	mvn	r3, #3
   31304:	cmn	r1, #4
   31308:	str	r0, [r7, #16]
   3130c:	movcs	r1, r3
   31310:	str	r1, [r7, #24]
   31314:	str	r3, [r2, #4]
   31318:	adds	r0, r0, r4
   3131c:	movne	r6, r0
   31320:	strne	r9, [r0]
   31324:	strne	r8, [r0, #4]
   31328:	mov	r0, r6
   3132c:	sub	sp, fp, #24
   31330:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31334:	ldr	r0, [pc, #24]	; 31354 <flatcc_builder_union_vector_push@@Base+0xfc>
   31338:	ldr	r1, [pc, #24]	; 31358 <flatcc_builder_union_vector_push@@Base+0x100>
   3133c:	ldr	r3, [pc, #24]	; 3135c <flatcc_builder_union_vector_push@@Base+0x104>
   31340:	movw	r2, #1677	; 0x68d
   31344:	add	r0, pc, r0
   31348:	add	r1, pc, r1
   3134c:	add	r3, pc, r3
   31350:	bl	14f3c <__assert_fail@plt>
   31354:	andeq	r8, r1, r3, lsl #2
   31358:	andeq	r7, r1, r6, asr #9
   3135c:	andeq	r8, r1, r5, asr #3

00031360 <flatcc_builder_append_union_vector@@Base>:
   31360:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31364:	add	fp, sp, #24
   31368:	sub	sp, sp, #8
   3136c:	mov	r6, r0
   31370:	ldr	r0, [r0, #32]
   31374:	mov	r8, r1
   31378:	ldrh	r1, [r0, #14]
   3137c:	cmp	r1, #7
   31380:	bne	31470 <flatcc_builder_append_union_vector@@Base+0x110>
   31384:	ldr	r1, [r0, #20]
   31388:	mov	r5, r2
   3138c:	adds	r1, r1, r2
   31390:	cmpcc	r1, #536870912	; 0x20000000
   31394:	bcc	313b8 <flatcc_builder_append_union_vector@@Base+0x58>
   31398:	ldr	r0, [pc, #252]	; 3149c <flatcc_builder_append_union_vector@@Base+0x13c>
   3139c:	ldr	r1, [pc, #252]	; 314a0 <flatcc_builder_append_union_vector@@Base+0x140>
   313a0:	ldr	r3, [pc, #252]	; 314a4 <flatcc_builder_append_union_vector@@Base+0x144>
   313a4:	mov	r2, #892	; 0x37c
   313a8:	add	r0, pc, r0
   313ac:	add	r1, pc, r1
   313b0:	add	r3, pc, r3
   313b4:	bl	14f3c <__assert_fail@plt>
   313b8:	str	r1, [r0, #20]
   313bc:	ldr	r4, [r6, #20]
   313c0:	ldr	r0, [r6, #24]
   313c4:	add	r1, r4, r5, lsl #3
   313c8:	cmp	r1, r0
   313cc:	str	r1, [r6, #20]
   313d0:	bcs	313f4 <flatcc_builder_append_union_vector@@Base+0x94>
   313d4:	ldr	r0, [r6, #16]
   313d8:	adds	r7, r0, r4
   313dc:	beq	31460 <flatcc_builder_append_union_vector@@Base+0x100>
   313e0:	lsl	r2, r5, #3
   313e4:	mov	r0, r7
   313e8:	mov	r1, r8
   313ec:	bl	14e58 <memcpy@plt>
   313f0:	b	31464 <flatcc_builder_append_union_vector@@Base+0x104>
   313f4:	ldr	r2, [r6, #28]
   313f8:	ldr	r0, [r6, #40]	; 0x28
   313fc:	ldr	r7, [r6, #48]	; 0x30
   31400:	mov	r3, #1
   31404:	str	r3, [sp]
   31408:	mov	r3, #1
   3140c:	add	r1, r1, r2
   31410:	add	r2, r1, #1
   31414:	add	r1, r6, #60	; 0x3c
   31418:	blx	r7
   3141c:	mov	r7, #0
   31420:	cmp	r0, #0
   31424:	bne	31464 <flatcc_builder_append_union_vector@@Base+0x104>
   31428:	ldr	r1, [r6, #28]
   3142c:	ldr	r0, [r6, #60]	; 0x3c
   31430:	ldr	r3, [r6, #64]	; 0x40
   31434:	ldr	r2, [r6, #32]
   31438:	add	r0, r0, r1
   3143c:	sub	r1, r3, r1
   31440:	mvn	r3, #3
   31444:	cmn	r1, #4
   31448:	str	r0, [r6, #16]
   3144c:	movcs	r1, r3
   31450:	str	r1, [r6, #24]
   31454:	str	r3, [r2, #4]
   31458:	adds	r7, r0, r4
   3145c:	bne	313e0 <flatcc_builder_append_union_vector@@Base+0x80>
   31460:	mov	r7, #0
   31464:	mov	r0, r7
   31468:	sub	sp, fp, #24
   3146c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31470:	ldr	r0, [pc, #24]	; 31490 <flatcc_builder_append_union_vector@@Base+0x130>
   31474:	ldr	r1, [pc, #24]	; 31494 <flatcc_builder_append_union_vector@@Base+0x134>
   31478:	ldr	r3, [pc, #24]	; 31498 <flatcc_builder_append_union_vector@@Base+0x138>
   3147c:	movw	r2, #1692	; 0x69c
   31480:	add	r0, pc, r0
   31484:	add	r1, pc, r1
   31488:	add	r3, pc, r3
   3148c:	bl	14f3c <__assert_fail@plt>
   31490:	andeq	r7, r1, r7, asr #31
   31494:	andeq	r7, r1, sl, lsl #7
   31498:	strdeq	r8, [r1], -r6
   3149c:	andeq	r8, r1, ip, lsr #10
   314a0:	andeq	r7, r1, r2, ror #8
   314a4:	andeq	r8, r1, pc, lsr r5

000314a8 <flatcc_builder_create_string@@Base>:
   314a8:	push	{r4, r5, r6, sl, fp, lr}
   314ac:	add	fp, sp, #16
   314b0:	sub	sp, sp, #80	; 0x50
   314b4:	str	r2, [fp, #-20]	; 0xffffffec
   314b8:	mvn	r5, r2
   314bc:	mov	r6, r0
   314c0:	mov	r3, #1
   314c4:	cmp	r2, #0
   314c8:	ldr	ip, [r0, #136]	; 0x88
   314cc:	sub	r0, fp, #20
   314d0:	str	r0, [sp, #12]
   314d4:	mov	r0, #4
   314d8:	str	r0, [sp, #4]
   314dc:	str	r0, [sp, #16]
   314e0:	str	r3, [sp, #8]
   314e4:	add	r5, ip, r5
   314e8:	and	r5, r5, #3
   314ec:	add	r5, r5, #1
   314f0:	beq	3150c <flatcc_builder_create_string@@Base+0x64>
   314f4:	mov	r3, #2
   314f8:	add	r0, r2, #4
   314fc:	str	r1, [sp, #20]
   31500:	str	r2, [sp, #24]
   31504:	str	r3, [sp, #8]
   31508:	str	r0, [sp, #4]
   3150c:	add	r1, r0, r5
   31510:	add	lr, sp, #4
   31514:	str	r1, [sp, #4]
   31518:	add	r0, lr, r3, lsl #3
   3151c:	cmp	r1, #0
   31520:	ldr	r2, [pc, #132]	; 315ac <flatcc_builder_create_string@@Base+0x104>
   31524:	ldr	r2, [pc, r2]
   31528:	str	r2, [r0, #8]
   3152c:	add	r2, r3, #1
   31530:	str	r5, [r0, #12]
   31534:	str	r2, [sp, #8]
   31538:	ble	3158c <flatcc_builder_create_string@@Base+0xe4>
   3153c:	ldr	r0, [r6, #36]	; 0x24
   31540:	ldr	r4, [r6, #44]	; 0x2c
   31544:	sub	r5, ip, r1
   31548:	str	r1, [sp]
   3154c:	add	r1, lr, #8
   31550:	mov	r3, r5
   31554:	blx	r4
   31558:	cmp	r0, #0
   3155c:	streq	r5, [r6, #136]	; 0x88
   31560:	moveq	r0, r5
   31564:	subeq	sp, fp, #16
   31568:	popeq	{r4, r5, r6, sl, fp, pc}
   3156c:	ldr	r0, [pc, #72]	; 315bc <flatcc_builder_create_string@@Base+0x114>
   31570:	ldr	r1, [pc, #72]	; 315c0 <flatcc_builder_create_string@@Base+0x118>
   31574:	ldr	r3, [pc, #72]	; 315c4 <flatcc_builder_create_string@@Base+0x11c>
   31578:	movw	r2, #651	; 0x28b
   3157c:	add	r0, pc, r0
   31580:	add	r1, pc, r1
   31584:	add	r3, pc, r3
   31588:	bl	14f3c <__assert_fail@plt>
   3158c:	ldr	r0, [pc, #28]	; 315b0 <flatcc_builder_create_string@@Base+0x108>
   31590:	ldr	r1, [pc, #28]	; 315b4 <flatcc_builder_create_string@@Base+0x10c>
   31594:	ldr	r3, [pc, #28]	; 315b8 <flatcc_builder_create_string@@Base+0x110>
   31598:	movw	r2, #647	; 0x287
   3159c:	add	r0, pc, r0
   315a0:	add	r1, pc, r1
   315a4:	add	r3, pc, r3
   315a8:	bl	14f3c <__assert_fail@plt>
   315ac:	andeq	sl, r2, r0, asr #22
   315b0:	andeq	r8, r1, pc, lsr #8
   315b4:	andeq	r7, r1, lr, ror #4
   315b8:	andeq	r8, r1, r6, ror #5
   315bc:	andeq	r8, r1, pc, asr #8
   315c0:	andeq	r7, r1, lr, lsl #5
   315c4:	andeq	r8, r1, r6, lsl #6

000315c8 <flatcc_builder_create_string_str@@Base>:
   315c8:	push	{r4, r5, fp, lr}
   315cc:	add	fp, sp, #8
   315d0:	mov	r5, r0
   315d4:	mov	r0, r1
   315d8:	mov	r4, r1
   315dc:	bl	14ec4 <strlen@plt>
   315e0:	mov	r2, r0
   315e4:	mov	r0, r5
   315e8:	mov	r1, r4
   315ec:	pop	{r4, r5, fp, lr}
   315f0:	b	314a8 <flatcc_builder_create_string@@Base>

000315f4 <flatcc_builder_create_string_strn@@Base>:
   315f4:	push	{r4, r5, r6, sl, fp, lr}
   315f8:	add	fp, sp, #16
   315fc:	mov	r6, r0
   31600:	mov	r5, r1
   31604:	mov	r0, r1
   31608:	mov	r1, #0
   3160c:	mov	r4, r2
   31610:	bl	14f0c <memchr@plt>
   31614:	cmp	r0, #0
   31618:	mov	r1, r5
   3161c:	subne	r4, r0, r5
   31620:	mov	r0, r6
   31624:	mov	r2, r4
   31628:	pop	{r4, r5, r6, sl, fp, lr}
   3162c:	b	314a8 <flatcc_builder_create_string@@Base>

00031630 <flatcc_builder_end_string@@Base>:
   31630:	push	{r4, r5, fp, lr}
   31634:	add	fp, sp, #8
   31638:	mov	r4, r0
   3163c:	ldr	r0, [r0, #32]
   31640:	ldrh	r1, [r0, #14]
   31644:	cmp	r1, #6
   31648:	bne	316f0 <flatcc_builder_end_string@@Base+0xc0>
   3164c:	ldr	r2, [r0, #20]
   31650:	ldr	r0, [r4, #20]
   31654:	cmp	r2, r0
   31658:	bne	31710 <flatcc_builder_end_string@@Base+0xe0>
   3165c:	ldr	r1, [r4, #16]
   31660:	mov	r0, r4
   31664:	bl	314a8 <flatcc_builder_create_string@@Base>
   31668:	mov	r5, r0
   3166c:	cmp	r0, #0
   31670:	beq	316e8 <flatcc_builder_end_string@@Base+0xb8>
   31674:	ldr	r0, [r4, #16]
   31678:	ldr	r2, [r4, #20]
   3167c:	mov	r1, #0
   31680:	bl	14ee8 <memset@plt>
   31684:	ldr	r0, [r4, #32]
   31688:	ldr	r1, [r4, #60]	; 0x3c
   3168c:	ldr	ip, [r4, #64]	; 0x40
   31690:	ldr	r3, [r0, #8]
   31694:	str	r3, [r4, #20]
   31698:	ldr	r3, [r0]
   3169c:	str	r3, [r4, #28]
   316a0:	add	r1, r1, r3
   316a4:	ldr	r2, [r0, #4]
   316a8:	str	r1, [r4, #16]
   316ac:	sub	r1, ip, r3
   316b0:	cmp	r1, r2
   316b4:	movhi	r1, r2
   316b8:	str	r1, [r4, #24]
   316bc:	ldrh	r1, [r4, #130]	; 0x82
   316c0:	ldrh	r2, [r4, #128]	; 0x80
   316c4:	cmp	r2, r1
   316c8:	strhcc	r1, [r4, #128]	; 0x80
   316cc:	ldrh	r1, [r0, #12]
   316d0:	sub	r0, r0, #36	; 0x24
   316d4:	str	r0, [r4, #32]
   316d8:	strh	r1, [r4, #130]	; 0x82
   316dc:	ldr	r0, [r4, #156]	; 0x9c
   316e0:	sub	r0, r0, #1
   316e4:	str	r0, [r4, #156]	; 0x9c
   316e8:	mov	r0, r5
   316ec:	pop	{r4, r5, fp, pc}
   316f0:	ldr	r0, [pc, #56]	; 31730 <flatcc_builder_end_string@@Base+0x100>
   316f4:	ldr	r1, [pc, #56]	; 31734 <flatcc_builder_end_string@@Base+0x104>
   316f8:	ldr	r3, [pc, #56]	; 31738 <flatcc_builder_end_string@@Base+0x108>
   316fc:	movw	r2, #1732	; 0x6c4
   31700:	add	r0, pc, r0
   31704:	add	r1, pc, r1
   31708:	add	r3, pc, r3
   3170c:	bl	14f3c <__assert_fail@plt>
   31710:	ldr	r0, [pc, #36]	; 3173c <flatcc_builder_end_string@@Base+0x10c>
   31714:	ldr	r1, [pc, #36]	; 31740 <flatcc_builder_end_string@@Base+0x110>
   31718:	ldr	r3, [pc, #36]	; 31744 <flatcc_builder_end_string@@Base+0x114>
   3171c:	movw	r2, #1733	; 0x6c5
   31720:	add	r0, pc, r0
   31724:	add	r1, pc, r1
   31728:	add	r3, pc, r3
   3172c:	bl	14f3c <__assert_fail@plt>
   31730:	andeq	r7, r1, sl, asr #12
   31734:	andeq	r7, r1, sl, lsl #2
   31738:	strdeq	r7, [r1], -r5
   3173c:	andeq	r7, r1, r0, lsr #30
   31740:	andeq	r7, r1, sl, ror #1
   31744:	ldrdeq	r7, [r1], -r5

00031748 <flatcc_builder_string_edit@@Base>:
   31748:	ldr	r0, [r0, #16]
   3174c:	bx	lr

00031750 <flatcc_builder_string_len@@Base>:
   31750:	ldr	r0, [r0, #32]
   31754:	ldr	r0, [r0, #20]
   31758:	bx	lr

0003175c <flatcc_builder_table_edit@@Base>:
   3175c:	ldr	r2, [r0, #32]
   31760:	ldrh	r2, [r2, #14]
   31764:	cmp	r2, #3
   31768:	ldreq	r2, [r0, #16]
   3176c:	ldreq	r0, [r0, #20]
   31770:	addeq	r0, r2, r0
   31774:	subeq	r0, r0, r1
   31778:	bxeq	lr
   3177c:	push	{fp, lr}
   31780:	mov	fp, sp
   31784:	ldr	r0, [pc, #24]	; 317a4 <flatcc_builder_table_edit@@Base+0x48>
   31788:	ldr	r1, [pc, #24]	; 317a8 <flatcc_builder_table_edit@@Base+0x4c>
   3178c:	ldr	r3, [pc, #24]	; 317ac <flatcc_builder_table_edit@@Base+0x50>
   31790:	movw	r2, #1794	; 0x702
   31794:	add	r0, pc, r0
   31798:	add	r1, pc, r1
   3179c:	add	r3, pc, r3
   317a0:	bl	14f3c <__assert_fail@plt>
   317a4:	andeq	r7, r1, r6, lsr #17
   317a8:	andeq	r7, r1, r6, ror r0
   317ac:	andeq	r7, r1, r6, asr pc

000317b0 <flatcc_builder_table_add_copy@@Base>:
   317b0:	push	{r4, r5, r6, sl, fp, lr}
   317b4:	add	fp, sp, #16
   317b8:	mov	r4, r3
   317bc:	ldr	r3, [fp, #8]
   317c0:	mov	r5, r2
   317c4:	mov	r2, r4
   317c8:	bl	307e4 <flatcc_builder_table_add@@Base>
   317cc:	mov	r6, r0
   317d0:	cmp	r0, #0
   317d4:	beq	317e8 <flatcc_builder_table_add_copy@@Base+0x38>
   317d8:	mov	r0, r6
   317dc:	mov	r1, r5
   317e0:	mov	r2, r4
   317e4:	bl	14e58 <memcpy@plt>
   317e8:	mov	r0, r6
   317ec:	pop	{r4, r5, r6, sl, fp, pc}

000317f0 <flatcc_builder_push_buffer_alignment@@Base>:
   317f0:	ldrh	r1, [r0, #128]	; 0x80
   317f4:	mov	r2, #4
   317f8:	strh	r2, [r0, #128]	; 0x80
   317fc:	mov	r0, r1
   31800:	bx	lr

00031804 <flatcc_builder_pop_buffer_alignment@@Base>:
   31804:	ldrh	r2, [r0, #128]	; 0x80
   31808:	cmp	r2, r1
   3180c:	strhcc	r1, [r0, #128]	; 0x80
   31810:	bx	lr

00031814 <flatcc_builder_get_buffer_alignment@@Base>:
   31814:	ldrh	r0, [r0, #128]	; 0x80
   31818:	bx	lr

0003181c <flatcc_builder_set_vtable_clustering@@Base>:
   3181c:	clz	r1, r1
   31820:	lsr	r1, r1, #5
   31824:	str	r1, [r0, #180]	; 0xb4
   31828:	bx	lr

0003182c <flatcc_builder_set_block_align@@Base>:
   3182c:	strh	r1, [r0, #132]	; 0x84
   31830:	bx	lr

00031834 <flatcc_builder_get_level@@Base>:
   31834:	ldr	r0, [r0, #156]	; 0x9c
   31838:	bx	lr

0003183c <flatcc_builder_set_max_level@@Base>:
   3183c:	str	r1, [r0, #176]	; 0xb0
   31840:	ldr	r2, [r0, #160]	; 0xa0
   31844:	cmp	r2, r1
   31848:	strlt	r1, [r0, #160]	; 0xa0
   3184c:	bx	lr

00031850 <flatcc_builder_get_buffer_size@@Base>:
   31850:	ldr	r1, [r0, #136]	; 0x88
   31854:	ldr	r0, [r0, #140]	; 0x8c
   31858:	sub	r0, r0, r1
   3185c:	bx	lr

00031860 <flatcc_builder_get_buffer_start@@Base>:
   31860:	ldr	r0, [r0, #136]	; 0x88
   31864:	bx	lr

00031868 <flatcc_builder_get_buffer_end@@Base>:
   31868:	ldr	r0, [r0, #140]	; 0x8c
   3186c:	bx	lr

00031870 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31870:	str	r1, [r0, #172]	; 0xac
   31874:	bx	lr

00031878 <flatcc_builder_set_identifier@@Base>:
   31878:	ldr	r2, [pc, #20]	; 31894 <flatcc_builder_set_identifier@@Base+0x1c>
   3187c:	cmp	r1, #0
   31880:	ldr	r2, [pc, r2]
   31884:	movne	r2, r1
   31888:	ldr	r1, [r2]
   3188c:	str	r1, [r0, #168]	; 0xa8
   31890:	bx	lr
   31894:	andeq	sl, r2, r4, ror #15

00031898 <flatcc_builder_get_type@@Base>:
   31898:	ldr	r0, [r0, #32]
   3189c:	cmp	r0, #0
   318a0:	ldrhne	r0, [r0, #14]
   318a4:	moveq	r0, #0
   318a8:	bx	lr

000318ac <flatcc_builder_get_type_at@@Base>:
   318ac:	mov	r2, r0
   318b0:	cmp	r1, #1
   318b4:	mov	r0, #0
   318b8:	ldrge	r3, [r2, #156]	; 0x9c
   318bc:	cmpge	r3, r1
   318c0:	bge	318c8 <flatcc_builder_get_type_at@@Base+0x1c>
   318c4:	bx	lr
   318c8:	sub	r0, r1, r3
   318cc:	ldr	r1, [r2, #32]
   318d0:	add	r0, r0, r0, lsl #3
   318d4:	add	r0, r1, r0, lsl #2
   318d8:	ldrh	r0, [r0, #14]
   318dc:	bx	lr

000318e0 <flatcc_builder_get_direct_buffer@@Base>:
   318e0:	ldr	r2, [r0, #184]	; 0xb8
   318e4:	cmp	r2, #0
   318e8:	beq	318fc <flatcc_builder_get_direct_buffer@@Base+0x1c>
   318ec:	ldr	r2, [r0, #188]	; 0xbc
   318f0:	ldr	r3, [r0, #192]	; 0xc0
   318f4:	cmp	r2, r3
   318f8:	beq	31914 <flatcc_builder_get_direct_buffer@@Base+0x34>
   318fc:	cmp	r1, #0
   31900:	moveq	r0, #0
   31904:	bxeq	lr
   31908:	mov	r0, #0
   3190c:	str	r0, [r1]
   31910:	bx	lr
   31914:	cmp	r1, #0
   31918:	ldrne	r2, [r0, #212]	; 0xd4
   3191c:	strne	r2, [r1]
   31920:	ldr	r0, [r0, #196]	; 0xc4
   31924:	bx	lr

00031928 <flatcc_builder_copy_buffer@@Base>:
   31928:	push	{fp, lr}
   3192c:	mov	fp, sp
   31930:	ldr	r3, [r0, #184]	; 0xb8
   31934:	cmp	r3, #0
   31938:	beq	3196c <flatcc_builder_copy_buffer@@Base+0x44>
   3193c:	add	r0, r0, #188	; 0xbc
   31940:	bl	32078 <flatcc_emitter_copy_buffer@@Base>
   31944:	cmp	r0, #0
   31948:	popne	{fp, pc}
   3194c:	ldr	r0, [pc, #32]	; 31974 <flatcc_builder_copy_buffer@@Base+0x4c>
   31950:	ldr	r1, [pc, #32]	; 31978 <flatcc_builder_copy_buffer@@Base+0x50>
   31954:	ldr	r3, [pc, #32]	; 3197c <flatcc_builder_copy_buffer@@Base+0x54>
   31958:	movw	r2, #1926	; 0x786
   3195c:	add	r0, pc, r0
   31960:	add	r1, pc, r1
   31964:	add	r3, pc, r3
   31968:	bl	14f3c <__assert_fail@plt>
   3196c:	mov	r0, #0
   31970:	pop	{fp, pc}
   31974:	andeq	r3, r1, sl, lsr #29
   31978:	andeq	r6, r1, lr, lsr #29
   3197c:	andeq	r7, r1, r9, lsl lr

00031980 <flatcc_builder_finalize_buffer@@Base>:
   31980:	push	{r4, r5, r6, sl, fp, lr}
   31984:	add	fp, sp, #16
   31988:	mov	r5, r0
   3198c:	ldr	r0, [r0, #136]	; 0x88
   31990:	cmp	r1, #0
   31994:	ldr	r2, [r5, #140]	; 0x8c
   31998:	sub	r4, r2, r0
   3199c:	mov	r0, r4
   319a0:	strne	r4, [r1]
   319a4:	bl	14ea0 <malloc@plt>
   319a8:	cmp	r0, #0
   319ac:	beq	319fc <flatcc_builder_finalize_buffer@@Base+0x7c>
   319b0:	mov	r6, r0
   319b4:	ldr	r0, [r5, #184]	; 0xb8
   319b8:	cmp	r0, #0
   319bc:	beq	31a1c <flatcc_builder_finalize_buffer@@Base+0x9c>
   319c0:	add	r0, r5, #188	; 0xbc
   319c4:	mov	r1, r6
   319c8:	mov	r2, r4
   319cc:	bl	32078 <flatcc_emitter_copy_buffer@@Base>
   319d0:	cmp	r0, #0
   319d4:	movne	r0, r6
   319d8:	popne	{r4, r5, r6, sl, fp, pc}
   319dc:	ldr	r0, [pc, #88]	; 31a3c <flatcc_builder_finalize_buffer@@Base+0xbc>
   319e0:	ldr	r1, [pc, #88]	; 31a40 <flatcc_builder_finalize_buffer@@Base+0xc0>
   319e4:	ldr	r3, [pc, #88]	; 31a44 <flatcc_builder_finalize_buffer@@Base+0xc4>
   319e8:	movw	r2, #1926	; 0x786
   319ec:	add	r0, pc, r0
   319f0:	add	r1, pc, r1
   319f4:	add	r3, pc, r3
   319f8:	bl	14f3c <__assert_fail@plt>
   319fc:	ldr	r0, [pc, #80]	; 31a54 <flatcc_builder_finalize_buffer@@Base+0xd4>
   31a00:	ldr	r1, [pc, #80]	; 31a58 <flatcc_builder_finalize_buffer@@Base+0xd8>
   31a04:	ldr	r3, [pc, #80]	; 31a5c <flatcc_builder_finalize_buffer@@Base+0xdc>
   31a08:	movw	r2, #1944	; 0x798
   31a0c:	add	r0, pc, r0
   31a10:	add	r1, pc, r1
   31a14:	add	r3, pc, r3
   31a18:	bl	14f3c <__assert_fail@plt>
   31a1c:	ldr	r0, [pc, #36]	; 31a48 <flatcc_builder_finalize_buffer@@Base+0xc8>
   31a20:	ldr	r1, [pc, #36]	; 31a4c <flatcc_builder_finalize_buffer@@Base+0xcc>
   31a24:	ldr	r3, [pc, #36]	; 31a50 <flatcc_builder_finalize_buffer@@Base+0xd0>
   31a28:	movw	r2, #1948	; 0x79c
   31a2c:	add	r0, pc, r0
   31a30:	add	r1, pc, r1
   31a34:	add	r3, pc, r3
   31a38:	bl	14f3c <__assert_fail@plt>
   31a3c:	andeq	r3, r1, sl, lsl lr
   31a40:	andeq	r6, r1, lr, lsl lr
   31a44:	andeq	r7, r1, r9, lsl #27
   31a48:	muleq	r1, pc, pc	; <UNPREDICTABLE>
   31a4c:	ldrdeq	r6, [r1], -lr
   31a50:	andeq	r7, r1, lr, lsl #27
   31a54:			; <UNDEFINED> instruction: 0x00017fbf
   31a58:	strdeq	r6, [r1], -lr
   31a5c:	andeq	r7, r1, lr, lsr #27

00031a60 <flatcc_builder_finalize_aligned_buffer@@Base>:
   31a60:	push	{r4, r5, r6, r7, fp, lr}
   31a64:	add	fp, sp, #16
   31a68:	sub	sp, sp, #8
   31a6c:	mov	r5, r0
   31a70:	mov	r4, r1
   31a74:	ldr	r0, [r0, #136]	; 0x88
   31a78:	ldr	r1, [r5, #140]	; 0x8c
   31a7c:	cmp	r4, #0
   31a80:	sub	r0, r1, r0
   31a84:	mov	r1, #0
   31a88:	strne	r0, [r4]
   31a8c:	ldrh	r2, [r5, #128]	; 0x80
   31a90:	str	r1, [sp, #4]
   31a94:	add	r0, r0, r2
   31a98:	cmp	r2, #4
   31a9c:	mov	r1, r2
   31aa0:	rsb	r2, r2, #0
   31aa4:	sub	r0, r0, #1
   31aa8:	movls	r1, #4
   31aac:	and	r7, r0, r2
   31ab0:	add	r0, sp, #4
   31ab4:	mov	r2, r7
   31ab8:	bl	14edc <posix_memalign@plt>
   31abc:	ldr	r6, [sp, #4]
   31ac0:	cmp	r0, #0
   31ac4:	cmpne	r6, #0
   31ac8:	bne	31b18 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   31acc:	cmp	r6, #0
   31ad0:	beq	31b20 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   31ad4:	ldr	r0, [r5, #184]	; 0xb8
   31ad8:	cmp	r0, #0
   31adc:	beq	31b18 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   31ae0:	add	r0, r5, #188	; 0xbc
   31ae4:	mov	r1, r6
   31ae8:	mov	r2, r7
   31aec:	bl	32078 <flatcc_emitter_copy_buffer@@Base>
   31af0:	cmp	r0, #0
   31af4:	bne	31b2c <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   31af8:	ldr	r0, [pc, #56]	; 31b38 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   31afc:	ldr	r1, [pc, #56]	; 31b3c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   31b00:	ldr	r3, [pc, #56]	; 31b40 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   31b04:	movw	r2, #1926	; 0x786
   31b08:	add	r0, pc, r0
   31b0c:	add	r1, pc, r1
   31b10:	add	r3, pc, r3
   31b14:	bl	14f3c <__assert_fail@plt>
   31b18:	mov	r0, r6
   31b1c:	bl	14e4c <free@plt>
   31b20:	mov	r6, #0
   31b24:	cmp	r4, #0
   31b28:	strne	r6, [r4]
   31b2c:	mov	r0, r6
   31b30:	sub	sp, fp, #16
   31b34:	pop	{r4, r5, r6, r7, fp, pc}
   31b38:	strdeq	r3, [r1], -lr
   31b3c:	andeq	r6, r1, r2, lsl #26
   31b40:	andeq	r7, r1, sp, ror #24

00031b44 <flatcc_builder_aligned_alloc@@Base>:
   31b44:	push	{fp, lr}
   31b48:	mov	fp, sp
   31b4c:	sub	sp, sp, #8
   31b50:	mov	r2, r1
   31b54:	mov	r1, r0
   31b58:	mov	r0, #0
   31b5c:	cmp	r1, #4
   31b60:	str	r0, [sp, #4]
   31b64:	add	r0, sp, #4
   31b68:	movls	r1, #4
   31b6c:	bl	14edc <posix_memalign@plt>
   31b70:	mov	r1, r0
   31b74:	ldr	r0, [sp, #4]
   31b78:	cmp	r1, #0
   31b7c:	cmpne	r0, #0
   31b80:	bne	31b8c <flatcc_builder_aligned_alloc@@Base+0x48>
   31b84:	mov	sp, fp
   31b88:	pop	{fp, pc}
   31b8c:	bl	14e4c <free@plt>
   31b90:	mov	r0, #0
   31b94:	str	r0, [sp, #4]
   31b98:	mov	sp, fp
   31b9c:	pop	{fp, pc}

00031ba0 <flatcc_builder_aligned_free@@Base>:
   31ba0:	b	14e4c <free@plt>

00031ba4 <flatcc_builder_get_emit_context@@Base>:
   31ba4:	ldr	r0, [r0, #36]	; 0x24
   31ba8:	bx	lr

00031bac <flatcc_emitter_recycle_page@@Base>:
   31bac:	ldr	r3, [r0]
   31bb0:	mov	r2, r0
   31bb4:	mvn	r0, #0
   31bb8:	cmp	r3, r1
   31bbc:	ldrne	r2, [r2, #4]
   31bc0:	cmpne	r2, r1
   31bc4:	bne	31bcc <flatcc_emitter_recycle_page@@Base+0x20>
   31bc8:	bx	lr
   31bcc:	ldr	r0, [r1, #2944]	; 0xb80
   31bd0:	ldr	r2, [r1, #2948]	; 0xb84
   31bd4:	str	r2, [r0, #2948]	; 0xb84
   31bd8:	ldr	r2, [r1, #2948]	; 0xb84
   31bdc:	str	r0, [r2, #2944]	; 0xb80
   31be0:	ldr	r0, [r3, #2948]	; 0xb84
   31be4:	str	r3, [r1, #2944]	; 0xb80
   31be8:	str	r0, [r1, #2948]	; 0xb84
   31bec:	str	r1, [r0, #2944]	; 0xb80
   31bf0:	ldr	r0, [r1, #2944]	; 0xb80
   31bf4:	str	r1, [r0, #2948]	; 0xb84
   31bf8:	mov	r0, #0
   31bfc:	bx	lr

00031c00 <flatcc_emitter_reset@@Base>:
   31c00:	push	{r4, sl, fp, lr}
   31c04:	add	fp, sp, #8
   31c08:	ldr	r1, [r0]
   31c0c:	cmp	r1, #0
   31c10:	beq	31cc8 <flatcc_emitter_reset@@Base+0xc8>
   31c14:	mov	r4, r0
   31c18:	add	r2, r1, #1472	; 0x5c0
   31c1c:	mov	r0, #1472	; 0x5c0
   31c20:	mov	r3, #0
   31c24:	stmib	r4, {r1, r2}
   31c28:	str	r0, [r4, #12]
   31c2c:	str	r2, [r4, #16]
   31c30:	str	r0, [r4, #20]
   31c34:	movw	r0, #64064	; 0xfa40
   31c38:	movt	r0, #65535	; 0xffff
   31c3c:	str	r0, [r1, #2952]	; 0xb88
   31c40:	ldr	r2, [r4, #32]
   31c44:	ldr	r0, [r4, #24]
   31c48:	cmp	r2, #0
   31c4c:	moveq	r2, r0
   31c50:	streq	r0, [r4, #32]
   31c54:	str	r3, [r4, #24]
   31c58:	add	r2, r2, r2, lsl #1
   31c5c:	lsr	r2, r2, #2
   31c60:	add	r0, r2, r0, lsr #2
   31c64:	str	r0, [r4, #32]
   31c68:	ldr	r2, [r4, #28]
   31c6c:	cmp	r2, r0, lsl #1
   31c70:	bls	31cc8 <flatcc_emitter_reset@@Base+0xc8>
   31c74:	mov	r2, r1
   31c78:	ldr	r0, [r2, #2944]!	; 0xb80
   31c7c:	cmp	r0, r1
   31c80:	beq	31cc8 <flatcc_emitter_reset@@Base+0xc8>
   31c84:	ldr	r3, [r0, #2944]	; 0xb80
   31c88:	str	r3, [r2]
   31c8c:	ldr	r2, [r0, #2944]	; 0xb80
   31c90:	str	r1, [r2, #2948]	; 0xb84
   31c94:	bl	14e4c <free@plt>
   31c98:	ldr	r0, [r4, #28]
   31c9c:	ldr	r1, [r4, #32]
   31ca0:	sub	r0, r0, #2944	; 0xb80
   31ca4:	cmp	r0, r1, lsl #1
   31ca8:	str	r0, [r4, #28]
   31cac:	popls	{r4, sl, fp, pc}
   31cb0:	ldr	r1, [r4, #4]
   31cb4:	ldr	r3, [r4]
   31cb8:	mov	r2, r1
   31cbc:	ldr	r0, [r2, #2944]!	; 0xb80
   31cc0:	cmp	r0, r3
   31cc4:	bne	31c84 <flatcc_emitter_reset@@Base+0x84>
   31cc8:	pop	{r4, sl, fp, pc}

00031ccc <flatcc_emitter_clear@@Base>:
   31ccc:	push	{r4, r5, r6, sl, fp, lr}
   31cd0:	add	fp, sp, #16
   31cd4:	ldr	r5, [r0]
   31cd8:	cmp	r5, #0
   31cdc:	popeq	{r4, r5, r6, sl, fp, pc}
   31ce0:	mov	r4, r0
   31ce4:	ldr	r0, [r5, #2948]	; 0xb84
   31ce8:	mov	r6, #0
   31cec:	str	r6, [r0, #2944]	; 0xb80
   31cf0:	b	31d00 <flatcc_emitter_clear@@Base+0x34>
   31cf4:	mov	r5, r0
   31cf8:	ldr	r0, [r0, #2948]	; 0xb84
   31cfc:	bl	14e4c <free@plt>
   31d00:	ldr	r0, [r5, #2944]	; 0xb80
   31d04:	cmp	r0, #0
   31d08:	bne	31cf4 <flatcc_emitter_clear@@Base+0x28>
   31d0c:	mov	r0, r5
   31d10:	bl	14e4c <free@plt>
   31d14:	vmov.i32	q8, #0	; 0x00000000
   31d18:	add	r0, r4, #16
   31d1c:	vst1.32	{d16-d17}, [r0]
   31d20:	mov	r0, #32
   31d24:	vst1.32	{d16-d17}, [r4], r0
   31d28:	str	r6, [r4]
   31d2c:	pop	{r4, r5, r6, sl, fp, pc}

00031d30 <flatcc_emitter@@Base>:
   31d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31d34:	add	fp, sp, #28
   31d38:	sub	sp, sp, #4
   31d3c:	mov	r6, r0
   31d40:	mov	r7, r1
   31d44:	ldr	r0, [r0, #24]
   31d48:	ldr	r1, [fp, #8]
   31d4c:	mov	r4, r2
   31d50:	cmn	r3, #1
   31d54:	mov	r9, r6
   31d58:	add	r0, r0, r1
   31d5c:	str	r0, [r6, #24]
   31d60:	ble	31ea0 <flatcc_emitter@@Base+0x170>
   31d64:	ldr	r0, [r9, #20]!
   31d68:	cmp	r0, r1
   31d6c:	bcs	32014 <flatcc_emitter@@Base+0x2e4>
   31d70:	mov	r8, #0
   31d74:	cmp	r4, #0
   31d78:	beq	3206c <flatcc_emitter@@Base+0x33c>
   31d7c:	movw	sl, #64064	; 0xfa40
   31d80:	movt	sl, #65535	; 0xffff
   31d84:	ldr	r8, [r7, #4]
   31d88:	cmp	r8, #0
   31d8c:	beq	31e90 <flatcc_emitter@@Base+0x160>
   31d90:	ldr	r9, [r7]
   31d94:	cmp	r8, r0
   31d98:	mov	r5, r8
   31d9c:	bls	31e5c <flatcc_emitter@@Base+0x12c>
   31da0:	mov	r5, r0
   31da4:	cmp	r5, #0
   31da8:	bne	31e5c <flatcc_emitter@@Base+0x12c>
   31dac:	ldr	r5, [r6, #4]
   31db0:	cmp	r5, #0
   31db4:	beq	31dc8 <flatcc_emitter@@Base+0x98>
   31db8:	ldr	r0, [r5, #2944]	; 0xb80
   31dbc:	ldr	r1, [r6]
   31dc0:	cmp	r0, r1
   31dc4:	bne	31e00 <flatcc_emitter@@Base+0xd0>
   31dc8:	movw	r0, #2956	; 0xb8c
   31dcc:	bl	14ea0 <malloc@plt>
   31dd0:	cmp	r0, #0
   31dd4:	beq	32024 <flatcc_emitter@@Base+0x2f4>
   31dd8:	ldr	r1, [r6, #28]
   31ddc:	cmp	r5, #0
   31de0:	add	r1, r1, #2944	; 0xb80
   31de4:	str	r1, [r6, #28]
   31de8:	beq	31e2c <flatcc_emitter@@Base+0xfc>
   31dec:	ldr	r1, [r6]
   31df0:	str	r1, [r0, #2944]	; 0xb80
   31df4:	str	r5, [r0, #2948]	; 0xb84
   31df8:	str	r0, [r1, #2948]	; 0xb84
   31dfc:	str	r0, [r5, #2944]	; 0xb80
   31e00:	mov	r5, #2944	; 0xb80
   31e04:	str	r0, [r6, #4]
   31e08:	str	r0, [r6, #16]
   31e0c:	str	r5, [r6, #20]
   31e10:	ldr	r1, [r0, #2948]	; 0xb84
   31e14:	ldr	r1, [r1, #2952]	; 0xb88
   31e18:	add	r1, r1, #2944	; 0xb80
   31e1c:	str	r1, [r0, #2952]	; 0xb88
   31e20:	cmp	r8, r5
   31e24:	bhi	31da4 <flatcc_emitter@@Base+0x74>
   31e28:	b	31e58 <flatcc_emitter@@Base+0x128>
   31e2c:	add	r1, r0, #1472	; 0x5c0
   31e30:	mov	r5, #1472	; 0x5c0
   31e34:	str	r0, [r6]
   31e38:	stmib	r6, {r0, r1, r5}
   31e3c:	str	r1, [r6, #16]
   31e40:	str	r5, [r6, #20]
   31e44:	str	r0, [r0, #2944]	; 0xb80
   31e48:	str	r0, [r0, #2948]	; 0xb84
   31e4c:	str	sl, [r0, #2952]	; 0xb88
   31e50:	cmp	r8, r5
   31e54:	bhi	31da4 <flatcc_emitter@@Base+0x74>
   31e58:	mov	r5, r8
   31e5c:	ldr	r0, [r6, #16]
   31e60:	mov	r1, r9
   31e64:	mov	r2, r5
   31e68:	bl	14e58 <memcpy@plt>
   31e6c:	ldr	r0, [r6, #16]
   31e70:	ldr	r1, [r6, #20]
   31e74:	add	r9, r9, r5
   31e78:	subs	r8, r8, r5
   31e7c:	add	r2, r0, r5
   31e80:	sub	r0, r1, r5
   31e84:	str	r2, [r6, #16]
   31e88:	str	r0, [r6, #20]
   31e8c:	bne	31d94 <flatcc_emitter@@Base+0x64>
   31e90:	subs	r4, r4, #1
   31e94:	add	r7, r7, #8
   31e98:	bne	31d84 <flatcc_emitter@@Base+0x54>
   31e9c:	b	3200c <flatcc_emitter@@Base+0x2dc>
   31ea0:	ldr	r0, [r9, #12]!
   31ea4:	cmp	r0, r1
   31ea8:	bcs	3202c <flatcc_emitter@@Base+0x2fc>
   31eac:	mov	r8, #0
   31eb0:	cmp	r4, #0
   31eb4:	beq	3206c <flatcc_emitter@@Base+0x33c>
   31eb8:	add	r0, r7, r4, lsl #3
   31ebc:	movw	sl, #2952	; 0xb88
   31ec0:	ldr	r8, [r0, #-4]
   31ec4:	sub	r1, r0, #8
   31ec8:	str	r1, [sp]
   31ecc:	cmp	r8, #0
   31ed0:	beq	32000 <flatcc_emitter@@Base+0x2d0>
   31ed4:	ldr	r0, [sp]
   31ed8:	ldr	r0, [r0]
   31edc:	add	r7, r0, r8
   31ee0:	ldr	r1, [r9]
   31ee4:	cmp	r8, r1
   31ee8:	bls	31fd0 <flatcc_emitter@@Base+0x2a0>
   31eec:	cmp	r1, #0
   31ef0:	mov	r5, r1
   31ef4:	bne	31fd4 <flatcc_emitter@@Base+0x2a4>
   31ef8:	ldr	r5, [r6]
   31efc:	cmp	r5, #0
   31f00:	beq	31f2c <flatcc_emitter@@Base+0x1fc>
   31f04:	ldr	r0, [r5, #2948]	; 0xb84
   31f08:	ldr	r1, [r6, #4]
   31f0c:	cmp	r0, r1
   31f10:	beq	31f2c <flatcc_emitter@@Base+0x1fc>
   31f14:	ldr	r1, [r5, #2952]	; 0xb88
   31f18:	mov	r2, r0
   31f1c:	sub	r1, r1, #2944	; 0xb80
   31f20:	str	r1, [r2, #2952]!	; 0xb88
   31f24:	str	r0, [r6]
   31f28:	b	31f6c <flatcc_emitter@@Base+0x23c>
   31f2c:	movw	r0, #2956	; 0xb8c
   31f30:	bl	14ea0 <malloc@plt>
   31f34:	cmp	r0, #0
   31f38:	beq	32024 <flatcc_emitter@@Base+0x2f4>
   31f3c:	ldr	r1, [r6, #28]
   31f40:	cmp	r5, #0
   31f44:	add	r1, r1, #2944	; 0xb80
   31f48:	str	r1, [r6, #28]
   31f4c:	beq	31f98 <flatcc_emitter@@Base+0x268>
   31f50:	ldr	r1, [r6, #4]
   31f54:	add	r2, r0, sl
   31f58:	str	r5, [r0, #2944]	; 0xb80
   31f5c:	str	r1, [r0, #2948]	; 0xb84
   31f60:	str	r0, [r5, #2948]	; 0xb84
   31f64:	str	r0, [r1, #2944]	; 0xb80
   31f68:	str	r0, [r6]
   31f6c:	add	r3, r0, #2944	; 0xb80
   31f70:	mov	r1, #2944	; 0xb80
   31f74:	str	r3, [r6, #8]
   31f78:	str	r1, [r6, #12]
   31f7c:	ldr	r0, [r0, #2944]	; 0xb80
   31f80:	ldr	r0, [r0, #2952]	; 0xb88
   31f84:	sub	r0, r0, #2944	; 0xb80
   31f88:	str	r0, [r2]
   31f8c:	cmp	r8, r1
   31f90:	bhi	31eec <flatcc_emitter@@Base+0x1bc>
   31f94:	b	31fd0 <flatcc_emitter@@Base+0x2a0>
   31f98:	add	r2, r0, #1472	; 0x5c0
   31f9c:	mov	r1, #1472	; 0x5c0
   31fa0:	str	r0, [r6]
   31fa4:	stmib	r6, {r0, r2}
   31fa8:	str	r1, [r6, #12]
   31fac:	str	r2, [r6, #16]
   31fb0:	movw	r2, #64064	; 0xfa40
   31fb4:	str	r1, [r6, #20]
   31fb8:	str	r0, [r0, #2944]	; 0xb80
   31fbc:	str	r0, [r0, #2948]	; 0xb84
   31fc0:	movt	r2, #65535	; 0xffff
   31fc4:	str	r2, [r0, #2952]	; 0xb88
   31fc8:	cmp	r8, r1
   31fcc:	bhi	31eec <flatcc_emitter@@Base+0x1bc>
   31fd0:	mov	r5, r8
   31fd4:	sub	r0, r1, r5
   31fd8:	sub	r7, r7, r5
   31fdc:	mov	r2, r5
   31fe0:	str	r0, [r6, #12]
   31fe4:	mov	r1, r7
   31fe8:	ldr	r0, [r6, #8]
   31fec:	sub	r0, r0, r5
   31ff0:	str	r0, [r6, #8]
   31ff4:	bl	14e58 <memcpy@plt>
   31ff8:	subs	r8, r8, r5
   31ffc:	bne	31ee0 <flatcc_emitter@@Base+0x1b0>
   32000:	ldr	r0, [sp]
   32004:	subs	r4, r4, #1
   32008:	bne	31ec0 <flatcc_emitter@@Base+0x190>
   3200c:	mov	r8, #0
   32010:	b	3206c <flatcc_emitter@@Base+0x33c>
   32014:	ldr	r5, [r6, #16]
   32018:	add	r2, r5, r1
   3201c:	str	r2, [r6, #16]
   32020:	b	32038 <flatcc_emitter@@Base+0x308>
   32024:	mvn	r8, #0
   32028:	b	3206c <flatcc_emitter@@Base+0x33c>
   3202c:	ldr	r2, [r6, #8]
   32030:	sub	r5, r2, r1
   32034:	str	r5, [r6, #8]
   32038:	sub	r0, r0, r1
   3203c:	mov	r8, #0
   32040:	cmp	r4, #0
   32044:	str	r0, [r9]
   32048:	beq	3206c <flatcc_emitter@@Base+0x33c>
   3204c:	ldm	r7, {r1, r2}
   32050:	mov	r0, r5
   32054:	bl	14e58 <memcpy@plt>
   32058:	ldr	r0, [r7, #4]
   3205c:	add	r7, r7, #8
   32060:	subs	r4, r4, #1
   32064:	add	r5, r5, r0
   32068:	bne	3204c <flatcc_emitter@@Base+0x31c>
   3206c:	mov	r0, r8
   32070:	sub	sp, fp, #28
   32074:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00032078 <flatcc_emitter_copy_buffer@@Base>:
   32078:	push	{r4, r5, r6, sl, fp, lr}
   3207c:	add	fp, sp, #16
   32080:	mov	r3, r2
   32084:	ldr	r2, [r0, #24]
   32088:	mov	r5, #0
   3208c:	cmp	r2, r3
   32090:	bhi	32118 <flatcc_emitter_copy_buffer@@Base+0xa0>
   32094:	mov	r4, r0
   32098:	ldr	r0, [r0]
   3209c:	cmp	r0, #0
   320a0:	beq	32118 <flatcc_emitter_copy_buffer@@Base+0xa0>
   320a4:	mov	r6, r1
   320a8:	ldr	r1, [r4, #4]
   320ac:	cmp	r0, r1
   320b0:	beq	32120 <flatcc_emitter_copy_buffer@@Base+0xa8>
   320b4:	ldr	r0, [r4, #12]
   320b8:	ldr	r1, [r4, #8]
   320bc:	rsb	r5, r0, #2944	; 0xb80
   320c0:	mov	r0, r6
   320c4:	mov	r2, r5
   320c8:	bl	14e58 <memcpy@plt>
   320cc:	ldm	r4, {r0, r1}
   320d0:	add	r5, r6, r5
   320d4:	ldr	r6, [r0, #2944]	; 0xb80
   320d8:	cmp	r6, r1
   320dc:	beq	32104 <flatcc_emitter_copy_buffer@@Base+0x8c>
   320e0:	mov	r0, r5
   320e4:	mov	r1, r6
   320e8:	mov	r2, #2944	; 0xb80
   320ec:	bl	14e58 <memcpy@plt>
   320f0:	ldr	r6, [r6, #2944]	; 0xb80
   320f4:	ldr	r0, [r4, #4]
   320f8:	add	r5, r5, #2944	; 0xb80
   320fc:	cmp	r6, r0
   32100:	bne	320e0 <flatcc_emitter_copy_buffer@@Base+0x68>
   32104:	ldr	r0, [r4, #20]
   32108:	mov	r1, r6
   3210c:	rsb	r2, r0, #2944	; 0xb80
   32110:	mov	r0, r5
   32114:	bl	14e58 <memcpy@plt>
   32118:	mov	r0, r5
   3211c:	pop	{r4, r5, r6, sl, fp, pc}
   32120:	ldr	r1, [r4, #8]
   32124:	mov	r0, r6
   32128:	bl	14e58 <memcpy@plt>
   3212c:	mov	r0, r6
   32130:	pop	{r4, r5, r6, sl, fp, pc}

00032134 <flatcc_verify_error_string@@Base>:
   32134:	cmp	r0, #36	; 0x24
   32138:	ldrhi	r0, [pc, #24]	; 32158 <flatcc_verify_error_string@@Base+0x24>
   3213c:	addhi	r0, pc, r0
   32140:	bxhi	lr
   32144:	ldr	r1, [pc, #8]	; 32154 <flatcc_verify_error_string@@Base+0x20>
   32148:	add	r1, pc, r1
   3214c:	ldr	r0, [r1, r0, lsl #2]
   32150:	bx	lr
   32154:	andeq	r9, r2, r0, lsl #25
   32158:	andeq	r7, r1, sp, asr #26

0003215c <flatcc_verify_field@@Base>:
   3215c:	push	{r4, sl, fp, lr}
   32160:	add	fp, sp, #8
   32164:	ldrh	r4, [r0, #22]
   32168:	mov	ip, #4
   3216c:	mov	lr, #0
   32170:	add	r1, ip, r1, lsl #1
   32174:	uxth	ip, r1
   32178:	cmp	ip, r4
   3217c:	bcs	321d8 <flatcc_verify_field@@Base+0x7c>
   32180:	ldr	r4, [r0, #12]
   32184:	uxtah	r1, r4, r1
   32188:	ldrh	ip, [r1]
   3218c:	cmp	ip, #0
   32190:	beq	321d8 <flatcc_verify_field@@Base+0x7c>
   32194:	add	r1, ip, r2
   32198:	ldrh	r2, [r0, #20]
   3219c:	mov	lr, #13
   321a0:	cmp	r1, r2
   321a4:	bhi	321d8 <flatcc_verify_field@@Base+0x7c>
   321a8:	ldr	r1, [r0]
   321ac:	mov	lr, #0
   321b0:	add	r2, r1, ip
   321b4:	ldr	r1, [r0, #16]
   321b8:	add	r4, r2, r1
   321bc:	sub	r1, r3, #1
   321c0:	tst	r4, r1
   321c4:	beq	321d8 <flatcc_verify_field@@Base+0x7c>
   321c8:	ldr	r0, [r0, #16]
   321cc:	add	r0, r2, r0
   321d0:	ands	lr, r0, r1
   321d4:	movwne	lr, #12
   321d8:	mov	r0, lr
   321dc:	pop	{r4, sl, fp, pc}

000321e0 <flatcc_verify_string_field@@Base>:
   321e0:	push	{fp, lr}
   321e4:	mov	fp, sp
   321e8:	mov	lr, r2
   321ec:	ldrh	r2, [r0, #22]
   321f0:	mov	r3, #4
   321f4:	add	r1, r3, r1, lsl #1
   321f8:	uxth	r3, r1
   321fc:	cmp	r3, r2
   32200:	bcs	3229c <flatcc_verify_string_field@@Base+0xbc>
   32204:	ldr	r2, [r0, #12]
   32208:	uxtah	r1, r2, r1
   3220c:	ldrh	r1, [r1]
   32210:	cmp	r1, #0
   32214:	beq	3229c <flatcc_verify_string_field@@Base+0xbc>
   32218:	ldrh	r2, [r0, #20]
   3221c:	add	r3, r1, #4
   32220:	mov	lr, #13
   32224:	cmp	r3, r2
   32228:	bhi	32294 <flatcc_verify_string_field@@Base+0xb4>
   3222c:	ldr	r2, [r0, #16]
   32230:	mov	lr, #12
   32234:	add	r3, r2, r1
   32238:	tst	r3, #3
   3223c:	bne	32294 <flatcc_verify_string_field@@Base+0xb4>
   32240:	cmp	r3, #0
   32244:	moveq	lr, #0
   32248:	moveq	r0, lr
   3224c:	popeq	{fp, pc}
   32250:	ldr	ip, [r0]
   32254:	mov	lr, #17
   32258:	ldr	r1, [ip, r3]
   3225c:	add	r1, r1, r3
   32260:	tst	r1, #3
   32264:	bne	32294 <flatcc_verify_string_field@@Base+0xb4>
   32268:	cmp	r1, r3
   3226c:	bls	32294 <flatcc_verify_string_field@@Base+0xb4>
   32270:	ldr	r3, [r0, #4]
   32274:	add	r0, r1, #4
   32278:	cmp	r3, r0
   3227c:	ldrcs	r1, [ip, r1]
   32280:	subcs	r2, r3, r0
   32284:	movcs	lr, #8
   32288:	addcs	r3, r1, #1
   3228c:	cmpcs	r2, r3
   32290:	bcs	322ac <flatcc_verify_string_field@@Base+0xcc>
   32294:	mov	r0, lr
   32298:	pop	{fp, pc}
   3229c:	cmp	lr, #0
   322a0:	movwne	lr, #4
   322a4:	mov	r0, lr
   322a8:	pop	{fp, pc}
   322ac:	add	r0, ip, r0
   322b0:	ldrb	lr, [r0, r1]
   322b4:	cmp	lr, #0
   322b8:	movwne	lr, #7
   322bc:	mov	r0, lr
   322c0:	pop	{fp, pc}

000322c4 <flatcc_verify_vector_field@@Base>:
   322c4:	push	{r4, r5, fp, lr}
   322c8:	add	fp, sp, #8
   322cc:	mov	r5, r2
   322d0:	ldrh	r2, [r0, #22]
   322d4:	mov	r4, #4
   322d8:	add	r1, r4, r1, lsl #1
   322dc:	uxth	r4, r1
   322e0:	cmp	r4, r2
   322e4:	bcs	323ac <flatcc_verify_vector_field@@Base+0xe8>
   322e8:	ldr	r2, [r0, #12]
   322ec:	uxtah	r1, r2, r1
   322f0:	ldrh	r1, [r1]
   322f4:	cmp	r1, #0
   322f8:	beq	323ac <flatcc_verify_vector_field@@Base+0xe8>
   322fc:	ldrh	r2, [r0, #20]
   32300:	add	r4, r1, #4
   32304:	mov	r5, #13
   32308:	cmp	r4, r2
   3230c:	bhi	323a4 <flatcc_verify_vector_field@@Base+0xe0>
   32310:	ldr	r2, [r0, #16]
   32314:	mov	r5, #12
   32318:	add	r1, r2, r1
   3231c:	tst	r1, #3
   32320:	bne	323a4 <flatcc_verify_vector_field@@Base+0xe0>
   32324:	cmp	r1, #0
   32328:	moveq	r5, #0
   3232c:	moveq	r0, r5
   32330:	popeq	{r4, r5, fp, pc}
   32334:	ldr	ip, [r0]
   32338:	ldr	r4, [fp, #8]
   3233c:	mov	r5, #16
   32340:	ldr	r2, [ip, r1]
   32344:	cmp	r4, #4
   32348:	movls	r4, #4
   3234c:	add	lr, r2, r1
   32350:	cmp	lr, r1
   32354:	bls	323a4 <flatcc_verify_vector_field@@Base+0xe0>
   32358:	ldr	r0, [r0, #4]
   3235c:	add	r1, lr, #4
   32360:	cmp	r1, r0
   32364:	bhi	323a4 <flatcc_verify_vector_field@@Base+0xe0>
   32368:	sub	r2, r4, #1
   3236c:	orr	r2, r2, #3
   32370:	tst	r1, r2
   32374:	bne	323a4 <flatcc_verify_vector_field@@Base+0xe0>
   32378:	ldr	r2, [fp, #12]
   3237c:	ldr	r1, [ip, lr]
   32380:	mov	r5, #25
   32384:	cmp	r1, r2
   32388:	bhi	323a4 <flatcc_verify_vector_field@@Base+0xe0>
   3238c:	sub	r0, r0, #4
   32390:	mul	r1, r1, r3
   32394:	mov	r5, #0
   32398:	sub	r0, r0, lr
   3239c:	cmp	r0, r1
   323a0:	movwcc	r5, #26
   323a4:	mov	r0, r5
   323a8:	pop	{r4, r5, fp, pc}
   323ac:	cmp	r5, #0
   323b0:	movwne	r5, #4
   323b4:	mov	r0, r5
   323b8:	pop	{r4, r5, fp, pc}

000323bc <flatcc_verify_string_vector_field@@Base>:
   323bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   323c0:	add	fp, sp, #24
   323c4:	ldrh	r7, [r0, #22]
   323c8:	mov	r3, #4
   323cc:	add	r1, r3, r1, lsl #1
   323d0:	uxth	r3, r1
   323d4:	cmp	r3, r7
   323d8:	bcs	32420 <flatcc_verify_string_vector_field@@Base+0x64>
   323dc:	ldr	r3, [r0, #12]
   323e0:	uxtah	r1, r3, r1
   323e4:	ldrh	r1, [r1]
   323e8:	cmp	r1, #0
   323ec:	beq	32420 <flatcc_verify_string_vector_field@@Base+0x64>
   323f0:	ldrh	r3, [r0, #20]
   323f4:	add	r7, r1, #4
   323f8:	mov	r2, #13
   323fc:	cmp	r7, r3
   32400:	bhi	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   32404:	ldr	r4, [r0, #16]
   32408:	mov	r2, #12
   3240c:	add	r6, r4, r1
   32410:	tst	r6, #3
   32414:	beq	32430 <flatcc_verify_string_vector_field@@Base+0x74>
   32418:	mov	r0, r2
   3241c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32420:	cmp	r2, #0
   32424:	movwne	r2, #4
   32428:	mov	r0, r2
   3242c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32430:	mov	r2, #0
   32434:	cmp	r6, #0
   32438:	beq	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   3243c:	ldr	r5, [r0]
   32440:	mov	r2, #16
   32444:	ldr	r7, [r5, r6]
   32448:	add	r3, r7, r6
   3244c:	cmp	r3, r6
   32450:	bls	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   32454:	ldr	lr, [r0, #4]
   32458:	add	r0, r3, #4
   3245c:	cmp	r0, lr
   32460:	bhi	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   32464:	ands	r0, r0, #3
   32468:	bne	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   3246c:	ldr	ip, [r5, r3]
   32470:	mov	r2, #25
   32474:	cmn	ip, #-1073741823	; 0xc0000001
   32478:	bhi	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   3247c:	sub	r0, lr, #4
   32480:	mov	r2, #26
   32484:	sub	r0, r0, r3
   32488:	cmp	r0, ip, lsl #2
   3248c:	bcc	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   32490:	cmp	ip, #0
   32494:	mov	r2, #0
   32498:	beq	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   3249c:	sub	r0, lr, #8
   324a0:	add	r9, r7, r4
   324a4:	sub	r0, r0, r1
   324a8:	sub	r0, r0, r7
   324ac:	sub	r8, r0, r4
   324b0:	add	r0, r5, r9
   324b4:	mov	r5, #0
   324b8:	rsb	r4, r0, #0
   324bc:	sub	r0, r1, r4
   324c0:	add	r3, r1, r9
   324c4:	mov	r2, #17
   324c8:	ldr	r6, [r0, #4]
   324cc:	add	r7, r3, r6
   324d0:	add	r0, r7, #4
   324d4:	tst	r0, #3
   324d8:	bne	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   324dc:	add	r3, r3, #4
   324e0:	cmp	r0, r3
   324e4:	bls	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   324e8:	add	r0, r7, #8
   324ec:	cmp	lr, r0
   324f0:	bcc	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   324f4:	add	r0, r1, r6
   324f8:	sub	r2, r8, r6
   324fc:	sub	r0, r0, r4
   32500:	ldr	r0, [r0, #4]
   32504:	add	r3, r0, #1
   32508:	cmp	r2, r3
   3250c:	bcc	32548 <flatcc_verify_string_vector_field@@Base+0x18c>
   32510:	add	r0, r6, r0
   32514:	add	r0, r1, r0
   32518:	sub	r0, r0, r4
   3251c:	ldrb	r0, [r0, #8]
   32520:	cmp	r0, #0
   32524:	bne	32554 <flatcc_verify_string_vector_field@@Base+0x198>
   32528:	add	r5, r5, #1
   3252c:	sub	r8, r8, #4
   32530:	add	r9, r9, #4
   32534:	sub	r4, r4, #4
   32538:	mov	r2, #0
   3253c:	cmp	r5, ip
   32540:	bcc	324bc <flatcc_verify_string_vector_field@@Base+0x100>
   32544:	b	32418 <flatcc_verify_string_vector_field@@Base+0x5c>
   32548:	mov	r2, #8
   3254c:	mov	r0, r2
   32550:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   32554:	mov	r2, #7
   32558:	mov	r0, r2
   3255c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00032560 <flatcc_verify_table_field@@Base>:
   32560:	push	{r4, r5, r6, sl, fp, lr}
   32564:	add	fp, sp, #16
   32568:	sub	sp, sp, #24
   3256c:	ldrh	r5, [r0, #22]
   32570:	mov	r6, #4
   32574:	add	r1, r6, r1, lsl #1
   32578:	uxth	r6, r1
   3257c:	cmp	r6, r5
   32580:	bcs	32690 <flatcc_verify_table_field@@Base+0x130>
   32584:	ldr	r6, [r0, #12]
   32588:	uxtah	r1, r6, r1
   3258c:	ldrh	r1, [r1]
   32590:	cmp	r1, #0
   32594:	beq	32690 <flatcc_verify_table_field@@Base+0x130>
   32598:	ldrh	r6, [r0, #20]
   3259c:	add	r5, r1, #4
   325a0:	mov	r2, #13
   325a4:	cmp	r5, r6
   325a8:	bhi	32698 <flatcc_verify_table_field@@Base+0x138>
   325ac:	ldr	r2, [r0, #16]
   325b0:	add	r4, r2, r1
   325b4:	mov	r2, #12
   325b8:	tst	r4, #3
   325bc:	bne	32698 <flatcc_verify_table_field@@Base+0x138>
   325c0:	cmp	r4, #0
   325c4:	beq	326a4 <flatcc_verify_table_field@@Base+0x144>
   325c8:	ldm	r0, {r1, ip}
   325cc:	ldr	r2, [r0, #8]
   325d0:	ldr	r0, [r1, r4]
   325d4:	subs	r2, r2, #1
   325d8:	str	r2, [sp, #8]
   325dc:	beq	326ac <flatcc_verify_table_field@@Base+0x14c>
   325e0:	add	r0, r0, r4
   325e4:	mov	r2, #15
   325e8:	tst	r0, #3
   325ec:	bne	32698 <flatcc_verify_table_field@@Base+0x138>
   325f0:	cmp	r0, r4
   325f4:	bls	32698 <flatcc_verify_table_field@@Base+0x138>
   325f8:	add	r6, r0, #4
   325fc:	cmp	r6, ip
   32600:	bhi	32698 <flatcc_verify_table_field@@Base+0x138>
   32604:	str	r0, [sp, #16]
   32608:	ldr	r2, [r1, r0]
   3260c:	sub	r5, r0, r2
   32610:	mov	r2, #29
   32614:	tst	r5, #-2147483647	; 0x80000001
   32618:	bne	32698 <flatcc_verify_table_field@@Base+0x138>
   3261c:	add	r4, r5, #2
   32620:	mov	r2, #27
   32624:	cmp	r4, ip
   32628:	bhi	32698 <flatcc_verify_table_field@@Base+0x138>
   3262c:	mov	lr, r1
   32630:	mov	r2, #30
   32634:	ldrh	r6, [lr, r5]!
   32638:	tst	r6, #1
   3263c:	strh	r6, [sp, #22]
   32640:	bne	32698 <flatcc_verify_table_field@@Base+0x138>
   32644:	add	r5, r5, r6
   32648:	cmp	r5, ip
   3264c:	bhi	32698 <flatcc_verify_table_field@@Base+0x138>
   32650:	mov	r2, #28
   32654:	cmp	r6, #4
   32658:	bcc	32698 <flatcc_verify_table_field@@Base+0x138>
   3265c:	add	r2, r1, r4
   32660:	sub	r0, ip, r0
   32664:	ldrh	r4, [r2]
   32668:	mov	r2, #20
   3266c:	cmp	r0, r4
   32670:	strh	r4, [sp, #20]
   32674:	bcc	32698 <flatcc_verify_table_field@@Base+0x138>
   32678:	mov	r0, sp
   3267c:	str	lr, [sp, #12]
   32680:	stm	sp, {r1, ip}
   32684:	blx	r3
   32688:	mov	r2, r0
   3268c:	b	32698 <flatcc_verify_table_field@@Base+0x138>
   32690:	cmp	r2, #0
   32694:	movwne	r2, #4
   32698:	mov	r0, r2
   3269c:	sub	sp, fp, #16
   326a0:	pop	{r4, r5, r6, sl, fp, pc}
   326a4:	mov	r2, #0
   326a8:	b	32698 <flatcc_verify_table_field@@Base+0x138>
   326ac:	mov	r2, #3
   326b0:	b	32698 <flatcc_verify_table_field@@Base+0x138>

000326b4 <flatcc_verify_table_vector_field@@Base>:
   326b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   326b8:	add	fp, sp, #28
   326bc:	sub	sp, sp, #36	; 0x24
   326c0:	ldrh	r7, [r0, #22]
   326c4:	mov	r4, r3
   326c8:	mov	r3, #4
   326cc:	add	r1, r3, r1, lsl #1
   326d0:	uxth	r3, r1
   326d4:	cmp	r3, r7
   326d8:	bcs	328ac <flatcc_verify_table_vector_field@@Base+0x1f8>
   326dc:	ldr	r3, [r0, #12]
   326e0:	uxtah	r1, r3, r1
   326e4:	ldrh	r1, [r1]
   326e8:	cmp	r1, #0
   326ec:	beq	328ac <flatcc_verify_table_vector_field@@Base+0x1f8>
   326f0:	ldrh	r3, [r0, #20]
   326f4:	add	r7, r1, #4
   326f8:	mov	r2, #13
   326fc:	cmp	r7, r3
   32700:	bhi	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32704:	ldr	r3, [r0, #16]
   32708:	mov	r2, #12
   3270c:	add	r5, r3, r1
   32710:	tst	r5, #3
   32714:	bne	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32718:	mov	r2, #0
   3271c:	cmp	r5, #0
   32720:	beq	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32724:	ldr	r7, [r0, #8]
   32728:	cmp	r7, #1
   3272c:	blt	328c0 <flatcc_verify_table_vector_field@@Base+0x20c>
   32730:	ldr	sl, [r0]
   32734:	mov	r2, #16
   32738:	ldr	ip, [sl, r5]
   3273c:	add	r6, ip, r5
   32740:	cmp	r6, r5
   32744:	bls	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32748:	ldr	lr, [r0, #4]
   3274c:	add	r0, r6, #4
   32750:	cmp	r0, lr
   32754:	bhi	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32758:	ands	r0, r0, #3
   3275c:	bne	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32760:	ldr	r9, [sl, r6]
   32764:	mov	r2, #25
   32768:	cmn	r9, #-1073741823	; 0xc0000001
   3276c:	bhi	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32770:	sub	r0, lr, #4
   32774:	mov	r2, #26
   32778:	sub	r6, r0, r6
   3277c:	cmp	r6, r9, lsl #2
   32780:	bcc	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32784:	cmp	r9, #0
   32788:	mov	r2, #0
   3278c:	beq	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32790:	sub	r0, r0, r1
   32794:	str	r9, [sp]
   32798:	sub	r0, r0, ip
   3279c:	ldr	r9, [sp]
   327a0:	sub	r8, r0, r3
   327a4:	add	r0, ip, r3
   327a8:	add	r0, r0, r1
   327ac:	mov	r1, #0
   327b0:	add	r5, r0, #4
   327b4:	sub	r0, r7, #2
   327b8:	str	r0, [sp, #4]
   327bc:	ldr	r0, [sp, #4]
   327c0:	ldr	r2, [sl, r5]
   327c4:	cmp	r0, #0
   327c8:	str	r0, [sp, #20]
   327cc:	beq	32980 <flatcc_verify_table_vector_field@@Base+0x2cc>
   327d0:	add	r0, r5, r2
   327d4:	str	r1, [sp, #8]
   327d8:	add	ip, r0, #4
   327dc:	tst	r0, #3
   327e0:	bne	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   327e4:	cmp	r0, r5
   327e8:	bls	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   327ec:	cmp	ip, lr
   327f0:	bhi	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   327f4:	str	r0, [sp, #28]
   327f8:	add	r3, sl, r2
   327fc:	ldr	r7, [r3, r5]
   32800:	sub	r6, r2, r7
   32804:	add	r3, r5, r6
   32808:	tst	r3, #-2147483647	; 0x80000001
   3280c:	bne	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   32810:	add	r1, r3, #2
   32814:	cmp	r1, lr
   32818:	bhi	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   3281c:	add	r1, sl, r6
   32820:	add	r1, r1, r5
   32824:	ldrh	r6, [r1]
   32828:	cmp	r6, #4
   3282c:	strh	r6, [sp, #34]	; 0x22
   32830:	bcc	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   32834:	ands	r1, r6, #1
   32838:	bne	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   3283c:	add	r1, r2, r6
   32840:	sub	r1, r1, r7
   32844:	add	r1, r5, r1
   32848:	cmp	r1, lr
   3284c:	bhi	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   32850:	add	r3, sl, r3
   32854:	sub	r2, r8, r2
   32858:	ldrh	r1, [r3, #2]
   3285c:	cmp	r2, r1
   32860:	strh	r1, [sp, #32]
   32864:	bcc	328c8 <flatcc_verify_table_vector_field@@Base+0x214>
   32868:	add	r0, sp, #12
   3286c:	str	sl, [sp, #12]
   32870:	str	r3, [sp, #24]
   32874:	mov	r6, lr
   32878:	str	lr, [sp, #16]
   3287c:	blx	r4
   32880:	cmp	r0, #0
   32884:	bne	32990 <flatcc_verify_table_vector_field@@Base+0x2dc>
   32888:	ldr	r1, [sp, #8]
   3288c:	sub	r8, r8, #4
   32890:	add	r5, r5, #4
   32894:	mov	r2, #0
   32898:	mov	lr, r6
   3289c:	add	r1, r1, #1
   328a0:	cmp	r1, r9
   328a4:	bcc	327bc <flatcc_verify_table_vector_field@@Base+0x108>
   328a8:	b	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   328ac:	cmp	r2, #0
   328b0:	movwne	r2, #4
   328b4:	mov	r0, r2
   328b8:	sub	sp, fp, #28
   328bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   328c0:	mov	r2, #3
   328c4:	b	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   328c8:	ldr	r1, [sp, #4]
   328cc:	str	r1, [sp, #20]
   328d0:	mov	r2, #15
   328d4:	tst	r0, #3
   328d8:	bne	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   328dc:	cmp	r0, r5
   328e0:	bls	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   328e4:	cmp	ip, lr
   328e8:	bhi	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   328ec:	str	r0, [sp, #28]
   328f0:	mov	r2, #29
   328f4:	ldr	r1, [sl, r0]
   328f8:	sub	r7, r0, r1
   328fc:	tst	r7, #-2147483647	; 0x80000001
   32900:	bne	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32904:	add	r3, r7, #2
   32908:	mov	r2, #27
   3290c:	cmp	r3, lr
   32910:	bhi	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32914:	mov	r1, sl
   32918:	mov	r2, #30
   3291c:	ldrh	r6, [r1, r7]!
   32920:	tst	r6, #1
   32924:	strh	r6, [sp, #34]	; 0x22
   32928:	bne	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   3292c:	add	r7, r7, r6
   32930:	cmp	r7, lr
   32934:	bhi	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32938:	mov	r2, #28
   3293c:	cmp	r6, #4
   32940:	bcc	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32944:	add	r2, sl, r3
   32948:	sub	r0, lr, r0
   3294c:	mov	r5, lr
   32950:	ldrh	r3, [r2]
   32954:	mov	r2, #20
   32958:	cmp	r0, r3
   3295c:	strh	r3, [sp, #32]
   32960:	bcc	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32964:	add	r0, sp, #12
   32968:	str	sl, [sp, #12]
   3296c:	str	r1, [sp, #24]
   32970:	str	r5, [sp, #16]
   32974:	blx	r4
   32978:	mov	r2, r0
   3297c:	b	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32980:	mov	r0, #0
   32984:	mov	r2, #3
   32988:	str	r0, [sp, #20]
   3298c:	b	328b4 <flatcc_verify_table_vector_field@@Base+0x200>
   32990:	ldr	r0, [sl, r5]
   32994:	ldr	r1, [sp, #4]
   32998:	mov	lr, r6
   3299c:	add	r0, r0, r5
   329a0:	str	r1, [sp, #20]
   329a4:	add	ip, r0, #4
   329a8:	b	328d0 <flatcc_verify_table_vector_field@@Base+0x21c>

000329ac <flatcc_verify_union_table@@Base>:
   329ac:	push	{r4, r5, r6, sl, fp, lr}
   329b0:	add	fp, sp, #16
   329b4:	sub	sp, sp, #24
   329b8:	ldr	r5, [r0, #16]
   329bc:	ldr	r3, [r0, #20]
   329c0:	ldr	ip, [r0]
   329c4:	ldr	r2, [r0, #4]
   329c8:	ldr	r0, [r0, #8]
   329cc:	subs	r0, r0, #1
   329d0:	str	r0, [sp, #8]
   329d4:	moveq	r0, #3
   329d8:	subeq	sp, fp, #16
   329dc:	popeq	{r4, r5, r6, sl, fp, pc}
   329e0:	add	r3, r3, r5
   329e4:	mov	r0, #15
   329e8:	tst	r3, #3
   329ec:	bne	32a8c <flatcc_verify_union_table@@Base+0xe0>
   329f0:	cmp	r3, r5
   329f4:	bls	32a8c <flatcc_verify_union_table@@Base+0xe0>
   329f8:	add	r6, r3, #4
   329fc:	cmp	r6, r2
   32a00:	bhi	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a04:	str	r3, [sp, #16]
   32a08:	ldr	r0, [ip, r3]
   32a0c:	sub	r5, r3, r0
   32a10:	mov	r0, #29
   32a14:	tst	r5, #-2147483647	; 0x80000001
   32a18:	bne	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a1c:	add	r4, r5, #2
   32a20:	mov	r0, #27
   32a24:	cmp	r4, r2
   32a28:	bhi	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a2c:	mov	lr, ip
   32a30:	mov	r0, #30
   32a34:	ldrh	r6, [lr, r5]!
   32a38:	tst	r6, #1
   32a3c:	strh	r6, [sp, #22]
   32a40:	bne	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a44:	add	r5, r5, r6
   32a48:	cmp	r5, r2
   32a4c:	bhi	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a50:	mov	r0, #28
   32a54:	cmp	r6, #4
   32a58:	bcc	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a5c:	add	r0, ip, r4
   32a60:	sub	r3, r2, r3
   32a64:	ldrh	r4, [r0]
   32a68:	mov	r0, #20
   32a6c:	cmp	r3, r4
   32a70:	strh	r4, [sp, #20]
   32a74:	bcc	32a8c <flatcc_verify_union_table@@Base+0xe0>
   32a78:	mov	r0, sp
   32a7c:	str	ip, [sp]
   32a80:	str	lr, [sp, #12]
   32a84:	str	r2, [sp, #4]
   32a88:	blx	r1
   32a8c:	sub	sp, fp, #16
   32a90:	pop	{r4, r5, r6, sl, fp, pc}

00032a94 <flatcc_verify_union_struct@@Base>:
   32a94:	push	{fp, lr}
   32a98:	mov	fp, sp
   32a9c:	ldr	lr, [r0, #20]
   32aa0:	mov	r3, r0
   32aa4:	mov	r0, #18
   32aa8:	cmp	lr, #0
   32aac:	beq	32ae8 <flatcc_verify_union_struct@@Base+0x54>
   32ab0:	ldr	ip, [r3, #4]
   32ab4:	ldr	r3, [r3, #16]
   32ab8:	add	r3, r3, lr
   32abc:	cmp	r3, ip
   32ac0:	bhi	32ae8 <flatcc_verify_union_struct@@Base+0x54>
   32ac4:	adds	r1, r3, r1
   32ac8:	mov	r0, #10
   32acc:	bcs	32ae8 <flatcc_verify_union_struct@@Base+0x54>
   32ad0:	mov	r0, #9
   32ad4:	cmp	r1, ip
   32ad8:	pophi	{fp, pc}
   32adc:	sub	r0, r2, #1
   32ae0:	ands	r0, r3, r0
   32ae4:	movwne	r0, #11
   32ae8:	pop	{fp, pc}

00032aec <flatcc_verify_union_string@@Base>:
   32aec:	mov	r1, r0
   32af0:	ldr	r3, [r0, #16]
   32af4:	ldr	r0, [r0, #20]
   32af8:	add	r2, r0, r3
   32afc:	mov	r0, #17
   32b00:	tst	r2, #3
   32b04:	bne	32b58 <flatcc_verify_union_string@@Base+0x6c>
   32b08:	cmp	r2, r3
   32b0c:	bls	32b58 <flatcc_verify_union_string@@Base+0x6c>
   32b10:	ldr	r3, [r1, #4]
   32b14:	add	ip, r2, #4
   32b18:	cmp	r3, ip
   32b1c:	bcc	32b58 <flatcc_verify_union_string@@Base+0x6c>
   32b20:	push	{fp, lr}
   32b24:	mov	fp, sp
   32b28:	ldr	r1, [r1]
   32b2c:	sub	lr, r3, ip
   32b30:	mov	r0, #8
   32b34:	ldr	r2, [r1, r2]
   32b38:	add	r3, r2, #1
   32b3c:	cmp	lr, r3
   32b40:	pop	{fp, lr}
   32b44:	bxcc	lr
   32b48:	add	r0, r1, ip
   32b4c:	ldrb	r0, [r0, r2]
   32b50:	cmp	r0, #0
   32b54:	movwne	r0, #7
   32b58:	bx	lr

00032b5c <flatcc_verify_buffer_header@@Base>:
   32b5c:	push	{r4, sl, fp, lr}
   32b60:	add	fp, sp, #8
   32b64:	sub	sp, sp, #8
   32b68:	mov	r4, r0
   32b6c:	mov	r0, #5
   32b70:	tst	r4, #3
   32b74:	bne	32bc8 <flatcc_verify_buffer_header@@Base+0x6c>
   32b78:	mov	r0, #6
   32b7c:	cmn	r1, #9
   32b80:	bhi	32bc8 <flatcc_verify_buffer_header@@Base+0x6c>
   32b84:	mov	r0, #1
   32b88:	cmp	r1, #8
   32b8c:	bcc	32bc8 <flatcc_verify_buffer_header@@Base+0x6c>
   32b90:	cmp	r2, #0
   32b94:	beq	32bd0 <flatcc_verify_buffer_header@@Base+0x74>
   32b98:	mov	r0, #0
   32b9c:	mov	r1, r2
   32ba0:	mov	r2, #4
   32ba4:	str	r0, [sp, #4]
   32ba8:	add	r0, sp, #4
   32bac:	bl	14ef4 <strncpy@plt>
   32bb0:	ldr	r1, [sp, #4]
   32bb4:	cmp	r1, #0
   32bb8:	ldrne	r2, [r4, #4]
   32bbc:	movne	r0, #2
   32bc0:	cmpne	r2, r1
   32bc4:	moveq	r0, #0
   32bc8:	sub	sp, fp, #8
   32bcc:	pop	{r4, sl, fp, pc}
   32bd0:	mov	r0, #0
   32bd4:	sub	sp, fp, #8
   32bd8:	pop	{r4, sl, fp, pc}

00032bdc <flatcc_verify_typed_buffer_header@@Base>:
   32bdc:	mov	r3, r0
   32be0:	mov	r0, #5
   32be4:	tst	r3, #3
   32be8:	bne	32c1c <flatcc_verify_typed_buffer_header@@Base+0x40>
   32bec:	mov	r0, #6
   32bf0:	cmn	r1, #9
   32bf4:	bhi	32c1c <flatcc_verify_typed_buffer_header@@Base+0x40>
   32bf8:	mov	r0, #1
   32bfc:	cmp	r1, #8
   32c00:	bxcc	lr
   32c04:	cmp	r2, #0
   32c08:	beq	32c20 <flatcc_verify_typed_buffer_header@@Base+0x44>
   32c0c:	ldr	r1, [r3, #4]
   32c10:	mov	r0, #2
   32c14:	cmp	r1, r2
   32c18:	moveq	r0, #0
   32c1c:	bx	lr
   32c20:	mov	r0, #0
   32c24:	bx	lr

00032c28 <flatcc_verify_struct_as_root@@Base>:
   32c28:	push	{r4, r5, r6, r7, fp, lr}
   32c2c:	add	fp, sp, #16
   32c30:	sub	sp, sp, #8
   32c34:	mov	r5, r0
   32c38:	mov	r0, #5
   32c3c:	tst	r5, #3
   32c40:	bne	32cd8 <flatcc_verify_struct_as_root@@Base+0xb0>
   32c44:	mov	r4, r1
   32c48:	mov	r0, #6
   32c4c:	cmn	r1, #9
   32c50:	bhi	32cd8 <flatcc_verify_struct_as_root@@Base+0xb0>
   32c54:	mov	r0, #1
   32c58:	cmp	r4, #8
   32c5c:	bcc	32cd8 <flatcc_verify_struct_as_root@@Base+0xb0>
   32c60:	mov	r6, r3
   32c64:	mov	r7, r2
   32c68:	cmp	r2, #0
   32c6c:	beq	32c9c <flatcc_verify_struct_as_root@@Base+0x74>
   32c70:	mov	r0, #0
   32c74:	mov	r1, r7
   32c78:	mov	r2, #4
   32c7c:	str	r0, [sp]
   32c80:	mov	r0, sp
   32c84:	bl	14ef4 <strncpy@plt>
   32c88:	ldr	r0, [sp]
   32c8c:	cmp	r0, #0
   32c90:	ldrne	r1, [r5, #4]
   32c94:	cmpne	r1, r0
   32c98:	bne	32ce0 <flatcc_verify_struct_as_root@@Base+0xb8>
   32c9c:	ldr	r1, [r5]
   32ca0:	mov	r0, #18
   32ca4:	sub	r2, r1, #1
   32ca8:	cmp	r2, r4
   32cac:	bcs	32cd8 <flatcc_verify_struct_as_root@@Base+0xb0>
   32cb0:	adds	r2, r1, r6
   32cb4:	mov	r0, #10
   32cb8:	bcs	32cd8 <flatcc_verify_struct_as_root@@Base+0xb0>
   32cbc:	mov	r0, #9
   32cc0:	cmp	r2, r4
   32cc4:	bhi	32cd8 <flatcc_verify_struct_as_root@@Base+0xb0>
   32cc8:	ldr	r0, [fp, #8]
   32ccc:	sub	r0, r0, #1
   32cd0:	ands	r0, r1, r0
   32cd4:	movwne	r0, #11
   32cd8:	sub	sp, fp, #16
   32cdc:	pop	{r4, r5, r6, r7, fp, pc}
   32ce0:	mov	r0, #0
   32ce4:	mov	r1, r7
   32ce8:	mov	r2, #4
   32cec:	str	r0, [sp, #4]
   32cf0:	add	r0, sp, #4
   32cf4:	bl	14ef4 <strncpy@plt>
   32cf8:	ldr	r1, [sp, #4]
   32cfc:	ldr	r0, [r5, #4]
   32d00:	subs	r0, r0, r1
   32d04:	movwne	r0, #2
   32d08:	cmp	r1, #0
   32d0c:	moveq	r0, r1
   32d10:	sub	sp, fp, #16
   32d14:	pop	{r4, r5, r6, r7, fp, pc}

00032d18 <flatcc_verify_struct_as_typed_root@@Base>:
   32d18:	push	{fp, lr}
   32d1c:	mov	fp, sp
   32d20:	mov	ip, r0
   32d24:	mov	r0, #5
   32d28:	tst	ip, #3
   32d2c:	bne	32d9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32d30:	mov	r0, #6
   32d34:	cmn	r1, #9
   32d38:	bhi	32d9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32d3c:	mov	r0, #1
   32d40:	cmp	r1, #8
   32d44:	bcc	32d9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32d48:	cmp	r2, #0
   32d4c:	beq	32d60 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   32d50:	ldr	lr, [ip, #4]
   32d54:	mov	r0, #2
   32d58:	cmp	lr, r2
   32d5c:	bne	32d9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32d60:	ldr	ip, [ip]
   32d64:	mov	r0, #18
   32d68:	sub	r2, ip, #1
   32d6c:	cmp	r2, r1
   32d70:	bcs	32d9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32d74:	adds	r3, ip, r3
   32d78:	mov	r0, #10
   32d7c:	bcs	32d9c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32d80:	mov	r0, #9
   32d84:	cmp	r3, r1
   32d88:	pophi	{fp, pc}
   32d8c:	ldr	r0, [fp, #8]
   32d90:	sub	r0, r0, #1
   32d94:	ands	r0, ip, r0
   32d98:	movwne	r0, #11
   32d9c:	pop	{fp, pc}

00032da0 <flatcc_verify_table_as_root@@Base>:
   32da0:	push	{r4, r5, r6, r7, fp, lr}
   32da4:	add	fp, sp, #16
   32da8:	sub	sp, sp, #24
   32dac:	mov	r4, r0
   32db0:	mov	r0, #5
   32db4:	tst	r4, #3
   32db8:	bne	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32dbc:	mov	r6, r1
   32dc0:	mov	r0, #6
   32dc4:	cmn	r1, #9
   32dc8:	bhi	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32dcc:	mov	r0, #1
   32dd0:	cmp	r6, #8
   32dd4:	bcc	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32dd8:	mov	r5, r3
   32ddc:	mov	r7, r2
   32de0:	cmp	r2, #0
   32de4:	beq	32e14 <flatcc_verify_table_as_root@@Base+0x74>
   32de8:	mov	r0, #0
   32dec:	mov	r1, r7
   32df0:	mov	r2, #4
   32df4:	str	r0, [sp]
   32df8:	mov	r0, sp
   32dfc:	bl	14ef4 <strncpy@plt>
   32e00:	ldr	r0, [sp]
   32e04:	cmp	r0, #0
   32e08:	ldrne	r1, [r4, #4]
   32e0c:	cmpne	r1, r0
   32e10:	bne	32ecc <flatcc_verify_table_as_root@@Base+0x12c>
   32e14:	ldr	r1, [r4]
   32e18:	mov	r0, #99	; 0x63
   32e1c:	str	r0, [sp, #8]
   32e20:	mov	r0, #15
   32e24:	tst	r1, #3
   32e28:	bne	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e2c:	cmp	r1, #0
   32e30:	beq	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e34:	add	r2, r1, #4
   32e38:	cmp	r2, r6
   32e3c:	bhi	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e40:	str	r1, [sp, #16]
   32e44:	ldr	r0, [r4, r1]
   32e48:	sub	r7, r1, r0
   32e4c:	mov	r0, #29
   32e50:	tst	r7, #-2147483647	; 0x80000001
   32e54:	bne	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e58:	add	r3, r7, #2
   32e5c:	mov	r0, #27
   32e60:	cmp	r3, r6
   32e64:	bhi	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e68:	mov	ip, r4
   32e6c:	mov	r0, #30
   32e70:	ldrh	r2, [ip, r7]!
   32e74:	tst	r2, #1
   32e78:	strh	r2, [sp, #22]
   32e7c:	bne	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e80:	add	r7, r7, r2
   32e84:	cmp	r7, r6
   32e88:	bhi	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e8c:	mov	r0, #28
   32e90:	cmp	r2, #4
   32e94:	bcc	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32e98:	add	r0, r4, r3
   32e9c:	sub	r1, r6, r1
   32ea0:	ldrh	r2, [r0]
   32ea4:	mov	r0, #20
   32ea8:	cmp	r1, r2
   32eac:	strh	r2, [sp, #20]
   32eb0:	bcc	32ec4 <flatcc_verify_table_as_root@@Base+0x124>
   32eb4:	mov	r0, sp
   32eb8:	str	ip, [sp, #12]
   32ebc:	stm	sp, {r4, r6}
   32ec0:	blx	r5
   32ec4:	sub	sp, fp, #16
   32ec8:	pop	{r4, r5, r6, r7, fp, pc}
   32ecc:	mov	r0, #0
   32ed0:	mov	r1, r7
   32ed4:	mov	r2, #4
   32ed8:	str	r0, [sp]
   32edc:	mov	r0, sp
   32ee0:	bl	14ef4 <strncpy@plt>
   32ee4:	ldr	r1, [sp]
   32ee8:	ldr	r0, [r4, #4]
   32eec:	subs	r0, r0, r1
   32ef0:	movwne	r0, #2
   32ef4:	cmp	r1, #0
   32ef8:	moveq	r0, r1
   32efc:	sub	sp, fp, #16
   32f00:	pop	{r4, r5, r6, r7, fp, pc}

00032f04 <flatcc_verify_table_as_typed_root@@Base>:
   32f04:	push	{r4, r5, r6, sl, fp, lr}
   32f08:	add	fp, sp, #16
   32f0c:	sub	sp, sp, #24
   32f10:	mov	ip, #5
   32f14:	tst	r0, #3
   32f18:	bne	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f1c:	mov	ip, #6
   32f20:	cmn	r1, #9
   32f24:	bhi	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f28:	mov	ip, #1
   32f2c:	cmp	r1, #8
   32f30:	bcc	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f34:	cmp	r2, #0
   32f38:	beq	32f4c <flatcc_verify_table_as_typed_root@@Base+0x48>
   32f3c:	ldr	r6, [r0, #4]
   32f40:	mov	ip, #2
   32f44:	cmp	r6, r2
   32f48:	bne	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f4c:	ldr	r2, [r0]
   32f50:	mov	r6, #99	; 0x63
   32f54:	mov	ip, #15
   32f58:	str	r6, [sp, #8]
   32f5c:	tst	r2, #3
   32f60:	bne	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f64:	cmp	r2, #0
   32f68:	beq	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f6c:	add	r6, r2, #4
   32f70:	cmp	r6, r1
   32f74:	bhi	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f78:	str	r2, [sp, #16]
   32f7c:	mov	ip, #29
   32f80:	ldr	r6, [r0, r2]
   32f84:	sub	r5, r2, r6
   32f88:	tst	r5, #-2147483647	; 0x80000001
   32f8c:	bne	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32f90:	add	r4, r5, #2
   32f94:	mov	ip, #27
   32f98:	cmp	r4, r1
   32f9c:	bhi	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32fa0:	mov	lr, r0
   32fa4:	mov	ip, #30
   32fa8:	ldrh	r6, [lr, r5]!
   32fac:	tst	r6, #1
   32fb0:	strh	r6, [sp, #22]
   32fb4:	bne	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32fb8:	add	r5, r5, r6
   32fbc:	cmp	r5, r1
   32fc0:	bhi	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32fc4:	mov	ip, #28
   32fc8:	cmp	r6, #4
   32fcc:	bcc	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32fd0:	add	r6, r0, r4
   32fd4:	sub	r2, r1, r2
   32fd8:	mov	ip, #20
   32fdc:	ldrh	r4, [r6]
   32fe0:	cmp	r2, r4
   32fe4:	strh	r4, [sp, #20]
   32fe8:	bcc	33000 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32fec:	str	lr, [sp, #12]
   32ff0:	stm	sp, {r0, r1}
   32ff4:	mov	r0, sp
   32ff8:	blx	r3
   32ffc:	mov	ip, r0
   33000:	mov	r0, ip
   33004:	sub	sp, fp, #16
   33008:	pop	{r4, r5, r6, sl, fp, pc}

0003300c <flatcc_verify_struct_as_nested_root@@Base>:
   3300c:	push	{r4, r5, r6, sl, fp, lr}
   33010:	add	fp, sp, #16
   33014:	sub	sp, sp, #8
   33018:	ldrh	r5, [r0, #22]
   3301c:	mov	r6, #4
   33020:	ldr	lr, [fp, #12]
   33024:	add	r1, r6, r1, lsl #1
   33028:	uxth	r4, r1
   3302c:	cmp	r4, r5
   33030:	bcs	330b4 <flatcc_verify_struct_as_nested_root@@Base+0xa8>
   33034:	ldr	ip, [r0, #12]
   33038:	ldrh	r6, [ip, r4]!
   3303c:	cmp	r6, #0
   33040:	beq	330b4 <flatcc_verify_struct_as_nested_root@@Base+0xa8>
   33044:	ldrh	r1, [r0, #20]
   33048:	add	r4, r6, #4
   3304c:	cmp	r4, r1
   33050:	bhi	330cc <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   33054:	ldr	r1, [r0, #16]
   33058:	add	r5, r1, r6
   3305c:	tst	r5, #3
   33060:	bne	330cc <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   33064:	cmp	r5, #0
   33068:	beq	33178 <flatcc_verify_struct_as_nested_root@@Base+0x16c>
   3306c:	ldr	r1, [r0]
   33070:	ldr	r4, [r1, r5]
   33074:	add	r4, r4, r5
   33078:	cmp	r4, r5
   3307c:	bls	330cc <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   33080:	ldr	r5, [r0, #4]
   33084:	add	r6, r4, #4
   33088:	cmp	r6, r5
   3308c:	bhi	330cc <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   33090:	ands	r6, r6, #3
   33094:	bne	330cc <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   33098:	ldr	r1, [r1, r4]
   3309c:	sub	r5, r5, #4
   330a0:	sub	r5, r5, r4
   330a4:	mul	r1, r1, lr
   330a8:	cmp	r5, r1
   330ac:	bcc	330cc <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   330b0:	b	33178 <flatcc_verify_struct_as_nested_root@@Base+0x16c>
   330b4:	cmp	r2, #0
   330b8:	beq	33164 <flatcc_verify_struct_as_nested_root@@Base+0x158>
   330bc:	cmp	r4, r5
   330c0:	bcs	33158 <flatcc_verify_struct_as_nested_root@@Base+0x14c>
   330c4:	ldr	r3, [r0, #12]
   330c8:	uxtah	ip, r3, r1
   330cc:	ldrh	r1, [ip]
   330d0:	cmp	r1, #0
   330d4:	beq	33158 <flatcc_verify_struct_as_nested_root@@Base+0x14c>
   330d8:	ldrh	r3, [r0, #20]
   330dc:	add	r6, r1, #4
   330e0:	mov	r2, #13
   330e4:	cmp	r6, r3
   330e8:	bhi	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   330ec:	ldr	r2, [r0, #16]
   330f0:	add	r6, r2, r1
   330f4:	mov	r2, #12
   330f8:	tst	r6, #3
   330fc:	bne	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33100:	cmp	r6, #0
   33104:	beq	331cc <flatcc_verify_struct_as_nested_root@@Base+0x1c0>
   33108:	ldr	r1, [r0]
   3310c:	ldr	r2, [r1, r6]
   33110:	add	r3, r2, r6
   33114:	mov	r2, #16
   33118:	cmp	r3, r6
   3311c:	bls	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33120:	ldr	r0, [r0, #4]
   33124:	add	r6, r3, #4
   33128:	cmp	r6, r0
   3312c:	bhi	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33130:	ands	r6, r6, #3
   33134:	bne	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33138:	ldr	r1, [r1, r3]
   3313c:	sub	r0, r0, #4
   33140:	mov	r2, #0
   33144:	sub	r0, r0, r3
   33148:	mul	r1, r1, lr
   3314c:	cmp	r0, r1
   33150:	movwcc	r2, #26
   33154:	b	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33158:	cmp	r2, #0
   3315c:	movwne	r2, #4
   33160:	b	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33164:	mov	r2, #0
   33168:	cmp	r4, r5
   3316c:	bcs	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>
   33170:	ldr	r2, [r0, #12]
   33174:	uxtah	ip, r2, r1
   33178:	ldrh	r1, [ip]
   3317c:	mov	r2, #0
   33180:	cmp	r1, #0
   33184:	ldrne	r6, [r0]
   33188:	ldrne	r0, [r0, #16]
   3318c:	addne	r0, r6, r0
   33190:	addsne	r0, r0, r1
   33194:	bne	331a4 <flatcc_verify_struct_as_nested_root@@Base+0x198>
   33198:	mov	r0, r2
   3319c:	sub	sp, fp, #16
   331a0:	pop	{r4, r5, r6, sl, fp, pc}
   331a4:	ldr	r2, [r0]
   331a8:	ldr	ip, [fp, #8]
   331ac:	ldr	r1, [r2, r0]!
   331b0:	str	lr, [sp]
   331b4:	add	r0, r2, #4
   331b8:	mov	r2, r3
   331bc:	mov	r3, ip
   331c0:	bl	32c28 <flatcc_verify_struct_as_root@@Base>
   331c4:	sub	sp, fp, #16
   331c8:	pop	{r4, r5, r6, sl, fp, pc}
   331cc:	mov	r2, #0
   331d0:	b	33198 <flatcc_verify_struct_as_nested_root@@Base+0x18c>

000331d4 <flatcc_verify_table_as_nested_root@@Base>:
   331d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   331d8:	add	fp, sp, #24
   331dc:	sub	sp, sp, #24
   331e0:	mov	r4, r0
   331e4:	mov	r0, #4
   331e8:	ldr	ip, [fp, #8]
   331ec:	mov	r5, r3
   331f0:	ldrh	r6, [r4, #22]
   331f4:	add	r3, r0, r1, lsl #1
   331f8:	uxth	r7, r3
   331fc:	cmp	r7, r6
   33200:	bcs	33284 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   33204:	ldr	r1, [r4, #12]
   33208:	ldrh	r0, [r1, r7]!
   3320c:	cmp	r0, #0
   33210:	beq	33284 <flatcc_verify_table_as_nested_root@@Base+0xb0>
   33214:	ldrh	r3, [r4, #20]
   33218:	add	r7, r0, #4
   3321c:	cmp	r7, r3
   33220:	bhi	3329c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33224:	ldr	r3, [r4, #16]
   33228:	add	r0, r3, r0
   3322c:	tst	r0, #3
   33230:	bne	3329c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33234:	cmp	r0, #0
   33238:	beq	33348 <flatcc_verify_table_as_nested_root@@Base+0x174>
   3323c:	ldr	r3, [r4]
   33240:	ldr	r7, [r3, r0]
   33244:	add	r7, r7, r0
   33248:	cmp	r7, r0
   3324c:	bls	3329c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33250:	ldr	r0, [r4, #4]
   33254:	add	r6, r7, #4
   33258:	cmp	r6, r0
   3325c:	bhi	3329c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33260:	ands	r6, r6, #3
   33264:	bne	3329c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33268:	ldr	r3, [r3, r7]
   3326c:	sub	r0, r0, #4
   33270:	sub	r0, r0, r7
   33274:	mul	r3, r3, ip
   33278:	cmp	r0, r3
   3327c:	bcc	3329c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33280:	b	33348 <flatcc_verify_table_as_nested_root@@Base+0x174>
   33284:	cmp	r2, #0
   33288:	beq	33334 <flatcc_verify_table_as_nested_root@@Base+0x160>
   3328c:	cmp	r7, r6
   33290:	bcs	33328 <flatcc_verify_table_as_nested_root@@Base+0x154>
   33294:	ldr	r0, [r4, #12]
   33298:	uxtah	r1, r0, r3
   3329c:	ldrh	r0, [r1]
   332a0:	cmp	r0, #0
   332a4:	beq	33328 <flatcc_verify_table_as_nested_root@@Base+0x154>
   332a8:	ldrh	r1, [r4, #20]
   332ac:	add	r3, r0, #4
   332b0:	mov	r2, #13
   332b4:	cmp	r3, r1
   332b8:	bhi	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   332bc:	ldr	r1, [r4, #16]
   332c0:	mov	r2, #12
   332c4:	add	r0, r1, r0
   332c8:	tst	r0, #3
   332cc:	bne	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   332d0:	cmp	r0, #0
   332d4:	beq	3349c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   332d8:	ldr	r1, [r4]
   332dc:	ldr	r2, [r1, r0]
   332e0:	add	r3, r2, r0
   332e4:	mov	r2, #16
   332e8:	cmp	r3, r0
   332ec:	bls	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   332f0:	ldr	r0, [r4, #4]
   332f4:	add	r7, r3, #4
   332f8:	cmp	r7, r0
   332fc:	bhi	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33300:	ands	r7, r7, #3
   33304:	bne	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33308:	ldr	r1, [r1, r3]
   3330c:	sub	r0, r0, #4
   33310:	mov	r2, #0
   33314:	sub	r0, r0, r3
   33318:	mul	r1, r1, ip
   3331c:	cmp	r0, r1
   33320:	movwcc	r2, #26
   33324:	b	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33328:	cmp	r2, #0
   3332c:	movwne	r2, #4
   33330:	b	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33334:	mov	r2, #0
   33338:	cmp	r7, r6
   3333c:	bcs	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33340:	ldr	r0, [r4, #12]
   33344:	uxtah	r1, r0, r3
   33348:	ldrh	r0, [r1]
   3334c:	mov	r2, #0
   33350:	cmp	r0, #0
   33354:	ldrne	r1, [r4]
   33358:	ldrne	r3, [r4, #16]
   3335c:	addne	r1, r1, r3
   33360:	addsne	r0, r1, r0
   33364:	bne	33374 <flatcc_verify_table_as_nested_root@@Base+0x1a0>
   33368:	mov	r0, r2
   3336c:	sub	sp, fp, #24
   33370:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33374:	ldr	r6, [r0]
   33378:	mov	r2, #5
   3337c:	ldr	r8, [r6, r0]!
   33380:	add	r7, r6, #4
   33384:	tst	r7, #3
   33388:	bne	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3338c:	mov	r2, #6
   33390:	cmn	r8, #9
   33394:	bhi	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33398:	mov	r2, #1
   3339c:	cmp	r8, #8
   333a0:	bcc	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   333a4:	cmp	r5, #0
   333a8:	beq	333d8 <flatcc_verify_table_as_nested_root@@Base+0x204>
   333ac:	mov	r0, #0
   333b0:	mov	r1, r5
   333b4:	mov	r2, #4
   333b8:	str	r0, [sp]
   333bc:	mov	r0, sp
   333c0:	bl	14ef4 <strncpy@plt>
   333c4:	ldr	r0, [sp]
   333c8:	cmp	r0, #0
   333cc:	ldrne	r1, [r6, #8]
   333d0:	cmpne	r1, r0
   333d4:	bne	334a4 <flatcc_verify_table_as_nested_root@@Base+0x2d0>
   333d8:	ldr	r1, [r4, #8]
   333dc:	ldr	r0, [r7]
   333e0:	subs	r1, r1, #1
   333e4:	str	r1, [sp, #8]
   333e8:	beq	334dc <flatcc_verify_table_as_nested_root@@Base+0x308>
   333ec:	mov	r2, #15
   333f0:	tst	r0, #3
   333f4:	bne	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   333f8:	cmp	r0, #0
   333fc:	beq	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33400:	add	r1, r0, #4
   33404:	cmp	r1, r8
   33408:	bhi	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3340c:	str	r0, [sp, #16]
   33410:	mov	r2, #29
   33414:	ldr	r1, [r7, r0]
   33418:	sub	r6, r0, r1
   3341c:	tst	r6, #-2147483647	; 0x80000001
   33420:	bne	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33424:	add	r3, r6, #2
   33428:	mov	r2, #27
   3342c:	cmp	r3, r8
   33430:	bhi	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33434:	mov	r1, r7
   33438:	mov	r2, #30
   3343c:	ldrh	r5, [r1, r6]!
   33440:	tst	r5, #1
   33444:	strh	r5, [sp, #22]
   33448:	bne	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3344c:	add	r6, r6, r5
   33450:	cmp	r6, r8
   33454:	bhi	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33458:	mov	r2, #28
   3345c:	cmp	r5, #4
   33460:	bcc	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33464:	add	r2, r7, r3
   33468:	sub	r0, r8, r0
   3346c:	ldrh	r3, [r2]
   33470:	mov	r2, #20
   33474:	cmp	r0, r3
   33478:	strh	r3, [sp, #20]
   3347c:	bcc	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   33480:	ldr	r2, [fp, #12]
   33484:	mov	r0, sp
   33488:	str	r1, [sp, #12]
   3348c:	stm	sp, {r7, r8}
   33490:	blx	r2
   33494:	mov	r2, r0
   33498:	b	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   3349c:	mov	r2, #0
   334a0:	b	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>
   334a4:	mov	r0, #0
   334a8:	mov	r1, r5
   334ac:	mov	r2, #4
   334b0:	str	r0, [sp]
   334b4:	mov	r0, sp
   334b8:	bl	14ef4 <strncpy@plt>
   334bc:	ldr	r1, [sp]
   334c0:	ldr	r0, [r6, #8]
   334c4:	subs	r0, r0, r1
   334c8:	movwne	r0, #2
   334cc:	cmp	r1, #0
   334d0:	moveq	r0, r1
   334d4:	sub	sp, fp, #24
   334d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   334dc:	mov	r2, #3
   334e0:	b	33368 <flatcc_verify_table_as_nested_root@@Base+0x194>

000334e4 <flatcc_verify_union_field@@Base>:
   334e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   334e8:	add	fp, sp, #28
   334ec:	sub	sp, sp, #28
   334f0:	ldrh	r4, [r0, #22]
   334f4:	mov	r7, #2
   334f8:	lsl	r5, r1, #1
   334fc:	add	r7, r7, r1, lsl #1
   33500:	uxth	r6, r7
   33504:	cmp	r6, r4
   33508:	bcs	335fc <flatcc_verify_union_field@@Base+0x118>
   3350c:	ldr	r6, [r0, #12]
   33510:	uxtah	r1, r6, r7
   33514:	ldrh	ip, [r1]
   33518:	cmp	ip, #0
   3351c:	beq	335fc <flatcc_verify_union_field@@Base+0x118>
   33520:	ldrh	r7, [r0, #20]
   33524:	mov	r1, #13
   33528:	cmp	ip, r7
   3352c:	bcs	33630 <flatcc_verify_union_field@@Base+0x14c>
   33530:	add	r7, r5, #4
   33534:	ldr	lr, [r0]
   33538:	ldr	r9, [r0, #16]
   3353c:	mov	r1, #1
   33540:	uxth	sl, r7
   33544:	cmp	sl, r4
   33548:	uxtahcc	r1, r6, r7
   3354c:	ldrhcc	r1, [r1]
   33550:	add	r8, lr, r9
   33554:	ldrb	r5, [r8, ip]
   33558:	clzcc	r1, r1
   3355c:	lsrcc	r1, r1, #5
   33560:	cmp	r1, #0
   33564:	moveq	r1, #24
   33568:	cmpeq	r5, #0
   3356c:	beq	33630 <flatcc_verify_union_field@@Base+0x14c>
   33570:	mov	r1, #0
   33574:	cmp	r5, #0
   33578:	beq	33630 <flatcc_verify_union_field@@Base+0x14c>
   3357c:	cmp	sl, r4
   33580:	bcs	3363c <flatcc_verify_union_field@@Base+0x158>
   33584:	uxtah	r1, r6, r7
   33588:	ldrh	r4, [r1]
   3358c:	cmp	r4, #0
   33590:	beq	3363c <flatcc_verify_union_field@@Base+0x158>
   33594:	ldrh	r1, [r0, #20]
   33598:	add	r2, r4, #4
   3359c:	cmp	r2, r1
   335a0:	mov	r1, #13
   335a4:	bhi	33630 <flatcc_verify_union_field@@Base+0x14c>
   335a8:	add	r2, r9, r4
   335ac:	mov	r1, #12
   335b0:	tst	r2, #3
   335b4:	bne	33630 <flatcc_verify_union_field@@Base+0x14c>
   335b8:	cmp	r2, #0
   335bc:	mov	r1, #0
   335c0:	beq	33630 <flatcc_verify_union_field@@Base+0x14c>
   335c4:	str	lr, [sp, #4]
   335c8:	ldr	r1, [r0, #4]
   335cc:	ldr	r0, [r0, #8]
   335d0:	str	r1, [sp, #8]
   335d4:	str	r2, [sp, #20]
   335d8:	str	r0, [sp, #12]
   335dc:	ldr	r0, [lr, r2]
   335e0:	str	r0, [sp, #24]
   335e4:	ldrb	r0, [r8, ip]
   335e8:	strb	r0, [sp, #16]
   335ec:	add	r0, sp, #4
   335f0:	blx	r3
   335f4:	mov	r1, r0
   335f8:	b	33630 <flatcc_verify_union_field@@Base+0x14c>
   335fc:	add	r1, r5, #4
   33600:	uxth	r3, r1
   33604:	cmp	r3, r4
   33608:	bcs	33624 <flatcc_verify_union_field@@Base+0x140>
   3360c:	ldr	r0, [r0, #12]
   33610:	uxtah	r0, r0, r1
   33614:	mov	r1, #23
   33618:	ldrh	r0, [r0]
   3361c:	cmp	r0, #0
   33620:	bne	33630 <flatcc_verify_union_field@@Base+0x14c>
   33624:	cmp	r2, #0
   33628:	movwne	r2, #21
   3362c:	mov	r1, r2
   33630:	mov	r0, r1
   33634:	sub	sp, fp, #28
   33638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3363c:	cmp	r2, #0
   33640:	movwne	r2, #4
   33644:	b	3362c <flatcc_verify_union_field@@Base+0x148>

00033648 <flatcc_verify_union_vector_field@@Base>:
   33648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3364c:	add	fp, sp, #28
   33650:	sub	sp, sp, #28
   33654:	mov	r9, r3
   33658:	mov	r3, #2
   3365c:	lsl	lr, r1, #1
   33660:	add	r6, r3, r1, lsl #1
   33664:	ldrh	r3, [r0, #22]
   33668:	uxth	r4, r6
   3366c:	cmp	r4, r3
   33670:	bcs	33688 <flatcc_verify_union_vector_field@@Base+0x40>
   33674:	ldr	r7, [r0, #12]
   33678:	mov	r1, r7
   3367c:	ldrh	r5, [r1, r4]!
   33680:	cmp	r5, #0
   33684:	bne	336d4 <flatcc_verify_union_vector_field@@Base+0x8c>
   33688:	add	r1, lr, #4
   3368c:	uxth	r7, r1
   33690:	cmp	r7, r3
   33694:	bcs	33740 <flatcc_verify_union_vector_field@@Base+0xf8>
   33698:	cmp	r2, #0
   3369c:	beq	336b8 <flatcc_verify_union_vector_field@@Base+0x70>
   336a0:	ldr	r7, [r0, #12]
   336a4:	uxtah	r1, r7, r1
   336a8:	ldrh	r7, [r1]
   336ac:	mov	r1, #22
   336b0:	cmp	r7, #0
   336b4:	beq	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   336b8:	cmp	r4, r3
   336bc:	bcs	33750 <flatcc_verify_union_vector_field@@Base+0x108>
   336c0:	ldr	r7, [r0, #12]
   336c4:	mov	r1, r7
   336c8:	ldrh	r5, [r1, r4]!
   336cc:	cmp	r5, #0
   336d0:	beq	33750 <flatcc_verify_union_vector_field@@Base+0x108>
   336d4:	ldrh	r6, [r0, #20]
   336d8:	add	r4, r5, #4
   336dc:	cmp	r4, r6
   336e0:	bhi	33768 <flatcc_verify_union_vector_field@@Base+0x120>
   336e4:	ldr	r6, [r0, #16]
   336e8:	add	r4, r6, r5
   336ec:	tst	r4, #3
   336f0:	bne	33768 <flatcc_verify_union_vector_field@@Base+0x120>
   336f4:	cmp	r4, #0
   336f8:	beq	33804 <flatcc_verify_union_vector_field@@Base+0x1bc>
   336fc:	ldr	r6, [r0]
   33700:	ldr	r5, [r6, r4]
   33704:	add	r5, r5, r4
   33708:	cmp	r5, r4
   3370c:	bls	33768 <flatcc_verify_union_vector_field@@Base+0x120>
   33710:	ldr	ip, [r0, #4]
   33714:	add	r4, r5, #4
   33718:	cmp	r4, ip
   3371c:	bhi	33768 <flatcc_verify_union_vector_field@@Base+0x120>
   33720:	ands	r4, r4, #3
   33724:	bne	33768 <flatcc_verify_union_vector_field@@Base+0x120>
   33728:	ldr	r4, [r6, r5]
   3372c:	sub	r6, ip, #4
   33730:	sub	r6, r6, r5
   33734:	cmp	r6, r4
   33738:	bcc	33768 <flatcc_verify_union_vector_field@@Base+0x120>
   3373c:	b	33804 <flatcc_verify_union_vector_field@@Base+0x1bc>
   33740:	mov	r1, #22
   33744:	cmp	r2, #0
   33748:	bne	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   3374c:	b	336b8 <flatcc_verify_union_vector_field@@Base+0x70>
   33750:	cmp	r2, #0
   33754:	beq	337f0 <flatcc_verify_union_vector_field@@Base+0x1a8>
   33758:	cmp	r4, r3
   3375c:	bcs	3396c <flatcc_verify_union_vector_field@@Base+0x324>
   33760:	ldr	r1, [r0, #12]
   33764:	uxtah	r1, r1, r6
   33768:	ldrh	r3, [r1]
   3376c:	cmp	r3, #0
   33770:	beq	3396c <flatcc_verify_union_vector_field@@Base+0x324>
   33774:	ldrh	r2, [r0, #20]
   33778:	add	r7, r3, #4
   3377c:	mov	r1, #13
   33780:	cmp	r7, r2
   33784:	bhi	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33788:	ldr	r1, [r0, #16]
   3378c:	add	r7, r1, r3
   33790:	mov	r1, #12
   33794:	tst	r7, #3
   33798:	bne	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   3379c:	cmp	r7, #0
   337a0:	beq	33984 <flatcc_verify_union_vector_field@@Base+0x33c>
   337a4:	ldr	r2, [r0]
   337a8:	ldr	r1, [r2, r7]
   337ac:	add	r3, r1, r7
   337b0:	mov	r1, #16
   337b4:	cmp	r3, r7
   337b8:	bls	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   337bc:	ldr	r0, [r0, #4]
   337c0:	add	r7, r3, #4
   337c4:	cmp	r7, r0
   337c8:	bhi	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   337cc:	ands	r7, r7, #3
   337d0:	bne	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   337d4:	ldr	r2, [r2, r3]
   337d8:	sub	r0, r0, #4
   337dc:	mov	r1, #0
   337e0:	sub	r0, r0, r3
   337e4:	cmp	r0, r2
   337e8:	movwcc	r1, #26
   337ec:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   337f0:	mov	r1, #0
   337f4:	cmp	r4, r3
   337f8:	bcs	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   337fc:	ldr	r7, [r0, #12]
   33800:	uxtah	r1, r7, r6
   33804:	ldrh	r5, [r1]
   33808:	mov	r1, #0
   3380c:	cmp	r5, #0
   33810:	ldrne	r8, [r0]
   33814:	ldrne	r6, [r0, #16]
   33818:	addne	r4, r8, r6
   3381c:	addsne	ip, r4, r5
   33820:	beq	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33824:	add	r1, lr, #4
   33828:	uxth	r5, r1
   3382c:	cmp	r5, r3
   33830:	bcs	3396c <flatcc_verify_union_vector_field@@Base+0x324>
   33834:	uxtah	r1, r7, r1
   33838:	ldrh	r3, [r1]
   3383c:	cmp	r3, #0
   33840:	beq	3396c <flatcc_verify_union_vector_field@@Base+0x324>
   33844:	ldrh	r2, [r0, #20]
   33848:	add	r7, r3, #4
   3384c:	mov	r1, #13
   33850:	cmp	r7, r2
   33854:	bhi	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33858:	add	r4, r6, r3
   3385c:	mov	r1, #12
   33860:	tst	r4, #3
   33864:	bne	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33868:	cmp	r4, #0
   3386c:	mov	r1, #0
   33870:	beq	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33874:	ldr	r7, [r0, #8]
   33878:	cmp	r7, #1
   3387c:	blt	3398c <flatcc_verify_union_vector_field@@Base+0x344>
   33880:	ldr	r2, [r8, r4]
   33884:	mov	r1, #16
   33888:	add	r5, r2, r4
   3388c:	cmp	r5, r4
   33890:	bls	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33894:	ldr	r0, [r0, #4]
   33898:	add	r4, r5, #4
   3389c:	cmp	r4, r0
   338a0:	bhi	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   338a4:	ands	r4, r4, #3
   338a8:	bne	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   338ac:	ldr	r4, [r8, r5]
   338b0:	mov	r1, #25
   338b4:	cmn	r4, #-1073741823	; 0xc0000001
   338b8:	bhi	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   338bc:	sub	r1, r0, #4
   338c0:	sub	r5, r1, r5
   338c4:	mov	r1, #26
   338c8:	cmp	r5, r4, lsl #2
   338cc:	bcc	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   338d0:	ldr	r5, [ip]
   338d4:	mov	r1, #34	; 0x22
   338d8:	ldr	sl, [r5, ip]!
   338dc:	cmp	r4, sl
   338e0:	bne	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   338e4:	cmp	sl, #0
   338e8:	sub	r1, r7, #1
   338ec:	str	r0, [sp, #8]
   338f0:	str	r8, [sp, #4]
   338f4:	str	r1, [sp, #12]
   338f8:	beq	33984 <flatcc_verify_union_vector_field@@Base+0x33c>
   338fc:	add	r0, r2, r6
   33900:	add	r7, r5, #4
   33904:	mov	r5, #0
   33908:	add	r4, sp, #4
   3390c:	add	r0, r0, r3
   33910:	add	r6, r0, #4
   33914:	ldr	r1, [r8, r6]
   33918:	ldrb	r0, [r7, r5]
   3391c:	cmp	r1, #0
   33920:	beq	3394c <flatcc_verify_union_vector_field@@Base+0x304>
   33924:	cmp	r0, #0
   33928:	beq	33994 <flatcc_verify_union_vector_field@@Base+0x34c>
   3392c:	str	r6, [sp, #20]
   33930:	strb	r0, [sp, #16]
   33934:	mov	r0, r4
   33938:	str	r1, [sp, #24]
   3393c:	blx	r9
   33940:	cmp	r0, #0
   33944:	beq	33954 <flatcc_verify_union_vector_field@@Base+0x30c>
   33948:	b	3399c <flatcc_verify_union_vector_field@@Base+0x354>
   3394c:	cmp	r0, #0
   33950:	bne	339ac <flatcc_verify_union_vector_field@@Base+0x364>
   33954:	add	r5, r5, #1
   33958:	add	r6, r6, #4
   3395c:	mov	r1, #0
   33960:	cmp	r5, sl
   33964:	bcc	33914 <flatcc_verify_union_vector_field@@Base+0x2cc>
   33968:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   3396c:	cmp	r2, #0
   33970:	movwne	r2, #4
   33974:	mov	r1, r2
   33978:	mov	r0, r1
   3397c:	sub	sp, fp, #28
   33980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33984:	mov	r1, #0
   33988:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   3398c:	mov	r1, #3
   33990:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   33994:	mov	r1, #33	; 0x21
   33998:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   3399c:	add	r0, sp, #4
   339a0:	blx	r9
   339a4:	mov	r1, r0
   339a8:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   339ac:	mov	r1, #32
   339b0:	b	33978 <flatcc_verify_union_vector_field@@Base+0x330>
   339b4:	andeq	r0, r0, r0

000339b8 <grisu3_diy_fp_encode_double@@Base>:
   339b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   339bc:	add	fp, sp, #28
   339c0:	sub	sp, sp, #12
   339c4:	ldr	lr, [fp, #8]
   339c8:	orr	r7, r0, r1
   339cc:	cmp	lr, #0
   339d0:	movwne	lr, #4
   339d4:	cmp	r7, #0
   339d8:	beq	33dc0 <grisu3_diy_fp_encode_double@@Base+0x408>
   339dc:	mov	ip, #0
   339e0:	mov	r5, #0
   339e4:	cmp	ip, r1, lsr #22
   339e8:	bne	33a08 <grisu3_diy_fp_encode_double@@Base+0x50>
   339ec:	mov	ip, #0
   339f0:	lsl	r1, r1, #10
   339f4:	sub	ip, ip, #10
   339f8:	orr	r1, r1, r0, lsr #22
   339fc:	lsl	r0, r0, #10
   33a00:	cmp	r1, #4194304	; 0x400000
   33a04:	bcc	339f0 <grisu3_diy_fp_encode_double@@Base+0x38>
   33a08:	sub	r6, r2, r3
   33a0c:	mvn	r2, #0
   33a10:	cmp	r1, #0
   33a14:	blt	33a3c <grisu3_diy_fp_encode_double@@Base+0x84>
   33a18:	lsl	r1, r1, #1
   33a1c:	lsl	r4, r0, #1
   33a20:	sub	ip, ip, #1
   33a24:	orr	r1, r1, r0, lsr #31
   33a28:	subs	r0, r2, r0, lsl #1
   33a2c:	sbcs	r0, r2, r1
   33a30:	mov	r0, r4
   33a34:	blt	33a18 <grisu3_diy_fp_encode_double@@Base+0x60>
   33a38:	b	33a40 <grisu3_diy_fp_encode_double@@Base+0x88>
   33a3c:	mov	r4, r0
   33a40:	cmn	r6, #348	; 0x15c
   33a44:	blt	33de0 <grisu3_diy_fp_encode_double@@Base+0x428>
   33a48:	cmp	r6, #348	; 0x15c
   33a4c:	bge	33e00 <grisu3_diy_fp_encode_double@@Base+0x448>
   33a50:	ldr	r9, [pc, #1064]	; 33e80 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   33a54:	add	r0, r6, #348	; 0x15c
   33a58:	asr	r5, r0, #31
   33a5c:	add	r0, r0, r5, lsr #29
   33a60:	mvn	r5, #15
   33a64:	and	r0, r5, r0, lsl #1
   33a68:	add	r9, pc, r9
   33a6c:	ldr	r5, [r9, r0]!
   33a70:	ldrsh	r0, [r9, #10]
   33a74:	cmp	r6, r0
   33a78:	blt	33e20 <grisu3_diy_fp_encode_double@@Base+0x468>
   33a7c:	add	r7, r0, #8
   33a80:	cmp	r7, r6
   33a84:	ble	33e40 <grisu3_diy_fp_encode_double@@Base+0x488>
   33a88:	rsb	r7, ip, #0
   33a8c:	cmp	r6, r0
   33a90:	lsl	r8, lr, r7
   33a94:	beq	33b20 <grisu3_diy_fp_encode_double@@Base+0x168>
   33a98:	mvn	r0, r0
   33a9c:	str	r8, [sp, #4]
   33aa0:	str	r3, [sp, #8]
   33aa4:	add	sl, r6, r0
   33aa8:	cmp	sl, #7
   33aac:	bcs	33e60 <grisu3_diy_fp_encode_double@@Base+0x4a8>
   33ab0:	ldr	r0, [pc, #972]	; 33e84 <grisu3_diy_fp_encode_double@@Base+0x4cc>
   33ab4:	add	r0, pc, r0
   33ab8:	ldr	r7, [r0, sl, lsl #4]!
   33abc:	ldr	r8, [r0, #4]
   33ac0:	ldr	r0, [r0, #8]
   33ac4:	umull	lr, r6, r7, r1
   33ac8:	str	r0, [sp]
   33acc:	umull	r3, r0, r8, r4
   33ad0:	umaal	r6, r0, r8, r1
   33ad4:	umull	r1, r4, r7, r4
   33ad8:	ldr	r8, [sp, #4]
   33adc:	mov	r1, #0
   33ae0:	adds	r7, lr, r4
   33ae4:	adc	r1, r1, #0
   33ae8:	adds	r3, r7, r3
   33aec:	adc	r1, r1, #0
   33af0:	adds	r3, r3, #-2147483648	; 0x80000000
   33af4:	adc	r1, r1, #0
   33af8:	adds	r4, r6, r1
   33afc:	adc	r1, r0, #0
   33b00:	ldr	r0, [sp, #8]
   33b04:	add	r0, r0, sl
   33b08:	add	r0, r0, #1
   33b0c:	cmp	r0, #19
   33b10:	ldr	r0, [sp]
   33b14:	addgt	r8, r8, #4
   33b18:	add	r0, ip, r0
   33b1c:	add	ip, r0, #64	; 0x40
   33b20:	ldr	r0, [r9, #4]
   33b24:	umull	r3, r6, r4, r5
   33b28:	mov	lr, #0
   33b2c:	umull	r3, r7, r1, r5
   33b30:	adds	r3, r3, r6
   33b34:	adc	r6, lr, #0
   33b38:	umull	r4, r5, r4, r0
   33b3c:	adds	r3, r3, r4
   33b40:	umaal	r7, r5, r1, r0
   33b44:	adc	r4, r6, #0
   33b48:	adds	r3, r3, #-2147483648	; 0x80000000
   33b4c:	mov	r6, #9
   33b50:	adc	r3, r4, #0
   33b54:	adds	r4, r7, r3
   33b58:	adc	r3, r5, #0
   33b5c:	cmp	r8, #0
   33b60:	orr	r0, r4, r3
   33b64:	movweq	r6, #8
   33b68:	cmp	r0, #0
   33b6c:	beq	33dc0 <grisu3_diy_fp_encode_double@@Base+0x408>
   33b70:	ldrsh	r0, [r9, #8]
   33b74:	cmp	lr, r3, lsr #22
   33b78:	add	r0, r0, ip
   33b7c:	add	r5, r0, #64	; 0x40
   33b80:	bne	33ba8 <grisu3_diy_fp_encode_double@@Base+0x1f0>
   33b84:	mov	lr, #0
   33b88:	mov	r1, r5
   33b8c:	lsl	r0, r3, #10
   33b90:	sub	r1, r1, #10
   33b94:	orr	r3, r0, r4, lsr #22
   33b98:	lsl	r4, r4, #10
   33b9c:	cmp	r3, #4194304	; 0x400000
   33ba0:	bcc	33b8c <grisu3_diy_fp_encode_double@@Base+0x1d4>
   33ba4:	b	33bac <grisu3_diy_fp_encode_double@@Base+0x1f4>
   33ba8:	mov	r1, r5
   33bac:	subs	r0, r2, r4
   33bb0:	add	r7, r6, r8
   33bb4:	sbcs	r0, r2, r3
   33bb8:	bge	33be0 <grisu3_diy_fp_encode_double@@Base+0x228>
   33bbc:	lsl	r0, r3, #1
   33bc0:	subs	r6, r2, r4, lsl #1
   33bc4:	sub	r1, r1, #1
   33bc8:	orr	r3, r0, r4, lsr #31
   33bcc:	lsl	r0, r4, #1
   33bd0:	sbcs	r6, r2, r3
   33bd4:	mov	r4, r0
   33bd8:	blt	33bbc <grisu3_diy_fp_encode_double@@Base+0x204>
   33bdc:	b	33be4 <grisu3_diy_fp_encode_double@@Base+0x22c>
   33be0:	mov	r0, r4
   33be4:	movw	ip, #64462	; 0xfbce
   33be8:	sub	r2, r5, r1
   33bec:	mov	r5, #0
   33bf0:	movt	ip, #65535	; 0xffff
   33bf4:	lsl	lr, r7, r2
   33bf8:	sub	r2, ip, #1
   33bfc:	cmp	r1, r2
   33c00:	bgt	33c54 <grisu3_diy_fp_encode_double@@Base+0x29c>
   33c04:	mvn	r2, #1136	; 0x470
   33c08:	mov	r5, #64	; 0x40
   33c0c:	cmp	r1, r2
   33c10:	blt	33c20 <grisu3_diy_fp_encode_double@@Base+0x268>
   33c14:	sub	r5, ip, r1
   33c18:	cmp	r5, #61	; 0x3d
   33c1c:	blt	33c54 <grisu3_diy_fp_encode_double@@Base+0x29c>
   33c20:	sub	r2, r5, #62	; 0x3e
   33c24:	mov	r4, #9
   33c28:	add	lr, r4, lr, asr r2
   33c2c:	lsr	r0, r0, r2
   33c30:	rsb	r4, r5, #94	; 0x5e
   33c34:	add	r1, r2, r1
   33c38:	orr	r0, r0, r3, lsl r4
   33c3c:	sub	r4, r5, #94	; 0x5e
   33c40:	mov	r5, #62	; 0x3e
   33c44:	cmp	r4, #0
   33c48:	lsrge	r0, r3, r4
   33c4c:	lsr	r3, r3, r2
   33c50:	movwge	r3, #0
   33c54:	lsr	r2, r0, r5
   33c58:	rsb	r4, r5, #32
   33c5c:	lsr	r6, r3, r5
   33c60:	add	r1, r1, r5
   33c64:	orr	r2, r2, r3, lsl r4
   33c68:	sub	r4, r5, #32
   33c6c:	cmp	r4, #0
   33c70:	lsrge	r2, r3, r4
   33c74:	sub	r3, r5, #1
   33c78:	mov	r4, #1
   33c7c:	movwge	r6, #0
   33c80:	lsl	r4, r4, r3
   33c84:	sub	r3, r5, #33	; 0x21
   33c88:	cmp	r3, #0
   33c8c:	movwge	r4, #0
   33c90:	add	sl, lr, r4, lsl #3
   33c94:	cmp	r5, sl
   33c98:	blt	33cb8 <grisu3_diy_fp_encode_double@@Base+0x300>
   33c9c:	adds	r2, r2, #1
   33ca0:	adc	r6, r6, #0
   33ca4:	tst	r6, #2097152	; 0x200000
   33ca8:	beq	33cb8 <grisu3_diy_fp_encode_double@@Base+0x300>
   33cac:	lsrs	r6, r6, #1
   33cb0:	add	r1, r1, #1
   33cb4:	rrx	r2, r2
   33cb8:	and	r0, r4, r0
   33cbc:	cmp	r6, #2097152	; 0x200000
   33cc0:	bcc	33ce4 <grisu3_diy_fp_encode_double@@Base+0x32c>
   33cc4:	mov	r3, #0
   33cc8:	lsrs	r7, r6, #1
   33ccc:	add	r1, r1, #1
   33cd0:	rrx	r2, r2
   33cd4:	cmp	r3, r6, lsr #22
   33cd8:	mov	r6, r7
   33cdc:	bne	33cc8 <grisu3_diy_fp_encode_double@@Base+0x310>
   33ce0:	b	33ce8 <grisu3_diy_fp_encode_double@@Base+0x330>
   33ce4:	mov	r7, r6
   33ce8:	ldr	r8, [fp, #12]
   33cec:	lsl	r9, r4, #3
   33cf0:	lsl	r0, r0, #3
   33cf4:	vmov.i32	d16, #0	; 0x00000000
   33cf8:	cmp	r1, ip
   33cfc:	blt	33d94 <grisu3_diy_fp_encode_double@@Base+0x3dc>
   33d00:	and	r3, r7, #1048576	; 0x100000
   33d04:	mov	r4, #1
   33d08:	cmp	r1, ip
   33d0c:	eor	r5, r4, r3, lsr #20
   33d10:	beq	33d54 <grisu3_diy_fp_encode_double@@Base+0x39c>
   33d14:	cmp	r3, #0
   33d18:	bne	33d54 <grisu3_diy_fp_encode_double@@Base+0x39c>
   33d1c:	mov	r3, #1
   33d20:	lsl	r4, r7, #1
   33d24:	and	r7, r7, #524288	; 0x80000
   33d28:	cmn	r1, #1072	; 0x430
   33d2c:	orr	r6, r4, r2, lsr #31
   33d30:	eor	r5, r3, r7, lsr #19
   33d34:	lsl	r2, r2, #1
   33d38:	sub	r4, r1, #1
   33d3c:	blt	33d5c <grisu3_diy_fp_encode_double@@Base+0x3a4>
   33d40:	cmp	r7, #0
   33d44:	mov	r7, r6
   33d48:	mov	r1, r4
   33d4c:	beq	33d20 <grisu3_diy_fp_encode_double@@Base+0x368>
   33d50:	b	33d5c <grisu3_diy_fp_encode_double@@Base+0x3a4>
   33d54:	mov	r4, r1
   33d58:	mov	r6, r7
   33d5c:	cmp	r4, ip
   33d60:	bne	33d74 <grisu3_diy_fp_encode_double@@Base+0x3bc>
   33d64:	mov	r1, #0
   33d68:	cmp	r5, #0
   33d6c:	mov	r3, #0
   33d70:	bne	33d84 <grisu3_diy_fp_encode_double@@Base+0x3cc>
   33d74:	movw	r1, #0
   33d78:	movt	r1, #17200	; 0x4330
   33d7c:	add	r3, r1, r4, lsl #20
   33d80:	mov	r1, #0
   33d84:	bfc	r6, #20, #12
   33d88:	orr	r1, r1, r2
   33d8c:	orr	r2, r3, r6
   33d90:	vmov	d16, r1, r2
   33d94:	cmp	r0, sl
   33d98:	mov	r2, #0
   33d9c:	sub	r3, r9, lr
   33da0:	mov	r1, #0
   33da4:	vstr	d16, [r8]
   33da8:	movwge	r2, #1
   33dac:	cmp	r3, r0
   33db0:	movwge	r1, #1
   33db4:	orr	r0, r2, r1
   33db8:	sub	sp, fp, #28
   33dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33dc0:	ldr	r0, [pc, #252]	; 33ec4 <grisu3_diy_fp_encode_double@@Base+0x50c>
   33dc4:	ldr	r1, [pc, #252]	; 33ec8 <grisu3_diy_fp_encode_double@@Base+0x510>
   33dc8:	ldr	r3, [pc, #252]	; 33ecc <grisu3_diy_fp_encode_double@@Base+0x514>
   33dcc:	mov	r2, #260	; 0x104
   33dd0:	add	r0, pc, r0
   33dd4:	add	r1, pc, r1
   33dd8:	add	r3, pc, r3
   33ddc:	bl	14f3c <__assert_fail@plt>
   33de0:	ldr	r0, [pc, #160]	; 33e88 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   33de4:	ldr	r1, [pc, #160]	; 33e8c <grisu3_diy_fp_encode_double@@Base+0x4d4>
   33de8:	ldr	r3, [pc, #160]	; 33e90 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   33dec:	mov	r2, #80	; 0x50
   33df0:	add	r0, pc, r0
   33df4:	add	r1, pc, r1
   33df8:	add	r3, pc, r3
   33dfc:	bl	14f3c <__assert_fail@plt>
   33e00:	ldr	r0, [pc, #140]	; 33e94 <grisu3_diy_fp_encode_double@@Base+0x4dc>
   33e04:	ldr	r1, [pc, #140]	; 33e98 <grisu3_diy_fp_encode_double@@Base+0x4e0>
   33e08:	ldr	r3, [pc, #140]	; 33e9c <grisu3_diy_fp_encode_double@@Base+0x4e4>
   33e0c:	mov	r2, #81	; 0x51
   33e10:	add	r0, pc, r0
   33e14:	add	r1, pc, r1
   33e18:	add	r3, pc, r3
   33e1c:	bl	14f3c <__assert_fail@plt>
   33e20:	ldr	r0, [pc, #120]	; 33ea0 <grisu3_diy_fp_encode_double@@Base+0x4e8>
   33e24:	ldr	r1, [pc, #120]	; 33ea4 <grisu3_diy_fp_encode_double@@Base+0x4ec>
   33e28:	ldr	r3, [pc, #120]	; 33ea8 <grisu3_diy_fp_encode_double@@Base+0x4f0>
   33e2c:	mov	r2, #88	; 0x58
   33e30:	add	r0, pc, r0
   33e34:	add	r1, pc, r1
   33e38:	add	r3, pc, r3
   33e3c:	bl	14f3c <__assert_fail@plt>
   33e40:	ldr	r0, [pc, #100]	; 33eac <grisu3_diy_fp_encode_double@@Base+0x4f4>
   33e44:	ldr	r1, [pc, #100]	; 33eb0 <grisu3_diy_fp_encode_double@@Base+0x4f8>
   33e48:	ldr	r3, [pc, #100]	; 33eb4 <grisu3_diy_fp_encode_double@@Base+0x4fc>
   33e4c:	mov	r2, #89	; 0x59
   33e50:	add	r0, pc, r0
   33e54:	add	r1, pc, r1
   33e58:	add	r3, pc, r3
   33e5c:	bl	14f3c <__assert_fail@plt>
   33e60:	ldr	r0, [pc, #80]	; 33eb8 <grisu3_diy_fp_encode_double@@Base+0x500>
   33e64:	ldr	r1, [pc, #80]	; 33ebc <grisu3_diy_fp_encode_double@@Base+0x504>
   33e68:	ldr	r3, [pc, #80]	; 33ec0 <grisu3_diy_fp_encode_double@@Base+0x508>
   33e6c:	mov	r2, #185	; 0xb9
   33e70:	add	r0, pc, r0
   33e74:	add	r1, pc, r1
   33e78:	add	r3, pc, r3
   33e7c:	bl	14f3c <__assert_fail@plt>
   33e80:	andeq	r6, r1, r0, lsr #9
   33e84:	andeq	r6, r1, r4, ror #7
   33e88:	andeq	r6, r1, fp, lsl #29
   33e8c:	andeq	r6, r1, r0, lsr #17
   33e90:	andeq	r6, r1, r2, lsr #29
   33e94:	andeq	r6, r1, r3, asr #29
   33e98:	andeq	r6, r1, r0, lsl #17
   33e9c:	andeq	r6, r1, r2, lsl #29
   33ea0:	andeq	r6, r1, lr, asr #29
   33ea4:	andeq	r6, r1, r0, ror #16
   33ea8:	andeq	r6, r1, r2, ror #28
   33eac:			; <UNDEFINED> instruction: 0x00016ebd
   33eb0:	andeq	r6, r1, r0, asr #16
   33eb4:	andeq	r6, r1, r2, asr #28
   33eb8:	andeq	r6, r1, r8, lsl #16
   33ebc:	andeq	r6, r1, r0, lsr #16
   33ec0:	andeq	r6, r1, sl, lsl #17
   33ec4:	strdeq	r6, [r1], -ip
   33ec8:	andeq	r6, r1, r1, lsl #28
   33ecc:	andeq	r6, r1, sl, ror #28

00033ed0 <flatcc_json_parser_error_string@@Base>:
   33ed0:	cmp	r0, #34	; 0x22
   33ed4:	ldrhi	r0, [pc, #24]	; 33ef4 <flatcc_json_parser_error_string@@Base+0x24>
   33ed8:	addhi	r0, pc, r0
   33edc:	bxhi	lr
   33ee0:	ldr	r1, [pc, #8]	; 33ef0 <flatcc_json_parser_error_string@@Base+0x20>
   33ee4:	add	r1, pc, r1
   33ee8:	ldr	r0, [r1, r0, lsl #2]
   33eec:	bx	lr
   33ef0:	andeq	r7, r2, r4, lsl #31
   33ef4:			; <UNDEFINED> instruction: 0x00015fb1

00033ef8 <flatcc_json_parser_set_error@@Base>:
   33ef8:	mov	ip, r2
   33efc:	ldr	r2, [r0, #20]
   33f00:	cmp	r2, #0
   33f04:	beq	33f10 <flatcc_json_parser_set_error@@Base+0x18>
   33f08:	mov	r0, ip
   33f0c:	bx	lr
   33f10:	str	r1, [r0, #32]
   33f14:	add	r1, r1, #1
   33f18:	ldr	r2, [r0, #4]
   33f1c:	sub	r1, r1, r2
   33f20:	str	r1, [r0, #16]
   33f24:	str	r3, [r0, #20]
   33f28:	mov	r0, ip
   33f2c:	bx	lr

00033f30 <flatcc_json_parser_string_part@@Base>:
   33f30:	cmp	r1, r2
   33f34:	beq	33f60 <flatcc_json_parser_string_part@@Base+0x30>
   33f38:	ldrb	r3, [r1]
   33f3c:	cmp	r3, #32
   33f40:	bcc	33f94 <flatcc_json_parser_string_part@@Base+0x64>
   33f44:	cmp	r3, #34	; 0x22
   33f48:	cmpne	r3, #92	; 0x5c
   33f4c:	beq	33f8c <flatcc_json_parser_string_part@@Base+0x5c>
   33f50:	add	r1, r1, #1
   33f54:	cmp	r2, r1
   33f58:	bne	33f38 <flatcc_json_parser_string_part@@Base+0x8>
   33f5c:	mov	r1, r2
   33f60:	ldr	r3, [r0, #20]
   33f64:	cmp	r3, #0
   33f68:	bne	33f88 <flatcc_json_parser_string_part@@Base+0x58>
   33f6c:	mov	ip, #20
   33f70:	str	r1, [r0, #32]
   33f74:	add	r1, r1, #1
   33f78:	ldr	r3, [r0, #4]
   33f7c:	sub	r1, r1, r3
   33f80:	str	r1, [r0, #16]
   33f84:	str	ip, [r0, #20]
   33f88:	mov	r1, r2
   33f8c:	mov	r0, r1
   33f90:	bx	lr
   33f94:	ldr	r3, [r0, #20]
   33f98:	cmp	r3, #0
   33f9c:	bne	33f88 <flatcc_json_parser_string_part@@Base+0x58>
   33fa0:	mov	ip, #17
   33fa4:	b	33f70 <flatcc_json_parser_string_part@@Base+0x40>

00033fa8 <flatcc_json_parser_space_ext@@Base>:
   33fa8:	mov	ip, r2
   33fac:	cmp	r1, r2
   33fb0:	bne	34090 <flatcc_json_parser_space_ext@@Base+0xe8>
   33fb4:	b	340b8 <flatcc_json_parser_space_ext@@Base+0x110>
   33fb8:	add	r1, r1, #1
   33fbc:	str	r1, [r0, #4]
   33fc0:	ldr	r2, [r0, #12]
   33fc4:	add	r2, r2, #1
   33fc8:	str	r2, [r0, #12]
   33fcc:	cmp	r1, ip
   33fd0:	bne	33fe4 <flatcc_json_parser_space_ext@@Base+0x3c>
   33fd4:	b	340b8 <flatcc_json_parser_space_ext@@Base+0x110>
   33fd8:	add	r1, r1, #1
   33fdc:	cmp	r1, ip
   33fe0:	beq	340b8 <flatcc_json_parser_space_ext@@Base+0x110>
   33fe4:	ldrb	r3, [r1]
   33fe8:	cmp	r3, #32
   33fec:	movhi	r0, r1
   33ff0:	bxhi	lr
   33ff4:	sub	r3, r3, #9
   33ff8:	cmp	r3, #23
   33ffc:	bhi	340ac <flatcc_json_parser_space_ext@@Base+0x104>
   34000:	add	r2, pc, #4
   34004:	ldr	r3, [r2, r3, lsl #2]
   34008:	add	pc, r2, r3
   3400c:			; <UNDEFINED> instruction: 0xffffffcc
   34010:			; <UNDEFINED> instruction: 0xffffffac
   34014:	andeq	r0, r0, r0, lsr #1
   34018:	andeq	r0, r0, r0, lsr #1
   3401c:	andeq	r0, r0, r0, rrx
   34020:	andeq	r0, r0, r0, lsr #1
   34024:	andeq	r0, r0, r0, lsr #1
   34028:	andeq	r0, r0, r0, lsr #1
   3402c:	andeq	r0, r0, r0, lsr #1
   34030:	andeq	r0, r0, r0, lsr #1
   34034:	andeq	r0, r0, r0, lsr #1
   34038:	andeq	r0, r0, r0, lsr #1
   3403c:	andeq	r0, r0, r0, lsr #1
   34040:	andeq	r0, r0, r0, lsr #1
   34044:	andeq	r0, r0, r0, lsr #1
   34048:	andeq	r0, r0, r0, lsr #1
   3404c:	andeq	r0, r0, r0, lsr #1
   34050:	andeq	r0, r0, r0, lsr #1
   34054:	andeq	r0, r0, r0, lsr #1
   34058:	andeq	r0, r0, r0, lsr #1
   3405c:	andeq	r0, r0, r0, lsr #1
   34060:	andeq	r0, r0, r0, lsr #1
   34064:	andeq	r0, r0, r0, lsr #1
   34068:	muleq	r0, r4, r0
   3406c:	sub	r2, ip, r1
   34070:	mov	r3, #0
   34074:	cmp	r2, #2
   34078:	ldrbge	r2, [r1, #1]
   3407c:	subge	r2, r2, #10
   34080:	clzge	r2, r2
   34084:	lsrge	r3, r2, #5
   34088:	add	r1, r1, r3
   3408c:	b	33fb8 <flatcc_json_parser_space_ext@@Base+0x10>
   34090:	ldrb	r3, [r1]
   34094:	cmp	r3, #32
   34098:	bne	33fcc <flatcc_json_parser_space_ext@@Base+0x24>
   3409c:	add	r1, r1, #1
   340a0:	cmp	r1, ip
   340a4:	bne	34090 <flatcc_json_parser_space_ext@@Base+0xe8>
   340a8:	b	340b8 <flatcc_json_parser_space_ext@@Base+0x110>
   340ac:	ldr	r2, [r0, #20]
   340b0:	cmp	r2, #0
   340b4:	beq	340c0 <flatcc_json_parser_space_ext@@Base+0x118>
   340b8:	mov	r0, ip
   340bc:	bx	lr
   340c0:	str	r1, [r0, #32]
   340c4:	add	r1, r1, #1
   340c8:	mov	r2, #5
   340cc:	ldr	r3, [r0, #4]
   340d0:	sub	r1, r1, r3
   340d4:	str	r1, [r0, #16]
   340d8:	str	r2, [r0, #20]
   340dc:	mov	r0, ip
   340e0:	bx	lr

000340e4 <flatcc_json_parser_string_escape@@Base>:
   340e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   340e8:	add	fp, sp, #24
   340ec:	sub	r7, r2, r1
   340f0:	cmp	r7, #2
   340f4:	blt	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   340f8:	ldrb	r6, [r1]
   340fc:	cmp	r6, #92	; 0x5c
   34100:	bne	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   34104:	ldrb	r6, [r1, #1]
   34108:	sub	r6, r6, #34	; 0x22
   3410c:	cmp	r6, #86	; 0x56
   34110:	bhi	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   34114:	add	r5, pc, #4
   34118:	ldr	r6, [r5, r6, lsl #2]
   3411c:	add	pc, r5, r6
   34120:	andeq	r0, r0, ip, asr r1
   34124:	ldrdeq	r0, [r0], -ip
   34128:	ldrdeq	r0, [r0], -ip
   3412c:	ldrdeq	r0, [r0], -ip
   34130:	ldrdeq	r0, [r0], -ip
   34134:	ldrdeq	r0, [r0], -ip
   34138:	ldrdeq	r0, [r0], -ip
   3413c:	ldrdeq	r0, [r0], -ip
   34140:	ldrdeq	r0, [r0], -ip
   34144:	ldrdeq	r0, [r0], -ip
   34148:	ldrdeq	r0, [r0], -ip
   3414c:	ldrdeq	r0, [r0], -ip
   34150:	ldrdeq	r0, [r0], -ip
   34154:	andeq	r0, r0, r4, ror #2
   34158:	ldrdeq	r0, [r0], -ip
   3415c:	ldrdeq	r0, [r0], -ip
   34160:	ldrdeq	r0, [r0], -ip
   34164:	ldrdeq	r0, [r0], -ip
   34168:	ldrdeq	r0, [r0], -ip
   3416c:	ldrdeq	r0, [r0], -ip
   34170:	ldrdeq	r0, [r0], -ip
   34174:	ldrdeq	r0, [r0], -ip
   34178:	ldrdeq	r0, [r0], -ip
   3417c:	ldrdeq	r0, [r0], -ip
   34180:	ldrdeq	r0, [r0], -ip
   34184:	ldrdeq	r0, [r0], -ip
   34188:	ldrdeq	r0, [r0], -ip
   3418c:	ldrdeq	r0, [r0], -ip
   34190:	ldrdeq	r0, [r0], -ip
   34194:	ldrdeq	r0, [r0], -ip
   34198:	ldrdeq	r0, [r0], -ip
   3419c:	ldrdeq	r0, [r0], -ip
   341a0:	ldrdeq	r0, [r0], -ip
   341a4:	ldrdeq	r0, [r0], -ip
   341a8:	ldrdeq	r0, [r0], -ip
   341ac:	ldrdeq	r0, [r0], -ip
   341b0:	ldrdeq	r0, [r0], -ip
   341b4:	ldrdeq	r0, [r0], -ip
   341b8:	ldrdeq	r0, [r0], -ip
   341bc:	ldrdeq	r0, [r0], -ip
   341c0:	ldrdeq	r0, [r0], -ip
   341c4:	ldrdeq	r0, [r0], -ip
   341c8:	ldrdeq	r0, [r0], -ip
   341cc:	ldrdeq	r0, [r0], -ip
   341d0:	ldrdeq	r0, [r0], -ip
   341d4:	ldrdeq	r0, [r0], -ip
   341d8:	ldrdeq	r0, [r0], -ip
   341dc:	ldrdeq	r0, [r0], -ip
   341e0:	ldrdeq	r0, [r0], -ip
   341e4:	ldrdeq	r0, [r0], -ip
   341e8:	ldrdeq	r0, [r0], -ip
   341ec:	ldrdeq	r0, [r0], -ip
   341f0:	ldrdeq	r0, [r0], -ip
   341f4:	ldrdeq	r0, [r0], -ip
   341f8:	ldrdeq	r0, [r0], -ip
   341fc:	ldrdeq	r0, [r0], -ip
   34200:	ldrdeq	r0, [r0], -ip
   34204:	ldrdeq	r0, [r0], -ip
   34208:	andeq	r0, r0, ip, ror #2
   3420c:	ldrdeq	r0, [r0], -ip
   34210:	ldrdeq	r0, [r0], -ip
   34214:	ldrdeq	r0, [r0], -ip
   34218:	ldrdeq	r0, [r0], -ip
   3421c:	ldrdeq	r0, [r0], -ip
   34220:	andeq	r0, r0, r4, ror r1
   34224:	ldrdeq	r0, [r0], -ip
   34228:	ldrdeq	r0, [r0], -ip
   3422c:	ldrdeq	r0, [r0], -ip
   34230:	andeq	r0, r0, ip, ror r1
   34234:	ldrdeq	r0, [r0], -ip
   34238:	ldrdeq	r0, [r0], -ip
   3423c:	ldrdeq	r0, [r0], -ip
   34240:	ldrdeq	r0, [r0], -ip
   34244:	ldrdeq	r0, [r0], -ip
   34248:	ldrdeq	r0, [r0], -ip
   3424c:	ldrdeq	r0, [r0], -ip
   34250:	andeq	r0, r0, r4, lsl #3
   34254:	ldrdeq	r0, [r0], -ip
   34258:	ldrdeq	r0, [r0], -ip
   3425c:	ldrdeq	r0, [r0], -ip
   34260:	andeq	r0, r0, ip, lsl #3
   34264:	ldrdeq	r0, [r0], -ip
   34268:	muleq	r0, r4, r1
   3426c:	andeq	r0, r0, r8, lsr #3
   34270:	ldrdeq	r0, [r0], -ip
   34274:	ldrdeq	r0, [r0], -ip
   34278:	andeq	r0, r0, ip, asr #3
   3427c:	movw	r0, #8705	; 0x2201
   34280:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   34284:	movw	r0, #12033	; 0x2f01
   34288:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3428c:	movw	r0, #23553	; 0x5c01
   34290:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   34294:	movw	r0, #2049	; 0x801
   34298:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3429c:	movw	r0, #3073	; 0xc01
   342a0:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   342a4:	movw	r0, #2561	; 0xa01
   342a8:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   342ac:	movw	r0, #3329	; 0xd01
   342b0:	b	342b8 <flatcc_json_parser_string_escape@@Base+0x1d4>
   342b4:	movw	r0, #2305	; 0x901
   342b8:	add	r2, r1, #2
   342bc:	strh	r0, [r3]
   342c0:	mov	r0, r2
   342c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   342c8:	cmp	r7, #5
   342cc:	ble	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   342d0:	ldrb	r7, [r1, #2]
   342d4:	sub	r6, r7, #48	; 0x30
   342d8:	uxtb	r6, r6
   342dc:	cmp	r6, #9
   342e0:	bhi	34358 <flatcc_json_parser_string_escape@@Base+0x274>
   342e4:	lsl	ip, r7, #12
   342e8:	b	34378 <flatcc_json_parser_string_escape@@Base+0x294>
   342ec:	mov	r6, #1
   342f0:	cmp	r7, #3
   342f4:	strb	r6, [r3]
   342f8:	bgt	3433c <flatcc_json_parser_string_escape@@Base+0x258>
   342fc:	mov	r7, #0
   34300:	strb	r7, [r3]
   34304:	ldr	r3, [r0, #20]
   34308:	cmp	r3, #0
   3430c:	beq	34318 <flatcc_json_parser_string_escape@@Base+0x234>
   34310:	mov	r0, r2
   34314:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   34318:	str	r1, [r0, #32]
   3431c:	add	r1, r1, #1
   34320:	mov	r3, #18
   34324:	ldr	r7, [r0, #4]
   34328:	sub	r1, r1, r7
   3432c:	str	r1, [r0, #16]
   34330:	str	r3, [r0, #20]
   34334:	mov	r0, r2
   34338:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3433c:	ldrb	r7, [r1, #2]
   34340:	sub	r6, r7, #48	; 0x30
   34344:	uxtb	r6, r6
   34348:	cmp	r6, #9
   3434c:	bhi	34394 <flatcc_json_parser_string_escape@@Base+0x2b0>
   34350:	lsl	r7, r7, #4
   34354:	b	343b0 <flatcc_json_parser_string_escape@@Base+0x2cc>
   34358:	orr	r6, r7, #32
   3435c:	sub	r6, r6, #97	; 0x61
   34360:	uxtb	r6, r6
   34364:	cmp	r6, #5
   34368:	bhi	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   3436c:	movw	r6, #36864	; 0x9000
   34370:	movt	r6, #65535	; 0xffff
   34374:	add	ip, r6, r7, lsl #12
   34378:	ldrb	lr, [r1, #3]
   3437c:	sub	r4, lr, #48	; 0x30
   34380:	uxtb	r4, r4
   34384:	cmp	r4, #10
   34388:	bcs	343f0 <flatcc_json_parser_string_escape@@Base+0x30c>
   3438c:	mov	r8, #53248	; 0xd000
   34390:	b	34408 <flatcc_json_parser_string_escape@@Base+0x324>
   34394:	orr	r6, r7, #32
   34398:	sub	r6, r6, #97	; 0x61
   3439c:	uxtb	r6, r6
   343a0:	cmp	r6, #5
   343a4:	bhi	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   343a8:	mvn	r6, #111	; 0x6f
   343ac:	add	r7, r6, r7, lsl #4
   343b0:	ldrb	r5, [r1, #3]
   343b4:	sub	r6, r5, #48	; 0x30
   343b8:	uxtb	r4, r6
   343bc:	cmp	r4, #10
   343c0:	bcc	343dc <flatcc_json_parser_string_escape@@Base+0x2f8>
   343c4:	orr	r6, r5, #32
   343c8:	sub	r5, r6, #97	; 0x61
   343cc:	uxtb	r5, r5
   343d0:	cmp	r5, #5
   343d4:	bhi	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   343d8:	sub	r6, r6, #87	; 0x57
   343dc:	orr	r0, r6, r7
   343e0:	add	r2, r1, #4
   343e4:	strb	r0, [r3, #1]
   343e8:	mov	r0, r2
   343ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   343f0:	orr	lr, lr, #32
   343f4:	mov	r8, #43264	; 0xa900
   343f8:	sub	r4, lr, #97	; 0x61
   343fc:	uxtb	r4, r4
   34400:	cmp	r4, #6
   34404:	bcs	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   34408:	ldrb	r5, [r1, #4]
   3440c:	sub	r4, r5, #48	; 0x30
   34410:	uxtb	r4, r4
   34414:	cmp	r4, #10
   34418:	bcs	34424 <flatcc_json_parser_string_escape@@Base+0x340>
   3441c:	mov	r9, #64768	; 0xfd00
   34420:	b	3443c <flatcc_json_parser_string_escape@@Base+0x358>
   34424:	orr	r5, r5, #32
   34428:	movw	r9, #64144	; 0xfa90
   3442c:	sub	r4, r5, #97	; 0x61
   34430:	uxtb	r4, r4
   34434:	cmp	r4, #6
   34438:	bcs	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   3443c:	ldrb	r7, [r1, #5]
   34440:	sub	r4, r7, #48	; 0x30
   34444:	uxtb	r4, r4
   34448:	cmp	r4, #10
   3444c:	bcs	3445c <flatcc_json_parser_string_escape@@Base+0x378>
   34450:	mvn	r0, #86	; 0x56
   34454:	add	r4, r0, #39	; 0x27
   34458:	b	34474 <flatcc_json_parser_string_escape@@Base+0x390>
   3445c:	orr	r7, r7, #32
   34460:	movw	r4, #65449	; 0xffa9
   34464:	sub	r6, r7, #97	; 0x61
   34468:	uxtb	r6, r6
   3446c:	cmp	r6, #6
   34470:	bcs	342fc <flatcc_json_parser_string_escape@@Base+0x218>
   34474:	add	r0, r8, lr, lsl #8
   34478:	add	r2, r9, r5, lsl #4
   3447c:	orr	r0, r0, ip
   34480:	orr	r0, r0, r2
   34484:	add	r2, r4, r7
   34488:	orr	r0, r0, r2
   3448c:	uxth	r7, r0
   34490:	cmp	r7, #127	; 0x7f
   34494:	bhi	344a4 <flatcc_json_parser_string_escape@@Base+0x3c0>
   34498:	mov	r2, #1
   3449c:	strb	r2, [r3]
   344a0:	b	344f8 <flatcc_json_parser_string_escape@@Base+0x414>
   344a4:	and	r2, r0, #63488	; 0xf800
   344a8:	mov	r6, #0
   344ac:	cmp	r6, r2, lsr #11
   344b0:	bne	344cc <flatcc_json_parser_string_escape@@Base+0x3e8>
   344b4:	mov	r7, #192	; 0xc0
   344b8:	mov	r2, #2
   344bc:	orr	r7, r7, r0, lsr #6
   344c0:	strb	r2, [r3]
   344c4:	strb	r7, [r3, #1]
   344c8:	b	344f0 <flatcc_json_parser_string_escape@@Base+0x40c>
   344cc:	mov	r6, #224	; 0xe0
   344d0:	mov	r2, #3
   344d4:	orr	r6, r6, r7, lsr #12
   344d8:	strb	r2, [r3]
   344dc:	lsr	r7, r7, #6
   344e0:	strb	r6, [r3, #1]
   344e4:	mov	r6, #2
   344e8:	bfi	r7, r6, #6, #26
   344ec:	strb	r7, [r3, #2]
   344f0:	mvn	r7, #-67108863	; 0xfc000001
   344f4:	bfi	r0, r7, #6, #26
   344f8:	strb	r0, [r3, r2]
   344fc:	add	r2, r1, #6
   34500:	mov	r0, r2
   34504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00034508 <flatcc_json_parser_skip_constant@@Base>:
   34508:	push	{r4, r5, r6, sl, fp, lr}
   3450c:	add	fp, sp, #16
   34510:	cmp	r1, r2
   34514:	moveq	r0, r1
   34518:	popeq	{r4, r5, r6, sl, fp, pc}
   3451c:	mov	r4, r2
   34520:	mov	r5, r0
   34524:	b	34534 <flatcc_json_parser_skip_constant@@Base+0x2c>
   34528:	cmp	r1, r4
   3452c:	moveq	r0, r4
   34530:	popeq	{r4, r5, r6, sl, fp, pc}
   34534:	ldrsb	r0, [r1]
   34538:	mov	r6, r1
   3453c:	cmp	r0, #0
   34540:	blt	34554 <flatcc_json_parser_skip_constant@@Base+0x4c>
   34544:	uxtb	r0, r0
   34548:	cmp	r0, #95	; 0x5f
   3454c:	cmpne	r0, #46	; 0x2e
   34550:	bne	3455c <flatcc_json_parser_skip_constant@@Base+0x54>
   34554:	add	r1, r6, #1
   34558:	b	34528 <flatcc_json_parser_skip_constant@@Base+0x20>
   3455c:	sub	r1, r0, #48	; 0x30
   34560:	uxtb	r1, r1
   34564:	cmp	r1, #9
   34568:	bls	34554 <flatcc_json_parser_skip_constant@@Base+0x4c>
   3456c:	orr	r1, r0, #32
   34570:	sub	r1, r1, #97	; 0x61
   34574:	uxtb	r1, r1
   34578:	cmp	r1, #25
   3457c:	bls	34554 <flatcc_json_parser_skip_constant@@Base+0x4c>
   34580:	sub	r1, r4, r6
   34584:	cmp	r1, #2
   34588:	blt	345a8 <flatcc_json_parser_skip_constant@@Base+0xa0>
   3458c:	cmp	r0, #32
   34590:	bhi	345c4 <flatcc_json_parser_skip_constant@@Base+0xbc>
   34594:	bne	345a8 <flatcc_json_parser_skip_constant@@Base+0xa0>
   34598:	mov	r1, r6
   3459c:	ldrb	r0, [r1, #1]!
   345a0:	cmp	r0, #32
   345a4:	bhi	34528 <flatcc_json_parser_skip_constant@@Base+0x20>
   345a8:	mov	r0, r5
   345ac:	mov	r1, r6
   345b0:	mov	r2, r4
   345b4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   345b8:	mov	r1, r0
   345bc:	cmp	r0, r6
   345c0:	bne	34528 <flatcc_json_parser_skip_constant@@Base+0x20>
   345c4:	mov	r0, r6
   345c8:	pop	{r4, r5, r6, sl, fp, pc}

000345cc <flatcc_json_parser_match_constant@@Base>:
   345cc:	push	{r4, r5, fp, lr}
   345d0:	add	fp, sp, #8
   345d4:	ldr	r5, [fp, #8]
   345d8:	sub	r4, r2, r1
   345dc:	cmp	r4, r3
   345e0:	ble	34650 <flatcc_json_parser_match_constant@@Base+0x84>
   345e4:	add	ip, r1, r3
   345e8:	ldrb	r4, [ip]
   345ec:	cmp	r4, #92	; 0x5c
   345f0:	beq	34660 <flatcc_json_parser_match_constant@@Base+0x94>
   345f4:	cmp	r4, #34	; 0x22
   345f8:	beq	3462c <flatcc_json_parser_match_constant@@Base+0x60>
   345fc:	cmp	r4, #32
   34600:	bne	34650 <flatcc_json_parser_match_constant@@Base+0x84>
   34604:	add	r1, r1, r3
   34608:	add	r1, r1, #1
   3460c:	cmp	r2, r1
   34610:	beq	3467c <flatcc_json_parser_match_constant@@Base+0xb0>
   34614:	ldrb	r3, [r1], #1
   34618:	cmp	r3, #32
   3461c:	beq	3460c <flatcc_json_parser_match_constant@@Base+0x40>
   34620:	cmp	r3, #34	; 0x22
   34624:	bne	346dc <flatcc_json_parser_match_constant@@Base+0x110>
   34628:	sub	ip, r1, #1
   3462c:	mvn	r2, ip
   34630:	add	r1, ip, #1
   34634:	cmp	r2, #2
   34638:	blt	346c0 <flatcc_json_parser_match_constant@@Base+0xf4>
   3463c:	ldrb	r2, [r1]
   34640:	cmp	r2, #32
   34644:	bls	346b0 <flatcc_json_parser_match_constant@@Base+0xe4>
   34648:	mov	ip, r1
   3464c:	b	346cc <flatcc_json_parser_match_constant@@Base+0x100>
   34650:	mov	r0, #0
   34654:	str	r0, [r5]
   34658:	mov	r0, r1
   3465c:	pop	{r4, r5, fp, pc}
   34660:	mov	r1, #0
   34664:	str	r1, [r5]
   34668:	ldr	r1, [r0, #20]
   3466c:	cmp	r1, #0
   34670:	beq	3468c <flatcc_json_parser_match_constant@@Base+0xc0>
   34674:	mov	r0, r2
   34678:	pop	{r4, r5, fp, pc}
   3467c:	mov	r0, #0
   34680:	str	r0, [r5]
   34684:	mov	r0, r2
   34688:	pop	{r4, r5, fp, pc}
   3468c:	str	ip, [r0, #32]
   34690:	add	r5, ip, #1
   34694:	mov	r1, #18
   34698:	ldr	r3, [r0, #4]
   3469c:	sub	r3, r5, r3
   346a0:	str	r3, [r0, #16]
   346a4:	str	r1, [r0, #20]
   346a8:	mov	r0, r2
   346ac:	pop	{r4, r5, fp, pc}
   346b0:	bne	346c0 <flatcc_json_parser_match_constant@@Base+0xf4>
   346b4:	ldrb	r2, [ip, #2]!
   346b8:	cmp	r2, #32
   346bc:	bhi	346cc <flatcc_json_parser_match_constant@@Base+0x100>
   346c0:	mov	r2, #0
   346c4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   346c8:	mov	ip, r0
   346cc:	mov	r0, #0
   346d0:	str	r0, [r5]
   346d4:	mov	r0, ip
   346d8:	pop	{r4, r5, fp, pc}
   346dc:	mov	r0, #1
   346e0:	sub	ip, r1, #1
   346e4:	str	r0, [r5]
   346e8:	mov	r0, ip
   346ec:	pop	{r4, r5, fp, pc}

000346f0 <flatcc_json_parser_unmatched_symbol@@Base>:
   346f0:	push	{r4, r5, fp, lr}
   346f4:	add	fp, sp, #8
   346f8:	mov	r5, r0
   346fc:	ldrb	r0, [r0, #8]
   34700:	mov	r4, r2
   34704:	tst	r0, #1
   34708:	bne	34730 <flatcc_json_parser_unmatched_symbol@@Base+0x40>
   3470c:	ldr	r0, [r5, #20]
   34710:	cmp	r0, #0
   34714:	bne	3483c <flatcc_json_parser_unmatched_symbol@@Base+0x14c>
   34718:	str	r1, [r5, #32]
   3471c:	add	r1, r1, #1
   34720:	mov	r0, #13
   34724:	ldr	r2, [r5, #4]
   34728:	sub	r1, r1, r2
   3472c:	b	34858 <flatcc_json_parser_unmatched_symbol@@Base+0x168>
   34730:	cmp	r1, r4
   34734:	beq	34770 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   34738:	ldrb	r0, [r1]
   3473c:	cmp	r0, #92	; 0x5c
   34740:	beq	34750 <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   34744:	cmp	r0, #34	; 0x22
   34748:	bne	34760 <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   3474c:	b	347a4 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   34750:	sub	r0, r4, r1
   34754:	cmp	r0, #2
   34758:	blt	34770 <flatcc_json_parser_unmatched_symbol@@Base+0x80>
   3475c:	add	r1, r1, #1
   34760:	add	r1, r1, #1
   34764:	cmp	r1, r4
   34768:	bne	34738 <flatcc_json_parser_unmatched_symbol@@Base+0x48>
   3476c:	mov	r1, r4
   34770:	ldr	r0, [r5, #20]
   34774:	mov	r2, r4
   34778:	cmp	r0, #0
   3477c:	bne	347a8 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   34780:	str	r1, [r5, #32]
   34784:	add	r1, r1, #1
   34788:	mov	r0, #20
   3478c:	ldr	r2, [r5, #4]
   34790:	sub	r1, r1, r2
   34794:	mov	r2, r4
   34798:	str	r1, [r5, #16]
   3479c:	str	r0, [r5, #20]
   347a0:	b	347a8 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   347a4:	add	r2, r1, #1
   347a8:	sub	r0, r4, r2
   347ac:	cmp	r0, #2
   347b0:	blt	347e4 <flatcc_json_parser_unmatched_symbol@@Base+0xf4>
   347b4:	ldrb	r0, [r2]
   347b8:	cmp	r0, #32
   347bc:	bls	347d0 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   347c0:	mov	r3, r2
   347c4:	cmp	r3, r4
   347c8:	bne	34800 <flatcc_json_parser_unmatched_symbol@@Base+0x110>
   347cc:	b	34830 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   347d0:	bne	347e4 <flatcc_json_parser_unmatched_symbol@@Base+0xf4>
   347d4:	mov	r3, r2
   347d8:	ldrb	r0, [r3, #1]!
   347dc:	cmp	r0, #32
   347e0:	bhi	347f8 <flatcc_json_parser_unmatched_symbol@@Base+0x108>
   347e4:	mov	r1, r2
   347e8:	mov	r0, r5
   347ec:	mov	r2, r4
   347f0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   347f4:	mov	r3, r0
   347f8:	cmp	r3, r4
   347fc:	beq	34830 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   34800:	ldrb	r0, [r3]
   34804:	cmp	r0, #58	; 0x3a
   34808:	bne	34830 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   3480c:	add	r1, r3, #1
   34810:	sub	r0, r4, r1
   34814:	cmp	r0, #2
   34818:	blt	34878 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   3481c:	ldrb	r0, [r1]
   34820:	cmp	r0, #32
   34824:	bls	34868 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   34828:	mov	r3, r1
   3482c:	b	34888 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   34830:	ldr	r0, [r5, #20]
   34834:	cmp	r0, #0
   34838:	beq	34844 <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   3483c:	mov	r0, r4
   34840:	pop	{r4, r5, fp, pc}
   34844:	str	r3, [r5, #32]
   34848:	add	r2, r3, #1
   3484c:	mov	r0, #4
   34850:	ldr	r1, [r5, #4]
   34854:	sub	r1, r2, r1
   34858:	str	r1, [r5, #16]
   3485c:	str	r0, [r5, #20]
   34860:	mov	r0, r4
   34864:	pop	{r4, r5, fp, pc}
   34868:	bne	34878 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   3486c:	ldrb	r0, [r3, #2]!
   34870:	cmp	r0, #32
   34874:	bhi	34888 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   34878:	mov	r0, r5
   3487c:	mov	r2, r4
   34880:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   34884:	mov	r3, r0
   34888:	mov	r0, r5
   3488c:	mov	r1, r3
   34890:	mov	r2, r4
   34894:	pop	{r4, r5, fp, lr}
   34898:	b	3489c <flatcc_json_parser_generic_json@@Base>

0003489c <flatcc_json_parser_generic_json@@Base>:
   3489c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   348a0:	add	fp, sp, #28
   348a4:	sub	sp, sp, #540	; 0x21c
   348a8:	mov	r7, r1
   348ac:	cmp	r1, r2
   348b0:	beq	35770 <flatcc_json_parser_generic_json@@Base+0xed4>
   348b4:	mov	r9, r0
   348b8:	add	r0, r2, #1
   348bc:	add	r1, sp, #24
   348c0:	mov	r4, r2
   348c4:	mov	r6, #0
   348c8:	str	r0, [sp]
   348cc:	add	r0, r9, #32
   348d0:	sub	sl, r1, #1
   348d4:	add	r8, r9, #16
   348d8:	add	r5, r9, #4
   348dc:	str	r0, [sp, #12]
   348e0:	add	r0, r9, #20
   348e4:	str	r0, [sp, #16]
   348e8:	mov	r0, r1
   348ec:	stmib	sp, {r5, r8}
   348f0:	cmp	r6, #0
   348f4:	beq	34a7c <flatcc_json_parser_generic_json@@Base+0x1e0>
   348f8:	ldrb	r0, [r0, #-1]
   348fc:	cmp	r0, #125	; 0x7d
   34900:	bne	34a7c <flatcc_json_parser_generic_json@@Base+0x1e0>
   34904:	ldrb	r0, [r7]
   34908:	cmp	r0, #34	; 0x22
   3490c:	bne	34958 <flatcc_json_parser_generic_json@@Base+0xbc>
   34910:	add	r0, r7, #1
   34914:	mov	r2, r4
   34918:	cmp	r0, r4
   3491c:	beq	34994 <flatcc_json_parser_generic_json@@Base+0xf8>
   34920:	ldrb	r1, [r0]
   34924:	cmp	r1, #92	; 0x5c
   34928:	beq	34938 <flatcc_json_parser_generic_json@@Base+0x9c>
   3492c:	cmp	r1, #34	; 0x22
   34930:	bne	34948 <flatcc_json_parser_generic_json@@Base+0xac>
   34934:	b	349d4 <flatcc_json_parser_generic_json@@Base+0x138>
   34938:	sub	r1, r4, r0
   3493c:	cmp	r1, #2
   34940:	blt	350ec <flatcc_json_parser_generic_json@@Base+0x850>
   34944:	add	r0, r0, #1
   34948:	add	r0, r0, #1
   3494c:	cmp	r0, r4
   34950:	bne	34920 <flatcc_json_parser_generic_json@@Base+0x84>
   34954:	b	34990 <flatcc_json_parser_generic_json@@Base+0xf4>
   34958:	ldr	r0, [sp, #16]
   3495c:	mov	r1, r4
   34960:	ldr	r0, [r0]
   34964:	cmp	r0, #0
   34968:	bne	349d8 <flatcc_json_parser_generic_json@@Base+0x13c>
   3496c:	ldr	r0, [sp, #16]
   34970:	mov	r1, #5
   34974:	str	r1, [r0]
   34978:	add	r1, r7, #1
   3497c:	ldr	r0, [r5]
   34980:	sub	r0, r1, r0
   34984:	str	r0, [r8]
   34988:	ldr	r0, [sp, #12]
   3498c:	str	r7, [r0]
   34990:	mov	r2, r4
   34994:	ldr	r0, [sp, #16]
   34998:	mov	r1, r4
   3499c:	ldr	r0, [r0]
   349a0:	cmp	r0, #0
   349a4:	bne	349d8 <flatcc_json_parser_generic_json@@Base+0x13c>
   349a8:	ldr	r0, [sp, #16]
   349ac:	mov	r1, #20
   349b0:	str	r1, [r0]
   349b4:	add	r1, r2, #1
   349b8:	ldr	r0, [r5]
   349bc:	sub	r0, r1, r0
   349c0:	mov	r1, r4
   349c4:	str	r0, [r8]
   349c8:	ldr	r0, [sp, #12]
   349cc:	str	r2, [r0]
   349d0:	b	349d8 <flatcc_json_parser_generic_json@@Base+0x13c>
   349d4:	add	r1, r0, #1
   349d8:	sub	r0, r4, r1
   349dc:	cmp	r0, #2
   349e0:	blt	34a14 <flatcc_json_parser_generic_json@@Base+0x178>
   349e4:	ldrb	r0, [r1]
   349e8:	cmp	r0, #32
   349ec:	bls	34a00 <flatcc_json_parser_generic_json@@Base+0x164>
   349f0:	mov	r7, r1
   349f4:	cmp	r7, r4
   349f8:	bne	34a2c <flatcc_json_parser_generic_json@@Base+0x190>
   349fc:	b	35824 <flatcc_json_parser_generic_json@@Base+0xf88>
   34a00:	bne	34a14 <flatcc_json_parser_generic_json@@Base+0x178>
   34a04:	mov	r7, r1
   34a08:	ldrb	r0, [r7, #1]!
   34a0c:	cmp	r0, #32
   34a10:	bhi	34a24 <flatcc_json_parser_generic_json@@Base+0x188>
   34a14:	mov	r0, r9
   34a18:	mov	r2, r4
   34a1c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   34a20:	mov	r7, r0
   34a24:	cmp	r7, r4
   34a28:	beq	35824 <flatcc_json_parser_generic_json@@Base+0xf88>
   34a2c:	ldrb	r0, [r7]
   34a30:	cmp	r0, #58	; 0x3a
   34a34:	bne	35840 <flatcc_json_parser_generic_json@@Base+0xfa4>
   34a38:	add	r1, r7, #1
   34a3c:	sub	r0, r4, r1
   34a40:	cmp	r0, #2
   34a44:	blt	34a6c <flatcc_json_parser_generic_json@@Base+0x1d0>
   34a48:	ldrb	r8, [r1]
   34a4c:	cmp	r8, #32
   34a50:	bls	34a5c <flatcc_json_parser_generic_json@@Base+0x1c0>
   34a54:	mov	r7, r1
   34a58:	b	34a80 <flatcc_json_parser_generic_json@@Base+0x1e4>
   34a5c:	bne	34a6c <flatcc_json_parser_generic_json@@Base+0x1d0>
   34a60:	ldrb	r8, [r7, #2]!
   34a64:	cmp	r8, #32
   34a68:	bhi	34a80 <flatcc_json_parser_generic_json@@Base+0x1e4>
   34a6c:	mov	r0, r9
   34a70:	mov	r2, r4
   34a74:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   34a78:	mov	r7, r0
   34a7c:	ldrb	r8, [r7]
   34a80:	sub	r0, r8, #34	; 0x22
   34a84:	cmp	r0, #89	; 0x59
   34a88:	bhi	35778 <flatcc_json_parser_generic_json@@Base+0xedc>
   34a8c:	add	r1, pc, #4
   34a90:	ldr	r0, [r1, r0, lsl #2]
   34a94:	add	pc, r1, r0
   34a98:	andeq	r0, r0, r0, ror #6
   34a9c:	andeq	r0, r0, r0, ror #25
   34aa0:	andeq	r0, r0, r0, ror #25
   34aa4:	andeq	r0, r0, r0, ror #25
   34aa8:	andeq	r0, r0, r0, ror #25
   34aac:	andeq	r0, r0, r0, ror #25
   34ab0:	andeq	r0, r0, r0, ror #25
   34ab4:	andeq	r0, r0, r0, ror #25
   34ab8:	andeq	r0, r0, r0, ror #25
   34abc:	andeq	r0, r0, r0, ror #25
   34ac0:	andeq	r0, r0, r0, ror #25
   34ac4:	andeq	r0, r0, r8, ror #2
   34ac8:	andeq	r0, r0, r0, ror #25
   34acc:	andeq	r0, r0, r0, ror #25
   34ad0:	andeq	r0, r0, r8, ror #2
   34ad4:	andeq	r0, r0, r8, ror #2
   34ad8:	andeq	r0, r0, r8, ror #2
   34adc:	andeq	r0, r0, r8, ror #2
   34ae0:	andeq	r0, r0, r8, ror #2
   34ae4:	andeq	r0, r0, r8, ror #2
   34ae8:	andeq	r0, r0, r8, ror #2
   34aec:	andeq	r0, r0, r8, ror #2
   34af0:	andeq	r0, r0, r8, ror #2
   34af4:	andeq	r0, r0, r8, ror #2
   34af8:	andeq	r0, r0, r0, ror #25
   34afc:	andeq	r0, r0, r0, ror #25
   34b00:	andeq	r0, r0, r0, ror #25
   34b04:	andeq	r0, r0, r0, ror #25
   34b08:	andeq	r0, r0, r0, ror #25
   34b0c:	andeq	r0, r0, r0, ror #25
   34b10:	andeq	r0, r0, r0, ror #25
   34b14:	andeq	r0, r0, r0, ror #25
   34b18:	andeq	r0, r0, r0, ror #25
   34b1c:	andeq	r0, r0, r0, ror #25
   34b20:	andeq	r0, r0, r0, ror #25
   34b24:	andeq	r0, r0, r0, ror #25
   34b28:	andeq	r0, r0, r0, ror #25
   34b2c:	andeq	r0, r0, r0, ror #25
   34b30:	andeq	r0, r0, r0, ror #25
   34b34:	andeq	r0, r0, r0, ror #25
   34b38:	andeq	r0, r0, r0, ror #25
   34b3c:	andeq	r0, r0, r0, ror #25
   34b40:	andeq	r0, r0, r0, ror #25
   34b44:	andeq	r0, r0, r0, ror #25
   34b48:	andeq	r0, r0, r0, ror #25
   34b4c:	andeq	r0, r0, r0, ror #25
   34b50:	andeq	r0, r0, r0, ror #25
   34b54:	andeq	r0, r0, r0, ror #25
   34b58:	andeq	r0, r0, r0, ror #25
   34b5c:	andeq	r0, r0, r0, ror #25
   34b60:	andeq	r0, r0, r0, ror #25
   34b64:	andeq	r0, r0, r0, ror #25
   34b68:	andeq	r0, r0, r0, ror #25
   34b6c:	andeq	r0, r0, r0, ror #25
   34b70:	andeq	r0, r0, r0, ror #25
   34b74:	andeq	r0, r0, r0, ror #25
   34b78:	andeq	r0, r0, r0, ror #25
   34b7c:	andeq	r0, r0, r4, lsl #7
   34b80:	andeq	r0, r0, r0, ror #25
   34b84:	andeq	r0, r0, r0, ror #25
   34b88:	andeq	r0, r0, r0, ror #25
   34b8c:	andeq	r0, r0, r0, ror #25
   34b90:	andeq	r0, r0, r0, ror #25
   34b94:	andeq	r0, r0, r0, ror #25
   34b98:	andeq	r0, r0, r0, ror #25
   34b9c:	andeq	r0, r0, r0, ror #25
   34ba0:	andeq	r0, r0, r0, ror #25
   34ba4:	andeq	r0, r0, r0, ror #25
   34ba8:	andeq	r0, r0, ip, asr #4
   34bac:	andeq	r0, r0, r0, ror #25
   34bb0:	andeq	r0, r0, r0, ror #25
   34bb4:	andeq	r0, r0, r0, ror #25
   34bb8:	andeq	r0, r0, r0, ror #25
   34bbc:	andeq	r0, r0, r0, ror #25
   34bc0:	andeq	r0, r0, r0, ror #25
   34bc4:	andeq	r0, r0, r0, ror #25
   34bc8:	andeq	r0, r0, r8, asr #7
   34bcc:	andeq	r0, r0, r0, ror #25
   34bd0:	andeq	r0, r0, r0, ror #25
   34bd4:	andeq	r0, r0, r0, ror #25
   34bd8:	andeq	r0, r0, r0, ror #25
   34bdc:	andeq	r0, r0, r0, ror #25
   34be0:	andeq	r0, r0, ip, asr #4
   34be4:	andeq	r0, r0, r0, ror #25
   34be8:	andeq	r0, r0, r0, ror #25
   34bec:	andeq	r0, r0, r0, ror #25
   34bf0:	andeq	r0, r0, r0, ror #25
   34bf4:	andeq	r0, r0, r0, ror #25
   34bf8:	andeq	r0, r0, r0, ror #25
   34bfc:	strdeq	r0, [r0], -r4
   34c00:	cmp	r7, r4
   34c04:	beq	34dec <flatcc_json_parser_generic_json@@Base+0x550>
   34c08:	cmp	r8, #45	; 0x2d
   34c0c:	bne	34c20 <flatcc_json_parser_generic_json@@Base+0x384>
   34c10:	add	r7, r7, #1
   34c14:	cmp	r7, r4
   34c18:	beq	34ddc <flatcc_json_parser_generic_json@@Base+0x540>
   34c1c:	ldrb	r8, [r7]
   34c20:	cmp	r8, #48	; 0x30
   34c24:	bne	34c98 <flatcc_json_parser_generic_json@@Base+0x3fc>
   34c28:	ldmib	sp, {r5, r8}
   34c2c:	add	r1, r7, #1
   34c30:	cmp	r1, r4
   34c34:	mov	r2, r4
   34c38:	beq	3506c <flatcc_json_parser_generic_json@@Base+0x7d0>
   34c3c:	ldrb	r0, [r1]
   34c40:	cmp	r0, #46	; 0x2e
   34c44:	bne	34f04 <flatcc_json_parser_generic_json@@Base+0x668>
   34c48:	mov	r0, r1
   34c4c:	ldrb	r2, [r0, #1]!
   34c50:	sub	r2, r2, #48	; 0x30
   34c54:	uxtb	r2, r2
   34c58:	cmp	r2, #10
   34c5c:	bcc	34ed0 <flatcc_json_parser_generic_json@@Base+0x634>
   34c60:	ldr	r2, [sp, #16]
   34c64:	ldr	r1, [r2]
   34c68:	cmp	r1, #0
   34c6c:	bne	3507c <flatcc_json_parser_generic_json@@Base+0x7e0>
   34c70:	mov	r1, #6
   34c74:	str	r1, [r2]
   34c78:	add	r2, r0, #1
   34c7c:	ldr	r1, [r5]
   34c80:	sub	r1, r2, r1
   34c84:	str	r1, [r8]
   34c88:	ldr	r1, [sp, #12]
   34c8c:	str	r0, [r1]
   34c90:	mov	r1, r4
   34c94:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   34c98:	sub	r0, r8, #49	; 0x31
   34c9c:	uxtb	r0, r0
   34ca0:	cmp	r0, #8
   34ca4:	bls	34db0 <flatcc_json_parser_generic_json@@Base+0x514>
   34ca8:	ldr	r1, [sp, #16]
   34cac:	ldr	r0, [r1]
   34cb0:	ldmib	sp, {r5, r8}
   34cb4:	cmp	r0, #0
   34cb8:	bne	3507c <flatcc_json_parser_generic_json@@Base+0x7e0>
   34cbc:	mov	r0, #6
   34cc0:	str	r0, [r1]
   34cc4:	add	r1, r7, #1
   34cc8:	ldr	r0, [r5]
   34ccc:	sub	r0, r1, r0
   34cd0:	mov	r1, r4
   34cd4:	str	r0, [r8]
   34cd8:	ldr	r0, [sp, #12]
   34cdc:	str	r7, [r0]
   34ce0:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   34ce4:	sub	r0, r4, r7
   34ce8:	cmp	r0, #4
   34cec:	blt	34d28 <flatcc_json_parser_generic_json@@Base+0x48c>
   34cf0:	ldr	r1, [r7]
   34cf4:	movw	r2, #29300	; 0x7274
   34cf8:	movt	r2, #25973	; 0x6575
   34cfc:	cmp	r1, r2
   34d00:	beq	350c8 <flatcc_json_parser_generic_json@@Base+0x82c>
   34d04:	cmp	r0, #5
   34d08:	blt	34d28 <flatcc_json_parser_generic_json@@Base+0x48c>
   34d0c:	ldr	r1, [pc, #2984]	; 358bc <flatcc_json_parser_generic_json@@Base+0x1020>
   34d10:	mov	r0, r7
   34d14:	mov	r2, #5
   34d18:	add	r1, pc, r1
   34d1c:	bl	14e64 <memcmp@plt>
   34d20:	cmp	r0, #0
   34d24:	beq	352f4 <flatcc_json_parser_generic_json@@Base+0xa58>
   34d28:	cmp	r7, r4
   34d2c:	mov	r1, r4
   34d30:	beq	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   34d34:	sub	r0, r8, #48	; 0x30
   34d38:	mov	r2, #1
   34d3c:	uxtb	r1, r0
   34d40:	mov	r0, #0
   34d44:	cmp	r1, #9
   34d48:	bhi	350bc <flatcc_json_parser_generic_json@@Base+0x820>
   34d4c:	add	lr, r7, #1
   34d50:	mov	r3, #0
   34d54:	mov	r2, #0
   34d58:	add	r5, r2, r2, lsl #2
   34d5c:	uxtb	r0, r8
   34d60:	mov	r1, #10
   34d64:	lsl	r5, r5, #1
   34d68:	umlal	r0, r5, r3, r1
   34d6c:	subs	r0, r0, #48	; 0x30
   34d70:	sbc	ip, r5, #0
   34d74:	subs	r3, r0, r3
   34d78:	sbcs	r2, ip, r2
   34d7c:	bcc	351ac <flatcc_json_parser_generic_json@@Base+0x910>
   34d80:	cmp	r4, lr
   34d84:	beq	351fc <flatcc_json_parser_generic_json@@Base+0x960>
   34d88:	ldrb	r8, [lr], #1
   34d8c:	mov	r3, r0
   34d90:	sub	r2, r8, #48	; 0x30
   34d94:	uxtb	r2, r2
   34d98:	cmp	r2, #10
   34d9c:	mov	r2, ip
   34da0:	bcc	34d58 <flatcc_json_parser_generic_json@@Base+0x4bc>
   34da4:	sub	lr, lr, #1
   34da8:	mov	r2, #1
   34dac:	b	35204 <flatcc_json_parser_generic_json@@Base+0x968>
   34db0:	ldmib	sp, {r5, r8}
   34db4:	add	r0, r7, #1
   34db8:	cmp	r4, r0
   34dbc:	beq	35068 <flatcc_json_parser_generic_json@@Base+0x7cc>
   34dc0:	ldrb	r1, [r0], #1
   34dc4:	sub	r1, r1, #48	; 0x30
   34dc8:	uxtb	r1, r1
   34dcc:	cmp	r1, #10
   34dd0:	bcc	34db8 <flatcc_json_parser_generic_json@@Base+0x51c>
   34dd4:	sub	r1, r0, #1
   34dd8:	b	34c30 <flatcc_json_parser_generic_json@@Base+0x394>
   34ddc:	ldr	r1, [sp, #16]
   34de0:	ldr	r0, [r1]
   34de4:	cmp	r0, #0
   34de8:	beq	350ac <flatcc_json_parser_generic_json@@Base+0x810>
   34dec:	ldmib	sp, {r5, r8}
   34df0:	mov	r1, r4
   34df4:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   34df8:	cmp	r7, r4
   34dfc:	beq	350d0 <flatcc_json_parser_generic_json@@Base+0x834>
   34e00:	ldmib	sp, {r5, r8}
   34e04:	add	r0, r7, #1
   34e08:	mov	r1, r4
   34e0c:	add	r7, sp, #20
   34e10:	cmp	r0, r4
   34e14:	bne	35640 <flatcc_json_parser_generic_json@@Base+0xda4>
   34e18:	b	35724 <flatcc_json_parser_generic_json@@Base+0xe88>
   34e1c:	cmp	r6, #512	; 0x200
   34e20:	beq	3588c <flatcc_json_parser_generic_json@@Base+0xff0>
   34e24:	add	r0, sp, #24
   34e28:	mov	r1, #93	; 0x5d
   34e2c:	strb	r1, [r0, r6]
   34e30:	add	r1, r7, #1
   34e34:	ldmib	sp, {r5, r8}
   34e38:	sub	r0, r4, r1
   34e3c:	cmp	r0, #2
   34e40:	blt	35104 <flatcc_json_parser_generic_json@@Base+0x868>
   34e44:	ldrb	r0, [r1]
   34e48:	cmp	r0, #32
   34e4c:	bls	350f4 <flatcc_json_parser_generic_json@@Base+0x858>
   34e50:	mov	r7, r1
   34e54:	cmp	r7, r4
   34e58:	bne	3511c <flatcc_json_parser_generic_json@@Base+0x880>
   34e5c:	b	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   34e60:	sub	r0, r4, r7
   34e64:	mov	r1, r7
   34e68:	cmp	r0, #4
   34e6c:	blt	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   34e70:	mov	r1, r7
   34e74:	movw	r2, #30062	; 0x756e
   34e78:	ldr	r0, [r1], #4
   34e7c:	movt	r2, #27756	; 0x6c6c
   34e80:	cmp	r0, r2
   34e84:	movne	r1, r7
   34e88:	b	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   34e8c:	cmp	r6, #512	; 0x200
   34e90:	beq	3588c <flatcc_json_parser_generic_json@@Base+0xff0>
   34e94:	add	r0, sp, #24
   34e98:	mov	r1, #125	; 0x7d
   34e9c:	strb	r1, [r0, r6]
   34ea0:	add	r1, r7, #1
   34ea4:	ldmib	sp, {r5, r8}
   34ea8:	sub	r0, r4, r1
   34eac:	cmp	r0, #2
   34eb0:	blt	35144 <flatcc_json_parser_generic_json@@Base+0x8a8>
   34eb4:	ldrb	r0, [r1]
   34eb8:	cmp	r0, #32
   34ebc:	bls	35134 <flatcc_json_parser_generic_json@@Base+0x898>
   34ec0:	mov	r7, r1
   34ec4:	cmp	r7, r4
   34ec8:	bne	3515c <flatcc_json_parser_generic_json@@Base+0x8c0>
   34ecc:	b	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   34ed0:	add	r1, r1, #2
   34ed4:	mov	r2, r4
   34ed8:	cmp	r1, r4
   34edc:	beq	3506c <flatcc_json_parser_generic_json@@Base+0x7d0>
   34ee0:	ldrb	r0, [r1]
   34ee4:	sub	r2, r0, #48	; 0x30
   34ee8:	uxtb	r2, r2
   34eec:	cmp	r2, #9
   34ef0:	bhi	34f04 <flatcc_json_parser_generic_json@@Base+0x668>
   34ef4:	add	r1, r1, #1
   34ef8:	cmp	r4, r1
   34efc:	bne	34ee0 <flatcc_json_parser_generic_json@@Base+0x644>
   34f00:	b	35068 <flatcc_json_parser_generic_json@@Base+0x7cc>
   34f04:	cmp	r1, r4
   34f08:	mov	r2, r4
   34f0c:	beq	3506c <flatcc_json_parser_generic_json@@Base+0x7d0>
   34f10:	orr	r2, r0, #32
   34f14:	cmp	r2, #101	; 0x65
   34f18:	bne	34f78 <flatcc_json_parser_generic_json@@Base+0x6dc>
   34f1c:	add	r0, r1, #1
   34f20:	cmp	r0, r4
   34f24:	beq	35174 <flatcc_json_parser_generic_json@@Base+0x8d8>
   34f28:	ldrb	r2, [r0]
   34f2c:	cmp	r2, #45	; 0x2d
   34f30:	cmpne	r2, #43	; 0x2b
   34f34:	addeq	r0, r1, #2
   34f38:	cmp	r0, r4
   34f3c:	beq	34c60 <flatcc_json_parser_generic_json@@Base+0x3c4>
   34f40:	ldrb	r1, [r0]
   34f44:	sub	r1, r1, #48	; 0x30
   34f48:	uxtb	r1, r1
   34f4c:	cmp	r1, #9
   34f50:	bhi	34c60 <flatcc_json_parser_generic_json@@Base+0x3c4>
   34f54:	add	r1, r0, #1
   34f58:	cmp	r4, r1
   34f5c:	beq	35068 <flatcc_json_parser_generic_json@@Base+0x7cc>
   34f60:	ldrb	r0, [r1], #1
   34f64:	sub	r2, r0, #48	; 0x30
   34f68:	uxtb	r2, r2
   34f6c:	cmp	r2, #10
   34f70:	bcc	34f58 <flatcc_json_parser_generic_json@@Base+0x6bc>
   34f74:	sub	r1, r1, #1
   34f78:	cmp	r1, r4
   34f7c:	mov	r2, r4
   34f80:	beq	3506c <flatcc_json_parser_generic_json@@Base+0x7d0>
   34f84:	sub	r2, r0, #9
   34f88:	cmp	r2, #49	; 0x31
   34f8c:	bhi	35758 <flatcc_json_parser_generic_json@@Base+0xebc>
   34f90:	add	r0, pc, #8
   34f94:	ldr	r3, [r0, r2, lsl #2]
   34f98:	mov	r2, r1
   34f9c:	add	pc, r0, r3
   34fa0:	andeq	r0, r0, r4, ror #6
   34fa4:	andeq	r0, r0, r4, ror #6
   34fa8:	andeq	r0, r0, r4, ror #6
   34fac:	andeq	r0, r0, ip, asr #1
   34fb0:	andeq	r0, r0, r4, ror #6
   34fb4:	andeq	r0, r0, ip, asr #1
   34fb8:	andeq	r0, r0, ip, asr #1
   34fbc:	andeq	r0, r0, ip, asr #1
   34fc0:	andeq	r0, r0, ip, asr #1
   34fc4:	andeq	r0, r0, ip, asr #1
   34fc8:	andeq	r0, r0, ip, asr #1
   34fcc:	andeq	r0, r0, ip, asr #1
   34fd0:	andeq	r0, r0, ip, asr #1
   34fd4:	andeq	r0, r0, ip, asr #1
   34fd8:	andeq	r0, r0, ip, asr #1
   34fdc:	andeq	r0, r0, ip, asr #1
   34fe0:	andeq	r0, r0, ip, asr #1
   34fe4:	andeq	r0, r0, ip, asr #1
   34fe8:	andeq	r0, r0, ip, asr #1
   34fec:	andeq	r0, r0, ip, asr #1
   34ff0:	andeq	r0, r0, ip, asr #1
   34ff4:	andeq	r0, r0, ip, asr #1
   34ff8:	andeq	r0, r0, ip, asr #1
   34ffc:	andeq	r0, r0, r4, ror #6
   35000:	andeq	r0, r0, ip, asr #1
   35004:	andeq	r0, r0, ip, asr #1
   35008:	andeq	r0, r0, ip, asr #1
   3500c:	andeq	r0, r0, ip, asr #1
   35010:	andeq	r0, r0, ip, asr #1
   35014:	andeq	r0, r0, ip, asr #1
   35018:	andeq	r0, r0, ip, asr #1
   3501c:	andeq	r0, r0, ip, asr #1
   35020:	andeq	r0, r0, ip, asr #1
   35024:	andeq	r0, r0, ip, asr #1
   35028:	andeq	r0, r0, ip, asr #1
   3502c:	andeq	r0, r0, r4, ror #6
   35030:	andeq	r0, r0, ip, asr #1
   35034:	andeq	r0, r0, ip, asr #1
   35038:	andeq	r0, r0, ip, asr #1
   3503c:	andeq	r0, r0, ip, asr #1
   35040:	andeq	r0, r0, ip, asr #1
   35044:	andeq	r0, r0, ip, asr #1
   35048:	andeq	r0, r0, ip, asr #1
   3504c:	andeq	r0, r0, ip, asr #1
   35050:	andeq	r0, r0, ip, asr #1
   35054:	andeq	r0, r0, ip, asr #1
   35058:	andeq	r0, r0, ip, asr #1
   3505c:	andeq	r0, r0, ip, asr #1
   35060:	andeq	r0, r0, ip, asr #1
   35064:	andeq	r0, r0, r4, ror #6
   35068:	mov	r2, r4
   3506c:	ldr	r1, [sp, #16]
   35070:	ldr	r0, [r1]
   35074:	cmp	r0, #0
   35078:	beq	35084 <flatcc_json_parser_generic_json@@Base+0x7e8>
   3507c:	mov	r1, r4
   35080:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   35084:	mov	r0, #6
   35088:	str	r0, [r1]
   3508c:	add	r1, r2, #1
   35090:	ldr	r0, [r5]
   35094:	sub	r0, r1, r0
   35098:	mov	r1, r4
   3509c:	str	r0, [r8]
   350a0:	ldr	r0, [sp, #12]
   350a4:	str	r2, [r0]
   350a8:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   350ac:	ldr	r5, [sp, #4]
   350b0:	mov	r0, #6
   350b4:	ldr	r8, [sp, #8]
   350b8:	b	35188 <flatcc_json_parser_generic_json@@Base+0x8ec>
   350bc:	mov	lr, r7
   350c0:	mov	ip, #0
   350c4:	b	35204 <flatcc_json_parser_generic_json@@Base+0x968>
   350c8:	add	r1, r7, #4
   350cc:	b	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   350d0:	ldr	r1, [sp, #16]
   350d4:	ldr	r0, [r1]
   350d8:	ldmib	sp, {r5, r8}
   350dc:	cmp	r0, #0
   350e0:	bne	3507c <flatcc_json_parser_generic_json@@Base+0x7e0>
   350e4:	mov	r0, #16
   350e8:	b	35188 <flatcc_json_parser_generic_json@@Base+0x8ec>
   350ec:	mov	r2, r0
   350f0:	b	34994 <flatcc_json_parser_generic_json@@Base+0xf8>
   350f4:	bne	35104 <flatcc_json_parser_generic_json@@Base+0x868>
   350f8:	ldrb	r0, [r7, #2]!
   350fc:	cmp	r0, #32
   35100:	bhi	35114 <flatcc_json_parser_generic_json@@Base+0x878>
   35104:	mov	r0, r9
   35108:	mov	r2, r4
   3510c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   35110:	mov	r7, r0
   35114:	cmp	r7, r4
   35118:	beq	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   3511c:	ldrb	r0, [r7]
   35120:	add	r6, r6, #1
   35124:	cmp	r0, #93	; 0x5d
   35128:	mov	r1, r7
   3512c:	bne	355ec <flatcc_json_parser_generic_json@@Base+0xd50>
   35130:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   35134:	bne	35144 <flatcc_json_parser_generic_json@@Base+0x8a8>
   35138:	ldrb	r0, [r7, #2]!
   3513c:	cmp	r0, #32
   35140:	bhi	35154 <flatcc_json_parser_generic_json@@Base+0x8b8>
   35144:	mov	r0, r9
   35148:	mov	r2, r4
   3514c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   35150:	mov	r7, r0
   35154:	cmp	r7, r4
   35158:	beq	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   3515c:	ldrb	r0, [r7]
   35160:	add	r6, r6, #1
   35164:	cmp	r0, #125	; 0x7d
   35168:	mov	r1, r7
   3516c:	beq	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   35170:	b	355ec <flatcc_json_parser_generic_json@@Base+0xd50>
   35174:	ldr	r1, [sp, #16]
   35178:	ldr	r0, [r1]
   3517c:	cmp	r0, #0
   35180:	bne	3507c <flatcc_json_parser_generic_json@@Base+0x7e0>
   35184:	mov	r0, #6
   35188:	str	r0, [r1]
   3518c:	ldr	r1, [sp]
   35190:	ldr	r0, [r5]
   35194:	sub	r0, r1, r0
   35198:	str	r0, [r8]
   3519c:	ldr	r0, [sp, #12]
   351a0:	mov	r1, r4
   351a4:	str	r4, [r0]
   351a8:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   351ac:	ldr	r0, [sp, #16]
   351b0:	mov	ip, #0
   351b4:	mov	r3, r4
   351b8:	ldr	r2, [r0]
   351bc:	mov	r0, #0
   351c0:	cmp	r2, #0
   351c4:	bne	3528c <flatcc_json_parser_generic_json@@Base+0x9f0>
   351c8:	ldr	r1, [sp, #16]
   351cc:	mov	r2, #8
   351d0:	sub	r0, lr, #1
   351d4:	str	r2, [r1]
   351d8:	ldr	r1, [sp, #4]
   351dc:	add	r2, r0, #1
   351e0:	ldr	r1, [r1]
   351e4:	sub	r1, r2, r1
   351e8:	ldr	r2, [sp, #8]
   351ec:	str	r1, [r2]
   351f0:	ldr	r1, [sp, #12]
   351f4:	str	r0, [r1]
   351f8:	b	35278 <flatcc_json_parser_generic_json@@Base+0x9dc>
   351fc:	mov	r2, #0
   35200:	mov	lr, r4
   35204:	cmp	lr, r7
   35208:	mov	r1, r7
   3520c:	beq	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   35210:	cmp	r2, #0
   35214:	beq	35288 <flatcc_json_parser_generic_json@@Base+0x9ec>
   35218:	ldrb	r1, [lr]
   3521c:	cmp	r1, #46	; 0x2e
   35220:	beq	35230 <flatcc_json_parser_generic_json@@Base+0x994>
   35224:	cmp	r1, #101	; 0x65
   35228:	cmpne	r1, #69	; 0x45
   3522c:	bne	35288 <flatcc_json_parser_generic_json@@Base+0x9ec>
   35230:	ldr	r0, [sp, #16]
   35234:	mov	ip, #0
   35238:	mov	r3, r4
   3523c:	ldr	r1, [r0]
   35240:	mov	r0, #0
   35244:	cmp	r1, #0
   35248:	bne	3528c <flatcc_json_parser_generic_json@@Base+0x9f0>
   3524c:	ldr	r0, [sp, #16]
   35250:	mov	r1, #12
   35254:	str	r1, [r0]
   35258:	ldr	r0, [sp, #4]
   3525c:	add	r1, lr, #1
   35260:	ldr	r0, [r0]
   35264:	sub	r0, r1, r0
   35268:	ldr	r1, [sp, #8]
   3526c:	str	r0, [r1]
   35270:	ldr	r0, [sp, #12]
   35274:	str	lr, [r0]
   35278:	mov	r0, #0
   3527c:	mov	ip, #0
   35280:	mov	r3, r4
   35284:	b	3528c <flatcc_json_parser_generic_json@@Base+0x9f0>
   35288:	mov	r3, lr
   3528c:	cmp	r3, r7
   35290:	mov	r1, r7
   35294:	beq	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   35298:	subs	r0, r0, #256	; 0x100
   3529c:	sbcs	r0, ip, #0
   352a0:	bcc	352ec <flatcc_json_parser_generic_json@@Base+0xa50>
   352a4:	ldr	r0, [sp, #16]
   352a8:	mov	r1, r4
   352ac:	ldr	r0, [r0]
   352b0:	cmp	r0, #0
   352b4:	bne	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   352b8:	ldr	r0, [sp, #16]
   352bc:	mov	r1, #7
   352c0:	str	r1, [r0]
   352c4:	ldr	r0, [sp, #4]
   352c8:	add	r1, r3, #1
   352cc:	ldr	r0, [r0]
   352d0:	sub	r0, r1, r0
   352d4:	ldr	r1, [sp, #8]
   352d8:	str	r0, [r1]
   352dc:	ldr	r0, [sp, #12]
   352e0:	mov	r1, r4
   352e4:	str	r3, [r0]
   352e8:	b	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   352ec:	mov	r1, r3
   352f0:	b	352f8 <flatcc_json_parser_generic_json@@Base+0xa5c>
   352f4:	add	r1, r7, #5
   352f8:	ldmib	sp, {r5, r8}
   352fc:	cmp	r7, r1
   35300:	beq	35858 <flatcc_json_parser_generic_json@@Base+0xfbc>
   35304:	subs	r0, r1, r4
   35308:	mov	r3, r6
   3530c:	movwne	r0, #1
   35310:	cmp	r6, #0
   35314:	movwne	r3, #1
   35318:	cmp	r1, r4
   3531c:	beq	357ac <flatcc_json_parser_generic_json@@Base+0xf10>
   35320:	cmp	r6, #0
   35324:	beq	357bc <flatcc_json_parser_generic_json@@Base+0xf20>
   35328:	ldrb	r2, [sl, r6]
   3532c:	sub	r0, r4, r1
   35330:	cmp	r2, #93	; 0x5d
   35334:	bne	35354 <flatcc_json_parser_generic_json@@Base+0xab8>
   35338:	cmp	r0, #2
   3533c:	blt	35384 <flatcc_json_parser_generic_json@@Base+0xae8>
   35340:	ldrb	r0, [r1]
   35344:	cmp	r0, #32
   35348:	bls	35370 <flatcc_json_parser_generic_json@@Base+0xad4>
   3534c:	mov	r7, r1
   35350:	b	35394 <flatcc_json_parser_generic_json@@Base+0xaf8>
   35354:	cmp	r0, #2
   35358:	blt	353e8 <flatcc_json_parser_generic_json@@Base+0xb4c>
   3535c:	ldrb	r0, [r1]
   35360:	cmp	r0, #32
   35364:	bls	353d4 <flatcc_json_parser_generic_json@@Base+0xb38>
   35368:	mov	r7, r1
   3536c:	b	353f8 <flatcc_json_parser_generic_json@@Base+0xb5c>
   35370:	bne	35384 <flatcc_json_parser_generic_json@@Base+0xae8>
   35374:	mov	r7, r1
   35378:	ldrb	r0, [r7, #1]!
   3537c:	cmp	r0, #32
   35380:	bhi	35394 <flatcc_json_parser_generic_json@@Base+0xaf8>
   35384:	mov	r0, r9
   35388:	mov	r2, r4
   3538c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   35390:	mov	r7, r0
   35394:	cmp	r7, r4
   35398:	mov	r1, r4
   3539c:	beq	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   353a0:	ldrb	r0, [r7]
   353a4:	cmp	r0, #44	; 0x2c
   353a8:	beq	35458 <flatcc_json_parser_generic_json@@Base+0xbbc>
   353ac:	cmp	r0, #93	; 0x5d
   353b0:	beq	35574 <flatcc_json_parser_generic_json@@Base+0xcd8>
   353b4:	ldr	r0, [sp, #16]
   353b8:	mov	r1, r4
   353bc:	ldr	r0, [r0]
   353c0:	cmp	r0, #0
   353c4:	bne	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   353c8:	ldr	r0, [sp, #16]
   353cc:	mov	r1, #9
   353d0:	b	35434 <flatcc_json_parser_generic_json@@Base+0xb98>
   353d4:	bne	353e8 <flatcc_json_parser_generic_json@@Base+0xb4c>
   353d8:	mov	r7, r1
   353dc:	ldrb	r0, [r7, #1]!
   353e0:	cmp	r0, #32
   353e4:	bhi	353f8 <flatcc_json_parser_generic_json@@Base+0xb5c>
   353e8:	mov	r0, r9
   353ec:	mov	r2, r4
   353f0:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   353f4:	mov	r7, r0
   353f8:	cmp	r7, r4
   353fc:	mov	r1, r4
   35400:	beq	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   35404:	ldrb	r0, [r7]
   35408:	cmp	r0, #44	; 0x2c
   3540c:	beq	354a0 <flatcc_json_parser_generic_json@@Base+0xc04>
   35410:	cmp	r0, #125	; 0x7d
   35414:	beq	35574 <flatcc_json_parser_generic_json@@Base+0xcd8>
   35418:	ldr	r0, [sp, #16]
   3541c:	mov	r1, r4
   35420:	ldr	r0, [r0]
   35424:	cmp	r0, #0
   35428:	bne	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   3542c:	ldr	r0, [sp, #16]
   35430:	mov	r1, #10
   35434:	str	r1, [r0]
   35438:	add	r1, r7, #1
   3543c:	ldr	r0, [r5]
   35440:	sub	r0, r1, r0
   35444:	mov	r1, r4
   35448:	str	r0, [r8]
   3544c:	ldr	r0, [sp, #12]
   35450:	str	r7, [r0]
   35454:	b	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   35458:	add	r1, r7, #1
   3545c:	sub	r0, r4, r1
   35460:	cmp	r0, #2
   35464:	blt	35518 <flatcc_json_parser_generic_json@@Base+0xc7c>
   35468:	ldrb	r0, [r1]
   3546c:	cmp	r0, #32
   35470:	bls	35508 <flatcc_json_parser_generic_json@@Base+0xc6c>
   35474:	mov	r7, r1
   35478:	cmp	r7, r4
   3547c:	bne	35530 <flatcc_json_parser_generic_json@@Base+0xc94>
   35480:	ldr	r0, [sp, #16]
   35484:	mov	r1, r4
   35488:	ldr	r0, [r0]
   3548c:	cmp	r0, #0
   35490:	bne	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   35494:	ldr	r0, [sp, #16]
   35498:	mov	r1, #9
   3549c:	b	354e4 <flatcc_json_parser_generic_json@@Base+0xc48>
   354a0:	add	r1, r7, #1
   354a4:	sub	r0, r4, r1
   354a8:	cmp	r0, #2
   354ac:	blt	35550 <flatcc_json_parser_generic_json@@Base+0xcb4>
   354b0:	ldrb	r0, [r1]
   354b4:	cmp	r0, #32
   354b8:	bls	35540 <flatcc_json_parser_generic_json@@Base+0xca4>
   354bc:	mov	r7, r1
   354c0:	cmp	r7, r4
   354c4:	bne	35568 <flatcc_json_parser_generic_json@@Base+0xccc>
   354c8:	ldr	r0, [sp, #16]
   354cc:	mov	r1, r4
   354d0:	ldr	r0, [r0]
   354d4:	cmp	r0, #0
   354d8:	bne	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   354dc:	ldr	r0, [sp, #16]
   354e0:	mov	r1, #10
   354e4:	str	r1, [r0]
   354e8:	ldr	r1, [sp]
   354ec:	ldr	r0, [r5]
   354f0:	sub	r0, r1, r0
   354f4:	mov	r1, r4
   354f8:	str	r0, [r8]
   354fc:	ldr	r0, [sp, #12]
   35500:	str	r4, [r0]
   35504:	b	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   35508:	bne	35518 <flatcc_json_parser_generic_json@@Base+0xc7c>
   3550c:	ldrb	r0, [r7, #2]!
   35510:	cmp	r0, #32
   35514:	bhi	35528 <flatcc_json_parser_generic_json@@Base+0xc8c>
   35518:	mov	r0, r9
   3551c:	mov	r2, r4
   35520:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   35524:	mov	r7, r0
   35528:	cmp	r7, r4
   3552c:	beq	35480 <flatcc_json_parser_generic_json@@Base+0xbe4>
   35530:	ldrb	r0, [r7]
   35534:	cmp	r0, #93	; 0x5d
   35538:	beq	35574 <flatcc_json_parser_generic_json@@Base+0xcd8>
   3553c:	b	355ec <flatcc_json_parser_generic_json@@Base+0xd50>
   35540:	bne	35550 <flatcc_json_parser_generic_json@@Base+0xcb4>
   35544:	ldrb	r0, [r7, #2]!
   35548:	cmp	r0, #32
   3554c:	bhi	35560 <flatcc_json_parser_generic_json@@Base+0xcc4>
   35550:	mov	r0, r9
   35554:	mov	r2, r4
   35558:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   3555c:	mov	r7, r0
   35560:	cmp	r7, r4
   35564:	beq	354c8 <flatcc_json_parser_generic_json@@Base+0xc2c>
   35568:	ldrb	r0, [r7]
   3556c:	cmp	r0, #125	; 0x7d
   35570:	bne	355ec <flatcc_json_parser_generic_json@@Base+0xd50>
   35574:	add	r2, r7, #1
   35578:	sub	r0, r4, r2
   3557c:	cmp	r0, #2
   35580:	blt	355ac <flatcc_json_parser_generic_json@@Base+0xd10>
   35584:	ldrb	r0, [r2]
   35588:	cmp	r0, #32
   3558c:	bls	35598 <flatcc_json_parser_generic_json@@Base+0xcfc>
   35590:	mov	r1, r2
   35594:	b	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   35598:	bne	355ac <flatcc_json_parser_generic_json@@Base+0xd10>
   3559c:	ldrb	r0, [r7, #2]!
   355a0:	cmp	r0, #32
   355a4:	mov	r1, r7
   355a8:	bhi	355c0 <flatcc_json_parser_generic_json@@Base+0xd24>
   355ac:	mov	r1, r2
   355b0:	mov	r0, r9
   355b4:	mov	r2, r4
   355b8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   355bc:	mov	r1, r0
   355c0:	subs	r0, r1, r4
   355c4:	sub	r2, r6, #1
   355c8:	movwne	r0, #1
   355cc:	subs	r3, r6, #1
   355d0:	movwne	r3, #1
   355d4:	cmp	r1, r4
   355d8:	beq	357c0 <flatcc_json_parser_generic_json@@Base+0xf24>
   355dc:	cmp	r6, #1
   355e0:	mov	r6, r2
   355e4:	bne	35328 <flatcc_json_parser_generic_json@@Base+0xa8c>
   355e8:	b	357c0 <flatcc_json_parser_generic_json@@Base+0xf24>
   355ec:	add	r0, sp, #24
   355f0:	cmp	r7, r4
   355f4:	add	r0, r0, r6
   355f8:	bne	348f0 <flatcc_json_parser_generic_json@@Base+0x54>
   355fc:	b	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   35600:	ldr	r0, [sp, #16]
   35604:	mov	r1, r4
   35608:	ldr	r0, [r0]
   3560c:	cmp	r0, #0
   35610:	bne	356e4 <flatcc_json_parser_generic_json@@Base+0xe48>
   35614:	ldr	r0, [sp, #16]
   35618:	mov	r1, #20
   3561c:	str	r1, [r0]
   35620:	ldr	r1, [sp]
   35624:	ldr	r0, [r5]
   35628:	sub	r0, r1, r0
   3562c:	mov	r1, r4
   35630:	str	r0, [r8]
   35634:	ldr	r0, [sp, #12]
   35638:	str	r4, [r0]
   3563c:	b	356e4 <flatcc_json_parser_generic_json@@Base+0xe48>
   35640:	ldrb	r1, [r0]
   35644:	cmp	r1, #34	; 0x22
   35648:	beq	35704 <flatcc_json_parser_generic_json@@Base+0xe68>
   3564c:	cmp	r1, #32
   35650:	bcc	3568c <flatcc_json_parser_generic_json@@Base+0xdf0>
   35654:	rsb	r0, r0, #0
   35658:	uxtb	r2, r1
   3565c:	cmp	r2, #34	; 0x22
   35660:	cmpne	r2, #92	; 0x5c
   35664:	beq	356cc <flatcc_json_parser_generic_json@@Base+0xe30>
   35668:	add	r1, r4, r0
   3566c:	cmp	r1, #1
   35670:	beq	35600 <flatcc_json_parser_generic_json@@Base+0xd64>
   35674:	rsb	r1, r0, #0
   35678:	sub	r0, r0, #1
   3567c:	ldrb	r1, [r1, #1]
   35680:	cmp	r1, #32
   35684:	bcs	35658 <flatcc_json_parser_generic_json@@Base+0xdbc>
   35688:	rsb	r0, r0, #0
   3568c:	ldr	r1, [sp, #16]
   35690:	ldr	r1, [r1]
   35694:	cmp	r1, #0
   35698:	mov	r1, r4
   3569c:	bne	356e4 <flatcc_json_parser_generic_json@@Base+0xe48>
   356a0:	ldr	r1, [sp, #16]
   356a4:	mov	r2, #17
   356a8:	str	r2, [r1]
   356ac:	add	r2, r0, #1
   356b0:	ldr	r1, [r5]
   356b4:	sub	r1, r2, r1
   356b8:	str	r1, [r8]
   356bc:	ldr	r1, [sp, #12]
   356c0:	str	r0, [r1]
   356c4:	mov	r1, r4
   356c8:	b	356e4 <flatcc_json_parser_generic_json@@Base+0xe48>
   356cc:	adds	r1, r4, r0
   356d0:	mov	r1, r4
   356d4:	beq	356e4 <flatcc_json_parser_generic_json@@Base+0xe48>
   356d8:	rsb	r1, r0, #0
   356dc:	cmp	r2, #34	; 0x22
   356e0:	beq	35708 <flatcc_json_parser_generic_json@@Base+0xe6c>
   356e4:	mov	r0, r9
   356e8:	mov	r2, r4
   356ec:	mov	r3, r7
   356f0:	bl	340e4 <flatcc_json_parser_string_escape@@Base>
   356f4:	cmp	r0, r4
   356f8:	bne	35640 <flatcc_json_parser_generic_json@@Base+0xda4>
   356fc:	mov	r1, r4
   35700:	b	35724 <flatcc_json_parser_generic_json@@Base+0xe88>
   35704:	mov	r1, r0
   35708:	cmp	r1, r4
   3570c:	beq	35724 <flatcc_json_parser_generic_json@@Base+0xe88>
   35710:	ldrb	r0, [r1]
   35714:	cmp	r0, #34	; 0x22
   35718:	bne	35724 <flatcc_json_parser_generic_json@@Base+0xe88>
   3571c:	add	r1, r1, #1
   35720:	b	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   35724:	ldr	r2, [sp, #16]
   35728:	ldr	r0, [r2]
   3572c:	cmp	r0, #0
   35730:	bne	3507c <flatcc_json_parser_generic_json@@Base+0x7e0>
   35734:	mov	r0, #20
   35738:	str	r0, [r2]
   3573c:	add	r2, r1, #1
   35740:	ldr	r0, [r5]
   35744:	sub	r0, r2, r0
   35748:	str	r0, [r8]
   3574c:	ldr	r0, [sp, #12]
   35750:	str	r1, [r0]
   35754:	b	3507c <flatcc_json_parser_generic_json@@Base+0x7e0>
   35758:	cmp	r0, #93	; 0x5d
   3575c:	beq	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   35760:	cmp	r0, #125	; 0x7d
   35764:	mov	r2, r1
   35768:	beq	35304 <flatcc_json_parser_generic_json@@Base+0xa68>
   3576c:	b	3506c <flatcc_json_parser_generic_json@@Base+0x7d0>
   35770:	mov	r1, r7
   35774:	b	35818 <flatcc_json_parser_generic_json@@Base+0xf7c>
   35778:	ldr	r1, [sp, #16]
   3577c:	ldr	r0, [r1]
   35780:	cmp	r0, #0
   35784:	bne	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   35788:	mov	r0, #5
   3578c:	str	r0, [r1]
   35790:	ldr	r0, [sp, #4]
   35794:	add	r1, r7, #1
   35798:	ldr	r0, [r0]
   3579c:	sub	r0, r1, r0
   357a0:	ldr	r1, [sp, #8]
   357a4:	str	r0, [r1]
   357a8:	b	35880 <flatcc_json_parser_generic_json@@Base+0xfe4>
   357ac:	mov	r2, r6
   357b0:	cmp	r0, #0
   357b4:	beq	357c8 <flatcc_json_parser_generic_json@@Base+0xf2c>
   357b8:	b	35818 <flatcc_json_parser_generic_json@@Base+0xf7c>
   357bc:	mov	r2, r6
   357c0:	cmp	r0, #0
   357c4:	bne	35818 <flatcc_json_parser_generic_json@@Base+0xf7c>
   357c8:	cmp	r3, #0
   357cc:	beq	35818 <flatcc_json_parser_generic_json@@Base+0xf7c>
   357d0:	ldr	r3, [sp, #16]
   357d4:	ldr	r0, [r3]
   357d8:	cmp	r0, #0
   357dc:	bne	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   357e0:	add	r0, sp, #24
   357e4:	mov	r1, #10
   357e8:	add	r0, r0, r2
   357ec:	ldrb	r0, [r0, #-1]
   357f0:	cmp	r0, #93	; 0x5d
   357f4:	movweq	r1, #9
   357f8:	str	r1, [r3]
   357fc:	ldr	r0, [r5]
   35800:	ldr	r1, [sp]
   35804:	sub	r0, r1, r0
   35808:	str	r0, [r8]
   3580c:	ldr	r0, [sp, #12]
   35810:	str	r4, [r0]
   35814:	mov	r1, r4
   35818:	mov	r0, r1
   3581c:	sub	sp, fp, #28
   35820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35824:	ldr	r1, [sp, #16]
   35828:	ldr	r0, [r1]
   3582c:	cmp	r0, #0
   35830:	bne	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   35834:	mov	r0, #10
   35838:	str	r0, [r1]
   3583c:	b	357fc <flatcc_json_parser_generic_json@@Base+0xf60>
   35840:	ldr	r1, [sp, #16]
   35844:	ldr	r0, [r1]
   35848:	cmp	r0, #0
   3584c:	bne	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   35850:	mov	r0, #4
   35854:	b	3586c <flatcc_json_parser_generic_json@@Base+0xfd0>
   35858:	ldr	r1, [sp, #16]
   3585c:	ldr	r0, [r1]
   35860:	cmp	r0, #0
   35864:	bne	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   35868:	mov	r0, #5
   3586c:	str	r0, [r1]
   35870:	add	r1, r7, #1
   35874:	ldr	r0, [r5]
   35878:	sub	r0, r1, r0
   3587c:	str	r0, [r8]
   35880:	ldr	r0, [sp, #12]
   35884:	str	r7, [r0]
   35888:	b	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   3588c:	ldr	r3, [sp, #16]
   35890:	ldr	r0, [r3]
   35894:	ldmib	sp, {r1, r2}
   35898:	cmp	r0, #0
   3589c:	bne	35814 <flatcc_json_parser_generic_json@@Base+0xf78>
   358a0:	mov	r0, #2
   358a4:	str	r0, [r3]
   358a8:	ldr	r0, [r1]
   358ac:	add	r1, r7, #1
   358b0:	sub	r0, r1, r0
   358b4:	str	r0, [r2]
   358b8:	b	35880 <flatcc_json_parser_generic_json@@Base+0xfe4>
   358bc:	andeq	r3, r1, r0, lsl r5

000358c0 <flatcc_json_parser_double@@Base>:
   358c0:	push	{r4, r5, r6, r7, fp, lr}
   358c4:	add	fp, sp, #16
   358c8:	mov	r5, r0
   358cc:	mov	r0, #0
   358d0:	mov	r6, r1
   358d4:	cmp	r1, r2
   358d8:	str	r0, [r3]
   358dc:	str	r0, [r3, #4]
   358e0:	moveq	r0, r6
   358e4:	popeq	{r4, r5, r6, r7, fp, pc}
   358e8:	mov	r0, r6
   358ec:	mov	r4, r2
   358f0:	mov	r7, r3
   358f4:	ldrb	r1, [r0], #1
   358f8:	cmp	r1, #45	; 0x2d
   358fc:	movne	r0, r6
   35900:	sub	r2, r2, r0
   35904:	cmp	r2, #2
   35908:	blt	35934 <flatcc_json_parser_double@@Base+0x74>
   3590c:	sub	r1, r1, #45	; 0x2d
   35910:	clz	r1, r1
   35914:	lsr	r1, r1, #5
   35918:	ldrb	r1, [r6, r1]
   3591c:	cmp	r1, #46	; 0x2e
   35920:	beq	35984 <flatcc_json_parser_double@@Base+0xc4>
   35924:	cmp	r1, #48	; 0x30
   35928:	ldrbeq	r0, [r0, #1]
   3592c:	cmpeq	r0, #48	; 0x30
   35930:	beq	35984 <flatcc_json_parser_double@@Base+0xc4>
   35934:	sub	r1, r4, r6
   35938:	mov	r0, r6
   3593c:	mov	r2, r7
   35940:	bl	359b8 <flatcc_json_parser_double@@Base+0xf8>
   35944:	cmp	r0, #0
   35948:	cmpne	r0, r6
   3594c:	popne	{r4, r5, r6, r7, fp, pc}
   35950:	vldr	d0, [r7]
   35954:	bl	14e7c <__isinf@plt>
   35958:	ldr	r1, [r5, #20]
   3595c:	cmp	r0, #0
   35960:	beq	35974 <flatcc_json_parser_double@@Base+0xb4>
   35964:	cmp	r1, #0
   35968:	bne	3597c <flatcc_json_parser_double@@Base+0xbc>
   3596c:	mov	r0, #7
   35970:	b	35994 <flatcc_json_parser_double@@Base+0xd4>
   35974:	cmp	r1, #0
   35978:	beq	35990 <flatcc_json_parser_double@@Base+0xd0>
   3597c:	mov	r0, r4
   35980:	pop	{r4, r5, r6, r7, fp, pc}
   35984:	ldr	r0, [r5, #20]
   35988:	cmp	r0, #0
   3598c:	bne	3597c <flatcc_json_parser_double@@Base+0xbc>
   35990:	mov	r0, #6
   35994:	str	r6, [r5, #32]
   35998:	add	r2, r6, #1
   3599c:	ldr	r1, [r5, #4]
   359a0:	sub	r1, r2, r1
   359a4:	str	r1, [r5, #16]
   359a8:	str	r0, [r5, #20]
   359ac:	mov	r0, r4
   359b0:	pop	{r4, r5, r6, r7, fp, pc}
   359b4:	nop	{0}
   359b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   359bc:	add	fp, sp, #28
   359c0:	sub	sp, sp, #36	; 0x24
   359c4:	cmp	r1, #1000	; 0x3e8
   359c8:	mov	r3, r1
   359cc:	mov	r6, #0
   359d0:	mov	r9, r0
   359d4:	movge	r1, #1000	; 0x3e8
   359d8:	str	r6, [r2]
   359dc:	str	r6, [r2, #4]
   359e0:	add	lr, r0, r1
   359e4:	add	r4, lr, #1
   359e8:	cmp	r4, r0
   359ec:	beq	35a60 <flatcc_json_parser_double@@Base+0x1a0>
   359f0:	ldrb	r0, [r9]
   359f4:	mov	r5, r9
   359f8:	cmp	r0, #45	; 0x2d
   359fc:	bne	35a14 <flatcc_json_parser_double@@Base+0x154>
   35a00:	cmp	r1, #0
   35a04:	beq	35dcc <flatcc_json_parser_double@@Base+0x50c>
   35a08:	add	r5, r9, #1
   35a0c:	mov	r6, #1
   35a10:	ldrb	r0, [r5]
   35a14:	cmp	r0, #48	; 0x30
   35a18:	bne	35a48 <flatcc_json_parser_double@@Base+0x188>
   35a1c:	add	ip, r5, #1
   35a20:	cmp	r5, lr
   35a24:	beq	35ab0 <flatcc_json_parser_double@@Base+0x1f0>
   35a28:	ldrb	r1, [ip]
   35a2c:	orr	r0, r1, #32
   35a30:	cmp	r0, #120	; 0x78
   35a34:	bne	35a80 <flatcc_json_parser_double@@Base+0x1c0>
   35a38:	mov	r0, #0
   35a3c:	str	r0, [r2]
   35a40:	str	r0, [r2, #4]
   35a44:	b	35a60 <flatcc_json_parser_double@@Base+0x1a0>
   35a48:	sub	r1, r0, #49	; 0x31
   35a4c:	uxtb	r1, r1
   35a50:	cmp	r1, #9
   35a54:	bcc	35a68 <flatcc_json_parser_double@@Base+0x1a8>
   35a58:	cmp	r6, #0
   35a5c:	movne	r9, #0
   35a60:	mov	r2, r9
   35a64:	b	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35a68:	sub	r0, r0, #48	; 0x30
   35a6c:	add	ip, r5, #1
   35a70:	asr	r1, r0, #31
   35a74:	cmp	ip, r4
   35a78:	bne	35ac0 <flatcc_json_parser_double@@Base+0x200>
   35a7c:	b	35dcc <flatcc_json_parser_double@@Base+0x50c>
   35a80:	cmp	r1, #48	; 0x30
   35a84:	mov	r0, #0
   35a88:	mov	r1, #0
   35a8c:	bne	35ab8 <flatcc_json_parser_double@@Base+0x1f8>
   35a90:	add	r0, r5, #2
   35a94:	mov	ip, r0
   35a98:	cmp	r4, r0
   35a9c:	beq	35ab0 <flatcc_json_parser_double@@Base+0x1f0>
   35aa0:	mov	r0, ip
   35aa4:	ldrb	r1, [r0], #1
   35aa8:	cmp	r1, #48	; 0x30
   35aac:	beq	35a94 <flatcc_json_parser_double@@Base+0x1d4>
   35ab0:	mov	r0, #0
   35ab4:	mov	r1, #0
   35ab8:	cmp	ip, r4
   35abc:	beq	35dcc <flatcc_json_parser_double@@Base+0x50c>
   35ac0:	movw	r5, #39321	; 0x9999
   35ac4:	mov	sl, #10
   35ac8:	mov	r7, ip
   35acc:	str	r6, [sp, #20]
   35ad0:	str	r2, [sp, #24]
   35ad4:	movt	r5, #6553	; 0x1999
   35ad8:	ldrb	r8, [r7]
   35adc:	sub	r2, r8, #48	; 0x30
   35ae0:	uxtb	r6, r2
   35ae4:	mov	r2, #0
   35ae8:	cmp	r6, #9
   35aec:	bhi	35b24 <flatcc_json_parser_double@@Base+0x264>
   35af0:	movw	r6, #39320	; 0x9998
   35af4:	movt	r6, #39321	; 0x9999
   35af8:	subs	r6, r6, r0
   35afc:	sbcs	r6, r5, r1
   35b00:	bcc	35b3c <flatcc_json_parser_double@@Base+0x27c>
   35b04:	add	r1, r1, r1, lsl #2
   35b08:	add	r7, r7, #1
   35b0c:	lsl	r1, r1, #1
   35b10:	umlal	r8, r1, r0, sl
   35b14:	subs	r0, r8, #48	; 0x30
   35b18:	sbc	r1, r1, #0
   35b1c:	cmp	r4, r7
   35b20:	bne	35ad8 <flatcc_json_parser_double@@Base+0x218>
   35b24:	mov	r5, r1
   35b28:	mov	sl, #0
   35b2c:	str	r0, [sp, #28]
   35b30:	cmp	r7, r4
   35b34:	bne	35b60 <flatcc_json_parser_double@@Base+0x2a0>
   35b38:	b	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35b3c:	adds	r6, r0, #1
   35b40:	mov	sl, #1
   35b44:	adc	r5, r1, #0
   35b48:	cmp	r8, #52	; 0x34
   35b4c:	movls	r6, r0
   35b50:	movls	r5, r1
   35b54:	str	r6, [sp, #28]
   35b58:	cmp	r7, r4
   35b5c:	beq	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35b60:	sub	r8, r7, ip
   35b64:	mvn	ip, r3
   35b68:	mov	r3, #0
   35b6c:	cmn	ip, #1000	; 0x3e8
   35b70:	mov	r0, ip
   35b74:	mvnlt	r0, #1000	; 0x3e8
   35b78:	mvn	r0, r0
   35b7c:	sub	r0, r0, r7
   35b80:	add	r0, r9, r0
   35b84:	ldrb	r1, [r7]
   35b88:	cmp	r1, #48	; 0x30
   35b8c:	bne	35bb0 <flatcc_json_parser_double@@Base+0x2f0>
   35b90:	add	r1, r7, #1
   35b94:	cmp	r7, lr
   35b98:	sub	r0, r0, #1
   35b9c:	add	r3, r3, #1
   35ba0:	mov	r7, r1
   35ba4:	bne	35b84 <flatcc_json_parser_double@@Base+0x2c4>
   35ba8:	mov	r7, r1
   35bac:	b	35bf8 <flatcc_json_parser_double@@Base+0x338>
   35bb0:	sub	r1, r1, #49	; 0x31
   35bb4:	uxtb	r1, r1
   35bb8:	cmp	r1, #8
   35bbc:	bhi	35bf8 <flatcc_json_parser_double@@Base+0x338>
   35bc0:	mvn	r2, #0
   35bc4:	mov	r1, r2
   35bc8:	cmp	r0, #0
   35bcc:	beq	35bec <flatcc_json_parser_double@@Base+0x32c>
   35bd0:	ldrb	r2, [r7, -r1]
   35bd4:	sub	r0, r0, #1
   35bd8:	sub	r2, r2, #48	; 0x30
   35bdc:	uxtb	r6, r2
   35be0:	sub	r2, r1, #1
   35be4:	cmp	r6, #10
   35be8:	bcc	35bc4 <flatcc_json_parser_double@@Base+0x304>
   35bec:	sub	r3, r3, r1
   35bf0:	sub	r7, r7, r1
   35bf4:	mov	sl, #1
   35bf8:	mov	r2, #0
   35bfc:	cmp	r7, r4
   35c00:	beq	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35c04:	ldrb	r0, [r7]
   35c08:	cmp	r0, #46	; 0x2e
   35c0c:	bne	35da4 <flatcc_json_parser_double@@Base+0x4e4>
   35c10:	mov	r6, r7
   35c14:	ldrb	r0, [r6, #1]!
   35c18:	sub	r1, r0, #48	; 0x30
   35c1c:	uxtb	r1, r1
   35c20:	cmp	r1, #9
   35c24:	bhi	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35c28:	cmp	r7, lr
   35c2c:	beq	35ce4 <flatcc_json_parser_double@@Base+0x424>
   35c30:	cmn	ip, #1000	; 0x3e8
   35c34:	mvn	r1, #1
   35c38:	str	sl, [sp, #12]
   35c3c:	str	r6, [sp, #8]
   35c40:	str	r8, [sp, #16]
   35c44:	mvnlt	ip, #1000	; 0x3e8
   35c48:	sub	r1, r1, ip
   35c4c:	sub	r1, r1, r7
   35c50:	add	sl, r9, r1
   35c54:	mov	r1, #0
   35c58:	mov	ip, r1
   35c5c:	ldr	r1, [sp, #28]
   35c60:	movw	r6, #39320	; 0x9998
   35c64:	movt	r6, #39321	; 0x9999
   35c68:	subs	r1, r6, r1
   35c6c:	movw	r1, #39321	; 0x9999
   35c70:	movt	r1, #6553	; 0x1999
   35c74:	sbcs	r1, r1, r5
   35c78:	bcc	35cf4 <flatcc_json_parser_double@@Base+0x434>
   35c7c:	add	r1, r5, r5, lsl #2
   35c80:	ldr	r5, [sp, #28]
   35c84:	uxtb	r0, r0
   35c88:	mov	r6, #10
   35c8c:	lsl	r1, r1, #1
   35c90:	umlal	r0, r1, r5, r6
   35c94:	add	r6, r7, ip
   35c98:	subs	r0, r0, #48	; 0x30
   35c9c:	sbc	r5, r1, #0
   35ca0:	cmp	sl, ip
   35ca4:	str	r0, [sp, #28]
   35ca8:	beq	35ccc <flatcc_json_parser_double@@Base+0x40c>
   35cac:	ldrb	r0, [r6, #2]
   35cb0:	mov	r8, r5
   35cb4:	add	r1, ip, #1
   35cb8:	sub	r5, r0, #48	; 0x30
   35cbc:	uxtb	r5, r5
   35cc0:	cmp	r5, #10
   35cc4:	mov	r5, r8
   35cc8:	bcc	35c58 <flatcc_json_parser_double@@Base+0x398>
   35ccc:	ldr	r8, [sp, #16]
   35cd0:	ldr	sl, [sp, #12]
   35cd4:	sub	r0, r3, #1
   35cd8:	add	r7, r6, #2
   35cdc:	sub	r3, r0, ip
   35ce0:	b	35d34 <flatcc_json_parser_double@@Base+0x474>
   35ce4:	mov	r7, r6
   35ce8:	cmp	r7, r4
   35cec:	bne	35d40 <flatcc_json_parser_double@@Base+0x480>
   35cf0:	b	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35cf4:	ldr	sl, [sp, #12]
   35cf8:	ldr	r8, [sp, #16]
   35cfc:	add	r1, r7, ip
   35d00:	sub	r3, r3, ip
   35d04:	add	r7, r1, #1
   35d08:	cmp	sl, #0
   35d0c:	bne	35d34 <flatcc_json_parser_double@@Base+0x474>
   35d10:	ldr	r6, [sp, #28]
   35d14:	uxtb	r0, r0
   35d18:	mov	sl, #1
   35d1c:	adds	r1, r6, #1
   35d20:	adc	ip, r5, #0
   35d24:	cmp	r0, #52	; 0x34
   35d28:	movhi	r6, r1
   35d2c:	movhi	r5, ip
   35d30:	str	r6, [sp, #28]
   35d34:	ldr	r6, [sp, #8]
   35d38:	cmp	r7, r4
   35d3c:	beq	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35d40:	sub	r0, r7, r6
   35d44:	add	r8, r0, r8
   35d48:	ldrb	r0, [r7]
   35d4c:	cmp	r0, #48	; 0x30
   35d50:	bne	35d68 <flatcc_json_parser_double@@Base+0x4a8>
   35d54:	add	r7, r7, #1
   35d58:	add	r3, r3, #1
   35d5c:	cmp	r4, r7
   35d60:	bne	35d48 <flatcc_json_parser_double@@Base+0x488>
   35d64:	b	35da4 <flatcc_json_parser_double@@Base+0x4e4>
   35d68:	sub	r0, r0, #49	; 0x31
   35d6c:	uxtb	r0, r0
   35d70:	cmp	r0, #8
   35d74:	bhi	35da4 <flatcc_json_parser_double@@Base+0x4e4>
   35d78:	add	r0, r7, #1
   35d7c:	mov	sl, #1
   35d80:	mov	r7, r0
   35d84:	cmp	r4, r0
   35d88:	beq	35da4 <flatcc_json_parser_double@@Base+0x4e4>
   35d8c:	mov	r0, r7
   35d90:	ldrb	r1, [r0], #1
   35d94:	sub	r1, r1, #48	; 0x30
   35d98:	uxtb	r1, r1
   35d9c:	cmp	r1, #10
   35da0:	bcc	35d80 <flatcc_json_parser_double@@Base+0x4c0>
   35da4:	cmp	r7, r4
   35da8:	beq	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35dac:	ldrb	r0, [r7]
   35db0:	mov	ip, #0
   35db4:	orr	r0, r0, #32
   35db8:	cmp	r0, #101	; 0x65
   35dbc:	bne	35ddc <flatcc_json_parser_double@@Base+0x51c>
   35dc0:	sub	r0, r4, r7
   35dc4:	cmp	r0, #2
   35dc8:	bge	35e4c <flatcc_json_parser_double@@Base+0x58c>
   35dcc:	mov	r2, #0
   35dd0:	mov	r0, r2
   35dd4:	sub	sp, fp, #28
   35dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35ddc:	mov	r0, #0
   35de0:	cmp	r7, r4
   35de4:	mov	r2, #0
   35de8:	beq	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35dec:	ldr	r1, [sp, #28]
   35df0:	cmp	ip, #0
   35df4:	vmov.i32	d16, #0	; 0x00000000
   35df8:	rsbne	r0, r0, #0
   35dfc:	orrs	r1, r1, r5
   35e00:	beq	35e24 <flatcc_json_parser_double@@Base+0x564>
   35e04:	add	r1, r8, r3
   35e08:	add	r4, r1, r0
   35e0c:	cmn	r4, #324	; 0x144
   35e10:	blt	35e24 <flatcc_json_parser_double@@Base+0x564>
   35e14:	movw	r0, #310	; 0x136
   35e18:	cmp	r4, r0
   35e1c:	ble	35e80 <flatcc_json_parser_double@@Base+0x5c0>
   35e20:	vldr	d16, [pc, #968]	; 361f0 <flatcc_json_parser_double@@Base+0x930>
   35e24:	ldr	r0, [sp, #24]
   35e28:	vstr	d16, [r0]
   35e2c:	ldr	r0, [sp, #20]
   35e30:	cmp	r0, #0
   35e34:	ldrne	r0, [sp, #24]
   35e38:	vldrne	d16, [r0]
   35e3c:	vnegne.f64	d16, d16
   35e40:	vstrne	d16, [r0]
   35e44:	mov	r2, r7
   35e48:	b	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35e4c:	mov	r1, r7
   35e50:	ldrb	r0, [r1, #1]!
   35e54:	cmp	r0, #45	; 0x2d
   35e58:	beq	35f7c <flatcc_json_parser_double@@Base+0x6bc>
   35e5c:	mov	ip, #0
   35e60:	cmp	r0, #43	; 0x2b
   35e64:	bne	35f8c <flatcc_json_parser_double@@Base+0x6cc>
   35e68:	add	r1, r7, #2
   35e6c:	mov	r2, #0
   35e70:	cmp	r1, r4
   35e74:	beq	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35e78:	mov	ip, #0
   35e7c:	b	35f8c <flatcc_json_parser_double@@Base+0x6cc>
   35e80:	mov	r0, #0
   35e84:	cmp	r0, r5, lsr #21
   35e88:	bne	35fec <flatcc_json_parser_double@@Base+0x72c>
   35e8c:	cmp	r4, #22
   35e90:	bhi	35fec <flatcc_json_parser_double@@Base+0x72c>
   35e94:	ldr	r0, [sp, #28]
   35e98:	mov	r1, r5
   35e9c:	bl	45204 <flatcc_json_printer_clear@@Base+0x4e0>
   35ea0:	sub	r2, r4, r8
   35ea4:	vmov	d16, r0, r1
   35ea8:	add	r0, r2, #22
   35eac:	cmp	r0, #44	; 0x2c
   35eb0:	bhi	35e24 <flatcc_json_parser_double@@Base+0x564>
   35eb4:	add	r1, pc, #4
   35eb8:	ldr	r0, [r1, r0, lsl #2]
   35ebc:	add	pc, r1, r0
   35ec0:	strheq	r0, [r0], -r4
   35ec4:	andeq	r0, r0, r8, ror r1
   35ec8:	andeq	r0, r0, r0, lsl #3
   35ecc:	andeq	r0, r0, r8, lsl #3
   35ed0:	muleq	r0, r0, r1
   35ed4:	muleq	r0, r8, r1
   35ed8:	andeq	r0, r0, r0, lsr #3
   35edc:	andeq	r0, r0, r8, lsr #3
   35ee0:			; <UNDEFINED> instruction: 0x000001b0
   35ee4:			; <UNDEFINED> instruction: 0x000001b8
   35ee8:	andeq	r0, r0, r0, asr #3
   35eec:	andeq	r0, r0, r8, asr #3
   35ef0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   35ef4:	ldrdeq	r0, [r0], -r8
   35ef8:	andeq	r0, r0, r0, ror #3
   35efc:	andeq	r0, r0, r8, ror #3
   35f00:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   35f04:	strdeq	r0, [r0], -r8
   35f08:	andeq	r0, r0, r0, lsl #4
   35f0c:	andeq	r0, r0, r8, lsl #4
   35f10:	andeq	r0, r0, r0, lsl r2
   35f14:	andeq	r0, r0, r8, lsl r2
   35f18:			; <UNDEFINED> instruction: 0xffffff64
   35f1c:	andeq	r0, r0, r4, lsr #4
   35f20:	andeq	r0, r0, r0, lsr r2
   35f24:	andeq	r0, r0, ip, lsr r2
   35f28:	andeq	r0, r0, r8, asr #4
   35f2c:	andeq	r0, r0, r4, asr r2
   35f30:	andeq	r0, r0, r0, ror #4
   35f34:	andeq	r0, r0, ip, ror #4
   35f38:	andeq	r0, r0, r8, ror r2
   35f3c:	andeq	r0, r0, r4, lsl #5
   35f40:	muleq	r0, r0, r2
   35f44:	muleq	r0, ip, r2
   35f48:	andeq	r0, r0, r8, lsr #5
   35f4c:			; <UNDEFINED> instruction: 0x000002b4
   35f50:	andeq	r0, r0, r0, asr #5
   35f54:	andeq	r0, r0, ip, asr #5
   35f58:	ldrdeq	r0, [r0], -r8
   35f5c:	andeq	r0, r0, r4, ror #5
   35f60:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   35f64:	strdeq	r0, [r0], -ip
   35f68:	andeq	r0, r0, r8, lsl #6
   35f6c:	andeq	r0, r0, r4, lsl r3
   35f70:	andeq	r0, r0, r0, lsr #6
   35f74:	vldr	d17, [pc, #796]	; 36298 <flatcc_json_parser_double@@Base+0x9d8>
   35f78:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   35f7c:	add	r1, r7, #2
   35f80:	mov	ip, #1
   35f84:	cmp	r1, r4
   35f88:	beq	35dcc <flatcc_json_parser_double@@Base+0x50c>
   35f8c:	ldrb	r0, [r1]
   35f90:	mov	r7, r5
   35f94:	mov	r2, #0
   35f98:	sub	r0, r0, #48	; 0x30
   35f9c:	uxtb	r5, r0
   35fa0:	cmp	r5, #9
   35fa4:	bhi	35dd0 <flatcc_json_parser_double@@Base+0x510>
   35fa8:	mov	r5, r7
   35fac:	add	r7, r1, #1
   35fb0:	cmp	r1, lr
   35fb4:	beq	35de0 <flatcc_json_parser_double@@Base+0x520>
   35fb8:	ldrb	r1, [r7]
   35fbc:	sub	r2, r1, #48	; 0x30
   35fc0:	uxtb	r2, r2
   35fc4:	cmp	r2, #9
   35fc8:	bhi	35de0 <flatcc_json_parser_double@@Base+0x520>
   35fcc:	cmp	r0, #32768	; 0x8000
   35fd0:	add	r7, r7, #1
   35fd4:	addlt	r0, r0, r0, lsl #2
   35fd8:	addlt	r0, r1, r0, lsl #1
   35fdc:	sublt	r0, r0, #48	; 0x30
   35fe0:	cmp	r4, r7
   35fe4:	bne	35fb8 <flatcc_json_parser_double@@Base+0x6f8>
   35fe8:	b	35de0 <flatcc_json_parser_double@@Base+0x520>
   35fec:	ldr	r0, [sp, #24]
   35ff0:	mov	r1, r5
   35ff4:	mov	r2, r4
   35ff8:	mov	r3, r8
   35ffc:	str	sl, [sp]
   36000:	str	r0, [sp, #4]
   36004:	ldr	r0, [sp, #28]
   36008:	bl	339b8 <grisu3_diy_fp_encode_double@@Base>
   3600c:	cmp	r0, #0
   36010:	bne	35e2c <flatcc_json_parser_double@@Base+0x56c>
   36014:	add	r1, sp, #32
   36018:	mov	r0, r9
   3601c:	bl	14f00 <strtod@plt>
   36020:	ldr	r0, [sp, #24]
   36024:	vstr	d0, [r0]
   36028:	ldr	r0, [sp, #32]
   3602c:	cmp	r0, r7
   36030:	movcc	r7, r0
   36034:	b	35e44 <flatcc_json_parser_double@@Base+0x584>
   36038:	vldr	d17, [pc, #440]	; 361f8 <flatcc_json_parser_double@@Base+0x938>
   3603c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36040:	vldr	d17, [pc, #440]	; 36200 <flatcc_json_parser_double@@Base+0x940>
   36044:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36048:	vldr	d17, [pc, #440]	; 36208 <flatcc_json_parser_double@@Base+0x948>
   3604c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36050:	vldr	d17, [pc, #440]	; 36210 <flatcc_json_parser_double@@Base+0x950>
   36054:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36058:	vldr	d17, [pc, #440]	; 36218 <flatcc_json_parser_double@@Base+0x958>
   3605c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36060:	vldr	d17, [pc, #440]	; 36220 <flatcc_json_parser_double@@Base+0x960>
   36064:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36068:	vldr	d17, [pc, #440]	; 36228 <flatcc_json_parser_double@@Base+0x968>
   3606c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36070:	vldr	d17, [pc, #440]	; 36230 <flatcc_json_parser_double@@Base+0x970>
   36074:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36078:	vldr	d17, [pc, #440]	; 36238 <flatcc_json_parser_double@@Base+0x978>
   3607c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36080:	vldr	d17, [pc, #440]	; 36240 <flatcc_json_parser_double@@Base+0x980>
   36084:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36088:	vldr	d17, [pc, #440]	; 36248 <flatcc_json_parser_double@@Base+0x988>
   3608c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36090:	vldr	d17, [pc, #440]	; 36250 <flatcc_json_parser_double@@Base+0x990>
   36094:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   36098:	vldr	d17, [pc, #440]	; 36258 <flatcc_json_parser_double@@Base+0x998>
   3609c:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360a0:	vldr	d17, [pc, #440]	; 36260 <flatcc_json_parser_double@@Base+0x9a0>
   360a4:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360a8:	vldr	d17, [pc, #440]	; 36268 <flatcc_json_parser_double@@Base+0x9a8>
   360ac:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360b0:	vldr	d17, [pc, #440]	; 36270 <flatcc_json_parser_double@@Base+0x9b0>
   360b4:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360b8:	vldr	d17, [pc, #440]	; 36278 <flatcc_json_parser_double@@Base+0x9b8>
   360bc:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360c0:	vldr	d17, [pc, #440]	; 36280 <flatcc_json_parser_double@@Base+0x9c0>
   360c4:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360c8:	vldr	d17, [pc, #440]	; 36288 <flatcc_json_parser_double@@Base+0x9c8>
   360cc:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360d0:	vldr	d17, [pc, #440]	; 36290 <flatcc_json_parser_double@@Base+0x9d0>
   360d4:	b	360dc <flatcc_json_parser_double@@Base+0x81c>
   360d8:	vmov.f64	d17, #36	; 0x41200000  10.0
   360dc:	vdiv.f64	d16, d16, d17
   360e0:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   360e4:	vmov.f64	d17, #36	; 0x41200000  10.0
   360e8:	vmul.f64	d16, d16, d17
   360ec:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   360f0:	vldr	d17, [pc, #408]	; 36290 <flatcc_json_parser_double@@Base+0x9d0>
   360f4:	vmul.f64	d16, d16, d17
   360f8:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   360fc:	vldr	d17, [pc, #388]	; 36288 <flatcc_json_parser_double@@Base+0x9c8>
   36100:	vmul.f64	d16, d16, d17
   36104:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36108:	vldr	d17, [pc, #368]	; 36280 <flatcc_json_parser_double@@Base+0x9c0>
   3610c:	vmul.f64	d16, d16, d17
   36110:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36114:	vldr	d17, [pc, #348]	; 36278 <flatcc_json_parser_double@@Base+0x9b8>
   36118:	vmul.f64	d16, d16, d17
   3611c:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36120:	vldr	d17, [pc, #328]	; 36270 <flatcc_json_parser_double@@Base+0x9b0>
   36124:	vmul.f64	d16, d16, d17
   36128:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   3612c:	vldr	d17, [pc, #308]	; 36268 <flatcc_json_parser_double@@Base+0x9a8>
   36130:	vmul.f64	d16, d16, d17
   36134:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36138:	vldr	d17, [pc, #288]	; 36260 <flatcc_json_parser_double@@Base+0x9a0>
   3613c:	vmul.f64	d16, d16, d17
   36140:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36144:	vldr	d17, [pc, #268]	; 36258 <flatcc_json_parser_double@@Base+0x998>
   36148:	vmul.f64	d16, d16, d17
   3614c:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36150:	vldr	d17, [pc, #248]	; 36250 <flatcc_json_parser_double@@Base+0x990>
   36154:	vmul.f64	d16, d16, d17
   36158:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   3615c:	vldr	d17, [pc, #228]	; 36248 <flatcc_json_parser_double@@Base+0x988>
   36160:	vmul.f64	d16, d16, d17
   36164:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36168:	vldr	d17, [pc, #208]	; 36240 <flatcc_json_parser_double@@Base+0x980>
   3616c:	vmul.f64	d16, d16, d17
   36170:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36174:	vldr	d17, [pc, #188]	; 36238 <flatcc_json_parser_double@@Base+0x978>
   36178:	vmul.f64	d16, d16, d17
   3617c:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36180:	vldr	d17, [pc, #168]	; 36230 <flatcc_json_parser_double@@Base+0x970>
   36184:	vmul.f64	d16, d16, d17
   36188:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   3618c:	vldr	d17, [pc, #148]	; 36228 <flatcc_json_parser_double@@Base+0x968>
   36190:	vmul.f64	d16, d16, d17
   36194:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   36198:	vldr	d17, [pc, #128]	; 36220 <flatcc_json_parser_double@@Base+0x960>
   3619c:	vmul.f64	d16, d16, d17
   361a0:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361a4:	vldr	d17, [pc, #108]	; 36218 <flatcc_json_parser_double@@Base+0x958>
   361a8:	vmul.f64	d16, d16, d17
   361ac:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361b0:	vldr	d17, [pc, #88]	; 36210 <flatcc_json_parser_double@@Base+0x950>
   361b4:	vmul.f64	d16, d16, d17
   361b8:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361bc:	vldr	d17, [pc, #68]	; 36208 <flatcc_json_parser_double@@Base+0x948>
   361c0:	vmul.f64	d16, d16, d17
   361c4:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361c8:	vldr	d17, [pc, #48]	; 36200 <flatcc_json_parser_double@@Base+0x940>
   361cc:	vmul.f64	d16, d16, d17
   361d0:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361d4:	vldr	d17, [pc, #28]	; 361f8 <flatcc_json_parser_double@@Base+0x938>
   361d8:	vmul.f64	d16, d16, d17
   361dc:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361e0:	vldr	d17, [pc, #176]	; 36298 <flatcc_json_parser_double@@Base+0x9d8>
   361e4:	vmul.f64	d16, d16, d17
   361e8:	b	35e24 <flatcc_json_parser_double@@Base+0x564>
   361ec:	nop	{0}
   361f0:	andeq	r0, r0, r0
   361f4:	svcvc	0x00f00000	; IMB
   361f8:	usatle	lr, #2, r0, asr #30
   361fc:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   36200:	ldmvc	r5!, {r6, sl, fp, pc}
   36204:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   36208:	addsvs	r3, r1, r0, lsl #26
   3620c:	mvnmi	r5, #228, 16	; 0xe40000
   36210:	strbvs	ip, [lr, -r0, lsl #16]
   36214:			; <UNDEFINED> instruction: 0x43abc16d
   36218:	ldrbhi	sl, [r8]
   3621c:	cmnmi	r6, #1459617792	; 0x57000000
   36220:	strbcc	r8, [r0, r0]!
   36224:	movtmi	ip, #4985	; 0x1379
   36228:	ldrtcs	r0, [r4], -r0
   3622c:	movwmi	r6, #52213	; 0xcbf5
   36230:	cdpne	0, 9, cr0, cr0, cr0, {0}
   36234:	sbcsmi	fp, r6, #196, 24	; 0xc400
   36238:	strb	r0, [r0, #-0]
   3623c:	adcmi	r3, r2, #156	; 0x9c
   36240:	andge	r0, r0, #0
   36244:	rsbmi	r1, sp, #148, 20	; 0x94000
   36248:	stmda	r0, {}	; <UNPREDICTABLE>
   3624c:	eorsmi	r4, r7, #7733248	; 0x760000
   36250:	andcs	r0, r0, r0
   36254:	andmi	sl, r2, #95	; 0x5f
   36258:	andeq	r0, r0, r0
   3625c:	bicmi	ip, sp, r5, ror #26
   36260:	andeq	r0, r0, r0
   36264:	orrsmi	sp, r7, r4, lsl #15
   36268:	andeq	r0, r0, r0
   3626c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   36270:	andeq	r0, r0, r0
   36274:	smlawbmi	lr, r0, r4, r8
   36278:	andeq	r0, r0, r0
   3627c:	rscsmi	r6, r8, r0, lsl #20
   36280:	andeq	r0, r0, r0
   36284:	sbcmi	r8, r3, r0, lsl #16
   36288:	andeq	r0, r0, r0
   3628c:	addmi	r4, pc, r0
   36290:	andeq	r0, r0, r0
   36294:	subsmi	r0, r9, r0
   36298:			; <UNDEFINED> instruction: 0x064dd592
   3629c:	strmi	pc, [r0], #207	; 0xcf

000362a0 <flatcc_json_parser_float@@Base>:
   362a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   362a4:	add	fp, sp, #24
   362a8:	vpush	{d8-d9}
   362ac:	sub	sp, sp, #8
   362b0:	mov	r8, r0
   362b4:	mov	r0, #0
   362b8:	mov	r6, r1
   362bc:	cmp	r1, r2
   362c0:	str	r0, [r3]
   362c4:	beq	36388 <flatcc_json_parser_float@@Base+0xe8>
   362c8:	mov	r0, r6
   362cc:	mov	r5, r2
   362d0:	mov	r7, r3
   362d4:	ldrb	r1, [r0], #1
   362d8:	cmp	r1, #45	; 0x2d
   362dc:	movne	r0, r6
   362e0:	sub	r2, r2, r0
   362e4:	cmp	r2, #2
   362e8:	blt	36314 <flatcc_json_parser_float@@Base+0x74>
   362ec:	sub	r1, r1, #45	; 0x2d
   362f0:	clz	r1, r1
   362f4:	lsr	r1, r1, #5
   362f8:	ldrb	r1, [r6, r1]
   362fc:	cmp	r1, #46	; 0x2e
   36300:	beq	36390 <flatcc_json_parser_float@@Base+0xf0>
   36304:	cmp	r1, #48	; 0x30
   36308:	ldrbeq	r0, [r0, #1]
   3630c:	cmpeq	r0, #48	; 0x30
   36310:	beq	36390 <flatcc_json_parser_float@@Base+0xf0>
   36314:	sub	r1, r5, r6
   36318:	mov	r2, sp
   3631c:	mov	r0, r6
   36320:	bl	359b8 <flatcc_json_parser_double@@Base+0xf8>
   36324:	vldr	d16, [sp]
   36328:	mov	r4, r0
   3632c:	add	r0, pc, #164	; 0xa4
   36330:	vcmpe.f64	d16, #0.0
   36334:	vcvt.f32.f64	s16, d16
   36338:	vmrs	APSR_nzcv, fpscr
   3633c:	vmov.f32	s0, s16
   36340:	addmi	r0, r0, #4
   36344:	vldr	s18, [r0]
   36348:	bl	14e70 <__isinff@plt>
   3634c:	cmp	r0, #0
   36350:	movne	r4, r6
   36354:	vseleq.f32	s0, s16, s18
   36358:	cmp	r4, #0
   3635c:	vstr	s0, [r7]
   36360:	cmpne	r4, r6
   36364:	bne	363c8 <flatcc_json_parser_float@@Base+0x128>
   36368:	bl	14e70 <__isinff@plt>
   3636c:	ldr	r1, [r8, #20]
   36370:	cmp	r0, #0
   36374:	beq	363a0 <flatcc_json_parser_float@@Base+0x100>
   36378:	cmp	r1, #0
   3637c:	bne	363c4 <flatcc_json_parser_float@@Base+0x124>
   36380:	mov	r0, #7
   36384:	b	363ac <flatcc_json_parser_float@@Base+0x10c>
   36388:	mov	r4, r6
   3638c:	b	363c8 <flatcc_json_parser_float@@Base+0x128>
   36390:	ldr	r0, [r8, #20]
   36394:	cmp	r0, #0
   36398:	bne	363c4 <flatcc_json_parser_float@@Base+0x124>
   3639c:	b	363a8 <flatcc_json_parser_float@@Base+0x108>
   363a0:	cmp	r1, #0
   363a4:	bne	363c4 <flatcc_json_parser_float@@Base+0x124>
   363a8:	mov	r0, #6
   363ac:	str	r6, [r8, #32]
   363b0:	add	r2, r6, #1
   363b4:	ldr	r1, [r8, #4]
   363b8:	sub	r1, r2, r1
   363bc:	str	r1, [r8, #16]
   363c0:	str	r0, [r8, #20]
   363c4:	mov	r4, r5
   363c8:	mov	r0, r4
   363cc:	sub	sp, fp, #40	; 0x28
   363d0:	vpop	{d8-d9}
   363d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   363d8:	svcvc	0x00800000
   363dc:			; <UNDEFINED> instruction: 0xff800000

000363e0 <flatcc_json_parser_integer@@Base>:
   363e0:	push	{r4, r5, r6, r7, fp, lr}
   363e4:	add	fp, sp, #16
   363e8:	mov	ip, r1
   363ec:	cmp	r1, r2
   363f0:	beq	364dc <flatcc_json_parser_integer@@Base+0xfc>
   363f4:	ldrb	r1, [ip]
   363f8:	mov	r4, #0
   363fc:	sub	r1, r1, #45	; 0x2d
   36400:	clz	r1, r1
   36404:	lsr	r1, r1, #5
   36408:	str	r1, [r3]
   3640c:	add	r1, ip, r1
   36410:	cmp	r1, r2
   36414:	beq	364c8 <flatcc_json_parser_integer@@Base+0xe8>
   36418:	mov	lr, #10
   3641c:	mov	r5, #0
   36420:	ldrb	r6, [r1]
   36424:	sub	r7, r6, #48	; 0x30
   36428:	uxtb	r7, r7
   3642c:	cmp	r7, #9
   36430:	bhi	364e4 <flatcc_json_parser_integer@@Base+0x104>
   36434:	add	r7, r5, r5, lsl #2
   36438:	lsl	r7, r7, #1
   3643c:	umlal	r6, r7, r4, lr
   36440:	subs	r6, r6, #48	; 0x30
   36444:	sbc	r7, r7, #0
   36448:	subs	r4, r6, r4
   3644c:	sbcs	r4, r7, r5
   36450:	bcc	364f4 <flatcc_json_parser_integer@@Base+0x114>
   36454:	add	r1, r1, #1
   36458:	mov	r4, r6
   3645c:	mov	r5, r7
   36460:	cmp	r2, r1
   36464:	bne	36420 <flatcc_json_parser_integer@@Base+0x40>
   36468:	mov	r3, #0
   3646c:	mov	r1, r2
   36470:	mov	r4, r6
   36474:	mov	r5, r7
   36478:	cmp	r1, ip
   3647c:	beq	364dc <flatcc_json_parser_integer@@Base+0xfc>
   36480:	cmp	r3, #0
   36484:	beq	36510 <flatcc_json_parser_integer@@Base+0x130>
   36488:	ldrb	r3, [r1]
   3648c:	cmp	r3, #46	; 0x2e
   36490:	cmpne	r3, #101	; 0x65
   36494:	bne	36508 <flatcc_json_parser_integer@@Base+0x128>
   36498:	ldr	r3, [r0, #20]
   3649c:	cmp	r3, #0
   364a0:	bne	36500 <flatcc_json_parser_integer@@Base+0x120>
   364a4:	str	r1, [r0, #32]
   364a8:	add	r1, r1, #1
   364ac:	mov	r3, #12
   364b0:	ldr	r7, [r0, #4]
   364b4:	sub	r1, r1, r7
   364b8:	str	r1, [r0, #16]
   364bc:	str	r3, [r0, #20]
   364c0:	mov	r0, r2
   364c4:	pop	{r4, r5, r6, r7, fp, pc}
   364c8:	mov	r1, r2
   364cc:	mov	r5, #0
   364d0:	mov	r3, #0
   364d4:	cmp	r1, ip
   364d8:	bne	36480 <flatcc_json_parser_integer@@Base+0xa0>
   364dc:	mov	r0, ip
   364e0:	pop	{r4, r5, r6, r7, fp, pc}
   364e4:	mov	r3, #1
   364e8:	cmp	r1, ip
   364ec:	bne	36480 <flatcc_json_parser_integer@@Base+0xa0>
   364f0:	b	364dc <flatcc_json_parser_integer@@Base+0xfc>
   364f4:	ldr	r7, [r0, #20]
   364f8:	cmp	r7, #0
   364fc:	beq	36524 <flatcc_json_parser_integer@@Base+0x144>
   36500:	mov	r0, r2
   36504:	pop	{r4, r5, r6, r7, fp, pc}
   36508:	cmp	r3, #69	; 0x45
   3650c:	beq	36498 <flatcc_json_parser_integer@@Base+0xb8>
   36510:	ldr	r0, [fp, #8]
   36514:	mov	ip, r1
   36518:	strd	r4, [r0]
   3651c:	mov	r0, ip
   36520:	pop	{r4, r5, r6, r7, fp, pc}
   36524:	str	r1, [r0, #32]
   36528:	cmp	r3, #0
   3652c:	mov	r7, #8
   36530:	add	r1, r1, #1
   36534:	ldr	r3, [r0, #4]
   36538:	movweq	r7, #7
   3653c:	sub	r1, r1, r3
   36540:	str	r1, [r0, #16]
   36544:	str	r7, [r0, #20]
   36548:	mov	r0, r2
   3654c:	pop	{r4, r5, r6, r7, fp, pc}

00036550 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   36550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36554:	add	fp, sp, #28
   36558:	sub	sp, sp, #28
   3655c:	ldr	r9, [fp, #8]
   36560:	mov	r6, r3
   36564:	mov	r4, r2
   36568:	mov	r5, r0
   3656c:	cmp	r1, r2
   36570:	beq	365b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   36574:	ldrb	r0, [r1]
   36578:	cmp	r0, #34	; 0x22
   3657c:	bne	365b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   36580:	add	sl, r1, #1
   36584:	cmp	sl, r4
   36588:	beq	365e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   3658c:	mov	r7, sl
   36590:	ldrb	r1, [r7]
   36594:	cmp	r1, #32
   36598:	bcc	367ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x29c>
   3659c:	cmp	r1, #34	; 0x22
   365a0:	cmpne	r1, #92	; 0x5c
   365a4:	beq	36654 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x104>
   365a8:	add	r7, r7, #1
   365ac:	cmp	r4, r7
   365b0:	bne	36590 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   365b4:	b	365e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   365b8:	ldr	r0, [r5, #20]
   365bc:	cmp	r0, #0
   365c0:	bne	365e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   365c4:	str	r1, [r5, #32]
   365c8:	add	r1, r1, #1
   365cc:	mov	r0, #16
   365d0:	ldr	r2, [r5, #4]
   365d4:	sub	r1, r1, r2
   365d8:	str	r1, [r5, #16]
   365dc:	str	r0, [r5, #20]
   365e0:	ldr	r0, [r5, #20]
   365e4:	cmp	r0, #0
   365e8:	mov	r0, r4
   365ec:	bne	36610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   365f0:	str	r4, [r5, #32]
   365f4:	mov	r0, #20
   365f8:	add	r2, r4, #1
   365fc:	ldr	r1, [r5, #4]
   36600:	sub	r1, r2, r1
   36604:	str	r1, [r5, #16]
   36608:	str	r0, [r5, #20]
   3660c:	mov	r0, r4
   36610:	mov	r1, #0
   36614:	str	r1, [r6]
   36618:	ldr	r1, [r5, #20]
   3661c:	cmp	r1, #0
   36620:	bne	36648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   36624:	str	r0, [r5, #32]
   36628:	mov	r1, #31
   3662c:	cmp	r9, #0
   36630:	add	r0, r0, #1
   36634:	ldr	r2, [r5, #4]
   36638:	movwne	r1, #32
   3663c:	sub	r0, r0, r2
   36640:	str	r0, [r5, #16]
   36644:	str	r1, [r5, #20]
   36648:	mov	r0, r4
   3664c:	sub	sp, fp, #28
   36650:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36654:	cmp	r4, r7
   36658:	mov	r0, r4
   3665c:	beq	36610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   36660:	cmp	r1, #34	; 0x22
   36664:	bne	36690 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   36668:	sub	r1, r7, sl
   3666c:	and	r0, r1, #3
   36670:	str	r1, [sp, #20]
   36674:	lsr	r1, r1, #2
   36678:	add	r8, r1, r1, lsl #1
   3667c:	cmp	r0, #2
   36680:	beq	36698 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x148>
   36684:	cmp	r0, #3
   36688:	addeq	r8, r8, #2
   3668c:	b	3669c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   36690:	mov	r0, r7
   36694:	b	36610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   36698:	add	r8, r8, #1
   3669c:	ldr	r0, [r5]
   366a0:	mov	r1, #1
   366a4:	mov	r2, #1
   366a8:	mvn	r3, #0
   366ac:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   366b0:	cmp	r0, #0
   366b4:	beq	366ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
   366b8:	mov	r0, #0
   366bc:	str	r0, [r6]
   366c0:	ldr	r0, [r5, #20]
   366c4:	cmp	r0, #0
   366c8:	bne	36648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   366cc:	mov	r0, #33	; 0x21
   366d0:	str	r7, [r5, #32]
   366d4:	add	r2, r7, #1
   366d8:	ldr	r1, [r5, #4]
   366dc:	sub	r1, r2, r1
   366e0:	str	r1, [r5, #16]
   366e4:	str	r0, [r5, #20]
   366e8:	b	36648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   366ec:	ldr	r0, [r5]
   366f0:	mov	r1, r8
   366f4:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   366f8:	cmp	r0, #0
   366fc:	beq	366b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   36700:	ldr	r2, [pc, #612]	; 3696c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x41c>
   36704:	mov	r1, r8
   36708:	ldr	r8, [pc, #608]	; 36970 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x420>
   3670c:	str	r0, [sp]
   36710:	str	r0, [sp, #12]
   36714:	ldr	r0, [sp, #20]
   36718:	cmp	r9, #0
   3671c:	add	lr, sp, #24
   36720:	mov	ip, sl
   36724:	str	r1, [sp, #4]
   36728:	add	r2, pc, r2
   3672c:	add	r8, pc, r8
   36730:	movne	r8, r2
   36734:	cmp	r1, #0
   36738:	mvneq	r1, #0
   3673c:	str	r1, [sp, #16]
   36740:	mov	r1, #0
   36744:	str	r0, [sp, #8]
   36748:	cmp	r0, r1
   3674c:	beq	3680c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2bc>
   36750:	ldrb	r2, [ip, r1]
   36754:	ldrb	r3, [r8, r2]
   36758:	cmp	r3, #64	; 0x40
   3675c:	strb	r3, [lr, r1]
   36760:	bcc	36778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x228>
   36764:	cmp	r3, #65	; 0x41
   36768:	bne	36848 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f8>
   3676c:	sub	r1, r1, #1
   36770:	sub	r0, r0, #1
   36774:	add	ip, ip, #1
   36778:	add	r1, r1, #1
   3677c:	cmp	r1, #4
   36780:	bcc	36748 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f8>
   36784:	ldr	lr, [sp, #16]
   36788:	cmp	lr, #3
   3678c:	bcc	3683c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   36790:	ldrb	r2, [sp, #25]
   36794:	ldrb	r1, [sp, #24]
   36798:	subs	lr, lr, #3
   3679c:	sub	r0, r0, #4
   367a0:	add	ip, ip, #4
   367a4:	str	lr, [sp, #16]
   367a8:	add	lr, sp, #24
   367ac:	lsr	r3, r2, #4
   367b0:	orr	r1, r3, r1, lsl #2
   367b4:	ldr	r3, [sp, #12]
   367b8:	strb	r1, [r3]
   367bc:	ldrb	r1, [sp, #26]
   367c0:	lsr	r1, r1, #2
   367c4:	orr	r1, r1, r2, lsl #4
   367c8:	strb	r1, [r3, #1]
   367cc:	ldrb	r1, [sp, #26]
   367d0:	ldrb	r2, [sp, #27]
   367d4:	orr	r1, r2, r1, lsl #6
   367d8:	strb	r1, [r3, #2]
   367dc:	add	r3, r3, #3
   367e0:	str	r3, [sp, #12]
   367e4:	bne	36740 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   367e8:	b	368e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   367ec:	ldr	r0, [r5, #20]
   367f0:	cmp	r0, #0
   367f4:	mov	r0, r4
   367f8:	bne	36610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   367fc:	str	r7, [r5, #32]
   36800:	mov	r0, #17
   36804:	add	r2, r7, #1
   36808:	b	365fc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xac>
   3680c:	mov	r1, r0
   36810:	mov	r3, r0
   36814:	ldr	r2, [sp, #16]
   36818:	sub	r0, r0, r3
   3681c:	cmp	r1, #0
   36820:	beq	368e8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   36824:	cmp	r1, #3
   36828:	beq	36888 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   3682c:	cmp	r1, #2
   36830:	ldrbeq	r1, [sp, #25]
   36834:	tsteq	r1, #15
   36838:	beq	368d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x380>
   3683c:	ldr	r0, [sp, #20]
   36840:	ldr	r1, [sp, #8]
   36844:	b	368f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3a8>
   36848:	cmp	r3, #66	; 0x42
   3684c:	bne	368c8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x378>
   36850:	add	r2, r1, #1
   36854:	mov	r3, r2
   36858:	cmp	r2, r0
   3685c:	bcs	36814 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   36860:	cmp	r3, #7
   36864:	bhi	36814 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   36868:	ldrb	r2, [ip, r3]
   3686c:	ldrb	r2, [r8, r2]
   36870:	sub	r2, r2, #65	; 0x41
   36874:	uxtb	lr, r2
   36878:	add	r2, r3, #1
   3687c:	cmp	lr, #2
   36880:	bcc	36854 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x304>
   36884:	b	36814 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   36888:	cmp	r2, #2
   3688c:	bcc	3683c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   36890:	ldrb	r1, [sp, #26]
   36894:	ands	r2, r1, #3
   36898:	bne	3683c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   3689c:	ldrb	r3, [sp, #25]
   368a0:	ldrb	ip, [sp, #24]
   368a4:	lsl	r2, r3, #4
   368a8:	orr	r1, r2, r1, lsr #2
   368ac:	ldr	r2, [sp, #12]
   368b0:	strb	r1, [r2, #1]
   368b4:	lsr	r1, r3, #4
   368b8:	orr	r1, r1, ip, lsl #2
   368bc:	strb	r1, [r2]
   368c0:	add	r2, r2, #2
   368c4:	b	368e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x394>
   368c8:	mov	r3, r1
   368cc:	b	36814 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   368d0:	ldrb	r2, [sp, #24]
   368d4:	lsl	r2, r2, #2
   368d8:	orr	r1, r2, r1, lsr #4
   368dc:	ldr	r2, [sp, #12]
   368e0:	strb	r1, [r2], #1
   368e4:	str	r2, [sp, #12]
   368e8:	cmp	r0, #0
   368ec:	beq	36904 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b4>
   368f0:	mov	r1, r0
   368f4:	ldr	r0, [sp, #20]
   368f8:	sub	r0, r0, r1
   368fc:	add	r0, sl, r0
   36900:	b	36610 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   36904:	ldr	r0, [sp]
   36908:	ldr	r1, [sp, #12]
   3690c:	sub	r0, r1, r0
   36910:	ldr	r1, [sp, #4]
   36914:	cmp	r1, r0
   36918:	bls	36930 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   3691c:	sub	r1, r1, r0
   36920:	ldr	r0, [r5]
   36924:	bl	2ec20 <flatcc_builder_truncate_vector@@Base>
   36928:	cmp	r0, #0
   3692c:	bne	366b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   36930:	ldr	r0, [r5]
   36934:	bl	300b4 <flatcc_builder_end_vector@@Base>
   36938:	cmp	r0, #0
   3693c:	str	r0, [r6]
   36940:	beq	366b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   36944:	ldrb	r0, [r7]
   36948:	cmp	r0, #34	; 0x22
   3694c:	bne	36958 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x408>
   36950:	add	r4, r7, #1
   36954:	b	36648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   36958:	ldr	r0, [r5, #20]
   3695c:	cmp	r0, #0
   36960:	bne	36648 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   36964:	mov	r0, #20
   36968:	b	366d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   3696c:	andeq	r3, r1, r0, asr lr
   36970:	andeq	r3, r1, ip, asr #26

00036974 <flatcc_json_parser_build_string@@Base>:
   36974:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36978:	add	fp, sp, #28
   3697c:	sub	sp, sp, #4
   36980:	mov	sl, r3
   36984:	mov	r4, r2
   36988:	mov	r5, r0
   3698c:	cmp	r1, r2
   36990:	beq	369e0 <flatcc_json_parser_build_string@@Base+0x6c>
   36994:	ldrb	r0, [r1]
   36998:	cmp	r0, #34	; 0x22
   3699c:	bne	369e0 <flatcc_json_parser_build_string@@Base+0x6c>
   369a0:	add	r1, r1, #1
   369a4:	mov	r6, r4
   369a8:	cmp	r1, r4
   369ac:	beq	36a10 <flatcc_json_parser_build_string@@Base+0x9c>
   369b0:	mov	r6, r1
   369b4:	ldrb	r0, [r6]
   369b8:	cmp	r0, #32
   369bc:	bcc	36c08 <flatcc_json_parser_build_string@@Base+0x294>
   369c0:	cmp	r0, #34	; 0x22
   369c4:	cmpne	r0, #92	; 0x5c
   369c8:	beq	36b2c <flatcc_json_parser_build_string@@Base+0x1b8>
   369cc:	add	r6, r6, #1
   369d0:	cmp	r4, r6
   369d4:	bne	369b4 <flatcc_json_parser_build_string@@Base+0x40>
   369d8:	mov	r6, r1
   369dc:	b	36a10 <flatcc_json_parser_build_string@@Base+0x9c>
   369e0:	ldr	r0, [r5, #20]
   369e4:	mov	r6, r4
   369e8:	cmp	r0, #0
   369ec:	bne	36a10 <flatcc_json_parser_build_string@@Base+0x9c>
   369f0:	str	r1, [r5, #32]
   369f4:	add	r1, r1, #1
   369f8:	mov	r0, #16
   369fc:	mov	r6, r4
   36a00:	ldr	r2, [r5, #4]
   36a04:	sub	r1, r1, r2
   36a08:	str	r1, [r5, #16]
   36a0c:	str	r0, [r5, #20]
   36a10:	ldr	r0, [r5, #20]
   36a14:	cmp	r0, #0
   36a18:	bne	36a38 <flatcc_json_parser_build_string@@Base+0xc4>
   36a1c:	str	r4, [r5, #32]
   36a20:	add	r2, r4, #1
   36a24:	mov	r0, #20
   36a28:	ldr	r1, [r5, #4]
   36a2c:	sub	r1, r2, r1
   36a30:	str	r1, [r5, #16]
   36a34:	str	r0, [r5, #20]
   36a38:	mov	r7, r4
   36a3c:	ldr	r0, [r5]
   36a40:	bl	2f18c <flatcc_builder_start_string@@Base>
   36a44:	cmp	r0, #0
   36a48:	beq	36a64 <flatcc_json_parser_build_string@@Base+0xf0>
   36a4c:	mov	r4, r7
   36a50:	mov	r0, #0
   36a54:	str	r0, [sl]
   36a58:	mov	r0, r4
   36a5c:	sub	sp, fp, #28
   36a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a64:	ldr	r0, [r5]
   36a68:	sub	r2, r7, r6
   36a6c:	mov	r1, r6
   36a70:	bl	2ea74 <flatcc_builder_append_string@@Base>
   36a74:	cmp	r0, #0
   36a78:	beq	36a4c <flatcc_json_parser_build_string@@Base+0xd8>
   36a7c:	cmp	r7, r4
   36a80:	mov	r6, r4
   36a84:	beq	36bac <flatcc_json_parser_build_string@@Base+0x238>
   36a88:	mov	r8, sp
   36a8c:	add	r9, r8, #1
   36a90:	ldrb	r0, [r7]
   36a94:	cmp	r0, #34	; 0x22
   36a98:	beq	36ba8 <flatcc_json_parser_build_string@@Base+0x234>
   36a9c:	mov	r0, r5
   36aa0:	mov	r1, r7
   36aa4:	mov	r2, r4
   36aa8:	mov	r3, r8
   36aac:	bl	340e4 <flatcc_json_parser_string_escape@@Base>
   36ab0:	mov	r6, r0
   36ab4:	ldr	r0, [r5]
   36ab8:	ldrb	r2, [sp]
   36abc:	mov	r1, r9
   36ac0:	bl	2ea74 <flatcc_builder_append_string@@Base>
   36ac4:	cmp	r0, #0
   36ac8:	beq	36c00 <flatcc_json_parser_build_string@@Base+0x28c>
   36acc:	cmp	r6, r4
   36ad0:	beq	36b54 <flatcc_json_parser_build_string@@Base+0x1e0>
   36ad4:	mov	r7, r6
   36ad8:	ldrb	r0, [r7]
   36adc:	cmp	r0, #32
   36ae0:	bcc	36b74 <flatcc_json_parser_build_string@@Base+0x200>
   36ae4:	cmp	r0, #34	; 0x22
   36ae8:	cmpne	r0, #92	; 0x5c
   36aec:	beq	36b00 <flatcc_json_parser_build_string@@Base+0x18c>
   36af0:	add	r7, r7, #1
   36af4:	cmp	r4, r7
   36af8:	bne	36ad8 <flatcc_json_parser_build_string@@Base+0x164>
   36afc:	b	36b54 <flatcc_json_parser_build_string@@Base+0x1e0>
   36b00:	cmp	r4, r7
   36b04:	beq	36ba0 <flatcc_json_parser_build_string@@Base+0x22c>
   36b08:	ldr	r0, [r5]
   36b0c:	sub	r2, r7, r6
   36b10:	mov	r1, r6
   36b14:	bl	2ea74 <flatcc_builder_append_string@@Base>
   36b18:	cmp	r0, #0
   36b1c:	beq	36a4c <flatcc_json_parser_build_string@@Base+0xd8>
   36b20:	cmp	r4, r7
   36b24:	bne	36a90 <flatcc_json_parser_build_string@@Base+0x11c>
   36b28:	b	36ba0 <flatcc_json_parser_build_string@@Base+0x22c>
   36b2c:	cmp	r4, r6
   36b30:	beq	36c14 <flatcc_json_parser_build_string@@Base+0x2a0>
   36b34:	cmp	r0, #34	; 0x22
   36b38:	bne	36b4c <flatcc_json_parser_build_string@@Base+0x1d8>
   36b3c:	ldr	r0, [r5]
   36b40:	sub	r2, r6, r1
   36b44:	bl	314a8 <flatcc_builder_create_string@@Base>
   36b48:	b	36bb4 <flatcc_json_parser_build_string@@Base+0x240>
   36b4c:	mov	r7, r6
   36b50:	b	36c18 <flatcc_json_parser_build_string@@Base+0x2a4>
   36b54:	ldr	r0, [r5, #20]
   36b58:	mov	r6, r4
   36b5c:	cmp	r0, #0
   36b60:	bne	36bac <flatcc_json_parser_build_string@@Base+0x238>
   36b64:	str	r4, [r5, #32]
   36b68:	mov	r0, #20
   36b6c:	add	r2, r4, #1
   36b70:	b	36b90 <flatcc_json_parser_build_string@@Base+0x21c>
   36b74:	ldr	r0, [r5, #20]
   36b78:	mov	r6, r4
   36b7c:	cmp	r0, #0
   36b80:	bne	36bac <flatcc_json_parser_build_string@@Base+0x238>
   36b84:	str	r7, [r5, #32]
   36b88:	mov	r0, #17
   36b8c:	add	r2, r7, #1
   36b90:	ldr	r1, [r5, #4]
   36b94:	sub	r1, r2, r1
   36b98:	str	r1, [r5, #16]
   36b9c:	str	r0, [r5, #20]
   36ba0:	mov	r6, r4
   36ba4:	b	36bac <flatcc_json_parser_build_string@@Base+0x238>
   36ba8:	mov	r6, r7
   36bac:	ldr	r0, [r5]
   36bb0:	bl	31630 <flatcc_builder_end_string@@Base>
   36bb4:	cmp	r6, r4
   36bb8:	str	r0, [sl]
   36bbc:	beq	36bd4 <flatcc_json_parser_build_string@@Base+0x260>
   36bc0:	ldrb	r0, [r6]
   36bc4:	cmp	r0, #34	; 0x22
   36bc8:	bne	36bd4 <flatcc_json_parser_build_string@@Base+0x260>
   36bcc:	add	r4, r6, #1
   36bd0:	b	36a58 <flatcc_json_parser_build_string@@Base+0xe4>
   36bd4:	ldr	r0, [r5, #20]
   36bd8:	cmp	r0, #0
   36bdc:	bne	36a58 <flatcc_json_parser_build_string@@Base+0xe4>
   36be0:	str	r6, [r5, #32]
   36be4:	add	r2, r6, #1
   36be8:	mov	r0, #20
   36bec:	ldr	r1, [r5, #4]
   36bf0:	sub	r1, r2, r1
   36bf4:	str	r1, [r5, #16]
   36bf8:	str	r0, [r5, #20]
   36bfc:	b	36a58 <flatcc_json_parser_build_string@@Base+0xe4>
   36c00:	mov	r4, r6
   36c04:	b	36a50 <flatcc_json_parser_build_string@@Base+0xdc>
   36c08:	ldr	r0, [r5, #20]
   36c0c:	cmp	r0, #0
   36c10:	beq	36c20 <flatcc_json_parser_build_string@@Base+0x2ac>
   36c14:	mov	r7, r4
   36c18:	mov	r6, r1
   36c1c:	b	36a3c <flatcc_json_parser_build_string@@Base+0xc8>
   36c20:	str	r6, [r5, #32]
   36c24:	add	r3, r6, #1
   36c28:	mov	r0, #17
   36c2c:	mov	r7, r4
   36c30:	ldr	r2, [r5, #4]
   36c34:	sub	r2, r3, r2
   36c38:	str	r2, [r5, #16]
   36c3c:	str	r0, [r5, #20]
   36c40:	b	36c18 <flatcc_json_parser_build_string@@Base+0x2a4>

00036c44 <flatcc_json_parser_prepare_unions@@Base>:
   36c44:	push	{r4, r5, r6, r7, fp, lr}
   36c48:	add	fp, sp, #16
   36c4c:	mov	r5, r1
   36c50:	mov	r6, r0
   36c54:	add	r0, r3, r3, lsl #1
   36c58:	mov	r1, #8
   36c5c:	mov	r7, r3
   36c60:	mov	r4, r2
   36c64:	add	r1, r1, r0, lsl #3
   36c68:	ldr	r0, [r6]
   36c6c:	bl	2d534 <flatcc_builder_enter_user_frame@@Base>
   36c70:	mov	r1, r0
   36c74:	ldr	r0, [fp, #8]
   36c78:	cmp	r1, #0
   36c7c:	str	r1, [r0]
   36c80:	beq	36c9c <flatcc_json_parser_prepare_unions@@Base+0x58>
   36c84:	ldr	r0, [r6]
   36c88:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   36c8c:	mov	r4, r5
   36c90:	str	r7, [r0]
   36c94:	mov	r0, r4
   36c98:	pop	{r4, r5, r6, r7, fp, pc}
   36c9c:	ldr	r0, [r6, #20]
   36ca0:	cmp	r0, #0
   36ca4:	beq	36cb0 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   36ca8:	mov	r0, r4
   36cac:	pop	{r4, r5, r6, r7, fp, pc}
   36cb0:	str	r5, [r6, #32]
   36cb4:	add	r2, r5, #1
   36cb8:	mov	r0, #33	; 0x21
   36cbc:	ldr	r1, [r6, #4]
   36cc0:	sub	r1, r2, r1
   36cc4:	str	r1, [r6, #16]
   36cc8:	str	r0, [r6, #20]
   36ccc:	mov	r0, r4
   36cd0:	pop	{r4, r5, r6, r7, fp, pc}

00036cd4 <flatcc_json_parser_finalize_unions@@Base>:
   36cd4:	push	{r4, r5, r6, r7, fp, lr}
   36cd8:	add	fp, sp, #16
   36cdc:	mov	r6, r0
   36ce0:	ldr	r0, [r0]
   36ce4:	mov	r7, r1
   36ce8:	mov	r1, r3
   36cec:	mov	r5, r3
   36cf0:	mov	r4, r2
   36cf4:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   36cf8:	ldr	r0, [r0, #4]
   36cfc:	cmp	r0, #0
   36d00:	beq	36d30 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   36d04:	ldr	r0, [r6, #20]
   36d08:	cmp	r0, #0
   36d0c:	bne	36d34 <flatcc_json_parser_finalize_unions@@Base+0x60>
   36d10:	str	r7, [r6, #32]
   36d14:	add	r2, r7, #1
   36d18:	mov	r0, #27
   36d1c:	ldr	r1, [r6, #4]
   36d20:	sub	r1, r2, r1
   36d24:	str	r1, [r6, #16]
   36d28:	str	r0, [r6, #20]
   36d2c:	b	36d34 <flatcc_json_parser_finalize_unions@@Base+0x60>
   36d30:	mov	r4, r7
   36d34:	ldr	r0, [r6]
   36d38:	mov	r1, r5
   36d3c:	bl	2d658 <flatcc_builder_exit_user_frame_at@@Base>
   36d40:	mov	r0, r4
   36d44:	pop	{r4, r5, r6, r7, fp, pc}

00036d48 <flatcc_json_parser_union@@Base>:
   36d48:	push	{r4, r5, r6, r7, fp, lr}
   36d4c:	add	fp, sp, #16
   36d50:	sub	sp, sp, #16
   36d54:	mov	r6, r1
   36d58:	mov	r5, r0
   36d5c:	ldr	r0, [r0]
   36d60:	ldr	r1, [fp, #12]
   36d64:	mov	r7, r3
   36d68:	mov	r4, r2
   36d6c:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   36d70:	add	r2, r0, #8
   36d74:	add	r3, r7, r7, lsl #1
   36d78:	mov	r1, r2
   36d7c:	ldr	r7, [r1, r3, lsl #3]!
   36d80:	cmp	r7, #0
   36d84:	beq	36db4 <flatcc_json_parser_union@@Base+0x6c>
   36d88:	ldr	r0, [r5, #20]
   36d8c:	cmp	r0, #0
   36d90:	bne	36e74 <flatcc_json_parser_union@@Base+0x12c>
   36d94:	mov	r0, #28
   36d98:	str	r6, [r5, #32]
   36d9c:	add	r2, r6, #1
   36da0:	ldr	r1, [r5, #4]
   36da4:	sub	r1, r2, r1
   36da8:	str	r1, [r5, #16]
   36dac:	str	r0, [r5, #20]
   36db0:	b	36e74 <flatcc_json_parser_union@@Base+0x12c>
   36db4:	add	r2, r2, r3, lsl #3
   36db8:	ldrb	r3, [r2, #12]
   36dbc:	cmp	r3, #0
   36dc0:	beq	36e30 <flatcc_json_parser_union@@Base+0xe8>
   36dc4:	ldrb	r3, [r2, #13]
   36dc8:	cmp	r3, #0
   36dcc:	strb	r3, [sp, #8]
   36dd0:	beq	36e68 <flatcc_json_parser_union@@Base+0x120>
   36dd4:	ldr	r1, [r0, #4]
   36dd8:	ldr	r7, [fp, #16]
   36ddc:	mov	r2, r4
   36de0:	sub	r1, r1, #1
   36de4:	str	r1, [r0, #4]
   36de8:	add	r0, sp, #8
   36dec:	mov	r1, r6
   36df0:	add	r0, r0, #4
   36df4:	str	r0, [sp]
   36df8:	mov	r0, r5
   36dfc:	blx	r7
   36e00:	cmp	r0, r4
   36e04:	beq	36e74 <flatcc_json_parser_union@@Base+0x12c>
   36e08:	mov	r6, r0
   36e0c:	ldr	r1, [fp, #8]
   36e10:	ldr	r0, [r5]
   36e14:	ldr	r2, [sp, #8]
   36e18:	ldr	r3, [sp, #12]
   36e1c:	bl	30500 <flatcc_builder_table_add_union@@Base>
   36e20:	cmp	r0, #0
   36e24:	bne	36d88 <flatcc_json_parser_union@@Base+0x40>
   36e28:	mov	r4, r6
   36e2c:	b	36e74 <flatcc_json_parser_union@@Base+0x12c>
   36e30:	ldr	r3, [r0, #4]
   36e34:	add	r3, r3, #1
   36e38:	str	r3, [r0, #4]
   36e3c:	ldr	r0, [r5, #12]
   36e40:	str	r0, [r2, #8]
   36e44:	ldr	r0, [r5, #4]
   36e48:	str	r0, [r2, #4]
   36e4c:	str	r6, [r1]
   36e50:	mov	r0, r5
   36e54:	mov	r1, r6
   36e58:	mov	r2, r4
   36e5c:	bl	3489c <flatcc_json_parser_generic_json@@Base>
   36e60:	mov	r4, r0
   36e64:	b	36e74 <flatcc_json_parser_union@@Base+0x12c>
   36e68:	ldr	r0, [r5, #20]
   36e6c:	cmp	r0, #0
   36e70:	beq	36e80 <flatcc_json_parser_union@@Base+0x138>
   36e74:	mov	r0, r4
   36e78:	sub	sp, fp, #16
   36e7c:	pop	{r4, r5, r6, r7, fp, pc}
   36e80:	mov	r0, #25
   36e84:	b	36d98 <flatcc_json_parser_union@@Base+0x50>

00036e88 <flatcc_json_parser_union_type@@Base>:
   36e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36e8c:	add	fp, sp, #28
   36e90:	sub	sp, sp, #20
   36e94:	mov	r8, r1
   36e98:	mov	r5, r0
   36e9c:	ldr	r0, [r0]
   36ea0:	ldr	r1, [fp, #12]
   36ea4:	mov	r6, r3
   36ea8:	mov	r4, r2
   36eac:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   36eb0:	add	r2, r0, #8
   36eb4:	add	r3, r6, r6, lsl #1
   36eb8:	mov	r9, r0
   36ebc:	add	sl, r2, r3, lsl #3
   36ec0:	mov	r0, sl
   36ec4:	ldrb	r1, [r0, #12]!
   36ec8:	cmp	r1, #0
   36ecc:	beq	36efc <flatcc_json_parser_union_type@@Base+0x74>
   36ed0:	ldr	r0, [r5, #20]
   36ed4:	cmp	r0, #0
   36ed8:	bne	371d4 <flatcc_json_parser_union_type@@Base+0x34c>
   36edc:	str	r8, [r5, #32]
   36ee0:	mov	r0, #28
   36ee4:	add	r2, r8, #1
   36ee8:	ldr	r1, [r5, #4]
   36eec:	sub	r1, r2, r1
   36ef0:	str	r1, [r5, #16]
   36ef4:	str	r0, [r5, #20]
   36ef8:	b	371d4 <flatcc_json_parser_union_type@@Base+0x34c>
   36efc:	mov	r1, #1
   36f00:	mov	r6, #0
   36f04:	mov	lr, sl
   36f08:	cmp	r8, r4
   36f0c:	str	r3, [sp, #4]
   36f10:	str	r2, [sp, #8]
   36f14:	strb	r1, [r0]
   36f18:	strb	r6, [lr, #13]!
   36f1c:	beq	370dc <flatcc_json_parser_union_type@@Base+0x254>
   36f20:	mov	r2, r8
   36f24:	ldrb	ip, [r2], #1
   36f28:	cmp	ip, #45	; 0x2d
   36f2c:	movne	r2, r8
   36f30:	cmp	r2, r4
   36f34:	beq	36fe4 <flatcc_json_parser_union_type@@Base+0x15c>
   36f38:	mov	r6, #0
   36f3c:	mov	r0, #10
   36f40:	mov	r7, #0
   36f44:	ldrb	r1, [r2]
   36f48:	sub	r3, r1, #48	; 0x30
   36f4c:	uxtb	r3, r3
   36f50:	cmp	r3, #9
   36f54:	bhi	37070 <flatcc_json_parser_union_type@@Base+0x1e8>
   36f58:	add	r3, r7, r7, lsl #2
   36f5c:	lsl	r3, r3, #1
   36f60:	umlal	r1, r3, r6, r0
   36f64:	subs	r1, r1, #48	; 0x30
   36f68:	sbc	r3, r3, #0
   36f6c:	subs	r6, r1, r6
   36f70:	sbcs	r7, r3, r7
   36f74:	bcc	37080 <flatcc_json_parser_union_type@@Base+0x1f8>
   36f78:	add	r2, r2, #1
   36f7c:	mov	r6, r1
   36f80:	mov	r7, r3
   36f84:	cmp	r4, r2
   36f88:	bne	36f44 <flatcc_json_parser_union_type@@Base+0xbc>
   36f8c:	mov	r0, #0
   36f90:	mov	r2, r4
   36f94:	mov	r6, r1
   36f98:	mov	r7, r3
   36f9c:	cmp	r2, r8
   36fa0:	beq	370dc <flatcc_json_parser_union_type@@Base+0x254>
   36fa4:	cmp	r0, #0
   36fa8:	beq	36ffc <flatcc_json_parser_union_type@@Base+0x174>
   36fac:	ldrb	r0, [r2]
   36fb0:	cmp	r0, #46	; 0x2e
   36fb4:	beq	36fc4 <flatcc_json_parser_union_type@@Base+0x13c>
   36fb8:	cmp	r0, #101	; 0x65
   36fbc:	cmpne	r0, #69	; 0x45
   36fc0:	bne	36ffc <flatcc_json_parser_union_type@@Base+0x174>
   36fc4:	ldr	r0, [r5, #20]
   36fc8:	mov	r6, #0
   36fcc:	mov	r7, #0
   36fd0:	cmp	r0, #0
   36fd4:	mov	r0, r4
   36fd8:	bne	370c0 <flatcc_json_parser_union_type@@Base+0x238>
   36fdc:	mov	r0, #12
   36fe0:	b	3709c <flatcc_json_parser_union_type@@Base+0x214>
   36fe4:	mov	r2, r4
   36fe8:	mov	r7, #0
   36fec:	mov	r0, #0
   36ff0:	cmp	r2, r8
   36ff4:	bne	36fa4 <flatcc_json_parser_union_type@@Base+0x11c>
   36ff8:	b	370dc <flatcc_json_parser_union_type@@Base+0x254>
   36ffc:	mov	r0, r2
   37000:	cmp	r0, r8
   37004:	beq	370dc <flatcc_json_parser_union_type@@Base+0x254>
   37008:	cmp	ip, #45	; 0x2d
   3700c:	bne	37028 <flatcc_json_parser_union_type@@Base+0x1a0>
   37010:	ldr	r1, [r5, #20]
   37014:	mov	r2, r4
   37018:	cmp	r1, #0
   3701c:	bne	370d4 <flatcc_json_parser_union_type@@Base+0x24c>
   37020:	mov	r1, #8
   37024:	b	37048 <flatcc_json_parser_union_type@@Base+0x1c0>
   37028:	subs	r1, r6, #256	; 0x100
   3702c:	sbcs	r1, r7, #0
   37030:	bcc	370cc <flatcc_json_parser_union_type@@Base+0x244>
   37034:	ldr	r1, [r5, #20]
   37038:	mov	r2, r4
   3703c:	cmp	r1, #0
   37040:	bne	370d4 <flatcc_json_parser_union_type@@Base+0x24c>
   37044:	mov	r1, #7
   37048:	str	r0, [r5, #32]
   3704c:	add	r0, r0, #1
   37050:	ldr	r2, [r5, #4]
   37054:	sub	r0, r0, r2
   37058:	mov	r2, r4
   3705c:	str	r0, [r5, #16]
   37060:	str	r1, [r5, #20]
   37064:	cmp	r2, r8
   37068:	bne	37100 <flatcc_json_parser_union_type@@Base+0x278>
   3706c:	b	370dc <flatcc_json_parser_union_type@@Base+0x254>
   37070:	mov	r0, #1
   37074:	cmp	r2, r8
   37078:	bne	36fa4 <flatcc_json_parser_union_type@@Base+0x11c>
   3707c:	b	370dc <flatcc_json_parser_union_type@@Base+0x254>
   37080:	ldr	r0, [r5, #20]
   37084:	mov	r6, #0
   37088:	mov	r7, #0
   3708c:	cmp	r0, #0
   37090:	mov	r0, r4
   37094:	bne	370c0 <flatcc_json_parser_union_type@@Base+0x238>
   37098:	mov	r0, #8
   3709c:	str	r2, [r5, #32]
   370a0:	add	r2, r2, #1
   370a4:	mov	r6, #0
   370a8:	mov	r7, #0
   370ac:	ldr	r1, [r5, #4]
   370b0:	sub	r1, r2, r1
   370b4:	str	r1, [r5, #16]
   370b8:	str	r0, [r5, #20]
   370bc:	mov	r0, r4
   370c0:	cmp	r0, r8
   370c4:	bne	37008 <flatcc_json_parser_union_type@@Base+0x180>
   370c8:	b	370dc <flatcc_json_parser_union_type@@Base+0x254>
   370cc:	mov	r2, r0
   370d0:	strb	r6, [lr]
   370d4:	cmp	r2, r8
   370d8:	bne	37100 <flatcc_json_parser_union_type@@Base+0x278>
   370dc:	ldr	r3, [fp, #16]
   370e0:	mov	r0, r5
   370e4:	mov	r1, r8
   370e8:	mov	r2, r4
   370ec:	str	lr, [sp]
   370f0:	mov	r6, lr
   370f4:	bl	3720c <flatcc_json_parser_union_type@@Base+0x384>
   370f8:	mov	lr, r6
   370fc:	mov	r2, r0
   37100:	ldr	r0, [sp, #8]
   37104:	ldr	r1, [sp, #4]
   37108:	ldr	r1, [r0, r1, lsl #3]
   3710c:	cmp	r1, #0
   37110:	beq	371ac <flatcc_json_parser_union_type@@Base+0x324>
   37114:	ldr	r0, [r9, #4]
   37118:	str	r2, [sp, #8]
   3711c:	cmp	r0, #0
   37120:	beq	371e0 <flatcc_json_parser_union_type@@Base+0x358>
   37124:	sub	r0, r0, #1
   37128:	ldr	r6, [fp, #20]
   3712c:	mov	r2, r4
   37130:	str	r0, [r9, #4]
   37134:	ldr	r0, [sl, #8]
   37138:	ldr	r8, [r5, #4]
   3713c:	ldr	r7, [r5, #12]
   37140:	str	r0, [r5, #12]
   37144:	ldr	r0, [sl, #4]
   37148:	str	r0, [r5, #4]
   3714c:	add	r0, sp, #12
   37150:	ldrb	r3, [lr]
   37154:	add	r0, r0, #4
   37158:	str	r0, [sp]
   3715c:	mov	r0, r5
   37160:	strb	r3, [sp, #12]
   37164:	blx	r6
   37168:	cmp	r0, r4
   3716c:	beq	371d4 <flatcc_json_parser_union_type@@Base+0x34c>
   37170:	ldr	r1, [fp, #8]
   37174:	ldr	r0, [r5]
   37178:	ldr	r2, [sp, #12]
   3717c:	ldr	r3, [sp, #16]
   37180:	bl	30500 <flatcc_builder_table_add_union@@Base>
   37184:	cmp	r0, #0
   37188:	beq	371c8 <flatcc_json_parser_union_type@@Base+0x340>
   3718c:	ldr	r0, [r5, #20]
   37190:	cmp	r0, #0
   37194:	bne	371d4 <flatcc_json_parser_union_type@@Base+0x34c>
   37198:	ldr	r2, [sp, #8]
   3719c:	mov	r0, #28
   371a0:	str	r2, [r5, #32]
   371a4:	add	r2, r2, #1
   371a8:	b	36ee8 <flatcc_json_parser_union_type@@Base+0x60>
   371ac:	ldrb	r0, [lr]
   371b0:	ldr	r1, [r9, #4]
   371b4:	mov	r4, r2
   371b8:	cmp	r0, #0
   371bc:	addne	r1, r1, #1
   371c0:	str	r1, [r9, #4]
   371c4:	b	371d4 <flatcc_json_parser_union_type@@Base+0x34c>
   371c8:	ldr	r4, [sp, #8]
   371cc:	str	r8, [r5, #4]
   371d0:	str	r7, [r5, #12]
   371d4:	mov	r0, r4
   371d8:	sub	sp, fp, #28
   371dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   371e0:	ldr	r0, [pc, #24]	; 37200 <flatcc_json_parser_union_type@@Base+0x378>
   371e4:	ldr	r1, [pc, #24]	; 37204 <flatcc_json_parser_union_type@@Base+0x37c>
   371e8:	ldr	r3, [pc, #24]	; 37208 <flatcc_json_parser_union_type@@Base+0x380>
   371ec:	movw	r2, #965	; 0x3c5
   371f0:	add	r0, pc, r0
   371f4:	add	r1, pc, r1
   371f8:	add	r3, pc, r3
   371fc:	bl	14f3c <__assert_fail@plt>
   37200:	andeq	r3, r1, r7, lsr #15
   37204:			; <UNDEFINED> instruction: 0x000137b2
   37208:	andeq	r3, r1, pc, lsl #16
   3720c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37210:	add	fp, sp, #28
   37214:	sub	sp, sp, #36	; 0x24
   37218:	mov	r4, r2
   3721c:	mov	r2, r1
   37220:	ldr	r1, [fp, #8]
   37224:	mov	r5, r0
   37228:	mov	r0, #0
   3722c:	mov	r6, r3
   37230:	cmp	r2, r4
   37234:	strb	r0, [r1]
   37238:	beq	37250 <flatcc_json_parser_union_type@@Base+0x3c8>
   3723c:	ldrb	r0, [r2]
   37240:	cmp	r0, #34	; 0x22
   37244:	bne	37258 <flatcc_json_parser_union_type@@Base+0x3d0>
   37248:	add	r1, r2, #1
   3724c:	b	37288 <flatcc_json_parser_union_type@@Base+0x400>
   37250:	mov	r1, r2
   37254:	b	37288 <flatcc_json_parser_union_type@@Base+0x400>
   37258:	ldr	r0, [r5, #20]
   3725c:	mov	r1, r4
   37260:	cmp	r0, #0
   37264:	bne	37288 <flatcc_json_parser_union_type@@Base+0x400>
   37268:	str	r2, [r5, #32]
   3726c:	add	r2, r2, #1
   37270:	mov	r0, #5
   37274:	ldr	r1, [r5, #4]
   37278:	sub	r1, r2, r1
   3727c:	str	r1, [r5, #16]
   37280:	mov	r1, r4
   37284:	str	r0, [r5, #20]
   37288:	sub	r0, r4, r1
   3728c:	cmp	r0, #2
   37290:	blt	372c4 <flatcc_json_parser_union_type@@Base+0x43c>
   37294:	ldrb	r0, [r1]
   37298:	cmp	r0, #32
   3729c:	bls	372b0 <flatcc_json_parser_union_type@@Base+0x428>
   372a0:	mov	r7, r1
   372a4:	cmp	r7, r4
   372a8:	bne	372dc <flatcc_json_parser_union_type@@Base+0x454>
   372ac:	b	373c4 <flatcc_json_parser_union_type@@Base+0x53c>
   372b0:	bne	372c4 <flatcc_json_parser_union_type@@Base+0x43c>
   372b4:	mov	r7, r1
   372b8:	ldrb	r0, [r7, #1]!
   372bc:	cmp	r0, #32
   372c0:	bhi	372d4 <flatcc_json_parser_union_type@@Base+0x44c>
   372c4:	mov	r0, r5
   372c8:	mov	r2, r4
   372cc:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   372d0:	mov	r7, r0
   372d4:	cmp	r7, r4
   372d8:	beq	373c4 <flatcc_json_parser_union_type@@Base+0x53c>
   372dc:	add	sl, r6, #4
   372e0:	add	r8, sp, #24
   372e4:	add	r9, sp, #20
   372e8:	str	r6, [sp, #12]
   372ec:	str	sl, [sp, #8]
   372f0:	b	37324 <flatcc_json_parser_union_type@@Base+0x49c>
   372f4:	ldr	r2, [fp, #8]
   372f8:	ldr	r6, [sp, #12]
   372fc:	ldr	sl, [sp, #8]
   37300:	mov	r7, r0
   37304:	mov	r3, r2
   37308:	ldrb	r2, [r2]
   3730c:	add	r1, r2, r1
   37310:	strb	r1, [r3]
   37314:	ldr	r1, [sp, #16]
   37318:	cmp	r1, #0
   3731c:	subeq	sp, fp, #28
   37320:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37324:	ldr	r6, [r6]
   37328:	add	r0, sp, #16
   3732c:	mov	r1, r7
   37330:	mov	r2, r4
   37334:	mov	r3, r9
   37338:	str	r8, [sp]
   3733c:	str	r0, [sp, #4]
   37340:	mov	r0, r5
   37344:	blx	r6
   37348:	cmp	r0, r4
   3734c:	beq	373c4 <flatcc_json_parser_union_type@@Base+0x53c>
   37350:	cmp	r0, r7
   37354:	bne	37368 <flatcc_json_parser_union_type@@Base+0x4e0>
   37358:	ldr	r6, [sl], #4
   3735c:	cmp	r6, #0
   37360:	bne	37328 <flatcc_json_parser_union_type@@Base+0x4a0>
   37364:	b	3739c <flatcc_json_parser_union_type@@Base+0x514>
   37368:	ldr	r1, [sp, #20]
   3736c:	cmp	r1, #0
   37370:	bne	373d0 <flatcc_json_parser_union_type@@Base+0x548>
   37374:	ldr	r1, [sp, #24]
   37378:	ldr	r2, [sp, #28]
   3737c:	subs	r3, r1, #256	; 0x100
   37380:	sbcs	r2, r2, #0
   37384:	bcc	372f4 <flatcc_json_parser_union_type@@Base+0x46c>
   37388:	ldr	r1, [r5, #20]
   3738c:	cmp	r1, #0
   37390:	bne	373c4 <flatcc_json_parser_union_type@@Base+0x53c>
   37394:	mov	r1, #7
   37398:	b	373e0 <flatcc_json_parser_union_type@@Base+0x558>
   3739c:	ldr	r0, [r5, #20]
   373a0:	cmp	r0, #0
   373a4:	bne	373c4 <flatcc_json_parser_union_type@@Base+0x53c>
   373a8:	str	r7, [r5, #32]
   373ac:	add	r2, r7, #1
   373b0:	mov	r0, #23
   373b4:	ldr	r1, [r5, #4]
   373b8:	sub	r1, r2, r1
   373bc:	str	r1, [r5, #16]
   373c0:	str	r0, [r5, #20]
   373c4:	mov	r0, r4
   373c8:	sub	sp, fp, #28
   373cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   373d0:	ldr	r1, [r5, #20]
   373d4:	cmp	r1, #0
   373d8:	bne	373c4 <flatcc_json_parser_union_type@@Base+0x53c>
   373dc:	mov	r1, #8
   373e0:	str	r0, [r5, #32]
   373e4:	add	r0, r0, #1
   373e8:	ldr	r2, [r5, #4]
   373ec:	sub	r0, r0, r2
   373f0:	str	r0, [r5, #16]
   373f4:	str	r1, [r5, #20]
   373f8:	b	373c4 <flatcc_json_parser_union_type@@Base+0x53c>

000373fc <flatcc_json_parser_union_vector@@Base>:
   373fc:	push	{r4, r5, r6, r7, fp, lr}
   37400:	add	fp, sp, #16
   37404:	sub	sp, sp, #16
   37408:	mov	r6, r1
   3740c:	mov	r5, r0
   37410:	ldr	r0, [r0]
   37414:	ldr	r1, [fp, #12]
   37418:	mov	r7, r3
   3741c:	mov	r4, r2
   37420:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   37424:	add	r2, r0, #8
   37428:	add	r3, r7, r7, lsl #1
   3742c:	mov	r1, r2
   37430:	ldr	r7, [r1, r3, lsl #3]!
   37434:	cmp	r7, #0
   37438:	beq	37470 <flatcc_json_parser_union_vector@@Base+0x74>
   3743c:	ldr	r0, [r5, #20]
   37440:	cmp	r0, #0
   37444:	bne	37464 <flatcc_json_parser_union_vector@@Base+0x68>
   37448:	str	r6, [r5, #32]
   3744c:	add	r2, r6, #1
   37450:	mov	r0, #28
   37454:	ldr	r1, [r5, #4]
   37458:	sub	r1, r2, r1
   3745c:	str	r1, [r5, #16]
   37460:	str	r0, [r5, #20]
   37464:	mov	r0, r4
   37468:	sub	sp, fp, #16
   3746c:	pop	{r4, r5, r6, r7, fp, pc}
   37470:	add	r2, r2, r3, lsl #3
   37474:	ldr	r3, [r0, #4]
   37478:	ldrb	r7, [r2, #12]
   3747c:	cmp	r7, #0
   37480:	beq	374bc <flatcc_json_parser_union_vector@@Base+0xc0>
   37484:	sub	r3, r3, #1
   37488:	ldr	r1, [fp, #16]
   3748c:	ldr	r7, [fp, #8]
   37490:	str	r3, [r0, #4]
   37494:	ldr	r0, [r2, #16]
   37498:	ldr	r3, [r2, #20]
   3749c:	mov	r2, r4
   374a0:	stm	sp, {r0, r7}
   374a4:	str	r1, [sp, #8]
   374a8:	mov	r0, r5
   374ac:	mov	r1, r6
   374b0:	bl	374f0 <flatcc_json_parser_union_vector@@Base+0xf4>
   374b4:	sub	sp, fp, #16
   374b8:	pop	{r4, r5, r6, r7, fp, pc}
   374bc:	add	r3, r3, #1
   374c0:	str	r3, [r0, #4]
   374c4:	ldr	r0, [r5, #12]
   374c8:	str	r0, [r2, #8]
   374cc:	ldr	r0, [r5, #4]
   374d0:	str	r0, [r2, #4]
   374d4:	str	r6, [r1]
   374d8:	mov	r0, r5
   374dc:	mov	r1, r6
   374e0:	mov	r2, r4
   374e4:	sub	sp, fp, #16
   374e8:	pop	{r4, r5, r6, r7, fp, lr}
   374ec:	b	3489c <flatcc_json_parser_generic_json@@Base>
   374f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   374f4:	add	fp, sp, #28
   374f8:	sub	sp, sp, #12
   374fc:	mov	r5, r0
   37500:	mov	r0, #0
   37504:	mov	r8, r3
   37508:	mov	r6, r2
   3750c:	mov	r7, r1
   37510:	str	r0, [sp, #8]
   37514:	ldr	r0, [r5]
   37518:	bl	2eec0 <flatcc_builder_start_offset_vector@@Base>
   3751c:	cmp	r0, #0
   37520:	beq	37540 <flatcc_json_parser_union_vector@@Base+0x144>
   37524:	ldr	r0, [r5, #20]
   37528:	cmp	r0, #0
   3752c:	bne	375bc <flatcc_json_parser_union_vector@@Base+0x1c0>
   37530:	str	r7, [r5, #32]
   37534:	mov	r0, #33	; 0x21
   37538:	add	r2, r7, #1
   3753c:	b	375ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   37540:	ldr	sl, [fp, #8]
   37544:	cmp	r7, r6
   37548:	beq	3757c <flatcc_json_parser_union_vector@@Base+0x180>
   3754c:	ldrb	r0, [r7]
   37550:	cmp	r0, #91	; 0x5b
   37554:	bne	3757c <flatcc_json_parser_union_vector@@Base+0x180>
   37558:	add	r1, r7, #1
   3755c:	sub	r0, r6, r1
   37560:	cmp	r0, #2
   37564:	blt	37650 <flatcc_json_parser_union_vector@@Base+0x254>
   37568:	ldrb	r0, [r1]
   3756c:	cmp	r0, #32
   37570:	bls	37640 <flatcc_json_parser_union_vector@@Base+0x244>
   37574:	mov	r7, r1
   37578:	b	37660 <flatcc_json_parser_union_vector@@Base+0x264>
   3757c:	ldr	r0, [r5, #20]
   37580:	mov	r9, r6
   37584:	cmp	r0, #0
   37588:	beq	375c8 <flatcc_json_parser_union_vector@@Base+0x1cc>
   3758c:	cmp	sl, #0
   37590:	beq	375f0 <flatcc_json_parser_union_vector@@Base+0x1f4>
   37594:	ldr	r0, [r5, #20]
   37598:	cmp	r0, #0
   3759c:	bne	375bc <flatcc_json_parser_union_vector@@Base+0x1c0>
   375a0:	str	r9, [r5, #32]
   375a4:	mov	r0, #30
   375a8:	add	r2, r9, #1
   375ac:	ldr	r1, [r5, #4]
   375b0:	sub	r1, r2, r1
   375b4:	str	r1, [r5, #16]
   375b8:	str	r0, [r5, #20]
   375bc:	mov	r0, r6
   375c0:	sub	sp, fp, #28
   375c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   375c8:	str	r7, [r5, #32]
   375cc:	add	r2, r7, #1
   375d0:	mov	r0, #22
   375d4:	mov	r9, r6
   375d8:	ldr	r1, [r5, #4]
   375dc:	sub	r1, r2, r1
   375e0:	str	r1, [r5, #16]
   375e4:	str	r0, [r5, #20]
   375e8:	cmp	sl, #0
   375ec:	bne	37594 <flatcc_json_parser_union_vector@@Base+0x198>
   375f0:	ldr	r0, [r5]
   375f4:	mov	r1, r8
   375f8:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   375fc:	mov	r1, r0
   37600:	ldr	r0, [r5]
   37604:	bl	30408 <flatcc_builder_end_offset_vector_for_unions@@Base>
   37608:	cmp	r0, #0
   3760c:	str	r0, [sp, #8]
   37610:	beq	37638 <flatcc_json_parser_union_vector@@Base+0x23c>
   37614:	ldr	r1, [fp, #12]
   37618:	ldr	r0, [r5]
   3761c:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   37620:	cmp	r0, #0
   37624:	beq	37638 <flatcc_json_parser_union_vector@@Base+0x23c>
   37628:	ldr	r1, [sp, #8]
   3762c:	mov	r6, r9
   37630:	str	r1, [r0]
   37634:	b	375bc <flatcc_json_parser_union_vector@@Base+0x1c0>
   37638:	mov	r7, r9
   3763c:	b	37524 <flatcc_json_parser_union_vector@@Base+0x128>
   37640:	bne	37650 <flatcc_json_parser_union_vector@@Base+0x254>
   37644:	ldrb	r0, [r7, #2]!
   37648:	cmp	r0, #32
   3764c:	bhi	37660 <flatcc_json_parser_union_vector@@Base+0x264>
   37650:	mov	r0, r5
   37654:	mov	r2, r6
   37658:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   3765c:	mov	r7, r0
   37660:	cmp	r7, r6
   37664:	mov	r4, r6
   37668:	beq	376a8 <flatcc_json_parser_union_vector@@Base+0x2ac>
   3766c:	ldrb	r0, [r7]
   37670:	cmp	r0, #93	; 0x5d
   37674:	bne	376a4 <flatcc_json_parser_union_vector@@Base+0x2a8>
   37678:	add	r1, r7, #1
   3767c:	sub	r0, r6, r1
   37680:	cmp	r0, #2
   37684:	blt	37814 <flatcc_json_parser_union_vector@@Base+0x418>
   37688:	ldrb	r0, [r1]
   3768c:	cmp	r0, #32
   37690:	bls	37800 <flatcc_json_parser_union_vector@@Base+0x404>
   37694:	mov	r9, r1
   37698:	cmp	sl, #0
   3769c:	bne	37594 <flatcc_json_parser_union_vector@@Base+0x198>
   376a0:	b	375f0 <flatcc_json_parser_union_vector@@Base+0x1f4>
   376a4:	mov	r4, r7
   376a8:	cmp	sl, #0
   376ac:	beq	377e4 <flatcc_json_parser_union_vector@@Base+0x3e8>
   376b0:	add	r0, r6, #1
   376b4:	mov	sl, #0
   376b8:	add	r9, sp, #8
   376bc:	str	r0, [sp, #4]
   376c0:	ldr	r0, [r5]
   376c4:	mov	r1, r8
   376c8:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   376cc:	ldrb	r3, [r0, -sl]
   376d0:	ldr	r7, [fp, #16]
   376d4:	mov	r0, r5
   376d8:	mov	r1, r4
   376dc:	mov	r2, r6
   376e0:	str	r9, [sp]
   376e4:	blx	r7
   376e8:	cmp	r0, r6
   376ec:	beq	375bc <flatcc_json_parser_union_vector@@Base+0x1c0>
   376f0:	mov	r7, r0
   376f4:	ldr	r0, [r5]
   376f8:	mov	r1, #1
   376fc:	bl	2e618 <flatcc_builder_extend_offset_vector@@Base>
   37700:	cmp	r0, #0
   37704:	beq	37524 <flatcc_json_parser_union_vector@@Base+0x128>
   37708:	ldr	r1, [sp, #8]
   3770c:	str	r1, [r0]
   37710:	sub	r0, r6, r7
   37714:	cmp	r0, #2
   37718:	blt	3774c <flatcc_json_parser_union_vector@@Base+0x350>
   3771c:	ldrb	r0, [r7]
   37720:	cmp	r0, #32
   37724:	bls	37738 <flatcc_json_parser_union_vector@@Base+0x33c>
   37728:	mov	r4, r7
   3772c:	cmp	r4, r6
   37730:	bne	37768 <flatcc_json_parser_union_vector@@Base+0x36c>
   37734:	b	37830 <flatcc_json_parser_union_vector@@Base+0x434>
   37738:	bne	3774c <flatcc_json_parser_union_vector@@Base+0x350>
   3773c:	mov	r4, r7
   37740:	ldrb	r0, [r4, #1]!
   37744:	cmp	r0, #32
   37748:	bhi	37760 <flatcc_json_parser_union_vector@@Base+0x364>
   3774c:	mov	r0, r5
   37750:	mov	r1, r7
   37754:	mov	r2, r6
   37758:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   3775c:	mov	r4, r0
   37760:	cmp	r4, r6
   37764:	beq	37830 <flatcc_json_parser_union_vector@@Base+0x434>
   37768:	ldrb	r0, [r4]
   3776c:	cmp	r0, #44	; 0x2c
   37770:	bne	37838 <flatcc_json_parser_union_vector@@Base+0x43c>
   37774:	add	r1, r4, #1
   37778:	sub	r0, r6, r1
   3777c:	cmp	r0, #2
   37780:	blt	377b0 <flatcc_json_parser_union_vector@@Base+0x3b4>
   37784:	ldrb	r0, [r1]
   37788:	cmp	r0, #32
   3778c:	bls	377a0 <flatcc_json_parser_union_vector@@Base+0x3a4>
   37790:	mov	r4, r1
   37794:	cmp	r4, r6
   37798:	bne	377c8 <flatcc_json_parser_union_vector@@Base+0x3cc>
   3779c:	b	37864 <flatcc_json_parser_union_vector@@Base+0x468>
   377a0:	bne	377b0 <flatcc_json_parser_union_vector@@Base+0x3b4>
   377a4:	ldrb	r0, [r4, #2]!
   377a8:	cmp	r0, #32
   377ac:	bhi	377c0 <flatcc_json_parser_union_vector@@Base+0x3c4>
   377b0:	mov	r0, r5
   377b4:	mov	r2, r6
   377b8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   377bc:	mov	r4, r0
   377c0:	cmp	r4, r6
   377c4:	beq	37864 <flatcc_json_parser_union_vector@@Base+0x468>
   377c8:	ldrb	r0, [r4]
   377cc:	cmp	r0, #93	; 0x5d
   377d0:	beq	37840 <flatcc_json_parser_union_vector@@Base+0x444>
   377d4:	ldr	r0, [fp, #8]
   377d8:	sub	sl, sl, #1
   377dc:	adds	r0, r0, sl
   377e0:	bne	376c0 <flatcc_json_parser_union_vector@@Base+0x2c4>
   377e4:	ldr	r0, [r5, #20]
   377e8:	cmp	r0, #0
   377ec:	bne	375bc <flatcc_json_parser_union_vector@@Base+0x1c0>
   377f0:	str	r4, [r5, #32]
   377f4:	mov	r0, #30
   377f8:	add	r2, r4, #1
   377fc:	b	375ac <flatcc_json_parser_union_vector@@Base+0x1b0>
   37800:	bne	37814 <flatcc_json_parser_union_vector@@Base+0x418>
   37804:	ldrb	r0, [r7, #2]!
   37808:	cmp	r0, #32
   3780c:	mov	r9, r7
   37810:	bhi	3758c <flatcc_json_parser_union_vector@@Base+0x190>
   37814:	mov	r0, r5
   37818:	mov	r2, r6
   3781c:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   37820:	mov	r9, r0
   37824:	cmp	sl, #0
   37828:	bne	37594 <flatcc_json_parser_union_vector@@Base+0x198>
   3782c:	b	375f0 <flatcc_json_parser_union_vector@@Base+0x1f4>
   37830:	mov	r9, r6
   37834:	b	378dc <flatcc_json_parser_union_vector@@Base+0x4e0>
   37838:	cmp	r0, #93	; 0x5d
   3783c:	bne	37884 <flatcc_json_parser_union_vector@@Base+0x488>
   37840:	add	r1, r4, #1
   37844:	sub	r0, r6, r1
   37848:	cmp	r0, #2
   3784c:	blt	378cc <flatcc_json_parser_union_vector@@Base+0x4d0>
   37850:	ldrb	r0, [r1]
   37854:	cmp	r0, #32
   37858:	bls	378b8 <flatcc_json_parser_union_vector@@Base+0x4bc>
   3785c:	mov	r9, r1
   37860:	b	378dc <flatcc_json_parser_union_vector@@Base+0x4e0>
   37864:	ldr	r0, [r5, #20]
   37868:	mov	r9, r6
   3786c:	cmp	r0, #0
   37870:	bne	378dc <flatcc_json_parser_union_vector@@Base+0x4e0>
   37874:	str	r6, [r5, #32]
   37878:	ldr	r2, [sp, #4]
   3787c:	mov	r0, #9
   37880:	b	378a0 <flatcc_json_parser_union_vector@@Base+0x4a4>
   37884:	ldr	r0, [r5, #20]
   37888:	mov	r9, r6
   3788c:	cmp	r0, #0
   37890:	bne	378dc <flatcc_json_parser_union_vector@@Base+0x4e0>
   37894:	str	r4, [r5, #32]
   37898:	mov	r0, #9
   3789c:	add	r2, r4, #1
   378a0:	ldr	r1, [r5, #4]
   378a4:	sub	r1, r2, r1
   378a8:	mov	r9, r6
   378ac:	str	r1, [r5, #16]
   378b0:	str	r0, [r5, #20]
   378b4:	b	378dc <flatcc_json_parser_union_vector@@Base+0x4e0>
   378b8:	bne	378cc <flatcc_json_parser_union_vector@@Base+0x4d0>
   378bc:	ldrb	r0, [r4, #2]!
   378c0:	cmp	r0, #32
   378c4:	mov	r9, r4
   378c8:	bhi	378dc <flatcc_json_parser_union_vector@@Base+0x4e0>
   378cc:	mov	r0, r5
   378d0:	mov	r2, r6
   378d4:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   378d8:	mov	r9, r0
   378dc:	ldr	r0, [fp, #8]
   378e0:	add	r0, r0, sl
   378e4:	cmp	r0, #1
   378e8:	bne	37594 <flatcc_json_parser_union_vector@@Base+0x198>
   378ec:	b	375f0 <flatcc_json_parser_union_vector@@Base+0x1f4>

000378f0 <flatcc_json_parser_union_type_vector@@Base>:
   378f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   378f4:	add	fp, sp, #28
   378f8:	sub	sp, sp, #28
   378fc:	mov	r7, r1
   37900:	mov	r5, r0
   37904:	ldr	r0, [r0]
   37908:	ldr	r1, [fp, #12]
   3790c:	mov	r4, r3
   37910:	mov	r8, r2
   37914:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   37918:	add	r0, r0, #8
   3791c:	add	r6, r4, r4, lsl #1
   37920:	add	r4, r0, r6, lsl #3
   37924:	mov	r0, r4
   37928:	ldrb	r1, [r0, #12]!
   3792c:	cmp	r1, #0
   37930:	beq	37950 <flatcc_json_parser_union_type_vector@@Base+0x60>
   37934:	ldr	r0, [r5, #20]
   37938:	cmp	r0, #0
   3793c:	bne	379a0 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   37940:	str	r7, [r5, #32]
   37944:	mov	r0, #28
   37948:	add	r2, r7, #1
   3794c:	b	37990 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   37950:	mov	r1, #1
   37954:	mov	r2, #1
   37958:	mvn	r3, #0
   3795c:	strb	r1, [r0]
   37960:	mov	r1, #1
   37964:	ldr	r0, [r5]
   37968:	bl	2ee34 <flatcc_builder_start_vector@@Base>
   3796c:	cmp	r0, #0
   37970:	beq	379ac <flatcc_json_parser_union_type_vector@@Base+0xbc>
   37974:	mov	sl, r7
   37978:	ldr	r0, [r5, #20]
   3797c:	cmp	r0, #0
   37980:	bne	379a0 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   37984:	str	sl, [r5, #32]
   37988:	mov	r0, #33	; 0x21
   3798c:	add	r2, sl, #1
   37990:	ldr	r1, [r5, #4]
   37994:	sub	r1, r2, r1
   37998:	str	r1, [r5, #16]
   3799c:	str	r0, [r5, #20]
   379a0:	mov	r0, r8
   379a4:	sub	sp, fp, #28
   379a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   379ac:	cmp	r7, r8
   379b0:	beq	379e4 <flatcc_json_parser_union_type_vector@@Base+0xf4>
   379b4:	ldrb	r0, [r7]
   379b8:	cmp	r0, #91	; 0x5b
   379bc:	bne	379e4 <flatcc_json_parser_union_type_vector@@Base+0xf4>
   379c0:	add	r1, r7, #1
   379c4:	sub	r0, r8, r1
   379c8:	cmp	r0, #2
   379cc:	blt	37a28 <flatcc_json_parser_union_type_vector@@Base+0x138>
   379d0:	ldrb	r0, [r1]
   379d4:	cmp	r0, #32
   379d8:	bls	37a18 <flatcc_json_parser_union_type_vector@@Base+0x128>
   379dc:	mov	r7, r1
   379e0:	b	37a38 <flatcc_json_parser_union_type_vector@@Base+0x148>
   379e4:	ldr	r0, [r5, #20]
   379e8:	cmp	r0, #0
   379ec:	mov	r0, r8
   379f0:	bne	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   379f4:	str	r7, [r5, #32]
   379f8:	mov	r0, #22
   379fc:	add	r2, r7, #1
   37a00:	ldr	r1, [r5, #4]
   37a04:	sub	r1, r2, r1
   37a08:	str	r1, [r5, #16]
   37a0c:	str	r0, [r5, #20]
   37a10:	mov	r0, r8
   37a14:	b	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37a18:	bne	37a28 <flatcc_json_parser_union_type_vector@@Base+0x138>
   37a1c:	ldrb	r0, [r7, #2]!
   37a20:	cmp	r0, #32
   37a24:	bhi	37a38 <flatcc_json_parser_union_type_vector@@Base+0x148>
   37a28:	mov	r0, r5
   37a2c:	mov	r2, r8
   37a30:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   37a34:	mov	r7, r0
   37a38:	cmp	r7, r8
   37a3c:	mov	sl, r8
   37a40:	beq	37a88 <flatcc_json_parser_union_type_vector@@Base+0x198>
   37a44:	ldrb	r0, [r7]
   37a48:	cmp	r0, #93	; 0x5d
   37a4c:	bne	37a84 <flatcc_json_parser_union_type_vector@@Base+0x194>
   37a50:	add	r1, r7, #1
   37a54:	sub	r0, r8, r1
   37a58:	cmp	r0, #2
   37a5c:	blt	37eb0 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   37a60:	ldrb	r0, [r1]
   37a64:	cmp	r0, #32
   37a68:	bhi	37e30 <flatcc_json_parser_union_type_vector@@Base+0x540>
   37a6c:	bne	37eb0 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   37a70:	ldrb	r0, [r7, #2]!
   37a74:	cmp	r0, #32
   37a78:	mov	r0, r7
   37a7c:	bls	37eb0 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   37a80:	b	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37a84:	mov	sl, r7
   37a88:	ldr	r0, [r5]
   37a8c:	mov	r1, #1
   37a90:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   37a94:	cmp	r0, #0
   37a98:	beq	37978 <flatcc_json_parser_union_type_vector@@Base+0x88>
   37a9c:	mov	r1, r0
   37aa0:	add	r0, r8, #1
   37aa4:	str	r4, [sp, #16]
   37aa8:	str	r0, [sp, #12]
   37aac:	mov	r9, #0
   37ab0:	cmp	sl, r8
   37ab4:	mov	r4, r8
   37ab8:	str	r1, [sp, #20]
   37abc:	strb	r9, [sp, #27]
   37ac0:	beq	37cb0 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   37ac4:	mov	r2, sl
   37ac8:	mov	r9, #0
   37acc:	ldrb	ip, [r2], #1
   37ad0:	cmp	ip, #45	; 0x2d
   37ad4:	movne	r2, sl
   37ad8:	cmp	r2, r8
   37adc:	beq	37b48 <flatcc_json_parser_union_type_vector@@Base+0x258>
   37ae0:	mov	r7, #0
   37ae4:	mov	r0, #0
   37ae8:	mov	r4, #10
   37aec:	ldrb	r1, [r2]
   37af0:	sub	r3, r1, #48	; 0x30
   37af4:	uxtb	r3, r3
   37af8:	cmp	r3, #9
   37afc:	bhi	37b5c <flatcc_json_parser_union_type_vector@@Base+0x26c>
   37b00:	add	r3, r0, r0, lsl #2
   37b04:	lsl	r3, r3, #1
   37b08:	umlal	r1, r3, r7, r4
   37b0c:	subs	r1, r1, #48	; 0x30
   37b10:	sbc	r3, r3, #0
   37b14:	subs	r7, r1, r7
   37b18:	sbcs	r0, r3, r0
   37b1c:	bcc	37bc8 <flatcc_json_parser_union_type_vector@@Base+0x2d8>
   37b20:	add	r2, r2, #1
   37b24:	mov	r7, r1
   37b28:	mov	r0, r3
   37b2c:	cmp	r8, r2
   37b30:	bne	37aec <flatcc_json_parser_union_type_vector@@Base+0x1fc>
   37b34:	mov	lr, #0
   37b38:	mov	r2, r8
   37b3c:	mov	r7, r1
   37b40:	mov	r0, r3
   37b44:	b	37b60 <flatcc_json_parser_union_type_vector@@Base+0x270>
   37b48:	mov	r2, r8
   37b4c:	mov	r7, #0
   37b50:	mov	r0, #0
   37b54:	mov	lr, #0
   37b58:	b	37b60 <flatcc_json_parser_union_type_vector@@Base+0x270>
   37b5c:	mov	lr, #1
   37b60:	cmp	r2, sl
   37b64:	mov	r4, sl
   37b68:	beq	37cb0 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   37b6c:	cmp	lr, #0
   37b70:	beq	37bc0 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   37b74:	ldrb	r1, [r2]
   37b78:	cmp	r1, #46	; 0x2e
   37b7c:	beq	37b8c <flatcc_json_parser_union_type_vector@@Base+0x29c>
   37b80:	cmp	r1, #101	; 0x65
   37b84:	cmpne	r1, #69	; 0x45
   37b88:	bne	37bc0 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   37b8c:	ldr	r0, [r5, #20]
   37b90:	mov	r7, #0
   37b94:	mov	r4, r8
   37b98:	cmp	r0, #0
   37b9c:	mov	r0, #0
   37ba0:	bne	37c08 <flatcc_json_parser_union_type_vector@@Base+0x318>
   37ba4:	str	r2, [r5, #32]
   37ba8:	add	r1, r2, #1
   37bac:	ldr	r0, [r5, #4]
   37bb0:	sub	r0, r1, r0
   37bb4:	str	r0, [r5, #16]
   37bb8:	mov	r0, #12
   37bbc:	b	37bf8 <flatcc_json_parser_union_type_vector@@Base+0x308>
   37bc0:	mov	r4, r2
   37bc4:	b	37c08 <flatcc_json_parser_union_type_vector@@Base+0x318>
   37bc8:	ldr	r0, [r5, #20]
   37bcc:	mov	r7, #0
   37bd0:	mov	r4, r8
   37bd4:	cmp	r0, #0
   37bd8:	mov	r0, #0
   37bdc:	bne	37c08 <flatcc_json_parser_union_type_vector@@Base+0x318>
   37be0:	str	r2, [r5, #32]
   37be4:	add	r1, r2, #1
   37be8:	ldr	r0, [r5, #4]
   37bec:	sub	r0, r1, r0
   37bf0:	str	r0, [r5, #16]
   37bf4:	mov	r0, #8
   37bf8:	str	r0, [r5, #20]
   37bfc:	mov	r7, #0
   37c00:	mov	r0, #0
   37c04:	mov	r4, r8
   37c08:	mov	r9, #0
   37c0c:	cmp	r4, sl
   37c10:	beq	37c44 <flatcc_json_parser_union_type_vector@@Base+0x354>
   37c14:	cmp	ip, #45	; 0x2d
   37c18:	bne	37c54 <flatcc_json_parser_union_type_vector@@Base+0x364>
   37c1c:	ldr	r0, [r5, #20]
   37c20:	cmp	r0, #0
   37c24:	bne	37c6c <flatcc_json_parser_union_type_vector@@Base+0x37c>
   37c28:	str	r4, [r5, #32]
   37c2c:	add	r1, r4, #1
   37c30:	ldr	r0, [r5, #4]
   37c34:	sub	r0, r1, r0
   37c38:	str	r0, [r5, #16]
   37c3c:	mov	r0, #8
   37c40:	b	37ca8 <flatcc_json_parser_union_type_vector@@Base+0x3b8>
   37c44:	mov	r4, sl
   37c48:	cmp	sl, r4
   37c4c:	bne	37cec <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   37c50:	b	37cb8 <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   37c54:	subs	r1, r7, #256	; 0x100
   37c58:	sbcs	r0, r0, #0
   37c5c:	bcc	37c7c <flatcc_json_parser_union_type_vector@@Base+0x38c>
   37c60:	ldr	r0, [r5, #20]
   37c64:	cmp	r0, #0
   37c68:	beq	37c90 <flatcc_json_parser_union_type_vector@@Base+0x3a0>
   37c6c:	mov	r4, r8
   37c70:	cmp	sl, r4
   37c74:	bne	37cec <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   37c78:	b	37cb8 <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   37c7c:	mov	r9, r7
   37c80:	strb	r7, [sp, #27]
   37c84:	cmp	sl, r4
   37c88:	bne	37cec <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   37c8c:	b	37cb8 <flatcc_json_parser_union_type_vector@@Base+0x3c8>
   37c90:	str	r4, [r5, #32]
   37c94:	add	r1, r4, #1
   37c98:	ldr	r0, [r5, #4]
   37c9c:	sub	r0, r1, r0
   37ca0:	str	r0, [r5, #16]
   37ca4:	mov	r0, #7
   37ca8:	str	r0, [r5, #20]
   37cac:	mov	r4, r8
   37cb0:	cmp	sl, r4
   37cb4:	bne	37cec <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   37cb8:	ldr	r3, [fp, #16]
   37cbc:	add	r0, sp, #27
   37cc0:	mov	r1, sl
   37cc4:	mov	r2, r8
   37cc8:	str	r0, [sp]
   37ccc:	mov	r0, r5
   37cd0:	bl	3720c <flatcc_json_parser_union_type@@Base+0x384>
   37cd4:	mov	r4, r0
   37cd8:	cmp	r0, sl
   37cdc:	beq	37e78 <flatcc_json_parser_union_type_vector@@Base+0x588>
   37ce0:	cmp	r4, r8
   37ce4:	beq	37e78 <flatcc_json_parser_union_type_vector@@Base+0x588>
   37ce8:	ldrb	r9, [sp, #27]
   37cec:	ldr	r1, [fp, #24]
   37cf0:	uxtb	r0, r9
   37cf4:	blx	r1
   37cf8:	cmp	r0, #0
   37cfc:	bne	37d14 <flatcc_json_parser_union_type_vector@@Base+0x424>
   37d00:	ldrb	r0, [r5, #8]
   37d04:	tst	r0, #1
   37d08:	beq	37e80 <flatcc_json_parser_union_type_vector@@Base+0x590>
   37d0c:	mov	r9, #0
   37d10:	strb	r9, [sp, #27]
   37d14:	ldr	r0, [sp, #20]
   37d18:	strb	r9, [r0]
   37d1c:	sub	r0, r8, r4
   37d20:	cmp	r0, #2
   37d24:	blt	37d58 <flatcc_json_parser_union_type_vector@@Base+0x468>
   37d28:	ldrb	r0, [r4]
   37d2c:	cmp	r0, #32
   37d30:	bls	37d44 <flatcc_json_parser_union_type_vector@@Base+0x454>
   37d34:	mov	sl, r4
   37d38:	cmp	sl, r8
   37d3c:	bne	37d74 <flatcc_json_parser_union_type_vector@@Base+0x484>
   37d40:	b	37e00 <flatcc_json_parser_union_type_vector@@Base+0x510>
   37d44:	bne	37d58 <flatcc_json_parser_union_type_vector@@Base+0x468>
   37d48:	mov	sl, r4
   37d4c:	ldrb	r0, [sl, #1]!
   37d50:	cmp	r0, #32
   37d54:	bhi	37d6c <flatcc_json_parser_union_type_vector@@Base+0x47c>
   37d58:	mov	r0, r5
   37d5c:	mov	r1, r4
   37d60:	mov	r2, r8
   37d64:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   37d68:	mov	sl, r0
   37d6c:	cmp	sl, r8
   37d70:	beq	37e00 <flatcc_json_parser_union_type_vector@@Base+0x510>
   37d74:	ldrb	r0, [sl]
   37d78:	ldr	r4, [sp, #16]
   37d7c:	cmp	r0, #44	; 0x2c
   37d80:	bne	37e0c <flatcc_json_parser_union_type_vector@@Base+0x51c>
   37d84:	add	r1, sl, #1
   37d88:	sub	r0, r8, r1
   37d8c:	cmp	r0, #2
   37d90:	blt	37dc0 <flatcc_json_parser_union_type_vector@@Base+0x4d0>
   37d94:	ldrb	r0, [r1]
   37d98:	cmp	r0, #32
   37d9c:	bls	37db0 <flatcc_json_parser_union_type_vector@@Base+0x4c0>
   37da0:	mov	sl, r1
   37da4:	cmp	sl, r8
   37da8:	bne	37dd8 <flatcc_json_parser_union_type_vector@@Base+0x4e8>
   37dac:	b	37e38 <flatcc_json_parser_union_type_vector@@Base+0x548>
   37db0:	bne	37dc0 <flatcc_json_parser_union_type_vector@@Base+0x4d0>
   37db4:	ldrb	r0, [sl, #2]!
   37db8:	cmp	r0, #32
   37dbc:	bhi	37dd0 <flatcc_json_parser_union_type_vector@@Base+0x4e0>
   37dc0:	mov	r0, r5
   37dc4:	mov	r2, r8
   37dc8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   37dcc:	mov	sl, r0
   37dd0:	cmp	sl, r8
   37dd4:	beq	37e38 <flatcc_json_parser_union_type_vector@@Base+0x548>
   37dd8:	ldrb	r0, [sl]
   37ddc:	cmp	r0, #93	; 0x5d
   37de0:	beq	37e14 <flatcc_json_parser_union_type_vector@@Base+0x524>
   37de4:	ldr	r0, [r5]
   37de8:	mov	r1, #1
   37dec:	bl	2e270 <flatcc_builder_extend_vector@@Base>
   37df0:	mov	r1, r0
   37df4:	cmp	r0, #0
   37df8:	bne	37aac <flatcc_json_parser_union_type_vector@@Base+0x1bc>
   37dfc:	b	37978 <flatcc_json_parser_union_type_vector@@Base+0x88>
   37e00:	ldr	r4, [sp, #16]
   37e04:	mov	r0, r8
   37e08:	b	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37e0c:	cmp	r0, #93	; 0x5d
   37e10:	bne	37e58 <flatcc_json_parser_union_type_vector@@Base+0x568>
   37e14:	add	r1, sl, #1
   37e18:	sub	r0, r8, r1
   37e1c:	cmp	r0, #2
   37e20:	blt	37eb0 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   37e24:	ldrb	r0, [r1]
   37e28:	cmp	r0, #32
   37e2c:	bls	37e9c <flatcc_json_parser_union_type_vector@@Base+0x5ac>
   37e30:	mov	r0, r1
   37e34:	b	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37e38:	ldr	r0, [r5, #20]
   37e3c:	cmp	r0, #0
   37e40:	mov	r0, r8
   37e44:	bne	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37e48:	str	r8, [r5, #32]
   37e4c:	ldr	r2, [sp, #12]
   37e50:	mov	r0, #9
   37e54:	b	37a00 <flatcc_json_parser_union_type_vector@@Base+0x110>
   37e58:	ldr	r0, [r5, #20]
   37e5c:	cmp	r0, #0
   37e60:	mov	r0, r8
   37e64:	bne	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37e68:	str	sl, [r5, #32]
   37e6c:	mov	r0, #9
   37e70:	add	r2, sl, #1
   37e74:	b	37a00 <flatcc_json_parser_union_type_vector@@Base+0x110>
   37e78:	mov	sl, r4
   37e7c:	b	37978 <flatcc_json_parser_union_type_vector@@Base+0x88>
   37e80:	ldr	r0, [r5, #20]
   37e84:	cmp	r0, #0
   37e88:	bne	379a0 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   37e8c:	str	r4, [r5, #32]
   37e90:	mov	r0, #15
   37e94:	add	r2, r4, #1
   37e98:	b	37990 <flatcc_json_parser_union_type_vector@@Base+0xa0>
   37e9c:	bne	37eb0 <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   37ea0:	ldrb	r0, [sl, #2]!
   37ea4:	cmp	r0, #32
   37ea8:	mov	r0, sl
   37eac:	bhi	37ebc <flatcc_json_parser_union_type_vector@@Base+0x5cc>
   37eb0:	mov	r0, r5
   37eb4:	mov	r2, r8
   37eb8:	bl	33fa8 <flatcc_json_parser_space_ext@@Base>
   37ebc:	mov	sl, r0
   37ec0:	ldr	r0, [r5]
   37ec4:	bl	301b0 <flatcc_builder_vector_count@@Base>
   37ec8:	str	r0, [r4, #16]
   37ecc:	mov	r7, r0
   37ed0:	ldr	r0, [r5]
   37ed4:	mov	r1, r7
   37ed8:	bl	2d534 <flatcc_builder_enter_user_frame@@Base>
   37edc:	mov	r9, r0
   37ee0:	ldr	r0, [r5]
   37ee4:	mov	r1, r9
   37ee8:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   37eec:	mov	r4, r0
   37ef0:	ldr	r0, [r5]
   37ef4:	bl	301bc <flatcc_builder_vector_edit@@Base>
   37ef8:	mov	r1, r0
   37efc:	mov	r0, r4
   37f00:	mov	r2, r7
   37f04:	bl	14e58 <memcpy@plt>
   37f08:	ldr	r0, [r5]
   37f0c:	bl	300b4 <flatcc_builder_end_vector@@Base>
   37f10:	cmp	r0, #0
   37f14:	beq	37978 <flatcc_json_parser_union_type_vector@@Base+0x88>
   37f18:	ldr	r1, [fp, #8]
   37f1c:	mov	r4, r0
   37f20:	ldr	r0, [r5]
   37f24:	sub	r1, r1, #1
   37f28:	bl	30630 <flatcc_builder_table_add_offset@@Base>
   37f2c:	cmp	r0, #0
   37f30:	beq	37978 <flatcc_json_parser_union_type_vector@@Base+0x88>
   37f34:	str	r4, [r0]
   37f38:	ldr	r1, [fp, #12]
   37f3c:	ldr	r0, [r5]
   37f40:	bl	2d6f4 <flatcc_builder_get_user_frame_ptr@@Base>
   37f44:	add	r2, r0, #8
   37f48:	mov	r3, r2
   37f4c:	ldr	r1, [r3, r6, lsl #3]!
   37f50:	str	r9, [r3, #20]
   37f54:	cmp	r1, #0
   37f58:	ldr	r3, [r0, #4]
   37f5c:	beq	37fc0 <flatcc_json_parser_union_type_vector@@Base+0x6d0>
   37f60:	cmp	r3, #0
   37f64:	beq	37fd0 <flatcc_json_parser_union_type_vector@@Base+0x6e0>
   37f68:	sub	r3, r3, #1
   37f6c:	ldr	ip, [fp, #20]
   37f70:	str	r3, [r0, #4]
   37f74:	add	r0, r2, r6, lsl #3
   37f78:	mov	r3, r9
   37f7c:	ldr	r2, [r0, #8]
   37f80:	ldr	r6, [r5, #4]
   37f84:	ldr	r4, [r5, #12]
   37f88:	str	r2, [r5, #12]
   37f8c:	mov	r2, r8
   37f90:	ldr	r0, [r0, #4]
   37f94:	str	r0, [r5, #4]
   37f98:	ldr	r0, [fp, #8]
   37f9c:	str	r7, [sp]
   37fa0:	stmib	sp, {r0, ip}
   37fa4:	mov	r0, r5
   37fa8:	bl	374f0 <flatcc_json_parser_union_vector@@Base+0xf4>
   37fac:	cmp	r0, r8
   37fb0:	beq	379a0 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   37fb4:	str	r6, [r5, #4]
   37fb8:	str	r4, [r5, #12]
   37fbc:	b	37fc8 <flatcc_json_parser_union_type_vector@@Base+0x6d8>
   37fc0:	add	r1, r3, #1
   37fc4:	str	r1, [r0, #4]
   37fc8:	mov	r8, sl
   37fcc:	b	379a0 <flatcc_json_parser_union_type_vector@@Base+0xb0>
   37fd0:	ldr	r0, [pc, #24]	; 37ff0 <flatcc_json_parser_union_type_vector@@Base+0x700>
   37fd4:	ldr	r1, [pc, #24]	; 37ff4 <flatcc_json_parser_union_type_vector@@Base+0x704>
   37fd8:	ldr	r3, [pc, #24]	; 37ff8 <flatcc_json_parser_union_type_vector@@Base+0x708>
   37fdc:	movw	r2, #1122	; 0x462
   37fe0:	add	r0, pc, r0
   37fe4:	add	r1, pc, r1
   37fe8:	add	r3, pc, r3
   37fec:	bl	14f3c <__assert_fail@plt>
   37ff0:			; <UNDEFINED> instruction: 0x000129b7
   37ff4:	andeq	r2, r1, r2, asr #19
   37ff8:	andeq	r2, r1, fp, ror #21

00037ffc <flatcc_json_parser_table_as_root@@Base>:
   37ffc:	push	{r4, r5, r6, r7, fp, lr}
   38000:	add	fp, sp, #16
   38004:	sub	sp, sp, #48	; 0x30
   38008:	add	r5, sp, #8
   3800c:	cmp	r1, #0
   38010:	mov	r6, r0
   38014:	vmov.i32	q8, #0	; 0x00000000
   38018:	add	r7, r2, r3
   3801c:	mov	r4, r2
   38020:	movne	r5, r1
   38024:	mov	r1, #2
   38028:	add	r0, r5, #16
   3802c:	vst1.32	{d16-d17}, [r0]
   38030:	mov	r0, #0
   38034:	str	r0, [r5, #36]	; 0x24
   38038:	mov	r0, #1
   3803c:	str	r2, [r5, #32]
   38040:	str	r6, [r5]
   38044:	str	r2, [r5, #4]
   38048:	str	r0, [r5, #12]
   3804c:	ldr	r0, [fp, #8]
   38050:	and	r3, r1, r0, lsr #1
   38054:	ldr	r1, [fp, #12]
   38058:	str	r0, [r5, #8]
   3805c:	str	r2, [r5, #24]
   38060:	mov	r0, r6
   38064:	mov	r2, #0
   38068:	str	r7, [r5, #28]
   3806c:	bl	2dd68 <flatcc_builder_start_buffer@@Base>
   38070:	mov	r1, r0
   38074:	mvn	r0, #0
   38078:	cmp	r1, #0
   3807c:	bne	380a4 <flatcc_json_parser_table_as_root@@Base+0xa8>
   38080:	ldr	ip, [fp, #16]
   38084:	add	r3, sp, #4
   38088:	mov	r0, r5
   3808c:	mov	r1, r4
   38090:	mov	r2, r7
   38094:	blx	ip
   38098:	ldr	r0, [r5, #20]
   3809c:	cmp	r0, #0
   380a0:	beq	380ac <flatcc_json_parser_table_as_root@@Base+0xb0>
   380a4:	sub	sp, fp, #16
   380a8:	pop	{r4, r5, r6, r7, fp, pc}
   380ac:	ldr	r1, [sp, #4]
   380b0:	mov	r0, r6
   380b4:	bl	2df68 <flatcc_builder_end_buffer@@Base>
   380b8:	cmp	r0, #0
   380bc:	mvn	r0, #0
   380c0:	movne	r0, #0
   380c4:	strne	r4, [r5, #36]	; 0x24
   380c8:	sub	sp, fp, #16
   380cc:	pop	{r4, r5, r6, r7, fp, pc}

000380d0 <flatcc_json_parser_struct_as_root@@Base>:
   380d0:	push	{r4, r5, r6, r7, fp, lr}
   380d4:	add	fp, sp, #16
   380d8:	sub	sp, sp, #48	; 0x30
   380dc:	add	r5, sp, #8
   380e0:	cmp	r1, #0
   380e4:	mov	r6, r0
   380e8:	vmov.i32	q8, #0	; 0x00000000
   380ec:	add	r7, r2, r3
   380f0:	mov	r4, r2
   380f4:	movne	r5, r1
   380f8:	mov	r1, #2
   380fc:	add	r0, r5, #16
   38100:	vst1.32	{d16-d17}, [r0]
   38104:	mov	r0, #0
   38108:	str	r0, [r5, #36]	; 0x24
   3810c:	mov	r0, #1
   38110:	str	r2, [r5, #32]
   38114:	str	r6, [r5]
   38118:	str	r2, [r5, #4]
   3811c:	str	r0, [r5, #12]
   38120:	ldr	r0, [fp, #8]
   38124:	and	r3, r1, r0, lsr #1
   38128:	ldr	r1, [fp, #12]
   3812c:	str	r0, [r5, #8]
   38130:	str	r2, [r5, #24]
   38134:	mov	r0, r6
   38138:	mov	r2, #0
   3813c:	str	r7, [r5, #28]
   38140:	bl	2dd68 <flatcc_builder_start_buffer@@Base>
   38144:	mov	r1, r0
   38148:	mvn	r0, #0
   3814c:	cmp	r1, #0
   38150:	bne	38178 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   38154:	ldr	ip, [fp, #16]
   38158:	add	r3, sp, #4
   3815c:	mov	r0, r5
   38160:	mov	r1, r4
   38164:	mov	r2, r7
   38168:	blx	ip
   3816c:	ldr	r0, [r5, #20]
   38170:	cmp	r0, #0
   38174:	beq	38180 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   38178:	sub	sp, fp, #16
   3817c:	pop	{r4, r5, r6, r7, fp, pc}
   38180:	ldr	r1, [sp, #4]
   38184:	mov	r0, r6
   38188:	bl	2df68 <flatcc_builder_end_buffer@@Base>
   3818c:	cmp	r0, #0
   38190:	mvn	r0, #0
   38194:	movne	r0, #0
   38198:	strne	r4, [r5, #36]	; 0x24
   3819c:	sub	sp, fp, #16
   381a0:	pop	{r4, r5, r6, r7, fp, pc}
   381a4:	andeq	r0, r0, r0

000381a8 <flatcc_json_printer_error_string@@Base>:
   381a8:	cmp	r0, #3
   381ac:	ldrhi	r0, [pc, #24]	; 381cc <flatcc_json_printer_error_string@@Base+0x24>
   381b0:	addhi	r0, pc, r0
   381b4:	bxhi	lr
   381b8:	ldr	r1, [pc, #8]	; 381c8 <flatcc_json_printer_error_string@@Base+0x20>
   381bc:	add	r1, pc, r1
   381c0:	ldr	r0, [r1, r0, lsl #2]
   381c4:	bx	lr
   381c8:	andeq	r3, r2, r8, lsr sp
   381cc:	ldrdeq	r1, [r1], -r9

000381d0 <flatcc_json_printer_fmt_float@@Base>:
   381d0:	vcvt.f64.f32	d0, s0
   381d4:	b	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   381d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   381dc:	add	fp, sp, #28
   381e0:	sub	sp, sp, #84	; 0x54
   381e4:	cmp	r0, #0
   381e8:	beq	38f90 <flatcc_json_printer_fmt_float@@Base+0xdc0>
   381ec:	mov	ip, r0
   381f0:	vmov	r3, r2, d0
   381f4:	mov	r0, #-2147483648	; 0x80000000
   381f8:	mov	r6, #0
   381fc:	add	r1, r0, #266338304	; 0xfe00000
   38200:	lsl	r7, r2, #1
   38204:	subs	r6, r6, r3, lsl #1
   38208:	add	r1, r1, #1879048192	; 0x70000000
   3820c:	orr	r7, r7, r3, lsr #31
   38210:	sbcs	r1, r1, r7
   38214:	bcs	38230 <flatcc_json_printer_fmt_float@@Base+0x60>
   38218:	ldr	r1, [pc, #3592]	; 39028 <flatcc_json_printer_fmt_float@@Base+0xe58>
   3821c:	mov	r0, ip
   38220:	add	r1, pc, r1
   38224:	sub	sp, fp, #28
   38228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3822c:	b	14f24 <sprintf@plt>
   38230:	cmn	r2, #1
   38234:	ble	38240 <flatcc_json_printer_fmt_float@@Base+0x70>
   38238:	mov	r5, ip
   3823c:	b	38254 <flatcc_json_printer_fmt_float@@Base+0x84>
   38240:	mov	r1, #45	; 0x2d
   38244:	mov	r5, ip
   38248:	vneg.f64	d0, d0
   3824c:	eor	r2, r2, r0
   38250:	strb	r1, [r5], #1
   38254:	movw	r0, #0
   38258:	movt	r0, #32752	; 0x7ff0
   3825c:	eor	r1, r2, r0
   38260:	orrs	r1, r3, r1
   38264:	beq	3827c <flatcc_json_printer_fmt_float@@Base+0xac>
   38268:	orrs	r1, r3, r2
   3826c:	bne	38294 <flatcc_json_printer_fmt_float@@Base+0xc4>
   38270:	mov	r0, #48	; 0x30
   38274:	strh	r0, [r5], #1
   38278:	b	38288 <flatcc_json_printer_fmt_float@@Base+0xb8>
   3827c:	movw	r0, #28265	; 0x6e69
   38280:	movt	r0, #102	; 0x66
   38284:	str	r0, [r5], #3
   38288:	sub	r0, r5, ip
   3828c:	sub	sp, fp, #28
   38290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38294:	vmov	sl, r9, d0
   38298:	ands	r1, r9, r0
   3829c:	bfc	r9, #20, #12
   382a0:	str	r1, [fp, #-40]	; 0xffffffd8
   382a4:	beq	382c0 <flatcc_json_printer_fmt_float@@Base+0xf0>
   382a8:	movw	r0, #64461	; 0xfbcd
   382ac:	orr	r6, r9, #1048576	; 0x100000
   382b0:	movt	r0, #65535	; 0xffff
   382b4:	add	r4, r0, r1, lsr #20
   382b8:	mov	r0, #0
   382bc:	b	382d8 <flatcc_json_printer_fmt_float@@Base+0x108>
   382c0:	orrs	r0, sl, r9
   382c4:	beq	38ff0 <flatcc_json_printer_fmt_float@@Base+0xe20>
   382c8:	movw	r4, #64462	; 0xfbce
   382cc:	mov	r0, #0
   382d0:	mov	r6, r9
   382d4:	movt	r4, #65535	; 0xffff
   382d8:	mov	r7, r4
   382dc:	mov	r3, sl
   382e0:	mov	r2, r6
   382e4:	lsl	r1, r2, #10
   382e8:	sub	r7, r7, #10
   382ec:	orr	r2, r1, r3, lsr #22
   382f0:	lsl	r3, r3, #10
   382f4:	cmp	r2, #4194304	; 0x400000
   382f8:	bcc	382e4 <flatcc_json_printer_fmt_float@@Base+0x114>
   382fc:	cmp	r2, #0
   38300:	str	r5, [fp, #-36]	; 0xffffffdc
   38304:	blt	38330 <flatcc_json_printer_fmt_float@@Base+0x160>
   38308:	mvn	r5, #0
   3830c:	lsl	r1, r2, #1
   38310:	sub	r7, r7, #1
   38314:	orr	r2, r1, r3, lsr #31
   38318:	lsl	r1, r3, #1
   3831c:	subs	r3, r5, r3, lsl #1
   38320:	sbcs	r3, r5, r2
   38324:	mov	r3, r1
   38328:	blt	3830c <flatcc_json_printer_fmt_float@@Base+0x13c>
   3832c:	b	38338 <flatcc_json_printer_fmt_float@@Base+0x168>
   38330:	mov	r1, r3
   38334:	mvn	r5, #0
   38338:	mov	r0, #1
   3833c:	sub	r8, r4, #1
   38340:	str	r6, [fp, #-44]	; 0xffffffd4
   38344:	str	r4, [fp, #-32]	; 0xffffffe0
   38348:	orr	r3, r0, sl, lsl #1
   3834c:	lsl	r0, r6, #1
   38350:	orr	lr, r0, sl, lsr #31
   38354:	mov	r0, #0
   38358:	cmp	r0, lr, lsr #22
   3835c:	bne	3838c <flatcc_json_printer_fmt_float@@Base+0x1bc>
   38360:	mov	r0, #0
   38364:	mov	r6, lr
   38368:	mov	r4, r8
   3836c:	str	r0, [fp, #-48]	; 0xffffffd0
   38370:	lsl	r0, r6, #10
   38374:	sub	r4, r4, #10
   38378:	orr	r6, r0, r3, lsr #22
   3837c:	lsl	r3, r3, #10
   38380:	cmp	r6, #4194304	; 0x400000
   38384:	bcc	38370 <flatcc_json_printer_fmt_float@@Base+0x1a0>
   38388:	b	3839c <flatcc_json_printer_fmt_float@@Base+0x1cc>
   3838c:	mov	r0, #0
   38390:	mov	r4, r8
   38394:	mov	r6, lr
   38398:	str	r0, [fp, #-48]	; 0xffffffd0
   3839c:	subs	r0, r5, r3
   383a0:	str	ip, [sp, #24]
   383a4:	sbcs	r0, r5, r6
   383a8:	bge	383d0 <flatcc_json_printer_fmt_float@@Base+0x200>
   383ac:	lsl	r0, r6, #1
   383b0:	lsl	ip, r3, #1
   383b4:	sub	r4, r4, #1
   383b8:	orr	r6, r0, r3, lsr #31
   383bc:	subs	r0, r5, r3, lsl #1
   383c0:	mov	r3, ip
   383c4:	sbcs	r0, r5, r6
   383c8:	blt	383ac <flatcc_json_printer_fmt_float@@Base+0x1dc>
   383cc:	b	383d4 <flatcc_json_printer_fmt_float@@Base+0x204>
   383d0:	mov	ip, r3
   383d4:	vcmpe.f64	d0, #0.0
   383d8:	vmrs	APSR_nzcv, fpscr
   383dc:	ble	38fd0 <flatcc_json_printer_fmt_float@@Base+0xe00>
   383e0:	vldr	d16, [pc, #672]	; 38688 <flatcc_json_printer_fmt_float@@Base+0x4b8>
   383e4:	vcmpe.f64	d0, d16
   383e8:	vmrs	APSR_nzcv, fpscr
   383ec:	bhi	38fd0 <flatcc_json_printer_fmt_float@@Base+0xe00>
   383f0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   383f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   383f8:	orrs	r3, sl, r9
   383fc:	vldr	d16, [pc, #652]	; 38690 <flatcc_json_printer_fmt_float@@Base+0x4c0>
   38400:	movwne	r3, #1
   38404:	clz	r5, r5
   38408:	lsl	r0, r0, #2
   3840c:	lsr	r5, r5, #5
   38410:	orrs	r3, r3, r5
   38414:	mvn	r5, #60	; 0x3c
   38418:	sub	r5, r5, r7
   3841c:	orreq	lr, r0, sl, lsr #30
   38420:	lsl	r0, sl, #2
   38424:	lslne	r0, sl, #1
   38428:	vmov	s2, r5
   3842c:	subs	r9, r0, #1
   38430:	vcvt.f64.s32	d17, s2
   38434:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38438:	sbc	lr, lr, #0
   3843c:	cmp	r3, #0
   38440:	vmul.f64	d16, d17, d16
   38444:	vcvt.s32.f64	s2, d16
   38448:	vcmpe.f64	d16, #0.0
   3844c:	subeq	r8, r0, #2
   38450:	sub	r3, r8, r4
   38454:	rsb	r0, r3, #32
   38458:	lsl	sl, r9, r3
   3845c:	lsr	r0, r9, r0
   38460:	orr	r5, r0, lr, lsl r3
   38464:	sub	r0, r3, #32
   38468:	cmp	r0, #0
   3846c:	lslge	r5, r9, r0
   38470:	movwge	sl, #0
   38474:	vmrs	APSR_nzcv, fpscr
   38478:	str	r5, [fp, #-32]	; 0xffffffe0
   3847c:	vmov	r5, s2
   38480:	bmi	38498 <flatcc_json_printer_fmt_float@@Base+0x2c8>
   38484:	vcvt.f64.s32	d17, s2
   38488:	vsub.f64	d16, d16, d17
   3848c:	vcmp.f64	d16, #0.0
   38490:	vmrs	APSR_nzcv, fpscr
   38494:	addne	r5, r5, #1
   38498:	movw	r0, #347	; 0x15b
   3849c:	bic	r1, r1, #1
   384a0:	add	r0, r5, r0
   384a4:	asr	r5, r0, #31
   384a8:	add	r0, r0, r5, lsr #29
   384ac:	mvn	r5, #15
   384b0:	and	r0, r5, r0, lsl #1
   384b4:	ldr	r5, [pc, #2900]	; 39010 <flatcc_json_printer_fmt_float@@Base+0xe40>
   384b8:	add	r5, pc, r5
   384bc:	add	r0, r5, r0
   384c0:	ldrd	r8, [r0, #16]
   384c4:	str	r0, [sp, #28]
   384c8:	umull	r0, r5, r9, ip
   384cc:	str	r0, [fp, #-40]	; 0xffffffd8
   384d0:	umull	r0, lr, r8, r6
   384d4:	umaal	lr, r5, r9, r6
   384d8:	umull	r6, r3, r8, ip
   384dc:	ldr	r6, [fp, #-40]	; 0xffffffd8
   384e0:	adds	r0, r0, r3
   384e4:	mov	r3, #0
   384e8:	adc	r3, r3, #0
   384ec:	adds	r0, r0, r6
   384f0:	adc	r3, r3, #0
   384f4:	adds	r0, r0, #-2147483648	; 0x80000000
   384f8:	adc	r0, r3, #0
   384fc:	adds	r0, lr, r0
   38500:	adc	r3, r5, #0
   38504:	adds	r0, r0, #1
   38508:	str	r0, [sp, #36]	; 0x24
   3850c:	adc	ip, r3, #0
   38510:	umull	r0, r3, r9, sl
   38514:	str	r0, [fp, #-40]	; 0xffffffd8
   38518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3851c:	umull	lr, r5, r8, r0
   38520:	umaal	r5, r3, r9, r0
   38524:	umull	r0, r6, r8, sl
   38528:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3852c:	adds	sl, lr, r6
   38530:	mov	r6, #0
   38534:	mov	lr, ip
   38538:	adc	r6, r6, #0
   3853c:	adds	r0, sl, r0
   38540:	adc	r6, r6, #0
   38544:	adds	r0, r0, #-2147483648	; 0x80000000
   38548:	adc	r0, r6, #0
   3854c:	adds	r0, r5, r0
   38550:	adc	r3, r3, #0
   38554:	subs	ip, r0, #1
   38558:	umull	r0, r6, r8, r2
   3855c:	sbc	sl, r3, #0
   38560:	umull	r3, r5, r9, r1
   38564:	umaal	r6, r5, r9, r2
   38568:	umull	r1, r2, r8, r1
   3856c:	ldr	r8, [sp, #36]	; 0x24
   38570:	mov	r1, #0
   38574:	adds	r0, r0, r2
   38578:	bic	r2, r3, #1
   3857c:	str	r1, [sp, #40]	; 0x28
   38580:	mov	r1, #0
   38584:	adc	r1, r1, #0
   38588:	adds	r0, r0, r2
   3858c:	adc	r1, r1, #0
   38590:	adds	r0, r0, #-2147483648	; 0x80000000
   38594:	adc	r0, r1, #0
   38598:	adds	r0, r6, r0
   3859c:	str	r0, [sp, #12]
   385a0:	adc	r0, r5, #0
   385a4:	str	r0, [sp, #16]
   385a8:	subs	r0, r8, ip
   385ac:	str	r0, [sp, #48]	; 0x30
   385b0:	sbcs	r0, lr, sl
   385b4:	str	r0, [fp, #-44]	; 0xffffffd4
   385b8:	bcc	38fb0 <flatcc_json_printer_fmt_float@@Base+0xde0>
   385bc:	ldr	r0, [sp, #28]
   385c0:	ldrsh	r0, [r0, #24]
   385c4:	add	r0, r0, #64	; 0x40
   385c8:	add	r6, r0, r7
   385cc:	add	r1, r0, r4
   385d0:	movw	r7, #1233	; 0x4d1
   385d4:	str	r1, [sp, #8]
   385d8:	str	r6, [sp, #4]
   385dc:	mvn	r1, #31
   385e0:	rsb	r3, r6, #0
   385e4:	add	r2, r6, #32
   385e8:	ldr	sl, [pc, #2596]	; 39014 <flatcc_json_printer_fmt_float@@Base+0xe44>
   385ec:	sub	r4, r1, r6
   385f0:	movw	r1, #14609	; 0x3911
   385f4:	lsr	r0, r8, r3
   385f8:	movt	r1, #1
   385fc:	orr	r0, r0, lr, lsl r2
   38600:	cmp	r4, #0
   38604:	mla	r5, r6, r7, r1
   38608:	mov	r1, #1
   3860c:	lsrge	r0, lr, r4
   38610:	add	r7, r1, r5, asr #12
   38614:	lsr	r2, r1, r2
   38618:	add	sl, pc, sl
   3861c:	ldr	r6, [sl, r7, lsl #2]
   38620:	cmp	r6, r0
   38624:	asrhi	r7, r5, #12
   38628:	cmp	r4, #0
   3862c:	lslge	r2, r1, r4
   38630:	str	r2, [sp, #44]	; 0x2c
   38634:	str	r3, [fp, #-40]	; 0xffffffd8
   38638:	lsl	r3, r1, r3
   3863c:	movwge	r3, #0
   38640:	subs	r1, r3, #1
   38644:	str	r3, [sp, #32]
   38648:	str	lr, [sp, #20]
   3864c:	sbc	r2, r2, #0
   38650:	and	r3, r8, r1
   38654:	cmp	r7, #0
   38658:	str	r1, [fp, #-48]	; 0xffffffd0
   3865c:	and	r9, lr, r2
   38660:	str	r2, [fp, #-52]	; 0xffffffcc
   38664:	ble	3871c <flatcc_json_printer_fmt_float@@Base+0x54c>
   38668:	ldr	r1, [sl, r7, lsl #2]
   3866c:	movw	ip, #52429	; 0xcccd
   38670:	sub	r7, r7, #1
   38674:	mov	r4, #0
   38678:	mov	r8, r9
   3867c:	movt	ip, #52428	; 0xcccc
   38680:	str	r7, [fp, #-32]	; 0xffffffe0
   38684:	b	386b0 <flatcc_json_printer_fmt_float@@Base+0x4e0>
   38688:			; <UNDEFINED> instruction: 0xffffffff
   3868c:	svcvc	0x00efffff
   38690:			; <UNDEFINED> instruction: 0x509f79fe
   38694:	svccc	0x00d34413
   38698:	umull	r1, r2, r1, ip
   3869c:	mov	r4, lr
   386a0:	sub	r7, r7, #1
   386a4:	add	r4, lr, #1
   386a8:	lsr	r1, r2, #3
   386ac:	str	r7, [fp, #-32]	; 0xffffffe0
   386b0:	udiv	r2, r0, r1
   386b4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   386b8:	mov	lr, r4
   386bc:	ldr	r7, [sp, #48]	; 0x30
   386c0:	add	r6, r2, #48	; 0x30
   386c4:	mls	r0, r2, r1, r0
   386c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   386cc:	strb	r6, [r5, r4]
   386d0:	sub	r4, r2, #32
   386d4:	rsb	sl, r2, #32
   386d8:	lsl	r2, r0, r2
   386dc:	cmp	r4, #0
   386e0:	lsr	r5, r0, sl
   386e4:	movwge	r2, #0
   386e8:	lslge	r5, r0, r4
   386ec:	adds	r2, r2, r3
   386f0:	adc	r5, r5, r8
   386f4:	subs	r7, r2, r7
   386f8:	ldr	r7, [fp, #-44]	; 0xffffffd4
   386fc:	sbcs	r7, r5, r7
   38700:	bcc	3892c <flatcc_json_printer_fmt_float@@Base+0x75c>
   38704:	ldr	r7, [fp, #-32]	; 0xffffffe0
   38708:	add	r2, r7, #1
   3870c:	cmp	r2, #2
   38710:	bge	38698 <flatcc_json_printer_fmt_float@@Base+0x4c8>
   38714:	add	r0, lr, #1
   38718:	str	r0, [sp, #40]	; 0x28
   3871c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38720:	mov	r4, r9
   38724:	mov	r1, #0
   38728:	mov	r9, #1
   3872c:	rsb	r2, r0, #32
   38730:	str	r2, [sp, #56]	; 0x38
   38734:	sub	r2, r0, #32
   38738:	str	r2, [sp, #52]	; 0x34
   3873c:	ldr	lr, [sp, #40]	; 0x28
   38740:	ldr	sl, [fp, #-44]	; 0xffffffd4
   38744:	ldr	r6, [sp, #48]	; 0x30
   38748:	mov	ip, r1
   3874c:	mov	r1, #10
   38750:	str	r7, [fp, #-32]	; 0xffffffe0
   38754:	mov	r2, r9
   38758:	umull	r7, r1, r3, r1
   3875c:	add	r3, r4, r4, lsl #2
   38760:	add	r8, ip, ip, lsl #2
   38764:	lsr	r5, r7, r0
   38768:	ldr	r0, [sp, #56]	; 0x38
   3876c:	add	r3, r1, r3, lsl #1
   38770:	orr	r1, r5, r3, lsl r0
   38774:	ldr	r0, [sp, #52]	; 0x34
   38778:	cmp	r0, #0
   3877c:	lsrge	r1, r3, r0
   38780:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38784:	add	r5, r1, #48	; 0x30
   38788:	strb	r5, [r0, lr]
   3878c:	mov	r0, #10
   38790:	add	lr, lr, #1
   38794:	umull	r9, r1, r9, r0
   38798:	umull	r6, r4, r6, r0
   3879c:	add	r0, sl, sl, lsl #2
   387a0:	add	sl, r4, r0, lsl #1
   387a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   387a8:	add	r1, r1, r8, lsl #1
   387ac:	and	r4, r3, r0
   387b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   387b4:	and	r3, r7, r0
   387b8:	ldr	r7, [fp, #-32]	; 0xffffffe0
   387bc:	subs	r0, r3, r6
   387c0:	sbcs	r0, r4, sl
   387c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   387c8:	sub	r7, r7, #1
   387cc:	bcs	38748 <flatcc_json_printer_fmt_float@@Base+0x578>
   387d0:	str	r4, [sp]
   387d4:	str	r8, [sp, #52]	; 0x34
   387d8:	str	r2, [sp, #56]	; 0x38
   387dc:	str	ip, [fp, #-52]	; 0xffffffcc
   387e0:	str	lr, [sp, #40]	; 0x28
   387e4:	ldr	r0, [sp, #8]
   387e8:	ldr	r2, [sp, #4]
   387ec:	ldr	ip, [sp, #20]
   387f0:	ldr	lr, [sp, #36]	; 0x24
   387f4:	ldr	r4, [sp, #12]
   387f8:	cmp	r0, r2
   387fc:	ldr	r2, [sp, #16]
   38800:	bne	38fb0 <flatcc_json_printer_fmt_float@@Base+0xde0>
   38804:	subs	r0, lr, r4
   38808:	sbcs	r0, ip, r2
   3880c:	bcc	38fb0 <flatcc_json_printer_fmt_float@@Base+0xde0>
   38810:	subs	r0, lr, r4
   38814:	sbc	r2, ip, r2
   38818:	umull	ip, r4, r9, r0
   3881c:	mla	r2, r9, r2, r4
   38820:	mla	r0, r1, r0, r2
   38824:	adds	r2, ip, r9
   38828:	str	r2, [sp, #36]	; 0x24
   3882c:	adc	r2, r0, r1
   38830:	subs	lr, ip, r9
   38834:	mov	ip, #0
   38838:	str	r2, [sp, #20]
   3883c:	sbc	r9, r0, r1
   38840:	subs	r0, r6, r3
   38844:	ldr	r4, [sp]
   38848:	str	sl, [fp, #-44]	; 0xffffffd4
   3884c:	ldr	r2, [sp, #32]
   38850:	sbc	r1, sl, r4
   38854:	subs	r0, r0, r2
   38858:	ldr	r0, [sp, #44]	; 0x2c
   3885c:	str	r7, [fp, #-32]	; 0xffffffe0
   38860:	str	r6, [sp, #48]	; 0x30
   38864:	sbcs	r0, r1, r0
   38868:	movwcc	ip, #1
   3886c:	cmp	ip, #0
   38870:	bne	38924 <flatcc_json_printer_fmt_float@@Base+0x754>
   38874:	subs	r0, r3, lr
   38878:	str	lr, [fp, #-40]	; 0xffffffd8
   3887c:	sbcs	r0, r4, r9
   38880:	bcs	38924 <flatcc_json_printer_fmt_float@@Base+0x754>
   38884:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38888:	ldr	r1, [sp, #40]	; 0x28
   3888c:	add	r0, r0, r1
   38890:	str	r0, [fp, #-48]	; 0xffffffd0
   38894:	ldr	r6, [sp, #44]	; 0x2c
   38898:	ldr	lr, [sp, #32]
   3889c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   388a0:	adds	r8, r3, lr
   388a4:	adc	sl, r4, r6
   388a8:	subs	r0, r8, r2
   388ac:	sbcs	r0, sl, r9
   388b0:	bcc	388d4 <flatcc_json_printer_fmt_float@@Base+0x704>
   388b4:	subs	r0, r8, r2
   388b8:	sbc	r1, sl, r9
   388bc:	subs	r7, r2, r3
   388c0:	sbc	r6, r9, r4
   388c4:	subs	r0, r7, r0
   388c8:	sbcs	r0, r6, r1
   388cc:	ldr	r6, [sp, #44]	; 0x2c
   388d0:	bcc	38a80 <flatcc_json_printer_fmt_float@@Base+0x8b0>
   388d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   388d8:	sub	r5, r5, #1
   388dc:	mov	ip, #0
   388e0:	strb	r5, [r0, #-1]
   388e4:	ldr	r0, [sp, #48]	; 0x30
   388e8:	subs	r1, r0, r8
   388ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   388f0:	sbc	r7, r0, sl
   388f4:	subs	r0, r1, lr
   388f8:	sbcs	r0, r7, r6
   388fc:	movwcc	ip, #1
   38900:	subs	r0, r8, r2
   38904:	sbcs	r0, sl, r9
   38908:	bcs	38a8c <flatcc_json_printer_fmt_float@@Base+0x8bc>
   3890c:	subs	r0, r1, lr
   38910:	mov	r3, r8
   38914:	mov	r4, sl
   38918:	sbcs	r0, r7, r6
   3891c:	bcs	388a0 <flatcc_json_printer_fmt_float@@Base+0x6d0>
   38920:	b	38a8c <flatcc_json_printer_fmt_float@@Base+0x8bc>
   38924:	ldr	r6, [sp, #44]	; 0x2c
   38928:	b	38a84 <flatcc_json_printer_fmt_float@@Base+0x8b4>
   3892c:	ldr	r9, [sp, #36]	; 0x24
   38930:	ldr	r0, [sp, #12]
   38934:	subs	r3, r9, r0
   38938:	str	r3, [sp, #52]	; 0x34
   3893c:	ldr	r8, [sp, #20]
   38940:	ldr	r7, [sp, #16]
   38944:	sbc	r3, r8, r7
   38948:	str	r3, [sp, #56]	; 0x38
   3894c:	ldr	r3, [sp, #8]
   38950:	ldr	ip, [sp, #4]
   38954:	cmp	r3, ip
   38958:	bne	38fb0 <flatcc_json_printer_fmt_float@@Base+0xde0>
   3895c:	subs	r0, r9, r0
   38960:	sbcs	r0, r8, r7
   38964:	bcc	38fb0 <flatcc_json_printer_fmt_float@@Base+0xde0>
   38968:	ldr	r0, [sp, #48]	; 0x30
   3896c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38970:	lsr	r8, r1, sl
   38974:	subs	r0, r0, r2
   38978:	sbc	r3, r3, r5
   3897c:	cmp	r4, #0
   38980:	mov	sl, r3
   38984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38988:	lslge	r8, r1, r4
   3898c:	lsl	r9, r1, r3
   38990:	mov	r1, #0
   38994:	movwge	r9, #0
   38998:	subs	r7, r0, r9
   3899c:	sbcs	r7, sl, r8
   389a0:	ldr	r7, [sp, #52]	; 0x34
   389a4:	movwcc	r1, #1
   389a8:	adds	r3, r7, #1
   389ac:	str	r3, [fp, #-48]	; 0xffffffd0
   389b0:	ldr	r4, [sp, #56]	; 0x38
   389b4:	adc	r3, r4, #0
   389b8:	subs	ip, r7, #1
   389bc:	str	r3, [fp, #-52]	; 0xffffffcc
   389c0:	sbc	r3, r4, #0
   389c4:	subs	r4, r2, ip
   389c8:	sbcs	r4, r5, r3
   389cc:	bcs	38a78 <flatcc_json_printer_fmt_float@@Base+0x8a8>
   389d0:	subs	r0, r0, r9
   389d4:	sbcs	r0, sl, r8
   389d8:	bcc	38a78 <flatcc_json_printer_fmt_float@@Base+0x8a8>
   389dc:	ldr	sl, [sp, #48]	; 0x30
   389e0:	adds	r4, r2, r9
   389e4:	adc	r0, r5, r8
   389e8:	subs	r1, r4, ip
   389ec:	sbcs	r1, r0, r3
   389f0:	bcc	38a2c <flatcc_json_printer_fmt_float@@Base+0x85c>
   389f4:	subs	sl, r4, ip
   389f8:	mov	r7, r9
   389fc:	mov	r9, r8
   38a00:	sbc	r1, r0, r3
   38a04:	str	r1, [fp, #-40]	; 0xffffffd8
   38a08:	subs	r1, ip, r2
   38a0c:	sbc	r8, r3, r5
   38a10:	subs	r1, r1, sl
   38a14:	ldr	sl, [sp, #48]	; 0x30
   38a18:	ldr	r1, [fp, #-40]	; 0xffffffd8
   38a1c:	sbcs	r1, r8, r1
   38a20:	mov	r8, r9
   38a24:	mov	r9, r7
   38a28:	bcc	38b68 <flatcc_json_printer_fmt_float@@Base+0x998>
   38a2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38a30:	sub	r6, r6, #1
   38a34:	subs	r2, sl, r4
   38a38:	strb	r6, [r1, lr]
   38a3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   38a40:	sbc	r5, r1, r0
   38a44:	subs	r1, r2, r9
   38a48:	sbcs	r1, r5, r8
   38a4c:	mov	r1, #0
   38a50:	movwcc	r1, #1
   38a54:	subs	r7, r4, ip
   38a58:	sbcs	r7, r0, r3
   38a5c:	bcs	38b74 <flatcc_json_printer_fmt_float@@Base+0x9a4>
   38a60:	subs	r2, r2, r9
   38a64:	sbcs	r2, r5, r8
   38a68:	mov	r5, r0
   38a6c:	mov	r2, r4
   38a70:	bcs	389e0 <flatcc_json_printer_fmt_float@@Base+0x810>
   38a74:	b	38b74 <flatcc_json_printer_fmt_float@@Base+0x9a4>
   38a78:	ldr	sl, [sp, #48]	; 0x30
   38a7c:	b	38b6c <flatcc_json_printer_fmt_float@@Base+0x99c>
   38a80:	mov	ip, #0
   38a84:	mov	r8, r3
   38a88:	mov	sl, r4
   38a8c:	ldr	r3, [sp, #36]	; 0x24
   38a90:	ldr	r4, [sp, #20]
   38a94:	subs	r0, r8, r3
   38a98:	sbcs	r0, sl, r4
   38a9c:	bcs	38b04 <flatcc_json_printer_fmt_float@@Base+0x934>
   38aa0:	cmp	ip, #0
   38aa4:	bne	38b04 <flatcc_json_printer_fmt_float@@Base+0x934>
   38aa8:	ldr	r0, [sp, #32]
   38aac:	ldr	r5, [sp, #56]	; 0x38
   38ab0:	ldr	r9, [sp, #52]	; 0x34
   38ab4:	adds	r1, r8, r0
   38ab8:	adc	r7, sl, r6
   38abc:	ldr	r6, [fp, #-52]	; 0xffffffcc
   38ac0:	subs	r0, r1, r3
   38ac4:	sbcs	r0, r7, r4
   38ac8:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38acc:	subs	ip, r1, r3
   38ad0:	mov	r0, #20
   38ad4:	sbc	lr, r7, r4
   38ad8:	subs	r7, r3, r8
   38adc:	umull	r0, r3, r5, r0
   38ae0:	sbc	r1, r4, sl
   38ae4:	add	r3, r3, r9, lsl #2
   38ae8:	subs	r0, r8, r0
   38aec:	sbcs	r0, sl, r3
   38af0:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38af4:	subs	r0, ip, r7
   38af8:	sbcs	r0, lr, r1
   38afc:	bcs	38b28 <flatcc_json_printer_fmt_float@@Base+0x958>
   38b00:	b	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38b04:	ldr	r5, [sp, #56]	; 0x38
   38b08:	ldr	r3, [sp, #52]	; 0x34
   38b0c:	mov	r0, #20
   38b10:	ldr	r6, [fp, #-52]	; 0xffffffcc
   38b14:	umull	r0, r1, r5, r0
   38b18:	add	r1, r1, r3, lsl #2
   38b1c:	subs	r0, r8, r0
   38b20:	sbcs	r0, sl, r1
   38b24:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38b28:	mvn	r7, #0
   38b2c:	ldr	r2, [sp, #48]	; 0x30
   38b30:	subs	r0, r7, #39	; 0x27
   38b34:	umull	r1, r3, r5, r0
   38b38:	sbc	r7, r7, #0
   38b3c:	mla	r3, r5, r7, r3
   38b40:	mla	r0, r6, r0, r3
   38b44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38b48:	adds	r1, r1, r2
   38b4c:	adc	r0, r0, r3
   38b50:	subs	r1, r1, r8
   38b54:	sbcs	r0, r0, sl
   38b58:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38b5c:	ldr	r0, [sp, #40]	; 0x28
   38b60:	sub	lr, r0, #1
   38b64:	b	38c14 <flatcc_json_printer_fmt_float@@Base+0xa44>
   38b68:	mov	r1, #0
   38b6c:	mov	r4, r2
   38b70:	mov	r0, r5
   38b74:	add	r2, lr, #1
   38b78:	str	r2, [sp, #40]	; 0x28
   38b7c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   38b80:	ldr	r6, [fp, #-52]	; 0xffffffcc
   38b84:	subs	r2, r4, r5
   38b88:	sbcs	r2, r0, r6
   38b8c:	bcs	38bf0 <flatcc_json_printer_fmt_float@@Base+0xa20>
   38b90:	cmp	r1, #0
   38b94:	bne	38bf0 <flatcc_json_printer_fmt_float@@Base+0xa20>
   38b98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38b9c:	adds	r1, r4, r9
   38ba0:	adc	r2, r0, r8
   38ba4:	subs	r7, r1, r5
   38ba8:	sbcs	r7, r2, r6
   38bac:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38bb0:	subs	ip, r1, r5
   38bb4:	sbc	r9, r2, r6
   38bb8:	subs	r7, r5, r4
   38bbc:	sbc	r1, r6, r0
   38bc0:	subs	r8, sl, #4
   38bc4:	sbc	r3, r3, #0
   38bc8:	subs	r2, r4, #2
   38bcc:	sbcs	r2, r0, #0
   38bd0:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38bd4:	subs	r2, ip, r7
   38bd8:	sbcs	r1, r9, r1
   38bdc:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38be0:	subs	r1, r8, r4
   38be4:	sbcs	r0, r3, r0
   38be8:	bcs	38c14 <flatcc_json_printer_fmt_float@@Base+0xa44>
   38bec:	b	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38bf0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   38bf4:	subs	r1, sl, #4
   38bf8:	sbc	r2, r2, #0
   38bfc:	subs	r3, r4, #2
   38c00:	sbcs	r3, r0, #0
   38c04:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38c08:	subs	r1, r1, r4
   38c0c:	sbcs	r0, r2, r0
   38c10:	bcc	38c6c <flatcc_json_printer_fmt_float@@Base+0xa9c>
   38c14:	ldr	r0, [sp, #28]
   38c18:	ldr	r4, [sp, #40]	; 0x28
   38c1c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   38c20:	ldrsh	r5, [r0, #26]
   38c24:	sub	r0, r4, #1
   38c28:	cmp	r4, #3
   38c2c:	movwlt	r0, #1
   38c30:	sub	r9, r7, r5
   38c34:	rsb	r3, r9, #0
   38c38:	cmp	r0, r3
   38c3c:	movge	r0, r3
   38c40:	cmn	r9, #1
   38c44:	ble	38c98 <flatcc_json_printer_fmt_float@@Base+0xac8>
   38c48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38c4c:	cmp	r9, #3
   38c50:	bcc	38d18 <flatcc_json_printer_fmt_float@@Base+0xb48>
   38c54:	mov	r0, #101	; 0x65
   38c58:	add	lr, r4, #1
   38c5c:	strb	r0, [r1, r4]
   38c60:	add	r0, r1, lr
   38c64:	mov	r2, r0
   38c68:	b	38e74 <flatcc_json_printer_fmt_float@@Base+0xca4>
   38c6c:	ldr	r1, [pc, #932]	; 39018 <flatcc_json_printer_fmt_float@@Base+0xe48>
   38c70:	ldr	r4, [fp, #-36]	; 0xffffffdc
   38c74:	vmov	r2, r3, d0
   38c78:	add	r1, pc, r1
   38c7c:	mov	r0, r4
   38c80:	bl	14f24 <sprintf@plt>
   38c84:	ldr	r1, [sp, #24]
   38c88:	sub	r1, r4, r1
   38c8c:	add	r0, r1, r0
   38c90:	sub	sp, fp, #28
   38c94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38c98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38c9c:	cmp	r4, r3
   38ca0:	bgt	38d7c <flatcc_json_printer_fmt_float@@Base+0xbac>
   38ca4:	add	r2, r9, r4
   38ca8:	cmn	r2, #2
   38cac:	blt	38d7c <flatcc_json_printer_fmt_float@@Base+0xbac>
   38cb0:	add	r8, r1, #2
   38cb4:	mvn	r0, lr
   38cb8:	add	r2, r8, r3
   38cbc:	add	r0, r2, r0
   38cc0:	mov	r2, r4
   38cc4:	bl	14e40 <memmove@plt>
   38cc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38ccc:	movw	r0, #11824	; 0x2e30
   38cd0:	mov	r6, r4
   38cd4:	strh	r0, [r1]
   38cd8:	rsb	r0, r4, #2
   38cdc:	sub	r4, r0, r9
   38ce0:	mov	r0, #2
   38ce4:	cmp	r4, #3
   38ce8:	blt	38d08 <flatcc_json_printer_fmt_float@@Base+0xb38>
   38cec:	sub	r0, r5, r7
   38cf0:	mov	r1, #48	; 0x30
   38cf4:	sub	r2, r0, r6
   38cf8:	mov	r0, r8
   38cfc:	bl	14ee8 <memset@plt>
   38d00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38d04:	mov	r0, r4
   38d08:	ldr	ip, [sp, #24]
   38d0c:	add	r6, r0, r6
   38d10:	mov	r4, r6
   38d14:	b	38ef0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   38d18:	cmp	r9, #0
   38d1c:	beq	38dec <flatcc_json_printer_fmt_float@@Base+0xc1c>
   38d20:	add	r0, r1, r4
   38d24:	mvn	r1, r7
   38d28:	mov	r6, r4
   38d2c:	mvn	r4, #1
   38d30:	add	r1, r1, r5
   38d34:	cmn	r1, #2
   38d38:	movle	r1, r4
   38d3c:	add	r1, r7, r1
   38d40:	add	r1, r1, #2
   38d44:	sub	r2, r1, r5
   38d48:	mov	r1, #48	; 0x30
   38d4c:	bl	14ee8 <memset@plt>
   38d50:	mvn	r0, r9
   38d54:	cmn	r0, #2
   38d58:	movgt	r4, r0
   38d5c:	add	r0, r9, r4
   38d60:	add	r0, r0, #2
   38d64:	cmp	r0, #4
   38d68:	bcs	38df4 <flatcc_json_printer_fmt_float@@Base+0xc24>
   38d6c:	ldr	ip, [sp, #24]
   38d70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38d74:	mov	r4, r6
   38d78:	b	38e40 <flatcc_json_printer_fmt_float@@Base+0xc70>
   38d7c:	cmp	r4, #2
   38d80:	blt	38e58 <flatcc_json_printer_fmt_float@@Base+0xc88>
   38d84:	ldr	ip, [sp, #24]
   38d88:	cmp	r0, #1
   38d8c:	blt	38db4 <flatcc_json_printer_fmt_float@@Base+0xbe4>
   38d90:	add	r2, r1, r4
   38d94:	mov	r6, #0
   38d98:	mov	r3, r2
   38d9c:	ldrb	r7, [r3, #-1]!
   38da0:	add	r6, r6, #1
   38da4:	cmp	r6, r0
   38da8:	strb	r7, [r2]
   38dac:	mov	r2, r3
   38db0:	blt	38d9c <flatcc_json_printer_fmt_float@@Base+0xbcc>
   38db4:	sub	r3, r4, r0
   38db8:	mov	r2, #46	; 0x2e
   38dbc:	adds	r7, r0, r9
   38dc0:	add	r0, r4, #1
   38dc4:	strb	r2, [r1, r3]
   38dc8:	beq	38f04 <flatcc_json_printer_fmt_float@@Base+0xd34>
   38dcc:	mov	r2, #101	; 0x65
   38dd0:	add	lr, r4, #2
   38dd4:	cmn	r7, #1
   38dd8:	strb	r2, [r1, r0]
   38ddc:	add	r0, r1, lr
   38de0:	ble	38f0c <flatcc_json_printer_fmt_float@@Base+0xd3c>
   38de4:	mov	r2, r0
   38de8:	b	38f1c <flatcc_json_printer_fmt_float@@Base+0xd4c>
   38dec:	ldr	ip, [sp, #24]
   38df0:	b	38ef0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   38df4:	ldr	ip, [sp, #24]
   38df8:	mov	r1, #0
   38dfc:	vmov.i32	q9, #1	; 0x00000001
   38e00:	vdup.32	q8, r1
   38e04:	bic	r1, r0, #3
   38e08:	vmov.32	d16[0], r6
   38e0c:	sub	r9, r9, r1
   38e10:	mov	r2, r1
   38e14:	subs	r2, r2, #4
   38e18:	vadd.i32	q8, q8, q9
   38e1c:	bne	38e14 <flatcc_json_printer_fmt_float@@Base+0xc44>
   38e20:	vext.8	q9, q8, q8, #8
   38e24:	cmp	r0, r1
   38e28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38e2c:	vadd.i32	q8, q8, q9
   38e30:	vdup.32	q9, d16[1]
   38e34:	vadd.i32	q8, q8, q9
   38e38:	vmov.32	r4, d16[0]
   38e3c:	beq	38ef0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   38e40:	add	r0, r9, #1
   38e44:	sub	r0, r0, #1
   38e48:	add	r4, r4, #1
   38e4c:	cmp	r0, #1
   38e50:	bgt	38e44 <flatcc_json_printer_fmt_float@@Base+0xc74>
   38e54:	b	38ef0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   38e58:	add	r0, r1, r4
   38e5c:	movw	r2, #11621	; 0x2d65
   38e60:	add	lr, r4, #1
   38e64:	mov	r9, r3
   38e68:	strh	r2, [r0]
   38e6c:	add	r0, r1, lr
   38e70:	add	r2, r0, #1
   38e74:	ldr	ip, [sp, #24]
   38e78:	movw	r7, #26215	; 0x6667
   38e7c:	mov	r3, r2
   38e80:	movt	r7, #26214	; 0x6666
   38e84:	smmul	r6, r9, r7
   38e88:	asr	r5, r6, #2
   38e8c:	add	r4, r5, r6, lsr #31
   38e90:	add	r6, r4, r4, lsl #2
   38e94:	sub	r6, r9, r6, lsl #1
   38e98:	add	r6, r6, #48	; 0x30
   38e9c:	strb	r6, [r3], #1
   38ea0:	add	r6, r9, #9
   38ea4:	mov	r9, r4
   38ea8:	cmp	r6, #18
   38eac:	bhi	38e84 <flatcc_json_printer_fmt_float@@Base+0xcb4>
   38eb0:	mov	r6, #0
   38eb4:	mov	r7, r3
   38eb8:	strb	r6, [r7], -r2
   38ebc:	cmp	r7, #2
   38ec0:	blt	38ee8 <flatcc_json_printer_fmt_float@@Base+0xd18>
   38ec4:	add	r7, r7, r7, lsr #31
   38ec8:	sub	r6, r3, #1
   38ecc:	asr	r7, r7, #1
   38ed0:	ldrb	r5, [r2]
   38ed4:	ldrb	r4, [r6]
   38ed8:	subs	r7, r7, #1
   38edc:	strb	r4, [r2], #1
   38ee0:	strb	r5, [r6], #-1
   38ee4:	bne	38ed0 <flatcc_json_printer_fmt_float@@Base+0xd00>
   38ee8:	sub	r0, lr, r0
   38eec:	add	r4, r0, r3
   38ef0:	mov	r0, #0
   38ef4:	strb	r0, [r1, r4]!
   38ef8:	sub	r0, r1, ip
   38efc:	sub	sp, fp, #28
   38f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38f04:	mov	r4, r0
   38f08:	b	38ef0 <flatcc_json_printer_fmt_float@@Base+0xd20>
   38f0c:	mov	r3, #45	; 0x2d
   38f10:	mov	r2, r0
   38f14:	rsb	r7, r7, #0
   38f18:	strb	r3, [r2], #1
   38f1c:	movw	r6, #26215	; 0x6667
   38f20:	mov	r3, r2
   38f24:	movt	r6, #26214	; 0x6666
   38f28:	smmul	r5, r7, r6
   38f2c:	asr	r4, r5, #2
   38f30:	add	r5, r4, r5, lsr #31
   38f34:	add	r4, r5, r5, lsl #2
   38f38:	sub	r4, r7, r4, lsl #1
   38f3c:	add	r7, r7, #9
   38f40:	add	r4, r4, #48	; 0x30
   38f44:	cmp	r7, #18
   38f48:	mov	r7, r5
   38f4c:	strb	r4, [r3], #1
   38f50:	bhi	38f28 <flatcc_json_printer_fmt_float@@Base+0xd58>
   38f54:	mov	r6, #0
   38f58:	mov	r7, r3
   38f5c:	strb	r6, [r7], -r2
   38f60:	cmp	r7, #2
   38f64:	blt	38ee8 <flatcc_json_printer_fmt_float@@Base+0xd18>
   38f68:	add	r7, r7, r7, lsr #31
   38f6c:	sub	r6, r3, #1
   38f70:	asr	r7, r7, #1
   38f74:	ldrb	r5, [r2]
   38f78:	ldrb	r4, [r6]
   38f7c:	subs	r7, r7, #1
   38f80:	strb	r4, [r2], #1
   38f84:	strb	r5, [r6], #-1
   38f88:	bne	38f74 <flatcc_json_printer_fmt_float@@Base+0xda4>
   38f8c:	b	38ee8 <flatcc_json_printer_fmt_float@@Base+0xd18>
   38f90:	ldr	r0, [pc, #132]	; 3901c <flatcc_json_printer_fmt_float@@Base+0xe4c>
   38f94:	ldr	r1, [pc, #132]	; 39020 <flatcc_json_printer_fmt_float@@Base+0xe50>
   38f98:	ldr	r3, [pc, #132]	; 39024 <flatcc_json_printer_fmt_float@@Base+0xe54>
   38f9c:	mov	r2, #189	; 0xbd
   38fa0:	add	r0, pc, r0
   38fa4:	add	r1, pc, r1
   38fa8:	add	r3, pc, r3
   38fac:	bl	14f3c <__assert_fail@plt>
   38fb0:	ldr	r0, [pc, #128]	; 39038 <flatcc_json_printer_fmt_float@@Base+0xe68>
   38fb4:	ldr	r1, [pc, #128]	; 3903c <flatcc_json_printer_fmt_float@@Base+0xe6c>
   38fb8:	ldr	r3, [pc, #128]	; 39040 <flatcc_json_printer_fmt_float@@Base+0xe70>
   38fbc:	mov	r2, #239	; 0xef
   38fc0:	add	r0, pc, r0
   38fc4:	add	r1, pc, r1
   38fc8:	add	r3, pc, r3
   38fcc:	bl	14f3c <__assert_fail@plt>
   38fd0:	ldr	r0, [pc, #84]	; 3902c <flatcc_json_printer_fmt_float@@Base+0xe5c>
   38fd4:	ldr	r1, [pc, #84]	; 39030 <flatcc_json_printer_fmt_float@@Base+0xe60>
   38fd8:	ldr	r3, [pc, #84]	; 39034 <flatcc_json_printer_fmt_float@@Base+0xe64>
   38fdc:	mov	r2, #138	; 0x8a
   38fe0:	add	r0, pc, r0
   38fe4:	add	r1, pc, r1
   38fe8:	add	r3, pc, r3
   38fec:	bl	14f3c <__assert_fail@plt>
   38ff0:	ldr	r0, [pc, #76]	; 39044 <flatcc_json_printer_fmt_float@@Base+0xe74>
   38ff4:	ldr	r1, [pc, #76]	; 39048 <flatcc_json_printer_fmt_float@@Base+0xe78>
   38ff8:	ldr	r3, [pc, #76]	; 3904c <flatcc_json_printer_fmt_float@@Base+0xe7c>
   38ffc:	mov	r2, #260	; 0x104
   39000:	add	r0, pc, r0
   39004:	add	r1, pc, r1
   39008:	add	r3, pc, r3
   3900c:	bl	14f3c <__assert_fail@plt>
   39010:	ldrdeq	r2, [r1], -r8
   39014:	andeq	r3, r1, r8, ror #3
   39018:	andeq	r2, r1, r4, lsr r3
   3901c:	andeq	r1, r1, r4, ror #30
   39020:	andeq	r1, r1, r4, ror #30
   39024:	andeq	r1, r1, lr, asr #31
   39028:	andeq	r2, r1, lr, ror sp
   3902c:	ldrdeq	r1, [r1], -r2
   39030:	andeq	r1, r1, r4, lsr #30
   39034:	andeq	r1, r1, pc, ror #31
   39038:	andeq	r2, r1, r0, asr #32
   3903c:	andeq	r1, r1, r1, lsl ip
   39040:	andeq	r2, r1, r1, asr r0
   39044:	andeq	r1, r1, ip, asr #23
   39048:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   3904c:	andeq	r1, r1, sl, lsr ip

00039050 <flatcc_json_printer_fmt_double@@Base>:
   39050:	b	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>

00039054 <flatcc_json_printer_fmt_bool@@Base>:
   39054:	cmp	r1, #0
   39058:	movwne	r1, #29300	; 0x7274
   3905c:	movtne	r1, #25973	; 0x6575
   39060:	strne	r1, [r0]
   39064:	movne	r0, #4
   39068:	bxne	lr
   3906c:	mov	r1, #101	; 0x65
   39070:	strb	r1, [r0, #4]
   39074:	movw	r1, #24934	; 0x6166
   39078:	movt	r1, #29548	; 0x736c
   3907c:	str	r1, [r0]
   39080:	mov	r0, #5
   39084:	bx	lr

00039088 <flatcc_json_printer_string@@Base>:
   39088:	b	3908c <flatcc_json_printer_string@@Base+0x4>
   3908c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39090:	add	fp, sp, #28
   39094:	sub	sp, sp, #12
   39098:	mov	r5, r0
   3909c:	mov	r4, r0
   390a0:	mov	r6, r1
   390a4:	mov	r3, r2
   390a8:	ldr	r0, [r5, #20]!
   390ac:	add	r1, r0, #1
   390b0:	str	r5, [sp, #4]
   390b4:	str	r1, [r5]
   390b8:	mov	r1, #34	; 0x22
   390bc:	strb	r1, [r0]
   390c0:	b	390d0 <flatcc_json_printer_string@@Base+0x48>
   390c4:	strb	r2, [r1]
   390c8:	sub	r3, r0, #1
   390cc:	add	r6, r8, #1
   390d0:	ldrb	sl, [r6]
   390d4:	mov	r8, r6
   390d8:	cmp	sl, #32
   390dc:	bcc	390fc <flatcc_json_printer_string@@Base+0x74>
   390e0:	uxtb	r0, sl
   390e4:	cmp	r0, #34	; 0x22
   390e8:	cmpne	r0, #92	; 0x5c
   390ec:	beq	390fc <flatcc_json_printer_string@@Base+0x74>
   390f0:	ldrb	sl, [r8, #1]!
   390f4:	cmp	sl, #31
   390f8:	bhi	390e0 <flatcc_json_printer_string@@Base+0x58>
   390fc:	ldr	r0, [r4, #20]
   39100:	ldr	r1, [r4, #16]
   39104:	sub	r9, r8, r6
   39108:	add	r2, r0, r9
   3910c:	cmp	r2, r1
   39110:	bcs	39130 <flatcc_json_printer_string@@Base+0xa8>
   39114:	mov	r1, r6
   39118:	mov	r2, r9
   3911c:	mov	r6, r3
   39120:	bl	14e58 <memcpy@plt>
   39124:	mov	r2, r6
   39128:	mov	r7, r9
   3912c:	b	391bc <flatcc_json_printer_string@@Base+0x134>
   39130:	cmp	r0, r1
   39134:	str	r3, [sp, #8]
   39138:	bcc	39154 <flatcc_json_printer_string@@Base+0xcc>
   3913c:	ldr	r2, [r4, #44]	; 0x2c
   39140:	mov	r0, r4
   39144:	mov	r1, #0
   39148:	blx	r2
   3914c:	ldr	r1, [r4, #16]
   39150:	ldr	r0, [r4, #20]
   39154:	sub	r5, r1, r0
   39158:	mov	r7, r9
   3915c:	cmp	r5, r9
   39160:	bcs	391a8 <flatcc_json_printer_string@@Base+0x120>
   39164:	mov	r1, r6
   39168:	mov	r2, r5
   3916c:	bl	14e58 <memcpy@plt>
   39170:	ldr	r0, [r4, #20]
   39174:	ldr	r2, [r4, #44]	; 0x2c
   39178:	mov	r1, #0
   3917c:	add	r0, r0, r5
   39180:	str	r0, [r4, #20]
   39184:	mov	r0, r4
   39188:	blx	r2
   3918c:	ldr	r1, [r4, #16]
   39190:	ldr	r0, [r4, #20]
   39194:	sub	r7, r7, r5
   39198:	add	r6, r6, r5
   3919c:	sub	r5, r1, r0
   391a0:	cmp	r7, r5
   391a4:	bhi	39164 <flatcc_json_printer_string@@Base+0xdc>
   391a8:	ldr	r5, [sp, #4]
   391ac:	mov	r1, r6
   391b0:	mov	r2, r7
   391b4:	bl	14e58 <memcpy@plt>
   391b8:	ldr	r2, [sp, #8]
   391bc:	ldr	r0, [r5]
   391c0:	add	r1, r0, r7
   391c4:	add	r0, r1, #1
   391c8:	str	r0, [r5]
   391cc:	subs	r0, r2, r9
   391d0:	beq	39378 <flatcc_json_printer_string@@Base+0x2f0>
   391d4:	mov	r2, #92	; 0x5c
   391d8:	strb	r2, [r1]
   391dc:	mvn	r1, #7
   391e0:	uxtab	r2, r1, sl
   391e4:	uxtb	r1, sl
   391e8:	cmp	r2, #26
   391ec:	bhi	3927c <flatcc_json_printer_string@@Base+0x1f4>
   391f0:	add	r3, pc, #4
   391f4:	ldr	r2, [r3, r2, lsl #2]
   391f8:	add	pc, r3, r2
   391fc:	andeq	r0, r0, ip, rrx
   39200:	andeq	r0, r0, r8, lsl r1
   39204:	andeq	r0, r0, ip, lsr #2
   39208:	muleq	r0, ip, r0
   3920c:	andeq	r0, r0, r0, asr #2
   39210:	andeq	r0, r0, r4, asr r1
   39214:	muleq	r0, ip, r0
   39218:	muleq	r0, ip, r0
   3921c:	muleq	r0, ip, r0
   39220:	muleq	r0, ip, r0
   39224:	muleq	r0, ip, r0
   39228:	muleq	r0, ip, r0
   3922c:	muleq	r0, ip, r0
   39230:	muleq	r0, ip, r0
   39234:	muleq	r0, ip, r0
   39238:	muleq	r0, ip, r0
   3923c:	muleq	r0, ip, r0
   39240:	muleq	r0, ip, r0
   39244:	muleq	r0, ip, r0
   39248:	muleq	r0, ip, r0
   3924c:	muleq	r0, ip, r0
   39250:	muleq	r0, ip, r0
   39254:	muleq	r0, ip, r0
   39258:	muleq	r0, ip, r0
   3925c:	muleq	r0, ip, r0
   39260:	muleq	r0, ip, r0
   39264:	andeq	r0, r0, r8, ror #2
   39268:	ldr	r1, [r5]
   3926c:	add	r2, r1, #1
   39270:	str	r2, [r5]
   39274:	mov	r2, #98	; 0x62
   39278:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   3927c:	cmp	r1, #92	; 0x5c
   39280:	bne	39298 <flatcc_json_printer_string@@Base+0x210>
   39284:	ldr	r1, [r5]
   39288:	add	r2, r1, #1
   3928c:	str	r2, [r5]
   39290:	mov	r2, #92	; 0x5c
   39294:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   39298:	ldr	r2, [r5]
   3929c:	mov	r7, #48	; 0x30
   392a0:	cmp	r1, #160	; 0xa0
   392a4:	add	r3, r2, #1
   392a8:	str	r3, [r5]
   392ac:	mov	r3, #117	; 0x75
   392b0:	strb	r3, [r2]
   392b4:	ldr	r2, [r5]
   392b8:	add	r3, r2, #1
   392bc:	str	r3, [r5]
   392c0:	strb	r7, [r2]
   392c4:	ldr	r2, [r5]
   392c8:	add	r3, r2, #1
   392cc:	str	r3, [r5]
   392d0:	strb	r7, [r2]
   392d4:	ldr	r2, [r5]
   392d8:	add	r3, r2, #1
   392dc:	str	r3, [r5]
   392e0:	mov	r3, #87	; 0x57
   392e4:	movwcc	r3, #48	; 0x30
   392e8:	add	r1, r3, r1, lsr #4
   392ec:	mov	r3, #87	; 0x57
   392f0:	strb	r1, [r2]
   392f4:	ldr	r1, [r5]
   392f8:	add	r2, r1, #1
   392fc:	str	r2, [r5]
   39300:	and	r2, sl, #15
   39304:	cmp	r2, #10
   39308:	movwcc	r3, #48	; 0x30
   3930c:	add	r2, r3, r2
   39310:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   39314:	ldr	r1, [r5]
   39318:	add	r2, r1, #1
   3931c:	str	r2, [r5]
   39320:	mov	r2, #116	; 0x74
   39324:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   39328:	ldr	r1, [r5]
   3932c:	add	r2, r1, #1
   39330:	str	r2, [r5]
   39334:	mov	r2, #110	; 0x6e
   39338:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   3933c:	ldr	r1, [r5]
   39340:	add	r2, r1, #1
   39344:	str	r2, [r5]
   39348:	mov	r2, #102	; 0x66
   3934c:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   39350:	ldr	r1, [r5]
   39354:	add	r2, r1, #1
   39358:	str	r2, [r5]
   3935c:	mov	r2, #114	; 0x72
   39360:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   39364:	ldr	r1, [r5]
   39368:	add	r2, r1, #1
   3936c:	str	r2, [r5]
   39370:	mov	r2, #34	; 0x22
   39374:	b	390c4 <flatcc_json_printer_string@@Base+0x3c>
   39378:	mov	r0, #34	; 0x22
   3937c:	strb	r0, [r1]
   39380:	sub	sp, fp, #28
   39384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039388 <flatcc_json_printer_write@@Base>:
   39388:	push	{r4, r5, r6, r7, fp, lr}
   3938c:	add	fp, sp, #16
   39390:	mov	r6, r1
   39394:	mov	r5, r0
   39398:	ldr	r1, [r0, #16]
   3939c:	ldr	r0, [r0, #20]
   393a0:	mov	r4, r2
   393a4:	add	r2, r0, r2
   393a8:	cmp	r2, r1
   393ac:	bcc	39420 <flatcc_json_printer_write@@Base+0x98>
   393b0:	cmp	r0, r1
   393b4:	bcc	393d0 <flatcc_json_printer_write@@Base+0x48>
   393b8:	ldr	r2, [r5, #44]	; 0x2c
   393bc:	mov	r0, r5
   393c0:	mov	r1, #0
   393c4:	blx	r2
   393c8:	ldr	r1, [r5, #16]
   393cc:	ldr	r0, [r5, #20]
   393d0:	sub	r7, r1, r0
   393d4:	cmp	r7, r4
   393d8:	bcs	39420 <flatcc_json_printer_write@@Base+0x98>
   393dc:	mov	r1, r6
   393e0:	mov	r2, r7
   393e4:	bl	14e58 <memcpy@plt>
   393e8:	ldr	r0, [r5, #20]
   393ec:	ldr	r2, [r5, #44]	; 0x2c
   393f0:	mov	r1, #0
   393f4:	add	r0, r0, r7
   393f8:	str	r0, [r5, #20]
   393fc:	mov	r0, r5
   39400:	blx	r2
   39404:	ldr	r1, [r5, #16]
   39408:	ldr	r0, [r5, #20]
   3940c:	sub	r4, r4, r7
   39410:	add	r6, r6, r7
   39414:	sub	r7, r1, r0
   39418:	cmp	r4, r7
   3941c:	bhi	393dc <flatcc_json_printer_write@@Base+0x54>
   39420:	mov	r1, r6
   39424:	mov	r2, r4
   39428:	bl	14e58 <memcpy@plt>
   3942c:	ldr	r0, [r5, #20]
   39430:	add	r0, r0, r4
   39434:	str	r0, [r5, #20]
   39438:	pop	{r4, r5, r6, r7, fp, pc}

0003943c <flatcc_json_printer_nl@@Base>:
   3943c:	ldr	r1, [r0, #20]
   39440:	add	r2, r1, #1
   39444:	str	r2, [r0, #20]
   39448:	mov	r2, #10
   3944c:	strb	r2, [r1]
   39450:	ldr	r1, [r0, #16]
   39454:	ldr	r2, [r0, #20]
   39458:	cmp	r2, r1
   3945c:	bxcc	lr
   39460:	ldr	r2, [r0, #44]	; 0x2c
   39464:	mov	r1, #0
   39468:	bx	r2

0003946c <flatcc_json_printer_char@@Base>:
   3946c:	ldr	r2, [r0, #20]
   39470:	add	r3, r2, #1
   39474:	str	r3, [r0, #20]
   39478:	strb	r1, [r2]
   3947c:	bx	lr

00039480 <flatcc_json_printer_indent@@Base>:
   39480:	push	{r4, r5, r6, sl, fp, lr}
   39484:	add	fp, sp, #16
   39488:	mov	r4, r0
   3948c:	ldr	r1, [r0, #16]
   39490:	ldr	r0, [r0, #20]
   39494:	ldrb	r2, [r4, #25]
   39498:	ldr	r3, [r4, #32]
   3949c:	mla	r6, r3, r2, r0
   394a0:	mul	r5, r3, r2
   394a4:	cmp	r6, r1
   394a8:	bls	39518 <flatcc_json_printer_indent@@Base+0x98>
   394ac:	cmp	r0, r1
   394b0:	bcc	394cc <flatcc_json_printer_indent@@Base+0x4c>
   394b4:	ldr	r2, [r4, #44]	; 0x2c
   394b8:	mov	r0, r4
   394bc:	mov	r1, #0
   394c0:	blx	r2
   394c4:	ldr	r1, [r4, #16]
   394c8:	ldr	r0, [r4, #20]
   394cc:	sub	r6, r1, r0
   394d0:	cmp	r6, r5
   394d4:	bcs	39518 <flatcc_json_printer_indent@@Base+0x98>
   394d8:	mov	r1, #32
   394dc:	mov	r2, r6
   394e0:	bl	14ee8 <memset@plt>
   394e4:	ldr	r0, [r4, #20]
   394e8:	ldr	r2, [r4, #44]	; 0x2c
   394ec:	mov	r1, #0
   394f0:	add	r0, r0, r6
   394f4:	str	r0, [r4, #20]
   394f8:	mov	r0, r4
   394fc:	blx	r2
   39500:	ldr	r1, [r4, #16]
   39504:	ldr	r0, [r4, #20]
   39508:	sub	r5, r5, r6
   3950c:	sub	r6, r1, r0
   39510:	cmp	r5, r6
   39514:	bhi	394d8 <flatcc_json_printer_indent@@Base+0x58>
   39518:	mov	r1, #32
   3951c:	mov	r2, r5
   39520:	bl	14ee8 <memset@plt>
   39524:	ldr	r0, [r4, #20]
   39528:	add	r0, r0, r5
   3952c:	str	r0, [r4, #20]
   39530:	pop	{r4, r5, r6, sl, fp, pc}

00039534 <flatcc_json_printer_add_level@@Base>:
   39534:	ldr	r2, [r0, #32]
   39538:	add	r1, r2, r1
   3953c:	str	r1, [r0, #32]
   39540:	bx	lr

00039544 <flatcc_json_printer_get_level@@Base>:
   39544:	ldr	r0, [r0, #32]
   39548:	bx	lr

0003954c <flatcc_json_printer_uint8@@Base>:
   3954c:	push	{fp, lr}
   39550:	mov	fp, sp
   39554:	ldr	lr, [r0, #20]
   39558:	cmp	r1, #100	; 0x64
   3955c:	bcc	395a8 <flatcc_json_printer_uint8@@Base+0x5c>
   39560:	mov	r3, #0
   39564:	strb	r3, [lr, #3]
   39568:	movw	r3, #34079	; 0x851f
   3956c:	movt	r3, #20971	; 0x51eb
   39570:	umull	r3, ip, r1, r3
   39574:	mov	r3, #48	; 0x30
   39578:	orr	r3, r3, ip, lsr #5
   3957c:	lsr	ip, ip, #5
   39580:	strb	r3, [lr]
   39584:	mov	r3, #100	; 0x64
   39588:	mls	r1, ip, r3, r1
   3958c:	ldr	r3, [pc, #124]	; 39610 <flatcc_json_printer_uint8@@Base+0xc4>
   39590:	add	r3, pc, r3
   39594:	add	r1, r3, r1, lsl #1
   39598:	ldrh	r1, [r1]
   3959c:	strh	r1, [lr, #1]
   395a0:	mov	r1, #3
   395a4:	b	39600 <flatcc_json_printer_uint8@@Base+0xb4>
   395a8:	cmp	r1, #10
   395ac:	bcc	395ec <flatcc_json_printer_uint8@@Base+0xa0>
   395b0:	mov	r3, #0
   395b4:	strb	r3, [lr, #2]
   395b8:	movw	r3, #34079	; 0x851f
   395bc:	movt	r3, #20971	; 0x51eb
   395c0:	umull	r3, r2, r1, r3
   395c4:	lsr	r2, r2, #5
   395c8:	mov	r3, #100	; 0x64
   395cc:	mls	r1, r2, r3, r1
   395d0:	ldr	r2, [pc, #60]	; 39614 <flatcc_json_printer_uint8@@Base+0xc8>
   395d4:	add	r2, pc, r2
   395d8:	add	r1, r2, r1, lsl #1
   395dc:	ldrh	r1, [r1]
   395e0:	strh	r1, [lr]
   395e4:	mov	r1, #2
   395e8:	b	39600 <flatcc_json_printer_uint8@@Base+0xb4>
   395ec:	mov	r2, #0
   395f0:	add	r1, r1, #48	; 0x30
   395f4:	strb	r2, [lr, #1]
   395f8:	strb	r1, [lr]
   395fc:	mov	r1, #1
   39600:	ldr	r2, [r0, #20]
   39604:	add	r1, r2, r1
   39608:	str	r1, [r0, #20]
   3960c:	pop	{fp, pc}
   39610:	andeq	r1, r1, pc, asr #21
   39614:	andeq	r1, r1, fp, lsl #21

00039618 <flatcc_json_printer_uint16@@Base>:
   39618:	push	{r4, sl, fp, lr}
   3961c:	add	fp, sp, #8
   39620:	mov	r2, r1
   39624:	ldr	r1, [r0, #20]
   39628:	mov	r4, r0
   3962c:	mov	r0, r2
   39630:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   39634:	ldr	r1, [r4, #20]
   39638:	add	r0, r1, r0
   3963c:	str	r0, [r4, #20]
   39640:	pop	{r4, sl, fp, pc}
   39644:	mov	ip, r0
   39648:	cmp	r0, #1000	; 0x3e8
   3964c:	bcc	39664 <flatcc_json_printer_uint16@@Base+0x4c>
   39650:	movw	r3, #9999	; 0x270f
   39654:	mov	r0, #4
   39658:	cmp	ip, r3
   3965c:	movwhi	r0, #5
   39660:	b	39688 <flatcc_json_printer_uint16@@Base+0x70>
   39664:	cmp	ip, #100	; 0x64
   39668:	bcc	3967c <flatcc_json_printer_uint16@@Base+0x64>
   3966c:	mov	r0, #0
   39670:	strb	r0, [r1, #3]!
   39674:	mov	r0, #3
   39678:	b	39724 <flatcc_json_printer_uint16@@Base+0x10c>
   3967c:	mov	r0, #1
   39680:	cmp	ip, #9
   39684:	movwhi	r0, #2
   39688:	mov	r3, #0
   3968c:	tst	r0, #1
   39690:	strb	r3, [r1, r0]!
   39694:	bne	396dc <flatcc_json_printer_uint16@@Base+0xc4>
   39698:	cmp	r0, #2
   3969c:	beq	39764 <flatcc_json_printer_uint16@@Base+0x14c>
   396a0:	cmp	r0, #4
   396a4:	bxne	lr
   396a8:	movw	r2, #34079	; 0x851f
   396ac:	movt	r2, #20971	; 0x51eb
   396b0:	umull	r2, r3, ip, r2
   396b4:	lsr	r3, r3, #5
   396b8:	mov	r2, #100	; 0x64
   396bc:	mls	r2, r3, r2, ip
   396c0:	uxth	ip, r2
   396c4:	ldr	r2, [pc, #224]	; 397ac <flatcc_json_printer_uint16@@Base+0x194>
   396c8:	add	r2, pc, r2
   396cc:	add	r2, r2, ip, lsl #1
   396d0:	ldrh	r2, [r2]
   396d4:	strh	r2, [r1, #-2]!
   396d8:	b	39768 <flatcc_json_printer_uint16@@Base+0x150>
   396dc:	cmp	r0, #1
   396e0:	beq	3979c <flatcc_json_printer_uint16@@Base+0x184>
   396e4:	cmp	r0, #3
   396e8:	beq	39724 <flatcc_json_printer_uint16@@Base+0x10c>
   396ec:	cmp	r0, #5
   396f0:	bne	39798 <flatcc_json_printer_uint16@@Base+0x180>
   396f4:	movw	r3, #34079	; 0x851f
   396f8:	movt	r3, #20971	; 0x51eb
   396fc:	umull	r3, r2, ip, r3
   39700:	lsr	r2, r2, #5
   39704:	mov	r3, #100	; 0x64
   39708:	mls	ip, r2, r3, ip
   3970c:	ldr	r3, [pc, #144]	; 397a4 <flatcc_json_printer_uint16@@Base+0x18c>
   39710:	add	r3, pc, r3
   39714:	add	r3, r3, ip, lsl #1
   39718:	mov	ip, r2
   3971c:	ldrh	r3, [r3]
   39720:	strh	r3, [r1, #-2]!
   39724:	movw	r3, #34079	; 0x851f
   39728:	uxth	r2, ip
   3972c:	movt	r3, #20971	; 0x51eb
   39730:	umull	r2, r3, r2, r3
   39734:	lsr	r3, r3, #5
   39738:	mov	r2, #100	; 0x64
   3973c:	mls	r2, r3, r2, ip
   39740:	uxth	ip, r2
   39744:	ldr	r2, [pc, #92]	; 397a8 <flatcc_json_printer_uint16@@Base+0x190>
   39748:	add	r2, pc, r2
   3974c:	add	r2, r2, ip, lsl #1
   39750:	ldrh	r2, [r2]
   39754:	strh	r2, [r1, #-2]!
   39758:	add	r2, r3, #48	; 0x30
   3975c:	strb	r2, [r1, #-1]
   39760:	bx	lr
   39764:	mov	r3, ip
   39768:	uxth	ip, r3
   3976c:	movw	r3, #34079	; 0x851f
   39770:	movt	r3, #20971	; 0x51eb
   39774:	umull	r3, r2, ip, r3
   39778:	lsr	r2, r2, #5
   3977c:	mov	r3, #100	; 0x64
   39780:	mls	r2, r2, r3, ip
   39784:	ldr	r3, [pc, #36]	; 397b0 <flatcc_json_printer_uint16@@Base+0x198>
   39788:	add	r3, pc, r3
   3978c:	add	r2, r3, r2, lsl #1
   39790:	ldrh	r2, [r2]
   39794:	strh	r2, [r1, #-2]
   39798:	bx	lr
   3979c:	mov	r3, ip
   397a0:	b	39758 <flatcc_json_printer_uint16@@Base+0x140>
   397a4:	andeq	r1, r1, pc, asr #18
   397a8:	andeq	r1, r1, r7, lsl r9
   397ac:	muleq	r1, r7, r9
   397b0:	ldrdeq	r1, [r1], -r7

000397b4 <flatcc_json_printer_uint32@@Base>:
   397b4:	push	{r4, sl, fp, lr}
   397b8:	add	fp, sp, #8
   397bc:	mov	r2, r1
   397c0:	ldr	r1, [r0, #20]
   397c4:	mov	r4, r0
   397c8:	mov	r0, r2
   397cc:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   397d0:	ldr	r1, [r4, #20]
   397d4:	add	r0, r1, r0
   397d8:	str	r0, [r4, #20]
   397dc:	pop	{r4, sl, fp, pc}
   397e0:	mov	ip, r0
   397e4:	movw	r0, #10000	; 0x2710
   397e8:	cmp	ip, r0
   397ec:	bcc	39820 <flatcc_json_printer_uint32@@Base+0x6c>
   397f0:	movw	r0, #38528	; 0x9680
   397f4:	movt	r0, #152	; 0x98
   397f8:	cmp	ip, r0
   397fc:	bcc	3983c <flatcc_json_printer_uint32@@Base+0x88>
   39800:	movw	r0, #51712	; 0xca00
   39804:	movt	r0, #15258	; 0x3b9a
   39808:	cmp	ip, r0
   3980c:	bcc	3986c <flatcc_json_printer_uint32@@Base+0xb8>
   39810:	mov	r0, #0
   39814:	strb	r0, [r1, #10]!
   39818:	mov	r0, #10
   3981c:	b	398a8 <flatcc_json_printer_uint32@@Base+0xf4>
   39820:	cmp	ip, #100	; 0x64
   39824:	bcc	3985c <flatcc_json_printer_uint32@@Base+0xa8>
   39828:	lsr	r3, ip, #3
   3982c:	mov	r0, #3
   39830:	cmp	r3, #124	; 0x7c
   39834:	movwhi	r0, #4
   39838:	b	39898 <flatcc_json_printer_uint32@@Base+0xe4>
   3983c:	movw	r0, #16960	; 0x4240
   39840:	movt	r0, #15
   39844:	cmp	ip, r0
   39848:	bcc	39884 <flatcc_json_printer_uint32@@Base+0xd0>
   3984c:	mov	r0, #0
   39850:	strb	r0, [r1, #7]!
   39854:	mov	r0, #7
   39858:	b	399e0 <flatcc_json_printer_uint32@@Base+0x22c>
   3985c:	mov	r0, #1
   39860:	cmp	ip, #9
   39864:	movwhi	r0, #2
   39868:	b	39898 <flatcc_json_printer_uint32@@Base+0xe4>
   3986c:	movw	r3, #57599	; 0xe0ff
   39870:	mov	r0, #8
   39874:	movt	r3, #1525	; 0x5f5
   39878:	cmp	ip, r3
   3987c:	movwhi	r0, #9
   39880:	b	39898 <flatcc_json_printer_uint32@@Base+0xe4>
   39884:	movw	r3, #34463	; 0x869f
   39888:	mov	r0, #5
   3988c:	movt	r3, #1
   39890:	cmp	ip, r3
   39894:	movwhi	r0, #6
   39898:	mov	r3, #0
   3989c:	tst	r0, #1
   398a0:	strb	r3, [r1, r0]!
   398a4:	bne	399e0 <flatcc_json_printer_uint32@@Base+0x22c>
   398a8:	lsr	r2, r0, #1
   398ac:	orr	r2, r2, r0, lsl #3
   398b0:	eor	r3, r2, #4
   398b4:	sbfx	r2, r3, #0, #4
   398b8:	cmp	r2, #0
   398bc:	blt	399dc <flatcc_json_printer_uint32@@Base+0x228>
   398c0:	and	r2, r3, #15
   398c4:	add	r3, pc, #4
   398c8:	ldr	r2, [r3, r2, lsl #2]
   398cc:	add	pc, r3, r2
   398d0:	andeq	r0, r0, r0, asr r0
   398d4:	andeq	r0, r0, r0, lsr #32
   398d8:	andeq	r0, r0, ip, lsl #2
   398dc:	andeq	r0, r0, ip, lsl #2
   398e0:	andeq	r0, r0, ip, lsl #2
   398e4:	andeq	r0, r0, r0, ror #1
   398e8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   398ec:	andeq	r0, r0, r0, lsl #1
   398f0:	movw	r2, #34079	; 0x851f
   398f4:	movt	r2, #20971	; 0x51eb
   398f8:	umull	r2, r3, ip, r2
   398fc:	lsr	r2, r3, #5
   39900:	mov	r3, #100	; 0x64
   39904:	mls	ip, r2, r3, ip
   39908:	ldr	r3, [pc, #500]	; 39b04 <flatcc_json_printer_uint32@@Base+0x350>
   3990c:	add	r3, pc, r3
   39910:	add	r3, r3, ip, lsl #1
   39914:	mov	ip, r2
   39918:	ldrh	r3, [r3]
   3991c:	strh	r3, [r1, #-2]!
   39920:	movw	r2, #34079	; 0x851f
   39924:	movt	r2, #20971	; 0x51eb
   39928:	umull	r2, r3, ip, r2
   3992c:	lsr	r2, r3, #5
   39930:	mov	r3, #100	; 0x64
   39934:	mls	ip, r2, r3, ip
   39938:	ldr	r3, [pc, #456]	; 39b08 <flatcc_json_printer_uint32@@Base+0x354>
   3993c:	add	r3, pc, r3
   39940:	add	r3, r3, ip, lsl #1
   39944:	mov	ip, r2
   39948:	ldrh	r3, [r3]
   3994c:	strh	r3, [r1, #-2]!
   39950:	movw	r2, #34079	; 0x851f
   39954:	movt	r2, #20971	; 0x51eb
   39958:	umull	r2, r3, ip, r2
   3995c:	lsr	r2, r3, #5
   39960:	mov	r3, #100	; 0x64
   39964:	mls	ip, r2, r3, ip
   39968:	ldr	r3, [pc, #412]	; 39b0c <flatcc_json_printer_uint32@@Base+0x358>
   3996c:	add	r3, pc, r3
   39970:	add	r3, r3, ip, lsl #1
   39974:	mov	ip, r2
   39978:	ldrh	r3, [r3]
   3997c:	strh	r3, [r1, #-2]!
   39980:	movw	r2, #34079	; 0x851f
   39984:	movt	r2, #20971	; 0x51eb
   39988:	umull	r2, r3, ip, r2
   3998c:	lsr	r2, r3, #5
   39990:	mov	r3, #100	; 0x64
   39994:	mls	ip, r2, r3, ip
   39998:	ldr	r3, [pc, #368]	; 39b10 <flatcc_json_printer_uint32@@Base+0x35c>
   3999c:	add	r3, pc, r3
   399a0:	add	r3, r3, ip, lsl #1
   399a4:	mov	ip, r2
   399a8:	ldrh	r3, [r3]
   399ac:	strh	r3, [r1, #-2]!
   399b0:	movw	r2, #34079	; 0x851f
   399b4:	movt	r2, #20971	; 0x51eb
   399b8:	umull	r2, r3, ip, r2
   399bc:	lsr	r2, r3, #5
   399c0:	mov	r3, #100	; 0x64
   399c4:	mls	r2, r2, r3, ip
   399c8:	ldr	r3, [pc, #324]	; 39b14 <flatcc_json_printer_uint32@@Base+0x360>
   399cc:	add	r3, pc, r3
   399d0:	add	r2, r3, r2, lsl #1
   399d4:	ldrh	r2, [r2]
   399d8:	strh	r2, [r1, #-2]
   399dc:	bx	lr
   399e0:	add	r3, r0, #7
   399e4:	ubfx	r2, r3, #1, #3
   399e8:	orr	r3, r2, r3, lsl #3
   399ec:	sbfx	r2, r3, #0, #4
   399f0:	cmp	r2, #0
   399f4:	bxlt	lr
   399f8:	and	r2, r3, #15
   399fc:	add	r3, pc, #4
   39a00:	ldr	r2, [r3, r2, lsl #2]
   39a04:	add	pc, r3, r2
   39a08:	andeq	r0, r0, r0, lsr #32
   39a0c:			; <UNDEFINED> instruction: 0xffffffd4
   39a10:			; <UNDEFINED> instruction: 0xffffffd4
   39a14:			; <UNDEFINED> instruction: 0xffffffd4
   39a18:	andeq	r0, r0, r0, ror #1
   39a1c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   39a20:	andeq	r0, r0, r0, lsl #1
   39a24:	andeq	r0, r0, r0, asr r0
   39a28:	movw	r2, #34079	; 0x851f
   39a2c:	movt	r2, #20971	; 0x51eb
   39a30:	umull	r2, r3, ip, r2
   39a34:	lsr	r2, r3, #5
   39a38:	mov	r3, #100	; 0x64
   39a3c:	mls	ip, r2, r3, ip
   39a40:	ldr	r3, [pc, #172]	; 39af4 <flatcc_json_printer_uint32@@Base+0x340>
   39a44:	add	r3, pc, r3
   39a48:	add	r3, r3, ip, lsl #1
   39a4c:	mov	ip, r2
   39a50:	ldrh	r3, [r3]
   39a54:	strh	r3, [r1, #-2]!
   39a58:	movw	r2, #34079	; 0x851f
   39a5c:	movt	r2, #20971	; 0x51eb
   39a60:	umull	r2, r3, ip, r2
   39a64:	lsr	r2, r3, #5
   39a68:	mov	r3, #100	; 0x64
   39a6c:	mls	ip, r2, r3, ip
   39a70:	ldr	r3, [pc, #128]	; 39af8 <flatcc_json_printer_uint32@@Base+0x344>
   39a74:	add	r3, pc, r3
   39a78:	add	r3, r3, ip, lsl #1
   39a7c:	mov	ip, r2
   39a80:	ldrh	r3, [r3]
   39a84:	strh	r3, [r1, #-2]!
   39a88:	movw	r2, #34079	; 0x851f
   39a8c:	movt	r2, #20971	; 0x51eb
   39a90:	umull	r2, r3, ip, r2
   39a94:	lsr	r2, r3, #5
   39a98:	mov	r3, #100	; 0x64
   39a9c:	mls	ip, r2, r3, ip
   39aa0:	ldr	r3, [pc, #84]	; 39afc <flatcc_json_printer_uint32@@Base+0x348>
   39aa4:	add	r3, pc, r3
   39aa8:	add	r3, r3, ip, lsl #1
   39aac:	mov	ip, r2
   39ab0:	ldrh	r3, [r3]
   39ab4:	strh	r3, [r1, #-2]!
   39ab8:	movw	r2, #34079	; 0x851f
   39abc:	movt	r2, #20971	; 0x51eb
   39ac0:	umull	r2, r3, ip, r2
   39ac4:	lsr	r2, r3, #5
   39ac8:	mov	r3, #100	; 0x64
   39acc:	mls	ip, r2, r3, ip
   39ad0:	ldr	r3, [pc, #40]	; 39b00 <flatcc_json_printer_uint32@@Base+0x34c>
   39ad4:	add	r3, pc, r3
   39ad8:	add	r3, r3, ip, lsl #1
   39adc:	mov	ip, r2
   39ae0:	ldrh	r3, [r3]
   39ae4:	strh	r3, [r1, #-2]!
   39ae8:	add	r2, ip, #48	; 0x30
   39aec:	strb	r2, [r1, #-1]
   39af0:	bx	lr
   39af4:	andeq	r1, r1, fp, lsl r6
   39af8:	andeq	r1, r1, fp, ror #11
   39afc:			; <UNDEFINED> instruction: 0x000115bb
   39b00:	andeq	r1, r1, fp, lsl #11
   39b04:	andeq	r1, r1, r3, asr r7
   39b08:	andeq	r1, r1, r3, lsr #14
   39b0c:	strdeq	r1, [r1], -r3
   39b10:	andeq	r1, r1, r3, asr #13
   39b14:	muleq	r1, r3, r6

00039b18 <flatcc_json_printer_uint64@@Base>:
   39b18:	push	{r4, sl, fp, lr}
   39b1c:	add	fp, sp, #8
   39b20:	mov	r1, r3
   39b24:	mov	r3, r2
   39b28:	ldr	r2, [r0, #20]
   39b2c:	mov	r4, r0
   39b30:	mov	r0, r3
   39b34:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   39b38:	ldr	r1, [r4, #20]
   39b3c:	add	r0, r1, r0
   39b40:	str	r0, [r4, #20]
   39b44:	pop	{r4, sl, fp, pc}
   39b48:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   39b4c:	add	fp, sp, #24
   39b50:	mov	r7, r0
   39b54:	movw	r0, #51711	; 0xc9ff
   39b58:	mov	r4, r2
   39b5c:	movt	r0, #15258	; 0x3b9a
   39b60:	subs	r0, r0, r7
   39b64:	rscs	r0, r1, #0
   39b68:	bcc	39b7c <flatcc_json_printer_uint64@@Base+0x64>
   39b6c:	mov	r0, r7
   39b70:	mov	r1, r4
   39b74:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   39b78:	b	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   39b7c:	mov	r6, r1
   39b80:	movw	r1, #40960	; 0xa000
   39b84:	movw	r0, #2328	; 0x918
   39b88:	movt	r1, #20082	; 0x4e72
   39b8c:	subs	r1, r7, r1
   39b90:	sbcs	r0, r6, r0
   39b94:	bcc	39bf4 <flatcc_json_printer_uint64@@Base+0xdc>
   39b98:	movw	r1, #0
   39b9c:	movw	r0, #34546	; 0x86f2
   39ba0:	movt	r1, #28609	; 0x6fc1
   39ba4:	movt	r0, #35	; 0x23
   39ba8:	subs	r1, r7, r1
   39bac:	sbcs	r0, r6, r0
   39bb0:	bcc	39c24 <flatcc_json_printer_uint64@@Base+0x10c>
   39bb4:	movw	r1, #0
   39bb8:	movw	r0, #46771	; 0xb6b3
   39bbc:	movt	r1, #42852	; 0xa764
   39bc0:	movt	r0, #3552	; 0xde0
   39bc4:	subs	r1, r7, r1
   39bc8:	sbcs	r0, r6, r0
   39bcc:	bcc	39c6c <flatcc_json_printer_uint64@@Base+0x154>
   39bd0:	movw	r1, #65535	; 0xffff
   39bd4:	movw	r0, #8964	; 0x2304
   39bd8:	mov	r8, #19
   39bdc:	movt	r1, #35303	; 0x89e7
   39be0:	movt	r0, #35527	; 0x8ac7
   39be4:	subs	r1, r1, r7
   39be8:	sbcs	r0, r0, r6
   39bec:	movwcc	r8, #20
   39bf0:	b	39cac <flatcc_json_printer_uint64@@Base+0x194>
   39bf4:	movw	r0, #59392	; 0xe800
   39bf8:	movt	r0, #18550	; 0x4876
   39bfc:	subs	r0, r7, r0
   39c00:	sbcs	r0, r6, #23
   39c04:	bcc	39c50 <flatcc_json_printer_uint64@@Base+0x138>
   39c08:	movw	r0, #4095	; 0xfff
   39c0c:	mov	r8, #12
   39c10:	movt	r0, #54437	; 0xd4a5
   39c14:	subs	r0, r0, r7
   39c18:	rscs	r0, r6, #232	; 0xe8
   39c1c:	movwcc	r8, #13
   39c20:	b	39cac <flatcc_json_printer_uint64@@Base+0x194>
   39c24:	movw	r1, #32768	; 0x8000
   39c28:	movw	r0, #36222	; 0x8d7e
   39c2c:	movt	r1, #42182	; 0xa4c6
   39c30:	movt	r0, #3
   39c34:	subs	r1, r7, r1
   39c38:	sbcs	r0, r6, r0
   39c3c:	bcc	39c90 <flatcc_json_printer_uint64@@Base+0x178>
   39c40:	mov	r0, #0
   39c44:	mov	r8, #16
   39c48:	strb	r0, [r4, #16]!
   39c4c:	b	39d70 <flatcc_json_printer_uint64@@Base+0x258>
   39c50:	movw	r0, #58367	; 0xe3ff
   39c54:	mov	r8, #10
   39c58:	movt	r0, #21515	; 0x540b
   39c5c:	subs	r0, r0, r7
   39c60:	rscs	r0, r6, #2
   39c64:	movwcc	r8, #11
   39c68:	b	39cac <flatcc_json_printer_uint64@@Base+0x194>
   39c6c:	movw	r1, #65535	; 0xffff
   39c70:	movw	r0, #17784	; 0x4578
   39c74:	mov	r8, #17
   39c78:	movt	r1, #23945	; 0x5d89
   39c7c:	movt	r0, #355	; 0x163
   39c80:	subs	r1, r1, r7
   39c84:	sbcs	r0, r0, r6
   39c88:	movwcc	r8, #18
   39c8c:	b	39cac <flatcc_json_printer_uint64@@Base+0x194>
   39c90:	movw	r1, #16383	; 0x3fff
   39c94:	movw	r0, #23283	; 0x5af3
   39c98:	mov	r8, #14
   39c9c:	movt	r1, #4218	; 0x107a
   39ca0:	subs	r1, r1, r7
   39ca4:	sbcs	r0, r0, r6
   39ca8:	movwcc	r8, #15
   39cac:	mov	r0, #0
   39cb0:	tst	r8, #1
   39cb4:	strb	r0, [r4, r8]!
   39cb8:	bne	39e54 <flatcc_json_printer_uint64@@Base+0x33c>
   39cbc:	sub	r0, r8, #10
   39cc0:	cmp	r0, #10
   39cc4:	bhi	39fcc <flatcc_json_printer_uint64@@Base+0x4b4>
   39cc8:	add	r1, pc, #4
   39ccc:	ldr	r0, [r1, r0, lsl #2]
   39cd0:	add	pc, r1, r0
   39cd4:	andeq	r0, r0, r4, asr #2
   39cd8:	strdeq	r0, [r0], -r8
   39cdc:	andeq	r0, r0, ip, lsl #2
   39ce0:	strdeq	r0, [r0], -r8
   39ce4:	ldrdeq	r0, [r0], -r4
   39ce8:	strdeq	r0, [r0], -r8
   39cec:	muleq	r0, ip, r0
   39cf0:	strdeq	r0, [r0], -r8
   39cf4:	andeq	r0, r0, r4, rrx
   39cf8:	strdeq	r0, [r0], -r8
   39cfc:	andeq	r0, r0, ip, lsr #32
   39d00:	mov	r0, r7
   39d04:	mov	r1, r6
   39d08:	mov	r2, #100	; 0x64
   39d0c:	mov	r3, #0
   39d10:	mov	r5, #100	; 0x64
   39d14:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39d18:	ldr	r2, [pc, #876]	; 3a08c <flatcc_json_printer_uint64@@Base+0x574>
   39d1c:	mov	r6, r1
   39d20:	mls	r1, r0, r5, r7
   39d24:	mov	r7, r0
   39d28:	add	r2, pc, r2
   39d2c:	add	r1, r2, r1, lsl #1
   39d30:	ldrh	r1, [r1]
   39d34:	strh	r1, [r4, #-2]!
   39d38:	mov	r0, r7
   39d3c:	mov	r1, r6
   39d40:	mov	r2, #100	; 0x64
   39d44:	mov	r3, #0
   39d48:	mov	r5, #100	; 0x64
   39d4c:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39d50:	ldr	r2, [pc, #824]	; 3a090 <flatcc_json_printer_uint64@@Base+0x578>
   39d54:	mov	r6, r1
   39d58:	mls	r1, r0, r5, r7
   39d5c:	mov	r7, r0
   39d60:	add	r2, pc, r2
   39d64:	add	r1, r2, r1, lsl #1
   39d68:	ldrh	r1, [r1]
   39d6c:	strh	r1, [r4, #-2]!
   39d70:	mov	r0, r7
   39d74:	mov	r1, r6
   39d78:	mov	r2, #100	; 0x64
   39d7c:	mov	r3, #0
   39d80:	mov	r5, #100	; 0x64
   39d84:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39d88:	ldr	r2, [pc, #772]	; 3a094 <flatcc_json_printer_uint64@@Base+0x57c>
   39d8c:	mov	r6, r1
   39d90:	mls	r1, r0, r5, r7
   39d94:	mov	r7, r0
   39d98:	add	r2, pc, r2
   39d9c:	add	r1, r2, r1, lsl #1
   39da0:	ldrh	r1, [r1]
   39da4:	strh	r1, [r4, #-2]!
   39da8:	mov	r0, r7
   39dac:	mov	r1, r6
   39db0:	mov	r2, #100	; 0x64
   39db4:	mov	r3, #0
   39db8:	mov	r5, #100	; 0x64
   39dbc:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39dc0:	ldr	r2, [pc, #720]	; 3a098 <flatcc_json_printer_uint64@@Base+0x580>
   39dc4:	mov	r6, r1
   39dc8:	mls	r1, r0, r5, r7
   39dcc:	mov	r7, r0
   39dd0:	add	r2, pc, r2
   39dd4:	add	r1, r2, r1, lsl #1
   39dd8:	ldrh	r1, [r1]
   39ddc:	strh	r1, [r4, #-2]!
   39de0:	mov	r0, r7
   39de4:	mov	r1, r6
   39de8:	mov	r2, #100	; 0x64
   39dec:	mov	r3, #0
   39df0:	mov	r5, #100	; 0x64
   39df4:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39df8:	ldr	r2, [pc, #668]	; 3a09c <flatcc_json_printer_uint64@@Base+0x584>
   39dfc:	mov	r6, r1
   39e00:	mls	r1, r0, r5, r7
   39e04:	mov	r7, r0
   39e08:	add	r2, pc, r2
   39e0c:	add	r1, r2, r1, lsl #1
   39e10:	ldrh	r1, [r1]
   39e14:	strh	r1, [r4, #-2]!
   39e18:	mov	r0, r7
   39e1c:	mov	r1, r6
   39e20:	mov	r2, #100	; 0x64
   39e24:	mov	r3, #0
   39e28:	mov	r5, #100	; 0x64
   39e2c:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39e30:	ldr	r2, [pc, #616]	; 3a0a0 <flatcc_json_printer_uint64@@Base+0x588>
   39e34:	mov	r6, r1
   39e38:	mls	r1, r0, r5, r7
   39e3c:	mov	r7, r0
   39e40:	add	r2, pc, r2
   39e44:	add	r1, r2, r1, lsl #1
   39e48:	ldrh	r1, [r1]
   39e4c:	strh	r1, [r4, #-2]!
   39e50:	b	39fcc <flatcc_json_printer_uint64@@Base+0x4b4>
   39e54:	sub	r0, r8, #11
   39e58:	cmp	r0, #8
   39e5c:	bhi	39fcc <flatcc_json_printer_uint64@@Base+0x4b4>
   39e60:	add	r1, pc, #4
   39e64:	ldr	r0, [r1, r0, lsl #2]
   39e68:	add	pc, r1, r0
   39e6c:	strdeq	r0, [r0], -ip
   39e70:	andeq	r0, r0, r0, ror #2
   39e74:	andeq	r0, r0, r4, asr #1
   39e78:	andeq	r0, r0, r0, ror #2
   39e7c:	andeq	r0, r0, ip, lsl #1
   39e80:	andeq	r0, r0, r0, ror #2
   39e84:	andeq	r0, r0, r4, asr r0
   39e88:	andeq	r0, r0, r0, ror #2
   39e8c:	andeq	r0, r0, r4, lsr #32
   39e90:	mov	r0, r7
   39e94:	mov	r1, r6
   39e98:	mov	r2, #100	; 0x64
   39e9c:	mov	r3, #0
   39ea0:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39ea4:	mov	r7, r0
   39ea8:	ldr	r0, [pc, #456]	; 3a078 <flatcc_json_printer_uint64@@Base+0x560>
   39eac:	mov	r6, r1
   39eb0:	add	r0, pc, r0
   39eb4:	add	r0, r0, r2, lsl #1
   39eb8:	ldrh	r0, [r0]
   39ebc:	strh	r0, [r4, #-2]!
   39ec0:	mov	r0, r7
   39ec4:	mov	r1, r6
   39ec8:	mov	r2, #100	; 0x64
   39ecc:	mov	r3, #0
   39ed0:	mov	r5, #100	; 0x64
   39ed4:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39ed8:	ldr	r2, [pc, #412]	; 3a07c <flatcc_json_printer_uint64@@Base+0x564>
   39edc:	mov	r6, r1
   39ee0:	mls	r1, r0, r5, r7
   39ee4:	mov	r7, r0
   39ee8:	add	r2, pc, r2
   39eec:	add	r1, r2, r1, lsl #1
   39ef0:	ldrh	r1, [r1]
   39ef4:	strh	r1, [r4, #-2]!
   39ef8:	mov	r0, r7
   39efc:	mov	r1, r6
   39f00:	mov	r2, #100	; 0x64
   39f04:	mov	r3, #0
   39f08:	mov	r5, #100	; 0x64
   39f0c:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39f10:	ldr	r2, [pc, #360]	; 3a080 <flatcc_json_printer_uint64@@Base+0x568>
   39f14:	mov	r6, r1
   39f18:	mls	r1, r0, r5, r7
   39f1c:	mov	r7, r0
   39f20:	add	r2, pc, r2
   39f24:	add	r1, r2, r1, lsl #1
   39f28:	ldrh	r1, [r1]
   39f2c:	strh	r1, [r4, #-2]!
   39f30:	mov	r0, r7
   39f34:	mov	r1, r6
   39f38:	mov	r2, #100	; 0x64
   39f3c:	mov	r3, #0
   39f40:	mov	r5, #100	; 0x64
   39f44:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39f48:	ldr	r2, [pc, #308]	; 3a084 <flatcc_json_printer_uint64@@Base+0x56c>
   39f4c:	mov	r6, r1
   39f50:	mls	r1, r0, r5, r7
   39f54:	mov	r7, r0
   39f58:	add	r2, pc, r2
   39f5c:	add	r1, r2, r1, lsl #1
   39f60:	ldrh	r1, [r1]
   39f64:	strh	r1, [r4, #-2]!
   39f68:	mov	r0, r7
   39f6c:	mov	r1, r6
   39f70:	mov	r2, #100	; 0x64
   39f74:	mov	r3, #0
   39f78:	mov	r9, #100	; 0x64
   39f7c:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39f80:	mov	r2, #10
   39f84:	mov	r3, #0
   39f88:	mov	r5, r0
   39f8c:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39f90:	orr	r0, r2, #48	; 0x30
   39f94:	mov	r2, #1000	; 0x3e8
   39f98:	mov	r3, #0
   39f9c:	strb	r0, [r4, #-3]!
   39fa0:	mls	r0, r5, r9, r7
   39fa4:	ldr	r1, [pc, #220]	; 3a088 <flatcc_json_printer_uint64@@Base+0x570>
   39fa8:	add	r1, pc, r1
   39fac:	add	r0, r1, r0, lsl #1
   39fb0:	mov	r1, r6
   39fb4:	ldrh	r0, [r0]
   39fb8:	strh	r0, [r4, #1]
   39fbc:	mov	r0, r7
   39fc0:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39fc4:	mov	r7, r0
   39fc8:	mov	r6, r1
   39fcc:	mov	r0, r7
   39fd0:	mov	r1, r6
   39fd4:	mov	r2, #100	; 0x64
   39fd8:	mov	r3, #0
   39fdc:	mov	r5, #100	; 0x64
   39fe0:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   39fe4:	mls	r2, r0, r5, r7
   39fe8:	ldr	r5, [pc, #180]	; 3a0a4 <flatcc_json_printer_uint64@@Base+0x58c>
   39fec:	mov	r3, #0
   39ff0:	add	r5, pc, r5
   39ff4:	add	r2, r5, r2, lsl #1
   39ff8:	ldrh	r2, [r2]
   39ffc:	strh	r2, [r4, #-2]
   3a000:	mov	r2, #100	; 0x64
   3a004:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   3a008:	add	r0, r5, r2, lsl #1
   3a00c:	mov	r1, r6
   3a010:	movw	r2, #10000	; 0x2710
   3a014:	mov	r3, #0
   3a018:	ldrh	r0, [r0]
   3a01c:	strh	r0, [r4, #-4]
   3a020:	mov	r0, r7
   3a024:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   3a028:	mov	r2, #100	; 0x64
   3a02c:	mov	r3, #0
   3a030:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   3a034:	add	r0, r5, r2, lsl #1
   3a038:	movw	r2, #16960	; 0x4240
   3a03c:	mov	r1, r6
   3a040:	mov	r3, #0
   3a044:	ldrh	r0, [r0]
   3a048:	movt	r2, #15
   3a04c:	strh	r0, [r4, #-6]
   3a050:	mov	r0, r7
   3a054:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   3a058:	mov	r2, #100	; 0x64
   3a05c:	mov	r3, #0
   3a060:	bl	454c8 <flatcc_json_printer_clear@@Base+0x7a4>
   3a064:	add	r0, r5, r2, lsl #1
   3a068:	ldrh	r0, [r0]
   3a06c:	strh	r0, [r4, #-8]
   3a070:	mov	r0, r8
   3a074:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3a078:	andeq	r1, r1, pc, lsr #3
   3a07c:	andeq	r1, r1, r7, ror r1
   3a080:	andeq	r1, r1, pc, lsr r1
   3a084:	andeq	r1, r1, r7, lsl #2
   3a088:	strheq	r1, [r1], -r7
   3a08c:	andeq	r1, r1, r7, lsr r3
   3a090:	strdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   3a094:	andeq	r1, r1, r7, asr #5
   3a098:	andeq	r1, r1, pc, lsl #5
   3a09c:	andeq	r1, r1, r7, asr r2
   3a0a0:	andeq	r1, r1, pc, lsl r2
   3a0a4:	andeq	r1, r1, pc, rrx

0003a0a8 <flatcc_json_printer_int8@@Base>:
   3a0a8:	push	{r4, sl, fp, lr}
   3a0ac:	add	fp, sp, #8
   3a0b0:	ubfx	ip, r1, #7, #1
   3a0b4:	ldr	r4, [r0, #20]
   3a0b8:	cmn	r1, #1
   3a0bc:	movle	r2, #45	; 0x2d
   3a0c0:	rsble	r1, r1, #0
   3a0c4:	strble	r2, [r4], #1
   3a0c8:	uxtb	r2, r1
   3a0cc:	cmp	r2, #100	; 0x64
   3a0d0:	bcc	3a11c <flatcc_json_printer_int8@@Base+0x74>
   3a0d4:	mov	r1, #0
   3a0d8:	strb	r1, [r4, #3]
   3a0dc:	movw	r1, #34079	; 0x851f
   3a0e0:	movt	r1, #20971	; 0x51eb
   3a0e4:	umull	r1, lr, r2, r1
   3a0e8:	mov	r1, #48	; 0x30
   3a0ec:	orr	r1, r1, lr, lsr #5
   3a0f0:	lsr	lr, lr, #5
   3a0f4:	strb	r1, [r4]
   3a0f8:	mov	r1, #100	; 0x64
   3a0fc:	mls	r1, lr, r1, r2
   3a100:	ldr	r2, [pc, #128]	; 3a188 <flatcc_json_printer_int8@@Base+0xe0>
   3a104:	add	r2, pc, r2
   3a108:	add	r1, r2, r1, lsl #1
   3a10c:	ldrh	r1, [r1]
   3a110:	strh	r1, [r4, #1]
   3a114:	mov	r1, #3
   3a118:	b	3a174 <flatcc_json_printer_int8@@Base+0xcc>
   3a11c:	cmp	r2, #10
   3a120:	bcc	3a160 <flatcc_json_printer_int8@@Base+0xb8>
   3a124:	mov	r1, #0
   3a128:	strb	r1, [r4, #2]
   3a12c:	movw	r1, #34079	; 0x851f
   3a130:	movt	r1, #20971	; 0x51eb
   3a134:	umull	r1, r3, r2, r1
   3a138:	lsr	r1, r3, #5
   3a13c:	mov	r3, #100	; 0x64
   3a140:	mls	r1, r1, r3, r2
   3a144:	ldr	r2, [pc, #64]	; 3a18c <flatcc_json_printer_int8@@Base+0xe4>
   3a148:	add	r2, pc, r2
   3a14c:	add	r1, r2, r1, lsl #1
   3a150:	ldrh	r1, [r1]
   3a154:	strh	r1, [r4]
   3a158:	mov	r1, #2
   3a15c:	b	3a174 <flatcc_json_printer_int8@@Base+0xcc>
   3a160:	mov	r2, #0
   3a164:	add	r1, r1, #48	; 0x30
   3a168:	strb	r2, [r4, #1]
   3a16c:	strb	r1, [r4]
   3a170:	mov	r1, #1
   3a174:	ldr	r2, [r0, #20]
   3a178:	add	r1, r1, ip
   3a17c:	add	r1, r2, r1
   3a180:	str	r1, [r0, #20]
   3a184:	pop	{r4, sl, fp, pc}
   3a188:	andeq	r0, r1, fp, asr pc
   3a18c:	andeq	r0, r1, r7, lsl pc

0003a190 <flatcc_json_printer_int16@@Base>:
   3a190:	push	{r4, r5, fp, lr}
   3a194:	add	fp, sp, #8
   3a198:	ubfx	r5, r1, #15, #1
   3a19c:	ldr	r2, [r0, #20]
   3a1a0:	cmn	r1, #1
   3a1a4:	mov	r4, r0
   3a1a8:	movle	r0, #45	; 0x2d
   3a1ac:	rsble	r1, r1, #0
   3a1b0:	strble	r0, [r2], #1
   3a1b4:	uxth	r0, r1
   3a1b8:	mov	r1, r2
   3a1bc:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3a1c0:	ldr	r1, [r4, #20]
   3a1c4:	add	r0, r0, r5
   3a1c8:	add	r0, r1, r0
   3a1cc:	str	r0, [r4, #20]
   3a1d0:	pop	{r4, r5, fp, pc}

0003a1d4 <flatcc_json_printer_int32@@Base>:
   3a1d4:	push	{r4, r5, fp, lr}
   3a1d8:	add	fp, sp, #8
   3a1dc:	mov	r2, r1
   3a1e0:	lsr	r5, r1, #31
   3a1e4:	ldr	r1, [r0, #20]
   3a1e8:	mov	r4, r0
   3a1ec:	cmn	r2, #1
   3a1f0:	movle	r0, #45	; 0x2d
   3a1f4:	rsble	r2, r2, #0
   3a1f8:	strble	r0, [r1], #1
   3a1fc:	mov	r0, r2
   3a200:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3a204:	ldr	r1, [r4, #20]
   3a208:	add	r0, r0, r5
   3a20c:	add	r0, r1, r0
   3a210:	str	r0, [r4, #20]
   3a214:	pop	{r4, r5, fp, pc}

0003a218 <flatcc_json_printer_int64@@Base>:
   3a218:	push	{r4, r5, fp, lr}
   3a21c:	add	fp, sp, #8
   3a220:	mov	r1, r3
   3a224:	mov	r3, r2
   3a228:	ldr	r2, [r0, #20]
   3a22c:	mov	r4, r0
   3a230:	lsr	r5, r1, #31
   3a234:	cmn	r1, #1
   3a238:	bgt	3a24c <flatcc_json_printer_int64@@Base+0x34>
   3a23c:	mov	r0, #45	; 0x2d
   3a240:	rsbs	r3, r3, #0
   3a244:	strb	r0, [r2], #1
   3a248:	rsc	r1, r1, #0
   3a24c:	mov	r0, r3
   3a250:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3a254:	ldr	r1, [r4, #20]
   3a258:	add	r0, r0, r5
   3a25c:	add	r0, r1, r0
   3a260:	str	r0, [r4, #20]
   3a264:	pop	{r4, r5, fp, pc}

0003a268 <flatcc_json_printer_float@@Base>:
   3a268:	push	{r4, sl, fp, lr}
   3a26c:	add	fp, sp, #8
   3a270:	mov	r4, r0
   3a274:	ldr	r0, [r0, #20]
   3a278:	vcvt.f64.f32	d0, s0
   3a27c:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a280:	ldr	r1, [r4, #20]
   3a284:	add	r0, r1, r0
   3a288:	str	r0, [r4, #20]
   3a28c:	pop	{r4, sl, fp, pc}

0003a290 <flatcc_json_printer_double@@Base>:
   3a290:	push	{r4, sl, fp, lr}
   3a294:	add	fp, sp, #8
   3a298:	mov	r4, r0
   3a29c:	ldr	r0, [r0, #20]
   3a2a0:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3a2a4:	ldr	r1, [r4, #20]
   3a2a8:	add	r0, r1, r0
   3a2ac:	str	r0, [r4, #20]
   3a2b0:	pop	{r4, sl, fp, pc}

0003a2b4 <flatcc_json_printer_enum@@Base>:
   3a2b4:	push	{r4, r5, r6, r7, fp, lr}
   3a2b8:	add	fp, sp, #16
   3a2bc:	mov	r4, r0
   3a2c0:	ldr	r0, [r0, #20]
   3a2c4:	mov	r6, r1
   3a2c8:	mov	r1, #34	; 0x22
   3a2cc:	mov	r5, r2
   3a2d0:	strb	r1, [r0]
   3a2d4:	ldrb	r2, [r4, #26]
   3a2d8:	ldr	r0, [r4, #20]
   3a2dc:	ldr	r1, [r4, #16]
   3a2e0:	cmp	r2, #0
   3a2e4:	addeq	r0, r0, #1
   3a2e8:	add	r2, r0, r5
   3a2ec:	str	r0, [r4, #20]
   3a2f0:	cmp	r2, r1
   3a2f4:	bcc	3a368 <flatcc_json_printer_enum@@Base+0xb4>
   3a2f8:	cmp	r0, r1
   3a2fc:	bcc	3a318 <flatcc_json_printer_enum@@Base+0x64>
   3a300:	ldr	r2, [r4, #44]	; 0x2c
   3a304:	mov	r0, r4
   3a308:	mov	r1, #0
   3a30c:	blx	r2
   3a310:	ldr	r1, [r4, #16]
   3a314:	ldr	r0, [r4, #20]
   3a318:	sub	r7, r1, r0
   3a31c:	cmp	r7, r5
   3a320:	bcs	3a368 <flatcc_json_printer_enum@@Base+0xb4>
   3a324:	mov	r1, r6
   3a328:	mov	r2, r7
   3a32c:	bl	14e58 <memcpy@plt>
   3a330:	ldr	r0, [r4, #20]
   3a334:	ldr	r2, [r4, #44]	; 0x2c
   3a338:	mov	r1, #0
   3a33c:	add	r0, r0, r7
   3a340:	str	r0, [r4, #20]
   3a344:	mov	r0, r4
   3a348:	blx	r2
   3a34c:	ldr	r1, [r4, #16]
   3a350:	ldr	r0, [r4, #20]
   3a354:	sub	r5, r5, r7
   3a358:	add	r6, r6, r7
   3a35c:	sub	r7, r1, r0
   3a360:	cmp	r5, r7
   3a364:	bhi	3a324 <flatcc_json_printer_enum@@Base+0x70>
   3a368:	mov	r1, r6
   3a36c:	mov	r2, r5
   3a370:	bl	14e58 <memcpy@plt>
   3a374:	ldr	r0, [r4, #20]
   3a378:	add	r1, r0, r5
   3a37c:	str	r1, [r4, #20]
   3a380:	mov	r1, #34	; 0x22
   3a384:	strb	r1, [r0, r5]
   3a388:	ldrb	r0, [r4, #26]
   3a38c:	ldr	r1, [r4, #20]
   3a390:	cmp	r0, #0
   3a394:	addeq	r1, r1, #1
   3a398:	str	r1, [r4, #20]
   3a39c:	pop	{r4, r5, r6, r7, fp, pc}

0003a3a0 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3a3a0:	ldrb	ip, [r0, #26]
   3a3a4:	ldr	r3, [r0, #20]
   3a3a8:	mov	r2, #34	; 0x22
   3a3ac:	cmp	r1, #0
   3a3b0:	movwne	r1, #1
   3a3b4:	strb	r2, [r3]
   3a3b8:	clz	r2, ip
   3a3bc:	lsr	r2, r2, #5
   3a3c0:	orr	r1, r1, r2
   3a3c4:	ldr	r2, [r0, #20]
   3a3c8:	add	r1, r2, r1
   3a3cc:	str	r1, [r0, #20]
   3a3d0:	bx	lr

0003a3d4 <flatcc_json_printer_enum_flag@@Base>:
   3a3d4:	push	{r4, r5, r6, r7, fp, lr}
   3a3d8:	add	fp, sp, #16
   3a3dc:	mov	r5, r0
   3a3e0:	ldr	r0, [r0, #20]
   3a3e4:	mov	r6, r2
   3a3e8:	mov	r2, #32
   3a3ec:	cmp	r1, #0
   3a3f0:	mov	r4, r3
   3a3f4:	strb	r2, [r0]
   3a3f8:	ldr	r0, [r5, #20]
   3a3fc:	ldr	r2, [r5, #16]
   3a400:	addgt	r0, r0, #1
   3a404:	add	r1, r0, r3
   3a408:	str	r0, [r5, #20]
   3a40c:	cmp	r1, r2
   3a410:	bcc	3a484 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3a414:	cmp	r0, r2
   3a418:	bcc	3a434 <flatcc_json_printer_enum_flag@@Base+0x60>
   3a41c:	ldr	r2, [r5, #44]	; 0x2c
   3a420:	mov	r0, r5
   3a424:	mov	r1, #0
   3a428:	blx	r2
   3a42c:	ldr	r2, [r5, #16]
   3a430:	ldr	r0, [r5, #20]
   3a434:	sub	r7, r2, r0
   3a438:	cmp	r7, r4
   3a43c:	bcs	3a484 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3a440:	mov	r1, r6
   3a444:	mov	r2, r7
   3a448:	bl	14e58 <memcpy@plt>
   3a44c:	ldr	r0, [r5, #20]
   3a450:	ldr	r2, [r5, #44]	; 0x2c
   3a454:	mov	r1, #0
   3a458:	add	r0, r0, r7
   3a45c:	str	r0, [r5, #20]
   3a460:	mov	r0, r5
   3a464:	blx	r2
   3a468:	ldr	r1, [r5, #16]
   3a46c:	ldr	r0, [r5, #20]
   3a470:	sub	r4, r4, r7
   3a474:	add	r6, r6, r7
   3a478:	sub	r7, r1, r0
   3a47c:	cmp	r4, r7
   3a480:	bhi	3a440 <flatcc_json_printer_enum_flag@@Base+0x6c>
   3a484:	mov	r1, r6
   3a488:	mov	r2, r4
   3a48c:	bl	14e58 <memcpy@plt>
   3a490:	ldr	r0, [r5, #20]
   3a494:	add	r0, r0, r4
   3a498:	str	r0, [r5, #20]
   3a49c:	pop	{r4, r5, r6, r7, fp, pc}

0003a4a0 <flatcc_json_printer_string_field@@Base>:
   3a4a0:	push	{r4, r5, fp, lr}
   3a4a4:	add	fp, sp, #8
   3a4a8:	mov	r4, r0
   3a4ac:	mov	r0, #4
   3a4b0:	add	r0, r0, r2, lsl #1
   3a4b4:	ldr	r2, [r1, #8]
   3a4b8:	cmp	r0, r2
   3a4bc:	popge	{r4, r5, fp, pc}
   3a4c0:	ldr	r2, [r1, #4]
   3a4c4:	add	r0, r2, r0
   3a4c8:	ldrh	r0, [r0]
   3a4cc:	cmp	r0, #0
   3a4d0:	ldrne	r2, [r1]
   3a4d4:	addsne	r5, r2, r0
   3a4d8:	bne	3a4e0 <flatcc_json_printer_string_field@@Base+0x40>
   3a4dc:	pop	{r4, r5, fp, pc}
   3a4e0:	ldr	ip, [r1, #16]
   3a4e4:	ldr	r2, [fp, #8]
   3a4e8:	add	r0, ip, #1
   3a4ec:	cmp	ip, #0
   3a4f0:	str	r0, [r1, #16]
   3a4f4:	ldrne	r0, [r4, #20]
   3a4f8:	addne	r1, r0, #1
   3a4fc:	strne	r1, [r4, #20]
   3a500:	movne	r1, #44	; 0x2c
   3a504:	strbne	r1, [r0]
   3a508:	mov	r0, r4
   3a50c:	mov	r1, r3
   3a510:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3a514:	ldr	r0, [r5]
   3a518:	ldr	r2, [r5, r0]!
   3a51c:	mov	r0, r4
   3a520:	add	r1, r5, #4
   3a524:	pop	{r4, r5, fp, lr}
   3a528:	b	3908c <flatcc_json_printer_string@@Base+0x4>
   3a52c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3a530:	add	fp, sp, #24
   3a534:	mov	r4, r0
   3a538:	mov	r6, r1
   3a53c:	ldr	r0, [r0, #20]
   3a540:	mov	r8, r2
   3a544:	ldrb	r1, [r4, #25]
   3a548:	cmp	r1, #0
   3a54c:	beq	3a60c <flatcc_json_printer_string_field@@Base+0x16c>
   3a550:	add	r1, r0, #1
   3a554:	mov	r9, r4
   3a558:	str	r1, [r4, #20]
   3a55c:	mov	r1, #10
   3a560:	strb	r1, [r0]
   3a564:	ldr	r1, [r9, #16]!
   3a568:	ldr	r0, [r4, #20]
   3a56c:	ldrb	r2, [r9, #9]
   3a570:	ldr	r3, [r9, #16]
   3a574:	mla	r5, r3, r2, r0
   3a578:	mul	r7, r3, r2
   3a57c:	cmp	r5, r1
   3a580:	bls	3a5f0 <flatcc_json_printer_string_field@@Base+0x150>
   3a584:	cmp	r0, r1
   3a588:	bcc	3a5a4 <flatcc_json_printer_string_field@@Base+0x104>
   3a58c:	ldr	r2, [r4, #44]	; 0x2c
   3a590:	mov	r0, r4
   3a594:	mov	r1, #0
   3a598:	blx	r2
   3a59c:	ldr	r1, [r4, #16]
   3a5a0:	ldr	r0, [r4, #20]
   3a5a4:	sub	r5, r1, r0
   3a5a8:	cmp	r5, r7
   3a5ac:	bcs	3a5f0 <flatcc_json_printer_string_field@@Base+0x150>
   3a5b0:	mov	r1, #32
   3a5b4:	mov	r2, r5
   3a5b8:	bl	14ee8 <memset@plt>
   3a5bc:	ldr	r0, [r4, #20]
   3a5c0:	ldr	r2, [r4, #44]	; 0x2c
   3a5c4:	mov	r1, #0
   3a5c8:	add	r0, r0, r5
   3a5cc:	str	r0, [r4, #20]
   3a5d0:	mov	r0, r4
   3a5d4:	blx	r2
   3a5d8:	ldr	r1, [r4, #16]
   3a5dc:	ldr	r0, [r4, #20]
   3a5e0:	sub	r7, r7, r5
   3a5e4:	sub	r5, r1, r0
   3a5e8:	cmp	r7, r5
   3a5ec:	bhi	3a5b0 <flatcc_json_printer_string_field@@Base+0x110>
   3a5f0:	mov	r1, #32
   3a5f4:	mov	r2, r7
   3a5f8:	bl	14ee8 <memset@plt>
   3a5fc:	ldr	r0, [r4, #20]
   3a600:	add	r0, r0, r7
   3a604:	str	r0, [r4, #20]
   3a608:	b	3a630 <flatcc_json_printer_string_field@@Base+0x190>
   3a60c:	mov	r9, r4
   3a610:	ldr	r1, [r9, #16]!
   3a614:	cmp	r0, r1
   3a618:	bcc	3a630 <flatcc_json_printer_string_field@@Base+0x190>
   3a61c:	ldr	r2, [r4, #44]	; 0x2c
   3a620:	mov	r0, r4
   3a624:	mov	r1, #0
   3a628:	blx	r2
   3a62c:	ldr	r0, [r4, #20]
   3a630:	mov	r1, #34	; 0x22
   3a634:	strb	r1, [r0]
   3a638:	ldrb	r2, [r4, #26]
   3a63c:	ldr	r0, [r4, #20]
   3a640:	ldr	r1, [r4, #16]
   3a644:	cmp	r2, #0
   3a648:	addeq	r0, r0, #1
   3a64c:	add	r2, r0, r8
   3a650:	str	r0, [r4, #20]
   3a654:	cmp	r2, r1
   3a658:	bcc	3a6cc <flatcc_json_printer_string_field@@Base+0x22c>
   3a65c:	cmp	r0, r1
   3a660:	bcc	3a67c <flatcc_json_printer_string_field@@Base+0x1dc>
   3a664:	ldr	r2, [r4, #44]	; 0x2c
   3a668:	mov	r0, r4
   3a66c:	mov	r1, #0
   3a670:	blx	r2
   3a674:	ldr	r0, [r4, #20]
   3a678:	ldr	r1, [r9]
   3a67c:	sub	r7, r1, r0
   3a680:	cmp	r7, r8
   3a684:	bcs	3a6cc <flatcc_json_printer_string_field@@Base+0x22c>
   3a688:	mov	r1, r6
   3a68c:	mov	r2, r7
   3a690:	bl	14e58 <memcpy@plt>
   3a694:	ldr	r0, [r4, #20]
   3a698:	ldr	r2, [r4, #44]	; 0x2c
   3a69c:	mov	r1, #0
   3a6a0:	add	r0, r0, r7
   3a6a4:	str	r0, [r4, #20]
   3a6a8:	mov	r0, r4
   3a6ac:	blx	r2
   3a6b0:	ldr	r0, [r4, #20]
   3a6b4:	ldr	r1, [r9]
   3a6b8:	sub	r8, r8, r7
   3a6bc:	add	r6, r6, r7
   3a6c0:	sub	r7, r1, r0
   3a6c4:	cmp	r8, r7
   3a6c8:	bhi	3a688 <flatcc_json_printer_string_field@@Base+0x1e8>
   3a6cc:	mov	r1, r6
   3a6d0:	mov	r2, r8
   3a6d4:	bl	14e58 <memcpy@plt>
   3a6d8:	ldr	r0, [r4, #20]
   3a6dc:	add	r1, r0, r8
   3a6e0:	str	r1, [r4, #20]
   3a6e4:	mov	r1, #34	; 0x22
   3a6e8:	strb	r1, [r0, r8]
   3a6ec:	ldrb	r0, [r4, #26]
   3a6f0:	ldr	r1, [r4, #20]
   3a6f4:	cmp	r0, #0
   3a6f8:	addeq	r1, r1, #1
   3a6fc:	add	r0, r1, #1
   3a700:	str	r0, [r4, #20]
   3a704:	mov	r0, #58	; 0x3a
   3a708:	strb	r0, [r1]
   3a70c:	mov	r1, #32
   3a710:	ldr	r0, [r4, #20]
   3a714:	strb	r1, [r0]
   3a718:	ldrb	r0, [r4, #25]
   3a71c:	ldr	r1, [r4, #20]
   3a720:	cmp	r0, #0
   3a724:	addne	r1, r1, #1
   3a728:	str	r1, [r4, #20]
   3a72c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003a730 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3a730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a734:	add	fp, sp, #28
   3a738:	sub	sp, sp, #12
   3a73c:	mov	r4, r0
   3a740:	mov	r0, #4
   3a744:	add	r0, r0, r2, lsl #1
   3a748:	ldr	r2, [r1, #8]
   3a74c:	cmp	r0, r2
   3a750:	bge	3a8ec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   3a754:	ldr	r2, [r1, #4]
   3a758:	add	r0, r2, r0
   3a75c:	ldrh	r0, [r0]
   3a760:	cmp	r0, #0
   3a764:	beq	3a8ec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   3a768:	ldr	r5, [fp, #12]
   3a76c:	ldr	r2, [r1]
   3a770:	cmp	r5, #0
   3a774:	add	r6, r2, r0
   3a778:	movwne	r5, #1
   3a77c:	cmp	r6, #0
   3a780:	beq	3a8ec <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1bc>
   3a784:	ldr	r0, [r1, #16]
   3a788:	ldr	r2, [fp, #8]
   3a78c:	add	r7, r0, #1
   3a790:	cmp	r0, #0
   3a794:	str	r7, [r1, #16]
   3a798:	ldrne	r0, [r4, #20]
   3a79c:	addne	r1, r0, #1
   3a7a0:	strne	r1, [r4, #20]
   3a7a4:	movne	r1, #44	; 0x2c
   3a7a8:	strbne	r1, [r0]
   3a7ac:	mov	r0, r4
   3a7b0:	mov	r1, r3
   3a7b4:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3a7b8:	ldr	r0, [r6]
   3a7bc:	ldr	r0, [r6, r0]!
   3a7c0:	str	r0, [sp, #8]
   3a7c4:	ldr	r0, [r4, #20]
   3a7c8:	add	r1, r0, #1
   3a7cc:	str	r1, [r4, #20]
   3a7d0:	mov	r1, #34	; 0x22
   3a7d4:	strb	r1, [r0]
   3a7d8:	movw	r1, #43691	; 0xaaab
   3a7dc:	ldr	r0, [sp, #8]
   3a7e0:	movt	r1, #43690	; 0xaaaa
   3a7e4:	lsl	r0, r0, #2
   3a7e8:	umull	r0, r1, r0, r1
   3a7ec:	mov	r0, #3
   3a7f0:	add	r0, r0, r1, lsr #1
   3a7f4:	ldr	r1, [r4, #16]
   3a7f8:	bic	r7, r0, #3
   3a7fc:	ldr	r0, [r4, #20]
   3a800:	add	r2, r0, r7
   3a804:	cmp	r2, r1
   3a808:	bcc	3a828 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   3a80c:	ldr	r2, [r4, #44]	; 0x2c
   3a810:	mov	r0, r4
   3a814:	mov	r1, #0
   3a818:	blx	r2
   3a81c:	ldr	r0, [r4, #20]
   3a820:	ldr	r1, [r4, #16]
   3a824:	add	r2, r0, r7
   3a828:	add	r6, r6, #4
   3a82c:	cmp	r2, r1
   3a830:	bls	3a8c4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x194>
   3a834:	add	r9, sp, #4
   3a838:	mov	sl, #3
   3a83c:	sub	r1, r1, r0
   3a840:	bic	r7, r1, #3
   3a844:	add	r1, r7, r7, lsl #1
   3a848:	cmp	r1, #0
   3a84c:	beq	3a8f4 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c4>
   3a850:	lsr	r8, r1, #2
   3a854:	mov	r1, r6
   3a858:	mov	r2, r9
   3a85c:	mov	r3, r5
   3a860:	str	r8, [sp, #4]
   3a864:	bl	44d64 <flatcc_json_printer_clear@@Base+0x40>
   3a868:	ldr	r0, [r4, #20]
   3a86c:	mov	r1, #0
   3a870:	add	r0, r0, r7
   3a874:	str	r0, [r4, #20]
   3a878:	ldr	r0, [sp, #8]
   3a87c:	sub	r0, r0, r8
   3a880:	str	r0, [sp, #8]
   3a884:	mov	r0, r4
   3a888:	ldr	r2, [r4, #44]	; 0x2c
   3a88c:	blx	r2
   3a890:	ldr	r0, [sp, #8]
   3a894:	movw	r1, #43691	; 0xaaab
   3a898:	add	r6, r6, r8
   3a89c:	movt	r1, #43690	; 0xaaaa
   3a8a0:	lsl	r0, r0, #2
   3a8a4:	umull	r0, r1, r0, r1
   3a8a8:	add	r0, sl, r1, lsr #1
   3a8ac:	ldr	r1, [r4, #16]
   3a8b0:	bic	r7, r0, #3
   3a8b4:	ldr	r0, [r4, #20]
   3a8b8:	add	r2, r0, r7
   3a8bc:	cmp	r2, r1
   3a8c0:	bhi	3a83c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x10c>
   3a8c4:	orr	r3, r5, #128	; 0x80
   3a8c8:	add	r2, sp, #8
   3a8cc:	mov	r1, r6
   3a8d0:	bl	44d64 <flatcc_json_printer_clear@@Base+0x40>
   3a8d4:	ldr	r0, [r4, #20]
   3a8d8:	add	r1, r0, r7
   3a8dc:	add	r1, r1, #1
   3a8e0:	str	r1, [r4, #20]
   3a8e4:	mov	r1, #34	; 0x22
   3a8e8:	strb	r1, [r0, r7]
   3a8ec:	sub	sp, fp, #28
   3a8f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a8f4:	ldr	r0, [pc, #24]	; 3a914 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e4>
   3a8f8:	ldr	r1, [pc, #24]	; 3a918 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e8>
   3a8fc:	ldr	r3, [pc, #24]	; 3a91c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   3a900:	movw	r2, #277	; 0x115
   3a904:	add	r0, pc, r0
   3a908:	add	r1, pc, r1
   3a90c:	add	r3, pc, r3
   3a910:	bl	14f3c <__assert_fail@plt>
   3a914:	andeq	r0, r1, r4, lsr #16
   3a918:	andeq	r0, r1, r4, asr r4
   3a91c:	andeq	r0, r1, r2, lsr #16

0003a920 <flatcc_json_printer_uint8_field@@Base>:
   3a920:	push	{r4, r5, r6, sl, fp, lr}
   3a924:	add	fp, sp, #16
   3a928:	mov	r6, r0
   3a92c:	mov	r0, #4
   3a930:	ldr	r5, [r1, #8]
   3a934:	add	r2, r0, r2, lsl #1
   3a938:	ldr	r0, [fp, #12]
   3a93c:	cmp	r2, r5
   3a940:	bge	3a960 <flatcc_json_printer_uint8_field@@Base+0x40>
   3a944:	ldr	r5, [r1, #4]
   3a948:	add	r2, r5, r2
   3a94c:	ldrh	r2, [r2]
   3a950:	cmp	r2, #0
   3a954:	ldrne	r5, [r1]
   3a958:	addsne	r2, r5, r2
   3a95c:	bne	3aa58 <flatcc_json_printer_uint8_field@@Base+0x138>
   3a960:	ldrb	r2, [r6, #29]
   3a964:	mov	r5, r0
   3a968:	cmp	r2, #0
   3a96c:	popeq	{r4, r5, r6, sl, fp, pc}
   3a970:	ldr	r0, [r1, #16]
   3a974:	ldr	r2, [fp, #8]
   3a978:	add	r4, r0, #1
   3a97c:	cmp	r0, #0
   3a980:	str	r4, [r1, #16]
   3a984:	ldrne	r0, [r6, #20]
   3a988:	addne	r1, r0, #1
   3a98c:	strne	r1, [r6, #20]
   3a990:	movne	r1, #44	; 0x2c
   3a994:	strbne	r1, [r0]
   3a998:	mov	r0, r6
   3a99c:	mov	r1, r3
   3a9a0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3a9a4:	ldr	r0, [r6, #20]
   3a9a8:	mov	r1, #0
   3a9ac:	cmp	r5, #100	; 0x64
   3a9b0:	bcc	3a9f8 <flatcc_json_printer_uint8_field@@Base+0xd8>
   3a9b4:	strb	r1, [r0, #3]
   3a9b8:	movw	r1, #34079	; 0x851f
   3a9bc:	movt	r1, #20971	; 0x51eb
   3a9c0:	umull	r1, r2, r5, r1
   3a9c4:	mov	r1, #48	; 0x30
   3a9c8:	orr	r1, r1, r2, lsr #5
   3a9cc:	strb	r1, [r0]
   3a9d0:	lsr	r1, r2, #5
   3a9d4:	mov	r2, #100	; 0x64
   3a9d8:	mls	r1, r1, r2, r5
   3a9dc:	ldr	r2, [pc, #148]	; 3aa78 <flatcc_json_printer_uint8_field@@Base+0x158>
   3a9e0:	add	r2, pc, r2
   3a9e4:	add	r1, r2, r1, lsl #1
   3a9e8:	ldrh	r1, [r1]
   3a9ec:	strh	r1, [r0, #1]
   3a9f0:	mov	r0, #3
   3a9f4:	b	3aa48 <flatcc_json_printer_uint8_field@@Base+0x128>
   3a9f8:	cmp	r5, #10
   3a9fc:	bcc	3aa38 <flatcc_json_printer_uint8_field@@Base+0x118>
   3aa00:	strb	r1, [r0, #2]
   3aa04:	movw	r1, #34079	; 0x851f
   3aa08:	movt	r1, #20971	; 0x51eb
   3aa0c:	umull	r1, r2, r5, r1
   3aa10:	lsr	r1, r2, #5
   3aa14:	mov	r2, #100	; 0x64
   3aa18:	mls	r1, r1, r2, r5
   3aa1c:	ldr	r2, [pc, #88]	; 3aa7c <flatcc_json_printer_uint8_field@@Base+0x15c>
   3aa20:	add	r2, pc, r2
   3aa24:	add	r1, r2, r1, lsl #1
   3aa28:	ldrh	r1, [r1]
   3aa2c:	strh	r1, [r0]
   3aa30:	mov	r0, #2
   3aa34:	b	3aa48 <flatcc_json_printer_uint8_field@@Base+0x128>
   3aa38:	strb	r1, [r0, #1]
   3aa3c:	add	r1, r5, #48	; 0x30
   3aa40:	strb	r1, [r0]
   3aa44:	mov	r0, #1
   3aa48:	ldr	r1, [r6, #20]
   3aa4c:	add	r0, r1, r0
   3aa50:	str	r0, [r6, #20]
   3aa54:	pop	{r4, r5, r6, sl, fp, pc}
   3aa58:	ldrb	r5, [r2]
   3aa5c:	cmp	r5, r0
   3aa60:	bne	3a970 <flatcc_json_printer_uint8_field@@Base+0x50>
   3aa64:	ldrb	r2, [r6, #28]
   3aa68:	mov	r5, r0
   3aa6c:	cmp	r2, #0
   3aa70:	bne	3aa54 <flatcc_json_printer_uint8_field@@Base+0x134>
   3aa74:	b	3a970 <flatcc_json_printer_uint8_field@@Base+0x50>
   3aa78:	andeq	r0, r1, pc, ror r6
   3aa7c:	andeq	r0, r1, pc, lsr r6

0003aa80 <flatcc_json_printer_uint16_field@@Base>:
   3aa80:	push	{r4, r5, r6, sl, fp, lr}
   3aa84:	add	fp, sp, #16
   3aa88:	mov	r4, r0
   3aa8c:	mov	r0, #4
   3aa90:	ldr	r5, [r1, #8]
   3aa94:	add	r2, r0, r2, lsl #1
   3aa98:	ldr	r0, [fp, #12]
   3aa9c:	cmp	r2, r5
   3aaa0:	bge	3aac0 <flatcc_json_printer_uint16_field@@Base+0x40>
   3aaa4:	ldr	r5, [r1, #4]
   3aaa8:	add	r2, r5, r2
   3aaac:	ldrh	r2, [r2]
   3aab0:	cmp	r2, #0
   3aab4:	ldrne	r5, [r1]
   3aab8:	addsne	r2, r5, r2
   3aabc:	bne	3ab20 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3aac0:	ldrb	r2, [r4, #29]
   3aac4:	mov	r6, r0
   3aac8:	cmp	r2, #0
   3aacc:	popeq	{r4, r5, r6, sl, fp, pc}
   3aad0:	ldr	r0, [r1, #16]
   3aad4:	ldr	r2, [fp, #8]
   3aad8:	add	r5, r0, #1
   3aadc:	cmp	r0, #0
   3aae0:	str	r5, [r1, #16]
   3aae4:	ldrne	r0, [r4, #20]
   3aae8:	addne	r1, r0, #1
   3aaec:	strne	r1, [r4, #20]
   3aaf0:	movne	r1, #44	; 0x2c
   3aaf4:	strbne	r1, [r0]
   3aaf8:	mov	r0, r4
   3aafc:	mov	r1, r3
   3ab00:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3ab04:	ldr	r1, [r4, #20]
   3ab08:	mov	r0, r6
   3ab0c:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3ab10:	ldr	r1, [r4, #20]
   3ab14:	add	r0, r1, r0
   3ab18:	str	r0, [r4, #20]
   3ab1c:	pop	{r4, r5, r6, sl, fp, pc}
   3ab20:	ldrh	r6, [r2]
   3ab24:	cmp	r6, r0
   3ab28:	bne	3aad0 <flatcc_json_printer_uint16_field@@Base+0x50>
   3ab2c:	ldrb	r2, [r4, #28]
   3ab30:	mov	r6, r0
   3ab34:	cmp	r2, #0
   3ab38:	bne	3ab1c <flatcc_json_printer_uint16_field@@Base+0x9c>
   3ab3c:	b	3aad0 <flatcc_json_printer_uint16_field@@Base+0x50>

0003ab40 <flatcc_json_printer_uint32_field@@Base>:
   3ab40:	push	{r4, r5, r6, sl, fp, lr}
   3ab44:	add	fp, sp, #16
   3ab48:	mov	r4, r0
   3ab4c:	mov	r0, #4
   3ab50:	ldr	r5, [r1, #8]
   3ab54:	add	r2, r0, r2, lsl #1
   3ab58:	ldr	r0, [fp, #12]
   3ab5c:	cmp	r2, r5
   3ab60:	bge	3ab80 <flatcc_json_printer_uint32_field@@Base+0x40>
   3ab64:	ldr	r5, [r1, #4]
   3ab68:	add	r2, r5, r2
   3ab6c:	ldrh	r2, [r2]
   3ab70:	cmp	r2, #0
   3ab74:	ldrne	r5, [r1]
   3ab78:	addsne	r2, r5, r2
   3ab7c:	bne	3abe0 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3ab80:	ldrb	r2, [r4, #29]
   3ab84:	mov	r6, r0
   3ab88:	cmp	r2, #0
   3ab8c:	popeq	{r4, r5, r6, sl, fp, pc}
   3ab90:	ldr	r0, [r1, #16]
   3ab94:	ldr	r2, [fp, #8]
   3ab98:	add	r5, r0, #1
   3ab9c:	cmp	r0, #0
   3aba0:	str	r5, [r1, #16]
   3aba4:	ldrne	r0, [r4, #20]
   3aba8:	addne	r1, r0, #1
   3abac:	strne	r1, [r4, #20]
   3abb0:	movne	r1, #44	; 0x2c
   3abb4:	strbne	r1, [r0]
   3abb8:	mov	r0, r4
   3abbc:	mov	r1, r3
   3abc0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3abc4:	ldr	r1, [r4, #20]
   3abc8:	mov	r0, r6
   3abcc:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3abd0:	ldr	r1, [r4, #20]
   3abd4:	add	r0, r1, r0
   3abd8:	str	r0, [r4, #20]
   3abdc:	pop	{r4, r5, r6, sl, fp, pc}
   3abe0:	ldr	r6, [r2]
   3abe4:	cmp	r6, r0
   3abe8:	bne	3ab90 <flatcc_json_printer_uint32_field@@Base+0x50>
   3abec:	ldrb	r2, [r4, #28]
   3abf0:	mov	r6, r0
   3abf4:	cmp	r2, #0
   3abf8:	bne	3abdc <flatcc_json_printer_uint32_field@@Base+0x9c>
   3abfc:	b	3ab90 <flatcc_json_printer_uint32_field@@Base+0x50>

0003ac00 <flatcc_json_printer_uint64_field@@Base>:
   3ac00:	push	{r4, r6, r7, r8, fp, lr}
   3ac04:	add	fp, sp, #16
   3ac08:	mov	r4, r0
   3ac0c:	mov	r0, #4
   3ac10:	ldr	r6, [r1, #8]
   3ac14:	ldr	lr, [fp, #20]
   3ac18:	add	r7, r0, r2, lsl #1
   3ac1c:	ldr	r2, [fp, #16]
   3ac20:	cmp	r7, r6
   3ac24:	bge	3ac44 <flatcc_json_printer_uint64_field@@Base+0x44>
   3ac28:	ldr	r6, [r1, #4]
   3ac2c:	add	r7, r6, r7
   3ac30:	ldrh	r7, [r7]
   3ac34:	cmp	r7, #0
   3ac38:	ldrne	r6, [r1]
   3ac3c:	addsne	r7, r6, r7
   3ac40:	bne	3acac <flatcc_json_printer_uint64_field@@Base+0xac>
   3ac44:	ldrb	r0, [r4, #29]
   3ac48:	mov	r8, r2
   3ac4c:	mov	r7, lr
   3ac50:	cmp	r0, #0
   3ac54:	popeq	{r4, r6, r7, r8, fp, pc}
   3ac58:	ldr	r0, [r1, #16]
   3ac5c:	ldr	r2, [fp, #8]
   3ac60:	add	r6, r0, #1
   3ac64:	cmp	r0, #0
   3ac68:	str	r6, [r1, #16]
   3ac6c:	ldrne	r0, [r4, #20]
   3ac70:	addne	r1, r0, #1
   3ac74:	strne	r1, [r4, #20]
   3ac78:	movne	r1, #44	; 0x2c
   3ac7c:	strbne	r1, [r0]
   3ac80:	mov	r0, r4
   3ac84:	mov	r1, r3
   3ac88:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3ac8c:	ldr	r2, [r4, #20]
   3ac90:	mov	r0, r8
   3ac94:	mov	r1, r7
   3ac98:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3ac9c:	ldr	r1, [r4, #20]
   3aca0:	add	r0, r1, r0
   3aca4:	str	r0, [r4, #20]
   3aca8:	pop	{r4, r6, r7, r8, fp, pc}
   3acac:	ldr	r8, [r7]
   3acb0:	ldr	r7, [r7, #4]
   3acb4:	eor	ip, r7, lr
   3acb8:	eor	r0, r8, r2
   3acbc:	orrs	r0, r0, ip
   3acc0:	bne	3ac58 <flatcc_json_printer_uint64_field@@Base+0x58>
   3acc4:	ldrb	r0, [r4, #28]
   3acc8:	mov	r8, r2
   3accc:	mov	r7, lr
   3acd0:	cmp	r0, #0
   3acd4:	bne	3aca8 <flatcc_json_printer_uint64_field@@Base+0xa8>
   3acd8:	b	3ac58 <flatcc_json_printer_uint64_field@@Base+0x58>

0003acdc <flatcc_json_printer_int8_field@@Base>:
   3acdc:	push	{r4, r5, r6, sl, fp, lr}
   3ace0:	add	fp, sp, #16
   3ace4:	mov	r6, r0
   3ace8:	mov	r0, #4
   3acec:	ldr	r5, [r1, #8]
   3acf0:	add	r2, r0, r2, lsl #1
   3acf4:	ldr	r0, [fp, #12]
   3acf8:	cmp	r2, r5
   3acfc:	bge	3ad1c <flatcc_json_printer_int8_field@@Base+0x40>
   3ad00:	ldr	r5, [r1, #4]
   3ad04:	add	r2, r5, r2
   3ad08:	ldrh	r2, [r2]
   3ad0c:	cmp	r2, #0
   3ad10:	ldrne	r5, [r1]
   3ad14:	addsne	r2, r5, r2
   3ad18:	bne	3ae3c <flatcc_json_printer_int8_field@@Base+0x160>
   3ad1c:	ldrb	r2, [r6, #29]
   3ad20:	mov	r5, r0
   3ad24:	cmp	r2, #0
   3ad28:	popeq	{r4, r5, r6, sl, fp, pc}
   3ad2c:	ldr	r0, [r1, #16]
   3ad30:	ldr	r2, [fp, #8]
   3ad34:	add	r4, r0, #1
   3ad38:	cmp	r0, #0
   3ad3c:	str	r4, [r1, #16]
   3ad40:	ldrne	r0, [r6, #20]
   3ad44:	addne	r1, r0, #1
   3ad48:	strne	r1, [r6, #20]
   3ad4c:	movne	r1, #44	; 0x2c
   3ad50:	strbne	r1, [r0]
   3ad54:	mov	r0, r6
   3ad58:	mov	r1, r3
   3ad5c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3ad60:	ubfx	r0, r5, #7, #1
   3ad64:	ldr	r1, [r6, #20]
   3ad68:	sxtb	r2, r5
   3ad6c:	cmn	r2, #1
   3ad70:	movle	r2, #45	; 0x2d
   3ad74:	rsble	r5, r5, #0
   3ad78:	strble	r2, [r1], #1
   3ad7c:	uxtb	r2, r5
   3ad80:	cmp	r2, #100	; 0x64
   3ad84:	bcc	3add0 <flatcc_json_printer_int8_field@@Base+0xf4>
   3ad88:	mov	r3, #0
   3ad8c:	strb	r3, [r1, #3]
   3ad90:	movw	r3, #34079	; 0x851f
   3ad94:	movt	r3, #20971	; 0x51eb
   3ad98:	umull	r3, r5, r2, r3
   3ad9c:	mov	r3, #48	; 0x30
   3ada0:	orr	r3, r3, r5, lsr #5
   3ada4:	strb	r3, [r1]
   3ada8:	lsr	r3, r5, #5
   3adac:	mov	r5, #100	; 0x64
   3adb0:	mls	r2, r3, r5, r2
   3adb4:	ldr	r3, [pc, #164]	; 3ae60 <flatcc_json_printer_int8_field@@Base+0x184>
   3adb8:	add	r3, pc, r3
   3adbc:	add	r2, r3, r2, lsl #1
   3adc0:	ldrh	r2, [r2]
   3adc4:	strh	r2, [r1, #1]
   3adc8:	mov	r1, #3
   3adcc:	b	3ae28 <flatcc_json_printer_int8_field@@Base+0x14c>
   3add0:	cmp	r2, #10
   3add4:	bcc	3ae14 <flatcc_json_printer_int8_field@@Base+0x138>
   3add8:	mov	r3, #0
   3addc:	strb	r3, [r1, #2]
   3ade0:	movw	r3, #34079	; 0x851f
   3ade4:	movt	r3, #20971	; 0x51eb
   3ade8:	umull	r3, r5, r2, r3
   3adec:	lsr	r3, r5, #5
   3adf0:	mov	r5, #100	; 0x64
   3adf4:	mls	r2, r3, r5, r2
   3adf8:	ldr	r3, [pc, #100]	; 3ae64 <flatcc_json_printer_int8_field@@Base+0x188>
   3adfc:	add	r3, pc, r3
   3ae00:	add	r2, r3, r2, lsl #1
   3ae04:	ldrh	r2, [r2]
   3ae08:	strh	r2, [r1]
   3ae0c:	mov	r1, #2
   3ae10:	b	3ae28 <flatcc_json_printer_int8_field@@Base+0x14c>
   3ae14:	mov	r2, #0
   3ae18:	strb	r2, [r1, #1]
   3ae1c:	add	r2, r5, #48	; 0x30
   3ae20:	strb	r2, [r1]
   3ae24:	mov	r1, #1
   3ae28:	add	r0, r1, r0
   3ae2c:	ldr	r1, [r6, #20]
   3ae30:	add	r0, r1, r0
   3ae34:	str	r0, [r6, #20]
   3ae38:	pop	{r4, r5, r6, sl, fp, pc}
   3ae3c:	ldrb	r5, [r2]
   3ae40:	uxtb	r2, r0
   3ae44:	cmp	r5, r2
   3ae48:	bne	3ad2c <flatcc_json_printer_int8_field@@Base+0x50>
   3ae4c:	ldrb	r2, [r6, #28]
   3ae50:	mov	r5, r0
   3ae54:	cmp	r2, #0
   3ae58:	bne	3ae38 <flatcc_json_printer_int8_field@@Base+0x15c>
   3ae5c:	b	3ad2c <flatcc_json_printer_int8_field@@Base+0x50>
   3ae60:	andeq	r0, r1, r7, lsr #5
   3ae64:	andeq	r0, r1, r3, ror #4

0003ae68 <flatcc_json_printer_int16_field@@Base>:
   3ae68:	push	{r4, r5, r6, sl, fp, lr}
   3ae6c:	add	fp, sp, #16
   3ae70:	mov	r4, r0
   3ae74:	mov	r0, #4
   3ae78:	ldr	r6, [r1, #8]
   3ae7c:	add	r2, r0, r2, lsl #1
   3ae80:	ldr	r0, [fp, #12]
   3ae84:	cmp	r2, r6
   3ae88:	bge	3aea8 <flatcc_json_printer_int16_field@@Base+0x40>
   3ae8c:	ldr	r6, [r1, #4]
   3ae90:	add	r2, r6, r2
   3ae94:	ldrh	r2, [r2]
   3ae98:	cmp	r2, #0
   3ae9c:	ldrne	r6, [r1]
   3aea0:	addsne	r2, r6, r2
   3aea4:	bne	3af24 <flatcc_json_printer_int16_field@@Base+0xbc>
   3aea8:	ldrb	r2, [r4, #29]
   3aeac:	mov	r5, r0
   3aeb0:	cmp	r2, #0
   3aeb4:	popeq	{r4, r5, r6, sl, fp, pc}
   3aeb8:	ldr	r0, [r1, #16]
   3aebc:	ldr	r2, [fp, #8]
   3aec0:	add	r6, r0, #1
   3aec4:	cmp	r0, #0
   3aec8:	str	r6, [r1, #16]
   3aecc:	ldrne	r0, [r4, #20]
   3aed0:	addne	r1, r0, #1
   3aed4:	strne	r1, [r4, #20]
   3aed8:	movne	r1, #44	; 0x2c
   3aedc:	strbne	r1, [r0]
   3aee0:	mov	r0, r4
   3aee4:	mov	r1, r3
   3aee8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3aeec:	ubfx	r6, r5, #15, #1
   3aef0:	ldr	r1, [r4, #20]
   3aef4:	sxth	r0, r5
   3aef8:	cmn	r0, #1
   3aefc:	movle	r0, #45	; 0x2d
   3af00:	rsble	r5, r5, #0
   3af04:	strble	r0, [r1], #1
   3af08:	uxth	r0, r5
   3af0c:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3af10:	ldr	r1, [r4, #20]
   3af14:	add	r0, r0, r6
   3af18:	add	r0, r1, r0
   3af1c:	str	r0, [r4, #20]
   3af20:	pop	{r4, r5, r6, sl, fp, pc}
   3af24:	ldrh	r5, [r2]
   3af28:	uxth	r2, r0
   3af2c:	cmp	r5, r2
   3af30:	bne	3aeb8 <flatcc_json_printer_int16_field@@Base+0x50>
   3af34:	ldrb	r2, [r4, #28]
   3af38:	mov	r5, r0
   3af3c:	cmp	r2, #0
   3af40:	bne	3af20 <flatcc_json_printer_int16_field@@Base+0xb8>
   3af44:	b	3aeb8 <flatcc_json_printer_int16_field@@Base+0x50>

0003af48 <flatcc_json_printer_int32_field@@Base>:
   3af48:	push	{r4, r5, r6, sl, fp, lr}
   3af4c:	add	fp, sp, #16
   3af50:	mov	r4, r0
   3af54:	mov	r0, #4
   3af58:	ldr	r6, [r1, #8]
   3af5c:	add	r2, r0, r2, lsl #1
   3af60:	ldr	r0, [fp, #12]
   3af64:	cmp	r2, r6
   3af68:	bge	3af88 <flatcc_json_printer_int32_field@@Base+0x40>
   3af6c:	ldr	r6, [r1, #4]
   3af70:	add	r2, r6, r2
   3af74:	ldrh	r2, [r2]
   3af78:	cmp	r2, #0
   3af7c:	ldrne	r6, [r1]
   3af80:	addsne	r2, r6, r2
   3af84:	bne	3b000 <flatcc_json_printer_int32_field@@Base+0xb8>
   3af88:	ldrb	r2, [r4, #29]
   3af8c:	mov	r5, r0
   3af90:	cmp	r2, #0
   3af94:	popeq	{r4, r5, r6, sl, fp, pc}
   3af98:	ldr	r0, [r1, #16]
   3af9c:	ldr	r2, [fp, #8]
   3afa0:	add	r6, r0, #1
   3afa4:	cmp	r0, #0
   3afa8:	str	r6, [r1, #16]
   3afac:	ldrne	r0, [r4, #20]
   3afb0:	addne	r1, r0, #1
   3afb4:	strne	r1, [r4, #20]
   3afb8:	movne	r1, #44	; 0x2c
   3afbc:	strbne	r1, [r0]
   3afc0:	mov	r0, r4
   3afc4:	mov	r1, r3
   3afc8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3afcc:	ldr	r1, [r4, #20]
   3afd0:	cmn	r5, #1
   3afd4:	lsr	r6, r5, #31
   3afd8:	movle	r0, #45	; 0x2d
   3afdc:	rsble	r5, r5, #0
   3afe0:	strble	r0, [r1], #1
   3afe4:	mov	r0, r5
   3afe8:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3afec:	ldr	r1, [r4, #20]
   3aff0:	add	r0, r0, r6
   3aff4:	add	r0, r1, r0
   3aff8:	str	r0, [r4, #20]
   3affc:	pop	{r4, r5, r6, sl, fp, pc}
   3b000:	ldr	r5, [r2]
   3b004:	cmp	r5, r0
   3b008:	bne	3af98 <flatcc_json_printer_int32_field@@Base+0x50>
   3b00c:	ldrb	r2, [r4, #28]
   3b010:	mov	r5, r0
   3b014:	cmp	r2, #0
   3b018:	bne	3affc <flatcc_json_printer_int32_field@@Base+0xb4>
   3b01c:	b	3af98 <flatcc_json_printer_int32_field@@Base+0x50>

0003b020 <flatcc_json_printer_int64_field@@Base>:
   3b020:	push	{r4, r5, r6, r7, fp, lr}
   3b024:	add	fp, sp, #16
   3b028:	mov	r4, r0
   3b02c:	mov	r0, #4
   3b030:	ldr	r6, [r1, #8]
   3b034:	add	r7, r0, r2, lsl #1
   3b038:	ldr	r0, [fp, #20]
   3b03c:	ldr	r2, [fp, #16]
   3b040:	cmp	r7, r6
   3b044:	bge	3b064 <flatcc_json_printer_int64_field@@Base+0x44>
   3b048:	ldr	r6, [r1, #4]
   3b04c:	add	r7, r6, r7
   3b050:	ldrh	r7, [r7]
   3b054:	cmp	r7, #0
   3b058:	ldrne	r6, [r1]
   3b05c:	addsne	r7, r6, r7
   3b060:	bne	3b0ec <flatcc_json_printer_int64_field@@Base+0xcc>
   3b064:	ldrb	r7, [r4, #29]
   3b068:	mov	r6, r2
   3b06c:	cmp	r7, #0
   3b070:	mov	r7, r0
   3b074:	popeq	{r4, r5, r6, r7, fp, pc}
   3b078:	ldr	r0, [r1, #16]
   3b07c:	ldr	r2, [fp, #8]
   3b080:	add	r5, r0, #1
   3b084:	cmp	r0, #0
   3b088:	str	r5, [r1, #16]
   3b08c:	ldrne	r0, [r4, #20]
   3b090:	addne	r1, r0, #1
   3b094:	strne	r1, [r4, #20]
   3b098:	movne	r1, #44	; 0x2c
   3b09c:	strbne	r1, [r0]
   3b0a0:	mov	r0, r4
   3b0a4:	mov	r1, r3
   3b0a8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b0ac:	ldr	r2, [r4, #20]
   3b0b0:	lsr	r5, r7, #31
   3b0b4:	cmn	r7, #1
   3b0b8:	bgt	3b0cc <flatcc_json_printer_int64_field@@Base+0xac>
   3b0bc:	mov	r0, #45	; 0x2d
   3b0c0:	rsbs	r6, r6, #0
   3b0c4:	strb	r0, [r2], #1
   3b0c8:	rsc	r7, r7, #0
   3b0cc:	mov	r0, r6
   3b0d0:	mov	r1, r7
   3b0d4:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3b0d8:	ldr	r1, [r4, #20]
   3b0dc:	add	r0, r0, r5
   3b0e0:	add	r0, r1, r0
   3b0e4:	str	r0, [r4, #20]
   3b0e8:	pop	{r4, r5, r6, r7, fp, pc}
   3b0ec:	ldrd	r6, [r7]
   3b0f0:	eor	ip, r7, r0
   3b0f4:	eor	r5, r6, r2
   3b0f8:	orrs	r5, r5, ip
   3b0fc:	bne	3b078 <flatcc_json_printer_int64_field@@Base+0x58>
   3b100:	ldrb	r7, [r4, #28]
   3b104:	mov	r6, r2
   3b108:	cmp	r7, #0
   3b10c:	mov	r7, r0
   3b110:	bne	3b0e8 <flatcc_json_printer_int64_field@@Base+0xc8>
   3b114:	b	3b078 <flatcc_json_printer_int64_field@@Base+0x58>

0003b118 <flatcc_json_printer_bool_field@@Base>:
   3b118:	push	{r4, r5, r6, sl, fp, lr}
   3b11c:	add	fp, sp, #16
   3b120:	mov	r4, r0
   3b124:	mov	r0, #4
   3b128:	ldr	r5, [r1, #8]
   3b12c:	add	r2, r0, r2, lsl #1
   3b130:	ldr	r0, [fp, #12]
   3b134:	cmp	r2, r5
   3b138:	bge	3b158 <flatcc_json_printer_bool_field@@Base+0x40>
   3b13c:	ldr	r5, [r1, #4]
   3b140:	add	r2, r5, r2
   3b144:	ldrh	r2, [r2]
   3b148:	cmp	r2, #0
   3b14c:	ldrne	r5, [r1]
   3b150:	addsne	r2, r5, r2
   3b154:	bne	3b1ec <flatcc_json_printer_bool_field@@Base+0xd4>
   3b158:	ldrb	r2, [r4, #29]
   3b15c:	mov	r6, r0
   3b160:	cmp	r2, #0
   3b164:	popeq	{r4, r5, r6, sl, fp, pc}
   3b168:	ldr	r0, [r1, #16]
   3b16c:	ldr	r2, [fp, #8]
   3b170:	add	r5, r0, #1
   3b174:	cmp	r0, #0
   3b178:	str	r5, [r1, #16]
   3b17c:	ldrne	r0, [r4, #20]
   3b180:	addne	r1, r0, #1
   3b184:	strne	r1, [r4, #20]
   3b188:	movne	r1, #44	; 0x2c
   3b18c:	strbne	r1, [r0]
   3b190:	mov	r0, r4
   3b194:	mov	r1, r3
   3b198:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b19c:	ldr	r0, [r4, #20]
   3b1a0:	cmp	r6, #0
   3b1a4:	beq	3b1c4 <flatcc_json_printer_bool_field@@Base+0xac>
   3b1a8:	mov	r1, #0
   3b1ac:	strb	r1, [r0, #4]
   3b1b0:	movw	r1, #29300	; 0x7274
   3b1b4:	movt	r1, #25973	; 0x6575
   3b1b8:	str	r1, [r0]
   3b1bc:	mov	r0, #4
   3b1c0:	b	3b1dc <flatcc_json_printer_bool_field@@Base+0xc4>
   3b1c4:	mov	r1, #101	; 0x65
   3b1c8:	strh	r1, [r0, #4]
   3b1cc:	movw	r1, #24934	; 0x6166
   3b1d0:	movt	r1, #29548	; 0x736c
   3b1d4:	str	r1, [r0]
   3b1d8:	mov	r0, #5
   3b1dc:	ldr	r1, [r4, #20]
   3b1e0:	add	r0, r1, r0
   3b1e4:	str	r0, [r4, #20]
   3b1e8:	pop	{r4, r5, r6, sl, fp, pc}
   3b1ec:	ldrb	r6, [r2]
   3b1f0:	cmp	r6, r0
   3b1f4:	bne	3b168 <flatcc_json_printer_bool_field@@Base+0x50>
   3b1f8:	ldrb	r2, [r4, #28]
   3b1fc:	mov	r6, r0
   3b200:	cmp	r2, #0
   3b204:	bne	3b1e8 <flatcc_json_printer_bool_field@@Base+0xd0>
   3b208:	b	3b168 <flatcc_json_printer_bool_field@@Base+0x50>

0003b20c <flatcc_json_printer_float_field@@Base>:
   3b20c:	push	{r4, r5, fp, lr}
   3b210:	add	fp, sp, #8
   3b214:	vpush	{d8}
   3b218:	mov	r5, r0
   3b21c:	mov	r0, #4
   3b220:	vmov.f32	s16, s0
   3b224:	add	r0, r0, r2, lsl #1
   3b228:	ldr	r2, [r1, #8]
   3b22c:	cmp	r0, r2
   3b230:	bge	3b250 <flatcc_json_printer_float_field@@Base+0x44>
   3b234:	ldr	r2, [r1, #4]
   3b238:	add	r0, r2, r0
   3b23c:	ldrh	r0, [r0]
   3b240:	cmp	r0, #0
   3b244:	ldrne	r2, [r1]
   3b248:	addsne	r0, r2, r0
   3b24c:	bne	3b2b0 <flatcc_json_printer_float_field@@Base+0xa4>
   3b250:	ldrb	r0, [r5, #29]
   3b254:	cmp	r0, #0
   3b258:	beq	3b2a8 <flatcc_json_printer_float_field@@Base+0x9c>
   3b25c:	ldr	r0, [r1, #16]
   3b260:	ldr	r2, [fp, #8]
   3b264:	add	r4, r0, #1
   3b268:	cmp	r0, #0
   3b26c:	str	r4, [r1, #16]
   3b270:	ldrne	r0, [r5, #20]
   3b274:	addne	r1, r0, #1
   3b278:	strne	r1, [r5, #20]
   3b27c:	movne	r1, #44	; 0x2c
   3b280:	strbne	r1, [r0]
   3b284:	mov	r0, r5
   3b288:	mov	r1, r3
   3b28c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b290:	ldr	r0, [r5, #20]
   3b294:	vcvt.f64.f32	d0, s16
   3b298:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b29c:	ldr	r1, [r5, #20]
   3b2a0:	add	r0, r1, r0
   3b2a4:	str	r0, [r5, #20]
   3b2a8:	vpop	{d8}
   3b2ac:	pop	{r4, r5, fp, pc}
   3b2b0:	vldr	s0, [r0]
   3b2b4:	vcmp.f32	s0, s16
   3b2b8:	vmrs	APSR_nzcv, fpscr
   3b2bc:	bne	3b2d4 <flatcc_json_printer_float_field@@Base+0xc8>
   3b2c0:	ldrb	r0, [r5, #28]
   3b2c4:	vmov.f32	s16, s0
   3b2c8:	cmp	r0, #0
   3b2cc:	bne	3b2a8 <flatcc_json_printer_float_field@@Base+0x9c>
   3b2d0:	b	3b25c <flatcc_json_printer_float_field@@Base+0x50>
   3b2d4:	vmov.f32	s16, s0
   3b2d8:	b	3b25c <flatcc_json_printer_float_field@@Base+0x50>

0003b2dc <flatcc_json_printer_double_field@@Base>:
   3b2dc:	push	{r4, r5, fp, lr}
   3b2e0:	add	fp, sp, #8
   3b2e4:	vpush	{d8}
   3b2e8:	mov	r5, r0
   3b2ec:	mov	r0, #4
   3b2f0:	vmov.f64	d8, d0
   3b2f4:	add	r0, r0, r2, lsl #1
   3b2f8:	ldr	r2, [r1, #8]
   3b2fc:	cmp	r0, r2
   3b300:	bge	3b320 <flatcc_json_printer_double_field@@Base+0x44>
   3b304:	ldr	r2, [r1, #4]
   3b308:	add	r0, r2, r0
   3b30c:	ldrh	r0, [r0]
   3b310:	cmp	r0, #0
   3b314:	ldrne	r2, [r1]
   3b318:	addsne	r0, r2, r0
   3b31c:	bne	3b380 <flatcc_json_printer_double_field@@Base+0xa4>
   3b320:	ldrb	r0, [r5, #29]
   3b324:	cmp	r0, #0
   3b328:	beq	3b378 <flatcc_json_printer_double_field@@Base+0x9c>
   3b32c:	ldr	r0, [r1, #16]
   3b330:	ldr	r2, [fp, #8]
   3b334:	add	r4, r0, #1
   3b338:	cmp	r0, #0
   3b33c:	str	r4, [r1, #16]
   3b340:	ldrne	r0, [r5, #20]
   3b344:	addne	r1, r0, #1
   3b348:	strne	r1, [r5, #20]
   3b34c:	movne	r1, #44	; 0x2c
   3b350:	strbne	r1, [r0]
   3b354:	mov	r0, r5
   3b358:	mov	r1, r3
   3b35c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b360:	ldr	r0, [r5, #20]
   3b364:	vmov.f64	d0, d8
   3b368:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3b36c:	ldr	r1, [r5, #20]
   3b370:	add	r0, r1, r0
   3b374:	str	r0, [r5, #20]
   3b378:	vpop	{d8}
   3b37c:	pop	{r4, r5, fp, pc}
   3b380:	vldr	d16, [r0]
   3b384:	vcmp.f64	d16, d8
   3b388:	vmrs	APSR_nzcv, fpscr
   3b38c:	bne	3b3a4 <flatcc_json_printer_double_field@@Base+0xc8>
   3b390:	ldrb	r0, [r5, #28]
   3b394:	vmov.f64	d8, d16
   3b398:	cmp	r0, #0
   3b39c:	bne	3b378 <flatcc_json_printer_double_field@@Base+0x9c>
   3b3a0:	b	3b32c <flatcc_json_printer_double_field@@Base+0x50>
   3b3a4:	vmov.f64	d8, d16
   3b3a8:	b	3b32c <flatcc_json_printer_double_field@@Base+0x50>

0003b3ac <flatcc_json_printer_uint8_enum_field@@Base>:
   3b3ac:	push	{r4, r5, r6, r7, fp, lr}
   3b3b0:	add	fp, sp, #16
   3b3b4:	mov	r6, r0
   3b3b8:	mov	r0, #4
   3b3bc:	ldr	r4, [r1, #8]
   3b3c0:	ldr	ip, [fp, #16]
   3b3c4:	add	r5, r0, r2, lsl #1
   3b3c8:	ldr	r0, [fp, #12]
   3b3cc:	ldr	r2, [fp, #8]
   3b3d0:	cmp	r5, r4
   3b3d4:	bge	3b3f4 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3b3d8:	ldr	r4, [r1, #4]
   3b3dc:	add	r5, r4, r5
   3b3e0:	ldrh	r5, [r5]
   3b3e4:	cmp	r5, #0
   3b3e8:	ldrne	r4, [r1]
   3b3ec:	addsne	r5, r4, r5
   3b3f0:	bne	3b50c <flatcc_json_printer_uint8_enum_field@@Base+0x160>
   3b3f4:	ldrb	r5, [r6, #29]
   3b3f8:	cmp	r5, #0
   3b3fc:	mov	r5, r0
   3b400:	popeq	{r4, r5, r6, r7, fp, pc}
   3b404:	ldr	r0, [r1, #16]
   3b408:	mov	r7, ip
   3b40c:	add	r4, r0, #1
   3b410:	cmp	r0, #0
   3b414:	str	r4, [r1, #16]
   3b418:	ldrne	r0, [r6, #20]
   3b41c:	addne	r1, r0, #1
   3b420:	strne	r1, [r6, #20]
   3b424:	movne	r1, #44	; 0x2c
   3b428:	strbne	r1, [r0]
   3b42c:	mov	r0, r6
   3b430:	mov	r1, r3
   3b434:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b438:	ldrb	r0, [r6, #27]
   3b43c:	cmp	r0, #0
   3b440:	beq	3b498 <flatcc_json_printer_uint8_enum_field@@Base+0xec>
   3b444:	ldr	r0, [r6, #20]
   3b448:	mov	r1, #0
   3b44c:	cmp	r5, #100	; 0x64
   3b450:	bcc	3b4ac <flatcc_json_printer_uint8_enum_field@@Base+0x100>
   3b454:	strb	r1, [r0, #3]
   3b458:	movw	r1, #34079	; 0x851f
   3b45c:	movt	r1, #20971	; 0x51eb
   3b460:	umull	r1, r2, r5, r1
   3b464:	mov	r1, #48	; 0x30
   3b468:	orr	r1, r1, r2, lsr #5
   3b46c:	strb	r1, [r0]
   3b470:	lsr	r1, r2, #5
   3b474:	mov	r2, #100	; 0x64
   3b478:	mls	r1, r1, r2, r5
   3b47c:	ldr	r2, [pc, #168]	; 3b52c <flatcc_json_printer_uint8_enum_field@@Base+0x180>
   3b480:	add	r2, pc, r2
   3b484:	add	r1, r2, r1, lsl #1
   3b488:	ldrh	r1, [r1]
   3b48c:	strh	r1, [r0, #1]
   3b490:	mov	r0, #3
   3b494:	b	3b4fc <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3b498:	mov	r0, r6
   3b49c:	mov	r1, r5
   3b4a0:	mov	r2, r7
   3b4a4:	pop	{r4, r5, r6, r7, fp, lr}
   3b4a8:	bx	r2
   3b4ac:	cmp	r5, #10
   3b4b0:	bcc	3b4ec <flatcc_json_printer_uint8_enum_field@@Base+0x140>
   3b4b4:	strb	r1, [r0, #2]
   3b4b8:	movw	r1, #34079	; 0x851f
   3b4bc:	movt	r1, #20971	; 0x51eb
   3b4c0:	umull	r1, r2, r5, r1
   3b4c4:	lsr	r1, r2, #5
   3b4c8:	mov	r2, #100	; 0x64
   3b4cc:	mls	r1, r1, r2, r5
   3b4d0:	ldr	r2, [pc, #88]	; 3b530 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   3b4d4:	add	r2, pc, r2
   3b4d8:	add	r1, r2, r1, lsl #1
   3b4dc:	ldrh	r1, [r1]
   3b4e0:	strh	r1, [r0]
   3b4e4:	mov	r0, #2
   3b4e8:	b	3b4fc <flatcc_json_printer_uint8_enum_field@@Base+0x150>
   3b4ec:	strb	r1, [r0, #1]
   3b4f0:	add	r1, r5, #48	; 0x30
   3b4f4:	strb	r1, [r0]
   3b4f8:	mov	r0, #1
   3b4fc:	ldr	r1, [r6, #20]
   3b500:	add	r0, r1, r0
   3b504:	str	r0, [r6, #20]
   3b508:	pop	{r4, r5, r6, r7, fp, pc}
   3b50c:	ldrb	r5, [r5]
   3b510:	cmp	r5, r0
   3b514:	bne	3b404 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3b518:	ldrb	r5, [r6, #28]
   3b51c:	cmp	r5, #0
   3b520:	mov	r5, r0
   3b524:	bne	3b508 <flatcc_json_printer_uint8_enum_field@@Base+0x15c>
   3b528:	b	3b404 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3b52c:	ldrdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   3b530:	andeq	pc, r0, fp, lsl #23

0003b534 <flatcc_json_printer_uint16_enum_field@@Base>:
   3b534:	push	{r4, r5, r6, r7, fp, lr}
   3b538:	add	fp, sp, #16
   3b53c:	mov	r4, r0
   3b540:	mov	r0, #4
   3b544:	ldr	r7, [fp, #16]
   3b548:	ldr	ip, [fp, #12]
   3b54c:	add	r5, r0, r2, lsl #1
   3b550:	ldr	r0, [r1, #8]
   3b554:	ldr	r2, [fp, #8]
   3b558:	cmp	r5, r0
   3b55c:	bge	3b57c <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3b560:	ldr	r0, [r1, #4]
   3b564:	add	r0, r0, r5
   3b568:	ldrh	r5, [r0]
   3b56c:	cmp	r5, #0
   3b570:	ldrne	r0, [r1]
   3b574:	addsne	r5, r0, r5
   3b578:	bne	3b5f8 <flatcc_json_printer_uint16_enum_field@@Base+0xc4>
   3b57c:	ldrb	r0, [r4, #29]
   3b580:	mov	r6, ip
   3b584:	cmp	r0, #0
   3b588:	popeq	{r4, r5, r6, r7, fp, pc}
   3b58c:	ldr	r0, [r1, #16]
   3b590:	add	r5, r0, #1
   3b594:	cmp	r0, #0
   3b598:	str	r5, [r1, #16]
   3b59c:	ldrne	r0, [r4, #20]
   3b5a0:	addne	r1, r0, #1
   3b5a4:	strne	r1, [r4, #20]
   3b5a8:	movne	r1, #44	; 0x2c
   3b5ac:	strbne	r1, [r0]
   3b5b0:	mov	r0, r4
   3b5b4:	mov	r1, r3
   3b5b8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b5bc:	ldrb	r0, [r4, #27]
   3b5c0:	cmp	r0, #0
   3b5c4:	beq	3b5e4 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3b5c8:	ldr	r1, [r4, #20]
   3b5cc:	mov	r0, r6
   3b5d0:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3b5d4:	ldr	r1, [r4, #20]
   3b5d8:	add	r0, r1, r0
   3b5dc:	str	r0, [r4, #20]
   3b5e0:	pop	{r4, r5, r6, r7, fp, pc}
   3b5e4:	mov	r0, r4
   3b5e8:	mov	r1, r6
   3b5ec:	mov	r2, r7
   3b5f0:	pop	{r4, r5, r6, r7, fp, lr}
   3b5f4:	bx	r2
   3b5f8:	ldrh	r6, [r5]
   3b5fc:	cmp	r6, ip
   3b600:	bne	3b58c <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3b604:	ldrb	r0, [r4, #28]
   3b608:	mov	r6, ip
   3b60c:	cmp	r0, #0
   3b610:	bne	3b5e0 <flatcc_json_printer_uint16_enum_field@@Base+0xac>
   3b614:	b	3b58c <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003b618 <flatcc_json_printer_uint32_enum_field@@Base>:
   3b618:	push	{r4, r5, r6, r7, fp, lr}
   3b61c:	add	fp, sp, #16
   3b620:	mov	r4, r0
   3b624:	mov	r0, #4
   3b628:	ldr	r7, [fp, #16]
   3b62c:	ldr	ip, [fp, #12]
   3b630:	add	r5, r0, r2, lsl #1
   3b634:	ldr	r0, [r1, #8]
   3b638:	ldr	r2, [fp, #8]
   3b63c:	cmp	r5, r0
   3b640:	bge	3b660 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3b644:	ldr	r0, [r1, #4]
   3b648:	add	r0, r0, r5
   3b64c:	ldrh	r5, [r0]
   3b650:	cmp	r5, #0
   3b654:	ldrne	r0, [r1]
   3b658:	addsne	r5, r0, r5
   3b65c:	bne	3b6dc <flatcc_json_printer_uint32_enum_field@@Base+0xc4>
   3b660:	ldrb	r0, [r4, #29]
   3b664:	mov	r6, ip
   3b668:	cmp	r0, #0
   3b66c:	popeq	{r4, r5, r6, r7, fp, pc}
   3b670:	ldr	r0, [r1, #16]
   3b674:	add	r5, r0, #1
   3b678:	cmp	r0, #0
   3b67c:	str	r5, [r1, #16]
   3b680:	ldrne	r0, [r4, #20]
   3b684:	addne	r1, r0, #1
   3b688:	strne	r1, [r4, #20]
   3b68c:	movne	r1, #44	; 0x2c
   3b690:	strbne	r1, [r0]
   3b694:	mov	r0, r4
   3b698:	mov	r1, r3
   3b69c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b6a0:	ldrb	r0, [r4, #27]
   3b6a4:	cmp	r0, #0
   3b6a8:	beq	3b6c8 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3b6ac:	ldr	r1, [r4, #20]
   3b6b0:	mov	r0, r6
   3b6b4:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3b6b8:	ldr	r1, [r4, #20]
   3b6bc:	add	r0, r1, r0
   3b6c0:	str	r0, [r4, #20]
   3b6c4:	pop	{r4, r5, r6, r7, fp, pc}
   3b6c8:	mov	r0, r4
   3b6cc:	mov	r1, r6
   3b6d0:	mov	r2, r7
   3b6d4:	pop	{r4, r5, r6, r7, fp, lr}
   3b6d8:	bx	r2
   3b6dc:	ldr	r6, [r5]
   3b6e0:	cmp	r6, ip
   3b6e4:	bne	3b670 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3b6e8:	ldrb	r0, [r4, #28]
   3b6ec:	mov	r6, ip
   3b6f0:	cmp	r0, #0
   3b6f4:	bne	3b6c4 <flatcc_json_printer_uint32_enum_field@@Base+0xac>
   3b6f8:	b	3b670 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003b6fc <flatcc_json_printer_uint64_enum_field@@Base>:
   3b6fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b700:	add	fp, sp, #24
   3b704:	mov	r4, r0
   3b708:	mov	r0, #4
   3b70c:	ldr	ip, [fp, #20]
   3b710:	ldr	r6, [fp, #16]
   3b714:	ldr	r5, [fp, #24]
   3b718:	add	r7, r0, r2, lsl #1
   3b71c:	ldr	r0, [r1, #8]
   3b720:	ldr	r2, [fp, #8]
   3b724:	cmp	r7, r0
   3b728:	bge	3b748 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3b72c:	ldr	r0, [r1, #4]
   3b730:	add	r0, r0, r7
   3b734:	ldrh	r7, [r0]
   3b738:	cmp	r7, #0
   3b73c:	ldrne	r0, [r1]
   3b740:	addsne	r7, r0, r7
   3b744:	bne	3b7d0 <flatcc_json_printer_uint64_enum_field@@Base+0xd4>
   3b748:	ldrb	r0, [r4, #29]
   3b74c:	mov	r8, r6
   3b750:	mov	r7, ip
   3b754:	cmp	r0, #0
   3b758:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b75c:	ldr	r0, [r1, #16]
   3b760:	add	r6, r0, #1
   3b764:	cmp	r0, #0
   3b768:	str	r6, [r1, #16]
   3b76c:	ldrne	r0, [r4, #20]
   3b770:	addne	r1, r0, #1
   3b774:	strne	r1, [r4, #20]
   3b778:	movne	r1, #44	; 0x2c
   3b77c:	strbne	r1, [r0]
   3b780:	mov	r0, r4
   3b784:	mov	r1, r3
   3b788:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b78c:	ldrb	r0, [r4, #27]
   3b790:	cmp	r0, #0
   3b794:	beq	3b7b8 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3b798:	ldr	r2, [r4, #20]
   3b79c:	mov	r0, r8
   3b7a0:	mov	r1, r7
   3b7a4:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3b7a8:	ldr	r1, [r4, #20]
   3b7ac:	add	r0, r1, r0
   3b7b0:	str	r0, [r4, #20]
   3b7b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b7b8:	mov	r0, r4
   3b7bc:	mov	r2, r8
   3b7c0:	mov	r3, r7
   3b7c4:	mov	r1, r5
   3b7c8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b7cc:	bx	r1
   3b7d0:	ldr	r8, [r7]
   3b7d4:	ldr	r7, [r7, #4]
   3b7d8:	eor	lr, r7, ip
   3b7dc:	eor	r0, r8, r6
   3b7e0:	orrs	r0, r0, lr
   3b7e4:	bne	3b75c <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3b7e8:	ldrb	r0, [r4, #28]
   3b7ec:	mov	r8, r6
   3b7f0:	mov	r7, ip
   3b7f4:	cmp	r0, #0
   3b7f8:	bne	3b7b4 <flatcc_json_printer_uint64_enum_field@@Base+0xb8>
   3b7fc:	b	3b75c <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003b800 <flatcc_json_printer_int8_enum_field@@Base>:
   3b800:	push	{r4, r5, r6, r7, fp, lr}
   3b804:	add	fp, sp, #16
   3b808:	mov	r6, r0
   3b80c:	mov	r0, #4
   3b810:	ldr	r4, [r1, #8]
   3b814:	ldr	ip, [fp, #16]
   3b818:	add	r5, r0, r2, lsl #1
   3b81c:	ldr	r0, [fp, #12]
   3b820:	ldr	r2, [fp, #8]
   3b824:	cmp	r5, r4
   3b828:	bge	3b848 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3b82c:	ldr	r4, [r1, #4]
   3b830:	add	r5, r4, r5
   3b834:	ldrh	r5, [r5]
   3b838:	cmp	r5, #0
   3b83c:	ldrne	r4, [r1]
   3b840:	addsne	r5, r4, r5
   3b844:	bne	3b988 <flatcc_json_printer_int8_enum_field@@Base+0x188>
   3b848:	ldrb	r5, [r6, #29]
   3b84c:	cmp	r5, #0
   3b850:	mov	r5, r0
   3b854:	popeq	{r4, r5, r6, r7, fp, pc}
   3b858:	ldr	r0, [r1, #16]
   3b85c:	mov	r7, ip
   3b860:	add	r4, r0, #1
   3b864:	cmp	r0, #0
   3b868:	str	r4, [r1, #16]
   3b86c:	ldrne	r0, [r6, #20]
   3b870:	addne	r1, r0, #1
   3b874:	strne	r1, [r6, #20]
   3b878:	movne	r1, #44	; 0x2c
   3b87c:	strbne	r1, [r0]
   3b880:	mov	r0, r6
   3b884:	mov	r1, r3
   3b888:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3b88c:	ldrb	r0, [r6, #27]
   3b890:	cmp	r0, #0
   3b894:	beq	3b908 <flatcc_json_printer_int8_enum_field@@Base+0x108>
   3b898:	ubfx	r0, r5, #7, #1
   3b89c:	ldr	r1, [r6, #20]
   3b8a0:	sxtb	r2, r5
   3b8a4:	cmn	r2, #1
   3b8a8:	movle	r2, #45	; 0x2d
   3b8ac:	rsble	r5, r5, #0
   3b8b0:	strble	r2, [r1], #1
   3b8b4:	uxtb	r2, r5
   3b8b8:	cmp	r2, #100	; 0x64
   3b8bc:	bcc	3b91c <flatcc_json_printer_int8_enum_field@@Base+0x11c>
   3b8c0:	mov	r3, #0
   3b8c4:	strb	r3, [r1, #3]
   3b8c8:	movw	r3, #34079	; 0x851f
   3b8cc:	movt	r3, #20971	; 0x51eb
   3b8d0:	umull	r3, r5, r2, r3
   3b8d4:	mov	r3, #48	; 0x30
   3b8d8:	orr	r3, r3, r5, lsr #5
   3b8dc:	strb	r3, [r1]
   3b8e0:	lsr	r3, r5, #5
   3b8e4:	mov	r5, #100	; 0x64
   3b8e8:	mls	r2, r3, r5, r2
   3b8ec:	ldr	r3, [pc, #184]	; 3b9ac <flatcc_json_printer_int8_enum_field@@Base+0x1ac>
   3b8f0:	add	r3, pc, r3
   3b8f4:	add	r2, r3, r2, lsl #1
   3b8f8:	ldrh	r2, [r2]
   3b8fc:	strh	r2, [r1, #1]
   3b900:	mov	r1, #3
   3b904:	b	3b974 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3b908:	sxtb	r1, r5
   3b90c:	mov	r0, r6
   3b910:	mov	r2, r7
   3b914:	pop	{r4, r5, r6, r7, fp, lr}
   3b918:	bx	r2
   3b91c:	cmp	r2, #10
   3b920:	bcc	3b960 <flatcc_json_printer_int8_enum_field@@Base+0x160>
   3b924:	mov	r3, #0
   3b928:	strb	r3, [r1, #2]
   3b92c:	movw	r3, #34079	; 0x851f
   3b930:	movt	r3, #20971	; 0x51eb
   3b934:	umull	r3, r5, r2, r3
   3b938:	lsr	r3, r5, #5
   3b93c:	mov	r5, #100	; 0x64
   3b940:	mls	r2, r3, r5, r2
   3b944:	ldr	r3, [pc, #100]	; 3b9b0 <flatcc_json_printer_int8_enum_field@@Base+0x1b0>
   3b948:	add	r3, pc, r3
   3b94c:	add	r2, r3, r2, lsl #1
   3b950:	ldrh	r2, [r2]
   3b954:	strh	r2, [r1]
   3b958:	mov	r1, #2
   3b95c:	b	3b974 <flatcc_json_printer_int8_enum_field@@Base+0x174>
   3b960:	mov	r2, #0
   3b964:	strb	r2, [r1, #1]
   3b968:	add	r2, r5, #48	; 0x30
   3b96c:	strb	r2, [r1]
   3b970:	mov	r1, #1
   3b974:	add	r0, r1, r0
   3b978:	ldr	r1, [r6, #20]
   3b97c:	add	r0, r1, r0
   3b980:	str	r0, [r6, #20]
   3b984:	pop	{r4, r5, r6, r7, fp, pc}
   3b988:	ldrb	r5, [r5]
   3b98c:	uxtb	r4, r0
   3b990:	cmp	r5, r4
   3b994:	bne	3b858 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3b998:	ldrb	r5, [r6, #28]
   3b99c:	cmp	r5, #0
   3b9a0:	mov	r5, r0
   3b9a4:	bne	3b984 <flatcc_json_printer_int8_enum_field@@Base+0x184>
   3b9a8:	b	3b858 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3b9ac:	andeq	pc, r0, pc, ror #14
   3b9b0:	andeq	pc, r0, r7, lsl r7	; <UNPREDICTABLE>

0003b9b4 <flatcc_json_printer_int16_enum_field@@Base>:
   3b9b4:	push	{r4, r5, r6, r7, fp, lr}
   3b9b8:	add	fp, sp, #16
   3b9bc:	mov	r4, r0
   3b9c0:	mov	r0, #4
   3b9c4:	ldr	r5, [r1, #8]
   3b9c8:	ldr	ip, [fp, #16]
   3b9cc:	add	r6, r0, r2, lsl #1
   3b9d0:	ldr	r0, [fp, #12]
   3b9d4:	ldr	r2, [fp, #8]
   3b9d8:	cmp	r6, r5
   3b9dc:	bge	3b9fc <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3b9e0:	ldr	r5, [r1, #4]
   3b9e4:	add	r6, r5, r6
   3b9e8:	ldrh	r6, [r6]
   3b9ec:	cmp	r6, #0
   3b9f0:	ldrne	r5, [r1]
   3b9f4:	addsne	r6, r5, r6
   3b9f8:	bne	3ba98 <flatcc_json_printer_int16_enum_field@@Base+0xe4>
   3b9fc:	ldrb	r6, [r4, #29]
   3ba00:	mov	r5, r0
   3ba04:	cmp	r6, #0
   3ba08:	popeq	{r4, r5, r6, r7, fp, pc}
   3ba0c:	ldr	r0, [r1, #16]
   3ba10:	mov	r7, ip
   3ba14:	add	r6, r0, #1
   3ba18:	cmp	r0, #0
   3ba1c:	str	r6, [r1, #16]
   3ba20:	ldrne	r0, [r4, #20]
   3ba24:	addne	r1, r0, #1
   3ba28:	strne	r1, [r4, #20]
   3ba2c:	movne	r1, #44	; 0x2c
   3ba30:	strbne	r1, [r0]
   3ba34:	mov	r0, r4
   3ba38:	mov	r1, r3
   3ba3c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3ba40:	ldrb	r0, [r4, #27]
   3ba44:	cmp	r0, #0
   3ba48:	beq	3ba84 <flatcc_json_printer_int16_enum_field@@Base+0xd0>
   3ba4c:	ubfx	r6, r5, #15, #1
   3ba50:	ldr	r1, [r4, #20]
   3ba54:	sxth	r0, r5
   3ba58:	cmn	r0, #1
   3ba5c:	movle	r0, #45	; 0x2d
   3ba60:	rsble	r5, r5, #0
   3ba64:	strble	r0, [r1], #1
   3ba68:	uxth	r0, r5
   3ba6c:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3ba70:	ldr	r1, [r4, #20]
   3ba74:	add	r0, r0, r6
   3ba78:	add	r0, r1, r0
   3ba7c:	str	r0, [r4, #20]
   3ba80:	pop	{r4, r5, r6, r7, fp, pc}
   3ba84:	sxth	r1, r5
   3ba88:	mov	r0, r4
   3ba8c:	mov	r2, r7
   3ba90:	pop	{r4, r5, r6, r7, fp, lr}
   3ba94:	bx	r2
   3ba98:	ldrh	r5, [r6]
   3ba9c:	uxth	r6, r0
   3baa0:	cmp	r5, r6
   3baa4:	bne	3ba0c <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3baa8:	ldrb	r6, [r4, #28]
   3baac:	mov	r5, r0
   3bab0:	cmp	r6, #0
   3bab4:	bne	3ba80 <flatcc_json_printer_int16_enum_field@@Base+0xcc>
   3bab8:	b	3ba0c <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003babc <flatcc_json_printer_int32_enum_field@@Base>:
   3babc:	push	{r4, r5, r6, r7, fp, lr}
   3bac0:	add	fp, sp, #16
   3bac4:	mov	r4, r0
   3bac8:	mov	r0, #4
   3bacc:	ldr	r5, [r1, #8]
   3bad0:	ldr	ip, [fp, #16]
   3bad4:	add	r6, r0, r2, lsl #1
   3bad8:	ldr	r0, [fp, #12]
   3badc:	ldr	r2, [fp, #8]
   3bae0:	cmp	r6, r5
   3bae4:	bge	3bb04 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3bae8:	ldr	r5, [r1, #4]
   3baec:	add	r6, r5, r6
   3baf0:	ldrh	r6, [r6]
   3baf4:	cmp	r6, #0
   3baf8:	ldrne	r5, [r1]
   3bafc:	addsne	r6, r5, r6
   3bb00:	bne	3bb9c <flatcc_json_printer_int32_enum_field@@Base+0xe0>
   3bb04:	ldrb	r6, [r4, #29]
   3bb08:	mov	r5, r0
   3bb0c:	cmp	r6, #0
   3bb10:	popeq	{r4, r5, r6, r7, fp, pc}
   3bb14:	ldr	r0, [r1, #16]
   3bb18:	mov	r7, ip
   3bb1c:	add	r6, r0, #1
   3bb20:	cmp	r0, #0
   3bb24:	str	r6, [r1, #16]
   3bb28:	ldrne	r0, [r4, #20]
   3bb2c:	addne	r1, r0, #1
   3bb30:	strne	r1, [r4, #20]
   3bb34:	movne	r1, #44	; 0x2c
   3bb38:	strbne	r1, [r0]
   3bb3c:	mov	r0, r4
   3bb40:	mov	r1, r3
   3bb44:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3bb48:	ldrb	r0, [r4, #27]
   3bb4c:	cmp	r0, #0
   3bb50:	beq	3bb88 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3bb54:	ldr	r1, [r4, #20]
   3bb58:	cmn	r5, #1
   3bb5c:	lsr	r6, r5, #31
   3bb60:	movle	r0, #45	; 0x2d
   3bb64:	rsble	r5, r5, #0
   3bb68:	strble	r0, [r1], #1
   3bb6c:	mov	r0, r5
   3bb70:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3bb74:	ldr	r1, [r4, #20]
   3bb78:	add	r0, r0, r6
   3bb7c:	add	r0, r1, r0
   3bb80:	str	r0, [r4, #20]
   3bb84:	pop	{r4, r5, r6, r7, fp, pc}
   3bb88:	mov	r0, r4
   3bb8c:	mov	r1, r5
   3bb90:	mov	r2, r7
   3bb94:	pop	{r4, r5, r6, r7, fp, lr}
   3bb98:	bx	r2
   3bb9c:	ldr	r5, [r6]
   3bba0:	cmp	r5, r0
   3bba4:	bne	3bb14 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3bba8:	ldrb	r6, [r4, #28]
   3bbac:	mov	r5, r0
   3bbb0:	cmp	r6, #0
   3bbb4:	bne	3bb84 <flatcc_json_printer_int32_enum_field@@Base+0xc8>
   3bbb8:	b	3bb14 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003bbbc <flatcc_json_printer_int64_enum_field@@Base>:
   3bbbc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bbc0:	add	fp, sp, #24
   3bbc4:	mov	r4, r0
   3bbc8:	mov	r0, #4
   3bbcc:	ldr	r5, [r1, #8]
   3bbd0:	ldr	r6, [fp, #16]
   3bbd4:	ldr	r9, [fp, #24]
   3bbd8:	add	r7, r0, r2, lsl #1
   3bbdc:	ldr	r0, [fp, #20]
   3bbe0:	ldr	r2, [fp, #8]
   3bbe4:	cmp	r7, r5
   3bbe8:	bge	3bc08 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3bbec:	ldr	r5, [r1, #4]
   3bbf0:	add	r7, r5, r7
   3bbf4:	ldrh	r7, [r7]
   3bbf8:	cmp	r7, #0
   3bbfc:	ldrne	r5, [r1]
   3bc00:	addsne	r7, r5, r7
   3bc04:	bne	3bcb0 <flatcc_json_printer_int64_enum_field@@Base+0xf4>
   3bc08:	ldrb	r7, [r4, #29]
   3bc0c:	mov	r8, r6
   3bc10:	cmp	r7, #0
   3bc14:	mov	r7, r0
   3bc18:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3bc1c:	ldr	r0, [r1, #16]
   3bc20:	add	r6, r0, #1
   3bc24:	cmp	r0, #0
   3bc28:	str	r6, [r1, #16]
   3bc2c:	ldrne	r0, [r4, #20]
   3bc30:	addne	r1, r0, #1
   3bc34:	strne	r1, [r4, #20]
   3bc38:	movne	r1, #44	; 0x2c
   3bc3c:	strbne	r1, [r0]
   3bc40:	mov	r0, r4
   3bc44:	mov	r1, r3
   3bc48:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3bc4c:	ldrb	r0, [r4, #27]
   3bc50:	cmp	r0, #0
   3bc54:	beq	3bc98 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3bc58:	ldr	r2, [r4, #20]
   3bc5c:	lsr	r5, r7, #31
   3bc60:	cmn	r7, #1
   3bc64:	bgt	3bc78 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   3bc68:	mov	r0, #45	; 0x2d
   3bc6c:	rsbs	r8, r8, #0
   3bc70:	strb	r0, [r2], #1
   3bc74:	rsc	r7, r7, #0
   3bc78:	mov	r0, r8
   3bc7c:	mov	r1, r7
   3bc80:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3bc84:	ldr	r1, [r4, #20]
   3bc88:	add	r0, r0, r5
   3bc8c:	add	r0, r1, r0
   3bc90:	str	r0, [r4, #20]
   3bc94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3bc98:	mov	r0, r4
   3bc9c:	mov	r2, r8
   3bca0:	mov	r3, r7
   3bca4:	mov	r1, r9
   3bca8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bcac:	bx	r1
   3bcb0:	ldr	r8, [r7]
   3bcb4:	ldr	r7, [r7, #4]
   3bcb8:	eor	ip, r7, r0
   3bcbc:	eor	r5, r8, r6
   3bcc0:	orrs	r5, r5, ip
   3bcc4:	bne	3bc1c <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3bcc8:	ldrb	r7, [r4, #28]
   3bccc:	mov	r8, r6
   3bcd0:	cmp	r7, #0
   3bcd4:	mov	r7, r0
   3bcd8:	bne	3bc94 <flatcc_json_printer_int64_enum_field@@Base+0xd8>
   3bcdc:	b	3bc1c <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003bce0 <flatcc_json_printer_bool_enum_field@@Base>:
   3bce0:	push	{r4, r5, r6, r7, fp, lr}
   3bce4:	add	fp, sp, #16
   3bce8:	mov	r4, r0
   3bcec:	mov	r0, #4
   3bcf0:	ldr	r7, [fp, #16]
   3bcf4:	ldr	ip, [fp, #12]
   3bcf8:	add	r5, r0, r2, lsl #1
   3bcfc:	ldr	r0, [r1, #8]
   3bd00:	ldr	r2, [fp, #8]
   3bd04:	cmp	r5, r0
   3bd08:	bge	3bd28 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3bd0c:	ldr	r0, [r1, #4]
   3bd10:	add	r0, r0, r5
   3bd14:	ldrh	r5, [r0]
   3bd18:	cmp	r5, #0
   3bd1c:	ldrne	r0, [r1]
   3bd20:	addsne	r5, r0, r5
   3bd24:	bne	3bdd8 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3bd28:	ldrb	r0, [r4, #29]
   3bd2c:	mov	r6, ip
   3bd30:	cmp	r0, #0
   3bd34:	popeq	{r4, r5, r6, r7, fp, pc}
   3bd38:	ldr	r0, [r1, #16]
   3bd3c:	add	r5, r0, #1
   3bd40:	cmp	r0, #0
   3bd44:	str	r5, [r1, #16]
   3bd48:	ldrne	r0, [r4, #20]
   3bd4c:	addne	r1, r0, #1
   3bd50:	strne	r1, [r4, #20]
   3bd54:	movne	r1, #44	; 0x2c
   3bd58:	strbne	r1, [r0]
   3bd5c:	mov	r0, r4
   3bd60:	mov	r1, r3
   3bd64:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3bd68:	ldrb	r0, [r4, #27]
   3bd6c:	cmp	r0, #0
   3bd70:	beq	3bd9c <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   3bd74:	ldr	r0, [r4, #20]
   3bd78:	cmp	r6, #0
   3bd7c:	beq	3bdb0 <flatcc_json_printer_bool_enum_field@@Base+0xd0>
   3bd80:	mov	r1, #0
   3bd84:	strb	r1, [r0, #4]
   3bd88:	movw	r1, #29300	; 0x7274
   3bd8c:	movt	r1, #25973	; 0x6575
   3bd90:	str	r1, [r0]
   3bd94:	mov	r0, #4
   3bd98:	b	3bdc8 <flatcc_json_printer_bool_enum_field@@Base+0xe8>
   3bd9c:	mov	r0, r4
   3bda0:	mov	r1, r6
   3bda4:	mov	r2, r7
   3bda8:	pop	{r4, r5, r6, r7, fp, lr}
   3bdac:	bx	r2
   3bdb0:	mov	r1, #101	; 0x65
   3bdb4:	strh	r1, [r0, #4]
   3bdb8:	movw	r1, #24934	; 0x6166
   3bdbc:	movt	r1, #29548	; 0x736c
   3bdc0:	str	r1, [r0]
   3bdc4:	mov	r0, #5
   3bdc8:	ldr	r1, [r4, #20]
   3bdcc:	add	r0, r1, r0
   3bdd0:	str	r0, [r4, #20]
   3bdd4:	pop	{r4, r5, r6, r7, fp, pc}
   3bdd8:	ldrb	r6, [r5]
   3bddc:	cmp	r6, ip
   3bde0:	bne	3bd38 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3bde4:	ldrb	r0, [r4, #28]
   3bde8:	mov	r6, ip
   3bdec:	cmp	r0, #0
   3bdf0:	bne	3bdd4 <flatcc_json_printer_bool_enum_field@@Base+0xf4>
   3bdf4:	b	3bd38 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003bdf8 <flatcc_json_printer_uint8_struct_field@@Base>:
   3bdf8:	push	{r4, r5, r6, sl, fp, lr}
   3bdfc:	add	fp, sp, #16
   3be00:	mov	r4, r1
   3be04:	mov	r5, r0
   3be08:	ldrb	r6, [r2, r3]
   3be0c:	ldr	r2, [fp, #12]
   3be10:	ldr	r1, [fp, #8]
   3be14:	cmp	r4, #0
   3be18:	ldrne	r0, [r5, #20]
   3be1c:	addne	r3, r0, #1
   3be20:	strne	r3, [r5, #20]
   3be24:	movne	r3, #44	; 0x2c
   3be28:	strbne	r3, [r0]
   3be2c:	mov	r0, r5
   3be30:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3be34:	ldr	r0, [r5, #20]
   3be38:	mov	r1, #0
   3be3c:	cmp	r6, #100	; 0x64
   3be40:	bcc	3be88 <flatcc_json_printer_uint8_struct_field@@Base+0x90>
   3be44:	strb	r1, [r0, #3]
   3be48:	movw	r1, #34079	; 0x851f
   3be4c:	movt	r1, #20971	; 0x51eb
   3be50:	umull	r1, r2, r6, r1
   3be54:	mov	r1, #48	; 0x30
   3be58:	orr	r1, r1, r2, lsr #5
   3be5c:	strb	r1, [r0]
   3be60:	lsr	r1, r2, #5
   3be64:	mov	r2, #100	; 0x64
   3be68:	mls	r1, r1, r2, r6
   3be6c:	ldr	r2, [pc, #116]	; 3bee8 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
   3be70:	add	r2, pc, r2
   3be74:	add	r1, r2, r1, lsl #1
   3be78:	ldrh	r1, [r1]
   3be7c:	strh	r1, [r0, #1]
   3be80:	mov	r0, #3
   3be84:	b	3bed8 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
   3be88:	cmp	r6, #10
   3be8c:	bcc	3bec8 <flatcc_json_printer_uint8_struct_field@@Base+0xd0>
   3be90:	strb	r1, [r0, #2]
   3be94:	movw	r1, #34079	; 0x851f
   3be98:	movt	r1, #20971	; 0x51eb
   3be9c:	umull	r1, r2, r6, r1
   3bea0:	lsr	r1, r2, #5
   3bea4:	mov	r2, #100	; 0x64
   3bea8:	mls	r1, r1, r2, r6
   3beac:	ldr	r2, [pc, #56]	; 3beec <flatcc_json_printer_uint8_struct_field@@Base+0xf4>
   3beb0:	add	r2, pc, r2
   3beb4:	add	r1, r2, r1, lsl #1
   3beb8:	ldrh	r1, [r1]
   3bebc:	strh	r1, [r0]
   3bec0:	mov	r0, #2
   3bec4:	b	3bed8 <flatcc_json_printer_uint8_struct_field@@Base+0xe0>
   3bec8:	strb	r1, [r0, #1]
   3becc:	add	r1, r6, #48	; 0x30
   3bed0:	strb	r1, [r0]
   3bed4:	mov	r0, #1
   3bed8:	ldr	r1, [r5, #20]
   3bedc:	add	r0, r1, r0
   3bee0:	str	r0, [r5, #20]
   3bee4:	pop	{r4, r5, r6, sl, fp, pc}
   3bee8:	andeq	pc, r0, pc, ror #3
   3beec:	andeq	pc, r0, pc, lsr #3

0003bef0 <flatcc_json_printer_uint16_struct_field@@Base>:
   3bef0:	push	{r4, r5, r6, sl, fp, lr}
   3bef4:	add	fp, sp, #16
   3bef8:	mov	r5, r1
   3befc:	mov	r4, r0
   3bf00:	add	r0, r2, r3
   3bf04:	ldr	r2, [fp, #12]
   3bf08:	ldr	r1, [fp, #8]
   3bf0c:	cmp	r5, #0
   3bf10:	ldrh	r6, [r0]
   3bf14:	ldrne	r0, [r4, #20]
   3bf18:	addne	r3, r0, #1
   3bf1c:	strne	r3, [r4, #20]
   3bf20:	movne	r3, #44	; 0x2c
   3bf24:	strbne	r3, [r0]
   3bf28:	mov	r0, r4
   3bf2c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3bf30:	ldr	r1, [r4, #20]
   3bf34:	mov	r0, r6
   3bf38:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3bf3c:	ldr	r1, [r4, #20]
   3bf40:	add	r0, r1, r0
   3bf44:	str	r0, [r4, #20]
   3bf48:	pop	{r4, r5, r6, sl, fp, pc}

0003bf4c <flatcc_json_printer_uint32_struct_field@@Base>:
   3bf4c:	push	{r4, r5, r6, sl, fp, lr}
   3bf50:	add	fp, sp, #16
   3bf54:	mov	r5, r1
   3bf58:	mov	r4, r0
   3bf5c:	ldr	r6, [r2, r3]
   3bf60:	ldr	r2, [fp, #12]
   3bf64:	ldr	r1, [fp, #8]
   3bf68:	cmp	r5, #0
   3bf6c:	ldrne	r0, [r4, #20]
   3bf70:	addne	r3, r0, #1
   3bf74:	strne	r3, [r4, #20]
   3bf78:	movne	r3, #44	; 0x2c
   3bf7c:	strbne	r3, [r0]
   3bf80:	mov	r0, r4
   3bf84:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3bf88:	ldr	r1, [r4, #20]
   3bf8c:	mov	r0, r6
   3bf90:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3bf94:	ldr	r1, [r4, #20]
   3bf98:	add	r0, r1, r0
   3bf9c:	str	r0, [r4, #20]
   3bfa0:	pop	{r4, r5, r6, sl, fp, pc}

0003bfa4 <flatcc_json_printer_uint64_struct_field@@Base>:
   3bfa4:	push	{r4, r5, r6, r7, fp, lr}
   3bfa8:	add	fp, sp, #16
   3bfac:	mov	r5, r1
   3bfb0:	ldr	r7, [r2, r3]!
   3bfb4:	mov	r4, r0
   3bfb8:	ldr	r1, [fp, #8]
   3bfbc:	cmp	r5, #0
   3bfc0:	ldrne	r0, [r4, #20]
   3bfc4:	ldr	r6, [r2, #4]
   3bfc8:	ldr	r2, [fp, #12]
   3bfcc:	addne	r3, r0, #1
   3bfd0:	strne	r3, [r4, #20]
   3bfd4:	movne	r3, #44	; 0x2c
   3bfd8:	strbne	r3, [r0]
   3bfdc:	mov	r0, r4
   3bfe0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3bfe4:	ldr	r2, [r4, #20]
   3bfe8:	mov	r0, r7
   3bfec:	mov	r1, r6
   3bff0:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3bff4:	ldr	r1, [r4, #20]
   3bff8:	add	r0, r1, r0
   3bffc:	str	r0, [r4, #20]
   3c000:	pop	{r4, r5, r6, r7, fp, pc}

0003c004 <flatcc_json_printer_int8_struct_field@@Base>:
   3c004:	push	{r4, r5, r6, sl, fp, lr}
   3c008:	add	fp, sp, #16
   3c00c:	mov	r4, r1
   3c010:	mov	r5, r0
   3c014:	add	r0, r2, r3
   3c018:	ldr	r2, [fp, #12]
   3c01c:	ldr	r1, [fp, #8]
   3c020:	cmp	r4, #0
   3c024:	ldrsb	r6, [r0]
   3c028:	ldrne	r0, [r5, #20]
   3c02c:	addne	r3, r0, #1
   3c030:	strne	r3, [r5, #20]
   3c034:	movne	r3, #44	; 0x2c
   3c038:	strbne	r3, [r0]
   3c03c:	mov	r0, r5
   3c040:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c044:	ubfx	r0, r6, #7, #1
   3c048:	ldr	r1, [r5, #20]
   3c04c:	cmn	r6, #1
   3c050:	movle	r2, #45	; 0x2d
   3c054:	rsble	r6, r6, #0
   3c058:	strble	r2, [r1], #1
   3c05c:	uxtb	r2, r6
   3c060:	cmp	r2, #100	; 0x64
   3c064:	bcc	3c0b0 <flatcc_json_printer_int8_struct_field@@Base+0xac>
   3c068:	mov	r3, #0
   3c06c:	strb	r3, [r1, #3]
   3c070:	movw	r3, #34079	; 0x851f
   3c074:	movt	r3, #20971	; 0x51eb
   3c078:	umull	r3, r6, r2, r3
   3c07c:	mov	r3, #48	; 0x30
   3c080:	orr	r3, r3, r6, lsr #5
   3c084:	strb	r3, [r1]
   3c088:	lsr	r3, r6, #5
   3c08c:	mov	r6, #100	; 0x64
   3c090:	mls	r2, r3, r6, r2
   3c094:	ldr	r3, [pc, #128]	; 3c11c <flatcc_json_printer_int8_struct_field@@Base+0x118>
   3c098:	add	r3, pc, r3
   3c09c:	add	r2, r3, r2, lsl #1
   3c0a0:	ldrh	r2, [r2]
   3c0a4:	strh	r2, [r1, #1]
   3c0a8:	mov	r1, #3
   3c0ac:	b	3c108 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3c0b0:	cmp	r2, #10
   3c0b4:	bcc	3c0f4 <flatcc_json_printer_int8_struct_field@@Base+0xf0>
   3c0b8:	mov	r3, #0
   3c0bc:	strb	r3, [r1, #2]
   3c0c0:	movw	r3, #34079	; 0x851f
   3c0c4:	movt	r3, #20971	; 0x51eb
   3c0c8:	umull	r3, r6, r2, r3
   3c0cc:	lsr	r3, r6, #5
   3c0d0:	mov	r6, #100	; 0x64
   3c0d4:	mls	r2, r3, r6, r2
   3c0d8:	ldr	r3, [pc, #64]	; 3c120 <flatcc_json_printer_int8_struct_field@@Base+0x11c>
   3c0dc:	add	r3, pc, r3
   3c0e0:	add	r2, r3, r2, lsl #1
   3c0e4:	ldrh	r2, [r2]
   3c0e8:	strh	r2, [r1]
   3c0ec:	mov	r1, #2
   3c0f0:	b	3c108 <flatcc_json_printer_int8_struct_field@@Base+0x104>
   3c0f4:	mov	r2, #0
   3c0f8:	strb	r2, [r1, #1]
   3c0fc:	add	r2, r6, #48	; 0x30
   3c100:	strb	r2, [r1]
   3c104:	mov	r1, #1
   3c108:	add	r0, r1, r0
   3c10c:	ldr	r1, [r5, #20]
   3c110:	add	r0, r1, r0
   3c114:	str	r0, [r5, #20]
   3c118:	pop	{r4, r5, r6, sl, fp, pc}
   3c11c:	andeq	lr, r0, r7, asr #31
   3c120:	andeq	lr, r0, r3, lsl #31

0003c124 <flatcc_json_printer_int16_struct_field@@Base>:
   3c124:	push	{r4, r5, r6, sl, fp, lr}
   3c128:	add	fp, sp, #16
   3c12c:	mov	ip, r1
   3c130:	mov	r4, r0
   3c134:	add	r0, r2, r3
   3c138:	ldr	r2, [fp, #12]
   3c13c:	ldr	r1, [fp, #8]
   3c140:	cmp	ip, #0
   3c144:	ldrsh	r5, [r0]
   3c148:	ldrne	r0, [r4, #20]
   3c14c:	addne	r3, r0, #1
   3c150:	strne	r3, [r4, #20]
   3c154:	movne	r3, #44	; 0x2c
   3c158:	strbne	r3, [r0]
   3c15c:	mov	r0, r4
   3c160:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c164:	ubfx	r6, r5, #15, #1
   3c168:	ldr	r1, [r4, #20]
   3c16c:	cmn	r5, #1
   3c170:	movle	r0, #45	; 0x2d
   3c174:	rsble	r5, r5, #0
   3c178:	strble	r0, [r1], #1
   3c17c:	uxth	r0, r5
   3c180:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3c184:	ldr	r1, [r4, #20]
   3c188:	add	r0, r0, r6
   3c18c:	add	r0, r1, r0
   3c190:	str	r0, [r4, #20]
   3c194:	pop	{r4, r5, r6, sl, fp, pc}

0003c198 <flatcc_json_printer_int32_struct_field@@Base>:
   3c198:	push	{r4, r5, r6, sl, fp, lr}
   3c19c:	add	fp, sp, #16
   3c1a0:	mov	ip, r1
   3c1a4:	mov	r4, r0
   3c1a8:	ldr	r5, [r2, r3]
   3c1ac:	ldr	r2, [fp, #12]
   3c1b0:	ldr	r1, [fp, #8]
   3c1b4:	cmp	ip, #0
   3c1b8:	ldrne	r0, [r4, #20]
   3c1bc:	addne	r3, r0, #1
   3c1c0:	strne	r3, [r4, #20]
   3c1c4:	movne	r3, #44	; 0x2c
   3c1c8:	strbne	r3, [r0]
   3c1cc:	mov	r0, r4
   3c1d0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c1d4:	ldr	r1, [r4, #20]
   3c1d8:	cmn	r5, #1
   3c1dc:	lsr	r6, r5, #31
   3c1e0:	movle	r0, #45	; 0x2d
   3c1e4:	rsble	r5, r5, #0
   3c1e8:	strble	r0, [r1], #1
   3c1ec:	mov	r0, r5
   3c1f0:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3c1f4:	ldr	r1, [r4, #20]
   3c1f8:	add	r0, r0, r6
   3c1fc:	add	r0, r1, r0
   3c200:	str	r0, [r4, #20]
   3c204:	pop	{r4, r5, r6, sl, fp, pc}

0003c208 <flatcc_json_printer_int64_struct_field@@Base>:
   3c208:	push	{r4, r5, r6, r7, fp, lr}
   3c20c:	add	fp, sp, #16
   3c210:	mov	r5, r1
   3c214:	ldr	r7, [r2, r3]!
   3c218:	mov	r4, r0
   3c21c:	ldr	r1, [fp, #8]
   3c220:	cmp	r5, #0
   3c224:	ldrne	r0, [r4, #20]
   3c228:	ldr	r6, [r2, #4]
   3c22c:	ldr	r2, [fp, #12]
   3c230:	addne	r3, r0, #1
   3c234:	strne	r3, [r4, #20]
   3c238:	movne	r3, #44	; 0x2c
   3c23c:	strbne	r3, [r0]
   3c240:	mov	r0, r4
   3c244:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c248:	ldr	r2, [r4, #20]
   3c24c:	lsr	r5, r6, #31
   3c250:	cmn	r6, #1
   3c254:	bgt	3c268 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   3c258:	mov	r0, #45	; 0x2d
   3c25c:	rsbs	r7, r7, #0
   3c260:	strb	r0, [r2], #1
   3c264:	rsc	r6, r6, #0
   3c268:	mov	r0, r7
   3c26c:	mov	r1, r6
   3c270:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3c274:	ldr	r1, [r4, #20]
   3c278:	add	r0, r0, r5
   3c27c:	add	r0, r1, r0
   3c280:	str	r0, [r4, #20]
   3c284:	pop	{r4, r5, r6, r7, fp, pc}

0003c288 <flatcc_json_printer_bool_struct_field@@Base>:
   3c288:	push	{r4, r5, fp, lr}
   3c28c:	add	fp, sp, #8
   3c290:	mov	ip, r1
   3c294:	mov	r4, r0
   3c298:	ldrb	r5, [r2, r3]
   3c29c:	ldr	r2, [fp, #12]
   3c2a0:	ldr	r1, [fp, #8]
   3c2a4:	cmp	ip, #0
   3c2a8:	ldrne	r0, [r4, #20]
   3c2ac:	addne	r3, r0, #1
   3c2b0:	strne	r3, [r4, #20]
   3c2b4:	movne	r3, #44	; 0x2c
   3c2b8:	strbne	r3, [r0]
   3c2bc:	mov	r0, r4
   3c2c0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c2c4:	ldr	r0, [r4, #20]
   3c2c8:	cmp	r5, #0
   3c2cc:	beq	3c2ec <flatcc_json_printer_bool_struct_field@@Base+0x64>
   3c2d0:	mov	r1, #0
   3c2d4:	strb	r1, [r0, #4]
   3c2d8:	movw	r1, #29300	; 0x7274
   3c2dc:	movt	r1, #25973	; 0x6575
   3c2e0:	str	r1, [r0]
   3c2e4:	mov	r0, #4
   3c2e8:	b	3c304 <flatcc_json_printer_bool_struct_field@@Base+0x7c>
   3c2ec:	mov	r1, #101	; 0x65
   3c2f0:	strh	r1, [r0, #4]
   3c2f4:	movw	r1, #24934	; 0x6166
   3c2f8:	movt	r1, #29548	; 0x736c
   3c2fc:	str	r1, [r0]
   3c300:	mov	r0, #5
   3c304:	ldr	r1, [r4, #20]
   3c308:	add	r0, r1, r0
   3c30c:	str	r0, [r4, #20]
   3c310:	pop	{r4, r5, fp, pc}

0003c314 <flatcc_json_printer_float_struct_field@@Base>:
   3c314:	push	{r4, sl, fp, lr}
   3c318:	add	fp, sp, #8
   3c31c:	vpush	{d8}
   3c320:	mov	ip, r1
   3c324:	mov	r4, r0
   3c328:	add	r0, r2, r3
   3c32c:	ldr	r2, [fp, #12]
   3c330:	ldr	r1, [fp, #8]
   3c334:	cmp	ip, #0
   3c338:	vldr	s16, [r0]
   3c33c:	ldrne	r0, [r4, #20]
   3c340:	addne	r3, r0, #1
   3c344:	strne	r3, [r4, #20]
   3c348:	movne	r3, #44	; 0x2c
   3c34c:	strbne	r3, [r0]
   3c350:	mov	r0, r4
   3c354:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c358:	ldr	r0, [r4, #20]
   3c35c:	vcvt.f64.f32	d0, s16
   3c360:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3c364:	ldr	r1, [r4, #20]
   3c368:	add	r0, r1, r0
   3c36c:	str	r0, [r4, #20]
   3c370:	vpop	{d8}
   3c374:	pop	{r4, sl, fp, pc}

0003c378 <flatcc_json_printer_double_struct_field@@Base>:
   3c378:	push	{r4, sl, fp, lr}
   3c37c:	add	fp, sp, #8
   3c380:	vpush	{d8}
   3c384:	mov	ip, r1
   3c388:	mov	r4, r0
   3c38c:	add	r0, r2, r3
   3c390:	ldr	r2, [fp, #12]
   3c394:	ldr	r1, [fp, #8]
   3c398:	cmp	ip, #0
   3c39c:	vldr	d8, [r0]
   3c3a0:	ldrne	r0, [r4, #20]
   3c3a4:	addne	r3, r0, #1
   3c3a8:	strne	r3, [r4, #20]
   3c3ac:	movne	r3, #44	; 0x2c
   3c3b0:	strbne	r3, [r0]
   3c3b4:	mov	r0, r4
   3c3b8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c3bc:	ldr	r0, [r4, #20]
   3c3c0:	vorr	d0, d8, d8
   3c3c4:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3c3c8:	ldr	r1, [r4, #20]
   3c3cc:	add	r0, r1, r0
   3c3d0:	str	r0, [r4, #20]
   3c3d4:	vpop	{d8}
   3c3d8:	pop	{r4, sl, fp, pc}

0003c3dc <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3c3dc:	push	{r4, r5, r6, r7, fp, lr}
   3c3e0:	add	fp, sp, #16
   3c3e4:	mov	r5, r1
   3c3e8:	mov	r4, r0
   3c3ec:	add	r7, fp, #8
   3c3f0:	ldrb	r6, [r2, r3]
   3c3f4:	cmp	r5, #0
   3c3f8:	ldm	r7, {r1, r2, r7}
   3c3fc:	ldrne	r0, [r4, #20]
   3c400:	addne	r3, r0, #1
   3c404:	strne	r3, [r4, #20]
   3c408:	movne	r3, #44	; 0x2c
   3c40c:	strbne	r3, [r0]
   3c410:	mov	r0, r4
   3c414:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c418:	ldrb	r0, [r4, #27]
   3c41c:	cmp	r0, #0
   3c420:	beq	3c478 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x9c>
   3c424:	ldr	r0, [r4, #20]
   3c428:	mov	r1, #0
   3c42c:	cmp	r6, #100	; 0x64
   3c430:	bcc	3c48c <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   3c434:	strb	r1, [r0, #3]
   3c438:	movw	r1, #34079	; 0x851f
   3c43c:	movt	r1, #20971	; 0x51eb
   3c440:	umull	r1, r2, r6, r1
   3c444:	mov	r1, #48	; 0x30
   3c448:	orr	r1, r1, r2, lsr #5
   3c44c:	strb	r1, [r0]
   3c450:	lsr	r1, r2, #5
   3c454:	mov	r2, #100	; 0x64
   3c458:	mls	r1, r1, r2, r6
   3c45c:	ldr	r2, [pc, #136]	; 3c4ec <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
   3c460:	add	r2, pc, r2
   3c464:	add	r1, r2, r1, lsl #1
   3c468:	ldrh	r1, [r1]
   3c46c:	strh	r1, [r0, #1]
   3c470:	mov	r0, #3
   3c474:	b	3c4dc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x100>
   3c478:	mov	r0, r4
   3c47c:	mov	r1, r6
   3c480:	mov	r2, r7
   3c484:	pop	{r4, r5, r6, r7, fp, lr}
   3c488:	bx	r2
   3c48c:	cmp	r6, #10
   3c490:	bcc	3c4cc <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf0>
   3c494:	strb	r1, [r0, #2]
   3c498:	movw	r1, #34079	; 0x851f
   3c49c:	movt	r1, #20971	; 0x51eb
   3c4a0:	umull	r1, r2, r6, r1
   3c4a4:	lsr	r1, r2, #5
   3c4a8:	mov	r2, #100	; 0x64
   3c4ac:	mls	r1, r1, r2, r6
   3c4b0:	ldr	r2, [pc, #56]	; 3c4f0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x114>
   3c4b4:	add	r2, pc, r2
   3c4b8:	add	r1, r2, r1, lsl #1
   3c4bc:	ldrh	r1, [r1]
   3c4c0:	strh	r1, [r0]
   3c4c4:	mov	r0, #2
   3c4c8:	b	3c4dc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x100>
   3c4cc:	strb	r1, [r0, #1]
   3c4d0:	add	r1, r6, #48	; 0x30
   3c4d4:	strb	r1, [r0]
   3c4d8:	mov	r0, #1
   3c4dc:	ldr	r1, [r4, #20]
   3c4e0:	add	r0, r1, r0
   3c4e4:	str	r0, [r4, #20]
   3c4e8:	pop	{r4, r5, r6, r7, fp, pc}
   3c4ec:	strdeq	lr, [r0], -pc	; <UNPREDICTABLE>
   3c4f0:	andeq	lr, r0, fp, lsr #23

0003c4f4 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3c4f4:	push	{r4, r5, r6, r7, fp, lr}
   3c4f8:	add	fp, sp, #16
   3c4fc:	mov	r5, r1
   3c500:	mov	r4, r0
   3c504:	add	r0, r2, r3
   3c508:	add	r7, fp, #8
   3c50c:	cmp	r5, #0
   3c510:	ldrh	r6, [r0]
   3c514:	ldm	r7, {r1, r2, r7}
   3c518:	ldrne	r0, [r4, #20]
   3c51c:	addne	r3, r0, #1
   3c520:	strne	r3, [r4, #20]
   3c524:	movne	r3, #44	; 0x2c
   3c528:	strbne	r3, [r0]
   3c52c:	mov	r0, r4
   3c530:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c534:	ldrb	r0, [r4, #27]
   3c538:	cmp	r0, #0
   3c53c:	beq	3c55c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x68>
   3c540:	ldr	r1, [r4, #20]
   3c544:	mov	r0, r6
   3c548:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3c54c:	ldr	r1, [r4, #20]
   3c550:	add	r0, r1, r0
   3c554:	str	r0, [r4, #20]
   3c558:	pop	{r4, r5, r6, r7, fp, pc}
   3c55c:	mov	r0, r4
   3c560:	mov	r1, r6
   3c564:	mov	r2, r7
   3c568:	pop	{r4, r5, r6, r7, fp, lr}
   3c56c:	bx	r2

0003c570 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3c570:	push	{r4, r5, r6, r7, fp, lr}
   3c574:	add	fp, sp, #16
   3c578:	mov	r5, r1
   3c57c:	mov	r4, r0
   3c580:	add	r7, fp, #8
   3c584:	ldr	r6, [r2, r3]
   3c588:	cmp	r5, #0
   3c58c:	ldm	r7, {r1, r2, r7}
   3c590:	ldrne	r0, [r4, #20]
   3c594:	addne	r3, r0, #1
   3c598:	strne	r3, [r4, #20]
   3c59c:	movne	r3, #44	; 0x2c
   3c5a0:	strbne	r3, [r0]
   3c5a4:	mov	r0, r4
   3c5a8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c5ac:	ldrb	r0, [r4, #27]
   3c5b0:	cmp	r0, #0
   3c5b4:	beq	3c5d4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x64>
   3c5b8:	ldr	r1, [r4, #20]
   3c5bc:	mov	r0, r6
   3c5c0:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3c5c4:	ldr	r1, [r4, #20]
   3c5c8:	add	r0, r1, r0
   3c5cc:	str	r0, [r4, #20]
   3c5d0:	pop	{r4, r5, r6, r7, fp, pc}
   3c5d4:	mov	r0, r4
   3c5d8:	mov	r1, r6
   3c5dc:	mov	r2, r7
   3c5e0:	pop	{r4, r5, r6, r7, fp, lr}
   3c5e4:	bx	r2

0003c5e8 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3c5e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c5ec:	add	fp, sp, #24
   3c5f0:	ldr	r6, [r2, r3]!
   3c5f4:	mov	r5, r1
   3c5f8:	mov	r4, r0
   3c5fc:	add	r8, fp, #8
   3c600:	cmp	r5, #0
   3c604:	ldr	r7, [r2, #4]
   3c608:	ldm	r8, {r1, r2, r8}
   3c60c:	ldrne	r0, [r4, #20]
   3c610:	addne	r3, r0, #1
   3c614:	strne	r3, [r4, #20]
   3c618:	movne	r3, #44	; 0x2c
   3c61c:	strbne	r3, [r0]
   3c620:	mov	r0, r4
   3c624:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c628:	ldrb	r0, [r4, #27]
   3c62c:	cmp	r0, #0
   3c630:	beq	3c654 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x6c>
   3c634:	ldr	r2, [r4, #20]
   3c638:	mov	r0, r6
   3c63c:	mov	r1, r7
   3c640:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3c644:	ldr	r1, [r4, #20]
   3c648:	add	r0, r1, r0
   3c64c:	str	r0, [r4, #20]
   3c650:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c654:	mov	r0, r4
   3c658:	mov	r2, r6
   3c65c:	mov	r3, r7
   3c660:	mov	r1, r8
   3c664:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c668:	bx	r1

0003c66c <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3c66c:	push	{r4, r5, r6, r7, fp, lr}
   3c670:	add	fp, sp, #16
   3c674:	mov	r5, r1
   3c678:	mov	r4, r0
   3c67c:	add	r0, r2, r3
   3c680:	add	r7, fp, #8
   3c684:	cmp	r5, #0
   3c688:	ldrsb	r6, [r0]
   3c68c:	ldm	r7, {r1, r2, r7}
   3c690:	ldrne	r0, [r4, #20]
   3c694:	addne	r3, r0, #1
   3c698:	strne	r3, [r4, #20]
   3c69c:	movne	r3, #44	; 0x2c
   3c6a0:	strbne	r3, [r0]
   3c6a4:	mov	r0, r4
   3c6a8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c6ac:	ldrb	r0, [r4, #27]
   3c6b0:	cmp	r0, #0
   3c6b4:	beq	3c724 <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   3c6b8:	ubfx	r0, r6, #7, #1
   3c6bc:	ldr	r1, [r4, #20]
   3c6c0:	cmn	r6, #1
   3c6c4:	movle	r2, #45	; 0x2d
   3c6c8:	rsble	r6, r6, #0
   3c6cc:	strble	r2, [r1], #1
   3c6d0:	uxtb	r2, r6
   3c6d4:	cmp	r2, #100	; 0x64
   3c6d8:	bcc	3c738 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   3c6dc:	mov	r3, #0
   3c6e0:	strb	r3, [r1, #3]
   3c6e4:	movw	r3, #34079	; 0x851f
   3c6e8:	movt	r3, #20971	; 0x51eb
   3c6ec:	umull	r3, r6, r2, r3
   3c6f0:	mov	r3, #48	; 0x30
   3c6f4:	orr	r3, r3, r6, lsr #5
   3c6f8:	strb	r3, [r1]
   3c6fc:	lsr	r3, r6, #5
   3c700:	mov	r6, #100	; 0x64
   3c704:	mls	r2, r3, r6, r2
   3c708:	ldr	r3, [pc, #148]	; 3c7a4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x138>
   3c70c:	add	r3, pc, r3
   3c710:	add	r2, r3, r2, lsl #1
   3c714:	ldrh	r2, [r2]
   3c718:	strh	r2, [r1, #1]
   3c71c:	mov	r1, #3
   3c720:	b	3c790 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3c724:	mov	r0, r4
   3c728:	mov	r1, r6
   3c72c:	mov	r2, r7
   3c730:	pop	{r4, r5, r6, r7, fp, lr}
   3c734:	bx	r2
   3c738:	cmp	r2, #10
   3c73c:	bcc	3c77c <flatcc_json_printer_int8_enum_struct_field@@Base+0x110>
   3c740:	mov	r3, #0
   3c744:	strb	r3, [r1, #2]
   3c748:	movw	r3, #34079	; 0x851f
   3c74c:	movt	r3, #20971	; 0x51eb
   3c750:	umull	r3, r6, r2, r3
   3c754:	lsr	r3, r6, #5
   3c758:	mov	r6, #100	; 0x64
   3c75c:	mls	r2, r3, r6, r2
   3c760:	ldr	r3, [pc, #64]	; 3c7a8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x13c>
   3c764:	add	r3, pc, r3
   3c768:	add	r2, r3, r2, lsl #1
   3c76c:	ldrh	r2, [r2]
   3c770:	strh	r2, [r1]
   3c774:	mov	r1, #2
   3c778:	b	3c790 <flatcc_json_printer_int8_enum_struct_field@@Base+0x124>
   3c77c:	mov	r2, #0
   3c780:	strb	r2, [r1, #1]
   3c784:	add	r2, r6, #48	; 0x30
   3c788:	strb	r2, [r1]
   3c78c:	mov	r1, #1
   3c790:	add	r0, r1, r0
   3c794:	ldr	r1, [r4, #20]
   3c798:	add	r0, r1, r0
   3c79c:	str	r0, [r4, #20]
   3c7a0:	pop	{r4, r5, r6, r7, fp, pc}
   3c7a4:	andeq	lr, r0, r3, asr r9
   3c7a8:	strdeq	lr, [r0], -fp

0003c7ac <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3c7ac:	push	{r4, r5, r6, r7, fp, lr}
   3c7b0:	add	fp, sp, #16
   3c7b4:	mov	r5, r1
   3c7b8:	mov	r4, r0
   3c7bc:	add	r0, r2, r3
   3c7c0:	add	r7, fp, #8
   3c7c4:	cmp	r5, #0
   3c7c8:	ldrsh	r6, [r0]
   3c7cc:	ldm	r7, {r1, r2, r7}
   3c7d0:	ldrne	r0, [r4, #20]
   3c7d4:	addne	r3, r0, #1
   3c7d8:	strne	r3, [r4, #20]
   3c7dc:	movne	r3, #44	; 0x2c
   3c7e0:	strbne	r3, [r0]
   3c7e4:	mov	r0, r4
   3c7e8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c7ec:	ldrb	r0, [r4, #27]
   3c7f0:	cmp	r0, #0
   3c7f4:	beq	3c82c <flatcc_json_printer_int16_enum_struct_field@@Base+0x80>
   3c7f8:	ubfx	r5, r6, #15, #1
   3c7fc:	ldr	r1, [r4, #20]
   3c800:	cmn	r6, #1
   3c804:	movle	r0, #45	; 0x2d
   3c808:	rsble	r6, r6, #0
   3c80c:	strble	r0, [r1], #1
   3c810:	uxth	r0, r6
   3c814:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3c818:	ldr	r1, [r4, #20]
   3c81c:	add	r0, r0, r5
   3c820:	add	r0, r1, r0
   3c824:	str	r0, [r4, #20]
   3c828:	pop	{r4, r5, r6, r7, fp, pc}
   3c82c:	mov	r0, r4
   3c830:	mov	r1, r6
   3c834:	mov	r2, r7
   3c838:	pop	{r4, r5, r6, r7, fp, lr}
   3c83c:	bx	r2

0003c840 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3c840:	push	{r4, r5, r6, r7, fp, lr}
   3c844:	add	fp, sp, #16
   3c848:	mov	r5, r1
   3c84c:	mov	r4, r0
   3c850:	add	r7, fp, #8
   3c854:	ldr	r6, [r2, r3]
   3c858:	cmp	r5, #0
   3c85c:	ldm	r7, {r1, r2, r7}
   3c860:	ldrne	r0, [r4, #20]
   3c864:	addne	r3, r0, #1
   3c868:	strne	r3, [r4, #20]
   3c86c:	movne	r3, #44	; 0x2c
   3c870:	strbne	r3, [r0]
   3c874:	mov	r0, r4
   3c878:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c87c:	ldrb	r0, [r4, #27]
   3c880:	cmp	r0, #0
   3c884:	beq	3c8bc <flatcc_json_printer_int32_enum_struct_field@@Base+0x7c>
   3c888:	ldr	r1, [r4, #20]
   3c88c:	cmn	r6, #1
   3c890:	lsr	r5, r6, #31
   3c894:	movle	r0, #45	; 0x2d
   3c898:	rsble	r6, r6, #0
   3c89c:	strble	r0, [r1], #1
   3c8a0:	mov	r0, r6
   3c8a4:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3c8a8:	ldr	r1, [r4, #20]
   3c8ac:	add	r0, r0, r5
   3c8b0:	add	r0, r1, r0
   3c8b4:	str	r0, [r4, #20]
   3c8b8:	pop	{r4, r5, r6, r7, fp, pc}
   3c8bc:	mov	r0, r4
   3c8c0:	mov	r1, r6
   3c8c4:	mov	r2, r7
   3c8c8:	pop	{r4, r5, r6, r7, fp, lr}
   3c8cc:	bx	r2

0003c8d0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3c8d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c8d4:	add	fp, sp, #24
   3c8d8:	ldr	r7, [r2, r3]!
   3c8dc:	mov	r6, r1
   3c8e0:	mov	r4, r0
   3c8e4:	add	r8, fp, #8
   3c8e8:	cmp	r6, #0
   3c8ec:	ldr	r5, [r2, #4]
   3c8f0:	ldm	r8, {r1, r2, r8}
   3c8f4:	ldrne	r0, [r4, #20]
   3c8f8:	addne	r3, r0, #1
   3c8fc:	strne	r3, [r4, #20]
   3c900:	movne	r3, #44	; 0x2c
   3c904:	strbne	r3, [r0]
   3c908:	mov	r0, r4
   3c90c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c910:	ldrb	r0, [r4, #27]
   3c914:	cmp	r0, #0
   3c918:	beq	3c95c <flatcc_json_printer_int64_enum_struct_field@@Base+0x8c>
   3c91c:	ldr	r2, [r4, #20]
   3c920:	lsr	r6, r5, #31
   3c924:	cmn	r5, #1
   3c928:	bgt	3c93c <flatcc_json_printer_int64_enum_struct_field@@Base+0x6c>
   3c92c:	mov	r0, #45	; 0x2d
   3c930:	rsbs	r7, r7, #0
   3c934:	strb	r0, [r2], #1
   3c938:	rsc	r5, r5, #0
   3c93c:	mov	r0, r7
   3c940:	mov	r1, r5
   3c944:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3c948:	ldr	r1, [r4, #20]
   3c94c:	add	r0, r0, r6
   3c950:	add	r0, r1, r0
   3c954:	str	r0, [r4, #20]
   3c958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c95c:	mov	r0, r4
   3c960:	mov	r2, r7
   3c964:	mov	r3, r5
   3c968:	mov	r1, r8
   3c96c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c970:	bx	r1

0003c974 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3c974:	push	{r4, r5, r6, r7, fp, lr}
   3c978:	add	fp, sp, #16
   3c97c:	mov	r5, r1
   3c980:	mov	r4, r0
   3c984:	add	r7, fp, #8
   3c988:	ldrb	r6, [r2, r3]
   3c98c:	cmp	r5, #0
   3c990:	ldm	r7, {r1, r2, r7}
   3c994:	ldrne	r0, [r4, #20]
   3c998:	addne	r3, r0, #1
   3c99c:	strne	r3, [r4, #20]
   3c9a0:	movne	r3, #44	; 0x2c
   3c9a4:	strbne	r3, [r0]
   3c9a8:	mov	r0, r4
   3c9ac:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3c9b0:	ldrb	r0, [r4, #27]
   3c9b4:	cmp	r0, #0
   3c9b8:	beq	3c9e4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x70>
   3c9bc:	ldr	r0, [r4, #20]
   3c9c0:	cmp	r6, #0
   3c9c4:	beq	3c9f8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x84>
   3c9c8:	mov	r1, #0
   3c9cc:	strb	r1, [r0, #4]
   3c9d0:	movw	r1, #29300	; 0x7274
   3c9d4:	movt	r1, #25973	; 0x6575
   3c9d8:	str	r1, [r0]
   3c9dc:	mov	r0, #4
   3c9e0:	b	3ca10 <flatcc_json_printer_bool_enum_struct_field@@Base+0x9c>
   3c9e4:	mov	r0, r4
   3c9e8:	mov	r1, r6
   3c9ec:	mov	r2, r7
   3c9f0:	pop	{r4, r5, r6, r7, fp, lr}
   3c9f4:	bx	r2
   3c9f8:	mov	r1, #101	; 0x65
   3c9fc:	strh	r1, [r0, #4]
   3ca00:	movw	r1, #24934	; 0x6166
   3ca04:	movt	r1, #29548	; 0x736c
   3ca08:	str	r1, [r0]
   3ca0c:	mov	r0, #5
   3ca10:	ldr	r1, [r4, #20]
   3ca14:	add	r0, r1, r0
   3ca18:	str	r0, [r4, #20]
   3ca1c:	pop	{r4, r5, r6, r7, fp, pc}

0003ca20 <flatcc_json_printer_utype_vector_field@@Base>:
   3ca20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ca24:	add	fp, sp, #28
   3ca28:	sub	sp, sp, #4
   3ca2c:	mov	r4, r0
   3ca30:	mov	r0, #4
   3ca34:	add	r0, r0, r2, lsl #1
   3ca38:	ldr	r2, [r1, #8]
   3ca3c:	cmp	r0, r2
   3ca40:	bge	3ca60 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3ca44:	ldr	r2, [r1, #4]
   3ca48:	add	r0, r2, r0
   3ca4c:	ldrh	r0, [r0]
   3ca50:	cmp	r0, #0
   3ca54:	ldrne	r2, [r1]
   3ca58:	addsne	r9, r2, r0
   3ca5c:	bne	3ca68 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3ca60:	sub	sp, fp, #28
   3ca64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ca68:	ldr	r0, [r1, #16]
   3ca6c:	ldr	r2, [fp, #8]
   3ca70:	add	r7, r0, #1
   3ca74:	cmp	r0, #0
   3ca78:	str	r7, [r1, #16]
   3ca7c:	ldrne	r0, [r4, #20]
   3ca80:	addne	r1, r0, #1
   3ca84:	strne	r1, [r4, #20]
   3ca88:	movne	r1, #44	; 0x2c
   3ca8c:	strbne	r1, [r0]
   3ca90:	mov	r1, r3
   3ca94:	ldr	r0, [r9]
   3ca98:	ldr	r8, [r9, r0]!
   3ca9c:	mov	r0, r4
   3caa0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3caa4:	ldr	r1, [r4, #32]
   3caa8:	ldr	r0, [r4, #20]
   3caac:	cmp	r8, #0
   3cab0:	add	r1, r1, #1
   3cab4:	str	r1, [r4, #32]
   3cab8:	add	r1, r0, #1
   3cabc:	str	r1, [r4, #20]
   3cac0:	mov	r1, #91	; 0x5b
   3cac4:	strb	r1, [r0]
   3cac8:	beq	3ce2c <flatcc_json_printer_utype_vector_field@@Base+0x40c>
   3cacc:	ldrb	r1, [r4, #25]
   3cad0:	ldr	r0, [r4, #20]
   3cad4:	cmp	r1, #0
   3cad8:	beq	3cb94 <flatcc_json_printer_utype_vector_field@@Base+0x174>
   3cadc:	add	r1, r0, #1
   3cae0:	str	r1, [r4, #20]
   3cae4:	mov	r1, #10
   3cae8:	strb	r1, [r0]
   3caec:	ldr	r0, [r4, #20]
   3caf0:	ldrb	r2, [r4, #25]
   3caf4:	ldr	r3, [r4, #32]
   3caf8:	ldr	r1, [r4, #16]
   3cafc:	mla	r7, r3, r2, r0
   3cb00:	mul	r5, r3, r2
   3cb04:	cmp	r7, r1
   3cb08:	bls	3cb78 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3cb0c:	cmp	r0, r1
   3cb10:	bcc	3cb2c <flatcc_json_printer_utype_vector_field@@Base+0x10c>
   3cb14:	ldr	r2, [r4, #44]	; 0x2c
   3cb18:	mov	r0, r4
   3cb1c:	mov	r1, #0
   3cb20:	blx	r2
   3cb24:	ldr	r1, [r4, #16]
   3cb28:	ldr	r0, [r4, #20]
   3cb2c:	sub	r6, r1, r0
   3cb30:	cmp	r6, r5
   3cb34:	bcs	3cb78 <flatcc_json_printer_utype_vector_field@@Base+0x158>
   3cb38:	mov	r1, #32
   3cb3c:	mov	r2, r6
   3cb40:	bl	14ee8 <memset@plt>
   3cb44:	ldr	r0, [r4, #20]
   3cb48:	ldr	r2, [r4, #44]	; 0x2c
   3cb4c:	mov	r1, #0
   3cb50:	add	r0, r0, r6
   3cb54:	str	r0, [r4, #20]
   3cb58:	mov	r0, r4
   3cb5c:	blx	r2
   3cb60:	ldr	r1, [r4, #16]
   3cb64:	ldr	r0, [r4, #20]
   3cb68:	sub	r5, r5, r6
   3cb6c:	sub	r6, r1, r0
   3cb70:	cmp	r5, r6
   3cb74:	bhi	3cb38 <flatcc_json_printer_utype_vector_field@@Base+0x118>
   3cb78:	mov	r1, #32
   3cb7c:	mov	r2, r5
   3cb80:	bl	14ee8 <memset@plt>
   3cb84:	ldr	r0, [r4, #20]
   3cb88:	add	r0, r0, r5
   3cb8c:	str	r0, [r4, #20]
   3cb90:	b	3cbb4 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   3cb94:	ldr	r1, [r4, #16]
   3cb98:	cmp	r0, r1
   3cb9c:	bcc	3cbb4 <flatcc_json_printer_utype_vector_field@@Base+0x194>
   3cba0:	ldr	r2, [r4, #44]	; 0x2c
   3cba4:	mov	r0, r4
   3cba8:	mov	r1, #0
   3cbac:	blx	r2
   3cbb0:	ldr	r0, [r4, #20]
   3cbb4:	ldrb	r1, [r9, #4]
   3cbb8:	mov	r2, #0
   3cbbc:	cmp	r1, #100	; 0x64
   3cbc0:	bcc	3cc08 <flatcc_json_printer_utype_vector_field@@Base+0x1e8>
   3cbc4:	strb	r2, [r0, #3]
   3cbc8:	movw	r2, #34079	; 0x851f
   3cbcc:	movt	r2, #20971	; 0x51eb
   3cbd0:	umull	r2, r3, r1, r2
   3cbd4:	mov	r2, #48	; 0x30
   3cbd8:	orr	r2, r2, r3, lsr #5
   3cbdc:	strb	r2, [r0]
   3cbe0:	lsr	r2, r3, #5
   3cbe4:	mov	r3, #100	; 0x64
   3cbe8:	mls	r1, r2, r3, r1
   3cbec:	ldr	r2, [pc, #796]	; 3cf10 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   3cbf0:	add	r2, pc, r2
   3cbf4:	add	r1, r2, r1, lsl #1
   3cbf8:	ldrh	r1, [r1]
   3cbfc:	strh	r1, [r0, #1]
   3cc00:	mov	r0, #3
   3cc04:	b	3cc58 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   3cc08:	cmp	r1, #10
   3cc0c:	bcc	3cc48 <flatcc_json_printer_utype_vector_field@@Base+0x228>
   3cc10:	strb	r2, [r0, #2]
   3cc14:	movw	r2, #34079	; 0x851f
   3cc18:	movt	r2, #20971	; 0x51eb
   3cc1c:	umull	r2, r3, r1, r2
   3cc20:	lsr	r2, r3, #5
   3cc24:	mov	r3, #100	; 0x64
   3cc28:	mls	r1, r2, r3, r1
   3cc2c:	ldr	r2, [pc, #736]	; 3cf14 <flatcc_json_printer_utype_vector_field@@Base+0x4f4>
   3cc30:	add	r2, pc, r2
   3cc34:	add	r1, r2, r1, lsl #1
   3cc38:	ldrh	r1, [r1]
   3cc3c:	strh	r1, [r0]
   3cc40:	mov	r0, #2
   3cc44:	b	3cc58 <flatcc_json_printer_utype_vector_field@@Base+0x238>
   3cc48:	add	r1, r1, #48	; 0x30
   3cc4c:	strb	r2, [r0, #1]
   3cc50:	strb	r1, [r0]
   3cc54:	mov	r0, #1
   3cc58:	ldr	r1, [r4, #20]
   3cc5c:	subs	r8, r8, #1
   3cc60:	add	r0, r1, r0
   3cc64:	str	r0, [r4, #20]
   3cc68:	beq	3ce2c <flatcc_json_printer_utype_vector_field@@Base+0x40c>
   3cc6c:	ldr	r0, [r4, #20]
   3cc70:	add	r7, r9, #5
   3cc74:	mov	r9, #44	; 0x2c
   3cc78:	mov	sl, #0
   3cc7c:	add	r1, r0, #1
   3cc80:	str	r1, [r4, #20]
   3cc84:	strb	r9, [r0]
   3cc88:	ldrb	r1, [r4, #25]
   3cc8c:	ldr	r0, [r4, #20]
   3cc90:	cmp	r1, #0
   3cc94:	beq	3cd50 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   3cc98:	add	r1, r0, #1
   3cc9c:	str	r1, [r4, #20]
   3cca0:	mov	r1, #10
   3cca4:	strb	r1, [r0]
   3cca8:	ldr	r0, [r4, #20]
   3ccac:	ldrb	r2, [r4, #25]
   3ccb0:	ldr	r3, [r4, #32]
   3ccb4:	ldr	r1, [r4, #16]
   3ccb8:	mla	r6, r3, r2, r0
   3ccbc:	mul	r5, r3, r2
   3ccc0:	cmp	r6, r1
   3ccc4:	bls	3cd34 <flatcc_json_printer_utype_vector_field@@Base+0x314>
   3ccc8:	cmp	r0, r1
   3cccc:	bcc	3cce8 <flatcc_json_printer_utype_vector_field@@Base+0x2c8>
   3ccd0:	ldr	r2, [r4, #44]	; 0x2c
   3ccd4:	mov	r0, r4
   3ccd8:	mov	r1, #0
   3ccdc:	blx	r2
   3cce0:	ldr	r1, [r4, #16]
   3cce4:	ldr	r0, [r4, #20]
   3cce8:	sub	r6, r1, r0
   3ccec:	cmp	r6, r5
   3ccf0:	bcs	3cd34 <flatcc_json_printer_utype_vector_field@@Base+0x314>
   3ccf4:	mov	r1, #32
   3ccf8:	mov	r2, r6
   3ccfc:	bl	14ee8 <memset@plt>
   3cd00:	ldr	r0, [r4, #20]
   3cd04:	ldr	r2, [r4, #44]	; 0x2c
   3cd08:	mov	r1, #0
   3cd0c:	add	r0, r0, r6
   3cd10:	str	r0, [r4, #20]
   3cd14:	mov	r0, r4
   3cd18:	blx	r2
   3cd1c:	ldr	r1, [r4, #16]
   3cd20:	ldr	r0, [r4, #20]
   3cd24:	sub	r5, r5, r6
   3cd28:	sub	r6, r1, r0
   3cd2c:	cmp	r5, r6
   3cd30:	bhi	3ccf4 <flatcc_json_printer_utype_vector_field@@Base+0x2d4>
   3cd34:	mov	r1, #32
   3cd38:	mov	r2, r5
   3cd3c:	bl	14ee8 <memset@plt>
   3cd40:	ldr	r0, [r4, #20]
   3cd44:	add	r0, r0, r5
   3cd48:	str	r0, [r4, #20]
   3cd4c:	b	3cd70 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   3cd50:	ldr	r1, [r4, #16]
   3cd54:	cmp	r0, r1
   3cd58:	bcc	3cd70 <flatcc_json_printer_utype_vector_field@@Base+0x350>
   3cd5c:	ldr	r2, [r4, #44]	; 0x2c
   3cd60:	mov	r0, r4
   3cd64:	mov	r1, #0
   3cd68:	blx	r2
   3cd6c:	ldr	r0, [r4, #20]
   3cd70:	ldrb	r1, [r7]
   3cd74:	sub	r8, r8, #1
   3cd78:	cmp	r1, #100	; 0x64
   3cd7c:	bcc	3cdc4 <flatcc_json_printer_utype_vector_field@@Base+0x3a4>
   3cd80:	movw	r2, #34079	; 0x851f
   3cd84:	strb	sl, [r0, #3]
   3cd88:	movt	r2, #20971	; 0x51eb
   3cd8c:	umull	r2, r3, r1, r2
   3cd90:	mov	r2, #48	; 0x30
   3cd94:	orr	r2, r2, r3, lsr #5
   3cd98:	strb	r2, [r0]
   3cd9c:	lsr	r2, r3, #5
   3cda0:	mov	r3, #100	; 0x64
   3cda4:	mls	r1, r2, r3, r1
   3cda8:	ldr	r2, [pc, #360]	; 3cf18 <flatcc_json_printer_utype_vector_field@@Base+0x4f8>
   3cdac:	add	r2, pc, r2
   3cdb0:	add	r1, r2, r1, lsl #1
   3cdb4:	ldrh	r1, [r1]
   3cdb8:	strh	r1, [r0, #1]
   3cdbc:	mov	r0, #3
   3cdc0:	b	3ce14 <flatcc_json_printer_utype_vector_field@@Base+0x3f4>
   3cdc4:	cmp	r1, #10
   3cdc8:	bcc	3ce04 <flatcc_json_printer_utype_vector_field@@Base+0x3e4>
   3cdcc:	movw	r2, #34079	; 0x851f
   3cdd0:	strb	sl, [r0, #2]
   3cdd4:	movt	r2, #20971	; 0x51eb
   3cdd8:	umull	r2, r3, r1, r2
   3cddc:	lsr	r2, r3, #5
   3cde0:	mov	r3, #100	; 0x64
   3cde4:	mls	r1, r2, r3, r1
   3cde8:	ldr	r2, [pc, #300]	; 3cf1c <flatcc_json_printer_utype_vector_field@@Base+0x4fc>
   3cdec:	add	r2, pc, r2
   3cdf0:	add	r1, r2, r1, lsl #1
   3cdf4:	ldrh	r1, [r1]
   3cdf8:	strh	r1, [r0]
   3cdfc:	mov	r0, #2
   3ce00:	b	3ce14 <flatcc_json_printer_utype_vector_field@@Base+0x3f4>
   3ce04:	add	r1, r1, #48	; 0x30
   3ce08:	strb	sl, [r0, #1]
   3ce0c:	strb	r1, [r0]
   3ce10:	mov	r0, #1
   3ce14:	ldr	r1, [r4, #20]
   3ce18:	add	r7, r7, #1
   3ce1c:	cmp	r8, #0
   3ce20:	add	r0, r1, r0
   3ce24:	str	r0, [r4, #20]
   3ce28:	bne	3cc7c <flatcc_json_printer_utype_vector_field@@Base+0x25c>
   3ce2c:	ldrb	r1, [r4, #25]
   3ce30:	ldr	r0, [r4, #20]
   3ce34:	cmp	r1, #0
   3ce38:	beq	3cef8 <flatcc_json_printer_utype_vector_field@@Base+0x4d8>
   3ce3c:	add	r1, r0, #1
   3ce40:	str	r1, [r4, #20]
   3ce44:	mov	r1, #10
   3ce48:	strb	r1, [r0]
   3ce4c:	ldr	r0, [r4, #32]
   3ce50:	sub	r2, r0, #1
   3ce54:	str	r2, [r4, #32]
   3ce58:	ldrb	r3, [r4, #25]
   3ce5c:	ldr	r0, [r4, #20]
   3ce60:	ldr	r1, [r4, #16]
   3ce64:	mla	r7, r2, r3, r0
   3ce68:	mul	r5, r2, r3
   3ce6c:	cmp	r7, r1
   3ce70:	bls	3cee0 <flatcc_json_printer_utype_vector_field@@Base+0x4c0>
   3ce74:	cmp	r0, r1
   3ce78:	bcc	3ce94 <flatcc_json_printer_utype_vector_field@@Base+0x474>
   3ce7c:	ldr	r2, [r4, #44]	; 0x2c
   3ce80:	mov	r0, r4
   3ce84:	mov	r1, #0
   3ce88:	blx	r2
   3ce8c:	ldr	r1, [r4, #16]
   3ce90:	ldr	r0, [r4, #20]
   3ce94:	sub	r6, r1, r0
   3ce98:	cmp	r6, r5
   3ce9c:	bcs	3cee0 <flatcc_json_printer_utype_vector_field@@Base+0x4c0>
   3cea0:	mov	r1, #32
   3cea4:	mov	r2, r6
   3cea8:	bl	14ee8 <memset@plt>
   3ceac:	ldr	r0, [r4, #20]
   3ceb0:	ldr	r2, [r4, #44]	; 0x2c
   3ceb4:	mov	r1, #0
   3ceb8:	add	r0, r0, r6
   3cebc:	str	r0, [r4, #20]
   3cec0:	mov	r0, r4
   3cec4:	blx	r2
   3cec8:	ldr	r1, [r4, #16]
   3cecc:	ldr	r0, [r4, #20]
   3ced0:	sub	r5, r5, r6
   3ced4:	sub	r6, r1, r0
   3ced8:	cmp	r5, r6
   3cedc:	bhi	3cea0 <flatcc_json_printer_utype_vector_field@@Base+0x480>
   3cee0:	mov	r1, #32
   3cee4:	mov	r2, r5
   3cee8:	bl	14ee8 <memset@plt>
   3ceec:	ldr	r0, [r4, #20]
   3cef0:	add	r0, r0, r5
   3cef4:	str	r0, [r4, #20]
   3cef8:	add	r1, r0, #1
   3cefc:	str	r1, [r4, #20]
   3cf00:	mov	r1, #93	; 0x5d
   3cf04:	strb	r1, [r0]
   3cf08:	sub	sp, fp, #28
   3cf0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cf10:	andeq	lr, r0, pc, ror #8
   3cf14:	andeq	lr, r0, pc, lsr #8
   3cf18:			; <UNDEFINED> instruction: 0x0000e2b3
   3cf1c:	andeq	lr, r0, r3, ror r2

0003cf20 <flatcc_json_printer_uint8_vector_field@@Base>:
   3cf20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cf24:	add	fp, sp, #28
   3cf28:	sub	sp, sp, #4
   3cf2c:	mov	r4, r0
   3cf30:	mov	r0, #4
   3cf34:	add	r0, r0, r2, lsl #1
   3cf38:	ldr	r2, [r1, #8]
   3cf3c:	cmp	r0, r2
   3cf40:	bge	3cf60 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3cf44:	ldr	r2, [r1, #4]
   3cf48:	add	r0, r2, r0
   3cf4c:	ldrh	r0, [r0]
   3cf50:	cmp	r0, #0
   3cf54:	ldrne	r2, [r1]
   3cf58:	addsne	r9, r2, r0
   3cf5c:	bne	3cf68 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3cf60:	sub	sp, fp, #28
   3cf64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cf68:	ldr	r0, [r1, #16]
   3cf6c:	ldr	r2, [fp, #8]
   3cf70:	add	r7, r0, #1
   3cf74:	cmp	r0, #0
   3cf78:	str	r7, [r1, #16]
   3cf7c:	ldrne	r0, [r4, #20]
   3cf80:	addne	r1, r0, #1
   3cf84:	strne	r1, [r4, #20]
   3cf88:	movne	r1, #44	; 0x2c
   3cf8c:	strbne	r1, [r0]
   3cf90:	mov	r1, r3
   3cf94:	ldr	r0, [r9]
   3cf98:	ldr	r8, [r9, r0]!
   3cf9c:	mov	r0, r4
   3cfa0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3cfa4:	ldr	r1, [r4, #32]
   3cfa8:	ldr	r0, [r4, #20]
   3cfac:	cmp	r8, #0
   3cfb0:	add	r1, r1, #1
   3cfb4:	str	r1, [r4, #32]
   3cfb8:	add	r1, r0, #1
   3cfbc:	str	r1, [r4, #20]
   3cfc0:	mov	r1, #91	; 0x5b
   3cfc4:	strb	r1, [r0]
   3cfc8:	beq	3d32c <flatcc_json_printer_uint8_vector_field@@Base+0x40c>
   3cfcc:	ldrb	r1, [r4, #25]
   3cfd0:	ldr	r0, [r4, #20]
   3cfd4:	cmp	r1, #0
   3cfd8:	beq	3d094 <flatcc_json_printer_uint8_vector_field@@Base+0x174>
   3cfdc:	add	r1, r0, #1
   3cfe0:	str	r1, [r4, #20]
   3cfe4:	mov	r1, #10
   3cfe8:	strb	r1, [r0]
   3cfec:	ldr	r0, [r4, #20]
   3cff0:	ldrb	r2, [r4, #25]
   3cff4:	ldr	r3, [r4, #32]
   3cff8:	ldr	r1, [r4, #16]
   3cffc:	mla	r7, r3, r2, r0
   3d000:	mul	r5, r3, r2
   3d004:	cmp	r7, r1
   3d008:	bls	3d078 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   3d00c:	cmp	r0, r1
   3d010:	bcc	3d02c <flatcc_json_printer_uint8_vector_field@@Base+0x10c>
   3d014:	ldr	r2, [r4, #44]	; 0x2c
   3d018:	mov	r0, r4
   3d01c:	mov	r1, #0
   3d020:	blx	r2
   3d024:	ldr	r1, [r4, #16]
   3d028:	ldr	r0, [r4, #20]
   3d02c:	sub	r6, r1, r0
   3d030:	cmp	r6, r5
   3d034:	bcs	3d078 <flatcc_json_printer_uint8_vector_field@@Base+0x158>
   3d038:	mov	r1, #32
   3d03c:	mov	r2, r6
   3d040:	bl	14ee8 <memset@plt>
   3d044:	ldr	r0, [r4, #20]
   3d048:	ldr	r2, [r4, #44]	; 0x2c
   3d04c:	mov	r1, #0
   3d050:	add	r0, r0, r6
   3d054:	str	r0, [r4, #20]
   3d058:	mov	r0, r4
   3d05c:	blx	r2
   3d060:	ldr	r1, [r4, #16]
   3d064:	ldr	r0, [r4, #20]
   3d068:	sub	r5, r5, r6
   3d06c:	sub	r6, r1, r0
   3d070:	cmp	r5, r6
   3d074:	bhi	3d038 <flatcc_json_printer_uint8_vector_field@@Base+0x118>
   3d078:	mov	r1, #32
   3d07c:	mov	r2, r5
   3d080:	bl	14ee8 <memset@plt>
   3d084:	ldr	r0, [r4, #20]
   3d088:	add	r0, r0, r5
   3d08c:	str	r0, [r4, #20]
   3d090:	b	3d0b4 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   3d094:	ldr	r1, [r4, #16]
   3d098:	cmp	r0, r1
   3d09c:	bcc	3d0b4 <flatcc_json_printer_uint8_vector_field@@Base+0x194>
   3d0a0:	ldr	r2, [r4, #44]	; 0x2c
   3d0a4:	mov	r0, r4
   3d0a8:	mov	r1, #0
   3d0ac:	blx	r2
   3d0b0:	ldr	r0, [r4, #20]
   3d0b4:	ldrb	r1, [r9, #4]
   3d0b8:	mov	r2, #0
   3d0bc:	cmp	r1, #100	; 0x64
   3d0c0:	bcc	3d108 <flatcc_json_printer_uint8_vector_field@@Base+0x1e8>
   3d0c4:	strb	r2, [r0, #3]
   3d0c8:	movw	r2, #34079	; 0x851f
   3d0cc:	movt	r2, #20971	; 0x51eb
   3d0d0:	umull	r2, r3, r1, r2
   3d0d4:	mov	r2, #48	; 0x30
   3d0d8:	orr	r2, r2, r3, lsr #5
   3d0dc:	strb	r2, [r0]
   3d0e0:	lsr	r2, r3, #5
   3d0e4:	mov	r3, #100	; 0x64
   3d0e8:	mls	r1, r2, r3, r1
   3d0ec:	ldr	r2, [pc, #796]	; 3d410 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   3d0f0:	add	r2, pc, r2
   3d0f4:	add	r1, r2, r1, lsl #1
   3d0f8:	ldrh	r1, [r1]
   3d0fc:	strh	r1, [r0, #1]
   3d100:	mov	r0, #3
   3d104:	b	3d158 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   3d108:	cmp	r1, #10
   3d10c:	bcc	3d148 <flatcc_json_printer_uint8_vector_field@@Base+0x228>
   3d110:	strb	r2, [r0, #2]
   3d114:	movw	r2, #34079	; 0x851f
   3d118:	movt	r2, #20971	; 0x51eb
   3d11c:	umull	r2, r3, r1, r2
   3d120:	lsr	r2, r3, #5
   3d124:	mov	r3, #100	; 0x64
   3d128:	mls	r1, r2, r3, r1
   3d12c:	ldr	r2, [pc, #736]	; 3d414 <flatcc_json_printer_uint8_vector_field@@Base+0x4f4>
   3d130:	add	r2, pc, r2
   3d134:	add	r1, r2, r1, lsl #1
   3d138:	ldrh	r1, [r1]
   3d13c:	strh	r1, [r0]
   3d140:	mov	r0, #2
   3d144:	b	3d158 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
   3d148:	add	r1, r1, #48	; 0x30
   3d14c:	strb	r2, [r0, #1]
   3d150:	strb	r1, [r0]
   3d154:	mov	r0, #1
   3d158:	ldr	r1, [r4, #20]
   3d15c:	subs	r8, r8, #1
   3d160:	add	r0, r1, r0
   3d164:	str	r0, [r4, #20]
   3d168:	beq	3d32c <flatcc_json_printer_uint8_vector_field@@Base+0x40c>
   3d16c:	ldr	r0, [r4, #20]
   3d170:	add	r7, r9, #5
   3d174:	mov	r9, #44	; 0x2c
   3d178:	mov	sl, #0
   3d17c:	add	r1, r0, #1
   3d180:	str	r1, [r4, #20]
   3d184:	strb	r9, [r0]
   3d188:	ldrb	r1, [r4, #25]
   3d18c:	ldr	r0, [r4, #20]
   3d190:	cmp	r1, #0
   3d194:	beq	3d250 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   3d198:	add	r1, r0, #1
   3d19c:	str	r1, [r4, #20]
   3d1a0:	mov	r1, #10
   3d1a4:	strb	r1, [r0]
   3d1a8:	ldr	r0, [r4, #20]
   3d1ac:	ldrb	r2, [r4, #25]
   3d1b0:	ldr	r3, [r4, #32]
   3d1b4:	ldr	r1, [r4, #16]
   3d1b8:	mla	r6, r3, r2, r0
   3d1bc:	mul	r5, r3, r2
   3d1c0:	cmp	r6, r1
   3d1c4:	bls	3d234 <flatcc_json_printer_uint8_vector_field@@Base+0x314>
   3d1c8:	cmp	r0, r1
   3d1cc:	bcc	3d1e8 <flatcc_json_printer_uint8_vector_field@@Base+0x2c8>
   3d1d0:	ldr	r2, [r4, #44]	; 0x2c
   3d1d4:	mov	r0, r4
   3d1d8:	mov	r1, #0
   3d1dc:	blx	r2
   3d1e0:	ldr	r1, [r4, #16]
   3d1e4:	ldr	r0, [r4, #20]
   3d1e8:	sub	r6, r1, r0
   3d1ec:	cmp	r6, r5
   3d1f0:	bcs	3d234 <flatcc_json_printer_uint8_vector_field@@Base+0x314>
   3d1f4:	mov	r1, #32
   3d1f8:	mov	r2, r6
   3d1fc:	bl	14ee8 <memset@plt>
   3d200:	ldr	r0, [r4, #20]
   3d204:	ldr	r2, [r4, #44]	; 0x2c
   3d208:	mov	r1, #0
   3d20c:	add	r0, r0, r6
   3d210:	str	r0, [r4, #20]
   3d214:	mov	r0, r4
   3d218:	blx	r2
   3d21c:	ldr	r1, [r4, #16]
   3d220:	ldr	r0, [r4, #20]
   3d224:	sub	r5, r5, r6
   3d228:	sub	r6, r1, r0
   3d22c:	cmp	r5, r6
   3d230:	bhi	3d1f4 <flatcc_json_printer_uint8_vector_field@@Base+0x2d4>
   3d234:	mov	r1, #32
   3d238:	mov	r2, r5
   3d23c:	bl	14ee8 <memset@plt>
   3d240:	ldr	r0, [r4, #20]
   3d244:	add	r0, r0, r5
   3d248:	str	r0, [r4, #20]
   3d24c:	b	3d270 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   3d250:	ldr	r1, [r4, #16]
   3d254:	cmp	r0, r1
   3d258:	bcc	3d270 <flatcc_json_printer_uint8_vector_field@@Base+0x350>
   3d25c:	ldr	r2, [r4, #44]	; 0x2c
   3d260:	mov	r0, r4
   3d264:	mov	r1, #0
   3d268:	blx	r2
   3d26c:	ldr	r0, [r4, #20]
   3d270:	ldrb	r1, [r7]
   3d274:	sub	r8, r8, #1
   3d278:	cmp	r1, #100	; 0x64
   3d27c:	bcc	3d2c4 <flatcc_json_printer_uint8_vector_field@@Base+0x3a4>
   3d280:	movw	r2, #34079	; 0x851f
   3d284:	strb	sl, [r0, #3]
   3d288:	movt	r2, #20971	; 0x51eb
   3d28c:	umull	r2, r3, r1, r2
   3d290:	mov	r2, #48	; 0x30
   3d294:	orr	r2, r2, r3, lsr #5
   3d298:	strb	r2, [r0]
   3d29c:	lsr	r2, r3, #5
   3d2a0:	mov	r3, #100	; 0x64
   3d2a4:	mls	r1, r2, r3, r1
   3d2a8:	ldr	r2, [pc, #360]	; 3d418 <flatcc_json_printer_uint8_vector_field@@Base+0x4f8>
   3d2ac:	add	r2, pc, r2
   3d2b0:	add	r1, r2, r1, lsl #1
   3d2b4:	ldrh	r1, [r1]
   3d2b8:	strh	r1, [r0, #1]
   3d2bc:	mov	r0, #3
   3d2c0:	b	3d314 <flatcc_json_printer_uint8_vector_field@@Base+0x3f4>
   3d2c4:	cmp	r1, #10
   3d2c8:	bcc	3d304 <flatcc_json_printer_uint8_vector_field@@Base+0x3e4>
   3d2cc:	movw	r2, #34079	; 0x851f
   3d2d0:	strb	sl, [r0, #2]
   3d2d4:	movt	r2, #20971	; 0x51eb
   3d2d8:	umull	r2, r3, r1, r2
   3d2dc:	lsr	r2, r3, #5
   3d2e0:	mov	r3, #100	; 0x64
   3d2e4:	mls	r1, r2, r3, r1
   3d2e8:	ldr	r2, [pc, #300]	; 3d41c <flatcc_json_printer_uint8_vector_field@@Base+0x4fc>
   3d2ec:	add	r2, pc, r2
   3d2f0:	add	r1, r2, r1, lsl #1
   3d2f4:	ldrh	r1, [r1]
   3d2f8:	strh	r1, [r0]
   3d2fc:	mov	r0, #2
   3d300:	b	3d314 <flatcc_json_printer_uint8_vector_field@@Base+0x3f4>
   3d304:	add	r1, r1, #48	; 0x30
   3d308:	strb	sl, [r0, #1]
   3d30c:	strb	r1, [r0]
   3d310:	mov	r0, #1
   3d314:	ldr	r1, [r4, #20]
   3d318:	add	r7, r7, #1
   3d31c:	cmp	r8, #0
   3d320:	add	r0, r1, r0
   3d324:	str	r0, [r4, #20]
   3d328:	bne	3d17c <flatcc_json_printer_uint8_vector_field@@Base+0x25c>
   3d32c:	ldrb	r1, [r4, #25]
   3d330:	ldr	r0, [r4, #20]
   3d334:	cmp	r1, #0
   3d338:	beq	3d3f8 <flatcc_json_printer_uint8_vector_field@@Base+0x4d8>
   3d33c:	add	r1, r0, #1
   3d340:	str	r1, [r4, #20]
   3d344:	mov	r1, #10
   3d348:	strb	r1, [r0]
   3d34c:	ldr	r0, [r4, #32]
   3d350:	sub	r2, r0, #1
   3d354:	str	r2, [r4, #32]
   3d358:	ldrb	r3, [r4, #25]
   3d35c:	ldr	r0, [r4, #20]
   3d360:	ldr	r1, [r4, #16]
   3d364:	mla	r7, r2, r3, r0
   3d368:	mul	r5, r2, r3
   3d36c:	cmp	r7, r1
   3d370:	bls	3d3e0 <flatcc_json_printer_uint8_vector_field@@Base+0x4c0>
   3d374:	cmp	r0, r1
   3d378:	bcc	3d394 <flatcc_json_printer_uint8_vector_field@@Base+0x474>
   3d37c:	ldr	r2, [r4, #44]	; 0x2c
   3d380:	mov	r0, r4
   3d384:	mov	r1, #0
   3d388:	blx	r2
   3d38c:	ldr	r1, [r4, #16]
   3d390:	ldr	r0, [r4, #20]
   3d394:	sub	r6, r1, r0
   3d398:	cmp	r6, r5
   3d39c:	bcs	3d3e0 <flatcc_json_printer_uint8_vector_field@@Base+0x4c0>
   3d3a0:	mov	r1, #32
   3d3a4:	mov	r2, r6
   3d3a8:	bl	14ee8 <memset@plt>
   3d3ac:	ldr	r0, [r4, #20]
   3d3b0:	ldr	r2, [r4, #44]	; 0x2c
   3d3b4:	mov	r1, #0
   3d3b8:	add	r0, r0, r6
   3d3bc:	str	r0, [r4, #20]
   3d3c0:	mov	r0, r4
   3d3c4:	blx	r2
   3d3c8:	ldr	r1, [r4, #16]
   3d3cc:	ldr	r0, [r4, #20]
   3d3d0:	sub	r5, r5, r6
   3d3d4:	sub	r6, r1, r0
   3d3d8:	cmp	r5, r6
   3d3dc:	bhi	3d3a0 <flatcc_json_printer_uint8_vector_field@@Base+0x480>
   3d3e0:	mov	r1, #32
   3d3e4:	mov	r2, r5
   3d3e8:	bl	14ee8 <memset@plt>
   3d3ec:	ldr	r0, [r4, #20]
   3d3f0:	add	r0, r0, r5
   3d3f4:	str	r0, [r4, #20]
   3d3f8:	add	r1, r0, #1
   3d3fc:	str	r1, [r4, #20]
   3d400:	mov	r1, #93	; 0x5d
   3d404:	strb	r1, [r0]
   3d408:	sub	sp, fp, #28
   3d40c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d410:	andeq	sp, r0, pc, ror #30
   3d414:	andeq	sp, r0, pc, lsr #30
   3d418:			; <UNDEFINED> instruction: 0x0000ddb3
   3d41c:	andeq	sp, r0, r3, ror sp

0003d420 <flatcc_json_printer_uint16_vector_field@@Base>:
   3d420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d424:	add	fp, sp, #28
   3d428:	sub	sp, sp, #4
   3d42c:	mov	r4, r0
   3d430:	mov	r0, #4
   3d434:	add	r0, r0, r2, lsl #1
   3d438:	ldr	r2, [r1, #8]
   3d43c:	cmp	r0, r2
   3d440:	bge	3d460 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   3d444:	ldr	r2, [r1, #4]
   3d448:	add	r0, r2, r0
   3d44c:	ldrh	r0, [r0]
   3d450:	cmp	r0, #0
   3d454:	ldrne	r2, [r1]
   3d458:	addsne	r8, r2, r0
   3d45c:	bne	3d468 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   3d460:	sub	sp, fp, #28
   3d464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d468:	ldr	r0, [r1, #16]
   3d46c:	ldr	r2, [fp, #8]
   3d470:	add	r7, r0, #1
   3d474:	cmp	r0, #0
   3d478:	str	r7, [r1, #16]
   3d47c:	ldrne	r0, [r4, #20]
   3d480:	addne	r1, r0, #1
   3d484:	strne	r1, [r4, #20]
   3d488:	movne	r1, #44	; 0x2c
   3d48c:	strbne	r1, [r0]
   3d490:	mov	r1, r3
   3d494:	ldr	r0, [r8]
   3d498:	ldr	r7, [r8, r0]!
   3d49c:	mov	r0, r4
   3d4a0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3d4a4:	ldr	r1, [r4, #32]
   3d4a8:	ldr	r0, [r4, #20]
   3d4ac:	cmp	r7, #0
   3d4b0:	add	r1, r1, #1
   3d4b4:	str	r1, [r4, #32]
   3d4b8:	add	r1, r0, #1
   3d4bc:	str	r1, [r4, #20]
   3d4c0:	mov	r1, #91	; 0x5b
   3d4c4:	strb	r1, [r0]
   3d4c8:	beq	3d6f0 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   3d4cc:	ldrb	r0, [r4, #25]
   3d4d0:	ldr	r1, [r4, #20]
   3d4d4:	cmp	r0, #0
   3d4d8:	beq	3d594 <flatcc_json_printer_uint16_vector_field@@Base+0x174>
   3d4dc:	add	r0, r1, #1
   3d4e0:	str	r0, [r4, #20]
   3d4e4:	mov	r0, #10
   3d4e8:	strb	r0, [r1]
   3d4ec:	ldr	r0, [r4, #20]
   3d4f0:	ldrb	r2, [r4, #25]
   3d4f4:	ldr	r3, [r4, #32]
   3d4f8:	ldr	r1, [r4, #16]
   3d4fc:	mla	r6, r3, r2, r0
   3d500:	mul	r5, r3, r2
   3d504:	cmp	r6, r1
   3d508:	bls	3d578 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   3d50c:	cmp	r0, r1
   3d510:	bcc	3d52c <flatcc_json_printer_uint16_vector_field@@Base+0x10c>
   3d514:	ldr	r2, [r4, #44]	; 0x2c
   3d518:	mov	r0, r4
   3d51c:	mov	r1, #0
   3d520:	blx	r2
   3d524:	ldr	r1, [r4, #16]
   3d528:	ldr	r0, [r4, #20]
   3d52c:	sub	r6, r1, r0
   3d530:	cmp	r6, r5
   3d534:	bcs	3d578 <flatcc_json_printer_uint16_vector_field@@Base+0x158>
   3d538:	mov	r1, #32
   3d53c:	mov	r2, r6
   3d540:	bl	14ee8 <memset@plt>
   3d544:	ldr	r0, [r4, #20]
   3d548:	ldr	r2, [r4, #44]	; 0x2c
   3d54c:	mov	r1, #0
   3d550:	add	r0, r0, r6
   3d554:	str	r0, [r4, #20]
   3d558:	mov	r0, r4
   3d55c:	blx	r2
   3d560:	ldr	r1, [r4, #16]
   3d564:	ldr	r0, [r4, #20]
   3d568:	sub	r5, r5, r6
   3d56c:	sub	r6, r1, r0
   3d570:	cmp	r5, r6
   3d574:	bhi	3d538 <flatcc_json_printer_uint16_vector_field@@Base+0x118>
   3d578:	mov	r1, #32
   3d57c:	mov	r2, r5
   3d580:	bl	14ee8 <memset@plt>
   3d584:	ldr	r0, [r4, #20]
   3d588:	add	r1, r0, r5
   3d58c:	str	r1, [r4, #20]
   3d590:	b	3d5b4 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   3d594:	ldr	r0, [r4, #16]
   3d598:	cmp	r1, r0
   3d59c:	bcc	3d5b4 <flatcc_json_printer_uint16_vector_field@@Base+0x194>
   3d5a0:	ldr	r2, [r4, #44]	; 0x2c
   3d5a4:	mov	r0, r4
   3d5a8:	mov	r1, #0
   3d5ac:	blx	r2
   3d5b0:	ldr	r1, [r4, #20]
   3d5b4:	ldrh	r0, [r8, #4]
   3d5b8:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3d5bc:	ldr	r1, [r4, #20]
   3d5c0:	subs	r9, r7, #1
   3d5c4:	add	r0, r1, r0
   3d5c8:	str	r0, [r4, #20]
   3d5cc:	beq	3d6f0 <flatcc_json_printer_uint16_vector_field@@Base+0x2d0>
   3d5d0:	ldr	r0, [r4, #20]
   3d5d4:	add	r7, r8, #6
   3d5d8:	mov	r8, #44	; 0x2c
   3d5dc:	mov	sl, #10
   3d5e0:	add	r1, r0, #1
   3d5e4:	sub	r9, r9, #1
   3d5e8:	str	r1, [r4, #20]
   3d5ec:	strb	r8, [r0]
   3d5f0:	ldrb	r0, [r4, #25]
   3d5f4:	ldr	r1, [r4, #20]
   3d5f8:	cmp	r0, #0
   3d5fc:	beq	3d6b4 <flatcc_json_printer_uint16_vector_field@@Base+0x294>
   3d600:	add	r0, r1, #1
   3d604:	str	r0, [r4, #20]
   3d608:	strb	sl, [r1]
   3d60c:	ldr	r0, [r4, #20]
   3d610:	ldrb	r2, [r4, #25]
   3d614:	ldr	r3, [r4, #32]
   3d618:	ldr	r1, [r4, #16]
   3d61c:	mla	r6, r3, r2, r0
   3d620:	mul	r5, r3, r2
   3d624:	cmp	r6, r1
   3d628:	bls	3d698 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   3d62c:	cmp	r0, r1
   3d630:	bcc	3d64c <flatcc_json_printer_uint16_vector_field@@Base+0x22c>
   3d634:	ldr	r2, [r4, #44]	; 0x2c
   3d638:	mov	r0, r4
   3d63c:	mov	r1, #0
   3d640:	blx	r2
   3d644:	ldr	r1, [r4, #16]
   3d648:	ldr	r0, [r4, #20]
   3d64c:	sub	r6, r1, r0
   3d650:	cmp	r6, r5
   3d654:	bcs	3d698 <flatcc_json_printer_uint16_vector_field@@Base+0x278>
   3d658:	mov	r1, #32
   3d65c:	mov	r2, r6
   3d660:	bl	14ee8 <memset@plt>
   3d664:	ldr	r0, [r4, #20]
   3d668:	ldr	r2, [r4, #44]	; 0x2c
   3d66c:	mov	r1, #0
   3d670:	add	r0, r0, r6
   3d674:	str	r0, [r4, #20]
   3d678:	mov	r0, r4
   3d67c:	blx	r2
   3d680:	ldr	r1, [r4, #16]
   3d684:	ldr	r0, [r4, #20]
   3d688:	sub	r5, r5, r6
   3d68c:	sub	r6, r1, r0
   3d690:	cmp	r5, r6
   3d694:	bhi	3d658 <flatcc_json_printer_uint16_vector_field@@Base+0x238>
   3d698:	mov	r1, #32
   3d69c:	mov	r2, r5
   3d6a0:	bl	14ee8 <memset@plt>
   3d6a4:	ldr	r0, [r4, #20]
   3d6a8:	add	r1, r0, r5
   3d6ac:	str	r1, [r4, #20]
   3d6b0:	b	3d6d4 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   3d6b4:	ldr	r0, [r4, #16]
   3d6b8:	cmp	r1, r0
   3d6bc:	bcc	3d6d4 <flatcc_json_printer_uint16_vector_field@@Base+0x2b4>
   3d6c0:	ldr	r2, [r4, #44]	; 0x2c
   3d6c4:	mov	r0, r4
   3d6c8:	mov	r1, #0
   3d6cc:	blx	r2
   3d6d0:	ldr	r1, [r4, #20]
   3d6d4:	ldrh	r0, [r7], #2
   3d6d8:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3d6dc:	ldr	r1, [r4, #20]
   3d6e0:	cmp	r9, #0
   3d6e4:	add	r0, r1, r0
   3d6e8:	str	r0, [r4, #20]
   3d6ec:	bne	3d5e0 <flatcc_json_printer_uint16_vector_field@@Base+0x1c0>
   3d6f0:	ldrb	r1, [r4, #25]
   3d6f4:	ldr	r0, [r4, #20]
   3d6f8:	cmp	r1, #0
   3d6fc:	beq	3d7bc <flatcc_json_printer_uint16_vector_field@@Base+0x39c>
   3d700:	add	r1, r0, #1
   3d704:	str	r1, [r4, #20]
   3d708:	mov	r1, #10
   3d70c:	strb	r1, [r0]
   3d710:	ldr	r0, [r4, #32]
   3d714:	sub	r2, r0, #1
   3d718:	str	r2, [r4, #32]
   3d71c:	ldrb	r3, [r4, #25]
   3d720:	ldr	r0, [r4, #20]
   3d724:	ldr	r1, [r4, #16]
   3d728:	mla	r7, r2, r3, r0
   3d72c:	mul	r5, r2, r3
   3d730:	cmp	r7, r1
   3d734:	bls	3d7a4 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   3d738:	cmp	r0, r1
   3d73c:	bcc	3d758 <flatcc_json_printer_uint16_vector_field@@Base+0x338>
   3d740:	ldr	r2, [r4, #44]	; 0x2c
   3d744:	mov	r0, r4
   3d748:	mov	r1, #0
   3d74c:	blx	r2
   3d750:	ldr	r1, [r4, #16]
   3d754:	ldr	r0, [r4, #20]
   3d758:	sub	r6, r1, r0
   3d75c:	cmp	r6, r5
   3d760:	bcs	3d7a4 <flatcc_json_printer_uint16_vector_field@@Base+0x384>
   3d764:	mov	r1, #32
   3d768:	mov	r2, r6
   3d76c:	bl	14ee8 <memset@plt>
   3d770:	ldr	r0, [r4, #20]
   3d774:	ldr	r2, [r4, #44]	; 0x2c
   3d778:	mov	r1, #0
   3d77c:	add	r0, r0, r6
   3d780:	str	r0, [r4, #20]
   3d784:	mov	r0, r4
   3d788:	blx	r2
   3d78c:	ldr	r1, [r4, #16]
   3d790:	ldr	r0, [r4, #20]
   3d794:	sub	r5, r5, r6
   3d798:	sub	r6, r1, r0
   3d79c:	cmp	r5, r6
   3d7a0:	bhi	3d764 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   3d7a4:	mov	r1, #32
   3d7a8:	mov	r2, r5
   3d7ac:	bl	14ee8 <memset@plt>
   3d7b0:	ldr	r0, [r4, #20]
   3d7b4:	add	r0, r0, r5
   3d7b8:	str	r0, [r4, #20]
   3d7bc:	add	r1, r0, #1
   3d7c0:	str	r1, [r4, #20]
   3d7c4:	mov	r1, #93	; 0x5d
   3d7c8:	strb	r1, [r0]
   3d7cc:	sub	sp, fp, #28
   3d7d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d7d4 <flatcc_json_printer_uint32_vector_field@@Base>:
   3d7d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d7d8:	add	fp, sp, #28
   3d7dc:	sub	sp, sp, #4
   3d7e0:	mov	r4, r0
   3d7e4:	mov	r0, #4
   3d7e8:	add	r0, r0, r2, lsl #1
   3d7ec:	ldr	r2, [r1, #8]
   3d7f0:	cmp	r0, r2
   3d7f4:	bge	3d814 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   3d7f8:	ldr	r2, [r1, #4]
   3d7fc:	add	r0, r2, r0
   3d800:	ldrh	r0, [r0]
   3d804:	cmp	r0, #0
   3d808:	ldrne	r2, [r1]
   3d80c:	addsne	r8, r2, r0
   3d810:	bne	3d81c <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   3d814:	sub	sp, fp, #28
   3d818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d81c:	ldr	r0, [r1, #16]
   3d820:	ldr	r2, [fp, #8]
   3d824:	add	r7, r0, #1
   3d828:	cmp	r0, #0
   3d82c:	str	r7, [r1, #16]
   3d830:	ldrne	r0, [r4, #20]
   3d834:	addne	r1, r0, #1
   3d838:	strne	r1, [r4, #20]
   3d83c:	movne	r1, #44	; 0x2c
   3d840:	strbne	r1, [r0]
   3d844:	mov	r1, r3
   3d848:	ldr	r0, [r8]
   3d84c:	ldr	r7, [r8, r0]!
   3d850:	mov	r0, r4
   3d854:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3d858:	ldr	r1, [r4, #32]
   3d85c:	ldr	r0, [r4, #20]
   3d860:	cmp	r7, #0
   3d864:	add	r1, r1, #1
   3d868:	str	r1, [r4, #32]
   3d86c:	add	r1, r0, #1
   3d870:	str	r1, [r4, #20]
   3d874:	mov	r1, #91	; 0x5b
   3d878:	strb	r1, [r0]
   3d87c:	beq	3daa4 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   3d880:	ldrb	r0, [r4, #25]
   3d884:	ldr	r1, [r4, #20]
   3d888:	cmp	r0, #0
   3d88c:	beq	3d948 <flatcc_json_printer_uint32_vector_field@@Base+0x174>
   3d890:	add	r0, r1, #1
   3d894:	str	r0, [r4, #20]
   3d898:	mov	r0, #10
   3d89c:	strb	r0, [r1]
   3d8a0:	ldr	r0, [r4, #20]
   3d8a4:	ldrb	r2, [r4, #25]
   3d8a8:	ldr	r3, [r4, #32]
   3d8ac:	ldr	r1, [r4, #16]
   3d8b0:	mla	r6, r3, r2, r0
   3d8b4:	mul	r5, r3, r2
   3d8b8:	cmp	r6, r1
   3d8bc:	bls	3d92c <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   3d8c0:	cmp	r0, r1
   3d8c4:	bcc	3d8e0 <flatcc_json_printer_uint32_vector_field@@Base+0x10c>
   3d8c8:	ldr	r2, [r4, #44]	; 0x2c
   3d8cc:	mov	r0, r4
   3d8d0:	mov	r1, #0
   3d8d4:	blx	r2
   3d8d8:	ldr	r1, [r4, #16]
   3d8dc:	ldr	r0, [r4, #20]
   3d8e0:	sub	r6, r1, r0
   3d8e4:	cmp	r6, r5
   3d8e8:	bcs	3d92c <flatcc_json_printer_uint32_vector_field@@Base+0x158>
   3d8ec:	mov	r1, #32
   3d8f0:	mov	r2, r6
   3d8f4:	bl	14ee8 <memset@plt>
   3d8f8:	ldr	r0, [r4, #20]
   3d8fc:	ldr	r2, [r4, #44]	; 0x2c
   3d900:	mov	r1, #0
   3d904:	add	r0, r0, r6
   3d908:	str	r0, [r4, #20]
   3d90c:	mov	r0, r4
   3d910:	blx	r2
   3d914:	ldr	r1, [r4, #16]
   3d918:	ldr	r0, [r4, #20]
   3d91c:	sub	r5, r5, r6
   3d920:	sub	r6, r1, r0
   3d924:	cmp	r5, r6
   3d928:	bhi	3d8ec <flatcc_json_printer_uint32_vector_field@@Base+0x118>
   3d92c:	mov	r1, #32
   3d930:	mov	r2, r5
   3d934:	bl	14ee8 <memset@plt>
   3d938:	ldr	r0, [r4, #20]
   3d93c:	add	r1, r0, r5
   3d940:	str	r1, [r4, #20]
   3d944:	b	3d968 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   3d948:	ldr	r0, [r4, #16]
   3d94c:	cmp	r1, r0
   3d950:	bcc	3d968 <flatcc_json_printer_uint32_vector_field@@Base+0x194>
   3d954:	ldr	r2, [r4, #44]	; 0x2c
   3d958:	mov	r0, r4
   3d95c:	mov	r1, #0
   3d960:	blx	r2
   3d964:	ldr	r1, [r4, #20]
   3d968:	ldr	r0, [r8, #4]
   3d96c:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3d970:	ldr	r1, [r4, #20]
   3d974:	subs	r9, r7, #1
   3d978:	add	r0, r1, r0
   3d97c:	str	r0, [r4, #20]
   3d980:	beq	3daa4 <flatcc_json_printer_uint32_vector_field@@Base+0x2d0>
   3d984:	ldr	r0, [r4, #20]
   3d988:	add	r7, r8, #8
   3d98c:	mov	r8, #44	; 0x2c
   3d990:	mov	sl, #10
   3d994:	add	r1, r0, #1
   3d998:	sub	r9, r9, #1
   3d99c:	str	r1, [r4, #20]
   3d9a0:	strb	r8, [r0]
   3d9a4:	ldrb	r0, [r4, #25]
   3d9a8:	ldr	r1, [r4, #20]
   3d9ac:	cmp	r0, #0
   3d9b0:	beq	3da68 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   3d9b4:	add	r0, r1, #1
   3d9b8:	str	r0, [r4, #20]
   3d9bc:	strb	sl, [r1]
   3d9c0:	ldr	r0, [r4, #20]
   3d9c4:	ldrb	r2, [r4, #25]
   3d9c8:	ldr	r3, [r4, #32]
   3d9cc:	ldr	r1, [r4, #16]
   3d9d0:	mla	r6, r3, r2, r0
   3d9d4:	mul	r5, r3, r2
   3d9d8:	cmp	r6, r1
   3d9dc:	bls	3da4c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   3d9e0:	cmp	r0, r1
   3d9e4:	bcc	3da00 <flatcc_json_printer_uint32_vector_field@@Base+0x22c>
   3d9e8:	ldr	r2, [r4, #44]	; 0x2c
   3d9ec:	mov	r0, r4
   3d9f0:	mov	r1, #0
   3d9f4:	blx	r2
   3d9f8:	ldr	r1, [r4, #16]
   3d9fc:	ldr	r0, [r4, #20]
   3da00:	sub	r6, r1, r0
   3da04:	cmp	r6, r5
   3da08:	bcs	3da4c <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   3da0c:	mov	r1, #32
   3da10:	mov	r2, r6
   3da14:	bl	14ee8 <memset@plt>
   3da18:	ldr	r0, [r4, #20]
   3da1c:	ldr	r2, [r4, #44]	; 0x2c
   3da20:	mov	r1, #0
   3da24:	add	r0, r0, r6
   3da28:	str	r0, [r4, #20]
   3da2c:	mov	r0, r4
   3da30:	blx	r2
   3da34:	ldr	r1, [r4, #16]
   3da38:	ldr	r0, [r4, #20]
   3da3c:	sub	r5, r5, r6
   3da40:	sub	r6, r1, r0
   3da44:	cmp	r5, r6
   3da48:	bhi	3da0c <flatcc_json_printer_uint32_vector_field@@Base+0x238>
   3da4c:	mov	r1, #32
   3da50:	mov	r2, r5
   3da54:	bl	14ee8 <memset@plt>
   3da58:	ldr	r0, [r4, #20]
   3da5c:	add	r1, r0, r5
   3da60:	str	r1, [r4, #20]
   3da64:	b	3da88 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   3da68:	ldr	r0, [r4, #16]
   3da6c:	cmp	r1, r0
   3da70:	bcc	3da88 <flatcc_json_printer_uint32_vector_field@@Base+0x2b4>
   3da74:	ldr	r2, [r4, #44]	; 0x2c
   3da78:	mov	r0, r4
   3da7c:	mov	r1, #0
   3da80:	blx	r2
   3da84:	ldr	r1, [r4, #20]
   3da88:	ldr	r0, [r7], #4
   3da8c:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3da90:	ldr	r1, [r4, #20]
   3da94:	cmp	r9, #0
   3da98:	add	r0, r1, r0
   3da9c:	str	r0, [r4, #20]
   3daa0:	bne	3d994 <flatcc_json_printer_uint32_vector_field@@Base+0x1c0>
   3daa4:	ldrb	r1, [r4, #25]
   3daa8:	ldr	r0, [r4, #20]
   3daac:	cmp	r1, #0
   3dab0:	beq	3db70 <flatcc_json_printer_uint32_vector_field@@Base+0x39c>
   3dab4:	add	r1, r0, #1
   3dab8:	str	r1, [r4, #20]
   3dabc:	mov	r1, #10
   3dac0:	strb	r1, [r0]
   3dac4:	ldr	r0, [r4, #32]
   3dac8:	sub	r2, r0, #1
   3dacc:	str	r2, [r4, #32]
   3dad0:	ldrb	r3, [r4, #25]
   3dad4:	ldr	r0, [r4, #20]
   3dad8:	ldr	r1, [r4, #16]
   3dadc:	mla	r7, r2, r3, r0
   3dae0:	mul	r5, r2, r3
   3dae4:	cmp	r7, r1
   3dae8:	bls	3db58 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   3daec:	cmp	r0, r1
   3daf0:	bcc	3db0c <flatcc_json_printer_uint32_vector_field@@Base+0x338>
   3daf4:	ldr	r2, [r4, #44]	; 0x2c
   3daf8:	mov	r0, r4
   3dafc:	mov	r1, #0
   3db00:	blx	r2
   3db04:	ldr	r1, [r4, #16]
   3db08:	ldr	r0, [r4, #20]
   3db0c:	sub	r6, r1, r0
   3db10:	cmp	r6, r5
   3db14:	bcs	3db58 <flatcc_json_printer_uint32_vector_field@@Base+0x384>
   3db18:	mov	r1, #32
   3db1c:	mov	r2, r6
   3db20:	bl	14ee8 <memset@plt>
   3db24:	ldr	r0, [r4, #20]
   3db28:	ldr	r2, [r4, #44]	; 0x2c
   3db2c:	mov	r1, #0
   3db30:	add	r0, r0, r6
   3db34:	str	r0, [r4, #20]
   3db38:	mov	r0, r4
   3db3c:	blx	r2
   3db40:	ldr	r1, [r4, #16]
   3db44:	ldr	r0, [r4, #20]
   3db48:	sub	r5, r5, r6
   3db4c:	sub	r6, r1, r0
   3db50:	cmp	r5, r6
   3db54:	bhi	3db18 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   3db58:	mov	r1, #32
   3db5c:	mov	r2, r5
   3db60:	bl	14ee8 <memset@plt>
   3db64:	ldr	r0, [r4, #20]
   3db68:	add	r0, r0, r5
   3db6c:	str	r0, [r4, #20]
   3db70:	add	r1, r0, #1
   3db74:	str	r1, [r4, #20]
   3db78:	mov	r1, #93	; 0x5d
   3db7c:	strb	r1, [r0]
   3db80:	sub	sp, fp, #28
   3db84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003db88 <flatcc_json_printer_uint64_vector_field@@Base>:
   3db88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3db8c:	add	fp, sp, #28
   3db90:	sub	sp, sp, #4
   3db94:	mov	r4, r0
   3db98:	mov	r0, #4
   3db9c:	add	r0, r0, r2, lsl #1
   3dba0:	ldr	r2, [r1, #8]
   3dba4:	cmp	r0, r2
   3dba8:	bge	3dbc8 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   3dbac:	ldr	r2, [r1, #4]
   3dbb0:	add	r0, r2, r0
   3dbb4:	ldrh	r0, [r0]
   3dbb8:	cmp	r0, #0
   3dbbc:	ldrne	r2, [r1]
   3dbc0:	addsne	r8, r2, r0
   3dbc4:	bne	3dbd0 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   3dbc8:	sub	sp, fp, #28
   3dbcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dbd0:	ldr	r0, [r1, #16]
   3dbd4:	ldr	r2, [fp, #8]
   3dbd8:	add	r7, r0, #1
   3dbdc:	cmp	r0, #0
   3dbe0:	str	r7, [r1, #16]
   3dbe4:	ldrne	r0, [r4, #20]
   3dbe8:	addne	r1, r0, #1
   3dbec:	strne	r1, [r4, #20]
   3dbf0:	movne	r1, #44	; 0x2c
   3dbf4:	strbne	r1, [r0]
   3dbf8:	mov	r1, r3
   3dbfc:	ldr	r0, [r8]
   3dc00:	ldr	r7, [r8, r0]!
   3dc04:	mov	r0, r4
   3dc08:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3dc0c:	ldr	r1, [r4, #32]
   3dc10:	ldr	r0, [r4, #20]
   3dc14:	cmp	r7, #0
   3dc18:	add	r1, r1, #1
   3dc1c:	str	r1, [r4, #32]
   3dc20:	add	r1, r0, #1
   3dc24:	str	r1, [r4, #20]
   3dc28:	mov	r1, #91	; 0x5b
   3dc2c:	strb	r1, [r0]
   3dc30:	beq	3de5c <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   3dc34:	ldrb	r0, [r4, #25]
   3dc38:	ldr	r2, [r4, #20]
   3dc3c:	cmp	r0, #0
   3dc40:	beq	3dcfc <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   3dc44:	add	r0, r2, #1
   3dc48:	str	r0, [r4, #20]
   3dc4c:	mov	r0, #10
   3dc50:	strb	r0, [r2]
   3dc54:	ldr	r0, [r4, #20]
   3dc58:	ldrb	r2, [r4, #25]
   3dc5c:	ldr	r3, [r4, #32]
   3dc60:	ldr	r1, [r4, #16]
   3dc64:	mla	r6, r3, r2, r0
   3dc68:	mul	r5, r3, r2
   3dc6c:	cmp	r6, r1
   3dc70:	bls	3dce0 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   3dc74:	cmp	r0, r1
   3dc78:	bcc	3dc94 <flatcc_json_printer_uint64_vector_field@@Base+0x10c>
   3dc7c:	ldr	r2, [r4, #44]	; 0x2c
   3dc80:	mov	r0, r4
   3dc84:	mov	r1, #0
   3dc88:	blx	r2
   3dc8c:	ldr	r1, [r4, #16]
   3dc90:	ldr	r0, [r4, #20]
   3dc94:	sub	r6, r1, r0
   3dc98:	cmp	r6, r5
   3dc9c:	bcs	3dce0 <flatcc_json_printer_uint64_vector_field@@Base+0x158>
   3dca0:	mov	r1, #32
   3dca4:	mov	r2, r6
   3dca8:	bl	14ee8 <memset@plt>
   3dcac:	ldr	r0, [r4, #20]
   3dcb0:	ldr	r2, [r4, #44]	; 0x2c
   3dcb4:	mov	r1, #0
   3dcb8:	add	r0, r0, r6
   3dcbc:	str	r0, [r4, #20]
   3dcc0:	mov	r0, r4
   3dcc4:	blx	r2
   3dcc8:	ldr	r1, [r4, #16]
   3dccc:	ldr	r0, [r4, #20]
   3dcd0:	sub	r5, r5, r6
   3dcd4:	sub	r6, r1, r0
   3dcd8:	cmp	r5, r6
   3dcdc:	bhi	3dca0 <flatcc_json_printer_uint64_vector_field@@Base+0x118>
   3dce0:	mov	r1, #32
   3dce4:	mov	r2, r5
   3dce8:	bl	14ee8 <memset@plt>
   3dcec:	ldr	r0, [r4, #20]
   3dcf0:	add	r2, r0, r5
   3dcf4:	str	r2, [r4, #20]
   3dcf8:	b	3dd1c <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   3dcfc:	ldr	r0, [r4, #16]
   3dd00:	cmp	r2, r0
   3dd04:	bcc	3dd1c <flatcc_json_printer_uint64_vector_field@@Base+0x194>
   3dd08:	ldr	r2, [r4, #44]	; 0x2c
   3dd0c:	mov	r0, r4
   3dd10:	mov	r1, #0
   3dd14:	blx	r2
   3dd18:	ldr	r2, [r4, #20]
   3dd1c:	ldrd	r0, [r8, #4]
   3dd20:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3dd24:	ldr	r1, [r4, #20]
   3dd28:	subs	r9, r7, #1
   3dd2c:	add	r0, r1, r0
   3dd30:	str	r0, [r4, #20]
   3dd34:	beq	3de5c <flatcc_json_printer_uint64_vector_field@@Base+0x2d4>
   3dd38:	ldr	r0, [r4, #20]
   3dd3c:	add	r7, r8, #12
   3dd40:	mov	r8, #44	; 0x2c
   3dd44:	mov	sl, #10
   3dd48:	add	r1, r0, #1
   3dd4c:	sub	r9, r9, #1
   3dd50:	str	r1, [r4, #20]
   3dd54:	strb	r8, [r0]
   3dd58:	ldrb	r0, [r4, #25]
   3dd5c:	ldr	r2, [r4, #20]
   3dd60:	cmp	r0, #0
   3dd64:	beq	3de1c <flatcc_json_printer_uint64_vector_field@@Base+0x294>
   3dd68:	add	r0, r2, #1
   3dd6c:	str	r0, [r4, #20]
   3dd70:	strb	sl, [r2]
   3dd74:	ldr	r0, [r4, #20]
   3dd78:	ldrb	r2, [r4, #25]
   3dd7c:	ldr	r3, [r4, #32]
   3dd80:	ldr	r1, [r4, #16]
   3dd84:	mla	r6, r3, r2, r0
   3dd88:	mul	r5, r3, r2
   3dd8c:	cmp	r6, r1
   3dd90:	bls	3de00 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3dd94:	cmp	r0, r1
   3dd98:	bcc	3ddb4 <flatcc_json_printer_uint64_vector_field@@Base+0x22c>
   3dd9c:	ldr	r2, [r4, #44]	; 0x2c
   3dda0:	mov	r0, r4
   3dda4:	mov	r1, #0
   3dda8:	blx	r2
   3ddac:	ldr	r1, [r4, #16]
   3ddb0:	ldr	r0, [r4, #20]
   3ddb4:	sub	r6, r1, r0
   3ddb8:	cmp	r6, r5
   3ddbc:	bcs	3de00 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3ddc0:	mov	r1, #32
   3ddc4:	mov	r2, r6
   3ddc8:	bl	14ee8 <memset@plt>
   3ddcc:	ldr	r0, [r4, #20]
   3ddd0:	ldr	r2, [r4, #44]	; 0x2c
   3ddd4:	mov	r1, #0
   3ddd8:	add	r0, r0, r6
   3dddc:	str	r0, [r4, #20]
   3dde0:	mov	r0, r4
   3dde4:	blx	r2
   3dde8:	ldr	r1, [r4, #16]
   3ddec:	ldr	r0, [r4, #20]
   3ddf0:	sub	r5, r5, r6
   3ddf4:	sub	r6, r1, r0
   3ddf8:	cmp	r5, r6
   3ddfc:	bhi	3ddc0 <flatcc_json_printer_uint64_vector_field@@Base+0x238>
   3de00:	mov	r1, #32
   3de04:	mov	r2, r5
   3de08:	bl	14ee8 <memset@plt>
   3de0c:	ldr	r0, [r4, #20]
   3de10:	add	r2, r0, r5
   3de14:	str	r2, [r4, #20]
   3de18:	b	3de3c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   3de1c:	ldr	r0, [r4, #16]
   3de20:	cmp	r2, r0
   3de24:	bcc	3de3c <flatcc_json_printer_uint64_vector_field@@Base+0x2b4>
   3de28:	ldr	r2, [r4, #44]	; 0x2c
   3de2c:	mov	r0, r4
   3de30:	mov	r1, #0
   3de34:	blx	r2
   3de38:	ldr	r2, [r4, #20]
   3de3c:	ldrd	r0, [r7]
   3de40:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3de44:	ldr	r1, [r4, #20]
   3de48:	add	r7, r7, #8
   3de4c:	cmp	r9, #0
   3de50:	add	r0, r1, r0
   3de54:	str	r0, [r4, #20]
   3de58:	bne	3dd48 <flatcc_json_printer_uint64_vector_field@@Base+0x1c0>
   3de5c:	ldrb	r1, [r4, #25]
   3de60:	ldr	r0, [r4, #20]
   3de64:	cmp	r1, #0
   3de68:	beq	3df28 <flatcc_json_printer_uint64_vector_field@@Base+0x3a0>
   3de6c:	add	r1, r0, #1
   3de70:	str	r1, [r4, #20]
   3de74:	mov	r1, #10
   3de78:	strb	r1, [r0]
   3de7c:	ldr	r0, [r4, #32]
   3de80:	sub	r2, r0, #1
   3de84:	str	r2, [r4, #32]
   3de88:	ldrb	r3, [r4, #25]
   3de8c:	ldr	r0, [r4, #20]
   3de90:	ldr	r1, [r4, #16]
   3de94:	mla	r7, r2, r3, r0
   3de98:	mul	r5, r2, r3
   3de9c:	cmp	r7, r1
   3dea0:	bls	3df10 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   3dea4:	cmp	r0, r1
   3dea8:	bcc	3dec4 <flatcc_json_printer_uint64_vector_field@@Base+0x33c>
   3deac:	ldr	r2, [r4, #44]	; 0x2c
   3deb0:	mov	r0, r4
   3deb4:	mov	r1, #0
   3deb8:	blx	r2
   3debc:	ldr	r1, [r4, #16]
   3dec0:	ldr	r0, [r4, #20]
   3dec4:	sub	r6, r1, r0
   3dec8:	cmp	r6, r5
   3decc:	bcs	3df10 <flatcc_json_printer_uint64_vector_field@@Base+0x388>
   3ded0:	mov	r1, #32
   3ded4:	mov	r2, r6
   3ded8:	bl	14ee8 <memset@plt>
   3dedc:	ldr	r0, [r4, #20]
   3dee0:	ldr	r2, [r4, #44]	; 0x2c
   3dee4:	mov	r1, #0
   3dee8:	add	r0, r0, r6
   3deec:	str	r0, [r4, #20]
   3def0:	mov	r0, r4
   3def4:	blx	r2
   3def8:	ldr	r1, [r4, #16]
   3defc:	ldr	r0, [r4, #20]
   3df00:	sub	r5, r5, r6
   3df04:	sub	r6, r1, r0
   3df08:	cmp	r5, r6
   3df0c:	bhi	3ded0 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   3df10:	mov	r1, #32
   3df14:	mov	r2, r5
   3df18:	bl	14ee8 <memset@plt>
   3df1c:	ldr	r0, [r4, #20]
   3df20:	add	r0, r0, r5
   3df24:	str	r0, [r4, #20]
   3df28:	add	r1, r0, #1
   3df2c:	str	r1, [r4, #20]
   3df30:	mov	r1, #93	; 0x5d
   3df34:	strb	r1, [r0]
   3df38:	sub	sp, fp, #28
   3df3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003df40 <flatcc_json_printer_int8_vector_field@@Base>:
   3df40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3df44:	add	fp, sp, #28
   3df48:	sub	sp, sp, #4
   3df4c:	mov	r4, r0
   3df50:	mov	r0, #4
   3df54:	add	r0, r0, r2, lsl #1
   3df58:	ldr	r2, [r1, #8]
   3df5c:	cmp	r0, r2
   3df60:	bge	3df80 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   3df64:	ldr	r2, [r1, #4]
   3df68:	add	r0, r2, r0
   3df6c:	ldrh	r0, [r0]
   3df70:	cmp	r0, #0
   3df74:	ldrne	r2, [r1]
   3df78:	addsne	r9, r2, r0
   3df7c:	bne	3df88 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   3df80:	sub	sp, fp, #28
   3df84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3df88:	ldr	r0, [r1, #16]
   3df8c:	ldr	r2, [fp, #8]
   3df90:	add	r7, r0, #1
   3df94:	cmp	r0, #0
   3df98:	str	r7, [r1, #16]
   3df9c:	ldrne	r0, [r4, #20]
   3dfa0:	addne	r1, r0, #1
   3dfa4:	strne	r1, [r4, #20]
   3dfa8:	movne	r1, #44	; 0x2c
   3dfac:	strbne	r1, [r0]
   3dfb0:	mov	r1, r3
   3dfb4:	ldr	r0, [r9]
   3dfb8:	ldr	r8, [r9, r0]!
   3dfbc:	mov	r0, r4
   3dfc0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3dfc4:	ldr	r1, [r4, #32]
   3dfc8:	ldr	r0, [r4, #20]
   3dfcc:	cmp	r8, #0
   3dfd0:	add	r1, r1, #1
   3dfd4:	str	r1, [r4, #32]
   3dfd8:	add	r1, r0, #1
   3dfdc:	str	r1, [r4, #20]
   3dfe0:	mov	r1, #91	; 0x5b
   3dfe4:	strb	r1, [r0]
   3dfe8:	beq	3e394 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   3dfec:	ldrb	r1, [r4, #25]
   3dff0:	ldr	r0, [r4, #20]
   3dff4:	cmp	r1, #0
   3dff8:	beq	3e0b4 <flatcc_json_printer_int8_vector_field@@Base+0x174>
   3dffc:	add	r1, r0, #1
   3e000:	str	r1, [r4, #20]
   3e004:	mov	r1, #10
   3e008:	strb	r1, [r0]
   3e00c:	ldr	r0, [r4, #20]
   3e010:	ldrb	r2, [r4, #25]
   3e014:	ldr	r3, [r4, #32]
   3e018:	ldr	r1, [r4, #16]
   3e01c:	mla	r7, r3, r2, r0
   3e020:	mul	r5, r3, r2
   3e024:	cmp	r7, r1
   3e028:	bls	3e098 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   3e02c:	cmp	r0, r1
   3e030:	bcc	3e04c <flatcc_json_printer_int8_vector_field@@Base+0x10c>
   3e034:	ldr	r2, [r4, #44]	; 0x2c
   3e038:	mov	r0, r4
   3e03c:	mov	r1, #0
   3e040:	blx	r2
   3e044:	ldr	r1, [r4, #16]
   3e048:	ldr	r0, [r4, #20]
   3e04c:	sub	r6, r1, r0
   3e050:	cmp	r6, r5
   3e054:	bcs	3e098 <flatcc_json_printer_int8_vector_field@@Base+0x158>
   3e058:	mov	r1, #32
   3e05c:	mov	r2, r6
   3e060:	bl	14ee8 <memset@plt>
   3e064:	ldr	r0, [r4, #20]
   3e068:	ldr	r2, [r4, #44]	; 0x2c
   3e06c:	mov	r1, #0
   3e070:	add	r0, r0, r6
   3e074:	str	r0, [r4, #20]
   3e078:	mov	r0, r4
   3e07c:	blx	r2
   3e080:	ldr	r1, [r4, #16]
   3e084:	ldr	r0, [r4, #20]
   3e088:	sub	r5, r5, r6
   3e08c:	sub	r6, r1, r0
   3e090:	cmp	r5, r6
   3e094:	bhi	3e058 <flatcc_json_printer_int8_vector_field@@Base+0x118>
   3e098:	mov	r1, #32
   3e09c:	mov	r2, r5
   3e0a0:	bl	14ee8 <memset@plt>
   3e0a4:	ldr	r0, [r4, #20]
   3e0a8:	add	r0, r0, r5
   3e0ac:	str	r0, [r4, #20]
   3e0b0:	b	3e0d4 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   3e0b4:	ldr	r1, [r4, #16]
   3e0b8:	cmp	r0, r1
   3e0bc:	bcc	3e0d4 <flatcc_json_printer_int8_vector_field@@Base+0x194>
   3e0c0:	ldr	r2, [r4, #44]	; 0x2c
   3e0c4:	mov	r0, r4
   3e0c8:	mov	r1, #0
   3e0cc:	blx	r2
   3e0d0:	ldr	r0, [r4, #20]
   3e0d4:	ldrb	r1, [r9, #4]
   3e0d8:	sxtb	r2, r1
   3e0dc:	lsr	r1, r1, #7
   3e0e0:	cmn	r2, #1
   3e0e4:	movle	r3, #45	; 0x2d
   3e0e8:	rsble	r2, r2, #0
   3e0ec:	strble	r3, [r0], #1
   3e0f0:	uxtb	r3, r2
   3e0f4:	cmp	r3, #100	; 0x64
   3e0f8:	bcc	3e144 <flatcc_json_printer_int8_vector_field@@Base+0x204>
   3e0fc:	mov	r2, #0
   3e100:	strb	r2, [r0, #3]
   3e104:	movw	r2, #34079	; 0x851f
   3e108:	movt	r2, #20971	; 0x51eb
   3e10c:	umull	r2, r7, r3, r2
   3e110:	mov	r2, #48	; 0x30
   3e114:	orr	r2, r2, r7, lsr #5
   3e118:	strb	r2, [r0]
   3e11c:	lsr	r2, r7, #5
   3e120:	mov	r7, #100	; 0x64
   3e124:	mls	r2, r2, r7, r3
   3e128:	ldr	r3, [pc, #840]	; 3e478 <flatcc_json_printer_int8_vector_field@@Base+0x538>
   3e12c:	add	r3, pc, r3
   3e130:	add	r2, r3, r2, lsl #1
   3e134:	ldrh	r2, [r2]
   3e138:	strh	r2, [r0, #1]
   3e13c:	mov	r0, #3
   3e140:	b	3e19c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   3e144:	cmp	r3, #10
   3e148:	bcc	3e188 <flatcc_json_printer_int8_vector_field@@Base+0x248>
   3e14c:	mov	r2, #0
   3e150:	strb	r2, [r0, #2]
   3e154:	movw	r2, #34079	; 0x851f
   3e158:	movt	r2, #20971	; 0x51eb
   3e15c:	umull	r2, r7, r3, r2
   3e160:	lsr	r2, r7, #5
   3e164:	mov	r7, #100	; 0x64
   3e168:	mls	r2, r2, r7, r3
   3e16c:	ldr	r3, [pc, #776]	; 3e47c <flatcc_json_printer_int8_vector_field@@Base+0x53c>
   3e170:	add	r3, pc, r3
   3e174:	add	r2, r3, r2, lsl #1
   3e178:	ldrh	r2, [r2]
   3e17c:	strh	r2, [r0]
   3e180:	mov	r0, #2
   3e184:	b	3e19c <flatcc_json_printer_int8_vector_field@@Base+0x25c>
   3e188:	mov	r3, #0
   3e18c:	add	r2, r2, #48	; 0x30
   3e190:	strb	r3, [r0, #1]
   3e194:	strb	r2, [r0]
   3e198:	mov	r0, #1
   3e19c:	add	r0, r0, r1
   3e1a0:	ldr	r1, [r4, #20]
   3e1a4:	subs	r8, r8, #1
   3e1a8:	add	r0, r1, r0
   3e1ac:	str	r0, [r4, #20]
   3e1b0:	beq	3e394 <flatcc_json_printer_int8_vector_field@@Base+0x454>
   3e1b4:	ldr	r0, [r4, #20]
   3e1b8:	add	r7, r9, #5
   3e1bc:	mov	r9, #44	; 0x2c
   3e1c0:	mov	sl, #0
   3e1c4:	add	r1, r0, #1
   3e1c8:	str	r1, [r4, #20]
   3e1cc:	strb	r9, [r0]
   3e1d0:	ldrb	r1, [r4, #25]
   3e1d4:	ldr	r0, [r4, #20]
   3e1d8:	cmp	r1, #0
   3e1dc:	beq	3e298 <flatcc_json_printer_int8_vector_field@@Base+0x358>
   3e1e0:	add	r1, r0, #1
   3e1e4:	str	r1, [r4, #20]
   3e1e8:	mov	r1, #10
   3e1ec:	strb	r1, [r0]
   3e1f0:	ldr	r0, [r4, #20]
   3e1f4:	ldrb	r2, [r4, #25]
   3e1f8:	ldr	r3, [r4, #32]
   3e1fc:	ldr	r1, [r4, #16]
   3e200:	mla	r6, r3, r2, r0
   3e204:	mul	r5, r3, r2
   3e208:	cmp	r6, r1
   3e20c:	bls	3e27c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   3e210:	cmp	r0, r1
   3e214:	bcc	3e230 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   3e218:	ldr	r2, [r4, #44]	; 0x2c
   3e21c:	mov	r0, r4
   3e220:	mov	r1, #0
   3e224:	blx	r2
   3e228:	ldr	r1, [r4, #16]
   3e22c:	ldr	r0, [r4, #20]
   3e230:	sub	r6, r1, r0
   3e234:	cmp	r6, r5
   3e238:	bcs	3e27c <flatcc_json_printer_int8_vector_field@@Base+0x33c>
   3e23c:	mov	r1, #32
   3e240:	mov	r2, r6
   3e244:	bl	14ee8 <memset@plt>
   3e248:	ldr	r0, [r4, #20]
   3e24c:	ldr	r2, [r4, #44]	; 0x2c
   3e250:	mov	r1, #0
   3e254:	add	r0, r0, r6
   3e258:	str	r0, [r4, #20]
   3e25c:	mov	r0, r4
   3e260:	blx	r2
   3e264:	ldr	r1, [r4, #16]
   3e268:	ldr	r0, [r4, #20]
   3e26c:	sub	r5, r5, r6
   3e270:	sub	r6, r1, r0
   3e274:	cmp	r5, r6
   3e278:	bhi	3e23c <flatcc_json_printer_int8_vector_field@@Base+0x2fc>
   3e27c:	mov	r1, #32
   3e280:	mov	r2, r5
   3e284:	bl	14ee8 <memset@plt>
   3e288:	ldr	r0, [r4, #20]
   3e28c:	add	r0, r0, r5
   3e290:	str	r0, [r4, #20]
   3e294:	b	3e2b8 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   3e298:	ldr	r1, [r4, #16]
   3e29c:	cmp	r0, r1
   3e2a0:	bcc	3e2b8 <flatcc_json_printer_int8_vector_field@@Base+0x378>
   3e2a4:	ldr	r2, [r4, #44]	; 0x2c
   3e2a8:	mov	r0, r4
   3e2ac:	mov	r1, #0
   3e2b0:	blx	r2
   3e2b4:	ldr	r0, [r4, #20]
   3e2b8:	ldrb	r1, [r7]
   3e2bc:	sub	r8, r8, #1
   3e2c0:	sxtb	r2, r1
   3e2c4:	lsr	r1, r1, #7
   3e2c8:	cmn	r2, #1
   3e2cc:	movle	r3, #45	; 0x2d
   3e2d0:	rsble	r2, r2, #0
   3e2d4:	strble	r3, [r0], #1
   3e2d8:	uxtb	r3, r2
   3e2dc:	cmp	r3, #100	; 0x64
   3e2e0:	bcc	3e328 <flatcc_json_printer_int8_vector_field@@Base+0x3e8>
   3e2e4:	movw	r2, #34079	; 0x851f
   3e2e8:	strb	sl, [r0, #3]
   3e2ec:	movt	r2, #20971	; 0x51eb
   3e2f0:	umull	r2, r6, r3, r2
   3e2f4:	mov	r2, #48	; 0x30
   3e2f8:	orr	r2, r2, r6, lsr #5
   3e2fc:	strb	r2, [r0]
   3e300:	lsr	r2, r6, #5
   3e304:	mov	r6, #100	; 0x64
   3e308:	mls	r2, r2, r6, r3
   3e30c:	ldr	r3, [pc, #364]	; 3e480 <flatcc_json_printer_int8_vector_field@@Base+0x540>
   3e310:	add	r3, pc, r3
   3e314:	add	r2, r3, r2, lsl #1
   3e318:	ldrh	r2, [r2]
   3e31c:	strh	r2, [r0, #1]
   3e320:	mov	r0, #3
   3e324:	b	3e378 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   3e328:	cmp	r3, #10
   3e32c:	bcc	3e368 <flatcc_json_printer_int8_vector_field@@Base+0x428>
   3e330:	movw	r2, #34079	; 0x851f
   3e334:	strb	sl, [r0, #2]
   3e338:	movt	r2, #20971	; 0x51eb
   3e33c:	umull	r2, r6, r3, r2
   3e340:	lsr	r2, r6, #5
   3e344:	mov	r6, #100	; 0x64
   3e348:	mls	r2, r2, r6, r3
   3e34c:	ldr	r3, [pc, #304]	; 3e484 <flatcc_json_printer_int8_vector_field@@Base+0x544>
   3e350:	add	r3, pc, r3
   3e354:	add	r2, r3, r2, lsl #1
   3e358:	ldrh	r2, [r2]
   3e35c:	strh	r2, [r0]
   3e360:	mov	r0, #2
   3e364:	b	3e378 <flatcc_json_printer_int8_vector_field@@Base+0x438>
   3e368:	add	r2, r2, #48	; 0x30
   3e36c:	strb	sl, [r0, #1]
   3e370:	strb	r2, [r0]
   3e374:	mov	r0, #1
   3e378:	add	r0, r0, r1
   3e37c:	ldr	r1, [r4, #20]
   3e380:	add	r7, r7, #1
   3e384:	cmp	r8, #0
   3e388:	add	r0, r1, r0
   3e38c:	str	r0, [r4, #20]
   3e390:	bne	3e1c4 <flatcc_json_printer_int8_vector_field@@Base+0x284>
   3e394:	ldrb	r1, [r4, #25]
   3e398:	ldr	r0, [r4, #20]
   3e39c:	cmp	r1, #0
   3e3a0:	beq	3e460 <flatcc_json_printer_int8_vector_field@@Base+0x520>
   3e3a4:	add	r1, r0, #1
   3e3a8:	str	r1, [r4, #20]
   3e3ac:	mov	r1, #10
   3e3b0:	strb	r1, [r0]
   3e3b4:	ldr	r0, [r4, #32]
   3e3b8:	sub	r2, r0, #1
   3e3bc:	str	r2, [r4, #32]
   3e3c0:	ldrb	r3, [r4, #25]
   3e3c4:	ldr	r0, [r4, #20]
   3e3c8:	ldr	r1, [r4, #16]
   3e3cc:	mla	r7, r2, r3, r0
   3e3d0:	mul	r5, r2, r3
   3e3d4:	cmp	r7, r1
   3e3d8:	bls	3e448 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   3e3dc:	cmp	r0, r1
   3e3e0:	bcc	3e3fc <flatcc_json_printer_int8_vector_field@@Base+0x4bc>
   3e3e4:	ldr	r2, [r4, #44]	; 0x2c
   3e3e8:	mov	r0, r4
   3e3ec:	mov	r1, #0
   3e3f0:	blx	r2
   3e3f4:	ldr	r1, [r4, #16]
   3e3f8:	ldr	r0, [r4, #20]
   3e3fc:	sub	r6, r1, r0
   3e400:	cmp	r6, r5
   3e404:	bcs	3e448 <flatcc_json_printer_int8_vector_field@@Base+0x508>
   3e408:	mov	r1, #32
   3e40c:	mov	r2, r6
   3e410:	bl	14ee8 <memset@plt>
   3e414:	ldr	r0, [r4, #20]
   3e418:	ldr	r2, [r4, #44]	; 0x2c
   3e41c:	mov	r1, #0
   3e420:	add	r0, r0, r6
   3e424:	str	r0, [r4, #20]
   3e428:	mov	r0, r4
   3e42c:	blx	r2
   3e430:	ldr	r1, [r4, #16]
   3e434:	ldr	r0, [r4, #20]
   3e438:	sub	r5, r5, r6
   3e43c:	sub	r6, r1, r0
   3e440:	cmp	r5, r6
   3e444:	bhi	3e408 <flatcc_json_printer_int8_vector_field@@Base+0x4c8>
   3e448:	mov	r1, #32
   3e44c:	mov	r2, r5
   3e450:	bl	14ee8 <memset@plt>
   3e454:	ldr	r0, [r4, #20]
   3e458:	add	r0, r0, r5
   3e45c:	str	r0, [r4, #20]
   3e460:	add	r1, r0, #1
   3e464:	str	r1, [r4, #20]
   3e468:	mov	r1, #93	; 0x5d
   3e46c:	strb	r1, [r0]
   3e470:	sub	sp, fp, #28
   3e474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e478:	andeq	ip, r0, r3, lsr pc
   3e47c:	andeq	ip, r0, pc, ror #29
   3e480:	andeq	ip, r0, pc, asr #26
   3e484:	andeq	ip, r0, pc, lsl #26

0003e488 <flatcc_json_printer_int16_vector_field@@Base>:
   3e488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e48c:	add	fp, sp, #28
   3e490:	sub	sp, sp, #4
   3e494:	mov	r4, r0
   3e498:	mov	r0, #4
   3e49c:	add	r0, r0, r2, lsl #1
   3e4a0:	ldr	r2, [r1, #8]
   3e4a4:	cmp	r0, r2
   3e4a8:	bge	3e4c8 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   3e4ac:	ldr	r2, [r1, #4]
   3e4b0:	add	r0, r2, r0
   3e4b4:	ldrh	r0, [r0]
   3e4b8:	cmp	r0, #0
   3e4bc:	ldrne	r2, [r1]
   3e4c0:	addsne	r8, r2, r0
   3e4c4:	bne	3e4d0 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   3e4c8:	sub	sp, fp, #28
   3e4cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e4d0:	ldr	r0, [r1, #16]
   3e4d4:	ldr	r2, [fp, #8]
   3e4d8:	add	r7, r0, #1
   3e4dc:	cmp	r0, #0
   3e4e0:	str	r7, [r1, #16]
   3e4e4:	ldrne	r0, [r4, #20]
   3e4e8:	addne	r1, r0, #1
   3e4ec:	strne	r1, [r4, #20]
   3e4f0:	movne	r1, #44	; 0x2c
   3e4f4:	strbne	r1, [r0]
   3e4f8:	mov	r1, r3
   3e4fc:	ldr	r0, [r8]
   3e500:	ldr	r7, [r8, r0]!
   3e504:	mov	r0, r4
   3e508:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3e50c:	ldr	r1, [r4, #32]
   3e510:	ldr	r0, [r4, #20]
   3e514:	cmp	r7, #0
   3e518:	add	r1, r1, #1
   3e51c:	str	r1, [r4, #32]
   3e520:	add	r1, r0, #1
   3e524:	str	r1, [r4, #20]
   3e528:	mov	r1, #91	; 0x5b
   3e52c:	strb	r1, [r0]
   3e530:	beq	3e79c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   3e534:	ldrb	r0, [r4, #25]
   3e538:	ldr	r1, [r4, #20]
   3e53c:	cmp	r0, #0
   3e540:	beq	3e5fc <flatcc_json_printer_int16_vector_field@@Base+0x174>
   3e544:	add	r0, r1, #1
   3e548:	str	r0, [r4, #20]
   3e54c:	mov	r0, #10
   3e550:	strb	r0, [r1]
   3e554:	ldr	r0, [r4, #20]
   3e558:	ldrb	r2, [r4, #25]
   3e55c:	ldr	r3, [r4, #32]
   3e560:	ldr	r1, [r4, #16]
   3e564:	mla	r6, r3, r2, r0
   3e568:	mul	r5, r3, r2
   3e56c:	cmp	r6, r1
   3e570:	bls	3e5e0 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   3e574:	cmp	r0, r1
   3e578:	bcc	3e594 <flatcc_json_printer_int16_vector_field@@Base+0x10c>
   3e57c:	ldr	r2, [r4, #44]	; 0x2c
   3e580:	mov	r0, r4
   3e584:	mov	r1, #0
   3e588:	blx	r2
   3e58c:	ldr	r1, [r4, #16]
   3e590:	ldr	r0, [r4, #20]
   3e594:	sub	r6, r1, r0
   3e598:	cmp	r6, r5
   3e59c:	bcs	3e5e0 <flatcc_json_printer_int16_vector_field@@Base+0x158>
   3e5a0:	mov	r1, #32
   3e5a4:	mov	r2, r6
   3e5a8:	bl	14ee8 <memset@plt>
   3e5ac:	ldr	r0, [r4, #20]
   3e5b0:	ldr	r2, [r4, #44]	; 0x2c
   3e5b4:	mov	r1, #0
   3e5b8:	add	r0, r0, r6
   3e5bc:	str	r0, [r4, #20]
   3e5c0:	mov	r0, r4
   3e5c4:	blx	r2
   3e5c8:	ldr	r1, [r4, #16]
   3e5cc:	ldr	r0, [r4, #20]
   3e5d0:	sub	r5, r5, r6
   3e5d4:	sub	r6, r1, r0
   3e5d8:	cmp	r5, r6
   3e5dc:	bhi	3e5a0 <flatcc_json_printer_int16_vector_field@@Base+0x118>
   3e5e0:	mov	r1, #32
   3e5e4:	mov	r2, r5
   3e5e8:	bl	14ee8 <memset@plt>
   3e5ec:	ldr	r0, [r4, #20]
   3e5f0:	add	r1, r0, r5
   3e5f4:	str	r1, [r4, #20]
   3e5f8:	b	3e61c <flatcc_json_printer_int16_vector_field@@Base+0x194>
   3e5fc:	ldr	r0, [r4, #16]
   3e600:	cmp	r1, r0
   3e604:	bcc	3e61c <flatcc_json_printer_int16_vector_field@@Base+0x194>
   3e608:	ldr	r2, [r4, #44]	; 0x2c
   3e60c:	mov	r0, r4
   3e610:	mov	r1, #0
   3e614:	blx	r2
   3e618:	ldr	r1, [r4, #20]
   3e61c:	ldrh	r0, [r8, #4]
   3e620:	lsr	r5, r0, #15
   3e624:	sxth	r0, r0
   3e628:	cmn	r0, #1
   3e62c:	rsble	r0, r0, #0
   3e630:	movle	r2, #45	; 0x2d
   3e634:	strble	r2, [r1], #1
   3e638:	uxth	r0, r0
   3e63c:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3e640:	ldr	r1, [r4, #20]
   3e644:	add	r0, r0, r5
   3e648:	subs	r9, r7, #1
   3e64c:	add	r0, r1, r0
   3e650:	str	r0, [r4, #20]
   3e654:	beq	3e79c <flatcc_json_printer_int16_vector_field@@Base+0x314>
   3e658:	ldr	r0, [r4, #20]
   3e65c:	add	r7, r8, #6
   3e660:	mov	r8, #44	; 0x2c
   3e664:	mov	sl, #10
   3e668:	add	r1, r0, #1
   3e66c:	str	r1, [r4, #20]
   3e670:	strb	r8, [r0]
   3e674:	ldrb	r0, [r4, #25]
   3e678:	ldr	r1, [r4, #20]
   3e67c:	cmp	r0, #0
   3e680:	beq	3e738 <flatcc_json_printer_int16_vector_field@@Base+0x2b0>
   3e684:	add	r0, r1, #1
   3e688:	str	r0, [r4, #20]
   3e68c:	strb	sl, [r1]
   3e690:	ldr	r0, [r4, #20]
   3e694:	ldrb	r2, [r4, #25]
   3e698:	ldr	r3, [r4, #32]
   3e69c:	ldr	r1, [r4, #16]
   3e6a0:	mla	r6, r3, r2, r0
   3e6a4:	mul	r5, r3, r2
   3e6a8:	cmp	r6, r1
   3e6ac:	bls	3e71c <flatcc_json_printer_int16_vector_field@@Base+0x294>
   3e6b0:	cmp	r0, r1
   3e6b4:	bcc	3e6d0 <flatcc_json_printer_int16_vector_field@@Base+0x248>
   3e6b8:	ldr	r2, [r4, #44]	; 0x2c
   3e6bc:	mov	r0, r4
   3e6c0:	mov	r1, #0
   3e6c4:	blx	r2
   3e6c8:	ldr	r1, [r4, #16]
   3e6cc:	ldr	r0, [r4, #20]
   3e6d0:	sub	r6, r1, r0
   3e6d4:	cmp	r6, r5
   3e6d8:	bcs	3e71c <flatcc_json_printer_int16_vector_field@@Base+0x294>
   3e6dc:	mov	r1, #32
   3e6e0:	mov	r2, r6
   3e6e4:	bl	14ee8 <memset@plt>
   3e6e8:	ldr	r0, [r4, #20]
   3e6ec:	ldr	r2, [r4, #44]	; 0x2c
   3e6f0:	mov	r1, #0
   3e6f4:	add	r0, r0, r6
   3e6f8:	str	r0, [r4, #20]
   3e6fc:	mov	r0, r4
   3e700:	blx	r2
   3e704:	ldr	r1, [r4, #16]
   3e708:	ldr	r0, [r4, #20]
   3e70c:	sub	r5, r5, r6
   3e710:	sub	r6, r1, r0
   3e714:	cmp	r5, r6
   3e718:	bhi	3e6dc <flatcc_json_printer_int16_vector_field@@Base+0x254>
   3e71c:	mov	r1, #32
   3e720:	mov	r2, r5
   3e724:	bl	14ee8 <memset@plt>
   3e728:	ldr	r0, [r4, #20]
   3e72c:	add	r1, r0, r5
   3e730:	str	r1, [r4, #20]
   3e734:	b	3e758 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   3e738:	ldr	r0, [r4, #16]
   3e73c:	cmp	r1, r0
   3e740:	bcc	3e758 <flatcc_json_printer_int16_vector_field@@Base+0x2d0>
   3e744:	ldr	r2, [r4, #44]	; 0x2c
   3e748:	mov	r0, r4
   3e74c:	mov	r1, #0
   3e750:	blx	r2
   3e754:	ldr	r1, [r4, #20]
   3e758:	ldrh	r0, [r7]
   3e75c:	sub	r9, r9, #1
   3e760:	lsr	r5, r0, #15
   3e764:	sxth	r0, r0
   3e768:	cmn	r0, #1
   3e76c:	rsble	r0, r0, #0
   3e770:	movle	r2, #45	; 0x2d
   3e774:	strble	r2, [r1], #1
   3e778:	uxth	r0, r0
   3e77c:	bl	39644 <flatcc_json_printer_uint16@@Base+0x2c>
   3e780:	ldr	r1, [r4, #20]
   3e784:	add	r0, r0, r5
   3e788:	add	r7, r7, #2
   3e78c:	cmp	r9, #0
   3e790:	add	r0, r1, r0
   3e794:	str	r0, [r4, #20]
   3e798:	bne	3e668 <flatcc_json_printer_int16_vector_field@@Base+0x1e0>
   3e79c:	ldrb	r1, [r4, #25]
   3e7a0:	ldr	r0, [r4, #20]
   3e7a4:	cmp	r1, #0
   3e7a8:	beq	3e868 <flatcc_json_printer_int16_vector_field@@Base+0x3e0>
   3e7ac:	add	r1, r0, #1
   3e7b0:	str	r1, [r4, #20]
   3e7b4:	mov	r1, #10
   3e7b8:	strb	r1, [r0]
   3e7bc:	ldr	r0, [r4, #32]
   3e7c0:	sub	r2, r0, #1
   3e7c4:	str	r2, [r4, #32]
   3e7c8:	ldrb	r3, [r4, #25]
   3e7cc:	ldr	r0, [r4, #20]
   3e7d0:	ldr	r1, [r4, #16]
   3e7d4:	mla	r7, r2, r3, r0
   3e7d8:	mul	r5, r2, r3
   3e7dc:	cmp	r7, r1
   3e7e0:	bls	3e850 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   3e7e4:	cmp	r0, r1
   3e7e8:	bcc	3e804 <flatcc_json_printer_int16_vector_field@@Base+0x37c>
   3e7ec:	ldr	r2, [r4, #44]	; 0x2c
   3e7f0:	mov	r0, r4
   3e7f4:	mov	r1, #0
   3e7f8:	blx	r2
   3e7fc:	ldr	r1, [r4, #16]
   3e800:	ldr	r0, [r4, #20]
   3e804:	sub	r6, r1, r0
   3e808:	cmp	r6, r5
   3e80c:	bcs	3e850 <flatcc_json_printer_int16_vector_field@@Base+0x3c8>
   3e810:	mov	r1, #32
   3e814:	mov	r2, r6
   3e818:	bl	14ee8 <memset@plt>
   3e81c:	ldr	r0, [r4, #20]
   3e820:	ldr	r2, [r4, #44]	; 0x2c
   3e824:	mov	r1, #0
   3e828:	add	r0, r0, r6
   3e82c:	str	r0, [r4, #20]
   3e830:	mov	r0, r4
   3e834:	blx	r2
   3e838:	ldr	r1, [r4, #16]
   3e83c:	ldr	r0, [r4, #20]
   3e840:	sub	r5, r5, r6
   3e844:	sub	r6, r1, r0
   3e848:	cmp	r5, r6
   3e84c:	bhi	3e810 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   3e850:	mov	r1, #32
   3e854:	mov	r2, r5
   3e858:	bl	14ee8 <memset@plt>
   3e85c:	ldr	r0, [r4, #20]
   3e860:	add	r0, r0, r5
   3e864:	str	r0, [r4, #20]
   3e868:	add	r1, r0, #1
   3e86c:	str	r1, [r4, #20]
   3e870:	mov	r1, #93	; 0x5d
   3e874:	strb	r1, [r0]
   3e878:	sub	sp, fp, #28
   3e87c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e880 <flatcc_json_printer_int32_vector_field@@Base>:
   3e880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e884:	add	fp, sp, #28
   3e888:	sub	sp, sp, #4
   3e88c:	mov	r4, r0
   3e890:	mov	r0, #4
   3e894:	add	r0, r0, r2, lsl #1
   3e898:	ldr	r2, [r1, #8]
   3e89c:	cmp	r0, r2
   3e8a0:	bge	3e8c0 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   3e8a4:	ldr	r2, [r1, #4]
   3e8a8:	add	r0, r2, r0
   3e8ac:	ldrh	r0, [r0]
   3e8b0:	cmp	r0, #0
   3e8b4:	ldrne	r2, [r1]
   3e8b8:	addsne	r8, r2, r0
   3e8bc:	bne	3e8c8 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   3e8c0:	sub	sp, fp, #28
   3e8c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e8c8:	ldr	r0, [r1, #16]
   3e8cc:	ldr	r2, [fp, #8]
   3e8d0:	add	r7, r0, #1
   3e8d4:	cmp	r0, #0
   3e8d8:	str	r7, [r1, #16]
   3e8dc:	ldrne	r0, [r4, #20]
   3e8e0:	addne	r1, r0, #1
   3e8e4:	strne	r1, [r4, #20]
   3e8e8:	movne	r1, #44	; 0x2c
   3e8ec:	strbne	r1, [r0]
   3e8f0:	mov	r1, r3
   3e8f4:	ldr	r0, [r8]
   3e8f8:	ldr	r7, [r8, r0]!
   3e8fc:	mov	r0, r4
   3e900:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3e904:	ldr	r1, [r4, #32]
   3e908:	ldr	r0, [r4, #20]
   3e90c:	cmp	r7, #0
   3e910:	add	r1, r1, #1
   3e914:	str	r1, [r4, #32]
   3e918:	add	r1, r0, #1
   3e91c:	str	r1, [r4, #20]
   3e920:	mov	r1, #91	; 0x5b
   3e924:	strb	r1, [r0]
   3e928:	beq	3eb84 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   3e92c:	ldrb	r0, [r4, #25]
   3e930:	ldr	r1, [r4, #20]
   3e934:	cmp	r0, #0
   3e938:	beq	3e9f4 <flatcc_json_printer_int32_vector_field@@Base+0x174>
   3e93c:	add	r0, r1, #1
   3e940:	str	r0, [r4, #20]
   3e944:	mov	r0, #10
   3e948:	strb	r0, [r1]
   3e94c:	ldr	r0, [r4, #20]
   3e950:	ldrb	r2, [r4, #25]
   3e954:	ldr	r3, [r4, #32]
   3e958:	ldr	r1, [r4, #16]
   3e95c:	mla	r6, r3, r2, r0
   3e960:	mul	r5, r3, r2
   3e964:	cmp	r6, r1
   3e968:	bls	3e9d8 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   3e96c:	cmp	r0, r1
   3e970:	bcc	3e98c <flatcc_json_printer_int32_vector_field@@Base+0x10c>
   3e974:	ldr	r2, [r4, #44]	; 0x2c
   3e978:	mov	r0, r4
   3e97c:	mov	r1, #0
   3e980:	blx	r2
   3e984:	ldr	r1, [r4, #16]
   3e988:	ldr	r0, [r4, #20]
   3e98c:	sub	r6, r1, r0
   3e990:	cmp	r6, r5
   3e994:	bcs	3e9d8 <flatcc_json_printer_int32_vector_field@@Base+0x158>
   3e998:	mov	r1, #32
   3e99c:	mov	r2, r6
   3e9a0:	bl	14ee8 <memset@plt>
   3e9a4:	ldr	r0, [r4, #20]
   3e9a8:	ldr	r2, [r4, #44]	; 0x2c
   3e9ac:	mov	r1, #0
   3e9b0:	add	r0, r0, r6
   3e9b4:	str	r0, [r4, #20]
   3e9b8:	mov	r0, r4
   3e9bc:	blx	r2
   3e9c0:	ldr	r1, [r4, #16]
   3e9c4:	ldr	r0, [r4, #20]
   3e9c8:	sub	r5, r5, r6
   3e9cc:	sub	r6, r1, r0
   3e9d0:	cmp	r5, r6
   3e9d4:	bhi	3e998 <flatcc_json_printer_int32_vector_field@@Base+0x118>
   3e9d8:	mov	r1, #32
   3e9dc:	mov	r2, r5
   3e9e0:	bl	14ee8 <memset@plt>
   3e9e4:	ldr	r0, [r4, #20]
   3e9e8:	add	r1, r0, r5
   3e9ec:	str	r1, [r4, #20]
   3e9f0:	b	3ea14 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   3e9f4:	ldr	r0, [r4, #16]
   3e9f8:	cmp	r1, r0
   3e9fc:	bcc	3ea14 <flatcc_json_printer_int32_vector_field@@Base+0x194>
   3ea00:	ldr	r2, [r4, #44]	; 0x2c
   3ea04:	mov	r0, r4
   3ea08:	mov	r1, #0
   3ea0c:	blx	r2
   3ea10:	ldr	r1, [r4, #20]
   3ea14:	ldr	r0, [r8, #4]
   3ea18:	cmn	r0, #1
   3ea1c:	lsr	r5, r0, #31
   3ea20:	movle	r2, #45	; 0x2d
   3ea24:	rsble	r0, r0, #0
   3ea28:	strble	r2, [r1], #1
   3ea2c:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3ea30:	ldr	r1, [r4, #20]
   3ea34:	add	r0, r0, r5
   3ea38:	subs	r9, r7, #1
   3ea3c:	add	r0, r1, r0
   3ea40:	str	r0, [r4, #20]
   3ea44:	beq	3eb84 <flatcc_json_printer_int32_vector_field@@Base+0x304>
   3ea48:	ldr	r0, [r4, #20]
   3ea4c:	add	r7, r8, #8
   3ea50:	mov	r8, #44	; 0x2c
   3ea54:	mov	sl, #10
   3ea58:	add	r1, r0, #1
   3ea5c:	str	r1, [r4, #20]
   3ea60:	strb	r8, [r0]
   3ea64:	ldrb	r0, [r4, #25]
   3ea68:	ldr	r1, [r4, #20]
   3ea6c:	cmp	r0, #0
   3ea70:	beq	3eb28 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   3ea74:	add	r0, r1, #1
   3ea78:	str	r0, [r4, #20]
   3ea7c:	strb	sl, [r1]
   3ea80:	ldr	r0, [r4, #20]
   3ea84:	ldrb	r2, [r4, #25]
   3ea88:	ldr	r3, [r4, #32]
   3ea8c:	ldr	r1, [r4, #16]
   3ea90:	mla	r6, r3, r2, r0
   3ea94:	mul	r5, r3, r2
   3ea98:	cmp	r6, r1
   3ea9c:	bls	3eb0c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   3eaa0:	cmp	r0, r1
   3eaa4:	bcc	3eac0 <flatcc_json_printer_int32_vector_field@@Base+0x240>
   3eaa8:	ldr	r2, [r4, #44]	; 0x2c
   3eaac:	mov	r0, r4
   3eab0:	mov	r1, #0
   3eab4:	blx	r2
   3eab8:	ldr	r1, [r4, #16]
   3eabc:	ldr	r0, [r4, #20]
   3eac0:	sub	r6, r1, r0
   3eac4:	cmp	r6, r5
   3eac8:	bcs	3eb0c <flatcc_json_printer_int32_vector_field@@Base+0x28c>
   3eacc:	mov	r1, #32
   3ead0:	mov	r2, r6
   3ead4:	bl	14ee8 <memset@plt>
   3ead8:	ldr	r0, [r4, #20]
   3eadc:	ldr	r2, [r4, #44]	; 0x2c
   3eae0:	mov	r1, #0
   3eae4:	add	r0, r0, r6
   3eae8:	str	r0, [r4, #20]
   3eaec:	mov	r0, r4
   3eaf0:	blx	r2
   3eaf4:	ldr	r1, [r4, #16]
   3eaf8:	ldr	r0, [r4, #20]
   3eafc:	sub	r5, r5, r6
   3eb00:	sub	r6, r1, r0
   3eb04:	cmp	r5, r6
   3eb08:	bhi	3eacc <flatcc_json_printer_int32_vector_field@@Base+0x24c>
   3eb0c:	mov	r1, #32
   3eb10:	mov	r2, r5
   3eb14:	bl	14ee8 <memset@plt>
   3eb18:	ldr	r0, [r4, #20]
   3eb1c:	add	r1, r0, r5
   3eb20:	str	r1, [r4, #20]
   3eb24:	b	3eb48 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   3eb28:	ldr	r0, [r4, #16]
   3eb2c:	cmp	r1, r0
   3eb30:	bcc	3eb48 <flatcc_json_printer_int32_vector_field@@Base+0x2c8>
   3eb34:	ldr	r2, [r4, #44]	; 0x2c
   3eb38:	mov	r0, r4
   3eb3c:	mov	r1, #0
   3eb40:	blx	r2
   3eb44:	ldr	r1, [r4, #20]
   3eb48:	ldr	r0, [r7]
   3eb4c:	sub	r9, r9, #1
   3eb50:	cmn	r0, #1
   3eb54:	lsr	r5, r0, #31
   3eb58:	movle	r2, #45	; 0x2d
   3eb5c:	rsble	r0, r0, #0
   3eb60:	strble	r2, [r1], #1
   3eb64:	bl	397e0 <flatcc_json_printer_uint32@@Base+0x2c>
   3eb68:	ldr	r1, [r4, #20]
   3eb6c:	add	r0, r0, r5
   3eb70:	add	r7, r7, #4
   3eb74:	cmp	r9, #0
   3eb78:	add	r0, r1, r0
   3eb7c:	str	r0, [r4, #20]
   3eb80:	bne	3ea58 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   3eb84:	ldrb	r1, [r4, #25]
   3eb88:	ldr	r0, [r4, #20]
   3eb8c:	cmp	r1, #0
   3eb90:	beq	3ec50 <flatcc_json_printer_int32_vector_field@@Base+0x3d0>
   3eb94:	add	r1, r0, #1
   3eb98:	str	r1, [r4, #20]
   3eb9c:	mov	r1, #10
   3eba0:	strb	r1, [r0]
   3eba4:	ldr	r0, [r4, #32]
   3eba8:	sub	r2, r0, #1
   3ebac:	str	r2, [r4, #32]
   3ebb0:	ldrb	r3, [r4, #25]
   3ebb4:	ldr	r0, [r4, #20]
   3ebb8:	ldr	r1, [r4, #16]
   3ebbc:	mla	r7, r2, r3, r0
   3ebc0:	mul	r5, r2, r3
   3ebc4:	cmp	r7, r1
   3ebc8:	bls	3ec38 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   3ebcc:	cmp	r0, r1
   3ebd0:	bcc	3ebec <flatcc_json_printer_int32_vector_field@@Base+0x36c>
   3ebd4:	ldr	r2, [r4, #44]	; 0x2c
   3ebd8:	mov	r0, r4
   3ebdc:	mov	r1, #0
   3ebe0:	blx	r2
   3ebe4:	ldr	r1, [r4, #16]
   3ebe8:	ldr	r0, [r4, #20]
   3ebec:	sub	r6, r1, r0
   3ebf0:	cmp	r6, r5
   3ebf4:	bcs	3ec38 <flatcc_json_printer_int32_vector_field@@Base+0x3b8>
   3ebf8:	mov	r1, #32
   3ebfc:	mov	r2, r6
   3ec00:	bl	14ee8 <memset@plt>
   3ec04:	ldr	r0, [r4, #20]
   3ec08:	ldr	r2, [r4, #44]	; 0x2c
   3ec0c:	mov	r1, #0
   3ec10:	add	r0, r0, r6
   3ec14:	str	r0, [r4, #20]
   3ec18:	mov	r0, r4
   3ec1c:	blx	r2
   3ec20:	ldr	r1, [r4, #16]
   3ec24:	ldr	r0, [r4, #20]
   3ec28:	sub	r5, r5, r6
   3ec2c:	sub	r6, r1, r0
   3ec30:	cmp	r5, r6
   3ec34:	bhi	3ebf8 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   3ec38:	mov	r1, #32
   3ec3c:	mov	r2, r5
   3ec40:	bl	14ee8 <memset@plt>
   3ec44:	ldr	r0, [r4, #20]
   3ec48:	add	r0, r0, r5
   3ec4c:	str	r0, [r4, #20]
   3ec50:	add	r1, r0, #1
   3ec54:	str	r1, [r4, #20]
   3ec58:	mov	r1, #93	; 0x5d
   3ec5c:	strb	r1, [r0]
   3ec60:	sub	sp, fp, #28
   3ec64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ec68 <flatcc_json_printer_int64_vector_field@@Base>:
   3ec68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ec6c:	add	fp, sp, #28
   3ec70:	sub	sp, sp, #4
   3ec74:	mov	r4, r0
   3ec78:	mov	r0, #4
   3ec7c:	add	r0, r0, r2, lsl #1
   3ec80:	ldr	r2, [r1, #8]
   3ec84:	cmp	r0, r2
   3ec88:	bge	3eca8 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   3ec8c:	ldr	r2, [r1, #4]
   3ec90:	add	r0, r2, r0
   3ec94:	ldrh	r0, [r0]
   3ec98:	cmp	r0, #0
   3ec9c:	ldrne	r2, [r1]
   3eca0:	addsne	r8, r2, r0
   3eca4:	bne	3ecb0 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   3eca8:	sub	sp, fp, #28
   3ecac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ecb0:	ldr	r0, [r1, #16]
   3ecb4:	ldr	r2, [fp, #8]
   3ecb8:	add	r7, r0, #1
   3ecbc:	cmp	r0, #0
   3ecc0:	str	r7, [r1, #16]
   3ecc4:	ldrne	r0, [r4, #20]
   3ecc8:	addne	r1, r0, #1
   3eccc:	strne	r1, [r4, #20]
   3ecd0:	movne	r1, #44	; 0x2c
   3ecd4:	strbne	r1, [r0]
   3ecd8:	mov	r1, r3
   3ecdc:	ldr	r0, [r8]
   3ece0:	ldr	r7, [r8, r0]!
   3ece4:	mov	r0, r4
   3ece8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3ecec:	ldr	r1, [r4, #32]
   3ecf0:	ldr	r0, [r4, #20]
   3ecf4:	cmp	r7, #0
   3ecf8:	add	r1, r1, #1
   3ecfc:	str	r1, [r4, #32]
   3ed00:	add	r1, r0, #1
   3ed04:	str	r1, [r4, #20]
   3ed08:	mov	r1, #91	; 0x5b
   3ed0c:	strb	r1, [r0]
   3ed10:	beq	3ef7c <flatcc_json_printer_int64_vector_field@@Base+0x314>
   3ed14:	ldrb	r0, [r4, #25]
   3ed18:	ldr	r2, [r4, #20]
   3ed1c:	cmp	r0, #0
   3ed20:	beq	3eddc <flatcc_json_printer_int64_vector_field@@Base+0x174>
   3ed24:	add	r0, r2, #1
   3ed28:	str	r0, [r4, #20]
   3ed2c:	mov	r0, #10
   3ed30:	strb	r0, [r2]
   3ed34:	ldr	r0, [r4, #20]
   3ed38:	ldrb	r2, [r4, #25]
   3ed3c:	ldr	r3, [r4, #32]
   3ed40:	ldr	r1, [r4, #16]
   3ed44:	mla	r6, r3, r2, r0
   3ed48:	mul	r5, r3, r2
   3ed4c:	cmp	r6, r1
   3ed50:	bls	3edc0 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   3ed54:	cmp	r0, r1
   3ed58:	bcc	3ed74 <flatcc_json_printer_int64_vector_field@@Base+0x10c>
   3ed5c:	ldr	r2, [r4, #44]	; 0x2c
   3ed60:	mov	r0, r4
   3ed64:	mov	r1, #0
   3ed68:	blx	r2
   3ed6c:	ldr	r1, [r4, #16]
   3ed70:	ldr	r0, [r4, #20]
   3ed74:	sub	r6, r1, r0
   3ed78:	cmp	r6, r5
   3ed7c:	bcs	3edc0 <flatcc_json_printer_int64_vector_field@@Base+0x158>
   3ed80:	mov	r1, #32
   3ed84:	mov	r2, r6
   3ed88:	bl	14ee8 <memset@plt>
   3ed8c:	ldr	r0, [r4, #20]
   3ed90:	ldr	r2, [r4, #44]	; 0x2c
   3ed94:	mov	r1, #0
   3ed98:	add	r0, r0, r6
   3ed9c:	str	r0, [r4, #20]
   3eda0:	mov	r0, r4
   3eda4:	blx	r2
   3eda8:	ldr	r1, [r4, #16]
   3edac:	ldr	r0, [r4, #20]
   3edb0:	sub	r5, r5, r6
   3edb4:	sub	r6, r1, r0
   3edb8:	cmp	r5, r6
   3edbc:	bhi	3ed80 <flatcc_json_printer_int64_vector_field@@Base+0x118>
   3edc0:	mov	r1, #32
   3edc4:	mov	r2, r5
   3edc8:	bl	14ee8 <memset@plt>
   3edcc:	ldr	r0, [r4, #20]
   3edd0:	add	r2, r0, r5
   3edd4:	str	r2, [r4, #20]
   3edd8:	b	3edfc <flatcc_json_printer_int64_vector_field@@Base+0x194>
   3eddc:	ldr	r0, [r4, #16]
   3ede0:	cmp	r2, r0
   3ede4:	bcc	3edfc <flatcc_json_printer_int64_vector_field@@Base+0x194>
   3ede8:	ldr	r2, [r4, #44]	; 0x2c
   3edec:	mov	r0, r4
   3edf0:	mov	r1, #0
   3edf4:	blx	r2
   3edf8:	ldr	r2, [r4, #20]
   3edfc:	ldrd	r0, [r8, #4]
   3ee00:	lsr	r5, r1, #31
   3ee04:	cmn	r1, #1
   3ee08:	bgt	3ee1c <flatcc_json_printer_int64_vector_field@@Base+0x1b4>
   3ee0c:	mov	r3, #45	; 0x2d
   3ee10:	rsbs	r0, r0, #0
   3ee14:	strb	r3, [r2], #1
   3ee18:	rsc	r1, r1, #0
   3ee1c:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3ee20:	ldr	r1, [r4, #20]
   3ee24:	add	r0, r0, r5
   3ee28:	subs	r9, r7, #1
   3ee2c:	add	r0, r1, r0
   3ee30:	str	r0, [r4, #20]
   3ee34:	beq	3ef7c <flatcc_json_printer_int64_vector_field@@Base+0x314>
   3ee38:	ldr	r0, [r4, #20]
   3ee3c:	add	r7, r8, #12
   3ee40:	mov	r8, #44	; 0x2c
   3ee44:	mov	sl, #10
   3ee48:	add	r1, r0, #1
   3ee4c:	str	r1, [r4, #20]
   3ee50:	strb	r8, [r0]
   3ee54:	ldrb	r0, [r4, #25]
   3ee58:	ldr	r2, [r4, #20]
   3ee5c:	cmp	r0, #0
   3ee60:	beq	3ef18 <flatcc_json_printer_int64_vector_field@@Base+0x2b0>
   3ee64:	add	r0, r2, #1
   3ee68:	str	r0, [r4, #20]
   3ee6c:	strb	sl, [r2]
   3ee70:	ldr	r0, [r4, #20]
   3ee74:	ldrb	r2, [r4, #25]
   3ee78:	ldr	r3, [r4, #32]
   3ee7c:	ldr	r1, [r4, #16]
   3ee80:	mla	r6, r3, r2, r0
   3ee84:	mul	r5, r3, r2
   3ee88:	cmp	r6, r1
   3ee8c:	bls	3eefc <flatcc_json_printer_int64_vector_field@@Base+0x294>
   3ee90:	cmp	r0, r1
   3ee94:	bcc	3eeb0 <flatcc_json_printer_int64_vector_field@@Base+0x248>
   3ee98:	ldr	r2, [r4, #44]	; 0x2c
   3ee9c:	mov	r0, r4
   3eea0:	mov	r1, #0
   3eea4:	blx	r2
   3eea8:	ldr	r1, [r4, #16]
   3eeac:	ldr	r0, [r4, #20]
   3eeb0:	sub	r6, r1, r0
   3eeb4:	cmp	r6, r5
   3eeb8:	bcs	3eefc <flatcc_json_printer_int64_vector_field@@Base+0x294>
   3eebc:	mov	r1, #32
   3eec0:	mov	r2, r6
   3eec4:	bl	14ee8 <memset@plt>
   3eec8:	ldr	r0, [r4, #20]
   3eecc:	ldr	r2, [r4, #44]	; 0x2c
   3eed0:	mov	r1, #0
   3eed4:	add	r0, r0, r6
   3eed8:	str	r0, [r4, #20]
   3eedc:	mov	r0, r4
   3eee0:	blx	r2
   3eee4:	ldr	r1, [r4, #16]
   3eee8:	ldr	r0, [r4, #20]
   3eeec:	sub	r5, r5, r6
   3eef0:	sub	r6, r1, r0
   3eef4:	cmp	r5, r6
   3eef8:	bhi	3eebc <flatcc_json_printer_int64_vector_field@@Base+0x254>
   3eefc:	mov	r1, #32
   3ef00:	mov	r2, r5
   3ef04:	bl	14ee8 <memset@plt>
   3ef08:	ldr	r0, [r4, #20]
   3ef0c:	add	r2, r0, r5
   3ef10:	str	r2, [r4, #20]
   3ef14:	b	3ef38 <flatcc_json_printer_int64_vector_field@@Base+0x2d0>
   3ef18:	ldr	r0, [r4, #16]
   3ef1c:	cmp	r2, r0
   3ef20:	bcc	3ef38 <flatcc_json_printer_int64_vector_field@@Base+0x2d0>
   3ef24:	ldr	r2, [r4, #44]	; 0x2c
   3ef28:	mov	r0, r4
   3ef2c:	mov	r1, #0
   3ef30:	blx	r2
   3ef34:	ldr	r2, [r4, #20]
   3ef38:	ldrd	r0, [r7]
   3ef3c:	sub	r9, r9, #1
   3ef40:	lsr	r5, r1, #31
   3ef44:	cmn	r1, #1
   3ef48:	bgt	3ef5c <flatcc_json_printer_int64_vector_field@@Base+0x2f4>
   3ef4c:	mov	r3, #45	; 0x2d
   3ef50:	rsbs	r0, r0, #0
   3ef54:	strb	r3, [r2], #1
   3ef58:	rsc	r1, r1, #0
   3ef5c:	bl	39b48 <flatcc_json_printer_uint64@@Base+0x30>
   3ef60:	ldr	r1, [r4, #20]
   3ef64:	add	r0, r0, r5
   3ef68:	add	r7, r7, #8
   3ef6c:	cmp	r9, #0
   3ef70:	add	r0, r1, r0
   3ef74:	str	r0, [r4, #20]
   3ef78:	bne	3ee48 <flatcc_json_printer_int64_vector_field@@Base+0x1e0>
   3ef7c:	ldrb	r1, [r4, #25]
   3ef80:	ldr	r0, [r4, #20]
   3ef84:	cmp	r1, #0
   3ef88:	beq	3f048 <flatcc_json_printer_int64_vector_field@@Base+0x3e0>
   3ef8c:	add	r1, r0, #1
   3ef90:	str	r1, [r4, #20]
   3ef94:	mov	r1, #10
   3ef98:	strb	r1, [r0]
   3ef9c:	ldr	r0, [r4, #32]
   3efa0:	sub	r2, r0, #1
   3efa4:	str	r2, [r4, #32]
   3efa8:	ldrb	r3, [r4, #25]
   3efac:	ldr	r0, [r4, #20]
   3efb0:	ldr	r1, [r4, #16]
   3efb4:	mla	r7, r2, r3, r0
   3efb8:	mul	r5, r2, r3
   3efbc:	cmp	r7, r1
   3efc0:	bls	3f030 <flatcc_json_printer_int64_vector_field@@Base+0x3c8>
   3efc4:	cmp	r0, r1
   3efc8:	bcc	3efe4 <flatcc_json_printer_int64_vector_field@@Base+0x37c>
   3efcc:	ldr	r2, [r4, #44]	; 0x2c
   3efd0:	mov	r0, r4
   3efd4:	mov	r1, #0
   3efd8:	blx	r2
   3efdc:	ldr	r1, [r4, #16]
   3efe0:	ldr	r0, [r4, #20]
   3efe4:	sub	r6, r1, r0
   3efe8:	cmp	r6, r5
   3efec:	bcs	3f030 <flatcc_json_printer_int64_vector_field@@Base+0x3c8>
   3eff0:	mov	r1, #32
   3eff4:	mov	r2, r6
   3eff8:	bl	14ee8 <memset@plt>
   3effc:	ldr	r0, [r4, #20]
   3f000:	ldr	r2, [r4, #44]	; 0x2c
   3f004:	mov	r1, #0
   3f008:	add	r0, r0, r6
   3f00c:	str	r0, [r4, #20]
   3f010:	mov	r0, r4
   3f014:	blx	r2
   3f018:	ldr	r1, [r4, #16]
   3f01c:	ldr	r0, [r4, #20]
   3f020:	sub	r5, r5, r6
   3f024:	sub	r6, r1, r0
   3f028:	cmp	r5, r6
   3f02c:	bhi	3eff0 <flatcc_json_printer_int64_vector_field@@Base+0x388>
   3f030:	mov	r1, #32
   3f034:	mov	r2, r5
   3f038:	bl	14ee8 <memset@plt>
   3f03c:	ldr	r0, [r4, #20]
   3f040:	add	r0, r0, r5
   3f044:	str	r0, [r4, #20]
   3f048:	add	r1, r0, #1
   3f04c:	str	r1, [r4, #20]
   3f050:	mov	r1, #93	; 0x5d
   3f054:	strb	r1, [r0]
   3f058:	sub	sp, fp, #28
   3f05c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f060 <flatcc_json_printer_bool_vector_field@@Base>:
   3f060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f064:	add	fp, sp, #28
   3f068:	sub	sp, sp, #4
   3f06c:	mov	r4, r0
   3f070:	mov	r0, #4
   3f074:	add	r0, r0, r2, lsl #1
   3f078:	ldr	r2, [r1, #8]
   3f07c:	cmp	r0, r2
   3f080:	bge	3f0a0 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   3f084:	ldr	r2, [r1, #4]
   3f088:	add	r0, r2, r0
   3f08c:	ldrh	r0, [r0]
   3f090:	cmp	r0, #0
   3f094:	ldrne	r2, [r1]
   3f098:	addsne	r8, r2, r0
   3f09c:	bne	3f0a8 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   3f0a0:	sub	sp, fp, #28
   3f0a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f0a8:	ldr	r0, [r1, #16]
   3f0ac:	ldr	r2, [fp, #8]
   3f0b0:	add	r7, r0, #1
   3f0b4:	cmp	r0, #0
   3f0b8:	str	r7, [r1, #16]
   3f0bc:	ldrne	r0, [r4, #20]
   3f0c0:	addne	r1, r0, #1
   3f0c4:	strne	r1, [r4, #20]
   3f0c8:	movne	r1, #44	; 0x2c
   3f0cc:	strbne	r1, [r0]
   3f0d0:	mov	r1, r3
   3f0d4:	ldr	r0, [r8]
   3f0d8:	ldr	r7, [r8, r0]!
   3f0dc:	mov	r0, r4
   3f0e0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3f0e4:	ldr	r1, [r4, #32]
   3f0e8:	ldr	r0, [r4, #20]
   3f0ec:	cmp	r7, #0
   3f0f0:	add	r1, r1, #1
   3f0f4:	str	r1, [r4, #32]
   3f0f8:	add	r1, r0, #1
   3f0fc:	str	r1, [r4, #20]
   3f100:	mov	r1, #91	; 0x5b
   3f104:	strb	r1, [r0]
   3f108:	beq	3f3a4 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   3f10c:	ldrb	r1, [r4, #25]
   3f110:	ldr	r0, [r4, #20]
   3f114:	cmp	r1, #0
   3f118:	beq	3f1d4 <flatcc_json_printer_bool_vector_field@@Base+0x174>
   3f11c:	add	r1, r0, #1
   3f120:	str	r1, [r4, #20]
   3f124:	mov	r1, #10
   3f128:	strb	r1, [r0]
   3f12c:	ldr	r0, [r4, #20]
   3f130:	ldrb	r2, [r4, #25]
   3f134:	ldr	r3, [r4, #32]
   3f138:	ldr	r1, [r4, #16]
   3f13c:	mla	r6, r3, r2, r0
   3f140:	mul	r5, r3, r2
   3f144:	cmp	r6, r1
   3f148:	bls	3f1b8 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   3f14c:	cmp	r0, r1
   3f150:	bcc	3f16c <flatcc_json_printer_bool_vector_field@@Base+0x10c>
   3f154:	ldr	r2, [r4, #44]	; 0x2c
   3f158:	mov	r0, r4
   3f15c:	mov	r1, #0
   3f160:	blx	r2
   3f164:	ldr	r1, [r4, #16]
   3f168:	ldr	r0, [r4, #20]
   3f16c:	sub	r6, r1, r0
   3f170:	cmp	r6, r5
   3f174:	bcs	3f1b8 <flatcc_json_printer_bool_vector_field@@Base+0x158>
   3f178:	mov	r1, #32
   3f17c:	mov	r2, r6
   3f180:	bl	14ee8 <memset@plt>
   3f184:	ldr	r0, [r4, #20]
   3f188:	ldr	r2, [r4, #44]	; 0x2c
   3f18c:	mov	r1, #0
   3f190:	add	r0, r0, r6
   3f194:	str	r0, [r4, #20]
   3f198:	mov	r0, r4
   3f19c:	blx	r2
   3f1a0:	ldr	r1, [r4, #16]
   3f1a4:	ldr	r0, [r4, #20]
   3f1a8:	sub	r5, r5, r6
   3f1ac:	sub	r6, r1, r0
   3f1b0:	cmp	r5, r6
   3f1b4:	bhi	3f178 <flatcc_json_printer_bool_vector_field@@Base+0x118>
   3f1b8:	mov	r1, #32
   3f1bc:	mov	r2, r5
   3f1c0:	bl	14ee8 <memset@plt>
   3f1c4:	ldr	r0, [r4, #20]
   3f1c8:	add	r0, r0, r5
   3f1cc:	str	r0, [r4, #20]
   3f1d0:	b	3f1f4 <flatcc_json_printer_bool_vector_field@@Base+0x194>
   3f1d4:	ldr	r1, [r4, #16]
   3f1d8:	cmp	r0, r1
   3f1dc:	bcc	3f1f4 <flatcc_json_printer_bool_vector_field@@Base+0x194>
   3f1e0:	ldr	r2, [r4, #44]	; 0x2c
   3f1e4:	mov	r0, r4
   3f1e8:	mov	r1, #0
   3f1ec:	blx	r2
   3f1f0:	ldr	r0, [r4, #20]
   3f1f4:	ldrb	r1, [r8, #4]
   3f1f8:	cmp	r1, #0
   3f1fc:	beq	3f21c <flatcc_json_printer_bool_vector_field@@Base+0x1bc>
   3f200:	mov	r1, #0
   3f204:	strb	r1, [r0, #4]
   3f208:	movw	r1, #29300	; 0x7274
   3f20c:	movt	r1, #25973	; 0x6575
   3f210:	str	r1, [r0]
   3f214:	mov	r0, #4
   3f218:	b	3f234 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   3f21c:	mov	r1, #101	; 0x65
   3f220:	strh	r1, [r0, #4]
   3f224:	movw	r1, #24934	; 0x6166
   3f228:	movt	r1, #29548	; 0x736c
   3f22c:	str	r1, [r0]
   3f230:	mov	r0, #5
   3f234:	ldr	r1, [r4, #20]
   3f238:	subs	r9, r7, #1
   3f23c:	add	r0, r1, r0
   3f240:	str	r0, [r4, #20]
   3f244:	beq	3f3a4 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   3f248:	ldr	r0, [r4, #20]
   3f24c:	add	r7, r8, #5
   3f250:	mov	r8, #44	; 0x2c
   3f254:	mov	sl, #10
   3f258:	add	r1, r0, #1
   3f25c:	str	r1, [r4, #20]
   3f260:	strb	r8, [r0]
   3f264:	ldrb	r1, [r4, #25]
   3f268:	ldr	r0, [r4, #20]
   3f26c:	cmp	r1, #0
   3f270:	beq	3f328 <flatcc_json_printer_bool_vector_field@@Base+0x2c8>
   3f274:	add	r1, r0, #1
   3f278:	str	r1, [r4, #20]
   3f27c:	strb	sl, [r0]
   3f280:	ldr	r0, [r4, #20]
   3f284:	ldrb	r2, [r4, #25]
   3f288:	ldr	r3, [r4, #32]
   3f28c:	ldr	r1, [r4, #16]
   3f290:	mla	r6, r3, r2, r0
   3f294:	mul	r5, r3, r2
   3f298:	cmp	r6, r1
   3f29c:	bls	3f30c <flatcc_json_printer_bool_vector_field@@Base+0x2ac>
   3f2a0:	cmp	r0, r1
   3f2a4:	bcc	3f2c0 <flatcc_json_printer_bool_vector_field@@Base+0x260>
   3f2a8:	ldr	r2, [r4, #44]	; 0x2c
   3f2ac:	mov	r0, r4
   3f2b0:	mov	r1, #0
   3f2b4:	blx	r2
   3f2b8:	ldr	r1, [r4, #16]
   3f2bc:	ldr	r0, [r4, #20]
   3f2c0:	sub	r6, r1, r0
   3f2c4:	cmp	r6, r5
   3f2c8:	bcs	3f30c <flatcc_json_printer_bool_vector_field@@Base+0x2ac>
   3f2cc:	mov	r1, #32
   3f2d0:	mov	r2, r6
   3f2d4:	bl	14ee8 <memset@plt>
   3f2d8:	ldr	r0, [r4, #20]
   3f2dc:	ldr	r2, [r4, #44]	; 0x2c
   3f2e0:	mov	r1, #0
   3f2e4:	add	r0, r0, r6
   3f2e8:	str	r0, [r4, #20]
   3f2ec:	mov	r0, r4
   3f2f0:	blx	r2
   3f2f4:	ldr	r1, [r4, #16]
   3f2f8:	ldr	r0, [r4, #20]
   3f2fc:	sub	r5, r5, r6
   3f300:	sub	r6, r1, r0
   3f304:	cmp	r5, r6
   3f308:	bhi	3f2cc <flatcc_json_printer_bool_vector_field@@Base+0x26c>
   3f30c:	mov	r1, #32
   3f310:	mov	r2, r5
   3f314:	bl	14ee8 <memset@plt>
   3f318:	ldr	r0, [r4, #20]
   3f31c:	add	r0, r0, r5
   3f320:	str	r0, [r4, #20]
   3f324:	b	3f348 <flatcc_json_printer_bool_vector_field@@Base+0x2e8>
   3f328:	ldr	r1, [r4, #16]
   3f32c:	cmp	r0, r1
   3f330:	bcc	3f348 <flatcc_json_printer_bool_vector_field@@Base+0x2e8>
   3f334:	ldr	r2, [r4, #44]	; 0x2c
   3f338:	mov	r0, r4
   3f33c:	mov	r1, #0
   3f340:	blx	r2
   3f344:	ldr	r0, [r4, #20]
   3f348:	ldrb	r1, [r7]
   3f34c:	sub	r9, r9, #1
   3f350:	cmp	r1, #0
   3f354:	beq	3f374 <flatcc_json_printer_bool_vector_field@@Base+0x314>
   3f358:	mov	r1, #0
   3f35c:	strb	r1, [r0, #4]
   3f360:	movw	r1, #29300	; 0x7274
   3f364:	movt	r1, #25973	; 0x6575
   3f368:	str	r1, [r0]
   3f36c:	mov	r0, #4
   3f370:	b	3f38c <flatcc_json_printer_bool_vector_field@@Base+0x32c>
   3f374:	mov	r1, #101	; 0x65
   3f378:	strh	r1, [r0, #4]
   3f37c:	movw	r1, #24934	; 0x6166
   3f380:	movt	r1, #29548	; 0x736c
   3f384:	str	r1, [r0]
   3f388:	mov	r0, #5
   3f38c:	ldr	r1, [r4, #20]
   3f390:	add	r7, r7, #1
   3f394:	cmp	r9, #0
   3f398:	add	r0, r1, r0
   3f39c:	str	r0, [r4, #20]
   3f3a0:	bne	3f258 <flatcc_json_printer_bool_vector_field@@Base+0x1f8>
   3f3a4:	ldrb	r1, [r4, #25]
   3f3a8:	ldr	r0, [r4, #20]
   3f3ac:	cmp	r1, #0
   3f3b0:	beq	3f470 <flatcc_json_printer_bool_vector_field@@Base+0x410>
   3f3b4:	add	r1, r0, #1
   3f3b8:	str	r1, [r4, #20]
   3f3bc:	mov	r1, #10
   3f3c0:	strb	r1, [r0]
   3f3c4:	ldr	r0, [r4, #32]
   3f3c8:	sub	r2, r0, #1
   3f3cc:	str	r2, [r4, #32]
   3f3d0:	ldrb	r3, [r4, #25]
   3f3d4:	ldr	r0, [r4, #20]
   3f3d8:	ldr	r1, [r4, #16]
   3f3dc:	mla	r7, r2, r3, r0
   3f3e0:	mul	r5, r2, r3
   3f3e4:	cmp	r7, r1
   3f3e8:	bls	3f458 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   3f3ec:	cmp	r0, r1
   3f3f0:	bcc	3f40c <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   3f3f4:	ldr	r2, [r4, #44]	; 0x2c
   3f3f8:	mov	r0, r4
   3f3fc:	mov	r1, #0
   3f400:	blx	r2
   3f404:	ldr	r1, [r4, #16]
   3f408:	ldr	r0, [r4, #20]
   3f40c:	sub	r6, r1, r0
   3f410:	cmp	r6, r5
   3f414:	bcs	3f458 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   3f418:	mov	r1, #32
   3f41c:	mov	r2, r6
   3f420:	bl	14ee8 <memset@plt>
   3f424:	ldr	r0, [r4, #20]
   3f428:	ldr	r2, [r4, #44]	; 0x2c
   3f42c:	mov	r1, #0
   3f430:	add	r0, r0, r6
   3f434:	str	r0, [r4, #20]
   3f438:	mov	r0, r4
   3f43c:	blx	r2
   3f440:	ldr	r1, [r4, #16]
   3f444:	ldr	r0, [r4, #20]
   3f448:	sub	r5, r5, r6
   3f44c:	sub	r6, r1, r0
   3f450:	cmp	r5, r6
   3f454:	bhi	3f418 <flatcc_json_printer_bool_vector_field@@Base+0x3b8>
   3f458:	mov	r1, #32
   3f45c:	mov	r2, r5
   3f460:	bl	14ee8 <memset@plt>
   3f464:	ldr	r0, [r4, #20]
   3f468:	add	r0, r0, r5
   3f46c:	str	r0, [r4, #20]
   3f470:	add	r1, r0, #1
   3f474:	str	r1, [r4, #20]
   3f478:	mov	r1, #93	; 0x5d
   3f47c:	strb	r1, [r0]
   3f480:	sub	sp, fp, #28
   3f484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f488 <flatcc_json_printer_float_vector_field@@Base>:
   3f488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f48c:	add	fp, sp, #28
   3f490:	sub	sp, sp, #4
   3f494:	mov	r4, r0
   3f498:	mov	r0, #4
   3f49c:	add	r0, r0, r2, lsl #1
   3f4a0:	ldr	r2, [r1, #8]
   3f4a4:	cmp	r0, r2
   3f4a8:	bge	3f4c8 <flatcc_json_printer_float_vector_field@@Base+0x40>
   3f4ac:	ldr	r2, [r1, #4]
   3f4b0:	add	r0, r2, r0
   3f4b4:	ldrh	r0, [r0]
   3f4b8:	cmp	r0, #0
   3f4bc:	ldrne	r2, [r1]
   3f4c0:	addsne	r8, r2, r0
   3f4c4:	bne	3f4d0 <flatcc_json_printer_float_vector_field@@Base+0x48>
   3f4c8:	sub	sp, fp, #28
   3f4cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f4d0:	ldr	r0, [r1, #16]
   3f4d4:	ldr	r2, [fp, #8]
   3f4d8:	add	r7, r0, #1
   3f4dc:	cmp	r0, #0
   3f4e0:	str	r7, [r1, #16]
   3f4e4:	ldrne	r0, [r4, #20]
   3f4e8:	addne	r1, r0, #1
   3f4ec:	strne	r1, [r4, #20]
   3f4f0:	movne	r1, #44	; 0x2c
   3f4f4:	strbne	r1, [r0]
   3f4f8:	mov	r1, r3
   3f4fc:	ldr	r0, [r8]
   3f500:	ldr	r7, [r8, r0]!
   3f504:	mov	r0, r4
   3f508:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3f50c:	ldr	r1, [r4, #32]
   3f510:	ldr	r0, [r4, #20]
   3f514:	cmp	r7, #0
   3f518:	add	r1, r1, #1
   3f51c:	str	r1, [r4, #32]
   3f520:	add	r1, r0, #1
   3f524:	str	r1, [r4, #20]
   3f528:	mov	r1, #91	; 0x5b
   3f52c:	strb	r1, [r0]
   3f530:	beq	3f764 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   3f534:	ldrb	r1, [r4, #25]
   3f538:	ldr	r0, [r4, #20]
   3f53c:	cmp	r1, #0
   3f540:	beq	3f5fc <flatcc_json_printer_float_vector_field@@Base+0x174>
   3f544:	add	r1, r0, #1
   3f548:	str	r1, [r4, #20]
   3f54c:	mov	r1, #10
   3f550:	strb	r1, [r0]
   3f554:	ldr	r0, [r4, #20]
   3f558:	ldrb	r2, [r4, #25]
   3f55c:	ldr	r3, [r4, #32]
   3f560:	ldr	r1, [r4, #16]
   3f564:	mla	r6, r3, r2, r0
   3f568:	mul	r5, r3, r2
   3f56c:	cmp	r6, r1
   3f570:	bls	3f5e0 <flatcc_json_printer_float_vector_field@@Base+0x158>
   3f574:	cmp	r0, r1
   3f578:	bcc	3f594 <flatcc_json_printer_float_vector_field@@Base+0x10c>
   3f57c:	ldr	r2, [r4, #44]	; 0x2c
   3f580:	mov	r0, r4
   3f584:	mov	r1, #0
   3f588:	blx	r2
   3f58c:	ldr	r1, [r4, #16]
   3f590:	ldr	r0, [r4, #20]
   3f594:	sub	r6, r1, r0
   3f598:	cmp	r6, r5
   3f59c:	bcs	3f5e0 <flatcc_json_printer_float_vector_field@@Base+0x158>
   3f5a0:	mov	r1, #32
   3f5a4:	mov	r2, r6
   3f5a8:	bl	14ee8 <memset@plt>
   3f5ac:	ldr	r0, [r4, #20]
   3f5b0:	ldr	r2, [r4, #44]	; 0x2c
   3f5b4:	mov	r1, #0
   3f5b8:	add	r0, r0, r6
   3f5bc:	str	r0, [r4, #20]
   3f5c0:	mov	r0, r4
   3f5c4:	blx	r2
   3f5c8:	ldr	r1, [r4, #16]
   3f5cc:	ldr	r0, [r4, #20]
   3f5d0:	sub	r5, r5, r6
   3f5d4:	sub	r6, r1, r0
   3f5d8:	cmp	r5, r6
   3f5dc:	bhi	3f5a0 <flatcc_json_printer_float_vector_field@@Base+0x118>
   3f5e0:	mov	r1, #32
   3f5e4:	mov	r2, r5
   3f5e8:	bl	14ee8 <memset@plt>
   3f5ec:	ldr	r0, [r4, #20]
   3f5f0:	add	r0, r0, r5
   3f5f4:	str	r0, [r4, #20]
   3f5f8:	b	3f61c <flatcc_json_printer_float_vector_field@@Base+0x194>
   3f5fc:	ldr	r1, [r4, #16]
   3f600:	cmp	r0, r1
   3f604:	bcc	3f61c <flatcc_json_printer_float_vector_field@@Base+0x194>
   3f608:	ldr	r2, [r4, #44]	; 0x2c
   3f60c:	mov	r0, r4
   3f610:	mov	r1, #0
   3f614:	blx	r2
   3f618:	ldr	r0, [r4, #20]
   3f61c:	vldr	s0, [r8, #4]
   3f620:	vcvt.f64.f32	d0, s0
   3f624:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f628:	ldr	r1, [r4, #20]
   3f62c:	subs	r9, r7, #1
   3f630:	add	r0, r1, r0
   3f634:	str	r0, [r4, #20]
   3f638:	beq	3f764 <flatcc_json_printer_float_vector_field@@Base+0x2dc>
   3f63c:	ldr	r0, [r4, #20]
   3f640:	add	r7, r8, #8
   3f644:	mov	r8, #44	; 0x2c
   3f648:	mov	sl, #10
   3f64c:	add	r1, r0, #1
   3f650:	sub	r9, r9, #1
   3f654:	str	r1, [r4, #20]
   3f658:	strb	r8, [r0]
   3f65c:	ldrb	r1, [r4, #25]
   3f660:	ldr	r0, [r4, #20]
   3f664:	cmp	r1, #0
   3f668:	beq	3f720 <flatcc_json_printer_float_vector_field@@Base+0x298>
   3f66c:	add	r1, r0, #1
   3f670:	str	r1, [r4, #20]
   3f674:	strb	sl, [r0]
   3f678:	ldr	r0, [r4, #20]
   3f67c:	ldrb	r2, [r4, #25]
   3f680:	ldr	r3, [r4, #32]
   3f684:	ldr	r1, [r4, #16]
   3f688:	mla	r6, r3, r2, r0
   3f68c:	mul	r5, r3, r2
   3f690:	cmp	r6, r1
   3f694:	bls	3f704 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   3f698:	cmp	r0, r1
   3f69c:	bcc	3f6b8 <flatcc_json_printer_float_vector_field@@Base+0x230>
   3f6a0:	ldr	r2, [r4, #44]	; 0x2c
   3f6a4:	mov	r0, r4
   3f6a8:	mov	r1, #0
   3f6ac:	blx	r2
   3f6b0:	ldr	r1, [r4, #16]
   3f6b4:	ldr	r0, [r4, #20]
   3f6b8:	sub	r6, r1, r0
   3f6bc:	cmp	r6, r5
   3f6c0:	bcs	3f704 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   3f6c4:	mov	r1, #32
   3f6c8:	mov	r2, r6
   3f6cc:	bl	14ee8 <memset@plt>
   3f6d0:	ldr	r0, [r4, #20]
   3f6d4:	ldr	r2, [r4, #44]	; 0x2c
   3f6d8:	mov	r1, #0
   3f6dc:	add	r0, r0, r6
   3f6e0:	str	r0, [r4, #20]
   3f6e4:	mov	r0, r4
   3f6e8:	blx	r2
   3f6ec:	ldr	r1, [r4, #16]
   3f6f0:	ldr	r0, [r4, #20]
   3f6f4:	sub	r5, r5, r6
   3f6f8:	sub	r6, r1, r0
   3f6fc:	cmp	r5, r6
   3f700:	bhi	3f6c4 <flatcc_json_printer_float_vector_field@@Base+0x23c>
   3f704:	mov	r1, #32
   3f708:	mov	r2, r5
   3f70c:	bl	14ee8 <memset@plt>
   3f710:	ldr	r0, [r4, #20]
   3f714:	add	r0, r0, r5
   3f718:	str	r0, [r4, #20]
   3f71c:	b	3f740 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   3f720:	ldr	r1, [r4, #16]
   3f724:	cmp	r0, r1
   3f728:	bcc	3f740 <flatcc_json_printer_float_vector_field@@Base+0x2b8>
   3f72c:	ldr	r2, [r4, #44]	; 0x2c
   3f730:	mov	r0, r4
   3f734:	mov	r1, #0
   3f738:	blx	r2
   3f73c:	ldr	r0, [r4, #20]
   3f740:	vldr	s0, [r7]
   3f744:	vcvt.f64.f32	d0, s0
   3f748:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f74c:	ldr	r1, [r4, #20]
   3f750:	add	r7, r7, #4
   3f754:	cmp	r9, #0
   3f758:	add	r0, r1, r0
   3f75c:	str	r0, [r4, #20]
   3f760:	bne	3f64c <flatcc_json_printer_float_vector_field@@Base+0x1c4>
   3f764:	ldrb	r1, [r4, #25]
   3f768:	ldr	r0, [r4, #20]
   3f76c:	cmp	r1, #0
   3f770:	beq	3f830 <flatcc_json_printer_float_vector_field@@Base+0x3a8>
   3f774:	add	r1, r0, #1
   3f778:	str	r1, [r4, #20]
   3f77c:	mov	r1, #10
   3f780:	strb	r1, [r0]
   3f784:	ldr	r0, [r4, #32]
   3f788:	sub	r2, r0, #1
   3f78c:	str	r2, [r4, #32]
   3f790:	ldrb	r3, [r4, #25]
   3f794:	ldr	r0, [r4, #20]
   3f798:	ldr	r1, [r4, #16]
   3f79c:	mla	r7, r2, r3, r0
   3f7a0:	mul	r5, r2, r3
   3f7a4:	cmp	r7, r1
   3f7a8:	bls	3f818 <flatcc_json_printer_float_vector_field@@Base+0x390>
   3f7ac:	cmp	r0, r1
   3f7b0:	bcc	3f7cc <flatcc_json_printer_float_vector_field@@Base+0x344>
   3f7b4:	ldr	r2, [r4, #44]	; 0x2c
   3f7b8:	mov	r0, r4
   3f7bc:	mov	r1, #0
   3f7c0:	blx	r2
   3f7c4:	ldr	r1, [r4, #16]
   3f7c8:	ldr	r0, [r4, #20]
   3f7cc:	sub	r6, r1, r0
   3f7d0:	cmp	r6, r5
   3f7d4:	bcs	3f818 <flatcc_json_printer_float_vector_field@@Base+0x390>
   3f7d8:	mov	r1, #32
   3f7dc:	mov	r2, r6
   3f7e0:	bl	14ee8 <memset@plt>
   3f7e4:	ldr	r0, [r4, #20]
   3f7e8:	ldr	r2, [r4, #44]	; 0x2c
   3f7ec:	mov	r1, #0
   3f7f0:	add	r0, r0, r6
   3f7f4:	str	r0, [r4, #20]
   3f7f8:	mov	r0, r4
   3f7fc:	blx	r2
   3f800:	ldr	r1, [r4, #16]
   3f804:	ldr	r0, [r4, #20]
   3f808:	sub	r5, r5, r6
   3f80c:	sub	r6, r1, r0
   3f810:	cmp	r5, r6
   3f814:	bhi	3f7d8 <flatcc_json_printer_float_vector_field@@Base+0x350>
   3f818:	mov	r1, #32
   3f81c:	mov	r2, r5
   3f820:	bl	14ee8 <memset@plt>
   3f824:	ldr	r0, [r4, #20]
   3f828:	add	r0, r0, r5
   3f82c:	str	r0, [r4, #20]
   3f830:	add	r1, r0, #1
   3f834:	str	r1, [r4, #20]
   3f838:	mov	r1, #93	; 0x5d
   3f83c:	strb	r1, [r0]
   3f840:	sub	sp, fp, #28
   3f844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f848 <flatcc_json_printer_double_vector_field@@Base>:
   3f848:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f84c:	add	fp, sp, #28
   3f850:	sub	sp, sp, #4
   3f854:	mov	r4, r0
   3f858:	mov	r0, #4
   3f85c:	add	r0, r0, r2, lsl #1
   3f860:	ldr	r2, [r1, #8]
   3f864:	cmp	r0, r2
   3f868:	bge	3f888 <flatcc_json_printer_double_vector_field@@Base+0x40>
   3f86c:	ldr	r2, [r1, #4]
   3f870:	add	r0, r2, r0
   3f874:	ldrh	r0, [r0]
   3f878:	cmp	r0, #0
   3f87c:	ldrne	r2, [r1]
   3f880:	addsne	r8, r2, r0
   3f884:	bne	3f890 <flatcc_json_printer_double_vector_field@@Base+0x48>
   3f888:	sub	sp, fp, #28
   3f88c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f890:	ldr	r0, [r1, #16]
   3f894:	ldr	r2, [fp, #8]
   3f898:	add	r7, r0, #1
   3f89c:	cmp	r0, #0
   3f8a0:	str	r7, [r1, #16]
   3f8a4:	ldrne	r0, [r4, #20]
   3f8a8:	addne	r1, r0, #1
   3f8ac:	strne	r1, [r4, #20]
   3f8b0:	movne	r1, #44	; 0x2c
   3f8b4:	strbne	r1, [r0]
   3f8b8:	mov	r1, r3
   3f8bc:	ldr	r0, [r8]
   3f8c0:	ldr	r7, [r8, r0]!
   3f8c4:	mov	r0, r4
   3f8c8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3f8cc:	ldr	r1, [r4, #32]
   3f8d0:	ldr	r0, [r4, #20]
   3f8d4:	cmp	r7, #0
   3f8d8:	add	r1, r1, #1
   3f8dc:	str	r1, [r4, #32]
   3f8e0:	add	r1, r0, #1
   3f8e4:	str	r1, [r4, #20]
   3f8e8:	mov	r1, #91	; 0x5b
   3f8ec:	strb	r1, [r0]
   3f8f0:	beq	3fb1c <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   3f8f4:	ldrb	r1, [r4, #25]
   3f8f8:	ldr	r0, [r4, #20]
   3f8fc:	cmp	r1, #0
   3f900:	beq	3f9bc <flatcc_json_printer_double_vector_field@@Base+0x174>
   3f904:	add	r1, r0, #1
   3f908:	str	r1, [r4, #20]
   3f90c:	mov	r1, #10
   3f910:	strb	r1, [r0]
   3f914:	ldr	r0, [r4, #20]
   3f918:	ldrb	r2, [r4, #25]
   3f91c:	ldr	r3, [r4, #32]
   3f920:	ldr	r1, [r4, #16]
   3f924:	mla	r6, r3, r2, r0
   3f928:	mul	r5, r3, r2
   3f92c:	cmp	r6, r1
   3f930:	bls	3f9a0 <flatcc_json_printer_double_vector_field@@Base+0x158>
   3f934:	cmp	r0, r1
   3f938:	bcc	3f954 <flatcc_json_printer_double_vector_field@@Base+0x10c>
   3f93c:	ldr	r2, [r4, #44]	; 0x2c
   3f940:	mov	r0, r4
   3f944:	mov	r1, #0
   3f948:	blx	r2
   3f94c:	ldr	r1, [r4, #16]
   3f950:	ldr	r0, [r4, #20]
   3f954:	sub	r6, r1, r0
   3f958:	cmp	r6, r5
   3f95c:	bcs	3f9a0 <flatcc_json_printer_double_vector_field@@Base+0x158>
   3f960:	mov	r1, #32
   3f964:	mov	r2, r6
   3f968:	bl	14ee8 <memset@plt>
   3f96c:	ldr	r0, [r4, #20]
   3f970:	ldr	r2, [r4, #44]	; 0x2c
   3f974:	mov	r1, #0
   3f978:	add	r0, r0, r6
   3f97c:	str	r0, [r4, #20]
   3f980:	mov	r0, r4
   3f984:	blx	r2
   3f988:	ldr	r1, [r4, #16]
   3f98c:	ldr	r0, [r4, #20]
   3f990:	sub	r5, r5, r6
   3f994:	sub	r6, r1, r0
   3f998:	cmp	r5, r6
   3f99c:	bhi	3f960 <flatcc_json_printer_double_vector_field@@Base+0x118>
   3f9a0:	mov	r1, #32
   3f9a4:	mov	r2, r5
   3f9a8:	bl	14ee8 <memset@plt>
   3f9ac:	ldr	r0, [r4, #20]
   3f9b0:	add	r0, r0, r5
   3f9b4:	str	r0, [r4, #20]
   3f9b8:	b	3f9dc <flatcc_json_printer_double_vector_field@@Base+0x194>
   3f9bc:	ldr	r1, [r4, #16]
   3f9c0:	cmp	r0, r1
   3f9c4:	bcc	3f9dc <flatcc_json_printer_double_vector_field@@Base+0x194>
   3f9c8:	ldr	r2, [r4, #44]	; 0x2c
   3f9cc:	mov	r0, r4
   3f9d0:	mov	r1, #0
   3f9d4:	blx	r2
   3f9d8:	ldr	r0, [r4, #20]
   3f9dc:	vldr	d0, [r8, #4]
   3f9e0:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f9e4:	ldr	r1, [r4, #20]
   3f9e8:	subs	r9, r7, #1
   3f9ec:	add	r0, r1, r0
   3f9f0:	str	r0, [r4, #20]
   3f9f4:	beq	3fb1c <flatcc_json_printer_double_vector_field@@Base+0x2d4>
   3f9f8:	ldr	r0, [r4, #20]
   3f9fc:	add	r7, r8, #12
   3fa00:	mov	r8, #44	; 0x2c
   3fa04:	mov	sl, #10
   3fa08:	add	r1, r0, #1
   3fa0c:	sub	r9, r9, #1
   3fa10:	str	r1, [r4, #20]
   3fa14:	strb	r8, [r0]
   3fa18:	ldrb	r1, [r4, #25]
   3fa1c:	ldr	r0, [r4, #20]
   3fa20:	cmp	r1, #0
   3fa24:	beq	3fadc <flatcc_json_printer_double_vector_field@@Base+0x294>
   3fa28:	add	r1, r0, #1
   3fa2c:	str	r1, [r4, #20]
   3fa30:	strb	sl, [r0]
   3fa34:	ldr	r0, [r4, #20]
   3fa38:	ldrb	r2, [r4, #25]
   3fa3c:	ldr	r3, [r4, #32]
   3fa40:	ldr	r1, [r4, #16]
   3fa44:	mla	r6, r3, r2, r0
   3fa48:	mul	r5, r3, r2
   3fa4c:	cmp	r6, r1
   3fa50:	bls	3fac0 <flatcc_json_printer_double_vector_field@@Base+0x278>
   3fa54:	cmp	r0, r1
   3fa58:	bcc	3fa74 <flatcc_json_printer_double_vector_field@@Base+0x22c>
   3fa5c:	ldr	r2, [r4, #44]	; 0x2c
   3fa60:	mov	r0, r4
   3fa64:	mov	r1, #0
   3fa68:	blx	r2
   3fa6c:	ldr	r1, [r4, #16]
   3fa70:	ldr	r0, [r4, #20]
   3fa74:	sub	r6, r1, r0
   3fa78:	cmp	r6, r5
   3fa7c:	bcs	3fac0 <flatcc_json_printer_double_vector_field@@Base+0x278>
   3fa80:	mov	r1, #32
   3fa84:	mov	r2, r6
   3fa88:	bl	14ee8 <memset@plt>
   3fa8c:	ldr	r0, [r4, #20]
   3fa90:	ldr	r2, [r4, #44]	; 0x2c
   3fa94:	mov	r1, #0
   3fa98:	add	r0, r0, r6
   3fa9c:	str	r0, [r4, #20]
   3faa0:	mov	r0, r4
   3faa4:	blx	r2
   3faa8:	ldr	r1, [r4, #16]
   3faac:	ldr	r0, [r4, #20]
   3fab0:	sub	r5, r5, r6
   3fab4:	sub	r6, r1, r0
   3fab8:	cmp	r5, r6
   3fabc:	bhi	3fa80 <flatcc_json_printer_double_vector_field@@Base+0x238>
   3fac0:	mov	r1, #32
   3fac4:	mov	r2, r5
   3fac8:	bl	14ee8 <memset@plt>
   3facc:	ldr	r0, [r4, #20]
   3fad0:	add	r0, r0, r5
   3fad4:	str	r0, [r4, #20]
   3fad8:	b	3fafc <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   3fadc:	ldr	r1, [r4, #16]
   3fae0:	cmp	r0, r1
   3fae4:	bcc	3fafc <flatcc_json_printer_double_vector_field@@Base+0x2b4>
   3fae8:	ldr	r2, [r4, #44]	; 0x2c
   3faec:	mov	r0, r4
   3faf0:	mov	r1, #0
   3faf4:	blx	r2
   3faf8:	ldr	r0, [r4, #20]
   3fafc:	vldr	d0, [r7]
   3fb00:	bl	381d8 <flatcc_json_printer_fmt_float@@Base+0x8>
   3fb04:	ldr	r1, [r4, #20]
   3fb08:	add	r7, r7, #8
   3fb0c:	cmp	r9, #0
   3fb10:	add	r0, r1, r0
   3fb14:	str	r0, [r4, #20]
   3fb18:	bne	3fa08 <flatcc_json_printer_double_vector_field@@Base+0x1c0>
   3fb1c:	ldrb	r1, [r4, #25]
   3fb20:	ldr	r0, [r4, #20]
   3fb24:	cmp	r1, #0
   3fb28:	beq	3fbe8 <flatcc_json_printer_double_vector_field@@Base+0x3a0>
   3fb2c:	add	r1, r0, #1
   3fb30:	str	r1, [r4, #20]
   3fb34:	mov	r1, #10
   3fb38:	strb	r1, [r0]
   3fb3c:	ldr	r0, [r4, #32]
   3fb40:	sub	r2, r0, #1
   3fb44:	str	r2, [r4, #32]
   3fb48:	ldrb	r3, [r4, #25]
   3fb4c:	ldr	r0, [r4, #20]
   3fb50:	ldr	r1, [r4, #16]
   3fb54:	mla	r7, r2, r3, r0
   3fb58:	mul	r5, r2, r3
   3fb5c:	cmp	r7, r1
   3fb60:	bls	3fbd0 <flatcc_json_printer_double_vector_field@@Base+0x388>
   3fb64:	cmp	r0, r1
   3fb68:	bcc	3fb84 <flatcc_json_printer_double_vector_field@@Base+0x33c>
   3fb6c:	ldr	r2, [r4, #44]	; 0x2c
   3fb70:	mov	r0, r4
   3fb74:	mov	r1, #0
   3fb78:	blx	r2
   3fb7c:	ldr	r1, [r4, #16]
   3fb80:	ldr	r0, [r4, #20]
   3fb84:	sub	r6, r1, r0
   3fb88:	cmp	r6, r5
   3fb8c:	bcs	3fbd0 <flatcc_json_printer_double_vector_field@@Base+0x388>
   3fb90:	mov	r1, #32
   3fb94:	mov	r2, r6
   3fb98:	bl	14ee8 <memset@plt>
   3fb9c:	ldr	r0, [r4, #20]
   3fba0:	ldr	r2, [r4, #44]	; 0x2c
   3fba4:	mov	r1, #0
   3fba8:	add	r0, r0, r6
   3fbac:	str	r0, [r4, #20]
   3fbb0:	mov	r0, r4
   3fbb4:	blx	r2
   3fbb8:	ldr	r1, [r4, #16]
   3fbbc:	ldr	r0, [r4, #20]
   3fbc0:	sub	r5, r5, r6
   3fbc4:	sub	r6, r1, r0
   3fbc8:	cmp	r5, r6
   3fbcc:	bhi	3fb90 <flatcc_json_printer_double_vector_field@@Base+0x348>
   3fbd0:	mov	r1, #32
   3fbd4:	mov	r2, r5
   3fbd8:	bl	14ee8 <memset@plt>
   3fbdc:	ldr	r0, [r4, #20]
   3fbe0:	add	r0, r0, r5
   3fbe4:	str	r0, [r4, #20]
   3fbe8:	add	r1, r0, #1
   3fbec:	str	r1, [r4, #20]
   3fbf0:	mov	r1, #93	; 0x5d
   3fbf4:	strb	r1, [r0]
   3fbf8:	sub	sp, fp, #28
   3fbfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fc00 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3fc00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fc04:	add	fp, sp, #28
   3fc08:	sub	sp, sp, #4
   3fc0c:	mov	r4, r0
   3fc10:	ldrb	r0, [r0, #27]
   3fc14:	cmp	r0, #0
   3fc18:	beq	3fc2c <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   3fc1c:	mov	r0, r4
   3fc20:	sub	sp, fp, #28
   3fc24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fc28:	b	3ca20 <flatcc_json_printer_utype_vector_field@@Base>
   3fc2c:	mov	r0, #4
   3fc30:	add	r0, r0, r2, lsl #1
   3fc34:	ldr	r2, [r1, #8]
   3fc38:	cmp	r0, r2
   3fc3c:	bge	3fc5c <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   3fc40:	ldr	r2, [r1, #4]
   3fc44:	add	r0, r2, r0
   3fc48:	ldrh	r0, [r0]
   3fc4c:	cmp	r0, #0
   3fc50:	ldrne	r2, [r1]
   3fc54:	addsne	r8, r2, r0
   3fc58:	bne	3fc64 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   3fc5c:	sub	sp, fp, #28
   3fc60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fc64:	ldr	r0, [r1, #16]
   3fc68:	ldr	sl, [fp, #12]
   3fc6c:	ldr	r2, [fp, #8]
   3fc70:	add	r7, r0, #1
   3fc74:	cmp	r0, #0
   3fc78:	str	r7, [r1, #16]
   3fc7c:	ldrne	r0, [r4, #20]
   3fc80:	addne	r1, r0, #1
   3fc84:	strne	r1, [r4, #20]
   3fc88:	movne	r1, #44	; 0x2c
   3fc8c:	strbne	r1, [r0]
   3fc90:	mov	r1, r3
   3fc94:	ldr	r0, [r8]
   3fc98:	ldr	r9, [r8, r0]!
   3fc9c:	mov	r0, r4
   3fca0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   3fca4:	ldr	r1, [r4, #32]
   3fca8:	ldr	r0, [r4, #20]
   3fcac:	cmp	r9, #0
   3fcb0:	add	r1, r1, #1
   3fcb4:	str	r1, [r4, #32]
   3fcb8:	add	r1, r0, #1
   3fcbc:	str	r1, [r4, #20]
   3fcc0:	mov	r1, #91	; 0x5b
   3fcc4:	strb	r1, [r0]
   3fcc8:	beq	3fed8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   3fccc:	ldrb	r1, [r4, #25]
   3fcd0:	ldr	r0, [r4, #20]
   3fcd4:	cmp	r1, #0
   3fcd8:	beq	3fd94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   3fcdc:	add	r1, r0, #1
   3fce0:	str	r1, [r4, #20]
   3fce4:	mov	r1, #10
   3fce8:	strb	r1, [r0]
   3fcec:	ldr	r0, [r4, #20]
   3fcf0:	ldrb	r2, [r4, #25]
   3fcf4:	ldr	r3, [r4, #32]
   3fcf8:	ldr	r1, [r4, #16]
   3fcfc:	mla	r7, r3, r2, r0
   3fd00:	mul	r5, r3, r2
   3fd04:	cmp	r7, r1
   3fd08:	bls	3fd78 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   3fd0c:	cmp	r0, r1
   3fd10:	bcc	3fd2c <flatcc_json_printer_utype_enum_vector_field@@Base+0x12c>
   3fd14:	ldr	r2, [r4, #44]	; 0x2c
   3fd18:	mov	r0, r4
   3fd1c:	mov	r1, #0
   3fd20:	blx	r2
   3fd24:	ldr	r1, [r4, #16]
   3fd28:	ldr	r0, [r4, #20]
   3fd2c:	sub	r6, r1, r0
   3fd30:	cmp	r6, r5
   3fd34:	bcs	3fd78 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
   3fd38:	mov	r1, #32
   3fd3c:	mov	r2, r6
   3fd40:	bl	14ee8 <memset@plt>
   3fd44:	ldr	r0, [r4, #20]
   3fd48:	ldr	r2, [r4, #44]	; 0x2c
   3fd4c:	mov	r1, #0
   3fd50:	add	r0, r0, r6
   3fd54:	str	r0, [r4, #20]
   3fd58:	mov	r0, r4
   3fd5c:	blx	r2
   3fd60:	ldr	r1, [r4, #16]
   3fd64:	ldr	r0, [r4, #20]
   3fd68:	sub	r5, r5, r6
   3fd6c:	sub	r6, r1, r0
   3fd70:	cmp	r5, r6
   3fd74:	bhi	3fd38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x138>
   3fd78:	mov	r1, #32
   3fd7c:	mov	r2, r5
   3fd80:	bl	14ee8 <memset@plt>
   3fd84:	ldr	r0, [r4, #20]
   3fd88:	add	r0, r0, r5
   3fd8c:	str	r0, [r4, #20]
   3fd90:	b	3fdb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   3fd94:	ldr	r1, [r4, #16]
   3fd98:	cmp	r0, r1
   3fd9c:	bcc	3fdb0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b0>
   3fda0:	ldr	r2, [r4, #44]	; 0x2c
   3fda4:	mov	r0, r4
   3fda8:	mov	r1, #0
   3fdac:	blx	r2
   3fdb0:	ldrb	r1, [r8, #4]
   3fdb4:	mov	r0, r4
   3fdb8:	blx	sl
   3fdbc:	subs	r9, r9, #1
   3fdc0:	beq	3fed8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2d8>
   3fdc4:	add	r7, r8, #5
   3fdc8:	mov	r8, #44	; 0x2c
   3fdcc:	ldr	r0, [r4, #20]
   3fdd0:	sub	r9, r9, #1
   3fdd4:	add	r1, r0, #1
   3fdd8:	str	r1, [r4, #20]
   3fddc:	strb	r8, [r0]
   3fde0:	ldrb	r1, [r4, #25]
   3fde4:	ldr	r0, [r4, #20]
   3fde8:	cmp	r1, #0
   3fdec:	beq	3fea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2a8>
   3fdf0:	add	r1, r0, #1
   3fdf4:	str	r1, [r4, #20]
   3fdf8:	mov	r1, #10
   3fdfc:	strb	r1, [r0]
   3fe00:	ldr	r0, [r4, #20]
   3fe04:	ldrb	r2, [r4, #25]
   3fe08:	ldr	r3, [r4, #32]
   3fe0c:	ldr	r1, [r4, #16]
   3fe10:	mla	r6, r3, r2, r0
   3fe14:	mul	r5, r3, r2
   3fe18:	cmp	r6, r1
   3fe1c:	bls	3fe8c <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   3fe20:	cmp	r0, r1
   3fe24:	bcc	3fe40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x240>
   3fe28:	ldr	r2, [r4, #44]	; 0x2c
   3fe2c:	mov	r0, r4
   3fe30:	mov	r1, #0
   3fe34:	blx	r2
   3fe38:	ldr	r1, [r4, #16]
   3fe3c:	ldr	r0, [r4, #20]
   3fe40:	sub	r6, r1, r0
   3fe44:	cmp	r6, r5
   3fe48:	bcs	3fe8c <flatcc_json_printer_utype_enum_vector_field@@Base+0x28c>
   3fe4c:	mov	r1, #32
   3fe50:	mov	r2, r6
   3fe54:	bl	14ee8 <memset@plt>
   3fe58:	ldr	r0, [r4, #20]
   3fe5c:	ldr	r2, [r4, #44]	; 0x2c
   3fe60:	mov	r1, #0
   3fe64:	add	r0, r0, r6
   3fe68:	str	r0, [r4, #20]
   3fe6c:	mov	r0, r4
   3fe70:	blx	r2
   3fe74:	ldr	r1, [r4, #16]
   3fe78:	ldr	r0, [r4, #20]
   3fe7c:	sub	r5, r5, r6
   3fe80:	sub	r6, r1, r0
   3fe84:	cmp	r5, r6
   3fe88:	bhi	3fe4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x24c>
   3fe8c:	mov	r1, #32
   3fe90:	mov	r2, r5
   3fe94:	bl	14ee8 <memset@plt>
   3fe98:	ldr	r0, [r4, #20]
   3fe9c:	add	r0, r0, r5
   3fea0:	str	r0, [r4, #20]
   3fea4:	b	3fec4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   3fea8:	ldr	r1, [r4, #16]
   3feac:	cmp	r0, r1
   3feb0:	bcc	3fec4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   3feb4:	ldr	r2, [r4, #44]	; 0x2c
   3feb8:	mov	r0, r4
   3febc:	mov	r1, #0
   3fec0:	blx	r2
   3fec4:	ldrb	r1, [r7], #1
   3fec8:	mov	r0, r4
   3fecc:	blx	sl
   3fed0:	cmp	r9, #0
   3fed4:	bne	3fdcc <flatcc_json_printer_utype_enum_vector_field@@Base+0x1cc>
   3fed8:	ldrb	r1, [r4, #25]
   3fedc:	ldr	r0, [r4, #20]
   3fee0:	cmp	r1, #0
   3fee4:	beq	3ffa4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3a4>
   3fee8:	add	r1, r0, #1
   3feec:	str	r1, [r4, #20]
   3fef0:	mov	r1, #10
   3fef4:	strb	r1, [r0]
   3fef8:	ldr	r0, [r4, #32]
   3fefc:	sub	r2, r0, #1
   3ff00:	str	r2, [r4, #32]
   3ff04:	ldrb	r3, [r4, #25]
   3ff08:	ldr	r0, [r4, #20]
   3ff0c:	ldr	r1, [r4, #16]
   3ff10:	mla	r7, r2, r3, r0
   3ff14:	mul	r5, r2, r3
   3ff18:	cmp	r7, r1
   3ff1c:	bls	3ff8c <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   3ff20:	cmp	r0, r1
   3ff24:	bcc	3ff40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x340>
   3ff28:	ldr	r2, [r4, #44]	; 0x2c
   3ff2c:	mov	r0, r4
   3ff30:	mov	r1, #0
   3ff34:	blx	r2
   3ff38:	ldr	r1, [r4, #16]
   3ff3c:	ldr	r0, [r4, #20]
   3ff40:	sub	r6, r1, r0
   3ff44:	cmp	r6, r5
   3ff48:	bcs	3ff8c <flatcc_json_printer_utype_enum_vector_field@@Base+0x38c>
   3ff4c:	mov	r1, #32
   3ff50:	mov	r2, r6
   3ff54:	bl	14ee8 <memset@plt>
   3ff58:	ldr	r0, [r4, #20]
   3ff5c:	ldr	r2, [r4, #44]	; 0x2c
   3ff60:	mov	r1, #0
   3ff64:	add	r0, r0, r6
   3ff68:	str	r0, [r4, #20]
   3ff6c:	mov	r0, r4
   3ff70:	blx	r2
   3ff74:	ldr	r1, [r4, #16]
   3ff78:	ldr	r0, [r4, #20]
   3ff7c:	sub	r5, r5, r6
   3ff80:	sub	r6, r1, r0
   3ff84:	cmp	r5, r6
   3ff88:	bhi	3ff4c <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   3ff8c:	mov	r1, #32
   3ff90:	mov	r2, r5
   3ff94:	bl	14ee8 <memset@plt>
   3ff98:	ldr	r0, [r4, #20]
   3ff9c:	add	r0, r0, r5
   3ffa0:	str	r0, [r4, #20]
   3ffa4:	add	r1, r0, #1
   3ffa8:	str	r1, [r4, #20]
   3ffac:	mov	r1, #93	; 0x5d
   3ffb0:	strb	r1, [r0]
   3ffb4:	sub	sp, fp, #28
   3ffb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ffbc <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   3ffbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ffc0:	add	fp, sp, #28
   3ffc4:	sub	sp, sp, #4
   3ffc8:	mov	r4, r0
   3ffcc:	ldrb	r0, [r0, #27]
   3ffd0:	cmp	r0, #0
   3ffd4:	beq	3ffe8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   3ffd8:	mov	r0, r4
   3ffdc:	sub	sp, fp, #28
   3ffe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ffe4:	b	3cf20 <flatcc_json_printer_uint8_vector_field@@Base>
   3ffe8:	mov	r0, #4
   3ffec:	add	r0, r0, r2, lsl #1
   3fff0:	ldr	r2, [r1, #8]
   3fff4:	cmp	r0, r2
   3fff8:	bge	40018 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   3fffc:	ldr	r2, [r1, #4]
   40000:	add	r0, r2, r0
   40004:	ldrh	r0, [r0]
   40008:	cmp	r0, #0
   4000c:	ldrne	r2, [r1]
   40010:	addsne	r8, r2, r0
   40014:	bne	40020 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   40018:	sub	sp, fp, #28
   4001c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40020:	ldr	r0, [r1, #16]
   40024:	ldr	sl, [fp, #12]
   40028:	ldr	r2, [fp, #8]
   4002c:	add	r7, r0, #1
   40030:	cmp	r0, #0
   40034:	str	r7, [r1, #16]
   40038:	ldrne	r0, [r4, #20]
   4003c:	addne	r1, r0, #1
   40040:	strne	r1, [r4, #20]
   40044:	movne	r1, #44	; 0x2c
   40048:	strbne	r1, [r0]
   4004c:	mov	r1, r3
   40050:	ldr	r0, [r8]
   40054:	ldr	r9, [r8, r0]!
   40058:	mov	r0, r4
   4005c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   40060:	ldr	r1, [r4, #32]
   40064:	ldr	r0, [r4, #20]
   40068:	cmp	r9, #0
   4006c:	add	r1, r1, #1
   40070:	str	r1, [r4, #32]
   40074:	add	r1, r0, #1
   40078:	str	r1, [r4, #20]
   4007c:	mov	r1, #91	; 0x5b
   40080:	strb	r1, [r0]
   40084:	beq	40294 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   40088:	ldrb	r1, [r4, #25]
   4008c:	ldr	r0, [r4, #20]
   40090:	cmp	r1, #0
   40094:	beq	40150 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   40098:	add	r1, r0, #1
   4009c:	str	r1, [r4, #20]
   400a0:	mov	r1, #10
   400a4:	strb	r1, [r0]
   400a8:	ldr	r0, [r4, #20]
   400ac:	ldrb	r2, [r4, #25]
   400b0:	ldr	r3, [r4, #32]
   400b4:	ldr	r1, [r4, #16]
   400b8:	mla	r7, r3, r2, r0
   400bc:	mul	r5, r3, r2
   400c0:	cmp	r7, r1
   400c4:	bls	40134 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   400c8:	cmp	r0, r1
   400cc:	bcc	400e8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x12c>
   400d0:	ldr	r2, [r4, #44]	; 0x2c
   400d4:	mov	r0, r4
   400d8:	mov	r1, #0
   400dc:	blx	r2
   400e0:	ldr	r1, [r4, #16]
   400e4:	ldr	r0, [r4, #20]
   400e8:	sub	r6, r1, r0
   400ec:	cmp	r6, r5
   400f0:	bcs	40134 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
   400f4:	mov	r1, #32
   400f8:	mov	r2, r6
   400fc:	bl	14ee8 <memset@plt>
   40100:	ldr	r0, [r4, #20]
   40104:	ldr	r2, [r4, #44]	; 0x2c
   40108:	mov	r1, #0
   4010c:	add	r0, r0, r6
   40110:	str	r0, [r4, #20]
   40114:	mov	r0, r4
   40118:	blx	r2
   4011c:	ldr	r1, [r4, #16]
   40120:	ldr	r0, [r4, #20]
   40124:	sub	r5, r5, r6
   40128:	sub	r6, r1, r0
   4012c:	cmp	r5, r6
   40130:	bhi	400f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x138>
   40134:	mov	r1, #32
   40138:	mov	r2, r5
   4013c:	bl	14ee8 <memset@plt>
   40140:	ldr	r0, [r4, #20]
   40144:	add	r0, r0, r5
   40148:	str	r0, [r4, #20]
   4014c:	b	4016c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   40150:	ldr	r1, [r4, #16]
   40154:	cmp	r0, r1
   40158:	bcc	4016c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b0>
   4015c:	ldr	r2, [r4, #44]	; 0x2c
   40160:	mov	r0, r4
   40164:	mov	r1, #0
   40168:	blx	r2
   4016c:	ldrb	r1, [r8, #4]
   40170:	mov	r0, r4
   40174:	blx	sl
   40178:	subs	r9, r9, #1
   4017c:	beq	40294 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2d8>
   40180:	add	r7, r8, #5
   40184:	mov	r8, #44	; 0x2c
   40188:	ldr	r0, [r4, #20]
   4018c:	sub	r9, r9, #1
   40190:	add	r1, r0, #1
   40194:	str	r1, [r4, #20]
   40198:	strb	r8, [r0]
   4019c:	ldrb	r1, [r4, #25]
   401a0:	ldr	r0, [r4, #20]
   401a4:	cmp	r1, #0
   401a8:	beq	40264 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2a8>
   401ac:	add	r1, r0, #1
   401b0:	str	r1, [r4, #20]
   401b4:	mov	r1, #10
   401b8:	strb	r1, [r0]
   401bc:	ldr	r0, [r4, #20]
   401c0:	ldrb	r2, [r4, #25]
   401c4:	ldr	r3, [r4, #32]
   401c8:	ldr	r1, [r4, #16]
   401cc:	mla	r6, r3, r2, r0
   401d0:	mul	r5, r3, r2
   401d4:	cmp	r6, r1
   401d8:	bls	40248 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   401dc:	cmp	r0, r1
   401e0:	bcc	401fc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x240>
   401e4:	ldr	r2, [r4, #44]	; 0x2c
   401e8:	mov	r0, r4
   401ec:	mov	r1, #0
   401f0:	blx	r2
   401f4:	ldr	r1, [r4, #16]
   401f8:	ldr	r0, [r4, #20]
   401fc:	sub	r6, r1, r0
   40200:	cmp	r6, r5
   40204:	bcs	40248 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x28c>
   40208:	mov	r1, #32
   4020c:	mov	r2, r6
   40210:	bl	14ee8 <memset@plt>
   40214:	ldr	r0, [r4, #20]
   40218:	ldr	r2, [r4, #44]	; 0x2c
   4021c:	mov	r1, #0
   40220:	add	r0, r0, r6
   40224:	str	r0, [r4, #20]
   40228:	mov	r0, r4
   4022c:	blx	r2
   40230:	ldr	r1, [r4, #16]
   40234:	ldr	r0, [r4, #20]
   40238:	sub	r5, r5, r6
   4023c:	sub	r6, r1, r0
   40240:	cmp	r5, r6
   40244:	bhi	40208 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x24c>
   40248:	mov	r1, #32
   4024c:	mov	r2, r5
   40250:	bl	14ee8 <memset@plt>
   40254:	ldr	r0, [r4, #20]
   40258:	add	r0, r0, r5
   4025c:	str	r0, [r4, #20]
   40260:	b	40280 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40264:	ldr	r1, [r4, #16]
   40268:	cmp	r0, r1
   4026c:	bcc	40280 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   40270:	ldr	r2, [r4, #44]	; 0x2c
   40274:	mov	r0, r4
   40278:	mov	r1, #0
   4027c:	blx	r2
   40280:	ldrb	r1, [r7], #1
   40284:	mov	r0, r4
   40288:	blx	sl
   4028c:	cmp	r9, #0
   40290:	bne	40188 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1cc>
   40294:	ldrb	r1, [r4, #25]
   40298:	ldr	r0, [r4, #20]
   4029c:	cmp	r1, #0
   402a0:	beq	40360 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3a4>
   402a4:	add	r1, r0, #1
   402a8:	str	r1, [r4, #20]
   402ac:	mov	r1, #10
   402b0:	strb	r1, [r0]
   402b4:	ldr	r0, [r4, #32]
   402b8:	sub	r2, r0, #1
   402bc:	str	r2, [r4, #32]
   402c0:	ldrb	r3, [r4, #25]
   402c4:	ldr	r0, [r4, #20]
   402c8:	ldr	r1, [r4, #16]
   402cc:	mla	r7, r2, r3, r0
   402d0:	mul	r5, r2, r3
   402d4:	cmp	r7, r1
   402d8:	bls	40348 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   402dc:	cmp	r0, r1
   402e0:	bcc	402fc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x340>
   402e4:	ldr	r2, [r4, #44]	; 0x2c
   402e8:	mov	r0, r4
   402ec:	mov	r1, #0
   402f0:	blx	r2
   402f4:	ldr	r1, [r4, #16]
   402f8:	ldr	r0, [r4, #20]
   402fc:	sub	r6, r1, r0
   40300:	cmp	r6, r5
   40304:	bcs	40348 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x38c>
   40308:	mov	r1, #32
   4030c:	mov	r2, r6
   40310:	bl	14ee8 <memset@plt>
   40314:	ldr	r0, [r4, #20]
   40318:	ldr	r2, [r4, #44]	; 0x2c
   4031c:	mov	r1, #0
   40320:	add	r0, r0, r6
   40324:	str	r0, [r4, #20]
   40328:	mov	r0, r4
   4032c:	blx	r2
   40330:	ldr	r1, [r4, #16]
   40334:	ldr	r0, [r4, #20]
   40338:	sub	r5, r5, r6
   4033c:	sub	r6, r1, r0
   40340:	cmp	r5, r6
   40344:	bhi	40308 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   40348:	mov	r1, #32
   4034c:	mov	r2, r5
   40350:	bl	14ee8 <memset@plt>
   40354:	ldr	r0, [r4, #20]
   40358:	add	r0, r0, r5
   4035c:	str	r0, [r4, #20]
   40360:	add	r1, r0, #1
   40364:	str	r1, [r4, #20]
   40368:	mov	r1, #93	; 0x5d
   4036c:	strb	r1, [r0]
   40370:	sub	sp, fp, #28
   40374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040378 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   40378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4037c:	add	fp, sp, #28
   40380:	sub	sp, sp, #4
   40384:	mov	r4, r0
   40388:	ldrb	r0, [r0, #27]
   4038c:	cmp	r0, #0
   40390:	beq	403a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   40394:	mov	r0, r4
   40398:	sub	sp, fp, #28
   4039c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   403a0:	b	3d420 <flatcc_json_printer_uint16_vector_field@@Base>
   403a4:	mov	r0, #4
   403a8:	add	r0, r0, r2, lsl #1
   403ac:	ldr	r2, [r1, #8]
   403b0:	cmp	r0, r2
   403b4:	bge	403d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   403b8:	ldr	r2, [r1, #4]
   403bc:	add	r0, r2, r0
   403c0:	ldrh	r0, [r0]
   403c4:	cmp	r0, #0
   403c8:	ldrne	r2, [r1]
   403cc:	addsne	r8, r2, r0
   403d0:	bne	403dc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   403d4:	sub	sp, fp, #28
   403d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   403dc:	ldr	r0, [r1, #16]
   403e0:	ldr	sl, [fp, #12]
   403e4:	ldr	r2, [fp, #8]
   403e8:	add	r7, r0, #1
   403ec:	cmp	r0, #0
   403f0:	str	r7, [r1, #16]
   403f4:	ldrne	r0, [r4, #20]
   403f8:	addne	r1, r0, #1
   403fc:	strne	r1, [r4, #20]
   40400:	movne	r1, #44	; 0x2c
   40404:	strbne	r1, [r0]
   40408:	mov	r1, r3
   4040c:	ldr	r0, [r8]
   40410:	ldr	r9, [r8, r0]!
   40414:	mov	r0, r4
   40418:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   4041c:	ldr	r1, [r4, #32]
   40420:	ldr	r0, [r4, #20]
   40424:	cmp	r9, #0
   40428:	add	r1, r1, #1
   4042c:	str	r1, [r4, #32]
   40430:	add	r1, r0, #1
   40434:	str	r1, [r4, #20]
   40438:	mov	r1, #91	; 0x5b
   4043c:	strb	r1, [r0]
   40440:	beq	40650 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   40444:	ldrb	r1, [r4, #25]
   40448:	ldr	r0, [r4, #20]
   4044c:	cmp	r1, #0
   40450:	beq	4050c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   40454:	add	r1, r0, #1
   40458:	str	r1, [r4, #20]
   4045c:	mov	r1, #10
   40460:	strb	r1, [r0]
   40464:	ldr	r0, [r4, #20]
   40468:	ldrb	r2, [r4, #25]
   4046c:	ldr	r3, [r4, #32]
   40470:	ldr	r1, [r4, #16]
   40474:	mla	r7, r3, r2, r0
   40478:	mul	r5, r3, r2
   4047c:	cmp	r7, r1
   40480:	bls	404f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   40484:	cmp	r0, r1
   40488:	bcc	404a4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x12c>
   4048c:	ldr	r2, [r4, #44]	; 0x2c
   40490:	mov	r0, r4
   40494:	mov	r1, #0
   40498:	blx	r2
   4049c:	ldr	r1, [r4, #16]
   404a0:	ldr	r0, [r4, #20]
   404a4:	sub	r6, r1, r0
   404a8:	cmp	r6, r5
   404ac:	bcs	404f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
   404b0:	mov	r1, #32
   404b4:	mov	r2, r6
   404b8:	bl	14ee8 <memset@plt>
   404bc:	ldr	r0, [r4, #20]
   404c0:	ldr	r2, [r4, #44]	; 0x2c
   404c4:	mov	r1, #0
   404c8:	add	r0, r0, r6
   404cc:	str	r0, [r4, #20]
   404d0:	mov	r0, r4
   404d4:	blx	r2
   404d8:	ldr	r1, [r4, #16]
   404dc:	ldr	r0, [r4, #20]
   404e0:	sub	r5, r5, r6
   404e4:	sub	r6, r1, r0
   404e8:	cmp	r5, r6
   404ec:	bhi	404b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x138>
   404f0:	mov	r1, #32
   404f4:	mov	r2, r5
   404f8:	bl	14ee8 <memset@plt>
   404fc:	ldr	r0, [r4, #20]
   40500:	add	r0, r0, r5
   40504:	str	r0, [r4, #20]
   40508:	b	40528 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   4050c:	ldr	r1, [r4, #16]
   40510:	cmp	r0, r1
   40514:	bcc	40528 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b0>
   40518:	ldr	r2, [r4, #44]	; 0x2c
   4051c:	mov	r0, r4
   40520:	mov	r1, #0
   40524:	blx	r2
   40528:	ldrh	r1, [r8, #4]
   4052c:	mov	r0, r4
   40530:	blx	sl
   40534:	subs	r9, r9, #1
   40538:	beq	40650 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2d8>
   4053c:	add	r7, r8, #6
   40540:	mov	r8, #44	; 0x2c
   40544:	ldr	r0, [r4, #20]
   40548:	sub	r9, r9, #1
   4054c:	add	r1, r0, #1
   40550:	str	r1, [r4, #20]
   40554:	strb	r8, [r0]
   40558:	ldrb	r1, [r4, #25]
   4055c:	ldr	r0, [r4, #20]
   40560:	cmp	r1, #0
   40564:	beq	40620 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2a8>
   40568:	add	r1, r0, #1
   4056c:	str	r1, [r4, #20]
   40570:	mov	r1, #10
   40574:	strb	r1, [r0]
   40578:	ldr	r0, [r4, #20]
   4057c:	ldrb	r2, [r4, #25]
   40580:	ldr	r3, [r4, #32]
   40584:	ldr	r1, [r4, #16]
   40588:	mla	r6, r3, r2, r0
   4058c:	mul	r5, r3, r2
   40590:	cmp	r6, r1
   40594:	bls	40604 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   40598:	cmp	r0, r1
   4059c:	bcc	405b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x240>
   405a0:	ldr	r2, [r4, #44]	; 0x2c
   405a4:	mov	r0, r4
   405a8:	mov	r1, #0
   405ac:	blx	r2
   405b0:	ldr	r1, [r4, #16]
   405b4:	ldr	r0, [r4, #20]
   405b8:	sub	r6, r1, r0
   405bc:	cmp	r6, r5
   405c0:	bcs	40604 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x28c>
   405c4:	mov	r1, #32
   405c8:	mov	r2, r6
   405cc:	bl	14ee8 <memset@plt>
   405d0:	ldr	r0, [r4, #20]
   405d4:	ldr	r2, [r4, #44]	; 0x2c
   405d8:	mov	r1, #0
   405dc:	add	r0, r0, r6
   405e0:	str	r0, [r4, #20]
   405e4:	mov	r0, r4
   405e8:	blx	r2
   405ec:	ldr	r1, [r4, #16]
   405f0:	ldr	r0, [r4, #20]
   405f4:	sub	r5, r5, r6
   405f8:	sub	r6, r1, r0
   405fc:	cmp	r5, r6
   40600:	bhi	405c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x24c>
   40604:	mov	r1, #32
   40608:	mov	r2, r5
   4060c:	bl	14ee8 <memset@plt>
   40610:	ldr	r0, [r4, #20]
   40614:	add	r0, r0, r5
   40618:	str	r0, [r4, #20]
   4061c:	b	4063c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   40620:	ldr	r1, [r4, #16]
   40624:	cmp	r0, r1
   40628:	bcc	4063c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   4062c:	ldr	r2, [r4, #44]	; 0x2c
   40630:	mov	r0, r4
   40634:	mov	r1, #0
   40638:	blx	r2
   4063c:	ldrh	r1, [r7], #2
   40640:	mov	r0, r4
   40644:	blx	sl
   40648:	cmp	r9, #0
   4064c:	bne	40544 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1cc>
   40650:	ldrb	r1, [r4, #25]
   40654:	ldr	r0, [r4, #20]
   40658:	cmp	r1, #0
   4065c:	beq	4071c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3a4>
   40660:	add	r1, r0, #1
   40664:	str	r1, [r4, #20]
   40668:	mov	r1, #10
   4066c:	strb	r1, [r0]
   40670:	ldr	r0, [r4, #32]
   40674:	sub	r2, r0, #1
   40678:	str	r2, [r4, #32]
   4067c:	ldrb	r3, [r4, #25]
   40680:	ldr	r0, [r4, #20]
   40684:	ldr	r1, [r4, #16]
   40688:	mla	r7, r2, r3, r0
   4068c:	mul	r5, r2, r3
   40690:	cmp	r7, r1
   40694:	bls	40704 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   40698:	cmp	r0, r1
   4069c:	bcc	406b8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x340>
   406a0:	ldr	r2, [r4, #44]	; 0x2c
   406a4:	mov	r0, r4
   406a8:	mov	r1, #0
   406ac:	blx	r2
   406b0:	ldr	r1, [r4, #16]
   406b4:	ldr	r0, [r4, #20]
   406b8:	sub	r6, r1, r0
   406bc:	cmp	r6, r5
   406c0:	bcs	40704 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x38c>
   406c4:	mov	r1, #32
   406c8:	mov	r2, r6
   406cc:	bl	14ee8 <memset@plt>
   406d0:	ldr	r0, [r4, #20]
   406d4:	ldr	r2, [r4, #44]	; 0x2c
   406d8:	mov	r1, #0
   406dc:	add	r0, r0, r6
   406e0:	str	r0, [r4, #20]
   406e4:	mov	r0, r4
   406e8:	blx	r2
   406ec:	ldr	r1, [r4, #16]
   406f0:	ldr	r0, [r4, #20]
   406f4:	sub	r5, r5, r6
   406f8:	sub	r6, r1, r0
   406fc:	cmp	r5, r6
   40700:	bhi	406c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   40704:	mov	r1, #32
   40708:	mov	r2, r5
   4070c:	bl	14ee8 <memset@plt>
   40710:	ldr	r0, [r4, #20]
   40714:	add	r0, r0, r5
   40718:	str	r0, [r4, #20]
   4071c:	add	r1, r0, #1
   40720:	str	r1, [r4, #20]
   40724:	mov	r1, #93	; 0x5d
   40728:	strb	r1, [r0]
   4072c:	sub	sp, fp, #28
   40730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040734 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   40734:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40738:	add	fp, sp, #28
   4073c:	sub	sp, sp, #4
   40740:	mov	r4, r0
   40744:	ldrb	r0, [r0, #27]
   40748:	cmp	r0, #0
   4074c:	beq	40760 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   40750:	mov	r0, r4
   40754:	sub	sp, fp, #28
   40758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4075c:	b	3d7d4 <flatcc_json_printer_uint32_vector_field@@Base>
   40760:	mov	r0, #4
   40764:	add	r0, r0, r2, lsl #1
   40768:	ldr	r2, [r1, #8]
   4076c:	cmp	r0, r2
   40770:	bge	40790 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   40774:	ldr	r2, [r1, #4]
   40778:	add	r0, r2, r0
   4077c:	ldrh	r0, [r0]
   40780:	cmp	r0, #0
   40784:	ldrne	r2, [r1]
   40788:	addsne	r8, r2, r0
   4078c:	bne	40798 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   40790:	sub	sp, fp, #28
   40794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40798:	ldr	r0, [r1, #16]
   4079c:	ldr	sl, [fp, #12]
   407a0:	ldr	r2, [fp, #8]
   407a4:	add	r7, r0, #1
   407a8:	cmp	r0, #0
   407ac:	str	r7, [r1, #16]
   407b0:	ldrne	r0, [r4, #20]
   407b4:	addne	r1, r0, #1
   407b8:	strne	r1, [r4, #20]
   407bc:	movne	r1, #44	; 0x2c
   407c0:	strbne	r1, [r0]
   407c4:	mov	r1, r3
   407c8:	ldr	r0, [r8]
   407cc:	ldr	r9, [r8, r0]!
   407d0:	mov	r0, r4
   407d4:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   407d8:	ldr	r1, [r4, #32]
   407dc:	ldr	r0, [r4, #20]
   407e0:	cmp	r9, #0
   407e4:	add	r1, r1, #1
   407e8:	str	r1, [r4, #32]
   407ec:	add	r1, r0, #1
   407f0:	str	r1, [r4, #20]
   407f4:	mov	r1, #91	; 0x5b
   407f8:	strb	r1, [r0]
   407fc:	beq	40a0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   40800:	ldrb	r1, [r4, #25]
   40804:	ldr	r0, [r4, #20]
   40808:	cmp	r1, #0
   4080c:	beq	408c8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x194>
   40810:	add	r1, r0, #1
   40814:	str	r1, [r4, #20]
   40818:	mov	r1, #10
   4081c:	strb	r1, [r0]
   40820:	ldr	r0, [r4, #20]
   40824:	ldrb	r2, [r4, #25]
   40828:	ldr	r3, [r4, #32]
   4082c:	ldr	r1, [r4, #16]
   40830:	mla	r7, r3, r2, r0
   40834:	mul	r5, r3, r2
   40838:	cmp	r7, r1
   4083c:	bls	408ac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   40840:	cmp	r0, r1
   40844:	bcc	40860 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x12c>
   40848:	ldr	r2, [r4, #44]	; 0x2c
   4084c:	mov	r0, r4
   40850:	mov	r1, #0
   40854:	blx	r2
   40858:	ldr	r1, [r4, #16]
   4085c:	ldr	r0, [r4, #20]
   40860:	sub	r6, r1, r0
   40864:	cmp	r6, r5
   40868:	bcs	408ac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
   4086c:	mov	r1, #32
   40870:	mov	r2, r6
   40874:	bl	14ee8 <memset@plt>
   40878:	ldr	r0, [r4, #20]
   4087c:	ldr	r2, [r4, #44]	; 0x2c
   40880:	mov	r1, #0
   40884:	add	r0, r0, r6
   40888:	str	r0, [r4, #20]
   4088c:	mov	r0, r4
   40890:	blx	r2
   40894:	ldr	r1, [r4, #16]
   40898:	ldr	r0, [r4, #20]
   4089c:	sub	r5, r5, r6
   408a0:	sub	r6, r1, r0
   408a4:	cmp	r5, r6
   408a8:	bhi	4086c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x138>
   408ac:	mov	r1, #32
   408b0:	mov	r2, r5
   408b4:	bl	14ee8 <memset@plt>
   408b8:	ldr	r0, [r4, #20]
   408bc:	add	r0, r0, r5
   408c0:	str	r0, [r4, #20]
   408c4:	b	408e4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   408c8:	ldr	r1, [r4, #16]
   408cc:	cmp	r0, r1
   408d0:	bcc	408e4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b0>
   408d4:	ldr	r2, [r4, #44]	; 0x2c
   408d8:	mov	r0, r4
   408dc:	mov	r1, #0
   408e0:	blx	r2
   408e4:	ldr	r1, [r8, #4]
   408e8:	mov	r0, r4
   408ec:	blx	sl
   408f0:	subs	r9, r9, #1
   408f4:	beq	40a0c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2d8>
   408f8:	add	r7, r8, #8
   408fc:	mov	r8, #44	; 0x2c
   40900:	ldr	r0, [r4, #20]
   40904:	sub	r9, r9, #1
   40908:	add	r1, r0, #1
   4090c:	str	r1, [r4, #20]
   40910:	strb	r8, [r0]
   40914:	ldrb	r1, [r4, #25]
   40918:	ldr	r0, [r4, #20]
   4091c:	cmp	r1, #0
   40920:	beq	409dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2a8>
   40924:	add	r1, r0, #1
   40928:	str	r1, [r4, #20]
   4092c:	mov	r1, #10
   40930:	strb	r1, [r0]
   40934:	ldr	r0, [r4, #20]
   40938:	ldrb	r2, [r4, #25]
   4093c:	ldr	r3, [r4, #32]
   40940:	ldr	r1, [r4, #16]
   40944:	mla	r6, r3, r2, r0
   40948:	mul	r5, r3, r2
   4094c:	cmp	r6, r1
   40950:	bls	409c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   40954:	cmp	r0, r1
   40958:	bcc	40974 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x240>
   4095c:	ldr	r2, [r4, #44]	; 0x2c
   40960:	mov	r0, r4
   40964:	mov	r1, #0
   40968:	blx	r2
   4096c:	ldr	r1, [r4, #16]
   40970:	ldr	r0, [r4, #20]
   40974:	sub	r6, r1, r0
   40978:	cmp	r6, r5
   4097c:	bcs	409c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   40980:	mov	r1, #32
   40984:	mov	r2, r6
   40988:	bl	14ee8 <memset@plt>
   4098c:	ldr	r0, [r4, #20]
   40990:	ldr	r2, [r4, #44]	; 0x2c
   40994:	mov	r1, #0
   40998:	add	r0, r0, r6
   4099c:	str	r0, [r4, #20]
   409a0:	mov	r0, r4
   409a4:	blx	r2
   409a8:	ldr	r1, [r4, #16]
   409ac:	ldr	r0, [r4, #20]
   409b0:	sub	r5, r5, r6
   409b4:	sub	r6, r1, r0
   409b8:	cmp	r5, r6
   409bc:	bhi	40980 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x24c>
   409c0:	mov	r1, #32
   409c4:	mov	r2, r5
   409c8:	bl	14ee8 <memset@plt>
   409cc:	ldr	r0, [r4, #20]
   409d0:	add	r0, r0, r5
   409d4:	str	r0, [r4, #20]
   409d8:	b	409f8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   409dc:	ldr	r1, [r4, #16]
   409e0:	cmp	r0, r1
   409e4:	bcc	409f8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   409e8:	ldr	r2, [r4, #44]	; 0x2c
   409ec:	mov	r0, r4
   409f0:	mov	r1, #0
   409f4:	blx	r2
   409f8:	ldr	r1, [r7], #4
   409fc:	mov	r0, r4
   40a00:	blx	sl
   40a04:	cmp	r9, #0
   40a08:	bne	40900 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1cc>
   40a0c:	ldrb	r1, [r4, #25]
   40a10:	ldr	r0, [r4, #20]
   40a14:	cmp	r1, #0
   40a18:	beq	40ad8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3a4>
   40a1c:	add	r1, r0, #1
   40a20:	str	r1, [r4, #20]
   40a24:	mov	r1, #10
   40a28:	strb	r1, [r0]
   40a2c:	ldr	r0, [r4, #32]
   40a30:	sub	r2, r0, #1
   40a34:	str	r2, [r4, #32]
   40a38:	ldrb	r3, [r4, #25]
   40a3c:	ldr	r0, [r4, #20]
   40a40:	ldr	r1, [r4, #16]
   40a44:	mla	r7, r2, r3, r0
   40a48:	mul	r5, r2, r3
   40a4c:	cmp	r7, r1
   40a50:	bls	40ac0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   40a54:	cmp	r0, r1
   40a58:	bcc	40a74 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x340>
   40a5c:	ldr	r2, [r4, #44]	; 0x2c
   40a60:	mov	r0, r4
   40a64:	mov	r1, #0
   40a68:	blx	r2
   40a6c:	ldr	r1, [r4, #16]
   40a70:	ldr	r0, [r4, #20]
   40a74:	sub	r6, r1, r0
   40a78:	cmp	r6, r5
   40a7c:	bcs	40ac0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x38c>
   40a80:	mov	r1, #32
   40a84:	mov	r2, r6
   40a88:	bl	14ee8 <memset@plt>
   40a8c:	ldr	r0, [r4, #20]
   40a90:	ldr	r2, [r4, #44]	; 0x2c
   40a94:	mov	r1, #0
   40a98:	add	r0, r0, r6
   40a9c:	str	r0, [r4, #20]
   40aa0:	mov	r0, r4
   40aa4:	blx	r2
   40aa8:	ldr	r1, [r4, #16]
   40aac:	ldr	r0, [r4, #20]
   40ab0:	sub	r5, r5, r6
   40ab4:	sub	r6, r1, r0
   40ab8:	cmp	r5, r6
   40abc:	bhi	40a80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   40ac0:	mov	r1, #32
   40ac4:	mov	r2, r5
   40ac8:	bl	14ee8 <memset@plt>
   40acc:	ldr	r0, [r4, #20]
   40ad0:	add	r0, r0, r5
   40ad4:	str	r0, [r4, #20]
   40ad8:	add	r1, r0, #1
   40adc:	str	r1, [r4, #20]
   40ae0:	mov	r1, #93	; 0x5d
   40ae4:	strb	r1, [r0]
   40ae8:	sub	sp, fp, #28
   40aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040af0 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   40af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40af4:	add	fp, sp, #28
   40af8:	sub	sp, sp, #4
   40afc:	mov	r4, r0
   40b00:	ldrb	r0, [r0, #27]
   40b04:	cmp	r0, #0
   40b08:	beq	40b1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   40b0c:	mov	r0, r4
   40b10:	sub	sp, fp, #28
   40b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40b18:	b	3db88 <flatcc_json_printer_uint64_vector_field@@Base>
   40b1c:	mov	r0, #4
   40b20:	add	r0, r0, r2, lsl #1
   40b24:	ldr	r2, [r1, #8]
   40b28:	cmp	r0, r2
   40b2c:	bge	40b4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   40b30:	ldr	r2, [r1, #4]
   40b34:	add	r0, r2, r0
   40b38:	ldrh	r0, [r0]
   40b3c:	cmp	r0, #0
   40b40:	ldrne	r2, [r1]
   40b44:	addsne	r8, r2, r0
   40b48:	bne	40b54 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   40b4c:	sub	sp, fp, #28
   40b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40b54:	ldr	r0, [r1, #16]
   40b58:	ldr	sl, [fp, #12]
   40b5c:	ldr	r2, [fp, #8]
   40b60:	add	r7, r0, #1
   40b64:	cmp	r0, #0
   40b68:	str	r7, [r1, #16]
   40b6c:	ldrne	r0, [r4, #20]
   40b70:	addne	r1, r0, #1
   40b74:	strne	r1, [r4, #20]
   40b78:	movne	r1, #44	; 0x2c
   40b7c:	strbne	r1, [r0]
   40b80:	mov	r1, r3
   40b84:	ldr	r0, [r8]
   40b88:	ldr	r9, [r8, r0]!
   40b8c:	mov	r0, r4
   40b90:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   40b94:	ldr	r1, [r4, #32]
   40b98:	ldr	r0, [r4, #20]
   40b9c:	cmp	r9, #0
   40ba0:	add	r1, r1, #1
   40ba4:	str	r1, [r4, #32]
   40ba8:	add	r1, r0, #1
   40bac:	str	r1, [r4, #20]
   40bb0:	mov	r1, #91	; 0x5b
   40bb4:	strb	r1, [r0]
   40bb8:	beq	40dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   40bbc:	ldrb	r1, [r4, #25]
   40bc0:	ldr	r0, [r4, #20]
   40bc4:	cmp	r1, #0
   40bc8:	beq	40c84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x194>
   40bcc:	add	r1, r0, #1
   40bd0:	str	r1, [r4, #20]
   40bd4:	mov	r1, #10
   40bd8:	strb	r1, [r0]
   40bdc:	ldr	r0, [r4, #20]
   40be0:	ldrb	r2, [r4, #25]
   40be4:	ldr	r3, [r4, #32]
   40be8:	ldr	r1, [r4, #16]
   40bec:	mla	r7, r3, r2, r0
   40bf0:	mul	r5, r3, r2
   40bf4:	cmp	r7, r1
   40bf8:	bls	40c68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   40bfc:	cmp	r0, r1
   40c00:	bcc	40c1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x12c>
   40c04:	ldr	r2, [r4, #44]	; 0x2c
   40c08:	mov	r0, r4
   40c0c:	mov	r1, #0
   40c10:	blx	r2
   40c14:	ldr	r1, [r4, #16]
   40c18:	ldr	r0, [r4, #20]
   40c1c:	sub	r6, r1, r0
   40c20:	cmp	r6, r5
   40c24:	bcs	40c68 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
   40c28:	mov	r1, #32
   40c2c:	mov	r2, r6
   40c30:	bl	14ee8 <memset@plt>
   40c34:	ldr	r0, [r4, #20]
   40c38:	ldr	r2, [r4, #44]	; 0x2c
   40c3c:	mov	r1, #0
   40c40:	add	r0, r0, r6
   40c44:	str	r0, [r4, #20]
   40c48:	mov	r0, r4
   40c4c:	blx	r2
   40c50:	ldr	r1, [r4, #16]
   40c54:	ldr	r0, [r4, #20]
   40c58:	sub	r5, r5, r6
   40c5c:	sub	r6, r1, r0
   40c60:	cmp	r5, r6
   40c64:	bhi	40c28 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x138>
   40c68:	mov	r1, #32
   40c6c:	mov	r2, r5
   40c70:	bl	14ee8 <memset@plt>
   40c74:	ldr	r0, [r4, #20]
   40c78:	add	r0, r0, r5
   40c7c:	str	r0, [r4, #20]
   40c80:	b	40ca0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   40c84:	ldr	r1, [r4, #16]
   40c88:	cmp	r0, r1
   40c8c:	bcc	40ca0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b0>
   40c90:	ldr	r2, [r4, #44]	; 0x2c
   40c94:	mov	r0, r4
   40c98:	mov	r1, #0
   40c9c:	blx	r2
   40ca0:	ldrd	r2, [r8, #4]
   40ca4:	mov	r0, r4
   40ca8:	blx	sl
   40cac:	subs	r9, r9, #1
   40cb0:	beq	40dcc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2dc>
   40cb4:	add	r7, r8, #12
   40cb8:	mov	r8, #44	; 0x2c
   40cbc:	ldr	r0, [r4, #20]
   40cc0:	sub	r9, r9, #1
   40cc4:	add	r1, r0, #1
   40cc8:	str	r1, [r4, #20]
   40ccc:	strb	r8, [r0]
   40cd0:	ldrb	r1, [r4, #25]
   40cd4:	ldr	r0, [r4, #20]
   40cd8:	cmp	r1, #0
   40cdc:	beq	40d98 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2a8>
   40ce0:	add	r1, r0, #1
   40ce4:	str	r1, [r4, #20]
   40ce8:	mov	r1, #10
   40cec:	strb	r1, [r0]
   40cf0:	ldr	r0, [r4, #20]
   40cf4:	ldrb	r2, [r4, #25]
   40cf8:	ldr	r3, [r4, #32]
   40cfc:	ldr	r1, [r4, #16]
   40d00:	mla	r6, r3, r2, r0
   40d04:	mul	r5, r3, r2
   40d08:	cmp	r6, r1
   40d0c:	bls	40d7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   40d10:	cmp	r0, r1
   40d14:	bcc	40d30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x240>
   40d18:	ldr	r2, [r4, #44]	; 0x2c
   40d1c:	mov	r0, r4
   40d20:	mov	r1, #0
   40d24:	blx	r2
   40d28:	ldr	r1, [r4, #16]
   40d2c:	ldr	r0, [r4, #20]
   40d30:	sub	r6, r1, r0
   40d34:	cmp	r6, r5
   40d38:	bcs	40d7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   40d3c:	mov	r1, #32
   40d40:	mov	r2, r6
   40d44:	bl	14ee8 <memset@plt>
   40d48:	ldr	r0, [r4, #20]
   40d4c:	ldr	r2, [r4, #44]	; 0x2c
   40d50:	mov	r1, #0
   40d54:	add	r0, r0, r6
   40d58:	str	r0, [r4, #20]
   40d5c:	mov	r0, r4
   40d60:	blx	r2
   40d64:	ldr	r1, [r4, #16]
   40d68:	ldr	r0, [r4, #20]
   40d6c:	sub	r5, r5, r6
   40d70:	sub	r6, r1, r0
   40d74:	cmp	r5, r6
   40d78:	bhi	40d3c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x24c>
   40d7c:	mov	r1, #32
   40d80:	mov	r2, r5
   40d84:	bl	14ee8 <memset@plt>
   40d88:	ldr	r0, [r4, #20]
   40d8c:	add	r0, r0, r5
   40d90:	str	r0, [r4, #20]
   40d94:	b	40db4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   40d98:	ldr	r1, [r4, #16]
   40d9c:	cmp	r0, r1
   40da0:	bcc	40db4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c4>
   40da4:	ldr	r2, [r4, #44]	; 0x2c
   40da8:	mov	r0, r4
   40dac:	mov	r1, #0
   40db0:	blx	r2
   40db4:	ldrd	r2, [r7]
   40db8:	mov	r0, r4
   40dbc:	blx	sl
   40dc0:	add	r7, r7, #8
   40dc4:	cmp	r9, #0
   40dc8:	bne	40cbc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1cc>
   40dcc:	ldrb	r1, [r4, #25]
   40dd0:	ldr	r0, [r4, #20]
   40dd4:	cmp	r1, #0
   40dd8:	beq	40e98 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3a8>
   40ddc:	add	r1, r0, #1
   40de0:	str	r1, [r4, #20]
   40de4:	mov	r1, #10
   40de8:	strb	r1, [r0]
   40dec:	ldr	r0, [r4, #32]
   40df0:	sub	r2, r0, #1
   40df4:	str	r2, [r4, #32]
   40df8:	ldrb	r3, [r4, #25]
   40dfc:	ldr	r0, [r4, #20]
   40e00:	ldr	r1, [r4, #16]
   40e04:	mla	r7, r2, r3, r0
   40e08:	mul	r5, r2, r3
   40e0c:	cmp	r7, r1
   40e10:	bls	40e80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   40e14:	cmp	r0, r1
   40e18:	bcc	40e34 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x344>
   40e1c:	ldr	r2, [r4, #44]	; 0x2c
   40e20:	mov	r0, r4
   40e24:	mov	r1, #0
   40e28:	blx	r2
   40e2c:	ldr	r1, [r4, #16]
   40e30:	ldr	r0, [r4, #20]
   40e34:	sub	r6, r1, r0
   40e38:	cmp	r6, r5
   40e3c:	bcs	40e80 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x390>
   40e40:	mov	r1, #32
   40e44:	mov	r2, r6
   40e48:	bl	14ee8 <memset@plt>
   40e4c:	ldr	r0, [r4, #20]
   40e50:	ldr	r2, [r4, #44]	; 0x2c
   40e54:	mov	r1, #0
   40e58:	add	r0, r0, r6
   40e5c:	str	r0, [r4, #20]
   40e60:	mov	r0, r4
   40e64:	blx	r2
   40e68:	ldr	r1, [r4, #16]
   40e6c:	ldr	r0, [r4, #20]
   40e70:	sub	r5, r5, r6
   40e74:	sub	r6, r1, r0
   40e78:	cmp	r5, r6
   40e7c:	bhi	40e40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   40e80:	mov	r1, #32
   40e84:	mov	r2, r5
   40e88:	bl	14ee8 <memset@plt>
   40e8c:	ldr	r0, [r4, #20]
   40e90:	add	r0, r0, r5
   40e94:	str	r0, [r4, #20]
   40e98:	add	r1, r0, #1
   40e9c:	str	r1, [r4, #20]
   40ea0:	mov	r1, #93	; 0x5d
   40ea4:	strb	r1, [r0]
   40ea8:	sub	sp, fp, #28
   40eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040eb0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   40eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40eb4:	add	fp, sp, #28
   40eb8:	sub	sp, sp, #4
   40ebc:	mov	r4, r0
   40ec0:	ldrb	r0, [r0, #27]
   40ec4:	cmp	r0, #0
   40ec8:	beq	40edc <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   40ecc:	mov	r0, r4
   40ed0:	sub	sp, fp, #28
   40ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40ed8:	b	3df40 <flatcc_json_printer_int8_vector_field@@Base>
   40edc:	mov	r0, #4
   40ee0:	add	r0, r0, r2, lsl #1
   40ee4:	ldr	r2, [r1, #8]
   40ee8:	cmp	r0, r2
   40eec:	bge	40f0c <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   40ef0:	ldr	r2, [r1, #4]
   40ef4:	add	r0, r2, r0
   40ef8:	ldrh	r0, [r0]
   40efc:	cmp	r0, #0
   40f00:	ldrne	r2, [r1]
   40f04:	addsne	r8, r2, r0
   40f08:	bne	40f14 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   40f0c:	sub	sp, fp, #28
   40f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40f14:	ldr	r0, [r1, #16]
   40f18:	ldr	sl, [fp, #12]
   40f1c:	ldr	r2, [fp, #8]
   40f20:	add	r7, r0, #1
   40f24:	cmp	r0, #0
   40f28:	str	r7, [r1, #16]
   40f2c:	ldrne	r0, [r4, #20]
   40f30:	addne	r1, r0, #1
   40f34:	strne	r1, [r4, #20]
   40f38:	movne	r1, #44	; 0x2c
   40f3c:	strbne	r1, [r0]
   40f40:	mov	r1, r3
   40f44:	ldr	r0, [r8]
   40f48:	ldr	r9, [r8, r0]!
   40f4c:	mov	r0, r4
   40f50:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   40f54:	ldr	r1, [r4, #32]
   40f58:	ldr	r0, [r4, #20]
   40f5c:	cmp	r9, #0
   40f60:	add	r1, r1, #1
   40f64:	str	r1, [r4, #32]
   40f68:	add	r1, r0, #1
   40f6c:	str	r1, [r4, #20]
   40f70:	mov	r1, #91	; 0x5b
   40f74:	strb	r1, [r0]
   40f78:	beq	41188 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   40f7c:	ldrb	r1, [r4, #25]
   40f80:	ldr	r0, [r4, #20]
   40f84:	cmp	r1, #0
   40f88:	beq	41044 <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   40f8c:	add	r1, r0, #1
   40f90:	str	r1, [r4, #20]
   40f94:	mov	r1, #10
   40f98:	strb	r1, [r0]
   40f9c:	ldr	r0, [r4, #20]
   40fa0:	ldrb	r2, [r4, #25]
   40fa4:	ldr	r3, [r4, #32]
   40fa8:	ldr	r1, [r4, #16]
   40fac:	mla	r7, r3, r2, r0
   40fb0:	mul	r5, r3, r2
   40fb4:	cmp	r7, r1
   40fb8:	bls	41028 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   40fbc:	cmp	r0, r1
   40fc0:	bcc	40fdc <flatcc_json_printer_int8_enum_vector_field@@Base+0x12c>
   40fc4:	ldr	r2, [r4, #44]	; 0x2c
   40fc8:	mov	r0, r4
   40fcc:	mov	r1, #0
   40fd0:	blx	r2
   40fd4:	ldr	r1, [r4, #16]
   40fd8:	ldr	r0, [r4, #20]
   40fdc:	sub	r6, r1, r0
   40fe0:	cmp	r6, r5
   40fe4:	bcs	41028 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
   40fe8:	mov	r1, #32
   40fec:	mov	r2, r6
   40ff0:	bl	14ee8 <memset@plt>
   40ff4:	ldr	r0, [r4, #20]
   40ff8:	ldr	r2, [r4, #44]	; 0x2c
   40ffc:	mov	r1, #0
   41000:	add	r0, r0, r6
   41004:	str	r0, [r4, #20]
   41008:	mov	r0, r4
   4100c:	blx	r2
   41010:	ldr	r1, [r4, #16]
   41014:	ldr	r0, [r4, #20]
   41018:	sub	r5, r5, r6
   4101c:	sub	r6, r1, r0
   41020:	cmp	r5, r6
   41024:	bhi	40fe8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x138>
   41028:	mov	r1, #32
   4102c:	mov	r2, r5
   41030:	bl	14ee8 <memset@plt>
   41034:	ldr	r0, [r4, #20]
   41038:	add	r0, r0, r5
   4103c:	str	r0, [r4, #20]
   41040:	b	41060 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   41044:	ldr	r1, [r4, #16]
   41048:	cmp	r0, r1
   4104c:	bcc	41060 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b0>
   41050:	ldr	r2, [r4, #44]	; 0x2c
   41054:	mov	r0, r4
   41058:	mov	r1, #0
   4105c:	blx	r2
   41060:	ldrsb	r1, [r8, #4]
   41064:	mov	r0, r4
   41068:	blx	sl
   4106c:	subs	r9, r9, #1
   41070:	beq	41188 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2d8>
   41074:	add	r7, r8, #5
   41078:	mov	r8, #44	; 0x2c
   4107c:	ldr	r0, [r4, #20]
   41080:	sub	r9, r9, #1
   41084:	add	r1, r0, #1
   41088:	str	r1, [r4, #20]
   4108c:	strb	r8, [r0]
   41090:	ldrb	r1, [r4, #25]
   41094:	ldr	r0, [r4, #20]
   41098:	cmp	r1, #0
   4109c:	beq	41158 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2a8>
   410a0:	add	r1, r0, #1
   410a4:	str	r1, [r4, #20]
   410a8:	mov	r1, #10
   410ac:	strb	r1, [r0]
   410b0:	ldr	r0, [r4, #20]
   410b4:	ldrb	r2, [r4, #25]
   410b8:	ldr	r3, [r4, #32]
   410bc:	ldr	r1, [r4, #16]
   410c0:	mla	r6, r3, r2, r0
   410c4:	mul	r5, r3, r2
   410c8:	cmp	r6, r1
   410cc:	bls	4113c <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   410d0:	cmp	r0, r1
   410d4:	bcc	410f0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x240>
   410d8:	ldr	r2, [r4, #44]	; 0x2c
   410dc:	mov	r0, r4
   410e0:	mov	r1, #0
   410e4:	blx	r2
   410e8:	ldr	r1, [r4, #16]
   410ec:	ldr	r0, [r4, #20]
   410f0:	sub	r6, r1, r0
   410f4:	cmp	r6, r5
   410f8:	bcs	4113c <flatcc_json_printer_int8_enum_vector_field@@Base+0x28c>
   410fc:	mov	r1, #32
   41100:	mov	r2, r6
   41104:	bl	14ee8 <memset@plt>
   41108:	ldr	r0, [r4, #20]
   4110c:	ldr	r2, [r4, #44]	; 0x2c
   41110:	mov	r1, #0
   41114:	add	r0, r0, r6
   41118:	str	r0, [r4, #20]
   4111c:	mov	r0, r4
   41120:	blx	r2
   41124:	ldr	r1, [r4, #16]
   41128:	ldr	r0, [r4, #20]
   4112c:	sub	r5, r5, r6
   41130:	sub	r6, r1, r0
   41134:	cmp	r5, r6
   41138:	bhi	410fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x24c>
   4113c:	mov	r1, #32
   41140:	mov	r2, r5
   41144:	bl	14ee8 <memset@plt>
   41148:	ldr	r0, [r4, #20]
   4114c:	add	r0, r0, r5
   41150:	str	r0, [r4, #20]
   41154:	b	41174 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41158:	ldr	r1, [r4, #16]
   4115c:	cmp	r0, r1
   41160:	bcc	41174 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   41164:	ldr	r2, [r4, #44]	; 0x2c
   41168:	mov	r0, r4
   4116c:	mov	r1, #0
   41170:	blx	r2
   41174:	ldrsb	r1, [r7], #1
   41178:	mov	r0, r4
   4117c:	blx	sl
   41180:	cmp	r9, #0
   41184:	bne	4107c <flatcc_json_printer_int8_enum_vector_field@@Base+0x1cc>
   41188:	ldrb	r1, [r4, #25]
   4118c:	ldr	r0, [r4, #20]
   41190:	cmp	r1, #0
   41194:	beq	41254 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3a4>
   41198:	add	r1, r0, #1
   4119c:	str	r1, [r4, #20]
   411a0:	mov	r1, #10
   411a4:	strb	r1, [r0]
   411a8:	ldr	r0, [r4, #32]
   411ac:	sub	r2, r0, #1
   411b0:	str	r2, [r4, #32]
   411b4:	ldrb	r3, [r4, #25]
   411b8:	ldr	r0, [r4, #20]
   411bc:	ldr	r1, [r4, #16]
   411c0:	mla	r7, r2, r3, r0
   411c4:	mul	r5, r2, r3
   411c8:	cmp	r7, r1
   411cc:	bls	4123c <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   411d0:	cmp	r0, r1
   411d4:	bcc	411f0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x340>
   411d8:	ldr	r2, [r4, #44]	; 0x2c
   411dc:	mov	r0, r4
   411e0:	mov	r1, #0
   411e4:	blx	r2
   411e8:	ldr	r1, [r4, #16]
   411ec:	ldr	r0, [r4, #20]
   411f0:	sub	r6, r1, r0
   411f4:	cmp	r6, r5
   411f8:	bcs	4123c <flatcc_json_printer_int8_enum_vector_field@@Base+0x38c>
   411fc:	mov	r1, #32
   41200:	mov	r2, r6
   41204:	bl	14ee8 <memset@plt>
   41208:	ldr	r0, [r4, #20]
   4120c:	ldr	r2, [r4, #44]	; 0x2c
   41210:	mov	r1, #0
   41214:	add	r0, r0, r6
   41218:	str	r0, [r4, #20]
   4121c:	mov	r0, r4
   41220:	blx	r2
   41224:	ldr	r1, [r4, #16]
   41228:	ldr	r0, [r4, #20]
   4122c:	sub	r5, r5, r6
   41230:	sub	r6, r1, r0
   41234:	cmp	r5, r6
   41238:	bhi	411fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   4123c:	mov	r1, #32
   41240:	mov	r2, r5
   41244:	bl	14ee8 <memset@plt>
   41248:	ldr	r0, [r4, #20]
   4124c:	add	r0, r0, r5
   41250:	str	r0, [r4, #20]
   41254:	add	r1, r0, #1
   41258:	str	r1, [r4, #20]
   4125c:	mov	r1, #93	; 0x5d
   41260:	strb	r1, [r0]
   41264:	sub	sp, fp, #28
   41268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004126c <flatcc_json_printer_int16_enum_vector_field@@Base>:
   4126c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41270:	add	fp, sp, #28
   41274:	sub	sp, sp, #4
   41278:	mov	r4, r0
   4127c:	ldrb	r0, [r0, #27]
   41280:	cmp	r0, #0
   41284:	beq	41298 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   41288:	mov	r0, r4
   4128c:	sub	sp, fp, #28
   41290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41294:	b	3e488 <flatcc_json_printer_int16_vector_field@@Base>
   41298:	mov	r0, #4
   4129c:	add	r0, r0, r2, lsl #1
   412a0:	ldr	r2, [r1, #8]
   412a4:	cmp	r0, r2
   412a8:	bge	412c8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   412ac:	ldr	r2, [r1, #4]
   412b0:	add	r0, r2, r0
   412b4:	ldrh	r0, [r0]
   412b8:	cmp	r0, #0
   412bc:	ldrne	r2, [r1]
   412c0:	addsne	r8, r2, r0
   412c4:	bne	412d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   412c8:	sub	sp, fp, #28
   412cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   412d0:	ldr	r0, [r1, #16]
   412d4:	ldr	sl, [fp, #12]
   412d8:	ldr	r2, [fp, #8]
   412dc:	add	r7, r0, #1
   412e0:	cmp	r0, #0
   412e4:	str	r7, [r1, #16]
   412e8:	ldrne	r0, [r4, #20]
   412ec:	addne	r1, r0, #1
   412f0:	strne	r1, [r4, #20]
   412f4:	movne	r1, #44	; 0x2c
   412f8:	strbne	r1, [r0]
   412fc:	mov	r1, r3
   41300:	ldr	r0, [r8]
   41304:	ldr	r9, [r8, r0]!
   41308:	mov	r0, r4
   4130c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   41310:	ldr	r1, [r4, #32]
   41314:	ldr	r0, [r4, #20]
   41318:	cmp	r9, #0
   4131c:	add	r1, r1, #1
   41320:	str	r1, [r4, #32]
   41324:	add	r1, r0, #1
   41328:	str	r1, [r4, #20]
   4132c:	mov	r1, #91	; 0x5b
   41330:	strb	r1, [r0]
   41334:	beq	41544 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   41338:	ldrb	r1, [r4, #25]
   4133c:	ldr	r0, [r4, #20]
   41340:	cmp	r1, #0
   41344:	beq	41400 <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   41348:	add	r1, r0, #1
   4134c:	str	r1, [r4, #20]
   41350:	mov	r1, #10
   41354:	strb	r1, [r0]
   41358:	ldr	r0, [r4, #20]
   4135c:	ldrb	r2, [r4, #25]
   41360:	ldr	r3, [r4, #32]
   41364:	ldr	r1, [r4, #16]
   41368:	mla	r7, r3, r2, r0
   4136c:	mul	r5, r3, r2
   41370:	cmp	r7, r1
   41374:	bls	413e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   41378:	cmp	r0, r1
   4137c:	bcc	41398 <flatcc_json_printer_int16_enum_vector_field@@Base+0x12c>
   41380:	ldr	r2, [r4, #44]	; 0x2c
   41384:	mov	r0, r4
   41388:	mov	r1, #0
   4138c:	blx	r2
   41390:	ldr	r1, [r4, #16]
   41394:	ldr	r0, [r4, #20]
   41398:	sub	r6, r1, r0
   4139c:	cmp	r6, r5
   413a0:	bcs	413e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
   413a4:	mov	r1, #32
   413a8:	mov	r2, r6
   413ac:	bl	14ee8 <memset@plt>
   413b0:	ldr	r0, [r4, #20]
   413b4:	ldr	r2, [r4, #44]	; 0x2c
   413b8:	mov	r1, #0
   413bc:	add	r0, r0, r6
   413c0:	str	r0, [r4, #20]
   413c4:	mov	r0, r4
   413c8:	blx	r2
   413cc:	ldr	r1, [r4, #16]
   413d0:	ldr	r0, [r4, #20]
   413d4:	sub	r5, r5, r6
   413d8:	sub	r6, r1, r0
   413dc:	cmp	r5, r6
   413e0:	bhi	413a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x138>
   413e4:	mov	r1, #32
   413e8:	mov	r2, r5
   413ec:	bl	14ee8 <memset@plt>
   413f0:	ldr	r0, [r4, #20]
   413f4:	add	r0, r0, r5
   413f8:	str	r0, [r4, #20]
   413fc:	b	4141c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   41400:	ldr	r1, [r4, #16]
   41404:	cmp	r0, r1
   41408:	bcc	4141c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b0>
   4140c:	ldr	r2, [r4, #44]	; 0x2c
   41410:	mov	r0, r4
   41414:	mov	r1, #0
   41418:	blx	r2
   4141c:	ldrsh	r1, [r8, #4]
   41420:	mov	r0, r4
   41424:	blx	sl
   41428:	subs	r9, r9, #1
   4142c:	beq	41544 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2d8>
   41430:	add	r7, r8, #6
   41434:	mov	r8, #44	; 0x2c
   41438:	ldr	r0, [r4, #20]
   4143c:	sub	r9, r9, #1
   41440:	add	r1, r0, #1
   41444:	str	r1, [r4, #20]
   41448:	strb	r8, [r0]
   4144c:	ldrb	r1, [r4, #25]
   41450:	ldr	r0, [r4, #20]
   41454:	cmp	r1, #0
   41458:	beq	41514 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2a8>
   4145c:	add	r1, r0, #1
   41460:	str	r1, [r4, #20]
   41464:	mov	r1, #10
   41468:	strb	r1, [r0]
   4146c:	ldr	r0, [r4, #20]
   41470:	ldrb	r2, [r4, #25]
   41474:	ldr	r3, [r4, #32]
   41478:	ldr	r1, [r4, #16]
   4147c:	mla	r6, r3, r2, r0
   41480:	mul	r5, r3, r2
   41484:	cmp	r6, r1
   41488:	bls	414f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   4148c:	cmp	r0, r1
   41490:	bcc	414ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x240>
   41494:	ldr	r2, [r4, #44]	; 0x2c
   41498:	mov	r0, r4
   4149c:	mov	r1, #0
   414a0:	blx	r2
   414a4:	ldr	r1, [r4, #16]
   414a8:	ldr	r0, [r4, #20]
   414ac:	sub	r6, r1, r0
   414b0:	cmp	r6, r5
   414b4:	bcs	414f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x28c>
   414b8:	mov	r1, #32
   414bc:	mov	r2, r6
   414c0:	bl	14ee8 <memset@plt>
   414c4:	ldr	r0, [r4, #20]
   414c8:	ldr	r2, [r4, #44]	; 0x2c
   414cc:	mov	r1, #0
   414d0:	add	r0, r0, r6
   414d4:	str	r0, [r4, #20]
   414d8:	mov	r0, r4
   414dc:	blx	r2
   414e0:	ldr	r1, [r4, #16]
   414e4:	ldr	r0, [r4, #20]
   414e8:	sub	r5, r5, r6
   414ec:	sub	r6, r1, r0
   414f0:	cmp	r5, r6
   414f4:	bhi	414b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x24c>
   414f8:	mov	r1, #32
   414fc:	mov	r2, r5
   41500:	bl	14ee8 <memset@plt>
   41504:	ldr	r0, [r4, #20]
   41508:	add	r0, r0, r5
   4150c:	str	r0, [r4, #20]
   41510:	b	41530 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   41514:	ldr	r1, [r4, #16]
   41518:	cmp	r0, r1
   4151c:	bcc	41530 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   41520:	ldr	r2, [r4, #44]	; 0x2c
   41524:	mov	r0, r4
   41528:	mov	r1, #0
   4152c:	blx	r2
   41530:	ldrsh	r1, [r7], #2
   41534:	mov	r0, r4
   41538:	blx	sl
   4153c:	cmp	r9, #0
   41540:	bne	41438 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1cc>
   41544:	ldrb	r1, [r4, #25]
   41548:	ldr	r0, [r4, #20]
   4154c:	cmp	r1, #0
   41550:	beq	41610 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3a4>
   41554:	add	r1, r0, #1
   41558:	str	r1, [r4, #20]
   4155c:	mov	r1, #10
   41560:	strb	r1, [r0]
   41564:	ldr	r0, [r4, #32]
   41568:	sub	r2, r0, #1
   4156c:	str	r2, [r4, #32]
   41570:	ldrb	r3, [r4, #25]
   41574:	ldr	r0, [r4, #20]
   41578:	ldr	r1, [r4, #16]
   4157c:	mla	r7, r2, r3, r0
   41580:	mul	r5, r2, r3
   41584:	cmp	r7, r1
   41588:	bls	415f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   4158c:	cmp	r0, r1
   41590:	bcc	415ac <flatcc_json_printer_int16_enum_vector_field@@Base+0x340>
   41594:	ldr	r2, [r4, #44]	; 0x2c
   41598:	mov	r0, r4
   4159c:	mov	r1, #0
   415a0:	blx	r2
   415a4:	ldr	r1, [r4, #16]
   415a8:	ldr	r0, [r4, #20]
   415ac:	sub	r6, r1, r0
   415b0:	cmp	r6, r5
   415b4:	bcs	415f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x38c>
   415b8:	mov	r1, #32
   415bc:	mov	r2, r6
   415c0:	bl	14ee8 <memset@plt>
   415c4:	ldr	r0, [r4, #20]
   415c8:	ldr	r2, [r4, #44]	; 0x2c
   415cc:	mov	r1, #0
   415d0:	add	r0, r0, r6
   415d4:	str	r0, [r4, #20]
   415d8:	mov	r0, r4
   415dc:	blx	r2
   415e0:	ldr	r1, [r4, #16]
   415e4:	ldr	r0, [r4, #20]
   415e8:	sub	r5, r5, r6
   415ec:	sub	r6, r1, r0
   415f0:	cmp	r5, r6
   415f4:	bhi	415b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   415f8:	mov	r1, #32
   415fc:	mov	r2, r5
   41600:	bl	14ee8 <memset@plt>
   41604:	ldr	r0, [r4, #20]
   41608:	add	r0, r0, r5
   4160c:	str	r0, [r4, #20]
   41610:	add	r1, r0, #1
   41614:	str	r1, [r4, #20]
   41618:	mov	r1, #93	; 0x5d
   4161c:	strb	r1, [r0]
   41620:	sub	sp, fp, #28
   41624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041628 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   41628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4162c:	add	fp, sp, #28
   41630:	sub	sp, sp, #4
   41634:	mov	r4, r0
   41638:	ldrb	r0, [r0, #27]
   4163c:	cmp	r0, #0
   41640:	beq	41654 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   41644:	mov	r0, r4
   41648:	sub	sp, fp, #28
   4164c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41650:	b	3e880 <flatcc_json_printer_int32_vector_field@@Base>
   41654:	mov	r0, #4
   41658:	add	r0, r0, r2, lsl #1
   4165c:	ldr	r2, [r1, #8]
   41660:	cmp	r0, r2
   41664:	bge	41684 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   41668:	ldr	r2, [r1, #4]
   4166c:	add	r0, r2, r0
   41670:	ldrh	r0, [r0]
   41674:	cmp	r0, #0
   41678:	ldrne	r2, [r1]
   4167c:	addsne	r8, r2, r0
   41680:	bne	4168c <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   41684:	sub	sp, fp, #28
   41688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4168c:	ldr	r0, [r1, #16]
   41690:	ldr	sl, [fp, #12]
   41694:	ldr	r2, [fp, #8]
   41698:	add	r7, r0, #1
   4169c:	cmp	r0, #0
   416a0:	str	r7, [r1, #16]
   416a4:	ldrne	r0, [r4, #20]
   416a8:	addne	r1, r0, #1
   416ac:	strne	r1, [r4, #20]
   416b0:	movne	r1, #44	; 0x2c
   416b4:	strbne	r1, [r0]
   416b8:	mov	r1, r3
   416bc:	ldr	r0, [r8]
   416c0:	ldr	r9, [r8, r0]!
   416c4:	mov	r0, r4
   416c8:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   416cc:	ldr	r1, [r4, #32]
   416d0:	ldr	r0, [r4, #20]
   416d4:	cmp	r9, #0
   416d8:	add	r1, r1, #1
   416dc:	str	r1, [r4, #32]
   416e0:	add	r1, r0, #1
   416e4:	str	r1, [r4, #20]
   416e8:	mov	r1, #91	; 0x5b
   416ec:	strb	r1, [r0]
   416f0:	beq	41900 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   416f4:	ldrb	r1, [r4, #25]
   416f8:	ldr	r0, [r4, #20]
   416fc:	cmp	r1, #0
   41700:	beq	417bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x194>
   41704:	add	r1, r0, #1
   41708:	str	r1, [r4, #20]
   4170c:	mov	r1, #10
   41710:	strb	r1, [r0]
   41714:	ldr	r0, [r4, #20]
   41718:	ldrb	r2, [r4, #25]
   4171c:	ldr	r3, [r4, #32]
   41720:	ldr	r1, [r4, #16]
   41724:	mla	r7, r3, r2, r0
   41728:	mul	r5, r3, r2
   4172c:	cmp	r7, r1
   41730:	bls	417a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   41734:	cmp	r0, r1
   41738:	bcc	41754 <flatcc_json_printer_int32_enum_vector_field@@Base+0x12c>
   4173c:	ldr	r2, [r4, #44]	; 0x2c
   41740:	mov	r0, r4
   41744:	mov	r1, #0
   41748:	blx	r2
   4174c:	ldr	r1, [r4, #16]
   41750:	ldr	r0, [r4, #20]
   41754:	sub	r6, r1, r0
   41758:	cmp	r6, r5
   4175c:	bcs	417a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
   41760:	mov	r1, #32
   41764:	mov	r2, r6
   41768:	bl	14ee8 <memset@plt>
   4176c:	ldr	r0, [r4, #20]
   41770:	ldr	r2, [r4, #44]	; 0x2c
   41774:	mov	r1, #0
   41778:	add	r0, r0, r6
   4177c:	str	r0, [r4, #20]
   41780:	mov	r0, r4
   41784:	blx	r2
   41788:	ldr	r1, [r4, #16]
   4178c:	ldr	r0, [r4, #20]
   41790:	sub	r5, r5, r6
   41794:	sub	r6, r1, r0
   41798:	cmp	r5, r6
   4179c:	bhi	41760 <flatcc_json_printer_int32_enum_vector_field@@Base+0x138>
   417a0:	mov	r1, #32
   417a4:	mov	r2, r5
   417a8:	bl	14ee8 <memset@plt>
   417ac:	ldr	r0, [r4, #20]
   417b0:	add	r0, r0, r5
   417b4:	str	r0, [r4, #20]
   417b8:	b	417d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   417bc:	ldr	r1, [r4, #16]
   417c0:	cmp	r0, r1
   417c4:	bcc	417d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b0>
   417c8:	ldr	r2, [r4, #44]	; 0x2c
   417cc:	mov	r0, r4
   417d0:	mov	r1, #0
   417d4:	blx	r2
   417d8:	ldr	r1, [r8, #4]
   417dc:	mov	r0, r4
   417e0:	blx	sl
   417e4:	subs	r9, r9, #1
   417e8:	beq	41900 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2d8>
   417ec:	add	r7, r8, #8
   417f0:	mov	r8, #44	; 0x2c
   417f4:	ldr	r0, [r4, #20]
   417f8:	sub	r9, r9, #1
   417fc:	add	r1, r0, #1
   41800:	str	r1, [r4, #20]
   41804:	strb	r8, [r0]
   41808:	ldrb	r1, [r4, #25]
   4180c:	ldr	r0, [r4, #20]
   41810:	cmp	r1, #0
   41814:	beq	418d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2a8>
   41818:	add	r1, r0, #1
   4181c:	str	r1, [r4, #20]
   41820:	mov	r1, #10
   41824:	strb	r1, [r0]
   41828:	ldr	r0, [r4, #20]
   4182c:	ldrb	r2, [r4, #25]
   41830:	ldr	r3, [r4, #32]
   41834:	ldr	r1, [r4, #16]
   41838:	mla	r6, r3, r2, r0
   4183c:	mul	r5, r3, r2
   41840:	cmp	r6, r1
   41844:	bls	418b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   41848:	cmp	r0, r1
   4184c:	bcc	41868 <flatcc_json_printer_int32_enum_vector_field@@Base+0x240>
   41850:	ldr	r2, [r4, #44]	; 0x2c
   41854:	mov	r0, r4
   41858:	mov	r1, #0
   4185c:	blx	r2
   41860:	ldr	r1, [r4, #16]
   41864:	ldr	r0, [r4, #20]
   41868:	sub	r6, r1, r0
   4186c:	cmp	r6, r5
   41870:	bcs	418b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   41874:	mov	r1, #32
   41878:	mov	r2, r6
   4187c:	bl	14ee8 <memset@plt>
   41880:	ldr	r0, [r4, #20]
   41884:	ldr	r2, [r4, #44]	; 0x2c
   41888:	mov	r1, #0
   4188c:	add	r0, r0, r6
   41890:	str	r0, [r4, #20]
   41894:	mov	r0, r4
   41898:	blx	r2
   4189c:	ldr	r1, [r4, #16]
   418a0:	ldr	r0, [r4, #20]
   418a4:	sub	r5, r5, r6
   418a8:	sub	r6, r1, r0
   418ac:	cmp	r5, r6
   418b0:	bhi	41874 <flatcc_json_printer_int32_enum_vector_field@@Base+0x24c>
   418b4:	mov	r1, #32
   418b8:	mov	r2, r5
   418bc:	bl	14ee8 <memset@plt>
   418c0:	ldr	r0, [r4, #20]
   418c4:	add	r0, r0, r5
   418c8:	str	r0, [r4, #20]
   418cc:	b	418ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   418d0:	ldr	r1, [r4, #16]
   418d4:	cmp	r0, r1
   418d8:	bcc	418ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   418dc:	ldr	r2, [r4, #44]	; 0x2c
   418e0:	mov	r0, r4
   418e4:	mov	r1, #0
   418e8:	blx	r2
   418ec:	ldr	r1, [r7], #4
   418f0:	mov	r0, r4
   418f4:	blx	sl
   418f8:	cmp	r9, #0
   418fc:	bne	417f4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1cc>
   41900:	ldrb	r1, [r4, #25]
   41904:	ldr	r0, [r4, #20]
   41908:	cmp	r1, #0
   4190c:	beq	419cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x3a4>
   41910:	add	r1, r0, #1
   41914:	str	r1, [r4, #20]
   41918:	mov	r1, #10
   4191c:	strb	r1, [r0]
   41920:	ldr	r0, [r4, #32]
   41924:	sub	r2, r0, #1
   41928:	str	r2, [r4, #32]
   4192c:	ldrb	r3, [r4, #25]
   41930:	ldr	r0, [r4, #20]
   41934:	ldr	r1, [r4, #16]
   41938:	mla	r7, r2, r3, r0
   4193c:	mul	r5, r2, r3
   41940:	cmp	r7, r1
   41944:	bls	419b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   41948:	cmp	r0, r1
   4194c:	bcc	41968 <flatcc_json_printer_int32_enum_vector_field@@Base+0x340>
   41950:	ldr	r2, [r4, #44]	; 0x2c
   41954:	mov	r0, r4
   41958:	mov	r1, #0
   4195c:	blx	r2
   41960:	ldr	r1, [r4, #16]
   41964:	ldr	r0, [r4, #20]
   41968:	sub	r6, r1, r0
   4196c:	cmp	r6, r5
   41970:	bcs	419b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x38c>
   41974:	mov	r1, #32
   41978:	mov	r2, r6
   4197c:	bl	14ee8 <memset@plt>
   41980:	ldr	r0, [r4, #20]
   41984:	ldr	r2, [r4, #44]	; 0x2c
   41988:	mov	r1, #0
   4198c:	add	r0, r0, r6
   41990:	str	r0, [r4, #20]
   41994:	mov	r0, r4
   41998:	blx	r2
   4199c:	ldr	r1, [r4, #16]
   419a0:	ldr	r0, [r4, #20]
   419a4:	sub	r5, r5, r6
   419a8:	sub	r6, r1, r0
   419ac:	cmp	r5, r6
   419b0:	bhi	41974 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   419b4:	mov	r1, #32
   419b8:	mov	r2, r5
   419bc:	bl	14ee8 <memset@plt>
   419c0:	ldr	r0, [r4, #20]
   419c4:	add	r0, r0, r5
   419c8:	str	r0, [r4, #20]
   419cc:	add	r1, r0, #1
   419d0:	str	r1, [r4, #20]
   419d4:	mov	r1, #93	; 0x5d
   419d8:	strb	r1, [r0]
   419dc:	sub	sp, fp, #28
   419e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000419e4 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   419e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   419e8:	add	fp, sp, #28
   419ec:	sub	sp, sp, #4
   419f0:	mov	r4, r0
   419f4:	ldrb	r0, [r0, #27]
   419f8:	cmp	r0, #0
   419fc:	beq	41a10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   41a00:	mov	r0, r4
   41a04:	sub	sp, fp, #28
   41a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41a0c:	b	3ec68 <flatcc_json_printer_int64_vector_field@@Base>
   41a10:	mov	r0, #4
   41a14:	add	r0, r0, r2, lsl #1
   41a18:	ldr	r2, [r1, #8]
   41a1c:	cmp	r0, r2
   41a20:	bge	41a40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   41a24:	ldr	r2, [r1, #4]
   41a28:	add	r0, r2, r0
   41a2c:	ldrh	r0, [r0]
   41a30:	cmp	r0, #0
   41a34:	ldrne	r2, [r1]
   41a38:	addsne	r8, r2, r0
   41a3c:	bne	41a48 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   41a40:	sub	sp, fp, #28
   41a44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41a48:	ldr	r0, [r1, #16]
   41a4c:	ldr	sl, [fp, #12]
   41a50:	ldr	r2, [fp, #8]
   41a54:	add	r7, r0, #1
   41a58:	cmp	r0, #0
   41a5c:	str	r7, [r1, #16]
   41a60:	ldrne	r0, [r4, #20]
   41a64:	addne	r1, r0, #1
   41a68:	strne	r1, [r4, #20]
   41a6c:	movne	r1, #44	; 0x2c
   41a70:	strbne	r1, [r0]
   41a74:	mov	r1, r3
   41a78:	ldr	r0, [r8]
   41a7c:	ldr	r9, [r8, r0]!
   41a80:	mov	r0, r4
   41a84:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   41a88:	ldr	r1, [r4, #32]
   41a8c:	ldr	r0, [r4, #20]
   41a90:	cmp	r9, #0
   41a94:	add	r1, r1, #1
   41a98:	str	r1, [r4, #32]
   41a9c:	add	r1, r0, #1
   41aa0:	str	r1, [r4, #20]
   41aa4:	mov	r1, #91	; 0x5b
   41aa8:	strb	r1, [r0]
   41aac:	beq	41cc0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   41ab0:	ldrb	r1, [r4, #25]
   41ab4:	ldr	r0, [r4, #20]
   41ab8:	cmp	r1, #0
   41abc:	beq	41b78 <flatcc_json_printer_int64_enum_vector_field@@Base+0x194>
   41ac0:	add	r1, r0, #1
   41ac4:	str	r1, [r4, #20]
   41ac8:	mov	r1, #10
   41acc:	strb	r1, [r0]
   41ad0:	ldr	r0, [r4, #20]
   41ad4:	ldrb	r2, [r4, #25]
   41ad8:	ldr	r3, [r4, #32]
   41adc:	ldr	r1, [r4, #16]
   41ae0:	mla	r7, r3, r2, r0
   41ae4:	mul	r5, r3, r2
   41ae8:	cmp	r7, r1
   41aec:	bls	41b5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   41af0:	cmp	r0, r1
   41af4:	bcc	41b10 <flatcc_json_printer_int64_enum_vector_field@@Base+0x12c>
   41af8:	ldr	r2, [r4, #44]	; 0x2c
   41afc:	mov	r0, r4
   41b00:	mov	r1, #0
   41b04:	blx	r2
   41b08:	ldr	r1, [r4, #16]
   41b0c:	ldr	r0, [r4, #20]
   41b10:	sub	r6, r1, r0
   41b14:	cmp	r6, r5
   41b18:	bcs	41b5c <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
   41b1c:	mov	r1, #32
   41b20:	mov	r2, r6
   41b24:	bl	14ee8 <memset@plt>
   41b28:	ldr	r0, [r4, #20]
   41b2c:	ldr	r2, [r4, #44]	; 0x2c
   41b30:	mov	r1, #0
   41b34:	add	r0, r0, r6
   41b38:	str	r0, [r4, #20]
   41b3c:	mov	r0, r4
   41b40:	blx	r2
   41b44:	ldr	r1, [r4, #16]
   41b48:	ldr	r0, [r4, #20]
   41b4c:	sub	r5, r5, r6
   41b50:	sub	r6, r1, r0
   41b54:	cmp	r5, r6
   41b58:	bhi	41b1c <flatcc_json_printer_int64_enum_vector_field@@Base+0x138>
   41b5c:	mov	r1, #32
   41b60:	mov	r2, r5
   41b64:	bl	14ee8 <memset@plt>
   41b68:	ldr	r0, [r4, #20]
   41b6c:	add	r0, r0, r5
   41b70:	str	r0, [r4, #20]
   41b74:	b	41b94 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   41b78:	ldr	r1, [r4, #16]
   41b7c:	cmp	r0, r1
   41b80:	bcc	41b94 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b0>
   41b84:	ldr	r2, [r4, #44]	; 0x2c
   41b88:	mov	r0, r4
   41b8c:	mov	r1, #0
   41b90:	blx	r2
   41b94:	ldrd	r2, [r8, #4]
   41b98:	mov	r0, r4
   41b9c:	blx	sl
   41ba0:	subs	r9, r9, #1
   41ba4:	beq	41cc0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2dc>
   41ba8:	add	r7, r8, #12
   41bac:	mov	r8, #44	; 0x2c
   41bb0:	ldr	r0, [r4, #20]
   41bb4:	sub	r9, r9, #1
   41bb8:	add	r1, r0, #1
   41bbc:	str	r1, [r4, #20]
   41bc0:	strb	r8, [r0]
   41bc4:	ldrb	r1, [r4, #25]
   41bc8:	ldr	r0, [r4, #20]
   41bcc:	cmp	r1, #0
   41bd0:	beq	41c8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x2a8>
   41bd4:	add	r1, r0, #1
   41bd8:	str	r1, [r4, #20]
   41bdc:	mov	r1, #10
   41be0:	strb	r1, [r0]
   41be4:	ldr	r0, [r4, #20]
   41be8:	ldrb	r2, [r4, #25]
   41bec:	ldr	r3, [r4, #32]
   41bf0:	ldr	r1, [r4, #16]
   41bf4:	mla	r6, r3, r2, r0
   41bf8:	mul	r5, r3, r2
   41bfc:	cmp	r6, r1
   41c00:	bls	41c70 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   41c04:	cmp	r0, r1
   41c08:	bcc	41c24 <flatcc_json_printer_int64_enum_vector_field@@Base+0x240>
   41c0c:	ldr	r2, [r4, #44]	; 0x2c
   41c10:	mov	r0, r4
   41c14:	mov	r1, #0
   41c18:	blx	r2
   41c1c:	ldr	r1, [r4, #16]
   41c20:	ldr	r0, [r4, #20]
   41c24:	sub	r6, r1, r0
   41c28:	cmp	r6, r5
   41c2c:	bcs	41c70 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   41c30:	mov	r1, #32
   41c34:	mov	r2, r6
   41c38:	bl	14ee8 <memset@plt>
   41c3c:	ldr	r0, [r4, #20]
   41c40:	ldr	r2, [r4, #44]	; 0x2c
   41c44:	mov	r1, #0
   41c48:	add	r0, r0, r6
   41c4c:	str	r0, [r4, #20]
   41c50:	mov	r0, r4
   41c54:	blx	r2
   41c58:	ldr	r1, [r4, #16]
   41c5c:	ldr	r0, [r4, #20]
   41c60:	sub	r5, r5, r6
   41c64:	sub	r6, r1, r0
   41c68:	cmp	r5, r6
   41c6c:	bhi	41c30 <flatcc_json_printer_int64_enum_vector_field@@Base+0x24c>
   41c70:	mov	r1, #32
   41c74:	mov	r2, r5
   41c78:	bl	14ee8 <memset@plt>
   41c7c:	ldr	r0, [r4, #20]
   41c80:	add	r0, r0, r5
   41c84:	str	r0, [r4, #20]
   41c88:	b	41ca8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   41c8c:	ldr	r1, [r4, #16]
   41c90:	cmp	r0, r1
   41c94:	bcc	41ca8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c4>
   41c98:	ldr	r2, [r4, #44]	; 0x2c
   41c9c:	mov	r0, r4
   41ca0:	mov	r1, #0
   41ca4:	blx	r2
   41ca8:	ldrd	r2, [r7]
   41cac:	mov	r0, r4
   41cb0:	blx	sl
   41cb4:	add	r7, r7, #8
   41cb8:	cmp	r9, #0
   41cbc:	bne	41bb0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1cc>
   41cc0:	ldrb	r1, [r4, #25]
   41cc4:	ldr	r0, [r4, #20]
   41cc8:	cmp	r1, #0
   41ccc:	beq	41d8c <flatcc_json_printer_int64_enum_vector_field@@Base+0x3a8>
   41cd0:	add	r1, r0, #1
   41cd4:	str	r1, [r4, #20]
   41cd8:	mov	r1, #10
   41cdc:	strb	r1, [r0]
   41ce0:	ldr	r0, [r4, #32]
   41ce4:	sub	r2, r0, #1
   41ce8:	str	r2, [r4, #32]
   41cec:	ldrb	r3, [r4, #25]
   41cf0:	ldr	r0, [r4, #20]
   41cf4:	ldr	r1, [r4, #16]
   41cf8:	mla	r7, r2, r3, r0
   41cfc:	mul	r5, r2, r3
   41d00:	cmp	r7, r1
   41d04:	bls	41d74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   41d08:	cmp	r0, r1
   41d0c:	bcc	41d28 <flatcc_json_printer_int64_enum_vector_field@@Base+0x344>
   41d10:	ldr	r2, [r4, #44]	; 0x2c
   41d14:	mov	r0, r4
   41d18:	mov	r1, #0
   41d1c:	blx	r2
   41d20:	ldr	r1, [r4, #16]
   41d24:	ldr	r0, [r4, #20]
   41d28:	sub	r6, r1, r0
   41d2c:	cmp	r6, r5
   41d30:	bcs	41d74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x390>
   41d34:	mov	r1, #32
   41d38:	mov	r2, r6
   41d3c:	bl	14ee8 <memset@plt>
   41d40:	ldr	r0, [r4, #20]
   41d44:	ldr	r2, [r4, #44]	; 0x2c
   41d48:	mov	r1, #0
   41d4c:	add	r0, r0, r6
   41d50:	str	r0, [r4, #20]
   41d54:	mov	r0, r4
   41d58:	blx	r2
   41d5c:	ldr	r1, [r4, #16]
   41d60:	ldr	r0, [r4, #20]
   41d64:	sub	r5, r5, r6
   41d68:	sub	r6, r1, r0
   41d6c:	cmp	r5, r6
   41d70:	bhi	41d34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   41d74:	mov	r1, #32
   41d78:	mov	r2, r5
   41d7c:	bl	14ee8 <memset@plt>
   41d80:	ldr	r0, [r4, #20]
   41d84:	add	r0, r0, r5
   41d88:	str	r0, [r4, #20]
   41d8c:	add	r1, r0, #1
   41d90:	str	r1, [r4, #20]
   41d94:	mov	r1, #93	; 0x5d
   41d98:	strb	r1, [r0]
   41d9c:	sub	sp, fp, #28
   41da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041da4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   41da4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41da8:	add	fp, sp, #28
   41dac:	sub	sp, sp, #4
   41db0:	mov	r4, r0
   41db4:	ldrb	r0, [r0, #27]
   41db8:	cmp	r0, #0
   41dbc:	beq	41dd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   41dc0:	mov	r0, r4
   41dc4:	sub	sp, fp, #28
   41dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41dcc:	b	3f060 <flatcc_json_printer_bool_vector_field@@Base>
   41dd0:	mov	r0, #4
   41dd4:	add	r0, r0, r2, lsl #1
   41dd8:	ldr	r2, [r1, #8]
   41ddc:	cmp	r0, r2
   41de0:	bge	41e00 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   41de4:	ldr	r2, [r1, #4]
   41de8:	add	r0, r2, r0
   41dec:	ldrh	r0, [r0]
   41df0:	cmp	r0, #0
   41df4:	ldrne	r2, [r1]
   41df8:	addsne	r8, r2, r0
   41dfc:	bne	41e08 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   41e00:	sub	sp, fp, #28
   41e04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41e08:	ldr	r0, [r1, #16]
   41e0c:	ldr	sl, [fp, #12]
   41e10:	ldr	r2, [fp, #8]
   41e14:	add	r7, r0, #1
   41e18:	cmp	r0, #0
   41e1c:	str	r7, [r1, #16]
   41e20:	ldrne	r0, [r4, #20]
   41e24:	addne	r1, r0, #1
   41e28:	strne	r1, [r4, #20]
   41e2c:	movne	r1, #44	; 0x2c
   41e30:	strbne	r1, [r0]
   41e34:	mov	r1, r3
   41e38:	ldr	r0, [r8]
   41e3c:	ldr	r9, [r8, r0]!
   41e40:	mov	r0, r4
   41e44:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   41e48:	ldr	r1, [r4, #32]
   41e4c:	ldr	r0, [r4, #20]
   41e50:	cmp	r9, #0
   41e54:	add	r1, r1, #1
   41e58:	str	r1, [r4, #32]
   41e5c:	add	r1, r0, #1
   41e60:	str	r1, [r4, #20]
   41e64:	mov	r1, #91	; 0x5b
   41e68:	strb	r1, [r0]
   41e6c:	beq	4207c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   41e70:	ldrb	r1, [r4, #25]
   41e74:	ldr	r0, [r4, #20]
   41e78:	cmp	r1, #0
   41e7c:	beq	41f38 <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   41e80:	add	r1, r0, #1
   41e84:	str	r1, [r4, #20]
   41e88:	mov	r1, #10
   41e8c:	strb	r1, [r0]
   41e90:	ldr	r0, [r4, #20]
   41e94:	ldrb	r2, [r4, #25]
   41e98:	ldr	r3, [r4, #32]
   41e9c:	ldr	r1, [r4, #16]
   41ea0:	mla	r7, r3, r2, r0
   41ea4:	mul	r5, r3, r2
   41ea8:	cmp	r7, r1
   41eac:	bls	41f1c <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   41eb0:	cmp	r0, r1
   41eb4:	bcc	41ed0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x12c>
   41eb8:	ldr	r2, [r4, #44]	; 0x2c
   41ebc:	mov	r0, r4
   41ec0:	mov	r1, #0
   41ec4:	blx	r2
   41ec8:	ldr	r1, [r4, #16]
   41ecc:	ldr	r0, [r4, #20]
   41ed0:	sub	r6, r1, r0
   41ed4:	cmp	r6, r5
   41ed8:	bcs	41f1c <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
   41edc:	mov	r1, #32
   41ee0:	mov	r2, r6
   41ee4:	bl	14ee8 <memset@plt>
   41ee8:	ldr	r0, [r4, #20]
   41eec:	ldr	r2, [r4, #44]	; 0x2c
   41ef0:	mov	r1, #0
   41ef4:	add	r0, r0, r6
   41ef8:	str	r0, [r4, #20]
   41efc:	mov	r0, r4
   41f00:	blx	r2
   41f04:	ldr	r1, [r4, #16]
   41f08:	ldr	r0, [r4, #20]
   41f0c:	sub	r5, r5, r6
   41f10:	sub	r6, r1, r0
   41f14:	cmp	r5, r6
   41f18:	bhi	41edc <flatcc_json_printer_bool_enum_vector_field@@Base+0x138>
   41f1c:	mov	r1, #32
   41f20:	mov	r2, r5
   41f24:	bl	14ee8 <memset@plt>
   41f28:	ldr	r0, [r4, #20]
   41f2c:	add	r0, r0, r5
   41f30:	str	r0, [r4, #20]
   41f34:	b	41f54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   41f38:	ldr	r1, [r4, #16]
   41f3c:	cmp	r0, r1
   41f40:	bcc	41f54 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b0>
   41f44:	ldr	r2, [r4, #44]	; 0x2c
   41f48:	mov	r0, r4
   41f4c:	mov	r1, #0
   41f50:	blx	r2
   41f54:	ldrb	r1, [r8, #4]
   41f58:	mov	r0, r4
   41f5c:	blx	sl
   41f60:	subs	r9, r9, #1
   41f64:	beq	4207c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2d8>
   41f68:	add	r7, r8, #5
   41f6c:	mov	r8, #44	; 0x2c
   41f70:	ldr	r0, [r4, #20]
   41f74:	sub	r9, r9, #1
   41f78:	add	r1, r0, #1
   41f7c:	str	r1, [r4, #20]
   41f80:	strb	r8, [r0]
   41f84:	ldrb	r1, [r4, #25]
   41f88:	ldr	r0, [r4, #20]
   41f8c:	cmp	r1, #0
   41f90:	beq	4204c <flatcc_json_printer_bool_enum_vector_field@@Base+0x2a8>
   41f94:	add	r1, r0, #1
   41f98:	str	r1, [r4, #20]
   41f9c:	mov	r1, #10
   41fa0:	strb	r1, [r0]
   41fa4:	ldr	r0, [r4, #20]
   41fa8:	ldrb	r2, [r4, #25]
   41fac:	ldr	r3, [r4, #32]
   41fb0:	ldr	r1, [r4, #16]
   41fb4:	mla	r6, r3, r2, r0
   41fb8:	mul	r5, r3, r2
   41fbc:	cmp	r6, r1
   41fc0:	bls	42030 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   41fc4:	cmp	r0, r1
   41fc8:	bcc	41fe4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x240>
   41fcc:	ldr	r2, [r4, #44]	; 0x2c
   41fd0:	mov	r0, r4
   41fd4:	mov	r1, #0
   41fd8:	blx	r2
   41fdc:	ldr	r1, [r4, #16]
   41fe0:	ldr	r0, [r4, #20]
   41fe4:	sub	r6, r1, r0
   41fe8:	cmp	r6, r5
   41fec:	bcs	42030 <flatcc_json_printer_bool_enum_vector_field@@Base+0x28c>
   41ff0:	mov	r1, #32
   41ff4:	mov	r2, r6
   41ff8:	bl	14ee8 <memset@plt>
   41ffc:	ldr	r0, [r4, #20]
   42000:	ldr	r2, [r4, #44]	; 0x2c
   42004:	mov	r1, #0
   42008:	add	r0, r0, r6
   4200c:	str	r0, [r4, #20]
   42010:	mov	r0, r4
   42014:	blx	r2
   42018:	ldr	r1, [r4, #16]
   4201c:	ldr	r0, [r4, #20]
   42020:	sub	r5, r5, r6
   42024:	sub	r6, r1, r0
   42028:	cmp	r5, r6
   4202c:	bhi	41ff0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x24c>
   42030:	mov	r1, #32
   42034:	mov	r2, r5
   42038:	bl	14ee8 <memset@plt>
   4203c:	ldr	r0, [r4, #20]
   42040:	add	r0, r0, r5
   42044:	str	r0, [r4, #20]
   42048:	b	42068 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   4204c:	ldr	r1, [r4, #16]
   42050:	cmp	r0, r1
   42054:	bcc	42068 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42058:	ldr	r2, [r4, #44]	; 0x2c
   4205c:	mov	r0, r4
   42060:	mov	r1, #0
   42064:	blx	r2
   42068:	ldrb	r1, [r7], #1
   4206c:	mov	r0, r4
   42070:	blx	sl
   42074:	cmp	r9, #0
   42078:	bne	41f70 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1cc>
   4207c:	ldrb	r1, [r4, #25]
   42080:	ldr	r0, [r4, #20]
   42084:	cmp	r1, #0
   42088:	beq	42148 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3a4>
   4208c:	add	r1, r0, #1
   42090:	str	r1, [r4, #20]
   42094:	mov	r1, #10
   42098:	strb	r1, [r0]
   4209c:	ldr	r0, [r4, #32]
   420a0:	sub	r2, r0, #1
   420a4:	str	r2, [r4, #32]
   420a8:	ldrb	r3, [r4, #25]
   420ac:	ldr	r0, [r4, #20]
   420b0:	ldr	r1, [r4, #16]
   420b4:	mla	r7, r2, r3, r0
   420b8:	mul	r5, r2, r3
   420bc:	cmp	r7, r1
   420c0:	bls	42130 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   420c4:	cmp	r0, r1
   420c8:	bcc	420e4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x340>
   420cc:	ldr	r2, [r4, #44]	; 0x2c
   420d0:	mov	r0, r4
   420d4:	mov	r1, #0
   420d8:	blx	r2
   420dc:	ldr	r1, [r4, #16]
   420e0:	ldr	r0, [r4, #20]
   420e4:	sub	r6, r1, r0
   420e8:	cmp	r6, r5
   420ec:	bcs	42130 <flatcc_json_printer_bool_enum_vector_field@@Base+0x38c>
   420f0:	mov	r1, #32
   420f4:	mov	r2, r6
   420f8:	bl	14ee8 <memset@plt>
   420fc:	ldr	r0, [r4, #20]
   42100:	ldr	r2, [r4, #44]	; 0x2c
   42104:	mov	r1, #0
   42108:	add	r0, r0, r6
   4210c:	str	r0, [r4, #20]
   42110:	mov	r0, r4
   42114:	blx	r2
   42118:	ldr	r1, [r4, #16]
   4211c:	ldr	r0, [r4, #20]
   42120:	sub	r5, r5, r6
   42124:	sub	r6, r1, r0
   42128:	cmp	r5, r6
   4212c:	bhi	420f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   42130:	mov	r1, #32
   42134:	mov	r2, r5
   42138:	bl	14ee8 <memset@plt>
   4213c:	ldr	r0, [r4, #20]
   42140:	add	r0, r0, r5
   42144:	str	r0, [r4, #20]
   42148:	add	r1, r0, #1
   4214c:	str	r1, [r4, #20]
   42150:	mov	r1, #93	; 0x5d
   42154:	strb	r1, [r0]
   42158:	sub	sp, fp, #28
   4215c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042160 <flatcc_json_printer_struct_vector_field@@Base>:
   42160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42164:	add	fp, sp, #28
   42168:	sub	sp, sp, #4
   4216c:	mov	r4, r0
   42170:	mov	r0, #4
   42174:	add	r0, r0, r2, lsl #1
   42178:	ldr	r2, [r1, #8]
   4217c:	cmp	r0, r2
   42180:	bge	421a0 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   42184:	ldr	r2, [r1, #4]
   42188:	add	r0, r2, r0
   4218c:	ldrh	r0, [r0]
   42190:	cmp	r0, #0
   42194:	ldrne	r2, [r1]
   42198:	addsne	r6, r2, r0
   4219c:	bne	421a8 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   421a0:	sub	sp, fp, #28
   421a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   421a8:	ldr	r0, [r1, #16]
   421ac:	ldr	r2, [fp, #8]
   421b0:	add	r7, r0, #1
   421b4:	cmp	r0, #0
   421b8:	str	r7, [r1, #16]
   421bc:	ldrne	r0, [r4, #20]
   421c0:	addne	r1, r0, #1
   421c4:	strne	r1, [r4, #20]
   421c8:	movne	r1, #44	; 0x2c
   421cc:	strbne	r1, [r0]
   421d0:	mov	r1, r3
   421d4:	ldr	r0, [r6]
   421d8:	ldr	r5, [r6, r0]!
   421dc:	mov	r0, r4
   421e0:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   421e4:	ldr	r1, [r4, #32]
   421e8:	ldr	r0, [r4, #20]
   421ec:	cmp	r5, #0
   421f0:	add	r1, r1, #1
   421f4:	str	r1, [r4, #32]
   421f8:	add	r1, r0, #1
   421fc:	str	r1, [r4, #20]
   42200:	mov	r1, #91	; 0x5b
   42204:	strb	r1, [r0]
   42208:	beq	42618 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   4220c:	ldrb	r1, [r4, #25]
   42210:	ldr	r0, [r4, #20]
   42214:	add	r9, r6, #4
   42218:	cmp	r1, #0
   4221c:	beq	422d8 <flatcc_json_printer_struct_vector_field@@Base+0x178>
   42220:	add	r1, r0, #1
   42224:	str	r1, [r4, #20]
   42228:	mov	r1, #10
   4222c:	strb	r1, [r0]
   42230:	ldr	r0, [r4, #20]
   42234:	ldrb	r2, [r4, #25]
   42238:	ldr	r3, [r4, #32]
   4223c:	ldr	r1, [r4, #16]
   42240:	mla	r7, r3, r2, r0
   42244:	mul	r6, r3, r2
   42248:	cmp	r7, r1
   4224c:	bls	422bc <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   42250:	cmp	r0, r1
   42254:	bcc	42270 <flatcc_json_printer_struct_vector_field@@Base+0x110>
   42258:	ldr	r2, [r4, #44]	; 0x2c
   4225c:	mov	r0, r4
   42260:	mov	r1, #0
   42264:	blx	r2
   42268:	ldr	r1, [r4, #16]
   4226c:	ldr	r0, [r4, #20]
   42270:	sub	r7, r1, r0
   42274:	cmp	r7, r6
   42278:	bcs	422bc <flatcc_json_printer_struct_vector_field@@Base+0x15c>
   4227c:	mov	r1, #32
   42280:	mov	r2, r7
   42284:	bl	14ee8 <memset@plt>
   42288:	ldr	r0, [r4, #20]
   4228c:	ldr	r2, [r4, #44]	; 0x2c
   42290:	mov	r1, #0
   42294:	add	r0, r0, r7
   42298:	str	r0, [r4, #20]
   4229c:	mov	r0, r4
   422a0:	blx	r2
   422a4:	ldr	r1, [r4, #16]
   422a8:	ldr	r0, [r4, #20]
   422ac:	sub	r6, r6, r7
   422b0:	sub	r7, r1, r0
   422b4:	cmp	r6, r7
   422b8:	bhi	4227c <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   422bc:	mov	r1, #32
   422c0:	mov	r2, r6
   422c4:	bl	14ee8 <memset@plt>
   422c8:	ldr	r0, [r4, #20]
   422cc:	add	r0, r0, r6
   422d0:	str	r0, [r4, #20]
   422d4:	b	422f8 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   422d8:	ldr	r1, [r4, #16]
   422dc:	cmp	r0, r1
   422e0:	bcc	422f8 <flatcc_json_printer_struct_vector_field@@Base+0x198>
   422e4:	ldr	r2, [r4, #44]	; 0x2c
   422e8:	mov	r0, r4
   422ec:	mov	r1, #0
   422f0:	blx	r2
   422f4:	ldr	r0, [r4, #20]
   422f8:	add	r1, r0, #1
   422fc:	ldr	r2, [fp, #16]
   42300:	str	r1, [r4, #20]
   42304:	ldr	r1, [r4, #32]
   42308:	add	r1, r1, #1
   4230c:	str	r1, [r4, #32]
   42310:	mov	r1, #123	; 0x7b
   42314:	strb	r1, [r0]
   42318:	mov	r0, r4
   4231c:	mov	r1, r9
   42320:	blx	r2
   42324:	ldrb	r1, [r4, #25]
   42328:	ldr	r0, [r4, #20]
   4232c:	cmp	r1, #0
   42330:	beq	423f0 <flatcc_json_printer_struct_vector_field@@Base+0x290>
   42334:	add	r1, r0, #1
   42338:	str	r1, [r4, #20]
   4233c:	mov	r1, #10
   42340:	strb	r1, [r0]
   42344:	ldr	r0, [r4, #32]
   42348:	sub	r2, r0, #1
   4234c:	str	r2, [r4, #32]
   42350:	ldrb	r3, [r4, #25]
   42354:	ldr	r0, [r4, #20]
   42358:	ldr	r1, [r4, #16]
   4235c:	mla	r7, r2, r3, r0
   42360:	mul	r6, r2, r3
   42364:	cmp	r7, r1
   42368:	bls	423d8 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   4236c:	cmp	r0, r1
   42370:	bcc	4238c <flatcc_json_printer_struct_vector_field@@Base+0x22c>
   42374:	ldr	r2, [r4, #44]	; 0x2c
   42378:	mov	r0, r4
   4237c:	mov	r1, #0
   42380:	blx	r2
   42384:	ldr	r1, [r4, #16]
   42388:	ldr	r0, [r4, #20]
   4238c:	sub	r7, r1, r0
   42390:	cmp	r7, r6
   42394:	bcs	423d8 <flatcc_json_printer_struct_vector_field@@Base+0x278>
   42398:	mov	r1, #32
   4239c:	mov	r2, r7
   423a0:	bl	14ee8 <memset@plt>
   423a4:	ldr	r0, [r4, #20]
   423a8:	ldr	r2, [r4, #44]	; 0x2c
   423ac:	mov	r1, #0
   423b0:	add	r0, r0, r7
   423b4:	str	r0, [r4, #20]
   423b8:	mov	r0, r4
   423bc:	blx	r2
   423c0:	ldr	r1, [r4, #16]
   423c4:	ldr	r0, [r4, #20]
   423c8:	sub	r6, r6, r7
   423cc:	sub	r7, r1, r0
   423d0:	cmp	r6, r7
   423d4:	bhi	42398 <flatcc_json_printer_struct_vector_field@@Base+0x238>
   423d8:	mov	r1, #32
   423dc:	mov	r2, r6
   423e0:	bl	14ee8 <memset@plt>
   423e4:	ldr	r0, [r4, #20]
   423e8:	add	r0, r0, r6
   423ec:	str	r0, [r4, #20]
   423f0:	add	r1, r0, #1
   423f4:	mov	sl, #125	; 0x7d
   423f8:	subs	r5, r5, #1
   423fc:	str	r1, [r4, #20]
   42400:	strb	sl, [r0]
   42404:	beq	42618 <flatcc_json_printer_struct_vector_field@@Base+0x4b8>
   42408:	mov	r8, #10
   4240c:	ldr	r0, [r4, #20]
   42410:	add	r1, r0, #1
   42414:	str	r1, [r4, #20]
   42418:	mov	r1, #44	; 0x2c
   4241c:	strb	r1, [r0]
   42420:	ldr	r0, [fp, #12]
   42424:	ldrb	r1, [r4, #25]
   42428:	add	r9, r9, r0
   4242c:	ldr	r0, [r4, #20]
   42430:	cmp	r1, #0
   42434:	beq	424ec <flatcc_json_printer_struct_vector_field@@Base+0x38c>
   42438:	add	r1, r0, #1
   4243c:	str	r1, [r4, #20]
   42440:	strb	r8, [r0]
   42444:	ldr	r0, [r4, #20]
   42448:	ldrb	r2, [r4, #25]
   4244c:	ldr	r3, [r4, #32]
   42450:	ldr	r1, [r4, #16]
   42454:	mla	r7, r3, r2, r0
   42458:	mul	r6, r3, r2
   4245c:	cmp	r7, r1
   42460:	bls	424d0 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   42464:	cmp	r0, r1
   42468:	bcc	42484 <flatcc_json_printer_struct_vector_field@@Base+0x324>
   4246c:	ldr	r2, [r4, #44]	; 0x2c
   42470:	mov	r0, r4
   42474:	mov	r1, #0
   42478:	blx	r2
   4247c:	ldr	r1, [r4, #16]
   42480:	ldr	r0, [r4, #20]
   42484:	sub	r7, r1, r0
   42488:	cmp	r7, r6
   4248c:	bcs	424d0 <flatcc_json_printer_struct_vector_field@@Base+0x370>
   42490:	mov	r1, #32
   42494:	mov	r2, r7
   42498:	bl	14ee8 <memset@plt>
   4249c:	ldr	r0, [r4, #20]
   424a0:	ldr	r2, [r4, #44]	; 0x2c
   424a4:	mov	r1, #0
   424a8:	add	r0, r0, r7
   424ac:	str	r0, [r4, #20]
   424b0:	mov	r0, r4
   424b4:	blx	r2
   424b8:	ldr	r1, [r4, #16]
   424bc:	ldr	r0, [r4, #20]
   424c0:	sub	r6, r6, r7
   424c4:	sub	r7, r1, r0
   424c8:	cmp	r6, r7
   424cc:	bhi	42490 <flatcc_json_printer_struct_vector_field@@Base+0x330>
   424d0:	mov	r1, #32
   424d4:	mov	r2, r6
   424d8:	bl	14ee8 <memset@plt>
   424dc:	ldr	r0, [r4, #20]
   424e0:	add	r0, r0, r6
   424e4:	str	r0, [r4, #20]
   424e8:	b	4250c <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   424ec:	ldr	r1, [r4, #16]
   424f0:	cmp	r0, r1
   424f4:	bcc	4250c <flatcc_json_printer_struct_vector_field@@Base+0x3ac>
   424f8:	ldr	r2, [r4, #44]	; 0x2c
   424fc:	mov	r0, r4
   42500:	mov	r1, #0
   42504:	blx	r2
   42508:	ldr	r0, [r4, #20]
   4250c:	add	r1, r0, #1
   42510:	ldr	r2, [fp, #16]
   42514:	sub	r5, r5, #1
   42518:	str	r1, [r4, #20]
   4251c:	ldr	r1, [r4, #32]
   42520:	add	r1, r1, #1
   42524:	str	r1, [r4, #32]
   42528:	mov	r1, #123	; 0x7b
   4252c:	strb	r1, [r0]
   42530:	mov	r0, r4
   42534:	mov	r1, r9
   42538:	blx	r2
   4253c:	ldrb	r1, [r4, #25]
   42540:	ldr	r0, [r4, #20]
   42544:	cmp	r1, #0
   42548:	beq	42604 <flatcc_json_printer_struct_vector_field@@Base+0x4a4>
   4254c:	add	r1, r0, #1
   42550:	str	r1, [r4, #20]
   42554:	strb	r8, [r0]
   42558:	ldr	r0, [r4, #32]
   4255c:	sub	r2, r0, #1
   42560:	str	r2, [r4, #32]
   42564:	ldrb	r3, [r4, #25]
   42568:	ldr	r0, [r4, #20]
   4256c:	ldr	r1, [r4, #16]
   42570:	mla	r7, r2, r3, r0
   42574:	mul	r6, r2, r3
   42578:	cmp	r7, r1
   4257c:	bls	425ec <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   42580:	cmp	r0, r1
   42584:	bcc	425a0 <flatcc_json_printer_struct_vector_field@@Base+0x440>
   42588:	ldr	r2, [r4, #44]	; 0x2c
   4258c:	mov	r0, r4
   42590:	mov	r1, #0
   42594:	blx	r2
   42598:	ldr	r1, [r4, #16]
   4259c:	ldr	r0, [r4, #20]
   425a0:	sub	r7, r1, r0
   425a4:	cmp	r7, r6
   425a8:	bcs	425ec <flatcc_json_printer_struct_vector_field@@Base+0x48c>
   425ac:	mov	r1, #32
   425b0:	mov	r2, r7
   425b4:	bl	14ee8 <memset@plt>
   425b8:	ldr	r0, [r4, #20]
   425bc:	ldr	r2, [r4, #44]	; 0x2c
   425c0:	mov	r1, #0
   425c4:	add	r0, r0, r7
   425c8:	str	r0, [r4, #20]
   425cc:	mov	r0, r4
   425d0:	blx	r2
   425d4:	ldr	r1, [r4, #16]
   425d8:	ldr	r0, [r4, #20]
   425dc:	sub	r6, r6, r7
   425e0:	sub	r7, r1, r0
   425e4:	cmp	r6, r7
   425e8:	bhi	425ac <flatcc_json_printer_struct_vector_field@@Base+0x44c>
   425ec:	mov	r1, #32
   425f0:	mov	r2, r6
   425f4:	bl	14ee8 <memset@plt>
   425f8:	ldr	r0, [r4, #20]
   425fc:	add	r0, r0, r6
   42600:	str	r0, [r4, #20]
   42604:	add	r1, r0, #1
   42608:	cmp	r5, #0
   4260c:	str	r1, [r4, #20]
   42610:	strb	sl, [r0]
   42614:	bne	4240c <flatcc_json_printer_struct_vector_field@@Base+0x2ac>
   42618:	ldrb	r1, [r4, #25]
   4261c:	ldr	r0, [r4, #20]
   42620:	cmp	r1, #0
   42624:	beq	426e4 <flatcc_json_printer_struct_vector_field@@Base+0x584>
   42628:	add	r1, r0, #1
   4262c:	str	r1, [r4, #20]
   42630:	mov	r1, #10
   42634:	strb	r1, [r0]
   42638:	ldr	r0, [r4, #32]
   4263c:	sub	r2, r0, #1
   42640:	str	r2, [r4, #32]
   42644:	ldrb	r3, [r4, #25]
   42648:	ldr	r0, [r4, #20]
   4264c:	ldr	r1, [r4, #16]
   42650:	mla	r7, r2, r3, r0
   42654:	mul	r5, r2, r3
   42658:	cmp	r7, r1
   4265c:	bls	426cc <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   42660:	cmp	r0, r1
   42664:	bcc	42680 <flatcc_json_printer_struct_vector_field@@Base+0x520>
   42668:	ldr	r2, [r4, #44]	; 0x2c
   4266c:	mov	r0, r4
   42670:	mov	r1, #0
   42674:	blx	r2
   42678:	ldr	r1, [r4, #16]
   4267c:	ldr	r0, [r4, #20]
   42680:	sub	r6, r1, r0
   42684:	cmp	r6, r5
   42688:	bcs	426cc <flatcc_json_printer_struct_vector_field@@Base+0x56c>
   4268c:	mov	r1, #32
   42690:	mov	r2, r6
   42694:	bl	14ee8 <memset@plt>
   42698:	ldr	r0, [r4, #20]
   4269c:	ldr	r2, [r4, #44]	; 0x2c
   426a0:	mov	r1, #0
   426a4:	add	r0, r0, r6
   426a8:	str	r0, [r4, #20]
   426ac:	mov	r0, r4
   426b0:	blx	r2
   426b4:	ldr	r1, [r4, #16]
   426b8:	ldr	r0, [r4, #20]
   426bc:	sub	r5, r5, r6
   426c0:	sub	r6, r1, r0
   426c4:	cmp	r5, r6
   426c8:	bhi	4268c <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   426cc:	mov	r1, #32
   426d0:	mov	r2, r5
   426d4:	bl	14ee8 <memset@plt>
   426d8:	ldr	r0, [r4, #20]
   426dc:	add	r0, r0, r5
   426e0:	str	r0, [r4, #20]
   426e4:	add	r1, r0, #1
   426e8:	str	r1, [r4, #20]
   426ec:	mov	r1, #93	; 0x5d
   426f0:	strb	r1, [r0]
   426f4:	sub	sp, fp, #28
   426f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000426fc <flatcc_json_printer_string_vector_field@@Base>:
   426fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42700:	add	fp, sp, #28
   42704:	sub	sp, sp, #4
   42708:	mov	r4, r0
   4270c:	mov	r0, #4
   42710:	add	r0, r0, r2, lsl #1
   42714:	ldr	r2, [r1, #8]
   42718:	cmp	r0, r2
   4271c:	bge	4273c <flatcc_json_printer_string_vector_field@@Base+0x40>
   42720:	ldr	r2, [r1, #4]
   42724:	add	r0, r2, r0
   42728:	ldrh	r0, [r0]
   4272c:	cmp	r0, #0
   42730:	ldrne	r2, [r1]
   42734:	addsne	r5, r2, r0
   42738:	bne	42744 <flatcc_json_printer_string_vector_field@@Base+0x48>
   4273c:	sub	sp, fp, #28
   42740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42744:	ldr	r0, [r1, #16]
   42748:	ldr	r2, [fp, #8]
   4274c:	add	r7, r0, #1
   42750:	cmp	r0, #0
   42754:	str	r7, [r1, #16]
   42758:	ldrne	r0, [r4, #20]
   4275c:	addne	r1, r0, #1
   42760:	strne	r1, [r4, #20]
   42764:	movne	r1, #44	; 0x2c
   42768:	strbne	r1, [r0]
   4276c:	mov	r1, r3
   42770:	ldr	r0, [r5]
   42774:	ldr	r8, [r5, r0]!
   42778:	mov	r0, r4
   4277c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   42780:	ldr	r1, [r4, #32]
   42784:	ldr	r0, [r4, #20]
   42788:	cmp	r8, #0
   4278c:	add	r1, r1, #1
   42790:	str	r1, [r4, #32]
   42794:	add	r1, r0, #1
   42798:	str	r1, [r4, #20]
   4279c:	mov	r1, #91	; 0x5b
   427a0:	strb	r1, [r0]
   427a4:	beq	429d0 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   427a8:	ldrb	r1, [r4, #25]
   427ac:	ldr	r0, [r4, #20]
   427b0:	add	r9, r5, #4
   427b4:	cmp	r1, #0
   427b8:	beq	42874 <flatcc_json_printer_string_vector_field@@Base+0x178>
   427bc:	add	r1, r0, #1
   427c0:	str	r1, [r4, #20]
   427c4:	mov	r1, #10
   427c8:	strb	r1, [r0]
   427cc:	ldr	r0, [r4, #20]
   427d0:	ldrb	r2, [r4, #25]
   427d4:	ldr	r3, [r4, #32]
   427d8:	ldr	r1, [r4, #16]
   427dc:	mla	r7, r3, r2, r0
   427e0:	mul	r5, r3, r2
   427e4:	cmp	r7, r1
   427e8:	bls	42858 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   427ec:	cmp	r0, r1
   427f0:	bcc	4280c <flatcc_json_printer_string_vector_field@@Base+0x110>
   427f4:	ldr	r2, [r4, #44]	; 0x2c
   427f8:	mov	r0, r4
   427fc:	mov	r1, #0
   42800:	blx	r2
   42804:	ldr	r1, [r4, #16]
   42808:	ldr	r0, [r4, #20]
   4280c:	sub	r6, r1, r0
   42810:	cmp	r6, r5
   42814:	bcs	42858 <flatcc_json_printer_string_vector_field@@Base+0x15c>
   42818:	mov	r1, #32
   4281c:	mov	r2, r6
   42820:	bl	14ee8 <memset@plt>
   42824:	ldr	r0, [r4, #20]
   42828:	ldr	r2, [r4, #44]	; 0x2c
   4282c:	mov	r1, #0
   42830:	add	r0, r0, r6
   42834:	str	r0, [r4, #20]
   42838:	mov	r0, r4
   4283c:	blx	r2
   42840:	ldr	r1, [r4, #16]
   42844:	ldr	r0, [r4, #20]
   42848:	sub	r5, r5, r6
   4284c:	sub	r6, r1, r0
   42850:	cmp	r5, r6
   42854:	bhi	42818 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   42858:	mov	r1, #32
   4285c:	mov	r2, r5
   42860:	bl	14ee8 <memset@plt>
   42864:	ldr	r0, [r4, #20]
   42868:	add	r0, r0, r5
   4286c:	str	r0, [r4, #20]
   42870:	b	42890 <flatcc_json_printer_string_vector_field@@Base+0x194>
   42874:	ldr	r1, [r4, #16]
   42878:	cmp	r0, r1
   4287c:	bcc	42890 <flatcc_json_printer_string_vector_field@@Base+0x194>
   42880:	ldr	r2, [r4, #44]	; 0x2c
   42884:	mov	r0, r4
   42888:	mov	r1, #0
   4288c:	blx	r2
   42890:	ldr	r0, [r9]
   42894:	mov	r1, r9
   42898:	ldr	r2, [r1, r0]!
   4289c:	mov	r0, r4
   428a0:	add	r1, r1, #4
   428a4:	bl	3908c <flatcc_json_printer_string@@Base+0x4>
   428a8:	subs	r7, r8, #1
   428ac:	beq	429d0 <flatcc_json_printer_string_vector_field@@Base+0x2d4>
   428b0:	mov	r8, #44	; 0x2c
   428b4:	mov	sl, #10
   428b8:	ldr	r0, [r4, #20]
   428bc:	add	r9, r9, #4
   428c0:	sub	r7, r7, #1
   428c4:	add	r1, r0, #1
   428c8:	str	r1, [r4, #20]
   428cc:	strb	r8, [r0]
   428d0:	ldrb	r1, [r4, #25]
   428d4:	ldr	r0, [r4, #20]
   428d8:	cmp	r1, #0
   428dc:	beq	42994 <flatcc_json_printer_string_vector_field@@Base+0x298>
   428e0:	add	r1, r0, #1
   428e4:	str	r1, [r4, #20]
   428e8:	strb	sl, [r0]
   428ec:	ldr	r0, [r4, #20]
   428f0:	ldrb	r2, [r4, #25]
   428f4:	ldr	r3, [r4, #32]
   428f8:	ldr	r1, [r4, #16]
   428fc:	mla	r6, r3, r2, r0
   42900:	mul	r5, r3, r2
   42904:	cmp	r6, r1
   42908:	bls	42978 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   4290c:	cmp	r0, r1
   42910:	bcc	4292c <flatcc_json_printer_string_vector_field@@Base+0x230>
   42914:	ldr	r2, [r4, #44]	; 0x2c
   42918:	mov	r0, r4
   4291c:	mov	r1, #0
   42920:	blx	r2
   42924:	ldr	r1, [r4, #16]
   42928:	ldr	r0, [r4, #20]
   4292c:	sub	r6, r1, r0
   42930:	cmp	r6, r5
   42934:	bcs	42978 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   42938:	mov	r1, #32
   4293c:	mov	r2, r6
   42940:	bl	14ee8 <memset@plt>
   42944:	ldr	r0, [r4, #20]
   42948:	ldr	r2, [r4, #44]	; 0x2c
   4294c:	mov	r1, #0
   42950:	add	r0, r0, r6
   42954:	str	r0, [r4, #20]
   42958:	mov	r0, r4
   4295c:	blx	r2
   42960:	ldr	r1, [r4, #16]
   42964:	ldr	r0, [r4, #20]
   42968:	sub	r5, r5, r6
   4296c:	sub	r6, r1, r0
   42970:	cmp	r5, r6
   42974:	bhi	42938 <flatcc_json_printer_string_vector_field@@Base+0x23c>
   42978:	mov	r1, #32
   4297c:	mov	r2, r5
   42980:	bl	14ee8 <memset@plt>
   42984:	ldr	r0, [r4, #20]
   42988:	add	r0, r0, r5
   4298c:	str	r0, [r4, #20]
   42990:	b	429b0 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   42994:	ldr	r1, [r4, #16]
   42998:	cmp	r0, r1
   4299c:	bcc	429b0 <flatcc_json_printer_string_vector_field@@Base+0x2b4>
   429a0:	ldr	r2, [r4, #44]	; 0x2c
   429a4:	mov	r0, r4
   429a8:	mov	r1, #0
   429ac:	blx	r2
   429b0:	ldr	r0, [r9]
   429b4:	mov	r1, r9
   429b8:	ldr	r2, [r1, r0]!
   429bc:	mov	r0, r4
   429c0:	add	r1, r1, #4
   429c4:	bl	3908c <flatcc_json_printer_string@@Base+0x4>
   429c8:	cmp	r7, #0
   429cc:	bne	428b8 <flatcc_json_printer_string_vector_field@@Base+0x1bc>
   429d0:	ldrb	r1, [r4, #25]
   429d4:	ldr	r0, [r4, #20]
   429d8:	cmp	r1, #0
   429dc:	beq	42a9c <flatcc_json_printer_string_vector_field@@Base+0x3a0>
   429e0:	add	r1, r0, #1
   429e4:	str	r1, [r4, #20]
   429e8:	mov	r1, #10
   429ec:	strb	r1, [r0]
   429f0:	ldr	r0, [r4, #32]
   429f4:	sub	r2, r0, #1
   429f8:	str	r2, [r4, #32]
   429fc:	ldrb	r3, [r4, #25]
   42a00:	ldr	r0, [r4, #20]
   42a04:	ldr	r1, [r4, #16]
   42a08:	mla	r7, r2, r3, r0
   42a0c:	mul	r5, r2, r3
   42a10:	cmp	r7, r1
   42a14:	bls	42a84 <flatcc_json_printer_string_vector_field@@Base+0x388>
   42a18:	cmp	r0, r1
   42a1c:	bcc	42a38 <flatcc_json_printer_string_vector_field@@Base+0x33c>
   42a20:	ldr	r2, [r4, #44]	; 0x2c
   42a24:	mov	r0, r4
   42a28:	mov	r1, #0
   42a2c:	blx	r2
   42a30:	ldr	r1, [r4, #16]
   42a34:	ldr	r0, [r4, #20]
   42a38:	sub	r6, r1, r0
   42a3c:	cmp	r6, r5
   42a40:	bcs	42a84 <flatcc_json_printer_string_vector_field@@Base+0x388>
   42a44:	mov	r1, #32
   42a48:	mov	r2, r6
   42a4c:	bl	14ee8 <memset@plt>
   42a50:	ldr	r0, [r4, #20]
   42a54:	ldr	r2, [r4, #44]	; 0x2c
   42a58:	mov	r1, #0
   42a5c:	add	r0, r0, r6
   42a60:	str	r0, [r4, #20]
   42a64:	mov	r0, r4
   42a68:	blx	r2
   42a6c:	ldr	r1, [r4, #16]
   42a70:	ldr	r0, [r4, #20]
   42a74:	sub	r5, r5, r6
   42a78:	sub	r6, r1, r0
   42a7c:	cmp	r5, r6
   42a80:	bhi	42a44 <flatcc_json_printer_string_vector_field@@Base+0x348>
   42a84:	mov	r1, #32
   42a88:	mov	r2, r5
   42a8c:	bl	14ee8 <memset@plt>
   42a90:	ldr	r0, [r4, #20]
   42a94:	add	r0, r0, r5
   42a98:	str	r0, [r4, #20]
   42a9c:	add	r1, r0, #1
   42aa0:	str	r1, [r4, #20]
   42aa4:	mov	r1, #93	; 0x5d
   42aa8:	strb	r1, [r0]
   42aac:	sub	sp, fp, #28
   42ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042ab4 <flatcc_json_printer_table_vector_field@@Base>:
   42ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42ab8:	add	fp, sp, #28
   42abc:	sub	sp, sp, #20
   42ac0:	mov	sl, r1
   42ac4:	ldr	r1, [r1, #8]
   42ac8:	mov	r4, r0
   42acc:	mov	r0, #4
   42ad0:	add	r0, r0, r2, lsl #1
   42ad4:	cmp	r0, r1
   42ad8:	bge	42af8 <flatcc_json_printer_table_vector_field@@Base+0x44>
   42adc:	ldr	r1, [sl, #4]
   42ae0:	add	r0, r1, r0
   42ae4:	ldrh	r0, [r0]
   42ae8:	cmp	r0, #0
   42aec:	ldrne	r1, [sl]
   42af0:	addsne	r5, r1, r0
   42af4:	bne	42b00 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   42af8:	sub	sp, fp, #28
   42afc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42b00:	ldr	r0, [sl, #16]
   42b04:	ldr	r2, [fp, #8]
   42b08:	add	r1, r0, #1
   42b0c:	cmp	r0, #0
   42b10:	str	r1, [sl, #16]
   42b14:	ldrne	r0, [r4, #20]
   42b18:	addne	r1, r0, #1
   42b1c:	strne	r1, [r4, #20]
   42b20:	movne	r1, #44	; 0x2c
   42b24:	strbne	r1, [r0]
   42b28:	mov	r1, r3
   42b2c:	ldr	r0, [r5]
   42b30:	ldr	r8, [r5, r0]!
   42b34:	mov	r0, r4
   42b38:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   42b3c:	ldr	r1, [r4, #32]
   42b40:	ldr	r0, [r4, #20]
   42b44:	cmp	r8, #0
   42b48:	add	r1, r1, #1
   42b4c:	str	r1, [r4, #32]
   42b50:	add	r1, r0, #1
   42b54:	str	r1, [r4, #20]
   42b58:	mov	r1, #91	; 0x5b
   42b5c:	strb	r1, [r0]
   42b60:	beq	42e68 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   42b64:	ldr	r0, [sl, #12]
   42b68:	ldr	r6, [fp, #12]
   42b6c:	add	r5, r5, #4
   42b70:	subs	r0, r0, #1
   42b74:	beq	42cbc <flatcc_json_printer_table_vector_field@@Base+0x208>
   42b78:	ldr	r3, [r4, #32]
   42b7c:	ldr	r2, [r4, #20]
   42b80:	ldr	r1, [r5]
   42b84:	add	r3, r3, #1
   42b88:	add	r1, r5, r1
   42b8c:	str	r3, [r4, #32]
   42b90:	add	r3, r2, #1
   42b94:	str	r3, [r4, #20]
   42b98:	mov	r3, #123	; 0x7b
   42b9c:	strb	r3, [r2]
   42ba0:	str	r0, [sp, #12]
   42ba4:	mov	r0, #0
   42ba8:	str	r0, [sp, #16]
   42bac:	str	r1, [sp]
   42bb0:	ldr	r0, [r1]
   42bb4:	sub	r2, r1, r0
   42bb8:	str	r2, [sp, #4]
   42bbc:	ldrh	r0, [r1, -r0]
   42bc0:	mov	r1, sp
   42bc4:	str	r0, [sp, #8]
   42bc8:	mov	r0, r4
   42bcc:	blx	r6
   42bd0:	ldrb	r1, [r4, #25]
   42bd4:	ldr	r0, [r4, #20]
   42bd8:	cmp	r1, #0
   42bdc:	beq	42ca0 <flatcc_json_printer_table_vector_field@@Base+0x1ec>
   42be0:	add	r1, r0, #1
   42be4:	str	r1, [r4, #20]
   42be8:	mov	r1, #10
   42bec:	strb	r1, [r0]
   42bf0:	ldr	r0, [r4, #32]
   42bf4:	sub	r2, r0, #1
   42bf8:	str	r2, [r4, #32]
   42bfc:	ldrb	r3, [r4, #25]
   42c00:	ldr	r0, [r4, #20]
   42c04:	ldr	r1, [r4, #16]
   42c08:	mla	r7, r2, r3, r0
   42c0c:	mul	r6, r2, r3
   42c10:	cmp	r7, r1
   42c14:	bls	42c84 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   42c18:	cmp	r0, r1
   42c1c:	bcc	42c38 <flatcc_json_printer_table_vector_field@@Base+0x184>
   42c20:	ldr	r2, [r4, #44]	; 0x2c
   42c24:	mov	r0, r4
   42c28:	mov	r1, #0
   42c2c:	blx	r2
   42c30:	ldr	r1, [r4, #16]
   42c34:	ldr	r0, [r4, #20]
   42c38:	sub	r7, r1, r0
   42c3c:	cmp	r7, r6
   42c40:	bcs	42c84 <flatcc_json_printer_table_vector_field@@Base+0x1d0>
   42c44:	mov	r1, #32
   42c48:	mov	r2, r7
   42c4c:	bl	14ee8 <memset@plt>
   42c50:	ldr	r0, [r4, #20]
   42c54:	ldr	r2, [r4, #44]	; 0x2c
   42c58:	mov	r1, #0
   42c5c:	add	r0, r0, r7
   42c60:	str	r0, [r4, #20]
   42c64:	mov	r0, r4
   42c68:	blx	r2
   42c6c:	ldr	r1, [r4, #16]
   42c70:	ldr	r0, [r4, #20]
   42c74:	sub	r6, r6, r7
   42c78:	sub	r7, r1, r0
   42c7c:	cmp	r6, r7
   42c80:	bhi	42c44 <flatcc_json_printer_table_vector_field@@Base+0x190>
   42c84:	mov	r1, #32
   42c88:	mov	r2, r6
   42c8c:	bl	14ee8 <memset@plt>
   42c90:	ldr	r0, [r4, #20]
   42c94:	add	r0, r0, r6
   42c98:	ldr	r6, [fp, #12]
   42c9c:	str	r0, [r4, #20]
   42ca0:	add	r1, r0, #1
   42ca4:	str	r1, [r4, #20]
   42ca8:	mov	r1, #125	; 0x7d
   42cac:	strb	r1, [r0]
   42cb0:	subs	r9, r8, #1
   42cb4:	bne	42cd4 <flatcc_json_printer_table_vector_field@@Base+0x220>
   42cb8:	b	42e68 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   42cbc:	ldr	r0, [r4, #36]	; 0x24
   42cc0:	cmp	r0, #0
   42cc4:	moveq	r0, #2
   42cc8:	streq	r0, [r4, #36]	; 0x24
   42ccc:	subs	r9, r8, #1
   42cd0:	beq	42e68 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   42cd4:	mov	r8, #44	; 0x2c
   42cd8:	ldr	r0, [r4, #20]
   42cdc:	sub	r9, r9, #1
   42ce0:	add	r1, r0, #1
   42ce4:	str	r1, [r4, #20]
   42ce8:	strb	r8, [r0]
   42cec:	ldr	r0, [sl, #12]
   42cf0:	ldr	r1, [r5, #4]!
   42cf4:	subs	r0, r0, #1
   42cf8:	beq	42e18 <flatcc_json_printer_table_vector_field@@Base+0x364>
   42cfc:	ldr	r3, [r4, #32]
   42d00:	ldr	r2, [r4, #20]
   42d04:	add	r1, r5, r1
   42d08:	add	r3, r3, #1
   42d0c:	str	r3, [r4, #32]
   42d10:	add	r3, r2, #1
   42d14:	str	r3, [r4, #20]
   42d18:	mov	r3, #123	; 0x7b
   42d1c:	strb	r3, [r2]
   42d20:	str	r0, [sp, #12]
   42d24:	mov	r0, #0
   42d28:	str	r0, [sp, #16]
   42d2c:	str	r1, [sp]
   42d30:	ldr	r0, [r1]
   42d34:	sub	r2, r1, r0
   42d38:	str	r2, [sp, #4]
   42d3c:	ldrh	r0, [r1, -r0]
   42d40:	mov	r1, sp
   42d44:	str	r0, [sp, #8]
   42d48:	mov	r0, r4
   42d4c:	blx	r6
   42d50:	ldrb	r1, [r4, #25]
   42d54:	ldr	r0, [r4, #20]
   42d58:	cmp	r1, #0
   42d5c:	beq	42e50 <flatcc_json_printer_table_vector_field@@Base+0x39c>
   42d60:	add	r1, r0, #1
   42d64:	str	r1, [r4, #20]
   42d68:	mov	r1, #10
   42d6c:	strb	r1, [r0]
   42d70:	ldr	r0, [r4, #32]
   42d74:	sub	r2, r0, #1
   42d78:	str	r2, [r4, #32]
   42d7c:	ldrb	r3, [r4, #25]
   42d80:	ldr	r0, [r4, #20]
   42d84:	ldr	r1, [r4, #16]
   42d88:	mla	r6, r2, r3, r0
   42d8c:	mul	r7, r2, r3
   42d90:	cmp	r6, r1
   42d94:	bls	42e34 <flatcc_json_printer_table_vector_field@@Base+0x380>
   42d98:	cmp	r0, r1
   42d9c:	bcc	42db8 <flatcc_json_printer_table_vector_field@@Base+0x304>
   42da0:	ldr	r2, [r4, #44]	; 0x2c
   42da4:	mov	r0, r4
   42da8:	mov	r1, #0
   42dac:	blx	r2
   42db0:	ldr	r1, [r4, #16]
   42db4:	ldr	r0, [r4, #20]
   42db8:	sub	r6, r1, r0
   42dbc:	cmp	r6, r7
   42dc0:	bcs	42e04 <flatcc_json_printer_table_vector_field@@Base+0x350>
   42dc4:	mov	r1, #32
   42dc8:	mov	r2, r6
   42dcc:	bl	14ee8 <memset@plt>
   42dd0:	ldr	r0, [r4, #20]
   42dd4:	ldr	r2, [r4, #44]	; 0x2c
   42dd8:	mov	r1, #0
   42ddc:	add	r0, r0, r6
   42de0:	str	r0, [r4, #20]
   42de4:	mov	r0, r4
   42de8:	blx	r2
   42dec:	ldr	r1, [r4, #16]
   42df0:	ldr	r0, [r4, #20]
   42df4:	sub	r7, r7, r6
   42df8:	sub	r6, r1, r0
   42dfc:	cmp	r7, r6
   42e00:	bhi	42dc4 <flatcc_json_printer_table_vector_field@@Base+0x310>
   42e04:	ldr	r6, [fp, #12]
   42e08:	mov	r1, #32
   42e0c:	mov	r2, r7
   42e10:	bl	14ee8 <memset@plt>
   42e14:	b	42e44 <flatcc_json_printer_table_vector_field@@Base+0x390>
   42e18:	ldr	r0, [r4, #36]	; 0x24
   42e1c:	cmp	r0, #0
   42e20:	moveq	r0, #2
   42e24:	streq	r0, [r4, #36]	; 0x24
   42e28:	cmp	r9, #0
   42e2c:	bne	42cd8 <flatcc_json_printer_table_vector_field@@Base+0x224>
   42e30:	b	42e68 <flatcc_json_printer_table_vector_field@@Base+0x3b4>
   42e34:	mov	r1, #32
   42e38:	mov	r2, r7
   42e3c:	bl	14ee8 <memset@plt>
   42e40:	ldr	r6, [fp, #12]
   42e44:	ldr	r0, [r4, #20]
   42e48:	add	r0, r0, r7
   42e4c:	str	r0, [r4, #20]
   42e50:	add	r1, r0, #1
   42e54:	str	r1, [r4, #20]
   42e58:	mov	r1, #125	; 0x7d
   42e5c:	strb	r1, [r0]
   42e60:	cmp	r9, #0
   42e64:	bne	42cd8 <flatcc_json_printer_table_vector_field@@Base+0x224>
   42e68:	ldrb	r1, [r4, #25]
   42e6c:	ldr	r0, [r4, #20]
   42e70:	cmp	r1, #0
   42e74:	beq	42f34 <flatcc_json_printer_table_vector_field@@Base+0x480>
   42e78:	add	r1, r0, #1
   42e7c:	str	r1, [r4, #20]
   42e80:	mov	r1, #10
   42e84:	strb	r1, [r0]
   42e88:	ldr	r0, [r4, #32]
   42e8c:	sub	r2, r0, #1
   42e90:	str	r2, [r4, #32]
   42e94:	ldrb	r3, [r4, #25]
   42e98:	ldr	r0, [r4, #20]
   42e9c:	ldr	r1, [r4, #16]
   42ea0:	mla	r7, r2, r3, r0
   42ea4:	mul	r5, r2, r3
   42ea8:	cmp	r7, r1
   42eac:	bls	42f1c <flatcc_json_printer_table_vector_field@@Base+0x468>
   42eb0:	cmp	r0, r1
   42eb4:	bcc	42ed0 <flatcc_json_printer_table_vector_field@@Base+0x41c>
   42eb8:	ldr	r2, [r4, #44]	; 0x2c
   42ebc:	mov	r0, r4
   42ec0:	mov	r1, #0
   42ec4:	blx	r2
   42ec8:	ldr	r1, [r4, #16]
   42ecc:	ldr	r0, [r4, #20]
   42ed0:	sub	r6, r1, r0
   42ed4:	cmp	r6, r5
   42ed8:	bcs	42f1c <flatcc_json_printer_table_vector_field@@Base+0x468>
   42edc:	mov	r1, #32
   42ee0:	mov	r2, r6
   42ee4:	bl	14ee8 <memset@plt>
   42ee8:	ldr	r0, [r4, #20]
   42eec:	ldr	r2, [r4, #44]	; 0x2c
   42ef0:	mov	r1, #0
   42ef4:	add	r0, r0, r6
   42ef8:	str	r0, [r4, #20]
   42efc:	mov	r0, r4
   42f00:	blx	r2
   42f04:	ldr	r1, [r4, #16]
   42f08:	ldr	r0, [r4, #20]
   42f0c:	sub	r5, r5, r6
   42f10:	sub	r6, r1, r0
   42f14:	cmp	r5, r6
   42f18:	bhi	42edc <flatcc_json_printer_table_vector_field@@Base+0x428>
   42f1c:	mov	r1, #32
   42f20:	mov	r2, r5
   42f24:	bl	14ee8 <memset@plt>
   42f28:	ldr	r0, [r4, #20]
   42f2c:	add	r0, r0, r5
   42f30:	str	r0, [r4, #20]
   42f34:	add	r1, r0, #1
   42f38:	str	r1, [r4, #20]
   42f3c:	mov	r1, #93	; 0x5d
   42f40:	strb	r1, [r0]
   42f44:	sub	sp, fp, #28
   42f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042f4c <flatcc_json_printer_union_vector_field@@Base>:
   42f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42f50:	add	fp, sp, #28
   42f54:	sub	sp, sp, #140	; 0x8c
   42f58:	mov	r6, r1
   42f5c:	mov	r9, r0
   42f60:	sub	r1, r2, #1
   42f64:	mov	r0, #4
   42f68:	mov	r4, r3
   42f6c:	mov	r5, #0
   42f70:	mov	r8, #0
   42f74:	str	r1, [sp, #8]
   42f78:	add	r3, r0, r1, lsl #1
   42f7c:	ldr	r1, [r6, #8]
   42f80:	cmp	r3, r1
   42f84:	bge	42fa4 <flatcc_json_printer_union_vector_field@@Base+0x58>
   42f88:	ldr	r7, [r6, #4]
   42f8c:	mov	r8, #0
   42f90:	add	r3, r7, r3
   42f94:	ldrh	r3, [r3]
   42f98:	cmp	r3, #0
   42f9c:	ldrne	r7, [r6]
   42fa0:	addne	r8, r7, r3
   42fa4:	ldr	sl, [fp, #8]
   42fa8:	add	r0, r0, r2, lsl #1
   42fac:	cmp	r0, r1
   42fb0:	bge	42fcc <flatcc_json_printer_union_vector_field@@Base+0x80>
   42fb4:	ldr	r1, [r6, #4]
   42fb8:	add	r0, r1, r0
   42fbc:	ldrh	r0, [r0]
   42fc0:	cmp	r0, #0
   42fc4:	ldrne	r1, [r6]
   42fc8:	addne	r5, r1, r0
   42fcc:	ldr	r0, [r6, #12]
   42fd0:	cmp	sl, #101	; 0x65
   42fd4:	str	r5, [sp, #16]
   42fd8:	str	r0, [sp, #24]
   42fdc:	bge	432e4 <flatcc_json_printer_union_vector_field@@Base+0x398>
   42fe0:	add	r5, sp, #32
   42fe4:	mov	r1, r4
   42fe8:	mov	r2, sl
   42fec:	str	r4, [sp, #12]
   42ff0:	mov	r0, r5
   42ff4:	bl	14e58 <memcpy@plt>
   42ff8:	movw	r0, #29791	; 0x745f
   42ffc:	cmp	r8, #0
   43000:	mov	r1, #101	; 0x65
   43004:	movt	r0, #28793	; 0x7079
   43008:	str	r0, [r5, sl]
   4300c:	add	r0, r5, sl
   43010:	ldr	r5, [sp, #16]
   43014:	strb	r1, [r0, #4]
   43018:	cmpne	r5, #0
   4301c:	bne	43028 <flatcc_json_printer_union_vector_field@@Base+0xdc>
   43020:	sub	sp, fp, #28
   43024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43028:	ldr	r0, [fp, #12]
   4302c:	ldr	r2, [sp, #8]
   43030:	add	r1, sl, #5
   43034:	add	r3, sp, #32
   43038:	str	r1, [sp]
   4303c:	mov	r1, r6
   43040:	str	r0, [sp, #4]
   43044:	mov	r0, r9
   43048:	bl	3fc00 <flatcc_json_printer_utype_enum_vector_field@@Base>
   4304c:	ldr	r0, [r6, #16]
   43050:	add	r7, r9, #20
   43054:	mov	r2, sl
   43058:	add	r1, r0, #1
   4305c:	cmp	r0, #0
   43060:	str	r1, [r6, #16]
   43064:	mov	r6, r5
   43068:	ldrne	r0, [r7]
   4306c:	addne	r1, r0, #1
   43070:	strne	r1, [r7]
   43074:	movne	r1, #44	; 0x2c
   43078:	strbne	r1, [r0]
   4307c:	ldr	r1, [sp, #12]
   43080:	ldr	r0, [r5]
   43084:	ldr	r5, [r8]
   43088:	ldr	r4, [r6, r0]!
   4308c:	str	r0, [sp, #8]
   43090:	mov	r0, r9
   43094:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   43098:	ldr	r1, [r9, #32]
   4309c:	ldr	r0, [r9, #20]
   430a0:	cmp	r4, #0
   430a4:	add	r1, r1, #1
   430a8:	str	r1, [r9, #32]
   430ac:	add	r1, r0, #1
   430b0:	str	r1, [r9, #20]
   430b4:	mov	r1, #91	; 0x5b
   430b8:	strb	r1, [r0]
   430bc:	beq	43200 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   430c0:	add	r5, r8, r5
   430c4:	ldr	r2, [fp, #16]
   430c8:	ldrb	r0, [r5, #4]
   430cc:	cmp	r0, #0
   430d0:	beq	430fc <flatcc_json_printer_union_vector_field@@Base+0x1b0>
   430d4:	add	r1, r6, #4
   430d8:	mov	r8, r2
   430dc:	str	r1, [sp, #20]
   430e0:	strb	r0, [sp, #28]
   430e4:	add	r1, sp, #20
   430e8:	mov	r0, r9
   430ec:	blx	r2
   430f0:	cmp	r4, #1
   430f4:	bne	43154 <flatcc_json_printer_union_vector_field@@Base+0x208>
   430f8:	b	43200 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   430fc:	ldr	r0, [r7]
   43100:	mov	r8, r2
   43104:	add	r1, r0, #1
   43108:	str	r1, [r7]
   4310c:	mov	r1, #110	; 0x6e
   43110:	strb	r1, [r0]
   43114:	ldr	r0, [r7]
   43118:	add	r1, r0, #1
   4311c:	str	r1, [r7]
   43120:	mov	r1, #117	; 0x75
   43124:	strb	r1, [r0]
   43128:	ldr	r0, [r7]
   4312c:	add	r1, r0, #1
   43130:	str	r1, [r7]
   43134:	mov	r1, #108	; 0x6c
   43138:	strb	r1, [r0]
   4313c:	ldr	r0, [r7]
   43140:	add	r2, r0, #1
   43144:	str	r2, [r7]
   43148:	strb	r1, [r0]
   4314c:	cmp	r4, #1
   43150:	beq	43200 <flatcc_json_printer_union_vector_field@@Base+0x2b4>
   43154:	ldr	r0, [sp, #16]
   43158:	ldr	r1, [sp, #8]
   4315c:	add	r5, r5, #5
   43160:	rsb	r4, r4, #1
   43164:	mov	sl, #44	; 0x2c
   43168:	add	r0, r0, r1
   4316c:	add	r6, r0, #8
   43170:	ldrb	r0, [r5]
   43174:	ldr	r1, [r7]
   43178:	add	r2, r1, #1
   4317c:	cmp	r0, #0
   43180:	str	r2, [r7]
   43184:	strb	sl, [r1]
   43188:	beq	431a4 <flatcc_json_printer_union_vector_field@@Base+0x258>
   4318c:	str	r6, [sp, #20]
   43190:	strb	r0, [sp, #28]
   43194:	mov	r0, r9
   43198:	add	r1, sp, #20
   4319c:	blx	r8
   431a0:	b	431f0 <flatcc_json_printer_union_vector_field@@Base+0x2a4>
   431a4:	ldr	r0, [r7]
   431a8:	mov	r2, #108	; 0x6c
   431ac:	add	r1, r0, #1
   431b0:	str	r1, [r7]
   431b4:	mov	r1, #110	; 0x6e
   431b8:	strb	r1, [r0]
   431bc:	ldr	r0, [r7]
   431c0:	add	r1, r0, #1
   431c4:	str	r1, [r7]
   431c8:	mov	r1, #117	; 0x75
   431cc:	strb	r1, [r0]
   431d0:	ldr	r0, [r7]
   431d4:	add	r1, r0, #1
   431d8:	str	r1, [r7]
   431dc:	strb	r2, [r0]
   431e0:	ldr	r0, [r7]
   431e4:	add	r1, r0, #1
   431e8:	str	r1, [r7]
   431ec:	strb	r2, [r0]
   431f0:	add	r6, r6, #4
   431f4:	add	r5, r5, #1
   431f8:	adds	r4, r4, #1
   431fc:	bne	43170 <flatcc_json_printer_union_vector_field@@Base+0x224>
   43200:	ldrb	r1, [r9, #25]
   43204:	ldr	r0, [r9, #20]
   43208:	cmp	r1, #0
   4320c:	beq	432cc <flatcc_json_printer_union_vector_field@@Base+0x380>
   43210:	add	r1, r0, #1
   43214:	str	r1, [r9, #20]
   43218:	mov	r1, #10
   4321c:	strb	r1, [r0]
   43220:	ldr	r0, [r9, #32]
   43224:	sub	r2, r0, #1
   43228:	str	r2, [r9, #32]
   4322c:	ldrb	r3, [r9, #25]
   43230:	ldr	r0, [r9, #20]
   43234:	ldr	r1, [r9, #16]
   43238:	mla	r6, r2, r3, r0
   4323c:	mul	r5, r2, r3
   43240:	cmp	r6, r1
   43244:	bls	432b4 <flatcc_json_printer_union_vector_field@@Base+0x368>
   43248:	cmp	r0, r1
   4324c:	bcc	43268 <flatcc_json_printer_union_vector_field@@Base+0x31c>
   43250:	ldr	r2, [r9, #44]	; 0x2c
   43254:	mov	r0, r9
   43258:	mov	r1, #0
   4325c:	blx	r2
   43260:	ldr	r1, [r9, #16]
   43264:	ldr	r0, [r9, #20]
   43268:	sub	r6, r1, r0
   4326c:	cmp	r6, r5
   43270:	bcs	432b4 <flatcc_json_printer_union_vector_field@@Base+0x368>
   43274:	mov	r1, #32
   43278:	mov	r2, r6
   4327c:	bl	14ee8 <memset@plt>
   43280:	ldr	r0, [r9, #20]
   43284:	ldr	r2, [r9, #44]	; 0x2c
   43288:	mov	r1, #0
   4328c:	add	r0, r0, r6
   43290:	str	r0, [r9, #20]
   43294:	mov	r0, r9
   43298:	blx	r2
   4329c:	ldr	r1, [r9, #16]
   432a0:	ldr	r0, [r9, #20]
   432a4:	sub	r5, r5, r6
   432a8:	sub	r6, r1, r0
   432ac:	cmp	r5, r6
   432b0:	bhi	43274 <flatcc_json_printer_union_vector_field@@Base+0x328>
   432b4:	mov	r1, #32
   432b8:	mov	r2, r5
   432bc:	bl	14ee8 <memset@plt>
   432c0:	ldr	r0, [r7]
   432c4:	add	r0, r0, r5
   432c8:	str	r0, [r7]
   432cc:	add	r1, r0, #1
   432d0:	str	r1, [r7]
   432d4:	mov	r1, #93	; 0x5d
   432d8:	strb	r1, [r0]
   432dc:	sub	sp, fp, #28
   432e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   432e4:	ldr	r0, [r9, #36]	; 0x24
   432e8:	movw	r2, #843	; 0x34b
   432ec:	cmp	r0, #0
   432f0:	moveq	r0, #1
   432f4:	streq	r0, [r9, #36]	; 0x24
   432f8:	ldr	r0, [pc, #20]	; 43314 <flatcc_json_printer_union_vector_field@@Base+0x3c8>
   432fc:	ldr	r1, [pc, #20]	; 43318 <flatcc_json_printer_union_vector_field@@Base+0x3cc>
   43300:	ldr	r3, [pc, #20]	; 4331c <flatcc_json_printer_union_vector_field@@Base+0x3d0>
   43304:	add	r0, pc, r0
   43308:	add	r1, pc, r1
   4330c:	add	r3, pc, r3
   43310:	bl	14f3c <__assert_fail@plt>
   43314:	andeq	r7, r0, sp, lsr sl
   43318:	andeq	r7, r0, r4, asr sl
   4331c:			; <UNDEFINED> instruction: 0x00007ab2

00043320 <flatcc_json_printer_table_field@@Base>:
   43320:	push	{r4, r5, r6, sl, fp, lr}
   43324:	add	fp, sp, #16
   43328:	sub	sp, sp, #24
   4332c:	mov	r5, r1
   43330:	ldr	r1, [r1, #8]
   43334:	mov	r4, r0
   43338:	mov	r0, #4
   4333c:	add	r0, r0, r2, lsl #1
   43340:	cmp	r0, r1
   43344:	bge	43364 <flatcc_json_printer_table_field@@Base+0x44>
   43348:	ldr	r1, [r5, #4]
   4334c:	add	r0, r1, r0
   43350:	ldrh	r0, [r0]
   43354:	cmp	r0, #0
   43358:	ldrne	r1, [r5]
   4335c:	addsne	r6, r1, r0
   43360:	bne	4336c <flatcc_json_printer_table_field@@Base+0x4c>
   43364:	sub	sp, fp, #16
   43368:	pop	{r4, r5, r6, sl, fp, pc}
   4336c:	ldr	r0, [r5, #16]
   43370:	ldr	r2, [fp, #8]
   43374:	add	r1, r0, #1
   43378:	cmp	r0, #0
   4337c:	str	r1, [r5, #16]
   43380:	ldrne	r0, [r4, #20]
   43384:	addne	r1, r0, #1
   43388:	strne	r1, [r4, #20]
   4338c:	movne	r1, #44	; 0x2c
   43390:	strbne	r1, [r0]
   43394:	mov	r0, r4
   43398:	mov	r1, r3
   4339c:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   433a0:	ldr	r0, [r5, #12]
   433a4:	subs	r0, r0, #1
   433a8:	beq	434ec <flatcc_json_printer_table_field@@Base+0x1cc>
   433ac:	ldr	r1, [r6]
   433b0:	ldr	r3, [r4, #20]
   433b4:	ldr	r2, [fp, #12]
   433b8:	add	r1, r6, r1
   433bc:	ldr	r6, [r4, #32]
   433c0:	add	r6, r6, #1
   433c4:	str	r6, [r4, #32]
   433c8:	add	r6, r3, #1
   433cc:	str	r6, [r4, #20]
   433d0:	mov	r6, #123	; 0x7b
   433d4:	strb	r6, [r3]
   433d8:	str	r0, [sp, #16]
   433dc:	mov	r0, #0
   433e0:	str	r0, [sp, #20]
   433e4:	str	r1, [sp, #4]
   433e8:	ldr	r0, [r1]
   433ec:	sub	r3, r1, r0
   433f0:	str	r3, [sp, #8]
   433f4:	ldrh	r0, [r1, -r0]
   433f8:	add	r1, sp, #4
   433fc:	str	r0, [sp, #12]
   43400:	mov	r0, r4
   43404:	blx	r2
   43408:	ldrb	r1, [r4, #25]
   4340c:	ldr	r0, [r4, #20]
   43410:	cmp	r1, #0
   43414:	beq	434d4 <flatcc_json_printer_table_field@@Base+0x1b4>
   43418:	add	r1, r0, #1
   4341c:	str	r1, [r4, #20]
   43420:	mov	r1, #10
   43424:	strb	r1, [r0]
   43428:	ldr	r0, [r4, #32]
   4342c:	sub	r2, r0, #1
   43430:	str	r2, [r4, #32]
   43434:	ldrb	r3, [r4, #25]
   43438:	ldr	r0, [r4, #20]
   4343c:	ldr	r1, [r4, #16]
   43440:	mla	r6, r2, r3, r0
   43444:	mul	r5, r2, r3
   43448:	cmp	r6, r1
   4344c:	bls	434bc <flatcc_json_printer_table_field@@Base+0x19c>
   43450:	cmp	r0, r1
   43454:	bcc	43470 <flatcc_json_printer_table_field@@Base+0x150>
   43458:	ldr	r2, [r4, #44]	; 0x2c
   4345c:	mov	r0, r4
   43460:	mov	r1, #0
   43464:	blx	r2
   43468:	ldr	r1, [r4, #16]
   4346c:	ldr	r0, [r4, #20]
   43470:	sub	r6, r1, r0
   43474:	cmp	r6, r5
   43478:	bcs	434bc <flatcc_json_printer_table_field@@Base+0x19c>
   4347c:	mov	r1, #32
   43480:	mov	r2, r6
   43484:	bl	14ee8 <memset@plt>
   43488:	ldr	r0, [r4, #20]
   4348c:	ldr	r2, [r4, #44]	; 0x2c
   43490:	mov	r1, #0
   43494:	add	r0, r0, r6
   43498:	str	r0, [r4, #20]
   4349c:	mov	r0, r4
   434a0:	blx	r2
   434a4:	ldr	r1, [r4, #16]
   434a8:	ldr	r0, [r4, #20]
   434ac:	sub	r5, r5, r6
   434b0:	sub	r6, r1, r0
   434b4:	cmp	r5, r6
   434b8:	bhi	4347c <flatcc_json_printer_table_field@@Base+0x15c>
   434bc:	mov	r1, #32
   434c0:	mov	r2, r5
   434c4:	bl	14ee8 <memset@plt>
   434c8:	ldr	r0, [r4, #20]
   434cc:	add	r0, r0, r5
   434d0:	str	r0, [r4, #20]
   434d4:	add	r1, r0, #1
   434d8:	str	r1, [r4, #20]
   434dc:	mov	r1, #125	; 0x7d
   434e0:	strb	r1, [r0]
   434e4:	sub	sp, fp, #16
   434e8:	pop	{r4, r5, r6, sl, fp, pc}
   434ec:	ldr	r0, [r4, #36]	; 0x24
   434f0:	cmp	r0, #0
   434f4:	bne	43364 <flatcc_json_printer_table_field@@Base+0x44>
   434f8:	mov	r0, #2
   434fc:	str	r0, [r4, #36]	; 0x24
   43500:	sub	sp, fp, #16
   43504:	pop	{r4, r5, r6, sl, fp, pc}

00043508 <flatcc_json_printer_union_field@@Base>:
   43508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4350c:	add	fp, sp, #28
   43510:	sub	sp, sp, #20
   43514:	mov	r9, r1
   43518:	mov	r4, r0
   4351c:	mov	r0, #2
   43520:	mov	r8, r3
   43524:	lsl	r1, r2, #1
   43528:	add	r3, r0, r2, lsl #1
   4352c:	ldr	r2, [r9, #8]
   43530:	mov	r0, #0
   43534:	cmp	r3, r2
   43538:	bge	43554 <flatcc_json_printer_union_field@@Base+0x4c>
   4353c:	ldr	r7, [r9, #4]
   43540:	add	r3, r7, r3
   43544:	ldrh	r3, [r3]
   43548:	cmp	r3, #0
   4354c:	ldrne	r0, [r9]
   43550:	addne	r0, r0, r3
   43554:	add	r1, r1, #4
   43558:	cmp	r1, r2
   4355c:	bge	43584 <flatcc_json_printer_union_field@@Base+0x7c>
   43560:	ldr	r2, [r9, #4]
   43564:	add	r1, r2, r1
   43568:	ldrh	r1, [r1]
   4356c:	cmp	r1, #0
   43570:	beq	43584 <flatcc_json_printer_union_field@@Base+0x7c>
   43574:	cmp	r0, #0
   43578:	ldrne	r2, [r9]
   4357c:	addsne	r2, r2, r1
   43580:	bne	4358c <flatcc_json_printer_union_field@@Base+0x84>
   43584:	sub	sp, fp, #28
   43588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4358c:	ldrb	r6, [r0]
   43590:	ldr	r0, [r9, #16]
   43594:	ldr	r7, [fp, #8]
   43598:	str	r2, [sp]
   4359c:	add	r1, r0, #1
   435a0:	cmp	r0, #0
   435a4:	str	r1, [r9, #16]
   435a8:	ldrne	r0, [r4, #20]
   435ac:	addne	r1, r0, #1
   435b0:	strne	r1, [r4, #20]
   435b4:	movne	r1, #44	; 0x2c
   435b8:	strbne	r1, [r0]
   435bc:	ldrb	r1, [r4, #25]
   435c0:	ldr	r0, [r4, #20]
   435c4:	cmp	r1, #0
   435c8:	beq	43684 <flatcc_json_printer_union_field@@Base+0x17c>
   435cc:	add	r1, r0, #1
   435d0:	mov	sl, r4
   435d4:	mov	r5, r6
   435d8:	str	r1, [r4, #20]
   435dc:	mov	r1, #10
   435e0:	strb	r1, [r0]
   435e4:	ldr	r1, [sl, #16]!
   435e8:	ldr	r0, [r4, #20]
   435ec:	ldrb	r2, [sl, #9]
   435f0:	ldr	r3, [sl, #16]
   435f4:	mla	r6, r3, r2, r0
   435f8:	mul	r7, r3, r2
   435fc:	cmp	r6, r1
   43600:	bls	436ac <flatcc_json_printer_union_field@@Base+0x1a4>
   43604:	cmp	r0, r1
   43608:	bcc	43624 <flatcc_json_printer_union_field@@Base+0x11c>
   4360c:	ldr	r2, [r4, #44]	; 0x2c
   43610:	mov	r0, r4
   43614:	mov	r1, #0
   43618:	blx	r2
   4361c:	ldr	r1, [r4, #16]
   43620:	ldr	r0, [r4, #20]
   43624:	mov	r6, r5
   43628:	sub	r5, r1, r0
   4362c:	cmp	r5, r7
   43630:	bcs	43674 <flatcc_json_printer_union_field@@Base+0x16c>
   43634:	mov	r1, #32
   43638:	mov	r2, r5
   4363c:	bl	14ee8 <memset@plt>
   43640:	ldr	r0, [r4, #20]
   43644:	ldr	r2, [r4, #44]	; 0x2c
   43648:	mov	r1, #0
   4364c:	add	r0, r0, r5
   43650:	str	r0, [r4, #20]
   43654:	mov	r0, r4
   43658:	blx	r2
   4365c:	ldr	r1, [r4, #16]
   43660:	ldr	r0, [r4, #20]
   43664:	sub	r7, r7, r5
   43668:	sub	r5, r1, r0
   4366c:	cmp	r7, r5
   43670:	bhi	43634 <flatcc_json_printer_union_field@@Base+0x12c>
   43674:	mov	r1, #32
   43678:	mov	r2, r7
   4367c:	bl	14ee8 <memset@plt>
   43680:	b	436bc <flatcc_json_printer_union_field@@Base+0x1b4>
   43684:	mov	sl, r4
   43688:	ldr	r1, [sl, #16]!
   4368c:	cmp	r0, r1
   43690:	bcc	436cc <flatcc_json_printer_union_field@@Base+0x1c4>
   43694:	ldr	r2, [r4, #44]	; 0x2c
   43698:	mov	r0, r4
   4369c:	mov	r1, #0
   436a0:	blx	r2
   436a4:	ldr	r0, [r4, #20]
   436a8:	b	436cc <flatcc_json_printer_union_field@@Base+0x1c4>
   436ac:	mov	r1, #32
   436b0:	mov	r2, r7
   436b4:	bl	14ee8 <memset@plt>
   436b8:	mov	r6, r5
   436bc:	ldr	r0, [r4, #20]
   436c0:	add	r0, r0, r7
   436c4:	ldr	r7, [fp, #8]
   436c8:	str	r0, [r4, #20]
   436cc:	mov	r1, #34	; 0x22
   436d0:	str	r6, [sp, #4]
   436d4:	strb	r1, [r0]
   436d8:	ldrb	r2, [r4, #26]
   436dc:	ldr	r0, [r4, #20]
   436e0:	ldr	r1, [r4, #16]
   436e4:	cmp	r2, #0
   436e8:	addeq	r0, r0, #1
   436ec:	add	r2, r0, r7
   436f0:	str	r0, [r4, #20]
   436f4:	cmp	r2, r1
   436f8:	bcs	4370c <flatcc_json_printer_union_field@@Base+0x204>
   436fc:	mov	r1, r8
   43700:	mov	r2, r7
   43704:	bl	14e58 <memcpy@plt>
   43708:	b	437a0 <flatcc_json_printer_union_field@@Base+0x298>
   4370c:	mov	r5, r8
   43710:	cmp	r0, r1
   43714:	bcc	43730 <flatcc_json_printer_union_field@@Base+0x228>
   43718:	ldr	r2, [r4, #44]	; 0x2c
   4371c:	mov	r0, r4
   43720:	mov	r1, #0
   43724:	blx	r2
   43728:	ldr	r0, [r4, #20]
   4372c:	ldr	r1, [sl]
   43730:	sub	r8, r1, r0
   43734:	mov	r6, r5
   43738:	cmp	r8, r7
   4373c:	bcs	4378c <flatcc_json_printer_union_field@@Base+0x284>
   43740:	ldr	r7, [fp, #8]
   43744:	mov	r6, r5
   43748:	mov	r1, r6
   4374c:	mov	r2, r8
   43750:	bl	14e58 <memcpy@plt>
   43754:	ldr	r0, [r4, #20]
   43758:	ldr	r2, [r4, #44]	; 0x2c
   4375c:	mov	r1, #0
   43760:	add	r0, r0, r8
   43764:	str	r0, [r4, #20]
   43768:	mov	r0, r4
   4376c:	blx	r2
   43770:	ldr	r0, [r4, #20]
   43774:	ldr	r1, [sl]
   43778:	sub	r7, r7, r8
   4377c:	add	r6, r6, r8
   43780:	sub	r8, r1, r0
   43784:	cmp	r7, r8
   43788:	bhi	43748 <flatcc_json_printer_union_field@@Base+0x240>
   4378c:	mov	r1, r6
   43790:	mov	r2, r7
   43794:	bl	14e58 <memcpy@plt>
   43798:	ldr	r6, [sp, #4]
   4379c:	mov	r8, r5
   437a0:	ldr	r0, [r4, #20]
   437a4:	ldr	r1, [r4, #16]
   437a8:	add	r0, r0, r7
   437ac:	add	r2, r0, #5
   437b0:	str	r0, [r4, #20]
   437b4:	cmp	r2, r1
   437b8:	bcs	437dc <flatcc_json_printer_union_field@@Base+0x2d4>
   437bc:	ldr	sl, [sp]
   437c0:	mov	r1, #101	; 0x65
   437c4:	mov	r7, #5
   437c8:	strb	r1, [r0, #4]
   437cc:	movw	r1, #29791	; 0x745f
   437d0:	movt	r1, #28793	; 0x7079
   437d4:	str	r1, [r0]
   437d8:	b	4387c <flatcc_json_printer_union_field@@Base+0x374>
   437dc:	cmp	r0, r1
   437e0:	bcc	437fc <flatcc_json_printer_union_field@@Base+0x2f4>
   437e4:	ldr	r2, [r4, #44]	; 0x2c
   437e8:	mov	r0, r4
   437ec:	mov	r1, #0
   437f0:	blx	r2
   437f4:	ldr	r0, [r4, #20]
   437f8:	ldr	r1, [sl]
   437fc:	sub	r5, r1, r0
   43800:	cmp	r5, #4
   43804:	bhi	4385c <flatcc_json_printer_union_field@@Base+0x354>
   43808:	ldr	r6, [pc, #496]	; 43a00 <flatcc_json_printer_union_field@@Base+0x4f8>
   4380c:	mov	r7, #5
   43810:	add	r6, pc, r6
   43814:	mov	r1, r6
   43818:	mov	r2, r5
   4381c:	bl	14e58 <memcpy@plt>
   43820:	ldr	r0, [r4, #20]
   43824:	ldr	r2, [r4, #44]	; 0x2c
   43828:	mov	r1, #0
   4382c:	add	r0, r0, r5
   43830:	str	r0, [r4, #20]
   43834:	mov	r0, r4
   43838:	blx	r2
   4383c:	ldr	r0, [r4, #20]
   43840:	ldr	r1, [sl]
   43844:	sub	r7, r7, r5
   43848:	add	r6, r6, r5
   4384c:	sub	r5, r1, r0
   43850:	cmp	r7, r5
   43854:	bhi	43814 <flatcc_json_printer_union_field@@Base+0x30c>
   43858:	b	43868 <flatcc_json_printer_union_field@@Base+0x360>
   4385c:	ldr	r6, [pc, #408]	; 439fc <flatcc_json_printer_union_field@@Base+0x4f4>
   43860:	mov	r7, #5
   43864:	add	r6, pc, r6
   43868:	ldr	sl, [sp]
   4386c:	mov	r1, r6
   43870:	mov	r2, r7
   43874:	bl	14e58 <memcpy@plt>
   43878:	ldr	r6, [sp, #4]
   4387c:	ldr	r0, [r4, #20]
   43880:	add	r1, r0, r7
   43884:	str	r1, [r4, #20]
   43888:	mov	r1, #34	; 0x22
   4388c:	strb	r1, [r0, r7]
   43890:	ldrb	r0, [r4, #26]
   43894:	ldr	r1, [r4, #20]
   43898:	cmp	r0, #0
   4389c:	addeq	r1, r1, #1
   438a0:	add	r0, r1, #1
   438a4:	str	r0, [r4, #20]
   438a8:	mov	r0, #58	; 0x3a
   438ac:	strb	r0, [r1]
   438b0:	mov	r1, #32
   438b4:	ldr	r0, [r4, #20]
   438b8:	strb	r1, [r0]
   438bc:	ldrb	r1, [r4, #25]
   438c0:	ldr	r0, [r4, #20]
   438c4:	cmp	r1, #0
   438c8:	addne	r0, r0, #1
   438cc:	str	r0, [r4, #20]
   438d0:	ldrb	r1, [r4, #27]
   438d4:	cmp	r1, #0
   438d8:	beq	4392c <flatcc_json_printer_union_field@@Base+0x424>
   438dc:	mov	r1, #0
   438e0:	cmp	r6, #100	; 0x64
   438e4:	bcc	4394c <flatcc_json_printer_union_field@@Base+0x444>
   438e8:	strb	r1, [r0, #3]
   438ec:	movw	r1, #34079	; 0x851f
   438f0:	movt	r1, #20971	; 0x51eb
   438f4:	umull	r1, r2, r6, r1
   438f8:	mov	r1, #48	; 0x30
   438fc:	orr	r1, r1, r2, lsr #5
   43900:	strb	r1, [r0]
   43904:	lsr	r1, r2, #5
   43908:	mov	r2, #100	; 0x64
   4390c:	mls	r1, r1, r2, r6
   43910:	ldr	r2, [pc, #236]	; 43a04 <flatcc_json_printer_union_field@@Base+0x4fc>
   43914:	add	r2, pc, r2
   43918:	add	r1, r2, r1, lsl #1
   4391c:	ldrh	r1, [r1]
   43920:	strh	r1, [r0, #1]
   43924:	mov	r0, #3
   43928:	b	4399c <flatcc_json_printer_union_field@@Base+0x494>
   4392c:	ldr	r2, [fp, #12]
   43930:	mov	r0, r4
   43934:	mov	r1, r6
   43938:	blx	r2
   4393c:	ldr	r2, [fp, #8]
   43940:	cmp	r6, #0
   43944:	bne	439b4 <flatcc_json_printer_union_field@@Base+0x4ac>
   43948:	b	43584 <flatcc_json_printer_union_field@@Base+0x7c>
   4394c:	cmp	r6, #10
   43950:	bcc	4398c <flatcc_json_printer_union_field@@Base+0x484>
   43954:	strb	r1, [r0, #2]
   43958:	movw	r1, #34079	; 0x851f
   4395c:	movt	r1, #20971	; 0x51eb
   43960:	umull	r1, r2, r6, r1
   43964:	lsr	r1, r2, #5
   43968:	mov	r2, #100	; 0x64
   4396c:	mls	r1, r1, r2, r6
   43970:	ldr	r2, [pc, #144]	; 43a08 <flatcc_json_printer_union_field@@Base+0x500>
   43974:	add	r2, pc, r2
   43978:	add	r1, r2, r1, lsl #1
   4397c:	ldrh	r1, [r1]
   43980:	strh	r1, [r0]
   43984:	mov	r0, #2
   43988:	b	4399c <flatcc_json_printer_union_field@@Base+0x494>
   4398c:	strb	r1, [r0, #1]
   43990:	add	r1, r6, #48	; 0x30
   43994:	strb	r1, [r0]
   43998:	mov	r0, #1
   4399c:	ldr	r1, [r4, #20]
   439a0:	ldr	r2, [fp, #8]
   439a4:	add	r0, r1, r0
   439a8:	str	r0, [r4, #20]
   439ac:	cmp	r6, #0
   439b0:	beq	43584 <flatcc_json_printer_union_field@@Base+0x7c>
   439b4:	ldr	r0, [r4, #20]
   439b8:	ldr	r5, [fp, #16]
   439bc:	add	r1, r0, #1
   439c0:	str	r1, [r4, #20]
   439c4:	mov	r1, #44	; 0x2c
   439c8:	strb	r1, [r0]
   439cc:	mov	r0, r4
   439d0:	mov	r1, r8
   439d4:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   439d8:	ldr	r0, [r9, #12]
   439dc:	strb	r6, [sp, #16]
   439e0:	str	sl, [sp, #8]
   439e4:	add	r1, sp, #8
   439e8:	str	r0, [sp, #12]
   439ec:	mov	r0, r4
   439f0:	blx	r5
   439f4:	sub	sp, fp, #28
   439f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   439fc:	andeq	r7, r0, r4, lsr #12
   43a00:	andeq	r7, r0, r8, ror r6
   43a04:	andeq	r7, r0, fp, asr #14
   43a08:	andeq	r7, r0, fp, ror #13

00043a0c <flatcc_json_printer_union_table@@Base>:
   43a0c:	push	{r4, r5, r6, sl, fp, lr}
   43a10:	add	fp, sp, #16
   43a14:	sub	sp, sp, #24
   43a18:	mov	r4, r0
   43a1c:	ldr	r0, [r1, #4]
   43a20:	subs	r0, r0, #1
   43a24:	beq	43b68 <flatcc_json_printer_union_table@@Base+0x15c>
   43a28:	ldr	r1, [r1]
   43a2c:	ldr	r6, [r4, #32]
   43a30:	ldr	r3, [r1]
   43a34:	add	r6, r6, #1
   43a38:	add	r1, r1, r3
   43a3c:	ldr	r3, [r4, #20]
   43a40:	str	r6, [r4, #32]
   43a44:	add	r6, r3, #1
   43a48:	str	r6, [r4, #20]
   43a4c:	mov	r6, #123	; 0x7b
   43a50:	strb	r6, [r3]
   43a54:	str	r0, [sp, #16]
   43a58:	mov	r0, #0
   43a5c:	str	r0, [sp, #20]
   43a60:	str	r1, [sp, #4]
   43a64:	ldr	r0, [r1]
   43a68:	sub	r3, r1, r0
   43a6c:	str	r3, [sp, #8]
   43a70:	ldrh	r0, [r1, -r0]
   43a74:	add	r1, sp, #4
   43a78:	str	r0, [sp, #12]
   43a7c:	mov	r0, r4
   43a80:	blx	r2
   43a84:	ldrb	r1, [r4, #25]
   43a88:	ldr	r0, [r4, #20]
   43a8c:	cmp	r1, #0
   43a90:	beq	43b50 <flatcc_json_printer_union_table@@Base+0x144>
   43a94:	add	r1, r0, #1
   43a98:	str	r1, [r4, #20]
   43a9c:	mov	r1, #10
   43aa0:	strb	r1, [r0]
   43aa4:	ldr	r0, [r4, #32]
   43aa8:	sub	r2, r0, #1
   43aac:	str	r2, [r4, #32]
   43ab0:	ldrb	r3, [r4, #25]
   43ab4:	ldr	r0, [r4, #20]
   43ab8:	ldr	r1, [r4, #16]
   43abc:	mla	r6, r2, r3, r0
   43ac0:	mul	r5, r2, r3
   43ac4:	cmp	r6, r1
   43ac8:	bls	43b38 <flatcc_json_printer_union_table@@Base+0x12c>
   43acc:	cmp	r0, r1
   43ad0:	bcc	43aec <flatcc_json_printer_union_table@@Base+0xe0>
   43ad4:	ldr	r2, [r4, #44]	; 0x2c
   43ad8:	mov	r0, r4
   43adc:	mov	r1, #0
   43ae0:	blx	r2
   43ae4:	ldr	r1, [r4, #16]
   43ae8:	ldr	r0, [r4, #20]
   43aec:	sub	r6, r1, r0
   43af0:	cmp	r6, r5
   43af4:	bcs	43b38 <flatcc_json_printer_union_table@@Base+0x12c>
   43af8:	mov	r1, #32
   43afc:	mov	r2, r6
   43b00:	bl	14ee8 <memset@plt>
   43b04:	ldr	r0, [r4, #20]
   43b08:	ldr	r2, [r4, #44]	; 0x2c
   43b0c:	mov	r1, #0
   43b10:	add	r0, r0, r6
   43b14:	str	r0, [r4, #20]
   43b18:	mov	r0, r4
   43b1c:	blx	r2
   43b20:	ldr	r1, [r4, #16]
   43b24:	ldr	r0, [r4, #20]
   43b28:	sub	r5, r5, r6
   43b2c:	sub	r6, r1, r0
   43b30:	cmp	r5, r6
   43b34:	bhi	43af8 <flatcc_json_printer_union_table@@Base+0xec>
   43b38:	mov	r1, #32
   43b3c:	mov	r2, r5
   43b40:	bl	14ee8 <memset@plt>
   43b44:	ldr	r0, [r4, #20]
   43b48:	add	r0, r0, r5
   43b4c:	str	r0, [r4, #20]
   43b50:	add	r1, r0, #1
   43b54:	str	r1, [r4, #20]
   43b58:	mov	r1, #125	; 0x7d
   43b5c:	strb	r1, [r0]
   43b60:	sub	sp, fp, #16
   43b64:	pop	{r4, r5, r6, sl, fp, pc}
   43b68:	ldr	r0, [r4, #36]	; 0x24
   43b6c:	cmp	r0, #0
   43b70:	beq	43b7c <flatcc_json_printer_union_table@@Base+0x170>
   43b74:	sub	sp, fp, #16
   43b78:	pop	{r4, r5, r6, sl, fp, pc}
   43b7c:	mov	r0, #2
   43b80:	str	r0, [r4, #36]	; 0x24
   43b84:	sub	sp, fp, #16
   43b88:	pop	{r4, r5, r6, sl, fp, pc}

00043b8c <flatcc_json_printer_union_struct@@Base>:
   43b8c:	push	{r4, r5, r6, sl, fp, lr}
   43b90:	add	fp, sp, #16
   43b94:	mov	r4, r0
   43b98:	ldr	r0, [r0, #20]
   43b9c:	ldr	r3, [r4, #32]
   43ba0:	add	r3, r3, #1
   43ba4:	str	r3, [r4, #32]
   43ba8:	add	r3, r0, #1
   43bac:	str	r3, [r4, #20]
   43bb0:	mov	r3, #123	; 0x7b
   43bb4:	strb	r3, [r0]
   43bb8:	ldr	r0, [r1]
   43bbc:	ldr	r1, [r0]
   43bc0:	add	r1, r0, r1
   43bc4:	mov	r0, r4
   43bc8:	blx	r2
   43bcc:	ldrb	r1, [r4, #25]
   43bd0:	ldr	r0, [r4, #20]
   43bd4:	cmp	r1, #0
   43bd8:	beq	43c98 <flatcc_json_printer_union_struct@@Base+0x10c>
   43bdc:	add	r1, r0, #1
   43be0:	str	r1, [r4, #20]
   43be4:	mov	r1, #10
   43be8:	strb	r1, [r0]
   43bec:	ldr	r0, [r4, #32]
   43bf0:	sub	r2, r0, #1
   43bf4:	str	r2, [r4, #32]
   43bf8:	ldrb	r3, [r4, #25]
   43bfc:	ldr	r0, [r4, #20]
   43c00:	ldr	r1, [r4, #16]
   43c04:	mla	r6, r2, r3, r0
   43c08:	mul	r5, r2, r3
   43c0c:	cmp	r6, r1
   43c10:	bls	43c80 <flatcc_json_printer_union_struct@@Base+0xf4>
   43c14:	cmp	r0, r1
   43c18:	bcc	43c34 <flatcc_json_printer_union_struct@@Base+0xa8>
   43c1c:	ldr	r2, [r4, #44]	; 0x2c
   43c20:	mov	r0, r4
   43c24:	mov	r1, #0
   43c28:	blx	r2
   43c2c:	ldr	r1, [r4, #16]
   43c30:	ldr	r0, [r4, #20]
   43c34:	sub	r6, r1, r0
   43c38:	cmp	r6, r5
   43c3c:	bcs	43c80 <flatcc_json_printer_union_struct@@Base+0xf4>
   43c40:	mov	r1, #32
   43c44:	mov	r2, r6
   43c48:	bl	14ee8 <memset@plt>
   43c4c:	ldr	r0, [r4, #20]
   43c50:	ldr	r2, [r4, #44]	; 0x2c
   43c54:	mov	r1, #0
   43c58:	add	r0, r0, r6
   43c5c:	str	r0, [r4, #20]
   43c60:	mov	r0, r4
   43c64:	blx	r2
   43c68:	ldr	r1, [r4, #16]
   43c6c:	ldr	r0, [r4, #20]
   43c70:	sub	r5, r5, r6
   43c74:	sub	r6, r1, r0
   43c78:	cmp	r5, r6
   43c7c:	bhi	43c40 <flatcc_json_printer_union_struct@@Base+0xb4>
   43c80:	mov	r1, #32
   43c84:	mov	r2, r5
   43c88:	bl	14ee8 <memset@plt>
   43c8c:	ldr	r0, [r4, #20]
   43c90:	add	r0, r0, r5
   43c94:	str	r0, [r4, #20]
   43c98:	add	r1, r0, #1
   43c9c:	str	r1, [r4, #20]
   43ca0:	mov	r1, #125	; 0x7d
   43ca4:	strb	r1, [r0]
   43ca8:	pop	{r4, r5, r6, sl, fp, pc}

00043cac <flatcc_json_printer_union_string@@Base>:
   43cac:	ldr	r1, [r1]
   43cb0:	ldr	r2, [r1]
   43cb4:	ldr	r2, [r1, r2]!
   43cb8:	add	r1, r1, #4
   43cbc:	b	3908c <flatcc_json_printer_string@@Base+0x4>

00043cc0 <flatcc_json_printer_embedded_struct_field@@Base>:
   43cc0:	push	{r4, r5, r6, r7, fp, lr}
   43cc4:	add	fp, sp, #16
   43cc8:	mov	r5, r3
   43ccc:	mov	r3, r1
   43cd0:	mov	r4, r0
   43cd4:	add	r7, fp, #8
   43cd8:	mov	r6, r2
   43cdc:	cmp	r3, #0
   43ce0:	ldm	r7, {r1, r2, r7}
   43ce4:	ldrne	r0, [r4, #20]
   43ce8:	addne	r3, r0, #1
   43cec:	strne	r3, [r4, #20]
   43cf0:	movne	r3, #44	; 0x2c
   43cf4:	strbne	r3, [r0]
   43cf8:	mov	r0, r4
   43cfc:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   43d00:	ldr	r1, [r4, #32]
   43d04:	ldr	r0, [r4, #20]
   43d08:	add	r1, r1, #1
   43d0c:	str	r1, [r4, #32]
   43d10:	add	r1, r0, #1
   43d14:	str	r1, [r4, #20]
   43d18:	mov	r1, #123	; 0x7b
   43d1c:	strb	r1, [r0]
   43d20:	add	r1, r6, r5
   43d24:	mov	r0, r4
   43d28:	blx	r7
   43d2c:	ldrb	r1, [r4, #25]
   43d30:	ldr	r0, [r4, #20]
   43d34:	cmp	r1, #0
   43d38:	beq	43df8 <flatcc_json_printer_embedded_struct_field@@Base+0x138>
   43d3c:	add	r1, r0, #1
   43d40:	str	r1, [r4, #20]
   43d44:	mov	r1, #10
   43d48:	strb	r1, [r0]
   43d4c:	ldr	r0, [r4, #32]
   43d50:	sub	r2, r0, #1
   43d54:	str	r2, [r4, #32]
   43d58:	ldrb	r3, [r4, #25]
   43d5c:	ldr	r0, [r4, #20]
   43d60:	ldr	r1, [r4, #16]
   43d64:	mla	r7, r2, r3, r0
   43d68:	mul	r5, r2, r3
   43d6c:	cmp	r7, r1
   43d70:	bls	43de0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   43d74:	cmp	r0, r1
   43d78:	bcc	43d94 <flatcc_json_printer_embedded_struct_field@@Base+0xd4>
   43d7c:	ldr	r2, [r4, #44]	; 0x2c
   43d80:	mov	r0, r4
   43d84:	mov	r1, #0
   43d88:	blx	r2
   43d8c:	ldr	r1, [r4, #16]
   43d90:	ldr	r0, [r4, #20]
   43d94:	sub	r6, r1, r0
   43d98:	cmp	r6, r5
   43d9c:	bcs	43de0 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
   43da0:	mov	r1, #32
   43da4:	mov	r2, r6
   43da8:	bl	14ee8 <memset@plt>
   43dac:	ldr	r0, [r4, #20]
   43db0:	ldr	r2, [r4, #44]	; 0x2c
   43db4:	mov	r1, #0
   43db8:	add	r0, r0, r6
   43dbc:	str	r0, [r4, #20]
   43dc0:	mov	r0, r4
   43dc4:	blx	r2
   43dc8:	ldr	r1, [r4, #16]
   43dcc:	ldr	r0, [r4, #20]
   43dd0:	sub	r5, r5, r6
   43dd4:	sub	r6, r1, r0
   43dd8:	cmp	r5, r6
   43ddc:	bhi	43da0 <flatcc_json_printer_embedded_struct_field@@Base+0xe0>
   43de0:	mov	r1, #32
   43de4:	mov	r2, r5
   43de8:	bl	14ee8 <memset@plt>
   43dec:	ldr	r0, [r4, #20]
   43df0:	add	r0, r0, r5
   43df4:	str	r0, [r4, #20]
   43df8:	add	r1, r0, #1
   43dfc:	str	r1, [r4, #20]
   43e00:	mov	r1, #125	; 0x7d
   43e04:	strb	r1, [r0]
   43e08:	pop	{r4, r5, r6, r7, fp, pc}

00043e0c <flatcc_json_printer_struct_field@@Base>:
   43e0c:	push	{r4, r5, r6, r7, fp, lr}
   43e10:	add	fp, sp, #16
   43e14:	mov	r4, r0
   43e18:	mov	r0, #4
   43e1c:	add	r0, r0, r2, lsl #1
   43e20:	ldr	r2, [r1, #8]
   43e24:	cmp	r0, r2
   43e28:	popge	{r4, r5, r6, r7, fp, pc}
   43e2c:	ldr	r2, [r1, #4]
   43e30:	add	r0, r2, r0
   43e34:	ldrh	r0, [r0]
   43e38:	cmp	r0, #0
   43e3c:	ldrne	r2, [r1]
   43e40:	addsne	r5, r2, r0
   43e44:	bne	43e4c <flatcc_json_printer_struct_field@@Base+0x40>
   43e48:	pop	{r4, r5, r6, r7, fp, pc}
   43e4c:	ldr	r0, [r1, #16]
   43e50:	ldr	r2, [fp, #8]
   43e54:	ldr	r7, [fp, #12]
   43e58:	add	r6, r0, #1
   43e5c:	cmp	r0, #0
   43e60:	str	r6, [r1, #16]
   43e64:	ldrne	r0, [r4, #20]
   43e68:	addne	r1, r0, #1
   43e6c:	strne	r1, [r4, #20]
   43e70:	movne	r1, #44	; 0x2c
   43e74:	strbne	r1, [r0]
   43e78:	mov	r0, r4
   43e7c:	mov	r1, r3
   43e80:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   43e84:	ldr	r1, [r4, #32]
   43e88:	ldr	r0, [r4, #20]
   43e8c:	add	r1, r1, #1
   43e90:	str	r1, [r4, #32]
   43e94:	add	r1, r0, #1
   43e98:	str	r1, [r4, #20]
   43e9c:	mov	r1, #123	; 0x7b
   43ea0:	strb	r1, [r0]
   43ea4:	mov	r0, r4
   43ea8:	mov	r1, r5
   43eac:	blx	r7
   43eb0:	ldrb	r1, [r4, #25]
   43eb4:	ldr	r0, [r4, #20]
   43eb8:	cmp	r1, #0
   43ebc:	beq	43f7c <flatcc_json_printer_struct_field@@Base+0x170>
   43ec0:	add	r1, r0, #1
   43ec4:	str	r1, [r4, #20]
   43ec8:	mov	r1, #10
   43ecc:	strb	r1, [r0]
   43ed0:	ldr	r0, [r4, #32]
   43ed4:	sub	r2, r0, #1
   43ed8:	str	r2, [r4, #32]
   43edc:	ldrb	r3, [r4, #25]
   43ee0:	ldr	r0, [r4, #20]
   43ee4:	ldr	r1, [r4, #16]
   43ee8:	mla	r7, r2, r3, r0
   43eec:	mul	r5, r2, r3
   43ef0:	cmp	r7, r1
   43ef4:	bls	43f64 <flatcc_json_printer_struct_field@@Base+0x158>
   43ef8:	cmp	r0, r1
   43efc:	bcc	43f18 <flatcc_json_printer_struct_field@@Base+0x10c>
   43f00:	ldr	r2, [r4, #44]	; 0x2c
   43f04:	mov	r0, r4
   43f08:	mov	r1, #0
   43f0c:	blx	r2
   43f10:	ldr	r1, [r4, #16]
   43f14:	ldr	r0, [r4, #20]
   43f18:	sub	r6, r1, r0
   43f1c:	cmp	r6, r5
   43f20:	bcs	43f64 <flatcc_json_printer_struct_field@@Base+0x158>
   43f24:	mov	r1, #32
   43f28:	mov	r2, r6
   43f2c:	bl	14ee8 <memset@plt>
   43f30:	ldr	r0, [r4, #20]
   43f34:	ldr	r2, [r4, #44]	; 0x2c
   43f38:	mov	r1, #0
   43f3c:	add	r0, r0, r6
   43f40:	str	r0, [r4, #20]
   43f44:	mov	r0, r4
   43f48:	blx	r2
   43f4c:	ldr	r1, [r4, #16]
   43f50:	ldr	r0, [r4, #20]
   43f54:	sub	r5, r5, r6
   43f58:	sub	r6, r1, r0
   43f5c:	cmp	r5, r6
   43f60:	bhi	43f24 <flatcc_json_printer_struct_field@@Base+0x118>
   43f64:	mov	r1, #32
   43f68:	mov	r2, r5
   43f6c:	bl	14ee8 <memset@plt>
   43f70:	ldr	r0, [r4, #20]
   43f74:	add	r0, r0, r5
   43f78:	str	r0, [r4, #20]
   43f7c:	add	r1, r0, #1
   43f80:	str	r1, [r4, #20]
   43f84:	mov	r1, #125	; 0x7d
   43f88:	strb	r1, [r0]
   43f8c:	pop	{r4, r5, r6, r7, fp, pc}

00043f90 <flatcc_json_printer_struct_as_root@@Base>:
   43f90:	push	{r4, r5, r6, sl, fp, lr}
   43f94:	add	fp, sp, #16
   43f98:	sub	sp, sp, #8
   43f9c:	cmp	r1, #0
   43fa0:	mov	r4, r0
   43fa4:	mov	r0, #0
   43fa8:	cmpne	r2, #7
   43fac:	str	r0, [sp, #4]
   43fb0:	bls	44164 <flatcc_json_printer_struct_as_root@@Base+0x1d4>
   43fb4:	mov	r5, r1
   43fb8:	cmp	r3, #0
   43fbc:	beq	43fe4 <flatcc_json_printer_struct_as_root@@Base+0x54>
   43fc0:	add	r0, sp, #4
   43fc4:	mov	r1, r3
   43fc8:	mov	r2, #4
   43fcc:	bl	14ef4 <strncpy@plt>
   43fd0:	ldr	r0, [sp, #4]
   43fd4:	cmp	r0, #0
   43fd8:	ldrne	r1, [r5, #4]
   43fdc:	cmpne	r1, r0
   43fe0:	bne	44194 <flatcc_json_printer_struct_as_root@@Base+0x204>
   43fe4:	ldr	r1, [r4, #32]
   43fe8:	ldr	r0, [r4, #20]
   43fec:	ldr	r2, [fp, #8]
   43ff0:	add	r1, r1, #1
   43ff4:	str	r1, [r4, #32]
   43ff8:	add	r1, r0, #1
   43ffc:	str	r1, [r4, #20]
   44000:	mov	r1, #123	; 0x7b
   44004:	strb	r1, [r0]
   44008:	ldr	r0, [r5]
   4400c:	add	r1, r5, r0
   44010:	mov	r0, r4
   44014:	blx	r2
   44018:	ldrb	r1, [r4, #25]
   4401c:	ldr	r0, [r4, #20]
   44020:	cmp	r1, #0
   44024:	beq	440e4 <flatcc_json_printer_struct_as_root@@Base+0x154>
   44028:	add	r1, r0, #1
   4402c:	str	r1, [r4, #20]
   44030:	mov	r1, #10
   44034:	strb	r1, [r0]
   44038:	ldr	r0, [r4, #32]
   4403c:	sub	r2, r0, #1
   44040:	str	r2, [r4, #32]
   44044:	ldrb	r3, [r4, #25]
   44048:	ldr	r0, [r4, #20]
   4404c:	ldr	r1, [r4, #16]
   44050:	mla	r6, r2, r3, r0
   44054:	mul	r5, r2, r3
   44058:	cmp	r6, r1
   4405c:	bls	440cc <flatcc_json_printer_struct_as_root@@Base+0x13c>
   44060:	cmp	r0, r1
   44064:	bcc	44080 <flatcc_json_printer_struct_as_root@@Base+0xf0>
   44068:	ldr	r2, [r4, #44]	; 0x2c
   4406c:	mov	r0, r4
   44070:	mov	r1, #0
   44074:	blx	r2
   44078:	ldr	r1, [r4, #16]
   4407c:	ldr	r0, [r4, #20]
   44080:	sub	r6, r1, r0
   44084:	cmp	r6, r5
   44088:	bcs	440cc <flatcc_json_printer_struct_as_root@@Base+0x13c>
   4408c:	mov	r1, #32
   44090:	mov	r2, r6
   44094:	bl	14ee8 <memset@plt>
   44098:	ldr	r0, [r4, #20]
   4409c:	ldr	r2, [r4, #44]	; 0x2c
   440a0:	mov	r1, #0
   440a4:	add	r0, r0, r6
   440a8:	str	r0, [r4, #20]
   440ac:	mov	r0, r4
   440b0:	blx	r2
   440b4:	ldr	r1, [r4, #16]
   440b8:	ldr	r0, [r4, #20]
   440bc:	sub	r5, r5, r6
   440c0:	sub	r6, r1, r0
   440c4:	cmp	r5, r6
   440c8:	bhi	4408c <flatcc_json_printer_struct_as_root@@Base+0xfc>
   440cc:	mov	r1, #32
   440d0:	mov	r2, r5
   440d4:	bl	14ee8 <memset@plt>
   440d8:	ldr	r0, [r4, #20]
   440dc:	add	r0, r0, r5
   440e0:	str	r0, [r4, #20]
   440e4:	add	r1, r0, #1
   440e8:	str	r1, [r4, #20]
   440ec:	mov	r1, #125	; 0x7d
   440f0:	strb	r1, [r0]
   440f4:	ldrb	r0, [r4, #25]
   440f8:	cmp	r0, #0
   440fc:	beq	44120 <flatcc_json_printer_struct_as_root@@Base+0x190>
   44100:	ldr	r0, [r4, #32]
   44104:	cmp	r0, #0
   44108:	bne	44120 <flatcc_json_printer_struct_as_root@@Base+0x190>
   4410c:	ldr	r0, [r4, #20]
   44110:	add	r1, r0, #1
   44114:	str	r1, [r4, #20]
   44118:	mov	r1, #10
   4411c:	strb	r1, [r0]
   44120:	ldr	r2, [r4, #44]	; 0x2c
   44124:	mov	r0, r4
   44128:	mov	r1, #1
   4412c:	blx	r2
   44130:	ldr	r1, [r4, #36]	; 0x24
   44134:	mvn	r0, #0
   44138:	cmp	r1, #0
   4413c:	beq	44148 <flatcc_json_printer_struct_as_root@@Base+0x1b8>
   44140:	sub	sp, fp, #16
   44144:	pop	{r4, r5, r6, sl, fp, pc}
   44148:	ldr	r1, [r4, #12]
   4414c:	ldr	r2, [r4, #20]
   44150:	ldr	r0, [r4]
   44154:	add	r1, r2, r1
   44158:	sub	r0, r1, r0
   4415c:	sub	sp, fp, #16
   44160:	pop	{r4, r5, r6, sl, fp, pc}
   44164:	ldr	r0, [r4, #36]	; 0x24
   44168:	movw	r2, #1019	; 0x3fb
   4416c:	cmp	r0, #0
   44170:	moveq	r0, #1
   44174:	streq	r0, [r4, #36]	; 0x24
   44178:	ldr	r0, [pc, #68]	; 441c4 <flatcc_json_printer_struct_as_root@@Base+0x234>
   4417c:	ldr	r1, [pc, #68]	; 441c8 <flatcc_json_printer_struct_as_root@@Base+0x238>
   44180:	ldr	r3, [pc, #68]	; 441cc <flatcc_json_printer_struct_as_root@@Base+0x23c>
   44184:	add	r0, pc, r0
   44188:	add	r1, pc, r1
   4418c:	add	r3, pc, r3
   44190:	bl	14f3c <__assert_fail@plt>
   44194:	ldr	r0, [r4, #36]	; 0x24
   44198:	movw	r2, #1028	; 0x404
   4419c:	cmp	r0, #0
   441a0:	moveq	r0, #1
   441a4:	streq	r0, [r4, #36]	; 0x24
   441a8:	ldr	r0, [pc, #32]	; 441d0 <flatcc_json_printer_struct_as_root@@Base+0x240>
   441ac:	ldr	r1, [pc, #32]	; 441d4 <flatcc_json_printer_struct_as_root@@Base+0x244>
   441b0:	ldr	r3, [pc, #32]	; 441d8 <flatcc_json_printer_struct_as_root@@Base+0x248>
   441b4:	add	r0, pc, r0
   441b8:	add	r1, pc, r1
   441bc:	add	r3, pc, r3
   441c0:	bl	14f3c <__assert_fail@plt>
   441c4:	andeq	r7, r0, lr, ror r0
   441c8:	ldrdeq	r6, [r0], -r4
   441cc:	muleq	r0, r5, r0
   441d0:	strheq	r7, [r0], -ip
   441d4:	andeq	r6, r0, r4, lsr #23
   441d8:	andeq	r7, r0, r5, rrx

000441dc <flatcc_json_printer_table_as_root@@Base>:
   441dc:	push	{r4, r5, r6, sl, fp, lr}
   441e0:	add	fp, sp, #16
   441e4:	sub	sp, sp, #24
   441e8:	cmp	r1, #0
   441ec:	mov	r4, r0
   441f0:	mov	r0, #0
   441f4:	cmpne	r2, #7
   441f8:	str	r0, [sp, #4]
   441fc:	bls	443dc <flatcc_json_printer_table_as_root@@Base+0x200>
   44200:	mov	r5, r1
   44204:	cmp	r3, #0
   44208:	beq	44230 <flatcc_json_printer_table_as_root@@Base+0x54>
   4420c:	add	r0, sp, #4
   44210:	mov	r1, r3
   44214:	mov	r2, #4
   44218:	bl	14ef4 <strncpy@plt>
   4421c:	ldr	r0, [sp, #4]
   44220:	cmp	r0, #0
   44224:	ldrne	r1, [r5, #4]
   44228:	cmpne	r1, r0
   4422c:	bne	4440c <flatcc_json_printer_table_as_root@@Base+0x230>
   44230:	ldr	r3, [r4, #32]
   44234:	ldr	r1, [r4, #20]
   44238:	ldr	r0, [r5]
   4423c:	ldr	r2, [fp, #8]
   44240:	add	r3, r3, #1
   44244:	str	r3, [r4, #32]
   44248:	add	r3, r1, #1
   4424c:	str	r3, [r4, #20]
   44250:	mov	r3, #123	; 0x7b
   44254:	strb	r3, [r1]
   44258:	mov	r1, #99	; 0x63
   4425c:	str	r1, [sp, #16]
   44260:	mov	r1, #0
   44264:	str	r1, [sp, #20]
   44268:	add	r1, r5, r0
   4426c:	str	r1, [sp, #4]
   44270:	ldr	r0, [r5, r0]
   44274:	sub	r3, r1, r0
   44278:	str	r3, [sp, #8]
   4427c:	ldrh	r0, [r1, -r0]
   44280:	add	r1, sp, #4
   44284:	str	r0, [sp, #12]
   44288:	mov	r0, r4
   4428c:	blx	r2
   44290:	ldrb	r1, [r4, #25]
   44294:	ldr	r0, [r4, #20]
   44298:	cmp	r1, #0
   4429c:	beq	4435c <flatcc_json_printer_table_as_root@@Base+0x180>
   442a0:	add	r1, r0, #1
   442a4:	str	r1, [r4, #20]
   442a8:	mov	r1, #10
   442ac:	strb	r1, [r0]
   442b0:	ldr	r0, [r4, #32]
   442b4:	sub	r2, r0, #1
   442b8:	str	r2, [r4, #32]
   442bc:	ldrb	r3, [r4, #25]
   442c0:	ldr	r0, [r4, #20]
   442c4:	ldr	r1, [r4, #16]
   442c8:	mla	r6, r2, r3, r0
   442cc:	mul	r5, r2, r3
   442d0:	cmp	r6, r1
   442d4:	bls	44344 <flatcc_json_printer_table_as_root@@Base+0x168>
   442d8:	cmp	r0, r1
   442dc:	bcc	442f8 <flatcc_json_printer_table_as_root@@Base+0x11c>
   442e0:	ldr	r2, [r4, #44]	; 0x2c
   442e4:	mov	r0, r4
   442e8:	mov	r1, #0
   442ec:	blx	r2
   442f0:	ldr	r1, [r4, #16]
   442f4:	ldr	r0, [r4, #20]
   442f8:	sub	r6, r1, r0
   442fc:	cmp	r6, r5
   44300:	bcs	44344 <flatcc_json_printer_table_as_root@@Base+0x168>
   44304:	mov	r1, #32
   44308:	mov	r2, r6
   4430c:	bl	14ee8 <memset@plt>
   44310:	ldr	r0, [r4, #20]
   44314:	ldr	r2, [r4, #44]	; 0x2c
   44318:	mov	r1, #0
   4431c:	add	r0, r0, r6
   44320:	str	r0, [r4, #20]
   44324:	mov	r0, r4
   44328:	blx	r2
   4432c:	ldr	r1, [r4, #16]
   44330:	ldr	r0, [r4, #20]
   44334:	sub	r5, r5, r6
   44338:	sub	r6, r1, r0
   4433c:	cmp	r5, r6
   44340:	bhi	44304 <flatcc_json_printer_table_as_root@@Base+0x128>
   44344:	mov	r1, #32
   44348:	mov	r2, r5
   4434c:	bl	14ee8 <memset@plt>
   44350:	ldr	r0, [r4, #20]
   44354:	add	r0, r0, r5
   44358:	str	r0, [r4, #20]
   4435c:	add	r1, r0, #1
   44360:	str	r1, [r4, #20]
   44364:	mov	r1, #125	; 0x7d
   44368:	strb	r1, [r0]
   4436c:	ldrb	r0, [r4, #25]
   44370:	cmp	r0, #0
   44374:	beq	44398 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   44378:	ldr	r0, [r4, #32]
   4437c:	cmp	r0, #0
   44380:	bne	44398 <flatcc_json_printer_table_as_root@@Base+0x1bc>
   44384:	ldr	r0, [r4, #20]
   44388:	add	r1, r0, #1
   4438c:	str	r1, [r4, #20]
   44390:	mov	r1, #10
   44394:	strb	r1, [r0]
   44398:	ldr	r2, [r4, #44]	; 0x2c
   4439c:	mov	r0, r4
   443a0:	mov	r1, #1
   443a4:	blx	r2
   443a8:	ldr	r1, [r4, #36]	; 0x24
   443ac:	mvn	r0, #0
   443b0:	cmp	r1, #0
   443b4:	beq	443c0 <flatcc_json_printer_table_as_root@@Base+0x1e4>
   443b8:	sub	sp, fp, #16
   443bc:	pop	{r4, r5, r6, sl, fp, pc}
   443c0:	ldr	r1, [r4, #12]
   443c4:	ldr	r2, [r4, #20]
   443c8:	ldr	r0, [r4]
   443cc:	add	r1, r2, r1
   443d0:	sub	r0, r1, r0
   443d4:	sub	sp, fp, #16
   443d8:	pop	{r4, r5, r6, sl, fp, pc}
   443dc:	ldr	r0, [r4, #36]	; 0x24
   443e0:	movw	r2, #1019	; 0x3fb
   443e4:	cmp	r0, #0
   443e8:	moveq	r0, #1
   443ec:	streq	r0, [r4, #36]	; 0x24
   443f0:	ldr	r0, [pc, #68]	; 4443c <flatcc_json_printer_table_as_root@@Base+0x260>
   443f4:	ldr	r1, [pc, #68]	; 44440 <flatcc_json_printer_table_as_root@@Base+0x264>
   443f8:	ldr	r3, [pc, #68]	; 44444 <flatcc_json_printer_table_as_root@@Base+0x268>
   443fc:	add	r0, pc, r0
   44400:	add	r1, pc, r1
   44404:	add	r3, pc, r3
   44408:	bl	14f3c <__assert_fail@plt>
   4440c:	ldr	r0, [r4, #36]	; 0x24
   44410:	movw	r2, #1028	; 0x404
   44414:	cmp	r0, #0
   44418:	moveq	r0, #1
   4441c:	streq	r0, [r4, #36]	; 0x24
   44420:	ldr	r0, [pc, #32]	; 44448 <flatcc_json_printer_table_as_root@@Base+0x26c>
   44424:	ldr	r1, [pc, #32]	; 4444c <flatcc_json_printer_table_as_root@@Base+0x270>
   44428:	ldr	r3, [pc, #32]	; 44450 <flatcc_json_printer_table_as_root@@Base+0x274>
   4442c:	add	r0, pc, r0
   44430:	add	r1, pc, r1
   44434:	add	r3, pc, r3
   44438:	bl	14f3c <__assert_fail@plt>
   4443c:	andeq	r6, r0, r6, lsl #28
   44440:	andeq	r6, r0, ip, asr r9
   44444:	andeq	r6, r0, sp, lsl lr
   44448:	andeq	r6, r0, r4, asr #28
   4444c:	andeq	r6, r0, ip, lsr #18
   44450:	andeq	r6, r0, sp, ror #27

00044454 <flatcc_json_printer_struct_as_nested_root@@Base>:
   44454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   44458:	add	fp, sp, #24
   4445c:	sub	sp, sp, #8
   44460:	mov	r6, r1
   44464:	ldr	r1, [r1, #8]
   44468:	mov	r4, r0
   4446c:	mov	r0, #4
   44470:	add	r0, r0, r2, lsl #1
   44474:	cmp	r0, r1
   44478:	bge	44498 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   4447c:	ldr	r1, [r6, #4]
   44480:	add	r0, r1, r0
   44484:	ldrh	r0, [r0]
   44488:	cmp	r0, #0
   4448c:	ldrne	r1, [r6]
   44490:	addsne	r0, r1, r0
   44494:	bne	444a0 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   44498:	sub	sp, fp, #24
   4449c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   444a0:	ldr	r7, [r0]
   444a4:	mov	r1, #0
   444a8:	ldr	r0, [r7, r0]!
   444ac:	str	r1, [sp, #4]
   444b0:	cmp	r7, #0
   444b4:	cmpne	r0, #7
   444b8:	bls	44638 <flatcc_json_printer_struct_as_nested_root@@Base+0x1e4>
   444bc:	ldr	r1, [fp, #12]
   444c0:	mov	r5, r3
   444c4:	cmp	r1, #0
   444c8:	beq	444ec <flatcc_json_printer_struct_as_nested_root@@Base+0x98>
   444cc:	add	r0, sp, #4
   444d0:	mov	r2, #4
   444d4:	bl	14ef4 <strncpy@plt>
   444d8:	ldr	r0, [sp, #4]
   444dc:	cmp	r0, #0
   444e0:	ldrne	r1, [r7, #4]
   444e4:	cmpne	r1, r0
   444e8:	bne	44668 <flatcc_json_printer_struct_as_nested_root@@Base+0x214>
   444ec:	ldr	r0, [r6, #16]
   444f0:	ldr	r2, [fp, #8]
   444f4:	ldr	r8, [fp, #16]
   444f8:	add	r1, r0, #1
   444fc:	cmp	r0, #0
   44500:	str	r1, [r6, #16]
   44504:	ldrne	r0, [r4, #20]
   44508:	addne	r1, r0, #1
   4450c:	strne	r1, [r4, #20]
   44510:	movne	r1, #44	; 0x2c
   44514:	strbne	r1, [r0]
   44518:	mov	r0, r4
   4451c:	mov	r1, r5
   44520:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   44524:	ldr	r1, [r4, #32]
   44528:	ldr	r0, [r4, #20]
   4452c:	add	r1, r1, #1
   44530:	str	r1, [r4, #32]
   44534:	add	r1, r0, #1
   44538:	str	r1, [r4, #20]
   4453c:	mov	r1, #123	; 0x7b
   44540:	strb	r1, [r0]
   44544:	ldr	r0, [r7]
   44548:	add	r1, r7, r0
   4454c:	mov	r0, r4
   44550:	blx	r8
   44554:	ldrb	r1, [r4, #25]
   44558:	ldr	r0, [r4, #20]
   4455c:	cmp	r1, #0
   44560:	beq	44620 <flatcc_json_printer_struct_as_nested_root@@Base+0x1cc>
   44564:	add	r1, r0, #1
   44568:	str	r1, [r4, #20]
   4456c:	mov	r1, #10
   44570:	strb	r1, [r0]
   44574:	ldr	r0, [r4, #32]
   44578:	sub	r2, r0, #1
   4457c:	str	r2, [r4, #32]
   44580:	ldrb	r3, [r4, #25]
   44584:	ldr	r0, [r4, #20]
   44588:	ldr	r1, [r4, #16]
   4458c:	mla	r7, r2, r3, r0
   44590:	mul	r5, r2, r3
   44594:	cmp	r7, r1
   44598:	bls	44608 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   4459c:	cmp	r0, r1
   445a0:	bcc	445bc <flatcc_json_printer_struct_as_nested_root@@Base+0x168>
   445a4:	ldr	r2, [r4, #44]	; 0x2c
   445a8:	mov	r0, r4
   445ac:	mov	r1, #0
   445b0:	blx	r2
   445b4:	ldr	r1, [r4, #16]
   445b8:	ldr	r0, [r4, #20]
   445bc:	sub	r6, r1, r0
   445c0:	cmp	r6, r5
   445c4:	bcs	44608 <flatcc_json_printer_struct_as_nested_root@@Base+0x1b4>
   445c8:	mov	r1, #32
   445cc:	mov	r2, r6
   445d0:	bl	14ee8 <memset@plt>
   445d4:	ldr	r0, [r4, #20]
   445d8:	ldr	r2, [r4, #44]	; 0x2c
   445dc:	mov	r1, #0
   445e0:	add	r0, r0, r6
   445e4:	str	r0, [r4, #20]
   445e8:	mov	r0, r4
   445ec:	blx	r2
   445f0:	ldr	r1, [r4, #16]
   445f4:	ldr	r0, [r4, #20]
   445f8:	sub	r5, r5, r6
   445fc:	sub	r6, r1, r0
   44600:	cmp	r5, r6
   44604:	bhi	445c8 <flatcc_json_printer_struct_as_nested_root@@Base+0x174>
   44608:	mov	r1, #32
   4460c:	mov	r2, r5
   44610:	bl	14ee8 <memset@plt>
   44614:	ldr	r0, [r4, #20]
   44618:	add	r0, r0, r5
   4461c:	str	r0, [r4, #20]
   44620:	add	r1, r0, #1
   44624:	str	r1, [r4, #20]
   44628:	mov	r1, #125	; 0x7d
   4462c:	strb	r1, [r0]
   44630:	sub	sp, fp, #24
   44634:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   44638:	ldr	r0, [r4, #36]	; 0x24
   4463c:	movw	r2, #1019	; 0x3fb
   44640:	cmp	r0, #0
   44644:	moveq	r0, #1
   44648:	streq	r0, [r4, #36]	; 0x24
   4464c:	ldr	r0, [pc, #68]	; 44698 <flatcc_json_printer_struct_as_nested_root@@Base+0x244>
   44650:	ldr	r1, [pc, #68]	; 4469c <flatcc_json_printer_struct_as_nested_root@@Base+0x248>
   44654:	ldr	r3, [pc, #68]	; 446a0 <flatcc_json_printer_struct_as_nested_root@@Base+0x24c>
   44658:	add	r0, pc, r0
   4465c:	add	r1, pc, r1
   44660:	add	r3, pc, r3
   44664:	bl	14f3c <__assert_fail@plt>
   44668:	ldr	r0, [r4, #36]	; 0x24
   4466c:	movw	r2, #1028	; 0x404
   44670:	cmp	r0, #0
   44674:	moveq	r0, #1
   44678:	streq	r0, [r4, #36]	; 0x24
   4467c:	ldr	r0, [pc, #32]	; 446a4 <flatcc_json_printer_struct_as_nested_root@@Base+0x250>
   44680:	ldr	r1, [pc, #32]	; 446a8 <flatcc_json_printer_struct_as_nested_root@@Base+0x254>
   44684:	ldr	r3, [pc, #32]	; 446ac <flatcc_json_printer_struct_as_nested_root@@Base+0x258>
   44688:	add	r0, pc, r0
   4468c:	add	r1, pc, r1
   44690:	add	r3, pc, r3
   44694:	bl	14f3c <__assert_fail@plt>
   44698:	andeq	r6, r0, sl, lsr #23
   4469c:	andeq	r6, r0, r0, lsl #14
   446a0:	andeq	r6, r0, r1, asr #23
   446a4:	andeq	r6, r0, r8, ror #23
   446a8:	ldrdeq	r6, [r0], -r0
   446ac:	muleq	r0, r1, fp

000446b0 <flatcc_json_printer_table_as_nested_root@@Base>:
   446b0:	push	{r4, r5, r6, r7, fp, lr}
   446b4:	add	fp, sp, #16
   446b8:	sub	sp, sp, #24
   446bc:	mov	r5, r1
   446c0:	ldr	r1, [r1, #8]
   446c4:	mov	r4, r0
   446c8:	mov	r0, #4
   446cc:	add	r0, r0, r2, lsl #1
   446d0:	cmp	r0, r1
   446d4:	bge	446f4 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   446d8:	ldr	r1, [r5, #4]
   446dc:	add	r0, r1, r0
   446e0:	ldrh	r0, [r0]
   446e4:	cmp	r0, #0
   446e8:	ldrne	r1, [r5]
   446ec:	addsne	r0, r1, r0
   446f0:	bne	446fc <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   446f4:	sub	sp, fp, #16
   446f8:	pop	{r4, r5, r6, r7, fp, pc}
   446fc:	ldr	r7, [r0]
   44700:	mov	r1, #0
   44704:	ldr	r0, [r7, r0]!
   44708:	str	r1, [sp, #4]
   4470c:	cmp	r0, #7
   44710:	bls	448e4 <flatcc_json_printer_table_as_nested_root@@Base+0x234>
   44714:	ldr	r1, [fp, #12]
   44718:	mov	r6, r3
   4471c:	cmp	r1, #0
   44720:	beq	44744 <flatcc_json_printer_table_as_nested_root@@Base+0x94>
   44724:	add	r0, sp, #4
   44728:	mov	r2, #4
   4472c:	bl	14ef4 <strncpy@plt>
   44730:	ldr	r0, [sp, #4]
   44734:	cmp	r0, #0
   44738:	ldrne	r1, [r7, #8]
   4473c:	cmpne	r1, r0
   44740:	bne	44914 <flatcc_json_printer_table_as_nested_root@@Base+0x264>
   44744:	ldr	r0, [r5, #16]
   44748:	ldr	r2, [fp, #8]
   4474c:	add	r1, r0, #1
   44750:	cmp	r0, #0
   44754:	str	r1, [r5, #16]
   44758:	ldrne	r0, [r4, #20]
   4475c:	addne	r1, r0, #1
   44760:	strne	r1, [r4, #20]
   44764:	movne	r1, #44	; 0x2c
   44768:	strbne	r1, [r0]
   4476c:	mov	r0, r4
   44770:	mov	r1, r6
   44774:	bl	3a52c <flatcc_json_printer_string_field@@Base+0x8c>
   44778:	ldr	r0, [r5, #12]
   4477c:	subs	r0, r0, #1
   44780:	beq	448c8 <flatcc_json_printer_table_as_nested_root@@Base+0x218>
   44784:	add	r1, r7, #4
   44788:	ldr	r7, [r4, #32]
   4478c:	ldr	r2, [fp, #16]
   44790:	ldr	r3, [r1]
   44794:	add	r7, r7, #1
   44798:	add	r1, r1, r3
   4479c:	ldr	r3, [r4, #20]
   447a0:	str	r7, [r4, #32]
   447a4:	add	r7, r3, #1
   447a8:	str	r7, [r4, #20]
   447ac:	mov	r7, #123	; 0x7b
   447b0:	strb	r7, [r3]
   447b4:	str	r0, [sp, #16]
   447b8:	mov	r0, #0
   447bc:	str	r0, [sp, #20]
   447c0:	str	r1, [sp, #4]
   447c4:	ldr	r0, [r1]
   447c8:	sub	r3, r1, r0
   447cc:	str	r3, [sp, #8]
   447d0:	ldrh	r0, [r1, -r0]
   447d4:	add	r1, sp, #4
   447d8:	str	r0, [sp, #12]
   447dc:	mov	r0, r4
   447e0:	blx	r2
   447e4:	ldrb	r1, [r4, #25]
   447e8:	ldr	r0, [r4, #20]
   447ec:	cmp	r1, #0
   447f0:	beq	448b0 <flatcc_json_printer_table_as_nested_root@@Base+0x200>
   447f4:	add	r1, r0, #1
   447f8:	str	r1, [r4, #20]
   447fc:	mov	r1, #10
   44800:	strb	r1, [r0]
   44804:	ldr	r0, [r4, #32]
   44808:	sub	r2, r0, #1
   4480c:	str	r2, [r4, #32]
   44810:	ldrb	r3, [r4, #25]
   44814:	ldr	r0, [r4, #20]
   44818:	ldr	r1, [r4, #16]
   4481c:	mla	r7, r2, r3, r0
   44820:	mul	r5, r2, r3
   44824:	cmp	r7, r1
   44828:	bls	44898 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   4482c:	cmp	r0, r1
   44830:	bcc	4484c <flatcc_json_printer_table_as_nested_root@@Base+0x19c>
   44834:	ldr	r2, [r4, #44]	; 0x2c
   44838:	mov	r0, r4
   4483c:	mov	r1, #0
   44840:	blx	r2
   44844:	ldr	r1, [r4, #16]
   44848:	ldr	r0, [r4, #20]
   4484c:	sub	r6, r1, r0
   44850:	cmp	r6, r5
   44854:	bcs	44898 <flatcc_json_printer_table_as_nested_root@@Base+0x1e8>
   44858:	mov	r1, #32
   4485c:	mov	r2, r6
   44860:	bl	14ee8 <memset@plt>
   44864:	ldr	r0, [r4, #20]
   44868:	ldr	r2, [r4, #44]	; 0x2c
   4486c:	mov	r1, #0
   44870:	add	r0, r0, r6
   44874:	str	r0, [r4, #20]
   44878:	mov	r0, r4
   4487c:	blx	r2
   44880:	ldr	r1, [r4, #16]
   44884:	ldr	r0, [r4, #20]
   44888:	sub	r5, r5, r6
   4488c:	sub	r6, r1, r0
   44890:	cmp	r5, r6
   44894:	bhi	44858 <flatcc_json_printer_table_as_nested_root@@Base+0x1a8>
   44898:	mov	r1, #32
   4489c:	mov	r2, r5
   448a0:	bl	14ee8 <memset@plt>
   448a4:	ldr	r0, [r4, #20]
   448a8:	add	r0, r0, r5
   448ac:	str	r0, [r4, #20]
   448b0:	add	r1, r0, #1
   448b4:	str	r1, [r4, #20]
   448b8:	mov	r1, #125	; 0x7d
   448bc:	strb	r1, [r0]
   448c0:	sub	sp, fp, #16
   448c4:	pop	{r4, r5, r6, r7, fp, pc}
   448c8:	ldr	r0, [r4, #36]	; 0x24
   448cc:	cmp	r0, #0
   448d0:	bne	446f4 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   448d4:	mov	r0, #2
   448d8:	str	r0, [r4, #36]	; 0x24
   448dc:	sub	sp, fp, #16
   448e0:	pop	{r4, r5, r6, r7, fp, pc}
   448e4:	ldr	r0, [r4, #36]	; 0x24
   448e8:	movw	r2, #1019	; 0x3fb
   448ec:	cmp	r0, #0
   448f0:	moveq	r0, #1
   448f4:	streq	r0, [r4, #36]	; 0x24
   448f8:	ldr	r0, [pc, #68]	; 44944 <flatcc_json_printer_table_as_nested_root@@Base+0x294>
   448fc:	ldr	r1, [pc, #68]	; 44948 <flatcc_json_printer_table_as_nested_root@@Base+0x298>
   44900:	ldr	r3, [pc, #68]	; 4494c <flatcc_json_printer_table_as_nested_root@@Base+0x29c>
   44904:	add	r0, pc, r0
   44908:	add	r1, pc, r1
   4490c:	add	r3, pc, r3
   44910:	bl	14f3c <__assert_fail@plt>
   44914:	ldr	r0, [r4, #36]	; 0x24
   44918:	movw	r2, #1028	; 0x404
   4491c:	cmp	r0, #0
   44920:	moveq	r0, #1
   44924:	streq	r0, [r4, #36]	; 0x24
   44928:	ldr	r0, [pc, #32]	; 44950 <flatcc_json_printer_table_as_nested_root@@Base+0x2a0>
   4492c:	ldr	r1, [pc, #32]	; 44954 <flatcc_json_printer_table_as_nested_root@@Base+0x2a4>
   44930:	ldr	r3, [pc, #32]	; 44958 <flatcc_json_printer_table_as_nested_root@@Base+0x2a8>
   44934:	add	r0, pc, r0
   44938:	add	r1, pc, r1
   4493c:	add	r3, pc, r3
   44940:	bl	14f3c <__assert_fail@plt>
   44944:	strdeq	r6, [r0], -lr
   44948:	andeq	r6, r0, r4, asr r4
   4494c:	andeq	r6, r0, r5, lsl r9
   44950:	andeq	r6, r0, ip, lsr r9
   44954:	andeq	r6, r0, r4, lsr #8
   44958:	andeq	r6, r0, r5, ror #17

0004495c <flatcc_json_printer_init@@Base>:
   4495c:	push	{r4, r5, r6, sl, fp, lr}
   44960:	add	fp, sp, #16
   44964:	mov	r5, r0
   44968:	mov	r4, #0
   4496c:	vmov.i32	q8, #0	; 0x00000000
   44970:	cmp	r1, #0
   44974:	movw	r6, #16448	; 0x4040
   44978:	str	r4, [r0, #32]
   4497c:	mov	r0, #36	; 0x24
   44980:	mov	r2, r5
   44984:	vst1.32	{d16-d17}, [r2], r0
   44988:	add	r0, r5, #16
   4498c:	str	r4, [r2]
   44990:	vst1.32	{d16-d17}, [r0]
   44994:	ldr	r0, [pc, #92]	; 449f8 <flatcc_json_printer_init@@Base+0x9c>
   44998:	ldr	r0, [pc, r0]
   4499c:	ldr	r0, [r0]
   449a0:	ldr	r2, [pc, #84]	; 449fc <flatcc_json_printer_init@@Base+0xa0>
   449a4:	movne	r0, r1
   449a8:	add	r2, pc, r2
   449ac:	str	r0, [r5, #40]	; 0x28
   449b0:	movw	r0, #16448	; 0x4040
   449b4:	str	r2, [r5, #44]	; 0x2c
   449b8:	bl	14ea0 <malloc@plt>
   449bc:	cmp	r0, #0
   449c0:	str	r0, [r5]
   449c4:	mvneq	r4, #0
   449c8:	moveq	r0, r4
   449cc:	popeq	{r4, r5, r6, sl, fp, pc}
   449d0:	mov	r1, #1
   449d4:	strb	r1, [r5, #24]
   449d8:	mov	r1, #16384	; 0x4000
   449dc:	str	r6, [r5, #4]
   449e0:	str	r1, [r5, #8]
   449e4:	add	r1, r0, #16384	; 0x4000
   449e8:	str	r1, [r5, #16]
   449ec:	str	r0, [r5, #20]
   449f0:	mov	r0, r4
   449f4:	pop	{r4, r5, r6, sl, fp, pc}
   449f8:	ldrdeq	r7, [r1], -ip
   449fc:	andeq	r0, r0, r0, asr r0
   44a00:	push	{r4, r5, r6, sl, fp, lr}
   44a04:	add	fp, sp, #16
   44a08:	mov	r4, r0
   44a0c:	cmp	r1, #0
   44a10:	beq	44a1c <flatcc_json_printer_init@@Base+0xc0>
   44a14:	ldr	r5, [r4, #20]
   44a18:	b	44a2c <flatcc_json_printer_init@@Base+0xd0>
   44a1c:	ldr	r6, [r4, #16]
   44a20:	ldr	r5, [r4, #20]
   44a24:	cmp	r5, r6
   44a28:	bcs	44a58 <flatcc_json_printer_init@@Base+0xfc>
   44a2c:	ldr	r0, [r4]
   44a30:	ldr	r3, [r4, #40]	; 0x28
   44a34:	mov	r2, #1
   44a38:	sub	r5, r5, r0
   44a3c:	mov	r1, r5
   44a40:	bl	14e94 <fwrite@plt>
   44a44:	ldr	r1, [r4, #12]
   44a48:	ldr	r0, [r4]
   44a4c:	str	r0, [r4, #20]
   44a50:	add	r1, r1, r5
   44a54:	b	44a9c <flatcc_json_printer_init@@Base+0x140>
   44a58:	ldr	r0, [r4]
   44a5c:	ldr	r1, [r4, #8]
   44a60:	ldr	r3, [r4, #40]	; 0x28
   44a64:	mov	r2, #1
   44a68:	bl	14e94 <fwrite@plt>
   44a6c:	ldr	r0, [r4]
   44a70:	ldr	r1, [r4, #8]
   44a74:	sub	r5, r5, r6
   44a78:	mov	r2, r5
   44a7c:	add	r1, r0, r1
   44a80:	bl	14e58 <memcpy@plt>
   44a84:	ldr	r0, [r4]
   44a88:	ldr	r1, [r4, #8]
   44a8c:	ldr	r2, [r4, #12]
   44a90:	add	r0, r0, r5
   44a94:	add	r1, r2, r1
   44a98:	str	r0, [r4, #20]
   44a9c:	str	r1, [r4, #12]
   44aa0:	mov	r1, #0
   44aa4:	strb	r1, [r0]
   44aa8:	pop	{r4, r5, r6, sl, fp, pc}

00044aac <flatcc_json_printer_init_buffer@@Base>:
   44aac:	cmp	r2, #63	; 0x3f
   44ab0:	bls	44af0 <flatcc_json_printer_init_buffer@@Base+0x44>
   44ab4:	vmov.i32	q8, #0	; 0x00000000
   44ab8:	add	r3, r0, #12
   44abc:	vst1.32	{d16-d17}, [r3]
   44ac0:	ldr	r3, [pc, #80]	; 44b18 <flatcc_json_printer_init_buffer@@Base+0x6c>
   44ac4:	add	r3, pc, r3
   44ac8:	str	r3, [r0, #44]	; 0x2c
   44acc:	add	r3, r0, #28
   44ad0:	vst1.32	{d16-d17}, [r3]
   44ad4:	sub	r3, r2, #64	; 0x40
   44ad8:	stm	r0, {r1, r2, r3}
   44adc:	add	r2, r1, r3
   44ae0:	str	r2, [r0, #16]
   44ae4:	str	r1, [r0, #20]
   44ae8:	mov	r0, #0
   44aec:	bx	lr
   44af0:	push	{fp, lr}
   44af4:	mov	fp, sp
   44af8:	ldr	r0, [pc, #28]	; 44b1c <flatcc_json_printer_init_buffer@@Base+0x70>
   44afc:	ldr	r1, [pc, #28]	; 44b20 <flatcc_json_printer_init_buffer@@Base+0x74>
   44b00:	ldr	r3, [pc, #28]	; 44b24 <flatcc_json_printer_init_buffer@@Base+0x78>
   44b04:	movw	r2, #1165	; 0x48d
   44b08:	add	r0, pc, r0
   44b0c:	add	r1, pc, r1
   44b10:	add	r3, pc, r3
   44b14:	bl	14f3c <__assert_fail@plt>
   44b18:	andeq	r0, r0, ip, asr r0
   44b1c:	andeq	r6, r0, r6, lsl #7
   44b20:	andeq	r6, r0, r0, asr r2
   44b24:	andeq	r6, r0, r7, lsr #7
   44b28:	ldr	r2, [r0, #16]
   44b2c:	ldr	r1, [r0, #20]
   44b30:	cmp	r1, r2
   44b34:	bcs	44b40 <flatcc_json_printer_init_buffer@@Base+0x94>
   44b38:	mov	r2, r1
   44b3c:	b	44b68 <flatcc_json_printer_init_buffer@@Base+0xbc>
   44b40:	ldr	r2, [r0, #36]	; 0x24
   44b44:	cmp	r2, #0
   44b48:	moveq	r2, #3
   44b4c:	streq	r2, [r0, #36]	; 0x24
   44b50:	ldr	r2, [r0]
   44b54:	ldr	r3, [r0, #12]
   44b58:	sub	r1, r1, r2
   44b5c:	str	r2, [r0, #20]
   44b60:	add	r1, r1, r3
   44b64:	str	r1, [r0, #12]
   44b68:	mov	r0, #0
   44b6c:	strb	r0, [r2]
   44b70:	bx	lr

00044b74 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   44b74:	push	{r4, r5, fp, lr}
   44b78:	add	fp, sp, #8
   44b7c:	mov	r5, r1
   44b80:	cmp	r1, #0
   44b84:	mov	r4, r0
   44b88:	vmov.i32	q8, #0	; 0x00000000
   44b8c:	add	r0, r0, #28
   44b90:	movweq	r5, #4096	; 0x1000
   44b94:	vst1.32	{d16-d17}, [r0]
   44b98:	add	r0, r4, #12
   44b9c:	cmp	r5, #64	; 0x40
   44ba0:	vst1.32	{d16-d17}, [r0]
   44ba4:	movls	r5, #64	; 0x40
   44ba8:	mov	r0, r5
   44bac:	bl	14ea0 <malloc@plt>
   44bb0:	mov	r1, r0
   44bb4:	mov	r0, #1
   44bb8:	strb	r0, [r4, #24]
   44bbc:	sub	r0, r5, #64	; 0x40
   44bc0:	stm	r4, {r1, r5}
   44bc4:	cmp	r1, #0
   44bc8:	str	r0, [r4, #8]
   44bcc:	add	r0, r1, r0
   44bd0:	ldr	r2, [pc, #32]	; 44bf8 <flatcc_json_printer_init_dynamic_buffer@@Base+0x84>
   44bd4:	add	r2, pc, r2
   44bd8:	str	r2, [r4, #44]	; 0x2c
   44bdc:	str	r0, [r4, #16]
   44be0:	mov	r0, #0
   44be4:	str	r1, [r4, #20]
   44be8:	moveq	r0, #3
   44bec:	streq	r0, [r4, #36]	; 0x24
   44bf0:	mvneq	r0, #0
   44bf4:	pop	{r4, r5, fp, pc}
   44bf8:	andeq	r0, r0, r0, lsr #32
   44bfc:	push	{r4, r5, fp, lr}
   44c00:	add	fp, sp, #8
   44c04:	mov	r4, r0
   44c08:	ldr	r0, [r0]
   44c0c:	mov	r1, #0
   44c10:	ldr	r5, [r4, #20]
   44c14:	strb	r1, [r5], -r0
   44c18:	ldr	r0, [r4, #16]
   44c1c:	ldr	r1, [r4, #20]
   44c20:	cmp	r1, r0
   44c24:	popcc	{r4, r5, fp, pc}
   44c28:	ldm	r4, {r0, r1}
   44c2c:	lsl	r1, r1, #1
   44c30:	bl	14e88 <realloc@plt>
   44c34:	cmp	r0, #0
   44c38:	beq	44c6c <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   44c3c:	str	r0, [r4]
   44c40:	mvn	r3, #63	; 0x3f
   44c44:	add	r1, r0, r5
   44c48:	ldr	r2, [r4, #4]
   44c4c:	add	r3, r3, r2, lsl #1
   44c50:	lsl	r2, r2, #1
   44c54:	add	r0, r0, r3
   44c58:	str	r3, [r4, #8]
   44c5c:	str	r2, [r4, #4]
   44c60:	str	r0, [r4, #16]
   44c64:	str	r1, [r4, #20]
   44c68:	b	44c90 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   44c6c:	ldr	r0, [r4, #36]	; 0x24
   44c70:	cmp	r0, #0
   44c74:	moveq	r0, #3
   44c78:	streq	r0, [r4, #36]	; 0x24
   44c7c:	ldr	r0, [r4, #12]
   44c80:	ldr	r1, [r4]
   44c84:	add	r0, r0, r5
   44c88:	str	r1, [r4, #20]
   44c8c:	str	r0, [r4, #12]
   44c90:	mov	r0, #0
   44c94:	strb	r0, [r1]
   44c98:	pop	{r4, r5, fp, pc}

00044c9c <flatcc_json_printer_get_buffer@@Base>:
   44c9c:	push	{r4, r5, fp, lr}
   44ca0:	add	fp, sp, #8
   44ca4:	ldr	r2, [r0, #44]	; 0x2c
   44ca8:	mov	r4, r1
   44cac:	mov	r1, #0
   44cb0:	mov	r5, r0
   44cb4:	blx	r2
   44cb8:	cmp	r4, #0
   44cbc:	ldrne	r0, [r5]
   44cc0:	ldrne	r1, [r5, #20]
   44cc4:	subne	r1, r1, r0
   44cc8:	strne	r1, [r4]
   44ccc:	popne	{r4, r5, fp, pc}
   44cd0:	ldr	r0, [r5]
   44cd4:	pop	{r4, r5, fp, pc}

00044cd8 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   44cd8:	push	{r4, r5, fp, lr}
   44cdc:	add	fp, sp, #8
   44ce0:	ldr	r2, [r0, #44]	; 0x2c
   44ce4:	mov	r5, r1
   44ce8:	mov	r1, #0
   44cec:	mov	r4, r0
   44cf0:	blx	r2
   44cf4:	cmp	r5, #0
   44cf8:	ldr	r0, [r4]
   44cfc:	vmov.i32	q8, #0	; 0x00000000
   44d00:	add	r2, r4, #16
   44d04:	ldrne	r1, [r4, #20]
   44d08:	subne	r1, r1, r0
   44d0c:	strne	r1, [r5]
   44d10:	mov	r1, #32
   44d14:	vst1.32	{d16-d17}, [r2]
   44d18:	vst1.32	{d16-d17}, [r4], r1
   44d1c:	vst1.32	{d16-d17}, [r4]
   44d20:	pop	{r4, r5, fp, pc}

00044d24 <flatcc_json_printer_clear@@Base>:
   44d24:	push	{r4, sl, fp, lr}
   44d28:	add	fp, sp, #8
   44d2c:	mov	r4, r0
   44d30:	ldrb	r0, [r0, #24]
   44d34:	cmp	r0, #0
   44d38:	ldrne	r0, [r4]
   44d3c:	cmpne	r0, #0
   44d40:	beq	44d48 <flatcc_json_printer_clear@@Base+0x24>
   44d44:	bl	14e4c <free@plt>
   44d48:	vmov.i32	q8, #0	; 0x00000000
   44d4c:	mov	r0, #32
   44d50:	add	r1, r4, #16
   44d54:	vst1.32	{d16-d17}, [r4], r0
   44d58:	vst1.32	{d16-d17}, [r1]
   44d5c:	vst1.32	{d16-d17}, [r4]
   44d60:	pop	{r4, sl, fp, pc}
   44d64:	cmp	r2, #0
   44d68:	bxeq	lr
   44d6c:	push	{r4, r5, fp, lr}
   44d70:	add	fp, sp, #8
   44d74:	ldr	lr, [r2]
   44d78:	bic	ip, r3, #224	; 0xe0
   44d7c:	cmp	ip, #0
   44d80:	beq	44da0 <flatcc_json_printer_clear@@Base+0x7c>
   44d84:	cmp	ip, #1
   44d88:	bne	44e68 <flatcc_json_printer_clear@@Base+0x144>
   44d8c:	ldr	ip, [pc, #288]	; 44eb4 <flatcc_json_printer_clear@@Base+0x190>
   44d90:	add	ip, pc, ip
   44d94:	cmp	lr, #3
   44d98:	bcs	44db0 <flatcc_json_printer_clear@@Base+0x8c>
   44d9c:	b	44e10 <flatcc_json_printer_clear@@Base+0xec>
   44da0:	ldr	ip, [pc, #264]	; 44eb0 <flatcc_json_printer_clear@@Base+0x18c>
   44da4:	add	ip, pc, ip
   44da8:	cmp	lr, #3
   44dac:	bcc	44e10 <flatcc_json_printer_clear@@Base+0xec>
   44db0:	ldrb	r4, [r1]
   44db4:	sub	lr, lr, #3
   44db8:	cmp	lr, #2
   44dbc:	ldrb	r4, [ip, r4, lsr #2]
   44dc0:	strb	r4, [r0]
   44dc4:	ldrb	r5, [r1, #1]
   44dc8:	ldrb	r4, [r1]
   44dcc:	lsr	r5, r5, #4
   44dd0:	bfi	r5, r4, #4, #2
   44dd4:	ldrb	r4, [ip, r5]
   44dd8:	strb	r4, [r0, #1]
   44ddc:	ldrb	r5, [r1, #2]
   44de0:	ldrb	r4, [r1, #1]
   44de4:	lsr	r5, r5, #6
   44de8:	bfi	r5, r4, #2, #4
   44dec:	ldrb	r4, [ip, r5]
   44df0:	strb	r4, [r0, #2]
   44df4:	ldrb	r4, [r1, #2]
   44df8:	add	r1, r1, #3
   44dfc:	and	r4, r4, #63	; 0x3f
   44e00:	ldrb	r4, [ip, r4]
   44e04:	strb	r4, [r0, #3]
   44e08:	add	r0, r0, #4
   44e0c:	bhi	44db0 <flatcc_json_printer_clear@@Base+0x8c>
   44e10:	and	r3, r3, #128	; 0x80
   44e14:	cmp	lr, #1
   44e18:	beq	44e70 <flatcc_json_printer_clear@@Base+0x14c>
   44e1c:	cmp	lr, #2
   44e20:	bne	44e98 <flatcc_json_printer_clear@@Base+0x174>
   44e24:	ldrb	r5, [r1]
   44e28:	cmp	r3, #0
   44e2c:	ldrb	r5, [ip, r5, lsr #2]
   44e30:	strb	r5, [r0]
   44e34:	ldrb	r4, [r1, #1]
   44e38:	ldrb	r5, [r1]
   44e3c:	lsr	r4, r4, #4
   44e40:	bfi	r4, r5, #4, #2
   44e44:	ldrb	r5, [ip, r4]
   44e48:	strb	r5, [r0, #1]
   44e4c:	ldrb	r1, [r1, #1]
   44e50:	and	r1, r1, #15
   44e54:	ldrb	r1, [ip, r1, lsl #2]
   44e58:	strb	r1, [r0, #2]
   44e5c:	movne	r1, #61	; 0x3d
   44e60:	strbne	r1, [r0, #3]
   44e64:	b	44e98 <flatcc_json_printer_clear@@Base+0x174>
   44e68:	mov	r0, lr
   44e6c:	b	44ea0 <flatcc_json_printer_clear@@Base+0x17c>
   44e70:	ldrb	r5, [r1]
   44e74:	cmp	r3, #0
   44e78:	ldrb	r5, [ip, r5, lsr #2]
   44e7c:	strb	r5, [r0]
   44e80:	ldrb	r1, [r1]
   44e84:	and	r1, r1, #3
   44e88:	ldrb	r1, [ip, r1, lsl #4]
   44e8c:	strb	r1, [r0, #1]
   44e90:	movwne	r1, #15677	; 0x3d3d
   44e94:	strhne	r1, [r0, #2]
   44e98:	ldr	lr, [r2]
   44e9c:	mov	r0, #0
   44ea0:	sub	r0, lr, r0
   44ea4:	str	r0, [r2]
   44ea8:	pop	{r4, r5, fp, lr}
   44eac:	bx	lr
   44eb0:	ldrdeq	r6, [r0], -ip
   44eb4:	andeq	r6, r0, r1, lsr r4
   44eb8:	eor	r1, r1, #-2147483648	; 0x80000000
   44ebc:	b	44ec4 <flatcc_json_printer_clear@@Base+0x1a0>
   44ec0:	eor	r3, r3, #-2147483648	; 0x80000000
   44ec4:	push	{r4, r5, lr}
   44ec8:	lsl	r4, r1, #1
   44ecc:	lsl	r5, r3, #1
   44ed0:	teq	r4, r5
   44ed4:	teqeq	r0, r2
   44ed8:	orrsne	ip, r4, r0
   44edc:	orrsne	ip, r5, r2
   44ee0:	mvnsne	ip, r4, asr #21
   44ee4:	mvnsne	ip, r5, asr #21
   44ee8:	beq	450d4 <flatcc_json_printer_clear@@Base+0x3b0>
   44eec:	lsr	r4, r4, #21
   44ef0:	rsbs	r5, r4, r5, lsr #21
   44ef4:	rsblt	r5, r5, #0
   44ef8:	ble	44f18 <flatcc_json_printer_clear@@Base+0x1f4>
   44efc:	add	r4, r4, r5
   44f00:	eor	r2, r0, r2
   44f04:	eor	r3, r1, r3
   44f08:	eor	r0, r2, r0
   44f0c:	eor	r1, r3, r1
   44f10:	eor	r2, r0, r2
   44f14:	eor	r3, r1, r3
   44f18:	cmp	r5, #54	; 0x36
   44f1c:	pophi	{r4, r5, pc}
   44f20:	tst	r1, #-2147483648	; 0x80000000
   44f24:	lsl	r1, r1, #12
   44f28:	mov	ip, #1048576	; 0x100000
   44f2c:	orr	r1, ip, r1, lsr #12
   44f30:	beq	44f3c <flatcc_json_printer_clear@@Base+0x218>
   44f34:	rsbs	r0, r0, #0
   44f38:	rsc	r1, r1, #0
   44f3c:	tst	r3, #-2147483648	; 0x80000000
   44f40:	lsl	r3, r3, #12
   44f44:	orr	r3, ip, r3, lsr #12
   44f48:	beq	44f54 <flatcc_json_printer_clear@@Base+0x230>
   44f4c:	rsbs	r2, r2, #0
   44f50:	rsc	r3, r3, #0
   44f54:	teq	r4, r5
   44f58:	beq	450bc <flatcc_json_printer_clear@@Base+0x398>
   44f5c:	sub	r4, r4, #1
   44f60:	rsbs	lr, r5, #32
   44f64:	blt	44f80 <flatcc_json_printer_clear@@Base+0x25c>
   44f68:	lsl	ip, r2, lr
   44f6c:	adds	r0, r0, r2, lsr r5
   44f70:	adc	r1, r1, #0
   44f74:	adds	r0, r0, r3, lsl lr
   44f78:	adcs	r1, r1, r3, asr r5
   44f7c:	b	44f9c <flatcc_json_printer_clear@@Base+0x278>
   44f80:	sub	r5, r5, #32
   44f84:	add	lr, lr, #32
   44f88:	cmp	r2, #1
   44f8c:	lsl	ip, r3, lr
   44f90:	orrcs	ip, ip, #2
   44f94:	adds	r0, r0, r3, asr r5
   44f98:	adcs	r1, r1, r3, asr #31
   44f9c:	and	r5, r1, #-2147483648	; 0x80000000
   44fa0:	bpl	44fb0 <flatcc_json_printer_clear@@Base+0x28c>
   44fa4:	rsbs	ip, ip, #0
   44fa8:	rscs	r0, r0, #0
   44fac:	rsc	r1, r1, #0
   44fb0:	cmp	r1, #1048576	; 0x100000
   44fb4:	bcc	44ff4 <flatcc_json_printer_clear@@Base+0x2d0>
   44fb8:	cmp	r1, #2097152	; 0x200000
   44fbc:	bcc	44fdc <flatcc_json_printer_clear@@Base+0x2b8>
   44fc0:	lsrs	r1, r1, #1
   44fc4:	rrxs	r0, r0
   44fc8:	rrx	ip, ip
   44fcc:	add	r4, r4, #1
   44fd0:	lsl	r2, r4, #21
   44fd4:	cmn	r2, #4194304	; 0x400000
   44fd8:	bcs	45134 <flatcc_json_printer_clear@@Base+0x410>
   44fdc:	cmp	ip, #-2147483648	; 0x80000000
   44fe0:	lsrseq	ip, r0, #1
   44fe4:	adcs	r0, r0, #0
   44fe8:	adc	r1, r1, r4, lsl #20
   44fec:	orr	r1, r1, r5
   44ff0:	pop	{r4, r5, pc}
   44ff4:	lsls	ip, ip, #1
   44ff8:	adcs	r0, r0, r0
   44ffc:	adc	r1, r1, r1
   45000:	tst	r1, #1048576	; 0x100000
   45004:	sub	r4, r4, #1
   45008:	bne	44fdc <flatcc_json_printer_clear@@Base+0x2b8>
   4500c:	teq	r1, #0
   45010:	moveq	r1, r0
   45014:	moveq	r0, #0
   45018:	clz	r3, r1
   4501c:	addeq	r3, r3, #32
   45020:	sub	r3, r3, #11
   45024:	subs	r2, r3, #32
   45028:	bge	4504c <flatcc_json_printer_clear@@Base+0x328>
   4502c:	adds	r2, r2, #12
   45030:	ble	45048 <flatcc_json_printer_clear@@Base+0x324>
   45034:	add	ip, r2, #20
   45038:	rsb	r2, r2, #12
   4503c:	lsl	r0, r1, ip
   45040:	lsr	r1, r1, r2
   45044:	b	4505c <flatcc_json_printer_clear@@Base+0x338>
   45048:	add	r2, r2, #20
   4504c:	rsble	ip, r2, #32
   45050:	lsl	r1, r1, r2
   45054:	orrle	r1, r1, r0, lsr ip
   45058:	lslle	r0, r0, r2
   4505c:	subs	r4, r4, r3
   45060:	addge	r1, r1, r4, lsl #20
   45064:	orrge	r1, r1, r5
   45068:	popge	{r4, r5, pc}
   4506c:	mvn	r4, r4
   45070:	subs	r4, r4, #31
   45074:	bge	450b0 <flatcc_json_printer_clear@@Base+0x38c>
   45078:	adds	r4, r4, #12
   4507c:	bgt	45098 <flatcc_json_printer_clear@@Base+0x374>
   45080:	add	r4, r4, #20
   45084:	rsb	r2, r4, #32
   45088:	lsr	r0, r0, r4
   4508c:	orr	r0, r0, r1, lsl r2
   45090:	orr	r1, r5, r1, lsr r4
   45094:	pop	{r4, r5, pc}
   45098:	rsb	r4, r4, #12
   4509c:	rsb	r2, r4, #32
   450a0:	lsr	r0, r0, r2
   450a4:	orr	r0, r0, r1, lsl r4
   450a8:	mov	r1, r5
   450ac:	pop	{r4, r5, pc}
   450b0:	lsr	r0, r1, r4
   450b4:	mov	r1, r5
   450b8:	pop	{r4, r5, pc}
   450bc:	teq	r4, #0
   450c0:	eor	r3, r3, #1048576	; 0x100000
   450c4:	eoreq	r1, r1, #1048576	; 0x100000
   450c8:	addeq	r4, r4, #1
   450cc:	subne	r5, r5, #1
   450d0:	b	44f5c <flatcc_json_printer_clear@@Base+0x238>
   450d4:	mvns	ip, r4, asr #21
   450d8:	mvnsne	ip, r5, asr #21
   450dc:	beq	45144 <flatcc_json_printer_clear@@Base+0x420>
   450e0:	teq	r4, r5
   450e4:	teqeq	r0, r2
   450e8:	beq	450fc <flatcc_json_printer_clear@@Base+0x3d8>
   450ec:	orrs	ip, r4, r0
   450f0:	moveq	r1, r3
   450f4:	moveq	r0, r2
   450f8:	pop	{r4, r5, pc}
   450fc:	teq	r1, r3
   45100:	movne	r1, #0
   45104:	movne	r0, #0
   45108:	popne	{r4, r5, pc}
   4510c:	lsrs	ip, r4, #21
   45110:	bne	45124 <flatcc_json_printer_clear@@Base+0x400>
   45114:	lsls	r0, r0, #1
   45118:	adcs	r1, r1, r1
   4511c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   45120:	pop	{r4, r5, pc}
   45124:	adds	r4, r4, #4194304	; 0x400000
   45128:	addcc	r1, r1, #1048576	; 0x100000
   4512c:	popcc	{r4, r5, pc}
   45130:	and	r5, r1, #-2147483648	; 0x80000000
   45134:	orr	r1, r5, #2130706432	; 0x7f000000
   45138:	orr	r1, r1, #15728640	; 0xf00000
   4513c:	mov	r0, #0
   45140:	pop	{r4, r5, pc}
   45144:	mvns	ip, r4, asr #21
   45148:	movne	r1, r3
   4514c:	movne	r0, r2
   45150:	mvnseq	ip, r5, asr #21
   45154:	movne	r3, r1
   45158:	movne	r2, r0
   4515c:	orrs	r4, r0, r1, lsl #12
   45160:	orrseq	r5, r2, r3, lsl #12
   45164:	teqeq	r1, r3
   45168:	orrne	r1, r1, #524288	; 0x80000
   4516c:	pop	{r4, r5, pc}
   45170:	teq	r0, #0
   45174:	moveq	r1, #0
   45178:	bxeq	lr
   4517c:	push	{r4, r5, lr}
   45180:	mov	r4, #1024	; 0x400
   45184:	add	r4, r4, #50	; 0x32
   45188:	mov	r5, #0
   4518c:	mov	r1, #0
   45190:	b	4500c <flatcc_json_printer_clear@@Base+0x2e8>
   45194:	teq	r0, #0
   45198:	moveq	r1, #0
   4519c:	bxeq	lr
   451a0:	push	{r4, r5, lr}
   451a4:	mov	r4, #1024	; 0x400
   451a8:	add	r4, r4, #50	; 0x32
   451ac:	ands	r5, r0, #-2147483648	; 0x80000000
   451b0:	rsbmi	r0, r0, #0
   451b4:	mov	r1, #0
   451b8:	b	4500c <flatcc_json_printer_clear@@Base+0x2e8>
   451bc:	lsls	r2, r0, #1
   451c0:	asr	r1, r2, #3
   451c4:	rrx	r1, r1
   451c8:	lsl	r0, r2, #28
   451cc:	andsne	r3, r2, #-16777216	; 0xff000000
   451d0:	teqne	r3, #-16777216	; 0xff000000
   451d4:	eorne	r1, r1, #939524096	; 0x38000000
   451d8:	bxne	lr
   451dc:	bics	r2, r2, #-16777216	; 0xff000000
   451e0:	bxeq	lr
   451e4:	teq	r3, #-16777216	; 0xff000000
   451e8:	orreq	r1, r1, #524288	; 0x80000
   451ec:	bxeq	lr
   451f0:	push	{r4, r5, lr}
   451f4:	mov	r4, #896	; 0x380
   451f8:	and	r5, r1, #-2147483648	; 0x80000000
   451fc:	bic	r1, r1, #-2147483648	; 0x80000000
   45200:	b	4500c <flatcc_json_printer_clear@@Base+0x2e8>
   45204:	orrs	r2, r0, r1
   45208:	bxeq	lr
   4520c:	push	{r4, r5, lr}
   45210:	mov	r5, #0
   45214:	b	45234 <flatcc_json_printer_clear@@Base+0x510>
   45218:	orrs	r2, r0, r1
   4521c:	bxeq	lr
   45220:	push	{r4, r5, lr}
   45224:	ands	r5, r1, #-2147483648	; 0x80000000
   45228:	bpl	45234 <flatcc_json_printer_clear@@Base+0x510>
   4522c:	rsbs	r0, r0, #0
   45230:	rsc	r1, r1, #0
   45234:	mov	r4, #1024	; 0x400
   45238:	add	r4, r4, #50	; 0x32
   4523c:	lsrs	ip, r1, #22
   45240:	beq	44fb0 <flatcc_json_printer_clear@@Base+0x28c>
   45244:	mov	r2, #3
   45248:	lsrs	ip, ip, #3
   4524c:	addne	r2, r2, #3
   45250:	lsrs	ip, ip, #3
   45254:	addne	r2, r2, #3
   45258:	add	r2, r2, ip, lsr #3
   4525c:	rsb	r3, r2, #32
   45260:	lsl	ip, r0, r3
   45264:	lsr	r0, r0, r2
   45268:	orr	r0, r0, r1, lsl r3
   4526c:	lsr	r1, r1, r2
   45270:	add	r4, r4, r2
   45274:	b	44fb0 <flatcc_json_printer_clear@@Base+0x28c>
   45278:	eor	r0, r0, #-2147483648	; 0x80000000
   4527c:	b	45284 <flatcc_json_printer_clear@@Base+0x560>
   45280:	eor	r1, r1, #-2147483648	; 0x80000000
   45284:	lsls	r2, r0, #1
   45288:	lslsne	r3, r1, #1
   4528c:	teqne	r2, r3
   45290:	mvnsne	ip, r2, asr #24
   45294:	mvnsne	ip, r3, asr #24
   45298:	beq	45390 <flatcc_json_printer_clear@@Base+0x66c>
   4529c:	lsr	r2, r2, #24
   452a0:	rsbs	r3, r2, r3, lsr #24
   452a4:	addgt	r2, r2, r3
   452a8:	eorgt	r1, r0, r1
   452ac:	eorgt	r0, r1, r0
   452b0:	eorgt	r1, r0, r1
   452b4:	rsblt	r3, r3, #0
   452b8:	cmp	r3, #25
   452bc:	bxhi	lr
   452c0:	tst	r0, #-2147483648	; 0x80000000
   452c4:	orr	r0, r0, #8388608	; 0x800000
   452c8:	bic	r0, r0, #-16777216	; 0xff000000
   452cc:	rsbne	r0, r0, #0
   452d0:	tst	r1, #-2147483648	; 0x80000000
   452d4:	orr	r1, r1, #8388608	; 0x800000
   452d8:	bic	r1, r1, #-16777216	; 0xff000000
   452dc:	rsbne	r1, r1, #0
   452e0:	teq	r2, r3
   452e4:	beq	45378 <flatcc_json_printer_clear@@Base+0x654>
   452e8:	sub	r2, r2, #1
   452ec:	adds	r0, r0, r1, asr r3
   452f0:	rsb	r3, r3, #32
   452f4:	lsl	r1, r1, r3
   452f8:	and	r3, r0, #-2147483648	; 0x80000000
   452fc:	bpl	45308 <flatcc_json_printer_clear@@Base+0x5e4>
   45300:	rsbs	r1, r1, #0
   45304:	rsc	r0, r0, #0
   45308:	cmp	r0, #8388608	; 0x800000
   4530c:	bcc	45340 <flatcc_json_printer_clear@@Base+0x61c>
   45310:	cmp	r0, #16777216	; 0x1000000
   45314:	bcc	4532c <flatcc_json_printer_clear@@Base+0x608>
   45318:	lsrs	r0, r0, #1
   4531c:	rrx	r1, r1
   45320:	add	r2, r2, #1
   45324:	cmp	r2, #254	; 0xfe
   45328:	bcs	453e4 <flatcc_json_printer_clear@@Base+0x6c0>
   4532c:	cmp	r1, #-2147483648	; 0x80000000
   45330:	adc	r0, r0, r2, lsl #23
   45334:	biceq	r0, r0, #1
   45338:	orr	r0, r0, r3
   4533c:	bx	lr
   45340:	lsls	r1, r1, #1
   45344:	adc	r0, r0, r0
   45348:	tst	r0, #8388608	; 0x800000
   4534c:	sub	r2, r2, #1
   45350:	bne	4532c <flatcc_json_printer_clear@@Base+0x608>
   45354:	clz	ip, r0
   45358:	sub	ip, ip, #8
   4535c:	subs	r2, r2, ip
   45360:	lsl	r0, r0, ip
   45364:	addge	r0, r0, r2, lsl #23
   45368:	rsblt	r2, r2, #0
   4536c:	orrge	r0, r0, r3
   45370:	orrlt	r0, r3, r0, lsr r2
   45374:	bx	lr
   45378:	teq	r2, #0
   4537c:	eor	r1, r1, #8388608	; 0x800000
   45380:	eoreq	r0, r0, #8388608	; 0x800000
   45384:	addeq	r2, r2, #1
   45388:	subne	r3, r3, #1
   4538c:	b	452e8 <flatcc_json_printer_clear@@Base+0x5c4>
   45390:	lsl	r3, r1, #1
   45394:	mvns	ip, r2, asr #24
   45398:	mvnsne	ip, r3, asr #24
   4539c:	beq	453f0 <flatcc_json_printer_clear@@Base+0x6cc>
   453a0:	teq	r2, r3
   453a4:	beq	453b4 <flatcc_json_printer_clear@@Base+0x690>
   453a8:	teq	r2, #0
   453ac:	moveq	r0, r1
   453b0:	bx	lr
   453b4:	teq	r0, r1
   453b8:	movne	r0, #0
   453bc:	bxne	lr
   453c0:	tst	r2, #-16777216	; 0xff000000
   453c4:	bne	453d4 <flatcc_json_printer_clear@@Base+0x6b0>
   453c8:	lsls	r0, r0, #1
   453cc:	orrcs	r0, r0, #-2147483648	; 0x80000000
   453d0:	bx	lr
   453d4:	adds	r2, r2, #33554432	; 0x2000000
   453d8:	addcc	r0, r0, #8388608	; 0x800000
   453dc:	bxcc	lr
   453e0:	and	r3, r0, #-2147483648	; 0x80000000
   453e4:	orr	r0, r3, #2130706432	; 0x7f000000
   453e8:	orr	r0, r0, #8388608	; 0x800000
   453ec:	bx	lr
   453f0:	mvns	r2, r2, asr #24
   453f4:	movne	r0, r1
   453f8:	mvnseq	r3, r3, asr #24
   453fc:	movne	r1, r0
   45400:	lsls	r2, r0, #9
   45404:	lslseq	r3, r1, #9
   45408:	teqeq	r0, r1
   4540c:	orrne	r0, r0, #4194304	; 0x400000
   45410:	bx	lr
   45414:	mov	r3, #0
   45418:	b	45424 <flatcc_json_printer_clear@@Base+0x700>
   4541c:	ands	r3, r0, #-2147483648	; 0x80000000
   45420:	rsbmi	r0, r0, #0
   45424:	movs	ip, r0
   45428:	bxeq	lr
   4542c:	orr	r3, r3, #1258291200	; 0x4b000000
   45430:	mov	r1, r0
   45434:	mov	r0, #0
   45438:	b	4547c <flatcc_json_printer_clear@@Base+0x758>
   4543c:	orrs	r2, r0, r1
   45440:	bxeq	lr
   45444:	mov	r3, #0
   45448:	b	45464 <flatcc_json_printer_clear@@Base+0x740>
   4544c:	orrs	r2, r0, r1
   45450:	bxeq	lr
   45454:	ands	r3, r1, #-2147483648	; 0x80000000
   45458:	bpl	45464 <flatcc_json_printer_clear@@Base+0x740>
   4545c:	rsbs	r0, r0, #0
   45460:	rsc	r1, r1, #0
   45464:	movs	ip, r1
   45468:	moveq	ip, r0
   4546c:	moveq	r1, r0
   45470:	moveq	r0, #0
   45474:	orr	r3, r3, #1526726656	; 0x5b000000
   45478:	subeq	r3, r3, #268435456	; 0x10000000
   4547c:	sub	r3, r3, #8388608	; 0x800000
   45480:	clz	r2, ip
   45484:	subs	r2, r2, #8
   45488:	sub	r3, r3, r2, lsl #23
   4548c:	blt	454ac <flatcc_json_printer_clear@@Base+0x788>
   45490:	add	r3, r3, r1, lsl r2
   45494:	lsl	ip, r0, r2
   45498:	rsb	r2, r2, #32
   4549c:	cmp	ip, #-2147483648	; 0x80000000
   454a0:	adc	r0, r3, r0, lsr r2
   454a4:	biceq	r0, r0, #1
   454a8:	bx	lr
   454ac:	add	r2, r2, #32
   454b0:	lsl	ip, r1, r2
   454b4:	rsb	r2, r2, #32
   454b8:	orrs	r0, r0, ip, lsl #1
   454bc:	adc	r0, r3, r1, lsr r2
   454c0:	biceq	r0, r0, ip, lsr #31
   454c4:	bx	lr
   454c8:	cmp	r3, #0
   454cc:	cmpeq	r2, #0
   454d0:	bne	454e8 <flatcc_json_printer_clear@@Base+0x7c4>
   454d4:	cmp	r1, #0
   454d8:	cmpeq	r0, #0
   454dc:	mvnne	r1, #0
   454e0:	mvnne	r0, #0
   454e4:	b	45504 <flatcc_json_printer_clear@@Base+0x7e0>
   454e8:	sub	sp, sp, #8
   454ec:	push	{sp, lr}
   454f0:	bl	45514 <flatcc_json_printer_clear@@Base+0x7f0>
   454f4:	ldr	lr, [sp, #4]
   454f8:	add	sp, sp, #8
   454fc:	pop	{r2, r3}
   45500:	bx	lr
   45504:	push	{r1, lr}
   45508:	mov	r0, #8
   4550c:	bl	14e28 <raise@plt>
   45510:	pop	{r1, pc}
   45514:	cmp	r1, r3
   45518:	cmpeq	r0, r2
   4551c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45520:	mov	r4, r0
   45524:	movcc	r0, #0
   45528:	mov	r5, r1
   4552c:	ldr	lr, [sp, #36]	; 0x24
   45530:	movcc	r1, r0
   45534:	bcc	45630 <flatcc_json_printer_clear@@Base+0x90c>
   45538:	cmp	r3, #0
   4553c:	clzeq	ip, r2
   45540:	clzne	ip, r3
   45544:	addeq	ip, ip, #32
   45548:	cmp	r5, #0
   4554c:	clzeq	r1, r4
   45550:	addeq	r1, r1, #32
   45554:	clzne	r1, r5
   45558:	sub	ip, ip, r1
   4555c:	sub	sl, ip, #32
   45560:	lsl	r9, r3, ip
   45564:	rsb	fp, ip, #32
   45568:	orr	r9, r9, r2, lsl sl
   4556c:	orr	r9, r9, r2, lsr fp
   45570:	lsl	r8, r2, ip
   45574:	cmp	r5, r9
   45578:	cmpeq	r4, r8
   4557c:	movcc	r0, #0
   45580:	movcc	r1, r0
   45584:	bcc	455a0 <flatcc_json_printer_clear@@Base+0x87c>
   45588:	mov	r0, #1
   4558c:	subs	r4, r4, r8
   45590:	lsl	r1, r0, sl
   45594:	orr	r1, r1, r0, lsr fp
   45598:	lsl	r0, r0, ip
   4559c:	sbc	r5, r5, r9
   455a0:	cmp	ip, #0
   455a4:	beq	45630 <flatcc_json_printer_clear@@Base+0x90c>
   455a8:	lsr	r6, r8, #1
   455ac:	orr	r6, r6, r9, lsl #31
   455b0:	lsr	r7, r9, #1
   455b4:	mov	r2, ip
   455b8:	b	455dc <flatcc_json_printer_clear@@Base+0x8b8>
   455bc:	subs	r3, r4, r6
   455c0:	sbc	r8, r5, r7
   455c4:	adds	r3, r3, r3
   455c8:	adc	r8, r8, r8
   455cc:	adds	r4, r3, #1
   455d0:	adc	r5, r8, #0
   455d4:	subs	r2, r2, #1
   455d8:	beq	455f8 <flatcc_json_printer_clear@@Base+0x8d4>
   455dc:	cmp	r5, r7
   455e0:	cmpeq	r4, r6
   455e4:	bcs	455bc <flatcc_json_printer_clear@@Base+0x898>
   455e8:	adds	r4, r4, r4
   455ec:	adc	r5, r5, r5
   455f0:	subs	r2, r2, #1
   455f4:	bne	455dc <flatcc_json_printer_clear@@Base+0x8b8>
   455f8:	lsr	r3, r4, ip
   455fc:	orr	r3, r3, r5, lsl fp
   45600:	lsr	r2, r5, ip
   45604:	orr	r3, r3, r5, lsr sl
   45608:	adds	r0, r0, r4
   4560c:	mov	r4, r3
   45610:	lsl	r3, r2, ip
   45614:	orr	r3, r3, r4, lsl sl
   45618:	lsl	ip, r4, ip
   4561c:	orr	r3, r3, r4, lsr fp
   45620:	adc	r1, r1, r5
   45624:	subs	r0, r0, ip
   45628:	mov	r5, r2
   4562c:	sbc	r1, r1, r3
   45630:	cmp	lr, #0
   45634:	strdne	r4, [lr]
   45638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004563c <__libc_csu_init@@Base>:
   4563c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   45640:	mov	r7, r0
   45644:	ldr	r6, [pc, #72]	; 45694 <__libc_csu_init@@Base+0x58>
   45648:	ldr	r5, [pc, #72]	; 45698 <__libc_csu_init@@Base+0x5c>
   4564c:	add	r6, pc, r6
   45650:	add	r5, pc, r5
   45654:	sub	r6, r6, r5
   45658:	mov	r8, r1
   4565c:	mov	r9, r2
   45660:	bl	14e08 <raise@plt-0x20>
   45664:	asrs	r6, r6, #2
   45668:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4566c:	mov	r4, #0
   45670:	add	r4, r4, #1
   45674:	ldr	r3, [r5], #4
   45678:	mov	r2, r9
   4567c:	mov	r1, r8
   45680:	mov	r0, r7
   45684:	blx	r3
   45688:	cmp	r6, r4
   4568c:	bne	45670 <__libc_csu_init@@Base+0x34>
   45690:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   45694:	andeq	r6, r1, r8, lsr r7
   45698:	andeq	r6, r1, r0, lsr r7

0004569c <__libc_csu_fini@@Base>:
   4569c:	bx	lr

Disassembly of section .fini:

000456a0 <.fini>:
   456a0:	push	{r3, lr}
   456a4:	pop	{r3, pc}
