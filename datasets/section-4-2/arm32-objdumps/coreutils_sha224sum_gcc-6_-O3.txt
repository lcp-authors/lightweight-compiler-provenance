
../repos/coreutils/src/sha224sum:     file format elf32-littlearm


Disassembly of section .init:

00010d5c <.init>:
   10d5c:	push	{r3, lr}
   10d60:	bl	122d4 <dcngettext@plt+0x12ac>
   10d64:	pop	{r3, pc}

Disassembly of section .plt:

00010d68 <fdopen@plt-0x14>:
   10d68:	push	{lr}		; (str lr, [sp, #-4]!)
   10d6c:	ldr	lr, [pc, #4]	; 10d78 <fdopen@plt-0x4>
   10d70:	add	lr, pc, lr
   10d74:	ldr	pc, [lr, #8]!
   10d78:	andeq	ip, r1, r8, lsl #5

00010d7c <fdopen@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #28, 20	; 0x1c000
   10d84:	ldr	pc, [ip, #648]!	; 0x288

00010d88 <calloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #28, 20	; 0x1c000
   10d90:	ldr	pc, [ip, #640]!	; 0x280

00010d94 <fputs_unlocked@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #28, 20	; 0x1c000
   10d9c:	ldr	pc, [ip, #632]!	; 0x278

00010da0 <raise@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #28, 20	; 0x1c000
   10da8:	ldr	pc, [ip, #624]!	; 0x270

00010dac <__getdelim@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #28, 20	; 0x1c000
   10db4:	ldr	pc, [ip, #616]!	; 0x268

00010db8 <strcmp@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #28, 20	; 0x1c000
   10dc0:	ldr	pc, [ip, #608]!	; 0x260

00010dc4 <posix_fadvise64@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #28, 20	; 0x1c000
   10dcc:	ldr	pc, [ip, #600]!	; 0x258

00010dd0 <fflush@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #28, 20	; 0x1c000
   10dd8:	ldr	pc, [ip, #592]!	; 0x250

00010ddc <free@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #28, 20	; 0x1c000
   10de4:	ldr	pc, [ip, #584]!	; 0x248

00010de8 <_exit@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #28, 20	; 0x1c000
   10df0:	ldr	pc, [ip, #576]!	; 0x240

00010df4 <memcpy@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #28, 20	; 0x1c000
   10dfc:	ldr	pc, [ip, #568]!	; 0x238

00010e00 <mbsinit@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #28, 20	; 0x1c000
   10e08:	ldr	pc, [ip, #560]!	; 0x230

00010e0c <fwrite_unlocked@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #28, 20	; 0x1c000
   10e14:	ldr	pc, [ip, #552]!	; 0x228

00010e18 <memcmp@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #28, 20	; 0x1c000
   10e20:	ldr	pc, [ip, #544]!	; 0x220

00010e24 <fputc_unlocked@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #28, 20	; 0x1c000
   10e2c:	ldr	pc, [ip, #536]!	; 0x218

00010e30 <dcgettext@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #28, 20	; 0x1c000
   10e38:	ldr	pc, [ip, #528]!	; 0x210

00010e3c <realloc@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #28, 20	; 0x1c000
   10e44:	ldr	pc, [ip, #520]!	; 0x208

00010e48 <textdomain@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #28, 20	; 0x1c000
   10e50:	ldr	pc, [ip, #512]!	; 0x200

00010e54 <iswprint@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #28, 20	; 0x1c000
   10e5c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e60 <__memcpy_chk@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #28, 20	; 0x1c000
   10e68:	ldr	pc, [ip, #496]!	; 0x1f0

00010e6c <fwrite@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #28, 20	; 0x1c000
   10e74:	ldr	pc, [ip, #488]!	; 0x1e8

00010e78 <lseek64@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #28, 20	; 0x1c000
   10e80:	ldr	pc, [ip, #480]!	; 0x1e0

00010e84 <__ctype_get_mb_cur_max@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #28, 20	; 0x1c000
   10e8c:	ldr	pc, [ip, #472]!	; 0x1d8

00010e90 <__fpending@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #28, 20	; 0x1c000
   10e98:	ldr	pc, [ip, #464]!	; 0x1d0

00010e9c <mbrtowc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #28, 20	; 0x1c000
   10ea4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea8 <error@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #28, 20	; 0x1c000
   10eb0:	ldr	pc, [ip, #448]!	; 0x1c0

00010eb4 <malloc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #28, 20	; 0x1c000
   10ebc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ec0 <__libc_start_main@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #28, 20	; 0x1c000
   10ec8:	ldr	pc, [ip, #432]!	; 0x1b0

00010ecc <__freading@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #28, 20	; 0x1c000
   10ed4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed8 <__ctype_tolower_loc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #28, 20	; 0x1c000
   10ee0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ee4 <__gmon_start__@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #28, 20	; 0x1c000
   10eec:	ldr	pc, [ip, #408]!	; 0x198

00010ef0 <getopt_long@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #28, 20	; 0x1c000
   10ef8:	ldr	pc, [ip, #400]!	; 0x190

00010efc <__ctype_b_loc@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #28, 20	; 0x1c000
   10f04:	ldr	pc, [ip, #392]!	; 0x188

00010f08 <exit@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #28, 20	; 0x1c000
   10f10:	ldr	pc, [ip, #384]!	; 0x180

00010f14 <strlen@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #28, 20	; 0x1c000
   10f1c:	ldr	pc, [ip, #376]!	; 0x178

00010f20 <strchr@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #28, 20	; 0x1c000
   10f28:	ldr	pc, [ip, #368]!	; 0x170

00010f2c <__errno_location@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #28, 20	; 0x1c000
   10f34:	ldr	pc, [ip, #360]!	; 0x168

00010f38 <__cxa_atexit@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #28, 20	; 0x1c000
   10f40:	ldr	pc, [ip, #352]!	; 0x160

00010f44 <setvbuf@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #28, 20	; 0x1c000
   10f4c:	ldr	pc, [ip, #344]!	; 0x158

00010f50 <memset@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #28, 20	; 0x1c000
   10f58:	ldr	pc, [ip, #336]!	; 0x150

00010f5c <__printf_chk@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #28, 20	; 0x1c000
   10f64:	ldr	pc, [ip, #328]!	; 0x148

00010f68 <fileno@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #28, 20	; 0x1c000
   10f70:	ldr	pc, [ip, #320]!	; 0x140

00010f74 <__fprintf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #28, 20	; 0x1c000
   10f7c:	ldr	pc, [ip, #312]!	; 0x138

00010f80 <fclose@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #28, 20	; 0x1c000
   10f88:	ldr	pc, [ip, #304]!	; 0x130

00010f8c <fseeko64@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #28, 20	; 0x1c000
   10f94:	ldr	pc, [ip, #296]!	; 0x128

00010f98 <fcntl64@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #28, 20	; 0x1c000
   10fa0:	ldr	pc, [ip, #288]!	; 0x120

00010fa4 <__overflow@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #28, 20	; 0x1c000
   10fac:	ldr	pc, [ip, #280]!	; 0x118

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #28, 20	; 0x1c000
   10fb8:	ldr	pc, [ip, #272]!	; 0x110

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #28, 20	; 0x1c000
   10fc4:	ldr	pc, [ip, #264]!	; 0x108

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #28, 20	; 0x1c000
   10fd0:	ldr	pc, [ip, #256]!	; 0x100

00010fd4 <clearerr_unlocked@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #28, 20	; 0x1c000
   10fdc:	ldr	pc, [ip, #248]!	; 0xf8

00010fe0 <fopen64@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #28, 20	; 0x1c000
   10fe8:	ldr	pc, [ip, #240]!	; 0xf0

00010fec <bindtextdomain@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #28, 20	; 0x1c000
   10ff4:	ldr	pc, [ip, #232]!	; 0xe8

00010ff8 <fread_unlocked@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #28, 20	; 0x1c000
   11000:	ldr	pc, [ip, #224]!	; 0xe0

00011004 <strncmp@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #28, 20	; 0x1c000
   1100c:	ldr	pc, [ip, #216]!	; 0xd8

00011010 <abort@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #28, 20	; 0x1c000
   11018:	ldr	pc, [ip, #208]!	; 0xd0

0001101c <close@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #200]!	; 0xc8

00011028 <dcngettext@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #192]!	; 0xc0

Disassembly of section .text:

00011034 <.text>:
   11034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11038:	mov	r6, r0
   1103c:	sub	sp, sp, #188	; 0xbc
   11040:	ldr	r0, [r1]
   11044:	mov	r5, r1
   11048:	bl	15c0c <dcngettext@plt+0x4be4>
   1104c:	ldr	r1, [pc, #3968]	; 11fd4 <dcngettext@plt+0xfac>
   11050:	mov	r0, #6
   11054:	bl	10fb0 <setlocale@plt>
   11058:	ldr	r1, [pc, #3960]	; 11fd8 <dcngettext@plt+0xfb0>
   1105c:	ldr	r0, [pc, #3960]	; 11fdc <dcngettext@plt+0xfb4>
   11060:	bl	10fec <bindtextdomain@plt>
   11064:	ldr	r0, [pc, #3952]	; 11fdc <dcngettext@plt+0xfb4>
   11068:	bl	10e48 <textdomain@plt>
   1106c:	ldr	r0, [pc, #3948]	; 11fe0 <dcngettext@plt+0xfb8>
   11070:	bl	1b834 <dcngettext@plt+0xa80c>
   11074:	ldr	r2, [pc, #3944]	; 11fe4 <dcngettext@plt+0xfbc>
   11078:	mov	r3, #0
   1107c:	ldr	r8, [pc, #3940]	; 11fe8 <dcngettext@plt+0xfc0>
   11080:	ldr	r7, [pc, #3940]	; 11fec <dcngettext@plt+0xfc4>
   11084:	ldr	r9, [pc, #3940]	; 11ff0 <dcngettext@plt+0xfc8>
   11088:	ldr	fp, [pc, #3940]	; 11ff4 <dcngettext@plt+0xfcc>
   1108c:	ldr	r0, [r2]
   11090:	mov	r1, r3
   11094:	mov	r2, #1
   11098:	mov	sl, #1
   1109c:	mov	r4, r3
   110a0:	str	r3, [sp, #32]
   110a4:	bl	10f44 <setvbuf@plt>
   110a8:	mvn	r3, #0
   110ac:	str	r4, [sp, #16]
   110b0:	str	r3, [sp, #20]
   110b4:	mov	r4, #0
   110b8:	str	r4, [sp]
   110bc:	mov	r3, r8
   110c0:	mov	r2, r7
   110c4:	mov	r1, r5
   110c8:	mov	r0, r6
   110cc:	bl	10ef0 <getopt_long@plt>
   110d0:	cmn	r0, #1
   110d4:	beq	11228 <dcngettext@plt+0x200>
   110d8:	cmp	r0, #119	; 0x77
   110dc:	beq	11218 <dcngettext@plt+0x1f0>
   110e0:	ble	11118 <dcngettext@plt+0xf0>
   110e4:	cmp	r0, fp
   110e8:	beq	11208 <dcngettext@plt+0x1e0>
   110ec:	ble	11154 <dcngettext@plt+0x12c>
   110f0:	ldr	r3, [pc, #3840]	; 11ff8 <dcngettext@plt+0xfd0>
   110f4:	cmp	r0, r3
   110f8:	beq	11200 <dcngettext@plt+0x1d8>
   110fc:	blt	111b0 <dcngettext@plt+0x188>
   11100:	cmp	r0, #260	; 0x104
   11104:	bne	111f8 <dcngettext@plt+0x1d0>
   11108:	mov	r3, #1
   1110c:	str	sl, [sp, #32]
   11110:	str	r3, [sp, #20]
   11114:	b	110b4 <dcngettext@plt+0x8c>
   11118:	cmp	r0, #98	; 0x62
   1111c:	beq	111cc <dcngettext@plt+0x1a4>
   11120:	bgt	1113c <dcngettext@plt+0x114>
   11124:	cmn	r0, #3
   11128:	beq	11174 <dcngettext@plt+0x14c>
   1112c:	cmn	r0, #2
   11130:	bne	111f8 <dcngettext@plt+0x1d0>
   11134:	mov	r0, r4
   11138:	bl	12648 <dcngettext@plt+0x1620>
   1113c:	cmp	r0, #99	; 0x63
   11140:	beq	1116c <dcngettext@plt+0x144>
   11144:	cmp	r0, #116	; 0x74
   11148:	bne	111f8 <dcngettext@plt+0x1d0>
   1114c:	str	r4, [sp, #20]
   11150:	b	110b4 <dcngettext@plt+0x8c>
   11154:	cmp	r0, #122	; 0x7a
   11158:	beq	111c0 <dcngettext@plt+0x198>
   1115c:	cmp	r0, #256	; 0x100
   11160:	bne	111f8 <dcngettext@plt+0x1d0>
   11164:	strb	sl, [r9, #1]
   11168:	b	110b4 <dcngettext@plt+0x8c>
   1116c:	str	sl, [sp, #16]
   11170:	b	110b4 <dcngettext@plt+0x8c>
   11174:	ldr	ip, [pc, #3712]	; 11ffc <dcngettext@plt+0xfd4>
   11178:	ldr	r1, [pc, #3712]	; 12000 <dcngettext@plt+0xfd8>
   1117c:	ldr	r3, [pc, #3712]	; 12004 <dcngettext@plt+0xfdc>
   11180:	ldr	r0, [pc, #3676]	; 11fe4 <dcngettext@plt+0xfbc>
   11184:	ldr	r2, [pc, #3708]	; 12008 <dcngettext@plt+0xfe0>
   11188:	str	r4, [sp, #12]
   1118c:	ldr	r0, [r0]
   11190:	ldr	r3, [r3]
   11194:	stmib	sp, {r1, ip}
   11198:	str	r2, [sp]
   1119c:	ldr	r1, [pc, #3688]	; 1200c <dcngettext@plt+0xfe4>
   111a0:	ldr	r2, [pc, #3688]	; 12010 <dcngettext@plt+0xfe8>
   111a4:	bl	1a4b8 <dcngettext@plt+0x9490>
   111a8:	mov	r0, r4
   111ac:	bl	10f08 <exit@plt>
   111b0:	strb	r4, [r9, #2]
   111b4:	strb	r4, [r9, #3]
   111b8:	strb	sl, [r9, #4]
   111bc:	b	110b4 <dcngettext@plt+0x8c>
   111c0:	ldr	r3, [pc, #3660]	; 12014 <dcngettext@plt+0xfec>
   111c4:	strb	r4, [r3]
   111c8:	b	110b4 <dcngettext@plt+0x8c>
   111cc:	mov	r3, #1
   111d0:	str	r3, [sp, #20]
   111d4:	b	110b4 <dcngettext@plt+0x8c>
   111d8:	ldr	r1, [pc, #3640]	; 12018 <dcngettext@plt+0xff0>
   111dc:	mov	r2, #5
   111e0:	mov	r0, r4
   111e4:	bl	10e30 <dcgettext@plt>
   111e8:	mov	r1, r4
   111ec:	mov	r2, r0
   111f0:	mov	r0, r4
   111f4:	bl	10ea8 <error@plt>
   111f8:	mov	r0, #1
   111fc:	bl	12648 <dcngettext@plt+0x1620>
   11200:	strb	sl, [r9, #5]
   11204:	b	110b4 <dcngettext@plt+0x8c>
   11208:	strb	sl, [r9, #2]
   1120c:	strb	r4, [r9, #3]
   11210:	strb	r4, [r9, #4]
   11214:	b	110b4 <dcngettext@plt+0x8c>
   11218:	strb	r4, [r9, #2]
   1121c:	strb	sl, [r9, #3]
   11220:	strb	r4, [r9, #4]
   11224:	b	110b4 <dcngettext@plt+0x8c>
   11228:	ldr	fp, [pc, #3520]	; 11ff0 <dcngettext@plt+0xfc8>
   1122c:	ldr	r3, [sp, #20]
   11230:	ldr	r7, [sp, #32]
   11234:	cmp	r3, r4
   11238:	movne	r7, #0
   1123c:	andeq	r7, r7, #1
   11240:	mov	r3, #58	; 0x3a
   11244:	str	r3, [fp, #8]
   11248:	cmp	r7, r4
   1124c:	mov	r3, #56	; 0x38
   11250:	str	r3, [fp, #12]
   11254:	bne	111d8 <dcngettext@plt+0x1b0>
   11258:	ldr	r3, [pc, #3508]	; 12014 <dcngettext@plt+0xfec>
   1125c:	ldrb	r4, [r3]
   11260:	ldr	r3, [sp, #16]
   11264:	cmp	r4, #10
   11268:	moveq	r3, #0
   1126c:	andne	r3, r3, #1
   11270:	cmp	r3, #0
   11274:	mov	r4, r3
   11278:	movne	r2, #5
   1127c:	ldrne	r1, [pc, #3480]	; 1201c <dcngettext@plt+0xff4>
   11280:	bne	12278 <dcngettext@plt+0x1250>
   11284:	ldr	r2, [sp, #32]
   11288:	ldr	r3, [sp, #16]
   1128c:	ands	r7, r3, r2
   11290:	movne	r2, #5
   11294:	ldrne	r1, [pc, #3460]	; 12020 <dcngettext@plt+0xff8>
   11298:	bne	111e0 <dcngettext@plt+0x1b8>
   1129c:	ldr	r2, [sp, #20]
   112a0:	ldr	r3, [sp, #16]
   112a4:	cmp	r2, #0
   112a8:	movlt	r3, #0
   112ac:	andge	r3, r3, #1
   112b0:	cmp	r3, #0
   112b4:	movne	r2, #5
   112b8:	ldrne	r1, [pc, #3428]	; 12024 <dcngettext@plt+0xffc>
   112bc:	bne	12278 <dcngettext@plt+0x1250>
   112c0:	ldrb	r3, [fp, #1]
   112c4:	ldr	r2, [sp, #16]
   112c8:	eor	r3, r3, #1
   112cc:	orrs	r4, r2, r3
   112d0:	moveq	r2, #5
   112d4:	ldreq	r1, [pc, #3404]	; 12028 <dcngettext@plt+0x1000>
   112d8:	beq	111e0 <dcngettext@plt+0x1b8>
   112dc:	ldrb	r3, [fp, #2]
   112e0:	ldr	r2, [sp, #16]
   112e4:	eor	r3, r3, #1
   112e8:	orrs	r4, r2, r3
   112ec:	moveq	r2, #5
   112f0:	ldreq	r1, [pc, #3380]	; 1202c <dcngettext@plt+0x1004>
   112f4:	beq	111e0 <dcngettext@plt+0x1b8>
   112f8:	ldrb	r3, [fp, #3]
   112fc:	ldr	r2, [sp, #16]
   11300:	eor	r3, r3, #1
   11304:	orrs	r4, r2, r3
   11308:	moveq	r2, #5
   1130c:	ldreq	r1, [pc, #3356]	; 12030 <dcngettext@plt+0x1008>
   11310:	beq	111e0 <dcngettext@plt+0x1b8>
   11314:	ldrb	r3, [fp, #4]
   11318:	ldr	r2, [sp, #16]
   1131c:	eor	r3, r3, #1
   11320:	orrs	r3, r2, r3
   11324:	str	r3, [sp, #40]	; 0x28
   11328:	moveq	r2, #5
   1132c:	ldreq	r1, [pc, #3328]	; 12034 <dcngettext@plt+0x100c>
   11330:	moveq	r4, r3
   11334:	beq	111e0 <dcngettext@plt+0x1b8>
   11338:	ldrb	r2, [fp, #5]
   1133c:	ldr	r3, [sp, #16]
   11340:	eor	r3, r3, #1
   11344:	ands	r3, r2, r3
   11348:	str	r3, [sp, #36]	; 0x24
   1134c:	bne	12270 <dcngettext@plt+0x1248>
   11350:	ldr	r3, [pc, #3296]	; 12038 <dcngettext@plt+0x1010>
   11354:	ldr	r1, [sp, #20]
   11358:	ldr	r3, [r3]
   1135c:	cmn	r1, #1
   11360:	mov	r2, r1
   11364:	moveq	r2, #0
   11368:	str	r2, [sp, #20]
   1136c:	cmp	r6, r3
   11370:	add	r2, r5, r6, lsl #2
   11374:	str	r2, [sp, #60]	; 0x3c
   11378:	addeq	r2, r2, #4
   1137c:	streq	r2, [sp, #60]	; 0x3c
   11380:	ldreq	r2, [pc, #3252]	; 1203c <dcngettext@plt+0x1014>
   11384:	streq	r2, [r5, r3, lsl #2]
   11388:	ldr	r2, [sp, #20]
   1138c:	add	r3, r5, r3, lsl #2
   11390:	cmp	r2, #0
   11394:	movne	r2, #42	; 0x2a
   11398:	moveq	r2, #32
   1139c:	str	r3, [sp, #20]
   113a0:	uxtb	r3, r2
   113a4:	str	r2, [sp, #100]	; 0x64
   113a8:	str	r3, [sp, #96]	; 0x60
   113ac:	ldr	r3, [sp, #60]	; 0x3c
   113b0:	ldr	r2, [sp, #20]
   113b4:	cmp	r3, r2
   113b8:	bls	11df0 <dcngettext@plt+0xdc8>
   113bc:	ldr	r3, [sp, #16]
   113c0:	cmp	r3, #0
   113c4:	ldr	r3, [sp, #20]
   113c8:	ldr	r5, [r3], #4
   113cc:	str	r3, [sp, #20]
   113d0:	beq	11750 <dcngettext@plt+0x728>
   113d4:	ldr	r1, [pc, #3168]	; 1203c <dcngettext@plt+0x1014>
   113d8:	mov	r0, r5
   113dc:	bl	10db8 <strcmp@plt>
   113e0:	subs	r3, r0, #0
   113e4:	str	r3, [sp, #48]	; 0x30
   113e8:	bne	11984 <dcngettext@plt+0x95c>
   113ec:	mov	r3, #1
   113f0:	mov	r2, #5
   113f4:	ldr	r1, [pc, #3140]	; 12040 <dcngettext@plt+0x1018>
   113f8:	strb	r3, [fp]
   113fc:	bl	10e30 <dcgettext@plt>
   11400:	ldr	r3, [pc, #3132]	; 12044 <dcngettext@plt+0x101c>
   11404:	ldr	sl, [r3]
   11408:	str	r0, [sp, #64]	; 0x40
   1140c:	add	r5, sp, #184	; 0xb8
   11410:	mov	r3, #0
   11414:	mov	r0, #0
   11418:	mov	r1, #0
   1141c:	str	r3, [r5, #-68]!	; 0xffffffbc
   11420:	str	r3, [sp, #112]	; 0x70
   11424:	ldr	r3, [sp, #36]	; 0x24
   11428:	strd	r0, [sp, #80]	; 0x50
   1142c:	strd	r0, [sp, #72]	; 0x48
   11430:	strd	r0, [sp, #24]
   11434:	str	r3, [sp, #88]	; 0x58
   11438:	str	r3, [sp, #68]	; 0x44
   1143c:	mov	r8, #1
   11440:	mov	r9, #0
   11444:	b	11464 <dcngettext@plt+0x43c>
   11448:	ldr	r3, [sl]
   1144c:	ands	r3, r3, #48	; 0x30
   11450:	bne	11770 <dcngettext@plt+0x748>
   11454:	adds	r8, r8, #1
   11458:	adc	r9, r9, #0
   1145c:	orrs	r2, r8, r9
   11460:	beq	11ed8 <dcngettext@plt+0xeb0>
   11464:	mov	r3, sl
   11468:	mov	r2, #10
   1146c:	mov	r1, r5
   11470:	add	r0, sp, #112	; 0x70
   11474:	bl	10dac <__getdelim@plt>
   11478:	subs	r4, r0, #0
   1147c:	ble	11770 <dcngettext@plt+0x748>
   11480:	ldr	r3, [sp, #112]	; 0x70
   11484:	ldrb	r2, [r3]
   11488:	cmp	r2, #35	; 0x23
   1148c:	beq	11448 <dcngettext@plt+0x420>
   11490:	add	r2, r3, r4
   11494:	ldrb	r0, [r2, #-1]
   11498:	cmp	r0, #10
   1149c:	subeq	r4, r4, #1
   114a0:	cmp	r4, #0
   114a4:	movle	r2, r4
   114a8:	subgt	r2, r4, #1
   114ac:	ldrb	r0, [r3, r2]
   114b0:	cmp	r0, #13
   114b4:	subeq	r4, r4, #1
   114b8:	cmp	r4, #0
   114bc:	beq	11448 <dcngettext@plt+0x420>
   114c0:	mov	r2, #0
   114c4:	strb	r2, [r3, r4]
   114c8:	ldr	r7, [sp, #112]	; 0x70
   114cc:	ldrb	r3, [r7]
   114d0:	cmp	r3, #32
   114d4:	cmpne	r3, #9
   114d8:	moveq	r1, #1
   114dc:	movne	r1, #0
   114e0:	bne	11de8 <dcngettext@plt+0xdc0>
   114e4:	mov	r6, r2
   114e8:	mov	r2, r7
   114ec:	ldrb	r3, [r2, #1]!
   114f0:	add	r6, r6, #1
   114f4:	cmp	r3, #9
   114f8:	cmpne	r3, #32
   114fc:	beq	114ec <dcngettext@plt+0x4c4>
   11500:	cmp	r3, #92	; 0x5c
   11504:	addeq	r6, r6, #1
   11508:	ldreq	r3, [sp, #16]
   1150c:	ldrne	r3, [sp, #36]	; 0x24
   11510:	add	r0, r7, r6
   11514:	mov	r2, #6
   11518:	ldr	r1, [pc, #2856]	; 12048 <dcngettext@plt+0x1020>
   1151c:	str	r3, [sp, #56]	; 0x38
   11520:	str	r0, [sp, #44]	; 0x2c
   11524:	bl	11004 <strncmp@plt>
   11528:	cmp	r0, #0
   1152c:	bne	1165c <dcngettext@plt+0x634>
   11530:	add	r2, r6, #6
   11534:	ldrb	r3, [r7, r2]
   11538:	cmp	r3, #32
   1153c:	addeq	r2, r6, #7
   11540:	ldrb	r3, [r7, r2]
   11544:	cmp	r3, #40	; 0x28
   11548:	bne	116ec <dcngettext@plt+0x6c4>
   1154c:	add	r2, r2, #1
   11550:	subs	r4, r4, r2
   11554:	beq	116ec <dcngettext@plt+0x6c4>
   11558:	add	r3, r7, r2
   1155c:	mov	ip, r3
   11560:	sub	r4, r4, #1
   11564:	str	r3, [sp, #52]	; 0x34
   11568:	mov	lr, ip
   1156c:	add	r3, r3, r4
   11570:	b	11588 <dcngettext@plt+0x560>
   11574:	mov	r0, r3
   11578:	sub	r3, r3, #1
   1157c:	ldrb	r4, [r0]
   11580:	cmp	r4, #41	; 0x29
   11584:	beq	115a8 <dcngettext@plt+0x580>
   11588:	cmp	ip, r3
   1158c:	sub	r1, r3, ip
   11590:	bne	11574 <dcngettext@plt+0x54c>
   11594:	ldrb	r3, [r7, r2]
   11598:	cmp	r3, #41	; 0x29
   1159c:	bne	116ec <dcngettext@plt+0x6c4>
   115a0:	ldr	r0, [sp, #52]	; 0x34
   115a4:	mov	r1, #0
   115a8:	ldr	r3, [sp, #56]	; 0x38
   115ac:	cmp	r3, #0
   115b0:	bne	121a8 <dcngettext@plt+0x1180>
   115b4:	mov	r3, #0
   115b8:	add	r1, r1, #1
   115bc:	strb	r3, [r0]
   115c0:	ldr	r2, [sp, #52]	; 0x34
   115c4:	b	115cc <dcngettext@plt+0x5a4>
   115c8:	add	r1, r1, #1
   115cc:	ldrb	r3, [r2, r1]
   115d0:	cmp	r3, #9
   115d4:	cmpne	r3, #32
   115d8:	beq	115c8 <dcngettext@plt+0x5a0>
   115dc:	cmp	r3, #61	; 0x3d
   115e0:	bne	116ec <dcngettext@plt+0x6c4>
   115e4:	ldr	r3, [sp, #52]	; 0x34
   115e8:	add	r1, r1, #1
   115ec:	add	r7, r3, r1
   115f0:	b	115f8 <dcngettext@plt+0x5d0>
   115f4:	mov	r7, r3
   115f8:	mov	r3, r7
   115fc:	ldrb	r2, [r3], #1
   11600:	cmp	r2, #9
   11604:	cmpne	r2, #32
   11608:	beq	115f4 <dcngettext@plt+0x5cc>
   1160c:	ldr	r4, [fp, #12]
   11610:	str	r7, [sp, #44]	; 0x2c
   11614:	add	r4, r7, r4
   11618:	b	1163c <dcngettext@plt+0x614>
   1161c:	bl	10efc <__ctype_b_loc@plt>
   11620:	ldrb	r3, [r6]
   11624:	add	r7, r7, #1
   11628:	lsl	r3, r3, #1
   1162c:	ldr	r2, [r0]
   11630:	ldrh	r3, [r2, r3]
   11634:	tst	r3, #4096	; 0x1000
   11638:	beq	116ec <dcngettext@plt+0x6c4>
   1163c:	cmp	r4, r7
   11640:	mov	r6, r7
   11644:	bne	1161c <dcngettext@plt+0x5f4>
   11648:	ldrb	r1, [r4]
   1164c:	ldr	r6, [sp, #44]	; 0x2c
   11650:	clz	r1, r1
   11654:	lsr	r1, r1, #5
   11658:	b	11c08 <dcngettext@plt+0xbe0>
   1165c:	ldrb	r0, [r7, r6]
   11660:	ldr	r2, [fp, #8]
   11664:	sub	r1, r4, r6
   11668:	cmp	r0, #92	; 0x5c
   1166c:	addeq	r2, r2, #1
   11670:	cmp	r1, r2
   11674:	bcc	116ec <dcngettext@plt+0x6c4>
   11678:	ldr	r2, [fp, #12]
   1167c:	add	r1, r6, r2
   11680:	ldrb	r0, [r7, r1]
   11684:	cmp	r0, #32
   11688:	cmpne	r0, #9
   1168c:	movne	r0, #1
   11690:	moveq	r0, #0
   11694:	bne	116ec <dcngettext@plt+0x6c4>
   11698:	cmp	r2, #0
   1169c:	str	r2, [sp, #52]	; 0x34
   116a0:	strb	r0, [r7, r1]
   116a4:	beq	11b30 <dcngettext@plt+0xb08>
   116a8:	str	r1, [sp, #92]	; 0x5c
   116ac:	bl	10efc <__ctype_b_loc@plt>
   116b0:	ldr	r3, [sp, #44]	; 0x2c
   116b4:	ldr	r2, [sp, #52]	; 0x34
   116b8:	mov	ip, r3
   116bc:	add	lr, r3, r2
   116c0:	ldr	r1, [sp, #92]	; 0x5c
   116c4:	ldr	r0, [r0]
   116c8:	b	116d8 <dcngettext@plt+0x6b0>
   116cc:	cmp	lr, ip
   116d0:	mov	r2, ip
   116d4:	beq	11b34 <dcngettext@plt+0xb0c>
   116d8:	ldrb	r3, [ip], #1
   116dc:	lsl	r3, r3, #1
   116e0:	ldrh	r3, [r0, r3]
   116e4:	tst	r3, #4096	; 0x1000
   116e8:	bne	116cc <dcngettext@plt+0x6a4>
   116ec:	ldrd	r0, [sp, #24]
   116f0:	ldrb	r3, [fp, #3]
   116f4:	adds	r0, r0, #1
   116f8:	adc	r1, r1, #0
   116fc:	cmp	r3, #0
   11700:	strd	r0, [sp, #24]
   11704:	beq	11448 <dcngettext@plt+0x420>
   11708:	mov	r2, #5
   1170c:	ldr	r1, [pc, #2360]	; 1204c <dcngettext@plt+0x1024>
   11710:	mov	r0, #0
   11714:	bl	10e30 <dcgettext@plt>
   11718:	ldr	r2, [sp, #64]	; 0x40
   1171c:	mov	r1, #3
   11720:	mov	r4, r0
   11724:	mov	r0, #0
   11728:	bl	18be4 <dcngettext@plt+0x7bbc>
   1172c:	ldr	r3, [pc, #2324]	; 12048 <dcngettext@plt+0x1020>
   11730:	mov	r1, #0
   11734:	str	r3, [sp, #8]
   11738:	mov	r2, r4
   1173c:	strd	r8, [sp]
   11740:	mov	r3, r0
   11744:	mov	r0, r1
   11748:	bl	10ea8 <error@plt>
   1174c:	b	11448 <dcngettext@plt+0x420>
   11750:	add	r2, sp, #152	; 0x98
   11754:	add	r1, sp, #120	; 0x78
   11758:	mov	r0, r5
   1175c:	bl	124b8 <dcngettext@plt+0x1490>
   11760:	subs	r8, r0, #0
   11764:	bne	11a34 <dcngettext@plt+0xa0c>
   11768:	str	r8, [sp, #40]	; 0x28
   1176c:	b	113ac <dcngettext@plt+0x384>
   11770:	ldr	r0, [sp, #112]	; 0x70
   11774:	bl	15b14 <dcngettext@plt+0x4aec>
   11778:	ldr	r4, [sl]
   1177c:	ldr	r3, [sp, #48]	; 0x30
   11780:	ands	r4, r4, #32
   11784:	mov	r0, sl
   11788:	bne	119d0 <dcngettext@plt+0x9a8>
   1178c:	cmp	r3, #0
   11790:	beq	117bc <dcngettext@plt+0x794>
   11794:	bl	1597c <dcngettext@plt+0x4954>
   11798:	cmp	r0, #0
   1179c:	beq	117c0 <dcngettext@plt+0x798>
   117a0:	bl	10f2c <__errno_location@plt>
   117a4:	ldr	r5, [r0]
   117a8:	cmp	r5, #0
   117ac:	blt	117c0 <dcngettext@plt+0x798>
   117b0:	ldrne	r4, [pc, #2200]	; 12050 <dcngettext@plt+0x1028>
   117b4:	bne	119f4 <dcngettext@plt+0x9cc>
   117b8:	b	119dc <dcngettext@plt+0x9b4>
   117bc:	bl	10fd4 <clearerr_unlocked@plt>
   117c0:	ldr	r3, [sp, #68]	; 0x44
   117c4:	cmp	r3, #0
   117c8:	beq	11e98 <dcngettext@plt+0xe70>
   117cc:	ldrb	r3, [fp, #2]
   117d0:	cmp	r3, #0
   117d4:	bne	11940 <dcngettext@plt+0x918>
   117d8:	ldrd	r0, [sp, #24]
   117dc:	mov	r2, r0
   117e0:	mov	r3, r1
   117e4:	orrs	r3, r2, r3
   117e8:	beq	11848 <dcngettext@plt+0x820>
   117ec:	mov	r3, #0
   117f0:	cmp	r1, r3
   117f4:	mvn	r2, #0
   117f8:	cmpeq	r0, r2
   117fc:	ldrls	r3, [sp, #24]
   11800:	bls	11818 <dcngettext@plt+0x7f0>
   11804:	ldr	r2, [pc, #2120]	; 12054 <dcngettext@plt+0x102c>
   11808:	mov	r3, #0
   1180c:	bl	1b65c <dcngettext@plt+0xa634>
   11810:	add	r3, r2, #999424	; 0xf4000
   11814:	add	r3, r3, #576	; 0x240
   11818:	mov	r2, #5
   1181c:	str	r2, [sp]
   11820:	ldr	r1, [pc, #2096]	; 12058 <dcngettext@plt+0x1030>
   11824:	ldr	r2, [pc, #2096]	; 1205c <dcngettext@plt+0x1034>
   11828:	mov	r0, #0
   1182c:	bl	11028 <dcngettext@plt>
   11830:	ldrd	r2, [sp, #24]
   11834:	mov	r1, #0
   11838:	strd	r2, [sp]
   1183c:	mov	r2, r0
   11840:	mov	r0, r1
   11844:	bl	10ea8 <error@plt>
   11848:	ldrd	r0, [sp, #72]	; 0x48
   1184c:	mov	r2, r0
   11850:	mov	r3, r1
   11854:	orrs	r3, r2, r3
   11858:	beq	118b8 <dcngettext@plt+0x890>
   1185c:	mov	r3, #0
   11860:	cmp	r1, r3
   11864:	mvn	r2, #0
   11868:	cmpeq	r0, r2
   1186c:	ldrls	r3, [sp, #72]	; 0x48
   11870:	bls	11888 <dcngettext@plt+0x860>
   11874:	ldr	r2, [pc, #2008]	; 12054 <dcngettext@plt+0x102c>
   11878:	mov	r3, #0
   1187c:	bl	1b65c <dcngettext@plt+0xa634>
   11880:	add	r3, r2, #999424	; 0xf4000
   11884:	add	r3, r3, #576	; 0x240
   11888:	mov	r2, #5
   1188c:	str	r2, [sp]
   11890:	ldr	r1, [pc, #1992]	; 12060 <dcngettext@plt+0x1038>
   11894:	ldr	r2, [pc, #1992]	; 12064 <dcngettext@plt+0x103c>
   11898:	mov	r0, #0
   1189c:	bl	11028 <dcngettext@plt>
   118a0:	ldrd	r2, [sp, #72]	; 0x48
   118a4:	mov	r1, #0
   118a8:	strd	r2, [sp]
   118ac:	mov	r2, r0
   118b0:	mov	r0, r1
   118b4:	bl	10ea8 <error@plt>
   118b8:	ldrd	r0, [sp, #80]	; 0x50
   118bc:	mov	r2, r0
   118c0:	mov	r3, r1
   118c4:	orrs	r3, r2, r3
   118c8:	beq	11928 <dcngettext@plt+0x900>
   118cc:	mov	r3, #0
   118d0:	cmp	r1, r3
   118d4:	mvn	r2, #0
   118d8:	cmpeq	r0, r2
   118dc:	ldrls	r3, [sp, #80]	; 0x50
   118e0:	bls	118f8 <dcngettext@plt+0x8d0>
   118e4:	ldr	r2, [pc, #1896]	; 12054 <dcngettext@plt+0x102c>
   118e8:	mov	r3, #0
   118ec:	bl	1b65c <dcngettext@plt+0xa634>
   118f0:	add	r3, r2, #999424	; 0xf4000
   118f4:	add	r3, r3, #576	; 0x240
   118f8:	mov	r2, #5
   118fc:	str	r2, [sp]
   11900:	ldr	r1, [pc, #1888]	; 12068 <dcngettext@plt+0x1040>
   11904:	ldr	r2, [pc, #1888]	; 1206c <dcngettext@plt+0x1044>
   11908:	mov	r0, #0
   1190c:	bl	11028 <dcngettext@plt>
   11910:	ldrd	r2, [sp, #80]	; 0x50
   11914:	mov	r1, #0
   11918:	strd	r2, [sp]
   1191c:	mov	r2, r0
   11920:	mov	r0, r1
   11924:	bl	10ea8 <error@plt>
   11928:	ldrb	r5, [fp, #1]
   1192c:	ldr	r3, [sp, #88]	; 0x58
   11930:	eor	r5, r5, #1
   11934:	orr	r5, r3, r5
   11938:	ands	r5, r5, #255	; 0xff
   1193c:	beq	1216c <dcngettext@plt+0x1144>
   11940:	ldr	r3, [sp, #88]	; 0x58
   11944:	cmp	r3, #0
   11948:	beq	1197c <dcngettext@plt+0x954>
   1194c:	ldrd	r2, [sp, #72]	; 0x48
   11950:	ldrd	r0, [sp, #80]	; 0x50
   11954:	orr	r2, r2, r0
   11958:	orr	r3, r3, r1
   1195c:	orrs	r3, r2, r3
   11960:	bne	1197c <dcngettext@plt+0x954>
   11964:	ldrd	r2, [sp, #24]
   11968:	ldrb	r4, [fp, #5]
   1196c:	mov	r1, r2
   11970:	orrs	r3, r1, r3
   11974:	eor	r4, r4, #1
   11978:	orreq	r4, r4, #1
   1197c:	and	r4, r4, #1
   11980:	b	11a1c <dcngettext@plt+0x9f4>
   11984:	ldr	r1, [pc, #1764]	; 12070 <dcngettext@plt+0x1048>
   11988:	mov	r0, r5
   1198c:	bl	15a7c <dcngettext@plt+0x4a54>
   11990:	subs	sl, r0, #0
   11994:	strne	r5, [sp, #64]	; 0x40
   11998:	bne	1140c <dcngettext@plt+0x3e4>
   1199c:	bl	10f2c <__errno_location@plt>
   119a0:	mov	r2, r5
   119a4:	mov	r1, #3
   119a8:	ldr	r4, [r0]
   119ac:	mov	r0, sl
   119b0:	bl	18be4 <dcngettext@plt+0x7bbc>
   119b4:	mov	r1, r4
   119b8:	ldr	r2, [pc, #1680]	; 12050 <dcngettext@plt+0x1028>
   119bc:	mov	r3, r0
   119c0:	mov	r0, sl
   119c4:	bl	10ea8 <error@plt>
   119c8:	ldr	r4, [sp, #36]	; 0x24
   119cc:	b	11a1c <dcngettext@plt+0x9f4>
   119d0:	cmp	r3, #0
   119d4:	beq	11a2c <dcngettext@plt+0xa04>
   119d8:	bl	1597c <dcngettext@plt+0x4954>
   119dc:	mov	r2, #5
   119e0:	ldr	r1, [pc, #1676]	; 12074 <dcngettext@plt+0x104c>
   119e4:	mov	r0, #0
   119e8:	bl	10e30 <dcgettext@plt>
   119ec:	mov	r5, #0
   119f0:	mov	r4, r0
   119f4:	ldr	r2, [sp, #64]	; 0x40
   119f8:	mov	r1, #3
   119fc:	mov	r0, #0
   11a00:	bl	18be4 <dcngettext@plt+0x7bbc>
   11a04:	mov	r2, r4
   11a08:	mov	r1, r5
   11a0c:	mov	r3, r0
   11a10:	mov	r0, #0
   11a14:	bl	10ea8 <error@plt>
   11a18:	ldr	r4, [sp, #36]	; 0x24
   11a1c:	ldr	r3, [sp, #40]	; 0x28
   11a20:	and	r3, r3, r4
   11a24:	str	r3, [sp, #40]	; 0x28
   11a28:	b	113ac <dcngettext@plt+0x384>
   11a2c:	bl	10fd4 <clearerr_unlocked@plt>
   11a30:	b	119dc <dcngettext@plt+0x9b4>
   11a34:	ldr	r3, [pc, #1496]	; 12014 <dcngettext@plt+0xfec>
   11a38:	ldrb	r9, [r3]
   11a3c:	cmp	r9, #10
   11a40:	beq	120ac <dcngettext@plt+0x1084>
   11a44:	ldr	r8, [sp, #16]
   11a48:	ldr	r3, [sp, #32]
   11a4c:	cmp	r3, #0
   11a50:	bne	11f70 <dcngettext@plt+0xf48>
   11a54:	ldr	r3, [fp, #12]
   11a58:	lsrs	r3, r3, #1
   11a5c:	beq	11a9c <dcngettext@plt+0xa74>
   11a60:	ldr	r7, [pc, #1552]	; 12078 <dcngettext@plt+0x1050>
   11a64:	add	sl, sp, #120	; 0x78
   11a68:	mov	r4, #0
   11a6c:	mov	r6, #1
   11a70:	ldrb	r2, [sl], #1
   11a74:	mov	r1, r7
   11a78:	mov	r0, r6
   11a7c:	bl	10f5c <__printf_chk@plt>
   11a80:	ldr	r3, [fp, #12]
   11a84:	add	r4, r4, #1
   11a88:	cmp	r4, r3, lsr #1
   11a8c:	bcc	11a70 <dcngettext@plt+0xa48>
   11a90:	ldr	r3, [sp, #32]
   11a94:	cmp	r3, #0
   11a98:	bne	11af8 <dcngettext@plt+0xad0>
   11a9c:	ldr	r3, [pc, #1344]	; 11fe4 <dcngettext@plt+0xfbc>
   11aa0:	ldr	r0, [r3]
   11aa4:	ldr	r3, [r0, #20]
   11aa8:	ldr	r2, [r0, #24]
   11aac:	cmp	r3, r2
   11ab0:	addcc	r1, r3, #1
   11ab4:	movcc	r2, #32
   11ab8:	strcc	r1, [r0, #20]
   11abc:	strbcc	r2, [r3]
   11ac0:	bcs	12120 <dcngettext@plt+0x10f8>
   11ac4:	ldr	r3, [pc, #1304]	; 11fe4 <dcngettext@plt+0xfbc>
   11ac8:	ldr	r0, [r3]
   11acc:	ldr	r2, [r0, #24]
   11ad0:	ldr	r3, [r0, #20]
   11ad4:	cmp	r3, r2
   11ad8:	addcc	r2, r3, #1
   11adc:	strcc	r2, [r0, #20]
   11ae0:	ldrbcc	r2, [sp, #96]	; 0x60
   11ae4:	strbcc	r2, [r3]
   11ae8:	bcs	12114 <dcngettext@plt+0x10ec>
   11aec:	mov	r1, r8
   11af0:	mov	r0, r5
   11af4:	bl	123c0 <dcngettext@plt+0x1398>
   11af8:	ldr	r3, [pc, #1252]	; 11fe4 <dcngettext@plt+0xfbc>
   11afc:	ldr	r0, [r3]
   11b00:	ldr	r3, [r0, #20]
   11b04:	ldr	r2, [r0, #24]
   11b08:	cmp	r3, r2
   11b0c:	addcc	r2, r3, #1
   11b10:	strcc	r2, [r0, #20]
   11b14:	ldrcc	r8, [sp, #40]	; 0x28
   11b18:	strbcc	r9, [r3]
   11b1c:	bcc	11768 <dcngettext@plt+0x740>
   11b20:	mov	r1, r9
   11b24:	bl	10fa4 <__overflow@plt>
   11b28:	ldr	r8, [sp, #40]	; 0x28
   11b2c:	b	11768 <dcngettext@plt+0x740>
   11b30:	ldr	r2, [sp, #44]	; 0x2c
   11b34:	ldrb	r2, [r2]
   11b38:	cmp	r2, #0
   11b3c:	bne	116ec <dcngettext@plt+0x6c4>
   11b40:	add	r2, r1, #1
   11b44:	sub	r0, r4, r2
   11b48:	cmp	r0, #1
   11b4c:	beq	11b68 <dcngettext@plt+0xb40>
   11b50:	ldrb	r0, [r7, r2]
   11b54:	cmp	r0, #32
   11b58:	cmpne	r0, #42	; 0x2a
   11b5c:	movne	r0, #1
   11b60:	moveq	r0, #0
   11b64:	beq	11e44 <dcngettext@plt+0xe1c>
   11b68:	ldr	r3, [pc, #1188]	; 12014 <dcngettext@plt+0xfec>
   11b6c:	ldr	r1, [r3, #4]
   11b70:	cmp	r1, #0
   11b74:	movne	r1, #1
   11b78:	ldrne	r3, [pc, #1172]	; 12014 <dcngettext@plt+0xfec>
   11b7c:	strne	r1, [r3, #4]
   11b80:	beq	116ec <dcngettext@plt+0x6c4>
   11b84:	ldr	r3, [sp, #56]	; 0x38
   11b88:	cmp	r3, #0
   11b8c:	add	r3, r7, r2
   11b90:	str	r3, [sp, #52]	; 0x34
   11b94:	ldreq	r6, [sp, #44]	; 0x2c
   11b98:	beq	11c10 <dcngettext@plt+0xbe8>
   11b9c:	ldr	r6, [sp, #52]	; 0x34
   11ba0:	sub	r2, r4, r2
   11ba4:	sub	lr, r2, #1
   11ba8:	mov	ip, r6
   11bac:	mov	r0, #0
   11bb0:	mov	r3, #10
   11bb4:	cmp	r2, r0
   11bb8:	bls	12218 <dcngettext@plt+0x11f0>
   11bbc:	ldrb	r1, [r6, r0]
   11bc0:	cmp	r1, #0
   11bc4:	beq	11bfc <dcngettext@plt+0xbd4>
   11bc8:	cmp	r1, #92	; 0x5c
   11bcc:	bne	120f4 <dcngettext@plt+0x10cc>
   11bd0:	cmp	r0, lr
   11bd4:	beq	11bf8 <dcngettext@plt+0xbd0>
   11bd8:	add	r0, r0, #1
   11bdc:	ldrb	r1, [r6, r0]
   11be0:	cmp	r1, #110	; 0x6e
   11be4:	beq	12138 <dcngettext@plt+0x1110>
   11be8:	cmp	r1, #114	; 0x72
   11bec:	beq	1212c <dcngettext@plt+0x1104>
   11bf0:	cmp	r1, #92	; 0x5c
   11bf4:	beq	120f4 <dcngettext@plt+0x10cc>
   11bf8:	mov	r1, #0
   11bfc:	adds	r1, r1, #0
   11c00:	ldr	r6, [sp, #44]	; 0x2c
   11c04:	movne	r1, #1
   11c08:	cmp	r1, #0
   11c0c:	beq	116ec <dcngettext@plt+0x6c4>
   11c10:	ldr	r3, [sp, #48]	; 0x30
   11c14:	cmp	r3, #0
   11c18:	bne	11c30 <dcngettext@plt+0xc08>
   11c1c:	ldr	r1, [pc, #1048]	; 1203c <dcngettext@plt+0x1014>
   11c20:	ldr	r0, [sp, #52]	; 0x34
   11c24:	bl	10db8 <strcmp@plt>
   11c28:	cmp	r0, #0
   11c2c:	beq	116ec <dcngettext@plt+0x6c4>
   11c30:	ldrb	r3, [fp, #2]
   11c34:	cmp	r3, #0
   11c38:	ldrne	r3, [sp, #36]	; 0x24
   11c3c:	strne	r3, [sp, #44]	; 0x2c
   11c40:	bne	11c5c <dcngettext@plt+0xc34>
   11c44:	mov	r1, #10
   11c48:	ldr	r0, [sp, #52]	; 0x34
   11c4c:	bl	10f20 <strchr@plt>
   11c50:	adds	r3, r0, #0
   11c54:	movne	r3, #1
   11c58:	str	r3, [sp, #44]	; 0x2c
   11c5c:	add	r2, sp, #111	; 0x6f
   11c60:	add	r1, sp, #152	; 0x98
   11c64:	ldr	r0, [sp, #52]	; 0x34
   11c68:	bl	124b8 <dcngettext@plt+0x1490>
   11c6c:	ldr	r2, [sp, #44]	; 0x2c
   11c70:	and	r3, r2, #1
   11c74:	str	r3, [sp, #56]	; 0x38
   11c78:	subs	r3, r0, #0
   11c7c:	str	r3, [sp, #68]	; 0x44
   11c80:	bne	11ce0 <dcngettext@plt+0xcb8>
   11c84:	ldrd	r0, [sp, #72]	; 0x48
   11c88:	ldrb	r3, [fp, #2]
   11c8c:	adds	r0, r0, #1
   11c90:	adc	r1, r1, #0
   11c94:	cmp	r3, #0
   11c98:	strd	r0, [sp, #72]	; 0x48
   11c9c:	bne	11cd4 <dcngettext@plt+0xcac>
   11ca0:	cmp	r2, #0
   11ca4:	bne	11e10 <dcngettext@plt+0xde8>
   11ca8:	ldr	r1, [sp, #56]	; 0x38
   11cac:	ldr	r0, [sp, #52]	; 0x34
   11cb0:	bl	123c0 <dcngettext@plt+0x1398>
   11cb4:	ldr	r1, [pc, #960]	; 1207c <dcngettext@plt+0x1054>
   11cb8:	mov	r2, #5
   11cbc:	mov	r0, #0
   11cc0:	bl	10e30 <dcgettext@plt>
   11cc4:	ldr	r1, [pc, #948]	; 12080 <dcngettext@plt+0x1058>
   11cc8:	mov	r2, r0
   11ccc:	mov	r0, #1
   11cd0:	bl	10f5c <__printf_chk@plt>
   11cd4:	ldr	r3, [sp, #16]
   11cd8:	str	r3, [sp, #68]	; 0x44
   11cdc:	b	11448 <dcngettext@plt+0x420>
   11ce0:	ldrb	r3, [fp, #1]
   11ce4:	cmp	r3, #0
   11ce8:	beq	11cf8 <dcngettext@plt+0xcd0>
   11cec:	ldrb	r3, [sp, #111]	; 0x6f
   11cf0:	cmp	r3, #0
   11cf4:	bne	11cd4 <dcngettext@plt+0xcac>
   11cf8:	ldr	r3, [fp, #12]
   11cfc:	lsrs	r7, r3, #1
   11d00:	beq	11f14 <dcngettext@plt+0xeec>
   11d04:	bl	10ed8 <__ctype_tolower_loc@plt>
   11d08:	mov	r4, #0
   11d0c:	mov	r2, r6
   11d10:	add	r1, sp, #152	; 0x98
   11d14:	ldr	r0, [r0]
   11d18:	b	11d4c <dcngettext@plt+0xd24>
   11d1c:	ldr	lr, [pc, #864]	; 12084 <dcngettext@plt+0x105c>
   11d20:	and	r3, r3, #15
   11d24:	ldrb	ip, [r2, #1]
   11d28:	add	r3, lr, r3
   11d2c:	ldrb	r3, [r3, #264]	; 0x108
   11d30:	ldr	ip, [r0, ip, lsl #2]
   11d34:	cmp	ip, r3
   11d38:	bne	11d6c <dcngettext@plt+0xd44>
   11d3c:	add	r4, r4, #1
   11d40:	cmp	r7, r4
   11d44:	add	r2, r2, #2
   11d48:	beq	11f14 <dcngettext@plt+0xeec>
   11d4c:	ldrb	r3, [r1], #1
   11d50:	ldr	ip, [pc, #812]	; 12084 <dcngettext@plt+0x105c>
   11d54:	ldrb	lr, [r6, r4, lsl #1]
   11d58:	add	ip, ip, r3, lsr #4
   11d5c:	ldrb	ip, [ip, #264]	; 0x108
   11d60:	ldr	lr, [r0, lr, lsl #2]
   11d64:	cmp	lr, ip
   11d68:	beq	11d1c <dcngettext@plt+0xcf4>
   11d6c:	cmp	r7, r4
   11d70:	beq	11f14 <dcngettext@plt+0xeec>
   11d74:	ldrd	r0, [sp, #80]	; 0x50
   11d78:	ldrb	r3, [fp, #2]
   11d7c:	adds	r0, r0, #1
   11d80:	adc	r1, r1, #0
   11d84:	cmp	r3, #0
   11d88:	strd	r0, [sp, #80]	; 0x50
   11d8c:	bne	11cd4 <dcngettext@plt+0xcac>
   11d90:	ldr	r3, [sp, #44]	; 0x2c
   11d94:	cmp	r3, #0
   11d98:	beq	12104 <dcngettext@plt+0x10dc>
   11d9c:	ldr	r3, [pc, #576]	; 11fe4 <dcngettext@plt+0xfbc>
   11da0:	ldr	r0, [r3]
   11da4:	ldr	r3, [r0, #20]
   11da8:	ldr	r2, [r0, #24]
   11dac:	cmp	r3, r2
   11db0:	addcc	r1, r3, #1
   11db4:	movcc	r2, #92	; 0x5c
   11db8:	strcc	r1, [r0, #20]
   11dbc:	strbcc	r2, [r3]
   11dc0:	bcs	1220c <dcngettext@plt+0x11e4>
   11dc4:	ldr	r1, [sp, #56]	; 0x38
   11dc8:	ldr	r0, [sp, #52]	; 0x34
   11dcc:	bl	123c0 <dcngettext@plt+0x1398>
   11dd0:	cmp	r7, r4
   11dd4:	beq	11f58 <dcngettext@plt+0xf30>
   11dd8:	mov	r2, #5
   11ddc:	ldr	r1, [pc, #676]	; 12088 <dcngettext@plt+0x1060>
   11de0:	mov	r0, #0
   11de4:	b	11cc0 <dcngettext@plt+0xc98>
   11de8:	mov	r6, r1
   11dec:	b	11500 <dcngettext@plt+0x4d8>
   11df0:	ldrb	r3, [fp]
   11df4:	cmp	r3, #0
   11df8:	bne	11e5c <dcngettext@plt+0xe34>
   11dfc:	ldr	r3, [sp, #40]	; 0x28
   11e00:	eor	r0, r3, #1
   11e04:	uxtb	r0, r0
   11e08:	add	sp, sp, #188	; 0xbc
   11e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e10:	ldr	r3, [pc, #460]	; 11fe4 <dcngettext@plt+0xfbc>
   11e14:	ldr	r0, [r3]
   11e18:	ldr	r3, [r0, #20]
   11e1c:	ldr	r2, [r0, #24]
   11e20:	cmp	r3, r2
   11e24:	addcc	r1, r3, #1
   11e28:	movcc	r2, #92	; 0x5c
   11e2c:	strcc	r1, [r0, #20]
   11e30:	strbcc	r2, [r3]
   11e34:	bcc	11ca8 <dcngettext@plt+0xc80>
   11e38:	mov	r1, #92	; 0x5c
   11e3c:	bl	10fa4 <__overflow@plt>
   11e40:	b	11ca8 <dcngettext@plt+0xc80>
   11e44:	ldr	r3, [pc, #456]	; 12014 <dcngettext@plt+0xfec>
   11e48:	ldr	ip, [r3, #4]
   11e4c:	cmp	ip, #1
   11e50:	strne	r0, [r3, #4]
   11e54:	addne	r2, r1, #2
   11e58:	b	11b84 <dcngettext@plt+0xb5c>
   11e5c:	ldr	r3, [pc, #480]	; 12044 <dcngettext@plt+0x101c>
   11e60:	ldr	r0, [r3]
   11e64:	bl	1597c <dcngettext@plt+0x4954>
   11e68:	cmn	r0, #1
   11e6c:	bne	11dfc <dcngettext@plt+0xdd4>
   11e70:	bl	10f2c <__errno_location@plt>
   11e74:	mov	r2, #5
   11e78:	ldr	r1, [pc, #448]	; 12040 <dcngettext@plt+0x1018>
   11e7c:	ldr	r4, [r0]
   11e80:	mov	r0, #0
   11e84:	bl	10e30 <dcgettext@plt>
   11e88:	mov	r1, r4
   11e8c:	mov	r2, r0
   11e90:	mov	r0, #1
   11e94:	bl	10ea8 <error@plt>
   11e98:	mov	r0, r3
   11e9c:	mov	r2, #5
   11ea0:	ldr	r1, [pc, #484]	; 1208c <dcngettext@plt+0x1064>
   11ea4:	mov	r6, r3
   11ea8:	bl	10e30 <dcgettext@plt>
   11eac:	ldr	r2, [sp, #64]	; 0x40
   11eb0:	mov	r1, #3
   11eb4:	mov	r5, r0
   11eb8:	mov	r0, r6
   11ebc:	bl	18be4 <dcngettext@plt+0x7bbc>
   11ec0:	mov	r2, r5
   11ec4:	mov	r1, r6
   11ec8:	mov	r3, r0
   11ecc:	mov	r0, r6
   11ed0:	bl	10ea8 <error@plt>
   11ed4:	b	1197c <dcngettext@plt+0x954>
   11ed8:	mov	r0, r3
   11edc:	mov	r2, #5
   11ee0:	ldr	r1, [pc, #424]	; 12090 <dcngettext@plt+0x1068>
   11ee4:	mov	r4, r3
   11ee8:	bl	10e30 <dcgettext@plt>
   11eec:	ldr	r2, [sp, #64]	; 0x40
   11ef0:	mov	r1, #3
   11ef4:	mov	r5, r0
   11ef8:	mov	r0, r4
   11efc:	bl	18be4 <dcngettext@plt+0x7bbc>
   11f00:	mov	r2, r5
   11f04:	mov	r1, r4
   11f08:	mov	r3, r0
   11f0c:	mov	r0, #1
   11f10:	bl	10ea8 <error@plt>
   11f14:	ldrb	r3, [fp, #2]
   11f18:	cmp	r3, #0
   11f1c:	str	r3, [sp, #88]	; 0x58
   11f20:	bne	11cd4 <dcngettext@plt+0xcac>
   11f24:	ldrb	r3, [fp, #4]
   11f28:	mov	r4, r7
   11f2c:	cmp	r3, #0
   11f30:	str	r3, [sp, #88]	; 0x58
   11f34:	bne	11cd4 <dcngettext@plt+0xcac>
   11f38:	ldr	r3, [sp, #44]	; 0x2c
   11f3c:	cmp	r3, #0
   11f40:	bne	12248 <dcngettext@plt+0x1220>
   11f44:	ldr	r1, [sp, #88]	; 0x58
   11f48:	ldr	r0, [sp, #52]	; 0x34
   11f4c:	bl	123c0 <dcngettext@plt+0x1398>
   11f50:	ldr	r3, [sp, #68]	; 0x44
   11f54:	str	r3, [sp, #88]	; 0x58
   11f58:	ldrb	r0, [fp, #4]
   11f5c:	cmp	r0, #0
   11f60:	bne	11cd4 <dcngettext@plt+0xcac>
   11f64:	mov	r2, #5
   11f68:	ldr	r1, [pc, #292]	; 12094 <dcngettext@plt+0x106c>
   11f6c:	b	11cc0 <dcngettext@plt+0xc98>
   11f70:	ldr	r3, [pc, #108]	; 11fe4 <dcngettext@plt+0xfbc>
   11f74:	mov	r2, #6
   11f78:	mov	r1, #1
   11f7c:	ldr	r3, [r3]
   11f80:	ldr	r0, [pc, #192]	; 12048 <dcngettext@plt+0x1020>
   11f84:	bl	10e0c <fwrite_unlocked@plt>
   11f88:	ldr	r3, [pc, #84]	; 11fe4 <dcngettext@plt+0xfbc>
   11f8c:	mov	r2, #2
   11f90:	mov	r1, #1
   11f94:	ldr	r3, [r3]
   11f98:	ldr	r0, [pc, #248]	; 12098 <dcngettext@plt+0x1070>
   11f9c:	bl	10e0c <fwrite_unlocked@plt>
   11fa0:	mov	r1, r8
   11fa4:	mov	r0, r5
   11fa8:	bl	123c0 <dcngettext@plt+0x1398>
   11fac:	ldr	r3, [pc, #48]	; 11fe4 <dcngettext@plt+0xfbc>
   11fb0:	mov	r2, #4
   11fb4:	mov	r1, #1
   11fb8:	ldr	r3, [r3]
   11fbc:	ldr	r0, [pc, #216]	; 1209c <dcngettext@plt+0x1074>
   11fc0:	bl	10e0c <fwrite_unlocked@plt>
   11fc4:	ldr	r3, [fp, #12]
   11fc8:	lsrs	r3, r3, #1
   11fcc:	bne	11a60 <dcngettext@plt+0xa38>
   11fd0:	b	11af8 <dcngettext@plt+0xad0>
   11fd4:	andeq	fp, r1, r8, lsr #22
   11fd8:	andeq	ip, r1, r0, asr #32
   11fdc:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11fe0:	andeq	r2, r1, r8, asr #20
   11fe4:	andeq	sp, r2, ip, ror #2
   11fe8:	muleq	r1, r0, r8
   11fec:	andeq	ip, r1, r8, lsl #1
   11ff0:	andeq	sp, r2, r4, ror r1
   11ff4:	andeq	r0, r0, r1, lsl #2
   11ff8:	andeq	r0, r0, r3, lsl #2
   11ffc:	andeq	ip, r1, r8, asr r0
   12000:	andeq	ip, r1, r8, rrx
   12004:	andeq	sp, r2, r8, lsl #2
   12008:	andeq	ip, r1, r8, ror r0
   1200c:	andeq	fp, r1, r4, lsl #19
   12010:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12014:	andeq	sp, r2, r0, lsl #2
   12018:	muleq	r1, r0, r0
   1201c:	strheq	ip, [r1], -r4
   12020:	strdeq	ip, [r1], -r0
   12024:	andeq	ip, r1, ip, lsr #2
   12028:	andeq	ip, r1, r8, ror r1
   1202c:	andeq	ip, r1, r0, asr #3
   12030:	andeq	ip, r1, r0, lsl #4
   12034:	andeq	ip, r1, r0, asr #4
   12038:	andeq	sp, r2, r8, asr r1
   1203c:	andeq	fp, r1, ip, ror r9
   12040:	andeq	ip, r1, r0, asr #5
   12044:	andeq	sp, r2, r8, ror #2
   12048:	andeq	fp, r1, r4, lsl #20
   1204c:	andeq	ip, r1, ip, ror #5
   12050:			; <UNDEFINED> instruction: 0x0001c5b0
   12054:	andeq	r4, pc, r0, asr #4
   12058:			; <UNDEFINED> instruction: 0x0001c3b4
   1205c:	andeq	ip, r1, r4, lsl #7
   12060:	andeq	ip, r1, r0, lsl r4
   12064:	andeq	ip, r1, r0, ror #7
   12068:	andeq	ip, r1, ip, ror #8
   1206c:	andeq	ip, r1, ip, lsr r4
   12070:	andeq	fp, r1, r0, lsl #19
   12074:	andeq	ip, r1, r4, asr #6
   12078:	andeq	ip, r1, r4, asr #9
   1207c:	andeq	ip, r1, ip, lsl r3
   12080:	andeq	ip, r1, r0, lsr r3
   12084:	andeq	fp, r1, r8, asr r8
   12088:	andeq	ip, r1, r8, lsr r3
   1208c:	andeq	ip, r1, r4, asr r3
   12090:	ldrdeq	ip, [r1], -r0
   12094:	andeq	ip, r1, r0, asr #6
   12098:			; <UNDEFINED> instruction: 0x0001c4b8
   1209c:			; <UNDEFINED> instruction: 0x0001c4bc
   120a0:	andeq	sp, r2, ip, ror #2
   120a4:	muleq	r1, ip, r4
   120a8:	andeq	ip, r1, r0, lsl #5
   120ac:	mov	r1, #92	; 0x5c
   120b0:	mov	r0, r5
   120b4:	bl	10f20 <strchr@plt>
   120b8:	cmp	r0, #0
   120bc:	beq	12140 <dcngettext@plt+0x1118>
   120c0:	ldr	r3, [pc, #-40]	; 120a0 <dcngettext@plt+0x1078>
   120c4:	ldr	r0, [r3]
   120c8:	ldr	r3, [r0, #20]
   120cc:	ldr	r2, [r0, #24]
   120d0:	cmp	r3, r2
   120d4:	addcc	r1, r3, #1
   120d8:	movcc	r2, #92	; 0x5c
   120dc:	strcc	r1, [r0, #20]
   120e0:	strbcc	r2, [r3]
   120e4:	bcc	11a48 <dcngettext@plt+0xa20>
   120e8:	mov	r1, #92	; 0x5c
   120ec:	bl	10fa4 <__overflow@plt>
   120f0:	b	11a48 <dcngettext@plt+0xa20>
   120f4:	strb	r1, [ip]
   120f8:	add	r0, r0, #1
   120fc:	add	ip, ip, #1
   12100:	b	11bb4 <dcngettext@plt+0xb8c>
   12104:	ldr	r1, [sp, #44]	; 0x2c
   12108:	ldr	r0, [sp, #52]	; 0x34
   1210c:	bl	123c0 <dcngettext@plt+0x1398>
   12110:	b	11dd8 <dcngettext@plt+0xdb0>
   12114:	ldr	r1, [sp, #100]	; 0x64
   12118:	bl	10fa4 <__overflow@plt>
   1211c:	b	11aec <dcngettext@plt+0xac4>
   12120:	mov	r1, #32
   12124:	bl	10fa4 <__overflow@plt>
   12128:	b	11ac4 <dcngettext@plt+0xa9c>
   1212c:	mov	r1, #13
   12130:	strb	r1, [ip]
   12134:	b	120f8 <dcngettext@plt+0x10d0>
   12138:	strb	r3, [ip]
   1213c:	b	120f8 <dcngettext@plt+0x10d0>
   12140:	mov	r1, r9
   12144:	mov	r0, r5
   12148:	bl	10f20 <strchr@plt>
   1214c:	cmp	r0, #0
   12150:	bne	120c0 <dcngettext@plt+0x1098>
   12154:	mov	r1, #13
   12158:	mov	r0, r5
   1215c:	bl	10f20 <strchr@plt>
   12160:	cmp	r0, #0
   12164:	bne	120c0 <dcngettext@plt+0x1098>
   12168:	b	11a44 <dcngettext@plt+0xa1c>
   1216c:	mov	r2, #5
   12170:	ldr	r1, [pc, #-212]	; 120a4 <dcngettext@plt+0x107c>
   12174:	mov	r0, r5
   12178:	bl	10e30 <dcgettext@plt>
   1217c:	ldr	r2, [sp, #64]	; 0x40
   12180:	mov	r1, #3
   12184:	mov	r6, r0
   12188:	mov	r0, r5
   1218c:	bl	18be4 <dcngettext@plt+0x7bbc>
   12190:	mov	r2, r6
   12194:	mov	r1, r5
   12198:	mov	r3, r0
   1219c:	mov	r0, r5
   121a0:	bl	10ea8 <error@plt>
   121a4:	b	1197c <dcngettext@plt+0x954>
   121a8:	ldr	r6, [sp, #52]	; 0x34
   121ac:	mov	r3, #0
   121b0:	sub	r4, r1, #1
   121b4:	mov	ip, #10
   121b8:	cmp	r1, r3
   121bc:	bls	12254 <dcngettext@plt+0x122c>
   121c0:	ldrb	r2, [r6, r3]
   121c4:	cmp	r2, #0
   121c8:	beq	116ec <dcngettext@plt+0x6c4>
   121cc:	cmp	r2, #92	; 0x5c
   121d0:	bne	121fc <dcngettext@plt+0x11d4>
   121d4:	cmp	r3, r4
   121d8:	beq	116ec <dcngettext@plt+0x6c4>
   121dc:	add	r3, r3, #1
   121e0:	ldrb	r2, [r6, r3]
   121e4:	cmp	r2, #110	; 0x6e
   121e8:	beq	12240 <dcngettext@plt+0x1218>
   121ec:	cmp	r2, #114	; 0x72
   121f0:	beq	12234 <dcngettext@plt+0x120c>
   121f4:	cmp	r2, #92	; 0x5c
   121f8:	bne	116ec <dcngettext@plt+0x6c4>
   121fc:	strb	r2, [lr]
   12200:	add	r3, r3, #1
   12204:	add	lr, lr, #1
   12208:	b	121b8 <dcngettext@plt+0x1190>
   1220c:	mov	r1, #92	; 0x5c
   12210:	bl	10fa4 <__overflow@plt>
   12214:	b	11dc4 <dcngettext@plt+0xd9c>
   12218:	add	r4, r7, r4
   1221c:	cmp	ip, r4
   12220:	ldrcs	r1, [sp, #52]	; 0x34
   12224:	movcc	r2, #0
   12228:	strbcc	r2, [ip]
   1222c:	ldrcc	r1, [sp, #52]	; 0x34
   12230:	b	11bfc <dcngettext@plt+0xbd4>
   12234:	mov	r2, #13
   12238:	strb	r2, [lr]
   1223c:	b	12200 <dcngettext@plt+0x11d8>
   12240:	strb	ip, [lr]
   12244:	b	12200 <dcngettext@plt+0x11d8>
   12248:	ldr	r3, [sp, #68]	; 0x44
   1224c:	str	r3, [sp, #88]	; 0x58
   12250:	b	11d9c <dcngettext@plt+0xd74>
   12254:	cmp	r0, lr
   12258:	movhi	r3, #0
   1225c:	strbhi	r3, [lr]
   12260:	ldr	r3, [sp, #52]	; 0x34
   12264:	cmp	r3, #0
   12268:	bne	115b4 <dcngettext@plt+0x58c>
   1226c:	b	116ec <dcngettext@plt+0x6c4>
   12270:	ldr	r1, [pc, #-464]	; 120a8 <dcngettext@plt+0x1080>
   12274:	mov	r2, #5
   12278:	mov	r0, #0
   1227c:	bl	10e30 <dcgettext@plt>
   12280:	mov	r1, #0
   12284:	mov	r2, r0
   12288:	mov	r0, r1
   1228c:	bl	10ea8 <error@plt>
   12290:	mov	r0, #1
   12294:	bl	12648 <dcngettext@plt+0x1620>
   12298:	mov	fp, #0
   1229c:	mov	lr, #0
   122a0:	pop	{r1}		; (ldr r1, [sp], #4)
   122a4:	mov	r2, sp
   122a8:	push	{r2}		; (str r2, [sp, #-4]!)
   122ac:	push	{r0}		; (str r0, [sp, #-4]!)
   122b0:	ldr	ip, [pc, #16]	; 122c8 <dcngettext@plt+0x12a0>
   122b4:	push	{ip}		; (str ip, [sp, #-4]!)
   122b8:	ldr	r0, [pc, #12]	; 122cc <dcngettext@plt+0x12a4>
   122bc:	ldr	r3, [pc, #12]	; 122d0 <dcngettext@plt+0x12a8>
   122c0:	bl	10ec0 <__libc_start_main@plt>
   122c4:	bl	11010 <abort@plt>
   122c8:	andeq	fp, r1, r0, lsr r8
   122cc:	andeq	r1, r1, r4, lsr r0
   122d0:	ldrdeq	fp, [r1], -r0
   122d4:	ldr	r3, [pc, #20]	; 122f0 <dcngettext@plt+0x12c8>
   122d8:	ldr	r2, [pc, #20]	; 122f4 <dcngettext@plt+0x12cc>
   122dc:	add	r3, pc, r3
   122e0:	ldr	r2, [r3, r2]
   122e4:	cmp	r2, #0
   122e8:	bxeq	lr
   122ec:	b	10ee4 <__gmon_start__@plt>
   122f0:	andeq	sl, r1, ip, lsl sp
   122f4:	strdeq	r0, [r0], -r4
   122f8:	ldr	r3, [pc, #28]	; 1231c <dcngettext@plt+0x12f4>
   122fc:	ldr	r0, [pc, #28]	; 12320 <dcngettext@plt+0x12f8>
   12300:	sub	r3, r3, r0
   12304:	cmp	r3, #6
   12308:	bxls	lr
   1230c:	ldr	r3, [pc, #16]	; 12324 <dcngettext@plt+0x12fc>
   12310:	cmp	r3, #0
   12314:	bxeq	lr
   12318:	bx	r3
   1231c:	andeq	sp, r2, r3, asr r1
   12320:	andeq	sp, r2, r0, asr r1
   12324:	andeq	r0, r0, r0
   12328:	ldr	r1, [pc, #36]	; 12354 <dcngettext@plt+0x132c>
   1232c:	ldr	r0, [pc, #36]	; 12358 <dcngettext@plt+0x1330>
   12330:	sub	r1, r1, r0
   12334:	asr	r1, r1, #2
   12338:	add	r1, r1, r1, lsr #31
   1233c:	asrs	r1, r1, #1
   12340:	bxeq	lr
   12344:	ldr	r3, [pc, #16]	; 1235c <dcngettext@plt+0x1334>
   12348:	cmp	r3, #0
   1234c:	bxeq	lr
   12350:	bx	r3
   12354:	andeq	sp, r2, r0, asr r1
   12358:	andeq	sp, r2, r0, asr r1
   1235c:	andeq	r0, r0, r0
   12360:	push	{r4, lr}
   12364:	ldr	r4, [pc, #24]	; 12384 <dcngettext@plt+0x135c>
   12368:	ldrb	r3, [r4]
   1236c:	cmp	r3, #0
   12370:	popne	{r4, pc}
   12374:	bl	122f8 <dcngettext@plt+0x12d0>
   12378:	mov	r3, #1
   1237c:	strb	r3, [r4]
   12380:	pop	{r4, pc}
   12384:	andeq	sp, r2, r0, ror r1
   12388:	ldr	r0, [pc, #40]	; 123b8 <dcngettext@plt+0x1390>
   1238c:	ldr	r3, [r0]
   12390:	cmp	r3, #0
   12394:	bne	1239c <dcngettext@plt+0x1374>
   12398:	b	12328 <dcngettext@plt+0x1300>
   1239c:	ldr	r3, [pc, #24]	; 123bc <dcngettext@plt+0x1394>
   123a0:	cmp	r3, #0
   123a4:	beq	12398 <dcngettext@plt+0x1370>
   123a8:	push	{r4, lr}
   123ac:	blx	r3
   123b0:	pop	{r4, lr}
   123b4:	b	12328 <dcngettext@plt+0x1300>
   123b8:	andeq	ip, r2, r4, lsl pc
   123bc:	andeq	r0, r0, r0
   123c0:	cmp	r1, #0
   123c4:	beq	12490 <dcngettext@plt+0x1468>
   123c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   123cc:	mov	r4, r0
   123d0:	ldrb	r1, [r0]
   123d4:	cmp	r1, #0
   123d8:	beq	124a4 <dcngettext@plt+0x147c>
   123dc:	ldr	r5, [pc, #196]	; 124a8 <dcngettext@plt+0x1480>
   123e0:	ldr	sl, [pc, #196]	; 124ac <dcngettext@plt+0x1484>
   123e4:	ldr	r9, [pc, #196]	; 124b0 <dcngettext@plt+0x1488>
   123e8:	ldr	r8, [pc, #196]	; 124b4 <dcngettext@plt+0x148c>
   123ec:	mov	r7, #2
   123f0:	mov	r6, #1
   123f4:	b	12434 <dcngettext@plt+0x140c>
   123f8:	cmp	r1, #92	; 0x5c
   123fc:	beq	12478 <dcngettext@plt+0x1450>
   12400:	cmp	r1, #10
   12404:	beq	12460 <dcngettext@plt+0x1438>
   12408:	ldr	r0, [r5]
   1240c:	ldr	r3, [r0, #20]
   12410:	ldr	r2, [r0, #24]
   12414:	add	ip, r3, #1
   12418:	cmp	r3, r2
   1241c:	strcc	ip, [r0, #20]
   12420:	strbcc	r1, [r3]
   12424:	bcs	1249c <dcngettext@plt+0x1474>
   12428:	ldrb	r1, [r4, #1]!
   1242c:	cmp	r1, #0
   12430:	beq	1245c <dcngettext@plt+0x1434>
   12434:	cmp	r1, #13
   12438:	bne	123f8 <dcngettext@plt+0x13d0>
   1243c:	mov	r1, r6
   12440:	ldr	r3, [r5]
   12444:	mov	r2, r7
   12448:	mov	r0, sl
   1244c:	bl	10e0c <fwrite_unlocked@plt>
   12450:	ldrb	r1, [r4, #1]!
   12454:	cmp	r1, #0
   12458:	bne	12434 <dcngettext@plt+0x140c>
   1245c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12460:	ldr	r3, [r5]
   12464:	mov	r2, r7
   12468:	mov	r1, r6
   1246c:	mov	r0, r8
   12470:	bl	10e0c <fwrite_unlocked@plt>
   12474:	b	12428 <dcngettext@plt+0x1400>
   12478:	ldr	r3, [r5]
   1247c:	mov	r2, r7
   12480:	mov	r1, r6
   12484:	mov	r0, r9
   12488:	bl	10e0c <fwrite_unlocked@plt>
   1248c:	b	12428 <dcngettext@plt+0x1400>
   12490:	ldr	r3, [pc, #16]	; 124a8 <dcngettext@plt+0x1480>
   12494:	ldr	r1, [r3]
   12498:	b	10d94 <fputs_unlocked@plt>
   1249c:	bl	10fa4 <__overflow@plt>
   124a0:	b	12428 <dcngettext@plt+0x1400>
   124a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a8:	andeq	sp, r2, ip, ror #2
   124ac:	andeq	fp, r1, r4, ror r9
   124b0:	andeq	fp, r1, r8, ror r9
   124b4:	andeq	fp, r1, r0, ror r9
   124b8:	push	{r4, r5, r6, r7, r8, lr}
   124bc:	mov	r4, r1
   124c0:	ldr	r1, [pc, #364]	; 12634 <dcngettext@plt+0x160c>
   124c4:	mov	r5, r2
   124c8:	mov	r6, r0
   124cc:	bl	10db8 <strcmp@plt>
   124d0:	mov	r3, #0
   124d4:	strb	r3, [r5]
   124d8:	cmp	r0, r3
   124dc:	bne	12588 <dcngettext@plt+0x1560>
   124e0:	ldr	r1, [pc, #336]	; 12638 <dcngettext@plt+0x1610>
   124e4:	ldr	r3, [pc, #336]	; 1263c <dcngettext@plt+0x1614>
   124e8:	mov	r2, #1
   124ec:	ldr	r5, [r1]
   124f0:	mov	r1, #2
   124f4:	mov	r0, r5
   124f8:	strb	r2, [r3]
   124fc:	bl	15948 <dcngettext@plt+0x4920>
   12500:	mov	r1, r4
   12504:	mov	r0, r5
   12508:	bl	12c28 <dcngettext@plt+0x1c00>
   1250c:	subs	r4, r0, #0
   12510:	beq	1251c <dcngettext@plt+0x14f4>
   12514:	bl	10f2c <__errno_location@plt>
   12518:	ldr	r4, [r0]
   1251c:	mov	r0, r5
   12520:	bl	10fd4 <clearerr_unlocked@plt>
   12524:	cmp	r4, #0
   12528:	bne	12558 <dcngettext@plt+0x1530>
   1252c:	mov	r4, #1
   12530:	mov	r0, r4
   12534:	pop	{r4, r5, r6, r7, r8, pc}
   12538:	bl	10f2c <__errno_location@plt>
   1253c:	ldr	r4, [r0]
   12540:	mov	r0, r7
   12544:	bl	1597c <dcngettext@plt+0x4954>
   12548:	cmp	r0, #0
   1254c:	beq	12524 <dcngettext@plt+0x14fc>
   12550:	cmp	r4, #0
   12554:	beq	125c8 <dcngettext@plt+0x15a0>
   12558:	mov	r2, r6
   1255c:	mov	r1, #3
   12560:	mov	r0, #0
   12564:	bl	18be4 <dcngettext@plt+0x7bbc>
   12568:	mov	r1, r4
   1256c:	ldr	r2, [pc, #204]	; 12640 <dcngettext@plt+0x1618>
   12570:	mov	r4, #0
   12574:	mov	r3, r0
   12578:	mov	r0, #0
   1257c:	bl	10ea8 <error@plt>
   12580:	mov	r0, r4
   12584:	pop	{r4, r5, r6, r7, r8, pc}
   12588:	ldr	r1, [pc, #180]	; 12644 <dcngettext@plt+0x161c>
   1258c:	mov	r0, r6
   12590:	bl	15a7c <dcngettext@plt+0x4a54>
   12594:	subs	r7, r0, #0
   12598:	beq	125d4 <dcngettext@plt+0x15ac>
   1259c:	mov	r1, #2
   125a0:	bl	15948 <dcngettext@plt+0x4920>
   125a4:	mov	r1, r4
   125a8:	mov	r0, r7
   125ac:	bl	12c28 <dcngettext@plt+0x1c00>
   125b0:	cmp	r0, #0
   125b4:	bne	12538 <dcngettext@plt+0x1510>
   125b8:	mov	r0, r7
   125bc:	bl	1597c <dcngettext@plt+0x4954>
   125c0:	cmp	r0, #0
   125c4:	beq	1252c <dcngettext@plt+0x1504>
   125c8:	bl	10f2c <__errno_location@plt>
   125cc:	ldr	r4, [r0]
   125d0:	b	12524 <dcngettext@plt+0x14fc>
   125d4:	ldr	r3, [pc, #96]	; 1263c <dcngettext@plt+0x1614>
   125d8:	ldrb	r4, [r3, #1]
   125dc:	cmp	r4, #0
   125e0:	beq	12628 <dcngettext@plt+0x1600>
   125e4:	bl	10f2c <__errno_location@plt>
   125e8:	ldr	r7, [r0]
   125ec:	cmp	r7, #2
   125f0:	moveq	r3, #1
   125f4:	strbeq	r3, [r5]
   125f8:	beq	12530 <dcngettext@plt+0x1508>
   125fc:	mov	r2, r6
   12600:	mov	r1, #3
   12604:	mov	r0, #0
   12608:	bl	18be4 <dcngettext@plt+0x7bbc>
   1260c:	mov	r1, r7
   12610:	ldr	r2, [pc, #40]	; 12640 <dcngettext@plt+0x1618>
   12614:	mov	r4, #0
   12618:	mov	r3, r0
   1261c:	mov	r0, #0
   12620:	bl	10ea8 <error@plt>
   12624:	b	12530 <dcngettext@plt+0x1508>
   12628:	bl	10f2c <__errno_location@plt>
   1262c:	ldr	r7, [r0]
   12630:	b	125fc <dcngettext@plt+0x15d4>
   12634:	andeq	fp, r1, ip, ror r9
   12638:	andeq	sp, r2, r8, ror #2
   1263c:	andeq	sp, r2, r4, ror r1
   12640:			; <UNDEFINED> instruction: 0x0001c5b0
   12644:	andeq	fp, r1, r0, lsl #19
   12648:	subs	r5, r0, #0
   1264c:	push	{r7, lr}
   12650:	sub	sp, sp, #56	; 0x38
   12654:	beq	12690 <dcngettext@plt+0x1668>
   12658:	ldr	r3, [pc, #848]	; 129b0 <dcngettext@plt+0x1988>
   1265c:	mov	r2, #5
   12660:	ldr	r1, [pc, #844]	; 129b4 <dcngettext@plt+0x198c>
   12664:	mov	r0, #0
   12668:	ldr	r4, [r3]
   1266c:	bl	10e30 <dcgettext@plt>
   12670:	ldr	r3, [pc, #832]	; 129b8 <dcngettext@plt+0x1990>
   12674:	mov	r1, #1
   12678:	ldr	r3, [r3]
   1267c:	mov	r2, r0
   12680:	mov	r0, r4
   12684:	bl	10f74 <__fprintf_chk@plt>
   12688:	mov	r0, r5
   1268c:	bl	10f08 <exit@plt>
   12690:	mov	r2, #5
   12694:	ldr	r1, [pc, #800]	; 129bc <dcngettext@plt+0x1994>
   12698:	bl	10e30 <dcgettext@plt>
   1269c:	ldr	r3, [pc, #788]	; 129b8 <dcngettext@plt+0x1990>
   126a0:	ldr	r7, [pc, #792]	; 129c0 <dcngettext@plt+0x1998>
   126a4:	ldr	r4, [pc, #792]	; 129c4 <dcngettext@plt+0x199c>
   126a8:	ldr	r2, [r3]
   126ac:	mov	r1, r0
   126b0:	mov	r0, #1
   126b4:	bl	10f5c <__printf_chk@plt>
   126b8:	mov	r2, #5
   126bc:	ldr	r1, [pc, #772]	; 129c8 <dcngettext@plt+0x19a0>
   126c0:	mov	r0, r5
   126c4:	bl	10e30 <dcgettext@plt>
   126c8:	mov	r3, #224	; 0xe0
   126cc:	ldr	r2, [pc, #760]	; 129cc <dcngettext@plt+0x19a4>
   126d0:	mov	r1, r0
   126d4:	mov	r0, #1
   126d8:	bl	10f5c <__printf_chk@plt>
   126dc:	mov	r2, #5
   126e0:	ldr	r1, [pc, #744]	; 129d0 <dcngettext@plt+0x19a8>
   126e4:	mov	r0, r5
   126e8:	bl	10e30 <dcgettext@plt>
   126ec:	ldr	r1, [r7]
   126f0:	bl	10d94 <fputs_unlocked@plt>
   126f4:	mov	r2, #5
   126f8:	ldr	r1, [pc, #724]	; 129d4 <dcngettext@plt+0x19ac>
   126fc:	mov	r0, r5
   12700:	bl	10e30 <dcgettext@plt>
   12704:	ldr	r1, [r7]
   12708:	bl	10d94 <fputs_unlocked@plt>
   1270c:	mov	r2, #5
   12710:	ldr	r1, [pc, #704]	; 129d8 <dcngettext@plt+0x19b0>
   12714:	mov	r0, r5
   12718:	bl	10e30 <dcgettext@plt>
   1271c:	ldr	r1, [r7]
   12720:	bl	10d94 <fputs_unlocked@plt>
   12724:	mov	r2, #5
   12728:	ldr	r1, [pc, #684]	; 129dc <dcngettext@plt+0x19b4>
   1272c:	mov	r0, r5
   12730:	bl	10e30 <dcgettext@plt>
   12734:	ldr	r1, [r7]
   12738:	bl	10d94 <fputs_unlocked@plt>
   1273c:	mov	r2, #5
   12740:	ldr	r1, [pc, #664]	; 129e0 <dcngettext@plt+0x19b8>
   12744:	mov	r0, r5
   12748:	bl	10e30 <dcgettext@plt>
   1274c:	ldr	r1, [r7]
   12750:	bl	10d94 <fputs_unlocked@plt>
   12754:	mov	r2, #5
   12758:	ldr	r1, [pc, #644]	; 129e4 <dcngettext@plt+0x19bc>
   1275c:	mov	r0, r5
   12760:	bl	10e30 <dcgettext@plt>
   12764:	ldr	r1, [r7]
   12768:	bl	10d94 <fputs_unlocked@plt>
   1276c:	mov	r2, #5
   12770:	ldr	r1, [pc, #624]	; 129e8 <dcngettext@plt+0x19c0>
   12774:	mov	r0, r5
   12778:	bl	10e30 <dcgettext@plt>
   1277c:	ldr	r1, [r7]
   12780:	bl	10d94 <fputs_unlocked@plt>
   12784:	mov	r2, #5
   12788:	ldr	r1, [pc, #604]	; 129ec <dcngettext@plt+0x19c4>
   1278c:	mov	r0, r5
   12790:	bl	10e30 <dcgettext@plt>
   12794:	ldr	r1, [r7]
   12798:	bl	10d94 <fputs_unlocked@plt>
   1279c:	mov	r2, #5
   127a0:	ldr	r1, [pc, #584]	; 129f0 <dcngettext@plt+0x19c8>
   127a4:	mov	r0, r5
   127a8:	bl	10e30 <dcgettext@plt>
   127ac:	ldr	r1, [r7]
   127b0:	bl	10d94 <fputs_unlocked@plt>
   127b4:	mov	r2, #5
   127b8:	ldr	r1, [pc, #564]	; 129f4 <dcngettext@plt+0x19cc>
   127bc:	mov	r0, r5
   127c0:	bl	10e30 <dcgettext@plt>
   127c4:	ldr	r2, [pc, #556]	; 129f8 <dcngettext@plt+0x19d0>
   127c8:	mov	r1, r0
   127cc:	mov	r0, #1
   127d0:	bl	10f5c <__printf_chk@plt>
   127d4:	mov	r2, #5
   127d8:	ldr	r1, [pc, #540]	; 129fc <dcngettext@plt+0x19d4>
   127dc:	mov	r0, r5
   127e0:	bl	10e30 <dcgettext@plt>
   127e4:	ldr	r1, [r7]
   127e8:	bl	10d94 <fputs_unlocked@plt>
   127ec:	ldm	r4!, {r0, r1, r2, r3}
   127f0:	mov	lr, sp
   127f4:	stmia	lr!, {r0, r1, r2, r3}
   127f8:	ldm	r4!, {r0, r1, r2, r3}
   127fc:	ldr	ip, [sp]
   12800:	stmia	lr!, {r0, r1, r2, r3}
   12804:	cmp	ip, #0
   12808:	ldm	r4!, {r0, r1, r2, r3}
   1280c:	stmia	lr!, {r0, r1, r2, r3}
   12810:	ldm	r4, {r0, r1}
   12814:	moveq	r4, sp
   12818:	stm	lr, {r0, r1}
   1281c:	beq	1284c <dcngettext@plt+0x1824>
   12820:	ldr	r6, [pc, #472]	; 12a00 <dcngettext@plt+0x19d8>
   12824:	mov	r4, sp
   12828:	b	12838 <dcngettext@plt+0x1810>
   1282c:	ldr	ip, [r4, #8]!
   12830:	cmp	ip, #0
   12834:	beq	1284c <dcngettext@plt+0x1824>
   12838:	mov	r1, ip
   1283c:	mov	r0, r6
   12840:	bl	10db8 <strcmp@plt>
   12844:	cmp	r0, #0
   12848:	bne	1282c <dcngettext@plt+0x1804>
   1284c:	ldr	r4, [r4, #4]
   12850:	mov	r2, #5
   12854:	cmp	r4, #0
   12858:	ldr	r1, [pc, #420]	; 12a04 <dcngettext@plt+0x19dc>
   1285c:	beq	12904 <dcngettext@plt+0x18dc>
   12860:	mov	r0, #0
   12864:	bl	10e30 <dcgettext@plt>
   12868:	ldr	r3, [pc, #408]	; 12a08 <dcngettext@plt+0x19e0>
   1286c:	ldr	r2, [pc, #408]	; 12a0c <dcngettext@plt+0x19e4>
   12870:	mov	r1, r0
   12874:	mov	r0, #1
   12878:	bl	10f5c <__printf_chk@plt>
   1287c:	mov	r1, #0
   12880:	mov	r0, #5
   12884:	bl	10fb0 <setlocale@plt>
   12888:	cmp	r0, #0
   1288c:	ldreq	r6, [pc, #364]	; 12a00 <dcngettext@plt+0x19d8>
   12890:	beq	128ac <dcngettext@plt+0x1884>
   12894:	mov	r2, #3
   12898:	ldr	r1, [pc, #368]	; 12a10 <dcngettext@plt+0x19e8>
   1289c:	bl	11004 <strncmp@plt>
   128a0:	ldr	r6, [pc, #344]	; 12a00 <dcngettext@plt+0x19d8>
   128a4:	cmp	r0, #0
   128a8:	bne	12994 <dcngettext@plt+0x196c>
   128ac:	mov	r2, #5
   128b0:	ldr	r1, [pc, #348]	; 12a14 <dcngettext@plt+0x19ec>
   128b4:	mov	r0, #0
   128b8:	bl	10e30 <dcgettext@plt>
   128bc:	ldr	r3, [pc, #316]	; 12a00 <dcngettext@plt+0x19d8>
   128c0:	ldr	r2, [pc, #320]	; 12a08 <dcngettext@plt+0x19e0>
   128c4:	mov	r1, r0
   128c8:	mov	r0, #1
   128cc:	bl	10f5c <__printf_chk@plt>
   128d0:	mov	r2, #5
   128d4:	ldr	r1, [pc, #316]	; 12a18 <dcngettext@plt+0x19f0>
   128d8:	mov	r0, #0
   128dc:	bl	10e30 <dcgettext@plt>
   128e0:	ldr	r2, [pc, #308]	; 12a1c <dcngettext@plt+0x19f4>
   128e4:	cmp	r4, r6
   128e8:	ldr	r3, [pc, #304]	; 12a20 <dcngettext@plt+0x19f8>
   128ec:	movne	r3, r2
   128f0:	mov	r1, r0
   128f4:	mov	r2, r4
   128f8:	mov	r0, #1
   128fc:	bl	10f5c <__printf_chk@plt>
   12900:	b	12688 <dcngettext@plt+0x1660>
   12904:	mov	r0, r4
   12908:	bl	10e30 <dcgettext@plt>
   1290c:	ldr	r3, [pc, #244]	; 12a08 <dcngettext@plt+0x19e0>
   12910:	ldr	r2, [pc, #244]	; 12a0c <dcngettext@plt+0x19e4>
   12914:	mov	r1, r0
   12918:	mov	r0, #1
   1291c:	bl	10f5c <__printf_chk@plt>
   12920:	mov	r1, r4
   12924:	mov	r0, #5
   12928:	bl	10fb0 <setlocale@plt>
   1292c:	cmp	r0, #0
   12930:	beq	12948 <dcngettext@plt+0x1920>
   12934:	mov	r2, #3
   12938:	ldr	r1, [pc, #208]	; 12a10 <dcngettext@plt+0x19e8>
   1293c:	bl	11004 <strncmp@plt>
   12940:	cmp	r0, #0
   12944:	bne	1298c <dcngettext@plt+0x1964>
   12948:	mov	r2, #5
   1294c:	ldr	r1, [pc, #192]	; 12a14 <dcngettext@plt+0x19ec>
   12950:	mov	r0, #0
   12954:	bl	10e30 <dcgettext@plt>
   12958:	ldr	r3, [pc, #160]	; 12a00 <dcngettext@plt+0x19d8>
   1295c:	ldr	r2, [pc, #164]	; 12a08 <dcngettext@plt+0x19e0>
   12960:	mov	r4, r3
   12964:	mov	r1, r0
   12968:	mov	r0, #1
   1296c:	bl	10f5c <__printf_chk@plt>
   12970:	ldr	r1, [pc, #160]	; 12a18 <dcngettext@plt+0x19f0>
   12974:	mov	r2, #5
   12978:	mov	r0, #0
   1297c:	bl	10e30 <dcgettext@plt>
   12980:	ldr	r3, [pc, #152]	; 12a20 <dcngettext@plt+0x19f8>
   12984:	mov	r1, r0
   12988:	b	128f4 <dcngettext@plt+0x18cc>
   1298c:	ldr	r6, [pc, #108]	; 12a00 <dcngettext@plt+0x19d8>
   12990:	mov	r4, r6
   12994:	mov	r2, #5
   12998:	ldr	r1, [pc, #132]	; 12a24 <dcngettext@plt+0x19fc>
   1299c:	mov	r0, #0
   129a0:	bl	10e30 <dcgettext@plt>
   129a4:	ldr	r1, [r7]
   129a8:	bl	10d94 <fputs_unlocked@plt>
   129ac:	b	128ac <dcngettext@plt+0x1884>
   129b0:	andeq	sp, r2, r0, ror #2
   129b4:	muleq	r1, r0, r9
   129b8:	andeq	sp, r2, ip, lsl #3
   129bc:			; <UNDEFINED> instruction: 0x0001b9b8
   129c0:	andeq	sp, r2, ip, ror #2
   129c4:	andeq	fp, r1, r8, asr r8
   129c8:	ldrdeq	fp, [r1], -ip
   129cc:	andeq	fp, r1, r4, lsl #20
   129d0:	andeq	fp, r1, ip, lsl #20
   129d4:	andeq	fp, r1, r4, asr #20
   129d8:	andeq	fp, r1, r4, ror sl
   129dc:			; <UNDEFINED> instruction: 0x0001babc
   129e0:	strdeq	fp, [r1], -r4
   129e4:	andeq	fp, r1, ip, lsr #22
   129e8:	andeq	fp, r1, ip, lsr #23
   129ec:	andeq	fp, r1, r4, ror #26
   129f0:	muleq	r1, r4, sp
   129f4:	andeq	fp, r1, ip, asr #27
   129f8:	strdeq	fp, [r1], -r8
   129fc:	andeq	fp, r1, r4, lsl #28
   12a00:	andeq	fp, r1, r4, lsl #19
   12a04:	andeq	fp, r1, r4, asr pc
   12a08:	andeq	fp, r1, ip, ror #30
   12a0c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12a10:	andeq	fp, r1, r4, lsr #31
   12a14:	strdeq	fp, [r1], -r0
   12a18:	andeq	ip, r1, ip
   12a1c:	andeq	fp, r1, r8, lsr #22
   12a20:	ldrdeq	ip, [r1], -r4
   12a24:	andeq	fp, r1, r8, lsr #31
   12a28:	ldr	r3, [pc, #4]	; 12a34 <dcngettext@plt+0x1a0c>
   12a2c:	str	r0, [r3]
   12a30:	bx	lr
   12a34:	andeq	sp, r2, r4, lsl #3
   12a38:	ldr	r3, [pc, #4]	; 12a44 <dcngettext@plt+0x1a1c>
   12a3c:	strb	r0, [r3, #4]
   12a40:	bx	lr
   12a44:	andeq	sp, r2, r4, lsl #3
   12a48:	ldr	r3, [pc, #192]	; 12b10 <dcngettext@plt+0x1ae8>
   12a4c:	push	{r4, r5, r6, lr}
   12a50:	sub	sp, sp, #8
   12a54:	ldr	r0, [r3]
   12a58:	bl	1adf8 <dcngettext@plt+0x9dd0>
   12a5c:	cmp	r0, #0
   12a60:	beq	12a84 <dcngettext@plt+0x1a5c>
   12a64:	ldr	r4, [pc, #168]	; 12b14 <dcngettext@plt+0x1aec>
   12a68:	ldrb	r3, [r4, #4]
   12a6c:	cmp	r3, #0
   12a70:	beq	12aa0 <dcngettext@plt+0x1a78>
   12a74:	bl	10f2c <__errno_location@plt>
   12a78:	ldr	r3, [r0]
   12a7c:	cmp	r3, #32
   12a80:	bne	12aa0 <dcngettext@plt+0x1a78>
   12a84:	ldr	r3, [pc, #140]	; 12b18 <dcngettext@plt+0x1af0>
   12a88:	ldr	r0, [r3]
   12a8c:	bl	1adf8 <dcngettext@plt+0x9dd0>
   12a90:	cmp	r0, #0
   12a94:	bne	12ae8 <dcngettext@plt+0x1ac0>
   12a98:	add	sp, sp, #8
   12a9c:	pop	{r4, r5, r6, pc}
   12aa0:	mov	r2, #5
   12aa4:	ldr	r1, [pc, #112]	; 12b1c <dcngettext@plt+0x1af4>
   12aa8:	mov	r0, #0
   12aac:	bl	10e30 <dcgettext@plt>
   12ab0:	ldr	r4, [r4]
   12ab4:	cmp	r4, #0
   12ab8:	mov	r5, r0
   12abc:	beq	12af4 <dcngettext@plt+0x1acc>
   12ac0:	bl	10f2c <__errno_location@plt>
   12ac4:	ldr	r6, [r0]
   12ac8:	mov	r0, r4
   12acc:	bl	18878 <dcngettext@plt+0x7850>
   12ad0:	mov	r1, r6
   12ad4:	str	r5, [sp]
   12ad8:	ldr	r2, [pc, #64]	; 12b20 <dcngettext@plt+0x1af8>
   12adc:	mov	r3, r0
   12ae0:	mov	r0, #0
   12ae4:	bl	10ea8 <error@plt>
   12ae8:	ldr	r3, [pc, #52]	; 12b24 <dcngettext@plt+0x1afc>
   12aec:	ldr	r0, [r3]
   12af0:	bl	10de8 <_exit@plt>
   12af4:	bl	10f2c <__errno_location@plt>
   12af8:	mov	r3, r5
   12afc:	ldr	r2, [pc, #36]	; 12b28 <dcngettext@plt+0x1b00>
   12b00:	ldr	r1, [r0]
   12b04:	mov	r0, r4
   12b08:	bl	10ea8 <error@plt>
   12b0c:	b	12ae8 <dcngettext@plt+0x1ac0>
   12b10:	andeq	sp, r2, ip, ror #2
   12b14:	andeq	sp, r2, r4, lsl #3
   12b18:	andeq	sp, r2, r0, ror #2
   12b1c:	andeq	ip, r1, r0, lsr #11
   12b20:	andeq	ip, r1, ip, lsr #11
   12b24:	andeq	sp, r2, ip, lsl #2
   12b28:			; <UNDEFINED> instruction: 0x0001c5b0
   12b2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b30:	mov	r5, r0
   12b34:	sub	sp, sp, #176	; 0xb0
   12b38:	ldr	r0, [pc, #208]	; 12c10 <dcngettext@plt+0x1be8>
   12b3c:	mov	r9, r1
   12b40:	mov	r4, r2
   12b44:	mov	r8, r3
   12b48:	bl	1ad70 <dcngettext@plt+0x9d48>
   12b4c:	subs	r6, r0, #0
   12b50:	moveq	r0, #1
   12b54:	beq	12bc4 <dcngettext@plt+0x1b9c>
   12b58:	add	r0, sp, #4
   12b5c:	blx	r4
   12b60:	mov	r7, #1
   12b64:	mov	sl, #32768	; 0x8000
   12b68:	mov	r4, #0
   12b6c:	b	12b88 <dcngettext@plt+0x1b60>
   12b70:	bl	10ff8 <fread_unlocked@plt>
   12b74:	add	r4, r4, r0
   12b78:	cmp	r4, #32768	; 0x8000
   12b7c:	beq	12bcc <dcngettext@plt+0x1ba4>
   12b80:	cmp	r0, #0
   12b84:	beq	12be0 <dcngettext@plt+0x1bb8>
   12b88:	ldr	ip, [r5]
   12b8c:	rsb	r2, r4, #32768	; 0x8000
   12b90:	tst	ip, #16
   12b94:	add	r0, r6, r4
   12b98:	mov	r3, r5
   12b9c:	mov	r1, r7
   12ba0:	beq	12b70 <dcngettext@plt+0x1b48>
   12ba4:	cmp	r4, #0
   12ba8:	bne	12bfc <dcngettext@plt+0x1bd4>
   12bac:	mov	r1, r9
   12bb0:	add	r0, sp, #4
   12bb4:	blx	r8
   12bb8:	mov	r0, r6
   12bbc:	bl	15b14 <dcngettext@plt+0x4aec>
   12bc0:	mov	r0, #0
   12bc4:	add	sp, sp, #176	; 0xb0
   12bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bcc:	add	r2, sp, #4
   12bd0:	mov	r1, sl
   12bd4:	mov	r0, r6
   12bd8:	bl	12df8 <dcngettext@plt+0x1dd0>
   12bdc:	b	12b68 <dcngettext@plt+0x1b40>
   12be0:	ldr	r3, [r5]
   12be4:	tst	r3, #32
   12be8:	beq	12ba4 <dcngettext@plt+0x1b7c>
   12bec:	mov	r0, r6
   12bf0:	bl	15b14 <dcngettext@plt+0x4aec>
   12bf4:	mov	r0, #1
   12bf8:	b	12bc4 <dcngettext@plt+0x1b9c>
   12bfc:	mov	r1, r4
   12c00:	add	r2, sp, #4
   12c04:	mov	r0, r6
   12c08:	bl	15304 <dcngettext@plt+0x42dc>
   12c0c:	b	12bac <dcngettext@plt+0x1b84>
   12c10:	andeq	r8, r0, r8, asr #32
   12c14:	ldr	r3, [pc, #4]	; 12c20 <dcngettext@plt+0x1bf8>
   12c18:	ldr	r2, [pc, #4]	; 12c24 <dcngettext@plt+0x1bfc>
   12c1c:	b	12b2c <dcngettext@plt+0x1b04>
   12c20:	andeq	r5, r1, r0, lsr #4
   12c24:	andeq	r2, r1, ip, lsr ip
   12c28:	ldr	r3, [pc, #4]	; 12c34 <dcngettext@plt+0x1c0c>
   12c2c:	ldr	r2, [pc, #4]	; 12c38 <dcngettext@plt+0x1c10>
   12c30:	b	12b2c <dcngettext@plt+0x1b04>
   12c34:	muleq	r1, r8, r2
   12c38:			; <UNDEFINED> instruction: 0x00012cb4
   12c3c:	ldr	r2, [pc, #80]	; 12c94 <dcngettext@plt+0x1c6c>
   12c40:	ldr	r3, [pc, #80]	; 12c98 <dcngettext@plt+0x1c70>
   12c44:	push	{r4, r5, lr}
   12c48:	ldr	ip, [pc, #76]	; 12c9c <dcngettext@plt+0x1c74>
   12c4c:	ldr	r5, [pc, #76]	; 12ca0 <dcngettext@plt+0x1c78>
   12c50:	ldr	r4, [pc, #76]	; 12ca4 <dcngettext@plt+0x1c7c>
   12c54:	ldr	lr, [pc, #76]	; 12ca8 <dcngettext@plt+0x1c80>
   12c58:	ldr	r1, [pc, #76]	; 12cac <dcngettext@plt+0x1c84>
   12c5c:	str	r2, [r0]
   12c60:	ldr	r2, [pc, #72]	; 12cb0 <dcngettext@plt+0x1c88>
   12c64:	str	r3, [r0, #4]
   12c68:	mov	r3, #0
   12c6c:	str	r5, [r0, #8]
   12c70:	str	r4, [r0, #12]
   12c74:	str	lr, [r0, #16]
   12c78:	str	ip, [r0, #20]
   12c7c:	str	r1, [r0, #24]
   12c80:	str	r2, [r0, #28]
   12c84:	str	r3, [r0, #36]	; 0x24
   12c88:	str	r3, [r0, #32]
   12c8c:	str	r3, [r0, #40]	; 0x28
   12c90:	pop	{r4, r5, pc}
   12c94:	bvs	28c638 <stdout@@GLIBC_2.4+0x25f4cc>
   12c98:	bllt	19fe6b4 <stdout@@GLIBC_2.4+0x19d1548>
   12c9c:	blls	16ced4 <stdout@@GLIBC_2.4+0x13fd68>
   12ca0:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   12ca4:	strbge	pc, [pc, #-1338]	; 12772 <dcngettext@plt+0x174a>	; <UNPREDICTABLE>
   12ca8:	tstpl	lr, pc, ror r2
   12cac:	svcne	0x0083d9ab
   12cb0:	blpl	ff84611c <stdout@@GLIBC_2.4+0xff818fb0>
   12cb4:	ldr	r2, [pc, #80]	; 12d0c <dcngettext@plt+0x1ce4>
   12cb8:	ldr	r3, [pc, #80]	; 12d10 <dcngettext@plt+0x1ce8>
   12cbc:	push	{r4, r5, lr}
   12cc0:	ldr	ip, [pc, #76]	; 12d14 <dcngettext@plt+0x1cec>
   12cc4:	ldr	r5, [pc, #76]	; 12d18 <dcngettext@plt+0x1cf0>
   12cc8:	ldr	r4, [pc, #76]	; 12d1c <dcngettext@plt+0x1cf4>
   12ccc:	ldr	lr, [pc, #76]	; 12d20 <dcngettext@plt+0x1cf8>
   12cd0:	ldr	r1, [pc, #76]	; 12d24 <dcngettext@plt+0x1cfc>
   12cd4:	str	r2, [r0]
   12cd8:	ldr	r2, [pc, #72]	; 12d28 <dcngettext@plt+0x1d00>
   12cdc:	str	r3, [r0, #4]
   12ce0:	mov	r3, #0
   12ce4:	str	r5, [r0, #8]
   12ce8:	str	r4, [r0, #12]
   12cec:	str	lr, [r0, #16]
   12cf0:	str	ip, [r0, #20]
   12cf4:	str	r1, [r0, #24]
   12cf8:	str	r2, [r0, #28]
   12cfc:	str	r3, [r0, #36]	; 0x24
   12d00:	str	r3, [r0, #32]
   12d04:	str	r3, [r0, #40]	; 0x28
   12d08:	pop	{r4, r5, pc}
   12d0c:	ldrdgt	r9, [r5, -r8]
   12d10:	ldrbtcc	sp, [ip], -r7, lsl #10
   12d14:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   12d18:	rsbscc	sp, r0, r7, lsl sp
   12d1c:			; <UNDEFINED> instruction: 0xf70e5939
   12d20:			; <UNDEFINED> instruction: 0xffc00b31
   12d24:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   12d28:	cdplt	15, 15, cr4, cr10, cr4, {5}
   12d2c:	ldr	r2, [r0]
   12d30:	mov	r3, r0
   12d34:	rev	r2, r2
   12d38:	str	r2, [r1]
   12d3c:	ldr	r2, [r3, #4]
   12d40:	mov	r0, r1
   12d44:	rev	r2, r2
   12d48:	str	r2, [r1, #4]
   12d4c:	ldr	r2, [r3, #8]
   12d50:	rev	r2, r2
   12d54:	str	r2, [r1, #8]
   12d58:	ldr	r2, [r3, #12]
   12d5c:	rev	r2, r2
   12d60:	str	r2, [r1, #12]
   12d64:	ldr	r2, [r3, #16]
   12d68:	rev	r2, r2
   12d6c:	str	r2, [r1, #16]
   12d70:	ldr	r2, [r3, #20]
   12d74:	rev	r2, r2
   12d78:	str	r2, [r1, #20]
   12d7c:	ldr	r2, [r3, #24]
   12d80:	rev	r2, r2
   12d84:	str	r2, [r1, #24]
   12d88:	ldr	r3, [r3, #28]
   12d8c:	rev	r3, r3
   12d90:	str	r3, [r1, #28]
   12d94:	bx	lr
   12d98:	ldr	r2, [r0]
   12d9c:	mov	r3, r0
   12da0:	rev	r2, r2
   12da4:	str	r2, [r1]
   12da8:	ldr	r2, [r3, #4]
   12dac:	mov	r0, r1
   12db0:	rev	r2, r2
   12db4:	str	r2, [r1, #4]
   12db8:	ldr	r2, [r3, #8]
   12dbc:	rev	r2, r2
   12dc0:	str	r2, [r1, #8]
   12dc4:	ldr	r2, [r3, #12]
   12dc8:	rev	r2, r2
   12dcc:	str	r2, [r1, #12]
   12dd0:	ldr	r2, [r3, #16]
   12dd4:	rev	r2, r2
   12dd8:	str	r2, [r1, #16]
   12ddc:	ldr	r2, [r3, #20]
   12de0:	rev	r2, r2
   12de4:	str	r2, [r1, #20]
   12de8:	ldr	r3, [r3, #24]
   12dec:	rev	r3, r3
   12df0:	str	r3, [r1, #24]
   12df4:	bx	lr
   12df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dfc:	sub	sp, sp, #132	; 0x84
   12e00:	ldr	r3, [r2, #32]
   12e04:	mov	lr, r2
   12e08:	str	r2, [sp, #124]	; 0x7c
   12e0c:	ldr	r2, [r2, #36]	; 0x24
   12e10:	add	r3, r1, r3
   12e14:	bic	ip, r1, #3
   12e18:	cmp	r1, r3
   12e1c:	addhi	r2, r2, #1
   12e20:	add	ip, r0, ip
   12e24:	str	r3, [lr, #32]
   12e28:	add	r1, lr, #16
   12e2c:	ldr	r3, [lr, #4]
   12e30:	cmp	r0, ip
   12e34:	str	r2, [lr, #36]	; 0x24
   12e38:	str	ip, [sp, #120]	; 0x78
   12e3c:	ldr	r9, [lr]
   12e40:	mov	r6, r3
   12e44:	ldr	r7, [lr, #8]
   12e48:	ldr	r2, [lr, #12]
   12e4c:	ldm	r1, {r1, sl, ip}
   12e50:	ldr	r5, [lr, #28]
   12e54:	bcs	15170 <dcngettext@plt+0x4148>
   12e58:	str	r5, [sp, #116]	; 0x74
   12e5c:	str	r2, [sp, #100]	; 0x64
   12e60:	str	r3, [sp, #92]	; 0x5c
   12e64:	mov	r8, r5
   12e68:	mov	r3, r9
   12e6c:	mov	r5, r2
   12e70:	mov	r2, ip
   12e74:	str	r0, [sp, #4]
   12e78:	str	ip, [sp, #112]	; 0x70
   12e7c:	str	sl, [sp, #108]	; 0x6c
   12e80:	str	r1, [sp, #104]	; 0x68
   12e84:	str	r7, [sp, #96]	; 0x60
   12e88:	str	r9, [sp, #88]	; 0x58
   12e8c:	ldr	r0, [sp, #4]
   12e90:	ror	lr, r1, #11
   12e94:	ldr	ip, [pc, #4088]	; 13e94 <dcngettext@plt+0x2e6c>
   12e98:	ldr	fp, [r0]
   12e9c:	eor	lr, lr, r1, ror #6
   12ea0:	rev	r4, fp
   12ea4:	add	ip, r4, ip
   12ea8:	orr	r9, r3, r6
   12eac:	str	r4, [sp, #8]
   12eb0:	eor	lr, lr, r1, ror #25
   12eb4:	ror	r4, r3, #13
   12eb8:	add	lr, lr, ip
   12ebc:	and	r9, r9, r7
   12ec0:	and	ip, r3, r6
   12ec4:	eor	r4, r4, r3, ror #2
   12ec8:	orr	ip, r9, ip
   12ecc:	eor	r4, r4, r3, ror #22
   12ed0:	eor	r0, r2, sl
   12ed4:	add	r4, r4, ip
   12ed8:	ldr	ip, [sp, #4]
   12edc:	and	r0, r0, r1
   12ee0:	eor	r0, r0, r2
   12ee4:	ldr	fp, [ip, #4]
   12ee8:	add	r0, lr, r0
   12eec:	add	r0, r0, r8
   12ef0:	add	lr, r4, r0
   12ef4:	rev	r4, fp
   12ef8:	add	r2, r2, r4
   12efc:	add	r2, r2, #1895825408	; 0x71000000
   12f00:	add	r5, r0, r5
   12f04:	orr	r9, lr, r3
   12f08:	eor	r0, r1, sl
   12f0c:	ror	ip, lr, #13
   12f10:	add	r2, r2, #3620864	; 0x374000
   12f14:	and	r9, r9, r6
   12f18:	and	r8, lr, r3
   12f1c:	and	r0, r0, r5
   12f20:	eor	ip, ip, lr, ror #2
   12f24:	add	r2, r2, #1168	; 0x490
   12f28:	eor	r0, r0, sl
   12f2c:	orr	r8, r9, r8
   12f30:	eor	ip, ip, lr, ror #22
   12f34:	add	r2, r2, #1
   12f38:	add	r2, r0, r2
   12f3c:	add	r0, ip, r8
   12f40:	ldr	ip, [sp, #4]
   12f44:	str	r4, [sp, #12]
   12f48:	ror	r4, r5, #11
   12f4c:	eor	r4, r4, r5, ror #6
   12f50:	ldr	fp, [ip, #8]
   12f54:	eor	r4, r4, r5, ror #25
   12f58:	add	r2, r2, r4
   12f5c:	add	r0, r0, r2
   12f60:	add	r7, r2, r7
   12f64:	rev	r8, fp
   12f68:	eor	r2, r5, r1
   12f6c:	ldr	fp, [pc, #3876]	; 13e98 <dcngettext@plt+0x2e70>
   12f70:	add	sl, r8, sl
   12f74:	and	r2, r2, r7
   12f78:	add	fp, sl, fp
   12f7c:	eor	r2, r2, r1
   12f80:	orr	r9, lr, r0
   12f84:	ror	ip, r0, #13
   12f88:	add	r2, r2, fp
   12f8c:	ldr	fp, [sp, #4]
   12f90:	and	r9, r9, r3
   12f94:	str	r8, [sp, #16]
   12f98:	eor	ip, ip, r0, ror #2
   12f9c:	and	r8, lr, r0
   12fa0:	eor	ip, ip, r0, ror #22
   12fa4:	ror	r4, r7, #11
   12fa8:	orr	r8, r9, r8
   12fac:	add	r8, ip, r8
   12fb0:	eor	r4, r4, r7, ror #6
   12fb4:	ldr	ip, [fp, #12]
   12fb8:	eor	r4, r4, r7, ror #25
   12fbc:	add	r2, r2, r4
   12fc0:	rev	ip, ip
   12fc4:	add	r6, r2, r6
   12fc8:	add	r1, ip, r1
   12fcc:	add	r2, r8, r2
   12fd0:	add	r1, r1, #-385875968	; 0xe9000000
   12fd4:	eor	r4, r5, r7
   12fd8:	orr	r8, r0, r2
   12fdc:	str	ip, [sp, #20]
   12fe0:	add	r1, r1, #11862016	; 0xb50000
   12fe4:	ror	ip, r2, #13
   12fe8:	and	sl, r0, r2
   12fec:	and	r4, r4, r6
   12ff0:	ror	r9, r6, #11
   12ff4:	and	r8, r8, lr
   12ff8:	eor	ip, ip, r2, ror #2
   12ffc:	add	r1, r1, #56064	; 0xdb00
   13000:	eor	r4, r4, r5
   13004:	orr	r8, r8, sl
   13008:	eor	ip, ip, r2, ror #22
   1300c:	eor	r9, r9, r6, ror #6
   13010:	add	r1, r1, #165	; 0xa5
   13014:	eor	r9, r9, r6, ror #25
   13018:	add	r1, r4, r1
   1301c:	add	r4, ip, r8
   13020:	ldr	ip, [fp, #16]
   13024:	add	r1, r1, r9
   13028:	add	r4, r4, r1
   1302c:	add	r3, r1, r3
   13030:	ldr	sl, [pc, #3684]	; 13e9c <dcngettext@plt+0x2e74>
   13034:	rev	r1, ip
   13038:	mov	r9, r1
   1303c:	eor	r1, r7, r6
   13040:	add	sl, r9, sl
   13044:	str	r9, [sp, #56]	; 0x38
   13048:	and	r1, r1, r3
   1304c:	ror	r9, r3, #11
   13050:	orr	r8, r2, r4
   13054:	eor	r1, r1, r7
   13058:	ror	ip, r4, #13
   1305c:	add	r5, sl, r5
   13060:	eor	r9, r9, r3, ror #6
   13064:	and	sl, r2, r4
   13068:	add	r5, r1, r5
   1306c:	ldr	fp, [fp, #20]
   13070:	and	r8, r8, r0
   13074:	eor	ip, ip, r4, ror #2
   13078:	eor	r9, r9, r3, ror #25
   1307c:	orr	r8, r8, sl
   13080:	add	r9, r5, r9
   13084:	eor	ip, ip, r4, ror #22
   13088:	ldr	sl, [pc, #3600]	; 13ea0 <dcngettext@plt+0x2e78>
   1308c:	add	r5, lr, r9
   13090:	eor	r1, r6, r3
   13094:	rev	lr, fp
   13098:	add	ip, ip, r8
   1309c:	add	ip, ip, r9
   130a0:	add	sl, lr, sl
   130a4:	and	r1, r1, r5
   130a8:	eor	r1, r1, r6
   130ac:	add	r7, sl, r7
   130b0:	orr	r8, r4, ip
   130b4:	str	lr, [sp, #64]	; 0x40
   130b8:	ror	r9, r5, #11
   130bc:	ror	lr, ip, #13
   130c0:	add	r7, r1, r7
   130c4:	ldr	r1, [sp, #4]
   130c8:	and	sl, r4, ip
   130cc:	eor	r9, r9, r5, ror #6
   130d0:	and	r8, r8, r2
   130d4:	eor	lr, lr, ip, ror #2
   130d8:	eor	r9, r9, r5, ror #25
   130dc:	orr	r8, r8, sl
   130e0:	eor	lr, lr, ip, ror #22
   130e4:	add	r7, r7, r9
   130e8:	ldr	fp, [r1, #24]
   130ec:	add	lr, lr, r8
   130f0:	add	lr, lr, r7
   130f4:	ldr	sl, [pc, #3496]	; 13ea4 <dcngettext@plt+0x2e7c>
   130f8:	add	r0, r0, r7
   130fc:	rev	r7, fp
   13100:	eor	r1, r3, r5
   13104:	ldr	fp, [sp, #4]
   13108:	add	sl, r7, sl
   1310c:	orr	r8, ip, lr
   13110:	str	r7, [sp, #68]	; 0x44
   13114:	ror	r7, lr, #13
   13118:	and	r1, r1, r0
   1311c:	ror	r9, r0, #11
   13120:	add	r6, sl, r6
   13124:	and	r8, r8, r4
   13128:	and	sl, ip, lr
   1312c:	eor	r7, r7, lr, ror #2
   13130:	eor	r1, r1, r3
   13134:	orr	r8, r8, sl
   13138:	eor	r7, r7, lr, ror #22
   1313c:	eor	r9, r9, r0, ror #6
   13140:	eor	r9, r9, r0, ror #25
   13144:	add	r6, r1, r6
   13148:	add	r1, r7, r8
   1314c:	ldr	r7, [fp, #28]
   13150:	add	r6, r6, r9
   13154:	add	r1, r1, r6
   13158:	add	r2, r2, r6
   1315c:	rev	r6, r7
   13160:	mov	sl, r6
   13164:	str	sl, [sp, #28]
   13168:	add	sl, sl, #-1426063360	; 0xab000000
   1316c:	add	sl, sl, #1851392	; 0x1c4000
   13170:	eor	r6, r5, r0
   13174:	add	sl, sl, #7872	; 0x1ec0
   13178:	orr	r8, lr, r1
   1317c:	add	sl, sl, #21
   13180:	and	r6, r6, r2
   13184:	ror	r9, r2, #11
   13188:	ror	r7, r1, #13
   1318c:	eor	r6, r6, r5
   13190:	add	r3, sl, r3
   13194:	eor	r9, r9, r2, ror #6
   13198:	and	sl, lr, r1
   1319c:	and	r8, r8, ip
   131a0:	eor	r7, r7, r1, ror #2
   131a4:	eor	r9, r9, r2, ror #25
   131a8:	eor	r7, r7, r1, ror #22
   131ac:	add	r3, r6, r3
   131b0:	orr	r8, r8, sl
   131b4:	add	r3, r3, r9
   131b8:	add	r8, r7, r8
   131bc:	ldr	r9, [fp, #32]
   131c0:	add	r8, r8, r3
   131c4:	add	r4, r4, r3
   131c8:	ldr	sl, [pc, #3288]	; 13ea8 <dcngettext@plt+0x2e80>
   131cc:	rev	r6, r9
   131d0:	eor	r3, r0, r2
   131d4:	add	sl, r6, sl
   131d8:	orr	r7, r1, r8
   131dc:	str	r6, [sp, #72]	; 0x48
   131e0:	and	r3, r3, r4
   131e4:	ror	r9, r4, #11
   131e8:	ror	r6, r8, #13
   131ec:	eor	r3, r3, r0
   131f0:	add	r5, sl, r5
   131f4:	eor	r9, r9, r4, ror #6
   131f8:	and	sl, r1, r8
   131fc:	and	r7, r7, lr
   13200:	eor	r6, r6, r8, ror #2
   13204:	eor	r9, r9, r4, ror #25
   13208:	orr	r7, r7, sl
   1320c:	eor	r6, r6, r8, ror #22
   13210:	ldr	sl, [fp, #36]	; 0x24
   13214:	add	r5, r3, r5
   13218:	add	r5, r5, r9
   1321c:	add	r3, r6, r7
   13220:	add	r3, r3, r5
   13224:	add	ip, ip, r5
   13228:	rev	r5, sl
   1322c:	ldr	sl, [pc, #3192]	; 13eac <dcngettext@plt+0x2e84>
   13230:	mov	r6, r5
   13234:	eor	r5, r2, r4
   13238:	add	sl, r6, sl
   1323c:	and	r5, r5, ip
   13240:	ror	r9, ip, #11
   13244:	orr	r7, r8, r3
   13248:	eor	r5, r5, r2
   1324c:	str	r6, [sp, #52]	; 0x34
   13250:	add	r0, sl, r0
   13254:	ror	r6, r3, #13
   13258:	eor	r9, r9, ip, ror #6
   1325c:	and	sl, r8, r3
   13260:	eor	r9, r9, ip, ror #25
   13264:	and	r7, r7, r1
   13268:	eor	r6, r6, r3, ror #2
   1326c:	add	r0, r5, r0
   13270:	orr	r7, r7, sl
   13274:	add	r0, r0, r9
   13278:	eor	r6, r6, r3, ror #22
   1327c:	ldr	r9, [fp, #40]	; 0x28
   13280:	add	r6, r6, r7
   13284:	ldr	sl, [pc, #3108]	; 13eb0 <dcngettext@plt+0x2e88>
   13288:	add	lr, lr, r0
   1328c:	rev	r7, r9
   13290:	add	r0, r6, r0
   13294:	eor	r5, r4, ip
   13298:	add	sl, r7, sl
   1329c:	str	r7, [sp, #60]	; 0x3c
   132a0:	orr	r7, r3, r0
   132a4:	and	r5, r5, lr
   132a8:	ror	r9, lr, #11
   132ac:	ror	r6, r0, #13
   132b0:	add	r2, sl, r2
   132b4:	and	r7, r7, r8
   132b8:	and	sl, r3, r0
   132bc:	eor	r5, r5, r4
   132c0:	orr	r7, r7, sl
   132c4:	eor	r9, r9, lr, ror #6
   132c8:	ldr	sl, [fp, #44]	; 0x2c
   132cc:	eor	r6, r6, r0, ror #2
   132d0:	eor	r9, r9, lr, ror #25
   132d4:	add	r2, r5, r2
   132d8:	eor	r6, r6, r0, ror #22
   132dc:	add	r2, r2, r9
   132e0:	add	r6, r6, r7
   132e4:	rev	r9, sl
   132e8:	ldr	sl, [pc, #3012]	; 13eb4 <dcngettext@plt+0x2e8c>
   132ec:	add	r1, r1, r2
   132f0:	add	r2, r6, r2
   132f4:	add	sl, r9, sl
   132f8:	orr	r7, r0, r2
   132fc:	eor	r5, ip, lr
   13300:	add	r4, sl, r4
   13304:	and	r7, r7, r3
   13308:	and	sl, r0, r2
   1330c:	orr	r7, r7, sl
   13310:	str	r9, [sp, #32]
   13314:	ldr	sl, [fp, #48]	; 0x30
   13318:	and	r5, r5, r1
   1331c:	ror	r9, r1, #11
   13320:	ror	r6, r2, #13
   13324:	eor	r5, r5, ip
   13328:	eor	r9, r9, r1, ror #6
   1332c:	eor	r6, r6, r2, ror #2
   13330:	eor	r9, r9, r1, ror #25
   13334:	add	r4, r5, r4
   13338:	eor	r6, r6, r2, ror #22
   1333c:	rev	sl, sl
   13340:	add	r4, r4, r9
   13344:	add	r6, r6, r7
   13348:	str	sl, [sp, #36]	; 0x24
   1334c:	add	sl, sl, #1912602624	; 0x72000000
   13350:	add	r8, r8, r4
   13354:	add	r6, r6, r4
   13358:	add	sl, sl, #12451840	; 0xbe0000
   1335c:	eor	r4, lr, r1
   13360:	add	sl, sl, #23808	; 0x5d00
   13364:	orr	r7, r2, r6
   13368:	add	sl, sl, #116	; 0x74
   1336c:	and	r4, r4, r8
   13370:	ror	r9, r8, #11
   13374:	ror	r5, r6, #13
   13378:	eor	r4, r4, lr
   1337c:	add	ip, sl, ip
   13380:	eor	r9, r9, r8, ror #6
   13384:	and	sl, r2, r6
   13388:	and	r7, r7, r0
   1338c:	eor	r5, r5, r6, ror #2
   13390:	eor	r9, r9, r8, ror #25
   13394:	orr	r7, r7, sl
   13398:	add	ip, r4, ip
   1339c:	eor	r5, r5, r6, ror #22
   133a0:	add	ip, ip, r9
   133a4:	add	r5, r5, r7
   133a8:	ldr	r9, [fp, #52]	; 0x34
   133ac:	add	r3, r3, ip
   133b0:	ldr	sl, [pc, #2816]	; 13eb8 <dcngettext@plt+0x2e90>
   133b4:	add	ip, r5, ip
   133b8:	rev	r5, r9
   133bc:	eor	r4, r1, r8
   133c0:	str	r5, [sp, #48]	; 0x30
   133c4:	add	sl, r5, sl
   133c8:	orr	r9, r6, ip
   133cc:	ror	r5, ip, #13
   133d0:	and	r4, r4, r3
   133d4:	ror	r7, r3, #11
   133d8:	add	lr, sl, lr
   133dc:	and	r9, r9, r2
   133e0:	and	sl, r6, ip
   133e4:	eor	r5, r5, ip, ror #2
   133e8:	eor	r4, r4, r1
   133ec:	eor	r5, r5, ip, ror #22
   133f0:	eor	r7, r7, r3, ror #6
   133f4:	orr	r9, r9, sl
   133f8:	eor	r7, r7, r3, ror #25
   133fc:	add	r9, r5, r9
   13400:	add	lr, r4, lr
   13404:	ldr	r5, [fp, #56]	; 0x38
   13408:	add	lr, lr, r7
   1340c:	ldr	r7, [pc, #2728]	; 13ebc <dcngettext@plt+0x2e94>
   13410:	add	r0, r0, lr
   13414:	rev	r5, r5
   13418:	eor	r4, r8, r3
   1341c:	add	lr, r9, lr
   13420:	add	r7, r5, r7
   13424:	and	r4, r4, r0
   13428:	orr	sl, ip, lr
   1342c:	eor	r4, r4, r8
   13430:	ror	r9, r0, #11
   13434:	add	r1, r7, r1
   13438:	eor	r9, r9, r0, ror #6
   1343c:	ror	r7, lr, #13
   13440:	and	sl, sl, r6
   13444:	add	r1, r4, r1
   13448:	and	r4, ip, lr
   1344c:	eor	r9, r9, r0, ror #25
   13450:	eor	r7, r7, lr, ror #2
   13454:	orr	sl, sl, r4
   13458:	ldr	r4, [fp, #60]	; 0x3c
   1345c:	eor	r7, r7, lr, ror #22
   13460:	add	r1, r1, r9
   13464:	ldr	fp, [pc, #2644]	; 13ec0 <dcngettext@plt+0x2e98>
   13468:	add	r2, r2, r1
   1346c:	add	sl, r7, sl
   13470:	rev	r4, r4
   13474:	eor	r7, r3, r0
   13478:	add	fp, r4, fp
   1347c:	and	r7, r7, r2
   13480:	add	fp, fp, r8
   13484:	eor	r7, r7, r3
   13488:	str	r5, [sp, #40]	; 0x28
   1348c:	add	r7, r7, fp
   13490:	ldr	r5, [sp, #52]	; 0x34
   13494:	ldr	fp, [sp, #8]
   13498:	add	r1, sl, r1
   1349c:	ror	sl, r2, #11
   134a0:	add	fp, fp, r5
   134a4:	eor	sl, sl, r2, ror #6
   134a8:	ldr	r5, [sp, #40]	; 0x28
   134ac:	str	r4, [sp, #44]	; 0x2c
   134b0:	orr	r8, lr, r1
   134b4:	ldr	r4, [sp, #12]
   134b8:	eor	sl, sl, r2, ror #25
   134bc:	ror	r9, r1, #13
   134c0:	add	r7, r7, sl
   134c4:	and	r8, r8, ip
   134c8:	and	sl, lr, r1
   134cc:	eor	r9, r9, r1, ror #2
   134d0:	orr	sl, r8, sl
   134d4:	eor	r9, r9, r1, ror #22
   134d8:	ror	r8, r5, #19
   134dc:	eor	r8, r8, r5, ror #17
   134e0:	add	r9, r9, sl
   134e4:	ror	sl, r4, #18
   134e8:	eor	r8, r8, r5, lsr #10
   134ec:	eor	sl, sl, r4, ror #7
   134f0:	eor	sl, sl, r4, lsr #3
   134f4:	add	r8, r8, fp
   134f8:	ldr	fp, [pc, #2500]	; 13ec4 <dcngettext@plt+0x2e9c>
   134fc:	add	r9, r9, r7
   13500:	add	r6, r6, r7
   13504:	add	r8, r8, sl
   13508:	eor	r7, r0, r2
   1350c:	add	fp, r8, fp
   13510:	and	r7, r7, r6
   13514:	add	fp, fp, r3
   13518:	eor	r7, r7, r0
   1351c:	add	r7, r7, fp
   13520:	ldr	fp, [sp, #60]	; 0x3c
   13524:	ror	sl, r6, #11
   13528:	add	fp, r4, fp
   1352c:	eor	sl, sl, r6, ror #6
   13530:	ldr	r4, [sp, #44]	; 0x2c
   13534:	ldr	r5, [sp, #16]
   13538:	str	r8, [sp, #12]
   1353c:	eor	sl, sl, r6, ror #25
   13540:	orr	r8, r1, r9
   13544:	ror	r3, r9, #13
   13548:	add	r7, r7, sl
   1354c:	and	r8, r8, lr
   13550:	and	sl, r1, r9
   13554:	eor	r3, r3, r9, ror #2
   13558:	orr	sl, r8, sl
   1355c:	eor	r3, r3, r9, ror #22
   13560:	ror	r8, r4, #19
   13564:	eor	r8, r8, r4, ror #17
   13568:	add	r3, r3, sl
   1356c:	ror	sl, r5, #18
   13570:	eor	r8, r8, r4, lsr #10
   13574:	eor	sl, sl, r5, ror #7
   13578:	add	r8, r8, fp
   1357c:	eor	sl, sl, r5, lsr #3
   13580:	ldr	fp, [pc, #2368]	; 13ec8 <dcngettext@plt+0x2ea0>
   13584:	add	sl, r8, sl
   13588:	add	ip, ip, r7
   1358c:	add	fp, sl, fp
   13590:	add	r3, r3, r7
   13594:	add	r0, fp, r0
   13598:	eor	r7, r2, r6
   1359c:	ldr	fp, [sp, #32]
   135a0:	str	r3, [sp, #24]
   135a4:	str	sl, [sp, #16]
   135a8:	and	r7, r7, ip
   135ac:	ror	sl, ip, #11
   135b0:	eor	r7, r7, r2
   135b4:	eor	sl, sl, ip, ror #6
   135b8:	add	fp, r5, fp
   135bc:	ldr	r5, [sp, #24]
   135c0:	eor	sl, sl, ip, ror #25
   135c4:	add	r7, r7, r0
   135c8:	ror	r0, r3, #13
   135cc:	add	r7, r7, sl
   135d0:	eor	r0, r0, r3, ror #2
   135d4:	and	sl, r9, r5
   135d8:	ldr	r5, [sp, #20]
   135dc:	orr	r8, r9, r3
   135e0:	eor	r0, r0, r3, ror #22
   135e4:	ldr	r3, [sp, #12]
   135e8:	and	r8, r8, r1
   135ec:	orr	sl, r8, sl
   135f0:	ror	r8, r5, #18
   135f4:	eor	r8, r8, r5, ror #7
   135f8:	add	r0, r0, sl
   135fc:	ror	sl, r3, #19
   13600:	eor	r8, r8, r5, lsr #3
   13604:	eor	sl, sl, r3, ror #17
   13608:	eor	sl, sl, r3, lsr #10
   1360c:	add	fp, r8, fp
   13610:	ldr	r8, [pc, #2228]	; 13ecc <dcngettext@plt+0x2ea4>
   13614:	add	lr, lr, r7
   13618:	add	fp, fp, sl
   1361c:	add	r0, r0, r7
   13620:	eor	r7, r6, ip
   13624:	add	r8, fp, r8
   13628:	and	r7, r7, lr
   1362c:	str	r0, [sp, #20]
   13630:	add	r2, r8, r2
   13634:	eor	r7, r7, r6
   13638:	ldr	r3, [sp, #20]
   1363c:	add	r7, r7, r2
   13640:	ldr	r2, [sp, #36]	; 0x24
   13644:	mov	r0, fp
   13648:	ldr	r8, [sp, #24]
   1364c:	ror	fp, lr, #11
   13650:	add	r2, r5, r2
   13654:	eor	fp, fp, lr, ror #6
   13658:	ldr	r5, [sp, #24]
   1365c:	orr	sl, r8, r3
   13660:	eor	fp, fp, lr, ror #25
   13664:	ror	r8, r3, #13
   13668:	add	r7, r7, fp
   1366c:	eor	r8, r8, r3, ror #2
   13670:	and	fp, r5, r3
   13674:	ldr	r5, [sp, #56]	; 0x38
   13678:	eor	r8, r8, r3, ror #22
   1367c:	ldr	r3, [sp, #16]
   13680:	and	sl, sl, r9
   13684:	orr	fp, sl, fp
   13688:	ror	sl, r5, #18
   1368c:	eor	sl, sl, r5, ror #7
   13690:	add	r8, r8, fp
   13694:	ror	fp, r3, #19
   13698:	eor	sl, sl, r5, lsr #3
   1369c:	eor	fp, fp, r3, ror #17
   136a0:	add	r8, r8, r7
   136a4:	add	r1, r1, r7
   136a8:	eor	fp, fp, r3, lsr #10
   136ac:	add	sl, sl, r2
   136b0:	ldr	r7, [pc, #2072]	; 13ed0 <dcngettext@plt+0x2ea8>
   136b4:	add	sl, sl, fp
   136b8:	eor	r2, ip, lr
   136bc:	add	r7, sl, r7
   136c0:	and	r2, r2, r1
   136c4:	add	r6, r7, r6
   136c8:	eor	r2, r2, ip
   136cc:	ldr	r3, [sp, #20]
   136d0:	add	r2, r2, r6
   136d4:	ldr	r6, [sp, #48]	; 0x30
   136d8:	ldr	r7, [sp, #24]
   136dc:	ror	fp, r1, #11
   136e0:	add	r6, r5, r6
   136e4:	str	sl, [sp, #8]
   136e8:	ldr	r5, [sp, #64]	; 0x40
   136ec:	orr	sl, r3, r8
   136f0:	eor	fp, fp, r1, ror #6
   136f4:	and	sl, sl, r7
   136f8:	eor	fp, fp, r1, ror #25
   136fc:	ror	r7, r8, #13
   13700:	add	r2, r2, fp
   13704:	eor	r7, r7, r8, ror #2
   13708:	and	fp, r3, r8
   1370c:	orr	fp, sl, fp
   13710:	mov	r3, r0
   13714:	eor	r7, r7, r8, ror #22
   13718:	ror	sl, r5, #18
   1371c:	eor	sl, sl, r5, ror #7
   13720:	add	r7, r7, fp
   13724:	ror	fp, r0, #19
   13728:	eor	sl, sl, r5, lsr #3
   1372c:	eor	fp, fp, r3, ror #17
   13730:	add	sl, sl, r6
   13734:	eor	fp, fp, r3, lsr #10
   13738:	ldr	r6, [pc, #1940]	; 13ed4 <dcngettext@plt+0x2eac>
   1373c:	add	r9, r9, r2
   13740:	add	fp, sl, fp
   13744:	mov	r0, r5
   13748:	str	r3, [sp, #64]	; 0x40
   1374c:	add	r7, r7, r2
   13750:	mov	r5, fp
   13754:	eor	r2, lr, r1
   13758:	add	r6, fp, r6
   1375c:	mov	fp, r0
   13760:	ldr	r0, [sp, #40]	; 0x28
   13764:	and	r2, r2, r9
   13768:	ror	sl, r9, #11
   1376c:	ldr	r3, [sp, #20]
   13770:	add	ip, r6, ip
   13774:	add	fp, fp, r0
   13778:	eor	r2, r2, lr
   1377c:	ldr	r0, [sp, #68]	; 0x44
   13780:	eor	sl, sl, r9, ror #6
   13784:	orr	r6, r8, r7
   13788:	eor	sl, sl, r9, ror #25
   1378c:	add	r2, r2, ip
   13790:	add	r2, r2, sl
   13794:	and	r6, r6, r3
   13798:	and	sl, r8, r7
   1379c:	ldr	r3, [sp, #8]
   137a0:	orr	sl, r6, sl
   137a4:	ror	ip, r7, #13
   137a8:	ror	r6, r0, #18
   137ac:	eor	ip, ip, r7, ror #2
   137b0:	eor	r6, r6, r0, ror #7
   137b4:	eor	ip, ip, r7, ror #22
   137b8:	eor	r6, r6, r0, lsr #3
   137bc:	add	r6, r6, fp
   137c0:	add	ip, ip, sl
   137c4:	ldr	fp, [sp, #8]
   137c8:	ror	sl, r3, #19
   137cc:	eor	sl, sl, r3, ror #17
   137d0:	ldr	r3, [sp, #24]
   137d4:	eor	sl, sl, fp, lsr #10
   137d8:	add	r3, r3, r2
   137dc:	ldr	fp, [pc, #1780]	; 13ed8 <dcngettext@plt+0x2eb0>
   137e0:	add	ip, ip, r2
   137e4:	add	sl, r6, sl
   137e8:	eor	r2, r1, r9
   137ec:	str	sl, [sp, #24]
   137f0:	add	fp, sl, fp
   137f4:	and	r2, r2, r3
   137f8:	ror	sl, r3, #11
   137fc:	add	lr, fp, lr
   13800:	eor	r2, r2, r1
   13804:	add	fp, r0, r4
   13808:	eor	sl, sl, r3, ror #6
   1380c:	ldr	r0, [sp, #28]
   13810:	orr	r6, r7, ip
   13814:	eor	sl, sl, r3, ror #25
   13818:	add	r2, r2, lr
   1381c:	ror	lr, ip, #13
   13820:	add	r2, r2, sl
   13824:	and	r6, r6, r8
   13828:	and	sl, r7, ip
   1382c:	eor	lr, lr, ip, ror #2
   13830:	orr	sl, r6, sl
   13834:	eor	lr, lr, ip, ror #22
   13838:	ror	r6, r0, #18
   1383c:	eor	r6, r6, r0, ror #7
   13840:	add	lr, lr, sl
   13844:	ror	sl, r5, #19
   13848:	eor	r6, r6, r0, lsr #3
   1384c:	eor	sl, sl, r5, ror #17
   13850:	ldr	r0, [sp, #20]
   13854:	add	fp, r6, fp
   13858:	eor	sl, sl, r5, lsr #10
   1385c:	add	r0, r0, r2
   13860:	add	lr, lr, r2
   13864:	ldr	r6, [pc, #1648]	; 13edc <dcngettext@plt+0x2eb4>
   13868:	add	r2, fp, sl
   1386c:	mov	r4, r2
   13870:	eor	r2, r9, r3
   13874:	add	r6, r4, r6
   13878:	and	r2, r2, r0
   1387c:	add	r1, r6, r1
   13880:	eor	r2, r2, r9
   13884:	str	lr, [sp, #20]
   13888:	add	r2, r2, r1
   1388c:	ror	r1, lr, #13
   13890:	orr	sl, ip, lr
   13894:	eor	r1, r1, lr, ror #2
   13898:	ldr	lr, [sp, #20]
   1389c:	ror	fp, r0, #11
   138a0:	eor	fp, fp, r0, ror #6
   138a4:	eor	r1, r1, lr, ror #22
   138a8:	ldr	lr, [sp, #20]
   138ac:	eor	fp, fp, r0, ror #25
   138b0:	str	r5, [sp, #84]	; 0x54
   138b4:	ldr	r5, [sp, #72]	; 0x48
   138b8:	add	r2, r2, fp
   138bc:	and	sl, sl, r7
   138c0:	and	fp, ip, lr
   138c4:	orr	sl, sl, fp
   138c8:	ldr	fp, [sp, #24]
   138cc:	ror	r6, r5, #18
   138d0:	ldr	lr, [sp, #28]
   138d4:	eor	r6, r6, r5, ror #7
   138d8:	add	r1, r1, sl
   138dc:	add	r1, r1, r2
   138e0:	add	r8, r8, r2
   138e4:	eor	r6, r6, r5, lsr #3
   138e8:	ldr	r2, [sp, #12]
   138ec:	ror	sl, fp, #19
   138f0:	eor	sl, sl, fp, ror #17
   138f4:	add	r6, r6, lr
   138f8:	eor	sl, sl, fp, lsr #10
   138fc:	add	r6, r6, r2
   13900:	add	r6, sl, r6
   13904:	ldr	r2, [pc, #1492]	; 13ee0 <dcngettext@plt+0x2eb8>
   13908:	mov	sl, r6
   1390c:	eor	r6, r3, r0
   13910:	add	r2, sl, r2
   13914:	and	r6, r6, r8
   13918:	ror	fp, r8, #11
   1391c:	add	r9, r2, r9
   13920:	ldr	lr, [sp, #20]
   13924:	eor	r6, r6, r3
   13928:	eor	fp, fp, r8, ror #6
   1392c:	eor	fp, fp, r8, ror #25
   13930:	add	r6, r6, r9
   13934:	add	r6, r6, fp
   13938:	str	sl, [sp, #28]
   1393c:	ldr	fp, [sp, #20]
   13940:	orr	sl, lr, r1
   13944:	ldr	lr, [sp, #52]	; 0x34
   13948:	ror	r2, r1, #13
   1394c:	and	fp, fp, r1
   13950:	and	sl, sl, ip
   13954:	eor	r2, r2, r1, ror #2
   13958:	orr	sl, sl, fp
   1395c:	ror	r9, lr, #18
   13960:	eor	r2, r2, r1, ror #22
   13964:	eor	r9, r9, lr, ror #7
   13968:	add	r2, r2, sl
   1396c:	add	r2, r2, r6
   13970:	add	r7, r7, r6
   13974:	eor	r9, r9, lr, lsr #3
   13978:	ldr	r6, [sp, #16]
   1397c:	ror	sl, r4, #19
   13980:	eor	sl, sl, r4, ror #17
   13984:	add	r9, r9, r5
   13988:	eor	sl, sl, r4, lsr #10
   1398c:	add	r9, r9, r6
   13990:	add	r9, sl, r9
   13994:	ldr	r6, [pc, #1352]	; 13ee4 <dcngettext@plt+0x2ebc>
   13998:	mov	sl, r9
   1399c:	eor	r9, r0, r8
   139a0:	add	r6, sl, r6
   139a4:	ldr	r5, [sp, #20]
   139a8:	str	r4, [sp, #52]	; 0x34
   139ac:	and	r9, r9, r7
   139b0:	ldr	r4, [sp, #60]	; 0x3c
   139b4:	ror	fp, r7, #11
   139b8:	add	r3, r6, r3
   139bc:	eor	r9, r9, r0
   139c0:	orr	r6, r1, r2
   139c4:	eor	fp, fp, r7, ror #6
   139c8:	eor	fp, fp, r7, ror #25
   139cc:	and	r6, r6, r5
   139d0:	add	r9, r9, r3
   139d4:	ldr	r5, [sp, #28]
   139d8:	ror	r3, r2, #13
   139dc:	add	r9, r9, fp
   139e0:	str	sl, [sp, #56]	; 0x38
   139e4:	and	fp, r1, r2
   139e8:	eor	r3, r3, r2, ror #2
   139ec:	ror	sl, r4, #18
   139f0:	orr	r6, r6, fp
   139f4:	eor	sl, sl, r4, ror #7
   139f8:	eor	r3, r3, r2, ror #22
   139fc:	eor	sl, sl, r4, lsr #3
   13a00:	add	r3, r3, r6
   13a04:	ror	fp, r5, #19
   13a08:	add	r6, ip, r9
   13a0c:	ldr	ip, [sp, #64]	; 0x40
   13a10:	eor	fp, fp, r5, ror #17
   13a14:	add	sl, sl, lr
   13a18:	eor	fp, fp, r5, lsr #10
   13a1c:	add	sl, sl, ip
   13a20:	add	r3, r3, r9
   13a24:	add	ip, fp, sl
   13a28:	ldr	r9, [pc, #1208]	; 13ee8 <dcngettext@plt+0x2ec0>
   13a2c:	mov	r5, ip
   13a30:	eor	ip, r8, r7
   13a34:	add	r9, r5, r9
   13a38:	and	ip, ip, r6
   13a3c:	ror	fp, r6, #11
   13a40:	eor	ip, ip, r8
   13a44:	add	r0, r9, r0
   13a48:	eor	fp, fp, r6, ror #6
   13a4c:	ldr	lr, [sp, #32]
   13a50:	orr	sl, r2, r3
   13a54:	eor	fp, fp, r6, ror #25
   13a58:	add	r0, ip, r0
   13a5c:	add	r0, r0, fp
   13a60:	and	sl, sl, r1
   13a64:	and	fp, r2, r3
   13a68:	orr	sl, sl, fp
   13a6c:	ror	ip, r3, #13
   13a70:	ldr	fp, [sp, #56]	; 0x38
   13a74:	eor	ip, ip, r3, ror #2
   13a78:	ror	r9, lr, #18
   13a7c:	eor	r9, r9, lr, ror #7
   13a80:	eor	ip, ip, r3, ror #22
   13a84:	eor	r9, r9, lr, lsr #3
   13a88:	add	ip, ip, sl
   13a8c:	ldr	lr, [sp, #20]
   13a90:	ror	sl, fp, #19
   13a94:	eor	sl, sl, fp, ror #17
   13a98:	add	ip, ip, r0
   13a9c:	add	lr, lr, r0
   13aa0:	eor	r0, sl, fp, lsr #10
   13aa4:	ldr	fp, [sp, #8]
   13aa8:	add	r9, r9, r4
   13aac:	add	r9, r9, fp
   13ab0:	ldr	sl, [pc, #1076]	; 13eec <dcngettext@plt+0x2ec4>
   13ab4:	add	r0, r0, r9
   13ab8:	eor	r9, r7, r6
   13abc:	str	r0, [sp, #20]
   13ac0:	add	sl, r0, sl
   13ac4:	and	r9, r9, lr
   13ac8:	ror	r0, lr, #11
   13acc:	ldr	r4, [sp, #36]	; 0x24
   13ad0:	add	sl, sl, r8
   13ad4:	eor	r9, r9, r7
   13ad8:	eor	r8, r0, lr, ror #6
   13adc:	orr	fp, r3, ip
   13ae0:	eor	r8, r8, lr, ror #25
   13ae4:	add	r9, r9, sl
   13ae8:	ror	r0, ip, #13
   13aec:	add	r9, r9, r8
   13af0:	and	fp, fp, r2
   13af4:	and	r8, r3, ip
   13af8:	eor	r0, r0, ip, ror #2
   13afc:	orr	fp, fp, r8
   13b00:	ror	sl, r4, #18
   13b04:	eor	r0, r0, ip, ror #22
   13b08:	eor	sl, sl, r4, ror #7
   13b0c:	add	r0, r0, fp
   13b10:	ror	fp, r5, #19
   13b14:	eor	sl, sl, r4, lsr #3
   13b18:	eor	fp, fp, r5, ror #17
   13b1c:	ldr	r4, [sp, #32]
   13b20:	str	r5, [sp, #60]	; 0x3c
   13b24:	eor	fp, fp, r5, lsr #10
   13b28:	ldr	r5, [sp, #84]	; 0x54
   13b2c:	add	sl, sl, r4
   13b30:	add	r8, r1, r9
   13b34:	add	r1, sl, r5
   13b38:	ldr	sl, [pc, #944]	; 13ef0 <dcngettext@plt+0x2ec8>
   13b3c:	add	r0, r0, r9
   13b40:	ldr	r4, [sp, #48]	; 0x30
   13b44:	add	r1, fp, r1
   13b48:	eor	r9, r6, lr
   13b4c:	str	r1, [sp, #32]
   13b50:	add	sl, r1, sl
   13b54:	and	r9, r9, r8
   13b58:	ror	r1, r8, #11
   13b5c:	add	sl, sl, r7
   13b60:	eor	r9, r9, r6
   13b64:	eor	r7, r1, r8, ror #6
   13b68:	ldr	r5, [sp, #20]
   13b6c:	orr	fp, ip, r0
   13b70:	eor	r7, r7, r8, ror #25
   13b74:	add	r9, r9, sl
   13b78:	ror	r1, r0, #13
   13b7c:	ror	sl, r4, #18
   13b80:	add	r9, r9, r7
   13b84:	and	fp, fp, r3
   13b88:	and	r7, ip, r0
   13b8c:	eor	r1, r1, r0, ror #2
   13b90:	eor	sl, sl, r4, ror #7
   13b94:	orr	fp, fp, r7
   13b98:	eor	r1, r1, r0, ror #22
   13b9c:	eor	sl, sl, r4, lsr #3
   13ba0:	ldr	r4, [sp, #36]	; 0x24
   13ba4:	add	r7, r2, r9
   13ba8:	add	r1, r1, fp
   13bac:	ldr	r2, [sp, #24]
   13bb0:	ror	fp, r5, #19
   13bb4:	eor	fp, fp, r5, ror #17
   13bb8:	add	sl, sl, r4
   13bbc:	eor	fp, fp, r5, lsr #10
   13bc0:	add	sl, sl, r2
   13bc4:	add	r1, r1, r9
   13bc8:	add	r2, fp, sl
   13bcc:	ldr	r9, [pc, #800]	; 13ef4 <dcngettext@plt+0x2ecc>
   13bd0:	ldr	r4, [sp, #40]	; 0x28
   13bd4:	mov	sl, r2
   13bd8:	eor	r2, lr, r8
   13bdc:	add	r9, sl, r9
   13be0:	and	r2, r2, r7
   13be4:	ror	fp, r7, #11
   13be8:	eor	r2, r2, lr
   13bec:	add	r6, r9, r6
   13bf0:	eor	fp, fp, r7, ror #6
   13bf4:	ldr	r5, [sp, #32]
   13bf8:	str	sl, [sp, #36]	; 0x24
   13bfc:	eor	fp, fp, r7, ror #25
   13c00:	orr	sl, r0, r1
   13c04:	add	r6, r2, r6
   13c08:	ror	r9, r4, #18
   13c0c:	ror	r2, r1, #13
   13c10:	add	r6, r6, fp
   13c14:	and	sl, sl, ip
   13c18:	and	fp, r0, r1
   13c1c:	eor	r2, r2, r1, ror #2
   13c20:	eor	r9, r9, r4, ror #7
   13c24:	orr	sl, sl, fp
   13c28:	eor	r2, r2, r1, ror #22
   13c2c:	eor	r9, r9, r4, lsr #3
   13c30:	ldr	r4, [sp, #48]	; 0x30
   13c34:	add	r2, r2, sl
   13c38:	ror	fp, r5, #19
   13c3c:	add	sl, r3, r6
   13c40:	ldr	r3, [sp, #52]	; 0x34
   13c44:	eor	fp, fp, r5, ror #17
   13c48:	add	r9, r9, r4
   13c4c:	eor	fp, fp, r5, lsr #10
   13c50:	add	r9, r9, r3
   13c54:	add	r2, r2, r6
   13c58:	ldr	r3, [pc, #664]	; 13ef8 <dcngettext@plt+0x2ed0>
   13c5c:	add	r6, fp, r9
   13c60:	mov	r4, r6
   13c64:	eor	r6, r8, r7
   13c68:	ldr	r5, [sp, #44]	; 0x2c
   13c6c:	add	r3, r4, r3
   13c70:	and	r6, r6, sl
   13c74:	ror	fp, sl, #11
   13c78:	eor	r6, r6, r8
   13c7c:	add	lr, r3, lr
   13c80:	eor	fp, fp, sl, ror #6
   13c84:	orr	r3, r1, r2
   13c88:	eor	fp, fp, sl, ror #25
   13c8c:	add	lr, r6, lr
   13c90:	add	lr, lr, fp
   13c94:	and	r3, r3, r0
   13c98:	and	fp, r1, r2
   13c9c:	ror	r6, r5, #18
   13ca0:	orr	r3, r3, fp
   13ca4:	ror	r9, r2, #13
   13ca8:	ldr	fp, [sp, #36]	; 0x24
   13cac:	eor	r6, r6, r5, ror #7
   13cb0:	eor	r6, r6, r5, lsr #3
   13cb4:	eor	r9, r9, r2, ror #2
   13cb8:	ldr	r5, [sp, #40]	; 0x28
   13cbc:	eor	r9, r9, r2, ror #22
   13cc0:	add	r9, r9, r3
   13cc4:	add	r5, r6, r5
   13cc8:	ror	r3, fp, #19
   13ccc:	ldr	r6, [sp, #28]
   13cd0:	eor	r3, r3, fp, ror #17
   13cd4:	add	r5, r5, r6
   13cd8:	eor	r3, r3, fp, lsr #10
   13cdc:	ldr	fp, [pc, #536]	; 13efc <dcngettext@plt+0x2ed4>
   13ce0:	add	ip, ip, lr
   13ce4:	add	r3, r3, r5
   13ce8:	add	fp, r3, fp
   13cec:	eor	r5, r7, sl
   13cf0:	add	lr, r9, lr
   13cf4:	and	r5, r5, ip
   13cf8:	ror	r9, ip, #11
   13cfc:	add	r8, fp, r8
   13d00:	ldr	fp, [sp, #12]
   13d04:	eor	r5, r5, r7
   13d08:	eor	r9, r9, ip, ror #6
   13d0c:	str	r3, [sp, #72]	; 0x48
   13d10:	eor	r9, r9, ip, ror #25
   13d14:	orr	r3, r2, lr
   13d18:	add	r8, r5, r8
   13d1c:	ror	r6, lr, #13
   13d20:	add	r8, r8, r9
   13d24:	and	r3, r3, r1
   13d28:	and	r9, r2, lr
   13d2c:	eor	r6, r6, lr, ror #2
   13d30:	ror	r5, fp, #18
   13d34:	orr	r3, r3, r9
   13d38:	eor	r5, r5, fp, ror #7
   13d3c:	eor	r6, r6, lr, ror #22
   13d40:	eor	r5, r5, fp, lsr #3
   13d44:	add	r6, r6, r3
   13d48:	ror	fp, r4, #19
   13d4c:	mov	r3, r4
   13d50:	eor	fp, fp, r4, ror #17
   13d54:	ldr	r4, [sp, #44]	; 0x2c
   13d58:	eor	fp, fp, r3, lsr #10
   13d5c:	str	r3, [sp, #68]	; 0x44
   13d60:	ldr	r3, [sp, #56]	; 0x38
   13d64:	add	r4, r5, r4
   13d68:	add	r4, r4, r3
   13d6c:	add	r0, r0, r8
   13d70:	add	r4, fp, r4
   13d74:	ldr	r3, [pc, #388]	; 13f00 <dcngettext@plt+0x2ed8>
   13d78:	mov	r9, r4
   13d7c:	eor	r4, sl, ip
   13d80:	add	r8, r6, r8
   13d84:	add	r3, r9, r3
   13d88:	and	r4, r4, r0
   13d8c:	ror	r6, r0, #11
   13d90:	eor	r4, r4, sl
   13d94:	add	r7, r3, r7
   13d98:	eor	r6, r6, r0, ror #6
   13d9c:	str	r9, [sp, #40]	; 0x28
   13da0:	orr	r3, lr, r8
   13da4:	ldr	r9, [sp, #16]
   13da8:	eor	r6, r6, r0, ror #25
   13dac:	add	r7, r4, r7
   13db0:	add	r7, r7, r6
   13db4:	and	r3, r3, r2
   13db8:	and	r6, lr, r8
   13dbc:	orr	r3, r3, r6
   13dc0:	ldr	r6, [sp, #72]	; 0x48
   13dc4:	ror	r4, r9, #18
   13dc8:	eor	r4, r4, r9, ror #7
   13dcc:	eor	r4, r4, r9, lsr #3
   13dd0:	ror	r9, r6, #19
   13dd4:	ldr	fp, [sp, #12]
   13dd8:	ror	r5, r8, #13
   13ddc:	eor	r9, r9, r6, ror #17
   13de0:	eor	r9, r9, r6, lsr #10
   13de4:	eor	r5, r5, r8, ror #2
   13de8:	ldr	r6, [sp, #60]	; 0x3c
   13dec:	eor	r5, r5, r8, ror #22
   13df0:	add	r4, r4, fp
   13df4:	add	r1, r1, r7
   13df8:	add	r5, r5, r3
   13dfc:	add	r4, r4, r6
   13e00:	ldr	r3, [pc, #252]	; 13f04 <dcngettext@plt+0x2edc>
   13e04:	add	r7, r5, r7
   13e08:	add	r4, r9, r4
   13e0c:	eor	r5, ip, r0
   13e10:	and	r5, r5, r1
   13e14:	add	r3, r4, r3
   13e18:	ror	r9, r1, #11
   13e1c:	add	r3, r3, sl
   13e20:	eor	r9, r9, r1, ror #6
   13e24:	eor	sl, r5, ip
   13e28:	eor	r9, r9, r1, ror #25
   13e2c:	str	r4, [sp, #76]	; 0x4c
   13e30:	add	r3, sl, r3
   13e34:	orr	r4, r8, r7
   13e38:	ror	r6, r7, #13
   13e3c:	add	r3, r3, r9
   13e40:	and	r4, r4, lr
   13e44:	and	r9, r8, r7
   13e48:	eor	r6, r6, r7, ror #2
   13e4c:	orr	r4, r4, r9
   13e50:	eor	r6, r6, r7, ror #22
   13e54:	ldr	fp, [sp, #64]	; 0x40
   13e58:	add	r6, r6, r4
   13e5c:	ldr	r4, [sp, #40]	; 0x28
   13e60:	ror	r5, fp, #18
   13e64:	ldr	r9, [sp, #16]
   13e68:	ror	sl, r4, #19
   13e6c:	eor	r5, r5, fp, ror #7
   13e70:	eor	sl, sl, r4, ror #17
   13e74:	eor	r5, r5, fp, lsr #3
   13e78:	eor	sl, sl, r4, lsr #10
   13e7c:	ldr	r4, [sp, #20]
   13e80:	add	r5, r5, r9
   13e84:	add	r2, r2, r3
   13e88:	ldr	r9, [sp, #8]
   13e8c:	add	r5, r5, r4
   13e90:	b	13f7c <dcngettext@plt+0x2f54>
   13e94:	addmi	r2, sl, #152, 30	; 0x260
   13e98:	strblt	pc, [r0, #3023]	; 0xbcf	; <UNPREDICTABLE>
   13e9c:	ldmdbcc	r6, {r0, r1, r3, r4, r6, r9, lr, pc}^
   13ea0:	ldmibpl	r1!, {r0, r4, r5, r6, r7, r8, ip}^
   13ea4:	eorsls	r8, pc, #164, 4	; 0x4000000a
   13ea8:	stmdale	r7, {r3, r4, r7, r9, fp, sp, pc}
   13eac:	addne	r5, r3, #1024	; 0x400
   13eb0:	ldrtcs	r8, [r1], #-1470	; 0xfffffa42
   13eb4:	strpl	r7, [ip, #-3523]	; 0xfffff23d
   13eb8:	ldrshhi	fp, [lr], #30
   13ebc:	blls	ff715960 <stdout@@GLIBC_2.4+0xff6e87f4>
   13ec0:	orrsgt	pc, fp, r4, ror r1	; <UNPREDICTABLE>
   13ec4:	ldr	r6, [fp], #2497	; 0x9c1
   13ec8:	svc	0x00be4786
   13ecc:	svceq	0x00c19dc6
   13ed0:	strcs	sl, [ip], #-460	; 0xfffffe34
   13ed4:	stclcs	12, cr2, [r9, #444]!	; 0x1bc
   13ed8:	bmi	1d35188 <stdout@@GLIBC_2.4+0x1d0801c>
   13edc:			; <UNDEFINED> instruction: 0x5cb0a9dc
   13ee0:	usatvc	r8, #25, sl, asr #17
   13ee4:	ldmdals	lr!, {r1, r4, r6, r8, ip, lr}
   13ee8:	ldmdage	r1!, {r0, r2, r3, r5, r6, r9, sl, lr, pc}
   13eec:	andlt	r2, r3, r8, asr #15
   13ef0:	svclt	0x00597fc7
   13ef4:			; <UNDEFINED> instruction: 0xc6e00bf3
   13ef8:	strle	r9, [r7, #327]!	; 0x147
   13efc:			; <UNDEFINED> instruction: 0x06ca6351
   13f00:	strtne	r2, [r9], #-2407	; 0xfffff699
   13f04:	ldrcs	r0, [r7, r5, lsl #21]!
   13f08:	mrccs	1, 0, r2, cr11, cr8, {1}
   13f0c:	stcmi	13, cr6, [ip, #-1008]!	; 0xfffffc10
   13f10:	teqpl	r8, #1216	; 0x4c0
   13f14:	strvs	r7, [sl, #-852]	; 0xfffffcac
   13f18:			; <UNDEFINED> instruction: 0x766a0abb
   13f1c:	bichi	ip, r2, lr, lsr #18
   13f20:	rsbsls	r2, r2, #34048	; 0x8500
   13f24:	adcsge	lr, pc, #10551296	; 0xa10000
   13f28:	ldmdage	sl, {r0, r1, r3, r6, r9, sl, sp, lr}
   13f2c:	subgt	r8, fp, #112, 22	; 0x1c000
   13f30:	strbgt	r5, [ip, -r3, lsr #3]!
   13f34:	orrsle	lr, r2, r9, lsl r8
   13f38:	ldrle	r0, [r9], r4, lsr #12
   13f3c:	vst3.32	{d3,d5,d7}, [lr], r5
   13f40:	rsbne	sl, sl, r0, ror r0
   13f44:	stmibne	r4!, {r1, r2, r4, r8, lr, pc}
   13f48:	cdpne	12, 3, cr6, cr7, cr8, {0}
   13f4c:	strbcs	r7, [r8, -ip, asr #14]
   13f50:	ldrtcc	fp, [r0], #3253	; 0xcb5
   13f54:	ldmdbcc	ip, {r0, r1, r4, r5, r7, sl, fp}
   13f58:	vfnmami.f32	s21, s16, s20
   13f5c:	blpl	fe7468a0 <stdout@@GLIBC_2.4+0xfe719734>
   13f60:	stmdavs	lr!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
   13f64:	strvc	r8, [pc], #750	; 13f6c <dcngettext@plt+0x2f44>
   13f68:	stmiavc	r5!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
   13f6c:	strbhi	r7, [r8], #2068	; 0x814
   13f70:	sfmhi	f0, 2, [r7], {8}
   13f74:	ldrshtls	pc, [lr], sl	; <UNPREDICTABLE>
   13f78:	ldrbge	r6, [r0], #-3307	; 0xfffff315
   13f7c:	ldr	r4, [pc, #-124]	; 13f08 <dcngettext@plt+0x2ee0>
   13f80:	add	sl, sl, r5
   13f84:	eor	r5, r0, r1
   13f88:	add	r3, r6, r3
   13f8c:	add	r4, sl, r4
   13f90:	and	r5, r5, r2
   13f94:	ror	r6, r2, #11
   13f98:	str	sl, [sp, #80]	; 0x50
   13f9c:	eor	r5, r5, r0
   13fa0:	add	ip, r4, ip
   13fa4:	eor	r6, r6, r2, ror #6
   13fa8:	ror	sl, r9, #18
   13fac:	orr	r4, r7, r3
   13fb0:	eor	r6, r6, r2, ror #25
   13fb4:	add	ip, r5, ip
   13fb8:	eor	sl, sl, r9, ror #7
   13fbc:	ror	r5, r3, #13
   13fc0:	add	ip, ip, r6
   13fc4:	and	r4, r4, r8
   13fc8:	and	r6, r7, r3
   13fcc:	eor	r5, r5, r3, ror #2
   13fd0:	eor	sl, sl, r9, lsr #3
   13fd4:	ldr	r9, [sp, #76]	; 0x4c
   13fd8:	orr	r4, r4, r6
   13fdc:	eor	r5, r5, r3, ror #22
   13fe0:	add	r5, r5, r4
   13fe4:	add	lr, lr, ip
   13fe8:	ror	r4, r9, #19
   13fec:	add	ip, r5, ip
   13ff0:	ldr	r5, [sp, #32]
   13ff4:	eor	r4, r4, r9, ror #17
   13ff8:	add	sl, sl, fp
   13ffc:	add	sl, sl, r5
   14000:	eor	r4, r4, r9, lsr #10
   14004:	ldr	r9, [pc, #-256]	; 13f0c <dcngettext@plt+0x2ee4>
   14008:	add	r4, r4, sl
   1400c:	eor	r5, r1, r2
   14010:	add	r9, r4, r9
   14014:	and	r5, r5, lr
   14018:	ror	r6, lr, #11
   1401c:	ldr	sl, [sp, #84]	; 0x54
   14020:	eor	r5, r5, r1
   14024:	add	r0, r9, r0
   14028:	eor	r6, r6, lr, ror #6
   1402c:	str	r4, [sp, #44]	; 0x2c
   14030:	eor	r6, r6, lr, ror #25
   14034:	orr	r4, r3, ip
   14038:	add	r0, r5, r0
   1403c:	add	r0, r0, r6
   14040:	and	r4, r4, r7
   14044:	and	r6, r3, ip
   14048:	orr	r4, r4, r6
   1404c:	ror	r5, ip, #13
   14050:	ldr	r6, [sp, #80]	; 0x50
   14054:	ror	fp, sl, #18
   14058:	ldr	r9, [sp, #8]
   1405c:	eor	r5, r5, ip, ror #2
   14060:	eor	fp, fp, sl, ror #7
   14064:	eor	r5, r5, ip, ror #22
   14068:	eor	fp, fp, sl, lsr #3
   1406c:	add	r5, r5, r4
   14070:	add	fp, fp, r9
   14074:	ror	r4, r6, #19
   14078:	ldr	r9, [sp, #36]	; 0x24
   1407c:	eor	r4, r4, r6, ror #17
   14080:	add	r8, r8, r0
   14084:	eor	r4, r4, r6, lsr #10
   14088:	add	fp, fp, r9
   1408c:	ldr	r9, [pc, #-388]	; 13f10 <dcngettext@plt+0x2ee8>
   14090:	add	r0, r5, r0
   14094:	add	fp, r4, fp
   14098:	eor	r5, r2, lr
   1409c:	add	r9, fp, r9
   140a0:	and	r5, r5, r8
   140a4:	ror	r6, r8, #11
   140a8:	eor	r5, r5, r2
   140ac:	add	r1, r9, r1
   140b0:	eor	r6, r6, r8, ror #6
   140b4:	orr	r4, ip, r0
   140b8:	eor	r6, r6, r8, ror #25
   140bc:	add	r1, r5, r1
   140c0:	ror	r5, r0, #13
   140c4:	ldr	r9, [sp, #24]
   140c8:	add	r1, r1, r6
   140cc:	and	r4, r4, r3
   140d0:	and	r6, ip, r0
   140d4:	eor	r5, r5, r0, ror #2
   140d8:	eor	r5, r5, r0, ror #22
   140dc:	orr	r4, r4, r6
   140e0:	add	r4, r5, r4
   140e4:	ldr	r5, [sp, #44]	; 0x2c
   140e8:	str	fp, [sp, #48]	; 0x30
   140ec:	ror	fp, r9, #18
   140f0:	eor	fp, fp, r9, ror #7
   140f4:	add	r7, r7, r1
   140f8:	eor	fp, fp, r9, lsr #3
   140fc:	add	r1, r4, r1
   14100:	ror	r9, r5, #19
   14104:	ldr	r4, [sp, #68]	; 0x44
   14108:	eor	r9, r9, r5, ror #17
   1410c:	add	fp, fp, sl
   14110:	eor	r9, r9, r5, lsr #10
   14114:	add	fp, fp, r4
   14118:	ldr	r4, [pc, #-524]	; 13f14 <dcngettext@plt+0x2eec>
   1411c:	add	sl, r9, fp
   14120:	eor	r5, lr, r8
   14124:	add	r4, sl, r4
   14128:	and	r5, r5, r7
   1412c:	ror	r6, r7, #11
   14130:	eor	r5, r5, lr
   14134:	add	r2, r4, r2
   14138:	eor	r6, r6, r7, ror #6
   1413c:	orr	r4, r0, r1
   14140:	eor	r6, r6, r7, ror #25
   14144:	add	r2, r5, r2
   14148:	ror	r5, r1, #13
   1414c:	ldr	fp, [sp, #52]	; 0x34
   14150:	add	r2, r2, r6
   14154:	and	r4, r4, ip
   14158:	and	r6, r0, r1
   1415c:	eor	r5, r5, r1, ror #2
   14160:	orr	r4, r4, r6
   14164:	eor	r5, r5, r1, ror #22
   14168:	add	r5, r5, r4
   1416c:	ldr	r4, [sp, #48]	; 0x30
   14170:	str	sl, [sp, #84]	; 0x54
   14174:	ror	sl, fp, #18
   14178:	ldr	r9, [sp, #24]
   1417c:	eor	sl, sl, fp, ror #7
   14180:	add	r3, r3, r2
   14184:	eor	sl, sl, fp, lsr #3
   14188:	add	r2, r5, r2
   1418c:	ror	fp, r4, #19
   14190:	ldr	r5, [sp, #72]	; 0x48
   14194:	eor	fp, fp, r4, ror #17
   14198:	add	sl, sl, r9
   1419c:	eor	fp, fp, r4, lsr #10
   141a0:	add	sl, sl, r5
   141a4:	ldr	r4, [pc, #-660]	; 13f18 <dcngettext@plt+0x2ef0>
   141a8:	add	r9, fp, sl
   141ac:	eor	r5, r8, r7
   141b0:	add	r4, r9, r4
   141b4:	and	r5, r5, r3
   141b8:	ror	r6, r3, #11
   141bc:	str	r9, [sp, #24]
   141c0:	eor	r5, r5, r8
   141c4:	ldr	r9, [sp, #28]
   141c8:	add	lr, r4, lr
   141cc:	eor	r6, r6, r3, ror #6
   141d0:	orr	r4, r1, r2
   141d4:	eor	r6, r6, r3, ror #25
   141d8:	add	lr, r5, lr
   141dc:	add	lr, lr, r6
   141e0:	and	r4, r4, r0
   141e4:	and	r6, r1, r2
   141e8:	ror	sl, r9, #18
   141ec:	orr	r4, r4, r6
   141f0:	ldr	r6, [sp, #84]	; 0x54
   141f4:	ldr	fp, [sp, #52]	; 0x34
   141f8:	ror	r5, r2, #13
   141fc:	eor	sl, sl, r9, ror #7
   14200:	eor	r5, r5, r2, ror #2
   14204:	eor	sl, sl, r9, lsr #3
   14208:	eor	r5, r5, r2, ror #22
   1420c:	ror	r9, r6, #19
   14210:	add	sl, sl, fp
   14214:	ldr	fp, [sp, #40]	; 0x28
   14218:	add	r4, r5, r4
   1421c:	eor	r9, r9, r6, ror #17
   14220:	add	ip, ip, lr
   14224:	eor	r9, r9, r6, lsr #10
   14228:	add	lr, r4, lr
   1422c:	add	sl, sl, fp
   14230:	ldr	r4, [pc, #-796]	; 13f1c <dcngettext@plt+0x2ef4>
   14234:	add	sl, r9, sl
   14238:	eor	r5, r7, r3
   1423c:	add	r4, sl, r4
   14240:	and	r5, r5, ip
   14244:	ror	r9, ip, #11
   14248:	eor	r5, r5, r7
   1424c:	add	r8, r4, r8
   14250:	eor	r9, r9, ip, ror #6
   14254:	orr	r4, r2, lr
   14258:	eor	r9, r9, ip, ror #25
   1425c:	add	r8, r5, r8
   14260:	ror	r5, lr, #13
   14264:	str	sl, [sp, #52]	; 0x34
   14268:	and	r4, r4, r1
   1426c:	ldr	sl, [sp, #56]	; 0x38
   14270:	add	r8, r8, r9
   14274:	eor	r5, r5, lr, ror #2
   14278:	and	r9, r2, lr
   1427c:	eor	r5, r5, lr, ror #22
   14280:	orr	r9, r4, r9
   14284:	add	r9, r5, r9
   14288:	ldr	r5, [sp, #24]
   1428c:	ror	r6, sl, #18
   14290:	ldr	r4, [sp, #28]
   14294:	eor	r6, r6, sl, ror #7
   14298:	add	r0, r0, r8
   1429c:	eor	r6, r6, sl, lsr #3
   142a0:	add	r8, r9, r8
   142a4:	ror	fp, r5, #19
   142a8:	ldr	r9, [sp, #76]	; 0x4c
   142ac:	eor	fp, fp, r5, ror #17
   142b0:	add	r6, r6, r4
   142b4:	eor	fp, fp, r5, lsr #10
   142b8:	add	r6, r6, r9
   142bc:	ldr	r4, [pc, #-932]	; 13f20 <dcngettext@plt+0x2ef8>
   142c0:	add	r9, fp, r6
   142c4:	eor	r5, r3, ip
   142c8:	add	r4, r9, r4
   142cc:	and	r5, r5, r0
   142d0:	ror	r6, r0, #11
   142d4:	eor	r5, r5, r3
   142d8:	add	r7, r4, r7
   142dc:	eor	r6, r6, r0, ror #6
   142e0:	ldr	fp, [sp, #60]	; 0x3c
   142e4:	orr	r4, lr, r8
   142e8:	eor	r6, r6, r0, ror #25
   142ec:	add	r7, r5, r7
   142f0:	ror	r5, r8, #13
   142f4:	add	r7, r7, r6
   142f8:	and	r4, r4, r2
   142fc:	and	r6, lr, r8
   14300:	eor	r5, r5, r8, ror #2
   14304:	orr	r4, r4, r6
   14308:	eor	r5, r5, r8, ror #22
   1430c:	add	r5, r5, r4
   14310:	str	r9, [sp, #28]
   14314:	ldr	r4, [sp, #52]	; 0x34
   14318:	ror	r9, fp, #18
   1431c:	eor	r9, r9, fp, ror #7
   14320:	eor	r9, r9, fp, lsr #3
   14324:	add	r9, r9, sl
   14328:	ror	fp, r4, #19
   1432c:	ldr	sl, [sp, #80]	; 0x50
   14330:	eor	fp, fp, r4, ror #17
   14334:	add	r1, r1, r7
   14338:	eor	fp, fp, r4, lsr #10
   1433c:	add	r9, r9, sl
   14340:	ldr	r6, [pc, #-1060]	; 13f24 <dcngettext@plt+0x2efc>
   14344:	add	sl, fp, r9
   14348:	eor	r4, ip, r0
   1434c:	add	r7, r5, r7
   14350:	add	r6, sl, r6
   14354:	and	r4, r4, r1
   14358:	ror	r5, r1, #11
   1435c:	eor	r4, r4, ip
   14360:	add	r3, r6, r3
   14364:	eor	r5, r5, r1, ror #6
   14368:	ldr	r6, [sp, #20]
   1436c:	orr	r9, r8, r7
   14370:	eor	r5, r5, r1, ror #25
   14374:	add	r3, r4, r3
   14378:	add	r3, r3, r5
   1437c:	and	r9, r9, lr
   14380:	and	r5, r8, r7
   14384:	ror	r4, r7, #13
   14388:	orr	r9, r9, r5
   1438c:	eor	r4, r4, r7, ror #2
   14390:	ldr	r5, [sp, #28]
   14394:	str	sl, [sp, #56]	; 0x38
   14398:	eor	r4, r4, r7, ror #22
   1439c:	ror	sl, r6, #18
   143a0:	ldr	fp, [sp, #60]	; 0x3c
   143a4:	add	r4, r4, r9
   143a8:	eor	sl, sl, r6, ror #7
   143ac:	add	r2, r2, r3
   143b0:	eor	sl, sl, r6, lsr #3
   143b4:	add	r3, r4, r3
   143b8:	ror	r9, r5, #19
   143bc:	ldr	r4, [sp, #44]	; 0x2c
   143c0:	eor	r9, r9, r5, ror #17
   143c4:	add	sl, sl, fp
   143c8:	add	sl, sl, r4
   143cc:	eor	r9, r9, r5, lsr #10
   143d0:	ldr	r6, [pc, #-1200]	; 13f28 <dcngettext@plt+0x2f00>
   143d4:	add	r9, r9, sl
   143d8:	eor	r4, r0, r1
   143dc:	add	r6, r9, r6
   143e0:	and	r4, r4, r2
   143e4:	ror	r5, r2, #11
   143e8:	eor	r4, r4, r0
   143ec:	add	ip, r6, ip
   143f0:	eor	r5, r5, r2, ror #6
   143f4:	ldr	fp, [sp, #32]
   143f8:	orr	sl, r7, r3
   143fc:	eor	r5, r5, r2, ror #25
   14400:	add	ip, r4, ip
   14404:	and	sl, sl, r8
   14408:	add	ip, ip, r5
   1440c:	and	r5, r7, r3
   14410:	orr	r5, sl, r5
   14414:	ldr	sl, [sp, #56]	; 0x38
   14418:	str	r9, [sp, #60]	; 0x3c
   1441c:	ror	r9, fp, #18
   14420:	eor	r9, r9, fp, ror #7
   14424:	ror	r4, r3, #13
   14428:	eor	r9, r9, fp, lsr #3
   1442c:	ror	fp, sl, #19
   14430:	ldr	r6, [sp, #20]
   14434:	eor	r4, r4, r3, ror #2
   14438:	eor	fp, fp, sl, ror #17
   1443c:	eor	r4, r4, r3, ror #22
   14440:	eor	fp, fp, sl, lsr #10
   14444:	ldr	sl, [sp, #48]	; 0x30
   14448:	add	r5, r4, r5
   1444c:	add	r9, r9, r6
   14450:	add	lr, lr, ip
   14454:	add	r9, r9, sl
   14458:	add	ip, r5, ip
   1445c:	ldr	r5, [pc, #-1336]	; 13f2c <dcngettext@plt+0x2f04>
   14460:	add	r6, fp, r9
   14464:	eor	r4, r1, r2
   14468:	str	r6, [sp, #64]	; 0x40
   1446c:	add	r5, r6, r5
   14470:	and	r4, r4, lr
   14474:	ror	r6, lr, #11
   14478:	eor	r4, r4, r1
   1447c:	add	r0, r5, r0
   14480:	eor	r6, r6, lr, ror #6
   14484:	orr	r9, r3, ip
   14488:	eor	r6, r6, lr, ror #25
   1448c:	add	r0, r4, r0
   14490:	ror	r5, ip, #13
   14494:	ldr	sl, [sp, #36]	; 0x24
   14498:	add	r0, r0, r6
   1449c:	and	r9, r9, r7
   144a0:	and	r6, r3, ip
   144a4:	eor	r5, r5, ip, ror #2
   144a8:	orr	r9, r9, r6
   144ac:	eor	r5, r5, ip, ror #22
   144b0:	add	r5, r5, r9
   144b4:	ldr	r9, [sp, #60]	; 0x3c
   144b8:	ror	r4, sl, #18
   144bc:	ldr	fp, [sp, #32]
   144c0:	eor	r4, r4, sl, ror #7
   144c4:	eor	r4, r4, sl, lsr #3
   144c8:	ldr	r6, [sp, #84]	; 0x54
   144cc:	ror	sl, r9, #19
   144d0:	eor	sl, sl, r9, ror #17
   144d4:	add	fp, r4, fp
   144d8:	eor	sl, sl, r9, lsr #10
   144dc:	add	r4, fp, r6
   144e0:	ldr	r6, [pc, #-1464]	; 13f30 <dcngettext@plt+0x2f08>
   144e4:	add	r4, sl, r4
   144e8:	add	r6, r4, r6
   144ec:	add	r8, r8, r0
   144f0:	add	r1, r6, r1
   144f4:	ldr	r6, [sp, #68]	; 0x44
   144f8:	eor	r9, r2, lr
   144fc:	add	r0, r5, r0
   14500:	and	r9, r9, r8
   14504:	ror	r5, r8, #11
   14508:	eor	r9, r9, r2
   1450c:	eor	r5, r5, r8, ror #6
   14510:	ror	fp, r6, #18
   14514:	str	r4, [sp, #8]
   14518:	eor	r5, r5, r8, ror #25
   1451c:	orr	r4, ip, r0
   14520:	add	r1, r9, r1
   14524:	eor	fp, fp, r6, ror #7
   14528:	ror	r9, r0, #13
   1452c:	add	r1, r1, r5
   14530:	and	r4, r4, r3
   14534:	and	r5, ip, r0
   14538:	eor	r9, r9, r0, ror #2
   1453c:	eor	fp, fp, r6, lsr #3
   14540:	ldr	r6, [sp, #64]	; 0x40
   14544:	orr	r4, r4, r5
   14548:	eor	r9, r9, r0, ror #22
   1454c:	ldr	sl, [sp, #36]	; 0x24
   14550:	add	r9, r9, r4
   14554:	add	r9, r9, r1
   14558:	add	r7, r7, r1
   1455c:	ror	r4, r6, #19
   14560:	ldr	r1, [sp, #24]
   14564:	eor	r4, r4, r6, ror #17
   14568:	add	fp, fp, sl
   1456c:	eor	r4, r4, r6, lsr #10
   14570:	add	fp, fp, r1
   14574:	ldr	r1, [pc, #-1608]	; 13f34 <dcngettext@plt+0x2f0c>
   14578:	add	fp, r4, fp
   1457c:	eor	r6, lr, r8
   14580:	ldr	sl, [sp, #72]	; 0x48
   14584:	add	r1, fp, r1
   14588:	and	r6, r6, r7
   1458c:	ror	r4, r7, #11
   14590:	eor	r6, r6, lr
   14594:	add	r2, r1, r2
   14598:	eor	r4, r4, r7, ror #6
   1459c:	orr	r1, r0, r9
   145a0:	eor	r4, r4, r7, ror #25
   145a4:	add	r2, r6, r2
   145a8:	ldr	r5, [sp, #8]
   145ac:	add	r2, r2, r4
   145b0:	str	fp, [sp, #32]
   145b4:	and	r4, r0, r9
   145b8:	and	r1, r1, ip
   145bc:	ror	r6, r9, #13
   145c0:	ror	fp, sl, #18
   145c4:	orr	r1, r1, r4
   145c8:	eor	r6, r6, r9, ror #2
   145cc:	ldr	r4, [sp, #68]	; 0x44
   145d0:	eor	fp, fp, sl, ror #7
   145d4:	eor	r6, r6, r9, ror #22
   145d8:	eor	fp, fp, sl, lsr #3
   145dc:	add	r6, r6, r1
   145e0:	add	fp, fp, r4
   145e4:	ror	r1, r5, #19
   145e8:	add	r4, r3, r2
   145ec:	ldr	r3, [sp, #52]	; 0x34
   145f0:	eor	r1, r1, r5, ror #17
   145f4:	eor	r1, r1, r5, lsr #10
   145f8:	add	fp, fp, r3
   145fc:	add	r6, r6, r2
   14600:	ldr	r3, [pc, #-1744]	; 13f38 <dcngettext@plt+0x2f10>
   14604:	add	r2, r1, fp
   14608:	ldr	fp, [sp, #40]	; 0x28
   1460c:	eor	r1, r8, r7
   14610:	add	r3, r2, r3
   14614:	add	lr, r3, lr
   14618:	str	r2, [sp, #12]
   1461c:	and	r1, r1, r4
   14620:	ror	r2, r4, #11
   14624:	ror	r3, fp, #18
   14628:	eor	r1, r1, r8
   1462c:	eor	r2, r2, r4, ror #6
   14630:	eor	r3, r3, fp, ror #7
   14634:	orr	r5, r9, r6
   14638:	add	r1, r1, lr
   1463c:	eor	r2, r2, r4, ror #25
   14640:	ror	lr, r6, #13
   14644:	eor	r3, r3, fp, lsr #3
   14648:	ldr	fp, [sp, #32]
   1464c:	add	r2, r1, r2
   14650:	and	r5, r5, r0
   14654:	and	r1, r9, r6
   14658:	eor	lr, lr, r6, ror #2
   1465c:	eor	lr, lr, r6, ror #22
   14660:	orr	r1, r5, r1
   14664:	add	r1, lr, r1
   14668:	ldr	r5, [sp, #28]
   1466c:	ror	lr, fp, #19
   14670:	eor	lr, lr, fp, ror #17
   14674:	add	r3, r3, sl
   14678:	eor	lr, lr, fp, lsr #10
   1467c:	add	r3, r3, r5
   14680:	ldr	sl, [pc, #-1868]	; 13f3c <dcngettext@plt+0x2f14>
   14684:	add	ip, ip, r2
   14688:	add	r3, r3, lr
   1468c:	add	r1, r1, r2
   14690:	add	sl, r3, sl
   14694:	eor	r2, r7, r4
   14698:	add	r8, sl, r8
   1469c:	str	r3, [sp, #16]
   146a0:	ldr	sl, [sp, #76]	; 0x4c
   146a4:	and	r2, r2, ip
   146a8:	ror	r3, ip, #11
   146ac:	eor	r2, r2, r7
   146b0:	eor	r3, r3, ip, ror #6
   146b4:	orr	lr, r6, r1
   146b8:	add	r2, r2, r8
   146bc:	eor	r3, r3, ip, ror #25
   146c0:	ldr	r8, [sp, #12]
   146c4:	add	r3, r2, r3
   146c8:	and	lr, lr, r9
   146cc:	and	r2, r6, r1
   146d0:	ror	r5, r1, #13
   146d4:	ror	fp, sl, #18
   146d8:	eor	r5, r5, r1, ror #2
   146dc:	eor	fp, fp, sl, ror #7
   146e0:	orr	r2, lr, r2
   146e4:	ldr	lr, [sp, #40]	; 0x28
   146e8:	eor	r5, r5, r1, ror #22
   146ec:	eor	fp, fp, sl, lsr #3
   146f0:	add	r2, r5, r2
   146f4:	add	fp, fp, lr
   146f8:	ror	r5, r8, #19
   146fc:	add	lr, r0, r3
   14700:	ldr	r0, [sp, #56]	; 0x38
   14704:	eor	r5, r5, r8, ror #17
   14708:	eor	r5, r5, r8, lsr #10
   1470c:	add	fp, fp, r0
   14710:	ldr	r8, [pc, #-2008]	; 13f40 <dcngettext@plt+0x2f18>
   14714:	add	r2, r2, r3
   14718:	add	r0, r5, fp
   1471c:	eor	r3, r4, ip
   14720:	ldr	fp, [sp, #80]	; 0x50
   14724:	str	r0, [sp, #20]
   14728:	add	r8, r0, r8
   1472c:	and	r3, r3, lr
   14730:	ror	r0, lr, #11
   14734:	add	r7, r8, r7
   14738:	eor	r3, r3, r4
   1473c:	eor	r0, r0, lr, ror #6
   14740:	orr	r8, r1, r2
   14744:	add	r3, r3, r7
   14748:	eor	r0, r0, lr, ror #25
   1474c:	add	r0, r3, r0
   14750:	and	r8, r8, r6
   14754:	and	r3, r1, r2
   14758:	ror	r7, r2, #13
   1475c:	ror	r5, fp, #18
   14760:	eor	r7, r7, r2, ror #2
   14764:	eor	r5, r5, fp, ror #7
   14768:	orr	r3, r8, r3
   1476c:	ldr	r8, [sp, #16]
   14770:	eor	r7, r7, r2, ror #22
   14774:	eor	r5, r5, fp, lsr #3
   14778:	add	r3, r7, r3
   1477c:	add	r5, r5, sl
   14780:	ldr	sl, [sp, #16]
   14784:	add	r3, r3, r0
   14788:	add	r9, r9, r0
   1478c:	ror	r7, r8, #19
   14790:	ldr	r0, [sp, #60]	; 0x3c
   14794:	eor	r7, r7, r8, ror #17
   14798:	add	r5, r5, r0
   1479c:	ldr	r8, [sp, #44]	; 0x2c
   147a0:	eor	r7, r7, sl, lsr #10
   147a4:	ldr	r0, [pc, #-2152]	; 13f44 <dcngettext@plt+0x2f1c>
   147a8:	add	r7, r7, r5
   147ac:	eor	r5, ip, lr
   147b0:	str	r7, [sp, #36]	; 0x24
   147b4:	add	r0, r7, r0
   147b8:	and	r5, r5, r9
   147bc:	ror	r7, r9, #11
   147c0:	eor	r5, r5, ip
   147c4:	add	r4, r0, r4
   147c8:	eor	r7, r7, r9, ror #6
   147cc:	ror	sl, r8, #18
   147d0:	orr	r0, r2, r3
   147d4:	eor	r7, r7, r9, ror #25
   147d8:	add	r4, r5, r4
   147dc:	eor	sl, sl, r8, ror #7
   147e0:	ror	r5, r3, #13
   147e4:	add	r4, r4, r7
   147e8:	and	r0, r0, r1
   147ec:	and	r7, r2, r3
   147f0:	eor	r5, r5, r3, ror #2
   147f4:	eor	sl, sl, r8, lsr #3
   147f8:	ldr	r8, [sp, #20]
   147fc:	orr	r0, r0, r7
   14800:	eor	r5, r5, r3, ror #22
   14804:	add	r5, r5, r0
   14808:	add	r5, r5, r4
   1480c:	add	r0, r6, r4
   14810:	ror	r7, r8, #19
   14814:	ldr	r4, [sp, #64]	; 0x40
   14818:	add	sl, sl, fp
   1481c:	eor	r7, r7, r8, ror #17
   14820:	eor	r7, r7, r8, lsr #10
   14824:	ldr	r6, [pc, #-2276]	; 13f48 <dcngettext@plt+0x2f20>
   14828:	add	r8, sl, r4
   1482c:	add	r7, r7, r8
   14830:	eor	r4, lr, r9
   14834:	str	r7, [sp, #40]	; 0x28
   14838:	add	r6, r7, r6
   1483c:	and	r4, r4, r0
   14840:	ror	r7, r0, #11
   14844:	ldr	fp, [sp, #48]	; 0x30
   14848:	eor	r4, r4, lr
   1484c:	add	ip, r6, ip
   14850:	eor	r7, r7, r0, ror #6
   14854:	orr	r6, r3, r5
   14858:	eor	r7, r7, r0, ror #25
   1485c:	add	ip, r4, ip
   14860:	add	ip, ip, r7
   14864:	and	r6, r6, r2
   14868:	and	r7, r3, r5
   1486c:	ror	r4, r5, #13
   14870:	orr	r6, r6, r7
   14874:	eor	r4, r4, r5, ror #2
   14878:	ldr	r7, [sp, #36]	; 0x24
   1487c:	ror	sl, fp, #18
   14880:	eor	sl, sl, fp, ror #7
   14884:	eor	r4, r4, r5, ror #22
   14888:	eor	sl, sl, fp, lsr #3
   1488c:	add	r4, r4, r6
   14890:	ldr	fp, [sp, #44]	; 0x2c
   14894:	add	r4, r4, ip
   14898:	add	r1, r1, ip
   1489c:	ror	r6, r7, #19
   148a0:	ldr	ip, [sp, #8]
   148a4:	eor	r6, r6, r7, ror #17
   148a8:	add	sl, sl, fp
   148ac:	add	sl, sl, ip
   148b0:	eor	r6, r6, r7, lsr #10
   148b4:	ldr	fp, [pc, #-2416]	; 13f4c <dcngettext@plt+0x2f24>
   148b8:	add	r7, r6, sl
   148bc:	eor	ip, r9, r0
   148c0:	add	fp, r7, fp
   148c4:	and	ip, ip, r1
   148c8:	ror	sl, r1, #11
   148cc:	add	lr, fp, lr
   148d0:	eor	ip, ip, r9
   148d4:	eor	sl, sl, r1, ror #6
   148d8:	orr	r6, r5, r4
   148dc:	eor	sl, sl, r1, ror #25
   148e0:	add	ip, ip, lr
   148e4:	add	ip, ip, sl
   148e8:	and	r6, r6, r3
   148ec:	and	sl, r5, r4
   148f0:	ldr	r8, [sp, #84]	; 0x54
   148f4:	orr	r6, r6, sl
   148f8:	ror	lr, r4, #13
   148fc:	ldr	sl, [sp, #40]	; 0x28
   14900:	eor	lr, lr, r4, ror #2
   14904:	eor	lr, lr, r4, ror #22
   14908:	ror	fp, r8, #18
   1490c:	add	lr, lr, r6
   14910:	ror	r6, sl, #19
   14914:	eor	fp, fp, r8, ror #7
   14918:	eor	r6, r6, sl, ror #17
   1491c:	ldr	sl, [sp, #48]	; 0x30
   14920:	add	lr, lr, ip
   14924:	add	r2, r2, ip
   14928:	eor	fp, fp, r8, lsr #3
   1492c:	ldr	ip, [sp, #40]	; 0x28
   14930:	add	fp, fp, sl
   14934:	ldr	sl, [sp, #32]
   14938:	eor	r6, r6, ip, lsr #10
   1493c:	add	fp, fp, sl
   14940:	add	r6, r6, fp
   14944:	ldr	ip, [pc, #-2556]	; 13f50 <dcngettext@plt+0x2f28>
   14948:	mov	fp, r6
   1494c:	eor	r6, r0, r1
   14950:	add	ip, fp, ip
   14954:	and	r6, r6, r2
   14958:	eor	r6, r6, r0
   1495c:	add	r9, ip, r9
   14960:	add	r9, r6, r9
   14964:	ldr	r6, [sp, #24]
   14968:	str	r9, [sp, #48]	; 0x30
   1496c:	str	fp, [sp, #44]	; 0x2c
   14970:	ror	r9, r6, #18
   14974:	ror	fp, r2, #11
   14978:	eor	r9, r9, r6, ror #7
   1497c:	eor	fp, fp, r2, ror #6
   14980:	eor	r9, r9, r6, lsr #3
   14984:	ldr	r6, [sp, #48]	; 0x30
   14988:	orr	sl, r4, lr
   1498c:	eor	fp, fp, r2, ror #25
   14990:	ror	ip, lr, #13
   14994:	add	r6, r6, fp
   14998:	and	sl, sl, r5
   1499c:	and	fp, r4, lr
   149a0:	eor	ip, ip, lr, ror #2
   149a4:	orr	sl, sl, fp
   149a8:	eor	ip, ip, lr, ror #22
   149ac:	ldr	fp, [sp, #12]
   149b0:	add	ip, ip, sl
   149b4:	ror	sl, r7, #19
   149b8:	add	r9, r9, r8
   149bc:	eor	sl, sl, r7, ror #17
   149c0:	add	ip, ip, r6
   149c4:	add	r3, r3, r6
   149c8:	eor	sl, sl, r7, lsr #10
   149cc:	add	r6, r9, fp
   149d0:	add	r6, sl, r6
   149d4:	ldr	r9, [pc, #-2696]	; 13f54 <dcngettext@plt+0x2f2c>
   149d8:	mov	sl, r6
   149dc:	eor	r6, r1, r2
   149e0:	add	r9, sl, r9
   149e4:	and	r6, r6, r3
   149e8:	ror	fp, r3, #11
   149ec:	ldr	r8, [sp, #52]	; 0x34
   149f0:	add	r0, r9, r0
   149f4:	eor	r6, r6, r1
   149f8:	eor	fp, fp, r3, ror #6
   149fc:	eor	fp, fp, r3, ror #25
   14a00:	str	sl, [sp, #48]	; 0x30
   14a04:	add	r6, r6, r0
   14a08:	orr	sl, lr, ip
   14a0c:	add	r6, r6, fp
   14a10:	and	sl, sl, r4
   14a14:	and	fp, lr, ip
   14a18:	ror	r0, ip, #13
   14a1c:	orr	sl, sl, fp
   14a20:	eor	r0, r0, ip, ror #2
   14a24:	ldr	fp, [sp, #44]	; 0x2c
   14a28:	ror	r9, r8, #18
   14a2c:	eor	r9, r9, r8, ror #7
   14a30:	eor	r0, r0, ip, ror #22
   14a34:	eor	r9, r9, r8, lsr #3
   14a38:	add	r0, r0, sl
   14a3c:	ldr	r8, [sp, #24]
   14a40:	add	r5, r5, r6
   14a44:	add	r0, r0, r6
   14a48:	ror	sl, fp, #19
   14a4c:	ldr	r6, [sp, #16]
   14a50:	add	r9, r9, r8
   14a54:	eor	sl, sl, fp, ror #17
   14a58:	eor	sl, sl, fp, lsr #10
   14a5c:	add	r6, r9, r6
   14a60:	add	r6, r6, sl
   14a64:	ldr	r9, [pc, #-2836]	; 13f58 <dcngettext@plt+0x2f30>
   14a68:	mov	fp, r6
   14a6c:	eor	r6, r2, r3
   14a70:	str	fp, [sp, #68]	; 0x44
   14a74:	add	r9, fp, r9
   14a78:	and	r6, r6, r5
   14a7c:	ror	fp, r5, #11
   14a80:	ldr	r8, [sp, #28]
   14a84:	add	r1, r9, r1
   14a88:	eor	r6, r6, r2
   14a8c:	eor	fp, fp, r5, ror #6
   14a90:	orr	sl, ip, r0
   14a94:	eor	fp, fp, r5, ror #25
   14a98:	add	r6, r6, r1
   14a9c:	add	r6, r6, fp
   14aa0:	and	sl, sl, lr
   14aa4:	and	fp, ip, r0
   14aa8:	ror	r1, r0, #13
   14aac:	orr	sl, sl, fp
   14ab0:	eor	r1, r1, r0, ror #2
   14ab4:	ldr	fp, [sp, #48]	; 0x30
   14ab8:	ror	r9, r8, #18
   14abc:	eor	r9, r9, r8, ror #7
   14ac0:	eor	r1, r1, r0, ror #22
   14ac4:	eor	r9, r9, r8, lsr #3
   14ac8:	add	r1, r1, sl
   14acc:	ldr	r8, [sp, #52]	; 0x34
   14ad0:	add	r1, r1, r6
   14ad4:	add	r4, r4, r6
   14ad8:	ror	sl, fp, #19
   14adc:	ldr	r6, [sp, #20]
   14ae0:	add	r9, r9, r8
   14ae4:	eor	sl, sl, fp, ror #17
   14ae8:	add	r6, r9, r6
   14aec:	eor	sl, sl, fp, lsr #10
   14af0:	ldr	r9, [pc, #-2972]	; 13f5c <dcngettext@plt+0x2f34>
   14af4:	add	sl, sl, r6
   14af8:	eor	r6, r3, r5
   14afc:	add	r9, sl, r9
   14b00:	and	r6, r6, r4
   14b04:	ror	fp, r4, #11
   14b08:	ldr	r8, [sp, #56]	; 0x38
   14b0c:	add	r2, r9, r2
   14b10:	eor	r6, r6, r3
   14b14:	eor	fp, fp, r4, ror #6
   14b18:	str	sl, [sp, #52]	; 0x34
   14b1c:	eor	fp, fp, r4, ror #25
   14b20:	orr	sl, r0, r1
   14b24:	add	r6, r6, r2
   14b28:	add	r6, r6, fp
   14b2c:	and	sl, sl, ip
   14b30:	and	fp, r0, r1
   14b34:	ror	r2, r1, #13
   14b38:	orr	sl, sl, fp
   14b3c:	eor	r2, r2, r1, ror #2
   14b40:	ldr	fp, [sp, #68]	; 0x44
   14b44:	ror	r9, r8, #18
   14b48:	eor	r9, r9, r8, ror #7
   14b4c:	eor	r2, r2, r1, ror #22
   14b50:	eor	r9, r9, r8, lsr #3
   14b54:	add	r2, r2, sl
   14b58:	ldr	r8, [sp, #28]
   14b5c:	add	r2, r2, r6
   14b60:	add	lr, lr, r6
   14b64:	ror	sl, fp, #19
   14b68:	ldr	r6, [sp, #36]	; 0x24
   14b6c:	add	r9, r9, r8
   14b70:	eor	sl, sl, fp, ror #17
   14b74:	eor	sl, sl, fp, lsr #10
   14b78:	add	r6, r9, r6
   14b7c:	ldr	r9, [pc, #-3108]	; 13f60 <dcngettext@plt+0x2f38>
   14b80:	add	r8, sl, r6
   14b84:	eor	r6, r5, r4
   14b88:	add	r9, r8, r9
   14b8c:	and	r6, r6, lr
   14b90:	ror	fp, lr, #11
   14b94:	str	r8, [sp, #72]	; 0x48
   14b98:	add	r3, r9, r3
   14b9c:	ldr	r8, [sp, #60]	; 0x3c
   14ba0:	eor	r6, r6, r5
   14ba4:	eor	fp, fp, lr, ror #6
   14ba8:	orr	sl, r1, r2
   14bac:	eor	fp, fp, lr, ror #25
   14bb0:	add	r6, r6, r3
   14bb4:	add	r6, r6, fp
   14bb8:	and	sl, sl, r0
   14bbc:	and	fp, r1, r2
   14bc0:	ror	r3, r2, #13
   14bc4:	orr	sl, sl, fp
   14bc8:	eor	r3, r3, r2, ror #2
   14bcc:	ldr	fp, [sp, #52]	; 0x34
   14bd0:	ror	r9, r8, #18
   14bd4:	eor	r9, r9, r8, ror #7
   14bd8:	eor	r3, r3, r2, ror #22
   14bdc:	eor	r9, r9, r8, lsr #3
   14be0:	add	r3, r3, sl
   14be4:	ldr	r8, [sp, #56]	; 0x38
   14be8:	add	r3, r3, r6
   14bec:	add	ip, ip, r6
   14bf0:	ror	sl, fp, #19
   14bf4:	ldr	r6, [sp, #40]	; 0x28
   14bf8:	add	r9, r9, r8
   14bfc:	eor	sl, sl, fp, ror #17
   14c00:	add	r8, r9, r6
   14c04:	eor	sl, sl, fp, lsr #10
   14c08:	ldr	r6, [pc, #-3244]	; 13f64 <dcngettext@plt+0x2f3c>
   14c0c:	add	r9, sl, r8
   14c10:	eor	fp, r4, lr
   14c14:	and	fp, fp, ip
   14c18:	add	r6, r9, r6
   14c1c:	add	r6, r6, r5
   14c20:	eor	r5, fp, r4
   14c24:	ldr	fp, [sp, #64]	; 0x40
   14c28:	str	r9, [sp, #28]
   14c2c:	ror	r9, ip, #11
   14c30:	eor	r9, r9, ip, ror #6
   14c34:	add	r5, r5, r6
   14c38:	ror	r6, fp, #18
   14c3c:	orr	sl, r2, r3
   14c40:	eor	r9, r9, ip, ror #25
   14c44:	ror	r8, r3, #13
   14c48:	eor	r6, r6, fp, ror #7
   14c4c:	add	r5, r5, r9
   14c50:	and	sl, sl, r1
   14c54:	and	r9, r2, r3
   14c58:	eor	r8, r8, r3, ror #2
   14c5c:	eor	r6, r6, fp, lsr #3
   14c60:	ldr	fp, [sp, #72]	; 0x48
   14c64:	orr	sl, sl, r9
   14c68:	eor	r8, r8, r3, ror #22
   14c6c:	add	r8, r8, sl
   14c70:	ldr	sl, [sp, #60]	; 0x3c
   14c74:	ror	r9, fp, #19
   14c78:	add	r0, r0, r5
   14c7c:	add	r6, r6, sl
   14c80:	add	r5, r8, r5
   14c84:	eor	r9, r9, fp, ror #17
   14c88:	mov	sl, r0
   14c8c:	eor	r9, r9, fp, lsr #10
   14c90:	mov	r0, r5
   14c94:	add	r6, r6, r7
   14c98:	ldr	r5, [pc, #-3384]	; 13f68 <dcngettext@plt+0x2f40>
   14c9c:	add	r6, r6, r9
   14ca0:	eor	r9, lr, ip
   14ca4:	ldr	fp, [sp, #8]
   14ca8:	add	r5, r6, r5
   14cac:	and	r9, r9, sl
   14cb0:	eor	r9, r9, lr
   14cb4:	add	r4, r5, r4
   14cb8:	str	r6, [sp, #40]	; 0x28
   14cbc:	add	r4, r9, r4
   14cc0:	mov	r6, sl
   14cc4:	ldr	r9, [sp, #8]
   14cc8:	ror	r7, sl, #11
   14ccc:	ror	r8, r0, #13
   14cd0:	orr	sl, r3, r0
   14cd4:	ror	r5, fp, #18
   14cd8:	eor	r7, r7, r6, ror #6
   14cdc:	and	sl, sl, r2
   14ce0:	eor	r8, r8, r0, ror #2
   14ce4:	eor	r5, r5, fp, ror #7
   14ce8:	and	fp, r3, r0
   14cec:	eor	r7, r7, r6, ror #25
   14cf0:	eor	r8, r8, r0, ror #22
   14cf4:	orr	sl, sl, fp
   14cf8:	eor	r5, r5, r9, lsr #3
   14cfc:	ldr	r9, [sp, #28]
   14d00:	add	r4, r4, r7
   14d04:	add	sl, r8, sl
   14d08:	ldr	r7, [sp, #28]
   14d0c:	ldr	fp, [sp, #64]	; 0x40
   14d10:	add	r8, sl, r4
   14d14:	add	r1, r1, r4
   14d18:	ror	r9, r9, #19
   14d1c:	mov	r4, r8
   14d20:	ldr	r8, [sp, #44]	; 0x2c
   14d24:	add	r5, r5, fp
   14d28:	eor	r9, r9, r7, ror #17
   14d2c:	eor	r9, r9, r7, lsr #10
   14d30:	add	r5, r5, r8
   14d34:	ldr	fp, [pc, #-3536]	; 13f6c <dcngettext@plt+0x2f44>
   14d38:	add	r5, r5, r9
   14d3c:	str	r4, [sp, #24]
   14d40:	add	fp, r5, fp
   14d44:	eor	r7, ip, r6
   14d48:	add	lr, fp, lr
   14d4c:	ldr	fp, [sp, #24]
   14d50:	str	r6, [sp, #44]	; 0x2c
   14d54:	and	r7, r7, r1
   14d58:	ldr	r6, [sp, #32]
   14d5c:	eor	r7, r7, ip
   14d60:	ror	r8, r4, #13
   14d64:	eor	r8, r8, fp, ror #2
   14d68:	add	lr, r7, lr
   14d6c:	ldr	fp, [sp, #24]
   14d70:	ldr	r7, [sp, #24]
   14d74:	orr	sl, r0, r4
   14d78:	ror	r9, r1, #11
   14d7c:	ror	r4, r6, #18
   14d80:	and	sl, sl, r3
   14d84:	eor	r9, r9, r1, ror #6
   14d88:	eor	r4, r4, r6, ror #7
   14d8c:	and	fp, r0, fp
   14d90:	eor	r9, r9, r1, ror #25
   14d94:	eor	r8, r8, r7, ror #22
   14d98:	orr	fp, sl, fp
   14d9c:	eor	r4, r4, r6, lsr #3
   14da0:	ldr	r6, [sp, #40]	; 0x28
   14da4:	add	lr, lr, r9
   14da8:	add	fp, r8, fp
   14dac:	ldr	r9, [sp, #8]
   14db0:	add	r2, r2, lr
   14db4:	add	lr, fp, lr
   14db8:	ror	sl, r6, #19
   14dbc:	add	r4, r4, r9
   14dc0:	mov	r9, lr
   14dc4:	ldr	lr, [sp, #48]	; 0x30
   14dc8:	eor	sl, sl, r6, ror #17
   14dcc:	add	r4, r4, lr
   14dd0:	eor	r6, sl, r6, lsr #10
   14dd4:	ldr	fp, [pc, #-3692]	; 13f70 <dcngettext@plt+0x2f48>
   14dd8:	add	r6, r4, r6
   14ddc:	ldr	lr, [sp, #44]	; 0x2c
   14de0:	add	fp, r6, fp
   14de4:	ldr	sl, [sp, #24]
   14de8:	mov	r4, r9
   14dec:	eor	r8, lr, r1
   14df0:	add	ip, fp, ip
   14df4:	ldr	fp, [sp, #44]	; 0x2c
   14df8:	str	r4, [sp, #8]
   14dfc:	and	r8, r8, r2
   14e00:	eor	r8, r8, fp
   14e04:	orr	r9, sl, r9
   14e08:	mov	fp, sl
   14e0c:	ldr	sl, [sp, #8]
   14e10:	ror	lr, r4, #13
   14e14:	ldr	r4, [sp, #12]
   14e18:	and	sl, fp, sl
   14e1c:	ldr	fp, [sp, #12]
   14e20:	str	r0, [sp, #40]	; 0x28
   14e24:	and	r9, r9, r0
   14e28:	ldr	r0, [sp, #8]
   14e2c:	ror	r4, r4, #18
   14e30:	orr	r9, r9, sl
   14e34:	ror	r7, r2, #11
   14e38:	ldr	sl, [sp, #32]
   14e3c:	eor	r4, r4, fp, ror #7
   14e40:	eor	r7, r7, r2, ror #6
   14e44:	eor	lr, lr, r0, ror #2
   14e48:	eor	r4, r4, fp, lsr #3
   14e4c:	eor	r7, r7, r2, ror #25
   14e50:	add	ip, r8, ip
   14e54:	eor	lr, lr, r0, ror #22
   14e58:	add	r4, r4, sl
   14e5c:	ldr	sl, [sp, #16]
   14e60:	add	ip, ip, r7
   14e64:	add	lr, lr, r9
   14e68:	ror	fp, r5, #19
   14e6c:	ldr	r9, [sp, #68]	; 0x44
   14e70:	add	r7, lr, ip
   14e74:	eor	fp, fp, r5, ror #17
   14e78:	add	r3, r3, ip
   14e7c:	add	r4, r4, r9
   14e80:	mov	ip, r0
   14e84:	orr	r8, r0, r7
   14e88:	eor	fp, fp, r5, lsr #10
   14e8c:	ror	r0, sl, #18
   14e90:	ldr	r9, [pc, #-3876]	; 13f74 <dcngettext@plt+0x2f4c>
   14e94:	add	fp, fp, r4
   14e98:	str	r0, [sp, #16]
   14e9c:	ldr	r0, [sp, #44]	; 0x2c
   14ea0:	add	r9, fp, r9
   14ea4:	eor	r5, r1, r2
   14ea8:	add	r0, r9, r0
   14eac:	and	r9, ip, r7
   14eb0:	ldr	ip, [sp, #24]
   14eb4:	and	r5, r5, r3
   14eb8:	ror	lr, r3, #11
   14ebc:	eor	r5, r5, r1
   14ec0:	eor	lr, lr, r3, ror #6
   14ec4:	and	r8, r8, ip
   14ec8:	ldr	ip, [sp, #16]
   14ecc:	eor	lr, lr, r3, ror #25
   14ed0:	add	r0, r5, r0
   14ed4:	add	r0, r0, lr
   14ed8:	eor	ip, ip, sl, ror #7
   14edc:	ldr	lr, [sp, #12]
   14ee0:	ror	r4, r7, #13
   14ee4:	eor	ip, ip, sl, lsr #3
   14ee8:	str	sl, [sp, #16]
   14eec:	eor	r4, r4, r7, ror #2
   14ef0:	orr	r8, r8, r9
   14ef4:	ror	sl, r6, #19
   14ef8:	ldr	r9, [sp, #52]	; 0x34
   14efc:	add	ip, ip, lr
   14f00:	ldr	lr, [sp, #40]	; 0x28
   14f04:	eor	r4, r4, r7, ror #22
   14f08:	eor	sl, sl, r6, ror #17
   14f0c:	add	r8, r4, r8
   14f10:	eor	sl, sl, r6, lsr #10
   14f14:	add	r4, lr, r0
   14f18:	add	ip, ip, r9
   14f1c:	ldr	lr, [pc, #-4012]	; 13f78 <dcngettext@plt+0x2f50>
   14f20:	add	r9, ip, sl
   14f24:	add	lr, r9, lr
   14f28:	add	r0, r8, r0
   14f2c:	eor	r6, r2, r3
   14f30:	add	r1, lr, r1
   14f34:	ldr	lr, [sp, #8]
   14f38:	orr	r8, r7, r0
   14f3c:	and	r6, r6, r4
   14f40:	eor	r6, r6, r2
   14f44:	ror	ip, r4, #11
   14f48:	and	r8, r8, lr
   14f4c:	ldr	lr, [sp, #20]
   14f50:	ror	r5, r0, #13
   14f54:	eor	ip, ip, r4, ror #6
   14f58:	add	r1, r6, r1
   14f5c:	ldr	r6, [sp, #20]
   14f60:	and	sl, r7, r0
   14f64:	eor	ip, ip, r4, ror #25
   14f68:	eor	r5, r5, r0, ror #2
   14f6c:	add	r1, r1, ip
   14f70:	orr	r8, r8, sl
   14f74:	ldr	ip, [sp, #24]
   14f78:	ldr	sl, [sp, #16]
   14f7c:	str	r9, [sp, #12]
   14f80:	eor	r5, r5, r0, ror #22
   14f84:	ldr	r9, [pc, #492]	; 15178 <dcngettext@plt+0x4150>
   14f88:	ror	lr, lr, #18
   14f8c:	add	r5, r5, r8
   14f90:	eor	lr, lr, r6, ror #7
   14f94:	add	r8, ip, r1
   14f98:	add	r9, sl, r9
   14f9c:	add	ip, r5, r1
   14fa0:	eor	lr, lr, r6, lsr #3
   14fa4:	ldr	r5, [sp, #72]	; 0x48
   14fa8:	ror	r6, fp, #19
   14fac:	add	lr, lr, r9
   14fb0:	eor	r6, r6, fp, ror #17
   14fb4:	eor	r1, r3, r4
   14fb8:	add	lr, lr, r5
   14fbc:	eor	fp, r6, fp, lsr #10
   14fc0:	add	fp, lr, fp
   14fc4:	and	r6, r1, r8
   14fc8:	eor	r6, r6, r3
   14fcc:	add	r2, fp, r2
   14fd0:	ldr	fp, [sp, #36]	; 0x24
   14fd4:	add	r2, r2, r6
   14fd8:	ldr	r6, [sp, #36]	; 0x24
   14fdc:	ror	r5, r8, #11
   14fe0:	ror	r1, fp, #18
   14fe4:	orr	r9, r0, ip
   14fe8:	ror	lr, ip, #13
   14fec:	eor	r5, r5, r8, ror #6
   14ff0:	eor	r1, r1, r6, ror #7
   14ff4:	ldr	sl, [pc, #384]	; 1517c <dcngettext@plt+0x4154>
   14ff8:	ldr	r6, [sp, #20]
   14ffc:	and	fp, r0, ip
   15000:	eor	r5, r5, r8, ror #25
   15004:	and	r9, r9, r7
   15008:	eor	lr, lr, ip, ror #2
   1500c:	eor	lr, lr, ip, ror #22
   15010:	add	r2, r2, r5
   15014:	add	sl, r6, sl
   15018:	orr	r9, r9, fp
   1501c:	ldr	r6, [sp, #36]	; 0x24
   15020:	ldr	r5, [sp, #12]
   15024:	add	r9, lr, r9
   15028:	ldr	lr, [sp, #8]
   1502c:	eor	r1, r1, r6, lsr #3
   15030:	add	fp, lr, r2
   15034:	ror	r6, r5, #19
   15038:	add	r2, r9, r2
   1503c:	mov	lr, r5
   15040:	ldr	r9, [sp, #28]
   15044:	add	r1, r1, sl
   15048:	eor	r6, r6, r5, ror #17
   1504c:	add	r1, r1, r9
   15050:	eor	r5, r4, r8
   15054:	eor	r6, r6, lr, lsr #10
   15058:	add	r6, r1, r6
   1505c:	and	r5, r5, fp
   15060:	ror	r1, fp, #11
   15064:	eor	r5, r5, r4
   15068:	add	r3, r6, r3
   1506c:	eor	r1, r1, fp, ror #6
   15070:	add	r3, r3, r5
   15074:	eor	r1, r1, fp, ror #25
   15078:	orr	r9, ip, r2
   1507c:	add	r3, r3, r1
   15080:	ror	lr, r2, #13
   15084:	ldr	r5, [sp, #104]	; 0x68
   15088:	and	r9, r9, r0
   1508c:	and	r6, ip, r2
   15090:	add	r7, r7, r3
   15094:	eor	lr, lr, r2, ror #2
   15098:	add	r5, r5, r7
   1509c:	orr	r6, r9, r6
   150a0:	eor	lr, lr, r2, ror #22
   150a4:	add	lr, lr, r6
   150a8:	str	r5, [sp, #104]	; 0x68
   150ac:	mov	r6, r5
   150b0:	ldr	r5, [sp, #92]	; 0x5c
   150b4:	ldr	r1, [sp, #4]
   150b8:	add	r2, r5, r2
   150bc:	add	r3, lr, r3
   150c0:	ldr	lr, [sp, #120]	; 0x78
   150c4:	mov	r7, r2
   150c8:	add	r1, r1, #64	; 0x40
   150cc:	str	r2, [sp, #92]	; 0x5c
   150d0:	ldr	r2, [sp, #88]	; 0x58
   150d4:	cmp	lr, r1
   150d8:	str	r1, [sp, #4]
   150dc:	ldr	r1, [sp, #116]	; 0x74
   150e0:	add	r3, r2, r3
   150e4:	add	r1, r1, r4
   150e8:	ldr	lr, [sp, #100]	; 0x64
   150ec:	ldr	r4, [sp, #96]	; 0x60
   150f0:	mov	r9, r3
   150f4:	str	r3, [sp, #88]	; 0x58
   150f8:	ldr	r3, [sp, #124]	; 0x7c
   150fc:	add	r0, lr, r0
   15100:	add	ip, r4, ip
   15104:	ldr	lr, [sp, #112]	; 0x70
   15108:	ldr	r4, [sp, #108]	; 0x6c
   1510c:	str	r0, [r3, #12]
   15110:	str	r0, [sp, #100]	; 0x64
   15114:	mov	r5, r0
   15118:	mov	r0, r3
   1511c:	add	lr, lr, r8
   15120:	add	r4, r4, fp
   15124:	str	r1, [r3, #28]
   15128:	str	r6, [r3, #16]
   1512c:	str	r7, [r3, #4]
   15130:	str	lr, [r3, #24]
   15134:	str	ip, [r3, #8]
   15138:	str	r4, [r3, #20]
   1513c:	str	r1, [sp, #116]	; 0x74
   15140:	mov	r8, r1
   15144:	str	lr, [sp, #112]	; 0x70
   15148:	mov	r1, r6
   1514c:	str	ip, [sp, #96]	; 0x60
   15150:	mov	r6, r7
   15154:	str	r4, [sp, #108]	; 0x6c
   15158:	mov	r3, r9
   1515c:	str	r9, [r0]
   15160:	mov	sl, r4
   15164:	mov	r7, ip
   15168:	mov	r2, lr
   1516c:	bhi	12e8c <dcngettext@plt+0x1e64>
   15170:	add	sp, sp, #132	; 0x84
   15174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15178:	mrclt	3, 7, sl, cr9, cr7, {7}
   1517c:			; <UNDEFINED> instruction: 0xc67178f2
   15180:	push	{r4, r5, r6, lr}
   15184:	mov	r4, r0
   15188:	ldr	r0, [r0, #40]	; 0x28
   1518c:	ldr	r3, [r4, #32]
   15190:	cmp	r0, #55	; 0x37
   15194:	add	r3, r0, r3
   15198:	movhi	r5, #128	; 0x80
   1519c:	movls	r5, #64	; 0x40
   151a0:	movhi	r2, #120	; 0x78
   151a4:	movls	r2, #56	; 0x38
   151a8:	movhi	ip, #31
   151ac:	movls	ip, #15
   151b0:	movhi	lr, #30
   151b4:	movls	lr, #14
   151b8:	cmp	r0, r3
   151bc:	str	r3, [r4, #32]
   151c0:	ldrhi	r1, [r4, #36]	; 0x24
   151c4:	ldrls	r6, [r4, #36]	; 0x24
   151c8:	addhi	r6, r1, #1
   151cc:	lsr	r1, r3, #29
   151d0:	add	lr, r4, lr, lsl #2
   151d4:	add	ip, r4, ip, lsl #2
   151d8:	orr	r1, r1, r6, lsl #3
   151dc:	lsl	r3, r3, #3
   151e0:	strhi	r6, [r4, #36]	; 0x24
   151e4:	rev	r1, r1
   151e8:	add	r6, r4, #44	; 0x2c
   151ec:	rev	r3, r3
   151f0:	str	r1, [lr, #44]	; 0x2c
   151f4:	sub	r2, r2, r0
   151f8:	ldr	r1, [pc, #28]	; 1521c <dcngettext@plt+0x41f4>
   151fc:	add	r0, r6, r0
   15200:	str	r3, [ip, #44]	; 0x2c
   15204:	bl	10df4 <memcpy@plt>
   15208:	mov	r2, r4
   1520c:	mov	r1, r5
   15210:	mov	r0, r6
   15214:	pop	{r4, r5, r6, lr}
   15218:	b	12df8 <dcngettext@plt+0x1dd0>
   1521c:			; <UNDEFINED> instruction: 0x0001c5b4
   15220:	push	{r4, r5, r6, lr}
   15224:	mov	r5, r0
   15228:	mov	r4, r1
   1522c:	bl	15180 <dcngettext@plt+0x4158>
   15230:	ldr	r3, [r5]
   15234:	mov	r0, r4
   15238:	rev	r3, r3
   1523c:	str	r3, [r4]
   15240:	ldr	r3, [r5, #4]
   15244:	rev	r3, r3
   15248:	str	r3, [r4, #4]
   1524c:	ldr	r3, [r5, #8]
   15250:	rev	r3, r3
   15254:	str	r3, [r4, #8]
   15258:	ldr	r3, [r5, #12]
   1525c:	rev	r3, r3
   15260:	str	r3, [r4, #12]
   15264:	ldr	r3, [r5, #16]
   15268:	rev	r3, r3
   1526c:	str	r3, [r4, #16]
   15270:	ldr	r3, [r5, #20]
   15274:	rev	r3, r3
   15278:	str	r3, [r4, #20]
   1527c:	ldr	r3, [r5, #24]
   15280:	rev	r3, r3
   15284:	str	r3, [r4, #24]
   15288:	ldr	r3, [r5, #28]
   1528c:	rev	r3, r3
   15290:	str	r3, [r4, #28]
   15294:	pop	{r4, r5, r6, pc}
   15298:	push	{r4, r5, r6, lr}
   1529c:	mov	r5, r0
   152a0:	mov	r4, r1
   152a4:	bl	15180 <dcngettext@plt+0x4158>
   152a8:	ldr	r3, [r5]
   152ac:	mov	r0, r4
   152b0:	rev	r3, r3
   152b4:	str	r3, [r4]
   152b8:	ldr	r3, [r5, #4]
   152bc:	rev	r3, r3
   152c0:	str	r3, [r4, #4]
   152c4:	ldr	r3, [r5, #8]
   152c8:	rev	r3, r3
   152cc:	str	r3, [r4, #8]
   152d0:	ldr	r3, [r5, #12]
   152d4:	rev	r3, r3
   152d8:	str	r3, [r4, #12]
   152dc:	ldr	r3, [r5, #16]
   152e0:	rev	r3, r3
   152e4:	str	r3, [r4, #16]
   152e8:	ldr	r3, [r5, #20]
   152ec:	rev	r3, r3
   152f0:	str	r3, [r4, #20]
   152f4:	ldr	r3, [r5, #24]
   152f8:	rev	r3, r3
   152fc:	str	r3, [r4, #24]
   15300:	pop	{r4, r5, r6, pc}
   15304:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15308:	mov	r6, r2
   1530c:	ldr	r4, [r2, #40]	; 0x28
   15310:	mov	r8, r0
   15314:	cmp	r4, #0
   15318:	mov	r5, r1
   1531c:	bne	1540c <dcngettext@plt+0x43e4>
   15320:	cmp	r5, #63	; 0x3f
   15324:	bls	153fc <dcngettext@plt+0x43d4>
   15328:	tst	r8, #3
   1532c:	beq	153e0 <dcngettext@plt+0x43b8>
   15330:	cmp	r5, #64	; 0x40
   15334:	add	r7, r6, #44	; 0x2c
   15338:	beq	153b8 <dcngettext@plt+0x4390>
   1533c:	mov	sl, r5
   15340:	mov	r4, r8
   15344:	mov	r9, #64	; 0x40
   15348:	add	r2, r4, #64	; 0x40
   1534c:	mov	r3, r7
   15350:	ldr	lr, [r4]
   15354:	ldr	ip, [r4, #4]
   15358:	ldr	r0, [r4, #8]
   1535c:	ldr	r1, [r4, #12]
   15360:	add	r4, r4, #16
   15364:	cmp	r4, r2
   15368:	str	lr, [r3]
   1536c:	str	ip, [r3, #4]
   15370:	str	r0, [r3, #8]
   15374:	str	r1, [r3, #12]
   15378:	add	r3, r3, #16
   1537c:	bne	15350 <dcngettext@plt+0x4328>
   15380:	sub	sl, sl, #64	; 0x40
   15384:	mov	r2, r6
   15388:	mov	r1, r9
   1538c:	mov	r0, r7
   15390:	bl	12df8 <dcngettext@plt+0x1dd0>
   15394:	cmp	sl, #64	; 0x40
   15398:	bhi	15348 <dcngettext@plt+0x4320>
   1539c:	sub	r3, r5, #65	; 0x41
   153a0:	bic	r2, r3, #63	; 0x3f
   153a4:	mov	r3, r2
   153a8:	sub	r5, r5, #64	; 0x40
   153ac:	add	r2, r2, #64	; 0x40
   153b0:	sub	r5, r5, r3
   153b4:	add	r8, r8, r2
   153b8:	ldr	r4, [r6, #40]	; 0x28
   153bc:	mov	r1, r8
   153c0:	add	r0, r7, r4
   153c4:	mov	r2, r5
   153c8:	add	r4, r4, r5
   153cc:	bl	10df4 <memcpy@plt>
   153d0:	cmp	r4, #63	; 0x3f
   153d4:	bhi	1544c <dcngettext@plt+0x4424>
   153d8:	str	r4, [r6, #40]	; 0x28
   153dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   153e0:	bic	r4, r5, #63	; 0x3f
   153e4:	mov	r0, r8
   153e8:	mov	r1, r4
   153ec:	mov	r2, r6
   153f0:	bl	12df8 <dcngettext@plt+0x1dd0>
   153f4:	and	r5, r5, #63	; 0x3f
   153f8:	add	r8, r8, r4
   153fc:	cmp	r5, #0
   15400:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15404:	add	r7, r6, #44	; 0x2c
   15408:	b	153b8 <dcngettext@plt+0x4390>
   1540c:	rsb	r7, r4, #128	; 0x80
   15410:	cmp	r7, r1
   15414:	movcs	r7, r1
   15418:	add	r9, r2, #44	; 0x2c
   1541c:	mov	r1, r8
   15420:	mov	r2, r7
   15424:	add	r0, r9, r4
   15428:	bl	10df4 <memcpy@plt>
   1542c:	ldr	r1, [r6, #40]	; 0x28
   15430:	add	r1, r7, r1
   15434:	cmp	r1, #64	; 0x40
   15438:	str	r1, [r6, #40]	; 0x28
   1543c:	bhi	15478 <dcngettext@plt+0x4450>
   15440:	add	r8, r8, r7
   15444:	sub	r5, r5, r7
   15448:	b	15320 <dcngettext@plt+0x42f8>
   1544c:	sub	r4, r4, #64	; 0x40
   15450:	mov	r2, r6
   15454:	mov	r1, #64	; 0x40
   15458:	mov	r0, r7
   1545c:	bl	12df8 <dcngettext@plt+0x1dd0>
   15460:	mov	r0, r7
   15464:	mov	r2, r4
   15468:	add	r1, r6, #108	; 0x6c
   1546c:	bl	10df4 <memcpy@plt>
   15470:	str	r4, [r6, #40]	; 0x28
   15474:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15478:	mov	r2, r6
   1547c:	mov	r0, r9
   15480:	bic	r1, r1, #63	; 0x3f
   15484:	bl	12df8 <dcngettext@plt+0x1dd0>
   15488:	ldr	r2, [r6, #40]	; 0x28
   1548c:	add	r1, r4, r7
   15490:	and	r2, r2, #63	; 0x3f
   15494:	bic	r1, r1, #63	; 0x3f
   15498:	add	r1, r9, r1
   1549c:	mov	r0, r9
   154a0:	str	r2, [r6, #40]	; 0x28
   154a4:	bl	10df4 <memcpy@plt>
   154a8:	b	15440 <dcngettext@plt+0x4418>
   154ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154b0:	mov	r6, r1
   154b4:	sub	sp, sp, #180	; 0xb4
   154b8:	ldr	ip, [pc, #540]	; 156dc <dcngettext@plt+0x46b4>
   154bc:	ldr	r1, [pc, #540]	; 156e0 <dcngettext@plt+0x46b8>
   154c0:	ldr	r3, [pc, #540]	; 156e4 <dcngettext@plt+0x46bc>
   154c4:	ldr	r4, [pc, #540]	; 156e8 <dcngettext@plt+0x46c0>
   154c8:	ldr	lr, [pc, #540]	; 156ec <dcngettext@plt+0x46c4>
   154cc:	mov	r5, r2
   154d0:	str	ip, [sp, #4]
   154d4:	str	r1, [sp, #8]
   154d8:	ldr	ip, [pc, #528]	; 156f0 <dcngettext@plt+0x46c8>
   154dc:	ldr	r1, [pc, #528]	; 156f4 <dcngettext@plt+0x46cc>
   154e0:	ldr	r2, [pc, #528]	; 156f8 <dcngettext@plt+0x46d0>
   154e4:	str	r3, [sp, #16]
   154e8:	cmp	r6, #63	; 0x3f
   154ec:	mov	r3, #0
   154f0:	str	r4, [sp, #12]
   154f4:	str	lr, [sp, #20]
   154f8:	str	ip, [sp, #24]
   154fc:	str	r1, [sp, #28]
   15500:	str	r2, [sp, #32]
   15504:	str	r3, [sp, #40]	; 0x28
   15508:	str	r3, [sp, #36]	; 0x24
   1550c:	str	r3, [sp, #44]	; 0x2c
   15510:	mov	sl, r0
   15514:	bls	155c0 <dcngettext@plt+0x4598>
   15518:	tst	r0, #3
   1551c:	beq	15638 <dcngettext@plt+0x4610>
   15520:	cmp	r6, #64	; 0x40
   15524:	beq	15660 <dcngettext@plt+0x4638>
   15528:	mov	r9, r6
   1552c:	mov	r4, r0
   15530:	add	r7, sp, #48	; 0x30
   15534:	add	r8, sp, #4
   15538:	add	fp, r4, #64	; 0x40
   1553c:	mov	lr, r7
   15540:	ldr	r0, [r4]
   15544:	ldr	r1, [r4, #4]
   15548:	ldr	r2, [r4, #8]
   1554c:	ldr	r3, [r4, #12]
   15550:	mov	ip, lr
   15554:	add	r4, r4, #16
   15558:	cmp	r4, fp
   1555c:	stmia	ip!, {r0, r1, r2, r3}
   15560:	mov	lr, ip
   15564:	bne	15540 <dcngettext@plt+0x4518>
   15568:	sub	r9, r9, #64	; 0x40
   1556c:	mov	r2, r8
   15570:	mov	r1, #64	; 0x40
   15574:	mov	r0, r7
   15578:	bl	12df8 <dcngettext@plt+0x1dd0>
   1557c:	cmp	r9, #64	; 0x40
   15580:	bhi	15538 <dcngettext@plt+0x4510>
   15584:	sub	r2, r6, #65	; 0x41
   15588:	bic	r1, r2, #63	; 0x3f
   1558c:	mov	r2, r1
   15590:	sub	r6, r6, #64	; 0x40
   15594:	add	r1, r1, #64	; 0x40
   15598:	sub	r2, r6, r2
   1559c:	add	r1, sl, r1
   155a0:	ldr	r6, [sp, #44]	; 0x2c
   155a4:	add	r0, r7, r6
   155a8:	add	r6, r2, r6
   155ac:	bl	10df4 <memcpy@plt>
   155b0:	cmp	r6, #63	; 0x3f
   155b4:	bhi	15698 <dcngettext@plt+0x4670>
   155b8:	str	r6, [sp, #44]	; 0x2c
   155bc:	b	155cc <dcngettext@plt+0x45a4>
   155c0:	cmp	r6, #0
   155c4:	bne	156c4 <dcngettext@plt+0x469c>
   155c8:	add	r8, sp, #4
   155cc:	mov	r0, r8
   155d0:	bl	15180 <dcngettext@plt+0x4158>
   155d4:	add	r0, sp, #20
   155d8:	ldr	r6, [sp, #4]
   155dc:	ldm	r0, {r0, r1, r2, r3}
   155e0:	rev	r6, r6
   155e4:	ldr	r4, [sp, #8]
   155e8:	ldr	lr, [sp, #12]
   155ec:	ldr	ip, [sp, #16]
   155f0:	rev	r4, r4
   155f4:	rev	lr, lr
   155f8:	rev	ip, ip
   155fc:	rev	r0, r0
   15600:	rev	r1, r1
   15604:	rev	r2, r2
   15608:	rev	r3, r3
   1560c:	str	r0, [r5, #16]
   15610:	str	r6, [r5]
   15614:	mov	r0, r5
   15618:	str	r4, [r5, #4]
   1561c:	str	lr, [r5, #8]
   15620:	str	ip, [r5, #12]
   15624:	str	r1, [r5, #20]
   15628:	str	r2, [r5, #24]
   1562c:	str	r3, [r5, #28]
   15630:	add	sp, sp, #180	; 0xb4
   15634:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15638:	bic	r4, r6, #63	; 0x3f
   1563c:	add	r8, sp, #4
   15640:	mov	r1, r4
   15644:	mov	r2, r8
   15648:	bl	12df8 <dcngettext@plt+0x1dd0>
   1564c:	ands	r2, r6, #63	; 0x3f
   15650:	addne	r1, sl, r4
   15654:	addne	r7, sp, #48	; 0x30
   15658:	beq	155cc <dcngettext@plt+0x45a4>
   1565c:	b	155a0 <dcngettext@plt+0x4578>
   15660:	add	r7, sp, #48	; 0x30
   15664:	add	r4, r0, #64	; 0x40
   15668:	mov	lr, r7
   1566c:	ldr	r0, [sl]
   15670:	ldr	r1, [sl, #4]
   15674:	ldr	r2, [sl, #8]
   15678:	ldr	r3, [sl, #12]
   1567c:	mov	ip, lr
   15680:	add	sl, sl, #16
   15684:	cmp	sl, r4
   15688:	stmia	ip!, {r0, r1, r2, r3}
   1568c:	mov	lr, ip
   15690:	bne	1566c <dcngettext@plt+0x4644>
   15694:	add	r8, sp, #4
   15698:	mov	r2, r8
   1569c:	mov	r0, r7
   156a0:	sub	r6, r6, #64	; 0x40
   156a4:	mov	r1, #64	; 0x40
   156a8:	bl	12df8 <dcngettext@plt+0x1dd0>
   156ac:	mov	r0, r7
   156b0:	mov	r2, r6
   156b4:	mov	r3, #128	; 0x80
   156b8:	add	r1, sp, #112	; 0x70
   156bc:	bl	10e60 <__memcpy_chk@plt>
   156c0:	b	155b8 <dcngettext@plt+0x4590>
   156c4:	mov	r1, sl
   156c8:	mov	r2, r6
   156cc:	add	r0, sp, #48	; 0x30
   156d0:	bl	10df4 <memcpy@plt>
   156d4:	add	r8, sp, #4
   156d8:	b	155b8 <dcngettext@plt+0x4590>
   156dc:	bvs	28f080 <stdout@@GLIBC_2.4+0x261f14>
   156e0:	bllt	1a010fc <stdout@@GLIBC_2.4+0x19d3f90>
   156e4:	strbge	pc, [pc, #-1338]	; 151b2 <dcngettext@plt+0x418a>	; <UNPREDICTABLE>
   156e8:	stclcc	3, cr15, [lr], #-456	; 0xfffffe38
   156ec:	tstpl	lr, pc, ror r2
   156f0:	blls	16f928 <stdout@@GLIBC_2.4+0x1427bc>
   156f4:	svcne	0x0083d9ab
   156f8:	blpl	ff848b64 <stdout@@GLIBC_2.4+0xff81b9f8>
   156fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15700:	mov	r6, r1
   15704:	sub	sp, sp, #180	; 0xb4
   15708:	ldr	ip, [pc, #524]	; 1591c <dcngettext@plt+0x48f4>
   1570c:	ldr	r1, [pc, #524]	; 15920 <dcngettext@plt+0x48f8>
   15710:	ldr	r3, [pc, #524]	; 15924 <dcngettext@plt+0x48fc>
   15714:	ldr	r4, [pc, #524]	; 15928 <dcngettext@plt+0x4900>
   15718:	ldr	lr, [pc, #524]	; 1592c <dcngettext@plt+0x4904>
   1571c:	mov	r5, r2
   15720:	str	ip, [sp, #4]
   15724:	str	r1, [sp, #8]
   15728:	ldr	ip, [pc, #512]	; 15930 <dcngettext@plt+0x4908>
   1572c:	ldr	r1, [pc, #512]	; 15934 <dcngettext@plt+0x490c>
   15730:	ldr	r2, [pc, #512]	; 15938 <dcngettext@plt+0x4910>
   15734:	str	r3, [sp, #16]
   15738:	cmp	r6, #63	; 0x3f
   1573c:	mov	r3, #0
   15740:	str	r4, [sp, #12]
   15744:	str	lr, [sp, #20]
   15748:	str	ip, [sp, #24]
   1574c:	str	r1, [sp, #28]
   15750:	str	r2, [sp, #32]
   15754:	str	r3, [sp, #40]	; 0x28
   15758:	str	r3, [sp, #36]	; 0x24
   1575c:	str	r3, [sp, #44]	; 0x2c
   15760:	mov	sl, r0
   15764:	bls	15810 <dcngettext@plt+0x47e8>
   15768:	tst	r0, #3
   1576c:	beq	15878 <dcngettext@plt+0x4850>
   15770:	cmp	r6, #64	; 0x40
   15774:	beq	158a0 <dcngettext@plt+0x4878>
   15778:	mov	r9, r6
   1577c:	mov	r4, r0
   15780:	add	r7, sp, #48	; 0x30
   15784:	add	r8, sp, #4
   15788:	add	fp, r4, #64	; 0x40
   1578c:	mov	lr, r7
   15790:	ldr	r0, [r4]
   15794:	ldr	r1, [r4, #4]
   15798:	ldr	r2, [r4, #8]
   1579c:	ldr	r3, [r4, #12]
   157a0:	mov	ip, lr
   157a4:	add	r4, r4, #16
   157a8:	cmp	r4, fp
   157ac:	stmia	ip!, {r0, r1, r2, r3}
   157b0:	mov	lr, ip
   157b4:	bne	15790 <dcngettext@plt+0x4768>
   157b8:	sub	r9, r9, #64	; 0x40
   157bc:	mov	r2, r8
   157c0:	mov	r1, #64	; 0x40
   157c4:	mov	r0, r7
   157c8:	bl	12df8 <dcngettext@plt+0x1dd0>
   157cc:	cmp	r9, #64	; 0x40
   157d0:	bhi	15788 <dcngettext@plt+0x4760>
   157d4:	sub	r2, r6, #65	; 0x41
   157d8:	bic	r1, r2, #63	; 0x3f
   157dc:	mov	r2, r1
   157e0:	sub	r6, r6, #64	; 0x40
   157e4:	add	r1, r1, #64	; 0x40
   157e8:	sub	r2, r6, r2
   157ec:	add	r1, sl, r1
   157f0:	ldr	r6, [sp, #44]	; 0x2c
   157f4:	add	r0, r7, r6
   157f8:	add	r6, r2, r6
   157fc:	bl	10df4 <memcpy@plt>
   15800:	cmp	r6, #63	; 0x3f
   15804:	bhi	158d8 <dcngettext@plt+0x48b0>
   15808:	str	r6, [sp, #44]	; 0x2c
   1580c:	b	1581c <dcngettext@plt+0x47f4>
   15810:	cmp	r6, #0
   15814:	bne	15904 <dcngettext@plt+0x48dc>
   15818:	add	r8, sp, #4
   1581c:	mov	r0, r8
   15820:	bl	15180 <dcngettext@plt+0x4158>
   15824:	add	r0, sp, #16
   15828:	ldmib	sp, {r4, lr}
   1582c:	ldm	r0, {r0, r1, r2, r3}
   15830:	ldr	ip, [sp, #12]
   15834:	rev	r4, r4
   15838:	rev	lr, lr
   1583c:	rev	ip, ip
   15840:	rev	r0, r0
   15844:	rev	r1, r1
   15848:	rev	r2, r2
   1584c:	rev	r3, r3
   15850:	str	r0, [r5, #12]
   15854:	str	r4, [r5]
   15858:	mov	r0, r5
   1585c:	str	lr, [r5, #4]
   15860:	str	ip, [r5, #8]
   15864:	str	r1, [r5, #16]
   15868:	str	r2, [r5, #20]
   1586c:	str	r3, [r5, #24]
   15870:	add	sp, sp, #180	; 0xb4
   15874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15878:	bic	r4, r6, #63	; 0x3f
   1587c:	add	r8, sp, #4
   15880:	mov	r1, r4
   15884:	mov	r2, r8
   15888:	bl	12df8 <dcngettext@plt+0x1dd0>
   1588c:	ands	r2, r6, #63	; 0x3f
   15890:	addne	r1, sl, r4
   15894:	addne	r7, sp, #48	; 0x30
   15898:	beq	1581c <dcngettext@plt+0x47f4>
   1589c:	b	157f0 <dcngettext@plt+0x47c8>
   158a0:	add	r7, sp, #48	; 0x30
   158a4:	add	r4, r0, #64	; 0x40
   158a8:	mov	lr, r7
   158ac:	ldr	r0, [sl]
   158b0:	ldr	r1, [sl, #4]
   158b4:	ldr	r2, [sl, #8]
   158b8:	ldr	r3, [sl, #12]
   158bc:	mov	ip, lr
   158c0:	add	sl, sl, #16
   158c4:	cmp	sl, r4
   158c8:	stmia	ip!, {r0, r1, r2, r3}
   158cc:	mov	lr, ip
   158d0:	bne	158ac <dcngettext@plt+0x4884>
   158d4:	add	r8, sp, #4
   158d8:	mov	r2, r8
   158dc:	mov	r0, r7
   158e0:	sub	r6, r6, #64	; 0x40
   158e4:	mov	r1, #64	; 0x40
   158e8:	bl	12df8 <dcngettext@plt+0x1dd0>
   158ec:	mov	r0, r7
   158f0:	mov	r2, r6
   158f4:	mov	r3, #128	; 0x80
   158f8:	add	r1, sp, #112	; 0x70
   158fc:	bl	10e60 <__memcpy_chk@plt>
   15900:	b	15808 <dcngettext@plt+0x47e0>
   15904:	mov	r1, sl
   15908:	mov	r2, r6
   1590c:	add	r0, sp, #48	; 0x30
   15910:	bl	10df4 <memcpy@plt>
   15914:	add	r8, sp, #4
   15918:	b	15808 <dcngettext@plt+0x47e0>
   1591c:	ldrdgt	r9, [r5, -r8]
   15920:	ldrbtcc	sp, [ip], -r7, lsl #10
   15924:			; <UNDEFINED> instruction: 0xf70e5939
   15928:	rsbscc	sp, r0, r7, lsl sp
   1592c:			; <UNDEFINED> instruction: 0xffc00b31
   15930:	ldmdavs	r8, {r0, r4, r8, sl, ip}^
   15934:	ldrbtvs	r8, [r9], #4007	; 0xfa7
   15938:	cdplt	15, 15, cr4, cr10, cr4, {5}
   1593c:	push	{r4, r5}
   15940:	pop	{r4, r5}
   15944:	b	10dc4 <posix_fadvise64@plt>
   15948:	cmp	r0, #0
   1594c:	bxeq	lr
   15950:	push	{r4, lr}
   15954:	sub	sp, sp, #16
   15958:	mov	r4, r1
   1595c:	bl	10f68 <fileno@plt>
   15960:	mov	r2, #0
   15964:	mov	r3, #0
   15968:	str	r4, [sp, #8]
   1596c:	strd	r2, [sp]
   15970:	bl	10dc4 <posix_fadvise64@plt>
   15974:	add	sp, sp, #16
   15978:	pop	{r4, pc}
   1597c:	push	{r4, r5, lr}
   15980:	sub	sp, sp, #12
   15984:	mov	r4, r0
   15988:	bl	10f68 <fileno@plt>
   1598c:	cmp	r0, #0
   15990:	mov	r0, r4
   15994:	blt	15a10 <dcngettext@plt+0x49e8>
   15998:	bl	10ecc <__freading@plt>
   1599c:	cmp	r0, #0
   159a0:	bne	159dc <dcngettext@plt+0x49b4>
   159a4:	mov	r0, r4
   159a8:	bl	15a1c <dcngettext@plt+0x49f4>
   159ac:	cmp	r0, #0
   159b0:	beq	15a0c <dcngettext@plt+0x49e4>
   159b4:	bl	10f2c <__errno_location@plt>
   159b8:	mov	r5, r0
   159bc:	mov	r0, r4
   159c0:	ldr	r4, [r5]
   159c4:	bl	10f80 <fclose@plt>
   159c8:	cmp	r4, #0
   159cc:	mvnne	r0, #0
   159d0:	strne	r4, [r5]
   159d4:	add	sp, sp, #12
   159d8:	pop	{r4, r5, pc}
   159dc:	mov	r0, r4
   159e0:	bl	10f68 <fileno@plt>
   159e4:	mov	r3, #1
   159e8:	str	r3, [sp]
   159ec:	mov	r2, #0
   159f0:	mov	r3, #0
   159f4:	bl	10e78 <lseek64@plt>
   159f8:	mvn	r3, #0
   159fc:	mvn	r2, #0
   15a00:	cmp	r1, r3
   15a04:	cmpeq	r0, r2
   15a08:	bne	159a4 <dcngettext@plt+0x497c>
   15a0c:	mov	r0, r4
   15a10:	add	sp, sp, #12
   15a14:	pop	{r4, r5, lr}
   15a18:	b	10f80 <fclose@plt>
   15a1c:	push	{r4, lr}
   15a20:	subs	r4, r0, #0
   15a24:	sub	sp, sp, #8
   15a28:	beq	15a44 <dcngettext@plt+0x4a1c>
   15a2c:	bl	10ecc <__freading@plt>
   15a30:	cmp	r0, #0
   15a34:	beq	15a44 <dcngettext@plt+0x4a1c>
   15a38:	ldr	r3, [r4]
   15a3c:	tst	r3, #256	; 0x100
   15a40:	bne	15a54 <dcngettext@plt+0x4a2c>
   15a44:	mov	r0, r4
   15a48:	add	sp, sp, #8
   15a4c:	pop	{r4, lr}
   15a50:	b	10dd0 <fflush@plt>
   15a54:	mov	r3, #1
   15a58:	str	r3, [sp]
   15a5c:	mov	r2, #0
   15a60:	mov	r3, #0
   15a64:	mov	r0, r4
   15a68:	bl	15b6c <dcngettext@plt+0x4b44>
   15a6c:	mov	r0, r4
   15a70:	add	sp, sp, #8
   15a74:	pop	{r4, lr}
   15a78:	b	10dd0 <fflush@plt>
   15a7c:	push	{r4, r5, r6, lr}
   15a80:	mov	r5, r1
   15a84:	bl	10fe0 <fopen64@plt>
   15a88:	subs	r4, r0, #0
   15a8c:	beq	15a9c <dcngettext@plt+0x4a74>
   15a90:	bl	10f68 <fileno@plt>
   15a94:	cmp	r0, #2
   15a98:	bls	15aa4 <dcngettext@plt+0x4a7c>
   15a9c:	mov	r0, r4
   15aa0:	pop	{r4, r5, r6, pc}
   15aa4:	bl	19c58 <dcngettext@plt+0x8c30>
   15aa8:	subs	r6, r0, #0
   15aac:	blt	15af4 <dcngettext@plt+0x4acc>
   15ab0:	mov	r0, r4
   15ab4:	bl	1597c <dcngettext@plt+0x4954>
   15ab8:	cmp	r0, #0
   15abc:	bne	15ad4 <dcngettext@plt+0x4aac>
   15ac0:	mov	r1, r5
   15ac4:	mov	r0, r6
   15ac8:	bl	10d7c <fdopen@plt>
   15acc:	subs	r4, r0, #0
   15ad0:	bne	15a9c <dcngettext@plt+0x4a74>
   15ad4:	bl	10f2c <__errno_location@plt>
   15ad8:	mov	r4, #0
   15adc:	mov	r5, r0
   15ae0:	mov	r0, r6
   15ae4:	ldr	r6, [r5]
   15ae8:	bl	1101c <close@plt>
   15aec:	str	r6, [r5]
   15af0:	b	15a9c <dcngettext@plt+0x4a74>
   15af4:	bl	10f2c <__errno_location@plt>
   15af8:	mov	r5, r0
   15afc:	mov	r0, r4
   15b00:	ldr	r6, [r5]
   15b04:	mov	r4, #0
   15b08:	bl	1597c <dcngettext@plt+0x4954>
   15b0c:	str	r6, [r5]
   15b10:	b	15a9c <dcngettext@plt+0x4a74>
   15b14:	push	{r4, r5, lr}
   15b18:	sub	sp, sp, #12
   15b1c:	mov	r5, r0
   15b20:	bl	10f2c <__errno_location@plt>
   15b24:	mov	r2, #0
   15b28:	mov	r4, r0
   15b2c:	ldr	r3, [r0]
   15b30:	str	r2, [r4]
   15b34:	mov	r0, r5
   15b38:	str	r3, [sp]
   15b3c:	str	r3, [sp, #4]
   15b40:	bl	10ddc <free@plt>
   15b44:	ldr	r3, [r4]
   15b48:	add	r2, sp, #8
   15b4c:	cmp	r3, #0
   15b50:	moveq	r3, #4
   15b54:	movne	r3, #0
   15b58:	add	r3, r2, r3
   15b5c:	ldr	r3, [r3, #-8]
   15b60:	str	r3, [r4]
   15b64:	add	sp, sp, #12
   15b68:	pop	{r4, r5, pc}
   15b6c:	push	{r4, r5, r6, r7, r8, lr}
   15b70:	sub	sp, sp, #8
   15b74:	ldmib	r0, {ip, lr}
   15b78:	mov	r4, r0
   15b7c:	ldr	r5, [sp, #32]
   15b80:	cmp	lr, ip
   15b84:	beq	15b9c <dcngettext@plt+0x4b74>
   15b88:	str	r5, [sp, #32]
   15b8c:	mov	r0, r4
   15b90:	add	sp, sp, #8
   15b94:	pop	{r4, r5, r6, r7, r8, lr}
   15b98:	b	10f8c <fseeko64@plt>
   15b9c:	ldr	lr, [r0, #20]
   15ba0:	ldr	ip, [r0, #16]
   15ba4:	cmp	lr, ip
   15ba8:	bne	15b88 <dcngettext@plt+0x4b60>
   15bac:	ldr	r8, [r0, #36]	; 0x24
   15bb0:	cmp	r8, #0
   15bb4:	bne	15b88 <dcngettext@plt+0x4b60>
   15bb8:	mov	r6, r2
   15bbc:	mov	r7, r3
   15bc0:	bl	10f68 <fileno@plt>
   15bc4:	mov	r2, r6
   15bc8:	mov	r3, r7
   15bcc:	str	r5, [sp]
   15bd0:	bl	10e78 <lseek64@plt>
   15bd4:	mvn	r3, #0
   15bd8:	mvn	r2, #0
   15bdc:	cmp	r1, r3
   15be0:	cmpeq	r0, r2
   15be4:	beq	15c04 <dcngettext@plt+0x4bdc>
   15be8:	ldr	r3, [r4]
   15bec:	strd	r0, [r4, #80]	; 0x50
   15bf0:	mov	r0, r8
   15bf4:	bic	r3, r3, #16
   15bf8:	str	r3, [r4]
   15bfc:	add	sp, sp, #8
   15c00:	pop	{r4, r5, r6, r7, r8, pc}
   15c04:	mvn	r0, #0
   15c08:	b	15bfc <dcngettext@plt+0x4bd4>
   15c0c:	push	{r4, r5, r6, lr}
   15c10:	subs	r4, r0, #0
   15c14:	beq	15c88 <dcngettext@plt+0x4c60>
   15c18:	mov	r1, #47	; 0x2f
   15c1c:	bl	10fbc <strrchr@plt>
   15c20:	subs	r5, r0, #0
   15c24:	beq	15c74 <dcngettext@plt+0x4c4c>
   15c28:	add	r6, r5, #1
   15c2c:	sub	r3, r6, r4
   15c30:	cmp	r3, #6
   15c34:	ble	15c74 <dcngettext@plt+0x4c4c>
   15c38:	mov	r2, #7
   15c3c:	ldr	r1, [pc, #96]	; 15ca4 <dcngettext@plt+0x4c7c>
   15c40:	sub	r0, r5, #6
   15c44:	bl	11004 <strncmp@plt>
   15c48:	cmp	r0, #0
   15c4c:	bne	15c74 <dcngettext@plt+0x4c4c>
   15c50:	mov	r2, #3
   15c54:	ldr	r1, [pc, #76]	; 15ca8 <dcngettext@plt+0x4c80>
   15c58:	mov	r0, r6
   15c5c:	bl	11004 <strncmp@plt>
   15c60:	cmp	r0, #0
   15c64:	movne	r4, r6
   15c68:	ldreq	r3, [pc, #60]	; 15cac <dcngettext@plt+0x4c84>
   15c6c:	addeq	r4, r5, #4
   15c70:	streq	r4, [r3]
   15c74:	ldr	r2, [pc, #52]	; 15cb0 <dcngettext@plt+0x4c88>
   15c78:	ldr	r3, [pc, #52]	; 15cb4 <dcngettext@plt+0x4c8c>
   15c7c:	str	r4, [r2]
   15c80:	str	r4, [r3]
   15c84:	pop	{r4, r5, r6, pc}
   15c88:	ldr	r3, [pc, #40]	; 15cb8 <dcngettext@plt+0x4c90>
   15c8c:	mov	r2, #55	; 0x37
   15c90:	mov	r1, #1
   15c94:	ldr	r3, [r3]
   15c98:	ldr	r0, [pc, #28]	; 15cbc <dcngettext@plt+0x4c94>
   15c9c:	bl	10e6c <fwrite@plt>
   15ca0:	bl	11010 <abort@plt>
   15ca4:	andeq	ip, r1, ip, lsr #12
   15ca8:	andeq	ip, r1, r4, lsr r6
   15cac:	andeq	sp, r2, r0, asr r1
   15cb0:	andeq	sp, r2, ip, lsl #3
   15cb4:	andeq	sp, r2, r4, asr r1
   15cb8:	andeq	sp, r2, r0, ror #2
   15cbc:	strdeq	ip, [r1], -r4
   15cc0:	push	{r4, r5, r6, lr}
   15cc4:	mov	r4, r0
   15cc8:	mov	r5, r1
   15ccc:	bl	1b048 <dcngettext@plt+0xa020>
   15cd0:	ldrb	r3, [r0]
   15cd4:	bic	r3, r3, #32
   15cd8:	cmp	r3, #85	; 0x55
   15cdc:	bne	15d3c <dcngettext@plt+0x4d14>
   15ce0:	ldrb	r3, [r0, #1]
   15ce4:	bic	r3, r3, #32
   15ce8:	cmp	r3, #84	; 0x54
   15cec:	bne	15d78 <dcngettext@plt+0x4d50>
   15cf0:	ldrb	r3, [r0, #2]
   15cf4:	bic	r3, r3, #32
   15cf8:	cmp	r3, #70	; 0x46
   15cfc:	bne	15d78 <dcngettext@plt+0x4d50>
   15d00:	ldrb	r3, [r0, #3]
   15d04:	cmp	r3, #45	; 0x2d
   15d08:	bne	15d78 <dcngettext@plt+0x4d50>
   15d0c:	ldrb	r3, [r0, #4]
   15d10:	cmp	r3, #56	; 0x38
   15d14:	bne	15d78 <dcngettext@plt+0x4d50>
   15d18:	ldrb	r3, [r0, #5]
   15d1c:	cmp	r3, #0
   15d20:	bne	15d78 <dcngettext@plt+0x4d50>
   15d24:	ldrb	r2, [r4]
   15d28:	ldr	r3, [pc, #152]	; 15dc8 <dcngettext@plt+0x4da0>
   15d2c:	ldr	r0, [pc, #152]	; 15dcc <dcngettext@plt+0x4da4>
   15d30:	cmp	r2, #96	; 0x60
   15d34:	movne	r0, r3
   15d38:	pop	{r4, r5, r6, pc}
   15d3c:	cmp	r3, #71	; 0x47
   15d40:	bne	15d78 <dcngettext@plt+0x4d50>
   15d44:	ldrb	r3, [r0, #1]
   15d48:	bic	r3, r3, #32
   15d4c:	cmp	r3, #66	; 0x42
   15d50:	bne	15d78 <dcngettext@plt+0x4d50>
   15d54:	ldrb	r3, [r0, #2]
   15d58:	cmp	r3, #49	; 0x31
   15d5c:	bne	15d78 <dcngettext@plt+0x4d50>
   15d60:	ldrb	r3, [r0, #3]
   15d64:	cmp	r3, #56	; 0x38
   15d68:	bne	15d78 <dcngettext@plt+0x4d50>
   15d6c:	ldrb	r3, [r0, #4]
   15d70:	cmp	r3, #48	; 0x30
   15d74:	beq	15d8c <dcngettext@plt+0x4d64>
   15d78:	ldr	r3, [pc, #80]	; 15dd0 <dcngettext@plt+0x4da8>
   15d7c:	cmp	r5, #9
   15d80:	ldr	r0, [pc, #76]	; 15dd4 <dcngettext@plt+0x4dac>
   15d84:	movne	r0, r3
   15d88:	pop	{r4, r5, r6, pc}
   15d8c:	ldrb	r3, [r0, #5]
   15d90:	cmp	r3, #51	; 0x33
   15d94:	bne	15d78 <dcngettext@plt+0x4d50>
   15d98:	ldrb	r3, [r0, #6]
   15d9c:	cmp	r3, #48	; 0x30
   15da0:	bne	15d78 <dcngettext@plt+0x4d50>
   15da4:	ldrb	r3, [r0, #7]
   15da8:	cmp	r3, #0
   15dac:	bne	15d78 <dcngettext@plt+0x4d50>
   15db0:	ldrb	r2, [r4]
   15db4:	ldr	r3, [pc, #28]	; 15dd8 <dcngettext@plt+0x4db0>
   15db8:	ldr	r0, [pc, #28]	; 15ddc <dcngettext@plt+0x4db4>
   15dbc:	cmp	r2, #96	; 0x60
   15dc0:	movne	r0, r3
   15dc4:	pop	{r4, r5, r6, pc}
   15dc8:	muleq	r1, r0, r6
   15dcc:	andeq	ip, r1, ip, lsl #13
   15dd0:	andeq	ip, r1, r0, lsr #13
   15dd4:	muleq	r1, ip, r6
   15dd8:	muleq	r1, r8, r6
   15ddc:	muleq	r1, r4, r6
   15de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15de4:	sub	sp, sp, #140	; 0x8c
   15de8:	mov	r9, r1
   15dec:	str	r3, [sp, #24]
   15df0:	mov	r3, #1
   15df4:	mov	sl, r0
   15df8:	str	r2, [sp, #44]	; 0x2c
   15dfc:	str	r3, [sp, #28]
   15e00:	bl	10e84 <__ctype_get_mb_cur_max@plt>
   15e04:	ldr	r3, [sp, #180]	; 0xb4
   15e08:	mov	fp, r9
   15e0c:	mov	r9, sl
   15e10:	lsr	r3, r3, #1
   15e14:	and	r3, r3, #1
   15e18:	str	r3, [sp, #40]	; 0x28
   15e1c:	ldr	r3, [sp, #180]	; 0xb4
   15e20:	mov	r2, #0
   15e24:	and	r3, r3, #4
   15e28:	str	r3, [sp, #100]	; 0x64
   15e2c:	ldr	r3, [sp, #180]	; 0xb4
   15e30:	str	r2, [sp, #76]	; 0x4c
   15e34:	and	r3, r3, #1
   15e38:	str	r3, [sp, #96]	; 0x60
   15e3c:	str	r2, [sp, #36]	; 0x24
   15e40:	str	r2, [sp, #56]	; 0x38
   15e44:	str	r2, [sp, #68]	; 0x44
   15e48:	str	r2, [sp, #72]	; 0x48
   15e4c:	str	r2, [sp, #84]	; 0x54
   15e50:	str	r0, [sp, #80]	; 0x50
   15e54:	ldr	r3, [sp, #176]	; 0xb0
   15e58:	cmp	r3, #10
   15e5c:	ldrls	pc, [pc, r3, lsl #2]
   15e60:	b	17038 <dcngettext@plt+0x6010>
   15e64:	muleq	r1, r0, lr
   15e68:			; <UNDEFINED> instruction: 0x000161b0
   15e6c:	andeq	r6, r1, r8, lsl #6
   15e70:	andeq	r6, r1, r4, ror #3
   15e74:	andeq	r6, r1, ip, asr r3
   15e78:	andeq	r6, r1, ip, lsr r3
   15e7c:	andeq	r6, r1, r4, lsl #4
   15e80:	andeq	r6, r1, r8, lsr #4
   15e84:	andeq	r6, r1, r0, asr r2
   15e88:	andeq	r6, r1, r0, asr r2
   15e8c:	andeq	r6, r1, r0, asr r2
   15e90:	mov	r3, #0
   15e94:	ldr	r1, [sp, #56]	; 0x38
   15e98:	ldr	r2, [sp, #176]	; 0xb0
   15e9c:	ldr	lr, [sp, #176]	; 0xb0
   15ea0:	mov	r8, r3
   15ea4:	mov	ip, r3
   15ea8:	str	r3, [sp, #40]	; 0x28
   15eac:	mov	r3, r1
   15eb0:	cmp	r2, #2
   15eb4:	moveq	r3, #0
   15eb8:	andne	r3, r3, #1
   15ebc:	mov	r0, r3
   15ec0:	str	r3, [sp, #92]	; 0x5c
   15ec4:	ldr	r3, [sp, #68]	; 0x44
   15ec8:	sub	lr, lr, #2
   15ecc:	adds	r2, r3, #0
   15ed0:	movne	r2, #1
   15ed4:	and	r3, r1, ip
   15ed8:	and	r3, r2, r3
   15edc:	clz	lr, lr
   15ee0:	str	r3, [sp, #88]	; 0x58
   15ee4:	lsr	lr, lr, #5
   15ee8:	mov	r3, ip
   15eec:	and	r3, r3, lr
   15ef0:	mov	sl, #0
   15ef4:	and	r0, r2, r0
   15ef8:	str	r3, [sp, #64]	; 0x40
   15efc:	eor	r3, r1, #1
   15f00:	str	lr, [sp, #52]	; 0x34
   15f04:	str	r0, [sp, #48]	; 0x30
   15f08:	str	r3, [sp, #60]	; 0x3c
   15f0c:	ldr	r3, [sp, #24]
   15f10:	cmn	r3, #1
   15f14:	beq	16444 <dcngettext@plt+0x541c>
   15f18:	subs	r7, r3, sl
   15f1c:	movne	r7, #1
   15f20:	cmp	r7, #0
   15f24:	beq	1645c <dcngettext@plt+0x5434>
   15f28:	ldr	r3, [sp, #48]	; 0x30
   15f2c:	cmp	r3, #0
   15f30:	beq	167c8 <dcngettext@plt+0x57a0>
   15f34:	ldr	r2, [sp, #68]	; 0x44
   15f38:	ldr	r1, [sp, #24]
   15f3c:	cmp	r2, #1
   15f40:	mov	r3, r2
   15f44:	movls	r3, #0
   15f48:	movhi	r3, #1
   15f4c:	cmn	r1, #1
   15f50:	movne	r3, #0
   15f54:	cmp	r3, #0
   15f58:	add	r4, sl, r2
   15f5c:	beq	15f6c <dcngettext@plt+0x4f44>
   15f60:	ldr	r0, [sp, #44]	; 0x2c
   15f64:	bl	10f14 <strlen@plt>
   15f68:	str	r0, [sp, #24]
   15f6c:	ldr	r3, [sp, #24]
   15f70:	cmp	r3, r4
   15f74:	ldr	r3, [sp, #44]	; 0x2c
   15f78:	add	r5, r3, sl
   15f7c:	bcc	167d0 <dcngettext@plt+0x57a8>
   15f80:	mov	r0, r5
   15f84:	ldr	r2, [sp, #68]	; 0x44
   15f88:	ldr	r1, [sp, #72]	; 0x48
   15f8c:	bl	10e18 <memcmp@plt>
   15f90:	cmp	r0, #0
   15f94:	bne	167d0 <dcngettext@plt+0x57a8>
   15f98:	ldr	r3, [sp, #40]	; 0x28
   15f9c:	cmp	r3, #0
   15fa0:	bne	1718c <dcngettext@plt+0x6164>
   15fa4:	ldrb	r4, [r5]
   15fa8:	cmp	r4, #126	; 0x7e
   15fac:	ldrls	pc, [pc, r4, lsl #2]
   15fb0:	b	170c8 <dcngettext@plt+0x60a0>
   15fb4:	andeq	r6, r1, r8, lsl #13
   15fb8:	andeq	r7, r1, r8, asr #1
   15fbc:	andeq	r7, r1, r8, asr #1
   15fc0:	andeq	r7, r1, r8, asr #1
   15fc4:	andeq	r7, r1, r8, asr #1
   15fc8:	andeq	r7, r1, r8, asr #1
   15fcc:	andeq	r7, r1, r8, asr #1
   15fd0:	andeq	r6, r1, r4, ror r6
   15fd4:	andeq	r6, r1, r0, ror #12
   15fd8:	andeq	r6, r1, ip, lsr r6
   15fdc:	andeq	r6, r1, ip, lsl r6
   15fe0:	andeq	r6, r1, ip, asr #12
   15fe4:	andeq	r6, r1, r4, lsl #11
   15fe8:			; <UNDEFINED> instruction: 0x000167b8
   15fec:	andeq	r7, r1, r8, asr #1
   15ff0:	andeq	r7, r1, r8, asr #1
   15ff4:	andeq	r7, r1, r8, asr #1
   15ff8:	andeq	r7, r1, r8, asr #1
   15ffc:	andeq	r7, r1, r8, asr #1
   16000:	andeq	r7, r1, r8, asr #1
   16004:	andeq	r7, r1, r8, asr #1
   16008:	andeq	r7, r1, r8, asr #1
   1600c:	andeq	r7, r1, r8, asr #1
   16010:	andeq	r7, r1, r8, asr #1
   16014:	andeq	r7, r1, r8, asr #1
   16018:	andeq	r7, r1, r8, asr #1
   1601c:	andeq	r7, r1, r8, asr #1
   16020:	andeq	r7, r1, r8, asr #1
   16024:	andeq	r7, r1, r8, asr #1
   16028:	andeq	r7, r1, r8, asr #1
   1602c:	andeq	r7, r1, r8, asr #1
   16030:	andeq	r7, r1, r8, asr #1
   16034:	andeq	r6, r1, r8, lsr #15
   16038:	andeq	r6, r1, r8, lsl #15
   1603c:	andeq	r6, r1, r8, lsl #15
   16040:	andeq	r6, r1, r8, ror #14
   16044:	andeq	r6, r1, r8, lsl #15
   16048:	andeq	r6, r1, r4, ror r5
   1604c:	andeq	r6, r1, r8, lsl #15
   16050:	andeq	r6, r1, r0, asr r5
   16054:	andeq	r6, r1, r8, lsl #15
   16058:	andeq	r6, r1, r8, lsl #15
   1605c:	andeq	r6, r1, r8, lsl #15
   16060:	andeq	r6, r1, r4, ror r5
   16064:	andeq	r6, r1, r4, ror r5
   16068:	andeq	r6, r1, r4, ror r5
   1606c:	andeq	r6, r1, r4, ror r5
   16070:	andeq	r6, r1, r4, ror r5
   16074:	andeq	r6, r1, r4, ror r5
   16078:	andeq	r6, r1, r4, ror r5
   1607c:	andeq	r6, r1, r4, ror r5
   16080:	andeq	r6, r1, r4, ror r5
   16084:	andeq	r6, r1, r4, ror r5
   16088:	andeq	r6, r1, r4, ror r5
   1608c:	andeq	r6, r1, r4, ror r5
   16090:	andeq	r6, r1, r4, ror r5
   16094:	andeq	r6, r1, r4, ror r5
   16098:	andeq	r6, r1, r4, ror r5
   1609c:	andeq	r6, r1, r4, ror r5
   160a0:	andeq	r6, r1, r8, lsl #15
   160a4:	andeq	r6, r1, r8, lsl #15
   160a8:	andeq	r6, r1, r8, lsl #15
   160ac:	andeq	r6, r1, r8, lsl #15
   160b0:	andeq	r6, r1, r0, lsl #10
   160b4:	andeq	r7, r1, r8, asr #1
   160b8:	andeq	r6, r1, r4, ror r5
   160bc:	andeq	r6, r1, r4, ror r5
   160c0:	andeq	r6, r1, r4, ror r5
   160c4:	andeq	r6, r1, r4, ror r5
   160c8:	andeq	r6, r1, r4, ror r5
   160cc:	andeq	r6, r1, r4, ror r5
   160d0:	andeq	r6, r1, r4, ror r5
   160d4:	andeq	r6, r1, r4, ror r5
   160d8:	andeq	r6, r1, r4, ror r5
   160dc:	andeq	r6, r1, r4, ror r5
   160e0:	andeq	r6, r1, r4, ror r5
   160e4:	andeq	r6, r1, r4, ror r5
   160e8:	andeq	r6, r1, r4, ror r5
   160ec:	andeq	r6, r1, r4, ror r5
   160f0:	andeq	r6, r1, r4, ror r5
   160f4:	andeq	r6, r1, r4, ror r5
   160f8:	andeq	r6, r1, r4, ror r5
   160fc:	andeq	r6, r1, r4, ror r5
   16100:	andeq	r6, r1, r4, ror r5
   16104:	andeq	r6, r1, r4, ror r5
   16108:	andeq	r6, r1, r4, ror r5
   1610c:	andeq	r6, r1, r4, ror r5
   16110:	andeq	r6, r1, r4, ror r5
   16114:	andeq	r6, r1, r4, ror r5
   16118:	andeq	r6, r1, r4, ror r5
   1611c:	andeq	r6, r1, r4, ror r5
   16120:	andeq	r6, r1, r8, lsl #15
   16124:	andeq	r6, r1, ip, asr #9
   16128:	andeq	r6, r1, r4, ror r5
   1612c:	andeq	r6, r1, r8, lsl #15
   16130:	andeq	r6, r1, r4, ror r5
   16134:	andeq	r6, r1, r8, lsl #15
   16138:	andeq	r6, r1, r4, ror r5
   1613c:	andeq	r6, r1, r4, ror r5
   16140:	andeq	r6, r1, r4, ror r5
   16144:	andeq	r6, r1, r4, ror r5
   16148:	andeq	r6, r1, r4, ror r5
   1614c:	andeq	r6, r1, r4, ror r5
   16150:	andeq	r6, r1, r4, ror r5
   16154:	andeq	r6, r1, r4, ror r5
   16158:	andeq	r6, r1, r4, ror r5
   1615c:	andeq	r6, r1, r4, ror r5
   16160:	andeq	r6, r1, r4, ror r5
   16164:	andeq	r6, r1, r4, ror r5
   16168:	andeq	r6, r1, r4, ror r5
   1616c:	andeq	r6, r1, r4, ror r5
   16170:	andeq	r6, r1, r4, ror r5
   16174:	andeq	r6, r1, r4, ror r5
   16178:	andeq	r6, r1, r4, ror r5
   1617c:	andeq	r6, r1, r4, ror r5
   16180:	andeq	r6, r1, r4, ror r5
   16184:	andeq	r6, r1, r4, ror r5
   16188:	andeq	r6, r1, r4, ror r5
   1618c:	andeq	r6, r1, r4, ror r5
   16190:	andeq	r6, r1, r4, ror r5
   16194:	andeq	r6, r1, r4, ror r5
   16198:	andeq	r6, r1, r4, ror r5
   1619c:	andeq	r6, r1, r4, ror r5
   161a0:	andeq	r6, r1, r4, lsl #7
   161a4:	andeq	r6, r1, r8, lsl #15
   161a8:	andeq	r6, r1, r4, lsl #7
   161ac:	andeq	r6, r1, r8, ror #14
   161b0:	mov	r3, #1
   161b4:	str	r3, [sp, #40]	; 0x28
   161b8:	str	r3, [sp, #68]	; 0x44
   161bc:	mov	r8, #0
   161c0:	ldr	r3, [pc, #4056]	; 171a0 <dcngettext@plt+0x6178>
   161c4:	str	r3, [sp, #72]	; 0x48
   161c8:	mov	r3, #2
   161cc:	str	r3, [sp, #176]	; 0xb0
   161d0:	ldr	r1, [sp, #56]	; 0x38
   161d4:	mov	r2, r3
   161d8:	ldr	ip, [sp, #40]	; 0x28
   161dc:	mov	lr, r3
   161e0:	b	15eac <dcngettext@plt+0x4e84>
   161e4:	mov	r3, #1
   161e8:	str	r3, [sp, #56]	; 0x38
   161ec:	str	r3, [sp, #68]	; 0x44
   161f0:	str	r3, [sp, #40]	; 0x28
   161f4:	ldr	r3, [pc, #4004]	; 171a0 <dcngettext@plt+0x6178>
   161f8:	mov	r8, #0
   161fc:	str	r3, [sp, #72]	; 0x48
   16200:	b	161c8 <dcngettext@plt+0x51a0>
   16204:	mov	r3, #1
   16208:	str	r3, [sp, #56]	; 0x38
   1620c:	str	r3, [sp, #68]	; 0x44
   16210:	str	r3, [sp, #40]	; 0x28
   16214:	ldr	r3, [pc, #3976]	; 171a4 <dcngettext@plt+0x617c>
   16218:	mov	r8, #0
   1621c:	str	r3, [sp, #72]	; 0x48
   16220:	mov	r3, #5
   16224:	b	161cc <dcngettext@plt+0x51a4>
   16228:	mov	r3, #0
   1622c:	str	r3, [sp, #40]	; 0x28
   16230:	mov	r3, #1
   16234:	str	r3, [sp, #56]	; 0x38
   16238:	mov	r8, #0
   1623c:	mov	r1, r3
   16240:	ldr	r2, [sp, #176]	; 0xb0
   16244:	ldr	ip, [sp, #40]	; 0x28
   16248:	ldr	lr, [sp, #176]	; 0xb0
   1624c:	b	15eac <dcngettext@plt+0x4e84>
   16250:	ldr	r3, [sp, #176]	; 0xb0
   16254:	cmp	r3, #10
   16258:	beq	1629c <dcngettext@plt+0x5274>
   1625c:	mov	r2, #5
   16260:	ldr	r1, [pc, #3904]	; 171a8 <dcngettext@plt+0x6180>
   16264:	mov	r0, #0
   16268:	bl	10e30 <dcgettext@plt>
   1626c:	ldr	r2, [pc, #3892]	; 171a8 <dcngettext@plt+0x6180>
   16270:	cmp	r0, r2
   16274:	str	r0, [sp, #188]	; 0xbc
   16278:	beq	17334 <dcngettext@plt+0x630c>
   1627c:	mov	r2, #5
   16280:	ldr	r1, [pc, #3864]	; 171a0 <dcngettext@plt+0x6178>
   16284:	mov	r0, #0
   16288:	bl	10e30 <dcgettext@plt>
   1628c:	ldr	r2, [pc, #3852]	; 171a0 <dcngettext@plt+0x6178>
   16290:	cmp	r0, r2
   16294:	str	r0, [sp, #192]	; 0xc0
   16298:	beq	17324 <dcngettext@plt+0x62fc>
   1629c:	ldr	r8, [sp, #40]	; 0x28
   162a0:	cmp	r8, #0
   162a4:	movne	r8, #0
   162a8:	bne	162d8 <dcngettext@plt+0x52b0>
   162ac:	ldr	r3, [sp, #188]	; 0xbc
   162b0:	ldrb	r3, [r3]
   162b4:	cmp	r3, #0
   162b8:	beq	162d8 <dcngettext@plt+0x52b0>
   162bc:	ldr	r2, [sp, #188]	; 0xbc
   162c0:	cmp	fp, r8
   162c4:	strbhi	r3, [r9, r8]
   162c8:	ldrb	r3, [r2, #1]!
   162cc:	add	r8, r8, #1
   162d0:	cmp	r3, #0
   162d4:	bne	162c0 <dcngettext@plt+0x5298>
   162d8:	ldr	r0, [sp, #192]	; 0xc0
   162dc:	bl	10f14 <strlen@plt>
   162e0:	ldr	r3, [sp, #192]	; 0xc0
   162e4:	ldr	r2, [sp, #176]	; 0xb0
   162e8:	str	r3, [sp, #72]	; 0x48
   162ec:	mov	r3, #1
   162f0:	str	r3, [sp, #56]	; 0x38
   162f4:	mov	r1, r3
   162f8:	ldr	ip, [sp, #40]	; 0x28
   162fc:	ldr	lr, [sp, #176]	; 0xb0
   16300:	str	r0, [sp, #68]	; 0x44
   16304:	b	15eac <dcngettext@plt+0x4e84>
   16308:	ldr	r3, [sp, #40]	; 0x28
   1630c:	cmp	r3, #0
   16310:	beq	16fb8 <dcngettext@plt+0x5f90>
   16314:	mov	r3, #1
   16318:	str	r3, [sp, #68]	; 0x44
   1631c:	ldr	r3, [pc, #3708]	; 171a0 <dcngettext@plt+0x6178>
   16320:	str	r3, [sp, #72]	; 0x48
   16324:	mov	r8, #0
   16328:	ldr	r1, [sp, #56]	; 0x38
   1632c:	ldr	r2, [sp, #176]	; 0xb0
   16330:	ldr	ip, [sp, #40]	; 0x28
   16334:	ldr	lr, [sp, #176]	; 0xb0
   16338:	b	15eac <dcngettext@plt+0x4e84>
   1633c:	ldr	r3, [sp, #40]	; 0x28
   16340:	cmp	r3, #0
   16344:	beq	1703c <dcngettext@plt+0x6014>
   16348:	str	r3, [sp, #56]	; 0x38
   1634c:	mov	r3, #1
   16350:	str	r3, [sp, #68]	; 0x44
   16354:	ldr	r3, [pc, #3656]	; 171a4 <dcngettext@plt+0x617c>
   16358:	b	16320 <dcngettext@plt+0x52f8>
   1635c:	ldr	r3, [sp, #40]	; 0x28
   16360:	cmp	r3, #0
   16364:	mov	r3, #1
   16368:	streq	r3, [sp, #56]	; 0x38
   1636c:	beq	16fb8 <dcngettext@plt+0x5f90>
   16370:	str	r3, [sp, #68]	; 0x44
   16374:	ldr	r3, [pc, #3620]	; 171a0 <dcngettext@plt+0x6178>
   16378:	mov	r8, #0
   1637c:	str	r3, [sp, #72]	; 0x48
   16380:	b	161c8 <dcngettext@plt+0x51a0>
   16384:	ldr	r3, [sp, #24]
   16388:	ldr	r6, [sp, #48]	; 0x30
   1638c:	cmn	r3, #1
   16390:	beq	169ec <dcngettext@plt+0x59c4>
   16394:	subs	r3, r3, #1
   16398:	movne	r3, #1
   1639c:	cmp	r3, #0
   163a0:	beq	1676c <dcngettext@plt+0x5744>
   163a4:	ldr	r1, [sp, #52]	; 0x34
   163a8:	mov	r7, r3
   163ac:	mov	r3, #0
   163b0:	str	r3, [sp, #32]
   163b4:	ldr	r3, [sp, #60]	; 0x3c
   163b8:	orr	r2, r1, r3
   163bc:	ldr	r3, [sp, #40]	; 0x28
   163c0:	eor	r2, r2, #1
   163c4:	orr	r2, r3, r2
   163c8:	tst	r2, #255	; 0xff
   163cc:	bne	16cf0 <dcngettext@plt+0x5cc8>
   163d0:	cmp	r6, #0
   163d4:	bne	165b0 <dcngettext@plt+0x5588>
   163d8:	ldr	r3, [sp, #36]	; 0x24
   163dc:	add	sl, sl, #1
   163e0:	and	r3, r3, r7
   163e4:	uxtb	r6, r3
   163e8:	cmp	r6, #0
   163ec:	beq	16418 <dcngettext@plt+0x53f0>
   163f0:	cmp	fp, r8
   163f4:	movhi	r3, #39	; 0x27
   163f8:	strbhi	r3, [r9, r8]
   163fc:	add	r3, r8, #1
   16400:	cmp	fp, r3
   16404:	movhi	r2, #39	; 0x27
   16408:	add	r8, r8, #2
   1640c:	strbhi	r2, [r9, r3]
   16410:	mov	r3, #0
   16414:	str	r3, [sp, #36]	; 0x24
   16418:	ldr	r2, [sp, #32]
   1641c:	cmp	r8, fp
   16420:	ldr	r3, [sp, #28]
   16424:	strbcc	r4, [r9, r8]
   16428:	cmp	r2, #0
   1642c:	moveq	r3, #0
   16430:	str	r3, [sp, #28]
   16434:	ldr	r3, [sp, #24]
   16438:	add	r8, r8, #1
   1643c:	cmn	r3, #1
   16440:	bne	15f18 <dcngettext@plt+0x4ef0>
   16444:	ldr	r3, [sp, #44]	; 0x2c
   16448:	ldrb	r3, [r3, sl]
   1644c:	adds	r7, r3, #0
   16450:	movne	r7, #1
   16454:	cmp	r7, #0
   16458:	bne	15f28 <dcngettext@plt+0x4f00>
   1645c:	ldr	r3, [sp, #64]	; 0x40
   16460:	cmp	r8, #0
   16464:	movne	r3, #0
   16468:	andeq	r3, r3, #1
   1646c:	cmp	r3, #0
   16470:	str	r3, [sp, #64]	; 0x40
   16474:	bne	16f18 <dcngettext@plt+0x5ef0>
   16478:	ldr	r3, [sp, #40]	; 0x28
   1647c:	ldr	r2, [sp, #52]	; 0x34
   16480:	eor	r3, r3, #1
   16484:	ands	r2, r2, r3
   16488:	beq	17344 <dcngettext@plt+0x631c>
   1648c:	ldr	r3, [sp, #76]	; 0x4c
   16490:	cmp	r3, #0
   16494:	beq	17314 <dcngettext@plt+0x62ec>
   16498:	ldr	r3, [sp, #28]
   1649c:	cmp	r3, #0
   164a0:	bne	172d0 <dcngettext@plt+0x62a8>
   164a4:	ldr	r2, [sp, #84]	; 0x54
   164a8:	clz	r3, fp
   164ac:	cmp	r2, #0
   164b0:	lsr	r3, r3, #5
   164b4:	moveq	r3, #0
   164b8:	cmp	r3, #0
   164bc:	beq	17270 <dcngettext@plt+0x6248>
   164c0:	mov	fp, r2
   164c4:	str	r3, [sp, #76]	; 0x4c
   164c8:	b	15e54 <dcngettext@plt+0x4e2c>
   164cc:	ldr	r3, [sp, #176]	; 0xb0
   164d0:	ldr	r6, [sp, #48]	; 0x30
   164d4:	cmp	r3, #2
   164d8:	beq	16a10 <dcngettext@plt+0x59e8>
   164dc:	ldr	r3, [sp, #88]	; 0x58
   164e0:	cmp	r3, #0
   164e4:	beq	16f94 <dcngettext@plt+0x5f6c>
   164e8:	mov	r3, #0
   164ec:	add	sl, sl, #1
   164f0:	ldr	r6, [sp, #36]	; 0x24
   164f4:	str	r3, [sp, #32]
   164f8:	mov	r4, #92	; 0x5c
   164fc:	b	163e8 <dcngettext@plt+0x53c0>
   16500:	ldr	r3, [sp, #176]	; 0xb0
   16504:	ldr	r6, [sp, #48]	; 0x30
   16508:	cmp	r3, #2
   1650c:	beq	16a40 <dcngettext@plt+0x5a18>
   16510:	cmp	r3, #5
   16514:	bne	16fa4 <dcngettext@plt+0x5f7c>
   16518:	ldr	r3, [sp, #100]	; 0x64
   1651c:	cmp	r3, #0
   16520:	beq	17008 <dcngettext@plt+0x5fe0>
   16524:	ldr	r2, [sp, #24]
   16528:	add	r3, sl, #2
   1652c:	cmp	r2, r3
   16530:	bls	16540 <dcngettext@plt+0x5518>
   16534:	ldrb	r4, [r5, #1]
   16538:	cmp	r4, #63	; 0x3f
   1653c:	beq	171b0 <dcngettext@plt+0x6188>
   16540:	mov	r1, #0
   16544:	str	r1, [sp, #32]
   16548:	mov	r4, #63	; 0x3f
   1654c:	b	163b4 <dcngettext@plt+0x538c>
   16550:	ldr	r3, [sp, #176]	; 0xb0
   16554:	ldr	r6, [sp, #48]	; 0x30
   16558:	cmp	r3, #2
   1655c:	beq	16a6c <dcngettext@plt+0x5a44>
   16560:	str	r7, [sp, #32]
   16564:	str	r7, [sp, #76]	; 0x4c
   16568:	mov	r1, #0
   1656c:	mov	r4, #39	; 0x27
   16570:	b	163b4 <dcngettext@plt+0x538c>
   16574:	ldr	r6, [sp, #48]	; 0x30
   16578:	ldr	r1, [sp, #52]	; 0x34
   1657c:	str	r7, [sp, #32]
   16580:	b	163b4 <dcngettext@plt+0x538c>
   16584:	ldr	r6, [sp, #48]	; 0x30
   16588:	ldr	r1, [sp, #52]	; 0x34
   1658c:	mov	r4, #12
   16590:	mov	r3, #102	; 0x66
   16594:	ldr	r2, [sp, #56]	; 0x38
   16598:	cmp	r2, #0
   1659c:	streq	r2, [sp, #32]
   165a0:	beq	163b4 <dcngettext@plt+0x538c>
   165a4:	mov	r4, r3
   165a8:	mov	r3, #0
   165ac:	str	r3, [sp, #32]
   165b0:	ldr	r3, [sp, #40]	; 0x28
   165b4:	cmp	r3, #0
   165b8:	bne	16d28 <dcngettext@plt+0x5d00>
   165bc:	ldr	r3, [sp, #36]	; 0x24
   165c0:	eor	r3, r3, #1
   165c4:	and	r3, r3, r1
   165c8:	ands	r3, r3, #255	; 0xff
   165cc:	beq	16604 <dcngettext@plt+0x55dc>
   165d0:	cmp	fp, r8
   165d4:	movhi	r2, #39	; 0x27
   165d8:	strbhi	r2, [r9, r8]
   165dc:	add	r2, r8, #1
   165e0:	cmp	fp, r2
   165e4:	movhi	r1, #36	; 0x24
   165e8:	strbhi	r1, [r9, r2]
   165ec:	add	r2, r8, #2
   165f0:	cmp	fp, r2
   165f4:	add	r8, r8, #3
   165f8:	movhi	r1, #39	; 0x27
   165fc:	strbhi	r1, [r9, r2]
   16600:	str	r3, [sp, #36]	; 0x24
   16604:	cmp	fp, r8
   16608:	movhi	r3, #92	; 0x5c
   1660c:	strbhi	r3, [r9, r8]
   16610:	add	sl, sl, #1
   16614:	add	r8, r8, #1
   16618:	b	16418 <dcngettext@plt+0x53f0>
   1661c:	ldr	r6, [sp, #48]	; 0x30
   16620:	mov	r4, #10
   16624:	mov	r3, #110	; 0x6e
   16628:	ldr	r2, [sp, #64]	; 0x40
   1662c:	cmp	r2, #0
   16630:	bne	170b0 <dcngettext@plt+0x6088>
   16634:	ldr	r1, [sp, #52]	; 0x34
   16638:	b	16594 <dcngettext@plt+0x556c>
   1663c:	ldr	r6, [sp, #48]	; 0x30
   16640:	ldr	r1, [sp, #52]	; 0x34
   16644:	mov	r3, #116	; 0x74
   16648:	b	16594 <dcngettext@plt+0x556c>
   1664c:	ldr	r6, [sp, #48]	; 0x30
   16650:	ldr	r1, [sp, #52]	; 0x34
   16654:	mov	r4, #11
   16658:	mov	r3, #118	; 0x76
   1665c:	b	16594 <dcngettext@plt+0x556c>
   16660:	ldr	r6, [sp, #48]	; 0x30
   16664:	ldr	r1, [sp, #52]	; 0x34
   16668:	mov	r4, #8
   1666c:	mov	r3, #98	; 0x62
   16670:	b	16594 <dcngettext@plt+0x556c>
   16674:	ldr	r6, [sp, #48]	; 0x30
   16678:	ldr	r1, [sp, #52]	; 0x34
   1667c:	mov	r4, #7
   16680:	mov	r3, #97	; 0x61
   16684:	b	16594 <dcngettext@plt+0x556c>
   16688:	ldr	r3, [sp, #56]	; 0x38
   1668c:	ldr	r6, [sp, #48]	; 0x30
   16690:	cmp	r3, #0
   16694:	beq	16b58 <dcngettext@plt+0x5b30>
   16698:	ldr	r3, [sp, #40]	; 0x28
   1669c:	cmp	r3, #0
   166a0:	bne	1718c <dcngettext@plt+0x6164>
   166a4:	ldr	r3, [sp, #36]	; 0x24
   166a8:	ldr	r2, [sp, #52]	; 0x34
   166ac:	eor	r3, r3, #1
   166b0:	ands	r3, r2, r3
   166b4:	moveq	r2, r8
   166b8:	beq	166f0 <dcngettext@plt+0x56c8>
   166bc:	cmp	fp, r8
   166c0:	movhi	r2, #39	; 0x27
   166c4:	strbhi	r2, [r9, r8]
   166c8:	add	r2, r8, #1
   166cc:	cmp	fp, r2
   166d0:	movhi	r1, #36	; 0x24
   166d4:	strbhi	r1, [r9, r2]
   166d8:	add	r2, r8, #2
   166dc:	cmp	fp, r2
   166e0:	movhi	r1, #39	; 0x27
   166e4:	strbhi	r1, [r9, r2]
   166e8:	add	r2, r8, #3
   166ec:	str	r3, [sp, #36]	; 0x24
   166f0:	cmp	fp, r2
   166f4:	movhi	r3, #92	; 0x5c
   166f8:	strbhi	r3, [r9, r2]
   166fc:	ldr	r3, [sp, #92]	; 0x5c
   16700:	add	r8, r2, #1
   16704:	cmp	r3, #0
   16708:	beq	1708c <dcngettext@plt+0x6064>
   1670c:	ldr	r1, [sp, #24]
   16710:	add	r3, sl, #1
   16714:	cmp	r1, r3
   16718:	bls	16750 <dcngettext@plt+0x5728>
   1671c:	ldr	r1, [sp, #44]	; 0x2c
   16720:	ldrb	r3, [r1, r3]
   16724:	sub	r3, r3, #48	; 0x30
   16728:	cmp	r3, #9
   1672c:	bhi	16750 <dcngettext@plt+0x5728>
   16730:	cmp	fp, r8
   16734:	movhi	r3, #48	; 0x30
   16738:	strbhi	r3, [r9, r8]
   1673c:	add	r3, r2, #2
   16740:	cmp	fp, r3
   16744:	add	r8, r2, #3
   16748:	movhi	r1, #48	; 0x30
   1674c:	strbhi	r1, [r9, r3]
   16750:	ldr	r3, [sp, #40]	; 0x28
   16754:	ldr	r1, [sp, #52]	; 0x34
   16758:	mov	r7, r3
   1675c:	str	r3, [sp, #32]
   16760:	mov	r4, #48	; 0x30
   16764:	b	163b4 <dcngettext@plt+0x538c>
   16768:	ldr	r6, [sp, #48]	; 0x30
   1676c:	cmp	sl, #0
   16770:	streq	r7, [sp, #32]
   16774:	beq	16794 <dcngettext@plt+0x576c>
   16778:	mov	r3, #0
   1677c:	ldr	r1, [sp, #52]	; 0x34
   16780:	str	r3, [sp, #32]
   16784:	b	163b4 <dcngettext@plt+0x538c>
   16788:	ldr	r6, [sp, #48]	; 0x30
   1678c:	mov	r3, #0
   16790:	str	r3, [sp, #32]
   16794:	ldr	r3, [sp, #64]	; 0x40
   16798:	cmp	r3, #0
   1679c:	bne	16f18 <dcngettext@plt+0x5ef0>
   167a0:	ldr	r1, [sp, #52]	; 0x34
   167a4:	b	163b4 <dcngettext@plt+0x538c>
   167a8:	ldr	r3, [sp, #48]	; 0x30
   167ac:	mov	r6, r3
   167b0:	str	r3, [sp, #32]
   167b4:	b	16794 <dcngettext@plt+0x576c>
   167b8:	ldr	r6, [sp, #48]	; 0x30
   167bc:	mov	r4, #13
   167c0:	mov	r3, #114	; 0x72
   167c4:	b	16628 <dcngettext@plt+0x5600>
   167c8:	ldr	r3, [sp, #44]	; 0x2c
   167cc:	add	r5, r3, sl
   167d0:	ldrb	r4, [r5]
   167d4:	cmp	r4, #126	; 0x7e
   167d8:	ldrls	pc, [pc, r4, lsl #2]
   167dc:	b	16b78 <dcngettext@plt+0x5b50>
   167e0:	andeq	r6, r1, r8, asr #22
   167e4:	andeq	r6, r1, r8, ror fp
   167e8:	andeq	r6, r1, r8, ror fp
   167ec:	andeq	r6, r1, r8, ror fp
   167f0:	andeq	r6, r1, r8, ror fp
   167f4:	andeq	r6, r1, r8, ror fp
   167f8:	andeq	r6, r1, r8, ror fp
   167fc:	andeq	r6, r1, r0, asr #22
   16800:	andeq	r6, r1, r8, lsr fp
   16804:	andeq	r6, r1, ip, lsr #22
   16808:	andeq	r6, r1, r4, lsr #22
   1680c:	andeq	r6, r1, ip, lsl fp
   16810:	andeq	r6, r1, r4, lsl fp
   16814:	andeq	r6, r1, ip, lsl #22
   16818:	andeq	r6, r1, r8, ror fp
   1681c:	andeq	r6, r1, r8, ror fp
   16820:	andeq	r6, r1, r8, ror fp
   16824:	andeq	r6, r1, r8, ror fp
   16828:	andeq	r6, r1, r8, ror fp
   1682c:	andeq	r6, r1, r8, ror fp
   16830:	andeq	r6, r1, r8, ror fp
   16834:	andeq	r6, r1, r8, ror fp
   16838:	andeq	r6, r1, r8, ror fp
   1683c:	andeq	r6, r1, r8, ror fp
   16840:	andeq	r6, r1, r8, ror fp
   16844:	andeq	r6, r1, r8, ror fp
   16848:	andeq	r6, r1, r8, ror fp
   1684c:	andeq	r6, r1, r8, ror fp
   16850:	andeq	r6, r1, r8, ror fp
   16854:	andeq	r6, r1, r8, ror fp
   16858:	andeq	r6, r1, r8, ror fp
   1685c:	andeq	r6, r1, r8, ror fp
   16860:	andeq	r6, r1, r0, lsl #22
   16864:	strdeq	r6, [r1], -r8
   16868:	strdeq	r6, [r1], -r8
   1686c:	strdeq	r6, [r1], -r0
   16870:	strdeq	r6, [r1], -r8
   16874:	andeq	r6, r1, r8, ror #21
   16878:	strdeq	r6, [r1], -r8
   1687c:	andeq	r6, r1, ip, asr sl
   16880:	strdeq	r6, [r1], -r8
   16884:	strdeq	r6, [r1], -r8
   16888:	strdeq	r6, [r1], -r8
   1688c:	andeq	r6, r1, r8, ror #21
   16890:	andeq	r6, r1, r8, ror #21
   16894:	andeq	r6, r1, r8, ror #21
   16898:	andeq	r6, r1, r8, ror #21
   1689c:	andeq	r6, r1, r8, ror #21
   168a0:	andeq	r6, r1, r8, ror #21
   168a4:	andeq	r6, r1, r8, ror #21
   168a8:	andeq	r6, r1, r8, ror #21
   168ac:	andeq	r6, r1, r8, ror #21
   168b0:	andeq	r6, r1, r8, ror #21
   168b4:	andeq	r6, r1, r8, ror #21
   168b8:	andeq	r6, r1, r8, ror #21
   168bc:	andeq	r6, r1, r8, ror #21
   168c0:	andeq	r6, r1, r8, ror #21
   168c4:	andeq	r6, r1, r8, ror #21
   168c8:	andeq	r6, r1, r8, ror #21
   168cc:	strdeq	r6, [r1], -r8
   168d0:	strdeq	r6, [r1], -r8
   168d4:	strdeq	r6, [r1], -r8
   168d8:	strdeq	r6, [r1], -r8
   168dc:	andeq	r6, r1, r0, lsr sl
   168e0:	andeq	r6, r1, r8, ror fp
   168e4:	andeq	r6, r1, r8, ror #21
   168e8:	andeq	r6, r1, r8, ror #21
   168ec:	andeq	r6, r1, r8, ror #21
   168f0:	andeq	r6, r1, r8, ror #21
   168f4:	andeq	r6, r1, r8, ror #21
   168f8:	andeq	r6, r1, r8, ror #21
   168fc:	andeq	r6, r1, r8, ror #21
   16900:	andeq	r6, r1, r8, ror #21
   16904:	andeq	r6, r1, r8, ror #21
   16908:	andeq	r6, r1, r8, ror #21
   1690c:	andeq	r6, r1, r8, ror #21
   16910:	andeq	r6, r1, r8, ror #21
   16914:	andeq	r6, r1, r8, ror #21
   16918:	andeq	r6, r1, r8, ror #21
   1691c:	andeq	r6, r1, r8, ror #21
   16920:	andeq	r6, r1, r8, ror #21
   16924:	andeq	r6, r1, r8, ror #21
   16928:	andeq	r6, r1, r8, ror #21
   1692c:	andeq	r6, r1, r8, ror #21
   16930:	andeq	r6, r1, r8, ror #21
   16934:	andeq	r6, r1, r8, ror #21
   16938:	andeq	r6, r1, r8, ror #21
   1693c:	andeq	r6, r1, r8, ror #21
   16940:	andeq	r6, r1, r8, ror #21
   16944:	andeq	r6, r1, r8, ror #21
   16948:	andeq	r6, r1, r8, ror #21
   1694c:	strdeq	r6, [r1], -r8
   16950:	andeq	r6, r1, r0, lsl #20
   16954:	andeq	r6, r1, r8, ror #21
   16958:	strdeq	r6, [r1], -r8
   1695c:	andeq	r6, r1, r8, ror #21
   16960:	strdeq	r6, [r1], -r8
   16964:	andeq	r6, r1, r8, ror #21
   16968:	andeq	r6, r1, r8, ror #21
   1696c:	andeq	r6, r1, r8, ror #21
   16970:	andeq	r6, r1, r8, ror #21
   16974:	andeq	r6, r1, r8, ror #21
   16978:	andeq	r6, r1, r8, ror #21
   1697c:	andeq	r6, r1, r8, ror #21
   16980:	andeq	r6, r1, r8, ror #21
   16984:	andeq	r6, r1, r8, ror #21
   16988:	andeq	r6, r1, r8, ror #21
   1698c:	andeq	r6, r1, r8, ror #21
   16990:	andeq	r6, r1, r8, ror #21
   16994:	andeq	r6, r1, r8, ror #21
   16998:	andeq	r6, r1, r8, ror #21
   1699c:	andeq	r6, r1, r8, ror #21
   169a0:	andeq	r6, r1, r8, ror #21
   169a4:	andeq	r6, r1, r8, ror #21
   169a8:	andeq	r6, r1, r8, ror #21
   169ac:	andeq	r6, r1, r8, ror #21
   169b0:	andeq	r6, r1, r8, ror #21
   169b4:	andeq	r6, r1, r8, ror #21
   169b8:	andeq	r6, r1, r8, ror #21
   169bc:	andeq	r6, r1, r8, ror #21
   169c0:	andeq	r6, r1, r8, ror #21
   169c4:	andeq	r6, r1, r8, ror #21
   169c8:	andeq	r6, r1, r8, ror #21
   169cc:	ldrdeq	r6, [r1], -ip
   169d0:	strdeq	r6, [r1], -r8
   169d4:	ldrdeq	r6, [r1], -ip
   169d8:	strdeq	r6, [r1], -r0
   169dc:	ldr	r3, [sp, #24]
   169e0:	mov	r6, #0
   169e4:	cmn	r3, #1
   169e8:	bne	16394 <dcngettext@plt+0x536c>
   169ec:	ldr	r3, [sp, #44]	; 0x2c
   169f0:	ldrb	r3, [r3, #1]
   169f4:	adds	r3, r3, #0
   169f8:	movne	r3, #1
   169fc:	b	1639c <dcngettext@plt+0x5374>
   16a00:	ldr	r3, [sp, #176]	; 0xb0
   16a04:	mov	r6, #0
   16a08:	cmp	r3, #2
   16a0c:	bne	164dc <dcngettext@plt+0x54b4>
   16a10:	ldr	r3, [sp, #64]	; 0x40
   16a14:	cmp	r3, #0
   16a18:	bne	17250 <dcngettext@plt+0x6228>
   16a1c:	add	sl, sl, #1
   16a20:	ldr	r6, [sp, #36]	; 0x24
   16a24:	str	r3, [sp, #32]
   16a28:	mov	r4, #92	; 0x5c
   16a2c:	b	163e8 <dcngettext@plt+0x53c0>
   16a30:	ldr	r3, [sp, #176]	; 0xb0
   16a34:	mov	r6, #0
   16a38:	cmp	r3, #2
   16a3c:	bne	16510 <dcngettext@plt+0x54e8>
   16a40:	ldr	r3, [sp, #40]	; 0x28
   16a44:	cmp	r3, #0
   16a48:	bne	16d2c <dcngettext@plt+0x5d04>
   16a4c:	mov	r1, r7
   16a50:	str	r3, [sp, #32]
   16a54:	mov	r4, #63	; 0x3f
   16a58:	b	163b4 <dcngettext@plt+0x538c>
   16a5c:	ldr	r3, [sp, #176]	; 0xb0
   16a60:	mov	r6, #0
   16a64:	cmp	r3, #2
   16a68:	bne	16560 <dcngettext@plt+0x5538>
   16a6c:	ldr	r3, [sp, #64]	; 0x40
   16a70:	cmp	r3, #0
   16a74:	bne	17250 <dcngettext@plt+0x6228>
   16a78:	ldr	r2, [sp, #84]	; 0x54
   16a7c:	adds	r3, fp, #0
   16a80:	movne	r3, #1
   16a84:	cmp	r2, #0
   16a88:	movne	r3, #0
   16a8c:	cmp	r3, #0
   16a90:	strne	fp, [sp, #84]	; 0x54
   16a94:	movne	fp, #0
   16a98:	bne	16ac8 <dcngettext@plt+0x5aa0>
   16a9c:	cmp	fp, r8
   16aa0:	movhi	r3, #39	; 0x27
   16aa4:	strbhi	r3, [r9, r8]
   16aa8:	add	r3, r8, #1
   16aac:	cmp	fp, r3
   16ab0:	movhi	r2, #92	; 0x5c
   16ab4:	strbhi	r2, [r9, r3]
   16ab8:	add	r3, r8, #2
   16abc:	cmp	fp, r3
   16ac0:	movhi	r2, #39	; 0x27
   16ac4:	strbhi	r2, [r9, r3]
   16ac8:	ldr	r3, [sp, #64]	; 0x40
   16acc:	add	r8, r8, #3
   16ad0:	mov	r1, r7
   16ad4:	str	r7, [sp, #32]
   16ad8:	str	r7, [sp, #76]	; 0x4c
   16adc:	str	r3, [sp, #36]	; 0x24
   16ae0:	mov	r4, #39	; 0x27
   16ae4:	b	163b4 <dcngettext@plt+0x538c>
   16ae8:	mov	r6, #0
   16aec:	b	16578 <dcngettext@plt+0x5550>
   16af0:	mov	r6, #0
   16af4:	b	1676c <dcngettext@plt+0x5744>
   16af8:	mov	r6, #0
   16afc:	b	1678c <dcngettext@plt+0x5764>
   16b00:	str	r7, [sp, #32]
   16b04:	mov	r6, #0
   16b08:	b	16794 <dcngettext@plt+0x576c>
   16b0c:	mov	r6, #0
   16b10:	b	167bc <dcngettext@plt+0x5794>
   16b14:	mov	r6, #0
   16b18:	b	16588 <dcngettext@plt+0x5560>
   16b1c:	mov	r6, #0
   16b20:	b	16650 <dcngettext@plt+0x5628>
   16b24:	mov	r6, #0
   16b28:	b	16620 <dcngettext@plt+0x55f8>
   16b2c:	mov	r6, #0
   16b30:	mov	r3, #116	; 0x74
   16b34:	b	16628 <dcngettext@plt+0x5600>
   16b38:	mov	r6, #0
   16b3c:	b	16664 <dcngettext@plt+0x563c>
   16b40:	mov	r6, #0
   16b44:	b	16678 <dcngettext@plt+0x5650>
   16b48:	ldr	r3, [sp, #56]	; 0x38
   16b4c:	mov	r6, #0
   16b50:	cmp	r3, #0
   16b54:	bne	16698 <dcngettext@plt+0x5670>
   16b58:	ldr	r3, [sp, #96]	; 0x60
   16b5c:	cmp	r3, #0
   16b60:	addne	sl, sl, #1
   16b64:	bne	15f0c <dcngettext@plt+0x4ee4>
   16b68:	ldr	r1, [sp, #52]	; 0x34
   16b6c:	str	r3, [sp, #32]
   16b70:	mov	r4, r3
   16b74:	b	163b4 <dcngettext@plt+0x538c>
   16b78:	mov	r6, #0
   16b7c:	ldr	r3, [sp, #80]	; 0x50
   16b80:	cmp	r3, #1
   16b84:	bne	16d74 <dcngettext@plt+0x5d4c>
   16b88:	bl	10efc <__ctype_b_loc@plt>
   16b8c:	ldr	r2, [sp, #80]	; 0x50
   16b90:	sxth	r3, r4
   16b94:	mov	r1, r2
   16b98:	lsl	r3, r3, #1
   16b9c:	ldr	r2, [r0]
   16ba0:	ldrh	r3, [r2, r3]
   16ba4:	and	r3, r3, #16384	; 0x4000
   16ba8:	cmp	r3, #0
   16bac:	movne	r3, #1
   16bb0:	moveq	r3, #0
   16bb4:	str	r3, [sp, #32]
   16bb8:	moveq	r3, #1
   16bbc:	movne	r3, #0
   16bc0:	ldr	r2, [sp, #56]	; 0x38
   16bc4:	and	r3, r3, r2
   16bc8:	ands	r3, r3, #255	; 0xff
   16bcc:	beq	167a0 <dcngettext@plt+0x5778>
   16bd0:	add	r1, sl, r1
   16bd4:	mov	r0, #0
   16bd8:	ldr	r7, [sp, #40]	; 0x28
   16bdc:	ldr	r2, [sp, #36]	; 0x24
   16be0:	ldr	lr, [sp, #52]	; 0x34
   16be4:	b	16c94 <dcngettext@plt+0x5c6c>
   16be8:	cmp	r7, #0
   16bec:	bne	16fe8 <dcngettext@plt+0x5fc0>
   16bf0:	eor	r0, r2, #1
   16bf4:	ands	r0, lr, r0
   16bf8:	beq	16c30 <dcngettext@plt+0x5c08>
   16bfc:	cmp	fp, r8
   16c00:	movhi	r2, #39	; 0x27
   16c04:	strbhi	r2, [r9, r8]
   16c08:	add	r2, r8, #1
   16c0c:	cmp	fp, r2
   16c10:	movhi	ip, #36	; 0x24
   16c14:	strbhi	ip, [r9, r2]
   16c18:	add	r2, r8, #2
   16c1c:	cmp	fp, r2
   16c20:	movhi	ip, #39	; 0x27
   16c24:	strbhi	ip, [r9, r2]
   16c28:	add	r8, r8, #3
   16c2c:	mov	r2, r0
   16c30:	cmp	fp, r8
   16c34:	movhi	r0, #92	; 0x5c
   16c38:	strbhi	r0, [r9, r8]
   16c3c:	add	r0, r8, #1
   16c40:	cmp	fp, r0
   16c44:	lsrhi	ip, r4, #6
   16c48:	addhi	ip, ip, #48	; 0x30
   16c4c:	strbhi	ip, [r9, r0]
   16c50:	add	ip, r8, #2
   16c54:	cmp	fp, ip
   16c58:	lsrhi	r0, r4, #3
   16c5c:	andhi	r0, r0, #7
   16c60:	addhi	r0, r0, #48	; 0x30
   16c64:	add	sl, sl, #1
   16c68:	strbhi	r0, [r9, ip]
   16c6c:	and	r4, r4, #7
   16c70:	cmp	sl, r1
   16c74:	add	r4, r4, #48	; 0x30
   16c78:	add	r8, r8, #3
   16c7c:	bcs	17000 <dcngettext@plt+0x5fd8>
   16c80:	mov	r0, r3
   16c84:	cmp	fp, r8
   16c88:	strbhi	r4, [r9, r8]
   16c8c:	ldrb	r4, [r5, #1]!
   16c90:	add	r8, r8, #1
   16c94:	cmp	r3, #0
   16c98:	bne	16be8 <dcngettext@plt+0x5bc0>
   16c9c:	cmp	r6, #0
   16ca0:	bne	16d44 <dcngettext@plt+0x5d1c>
   16ca4:	eor	r6, r0, #1
   16ca8:	and	r6, r6, r2
   16cac:	add	sl, sl, #1
   16cb0:	cmp	r1, sl
   16cb4:	uxtb	r6, r6
   16cb8:	bls	16d6c <dcngettext@plt+0x5d44>
   16cbc:	cmp	r6, #0
   16cc0:	beq	16c84 <dcngettext@plt+0x5c5c>
   16cc4:	cmp	fp, r8
   16cc8:	movhi	r2, #39	; 0x27
   16ccc:	strbhi	r2, [r9, r8]
   16cd0:	add	r2, r8, #1
   16cd4:	cmp	fp, r2
   16cd8:	movhi	ip, #39	; 0x27
   16cdc:	strbhi	ip, [r9, r2]
   16ce0:	add	r8, r8, #2
   16ce4:	mov	r6, r3
   16ce8:	mov	r2, r3
   16cec:	b	16c84 <dcngettext@plt+0x5c5c>
   16cf0:	ldr	r3, [sp, #184]	; 0xb8
   16cf4:	cmp	r3, #0
   16cf8:	beq	163d0 <dcngettext@plt+0x53a8>
   16cfc:	lsr	r2, r4, #5
   16d00:	mov	r0, r3
   16d04:	uxtb	r2, r2
   16d08:	and	r3, r4, #31
   16d0c:	ldr	r2, [r0, r2, lsl #2]
   16d10:	lsr	r3, r2, r3
   16d14:	tst	r3, #1
   16d18:	beq	163d0 <dcngettext@plt+0x53a8>
   16d1c:	ldr	r3, [sp, #40]	; 0x28
   16d20:	cmp	r3, #0
   16d24:	beq	165bc <dcngettext@plt+0x5594>
   16d28:	mov	r3, r1
   16d2c:	str	r3, [sp, #64]	; 0x40
   16d30:	mov	sl, r9
   16d34:	ldr	r3, [sp, #56]	; 0x38
   16d38:	mov	r9, fp
   16d3c:	ldr	r2, [sp, #64]	; 0x40
   16d40:	b	16f30 <dcngettext@plt+0x5f08>
   16d44:	cmp	fp, r8
   16d48:	eor	r6, r0, #1
   16d4c:	movhi	ip, #92	; 0x5c
   16d50:	and	r6, r6, r2
   16d54:	add	sl, sl, #1
   16d58:	strbhi	ip, [r9, r8]
   16d5c:	cmp	r1, sl
   16d60:	add	r8, r8, #1
   16d64:	uxtb	r6, r6
   16d68:	bhi	16cbc <dcngettext@plt+0x5c94>
   16d6c:	str	r2, [sp, #36]	; 0x24
   16d70:	b	163e8 <dcngettext@plt+0x53c0>
   16d74:	ldr	r3, [sp, #24]
   16d78:	cmn	r3, #1
   16d7c:	mov	r3, #0
   16d80:	str	r3, [sp, #128]	; 0x80
   16d84:	str	r3, [sp, #132]	; 0x84
   16d88:	beq	1707c <dcngettext@plt+0x6054>
   16d8c:	mov	r2, r7
   16d90:	mov	r3, #0
   16d94:	str	r7, [sp, #104]	; 0x68
   16d98:	str	r5, [sp, #116]	; 0x74
   16d9c:	mov	r7, r3
   16da0:	mov	r5, r2
   16da4:	str	r4, [sp, #32]
   16da8:	str	r6, [sp, #108]	; 0x6c
   16dac:	str	r8, [sp, #112]	; 0x70
   16db0:	ldr	r3, [sp, #44]	; 0x2c
   16db4:	add	r6, sl, r7
   16db8:	add	r4, r3, r6
   16dbc:	ldr	r3, [sp, #24]
   16dc0:	mov	r1, r4
   16dc4:	sub	r2, r3, r6
   16dc8:	add	r0, sp, #124	; 0x7c
   16dcc:	add	r3, sp, #128	; 0x80
   16dd0:	bl	1b07c <dcngettext@plt+0xa054>
   16dd4:	subs	r8, r0, #0
   16dd8:	beq	17160 <dcngettext@plt+0x6138>
   16ddc:	cmn	r8, #1
   16de0:	beq	17138 <dcngettext@plt+0x6110>
   16de4:	cmn	r8, #2
   16de8:	beq	170d0 <dcngettext@plt+0x60a8>
   16dec:	ldr	r3, [sp, #64]	; 0x40
   16df0:	cmp	r3, #0
   16df4:	beq	16eb4 <dcngettext@plt+0x5e8c>
   16df8:	cmp	r8, #1
   16dfc:	beq	16eb4 <dcngettext@plt+0x5e8c>
   16e00:	sub	r3, r8, #1
   16e04:	add	r6, r3, r6
   16e08:	ldr	r3, [sp, #44]	; 0x2c
   16e0c:	add	r6, r3, r6
   16e10:	ldrb	r3, [r4, #1]!
   16e14:	sub	r3, r3, #91	; 0x5b
   16e18:	cmp	r3, #33	; 0x21
   16e1c:	ldrls	pc, [pc, r3, lsl #2]
   16e20:	b	16eac <dcngettext@plt+0x5e84>
   16e24:	andeq	r6, r1, r8, lsl pc
   16e28:	andeq	r6, r1, r8, lsl pc
   16e2c:	andeq	r6, r1, ip, lsr #29
   16e30:	andeq	r6, r1, r8, lsl pc
   16e34:	andeq	r6, r1, ip, lsr #29
   16e38:	andeq	r6, r1, r8, lsl pc
   16e3c:	andeq	r6, r1, ip, lsr #29
   16e40:	andeq	r6, r1, ip, lsr #29
   16e44:	andeq	r6, r1, ip, lsr #29
   16e48:	andeq	r6, r1, ip, lsr #29
   16e4c:	andeq	r6, r1, ip, lsr #29
   16e50:	andeq	r6, r1, ip, lsr #29
   16e54:	andeq	r6, r1, ip, lsr #29
   16e58:	andeq	r6, r1, ip, lsr #29
   16e5c:	andeq	r6, r1, ip, lsr #29
   16e60:	andeq	r6, r1, ip, lsr #29
   16e64:	andeq	r6, r1, ip, lsr #29
   16e68:	andeq	r6, r1, ip, lsr #29
   16e6c:	andeq	r6, r1, ip, lsr #29
   16e70:	andeq	r6, r1, ip, lsr #29
   16e74:	andeq	r6, r1, ip, lsr #29
   16e78:	andeq	r6, r1, ip, lsr #29
   16e7c:	andeq	r6, r1, ip, lsr #29
   16e80:	andeq	r6, r1, ip, lsr #29
   16e84:	andeq	r6, r1, ip, lsr #29
   16e88:	andeq	r6, r1, ip, lsr #29
   16e8c:	andeq	r6, r1, ip, lsr #29
   16e90:	andeq	r6, r1, ip, lsr #29
   16e94:	andeq	r6, r1, ip, lsr #29
   16e98:	andeq	r6, r1, ip, lsr #29
   16e9c:	andeq	r6, r1, ip, lsr #29
   16ea0:	andeq	r6, r1, ip, lsr #29
   16ea4:	andeq	r6, r1, ip, lsr #29
   16ea8:	andeq	r6, r1, r8, lsl pc
   16eac:	cmp	r6, r4
   16eb0:	bne	16e10 <dcngettext@plt+0x5de8>
   16eb4:	ldr	r0, [sp, #124]	; 0x7c
   16eb8:	bl	10e54 <iswprint@plt>
   16ebc:	add	r7, r7, r8
   16ec0:	cmp	r0, #0
   16ec4:	add	r0, sp, #128	; 0x80
   16ec8:	moveq	r5, #0
   16ecc:	bl	10e00 <mbsinit@plt>
   16ed0:	cmp	r0, #0
   16ed4:	beq	16db0 <dcngettext@plt+0x5d88>
   16ed8:	ldr	r4, [sp, #32]
   16edc:	str	r5, [sp, #32]
   16ee0:	ldr	r3, [sp, #32]
   16ee4:	mov	r1, r7
   16ee8:	eor	r3, r3, #1
   16eec:	ldr	r7, [sp, #104]	; 0x68
   16ef0:	ldr	r6, [sp, #108]	; 0x6c
   16ef4:	ldr	r8, [sp, #112]	; 0x70
   16ef8:	ldr	r5, [sp, #116]	; 0x74
   16efc:	uxtb	r3, r3
   16f00:	cmp	r1, #1
   16f04:	bls	16bc0 <dcngettext@plt+0x5b98>
   16f08:	ldr	r2, [sp, #56]	; 0x38
   16f0c:	and	r3, r3, r2
   16f10:	uxtb	r3, r3
   16f14:	b	16bd0 <dcngettext@plt+0x5ba8>
   16f18:	mov	r3, #2
   16f1c:	str	r3, [sp, #176]	; 0xb0
   16f20:	ldr	r2, [sp, #64]	; 0x40
   16f24:	ldr	r3, [sp, #56]	; 0x38
   16f28:	mov	sl, r9
   16f2c:	mov	r9, fp
   16f30:	and	r3, r3, r2
   16f34:	tst	r3, #255	; 0xff
   16f38:	ldr	r3, [sp, #176]	; 0xb0
   16f3c:	movne	r3, #4
   16f40:	str	r3, [sp, #176]	; 0xb0
   16f44:	ldr	r3, [sp, #180]	; 0xb4
   16f48:	mov	ip, #0
   16f4c:	bic	r3, r3, #2
   16f50:	str	r3, [sp, #4]
   16f54:	ldr	r3, [sp, #192]	; 0xc0
   16f58:	ldr	r2, [sp, #44]	; 0x2c
   16f5c:	str	r3, [sp, #16]
   16f60:	ldr	r3, [sp, #188]	; 0xbc
   16f64:	mov	r1, r9
   16f68:	str	r3, [sp, #12]
   16f6c:	ldr	r3, [sp, #176]	; 0xb0
   16f70:	mov	r0, sl
   16f74:	str	r3, [sp]
   16f78:	str	ip, [sp, #8]
   16f7c:	ldr	r3, [sp, #24]
   16f80:	bl	15de0 <dcngettext@plt+0x4db8>
   16f84:	mov	fp, r0
   16f88:	mov	r0, fp
   16f8c:	add	sp, sp, #140	; 0x8c
   16f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f94:	mov	r4, #92	; 0x5c
   16f98:	mov	r1, #0
   16f9c:	mov	r3, r4
   16fa0:	b	16594 <dcngettext@plt+0x556c>
   16fa4:	mov	r3, #0
   16fa8:	ldr	r1, [sp, #52]	; 0x34
   16fac:	str	r3, [sp, #32]
   16fb0:	mov	r4, #63	; 0x3f
   16fb4:	b	163b4 <dcngettext@plt+0x538c>
   16fb8:	cmp	fp, #0
   16fbc:	beq	17018 <dcngettext@plt+0x5ff0>
   16fc0:	mov	r3, #39	; 0x27
   16fc4:	strb	r3, [r9]
   16fc8:	mov	r3, #0
   16fcc:	str	r3, [sp, #40]	; 0x28
   16fd0:	mov	r3, #1
   16fd4:	str	r3, [sp, #68]	; 0x44
   16fd8:	ldr	r3, [pc, #448]	; 171a0 <dcngettext@plt+0x6178>
   16fdc:	mov	r8, #1
   16fe0:	str	r3, [sp, #72]	; 0x48
   16fe4:	b	161c8 <dcngettext@plt+0x51a0>
   16fe8:	ldr	r3, [sp, #40]	; 0x28
   16fec:	mov	sl, r9
   16ff0:	str	r3, [sp, #56]	; 0x38
   16ff4:	mov	r9, fp
   16ff8:	ldr	r2, [sp, #64]	; 0x40
   16ffc:	b	16f30 <dcngettext@plt+0x5f08>
   17000:	str	r2, [sp, #36]	; 0x24
   17004:	b	16418 <dcngettext@plt+0x53f0>
   17008:	mov	r1, #0
   1700c:	str	r3, [sp, #32]
   17010:	mov	r4, #63	; 0x3f
   17014:	b	163b4 <dcngettext@plt+0x538c>
   17018:	ldr	r3, [pc, #384]	; 171a0 <dcngettext@plt+0x6178>
   1701c:	str	r3, [sp, #72]	; 0x48
   17020:	mov	r3, #0
   17024:	str	r3, [sp, #40]	; 0x28
   17028:	mov	r3, #1
   1702c:	str	r3, [sp, #68]	; 0x44
   17030:	mov	r8, r3
   17034:	b	161c8 <dcngettext@plt+0x51a0>
   17038:	bl	11010 <abort@plt>
   1703c:	cmp	fp, #0
   17040:	beq	170a0 <dcngettext@plt+0x6078>
   17044:	mov	r2, #1
   17048:	mov	r3, #34	; 0x22
   1704c:	strb	r3, [r9]
   17050:	mov	r8, r2
   17054:	mov	r3, r2
   17058:	str	r2, [sp, #68]	; 0x44
   1705c:	str	r3, [sp, #56]	; 0x38
   17060:	ldr	r3, [pc, #316]	; 171a4 <dcngettext@plt+0x617c>
   17064:	ldr	r1, [sp, #56]	; 0x38
   17068:	str	r3, [sp, #72]	; 0x48
   1706c:	ldr	r2, [sp, #176]	; 0xb0
   17070:	ldr	ip, [sp, #40]	; 0x28
   17074:	ldr	lr, [sp, #176]	; 0xb0
   17078:	b	15eac <dcngettext@plt+0x4e84>
   1707c:	ldr	r0, [sp, #44]	; 0x2c
   17080:	bl	10f14 <strlen@plt>
   17084:	str	r0, [sp, #24]
   17088:	b	16d8c <dcngettext@plt+0x5d64>
   1708c:	mov	r7, #0
   17090:	ldr	r1, [sp, #52]	; 0x34
   17094:	str	r3, [sp, #32]
   17098:	mov	r4, #48	; 0x30
   1709c:	b	163b4 <dcngettext@plt+0x538c>
   170a0:	mov	r3, #1
   170a4:	str	r3, [sp, #68]	; 0x44
   170a8:	mov	r8, r3
   170ac:	b	1705c <dcngettext@plt+0x6034>
   170b0:	mov	r3, #2
   170b4:	mov	sl, r9
   170b8:	str	r3, [sp, #176]	; 0xb0
   170bc:	mov	r9, fp
   170c0:	ldr	r3, [sp, #56]	; 0x38
   170c4:	b	16f30 <dcngettext@plt+0x5f08>
   170c8:	ldr	r6, [sp, #48]	; 0x30
   170cc:	b	16b7c <dcngettext@plt+0x5b54>
   170d0:	ldr	r0, [sp, #24]
   170d4:	mov	ip, r6
   170d8:	cmp	r0, ip
   170dc:	mov	r1, r7
   170e0:	mov	r2, r4
   170e4:	ldr	r7, [sp, #104]	; 0x68
   170e8:	ldr	r4, [sp, #32]
   170ec:	ldr	r6, [sp, #108]	; 0x6c
   170f0:	ldr	r8, [sp, #112]	; 0x70
   170f4:	ldr	r5, [sp, #116]	; 0x74
   170f8:	bls	17128 <dcngettext@plt+0x6100>
   170fc:	ldrb	r3, [r2]
   17100:	cmp	r3, #0
   17104:	bne	17118 <dcngettext@plt+0x60f0>
   17108:	b	17238 <dcngettext@plt+0x6210>
   1710c:	ldrb	r3, [r2, #1]!
   17110:	cmp	r3, #0
   17114:	beq	17238 <dcngettext@plt+0x6210>
   17118:	add	r1, r1, #1
   1711c:	add	r3, sl, r1
   17120:	cmp	r0, r3
   17124:	bhi	1710c <dcngettext@plt+0x60e4>
   17128:	mov	r2, #0
   1712c:	mov	r3, r7
   17130:	str	r2, [sp, #32]
   17134:	b	16f00 <dcngettext@plt+0x5ed8>
   17138:	mov	r1, r7
   1713c:	ldr	r7, [sp, #104]	; 0x68
   17140:	mov	r2, #0
   17144:	ldr	r4, [sp, #32]
   17148:	ldr	r6, [sp, #108]	; 0x6c
   1714c:	ldr	r8, [sp, #112]	; 0x70
   17150:	ldr	r5, [sp, #116]	; 0x74
   17154:	mov	r3, r7
   17158:	str	r2, [sp, #32]
   1715c:	b	16f00 <dcngettext@plt+0x5ed8>
   17160:	mov	r3, r5
   17164:	eor	r3, r3, #1
   17168:	ldr	r4, [sp, #32]
   1716c:	mov	r1, r7
   17170:	str	r5, [sp, #32]
   17174:	ldr	r7, [sp, #104]	; 0x68
   17178:	ldr	r6, [sp, #108]	; 0x6c
   1717c:	ldr	r8, [sp, #112]	; 0x70
   17180:	ldr	r5, [sp, #116]	; 0x74
   17184:	uxtb	r3, r3
   17188:	b	16f00 <dcngettext@plt+0x5ed8>
   1718c:	mov	sl, r9
   17190:	str	r3, [sp, #56]	; 0x38
   17194:	mov	r9, fp
   17198:	ldr	r2, [sp, #64]	; 0x40
   1719c:	b	16f30 <dcngettext@plt+0x5f08>
   171a0:	andeq	ip, r1, r0, lsr #13
   171a4:	muleq	r1, ip, r6
   171a8:	andeq	ip, r1, r4, lsr #13
   171ac:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   171b0:	ldr	r2, [sp, #44]	; 0x2c
   171b4:	ldrb	r1, [r2, r3]
   171b8:	sub	r2, r1, #33	; 0x21
   171bc:	uxtb	r2, r2
   171c0:	cmp	r2, #29
   171c4:	bhi	17244 <dcngettext@plt+0x621c>
   171c8:	ldr	r0, [pc, #-36]	; 171ac <dcngettext@plt+0x6184>
   171cc:	mov	ip, #1
   171d0:	ands	r2, r0, ip, lsl r2
   171d4:	beq	17264 <dcngettext@plt+0x623c>
   171d8:	ldr	r2, [sp, #40]	; 0x28
   171dc:	cmp	r2, #0
   171e0:	bne	17358 <dcngettext@plt+0x6330>
   171e4:	add	r2, r8, #1
   171e8:	cmp	fp, r8
   171ec:	strbhi	r4, [r9, r8]
   171f0:	cmp	fp, r2
   171f4:	movhi	r0, #34	; 0x22
   171f8:	strbhi	r0, [r9, r2]
   171fc:	add	r2, r8, #2
   17200:	cmp	fp, r2
   17204:	movhi	r0, #34	; 0x22
   17208:	strbhi	r0, [r9, r2]
   1720c:	add	r2, r8, #3
   17210:	cmp	fp, r2
   17214:	mov	sl, r3
   17218:	ldr	r3, [sp, #40]	; 0x28
   1721c:	movhi	r0, #63	; 0x3f
   17220:	mov	r4, r1
   17224:	strbhi	r0, [r9, r2]
   17228:	add	r8, r8, #4
   1722c:	mov	r1, r3
   17230:	str	r3, [sp, #32]
   17234:	b	163b4 <dcngettext@plt+0x538c>
   17238:	str	r3, [sp, #32]
   1723c:	mov	r3, r7
   17240:	b	16f00 <dcngettext@plt+0x5ed8>
   17244:	mov	r1, #0
   17248:	str	r1, [sp, #32]
   1724c:	b	163b4 <dcngettext@plt+0x538c>
   17250:	mov	sl, r9
   17254:	ldr	r3, [sp, #56]	; 0x38
   17258:	mov	r9, fp
   1725c:	ldr	r2, [sp, #64]	; 0x40
   17260:	b	16f30 <dcngettext@plt+0x5f08>
   17264:	str	r2, [sp, #32]
   17268:	mov	r1, #0
   1726c:	b	163b4 <dcngettext@plt+0x538c>
   17270:	ldr	r2, [sp, #76]	; 0x4c
   17274:	mov	sl, r9
   17278:	mov	r9, fp
   1727c:	mov	fp, r8
   17280:	ldr	r1, [sp, #72]	; 0x48
   17284:	cmp	r1, #0
   17288:	moveq	r3, #0
   1728c:	andne	r3, r2, #1
   17290:	cmp	r3, #0
   17294:	beq	172c0 <dcngettext@plt+0x6298>
   17298:	ldrb	r3, [r1]
   1729c:	cmp	r3, #0
   172a0:	beq	172c0 <dcngettext@plt+0x6298>
   172a4:	mov	r2, r1
   172a8:	cmp	r9, fp
   172ac:	strbhi	r3, [sl, fp]
   172b0:	ldrb	r3, [r2, #1]!
   172b4:	add	fp, fp, #1
   172b8:	cmp	r3, #0
   172bc:	bne	172a8 <dcngettext@plt+0x6280>
   172c0:	cmp	r9, fp
   172c4:	movhi	r3, #0
   172c8:	strbhi	r3, [sl, fp]
   172cc:	b	16f88 <dcngettext@plt+0x5f60>
   172d0:	ldr	r3, [sp, #192]	; 0xc0
   172d4:	mov	ip, #5
   172d8:	str	r3, [sp, #16]
   172dc:	ldr	r3, [sp, #188]	; 0xbc
   172e0:	ldr	r2, [sp, #44]	; 0x2c
   172e4:	str	r3, [sp, #12]
   172e8:	ldr	r3, [sp, #184]	; 0xb8
   172ec:	ldr	r1, [sp, #84]	; 0x54
   172f0:	str	r3, [sp, #8]
   172f4:	ldr	r3, [sp, #180]	; 0xb4
   172f8:	mov	r0, r9
   172fc:	str	r3, [sp, #4]
   17300:	str	ip, [sp]
   17304:	ldr	r3, [sp, #24]
   17308:	bl	15de0 <dcngettext@plt+0x4db8>
   1730c:	mov	fp, r0
   17310:	b	16f88 <dcngettext@plt+0x5f60>
   17314:	mov	sl, r9
   17318:	mov	r9, fp
   1731c:	mov	fp, r8
   17320:	b	17280 <dcngettext@plt+0x6258>
   17324:	ldr	r1, [sp, #176]	; 0xb0
   17328:	bl	15cc0 <dcngettext@plt+0x4c98>
   1732c:	str	r0, [sp, #192]	; 0xc0
   17330:	b	1629c <dcngettext@plt+0x5274>
   17334:	ldr	r1, [sp, #176]	; 0xb0
   17338:	bl	15cc0 <dcngettext@plt+0x4c98>
   1733c:	str	r0, [sp, #188]	; 0xbc
   17340:	b	1627c <dcngettext@plt+0x5254>
   17344:	mov	sl, r9
   17348:	mov	r2, r3
   1734c:	mov	r9, fp
   17350:	mov	fp, r8
   17354:	b	17280 <dcngettext@plt+0x6258>
   17358:	mov	sl, r9
   1735c:	mov	r9, fp
   17360:	b	16f44 <dcngettext@plt+0x5f1c>
   17364:	push	{r4, r5, r6, lr}
   17368:	mov	r5, r0
   1736c:	bl	10f2c <__errno_location@plt>
   17370:	cmp	r5, #0
   17374:	mov	r1, #48	; 0x30
   17378:	mov	r4, r0
   1737c:	ldr	r0, [pc, #16]	; 17394 <dcngettext@plt+0x636c>
   17380:	ldr	r6, [r4]
   17384:	movne	r0, r5
   17388:	bl	1ac0c <dcngettext@plt+0x9be4>
   1738c:	str	r6, [r4]
   17390:	pop	{r4, r5, r6, pc}
   17394:	muleq	r2, r0, r1
   17398:	ldr	r3, [pc, #12]	; 173ac <dcngettext@plt+0x6384>
   1739c:	cmp	r0, #0
   173a0:	moveq	r0, r3
   173a4:	ldr	r0, [r0]
   173a8:	bx	lr
   173ac:	muleq	r2, r0, r1
   173b0:	ldr	r3, [pc, #12]	; 173c4 <dcngettext@plt+0x639c>
   173b4:	cmp	r0, #0
   173b8:	moveq	r0, r3
   173bc:	str	r1, [r0]
   173c0:	bx	lr
   173c4:	muleq	r2, r0, r1
   173c8:	ldr	r3, [pc, #52]	; 17404 <dcngettext@plt+0x63dc>
   173cc:	cmp	r0, #0
   173d0:	moveq	r0, r3
   173d4:	add	r3, r0, #8
   173d8:	push	{lr}		; (str lr, [sp, #-4]!)
   173dc:	lsr	lr, r1, #5
   173e0:	and	r1, r1, #31
   173e4:	ldr	ip, [r3, lr, lsl #2]
   173e8:	lsr	r0, ip, r1
   173ec:	eor	r2, r2, r0
   173f0:	and	r2, r2, #1
   173f4:	and	r0, r0, #1
   173f8:	eor	r1, ip, r2, lsl r1
   173fc:	str	r1, [r3, lr, lsl #2]
   17400:	pop	{pc}		; (ldr pc, [sp], #4)
   17404:	muleq	r2, r0, r1
   17408:	ldr	r3, [pc, #16]	; 17420 <dcngettext@plt+0x63f8>
   1740c:	cmp	r0, #0
   17410:	movne	r3, r0
   17414:	ldr	r0, [r3, #4]
   17418:	str	r1, [r3, #4]
   1741c:	bx	lr
   17420:	muleq	r2, r0, r1
   17424:	ldr	r3, [pc, #44]	; 17458 <dcngettext@plt+0x6430>
   17428:	cmp	r0, #0
   1742c:	moveq	r0, r3
   17430:	mov	ip, #10
   17434:	cmp	r2, #0
   17438:	cmpne	r1, #0
   1743c:	str	ip, [r0]
   17440:	beq	17450 <dcngettext@plt+0x6428>
   17444:	str	r1, [r0, #40]	; 0x28
   17448:	str	r2, [r0, #44]	; 0x2c
   1744c:	bx	lr
   17450:	push	{r4, lr}
   17454:	bl	11010 <abort@plt>
   17458:	muleq	r2, r0, r1
   1745c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17460:	sub	sp, sp, #24
   17464:	ldr	ip, [pc, #108]	; 174d8 <dcngettext@plt+0x64b0>
   17468:	ldr	r4, [sp, #56]	; 0x38
   1746c:	mov	r9, r2
   17470:	cmp	r4, #0
   17474:	moveq	r4, ip
   17478:	mov	sl, r3
   1747c:	mov	r7, r0
   17480:	mov	r8, r1
   17484:	bl	10f2c <__errno_location@plt>
   17488:	ldr	r3, [r4, #44]	; 0x2c
   1748c:	mov	r1, r8
   17490:	ldr	r6, [r0]
   17494:	str	r3, [sp, #16]
   17498:	ldr	r2, [r4, #40]	; 0x28
   1749c:	add	r3, r4, #8
   174a0:	str	r3, [sp, #8]
   174a4:	str	r2, [sp, #12]
   174a8:	ldr	r2, [r4, #4]
   174ac:	mov	r5, r0
   174b0:	str	r2, [sp, #4]
   174b4:	ldr	ip, [r4]
   174b8:	mov	r3, sl
   174bc:	mov	r2, r9
   174c0:	mov	r0, r7
   174c4:	str	ip, [sp]
   174c8:	bl	15de0 <dcngettext@plt+0x4db8>
   174cc:	str	r6, [r5]
   174d0:	add	sp, sp, #24
   174d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174d8:	muleq	r2, r0, r1
   174dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174e0:	cmp	r2, #0
   174e4:	sub	sp, sp, #36	; 0x24
   174e8:	ldr	r4, [pc, #164]	; 17594 <dcngettext@plt+0x656c>
   174ec:	mov	r8, r1
   174f0:	movne	r4, r2
   174f4:	mov	r7, r0
   174f8:	bl	10f2c <__errno_location@plt>
   174fc:	ldr	r3, [r4, #44]	; 0x2c
   17500:	ldr	r5, [r4, #4]
   17504:	add	r9, r4, #8
   17508:	orr	r5, r5, #1
   1750c:	mov	r1, #0
   17510:	mov	r2, r7
   17514:	ldr	fp, [r0]
   17518:	str	r3, [sp, #16]
   1751c:	ldr	r3, [r4, #40]	; 0x28
   17520:	stmib	sp, {r5, r9}
   17524:	str	r3, [sp, #12]
   17528:	ldr	r3, [r4]
   1752c:	mov	r6, r0
   17530:	str	r3, [sp]
   17534:	mov	r0, r1
   17538:	mov	r3, r8
   1753c:	bl	15de0 <dcngettext@plt+0x4db8>
   17540:	add	r1, r0, #1
   17544:	mov	r0, r1
   17548:	str	r1, [sp, #28]
   1754c:	bl	1a6c8 <dcngettext@plt+0x96a0>
   17550:	ldr	r3, [r4, #44]	; 0x2c
   17554:	ldr	r1, [sp, #28]
   17558:	str	r3, [sp, #16]
   1755c:	ldr	r3, [r4, #40]	; 0x28
   17560:	str	r5, [sp, #4]
   17564:	str	r3, [sp, #12]
   17568:	str	r9, [sp, #8]
   1756c:	ldr	ip, [r4]
   17570:	mov	r3, r8
   17574:	mov	r2, r7
   17578:	str	ip, [sp]
   1757c:	mov	sl, r0
   17580:	bl	15de0 <dcngettext@plt+0x4db8>
   17584:	mov	r0, sl
   17588:	str	fp, [r6]
   1758c:	add	sp, sp, #36	; 0x24
   17590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17594:	muleq	r2, r0, r1
   17598:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1759c:	cmp	r3, #0
   175a0:	sub	sp, sp, #44	; 0x2c
   175a4:	ldr	r4, [pc, #192]	; 1766c <dcngettext@plt+0x6644>
   175a8:	mov	r6, r2
   175ac:	movne	r4, r3
   175b0:	mov	r9, r1
   175b4:	mov	r8, r0
   175b8:	bl	10f2c <__errno_location@plt>
   175bc:	ldr	r3, [r4, #44]	; 0x2c
   175c0:	ldr	r5, [r4, #4]
   175c4:	add	sl, r4, #8
   175c8:	cmp	r6, #0
   175cc:	orreq	r5, r5, #1
   175d0:	mov	r1, #0
   175d4:	ldr	r2, [r0]
   175d8:	str	r3, [sp, #16]
   175dc:	ldr	r3, [r4, #40]	; 0x28
   175e0:	stmib	sp, {r5, sl}
   175e4:	str	r3, [sp, #12]
   175e8:	ldr	r3, [r4]
   175ec:	mov	r7, r0
   175f0:	str	r2, [sp, #28]
   175f4:	str	r3, [sp]
   175f8:	mov	r2, r8
   175fc:	mov	r3, r9
   17600:	mov	r0, r1
   17604:	bl	15de0 <dcngettext@plt+0x4db8>
   17608:	add	r1, r0, #1
   1760c:	mov	fp, r0
   17610:	mov	r0, r1
   17614:	str	r1, [sp, #36]	; 0x24
   17618:	bl	1a6c8 <dcngettext@plt+0x96a0>
   1761c:	ldr	r3, [r4, #44]	; 0x2c
   17620:	mov	r2, r8
   17624:	str	r3, [sp, #16]
   17628:	ldr	r3, [r4, #40]	; 0x28
   1762c:	str	r5, [sp, #4]
   17630:	str	r3, [sp, #12]
   17634:	str	sl, [sp, #8]
   17638:	ldr	ip, [r4]
   1763c:	ldr	r1, [sp, #36]	; 0x24
   17640:	mov	r3, r9
   17644:	str	ip, [sp]
   17648:	str	r0, [sp, #32]
   1764c:	bl	15de0 <dcngettext@plt+0x4db8>
   17650:	ldr	r2, [sp, #28]
   17654:	cmp	r6, #0
   17658:	str	r2, [r7]
   1765c:	ldr	r0, [sp, #32]
   17660:	strne	fp, [r6]
   17664:	add	sp, sp, #44	; 0x2c
   17668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1766c:	muleq	r2, r0, r1
   17670:	push	{r4, r5, r6, r7, r8, lr}
   17674:	ldr	r6, [pc, #116]	; 176f0 <dcngettext@plt+0x66c8>
   17678:	ldr	r3, [r6, #4]
   1767c:	ldr	r7, [r6]
   17680:	cmp	r3, #1
   17684:	movgt	r5, r7
   17688:	movgt	r4, #1
   1768c:	ble	176ac <dcngettext@plt+0x6684>
   17690:	ldr	r0, [r5, #12]
   17694:	bl	15b14 <dcngettext@plt+0x4aec>
   17698:	ldr	r3, [r6, #4]
   1769c:	add	r4, r4, #1
   176a0:	cmp	r3, r4
   176a4:	add	r5, r5, #8
   176a8:	bgt	17690 <dcngettext@plt+0x6668>
   176ac:	ldr	r0, [r7, #4]
   176b0:	ldr	r4, [pc, #60]	; 176f4 <dcngettext@plt+0x66cc>
   176b4:	cmp	r0, r4
   176b8:	beq	176cc <dcngettext@plt+0x66a4>
   176bc:	bl	15b14 <dcngettext@plt+0x4aec>
   176c0:	mov	r3, #256	; 0x100
   176c4:	str	r4, [r6, #12]
   176c8:	str	r3, [r6, #8]
   176cc:	ldr	r4, [pc, #36]	; 176f8 <dcngettext@plt+0x66d0>
   176d0:	cmp	r7, r4
   176d4:	beq	176e4 <dcngettext@plt+0x66bc>
   176d8:	mov	r0, r7
   176dc:	bl	15b14 <dcngettext@plt+0x4aec>
   176e0:	str	r4, [r6]
   176e4:	mov	r3, #1
   176e8:	str	r3, [r6, #4]
   176ec:	pop	{r4, r5, r6, r7, r8, pc}
   176f0:	andeq	sp, r2, r0, lsl r1
   176f4:	andeq	sp, r2, r0, asr #3
   176f8:	andeq	sp, r2, r8, lsl r1
   176fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17700:	sub	sp, sp, #44	; 0x2c
   17704:	mov	r5, r0
   17708:	mov	sl, r1
   1770c:	bl	10f2c <__errno_location@plt>
   17710:	ldr	r4, [pc, #400]	; 178a8 <dcngettext@plt+0x6880>
   17714:	cmn	r5, #-2147483647	; 0x80000001
   17718:	ldr	r6, [r4]
   1771c:	mov	r8, r0
   17720:	movne	r0, #0
   17724:	moveq	r0, #1
   17728:	ldr	r3, [r8]
   1772c:	orrs	r0, r0, r5, lsr #31
   17730:	str	r3, [sp, #24]
   17734:	bne	178a4 <dcngettext@plt+0x687c>
   17738:	ldr	r2, [r4, #4]
   1773c:	cmp	r5, r2
   17740:	blt	177a0 <dcngettext@plt+0x6778>
   17744:	add	r7, r4, #8
   17748:	cmp	r6, r7
   1774c:	str	r2, [sp, #36]	; 0x24
   17750:	beq	17874 <dcngettext@plt+0x684c>
   17754:	mov	r3, #8
   17758:	sub	r2, r5, r2
   1775c:	mov	r0, r6
   17760:	str	r3, [sp]
   17764:	add	r2, r2, #1
   17768:	mvn	r3, #-2147483648	; 0x80000000
   1776c:	add	r1, sp, #36	; 0x24
   17770:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17774:	mov	r6, r0
   17778:	str	r0, [r4]
   1777c:	ldr	r0, [r4, #4]
   17780:	ldr	r2, [sp, #36]	; 0x24
   17784:	mov	r1, #0
   17788:	sub	r2, r2, r0
   1778c:	add	r0, r6, r0, lsl #3
   17790:	lsl	r2, r2, #3
   17794:	bl	10f50 <memset@plt>
   17798:	ldr	r3, [sp, #36]	; 0x24
   1779c:	str	r3, [r4, #4]
   177a0:	ldr	r4, [pc, #260]	; 178ac <dcngettext@plt+0x6884>
   177a4:	add	fp, r6, r5, lsl #3
   177a8:	ldr	r9, [r6, r5, lsl #3]
   177ac:	ldr	r0, [r4, #4]
   177b0:	ldr	r3, [r4]
   177b4:	ldr	r7, [fp, #4]
   177b8:	ldr	r1, [r4, #44]	; 0x2c
   177bc:	ldr	r2, [r4, #40]	; 0x28
   177c0:	orr	r0, r0, #1
   177c4:	str	r3, [sp]
   177c8:	add	r3, r4, #8
   177cc:	str	r0, [sp, #28]
   177d0:	str	r0, [sp, #4]
   177d4:	str	r1, [sp, #16]
   177d8:	str	r2, [sp, #12]
   177dc:	str	r3, [sp, #8]
   177e0:	mov	r0, r7
   177e4:	mov	r1, r9
   177e8:	mvn	r3, #0
   177ec:	mov	r2, sl
   177f0:	bl	15de0 <dcngettext@plt+0x4db8>
   177f4:	cmp	r9, r0
   177f8:	bhi	17860 <dcngettext@plt+0x6838>
   177fc:	add	r3, r4, #48	; 0x30
   17800:	add	r9, r0, #1
   17804:	cmp	r7, r3
   17808:	str	r9, [r6, r5, lsl #3]
   1780c:	beq	17818 <dcngettext@plt+0x67f0>
   17810:	mov	r0, r7
   17814:	bl	15b14 <dcngettext@plt+0x4aec>
   17818:	mov	r0, r9
   1781c:	bl	1a6c8 <dcngettext@plt+0x96a0>
   17820:	ldr	ip, [r4, #44]	; 0x2c
   17824:	ldr	r3, [r4]
   17828:	ldr	lr, [r4, #40]	; 0x28
   1782c:	ldr	r4, [pc, #124]	; 178b0 <dcngettext@plt+0x6888>
   17830:	mov	r2, sl
   17834:	mov	r1, r9
   17838:	str	r0, [fp, #4]
   1783c:	str	r4, [sp, #8]
   17840:	ldr	r4, [sp, #28]
   17844:	str	r3, [sp]
   17848:	str	r4, [sp, #4]
   1784c:	str	ip, [sp, #16]
   17850:	str	lr, [sp, #12]
   17854:	mvn	r3, #0
   17858:	mov	r7, r0
   1785c:	bl	15de0 <dcngettext@plt+0x4db8>
   17860:	ldr	r3, [sp, #24]
   17864:	mov	r0, r7
   17868:	str	r3, [r8]
   1786c:	add	sp, sp, #44	; 0x2c
   17870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17874:	mov	r3, #8
   17878:	sub	r2, r5, r2
   1787c:	str	r3, [sp]
   17880:	add	r1, sp, #36	; 0x24
   17884:	add	r2, r2, #1
   17888:	mvn	r3, #-2147483648	; 0x80000000
   1788c:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17890:	mov	r6, r0
   17894:	ldm	r7, {r0, r1}
   17898:	str	r6, [r4]
   1789c:	stm	r6, {r0, r1}
   178a0:	b	1777c <dcngettext@plt+0x6754>
   178a4:	bl	11010 <abort@plt>
   178a8:	andeq	sp, r2, r0, lsl r1
   178ac:	muleq	r2, r0, r1
   178b0:	muleq	r2, r8, r1
   178b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   178b8:	sub	sp, sp, #52	; 0x34
   178bc:	mov	r5, r0
   178c0:	mov	sl, r1
   178c4:	mov	fp, r2
   178c8:	bl	10f2c <__errno_location@plt>
   178cc:	ldr	r4, [pc, #408]	; 17a6c <dcngettext@plt+0x6a44>
   178d0:	cmn	r5, #-2147483647	; 0x80000001
   178d4:	ldr	r6, [r4]
   178d8:	mov	r8, r0
   178dc:	movne	r0, #0
   178e0:	moveq	r0, #1
   178e4:	ldr	r3, [r8]
   178e8:	orrs	r0, r0, r5, lsr #31
   178ec:	str	r3, [sp, #28]
   178f0:	bne	17a68 <dcngettext@plt+0x6a40>
   178f4:	ldr	r2, [r4, #4]
   178f8:	cmp	r5, r2
   178fc:	blt	1795c <dcngettext@plt+0x6934>
   17900:	add	r7, r4, #8
   17904:	cmp	r6, r7
   17908:	str	r2, [sp, #44]	; 0x2c
   1790c:	beq	17a38 <dcngettext@plt+0x6a10>
   17910:	mov	r3, #8
   17914:	sub	r2, r5, r2
   17918:	mov	r0, r6
   1791c:	str	r3, [sp]
   17920:	add	r2, r2, #1
   17924:	mvn	r3, #-2147483648	; 0x80000000
   17928:	add	r1, sp, #44	; 0x2c
   1792c:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17930:	mov	r6, r0
   17934:	str	r0, [r4]
   17938:	ldr	r0, [r4, #4]
   1793c:	ldr	r2, [sp, #44]	; 0x2c
   17940:	mov	r1, #0
   17944:	sub	r2, r2, r0
   17948:	add	r0, r6, r0, lsl #3
   1794c:	lsl	r2, r2, #3
   17950:	bl	10f50 <memset@plt>
   17954:	ldr	r3, [sp, #44]	; 0x2c
   17958:	str	r3, [r4, #4]
   1795c:	ldr	r4, [pc, #268]	; 17a70 <dcngettext@plt+0x6a48>
   17960:	add	r3, r6, r5, lsl #3
   17964:	str	r3, [sp, #32]
   17968:	ldr	r7, [r3, #4]
   1796c:	ldr	r0, [r4, #4]
   17970:	ldr	r3, [r4]
   17974:	ldr	r9, [r6, r5, lsl #3]
   17978:	ldr	r1, [r4, #44]	; 0x2c
   1797c:	ldr	r2, [r4, #40]	; 0x28
   17980:	orr	r0, r0, #1
   17984:	str	r3, [sp]
   17988:	add	r3, r4, #8
   1798c:	str	r0, [sp, #36]	; 0x24
   17990:	str	r0, [sp, #4]
   17994:	str	r1, [sp, #16]
   17998:	str	r2, [sp, #12]
   1799c:	str	r3, [sp, #8]
   179a0:	mov	r0, r7
   179a4:	mov	r1, r9
   179a8:	mov	r3, fp
   179ac:	mov	r2, sl
   179b0:	bl	15de0 <dcngettext@plt+0x4db8>
   179b4:	cmp	r9, r0
   179b8:	bhi	17a24 <dcngettext@plt+0x69fc>
   179bc:	add	r3, r4, #48	; 0x30
   179c0:	add	r9, r0, #1
   179c4:	cmp	r7, r3
   179c8:	str	r9, [r6, r5, lsl #3]
   179cc:	beq	179d8 <dcngettext@plt+0x69b0>
   179d0:	mov	r0, r7
   179d4:	bl	15b14 <dcngettext@plt+0x4aec>
   179d8:	mov	r0, r9
   179dc:	bl	1a6c8 <dcngettext@plt+0x96a0>
   179e0:	ldr	ip, [sp, #32]
   179e4:	ldr	lr, [r4, #44]	; 0x2c
   179e8:	ldr	r5, [r4, #40]	; 0x28
   179ec:	mov	r3, fp
   179f0:	mov	r2, sl
   179f4:	mov	r1, r9
   179f8:	str	r0, [ip, #4]
   179fc:	ldr	ip, [r4]
   17a00:	ldr	r4, [pc, #108]	; 17a74 <dcngettext@plt+0x6a4c>
   17a04:	str	lr, [sp, #16]
   17a08:	str	r4, [sp, #8]
   17a0c:	ldr	r4, [sp, #36]	; 0x24
   17a10:	str	r5, [sp, #12]
   17a14:	str	r4, [sp, #4]
   17a18:	str	ip, [sp]
   17a1c:	mov	r7, r0
   17a20:	bl	15de0 <dcngettext@plt+0x4db8>
   17a24:	ldr	r3, [sp, #28]
   17a28:	mov	r0, r7
   17a2c:	str	r3, [r8]
   17a30:	add	sp, sp, #52	; 0x34
   17a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a38:	mov	r3, #8
   17a3c:	sub	r2, r5, r2
   17a40:	str	r3, [sp]
   17a44:	add	r1, sp, #44	; 0x2c
   17a48:	add	r2, r2, #1
   17a4c:	mvn	r3, #-2147483648	; 0x80000000
   17a50:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17a54:	mov	r6, r0
   17a58:	ldm	r7, {r0, r1}
   17a5c:	str	r6, [r4]
   17a60:	stm	r6, {r0, r1}
   17a64:	b	17938 <dcngettext@plt+0x6910>
   17a68:	bl	11010 <abort@plt>
   17a6c:	andeq	sp, r2, r0, lsl r1
   17a70:	muleq	r2, r0, r1
   17a74:	muleq	r2, r8, r1
   17a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a7c:	sub	sp, sp, #44	; 0x2c
   17a80:	mov	sl, r0
   17a84:	bl	10f2c <__errno_location@plt>
   17a88:	ldr	r4, [pc, #352]	; 17bf0 <dcngettext@plt+0x6bc8>
   17a8c:	ldr	r2, [r4, #4]
   17a90:	ldr	r5, [r4]
   17a94:	cmp	r2, #0
   17a98:	ldr	r3, [r0]
   17a9c:	mov	r8, r0
   17aa0:	str	r3, [sp, #28]
   17aa4:	bgt	17b00 <dcngettext@plt+0x6ad8>
   17aa8:	add	r6, r4, #8
   17aac:	cmp	r5, r6
   17ab0:	str	r2, [sp, #36]	; 0x24
   17ab4:	beq	17bc0 <dcngettext@plt+0x6b98>
   17ab8:	mov	r3, #8
   17abc:	mov	r0, r5
   17ac0:	str	r3, [sp]
   17ac4:	rsb	r2, r2, #1
   17ac8:	mvn	r3, #-2147483648	; 0x80000000
   17acc:	add	r1, sp, #36	; 0x24
   17ad0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17ad4:	mov	r5, r0
   17ad8:	str	r0, [r4]
   17adc:	ldr	r0, [r4, #4]
   17ae0:	ldr	r2, [sp, #36]	; 0x24
   17ae4:	mov	r1, #0
   17ae8:	sub	r2, r2, r0
   17aec:	add	r0, r5, r0, lsl #3
   17af0:	lsl	r2, r2, #3
   17af4:	bl	10f50 <memset@plt>
   17af8:	ldr	r3, [sp, #36]	; 0x24
   17afc:	str	r3, [r4, #4]
   17b00:	ldr	r4, [pc, #236]	; 17bf4 <dcngettext@plt+0x6bcc>
   17b04:	ldr	r9, [r5]
   17b08:	ldr	r6, [r5, #4]
   17b0c:	ldr	r7, [r4, #4]
   17b10:	ldr	r1, [r4, #44]	; 0x2c
   17b14:	ldr	r2, [r4, #40]	; 0x28
   17b18:	ldr	r3, [r4]
   17b1c:	orr	r7, r7, #1
   17b20:	add	fp, r4, #8
   17b24:	str	r1, [sp, #16]
   17b28:	str	r2, [sp, #12]
   17b2c:	str	r3, [sp]
   17b30:	str	r7, [sp, #4]
   17b34:	str	fp, [sp, #8]
   17b38:	mov	r1, r9
   17b3c:	mov	r0, r6
   17b40:	mvn	r3, #0
   17b44:	mov	r2, sl
   17b48:	bl	15de0 <dcngettext@plt+0x4db8>
   17b4c:	cmp	r9, r0
   17b50:	bhi	17bac <dcngettext@plt+0x6b84>
   17b54:	add	r3, r4, #48	; 0x30
   17b58:	add	r9, r0, #1
   17b5c:	cmp	r6, r3
   17b60:	str	r9, [r5]
   17b64:	beq	17b70 <dcngettext@plt+0x6b48>
   17b68:	mov	r0, r6
   17b6c:	bl	15b14 <dcngettext@plt+0x4aec>
   17b70:	mov	r0, r9
   17b74:	bl	1a6c8 <dcngettext@plt+0x96a0>
   17b78:	ldr	ip, [r4, #44]	; 0x2c
   17b7c:	ldr	r3, [r4]
   17b80:	ldr	lr, [r4, #40]	; 0x28
   17b84:	mov	r2, sl
   17b88:	mov	r1, r9
   17b8c:	str	r0, [r5, #4]
   17b90:	str	r3, [sp]
   17b94:	stmib	sp, {r7, fp}
   17b98:	str	ip, [sp, #16]
   17b9c:	str	lr, [sp, #12]
   17ba0:	mvn	r3, #0
   17ba4:	mov	r6, r0
   17ba8:	bl	15de0 <dcngettext@plt+0x4db8>
   17bac:	ldr	r3, [sp, #28]
   17bb0:	mov	r0, r6
   17bb4:	str	r3, [r8]
   17bb8:	add	sp, sp, #44	; 0x2c
   17bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bc0:	mov	r3, #8
   17bc4:	str	r3, [sp]
   17bc8:	add	r1, sp, #36	; 0x24
   17bcc:	rsb	r2, r2, #1
   17bd0:	mvn	r3, #-2147483648	; 0x80000000
   17bd4:	mov	r0, #0
   17bd8:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17bdc:	mov	r5, r0
   17be0:	ldm	r6, {r0, r1}
   17be4:	str	r5, [r4]
   17be8:	stm	r5, {r0, r1}
   17bec:	b	17adc <dcngettext@plt+0x6ab4>
   17bf0:	andeq	sp, r2, r0, lsl r1
   17bf4:	muleq	r2, r0, r1
   17bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bfc:	sub	sp, sp, #44	; 0x2c
   17c00:	mov	r9, r0
   17c04:	mov	sl, r1
   17c08:	bl	10f2c <__errno_location@plt>
   17c0c:	ldr	r4, [pc, #364]	; 17d80 <dcngettext@plt+0x6d58>
   17c10:	ldr	r2, [r4, #4]
   17c14:	ldr	r5, [r4]
   17c18:	cmp	r2, #0
   17c1c:	ldr	r3, [r0]
   17c20:	mov	r7, r0
   17c24:	str	r3, [sp, #24]
   17c28:	bgt	17c84 <dcngettext@plt+0x6c5c>
   17c2c:	add	r6, r4, #8
   17c30:	cmp	r5, r6
   17c34:	str	r2, [sp, #36]	; 0x24
   17c38:	beq	17d50 <dcngettext@plt+0x6d28>
   17c3c:	mov	r3, #8
   17c40:	mov	r0, r5
   17c44:	str	r3, [sp]
   17c48:	rsb	r2, r2, #1
   17c4c:	mvn	r3, #-2147483648	; 0x80000000
   17c50:	add	r1, sp, #36	; 0x24
   17c54:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17c58:	mov	r5, r0
   17c5c:	str	r0, [r4]
   17c60:	ldr	r0, [r4, #4]
   17c64:	ldr	r2, [sp, #36]	; 0x24
   17c68:	mov	r1, #0
   17c6c:	sub	r2, r2, r0
   17c70:	add	r0, r5, r0, lsl #3
   17c74:	lsl	r2, r2, #3
   17c78:	bl	10f50 <memset@plt>
   17c7c:	ldr	r3, [sp, #36]	; 0x24
   17c80:	str	r3, [r4, #4]
   17c84:	ldr	r4, [pc, #248]	; 17d84 <dcngettext@plt+0x6d5c>
   17c88:	ldr	r8, [r5]
   17c8c:	ldr	r6, [r5, #4]
   17c90:	ldr	r0, [r4, #4]
   17c94:	ldr	r1, [r4, #44]	; 0x2c
   17c98:	ldr	r2, [r4, #40]	; 0x28
   17c9c:	ldr	r3, [r4]
   17ca0:	orr	r0, r0, #1
   17ca4:	add	fp, r4, #8
   17ca8:	str	r0, [sp, #28]
   17cac:	str	r0, [sp, #4]
   17cb0:	str	r1, [sp, #16]
   17cb4:	str	r2, [sp, #12]
   17cb8:	str	r3, [sp]
   17cbc:	str	fp, [sp, #8]
   17cc0:	mov	r1, r8
   17cc4:	mov	r0, r6
   17cc8:	mov	r3, sl
   17ccc:	mov	r2, r9
   17cd0:	bl	15de0 <dcngettext@plt+0x4db8>
   17cd4:	cmp	r8, r0
   17cd8:	bhi	17d3c <dcngettext@plt+0x6d14>
   17cdc:	add	r3, r4, #48	; 0x30
   17ce0:	add	r8, r0, #1
   17ce4:	cmp	r6, r3
   17ce8:	str	r8, [r5]
   17cec:	beq	17cf8 <dcngettext@plt+0x6cd0>
   17cf0:	mov	r0, r6
   17cf4:	bl	15b14 <dcngettext@plt+0x4aec>
   17cf8:	mov	r0, r8
   17cfc:	bl	1a6c8 <dcngettext@plt+0x96a0>
   17d00:	ldr	lr, [r4, #44]	; 0x2c
   17d04:	ldr	ip, [r4]
   17d08:	mov	r3, sl
   17d0c:	mov	r2, r9
   17d10:	mov	r1, r8
   17d14:	str	r0, [r5, #4]
   17d18:	ldr	r5, [r4, #40]	; 0x28
   17d1c:	ldr	r4, [sp, #28]
   17d20:	str	fp, [sp, #8]
   17d24:	str	r4, [sp, #4]
   17d28:	str	lr, [sp, #16]
   17d2c:	str	r5, [sp, #12]
   17d30:	str	ip, [sp]
   17d34:	mov	r6, r0
   17d38:	bl	15de0 <dcngettext@plt+0x4db8>
   17d3c:	ldr	r3, [sp, #24]
   17d40:	mov	r0, r6
   17d44:	str	r3, [r7]
   17d48:	add	sp, sp, #44	; 0x2c
   17d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d50:	mov	r3, #8
   17d54:	str	r3, [sp]
   17d58:	add	r1, sp, #36	; 0x24
   17d5c:	rsb	r2, r2, #1
   17d60:	mvn	r3, #-2147483648	; 0x80000000
   17d64:	mov	r0, #0
   17d68:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17d6c:	mov	r5, r0
   17d70:	ldm	r6, {r0, r1}
   17d74:	str	r5, [r4]
   17d78:	stm	r5, {r0, r1}
   17d7c:	b	17c60 <dcngettext@plt+0x6c38>
   17d80:	andeq	sp, r2, r0, lsl r1
   17d84:	muleq	r2, r0, r1
   17d88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d8c:	sub	sp, sp, #132	; 0x84
   17d90:	mov	r5, r1
   17d94:	mov	r4, r0
   17d98:	mov	r9, r2
   17d9c:	add	r0, sp, #80	; 0x50
   17da0:	mov	r2, #48	; 0x30
   17da4:	mov	r1, #0
   17da8:	bl	10f50 <memset@plt>
   17dac:	cmp	r5, #10
   17db0:	beq	17f68 <dcngettext@plt+0x6f40>
   17db4:	add	lr, sp, #80	; 0x50
   17db8:	str	r5, [sp, #80]	; 0x50
   17dbc:	ldm	lr!, {r0, r1, r2, r3}
   17dc0:	add	ip, sp, #32
   17dc4:	ldr	r6, [pc, #416]	; 17f6c <dcngettext@plt+0x6f44>
   17dc8:	stmia	ip!, {r0, r1, r2, r3}
   17dcc:	ldm	lr!, {r0, r1, r2, r3}
   17dd0:	stmia	ip!, {r0, r1, r2, r3}
   17dd4:	ldm	lr, {r0, r1, r2, r3}
   17dd8:	stm	ip, {r0, r1, r2, r3}
   17ddc:	bl	10f2c <__errno_location@plt>
   17de0:	cmn	r4, #-2147483647	; 0x80000001
   17de4:	ldr	r5, [r6]
   17de8:	mov	r7, r0
   17dec:	movne	r0, #0
   17df0:	moveq	r0, #1
   17df4:	ldr	r3, [r7]
   17df8:	orrs	r0, r0, r4, lsr #31
   17dfc:	str	r3, [sp, #24]
   17e00:	bne	17f68 <dcngettext@plt+0x6f40>
   17e04:	ldr	r2, [r6, #4]
   17e08:	cmp	r4, r2
   17e0c:	blt	17e6c <dcngettext@plt+0x6e44>
   17e10:	add	r8, r6, #8
   17e14:	cmp	r5, r8
   17e18:	str	r2, [sp, #80]	; 0x50
   17e1c:	beq	17f38 <dcngettext@plt+0x6f10>
   17e20:	mov	r3, #8
   17e24:	sub	r2, r4, r2
   17e28:	mov	r0, r5
   17e2c:	str	r3, [sp]
   17e30:	add	r2, r2, #1
   17e34:	add	r1, sp, #80	; 0x50
   17e38:	mvn	r3, #-2147483648	; 0x80000000
   17e3c:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17e40:	mov	r5, r0
   17e44:	str	r0, [r6]
   17e48:	ldr	r0, [r6, #4]
   17e4c:	ldr	r2, [sp, #80]	; 0x50
   17e50:	mov	r1, #0
   17e54:	sub	r2, r2, r0
   17e58:	add	r0, r5, r0, lsl #3
   17e5c:	lsl	r2, r2, #3
   17e60:	bl	10f50 <memset@plt>
   17e64:	ldr	r3, [sp, #80]	; 0x50
   17e68:	str	r3, [r6, #4]
   17e6c:	add	fp, r5, r4, lsl #3
   17e70:	ldr	r1, [sp, #36]	; 0x24
   17e74:	ldr	r8, [r5, r4, lsl #3]
   17e78:	ldr	r6, [fp, #4]
   17e7c:	ldr	r2, [sp, #72]	; 0x48
   17e80:	ldr	r3, [sp, #32]
   17e84:	ldr	ip, [sp, #76]	; 0x4c
   17e88:	orr	r1, r1, #1
   17e8c:	add	sl, sp, #40	; 0x28
   17e90:	str	r1, [sp, #28]
   17e94:	str	r1, [sp, #4]
   17e98:	str	r2, [sp, #12]
   17e9c:	str	r3, [sp]
   17ea0:	mov	r0, r6
   17ea4:	mov	r1, r8
   17ea8:	str	ip, [sp, #16]
   17eac:	str	sl, [sp, #8]
   17eb0:	mvn	r3, #0
   17eb4:	mov	r2, r9
   17eb8:	bl	15de0 <dcngettext@plt+0x4db8>
   17ebc:	cmp	r8, r0
   17ec0:	bhi	17f24 <dcngettext@plt+0x6efc>
   17ec4:	ldr	r3, [pc, #164]	; 17f70 <dcngettext@plt+0x6f48>
   17ec8:	add	r8, r0, #1
   17ecc:	cmp	r6, r3
   17ed0:	str	r8, [r5, r4, lsl #3]
   17ed4:	beq	17ee0 <dcngettext@plt+0x6eb8>
   17ed8:	mov	r0, r6
   17edc:	bl	15b14 <dcngettext@plt+0x4aec>
   17ee0:	mov	r0, r8
   17ee4:	bl	1a6c8 <dcngettext@plt+0x96a0>
   17ee8:	ldr	lr, [sp, #76]	; 0x4c
   17eec:	ldr	r3, [sp, #32]
   17ef0:	ldr	ip, [sp, #72]	; 0x48
   17ef4:	ldr	r4, [sp, #28]
   17ef8:	mov	r2, r9
   17efc:	mov	r1, r8
   17f00:	str	r0, [fp, #4]
   17f04:	str	r3, [sp]
   17f08:	str	sl, [sp, #8]
   17f0c:	str	r4, [sp, #4]
   17f10:	str	lr, [sp, #16]
   17f14:	str	ip, [sp, #12]
   17f18:	mvn	r3, #0
   17f1c:	mov	r6, r0
   17f20:	bl	15de0 <dcngettext@plt+0x4db8>
   17f24:	ldr	r3, [sp, #24]
   17f28:	mov	r0, r6
   17f2c:	str	r3, [r7]
   17f30:	add	sp, sp, #132	; 0x84
   17f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f38:	mov	r3, #8
   17f3c:	sub	r2, r4, r2
   17f40:	add	r1, sp, #80	; 0x50
   17f44:	str	r3, [sp]
   17f48:	add	r2, r2, #1
   17f4c:	mvn	r3, #-2147483648	; 0x80000000
   17f50:	bl	1a8e4 <dcngettext@plt+0x98bc>
   17f54:	mov	r5, r0
   17f58:	ldm	r8, {r0, r1}
   17f5c:	str	r5, [r6]
   17f60:	stm	r5, {r0, r1}
   17f64:	b	17e48 <dcngettext@plt+0x6e20>
   17f68:	bl	11010 <abort@plt>
   17f6c:	andeq	sp, r2, r0, lsl r1
   17f70:	andeq	sp, r2, r0, asr #3
   17f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f78:	sub	sp, sp, #132	; 0x84
   17f7c:	mov	r5, r1
   17f80:	mov	r4, r0
   17f84:	mov	r9, r2
   17f88:	add	r0, sp, #80	; 0x50
   17f8c:	mov	r2, #48	; 0x30
   17f90:	mov	r1, #0
   17f94:	mov	sl, r3
   17f98:	bl	10f50 <memset@plt>
   17f9c:	cmp	r5, #10
   17fa0:	beq	1815c <dcngettext@plt+0x7134>
   17fa4:	add	lr, sp, #80	; 0x50
   17fa8:	str	r5, [sp, #80]	; 0x50
   17fac:	ldm	lr!, {r0, r1, r2, r3}
   17fb0:	add	ip, sp, #32
   17fb4:	ldr	r6, [pc, #420]	; 18160 <dcngettext@plt+0x7138>
   17fb8:	stmia	ip!, {r0, r1, r2, r3}
   17fbc:	ldm	lr!, {r0, r1, r2, r3}
   17fc0:	stmia	ip!, {r0, r1, r2, r3}
   17fc4:	ldm	lr, {r0, r1, r2, r3}
   17fc8:	stm	ip, {r0, r1, r2, r3}
   17fcc:	bl	10f2c <__errno_location@plt>
   17fd0:	cmn	r4, #-2147483647	; 0x80000001
   17fd4:	ldr	r5, [r6]
   17fd8:	mov	r7, r0
   17fdc:	movne	r0, #0
   17fe0:	moveq	r0, #1
   17fe4:	ldr	r3, [r7]
   17fe8:	orrs	r0, r0, r4, lsr #31
   17fec:	str	r3, [sp, #24]
   17ff0:	bne	1815c <dcngettext@plt+0x7134>
   17ff4:	ldr	r2, [r6, #4]
   17ff8:	cmp	r4, r2
   17ffc:	blt	1805c <dcngettext@plt+0x7034>
   18000:	add	r8, r6, #8
   18004:	cmp	r5, r8
   18008:	str	r2, [sp, #80]	; 0x50
   1800c:	beq	1812c <dcngettext@plt+0x7104>
   18010:	mov	r3, #8
   18014:	sub	r2, r4, r2
   18018:	mov	r0, r5
   1801c:	str	r3, [sp]
   18020:	add	r2, r2, #1
   18024:	add	r1, sp, #80	; 0x50
   18028:	mvn	r3, #-2147483648	; 0x80000000
   1802c:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18030:	mov	r5, r0
   18034:	str	r0, [r6]
   18038:	ldr	r0, [r6, #4]
   1803c:	ldr	r2, [sp, #80]	; 0x50
   18040:	mov	r1, #0
   18044:	sub	r2, r2, r0
   18048:	add	r0, r5, r0, lsl #3
   1804c:	lsl	r2, r2, #3
   18050:	bl	10f50 <memset@plt>
   18054:	ldr	r3, [sp, #80]	; 0x50
   18058:	str	r3, [r6, #4]
   1805c:	add	fp, r5, r4, lsl #3
   18060:	ldr	r3, [sp, #32]
   18064:	ldr	r1, [sp, #36]	; 0x24
   18068:	ldr	r8, [r5, r4, lsl #3]
   1806c:	ldr	r6, [fp, #4]
   18070:	ldr	r2, [sp, #72]	; 0x48
   18074:	ldr	ip, [sp, #76]	; 0x4c
   18078:	orr	r1, r1, #1
   1807c:	str	r3, [sp]
   18080:	add	r3, sp, #40	; 0x28
   18084:	str	r1, [sp, #28]
   18088:	str	r1, [sp, #4]
   1808c:	str	r2, [sp, #12]
   18090:	str	r3, [sp, #8]
   18094:	mov	r0, r6
   18098:	mov	r1, r8
   1809c:	str	ip, [sp, #16]
   180a0:	mov	r3, sl
   180a4:	mov	r2, r9
   180a8:	bl	15de0 <dcngettext@plt+0x4db8>
   180ac:	cmp	r8, r0
   180b0:	bhi	18118 <dcngettext@plt+0x70f0>
   180b4:	ldr	r3, [pc, #168]	; 18164 <dcngettext@plt+0x713c>
   180b8:	add	r8, r0, #1
   180bc:	cmp	r6, r3
   180c0:	str	r8, [r5, r4, lsl #3]
   180c4:	beq	180d0 <dcngettext@plt+0x70a8>
   180c8:	mov	r0, r6
   180cc:	bl	15b14 <dcngettext@plt+0x4aec>
   180d0:	mov	r0, r8
   180d4:	bl	1a6c8 <dcngettext@plt+0x96a0>
   180d8:	add	lr, sp, #40	; 0x28
   180dc:	ldr	ip, [sp, #76]	; 0x4c
   180e0:	ldr	r4, [sp, #72]	; 0x48
   180e4:	ldr	r5, [sp, #28]
   180e8:	mov	r3, sl
   180ec:	mov	r2, r9
   180f0:	mov	r1, r8
   180f4:	str	r0, [fp, #4]
   180f8:	str	lr, [sp, #8]
   180fc:	ldr	lr, [sp, #32]
   18100:	str	r5, [sp, #4]
   18104:	str	ip, [sp, #16]
   18108:	str	r4, [sp, #12]
   1810c:	str	lr, [sp]
   18110:	mov	r6, r0
   18114:	bl	15de0 <dcngettext@plt+0x4db8>
   18118:	ldr	r3, [sp, #24]
   1811c:	mov	r0, r6
   18120:	str	r3, [r7]
   18124:	add	sp, sp, #132	; 0x84
   18128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1812c:	mov	r3, #8
   18130:	sub	r2, r4, r2
   18134:	add	r1, sp, #80	; 0x50
   18138:	str	r3, [sp]
   1813c:	add	r2, r2, #1
   18140:	mvn	r3, #-2147483648	; 0x80000000
   18144:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18148:	mov	r5, r0
   1814c:	ldm	r8, {r0, r1}
   18150:	str	r5, [r6]
   18154:	stm	r5, {r0, r1}
   18158:	b	18038 <dcngettext@plt+0x7010>
   1815c:	bl	11010 <abort@plt>
   18160:	andeq	sp, r2, r0, lsl r1
   18164:	andeq	sp, r2, r0, asr #3
   18168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1816c:	sub	sp, sp, #124	; 0x7c
   18170:	mov	r4, r0
   18174:	mov	r9, r1
   18178:	add	r0, sp, #72	; 0x48
   1817c:	mov	r2, #48	; 0x30
   18180:	mov	r1, #0
   18184:	bl	10f50 <memset@plt>
   18188:	cmp	r4, #10
   1818c:	beq	18318 <dcngettext@plt+0x72f0>
   18190:	add	lr, sp, #72	; 0x48
   18194:	str	r4, [sp, #72]	; 0x48
   18198:	ldm	lr!, {r0, r1, r2, r3}
   1819c:	add	ip, sp, #24
   181a0:	ldr	r5, [pc, #372]	; 1831c <dcngettext@plt+0x72f4>
   181a4:	stmia	ip!, {r0, r1, r2, r3}
   181a8:	ldm	lr!, {r0, r1, r2, r3}
   181ac:	stmia	ip!, {r0, r1, r2, r3}
   181b0:	ldm	lr, {r0, r1, r2, r3}
   181b4:	stm	ip, {r0, r1, r2, r3}
   181b8:	bl	10f2c <__errno_location@plt>
   181bc:	ldr	r2, [r5, #4]
   181c0:	ldr	r4, [r5]
   181c4:	cmp	r2, #0
   181c8:	mov	r7, r0
   181cc:	ldr	fp, [r0]
   181d0:	bgt	1822c <dcngettext@plt+0x7204>
   181d4:	add	r6, r5, #8
   181d8:	cmp	r4, r6
   181dc:	str	r2, [sp, #72]	; 0x48
   181e0:	beq	182e8 <dcngettext@plt+0x72c0>
   181e4:	mov	r3, #8
   181e8:	mov	r0, r4
   181ec:	str	r3, [sp]
   181f0:	rsb	r2, r2, #1
   181f4:	add	r1, sp, #72	; 0x48
   181f8:	mvn	r3, #-2147483648	; 0x80000000
   181fc:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18200:	mov	r4, r0
   18204:	str	r0, [r5]
   18208:	ldr	r0, [r5, #4]
   1820c:	ldr	r2, [sp, #72]	; 0x48
   18210:	mov	r1, #0
   18214:	sub	r2, r2, r0
   18218:	add	r0, r4, r0, lsl #3
   1821c:	lsl	r2, r2, #3
   18220:	bl	10f50 <memset@plt>
   18224:	ldr	r3, [sp, #72]	; 0x48
   18228:	str	r3, [r5, #4]
   1822c:	ldr	r6, [sp, #28]
   18230:	ldr	r8, [r4]
   18234:	ldr	r5, [r4, #4]
   18238:	ldr	r2, [sp, #64]	; 0x40
   1823c:	ldr	r3, [sp, #24]
   18240:	ldr	ip, [sp, #68]	; 0x44
   18244:	orr	r6, r6, #1
   18248:	add	sl, sp, #32
   1824c:	str	r2, [sp, #12]
   18250:	str	r3, [sp]
   18254:	str	r6, [sp, #4]
   18258:	mov	r1, r8
   1825c:	mov	r0, r5
   18260:	str	ip, [sp, #16]
   18264:	str	sl, [sp, #8]
   18268:	mvn	r3, #0
   1826c:	mov	r2, r9
   18270:	bl	15de0 <dcngettext@plt+0x4db8>
   18274:	cmp	r8, r0
   18278:	bhi	182d8 <dcngettext@plt+0x72b0>
   1827c:	ldr	r3, [pc, #156]	; 18320 <dcngettext@plt+0x72f8>
   18280:	add	r8, r0, #1
   18284:	cmp	r5, r3
   18288:	str	r8, [r4]
   1828c:	beq	18298 <dcngettext@plt+0x7270>
   18290:	mov	r0, r5
   18294:	bl	15b14 <dcngettext@plt+0x4aec>
   18298:	mov	r0, r8
   1829c:	bl	1a6c8 <dcngettext@plt+0x96a0>
   182a0:	ldr	lr, [sp, #68]	; 0x44
   182a4:	ldr	r3, [sp, #24]
   182a8:	ldr	ip, [sp, #64]	; 0x40
   182ac:	mov	r2, r9
   182b0:	mov	r1, r8
   182b4:	str	r0, [r4, #4]
   182b8:	str	r3, [sp]
   182bc:	str	sl, [sp, #8]
   182c0:	str	r6, [sp, #4]
   182c4:	str	lr, [sp, #16]
   182c8:	str	ip, [sp, #12]
   182cc:	mvn	r3, #0
   182d0:	mov	r5, r0
   182d4:	bl	15de0 <dcngettext@plt+0x4db8>
   182d8:	mov	r0, r5
   182dc:	str	fp, [r7]
   182e0:	add	sp, sp, #124	; 0x7c
   182e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182e8:	mov	r3, #8
   182ec:	add	r1, sp, #72	; 0x48
   182f0:	str	r3, [sp]
   182f4:	rsb	r2, r2, #1
   182f8:	mvn	r3, #-2147483648	; 0x80000000
   182fc:	mov	r0, #0
   18300:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18304:	mov	r4, r0
   18308:	ldm	r6, {r0, r1}
   1830c:	str	r4, [r5]
   18310:	stm	r4, {r0, r1}
   18314:	b	18208 <dcngettext@plt+0x71e0>
   18318:	bl	11010 <abort@plt>
   1831c:	andeq	sp, r2, r0, lsl r1
   18320:	andeq	sp, r2, r0, asr #3
   18324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18328:	sub	sp, sp, #132	; 0x84
   1832c:	mov	r4, r0
   18330:	mov	r9, r1
   18334:	mov	sl, r2
   18338:	add	r0, sp, #80	; 0x50
   1833c:	mov	r2, #48	; 0x30
   18340:	mov	r1, #0
   18344:	bl	10f50 <memset@plt>
   18348:	cmp	r4, #10
   1834c:	beq	184e0 <dcngettext@plt+0x74b8>
   18350:	add	lr, sp, #80	; 0x50
   18354:	str	r4, [sp, #80]	; 0x50
   18358:	ldm	lr!, {r0, r1, r2, r3}
   1835c:	add	ip, sp, #32
   18360:	ldr	r5, [pc, #380]	; 184e4 <dcngettext@plt+0x74bc>
   18364:	stmia	ip!, {r0, r1, r2, r3}
   18368:	ldm	lr!, {r0, r1, r2, r3}
   1836c:	stmia	ip!, {r0, r1, r2, r3}
   18370:	ldm	lr, {r0, r1, r2, r3}
   18374:	stm	ip, {r0, r1, r2, r3}
   18378:	bl	10f2c <__errno_location@plt>
   1837c:	ldr	r2, [r5, #4]
   18380:	ldr	r4, [r5]
   18384:	cmp	r2, #0
   18388:	ldr	r3, [r0]
   1838c:	mov	r7, r0
   18390:	str	r3, [sp, #28]
   18394:	bgt	183f0 <dcngettext@plt+0x73c8>
   18398:	add	r6, r5, #8
   1839c:	cmp	r4, r6
   183a0:	str	r2, [sp, #80]	; 0x50
   183a4:	beq	184b0 <dcngettext@plt+0x7488>
   183a8:	mov	r3, #8
   183ac:	mov	r0, r4
   183b0:	str	r3, [sp]
   183b4:	rsb	r2, r2, #1
   183b8:	add	r1, sp, #80	; 0x50
   183bc:	mvn	r3, #-2147483648	; 0x80000000
   183c0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   183c4:	mov	r4, r0
   183c8:	str	r0, [r5]
   183cc:	ldr	r0, [r5, #4]
   183d0:	ldr	r2, [sp, #80]	; 0x50
   183d4:	mov	r1, #0
   183d8:	sub	r2, r2, r0
   183dc:	add	r0, r4, r0, lsl #3
   183e0:	lsl	r2, r2, #3
   183e4:	bl	10f50 <memset@plt>
   183e8:	ldr	r3, [sp, #80]	; 0x50
   183ec:	str	r3, [r5, #4]
   183f0:	ldr	r6, [sp, #36]	; 0x24
   183f4:	ldr	r8, [r4]
   183f8:	ldr	r5, [r4, #4]
   183fc:	ldr	r2, [sp, #72]	; 0x48
   18400:	ldr	r3, [sp, #32]
   18404:	ldr	ip, [sp, #76]	; 0x4c
   18408:	orr	r6, r6, #1
   1840c:	add	fp, sp, #40	; 0x28
   18410:	str	r2, [sp, #12]
   18414:	str	r3, [sp]
   18418:	str	r6, [sp, #4]
   1841c:	mov	r1, r8
   18420:	mov	r0, r5
   18424:	str	ip, [sp, #16]
   18428:	str	fp, [sp, #8]
   1842c:	mov	r3, sl
   18430:	mov	r2, r9
   18434:	bl	15de0 <dcngettext@plt+0x4db8>
   18438:	cmp	r8, r0
   1843c:	bhi	1849c <dcngettext@plt+0x7474>
   18440:	ldr	r3, [pc, #160]	; 184e8 <dcngettext@plt+0x74c0>
   18444:	add	r8, r0, #1
   18448:	cmp	r5, r3
   1844c:	str	r8, [r4]
   18450:	beq	1845c <dcngettext@plt+0x7434>
   18454:	mov	r0, r5
   18458:	bl	15b14 <dcngettext@plt+0x4aec>
   1845c:	mov	r0, r8
   18460:	bl	1a6c8 <dcngettext@plt+0x96a0>
   18464:	ldr	ip, [sp, #76]	; 0x4c
   18468:	ldr	lr, [sp, #32]
   1846c:	mov	r3, sl
   18470:	mov	r2, r9
   18474:	mov	r1, r8
   18478:	str	r0, [r4, #4]
   1847c:	ldr	r4, [sp, #72]	; 0x48
   18480:	str	fp, [sp, #8]
   18484:	str	r6, [sp, #4]
   18488:	str	ip, [sp, #16]
   1848c:	str	r4, [sp, #12]
   18490:	str	lr, [sp]
   18494:	mov	r5, r0
   18498:	bl	15de0 <dcngettext@plt+0x4db8>
   1849c:	ldr	r3, [sp, #28]
   184a0:	mov	r0, r5
   184a4:	str	r3, [r7]
   184a8:	add	sp, sp, #132	; 0x84
   184ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184b0:	mov	r3, #8
   184b4:	add	r1, sp, #80	; 0x50
   184b8:	str	r3, [sp]
   184bc:	rsb	r2, r2, #1
   184c0:	mvn	r3, #-2147483648	; 0x80000000
   184c4:	mov	r0, #0
   184c8:	bl	1a8e4 <dcngettext@plt+0x98bc>
   184cc:	mov	r4, r0
   184d0:	ldm	r6, {r0, r1}
   184d4:	str	r4, [r5]
   184d8:	stm	r4, {r0, r1}
   184dc:	b	183cc <dcngettext@plt+0x73a4>
   184e0:	bl	11010 <abort@plt>
   184e4:	andeq	sp, r2, r0, lsl r1
   184e8:	andeq	sp, r2, r0, asr #3
   184ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   184f0:	mov	r4, r2
   184f4:	ldr	lr, [pc, #432]	; 186ac <dcngettext@plt+0x7684>
   184f8:	mov	sl, r0
   184fc:	mov	fp, r1
   18500:	ldm	lr!, {r0, r1, r2, r3}
   18504:	sub	sp, sp, #92	; 0x5c
   18508:	add	ip, sp, #40	; 0x28
   1850c:	lsr	r7, r4, #5
   18510:	stmia	ip!, {r0, r1, r2, r3}
   18514:	add	r6, sp, #48	; 0x30
   18518:	ldm	lr!, {r0, r1, r2, r3}
   1851c:	and	r4, r4, #31
   18520:	ldr	r5, [pc, #392]	; 186b0 <dcngettext@plt+0x7688>
   18524:	stmia	ip!, {r0, r1, r2, r3}
   18528:	ldm	lr, {r0, r1, r2, r3}
   1852c:	stm	ip, {r0, r1, r2, r3}
   18530:	ldr	r2, [r6, r7, lsl #2]
   18534:	lsr	r3, r2, r4
   18538:	eor	r3, r3, #1
   1853c:	and	r3, r3, #1
   18540:	eor	r4, r2, r3, lsl r4
   18544:	str	r4, [r6, r7, lsl #2]
   18548:	bl	10f2c <__errno_location@plt>
   1854c:	ldr	r2, [r5, #4]
   18550:	ldr	r4, [r5]
   18554:	cmp	r2, #0
   18558:	ldr	r3, [r0]
   1855c:	mov	r8, r0
   18560:	str	r3, [sp, #28]
   18564:	bgt	185c0 <dcngettext@plt+0x7598>
   18568:	add	r7, r5, #8
   1856c:	cmp	r4, r7
   18570:	str	r2, [sp, #36]	; 0x24
   18574:	beq	1867c <dcngettext@plt+0x7654>
   18578:	mov	r3, #8
   1857c:	mov	r0, r4
   18580:	str	r3, [sp]
   18584:	rsb	r2, r2, #1
   18588:	mvn	r3, #-2147483648	; 0x80000000
   1858c:	add	r1, sp, #36	; 0x24
   18590:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18594:	mov	r4, r0
   18598:	str	r0, [r5]
   1859c:	ldr	r0, [r5, #4]
   185a0:	ldr	r2, [sp, #36]	; 0x24
   185a4:	mov	r1, #0
   185a8:	sub	r2, r2, r0
   185ac:	add	r0, r4, r0, lsl #3
   185b0:	lsl	r2, r2, #3
   185b4:	bl	10f50 <memset@plt>
   185b8:	ldr	r3, [sp, #36]	; 0x24
   185bc:	str	r3, [r5, #4]
   185c0:	ldr	r7, [sp, #44]	; 0x2c
   185c4:	ldr	r9, [r4]
   185c8:	ldr	r5, [r4, #4]
   185cc:	ldr	r2, [sp, #80]	; 0x50
   185d0:	ldr	r3, [sp, #40]	; 0x28
   185d4:	ldr	ip, [sp, #84]	; 0x54
   185d8:	orr	r7, r7, #1
   185dc:	str	r2, [sp, #12]
   185e0:	str	r3, [sp]
   185e4:	str	r7, [sp, #4]
   185e8:	str	r6, [sp, #8]
   185ec:	mov	r1, r9
   185f0:	mov	r0, r5
   185f4:	str	ip, [sp, #16]
   185f8:	mov	r3, fp
   185fc:	mov	r2, sl
   18600:	bl	15de0 <dcngettext@plt+0x4db8>
   18604:	cmp	r9, r0
   18608:	bhi	18668 <dcngettext@plt+0x7640>
   1860c:	ldr	r3, [pc, #160]	; 186b4 <dcngettext@plt+0x768c>
   18610:	add	r9, r0, #1
   18614:	cmp	r5, r3
   18618:	str	r9, [r4]
   1861c:	beq	18628 <dcngettext@plt+0x7600>
   18620:	mov	r0, r5
   18624:	bl	15b14 <dcngettext@plt+0x4aec>
   18628:	mov	r0, r9
   1862c:	bl	1a6c8 <dcngettext@plt+0x96a0>
   18630:	ldr	ip, [sp, #84]	; 0x54
   18634:	ldr	lr, [sp, #40]	; 0x28
   18638:	mov	r3, fp
   1863c:	mov	r2, sl
   18640:	mov	r1, r9
   18644:	str	r0, [r4, #4]
   18648:	ldr	r4, [sp, #80]	; 0x50
   1864c:	str	r6, [sp, #8]
   18650:	str	r7, [sp, #4]
   18654:	str	ip, [sp, #16]
   18658:	str	r4, [sp, #12]
   1865c:	str	lr, [sp]
   18660:	mov	r5, r0
   18664:	bl	15de0 <dcngettext@plt+0x4db8>
   18668:	ldr	r3, [sp, #28]
   1866c:	mov	r0, r5
   18670:	str	r3, [r8]
   18674:	add	sp, sp, #92	; 0x5c
   18678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1867c:	mov	r3, #8
   18680:	str	r3, [sp]
   18684:	add	r1, sp, #36	; 0x24
   18688:	rsb	r2, r2, #1
   1868c:	mvn	r3, #-2147483648	; 0x80000000
   18690:	mov	r0, #0
   18694:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18698:	mov	r4, r0
   1869c:	ldm	r7, {r0, r1}
   186a0:	str	r4, [r5]
   186a4:	stm	r4, {r0, r1}
   186a8:	b	1859c <dcngettext@plt+0x7574>
   186ac:	muleq	r2, r0, r1
   186b0:	andeq	sp, r2, r0, lsl r1
   186b4:	andeq	sp, r2, r0, asr #3
   186b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   186bc:	mov	r4, r1
   186c0:	ldr	lr, [pc, #420]	; 1886c <dcngettext@plt+0x7844>
   186c4:	mov	r6, r0
   186c8:	sub	sp, sp, #84	; 0x54
   186cc:	ldm	lr!, {r0, r1, r2, r3}
   186d0:	add	ip, sp, #32
   186d4:	lsr	r8, r4, #5
   186d8:	add	r5, sp, #40	; 0x28
   186dc:	stmia	ip!, {r0, r1, r2, r3}
   186e0:	and	r4, r4, #31
   186e4:	ldm	lr!, {r0, r1, r2, r3}
   186e8:	ldr	r7, [pc, #384]	; 18870 <dcngettext@plt+0x7848>
   186ec:	stmia	ip!, {r0, r1, r2, r3}
   186f0:	ldm	lr, {r0, r1, r2, r3}
   186f4:	stm	ip, {r0, r1, r2, r3}
   186f8:	ldr	r2, [r5, r8, lsl #2]
   186fc:	lsr	r3, r2, r4
   18700:	eor	r3, r3, #1
   18704:	and	r3, r3, #1
   18708:	eor	r4, r2, r3, lsl r4
   1870c:	str	r4, [r5, r8, lsl #2]
   18710:	bl	10f2c <__errno_location@plt>
   18714:	ldr	r2, [r7, #4]
   18718:	ldr	r4, [r7]
   1871c:	cmp	r2, #0
   18720:	mov	r9, r0
   18724:	ldr	sl, [r0]
   18728:	bgt	18784 <dcngettext@plt+0x775c>
   1872c:	add	r8, r7, #8
   18730:	cmp	r4, r8
   18734:	str	r2, [sp, #28]
   18738:	beq	1883c <dcngettext@plt+0x7814>
   1873c:	mov	r3, #8
   18740:	mov	r0, r4
   18744:	str	r3, [sp]
   18748:	rsb	r2, r2, #1
   1874c:	mvn	r3, #-2147483648	; 0x80000000
   18750:	add	r1, sp, #28
   18754:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18758:	mov	r4, r0
   1875c:	str	r0, [r7]
   18760:	ldr	r0, [r7, #4]
   18764:	ldr	r2, [sp, #28]
   18768:	mov	r1, #0
   1876c:	sub	r2, r2, r0
   18770:	add	r0, r4, r0, lsl #3
   18774:	lsl	r2, r2, #3
   18778:	bl	10f50 <memset@plt>
   1877c:	ldr	r3, [sp, #28]
   18780:	str	r3, [r7, #4]
   18784:	ldr	r8, [sp, #36]	; 0x24
   18788:	ldr	fp, [r4]
   1878c:	ldr	r7, [r4, #4]
   18790:	ldr	r2, [sp, #72]	; 0x48
   18794:	ldr	r3, [sp, #32]
   18798:	ldr	ip, [sp, #76]	; 0x4c
   1879c:	orr	r8, r8, #1
   187a0:	str	r2, [sp, #12]
   187a4:	str	r3, [sp]
   187a8:	str	r8, [sp, #4]
   187ac:	str	r5, [sp, #8]
   187b0:	mov	r1, fp
   187b4:	mov	r0, r7
   187b8:	str	ip, [sp, #16]
   187bc:	mvn	r3, #0
   187c0:	mov	r2, r6
   187c4:	bl	15de0 <dcngettext@plt+0x4db8>
   187c8:	cmp	fp, r0
   187cc:	bhi	1882c <dcngettext@plt+0x7804>
   187d0:	ldr	r3, [pc, #156]	; 18874 <dcngettext@plt+0x784c>
   187d4:	add	fp, r0, #1
   187d8:	cmp	r7, r3
   187dc:	str	fp, [r4]
   187e0:	beq	187ec <dcngettext@plt+0x77c4>
   187e4:	mov	r0, r7
   187e8:	bl	15b14 <dcngettext@plt+0x4aec>
   187ec:	mov	r0, fp
   187f0:	bl	1a6c8 <dcngettext@plt+0x96a0>
   187f4:	ldr	lr, [sp, #76]	; 0x4c
   187f8:	ldr	r3, [sp, #32]
   187fc:	ldr	ip, [sp, #72]	; 0x48
   18800:	mov	r2, r6
   18804:	mov	r1, fp
   18808:	str	r0, [r4, #4]
   1880c:	str	r3, [sp]
   18810:	str	r5, [sp, #8]
   18814:	str	r8, [sp, #4]
   18818:	str	lr, [sp, #16]
   1881c:	str	ip, [sp, #12]
   18820:	mvn	r3, #0
   18824:	mov	r7, r0
   18828:	bl	15de0 <dcngettext@plt+0x4db8>
   1882c:	mov	r0, r7
   18830:	str	sl, [r9]
   18834:	add	sp, sp, #84	; 0x54
   18838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1883c:	mov	r3, #8
   18840:	str	r3, [sp]
   18844:	add	r1, sp, #28
   18848:	rsb	r2, r2, #1
   1884c:	mvn	r3, #-2147483648	; 0x80000000
   18850:	mov	r0, #0
   18854:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18858:	mov	r4, r0
   1885c:	ldm	r8, {r0, r1}
   18860:	str	r4, [r7]
   18864:	stm	r4, {r0, r1}
   18868:	b	18760 <dcngettext@plt+0x7738>
   1886c:	muleq	r2, r0, r1
   18870:	andeq	sp, r2, r0, lsl r1
   18874:	andeq	sp, r2, r0, asr #3
   18878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1887c:	mov	r6, r0
   18880:	ldr	lr, [pc, #404]	; 18a1c <dcngettext@plt+0x79f4>
   18884:	sub	sp, sp, #84	; 0x54
   18888:	add	ip, sp, #32
   1888c:	ldm	lr!, {r0, r1, r2, r3}
   18890:	ldr	r5, [pc, #392]	; 18a20 <dcngettext@plt+0x79f8>
   18894:	stmia	ip!, {r0, r1, r2, r3}
   18898:	ldm	lr!, {r0, r1, r2, r3}
   1889c:	ldr	r4, [sp, #44]	; 0x2c
   188a0:	stmia	ip!, {r0, r1, r2, r3}
   188a4:	ldm	lr, {r0, r1, r2, r3}
   188a8:	mvn	lr, r4
   188ac:	and	lr, lr, #67108864	; 0x4000000
   188b0:	eor	lr, lr, r4
   188b4:	stm	ip, {r0, r1, r2, r3}
   188b8:	str	lr, [sp, #44]	; 0x2c
   188bc:	bl	10f2c <__errno_location@plt>
   188c0:	ldr	r2, [r5, #4]
   188c4:	ldr	r4, [r5]
   188c8:	cmp	r2, #0
   188cc:	mov	r8, r0
   188d0:	ldr	sl, [r0]
   188d4:	bgt	18930 <dcngettext@plt+0x7908>
   188d8:	add	r7, r5, #8
   188dc:	cmp	r4, r7
   188e0:	str	r2, [sp, #28]
   188e4:	beq	189ec <dcngettext@plt+0x79c4>
   188e8:	mov	r3, #8
   188ec:	mov	r0, r4
   188f0:	str	r3, [sp]
   188f4:	rsb	r2, r2, #1
   188f8:	mvn	r3, #-2147483648	; 0x80000000
   188fc:	add	r1, sp, #28
   18900:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18904:	mov	r4, r0
   18908:	str	r0, [r5]
   1890c:	ldr	r0, [r5, #4]
   18910:	ldr	r2, [sp, #28]
   18914:	mov	r1, #0
   18918:	sub	r2, r2, r0
   1891c:	add	r0, r4, r0, lsl #3
   18920:	lsl	r2, r2, #3
   18924:	bl	10f50 <memset@plt>
   18928:	ldr	r3, [sp, #28]
   1892c:	str	r3, [r5, #4]
   18930:	ldr	r7, [sp, #36]	; 0x24
   18934:	ldr	r9, [r4]
   18938:	ldr	r5, [r4, #4]
   1893c:	ldr	r2, [sp, #72]	; 0x48
   18940:	ldr	r3, [sp, #32]
   18944:	ldr	ip, [sp, #76]	; 0x4c
   18948:	orr	r7, r7, #1
   1894c:	add	fp, sp, #40	; 0x28
   18950:	str	r2, [sp, #12]
   18954:	str	r3, [sp]
   18958:	str	r7, [sp, #4]
   1895c:	mov	r1, r9
   18960:	mov	r0, r5
   18964:	str	ip, [sp, #16]
   18968:	str	fp, [sp, #8]
   1896c:	mvn	r3, #0
   18970:	mov	r2, r6
   18974:	bl	15de0 <dcngettext@plt+0x4db8>
   18978:	cmp	r9, r0
   1897c:	bhi	189dc <dcngettext@plt+0x79b4>
   18980:	ldr	r3, [pc, #156]	; 18a24 <dcngettext@plt+0x79fc>
   18984:	add	r9, r0, #1
   18988:	cmp	r5, r3
   1898c:	str	r9, [r4]
   18990:	beq	1899c <dcngettext@plt+0x7974>
   18994:	mov	r0, r5
   18998:	bl	15b14 <dcngettext@plt+0x4aec>
   1899c:	mov	r0, r9
   189a0:	bl	1a6c8 <dcngettext@plt+0x96a0>
   189a4:	ldr	lr, [sp, #76]	; 0x4c
   189a8:	ldr	r3, [sp, #32]
   189ac:	ldr	ip, [sp, #72]	; 0x48
   189b0:	mov	r2, r6
   189b4:	mov	r1, r9
   189b8:	str	r0, [r4, #4]
   189bc:	str	r3, [sp]
   189c0:	str	fp, [sp, #8]
   189c4:	str	r7, [sp, #4]
   189c8:	str	lr, [sp, #16]
   189cc:	str	ip, [sp, #12]
   189d0:	mvn	r3, #0
   189d4:	mov	r5, r0
   189d8:	bl	15de0 <dcngettext@plt+0x4db8>
   189dc:	mov	r0, r5
   189e0:	str	sl, [r8]
   189e4:	add	sp, sp, #84	; 0x54
   189e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189ec:	mov	r3, #8
   189f0:	str	r3, [sp]
   189f4:	add	r1, sp, #28
   189f8:	rsb	r2, r2, #1
   189fc:	mvn	r3, #-2147483648	; 0x80000000
   18a00:	mov	r0, #0
   18a04:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18a08:	mov	r4, r0
   18a0c:	ldm	r7, {r0, r1}
   18a10:	str	r4, [r5]
   18a14:	stm	r4, {r0, r1}
   18a18:	b	1890c <dcngettext@plt+0x78e4>
   18a1c:	muleq	r2, r0, r1
   18a20:	andeq	sp, r2, r0, lsl r1
   18a24:	andeq	sp, r2, r0, asr #3
   18a28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a2c:	mov	r9, r0
   18a30:	ldr	lr, [pc, #416]	; 18bd8 <dcngettext@plt+0x7bb0>
   18a34:	mov	sl, r1
   18a38:	sub	sp, sp, #92	; 0x5c
   18a3c:	ldm	lr!, {r0, r1, r2, r3}
   18a40:	add	ip, sp, #40	; 0x28
   18a44:	ldr	r5, [pc, #400]	; 18bdc <dcngettext@plt+0x7bb4>
   18a48:	stmia	ip!, {r0, r1, r2, r3}
   18a4c:	ldm	lr!, {r0, r1, r2, r3}
   18a50:	ldr	r4, [sp, #52]	; 0x34
   18a54:	stmia	ip!, {r0, r1, r2, r3}
   18a58:	ldm	lr, {r0, r1, r2, r3}
   18a5c:	mvn	lr, r4
   18a60:	and	lr, lr, #67108864	; 0x4000000
   18a64:	eor	lr, lr, r4
   18a68:	stm	ip, {r0, r1, r2, r3}
   18a6c:	str	lr, [sp, #52]	; 0x34
   18a70:	bl	10f2c <__errno_location@plt>
   18a74:	ldr	r2, [r5, #4]
   18a78:	ldr	r4, [r5]
   18a7c:	cmp	r2, #0
   18a80:	ldr	r3, [r0]
   18a84:	mov	r7, r0
   18a88:	str	r3, [sp, #28]
   18a8c:	bgt	18ae8 <dcngettext@plt+0x7ac0>
   18a90:	add	r6, r5, #8
   18a94:	cmp	r4, r6
   18a98:	str	r2, [sp, #36]	; 0x24
   18a9c:	beq	18ba8 <dcngettext@plt+0x7b80>
   18aa0:	mov	r3, #8
   18aa4:	mov	r0, r4
   18aa8:	str	r3, [sp]
   18aac:	rsb	r2, r2, #1
   18ab0:	mvn	r3, #-2147483648	; 0x80000000
   18ab4:	add	r1, sp, #36	; 0x24
   18ab8:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18abc:	mov	r4, r0
   18ac0:	str	r0, [r5]
   18ac4:	ldr	r0, [r5, #4]
   18ac8:	ldr	r2, [sp, #36]	; 0x24
   18acc:	mov	r1, #0
   18ad0:	sub	r2, r2, r0
   18ad4:	add	r0, r4, r0, lsl #3
   18ad8:	lsl	r2, r2, #3
   18adc:	bl	10f50 <memset@plt>
   18ae0:	ldr	r3, [sp, #36]	; 0x24
   18ae4:	str	r3, [r5, #4]
   18ae8:	ldr	r6, [sp, #44]	; 0x2c
   18aec:	ldr	r8, [r4]
   18af0:	ldr	r5, [r4, #4]
   18af4:	ldr	r2, [sp, #80]	; 0x50
   18af8:	ldr	r3, [sp, #40]	; 0x28
   18afc:	ldr	ip, [sp, #84]	; 0x54
   18b00:	orr	r6, r6, #1
   18b04:	add	fp, sp, #48	; 0x30
   18b08:	str	r2, [sp, #12]
   18b0c:	str	r3, [sp]
   18b10:	str	r6, [sp, #4]
   18b14:	mov	r1, r8
   18b18:	mov	r0, r5
   18b1c:	str	ip, [sp, #16]
   18b20:	str	fp, [sp, #8]
   18b24:	mov	r3, sl
   18b28:	mov	r2, r9
   18b2c:	bl	15de0 <dcngettext@plt+0x4db8>
   18b30:	cmp	r8, r0
   18b34:	bhi	18b94 <dcngettext@plt+0x7b6c>
   18b38:	ldr	r3, [pc, #160]	; 18be0 <dcngettext@plt+0x7bb8>
   18b3c:	add	r8, r0, #1
   18b40:	cmp	r5, r3
   18b44:	str	r8, [r4]
   18b48:	beq	18b54 <dcngettext@plt+0x7b2c>
   18b4c:	mov	r0, r5
   18b50:	bl	15b14 <dcngettext@plt+0x4aec>
   18b54:	mov	r0, r8
   18b58:	bl	1a6c8 <dcngettext@plt+0x96a0>
   18b5c:	ldr	ip, [sp, #84]	; 0x54
   18b60:	ldr	lr, [sp, #40]	; 0x28
   18b64:	mov	r3, sl
   18b68:	mov	r2, r9
   18b6c:	mov	r1, r8
   18b70:	str	r0, [r4, #4]
   18b74:	ldr	r4, [sp, #80]	; 0x50
   18b78:	str	fp, [sp, #8]
   18b7c:	str	r6, [sp, #4]
   18b80:	str	ip, [sp, #16]
   18b84:	str	r4, [sp, #12]
   18b88:	str	lr, [sp]
   18b8c:	mov	r5, r0
   18b90:	bl	15de0 <dcngettext@plt+0x4db8>
   18b94:	ldr	r3, [sp, #28]
   18b98:	mov	r0, r5
   18b9c:	str	r3, [r7]
   18ba0:	add	sp, sp, #92	; 0x5c
   18ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ba8:	mov	r3, #8
   18bac:	str	r3, [sp]
   18bb0:	add	r1, sp, #36	; 0x24
   18bb4:	rsb	r2, r2, #1
   18bb8:	mvn	r3, #-2147483648	; 0x80000000
   18bbc:	mov	r0, #0
   18bc0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18bc4:	mov	r4, r0
   18bc8:	ldm	r6, {r0, r1}
   18bcc:	str	r4, [r5]
   18bd0:	stm	r4, {r0, r1}
   18bd4:	b	18ac4 <dcngettext@plt+0x7a9c>
   18bd8:	muleq	r2, r0, r1
   18bdc:	andeq	sp, r2, r0, lsl r1
   18be0:	andeq	sp, r2, r0, asr #3
   18be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18be8:	sub	sp, sp, #180	; 0xb4
   18bec:	mov	r6, r1
   18bf0:	mov	r4, r0
   18bf4:	mov	r9, r2
   18bf8:	add	r0, sp, #80	; 0x50
   18bfc:	mov	r2, #48	; 0x30
   18c00:	mov	r1, #0
   18c04:	bl	10f50 <memset@plt>
   18c08:	cmp	r6, #10
   18c0c:	beq	18dec <dcngettext@plt+0x7dc4>
   18c10:	add	r5, sp, #80	; 0x50
   18c14:	str	r6, [sp, #80]	; 0x50
   18c18:	ldm	r5!, {r0, r1, r2, r3}
   18c1c:	add	ip, sp, #128	; 0x80
   18c20:	mov	r7, ip
   18c24:	add	lr, sp, #32
   18c28:	stmia	ip!, {r0, r1, r2, r3}
   18c2c:	mov	r8, #67108864	; 0x4000000
   18c30:	ldm	r5!, {r0, r1, r2, r3}
   18c34:	ldr	r6, [pc, #436]	; 18df0 <dcngettext@plt+0x7dc8>
   18c38:	stmia	ip!, {r0, r1, r2, r3}
   18c3c:	ldm	r5, {r0, r1, r2, r3}
   18c40:	stm	ip, {r0, r1, r2, r3}
   18c44:	ldm	r7!, {r0, r1, r2, r3}
   18c48:	stmia	lr!, {r0, r1, r2, r3}
   18c4c:	ldm	r7!, {r0, r1, r2, r3}
   18c50:	str	r8, [sp, #44]	; 0x2c
   18c54:	stmia	lr!, {r0, r1, r2, r3}
   18c58:	ldm	ip, {r0, r1, r2, r3}
   18c5c:	stm	lr, {r0, r1, r2, r3}
   18c60:	bl	10f2c <__errno_location@plt>
   18c64:	cmn	r4, #-2147483647	; 0x80000001
   18c68:	ldr	r5, [r6]
   18c6c:	mov	r7, r0
   18c70:	movne	r0, #0
   18c74:	moveq	r0, #1
   18c78:	ldr	r3, [r7]
   18c7c:	orrs	r0, r0, r4, lsr #31
   18c80:	str	r3, [sp, #24]
   18c84:	bne	18dec <dcngettext@plt+0x7dc4>
   18c88:	ldr	r2, [r6, #4]
   18c8c:	cmp	r4, r2
   18c90:	blt	18cf0 <dcngettext@plt+0x7cc8>
   18c94:	add	r8, r6, #8
   18c98:	cmp	r5, r8
   18c9c:	str	r2, [sp, #80]	; 0x50
   18ca0:	beq	18dbc <dcngettext@plt+0x7d94>
   18ca4:	mov	r3, #8
   18ca8:	sub	r2, r4, r2
   18cac:	mov	r0, r5
   18cb0:	str	r3, [sp]
   18cb4:	add	r2, r2, #1
   18cb8:	add	r1, sp, #80	; 0x50
   18cbc:	mvn	r3, #-2147483648	; 0x80000000
   18cc0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18cc4:	mov	r5, r0
   18cc8:	str	r0, [r6]
   18ccc:	ldr	r0, [r6, #4]
   18cd0:	ldr	r2, [sp, #80]	; 0x50
   18cd4:	mov	r1, #0
   18cd8:	sub	r2, r2, r0
   18cdc:	add	r0, r5, r0, lsl #3
   18ce0:	lsl	r2, r2, #3
   18ce4:	bl	10f50 <memset@plt>
   18ce8:	ldr	r3, [sp, #80]	; 0x50
   18cec:	str	r3, [r6, #4]
   18cf0:	add	fp, r5, r4, lsl #3
   18cf4:	ldr	r1, [sp, #36]	; 0x24
   18cf8:	ldr	r8, [r5, r4, lsl #3]
   18cfc:	ldr	r6, [fp, #4]
   18d00:	ldr	r2, [sp, #72]	; 0x48
   18d04:	ldr	r3, [sp, #32]
   18d08:	ldr	ip, [sp, #76]	; 0x4c
   18d0c:	orr	r1, r1, #1
   18d10:	add	sl, sp, #40	; 0x28
   18d14:	str	r1, [sp, #28]
   18d18:	str	r1, [sp, #4]
   18d1c:	str	r2, [sp, #12]
   18d20:	str	r3, [sp]
   18d24:	mov	r0, r6
   18d28:	mov	r1, r8
   18d2c:	str	ip, [sp, #16]
   18d30:	str	sl, [sp, #8]
   18d34:	mvn	r3, #0
   18d38:	mov	r2, r9
   18d3c:	bl	15de0 <dcngettext@plt+0x4db8>
   18d40:	cmp	r8, r0
   18d44:	bhi	18da8 <dcngettext@plt+0x7d80>
   18d48:	ldr	r3, [pc, #164]	; 18df4 <dcngettext@plt+0x7dcc>
   18d4c:	add	r8, r0, #1
   18d50:	cmp	r6, r3
   18d54:	str	r8, [r5, r4, lsl #3]
   18d58:	beq	18d64 <dcngettext@plt+0x7d3c>
   18d5c:	mov	r0, r6
   18d60:	bl	15b14 <dcngettext@plt+0x4aec>
   18d64:	mov	r0, r8
   18d68:	bl	1a6c8 <dcngettext@plt+0x96a0>
   18d6c:	ldr	lr, [sp, #76]	; 0x4c
   18d70:	ldr	r3, [sp, #32]
   18d74:	ldr	ip, [sp, #72]	; 0x48
   18d78:	ldr	r4, [sp, #28]
   18d7c:	mov	r2, r9
   18d80:	mov	r1, r8
   18d84:	str	r0, [fp, #4]
   18d88:	str	r3, [sp]
   18d8c:	str	sl, [sp, #8]
   18d90:	str	r4, [sp, #4]
   18d94:	str	lr, [sp, #16]
   18d98:	str	ip, [sp, #12]
   18d9c:	mvn	r3, #0
   18da0:	mov	r6, r0
   18da4:	bl	15de0 <dcngettext@plt+0x4db8>
   18da8:	ldr	r3, [sp, #24]
   18dac:	mov	r0, r6
   18db0:	str	r3, [r7]
   18db4:	add	sp, sp, #180	; 0xb4
   18db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18dbc:	mov	r3, #8
   18dc0:	sub	r2, r4, r2
   18dc4:	add	r1, sp, #80	; 0x50
   18dc8:	str	r3, [sp]
   18dcc:	add	r2, r2, #1
   18dd0:	mvn	r3, #-2147483648	; 0x80000000
   18dd4:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18dd8:	mov	r5, r0
   18ddc:	ldm	r8, {r0, r1}
   18de0:	str	r5, [r6]
   18de4:	stm	r5, {r0, r1}
   18de8:	b	18ccc <dcngettext@plt+0x7ca4>
   18dec:	bl	11010 <abort@plt>
   18df0:	andeq	sp, r2, r0, lsl r1
   18df4:	andeq	sp, r2, r0, asr #3
   18df8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18dfc:	mov	r7, r1
   18e00:	ldr	lr, [pc, #492]	; 18ff4 <dcngettext@plt+0x7fcc>
   18e04:	mov	r8, r2
   18e08:	mov	r4, r0
   18e0c:	mov	fp, r3
   18e10:	ldm	lr!, {r0, r1, r2, r3}
   18e14:	sub	sp, sp, #100	; 0x64
   18e18:	add	ip, sp, #48	; 0x30
   18e1c:	mov	sl, #10
   18e20:	stmia	ip!, {r0, r1, r2, r3}
   18e24:	cmp	r8, #0
   18e28:	cmpne	r7, #0
   18e2c:	ldm	lr!, {r0, r1, r2, r3}
   18e30:	str	sl, [sp, #48]	; 0x30
   18e34:	stmia	ip!, {r0, r1, r2, r3}
   18e38:	ldm	lr, {r0, r1, r2, r3}
   18e3c:	stm	ip, {r0, r1, r2, r3}
   18e40:	beq	18ff0 <dcngettext@plt+0x7fc8>
   18e44:	str	r7, [sp, #88]	; 0x58
   18e48:	str	r8, [sp, #92]	; 0x5c
   18e4c:	bl	10f2c <__errno_location@plt>
   18e50:	ldr	r6, [pc, #416]	; 18ff8 <dcngettext@plt+0x7fd0>
   18e54:	cmn	r4, #-2147483647	; 0x80000001
   18e58:	ldr	r5, [r6]
   18e5c:	mov	r9, r0
   18e60:	movne	r0, #0
   18e64:	moveq	r0, #1
   18e68:	ldr	r3, [r9]
   18e6c:	orrs	r0, r0, r4, lsr #31
   18e70:	str	r3, [sp, #28]
   18e74:	bne	18ff0 <dcngettext@plt+0x7fc8>
   18e78:	ldr	r2, [r6, #4]
   18e7c:	cmp	r4, r2
   18e80:	movlt	r3, sl
   18e84:	blt	18ef0 <dcngettext@plt+0x7ec8>
   18e88:	add	r7, r6, #8
   18e8c:	cmp	r5, r7
   18e90:	str	r2, [sp, #44]	; 0x2c
   18e94:	beq	18fc0 <dcngettext@plt+0x7f98>
   18e98:	mov	r3, #8
   18e9c:	sub	r2, r4, r2
   18ea0:	mov	r0, r5
   18ea4:	str	r3, [sp]
   18ea8:	add	r2, r2, #1
   18eac:	mvn	r3, #-2147483648	; 0x80000000
   18eb0:	add	r1, sp, #44	; 0x2c
   18eb4:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18eb8:	mov	r5, r0
   18ebc:	str	r0, [r6]
   18ec0:	ldr	r0, [r6, #4]
   18ec4:	ldr	r2, [sp, #44]	; 0x2c
   18ec8:	mov	r1, #0
   18ecc:	sub	r2, r2, r0
   18ed0:	add	r0, r5, r0, lsl #3
   18ed4:	lsl	r2, r2, #3
   18ed8:	bl	10f50 <memset@plt>
   18edc:	ldr	r3, [sp, #48]	; 0x30
   18ee0:	ldr	r7, [sp, #88]	; 0x58
   18ee4:	ldr	r8, [sp, #92]	; 0x5c
   18ee8:	ldr	r2, [sp, #44]	; 0x2c
   18eec:	str	r2, [r6, #4]
   18ef0:	add	r2, r5, r4, lsl #3
   18ef4:	mov	r1, r2
   18ef8:	str	r2, [sp, #32]
   18efc:	ldr	r2, [sp, #52]	; 0x34
   18f00:	ldr	r6, [r1, #4]
   18f04:	ldr	sl, [r5, r4, lsl #3]
   18f08:	orr	r2, r2, #1
   18f0c:	str	r3, [sp]
   18f10:	add	r3, sp, #56	; 0x38
   18f14:	str	r2, [sp, #36]	; 0x24
   18f18:	str	r2, [sp, #4]
   18f1c:	str	r3, [sp, #8]
   18f20:	mov	r0, r6
   18f24:	str	r8, [sp, #16]
   18f28:	str	r7, [sp, #12]
   18f2c:	mov	r1, sl
   18f30:	mvn	r3, #0
   18f34:	mov	r2, fp
   18f38:	bl	15de0 <dcngettext@plt+0x4db8>
   18f3c:	cmp	sl, r0
   18f40:	bhi	18fac <dcngettext@plt+0x7f84>
   18f44:	ldr	r3, [pc, #176]	; 18ffc <dcngettext@plt+0x7fd4>
   18f48:	add	r7, r0, #1
   18f4c:	cmp	r6, r3
   18f50:	str	r7, [r5, r4, lsl #3]
   18f54:	beq	18f60 <dcngettext@plt+0x7f38>
   18f58:	mov	r0, r6
   18f5c:	bl	15b14 <dcngettext@plt+0x4aec>
   18f60:	mov	r0, r7
   18f64:	bl	1a6c8 <dcngettext@plt+0x96a0>
   18f68:	ldr	r3, [sp, #32]
   18f6c:	ldr	lr, [sp, #92]	; 0x5c
   18f70:	ldr	ip, [sp, #88]	; 0x58
   18f74:	ldr	r4, [sp, #36]	; 0x24
   18f78:	mov	r2, fp
   18f7c:	mov	r1, r7
   18f80:	str	r0, [r3, #4]
   18f84:	add	r3, sp, #56	; 0x38
   18f88:	str	r3, [sp, #8]
   18f8c:	ldr	r3, [sp, #48]	; 0x30
   18f90:	str	r4, [sp, #4]
   18f94:	str	r3, [sp]
   18f98:	str	lr, [sp, #16]
   18f9c:	str	ip, [sp, #12]
   18fa0:	mvn	r3, #0
   18fa4:	mov	r6, r0
   18fa8:	bl	15de0 <dcngettext@plt+0x4db8>
   18fac:	ldr	r3, [sp, #28]
   18fb0:	mov	r0, r6
   18fb4:	str	r3, [r9]
   18fb8:	add	sp, sp, #100	; 0x64
   18fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fc0:	mov	r3, #8
   18fc4:	sub	r2, r4, r2
   18fc8:	str	r3, [sp]
   18fcc:	add	r1, sp, #44	; 0x2c
   18fd0:	add	r2, r2, #1
   18fd4:	mvn	r3, #-2147483648	; 0x80000000
   18fd8:	bl	1a8e4 <dcngettext@plt+0x98bc>
   18fdc:	mov	r5, r0
   18fe0:	ldm	r7, {r0, r1}
   18fe4:	str	r5, [r6]
   18fe8:	stm	r5, {r0, r1}
   18fec:	b	18ec0 <dcngettext@plt+0x7e98>
   18ff0:	bl	11010 <abort@plt>
   18ff4:	muleq	r2, r0, r1
   18ff8:	andeq	sp, r2, r0, lsl r1
   18ffc:	andeq	sp, r2, r0, asr #3
   19000:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19004:	mov	r7, r1
   19008:	ldr	lr, [pc, #492]	; 191fc <dcngettext@plt+0x81d4>
   1900c:	mov	r8, r2
   19010:	mov	r4, r0
   19014:	mov	fp, r3
   19018:	ldm	lr!, {r0, r1, r2, r3}
   1901c:	sub	sp, sp, #100	; 0x64
   19020:	add	ip, sp, #48	; 0x30
   19024:	mov	sl, #10
   19028:	stmia	ip!, {r0, r1, r2, r3}
   1902c:	cmp	r8, #0
   19030:	cmpne	r7, #0
   19034:	ldm	lr!, {r0, r1, r2, r3}
   19038:	str	sl, [sp, #48]	; 0x30
   1903c:	stmia	ip!, {r0, r1, r2, r3}
   19040:	ldm	lr, {r0, r1, r2, r3}
   19044:	stm	ip, {r0, r1, r2, r3}
   19048:	beq	191f8 <dcngettext@plt+0x81d0>
   1904c:	str	r7, [sp, #88]	; 0x58
   19050:	str	r8, [sp, #92]	; 0x5c
   19054:	bl	10f2c <__errno_location@plt>
   19058:	ldr	r6, [pc, #416]	; 19200 <dcngettext@plt+0x81d8>
   1905c:	cmn	r4, #-2147483647	; 0x80000001
   19060:	ldr	r5, [r6]
   19064:	mov	r9, r0
   19068:	movne	r0, #0
   1906c:	moveq	r0, #1
   19070:	ldr	r3, [r9]
   19074:	orrs	r0, r0, r4, lsr #31
   19078:	str	r3, [sp, #28]
   1907c:	bne	191f8 <dcngettext@plt+0x81d0>
   19080:	ldr	r2, [r6, #4]
   19084:	cmp	r4, r2
   19088:	movlt	r3, sl
   1908c:	blt	190f8 <dcngettext@plt+0x80d0>
   19090:	add	r7, r6, #8
   19094:	cmp	r5, r7
   19098:	str	r2, [sp, #44]	; 0x2c
   1909c:	beq	191c8 <dcngettext@plt+0x81a0>
   190a0:	mov	r3, #8
   190a4:	sub	r2, r4, r2
   190a8:	mov	r0, r5
   190ac:	str	r3, [sp]
   190b0:	add	r2, r2, #1
   190b4:	mvn	r3, #-2147483648	; 0x80000000
   190b8:	add	r1, sp, #44	; 0x2c
   190bc:	bl	1a8e4 <dcngettext@plt+0x98bc>
   190c0:	mov	r5, r0
   190c4:	str	r0, [r6]
   190c8:	ldr	r0, [r6, #4]
   190cc:	ldr	r2, [sp, #44]	; 0x2c
   190d0:	mov	r1, #0
   190d4:	sub	r2, r2, r0
   190d8:	add	r0, r5, r0, lsl #3
   190dc:	lsl	r2, r2, #3
   190e0:	bl	10f50 <memset@plt>
   190e4:	ldr	r3, [sp, #48]	; 0x30
   190e8:	ldr	r7, [sp, #88]	; 0x58
   190ec:	ldr	r8, [sp, #92]	; 0x5c
   190f0:	ldr	r2, [sp, #44]	; 0x2c
   190f4:	str	r2, [r6, #4]
   190f8:	add	r2, r5, r4, lsl #3
   190fc:	mov	r1, r2
   19100:	str	r2, [sp, #32]
   19104:	ldr	r2, [sp, #52]	; 0x34
   19108:	ldr	r6, [r1, #4]
   1910c:	ldr	sl, [r5, r4, lsl #3]
   19110:	orr	r2, r2, #1
   19114:	str	r3, [sp]
   19118:	add	r3, sp, #56	; 0x38
   1911c:	str	r2, [sp, #36]	; 0x24
   19120:	str	r2, [sp, #4]
   19124:	str	r3, [sp, #8]
   19128:	mov	r0, r6
   1912c:	str	r8, [sp, #16]
   19130:	str	r7, [sp, #12]
   19134:	mov	r1, sl
   19138:	ldr	r3, [sp, #136]	; 0x88
   1913c:	mov	r2, fp
   19140:	bl	15de0 <dcngettext@plt+0x4db8>
   19144:	cmp	sl, r0
   19148:	bhi	191b4 <dcngettext@plt+0x818c>
   1914c:	ldr	r3, [pc, #176]	; 19204 <dcngettext@plt+0x81dc>
   19150:	add	r7, r0, #1
   19154:	cmp	r6, r3
   19158:	str	r7, [r5, r4, lsl #3]
   1915c:	beq	19168 <dcngettext@plt+0x8140>
   19160:	mov	r0, r6
   19164:	bl	15b14 <dcngettext@plt+0x4aec>
   19168:	mov	r0, r7
   1916c:	bl	1a6c8 <dcngettext@plt+0x96a0>
   19170:	ldr	r3, [sp, #32]
   19174:	ldr	lr, [sp, #92]	; 0x5c
   19178:	ldr	ip, [sp, #88]	; 0x58
   1917c:	ldr	r4, [sp, #36]	; 0x24
   19180:	mov	r2, fp
   19184:	mov	r1, r7
   19188:	str	r0, [r3, #4]
   1918c:	add	r3, sp, #56	; 0x38
   19190:	str	r3, [sp, #8]
   19194:	ldr	r3, [sp, #48]	; 0x30
   19198:	str	r4, [sp, #4]
   1919c:	str	r3, [sp]
   191a0:	str	lr, [sp, #16]
   191a4:	str	ip, [sp, #12]
   191a8:	ldr	r3, [sp, #136]	; 0x88
   191ac:	mov	r6, r0
   191b0:	bl	15de0 <dcngettext@plt+0x4db8>
   191b4:	ldr	r3, [sp, #28]
   191b8:	mov	r0, r6
   191bc:	str	r3, [r9]
   191c0:	add	sp, sp, #100	; 0x64
   191c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   191c8:	mov	r3, #8
   191cc:	sub	r2, r4, r2
   191d0:	str	r3, [sp]
   191d4:	add	r1, sp, #44	; 0x2c
   191d8:	add	r2, r2, #1
   191dc:	mvn	r3, #-2147483648	; 0x80000000
   191e0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   191e4:	mov	r5, r0
   191e8:	ldm	r7, {r0, r1}
   191ec:	str	r5, [r6]
   191f0:	stm	r5, {r0, r1}
   191f4:	b	190c8 <dcngettext@plt+0x80a0>
   191f8:	bl	11010 <abort@plt>
   191fc:	muleq	r2, r0, r1
   19200:	andeq	sp, r2, r0, lsl r1
   19204:	andeq	sp, r2, r0, asr #3
   19208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1920c:	mov	r5, r0
   19210:	ldr	lr, [pc, #452]	; 193dc <dcngettext@plt+0x83b4>
   19214:	mov	r6, r1
   19218:	mov	sl, r2
   1921c:	ldm	lr!, {r0, r1, r2, r3}
   19220:	sub	sp, sp, #92	; 0x5c
   19224:	add	ip, sp, #40	; 0x28
   19228:	cmp	r6, #0
   1922c:	cmpne	r5, #0
   19230:	stmia	ip!, {r0, r1, r2, r3}
   19234:	mov	r9, #10
   19238:	ldm	lr!, {r0, r1, r2, r3}
   1923c:	moveq	fp, #1
   19240:	movne	fp, #0
   19244:	str	r9, [sp, #40]	; 0x28
   19248:	stmia	ip!, {r0, r1, r2, r3}
   1924c:	ldm	lr, {r0, r1, r2, r3}
   19250:	stm	ip, {r0, r1, r2, r3}
   19254:	beq	193d8 <dcngettext@plt+0x83b0>
   19258:	str	r5, [sp, #80]	; 0x50
   1925c:	str	r6, [sp, #84]	; 0x54
   19260:	bl	10f2c <__errno_location@plt>
   19264:	ldr	r7, [pc, #372]	; 193e0 <dcngettext@plt+0x83b8>
   19268:	ldr	r2, [r7, #4]
   1926c:	ldr	r4, [r7]
   19270:	cmp	r2, #0
   19274:	ldr	r3, [r0]
   19278:	mov	r8, r0
   1927c:	str	r3, [sp, #24]
   19280:	movgt	r3, r9
   19284:	bgt	192ec <dcngettext@plt+0x82c4>
   19288:	add	r5, r7, #8
   1928c:	cmp	r4, r5
   19290:	str	r2, [sp, #36]	; 0x24
   19294:	beq	193a8 <dcngettext@plt+0x8380>
   19298:	mov	r3, #8
   1929c:	mov	r0, r4
   192a0:	str	r3, [sp]
   192a4:	rsb	r2, r2, #1
   192a8:	mvn	r3, #-2147483648	; 0x80000000
   192ac:	add	r1, sp, #36	; 0x24
   192b0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   192b4:	mov	r4, r0
   192b8:	str	r0, [r7]
   192bc:	ldr	r0, [r7, #4]
   192c0:	ldr	r2, [sp, #36]	; 0x24
   192c4:	mov	r1, #0
   192c8:	sub	r2, r2, r0
   192cc:	add	r0, r4, r0, lsl #3
   192d0:	lsl	r2, r2, #3
   192d4:	bl	10f50 <memset@plt>
   192d8:	ldr	r3, [sp, #40]	; 0x28
   192dc:	ldr	r5, [sp, #80]	; 0x50
   192e0:	ldr	r6, [sp, #84]	; 0x54
   192e4:	ldr	r2, [sp, #36]	; 0x24
   192e8:	str	r2, [r7, #4]
   192ec:	ldr	r2, [sp, #44]	; 0x2c
   192f0:	ldr	r9, [r4]
   192f4:	ldr	r7, [r4, #4]
   192f8:	orr	r2, r2, #1
   192fc:	add	fp, sp, #48	; 0x30
   19300:	str	r2, [sp, #28]
   19304:	str	r2, [sp, #4]
   19308:	str	r3, [sp]
   1930c:	str	r6, [sp, #16]
   19310:	str	r5, [sp, #12]
   19314:	mov	r1, r9
   19318:	mov	r0, r7
   1931c:	str	fp, [sp, #8]
   19320:	mvn	r3, #0
   19324:	mov	r2, sl
   19328:	bl	15de0 <dcngettext@plt+0x4db8>
   1932c:	cmp	r9, r0
   19330:	bhi	19394 <dcngettext@plt+0x836c>
   19334:	ldr	r3, [pc, #168]	; 193e4 <dcngettext@plt+0x83bc>
   19338:	add	r5, r0, #1
   1933c:	cmp	r7, r3
   19340:	str	r5, [r4]
   19344:	beq	19350 <dcngettext@plt+0x8328>
   19348:	mov	r0, r7
   1934c:	bl	15b14 <dcngettext@plt+0x4aec>
   19350:	mov	r0, r5
   19354:	bl	1a6c8 <dcngettext@plt+0x96a0>
   19358:	ldr	lr, [sp, #84]	; 0x54
   1935c:	ldr	r3, [sp, #40]	; 0x28
   19360:	ldr	ip, [sp, #80]	; 0x50
   19364:	mov	r2, sl
   19368:	mov	r1, r5
   1936c:	str	r0, [r4, #4]
   19370:	ldr	r4, [sp, #28]
   19374:	str	r3, [sp]
   19378:	str	fp, [sp, #8]
   1937c:	str	r4, [sp, #4]
   19380:	str	lr, [sp, #16]
   19384:	str	ip, [sp, #12]
   19388:	mvn	r3, #0
   1938c:	mov	r7, r0
   19390:	bl	15de0 <dcngettext@plt+0x4db8>
   19394:	ldr	r3, [sp, #24]
   19398:	mov	r0, r7
   1939c:	str	r3, [r8]
   193a0:	add	sp, sp, #92	; 0x5c
   193a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193a8:	mov	r3, #8
   193ac:	str	r3, [sp]
   193b0:	add	r1, sp, #36	; 0x24
   193b4:	rsb	r2, r2, #1
   193b8:	mov	r0, fp
   193bc:	mvn	r3, #-2147483648	; 0x80000000
   193c0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   193c4:	mov	r4, r0
   193c8:	ldm	r5, {r0, r1}
   193cc:	str	r4, [r7]
   193d0:	stm	r4, {r0, r1}
   193d4:	b	192bc <dcngettext@plt+0x8294>
   193d8:	bl	11010 <abort@plt>
   193dc:	muleq	r2, r0, r1
   193e0:	andeq	sp, r2, r0, lsl r1
   193e4:	andeq	sp, r2, r0, asr #3
   193e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193ec:	mov	r5, r0
   193f0:	ldr	lr, [pc, #464]	; 195c8 <dcngettext@plt+0x85a0>
   193f4:	mov	r6, r1
   193f8:	mov	sl, r2
   193fc:	mov	fp, r3
   19400:	ldm	lr!, {r0, r1, r2, r3}
   19404:	sub	sp, sp, #92	; 0x5c
   19408:	add	ip, sp, #40	; 0x28
   1940c:	cmp	r6, #0
   19410:	cmpne	r5, #0
   19414:	stmia	ip!, {r0, r1, r2, r3}
   19418:	moveq	r4, #1
   1941c:	ldm	lr!, {r0, r1, r2, r3}
   19420:	movne	r4, #0
   19424:	mov	r9, #10
   19428:	str	r4, [sp, #28]
   1942c:	stmia	ip!, {r0, r1, r2, r3}
   19430:	ldm	lr, {r0, r1, r2, r3}
   19434:	str	r9, [sp, #40]	; 0x28
   19438:	stm	ip, {r0, r1, r2, r3}
   1943c:	beq	195c4 <dcngettext@plt+0x859c>
   19440:	str	r5, [sp, #80]	; 0x50
   19444:	str	r6, [sp, #84]	; 0x54
   19448:	bl	10f2c <__errno_location@plt>
   1944c:	ldr	r7, [pc, #376]	; 195cc <dcngettext@plt+0x85a4>
   19450:	ldr	r2, [r7, #4]
   19454:	ldr	r4, [r7]
   19458:	cmp	r2, #0
   1945c:	ldr	r3, [r0]
   19460:	mov	r8, r0
   19464:	str	r3, [sp, #24]
   19468:	movgt	r3, r9
   1946c:	bgt	194d4 <dcngettext@plt+0x84ac>
   19470:	add	r5, r7, #8
   19474:	cmp	r4, r5
   19478:	str	r2, [sp, #36]	; 0x24
   1947c:	beq	19594 <dcngettext@plt+0x856c>
   19480:	mov	r3, #8
   19484:	mov	r0, r4
   19488:	str	r3, [sp]
   1948c:	rsb	r2, r2, #1
   19490:	mvn	r3, #-2147483648	; 0x80000000
   19494:	add	r1, sp, #36	; 0x24
   19498:	bl	1a8e4 <dcngettext@plt+0x98bc>
   1949c:	mov	r4, r0
   194a0:	str	r0, [r7]
   194a4:	ldr	r0, [r7, #4]
   194a8:	ldr	r2, [sp, #36]	; 0x24
   194ac:	mov	r1, #0
   194b0:	sub	r2, r2, r0
   194b4:	add	r0, r4, r0, lsl #3
   194b8:	lsl	r2, r2, #3
   194bc:	bl	10f50 <memset@plt>
   194c0:	ldr	r3, [sp, #40]	; 0x28
   194c4:	ldr	r5, [sp, #80]	; 0x50
   194c8:	ldr	r6, [sp, #84]	; 0x54
   194cc:	ldr	r2, [sp, #36]	; 0x24
   194d0:	str	r2, [r7, #4]
   194d4:	ldr	r2, [sp, #44]	; 0x2c
   194d8:	ldr	r9, [r4]
   194dc:	ldr	r7, [r4, #4]
   194e0:	orr	r2, r2, #1
   194e4:	str	r3, [sp]
   194e8:	add	r3, sp, #48	; 0x30
   194ec:	str	r2, [sp, #28]
   194f0:	str	r2, [sp, #4]
   194f4:	str	r3, [sp, #8]
   194f8:	str	r6, [sp, #16]
   194fc:	str	r5, [sp, #12]
   19500:	mov	r1, r9
   19504:	mov	r0, r7
   19508:	mov	r3, fp
   1950c:	mov	r2, sl
   19510:	bl	15de0 <dcngettext@plt+0x4db8>
   19514:	cmp	r9, r0
   19518:	bhi	19580 <dcngettext@plt+0x8558>
   1951c:	ldr	r3, [pc, #172]	; 195d0 <dcngettext@plt+0x85a8>
   19520:	add	r5, r0, #1
   19524:	cmp	r7, r3
   19528:	str	r5, [r4]
   1952c:	beq	19538 <dcngettext@plt+0x8510>
   19530:	mov	r0, r7
   19534:	bl	15b14 <dcngettext@plt+0x4aec>
   19538:	mov	r0, r5
   1953c:	bl	1a6c8 <dcngettext@plt+0x96a0>
   19540:	add	lr, sp, #48	; 0x30
   19544:	ldr	ip, [sp, #84]	; 0x54
   19548:	mov	r1, r5
   1954c:	ldr	r5, [sp, #28]
   19550:	mov	r3, fp
   19554:	mov	r2, sl
   19558:	str	r0, [r4, #4]
   1955c:	ldr	r4, [sp, #80]	; 0x50
   19560:	str	lr, [sp, #8]
   19564:	ldr	lr, [sp, #40]	; 0x28
   19568:	str	r5, [sp, #4]
   1956c:	str	ip, [sp, #16]
   19570:	str	r4, [sp, #12]
   19574:	str	lr, [sp]
   19578:	mov	r7, r0
   1957c:	bl	15de0 <dcngettext@plt+0x4db8>
   19580:	ldr	r3, [sp, #24]
   19584:	mov	r0, r7
   19588:	str	r3, [r8]
   1958c:	add	sp, sp, #92	; 0x5c
   19590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19594:	mov	r3, #8
   19598:	str	r3, [sp]
   1959c:	add	r1, sp, #36	; 0x24
   195a0:	rsb	r2, r2, #1
   195a4:	ldr	r0, [sp, #28]
   195a8:	mvn	r3, #-2147483648	; 0x80000000
   195ac:	bl	1a8e4 <dcngettext@plt+0x98bc>
   195b0:	mov	r4, r0
   195b4:	ldm	r5, {r0, r1}
   195b8:	str	r4, [r7]
   195bc:	stm	r4, {r0, r1}
   195c0:	b	194a4 <dcngettext@plt+0x847c>
   195c4:	bl	11010 <abort@plt>
   195c8:	muleq	r2, r0, r1
   195cc:	andeq	sp, r2, r0, lsl r1
   195d0:	andeq	sp, r2, r0, asr #3
   195d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195d8:	sub	sp, sp, #52	; 0x34
   195dc:	mov	r5, r0
   195e0:	mov	sl, r1
   195e4:	mov	fp, r2
   195e8:	bl	10f2c <__errno_location@plt>
   195ec:	ldr	r4, [pc, #404]	; 19788 <dcngettext@plt+0x8760>
   195f0:	cmn	r5, #-2147483647	; 0x80000001
   195f4:	ldr	r6, [r4]
   195f8:	mov	r8, r0
   195fc:	movne	r0, #0
   19600:	moveq	r0, #1
   19604:	ldr	r3, [r8]
   19608:	orrs	r0, r0, r5, lsr #31
   1960c:	str	r3, [sp, #28]
   19610:	bne	19784 <dcngettext@plt+0x875c>
   19614:	ldr	r2, [r4, #4]
   19618:	cmp	r5, r2
   1961c:	blt	1967c <dcngettext@plt+0x8654>
   19620:	add	r7, r4, #8
   19624:	cmp	r6, r7
   19628:	str	r2, [sp, #44]	; 0x2c
   1962c:	beq	19754 <dcngettext@plt+0x872c>
   19630:	mov	r3, #8
   19634:	sub	r2, r5, r2
   19638:	mov	r0, r6
   1963c:	str	r3, [sp]
   19640:	add	r2, r2, #1
   19644:	mvn	r3, #-2147483648	; 0x80000000
   19648:	add	r1, sp, #44	; 0x2c
   1964c:	bl	1a8e4 <dcngettext@plt+0x98bc>
   19650:	mov	r6, r0
   19654:	str	r0, [r4]
   19658:	ldr	r0, [r4, #4]
   1965c:	ldr	r2, [sp, #44]	; 0x2c
   19660:	mov	r1, #0
   19664:	sub	r2, r2, r0
   19668:	add	r0, r6, r0, lsl #3
   1966c:	lsl	r2, r2, #3
   19670:	bl	10f50 <memset@plt>
   19674:	ldr	r3, [sp, #44]	; 0x2c
   19678:	str	r3, [r4, #4]
   1967c:	ldr	r2, [r4, #56]	; 0x38
   19680:	add	r3, r6, r5, lsl #3
   19684:	ldr	r1, [r4, #20]
   19688:	ldr	r7, [r3, #4]
   1968c:	ldr	r9, [r6, r5, lsl #3]
   19690:	ldr	ip, [r4, #60]	; 0x3c
   19694:	str	r3, [sp, #32]
   19698:	ldr	r3, [r4, #16]
   1969c:	str	r2, [sp, #12]
   196a0:	ldr	r2, [pc, #228]	; 1978c <dcngettext@plt+0x8764>
   196a4:	orr	r1, r1, #1
   196a8:	str	r1, [sp, #36]	; 0x24
   196ac:	str	r1, [sp, #4]
   196b0:	str	r2, [sp, #8]
   196b4:	str	r3, [sp]
   196b8:	mov	r0, r7
   196bc:	mov	r1, r9
   196c0:	str	ip, [sp, #16]
   196c4:	mov	r3, fp
   196c8:	mov	r2, sl
   196cc:	bl	15de0 <dcngettext@plt+0x4db8>
   196d0:	cmp	r9, r0
   196d4:	bhi	19740 <dcngettext@plt+0x8718>
   196d8:	ldr	r3, [pc, #176]	; 19790 <dcngettext@plt+0x8768>
   196dc:	add	r9, r0, #1
   196e0:	cmp	r7, r3
   196e4:	str	r9, [r6, r5, lsl #3]
   196e8:	beq	196f4 <dcngettext@plt+0x86cc>
   196ec:	mov	r0, r7
   196f0:	bl	15b14 <dcngettext@plt+0x4aec>
   196f4:	mov	r0, r9
   196f8:	bl	1a6c8 <dcngettext@plt+0x96a0>
   196fc:	ldr	ip, [sp, #32]
   19700:	ldr	lr, [r4, #60]	; 0x3c
   19704:	ldr	r5, [r4, #56]	; 0x38
   19708:	mov	r3, fp
   1970c:	mov	r2, sl
   19710:	mov	r1, r9
   19714:	str	r0, [ip, #4]
   19718:	ldr	ip, [r4, #16]
   1971c:	ldr	r4, [pc, #104]	; 1978c <dcngettext@plt+0x8764>
   19720:	str	lr, [sp, #16]
   19724:	str	r4, [sp, #8]
   19728:	ldr	r4, [sp, #36]	; 0x24
   1972c:	str	r5, [sp, #12]
   19730:	str	r4, [sp, #4]
   19734:	str	ip, [sp]
   19738:	mov	r7, r0
   1973c:	bl	15de0 <dcngettext@plt+0x4db8>
   19740:	ldr	r3, [sp, #28]
   19744:	mov	r0, r7
   19748:	str	r3, [r8]
   1974c:	add	sp, sp, #52	; 0x34
   19750:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19754:	mov	r3, #8
   19758:	sub	r2, r5, r2
   1975c:	str	r3, [sp]
   19760:	add	r1, sp, #44	; 0x2c
   19764:	add	r2, r2, #1
   19768:	mvn	r3, #-2147483648	; 0x80000000
   1976c:	bl	1a8e4 <dcngettext@plt+0x98bc>
   19770:	mov	r6, r0
   19774:	ldm	r7, {r0, r1}
   19778:	str	r6, [r4]
   1977c:	stm	r6, {r0, r1}
   19780:	b	19658 <dcngettext@plt+0x8630>
   19784:	bl	11010 <abort@plt>
   19788:	andeq	sp, r2, r0, lsl r1
   1978c:	andeq	sp, r2, r8, lsr #2
   19790:	andeq	sp, r2, r0, asr #3
   19794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19798:	sub	sp, sp, #44	; 0x2c
   1979c:	mov	r9, r0
   197a0:	mov	sl, r1
   197a4:	bl	10f2c <__errno_location@plt>
   197a8:	ldr	r4, [pc, #360]	; 19918 <dcngettext@plt+0x88f0>
   197ac:	ldr	r2, [r4, #4]
   197b0:	ldr	r5, [r4]
   197b4:	cmp	r2, #0
   197b8:	ldr	r3, [r0]
   197bc:	mov	r7, r0
   197c0:	str	r3, [sp, #24]
   197c4:	bgt	19820 <dcngettext@plt+0x87f8>
   197c8:	add	r6, r4, #8
   197cc:	cmp	r5, r6
   197d0:	str	r2, [sp, #36]	; 0x24
   197d4:	beq	198e8 <dcngettext@plt+0x88c0>
   197d8:	mov	r3, #8
   197dc:	mov	r0, r5
   197e0:	str	r3, [sp]
   197e4:	rsb	r2, r2, #1
   197e8:	mvn	r3, #-2147483648	; 0x80000000
   197ec:	add	r1, sp, #36	; 0x24
   197f0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   197f4:	mov	r5, r0
   197f8:	str	r0, [r4]
   197fc:	ldr	r0, [r4, #4]
   19800:	ldr	r2, [sp, #36]	; 0x24
   19804:	mov	r1, #0
   19808:	sub	r2, r2, r0
   1980c:	add	r0, r5, r0, lsl #3
   19810:	lsl	r2, r2, #3
   19814:	bl	10f50 <memset@plt>
   19818:	ldr	r3, [sp, #36]	; 0x24
   1981c:	str	r3, [r4, #4]
   19820:	ldr	r1, [r4, #20]
   19824:	ldr	r8, [r5]
   19828:	ldr	r6, [r5, #4]
   1982c:	ldr	r2, [r4, #56]	; 0x38
   19830:	ldr	r3, [r4, #16]
   19834:	ldr	ip, [r4, #60]	; 0x3c
   19838:	ldr	fp, [pc, #220]	; 1991c <dcngettext@plt+0x88f4>
   1983c:	orr	r1, r1, #1
   19840:	str	r1, [sp, #28]
   19844:	str	r1, [sp, #4]
   19848:	str	r2, [sp, #12]
   1984c:	str	r3, [sp]
   19850:	mov	r1, r8
   19854:	mov	r0, r6
   19858:	str	ip, [sp, #16]
   1985c:	str	fp, [sp, #8]
   19860:	mov	r3, sl
   19864:	mov	r2, r9
   19868:	bl	15de0 <dcngettext@plt+0x4db8>
   1986c:	cmp	r8, r0
   19870:	bhi	198d4 <dcngettext@plt+0x88ac>
   19874:	ldr	r3, [pc, #164]	; 19920 <dcngettext@plt+0x88f8>
   19878:	add	r8, r0, #1
   1987c:	cmp	r6, r3
   19880:	str	r8, [r5]
   19884:	beq	19890 <dcngettext@plt+0x8868>
   19888:	mov	r0, r6
   1988c:	bl	15b14 <dcngettext@plt+0x4aec>
   19890:	mov	r0, r8
   19894:	bl	1a6c8 <dcngettext@plt+0x96a0>
   19898:	ldr	lr, [r4, #60]	; 0x3c
   1989c:	ldr	ip, [r4, #16]
   198a0:	mov	r3, sl
   198a4:	mov	r2, r9
   198a8:	mov	r1, r8
   198ac:	str	r0, [r5, #4]
   198b0:	ldr	r5, [r4, #56]	; 0x38
   198b4:	ldr	r4, [sp, #28]
   198b8:	str	fp, [sp, #8]
   198bc:	str	r4, [sp, #4]
   198c0:	str	lr, [sp, #16]
   198c4:	str	r5, [sp, #12]
   198c8:	str	ip, [sp]
   198cc:	mov	r6, r0
   198d0:	bl	15de0 <dcngettext@plt+0x4db8>
   198d4:	ldr	r3, [sp, #24]
   198d8:	mov	r0, r6
   198dc:	str	r3, [r7]
   198e0:	add	sp, sp, #44	; 0x2c
   198e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198e8:	mov	r3, #8
   198ec:	str	r3, [sp]
   198f0:	add	r1, sp, #36	; 0x24
   198f4:	rsb	r2, r2, #1
   198f8:	mvn	r3, #-2147483648	; 0x80000000
   198fc:	mov	r0, #0
   19900:	bl	1a8e4 <dcngettext@plt+0x98bc>
   19904:	mov	r5, r0
   19908:	ldm	r6, {r0, r1}
   1990c:	str	r5, [r4]
   19910:	stm	r5, {r0, r1}
   19914:	b	197fc <dcngettext@plt+0x87d4>
   19918:	andeq	sp, r2, r0, lsl r1
   1991c:	andeq	sp, r2, r8, lsr #2
   19920:	andeq	sp, r2, r0, asr #3
   19924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19928:	sub	sp, sp, #44	; 0x2c
   1992c:	mov	r5, r0
   19930:	mov	sl, r1
   19934:	bl	10f2c <__errno_location@plt>
   19938:	ldr	r4, [pc, #396]	; 19acc <dcngettext@plt+0x8aa4>
   1993c:	cmn	r5, #-2147483647	; 0x80000001
   19940:	ldr	r6, [r4]
   19944:	mov	r8, r0
   19948:	movne	r0, #0
   1994c:	moveq	r0, #1
   19950:	ldr	r3, [r8]
   19954:	orrs	r0, r0, r5, lsr #31
   19958:	str	r3, [sp, #24]
   1995c:	bne	19ac8 <dcngettext@plt+0x8aa0>
   19960:	ldr	r2, [r4, #4]
   19964:	cmp	r5, r2
   19968:	blt	199c8 <dcngettext@plt+0x89a0>
   1996c:	add	r7, r4, #8
   19970:	cmp	r6, r7
   19974:	str	r2, [sp, #36]	; 0x24
   19978:	beq	19a98 <dcngettext@plt+0x8a70>
   1997c:	mov	r3, #8
   19980:	sub	r2, r5, r2
   19984:	mov	r0, r6
   19988:	str	r3, [sp]
   1998c:	add	r2, r2, #1
   19990:	mvn	r3, #-2147483648	; 0x80000000
   19994:	add	r1, sp, #36	; 0x24
   19998:	bl	1a8e4 <dcngettext@plt+0x98bc>
   1999c:	mov	r6, r0
   199a0:	str	r0, [r4]
   199a4:	ldr	r0, [r4, #4]
   199a8:	ldr	r2, [sp, #36]	; 0x24
   199ac:	mov	r1, #0
   199b0:	sub	r2, r2, r0
   199b4:	add	r0, r6, r0, lsl #3
   199b8:	lsl	r2, r2, #3
   199bc:	bl	10f50 <memset@plt>
   199c0:	ldr	r3, [sp, #36]	; 0x24
   199c4:	str	r3, [r4, #4]
   199c8:	ldr	r2, [r4, #56]	; 0x38
   199cc:	add	fp, r6, r5, lsl #3
   199d0:	ldr	r1, [r4, #20]
   199d4:	ldr	r9, [r6, r5, lsl #3]
   199d8:	ldr	r7, [fp, #4]
   199dc:	ldr	r3, [r4, #16]
   199e0:	ldr	ip, [r4, #60]	; 0x3c
   199e4:	str	r2, [sp, #12]
   199e8:	ldr	r2, [pc, #224]	; 19ad0 <dcngettext@plt+0x8aa8>
   199ec:	orr	r1, r1, #1
   199f0:	str	r1, [sp, #28]
   199f4:	str	r1, [sp, #4]
   199f8:	str	r2, [sp, #8]
   199fc:	str	r3, [sp]
   19a00:	mov	r0, r7
   19a04:	mov	r1, r9
   19a08:	str	ip, [sp, #16]
   19a0c:	mvn	r3, #0
   19a10:	mov	r2, sl
   19a14:	bl	15de0 <dcngettext@plt+0x4db8>
   19a18:	cmp	r9, r0
   19a1c:	bhi	19a84 <dcngettext@plt+0x8a5c>
   19a20:	ldr	r3, [pc, #172]	; 19ad4 <dcngettext@plt+0x8aac>
   19a24:	add	r9, r0, #1
   19a28:	cmp	r7, r3
   19a2c:	str	r9, [r6, r5, lsl #3]
   19a30:	beq	19a3c <dcngettext@plt+0x8a14>
   19a34:	mov	r0, r7
   19a38:	bl	15b14 <dcngettext@plt+0x4aec>
   19a3c:	mov	r0, r9
   19a40:	bl	1a6c8 <dcngettext@plt+0x96a0>
   19a44:	ldr	ip, [r4, #60]	; 0x3c
   19a48:	ldr	r3, [r4, #16]
   19a4c:	ldr	lr, [r4, #56]	; 0x38
   19a50:	ldr	r4, [pc, #120]	; 19ad0 <dcngettext@plt+0x8aa8>
   19a54:	mov	r2, sl
   19a58:	mov	r1, r9
   19a5c:	str	r0, [fp, #4]
   19a60:	str	r4, [sp, #8]
   19a64:	ldr	r4, [sp, #28]
   19a68:	str	r3, [sp]
   19a6c:	str	r4, [sp, #4]
   19a70:	str	ip, [sp, #16]
   19a74:	str	lr, [sp, #12]
   19a78:	mvn	r3, #0
   19a7c:	mov	r7, r0
   19a80:	bl	15de0 <dcngettext@plt+0x4db8>
   19a84:	ldr	r3, [sp, #24]
   19a88:	mov	r0, r7
   19a8c:	str	r3, [r8]
   19a90:	add	sp, sp, #44	; 0x2c
   19a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a98:	mov	r3, #8
   19a9c:	sub	r2, r5, r2
   19aa0:	str	r3, [sp]
   19aa4:	add	r1, sp, #36	; 0x24
   19aa8:	add	r2, r2, #1
   19aac:	mvn	r3, #-2147483648	; 0x80000000
   19ab0:	bl	1a8e4 <dcngettext@plt+0x98bc>
   19ab4:	mov	r6, r0
   19ab8:	ldm	r7, {r0, r1}
   19abc:	str	r6, [r4]
   19ac0:	stm	r6, {r0, r1}
   19ac4:	b	199a4 <dcngettext@plt+0x897c>
   19ac8:	bl	11010 <abort@plt>
   19acc:	andeq	sp, r2, r0, lsl r1
   19ad0:	andeq	sp, r2, r8, lsr #2
   19ad4:	andeq	sp, r2, r0, asr #3
   19ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19adc:	sub	sp, sp, #44	; 0x2c
   19ae0:	mov	sl, r0
   19ae4:	bl	10f2c <__errno_location@plt>
   19ae8:	ldr	r4, [pc, #348]	; 19c4c <dcngettext@plt+0x8c24>
   19aec:	ldr	r2, [r4, #4]
   19af0:	ldr	r5, [r4]
   19af4:	cmp	r2, #0
   19af8:	ldr	r3, [r0]
   19afc:	mov	r8, r0
   19b00:	str	r3, [sp, #28]
   19b04:	bgt	19b60 <dcngettext@plt+0x8b38>
   19b08:	add	r6, r4, #8
   19b0c:	cmp	r5, r6
   19b10:	str	r2, [sp, #36]	; 0x24
   19b14:	beq	19c1c <dcngettext@plt+0x8bf4>
   19b18:	mov	r3, #8
   19b1c:	mov	r0, r5
   19b20:	str	r3, [sp]
   19b24:	rsb	r2, r2, #1
   19b28:	mvn	r3, #-2147483648	; 0x80000000
   19b2c:	add	r1, sp, #36	; 0x24
   19b30:	bl	1a8e4 <dcngettext@plt+0x98bc>
   19b34:	mov	r5, r0
   19b38:	str	r0, [r4]
   19b3c:	ldr	r0, [r4, #4]
   19b40:	ldr	r2, [sp, #36]	; 0x24
   19b44:	mov	r1, #0
   19b48:	sub	r2, r2, r0
   19b4c:	add	r0, r5, r0, lsl #3
   19b50:	lsl	r2, r2, #3
   19b54:	bl	10f50 <memset@plt>
   19b58:	ldr	r3, [sp, #36]	; 0x24
   19b5c:	str	r3, [r4, #4]
   19b60:	ldr	r7, [r4, #20]
   19b64:	ldr	r9, [r5]
   19b68:	ldr	r6, [r5, #4]
   19b6c:	ldr	r2, [r4, #56]	; 0x38
   19b70:	ldr	r3, [r4, #16]
   19b74:	ldr	ip, [r4, #60]	; 0x3c
   19b78:	ldr	fp, [pc, #208]	; 19c50 <dcngettext@plt+0x8c28>
   19b7c:	orr	r7, r7, #1
   19b80:	str	r2, [sp, #12]
   19b84:	str	r3, [sp]
   19b88:	str	r7, [sp, #4]
   19b8c:	mov	r1, r9
   19b90:	mov	r0, r6
   19b94:	str	ip, [sp, #16]
   19b98:	str	fp, [sp, #8]
   19b9c:	mvn	r3, #0
   19ba0:	mov	r2, sl
   19ba4:	bl	15de0 <dcngettext@plt+0x4db8>
   19ba8:	cmp	r9, r0
   19bac:	bhi	19c08 <dcngettext@plt+0x8be0>
   19bb0:	ldr	r3, [pc, #156]	; 19c54 <dcngettext@plt+0x8c2c>
   19bb4:	add	r9, r0, #1
   19bb8:	cmp	r6, r3
   19bbc:	str	r9, [r5]
   19bc0:	beq	19bcc <dcngettext@plt+0x8ba4>
   19bc4:	mov	r0, r6
   19bc8:	bl	15b14 <dcngettext@plt+0x4aec>
   19bcc:	mov	r0, r9
   19bd0:	bl	1a6c8 <dcngettext@plt+0x96a0>
   19bd4:	ldr	ip, [r4, #60]	; 0x3c
   19bd8:	ldr	r3, [r4, #16]
   19bdc:	ldr	lr, [r4, #56]	; 0x38
   19be0:	mov	r2, sl
   19be4:	mov	r1, r9
   19be8:	str	r0, [r5, #4]
   19bec:	str	r3, [sp]
   19bf0:	stmib	sp, {r7, fp}
   19bf4:	str	ip, [sp, #16]
   19bf8:	str	lr, [sp, #12]
   19bfc:	mvn	r3, #0
   19c00:	mov	r6, r0
   19c04:	bl	15de0 <dcngettext@plt+0x4db8>
   19c08:	ldr	r3, [sp, #28]
   19c0c:	mov	r0, r6
   19c10:	str	r3, [r8]
   19c14:	add	sp, sp, #44	; 0x2c
   19c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c1c:	mov	r3, #8
   19c20:	str	r3, [sp]
   19c24:	add	r1, sp, #36	; 0x24
   19c28:	rsb	r2, r2, #1
   19c2c:	mvn	r3, #-2147483648	; 0x80000000
   19c30:	mov	r0, #0
   19c34:	bl	1a8e4 <dcngettext@plt+0x98bc>
   19c38:	mov	r5, r0
   19c3c:	ldm	r6, {r0, r1}
   19c40:	str	r5, [r4]
   19c44:	stm	r5, {r0, r1}
   19c48:	b	19b3c <dcngettext@plt+0x8b14>
   19c4c:	andeq	sp, r2, r0, lsl r1
   19c50:	andeq	sp, r2, r8, lsr #2
   19c54:	andeq	sp, r2, r0, asr #3
   19c58:	mov	r2, #3
   19c5c:	mov	r1, #0
   19c60:	b	1ae74 <dcngettext@plt+0x9e4c>
   19c64:	push	{r4, r5, r6, lr}
   19c68:	sub	sp, sp, #32
   19c6c:	cmp	r1, #0
   19c70:	mov	r4, r0
   19c74:	ldr	r5, [sp, #48]	; 0x30
   19c78:	ldr	r6, [sp, #52]	; 0x34
   19c7c:	beq	19f94 <dcngettext@plt+0x8f6c>
   19c80:	stm	sp, {r2, r3}
   19c84:	mov	r3, r1
   19c88:	ldr	r2, [pc, #808]	; 19fb8 <dcngettext@plt+0x8f90>
   19c8c:	mov	r1, #1
   19c90:	bl	10f74 <__fprintf_chk@plt>
   19c94:	mov	r2, #5
   19c98:	ldr	r1, [pc, #796]	; 19fbc <dcngettext@plt+0x8f94>
   19c9c:	mov	r0, #0
   19ca0:	bl	10e30 <dcgettext@plt>
   19ca4:	ldr	r3, [pc, #788]	; 19fc0 <dcngettext@plt+0x8f98>
   19ca8:	ldr	r2, [pc, #788]	; 19fc4 <dcngettext@plt+0x8f9c>
   19cac:	str	r3, [sp]
   19cb0:	mov	r1, #1
   19cb4:	mov	r3, r0
   19cb8:	mov	r0, r4
   19cbc:	bl	10f74 <__fprintf_chk@plt>
   19cc0:	mov	r1, r4
   19cc4:	mov	r0, #10
   19cc8:	bl	10e24 <fputc_unlocked@plt>
   19ccc:	mov	r2, #5
   19cd0:	ldr	r1, [pc, #752]	; 19fc8 <dcngettext@plt+0x8fa0>
   19cd4:	mov	r0, #0
   19cd8:	bl	10e30 <dcgettext@plt>
   19cdc:	mov	r1, #1
   19ce0:	ldr	r3, [pc, #740]	; 19fcc <dcngettext@plt+0x8fa4>
   19ce4:	mov	r2, r0
   19ce8:	mov	r0, r4
   19cec:	bl	10f74 <__fprintf_chk@plt>
   19cf0:	mov	r1, r4
   19cf4:	mov	r0, #10
   19cf8:	bl	10e24 <fputc_unlocked@plt>
   19cfc:	cmp	r6, #9
   19d00:	ldrls	pc, [pc, r6, lsl #2]
   19d04:	b	19fac <dcngettext@plt+0x8f84>
   19d08:	andeq	r9, r1, ip, lsl #27
   19d0c:	muleq	r1, r4, sp
   19d10:	andeq	r9, r1, r0, asr #27
   19d14:	strdeq	r9, [r1], -r4
   19d18:	andeq	r9, r1, r0, lsr lr
   19d1c:	andeq	r9, r1, ip, ror #28
   19d20:	andeq	r9, r1, r8, lsr #29
   19d24:	andeq	r9, r1, ip, ror #29
   19d28:	andeq	r9, r1, ip, lsr pc
   19d2c:	andeq	r9, r1, r0, lsr sp
   19d30:	ldr	r1, [pc, #664]	; 19fd0 <dcngettext@plt+0x8fa8>
   19d34:	mov	r2, #5
   19d38:	mov	r0, #0
   19d3c:	bl	10e30 <dcgettext@plt>
   19d40:	ldr	ip, [r5, #32]
   19d44:	ldr	r1, [r5, #28]
   19d48:	ldr	r2, [r5, #24]
   19d4c:	ldr	r3, [r5]
   19d50:	ldr	r6, [r5, #20]
   19d54:	str	ip, [sp, #28]
   19d58:	ldr	lr, [r5, #16]
   19d5c:	str	r1, [sp, #24]
   19d60:	ldr	ip, [r5, #12]
   19d64:	str	r2, [sp, #20]
   19d68:	ldr	r1, [r5, #8]
   19d6c:	ldr	r2, [r5, #4]
   19d70:	str	r6, [sp, #16]
   19d74:	stmib	sp, {r1, ip, lr}
   19d78:	mov	r1, #1
   19d7c:	str	r2, [sp]
   19d80:	mov	r2, r0
   19d84:	mov	r0, r4
   19d88:	bl	10f74 <__fprintf_chk@plt>
   19d8c:	add	sp, sp, #32
   19d90:	pop	{r4, r5, r6, pc}
   19d94:	mov	r2, #5
   19d98:	ldr	r1, [pc, #564]	; 19fd4 <dcngettext@plt+0x8fac>
   19d9c:	mov	r0, #0
   19da0:	bl	10e30 <dcgettext@plt>
   19da4:	ldr	r3, [r5]
   19da8:	mov	r1, #1
   19dac:	mov	r2, r0
   19db0:	mov	r0, r4
   19db4:	add	sp, sp, #32
   19db8:	pop	{r4, r5, r6, lr}
   19dbc:	b	10f74 <__fprintf_chk@plt>
   19dc0:	mov	r2, #5
   19dc4:	ldr	r1, [pc, #524]	; 19fd8 <dcngettext@plt+0x8fb0>
   19dc8:	mov	r0, #0
   19dcc:	bl	10e30 <dcgettext@plt>
   19dd0:	ldr	r2, [r5, #4]
   19dd4:	ldr	r3, [r5]
   19dd8:	mov	r1, #1
   19ddc:	str	r2, [sp, #48]	; 0x30
   19de0:	mov	r2, r0
   19de4:	mov	r0, r4
   19de8:	add	sp, sp, #32
   19dec:	pop	{r4, r5, r6, lr}
   19df0:	b	10f74 <__fprintf_chk@plt>
   19df4:	mov	r2, #5
   19df8:	ldr	r1, [pc, #476]	; 19fdc <dcngettext@plt+0x8fb4>
   19dfc:	mov	r0, #0
   19e00:	bl	10e30 <dcgettext@plt>
   19e04:	ldr	r1, [r5, #8]
   19e08:	ldr	r2, [r5, #4]
   19e0c:	ldr	r3, [r5]
   19e10:	str	r1, [sp, #52]	; 0x34
   19e14:	str	r2, [sp, #48]	; 0x30
   19e18:	mov	r1, #1
   19e1c:	mov	r2, r0
   19e20:	mov	r0, r4
   19e24:	add	sp, sp, #32
   19e28:	pop	{r4, r5, r6, lr}
   19e2c:	b	10f74 <__fprintf_chk@plt>
   19e30:	mov	r2, #5
   19e34:	ldr	r1, [pc, #420]	; 19fe0 <dcngettext@plt+0x8fb8>
   19e38:	mov	r0, #0
   19e3c:	bl	10e30 <dcgettext@plt>
   19e40:	ldr	r1, [r5, #8]
   19e44:	ldr	ip, [r5, #12]
   19e48:	ldr	r2, [r5, #4]
   19e4c:	ldr	r3, [r5]
   19e50:	stmib	sp, {r1, ip}
   19e54:	str	r2, [sp]
   19e58:	mov	r1, #1
   19e5c:	mov	r2, r0
   19e60:	mov	r0, r4
   19e64:	bl	10f74 <__fprintf_chk@plt>
   19e68:	b	19d8c <dcngettext@plt+0x8d64>
   19e6c:	mov	r2, #5
   19e70:	ldr	r1, [pc, #364]	; 19fe4 <dcngettext@plt+0x8fbc>
   19e74:	mov	r0, #0
   19e78:	bl	10e30 <dcgettext@plt>
   19e7c:	add	r1, r5, #8
   19e80:	ldr	r2, [r5, #4]
   19e84:	ldm	r1, {r1, ip, lr}
   19e88:	ldr	r3, [r5]
   19e8c:	str	r2, [sp]
   19e90:	stmib	sp, {r1, ip, lr}
   19e94:	mov	r1, #1
   19e98:	mov	r2, r0
   19e9c:	mov	r0, r4
   19ea0:	bl	10f74 <__fprintf_chk@plt>
   19ea4:	b	19d8c <dcngettext@plt+0x8d64>
   19ea8:	mov	r2, #5
   19eac:	ldr	r1, [pc, #308]	; 19fe8 <dcngettext@plt+0x8fc0>
   19eb0:	mov	r0, #0
   19eb4:	bl	10e30 <dcgettext@plt>
   19eb8:	add	r1, r5, #8
   19ebc:	ldr	r2, [r5, #4]
   19ec0:	ldm	r1, {r1, ip, lr}
   19ec4:	ldr	r6, [r5, #20]
   19ec8:	ldr	r3, [r5]
   19ecc:	stmib	sp, {r1, ip, lr}
   19ed0:	mov	r1, #1
   19ed4:	str	r2, [sp]
   19ed8:	str	r6, [sp, #16]
   19edc:	mov	r2, r0
   19ee0:	mov	r0, r4
   19ee4:	bl	10f74 <__fprintf_chk@plt>
   19ee8:	b	19d8c <dcngettext@plt+0x8d64>
   19eec:	mov	r2, #5
   19ef0:	ldr	r1, [pc, #244]	; 19fec <dcngettext@plt+0x8fc4>
   19ef4:	mov	r0, #0
   19ef8:	bl	10e30 <dcgettext@plt>
   19efc:	ldr	r2, [r5, #24]
   19f00:	ldr	r3, [r5]
   19f04:	ldr	r6, [r5, #20]
   19f08:	ldr	lr, [r5, #16]
   19f0c:	ldr	ip, [r5, #12]
   19f10:	str	r2, [sp, #20]
   19f14:	ldr	r1, [r5, #8]
   19f18:	ldr	r2, [r5, #4]
   19f1c:	str	r6, [sp, #16]
   19f20:	stmib	sp, {r1, ip, lr}
   19f24:	mov	r1, #1
   19f28:	str	r2, [sp]
   19f2c:	mov	r2, r0
   19f30:	mov	r0, r4
   19f34:	bl	10f74 <__fprintf_chk@plt>
   19f38:	b	19d8c <dcngettext@plt+0x8d64>
   19f3c:	mov	r2, #5
   19f40:	ldr	r1, [pc, #168]	; 19ff0 <dcngettext@plt+0x8fc8>
   19f44:	mov	r0, #0
   19f48:	bl	10e30 <dcgettext@plt>
   19f4c:	ldr	r1, [r5, #28]
   19f50:	ldr	r2, [r5, #24]
   19f54:	ldr	r3, [r5]
   19f58:	ldr	r6, [r5, #20]
   19f5c:	ldr	lr, [r5, #16]
   19f60:	str	r1, [sp, #24]
   19f64:	ldr	ip, [r5, #12]
   19f68:	str	r2, [sp, #20]
   19f6c:	ldr	r1, [r5, #8]
   19f70:	ldr	r2, [r5, #4]
   19f74:	str	r6, [sp, #16]
   19f78:	stmib	sp, {r1, ip, lr}
   19f7c:	mov	r1, #1
   19f80:	str	r2, [sp]
   19f84:	mov	r2, r0
   19f88:	mov	r0, r4
   19f8c:	bl	10f74 <__fprintf_chk@plt>
   19f90:	b	19d8c <dcngettext@plt+0x8d64>
   19f94:	str	r3, [sp]
   19f98:	mov	r1, #1
   19f9c:	mov	r3, r2
   19fa0:	ldr	r2, [pc, #76]	; 19ff4 <dcngettext@plt+0x8fcc>
   19fa4:	bl	10f74 <__fprintf_chk@plt>
   19fa8:	b	19c94 <dcngettext@plt+0x8c6c>
   19fac:	mov	r2, #5
   19fb0:	ldr	r1, [pc, #64]	; 19ff8 <dcngettext@plt+0x8fd0>
   19fb4:	b	19d38 <dcngettext@plt+0x8d10>
   19fb8:	andeq	ip, r1, r0, lsl r7
   19fbc:	andeq	ip, r1, r4, lsr #14
   19fc0:	andeq	r0, r0, r6, ror #15
   19fc4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   19fc8:	andeq	ip, r1, r8, lsr #14
   19fcc:	ldrdeq	ip, [r1], -r4
   19fd0:	andeq	ip, r1, r4, lsl #18
   19fd4:	strdeq	ip, [r1], -r8
   19fd8:	andeq	ip, r1, r8, lsl #16
   19fdc:	andeq	ip, r1, r0, lsr #16
   19fe0:	andeq	ip, r1, ip, lsr r8
   19fe4:	andeq	ip, r1, ip, asr r8
   19fe8:	andeq	ip, r1, r0, lsl #17
   19fec:	andeq	ip, r1, r8, lsr #17
   19ff0:	ldrdeq	ip, [r1], -r4
   19ff4:	andeq	ip, r1, ip, lsl r7
   19ff8:	andeq	ip, r1, r8, lsr r9
   19ffc:	push	{r4, r5, lr}
   1a000:	sub	sp, sp, #12
   1a004:	ldr	r5, [sp, #24]
   1a008:	ldr	ip, [r5]
   1a00c:	cmp	ip, #0
   1a010:	beq	1a02c <dcngettext@plt+0x9004>
   1a014:	mov	lr, r5
   1a018:	mov	ip, #0
   1a01c:	ldr	r4, [lr, #4]!
   1a020:	add	ip, ip, #1
   1a024:	cmp	r4, #0
   1a028:	bne	1a01c <dcngettext@plt+0x8ff4>
   1a02c:	stm	sp, {r5, ip}
   1a030:	bl	19c64 <dcngettext@plt+0x8c3c>
   1a034:	add	sp, sp, #12
   1a038:	pop	{r4, r5, pc}
   1a03c:	push	{r4, r5, lr}
   1a040:	sub	sp, sp, #76	; 0x4c
   1a044:	mov	r5, r0
   1a048:	ldr	ip, [sp, #88]	; 0x58
   1a04c:	ldr	r0, [ip]
   1a050:	cmp	r0, #0
   1a054:	str	r0, [sp, #32]
   1a058:	beq	1a42c <dcngettext@plt+0x9404>
   1a05c:	ldr	r0, [ip, #4]
   1a060:	cmp	r0, #0
   1a064:	str	r0, [sp, #36]	; 0x24
   1a068:	beq	1a434 <dcngettext@plt+0x940c>
   1a06c:	ldr	r0, [ip, #8]
   1a070:	cmp	r0, #0
   1a074:	str	r0, [sp, #40]	; 0x28
   1a078:	beq	1a43c <dcngettext@plt+0x9414>
   1a07c:	ldr	r0, [ip, #12]
   1a080:	cmp	r0, #0
   1a084:	str	r0, [sp, #44]	; 0x2c
   1a088:	beq	1a444 <dcngettext@plt+0x941c>
   1a08c:	ldr	r0, [ip, #16]
   1a090:	cmp	r0, #0
   1a094:	str	r0, [sp, #48]	; 0x30
   1a098:	beq	1a44c <dcngettext@plt+0x9424>
   1a09c:	ldr	r0, [ip, #20]
   1a0a0:	cmp	r0, #0
   1a0a4:	str	r0, [sp, #52]	; 0x34
   1a0a8:	beq	1a454 <dcngettext@plt+0x942c>
   1a0ac:	ldr	r0, [ip, #24]
   1a0b0:	cmp	r0, #0
   1a0b4:	str	r0, [sp, #56]	; 0x38
   1a0b8:	beq	1a45c <dcngettext@plt+0x9434>
   1a0bc:	ldr	r0, [ip, #28]
   1a0c0:	cmp	r0, #0
   1a0c4:	str	r0, [sp, #60]	; 0x3c
   1a0c8:	beq	1a464 <dcngettext@plt+0x943c>
   1a0cc:	ldr	r0, [ip, #32]
   1a0d0:	cmp	r0, #0
   1a0d4:	str	r0, [sp, #64]	; 0x40
   1a0d8:	beq	1a46c <dcngettext@plt+0x9444>
   1a0dc:	ldr	r0, [ip, #36]	; 0x24
   1a0e0:	cmp	r0, #0
   1a0e4:	movne	r4, #10
   1a0e8:	moveq	r4, #9
   1a0ec:	cmp	r1, #0
   1a0f0:	beq	1a404 <dcngettext@plt+0x93dc>
   1a0f4:	stm	sp, {r2, r3}
   1a0f8:	mov	r0, r5
   1a0fc:	mov	r3, r1
   1a100:	ldr	r2, [pc, #876]	; 1a474 <dcngettext@plt+0x944c>
   1a104:	mov	r1, #1
   1a108:	bl	10f74 <__fprintf_chk@plt>
   1a10c:	mov	r2, #5
   1a110:	ldr	r1, [pc, #864]	; 1a478 <dcngettext@plt+0x9450>
   1a114:	mov	r0, #0
   1a118:	bl	10e30 <dcgettext@plt>
   1a11c:	ldr	r3, [pc, #856]	; 1a47c <dcngettext@plt+0x9454>
   1a120:	ldr	r2, [pc, #856]	; 1a480 <dcngettext@plt+0x9458>
   1a124:	str	r3, [sp]
   1a128:	mov	r1, #1
   1a12c:	mov	r3, r0
   1a130:	mov	r0, r5
   1a134:	bl	10f74 <__fprintf_chk@plt>
   1a138:	mov	r1, r5
   1a13c:	mov	r0, #10
   1a140:	bl	10e24 <fputc_unlocked@plt>
   1a144:	mov	r2, #5
   1a148:	ldr	r1, [pc, #820]	; 1a484 <dcngettext@plt+0x945c>
   1a14c:	mov	r0, #0
   1a150:	bl	10e30 <dcgettext@plt>
   1a154:	mov	r1, #1
   1a158:	ldr	r3, [pc, #808]	; 1a488 <dcngettext@plt+0x9460>
   1a15c:	mov	r2, r0
   1a160:	mov	r0, r5
   1a164:	bl	10f74 <__fprintf_chk@plt>
   1a168:	mov	r1, r5
   1a16c:	mov	r0, #10
   1a170:	bl	10e24 <fputc_unlocked@plt>
   1a174:	cmp	r4, #9
   1a178:	ldrls	pc, [pc, r4, lsl #2]
   1a17c:	b	1a420 <dcngettext@plt+0x93f8>
   1a180:	andeq	sl, r1, r4, lsl #4
   1a184:	andeq	sl, r1, ip, lsl #4
   1a188:	andeq	sl, r1, r8, lsr r2
   1a18c:	andeq	sl, r1, ip, ror #4
   1a190:	andeq	sl, r1, r4, lsr #5
   1a194:	andeq	sl, r1, r0, ror #5
   1a198:	andeq	sl, r1, ip, lsl r3
   1a19c:	andeq	sl, r1, r0, ror #6
   1a1a0:	andeq	sl, r1, ip, lsr #7
   1a1a4:	andeq	sl, r1, r8, lsr #3
   1a1a8:	ldr	r1, [pc, #732]	; 1a48c <dcngettext@plt+0x9464>
   1a1ac:	mov	r2, #5
   1a1b0:	mov	r0, #0
   1a1b4:	bl	10e30 <dcgettext@plt>
   1a1b8:	ldr	ip, [sp, #64]	; 0x40
   1a1bc:	ldr	r1, [sp, #60]	; 0x3c
   1a1c0:	ldr	r2, [sp, #56]	; 0x38
   1a1c4:	ldr	lr, [sp, #48]	; 0x30
   1a1c8:	str	ip, [sp, #28]
   1a1cc:	str	r1, [sp, #24]
   1a1d0:	ldr	ip, [sp, #44]	; 0x2c
   1a1d4:	ldr	r1, [sp, #40]	; 0x28
   1a1d8:	ldr	r4, [sp, #52]	; 0x34
   1a1dc:	str	r2, [sp, #20]
   1a1e0:	ldr	r2, [sp, #36]	; 0x24
   1a1e4:	stmib	sp, {r1, ip, lr}
   1a1e8:	mov	r1, #1
   1a1ec:	str	r2, [sp]
   1a1f0:	ldr	r3, [sp, #32]
   1a1f4:	str	r4, [sp, #16]
   1a1f8:	mov	r2, r0
   1a1fc:	mov	r0, r5
   1a200:	bl	10f74 <__fprintf_chk@plt>
   1a204:	add	sp, sp, #76	; 0x4c
   1a208:	pop	{r4, r5, pc}
   1a20c:	mov	r2, #5
   1a210:	ldr	r1, [pc, #632]	; 1a490 <dcngettext@plt+0x9468>
   1a214:	mov	r0, #0
   1a218:	bl	10e30 <dcgettext@plt>
   1a21c:	ldr	r3, [sp, #32]
   1a220:	mov	r1, #1
   1a224:	mov	r2, r0
   1a228:	mov	r0, r5
   1a22c:	add	sp, sp, #76	; 0x4c
   1a230:	pop	{r4, r5, lr}
   1a234:	b	10f74 <__fprintf_chk@plt>
   1a238:	mov	r2, #5
   1a23c:	ldr	r1, [pc, #592]	; 1a494 <dcngettext@plt+0x946c>
   1a240:	mov	r0, #0
   1a244:	bl	10e30 <dcgettext@plt>
   1a248:	ldr	r2, [sp, #36]	; 0x24
   1a24c:	ldr	r3, [sp, #32]
   1a250:	str	r2, [sp, #88]	; 0x58
   1a254:	mov	r1, #1
   1a258:	mov	r2, r0
   1a25c:	mov	r0, r5
   1a260:	add	sp, sp, #76	; 0x4c
   1a264:	pop	{r4, r5, lr}
   1a268:	b	10f74 <__fprintf_chk@plt>
   1a26c:	mov	r2, #5
   1a270:	ldr	r1, [pc, #544]	; 1a498 <dcngettext@plt+0x9470>
   1a274:	mov	r0, #0
   1a278:	bl	10e30 <dcgettext@plt>
   1a27c:	ldr	r1, [sp, #40]	; 0x28
   1a280:	ldr	r2, [sp, #36]	; 0x24
   1a284:	str	r1, [sp, #4]
   1a288:	str	r2, [sp]
   1a28c:	ldr	r3, [sp, #32]
   1a290:	mov	r1, #1
   1a294:	mov	r2, r0
   1a298:	mov	r0, r5
   1a29c:	bl	10f74 <__fprintf_chk@plt>
   1a2a0:	b	1a204 <dcngettext@plt+0x91dc>
   1a2a4:	mov	r2, #5
   1a2a8:	ldr	r1, [pc, #492]	; 1a49c <dcngettext@plt+0x9474>
   1a2ac:	mov	r0, #0
   1a2b0:	bl	10e30 <dcgettext@plt>
   1a2b4:	ldr	r1, [sp, #40]	; 0x28
   1a2b8:	ldr	ip, [sp, #44]	; 0x2c
   1a2bc:	ldr	r2, [sp, #36]	; 0x24
   1a2c0:	ldr	r3, [sp, #32]
   1a2c4:	stmib	sp, {r1, ip}
   1a2c8:	str	r2, [sp]
   1a2cc:	mov	r1, #1
   1a2d0:	mov	r2, r0
   1a2d4:	mov	r0, r5
   1a2d8:	bl	10f74 <__fprintf_chk@plt>
   1a2dc:	b	1a204 <dcngettext@plt+0x91dc>
   1a2e0:	mov	r2, #5
   1a2e4:	ldr	r1, [pc, #436]	; 1a4a0 <dcngettext@plt+0x9478>
   1a2e8:	mov	r0, #0
   1a2ec:	bl	10e30 <dcgettext@plt>
   1a2f0:	add	r1, sp, #40	; 0x28
   1a2f4:	ldr	r2, [sp, #36]	; 0x24
   1a2f8:	ldm	r1, {r1, ip, lr}
   1a2fc:	ldr	r3, [sp, #32]
   1a300:	str	r2, [sp]
   1a304:	stmib	sp, {r1, ip, lr}
   1a308:	mov	r1, #1
   1a30c:	mov	r2, r0
   1a310:	mov	r0, r5
   1a314:	bl	10f74 <__fprintf_chk@plt>
   1a318:	b	1a204 <dcngettext@plt+0x91dc>
   1a31c:	mov	r2, #5
   1a320:	ldr	r1, [pc, #380]	; 1a4a4 <dcngettext@plt+0x947c>
   1a324:	mov	r0, #0
   1a328:	bl	10e30 <dcgettext@plt>
   1a32c:	add	r1, sp, #40	; 0x28
   1a330:	ldr	r2, [sp, #36]	; 0x24
   1a334:	ldm	r1, {r1, ip, lr}
   1a338:	ldr	r4, [sp, #52]	; 0x34
   1a33c:	str	r2, [sp]
   1a340:	stmib	sp, {r1, ip, lr}
   1a344:	mov	r1, #1
   1a348:	ldr	r3, [sp, #32]
   1a34c:	str	r4, [sp, #16]
   1a350:	mov	r2, r0
   1a354:	mov	r0, r5
   1a358:	bl	10f74 <__fprintf_chk@plt>
   1a35c:	b	1a204 <dcngettext@plt+0x91dc>
   1a360:	mov	r2, #5
   1a364:	ldr	r1, [pc, #316]	; 1a4a8 <dcngettext@plt+0x9480>
   1a368:	mov	r0, #0
   1a36c:	bl	10e30 <dcgettext@plt>
   1a370:	add	r1, sp, #40	; 0x28
   1a374:	ldr	r2, [sp, #56]	; 0x38
   1a378:	ldm	r1, {r1, ip, lr}
   1a37c:	ldr	r4, [sp, #52]	; 0x34
   1a380:	str	r2, [sp, #20]
   1a384:	ldr	r2, [sp, #36]	; 0x24
   1a388:	stmib	sp, {r1, ip, lr}
   1a38c:	mov	r1, #1
   1a390:	str	r2, [sp]
   1a394:	ldr	r3, [sp, #32]
   1a398:	str	r4, [sp, #16]
   1a39c:	mov	r2, r0
   1a3a0:	mov	r0, r5
   1a3a4:	bl	10f74 <__fprintf_chk@plt>
   1a3a8:	b	1a204 <dcngettext@plt+0x91dc>
   1a3ac:	mov	r2, #5
   1a3b0:	ldr	r1, [pc, #244]	; 1a4ac <dcngettext@plt+0x9484>
   1a3b4:	mov	r0, #0
   1a3b8:	bl	10e30 <dcgettext@plt>
   1a3bc:	ldr	r1, [sp, #60]	; 0x3c
   1a3c0:	ldr	r2, [sp, #56]	; 0x38
   1a3c4:	ldr	lr, [sp, #48]	; 0x30
   1a3c8:	ldr	ip, [sp, #44]	; 0x2c
   1a3cc:	str	r1, [sp, #24]
   1a3d0:	ldr	r1, [sp, #40]	; 0x28
   1a3d4:	ldr	r4, [sp, #52]	; 0x34
   1a3d8:	str	r2, [sp, #20]
   1a3dc:	ldr	r2, [sp, #36]	; 0x24
   1a3e0:	stmib	sp, {r1, ip, lr}
   1a3e4:	mov	r1, #1
   1a3e8:	str	r2, [sp]
   1a3ec:	ldr	r3, [sp, #32]
   1a3f0:	str	r4, [sp, #16]
   1a3f4:	mov	r2, r0
   1a3f8:	mov	r0, r5
   1a3fc:	bl	10f74 <__fprintf_chk@plt>
   1a400:	b	1a204 <dcngettext@plt+0x91dc>
   1a404:	str	r3, [sp]
   1a408:	mov	r1, #1
   1a40c:	mov	r3, r2
   1a410:	mov	r0, r5
   1a414:	ldr	r2, [pc, #148]	; 1a4b0 <dcngettext@plt+0x9488>
   1a418:	bl	10f74 <__fprintf_chk@plt>
   1a41c:	b	1a10c <dcngettext@plt+0x90e4>
   1a420:	mov	r2, #5
   1a424:	ldr	r1, [pc, #136]	; 1a4b4 <dcngettext@plt+0x948c>
   1a428:	b	1a1b0 <dcngettext@plt+0x9188>
   1a42c:	mov	r4, r0
   1a430:	b	1a0ec <dcngettext@plt+0x90c4>
   1a434:	mov	r4, #1
   1a438:	b	1a0ec <dcngettext@plt+0x90c4>
   1a43c:	mov	r4, #2
   1a440:	b	1a0ec <dcngettext@plt+0x90c4>
   1a444:	mov	r4, #3
   1a448:	b	1a0ec <dcngettext@plt+0x90c4>
   1a44c:	mov	r4, #4
   1a450:	b	1a0ec <dcngettext@plt+0x90c4>
   1a454:	mov	r4, #5
   1a458:	b	1a0ec <dcngettext@plt+0x90c4>
   1a45c:	mov	r4, #6
   1a460:	b	1a0ec <dcngettext@plt+0x90c4>
   1a464:	mov	r4, #7
   1a468:	b	1a0ec <dcngettext@plt+0x90c4>
   1a46c:	mov	r4, #8
   1a470:	b	1a0ec <dcngettext@plt+0x90c4>
   1a474:	andeq	ip, r1, r0, lsl r7
   1a478:	andeq	ip, r1, r4, lsr #14
   1a47c:	andeq	r0, r0, r6, ror #15
   1a480:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1a484:	andeq	ip, r1, r8, lsr #14
   1a488:	ldrdeq	ip, [r1], -r4
   1a48c:	andeq	ip, r1, r4, lsl #18
   1a490:	strdeq	ip, [r1], -r8
   1a494:	andeq	ip, r1, r8, lsl #16
   1a498:	andeq	ip, r1, r0, lsr #16
   1a49c:	andeq	ip, r1, ip, lsr r8
   1a4a0:	andeq	ip, r1, ip, asr r8
   1a4a4:	andeq	ip, r1, r0, lsl #17
   1a4a8:	andeq	ip, r1, r8, lsr #17
   1a4ac:	ldrdeq	ip, [r1], -r4
   1a4b0:	andeq	ip, r1, ip, lsl r7
   1a4b4:	andeq	ip, r1, r8, lsr r9
   1a4b8:	push	{r3}		; (str r3, [sp, #-4]!)
   1a4bc:	push	{lr}		; (str lr, [sp, #-4]!)
   1a4c0:	sub	sp, sp, #56	; 0x38
   1a4c4:	add	r3, sp, #64	; 0x40
   1a4c8:	ldr	ip, [sp, #64]	; 0x40
   1a4cc:	str	r3, [sp, #12]
   1a4d0:	cmp	ip, #0
   1a4d4:	str	ip, [sp, #16]
   1a4d8:	beq	1a570 <dcngettext@plt+0x9548>
   1a4dc:	ldr	ip, [sp, #68]	; 0x44
   1a4e0:	cmp	ip, #0
   1a4e4:	str	ip, [sp, #20]
   1a4e8:	beq	1a590 <dcngettext@plt+0x9568>
   1a4ec:	ldr	ip, [sp, #72]	; 0x48
   1a4f0:	cmp	ip, #0
   1a4f4:	str	ip, [sp, #24]
   1a4f8:	beq	1a598 <dcngettext@plt+0x9570>
   1a4fc:	ldr	ip, [sp, #76]	; 0x4c
   1a500:	cmp	ip, #0
   1a504:	str	ip, [sp, #28]
   1a508:	beq	1a5a0 <dcngettext@plt+0x9578>
   1a50c:	ldr	ip, [sp, #80]	; 0x50
   1a510:	cmp	ip, #0
   1a514:	str	ip, [sp, #32]
   1a518:	beq	1a5a8 <dcngettext@plt+0x9580>
   1a51c:	ldr	ip, [sp, #84]	; 0x54
   1a520:	cmp	ip, #0
   1a524:	str	ip, [sp, #36]	; 0x24
   1a528:	beq	1a5b0 <dcngettext@plt+0x9588>
   1a52c:	ldr	ip, [sp, #88]	; 0x58
   1a530:	cmp	ip, #0
   1a534:	str	ip, [sp, #40]	; 0x28
   1a538:	beq	1a5b8 <dcngettext@plt+0x9590>
   1a53c:	ldr	ip, [sp, #92]	; 0x5c
   1a540:	cmp	ip, #0
   1a544:	str	ip, [sp, #44]	; 0x2c
   1a548:	beq	1a5c0 <dcngettext@plt+0x9598>
   1a54c:	ldr	ip, [sp, #96]	; 0x60
   1a550:	cmp	ip, #0
   1a554:	str	ip, [sp, #48]	; 0x30
   1a558:	beq	1a5c8 <dcngettext@plt+0x95a0>
   1a55c:	ldr	ip, [sp, #100]	; 0x64
   1a560:	cmp	ip, #0
   1a564:	str	ip, [sp, #52]	; 0x34
   1a568:	movne	ip, #10
   1a56c:	moveq	ip, #9
   1a570:	add	r3, sp, #16
   1a574:	stm	sp, {r3, ip}
   1a578:	ldr	r3, [sp, #60]	; 0x3c
   1a57c:	bl	19c64 <dcngettext@plt+0x8c3c>
   1a580:	add	sp, sp, #56	; 0x38
   1a584:	pop	{lr}		; (ldr lr, [sp], #4)
   1a588:	add	sp, sp, #4
   1a58c:	bx	lr
   1a590:	mov	ip, #1
   1a594:	b	1a570 <dcngettext@plt+0x9548>
   1a598:	mov	ip, #2
   1a59c:	b	1a570 <dcngettext@plt+0x9548>
   1a5a0:	mov	ip, #3
   1a5a4:	b	1a570 <dcngettext@plt+0x9548>
   1a5a8:	mov	ip, #4
   1a5ac:	b	1a570 <dcngettext@plt+0x9548>
   1a5b0:	mov	ip, #5
   1a5b4:	b	1a570 <dcngettext@plt+0x9548>
   1a5b8:	mov	ip, #6
   1a5bc:	b	1a570 <dcngettext@plt+0x9548>
   1a5c0:	mov	ip, #7
   1a5c4:	b	1a570 <dcngettext@plt+0x9548>
   1a5c8:	mov	ip, #8
   1a5cc:	b	1a570 <dcngettext@plt+0x9548>
   1a5d0:	ldr	r3, [pc, #116]	; 1a64c <dcngettext@plt+0x9624>
   1a5d4:	push	{r4, lr}
   1a5d8:	mov	r0, #10
   1a5dc:	ldr	r1, [r3]
   1a5e0:	bl	10e24 <fputc_unlocked@plt>
   1a5e4:	mov	r2, #5
   1a5e8:	ldr	r1, [pc, #96]	; 1a650 <dcngettext@plt+0x9628>
   1a5ec:	mov	r0, #0
   1a5f0:	bl	10e30 <dcgettext@plt>
   1a5f4:	ldr	r2, [pc, #88]	; 1a654 <dcngettext@plt+0x962c>
   1a5f8:	mov	r1, r0
   1a5fc:	mov	r0, #1
   1a600:	bl	10f5c <__printf_chk@plt>
   1a604:	mov	r2, #5
   1a608:	ldr	r1, [pc, #72]	; 1a658 <dcngettext@plt+0x9630>
   1a60c:	mov	r0, #0
   1a610:	bl	10e30 <dcgettext@plt>
   1a614:	ldr	r3, [pc, #64]	; 1a65c <dcngettext@plt+0x9634>
   1a618:	ldr	r2, [pc, #64]	; 1a660 <dcngettext@plt+0x9638>
   1a61c:	mov	r1, r0
   1a620:	mov	r0, #1
   1a624:	bl	10f5c <__printf_chk@plt>
   1a628:	mov	r2, #5
   1a62c:	ldr	r1, [pc, #48]	; 1a664 <dcngettext@plt+0x963c>
   1a630:	mov	r0, #0
   1a634:	bl	10e30 <dcgettext@plt>
   1a638:	ldr	r2, [pc, #40]	; 1a668 <dcngettext@plt+0x9640>
   1a63c:	pop	{r4, lr}
   1a640:	mov	r1, r0
   1a644:	mov	r0, #1
   1a648:	b	10f5c <__printf_chk@plt>
   1a64c:	andeq	sp, r2, ip, ror #2
   1a650:	andeq	ip, r1, r4, ror r9
   1a654:	andeq	ip, r1, r8, lsl #19
   1a658:	andeq	ip, r1, r0, lsr #19
   1a65c:	andeq	fp, r1, ip, ror #30
   1a660:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1a664:			; <UNDEFINED> instruction: 0x0001c9b4
   1a668:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1a66c:	push	{r4, r5, r6, lr}
   1a670:	mov	r6, r0
   1a674:	mov	r5, r1
   1a678:	mov	r4, r2
   1a67c:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a680:	cmp	r0, #0
   1a684:	popne	{r4, r5, r6, pc}
   1a688:	cmp	r6, #0
   1a68c:	beq	1a69c <dcngettext@plt+0x9674>
   1a690:	cmp	r5, #0
   1a694:	cmpne	r4, #0
   1a698:	popeq	{r4, r5, r6, pc}
   1a69c:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a6a0:	push	{r4, lr}
   1a6a4:	bl	1ad70 <dcngettext@plt+0x9d48>
   1a6a8:	cmp	r0, #0
   1a6ac:	popne	{r4, pc}
   1a6b0:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a6b4:	push	{r4, lr}
   1a6b8:	bl	1ad70 <dcngettext@plt+0x9d48>
   1a6bc:	cmp	r0, #0
   1a6c0:	popne	{r4, pc}
   1a6c4:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a6c8:	push	{r4, lr}
   1a6cc:	bl	1ad70 <dcngettext@plt+0x9d48>
   1a6d0:	cmp	r0, #0
   1a6d4:	popne	{r4, pc}
   1a6d8:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a6dc:	push	{r4, r5, r6, lr}
   1a6e0:	mov	r5, r0
   1a6e4:	mov	r4, r1
   1a6e8:	bl	1ad9c <dcngettext@plt+0x9d74>
   1a6ec:	cmp	r0, #0
   1a6f0:	popne	{r4, r5, r6, pc}
   1a6f4:	adds	r4, r4, #0
   1a6f8:	movne	r4, #1
   1a6fc:	cmp	r5, #0
   1a700:	orreq	r4, r4, #1
   1a704:	cmp	r4, #0
   1a708:	popeq	{r4, r5, r6, pc}
   1a70c:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a710:	push	{r4, lr}
   1a714:	cmp	r1, #0
   1a718:	orreq	r1, r1, #1
   1a71c:	bl	1ad9c <dcngettext@plt+0x9d74>
   1a720:	cmp	r0, #0
   1a724:	popne	{r4, pc}
   1a728:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a72c:	push	{r4, r5, r6, lr}
   1a730:	mov	r6, r0
   1a734:	mov	r5, r1
   1a738:	mov	r4, r2
   1a73c:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a740:	cmp	r0, #0
   1a744:	popne	{r4, r5, r6, pc}
   1a748:	cmp	r6, #0
   1a74c:	beq	1a75c <dcngettext@plt+0x9734>
   1a750:	cmp	r5, #0
   1a754:	cmpne	r4, #0
   1a758:	popeq	{r4, r5, r6, pc}
   1a75c:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a760:	cmp	r2, #0
   1a764:	cmpne	r1, #0
   1a768:	moveq	r2, #1
   1a76c:	moveq	r1, r2
   1a770:	push	{r4, lr}
   1a774:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a778:	cmp	r0, #0
   1a77c:	popne	{r4, pc}
   1a780:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a784:	push	{r4, lr}
   1a788:	mov	r2, r1
   1a78c:	mov	r1, r0
   1a790:	mov	r0, #0
   1a794:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a798:	cmp	r0, #0
   1a79c:	popne	{r4, pc}
   1a7a0:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a7a4:	cmp	r1, #0
   1a7a8:	cmpne	r0, #0
   1a7ac:	moveq	r2, #1
   1a7b0:	movne	r2, r1
   1a7b4:	moveq	r1, r2
   1a7b8:	movne	r1, r0
   1a7bc:	push	{r4, lr}
   1a7c0:	mov	r0, #0
   1a7c4:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a7c8:	cmp	r0, #0
   1a7cc:	popne	{r4, pc}
   1a7d0:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a7d4:	cmp	r0, #0
   1a7d8:	push	{r4, r5, r6, lr}
   1a7dc:	mov	r5, r1
   1a7e0:	ldr	r4, [r1]
   1a7e4:	beq	1a820 <dcngettext@plt+0x97f8>
   1a7e8:	lsr	r2, r4, #1
   1a7ec:	add	r3, r2, #1
   1a7f0:	mvn	r3, r3
   1a7f4:	cmp	r4, r3
   1a7f8:	bhi	1a83c <dcngettext@plt+0x9814>
   1a7fc:	add	r4, r4, #1
   1a800:	add	r4, r4, r2
   1a804:	mov	r1, r4
   1a808:	mov	r2, #1
   1a80c:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a810:	cmp	r0, #0
   1a814:	beq	1a840 <dcngettext@plt+0x9818>
   1a818:	str	r4, [r5]
   1a81c:	pop	{r4, r5, r6, pc}
   1a820:	cmp	r4, #0
   1a824:	moveq	r4, #64	; 0x40
   1a828:	mov	r1, r4
   1a82c:	mov	r2, #1
   1a830:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a834:	cmp	r0, #0
   1a838:	bne	1a818 <dcngettext@plt+0x97f0>
   1a83c:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a840:	cmp	r4, #0
   1a844:	bne	1a83c <dcngettext@plt+0x9814>
   1a848:	str	r4, [r5]
   1a84c:	pop	{r4, r5, r6, pc}
   1a850:	cmp	r0, #0
   1a854:	push	{r4, r5, r6, lr}
   1a858:	mov	r5, r1
   1a85c:	ldr	r4, [r1]
   1a860:	mov	r6, r2
   1a864:	beq	1a8a8 <dcngettext@plt+0x9880>
   1a868:	lsr	r1, r4, #1
   1a86c:	add	r3, r1, #1
   1a870:	mvn	r3, r3
   1a874:	cmp	r4, r3
   1a878:	bhi	1a8e0 <dcngettext@plt+0x98b8>
   1a87c:	add	r4, r4, #1
   1a880:	add	r4, r4, r1
   1a884:	mov	r1, r4
   1a888:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a88c:	cmp	r0, #0
   1a890:	bne	1a8a0 <dcngettext@plt+0x9878>
   1a894:	cmp	r4, #0
   1a898:	cmpne	r6, #0
   1a89c:	bne	1a8e0 <dcngettext@plt+0x98b8>
   1a8a0:	str	r4, [r5]
   1a8a4:	pop	{r4, r5, r6, pc}
   1a8a8:	cmp	r4, #0
   1a8ac:	bne	1a8c8 <dcngettext@plt+0x98a0>
   1a8b0:	mov	r1, r2
   1a8b4:	mov	r0, #64	; 0x40
   1a8b8:	bl	1b210 <dcngettext@plt+0xa1e8>
   1a8bc:	cmp	r0, #0
   1a8c0:	movne	r4, r0
   1a8c4:	addeq	r4, r0, #1
   1a8c8:	mov	r2, r6
   1a8cc:	mov	r1, r4
   1a8d0:	mov	r0, #0
   1a8d4:	bl	1b0d0 <dcngettext@plt+0xa0a8>
   1a8d8:	cmp	r0, #0
   1a8dc:	bne	1a8a0 <dcngettext@plt+0x9878>
   1a8e0:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1a8e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8e8:	sub	sp, sp, #12
   1a8ec:	ldr	r6, [r1]
   1a8f0:	mov	r8, r1
   1a8f4:	mov	r9, r0
   1a8f8:	asrs	r4, r6, #1
   1a8fc:	mov	sl, r2
   1a900:	mov	fp, r3
   1a904:	ldr	r7, [sp, #48]	; 0x30
   1a908:	bmi	1aa84 <dcngettext@plt+0x9a5c>
   1a90c:	mvn	r1, #-2147483648	; 0x80000000
   1a910:	sub	r1, r1, r4
   1a914:	cmp	r6, r1
   1a918:	movle	r1, #0
   1a91c:	movgt	r1, #1
   1a920:	mvn	r3, fp
   1a924:	cmp	r1, #0
   1a928:	addeq	r4, r4, r6
   1a92c:	mvnne	r4, #-2147483648	; 0x80000000
   1a930:	lsr	r3, r3, #31
   1a934:	cmp	fp, r4
   1a938:	movge	r2, #0
   1a93c:	andlt	r2, r3, #1
   1a940:	cmp	r2, #0
   1a944:	beq	1aa34 <dcngettext@plt+0x9a0c>
   1a948:	cmp	r7, #0
   1a94c:	blt	1ab1c <dcngettext@plt+0x9af4>
   1a950:	bne	1ab14 <dcngettext@plt+0x9aec>
   1a954:	mov	r5, #64	; 0x40
   1a958:	mov	r1, r7
   1a95c:	mov	r0, r5
   1a960:	str	r3, [sp, #4]
   1a964:	bl	1b41c <dcngettext@plt+0xa3f4>
   1a968:	mov	r1, r7
   1a96c:	mov	r4, r0
   1a970:	mov	r0, r5
   1a974:	bl	1b63c <dcngettext@plt+0xa614>
   1a978:	ldr	r3, [sp, #4]
   1a97c:	sub	r5, r5, r1
   1a980:	cmp	r9, #0
   1a984:	sub	r2, r4, r6
   1a988:	streq	r9, [r8]
   1a98c:	cmp	r2, sl
   1a990:	bge	1aa14 <dcngettext@plt+0x99ec>
   1a994:	cmp	sl, #0
   1a998:	blt	1aab4 <dcngettext@plt+0x9a8c>
   1a99c:	cmp	r6, #0
   1a9a0:	blt	1a9c0 <dcngettext@plt+0x9998>
   1a9a4:	mvn	r2, #-2147483648	; 0x80000000
   1a9a8:	sub	r2, r2, sl
   1a9ac:	cmp	r6, r2
   1a9b0:	movle	r2, #0
   1a9b4:	movgt	r2, #1
   1a9b8:	cmp	r2, #0
   1a9bc:	bne	1aab0 <dcngettext@plt+0x9a88>
   1a9c0:	add	r6, r6, sl
   1a9c4:	cmp	fp, r6
   1a9c8:	movge	r3, #0
   1a9cc:	andlt	r3, r3, #1
   1a9d0:	cmp	r3, #0
   1a9d4:	mov	r4, r6
   1a9d8:	bne	1aab0 <dcngettext@plt+0x9a88>
   1a9dc:	cmp	r7, #0
   1a9e0:	blt	1aac8 <dcngettext@plt+0x9aa0>
   1a9e4:	beq	1aa10 <dcngettext@plt+0x99e8>
   1a9e8:	cmp	r6, #0
   1a9ec:	blt	1ab6c <dcngettext@plt+0x9b44>
   1a9f0:	mov	r1, r7
   1a9f4:	mvn	r0, #-2147483648	; 0x80000000
   1a9f8:	bl	1b41c <dcngettext@plt+0xa3f4>
   1a9fc:	cmp	r6, r0
   1aa00:	movle	r0, #0
   1aa04:	movgt	r0, #1
   1aa08:	cmp	r0, #0
   1aa0c:	bne	1aab0 <dcngettext@plt+0x9a88>
   1aa10:	mul	r5, r6, r7
   1aa14:	mov	r1, r5
   1aa18:	mov	r0, r9
   1aa1c:	bl	1ad9c <dcngettext@plt+0x9d74>
   1aa20:	cmp	r0, #0
   1aa24:	beq	1aa98 <dcngettext@plt+0x9a70>
   1aa28:	str	r4, [r8]
   1aa2c:	add	sp, sp, #12
   1aa30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aa34:	cmp	r7, #0
   1aa38:	blt	1aaf4 <dcngettext@plt+0x9acc>
   1aa3c:	beq	1a954 <dcngettext@plt+0x992c>
   1aa40:	cmp	r4, #0
   1aa44:	blt	1ab24 <dcngettext@plt+0x9afc>
   1aa48:	mov	r1, r7
   1aa4c:	mvn	r0, #-2147483648	; 0x80000000
   1aa50:	str	r3, [sp, #4]
   1aa54:	bl	1b41c <dcngettext@plt+0xa3f4>
   1aa58:	ldr	r3, [sp, #4]
   1aa5c:	cmp	r0, r4
   1aa60:	movge	r0, #0
   1aa64:	movlt	r0, #1
   1aa68:	cmp	r0, #0
   1aa6c:	mvnne	r5, #-2147483648	; 0x80000000
   1aa70:	bne	1a958 <dcngettext@plt+0x9930>
   1aa74:	mul	r5, r7, r4
   1aa78:	cmp	r5, #63	; 0x3f
   1aa7c:	bgt	1a980 <dcngettext@plt+0x9958>
   1aa80:	b	1a954 <dcngettext@plt+0x992c>
   1aa84:	rsb	r1, r4, #-2147483648	; 0x80000000
   1aa88:	cmp	r6, r1
   1aa8c:	movge	r1, #0
   1aa90:	movlt	r1, #1
   1aa94:	b	1a920 <dcngettext@plt+0x98f8>
   1aa98:	adds	r5, r5, #0
   1aa9c:	movne	r5, #1
   1aaa0:	cmp	r9, #0
   1aaa4:	orreq	r5, r5, #1
   1aaa8:	cmp	r5, #0
   1aaac:	beq	1aa28 <dcngettext@plt+0x9a00>
   1aab0:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1aab4:	rsb	r2, sl, #-2147483648	; 0x80000000
   1aab8:	cmp	r6, r2
   1aabc:	movge	r2, #0
   1aac0:	movlt	r2, #1
   1aac4:	b	1a9b8 <dcngettext@plt+0x9990>
   1aac8:	cmp	r6, #0
   1aacc:	blt	1ab50 <dcngettext@plt+0x9b28>
   1aad0:	cmn	r7, #1
   1aad4:	beq	1aa10 <dcngettext@plt+0x99e8>
   1aad8:	mov	r1, r7
   1aadc:	mov	r0, #-2147483648	; 0x80000000
   1aae0:	bl	1b41c <dcngettext@plt+0xa3f4>
   1aae4:	cmp	r6, r0
   1aae8:	movle	r0, #0
   1aaec:	movgt	r0, #1
   1aaf0:	b	1aa08 <dcngettext@plt+0x99e0>
   1aaf4:	cmp	r4, #0
   1aaf8:	blt	1ab90 <dcngettext@plt+0x9b68>
   1aafc:	cmn	r7, #1
   1ab00:	beq	1aa74 <dcngettext@plt+0x9a4c>
   1ab04:	str	r3, [sp, #4]
   1ab08:	mov	r1, r7
   1ab0c:	mov	r0, #-2147483648	; 0x80000000
   1ab10:	b	1aa54 <dcngettext@plt+0x9a2c>
   1ab14:	mov	r4, fp
   1ab18:	b	1aa48 <dcngettext@plt+0x9a20>
   1ab1c:	mov	r4, fp
   1ab20:	b	1aafc <dcngettext@plt+0x9ad4>
   1ab24:	cmn	r4, #1
   1ab28:	beq	1aa74 <dcngettext@plt+0x9a4c>
   1ab2c:	mov	r1, r4
   1ab30:	mov	r0, #-2147483648	; 0x80000000
   1ab34:	str	r3, [sp, #4]
   1ab38:	bl	1b41c <dcngettext@plt+0xa3f4>
   1ab3c:	ldr	r3, [sp, #4]
   1ab40:	cmp	r7, r0
   1ab44:	movle	r0, #0
   1ab48:	movgt	r0, #1
   1ab4c:	b	1aa68 <dcngettext@plt+0x9a40>
   1ab50:	mov	r1, r7
   1ab54:	mvn	r0, #-2147483648	; 0x80000000
   1ab58:	bl	1b41c <dcngettext@plt+0xa3f4>
   1ab5c:	cmp	r6, r0
   1ab60:	movge	r0, #0
   1ab64:	movlt	r0, #1
   1ab68:	b	1aa08 <dcngettext@plt+0x99e0>
   1ab6c:	cmn	r6, #1
   1ab70:	beq	1aa10 <dcngettext@plt+0x99e8>
   1ab74:	mov	r1, r6
   1ab78:	mov	r0, #-2147483648	; 0x80000000
   1ab7c:	bl	1b41c <dcngettext@plt+0xa3f4>
   1ab80:	cmp	r7, r0
   1ab84:	movle	r0, #0
   1ab88:	movgt	r0, #1
   1ab8c:	b	1aa08 <dcngettext@plt+0x99e0>
   1ab90:	mov	r1, r7
   1ab94:	mvn	r0, #-2147483648	; 0x80000000
   1ab98:	str	r3, [sp, #4]
   1ab9c:	bl	1b41c <dcngettext@plt+0xa3f4>
   1aba0:	ldr	r3, [sp, #4]
   1aba4:	cmp	r0, r4
   1aba8:	movle	r0, #0
   1abac:	movgt	r0, #1
   1abb0:	b	1aa68 <dcngettext@plt+0x9a40>
   1abb4:	push	{r4, lr}
   1abb8:	mov	r1, #1
   1abbc:	bl	1ad28 <dcngettext@plt+0x9d00>
   1abc0:	cmp	r0, #0
   1abc4:	popne	{r4, pc}
   1abc8:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1abcc:	push	{r4, lr}
   1abd0:	mov	r1, #1
   1abd4:	bl	1ad28 <dcngettext@plt+0x9d00>
   1abd8:	cmp	r0, #0
   1abdc:	popne	{r4, pc}
   1abe0:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1abe4:	push	{r4, lr}
   1abe8:	bl	1ad28 <dcngettext@plt+0x9d00>
   1abec:	cmp	r0, #0
   1abf0:	popne	{r4, pc}
   1abf4:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1abf8:	push	{r4, lr}
   1abfc:	bl	1ad28 <dcngettext@plt+0x9d00>
   1ac00:	cmp	r0, #0
   1ac04:	popne	{r4, pc}
   1ac08:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1ac0c:	push	{r4, r5, r6, lr}
   1ac10:	mov	r6, r0
   1ac14:	mov	r0, r1
   1ac18:	mov	r4, r1
   1ac1c:	bl	1ad70 <dcngettext@plt+0x9d48>
   1ac20:	subs	r5, r0, #0
   1ac24:	beq	1ac3c <dcngettext@plt+0x9c14>
   1ac28:	mov	r2, r4
   1ac2c:	mov	r1, r6
   1ac30:	bl	10df4 <memcpy@plt>
   1ac34:	mov	r0, r5
   1ac38:	pop	{r4, r5, r6, pc}
   1ac3c:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1ac40:	push	{r4, r5, r6, lr}
   1ac44:	mov	r6, r0
   1ac48:	mov	r0, r1
   1ac4c:	mov	r4, r1
   1ac50:	bl	1ad70 <dcngettext@plt+0x9d48>
   1ac54:	subs	r5, r0, #0
   1ac58:	beq	1ac70 <dcngettext@plt+0x9c48>
   1ac5c:	mov	r2, r4
   1ac60:	mov	r1, r6
   1ac64:	bl	10df4 <memcpy@plt>
   1ac68:	mov	r0, r5
   1ac6c:	pop	{r4, r5, r6, pc}
   1ac70:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1ac74:	push	{r4, r5, r6, lr}
   1ac78:	mov	r6, r0
   1ac7c:	add	r0, r1, #1
   1ac80:	mov	r4, r1
   1ac84:	bl	1ad70 <dcngettext@plt+0x9d48>
   1ac88:	subs	r5, r0, #0
   1ac8c:	beq	1acac <dcngettext@plt+0x9c84>
   1ac90:	mov	r3, #0
   1ac94:	mov	r1, r6
   1ac98:	strb	r3, [r5, r4]
   1ac9c:	mov	r2, r4
   1aca0:	bl	10df4 <memcpy@plt>
   1aca4:	mov	r0, r5
   1aca8:	pop	{r4, r5, r6, pc}
   1acac:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1acb0:	push	{r4, r5, r6, lr}
   1acb4:	mov	r6, r0
   1acb8:	bl	10f14 <strlen@plt>
   1acbc:	add	r4, r0, #1
   1acc0:	mov	r0, r4
   1acc4:	bl	1ad70 <dcngettext@plt+0x9d48>
   1acc8:	subs	r5, r0, #0
   1accc:	beq	1ace4 <dcngettext@plt+0x9cbc>
   1acd0:	mov	r2, r4
   1acd4:	mov	r1, r6
   1acd8:	bl	10df4 <memcpy@plt>
   1acdc:	mov	r0, r5
   1ace0:	pop	{r4, r5, r6, pc}
   1ace4:	bl	1ace8 <dcngettext@plt+0x9cc0>
   1ace8:	ldr	r3, [pc, #44]	; 1ad1c <dcngettext@plt+0x9cf4>
   1acec:	push	{r4, lr}
   1acf0:	mov	r2, #5
   1acf4:	ldr	r1, [pc, #36]	; 1ad20 <dcngettext@plt+0x9cf8>
   1acf8:	mov	r0, #0
   1acfc:	ldr	r4, [r3]
   1ad00:	bl	10e30 <dcgettext@plt>
   1ad04:	ldr	r2, [pc, #24]	; 1ad24 <dcngettext@plt+0x9cfc>
   1ad08:	mov	r1, #0
   1ad0c:	mov	r3, r0
   1ad10:	mov	r0, r4
   1ad14:	bl	10ea8 <error@plt>
   1ad18:	bl	11010 <abort@plt>
   1ad1c:	andeq	sp, r2, ip, lsl #2
   1ad20:	andeq	ip, r1, ip, lsr #20
   1ad24:			; <UNDEFINED> instruction: 0x0001c5b0
   1ad28:	cmp	r1, #0
   1ad2c:	cmpne	r0, #0
   1ad30:	moveq	r1, #1
   1ad34:	moveq	r0, r1
   1ad38:	umull	r2, r3, r0, r1
   1ad3c:	adds	r3, r3, #0
   1ad40:	movne	r3, #1
   1ad44:	cmp	r2, #0
   1ad48:	blt	1ad58 <dcngettext@plt+0x9d30>
   1ad4c:	cmp	r3, #0
   1ad50:	bne	1ad58 <dcngettext@plt+0x9d30>
   1ad54:	b	10d88 <calloc@plt>
   1ad58:	push	{r4, lr}
   1ad5c:	bl	10f2c <__errno_location@plt>
   1ad60:	mov	r3, #12
   1ad64:	str	r3, [r0]
   1ad68:	mov	r0, #0
   1ad6c:	pop	{r4, pc}
   1ad70:	cmp	r0, #0
   1ad74:	moveq	r0, #1
   1ad78:	cmp	r0, #0
   1ad7c:	blt	1ad84 <dcngettext@plt+0x9d5c>
   1ad80:	b	10eb4 <malloc@plt>
   1ad84:	push	{r4, lr}
   1ad88:	bl	10f2c <__errno_location@plt>
   1ad8c:	mov	r3, #12
   1ad90:	str	r3, [r0]
   1ad94:	mov	r0, #0
   1ad98:	pop	{r4, pc}
   1ad9c:	cmp	r0, #0
   1ada0:	beq	1adc4 <dcngettext@plt+0x9d9c>
   1ada4:	cmp	r1, #0
   1ada8:	push	{lr}		; (str lr, [sp, #-4]!)
   1adac:	sub	sp, sp, #12
   1adb0:	beq	1adcc <dcngettext@plt+0x9da4>
   1adb4:	blt	1ade4 <dcngettext@plt+0x9dbc>
   1adb8:	add	sp, sp, #12
   1adbc:	pop	{lr}		; (ldr lr, [sp], #4)
   1adc0:	b	10e3c <realloc@plt>
   1adc4:	mov	r0, r1
   1adc8:	b	1ad70 <dcngettext@plt+0x9d48>
   1adcc:	str	r1, [sp, #4]
   1add0:	bl	15b14 <dcngettext@plt+0x4aec>
   1add4:	ldr	r3, [sp, #4]
   1add8:	mov	r0, r3
   1addc:	add	sp, sp, #12
   1ade0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ade4:	bl	10f2c <__errno_location@plt>
   1ade8:	mov	r2, #12
   1adec:	mov	r3, #0
   1adf0:	str	r2, [r0]
   1adf4:	b	1add8 <dcngettext@plt+0x9db0>
   1adf8:	push	{r4, r5, r6, lr}
   1adfc:	mov	r4, r0
   1ae00:	bl	10e90 <__fpending@plt>
   1ae04:	ldr	r5, [r4]
   1ae08:	and	r5, r5, #32
   1ae0c:	mov	r6, r0
   1ae10:	mov	r0, r4
   1ae14:	bl	1597c <dcngettext@plt+0x4954>
   1ae18:	cmp	r5, #0
   1ae1c:	mov	r4, r0
   1ae20:	bne	1ae40 <dcngettext@plt+0x9e18>
   1ae24:	cmp	r0, #0
   1ae28:	beq	1ae38 <dcngettext@plt+0x9e10>
   1ae2c:	cmp	r6, #0
   1ae30:	beq	1ae5c <dcngettext@plt+0x9e34>
   1ae34:	mvn	r4, #0
   1ae38:	mov	r0, r4
   1ae3c:	pop	{r4, r5, r6, pc}
   1ae40:	cmp	r0, #0
   1ae44:	bne	1ae34 <dcngettext@plt+0x9e0c>
   1ae48:	bl	10f2c <__errno_location@plt>
   1ae4c:	str	r4, [r0]
   1ae50:	mvn	r4, #0
   1ae54:	mov	r0, r4
   1ae58:	pop	{r4, r5, r6, pc}
   1ae5c:	bl	10f2c <__errno_location@plt>
   1ae60:	ldr	r4, [r0]
   1ae64:	subs	r4, r4, #9
   1ae68:	mvnne	r4, #0
   1ae6c:	mov	r0, r4
   1ae70:	pop	{r4, r5, r6, pc}
   1ae74:	push	{r1, r2, r3}
   1ae78:	push	{r4, r5, r6, r7, lr}
   1ae7c:	sub	sp, sp, #8
   1ae80:	add	r3, sp, #32
   1ae84:	ldr	r1, [sp, #28]
   1ae88:	str	r3, [sp, #4]
   1ae8c:	cmp	r1, #0
   1ae90:	beq	1af28 <dcngettext@plt+0x9f00>
   1ae94:	ldr	r2, [pc, #412]	; 1b038 <dcngettext@plt+0xa010>
   1ae98:	mov	r5, r0
   1ae9c:	cmp	r1, r2
   1aea0:	bne	1aeec <dcngettext@plt+0x9ec4>
   1aea4:	ldr	r6, [pc, #400]	; 1b03c <dcngettext@plt+0xa014>
   1aea8:	ldr	r7, [r3]
   1aeac:	add	r2, sp, #36	; 0x24
   1aeb0:	ldr	r3, [r6]
   1aeb4:	str	r2, [sp, #4]
   1aeb8:	cmp	r3, #0
   1aebc:	mov	r2, r7
   1aec0:	blt	1afec <dcngettext@plt+0x9fc4>
   1aec4:	bl	10f98 <fcntl64@plt>
   1aec8:	subs	r4, r0, #0
   1aecc:	blt	1af70 <dcngettext@plt+0x9f48>
   1aed0:	mov	r3, #1
   1aed4:	str	r3, [r6]
   1aed8:	mov	r0, r4
   1aedc:	add	sp, sp, #8
   1aee0:	pop	{r4, r5, r6, r7, lr}
   1aee4:	add	sp, sp, #12
   1aee8:	bx	lr
   1aeec:	cmp	r1, #11
   1aef0:	beq	1af18 <dcngettext@plt+0x9ef0>
   1aef4:	bgt	1af38 <dcngettext@plt+0x9f10>
   1aef8:	cmp	r1, #3
   1aefc:	beq	1af18 <dcngettext@plt+0x9ef0>
   1af00:	ble	1b02c <dcngettext@plt+0xa004>
   1af04:	cmp	r1, #8
   1af08:	beq	1af58 <dcngettext@plt+0x9f30>
   1af0c:	ble	1af58 <dcngettext@plt+0x9f30>
   1af10:	cmp	r1, #9
   1af14:	bne	1af58 <dcngettext@plt+0x9f30>
   1af18:	mov	r0, r5
   1af1c:	bl	10f98 <fcntl64@plt>
   1af20:	mov	r4, r0
   1af24:	b	1aed8 <dcngettext@plt+0x9eb0>
   1af28:	ldr	r2, [sp, #32]
   1af2c:	bl	10f98 <fcntl64@plt>
   1af30:	mov	r4, r0
   1af34:	b	1aed8 <dcngettext@plt+0x9eb0>
   1af38:	ldr	r3, [pc, #256]	; 1b040 <dcngettext@plt+0xa018>
   1af3c:	cmp	r1, r3
   1af40:	bgt	1b00c <dcngettext@plt+0x9fe4>
   1af44:	cmp	r1, r2
   1af48:	bge	1af58 <dcngettext@plt+0x9f30>
   1af4c:	sub	r3, r3, #6
   1af50:	cmp	r1, r3
   1af54:	beq	1af18 <dcngettext@plt+0x9ef0>
   1af58:	ldr	r3, [sp, #4]
   1af5c:	mov	r0, r5
   1af60:	ldr	r2, [r3]
   1af64:	bl	10f98 <fcntl64@plt>
   1af68:	mov	r4, r0
   1af6c:	b	1aed8 <dcngettext@plt+0x9eb0>
   1af70:	bl	10f2c <__errno_location@plt>
   1af74:	ldr	r3, [r0]
   1af78:	cmp	r3, #22
   1af7c:	bne	1aed0 <dcngettext@plt+0x9ea8>
   1af80:	mov	r2, r7
   1af84:	mov	r0, r5
   1af88:	mov	r1, #0
   1af8c:	bl	10f98 <fcntl64@plt>
   1af90:	subs	r4, r0, #0
   1af94:	blt	1aed8 <dcngettext@plt+0x9eb0>
   1af98:	mvn	r3, #0
   1af9c:	str	r3, [r6]
   1afa0:	mov	r1, #1
   1afa4:	mov	r0, r4
   1afa8:	bl	10f98 <fcntl64@plt>
   1afac:	subs	r2, r0, #0
   1afb0:	blt	1afcc <dcngettext@plt+0x9fa4>
   1afb4:	orr	r2, r2, #1
   1afb8:	mov	r1, #2
   1afbc:	mov	r0, r4
   1afc0:	bl	10f98 <fcntl64@plt>
   1afc4:	cmn	r0, #1
   1afc8:	bne	1aed8 <dcngettext@plt+0x9eb0>
   1afcc:	bl	10f2c <__errno_location@plt>
   1afd0:	mov	r5, r0
   1afd4:	mov	r0, r4
   1afd8:	ldr	r6, [r5]
   1afdc:	mvn	r4, #0
   1afe0:	bl	1101c <close@plt>
   1afe4:	str	r6, [r5]
   1afe8:	b	1aed8 <dcngettext@plt+0x9eb0>
   1afec:	mov	r1, #0
   1aff0:	bl	10f98 <fcntl64@plt>
   1aff4:	subs	r4, r0, #0
   1aff8:	blt	1aed8 <dcngettext@plt+0x9eb0>
   1affc:	ldr	r3, [r6]
   1b000:	cmn	r3, #1
   1b004:	beq	1afa0 <dcngettext@plt+0x9f78>
   1b008:	b	1aed8 <dcngettext@plt+0x9eb0>
   1b00c:	ldr	r3, [pc, #48]	; 1b044 <dcngettext@plt+0xa01c>
   1b010:	cmp	r1, r3
   1b014:	beq	1af58 <dcngettext@plt+0x9f30>
   1b018:	blt	1af18 <dcngettext@plt+0x9ef0>
   1b01c:	add	r3, r3, #1
   1b020:	cmp	r1, r3
   1b024:	bne	1af58 <dcngettext@plt+0x9f30>
   1b028:	b	1af18 <dcngettext@plt+0x9ef0>
   1b02c:	cmp	r1, #1
   1b030:	bne	1af58 <dcngettext@plt+0x9f30>
   1b034:	b	1af18 <dcngettext@plt+0x9ef0>
   1b038:	andeq	r0, r0, r6, lsl #8
   1b03c:	andeq	sp, r2, r0, asr #5
   1b040:	andeq	r0, r0, r7, lsl #8
   1b044:	andeq	r0, r0, r9, lsl #8
   1b048:	push	{r4, lr}
   1b04c:	mov	r0, #14
   1b050:	bl	10fc8 <nl_langinfo@plt>
   1b054:	cmp	r0, #0
   1b058:	beq	1b070 <dcngettext@plt+0xa048>
   1b05c:	ldrb	r2, [r0]
   1b060:	ldr	r3, [pc, #16]	; 1b078 <dcngettext@plt+0xa050>
   1b064:	cmp	r2, #0
   1b068:	moveq	r0, r3
   1b06c:	pop	{r4, pc}
   1b070:	ldr	r0, [pc]	; 1b078 <dcngettext@plt+0xa050>
   1b074:	pop	{r4, pc}
   1b078:	andeq	ip, r1, r0, asr #20
   1b07c:	push	{r4, r5, r6, r7, lr}
   1b080:	subs	r6, r0, #0
   1b084:	sub	sp, sp, #12
   1b088:	addeq	r6, sp, #4
   1b08c:	mov	r0, r6
   1b090:	mov	r5, r2
   1b094:	mov	r7, r1
   1b098:	bl	10e9c <mbrtowc@plt>
   1b09c:	cmp	r5, #0
   1b0a0:	cmnne	r0, #3
   1b0a4:	mov	r4, r0
   1b0a8:	bls	1b0c4 <dcngettext@plt+0xa09c>
   1b0ac:	mov	r0, #0
   1b0b0:	bl	1b11c <dcngettext@plt+0xa0f4>
   1b0b4:	cmp	r0, #0
   1b0b8:	moveq	r4, #1
   1b0bc:	ldrbeq	r3, [r7]
   1b0c0:	streq	r3, [r6]
   1b0c4:	mov	r0, r4
   1b0c8:	add	sp, sp, #12
   1b0cc:	pop	{r4, r5, r6, r7, pc}
   1b0d0:	push	{r4, r5, r6, lr}
   1b0d4:	subs	r4, r2, #0
   1b0d8:	mov	r6, r0
   1b0dc:	mov	r5, r1
   1b0e0:	beq	1b10c <dcngettext@plt+0xa0e4>
   1b0e4:	mov	r1, r4
   1b0e8:	mvn	r0, #0
   1b0ec:	bl	1b210 <dcngettext@plt+0xa1e8>
   1b0f0:	cmp	r0, r5
   1b0f4:	bcs	1b10c <dcngettext@plt+0xa0e4>
   1b0f8:	bl	10f2c <__errno_location@plt>
   1b0fc:	mov	r3, #12
   1b100:	str	r3, [r0]
   1b104:	mov	r0, #0
   1b108:	pop	{r4, r5, r6, pc}
   1b10c:	mul	r1, r5, r4
   1b110:	mov	r0, r6
   1b114:	pop	{r4, r5, r6, lr}
   1b118:	b	1ad9c <dcngettext@plt+0x9d74>
   1b11c:	push	{lr}		; (str lr, [sp, #-4]!)
   1b120:	sub	sp, sp, #268	; 0x10c
   1b124:	add	r1, sp, #4
   1b128:	ldr	r2, [pc, #60]	; 1b16c <dcngettext@plt+0xa144>
   1b12c:	bl	1b178 <dcngettext@plt+0xa150>
   1b130:	cmp	r0, #0
   1b134:	movne	r0, #0
   1b138:	bne	1b164 <dcngettext@plt+0xa13c>
   1b13c:	ldr	r1, [pc, #44]	; 1b170 <dcngettext@plt+0xa148>
   1b140:	add	r0, sp, #4
   1b144:	bl	10db8 <strcmp@plt>
   1b148:	cmp	r0, #0
   1b14c:	beq	1b164 <dcngettext@plt+0xa13c>
   1b150:	add	r0, sp, #4
   1b154:	ldr	r1, [pc, #24]	; 1b174 <dcngettext@plt+0xa14c>
   1b158:	bl	10db8 <strcmp@plt>
   1b15c:	adds	r0, r0, #0
   1b160:	movne	r0, #1
   1b164:	add	sp, sp, #268	; 0x10c
   1b168:	pop	{pc}		; (ldr pc, [sp], #4)
   1b16c:	andeq	r0, r0, r1, lsl #2
   1b170:	andeq	ip, r1, r8, asr #20
   1b174:	andeq	ip, r1, ip, asr #20
   1b178:	push	{r4, r5, r6, lr}
   1b17c:	mov	r5, r1
   1b180:	mov	r1, #0
   1b184:	mov	r4, r2
   1b188:	bl	10fb0 <setlocale@plt>
   1b18c:	subs	r6, r0, #0
   1b190:	beq	1b1ec <dcngettext@plt+0xa1c4>
   1b194:	bl	10f14 <strlen@plt>
   1b198:	cmp	r4, r0
   1b19c:	bhi	1b1d4 <dcngettext@plt+0xa1ac>
   1b1a0:	cmp	r4, #0
   1b1a4:	bne	1b1b0 <dcngettext@plt+0xa188>
   1b1a8:	mov	r0, #34	; 0x22
   1b1ac:	pop	{r4, r5, r6, pc}
   1b1b0:	sub	r4, r4, #1
   1b1b4:	mov	r1, r6
   1b1b8:	mov	r2, r4
   1b1bc:	mov	r0, r5
   1b1c0:	bl	10df4 <memcpy@plt>
   1b1c4:	mov	r3, #0
   1b1c8:	strb	r3, [r5, r4]
   1b1cc:	mov	r0, #34	; 0x22
   1b1d0:	pop	{r4, r5, r6, pc}
   1b1d4:	add	r2, r0, #1
   1b1d8:	mov	r1, r6
   1b1dc:	mov	r0, r5
   1b1e0:	bl	10df4 <memcpy@plt>
   1b1e4:	mov	r0, #0
   1b1e8:	pop	{r4, r5, r6, pc}
   1b1ec:	cmp	r4, #0
   1b1f0:	beq	1b200 <dcngettext@plt+0xa1d8>
   1b1f4:	strb	r6, [r5]
   1b1f8:	mov	r0, #22
   1b1fc:	pop	{r4, r5, r6, pc}
   1b200:	mov	r0, #22
   1b204:	pop	{r4, r5, r6, pc}
   1b208:	mov	r1, #0
   1b20c:	b	10fb0 <setlocale@plt>
   1b210:	subs	r2, r1, #1
   1b214:	bxeq	lr
   1b218:	bcc	1b3f0 <dcngettext@plt+0xa3c8>
   1b21c:	cmp	r0, r1
   1b220:	bls	1b3d4 <dcngettext@plt+0xa3ac>
   1b224:	tst	r1, r2
   1b228:	beq	1b3e0 <dcngettext@plt+0xa3b8>
   1b22c:	clz	r3, r0
   1b230:	clz	r2, r1
   1b234:	sub	r3, r2, r3
   1b238:	rsbs	r3, r3, #31
   1b23c:	addne	r3, r3, r3, lsl #1
   1b240:	mov	r2, #0
   1b244:	addne	pc, pc, r3, lsl #2
   1b248:	nop			; (mov r0, r0)
   1b24c:	cmp	r0, r1, lsl #31
   1b250:	adc	r2, r2, r2
   1b254:	subcs	r0, r0, r1, lsl #31
   1b258:	cmp	r0, r1, lsl #30
   1b25c:	adc	r2, r2, r2
   1b260:	subcs	r0, r0, r1, lsl #30
   1b264:	cmp	r0, r1, lsl #29
   1b268:	adc	r2, r2, r2
   1b26c:	subcs	r0, r0, r1, lsl #29
   1b270:	cmp	r0, r1, lsl #28
   1b274:	adc	r2, r2, r2
   1b278:	subcs	r0, r0, r1, lsl #28
   1b27c:	cmp	r0, r1, lsl #27
   1b280:	adc	r2, r2, r2
   1b284:	subcs	r0, r0, r1, lsl #27
   1b288:	cmp	r0, r1, lsl #26
   1b28c:	adc	r2, r2, r2
   1b290:	subcs	r0, r0, r1, lsl #26
   1b294:	cmp	r0, r1, lsl #25
   1b298:	adc	r2, r2, r2
   1b29c:	subcs	r0, r0, r1, lsl #25
   1b2a0:	cmp	r0, r1, lsl #24
   1b2a4:	adc	r2, r2, r2
   1b2a8:	subcs	r0, r0, r1, lsl #24
   1b2ac:	cmp	r0, r1, lsl #23
   1b2b0:	adc	r2, r2, r2
   1b2b4:	subcs	r0, r0, r1, lsl #23
   1b2b8:	cmp	r0, r1, lsl #22
   1b2bc:	adc	r2, r2, r2
   1b2c0:	subcs	r0, r0, r1, lsl #22
   1b2c4:	cmp	r0, r1, lsl #21
   1b2c8:	adc	r2, r2, r2
   1b2cc:	subcs	r0, r0, r1, lsl #21
   1b2d0:	cmp	r0, r1, lsl #20
   1b2d4:	adc	r2, r2, r2
   1b2d8:	subcs	r0, r0, r1, lsl #20
   1b2dc:	cmp	r0, r1, lsl #19
   1b2e0:	adc	r2, r2, r2
   1b2e4:	subcs	r0, r0, r1, lsl #19
   1b2e8:	cmp	r0, r1, lsl #18
   1b2ec:	adc	r2, r2, r2
   1b2f0:	subcs	r0, r0, r1, lsl #18
   1b2f4:	cmp	r0, r1, lsl #17
   1b2f8:	adc	r2, r2, r2
   1b2fc:	subcs	r0, r0, r1, lsl #17
   1b300:	cmp	r0, r1, lsl #16
   1b304:	adc	r2, r2, r2
   1b308:	subcs	r0, r0, r1, lsl #16
   1b30c:	cmp	r0, r1, lsl #15
   1b310:	adc	r2, r2, r2
   1b314:	subcs	r0, r0, r1, lsl #15
   1b318:	cmp	r0, r1, lsl #14
   1b31c:	adc	r2, r2, r2
   1b320:	subcs	r0, r0, r1, lsl #14
   1b324:	cmp	r0, r1, lsl #13
   1b328:	adc	r2, r2, r2
   1b32c:	subcs	r0, r0, r1, lsl #13
   1b330:	cmp	r0, r1, lsl #12
   1b334:	adc	r2, r2, r2
   1b338:	subcs	r0, r0, r1, lsl #12
   1b33c:	cmp	r0, r1, lsl #11
   1b340:	adc	r2, r2, r2
   1b344:	subcs	r0, r0, r1, lsl #11
   1b348:	cmp	r0, r1, lsl #10
   1b34c:	adc	r2, r2, r2
   1b350:	subcs	r0, r0, r1, lsl #10
   1b354:	cmp	r0, r1, lsl #9
   1b358:	adc	r2, r2, r2
   1b35c:	subcs	r0, r0, r1, lsl #9
   1b360:	cmp	r0, r1, lsl #8
   1b364:	adc	r2, r2, r2
   1b368:	subcs	r0, r0, r1, lsl #8
   1b36c:	cmp	r0, r1, lsl #7
   1b370:	adc	r2, r2, r2
   1b374:	subcs	r0, r0, r1, lsl #7
   1b378:	cmp	r0, r1, lsl #6
   1b37c:	adc	r2, r2, r2
   1b380:	subcs	r0, r0, r1, lsl #6
   1b384:	cmp	r0, r1, lsl #5
   1b388:	adc	r2, r2, r2
   1b38c:	subcs	r0, r0, r1, lsl #5
   1b390:	cmp	r0, r1, lsl #4
   1b394:	adc	r2, r2, r2
   1b398:	subcs	r0, r0, r1, lsl #4
   1b39c:	cmp	r0, r1, lsl #3
   1b3a0:	adc	r2, r2, r2
   1b3a4:	subcs	r0, r0, r1, lsl #3
   1b3a8:	cmp	r0, r1, lsl #2
   1b3ac:	adc	r2, r2, r2
   1b3b0:	subcs	r0, r0, r1, lsl #2
   1b3b4:	cmp	r0, r1, lsl #1
   1b3b8:	adc	r2, r2, r2
   1b3bc:	subcs	r0, r0, r1, lsl #1
   1b3c0:	cmp	r0, r1
   1b3c4:	adc	r2, r2, r2
   1b3c8:	subcs	r0, r0, r1
   1b3cc:	mov	r0, r2
   1b3d0:	bx	lr
   1b3d4:	moveq	r0, #1
   1b3d8:	movne	r0, #0
   1b3dc:	bx	lr
   1b3e0:	clz	r2, r1
   1b3e4:	rsb	r2, r2, #31
   1b3e8:	lsr	r0, r0, r2
   1b3ec:	bx	lr
   1b3f0:	cmp	r0, #0
   1b3f4:	mvnne	r0, #0
   1b3f8:	b	1b698 <dcngettext@plt+0xa670>
   1b3fc:	cmp	r1, #0
   1b400:	beq	1b3f0 <dcngettext@plt+0xa3c8>
   1b404:	push	{r0, r1, lr}
   1b408:	bl	1b210 <dcngettext@plt+0xa1e8>
   1b40c:	pop	{r1, r2, lr}
   1b410:	mul	r3, r2, r0
   1b414:	sub	r1, r1, r3
   1b418:	bx	lr
   1b41c:	cmp	r1, #0
   1b420:	beq	1b62c <dcngettext@plt+0xa604>
   1b424:	eor	ip, r0, r1
   1b428:	rsbmi	r1, r1, #0
   1b42c:	subs	r2, r1, #1
   1b430:	beq	1b5f8 <dcngettext@plt+0xa5d0>
   1b434:	movs	r3, r0
   1b438:	rsbmi	r3, r0, #0
   1b43c:	cmp	r3, r1
   1b440:	bls	1b604 <dcngettext@plt+0xa5dc>
   1b444:	tst	r1, r2
   1b448:	beq	1b614 <dcngettext@plt+0xa5ec>
   1b44c:	clz	r2, r3
   1b450:	clz	r0, r1
   1b454:	sub	r2, r0, r2
   1b458:	rsbs	r2, r2, #31
   1b45c:	addne	r2, r2, r2, lsl #1
   1b460:	mov	r0, #0
   1b464:	addne	pc, pc, r2, lsl #2
   1b468:	nop			; (mov r0, r0)
   1b46c:	cmp	r3, r1, lsl #31
   1b470:	adc	r0, r0, r0
   1b474:	subcs	r3, r3, r1, lsl #31
   1b478:	cmp	r3, r1, lsl #30
   1b47c:	adc	r0, r0, r0
   1b480:	subcs	r3, r3, r1, lsl #30
   1b484:	cmp	r3, r1, lsl #29
   1b488:	adc	r0, r0, r0
   1b48c:	subcs	r3, r3, r1, lsl #29
   1b490:	cmp	r3, r1, lsl #28
   1b494:	adc	r0, r0, r0
   1b498:	subcs	r3, r3, r1, lsl #28
   1b49c:	cmp	r3, r1, lsl #27
   1b4a0:	adc	r0, r0, r0
   1b4a4:	subcs	r3, r3, r1, lsl #27
   1b4a8:	cmp	r3, r1, lsl #26
   1b4ac:	adc	r0, r0, r0
   1b4b0:	subcs	r3, r3, r1, lsl #26
   1b4b4:	cmp	r3, r1, lsl #25
   1b4b8:	adc	r0, r0, r0
   1b4bc:	subcs	r3, r3, r1, lsl #25
   1b4c0:	cmp	r3, r1, lsl #24
   1b4c4:	adc	r0, r0, r0
   1b4c8:	subcs	r3, r3, r1, lsl #24
   1b4cc:	cmp	r3, r1, lsl #23
   1b4d0:	adc	r0, r0, r0
   1b4d4:	subcs	r3, r3, r1, lsl #23
   1b4d8:	cmp	r3, r1, lsl #22
   1b4dc:	adc	r0, r0, r0
   1b4e0:	subcs	r3, r3, r1, lsl #22
   1b4e4:	cmp	r3, r1, lsl #21
   1b4e8:	adc	r0, r0, r0
   1b4ec:	subcs	r3, r3, r1, lsl #21
   1b4f0:	cmp	r3, r1, lsl #20
   1b4f4:	adc	r0, r0, r0
   1b4f8:	subcs	r3, r3, r1, lsl #20
   1b4fc:	cmp	r3, r1, lsl #19
   1b500:	adc	r0, r0, r0
   1b504:	subcs	r3, r3, r1, lsl #19
   1b508:	cmp	r3, r1, lsl #18
   1b50c:	adc	r0, r0, r0
   1b510:	subcs	r3, r3, r1, lsl #18
   1b514:	cmp	r3, r1, lsl #17
   1b518:	adc	r0, r0, r0
   1b51c:	subcs	r3, r3, r1, lsl #17
   1b520:	cmp	r3, r1, lsl #16
   1b524:	adc	r0, r0, r0
   1b528:	subcs	r3, r3, r1, lsl #16
   1b52c:	cmp	r3, r1, lsl #15
   1b530:	adc	r0, r0, r0
   1b534:	subcs	r3, r3, r1, lsl #15
   1b538:	cmp	r3, r1, lsl #14
   1b53c:	adc	r0, r0, r0
   1b540:	subcs	r3, r3, r1, lsl #14
   1b544:	cmp	r3, r1, lsl #13
   1b548:	adc	r0, r0, r0
   1b54c:	subcs	r3, r3, r1, lsl #13
   1b550:	cmp	r3, r1, lsl #12
   1b554:	adc	r0, r0, r0
   1b558:	subcs	r3, r3, r1, lsl #12
   1b55c:	cmp	r3, r1, lsl #11
   1b560:	adc	r0, r0, r0
   1b564:	subcs	r3, r3, r1, lsl #11
   1b568:	cmp	r3, r1, lsl #10
   1b56c:	adc	r0, r0, r0
   1b570:	subcs	r3, r3, r1, lsl #10
   1b574:	cmp	r3, r1, lsl #9
   1b578:	adc	r0, r0, r0
   1b57c:	subcs	r3, r3, r1, lsl #9
   1b580:	cmp	r3, r1, lsl #8
   1b584:	adc	r0, r0, r0
   1b588:	subcs	r3, r3, r1, lsl #8
   1b58c:	cmp	r3, r1, lsl #7
   1b590:	adc	r0, r0, r0
   1b594:	subcs	r3, r3, r1, lsl #7
   1b598:	cmp	r3, r1, lsl #6
   1b59c:	adc	r0, r0, r0
   1b5a0:	subcs	r3, r3, r1, lsl #6
   1b5a4:	cmp	r3, r1, lsl #5
   1b5a8:	adc	r0, r0, r0
   1b5ac:	subcs	r3, r3, r1, lsl #5
   1b5b0:	cmp	r3, r1, lsl #4
   1b5b4:	adc	r0, r0, r0
   1b5b8:	subcs	r3, r3, r1, lsl #4
   1b5bc:	cmp	r3, r1, lsl #3
   1b5c0:	adc	r0, r0, r0
   1b5c4:	subcs	r3, r3, r1, lsl #3
   1b5c8:	cmp	r3, r1, lsl #2
   1b5cc:	adc	r0, r0, r0
   1b5d0:	subcs	r3, r3, r1, lsl #2
   1b5d4:	cmp	r3, r1, lsl #1
   1b5d8:	adc	r0, r0, r0
   1b5dc:	subcs	r3, r3, r1, lsl #1
   1b5e0:	cmp	r3, r1
   1b5e4:	adc	r0, r0, r0
   1b5e8:	subcs	r3, r3, r1
   1b5ec:	cmp	ip, #0
   1b5f0:	rsbmi	r0, r0, #0
   1b5f4:	bx	lr
   1b5f8:	teq	ip, r0
   1b5fc:	rsbmi	r0, r0, #0
   1b600:	bx	lr
   1b604:	movcc	r0, #0
   1b608:	asreq	r0, ip, #31
   1b60c:	orreq	r0, r0, #1
   1b610:	bx	lr
   1b614:	clz	r2, r1
   1b618:	rsb	r2, r2, #31
   1b61c:	cmp	ip, #0
   1b620:	lsr	r0, r3, r2
   1b624:	rsbmi	r0, r0, #0
   1b628:	bx	lr
   1b62c:	cmp	r0, #0
   1b630:	mvngt	r0, #-2147483648	; 0x80000000
   1b634:	movlt	r0, #-2147483648	; 0x80000000
   1b638:	b	1b698 <dcngettext@plt+0xa670>
   1b63c:	cmp	r1, #0
   1b640:	beq	1b62c <dcngettext@plt+0xa604>
   1b644:	push	{r0, r1, lr}
   1b648:	bl	1b424 <dcngettext@plt+0xa3fc>
   1b64c:	pop	{r1, r2, lr}
   1b650:	mul	r3, r2, r0
   1b654:	sub	r1, r1, r3
   1b658:	bx	lr
   1b65c:	cmp	r3, #0
   1b660:	cmpeq	r2, #0
   1b664:	bne	1b67c <dcngettext@plt+0xa654>
   1b668:	cmp	r1, #0
   1b66c:	cmpeq	r0, #0
   1b670:	mvnne	r1, #0
   1b674:	mvnne	r0, #0
   1b678:	b	1b698 <dcngettext@plt+0xa670>
   1b67c:	sub	sp, sp, #8
   1b680:	push	{sp, lr}
   1b684:	bl	1b6a8 <dcngettext@plt+0xa680>
   1b688:	ldr	lr, [sp, #4]
   1b68c:	add	sp, sp, #8
   1b690:	pop	{r2, r3}
   1b694:	bx	lr
   1b698:	push	{r1, lr}
   1b69c:	mov	r0, #8
   1b6a0:	bl	10da0 <raise@plt>
   1b6a4:	pop	{r1, pc}
   1b6a8:	cmp	r1, r3
   1b6ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b6b0:	cmpeq	r0, r2
   1b6b4:	mov	r4, r0
   1b6b8:	mov	r5, r1
   1b6bc:	ldr	r9, [sp, #28]
   1b6c0:	movcc	r0, #0
   1b6c4:	movcc	r1, #0
   1b6c8:	bcc	1b7c0 <dcngettext@plt+0xa798>
   1b6cc:	cmp	r3, #0
   1b6d0:	clzeq	ip, r2
   1b6d4:	clzne	ip, r3
   1b6d8:	addeq	ip, ip, #32
   1b6dc:	cmp	r5, #0
   1b6e0:	clzeq	r1, r4
   1b6e4:	addeq	r1, r1, #32
   1b6e8:	clzne	r1, r5
   1b6ec:	sub	ip, ip, r1
   1b6f0:	sub	lr, ip, #32
   1b6f4:	lsl	r7, r3, ip
   1b6f8:	rsb	r8, ip, #32
   1b6fc:	orr	r7, r7, r2, lsl lr
   1b700:	orr	r7, r7, r2, lsr r8
   1b704:	lsl	r6, r2, ip
   1b708:	cmp	r5, r7
   1b70c:	cmpeq	r4, r6
   1b710:	movcc	r0, #0
   1b714:	movcc	r1, #0
   1b718:	bcc	1b734 <dcngettext@plt+0xa70c>
   1b71c:	mov	r3, #1
   1b720:	subs	r4, r4, r6
   1b724:	lsl	r1, r3, lr
   1b728:	lsl	r0, r3, ip
   1b72c:	orr	r1, r1, r3, lsr r8
   1b730:	sbc	r5, r5, r7
   1b734:	cmp	ip, #0
   1b738:	beq	1b7c0 <dcngettext@plt+0xa798>
   1b73c:	lsrs	r3, r7, #1
   1b740:	rrx	r2, r6
   1b744:	mov	r6, ip
   1b748:	b	1b76c <dcngettext@plt+0xa744>
   1b74c:	subs	r4, r4, r2
   1b750:	sbc	r5, r5, r3
   1b754:	adds	r4, r4, r4
   1b758:	adc	r5, r5, r5
   1b75c:	adds	r4, r4, #1
   1b760:	adc	r5, r5, #0
   1b764:	subs	r6, r6, #1
   1b768:	beq	1b788 <dcngettext@plt+0xa760>
   1b76c:	cmp	r5, r3
   1b770:	cmpeq	r4, r2
   1b774:	bcs	1b74c <dcngettext@plt+0xa724>
   1b778:	adds	r4, r4, r4
   1b77c:	adc	r5, r5, r5
   1b780:	subs	r6, r6, #1
   1b784:	bne	1b76c <dcngettext@plt+0xa744>
   1b788:	lsr	r6, r4, ip
   1b78c:	lsr	r7, r5, ip
   1b790:	orr	r6, r6, r5, lsl r8
   1b794:	adds	r2, r0, r4
   1b798:	orr	r6, r6, r5, lsr lr
   1b79c:	adc	r3, r1, r5
   1b7a0:	lsl	r1, r7, ip
   1b7a4:	orr	r1, r1, r6, lsl lr
   1b7a8:	lsl	r0, r6, ip
   1b7ac:	orr	r1, r1, r6, lsr r8
   1b7b0:	subs	r0, r2, r0
   1b7b4:	mov	r4, r6
   1b7b8:	mov	r5, r7
   1b7bc:	sbc	r1, r3, r1
   1b7c0:	cmp	r9, #0
   1b7c4:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1b7c8:	strd	r4, [r9]
   1b7cc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b7d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b7d4:	mov	r7, r0
   1b7d8:	ldr	r6, [pc, #72]	; 1b828 <dcngettext@plt+0xa800>
   1b7dc:	ldr	r5, [pc, #72]	; 1b82c <dcngettext@plt+0xa804>
   1b7e0:	add	r6, pc, r6
   1b7e4:	add	r5, pc, r5
   1b7e8:	sub	r6, r6, r5
   1b7ec:	mov	r8, r1
   1b7f0:	mov	r9, r2
   1b7f4:	bl	10d5c <fdopen@plt-0x20>
   1b7f8:	asrs	r6, r6, #2
   1b7fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b800:	mov	r4, #0
   1b804:	add	r4, r4, #1
   1b808:	ldr	r3, [r5], #4
   1b80c:	mov	r2, r9
   1b810:	mov	r1, r8
   1b814:	mov	r0, r7
   1b818:	blx	r3
   1b81c:	cmp	r6, r4
   1b820:	bne	1b804 <dcngettext@plt+0xa7dc>
   1b824:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b828:	andeq	r1, r1, r8, lsr #14
   1b82c:	andeq	r1, r1, r0, lsr #14
   1b830:	bx	lr
   1b834:	ldr	r3, [pc, #12]	; 1b848 <dcngettext@plt+0xa820>
   1b838:	mov	r1, #0
   1b83c:	add	r3, pc, r3
   1b840:	ldr	r2, [r3]
   1b844:	b	10f38 <__cxa_atexit@plt>
   1b848:			; <UNDEFINED> instruction: 0x000118b8

Disassembly of section .fini:

0001b84c <.fini>:
   1b84c:	push	{r3, lr}
   1b850:	pop	{r3, pc}
