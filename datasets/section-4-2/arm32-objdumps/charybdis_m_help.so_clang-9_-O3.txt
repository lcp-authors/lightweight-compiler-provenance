
../repos/charybdis/modules/.libs/m_help.so:     file format elf32-littlearm


Disassembly of section .init:

00000504 <_init>:
 504:	push	{r3, lr}
 508:	bl	554 <call_weak_fn>
 50c:	pop	{r3, pc}

Disassembly of section .plt:

00000510 <.plt>:
 510:	push	{lr}		; (str lr, [sp, #-4]!)
 514:	ldr	lr, [pc, #4]	; 520 <.plt+0x10>
 518:	add	lr, pc, lr
 51c:	ldr	pc, [lr, #8]!
 520:	.word	0x00010ae0

00000524 <__cxa_finalize@plt>:
 524:	add	ip, pc, #0, 12
 528:	add	ip, ip, #16, 20	; 0x10000
 52c:	ldr	pc, [ip, #2784]!	; 0xae0

00000530 <sendto_one@plt>:
 530:	add	ip, pc, #0, 12
 534:	add	ip, ip, #16, 20	; 0x10000
 538:	ldr	pc, [ip, #2776]!	; 0xad8

0000053c <__gmon_start__@plt>:
 53c:	add	ip, pc, #0, 12
 540:	add	ip, ip, #16, 20	; 0x10000
 544:	ldr	pc, [ip, #2768]!	; 0xad0

00000548 <rb_dictionary_retrieve@plt>:
 548:	add	ip, pc, #0, 12
 54c:	add	ip, ip, #16, 20	; 0x10000
 550:	ldr	pc, [ip, #2760]!	; 0xac8

Disassembly of section .text:

00000554 <call_weak_fn>:
 554:	ldr	r3, [pc, #20]	; 570 <call_weak_fn+0x1c>
 558:	ldr	r2, [pc, #20]	; 574 <call_weak_fn+0x20>
 55c:	add	r3, pc, r3
 560:	ldr	r2, [r3, r2]
 564:	cmp	r2, #0
 568:	bxeq	lr
 56c:	b	53c <__gmon_start__@plt>
 570:	.word	0x00010a9c
 574:	.word	0x00000028

00000578 <deregister_tm_clones>:
 578:	ldr	r0, [pc, #44]	; 5ac <deregister_tm_clones+0x34>
 57c:	ldr	r3, [pc, #44]	; 5b0 <deregister_tm_clones+0x38>
 580:	add	r0, pc, r0
 584:	add	r3, pc, r3
 588:	cmp	r3, r0
 58c:	ldr	r3, [pc, #32]	; 5b4 <deregister_tm_clones+0x3c>
 590:	add	r3, pc, r3
 594:	bxeq	lr
 598:	ldr	r2, [pc, #24]	; 5b8 <deregister_tm_clones+0x40>
 59c:	ldr	r3, [r3, r2]
 5a0:	cmp	r3, #0
 5a4:	bxeq	lr
 5a8:	bx	r3
 5ac:	.word	0x00010b70
 5b0:	.word	0x00010b6c
 5b4:	.word	0x00010a68
 5b8:	.word	0x00000024

000005bc <register_tm_clones>:
 5bc:	ldr	r0, [pc, #56]	; 5fc <register_tm_clones+0x40>
 5c0:	ldr	r3, [pc, #56]	; 600 <register_tm_clones+0x44>
 5c4:	add	r0, pc, r0
 5c8:	add	r3, pc, r3
 5cc:	sub	r1, r3, r0
 5d0:	ldr	r3, [pc, #44]	; 604 <register_tm_clones+0x48>
 5d4:	asr	r1, r1, #2
 5d8:	add	r3, pc, r3
 5dc:	add	r1, r1, r1, lsr #31
 5e0:	asrs	r1, r1, #1
 5e4:	bxeq	lr
 5e8:	ldr	r2, [pc, #24]	; 608 <register_tm_clones+0x4c>
 5ec:	ldr	r3, [r3, r2]
 5f0:	cmp	r3, #0
 5f4:	bxeq	lr
 5f8:	bx	r3
 5fc:	.word	0x00010b2c
 600:	.word	0x00010b28
 604:	.word	0x00010a20
 608:	.word	0x0000002c

0000060c <__do_global_dtors_aux>:
 60c:	ldr	r3, [pc, #76]	; 660 <__do_global_dtors_aux+0x54>
 610:	ldr	r2, [pc, #76]	; 664 <__do_global_dtors_aux+0x58>
 614:	add	r3, pc, r3
 618:	add	r2, pc, r2
 61c:	ldrb	r3, [r3]
 620:	cmp	r3, #0
 624:	bxne	lr
 628:	ldr	r3, [pc, #56]	; 668 <__do_global_dtors_aux+0x5c>
 62c:	push	{r4, lr}
 630:	ldr	r3, [r2, r3]
 634:	cmp	r3, #0
 638:	beq	648 <__do_global_dtors_aux+0x3c>
 63c:	ldr	r3, [pc, #40]	; 66c <__do_global_dtors_aux+0x60>
 640:	ldr	r0, [pc, r3]
 644:	bl	524 <__cxa_finalize@plt>
 648:	bl	578 <deregister_tm_clones>
 64c:	ldr	r3, [pc, #28]	; 670 <__do_global_dtors_aux+0x64>
 650:	mov	r2, #1
 654:	add	r3, pc, r3
 658:	strb	r2, [r3]
 65c:	pop	{r4, pc}
 660:	.word	0x00010adc
 664:	.word	0x000109e0
 668:	.word	0x00000020
 66c:	.word	0x000109f0
 670:	.word	0x00010a9c

00000674 <frame_dummy>:
 674:	b	5bc <register_tm_clones>

00000678 <m_help>:
 678:	mov	r0, r2
 67c:	mov	r2, #0
 680:	cmp	r3, #2
 684:	blt	690 <m_help+0x18>
 688:	ldr	r1, [sp]
 68c:	ldr	r2, [r1, #4]
 690:	mov	r1, #1
 694:	b	6d8 <dohelp>

00000698 <mo_help>:
 698:	mov	r0, r2
 69c:	mov	r2, #0
 6a0:	cmp	r3, #2
 6a4:	blt	6b0 <mo_help+0x18>
 6a8:	ldr	r1, [sp]
 6ac:	ldr	r2, [r1, #4]
 6b0:	mov	r1, #2
 6b4:	b	6d8 <dohelp>

000006b8 <mo_uhelp>:
 6b8:	mov	r0, r2
 6bc:	mov	r2, #0
 6c0:	cmp	r3, #2
 6c4:	blt	6d0 <mo_uhelp+0x18>
 6c8:	ldr	r1, [sp]
 6cc:	ldr	r2, [r1, #4]
 6d0:	mov	r1, #1
 6d4:	b	6d8 <dohelp>

000006d8 <dohelp>:
 6d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 6dc:	add	fp, sp, #24
 6e0:	sub	sp, sp, #8
 6e4:	mov	r6, r1
 6e8:	mov	r9, r0
 6ec:	cmp	r2, #0
 6f0:	beq	704 <dohelp+0x2c>
 6f4:	ldrb	r0, [r2]
 6f8:	mov	r5, r2
 6fc:	cmp	r0, #0
 700:	bne	70c <dohelp+0x34>
 704:	ldr	r5, [pc, #264]	; 814 <dohelp+0x13c>
 708:	add	r5, pc, r5
 70c:	ldr	r0, [pc, #260]	; 818 <dohelp+0x140>
 710:	tst	r6, #2
 714:	ldr	r0, [pc, r0]
 718:	ldr	r1, [pc, #252]	; 81c <dohelp+0x144>
 71c:	ldr	r1, [pc, r1]
 720:	moveq	r1, r0
 724:	ldr	r0, [r1]
 728:	mov	r1, r5
 72c:	bl	548 <rb_dictionary_retrieve@plt>
 730:	cmp	r0, #0
 734:	beq	7e8 <dohelp+0x110>
 738:	ldr	r1, [r0, #44]	; 0x2c
 73c:	tst	r1, r6
 740:	beq	7e8 <dohelp+0x110>
 744:	ldr	r4, [r0, #32]
 748:	add	r6, r9, #88	; 0x58
 74c:	mov	r3, r6
 750:	ldr	r0, [r4]
 754:	ldr	r0, [r0]
 758:	str	r5, [sp]
 75c:	str	r0, [sp, #4]
 760:	ldr	r0, [pc, #192]	; 828 <dohelp+0x150>
 764:	ldr	r0, [pc, r0]
 768:	ldr	r1, [pc, #188]	; 82c <dohelp+0x154>
 76c:	add	r7, r0, #88	; 0x58
 770:	add	r1, pc, r1
 774:	mov	r0, r9
 778:	mov	r2, r7
 77c:	bl	530 <sendto_one@plt>
 780:	ldr	r4, [r4, #8]
 784:	cmp	r4, #0
 788:	beq	7c4 <dohelp+0xec>
 78c:	ldr	r8, [pc, #156]	; 830 <dohelp+0x158>
 790:	add	r8, pc, r8
 794:	ldr	r0, [r4]
 798:	mov	r1, r8
 79c:	mov	r2, r7
 7a0:	mov	r3, r6
 7a4:	ldr	r0, [r0]
 7a8:	str	r5, [sp]
 7ac:	str	r0, [sp, #4]
 7b0:	mov	r0, r9
 7b4:	bl	530 <sendto_one@plt>
 7b8:	ldr	r4, [r4, #8]
 7bc:	cmp	r4, #0
 7c0:	bne	794 <dohelp+0xbc>
 7c4:	str	r5, [sp]
 7c8:	mov	r0, r9
 7cc:	mov	r2, r7
 7d0:	mov	r3, r6
 7d4:	ldr	r1, [pc, #88]	; 834 <dohelp+0x15c>
 7d8:	add	r1, pc, r1
 7dc:	bl	530 <sendto_one@plt>
 7e0:	sub	sp, fp, #24
 7e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 7e8:	str	r5, [sp]
 7ec:	add	r3, r9, #88	; 0x58
 7f0:	ldr	r0, [pc, #40]	; 820 <dohelp+0x148>
 7f4:	ldr	r0, [pc, r0]
 7f8:	ldr	r1, [pc, #36]	; 824 <dohelp+0x14c>
 7fc:	add	r2, r0, #88	; 0x58
 800:	add	r1, pc, r1
 804:	mov	r0, r9
 808:	bl	530 <sendto_one@plt>
 80c:	sub	sp, fp, #24
 810:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 814:	.word	0x000001d9
 818:	.word	0x00010900
 81c:	.word	0x0001090c
 820:	.word	0x00010838
 824:	.word	0x0000003e
 828:	.word	0x000108c8
 82c:	.word	0x000000ec
 830:	.word	0x000000de
 834:	.word	0x000000a8

Disassembly of section .fini:

00000838 <_fini>:
 838:	push	{r3, lr}
 83c:	pop	{r3, pc}
