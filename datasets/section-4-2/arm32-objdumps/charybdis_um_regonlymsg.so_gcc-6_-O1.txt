
../repos/charybdis/modules/.libs/um_regonlymsg.so:     file format elf32-littlearm


Disassembly of section .init:

00000490 <_init>:
 490:	push	{r3, lr}
 494:	bl	510 <call_weak_fn>
 498:	pop	{r3, pc}

Disassembly of section .plt:

0000049c <.plt>:
 49c:	push	{lr}		; (str lr, [sp, #-4]!)
 4a0:	ldr	lr, [pc, #4]	; 4ac <.plt+0x10>
 4a4:	add	lr, pc, lr
 4a8:	ldr	pc, [lr, #8]!
 4ac:	.word	0x00010b54

000004b0 <__cxa_finalize@plt>:
 4b0:	add	ip, pc, #0, 12
 4b4:	add	ip, ip, #16, 20	; 0x10000
 4b8:	ldr	pc, [ip, #2900]!	; 0xb54

000004bc <ierror@plt>:
 4bc:	add	ip, pc, #0, 12
 4c0:	add	ip, ip, #16, 20	; 0x10000
 4c4:	ldr	pc, [ip, #2892]!	; 0xb4c

000004c8 <find_umode_slot@plt>:
 4c8:	add	ip, pc, #0, 12
 4cc:	add	ip, ip, #16, 20	; 0x10000
 4d0:	ldr	pc, [ip, #2884]!	; 0xb44

000004d4 <__gmon_start__@plt>:
 4d4:	add	ip, pc, #0, 12
 4d8:	add	ip, ip, #16, 20	; 0x10000
 4dc:	ldr	pc, [ip, #2876]!	; 0xb3c

000004e0 <sendto_one_numeric@plt>:
 4e0:	add	ip, pc, #0, 12
 4e4:	add	ip, ip, #16, 20	; 0x10000
 4e8:	ldr	pc, [ip, #2868]!	; 0xb34

000004ec <snprintf@plt>:
 4ec:	add	ip, pc, #0, 12
 4f0:	add	ip, ip, #16, 20	; 0x10000
 4f4:	ldr	pc, [ip, #2860]!	; 0xb2c

000004f8 <__assert_fail@plt>:
 4f8:	add	ip, pc, #0, 12
 4fc:	add	ip, ip, #16, 20	; 0x10000
 500:	ldr	pc, [ip, #2852]!	; 0xb24

00000504 <construct_umodebuf@plt>:
 504:	add	ip, pc, #0, 12
 508:	add	ip, ip, #16, 20	; 0x10000
 50c:	ldr	pc, [ip, #2844]!	; 0xb1c

Disassembly of section .text:

00000510 <call_weak_fn>:
 510:	ldr	r3, [pc, #20]	; 52c <call_weak_fn+0x1c>
 514:	ldr	r2, [pc, #20]	; 530 <call_weak_fn+0x20>
 518:	add	r3, pc, r3
 51c:	ldr	r2, [r3, r2]
 520:	cmp	r2, #0
 524:	bxeq	lr
 528:	b	4d4 <__gmon_start__@plt>
 52c:	.word	0x00010ae0
 530:	.word	0x00000038

00000534 <deregister_tm_clones>:
 534:	ldr	r3, [pc, #52]	; 570 <deregister_tm_clones+0x3c>
 538:	ldr	r0, [pc, #52]	; 574 <deregister_tm_clones+0x40>
 53c:	add	r3, pc, r3
 540:	add	r0, pc, r0
 544:	add	r3, r3, #3
 548:	sub	r3, r3, r0
 54c:	cmp	r3, #6
 550:	ldr	r3, [pc, #32]	; 578 <deregister_tm_clones+0x44>
 554:	add	r3, pc, r3
 558:	bxls	lr
 55c:	ldr	r2, [pc, #24]	; 57c <deregister_tm_clones+0x48>
 560:	ldr	r3, [r3, r2]
 564:	cmp	r3, #0
 568:	bxeq	lr
 56c:	bx	r3
 570:	.word	0x00010b50
 574:	.word	0x00010b4c
 578:	.word	0x00010aa4
 57c:	.word	0x00000030

00000580 <register_tm_clones>:
 580:	ldr	r1, [pc, #56]	; 5c0 <register_tm_clones+0x40>
 584:	ldr	r0, [pc, #56]	; 5c4 <register_tm_clones+0x44>
 588:	add	r1, pc, r1
 58c:	add	r0, pc, r0
 590:	sub	r1, r1, r0
 594:	ldr	r3, [pc, #44]	; 5c8 <register_tm_clones+0x48>
 598:	asr	r1, r1, #2
 59c:	add	r3, pc, r3
 5a0:	add	r1, r1, r1, lsr #31
 5a4:	asrs	r1, r1, #1
 5a8:	bxeq	lr
 5ac:	ldr	r2, [pc, #24]	; 5cc <register_tm_clones+0x4c>
 5b0:	ldr	r3, [r3, r2]
 5b4:	cmp	r3, #0
 5b8:	bxeq	lr
 5bc:	bx	r3
 5c0:	.word	0x00010b04
 5c4:	.word	0x00010b00
 5c8:	.word	0x00010a5c
 5cc:	.word	0x00000040

000005d0 <__do_global_dtors_aux>:
 5d0:	ldr	r3, [pc, #76]	; 624 <__do_global_dtors_aux+0x54>
 5d4:	ldr	r2, [pc, #76]	; 628 <__do_global_dtors_aux+0x58>
 5d8:	add	r3, pc, r3
 5dc:	add	r2, pc, r2
 5e0:	ldrb	r3, [r3]
 5e4:	cmp	r3, #0
 5e8:	bxne	lr
 5ec:	ldr	r3, [pc, #56]	; 62c <__do_global_dtors_aux+0x5c>
 5f0:	push	{r4, lr}
 5f4:	ldr	r3, [r2, r3]
 5f8:	cmp	r3, #0
 5fc:	beq	60c <__do_global_dtors_aux+0x3c>
 600:	ldr	r3, [pc, #40]	; 630 <__do_global_dtors_aux+0x60>
 604:	ldr	r0, [pc, r3]
 608:	bl	4b0 <__cxa_finalize@plt>
 60c:	bl	534 <deregister_tm_clones>
 610:	ldr	r3, [pc, #28]	; 634 <__do_global_dtors_aux+0x64>
 614:	mov	r2, #1
 618:	add	r3, pc, r3
 61c:	strb	r2, [r3]
 620:	pop	{r4, pc}
 624:	.word	0x00010ab4
 628:	.word	0x00010a1c
 62c:	.word	0x0000002c
 630:	.word	0x00010a38
 634:	.word	0x00010a74

00000638 <frame_dummy>:
 638:	ldr	r0, [pc, #56]	; 678 <frame_dummy+0x40>
 63c:	ldr	r3, [pc, #56]	; 67c <frame_dummy+0x44>
 640:	add	r0, pc, r0
 644:	ldr	r2, [r0]
 648:	add	r3, pc, r3
 64c:	cmp	r2, #0
 650:	bne	658 <frame_dummy+0x20>
 654:	b	580 <register_tm_clones>
 658:	ldr	r2, [pc, #32]	; 680 <frame_dummy+0x48>
 65c:	ldr	r3, [r3, r2]
 660:	cmp	r3, #0
 664:	beq	654 <frame_dummy+0x1c>
 668:	push	{r4, lr}
 66c:	blx	r3
 670:	pop	{r4, lr}
 674:	b	580 <register_tm_clones>
 678:	.word	0x000108b4
 67c:	.word	0x000109b0
 680:	.word	0x0000003c

00000684 <allow_message>:
 684:	ldr	ip, [pc, #300]	; 7b8 <allow_message+0x134>
 688:	add	ip, pc, ip
 68c:	ldrd	r2, [r1, #64]	; 0x40
 690:	and	r2, r2, #8192	; 0x2000
 694:	mov	r3, #0
 698:	orrs	r3, r2, r3
 69c:	beq	784 <allow_message+0x100>
 6a0:	ldrh	r3, [r1, #80]	; 0x50
 6a4:	cmp	r3, #64	; 0x40
 6a8:	movne	r3, #1
 6ac:	bne	788 <allow_message+0x104>
 6b0:	ldr	r3, [pc, #260]	; 7bc <allow_message+0x138>
 6b4:	ldr	r3, [ip, r3]
 6b8:	ldr	r3, [r3, #328]	; 0x148
 6bc:	ldr	r2, [r1, #56]	; 0x38
 6c0:	bics	r3, r3, r2
 6c4:	movne	r3, #1
 6c8:	bne	788 <allow_message+0x104>
 6cc:	ldrh	r3, [r0, #80]	; 0x50
 6d0:	cmp	r3, #32
 6d4:	beq	790 <allow_message+0x10c>
 6d8:	ldr	r3, [r0, #56]	; 0x38
 6dc:	lsr	r3, r3, #12
 6e0:	and	r3, r3, #1
 6e4:	cmp	r1, r0
 6e8:	orreq	r3, r3, #1
 6ec:	cmp	r3, #0
 6f0:	bne	788 <allow_message+0x104>
 6f4:	push	{r4, lr}
 6f8:	ldr	r3, [r1, #432]	; 0x1b0
 6fc:	cmn	r3, #316	; 0x13c
 700:	beq	744 <allow_message+0xc0>
 704:	cmp	r0, #0
 708:	beq	764 <allow_message+0xe0>
 70c:	ldr	r3, [r3, #316]	; 0x13c
 710:	cmp	r3, #0
 714:	beq	7a0 <allow_message+0x11c>
 718:	ldr	r2, [r3]
 71c:	cmp	r0, r2
 720:	beq	798 <allow_message+0x114>
 724:	ldr	r3, [r3, #8]
 728:	cmp	r3, #0
 72c:	beq	7a0 <allow_message+0x11c>
 730:	ldr	r2, [r3]
 734:	cmp	r0, r2
 738:	bne	724 <allow_message+0xa0>
 73c:	mov	r3, #1
 740:	b	7b0 <allow_message+0x12c>
 744:	ldr	r3, [pc, #116]	; 7c0 <allow_message+0x13c>
 748:	add	r3, pc, r3
 74c:	ldr	r2, [pc, #112]	; 7c4 <allow_message+0x140>
 750:	ldr	r1, [pc, #112]	; 7c8 <allow_message+0x144>
 754:	add	r1, pc, r1
 758:	ldr	r0, [pc, #108]	; 7cc <allow_message+0x148>
 75c:	add	r0, pc, r0
 760:	bl	4f8 <__assert_fail@plt>
 764:	ldr	r3, [pc, #100]	; 7d0 <allow_message+0x14c>
 768:	add	r3, pc, r3
 76c:	ldr	r2, [pc, #96]	; 7d4 <allow_message+0x150>
 770:	ldr	r1, [pc, #96]	; 7d8 <allow_message+0x154>
 774:	add	r1, pc, r1
 778:	ldr	r0, [pc, #92]	; 7dc <allow_message+0x158>
 77c:	add	r0, pc, r0
 780:	bl	4f8 <__assert_fail@plt>
 784:	mov	r3, #1
 788:	mov	r0, r3
 78c:	bx	lr
 790:	mov	r3, #1
 794:	b	788 <allow_message+0x104>
 798:	mov	r3, #1
 79c:	b	7b0 <allow_message+0x12c>
 7a0:	ldr	r3, [r0, #24]
 7a4:	ldrb	r3, [r3, #40]	; 0x28
 7a8:	adds	r3, r3, #0
 7ac:	movne	r3, #1
 7b0:	mov	r0, r3
 7b4:	pop	{r4, pc}
 7b8:	.word	0x00010970
 7bc:	.word	0x00000034
 7c0:	.word	0x000001e8
 7c4:	.word	0x00000136
 7c8:	.word	0x00000234
 7cc:	.word	0x00000248
 7d0:	.word	0x000001c8
 7d4:	.word	0x00000137
 7d8:	.word	0x00000214
 7dc:	.word	0x00000238

000007e0 <h_hdl_privmsg_user>:
 7e0:	ldr	r3, [r0, #16]
 7e4:	cmp	r3, #0
 7e8:	bxne	lr
 7ec:	push	{r4, r5, r6, r7, r8, lr}
 7f0:	mov	r4, r0
 7f4:	ldr	r5, [r0, #4]
 7f8:	ldr	r6, [r0, #8]
 7fc:	mov	r1, r6
 800:	mov	r0, r5
 804:	bl	684 <allow_message>
 808:	cmp	r0, #0
 80c:	popne	{r4, r5, r6, r7, r8, pc}
 810:	ldr	r3, [r4]
 814:	cmp	r3, #0
 818:	popeq	{r4, r5, r6, r7, r8, pc}
 81c:	ldr	r7, [pc, #28]	; 840 <h_hdl_privmsg_user+0x60>
 820:	add	r3, r6, #88	; 0x58
 824:	ldr	r2, [pc, #24]	; 844 <h_hdl_privmsg_user+0x64>
 828:	add	r2, pc, r2
 82c:	mov	r1, r7
 830:	mov	r0, r5
 834:	bl	4e0 <sendto_one_numeric@plt>
 838:	str	r7, [r4, #16]
 83c:	pop	{r4, r5, r6, r7, r8, pc}
 840:	.word	0x000001e6
 844:	.word	0x0000019c

00000848 <h_hdl_invite>:
 848:	ldr	r3, [r0, #16]
 84c:	cmp	r3, #0
 850:	bxne	lr
 854:	push	{r4, r5, r6, lr}
 858:	mov	r4, r0
 85c:	ldr	r5, [r0, #12]
 860:	mov	r1, r5
 864:	ldr	r0, [r0]
 868:	bl	684 <allow_message>
 86c:	cmp	r0, #0
 870:	popne	{r4, r5, r6, pc}
 874:	ldr	r0, [pc, #40]	; 8a4 <h_hdl_invite+0x5c>
 878:	add	r0, pc, r0
 87c:	add	r3, r5, #88	; 0x58
 880:	ldr	r2, [pc, #32]	; 8a8 <h_hdl_invite+0x60>
 884:	add	r2, pc, r2
 888:	mov	r1, #512	; 0x200
 88c:	mov	r5, r0
 890:	bl	4ec <snprintf@plt>
 894:	ldr	r3, [pc, #16]	; 8ac <h_hdl_invite+0x64>
 898:	str	r3, [r4, #16]
 89c:	str	r5, [r4, #28]
 8a0:	pop	{r4, r5, r6, pc}
 8a4:	.word	0x00010818
 8a8:	.word	0x00000140
 8ac:	.word	0x000001e6

000008b0 <um_regonlymsg_moddeinit>:
 8b0:	push	{r4, lr}
 8b4:	ldr	r3, [pc, #24]	; 8d4 <um_regonlymsg_moddeinit+0x24>
 8b8:	add	r3, pc, r3
 8bc:	ldr	r2, [pc, #20]	; 8d8 <um_regonlymsg_moddeinit+0x28>
 8c0:	ldr	r3, [r3, r2]
 8c4:	mov	r2, #0
 8c8:	str	r2, [r3, #328]	; 0x148
 8cc:	bl	504 <construct_umodebuf@plt>
 8d0:	pop	{r4, pc}
 8d4:	.word	0x00010740
 8d8:	.word	0x00000034

000008dc <um_regonlymsg_modinit>:
 8dc:	push	{r4, lr}
 8e0:	ldr	r4, [pc, #60]	; 924 <um_regonlymsg_modinit+0x48>
 8e4:	add	r4, pc, r4
 8e8:	bl	4c8 <find_umode_slot@plt>
 8ec:	ldr	r3, [pc, #52]	; 928 <um_regonlymsg_modinit+0x4c>
 8f0:	ldr	r4, [r4, r3]
 8f4:	str	r0, [r4, #328]	; 0x148
 8f8:	bl	504 <construct_umodebuf@plt>
 8fc:	ldr	r3, [r4, #328]	; 0x148
 900:	cmp	r3, #0
 904:	beq	910 <um_regonlymsg_modinit+0x34>
 908:	mov	r0, #0
 90c:	pop	{r4, pc}
 910:	ldr	r0, [pc, #20]	; 92c <um_regonlymsg_modinit+0x50>
 914:	add	r0, pc, r0
 918:	bl	4bc <ierror@plt>
 91c:	mvn	r0, #0
 920:	pop	{r4, pc}
 924:	.word	0x00010714
 928:	.word	0x00000034
 92c:	.word	0x000000e8

Disassembly of section .fini:

00000930 <_fini>:
 930:	push	{r3, lr}
 934:	pop	{r3, pc}
