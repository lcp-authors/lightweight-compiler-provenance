
../repos/tbeu-matio-3dd266d/src/.libs/libmatio.so.9.1.0:     file format elf32-littlearm


Disassembly of section .init:

00001778 <_init>:
    1778:	push	{r3, lr}
    177c:	bl	1a60 <call_weak_fn>
    1780:	pop	{r3, pc}

Disassembly of section .plt:

00001784 <.plt>:
    1784:	push	{lr}		; (str lr, [sp, #-4]!)
    1788:	ldr	lr, [pc, #4]	; 1794 <.plt+0x10>
    178c:	add	lr, pc, lr
    1790:	ldr	pc, [lr, #8]!
    1794:	.word	0x0007b86c

00001798 <calloc@plt>:
    1798:	add	ip, pc, #0, 12
    179c:	add	ip, ip, #503808	; 0x7b000
    17a0:	ldr	pc, [ip, #2156]!	; 0x86c

000017a4 <Mat_VarReadNext@plt>:
    17a4:	add	ip, pc, #0, 12
    17a8:	add	ip, ip, #503808	; 0x7b000
    17ac:	ldr	pc, [ip, #2148]!	; 0x864

000017b0 <strcmp@plt>:
    17b0:	add	ip, pc, #0, 12
    17b4:	add	ip, ip, #503808	; 0x7b000
    17b8:	ldr	pc, [ip, #2140]!	; 0x85c

000017bc <__cxa_finalize@plt>:
    17bc:	add	ip, pc, #0, 12
    17c0:	add	ip, ip, #503808	; 0x7b000
    17c4:	ldr	pc, [ip, #2132]!	; 0x854

000017c8 <Mat_Open@plt>:
    17c8:	add	ip, pc, #0, 12
    17cc:	add	ip, ip, #503808	; 0x7b000
    17d0:	ldr	pc, [ip, #2124]!	; 0x84c

000017d4 <printf@plt>:
    17d4:	add	ip, pc, #0, 12
    17d8:	add	ip, ip, #503808	; 0x7b000
    17dc:	ldr	pc, [ip, #2116]!	; 0x844

000017e0 <fopen@plt>:
    17e0:	add	ip, pc, #0, 12
    17e4:	add	ip, ip, #503808	; 0x7b000
    17e8:	ldr	pc, [ip, #2108]!	; 0x83c

000017ec <inflate@plt>:
    17ec:	add	ip, pc, #0, 12
    17f0:	add	ip, ip, #503808	; 0x7b000
    17f4:	ldr	pc, [ip, #2100]!	; 0x834

000017f8 <fflush@plt>:
    17f8:	add	ip, pc, #0, 12
    17fc:	add	ip, ip, #503808	; 0x7b000
    1800:	ldr	pc, [ip, #2092]!	; 0x82c

00001804 <free@plt>:
    1804:	add	ip, pc, #0, 12
    1808:	add	ip, ip, #503808	; 0x7b000
    180c:	ldr	pc, [ip, #2084]!	; 0x824

00001810 <Mat_Warning@plt>:
    1810:	add	ip, pc, #0, 12
    1814:	add	ip, ip, #503808	; 0x7b000
    1818:	ldr	pc, [ip, #2076]!	; 0x81c

0000181c <memcpy@plt>:
    181c:	add	ip, pc, #0, 12
    1820:	add	ip, ip, #503808	; 0x7b000
    1824:	ldr	pc, [ip, #2068]!	; 0x814

00001828 <Mat_VarWrite@plt>:
    1828:	add	ip, pc, #0, 12
    182c:	add	ip, ip, #503808	; 0x7b000
    1830:	ldr	pc, [ip, #2060]!	; 0x80c

00001834 <time@plt>:
    1834:	add	ip, pc, #0, 12
    1838:	add	ip, ip, #503808	; 0x7b000
    183c:	ldr	pc, [ip, #2052]!	; 0x804

00001840 <ftell@plt>:
    1840:	add	ip, pc, #0, 12
    1844:	add	ip, ip, #503808	; 0x7b000
    1848:	ldr	pc, [ip, #2044]!	; 0x7fc

0000184c <fwrite_unlocked@plt>:
    184c:	add	ip, pc, #0, 12
    1850:	add	ip, ip, #503808	; 0x7b000
    1854:	ldr	pc, [ip, #2036]!	; 0x7f4

00001858 <ctime@plt>:
    1858:	add	ip, pc, #0, 12
    185c:	add	ip, ip, #503808	; 0x7b000
    1860:	ldr	pc, [ip, #2028]!	; 0x7ec

00001864 <strdup@plt>:
    1864:	add	ip, pc, #0, 12
    1868:	add	ip, ip, #503808	; 0x7b000
    186c:	ldr	pc, [ip, #2020]!	; 0x7e4

00001870 <realloc@plt>:
    1870:	add	ip, pc, #0, 12
    1874:	add	ip, ip, #503808	; 0x7b000
    1878:	ldr	pc, [ip, #2012]!	; 0x7dc

0000187c <Mat_VarReadInfo@plt>:
    187c:	add	ip, pc, #0, 12
    1880:	add	ip, ip, #503808	; 0x7b000
    1884:	ldr	pc, [ip, #2004]!	; 0x7d4

00001888 <zError@plt>:
    1888:	add	ip, pc, #0, 12
    188c:	add	ip, ip, #503808	; 0x7b000
    1890:	ldr	pc, [ip, #1996]!	; 0x7cc

00001894 <deflate@plt>:
    1894:	add	ip, pc, #0, 12
    1898:	add	ip, ip, #503808	; 0x7b000
    189c:	ldr	pc, [ip, #1988]!	; 0x7c4

000018a0 <Mat_VarCalloc@plt>:
    18a0:	add	ip, pc, #0, 12
    18a4:	add	ip, ip, #503808	; 0x7b000
    18a8:	ldr	pc, [ip, #1980]!	; 0x7bc

000018ac <fwrite@plt>:
    18ac:	add	ip, pc, #0, 12
    18b0:	add	ip, ip, #503808	; 0x7b000
    18b4:	ldr	pc, [ip, #1972]!	; 0x7b4

000018b8 <fread@plt>:
    18b8:	add	ip, pc, #0, 12
    18bc:	add	ip, ip, #503808	; 0x7b000
    18c0:	ldr	pc, [ip, #1964]!	; 0x7ac

000018c4 <puts@plt>:
    18c4:	add	ip, pc, #0, 12
    18c8:	add	ip, ip, #503808	; 0x7b000
    18cc:	ldr	pc, [ip, #1956]!	; 0x7a4

000018d0 <malloc@plt>:
    18d0:	add	ip, pc, #0, 12
    18d4:	add	ip, ip, #503808	; 0x7b000
    18d8:	ldr	pc, [ip, #1948]!	; 0x79c

000018dc <deflateInit_@plt>:
    18dc:	add	ip, pc, #0, 12
    18e0:	add	ip, ip, #503808	; 0x7b000
    18e4:	ldr	pc, [ip, #1940]!	; 0x794

000018e8 <mktemp@plt>:
    18e8:	add	ip, pc, #0, 12
    18ec:	add	ip, ip, #503808	; 0x7b000
    18f0:	ldr	pc, [ip, #1932]!	; 0x78c

000018f4 <__gmon_start__@plt>:
    18f4:	add	ip, pc, #0, 12
    18f8:	add	ip, ip, #503808	; 0x7b000
    18fc:	ldr	pc, [ip, #1924]!	; 0x784

00001900 <exit@plt>:
    1900:	add	ip, pc, #0, 12
    1904:	add	ip, ip, #503808	; 0x7b000
    1908:	ldr	pc, [ip, #1916]!	; 0x77c

0000190c <feof@plt>:
    190c:	add	ip, pc, #0, 12
    1910:	add	ip, ip, #503808	; 0x7b000
    1914:	ldr	pc, [ip, #1908]!	; 0x774

00001918 <Mat_VarFree@plt>:
    1918:	add	ip, pc, #0, 12
    191c:	add	ip, ip, #503808	; 0x7b000
    1920:	ldr	pc, [ip, #1900]!	; 0x76c

00001924 <Mat_SizeOf@plt>:
    1924:	add	ip, pc, #0, 12
    1928:	add	ip, ip, #503808	; 0x7b000
    192c:	ldr	pc, [ip, #1892]!	; 0x764

00001930 <Mat_GetDir@plt>:
    1930:	add	ip, pc, #0, 12
    1934:	add	ip, ip, #503808	; 0x7b000
    1938:	ldr	pc, [ip, #1884]!	; 0x75c

0000193c <inflateEnd@plt>:
    193c:	add	ip, pc, #0, 12
    1940:	add	ip, ip, #503808	; 0x7b000
    1944:	ldr	pc, [ip, #1876]!	; 0x754

00001948 <inflateCopy@plt>:
    1948:	add	ip, pc, #0, 12
    194c:	add	ip, ip, #503808	; 0x7b000
    1950:	ldr	pc, [ip, #1868]!	; 0x74c

00001954 <strlen@plt>:
    1954:	add	ip, pc, #0, 12
    1958:	add	ip, ip, #503808	; 0x7b000
    195c:	ldr	pc, [ip, #1860]!	; 0x744

00001960 <fprintf@plt>:
    1960:	add	ip, pc, #0, 12
    1964:	add	ip, ip, #503808	; 0x7b000
    1968:	ldr	pc, [ip, #1852]!	; 0x73c

0000196c <Mat_VarPrint@plt>:
    196c:	add	ip, pc, #0, 12
    1970:	add	ip, ip, #503808	; 0x7b000
    1974:	ldr	pc, [ip, #1844]!	; 0x734

00001978 <snprintf@plt>:
    1978:	add	ip, pc, #0, 12
    197c:	add	ip, ip, #503808	; 0x7b000
    1980:	ldr	pc, [ip, #1836]!	; 0x72c

00001984 <Mat_Rewind@plt>:
    1984:	add	ip, pc, #0, 12
    1988:	add	ip, ip, #503808	; 0x7b000
    198c:	ldr	pc, [ip, #1828]!	; 0x724

00001990 <memset@plt>:
    1990:	add	ip, pc, #0, 12
    1994:	add	ip, ip, #503808	; 0x7b000
    1998:	ldr	pc, [ip, #1820]!	; 0x71c

0000199c <putchar@plt>:
    199c:	add	ip, pc, #0, 12
    19a0:	add	ip, ip, #503808	; 0x7b000
    19a4:	ldr	pc, [ip, #1812]!	; 0x714

000019a8 <Mat_Close@plt>:
    19a8:	add	ip, pc, #0, 12
    19ac:	add	ip, ip, #503808	; 0x7b000
    19b0:	ldr	pc, [ip, #1804]!	; 0x70c

000019b4 <Mat_Critical@plt>:
    19b4:	add	ip, pc, #0, 12
    19b8:	add	ip, ip, #503808	; 0x7b000
    19bc:	ldr	pc, [ip, #1796]!	; 0x704

000019c0 <deflateEnd@plt>:
    19c0:	add	ip, pc, #0, 12
    19c4:	add	ip, ip, #503808	; 0x7b000
    19c8:	ldr	pc, [ip, #1788]!	; 0x6fc

000019cc <fclose@plt>:
    19cc:	add	ip, pc, #0, 12
    19d0:	add	ip, ip, #503808	; 0x7b000
    19d4:	ldr	pc, [ip, #1780]!	; 0x6f4

000019d8 <inflateInit_@plt>:
    19d8:	add	ip, pc, #0, 12
    19dc:	add	ip, ip, #503808	; 0x7b000
    19e0:	ldr	pc, [ip, #1772]!	; 0x6ec

000019e4 <fputc@plt>:
    19e4:	add	ip, pc, #0, 12
    19e8:	add	ip, ip, #503808	; 0x7b000
    19ec:	ldr	pc, [ip, #1764]!	; 0x6e4

000019f0 <remove@plt>:
    19f0:	add	ip, pc, #0, 12
    19f4:	add	ip, ip, #503808	; 0x7b000
    19f8:	ldr	pc, [ip, #1756]!	; 0x6dc

000019fc <vsnprintf@plt>:
    19fc:	add	ip, pc, #0, 12
    1a00:	add	ip, ip, #503808	; 0x7b000
    1a04:	ldr	pc, [ip, #1748]!	; 0x6d4

00001a08 <Mat_SizeOfClass@plt>:
    1a08:	add	ip, pc, #0, 12
    1a0c:	add	ip, ip, #503808	; 0x7b000
    1a10:	ldr	pc, [ip, #1740]!	; 0x6cc

00001a14 <fread_unlocked@plt>:
    1a14:	add	ip, pc, #0, 12
    1a18:	add	ip, ip, #503808	; 0x7b000
    1a1c:	ldr	pc, [ip, #1732]!	; 0x6c4

00001a20 <Mat_VarGetSize@plt>:
    1a20:	add	ip, pc, #0, 12
    1a24:	add	ip, ip, #503808	; 0x7b000
    1a28:	ldr	pc, [ip, #1724]!	; 0x6bc

00001a2c <fseek@plt>:
    1a2c:	add	ip, pc, #0, 12
    1a30:	add	ip, ip, #503808	; 0x7b000
    1a34:	ldr	pc, [ip, #1716]!	; 0x6b4

00001a38 <abort@plt>:
    1a38:	add	ip, pc, #0, 12
    1a3c:	add	ip, ip, #503808	; 0x7b000
    1a40:	ldr	pc, [ip, #1708]!	; 0x6ac

00001a44 <Mat_VarDuplicate@plt>:
    1a44:	add	ip, pc, #0, 12
    1a48:	add	ip, ip, #503808	; 0x7b000
    1a4c:	ldr	pc, [ip, #1700]!	; 0x6a4

00001a50 <Mat_VarReadNextInfo@plt>:
    1a50:	add	ip, pc, #0, 12
    1a54:	add	ip, ip, #503808	; 0x7b000
    1a58:	ldr	pc, [ip, #1692]!	; 0x69c

Disassembly of section .text:

00001a60 <call_weak_fn>:
    1a60:	ldr	r3, [pc, #20]	; 1a7c <call_weak_fn+0x1c>
    1a64:	ldr	r2, [pc, #20]	; 1a80 <call_weak_fn+0x20>
    1a68:	add	r3, pc, r3
    1a6c:	ldr	r2, [r3, r2]
    1a70:	cmp	r2, #0
    1a74:	bxeq	lr
    1a78:	b	18f4 <__gmon_start__@plt>
    1a7c:	.word	0x0007b590
    1a80:	.word	0x00000104

00001a84 <deregister_tm_clones>:
    1a84:	ldr	r0, [pc, #44]	; 1ab8 <deregister_tm_clones+0x34>
    1a88:	ldr	r3, [pc, #44]	; 1abc <deregister_tm_clones+0x38>
    1a8c:	add	r0, pc, r0
    1a90:	add	r3, pc, r3
    1a94:	cmp	r3, r0
    1a98:	ldr	r3, [pc, #32]	; 1ac0 <deregister_tm_clones+0x3c>
    1a9c:	add	r3, pc, r3
    1aa0:	bxeq	lr
    1aa4:	ldr	r2, [pc, #24]	; 1ac4 <deregister_tm_clones+0x40>
    1aa8:	ldr	r3, [r3, r2]
    1aac:	cmp	r3, #0
    1ab0:	bxeq	lr
    1ab4:	bx	r3
    1ab8:	.word	0x0007b680
    1abc:	.word	0x0007b67c
    1ac0:	.word	0x0007b55c
    1ac4:	.word	0x000000fc

00001ac8 <register_tm_clones>:
    1ac8:	ldr	r0, [pc, #56]	; 1b08 <register_tm_clones+0x40>
    1acc:	ldr	r3, [pc, #56]	; 1b0c <register_tm_clones+0x44>
    1ad0:	add	r0, pc, r0
    1ad4:	add	r3, pc, r3
    1ad8:	sub	r1, r3, r0
    1adc:	ldr	r3, [pc, #44]	; 1b10 <register_tm_clones+0x48>
    1ae0:	asr	r1, r1, #2
    1ae4:	add	r3, pc, r3
    1ae8:	add	r1, r1, r1, lsr #31
    1aec:	asrs	r1, r1, #1
    1af0:	bxeq	lr
    1af4:	ldr	r2, [pc, #24]	; 1b14 <register_tm_clones+0x4c>
    1af8:	ldr	r3, [r3, r2]
    1afc:	cmp	r3, #0
    1b00:	bxeq	lr
    1b04:	bx	r3
    1b08:	.word	0x0007b63c
    1b0c:	.word	0x0007b638
    1b10:	.word	0x0007b514
    1b14:	.word	0x0000010c

00001b18 <__do_global_dtors_aux>:
    1b18:	ldr	r3, [pc, #76]	; 1b6c <__do_global_dtors_aux+0x54>
    1b1c:	ldr	r2, [pc, #76]	; 1b70 <__do_global_dtors_aux+0x58>
    1b20:	add	r3, pc, r3
    1b24:	add	r2, pc, r2
    1b28:	ldrb	r3, [r3]
    1b2c:	cmp	r3, #0
    1b30:	bxne	lr
    1b34:	ldr	r3, [pc, #56]	; 1b74 <__do_global_dtors_aux+0x5c>
    1b38:	push	{r4, lr}
    1b3c:	ldr	r3, [r2, r3]
    1b40:	cmp	r3, #0
    1b44:	beq	1b54 <__do_global_dtors_aux+0x3c>
    1b48:	ldr	r3, [pc, #40]	; 1b78 <__do_global_dtors_aux+0x60>
    1b4c:	ldr	r0, [pc, r3]
    1b50:	bl	17bc <__cxa_finalize@plt>
    1b54:	bl	1a84 <deregister_tm_clones>
    1b58:	ldr	r3, [pc, #28]	; 1b7c <__do_global_dtors_aux+0x64>
    1b5c:	mov	r2, #1
    1b60:	add	r3, pc, r3
    1b64:	strb	r2, [r3]
    1b68:	pop	{r4, pc}
    1b6c:	.word	0x0007b5ec
    1b70:	.word	0x0007b4d4
    1b74:	.word	0x000000f8
    1b78:	.word	0x0007b5bc
    1b7c:	.word	0x0007b5ac

00001b80 <frame_dummy>:
    1b80:	b	1ac8 <register_tm_clones>

00001b84 <Mat_int64Swap>:
    1b84:	push	{r4, r5, fp, lr}
    1b88:	add	fp, sp, #8
    1b8c:	ldrd	r2, [r0]
    1b90:	mov	ip, #65280	; 0xff00
    1b94:	lsr	r1, r3, #24
    1b98:	and	lr, ip, r3, lsr #8
    1b9c:	orr	r1, r1, r3, lsl #24
    1ba0:	and	r3, r3, #65280	; 0xff00
    1ba4:	orr	r1, r1, r3, lsl #8
    1ba8:	lsl	r3, r2, #8
    1bac:	uxtb16	r3, r3
    1bb0:	orr	r4, r1, lr
    1bb4:	and	r1, ip, r2, lsr #8
    1bb8:	orr	r3, r3, r2, lsl #24
    1bbc:	orr	r1, r3, r1
    1bc0:	orr	r5, r1, r2, lsr #24
    1bc4:	strd	r4, [r0]
    1bc8:	mov	r0, r4
    1bcc:	mov	r1, r5
    1bd0:	pop	{r4, r5, fp, pc}

00001bd4 <Mat_uint64Swap>:
    1bd4:	push	{r4, r5, fp, lr}
    1bd8:	add	fp, sp, #8
    1bdc:	ldrd	r2, [r0]
    1be0:	rev	r5, r2
    1be4:	rev	r4, r3
    1be8:	strd	r4, [r0]
    1bec:	mov	r0, r4
    1bf0:	mov	r1, r5
    1bf4:	pop	{r4, r5, fp, pc}

00001bf8 <Mat_int32Swap>:
    1bf8:	ldr	r1, [r0]
    1bfc:	rev	r1, r1
    1c00:	str	r1, [r0]
    1c04:	mov	r0, r1
    1c08:	bx	lr

00001c0c <Mat_uint32Swap>:
    1c0c:	ldr	r1, [r0]
    1c10:	rev	r1, r1
    1c14:	str	r1, [r0]
    1c18:	mov	r0, r1
    1c1c:	bx	lr

00001c20 <Mat_int16Swap>:
    1c20:	ldrh	r1, [r0]
    1c24:	rev16	r2, r1
    1c28:	strh	r2, [r0]
    1c2c:	revsh	r0, r1
    1c30:	bx	lr

00001c34 <Mat_uint16Swap>:
    1c34:	ldrh	r1, [r0]
    1c38:	rev16	r2, r1
    1c3c:	strh	r2, [r0]
    1c40:	rev	r0, r1
    1c44:	lsr	r0, r0, #16
    1c48:	bx	lr

00001c4c <Mat_floatSwap>:
    1c4c:	ldr	r1, [r0]
    1c50:	uxtb	r2, r1
    1c54:	and	r3, r1, #-16777216	; 0xff000000
    1c58:	eor	r2, r2, r1, lsr #24
    1c5c:	eor	r3, r3, r2, lsl #24
    1c60:	eor	ip, r2, r3, lsr #24
    1c64:	and	r2, r1, #16711680	; 0xff0000
    1c68:	eor	r1, r1, r1, lsr #8
    1c6c:	and	r1, r1, #65280	; 0xff00
    1c70:	eor	r2, r2, r1, lsl #8
    1c74:	orr	r3, r2, r3
    1c78:	eor	r1, r1, r2, lsr #8
    1c7c:	orr	r3, r3, ip
    1c80:	orr	r1, r3, r1
    1c84:	vmov	s0, r1
    1c88:	str	r1, [r0]
    1c8c:	bx	lr

00001c90 <Mat_doubleSwap>:
    1c90:	push	{r4, r5, r6, r7, fp, lr}
    1c94:	add	fp, sp, #16
    1c98:	ldrd	r2, [r0]
    1c9c:	uxtb	r1, r2
    1ca0:	lsr	r5, r2, #24
    1ca4:	eor	r6, r3, r3, lsr #24
    1ca8:	orr	r5, r5, r3, lsl #8
    1cac:	eor	ip, r1, r3, lsr #24
    1cb0:	and	r1, r3, #-16777216	; 0xff000000
    1cb4:	lsl	r6, r6, #24
    1cb8:	eor	r5, r5, r2
    1cbc:	eor	lr, r1, ip, lsl #24
    1cc0:	eor	r1, r2, r3, lsr #8
    1cc4:	orr	r6, r6, r5, lsr #8
    1cc8:	eor	ip, ip, lr, lsr #24
    1ccc:	and	r1, r1, #65280	; 0xff00
    1cd0:	eor	r6, r6, r3
    1cd4:	and	r7, r6, #65280	; 0xff00
    1cd8:	orr	r1, ip, r1
    1cdc:	orr	r7, r7, lr
    1ce0:	eor	r4, r3, r1, lsl #8
    1ce4:	eor	r1, r1, r4, lsr #8
    1ce8:	and	r4, r4, #16711680	; 0xff0000
    1cec:	orr	r7, r7, r4
    1cf0:	lsr	r4, r2, #8
    1cf4:	orr	r4, r4, r3, lsl #24
    1cf8:	and	r1, r1, #65280	; 0xff00
    1cfc:	orr	r1, ip, r1
    1d00:	eor	r2, r4, r2
    1d04:	eor	r4, r3, r3, lsr #8
    1d08:	lsl	r4, r4, #8
    1d0c:	orr	r4, r4, r2, lsr #24
    1d10:	eor	r3, r4, r3
    1d14:	eor	r2, r2, r3, lsl #24
    1d18:	uxtb	r4, r3
    1d1c:	and	r2, r2, #-16777216	; 0xff000000
    1d20:	orr	r7, r4, r7
    1d24:	orr	r1, r2, r1
    1d28:	eor	r2, r5, r6, lsl #8
    1d2c:	and	r2, r2, #16711680	; 0xff0000
    1d30:	orr	r6, r1, r2
    1d34:	vmov	d0, r6, r7
    1d38:	strd	r6, [r0]
    1d3c:	pop	{r4, r5, r6, r7, fp, pc}

00001d40 <strdup_vprintf>:
    1d40:	push	{r4, r5, r6, sl, fp, lr}
    1d44:	add	fp, sp, #16
    1d48:	sub	sp, sp, #8
    1d4c:	mov	r4, r0
    1d50:	mov	r3, r1
    1d54:	str	r1, [sp, #4]
    1d58:	str	r1, [sp]
    1d5c:	mov	r0, #0
    1d60:	mov	r1, #0
    1d64:	mov	r2, r4
    1d68:	bl	19fc <vsnprintf@plt>
    1d6c:	mov	r6, r0
    1d70:	add	r0, r0, #2
    1d74:	bl	18d0 <malloc@plt>
    1d78:	mov	r5, r0
    1d7c:	cmp	r0, #0
    1d80:	beq	1d98 <strdup_vprintf+0x58>
    1d84:	ldr	r3, [sp, #4]
    1d88:	add	r1, r6, #1
    1d8c:	mov	r0, r5
    1d90:	mov	r2, r4
    1d94:	bl	19fc <vsnprintf@plt>
    1d98:	mov	r0, r5
    1d9c:	sub	sp, fp, #16
    1da0:	pop	{r4, r5, r6, sl, fp, pc}

00001da4 <strdup_printf>:
    1da4:	sub	sp, sp, #12
    1da8:	push	{r4, r5, r6, sl, fp, lr}
    1dac:	add	fp, sp, #16
    1db0:	sub	sp, sp, #12
    1db4:	mov	r4, r0
    1db8:	add	r0, fp, #8
    1dbc:	stm	r0, {r1, r2, r3}
    1dc0:	add	r3, fp, #8
    1dc4:	mov	r0, #0
    1dc8:	mov	r1, #0
    1dcc:	mov	r2, r4
    1dd0:	str	r3, [sp]
    1dd4:	str	r3, [sp, #8]
    1dd8:	str	r3, [sp, #4]
    1ddc:	bl	19fc <vsnprintf@plt>
    1de0:	mov	r6, r0
    1de4:	add	r0, r0, #2
    1de8:	bl	18d0 <malloc@plt>
    1dec:	mov	r5, r0
    1df0:	cmp	r0, #0
    1df4:	beq	1e0c <strdup_printf+0x68>
    1df8:	ldr	r3, [sp, #8]
    1dfc:	add	r1, r6, #1
    1e00:	mov	r0, r5
    1e04:	mov	r2, r4
    1e08:	bl	19fc <vsnprintf@plt>
    1e0c:	mov	r0, r5
    1e10:	sub	sp, fp, #16
    1e14:	pop	{r4, r5, r6, sl, fp, lr}
    1e18:	add	sp, sp, #12
    1e1c:	bx	lr

00001e20 <Mat_SetVerbose>:
    1e20:	ldr	r2, [pc, #24]	; 1e40 <Mat_SetVerbose+0x20>
    1e24:	add	r2, pc, r2
    1e28:	str	r1, [r2]
    1e2c:	ldr	r1, [pc, #16]	; 1e44 <Mat_SetVerbose+0x24>
    1e30:	add	r1, pc, r1
    1e34:	str	r0, [r1]
    1e38:	mov	r0, #0
    1e3c:	bx	lr
    1e40:	.word	0x0007b2f0
    1e44:	.word	0x0007b2e0

00001e48 <Mat_SetDebug>:
    1e48:	ldr	r1, [pc, #12]	; 1e5c <Mat_SetDebug+0x14>
    1e4c:	add	r1, pc, r1
    1e50:	str	r0, [r1]
    1e54:	mov	r0, #0
    1e58:	bx	lr
    1e5c:	.word	0x0007b2cc

00001e60 <Mat_Message>:
    1e60:	sub	sp, sp, #12
    1e64:	push	{fp, lr}
    1e68:	mov	fp, sp
    1e6c:	sub	sp, sp, #4
    1e70:	mov	ip, r0
    1e74:	add	r0, fp, #8
    1e78:	stm	r0, {r1, r2, r3}
    1e7c:	ldr	r0, [pc, #64]	; 1ec4 <Mat_Message+0x64>
    1e80:	ldr	r0, [pc, r0]
    1e84:	cmp	r0, #0
    1e88:	bne	1eb0 <Mat_Message+0x50>
    1e8c:	ldr	r0, [pc, #52]	; 1ec8 <Mat_Message+0x68>
    1e90:	ldr	r0, [pc, r0]
    1e94:	cmp	r0, #0
    1e98:	beq	1eb0 <Mat_Message+0x50>
    1e9c:	add	r2, fp, #8
    1ea0:	mov	r0, #8
    1ea4:	mov	r1, ip
    1ea8:	str	r2, [sp]
    1eac:	bl	1ecc <mat_log>
    1eb0:	mov	r0, #0
    1eb4:	mov	sp, fp
    1eb8:	pop	{fp, lr}
    1ebc:	add	sp, sp, #12
    1ec0:	bx	lr
    1ec4:	.word	0x0007b294
    1ec8:	.word	0x0007b28c

00001ecc <mat_log>:
    1ecc:	push	{r4, r5, r6, r7, fp, lr}
    1ed0:	add	fp, sp, #16
    1ed4:	sub	sp, sp, #8
    1ed8:	mov	r4, r0
    1edc:	ldr	r0, [pc, #120]	; 1f5c <mat_log+0x90>
    1ee0:	ldr	r0, [pc, r0]
    1ee4:	cmp	r0, #0
    1ee8:	beq	1f54 <mat_log+0x88>
    1eec:	mov	r5, r1
    1ef0:	mov	r3, r2
    1ef4:	str	r2, [sp, #4]
    1ef8:	str	r2, [sp]
    1efc:	mov	r0, #0
    1f00:	mov	r1, #0
    1f04:	mov	r2, r5
    1f08:	bl	19fc <vsnprintf@plt>
    1f0c:	mov	r7, r0
    1f10:	add	r0, r0, #2
    1f14:	bl	18d0 <malloc@plt>
    1f18:	mov	r6, r0
    1f1c:	cmp	r0, #0
    1f20:	beq	1f38 <mat_log+0x6c>
    1f24:	ldr	r3, [sp, #4]
    1f28:	add	r1, r7, #1
    1f2c:	mov	r0, r6
    1f30:	mov	r2, r5
    1f34:	bl	19fc <vsnprintf@plt>
    1f38:	ldr	r2, [pc, #32]	; 1f60 <mat_log+0x94>
    1f3c:	mov	r0, r4
    1f40:	mov	r1, r6
    1f44:	ldr	r2, [pc, r2]
    1f48:	blx	r2
    1f4c:	mov	r0, r6
    1f50:	bl	1804 <free@plt>
    1f54:	sub	sp, fp, #16
    1f58:	pop	{r4, r5, r6, r7, fp, pc}
    1f5c:	.word	0x0007b23c
    1f60:	.word	0x0007b1d8

00001f64 <Mat_DebugMessage>:
    1f64:	sub	sp, sp, #8
    1f68:	push	{fp, lr}
    1f6c:	mov	fp, sp
    1f70:	sub	sp, sp, #8
    1f74:	str	r2, [fp, #8]
    1f78:	str	r3, [fp, #12]
    1f7c:	ldr	r2, [pc, #56]	; 1fbc <Mat_DebugMessage+0x58>
    1f80:	ldr	r2, [pc, r2]
    1f84:	cmp	r2, #0
    1f88:	bne	1fa8 <Mat_DebugMessage+0x44>
    1f8c:	ldr	r2, [pc, #44]	; 1fc0 <Mat_DebugMessage+0x5c>
    1f90:	ldr	r2, [pc, r2]
    1f94:	cmp	r2, r0
    1f98:	addge	r2, fp, #8
    1f9c:	movge	r0, #16
    1fa0:	strge	r2, [sp, #4]
    1fa4:	blge	1ecc <mat_log>
    1fa8:	mov	r0, #0
    1fac:	mov	sp, fp
    1fb0:	pop	{fp, lr}
    1fb4:	add	sp, sp, #8
    1fb8:	bx	lr
    1fbc:	.word	0x0007b194
    1fc0:	.word	0x0007b188

00001fc4 <Mat_VerbMessage>:
    1fc4:	sub	sp, sp, #8
    1fc8:	push	{fp, lr}
    1fcc:	mov	fp, sp
    1fd0:	sub	sp, sp, #8
    1fd4:	str	r2, [fp, #8]
    1fd8:	str	r3, [fp, #12]
    1fdc:	ldr	r2, [pc, #56]	; 201c <Mat_VerbMessage+0x58>
    1fe0:	ldr	r2, [pc, r2]
    1fe4:	cmp	r2, #0
    1fe8:	bne	2008 <Mat_VerbMessage+0x44>
    1fec:	ldr	r2, [pc, #44]	; 2020 <Mat_VerbMessage+0x5c>
    1ff0:	ldr	r2, [pc, r2]
    1ff4:	cmp	r2, r0
    1ff8:	addge	r2, fp, #8
    1ffc:	movge	r0, #8
    2000:	strge	r2, [sp, #4]
    2004:	blge	1ecc <mat_log>
    2008:	mov	r0, #0
    200c:	mov	sp, fp
    2010:	pop	{fp, lr}
    2014:	add	sp, sp, #8
    2018:	bx	lr
    201c:	.word	0x0007b134
    2020:	.word	0x0007b120

00002024 <Mat_Critical>:
    2024:	sub	sp, sp, #12
    2028:	push	{fp, lr}
    202c:	mov	fp, sp
    2030:	sub	sp, sp, #4
    2034:	mov	ip, r0
    2038:	add	r0, fp, #8
    203c:	stm	r0, {r1, r2, r3}
    2040:	add	r2, fp, #8
    2044:	mov	r0, #2
    2048:	mov	r1, ip
    204c:	str	r2, [sp]
    2050:	bl	1ecc <mat_log>
    2054:	mov	sp, fp
    2058:	pop	{fp, lr}
    205c:	add	sp, sp, #12
    2060:	bx	lr

00002064 <Mat_Error>:
    2064:	sub	sp, sp, #12
    2068:	push	{fp, lr}
    206c:	mov	fp, sp
    2070:	sub	sp, sp, #4
    2074:	mov	ip, r0
    2078:	add	r0, fp, #8
    207c:	stm	r0, {r1, r2, r3}
    2080:	add	r2, fp, #8
    2084:	mov	r0, #1
    2088:	mov	r1, ip
    208c:	str	r2, [sp]
    2090:	bl	1ecc <mat_log>
    2094:	bl	1a38 <abort@plt>

00002098 <Mat_Help>:
    2098:	push	{fp, lr}
    209c:	mov	fp, sp
    20a0:	mov	r1, r0
    20a4:	ldr	r0, [r0]
    20a8:	cmp	r0, #0
    20ac:	beq	20c4 <Mat_Help+0x2c>
    20b0:	add	r4, r1, #4
    20b4:	bl	18c4 <puts@plt>
    20b8:	ldr	r0, [r4], #4
    20bc:	cmp	r0, #0
    20c0:	bne	20b4 <Mat_Help+0x1c>
    20c4:	mov	r0, #0
    20c8:	bl	1900 <exit@plt>

000020cc <Mat_LogClose>:
    20cc:	ldr	r0, [pc, #16]	; 20e4 <Mat_LogClose+0x18>
    20d0:	mov	r1, #0
    20d4:	add	r0, pc, r0
    20d8:	str	r1, [r0]
    20dc:	mov	r0, #1
    20e0:	bx	lr
    20e4:	.word	0x0007b048

000020e8 <Mat_LogInit>:
    20e8:	ldr	r0, [pc, #48]	; 2120 <Mat_LogInit+0x38>
    20ec:	mov	r1, #0
    20f0:	add	r0, pc, r0
    20f4:	str	r1, [r0]
    20f8:	ldr	r0, [pc, #36]	; 2124 <Mat_LogInit+0x3c>
    20fc:	ldr	r2, [pc, #36]	; 2128 <Mat_LogInit+0x40>
    2100:	add	r0, pc, r0
    2104:	add	r2, pc, r2
    2108:	str	r2, [r0]
    210c:	ldr	r0, [pc, #24]	; 212c <Mat_LogInit+0x44>
    2110:	add	r0, pc, r0
    2114:	str	r1, [r0]
    2118:	mov	r0, #0
    211c:	bx	lr
    2120:	.word	0x0007b020
    2124:	.word	0x0007b01c
    2128:	.word	0x00000024
    212c:	.word	0x0007b004

00002130 <mat_logfunc>:
    2130:	push	{r4, sl, fp, lr}
    2134:	add	fp, sp, #8
    2138:	ldr	r2, [pc, #344]	; 2298 <mat_logfunc+0x168>
    213c:	mov	r3, r1
    2140:	and	r1, r0, #2
    2144:	ldr	r2, [pc, r2]
    2148:	cmp	r2, #0
    214c:	beq	2170 <mat_logfunc+0x40>
    2150:	cmp	r1, #0
    2154:	beq	2190 <mat_logfunc+0x60>
    2158:	ldr	r4, [pc, #316]	; 229c <mat_logfunc+0x16c>
    215c:	ldr	r4, [pc, r4]
    2160:	ldr	r0, [r4]
    2164:	ldr	r1, [pc, #308]	; 22a0 <mat_logfunc+0x170>
    2168:	add	r1, pc, r1
    216c:	b	220c <mat_logfunc+0xdc>
    2170:	cmp	r1, #0
    2174:	beq	21c0 <mat_logfunc+0x90>
    2178:	ldr	r4, [pc, #324]	; 22c4 <mat_logfunc+0x194>
    217c:	ldr	r4, [pc, r4]
    2180:	ldr	r0, [r4]
    2184:	ldr	r1, [pc, #316]	; 22c8 <mat_logfunc+0x198>
    2188:	add	r1, pc, r1
    218c:	b	2240 <mat_logfunc+0x110>
    2190:	tst	r0, #1
    2194:	bne	2254 <mat_logfunc+0x124>
    2198:	tst	r0, #4
    219c:	bne	21f8 <mat_logfunc+0xc8>
    21a0:	tst	r0, #16
    21a4:	beq	21d8 <mat_logfunc+0xa8>
    21a8:	ldr	r4, [pc, #260]	; 22b4 <mat_logfunc+0x184>
    21ac:	ldr	r4, [pc, r4]
    21b0:	ldr	r0, [r4]
    21b4:	ldr	r1, [pc, #252]	; 22b8 <mat_logfunc+0x188>
    21b8:	add	r1, pc, r1
    21bc:	b	220c <mat_logfunc+0xdc>
    21c0:	tst	r0, #1
    21c4:	bne	2270 <mat_logfunc+0x140>
    21c8:	tst	r0, #4
    21cc:	bne	2214 <mat_logfunc+0xe4>
    21d0:	tst	r0, #16
    21d4:	bne	222c <mat_logfunc+0xfc>
    21d8:	tst	r0, #8
    21dc:	popeq	{r4, sl, fp, pc}
    21e0:	ldr	r4, [pc, #212]	; 22bc <mat_logfunc+0x18c>
    21e4:	ldr	r4, [pc, r4]
    21e8:	ldr	r0, [r4]
    21ec:	ldr	r1, [pc, #204]	; 22c0 <mat_logfunc+0x190>
    21f0:	add	r1, pc, r1
    21f4:	b	2240 <mat_logfunc+0x110>
    21f8:	ldr	r4, [pc, #172]	; 22ac <mat_logfunc+0x17c>
    21fc:	ldr	r4, [pc, r4]
    2200:	ldr	r0, [r4]
    2204:	ldr	r1, [pc, #164]	; 22b0 <mat_logfunc+0x180>
    2208:	add	r1, pc, r1
    220c:	bl	1960 <fprintf@plt>
    2210:	b	2248 <mat_logfunc+0x118>
    2214:	ldr	r4, [pc, #184]	; 22d4 <mat_logfunc+0x1a4>
    2218:	ldr	r4, [pc, r4]
    221c:	ldr	r0, [r4]
    2220:	ldr	r1, [pc, #176]	; 22d8 <mat_logfunc+0x1a8>
    2224:	add	r1, pc, r1
    2228:	b	2240 <mat_logfunc+0x110>
    222c:	ldr	r4, [pc, #168]	; 22dc <mat_logfunc+0x1ac>
    2230:	ldr	r4, [pc, r4]
    2234:	ldr	r0, [r4]
    2238:	ldr	r1, [pc, #160]	; 22e0 <mat_logfunc+0x1b0>
    223c:	add	r1, pc, r1
    2240:	mov	r2, r3
    2244:	bl	1960 <fprintf@plt>
    2248:	ldr	r0, [r4]
    224c:	pop	{r4, sl, fp, lr}
    2250:	b	17f8 <fflush@plt>
    2254:	ldr	r4, [pc, #72]	; 22a4 <mat_logfunc+0x174>
    2258:	ldr	r4, [pc, r4]
    225c:	ldr	r0, [r4]
    2260:	ldr	r1, [pc, #64]	; 22a8 <mat_logfunc+0x178>
    2264:	add	r1, pc, r1
    2268:	bl	1960 <fprintf@plt>
    226c:	b	228c <mat_logfunc+0x15c>
    2270:	ldr	r4, [pc, #84]	; 22cc <mat_logfunc+0x19c>
    2274:	mov	r2, r3
    2278:	ldr	r4, [pc, r4]
    227c:	ldr	r0, [r4]
    2280:	ldr	r1, [pc, #72]	; 22d0 <mat_logfunc+0x1a0>
    2284:	add	r1, pc, r1
    2288:	bl	1960 <fprintf@plt>
    228c:	ldr	r0, [r4]
    2290:	bl	17f8 <fflush@plt>
    2294:	bl	1a38 <abort@plt>
    2298:	.word	0x0007afdc
    229c:	.word	0x0007af9c
    22a0:	.word	0x00069888
    22a4:	.word	0x0007aea0
    22a8:	.word	0x0006978c
    22ac:	.word	0x0007aefc
    22b0:	.word	0x000697f4
    22b4:	.word	0x0007af4c
    22b8:	.word	0x00069850
    22bc:	.word	0x0007af1c
    22c0:	.word	0x0006983e
    22c4:	.word	0x0007af7c
    22c8:	.word	0x0006988c
    22cc:	.word	0x0007ae80
    22d0:	.word	0x00069790
    22d4:	.word	0x0007aee0
    22d8:	.word	0x000697fa
    22dc:	.word	0x0007aec8
    22e0:	.word	0x000697ec

000022e4 <Mat_LogInitFunc>:
    22e4:	ldr	r2, [pc, #52]	; 2320 <Mat_LogInitFunc+0x3c>
    22e8:	add	r2, pc, r2
    22ec:	str	r0, [r2]
    22f0:	ldr	r0, [pc, #44]	; 2324 <Mat_LogInitFunc+0x40>
    22f4:	add	r0, pc, r0
    22f8:	str	r1, [r0]
    22fc:	mov	r1, #0
    2300:	ldr	r0, [pc, #32]	; 2328 <Mat_LogInitFunc+0x44>
    2304:	add	r0, pc, r0
    2308:	str	r1, [r0]
    230c:	ldr	r0, [pc, #24]	; 232c <Mat_LogInitFunc+0x48>
    2310:	add	r0, pc, r0
    2314:	str	r1, [r0]
    2318:	mov	r0, #0
    231c:	bx	lr
    2320:	.word	0x0007ae38
    2324:	.word	0x0007ae28
    2328:	.word	0x0007ae0c
    232c:	.word	0x0007ae04

00002330 <Mat_Warning>:
    2330:	sub	sp, sp, #12
    2334:	push	{fp, lr}
    2338:	mov	fp, sp
    233c:	sub	sp, sp, #4
    2340:	mov	ip, r0
    2344:	add	r0, fp, #8
    2348:	stm	r0, {r1, r2, r3}
    234c:	add	r2, fp, #8
    2350:	mov	r0, #4
    2354:	mov	r1, ip
    2358:	str	r2, [sp]
    235c:	bl	1ecc <mat_log>
    2360:	mov	sp, fp
    2364:	pop	{fp, lr}
    2368:	add	sp, sp, #12
    236c:	bx	lr

00002370 <Mat_SizeOf>:
    2370:	sub	r0, r0, #1
    2374:	cmp	r0, #17
    2378:	movhi	r0, #0
    237c:	bxhi	lr
    2380:	ldr	r1, [pc, #8]	; 2390 <Mat_SizeOf+0x20>
    2384:	add	r1, pc, r1
    2388:	ldr	r0, [r1, r0, lsl #2]
    238c:	bx	lr
    2390:	.word	0x000696b0

00002394 <InflateSkip>:
    2394:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2398:	add	fp, sp, #28
    239c:	sub	sp, sp, #4
    23a0:	sub	sp, sp, #1024	; 0x400
    23a4:	cmp	r2, #1
    23a8:	blt	2440 <InflateSkip+0xac>
    23ac:	mov	r8, r0
    23b0:	ldr	r0, [r1, #4]
    23b4:	cmp	r2, #512	; 0x200
    23b8:	mov	r6, r2
    23bc:	mov	r4, r2
    23c0:	mov	r5, r1
    23c4:	mov	r9, #0
    23c8:	movge	r6, #512	; 0x200
    23cc:	cmp	r0, #0
    23d0:	bne	23f8 <InflateSkip+0x64>
    23d4:	add	r0, sp, #512	; 0x200
    23d8:	mov	r1, #1
    23dc:	mov	r2, r6
    23e0:	str	r0, [r5]
    23e4:	ldr	r3, [r8]
    23e8:	bl	18b8 <fread@plt>
    23ec:	ldr	r1, [r5, #4]
    23f0:	add	r9, r1, r0
    23f4:	str	r9, [r5, #4]
    23f8:	mov	sl, sp
    23fc:	mov	r0, r5
    2400:	mov	r1, #3
    2404:	str	sl, [r5, #12]
    2408:	str	r6, [r5, #16]
    240c:	bl	17ec <inflate@plt>
    2410:	cmp	r0, #0
    2414:	beq	2448 <InflateSkip+0xb4>
    2418:	cmp	r0, #1
    241c:	beq	2530 <InflateSkip+0x19c>
    2420:	cmp	r0, #2
    2424:	mvneq	r0, #2
    2428:	bl	1888 <zError@plt>
    242c:	mov	r1, r0
    2430:	ldr	r0, [pc, #260]	; 253c <InflateSkip+0x1a8>
    2434:	add	r0, pc, r0
    2438:	bl	19b4 <Mat_Critical@plt>
    243c:	b	2530 <InflateSkip+0x19c>
    2440:	mov	r9, #0
    2444:	b	2530 <InflateSkip+0x19c>
    2448:	ldr	r0, [r5, #16]
    244c:	cmp	r0, #0
    2450:	beq	2468 <InflateSkip+0xd4>
    2454:	mov	r7, r6
    2458:	mov	r6, #0
    245c:	cmp	r6, r4
    2460:	blt	2484 <InflateSkip+0xf0>
    2464:	b	2504 <InflateSkip+0x170>
    2468:	sub	r7, r4, r6
    246c:	str	sl, [r5, #12]
    2470:	cmp	r7, #512	; 0x200
    2474:	movge	r7, #512	; 0x200
    2478:	str	r7, [r5, #16]
    247c:	cmp	r6, r4
    2480:	bge	2504 <InflateSkip+0x170>
    2484:	ldr	r0, [r5, #4]
    2488:	cmp	r0, #0
    248c:	bne	24b8 <InflateSkip+0x124>
    2490:	add	r0, sp, #512	; 0x200
    2494:	mov	r1, #1
    2498:	mov	r2, r7
    249c:	str	r0, [r5]
    24a0:	ldr	r3, [r8]
    24a4:	bl	18b8 <fread@plt>
    24a8:	ldr	r1, [r5, #4]
    24ac:	add	r0, r1, r0
    24b0:	add	r9, r0, r9
    24b4:	str	r0, [r5, #4]
    24b8:	mov	r0, r5
    24bc:	mov	r1, #3
    24c0:	bl	17ec <inflate@plt>
    24c4:	cmp	r0, #0
    24c8:	bne	24e0 <InflateSkip+0x14c>
    24cc:	ldr	r0, [r5, #16]
    24d0:	cmp	r0, #0
    24d4:	bne	247c <InflateSkip+0xe8>
    24d8:	add	r6, r6, r7
    24dc:	b	2468 <InflateSkip+0xd4>
    24e0:	cmp	r0, #1
    24e4:	beq	2504 <InflateSkip+0x170>
    24e8:	cmp	r0, #2
    24ec:	mvneq	r0, #2
    24f0:	bl	1888 <zError@plt>
    24f4:	mov	r1, r0
    24f8:	ldr	r0, [pc, #64]	; 2540 <InflateSkip+0x1ac>
    24fc:	add	r0, pc, r0
    2500:	bl	19b4 <Mat_Critical@plt>
    2504:	ldr	r1, [r5, #4]
    2508:	cmp	r1, #0
    250c:	beq	2530 <InflateSkip+0x19c>
    2510:	ldr	r0, [r8]
    2514:	rsb	r1, r1, #0
    2518:	mov	r2, #1
    251c:	bl	1a2c <fseek@plt>
    2520:	ldr	r0, [r5, #4]
    2524:	mov	r1, #0
    2528:	str	r1, [r5, #4]
    252c:	sub	r9, r9, r0
    2530:	mov	r0, r9
    2534:	sub	sp, fp, #28
    2538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    253c:	.word	0x00069648
    2540:	.word	0x00069580

00002544 <InflateSkip2>:
    2544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2548:	add	fp, sp, #28
    254c:	sub	sp, sp, #68	; 0x44
    2550:	mov	r8, r0
    2554:	ldr	r0, [r1, #52]	; 0x34
    2558:	mov	r5, r1
    255c:	mov	r7, r2
    2560:	mov	r9, #0
    2564:	ldr	r0, [r0, #12]
    2568:	ldr	r1, [r0, #4]
    256c:	cmp	r1, #0
    2570:	bne	25a0 <InflateSkip2+0x5c>
    2574:	add	r1, sp, #36	; 0x24
    2578:	mov	r2, #1
    257c:	stm	r0, {r1, r2}
    2580:	mov	r0, r1
    2584:	mov	r1, #1
    2588:	mov	r2, #1
    258c:	ldr	r3, [r8]
    2590:	bl	18b8 <fread@plt>
    2594:	mov	r9, r0
    2598:	ldr	r0, [r5, #52]	; 0x34
    259c:	ldr	r0, [r0, #12]
    25a0:	add	r4, sp, #4
    25a4:	mov	r1, #1
    25a8:	str	r4, [r0, #12]
    25ac:	str	r1, [r0, #16]
    25b0:	mov	r1, #0
    25b4:	bl	17ec <inflate@plt>
    25b8:	cmp	r0, #0
    25bc:	beq	25f0 <InflateSkip2+0xac>
    25c0:	ldr	r5, [r5, #36]	; 0x24
    25c4:	cmp	r0, #2
    25c8:	mvneq	r0, #2
    25cc:	bl	1888 <zError@plt>
    25d0:	mov	r2, r0
    25d4:	ldr	r0, [pc, #268]	; 26e8 <InflateSkip2+0x1a4>
    25d8:	mov	r1, r5
    25dc:	add	r0, pc, r0
    25e0:	bl	19b4 <Mat_Critical@plt>
    25e4:	mov	r0, r9
    25e8:	sub	sp, fp, #28
    25ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    25f0:	ldr	r0, [r5, #52]	; 0x34
    25f4:	ldr	r1, [r0, #12]
    25f8:	ldr	r2, [r1, #16]
    25fc:	mov	r3, r1
    2600:	cmp	r2, #0
    2604:	moveq	r2, #1
    2608:	streq	r4, [r1, #12]
    260c:	streq	r2, [r1, #16]
    2610:	ldr	r4, [r3, #4]!
    2614:	cmp	r4, #0
    2618:	mov	r2, r4
    261c:	movwne	r2, #1
    2620:	cmp	r7, #1
    2624:	blt	26b4 <InflateSkip2+0x170>
    2628:	mov	r6, #0
    262c:	add	sl, sp, #36	; 0x24
    2630:	tst	r2, #1
    2634:	bne	2664 <InflateSkip2+0x120>
    2638:	mov	r0, #1
    263c:	mov	r2, #1
    2640:	str	r0, [r3]
    2644:	str	sl, [r1]
    2648:	mov	r0, sl
    264c:	mov	r1, #1
    2650:	ldr	r3, [r8]
    2654:	bl	18b8 <fread@plt>
    2658:	add	r9, r0, r9
    265c:	ldr	r0, [r5, #52]	; 0x34
    2660:	add	r6, r6, #1
    2664:	ldr	r0, [r0, #12]
    2668:	mov	r1, #0
    266c:	bl	17ec <inflate@plt>
    2670:	cmp	r0, #0
    2674:	bne	25c0 <InflateSkip2+0x7c>
    2678:	ldr	r0, [r5, #52]	; 0x34
    267c:	ldr	r1, [r0, #12]
    2680:	ldr	r2, [r1, #16]
    2684:	mov	r3, r1
    2688:	cmp	r2, #0
    268c:	addeq	r2, sp, #4
    2690:	streq	r2, [r1, #12]
    2694:	moveq	r2, #1
    2698:	streq	r2, [r1, #16]
    269c:	ldr	r4, [r3, #4]!
    26a0:	cmp	r4, #0
    26a4:	mov	r2, r4
    26a8:	movwne	r2, #1
    26ac:	cmp	r6, r7
    26b0:	blt	2630 <InflateSkip2+0xec>
    26b4:	cmp	r2, #0
    26b8:	beq	25e4 <InflateSkip2+0xa0>
    26bc:	ldr	r0, [r8]
    26c0:	rsb	r1, r4, #0
    26c4:	mov	r2, #1
    26c8:	bl	1a2c <fseek@plt>
    26cc:	ldr	r0, [r5, #52]	; 0x34
    26d0:	mov	r2, #0
    26d4:	ldr	r0, [r0, #12]
    26d8:	ldr	r1, [r0, #4]
    26dc:	str	r2, [r0, #4]
    26e0:	sub	r9, r9, r1
    26e4:	b	25e4 <InflateSkip2+0xa0>
    26e8:	.word	0x000694c1

000026ec <InflateSkipData>:
    26ec:	push	{r4, r5, fp, lr}
    26f0:	add	fp, sp, #8
    26f4:	mov	r4, r3
    26f8:	mov	r3, r0
    26fc:	mov	r0, #0
    2700:	cmp	r3, #0
    2704:	cmpne	r1, #0
    2708:	bne	2710 <InflateSkipData+0x24>
    270c:	pop	{r4, r5, fp, pc}
    2710:	cmp	r4, #1
    2714:	blt	270c <InflateSkipData+0x20>
    2718:	sub	r2, r2, #1
    271c:	cmp	r2, #12
    2720:	bhi	270c <InflateSkipData+0x20>
    2724:	uxth	ip, r2
    2728:	movw	lr, #6527	; 0x197f
    272c:	mov	r5, #1
    2730:	tst	r5, lr, lsr ip
    2734:	popeq	{r4, r5, fp, pc}
    2738:	ldr	r0, [pc, #24]	; 2758 <InflateSkipData+0x6c>
    273c:	add	r0, pc, r0
    2740:	ldr	r0, [r0, r2, lsl #2]
    2744:	mul	r2, r0, r4
    2748:	mov	r0, r3
    274c:	bl	2394 <InflateSkip>
    2750:	mov	r0, r4
    2754:	pop	{r4, r5, fp, pc}
    2758:	.word	0x00069590

0000275c <InflateVarTag>:
    275c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2760:	add	fp, sp, #24
    2764:	sub	sp, sp, #32
    2768:	cmp	r2, #0
    276c:	beq	27fc <InflateVarTag+0xa0>
    2770:	mov	r8, r0
    2774:	ldr	r0, [r1, #52]	; 0x34
    2778:	mov	r5, r1
    277c:	mov	r7, r2
    2780:	mov	r4, #0
    2784:	ldr	r0, [r0, #12]
    2788:	ldr	r1, [r0, #4]
    278c:	cmp	r1, #0
    2790:	bne	27c0 <InflateVarTag+0x64>
    2794:	mov	r1, sp
    2798:	mov	r2, #1
    279c:	stm	r0, {r1, r2}
    27a0:	mov	r0, r1
    27a4:	mov	r1, #1
    27a8:	mov	r2, #1
    27ac:	ldr	r3, [r8]
    27b0:	bl	18b8 <fread@plt>
    27b4:	mov	r4, r0
    27b8:	ldr	r0, [r5, #52]	; 0x34
    27bc:	ldr	r0, [r0, #12]
    27c0:	mov	r1, #8
    27c4:	str	r7, [r0, #12]
    27c8:	str	r1, [r0, #16]
    27cc:	mov	r1, #0
    27d0:	bl	17ec <inflate@plt>
    27d4:	cmp	r0, #0
    27d8:	beq	2804 <InflateVarTag+0xa8>
    27dc:	cmp	r0, #2
    27e0:	mvneq	r0, #2
    27e4:	bl	1888 <zError@plt>
    27e8:	mov	r1, r0
    27ec:	ldr	r0, [pc, #184]	; 28ac <InflateVarTag+0x150>
    27f0:	add	r0, pc, r0
    27f4:	bl	19b4 <Mat_Critical@plt>
    27f8:	b	28a0 <InflateVarTag+0x144>
    27fc:	mov	r4, #0
    2800:	b	28a0 <InflateVarTag+0x144>
    2804:	mov	r9, #1
    2808:	mov	r7, sp
    280c:	mov	r6, #1
    2810:	ldr	r0, [r5, #52]	; 0x34
    2814:	ldr	r0, [r0, #12]
    2818:	ldr	r2, [r0, #16]
    281c:	ldr	r1, [r0, #4]
    2820:	cmp	r2, #0
    2824:	beq	2870 <InflateVarTag+0x114>
    2828:	cmp	r6, #1
    282c:	cmpeq	r1, #0
    2830:	bne	2870 <InflateVarTag+0x114>
    2834:	stm	r0, {r7, r9}
    2838:	mov	r0, r7
    283c:	mov	r1, #1
    2840:	mov	r2, #1
    2844:	ldr	r3, [r8]
    2848:	bl	18b8 <fread@plt>
    284c:	mov	r6, r0
    2850:	add	r4, r0, r4
    2854:	ldr	r0, [r5, #52]	; 0x34
    2858:	mov	r1, #0
    285c:	ldr	r0, [r0, #12]
    2860:	bl	17ec <inflate@plt>
    2864:	cmp	r0, #0
    2868:	beq	2810 <InflateVarTag+0xb4>
    286c:	b	27dc <InflateVarTag+0x80>
    2870:	cmp	r1, #0
    2874:	beq	28a0 <InflateVarTag+0x144>
    2878:	ldr	r0, [r8]
    287c:	rsb	r1, r1, #0
    2880:	mov	r2, #1
    2884:	bl	1a2c <fseek@plt>
    2888:	ldr	r0, [r5, #52]	; 0x34
    288c:	mov	r2, #0
    2890:	ldr	r0, [r0, #12]
    2894:	ldr	r1, [r0, #4]
    2898:	str	r2, [r0, #4]
    289c:	sub	r4, r4, r1
    28a0:	mov	r0, r4
    28a4:	sub	sp, fp, #24
    28a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    28ac:	.word	0x000692d4

000028b0 <InflateArrayFlags>:
    28b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    28b4:	add	fp, sp, #24
    28b8:	sub	sp, sp, #32
    28bc:	cmp	r2, #0
    28c0:	beq	2950 <InflateArrayFlags+0xa0>
    28c4:	mov	r8, r0
    28c8:	ldr	r0, [r1, #52]	; 0x34
    28cc:	mov	r5, r1
    28d0:	mov	r7, r2
    28d4:	mov	r4, #0
    28d8:	ldr	r0, [r0, #12]
    28dc:	ldr	r1, [r0, #4]
    28e0:	cmp	r1, #0
    28e4:	bne	2914 <InflateArrayFlags+0x64>
    28e8:	mov	r1, sp
    28ec:	mov	r2, #1
    28f0:	stm	r0, {r1, r2}
    28f4:	mov	r0, r1
    28f8:	mov	r1, #1
    28fc:	mov	r2, #1
    2900:	ldr	r3, [r8]
    2904:	bl	18b8 <fread@plt>
    2908:	mov	r4, r0
    290c:	ldr	r0, [r5, #52]	; 0x34
    2910:	ldr	r0, [r0, #12]
    2914:	mov	r1, #16
    2918:	str	r7, [r0, #12]
    291c:	str	r1, [r0, #16]
    2920:	mov	r1, #0
    2924:	bl	17ec <inflate@plt>
    2928:	cmp	r0, #0
    292c:	beq	2958 <InflateArrayFlags+0xa8>
    2930:	cmp	r0, #2
    2934:	mvneq	r0, #2
    2938:	bl	1888 <zError@plt>
    293c:	mov	r1, r0
    2940:	ldr	r0, [pc, #184]	; 2a00 <InflateArrayFlags+0x150>
    2944:	add	r0, pc, r0
    2948:	bl	19b4 <Mat_Critical@plt>
    294c:	b	29f4 <InflateArrayFlags+0x144>
    2950:	mov	r4, #0
    2954:	b	29f4 <InflateArrayFlags+0x144>
    2958:	mov	r9, #1
    295c:	mov	r7, sp
    2960:	mov	r6, #1
    2964:	ldr	r0, [r5, #52]	; 0x34
    2968:	ldr	r0, [r0, #12]
    296c:	ldr	r2, [r0, #16]
    2970:	ldr	r1, [r0, #4]
    2974:	cmp	r2, #0
    2978:	beq	29c4 <InflateArrayFlags+0x114>
    297c:	cmp	r6, #1
    2980:	cmpeq	r1, #0
    2984:	bne	29c4 <InflateArrayFlags+0x114>
    2988:	stm	r0, {r7, r9}
    298c:	mov	r0, r7
    2990:	mov	r1, #1
    2994:	mov	r2, #1
    2998:	ldr	r3, [r8]
    299c:	bl	18b8 <fread@plt>
    29a0:	mov	r6, r0
    29a4:	add	r4, r0, r4
    29a8:	ldr	r0, [r5, #52]	; 0x34
    29ac:	mov	r1, #0
    29b0:	ldr	r0, [r0, #12]
    29b4:	bl	17ec <inflate@plt>
    29b8:	cmp	r0, #0
    29bc:	beq	2964 <InflateArrayFlags+0xb4>
    29c0:	b	2930 <InflateArrayFlags+0x80>
    29c4:	cmp	r1, #0
    29c8:	beq	29f4 <InflateArrayFlags+0x144>
    29cc:	ldr	r0, [r8]
    29d0:	rsb	r1, r1, #0
    29d4:	mov	r2, #1
    29d8:	bl	1a2c <fseek@plt>
    29dc:	ldr	r0, [r5, #52]	; 0x34
    29e0:	mov	r2, #0
    29e4:	ldr	r0, [r0, #12]
    29e8:	ldr	r1, [r0, #4]
    29ec:	str	r2, [r0, #4]
    29f0:	sub	r4, r4, r1
    29f4:	mov	r0, r4
    29f8:	sub	sp, fp, #24
    29fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2a00:	.word	0x000691a3

00002a04 <InflateRankDims>:
    2a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2a08:	add	fp, sp, #28
    2a0c:	sub	sp, sp, #44	; 0x2c
    2a10:	cmp	r2, #0
    2a14:	beq	2aa8 <InflateRankDims+0xa4>
    2a18:	mov	sl, r0
    2a1c:	ldr	r0, [r1, #52]	; 0x34
    2a20:	mov	r5, r1
    2a24:	mov	r6, r3
    2a28:	mov	r9, r2
    2a2c:	mov	r4, #0
    2a30:	ldr	r0, [r0, #12]
    2a34:	ldr	r1, [r0, #4]
    2a38:	cmp	r1, #0
    2a3c:	bne	2a6c <InflateRankDims+0x68>
    2a40:	add	r1, sp, #12
    2a44:	mov	r2, #1
    2a48:	stm	r0, {r1, r2}
    2a4c:	mov	r0, r1
    2a50:	mov	r1, #1
    2a54:	mov	r2, #1
    2a58:	ldr	r3, [sl]
    2a5c:	bl	18b8 <fread@plt>
    2a60:	mov	r4, r0
    2a64:	ldr	r0, [r5, #52]	; 0x34
    2a68:	ldr	r0, [r0, #12]
    2a6c:	mov	r1, #8
    2a70:	str	r9, [r0, #12]
    2a74:	str	r1, [r0, #16]
    2a78:	mov	r1, #0
    2a7c:	bl	17ec <inflate@plt>
    2a80:	cmp	r0, #0
    2a84:	beq	2ab0 <InflateRankDims+0xac>
    2a88:	cmp	r0, #2
    2a8c:	mvneq	r0, #2
    2a90:	bl	1888 <zError@plt>
    2a94:	mov	r1, r0
    2a98:	ldr	r0, [pc, #580]	; 2ce4 <InflateRankDims+0x2e0>
    2a9c:	add	r0, pc, r0
    2aa0:	bl	19b4 <Mat_Critical@plt>
    2aa4:	b	2c08 <InflateRankDims+0x204>
    2aa8:	mov	r4, #0
    2aac:	b	2c08 <InflateRankDims+0x204>
    2ab0:	str	r6, [sp]
    2ab4:	mov	r6, #1
    2ab8:	add	r8, sp, #12
    2abc:	mov	r7, #1
    2ac0:	ldr	r0, [r5, #52]	; 0x34
    2ac4:	ldr	r0, [r0, #12]
    2ac8:	ldr	r1, [r0, #16]
    2acc:	cmp	r1, #0
    2ad0:	beq	2b24 <InflateRankDims+0x120>
    2ad4:	cmp	r7, #1
    2ad8:	ldreq	r1, [r0, #4]
    2adc:	cmpeq	r1, #0
    2ae0:	bne	2b24 <InflateRankDims+0x120>
    2ae4:	str	r8, [r0]
    2ae8:	str	r6, [r0, #4]
    2aec:	mov	r0, r8
    2af0:	mov	r1, #1
    2af4:	mov	r2, #1
    2af8:	ldr	r3, [sl]
    2afc:	bl	18b8 <fread@plt>
    2b00:	mov	r7, r0
    2b04:	add	r4, r0, r4
    2b08:	ldr	r0, [r5, #52]	; 0x34
    2b0c:	mov	r1, #0
    2b10:	ldr	r0, [r0, #12]
    2b14:	bl	17ec <inflate@plt>
    2b18:	cmp	r0, #0
    2b1c:	beq	2ac0 <InflateRankDims+0xbc>
    2b20:	b	2a88 <InflateRankDims+0x84>
    2b24:	ldm	r9, {r0, r1}
    2b28:	stmib	sp, {r0, r1}
    2b2c:	ldr	r1, [sl, #20]
    2b30:	cmp	r1, #0
    2b34:	beq	2b54 <InflateRankDims+0x150>
    2b38:	add	r0, sp, #4
    2b3c:	add	r7, r0, #4
    2b40:	add	r0, sp, #4
    2b44:	bl	1bf8 <Mat_int32Swap>
    2b48:	mov	r0, r7
    2b4c:	bl	1bf8 <Mat_int32Swap>
    2b50:	ldrh	r0, [sp, #4]
    2b54:	uxth	r0, r0
    2b58:	cmp	r0, #5
    2b5c:	bne	2bfc <InflateRankDims+0x1f8>
    2b60:	ldr	r6, [sp, #8]
    2b64:	asr	r0, r6, #31
    2b68:	add	r0, r6, r0, lsr #29
    2b6c:	bic	r0, r0, #7
    2b70:	subs	r1, r6, r0
    2b74:	addne	r6, r0, #8
    2b78:	ldr	r0, [r5, #52]	; 0x34
    2b7c:	ldr	r0, [r0, #12]
    2b80:	ldr	r1, [r0, #4]
    2b84:	cmp	r1, #0
    2b88:	bne	2bb8 <InflateRankDims+0x1b4>
    2b8c:	mov	r1, #1
    2b90:	str	r8, [r0]
    2b94:	mov	r2, #1
    2b98:	str	r1, [r0, #4]
    2b9c:	mov	r0, r8
    2ba0:	mov	r1, #1
    2ba4:	ldr	r3, [sl]
    2ba8:	bl	18b8 <fread@plt>
    2bac:	add	r4, r0, r4
    2bb0:	ldr	r0, [r5, #52]	; 0x34
    2bb4:	ldr	r0, [r0, #12]
    2bb8:	ldr	r2, [sp]
    2bbc:	add	r1, r6, #2
    2bc0:	str	r6, [r0, #16]
    2bc4:	lsl	r1, r1, #2
    2bc8:	cmp	r1, r2
    2bcc:	bls	2c14 <InflateRankDims+0x210>
    2bd0:	mov	r0, r6
    2bd4:	mov	r1, #4
    2bd8:	bl	1798 <calloc@plt>
    2bdc:	mov	r1, r0
    2be0:	ldr	r0, [fp, #8]
    2be4:	cmp	r1, #0
    2be8:	str	r1, [r0]
    2bec:	beq	2ccc <InflateRankDims+0x2c8>
    2bf0:	ldr	r0, [r5, #52]	; 0x34
    2bf4:	ldr	r0, [r0, #12]
    2bf8:	b	2c18 <InflateRankDims+0x214>
    2bfc:	ldr	r0, [pc, #220]	; 2ce0 <InflateRankDims+0x2dc>
    2c00:	add	r0, pc, r0
    2c04:	bl	19b4 <Mat_Critical@plt>
    2c08:	mov	r0, r4
    2c0c:	sub	sp, fp, #28
    2c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2c14:	add	r1, r9, #8
    2c18:	str	r1, [r0, #12]
    2c1c:	mov	r1, #0
    2c20:	bl	17ec <inflate@plt>
    2c24:	cmp	r0, #0
    2c28:	bne	2a88 <InflateRankDims+0x84>
    2c2c:	mov	r6, #1
    2c30:	mov	r7, #1
    2c34:	ldr	r0, [r5, #52]	; 0x34
    2c38:	ldr	r0, [r0, #12]
    2c3c:	ldr	r2, [r0, #16]
    2c40:	ldr	r1, [r0, #4]
    2c44:	cmp	r2, #0
    2c48:	beq	2c98 <InflateRankDims+0x294>
    2c4c:	cmp	r7, #1
    2c50:	cmpeq	r1, #0
    2c54:	bne	2c98 <InflateRankDims+0x294>
    2c58:	str	r8, [r0]
    2c5c:	str	r6, [r0, #4]
    2c60:	mov	r0, r8
    2c64:	mov	r1, #1
    2c68:	mov	r2, #1
    2c6c:	ldr	r3, [sl]
    2c70:	bl	18b8 <fread@plt>
    2c74:	mov	r7, r0
    2c78:	add	r4, r0, r4
    2c7c:	ldr	r0, [r5, #52]	; 0x34
    2c80:	mov	r1, #0
    2c84:	ldr	r0, [r0, #12]
    2c88:	bl	17ec <inflate@plt>
    2c8c:	cmp	r0, #0
    2c90:	beq	2c34 <InflateRankDims+0x230>
    2c94:	b	2a88 <InflateRankDims+0x84>
    2c98:	cmp	r1, #0
    2c9c:	beq	2c08 <InflateRankDims+0x204>
    2ca0:	ldr	r0, [sl]
    2ca4:	rsb	r1, r1, #0
    2ca8:	mov	r2, #1
    2cac:	bl	1a2c <fseek@plt>
    2cb0:	ldr	r0, [r5, #52]	; 0x34
    2cb4:	mov	r2, #0
    2cb8:	ldr	r0, [r0, #12]
    2cbc:	ldr	r1, [r0, #4]
    2cc0:	str	r2, [r0, #4]
    2cc4:	sub	r4, r4, r1
    2cc8:	b	2c08 <InflateRankDims+0x204>
    2ccc:	mov	r0, #0
    2cd0:	str	r0, [r9, #4]
    2cd4:	ldr	r0, [pc, #12]	; 2ce8 <InflateRankDims+0x2e4>
    2cd8:	add	r0, pc, r0
    2cdc:	b	2c04 <InflateRankDims+0x200>
    2ce0:	.word	0x00068f33
    2ce4:	.word	0x00069072
    2ce8:	.word	0x00068e99

00002cec <InflateVarNameTag>:
    2cec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2cf0:	add	fp, sp, #24
    2cf4:	sub	sp, sp, #32
    2cf8:	cmp	r2, #0
    2cfc:	beq	2d8c <InflateVarNameTag+0xa0>
    2d00:	mov	r8, r0
    2d04:	ldr	r0, [r1, #52]	; 0x34
    2d08:	mov	r5, r1
    2d0c:	mov	r7, r2
    2d10:	mov	r4, #0
    2d14:	ldr	r0, [r0, #12]
    2d18:	ldr	r1, [r0, #4]
    2d1c:	cmp	r1, #0
    2d20:	bne	2d50 <InflateVarNameTag+0x64>
    2d24:	mov	r1, sp
    2d28:	mov	r2, #1
    2d2c:	stm	r0, {r1, r2}
    2d30:	mov	r0, r1
    2d34:	mov	r1, #1
    2d38:	mov	r2, #1
    2d3c:	ldr	r3, [r8]
    2d40:	bl	18b8 <fread@plt>
    2d44:	mov	r4, r0
    2d48:	ldr	r0, [r5, #52]	; 0x34
    2d4c:	ldr	r0, [r0, #12]
    2d50:	mov	r1, #8
    2d54:	str	r7, [r0, #12]
    2d58:	str	r1, [r0, #16]
    2d5c:	mov	r1, #0
    2d60:	bl	17ec <inflate@plt>
    2d64:	cmp	r0, #0
    2d68:	beq	2d94 <InflateVarNameTag+0xa8>
    2d6c:	cmp	r0, #2
    2d70:	mvneq	r0, #2
    2d74:	bl	1888 <zError@plt>
    2d78:	mov	r1, r0
    2d7c:	ldr	r0, [pc, #184]	; 2e3c <InflateVarNameTag+0x150>
    2d80:	add	r0, pc, r0
    2d84:	bl	19b4 <Mat_Critical@plt>
    2d88:	b	2e30 <InflateVarNameTag+0x144>
    2d8c:	mov	r4, #0
    2d90:	b	2e30 <InflateVarNameTag+0x144>
    2d94:	mov	r9, #1
    2d98:	mov	r7, sp
    2d9c:	mov	r6, #1
    2da0:	ldr	r0, [r5, #52]	; 0x34
    2da4:	ldr	r0, [r0, #12]
    2da8:	ldr	r2, [r0, #16]
    2dac:	ldr	r1, [r0, #4]
    2db0:	cmp	r2, #0
    2db4:	beq	2e00 <InflateVarNameTag+0x114>
    2db8:	cmp	r6, #1
    2dbc:	cmpeq	r1, #0
    2dc0:	bne	2e00 <InflateVarNameTag+0x114>
    2dc4:	stm	r0, {r7, r9}
    2dc8:	mov	r0, r7
    2dcc:	mov	r1, #1
    2dd0:	mov	r2, #1
    2dd4:	ldr	r3, [r8]
    2dd8:	bl	18b8 <fread@plt>
    2ddc:	mov	r6, r0
    2de0:	add	r4, r0, r4
    2de4:	ldr	r0, [r5, #52]	; 0x34
    2de8:	mov	r1, #0
    2dec:	ldr	r0, [r0, #12]
    2df0:	bl	17ec <inflate@plt>
    2df4:	cmp	r0, #0
    2df8:	beq	2da0 <InflateVarNameTag+0xb4>
    2dfc:	b	2d6c <InflateVarNameTag+0x80>
    2e00:	cmp	r1, #0
    2e04:	beq	2e30 <InflateVarNameTag+0x144>
    2e08:	ldr	r0, [r8]
    2e0c:	rsb	r1, r1, #0
    2e10:	mov	r2, #1
    2e14:	bl	1a2c <fseek@plt>
    2e18:	ldr	r0, [r5, #52]	; 0x34
    2e1c:	mov	r2, #0
    2e20:	ldr	r0, [r0, #12]
    2e24:	ldr	r1, [r0, #4]
    2e28:	str	r2, [r0, #4]
    2e2c:	sub	r4, r4, r1
    2e30:	mov	r0, r4
    2e34:	sub	sp, fp, #24
    2e38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2e3c:	.word	0x00068e12

00002e40 <InflateVarName>:
    2e40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2e44:	add	fp, sp, #24
    2e48:	sub	sp, sp, #32
    2e4c:	cmp	r2, #0
    2e50:	beq	2ee0 <InflateVarName+0xa0>
    2e54:	mov	r9, r0
    2e58:	ldr	r0, [r1, #52]	; 0x34
    2e5c:	mov	r5, r1
    2e60:	mov	r8, r3
    2e64:	mov	r7, r2
    2e68:	mov	r4, #0
    2e6c:	ldr	r0, [r0, #12]
    2e70:	ldr	r1, [r0, #4]
    2e74:	cmp	r1, #0
    2e78:	bne	2ea8 <InflateVarName+0x68>
    2e7c:	mov	r1, sp
    2e80:	mov	r2, #1
    2e84:	stm	r0, {r1, r2}
    2e88:	mov	r0, r1
    2e8c:	mov	r1, #1
    2e90:	mov	r2, #1
    2e94:	ldr	r3, [r9]
    2e98:	bl	18b8 <fread@plt>
    2e9c:	mov	r4, r0
    2ea0:	ldr	r0, [r5, #52]	; 0x34
    2ea4:	ldr	r0, [r0, #12]
    2ea8:	mov	r1, #0
    2eac:	str	r7, [r0, #12]
    2eb0:	str	r8, [r0, #16]
    2eb4:	bl	17ec <inflate@plt>
    2eb8:	cmp	r0, #0
    2ebc:	beq	2ee8 <InflateVarName+0xa8>
    2ec0:	cmp	r0, #2
    2ec4:	mvneq	r0, #2
    2ec8:	bl	1888 <zError@plt>
    2ecc:	mov	r1, r0
    2ed0:	ldr	r0, [pc, #184]	; 2f90 <InflateVarName+0x150>
    2ed4:	add	r0, pc, r0
    2ed8:	bl	19b4 <Mat_Critical@plt>
    2edc:	b	2f84 <InflateVarName+0x144>
    2ee0:	mov	r4, #0
    2ee4:	b	2f84 <InflateVarName+0x144>
    2ee8:	mov	r8, #1
    2eec:	mov	r7, sp
    2ef0:	mov	r6, #1
    2ef4:	ldr	r0, [r5, #52]	; 0x34
    2ef8:	ldr	r0, [r0, #12]
    2efc:	ldr	r2, [r0, #16]
    2f00:	ldr	r1, [r0, #4]
    2f04:	cmp	r2, #0
    2f08:	beq	2f54 <InflateVarName+0x114>
    2f0c:	cmp	r6, #1
    2f10:	cmpeq	r1, #0
    2f14:	bne	2f54 <InflateVarName+0x114>
    2f18:	stm	r0, {r7, r8}
    2f1c:	mov	r0, r7
    2f20:	mov	r1, #1
    2f24:	mov	r2, #1
    2f28:	ldr	r3, [r9]
    2f2c:	bl	18b8 <fread@plt>
    2f30:	mov	r6, r0
    2f34:	add	r4, r0, r4
    2f38:	ldr	r0, [r5, #52]	; 0x34
    2f3c:	mov	r1, #0
    2f40:	ldr	r0, [r0, #12]
    2f44:	bl	17ec <inflate@plt>
    2f48:	cmp	r0, #0
    2f4c:	beq	2ef4 <InflateVarName+0xb4>
    2f50:	b	2ec0 <InflateVarName+0x80>
    2f54:	cmp	r1, #0
    2f58:	beq	2f84 <InflateVarName+0x144>
    2f5c:	ldr	r0, [r9]
    2f60:	rsb	r1, r1, #0
    2f64:	mov	r2, #1
    2f68:	bl	1a2c <fseek@plt>
    2f6c:	ldr	r0, [r5, #52]	; 0x34
    2f70:	mov	r2, #0
    2f74:	ldr	r0, [r0, #12]
    2f78:	ldr	r1, [r0, #4]
    2f7c:	str	r2, [r0, #4]
    2f80:	sub	r4, r4, r1
    2f84:	mov	r0, r4
    2f88:	sub	sp, fp, #24
    2f8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2f90:	.word	0x00068ce5

00002f94 <InflateDataTag>:
    2f94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2f98:	add	fp, sp, #24
    2f9c:	sub	sp, sp, #32
    2fa0:	cmp	r2, #0
    2fa4:	beq	30cc <InflateDataTag+0x138>
    2fa8:	mov	r8, r0
    2fac:	ldr	r0, [r1, #52]	; 0x34
    2fb0:	mov	r5, r1
    2fb4:	mov	r7, r2
    2fb8:	mov	r4, #0
    2fbc:	ldr	r0, [r0, #12]
    2fc0:	ldr	r1, [r0, #4]
    2fc4:	cmp	r1, #0
    2fc8:	bne	2ff8 <InflateDataTag+0x64>
    2fcc:	mov	r1, sp
    2fd0:	mov	r2, #1
    2fd4:	stm	r0, {r1, r2}
    2fd8:	mov	r0, r1
    2fdc:	mov	r1, #1
    2fe0:	mov	r2, #1
    2fe4:	ldr	r3, [r8]
    2fe8:	bl	18b8 <fread@plt>
    2fec:	mov	r4, r0
    2ff0:	ldr	r0, [r5, #52]	; 0x34
    2ff4:	ldr	r0, [r0, #12]
    2ff8:	mov	r1, #8
    2ffc:	str	r7, [r0, #12]
    3000:	str	r1, [r0, #16]
    3004:	mov	r1, #0
    3008:	bl	17ec <inflate@plt>
    300c:	cmp	r0, #1
    3010:	beq	30f8 <InflateDataTag+0x164>
    3014:	cmp	r0, #0
    3018:	bne	30d4 <InflateDataTag+0x140>
    301c:	mov	r9, #1
    3020:	mov	r7, sp
    3024:	mov	r6, #1
    3028:	ldr	r0, [r5, #52]	; 0x34
    302c:	ldr	r0, [r0, #12]
    3030:	ldr	r1, [r0, #16]
    3034:	cmp	r1, #0
    3038:	beq	3094 <InflateDataTag+0x100>
    303c:	cmp	r6, #1
    3040:	ldreq	r1, [r0, #4]
    3044:	cmpeq	r1, #0
    3048:	bne	3094 <InflateDataTag+0x100>
    304c:	stm	r0, {r7, r9}
    3050:	mov	r0, r7
    3054:	mov	r1, #1
    3058:	mov	r2, #1
    305c:	ldr	r3, [r8]
    3060:	bl	18b8 <fread@plt>
    3064:	mov	r6, r0
    3068:	add	r4, r0, r4
    306c:	ldr	r0, [r5, #52]	; 0x34
    3070:	mov	r1, #0
    3074:	ldr	r0, [r0, #12]
    3078:	bl	17ec <inflate@plt>
    307c:	cmp	r0, #0
    3080:	beq	3028 <InflateDataTag+0x94>
    3084:	cmp	r0, #1
    3088:	bne	30d4 <InflateDataTag+0x140>
    308c:	ldr	r0, [r5, #52]	; 0x34
    3090:	ldr	r0, [r0, #12]
    3094:	ldr	r1, [r0, #4]
    3098:	cmp	r1, #0
    309c:	beq	30f8 <InflateDataTag+0x164>
    30a0:	ldr	r0, [r8]
    30a4:	rsb	r1, r1, #0
    30a8:	mov	r2, #1
    30ac:	bl	1a2c <fseek@plt>
    30b0:	ldr	r0, [r5, #52]	; 0x34
    30b4:	mov	r2, #0
    30b8:	ldr	r0, [r0, #12]
    30bc:	ldr	r1, [r0, #4]
    30c0:	str	r2, [r0, #4]
    30c4:	sub	r4, r4, r1
    30c8:	b	30f8 <InflateDataTag+0x164>
    30cc:	mov	r4, #0
    30d0:	b	30f8 <InflateDataTag+0x164>
    30d4:	ldr	r5, [r5, #36]	; 0x24
    30d8:	cmp	r0, #2
    30dc:	mvneq	r0, #2
    30e0:	bl	1888 <zError@plt>
    30e4:	mov	r2, r0
    30e8:	ldr	r0, [pc, #20]	; 3104 <InflateDataTag+0x170>
    30ec:	mov	r1, r5
    30f0:	add	r0, pc, r0
    30f4:	bl	19b4 <Mat_Critical@plt>
    30f8:	mov	r0, r4
    30fc:	sub	sp, fp, #24
    3100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3104:	.word	0x00068aed

00003108 <InflateDataType>:
    3108:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    310c:	add	fp, sp, #24
    3110:	sub	sp, sp, #32
    3114:	cmp	r2, #0
    3118:	beq	3198 <InflateDataType+0x90>
    311c:	mov	r8, r0
    3120:	ldr	r0, [r1, #4]
    3124:	mov	r7, r2
    3128:	mov	r5, r1
    312c:	mov	r4, #0
    3130:	cmp	r0, #0
    3134:	bne	3158 <InflateDataType+0x50>
    3138:	mov	r0, sp
    313c:	mov	r1, #1
    3140:	mov	r2, #1
    3144:	stm	r5, {r0, r1}
    3148:	mov	r1, #1
    314c:	ldr	r3, [r8]
    3150:	bl	18b8 <fread@plt>
    3154:	mov	r4, r0
    3158:	mov	r0, #4
    315c:	str	r7, [r5, #12]
    3160:	mov	r1, #0
    3164:	str	r0, [r5, #16]
    3168:	mov	r0, r5
    316c:	bl	17ec <inflate@plt>
    3170:	cmp	r0, #0
    3174:	beq	31a0 <InflateDataType+0x98>
    3178:	cmp	r0, #2
    317c:	mvneq	r0, #2
    3180:	bl	1888 <zError@plt>
    3184:	mov	r1, r0
    3188:	ldr	r0, [pc, #164]	; 3234 <InflateDataType+0x12c>
    318c:	add	r0, pc, r0
    3190:	bl	19b4 <Mat_Critical@plt>
    3194:	b	3228 <InflateDataType+0x120>
    3198:	mov	r4, #0
    319c:	b	3228 <InflateDataType+0x120>
    31a0:	mov	r9, #1
    31a4:	mov	r7, sp
    31a8:	mov	r6, #1
    31ac:	ldr	r0, [r5, #16]
    31b0:	ldr	r1, [r5, #4]
    31b4:	cmp	r0, #0
    31b8:	beq	3200 <InflateDataType+0xf8>
    31bc:	cmp	r6, #1
    31c0:	cmpeq	r1, #0
    31c4:	bne	3200 <InflateDataType+0xf8>
    31c8:	stm	r5, {r7, r9}
    31cc:	mov	r0, r7
    31d0:	mov	r1, #1
    31d4:	mov	r2, #1
    31d8:	ldr	r3, [r8]
    31dc:	bl	18b8 <fread@plt>
    31e0:	mov	r6, r0
    31e4:	add	r4, r0, r4
    31e8:	mov	r0, r5
    31ec:	mov	r1, #0
    31f0:	bl	17ec <inflate@plt>
    31f4:	cmp	r0, #0
    31f8:	beq	31ac <InflateDataType+0xa4>
    31fc:	b	3178 <InflateDataType+0x70>
    3200:	cmp	r1, #0
    3204:	beq	3228 <InflateDataType+0x120>
    3208:	ldr	r0, [r8]
    320c:	rsb	r1, r1, #0
    3210:	mov	r2, #1
    3214:	bl	1a2c <fseek@plt>
    3218:	ldr	r0, [r5, #4]
    321c:	mov	r1, #0
    3220:	str	r1, [r5, #4]
    3224:	sub	r4, r4, r0
    3228:	mov	r0, r4
    322c:	sub	sp, fp, #24
    3230:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3234:	.word	0x00068a7a

00003238 <InflateData>:
    3238:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    323c:	add	fp, sp, #24
    3240:	sub	sp, sp, #8
    3244:	sub	sp, sp, #1024	; 0x400
    3248:	cmp	r2, #0
    324c:	mov	r4, #0
    3250:	movne	r7, r3
    3254:	cmpne	r3, #0
    3258:	bne	3268 <InflateData+0x30>
    325c:	mov	r0, r4
    3260:	sub	sp, fp, #24
    3264:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3268:	mov	r8, r0
    326c:	ldr	r0, [r1, #4]
    3270:	mov	r6, r2
    3274:	mov	r5, r1
    3278:	mov	r4, #0
    327c:	cmp	r0, #0
    3280:	bne	32b0 <InflateData+0x78>
    3284:	ldr	r3, [r8]
    3288:	add	r9, sp, #4
    328c:	cmp	r7, #1024	; 0x400
    3290:	mov	r2, r7
    3294:	mov	r1, #1
    3298:	movcs	r2, #1024	; 0x400
    329c:	mov	r0, r9
    32a0:	bl	18b8 <fread@plt>
    32a4:	mov	r4, r0
    32a8:	str	r9, [r5]
    32ac:	str	r0, [r5, #4]
    32b0:	mov	r0, r5
    32b4:	mov	r1, #3
    32b8:	str	r6, [r5, #12]
    32bc:	str	r7, [r5, #16]
    32c0:	bl	17ec <inflate@plt>
    32c4:	cmp	r0, #1
    32c8:	beq	325c <InflateData+0x24>
    32cc:	cmp	r0, #0
    32d0:	bne	3354 <InflateData+0x11c>
    32d4:	ldr	r0, [r5, #16]
    32d8:	cmp	r0, #0
    32dc:	beq	3398 <InflateData+0x160>
    32e0:	add	r6, sp, #4
    32e4:	ldr	r1, [r5, #4]
    32e8:	cmp	r1, #0
    32ec:	bne	33a4 <InflateData+0x16c>
    32f0:	add	r0, r4, #1024	; 0x400
    32f4:	mov	r2, #1024	; 0x400
    32f8:	cmp	r0, r7
    32fc:	bcc	3310 <InflateData+0xd8>
    3300:	add	r0, r4, #1
    3304:	sub	r2, r7, r4
    3308:	cmp	r0, r7
    330c:	movwhi	r2, #1
    3310:	ldr	r3, [r8]
    3314:	mov	r0, r6
    3318:	mov	r1, #1
    331c:	bl	18b8 <fread@plt>
    3320:	str	r6, [r5]
    3324:	str	r0, [r5, #4]
    3328:	add	r4, r0, r4
    332c:	mov	r0, r5
    3330:	mov	r1, #3
    3334:	bl	17ec <inflate@plt>
    3338:	cmn	r0, #5
    333c:	cmpne	r0, #0
    3340:	bne	3374 <InflateData+0x13c>
    3344:	ldr	r0, [r5, #16]
    3348:	cmp	r0, #0
    334c:	bne	32e4 <InflateData+0xac>
    3350:	b	3398 <InflateData+0x160>
    3354:	cmp	r0, #2
    3358:	mvneq	r0, #2
    335c:	bl	1888 <zError@plt>
    3360:	mov	r1, r0
    3364:	ldr	r0, [pc, #96]	; 33cc <InflateData+0x194>
    3368:	add	r0, pc, r0
    336c:	bl	19b4 <Mat_Critical@plt>
    3370:	b	325c <InflateData+0x24>
    3374:	cmp	r0, #1
    3378:	beq	3398 <InflateData+0x160>
    337c:	cmp	r0, #2
    3380:	mvneq	r0, #2
    3384:	bl	1888 <zError@plt>
    3388:	mov	r1, r0
    338c:	ldr	r0, [pc, #52]	; 33c8 <InflateData+0x190>
    3390:	add	r0, pc, r0
    3394:	bl	19b4 <Mat_Critical@plt>
    3398:	ldr	r1, [r5, #4]
    339c:	cmp	r1, #0
    33a0:	beq	325c <InflateData+0x24>
    33a4:	ldr	r0, [r8]
    33a8:	rsb	r1, r1, #0
    33ac:	mov	r2, #1
    33b0:	bl	1a2c <fseek@plt>
    33b4:	ldr	r0, [r5, #4]
    33b8:	mov	r1, #0
    33bc:	str	r1, [r5, #4]
    33c0:	sub	r4, r4, r0
    33c4:	b	325c <InflateData+0x24>
    33c8:	.word	0x0006889b
    33cc:	.word	0x000688c3

000033d0 <InflateFieldNameLength>:
    33d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    33d4:	add	fp, sp, #24
    33d8:	sub	sp, sp, #32
    33dc:	cmp	r2, #0
    33e0:	beq	3470 <InflateFieldNameLength+0xa0>
    33e4:	mov	r8, r0
    33e8:	ldr	r0, [r1, #52]	; 0x34
    33ec:	mov	r5, r1
    33f0:	mov	r7, r2
    33f4:	mov	r4, #0
    33f8:	ldr	r0, [r0, #12]
    33fc:	ldr	r1, [r0, #4]
    3400:	cmp	r1, #0
    3404:	bne	3434 <InflateFieldNameLength+0x64>
    3408:	mov	r1, sp
    340c:	mov	r2, #1
    3410:	stm	r0, {r1, r2}
    3414:	mov	r0, r1
    3418:	mov	r1, #1
    341c:	mov	r2, #1
    3420:	ldr	r3, [r8]
    3424:	bl	18b8 <fread@plt>
    3428:	mov	r4, r0
    342c:	ldr	r0, [r5, #52]	; 0x34
    3430:	ldr	r0, [r0, #12]
    3434:	mov	r1, #8
    3438:	str	r7, [r0, #12]
    343c:	str	r1, [r0, #16]
    3440:	mov	r1, #0
    3444:	bl	17ec <inflate@plt>
    3448:	cmp	r0, #0
    344c:	beq	3478 <InflateFieldNameLength+0xa8>
    3450:	cmp	r0, #2
    3454:	mvneq	r0, #2
    3458:	bl	1888 <zError@plt>
    345c:	mov	r1, r0
    3460:	ldr	r0, [pc, #184]	; 3520 <InflateFieldNameLength+0x150>
    3464:	add	r0, pc, r0
    3468:	bl	19b4 <Mat_Critical@plt>
    346c:	b	3514 <InflateFieldNameLength+0x144>
    3470:	mov	r4, #0
    3474:	b	3514 <InflateFieldNameLength+0x144>
    3478:	mov	r9, #1
    347c:	mov	r7, sp
    3480:	mov	r6, #1
    3484:	ldr	r0, [r5, #52]	; 0x34
    3488:	ldr	r0, [r0, #12]
    348c:	ldr	r2, [r0, #16]
    3490:	ldr	r1, [r0, #4]
    3494:	cmp	r2, #0
    3498:	beq	34e4 <InflateFieldNameLength+0x114>
    349c:	cmp	r6, #1
    34a0:	cmpeq	r1, #0
    34a4:	bne	34e4 <InflateFieldNameLength+0x114>
    34a8:	stm	r0, {r7, r9}
    34ac:	mov	r0, r7
    34b0:	mov	r1, #1
    34b4:	mov	r2, #1
    34b8:	ldr	r3, [r8]
    34bc:	bl	18b8 <fread@plt>
    34c0:	mov	r6, r0
    34c4:	add	r4, r0, r4
    34c8:	ldr	r0, [r5, #52]	; 0x34
    34cc:	mov	r1, #0
    34d0:	ldr	r0, [r0, #12]
    34d4:	bl	17ec <inflate@plt>
    34d8:	cmp	r0, #0
    34dc:	beq	3484 <InflateFieldNameLength+0xb4>
    34e0:	b	3450 <InflateFieldNameLength+0x80>
    34e4:	cmp	r1, #0
    34e8:	beq	3514 <InflateFieldNameLength+0x144>
    34ec:	ldr	r0, [r8]
    34f0:	rsb	r1, r1, #0
    34f4:	mov	r2, #1
    34f8:	bl	1a2c <fseek@plt>
    34fc:	ldr	r0, [r5, #52]	; 0x34
    3500:	mov	r2, #0
    3504:	ldr	r0, [r0, #12]
    3508:	ldr	r1, [r0, #4]
    350c:	str	r2, [r0, #4]
    3510:	sub	r4, r4, r1
    3514:	mov	r0, r4
    3518:	sub	sp, fp, #24
    351c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3520:	.word	0x000687e8

00003524 <InflateFieldNamesTag>:
    3524:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    3528:	add	fp, sp, #24
    352c:	sub	sp, sp, #32
    3530:	cmp	r2, #0
    3534:	beq	35c4 <InflateFieldNamesTag+0xa0>
    3538:	mov	r8, r0
    353c:	ldr	r0, [r1, #52]	; 0x34
    3540:	mov	r5, r1
    3544:	mov	r7, r2
    3548:	mov	r4, #0
    354c:	ldr	r0, [r0, #12]
    3550:	ldr	r1, [r0, #4]
    3554:	cmp	r1, #0
    3558:	bne	3588 <InflateFieldNamesTag+0x64>
    355c:	mov	r1, sp
    3560:	mov	r2, #1
    3564:	stm	r0, {r1, r2}
    3568:	mov	r0, r1
    356c:	mov	r1, #1
    3570:	mov	r2, #1
    3574:	ldr	r3, [r8]
    3578:	bl	18b8 <fread@plt>
    357c:	mov	r4, r0
    3580:	ldr	r0, [r5, #52]	; 0x34
    3584:	ldr	r0, [r0, #12]
    3588:	mov	r1, #8
    358c:	str	r7, [r0, #12]
    3590:	str	r1, [r0, #16]
    3594:	mov	r1, #0
    3598:	bl	17ec <inflate@plt>
    359c:	cmp	r0, #0
    35a0:	beq	35cc <InflateFieldNamesTag+0xa8>
    35a4:	cmp	r0, #2
    35a8:	mvneq	r0, #2
    35ac:	bl	1888 <zError@plt>
    35b0:	mov	r1, r0
    35b4:	ldr	r0, [pc, #184]	; 3674 <InflateFieldNamesTag+0x150>
    35b8:	add	r0, pc, r0
    35bc:	bl	19b4 <Mat_Critical@plt>
    35c0:	b	3668 <InflateFieldNamesTag+0x144>
    35c4:	mov	r4, #0
    35c8:	b	3668 <InflateFieldNamesTag+0x144>
    35cc:	mov	r9, #1
    35d0:	mov	r7, sp
    35d4:	mov	r6, #1
    35d8:	ldr	r0, [r5, #52]	; 0x34
    35dc:	ldr	r0, [r0, #12]
    35e0:	ldr	r2, [r0, #16]
    35e4:	ldr	r1, [r0, #4]
    35e8:	cmp	r2, #0
    35ec:	beq	3638 <InflateFieldNamesTag+0x114>
    35f0:	cmp	r6, #1
    35f4:	cmpeq	r1, #0
    35f8:	bne	3638 <InflateFieldNamesTag+0x114>
    35fc:	stm	r0, {r7, r9}
    3600:	mov	r0, r7
    3604:	mov	r1, #1
    3608:	mov	r2, #1
    360c:	ldr	r3, [r8]
    3610:	bl	18b8 <fread@plt>
    3614:	mov	r6, r0
    3618:	add	r4, r0, r4
    361c:	ldr	r0, [r5, #52]	; 0x34
    3620:	mov	r1, #0
    3624:	ldr	r0, [r0, #12]
    3628:	bl	17ec <inflate@plt>
    362c:	cmp	r0, #0
    3630:	beq	35d8 <InflateFieldNamesTag+0xb4>
    3634:	b	35a4 <InflateFieldNamesTag+0x80>
    3638:	cmp	r1, #0
    363c:	beq	3668 <InflateFieldNamesTag+0x144>
    3640:	ldr	r0, [r8]
    3644:	rsb	r1, r1, #0
    3648:	mov	r2, #1
    364c:	bl	1a2c <fseek@plt>
    3650:	ldr	r0, [r5, #52]	; 0x34
    3654:	mov	r2, #0
    3658:	ldr	r0, [r0, #12]
    365c:	ldr	r1, [r0, #4]
    3660:	str	r2, [r0, #4]
    3664:	sub	r4, r4, r1
    3668:	mov	r0, r4
    366c:	sub	sp, fp, #24
    3670:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    3674:	.word	0x000686c0

00003678 <InflateFieldNames>:
    3678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    367c:	add	fp, sp, #28
    3680:	sub	sp, sp, #36	; 0x24
    3684:	cmp	r2, #0
    3688:	beq	3724 <InflateFieldNames+0xac>
    368c:	mov	r9, r0
    3690:	ldr	r0, [r1, #52]	; 0x34
    3694:	mov	r5, r1
    3698:	ldr	sl, [fp, #12]
    369c:	ldr	r6, [fp, #8]
    36a0:	mov	r8, r3
    36a4:	mov	r7, r2
    36a8:	mov	r4, #0
    36ac:	ldr	r0, [r0, #12]
    36b0:	ldr	r1, [r0, #4]
    36b4:	cmp	r1, #0
    36b8:	bne	36e8 <InflateFieldNames+0x70>
    36bc:	add	r1, sp, #4
    36c0:	mov	r2, #1
    36c4:	stm	r0, {r1, r2}
    36c8:	mov	r0, r1
    36cc:	mov	r1, #1
    36d0:	mov	r2, #1
    36d4:	ldr	r3, [r9]
    36d8:	bl	18b8 <fread@plt>
    36dc:	mov	r4, r0
    36e0:	ldr	r0, [r5, #52]	; 0x34
    36e4:	ldr	r0, [r0, #12]
    36e8:	mla	r1, r6, r8, sl
    36ec:	str	r7, [r0, #12]
    36f0:	str	r1, [r0, #16]
    36f4:	mov	r1, #0
    36f8:	bl	17ec <inflate@plt>
    36fc:	cmp	r0, #0
    3700:	beq	372c <InflateFieldNames+0xb4>
    3704:	cmp	r0, #2
    3708:	mvneq	r0, #2
    370c:	bl	1888 <zError@plt>
    3710:	mov	r1, r0
    3714:	ldr	r0, [pc, #184]	; 37d4 <InflateFieldNames+0x15c>
    3718:	add	r0, pc, r0
    371c:	bl	19b4 <Mat_Critical@plt>
    3720:	b	37c8 <InflateFieldNames+0x150>
    3724:	mov	r4, #0
    3728:	b	37c8 <InflateFieldNames+0x150>
    372c:	mov	r8, #1
    3730:	add	r7, sp, #4
    3734:	mov	r6, #1
    3738:	ldr	r0, [r5, #52]	; 0x34
    373c:	ldr	r0, [r0, #12]
    3740:	ldr	r2, [r0, #16]
    3744:	ldr	r1, [r0, #4]
    3748:	cmp	r2, #0
    374c:	beq	3798 <InflateFieldNames+0x120>
    3750:	cmp	r6, #1
    3754:	cmpeq	r1, #0
    3758:	bne	3798 <InflateFieldNames+0x120>
    375c:	stm	r0, {r7, r8}
    3760:	mov	r0, r7
    3764:	mov	r1, #1
    3768:	mov	r2, #1
    376c:	ldr	r3, [r9]
    3770:	bl	18b8 <fread@plt>
    3774:	mov	r6, r0
    3778:	add	r4, r0, r4
    377c:	ldr	r0, [r5, #52]	; 0x34
    3780:	mov	r1, #0
    3784:	ldr	r0, [r0, #12]
    3788:	bl	17ec <inflate@plt>
    378c:	cmp	r0, #0
    3790:	beq	3738 <InflateFieldNames+0xc0>
    3794:	b	3704 <InflateFieldNames+0x8c>
    3798:	cmp	r1, #0
    379c:	beq	37c8 <InflateFieldNames+0x150>
    37a0:	ldr	r0, [r9]
    37a4:	rsb	r1, r1, #0
    37a8:	mov	r2, #1
    37ac:	bl	1a2c <fseek@plt>
    37b0:	ldr	r0, [r5, #52]	; 0x34
    37b4:	mov	r2, #0
    37b8:	ldr	r0, [r0, #12]
    37bc:	ldr	r1, [r0, #4]
    37c0:	str	r2, [r0, #4]
    37c4:	sub	r4, r4, r1
    37c8:	mov	r0, r4
    37cc:	sub	sp, fp, #28
    37d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    37d4:	.word	0x0006858a

000037d8 <ReadDoubleData>:
    37d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    37dc:	add	fp, sp, #28
    37e0:	sub	sp, sp, #4
    37e4:	vpush	{d8-d9}
    37e8:	sub	sp, sp, #2224	; 0x8b0
    37ec:	cmp	r0, #0
    37f0:	mov	r5, #0
    37f4:	str	r0, [sp, #36]	; 0x24
    37f8:	movne	r7, r1
    37fc:	cmpne	r1, #0
    3800:	bne	3818 <ReadDoubleData+0x40>
    3804:	mov	r0, r5
    3808:	sub	sp, fp, #48	; 0x30
    380c:	vpop	{d8-d9}
    3810:	add	sp, sp, #4
    3814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3818:	ldr	r0, [sp, #36]	; 0x24
    381c:	ldr	r0, [r0]
    3820:	cmp	r0, #0
    3824:	beq	3804 <ReadDoubleData+0x2c>
    3828:	mov	r0, r2
    382c:	mov	r6, r3
    3830:	mov	r4, r2
    3834:	bl	1924 <Mat_SizeOf@plt>
    3838:	str	r0, [sp, #32]
    383c:	sub	r0, r4, #1
    3840:	cmp	r0, #12
    3844:	bhi	3804 <ReadDoubleData+0x2c>
    3848:	add	r1, pc, #4
    384c:	ldr	r0, [r1, r0, lsl #2]
    3850:	add	pc, r1, r0
    3854:	.word	0x00000034
    3858:	.word	0x00000108
    385c:	.word	0x000001dc
    3860:	.word	0x00000244
    3864:	.word	0x000002ac
    3868:	.word	0x00000314
    386c:	.word	0x0000037c
    3870:	.word	0xffffffb0
    3874:	.word	0x000003e0
    3878:	.word	0xffffffb0
    387c:	.word	0xffffffb0
    3880:	.word	0x00000428
    3884:	.word	0x0000048c
    3888:	cmp	r6, #256	; 0x100
    388c:	bgt	3d44 <ReadDoubleData+0x56c>
    3890:	ldr	r0, [sp, #36]	; 0x24
    3894:	ldr	r1, [sp, #32]
    3898:	add	r8, sp, #168	; 0xa8
    389c:	mov	r2, r6
    38a0:	ldr	r3, [r0]
    38a4:	mov	r0, r8
    38a8:	bl	18b8 <fread@plt>
    38ac:	mov	sl, r0
    38b0:	cmp	r6, #1
    38b4:	blt	633c <ReadDoubleData+0x2b64>
    38b8:	mov	lr, #0
    38bc:	beq	5a2c <ReadDoubleData+0x2254>
    38c0:	bic	lr, r6, #1
    38c4:	mov	r1, #1
    38c8:	str	sl, [sp, #28]
    38cc:	str	r6, [sp, #8]
    38d0:	subs	r0, lr, #2
    38d4:	add	r0, r1, r0, lsr #1
    38d8:	and	ip, r0, #1
    38dc:	beq	59dc <ReadDoubleData+0x2204>
    38e0:	sub	r3, r0, ip
    38e4:	mov	r1, #0
    38e8:	add	r9, sp, #108	; 0x6c
    38ec:	mov	r6, #32
    38f0:	add	r5, sp, #112	; 0x70
    38f4:	mov	sl, r7
    38f8:	mov	r0, r7
    38fc:	mov	r2, r7
    3900:	add	r4, r8, r1
    3904:	add	r0, r0, #16
    3908:	subs	r3, r3, #2
    390c:	add	r1, r1, #4
    3910:	ldrh	r7, [r4]
    3914:	strh	r7, [sp, #108]	; 0x6c
    3918:	vld1.16	{d16[0]}, [r9 :16]
    391c:	vmovl.s8	q8, d16
    3920:	vmovl.s16	q0, d16
    3924:	vcvt.f64.s32	d17, s1
    3928:	vcvt.f64.s32	d16, s0
    392c:	vst1.64	{d16-d17}, [r2], r6
    3930:	ldrh	r4, [r4, #2]
    3934:	strh	r4, [sp, #112]	; 0x70
    3938:	vld1.16	{d16[0]}, [r5 :16]
    393c:	vmovl.s8	q8, d16
    3940:	vmovl.s16	q0, d16
    3944:	vcvt.f64.s32	d17, s1
    3948:	vcvt.f64.s32	d16, s0
    394c:	vst1.64	{d16-d17}, [r0]
    3950:	mov	r0, r2
    3954:	bne	3900 <ReadDoubleData+0x128>
    3958:	b	59e4 <ReadDoubleData+0x220c>
    395c:	cmp	r6, #256	; 0x100
    3960:	bgt	3f30 <ReadDoubleData+0x758>
    3964:	ldr	r0, [sp, #36]	; 0x24
    3968:	ldr	r1, [sp, #32]
    396c:	add	r8, sp, #168	; 0xa8
    3970:	mov	r2, r6
    3974:	ldr	r3, [r0]
    3978:	mov	r0, r8
    397c:	bl	18b8 <fread@plt>
    3980:	mov	sl, r0
    3984:	cmp	r6, #1
    3988:	blt	633c <ReadDoubleData+0x2b64>
    398c:	mov	lr, #0
    3990:	beq	5aa4 <ReadDoubleData+0x22cc>
    3994:	bic	lr, r6, #1
    3998:	mov	r1, #1
    399c:	str	sl, [sp, #28]
    39a0:	str	r6, [sp, #8]
    39a4:	subs	r0, lr, #2
    39a8:	add	r0, r1, r0, lsr #1
    39ac:	and	ip, r0, #1
    39b0:	beq	5a54 <ReadDoubleData+0x227c>
    39b4:	sub	r3, r0, ip
    39b8:	mov	r1, #0
    39bc:	add	r9, sp, #140	; 0x8c
    39c0:	mov	r6, #32
    39c4:	add	r5, sp, #144	; 0x90
    39c8:	mov	sl, r7
    39cc:	mov	r0, r7
    39d0:	mov	r2, r7
    39d4:	add	r4, r8, r1
    39d8:	add	r0, r0, #16
    39dc:	subs	r3, r3, #2
    39e0:	add	r1, r1, #4
    39e4:	ldrh	r7, [r4]
    39e8:	strh	r7, [sp, #140]	; 0x8c
    39ec:	vld1.16	{d16[0]}, [r9 :16]
    39f0:	vmovl.u8	q8, d16
    39f4:	vmovl.u16	q0, d16
    39f8:	vcvt.f64.u32	d17, s1
    39fc:	vcvt.f64.u32	d16, s0
    3a00:	vst1.64	{d16-d17}, [r2], r6
    3a04:	ldrh	r4, [r4, #2]
    3a08:	strh	r4, [sp, #144]	; 0x90
    3a0c:	vld1.16	{d16[0]}, [r5 :16]
    3a10:	vmovl.u8	q8, d16
    3a14:	vmovl.u16	q0, d16
    3a18:	vcvt.f64.u32	d17, s1
    3a1c:	vcvt.f64.u32	d16, s0
    3a20:	vst1.64	{d16-d17}, [r0]
    3a24:	mov	r0, r2
    3a28:	bne	39d4 <ReadDoubleData+0x1fc>
    3a2c:	b	5a5c <ReadDoubleData+0x2284>
    3a30:	ldr	r0, [sp, #36]	; 0x24
    3a34:	ldr	r0, [r0, #20]
    3a38:	cmp	r0, #0
    3a3c:	beq	411c <ReadDoubleData+0x944>
    3a40:	cmp	r6, #256	; 0x100
    3a44:	bgt	46b4 <ReadDoubleData+0xedc>
    3a48:	ldr	r0, [sp, #36]	; 0x24
    3a4c:	ldr	r1, [sp, #32]
    3a50:	add	r4, sp, #168	; 0xa8
    3a54:	mov	r2, r6
    3a58:	ldr	r3, [r0]
    3a5c:	mov	r0, r4
    3a60:	bl	18b8 <fread@plt>
    3a64:	mov	sl, r0
    3a68:	cmp	r6, #1
    3a6c:	blt	633c <ReadDoubleData+0x2b64>
    3a70:	mov	r0, r4
    3a74:	bl	1c20 <Mat_int16Swap>
    3a78:	vmov	s0, r0
    3a7c:	add	r4, r4, #2
    3a80:	subs	r6, r6, #1
    3a84:	vcvt.f64.s32	d16, s0
    3a88:	vstr	d16, [r7]
    3a8c:	add	r7, r7, #8
    3a90:	bne	3a70 <ReadDoubleData+0x298>
    3a94:	b	633c <ReadDoubleData+0x2b64>
    3a98:	ldr	r0, [sp, #36]	; 0x24
    3a9c:	ldr	r0, [r0, #20]
    3aa0:	cmp	r0, #0
    3aa4:	beq	41e8 <ReadDoubleData+0xa10>
    3aa8:	cmp	r6, #256	; 0x100
    3aac:	bgt	47a8 <ReadDoubleData+0xfd0>
    3ab0:	ldr	r0, [sp, #36]	; 0x24
    3ab4:	ldr	r1, [sp, #32]
    3ab8:	add	r4, sp, #168	; 0xa8
    3abc:	mov	r2, r6
    3ac0:	ldr	r3, [r0]
    3ac4:	mov	r0, r4
    3ac8:	bl	18b8 <fread@plt>
    3acc:	mov	sl, r0
    3ad0:	cmp	r6, #1
    3ad4:	blt	633c <ReadDoubleData+0x2b64>
    3ad8:	mov	r0, r4
    3adc:	bl	1c34 <Mat_uint16Swap>
    3ae0:	vmov	s0, r0
    3ae4:	add	r4, r4, #2
    3ae8:	subs	r6, r6, #1
    3aec:	vcvt.f64.u32	d16, s0
    3af0:	vstr	d16, [r7]
    3af4:	add	r7, r7, #8
    3af8:	bne	3ad8 <ReadDoubleData+0x300>
    3afc:	b	633c <ReadDoubleData+0x2b64>
    3b00:	ldr	r0, [sp, #36]	; 0x24
    3b04:	ldr	r0, [r0, #20]
    3b08:	cmp	r0, #0
    3b0c:	beq	42b4 <ReadDoubleData+0xadc>
    3b10:	cmp	r6, #256	; 0x100
    3b14:	bgt	489c <ReadDoubleData+0x10c4>
    3b18:	ldr	r0, [sp, #36]	; 0x24
    3b1c:	ldr	r1, [sp, #32]
    3b20:	add	r4, sp, #168	; 0xa8
    3b24:	mov	r2, r6
    3b28:	ldr	r3, [r0]
    3b2c:	mov	r0, r4
    3b30:	bl	18b8 <fread@plt>
    3b34:	mov	sl, r0
    3b38:	cmp	r6, #1
    3b3c:	blt	633c <ReadDoubleData+0x2b64>
    3b40:	mov	r0, r4
    3b44:	bl	1bf8 <Mat_int32Swap>
    3b48:	vmov	s0, r0
    3b4c:	add	r4, r4, #4
    3b50:	subs	r6, r6, #1
    3b54:	vcvt.f64.s32	d16, s0
    3b58:	vstr	d16, [r7]
    3b5c:	add	r7, r7, #8
    3b60:	bne	3b40 <ReadDoubleData+0x368>
    3b64:	b	633c <ReadDoubleData+0x2b64>
    3b68:	ldr	r0, [sp, #36]	; 0x24
    3b6c:	ldr	r0, [r0, #20]
    3b70:	cmp	r0, #0
    3b74:	beq	4364 <ReadDoubleData+0xb8c>
    3b78:	cmp	r6, #256	; 0x100
    3b7c:	bgt	4990 <ReadDoubleData+0x11b8>
    3b80:	ldr	r0, [sp, #36]	; 0x24
    3b84:	ldr	r1, [sp, #32]
    3b88:	add	r4, sp, #168	; 0xa8
    3b8c:	mov	r2, r6
    3b90:	ldr	r3, [r0]
    3b94:	mov	r0, r4
    3b98:	bl	18b8 <fread@plt>
    3b9c:	mov	sl, r0
    3ba0:	cmp	r6, #1
    3ba4:	blt	633c <ReadDoubleData+0x2b64>
    3ba8:	mov	r0, r4
    3bac:	bl	1c0c <Mat_uint32Swap>
    3bb0:	vmov	s0, r0
    3bb4:	add	r4, r4, #4
    3bb8:	subs	r6, r6, #1
    3bbc:	vcvt.f64.u32	d16, s0
    3bc0:	vstr	d16, [r7]
    3bc4:	add	r7, r7, #8
    3bc8:	bne	3ba8 <ReadDoubleData+0x3d0>
    3bcc:	b	633c <ReadDoubleData+0x2b64>
    3bd0:	ldr	r0, [sp, #36]	; 0x24
    3bd4:	ldr	r0, [r0, #20]
    3bd8:	cmp	r0, #0
    3bdc:	beq	4414 <ReadDoubleData+0xc3c>
    3be0:	cmp	r6, #256	; 0x100
    3be4:	bgt	4a84 <ReadDoubleData+0x12ac>
    3be8:	ldr	r0, [sp, #36]	; 0x24
    3bec:	ldr	r1, [sp, #32]
    3bf0:	add	r4, sp, #168	; 0xa8
    3bf4:	mov	r2, r6
    3bf8:	ldr	r3, [r0]
    3bfc:	mov	r0, r4
    3c00:	bl	18b8 <fread@plt>
    3c04:	mov	sl, r0
    3c08:	cmp	r6, #1
    3c0c:	blt	633c <ReadDoubleData+0x2b64>
    3c10:	mov	r0, r4
    3c14:	bl	1c4c <Mat_floatSwap>
    3c18:	vcvt.f64.f32	d16, s0
    3c1c:	add	r4, r4, #4
    3c20:	subs	r6, r6, #1
    3c24:	vstr	d16, [r7]
    3c28:	add	r7, r7, #8
    3c2c:	bne	3c10 <ReadDoubleData+0x438>
    3c30:	b	633c <ReadDoubleData+0x2b64>
    3c34:	ldr	r4, [sp, #36]	; 0x24
    3c38:	ldr	r1, [sp, #32]
    3c3c:	mov	r0, r7
    3c40:	mov	r2, r6
    3c44:	ldr	r3, [r4]
    3c48:	bl	18b8 <fread@plt>
    3c4c:	mov	sl, r0
    3c50:	ldr	r0, [r4, #20]
    3c54:	cmp	r0, #0
    3c58:	beq	633c <ReadDoubleData+0x2b64>
    3c5c:	cmp	r6, #1
    3c60:	blt	633c <ReadDoubleData+0x2b64>
    3c64:	mov	r0, r7
    3c68:	bl	1c90 <Mat_doubleSwap>
    3c6c:	add	r7, r7, #8
    3c70:	subs	r6, r6, #1
    3c74:	bne	3c64 <ReadDoubleData+0x48c>
    3c78:	b	633c <ReadDoubleData+0x2b64>
    3c7c:	ldr	r0, [sp, #36]	; 0x24
    3c80:	ldr	r0, [r0, #20]
    3c84:	cmp	r0, #0
    3c88:	beq	44bc <ReadDoubleData+0xce4>
    3c8c:	cmp	r6, #256	; 0x100
    3c90:	bgt	4b70 <ReadDoubleData+0x1398>
    3c94:	ldr	r0, [sp, #36]	; 0x24
    3c98:	ldr	r1, [sp, #32]
    3c9c:	add	r4, sp, #168	; 0xa8
    3ca0:	mov	r2, r6
    3ca4:	ldr	r3, [r0]
    3ca8:	mov	r0, r4
    3cac:	bl	18b8 <fread@plt>
    3cb0:	mov	sl, r0
    3cb4:	cmp	r6, #1
    3cb8:	blt	633c <ReadDoubleData+0x2b64>
    3cbc:	mov	r0, r4
    3cc0:	bl	1b84 <Mat_int64Swap>
    3cc4:	bl	6b664 <__aeabi_l2d>
    3cc8:	strd	r0, [r7]
    3ccc:	add	r4, r4, #8
    3cd0:	add	r7, r7, #8
    3cd4:	subs	r6, r6, #1
    3cd8:	bne	3cbc <ReadDoubleData+0x4e4>
    3cdc:	b	633c <ReadDoubleData+0x2b64>
    3ce0:	ldr	r0, [sp, #36]	; 0x24
    3ce4:	ldr	r0, [r0, #20]
    3ce8:	cmp	r0, #0
    3cec:	beq	45b8 <ReadDoubleData+0xde0>
    3cf0:	cmp	r6, #256	; 0x100
    3cf4:	bgt	4c60 <ReadDoubleData+0x1488>
    3cf8:	ldr	r0, [sp, #36]	; 0x24
    3cfc:	ldr	r1, [sp, #32]
    3d00:	add	r4, sp, #168	; 0xa8
    3d04:	mov	r2, r6
    3d08:	ldr	r3, [r0]
    3d0c:	mov	r0, r4
    3d10:	bl	18b8 <fread@plt>
    3d14:	mov	sl, r0
    3d18:	cmp	r6, #1
    3d1c:	blt	633c <ReadDoubleData+0x2b64>
    3d20:	mov	r0, r4
    3d24:	bl	1bd4 <Mat_uint64Swap>
    3d28:	bl	6b650 <__aeabi_ul2d>
    3d2c:	strd	r0, [r7]
    3d30:	add	r4, r4, #8
    3d34:	add	r7, r7, #8
    3d38:	subs	r6, r6, #1
    3d3c:	bne	3d20 <ReadDoubleData+0x548>
    3d40:	b	633c <ReadDoubleData+0x2b64>
    3d44:	sub	r1, r6, #256	; 0x100
    3d48:	str	r6, [sp, #8]
    3d4c:	mov	r8, r7
    3d50:	add	r0, r7, #2048	; 0x800
    3d54:	mov	r2, #0
    3d58:	mov	r7, #0
    3d5c:	add	r6, sp, #168	; 0xa8
    3d60:	add	sl, sp, #128	; 0x80
    3d64:	mov	r9, #32
    3d68:	add	r5, sp, #132	; 0x84
    3d6c:	str	r1, [sp, #12]
    3d70:	mov	r1, #256	; 0x100
    3d74:	str	r8, [sp, #4]
    3d78:	str	r2, [sp, #28]
    3d7c:	add	r2, sp, #16
    3d80:	stm	r2, {r0, r1, r7}
    3d84:	ldr	r0, [sp, #36]	; 0x24
    3d88:	ldr	r1, [sp, #32]
    3d8c:	mov	r2, #256	; 0x100
    3d90:	ldr	r3, [r0]
    3d94:	mov	r0, r6
    3d98:	bl	18b8 <fread@plt>
    3d9c:	mov	r3, r8
    3da0:	mov	r1, #0
    3da4:	mov	r2, r8
    3da8:	add	r4, r6, r1
    3dac:	add	r1, r1, #4
    3db0:	add	r3, r3, #16
    3db4:	ldrh	r7, [r4]
    3db8:	cmp	r1, #256	; 0x100
    3dbc:	strh	r7, [sp, #128]	; 0x80
    3dc0:	vld1.16	{d16[0]}, [sl :16]
    3dc4:	vmovl.s8	q8, d16
    3dc8:	vmovl.s16	q0, d16
    3dcc:	vcvt.f64.s32	d17, s1
    3dd0:	vcvt.f64.s32	d16, s0
    3dd4:	vst1.64	{d16-d17}, [r2], r9
    3dd8:	ldrh	r7, [r4, #2]
    3ddc:	strh	r7, [sp, #132]	; 0x84
    3de0:	vld1.16	{d16[0]}, [r5 :16]
    3de4:	vmovl.s8	q8, d16
    3de8:	vmovl.s16	q0, d16
    3dec:	vcvt.f64.s32	d17, s1
    3df0:	vcvt.f64.s32	d16, s0
    3df4:	vst1.64	{d16-d17}, [r3]
    3df8:	mov	r3, r2
    3dfc:	bne	3da8 <ReadDoubleData+0x5d0>
    3e00:	ldr	r1, [sp, #28]
    3e04:	ldr	r2, [sp, #24]
    3e08:	add	r8, r8, #2048	; 0x800
    3e0c:	add	r1, r0, r1
    3e10:	ldr	r0, [sp, #16]
    3e14:	add	r7, r2, #256	; 0x100
    3e18:	ldr	r2, [sp, #12]
    3e1c:	str	r1, [sp, #28]
    3e20:	ldr	r1, [sp, #20]
    3e24:	add	r0, r0, #2048	; 0x800
    3e28:	cmp	r7, r2
    3e2c:	add	r1, r1, #256	; 0x100
    3e30:	blt	3d7c <ReadDoubleData+0x5a4>
    3e34:	ldr	r4, [sp, #8]
    3e38:	cmp	r7, r4
    3e3c:	bge	6338 <ReadDoubleData+0x2b60>
    3e40:	ldr	r0, [sp, #36]	; 0x24
    3e44:	ldr	r1, [sp, #32]
    3e48:	sub	r5, r4, r7
    3e4c:	add	r8, sp, #168	; 0xa8
    3e50:	mov	r2, r5
    3e54:	ldr	r3, [r0]
    3e58:	mov	r0, r8
    3e5c:	bl	18b8 <fread@plt>
    3e60:	ldr	sl, [sp, #28]
    3e64:	cmp	r5, #1
    3e68:	add	sl, r0, sl
    3e6c:	blt	633c <ReadDoubleData+0x2b64>
    3e70:	mov	lr, #0
    3e74:	beq	5b20 <ReadDoubleData+0x2348>
    3e78:	bic	lr, r5, #1
    3e7c:	mov	r1, #1
    3e80:	str	r5, [sp, #36]	; 0x24
    3e84:	subs	r0, lr, #2
    3e88:	add	r0, r1, r0, lsr #1
    3e8c:	and	r0, r0, #1
    3e90:	str	r0, [sp, #28]
    3e94:	beq	5acc <ReadDoubleData+0x22f4>
    3e98:	ldr	r0, [sp, #24]
    3e9c:	ldr	ip, [sp, #16]
    3ea0:	add	r9, sp, #120	; 0x78
    3ea4:	mov	r5, #32
    3ea8:	sub	r0, r4, r0
    3eac:	add	r4, sp, #124	; 0x7c
    3eb0:	sub	r0, r0, #256	; 0x100
    3eb4:	bic	r0, r0, #1
    3eb8:	sub	r0, r0, #2
    3ebc:	mvn	r2, r0, lsr #1
    3ec0:	add	r0, r1, r0, lsr #1
    3ec4:	mov	r1, #0
    3ec8:	and	r0, r0, #1
    3ecc:	add	r3, r2, r0
    3ed0:	mov	r2, ip
    3ed4:	add	r6, r8, r1
    3ed8:	adds	r3, r3, #2
    3edc:	add	r1, r1, #4
    3ee0:	ldrh	r0, [r6]
    3ee4:	strh	r0, [sp, #120]	; 0x78
    3ee8:	vld1.16	{d16[0]}, [r9 :16]
    3eec:	vmovl.s8	q8, d16
    3ef0:	vmovl.s16	q0, d16
    3ef4:	vcvt.f64.s32	d17, s1
    3ef8:	vcvt.f64.s32	d16, s0
    3efc:	vst1.64	{d16-d17}, [r2], r5
    3f00:	ldrh	r0, [r6, #2]
    3f04:	strh	r0, [sp, #124]	; 0x7c
    3f08:	add	r0, ip, #16
    3f0c:	mov	ip, r2
    3f10:	vld1.16	{d16[0]}, [r4 :16]
    3f14:	vmovl.s8	q8, d16
    3f18:	vmovl.s16	q0, d16
    3f1c:	vcvt.f64.s32	d17, s1
    3f20:	vcvt.f64.s32	d16, s0
    3f24:	vst1.64	{d16-d17}, [r0]
    3f28:	bne	3ed4 <ReadDoubleData+0x6fc>
    3f2c:	b	5ad0 <ReadDoubleData+0x22f8>
    3f30:	sub	r1, r6, #256	; 0x100
    3f34:	str	r6, [sp, #8]
    3f38:	mov	r8, r7
    3f3c:	add	r0, r7, #2048	; 0x800
    3f40:	mov	r2, #0
    3f44:	mov	r7, #0
    3f48:	add	r6, sp, #168	; 0xa8
    3f4c:	add	sl, sp, #160	; 0xa0
    3f50:	mov	r9, #32
    3f54:	add	r5, sp, #164	; 0xa4
    3f58:	str	r1, [sp, #12]
    3f5c:	mov	r1, #256	; 0x100
    3f60:	str	r8, [sp, #4]
    3f64:	str	r2, [sp, #28]
    3f68:	add	r2, sp, #16
    3f6c:	stm	r2, {r0, r1, r7}
    3f70:	ldr	r0, [sp, #36]	; 0x24
    3f74:	ldr	r1, [sp, #32]
    3f78:	mov	r2, #256	; 0x100
    3f7c:	ldr	r3, [r0]
    3f80:	mov	r0, r6
    3f84:	bl	18b8 <fread@plt>
    3f88:	mov	r3, r8
    3f8c:	mov	r1, #0
    3f90:	mov	r2, r8
    3f94:	add	r4, r6, r1
    3f98:	add	r1, r1, #4
    3f9c:	add	r3, r3, #16
    3fa0:	ldrh	r7, [r4]
    3fa4:	cmp	r1, #256	; 0x100
    3fa8:	strh	r7, [sp, #160]	; 0xa0
    3fac:	vld1.16	{d16[0]}, [sl :16]
    3fb0:	vmovl.u8	q8, d16
    3fb4:	vmovl.u16	q0, d16
    3fb8:	vcvt.f64.u32	d17, s1
    3fbc:	vcvt.f64.u32	d16, s0
    3fc0:	vst1.64	{d16-d17}, [r2], r9
    3fc4:	ldrh	r7, [r4, #2]
    3fc8:	strh	r7, [sp, #164]	; 0xa4
    3fcc:	vld1.16	{d16[0]}, [r5 :16]
    3fd0:	vmovl.u8	q8, d16
    3fd4:	vmovl.u16	q0, d16
    3fd8:	vcvt.f64.u32	d17, s1
    3fdc:	vcvt.f64.u32	d16, s0
    3fe0:	vst1.64	{d16-d17}, [r3]
    3fe4:	mov	r3, r2
    3fe8:	bne	3f94 <ReadDoubleData+0x7bc>
    3fec:	ldr	r1, [sp, #28]
    3ff0:	ldr	r2, [sp, #24]
    3ff4:	add	r8, r8, #2048	; 0x800
    3ff8:	add	r1, r0, r1
    3ffc:	ldr	r0, [sp, #16]
    4000:	add	r7, r2, #256	; 0x100
    4004:	ldr	r2, [sp, #12]
    4008:	str	r1, [sp, #28]
    400c:	ldr	r1, [sp, #20]
    4010:	add	r0, r0, #2048	; 0x800
    4014:	cmp	r7, r2
    4018:	add	r1, r1, #256	; 0x100
    401c:	blt	3f68 <ReadDoubleData+0x790>
    4020:	ldr	r4, [sp, #8]
    4024:	cmp	r7, r4
    4028:	bge	6338 <ReadDoubleData+0x2b60>
    402c:	ldr	r0, [sp, #36]	; 0x24
    4030:	ldr	r1, [sp, #32]
    4034:	sub	r5, r4, r7
    4038:	add	r8, sp, #168	; 0xa8
    403c:	mov	r2, r5
    4040:	ldr	r3, [r0]
    4044:	mov	r0, r8
    4048:	bl	18b8 <fread@plt>
    404c:	ldr	sl, [sp, #28]
    4050:	cmp	r5, #1
    4054:	add	sl, r0, sl
    4058:	blt	633c <ReadDoubleData+0x2b64>
    405c:	mov	lr, #0
    4060:	beq	5bb4 <ReadDoubleData+0x23dc>
    4064:	bic	lr, r5, #1
    4068:	mov	r1, #1
    406c:	str	r5, [sp, #36]	; 0x24
    4070:	subs	r0, lr, #2
    4074:	add	r0, r1, r0, lsr #1
    4078:	and	r0, r0, #1
    407c:	str	r0, [sp, #28]
    4080:	beq	5b60 <ReadDoubleData+0x2388>
    4084:	ldr	r0, [sp, #24]
    4088:	ldr	ip, [sp, #16]
    408c:	add	r9, sp, #152	; 0x98
    4090:	mov	r5, #32
    4094:	sub	r0, r4, r0
    4098:	add	r4, sp, #156	; 0x9c
    409c:	sub	r0, r0, #256	; 0x100
    40a0:	bic	r0, r0, #1
    40a4:	sub	r0, r0, #2
    40a8:	mvn	r2, r0, lsr #1
    40ac:	add	r0, r1, r0, lsr #1
    40b0:	mov	r1, #0
    40b4:	and	r0, r0, #1
    40b8:	add	r3, r2, r0
    40bc:	mov	r2, ip
    40c0:	add	r6, r8, r1
    40c4:	adds	r3, r3, #2
    40c8:	add	r1, r1, #4
    40cc:	ldrh	r0, [r6]
    40d0:	strh	r0, [sp, #152]	; 0x98
    40d4:	vld1.16	{d16[0]}, [r9 :16]
    40d8:	vmovl.u8	q8, d16
    40dc:	vmovl.u16	q0, d16
    40e0:	vcvt.f64.u32	d17, s1
    40e4:	vcvt.f64.u32	d16, s0
    40e8:	vst1.64	{d16-d17}, [r2], r5
    40ec:	ldrh	r0, [r6, #2]
    40f0:	strh	r0, [sp, #156]	; 0x9c
    40f4:	add	r0, ip, #16
    40f8:	mov	ip, r2
    40fc:	vld1.16	{d16[0]}, [r4 :16]
    4100:	vmovl.u8	q8, d16
    4104:	vmovl.u16	q0, d16
    4108:	vcvt.f64.u32	d17, s1
    410c:	vcvt.f64.u32	d16, s0
    4110:	vst1.64	{d16-d17}, [r0]
    4114:	bne	40c0 <ReadDoubleData+0x8e8>
    4118:	b	5b64 <ReadDoubleData+0x238c>
    411c:	cmp	r6, #256	; 0x100
    4120:	bgt	4d50 <ReadDoubleData+0x1578>
    4124:	ldr	r0, [sp, #36]	; 0x24
    4128:	ldr	r1, [sp, #32]
    412c:	add	r4, sp, #168	; 0xa8
    4130:	mov	r2, r6
    4134:	ldr	r3, [r0]
    4138:	mov	r0, r4
    413c:	bl	18b8 <fread@plt>
    4140:	mov	sl, r0
    4144:	cmp	r6, #1
    4148:	blt	633c <ReadDoubleData+0x2b64>
    414c:	mov	lr, #0
    4150:	beq	5c40 <ReadDoubleData+0x2468>
    4154:	bic	lr, r6, #1
    4158:	mov	r1, #1
    415c:	mov	r9, r6
    4160:	str	sl, [sp, #28]
    4164:	subs	r0, lr, #2
    4168:	add	r0, r1, r0, lsr #1
    416c:	and	ip, r0, #1
    4170:	beq	5bf4 <ReadDoubleData+0x241c>
    4174:	sub	r3, r0, ip
    4178:	mov	r1, #0
    417c:	add	r8, sp, #44	; 0x2c
    4180:	mov	r6, #32
    4184:	add	r5, sp, #48	; 0x30
    4188:	mov	sl, r7
    418c:	mov	r0, r7
    4190:	mov	r2, r7
    4194:	ldr	r7, [r4]
    4198:	add	r0, r0, #16
    419c:	subs	r3, r3, #2
    41a0:	add	r1, r1, #4
    41a4:	str	r7, [sp, #44]	; 0x2c
    41a8:	vld1.32	{d16[0]}, [r8 :32]
    41ac:	vmovl.s16	q0, d16
    41b0:	vcvt.f64.s32	d17, s1
    41b4:	vcvt.f64.s32	d16, s0
    41b8:	vst1.64	{d16-d17}, [r2], r6
    41bc:	ldr	r7, [r4, #4]
    41c0:	add	r4, r4, #8
    41c4:	str	r7, [sp, #48]	; 0x30
    41c8:	vld1.32	{d16[0]}, [r5 :32]
    41cc:	vmovl.s16	q0, d16
    41d0:	vcvt.f64.s32	d17, s1
    41d4:	vcvt.f64.s32	d16, s0
    41d8:	vst1.64	{d16-d17}, [r0]
    41dc:	mov	r0, r2
    41e0:	bne	4194 <ReadDoubleData+0x9bc>
    41e4:	b	5bfc <ReadDoubleData+0x2424>
    41e8:	cmp	r6, #256	; 0x100
    41ec:	bgt	4f28 <ReadDoubleData+0x1750>
    41f0:	ldr	r0, [sp, #36]	; 0x24
    41f4:	ldr	r1, [sp, #32]
    41f8:	add	r4, sp, #168	; 0xa8
    41fc:	mov	r2, r6
    4200:	ldr	r3, [r0]
    4204:	mov	r0, r4
    4208:	bl	18b8 <fread@plt>
    420c:	mov	sl, r0
    4210:	cmp	r6, #1
    4214:	blt	633c <ReadDoubleData+0x2b64>
    4218:	mov	lr, #0
    421c:	beq	5cb8 <ReadDoubleData+0x24e0>
    4220:	bic	lr, r6, #1
    4224:	mov	r1, #1
    4228:	mov	r9, r6
    422c:	str	sl, [sp, #28]
    4230:	subs	r0, lr, #2
    4234:	add	r0, r1, r0, lsr #1
    4238:	and	ip, r0, #1
    423c:	beq	5c6c <ReadDoubleData+0x2494>
    4240:	sub	r3, r0, ip
    4244:	mov	r1, #0
    4248:	add	r8, sp, #76	; 0x4c
    424c:	mov	r6, #32
    4250:	add	r5, sp, #80	; 0x50
    4254:	mov	sl, r7
    4258:	mov	r0, r7
    425c:	mov	r2, r7
    4260:	ldr	r7, [r4]
    4264:	add	r0, r0, #16
    4268:	subs	r3, r3, #2
    426c:	add	r1, r1, #4
    4270:	str	r7, [sp, #76]	; 0x4c
    4274:	vld1.32	{d16[0]}, [r8 :32]
    4278:	vmovl.u16	q0, d16
    427c:	vcvt.f64.u32	d17, s1
    4280:	vcvt.f64.u32	d16, s0
    4284:	vst1.64	{d16-d17}, [r2], r6
    4288:	ldr	r7, [r4, #4]
    428c:	add	r4, r4, #8
    4290:	str	r7, [sp, #80]	; 0x50
    4294:	vld1.32	{d16[0]}, [r5 :32]
    4298:	vmovl.u16	q0, d16
    429c:	vcvt.f64.u32	d17, s1
    42a0:	vcvt.f64.u32	d16, s0
    42a4:	vst1.64	{d16-d17}, [r0]
    42a8:	mov	r0, r2
    42ac:	bne	4260 <ReadDoubleData+0xa88>
    42b0:	b	5c74 <ReadDoubleData+0x249c>
    42b4:	cmp	r6, #256	; 0x100
    42b8:	bgt	5100 <ReadDoubleData+0x1928>
    42bc:	ldr	r0, [sp, #36]	; 0x24
    42c0:	ldr	r1, [sp, #32]
    42c4:	add	r5, sp, #168	; 0xa8
    42c8:	mov	r2, r6
    42cc:	ldr	r3, [r0]
    42d0:	mov	r0, r5
    42d4:	bl	18b8 <fread@plt>
    42d8:	mov	sl, r0
    42dc:	cmp	r6, #1
    42e0:	blt	633c <ReadDoubleData+0x2b64>
    42e4:	mov	lr, #0
    42e8:	beq	5d1c <ReadDoubleData+0x2544>
    42ec:	bic	lr, r6, #1
    42f0:	mov	r1, #1
    42f4:	mov	r9, r7
    42f8:	mov	r8, r6
    42fc:	subs	r0, lr, #2
    4300:	add	r0, r1, r0, lsr #1
    4304:	and	ip, r0, #1
    4308:	beq	5ce4 <ReadDoubleData+0x250c>
    430c:	sub	r3, r0, ip
    4310:	mov	r1, #0
    4314:	mov	r7, #16
    4318:	mov	r6, #32
    431c:	mov	r0, r9
    4320:	mov	r4, r5
    4324:	mov	r2, r9
    4328:	vld1.32	{d0}, [r4], r7
    432c:	add	r0, r0, #16
    4330:	subs	r3, r3, #2
    4334:	add	r1, r1, #4
    4338:	vcvt.f64.s32	d17, s1
    433c:	vcvt.f64.s32	d16, s0
    4340:	vst1.64	{d16-d17}, [r2], r6
    4344:	vldr	d0, [r5, #8]
    4348:	mov	r5, r4
    434c:	vcvt.f64.s32	d17, s1
    4350:	vcvt.f64.s32	d16, s0
    4354:	vst1.64	{d16-d17}, [r0]
    4358:	mov	r0, r2
    435c:	bne	4328 <ReadDoubleData+0xb50>
    4360:	b	5ce8 <ReadDoubleData+0x2510>
    4364:	cmp	r6, #256	; 0x100
    4368:	bgt	528c <ReadDoubleData+0x1ab4>
    436c:	ldr	r0, [sp, #36]	; 0x24
    4370:	ldr	r1, [sp, #32]
    4374:	add	r5, sp, #168	; 0xa8
    4378:	mov	r2, r6
    437c:	ldr	r3, [r0]
    4380:	mov	r0, r5
    4384:	bl	18b8 <fread@plt>
    4388:	mov	sl, r0
    438c:	cmp	r6, #1
    4390:	blt	633c <ReadDoubleData+0x2b64>
    4394:	mov	lr, #0
    4398:	beq	5d80 <ReadDoubleData+0x25a8>
    439c:	bic	lr, r6, #1
    43a0:	mov	r1, #1
    43a4:	mov	r9, r7
    43a8:	mov	r8, r6
    43ac:	subs	r0, lr, #2
    43b0:	add	r0, r1, r0, lsr #1
    43b4:	and	ip, r0, #1
    43b8:	beq	5d48 <ReadDoubleData+0x2570>
    43bc:	sub	r3, r0, ip
    43c0:	mov	r1, #0
    43c4:	mov	r7, #16
    43c8:	mov	r6, #32
    43cc:	mov	r0, r9
    43d0:	mov	r4, r5
    43d4:	mov	r2, r9
    43d8:	vld1.32	{d0}, [r4], r7
    43dc:	add	r0, r0, #16
    43e0:	subs	r3, r3, #2
    43e4:	add	r1, r1, #4
    43e8:	vcvt.f64.u32	d17, s1
    43ec:	vcvt.f64.u32	d16, s0
    43f0:	vst1.64	{d16-d17}, [r2], r6
    43f4:	vldr	d0, [r5, #8]
    43f8:	mov	r5, r4
    43fc:	vcvt.f64.u32	d17, s1
    4400:	vcvt.f64.u32	d16, s0
    4404:	vst1.64	{d16-d17}, [r0]
    4408:	mov	r0, r2
    440c:	bne	43d8 <ReadDoubleData+0xc00>
    4410:	b	5d4c <ReadDoubleData+0x2574>
    4414:	cmp	r6, #256	; 0x100
    4418:	bgt	5418 <ReadDoubleData+0x1c40>
    441c:	ldr	r0, [sp, #36]	; 0x24
    4420:	ldr	r1, [sp, #32]
    4424:	mov	r9, r7
    4428:	add	r7, sp, #168	; 0xa8
    442c:	mov	r2, r6
    4430:	ldr	r3, [r0]
    4434:	mov	r0, r7
    4438:	bl	18b8 <fread@plt>
    443c:	mov	sl, r0
    4440:	cmp	r6, #1
    4444:	blt	633c <ReadDoubleData+0x2b64>
    4448:	mov	lr, #0
    444c:	beq	5de0 <ReadDoubleData+0x2608>
    4450:	bic	lr, r6, #1
    4454:	mov	r2, #1
    4458:	mov	r8, r6
    445c:	subs	r1, lr, #2
    4460:	add	r1, r2, r1, lsr #1
    4464:	and	ip, r1, #1
    4468:	beq	5dac <ReadDoubleData+0x25d4>
    446c:	sub	r3, r1, ip
    4470:	mov	r1, #0
    4474:	mov	r2, #16
    4478:	mov	r6, #32
    447c:	mov	r5, r9
    4480:	mov	r4, r7
    4484:	vld1.32	{d0}, [r4], r2
    4488:	add	r0, r5, #16
    448c:	subs	r3, r3, #2
    4490:	add	r1, r1, #4
    4494:	vcvt.f64.f32	d17, s1
    4498:	vcvt.f64.f32	d16, s0
    449c:	vst1.64	{d16-d17}, [r5], r6
    44a0:	vldr	d0, [r7, #8]
    44a4:	mov	r7, r4
    44a8:	vcvt.f64.f32	d17, s1
    44ac:	vcvt.f64.f32	d16, s0
    44b0:	vst1.64	{d16-d17}, [r0]
    44b4:	bne	4484 <ReadDoubleData+0xcac>
    44b8:	b	5db0 <ReadDoubleData+0x25d8>
    44bc:	cmp	r6, #256	; 0x100
    44c0:	str	r7, [sp, #4]
    44c4:	bgt	5594 <ReadDoubleData+0x1dbc>
    44c8:	ldr	r0, [sp, #36]	; 0x24
    44cc:	ldr	r1, [sp, #32]
    44d0:	add	r7, sp, #168	; 0xa8
    44d4:	mov	r2, r6
    44d8:	ldr	r3, [r0]
    44dc:	mov	r0, r7
    44e0:	bl	18b8 <fread@plt>
    44e4:	mov	sl, r0
    44e8:	cmp	r6, #1
    44ec:	blt	633c <ReadDoubleData+0x2b64>
    44f0:	mov	r1, #0
    44f4:	beq	5f0c <ReadDoubleData+0x2734>
    44f8:	bic	r0, r6, #1
    44fc:	mov	r1, #1
    4500:	str	r6, [sp, #8]
    4504:	str	sl, [sp, #28]
    4508:	str	r0, [sp, #36]	; 0x24
    450c:	subs	r0, r0, #2
    4510:	add	r0, r1, r0, lsr #1
    4514:	and	r1, r0, #1
    4518:	str	r1, [sp, #24]
    451c:	beq	5ea8 <ReadDoubleData+0x26d0>
    4520:	ldr	r8, [sp, #4]
    4524:	sub	r5, r0, r1
    4528:	mov	r6, #0
    452c:	mov	sl, #32
    4530:	mov	r4, r7
    4534:	mov	r9, r8
    4538:	vld1.64	{d8-d9}, [r4], sl
    453c:	vmov.32	r0, d9[0]
    4540:	vmov.32	r1, d9[1]
    4544:	bl	6b664 <__aeabi_l2d>
    4548:	vmov.32	r2, d8[0]
    454c:	vmov.32	r3, d8[1]
    4550:	vmov	d9, r0, r1
    4554:	mov	r0, r2
    4558:	mov	r1, r3
    455c:	bl	6b664 <__aeabi_l2d>
    4560:	vmov	d8, r0, r1
    4564:	add	r0, r7, #16
    4568:	vst1.64	{d8-d9}, [r9], sl
    456c:	vld1.64	{d8-d9}, [r0]
    4570:	vmov.32	r0, d9[0]
    4574:	vmov.32	r1, d9[1]
    4578:	bl	6b664 <__aeabi_l2d>
    457c:	vmov.32	r2, d8[0]
    4580:	vmov.32	r3, d8[1]
    4584:	vmov	d9, r0, r1
    4588:	mov	r0, r2
    458c:	mov	r1, r3
    4590:	bl	6b664 <__aeabi_l2d>
    4594:	vmov	d8, r0, r1
    4598:	add	r0, r8, #16
    459c:	subs	r5, r5, #2
    45a0:	add	r6, r6, #4
    45a4:	mov	r8, r9
    45a8:	mov	r7, r4
    45ac:	vst1.64	{d8-d9}, [r0]
    45b0:	bne	4538 <ReadDoubleData+0xd60>
    45b4:	b	5eac <ReadDoubleData+0x26d4>
    45b8:	cmp	r6, #256	; 0x100
    45bc:	str	r7, [sp, #4]
    45c0:	bgt	57b4 <ReadDoubleData+0x1fdc>
    45c4:	ldr	r0, [sp, #36]	; 0x24
    45c8:	ldr	r1, [sp, #32]
    45cc:	add	r7, sp, #168	; 0xa8
    45d0:	mov	r2, r6
    45d4:	ldr	r3, [r0]
    45d8:	mov	r0, r7
    45dc:	bl	18b8 <fread@plt>
    45e0:	mov	sl, r0
    45e4:	cmp	r6, #1
    45e8:	blt	633c <ReadDoubleData+0x2b64>
    45ec:	mov	r1, #0
    45f0:	beq	5e74 <ReadDoubleData+0x269c>
    45f4:	bic	r0, r6, #1
    45f8:	mov	r1, #1
    45fc:	str	r6, [sp, #8]
    4600:	str	sl, [sp, #28]
    4604:	str	r0, [sp, #36]	; 0x24
    4608:	subs	r0, r0, #2
    460c:	add	r0, r1, r0, lsr #1
    4610:	and	r1, r0, #1
    4614:	str	r1, [sp, #24]
    4618:	beq	5e10 <ReadDoubleData+0x2638>
    461c:	ldr	r8, [sp, #4]
    4620:	sub	r5, r0, r1
    4624:	mov	r6, #0
    4628:	mov	sl, #32
    462c:	mov	r4, r7
    4630:	mov	r9, r8
    4634:	vld1.64	{d8-d9}, [r4], sl
    4638:	vmov.32	r0, d9[0]
    463c:	vmov.32	r1, d9[1]
    4640:	bl	6b650 <__aeabi_ul2d>
    4644:	vmov.32	r2, d8[0]
    4648:	vmov.32	r3, d8[1]
    464c:	vmov	d9, r0, r1
    4650:	mov	r0, r2
    4654:	mov	r1, r3
    4658:	bl	6b650 <__aeabi_ul2d>
    465c:	vmov	d8, r0, r1
    4660:	add	r0, r7, #16
    4664:	vst1.64	{d8-d9}, [r9], sl
    4668:	vld1.64	{d8-d9}, [r0]
    466c:	vmov.32	r0, d9[0]
    4670:	vmov.32	r1, d9[1]
    4674:	bl	6b650 <__aeabi_ul2d>
    4678:	vmov.32	r2, d8[0]
    467c:	vmov.32	r3, d8[1]
    4680:	vmov	d9, r0, r1
    4684:	mov	r0, r2
    4688:	mov	r1, r3
    468c:	bl	6b650 <__aeabi_ul2d>
    4690:	vmov	d8, r0, r1
    4694:	add	r0, r8, #16
    4698:	subs	r5, r5, #2
    469c:	add	r6, r6, #4
    46a0:	mov	r8, r9
    46a4:	mov	r7, r4
    46a8:	vst1.64	{d8-d9}, [r0]
    46ac:	bne	4634 <ReadDoubleData+0xe5c>
    46b0:	b	5e14 <ReadDoubleData+0x263c>
    46b4:	sub	r0, r6, #256	; 0x100
    46b8:	str	r6, [sp, #8]
    46bc:	add	r1, r7, #2048	; 0x800
    46c0:	add	r6, sp, #168	; 0xa8
    46c4:	mov	sl, #0
    46c8:	str	r0, [sp, #24]
    46cc:	mov	r0, #0
    46d0:	str	r0, [sp, #28]
    46d4:	ldr	r0, [sp, #36]	; 0x24
    46d8:	mov	r8, r1
    46dc:	ldr	r1, [sp, #32]
    46e0:	mov	r2, #256	; 0x100
    46e4:	ldr	r3, [r0]
    46e8:	mov	r0, r6
    46ec:	bl	18b8 <fread@plt>
    46f0:	mov	r4, r0
    46f4:	mov	r9, r7
    46f8:	mov	r5, r7
    46fc:	mov	r7, #0
    4700:	add	r0, r6, r7
    4704:	bl	1c20 <Mat_int16Swap>
    4708:	vmov	s0, r0
    470c:	add	r7, r7, #2
    4710:	cmp	r7, #512	; 0x200
    4714:	vcvt.f64.s32	d16, s0
    4718:	vstmia	r5!, {d16}
    471c:	bne	4700 <ReadDoubleData+0xf28>
    4720:	add	sl, r4, sl
    4724:	ldr	r4, [sp, #28]
    4728:	ldr	r2, [sp, #24]
    472c:	mov	r7, r9
    4730:	add	r7, r9, #2048	; 0x800
    4734:	add	r1, r8, #2048	; 0x800
    4738:	add	r0, r4, #256	; 0x100
    473c:	cmp	r0, r2
    4740:	blt	46d0 <ReadDoubleData+0xef8>
    4744:	ldr	r5, [sp, #8]
    4748:	cmp	r0, r5
    474c:	bge	633c <ReadDoubleData+0x2b64>
    4750:	sub	r6, r5, r0
    4754:	ldr	r0, [sp, #36]	; 0x24
    4758:	ldr	r1, [sp, #32]
    475c:	add	r7, sp, #168	; 0xa8
    4760:	mov	r2, r6
    4764:	ldr	r3, [r0]
    4768:	mov	r0, r7
    476c:	bl	18b8 <fread@plt>
    4770:	add	sl, r0, sl
    4774:	cmp	r6, #1
    4778:	blt	633c <ReadDoubleData+0x2b64>
    477c:	sub	r0, r5, r4
    4780:	sub	r5, r0, #256	; 0x100
    4784:	mov	r0, r7
    4788:	bl	1c20 <Mat_int16Swap>
    478c:	vmov	s0, r0
    4790:	add	r7, r7, #2
    4794:	subs	r5, r5, #1
    4798:	vcvt.f64.s32	d16, s0
    479c:	vstmia	r8!, {d16}
    47a0:	bne	4784 <ReadDoubleData+0xfac>
    47a4:	b	633c <ReadDoubleData+0x2b64>
    47a8:	sub	r0, r6, #256	; 0x100
    47ac:	str	r6, [sp, #8]
    47b0:	add	r1, r7, #2048	; 0x800
    47b4:	add	r6, sp, #168	; 0xa8
    47b8:	mov	sl, #0
    47bc:	str	r0, [sp, #24]
    47c0:	mov	r0, #0
    47c4:	str	r0, [sp, #28]
    47c8:	ldr	r0, [sp, #36]	; 0x24
    47cc:	mov	r8, r1
    47d0:	ldr	r1, [sp, #32]
    47d4:	mov	r2, #256	; 0x100
    47d8:	ldr	r3, [r0]
    47dc:	mov	r0, r6
    47e0:	bl	18b8 <fread@plt>
    47e4:	mov	r4, r0
    47e8:	mov	r9, r7
    47ec:	mov	r5, r7
    47f0:	mov	r7, #0
    47f4:	add	r0, r6, r7
    47f8:	bl	1c34 <Mat_uint16Swap>
    47fc:	vmov	s0, r0
    4800:	add	r7, r7, #2
    4804:	cmp	r7, #512	; 0x200
    4808:	vcvt.f64.u32	d16, s0
    480c:	vstmia	r5!, {d16}
    4810:	bne	47f4 <ReadDoubleData+0x101c>
    4814:	add	sl, r4, sl
    4818:	ldr	r4, [sp, #28]
    481c:	ldr	r2, [sp, #24]
    4820:	mov	r7, r9
    4824:	add	r7, r9, #2048	; 0x800
    4828:	add	r1, r8, #2048	; 0x800
    482c:	add	r0, r4, #256	; 0x100
    4830:	cmp	r0, r2
    4834:	blt	47c4 <ReadDoubleData+0xfec>
    4838:	ldr	r5, [sp, #8]
    483c:	cmp	r0, r5
    4840:	bge	633c <ReadDoubleData+0x2b64>
    4844:	sub	r6, r5, r0
    4848:	ldr	r0, [sp, #36]	; 0x24
    484c:	ldr	r1, [sp, #32]
    4850:	add	r7, sp, #168	; 0xa8
    4854:	mov	r2, r6
    4858:	ldr	r3, [r0]
    485c:	mov	r0, r7
    4860:	bl	18b8 <fread@plt>
    4864:	add	sl, r0, sl
    4868:	cmp	r6, #1
    486c:	blt	633c <ReadDoubleData+0x2b64>
    4870:	sub	r0, r5, r4
    4874:	sub	r5, r0, #256	; 0x100
    4878:	mov	r0, r7
    487c:	bl	1c34 <Mat_uint16Swap>
    4880:	vmov	s0, r0
    4884:	add	r7, r7, #2
    4888:	subs	r5, r5, #1
    488c:	vcvt.f64.u32	d16, s0
    4890:	vstmia	r8!, {d16}
    4894:	bne	4878 <ReadDoubleData+0x10a0>
    4898:	b	633c <ReadDoubleData+0x2b64>
    489c:	sub	r0, r6, #256	; 0x100
    48a0:	str	r6, [sp, #8]
    48a4:	add	r1, r7, #2048	; 0x800
    48a8:	add	r6, sp, #168	; 0xa8
    48ac:	mov	sl, #0
    48b0:	str	r0, [sp, #24]
    48b4:	mov	r0, #0
    48b8:	str	r0, [sp, #28]
    48bc:	ldr	r0, [sp, #36]	; 0x24
    48c0:	mov	r8, r1
    48c4:	ldr	r1, [sp, #32]
    48c8:	mov	r2, #256	; 0x100
    48cc:	ldr	r3, [r0]
    48d0:	mov	r0, r6
    48d4:	bl	18b8 <fread@plt>
    48d8:	mov	r4, r0
    48dc:	mov	r9, r7
    48e0:	mov	r5, r7
    48e4:	mov	r7, #0
    48e8:	add	r0, r6, r7
    48ec:	bl	1bf8 <Mat_int32Swap>
    48f0:	vmov	s0, r0
    48f4:	add	r7, r7, #4
    48f8:	cmp	r7, #1024	; 0x400
    48fc:	vcvt.f64.s32	d16, s0
    4900:	vstmia	r5!, {d16}
    4904:	bne	48e8 <ReadDoubleData+0x1110>
    4908:	add	sl, r4, sl
    490c:	ldr	r4, [sp, #28]
    4910:	ldr	r2, [sp, #24]
    4914:	mov	r7, r9
    4918:	add	r7, r9, #2048	; 0x800
    491c:	add	r1, r8, #2048	; 0x800
    4920:	add	r0, r4, #256	; 0x100
    4924:	cmp	r0, r2
    4928:	blt	48b8 <ReadDoubleData+0x10e0>
    492c:	ldr	r5, [sp, #8]
    4930:	cmp	r0, r5
    4934:	bge	633c <ReadDoubleData+0x2b64>
    4938:	sub	r6, r5, r0
    493c:	ldr	r0, [sp, #36]	; 0x24
    4940:	ldr	r1, [sp, #32]
    4944:	add	r7, sp, #168	; 0xa8
    4948:	mov	r2, r6
    494c:	ldr	r3, [r0]
    4950:	mov	r0, r7
    4954:	bl	18b8 <fread@plt>
    4958:	add	sl, r0, sl
    495c:	cmp	r6, #1
    4960:	blt	633c <ReadDoubleData+0x2b64>
    4964:	sub	r0, r5, r4
    4968:	sub	r5, r0, #256	; 0x100
    496c:	mov	r0, r7
    4970:	bl	1bf8 <Mat_int32Swap>
    4974:	vmov	s0, r0
    4978:	add	r7, r7, #4
    497c:	subs	r5, r5, #1
    4980:	vcvt.f64.s32	d16, s0
    4984:	vstmia	r8!, {d16}
    4988:	bne	496c <ReadDoubleData+0x1194>
    498c:	b	633c <ReadDoubleData+0x2b64>
    4990:	sub	r0, r6, #256	; 0x100
    4994:	str	r6, [sp, #8]
    4998:	add	r1, r7, #2048	; 0x800
    499c:	add	r6, sp, #168	; 0xa8
    49a0:	mov	sl, #0
    49a4:	str	r0, [sp, #24]
    49a8:	mov	r0, #0
    49ac:	str	r0, [sp, #28]
    49b0:	ldr	r0, [sp, #36]	; 0x24
    49b4:	mov	r8, r1
    49b8:	ldr	r1, [sp, #32]
    49bc:	mov	r2, #256	; 0x100
    49c0:	ldr	r3, [r0]
    49c4:	mov	r0, r6
    49c8:	bl	18b8 <fread@plt>
    49cc:	mov	r4, r0
    49d0:	mov	r9, r7
    49d4:	mov	r5, r7
    49d8:	mov	r7, #0
    49dc:	add	r0, r6, r7
    49e0:	bl	1c0c <Mat_uint32Swap>
    49e4:	vmov	s0, r0
    49e8:	add	r7, r7, #4
    49ec:	cmp	r7, #1024	; 0x400
    49f0:	vcvt.f64.u32	d16, s0
    49f4:	vstmia	r5!, {d16}
    49f8:	bne	49dc <ReadDoubleData+0x1204>
    49fc:	add	sl, r4, sl
    4a00:	ldr	r4, [sp, #28]
    4a04:	ldr	r2, [sp, #24]
    4a08:	mov	r7, r9
    4a0c:	add	r7, r9, #2048	; 0x800
    4a10:	add	r1, r8, #2048	; 0x800
    4a14:	add	r0, r4, #256	; 0x100
    4a18:	cmp	r0, r2
    4a1c:	blt	49ac <ReadDoubleData+0x11d4>
    4a20:	ldr	r5, [sp, #8]
    4a24:	cmp	r0, r5
    4a28:	bge	633c <ReadDoubleData+0x2b64>
    4a2c:	sub	r6, r5, r0
    4a30:	ldr	r0, [sp, #36]	; 0x24
    4a34:	ldr	r1, [sp, #32]
    4a38:	add	r7, sp, #168	; 0xa8
    4a3c:	mov	r2, r6
    4a40:	ldr	r3, [r0]
    4a44:	mov	r0, r7
    4a48:	bl	18b8 <fread@plt>
    4a4c:	add	sl, r0, sl
    4a50:	cmp	r6, #1
    4a54:	blt	633c <ReadDoubleData+0x2b64>
    4a58:	sub	r0, r5, r4
    4a5c:	sub	r5, r0, #256	; 0x100
    4a60:	mov	r0, r7
    4a64:	bl	1c0c <Mat_uint32Swap>
    4a68:	vmov	s0, r0
    4a6c:	add	r7, r7, #4
    4a70:	subs	r5, r5, #1
    4a74:	vcvt.f64.u32	d16, s0
    4a78:	vstmia	r8!, {d16}
    4a7c:	bne	4a60 <ReadDoubleData+0x1288>
    4a80:	b	633c <ReadDoubleData+0x2b64>
    4a84:	sub	r0, r6, #256	; 0x100
    4a88:	str	r6, [sp, #8]
    4a8c:	add	r1, r7, #2048	; 0x800
    4a90:	add	r6, sp, #168	; 0xa8
    4a94:	mov	sl, #0
    4a98:	str	r0, [sp, #24]
    4a9c:	mov	r0, #0
    4aa0:	str	r0, [sp, #28]
    4aa4:	ldr	r0, [sp, #36]	; 0x24
    4aa8:	mov	r8, r1
    4aac:	ldr	r1, [sp, #32]
    4ab0:	mov	r2, #256	; 0x100
    4ab4:	ldr	r3, [r0]
    4ab8:	mov	r0, r6
    4abc:	bl	18b8 <fread@plt>
    4ac0:	mov	r4, r0
    4ac4:	mov	r9, r7
    4ac8:	mov	r5, r7
    4acc:	mov	r7, #0
    4ad0:	add	r0, r6, r7
    4ad4:	bl	1c4c <Mat_floatSwap>
    4ad8:	vcvt.f64.f32	d16, s0
    4adc:	add	r7, r7, #4
    4ae0:	cmp	r7, #1024	; 0x400
    4ae4:	vstmia	r5!, {d16}
    4ae8:	bne	4ad0 <ReadDoubleData+0x12f8>
    4aec:	add	sl, r4, sl
    4af0:	ldr	r4, [sp, #28]
    4af4:	ldr	r2, [sp, #24]
    4af8:	mov	r7, r9
    4afc:	add	r7, r9, #2048	; 0x800
    4b00:	add	r1, r8, #2048	; 0x800
    4b04:	add	r0, r4, #256	; 0x100
    4b08:	cmp	r0, r2
    4b0c:	blt	4aa0 <ReadDoubleData+0x12c8>
    4b10:	ldr	r5, [sp, #8]
    4b14:	cmp	r0, r5
    4b18:	bge	633c <ReadDoubleData+0x2b64>
    4b1c:	sub	r6, r5, r0
    4b20:	ldr	r0, [sp, #36]	; 0x24
    4b24:	ldr	r1, [sp, #32]
    4b28:	add	r7, sp, #168	; 0xa8
    4b2c:	mov	r2, r6
    4b30:	ldr	r3, [r0]
    4b34:	mov	r0, r7
    4b38:	bl	18b8 <fread@plt>
    4b3c:	add	sl, r0, sl
    4b40:	cmp	r6, #1
    4b44:	blt	633c <ReadDoubleData+0x2b64>
    4b48:	sub	r0, r5, r4
    4b4c:	sub	r5, r0, #256	; 0x100
    4b50:	mov	r0, r7
    4b54:	bl	1c4c <Mat_floatSwap>
    4b58:	vcvt.f64.f32	d16, s0
    4b5c:	add	r7, r7, #4
    4b60:	subs	r5, r5, #1
    4b64:	vstmia	r8!, {d16}
    4b68:	bne	4b50 <ReadDoubleData+0x1378>
    4b6c:	b	633c <ReadDoubleData+0x2b64>
    4b70:	sub	r0, r6, #256	; 0x100
    4b74:	str	r6, [sp, #8]
    4b78:	mov	sl, r7
    4b7c:	add	r1, r7, #2048	; 0x800
    4b80:	add	r6, sp, #168	; 0xa8
    4b84:	mov	r8, #0
    4b88:	str	r0, [sp, #28]
    4b8c:	mov	r0, #0
    4b90:	mov	r9, r0
    4b94:	ldr	r0, [sp, #36]	; 0x24
    4b98:	mov	r7, r1
    4b9c:	ldr	r1, [sp, #32]
    4ba0:	mov	r2, #256	; 0x100
    4ba4:	ldr	r3, [r0]
    4ba8:	mov	r0, r6
    4bac:	bl	18b8 <fread@plt>
    4bb0:	mov	r4, r0
    4bb4:	mov	r5, #0
    4bb8:	add	r0, r6, r5
    4bbc:	bl	1b84 <Mat_int64Swap>
    4bc0:	bl	6b664 <__aeabi_l2d>
    4bc4:	mov	r2, sl
    4bc8:	str	r0, [r2, r5]!
    4bcc:	add	r5, r5, #8
    4bd0:	cmp	r5, #2048	; 0x800
    4bd4:	str	r1, [r2, #4]
    4bd8:	bne	4bb8 <ReadDoubleData+0x13e0>
    4bdc:	ldr	r2, [sp, #28]
    4be0:	add	r0, r9, #256	; 0x100
    4be4:	add	r8, r4, r8
    4be8:	add	sl, sl, #2048	; 0x800
    4bec:	add	r1, r7, #2048	; 0x800
    4bf0:	cmp	r0, r2
    4bf4:	blt	4b90 <ReadDoubleData+0x13b8>
    4bf8:	ldr	r5, [sp, #8]
    4bfc:	cmp	r0, r5
    4c00:	bge	615c <ReadDoubleData+0x2984>
    4c04:	sub	r6, r5, r0
    4c08:	ldr	r0, [sp, #36]	; 0x24
    4c0c:	ldr	r1, [sp, #32]
    4c10:	add	r4, sp, #168	; 0xa8
    4c14:	mov	r2, r6
    4c18:	ldr	r3, [r0]
    4c1c:	mov	r0, r4
    4c20:	bl	18b8 <fread@plt>
    4c24:	mov	sl, r8
    4c28:	add	sl, r0, r8
    4c2c:	cmp	r6, #1
    4c30:	blt	633c <ReadDoubleData+0x2b64>
    4c34:	sub	r0, r5, r9
    4c38:	sub	r5, r0, #256	; 0x100
    4c3c:	mov	r0, r4
    4c40:	bl	1b84 <Mat_int64Swap>
    4c44:	bl	6b664 <__aeabi_l2d>
    4c48:	strd	r0, [r7]
    4c4c:	add	r7, r7, #8
    4c50:	add	r4, r4, #8
    4c54:	subs	r5, r5, #1
    4c58:	bne	4c3c <ReadDoubleData+0x1464>
    4c5c:	b	633c <ReadDoubleData+0x2b64>
    4c60:	sub	r0, r6, #256	; 0x100
    4c64:	str	r6, [sp, #8]
    4c68:	mov	r8, r7
    4c6c:	add	r1, r7, #2048	; 0x800
    4c70:	add	r6, sp, #168	; 0xa8
    4c74:	mov	sl, #0
    4c78:	str	r0, [sp, #24]
    4c7c:	mov	r0, #0
    4c80:	str	r0, [sp, #28]
    4c84:	ldr	r0, [sp, #36]	; 0x24
    4c88:	mov	r9, r1
    4c8c:	ldr	r1, [sp, #32]
    4c90:	mov	r2, #256	; 0x100
    4c94:	ldr	r3, [r0]
    4c98:	mov	r0, r6
    4c9c:	bl	18b8 <fread@plt>
    4ca0:	mov	r4, r0
    4ca4:	mov	r5, #0
    4ca8:	add	r0, r6, r5
    4cac:	bl	1bd4 <Mat_uint64Swap>
    4cb0:	bl	6b650 <__aeabi_ul2d>
    4cb4:	mov	r2, r8
    4cb8:	str	r0, [r2, r5]!
    4cbc:	add	r5, r5, #8
    4cc0:	cmp	r5, #2048	; 0x800
    4cc4:	str	r1, [r2, #4]
    4cc8:	bne	4ca8 <ReadDoubleData+0x14d0>
    4ccc:	ldr	r7, [sp, #28]
    4cd0:	ldr	r2, [sp, #24]
    4cd4:	add	sl, r4, sl
    4cd8:	add	r8, r8, #2048	; 0x800
    4cdc:	add	r1, r9, #2048	; 0x800
    4ce0:	add	r0, r7, #256	; 0x100
    4ce4:	cmp	r0, r2
    4ce8:	blt	4c80 <ReadDoubleData+0x14a8>
    4cec:	ldr	r5, [sp, #8]
    4cf0:	cmp	r0, r5
    4cf4:	bge	633c <ReadDoubleData+0x2b64>
    4cf8:	sub	r6, r5, r0
    4cfc:	ldr	r0, [sp, #36]	; 0x24
    4d00:	ldr	r1, [sp, #32]
    4d04:	add	r4, sp, #168	; 0xa8
    4d08:	mov	r2, r6
    4d0c:	ldr	r3, [r0]
    4d10:	mov	r0, r4
    4d14:	bl	18b8 <fread@plt>
    4d18:	add	sl, r0, sl
    4d1c:	cmp	r6, #1
    4d20:	blt	633c <ReadDoubleData+0x2b64>
    4d24:	sub	r0, r5, r7
    4d28:	sub	r5, r0, #256	; 0x100
    4d2c:	mov	r0, r4
    4d30:	bl	1bd4 <Mat_uint64Swap>
    4d34:	bl	6b650 <__aeabi_ul2d>
    4d38:	strd	r0, [r9]
    4d3c:	add	r9, r9, #8
    4d40:	add	r4, r4, #8
    4d44:	subs	r5, r5, #1
    4d48:	bne	4d2c <ReadDoubleData+0x1554>
    4d4c:	b	633c <ReadDoubleData+0x2b64>
    4d50:	sub	r1, r6, #256	; 0x100
    4d54:	str	r6, [sp, #8]
    4d58:	mov	r8, r7
    4d5c:	add	r0, r7, #2048	; 0x800
    4d60:	mov	r2, #0
    4d64:	add	r6, sp, #168	; 0xa8
    4d68:	add	r5, sp, #64	; 0x40
    4d6c:	mov	r7, #32
    4d70:	add	sl, sp, #68	; 0x44
    4d74:	mov	r9, #0
    4d78:	str	r1, [sp, #16]
    4d7c:	mov	r1, #256	; 0x100
    4d80:	str	r8, [sp, #4]
    4d84:	str	r0, [sp, #20]
    4d88:	ldr	r0, [sp, #36]	; 0x24
    4d8c:	str	r1, [sp, #28]
    4d90:	ldr	r1, [sp, #32]
    4d94:	str	r2, [sp, #24]
    4d98:	mov	r2, #256	; 0x100
    4d9c:	ldr	r3, [r0]
    4da0:	mov	r0, r6
    4da4:	bl	18b8 <fread@plt>
    4da8:	mov	r3, r8
    4dac:	mov	r1, #0
    4db0:	mov	r2, r8
    4db4:	ldr	r4, [r6, r1]
    4db8:	add	r3, r3, #16
    4dbc:	str	r4, [sp, #64]	; 0x40
    4dc0:	add	r4, r6, r1
    4dc4:	add	r1, r1, #8
    4dc8:	vld1.32	{d16[0]}, [r5 :32]
    4dcc:	cmp	r1, #512	; 0x200
    4dd0:	vmovl.s16	q0, d16
    4dd4:	vcvt.f64.s32	d17, s1
    4dd8:	vcvt.f64.s32	d16, s0
    4ddc:	vst1.64	{d16-d17}, [r2], r7
    4de0:	ldr	r4, [r4, #4]
    4de4:	str	r4, [sp, #68]	; 0x44
    4de8:	vld1.32	{d16[0]}, [sl :32]
    4dec:	vmovl.s16	q0, d16
    4df0:	vcvt.f64.s32	d17, s1
    4df4:	vcvt.f64.s32	d16, s0
    4df8:	vst1.64	{d16-d17}, [r3]
    4dfc:	mov	r3, r2
    4e00:	bne	4db4 <ReadDoubleData+0x15dc>
    4e04:	ldr	r4, [sp, #24]
    4e08:	ldr	r1, [sp, #28]
    4e0c:	add	r9, r0, r9
    4e10:	ldr	r0, [sp, #20]
    4e14:	ldr	r3, [sp, #16]
    4e18:	add	r8, r8, #2048	; 0x800
    4e1c:	add	r2, r4, #256	; 0x100
    4e20:	add	r0, r0, #2048	; 0x800
    4e24:	add	r1, r1, #256	; 0x100
    4e28:	cmp	r2, r3
    4e2c:	blt	4d84 <ReadDoubleData+0x15ac>
    4e30:	ldr	r0, [sp, #8]
    4e34:	cmp	r2, r0
    4e38:	bge	59d4 <ReadDoubleData+0x21fc>
    4e3c:	sub	r5, r0, r2
    4e40:	ldr	r0, [sp, #36]	; 0x24
    4e44:	ldr	r1, [sp, #32]
    4e48:	add	r6, sp, #168	; 0xa8
    4e4c:	str	r2, [sp, #16]
    4e50:	mov	r2, r5
    4e54:	ldr	r3, [r0]
    4e58:	mov	r0, r6
    4e5c:	bl	18b8 <fread@plt>
    4e60:	mov	sl, r9
    4e64:	add	sl, r0, r9
    4e68:	cmp	r5, #1
    4e6c:	blt	633c <ReadDoubleData+0x2b64>
    4e70:	ldr	r3, [sp, #4]
    4e74:	mov	lr, #0
    4e78:	beq	5f8c <ReadDoubleData+0x27b4>
    4e7c:	bic	lr, r5, #1
    4e80:	mov	r0, #1
    4e84:	mov	r9, r5
    4e88:	subs	r1, lr, #2
    4e8c:	add	r1, r0, r1, lsr #1
    4e90:	and	ip, r1, #1
    4e94:	beq	5f40 <ReadDoubleData+0x2768>
    4e98:	ldr	r1, [sp, #8]
    4e9c:	ldr	r7, [sp, #20]
    4ea0:	add	r8, sp, #56	; 0x38
    4ea4:	mov	r5, #32
    4ea8:	sub	r1, r1, r4
    4eac:	sub	r1, r1, #256	; 0x100
    4eb0:	bic	r1, r1, #1
    4eb4:	sub	r1, r1, #2
    4eb8:	add	r0, r0, r1, lsr #1
    4ebc:	mvn	r2, r1, lsr #1
    4ec0:	add	r1, sp, #60	; 0x3c
    4ec4:	and	r0, r0, #1
    4ec8:	add	r3, r2, r0
    4ecc:	mov	r2, #0
    4ed0:	mov	r0, r7
    4ed4:	ldr	r4, [r6]
    4ed8:	adds	r3, r3, #2
    4edc:	add	r2, r2, #4
    4ee0:	str	r4, [sp, #56]	; 0x38
    4ee4:	vld1.32	{d16[0]}, [r8 :32]
    4ee8:	vmovl.s16	q0, d16
    4eec:	vcvt.f64.s32	d17, s1
    4ef0:	vcvt.f64.s32	d16, s0
    4ef4:	vst1.64	{d16-d17}, [r0], r5
    4ef8:	ldr	r4, [r6, #4]
    4efc:	add	r6, r6, #8
    4f00:	str	r4, [sp, #60]	; 0x3c
    4f04:	add	r4, r7, #16
    4f08:	mov	r7, r0
    4f0c:	vld1.32	{d16[0]}, [r1 :32]
    4f10:	vmovl.s16	q0, d16
    4f14:	vcvt.f64.s32	d17, s1
    4f18:	vcvt.f64.s32	d16, s0
    4f1c:	vst1.64	{d16-d17}, [r4]
    4f20:	bne	4ed4 <ReadDoubleData+0x16fc>
    4f24:	b	5f44 <ReadDoubleData+0x276c>
    4f28:	sub	r1, r6, #256	; 0x100
    4f2c:	str	r6, [sp, #8]
    4f30:	mov	r8, r7
    4f34:	add	r0, r7, #2048	; 0x800
    4f38:	mov	r2, #0
    4f3c:	add	r6, sp, #168	; 0xa8
    4f40:	add	r5, sp, #96	; 0x60
    4f44:	mov	r7, #32
    4f48:	add	sl, sp, #100	; 0x64
    4f4c:	mov	r9, #0
    4f50:	str	r1, [sp, #16]
    4f54:	mov	r1, #256	; 0x100
    4f58:	str	r8, [sp, #4]
    4f5c:	str	r0, [sp, #20]
    4f60:	ldr	r0, [sp, #36]	; 0x24
    4f64:	str	r1, [sp, #28]
    4f68:	ldr	r1, [sp, #32]
    4f6c:	str	r2, [sp, #24]
    4f70:	mov	r2, #256	; 0x100
    4f74:	ldr	r3, [r0]
    4f78:	mov	r0, r6
    4f7c:	bl	18b8 <fread@plt>
    4f80:	mov	r3, r8
    4f84:	mov	r1, #0
    4f88:	mov	r2, r8
    4f8c:	ldr	r4, [r6, r1]
    4f90:	add	r3, r3, #16
    4f94:	str	r4, [sp, #96]	; 0x60
    4f98:	add	r4, r6, r1
    4f9c:	add	r1, r1, #8
    4fa0:	vld1.32	{d16[0]}, [r5 :32]
    4fa4:	cmp	r1, #512	; 0x200
    4fa8:	vmovl.u16	q0, d16
    4fac:	vcvt.f64.u32	d17, s1
    4fb0:	vcvt.f64.u32	d16, s0
    4fb4:	vst1.64	{d16-d17}, [r2], r7
    4fb8:	ldr	r4, [r4, #4]
    4fbc:	str	r4, [sp, #100]	; 0x64
    4fc0:	vld1.32	{d16[0]}, [sl :32]
    4fc4:	vmovl.u16	q0, d16
    4fc8:	vcvt.f64.u32	d17, s1
    4fcc:	vcvt.f64.u32	d16, s0
    4fd0:	vst1.64	{d16-d17}, [r3]
    4fd4:	mov	r3, r2
    4fd8:	bne	4f8c <ReadDoubleData+0x17b4>
    4fdc:	ldr	r4, [sp, #24]
    4fe0:	ldr	r1, [sp, #28]
    4fe4:	add	r9, r0, r9
    4fe8:	ldr	r0, [sp, #20]
    4fec:	ldr	r3, [sp, #16]
    4ff0:	add	r8, r8, #2048	; 0x800
    4ff4:	add	r2, r4, #256	; 0x100
    4ff8:	add	r0, r0, #2048	; 0x800
    4ffc:	add	r1, r1, #256	; 0x100
    5000:	cmp	r2, r3
    5004:	blt	4f5c <ReadDoubleData+0x1784>
    5008:	ldr	r0, [sp, #8]
    500c:	cmp	r2, r0
    5010:	bge	59d4 <ReadDoubleData+0x21fc>
    5014:	sub	r5, r0, r2
    5018:	ldr	r0, [sp, #36]	; 0x24
    501c:	ldr	r1, [sp, #32]
    5020:	add	r6, sp, #168	; 0xa8
    5024:	str	r2, [sp, #16]
    5028:	mov	r2, r5
    502c:	ldr	r3, [r0]
    5030:	mov	r0, r6
    5034:	bl	18b8 <fread@plt>
    5038:	mov	sl, r9
    503c:	add	sl, r0, r9
    5040:	cmp	r5, #1
    5044:	blt	633c <ReadDoubleData+0x2b64>
    5048:	ldr	r3, [sp, #4]
    504c:	mov	lr, #0
    5050:	beq	6018 <ReadDoubleData+0x2840>
    5054:	bic	lr, r5, #1
    5058:	mov	r0, #1
    505c:	mov	r9, r5
    5060:	subs	r1, lr, #2
    5064:	add	r1, r0, r1, lsr #1
    5068:	and	ip, r1, #1
    506c:	beq	5fcc <ReadDoubleData+0x27f4>
    5070:	ldr	r1, [sp, #8]
    5074:	ldr	r7, [sp, #20]
    5078:	add	r8, sp, #88	; 0x58
    507c:	mov	r5, #32
    5080:	sub	r1, r1, r4
    5084:	sub	r1, r1, #256	; 0x100
    5088:	bic	r1, r1, #1
    508c:	sub	r1, r1, #2
    5090:	add	r0, r0, r1, lsr #1
    5094:	mvn	r2, r1, lsr #1
    5098:	add	r1, sp, #92	; 0x5c
    509c:	and	r0, r0, #1
    50a0:	add	r3, r2, r0
    50a4:	mov	r2, #0
    50a8:	mov	r0, r7
    50ac:	ldr	r4, [r6]
    50b0:	adds	r3, r3, #2
    50b4:	add	r2, r2, #4
    50b8:	str	r4, [sp, #88]	; 0x58
    50bc:	vld1.32	{d16[0]}, [r8 :32]
    50c0:	vmovl.u16	q0, d16
    50c4:	vcvt.f64.u32	d17, s1
    50c8:	vcvt.f64.u32	d16, s0
    50cc:	vst1.64	{d16-d17}, [r0], r5
    50d0:	ldr	r4, [r6, #4]
    50d4:	add	r6, r6, #8
    50d8:	str	r4, [sp, #92]	; 0x5c
    50dc:	add	r4, r7, #16
    50e0:	mov	r7, r0
    50e4:	vld1.32	{d16[0]}, [r1 :32]
    50e8:	vmovl.u16	q0, d16
    50ec:	vcvt.f64.u32	d17, s1
    50f0:	vcvt.f64.u32	d16, s0
    50f4:	vst1.64	{d16-d17}, [r4]
    50f8:	bne	50ac <ReadDoubleData+0x18d4>
    50fc:	b	5fd0 <ReadDoubleData+0x27f8>
    5100:	sub	r1, r6, #256	; 0x100
    5104:	str	r6, [sp, #8]
    5108:	mov	r5, r7
    510c:	add	r0, r7, #2048	; 0x800
    5110:	mov	sl, #0
    5114:	add	r6, sp, #168	; 0xa8
    5118:	mov	r7, #32
    511c:	mov	r8, #0
    5120:	str	r1, [sp, #24]
    5124:	mov	r1, #256	; 0x100
    5128:	str	r5, [sp, #4]
    512c:	mov	r9, r0
    5130:	ldr	r0, [sp, #36]	; 0x24
    5134:	str	r1, [sp, #28]
    5138:	ldr	r1, [sp, #32]
    513c:	mov	r2, #256	; 0x100
    5140:	ldr	r3, [r0]
    5144:	mov	r0, r6
    5148:	bl	18b8 <fread@plt>
    514c:	mov	r3, r5
    5150:	mov	r1, #0
    5154:	mov	r2, r5
    5158:	add	r4, r6, r1
    515c:	add	r1, r1, #16
    5160:	add	r3, r3, #16
    5164:	vld1.32	{d0}, [r4]!
    5168:	cmp	r1, #1024	; 0x400
    516c:	vcvt.f64.s32	d17, s1
    5170:	vcvt.f64.s32	d16, s0
    5174:	vst1.64	{d16-d17}, [r2], r7
    5178:	vldr	d0, [r4]
    517c:	vcvt.f64.s32	d17, s1
    5180:	vcvt.f64.s32	d16, s0
    5184:	vst1.64	{d16-d17}, [r3]
    5188:	mov	r3, r2
    518c:	bne	5158 <ReadDoubleData+0x1980>
    5190:	ldr	r1, [sp, #28]
    5194:	ldr	r3, [sp, #24]
    5198:	mov	r2, sl
    519c:	add	sl, sl, #256	; 0x100
    51a0:	add	r8, r0, r8
    51a4:	add	r5, r5, #2048	; 0x800
    51a8:	add	r0, r9, #2048	; 0x800
    51ac:	add	r1, r1, #256	; 0x100
    51b0:	cmp	sl, r3
    51b4:	blt	512c <ReadDoubleData+0x1954>
    51b8:	ldr	r4, [sp, #8]
    51bc:	str	r2, [sp, #24]
    51c0:	cmp	sl, r4
    51c4:	bge	615c <ReadDoubleData+0x2984>
    51c8:	ldr	r0, [sp, #36]	; 0x24
    51cc:	ldr	r1, [sp, #32]
    51d0:	sub	r5, r4, sl
    51d4:	add	r7, sp, #168	; 0xa8
    51d8:	mov	r2, r5
    51dc:	ldr	r3, [r0]
    51e0:	mov	r0, r7
    51e4:	bl	18b8 <fread@plt>
    51e8:	add	r8, r0, r8
    51ec:	cmp	r5, #1
    51f0:	blt	615c <ReadDoubleData+0x2984>
    51f4:	mov	lr, #0
    51f8:	beq	6098 <ReadDoubleData+0x28c0>
    51fc:	bic	lr, r5, #1
    5200:	mov	r0, #1
    5204:	str	r5, [sp, #36]	; 0x24
    5208:	subs	r1, lr, #2
    520c:	add	r1, r0, r1, lsr #1
    5210:	and	ip, r1, #1
    5214:	beq	6058 <ReadDoubleData+0x2880>
    5218:	ldr	r1, [sp, #24]
    521c:	mov	r5, #32
    5220:	mov	r6, r7
    5224:	sub	r1, r4, r1
    5228:	sub	r1, r1, #256	; 0x100
    522c:	bic	r1, r1, #1
    5230:	sub	r1, r1, #2
    5234:	add	r0, r0, r1, lsr #1
    5238:	mvn	r2, r1, lsr #1
    523c:	mov	r1, #16
    5240:	and	r0, r0, #1
    5244:	add	r3, r2, r0
    5248:	mov	r2, #0
    524c:	mov	r0, r9
    5250:	vld1.32	{d0}, [r6], r1
    5254:	add	r4, r9, #16
    5258:	adds	r3, r3, #2
    525c:	add	r2, r2, #4
    5260:	vcvt.f64.s32	d17, s1
    5264:	vcvt.f64.s32	d16, s0
    5268:	vst1.64	{d16-d17}, [r0], r5
    526c:	vldr	d0, [r7, #8]
    5270:	mov	r9, r0
    5274:	mov	r7, r6
    5278:	vcvt.f64.s32	d17, s1
    527c:	vcvt.f64.s32	d16, s0
    5280:	vst1.64	{d16-d17}, [r4]
    5284:	bne	5250 <ReadDoubleData+0x1a78>
    5288:	b	605c <ReadDoubleData+0x2884>
    528c:	sub	r1, r6, #256	; 0x100
    5290:	str	r6, [sp, #8]
    5294:	mov	r5, r7
    5298:	add	r0, r7, #2048	; 0x800
    529c:	mov	sl, #0
    52a0:	add	r6, sp, #168	; 0xa8
    52a4:	mov	r7, #32
    52a8:	mov	r8, #0
    52ac:	str	r1, [sp, #24]
    52b0:	mov	r1, #256	; 0x100
    52b4:	str	r5, [sp, #4]
    52b8:	mov	r9, r0
    52bc:	ldr	r0, [sp, #36]	; 0x24
    52c0:	str	r1, [sp, #28]
    52c4:	ldr	r1, [sp, #32]
    52c8:	mov	r2, #256	; 0x100
    52cc:	ldr	r3, [r0]
    52d0:	mov	r0, r6
    52d4:	bl	18b8 <fread@plt>
    52d8:	mov	r3, r5
    52dc:	mov	r1, #0
    52e0:	mov	r2, r5
    52e4:	add	r4, r6, r1
    52e8:	add	r1, r1, #16
    52ec:	add	r3, r3, #16
    52f0:	vld1.32	{d0}, [r4]!
    52f4:	cmp	r1, #1024	; 0x400
    52f8:	vcvt.f64.u32	d17, s1
    52fc:	vcvt.f64.u32	d16, s0
    5300:	vst1.64	{d16-d17}, [r2], r7
    5304:	vldr	d0, [r4]
    5308:	vcvt.f64.u32	d17, s1
    530c:	vcvt.f64.u32	d16, s0
    5310:	vst1.64	{d16-d17}, [r3]
    5314:	mov	r3, r2
    5318:	bne	52e4 <ReadDoubleData+0x1b0c>
    531c:	ldr	r1, [sp, #28]
    5320:	ldr	r3, [sp, #24]
    5324:	mov	r2, sl
    5328:	add	sl, sl, #256	; 0x100
    532c:	add	r8, r0, r8
    5330:	add	r5, r5, #2048	; 0x800
    5334:	add	r0, r9, #2048	; 0x800
    5338:	add	r1, r1, #256	; 0x100
    533c:	cmp	sl, r3
    5340:	blt	52b8 <ReadDoubleData+0x1ae0>
    5344:	ldr	r4, [sp, #8]
    5348:	str	r2, [sp, #24]
    534c:	cmp	sl, r4
    5350:	bge	615c <ReadDoubleData+0x2984>
    5354:	ldr	r0, [sp, #36]	; 0x24
    5358:	ldr	r1, [sp, #32]
    535c:	sub	r5, r4, sl
    5360:	add	r7, sp, #168	; 0xa8
    5364:	mov	r2, r5
    5368:	ldr	r3, [r0]
    536c:	mov	r0, r7
    5370:	bl	18b8 <fread@plt>
    5374:	add	r8, r0, r8
    5378:	cmp	r5, #1
    537c:	blt	615c <ReadDoubleData+0x2984>
    5380:	mov	lr, #0
    5384:	beq	611c <ReadDoubleData+0x2944>
    5388:	bic	lr, r5, #1
    538c:	mov	r0, #1
    5390:	str	r5, [sp, #36]	; 0x24
    5394:	subs	r1, lr, #2
    5398:	add	r1, r0, r1, lsr #1
    539c:	and	ip, r1, #1
    53a0:	beq	60dc <ReadDoubleData+0x2904>
    53a4:	ldr	r1, [sp, #24]
    53a8:	mov	r5, #32
    53ac:	mov	r6, r7
    53b0:	sub	r1, r4, r1
    53b4:	sub	r1, r1, #256	; 0x100
    53b8:	bic	r1, r1, #1
    53bc:	sub	r1, r1, #2
    53c0:	add	r0, r0, r1, lsr #1
    53c4:	mvn	r2, r1, lsr #1
    53c8:	mov	r1, #16
    53cc:	and	r0, r0, #1
    53d0:	add	r3, r2, r0
    53d4:	mov	r2, #0
    53d8:	mov	r0, r9
    53dc:	vld1.32	{d0}, [r6], r1
    53e0:	add	r4, r9, #16
    53e4:	adds	r3, r3, #2
    53e8:	add	r2, r2, #4
    53ec:	vcvt.f64.u32	d17, s1
    53f0:	vcvt.f64.u32	d16, s0
    53f4:	vst1.64	{d16-d17}, [r0], r5
    53f8:	vldr	d0, [r7, #8]
    53fc:	mov	r9, r0
    5400:	mov	r7, r6
    5404:	vcvt.f64.u32	d17, s1
    5408:	vcvt.f64.u32	d16, s0
    540c:	vst1.64	{d16-d17}, [r4]
    5410:	bne	53dc <ReadDoubleData+0x1c04>
    5414:	b	60e0 <ReadDoubleData+0x2908>
    5418:	sub	r1, r6, #256	; 0x100
    541c:	str	r6, [sp, #8]
    5420:	mov	r5, r7
    5424:	add	r0, r7, #2048	; 0x800
    5428:	mov	r9, #0
    542c:	add	r6, sp, #168	; 0xa8
    5430:	mov	r7, #32
    5434:	mov	sl, #0
    5438:	str	r1, [sp, #24]
    543c:	mov	r1, #256	; 0x100
    5440:	str	r5, [sp, #4]
    5444:	mov	r8, r0
    5448:	ldr	r0, [sp, #36]	; 0x24
    544c:	str	r1, [sp, #28]
    5450:	ldr	r1, [sp, #32]
    5454:	mov	r2, #256	; 0x100
    5458:	ldr	r3, [r0]
    545c:	mov	r0, r6
    5460:	bl	18b8 <fread@plt>
    5464:	mov	r1, r5
    5468:	mov	r2, #0
    546c:	add	r3, r6, r2
    5470:	add	r4, r1, #16
    5474:	add	r2, r2, #16
    5478:	vld1.32	{d0}, [r3]!
    547c:	cmp	r2, #1024	; 0x400
    5480:	vcvt.f64.f32	d17, s1
    5484:	vcvt.f64.f32	d16, s0
    5488:	vst1.64	{d16-d17}, [r1], r7
    548c:	vldr	d0, [r3]
    5490:	vcvt.f64.f32	d17, s1
    5494:	vcvt.f64.f32	d16, s0
    5498:	vst1.64	{d16-d17}, [r4]
    549c:	bne	546c <ReadDoubleData+0x1c94>
    54a0:	ldr	r1, [sp, #28]
    54a4:	ldr	r3, [sp, #24]
    54a8:	mov	r2, r9
    54ac:	add	r9, r9, #256	; 0x100
    54b0:	add	sl, r0, sl
    54b4:	add	r5, r5, #2048	; 0x800
    54b8:	add	r0, r8, #2048	; 0x800
    54bc:	add	r1, r1, #256	; 0x100
    54c0:	cmp	r9, r3
    54c4:	blt	5444 <ReadDoubleData+0x1c6c>
    54c8:	ldr	r4, [sp, #8]
    54cc:	str	r2, [sp, #24]
    54d0:	cmp	r9, r4
    54d4:	bge	633c <ReadDoubleData+0x2b64>
    54d8:	ldr	r0, [sp, #36]	; 0x24
    54dc:	ldr	r1, [sp, #32]
    54e0:	sub	r5, r4, r9
    54e4:	add	r7, sp, #168	; 0xa8
    54e8:	mov	r2, r5
    54ec:	ldr	r3, [r0]
    54f0:	mov	r0, r7
    54f4:	bl	18b8 <fread@plt>
    54f8:	add	sl, r0, sl
    54fc:	cmp	r5, #1
    5500:	blt	633c <ReadDoubleData+0x2b64>
    5504:	mov	r0, #0
    5508:	beq	61a0 <ReadDoubleData+0x29c8>
    550c:	bic	r0, r5, #1
    5510:	mov	r1, #1
    5514:	mov	lr, r5
    5518:	subs	r2, r0, #2
    551c:	add	r2, r1, r2, lsr #1
    5520:	and	ip, r2, #1
    5524:	beq	6164 <ReadDoubleData+0x298c>
    5528:	ldr	r2, [sp, #24]
    552c:	mov	r5, #32
    5530:	mov	r6, r7
    5534:	sub	r2, r4, r2
    5538:	sub	r2, r2, #256	; 0x100
    553c:	bic	r2, r2, #1
    5540:	sub	r2, r2, #2
    5544:	add	r1, r1, r2, lsr #1
    5548:	mvn	r3, r2, lsr #1
    554c:	mov	r2, #0
    5550:	and	r1, r1, #1
    5554:	add	r3, r3, r1
    5558:	mov	r1, #16
    555c:	vld1.32	{d0}, [r6], r1
    5560:	add	r4, r8, #16
    5564:	adds	r3, r3, #2
    5568:	add	r2, r2, #4
    556c:	vcvt.f64.f32	d17, s1
    5570:	vcvt.f64.f32	d16, s0
    5574:	vst1.64	{d16-d17}, [r8], r5
    5578:	vldr	d0, [r7, #8]
    557c:	mov	r7, r6
    5580:	vcvt.f64.f32	d17, s1
    5584:	vcvt.f64.f32	d16, s0
    5588:	vst1.64	{d16-d17}, [r4]
    558c:	bne	555c <ReadDoubleData+0x1d84>
    5590:	b	6168 <ReadDoubleData+0x2990>
    5594:	sub	r1, r6, #256	; 0x100
    5598:	str	r6, [sp, #8]
    559c:	add	r0, r7, #2048	; 0x800
    55a0:	mov	r9, #0
    55a4:	add	r6, sp, #168	; 0xa8
    55a8:	mov	sl, #0
    55ac:	str	r1, [sp, #28]
    55b0:	mov	r1, #256	; 0x100
    55b4:	str	r0, [sp, #24]
    55b8:	ldr	r0, [sp, #36]	; 0x24
    55bc:	str	r1, [sp, #20]
    55c0:	ldr	r1, [sp, #32]
    55c4:	mov	r2, #256	; 0x100
    55c8:	mov	r8, sl
    55cc:	str	r9, [sp, #16]
    55d0:	ldr	r3, [r0]
    55d4:	mov	r0, r6
    55d8:	bl	18b8 <fread@plt>
    55dc:	mov	r9, r0
    55e0:	mov	r5, #0
    55e4:	add	r4, r6, r5
    55e8:	vld1.64	{d8-d9}, [r4]!
    55ec:	vmov.32	r0, d9[0]
    55f0:	vmov.32	r1, d9[1]
    55f4:	bl	6b664 <__aeabi_l2d>
    55f8:	vmov.32	r2, d8[0]
    55fc:	vmov.32	r3, d8[1]
    5600:	vmov	d9, r0, r1
    5604:	mov	r0, r2
    5608:	mov	r1, r3
    560c:	bl	6b664 <__aeabi_l2d>
    5610:	vmov	d8, r0, r1
    5614:	add	sl, r7, r5
    5618:	vst1.64	{d8-d9}, [sl]!
    561c:	vld1.64	{d8-d9}, [r4]
    5620:	vmov.32	r0, d9[0]
    5624:	vmov.32	r1, d9[1]
    5628:	bl	6b664 <__aeabi_l2d>
    562c:	vmov.32	r2, d8[0]
    5630:	vmov.32	r3, d8[1]
    5634:	vmov	d9, r0, r1
    5638:	mov	r0, r2
    563c:	mov	r1, r3
    5640:	bl	6b664 <__aeabi_l2d>
    5644:	vmov	d8, r0, r1
    5648:	add	r5, r5, #32
    564c:	cmp	r5, #2048	; 0x800
    5650:	vst1.64	{d8-d9}, [sl]
    5654:	bne	55e4 <ReadDoubleData+0x1e0c>
    5658:	mov	sl, r8
    565c:	add	sl, r9, r8
    5660:	ldr	r8, [sp, #16]
    5664:	ldr	r0, [sp, #24]
    5668:	ldr	r5, [sp, #20]
    566c:	ldr	r2, [sp, #28]
    5670:	add	r7, r7, #2048	; 0x800
    5674:	add	r9, r8, #256	; 0x100
    5678:	add	r0, r0, #2048	; 0x800
    567c:	add	r1, r5, #256	; 0x100
    5680:	cmp	r9, r2
    5684:	blt	55b4 <ReadDoubleData+0x1ddc>
    5688:	ldr	r6, [sp, #8]
    568c:	cmp	r9, r6
    5690:	bge	633c <ReadDoubleData+0x2b64>
    5694:	ldr	r0, [sp, #36]	; 0x24
    5698:	ldr	r1, [sp, #32]
    569c:	sub	r7, r6, r9
    56a0:	mov	r4, sl
    56a4:	add	sl, sp, #168	; 0xa8
    56a8:	mov	r2, r7
    56ac:	ldr	r3, [r0]
    56b0:	mov	r0, sl
    56b4:	bl	18b8 <fread@plt>
    56b8:	add	r4, r0, r4
    56bc:	cmp	r7, #1
    56c0:	str	r4, [sp, #28]
    56c4:	blt	6338 <ReadDoubleData+0x2b60>
    56c8:	mov	r2, #0
    56cc:	beq	6250 <ReadDoubleData+0x2a78>
    56d0:	bic	r0, r7, #1
    56d4:	str	r7, [sp, #36]	; 0x24
    56d8:	str	r0, [sp, #12]
    56dc:	subs	r1, r0, #2
    56e0:	mov	r0, #1
    56e4:	add	r1, r0, r1, lsr #1
    56e8:	and	r1, r1, #1
    56ec:	str	r1, [sp]
    56f0:	beq	61e4 <ReadDoubleData+0x2a0c>
    56f4:	sub	r1, r6, r8
    56f8:	mov	r7, #0
    56fc:	mov	r6, sl
    5700:	sub	r1, r1, #256	; 0x100
    5704:	bic	r1, r1, #1
    5708:	sub	r1, r1, #2
    570c:	add	r0, r0, r1, lsr #1
    5710:	mvn	r2, r1, lsr #1
    5714:	and	r0, r0, #1
    5718:	add	r5, r2, r0
    571c:	ldr	r0, [sp, #24]
    5720:	mov	r4, r0
    5724:	str	r0, [sp, #24]
    5728:	mov	r0, #32
    572c:	vld1.64	{d8-d9}, [r6], r0
    5730:	vmov.32	r0, d9[0]
    5734:	vmov.32	r1, d9[1]
    5738:	bl	6b664 <__aeabi_l2d>
    573c:	vmov.32	r2, d8[0]
    5740:	vmov.32	r3, d8[1]
    5744:	vmov	d9, r0, r1
    5748:	mov	r0, r2
    574c:	mov	r1, r3
    5750:	bl	6b664 <__aeabi_l2d>
    5754:	vmov	d8, r0, r1
    5758:	mov	r0, #32
    575c:	vst1.64	{d8-d9}, [r4], r0
    5760:	add	r0, sl, #16
    5764:	vld1.64	{d8-d9}, [r0]
    5768:	vmov.32	r0, d9[0]
    576c:	vmov.32	r1, d9[1]
    5770:	bl	6b664 <__aeabi_l2d>
    5774:	vmov.32	r2, d8[0]
    5778:	vmov.32	r3, d8[1]
    577c:	vmov	d9, r0, r1
    5780:	mov	r0, r2
    5784:	mov	r1, r3
    5788:	bl	6b664 <__aeabi_l2d>
    578c:	vmov	d8, r0, r1
    5790:	ldr	r0, [sp, #24]
    5794:	adds	r5, r5, #2
    5798:	add	r7, r7, #4
    579c:	mov	sl, r6
    57a0:	add	r0, r0, #16
    57a4:	vst1.64	{d8-d9}, [r0]
    57a8:	mov	r0, r4
    57ac:	bne	5724 <ReadDoubleData+0x1f4c>
    57b0:	b	61e8 <ReadDoubleData+0x2a10>
    57b4:	sub	r1, r6, #256	; 0x100
    57b8:	str	r6, [sp, #8]
    57bc:	add	r0, r7, #2048	; 0x800
    57c0:	mov	r9, #0
    57c4:	add	r6, sp, #168	; 0xa8
    57c8:	mov	sl, #0
    57cc:	str	r1, [sp, #28]
    57d0:	mov	r1, #256	; 0x100
    57d4:	str	r0, [sp, #24]
    57d8:	ldr	r0, [sp, #36]	; 0x24
    57dc:	str	r1, [sp, #20]
    57e0:	ldr	r1, [sp, #32]
    57e4:	mov	r2, #256	; 0x100
    57e8:	mov	r8, sl
    57ec:	str	r9, [sp, #16]
    57f0:	ldr	r3, [r0]
    57f4:	mov	r0, r6
    57f8:	bl	18b8 <fread@plt>
    57fc:	mov	r9, r0
    5800:	mov	r5, #0
    5804:	add	r4, r6, r5
    5808:	vld1.64	{d8-d9}, [r4]!
    580c:	vmov.32	r0, d9[0]
    5810:	vmov.32	r1, d9[1]
    5814:	bl	6b650 <__aeabi_ul2d>
    5818:	vmov.32	r2, d8[0]
    581c:	vmov.32	r3, d8[1]
    5820:	vmov	d9, r0, r1
    5824:	mov	r0, r2
    5828:	mov	r1, r3
    582c:	bl	6b650 <__aeabi_ul2d>
    5830:	vmov	d8, r0, r1
    5834:	add	sl, r7, r5
    5838:	vst1.64	{d8-d9}, [sl]!
    583c:	vld1.64	{d8-d9}, [r4]
    5840:	vmov.32	r0, d9[0]
    5844:	vmov.32	r1, d9[1]
    5848:	bl	6b650 <__aeabi_ul2d>
    584c:	vmov.32	r2, d8[0]
    5850:	vmov.32	r3, d8[1]
    5854:	vmov	d9, r0, r1
    5858:	mov	r0, r2
    585c:	mov	r1, r3
    5860:	bl	6b650 <__aeabi_ul2d>
    5864:	vmov	d8, r0, r1
    5868:	add	r5, r5, #32
    586c:	cmp	r5, #2048	; 0x800
    5870:	vst1.64	{d8-d9}, [sl]
    5874:	bne	5804 <ReadDoubleData+0x202c>
    5878:	mov	sl, r8
    587c:	add	sl, r9, r8
    5880:	ldr	r8, [sp, #16]
    5884:	ldr	r0, [sp, #24]
    5888:	ldr	r5, [sp, #20]
    588c:	ldr	r2, [sp, #28]
    5890:	add	r7, r7, #2048	; 0x800
    5894:	add	r9, r8, #256	; 0x100
    5898:	add	r0, r0, #2048	; 0x800
    589c:	add	r1, r5, #256	; 0x100
    58a0:	cmp	r9, r2
    58a4:	blt	57d4 <ReadDoubleData+0x1ffc>
    58a8:	ldr	r6, [sp, #8]
    58ac:	cmp	r9, r6
    58b0:	bge	633c <ReadDoubleData+0x2b64>
    58b4:	ldr	r0, [sp, #36]	; 0x24
    58b8:	ldr	r1, [sp, #32]
    58bc:	sub	r7, r6, r9
    58c0:	mov	r4, sl
    58c4:	add	sl, sp, #168	; 0xa8
    58c8:	mov	r2, r7
    58cc:	ldr	r3, [r0]
    58d0:	mov	r0, sl
    58d4:	bl	18b8 <fread@plt>
    58d8:	add	r4, r0, r4
    58dc:	cmp	r7, #1
    58e0:	str	r4, [sp, #28]
    58e4:	blt	6338 <ReadDoubleData+0x2b60>
    58e8:	mov	r2, #0
    58ec:	beq	62fc <ReadDoubleData+0x2b24>
    58f0:	bic	r0, r7, #1
    58f4:	str	r7, [sp, #36]	; 0x24
    58f8:	str	r0, [sp, #12]
    58fc:	subs	r1, r0, #2
    5900:	mov	r0, #1
    5904:	add	r1, r0, r1, lsr #1
    5908:	and	r1, r1, #1
    590c:	str	r1, [sp]
    5910:	beq	6290 <ReadDoubleData+0x2ab8>
    5914:	sub	r1, r6, r8
    5918:	mov	r7, #0
    591c:	mov	r6, sl
    5920:	sub	r1, r1, #256	; 0x100
    5924:	bic	r1, r1, #1
    5928:	sub	r1, r1, #2
    592c:	add	r0, r0, r1, lsr #1
    5930:	mvn	r2, r1, lsr #1
    5934:	and	r0, r0, #1
    5938:	add	r5, r2, r0
    593c:	ldr	r0, [sp, #24]
    5940:	mov	r4, r0
    5944:	str	r0, [sp, #24]
    5948:	mov	r0, #32
    594c:	vld1.64	{d8-d9}, [r6], r0
    5950:	vmov.32	r0, d9[0]
    5954:	vmov.32	r1, d9[1]
    5958:	bl	6b650 <__aeabi_ul2d>
    595c:	vmov.32	r2, d8[0]
    5960:	vmov.32	r3, d8[1]
    5964:	vmov	d9, r0, r1
    5968:	mov	r0, r2
    596c:	mov	r1, r3
    5970:	bl	6b650 <__aeabi_ul2d>
    5974:	vmov	d8, r0, r1
    5978:	mov	r0, #32
    597c:	vst1.64	{d8-d9}, [r4], r0
    5980:	add	r0, sl, #16
    5984:	vld1.64	{d8-d9}, [r0]
    5988:	vmov.32	r0, d9[0]
    598c:	vmov.32	r1, d9[1]
    5990:	bl	6b650 <__aeabi_ul2d>
    5994:	vmov.32	r2, d8[0]
    5998:	vmov.32	r3, d8[1]
    599c:	vmov	d9, r0, r1
    59a0:	mov	r0, r2
    59a4:	mov	r1, r3
    59a8:	bl	6b650 <__aeabi_ul2d>
    59ac:	vmov	d8, r0, r1
    59b0:	ldr	r0, [sp, #24]
    59b4:	adds	r5, r5, #2
    59b8:	add	r7, r7, #4
    59bc:	mov	sl, r6
    59c0:	add	r0, r0, #16
    59c4:	vst1.64	{d8-d9}, [r0]
    59c8:	mov	r0, r4
    59cc:	bne	5944 <ReadDoubleData+0x216c>
    59d0:	b	6294 <ReadDoubleData+0x2abc>
    59d4:	mov	sl, r9
    59d8:	b	633c <ReadDoubleData+0x2b64>
    59dc:	mov	sl, r7
    59e0:	mov	r1, #0
    59e4:	cmp	ip, #0
    59e8:	mov	r7, sl
    59ec:	beq	5a1c <ReadDoubleData+0x2244>
    59f0:	add	r0, r8, r1
    59f4:	ldrh	r0, [r0]
    59f8:	strh	r0, [sp, #104]	; 0x68
    59fc:	add	r0, sp, #104	; 0x68
    5a00:	vld1.16	{d16[0]}, [r0 :16]
    5a04:	add	r0, r7, r1, lsl #3
    5a08:	vmovl.s8	q8, d16
    5a0c:	vmovl.s16	q0, d16
    5a10:	vcvt.f64.s32	d17, s1
    5a14:	vcvt.f64.s32	d16, s0
    5a18:	vst1.64	{d16-d17}, [r0]
    5a1c:	ldr	r6, [sp, #8]
    5a20:	ldr	sl, [sp, #28]
    5a24:	cmp	lr, r6
    5a28:	beq	633c <ReadDoubleData+0x2b64>
    5a2c:	add	r1, r7, lr, lsl #3
    5a30:	add	r0, r8, lr
    5a34:	sub	r2, r6, lr
    5a38:	ldrsb	r3, [r0], #1
    5a3c:	subs	r2, r2, #1
    5a40:	vmov	s0, r3
    5a44:	vcvt.f64.s32	d16, s0
    5a48:	vstmia	r1!, {d16}
    5a4c:	bne	5a38 <ReadDoubleData+0x2260>
    5a50:	b	633c <ReadDoubleData+0x2b64>
    5a54:	mov	sl, r7
    5a58:	mov	r1, #0
    5a5c:	cmp	ip, #0
    5a60:	mov	r7, sl
    5a64:	beq	5a94 <ReadDoubleData+0x22bc>
    5a68:	add	r0, r8, r1
    5a6c:	ldrh	r0, [r0]
    5a70:	strh	r0, [sp, #136]	; 0x88
    5a74:	add	r0, sp, #136	; 0x88
    5a78:	vld1.16	{d16[0]}, [r0 :16]
    5a7c:	add	r0, r7, r1, lsl #3
    5a80:	vmovl.u8	q8, d16
    5a84:	vmovl.u16	q0, d16
    5a88:	vcvt.f64.u32	d17, s1
    5a8c:	vcvt.f64.u32	d16, s0
    5a90:	vst1.64	{d16-d17}, [r0]
    5a94:	ldr	r6, [sp, #8]
    5a98:	ldr	sl, [sp, #28]
    5a9c:	cmp	lr, r6
    5aa0:	beq	633c <ReadDoubleData+0x2b64>
    5aa4:	add	r1, r7, lr, lsl #3
    5aa8:	add	r0, r8, lr
    5aac:	sub	r2, r6, lr
    5ab0:	ldrb	r3, [r0], #1
    5ab4:	subs	r2, r2, #1
    5ab8:	vmov	s0, r3
    5abc:	vcvt.f64.u32	d16, s0
    5ac0:	vstmia	r1!, {d16}
    5ac4:	bne	5ab0 <ReadDoubleData+0x22d8>
    5ac8:	b	633c <ReadDoubleData+0x2b64>
    5acc:	mov	r1, #0
    5ad0:	ldr	r0, [sp, #28]
    5ad4:	cmp	r0, #0
    5ad8:	beq	5b10 <ReadDoubleData+0x2338>
    5adc:	add	r0, r8, r1
    5ae0:	ldrh	r0, [r0]
    5ae4:	strh	r0, [sp, #116]	; 0x74
    5ae8:	add	r0, sp, #116	; 0x74
    5aec:	vld1.16	{d16[0]}, [r0 :16]
    5af0:	add	r0, r1, r7
    5af4:	vmovl.s8	q8, d16
    5af8:	vmovl.s16	q0, d16
    5afc:	vcvt.f64.s32	d17, s1
    5b00:	vcvt.f64.s32	d16, s0
    5b04:	ldr	r1, [sp, #4]
    5b08:	add	r0, r1, r0, lsl #3
    5b0c:	vst1.64	{d16-d17}, [r0]
    5b10:	ldr	r0, [sp, #36]	; 0x24
    5b14:	ldr	r4, [sp, #8]
    5b18:	cmp	r0, lr
    5b1c:	beq	633c <ReadDoubleData+0x2b64>
    5b20:	ldr	r0, [sp, #20]
    5b24:	ldr	r2, [sp, #4]
    5b28:	add	r1, r8, lr
    5b2c:	add	r0, lr, r0
    5b30:	add	r2, r2, r0, lsl #3
    5b34:	ldr	r0, [sp, #24]
    5b38:	sub	r0, r4, r0
    5b3c:	sub	r0, r0, lr
    5b40:	sub	r0, r0, #256	; 0x100
    5b44:	ldrsb	r3, [r1], #1
    5b48:	subs	r0, r0, #1
    5b4c:	vmov	s0, r3
    5b50:	vcvt.f64.s32	d16, s0
    5b54:	vstmia	r2!, {d16}
    5b58:	bne	5b44 <ReadDoubleData+0x236c>
    5b5c:	b	633c <ReadDoubleData+0x2b64>
    5b60:	mov	r1, #0
    5b64:	ldr	r0, [sp, #28]
    5b68:	cmp	r0, #0
    5b6c:	beq	5ba4 <ReadDoubleData+0x23cc>
    5b70:	add	r0, r8, r1
    5b74:	ldrh	r0, [r0]
    5b78:	strh	r0, [sp, #148]	; 0x94
    5b7c:	add	r0, sp, #148	; 0x94
    5b80:	vld1.16	{d16[0]}, [r0 :16]
    5b84:	add	r0, r1, r7
    5b88:	vmovl.u8	q8, d16
    5b8c:	vmovl.u16	q0, d16
    5b90:	vcvt.f64.u32	d17, s1
    5b94:	vcvt.f64.u32	d16, s0
    5b98:	ldr	r1, [sp, #4]
    5b9c:	add	r0, r1, r0, lsl #3
    5ba0:	vst1.64	{d16-d17}, [r0]
    5ba4:	ldr	r0, [sp, #36]	; 0x24
    5ba8:	ldr	r4, [sp, #8]
    5bac:	cmp	r0, lr
    5bb0:	beq	633c <ReadDoubleData+0x2b64>
    5bb4:	ldr	r0, [sp, #20]
    5bb8:	ldr	r2, [sp, #4]
    5bbc:	add	r1, r8, lr
    5bc0:	add	r0, lr, r0
    5bc4:	add	r2, r2, r0, lsl #3
    5bc8:	ldr	r0, [sp, #24]
    5bcc:	sub	r0, r4, r0
    5bd0:	sub	r0, r0, lr
    5bd4:	sub	r0, r0, #256	; 0x100
    5bd8:	ldrb	r3, [r1], #1
    5bdc:	subs	r0, r0, #1
    5be0:	vmov	s0, r3
    5be4:	vcvt.f64.u32	d16, s0
    5be8:	vstmia	r2!, {d16}
    5bec:	bne	5bd8 <ReadDoubleData+0x2400>
    5bf0:	b	633c <ReadDoubleData+0x2b64>
    5bf4:	mov	sl, r7
    5bf8:	mov	r1, #0
    5bfc:	cmp	ip, #0
    5c00:	mov	r7, sl
    5c04:	beq	5c30 <ReadDoubleData+0x2458>
    5c08:	add	r0, sp, #168	; 0xa8
    5c0c:	ldr	r0, [r0, r1, lsl #1]
    5c10:	str	r0, [sp, #40]	; 0x28
    5c14:	add	r0, sp, #40	; 0x28
    5c18:	vld1.32	{d16[0]}, [r0 :32]
    5c1c:	add	r0, r7, r1, lsl #3
    5c20:	vmovl.s16	q0, d16
    5c24:	vcvt.f64.s32	d17, s1
    5c28:	vcvt.f64.s32	d16, s0
    5c2c:	vst1.64	{d16-d17}, [r0]
    5c30:	ldr	sl, [sp, #28]
    5c34:	mov	r6, r9
    5c38:	cmp	lr, r9
    5c3c:	beq	633c <ReadDoubleData+0x2b64>
    5c40:	add	r0, sp, #168	; 0xa8
    5c44:	add	r1, r7, lr, lsl #3
    5c48:	sub	r2, r6, lr
    5c4c:	add	r0, r0, lr, lsl #1
    5c50:	ldrsh	r3, [r0], #2
    5c54:	subs	r2, r2, #1
    5c58:	vmov	s0, r3
    5c5c:	vcvt.f64.s32	d16, s0
    5c60:	vstmia	r1!, {d16}
    5c64:	bne	5c50 <ReadDoubleData+0x2478>
    5c68:	b	633c <ReadDoubleData+0x2b64>
    5c6c:	mov	sl, r7
    5c70:	mov	r1, #0
    5c74:	cmp	ip, #0
    5c78:	mov	r7, sl
    5c7c:	beq	5ca8 <ReadDoubleData+0x24d0>
    5c80:	add	r0, sp, #168	; 0xa8
    5c84:	ldr	r0, [r0, r1, lsl #1]
    5c88:	str	r0, [sp, #72]	; 0x48
    5c8c:	add	r0, sp, #72	; 0x48
    5c90:	vld1.32	{d16[0]}, [r0 :32]
    5c94:	add	r0, r7, r1, lsl #3
    5c98:	vmovl.u16	q0, d16
    5c9c:	vcvt.f64.u32	d17, s1
    5ca0:	vcvt.f64.u32	d16, s0
    5ca4:	vst1.64	{d16-d17}, [r0]
    5ca8:	ldr	sl, [sp, #28]
    5cac:	mov	r6, r9
    5cb0:	cmp	lr, r9
    5cb4:	beq	633c <ReadDoubleData+0x2b64>
    5cb8:	add	r0, sp, #168	; 0xa8
    5cbc:	add	r1, r7, lr, lsl #3
    5cc0:	sub	r2, r6, lr
    5cc4:	add	r0, r0, lr, lsl #1
    5cc8:	ldrh	r3, [r0], #2
    5ccc:	subs	r2, r2, #1
    5cd0:	vmov	s0, r3
    5cd4:	vcvt.f64.u32	d16, s0
    5cd8:	vstmia	r1!, {d16}
    5cdc:	bne	5cc8 <ReadDoubleData+0x24f0>
    5ce0:	b	633c <ReadDoubleData+0x2b64>
    5ce4:	mov	r1, #0
    5ce8:	cmp	ip, #0
    5cec:	mov	r7, r9
    5cf0:	beq	5d10 <ReadDoubleData+0x2538>
    5cf4:	add	r0, sp, #168	; 0xa8
    5cf8:	add	r0, r0, r1, lsl #2
    5cfc:	vldr	d0, [r0]
    5d00:	add	r0, r7, r1, lsl #3
    5d04:	vcvt.f64.s32	d17, s1
    5d08:	vcvt.f64.s32	d16, s0
    5d0c:	vst1.64	{d16-d17}, [r0]
    5d10:	mov	r6, r8
    5d14:	cmp	lr, r8
    5d18:	beq	633c <ReadDoubleData+0x2b64>
    5d1c:	add	r0, sp, #168	; 0xa8
    5d20:	add	r1, r7, lr, lsl #3
    5d24:	sub	r2, r6, lr
    5d28:	add	r0, r0, lr, lsl #2
    5d2c:	ldr	r3, [r0], #4
    5d30:	subs	r2, r2, #1
    5d34:	vmov	s0, r3
    5d38:	vcvt.f64.s32	d16, s0
    5d3c:	vstmia	r1!, {d16}
    5d40:	bne	5d2c <ReadDoubleData+0x2554>
    5d44:	b	633c <ReadDoubleData+0x2b64>
    5d48:	mov	r1, #0
    5d4c:	cmp	ip, #0
    5d50:	mov	r7, r9
    5d54:	beq	5d74 <ReadDoubleData+0x259c>
    5d58:	add	r0, sp, #168	; 0xa8
    5d5c:	add	r0, r0, r1, lsl #2
    5d60:	vldr	d0, [r0]
    5d64:	add	r0, r7, r1, lsl #3
    5d68:	vcvt.f64.u32	d17, s1
    5d6c:	vcvt.f64.u32	d16, s0
    5d70:	vst1.64	{d16-d17}, [r0]
    5d74:	mov	r6, r8
    5d78:	cmp	lr, r8
    5d7c:	beq	633c <ReadDoubleData+0x2b64>
    5d80:	add	r0, sp, #168	; 0xa8
    5d84:	add	r1, r7, lr, lsl #3
    5d88:	sub	r2, r6, lr
    5d8c:	add	r0, r0, lr, lsl #2
    5d90:	ldr	r3, [r0], #4
    5d94:	subs	r2, r2, #1
    5d98:	vmov	s0, r3
    5d9c:	vcvt.f64.u32	d16, s0
    5da0:	vstmia	r1!, {d16}
    5da4:	bne	5d90 <ReadDoubleData+0x25b8>
    5da8:	b	633c <ReadDoubleData+0x2b64>
    5dac:	mov	r1, #0
    5db0:	cmp	ip, #0
    5db4:	beq	5dd4 <ReadDoubleData+0x25fc>
    5db8:	add	r0, sp, #168	; 0xa8
    5dbc:	add	r0, r0, r1, lsl #2
    5dc0:	vldr	d0, [r0]
    5dc4:	add	r0, r9, r1, lsl #3
    5dc8:	vcvt.f64.f32	d17, s1
    5dcc:	vcvt.f64.f32	d16, s0
    5dd0:	vst1.64	{d16-d17}, [r0]
    5dd4:	mov	r6, r8
    5dd8:	cmp	lr, r8
    5ddc:	beq	633c <ReadDoubleData+0x2b64>
    5de0:	add	r0, sp, #168	; 0xa8
    5de4:	add	r2, r9, lr, lsl #3
    5de8:	add	r1, r0, lr, lsl #2
    5dec:	sub	r0, r6, lr
    5df0:	vldr	s0, [r1]
    5df4:	add	r1, r1, #4
    5df8:	subs	r0, r0, #1
    5dfc:	vcvt.f64.f32	d16, s0
    5e00:	vstr	d16, [r2]
    5e04:	add	r2, r2, #8
    5e08:	bne	5df0 <ReadDoubleData+0x2618>
    5e0c:	b	633c <ReadDoubleData+0x2b64>
    5e10:	mov	r6, #0
    5e14:	ldr	r0, [sp, #24]
    5e18:	ldr	sl, [sp, #28]
    5e1c:	cmp	r0, #0
    5e20:	beq	5e64 <ReadDoubleData+0x268c>
    5e24:	add	r0, sp, #168	; 0xa8
    5e28:	add	r0, r0, r6, lsl #3
    5e2c:	vld1.64	{d8-d9}, [r0]
    5e30:	vmov.32	r0, d9[0]
    5e34:	vmov.32	r1, d9[1]
    5e38:	bl	6b650 <__aeabi_ul2d>
    5e3c:	vmov.32	r2, d8[0]
    5e40:	vmov.32	r3, d8[1]
    5e44:	vmov	d9, r0, r1
    5e48:	mov	r0, r2
    5e4c:	mov	r1, r3
    5e50:	bl	6b650 <__aeabi_ul2d>
    5e54:	vmov	d8, r0, r1
    5e58:	ldr	r0, [sp, #4]
    5e5c:	add	r0, r0, r6, lsl #3
    5e60:	vst1.64	{d8-d9}, [r0]
    5e64:	ldr	r6, [sp, #8]
    5e68:	ldr	r1, [sp, #36]	; 0x24
    5e6c:	cmp	r1, r6
    5e70:	beq	633c <ReadDoubleData+0x2b64>
    5e74:	add	r0, sp, #168	; 0xa8
    5e78:	sub	r6, r6, r1
    5e7c:	add	r4, r0, r1, lsl #3
    5e80:	ldr	r0, [sp, #4]
    5e84:	add	r5, r0, r1, lsl #3
    5e88:	ldrd	r0, [r4]
    5e8c:	bl	6b650 <__aeabi_ul2d>
    5e90:	strd	r0, [r5]
    5e94:	add	r4, r4, #8
    5e98:	add	r5, r5, #8
    5e9c:	subs	r6, r6, #1
    5ea0:	bne	5e88 <ReadDoubleData+0x26b0>
    5ea4:	b	633c <ReadDoubleData+0x2b64>
    5ea8:	mov	r6, #0
    5eac:	ldr	r0, [sp, #24]
    5eb0:	ldr	sl, [sp, #28]
    5eb4:	cmp	r0, #0
    5eb8:	beq	5efc <ReadDoubleData+0x2724>
    5ebc:	add	r0, sp, #168	; 0xa8
    5ec0:	add	r0, r0, r6, lsl #3
    5ec4:	vld1.64	{d8-d9}, [r0]
    5ec8:	vmov.32	r0, d9[0]
    5ecc:	vmov.32	r1, d9[1]
    5ed0:	bl	6b664 <__aeabi_l2d>
    5ed4:	vmov.32	r2, d8[0]
    5ed8:	vmov.32	r3, d8[1]
    5edc:	vmov	d9, r0, r1
    5ee0:	mov	r0, r2
    5ee4:	mov	r1, r3
    5ee8:	bl	6b664 <__aeabi_l2d>
    5eec:	vmov	d8, r0, r1
    5ef0:	ldr	r0, [sp, #4]
    5ef4:	add	r0, r0, r6, lsl #3
    5ef8:	vst1.64	{d8-d9}, [r0]
    5efc:	ldr	r6, [sp, #8]
    5f00:	ldr	r1, [sp, #36]	; 0x24
    5f04:	cmp	r1, r6
    5f08:	beq	633c <ReadDoubleData+0x2b64>
    5f0c:	add	r0, sp, #168	; 0xa8
    5f10:	sub	r6, r6, r1
    5f14:	add	r4, r0, r1, lsl #3
    5f18:	ldr	r0, [sp, #4]
    5f1c:	add	r5, r0, r1, lsl #3
    5f20:	ldrd	r0, [r4]
    5f24:	bl	6b664 <__aeabi_l2d>
    5f28:	strd	r0, [r5]
    5f2c:	add	r4, r4, #8
    5f30:	add	r5, r5, #8
    5f34:	subs	r6, r6, #1
    5f38:	bne	5f20 <ReadDoubleData+0x2748>
    5f3c:	b	633c <ReadDoubleData+0x2b64>
    5f40:	mov	r2, #0
    5f44:	ldr	r3, [sp, #4]
    5f48:	cmp	ip, #0
    5f4c:	beq	5f80 <ReadDoubleData+0x27a8>
    5f50:	add	r0, sp, #168	; 0xa8
    5f54:	ldr	r0, [r0, r2, lsl #1]
    5f58:	str	r0, [sp, #52]	; 0x34
    5f5c:	add	r0, sp, #52	; 0x34
    5f60:	vld1.32	{d16[0]}, [r0 :32]
    5f64:	ldr	r0, [sp, #16]
    5f68:	add	r0, r2, r0
    5f6c:	add	r0, r3, r0, lsl #3
    5f70:	vmovl.s16	q0, d16
    5f74:	vcvt.f64.s32	d17, s1
    5f78:	vcvt.f64.s32	d16, s0
    5f7c:	vst1.64	{d16-d17}, [r0]
    5f80:	ldr	r4, [sp, #24]
    5f84:	cmp	r9, lr
    5f88:	beq	633c <ReadDoubleData+0x2b64>
    5f8c:	ldr	r1, [sp, #28]
    5f90:	ldr	r2, [sp, #8]
    5f94:	add	r0, sp, #168	; 0xa8
    5f98:	add	r0, r0, lr, lsl #1
    5f9c:	add	r1, lr, r1
    5fa0:	sub	r2, r2, r4
    5fa4:	sub	r2, r2, lr
    5fa8:	add	r1, r3, r1, lsl #3
    5fac:	sub	r2, r2, #256	; 0x100
    5fb0:	ldrsh	r3, [r0], #2
    5fb4:	subs	r2, r2, #1
    5fb8:	vmov	s0, r3
    5fbc:	vcvt.f64.s32	d16, s0
    5fc0:	vstmia	r1!, {d16}
    5fc4:	bne	5fb0 <ReadDoubleData+0x27d8>
    5fc8:	b	633c <ReadDoubleData+0x2b64>
    5fcc:	mov	r2, #0
    5fd0:	ldr	r3, [sp, #4]
    5fd4:	cmp	ip, #0
    5fd8:	beq	600c <ReadDoubleData+0x2834>
    5fdc:	add	r0, sp, #168	; 0xa8
    5fe0:	ldr	r0, [r0, r2, lsl #1]
    5fe4:	str	r0, [sp, #84]	; 0x54
    5fe8:	add	r0, sp, #84	; 0x54
    5fec:	vld1.32	{d16[0]}, [r0 :32]
    5ff0:	ldr	r0, [sp, #16]
    5ff4:	add	r0, r2, r0
    5ff8:	add	r0, r3, r0, lsl #3
    5ffc:	vmovl.u16	q0, d16
    6000:	vcvt.f64.u32	d17, s1
    6004:	vcvt.f64.u32	d16, s0
    6008:	vst1.64	{d16-d17}, [r0]
    600c:	ldr	r4, [sp, #24]
    6010:	cmp	r9, lr
    6014:	beq	633c <ReadDoubleData+0x2b64>
    6018:	ldr	r1, [sp, #28]
    601c:	ldr	r2, [sp, #8]
    6020:	add	r0, sp, #168	; 0xa8
    6024:	add	r0, r0, lr, lsl #1
    6028:	add	r1, lr, r1
    602c:	sub	r2, r2, r4
    6030:	sub	r2, r2, lr
    6034:	add	r1, r3, r1, lsl #3
    6038:	sub	r2, r2, #256	; 0x100
    603c:	ldrh	r3, [r0], #2
    6040:	subs	r2, r2, #1
    6044:	vmov	s0, r3
    6048:	vcvt.f64.u32	d16, s0
    604c:	vstmia	r1!, {d16}
    6050:	bne	603c <ReadDoubleData+0x2864>
    6054:	b	633c <ReadDoubleData+0x2b64>
    6058:	mov	r2, #0
    605c:	cmp	ip, #0
    6060:	beq	6088 <ReadDoubleData+0x28b0>
    6064:	add	r0, sp, #168	; 0xa8
    6068:	add	r0, r0, r2, lsl #2
    606c:	vldr	d0, [r0]
    6070:	add	r0, r2, sl
    6074:	vcvt.f64.s32	d17, s1
    6078:	vcvt.f64.s32	d16, s0
    607c:	ldr	r1, [sp, #4]
    6080:	add	r0, r1, r0, lsl #3
    6084:	vst1.64	{d16-d17}, [r0]
    6088:	ldr	r0, [sp, #36]	; 0x24
    608c:	ldr	r4, [sp, #8]
    6090:	cmp	r0, lr
    6094:	beq	615c <ReadDoubleData+0x2984>
    6098:	ldr	r1, [sp, #28]
    609c:	ldr	r2, [sp, #4]
    60a0:	add	r0, sp, #168	; 0xa8
    60a4:	add	r0, r0, lr, lsl #2
    60a8:	add	r1, lr, r1
    60ac:	add	r1, r2, r1, lsl #3
    60b0:	ldr	r2, [sp, #24]
    60b4:	sub	r2, r4, r2
    60b8:	sub	r2, r2, lr
    60bc:	sub	r2, r2, #256	; 0x100
    60c0:	ldr	r3, [r0], #4
    60c4:	subs	r2, r2, #1
    60c8:	vmov	s0, r3
    60cc:	vcvt.f64.s32	d16, s0
    60d0:	vstmia	r1!, {d16}
    60d4:	bne	60c0 <ReadDoubleData+0x28e8>
    60d8:	b	615c <ReadDoubleData+0x2984>
    60dc:	mov	r2, #0
    60e0:	cmp	ip, #0
    60e4:	beq	610c <ReadDoubleData+0x2934>
    60e8:	add	r0, sp, #168	; 0xa8
    60ec:	add	r0, r0, r2, lsl #2
    60f0:	vldr	d0, [r0]
    60f4:	add	r0, r2, sl
    60f8:	vcvt.f64.u32	d17, s1
    60fc:	vcvt.f64.u32	d16, s0
    6100:	ldr	r1, [sp, #4]
    6104:	add	r0, r1, r0, lsl #3
    6108:	vst1.64	{d16-d17}, [r0]
    610c:	ldr	r0, [sp, #36]	; 0x24
    6110:	ldr	r4, [sp, #8]
    6114:	cmp	r0, lr
    6118:	beq	615c <ReadDoubleData+0x2984>
    611c:	ldr	r1, [sp, #28]
    6120:	ldr	r2, [sp, #4]
    6124:	add	r0, sp, #168	; 0xa8
    6128:	add	r0, r0, lr, lsl #2
    612c:	add	r1, lr, r1
    6130:	add	r1, r2, r1, lsl #3
    6134:	ldr	r2, [sp, #24]
    6138:	sub	r2, r4, r2
    613c:	sub	r2, r2, lr
    6140:	sub	r2, r2, #256	; 0x100
    6144:	ldr	r3, [r0], #4
    6148:	subs	r2, r2, #1
    614c:	vmov	s0, r3
    6150:	vcvt.f64.u32	d16, s0
    6154:	vstmia	r1!, {d16}
    6158:	bne	6144 <ReadDoubleData+0x296c>
    615c:	mov	sl, r8
    6160:	b	633c <ReadDoubleData+0x2b64>
    6164:	mov	r2, #0
    6168:	cmp	ip, #0
    616c:	beq	6194 <ReadDoubleData+0x29bc>
    6170:	add	r1, sp, #168	; 0xa8
    6174:	add	r1, r1, r2, lsl #2
    6178:	vldr	d0, [r1]
    617c:	add	r1, r2, r9
    6180:	ldr	r2, [sp, #4]
    6184:	add	r1, r2, r1, lsl #3
    6188:	vcvt.f64.f32	d17, s1
    618c:	vcvt.f64.f32	d16, s0
    6190:	vst1.64	{d16-d17}, [r1]
    6194:	ldr	r4, [sp, #8]
    6198:	cmp	lr, r0
    619c:	beq	633c <ReadDoubleData+0x2b64>
    61a0:	ldr	r2, [sp, #28]
    61a4:	ldr	r3, [sp, #4]
    61a8:	add	r1, sp, #168	; 0xa8
    61ac:	add	r1, r1, r0, lsl #2
    61b0:	add	r2, r0, r2
    61b4:	add	r2, r3, r2, lsl #3
    61b8:	ldr	r3, [sp, #24]
    61bc:	sub	r3, r4, r3
    61c0:	sub	r0, r3, r0
    61c4:	sub	r0, r0, #256	; 0x100
    61c8:	vldr	s0, [r1]
    61cc:	add	r1, r1, #4
    61d0:	subs	r0, r0, #1
    61d4:	vcvt.f64.f32	d16, s0
    61d8:	vstmia	r2!, {d16}
    61dc:	bne	61c8 <ReadDoubleData+0x29f0>
    61e0:	b	633c <ReadDoubleData+0x2b64>
    61e4:	mov	r7, #0
    61e8:	ldr	r0, [sp]
    61ec:	ldr	r5, [sp, #20]
    61f0:	cmp	r0, #0
    61f4:	beq	623c <ReadDoubleData+0x2a64>
    61f8:	add	r0, sp, #168	; 0xa8
    61fc:	add	r0, r0, r7, lsl #3
    6200:	vld1.64	{d8-d9}, [r0]
    6204:	vmov.32	r0, d9[0]
    6208:	vmov.32	r1, d9[1]
    620c:	bl	6b664 <__aeabi_l2d>
    6210:	vmov.32	r2, d8[0]
    6214:	vmov.32	r3, d8[1]
    6218:	vmov	d9, r0, r1
    621c:	add	r4, r7, r9
    6220:	mov	r0, r2
    6224:	mov	r1, r3
    6228:	bl	6b664 <__aeabi_l2d>
    622c:	vmov	d8, r0, r1
    6230:	ldr	r0, [sp, #4]
    6234:	add	r0, r0, r4, lsl #3
    6238:	vst1.64	{d8-d9}, [r0]
    623c:	ldr	r0, [sp, #36]	; 0x24
    6240:	ldr	r2, [sp, #12]
    6244:	ldr	r6, [sp, #8]
    6248:	cmp	r0, r2
    624c:	beq	6338 <ReadDoubleData+0x2b60>
    6250:	ldr	r1, [sp, #4]
    6254:	add	r0, sp, #168	; 0xa8
    6258:	add	r4, r0, r2, lsl #3
    625c:	add	r0, r2, r5
    6260:	add	r5, r1, r0, lsl #3
    6264:	sub	r0, r6, r8
    6268:	sub	r0, r0, r2
    626c:	sub	r6, r0, #256	; 0x100
    6270:	ldrd	r0, [r4]
    6274:	bl	6b664 <__aeabi_l2d>
    6278:	strd	r0, [r5]
    627c:	add	r5, r5, #8
    6280:	add	r4, r4, #8
    6284:	subs	r6, r6, #1
    6288:	bne	6270 <ReadDoubleData+0x2a98>
    628c:	b	6338 <ReadDoubleData+0x2b60>
    6290:	mov	r7, #0
    6294:	ldr	r0, [sp]
    6298:	ldr	r5, [sp, #20]
    629c:	cmp	r0, #0
    62a0:	beq	62e8 <ReadDoubleData+0x2b10>
    62a4:	add	r0, sp, #168	; 0xa8
    62a8:	add	r0, r0, r7, lsl #3
    62ac:	vld1.64	{d8-d9}, [r0]
    62b0:	vmov.32	r0, d9[0]
    62b4:	vmov.32	r1, d9[1]
    62b8:	bl	6b650 <__aeabi_ul2d>
    62bc:	vmov.32	r2, d8[0]
    62c0:	vmov.32	r3, d8[1]
    62c4:	vmov	d9, r0, r1
    62c8:	add	r4, r7, r9
    62cc:	mov	r0, r2
    62d0:	mov	r1, r3
    62d4:	bl	6b650 <__aeabi_ul2d>
    62d8:	vmov	d8, r0, r1
    62dc:	ldr	r0, [sp, #4]
    62e0:	add	r0, r0, r4, lsl #3
    62e4:	vst1.64	{d8-d9}, [r0]
    62e8:	ldr	r0, [sp, #36]	; 0x24
    62ec:	ldr	r2, [sp, #12]
    62f0:	ldr	r6, [sp, #8]
    62f4:	cmp	r0, r2
    62f8:	beq	6338 <ReadDoubleData+0x2b60>
    62fc:	ldr	r1, [sp, #4]
    6300:	add	r0, sp, #168	; 0xa8
    6304:	add	r4, r0, r2, lsl #3
    6308:	add	r0, r2, r5
    630c:	add	r5, r1, r0, lsl #3
    6310:	sub	r0, r6, r8
    6314:	sub	r0, r0, r2
    6318:	sub	r6, r0, #256	; 0x100
    631c:	ldrd	r0, [r4]
    6320:	bl	6b650 <__aeabi_ul2d>
    6324:	strd	r0, [r5]
    6328:	add	r5, r5, #8
    632c:	add	r4, r4, #8
    6330:	subs	r6, r6, #1
    6334:	bne	631c <ReadDoubleData+0x2b44>
    6338:	ldr	sl, [sp, #28]
    633c:	ldr	r0, [sp, #32]
    6340:	mul	r5, sl, r0
    6344:	b	3804 <ReadDoubleData+0x2c>

00006348 <ReadCompressedDoubleData>:
    6348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    634c:	add	fp, sp, #28
    6350:	sub	sp, sp, #4
    6354:	vpush	{d8-d9}
    6358:	sub	sp, sp, #40	; 0x28
    635c:	sub	sp, sp, #1024	; 0x400
    6360:	str	r0, [sp, #28]
    6364:	mov	r0, r3
    6368:	mov	r5, r3
    636c:	mov	r4, r2
    6370:	str	r1, [sp, #24]
    6374:	bl	1924 <Mat_SizeOf@plt>
    6378:	mov	r3, r0
    637c:	sub	r0, r5, #1
    6380:	mov	r9, #0
    6384:	cmp	r0, #12
    6388:	bhi	8924 <ReadCompressedDoubleData+0x25dc>
    638c:	add	r1, pc, #8
    6390:	ldr	sl, [fp, #8]
    6394:	ldr	r0, [r1, r0, lsl #2]
    6398:	add	pc, r1, r0
    639c:	.word	0x00000034
    63a0:	.word	0x000000e4
    63a4:	.word	0x00000194
    63a8:	.word	0x000001f8
    63ac:	.word	0x0000025c
    63b0:	.word	0x000002c0
    63b4:	.word	0x00000324
    63b8:	.word	0x00002588
    63bc:	.word	0x00000384
    63c0:	.word	0x00002588
    63c4:	.word	0x00002588
    63c8:	.word	0x000003d0
    63cc:	.word	0x00000430
    63d0:	cmp	sl, #1024	; 0x400
    63d4:	bgt	682c <ReadCompressedDoubleData+0x4e4>
    63d8:	mul	r9, r3, sl
    63dc:	ldr	r0, [sp, #28]
    63e0:	ldr	r1, [sp, #24]
    63e4:	add	r5, sp, #32
    63e8:	mov	r2, r5
    63ec:	mov	r3, r9
    63f0:	bl	3238 <InflateData>
    63f4:	cmp	sl, #1
    63f8:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    63fc:	mov	r0, #0
    6400:	beq	81f8 <ReadCompressedDoubleData+0x1eb0>
    6404:	bic	r0, sl, #1
    6408:	mov	r2, #1
    640c:	subs	r1, r0, #2
    6410:	add	r1, r2, r1, lsr #1
    6414:	and	ip, r1, #1
    6418:	beq	81bc <ReadCompressedDoubleData+0x1e74>
    641c:	sub	r3, r1, ip
    6420:	mov	r1, #0
    6424:	mov	r7, #32
    6428:	mov	lr, r4
    642c:	mov	r6, r4
    6430:	add	r2, r5, r1
    6434:	subs	r3, r3, #2
    6438:	add	r1, r1, #4
    643c:	vld1.16	{d16[0]}, [r2 :16]
    6440:	add	r2, r2, #2
    6444:	vmovl.s8	q8, d16
    6448:	vmovl.s16	q0, d16
    644c:	vcvt.f64.s32	d17, s1
    6450:	vcvt.f64.s32	d16, s0
    6454:	vst1.64	{d16-d17}, [r6], r7
    6458:	vld1.16	{d16[0]}, [r2 :16]
    645c:	add	r2, r4, #16
    6460:	mov	r4, r6
    6464:	vmovl.s8	q8, d16
    6468:	vmovl.s16	q0, d16
    646c:	vcvt.f64.s32	d17, s1
    6470:	vcvt.f64.s32	d16, s0
    6474:	vst1.64	{d16-d17}, [r2]
    6478:	bne	6430 <ReadCompressedDoubleData+0xe8>
    647c:	b	81c4 <ReadCompressedDoubleData+0x1e7c>
    6480:	cmp	sl, #1024	; 0x400
    6484:	bgt	69c4 <ReadCompressedDoubleData+0x67c>
    6488:	mul	r9, r3, sl
    648c:	ldr	r0, [sp, #28]
    6490:	ldr	r1, [sp, #24]
    6494:	add	r5, sp, #32
    6498:	mov	r2, r5
    649c:	mov	r3, r9
    64a0:	bl	3238 <InflateData>
    64a4:	cmp	sl, #1
    64a8:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    64ac:	mov	r0, #0
    64b0:	beq	825c <ReadCompressedDoubleData+0x1f14>
    64b4:	bic	r0, sl, #1
    64b8:	mov	r2, #1
    64bc:	subs	r1, r0, #2
    64c0:	add	r1, r2, r1, lsr #1
    64c4:	and	ip, r1, #1
    64c8:	beq	8220 <ReadCompressedDoubleData+0x1ed8>
    64cc:	sub	r3, r1, ip
    64d0:	mov	r1, #0
    64d4:	mov	r7, #32
    64d8:	mov	lr, r4
    64dc:	mov	r6, r4
    64e0:	add	r2, r5, r1
    64e4:	subs	r3, r3, #2
    64e8:	add	r1, r1, #4
    64ec:	vld1.16	{d16[0]}, [r2 :16]
    64f0:	add	r2, r2, #2
    64f4:	vmovl.u8	q8, d16
    64f8:	vmovl.u16	q0, d16
    64fc:	vcvt.f64.u32	d17, s1
    6500:	vcvt.f64.u32	d16, s0
    6504:	vst1.64	{d16-d17}, [r6], r7
    6508:	vld1.16	{d16[0]}, [r2 :16]
    650c:	add	r2, r4, #16
    6510:	mov	r4, r6
    6514:	vmovl.u8	q8, d16
    6518:	vmovl.u16	q0, d16
    651c:	vcvt.f64.u32	d17, s1
    6520:	vcvt.f64.u32	d16, s0
    6524:	vst1.64	{d16-d17}, [r2]
    6528:	bne	64e0 <ReadCompressedDoubleData+0x198>
    652c:	b	8228 <ReadCompressedDoubleData+0x1ee0>
    6530:	ldr	r0, [sp, #28]
    6534:	ldr	r0, [r0, #20]
    6538:	cmp	r0, #0
    653c:	beq	6b64 <ReadCompressedDoubleData+0x81c>
    6540:	cmp	sl, #512	; 0x200
    6544:	bgt	7090 <ReadCompressedDoubleData+0xd48>
    6548:	mul	r9, r3, sl
    654c:	ldr	r0, [sp, #28]
    6550:	ldr	r1, [sp, #24]
    6554:	add	r5, sp, #32
    6558:	mov	r2, r5
    655c:	mov	r3, r9
    6560:	bl	3238 <InflateData>
    6564:	cmp	sl, #1
    6568:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    656c:	mov	r0, r5
    6570:	bl	1c20 <Mat_int16Swap>
    6574:	vmov	s0, r0
    6578:	add	r5, r5, #2
    657c:	subs	sl, sl, #1
    6580:	vcvt.f64.s32	d16, s0
    6584:	vstr	d16, [r4]
    6588:	add	r4, r4, #8
    658c:	bne	656c <ReadCompressedDoubleData+0x224>
    6590:	b	8924 <ReadCompressedDoubleData+0x25dc>
    6594:	ldr	r0, [sp, #28]
    6598:	ldr	r0, [r0, #20]
    659c:	cmp	r0, #0
    65a0:	beq	6c0c <ReadCompressedDoubleData+0x8c4>
    65a4:	cmp	sl, #512	; 0x200
    65a8:	bgt	7164 <ReadCompressedDoubleData+0xe1c>
    65ac:	mul	r9, r3, sl
    65b0:	ldr	r0, [sp, #28]
    65b4:	ldr	r1, [sp, #24]
    65b8:	add	r5, sp, #32
    65bc:	mov	r2, r5
    65c0:	mov	r3, r9
    65c4:	bl	3238 <InflateData>
    65c8:	cmp	sl, #1
    65cc:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    65d0:	mov	r0, r5
    65d4:	bl	1c34 <Mat_uint16Swap>
    65d8:	vmov	s0, r0
    65dc:	add	r5, r5, #2
    65e0:	subs	sl, sl, #1
    65e4:	vcvt.f64.u32	d16, s0
    65e8:	vstr	d16, [r4]
    65ec:	add	r4, r4, #8
    65f0:	bne	65d0 <ReadCompressedDoubleData+0x288>
    65f4:	b	8924 <ReadCompressedDoubleData+0x25dc>
    65f8:	ldr	r0, [sp, #28]
    65fc:	ldr	r0, [r0, #20]
    6600:	cmp	r0, #0
    6604:	beq	6cb4 <ReadCompressedDoubleData+0x96c>
    6608:	cmp	sl, #256	; 0x100
    660c:	bgt	7238 <ReadCompressedDoubleData+0xef0>
    6610:	mul	r9, r3, sl
    6614:	ldr	r0, [sp, #28]
    6618:	ldr	r1, [sp, #24]
    661c:	add	r5, sp, #32
    6620:	mov	r2, r5
    6624:	mov	r3, r9
    6628:	bl	3238 <InflateData>
    662c:	cmp	sl, #1
    6630:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6634:	mov	r0, r5
    6638:	bl	1bf8 <Mat_int32Swap>
    663c:	vmov	s0, r0
    6640:	add	r5, r5, #4
    6644:	subs	sl, sl, #1
    6648:	vcvt.f64.s32	d16, s0
    664c:	vstr	d16, [r4]
    6650:	add	r4, r4, #8
    6654:	bne	6634 <ReadCompressedDoubleData+0x2ec>
    6658:	b	8924 <ReadCompressedDoubleData+0x25dc>
    665c:	ldr	r0, [sp, #28]
    6660:	ldr	r0, [r0, #20]
    6664:	cmp	r0, #0
    6668:	beq	6d5c <ReadCompressedDoubleData+0xa14>
    666c:	cmp	sl, #256	; 0x100
    6670:	bgt	730c <ReadCompressedDoubleData+0xfc4>
    6674:	mul	r9, r3, sl
    6678:	ldr	r0, [sp, #28]
    667c:	ldr	r1, [sp, #24]
    6680:	add	r5, sp, #32
    6684:	mov	r2, r5
    6688:	mov	r3, r9
    668c:	bl	3238 <InflateData>
    6690:	cmp	sl, #1
    6694:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6698:	mov	r0, r5
    669c:	bl	1c0c <Mat_uint32Swap>
    66a0:	vmov	s0, r0
    66a4:	add	r5, r5, #4
    66a8:	subs	sl, sl, #1
    66ac:	vcvt.f64.u32	d16, s0
    66b0:	vstr	d16, [r4]
    66b4:	add	r4, r4, #8
    66b8:	bne	6698 <ReadCompressedDoubleData+0x350>
    66bc:	b	8924 <ReadCompressedDoubleData+0x25dc>
    66c0:	ldr	r0, [sp, #28]
    66c4:	ldr	r0, [r0, #20]
    66c8:	cmp	r0, #0
    66cc:	beq	6e04 <ReadCompressedDoubleData+0xabc>
    66d0:	cmp	sl, #256	; 0x100
    66d4:	bgt	73e0 <ReadCompressedDoubleData+0x1098>
    66d8:	mul	r9, r3, sl
    66dc:	ldr	r0, [sp, #28]
    66e0:	ldr	r1, [sp, #24]
    66e4:	add	r5, sp, #32
    66e8:	mov	r2, r5
    66ec:	mov	r3, r9
    66f0:	bl	3238 <InflateData>
    66f4:	cmp	sl, #1
    66f8:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    66fc:	mov	r0, r5
    6700:	bl	1c4c <Mat_floatSwap>
    6704:	vcvt.f64.f32	d16, s0
    6708:	add	r5, r5, #4
    670c:	subs	sl, sl, #1
    6710:	vstr	d16, [r4]
    6714:	add	r4, r4, #8
    6718:	bne	66fc <ReadCompressedDoubleData+0x3b4>
    671c:	b	8924 <ReadCompressedDoubleData+0x25dc>
    6720:	ldr	r0, [sp, #28]
    6724:	mul	r9, r3, sl
    6728:	ldr	r1, [sp, #24]
    672c:	mov	r2, r4
    6730:	mov	r5, r2
    6734:	mov	r3, r9
    6738:	ldr	r4, [r0, #20]
    673c:	bl	3238 <InflateData>
    6740:	cmp	r4, #0
    6744:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    6748:	cmp	sl, #1
    674c:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6750:	mov	r4, r5
    6754:	mov	r0, r4
    6758:	bl	1c90 <Mat_doubleSwap>
    675c:	add	r4, r4, #8
    6760:	subs	sl, sl, #1
    6764:	bne	6754 <ReadCompressedDoubleData+0x40c>
    6768:	b	8924 <ReadCompressedDoubleData+0x25dc>
    676c:	ldr	r0, [sp, #28]
    6770:	ldr	r0, [r0, #20]
    6774:	cmp	r0, #0
    6778:	beq	6ea0 <ReadCompressedDoubleData+0xb58>
    677c:	cmp	sl, #128	; 0x80
    6780:	bgt	74ac <ReadCompressedDoubleData+0x1164>
    6784:	mul	r9, r3, sl
    6788:	ldr	r0, [sp, #28]
    678c:	ldr	r1, [sp, #24]
    6790:	add	r5, sp, #32
    6794:	mov	r2, r5
    6798:	mov	r3, r9
    679c:	bl	3238 <InflateData>
    67a0:	cmp	sl, #1
    67a4:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    67a8:	mov	r0, r5
    67ac:	bl	1b84 <Mat_int64Swap>
    67b0:	bl	6b664 <__aeabi_l2d>
    67b4:	strd	r0, [r4]
    67b8:	add	r5, r5, #8
    67bc:	add	r4, r4, #8
    67c0:	subs	sl, sl, #1
    67c4:	bne	67a8 <ReadCompressedDoubleData+0x460>
    67c8:	b	8924 <ReadCompressedDoubleData+0x25dc>
    67cc:	ldr	r0, [sp, #28]
    67d0:	ldr	r0, [r0, #20]
    67d4:	cmp	r0, #0
    67d8:	beq	6f98 <ReadCompressedDoubleData+0xc50>
    67dc:	cmp	sl, #128	; 0x80
    67e0:	bgt	7580 <ReadCompressedDoubleData+0x1238>
    67e4:	mul	r9, r3, sl
    67e8:	ldr	r0, [sp, #28]
    67ec:	ldr	r1, [sp, #24]
    67f0:	add	r5, sp, #32
    67f4:	mov	r2, r5
    67f8:	mov	r3, r9
    67fc:	bl	3238 <InflateData>
    6800:	cmp	sl, #1
    6804:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6808:	mov	r0, r5
    680c:	bl	1bd4 <Mat_uint64Swap>
    6810:	bl	6b650 <__aeabi_ul2d>
    6814:	strd	r0, [r4]
    6818:	add	r5, r5, #8
    681c:	add	r4, r4, #8
    6820:	subs	sl, sl, #1
    6824:	bne	6808 <ReadCompressedDoubleData+0x4c0>
    6828:	b	8924 <ReadCompressedDoubleData+0x25dc>
    682c:	mov	r7, r4
    6830:	add	r0, r4, #8192	; 0x2000
    6834:	lsl	r9, r3, #10
    6838:	sub	r8, sl, #1024	; 0x400
    683c:	mov	r5, #0
    6840:	mov	r1, #1024	; 0x400
    6844:	add	r6, sp, #32
    6848:	mov	r4, #32
    684c:	str	r3, [sp, #12]
    6850:	str	r7, [sp, #4]
    6854:	str	r1, [sp, #20]
    6858:	mov	sl, r0
    685c:	ldr	r0, [sp, #28]
    6860:	ldr	r1, [sp, #24]
    6864:	mov	r2, r6
    6868:	mov	r3, r9
    686c:	bl	3238 <InflateData>
    6870:	mov	r2, r7
    6874:	mov	r0, #0
    6878:	mov	r1, r7
    687c:	add	r3, r6, r0
    6880:	add	r0, r0, #4
    6884:	add	r2, r2, #16
    6888:	vld1.16	{d16[0]}, [r3 :16]
    688c:	add	r3, r3, #2
    6890:	cmp	r0, #1024	; 0x400
    6894:	vmovl.s8	q8, d16
    6898:	vmovl.s16	q0, d16
    689c:	vcvt.f64.s32	d17, s1
    68a0:	vcvt.f64.s32	d16, s0
    68a4:	vst1.64	{d16-d17}, [r1], r4
    68a8:	vld1.16	{d16[0]}, [r3 :16]
    68ac:	vmovl.s8	q8, d16
    68b0:	vmovl.s16	q0, d16
    68b4:	vcvt.f64.s32	d17, s1
    68b8:	vcvt.f64.s32	d16, s0
    68bc:	vst1.64	{d16-d17}, [r2]
    68c0:	mov	r2, r1
    68c4:	bne	687c <ReadCompressedDoubleData+0x534>
    68c8:	ldr	r1, [sp, #20]
    68cc:	mov	r2, r5
    68d0:	add	r5, r5, #1024	; 0x400
    68d4:	add	r7, r7, #8192	; 0x2000
    68d8:	add	r0, sl, #8192	; 0x2000
    68dc:	cmp	r5, r8
    68e0:	add	r1, r1, #1024	; 0x400
    68e4:	blt	6854 <ReadCompressedDoubleData+0x50c>
    68e8:	ldr	r0, [fp, #8]
    68ec:	ldr	r1, [sp, #24]
    68f0:	add	r6, sp, #32
    68f4:	str	r2, [sp, #16]
    68f8:	mov	r2, r6
    68fc:	sub	r9, r0, r5
    6900:	ldr	r0, [sp, #12]
    6904:	mul	r3, r9, r0
    6908:	ldr	r0, [sp, #28]
    690c:	mov	r8, r3
    6910:	bl	3238 <InflateData>
    6914:	cmp	r9, #1
    6918:	blt	82fc <ReadCompressedDoubleData+0x1fb4>
    691c:	ldr	r3, [sp, #4]
    6920:	mov	r0, #0
    6924:	beq	82c0 <ReadCompressedDoubleData+0x1f78>
    6928:	bic	r0, r9, #1
    692c:	mov	r2, #1
    6930:	subs	r1, r0, #2
    6934:	add	r1, r2, r1, lsr #1
    6938:	and	ip, r1, #1
    693c:	beq	8284 <ReadCompressedDoubleData+0x1f3c>
    6940:	ldr	r1, [fp, #8]
    6944:	ldr	r3, [sp, #16]
    6948:	mov	r4, sl
    694c:	sub	r3, r1, r3
    6950:	sub	r3, r3, #1024	; 0x400
    6954:	bic	r3, r3, #1
    6958:	sub	r3, r3, #2
    695c:	add	r2, r2, r3, lsr #1
    6960:	mvn	r7, r3, lsr #1
    6964:	and	r2, r2, #1
    6968:	add	r3, r7, r2
    696c:	mov	r2, #0
    6970:	mov	r7, #32
    6974:	add	r1, r6, r2
    6978:	adds	r3, r3, #2
    697c:	add	r2, r2, #4
    6980:	vld1.16	{d16[0]}, [r1 :16]
    6984:	add	r1, r1, #2
    6988:	vmovl.s8	q8, d16
    698c:	vmovl.s16	q0, d16
    6990:	vcvt.f64.s32	d17, s1
    6994:	vcvt.f64.s32	d16, s0
    6998:	vst1.64	{d16-d17}, [r4], r7
    699c:	vld1.16	{d16[0]}, [r1 :16]
    69a0:	add	r1, sl, #16
    69a4:	mov	sl, r4
    69a8:	vmovl.s8	q8, d16
    69ac:	vmovl.s16	q0, d16
    69b0:	vcvt.f64.s32	d17, s1
    69b4:	vcvt.f64.s32	d16, s0
    69b8:	vst1.64	{d16-d17}, [r1]
    69bc:	bne	6974 <ReadCompressedDoubleData+0x62c>
    69c0:	b	8288 <ReadCompressedDoubleData+0x1f40>
    69c4:	mov	r2, r4
    69c8:	add	r0, r4, #8192	; 0x2000
    69cc:	sub	r9, sl, #1024	; 0x400
    69d0:	lsl	r4, r3, #10
    69d4:	mov	r8, #0
    69d8:	mov	r1, #1024	; 0x400
    69dc:	add	r6, sp, #32
    69e0:	mov	r7, #32
    69e4:	str	r3, [sp, #12]
    69e8:	mov	sl, r2
    69ec:	str	r2, [sp, #4]
    69f0:	str	r1, [sp, #20]
    69f4:	mov	r5, r0
    69f8:	ldr	r0, [sp, #28]
    69fc:	ldr	r1, [sp, #24]
    6a00:	mov	r2, r6
    6a04:	mov	r3, r4
    6a08:	bl	3238 <InflateData>
    6a0c:	mov	r2, sl
    6a10:	mov	r0, #0
    6a14:	mov	r1, sl
    6a18:	add	r3, r6, r0
    6a1c:	add	r0, r0, #4
    6a20:	add	r2, r2, #16
    6a24:	vld1.16	{d16[0]}, [r3 :16]
    6a28:	add	r3, r3, #2
    6a2c:	cmp	r0, #1024	; 0x400
    6a30:	vmovl.u8	q8, d16
    6a34:	vmovl.u16	q0, d16
    6a38:	vcvt.f64.u32	d17, s1
    6a3c:	vcvt.f64.u32	d16, s0
    6a40:	vst1.64	{d16-d17}, [r1], r7
    6a44:	vld1.16	{d16[0]}, [r3 :16]
    6a48:	vmovl.u8	q8, d16
    6a4c:	vmovl.u16	q0, d16
    6a50:	vcvt.f64.u32	d17, s1
    6a54:	vcvt.f64.u32	d16, s0
    6a58:	vst1.64	{d16-d17}, [r2]
    6a5c:	mov	r2, r1
    6a60:	bne	6a18 <ReadCompressedDoubleData+0x6d0>
    6a64:	ldr	r1, [sp, #20]
    6a68:	mov	r2, r8
    6a6c:	add	r8, r8, #1024	; 0x400
    6a70:	add	sl, sl, #8192	; 0x2000
    6a74:	add	r0, r5, #8192	; 0x2000
    6a78:	cmp	r8, r9
    6a7c:	add	r1, r1, #1024	; 0x400
    6a80:	blt	69f0 <ReadCompressedDoubleData+0x6a8>
    6a84:	ldr	sl, [fp, #8]
    6a88:	ldr	r0, [sp, #12]
    6a8c:	ldr	r1, [sp, #24]
    6a90:	add	r6, sp, #32
    6a94:	str	r2, [sp, #16]
    6a98:	mov	r2, r6
    6a9c:	sub	r9, sl, r8
    6aa0:	mov	r4, sl
    6aa4:	mul	r3, r9, r0
    6aa8:	ldr	r0, [sp, #28]
    6aac:	mov	sl, r3
    6ab0:	bl	3238 <InflateData>
    6ab4:	cmp	r9, #1
    6ab8:	blt	8920 <ReadCompressedDoubleData+0x25d8>
    6abc:	ldr	r3, [sp, #4]
    6ac0:	mov	r0, #0
    6ac4:	beq	8348 <ReadCompressedDoubleData+0x2000>
    6ac8:	bic	r0, r9, #1
    6acc:	mov	r2, #1
    6ad0:	subs	r1, r0, #2
    6ad4:	add	r1, r2, r1, lsr #1
    6ad8:	and	ip, r1, #1
    6adc:	beq	8304 <ReadCompressedDoubleData+0x1fbc>
    6ae0:	ldr	r1, [sp, #16]
    6ae4:	mov	lr, r4
    6ae8:	sub	r3, r4, r1
    6aec:	mov	r4, r5
    6af0:	sub	r3, r3, #1024	; 0x400
    6af4:	bic	r3, r3, #1
    6af8:	sub	r3, r3, #2
    6afc:	add	r2, r2, r3, lsr #1
    6b00:	mvn	r7, r3, lsr #1
    6b04:	and	r2, r2, #1
    6b08:	add	r3, r7, r2
    6b0c:	mov	r2, #0
    6b10:	mov	r7, #32
    6b14:	add	r1, r6, r2
    6b18:	adds	r3, r3, #2
    6b1c:	add	r2, r2, #4
    6b20:	vld1.16	{d16[0]}, [r1 :16]
    6b24:	add	r1, r1, #2
    6b28:	vmovl.u8	q8, d16
    6b2c:	vmovl.u16	q0, d16
    6b30:	vcvt.f64.u32	d17, s1
    6b34:	vcvt.f64.u32	d16, s0
    6b38:	vst1.64	{d16-d17}, [r4], r7
    6b3c:	vld1.16	{d16[0]}, [r1 :16]
    6b40:	add	r1, r5, #16
    6b44:	mov	r5, r4
    6b48:	vmovl.u8	q8, d16
    6b4c:	vmovl.u16	q0, d16
    6b50:	vcvt.f64.u32	d17, s1
    6b54:	vcvt.f64.u32	d16, s0
    6b58:	vst1.64	{d16-d17}, [r1]
    6b5c:	bne	6b14 <ReadCompressedDoubleData+0x7cc>
    6b60:	b	830c <ReadCompressedDoubleData+0x1fc4>
    6b64:	cmp	sl, #512	; 0x200
    6b68:	bgt	7654 <ReadCompressedDoubleData+0x130c>
    6b6c:	mul	r9, r3, sl
    6b70:	ldr	r0, [sp, #28]
    6b74:	ldr	r1, [sp, #24]
    6b78:	add	r5, sp, #32
    6b7c:	mov	r2, r5
    6b80:	mov	r3, r9
    6b84:	bl	3238 <InflateData>
    6b88:	cmp	sl, #1
    6b8c:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6b90:	mov	r0, #0
    6b94:	beq	83c0 <ReadCompressedDoubleData+0x2078>
    6b98:	bic	r0, sl, #1
    6b9c:	mov	r2, #1
    6ba0:	subs	r1, r0, #2
    6ba4:	add	r1, r2, r1, lsr #1
    6ba8:	and	ip, r1, #1
    6bac:	beq	8384 <ReadCompressedDoubleData+0x203c>
    6bb0:	sub	r3, r1, ip
    6bb4:	mov	r1, #0
    6bb8:	mov	r7, #32
    6bbc:	mov	lr, r4
    6bc0:	mov	r6, r4
    6bc4:	vld1.32	{d16[0]}, [r5 :32]
    6bc8:	add	r2, r5, #4
    6bcc:	add	r5, r5, #8
    6bd0:	subs	r3, r3, #2
    6bd4:	add	r1, r1, #4
    6bd8:	vmovl.s16	q0, d16
    6bdc:	vcvt.f64.s32	d17, s1
    6be0:	vcvt.f64.s32	d16, s0
    6be4:	vst1.64	{d16-d17}, [r6], r7
    6be8:	vld1.32	{d16[0]}, [r2 :32]
    6bec:	add	r2, r4, #16
    6bf0:	mov	r4, r6
    6bf4:	vmovl.s16	q0, d16
    6bf8:	vcvt.f64.s32	d17, s1
    6bfc:	vcvt.f64.s32	d16, s0
    6c00:	vst1.64	{d16-d17}, [r2]
    6c04:	bne	6bc4 <ReadCompressedDoubleData+0x87c>
    6c08:	b	838c <ReadCompressedDoubleData+0x2044>
    6c0c:	cmp	sl, #512	; 0x200
    6c10:	bgt	77e0 <ReadCompressedDoubleData+0x1498>
    6c14:	mul	r9, r3, sl
    6c18:	ldr	r0, [sp, #28]
    6c1c:	ldr	r1, [sp, #24]
    6c20:	add	r5, sp, #32
    6c24:	mov	r2, r5
    6c28:	mov	r3, r9
    6c2c:	bl	3238 <InflateData>
    6c30:	cmp	sl, #1
    6c34:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6c38:	mov	r0, #0
    6c3c:	beq	8428 <ReadCompressedDoubleData+0x20e0>
    6c40:	bic	r0, sl, #1
    6c44:	mov	r2, #1
    6c48:	subs	r1, r0, #2
    6c4c:	add	r1, r2, r1, lsr #1
    6c50:	and	ip, r1, #1
    6c54:	beq	83ec <ReadCompressedDoubleData+0x20a4>
    6c58:	sub	r3, r1, ip
    6c5c:	mov	r1, #0
    6c60:	mov	r7, #32
    6c64:	mov	lr, r4
    6c68:	mov	r6, r4
    6c6c:	vld1.32	{d16[0]}, [r5 :32]
    6c70:	add	r2, r5, #4
    6c74:	add	r5, r5, #8
    6c78:	subs	r3, r3, #2
    6c7c:	add	r1, r1, #4
    6c80:	vmovl.u16	q0, d16
    6c84:	vcvt.f64.u32	d17, s1
    6c88:	vcvt.f64.u32	d16, s0
    6c8c:	vst1.64	{d16-d17}, [r6], r7
    6c90:	vld1.32	{d16[0]}, [r2 :32]
    6c94:	add	r2, r4, #16
    6c98:	mov	r4, r6
    6c9c:	vmovl.u16	q0, d16
    6ca0:	vcvt.f64.u32	d17, s1
    6ca4:	vcvt.f64.u32	d16, s0
    6ca8:	vst1.64	{d16-d17}, [r2]
    6cac:	bne	6c6c <ReadCompressedDoubleData+0x924>
    6cb0:	b	83f4 <ReadCompressedDoubleData+0x20ac>
    6cb4:	cmp	sl, #256	; 0x100
    6cb8:	bgt	796c <ReadCompressedDoubleData+0x1624>
    6cbc:	mul	r9, r3, sl
    6cc0:	ldr	r0, [sp, #28]
    6cc4:	ldr	r1, [sp, #24]
    6cc8:	mov	r8, r4
    6ccc:	add	r4, sp, #32
    6cd0:	mov	r2, r4
    6cd4:	mov	r3, r9
    6cd8:	bl	3238 <InflateData>
    6cdc:	cmp	sl, #1
    6ce0:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6ce4:	mov	lr, #0
    6ce8:	beq	8484 <ReadCompressedDoubleData+0x213c>
    6cec:	bic	lr, sl, #1
    6cf0:	mov	r1, #1
    6cf4:	subs	r0, lr, #2
    6cf8:	add	r0, r1, r0, lsr #1
    6cfc:	and	ip, r0, #1
    6d00:	beq	8454 <ReadCompressedDoubleData+0x210c>
    6d04:	sub	r3, r0, ip
    6d08:	mov	r1, #0
    6d0c:	mov	r7, #16
    6d10:	mov	r6, #32
    6d14:	mov	r0, r8
    6d18:	mov	r5, r4
    6d1c:	mov	r2, r8
    6d20:	vld1.32	{d0}, [r5 :64], r7
    6d24:	add	r0, r0, #16
    6d28:	subs	r3, r3, #2
    6d2c:	add	r1, r1, #4
    6d30:	vcvt.f64.s32	d17, s1
    6d34:	vcvt.f64.s32	d16, s0
    6d38:	vst1.64	{d16-d17}, [r2], r6
    6d3c:	vldr	d0, [r4, #8]
    6d40:	mov	r4, r5
    6d44:	vcvt.f64.s32	d17, s1
    6d48:	vcvt.f64.s32	d16, s0
    6d4c:	vst1.64	{d16-d17}, [r0]
    6d50:	mov	r0, r2
    6d54:	bne	6d20 <ReadCompressedDoubleData+0x9d8>
    6d58:	b	8458 <ReadCompressedDoubleData+0x2110>
    6d5c:	cmp	sl, #256	; 0x100
    6d60:	bgt	7ae4 <ReadCompressedDoubleData+0x179c>
    6d64:	mul	r9, r3, sl
    6d68:	ldr	r0, [sp, #28]
    6d6c:	ldr	r1, [sp, #24]
    6d70:	mov	r8, r4
    6d74:	add	r4, sp, #32
    6d78:	mov	r2, r4
    6d7c:	mov	r3, r9
    6d80:	bl	3238 <InflateData>
    6d84:	cmp	sl, #1
    6d88:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6d8c:	mov	lr, #0
    6d90:	beq	84e0 <ReadCompressedDoubleData+0x2198>
    6d94:	bic	lr, sl, #1
    6d98:	mov	r1, #1
    6d9c:	subs	r0, lr, #2
    6da0:	add	r0, r1, r0, lsr #1
    6da4:	and	ip, r0, #1
    6da8:	beq	84b0 <ReadCompressedDoubleData+0x2168>
    6dac:	sub	r3, r0, ip
    6db0:	mov	r1, #0
    6db4:	mov	r7, #16
    6db8:	mov	r6, #32
    6dbc:	mov	r0, r8
    6dc0:	mov	r5, r4
    6dc4:	mov	r2, r8
    6dc8:	vld1.32	{d0}, [r5 :64], r7
    6dcc:	add	r0, r0, #16
    6dd0:	subs	r3, r3, #2
    6dd4:	add	r1, r1, #4
    6dd8:	vcvt.f64.u32	d17, s1
    6ddc:	vcvt.f64.u32	d16, s0
    6de0:	vst1.64	{d16-d17}, [r2], r6
    6de4:	vldr	d0, [r4, #8]
    6de8:	mov	r4, r5
    6dec:	vcvt.f64.u32	d17, s1
    6df0:	vcvt.f64.u32	d16, s0
    6df4:	vst1.64	{d16-d17}, [r0]
    6df8:	mov	r0, r2
    6dfc:	bne	6dc8 <ReadCompressedDoubleData+0xa80>
    6e00:	b	84b4 <ReadCompressedDoubleData+0x216c>
    6e04:	cmp	sl, #256	; 0x100
    6e08:	bgt	7c5c <ReadCompressedDoubleData+0x1914>
    6e0c:	mul	r9, r3, sl
    6e10:	ldr	r0, [sp, #28]
    6e14:	ldr	r1, [sp, #24]
    6e18:	add	r7, sp, #32
    6e1c:	mov	r2, r7
    6e20:	mov	r3, r9
    6e24:	bl	3238 <InflateData>
    6e28:	cmp	sl, #1
    6e2c:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6e30:	mov	lr, #0
    6e34:	beq	8544 <ReadCompressedDoubleData+0x21fc>
    6e38:	bic	lr, sl, #1
    6e3c:	mov	r2, #1
    6e40:	subs	r1, lr, #2
    6e44:	add	r1, r2, r1, lsr #1
    6e48:	and	ip, r1, #1
    6e4c:	beq	850c <ReadCompressedDoubleData+0x21c4>
    6e50:	sub	r3, r1, ip
    6e54:	mov	r1, #0
    6e58:	mov	r2, #16
    6e5c:	mov	r6, #32
    6e60:	mov	r8, r4
    6e64:	mov	r5, r7
    6e68:	vld1.32	{d0}, [r5 :64], r2
    6e6c:	add	r0, r4, #16
    6e70:	subs	r3, r3, #2
    6e74:	add	r1, r1, #4
    6e78:	vcvt.f64.f32	d17, s1
    6e7c:	vcvt.f64.f32	d16, s0
    6e80:	vst1.64	{d16-d17}, [r4], r6
    6e84:	vldr	d0, [r7, #8]
    6e88:	mov	r7, r5
    6e8c:	vcvt.f64.f32	d17, s1
    6e90:	vcvt.f64.f32	d16, s0
    6e94:	vst1.64	{d16-d17}, [r0]
    6e98:	bne	6e68 <ReadCompressedDoubleData+0xb20>
    6e9c:	b	8514 <ReadCompressedDoubleData+0x21cc>
    6ea0:	cmp	sl, #128	; 0x80
    6ea4:	bgt	7dc4 <ReadCompressedDoubleData+0x1a7c>
    6ea8:	mul	r9, r3, sl
    6eac:	ldr	r0, [sp, #28]
    6eb0:	ldr	r1, [sp, #24]
    6eb4:	add	r8, sp, #32
    6eb8:	mov	r2, r8
    6ebc:	mov	r3, r9
    6ec0:	bl	3238 <InflateData>
    6ec4:	cmp	sl, #1
    6ec8:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6ecc:	mov	r1, #0
    6ed0:	str	r4, [sp, #4]
    6ed4:	beq	85d4 <ReadCompressedDoubleData+0x228c>
    6ed8:	bic	r0, sl, #1
    6edc:	mov	r1, #1
    6ee0:	str	r9, [sp, #12]
    6ee4:	str	r0, [sp, #28]
    6ee8:	subs	r0, r0, #2
    6eec:	add	r0, r1, r0, lsr #1
    6ef0:	and	r1, r0, #1
    6ef4:	str	r1, [sp, #24]
    6ef8:	beq	8574 <ReadCompressedDoubleData+0x222c>
    6efc:	ldr	r6, [sp, #4]
    6f00:	sub	r4, r0, r1
    6f04:	mov	r7, #0
    6f08:	mov	r5, r8
    6f0c:	mov	r9, r6
    6f10:	mov	r0, #32
    6f14:	vld1.64	{d8-d9}, [r5], r0
    6f18:	vmov.32	r0, d9[0]
    6f1c:	vmov.32	r1, d9[1]
    6f20:	bl	6b664 <__aeabi_l2d>
    6f24:	vmov.32	r2, d8[0]
    6f28:	vmov.32	r3, d8[1]
    6f2c:	vmov	d9, r0, r1
    6f30:	mov	r0, r2
    6f34:	mov	r1, r3
    6f38:	bl	6b664 <__aeabi_l2d>
    6f3c:	vmov	d8, r0, r1
    6f40:	mov	r0, #32
    6f44:	vst1.64	{d8-d9}, [r9], r0
    6f48:	add	r0, r8, #16
    6f4c:	vld1.64	{d8-d9}, [r0]
    6f50:	vmov.32	r0, d9[0]
    6f54:	vmov.32	r1, d9[1]
    6f58:	bl	6b664 <__aeabi_l2d>
    6f5c:	vmov.32	r2, d8[0]
    6f60:	vmov.32	r3, d8[1]
    6f64:	vmov	d9, r0, r1
    6f68:	mov	r0, r2
    6f6c:	mov	r1, r3
    6f70:	bl	6b664 <__aeabi_l2d>
    6f74:	vmov	d8, r0, r1
    6f78:	add	r0, r6, #16
    6f7c:	subs	r4, r4, #2
    6f80:	add	r7, r7, #4
    6f84:	mov	r6, r9
    6f88:	mov	r8, r5
    6f8c:	vst1.64	{d8-d9}, [r0]
    6f90:	bne	6f10 <ReadCompressedDoubleData+0xbc8>
    6f94:	b	8578 <ReadCompressedDoubleData+0x2230>
    6f98:	cmp	sl, #128	; 0x80
    6f9c:	bgt	7fc0 <ReadCompressedDoubleData+0x1c78>
    6fa0:	mul	r9, r3, sl
    6fa4:	ldr	r0, [sp, #28]
    6fa8:	ldr	r1, [sp, #24]
    6fac:	add	r8, sp, #32
    6fb0:	mov	r2, r8
    6fb4:	mov	r3, r9
    6fb8:	bl	3238 <InflateData>
    6fbc:	cmp	sl, #1
    6fc0:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    6fc4:	mov	r1, #0
    6fc8:	str	r4, [sp, #4]
    6fcc:	beq	8668 <ReadCompressedDoubleData+0x2320>
    6fd0:	bic	r0, sl, #1
    6fd4:	mov	r1, #1
    6fd8:	str	r9, [sp, #12]
    6fdc:	str	r0, [sp, #28]
    6fe0:	subs	r0, r0, #2
    6fe4:	add	r0, r1, r0, lsr #1
    6fe8:	and	r1, r0, #1
    6fec:	str	r1, [sp, #24]
    6ff0:	beq	8608 <ReadCompressedDoubleData+0x22c0>
    6ff4:	ldr	r6, [sp, #4]
    6ff8:	sub	r4, r0, r1
    6ffc:	mov	r7, #0
    7000:	mov	r5, r8
    7004:	mov	r9, r6
    7008:	mov	r0, #32
    700c:	vld1.64	{d8-d9}, [r5], r0
    7010:	vmov.32	r0, d9[0]
    7014:	vmov.32	r1, d9[1]
    7018:	bl	6b650 <__aeabi_ul2d>
    701c:	vmov.32	r2, d8[0]
    7020:	vmov.32	r3, d8[1]
    7024:	vmov	d9, r0, r1
    7028:	mov	r0, r2
    702c:	mov	r1, r3
    7030:	bl	6b650 <__aeabi_ul2d>
    7034:	vmov	d8, r0, r1
    7038:	mov	r0, #32
    703c:	vst1.64	{d8-d9}, [r9], r0
    7040:	add	r0, r8, #16
    7044:	vld1.64	{d8-d9}, [r0]
    7048:	vmov.32	r0, d9[0]
    704c:	vmov.32	r1, d9[1]
    7050:	bl	6b650 <__aeabi_ul2d>
    7054:	vmov.32	r2, d8[0]
    7058:	vmov.32	r3, d8[1]
    705c:	vmov	d9, r0, r1
    7060:	mov	r0, r2
    7064:	mov	r1, r3
    7068:	bl	6b650 <__aeabi_ul2d>
    706c:	vmov	d8, r0, r1
    7070:	add	r0, r6, #16
    7074:	subs	r4, r4, #2
    7078:	add	r7, r7, #4
    707c:	mov	r6, r9
    7080:	mov	r8, r5
    7084:	vst1.64	{d8-d9}, [r0]
    7088:	bne	7008 <ReadCompressedDoubleData+0xcc0>
    708c:	b	860c <ReadCompressedDoubleData+0x22c4>
    7090:	lsl	r1, r3, #9
    7094:	add	r0, r4, #4096	; 0x1000
    7098:	sub	r9, sl, #512	; 0x200
    709c:	add	r6, sp, #32
    70a0:	str	r3, [sp, #12]
    70a4:	str	r1, [sp, #20]
    70a8:	mov	r1, #0
    70ac:	mov	sl, r1
    70b0:	mov	r7, r0
    70b4:	ldr	r0, [sp, #28]
    70b8:	ldr	r1, [sp, #24]
    70bc:	ldr	r3, [sp, #20]
    70c0:	mov	r2, r6
    70c4:	bl	3238 <InflateData>
    70c8:	mov	r8, r4
    70cc:	mov	r5, #0
    70d0:	add	r0, r6, r5
    70d4:	bl	1c20 <Mat_int16Swap>
    70d8:	vmov	s0, r0
    70dc:	add	r5, r5, #2
    70e0:	cmp	r5, #1024	; 0x400
    70e4:	vcvt.f64.s32	d16, s0
    70e8:	vstmia	r4!, {d16}
    70ec:	bne	70d0 <ReadCompressedDoubleData+0xd88>
    70f0:	add	r1, sl, #512	; 0x200
    70f4:	mov	r4, r8
    70f8:	add	r4, r8, #4096	; 0x1000
    70fc:	add	r0, r7, #4096	; 0x1000
    7100:	cmp	r1, r9
    7104:	blt	70ac <ReadCompressedDoubleData+0xd64>
    7108:	ldr	r6, [fp, #8]
    710c:	ldr	r0, [sp, #12]
    7110:	add	r4, sp, #32
    7114:	mov	r2, r4
    7118:	sub	r5, r6, r1
    711c:	ldr	r1, [sp, #24]
    7120:	mul	r9, r5, r0
    7124:	ldr	r0, [sp, #28]
    7128:	mov	r3, r9
    712c:	bl	3238 <InflateData>
    7130:	cmp	r5, #1
    7134:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    7138:	sub	r0, r6, sl
    713c:	sub	r5, r0, #512	; 0x200
    7140:	mov	r0, r4
    7144:	bl	1c20 <Mat_int16Swap>
    7148:	vmov	s0, r0
    714c:	add	r4, r4, #2
    7150:	subs	r5, r5, #1
    7154:	vcvt.f64.s32	d16, s0
    7158:	vstmia	r7!, {d16}
    715c:	bne	7140 <ReadCompressedDoubleData+0xdf8>
    7160:	b	8924 <ReadCompressedDoubleData+0x25dc>
    7164:	lsl	r1, r3, #9
    7168:	add	r0, r4, #4096	; 0x1000
    716c:	sub	r9, sl, #512	; 0x200
    7170:	add	r6, sp, #32
    7174:	str	r3, [sp, #12]
    7178:	str	r1, [sp, #20]
    717c:	mov	r1, #0
    7180:	mov	sl, r1
    7184:	mov	r7, r0
    7188:	ldr	r0, [sp, #28]
    718c:	ldr	r1, [sp, #24]
    7190:	ldr	r3, [sp, #20]
    7194:	mov	r2, r6
    7198:	bl	3238 <InflateData>
    719c:	mov	r8, r4
    71a0:	mov	r5, #0
    71a4:	add	r0, r6, r5
    71a8:	bl	1c34 <Mat_uint16Swap>
    71ac:	vmov	s0, r0
    71b0:	add	r5, r5, #2
    71b4:	cmp	r5, #1024	; 0x400
    71b8:	vcvt.f64.u32	d16, s0
    71bc:	vstmia	r4!, {d16}
    71c0:	bne	71a4 <ReadCompressedDoubleData+0xe5c>
    71c4:	add	r1, sl, #512	; 0x200
    71c8:	mov	r4, r8
    71cc:	add	r4, r8, #4096	; 0x1000
    71d0:	add	r0, r7, #4096	; 0x1000
    71d4:	cmp	r1, r9
    71d8:	blt	7180 <ReadCompressedDoubleData+0xe38>
    71dc:	ldr	r6, [fp, #8]
    71e0:	ldr	r0, [sp, #12]
    71e4:	add	r4, sp, #32
    71e8:	mov	r2, r4
    71ec:	sub	r5, r6, r1
    71f0:	ldr	r1, [sp, #24]
    71f4:	mul	r9, r5, r0
    71f8:	ldr	r0, [sp, #28]
    71fc:	mov	r3, r9
    7200:	bl	3238 <InflateData>
    7204:	cmp	r5, #1
    7208:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    720c:	sub	r0, r6, sl
    7210:	sub	r5, r0, #512	; 0x200
    7214:	mov	r0, r4
    7218:	bl	1c34 <Mat_uint16Swap>
    721c:	vmov	s0, r0
    7220:	add	r4, r4, #2
    7224:	subs	r5, r5, #1
    7228:	vcvt.f64.u32	d16, s0
    722c:	vstmia	r7!, {d16}
    7230:	bne	7214 <ReadCompressedDoubleData+0xecc>
    7234:	b	8924 <ReadCompressedDoubleData+0x25dc>
    7238:	lsl	r1, r3, #8
    723c:	add	r0, r4, #2048	; 0x800
    7240:	sub	r9, sl, #256	; 0x100
    7244:	add	r6, sp, #32
    7248:	str	r3, [sp, #12]
    724c:	str	r1, [sp, #20]
    7250:	mov	r1, #0
    7254:	mov	sl, r1
    7258:	mov	r7, r0
    725c:	ldr	r0, [sp, #28]
    7260:	ldr	r1, [sp, #24]
    7264:	ldr	r3, [sp, #20]
    7268:	mov	r2, r6
    726c:	bl	3238 <InflateData>
    7270:	mov	r8, r4
    7274:	mov	r5, #0
    7278:	add	r0, r6, r5
    727c:	bl	1bf8 <Mat_int32Swap>
    7280:	vmov	s0, r0
    7284:	add	r5, r5, #4
    7288:	cmp	r5, #1024	; 0x400
    728c:	vcvt.f64.s32	d16, s0
    7290:	vstmia	r4!, {d16}
    7294:	bne	7278 <ReadCompressedDoubleData+0xf30>
    7298:	add	r1, sl, #256	; 0x100
    729c:	mov	r4, r8
    72a0:	add	r4, r8, #2048	; 0x800
    72a4:	add	r0, r7, #2048	; 0x800
    72a8:	cmp	r1, r9
    72ac:	blt	7254 <ReadCompressedDoubleData+0xf0c>
    72b0:	ldr	r6, [fp, #8]
    72b4:	ldr	r0, [sp, #12]
    72b8:	add	r4, sp, #32
    72bc:	mov	r2, r4
    72c0:	sub	r5, r6, r1
    72c4:	ldr	r1, [sp, #24]
    72c8:	mul	r9, r5, r0
    72cc:	ldr	r0, [sp, #28]
    72d0:	mov	r3, r9
    72d4:	bl	3238 <InflateData>
    72d8:	cmp	r5, #1
    72dc:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    72e0:	sub	r0, r6, sl
    72e4:	sub	r5, r0, #256	; 0x100
    72e8:	mov	r0, r4
    72ec:	bl	1bf8 <Mat_int32Swap>
    72f0:	vmov	s0, r0
    72f4:	add	r4, r4, #4
    72f8:	subs	r5, r5, #1
    72fc:	vcvt.f64.s32	d16, s0
    7300:	vstmia	r7!, {d16}
    7304:	bne	72e8 <ReadCompressedDoubleData+0xfa0>
    7308:	b	8924 <ReadCompressedDoubleData+0x25dc>
    730c:	lsl	r1, r3, #8
    7310:	add	r0, r4, #2048	; 0x800
    7314:	sub	r9, sl, #256	; 0x100
    7318:	add	r6, sp, #32
    731c:	str	r3, [sp, #12]
    7320:	str	r1, [sp, #20]
    7324:	mov	r1, #0
    7328:	mov	sl, r1
    732c:	mov	r7, r0
    7330:	ldr	r0, [sp, #28]
    7334:	ldr	r1, [sp, #24]
    7338:	ldr	r3, [sp, #20]
    733c:	mov	r2, r6
    7340:	bl	3238 <InflateData>
    7344:	mov	r8, r4
    7348:	mov	r5, #0
    734c:	add	r0, r6, r5
    7350:	bl	1c0c <Mat_uint32Swap>
    7354:	vmov	s0, r0
    7358:	add	r5, r5, #4
    735c:	cmp	r5, #1024	; 0x400
    7360:	vcvt.f64.u32	d16, s0
    7364:	vstmia	r4!, {d16}
    7368:	bne	734c <ReadCompressedDoubleData+0x1004>
    736c:	add	r1, sl, #256	; 0x100
    7370:	mov	r4, r8
    7374:	add	r4, r8, #2048	; 0x800
    7378:	add	r0, r7, #2048	; 0x800
    737c:	cmp	r1, r9
    7380:	blt	7328 <ReadCompressedDoubleData+0xfe0>
    7384:	ldr	r6, [fp, #8]
    7388:	ldr	r0, [sp, #12]
    738c:	add	r4, sp, #32
    7390:	mov	r2, r4
    7394:	sub	r5, r6, r1
    7398:	ldr	r1, [sp, #24]
    739c:	mul	r9, r5, r0
    73a0:	ldr	r0, [sp, #28]
    73a4:	mov	r3, r9
    73a8:	bl	3238 <InflateData>
    73ac:	cmp	r5, #1
    73b0:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    73b4:	sub	r0, r6, sl
    73b8:	sub	r5, r0, #256	; 0x100
    73bc:	mov	r0, r4
    73c0:	bl	1c0c <Mat_uint32Swap>
    73c4:	vmov	s0, r0
    73c8:	add	r4, r4, #4
    73cc:	subs	r5, r5, #1
    73d0:	vcvt.f64.u32	d16, s0
    73d4:	vstmia	r7!, {d16}
    73d8:	bne	73bc <ReadCompressedDoubleData+0x1074>
    73dc:	b	8924 <ReadCompressedDoubleData+0x25dc>
    73e0:	lsl	r1, r3, #8
    73e4:	add	r0, r4, #2048	; 0x800
    73e8:	sub	r9, sl, #256	; 0x100
    73ec:	add	r6, sp, #32
    73f0:	str	r3, [sp, #12]
    73f4:	str	r1, [sp, #20]
    73f8:	mov	r1, #0
    73fc:	mov	sl, r1
    7400:	mov	r7, r0
    7404:	ldr	r0, [sp, #28]
    7408:	ldr	r1, [sp, #24]
    740c:	ldr	r3, [sp, #20]
    7410:	mov	r2, r6
    7414:	bl	3238 <InflateData>
    7418:	mov	r8, r4
    741c:	mov	r5, #0
    7420:	add	r0, r6, r5
    7424:	bl	1c4c <Mat_floatSwap>
    7428:	vcvt.f64.f32	d16, s0
    742c:	add	r5, r5, #4
    7430:	cmp	r5, #1024	; 0x400
    7434:	vstmia	r4!, {d16}
    7438:	bne	7420 <ReadCompressedDoubleData+0x10d8>
    743c:	add	r1, sl, #256	; 0x100
    7440:	mov	r4, r8
    7444:	add	r4, r8, #2048	; 0x800
    7448:	add	r0, r7, #2048	; 0x800
    744c:	cmp	r1, r9
    7450:	blt	73fc <ReadCompressedDoubleData+0x10b4>
    7454:	ldr	r6, [fp, #8]
    7458:	ldr	r0, [sp, #12]
    745c:	add	r4, sp, #32
    7460:	mov	r2, r4
    7464:	sub	r5, r6, r1
    7468:	ldr	r1, [sp, #24]
    746c:	mul	r9, r5, r0
    7470:	ldr	r0, [sp, #28]
    7474:	mov	r3, r9
    7478:	bl	3238 <InflateData>
    747c:	cmp	r5, #1
    7480:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    7484:	sub	r0, r6, sl
    7488:	sub	r5, r0, #256	; 0x100
    748c:	mov	r0, r4
    7490:	bl	1c4c <Mat_floatSwap>
    7494:	vcvt.f64.f32	d16, s0
    7498:	add	r4, r4, #4
    749c:	subs	r5, r5, #1
    74a0:	vstmia	r7!, {d16}
    74a4:	bne	748c <ReadCompressedDoubleData+0x1144>
    74a8:	b	8924 <ReadCompressedDoubleData+0x25dc>
    74ac:	lsl	r1, r3, #7
    74b0:	add	r0, r4, #1024	; 0x400
    74b4:	sub	r9, sl, #128	; 0x80
    74b8:	add	r6, sp, #32
    74bc:	str	r3, [sp, #12]
    74c0:	str	r1, [sp, #20]
    74c4:	mov	r1, #0
    74c8:	mov	r5, r1
    74cc:	mov	r7, r0
    74d0:	ldr	r0, [sp, #28]
    74d4:	ldr	r1, [sp, #24]
    74d8:	ldr	r3, [sp, #20]
    74dc:	mov	r2, r6
    74e0:	bl	3238 <InflateData>
    74e4:	mov	r8, r4
    74e8:	mov	r4, #0
    74ec:	add	r0, r6, r4
    74f0:	bl	1b84 <Mat_int64Swap>
    74f4:	bl	6b664 <__aeabi_l2d>
    74f8:	mov	r2, r8
    74fc:	str	r0, [r2, r4]!
    7500:	add	r4, r4, #8
    7504:	cmp	r4, #1024	; 0x400
    7508:	str	r1, [r2, #4]
    750c:	bne	74ec <ReadCompressedDoubleData+0x11a4>
    7510:	add	r8, r8, #1024	; 0x400
    7514:	add	r1, r5, #128	; 0x80
    7518:	add	r0, r7, #1024	; 0x400
    751c:	cmp	r1, r9
    7520:	mov	r4, r8
    7524:	blt	74c8 <ReadCompressedDoubleData+0x1180>
    7528:	ldr	r0, [sp, #12]
    752c:	sub	r6, sl, r1
    7530:	ldr	r1, [sp, #24]
    7534:	add	r4, sp, #32
    7538:	mov	r2, r4
    753c:	mul	r9, r6, r0
    7540:	ldr	r0, [sp, #28]
    7544:	mov	r3, r9
    7548:	bl	3238 <InflateData>
    754c:	cmp	r6, #1
    7550:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    7554:	sub	r0, sl, r5
    7558:	sub	r5, r0, #128	; 0x80
    755c:	mov	r0, r4
    7560:	bl	1b84 <Mat_int64Swap>
    7564:	bl	6b664 <__aeabi_l2d>
    7568:	strd	r0, [r7]
    756c:	add	r7, r7, #8
    7570:	add	r4, r4, #8
    7574:	subs	r5, r5, #1
    7578:	bne	755c <ReadCompressedDoubleData+0x1214>
    757c:	b	8924 <ReadCompressedDoubleData+0x25dc>
    7580:	lsl	r1, r3, #7
    7584:	add	r0, r4, #1024	; 0x400
    7588:	sub	r9, sl, #128	; 0x80
    758c:	add	r6, sp, #32
    7590:	str	r3, [sp, #12]
    7594:	str	r1, [sp, #20]
    7598:	mov	r1, #0
    759c:	mov	r5, r1
    75a0:	mov	r7, r0
    75a4:	ldr	r0, [sp, #28]
    75a8:	ldr	r1, [sp, #24]
    75ac:	ldr	r3, [sp, #20]
    75b0:	mov	r2, r6
    75b4:	bl	3238 <InflateData>
    75b8:	mov	r8, r4
    75bc:	mov	r4, #0
    75c0:	add	r0, r6, r4
    75c4:	bl	1bd4 <Mat_uint64Swap>
    75c8:	bl	6b650 <__aeabi_ul2d>
    75cc:	mov	r2, r8
    75d0:	str	r0, [r2, r4]!
    75d4:	add	r4, r4, #8
    75d8:	cmp	r4, #1024	; 0x400
    75dc:	str	r1, [r2, #4]
    75e0:	bne	75c0 <ReadCompressedDoubleData+0x1278>
    75e4:	add	r8, r8, #1024	; 0x400
    75e8:	add	r1, r5, #128	; 0x80
    75ec:	add	r0, r7, #1024	; 0x400
    75f0:	cmp	r1, r9
    75f4:	mov	r4, r8
    75f8:	blt	759c <ReadCompressedDoubleData+0x1254>
    75fc:	ldr	r0, [sp, #12]
    7600:	sub	r6, sl, r1
    7604:	ldr	r1, [sp, #24]
    7608:	add	r4, sp, #32
    760c:	mov	r2, r4
    7610:	mul	r9, r6, r0
    7614:	ldr	r0, [sp, #28]
    7618:	mov	r3, r9
    761c:	bl	3238 <InflateData>
    7620:	cmp	r6, #1
    7624:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    7628:	sub	r0, sl, r5
    762c:	sub	r5, r0, #128	; 0x80
    7630:	mov	r0, r4
    7634:	bl	1bd4 <Mat_uint64Swap>
    7638:	bl	6b650 <__aeabi_ul2d>
    763c:	strd	r0, [r7]
    7640:	add	r7, r7, #8
    7644:	add	r4, r4, #8
    7648:	subs	r5, r5, #1
    764c:	bne	7630 <ReadCompressedDoubleData+0x12e8>
    7650:	b	8924 <ReadCompressedDoubleData+0x25dc>
    7654:	sub	r8, sl, #512	; 0x200
    7658:	mov	sl, r4
    765c:	add	r0, r4, #4096	; 0x1000
    7660:	lsl	r7, r3, #9
    7664:	mov	r5, #0
    7668:	mov	r1, #512	; 0x200
    766c:	add	r6, sp, #32
    7670:	mov	r4, #32
    7674:	str	r3, [sp, #12]
    7678:	str	sl, [sp, #4]
    767c:	str	r1, [sp, #20]
    7680:	mov	r9, r0
    7684:	ldr	r0, [sp, #28]
    7688:	ldr	r1, [sp, #24]
    768c:	mov	r2, r6
    7690:	mov	r3, r7
    7694:	bl	3238 <InflateData>
    7698:	mov	r2, sl
    769c:	mov	r0, #0
    76a0:	mov	r1, sl
    76a4:	add	r3, r6, r0
    76a8:	add	r0, r0, #8
    76ac:	add	r2, r2, #16
    76b0:	vld1.32	{d16[0]}, [r3 :32]
    76b4:	add	r3, r3, #4
    76b8:	cmp	r0, #1024	; 0x400
    76bc:	vmovl.s16	q0, d16
    76c0:	vcvt.f64.s32	d17, s1
    76c4:	vcvt.f64.s32	d16, s0
    76c8:	vst1.64	{d16-d17}, [r1], r4
    76cc:	vld1.32	{d16[0]}, [r3 :32]
    76d0:	vmovl.s16	q0, d16
    76d4:	vcvt.f64.s32	d17, s1
    76d8:	vcvt.f64.s32	d16, s0
    76dc:	vst1.64	{d16-d17}, [r2]
    76e0:	mov	r2, r1
    76e4:	bne	76a4 <ReadCompressedDoubleData+0x135c>
    76e8:	ldr	r1, [sp, #20]
    76ec:	mov	r2, r5
    76f0:	add	r5, r5, #512	; 0x200
    76f4:	add	sl, sl, #4096	; 0x1000
    76f8:	add	r0, r9, #4096	; 0x1000
    76fc:	cmp	r5, r8
    7700:	add	r1, r1, #512	; 0x200
    7704:	blt	767c <ReadCompressedDoubleData+0x1334>
    7708:	ldr	sl, [fp, #8]
    770c:	ldr	r0, [sp, #12]
    7710:	ldr	r1, [sp, #24]
    7714:	add	r6, sp, #32
    7718:	str	r2, [sp, #16]
    771c:	mov	r2, r6
    7720:	sub	r8, sl, r5
    7724:	mov	r4, sl
    7728:	mul	r3, r8, r0
    772c:	ldr	r0, [sp, #28]
    7730:	mov	sl, r3
    7734:	bl	3238 <InflateData>
    7738:	cmp	r8, #1
    773c:	blt	8920 <ReadCompressedDoubleData+0x25d8>
    7740:	ldr	r3, [sp, #4]
    7744:	mov	r0, #0
    7748:	beq	86e0 <ReadCompressedDoubleData+0x2398>
    774c:	bic	r0, r8, #1
    7750:	mov	r2, #1
    7754:	subs	r1, r0, #2
    7758:	add	r1, r2, r1, lsr #1
    775c:	and	ip, r1, #1
    7760:	beq	869c <ReadCompressedDoubleData+0x2354>
    7764:	ldr	r1, [sp, #16]
    7768:	mov	lr, r4
    776c:	sub	r3, r4, r1
    7770:	mov	r4, #32
    7774:	sub	r3, r3, #512	; 0x200
    7778:	bic	r3, r3, #1
    777c:	sub	r3, r3, #2
    7780:	add	r2, r2, r3, lsr #1
    7784:	mvn	r7, r3, lsr #1
    7788:	and	r2, r2, #1
    778c:	add	r3, r7, r2
    7790:	mov	r2, #0
    7794:	mov	r7, r9
    7798:	vld1.32	{d16[0]}, [r6 :32]
    779c:	add	r1, r6, #4
    77a0:	adds	r3, r3, #2
    77a4:	add	r6, r6, #8
    77a8:	add	r2, r2, #4
    77ac:	vmovl.s16	q0, d16
    77b0:	vcvt.f64.s32	d17, s1
    77b4:	vcvt.f64.s32	d16, s0
    77b8:	vst1.64	{d16-d17}, [r7], r4
    77bc:	vld1.32	{d16[0]}, [r1 :32]
    77c0:	add	r1, r9, #16
    77c4:	mov	r9, r7
    77c8:	vmovl.s16	q0, d16
    77cc:	vcvt.f64.s32	d17, s1
    77d0:	vcvt.f64.s32	d16, s0
    77d4:	vst1.64	{d16-d17}, [r1]
    77d8:	bne	7798 <ReadCompressedDoubleData+0x1450>
    77dc:	b	86a4 <ReadCompressedDoubleData+0x235c>
    77e0:	sub	r8, sl, #512	; 0x200
    77e4:	mov	sl, r4
    77e8:	add	r0, r4, #4096	; 0x1000
    77ec:	lsl	r7, r3, #9
    77f0:	mov	r5, #0
    77f4:	mov	r1, #512	; 0x200
    77f8:	add	r6, sp, #32
    77fc:	mov	r4, #32
    7800:	str	r3, [sp, #12]
    7804:	str	sl, [sp, #4]
    7808:	str	r1, [sp, #20]
    780c:	mov	r9, r0
    7810:	ldr	r0, [sp, #28]
    7814:	ldr	r1, [sp, #24]
    7818:	mov	r2, r6
    781c:	mov	r3, r7
    7820:	bl	3238 <InflateData>
    7824:	mov	r2, sl
    7828:	mov	r0, #0
    782c:	mov	r1, sl
    7830:	add	r3, r6, r0
    7834:	add	r0, r0, #8
    7838:	add	r2, r2, #16
    783c:	vld1.32	{d16[0]}, [r3 :32]
    7840:	add	r3, r3, #4
    7844:	cmp	r0, #1024	; 0x400
    7848:	vmovl.u16	q0, d16
    784c:	vcvt.f64.u32	d17, s1
    7850:	vcvt.f64.u32	d16, s0
    7854:	vst1.64	{d16-d17}, [r1], r4
    7858:	vld1.32	{d16[0]}, [r3 :32]
    785c:	vmovl.u16	q0, d16
    7860:	vcvt.f64.u32	d17, s1
    7864:	vcvt.f64.u32	d16, s0
    7868:	vst1.64	{d16-d17}, [r2]
    786c:	mov	r2, r1
    7870:	bne	7830 <ReadCompressedDoubleData+0x14e8>
    7874:	ldr	r1, [sp, #20]
    7878:	mov	r2, r5
    787c:	add	r5, r5, #512	; 0x200
    7880:	add	sl, sl, #4096	; 0x1000
    7884:	add	r0, r9, #4096	; 0x1000
    7888:	cmp	r5, r8
    788c:	add	r1, r1, #512	; 0x200
    7890:	blt	7808 <ReadCompressedDoubleData+0x14c0>
    7894:	ldr	sl, [fp, #8]
    7898:	ldr	r0, [sp, #12]
    789c:	ldr	r1, [sp, #24]
    78a0:	add	r6, sp, #32
    78a4:	str	r2, [sp, #16]
    78a8:	mov	r2, r6
    78ac:	sub	r8, sl, r5
    78b0:	mov	r4, sl
    78b4:	mul	r3, r8, r0
    78b8:	ldr	r0, [sp, #28]
    78bc:	mov	sl, r3
    78c0:	bl	3238 <InflateData>
    78c4:	cmp	r8, #1
    78c8:	blt	8920 <ReadCompressedDoubleData+0x25d8>
    78cc:	ldr	r3, [sp, #4]
    78d0:	mov	r0, #0
    78d4:	beq	8764 <ReadCompressedDoubleData+0x241c>
    78d8:	bic	r0, r8, #1
    78dc:	mov	r2, #1
    78e0:	subs	r1, r0, #2
    78e4:	add	r1, r2, r1, lsr #1
    78e8:	and	ip, r1, #1
    78ec:	beq	8720 <ReadCompressedDoubleData+0x23d8>
    78f0:	ldr	r1, [sp, #16]
    78f4:	mov	lr, r4
    78f8:	sub	r3, r4, r1
    78fc:	mov	r4, #32
    7900:	sub	r3, r3, #512	; 0x200
    7904:	bic	r3, r3, #1
    7908:	sub	r3, r3, #2
    790c:	add	r2, r2, r3, lsr #1
    7910:	mvn	r7, r3, lsr #1
    7914:	and	r2, r2, #1
    7918:	add	r3, r7, r2
    791c:	mov	r2, #0
    7920:	mov	r7, r9
    7924:	vld1.32	{d16[0]}, [r6 :32]
    7928:	add	r1, r6, #4
    792c:	adds	r3, r3, #2
    7930:	add	r6, r6, #8
    7934:	add	r2, r2, #4
    7938:	vmovl.u16	q0, d16
    793c:	vcvt.f64.u32	d17, s1
    7940:	vcvt.f64.u32	d16, s0
    7944:	vst1.64	{d16-d17}, [r7], r4
    7948:	vld1.32	{d16[0]}, [r1 :32]
    794c:	add	r1, r9, #16
    7950:	mov	r9, r7
    7954:	vmovl.u16	q0, d16
    7958:	vcvt.f64.u32	d17, s1
    795c:	vcvt.f64.u32	d16, s0
    7960:	vst1.64	{d16-d17}, [r1]
    7964:	bne	7924 <ReadCompressedDoubleData+0x15dc>
    7968:	b	8728 <ReadCompressedDoubleData+0x23e0>
    796c:	mov	r2, r4
    7970:	add	r0, r4, #2048	; 0x800
    7974:	sub	r4, sl, #256	; 0x100
    7978:	lsl	r7, r3, #8
    797c:	mov	r5, #0
    7980:	mov	r1, #256	; 0x100
    7984:	add	r6, sp, #32
    7988:	mov	r8, #32
    798c:	str	r3, [sp, #12]
    7990:	mov	sl, r2
    7994:	str	r2, [sp, #4]
    7998:	str	r1, [sp, #20]
    799c:	mov	r9, r0
    79a0:	ldr	r0, [sp, #28]
    79a4:	ldr	r1, [sp, #24]
    79a8:	mov	r2, r6
    79ac:	mov	r3, r7
    79b0:	bl	3238 <InflateData>
    79b4:	mov	r2, sl
    79b8:	mov	r0, #0
    79bc:	mov	r1, sl
    79c0:	add	r3, r6, r0
    79c4:	add	r0, r0, #16
    79c8:	add	r2, r2, #16
    79cc:	vld1.32	{d0}, [r3 :64]!
    79d0:	cmp	r0, #1024	; 0x400
    79d4:	vcvt.f64.s32	d17, s1
    79d8:	vcvt.f64.s32	d16, s0
    79dc:	vst1.64	{d16-d17}, [r1], r8
    79e0:	vldr	d0, [r3]
    79e4:	vcvt.f64.s32	d17, s1
    79e8:	vcvt.f64.s32	d16, s0
    79ec:	vst1.64	{d16-d17}, [r2]
    79f0:	mov	r2, r1
    79f4:	bne	79c0 <ReadCompressedDoubleData+0x1678>
    79f8:	ldr	r1, [sp, #20]
    79fc:	mov	r2, r5
    7a00:	add	r5, r5, #256	; 0x100
    7a04:	add	sl, sl, #2048	; 0x800
    7a08:	add	r0, r9, #2048	; 0x800
    7a0c:	cmp	r5, r4
    7a10:	add	r1, r1, #256	; 0x100
    7a14:	blt	7998 <ReadCompressedDoubleData+0x1650>
    7a18:	ldr	sl, [fp, #8]
    7a1c:	ldr	r0, [sp, #12]
    7a20:	ldr	r1, [sp, #24]
    7a24:	add	r4, sp, #32
    7a28:	str	r2, [sp, #16]
    7a2c:	mov	r2, r4
    7a30:	sub	r8, sl, r5
    7a34:	mov	r6, sl
    7a38:	mul	r3, r8, r0
    7a3c:	ldr	r0, [sp, #28]
    7a40:	mov	sl, r3
    7a44:	bl	3238 <InflateData>
    7a48:	cmp	r8, #1
    7a4c:	blt	8920 <ReadCompressedDoubleData+0x25d8>
    7a50:	mov	lr, #0
    7a54:	beq	87e0 <ReadCompressedDoubleData+0x2498>
    7a58:	bic	lr, r8, #1
    7a5c:	mov	r0, #1
    7a60:	subs	r1, lr, #2
    7a64:	add	r1, r0, r1, lsr #1
    7a68:	and	ip, r1, #1
    7a6c:	beq	87a4 <ReadCompressedDoubleData+0x245c>
    7a70:	ldr	r1, [sp, #16]
    7a74:	mov	r7, r9
    7a78:	sub	r1, r6, r1
    7a7c:	mov	r6, r4
    7a80:	sub	r1, r1, #256	; 0x100
    7a84:	bic	r1, r1, #1
    7a88:	sub	r1, r1, #2
    7a8c:	add	r0, r0, r1, lsr #1
    7a90:	mvn	r2, r1, lsr #1
    7a94:	mov	r1, #32
    7a98:	and	r0, r0, #1
    7a9c:	add	r3, r2, r0
    7aa0:	mov	r2, #0
    7aa4:	mov	r0, #16
    7aa8:	vld1.32	{d0}, [r6 :64], r0
    7aac:	adds	r3, r3, #2
    7ab0:	add	r2, r2, #4
    7ab4:	vcvt.f64.s32	d17, s1
    7ab8:	vcvt.f64.s32	d16, s0
    7abc:	vst1.64	{d16-d17}, [r7], r1
    7ac0:	vldr	d0, [r4, #8]
    7ac4:	add	r4, r9, #16
    7ac8:	mov	r9, r7
    7acc:	vcvt.f64.s32	d17, s1
    7ad0:	vcvt.f64.s32	d16, s0
    7ad4:	vst1.64	{d16-d17}, [r4]
    7ad8:	mov	r4, r6
    7adc:	bne	7aa8 <ReadCompressedDoubleData+0x1760>
    7ae0:	b	87a8 <ReadCompressedDoubleData+0x2460>
    7ae4:	mov	r2, r4
    7ae8:	add	r0, r4, #2048	; 0x800
    7aec:	sub	r4, sl, #256	; 0x100
    7af0:	lsl	r7, r3, #8
    7af4:	mov	r5, #0
    7af8:	mov	r1, #256	; 0x100
    7afc:	add	r6, sp, #32
    7b00:	mov	r8, #32
    7b04:	str	r3, [sp, #12]
    7b08:	mov	sl, r2
    7b0c:	str	r2, [sp, #4]
    7b10:	str	r1, [sp, #20]
    7b14:	mov	r9, r0
    7b18:	ldr	r0, [sp, #28]
    7b1c:	ldr	r1, [sp, #24]
    7b20:	mov	r2, r6
    7b24:	mov	r3, r7
    7b28:	bl	3238 <InflateData>
    7b2c:	mov	r2, sl
    7b30:	mov	r0, #0
    7b34:	mov	r1, sl
    7b38:	add	r3, r6, r0
    7b3c:	add	r0, r0, #16
    7b40:	add	r2, r2, #16
    7b44:	vld1.32	{d0}, [r3 :64]!
    7b48:	cmp	r0, #1024	; 0x400
    7b4c:	vcvt.f64.u32	d17, s1
    7b50:	vcvt.f64.u32	d16, s0
    7b54:	vst1.64	{d16-d17}, [r1], r8
    7b58:	vldr	d0, [r3]
    7b5c:	vcvt.f64.u32	d17, s1
    7b60:	vcvt.f64.u32	d16, s0
    7b64:	vst1.64	{d16-d17}, [r2]
    7b68:	mov	r2, r1
    7b6c:	bne	7b38 <ReadCompressedDoubleData+0x17f0>
    7b70:	ldr	r1, [sp, #20]
    7b74:	mov	r2, r5
    7b78:	add	r5, r5, #256	; 0x100
    7b7c:	add	sl, sl, #2048	; 0x800
    7b80:	add	r0, r9, #2048	; 0x800
    7b84:	cmp	r5, r4
    7b88:	add	r1, r1, #256	; 0x100
    7b8c:	blt	7b10 <ReadCompressedDoubleData+0x17c8>
    7b90:	ldr	sl, [fp, #8]
    7b94:	ldr	r0, [sp, #12]
    7b98:	ldr	r1, [sp, #24]
    7b9c:	add	r4, sp, #32
    7ba0:	str	r2, [sp, #16]
    7ba4:	mov	r2, r4
    7ba8:	sub	r8, sl, r5
    7bac:	mov	r6, sl
    7bb0:	mul	r3, r8, r0
    7bb4:	ldr	r0, [sp, #28]
    7bb8:	mov	sl, r3
    7bbc:	bl	3238 <InflateData>
    7bc0:	cmp	r8, #1
    7bc4:	blt	8920 <ReadCompressedDoubleData+0x25d8>
    7bc8:	mov	lr, #0
    7bcc:	beq	8860 <ReadCompressedDoubleData+0x2518>
    7bd0:	bic	lr, r8, #1
    7bd4:	mov	r0, #1
    7bd8:	subs	r1, lr, #2
    7bdc:	add	r1, r0, r1, lsr #1
    7be0:	and	ip, r1, #1
    7be4:	beq	8824 <ReadCompressedDoubleData+0x24dc>
    7be8:	ldr	r1, [sp, #16]
    7bec:	mov	r7, r9
    7bf0:	sub	r1, r6, r1
    7bf4:	mov	r6, r4
    7bf8:	sub	r1, r1, #256	; 0x100
    7bfc:	bic	r1, r1, #1
    7c00:	sub	r1, r1, #2
    7c04:	add	r0, r0, r1, lsr #1
    7c08:	mvn	r2, r1, lsr #1
    7c0c:	mov	r1, #32
    7c10:	and	r0, r0, #1
    7c14:	add	r3, r2, r0
    7c18:	mov	r2, #0
    7c1c:	mov	r0, #16
    7c20:	vld1.32	{d0}, [r6 :64], r0
    7c24:	adds	r3, r3, #2
    7c28:	add	r2, r2, #4
    7c2c:	vcvt.f64.u32	d17, s1
    7c30:	vcvt.f64.u32	d16, s0
    7c34:	vst1.64	{d16-d17}, [r7], r1
    7c38:	vldr	d0, [r4, #8]
    7c3c:	add	r4, r9, #16
    7c40:	mov	r9, r7
    7c44:	vcvt.f64.u32	d17, s1
    7c48:	vcvt.f64.u32	d16, s0
    7c4c:	vst1.64	{d16-d17}, [r4]
    7c50:	mov	r4, r6
    7c54:	bne	7c20 <ReadCompressedDoubleData+0x18d8>
    7c58:	b	8828 <ReadCompressedDoubleData+0x24e0>
    7c5c:	mov	r2, r4
    7c60:	add	r0, r4, #2048	; 0x800
    7c64:	sub	r4, sl, #256	; 0x100
    7c68:	lsl	r9, r3, #8
    7c6c:	mov	r5, #0
    7c70:	mov	r1, #256	; 0x100
    7c74:	add	r6, sp, #32
    7c78:	mov	r8, #32
    7c7c:	str	r3, [sp, #12]
    7c80:	mov	sl, r2
    7c84:	str	r2, [sp, #4]
    7c88:	str	r1, [sp, #20]
    7c8c:	mov	r7, r0
    7c90:	ldr	r0, [sp, #28]
    7c94:	ldr	r1, [sp, #24]
    7c98:	mov	r2, r6
    7c9c:	mov	r3, r9
    7ca0:	bl	3238 <InflateData>
    7ca4:	mov	r0, sl
    7ca8:	mov	r1, #0
    7cac:	add	r2, r6, r1
    7cb0:	add	r3, r0, #16
    7cb4:	add	r1, r1, #16
    7cb8:	vld1.32	{d0}, [r2 :64]!
    7cbc:	cmp	r1, #1024	; 0x400
    7cc0:	vcvt.f64.f32	d17, s1
    7cc4:	vcvt.f64.f32	d16, s0
    7cc8:	vst1.64	{d16-d17}, [r0], r8
    7ccc:	vldr	d0, [r2]
    7cd0:	vcvt.f64.f32	d17, s1
    7cd4:	vcvt.f64.f32	d16, s0
    7cd8:	vst1.64	{d16-d17}, [r3]
    7cdc:	bne	7cac <ReadCompressedDoubleData+0x1964>
    7ce0:	ldr	r1, [sp, #20]
    7ce4:	mov	r2, r5
    7ce8:	add	r5, r5, #256	; 0x100
    7cec:	add	sl, sl, #2048	; 0x800
    7cf0:	add	r0, r7, #2048	; 0x800
    7cf4:	cmp	r5, r4
    7cf8:	add	r1, r1, #256	; 0x100
    7cfc:	blt	7c88 <ReadCompressedDoubleData+0x1940>
    7d00:	ldr	sl, [fp, #8]
    7d04:	ldr	r0, [sp, #12]
    7d08:	ldr	r1, [sp, #24]
    7d0c:	add	r4, sp, #32
    7d10:	str	r2, [sp, #16]
    7d14:	mov	r2, r4
    7d18:	sub	r9, sl, r5
    7d1c:	mov	r6, sl
    7d20:	mul	r3, r9, r0
    7d24:	ldr	r0, [sp, #28]
    7d28:	mov	sl, r3
    7d2c:	bl	3238 <InflateData>
    7d30:	cmp	r9, #1
    7d34:	blt	8920 <ReadCompressedDoubleData+0x25d8>
    7d38:	mov	lr, #0
    7d3c:	beq	88e0 <ReadCompressedDoubleData+0x2598>
    7d40:	bic	lr, r9, #1
    7d44:	mov	r0, #1
    7d48:	subs	r1, lr, #2
    7d4c:	add	r1, r0, r1, lsr #1
    7d50:	and	ip, r1, #1
    7d54:	beq	88a4 <ReadCompressedDoubleData+0x255c>
    7d58:	ldr	r1, [sp, #16]
    7d5c:	mov	r8, #16
    7d60:	sub	r1, r6, r1
    7d64:	mov	r6, r4
    7d68:	sub	r1, r1, #256	; 0x100
    7d6c:	bic	r1, r1, #1
    7d70:	sub	r1, r1, #2
    7d74:	add	r0, r0, r1, lsr #1
    7d78:	mvn	r2, r1, lsr #1
    7d7c:	mov	r1, #32
    7d80:	and	r0, r0, #1
    7d84:	add	r3, r2, r0
    7d88:	mov	r2, #0
    7d8c:	vld1.32	{d0}, [r6 :64], r8
    7d90:	add	r0, r7, #16
    7d94:	adds	r3, r3, #2
    7d98:	add	r2, r2, #4
    7d9c:	vcvt.f64.f32	d17, s1
    7da0:	vcvt.f64.f32	d16, s0
    7da4:	vst1.64	{d16-d17}, [r7], r1
    7da8:	vldr	d0, [r4, #8]
    7dac:	mov	r4, r6
    7db0:	vcvt.f64.f32	d17, s1
    7db4:	vcvt.f64.f32	d16, s0
    7db8:	vst1.64	{d16-d17}, [r0]
    7dbc:	bne	7d8c <ReadCompressedDoubleData+0x1a44>
    7dc0:	b	88a8 <ReadCompressedDoubleData+0x2560>
    7dc4:	mov	r1, sl
    7dc8:	add	r0, r4, #1024	; 0x400
    7dcc:	lsl	sl, r3, #7
    7dd0:	mov	r7, #0
    7dd4:	add	r5, sp, #32
    7dd8:	str	r3, [sp, #12]
    7ddc:	str	r4, [sp, #4]
    7de0:	sub	r1, r1, #128	; 0x80
    7de4:	str	r1, [sp, #8]
    7de8:	mov	r1, #128	; 0x80
    7dec:	str	r1, [sp, #20]
    7df0:	mov	r8, r0
    7df4:	ldr	r0, [sp, #28]
    7df8:	ldr	r1, [sp, #24]
    7dfc:	mov	r2, r5
    7e00:	mov	r3, sl
    7e04:	str	r7, [sp, #16]
    7e08:	bl	3238 <InflateData>
    7e0c:	mov	r7, #0
    7e10:	add	r6, r5, r7
    7e14:	vld1.64	{d8-d9}, [r6]!
    7e18:	vmov.32	r0, d9[0]
    7e1c:	vmov.32	r1, d9[1]
    7e20:	bl	6b664 <__aeabi_l2d>
    7e24:	vmov.32	r2, d8[0]
    7e28:	vmov.32	r3, d8[1]
    7e2c:	vmov	d9, r0, r1
    7e30:	mov	r0, r2
    7e34:	mov	r1, r3
    7e38:	bl	6b664 <__aeabi_l2d>
    7e3c:	vmov	d8, r0, r1
    7e40:	add	r9, r4, r7
    7e44:	vst1.64	{d8-d9}, [r9]!
    7e48:	vld1.64	{d8-d9}, [r6]
    7e4c:	vmov.32	r0, d9[0]
    7e50:	vmov.32	r1, d9[1]
    7e54:	bl	6b664 <__aeabi_l2d>
    7e58:	vmov.32	r2, d8[0]
    7e5c:	vmov.32	r3, d8[1]
    7e60:	vmov	d9, r0, r1
    7e64:	mov	r0, r2
    7e68:	mov	r1, r3
    7e6c:	bl	6b664 <__aeabi_l2d>
    7e70:	vmov	d8, r0, r1
    7e74:	add	r7, r7, #32
    7e78:	cmp	r7, #1024	; 0x400
    7e7c:	vst1.64	{d8-d9}, [r9]
    7e80:	bne	7e10 <ReadCompressedDoubleData+0x1ac8>
    7e84:	ldr	r6, [sp, #16]
    7e88:	ldr	r1, [sp, #20]
    7e8c:	ldr	r2, [sp, #8]
    7e90:	add	r4, r4, #1024	; 0x400
    7e94:	add	r0, r8, #1024	; 0x400
    7e98:	add	r7, r6, #128	; 0x80
    7e9c:	add	r1, r1, #128	; 0x80
    7ea0:	cmp	r7, r2
    7ea4:	blt	7dec <ReadCompressedDoubleData+0x1aa4>
    7ea8:	ldr	sl, [fp, #8]
    7eac:	ldr	r0, [sp, #12]
    7eb0:	ldr	r1, [sp, #24]
    7eb4:	add	r5, sp, #32
    7eb8:	mov	r2, r5
    7ebc:	sub	r4, sl, r7
    7ec0:	mul	r9, r4, r0
    7ec4:	ldr	r0, [sp, #28]
    7ec8:	mov	r3, r9
    7ecc:	bl	3238 <InflateData>
    7ed0:	cmp	r4, #1
    7ed4:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    7ed8:	mov	r2, #0
    7edc:	beq	89a8 <ReadCompressedDoubleData+0x2660>
    7ee0:	bic	r0, r4, #1
    7ee4:	str	r4, [sp, #28]
    7ee8:	str	r9, [sp, #12]
    7eec:	str	r0, [sp, #24]
    7ef0:	subs	r1, r0, #2
    7ef4:	mov	r0, #1
    7ef8:	add	r1, r0, r1, lsr #1
    7efc:	and	r1, r1, #1
    7f00:	str	r1, [sp, #8]
    7f04:	beq	8938 <ReadCompressedDoubleData+0x25f0>
    7f08:	sub	r1, sl, r6
    7f0c:	mov	sl, r5
    7f10:	mov	r5, #0
    7f14:	mov	r6, r8
    7f18:	sub	r1, r1, #128	; 0x80
    7f1c:	mov	r4, sl
    7f20:	bic	r1, r1, #1
    7f24:	sub	r1, r1, #2
    7f28:	add	r0, r0, r1, lsr #1
    7f2c:	mvn	r2, r1, lsr #1
    7f30:	and	r0, r0, #1
    7f34:	add	r9, r2, r0
    7f38:	mov	r0, #32
    7f3c:	vld1.64	{d8-d9}, [r4], r0
    7f40:	vmov.32	r0, d9[0]
    7f44:	vmov.32	r1, d9[1]
    7f48:	bl	6b664 <__aeabi_l2d>
    7f4c:	vmov.32	r2, d8[0]
    7f50:	vmov.32	r3, d8[1]
    7f54:	vmov	d9, r0, r1
    7f58:	mov	r0, r2
    7f5c:	mov	r1, r3
    7f60:	bl	6b664 <__aeabi_l2d>
    7f64:	vmov	d8, r0, r1
    7f68:	mov	r0, #32
    7f6c:	vst1.64	{d8-d9}, [r6], r0
    7f70:	add	r0, sl, #16
    7f74:	vld1.64	{d8-d9}, [r0]
    7f78:	vmov.32	r0, d9[0]
    7f7c:	vmov.32	r1, d9[1]
    7f80:	bl	6b664 <__aeabi_l2d>
    7f84:	vmov.32	r2, d8[0]
    7f88:	vmov.32	r3, d8[1]
    7f8c:	vmov	d9, r0, r1
    7f90:	mov	r0, r2
    7f94:	mov	r1, r3
    7f98:	bl	6b664 <__aeabi_l2d>
    7f9c:	vmov	d8, r0, r1
    7fa0:	add	r0, r8, #16
    7fa4:	adds	r9, r9, #2
    7fa8:	add	r5, r5, #4
    7fac:	mov	r8, r6
    7fb0:	mov	sl, r4
    7fb4:	vst1.64	{d8-d9}, [r0]
    7fb8:	bne	7f38 <ReadCompressedDoubleData+0x1bf0>
    7fbc:	b	893c <ReadCompressedDoubleData+0x25f4>
    7fc0:	mov	r1, sl
    7fc4:	add	r0, r4, #1024	; 0x400
    7fc8:	lsl	sl, r3, #7
    7fcc:	mov	r7, #0
    7fd0:	add	r5, sp, #32
    7fd4:	str	r3, [sp, #12]
    7fd8:	str	r4, [sp, #4]
    7fdc:	sub	r1, r1, #128	; 0x80
    7fe0:	str	r1, [sp, #8]
    7fe4:	mov	r1, #128	; 0x80
    7fe8:	str	r1, [sp, #20]
    7fec:	mov	r8, r0
    7ff0:	ldr	r0, [sp, #28]
    7ff4:	ldr	r1, [sp, #24]
    7ff8:	mov	r2, r5
    7ffc:	mov	r3, sl
    8000:	str	r7, [sp, #16]
    8004:	bl	3238 <InflateData>
    8008:	mov	r7, #0
    800c:	add	r6, r5, r7
    8010:	vld1.64	{d8-d9}, [r6]!
    8014:	vmov.32	r0, d9[0]
    8018:	vmov.32	r1, d9[1]
    801c:	bl	6b650 <__aeabi_ul2d>
    8020:	vmov.32	r2, d8[0]
    8024:	vmov.32	r3, d8[1]
    8028:	vmov	d9, r0, r1
    802c:	mov	r0, r2
    8030:	mov	r1, r3
    8034:	bl	6b650 <__aeabi_ul2d>
    8038:	vmov	d8, r0, r1
    803c:	add	r9, r4, r7
    8040:	vst1.64	{d8-d9}, [r9]!
    8044:	vld1.64	{d8-d9}, [r6]
    8048:	vmov.32	r0, d9[0]
    804c:	vmov.32	r1, d9[1]
    8050:	bl	6b650 <__aeabi_ul2d>
    8054:	vmov.32	r2, d8[0]
    8058:	vmov.32	r3, d8[1]
    805c:	vmov	d9, r0, r1
    8060:	mov	r0, r2
    8064:	mov	r1, r3
    8068:	bl	6b650 <__aeabi_ul2d>
    806c:	vmov	d8, r0, r1
    8070:	add	r7, r7, #32
    8074:	cmp	r7, #1024	; 0x400
    8078:	vst1.64	{d8-d9}, [r9]
    807c:	bne	800c <ReadCompressedDoubleData+0x1cc4>
    8080:	ldr	r6, [sp, #16]
    8084:	ldr	r1, [sp, #20]
    8088:	ldr	r2, [sp, #8]
    808c:	add	r4, r4, #1024	; 0x400
    8090:	add	r0, r8, #1024	; 0x400
    8094:	add	r7, r6, #128	; 0x80
    8098:	add	r1, r1, #128	; 0x80
    809c:	cmp	r7, r2
    80a0:	blt	7fe8 <ReadCompressedDoubleData+0x1ca0>
    80a4:	ldr	sl, [fp, #8]
    80a8:	ldr	r0, [sp, #12]
    80ac:	ldr	r1, [sp, #24]
    80b0:	add	r5, sp, #32
    80b4:	mov	r2, r5
    80b8:	sub	r4, sl, r7
    80bc:	mul	r9, r4, r0
    80c0:	ldr	r0, [sp, #28]
    80c4:	mov	r3, r9
    80c8:	bl	3238 <InflateData>
    80cc:	cmp	r4, #1
    80d0:	blt	8924 <ReadCompressedDoubleData+0x25dc>
    80d4:	mov	r2, #0
    80d8:	beq	8a5c <ReadCompressedDoubleData+0x2714>
    80dc:	bic	r0, r4, #1
    80e0:	str	r4, [sp, #28]
    80e4:	str	r9, [sp, #12]
    80e8:	str	r0, [sp, #24]
    80ec:	subs	r1, r0, #2
    80f0:	mov	r0, #1
    80f4:	add	r1, r0, r1, lsr #1
    80f8:	and	r1, r1, #1
    80fc:	str	r1, [sp, #8]
    8100:	beq	89ec <ReadCompressedDoubleData+0x26a4>
    8104:	sub	r1, sl, r6
    8108:	mov	sl, r5
    810c:	mov	r5, #0
    8110:	mov	r6, r8
    8114:	sub	r1, r1, #128	; 0x80
    8118:	mov	r4, sl
    811c:	bic	r1, r1, #1
    8120:	sub	r1, r1, #2
    8124:	add	r0, r0, r1, lsr #1
    8128:	mvn	r2, r1, lsr #1
    812c:	and	r0, r0, #1
    8130:	add	r9, r2, r0
    8134:	mov	r0, #32
    8138:	vld1.64	{d8-d9}, [r4], r0
    813c:	vmov.32	r0, d9[0]
    8140:	vmov.32	r1, d9[1]
    8144:	bl	6b650 <__aeabi_ul2d>
    8148:	vmov.32	r2, d8[0]
    814c:	vmov.32	r3, d8[1]
    8150:	vmov	d9, r0, r1
    8154:	mov	r0, r2
    8158:	mov	r1, r3
    815c:	bl	6b650 <__aeabi_ul2d>
    8160:	vmov	d8, r0, r1
    8164:	mov	r0, #32
    8168:	vst1.64	{d8-d9}, [r6], r0
    816c:	add	r0, sl, #16
    8170:	vld1.64	{d8-d9}, [r0]
    8174:	vmov.32	r0, d9[0]
    8178:	vmov.32	r1, d9[1]
    817c:	bl	6b650 <__aeabi_ul2d>
    8180:	vmov.32	r2, d8[0]
    8184:	vmov.32	r3, d8[1]
    8188:	vmov	d9, r0, r1
    818c:	mov	r0, r2
    8190:	mov	r1, r3
    8194:	bl	6b650 <__aeabi_ul2d>
    8198:	vmov	d8, r0, r1
    819c:	add	r0, r8, #16
    81a0:	adds	r9, r9, #2
    81a4:	add	r5, r5, #4
    81a8:	mov	r8, r6
    81ac:	mov	sl, r4
    81b0:	vst1.64	{d8-d9}, [r0]
    81b4:	bne	8134 <ReadCompressedDoubleData+0x1dec>
    81b8:	b	89f0 <ReadCompressedDoubleData+0x26a8>
    81bc:	mov	lr, r4
    81c0:	mov	r1, #0
    81c4:	cmp	ip, #0
    81c8:	mov	r4, lr
    81cc:	beq	81f0 <ReadCompressedDoubleData+0x1ea8>
    81d0:	add	r2, r5, r1
    81d4:	add	r1, r4, r1, lsl #3
    81d8:	vld1.16	{d16[0]}, [r2 :16]
    81dc:	vmovl.s8	q8, d16
    81e0:	vmovl.s16	q0, d16
    81e4:	vcvt.f64.s32	d17, s1
    81e8:	vcvt.f64.s32	d16, s0
    81ec:	vst1.64	{d16-d17}, [r1]
    81f0:	cmp	r0, sl
    81f4:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    81f8:	add	r2, r4, r0, lsl #3
    81fc:	add	r1, r5, r0
    8200:	sub	r0, sl, r0
    8204:	ldrsb	r3, [r1], #1
    8208:	subs	r0, r0, #1
    820c:	vmov	s0, r3
    8210:	vcvt.f64.s32	d16, s0
    8214:	vstmia	r2!, {d16}
    8218:	bne	8204 <ReadCompressedDoubleData+0x1ebc>
    821c:	b	8924 <ReadCompressedDoubleData+0x25dc>
    8220:	mov	lr, r4
    8224:	mov	r1, #0
    8228:	cmp	ip, #0
    822c:	mov	r4, lr
    8230:	beq	8254 <ReadCompressedDoubleData+0x1f0c>
    8234:	add	r2, r5, r1
    8238:	add	r1, r4, r1, lsl #3
    823c:	vld1.16	{d16[0]}, [r2 :16]
    8240:	vmovl.u8	q8, d16
    8244:	vmovl.u16	q0, d16
    8248:	vcvt.f64.u32	d17, s1
    824c:	vcvt.f64.u32	d16, s0
    8250:	vst1.64	{d16-d17}, [r1]
    8254:	cmp	r0, sl
    8258:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    825c:	add	r2, r4, r0, lsl #3
    8260:	add	r1, r5, r0
    8264:	sub	r0, sl, r0
    8268:	ldrb	r3, [r1], #1
    826c:	subs	r0, r0, #1
    8270:	vmov	s0, r3
    8274:	vcvt.f64.u32	d16, s0
    8278:	vstmia	r2!, {d16}
    827c:	bne	8268 <ReadCompressedDoubleData+0x1f20>
    8280:	b	8924 <ReadCompressedDoubleData+0x25dc>
    8284:	mov	r2, #0
    8288:	ldr	r3, [sp, #4]
    828c:	cmp	ip, #0
    8290:	beq	82b8 <ReadCompressedDoubleData+0x1f70>
    8294:	add	r1, r6, r2
    8298:	vld1.16	{d16[0]}, [r1 :16]
    829c:	add	r1, r2, r5
    82a0:	add	r1, r3, r1, lsl #3
    82a4:	vmovl.s8	q8, d16
    82a8:	vmovl.s16	q0, d16
    82ac:	vcvt.f64.s32	d17, s1
    82b0:	vcvt.f64.s32	d16, s0
    82b4:	vst1.64	{d16-d17}, [r1]
    82b8:	cmp	r9, r0
    82bc:	beq	82fc <ReadCompressedDoubleData+0x1fb4>
    82c0:	ldr	r2, [sp, #20]
    82c4:	ldr	r7, [sp, #16]
    82c8:	add	r1, r6, r0
    82cc:	add	r2, r0, r2
    82d0:	add	r2, r3, r2, lsl #3
    82d4:	ldr	r3, [fp, #8]
    82d8:	sub	r3, r3, r7
    82dc:	sub	r0, r3, r0
    82e0:	sub	r0, r0, #1024	; 0x400
    82e4:	ldrsb	r3, [r1], #1
    82e8:	subs	r0, r0, #1
    82ec:	vmov	s0, r3
    82f0:	vcvt.f64.s32	d16, s0
    82f4:	vstmia	r2!, {d16}
    82f8:	bne	82e4 <ReadCompressedDoubleData+0x1f9c>
    82fc:	mov	r9, r8
    8300:	b	8924 <ReadCompressedDoubleData+0x25dc>
    8304:	mov	lr, r4
    8308:	mov	r2, #0
    830c:	ldr	r3, [sp, #4]
    8310:	cmp	ip, #0
    8314:	beq	833c <ReadCompressedDoubleData+0x1ff4>
    8318:	add	r1, r6, r2
    831c:	vld1.16	{d16[0]}, [r1 :16]
    8320:	add	r1, r2, r8
    8324:	add	r1, r3, r1, lsl #3
    8328:	vmovl.u8	q8, d16
    832c:	vmovl.u16	q0, d16
    8330:	vcvt.f64.u32	d17, s1
    8334:	vcvt.f64.u32	d16, s0
    8338:	vst1.64	{d16-d17}, [r1]
    833c:	cmp	r9, r0
    8340:	mov	r4, lr
    8344:	beq	8920 <ReadCompressedDoubleData+0x25d8>
    8348:	ldr	r2, [sp, #20]
    834c:	add	r1, r6, r0
    8350:	add	r2, r0, r2
    8354:	add	r2, r3, r2, lsl #3
    8358:	ldr	r3, [sp, #16]
    835c:	sub	r3, r4, r3
    8360:	sub	r0, r3, r0
    8364:	sub	r0, r0, #1024	; 0x400
    8368:	ldrb	r3, [r1], #1
    836c:	subs	r0, r0, #1
    8370:	vmov	s0, r3
    8374:	vcvt.f64.u32	d16, s0
    8378:	vstmia	r2!, {d16}
    837c:	bne	8368 <ReadCompressedDoubleData+0x2020>
    8380:	b	8920 <ReadCompressedDoubleData+0x25d8>
    8384:	mov	lr, r4
    8388:	mov	r1, #0
    838c:	cmp	ip, #0
    8390:	mov	r4, lr
    8394:	beq	83b8 <ReadCompressedDoubleData+0x2070>
    8398:	add	r2, sp, #32
    839c:	add	r2, r2, r1, lsl #1
    83a0:	add	r1, r4, r1, lsl #3
    83a4:	vld1.32	{d16[0]}, [r2 :32]
    83a8:	vmovl.s16	q0, d16
    83ac:	vcvt.f64.s32	d17, s1
    83b0:	vcvt.f64.s32	d16, s0
    83b4:	vst1.64	{d16-d17}, [r1]
    83b8:	cmp	r0, sl
    83bc:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    83c0:	add	r1, sp, #32
    83c4:	add	r2, r4, r0, lsl #3
    83c8:	add	r1, r1, r0, lsl #1
    83cc:	sub	r0, sl, r0
    83d0:	ldrsh	r3, [r1], #2
    83d4:	subs	r0, r0, #1
    83d8:	vmov	s0, r3
    83dc:	vcvt.f64.s32	d16, s0
    83e0:	vstmia	r2!, {d16}
    83e4:	bne	83d0 <ReadCompressedDoubleData+0x2088>
    83e8:	b	8924 <ReadCompressedDoubleData+0x25dc>
    83ec:	mov	lr, r4
    83f0:	mov	r1, #0
    83f4:	cmp	ip, #0
    83f8:	mov	r4, lr
    83fc:	beq	8420 <ReadCompressedDoubleData+0x20d8>
    8400:	add	r2, sp, #32
    8404:	add	r2, r2, r1, lsl #1
    8408:	add	r1, r4, r1, lsl #3
    840c:	vld1.32	{d16[0]}, [r2 :32]
    8410:	vmovl.u16	q0, d16
    8414:	vcvt.f64.u32	d17, s1
    8418:	vcvt.f64.u32	d16, s0
    841c:	vst1.64	{d16-d17}, [r1]
    8420:	cmp	r0, sl
    8424:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    8428:	add	r1, sp, #32
    842c:	add	r2, r4, r0, lsl #3
    8430:	add	r1, r1, r0, lsl #1
    8434:	sub	r0, sl, r0
    8438:	ldrh	r3, [r1], #2
    843c:	subs	r0, r0, #1
    8440:	vmov	s0, r3
    8444:	vcvt.f64.u32	d16, s0
    8448:	vstmia	r2!, {d16}
    844c:	bne	8438 <ReadCompressedDoubleData+0x20f0>
    8450:	b	8924 <ReadCompressedDoubleData+0x25dc>
    8454:	mov	r1, #0
    8458:	cmp	ip, #0
    845c:	beq	847c <ReadCompressedDoubleData+0x2134>
    8460:	add	r0, sp, #32
    8464:	add	r0, r0, r1, lsl #2
    8468:	vldr	d0, [r0]
    846c:	add	r0, r8, r1, lsl #3
    8470:	vcvt.f64.s32	d17, s1
    8474:	vcvt.f64.s32	d16, s0
    8478:	vst1.64	{d16-d17}, [r0]
    847c:	cmp	lr, sl
    8480:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    8484:	add	r0, sp, #32
    8488:	add	r1, r8, lr, lsl #3
    848c:	sub	r2, sl, lr
    8490:	add	r0, r0, lr, lsl #2
    8494:	ldr	r3, [r0], #4
    8498:	subs	r2, r2, #1
    849c:	vmov	s0, r3
    84a0:	vcvt.f64.s32	d16, s0
    84a4:	vstmia	r1!, {d16}
    84a8:	bne	8494 <ReadCompressedDoubleData+0x214c>
    84ac:	b	8924 <ReadCompressedDoubleData+0x25dc>
    84b0:	mov	r1, #0
    84b4:	cmp	ip, #0
    84b8:	beq	84d8 <ReadCompressedDoubleData+0x2190>
    84bc:	add	r0, sp, #32
    84c0:	add	r0, r0, r1, lsl #2
    84c4:	vldr	d0, [r0]
    84c8:	add	r0, r8, r1, lsl #3
    84cc:	vcvt.f64.u32	d17, s1
    84d0:	vcvt.f64.u32	d16, s0
    84d4:	vst1.64	{d16-d17}, [r0]
    84d8:	cmp	lr, sl
    84dc:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    84e0:	add	r0, sp, #32
    84e4:	add	r1, r8, lr, lsl #3
    84e8:	sub	r2, sl, lr
    84ec:	add	r0, r0, lr, lsl #2
    84f0:	ldr	r3, [r0], #4
    84f4:	subs	r2, r2, #1
    84f8:	vmov	s0, r3
    84fc:	vcvt.f64.u32	d16, s0
    8500:	vstmia	r1!, {d16}
    8504:	bne	84f0 <ReadCompressedDoubleData+0x21a8>
    8508:	b	8924 <ReadCompressedDoubleData+0x25dc>
    850c:	mov	r8, r4
    8510:	mov	r1, #0
    8514:	cmp	ip, #0
    8518:	mov	r4, r8
    851c:	beq	853c <ReadCompressedDoubleData+0x21f4>
    8520:	add	r0, sp, #32
    8524:	add	r0, r0, r1, lsl #2
    8528:	vldr	d0, [r0]
    852c:	add	r0, r4, r1, lsl #3
    8530:	vcvt.f64.f32	d17, s1
    8534:	vcvt.f64.f32	d16, s0
    8538:	vst1.64	{d16-d17}, [r0]
    853c:	cmp	lr, sl
    8540:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    8544:	add	r0, sp, #32
    8548:	add	r2, r4, lr, lsl #3
    854c:	add	r1, r0, lr, lsl #2
    8550:	sub	r0, sl, lr
    8554:	vldr	s0, [r1]
    8558:	add	r1, r1, #4
    855c:	subs	r0, r0, #1
    8560:	vcvt.f64.f32	d16, s0
    8564:	vstr	d16, [r2]
    8568:	add	r2, r2, #8
    856c:	bne	8554 <ReadCompressedDoubleData+0x220c>
    8570:	b	8924 <ReadCompressedDoubleData+0x25dc>
    8574:	mov	r7, #0
    8578:	ldr	r0, [sp, #24]
    857c:	ldr	r9, [sp, #12]
    8580:	cmp	r0, #0
    8584:	beq	85c8 <ReadCompressedDoubleData+0x2280>
    8588:	add	r0, sp, #32
    858c:	add	r0, r0, r7, lsl #3
    8590:	vld1.64	{d8-d9}, [r0]
    8594:	vmov.32	r0, d9[0]
    8598:	vmov.32	r1, d9[1]
    859c:	bl	6b664 <__aeabi_l2d>
    85a0:	vmov.32	r2, d8[0]
    85a4:	vmov.32	r3, d8[1]
    85a8:	vmov	d9, r0, r1
    85ac:	mov	r0, r2
    85b0:	mov	r1, r3
    85b4:	bl	6b664 <__aeabi_l2d>
    85b8:	vmov	d8, r0, r1
    85bc:	ldr	r0, [sp, #4]
    85c0:	add	r0, r0, r7, lsl #3
    85c4:	vst1.64	{d8-d9}, [r0]
    85c8:	ldr	r1, [sp, #28]
    85cc:	cmp	r1, sl
    85d0:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    85d4:	add	r0, sp, #32
    85d8:	sub	r6, sl, r1
    85dc:	add	r4, r0, r1, lsl #3
    85e0:	ldr	r0, [sp, #4]
    85e4:	add	r5, r0, r1, lsl #3
    85e8:	ldrd	r0, [r4]
    85ec:	bl	6b664 <__aeabi_l2d>
    85f0:	strd	r0, [r5]
    85f4:	add	r4, r4, #8
    85f8:	add	r5, r5, #8
    85fc:	subs	r6, r6, #1
    8600:	bne	85e8 <ReadCompressedDoubleData+0x22a0>
    8604:	b	8924 <ReadCompressedDoubleData+0x25dc>
    8608:	mov	r7, #0
    860c:	ldr	r0, [sp, #24]
    8610:	ldr	r9, [sp, #12]
    8614:	cmp	r0, #0
    8618:	beq	865c <ReadCompressedDoubleData+0x2314>
    861c:	add	r0, sp, #32
    8620:	add	r0, r0, r7, lsl #3
    8624:	vld1.64	{d8-d9}, [r0]
    8628:	vmov.32	r0, d9[0]
    862c:	vmov.32	r1, d9[1]
    8630:	bl	6b650 <__aeabi_ul2d>
    8634:	vmov.32	r2, d8[0]
    8638:	vmov.32	r3, d8[1]
    863c:	vmov	d9, r0, r1
    8640:	mov	r0, r2
    8644:	mov	r1, r3
    8648:	bl	6b650 <__aeabi_ul2d>
    864c:	vmov	d8, r0, r1
    8650:	ldr	r0, [sp, #4]
    8654:	add	r0, r0, r7, lsl #3
    8658:	vst1.64	{d8-d9}, [r0]
    865c:	ldr	r1, [sp, #28]
    8660:	cmp	r1, sl
    8664:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    8668:	add	r0, sp, #32
    866c:	sub	r6, sl, r1
    8670:	add	r4, r0, r1, lsl #3
    8674:	ldr	r0, [sp, #4]
    8678:	add	r5, r0, r1, lsl #3
    867c:	ldrd	r0, [r4]
    8680:	bl	6b650 <__aeabi_ul2d>
    8684:	strd	r0, [r5]
    8688:	add	r4, r4, #8
    868c:	add	r5, r5, #8
    8690:	subs	r6, r6, #1
    8694:	bne	867c <ReadCompressedDoubleData+0x2334>
    8698:	b	8924 <ReadCompressedDoubleData+0x25dc>
    869c:	mov	lr, r4
    86a0:	mov	r2, #0
    86a4:	ldr	r3, [sp, #4]
    86a8:	cmp	ip, #0
    86ac:	beq	86d4 <ReadCompressedDoubleData+0x238c>
    86b0:	add	r1, sp, #32
    86b4:	add	r1, r1, r2, lsl #1
    86b8:	vld1.32	{d16[0]}, [r1 :32]
    86bc:	add	r1, r2, r5
    86c0:	add	r1, r3, r1, lsl #3
    86c4:	vmovl.s16	q0, d16
    86c8:	vcvt.f64.s32	d17, s1
    86cc:	vcvt.f64.s32	d16, s0
    86d0:	vst1.64	{d16-d17}, [r1]
    86d4:	cmp	r8, r0
    86d8:	mov	r4, lr
    86dc:	beq	8920 <ReadCompressedDoubleData+0x25d8>
    86e0:	ldr	r2, [sp, #20]
    86e4:	add	r1, sp, #32
    86e8:	add	r1, r1, r0, lsl #1
    86ec:	add	r2, r0, r2
    86f0:	add	r2, r3, r2, lsl #3
    86f4:	ldr	r3, [sp, #16]
    86f8:	sub	r3, r4, r3
    86fc:	sub	r0, r3, r0
    8700:	sub	r0, r0, #512	; 0x200
    8704:	ldrsh	r3, [r1], #2
    8708:	subs	r0, r0, #1
    870c:	vmov	s0, r3
    8710:	vcvt.f64.s32	d16, s0
    8714:	vstmia	r2!, {d16}
    8718:	bne	8704 <ReadCompressedDoubleData+0x23bc>
    871c:	b	8920 <ReadCompressedDoubleData+0x25d8>
    8720:	mov	lr, r4
    8724:	mov	r2, #0
    8728:	ldr	r3, [sp, #4]
    872c:	cmp	ip, #0
    8730:	beq	8758 <ReadCompressedDoubleData+0x2410>
    8734:	add	r1, sp, #32
    8738:	add	r1, r1, r2, lsl #1
    873c:	vld1.32	{d16[0]}, [r1 :32]
    8740:	add	r1, r2, r5
    8744:	add	r1, r3, r1, lsl #3
    8748:	vmovl.u16	q0, d16
    874c:	vcvt.f64.u32	d17, s1
    8750:	vcvt.f64.u32	d16, s0
    8754:	vst1.64	{d16-d17}, [r1]
    8758:	cmp	r8, r0
    875c:	mov	r4, lr
    8760:	beq	8920 <ReadCompressedDoubleData+0x25d8>
    8764:	ldr	r2, [sp, #20]
    8768:	add	r1, sp, #32
    876c:	add	r1, r1, r0, lsl #1
    8770:	add	r2, r0, r2
    8774:	add	r2, r3, r2, lsl #3
    8778:	ldr	r3, [sp, #16]
    877c:	sub	r3, r4, r3
    8780:	sub	r0, r3, r0
    8784:	sub	r0, r0, #512	; 0x200
    8788:	ldrh	r3, [r1], #2
    878c:	subs	r0, r0, #1
    8790:	vmov	s0, r3
    8794:	vcvt.f64.u32	d16, s0
    8798:	vstmia	r2!, {d16}
    879c:	bne	8788 <ReadCompressedDoubleData+0x2440>
    87a0:	b	8920 <ReadCompressedDoubleData+0x25d8>
    87a4:	mov	r2, #0
    87a8:	cmp	ip, #0
    87ac:	beq	87d4 <ReadCompressedDoubleData+0x248c>
    87b0:	add	r0, sp, #32
    87b4:	add	r0, r0, r2, lsl #2
    87b8:	vldr	d0, [r0]
    87bc:	add	r0, r2, r5
    87c0:	vcvt.f64.s32	d17, s1
    87c4:	vcvt.f64.s32	d16, s0
    87c8:	ldr	r1, [sp, #4]
    87cc:	add	r0, r1, r0, lsl #3
    87d0:	vst1.64	{d16-d17}, [r0]
    87d4:	ldr	r6, [fp, #8]
    87d8:	cmp	r8, lr
    87dc:	beq	8920 <ReadCompressedDoubleData+0x25d8>
    87e0:	ldr	r1, [sp, #20]
    87e4:	ldr	r2, [sp, #4]
    87e8:	add	r0, sp, #32
    87ec:	add	r0, r0, lr, lsl #2
    87f0:	add	r1, lr, r1
    87f4:	add	r1, r2, r1, lsl #3
    87f8:	ldr	r2, [sp, #16]
    87fc:	sub	r2, r6, r2
    8800:	sub	r2, r2, lr
    8804:	sub	r2, r2, #256	; 0x100
    8808:	ldr	r3, [r0], #4
    880c:	subs	r2, r2, #1
    8810:	vmov	s0, r3
    8814:	vcvt.f64.s32	d16, s0
    8818:	vstmia	r1!, {d16}
    881c:	bne	8808 <ReadCompressedDoubleData+0x24c0>
    8820:	b	8920 <ReadCompressedDoubleData+0x25d8>
    8824:	mov	r2, #0
    8828:	cmp	ip, #0
    882c:	beq	8854 <ReadCompressedDoubleData+0x250c>
    8830:	add	r0, sp, #32
    8834:	add	r0, r0, r2, lsl #2
    8838:	vldr	d0, [r0]
    883c:	add	r0, r2, r5
    8840:	vcvt.f64.u32	d17, s1
    8844:	vcvt.f64.u32	d16, s0
    8848:	ldr	r1, [sp, #4]
    884c:	add	r0, r1, r0, lsl #3
    8850:	vst1.64	{d16-d17}, [r0]
    8854:	ldr	r6, [fp, #8]
    8858:	cmp	r8, lr
    885c:	beq	8920 <ReadCompressedDoubleData+0x25d8>
    8860:	ldr	r1, [sp, #20]
    8864:	ldr	r2, [sp, #4]
    8868:	add	r0, sp, #32
    886c:	add	r0, r0, lr, lsl #2
    8870:	add	r1, lr, r1
    8874:	add	r1, r2, r1, lsl #3
    8878:	ldr	r2, [sp, #16]
    887c:	sub	r2, r6, r2
    8880:	sub	r2, r2, lr
    8884:	sub	r2, r2, #256	; 0x100
    8888:	ldr	r3, [r0], #4
    888c:	subs	r2, r2, #1
    8890:	vmov	s0, r3
    8894:	vcvt.f64.u32	d16, s0
    8898:	vstmia	r1!, {d16}
    889c:	bne	8888 <ReadCompressedDoubleData+0x2540>
    88a0:	b	8920 <ReadCompressedDoubleData+0x25d8>
    88a4:	mov	r2, #0
    88a8:	cmp	ip, #0
    88ac:	beq	88d4 <ReadCompressedDoubleData+0x258c>
    88b0:	add	r0, sp, #32
    88b4:	ldr	r1, [sp, #4]
    88b8:	add	r0, r0, r2, lsl #2
    88bc:	vldr	d0, [r0]
    88c0:	add	r0, r2, r5
    88c4:	add	r0, r1, r0, lsl #3
    88c8:	vcvt.f64.f32	d17, s1
    88cc:	vcvt.f64.f32	d16, s0
    88d0:	vst1.64	{d16-d17}, [r0]
    88d4:	ldr	r6, [fp, #8]
    88d8:	cmp	r9, lr
    88dc:	beq	8920 <ReadCompressedDoubleData+0x25d8>
    88e0:	ldr	r1, [sp, #20]
    88e4:	ldr	r2, [sp, #4]
    88e8:	add	r0, sp, #32
    88ec:	add	r0, r0, lr, lsl #2
    88f0:	add	r1, lr, r1
    88f4:	add	r1, r2, r1, lsl #3
    88f8:	ldr	r2, [sp, #16]
    88fc:	sub	r2, r6, r2
    8900:	sub	r2, r2, lr
    8904:	sub	r2, r2, #256	; 0x100
    8908:	vldr	s0, [r0]
    890c:	add	r0, r0, #4
    8910:	subs	r2, r2, #1
    8914:	vcvt.f64.f32	d16, s0
    8918:	vstmia	r1!, {d16}
    891c:	bne	8908 <ReadCompressedDoubleData+0x25c0>
    8920:	mov	r9, sl
    8924:	mov	r0, r9
    8928:	sub	sp, fp, #48	; 0x30
    892c:	vpop	{d8-d9}
    8930:	add	sp, sp, #4
    8934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8938:	mov	r5, #0
    893c:	ldr	r0, [sp, #8]
    8940:	ldr	r9, [sp, #12]
    8944:	cmp	r0, #0
    8948:	beq	8990 <ReadCompressedDoubleData+0x2648>
    894c:	add	r0, sp, #32
    8950:	add	r0, r0, r5, lsl #3
    8954:	vld1.64	{d8-d9}, [r0]
    8958:	vmov.32	r0, d9[0]
    895c:	vmov.32	r1, d9[1]
    8960:	bl	6b664 <__aeabi_l2d>
    8964:	vmov.32	r2, d8[0]
    8968:	vmov.32	r3, d8[1]
    896c:	vmov	d9, r0, r1
    8970:	add	r4, r5, r7
    8974:	mov	r0, r2
    8978:	mov	r1, r3
    897c:	bl	6b664 <__aeabi_l2d>
    8980:	vmov	d8, r0, r1
    8984:	ldr	r0, [sp, #4]
    8988:	add	r0, r0, r4, lsl #3
    898c:	vst1.64	{d8-d9}, [r0]
    8990:	ldr	r0, [sp, #28]
    8994:	ldr	r2, [sp, #24]
    8998:	ldr	r6, [sp, #16]
    899c:	ldr	sl, [fp, #8]
    89a0:	cmp	r0, r2
    89a4:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    89a8:	add	r0, sp, #32
    89ac:	ldr	r1, [sp, #4]
    89b0:	add	r4, r0, r2, lsl #3
    89b4:	ldr	r0, [sp, #20]
    89b8:	add	r0, r2, r0
    89bc:	add	r5, r1, r0, lsl #3
    89c0:	sub	r0, sl, r6
    89c4:	sub	r0, r0, r2
    89c8:	sub	r6, r0, #128	; 0x80
    89cc:	ldrd	r0, [r4]
    89d0:	bl	6b664 <__aeabi_l2d>
    89d4:	strd	r0, [r5]
    89d8:	add	r5, r5, #8
    89dc:	add	r4, r4, #8
    89e0:	subs	r6, r6, #1
    89e4:	bne	89cc <ReadCompressedDoubleData+0x2684>
    89e8:	b	8924 <ReadCompressedDoubleData+0x25dc>
    89ec:	mov	r5, #0
    89f0:	ldr	r0, [sp, #8]
    89f4:	ldr	r9, [sp, #12]
    89f8:	cmp	r0, #0
    89fc:	beq	8a44 <ReadCompressedDoubleData+0x26fc>
    8a00:	add	r0, sp, #32
    8a04:	add	r0, r0, r5, lsl #3
    8a08:	vld1.64	{d8-d9}, [r0]
    8a0c:	vmov.32	r0, d9[0]
    8a10:	vmov.32	r1, d9[1]
    8a14:	bl	6b650 <__aeabi_ul2d>
    8a18:	vmov.32	r2, d8[0]
    8a1c:	vmov.32	r3, d8[1]
    8a20:	vmov	d9, r0, r1
    8a24:	add	r4, r5, r7
    8a28:	mov	r0, r2
    8a2c:	mov	r1, r3
    8a30:	bl	6b650 <__aeabi_ul2d>
    8a34:	vmov	d8, r0, r1
    8a38:	ldr	r0, [sp, #4]
    8a3c:	add	r0, r0, r4, lsl #3
    8a40:	vst1.64	{d8-d9}, [r0]
    8a44:	ldr	r0, [sp, #28]
    8a48:	ldr	r2, [sp, #24]
    8a4c:	ldr	r6, [sp, #16]
    8a50:	ldr	sl, [fp, #8]
    8a54:	cmp	r0, r2
    8a58:	beq	8924 <ReadCompressedDoubleData+0x25dc>
    8a5c:	add	r0, sp, #32
    8a60:	ldr	r1, [sp, #4]
    8a64:	add	r4, r0, r2, lsl #3
    8a68:	ldr	r0, [sp, #20]
    8a6c:	add	r0, r2, r0
    8a70:	add	r5, r1, r0, lsl #3
    8a74:	sub	r0, sl, r6
    8a78:	sub	r0, r0, r2
    8a7c:	sub	r6, r0, #128	; 0x80
    8a80:	ldrd	r0, [r4]
    8a84:	bl	6b650 <__aeabi_ul2d>
    8a88:	strd	r0, [r5]
    8a8c:	add	r5, r5, #8
    8a90:	add	r4, r4, #8
    8a94:	subs	r6, r6, #1
    8a98:	bne	8a80 <ReadCompressedDoubleData+0x2738>
    8a9c:	b	8924 <ReadCompressedDoubleData+0x25dc>

00008aa0 <ReadSingleData>:
    8aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8aa4:	add	fp, sp, #28
    8aa8:	sub	sp, sp, #4
    8aac:	vpush	{d8-d9}
    8ab0:	sub	sp, sp, #200	; 0xc8
    8ab4:	sub	sp, sp, #2048	; 0x800
    8ab8:	mov	r4, r0
    8abc:	mov	r0, #0
    8ac0:	cmp	r4, #0
    8ac4:	movne	r7, r1
    8ac8:	cmpne	r1, #0
    8acc:	bne	8ae0 <ReadSingleData+0x40>
    8ad0:	sub	sp, fp, #48	; 0x30
    8ad4:	vpop	{d8-d9}
    8ad8:	add	sp, sp, #4
    8adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8ae0:	ldr	r1, [r4]
    8ae4:	cmp	r1, #0
    8ae8:	beq	8ad0 <ReadSingleData+0x30>
    8aec:	mov	r0, r2
    8af0:	mov	r5, r3
    8af4:	mov	r9, r2
    8af8:	bl	1924 <Mat_SizeOf@plt>
    8afc:	mov	sl, r0
    8b00:	sub	r0, r9, #1
    8b04:	mov	r8, #0
    8b08:	str	r4, [sp, #44]	; 0x2c
    8b0c:	cmp	r0, #11
    8b10:	str	sl, [sp, #40]	; 0x28
    8b14:	bhi	adc0 <ReadSingleData+0x2320>
    8b18:	add	r1, pc, #4
    8b1c:	ldr	r0, [r1, r0, lsl #2]
    8b20:	add	pc, r1, r0
    8b24:	.word	0x00000030
    8b28:	.word	0x000000f4
    8b2c:	.word	0x000001b8
    8b30:	.word	0x00000218
    8b34:	.word	0x00000278
    8b38:	.word	0x000002d8
    8b3c:	.word	0x00000338
    8b40:	.word	0x0000229c
    8b44:	.word	0x00000390
    8b48:	.word	0x0000229c
    8b4c:	.word	0x0000229c
    8b50:	.word	0x000003ec
    8b54:	cmp	r5, #256	; 0x100
    8b58:	bgt	8f78 <ReadSingleData+0x4d8>
    8b5c:	ldr	r3, [r4]
    8b60:	add	r4, sp, #192	; 0xc0
    8b64:	mov	r1, sl
    8b68:	mov	r2, r5
    8b6c:	mov	r0, r4
    8b70:	bl	18b8 <fread@plt>
    8b74:	mov	r8, r0
    8b78:	cmp	r5, #1
    8b7c:	blt	b4c8 <ReadSingleData+0x2a28>
    8b80:	mov	lr, #0
    8b84:	cmp	r5, #4
    8b88:	bcc	a92c <ReadSingleData+0x1e8c>
    8b8c:	bic	lr, r5, #3
    8b90:	mov	r2, #1
    8b94:	str	r5, [sp, #20]
    8b98:	str	r8, [sp, #36]	; 0x24
    8b9c:	subs	r1, lr, #4
    8ba0:	add	r1, r2, r1, lsr #2
    8ba4:	and	ip, r1, #1
    8ba8:	beq	a8e4 <ReadSingleData+0x1e44>
    8bac:	sub	r3, r1, ip
    8bb0:	mov	r1, #0
    8bb4:	add	r8, sp, #132	; 0x84
    8bb8:	mov	r6, #32
    8bbc:	add	r5, sp, #136	; 0x88
    8bc0:	mov	r9, r7
    8bc4:	mov	r2, r7
    8bc8:	ldr	r0, [r4, r1]
    8bcc:	add	r7, r4, r1
    8bd0:	subs	r3, r3, #2
    8bd4:	add	r1, r1, #8
    8bd8:	str	r0, [sp, #132]	; 0x84
    8bdc:	add	r0, r2, #16
    8be0:	vld1.32	{d16[0]}, [r8 :32]
    8be4:	vmovl.s8	q8, d16
    8be8:	vmovl.s16	q8, d16
    8bec:	vcvt.f32.s32	q8, q8
    8bf0:	vst1.32	{d16-d17}, [r2], r6
    8bf4:	ldr	r7, [r7, #4]
    8bf8:	str	r7, [sp, #136]	; 0x88
    8bfc:	vld1.32	{d16[0]}, [r5 :32]
    8c00:	vmovl.s8	q8, d16
    8c04:	vmovl.s16	q8, d16
    8c08:	vcvt.f32.s32	q8, q8
    8c0c:	vst1.32	{d16-d17}, [r0]
    8c10:	bne	8bc8 <ReadSingleData+0x128>
    8c14:	b	a8ec <ReadSingleData+0x1e4c>
    8c18:	cmp	r5, #256	; 0x100
    8c1c:	bgt	9140 <ReadSingleData+0x6a0>
    8c20:	ldr	r3, [r4]
    8c24:	add	r4, sp, #192	; 0xc0
    8c28:	mov	r1, sl
    8c2c:	mov	r2, r5
    8c30:	mov	r0, r4
    8c34:	bl	18b8 <fread@plt>
    8c38:	mov	r8, r0
    8c3c:	cmp	r5, #1
    8c40:	blt	b4c8 <ReadSingleData+0x2a28>
    8c44:	mov	lr, #0
    8c48:	cmp	r5, #4
    8c4c:	bcc	a99c <ReadSingleData+0x1efc>
    8c50:	bic	lr, r5, #3
    8c54:	mov	r2, #1
    8c58:	str	r5, [sp, #20]
    8c5c:	str	r8, [sp, #36]	; 0x24
    8c60:	subs	r1, lr, #4
    8c64:	add	r1, r2, r1, lsr #2
    8c68:	and	ip, r1, #1
    8c6c:	beq	a954 <ReadSingleData+0x1eb4>
    8c70:	sub	r3, r1, ip
    8c74:	mov	r1, #0
    8c78:	add	r8, sp, #164	; 0xa4
    8c7c:	mov	r6, #32
    8c80:	add	r5, sp, #168	; 0xa8
    8c84:	mov	r9, r7
    8c88:	mov	r2, r7
    8c8c:	ldr	r0, [r4, r1]
    8c90:	add	r7, r4, r1
    8c94:	subs	r3, r3, #2
    8c98:	add	r1, r1, #8
    8c9c:	str	r0, [sp, #164]	; 0xa4
    8ca0:	add	r0, r2, #16
    8ca4:	vld1.32	{d16[0]}, [r8 :32]
    8ca8:	vmovl.u8	q8, d16
    8cac:	vmovl.u16	q8, d16
    8cb0:	vcvt.f32.u32	q8, q8
    8cb4:	vst1.32	{d16-d17}, [r2], r6
    8cb8:	ldr	r7, [r7, #4]
    8cbc:	str	r7, [sp, #168]	; 0xa8
    8cc0:	vld1.32	{d16[0]}, [r5 :32]
    8cc4:	vmovl.u8	q8, d16
    8cc8:	vmovl.u16	q8, d16
    8ccc:	vcvt.f32.u32	q8, q8
    8cd0:	vst1.32	{d16-d17}, [r0]
    8cd4:	bne	8c8c <ReadSingleData+0x1ec>
    8cd8:	b	a95c <ReadSingleData+0x1ebc>
    8cdc:	ldr	r0, [r4, #20]
    8ce0:	cmp	r0, #0
    8ce4:	beq	9310 <ReadSingleData+0x870>
    8ce8:	cmp	r5, #256	; 0x100
    8cec:	bgt	9790 <ReadSingleData+0xcf0>
    8cf0:	ldr	r3, [r4]
    8cf4:	add	r4, sp, #192	; 0xc0
    8cf8:	mov	r1, sl
    8cfc:	mov	r2, r5
    8d00:	mov	r0, r4
    8d04:	bl	18b8 <fread@plt>
    8d08:	mov	r8, r0
    8d0c:	cmp	r5, #1
    8d10:	blt	b4c8 <ReadSingleData+0x2a28>
    8d14:	mov	r0, r4
    8d18:	bl	1c20 <Mat_int16Swap>
    8d1c:	vmov	s0, r0
    8d20:	add	r4, r4, #2
    8d24:	subs	r5, r5, #1
    8d28:	vcvt.f32.s32	s0, s0
    8d2c:	vstr	s0, [r7]
    8d30:	add	r7, r7, #4
    8d34:	bne	8d14 <ReadSingleData+0x274>
    8d38:	b	b4c8 <ReadSingleData+0x2a28>
    8d3c:	ldr	r0, [r4, #20]
    8d40:	cmp	r0, #0
    8d44:	beq	93d0 <ReadSingleData+0x930>
    8d48:	cmp	r5, #256	; 0x100
    8d4c:	bgt	9880 <ReadSingleData+0xde0>
    8d50:	ldr	r3, [r4]
    8d54:	add	r4, sp, #192	; 0xc0
    8d58:	mov	r1, sl
    8d5c:	mov	r2, r5
    8d60:	mov	r0, r4
    8d64:	bl	18b8 <fread@plt>
    8d68:	mov	r8, r0
    8d6c:	cmp	r5, #1
    8d70:	blt	b4c8 <ReadSingleData+0x2a28>
    8d74:	mov	r0, r4
    8d78:	bl	1c34 <Mat_uint16Swap>
    8d7c:	vmov	s0, r0
    8d80:	add	r4, r4, #2
    8d84:	subs	r5, r5, #1
    8d88:	vcvt.f32.u32	s0, s0
    8d8c:	vstr	s0, [r7]
    8d90:	add	r7, r7, #4
    8d94:	bne	8d74 <ReadSingleData+0x2d4>
    8d98:	b	b4c8 <ReadSingleData+0x2a28>
    8d9c:	ldr	r0, [r4, #20]
    8da0:	cmp	r0, #0
    8da4:	beq	9490 <ReadSingleData+0x9f0>
    8da8:	cmp	r5, #256	; 0x100
    8dac:	bgt	9970 <ReadSingleData+0xed0>
    8db0:	ldr	r3, [r4]
    8db4:	add	r4, sp, #192	; 0xc0
    8db8:	mov	r1, sl
    8dbc:	mov	r2, r5
    8dc0:	mov	r0, r4
    8dc4:	bl	18b8 <fread@plt>
    8dc8:	mov	r8, r0
    8dcc:	cmp	r5, #1
    8dd0:	blt	b4c8 <ReadSingleData+0x2a28>
    8dd4:	mov	r0, r4
    8dd8:	bl	1bf8 <Mat_int32Swap>
    8ddc:	vmov	s0, r0
    8de0:	add	r4, r4, #4
    8de4:	subs	r5, r5, #1
    8de8:	vcvt.f32.s32	s0, s0
    8dec:	vstr	s0, [r7]
    8df0:	add	r7, r7, #4
    8df4:	bne	8dd4 <ReadSingleData+0x334>
    8df8:	b	b4c8 <ReadSingleData+0x2a28>
    8dfc:	ldr	r0, [r4, #20]
    8e00:	cmp	r0, #0
    8e04:	beq	9528 <ReadSingleData+0xa88>
    8e08:	cmp	r5, #256	; 0x100
    8e0c:	bgt	9a5c <ReadSingleData+0xfbc>
    8e10:	ldr	r3, [r4]
    8e14:	add	r4, sp, #192	; 0xc0
    8e18:	mov	r1, sl
    8e1c:	mov	r2, r5
    8e20:	mov	r0, r4
    8e24:	bl	18b8 <fread@plt>
    8e28:	mov	r8, r0
    8e2c:	cmp	r5, #1
    8e30:	blt	b4c8 <ReadSingleData+0x2a28>
    8e34:	mov	r0, r4
    8e38:	bl	1c0c <Mat_uint32Swap>
    8e3c:	vmov	s0, r0
    8e40:	add	r4, r4, #4
    8e44:	subs	r5, r5, #1
    8e48:	vcvt.f32.u32	s0, s0
    8e4c:	vstr	s0, [r7]
    8e50:	add	r7, r7, #4
    8e54:	bne	8e34 <ReadSingleData+0x394>
    8e58:	b	b4c8 <ReadSingleData+0x2a28>
    8e5c:	ldr	r0, [r4, #20]
    8e60:	cmp	r0, #0
    8e64:	beq	95c0 <ReadSingleData+0xb20>
    8e68:	cmp	r5, #256	; 0x100
    8e6c:	bgt	9b48 <ReadSingleData+0x10a8>
    8e70:	ldr	r3, [r4]
    8e74:	add	r4, sp, #192	; 0xc0
    8e78:	mov	r1, sl
    8e7c:	mov	r2, r5
    8e80:	mov	r0, r4
    8e84:	bl	18b8 <fread@plt>
    8e88:	mov	r8, r0
    8e8c:	cmp	r5, #1
    8e90:	blt	b4c8 <ReadSingleData+0x2a28>
    8e94:	mov	r0, r4
    8e98:	bl	1c4c <Mat_floatSwap>
    8e9c:	vstr	s0, [r7]
    8ea0:	add	r4, r4, #4
    8ea4:	add	r7, r7, #4
    8ea8:	subs	r5, r5, #1
    8eac:	bne	8e94 <ReadSingleData+0x3f4>
    8eb0:	b	b4c8 <ReadSingleData+0x2a28>
    8eb4:	ldr	r0, [r4, #20]
    8eb8:	cmp	r0, #0
    8ebc:	beq	95fc <ReadSingleData+0xb5c>
    8ec0:	cmp	r5, #256	; 0x100
    8ec4:	bgt	9c30 <ReadSingleData+0x1190>
    8ec8:	ldr	r3, [r4]
    8ecc:	add	r4, sp, #192	; 0xc0
    8ed0:	mov	r1, sl
    8ed4:	mov	r2, r5
    8ed8:	mov	r0, r4
    8edc:	bl	18b8 <fread@plt>
    8ee0:	mov	r8, r0
    8ee4:	cmp	r5, #1
    8ee8:	blt	b4c8 <ReadSingleData+0x2a28>
    8eec:	mov	r0, r4
    8ef0:	bl	1c90 <Mat_doubleSwap>
    8ef4:	vcvt.f32.f64	s0, d0
    8ef8:	add	r4, r4, #8
    8efc:	subs	r5, r5, #1
    8f00:	vstr	s0, [r7]
    8f04:	add	r7, r7, #4
    8f08:	bne	8eec <ReadSingleData+0x44c>
    8f0c:	b	b4c8 <ReadSingleData+0x2a28>
    8f10:	ldr	r0, [r4, #20]
    8f14:	cmp	r0, #0
    8f18:	beq	96a0 <ReadSingleData+0xc00>
    8f1c:	cmp	r5, #256	; 0x100
    8f20:	bgt	9d20 <ReadSingleData+0x1280>
    8f24:	ldr	r3, [r4]
    8f28:	add	r6, sp, #192	; 0xc0
    8f2c:	mov	r1, sl
    8f30:	mov	r2, r5
    8f34:	mov	r0, r6
    8f38:	bl	18b8 <fread@plt>
    8f3c:	mov	r8, r0
    8f40:	cmp	r5, #1
    8f44:	blt	adc0 <ReadSingleData+0x2320>
    8f48:	str	r9, [sp, #8]
    8f4c:	mov	r9, r7
    8f50:	mov	r4, r7
    8f54:	mov	r7, r5
    8f58:	mov	r0, r6
    8f5c:	bl	1b84 <Mat_int64Swap>
    8f60:	bl	6b898 <__aeabi_l2f>
    8f64:	str	r0, [r4], #4
    8f68:	add	r6, r6, #8
    8f6c:	subs	r5, r5, #1
    8f70:	bne	8f58 <ReadSingleData+0x4b8>
    8f74:	b	adb0 <ReadSingleData+0x2310>
    8f78:	sub	r1, r5, #256	; 0x100
    8f7c:	str	r5, [sp, #20]
    8f80:	mov	r9, r7
    8f84:	add	r0, r7, #1024	; 0x400
    8f88:	mov	r5, #0
    8f8c:	add	r6, sp, #192	; 0xc0
    8f90:	add	r7, sp, #152	; 0x98
    8f94:	mov	r8, #32
    8f98:	add	r4, sp, #156	; 0x9c
    8f9c:	mov	sl, #0
    8fa0:	str	r1, [sp, #24]
    8fa4:	mov	r1, #256	; 0x100
    8fa8:	str	r9, [sp, #12]
    8fac:	add	r2, sp, #28
    8fb0:	stm	r2, {r0, r1, r5}
    8fb4:	ldr	r0, [sp, #44]	; 0x2c
    8fb8:	ldr	r1, [sp, #40]	; 0x28
    8fbc:	mov	r2, #256	; 0x100
    8fc0:	ldr	r3, [r0]
    8fc4:	mov	r0, r6
    8fc8:	bl	18b8 <fread@plt>
    8fcc:	mov	r1, r9
    8fd0:	mov	r2, #0
    8fd4:	ldr	r3, [r6, r2]
    8fd8:	add	r5, r6, r2
    8fdc:	add	r2, r2, #8
    8fe0:	cmp	r2, #256	; 0x100
    8fe4:	str	r3, [sp, #152]	; 0x98
    8fe8:	add	r3, r1, #16
    8fec:	vld1.32	{d16[0]}, [r7 :32]
    8ff0:	vmovl.s8	q8, d16
    8ff4:	vmovl.s16	q8, d16
    8ff8:	vcvt.f32.s32	q8, q8
    8ffc:	vst1.32	{d16-d17}, [r1], r8
    9000:	ldr	r5, [r5, #4]
    9004:	str	r5, [sp, #156]	; 0x9c
    9008:	vld1.32	{d16[0]}, [r4 :32]
    900c:	vmovl.s8	q8, d16
    9010:	vmovl.s16	q8, d16
    9014:	vcvt.f32.s32	q8, q8
    9018:	vst1.32	{d16-d17}, [r3]
    901c:	bne	8fd4 <ReadSingleData+0x534>
    9020:	ldr	r2, [sp, #36]	; 0x24
    9024:	ldr	r1, [sp, #32]
    9028:	add	sl, r0, sl
    902c:	ldr	r0, [sp, #28]
    9030:	add	r9, r9, #1024	; 0x400
    9034:	add	r5, r2, #256	; 0x100
    9038:	ldr	r2, [sp, #24]
    903c:	add	r0, r0, #1024	; 0x400
    9040:	add	r1, r1, #256	; 0x100
    9044:	cmp	r5, r2
    9048:	blt	8fac <ReadSingleData+0x50c>
    904c:	ldr	r0, [sp, #20]
    9050:	cmp	r5, r0
    9054:	bge	a1b4 <ReadSingleData+0x1714>
    9058:	sub	r4, r0, r5
    905c:	ldr	r0, [sp, #44]	; 0x2c
    9060:	ldr	r1, [sp, #40]	; 0x28
    9064:	add	r6, sp, #192	; 0xc0
    9068:	mov	r2, r4
    906c:	ldr	r3, [r0]
    9070:	mov	r0, r6
    9074:	bl	18b8 <fread@plt>
    9078:	mov	r8, sl
    907c:	add	r8, r0, sl
    9080:	cmp	r4, #1
    9084:	blt	b4c4 <ReadSingleData+0x2a24>
    9088:	ldr	r3, [sp, #12]
    908c:	mov	lr, #0
    9090:	cmp	r4, #4
    9094:	bcc	aa18 <ReadSingleData+0x1f78>
    9098:	bic	lr, r4, #3
    909c:	mov	r2, #1
    90a0:	str	r4, [sp, #44]	; 0x2c
    90a4:	subs	r1, lr, #4
    90a8:	add	r1, r2, r1, lsr #2
    90ac:	and	ip, r1, #1
    90b0:	beq	a9d4 <ReadSingleData+0x1f34>
    90b4:	ldr	r0, [sp, #20]
    90b8:	ldr	r1, [sp, #36]	; 0x24
    90bc:	add	r9, sp, #144	; 0x90
    90c0:	mov	sl, #32
    90c4:	add	r4, sp, #148	; 0x94
    90c8:	sub	r3, r0, r1
    90cc:	sub	r3, r3, #256	; 0x100
    90d0:	bic	r3, r3, #3
    90d4:	sub	r3, r3, #4
    90d8:	add	r2, r2, r3, lsr #2
    90dc:	mvn	r7, r3, lsr #2
    90e0:	and	r2, r2, #1
    90e4:	add	r3, r7, r2
    90e8:	ldr	r7, [sp, #28]
    90ec:	mov	r2, #0
    90f0:	ldr	r1, [r6, r2]
    90f4:	add	r0, r6, r2
    90f8:	adds	r3, r3, #2
    90fc:	add	r2, r2, #8
    9100:	str	r1, [sp, #144]	; 0x90
    9104:	add	r1, r7, #16
    9108:	vld1.32	{d16[0]}, [r9 :32]
    910c:	vmovl.s8	q8, d16
    9110:	vmovl.s16	q8, d16
    9114:	vcvt.f32.s32	q8, q8
    9118:	vst1.32	{d16-d17}, [r7], sl
    911c:	ldr	r0, [r0, #4]
    9120:	str	r0, [sp, #148]	; 0x94
    9124:	vld1.32	{d16[0]}, [r4 :32]
    9128:	vmovl.s8	q8, d16
    912c:	vmovl.s16	q8, d16
    9130:	vcvt.f32.s32	q8, q8
    9134:	vst1.32	{d16-d17}, [r1]
    9138:	bne	90f0 <ReadSingleData+0x650>
    913c:	b	a9d8 <ReadSingleData+0x1f38>
    9140:	sub	r1, r5, #256	; 0x100
    9144:	str	r5, [sp, #20]
    9148:	mov	r5, r7
    914c:	add	r0, r7, #1024	; 0x400
    9150:	mov	r4, #0
    9154:	add	r6, sp, #192	; 0xc0
    9158:	add	r7, sp, #184	; 0xb8
    915c:	mov	sl, #32
    9160:	add	r8, sp, #188	; 0xbc
    9164:	mov	r9, #0
    9168:	str	r1, [sp, #24]
    916c:	mov	r1, #256	; 0x100
    9170:	str	r5, [sp, #12]
    9174:	add	r2, sp, #28
    9178:	stm	r2, {r0, r1, r4}
    917c:	ldr	r0, [sp, #44]	; 0x2c
    9180:	ldr	r1, [sp, #40]	; 0x28
    9184:	mov	r2, #256	; 0x100
    9188:	ldr	r3, [r0]
    918c:	mov	r0, r6
    9190:	bl	18b8 <fread@plt>
    9194:	mov	r1, r5
    9198:	mov	r2, #0
    919c:	ldr	r3, [r6, r2]
    91a0:	add	r4, r6, r2
    91a4:	add	r2, r2, #8
    91a8:	cmp	r2, #256	; 0x100
    91ac:	str	r3, [sp, #184]	; 0xb8
    91b0:	add	r3, r1, #16
    91b4:	vld1.32	{d16[0]}, [r7 :32]
    91b8:	vmovl.u8	q8, d16
    91bc:	vmovl.u16	q8, d16
    91c0:	vcvt.f32.u32	q8, q8
    91c4:	vst1.32	{d16-d17}, [r1], sl
    91c8:	ldr	r4, [r4, #4]
    91cc:	str	r4, [sp, #188]	; 0xbc
    91d0:	vld1.32	{d16[0]}, [r8 :32]
    91d4:	vmovl.u8	q8, d16
    91d8:	vmovl.u16	q8, d16
    91dc:	vcvt.f32.u32	q8, q8
    91e0:	vst1.32	{d16-d17}, [r3]
    91e4:	bne	919c <ReadSingleData+0x6fc>
    91e8:	ldr	r2, [sp, #36]	; 0x24
    91ec:	ldr	r1, [sp, #32]
    91f0:	add	r9, r0, r9
    91f4:	ldr	r0, [sp, #28]
    91f8:	add	r5, r5, #1024	; 0x400
    91fc:	add	r4, r2, #256	; 0x100
    9200:	ldr	r2, [sp, #24]
    9204:	add	r0, r0, #1024	; 0x400
    9208:	add	r1, r1, #256	; 0x100
    920c:	cmp	r4, r2
    9210:	blt	9174 <ReadSingleData+0x6d4>
    9214:	ldr	r5, [sp, #20]
    9218:	cmp	r4, r5
    921c:	bge	9e30 <ReadSingleData+0x1390>
    9220:	ldr	r0, [sp, #44]	; 0x2c
    9224:	ldr	sl, [sp, #40]	; 0x28
    9228:	sub	r7, r5, r4
    922c:	add	r6, sp, #192	; 0xc0
    9230:	mov	r2, r7
    9234:	ldr	r3, [r0]
    9238:	mov	r0, r6
    923c:	mov	r1, sl
    9240:	bl	18b8 <fread@plt>
    9244:	mov	r8, r9
    9248:	add	r8, r0, r9
    924c:	cmp	r7, #1
    9250:	blt	b4c8 <ReadSingleData+0x2a28>
    9254:	ldr	r3, [sp, #12]
    9258:	mov	lr, #0
    925c:	cmp	r7, #4
    9260:	bcc	aaa8 <ReadSingleData+0x2008>
    9264:	bic	lr, r7, #3
    9268:	mov	r1, #1
    926c:	mov	r9, r8
    9270:	str	r7, [sp, #44]	; 0x2c
    9274:	subs	r2, lr, #4
    9278:	add	r2, r1, r2, lsr #2
    927c:	and	r0, r2, #1
    9280:	str	r0, [sp, #24]
    9284:	beq	aa58 <ReadSingleData+0x1fb8>
    9288:	ldr	r0, [sp, #36]	; 0x24
    928c:	ldr	ip, [sp, #28]
    9290:	add	r8, sp, #176	; 0xb0
    9294:	sub	r2, r5, r0
    9298:	mov	r5, #32
    929c:	sub	r2, r2, #256	; 0x100
    92a0:	bic	r2, r2, #3
    92a4:	sub	r2, r2, #4
    92a8:	add	r1, r1, r2, lsr #2
    92ac:	mvn	r3, r2, lsr #2
    92b0:	mov	r2, #0
    92b4:	and	r1, r1, #1
    92b8:	add	r3, r3, r1
    92bc:	add	r1, sp, #180	; 0xb4
    92c0:	ldr	r0, [r6, r2]
    92c4:	add	r7, r6, r2
    92c8:	adds	r3, r3, #2
    92cc:	add	r2, r2, #8
    92d0:	str	r0, [sp, #176]	; 0xb0
    92d4:	add	r0, ip, #16
    92d8:	vld1.32	{d16[0]}, [r8 :32]
    92dc:	vmovl.u8	q8, d16
    92e0:	vmovl.u16	q8, d16
    92e4:	vcvt.f32.u32	q8, q8
    92e8:	vst1.32	{d16-d17}, [ip], r5
    92ec:	ldr	r7, [r7, #4]
    92f0:	str	r7, [sp, #180]	; 0xb4
    92f4:	vld1.32	{d16[0]}, [r1 :32]
    92f8:	vmovl.u8	q8, d16
    92fc:	vmovl.u16	q8, d16
    9300:	vcvt.f32.u32	q8, q8
    9304:	vst1.32	{d16-d17}, [r0]
    9308:	bne	92c0 <ReadSingleData+0x820>
    930c:	b	aa5c <ReadSingleData+0x1fbc>
    9310:	cmp	r5, #256	; 0x100
    9314:	bgt	9e3c <ReadSingleData+0x139c>
    9318:	ldr	r3, [r4]
    931c:	mov	r1, sl
    9320:	mov	sl, r7
    9324:	add	r7, sp, #192	; 0xc0
    9328:	mov	r2, r5
    932c:	mov	r0, r7
    9330:	bl	18b8 <fread@plt>
    9334:	mov	r8, r0
    9338:	cmp	r5, #1
    933c:	blt	b4c4 <ReadSingleData+0x2a24>
    9340:	mov	lr, #0
    9344:	cmp	r5, #4
    9348:	bcc	ab30 <ReadSingleData+0x2090>
    934c:	bic	lr, r5, #3
    9350:	mov	r1, #1
    9354:	str	r5, [sp, #20]
    9358:	str	r8, [sp, #36]	; 0x24
    935c:	subs	r0, lr, #4
    9360:	add	r0, r1, r0, lsr #2
    9364:	and	ip, r0, #1
    9368:	beq	aae4 <ReadSingleData+0x2044>
    936c:	sub	r3, r0, ip
    9370:	mov	r1, #0
    9374:	mov	r8, #16
    9378:	mov	r9, #32
    937c:	add	r5, sp, #56	; 0x38
    9380:	mov	r2, sl
    9384:	mov	r4, r7
    9388:	vld1.16	{d16}, [r4], r8
    938c:	add	r0, r2, #16
    9390:	subs	r3, r3, #2
    9394:	add	r1, r1, #8
    9398:	vmovl.s16	q8, d16
    939c:	vcvt.f32.s32	q8, q8
    93a0:	vst1.32	{d16-d17}, [r2], r9
    93a4:	ldr	r6, [r7, #8]
    93a8:	ldr	r7, [r7, #12]
    93ac:	str	r7, [sp, #60]	; 0x3c
    93b0:	str	r6, [sp, #56]	; 0x38
    93b4:	mov	r7, r4
    93b8:	vld1.16	{d16}, [r5 :64]
    93bc:	vmovl.s16	q8, d16
    93c0:	vcvt.f32.s32	q8, q8
    93c4:	vst1.32	{d16-d17}, [r0]
    93c8:	bne	9388 <ReadSingleData+0x8e8>
    93cc:	b	aae8 <ReadSingleData+0x2048>
    93d0:	cmp	r5, #256	; 0x100
    93d4:	bgt	9ff8 <ReadSingleData+0x1558>
    93d8:	ldr	r3, [r4]
    93dc:	mov	r1, sl
    93e0:	mov	sl, r7
    93e4:	add	r7, sp, #192	; 0xc0
    93e8:	mov	r2, r5
    93ec:	mov	r0, r7
    93f0:	bl	18b8 <fread@plt>
    93f4:	mov	r8, r0
    93f8:	cmp	r5, #1
    93fc:	blt	b4c4 <ReadSingleData+0x2a24>
    9400:	mov	lr, #0
    9404:	cmp	r5, #4
    9408:	bcc	aba8 <ReadSingleData+0x2108>
    940c:	bic	lr, r5, #3
    9410:	mov	r1, #1
    9414:	str	r5, [sp, #20]
    9418:	str	r8, [sp, #36]	; 0x24
    941c:	subs	r0, lr, #4
    9420:	add	r0, r1, r0, lsr #2
    9424:	and	ip, r0, #1
    9428:	beq	ab5c <ReadSingleData+0x20bc>
    942c:	sub	r3, r0, ip
    9430:	mov	r1, #0
    9434:	mov	r8, #16
    9438:	mov	r9, #32
    943c:	add	r5, sp, #96	; 0x60
    9440:	mov	r2, sl
    9444:	mov	r4, r7
    9448:	vld1.16	{d16}, [r4], r8
    944c:	add	r0, r2, #16
    9450:	subs	r3, r3, #2
    9454:	add	r1, r1, #8
    9458:	vmovl.u16	q8, d16
    945c:	vcvt.f32.u32	q8, q8
    9460:	vst1.32	{d16-d17}, [r2], r9
    9464:	ldr	r6, [r7, #8]
    9468:	ldr	r7, [r7, #12]
    946c:	str	r7, [sp, #100]	; 0x64
    9470:	str	r6, [sp, #96]	; 0x60
    9474:	mov	r7, r4
    9478:	vld1.16	{d16}, [r5 :64]
    947c:	vmovl.u16	q8, d16
    9480:	vcvt.f32.u32	q8, q8
    9484:	vst1.32	{d16-d17}, [r0]
    9488:	bne	9448 <ReadSingleData+0x9a8>
    948c:	b	ab60 <ReadSingleData+0x20c0>
    9490:	cmp	r5, #256	; 0x100
    9494:	bgt	a1c4 <ReadSingleData+0x1724>
    9498:	ldr	r3, [r4]
    949c:	add	r4, sp, #192	; 0xc0
    94a0:	mov	r1, sl
    94a4:	mov	r2, r5
    94a8:	mov	r0, r4
    94ac:	bl	18b8 <fread@plt>
    94b0:	mov	r8, r0
    94b4:	cmp	r5, #1
    94b8:	blt	b4c8 <ReadSingleData+0x2a28>
    94bc:	mov	r0, #0
    94c0:	cmp	r5, #4
    94c4:	bcc	ac08 <ReadSingleData+0x2168>
    94c8:	bic	r0, r5, #3
    94cc:	mov	r2, #1
    94d0:	mov	r9, r7
    94d4:	mov	lr, r5
    94d8:	subs	r1, r0, #4
    94dc:	add	r1, r2, r1, lsr #2
    94e0:	and	ip, r1, #1
    94e4:	beq	abd4 <ReadSingleData+0x2134>
    94e8:	sub	r3, r1, ip
    94ec:	mov	r1, #0
    94f0:	mov	r7, #32
    94f4:	mov	r6, r9
    94f8:	add	r5, r4, #16
    94fc:	vld1.32	{d16-d17}, [r4], r7
    9500:	add	r2, r6, #16
    9504:	subs	r3, r3, #2
    9508:	add	r1, r1, #8
    950c:	vcvt.f32.s32	q8, q8
    9510:	vst1.32	{d16-d17}, [r6], r7
    9514:	vld1.32	{d16-d17}, [r5]
    9518:	vcvt.f32.s32	q8, q8
    951c:	vst1.32	{d16-d17}, [r2]
    9520:	bne	94f8 <ReadSingleData+0xa58>
    9524:	b	abd8 <ReadSingleData+0x2138>
    9528:	cmp	r5, #256	; 0x100
    952c:	bgt	a318 <ReadSingleData+0x1878>
    9530:	ldr	r3, [r4]
    9534:	add	r4, sp, #192	; 0xc0
    9538:	mov	r1, sl
    953c:	mov	r2, r5
    9540:	mov	r0, r4
    9544:	bl	18b8 <fread@plt>
    9548:	mov	r8, r0
    954c:	cmp	r5, #1
    9550:	blt	b4c8 <ReadSingleData+0x2a28>
    9554:	mov	r0, #0
    9558:	cmp	r5, #4
    955c:	bcc	ac68 <ReadSingleData+0x21c8>
    9560:	bic	r0, r5, #3
    9564:	mov	r2, #1
    9568:	mov	r9, r7
    956c:	mov	lr, r5
    9570:	subs	r1, r0, #4
    9574:	add	r1, r2, r1, lsr #2
    9578:	and	ip, r1, #1
    957c:	beq	ac34 <ReadSingleData+0x2194>
    9580:	sub	r3, r1, ip
    9584:	mov	r1, #0
    9588:	mov	r7, #32
    958c:	mov	r6, r9
    9590:	add	r5, r4, #16
    9594:	vld1.32	{d16-d17}, [r4], r7
    9598:	add	r2, r6, #16
    959c:	subs	r3, r3, #2
    95a0:	add	r1, r1, #8
    95a4:	vcvt.f32.u32	q8, q8
    95a8:	vst1.32	{d16-d17}, [r6], r7
    95ac:	vld1.32	{d16-d17}, [r5]
    95b0:	vcvt.f32.u32	q8, q8
    95b4:	vst1.32	{d16-d17}, [r2]
    95b8:	bne	9590 <ReadSingleData+0xaf0>
    95bc:	b	ac38 <ReadSingleData+0x2198>
    95c0:	cmp	r5, #256	; 0x100
    95c4:	bgt	a46c <ReadSingleData+0x19cc>
    95c8:	ldr	r3, [r4]
    95cc:	add	r0, sp, #192	; 0xc0
    95d0:	mov	r1, sl
    95d4:	mov	r2, r5
    95d8:	bl	18b8 <fread@plt>
    95dc:	mov	r8, r0
    95e0:	cmp	r5, #1
    95e4:	blt	b4c8 <ReadSingleData+0x2a28>
    95e8:	lsl	r2, r5, #2
    95ec:	add	r1, sp, #192	; 0xc0
    95f0:	mov	r0, r7
    95f4:	bl	181c <memcpy@plt>
    95f8:	b	b4c8 <ReadSingleData+0x2a28>
    95fc:	cmp	r5, #256	; 0x100
    9600:	bgt	a518 <ReadSingleData+0x1a78>
    9604:	ldr	r3, [r4]
    9608:	add	r4, sp, #192	; 0xc0
    960c:	mov	r1, sl
    9610:	mov	r2, r5
    9614:	mov	r0, r4
    9618:	bl	18b8 <fread@plt>
    961c:	mov	r8, r0
    9620:	cmp	r5, #1
    9624:	blt	b4c8 <ReadSingleData+0x2a28>
    9628:	mov	lr, #0
    962c:	beq	acd0 <ReadSingleData+0x2230>
    9630:	bic	lr, r5, #1
    9634:	mov	r2, #1
    9638:	mov	sl, r7
    963c:	mov	r9, r5
    9640:	subs	r1, lr, #2
    9644:	add	r1, r2, r1, lsr #1
    9648:	and	ip, r1, #1
    964c:	beq	ac94 <ReadSingleData+0x21f4>
    9650:	sub	r3, r1, ip
    9654:	mov	r1, #0
    9658:	mov	r7, #32
    965c:	mov	r6, #16
    9660:	mov	r2, sl
    9664:	mov	r5, sl
    9668:	add	r0, r4, #16
    966c:	vld1.64	{d16-d17}, [r4], r7
    9670:	subs	r3, r3, #2
    9674:	add	r1, r1, #4
    9678:	vcvt.f32.f64	s1, d17
    967c:	vcvt.f32.f64	s0, d16
    9680:	vst1.32	{d0}, [r5], r6
    9684:	vld1.64	{d16-d17}, [r0]
    9688:	vcvt.f32.f64	s1, d17
    968c:	vcvt.f32.f64	s0, d16
    9690:	vstr	d0, [r2, #8]
    9694:	mov	r2, r5
    9698:	bne	9668 <ReadSingleData+0xbc8>
    969c:	b	ac98 <ReadSingleData+0x21f8>
    96a0:	cmp	r5, #256	; 0x100
    96a4:	bgt	a698 <ReadSingleData+0x1bf8>
    96a8:	ldr	r3, [r4]
    96ac:	add	r8, sp, #192	; 0xc0
    96b0:	mov	r1, sl
    96b4:	mov	r2, r5
    96b8:	mov	r0, r8
    96bc:	bl	18b8 <fread@plt>
    96c0:	cmp	r5, #1
    96c4:	str	r0, [sp, #36]	; 0x24
    96c8:	blt	a8d4 <ReadSingleData+0x1e34>
    96cc:	mov	r1, #0
    96d0:	str	r9, [sp, #8]
    96d4:	beq	ad78 <ReadSingleData+0x22d8>
    96d8:	bic	r0, r5, #1
    96dc:	mov	r1, #1
    96e0:	str	r7, [sp, #12]
    96e4:	str	r5, [sp, #20]
    96e8:	str	r0, [sp, #32]
    96ec:	subs	r0, r0, #2
    96f0:	add	r0, r1, r0, lsr #1
    96f4:	and	r1, r0, #1
    96f8:	str	r1, [sp, #28]
    96fc:	beq	ad00 <ReadSingleData+0x2260>
    9700:	ldr	sl, [sp, #12]
    9704:	sub	r7, r0, r1
    9708:	mov	r4, #0
    970c:	mov	r9, #16
    9710:	mov	r6, r8
    9714:	mov	r5, sl
    9718:	mov	r0, #32
    971c:	vld1.64	{d8-d9}, [r6], r0
    9720:	vmov.32	r0, d9[0]
    9724:	vmov.32	r1, d9[1]
    9728:	bl	6b898 <__aeabi_l2f>
    972c:	vmov.32	r2, d8[0]
    9730:	vmov.32	r1, d8[1]
    9734:	vmov	s17, r0
    9738:	mov	r0, r2
    973c:	bl	6b898 <__aeabi_l2f>
    9740:	vmov	s16, r0
    9744:	add	r0, r8, #16
    9748:	vst1.32	{d8}, [r5], r9
    974c:	vld1.64	{d8-d9}, [r0]
    9750:	vmov.32	r0, d9[0]
    9754:	vmov.32	r1, d9[1]
    9758:	bl	6b898 <__aeabi_l2f>
    975c:	vmov.32	r2, d8[0]
    9760:	vmov.32	r1, d8[1]
    9764:	vmov	s17, r0
    9768:	mov	r0, r2
    976c:	bl	6b898 <__aeabi_l2f>
    9770:	vmov	s16, r0
    9774:	subs	r7, r7, #2
    9778:	add	r4, r4, #4
    977c:	mov	r8, r6
    9780:	vstr	d8, [sl, #8]
    9784:	mov	sl, r5
    9788:	bne	9718 <ReadSingleData+0xc78>
    978c:	b	ad04 <ReadSingleData+0x2264>
    9790:	sub	r0, r5, #256	; 0x100
    9794:	add	r1, r7, #1024	; 0x400
    9798:	add	r6, sp, #192	; 0xc0
    979c:	mov	r8, #0
    97a0:	str	r5, [sp, #20]
    97a4:	str	r0, [sp, #32]
    97a8:	mov	r0, #0
    97ac:	mov	r9, r1
    97b0:	ldr	r3, [r4]
    97b4:	ldr	r1, [sp, #40]	; 0x28
    97b8:	str	r0, [sp, #36]	; 0x24
    97bc:	mov	r0, r6
    97c0:	mov	r2, #256	; 0x100
    97c4:	bl	18b8 <fread@plt>
    97c8:	mov	r4, r0
    97cc:	mov	sl, r7
    97d0:	mov	r5, r7
    97d4:	mov	r7, #0
    97d8:	add	r0, r6, r7
    97dc:	bl	1c20 <Mat_int16Swap>
    97e0:	vmov	s0, r0
    97e4:	add	r7, r7, #2
    97e8:	cmp	r7, #512	; 0x200
    97ec:	vcvt.f32.s32	s0, s0
    97f0:	vstmia	r5!, {s0}
    97f4:	bne	97d8 <ReadSingleData+0xd38>
    97f8:	ldr	r5, [sp, #36]	; 0x24
    97fc:	ldr	r2, [sp, #32]
    9800:	add	r8, r4, r8
    9804:	ldr	r4, [sp, #44]	; 0x2c
    9808:	mov	r7, sl
    980c:	add	r7, sl, #1024	; 0x400
    9810:	add	r1, r9, #1024	; 0x400
    9814:	add	r0, r5, #256	; 0x100
    9818:	cmp	r0, r2
    981c:	blt	97ac <ReadSingleData+0xd0c>
    9820:	ldr	r7, [sp, #20]
    9824:	cmp	r0, r7
    9828:	bge	b4c4 <ReadSingleData+0x2a24>
    982c:	ldr	r3, [r4]
    9830:	ldr	r1, [sp, #40]	; 0x28
    9834:	sub	r6, r7, r0
    9838:	add	r4, sp, #192	; 0xc0
    983c:	mov	r0, r4
    9840:	mov	r2, r6
    9844:	bl	18b8 <fread@plt>
    9848:	add	r8, r0, r8
    984c:	cmp	r6, #1
    9850:	blt	b4c4 <ReadSingleData+0x2a24>
    9854:	sub	r0, r7, r5
    9858:	sub	r5, r0, #256	; 0x100
    985c:	mov	r0, r4
    9860:	bl	1c20 <Mat_int16Swap>
    9864:	vmov	s0, r0
    9868:	add	r4, r4, #2
    986c:	subs	r5, r5, #1
    9870:	vcvt.f32.s32	s0, s0
    9874:	vstmia	r9!, {s0}
    9878:	bne	985c <ReadSingleData+0xdbc>
    987c:	b	b4c4 <ReadSingleData+0x2a24>
    9880:	sub	r0, r5, #256	; 0x100
    9884:	add	r1, r7, #1024	; 0x400
    9888:	add	r6, sp, #192	; 0xc0
    988c:	mov	r8, #0
    9890:	str	r5, [sp, #20]
    9894:	str	r0, [sp, #32]
    9898:	mov	r0, #0
    989c:	mov	r9, r1
    98a0:	ldr	r3, [r4]
    98a4:	ldr	r1, [sp, #40]	; 0x28
    98a8:	str	r0, [sp, #36]	; 0x24
    98ac:	mov	r0, r6
    98b0:	mov	r2, #256	; 0x100
    98b4:	bl	18b8 <fread@plt>
    98b8:	mov	r4, r0
    98bc:	mov	sl, r7
    98c0:	mov	r5, r7
    98c4:	mov	r7, #0
    98c8:	add	r0, r6, r7
    98cc:	bl	1c34 <Mat_uint16Swap>
    98d0:	vmov	s0, r0
    98d4:	add	r7, r7, #2
    98d8:	cmp	r7, #512	; 0x200
    98dc:	vcvt.f32.u32	s0, s0
    98e0:	vstmia	r5!, {s0}
    98e4:	bne	98c8 <ReadSingleData+0xe28>
    98e8:	ldr	r5, [sp, #36]	; 0x24
    98ec:	ldr	r2, [sp, #32]
    98f0:	add	r8, r4, r8
    98f4:	ldr	r4, [sp, #44]	; 0x2c
    98f8:	mov	r7, sl
    98fc:	add	r7, sl, #1024	; 0x400
    9900:	add	r1, r9, #1024	; 0x400
    9904:	add	r0, r5, #256	; 0x100
    9908:	cmp	r0, r2
    990c:	blt	989c <ReadSingleData+0xdfc>
    9910:	ldr	r7, [sp, #20]
    9914:	cmp	r0, r7
    9918:	bge	b4c4 <ReadSingleData+0x2a24>
    991c:	ldr	r3, [r4]
    9920:	ldr	r1, [sp, #40]	; 0x28
    9924:	sub	r6, r7, r0
    9928:	add	r4, sp, #192	; 0xc0
    992c:	mov	r0, r4
    9930:	mov	r2, r6
    9934:	bl	18b8 <fread@plt>
    9938:	add	r8, r0, r8
    993c:	cmp	r6, #1
    9940:	blt	b4c4 <ReadSingleData+0x2a24>
    9944:	sub	r0, r7, r5
    9948:	sub	r5, r0, #256	; 0x100
    994c:	mov	r0, r4
    9950:	bl	1c34 <Mat_uint16Swap>
    9954:	vmov	s0, r0
    9958:	add	r4, r4, #2
    995c:	subs	r5, r5, #1
    9960:	vcvt.f32.u32	s0, s0
    9964:	vstmia	r9!, {s0}
    9968:	bne	994c <ReadSingleData+0xeac>
    996c:	b	b4c4 <ReadSingleData+0x2a24>
    9970:	sub	r0, r5, #256	; 0x100
    9974:	mov	r8, r7
    9978:	add	r1, r7, #1024	; 0x400
    997c:	add	r6, sp, #192	; 0xc0
    9980:	mov	r7, #0
    9984:	str	r5, [sp, #20]
    9988:	str	r0, [sp, #36]	; 0x24
    998c:	mov	r0, #0
    9990:	mov	sl, r1
    9994:	ldr	r3, [r4]
    9998:	ldr	r1, [sp, #40]	; 0x28
    999c:	mov	r9, r0
    99a0:	mov	r0, r6
    99a4:	mov	r2, #256	; 0x100
    99a8:	bl	18b8 <fread@plt>
    99ac:	mov	r4, r0
    99b0:	mov	r5, #0
    99b4:	add	r0, r6, r5
    99b8:	bl	1bf8 <Mat_int32Swap>
    99bc:	vmov	s0, r0
    99c0:	add	r1, r8, r5
    99c4:	add	r5, r5, #4
    99c8:	cmp	r5, #1024	; 0x400
    99cc:	vcvt.f32.s32	s0, s0
    99d0:	vstr	s0, [r1]
    99d4:	bne	99b4 <ReadSingleData+0xf14>
    99d8:	ldr	r2, [sp, #36]	; 0x24
    99dc:	add	r7, r4, r7
    99e0:	ldr	r4, [sp, #44]	; 0x2c
    99e4:	add	r0, r9, #256	; 0x100
    99e8:	add	r8, r8, #1024	; 0x400
    99ec:	add	r1, sl, #1024	; 0x400
    99f0:	cmp	r0, r2
    99f4:	blt	9990 <ReadSingleData+0xef0>
    99f8:	ldr	r5, [sp, #20]
    99fc:	cmp	r0, r5
    9a00:	bge	9c24 <ReadSingleData+0x1184>
    9a04:	ldr	r3, [r4]
    9a08:	ldr	r1, [sp, #40]	; 0x28
    9a0c:	sub	r6, r5, r0
    9a10:	add	r4, sp, #192	; 0xc0
    9a14:	mov	r0, r4
    9a18:	mov	r2, r6
    9a1c:	bl	18b8 <fread@plt>
    9a20:	mov	r8, r7
    9a24:	add	r8, r0, r7
    9a28:	cmp	r6, #1
    9a2c:	blt	b4c4 <ReadSingleData+0x2a24>
    9a30:	sub	r0, r5, r9
    9a34:	sub	r5, r0, #256	; 0x100
    9a38:	mov	r0, r4
    9a3c:	bl	1bf8 <Mat_int32Swap>
    9a40:	vmov	s0, r0
    9a44:	add	r4, r4, #4
    9a48:	subs	r5, r5, #1
    9a4c:	vcvt.f32.s32	s0, s0
    9a50:	vstmia	sl!, {s0}
    9a54:	bne	9a38 <ReadSingleData+0xf98>
    9a58:	b	b4c4 <ReadSingleData+0x2a24>
    9a5c:	sub	r0, r5, #256	; 0x100
    9a60:	mov	r8, r7
    9a64:	add	r1, r7, #1024	; 0x400
    9a68:	add	r6, sp, #192	; 0xc0
    9a6c:	mov	r7, #0
    9a70:	str	r5, [sp, #20]
    9a74:	str	r0, [sp, #36]	; 0x24
    9a78:	mov	r0, #0
    9a7c:	mov	sl, r1
    9a80:	ldr	r3, [r4]
    9a84:	ldr	r1, [sp, #40]	; 0x28
    9a88:	mov	r9, r0
    9a8c:	mov	r0, r6
    9a90:	mov	r2, #256	; 0x100
    9a94:	bl	18b8 <fread@plt>
    9a98:	mov	r4, r0
    9a9c:	mov	r5, #0
    9aa0:	add	r0, r6, r5
    9aa4:	bl	1c0c <Mat_uint32Swap>
    9aa8:	vmov	s0, r0
    9aac:	add	r1, r8, r5
    9ab0:	add	r5, r5, #4
    9ab4:	cmp	r5, #1024	; 0x400
    9ab8:	vcvt.f32.u32	s0, s0
    9abc:	vstr	s0, [r1]
    9ac0:	bne	9aa0 <ReadSingleData+0x1000>
    9ac4:	ldr	r2, [sp, #36]	; 0x24
    9ac8:	add	r7, r4, r7
    9acc:	ldr	r4, [sp, #44]	; 0x2c
    9ad0:	add	r0, r9, #256	; 0x100
    9ad4:	add	r8, r8, #1024	; 0x400
    9ad8:	add	r1, sl, #1024	; 0x400
    9adc:	cmp	r0, r2
    9ae0:	blt	9a7c <ReadSingleData+0xfdc>
    9ae4:	ldr	r5, [sp, #20]
    9ae8:	cmp	r0, r5
    9aec:	bge	9c24 <ReadSingleData+0x1184>
    9af0:	ldr	r3, [r4]
    9af4:	ldr	r1, [sp, #40]	; 0x28
    9af8:	sub	r6, r5, r0
    9afc:	add	r4, sp, #192	; 0xc0
    9b00:	mov	r0, r4
    9b04:	mov	r2, r6
    9b08:	bl	18b8 <fread@plt>
    9b0c:	mov	r8, r7
    9b10:	add	r8, r0, r7
    9b14:	cmp	r6, #1
    9b18:	blt	b4c4 <ReadSingleData+0x2a24>
    9b1c:	sub	r0, r5, r9
    9b20:	sub	r5, r0, #256	; 0x100
    9b24:	mov	r0, r4
    9b28:	bl	1c0c <Mat_uint32Swap>
    9b2c:	vmov	s0, r0
    9b30:	add	r4, r4, #4
    9b34:	subs	r5, r5, #1
    9b38:	vcvt.f32.u32	s0, s0
    9b3c:	vstmia	sl!, {s0}
    9b40:	bne	9b24 <ReadSingleData+0x1084>
    9b44:	b	b4c4 <ReadSingleData+0x2a24>
    9b48:	sub	r0, r5, #256	; 0x100
    9b4c:	mov	r8, r7
    9b50:	add	r1, r7, #1024	; 0x400
    9b54:	add	r6, sp, #192	; 0xc0
    9b58:	mov	r7, #0
    9b5c:	str	r5, [sp, #20]
    9b60:	str	r0, [sp, #36]	; 0x24
    9b64:	mov	r0, #0
    9b68:	mov	sl, r1
    9b6c:	ldr	r3, [r4]
    9b70:	ldr	r1, [sp, #40]	; 0x28
    9b74:	mov	r9, r0
    9b78:	mov	r0, r6
    9b7c:	mov	r2, #256	; 0x100
    9b80:	bl	18b8 <fread@plt>
    9b84:	mov	r4, r0
    9b88:	mov	r5, #0
    9b8c:	add	r0, r6, r5
    9b90:	bl	1c4c <Mat_floatSwap>
    9b94:	add	r0, r8, r5
    9b98:	add	r5, r5, #4
    9b9c:	cmp	r5, #1024	; 0x400
    9ba0:	vstr	s0, [r0]
    9ba4:	bne	9b8c <ReadSingleData+0x10ec>
    9ba8:	ldr	r2, [sp, #36]	; 0x24
    9bac:	add	r7, r4, r7
    9bb0:	ldr	r4, [sp, #44]	; 0x2c
    9bb4:	add	r0, r9, #256	; 0x100
    9bb8:	add	r8, r8, #1024	; 0x400
    9bbc:	add	r1, sl, #1024	; 0x400
    9bc0:	cmp	r0, r2
    9bc4:	blt	9b68 <ReadSingleData+0x10c8>
    9bc8:	ldr	r5, [sp, #20]
    9bcc:	cmp	r0, r5
    9bd0:	bge	9c24 <ReadSingleData+0x1184>
    9bd4:	ldr	r3, [r4]
    9bd8:	ldr	r1, [sp, #40]	; 0x28
    9bdc:	sub	r6, r5, r0
    9be0:	add	r4, sp, #192	; 0xc0
    9be4:	mov	r0, r4
    9be8:	mov	r2, r6
    9bec:	bl	18b8 <fread@plt>
    9bf0:	mov	r8, r7
    9bf4:	add	r8, r0, r7
    9bf8:	cmp	r6, #1
    9bfc:	blt	b4c4 <ReadSingleData+0x2a24>
    9c00:	sub	r0, r5, r9
    9c04:	sub	r5, r0, #256	; 0x100
    9c08:	mov	r0, r4
    9c0c:	bl	1c4c <Mat_floatSwap>
    9c10:	vstmia	sl!, {s0}
    9c14:	add	r4, r4, #4
    9c18:	subs	r5, r5, #1
    9c1c:	bne	9c08 <ReadSingleData+0x1168>
    9c20:	b	b4c4 <ReadSingleData+0x2a24>
    9c24:	ldr	sl, [sp, #40]	; 0x28
    9c28:	mov	r8, r7
    9c2c:	b	b4c8 <ReadSingleData+0x2a28>
    9c30:	mov	r0, r7
    9c34:	sub	r0, r5, #256	; 0x100
    9c38:	add	r1, r7, #1024	; 0x400
    9c3c:	mov	r8, #0
    9c40:	str	r5, [sp, #20]
    9c44:	str	r0, [sp, #32]
    9c48:	mov	r0, #0
    9c4c:	mov	sl, r1
    9c50:	ldr	r3, [r4]
    9c54:	ldr	r1, [sp, #40]	; 0x28
    9c58:	add	r6, sp, #192	; 0xc0
    9c5c:	str	r0, [sp, #36]	; 0x24
    9c60:	mov	r2, #256	; 0x100
    9c64:	mov	r9, r8
    9c68:	mov	r0, r6
    9c6c:	bl	18b8 <fread@plt>
    9c70:	mov	r4, r0
    9c74:	mov	r5, #0
    9c78:	mov	r0, r6
    9c7c:	add	r8, r7, r5
    9c80:	bl	1c90 <Mat_doubleSwap>
    9c84:	vcvt.f32.f64	s0, d0
    9c88:	add	r5, r5, #4
    9c8c:	add	r6, r6, #8
    9c90:	cmp	r5, #1024	; 0x400
    9c94:	vstr	s0, [r8]
    9c98:	bne	9c78 <ReadSingleData+0x11d8>
    9c9c:	ldr	r6, [sp, #36]	; 0x24
    9ca0:	ldr	r2, [sp, #32]
    9ca4:	mov	r8, r9
    9ca8:	add	r8, r4, r9
    9cac:	ldr	r4, [sp, #44]	; 0x2c
    9cb0:	add	r7, r7, #1024	; 0x400
    9cb4:	add	r1, sl, #1024	; 0x400
    9cb8:	add	r0, r6, #256	; 0x100
    9cbc:	cmp	r0, r2
    9cc0:	blt	9c4c <ReadSingleData+0x11ac>
    9cc4:	ldr	r5, [sp, #20]
    9cc8:	cmp	r0, r5
    9ccc:	bge	b4c4 <ReadSingleData+0x2a24>
    9cd0:	ldr	r3, [r4]
    9cd4:	ldr	r1, [sp, #40]	; 0x28
    9cd8:	sub	r7, r5, r0
    9cdc:	add	r4, sp, #192	; 0xc0
    9ce0:	mov	r0, r4
    9ce4:	mov	r2, r7
    9ce8:	bl	18b8 <fread@plt>
    9cec:	add	r8, r0, r8
    9cf0:	cmp	r7, #1
    9cf4:	blt	b4c4 <ReadSingleData+0x2a24>
    9cf8:	sub	r0, r5, r6
    9cfc:	sub	r5, r0, #256	; 0x100
    9d00:	mov	r0, r4
    9d04:	bl	1c90 <Mat_doubleSwap>
    9d08:	vcvt.f32.f64	s0, d0
    9d0c:	add	r4, r4, #8
    9d10:	subs	r5, r5, #1
    9d14:	vstmia	sl!, {s0}
    9d18:	bne	9d00 <ReadSingleData+0x1260>
    9d1c:	b	b4c4 <ReadSingleData+0x2a24>
    9d20:	sub	r0, r5, #256	; 0x100
    9d24:	str	r5, [sp, #20]
    9d28:	add	r1, r7, #1024	; 0x400
    9d2c:	mov	r5, r7
    9d30:	mov	r8, #0
    9d34:	str	r9, [sp, #8]
    9d38:	str	r7, [sp, #12]
    9d3c:	str	r0, [sp, #32]
    9d40:	mov	r0, #0
    9d44:	str	r0, [sp, #36]	; 0x24
    9d48:	ldr	r0, [sp, #44]	; 0x2c
    9d4c:	add	r4, sp, #192	; 0xc0
    9d50:	mov	r7, r1
    9d54:	mov	r1, sl
    9d58:	mov	r2, #256	; 0x100
    9d5c:	mov	r9, r8
    9d60:	ldr	r3, [r0]
    9d64:	mov	r0, r4
    9d68:	bl	18b8 <fread@plt>
    9d6c:	mov	r6, r0
    9d70:	mov	r8, #0
    9d74:	mov	r0, r4
    9d78:	bl	1b84 <Mat_int64Swap>
    9d7c:	bl	6b898 <__aeabi_l2f>
    9d80:	str	r0, [r5, r8]
    9d84:	add	r8, r8, #4
    9d88:	add	r4, r4, #8
    9d8c:	cmp	r8, #1024	; 0x400
    9d90:	bne	9d74 <ReadSingleData+0x12d4>
    9d94:	ldr	r4, [sp, #36]	; 0x24
    9d98:	ldr	r2, [sp, #32]
    9d9c:	ldr	sl, [sp, #40]	; 0x28
    9da0:	mov	r8, r9
    9da4:	add	r8, r6, r9
    9da8:	add	r5, r5, #1024	; 0x400
    9dac:	add	r1, r7, #1024	; 0x400
    9db0:	add	r0, r4, #256	; 0x100
    9db4:	cmp	r0, r2
    9db8:	blt	9d44 <ReadSingleData+0x12a4>
    9dbc:	ldr	r5, [sp, #20]
    9dc0:	cmp	r0, r5
    9dc4:	bge	a8b8 <ReadSingleData+0x1e18>
    9dc8:	mov	r9, r5
    9dcc:	mov	r5, r8
    9dd0:	add	r6, sp, #192	; 0xc0
    9dd4:	mov	r1, sl
    9dd8:	sub	r8, r9, r0
    9ddc:	ldr	r0, [sp, #44]	; 0x2c
    9de0:	mov	r2, r8
    9de4:	ldr	r3, [r0]
    9de8:	mov	r0, r6
    9dec:	bl	18b8 <fread@plt>
    9df0:	add	r5, r0, r5
    9df4:	cmp	r8, #1
    9df8:	blt	a9c4 <ReadSingleData+0x1f24>
    9dfc:	sub	r0, r9, r4
    9e00:	sub	r4, r0, #256	; 0x100
    9e04:	mov	r0, r6
    9e08:	bl	1b84 <Mat_int64Swap>
    9e0c:	bl	6b898 <__aeabi_l2f>
    9e10:	str	r0, [r7], #4
    9e14:	add	r6, r6, #8
    9e18:	subs	r4, r4, #1
    9e1c:	bne	9e04 <ReadSingleData+0x1364>
    9e20:	mov	r8, r5
    9e24:	ldr	r5, [sp, #20]
    9e28:	ldr	r7, [sp, #12]
    9e2c:	b	adb8 <ReadSingleData+0x2318>
    9e30:	ldr	sl, [sp, #40]	; 0x28
    9e34:	mov	r8, r9
    9e38:	b	b4c8 <ReadSingleData+0x2a28>
    9e3c:	sub	r1, r5, #256	; 0x100
    9e40:	str	r5, [sp, #20]
    9e44:	add	r0, r7, #1024	; 0x400
    9e48:	mov	r5, #0
    9e4c:	add	r6, sp, #192	; 0xc0
    9e50:	mov	r9, #32
    9e54:	add	r4, sp, #80	; 0x50
    9e58:	mov	r8, r7
    9e5c:	mov	sl, #0
    9e60:	str	r7, [sp, #12]
    9e64:	str	r1, [sp, #24]
    9e68:	mov	r1, #256	; 0x100
    9e6c:	add	r2, sp, #28
    9e70:	stm	r2, {r0, r1, r5}
    9e74:	ldr	r0, [sp, #44]	; 0x2c
    9e78:	ldr	r1, [sp, #40]	; 0x28
    9e7c:	mov	r2, #256	; 0x100
    9e80:	ldr	r3, [r0]
    9e84:	mov	r0, r6
    9e88:	bl	18b8 <fread@plt>
    9e8c:	mov	r1, r8
    9e90:	mov	r2, #0
    9e94:	add	r3, r6, r2
    9e98:	add	r7, r1, #16
    9e9c:	add	r2, r2, #16
    9ea0:	vld1.16	{d16}, [r3]!
    9ea4:	cmp	r2, #512	; 0x200
    9ea8:	vmovl.s16	q8, d16
    9eac:	vcvt.f32.s32	q8, q8
    9eb0:	vst1.32	{d16-d17}, [r1], r9
    9eb4:	ldr	r5, [r3]
    9eb8:	ldr	r3, [r3, #4]
    9ebc:	str	r3, [sp, #84]	; 0x54
    9ec0:	str	r5, [sp, #80]	; 0x50
    9ec4:	vld1.16	{d16}, [r4 :64]
    9ec8:	vmovl.s16	q8, d16
    9ecc:	vcvt.f32.s32	q8, q8
    9ed0:	vst1.32	{d16-d17}, [r7]
    9ed4:	bne	9e94 <ReadSingleData+0x13f4>
    9ed8:	ldr	r2, [sp, #36]	; 0x24
    9edc:	ldr	r1, [sp, #32]
    9ee0:	add	sl, r0, sl
    9ee4:	ldr	r0, [sp, #28]
    9ee8:	add	r8, r8, #1024	; 0x400
    9eec:	add	r5, r2, #256	; 0x100
    9ef0:	ldr	r2, [sp, #24]
    9ef4:	add	r0, r0, #1024	; 0x400
    9ef8:	add	r1, r1, #256	; 0x100
    9efc:	cmp	r5, r2
    9f00:	blt	9e6c <ReadSingleData+0x13cc>
    9f04:	ldr	r0, [sp, #20]
    9f08:	cmp	r5, r0
    9f0c:	bge	a1b4 <ReadSingleData+0x1714>
    9f10:	sub	r4, r0, r5
    9f14:	ldr	r0, [sp, #44]	; 0x2c
    9f18:	ldr	r1, [sp, #40]	; 0x28
    9f1c:	add	r7, sp, #192	; 0xc0
    9f20:	mov	r2, r4
    9f24:	ldr	r3, [r0]
    9f28:	mov	r0, r7
    9f2c:	bl	18b8 <fread@plt>
    9f30:	mov	r8, sl
    9f34:	add	r8, r0, sl
    9f38:	cmp	r4, #1
    9f3c:	blt	b4c4 <ReadSingleData+0x2a24>
    9f40:	mov	lr, #0
    9f44:	cmp	r4, #4
    9f48:	bcc	b2f8 <ReadSingleData+0x2858>
    9f4c:	bic	lr, r4, #3
    9f50:	mov	r1, #1
    9f54:	mov	r9, r8
    9f58:	str	r4, [sp, #44]	; 0x2c
    9f5c:	subs	r2, lr, #4
    9f60:	add	r2, r1, r2, lsr #2
    9f64:	and	r0, r2, #1
    9f68:	str	r0, [sp, #24]
    9f6c:	beq	b2a0 <ReadSingleData+0x2800>
    9f70:	ldr	r0, [sp, #20]
    9f74:	ldr	r2, [sp, #36]	; 0x24
    9f78:	ldr	ip, [sp, #28]
    9f7c:	mov	r8, #16
    9f80:	mov	sl, #32
    9f84:	add	r4, sp, #72	; 0x48
    9f88:	mov	r6, r7
    9f8c:	sub	r2, r0, r2
    9f90:	sub	r2, r2, #256	; 0x100
    9f94:	bic	r2, r2, #3
    9f98:	sub	r2, r2, #4
    9f9c:	add	r1, r1, r2, lsr #2
    9fa0:	mvn	r3, r2, lsr #2
    9fa4:	mov	r2, #0
    9fa8:	and	r1, r1, #1
    9fac:	add	r3, r3, r1
    9fb0:	vld1.16	{d16}, [r6], r8
    9fb4:	add	r0, ip, #16
    9fb8:	adds	r3, r3, #2
    9fbc:	add	r2, r2, #8
    9fc0:	vmovl.s16	q8, d16
    9fc4:	vcvt.f32.s32	q8, q8
    9fc8:	vst1.32	{d16-d17}, [ip], sl
    9fcc:	ldr	r1, [r7, #8]
    9fd0:	ldr	r7, [r7, #12]
    9fd4:	str	r7, [sp, #76]	; 0x4c
    9fd8:	str	r1, [sp, #72]	; 0x48
    9fdc:	mov	r7, r6
    9fe0:	vld1.16	{d16}, [r4 :64]
    9fe4:	vmovl.s16	q8, d16
    9fe8:	vcvt.f32.s32	q8, q8
    9fec:	vst1.32	{d16-d17}, [r0]
    9ff0:	bne	9fb0 <ReadSingleData+0x1510>
    9ff4:	b	b2a4 <ReadSingleData+0x2804>
    9ff8:	sub	r1, r5, #256	; 0x100
    9ffc:	str	r5, [sp, #20]
    a000:	add	r0, r7, #1024	; 0x400
    a004:	mov	r5, #0
    a008:	add	r6, sp, #192	; 0xc0
    a00c:	mov	r9, #32
    a010:	add	r4, sp, #120	; 0x78
    a014:	mov	r8, r7
    a018:	mov	sl, #0
    a01c:	str	r7, [sp, #12]
    a020:	str	r1, [sp, #24]
    a024:	mov	r1, #256	; 0x100
    a028:	add	r2, sp, #28
    a02c:	stm	r2, {r0, r1, r5}
    a030:	ldr	r0, [sp, #44]	; 0x2c
    a034:	ldr	r1, [sp, #40]	; 0x28
    a038:	mov	r2, #256	; 0x100
    a03c:	ldr	r3, [r0]
    a040:	mov	r0, r6
    a044:	bl	18b8 <fread@plt>
    a048:	mov	r1, r8
    a04c:	mov	r2, #0
    a050:	add	r3, r6, r2
    a054:	add	r7, r1, #16
    a058:	add	r2, r2, #16
    a05c:	vld1.16	{d16}, [r3]!
    a060:	cmp	r2, #512	; 0x200
    a064:	vmovl.u16	q8, d16
    a068:	vcvt.f32.u32	q8, q8
    a06c:	vst1.32	{d16-d17}, [r1], r9
    a070:	ldr	r5, [r3]
    a074:	ldr	r3, [r3, #4]
    a078:	str	r3, [sp, #124]	; 0x7c
    a07c:	str	r5, [sp, #120]	; 0x78
    a080:	vld1.16	{d16}, [r4 :64]
    a084:	vmovl.u16	q8, d16
    a088:	vcvt.f32.u32	q8, q8
    a08c:	vst1.32	{d16-d17}, [r7]
    a090:	bne	a050 <ReadSingleData+0x15b0>
    a094:	ldr	r2, [sp, #36]	; 0x24
    a098:	ldr	r1, [sp, #32]
    a09c:	add	sl, r0, sl
    a0a0:	ldr	r0, [sp, #28]
    a0a4:	add	r8, r8, #1024	; 0x400
    a0a8:	add	r5, r2, #256	; 0x100
    a0ac:	ldr	r2, [sp, #24]
    a0b0:	add	r0, r0, #1024	; 0x400
    a0b4:	add	r1, r1, #256	; 0x100
    a0b8:	cmp	r5, r2
    a0bc:	blt	a028 <ReadSingleData+0x1588>
    a0c0:	ldr	r0, [sp, #20]
    a0c4:	cmp	r5, r0
    a0c8:	bge	a1b4 <ReadSingleData+0x1714>
    a0cc:	sub	r4, r0, r5
    a0d0:	ldr	r0, [sp, #44]	; 0x2c
    a0d4:	ldr	r1, [sp, #40]	; 0x28
    a0d8:	add	r7, sp, #192	; 0xc0
    a0dc:	mov	r2, r4
    a0e0:	ldr	r3, [r0]
    a0e4:	mov	r0, r7
    a0e8:	bl	18b8 <fread@plt>
    a0ec:	mov	r8, sl
    a0f0:	add	r8, r0, sl
    a0f4:	cmp	r4, #1
    a0f8:	blt	b4c4 <ReadSingleData+0x2a24>
    a0fc:	mov	lr, #0
    a100:	cmp	r4, #4
    a104:	bcc	b398 <ReadSingleData+0x28f8>
    a108:	bic	lr, r4, #3
    a10c:	mov	r1, #1
    a110:	mov	r9, r8
    a114:	str	r4, [sp, #44]	; 0x2c
    a118:	subs	r2, lr, #4
    a11c:	add	r2, r1, r2, lsr #2
    a120:	and	r0, r2, #1
    a124:	str	r0, [sp, #24]
    a128:	beq	b340 <ReadSingleData+0x28a0>
    a12c:	ldr	r0, [sp, #20]
    a130:	ldr	r2, [sp, #36]	; 0x24
    a134:	ldr	ip, [sp, #28]
    a138:	mov	r8, #16
    a13c:	mov	sl, #32
    a140:	add	r4, sp, #112	; 0x70
    a144:	mov	r6, r7
    a148:	sub	r2, r0, r2
    a14c:	sub	r2, r2, #256	; 0x100
    a150:	bic	r2, r2, #3
    a154:	sub	r2, r2, #4
    a158:	add	r1, r1, r2, lsr #2
    a15c:	mvn	r3, r2, lsr #2
    a160:	mov	r2, #0
    a164:	and	r1, r1, #1
    a168:	add	r3, r3, r1
    a16c:	vld1.16	{d16}, [r6], r8
    a170:	add	r0, ip, #16
    a174:	adds	r3, r3, #2
    a178:	add	r2, r2, #8
    a17c:	vmovl.u16	q8, d16
    a180:	vcvt.f32.u32	q8, q8
    a184:	vst1.32	{d16-d17}, [ip], sl
    a188:	ldr	r1, [r7, #8]
    a18c:	ldr	r7, [r7, #12]
    a190:	str	r7, [sp, #116]	; 0x74
    a194:	str	r1, [sp, #112]	; 0x70
    a198:	mov	r7, r6
    a19c:	vld1.16	{d16}, [r4 :64]
    a1a0:	vmovl.u16	q8, d16
    a1a4:	vcvt.f32.u32	q8, q8
    a1a8:	vst1.32	{d16-d17}, [r0]
    a1ac:	bne	a16c <ReadSingleData+0x16cc>
    a1b0:	b	b344 <ReadSingleData+0x28a4>
    a1b4:	ldr	r0, [sp, #40]	; 0x28
    a1b8:	mov	r8, sl
    a1bc:	mov	sl, r0
    a1c0:	b	b4c8 <ReadSingleData+0x2a28>
    a1c4:	str	r5, [sp, #20]
    a1c8:	add	r0, r7, #1024	; 0x400
    a1cc:	sub	r5, r5, #256	; 0x100
    a1d0:	mov	r9, #0
    a1d4:	mov	r1, #256	; 0x100
    a1d8:	add	r6, sp, #192	; 0xc0
    a1dc:	mov	r8, #0
    a1e0:	str	r7, [sp, #12]
    a1e4:	mov	r4, r0
    a1e8:	ldr	r0, [sp, #44]	; 0x2c
    a1ec:	mov	sl, r1
    a1f0:	ldr	r1, [sp, #40]	; 0x28
    a1f4:	mov	r2, #256	; 0x100
    a1f8:	ldr	r3, [r0]
    a1fc:	mov	r0, r6
    a200:	bl	18b8 <fread@plt>
    a204:	mov	r1, #0
    a208:	add	r2, r6, r1
    a20c:	add	r3, r7, r1
    a210:	add	r1, r1, #32
    a214:	vld1.32	{d16-d17}, [r2]!
    a218:	cmp	r1, #1024	; 0x400
    a21c:	vcvt.f32.s32	q8, q8
    a220:	vst1.32	{d16-d17}, [r3]!
    a224:	vld1.32	{d16-d17}, [r2]
    a228:	vcvt.f32.s32	q8, q8
    a22c:	vst1.32	{d16-d17}, [r3]
    a230:	bne	a208 <ReadSingleData+0x1768>
    a234:	mov	r2, r9
    a238:	add	r9, r9, #256	; 0x100
    a23c:	add	r8, r0, r8
    a240:	add	r7, r7, #1024	; 0x400
    a244:	add	r0, r4, #1024	; 0x400
    a248:	add	r1, sl, #256	; 0x100
    a24c:	cmp	r9, r5
    a250:	blt	a1e4 <ReadSingleData+0x1744>
    a254:	ldr	r5, [sp, #20]
    a258:	str	r2, [sp, #36]	; 0x24
    a25c:	cmp	r9, r5
    a260:	bge	b4c4 <ReadSingleData+0x2a24>
    a264:	ldr	r0, [sp, #44]	; 0x2c
    a268:	ldr	r1, [sp, #40]	; 0x28
    a26c:	sub	r7, r5, r9
    a270:	add	r6, sp, #192	; 0xc0
    a274:	mov	r2, r7
    a278:	ldr	r3, [r0]
    a27c:	mov	r0, r6
    a280:	bl	18b8 <fread@plt>
    a284:	add	r8, r0, r8
    a288:	cmp	r7, #1
    a28c:	blt	b4c4 <ReadSingleData+0x2a24>
    a290:	ldr	r3, [sp, #12]
    a294:	mov	r0, #0
    a298:	cmp	r7, #4
    a29c:	bcc	b418 <ReadSingleData+0x2978>
    a2a0:	bic	r0, r7, #3
    a2a4:	mov	r2, #1
    a2a8:	mov	lr, r7
    a2ac:	subs	r1, r0, #4
    a2b0:	add	r1, r2, r1, lsr #2
    a2b4:	and	ip, r1, #1
    a2b8:	beq	b3e0 <ReadSingleData+0x2940>
    a2bc:	ldr	r1, [sp, #36]	; 0x24
    a2c0:	sub	r3, r5, r1
    a2c4:	sub	r3, r3, #256	; 0x100
    a2c8:	bic	r3, r3, #3
    a2cc:	sub	r3, r3, #4
    a2d0:	add	r2, r2, r3, lsr #2
    a2d4:	mvn	r7, r3, lsr #2
    a2d8:	and	r2, r2, #1
    a2dc:	add	r3, r7, r2
    a2e0:	mov	r2, #0
    a2e4:	mov	r7, #32
    a2e8:	add	r5, r6, #16
    a2ec:	vld1.32	{d16-d17}, [r6], r7
    a2f0:	add	r1, r4, #16
    a2f4:	adds	r3, r3, #2
    a2f8:	add	r2, r2, #8
    a2fc:	vcvt.f32.s32	q8, q8
    a300:	vst1.32	{d16-d17}, [r4], r7
    a304:	vld1.32	{d16-d17}, [r5]
    a308:	vcvt.f32.s32	q8, q8
    a30c:	vst1.32	{d16-d17}, [r1]
    a310:	bne	a2e8 <ReadSingleData+0x1848>
    a314:	b	b3e4 <ReadSingleData+0x2944>
    a318:	str	r5, [sp, #20]
    a31c:	add	r0, r7, #1024	; 0x400
    a320:	sub	r5, r5, #256	; 0x100
    a324:	mov	r9, #0
    a328:	mov	r1, #256	; 0x100
    a32c:	add	r6, sp, #192	; 0xc0
    a330:	mov	r8, #0
    a334:	str	r7, [sp, #12]
    a338:	mov	r4, r0
    a33c:	ldr	r0, [sp, #44]	; 0x2c
    a340:	mov	sl, r1
    a344:	ldr	r1, [sp, #40]	; 0x28
    a348:	mov	r2, #256	; 0x100
    a34c:	ldr	r3, [r0]
    a350:	mov	r0, r6
    a354:	bl	18b8 <fread@plt>
    a358:	mov	r1, #0
    a35c:	add	r2, r6, r1
    a360:	add	r3, r7, r1
    a364:	add	r1, r1, #32
    a368:	vld1.32	{d16-d17}, [r2]!
    a36c:	cmp	r1, #1024	; 0x400
    a370:	vcvt.f32.u32	q8, q8
    a374:	vst1.32	{d16-d17}, [r3]!
    a378:	vld1.32	{d16-d17}, [r2]
    a37c:	vcvt.f32.u32	q8, q8
    a380:	vst1.32	{d16-d17}, [r3]
    a384:	bne	a35c <ReadSingleData+0x18bc>
    a388:	mov	r2, r9
    a38c:	add	r9, r9, #256	; 0x100
    a390:	add	r8, r0, r8
    a394:	add	r7, r7, #1024	; 0x400
    a398:	add	r0, r4, #1024	; 0x400
    a39c:	add	r1, sl, #256	; 0x100
    a3a0:	cmp	r9, r5
    a3a4:	blt	a338 <ReadSingleData+0x1898>
    a3a8:	ldr	r5, [sp, #20]
    a3ac:	str	r2, [sp, #36]	; 0x24
    a3b0:	cmp	r9, r5
    a3b4:	bge	b4c4 <ReadSingleData+0x2a24>
    a3b8:	ldr	r0, [sp, #44]	; 0x2c
    a3bc:	ldr	r1, [sp, #40]	; 0x28
    a3c0:	sub	r7, r5, r9
    a3c4:	add	r6, sp, #192	; 0xc0
    a3c8:	mov	r2, r7
    a3cc:	ldr	r3, [r0]
    a3d0:	mov	r0, r6
    a3d4:	bl	18b8 <fread@plt>
    a3d8:	add	r8, r0, r8
    a3dc:	cmp	r7, #1
    a3e0:	blt	b4c4 <ReadSingleData+0x2a24>
    a3e4:	ldr	r3, [sp, #12]
    a3e8:	mov	r0, #0
    a3ec:	cmp	r7, #4
    a3f0:	bcc	b48c <ReadSingleData+0x29ec>
    a3f4:	bic	r0, r7, #3
    a3f8:	mov	r2, #1
    a3fc:	mov	lr, r7
    a400:	subs	r1, r0, #4
    a404:	add	r1, r2, r1, lsr #2
    a408:	and	ip, r1, #1
    a40c:	beq	b454 <ReadSingleData+0x29b4>
    a410:	ldr	r1, [sp, #36]	; 0x24
    a414:	sub	r3, r5, r1
    a418:	sub	r3, r3, #256	; 0x100
    a41c:	bic	r3, r3, #3
    a420:	sub	r3, r3, #4
    a424:	add	r2, r2, r3, lsr #2
    a428:	mvn	r7, r3, lsr #2
    a42c:	and	r2, r2, #1
    a430:	add	r3, r7, r2
    a434:	mov	r2, #0
    a438:	mov	r7, #32
    a43c:	add	r5, r6, #16
    a440:	vld1.32	{d16-d17}, [r6], r7
    a444:	add	r1, r4, #16
    a448:	adds	r3, r3, #2
    a44c:	add	r2, r2, #8
    a450:	vcvt.f32.u32	q8, q8
    a454:	vst1.32	{d16-d17}, [r4], r7
    a458:	vld1.32	{d16-d17}, [r5]
    a45c:	vcvt.f32.u32	q8, q8
    a460:	vst1.32	{d16-d17}, [r1]
    a464:	bne	a43c <ReadSingleData+0x199c>
    a468:	b	b458 <ReadSingleData+0x29b8>
    a46c:	sub	r0, r5, #256	; 0x100
    a470:	lsl	r6, r5, #2
    a474:	str	r5, [sp, #20]
    a478:	mov	r5, #0
    a47c:	add	r9, sp, #192	; 0xc0
    a480:	mov	r8, #0
    a484:	str	r0, [sp, #36]	; 0x24
    a488:	ldr	r3, [r4]
    a48c:	mov	r0, r9
    a490:	mov	r1, sl
    a494:	mov	r2, #256	; 0x100
    a498:	bl	18b8 <fread@plt>
    a49c:	mov	r4, r0
    a4a0:	add	r0, r7, r5, lsl #2
    a4a4:	mov	r1, r9
    a4a8:	mov	r2, #1024	; 0x400
    a4ac:	bl	181c <memcpy@plt>
    a4b0:	ldr	r0, [sp, #36]	; 0x24
    a4b4:	add	r8, r4, r8
    a4b8:	ldr	r4, [sp, #44]	; 0x2c
    a4bc:	add	r5, r5, #256	; 0x100
    a4c0:	sub	r6, r6, #1024	; 0x400
    a4c4:	cmp	r5, r0
    a4c8:	blt	a488 <ReadSingleData+0x19e8>
    a4cc:	mov	r1, sl
    a4d0:	ldr	sl, [sp, #20]
    a4d4:	cmp	r5, sl
    a4d8:	bge	a8c0 <ReadSingleData+0x1e20>
    a4dc:	mov	r0, r4
    a4e0:	sub	r4, sl, r5
    a4e4:	mov	sl, r1
    a4e8:	ldr	r3, [r0]
    a4ec:	add	r0, sp, #192	; 0xc0
    a4f0:	mov	r2, r4
    a4f4:	bl	18b8 <fread@plt>
    a4f8:	add	r8, r0, r8
    a4fc:	cmp	r4, #1
    a500:	blt	b4c8 <ReadSingleData+0x2a28>
    a504:	add	r0, r7, r5, lsl #2
    a508:	add	r1, sp, #192	; 0xc0
    a50c:	mov	r2, r6
    a510:	bl	181c <memcpy@plt>
    a514:	b	b4c8 <ReadSingleData+0x2a28>
    a518:	mov	r2, r7
    a51c:	add	r0, r7, #1024	; 0x400
    a520:	str	r5, [sp, #20]
    a524:	sub	r7, r5, #256	; 0x100
    a528:	mov	r4, #0
    a52c:	mov	r1, #256	; 0x100
    a530:	add	r6, sp, #192	; 0xc0
    a534:	mov	sl, #32
    a538:	mov	r8, #0
    a53c:	mov	r5, r2
    a540:	str	r2, [sp, #12]
    a544:	mov	r9, r0
    a548:	ldr	r0, [sp, #44]	; 0x2c
    a54c:	str	r1, [sp, #32]
    a550:	ldr	r1, [sp, #40]	; 0x28
    a554:	mov	r2, #256	; 0x100
    a558:	str	r4, [sp, #36]	; 0x24
    a55c:	ldr	r3, [r0]
    a560:	mov	r0, r6
    a564:	bl	18b8 <fread@plt>
    a568:	mov	r1, #0
    a56c:	mov	r2, r6
    a570:	add	r3, r2, #16
    a574:	vld1.64	{d16-d17}, [r2], sl
    a578:	add	r4, r5, r1
    a57c:	add	r1, r1, #16
    a580:	cmp	r1, #1024	; 0x400
    a584:	vcvt.f32.f64	s1, d17
    a588:	vcvt.f32.f64	s0, d16
    a58c:	vst1.32	{d0}, [r4]!
    a590:	vld1.64	{d16-d17}, [r3]
    a594:	vcvt.f32.f64	s1, d17
    a598:	vcvt.f32.f64	s0, d16
    a59c:	vstr	d0, [r4]
    a5a0:	bne	a570 <ReadSingleData+0x1ad0>
    a5a4:	ldr	r2, [sp, #36]	; 0x24
    a5a8:	ldr	r1, [sp, #32]
    a5ac:	add	r8, r0, r8
    a5b0:	add	r5, r5, #1024	; 0x400
    a5b4:	add	r0, r9, #1024	; 0x400
    a5b8:	add	r4, r2, #256	; 0x100
    a5bc:	add	r1, r1, #256	; 0x100
    a5c0:	cmp	r4, r7
    a5c4:	blt	a544 <ReadSingleData+0x1aa4>
    a5c8:	ldr	r5, [sp, #20]
    a5cc:	cmp	r4, r5
    a5d0:	bge	b4c4 <ReadSingleData+0x2a24>
    a5d4:	ldr	r0, [sp, #44]	; 0x2c
    a5d8:	ldr	sl, [sp, #40]	; 0x28
    a5dc:	sub	r7, r5, r4
    a5e0:	add	r6, sp, #192	; 0xc0
    a5e4:	mov	r2, r7
    a5e8:	ldr	r3, [r0]
    a5ec:	mov	r0, r6
    a5f0:	mov	r1, sl
    a5f4:	bl	18b8 <fread@plt>
    a5f8:	add	r8, r0, r8
    a5fc:	cmp	r7, #1
    a600:	blt	b4c8 <ReadSingleData+0x2a28>
    a604:	ldr	r3, [sp, #12]
    a608:	mov	lr, #0
    a60c:	beq	b510 <ReadSingleData+0x2a70>
    a610:	bic	lr, r7, #1
    a614:	mov	r1, #1
    a618:	str	r7, [sp, #44]	; 0x2c
    a61c:	subs	r2, lr, #2
    a620:	add	r2, r1, r2, lsr #1
    a624:	and	ip, r2, #1
    a628:	beq	b4d0 <ReadSingleData+0x2a30>
    a62c:	ldr	r0, [sp, #36]	; 0x24
    a630:	mov	r7, #32
    a634:	sub	r2, r5, r0
    a638:	mov	r5, #16
    a63c:	sub	r2, r2, #256	; 0x100
    a640:	bic	r2, r2, #1
    a644:	sub	r2, r2, #2
    a648:	add	r1, r1, r2, lsr #1
    a64c:	mvn	r3, r2, lsr #1
    a650:	mov	r2, #0
    a654:	and	r1, r1, #1
    a658:	add	r3, r3, r1
    a65c:	mov	r1, r9
    a660:	add	r0, r6, #16
    a664:	vld1.64	{d16-d17}, [r6], r7
    a668:	adds	r3, r3, #2
    a66c:	add	r2, r2, #4
    a670:	vcvt.f32.f64	s1, d17
    a674:	vcvt.f32.f64	s0, d16
    a678:	vst1.32	{d0}, [r1], r5
    a67c:	vld1.64	{d16-d17}, [r0]
    a680:	vcvt.f32.f64	s1, d17
    a684:	vcvt.f32.f64	s0, d16
    a688:	vstr	d0, [r9, #8]
    a68c:	mov	r9, r1
    a690:	bne	a660 <ReadSingleData+0x1bc0>
    a694:	b	b4d4 <ReadSingleData+0x2a34>
    a698:	sub	r1, r5, #256	; 0x100
    a69c:	add	r0, r7, #1024	; 0x400
    a6a0:	mov	r4, #0
    a6a4:	mov	r8, #32
    a6a8:	mov	r6, #0
    a6ac:	str	r9, [sp, #8]
    a6b0:	str	r5, [sp, #20]
    a6b4:	str	r7, [sp, #12]
    a6b8:	str	r1, [sp, #16]
    a6bc:	mov	r1, #256	; 0x100
    a6c0:	add	r2, sp, #24
    a6c4:	stm	r2, {r0, r1, r4}
    a6c8:	ldr	r0, [sp, #44]	; 0x2c
    a6cc:	add	r4, sp, #192	; 0xc0
    a6d0:	mov	r1, sl
    a6d4:	mov	r2, #256	; 0x100
    a6d8:	ldr	r3, [r0]
    a6dc:	mov	r0, r4
    a6e0:	bl	18b8 <fread@plt>
    a6e4:	mov	r5, #0
    a6e8:	mov	sl, r4
    a6ec:	str	r0, [sp, #36]	; 0x24
    a6f0:	vld1.64	{d8-d9}, [r4], r8
    a6f4:	vmov.32	r0, d9[0]
    a6f8:	vmov.32	r1, d9[1]
    a6fc:	bl	6b898 <__aeabi_l2f>
    a700:	vmov.32	r2, d8[0]
    a704:	vmov.32	r1, d8[1]
    a708:	vmov	s17, r0
    a70c:	mov	r0, r2
    a710:	bl	6b898 <__aeabi_l2f>
    a714:	vmov	s16, r0
    a718:	add	r9, r7, r5
    a71c:	add	r0, sl, #16
    a720:	vst1.32	{d8}, [r9]!
    a724:	vld1.64	{d8-d9}, [r0]
    a728:	vmov.32	r0, d9[0]
    a72c:	vmov.32	r1, d9[1]
    a730:	bl	6b898 <__aeabi_l2f>
    a734:	vmov.32	r2, d8[0]
    a738:	vmov.32	r1, d8[1]
    a73c:	vmov	s17, r0
    a740:	mov	r0, r2
    a744:	bl	6b898 <__aeabi_l2f>
    a748:	vmov	s16, r0
    a74c:	add	r5, r5, #16
    a750:	mov	sl, r4
    a754:	cmp	r5, #1024	; 0x400
    a758:	vstr	d8, [r9]
    a75c:	bne	a6f0 <ReadSingleData+0x1c50>
    a760:	ldr	r0, [sp, #36]	; 0x24
    a764:	ldr	r2, [sp, #32]
    a768:	ldr	r1, [sp, #28]
    a76c:	ldr	sl, [sp, #40]	; 0x28
    a770:	add	r7, r7, #1024	; 0x400
    a774:	add	r6, r0, r6
    a778:	ldr	r0, [sp, #24]
    a77c:	add	r4, r2, #256	; 0x100
    a780:	ldr	r2, [sp, #16]
    a784:	add	r1, r1, #256	; 0x100
    a788:	add	r0, r0, #1024	; 0x400
    a78c:	cmp	r4, r2
    a790:	blt	a6c0 <ReadSingleData+0x1c20>
    a794:	ldr	r5, [sp, #20]
    a798:	cmp	r4, r5
    a79c:	bge	a8c8 <ReadSingleData+0x1e28>
    a7a0:	ldr	r0, [sp, #44]	; 0x2c
    a7a4:	sub	r7, r5, r4
    a7a8:	add	r9, sp, #192	; 0xc0
    a7ac:	mov	r1, sl
    a7b0:	mov	r2, r7
    a7b4:	ldr	r3, [r0]
    a7b8:	mov	r0, r9
    a7bc:	bl	18b8 <fread@plt>
    a7c0:	str	r7, [sp, #16]
    a7c4:	cmp	r7, #1
    a7c8:	ldr	r7, [sp, #12]
    a7cc:	mov	r8, r6
    a7d0:	add	r8, r0, r6
    a7d4:	blt	b5b8 <ReadSingleData+0x2b18>
    a7d8:	mov	r2, #0
    a7dc:	beq	b5c0 <ReadSingleData+0x2b20>
    a7e0:	ldr	r0, [sp, #16]
    a7e4:	str	r8, [sp, #36]	; 0x24
    a7e8:	bic	r0, r0, #1
    a7ec:	str	r0, [sp, #4]
    a7f0:	subs	r1, r0, #2
    a7f4:	mov	r0, #1
    a7f8:	add	r1, r0, r1, lsr #1
    a7fc:	and	r1, r1, #1
    a800:	str	r1, [sp]
    a804:	beq	b550 <ReadSingleData+0x2ab0>
    a808:	ldr	r1, [sp, #32]
    a80c:	ldr	sl, [sp, #24]
    a810:	mov	r6, #0
    a814:	sub	r1, r5, r1
    a818:	mov	r5, r9
    a81c:	mov	r8, sl
    a820:	sub	r1, r1, #256	; 0x100
    a824:	bic	r1, r1, #1
    a828:	sub	r1, r1, #2
    a82c:	add	r0, r0, r1, lsr #1
    a830:	mvn	r2, r1, lsr #1
    a834:	and	r0, r0, #1
    a838:	add	r7, r2, r0
    a83c:	mov	r0, #32
    a840:	vld1.64	{d8-d9}, [r5], r0
    a844:	vmov.32	r0, d9[0]
    a848:	vmov.32	r1, d9[1]
    a84c:	bl	6b898 <__aeabi_l2f>
    a850:	vmov.32	r2, d8[0]
    a854:	vmov.32	r1, d8[1]
    a858:	vmov	s17, r0
    a85c:	mov	r0, r2
    a860:	bl	6b898 <__aeabi_l2f>
    a864:	vmov	s16, r0
    a868:	mov	r0, #16
    a86c:	vst1.32	{d8}, [r8], r0
    a870:	add	r0, r9, #16
    a874:	vld1.64	{d8-d9}, [r0]
    a878:	vmov.32	r0, d9[0]
    a87c:	vmov.32	r1, d9[1]
    a880:	bl	6b898 <__aeabi_l2f>
    a884:	vmov.32	r2, d8[0]
    a888:	vmov.32	r1, d8[1]
    a88c:	vmov	s17, r0
    a890:	mov	r0, r2
    a894:	bl	6b898 <__aeabi_l2f>
    a898:	vmov	s16, r0
    a89c:	adds	r7, r7, #2
    a8a0:	add	r6, r6, #4
    a8a4:	mov	r9, r5
    a8a8:	vstr	d8, [sl, #8]
    a8ac:	mov	sl, r8
    a8b0:	bne	a83c <ReadSingleData+0x1d9c>
    a8b4:	b	b554 <ReadSingleData+0x2ab4>
    a8b8:	ldr	r7, [sp, #12]
    a8bc:	b	adb8 <ReadSingleData+0x2318>
    a8c0:	mov	sl, r1
    a8c4:	b	b4c8 <ReadSingleData+0x2a28>
    a8c8:	ldr	r7, [sp, #12]
    a8cc:	mov	r8, r6
    a8d0:	b	adb8 <ReadSingleData+0x2318>
    a8d4:	ldr	r8, [sp, #36]	; 0x24
    a8d8:	cmp	r9, #13
    a8dc:	beq	adc8 <ReadSingleData+0x2328>
    a8e0:	b	b4c8 <ReadSingleData+0x2a28>
    a8e4:	mov	r9, r7
    a8e8:	mov	r1, #0
    a8ec:	ldr	r8, [sp, #36]	; 0x24
    a8f0:	cmp	ip, #0
    a8f4:	mov	r7, r9
    a8f8:	beq	a920 <ReadSingleData+0x1e80>
    a8fc:	ldr	r0, [r4, r1]
    a900:	str	r0, [sp, #128]	; 0x80
    a904:	add	r0, sp, #128	; 0x80
    a908:	vld1.32	{d16[0]}, [r0 :32]
    a90c:	add	r0, r7, r1, lsl #2
    a910:	vmovl.s8	q8, d16
    a914:	vmovl.s16	q8, d16
    a918:	vcvt.f32.s32	q8, q8
    a91c:	vst1.32	{d16-d17}, [r0]
    a920:	ldr	r5, [sp, #20]
    a924:	cmp	lr, r5
    a928:	beq	b4c8 <ReadSingleData+0x2a28>
    a92c:	add	r2, r7, lr, lsl #2
    a930:	add	r1, r4, lr
    a934:	sub	r0, r5, lr
    a938:	ldrsb	r3, [r1], #1
    a93c:	subs	r0, r0, #1
    a940:	vmov	s0, r3
    a944:	vcvt.f32.s32	s0, s0
    a948:	vstmia	r2!, {s0}
    a94c:	bne	a938 <ReadSingleData+0x1e98>
    a950:	b	b4c8 <ReadSingleData+0x2a28>
    a954:	mov	r9, r7
    a958:	mov	r1, #0
    a95c:	ldr	r8, [sp, #36]	; 0x24
    a960:	cmp	ip, #0
    a964:	mov	r7, r9
    a968:	beq	a990 <ReadSingleData+0x1ef0>
    a96c:	ldr	r0, [r4, r1]
    a970:	str	r0, [sp, #160]	; 0xa0
    a974:	add	r0, sp, #160	; 0xa0
    a978:	vld1.32	{d16[0]}, [r0 :32]
    a97c:	add	r0, r7, r1, lsl #2
    a980:	vmovl.u8	q8, d16
    a984:	vmovl.u16	q8, d16
    a988:	vcvt.f32.u32	q8, q8
    a98c:	vst1.32	{d16-d17}, [r0]
    a990:	ldr	r5, [sp, #20]
    a994:	cmp	lr, r5
    a998:	beq	b4c8 <ReadSingleData+0x2a28>
    a99c:	add	r2, r7, lr, lsl #2
    a9a0:	add	r1, r4, lr
    a9a4:	sub	r0, r5, lr
    a9a8:	ldrb	r3, [r1], #1
    a9ac:	subs	r0, r0, #1
    a9b0:	vmov	s0, r3
    a9b4:	vcvt.f32.u32	s0, s0
    a9b8:	vstmia	r2!, {s0}
    a9bc:	bne	a9a8 <ReadSingleData+0x1f08>
    a9c0:	b	b4c8 <ReadSingleData+0x2a28>
    a9c4:	ldr	r7, [sp, #12]
    a9c8:	mov	r8, r5
    a9cc:	mov	r5, r9
    a9d0:	b	adb8 <ReadSingleData+0x2318>
    a9d4:	mov	r2, #0
    a9d8:	ldr	r3, [sp, #12]
    a9dc:	cmp	ip, #0
    a9e0:	beq	aa0c <ReadSingleData+0x1f6c>
    a9e4:	ldr	r0, [r6, r2]
    a9e8:	str	r0, [sp, #140]	; 0x8c
    a9ec:	add	r0, sp, #140	; 0x8c
    a9f0:	vld1.32	{d16[0]}, [r0 :32]
    a9f4:	add	r0, r2, r5
    a9f8:	add	r0, r3, r0, lsl #2
    a9fc:	vmovl.s8	q8, d16
    aa00:	vmovl.s16	q8, d16
    aa04:	vcvt.f32.s32	q8, q8
    aa08:	vst1.32	{d16-d17}, [r0]
    aa0c:	ldr	r0, [sp, #44]	; 0x2c
    aa10:	cmp	r0, lr
    aa14:	beq	b4c4 <ReadSingleData+0x2a24>
    aa18:	ldr	r0, [sp, #32]
    aa1c:	add	r1, r6, lr
    aa20:	add	r0, lr, r0
    aa24:	add	r2, r3, r0, lsl #2
    aa28:	ldr	r0, [sp, #20]
    aa2c:	ldr	r3, [sp, #36]	; 0x24
    aa30:	sub	r0, r0, r3
    aa34:	sub	r0, r0, lr
    aa38:	sub	r0, r0, #256	; 0x100
    aa3c:	ldrsb	r3, [r1], #1
    aa40:	subs	r0, r0, #1
    aa44:	vmov	s0, r3
    aa48:	vcvt.f32.s32	s0, s0
    aa4c:	vstmia	r2!, {s0}
    aa50:	bne	aa3c <ReadSingleData+0x1f9c>
    aa54:	b	b4c4 <ReadSingleData+0x2a24>
    aa58:	mov	r2, #0
    aa5c:	ldr	r0, [sp, #24]
    aa60:	ldr	r3, [sp, #12]
    aa64:	mov	r8, r9
    aa68:	cmp	r0, #0
    aa6c:	beq	aa98 <ReadSingleData+0x1ff8>
    aa70:	ldr	r0, [r6, r2]
    aa74:	str	r0, [sp, #172]	; 0xac
    aa78:	add	r0, sp, #172	; 0xac
    aa7c:	vld1.32	{d16[0]}, [r0 :32]
    aa80:	add	r0, r2, r4
    aa84:	add	r0, r3, r0, lsl #2
    aa88:	vmovl.u8	q8, d16
    aa8c:	vmovl.u16	q8, d16
    aa90:	vcvt.f32.u32	q8, q8
    aa94:	vst1.32	{d16-d17}, [r0]
    aa98:	ldr	r0, [sp, #44]	; 0x2c
    aa9c:	ldr	r5, [sp, #20]
    aaa0:	cmp	r0, lr
    aaa4:	beq	b4c8 <ReadSingleData+0x2a28>
    aaa8:	ldr	r0, [sp, #32]
    aaac:	add	r1, r6, lr
    aab0:	add	r0, lr, r0
    aab4:	add	r2, r3, r0, lsl #2
    aab8:	ldr	r0, [sp, #36]	; 0x24
    aabc:	sub	r0, r5, r0
    aac0:	sub	r0, r0, lr
    aac4:	sub	r0, r0, #256	; 0x100
    aac8:	ldrb	r3, [r1], #1
    aacc:	subs	r0, r0, #1
    aad0:	vmov	s0, r3
    aad4:	vcvt.f32.u32	s0, s0
    aad8:	vstmia	r2!, {s0}
    aadc:	bne	aac8 <ReadSingleData+0x2028>
    aae0:	b	b4c8 <ReadSingleData+0x2a28>
    aae4:	mov	r1, #0
    aae8:	ldr	r8, [sp, #36]	; 0x24
    aaec:	cmp	ip, #0
    aaf0:	beq	ab24 <ReadSingleData+0x2084>
    aaf4:	add	r0, sp, #192	; 0xc0
    aaf8:	ldr	r2, [r0, r1, lsl #1]
    aafc:	add	r0, r0, r1, lsl #1
    ab00:	str	r2, [sp, #48]	; 0x30
    ab04:	ldr	r0, [r0, #4]
    ab08:	str	r0, [sp, #52]	; 0x34
    ab0c:	add	r0, sp, #48	; 0x30
    ab10:	vld1.16	{d16}, [r0 :64]
    ab14:	add	r0, sl, r1, lsl #2
    ab18:	vmovl.s16	q8, d16
    ab1c:	vcvt.f32.s32	q8, q8
    ab20:	vst1.32	{d16-d17}, [r0]
    ab24:	ldr	r5, [sp, #20]
    ab28:	cmp	lr, r5
    ab2c:	beq	b4c4 <ReadSingleData+0x2a24>
    ab30:	add	r0, sp, #192	; 0xc0
    ab34:	add	r1, sl, lr, lsl #2
    ab38:	sub	r2, r5, lr
    ab3c:	add	r0, r0, lr, lsl #1
    ab40:	ldrsh	r3, [r0], #2
    ab44:	subs	r2, r2, #1
    ab48:	vmov	s0, r3
    ab4c:	vcvt.f32.s32	s0, s0
    ab50:	vstmia	r1!, {s0}
    ab54:	bne	ab40 <ReadSingleData+0x20a0>
    ab58:	b	b4c4 <ReadSingleData+0x2a24>
    ab5c:	mov	r1, #0
    ab60:	ldr	r8, [sp, #36]	; 0x24
    ab64:	cmp	ip, #0
    ab68:	beq	ab9c <ReadSingleData+0x20fc>
    ab6c:	add	r0, sp, #192	; 0xc0
    ab70:	ldr	r2, [r0, r1, lsl #1]
    ab74:	add	r0, r0, r1, lsl #1
    ab78:	str	r2, [sp, #88]	; 0x58
    ab7c:	ldr	r0, [r0, #4]
    ab80:	str	r0, [sp, #92]	; 0x5c
    ab84:	add	r0, sp, #88	; 0x58
    ab88:	vld1.16	{d16}, [r0 :64]
    ab8c:	add	r0, sl, r1, lsl #2
    ab90:	vmovl.u16	q8, d16
    ab94:	vcvt.f32.u32	q8, q8
    ab98:	vst1.32	{d16-d17}, [r0]
    ab9c:	ldr	r5, [sp, #20]
    aba0:	cmp	lr, r5
    aba4:	beq	b4c4 <ReadSingleData+0x2a24>
    aba8:	add	r0, sp, #192	; 0xc0
    abac:	add	r1, sl, lr, lsl #2
    abb0:	sub	r2, r5, lr
    abb4:	add	r0, r0, lr, lsl #1
    abb8:	ldrh	r3, [r0], #2
    abbc:	subs	r2, r2, #1
    abc0:	vmov	s0, r3
    abc4:	vcvt.f32.u32	s0, s0
    abc8:	vstmia	r1!, {s0}
    abcc:	bne	abb8 <ReadSingleData+0x2118>
    abd0:	b	b4c4 <ReadSingleData+0x2a24>
    abd4:	mov	r1, #0
    abd8:	cmp	ip, #0
    abdc:	mov	r7, r9
    abe0:	beq	abfc <ReadSingleData+0x215c>
    abe4:	add	r2, sp, #192	; 0xc0
    abe8:	add	r2, r2, r1, lsl #2
    abec:	add	r1, r7, r1, lsl #2
    abf0:	vld1.32	{d16-d17}, [r2]
    abf4:	vcvt.f32.s32	q8, q8
    abf8:	vst1.32	{d16-d17}, [r1]
    abfc:	mov	r5, lr
    ac00:	cmp	r0, lr
    ac04:	beq	b4c8 <ReadSingleData+0x2a28>
    ac08:	add	r1, sp, #192	; 0xc0
    ac0c:	add	r2, r7, r0, lsl #2
    ac10:	add	r1, r1, r0, lsl #2
    ac14:	sub	r0, r5, r0
    ac18:	ldr	r3, [r1], #4
    ac1c:	subs	r0, r0, #1
    ac20:	vmov	s0, r3
    ac24:	vcvt.f32.s32	s0, s0
    ac28:	vstmia	r2!, {s0}
    ac2c:	bne	ac18 <ReadSingleData+0x2178>
    ac30:	b	b4c8 <ReadSingleData+0x2a28>
    ac34:	mov	r1, #0
    ac38:	cmp	ip, #0
    ac3c:	mov	r7, r9
    ac40:	beq	ac5c <ReadSingleData+0x21bc>
    ac44:	add	r2, sp, #192	; 0xc0
    ac48:	add	r2, r2, r1, lsl #2
    ac4c:	add	r1, r7, r1, lsl #2
    ac50:	vld1.32	{d16-d17}, [r2]
    ac54:	vcvt.f32.u32	q8, q8
    ac58:	vst1.32	{d16-d17}, [r1]
    ac5c:	mov	r5, lr
    ac60:	cmp	r0, lr
    ac64:	beq	b4c8 <ReadSingleData+0x2a28>
    ac68:	add	r1, sp, #192	; 0xc0
    ac6c:	add	r2, r7, r0, lsl #2
    ac70:	add	r1, r1, r0, lsl #2
    ac74:	sub	r0, r5, r0
    ac78:	ldr	r3, [r1], #4
    ac7c:	subs	r0, r0, #1
    ac80:	vmov	s0, r3
    ac84:	vcvt.f32.u32	s0, s0
    ac88:	vstmia	r2!, {s0}
    ac8c:	bne	ac78 <ReadSingleData+0x21d8>
    ac90:	b	b4c8 <ReadSingleData+0x2a28>
    ac94:	mov	r1, #0
    ac98:	cmp	ip, #0
    ac9c:	mov	r7, sl
    aca0:	beq	acc0 <ReadSingleData+0x2220>
    aca4:	add	r0, sp, #192	; 0xc0
    aca8:	add	r0, r0, r1, lsl #3
    acac:	vld1.64	{d16-d17}, [r0]
    acb0:	add	r0, r7, r1, lsl #2
    acb4:	vcvt.f32.f64	s1, d17
    acb8:	vcvt.f32.f64	s0, d16
    acbc:	vstr	d0, [r0]
    acc0:	ldr	sl, [sp, #40]	; 0x28
    acc4:	mov	r5, r9
    acc8:	cmp	lr, r9
    accc:	beq	b4c8 <ReadSingleData+0x2a28>
    acd0:	add	r0, sp, #192	; 0xc0
    acd4:	add	r2, r7, lr, lsl #2
    acd8:	add	r1, r0, lr, lsl #3
    acdc:	sub	r0, r5, lr
    ace0:	vldr	d16, [r1]
    ace4:	add	r1, r1, #8
    ace8:	subs	r0, r0, #1
    acec:	vcvt.f32.f64	s0, d16
    acf0:	vstr	s0, [r2]
    acf4:	add	r2, r2, #4
    acf8:	bne	ace0 <ReadSingleData+0x2240>
    acfc:	b	b4c8 <ReadSingleData+0x2a28>
    ad00:	mov	r4, #0
    ad04:	ldr	r0, [sp, #28]
    ad08:	ldr	sl, [sp, #40]	; 0x28
    ad0c:	ldr	r7, [sp, #12]
    ad10:	ldr	r9, [sp, #8]
    ad14:	cmp	r0, #0
    ad18:	beq	ad54 <ReadSingleData+0x22b4>
    ad1c:	add	r0, sp, #192	; 0xc0
    ad20:	add	r0, r0, r4, lsl #3
    ad24:	vld1.64	{d8-d9}, [r0]
    ad28:	vmov.32	r0, d9[0]
    ad2c:	vmov.32	r1, d9[1]
    ad30:	bl	6b898 <__aeabi_l2f>
    ad34:	vmov.32	r2, d8[0]
    ad38:	vmov.32	r1, d8[1]
    ad3c:	vmov	s17, r0
    ad40:	mov	r0, r2
    ad44:	bl	6b898 <__aeabi_l2f>
    ad48:	vmov	s16, r0
    ad4c:	add	r0, r7, r4, lsl #2
    ad50:	vstr	d8, [r0]
    ad54:	ldr	r5, [sp, #20]
    ad58:	ldr	r1, [sp, #32]
    ad5c:	cmp	r1, r5
    ad60:	bne	ad78 <ReadSingleData+0x22d8>
    ad64:	ldr	r8, [sp, #36]	; 0x24
    ad68:	ldr	r4, [sp, #44]	; 0x2c
    ad6c:	cmp	r9, #13
    ad70:	beq	adc8 <ReadSingleData+0x2328>
    ad74:	b	b4c8 <ReadSingleData+0x2a28>
    ad78:	add	r0, sp, #192	; 0xc0
    ad7c:	mov	r9, r7
    ad80:	add	r4, r0, r1, lsl #3
    ad84:	mov	r0, r5
    ad88:	add	r5, r7, r1, lsl #2
    ad8c:	mov	r7, r0
    ad90:	sub	r6, r0, r1
    ad94:	ldrd	r0, [r4]
    ad98:	bl	6b898 <__aeabi_l2f>
    ad9c:	str	r0, [r5], #4
    ada0:	add	r4, r4, #8
    ada4:	subs	r6, r6, #1
    ada8:	bne	ad94 <ReadSingleData+0x22f4>
    adac:	ldr	r8, [sp, #36]	; 0x24
    adb0:	mov	r5, r7
    adb4:	mov	r7, r9
    adb8:	ldr	r4, [sp, #44]	; 0x2c
    adbc:	ldr	r9, [sp, #8]
    adc0:	cmp	r9, #13
    adc4:	bne	b4c8 <ReadSingleData+0x2a28>
    adc8:	ldr	r0, [r4, #20]
    adcc:	cmp	r0, #0
    add0:	beq	ae20 <ReadSingleData+0x2380>
    add4:	cmp	r5, #256	; 0x100
    add8:	bgt	af18 <ReadSingleData+0x2478>
    addc:	ldr	r3, [r4]
    ade0:	add	r4, sp, #192	; 0xc0
    ade4:	mov	r1, sl
    ade8:	mov	r2, r5
    adec:	mov	r0, r4
    adf0:	bl	18b8 <fread@plt>
    adf4:	add	r8, r0, r8
    adf8:	cmp	r5, #1
    adfc:	blt	b4c8 <ReadSingleData+0x2a28>
    ae00:	mov	r0, r4
    ae04:	bl	1bd4 <Mat_uint64Swap>
    ae08:	bl	6b888 <__aeabi_ul2f>
    ae0c:	str	r0, [r7], #4
    ae10:	add	r4, r4, #8
    ae14:	subs	r5, r5, #1
    ae18:	bne	ae00 <ReadSingleData+0x2360>
    ae1c:	b	b4c8 <ReadSingleData+0x2a28>
    ae20:	cmp	r5, #256	; 0x100
    ae24:	str	r8, [sp, #36]	; 0x24
    ae28:	bgt	aff8 <ReadSingleData+0x2558>
    ae2c:	ldr	r3, [r4]
    ae30:	add	r8, sp, #192	; 0xc0
    ae34:	mov	r1, sl
    ae38:	mov	r2, r5
    ae3c:	mov	r0, r8
    ae40:	bl	18b8 <fread@plt>
    ae44:	ldr	r1, [sp, #36]	; 0x24
    ae48:	cmp	r5, #1
    ae4c:	add	r1, r0, r1
    ae50:	str	r1, [sp, #36]	; 0x24
    ae54:	blt	b298 <ReadSingleData+0x27f8>
    ae58:	mov	r1, #0
    ae5c:	beq	b26c <ReadSingleData+0x27cc>
    ae60:	bic	r0, r5, #1
    ae64:	mov	r1, #1
    ae68:	str	r7, [sp, #12]
    ae6c:	str	r5, [sp, #20]
    ae70:	str	r0, [sp, #44]	; 0x2c
    ae74:	subs	r0, r0, #2
    ae78:	add	r0, r1, r0, lsr #1
    ae7c:	and	r1, r0, #1
    ae80:	str	r1, [sp, #32]
    ae84:	beq	b20c <ReadSingleData+0x276c>
    ae88:	ldr	sl, [sp, #12]
    ae8c:	sub	r7, r0, r1
    ae90:	mov	r6, #0
    ae94:	mov	r9, #16
    ae98:	mov	r4, r8
    ae9c:	mov	r5, sl
    aea0:	mov	r0, #32
    aea4:	vld1.64	{d8-d9}, [r4], r0
    aea8:	vmov.32	r0, d9[0]
    aeac:	vmov.32	r1, d9[1]
    aeb0:	bl	6b888 <__aeabi_ul2f>
    aeb4:	vmov.32	r2, d8[0]
    aeb8:	vmov.32	r1, d8[1]
    aebc:	vmov	s17, r0
    aec0:	mov	r0, r2
    aec4:	bl	6b888 <__aeabi_ul2f>
    aec8:	vmov	s16, r0
    aecc:	add	r0, r8, #16
    aed0:	vst1.32	{d8}, [r5], r9
    aed4:	vld1.64	{d8-d9}, [r0]
    aed8:	vmov.32	r0, d9[0]
    aedc:	vmov.32	r1, d9[1]
    aee0:	bl	6b888 <__aeabi_ul2f>
    aee4:	vmov.32	r2, d8[0]
    aee8:	vmov.32	r1, d8[1]
    aeec:	vmov	s17, r0
    aef0:	mov	r0, r2
    aef4:	bl	6b888 <__aeabi_ul2f>
    aef8:	vmov	s16, r0
    aefc:	subs	r7, r7, #2
    af00:	add	r6, r6, #4
    af04:	mov	r8, r4
    af08:	vstr	d8, [sl, #8]
    af0c:	mov	sl, r5
    af10:	bne	aea0 <ReadSingleData+0x2400>
    af14:	b	b210 <ReadSingleData+0x2770>
    af18:	sub	r0, r5, #256	; 0x100
    af1c:	mov	sl, r7
    af20:	add	r1, r7, #1024	; 0x400
    af24:	str	r5, [sp, #20]
    af28:	str	r0, [sp, #36]	; 0x24
    af2c:	mov	r0, #0
    af30:	mov	r7, r1
    af34:	ldr	r3, [r4]
    af38:	ldr	r1, [sp, #40]	; 0x28
    af3c:	add	r4, sp, #192	; 0xc0
    af40:	mov	r9, r0
    af44:	mov	r2, #256	; 0x100
    af48:	mov	r0, r4
    af4c:	bl	18b8 <fread@plt>
    af50:	mov	r6, r0
    af54:	mov	r5, #0
    af58:	mov	r0, r4
    af5c:	bl	1bd4 <Mat_uint64Swap>
    af60:	bl	6b888 <__aeabi_ul2f>
    af64:	str	r0, [sl, r5]
    af68:	add	r5, r5, #4
    af6c:	add	r4, r4, #8
    af70:	cmp	r5, #1024	; 0x400
    af74:	bne	af58 <ReadSingleData+0x24b8>
    af78:	ldr	r2, [sp, #36]	; 0x24
    af7c:	ldr	r4, [sp, #44]	; 0x2c
    af80:	add	r0, r9, #256	; 0x100
    af84:	add	r8, r6, r8
    af88:	add	sl, sl, #1024	; 0x400
    af8c:	add	r1, r7, #1024	; 0x400
    af90:	cmp	r0, r2
    af94:	blt	af30 <ReadSingleData+0x2490>
    af98:	ldr	r5, [sp, #20]
    af9c:	cmp	r0, r5
    afa0:	bge	b4c4 <ReadSingleData+0x2a24>
    afa4:	ldr	sl, [sp, #40]	; 0x28
    afa8:	ldr	r3, [r4]
    afac:	sub	r6, r5, r0
    afb0:	add	r4, sp, #192	; 0xc0
    afb4:	mov	r0, r4
    afb8:	mov	r2, r6
    afbc:	mov	r1, sl
    afc0:	bl	18b8 <fread@plt>
    afc4:	add	r8, r0, r8
    afc8:	cmp	r6, #1
    afcc:	blt	b4c8 <ReadSingleData+0x2a28>
    afd0:	sub	r0, r5, r9
    afd4:	sub	r5, r0, #256	; 0x100
    afd8:	mov	r0, r4
    afdc:	bl	1bd4 <Mat_uint64Swap>
    afe0:	bl	6b888 <__aeabi_ul2f>
    afe4:	str	r0, [r7], #4
    afe8:	add	r4, r4, #8
    afec:	subs	r5, r5, #1
    aff0:	bne	afd8 <ReadSingleData+0x2538>
    aff4:	b	b4c8 <ReadSingleData+0x2a28>
    aff8:	sub	r1, r5, #256	; 0x100
    affc:	add	r0, r7, #1024	; 0x400
    b000:	mov	r9, #0
    b004:	mov	r8, #32
    b008:	str	r5, [sp, #20]
    b00c:	str	r7, [sp, #12]
    b010:	str	r1, [sp, #16]
    b014:	mov	r1, #256	; 0x100
    b018:	add	r2, sp, #24
    b01c:	stm	r2, {r0, r1, r9}
    b020:	add	r9, sp, #192	; 0xc0
    b024:	mov	r1, sl
    b028:	mov	r2, #256	; 0x100
    b02c:	ldr	r3, [r4]
    b030:	mov	r0, r9
    b034:	bl	18b8 <fread@plt>
    b038:	mov	r6, r0
    b03c:	mov	r5, #0
    b040:	mov	r4, r9
    b044:	vld1.64	{d8-d9}, [r4], r8
    b048:	vmov.32	r0, d9[0]
    b04c:	vmov.32	r1, d9[1]
    b050:	bl	6b888 <__aeabi_ul2f>
    b054:	vmov.32	r2, d8[0]
    b058:	vmov.32	r1, d8[1]
    b05c:	vmov	s17, r0
    b060:	mov	r0, r2
    b064:	bl	6b888 <__aeabi_ul2f>
    b068:	vmov	s16, r0
    b06c:	add	sl, r7, r5
    b070:	add	r0, r9, #16
    b074:	vst1.32	{d8}, [sl]!
    b078:	vld1.64	{d8-d9}, [r0]
    b07c:	vmov.32	r0, d9[0]
    b080:	vmov.32	r1, d9[1]
    b084:	bl	6b888 <__aeabi_ul2f>
    b088:	vmov.32	r2, d8[0]
    b08c:	vmov.32	r1, d8[1]
    b090:	vmov	s17, r0
    b094:	mov	r0, r2
    b098:	bl	6b888 <__aeabi_ul2f>
    b09c:	vmov	s16, r0
    b0a0:	add	r5, r5, #16
    b0a4:	mov	r9, r4
    b0a8:	cmp	r5, #1024	; 0x400
    b0ac:	vstr	d8, [sl]
    b0b0:	bne	b044 <ReadSingleData+0x25a4>
    b0b4:	ldr	r0, [sp, #36]	; 0x24
    b0b8:	ldr	r5, [sp, #32]
    b0bc:	ldr	r2, [sp, #16]
    b0c0:	ldr	sl, [sp, #40]	; 0x28
    b0c4:	ldr	r4, [sp, #44]	; 0x2c
    b0c8:	add	r7, r7, #1024	; 0x400
    b0cc:	add	r0, r6, r0
    b0d0:	ldr	r6, [sp, #28]
    b0d4:	add	r9, r5, #256	; 0x100
    b0d8:	str	r0, [sp, #36]	; 0x24
    b0dc:	ldr	r0, [sp, #24]
    b0e0:	cmp	r9, r2
    b0e4:	add	r1, r6, #256	; 0x100
    b0e8:	add	r0, r0, #1024	; 0x400
    b0ec:	blt	b018 <ReadSingleData+0x2578>
    b0f0:	ldr	r0, [sp, #20]
    b0f4:	cmp	r9, r0
    b0f8:	bge	b298 <ReadSingleData+0x27f8>
    b0fc:	ldr	r3, [r4]
    b100:	sub	r7, r0, r9
    b104:	add	r4, sp, #192	; 0xc0
    b108:	mov	r1, sl
    b10c:	mov	r0, r4
    b110:	mov	r2, r7
    b114:	bl	18b8 <fread@plt>
    b118:	ldr	r8, [sp, #36]	; 0x24
    b11c:	cmp	r7, #1
    b120:	str	r7, [sp, #44]	; 0x2c
    b124:	add	r8, r0, r8
    b128:	blt	b4c8 <ReadSingleData+0x2a28>
    b12c:	ldr	r2, [sp, #20]
    b130:	mov	r3, #0
    b134:	beq	b680 <ReadSingleData+0x2be0>
    b138:	ldr	r0, [sp, #44]	; 0x2c
    b13c:	str	r8, [sp, #36]	; 0x24
    b140:	bic	r0, r0, #1
    b144:	str	r0, [sp, #16]
    b148:	subs	r1, r0, #2
    b14c:	mov	r0, #1
    b150:	add	r1, r0, r1, lsr #1
    b154:	and	r1, r1, #1
    b158:	str	r1, [sp, #8]
    b15c:	beq	b60c <ReadSingleData+0x2b6c>
    b160:	sub	r1, r2, r5
    b164:	ldr	sl, [sp, #24]
    b168:	mov	r7, #0
    b16c:	mov	r5, r4
    b170:	sub	r1, r1, #256	; 0x100
    b174:	bic	r1, r1, #1
    b178:	sub	r1, r1, #2
    b17c:	add	r0, r0, r1, lsr #1
    b180:	mvn	r2, r1, lsr #1
    b184:	mov	r6, sl
    b188:	and	r0, r0, #1
    b18c:	add	r8, r2, r0
    b190:	mov	r0, #32
    b194:	vld1.64	{d8-d9}, [r5], r0
    b198:	vmov.32	r0, d9[0]
    b19c:	vmov.32	r1, d9[1]
    b1a0:	bl	6b888 <__aeabi_ul2f>
    b1a4:	vmov.32	r2, d8[0]
    b1a8:	vmov.32	r1, d8[1]
    b1ac:	vmov	s17, r0
    b1b0:	mov	r0, r2
    b1b4:	bl	6b888 <__aeabi_ul2f>
    b1b8:	vmov	s16, r0
    b1bc:	mov	r0, #16
    b1c0:	vst1.32	{d8}, [r6], r0
    b1c4:	add	r0, r4, #16
    b1c8:	vld1.64	{d8-d9}, [r0]
    b1cc:	vmov.32	r0, d9[0]
    b1d0:	vmov.32	r1, d9[1]
    b1d4:	bl	6b888 <__aeabi_ul2f>
    b1d8:	vmov.32	r2, d8[0]
    b1dc:	vmov.32	r1, d8[1]
    b1e0:	vmov	s17, r0
    b1e4:	mov	r0, r2
    b1e8:	bl	6b888 <__aeabi_ul2f>
    b1ec:	vmov	s16, r0
    b1f0:	adds	r8, r8, #2
    b1f4:	add	r7, r7, #4
    b1f8:	mov	r4, r5
    b1fc:	vstr	d8, [sl, #8]
    b200:	mov	sl, r6
    b204:	bne	b190 <ReadSingleData+0x26f0>
    b208:	b	b610 <ReadSingleData+0x2b70>
    b20c:	mov	r6, #0
    b210:	ldr	r0, [sp, #32]
    b214:	ldr	sl, [sp, #40]	; 0x28
    b218:	ldr	r7, [sp, #12]
    b21c:	cmp	r0, #0
    b220:	beq	b25c <ReadSingleData+0x27bc>
    b224:	add	r0, sp, #192	; 0xc0
    b228:	add	r0, r0, r6, lsl #3
    b22c:	vld1.64	{d8-d9}, [r0]
    b230:	vmov.32	r0, d9[0]
    b234:	vmov.32	r1, d9[1]
    b238:	bl	6b888 <__aeabi_ul2f>
    b23c:	vmov.32	r2, d8[0]
    b240:	vmov.32	r1, d8[1]
    b244:	vmov	s17, r0
    b248:	mov	r0, r2
    b24c:	bl	6b888 <__aeabi_ul2f>
    b250:	vmov	s16, r0
    b254:	add	r0, r7, r6, lsl #2
    b258:	vstr	d8, [r0]
    b25c:	ldr	r5, [sp, #20]
    b260:	ldr	r1, [sp, #44]	; 0x2c
    b264:	cmp	r1, r5
    b268:	beq	b298 <ReadSingleData+0x27f8>
    b26c:	add	r0, sp, #192	; 0xc0
    b270:	add	r4, r0, r1, lsl #3
    b274:	mov	r0, r5
    b278:	add	r5, r7, r1, lsl #2
    b27c:	sub	r6, r0, r1
    b280:	ldrd	r0, [r4]
    b284:	bl	6b888 <__aeabi_ul2f>
    b288:	str	r0, [r5], #4
    b28c:	add	r4, r4, #8
    b290:	subs	r6, r6, #1
    b294:	bne	b280 <ReadSingleData+0x27e0>
    b298:	ldr	r8, [sp, #36]	; 0x24
    b29c:	b	b4c8 <ReadSingleData+0x2a28>
    b2a0:	mov	r2, #0
    b2a4:	ldr	r0, [sp, #24]
    b2a8:	mov	r8, r9
    b2ac:	cmp	r0, #0
    b2b0:	beq	b2ec <ReadSingleData+0x284c>
    b2b4:	add	r0, sp, #192	; 0xc0
    b2b8:	ldr	r1, [r0, r2, lsl #1]
    b2bc:	add	r0, r0, r2, lsl #1
    b2c0:	str	r1, [sp, #64]	; 0x40
    b2c4:	ldr	r0, [r0, #4]
    b2c8:	str	r0, [sp, #68]	; 0x44
    b2cc:	add	r0, sp, #64	; 0x40
    b2d0:	vld1.16	{d16}, [r0 :64]
    b2d4:	ldr	r1, [sp, #12]
    b2d8:	add	r0, r2, r5
    b2dc:	add	r0, r1, r0, lsl #2
    b2e0:	vmovl.s16	q8, d16
    b2e4:	vcvt.f32.s32	q8, q8
    b2e8:	vst1.32	{d16-d17}, [r0]
    b2ec:	ldr	r0, [sp, #44]	; 0x2c
    b2f0:	cmp	r0, lr
    b2f4:	beq	b4c4 <ReadSingleData+0x2a24>
    b2f8:	add	r0, sp, #192	; 0xc0
    b2fc:	ldr	r2, [sp, #12]
    b300:	ldr	r3, [sp, #36]	; 0x24
    b304:	add	r1, r0, lr, lsl #1
    b308:	ldr	r0, [sp, #32]
    b30c:	add	r0, lr, r0
    b310:	add	r2, r2, r0, lsl #2
    b314:	ldr	r0, [sp, #20]
    b318:	sub	r0, r0, r3
    b31c:	sub	r0, r0, lr
    b320:	sub	r0, r0, #256	; 0x100
    b324:	ldrsh	r3, [r1], #2
    b328:	subs	r0, r0, #1
    b32c:	vmov	s0, r3
    b330:	vcvt.f32.s32	s0, s0
    b334:	vstmia	r2!, {s0}
    b338:	bne	b324 <ReadSingleData+0x2884>
    b33c:	b	b4c4 <ReadSingleData+0x2a24>
    b340:	mov	r2, #0
    b344:	ldr	r0, [sp, #24]
    b348:	mov	r8, r9
    b34c:	cmp	r0, #0
    b350:	beq	b38c <ReadSingleData+0x28ec>
    b354:	add	r0, sp, #192	; 0xc0
    b358:	ldr	r1, [r0, r2, lsl #1]
    b35c:	add	r0, r0, r2, lsl #1
    b360:	str	r1, [sp, #104]	; 0x68
    b364:	ldr	r0, [r0, #4]
    b368:	str	r0, [sp, #108]	; 0x6c
    b36c:	add	r0, sp, #104	; 0x68
    b370:	vld1.16	{d16}, [r0 :64]
    b374:	ldr	r1, [sp, #12]
    b378:	add	r0, r2, r5
    b37c:	add	r0, r1, r0, lsl #2
    b380:	vmovl.u16	q8, d16
    b384:	vcvt.f32.u32	q8, q8
    b388:	vst1.32	{d16-d17}, [r0]
    b38c:	ldr	r0, [sp, #44]	; 0x2c
    b390:	cmp	r0, lr
    b394:	beq	b4c4 <ReadSingleData+0x2a24>
    b398:	add	r0, sp, #192	; 0xc0
    b39c:	ldr	r2, [sp, #12]
    b3a0:	ldr	r3, [sp, #36]	; 0x24
    b3a4:	add	r1, r0, lr, lsl #1
    b3a8:	ldr	r0, [sp, #32]
    b3ac:	add	r0, lr, r0
    b3b0:	add	r2, r2, r0, lsl #2
    b3b4:	ldr	r0, [sp, #20]
    b3b8:	sub	r0, r0, r3
    b3bc:	sub	r0, r0, lr
    b3c0:	sub	r0, r0, #256	; 0x100
    b3c4:	ldrh	r3, [r1], #2
    b3c8:	subs	r0, r0, #1
    b3cc:	vmov	s0, r3
    b3d0:	vcvt.f32.u32	s0, s0
    b3d4:	vstmia	r2!, {s0}
    b3d8:	bne	b3c4 <ReadSingleData+0x2924>
    b3dc:	b	b4c4 <ReadSingleData+0x2a24>
    b3e0:	mov	r2, #0
    b3e4:	ldr	r3, [sp, #12]
    b3e8:	cmp	ip, #0
    b3ec:	beq	b40c <ReadSingleData+0x296c>
    b3f0:	add	r1, sp, #192	; 0xc0
    b3f4:	add	r1, r1, r2, lsl #2
    b3f8:	vld1.32	{d16-d17}, [r1]
    b3fc:	add	r1, r2, r9
    b400:	add	r1, r3, r1, lsl #2
    b404:	vcvt.f32.s32	q8, q8
    b408:	vst1.32	{d16-d17}, [r1]
    b40c:	ldr	r5, [sp, #20]
    b410:	cmp	lr, r0
    b414:	beq	b4c4 <ReadSingleData+0x2a24>
    b418:	add	r2, r0, sl
    b41c:	add	r1, sp, #192	; 0xc0
    b420:	add	r2, r3, r2, lsl #2
    b424:	ldr	r3, [sp, #36]	; 0x24
    b428:	add	r1, r1, r0, lsl #2
    b42c:	sub	r3, r5, r3
    b430:	sub	r0, r3, r0
    b434:	sub	r0, r0, #256	; 0x100
    b438:	ldr	r3, [r1], #4
    b43c:	subs	r0, r0, #1
    b440:	vmov	s0, r3
    b444:	vcvt.f32.s32	s0, s0
    b448:	vstmia	r2!, {s0}
    b44c:	bne	b438 <ReadSingleData+0x2998>
    b450:	b	b4c4 <ReadSingleData+0x2a24>
    b454:	mov	r2, #0
    b458:	ldr	r3, [sp, #12]
    b45c:	cmp	ip, #0
    b460:	beq	b480 <ReadSingleData+0x29e0>
    b464:	add	r1, sp, #192	; 0xc0
    b468:	add	r1, r1, r2, lsl #2
    b46c:	vld1.32	{d16-d17}, [r1]
    b470:	add	r1, r2, r9
    b474:	add	r1, r3, r1, lsl #2
    b478:	vcvt.f32.u32	q8, q8
    b47c:	vst1.32	{d16-d17}, [r1]
    b480:	ldr	r5, [sp, #20]
    b484:	cmp	lr, r0
    b488:	beq	b4c4 <ReadSingleData+0x2a24>
    b48c:	add	r2, r0, sl
    b490:	add	r1, sp, #192	; 0xc0
    b494:	add	r2, r3, r2, lsl #2
    b498:	ldr	r3, [sp, #36]	; 0x24
    b49c:	add	r1, r1, r0, lsl #2
    b4a0:	sub	r3, r5, r3
    b4a4:	sub	r0, r3, r0
    b4a8:	sub	r0, r0, #256	; 0x100
    b4ac:	ldr	r3, [r1], #4
    b4b0:	subs	r0, r0, #1
    b4b4:	vmov	s0, r3
    b4b8:	vcvt.f32.u32	s0, s0
    b4bc:	vstmia	r2!, {s0}
    b4c0:	bne	b4ac <ReadSingleData+0x2a0c>
    b4c4:	ldr	sl, [sp, #40]	; 0x28
    b4c8:	mul	r0, r8, sl
    b4cc:	b	8ad0 <ReadSingleData+0x30>
    b4d0:	mov	r2, #0
    b4d4:	ldr	r3, [sp, #12]
    b4d8:	cmp	ip, #0
    b4dc:	beq	b500 <ReadSingleData+0x2a60>
    b4e0:	add	r0, sp, #192	; 0xc0
    b4e4:	add	r0, r0, r2, lsl #3
    b4e8:	vld1.64	{d16-d17}, [r0]
    b4ec:	add	r0, r2, r4
    b4f0:	add	r0, r3, r0, lsl #2
    b4f4:	vcvt.f32.f64	s1, d17
    b4f8:	vcvt.f32.f64	s0, d16
    b4fc:	vstr	d0, [r0]
    b500:	ldr	r0, [sp, #44]	; 0x2c
    b504:	ldr	r5, [sp, #20]
    b508:	cmp	r0, lr
    b50c:	beq	b4c8 <ReadSingleData+0x2a28>
    b510:	add	r0, sp, #192	; 0xc0
    b514:	add	r1, r0, lr, lsl #3
    b518:	ldr	r0, [sp, #32]
    b51c:	add	r0, lr, r0
    b520:	add	r2, r3, r0, lsl #2
    b524:	ldr	r0, [sp, #36]	; 0x24
    b528:	sub	r0, r5, r0
    b52c:	sub	r0, r0, lr
    b530:	sub	r0, r0, #256	; 0x100
    b534:	vldr	d16, [r1]
    b538:	add	r1, r1, #8
    b53c:	subs	r0, r0, #1
    b540:	vcvt.f32.f64	s0, d16
    b544:	vstmia	r2!, {s0}
    b548:	bne	b534 <ReadSingleData+0x2a94>
    b54c:	b	b4c8 <ReadSingleData+0x2a28>
    b550:	mov	r6, #0
    b554:	ldr	r0, [sp]
    b558:	ldr	r8, [sp, #36]	; 0x24
    b55c:	ldr	r7, [sp, #12]
    b560:	cmp	r0, #0
    b564:	beq	b5a4 <ReadSingleData+0x2b04>
    b568:	add	r0, sp, #192	; 0xc0
    b56c:	add	r0, r0, r6, lsl #3
    b570:	vld1.64	{d8-d9}, [r0]
    b574:	vmov.32	r0, d9[0]
    b578:	vmov.32	r1, d9[1]
    b57c:	bl	6b898 <__aeabi_l2f>
    b580:	vmov.32	r2, d8[0]
    b584:	vmov.32	r1, d8[1]
    b588:	vmov	s17, r0
    b58c:	add	r4, r6, r4
    b590:	mov	r0, r2
    b594:	bl	6b898 <__aeabi_l2f>
    b598:	vmov	s16, r0
    b59c:	add	r0, r7, r4, lsl #2
    b5a0:	vstr	d8, [r0]
    b5a4:	ldr	r0, [sp, #16]
    b5a8:	ldr	r2, [sp, #4]
    b5ac:	ldr	r5, [sp, #20]
    b5b0:	cmp	r0, r2
    b5b4:	bne	b5c0 <ReadSingleData+0x2b20>
    b5b8:	ldr	sl, [sp, #40]	; 0x28
    b5bc:	b	adb8 <ReadSingleData+0x2318>
    b5c0:	add	r0, sp, #192	; 0xc0
    b5c4:	mov	r1, r5
    b5c8:	add	r4, r0, r2, lsl #3
    b5cc:	ldr	r0, [sp, #28]
    b5d0:	add	r0, r2, r0
    b5d4:	add	r5, r7, r0, lsl #2
    b5d8:	ldr	r0, [sp, #32]
    b5dc:	sub	r0, r1, r0
    b5e0:	sub	r0, r0, r2
    b5e4:	sub	r6, r0, #256	; 0x100
    b5e8:	ldrd	r0, [r4]
    b5ec:	bl	6b898 <__aeabi_l2f>
    b5f0:	str	r0, [r5], #4
    b5f4:	add	r4, r4, #8
    b5f8:	subs	r6, r6, #1
    b5fc:	bne	b5e8 <ReadSingleData+0x2b48>
    b600:	ldr	sl, [sp, #40]	; 0x28
    b604:	ldr	r5, [sp, #20]
    b608:	b	adb8 <ReadSingleData+0x2318>
    b60c:	mov	r7, #0
    b610:	ldr	r0, [sp, #8]
    b614:	ldr	r8, [sp, #36]	; 0x24
    b618:	ldr	r6, [sp, #28]
    b61c:	cmp	r0, #0
    b620:	beq	b664 <ReadSingleData+0x2bc4>
    b624:	add	r0, sp, #192	; 0xc0
    b628:	add	r0, r0, r7, lsl #3
    b62c:	vld1.64	{d8-d9}, [r0]
    b630:	vmov.32	r0, d9[0]
    b634:	vmov.32	r1, d9[1]
    b638:	bl	6b888 <__aeabi_ul2f>
    b63c:	vmov.32	r2, d8[0]
    b640:	vmov.32	r1, d8[1]
    b644:	vmov	s17, r0
    b648:	add	r4, r7, r9
    b64c:	mov	r0, r2
    b650:	bl	6b888 <__aeabi_ul2f>
    b654:	vmov	s16, r0
    b658:	ldr	r0, [sp, #12]
    b65c:	add	r0, r0, r4, lsl #2
    b660:	vstr	d8, [r0]
    b664:	ldr	r0, [sp, #44]	; 0x2c
    b668:	ldr	r3, [sp, #16]
    b66c:	ldr	r2, [sp, #20]
    b670:	ldr	sl, [sp, #40]	; 0x28
    b674:	ldr	r5, [sp, #32]
    b678:	cmp	r0, r3
    b67c:	beq	b4c8 <ReadSingleData+0x2a28>
    b680:	mov	r1, r2
    b684:	ldr	r2, [sp, #12]
    b688:	add	r0, sp, #192	; 0xc0
    b68c:	add	r4, r0, r3, lsl #3
    b690:	add	r0, r3, r6
    b694:	add	r7, r2, r0, lsl #2
    b698:	sub	r0, r1, r5
    b69c:	sub	r0, r0, r3
    b6a0:	sub	r6, r0, #256	; 0x100
    b6a4:	ldrd	r0, [r4]
    b6a8:	bl	6b888 <__aeabi_ul2f>
    b6ac:	str	r0, [r7], #4
    b6b0:	add	r4, r4, #8
    b6b4:	subs	r6, r6, #1
    b6b8:	bne	b6a4 <ReadSingleData+0x2c04>
    b6bc:	b	b4c8 <ReadSingleData+0x2a28>

0000b6c0 <ReadCompressedSingleData>:
    b6c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b6c4:	add	fp, sp, #28
    b6c8:	sub	sp, sp, #12
    b6cc:	mov	r7, r0
    b6d0:	mov	r0, #0
    b6d4:	cmp	r1, #0
    b6d8:	beq	b6ec <ReadCompressedSingleData+0x2c>
    b6dc:	cmp	r7, #0
    b6e0:	movne	r5, r2
    b6e4:	cmpne	r2, #0
    b6e8:	bne	b6f4 <ReadCompressedSingleData+0x34>
    b6ec:	sub	sp, fp, #28
    b6f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b6f4:	ldr	sl, [fp, #8]
    b6f8:	mov	r0, r3
    b6fc:	mov	r4, r3
    b700:	mov	r6, r1
    b704:	bl	1924 <Mat_SizeOf@plt>
    b708:	mov	r9, r0
    b70c:	sub	r0, r4, #1
    b710:	cmp	r0, #12
    b714:	bhi	bc24 <ReadCompressedSingleData+0x564>
    b718:	add	r1, pc, #4
    b71c:	ldr	r0, [r1, r0, lsl #2]
    b720:	add	pc, r1, r0
    b724:	.word	0x00000034
    b728:	.word	0x00000074
    b72c:	.word	0x000000b4
    b730:	.word	0x00000104
    b734:	.word	0x00000154
    b738:	.word	0x000001a4
    b73c:	.word	0x000001f4
    b740:	.word	0x00000500
    b744:	.word	0x0000023c
    b748:	.word	0x00000500
    b74c:	.word	0x00000500
    b750:	.word	0x00000288
    b754:	.word	0x000002d4
    b758:	cmp	sl, #1
    b75c:	blt	bc24 <ReadCompressedSingleData+0x564>
    b760:	mov	r8, sp
    b764:	mov	r4, sl
    b768:	mov	r0, r7
    b76c:	mov	r1, r6
    b770:	mov	r2, r8
    b774:	mov	r3, r9
    b778:	bl	3238 <InflateData>
    b77c:	ldrsb	r0, [sp]
    b780:	subs	r4, r4, #1
    b784:	vmov	s0, r0
    b788:	vcvt.f32.s32	s0, s0
    b78c:	vstmia	r5!, {s0}
    b790:	bne	b768 <ReadCompressedSingleData+0xa8>
    b794:	b	bc24 <ReadCompressedSingleData+0x564>
    b798:	cmp	sl, #1
    b79c:	blt	bc24 <ReadCompressedSingleData+0x564>
    b7a0:	mov	r8, sp
    b7a4:	mov	r4, sl
    b7a8:	mov	r0, r7
    b7ac:	mov	r1, r6
    b7b0:	mov	r2, r8
    b7b4:	mov	r3, r9
    b7b8:	bl	3238 <InflateData>
    b7bc:	ldrb	r0, [sp]
    b7c0:	subs	r4, r4, #1
    b7c4:	vmov	s0, r0
    b7c8:	vcvt.f32.u32	s0, s0
    b7cc:	vstmia	r5!, {s0}
    b7d0:	bne	b7a8 <ReadCompressedSingleData+0xe8>
    b7d4:	b	bc24 <ReadCompressedSingleData+0x564>
    b7d8:	ldr	r0, [r7, #20]
    b7dc:	cmp	r0, #0
    b7e0:	beq	ba44 <ReadCompressedSingleData+0x384>
    b7e4:	cmp	sl, #1
    b7e8:	blt	bc24 <ReadCompressedSingleData+0x564>
    b7ec:	mov	r8, sp
    b7f0:	mov	r4, sl
    b7f4:	mov	r0, r7
    b7f8:	mov	r1, r6
    b7fc:	mov	r2, r8
    b800:	mov	r3, r9
    b804:	bl	3238 <InflateData>
    b808:	mov	r0, r8
    b80c:	bl	1c20 <Mat_int16Swap>
    b810:	vmov	s0, r0
    b814:	subs	r4, r4, #1
    b818:	vcvt.f32.s32	s0, s0
    b81c:	vstmia	r5!, {s0}
    b820:	bne	b7f4 <ReadCompressedSingleData+0x134>
    b824:	b	bc24 <ReadCompressedSingleData+0x564>
    b828:	ldr	r0, [r7, #20]
    b82c:	cmp	r0, #0
    b830:	beq	ba84 <ReadCompressedSingleData+0x3c4>
    b834:	cmp	sl, #1
    b838:	blt	bc24 <ReadCompressedSingleData+0x564>
    b83c:	mov	r8, sp
    b840:	mov	r4, sl
    b844:	mov	r0, r7
    b848:	mov	r1, r6
    b84c:	mov	r2, r8
    b850:	mov	r3, r9
    b854:	bl	3238 <InflateData>
    b858:	mov	r0, r8
    b85c:	bl	1c34 <Mat_uint16Swap>
    b860:	vmov	s0, r0
    b864:	subs	r4, r4, #1
    b868:	vcvt.f32.u32	s0, s0
    b86c:	vstmia	r5!, {s0}
    b870:	bne	b844 <ReadCompressedSingleData+0x184>
    b874:	b	bc24 <ReadCompressedSingleData+0x564>
    b878:	ldr	r0, [r7, #20]
    b87c:	cmp	r0, #0
    b880:	beq	bac4 <ReadCompressedSingleData+0x404>
    b884:	cmp	sl, #1
    b888:	blt	bc24 <ReadCompressedSingleData+0x564>
    b88c:	mov	r8, sp
    b890:	mov	r4, sl
    b894:	mov	r0, r7
    b898:	mov	r1, r6
    b89c:	mov	r2, r8
    b8a0:	mov	r3, r9
    b8a4:	bl	3238 <InflateData>
    b8a8:	mov	r0, r8
    b8ac:	bl	1bf8 <Mat_int32Swap>
    b8b0:	vmov	s0, r0
    b8b4:	subs	r4, r4, #1
    b8b8:	vcvt.f32.s32	s0, s0
    b8bc:	vstmia	r5!, {s0}
    b8c0:	bne	b894 <ReadCompressedSingleData+0x1d4>
    b8c4:	b	bc24 <ReadCompressedSingleData+0x564>
    b8c8:	ldr	r0, [r7, #20]
    b8cc:	cmp	r0, #0
    b8d0:	beq	bb00 <ReadCompressedSingleData+0x440>
    b8d4:	cmp	sl, #1
    b8d8:	blt	bc24 <ReadCompressedSingleData+0x564>
    b8dc:	mov	r8, sp
    b8e0:	mov	r4, sl
    b8e4:	mov	r0, r7
    b8e8:	mov	r1, r6
    b8ec:	mov	r2, r8
    b8f0:	mov	r3, r9
    b8f4:	bl	3238 <InflateData>
    b8f8:	mov	r0, r8
    b8fc:	bl	1c0c <Mat_uint32Swap>
    b900:	vmov	s0, r0
    b904:	subs	r4, r4, #1
    b908:	vcvt.f32.u32	s0, s0
    b90c:	vstmia	r5!, {s0}
    b910:	bne	b8e4 <ReadCompressedSingleData+0x224>
    b914:	b	bc24 <ReadCompressedSingleData+0x564>
    b918:	ldr	r0, [r7, #20]
    b91c:	cmp	r0, #0
    b920:	beq	bb3c <ReadCompressedSingleData+0x47c>
    b924:	cmp	sl, #1
    b928:	blt	bc24 <ReadCompressedSingleData+0x564>
    b92c:	mov	r8, sp
    b930:	mov	r4, sl
    b934:	mov	r0, r7
    b938:	mov	r1, r6
    b93c:	mov	r2, r8
    b940:	mov	r3, r9
    b944:	bl	3238 <InflateData>
    b948:	mov	r0, r8
    b94c:	bl	1c4c <Mat_floatSwap>
    b950:	vstmia	r5!, {s0}
    b954:	subs	r4, r4, #1
    b958:	bne	b934 <ReadCompressedSingleData+0x274>
    b95c:	b	bc24 <ReadCompressedSingleData+0x564>
    b960:	ldr	r0, [r7, #20]
    b964:	cmp	r0, #0
    b968:	beq	bb74 <ReadCompressedSingleData+0x4b4>
    b96c:	cmp	sl, #1
    b970:	blt	bc24 <ReadCompressedSingleData+0x564>
    b974:	mov	r8, sp
    b978:	mov	r4, sl
    b97c:	mov	r0, r7
    b980:	mov	r1, r6
    b984:	mov	r2, r8
    b988:	mov	r3, r9
    b98c:	bl	3238 <InflateData>
    b990:	mov	r0, r8
    b994:	bl	1c90 <Mat_doubleSwap>
    b998:	vcvt.f32.f64	s0, d0
    b99c:	subs	r4, r4, #1
    b9a0:	vstmia	r5!, {s0}
    b9a4:	bne	b97c <ReadCompressedSingleData+0x2bc>
    b9a8:	b	bc24 <ReadCompressedSingleData+0x564>
    b9ac:	ldr	r0, [r7, #20]
    b9b0:	cmp	r0, #0
    b9b4:	beq	bbb0 <ReadCompressedSingleData+0x4f0>
    b9b8:	cmp	sl, #1
    b9bc:	blt	bc24 <ReadCompressedSingleData+0x564>
    b9c0:	mov	r8, sp
    b9c4:	mov	r4, sl
    b9c8:	mov	r0, r7
    b9cc:	mov	r1, r6
    b9d0:	mov	r2, r8
    b9d4:	mov	r3, r9
    b9d8:	bl	3238 <InflateData>
    b9dc:	mov	r0, r8
    b9e0:	bl	1b84 <Mat_int64Swap>
    b9e4:	bl	6b898 <__aeabi_l2f>
    b9e8:	str	r0, [r5], #4
    b9ec:	subs	r4, r4, #1
    b9f0:	bne	b9c8 <ReadCompressedSingleData+0x308>
    b9f4:	b	bc24 <ReadCompressedSingleData+0x564>
    b9f8:	ldr	r0, [r7, #20]
    b9fc:	cmp	r0, #0
    ba00:	beq	bbec <ReadCompressedSingleData+0x52c>
    ba04:	cmp	sl, #1
    ba08:	blt	bc24 <ReadCompressedSingleData+0x564>
    ba0c:	mov	r8, sp
    ba10:	mov	r4, sl
    ba14:	mov	r0, r7
    ba18:	mov	r1, r6
    ba1c:	mov	r2, r8
    ba20:	mov	r3, r9
    ba24:	bl	3238 <InflateData>
    ba28:	mov	r0, r8
    ba2c:	bl	1bd4 <Mat_uint64Swap>
    ba30:	bl	6b888 <__aeabi_ul2f>
    ba34:	str	r0, [r5], #4
    ba38:	subs	r4, r4, #1
    ba3c:	bne	ba14 <ReadCompressedSingleData+0x354>
    ba40:	b	bc24 <ReadCompressedSingleData+0x564>
    ba44:	cmp	sl, #1
    ba48:	blt	bc24 <ReadCompressedSingleData+0x564>
    ba4c:	mov	r8, sp
    ba50:	mov	r4, sl
    ba54:	mov	r0, r7
    ba58:	mov	r1, r6
    ba5c:	mov	r2, r8
    ba60:	mov	r3, r9
    ba64:	bl	3238 <InflateData>
    ba68:	ldrsh	r0, [sp]
    ba6c:	subs	r4, r4, #1
    ba70:	vmov	s0, r0
    ba74:	vcvt.f32.s32	s0, s0
    ba78:	vstmia	r5!, {s0}
    ba7c:	bne	ba54 <ReadCompressedSingleData+0x394>
    ba80:	b	bc24 <ReadCompressedSingleData+0x564>
    ba84:	cmp	sl, #1
    ba88:	blt	bc24 <ReadCompressedSingleData+0x564>
    ba8c:	mov	r8, sp
    ba90:	mov	r4, sl
    ba94:	mov	r0, r7
    ba98:	mov	r1, r6
    ba9c:	mov	r2, r8
    baa0:	mov	r3, r9
    baa4:	bl	3238 <InflateData>
    baa8:	ldrh	r0, [sp]
    baac:	subs	r4, r4, #1
    bab0:	vmov	s0, r0
    bab4:	vcvt.f32.u32	s0, s0
    bab8:	vstmia	r5!, {s0}
    babc:	bne	ba94 <ReadCompressedSingleData+0x3d4>
    bac0:	b	bc24 <ReadCompressedSingleData+0x564>
    bac4:	cmp	sl, #1
    bac8:	blt	bc24 <ReadCompressedSingleData+0x564>
    bacc:	mov	r8, sp
    bad0:	mov	r4, sl
    bad4:	mov	r0, r7
    bad8:	mov	r1, r6
    badc:	mov	r2, r8
    bae0:	mov	r3, r9
    bae4:	bl	3238 <InflateData>
    bae8:	vldr	s0, [sp]
    baec:	subs	r4, r4, #1
    baf0:	vcvt.f32.s32	s0, s0
    baf4:	vstmia	r5!, {s0}
    baf8:	bne	bad4 <ReadCompressedSingleData+0x414>
    bafc:	b	bc24 <ReadCompressedSingleData+0x564>
    bb00:	cmp	sl, #1
    bb04:	blt	bc24 <ReadCompressedSingleData+0x564>
    bb08:	mov	r8, sp
    bb0c:	mov	r4, sl
    bb10:	mov	r0, r7
    bb14:	mov	r1, r6
    bb18:	mov	r2, r8
    bb1c:	mov	r3, r9
    bb20:	bl	3238 <InflateData>
    bb24:	vldr	s0, [sp]
    bb28:	subs	r4, r4, #1
    bb2c:	vcvt.f32.u32	s0, s0
    bb30:	vstmia	r5!, {s0}
    bb34:	bne	bb10 <ReadCompressedSingleData+0x450>
    bb38:	b	bc24 <ReadCompressedSingleData+0x564>
    bb3c:	cmp	sl, #1
    bb40:	blt	bc24 <ReadCompressedSingleData+0x564>
    bb44:	mov	r8, sp
    bb48:	mov	r4, sl
    bb4c:	mov	r0, r7
    bb50:	mov	r1, r6
    bb54:	mov	r2, r8
    bb58:	mov	r3, r9
    bb5c:	bl	3238 <InflateData>
    bb60:	ldr	r0, [sp]
    bb64:	subs	r4, r4, #1
    bb68:	str	r0, [r5], #4
    bb6c:	bne	bb4c <ReadCompressedSingleData+0x48c>
    bb70:	b	bc24 <ReadCompressedSingleData+0x564>
    bb74:	cmp	sl, #1
    bb78:	blt	bc24 <ReadCompressedSingleData+0x564>
    bb7c:	mov	r8, sp
    bb80:	mov	r4, sl
    bb84:	mov	r0, r7
    bb88:	mov	r1, r6
    bb8c:	mov	r2, r8
    bb90:	mov	r3, r9
    bb94:	bl	3238 <InflateData>
    bb98:	vldr	d16, [sp]
    bb9c:	subs	r4, r4, #1
    bba0:	vcvt.f32.f64	s0, d16
    bba4:	vstmia	r5!, {s0}
    bba8:	bne	bb84 <ReadCompressedSingleData+0x4c4>
    bbac:	b	bc24 <ReadCompressedSingleData+0x564>
    bbb0:	cmp	sl, #1
    bbb4:	blt	bc24 <ReadCompressedSingleData+0x564>
    bbb8:	mov	r8, sp
    bbbc:	mov	r4, sl
    bbc0:	mov	r0, r7
    bbc4:	mov	r1, r6
    bbc8:	mov	r2, r8
    bbcc:	mov	r3, r9
    bbd0:	bl	3238 <InflateData>
    bbd4:	ldm	sp, {r0, r1}
    bbd8:	bl	6b898 <__aeabi_l2f>
    bbdc:	str	r0, [r5], #4
    bbe0:	subs	r4, r4, #1
    bbe4:	bne	bbc0 <ReadCompressedSingleData+0x500>
    bbe8:	b	bc24 <ReadCompressedSingleData+0x564>
    bbec:	cmp	sl, #1
    bbf0:	blt	bc24 <ReadCompressedSingleData+0x564>
    bbf4:	mov	r8, sp
    bbf8:	mov	r4, sl
    bbfc:	mov	r0, r7
    bc00:	mov	r1, r6
    bc04:	mov	r2, r8
    bc08:	mov	r3, r9
    bc0c:	bl	3238 <InflateData>
    bc10:	ldm	sp, {r0, r1}
    bc14:	bl	6b888 <__aeabi_ul2f>
    bc18:	str	r0, [r5], #4
    bc1c:	subs	r4, r4, #1
    bc20:	bne	bbfc <ReadCompressedSingleData+0x53c>
    bc24:	mul	r0, r9, sl
    bc28:	sub	sp, fp, #28
    bc2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000bc30 <ReadInt64Data>:
    bc30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bc34:	add	fp, sp, #28
    bc38:	sub	sp, sp, #300	; 0x12c
    bc3c:	sub	sp, sp, #2048	; 0x800
    bc40:	mov	r4, r0
    bc44:	mov	r0, #0
    bc48:	cmp	r4, #0
    bc4c:	movne	r7, r1
    bc50:	cmpne	r1, #0
    bc54:	bne	bc60 <ReadInt64Data+0x30>
    bc58:	sub	sp, fp, #28
    bc5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc60:	ldr	r1, [r4]
    bc64:	cmp	r1, #0
    bc68:	beq	bc58 <ReadInt64Data+0x28>
    bc6c:	mov	r0, r2
    bc70:	mov	r6, r3
    bc74:	mov	r5, r2
    bc78:	bl	1924 <Mat_SizeOf@plt>
    bc7c:	mov	sl, r0
    bc80:	sub	r0, r5, #1
    bc84:	mov	r9, #0
    bc88:	str	r4, [sp, #36]	; 0x24
    bc8c:	cmp	r0, #11
    bc90:	bhi	db3c <ReadInt64Data+0x1f0c>
    bc94:	add	r1, pc, #8
    bc98:	add	r8, sp, #232	; 0xe8
    bc9c:	ldr	r0, [r1, r0, lsl #2]
    bca0:	add	pc, r1, r0
    bca4:	.word	0x00000030
    bca8:	.word	0x000000f4
    bcac:	.word	0x000001bc
    bcb0:	.word	0x00000218
    bcb4:	.word	0x00000274
    bcb8:	.word	0x000002d0
    bcbc:	.word	0x0000032c
    bcc0:	.word	0x00001e98
    bcc4:	.word	0x0000038c
    bcc8:	.word	0x00001e98
    bccc:	.word	0x00001e98
    bcd0:	.word	0x000003ec
    bcd4:	cmp	r6, #256	; 0x100
    bcd8:	bgt	c104 <ReadInt64Data+0x4d4>
    bcdc:	ldr	r3, [r4]
    bce0:	add	r4, sp, #296	; 0x128
    bce4:	mov	r1, sl
    bce8:	mov	r2, r6
    bcec:	mov	r0, r4
    bcf0:	bl	18b8 <fread@plt>
    bcf4:	mov	r9, r0
    bcf8:	cmp	r6, #1
    bcfc:	blt	def0 <ReadInt64Data+0x22c0>
    bd00:	mov	lr, #0
    bd04:	beq	ddc4 <ReadInt64Data+0x2194>
    bd08:	bic	lr, r6, #1
    bd0c:	mov	r1, #1
    bd10:	str	sl, [sp, #32]
    bd14:	mov	sl, r7
    bd18:	str	r9, [sp, #28]
    bd1c:	str	r6, [sp, #8]
    bd20:	subs	r0, lr, #2
    bd24:	add	r0, r1, r0, lsr #1
    bd28:	and	ip, r0, #1
    bd2c:	beq	dd7c <ReadInt64Data+0x214c>
    bd30:	sub	r3, r0, ip
    bd34:	mov	r1, #0
    bd38:	add	r9, sp, #236	; 0xec
    bd3c:	mov	r5, #32
    bd40:	add	r2, sp, #240	; 0xf0
    bd44:	mov	r0, sl
    bd48:	add	r7, r4, r1
    bd4c:	subs	r3, r3, #2
    bd50:	add	r1, r1, #4
    bd54:	ldrh	r6, [r7]
    bd58:	strh	r6, [r8, #4]
    bd5c:	add	r6, r0, #16
    bd60:	vld1.16	{d16[0]}, [r9 :16]
    bd64:	vmovl.s8	q8, d16
    bd68:	vmovl.s16	q8, d16
    bd6c:	vmovl.s32	q8, d16
    bd70:	vst1.64	{d16-d17}, [r0], r5
    bd74:	ldrh	r7, [r7, #2]
    bd78:	strh	r7, [r8, #8]
    bd7c:	vld1.16	{d16[0]}, [r2 :16]
    bd80:	vmovl.s8	q8, d16
    bd84:	vmovl.s16	q8, d16
    bd88:	vmovl.s32	q8, d16
    bd8c:	vst1.64	{d16-d17}, [r6]
    bd90:	bne	bd48 <ReadInt64Data+0x118>
    bd94:	b	dd80 <ReadInt64Data+0x2150>
    bd98:	cmp	r6, #256	; 0x100
    bd9c:	bgt	c2e0 <ReadInt64Data+0x6b0>
    bda0:	ldr	r3, [r4]
    bda4:	add	r9, sp, #296	; 0x128
    bda8:	mov	r1, sl
    bdac:	mov	r2, r6
    bdb0:	mov	r0, r9
    bdb4:	bl	18b8 <fread@plt>
    bdb8:	mov	ip, r0
    bdbc:	cmp	r6, #1
    bdc0:	blt	de5c <ReadInt64Data+0x222c>
    bdc4:	mov	r1, #0
    bdc8:	mov	lr, #0
    bdcc:	beq	de38 <ReadInt64Data+0x2208>
    bdd0:	bic	lr, r6, #1
    bdd4:	mov	r2, #1
    bdd8:	str	r7, [sp, #4]
    bddc:	str	r6, [sp, #8]
    bde0:	str	sl, [sp, #32]
    bde4:	subs	r0, lr, #2
    bde8:	add	r0, r2, r0, lsr #1
    bdec:	and	r2, r0, #1
    bdf0:	str	r2, [sp, #36]	; 0x24
    bdf4:	beq	ddec <ReadInt64Data+0x21bc>
    bdf8:	ldr	r7, [sp, #4]
    bdfc:	sub	r6, r0, r2
    be00:	mov	r2, #0
    be04:	add	sl, sp, #268	; 0x10c
    be08:	mov	r3, #32
    be0c:	add	r0, sp, #272	; 0x110
    be10:	add	r4, r9, r2
    be14:	subs	r6, r6, #2
    be18:	add	r2, r2, #4
    be1c:	ldrh	r5, [r4]
    be20:	strh	r5, [r8, #36]	; 0x24
    be24:	add	r5, r7, #16
    be28:	vld1.16	{d16[0]}, [sl :16]
    be2c:	vmovl.u8	q8, d16
    be30:	vmovl.u16	q8, d16
    be34:	vmovl.u32	q8, d16
    be38:	vst1.64	{d16-d17}, [r7], r3
    be3c:	ldrh	r4, [r4, #2]
    be40:	strh	r4, [r8, #40]	; 0x28
    be44:	vld1.16	{d16[0]}, [r0 :16]
    be48:	vmovl.u8	q8, d16
    be4c:	vmovl.u16	q8, d16
    be50:	vmovl.u32	q8, d16
    be54:	vst1.64	{d16-d17}, [r5]
    be58:	bne	be10 <ReadInt64Data+0x1e0>
    be5c:	b	ddf0 <ReadInt64Data+0x21c0>
    be60:	ldr	r0, [r4, #20]
    be64:	cmp	r0, #0
    be68:	beq	c4c0 <ReadInt64Data+0x890>
    be6c:	cmp	r6, #256	; 0x100
    be70:	bgt	c944 <ReadInt64Data+0xd14>
    be74:	ldr	r3, [r4]
    be78:	add	r4, sp, #296	; 0x128
    be7c:	mov	r1, sl
    be80:	mov	r2, r6
    be84:	mov	r0, r4
    be88:	bl	18b8 <fread@plt>
    be8c:	mov	r9, r0
    be90:	cmp	r6, #1
    be94:	blt	def0 <ReadInt64Data+0x22c0>
    be98:	mov	r0, r4
    be9c:	bl	1c20 <Mat_int16Swap>
    bea0:	asr	r1, r0, #31
    bea4:	add	r4, r4, #2
    bea8:	subs	r6, r6, #1
    beac:	strd	r0, [r7]
    beb0:	add	r7, r7, #8
    beb4:	bne	be98 <ReadInt64Data+0x268>
    beb8:	b	def0 <ReadInt64Data+0x22c0>
    bebc:	ldr	r0, [r4, #20]
    bec0:	cmp	r0, #0
    bec4:	beq	c578 <ReadInt64Data+0x948>
    bec8:	cmp	r6, #256	; 0x100
    becc:	bgt	ca34 <ReadInt64Data+0xe04>
    bed0:	ldr	r3, [r4]
    bed4:	add	r4, sp, #296	; 0x128
    bed8:	mov	r1, sl
    bedc:	mov	r2, r6
    bee0:	mov	r0, r4
    bee4:	bl	18b8 <fread@plt>
    bee8:	mov	r9, r0
    beec:	cmp	r6, #1
    bef0:	blt	def0 <ReadInt64Data+0x22c0>
    bef4:	mov	r5, #0
    bef8:	mov	r0, r4
    befc:	bl	1c34 <Mat_uint16Swap>
    bf00:	stm	r7, {r0, r5}
    bf04:	add	r4, r4, #2
    bf08:	add	r7, r7, #8
    bf0c:	subs	r6, r6, #1
    bf10:	bne	bef8 <ReadInt64Data+0x2c8>
    bf14:	b	def0 <ReadInt64Data+0x22c0>
    bf18:	ldr	r0, [r4, #20]
    bf1c:	cmp	r0, #0
    bf20:	beq	c638 <ReadInt64Data+0xa08>
    bf24:	cmp	r6, #256	; 0x100
    bf28:	bgt	cb30 <ReadInt64Data+0xf00>
    bf2c:	ldr	r3, [r4]
    bf30:	add	r4, sp, #296	; 0x128
    bf34:	mov	r1, sl
    bf38:	mov	r2, r6
    bf3c:	mov	r0, r4
    bf40:	bl	18b8 <fread@plt>
    bf44:	mov	r9, r0
    bf48:	cmp	r6, #1
    bf4c:	blt	def0 <ReadInt64Data+0x22c0>
    bf50:	mov	r0, r4
    bf54:	bl	1bf8 <Mat_int32Swap>
    bf58:	asr	r1, r0, #31
    bf5c:	add	r4, r4, #4
    bf60:	subs	r6, r6, #1
    bf64:	strd	r0, [r7]
    bf68:	add	r7, r7, #8
    bf6c:	bne	bf50 <ReadInt64Data+0x320>
    bf70:	b	def0 <ReadInt64Data+0x22c0>
    bf74:	ldr	r0, [r4, #20]
    bf78:	cmp	r0, #0
    bf7c:	beq	c6f8 <ReadInt64Data+0xac8>
    bf80:	cmp	r6, #256	; 0x100
    bf84:	bgt	cc20 <ReadInt64Data+0xff0>
    bf88:	ldr	r3, [r4]
    bf8c:	add	r4, sp, #296	; 0x128
    bf90:	mov	r1, sl
    bf94:	mov	r2, r6
    bf98:	mov	r0, r4
    bf9c:	bl	18b8 <fread@plt>
    bfa0:	mov	r9, r0
    bfa4:	cmp	r6, #1
    bfa8:	blt	def0 <ReadInt64Data+0x22c0>
    bfac:	mov	r5, #0
    bfb0:	mov	r0, r4
    bfb4:	bl	1c0c <Mat_uint32Swap>
    bfb8:	stm	r7, {r0, r5}
    bfbc:	add	r4, r4, #4
    bfc0:	add	r7, r7, #8
    bfc4:	subs	r6, r6, #1
    bfc8:	bne	bfb0 <ReadInt64Data+0x380>
    bfcc:	b	def0 <ReadInt64Data+0x22c0>
    bfd0:	ldr	r0, [r4, #20]
    bfd4:	cmp	r0, #0
    bfd8:	beq	c7c0 <ReadInt64Data+0xb90>
    bfdc:	cmp	r6, #256	; 0x100
    bfe0:	bgt	cd1c <ReadInt64Data+0x10ec>
    bfe4:	ldr	r3, [r4]
    bfe8:	add	r4, sp, #296	; 0x128
    bfec:	mov	r1, sl
    bff0:	mov	r2, r6
    bff4:	mov	r0, r4
    bff8:	bl	18b8 <fread@plt>
    bffc:	mov	r9, r0
    c000:	cmp	r6, #1
    c004:	blt	def0 <ReadInt64Data+0x22c0>
    c008:	mov	r0, r4
    c00c:	bl	1c4c <Mat_floatSwap>
    c010:	vmov	r0, s0
    c014:	bl	6b914 <__aeabi_f2lz>
    c018:	strd	r0, [r7]
    c01c:	add	r4, r4, #4
    c020:	add	r7, r7, #8
    c024:	subs	r6, r6, #1
    c028:	bne	c008 <ReadInt64Data+0x3d8>
    c02c:	b	def0 <ReadInt64Data+0x22c0>
    c030:	ldr	r0, [r4, #20]
    c034:	cmp	r0, #0
    c038:	beq	c854 <ReadInt64Data+0xc24>
    c03c:	cmp	r6, #256	; 0x100
    c040:	bgt	ce14 <ReadInt64Data+0x11e4>
    c044:	ldr	r3, [r4]
    c048:	add	r4, sp, #296	; 0x128
    c04c:	mov	r1, sl
    c050:	mov	r2, r6
    c054:	mov	r0, r4
    c058:	bl	18b8 <fread@plt>
    c05c:	mov	r9, r0
    c060:	cmp	r6, #1
    c064:	blt	def0 <ReadInt64Data+0x22c0>
    c068:	mov	r0, r4
    c06c:	bl	1c90 <Mat_doubleSwap>
    c070:	vmov	r0, r1, d0
    c074:	bl	6b940 <__aeabi_d2lz>
    c078:	strd	r0, [r7]
    c07c:	add	r4, r4, #8
    c080:	add	r7, r7, #8
    c084:	subs	r6, r6, #1
    c088:	bne	c068 <ReadInt64Data+0x438>
    c08c:	b	def0 <ReadInt64Data+0x22c0>
    c090:	ldr	r0, [r4, #20]
    c094:	cmp	r0, #0
    c098:	beq	c900 <ReadInt64Data+0xcd0>
    c09c:	cmp	r6, #256	; 0x100
    c0a0:	bgt	cf10 <ReadInt64Data+0x12e0>
    c0a4:	ldr	r3, [r4]
    c0a8:	add	r4, sp, #296	; 0x128
    c0ac:	mov	r1, sl
    c0b0:	mov	r2, r6
    c0b4:	mov	r0, r4
    c0b8:	bl	18b8 <fread@plt>
    c0bc:	mov	r9, r0
    c0c0:	cmp	r6, #1
    c0c4:	blt	dd64 <ReadInt64Data+0x2134>
    c0c8:	str	r5, [sp, #24]
    c0cc:	mov	r8, r7
    c0d0:	mov	r5, r7
    c0d4:	mov	r7, r6
    c0d8:	mov	r0, r4
    c0dc:	bl	1b84 <Mat_int64Swap>
    c0e0:	strd	r0, [r5]
    c0e4:	add	r4, r4, #8
    c0e8:	add	r5, r5, #8
    c0ec:	subs	r6, r6, #1
    c0f0:	bne	c0d8 <ReadInt64Data+0x4a8>
    c0f4:	ldr	r4, [sp, #36]	; 0x24
    c0f8:	mov	r6, r7
    c0fc:	mov	r7, r8
    c100:	b	db38 <ReadInt64Data+0x1f08>
    c104:	sub	r1, r6, #256	; 0x100
    c108:	str	sl, [sp, #32]
    c10c:	str	r6, [sp, #8]
    c110:	mov	r9, r7
    c114:	add	r0, r7, #2048	; 0x800
    c118:	mov	r2, #0
    c11c:	mov	r4, #0
    c120:	add	r7, sp, #296	; 0x128
    c124:	add	r5, sp, #256	; 0x100
    c128:	mov	sl, #32
    c12c:	add	r6, sp, #260	; 0x104
    c130:	str	r1, [sp, #12]
    c134:	mov	r1, #256	; 0x100
    c138:	str	r9, [sp, #4]
    c13c:	str	r2, [sp, #28]
    c140:	add	r2, sp, #16
    c144:	stm	r2, {r0, r1, r4}
    c148:	ldr	r0, [sp, #36]	; 0x24
    c14c:	ldr	r1, [sp, #32]
    c150:	mov	r2, #256	; 0x100
    c154:	ldr	r3, [r0]
    c158:	mov	r0, r7
    c15c:	bl	18b8 <fread@plt>
    c160:	mov	r1, r9
    c164:	mov	r2, #0
    c168:	add	r3, r7, r2
    c16c:	add	r2, r2, #4
    c170:	ldrh	r4, [r3]
    c174:	cmp	r2, #256	; 0x100
    c178:	strh	r4, [r8, #24]
    c17c:	add	r4, r1, #16
    c180:	vld1.16	{d16[0]}, [r5 :16]
    c184:	vmovl.s8	q8, d16
    c188:	vmovl.s16	q8, d16
    c18c:	vmovl.s32	q8, d16
    c190:	vst1.64	{d16-d17}, [r1], sl
    c194:	ldrh	r3, [r3, #2]
    c198:	strh	r3, [r8, #28]
    c19c:	vld1.16	{d16[0]}, [r6 :16]
    c1a0:	vmovl.s8	q8, d16
    c1a4:	vmovl.s16	q8, d16
    c1a8:	vmovl.s32	q8, d16
    c1ac:	vst1.64	{d16-d17}, [r4]
    c1b0:	bne	c168 <ReadInt64Data+0x538>
    c1b4:	ldr	r1, [sp, #28]
    c1b8:	ldr	r2, [sp, #24]
    c1bc:	add	r9, r9, #2048	; 0x800
    c1c0:	add	r1, r0, r1
    c1c4:	ldr	r0, [sp, #16]
    c1c8:	add	r4, r2, #256	; 0x100
    c1cc:	ldr	r2, [sp, #12]
    c1d0:	str	r1, [sp, #28]
    c1d4:	ldr	r1, [sp, #20]
    c1d8:	add	r0, r0, #2048	; 0x800
    c1dc:	cmp	r4, r2
    c1e0:	add	r1, r1, #256	; 0x100
    c1e4:	blt	c140 <ReadInt64Data+0x510>
    c1e8:	ldr	r5, [sp, #8]
    c1ec:	cmp	r4, r5
    c1f0:	bge	d8cc <ReadInt64Data+0x1c9c>
    c1f4:	ldr	r0, [sp, #36]	; 0x24
    c1f8:	ldr	sl, [sp, #32]
    c1fc:	sub	r6, r5, r4
    c200:	add	r9, sp, #296	; 0x128
    c204:	mov	r2, r6
    c208:	ldr	r3, [r0]
    c20c:	mov	r0, r9
    c210:	mov	r1, sl
    c214:	bl	18b8 <fread@plt>
    c218:	ldr	r1, [sp, #28]
    c21c:	cmp	r6, #1
    c220:	add	r1, r0, r1
    c224:	str	r1, [sp, #28]
    c228:	blt	df88 <ReadInt64Data+0x2358>
    c22c:	ldr	sl, [sp, #4]
    c230:	mov	lr, #0
    c234:	beq	deb0 <ReadInt64Data+0x2280>
    c238:	bic	lr, r6, #1
    c23c:	mov	r1, #1
    c240:	str	r6, [sp, #36]	; 0x24
    c244:	subs	r2, lr, #2
    c248:	add	r2, r1, r2, lsr #1
    c24c:	and	r0, r2, #1
    c250:	str	r0, [sp, #12]
    c254:	beq	de64 <ReadInt64Data+0x2234>
    c258:	ldr	r0, [sp, #24]
    c25c:	ldr	ip, [sp, #16]
    c260:	add	r6, sp, #248	; 0xf8
    c264:	sub	r2, r5, r0
    c268:	mov	r5, #32
    c26c:	sub	r2, r2, #256	; 0x100
    c270:	bic	r2, r2, #1
    c274:	sub	r2, r2, #2
    c278:	add	r1, r1, r2, lsr #1
    c27c:	mvn	r3, r2, lsr #1
    c280:	mov	r2, #0
    c284:	and	r1, r1, #1
    c288:	add	r3, r3, r1
    c28c:	add	r1, sp, #252	; 0xfc
    c290:	add	r0, r9, r2
    c294:	adds	r3, r3, #2
    c298:	add	r2, r2, #4
    c29c:	ldrh	r7, [r0]
    c2a0:	strh	r7, [r8, #16]
    c2a4:	add	r7, ip, #16
    c2a8:	vld1.16	{d16[0]}, [r6 :16]
    c2ac:	vmovl.s8	q8, d16
    c2b0:	vmovl.s16	q8, d16
    c2b4:	vmovl.s32	q8, d16
    c2b8:	vst1.64	{d16-d17}, [ip], r5
    c2bc:	ldrh	r0, [r0, #2]
    c2c0:	strh	r0, [r8, #20]
    c2c4:	vld1.16	{d16[0]}, [r1 :16]
    c2c8:	vmovl.s8	q8, d16
    c2cc:	vmovl.s16	q8, d16
    c2d0:	vmovl.s32	q8, d16
    c2d4:	vst1.64	{d16-d17}, [r7]
    c2d8:	bne	c290 <ReadInt64Data+0x660>
    c2dc:	b	de68 <ReadInt64Data+0x2238>
    c2e0:	sub	r1, r6, #256	; 0x100
    c2e4:	str	sl, [sp, #32]
    c2e8:	str	r6, [sp, #8]
    c2ec:	mov	r6, r7
    c2f0:	add	r0, r7, #2048	; 0x800
    c2f4:	mov	r2, #0
    c2f8:	mov	r4, #0
    c2fc:	add	r7, sp, #296	; 0x128
    c300:	add	r5, sp, #288	; 0x120
    c304:	mov	sl, #32
    c308:	add	r9, sp, #292	; 0x124
    c30c:	str	r1, [sp, #12]
    c310:	mov	r1, #256	; 0x100
    c314:	str	r6, [sp, #4]
    c318:	str	r2, [sp, #28]
    c31c:	add	r2, sp, #16
    c320:	stm	r2, {r0, r1, r4}
    c324:	ldr	r0, [sp, #36]	; 0x24
    c328:	ldr	r1, [sp, #32]
    c32c:	mov	r2, #256	; 0x100
    c330:	ldr	r3, [r0]
    c334:	mov	r0, r7
    c338:	bl	18b8 <fread@plt>
    c33c:	mov	r1, r6
    c340:	mov	r2, #0
    c344:	add	r3, r7, r2
    c348:	add	r2, r2, #4
    c34c:	ldrh	r4, [r3]
    c350:	cmp	r2, #256	; 0x100
    c354:	strh	r4, [r8, #56]	; 0x38
    c358:	add	r4, r1, #16
    c35c:	vld1.16	{d16[0]}, [r5 :16]
    c360:	vmovl.u8	q8, d16
    c364:	vmovl.u16	q8, d16
    c368:	vmovl.u32	q8, d16
    c36c:	vst1.64	{d16-d17}, [r1], sl
    c370:	ldrh	r3, [r3, #2]
    c374:	strh	r3, [r8, #60]	; 0x3c
    c378:	vld1.16	{d16[0]}, [r9 :16]
    c37c:	vmovl.u8	q8, d16
    c380:	vmovl.u16	q8, d16
    c384:	vmovl.u32	q8, d16
    c388:	vst1.64	{d16-d17}, [r4]
    c38c:	bne	c344 <ReadInt64Data+0x714>
    c390:	ldr	r1, [sp, #28]
    c394:	ldr	r2, [sp, #24]
    c398:	add	r6, r6, #2048	; 0x800
    c39c:	add	r1, r0, r1
    c3a0:	ldr	r0, [sp, #16]
    c3a4:	add	r4, r2, #256	; 0x100
    c3a8:	ldr	r2, [sp, #12]
    c3ac:	str	r1, [sp, #28]
    c3b0:	ldr	r1, [sp, #20]
    c3b4:	add	r0, r0, #2048	; 0x800
    c3b8:	cmp	r4, r2
    c3bc:	add	r1, r1, #256	; 0x100
    c3c0:	blt	c31c <ReadInt64Data+0x6ec>
    c3c4:	ldr	r5, [sp, #8]
    c3c8:	cmp	r4, r5
    c3cc:	bge	d8cc <ReadInt64Data+0x1c9c>
    c3d0:	ldr	r0, [sp, #36]	; 0x24
    c3d4:	ldr	sl, [sp, #32]
    c3d8:	sub	r6, r5, r4
    c3dc:	add	r9, sp, #296	; 0x128
    c3e0:	mov	r2, r6
    c3e4:	ldr	r3, [r0]
    c3e8:	mov	r0, r9
    c3ec:	mov	r1, sl
    c3f0:	bl	18b8 <fread@plt>
    c3f4:	ldr	r1, [sp, #28]
    c3f8:	cmp	r6, #1
    c3fc:	add	r1, r0, r1
    c400:	str	r1, [sp, #28]
    c404:	blt	df88 <ReadInt64Data+0x2358>
    c408:	ldr	r7, [sp, #4]
    c40c:	mov	r1, #0
    c410:	mov	lr, #0
    c414:	beq	df50 <ReadInt64Data+0x2320>
    c418:	bic	lr, r6, #1
    c41c:	mov	r0, #1
    c420:	str	r6, [sp, #36]	; 0x24
    c424:	subs	r2, lr, #2
    c428:	add	r2, r0, r2, lsr #1
    c42c:	and	r2, r2, #1
    c430:	str	r2, [sp, #12]
    c434:	beq	defc <ReadInt64Data+0x22cc>
    c438:	ldr	r2, [sp, #24]
    c43c:	ldr	ip, [sp, #16]
    c440:	add	sl, sp, #280	; 0x118
    c444:	sub	r2, r5, r2
    c448:	sub	r2, r2, #256	; 0x100
    c44c:	bic	r2, r2, #1
    c450:	sub	r2, r2, #2
    c454:	add	r0, r0, r2, lsr #1
    c458:	mvn	r3, r2, lsr #1
    c45c:	mov	r2, #32
    c460:	and	r0, r0, #1
    c464:	add	r6, r3, r0
    c468:	mov	r3, #0
    c46c:	add	r0, sp, #284	; 0x11c
    c470:	add	r7, r9, r3
    c474:	adds	r6, r6, #2
    c478:	add	r3, r3, #4
    c47c:	ldrh	r5, [r7]
    c480:	strh	r5, [r8, #48]	; 0x30
    c484:	add	r5, ip, #16
    c488:	vld1.16	{d16[0]}, [sl :16]
    c48c:	vmovl.u8	q8, d16
    c490:	vmovl.u16	q8, d16
    c494:	vmovl.u32	q8, d16
    c498:	vst1.64	{d16-d17}, [ip], r2
    c49c:	ldrh	r7, [r7, #2]
    c4a0:	strh	r7, [r8, #52]	; 0x34
    c4a4:	vld1.16	{d16[0]}, [r0 :16]
    c4a8:	vmovl.u8	q8, d16
    c4ac:	vmovl.u16	q8, d16
    c4b0:	vmovl.u32	q8, d16
    c4b4:	vst1.64	{d16-d17}, [r5]
    c4b8:	bne	c470 <ReadInt64Data+0x840>
    c4bc:	b	df00 <ReadInt64Data+0x22d0>
    c4c0:	cmp	r6, #256	; 0x100
    c4c4:	bgt	d028 <ReadInt64Data+0x13f8>
    c4c8:	ldr	r3, [r4]
    c4cc:	add	r4, sp, #296	; 0x128
    c4d0:	mov	r1, sl
    c4d4:	mov	r2, r6
    c4d8:	mov	r0, r4
    c4dc:	bl	18b8 <fread@plt>
    c4e0:	mov	r9, r0
    c4e4:	cmp	r6, #1
    c4e8:	blt	def0 <ReadInt64Data+0x22c0>
    c4ec:	mov	lr, #0
    c4f0:	beq	dfd8 <ReadInt64Data+0x23a8>
    c4f4:	bic	lr, r6, #1
    c4f8:	mov	r2, #1
    c4fc:	str	sl, [sp, #32]
    c500:	str	r6, [sp, #8]
    c504:	subs	r1, lr, #2
    c508:	add	r1, r2, r1, lsr #1
    c50c:	and	ip, r1, #1
    c510:	beq	df90 <ReadInt64Data+0x2360>
    c514:	sub	r3, r1, ip
    c518:	mov	r1, #0
    c51c:	add	r8, sp, #172	; 0xac
    c520:	mov	r6, #32
    c524:	add	r5, sp, #176	; 0xb0
    c528:	mov	sl, r7
    c52c:	mov	r2, r7
    c530:	ldr	r0, [r4]
    c534:	subs	r3, r3, #2
    c538:	add	r1, r1, #4
    c53c:	str	r0, [sp, #172]	; 0xac
    c540:	add	r0, r2, #16
    c544:	vld1.32	{d16[0]}, [r8 :32]
    c548:	vmovl.s16	q8, d16
    c54c:	vmovl.s32	q8, d16
    c550:	vst1.64	{d16-d17}, [r2], r6
    c554:	ldr	r7, [r4, #4]
    c558:	add	r4, r4, #8
    c55c:	str	r7, [sp, #176]	; 0xb0
    c560:	vld1.32	{d16[0]}, [r5 :32]
    c564:	vmovl.s16	q8, d16
    c568:	vmovl.s32	q8, d16
    c56c:	vst1.64	{d16-d17}, [r0]
    c570:	bne	c530 <ReadInt64Data+0x900>
    c574:	b	df98 <ReadInt64Data+0x2368>
    c578:	cmp	r6, #256	; 0x100
    c57c:	bgt	d1e0 <ReadInt64Data+0x15b0>
    c580:	ldr	r3, [r4]
    c584:	add	r4, sp, #296	; 0x128
    c588:	mov	r1, sl
    c58c:	mov	r2, r6
    c590:	mov	r0, r4
    c594:	bl	18b8 <fread@plt>
    c598:	mov	r9, r0
    c59c:	cmp	r6, #1
    c5a0:	blt	def0 <ReadInt64Data+0x22c0>
    c5a4:	mov	r1, #0
    c5a8:	mov	lr, #0
    c5ac:	beq	e04c <ReadInt64Data+0x241c>
    c5b0:	bic	lr, r6, #1
    c5b4:	mov	r2, #1
    c5b8:	str	sl, [sp, #32]
    c5bc:	mov	sl, r7
    c5c0:	str	r9, [sp, #28]
    c5c4:	str	r6, [sp, #8]
    c5c8:	subs	r0, lr, #2
    c5cc:	add	r0, r2, r0, lsr #1
    c5d0:	and	ip, r0, #1
    c5d4:	beq	e004 <ReadInt64Data+0x23d4>
    c5d8:	sub	r7, r0, ip
    c5dc:	mov	r2, #0
    c5e0:	add	r8, sp, #204	; 0xcc
    c5e4:	mov	r9, #32
    c5e8:	add	r3, sp, #208	; 0xd0
    c5ec:	mov	r0, sl
    c5f0:	ldr	r6, [r4]
    c5f4:	subs	r7, r7, #2
    c5f8:	add	r2, r2, #4
    c5fc:	str	r6, [sp, #204]	; 0xcc
    c600:	add	r6, r0, #16
    c604:	vld1.32	{d16[0]}, [r8 :32]
    c608:	vmovl.u16	q8, d16
    c60c:	vmovl.u32	q8, d16
    c610:	vst1.64	{d16-d17}, [r0], r9
    c614:	ldr	r5, [r4, #4]
    c618:	add	r4, r4, #8
    c61c:	str	r5, [sp, #208]	; 0xd0
    c620:	vld1.32	{d16[0]}, [r3 :32]
    c624:	vmovl.u16	q8, d16
    c628:	vmovl.u32	q8, d16
    c62c:	vst1.64	{d16-d17}, [r6]
    c630:	bne	c5f0 <ReadInt64Data+0x9c0>
    c634:	b	e008 <ReadInt64Data+0x23d8>
    c638:	cmp	r6, #256	; 0x100
    c63c:	bgt	d3a0 <ReadInt64Data+0x1770>
    c640:	ldr	r3, [r4]
    c644:	add	r4, sp, #296	; 0x128
    c648:	mov	r1, sl
    c64c:	mov	r2, r6
    c650:	mov	r0, r4
    c654:	bl	18b8 <fread@plt>
    c658:	mov	r9, r0
    c65c:	cmp	r6, #1
    c660:	blt	def0 <ReadInt64Data+0x22c0>
    c664:	mov	lr, #0
    c668:	beq	e144 <ReadInt64Data+0x2514>
    c66c:	bic	lr, r6, #1
    c670:	mov	r2, #1
    c674:	str	sl, [sp, #32]
    c678:	mov	sl, r7
    c67c:	str	r6, [sp, #8]
    c680:	str	r9, [sp, #28]
    c684:	subs	r1, lr, #2
    c688:	add	r1, r2, r1, lsr #1
    c68c:	and	ip, r1, #1
    c690:	beq	e0f4 <ReadInt64Data+0x24c4>
    c694:	sub	r3, r1, ip
    c698:	mov	r1, #0
    c69c:	add	r8, sp, #48	; 0x30
    c6a0:	mov	r9, #32
    c6a4:	add	r5, sp, #56	; 0x38
    c6a8:	mov	r2, sl
    c6ac:	ldm	r4, {r0, r7}
    c6b0:	str	r7, [sp, #52]	; 0x34
    c6b4:	subs	r3, r3, #2
    c6b8:	add	r1, r1, #4
    c6bc:	str	r0, [sp, #48]	; 0x30
    c6c0:	add	r0, r2, #16
    c6c4:	vld1.32	{d16}, [r8 :64]
    c6c8:	vmovl.s32	q8, d16
    c6cc:	vst1.64	{d16-d17}, [r2], r9
    c6d0:	ldr	r7, [r4, #8]
    c6d4:	ldr	r6, [r4, #12]
    c6d8:	add	r4, r4, #16
    c6dc:	str	r6, [sp, #60]	; 0x3c
    c6e0:	str	r7, [sp, #56]	; 0x38
    c6e4:	vld1.32	{d16}, [r5 :64]
    c6e8:	vmovl.s32	q8, d16
    c6ec:	vst1.64	{d16-d17}, [r0]
    c6f0:	bne	c6ac <ReadInt64Data+0xa7c>
    c6f4:	b	e0f8 <ReadInt64Data+0x24c8>
    c6f8:	cmp	r6, #256	; 0x100
    c6fc:	bgt	d578 <ReadInt64Data+0x1948>
    c700:	ldr	r3, [r4]
    c704:	add	r4, sp, #296	; 0x128
    c708:	mov	r1, sl
    c70c:	mov	r2, r6
    c710:	mov	r0, r4
    c714:	bl	18b8 <fread@plt>
    c718:	mov	r9, r0
    c71c:	cmp	r6, #1
    c720:	blt	def0 <ReadInt64Data+0x22c0>
    c724:	mov	r1, #0
    c728:	mov	lr, #0
    c72c:	beq	e0c8 <ReadInt64Data+0x2498>
    c730:	bic	lr, r6, #1
    c734:	mov	r2, #1
    c738:	str	r7, [sp, #4]
    c73c:	str	r9, [sp, #28]
    c740:	str	r6, [sp, #8]
    c744:	str	sl, [sp, #32]
    c748:	subs	r0, lr, #2
    c74c:	add	r0, r2, r0, lsr #1
    c750:	and	ip, r0, #1
    c754:	beq	e078 <ReadInt64Data+0x2448>
    c758:	sub	r7, r0, ip
    c75c:	ldr	r0, [sp, #4]
    c760:	mov	r2, #0
    c764:	add	r8, sp, #112	; 0x70
    c768:	mov	r9, #32
    c76c:	add	sl, sp, #120	; 0x78
    c770:	ldr	r6, [r4]
    c774:	ldr	r5, [r4, #4]
    c778:	subs	r7, r7, #2
    c77c:	add	r2, r2, #4
    c780:	str	r5, [sp, #116]	; 0x74
    c784:	str	r6, [sp, #112]	; 0x70
    c788:	add	r5, r0, #16
    c78c:	vld1.32	{d16}, [r8 :64]
    c790:	vmovl.u32	q8, d16
    c794:	vst1.64	{d16-d17}, [r0], r9
    c798:	ldr	r6, [r4, #8]
    c79c:	ldr	r3, [r4, #12]
    c7a0:	add	r4, r4, #16
    c7a4:	str	r3, [sp, #124]	; 0x7c
    c7a8:	str	r6, [sp, #120]	; 0x78
    c7ac:	vld1.32	{d16}, [sl :64]
    c7b0:	vmovl.u32	q8, d16
    c7b4:	vst1.64	{d16-d17}, [r5]
    c7b8:	bne	c770 <ReadInt64Data+0xb40>
    c7bc:	b	e07c <ReadInt64Data+0x244c>
    c7c0:	cmp	r6, #256	; 0x100
    c7c4:	bgt	d75c <ReadInt64Data+0x1b2c>
    c7c8:	ldr	r3, [r4]
    c7cc:	add	r8, sp, #296	; 0x128
    c7d0:	mov	r1, sl
    c7d4:	mov	r2, r6
    c7d8:	mov	r0, r8
    c7dc:	bl	18b8 <fread@plt>
    c7e0:	mov	r9, r0
    c7e4:	cmp	r6, #1
    c7e8:	blt	def0 <ReadInt64Data+0x22c0>
    c7ec:	str	sl, [sp, #32]
    c7f0:	str	r9, [sp, #28]
    c7f4:	mov	sl, r7
    c7f8:	and	r9, r6, #1
    c7fc:	mov	r5, #0
    c800:	beq	c840 <ReadInt64Data+0xc10>
    c804:	sub	r7, r6, r9
    c808:	add	r4, r8, #4
    c80c:	mov	r5, #0
    c810:	mov	r6, sl
    c814:	ldr	r0, [r4, #-4]
    c818:	bl	6b914 <__aeabi_f2lz>
    c81c:	strd	r0, [r6]
    c820:	ldr	r0, [r4]
    c824:	bl	6b914 <__aeabi_f2lz>
    c828:	add	r5, r5, #2
    c82c:	strd	r0, [r6, #8]
    c830:	add	r6, r6, #16
    c834:	add	r4, r4, #8
    c838:	cmp	r7, r5
    c83c:	bne	c814 <ReadInt64Data+0xbe4>
    c840:	cmp	r9, #0
    c844:	beq	dee8 <ReadInt64Data+0x22b8>
    c848:	ldr	r0, [r8, r5, lsl #2]
    c84c:	bl	6b914 <__aeabi_f2lz>
    c850:	b	c8f4 <ReadInt64Data+0xcc4>
    c854:	cmp	r6, #256	; 0x100
    c858:	bgt	d8d8 <ReadInt64Data+0x1ca8>
    c85c:	ldr	r3, [r4]
    c860:	add	r8, sp, #296	; 0x128
    c864:	mov	r1, sl
    c868:	mov	r2, r6
    c86c:	mov	r0, r8
    c870:	bl	18b8 <fread@plt>
    c874:	mov	r9, r0
    c878:	cmp	r6, #1
    c87c:	blt	def0 <ReadInt64Data+0x22c0>
    c880:	str	sl, [sp, #32]
    c884:	str	r9, [sp, #28]
    c888:	mov	sl, r7
    c88c:	and	r9, r6, #1
    c890:	mov	r5, #0
    c894:	beq	c8dc <ReadInt64Data+0xcac>
    c898:	sub	r7, r6, r9
    c89c:	add	r4, r8, #8
    c8a0:	mov	r5, #0
    c8a4:	mov	r6, sl
    c8a8:	vldr	d16, [r4, #-8]
    c8ac:	vmov	r0, r1, d16
    c8b0:	bl	6b940 <__aeabi_d2lz>
    c8b4:	strd	r0, [r6]
    c8b8:	vldr	d16, [r4]
    c8bc:	vmov	r0, r1, d16
    c8c0:	bl	6b940 <__aeabi_d2lz>
    c8c4:	add	r5, r5, #2
    c8c8:	strd	r0, [r6, #8]
    c8cc:	add	r6, r6, #16
    c8d0:	add	r4, r4, #16
    c8d4:	cmp	r7, r5
    c8d8:	bne	c8a8 <ReadInt64Data+0xc78>
    c8dc:	cmp	r9, #0
    c8e0:	beq	dee8 <ReadInt64Data+0x22b8>
    c8e4:	add	r0, r8, r5, lsl #3
    c8e8:	vldr	d16, [r0]
    c8ec:	vmov	r0, r1, d16
    c8f0:	bl	6b940 <__aeabi_d2lz>
    c8f4:	str	r0, [sl, r5, lsl #3]!
    c8f8:	str	r1, [sl, #4]
    c8fc:	b	dee8 <ReadInt64Data+0x22b8>
    c900:	cmp	r6, #256	; 0x100
    c904:	bgt	da64 <ReadInt64Data+0x1e34>
    c908:	ldr	r3, [r4]
    c90c:	add	r0, sp, #296	; 0x128
    c910:	mov	r1, sl
    c914:	mov	r2, r6
    c918:	bl	18b8 <fread@plt>
    c91c:	mov	r9, r0
    c920:	cmp	r6, #1
    c924:	blt	db3c <ReadInt64Data+0x1f0c>
    c928:	lsl	r2, r6, #3
    c92c:	add	r1, sp, #296	; 0x128
    c930:	mov	r0, r7
    c934:	bl	181c <memcpy@plt>
    c938:	cmp	r5, #13
    c93c:	beq	db44 <ReadInt64Data+0x1f14>
    c940:	b	def0 <ReadInt64Data+0x22c0>
    c944:	sub	r0, r6, #256	; 0x100
    c948:	mov	r8, r7
    c94c:	add	r1, r7, #2048	; 0x800
    c950:	mov	r9, #0
    c954:	str	sl, [sp, #32]
    c958:	str	r6, [sp, #8]
    c95c:	str	r0, [sp, #28]
    c960:	mov	r0, #0
    c964:	mov	r5, r1
    c968:	ldr	r3, [r4]
    c96c:	ldr	r1, [sp, #32]
    c970:	add	r4, sp, #296	; 0x128
    c974:	mov	sl, r0
    c978:	mov	r2, #256	; 0x100
    c97c:	mov	r0, r4
    c980:	bl	18b8 <fread@plt>
    c984:	mov	r7, r0
    c988:	mov	r6, #0
    c98c:	mov	r0, r4
    c990:	bl	1c20 <Mat_int16Swap>
    c994:	mov	r1, r8
    c998:	add	r4, r4, #2
    c99c:	str	r0, [r1, r6]!
    c9a0:	add	r6, r6, #8
    c9a4:	asr	r0, r0, #31
    c9a8:	cmp	r6, #2048	; 0x800
    c9ac:	str	r0, [r1, #4]
    c9b0:	bne	c98c <ReadInt64Data+0xd5c>
    c9b4:	ldr	r2, [sp, #28]
    c9b8:	ldr	r4, [sp, #36]	; 0x24
    c9bc:	add	r0, sl, #256	; 0x100
    c9c0:	add	r9, r7, r9
    c9c4:	add	r8, r8, #2048	; 0x800
    c9c8:	add	r1, r5, #2048	; 0x800
    c9cc:	cmp	r0, r2
    c9d0:	blt	c964 <ReadInt64Data+0xd34>
    c9d4:	ldr	r6, [sp, #8]
    c9d8:	cmp	r0, r6
    c9dc:	bge	deec <ReadInt64Data+0x22bc>
    c9e0:	ldr	r3, [r4]
    c9e4:	ldr	r1, [sp, #32]
    c9e8:	sub	r7, r6, r0
    c9ec:	add	r4, sp, #296	; 0x128
    c9f0:	mov	r0, r4
    c9f4:	mov	r2, r7
    c9f8:	bl	18b8 <fread@plt>
    c9fc:	add	r9, r0, r9
    ca00:	cmp	r7, #1
    ca04:	blt	deec <ReadInt64Data+0x22bc>
    ca08:	sub	r0, r6, sl
    ca0c:	sub	r6, r0, #256	; 0x100
    ca10:	mov	r0, r4
    ca14:	bl	1c20 <Mat_int16Swap>
    ca18:	asr	r1, r0, #31
    ca1c:	add	r4, r4, #2
    ca20:	subs	r6, r6, #1
    ca24:	strd	r0, [r5]
    ca28:	add	r5, r5, #8
    ca2c:	bne	ca10 <ReadInt64Data+0xde0>
    ca30:	b	deec <ReadInt64Data+0x22bc>
    ca34:	sub	r1, r6, #256	; 0x100
    ca38:	str	sl, [sp, #32]
    ca3c:	str	r6, [sp, #8]
    ca40:	mov	sl, r7
    ca44:	add	r0, r7, #2048	; 0x800
    ca48:	mov	r6, #0
    ca4c:	mov	r9, #0
    ca50:	str	r1, [sp, #24]
    ca54:	mov	r1, #0
    ca58:	str	r1, [sp, #28]
    ca5c:	ldr	r3, [r4]
    ca60:	ldr	r1, [sp, #32]
    ca64:	add	r4, sp, #296	; 0x128
    ca68:	mov	r5, r0
    ca6c:	mov	r2, #256	; 0x100
    ca70:	mov	r8, r9
    ca74:	mov	r0, r4
    ca78:	bl	18b8 <fread@plt>
    ca7c:	mov	r7, r0
    ca80:	mov	r9, #0
    ca84:	mov	r0, r4
    ca88:	bl	1c34 <Mat_uint16Swap>
    ca8c:	mov	r1, sl
    ca90:	add	r4, r4, #2
    ca94:	str	r0, [r1, r9]!
    ca98:	add	r9, r9, #8
    ca9c:	cmp	r9, #2048	; 0x800
    caa0:	str	r6, [r1, #4]
    caa4:	bne	ca84 <ReadInt64Data+0xe54>
    caa8:	mov	r9, r8
    caac:	add	r9, r7, r8
    cab0:	ldr	r7, [sp, #28]
    cab4:	ldr	r2, [sp, #24]
    cab8:	ldr	r4, [sp, #36]	; 0x24
    cabc:	add	sl, sl, #2048	; 0x800
    cac0:	add	r0, r5, #2048	; 0x800
    cac4:	add	r1, r7, #256	; 0x100
    cac8:	cmp	r1, r2
    cacc:	blt	ca58 <ReadInt64Data+0xe28>
    cad0:	ldr	r6, [sp, #8]
    cad4:	cmp	r1, r6
    cad8:	bge	deec <ReadInt64Data+0x22bc>
    cadc:	sub	r8, r6, r1
    cae0:	ldr	r3, [r4]
    cae4:	ldr	r1, [sp, #32]
    cae8:	add	r4, sp, #296	; 0x128
    caec:	mov	r0, r4
    caf0:	mov	r2, r8
    caf4:	bl	18b8 <fread@plt>
    caf8:	add	r9, r0, r9
    cafc:	cmp	r8, #1
    cb00:	blt	deec <ReadInt64Data+0x22bc>
    cb04:	sub	r0, r6, r7
    cb08:	mov	r7, #0
    cb0c:	sub	r6, r0, #256	; 0x100
    cb10:	mov	r0, r4
    cb14:	bl	1c34 <Mat_uint16Swap>
    cb18:	stm	r5, {r0, r7}
    cb1c:	add	r5, r5, #8
    cb20:	add	r4, r4, #2
    cb24:	subs	r6, r6, #1
    cb28:	bne	cb10 <ReadInt64Data+0xee0>
    cb2c:	b	deec <ReadInt64Data+0x22bc>
    cb30:	sub	r0, r6, #256	; 0x100
    cb34:	mov	r8, r7
    cb38:	add	r1, r7, #2048	; 0x800
    cb3c:	mov	r9, #0
    cb40:	str	sl, [sp, #32]
    cb44:	str	r6, [sp, #8]
    cb48:	str	r0, [sp, #28]
    cb4c:	mov	r0, #0
    cb50:	mov	r5, r1
    cb54:	ldr	r3, [r4]
    cb58:	ldr	r1, [sp, #32]
    cb5c:	add	r4, sp, #296	; 0x128
    cb60:	mov	sl, r0
    cb64:	mov	r2, #256	; 0x100
    cb68:	mov	r0, r4
    cb6c:	bl	18b8 <fread@plt>
    cb70:	mov	r7, r0
    cb74:	mov	r6, #0
    cb78:	mov	r0, r4
    cb7c:	bl	1bf8 <Mat_int32Swap>
    cb80:	mov	r1, r8
    cb84:	add	r4, r4, #4
    cb88:	str	r0, [r1, r6]!
    cb8c:	add	r6, r6, #8
    cb90:	asr	r0, r0, #31
    cb94:	cmp	r6, #2048	; 0x800
    cb98:	str	r0, [r1, #4]
    cb9c:	bne	cb78 <ReadInt64Data+0xf48>
    cba0:	ldr	r2, [sp, #28]
    cba4:	ldr	r4, [sp, #36]	; 0x24
    cba8:	add	r0, sl, #256	; 0x100
    cbac:	add	r9, r7, r9
    cbb0:	add	r8, r8, #2048	; 0x800
    cbb4:	add	r1, r5, #2048	; 0x800
    cbb8:	cmp	r0, r2
    cbbc:	blt	cb50 <ReadInt64Data+0xf20>
    cbc0:	ldr	r6, [sp, #8]
    cbc4:	cmp	r0, r6
    cbc8:	bge	deec <ReadInt64Data+0x22bc>
    cbcc:	ldr	r3, [r4]
    cbd0:	ldr	r1, [sp, #32]
    cbd4:	sub	r7, r6, r0
    cbd8:	add	r4, sp, #296	; 0x128
    cbdc:	mov	r0, r4
    cbe0:	mov	r2, r7
    cbe4:	bl	18b8 <fread@plt>
    cbe8:	add	r9, r0, r9
    cbec:	cmp	r7, #1
    cbf0:	blt	deec <ReadInt64Data+0x22bc>
    cbf4:	sub	r0, r6, sl
    cbf8:	sub	r6, r0, #256	; 0x100
    cbfc:	mov	r0, r4
    cc00:	bl	1bf8 <Mat_int32Swap>
    cc04:	asr	r1, r0, #31
    cc08:	add	r4, r4, #4
    cc0c:	subs	r6, r6, #1
    cc10:	strd	r0, [r5]
    cc14:	add	r5, r5, #8
    cc18:	bne	cbfc <ReadInt64Data+0xfcc>
    cc1c:	b	deec <ReadInt64Data+0x22bc>
    cc20:	sub	r1, r6, #256	; 0x100
    cc24:	str	sl, [sp, #32]
    cc28:	str	r6, [sp, #8]
    cc2c:	mov	sl, r7
    cc30:	add	r0, r7, #2048	; 0x800
    cc34:	mov	r6, #0
    cc38:	mov	r9, #0
    cc3c:	str	r1, [sp, #24]
    cc40:	mov	r1, #0
    cc44:	str	r1, [sp, #28]
    cc48:	ldr	r3, [r4]
    cc4c:	ldr	r1, [sp, #32]
    cc50:	add	r4, sp, #296	; 0x128
    cc54:	mov	r5, r0
    cc58:	mov	r2, #256	; 0x100
    cc5c:	mov	r8, r9
    cc60:	mov	r0, r4
    cc64:	bl	18b8 <fread@plt>
    cc68:	mov	r7, r0
    cc6c:	mov	r9, #0
    cc70:	mov	r0, r4
    cc74:	bl	1c0c <Mat_uint32Swap>
    cc78:	mov	r1, sl
    cc7c:	add	r4, r4, #4
    cc80:	str	r0, [r1, r9]!
    cc84:	add	r9, r9, #8
    cc88:	cmp	r9, #2048	; 0x800
    cc8c:	str	r6, [r1, #4]
    cc90:	bne	cc70 <ReadInt64Data+0x1040>
    cc94:	mov	r9, r8
    cc98:	add	r9, r7, r8
    cc9c:	ldr	r7, [sp, #28]
    cca0:	ldr	r2, [sp, #24]
    cca4:	ldr	r4, [sp, #36]	; 0x24
    cca8:	add	sl, sl, #2048	; 0x800
    ccac:	add	r0, r5, #2048	; 0x800
    ccb0:	add	r1, r7, #256	; 0x100
    ccb4:	cmp	r1, r2
    ccb8:	blt	cc44 <ReadInt64Data+0x1014>
    ccbc:	ldr	r6, [sp, #8]
    ccc0:	cmp	r1, r6
    ccc4:	bge	deec <ReadInt64Data+0x22bc>
    ccc8:	sub	r8, r6, r1
    cccc:	ldr	r3, [r4]
    ccd0:	ldr	r1, [sp, #32]
    ccd4:	add	r4, sp, #296	; 0x128
    ccd8:	mov	r0, r4
    ccdc:	mov	r2, r8
    cce0:	bl	18b8 <fread@plt>
    cce4:	add	r9, r0, r9
    cce8:	cmp	r8, #1
    ccec:	blt	deec <ReadInt64Data+0x22bc>
    ccf0:	sub	r0, r6, r7
    ccf4:	mov	r7, #0
    ccf8:	sub	r6, r0, #256	; 0x100
    ccfc:	mov	r0, r4
    cd00:	bl	1c0c <Mat_uint32Swap>
    cd04:	stm	r5, {r0, r7}
    cd08:	add	r5, r5, #8
    cd0c:	add	r4, r4, #4
    cd10:	subs	r6, r6, #1
    cd14:	bne	ccfc <ReadInt64Data+0x10cc>
    cd18:	b	deec <ReadInt64Data+0x22bc>
    cd1c:	sub	r0, r6, #256	; 0x100
    cd20:	mov	r8, r7
    cd24:	add	r1, r7, #2048	; 0x800
    cd28:	mov	r9, #0
    cd2c:	str	sl, [sp, #32]
    cd30:	str	r6, [sp, #8]
    cd34:	str	r0, [sp, #28]
    cd38:	mov	r0, #0
    cd3c:	mov	r5, r1
    cd40:	ldr	r3, [r4]
    cd44:	ldr	r1, [sp, #32]
    cd48:	add	r4, sp, #296	; 0x128
    cd4c:	mov	sl, r0
    cd50:	mov	r2, #256	; 0x100
    cd54:	mov	r0, r4
    cd58:	bl	18b8 <fread@plt>
    cd5c:	mov	r7, r0
    cd60:	mov	r6, #0
    cd64:	mov	r0, r4
    cd68:	bl	1c4c <Mat_floatSwap>
    cd6c:	vmov	r0, s0
    cd70:	bl	6b914 <__aeabi_f2lz>
    cd74:	mov	r2, r8
    cd78:	add	r4, r4, #4
    cd7c:	str	r0, [r2, r6]!
    cd80:	add	r6, r6, #8
    cd84:	cmp	r6, #2048	; 0x800
    cd88:	str	r1, [r2, #4]
    cd8c:	bne	cd64 <ReadInt64Data+0x1134>
    cd90:	ldr	r2, [sp, #28]
    cd94:	ldr	r4, [sp, #36]	; 0x24
    cd98:	add	r0, sl, #256	; 0x100
    cd9c:	add	r9, r7, r9
    cda0:	add	r8, r8, #2048	; 0x800
    cda4:	add	r1, r5, #2048	; 0x800
    cda8:	cmp	r0, r2
    cdac:	blt	cd3c <ReadInt64Data+0x110c>
    cdb0:	ldr	r7, [sp, #8]
    cdb4:	cmp	r0, r7
    cdb8:	bge	deec <ReadInt64Data+0x22bc>
    cdbc:	ldr	r3, [r4]
    cdc0:	ldr	r1, [sp, #32]
    cdc4:	sub	r6, r7, r0
    cdc8:	add	r4, sp, #296	; 0x128
    cdcc:	mov	r0, r4
    cdd0:	mov	r2, r6
    cdd4:	bl	18b8 <fread@plt>
    cdd8:	add	r9, r0, r9
    cddc:	cmp	r6, #1
    cde0:	blt	deec <ReadInt64Data+0x22bc>
    cde4:	sub	r0, r7, sl
    cde8:	sub	r6, r0, #256	; 0x100
    cdec:	mov	r0, r4
    cdf0:	bl	1c4c <Mat_floatSwap>
    cdf4:	vmov	r0, s0
    cdf8:	bl	6b914 <__aeabi_f2lz>
    cdfc:	strd	r0, [r5]
    ce00:	add	r5, r5, #8
    ce04:	add	r4, r4, #4
    ce08:	subs	r6, r6, #1
    ce0c:	bne	cdec <ReadInt64Data+0x11bc>
    ce10:	b	deec <ReadInt64Data+0x22bc>
    ce14:	sub	r0, r6, #256	; 0x100
    ce18:	mov	r9, r7
    ce1c:	add	r1, r7, #2048	; 0x800
    ce20:	add	r4, sp, #296	; 0x128
    ce24:	mov	r5, #0
    ce28:	str	sl, [sp, #32]
    ce2c:	str	r6, [sp, #8]
    ce30:	str	r0, [sp, #28]
    ce34:	mov	r0, #0
    ce38:	mov	r8, r0
    ce3c:	ldr	r0, [sp, #36]	; 0x24
    ce40:	mov	sl, r1
    ce44:	ldr	r1, [sp, #32]
    ce48:	mov	r2, #256	; 0x100
    ce4c:	ldr	r3, [r0]
    ce50:	mov	r0, r4
    ce54:	bl	18b8 <fread@plt>
    ce58:	mov	r7, r0
    ce5c:	mov	r6, #0
    ce60:	add	r0, r4, r6
    ce64:	bl	1c90 <Mat_doubleSwap>
    ce68:	vmov	r0, r1, d0
    ce6c:	bl	6b940 <__aeabi_d2lz>
    ce70:	mov	r2, r9
    ce74:	str	r0, [r2, r6]!
    ce78:	add	r6, r6, #8
    ce7c:	cmp	r6, #2048	; 0x800
    ce80:	str	r1, [r2, #4]
    ce84:	bne	ce60 <ReadInt64Data+0x1230>
    ce88:	ldr	r2, [sp, #28]
    ce8c:	add	r0, r8, #256	; 0x100
    ce90:	add	r5, r7, r5
    ce94:	add	r9, r9, #2048	; 0x800
    ce98:	add	r1, sl, #2048	; 0x800
    ce9c:	cmp	r0, r2
    cea0:	blt	ce38 <ReadInt64Data+0x1208>
    cea4:	ldr	r7, [sp, #8]
    cea8:	cmp	r0, r7
    ceac:	bge	db20 <ReadInt64Data+0x1ef0>
    ceb0:	sub	r6, r7, r0
    ceb4:	ldr	r0, [sp, #36]	; 0x24
    ceb8:	ldr	r1, [sp, #32]
    cebc:	add	r4, sp, #296	; 0x128
    cec0:	mov	r2, r6
    cec4:	ldr	r3, [r0]
    cec8:	mov	r0, r4
    cecc:	bl	18b8 <fread@plt>
    ced0:	mov	r9, r5
    ced4:	add	r9, r0, r5
    ced8:	cmp	r6, #1
    cedc:	blt	deec <ReadInt64Data+0x22bc>
    cee0:	sub	r0, r7, r8
    cee4:	sub	r6, r0, #256	; 0x100
    cee8:	mov	r0, r4
    ceec:	bl	1c90 <Mat_doubleSwap>
    cef0:	vmov	r0, r1, d0
    cef4:	bl	6b940 <__aeabi_d2lz>
    cef8:	strd	r0, [sl]
    cefc:	add	sl, sl, #8
    cf00:	add	r4, r4, #8
    cf04:	subs	r6, r6, #1
    cf08:	bne	cee8 <ReadInt64Data+0x12b8>
    cf0c:	b	deec <ReadInt64Data+0x22bc>
    cf10:	sub	r0, r6, #256	; 0x100
    cf14:	str	r6, [sp, #8]
    cf18:	add	r1, r7, #2048	; 0x800
    cf1c:	add	r4, sp, #296	; 0x128
    cf20:	mov	r6, r7
    cf24:	mov	r9, #0
    cf28:	str	r5, [sp, #24]
    cf2c:	str	sl, [sp, #32]
    cf30:	str	r7, [sp, #4]
    cf34:	str	r0, [sp, #28]
    cf38:	mov	r0, #0
    cf3c:	mov	sl, r0
    cf40:	ldr	r0, [sp, #36]	; 0x24
    cf44:	mov	r5, r1
    cf48:	ldr	r1, [sp, #32]
    cf4c:	mov	r2, #256	; 0x100
    cf50:	mov	r8, r9
    cf54:	ldr	r3, [r0]
    cf58:	mov	r0, r4
    cf5c:	bl	18b8 <fread@plt>
    cf60:	mov	r7, r0
    cf64:	mov	r9, #0
    cf68:	add	r0, r4, r9
    cf6c:	bl	1b84 <Mat_int64Swap>
    cf70:	mov	r2, r6
    cf74:	str	r0, [r2, r9]!
    cf78:	add	r9, r9, #8
    cf7c:	cmp	r9, #2048	; 0x800
    cf80:	str	r1, [r2, #4]
    cf84:	bne	cf68 <ReadInt64Data+0x1338>
    cf88:	ldr	r2, [sp, #28]
    cf8c:	add	r0, sl, #256	; 0x100
    cf90:	mov	r9, r8
    cf94:	add	r9, r7, r8
    cf98:	add	r6, r6, #2048	; 0x800
    cf9c:	add	r1, r5, #2048	; 0x800
    cfa0:	cmp	r0, r2
    cfa4:	blt	cf3c <ReadInt64Data+0x130c>
    cfa8:	ldr	r6, [sp, #8]
    cfac:	cmp	r0, r6
    cfb0:	bge	d018 <ReadInt64Data+0x13e8>
    cfb4:	sub	r7, r6, r0
    cfb8:	ldr	r0, [sp, #36]	; 0x24
    cfbc:	ldr	r1, [sp, #32]
    cfc0:	add	r4, sp, #296	; 0x128
    cfc4:	mov	r2, r7
    cfc8:	ldr	r3, [r0]
    cfcc:	mov	r0, r4
    cfd0:	bl	18b8 <fread@plt>
    cfd4:	add	r9, r0, r9
    cfd8:	cmp	r7, #1
    cfdc:	blt	d018 <ReadInt64Data+0x13e8>
    cfe0:	sub	r0, r6, sl
    cfe4:	sub	r6, r0, #256	; 0x100
    cfe8:	mov	r0, r4
    cfec:	bl	1b84 <Mat_int64Swap>
    cff0:	strd	r0, [r5]
    cff4:	add	r5, r5, #8
    cff8:	add	r4, r4, #8
    cffc:	subs	r6, r6, #1
    d000:	bne	cfe8 <ReadInt64Data+0x13b8>
    d004:	ldr	sl, [sp, #32]
    d008:	ldr	r7, [sp, #4]
    d00c:	ldr	r6, [sp, #8]
    d010:	ldr	r4, [sp, #36]	; 0x24
    d014:	b	db38 <ReadInt64Data+0x1f08>
    d018:	ldr	sl, [sp, #32]
    d01c:	ldr	r7, [sp, #4]
    d020:	ldr	r4, [sp, #36]	; 0x24
    d024:	b	db38 <ReadInt64Data+0x1f08>
    d028:	sub	r1, r6, #256	; 0x100
    d02c:	str	sl, [sp, #32]
    d030:	str	r6, [sp, #8]
    d034:	mov	sl, r7
    d038:	add	r0, r7, #2048	; 0x800
    d03c:	mov	r5, #0
    d040:	add	r7, sp, #296	; 0x128
    d044:	add	r6, sp, #192	; 0xc0
    d048:	mov	r4, #32
    d04c:	add	r8, sp, #196	; 0xc4
    d050:	mov	r9, #0
    d054:	str	r1, [sp, #16]
    d058:	mov	r1, #256	; 0x100
    d05c:	str	sl, [sp, #4]
    d060:	add	r2, sp, #20
    d064:	stm	r2, {r0, r1, r5}
    d068:	ldr	r0, [sp, #36]	; 0x24
    d06c:	ldr	r1, [sp, #32]
    d070:	mov	r2, #256	; 0x100
    d074:	ldr	r3, [r0]
    d078:	mov	r0, r7
    d07c:	bl	18b8 <fread@plt>
    d080:	mov	r1, sl
    d084:	mov	r2, #0
    d088:	ldr	r3, [r7, r2]
    d08c:	add	r5, r7, r2
    d090:	add	r2, r2, #8
    d094:	cmp	r2, #512	; 0x200
    d098:	str	r3, [sp, #192]	; 0xc0
    d09c:	add	r3, r1, #16
    d0a0:	vld1.32	{d16[0]}, [r6 :32]
    d0a4:	vmovl.s16	q8, d16
    d0a8:	vmovl.s32	q8, d16
    d0ac:	vst1.64	{d16-d17}, [r1], r4
    d0b0:	ldr	r5, [r5, #4]
    d0b4:	str	r5, [sp, #196]	; 0xc4
    d0b8:	vld1.32	{d16[0]}, [r8 :32]
    d0bc:	vmovl.s16	q8, d16
    d0c0:	vmovl.s32	q8, d16
    d0c4:	vst1.64	{d16-d17}, [r3]
    d0c8:	bne	d088 <ReadInt64Data+0x1458>
    d0cc:	ldr	r2, [sp, #28]
    d0d0:	ldr	r1, [sp, #24]
    d0d4:	add	r9, r0, r9
    d0d8:	ldr	r0, [sp, #20]
    d0dc:	add	sl, sl, #2048	; 0x800
    d0e0:	add	r5, r2, #256	; 0x100
    d0e4:	ldr	r2, [sp, #16]
    d0e8:	add	r0, r0, #2048	; 0x800
    d0ec:	add	r1, r1, #256	; 0x100
    d0f0:	cmp	r5, r2
    d0f4:	blt	d060 <ReadInt64Data+0x1430>
    d0f8:	ldr	r4, [sp, #8]
    d0fc:	cmp	r5, r4
    d100:	bge	deec <ReadInt64Data+0x22bc>
    d104:	ldr	r0, [sp, #36]	; 0x24
    d108:	ldr	sl, [sp, #32]
    d10c:	sub	r6, r4, r5
    d110:	add	r7, sp, #296	; 0x128
    d114:	mov	r2, r6
    d118:	ldr	r3, [r0]
    d11c:	mov	r0, r7
    d120:	mov	r1, sl
    d124:	bl	18b8 <fread@plt>
    d128:	add	r9, r0, r9
    d12c:	cmp	r6, #1
    d130:	blt	def0 <ReadInt64Data+0x22c0>
    d134:	ldr	sl, [sp, #4]
    d138:	mov	lr, #0
    d13c:	beq	e1b8 <ReadInt64Data+0x2588>
    d140:	bic	lr, r6, #1
    d144:	mov	r1, #1
    d148:	str	r6, [sp, #36]	; 0x24
    d14c:	subs	r2, lr, #2
    d150:	add	r2, r1, r2, lsr #1
    d154:	and	r0, r2, #1
    d158:	str	r0, [sp, #16]
    d15c:	beq	e170 <ReadInt64Data+0x2540>
    d160:	ldr	r0, [sp, #28]
    d164:	ldr	ip, [sp, #20]
    d168:	add	r8, sp, #184	; 0xb8
    d16c:	sub	r2, r4, r0
    d170:	mov	r4, #32
    d174:	sub	r2, r2, #256	; 0x100
    d178:	bic	r2, r2, #1
    d17c:	sub	r2, r2, #2
    d180:	add	r1, r1, r2, lsr #1
    d184:	mvn	r3, r2, lsr #1
    d188:	mov	r2, #0
    d18c:	and	r1, r1, #1
    d190:	add	r3, r3, r1
    d194:	add	r1, sp, #188	; 0xbc
    d198:	ldr	r0, [r7]
    d19c:	adds	r3, r3, #2
    d1a0:	add	r2, r2, #4
    d1a4:	str	r0, [sp, #184]	; 0xb8
    d1a8:	add	r0, ip, #16
    d1ac:	vld1.32	{d16[0]}, [r8 :32]
    d1b0:	vmovl.s16	q8, d16
    d1b4:	vmovl.s32	q8, d16
    d1b8:	vst1.64	{d16-d17}, [ip], r4
    d1bc:	ldr	r6, [r7, #4]
    d1c0:	add	r7, r7, #8
    d1c4:	str	r6, [sp, #188]	; 0xbc
    d1c8:	vld1.32	{d16[0]}, [r1 :32]
    d1cc:	vmovl.s16	q8, d16
    d1d0:	vmovl.s32	q8, d16
    d1d4:	vst1.64	{d16-d17}, [r0]
    d1d8:	bne	d198 <ReadInt64Data+0x1568>
    d1dc:	b	e174 <ReadInt64Data+0x2544>
    d1e0:	sub	r1, r6, #256	; 0x100
    d1e4:	str	sl, [sp, #32]
    d1e8:	str	r6, [sp, #8]
    d1ec:	mov	sl, r7
    d1f0:	add	r0, r7, #2048	; 0x800
    d1f4:	mov	r5, #0
    d1f8:	add	r7, sp, #296	; 0x128
    d1fc:	add	r6, sp, #224	; 0xe0
    d200:	mov	r4, #32
    d204:	add	r8, sp, #228	; 0xe4
    d208:	mov	r9, #0
    d20c:	str	r1, [sp, #16]
    d210:	mov	r1, #256	; 0x100
    d214:	str	sl, [sp, #4]
    d218:	add	r2, sp, #20
    d21c:	stm	r2, {r0, r1, r5}
    d220:	ldr	r0, [sp, #36]	; 0x24
    d224:	ldr	r1, [sp, #32]
    d228:	mov	r2, #256	; 0x100
    d22c:	ldr	r3, [r0]
    d230:	mov	r0, r7
    d234:	bl	18b8 <fread@plt>
    d238:	mov	r1, sl
    d23c:	mov	r2, #0
    d240:	ldr	r3, [r7, r2]
    d244:	add	r5, r7, r2
    d248:	add	r2, r2, #8
    d24c:	cmp	r2, #512	; 0x200
    d250:	str	r3, [sp, #224]	; 0xe0
    d254:	add	r3, r1, #16
    d258:	vld1.32	{d16[0]}, [r6 :32]
    d25c:	vmovl.u16	q8, d16
    d260:	vmovl.u32	q8, d16
    d264:	vst1.64	{d16-d17}, [r1], r4
    d268:	ldr	r5, [r5, #4]
    d26c:	str	r5, [sp, #228]	; 0xe4
    d270:	vld1.32	{d16[0]}, [r8 :32]
    d274:	vmovl.u16	q8, d16
    d278:	vmovl.u32	q8, d16
    d27c:	vst1.64	{d16-d17}, [r3]
    d280:	bne	d240 <ReadInt64Data+0x1610>
    d284:	ldr	r2, [sp, #28]
    d288:	ldr	r1, [sp, #24]
    d28c:	add	r9, r0, r9
    d290:	ldr	r0, [sp, #20]
    d294:	add	sl, sl, #2048	; 0x800
    d298:	add	r5, r2, #256	; 0x100
    d29c:	ldr	r2, [sp, #16]
    d2a0:	add	r0, r0, #2048	; 0x800
    d2a4:	add	r1, r1, #256	; 0x100
    d2a8:	cmp	r5, r2
    d2ac:	blt	d218 <ReadInt64Data+0x15e8>
    d2b0:	ldr	r0, [sp, #8]
    d2b4:	cmp	r5, r0
    d2b8:	bge	deec <ReadInt64Data+0x22bc>
    d2bc:	sub	r4, r0, r5
    d2c0:	ldr	r0, [sp, #36]	; 0x24
    d2c4:	ldr	sl, [sp, #32]
    d2c8:	add	r7, sp, #296	; 0x128
    d2cc:	mov	r2, r4
    d2d0:	ldr	r3, [r0]
    d2d4:	mov	r0, r7
    d2d8:	mov	r1, sl
    d2dc:	bl	18b8 <fread@plt>
    d2e0:	add	r9, r0, r9
    d2e4:	cmp	r4, #1
    d2e8:	blt	def0 <ReadInt64Data+0x22c0>
    d2ec:	ldr	r6, [sp, #4]
    d2f0:	mov	r1, #0
    d2f4:	mov	lr, #0
    d2f8:	beq	e244 <ReadInt64Data+0x2614>
    d2fc:	bic	lr, r4, #1
    d300:	mov	r0, #1
    d304:	str	r4, [sp, #36]	; 0x24
    d308:	subs	r2, lr, #2
    d30c:	add	r2, r0, r2, lsr #1
    d310:	and	r2, r2, #1
    d314:	str	r2, [sp, #16]
    d318:	beq	e1f8 <ReadInt64Data+0x25c8>
    d31c:	ldr	r2, [sp, #8]
    d320:	ldr	r3, [sp, #28]
    d324:	ldr	ip, [sp, #20]
    d328:	add	r8, sp, #216	; 0xd8
    d32c:	mov	sl, #32
    d330:	sub	r2, r2, r3
    d334:	sub	r2, r2, #256	; 0x100
    d338:	bic	r2, r2, #1
    d33c:	sub	r2, r2, #2
    d340:	add	r0, r0, r2, lsr #1
    d344:	mvn	r3, r2, lsr #1
    d348:	and	r0, r0, #1
    d34c:	add	r6, r3, r0
    d350:	mov	r3, #0
    d354:	add	r0, sp, #220	; 0xdc
    d358:	ldr	r4, [r7]
    d35c:	adds	r6, r6, #2
    d360:	add	r3, r3, #4
    d364:	str	r4, [sp, #216]	; 0xd8
    d368:	add	r4, ip, #16
    d36c:	vld1.32	{d16[0]}, [r8 :32]
    d370:	vmovl.u16	q8, d16
    d374:	vmovl.u32	q8, d16
    d378:	vst1.64	{d16-d17}, [ip], sl
    d37c:	ldr	r2, [r7, #4]
    d380:	add	r7, r7, #8
    d384:	str	r2, [sp, #220]	; 0xdc
    d388:	vld1.32	{d16[0]}, [r0 :32]
    d38c:	vmovl.u16	q8, d16
    d390:	vmovl.u32	q8, d16
    d394:	vst1.64	{d16-d17}, [r4]
    d398:	bne	d358 <ReadInt64Data+0x1728>
    d39c:	b	e1fc <ReadInt64Data+0x25cc>
    d3a0:	sub	r1, r6, #256	; 0x100
    d3a4:	str	sl, [sp, #32]
    d3a8:	mov	r8, r7
    d3ac:	add	r0, r7, #2048	; 0x800
    d3b0:	mov	r2, #0
    d3b4:	mov	r5, #0
    d3b8:	add	r7, sp, #296	; 0x128
    d3bc:	add	r9, sp, #88	; 0x58
    d3c0:	mov	r4, #32
    d3c4:	add	sl, sp, #96	; 0x60
    d3c8:	str	r6, [sp, #8]
    d3cc:	str	r1, [sp, #12]
    d3d0:	mov	r1, #256	; 0x100
    d3d4:	str	r8, [sp, #4]
    d3d8:	str	r2, [sp, #28]
    d3dc:	str	r0, [sp, #16]
    d3e0:	ldr	r0, [sp, #36]	; 0x24
    d3e4:	str	r1, [sp, #24]
    d3e8:	ldr	r1, [sp, #32]
    d3ec:	mov	r2, #256	; 0x100
    d3f0:	str	r5, [sp, #20]
    d3f4:	ldr	r3, [r0]
    d3f8:	mov	r0, r7
    d3fc:	bl	18b8 <fread@plt>
    d400:	mov	r1, r8
    d404:	mov	r2, #0
    d408:	ldr	r3, [r7, r2]
    d40c:	str	r3, [sp, #88]	; 0x58
    d410:	add	r3, r7, r2
    d414:	add	r2, r2, #16
    d418:	ldr	r5, [r3, #4]
    d41c:	cmp	r2, #1024	; 0x400
    d420:	str	r5, [sp, #92]	; 0x5c
    d424:	add	r5, r1, #16
    d428:	vld1.32	{d16}, [r9 :64]
    d42c:	vmovl.s32	q8, d16
    d430:	vst1.64	{d16-d17}, [r1], r4
    d434:	ldr	r6, [r3, #8]
    d438:	ldr	r3, [r3, #12]
    d43c:	str	r6, [sp, #96]	; 0x60
    d440:	str	r3, [sp, #100]	; 0x64
    d444:	vld1.32	{d16}, [sl :64]
    d448:	vmovl.s32	q8, d16
    d44c:	vst1.64	{d16-d17}, [r5]
    d450:	bne	d408 <ReadInt64Data+0x17d8>
    d454:	ldr	r1, [sp, #28]
    d458:	ldr	r6, [sp, #20]
    d45c:	ldr	r2, [sp, #12]
    d460:	add	r8, r8, #2048	; 0x800
    d464:	add	r1, r0, r1
    d468:	ldr	r0, [sp, #16]
    d46c:	add	r5, r6, #256	; 0x100
    d470:	str	r1, [sp, #28]
    d474:	ldr	r1, [sp, #24]
    d478:	cmp	r5, r2
    d47c:	add	r0, r0, #2048	; 0x800
    d480:	add	r1, r1, #256	; 0x100
    d484:	blt	d3dc <ReadInt64Data+0x17ac>
    d488:	ldr	r4, [sp, #8]
    d48c:	cmp	r5, r4
    d490:	bge	d8cc <ReadInt64Data+0x1c9c>
    d494:	ldr	r0, [sp, #36]	; 0x24
    d498:	ldr	sl, [sp, #32]
    d49c:	sub	r8, r4, r5
    d4a0:	add	r7, sp, #296	; 0x128
    d4a4:	mov	r2, r8
    d4a8:	ldr	r3, [r0]
    d4ac:	mov	r0, r7
    d4b0:	mov	r1, sl
    d4b4:	bl	18b8 <fread@plt>
    d4b8:	ldr	r9, [sp, #28]
    d4bc:	cmp	r8, #1
    d4c0:	add	r9, r0, r9
    d4c4:	blt	def0 <ReadInt64Data+0x22c0>
    d4c8:	ldr	r3, [sp, #4]
    d4cc:	mov	lr, #0
    d4d0:	beq	e2e8 <ReadInt64Data+0x26b8>
    d4d4:	bic	lr, r8, #1
    d4d8:	mov	r1, #1
    d4dc:	mov	sl, r9
    d4e0:	str	r8, [sp, #36]	; 0x24
    d4e4:	subs	r2, lr, #2
    d4e8:	add	r2, r1, r2, lsr #1
    d4ec:	and	r0, r2, #1
    d4f0:	str	r0, [sp, #28]
    d4f4:	beq	e288 <ReadInt64Data+0x2658>
    d4f8:	sub	r2, r4, r6
    d4fc:	ldr	ip, [sp, #16]
    d500:	add	r8, sp, #72	; 0x48
    d504:	mov	r9, #32
    d508:	sub	r2, r2, #256	; 0x100
    d50c:	bic	r2, r2, #1
    d510:	sub	r2, r2, #2
    d514:	add	r1, r1, r2, lsr #1
    d518:	mvn	r3, r2, lsr #1
    d51c:	mov	r2, #0
    d520:	and	r1, r1, #1
    d524:	add	r3, r3, r1
    d528:	add	r1, sp, #80	; 0x50
    d52c:	ldm	r7, {r0, r6}
    d530:	str	r6, [sp, #76]	; 0x4c
    d534:	adds	r3, r3, #2
    d538:	add	r2, r2, #4
    d53c:	str	r0, [sp, #72]	; 0x48
    d540:	add	r0, ip, #16
    d544:	vld1.32	{d16}, [r8 :64]
    d548:	vmovl.s32	q8, d16
    d54c:	vst1.64	{d16-d17}, [ip], r9
    d550:	ldr	r6, [r7, #8]
    d554:	ldr	r4, [r7, #12]
    d558:	add	r7, r7, #16
    d55c:	str	r4, [sp, #84]	; 0x54
    d560:	str	r6, [sp, #80]	; 0x50
    d564:	vld1.32	{d16}, [r1 :64]
    d568:	vmovl.s32	q8, d16
    d56c:	vst1.64	{d16-d17}, [r0]
    d570:	bne	d52c <ReadInt64Data+0x18fc>
    d574:	b	e28c <ReadInt64Data+0x265c>
    d578:	sub	r1, r6, #256	; 0x100
    d57c:	str	sl, [sp, #32]
    d580:	mov	r8, r7
    d584:	add	r0, r7, #2048	; 0x800
    d588:	mov	r2, #0
    d58c:	mov	r5, #0
    d590:	add	r7, sp, #296	; 0x128
    d594:	add	r9, sp, #152	; 0x98
    d598:	mov	r4, #32
    d59c:	add	sl, sp, #160	; 0xa0
    d5a0:	str	r6, [sp, #8]
    d5a4:	str	r1, [sp, #12]
    d5a8:	mov	r1, #256	; 0x100
    d5ac:	str	r8, [sp, #4]
    d5b0:	str	r2, [sp, #28]
    d5b4:	add	r2, sp, #16
    d5b8:	stm	r2, {r0, r1, r5}
    d5bc:	ldr	r0, [sp, #36]	; 0x24
    d5c0:	ldr	r1, [sp, #32]
    d5c4:	mov	r2, #256	; 0x100
    d5c8:	ldr	r3, [r0]
    d5cc:	mov	r0, r7
    d5d0:	bl	18b8 <fread@plt>
    d5d4:	mov	r1, r8
    d5d8:	mov	r2, #0
    d5dc:	ldr	r3, [r7, r2]
    d5e0:	str	r3, [sp, #152]	; 0x98
    d5e4:	add	r3, r7, r2
    d5e8:	add	r2, r2, #16
    d5ec:	ldr	r5, [r3, #4]
    d5f0:	cmp	r2, #1024	; 0x400
    d5f4:	str	r5, [sp, #156]	; 0x9c
    d5f8:	add	r5, r1, #16
    d5fc:	vld1.32	{d16}, [r9 :64]
    d600:	vmovl.u32	q8, d16
    d604:	vst1.64	{d16-d17}, [r1], r4
    d608:	ldr	r6, [r3, #8]
    d60c:	ldr	r3, [r3, #12]
    d610:	str	r6, [sp, #160]	; 0xa0
    d614:	str	r3, [sp, #164]	; 0xa4
    d618:	vld1.32	{d16}, [sl :64]
    d61c:	vmovl.u32	q8, d16
    d620:	vst1.64	{d16-d17}, [r5]
    d624:	bne	d5dc <ReadInt64Data+0x19ac>
    d628:	ldr	r1, [sp, #28]
    d62c:	ldr	r2, [sp, #24]
    d630:	add	r8, r8, #2048	; 0x800
    d634:	add	r1, r0, r1
    d638:	ldr	r0, [sp, #16]
    d63c:	add	r5, r2, #256	; 0x100
    d640:	ldr	r2, [sp, #12]
    d644:	str	r1, [sp, #28]
    d648:	ldr	r1, [sp, #20]
    d64c:	add	r0, r0, #2048	; 0x800
    d650:	cmp	r5, r2
    d654:	add	r1, r1, #256	; 0x100
    d658:	blt	d5b4 <ReadInt64Data+0x1984>
    d65c:	ldr	r0, [sp, #8]
    d660:	cmp	r5, r0
    d664:	bge	d8cc <ReadInt64Data+0x1c9c>
    d668:	sub	r4, r0, r5
    d66c:	ldr	r0, [sp, #36]	; 0x24
    d670:	ldr	sl, [sp, #32]
    d674:	add	r7, sp, #296	; 0x128
    d678:	mov	r2, r4
    d67c:	ldr	r3, [r0]
    d680:	mov	r0, r7
    d684:	mov	r1, sl
    d688:	bl	18b8 <fread@plt>
    d68c:	ldr	r9, [sp, #28]
    d690:	cmp	r4, #1
    d694:	add	r9, r0, r9
    d698:	blt	def0 <ReadInt64Data+0x22c0>
    d69c:	ldr	r6, [sp, #4]
    d6a0:	mov	r1, #0
    d6a4:	mov	lr, #0
    d6a8:	beq	e37c <ReadInt64Data+0x274c>
    d6ac:	bic	lr, r4, #1
    d6b0:	mov	r0, #1
    d6b4:	str	r4, [sp, #36]	; 0x24
    d6b8:	str	r9, [sp, #28]
    d6bc:	subs	r2, lr, #2
    d6c0:	add	r2, r0, r2, lsr #1
    d6c4:	and	r2, r2, #1
    d6c8:	str	r2, [sp, #12]
    d6cc:	beq	e324 <ReadInt64Data+0x26f4>
    d6d0:	ldr	r2, [sp, #8]
    d6d4:	ldr	r3, [sp, #24]
    d6d8:	ldr	ip, [sp, #16]
    d6dc:	add	r8, sp, #136	; 0x88
    d6e0:	mov	r9, #32
    d6e4:	add	sl, sp, #144	; 0x90
    d6e8:	sub	r2, r2, r3
    d6ec:	sub	r2, r2, #256	; 0x100
    d6f0:	bic	r2, r2, #1
    d6f4:	sub	r2, r2, #2
    d6f8:	add	r0, r0, r2, lsr #1
    d6fc:	mvn	r3, r2, lsr #1
    d700:	and	r0, r0, #1
    d704:	add	r6, r3, r0
    d708:	mov	r3, #0
    d70c:	ldr	r4, [r7]
    d710:	ldr	r2, [r7, #4]
    d714:	adds	r6, r6, #2
    d718:	add	r3, r3, #4
    d71c:	str	r2, [sp, #140]	; 0x8c
    d720:	str	r4, [sp, #136]	; 0x88
    d724:	add	r2, ip, #16
    d728:	vld1.32	{d16}, [r8 :64]
    d72c:	vmovl.u32	q8, d16
    d730:	vst1.64	{d16-d17}, [ip], r9
    d734:	ldr	r4, [r7, #8]
    d738:	ldr	r0, [r7, #12]
    d73c:	add	r7, r7, #16
    d740:	str	r0, [sp, #148]	; 0x94
    d744:	str	r4, [sp, #144]	; 0x90
    d748:	vld1.32	{d16}, [sl :64]
    d74c:	vmovl.u32	q8, d16
    d750:	vst1.64	{d16-d17}, [r2]
    d754:	bne	d70c <ReadInt64Data+0x1adc>
    d758:	b	e328 <ReadInt64Data+0x26f8>
    d75c:	add	r0, sp, #296	; 0x128
    d760:	sub	r1, r6, #256	; 0x100
    d764:	str	r6, [sp, #8]
    d768:	mov	r8, #0
    d76c:	mov	r6, r7
    d770:	mov	r9, #0
    d774:	str	sl, [sp, #32]
    d778:	str	r7, [sp, #4]
    d77c:	add	r0, r0, #4
    d780:	str	r1, [sp, #20]
    d784:	str	r0, [sp, #28]
    d788:	add	r0, r7, #2048	; 0x800
    d78c:	ldr	r3, [r4]
    d790:	ldr	r1, [sp, #32]
    d794:	mov	r7, r0
    d798:	add	r0, sp, #296	; 0x128
    d79c:	mov	r2, #256	; 0x100
    d7a0:	mov	sl, r9
    d7a4:	str	r8, [sp, #24]
    d7a8:	bl	18b8 <fread@plt>
    d7ac:	ldr	r9, [sp, #28]
    d7b0:	mov	r4, r0
    d7b4:	mov	r5, #0
    d7b8:	ldr	r0, [r9, #-4]
    d7bc:	bl	6b914 <__aeabi_f2lz>
    d7c0:	mov	r8, r6
    d7c4:	str	r0, [r8, r5]!
    d7c8:	str	r1, [r8, #4]
    d7cc:	ldr	r0, [r9]
    d7d0:	bl	6b914 <__aeabi_f2lz>
    d7d4:	add	r5, r5, #16
    d7d8:	add	r9, r9, #8
    d7dc:	strd	r0, [r8, #8]
    d7e0:	cmp	r5, #2048	; 0x800
    d7e4:	bne	d7b8 <ReadInt64Data+0x1b88>
    d7e8:	mov	r5, r7
    d7ec:	add	r0, r7, #2048	; 0x800
    d7f0:	ldr	r7, [sp, #24]
    d7f4:	ldr	r1, [sp, #20]
    d7f8:	mov	r9, sl
    d7fc:	add	r9, r4, sl
    d800:	ldr	r4, [sp, #36]	; 0x24
    d804:	add	r6, r6, #2048	; 0x800
    d808:	add	r8, r7, #256	; 0x100
    d80c:	cmp	r8, r1
    d810:	blt	d78c <ReadInt64Data+0x1b5c>
    d814:	ldr	r6, [sp, #8]
    d818:	cmp	r8, r6
    d81c:	bge	deec <ReadInt64Data+0x22bc>
    d820:	mov	r0, r4
    d824:	ldr	r1, [sp, #32]
    d828:	sub	r4, r6, r8
    d82c:	ldr	r3, [r0]
    d830:	add	r0, sp, #296	; 0x128
    d834:	mov	r2, r4
    d838:	bl	18b8 <fread@plt>
    d83c:	add	r9, r0, r9
    d840:	cmp	r4, #1
    d844:	blt	deec <ReadInt64Data+0x22bc>
    d848:	mvn	r0, #256	; 0x100
    d84c:	str	r9, [sp, #28]
    d850:	and	r9, r4, #1
    d854:	mov	r4, #0
    d858:	sub	r0, r0, r7
    d85c:	cmn	r0, r6
    d860:	beq	d8a8 <ReadInt64Data+0x1c78>
    d864:	sub	r0, r9, r6
    d868:	mov	r4, #0
    d86c:	add	sl, r0, r8
    d870:	add	r0, sp, #296	; 0x128
    d874:	add	r6, r0, #4
    d878:	ldr	r0, [r6, #-4]
    d87c:	bl	6b914 <__aeabi_f2lz>
    d880:	strd	r0, [r5]
    d884:	ldr	r0, [r6]
    d888:	bl	6b914 <__aeabi_f2lz>
    d88c:	sub	r4, r4, #2
    d890:	strd	r0, [r5, #8]
    d894:	add	r5, r5, #16
    d898:	add	r6, r6, #8
    d89c:	cmp	sl, r4
    d8a0:	bne	d878 <ReadInt64Data+0x1c48>
    d8a4:	rsb	r4, r4, #0
    d8a8:	ldr	r6, [sp, #4]
    d8ac:	cmp	r9, #0
    d8b0:	beq	d8cc <ReadInt64Data+0x1c9c>
    d8b4:	add	r0, sp, #296	; 0x128
    d8b8:	ldr	r0, [r0, r4, lsl #2]
    d8bc:	bl	6b914 <__aeabi_f2lz>
    d8c0:	add	r2, r4, r8
    d8c4:	str	r0, [r6, r2, lsl #3]!
    d8c8:	str	r1, [r6, #4]
    d8cc:	ldr	sl, [sp, #32]
    d8d0:	ldr	r9, [sp, #28]
    d8d4:	b	def0 <ReadInt64Data+0x22c0>
    d8d8:	str	sl, [sp, #32]
    d8dc:	sub	r1, r6, #256	; 0x100
    d8e0:	mov	sl, r7
    d8e4:	add	r0, r7, #2048	; 0x800
    d8e8:	mov	r4, #0
    d8ec:	add	r7, sp, #296	; 0x128
    d8f0:	mov	r9, #0
    d8f4:	str	r6, [sp, #8]
    d8f8:	str	r1, [sp, #20]
    d8fc:	str	sl, [sp, #4]
    d900:	str	r0, [sp, #28]
    d904:	ldr	r0, [sp, #36]	; 0x24
    d908:	ldr	r1, [sp, #32]
    d90c:	mov	r2, #256	; 0x100
    d910:	mov	r8, r9
    d914:	str	r4, [sp, #24]
    d918:	ldr	r3, [r0]
    d91c:	mov	r0, r7
    d920:	bl	18b8 <fread@plt>
    d924:	mov	r4, r0
    d928:	mov	r5, #0
    d92c:	add	r9, r7, r5
    d930:	vldr	d16, [r9]
    d934:	vmov	r0, r1, d16
    d938:	bl	6b940 <__aeabi_d2lz>
    d93c:	mov	r6, sl
    d940:	str	r0, [r6, r5]!
    d944:	str	r1, [r6, #4]
    d948:	vldr	d16, [r9, #8]
    d94c:	vmov	r0, r1, d16
    d950:	bl	6b940 <__aeabi_d2lz>
    d954:	add	r5, r5, #16
    d958:	strd	r0, [r6, #8]
    d95c:	cmp	r5, #2048	; 0x800
    d960:	bne	d92c <ReadInt64Data+0x1cfc>
    d964:	ldr	r5, [sp, #24]
    d968:	ldr	r0, [sp, #28]
    d96c:	ldr	r1, [sp, #20]
    d970:	mov	r9, r8
    d974:	add	r9, r4, r8
    d978:	add	sl, sl, #2048	; 0x800
    d97c:	add	r4, r5, #256	; 0x100
    d980:	add	r0, r0, #2048	; 0x800
    d984:	cmp	r4, r1
    d988:	blt	d900 <ReadInt64Data+0x1cd0>
    d98c:	ldr	r6, [sp, #8]
    d990:	cmp	r4, r6
    d994:	bge	deec <ReadInt64Data+0x22bc>
    d998:	ldr	r0, [sp, #36]	; 0x24
    d99c:	ldr	sl, [sp, #32]
    d9a0:	sub	r7, r6, r4
    d9a4:	add	r8, sp, #296	; 0x128
    d9a8:	mov	r2, r7
    d9ac:	ldr	r3, [r0]
    d9b0:	mov	r0, r8
    d9b4:	mov	r1, sl
    d9b8:	bl	18b8 <fread@plt>
    d9bc:	add	r9, r0, r9
    d9c0:	cmp	r7, #1
    d9c4:	blt	def0 <ReadInt64Data+0x22c0>
    d9c8:	mvn	r0, #256	; 0x100
    d9cc:	mov	sl, r9
    d9d0:	and	r9, r7, #1
    d9d4:	sub	r0, r0, r5
    d9d8:	mov	r5, #0
    d9dc:	cmn	r0, r6
    d9e0:	beq	da34 <ReadInt64Data+0x1e04>
    d9e4:	add	r5, r8, #8
    d9e8:	ldr	r8, [sp, #28]
    d9ec:	sub	r0, r9, r6
    d9f0:	mov	r7, #0
    d9f4:	add	r6, r0, r4
    d9f8:	vldr	d16, [r5, #-8]
    d9fc:	vmov	r0, r1, d16
    da00:	bl	6b940 <__aeabi_d2lz>
    da04:	strd	r0, [r8]
    da08:	vldr	d16, [r5]
    da0c:	vmov	r0, r1, d16
    da10:	bl	6b940 <__aeabi_d2lz>
    da14:	sub	r7, r7, #2
    da18:	strd	r0, [r8, #8]
    da1c:	add	r8, r8, #16
    da20:	add	r5, r5, #16
    da24:	cmp	r6, r7
    da28:	bne	d9f8 <ReadInt64Data+0x1dc8>
    da2c:	rsb	r5, r7, #0
    da30:	add	r8, sp, #296	; 0x128
    da34:	cmp	r9, #0
    da38:	beq	da5c <ReadInt64Data+0x1e2c>
    da3c:	add	r0, r8, r5, lsl #3
    da40:	vldr	d16, [r0]
    da44:	vmov	r0, r1, d16
    da48:	bl	6b940 <__aeabi_d2lz>
    da4c:	ldr	r3, [sp, #4]
    da50:	add	r2, r5, r4
    da54:	str	r0, [r3, r2, lsl #3]!
    da58:	str	r1, [r3, #4]
    da5c:	mov	r9, sl
    da60:	b	deec <ReadInt64Data+0x22bc>
    da64:	str	r5, [sp, #24]
    da68:	sub	r0, r6, #256	; 0x100
    da6c:	mov	r8, sl
    da70:	lsl	r4, r6, #3
    da74:	mov	r5, #0
    da78:	mov	r9, #0
    da7c:	mov	sl, r7
    da80:	str	r6, [sp, #8]
    da84:	str	r0, [sp, #28]
    da88:	ldr	r0, [sp, #36]	; 0x24
    da8c:	add	r6, sp, #296	; 0x128
    da90:	mov	r1, r8
    da94:	mov	r2, #256	; 0x100
    da98:	ldr	r3, [r0]
    da9c:	mov	r0, r6
    daa0:	bl	18b8 <fread@plt>
    daa4:	mov	r7, r0
    daa8:	add	r0, sl, r5, lsl #3
    daac:	mov	r1, r6
    dab0:	mov	r2, #2048	; 0x800
    dab4:	bl	181c <memcpy@plt>
    dab8:	ldr	r0, [sp, #28]
    dabc:	add	r5, r5, #256	; 0x100
    dac0:	add	r9, r7, r9
    dac4:	sub	r4, r4, #2048	; 0x800
    dac8:	cmp	r5, r0
    dacc:	blt	da88 <ReadInt64Data+0x1e58>
    dad0:	ldr	r6, [sp, #8]
    dad4:	cmp	r5, r6
    dad8:	bge	db2c <ReadInt64Data+0x1efc>
    dadc:	ldr	r0, [sp, #36]	; 0x24
    dae0:	sub	r7, r6, r5
    dae4:	mov	r1, r8
    dae8:	mov	r2, r7
    daec:	ldr	r3, [r0]
    daf0:	add	r0, sp, #296	; 0x128
    daf4:	bl	18b8 <fread@plt>
    daf8:	add	r9, r0, r9
    dafc:	cmp	r7, #1
    db00:	blt	db2c <ReadInt64Data+0x1efc>
    db04:	add	r0, sl, r5, lsl #3
    db08:	add	r1, sp, #296	; 0x128
    db0c:	mov	r2, r4
    db10:	mov	r7, sl
    db14:	bl	181c <memcpy@plt>
    db18:	ldr	r4, [sp, #36]	; 0x24
    db1c:	b	db34 <ReadInt64Data+0x1f04>
    db20:	ldr	sl, [sp, #32]
    db24:	mov	r9, r5
    db28:	b	def0 <ReadInt64Data+0x22c0>
    db2c:	ldr	r4, [sp, #36]	; 0x24
    db30:	mov	r7, sl
    db34:	mov	sl, r8
    db38:	ldr	r5, [sp, #24]
    db3c:	cmp	r5, #13
    db40:	bne	def0 <ReadInt64Data+0x22c0>
    db44:	ldr	r0, [r4, #20]
    db48:	cmp	r0, #0
    db4c:	beq	db9c <ReadInt64Data+0x1f6c>
    db50:	cmp	r6, #256	; 0x100
    db54:	bgt	dbd4 <ReadInt64Data+0x1fa4>
    db58:	ldr	r3, [r4]
    db5c:	add	r4, sp, #296	; 0x128
    db60:	mov	r1, sl
    db64:	mov	r2, r6
    db68:	mov	r0, r4
    db6c:	bl	18b8 <fread@plt>
    db70:	add	r9, r0, r9
    db74:	cmp	r6, #1
    db78:	blt	def0 <ReadInt64Data+0x22c0>
    db7c:	mov	r0, r4
    db80:	bl	1bd4 <Mat_uint64Swap>
    db84:	strd	r0, [r7]
    db88:	add	r4, r4, #8
    db8c:	add	r7, r7, #8
    db90:	subs	r6, r6, #1
    db94:	bne	db7c <ReadInt64Data+0x1f4c>
    db98:	b	def0 <ReadInt64Data+0x22c0>
    db9c:	cmp	r6, #256	; 0x100
    dba0:	bgt	dcb8 <ReadInt64Data+0x2088>
    dba4:	ldr	r3, [r4]
    dba8:	add	r0, sp, #296	; 0x128
    dbac:	mov	r1, sl
    dbb0:	mov	r2, r6
    dbb4:	bl	18b8 <fread@plt>
    dbb8:	add	r9, r0, r9
    dbbc:	cmp	r6, #1
    dbc0:	blt	def0 <ReadInt64Data+0x22c0>
    dbc4:	lsl	r2, r6, #3
    dbc8:	add	r1, sp, #296	; 0x128
    dbcc:	mov	r0, r7
    dbd0:	b	dd5c <ReadInt64Data+0x212c>
    dbd4:	sub	r0, r6, #256	; 0x100
    dbd8:	mov	r8, r7
    dbdc:	add	r1, r7, #2048	; 0x800
    dbe0:	add	r4, sp, #296	; 0x128
    dbe4:	str	sl, [sp, #32]
    dbe8:	str	r6, [sp, #8]
    dbec:	str	r0, [sp, #28]
    dbf0:	mov	r0, #0
    dbf4:	mov	sl, r0
    dbf8:	ldr	r0, [sp, #36]	; 0x24
    dbfc:	mov	r5, r1
    dc00:	ldr	r1, [sp, #32]
    dc04:	mov	r2, #256	; 0x100
    dc08:	ldr	r3, [r0]
    dc0c:	mov	r0, r4
    dc10:	bl	18b8 <fread@plt>
    dc14:	mov	r7, r0
    dc18:	mov	r6, #0
    dc1c:	add	r0, r4, r6
    dc20:	bl	1bd4 <Mat_uint64Swap>
    dc24:	mov	r2, r8
    dc28:	str	r0, [r2, r6]!
    dc2c:	add	r6, r6, #8
    dc30:	cmp	r6, #2048	; 0x800
    dc34:	str	r1, [r2, #4]
    dc38:	bne	dc1c <ReadInt64Data+0x1fec>
    dc3c:	ldr	r2, [sp, #28]
    dc40:	add	r0, sl, #256	; 0x100
    dc44:	add	r9, r7, r9
    dc48:	add	r8, r8, #2048	; 0x800
    dc4c:	add	r1, r5, #2048	; 0x800
    dc50:	cmp	r0, r2
    dc54:	blt	dbf4 <ReadInt64Data+0x1fc4>
    dc58:	ldr	r6, [sp, #8]
    dc5c:	cmp	r0, r6
    dc60:	bge	deec <ReadInt64Data+0x22bc>
    dc64:	sub	r7, r6, r0
    dc68:	ldr	r0, [sp, #36]	; 0x24
    dc6c:	ldr	r1, [sp, #32]
    dc70:	add	r4, sp, #296	; 0x128
    dc74:	mov	r2, r7
    dc78:	ldr	r3, [r0]
    dc7c:	mov	r0, r4
    dc80:	bl	18b8 <fread@plt>
    dc84:	add	r9, r0, r9
    dc88:	cmp	r7, #1
    dc8c:	blt	deec <ReadInt64Data+0x22bc>
    dc90:	sub	r0, r6, sl
    dc94:	sub	r6, r0, #256	; 0x100
    dc98:	mov	r0, r4
    dc9c:	bl	1bd4 <Mat_uint64Swap>
    dca0:	strd	r0, [r5]
    dca4:	add	r5, r5, #8
    dca8:	add	r4, r4, #8
    dcac:	subs	r6, r6, #1
    dcb0:	bne	dc98 <ReadInt64Data+0x2068>
    dcb4:	b	deec <ReadInt64Data+0x22bc>
    dcb8:	sub	r0, r6, #256	; 0x100
    dcbc:	lsl	r4, r6, #3
    dcc0:	str	r6, [sp, #8]
    dcc4:	mov	r5, #0
    dcc8:	add	r8, sp, #296	; 0x128
    dccc:	mov	r6, r7
    dcd0:	str	r0, [sp, #28]
    dcd4:	ldr	r0, [sp, #36]	; 0x24
    dcd8:	mov	r1, sl
    dcdc:	mov	r2, #256	; 0x100
    dce0:	ldr	r3, [r0]
    dce4:	mov	r0, r8
    dce8:	bl	18b8 <fread@plt>
    dcec:	mov	r7, r0
    dcf0:	add	r0, r6, r5, lsl #3
    dcf4:	mov	r1, r8
    dcf8:	mov	r2, #2048	; 0x800
    dcfc:	bl	181c <memcpy@plt>
    dd00:	ldr	r0, [sp, #28]
    dd04:	add	r5, r5, #256	; 0x100
    dd08:	add	r9, r7, r9
    dd0c:	sub	r4, r4, #2048	; 0x800
    dd10:	cmp	r5, r0
    dd14:	blt	dcd4 <ReadInt64Data+0x20a4>
    dd18:	mov	r1, sl
    dd1c:	ldr	sl, [sp, #8]
    dd20:	cmp	r5, sl
    dd24:	bge	dd74 <ReadInt64Data+0x2144>
    dd28:	ldr	r0, [sp, #36]	; 0x24
    dd2c:	sub	r7, sl, r5
    dd30:	mov	sl, r1
    dd34:	mov	r2, r7
    dd38:	ldr	r3, [r0]
    dd3c:	add	r0, sp, #296	; 0x128
    dd40:	bl	18b8 <fread@plt>
    dd44:	add	r9, r0, r9
    dd48:	cmp	r7, #1
    dd4c:	blt	def0 <ReadInt64Data+0x22c0>
    dd50:	add	r0, r6, r5, lsl #3
    dd54:	add	r1, sp, #296	; 0x128
    dd58:	mov	r2, r4
    dd5c:	bl	181c <memcpy@plt>
    dd60:	b	def0 <ReadInt64Data+0x22c0>
    dd64:	ldr	r4, [sp, #36]	; 0x24
    dd68:	cmp	r5, #13
    dd6c:	beq	db44 <ReadInt64Data+0x1f14>
    dd70:	b	def0 <ReadInt64Data+0x22c0>
    dd74:	mov	sl, r1
    dd78:	b	def0 <ReadInt64Data+0x22c0>
    dd7c:	mov	r1, #0
    dd80:	ldr	r9, [sp, #28]
    dd84:	cmp	ip, #0
    dd88:	mov	r7, sl
    dd8c:	beq	ddb4 <ReadInt64Data+0x2184>
    dd90:	add	r0, r4, r1
    dd94:	ldrh	r0, [r0]
    dd98:	strh	r0, [r8]
    dd9c:	add	r0, r7, r1, lsl #3
    dda0:	vld1.16	{d16[0]}, [r8 :16]
    dda4:	vmovl.s8	q8, d16
    dda8:	vmovl.s16	q8, d16
    ddac:	vmovl.s32	q8, d16
    ddb0:	vst1.64	{d16-d17}, [r0]
    ddb4:	ldr	r6, [sp, #8]
    ddb8:	ldr	sl, [sp, #32]
    ddbc:	cmp	lr, r6
    ddc0:	beq	def0 <ReadInt64Data+0x22c0>
    ddc4:	add	r1, r7, lr, lsl #3
    ddc8:	add	r0, r4, lr
    ddcc:	sub	r2, r6, lr
    ddd0:	ldrsb	r4, [r0], #1
    ddd4:	subs	r2, r2, #1
    ddd8:	asr	r5, r4, #31
    dddc:	strd	r4, [r1]
    dde0:	add	r1, r1, #8
    dde4:	bne	ddd0 <ReadInt64Data+0x21a0>
    dde8:	b	def0 <ReadInt64Data+0x22c0>
    ddec:	mov	r2, #0
    ddf0:	ldr	r0, [sp, #36]	; 0x24
    ddf4:	ldr	sl, [sp, #32]
    ddf8:	ldr	r7, [sp, #4]
    ddfc:	cmp	r0, #0
    de00:	beq	de2c <ReadInt64Data+0x21fc>
    de04:	add	r0, r9, r2
    de08:	ldrh	r0, [r0]
    de0c:	strh	r0, [r8, #32]
    de10:	add	r0, sp, #264	; 0x108
    de14:	vld1.16	{d16[0]}, [r0 :16]
    de18:	add	r0, r7, r2, lsl #3
    de1c:	vmovl.u8	q8, d16
    de20:	vmovl.u16	q8, d16
    de24:	vmovl.u32	q8, d16
    de28:	vst1.64	{d16-d17}, [r0]
    de2c:	ldr	r6, [sp, #8]
    de30:	cmp	lr, r6
    de34:	beq	de5c <ReadInt64Data+0x222c>
    de38:	add	r2, r7, lr, lsl #3
    de3c:	add	r0, r9, lr
    de40:	sub	r3, r6, lr
    de44:	ldrb	r4, [r0], #1
    de48:	subs	r3, r3, #1
    de4c:	str	r4, [r2]
    de50:	str	r1, [r2, #4]
    de54:	add	r2, r2, #8
    de58:	bne	de44 <ReadInt64Data+0x2214>
    de5c:	mov	r9, ip
    de60:	b	def0 <ReadInt64Data+0x22c0>
    de64:	mov	r2, #0
    de68:	ldr	r0, [sp, #12]
    de6c:	cmp	r0, #0
    de70:	beq	dea0 <ReadInt64Data+0x2270>
    de74:	add	r0, r9, r2
    de78:	ldrh	r0, [r0]
    de7c:	strh	r0, [r8, #12]
    de80:	add	r0, sp, #244	; 0xf4
    de84:	vld1.16	{d16[0]}, [r0 :16]
    de88:	add	r0, r2, r4
    de8c:	add	r0, sl, r0, lsl #3
    de90:	vmovl.s8	q8, d16
    de94:	vmovl.s16	q8, d16
    de98:	vmovl.s32	q8, d16
    de9c:	vst1.64	{d16-d17}, [r0]
    dea0:	ldr	r0, [sp, #36]	; 0x24
    dea4:	ldr	r5, [sp, #8]
    dea8:	cmp	r0, lr
    deac:	beq	dee8 <ReadInt64Data+0x22b8>
    deb0:	ldr	r0, [sp, #20]
    deb4:	add	r1, r9, lr
    deb8:	add	r0, lr, r0
    debc:	add	r2, sl, r0, lsl #3
    dec0:	ldr	r0, [sp, #24]
    dec4:	sub	r0, r5, r0
    dec8:	sub	r0, r0, lr
    decc:	sub	r0, r0, #256	; 0x100
    ded0:	ldrsb	r4, [r1], #1
    ded4:	subs	r0, r0, #1
    ded8:	asr	r5, r4, #31
    dedc:	strd	r4, [r2]
    dee0:	add	r2, r2, #8
    dee4:	bne	ded0 <ReadInt64Data+0x22a0>
    dee8:	ldr	r9, [sp, #28]
    deec:	ldr	sl, [sp, #32]
    def0:	mul	r0, r9, sl
    def4:	sub	sp, fp, #28
    def8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    defc:	mov	r3, #0
    df00:	ldr	r0, [sp, #12]
    df04:	ldr	sl, [sp, #32]
    df08:	ldr	r7, [sp, #4]
    df0c:	cmp	r0, #0
    df10:	beq	df40 <ReadInt64Data+0x2310>
    df14:	add	r0, r9, r3
    df18:	ldrh	r0, [r0]
    df1c:	strh	r0, [r8, #44]	; 0x2c
    df20:	add	r0, sp, #276	; 0x114
    df24:	vld1.16	{d16[0]}, [r0 :16]
    df28:	add	r0, r3, r4
    df2c:	add	r0, r7, r0, lsl #3
    df30:	vmovl.u8	q8, d16
    df34:	vmovl.u16	q8, d16
    df38:	vmovl.u32	q8, d16
    df3c:	vst1.64	{d16-d17}, [r0]
    df40:	ldr	r0, [sp, #36]	; 0x24
    df44:	ldr	r5, [sp, #8]
    df48:	cmp	r0, lr
    df4c:	beq	df88 <ReadInt64Data+0x2358>
    df50:	ldr	r2, [sp, #20]
    df54:	ldr	r3, [sp, #24]
    df58:	add	r0, r9, lr
    df5c:	add	r2, lr, r2
    df60:	sub	r3, r5, r3
    df64:	sub	r3, r3, lr
    df68:	add	r2, r7, r2, lsl #3
    df6c:	sub	r3, r3, #256	; 0x100
    df70:	ldrb	r4, [r0], #1
    df74:	subs	r3, r3, #1
    df78:	str	r4, [r2]
    df7c:	str	r1, [r2, #4]
    df80:	add	r2, r2, #8
    df84:	bne	df70 <ReadInt64Data+0x2340>
    df88:	ldr	r9, [sp, #28]
    df8c:	b	def0 <ReadInt64Data+0x22c0>
    df90:	mov	sl, r7
    df94:	mov	r1, #0
    df98:	cmp	ip, #0
    df9c:	mov	r7, sl
    dfa0:	beq	dfc8 <ReadInt64Data+0x2398>
    dfa4:	add	r0, sp, #296	; 0x128
    dfa8:	ldr	r0, [r0, r1, lsl #1]
    dfac:	str	r0, [sp, #168]	; 0xa8
    dfb0:	add	r0, sp, #168	; 0xa8
    dfb4:	vld1.32	{d16[0]}, [r0 :32]
    dfb8:	add	r0, r7, r1, lsl #3
    dfbc:	vmovl.s16	q8, d16
    dfc0:	vmovl.s32	q8, d16
    dfc4:	vst1.64	{d16-d17}, [r0]
    dfc8:	ldr	r6, [sp, #8]
    dfcc:	ldr	sl, [sp, #32]
    dfd0:	cmp	lr, r6
    dfd4:	beq	def0 <ReadInt64Data+0x22c0>
    dfd8:	add	r0, sp, #296	; 0x128
    dfdc:	add	r2, r7, lr, lsl #3
    dfe0:	add	r1, r0, lr, lsl #1
    dfe4:	sub	r0, r6, lr
    dfe8:	ldrsh	r4, [r1], #2
    dfec:	subs	r0, r0, #1
    dff0:	asr	r5, r4, #31
    dff4:	strd	r4, [r2]
    dff8:	add	r2, r2, #8
    dffc:	bne	dfe8 <ReadInt64Data+0x23b8>
    e000:	b	def0 <ReadInt64Data+0x22c0>
    e004:	mov	r2, #0
    e008:	ldr	r9, [sp, #28]
    e00c:	cmp	ip, #0
    e010:	mov	r7, sl
    e014:	beq	e03c <ReadInt64Data+0x240c>
    e018:	add	r0, sp, #296	; 0x128
    e01c:	ldr	r0, [r0, r2, lsl #1]
    e020:	str	r0, [sp, #200]	; 0xc8
    e024:	add	r0, sp, #200	; 0xc8
    e028:	vld1.32	{d16[0]}, [r0 :32]
    e02c:	add	r0, r7, r2, lsl #3
    e030:	vmovl.u16	q8, d16
    e034:	vmovl.u32	q8, d16
    e038:	vst1.64	{d16-d17}, [r0]
    e03c:	ldr	r6, [sp, #8]
    e040:	ldr	sl, [sp, #32]
    e044:	cmp	lr, r6
    e048:	beq	def0 <ReadInt64Data+0x22c0>
    e04c:	add	r0, sp, #296	; 0x128
    e050:	add	r2, r7, lr, lsl #3
    e054:	sub	r3, r6, lr
    e058:	add	r0, r0, lr, lsl #1
    e05c:	ldrh	r4, [r0], #2
    e060:	subs	r3, r3, #1
    e064:	str	r4, [r2]
    e068:	str	r1, [r2, #4]
    e06c:	add	r2, r2, #8
    e070:	bne	e05c <ReadInt64Data+0x242c>
    e074:	b	def0 <ReadInt64Data+0x22c0>
    e078:	mov	r2, #0
    e07c:	ldr	sl, [sp, #32]
    e080:	ldr	r9, [sp, #28]
    e084:	ldr	r7, [sp, #4]
    e088:	cmp	ip, #0
    e08c:	beq	e0bc <ReadInt64Data+0x248c>
    e090:	add	r0, sp, #296	; 0x128
    e094:	ldr	r3, [r0, r2, lsl #2]
    e098:	add	r0, r0, r2, lsl #2
    e09c:	str	r3, [sp, #104]	; 0x68
    e0a0:	ldr	r0, [r0, #4]
    e0a4:	str	r0, [sp, #108]	; 0x6c
    e0a8:	add	r0, sp, #104	; 0x68
    e0ac:	vld1.32	{d16}, [r0 :64]
    e0b0:	add	r0, r7, r2, lsl #3
    e0b4:	vmovl.u32	q8, d16
    e0b8:	vst1.64	{d16-d17}, [r0]
    e0bc:	ldr	r6, [sp, #8]
    e0c0:	cmp	lr, r6
    e0c4:	beq	def0 <ReadInt64Data+0x22c0>
    e0c8:	add	r0, sp, #296	; 0x128
    e0cc:	add	r2, r7, lr, lsl #3
    e0d0:	sub	r3, r6, lr
    e0d4:	add	r0, r0, lr, lsl #2
    e0d8:	ldr	r4, [r0], #4
    e0dc:	subs	r3, r3, #1
    e0e0:	str	r4, [r2]
    e0e4:	str	r1, [r2, #4]
    e0e8:	add	r2, r2, #8
    e0ec:	bne	e0d8 <ReadInt64Data+0x24a8>
    e0f0:	b	def0 <ReadInt64Data+0x22c0>
    e0f4:	mov	r1, #0
    e0f8:	ldr	r9, [sp, #28]
    e0fc:	cmp	ip, #0
    e100:	mov	r7, sl
    e104:	beq	e134 <ReadInt64Data+0x2504>
    e108:	add	r0, sp, #296	; 0x128
    e10c:	ldr	r2, [r0, r1, lsl #2]
    e110:	add	r0, r0, r1, lsl #2
    e114:	str	r2, [sp, #40]	; 0x28
    e118:	ldr	r0, [r0, #4]
    e11c:	str	r0, [sp, #44]	; 0x2c
    e120:	add	r0, sp, #40	; 0x28
    e124:	vld1.32	{d16}, [r0 :64]
    e128:	add	r0, r7, r1, lsl #3
    e12c:	vmovl.s32	q8, d16
    e130:	vst1.64	{d16-d17}, [r0]
    e134:	ldr	r6, [sp, #8]
    e138:	ldr	sl, [sp, #32]
    e13c:	cmp	lr, r6
    e140:	beq	def0 <ReadInt64Data+0x22c0>
    e144:	add	r0, sp, #296	; 0x128
    e148:	add	r2, r7, lr, lsl #3
    e14c:	add	r1, r0, lr, lsl #2
    e150:	sub	r0, r6, lr
    e154:	ldr	r4, [r1], #4
    e158:	subs	r0, r0, #1
    e15c:	asr	r5, r4, #31
    e160:	strd	r4, [r2]
    e164:	add	r2, r2, #8
    e168:	bne	e154 <ReadInt64Data+0x2524>
    e16c:	b	def0 <ReadInt64Data+0x22c0>
    e170:	mov	r2, #0
    e174:	ldr	r0, [sp, #16]
    e178:	cmp	r0, #0
    e17c:	beq	e1a8 <ReadInt64Data+0x2578>
    e180:	add	r0, sp, #296	; 0x128
    e184:	ldr	r0, [r0, r2, lsl #1]
    e188:	str	r0, [sp, #180]	; 0xb4
    e18c:	add	r0, sp, #180	; 0xb4
    e190:	vld1.32	{d16[0]}, [r0 :32]
    e194:	add	r0, r2, r5
    e198:	add	r0, sl, r0, lsl #3
    e19c:	vmovl.s16	q8, d16
    e1a0:	vmovl.s32	q8, d16
    e1a4:	vst1.64	{d16-d17}, [r0]
    e1a8:	ldr	r0, [sp, #36]	; 0x24
    e1ac:	ldr	r4, [sp, #8]
    e1b0:	cmp	r0, lr
    e1b4:	beq	deec <ReadInt64Data+0x22bc>
    e1b8:	add	r0, sp, #296	; 0x128
    e1bc:	add	r1, r0, lr, lsl #1
    e1c0:	ldr	r0, [sp, #24]
    e1c4:	add	r0, lr, r0
    e1c8:	add	r2, sl, r0, lsl #3
    e1cc:	ldr	r0, [sp, #28]
    e1d0:	sub	r0, r4, r0
    e1d4:	sub	r0, r0, lr
    e1d8:	sub	r0, r0, #256	; 0x100
    e1dc:	ldrsh	r4, [r1], #2
    e1e0:	subs	r0, r0, #1
    e1e4:	asr	r5, r4, #31
    e1e8:	strd	r4, [r2]
    e1ec:	add	r2, r2, #8
    e1f0:	bne	e1dc <ReadInt64Data+0x25ac>
    e1f4:	b	deec <ReadInt64Data+0x22bc>
    e1f8:	mov	r3, #0
    e1fc:	ldr	r0, [sp, #16]
    e200:	ldr	sl, [sp, #32]
    e204:	ldr	r6, [sp, #4]
    e208:	cmp	r0, #0
    e20c:	beq	e238 <ReadInt64Data+0x2608>
    e210:	add	r0, sp, #296	; 0x128
    e214:	ldr	r0, [r0, r3, lsl #1]
    e218:	str	r0, [sp, #212]	; 0xd4
    e21c:	add	r0, sp, #212	; 0xd4
    e220:	vld1.32	{d16[0]}, [r0 :32]
    e224:	add	r0, r3, r5
    e228:	add	r0, r6, r0, lsl #3
    e22c:	vmovl.u16	q8, d16
    e230:	vmovl.u32	q8, d16
    e234:	vst1.64	{d16-d17}, [r0]
    e238:	ldr	r0, [sp, #36]	; 0x24
    e23c:	cmp	r0, lr
    e240:	beq	def0 <ReadInt64Data+0x22c0>
    e244:	ldr	r2, [sp, #24]
    e248:	ldr	r3, [sp, #8]
    e24c:	ldr	r7, [sp, #28]
    e250:	add	r0, sp, #296	; 0x128
    e254:	add	r0, r0, lr, lsl #1
    e258:	add	r2, lr, r2
    e25c:	sub	r3, r3, r7
    e260:	sub	r3, r3, lr
    e264:	add	r2, r6, r2, lsl #3
    e268:	sub	r3, r3, #256	; 0x100
    e26c:	ldrh	r4, [r0], #2
    e270:	subs	r3, r3, #1
    e274:	str	r4, [r2]
    e278:	str	r1, [r2, #4]
    e27c:	add	r2, r2, #8
    e280:	bne	e26c <ReadInt64Data+0x263c>
    e284:	b	def0 <ReadInt64Data+0x22c0>
    e288:	mov	r2, #0
    e28c:	ldr	r0, [sp, #28]
    e290:	ldr	r3, [sp, #4]
    e294:	mov	r9, sl
    e298:	cmp	r0, #0
    e29c:	beq	e2d0 <ReadInt64Data+0x26a0>
    e2a0:	add	r0, sp, #296	; 0x128
    e2a4:	ldr	r1, [r0, r2, lsl #2]
    e2a8:	add	r0, r0, r2, lsl #2
    e2ac:	str	r1, [sp, #64]	; 0x40
    e2b0:	ldr	r0, [r0, #4]
    e2b4:	str	r0, [sp, #68]	; 0x44
    e2b8:	add	r0, sp, #64	; 0x40
    e2bc:	vld1.32	{d16}, [r0 :64]
    e2c0:	add	r0, r2, r5
    e2c4:	add	r0, r3, r0, lsl #3
    e2c8:	vmovl.s32	q8, d16
    e2cc:	vst1.64	{d16-d17}, [r0]
    e2d0:	ldr	r0, [sp, #36]	; 0x24
    e2d4:	ldr	r4, [sp, #8]
    e2d8:	ldr	sl, [sp, #32]
    e2dc:	ldr	r6, [sp, #20]
    e2e0:	cmp	r0, lr
    e2e4:	beq	def0 <ReadInt64Data+0x22c0>
    e2e8:	add	r0, sp, #296	; 0x128
    e2ec:	add	r1, r0, lr, lsl #2
    e2f0:	ldr	r0, [sp, #24]
    e2f4:	add	r0, lr, r0
    e2f8:	add	r2, r3, r0, lsl #3
    e2fc:	sub	r0, r4, r6
    e300:	sub	r0, r0, lr
    e304:	sub	r0, r0, #256	; 0x100
    e308:	ldr	r4, [r1], #4
    e30c:	subs	r0, r0, #1
    e310:	asr	r5, r4, #31
    e314:	strd	r4, [r2]
    e318:	add	r2, r2, #8
    e31c:	bne	e308 <ReadInt64Data+0x26d8>
    e320:	b	def0 <ReadInt64Data+0x22c0>
    e324:	mov	r3, #0
    e328:	ldr	r0, [sp, #12]
    e32c:	ldr	sl, [sp, #32]
    e330:	ldr	r9, [sp, #28]
    e334:	ldr	r6, [sp, #4]
    e338:	cmp	r0, #0
    e33c:	beq	e370 <ReadInt64Data+0x2740>
    e340:	add	r0, sp, #296	; 0x128
    e344:	ldr	r2, [r0, r3, lsl #2]
    e348:	add	r0, r0, r3, lsl #2
    e34c:	str	r2, [sp, #128]	; 0x80
    e350:	ldr	r0, [r0, #4]
    e354:	str	r0, [sp, #132]	; 0x84
    e358:	add	r0, sp, #128	; 0x80
    e35c:	vld1.32	{d16}, [r0 :64]
    e360:	add	r0, r3, r5
    e364:	add	r0, r6, r0, lsl #3
    e368:	vmovl.u32	q8, d16
    e36c:	vst1.64	{d16-d17}, [r0]
    e370:	ldr	r0, [sp, #36]	; 0x24
    e374:	cmp	r0, lr
    e378:	beq	def0 <ReadInt64Data+0x22c0>
    e37c:	ldr	r2, [sp, #20]
    e380:	ldr	r3, [sp, #8]
    e384:	ldr	r7, [sp, #24]
    e388:	add	r0, sp, #296	; 0x128
    e38c:	add	r0, r0, lr, lsl #2
    e390:	add	r2, lr, r2
    e394:	sub	r3, r3, r7
    e398:	sub	r3, r3, lr
    e39c:	add	r2, r6, r2, lsl #3
    e3a0:	sub	r3, r3, #256	; 0x100
    e3a4:	ldr	r4, [r0], #4
    e3a8:	subs	r3, r3, #1
    e3ac:	str	r4, [r2]
    e3b0:	str	r1, [r2, #4]
    e3b4:	add	r2, r2, #8
    e3b8:	bne	e3a4 <ReadInt64Data+0x2774>
    e3bc:	b	def0 <ReadInt64Data+0x22c0>

0000e3c0 <ReadCompressedInt64Data>:
    e3c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e3c4:	add	fp, sp, #28
    e3c8:	sub	sp, sp, #12
    e3cc:	mov	r7, r0
    e3d0:	mov	r0, #0
    e3d4:	cmp	r1, #0
    e3d8:	beq	e3ec <ReadCompressedInt64Data+0x2c>
    e3dc:	cmp	r7, #0
    e3e0:	movne	r5, r2
    e3e4:	cmpne	r2, #0
    e3e8:	bne	e3f4 <ReadCompressedInt64Data+0x34>
    e3ec:	sub	sp, fp, #28
    e3f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e3f4:	ldr	sl, [fp, #8]
    e3f8:	mov	r0, r3
    e3fc:	mov	r4, r3
    e400:	mov	r6, r1
    e404:	bl	1924 <Mat_SizeOf@plt>
    e408:	mov	r9, r0
    e40c:	sub	r0, r4, #1
    e410:	cmp	r0, #12
    e414:	bhi	e858 <ReadCompressedInt64Data+0x498>
    e418:	add	r1, pc, #4
    e41c:	ldr	r0, [r1, r0, lsl #2]
    e420:	add	pc, r1, r0
    e424:	.word	0x00000034
    e428:	.word	0x00000074
    e42c:	.word	0x000000b4
    e430:	.word	0x00000104
    e434:	.word	0x00000154
    e438:	.word	0x000001a4
    e43c:	.word	0x000001f4
    e440:	.word	0x00000434
    e444:	.word	0x00000248
    e448:	.word	0x00000434
    e44c:	.word	0x00000434
    e450:	.word	0x0000029c
    e454:	.word	0x000002e8
    e458:	cmp	sl, #1
    e45c:	blt	e858 <ReadCompressedInt64Data+0x498>
    e460:	mov	r8, sp
    e464:	mov	r4, sl
    e468:	mov	r0, r7
    e46c:	mov	r1, r6
    e470:	mov	r2, r8
    e474:	mov	r3, r9
    e478:	bl	3238 <InflateData>
    e47c:	ldrsb	r0, [sp]
    e480:	subs	r4, r4, #1
    e484:	asr	r1, r0, #31
    e488:	strd	r0, [r5]
    e48c:	add	r5, r5, #8
    e490:	bne	e468 <ReadCompressedInt64Data+0xa8>
    e494:	b	e858 <ReadCompressedInt64Data+0x498>
    e498:	cmp	sl, #1
    e49c:	blt	e854 <ReadCompressedInt64Data+0x494>
    e4a0:	ldr	r4, [fp, #8]
    e4a4:	mov	r8, sp
    e4a8:	mov	sl, #0
    e4ac:	mov	r0, r7
    e4b0:	mov	r1, r6
    e4b4:	mov	r2, r8
    e4b8:	mov	r3, r9
    e4bc:	bl	3238 <InflateData>
    e4c0:	ldrb	r0, [sp]
    e4c4:	subs	r4, r4, #1
    e4c8:	stm	r5, {r0, sl}
    e4cc:	add	r5, r5, #8
    e4d0:	bne	e4ac <ReadCompressedInt64Data+0xec>
    e4d4:	b	e854 <ReadCompressedInt64Data+0x494>
    e4d8:	ldr	r0, [r7, #20]
    e4dc:	cmp	r0, #0
    e4e0:	beq	e758 <ReadCompressedInt64Data+0x398>
    e4e4:	cmp	sl, #1
    e4e8:	blt	e858 <ReadCompressedInt64Data+0x498>
    e4ec:	mov	r8, sp
    e4f0:	mov	r4, sl
    e4f4:	mov	r0, r7
    e4f8:	mov	r1, r6
    e4fc:	mov	r2, r8
    e500:	mov	r3, r9
    e504:	bl	3238 <InflateData>
    e508:	mov	r0, r8
    e50c:	bl	1c20 <Mat_int16Swap>
    e510:	asr	r1, r0, #31
    e514:	subs	r4, r4, #1
    e518:	strd	r0, [r5]
    e51c:	add	r5, r5, #8
    e520:	bne	e4f4 <ReadCompressedInt64Data+0x134>
    e524:	b	e858 <ReadCompressedInt64Data+0x498>
    e528:	ldr	r0, [r7, #20]
    e52c:	cmp	r0, #0
    e530:	beq	e798 <ReadCompressedInt64Data+0x3d8>
    e534:	cmp	sl, #1
    e538:	blt	e854 <ReadCompressedInt64Data+0x494>
    e53c:	ldr	r4, [fp, #8]
    e540:	mov	r8, sp
    e544:	mov	sl, #0
    e548:	mov	r0, r7
    e54c:	mov	r1, r6
    e550:	mov	r2, r8
    e554:	mov	r3, r9
    e558:	bl	3238 <InflateData>
    e55c:	mov	r0, r8
    e560:	bl	1c34 <Mat_uint16Swap>
    e564:	stm	r5, {r0, sl}
    e568:	add	r5, r5, #8
    e56c:	subs	r4, r4, #1
    e570:	bne	e548 <ReadCompressedInt64Data+0x188>
    e574:	b	e854 <ReadCompressedInt64Data+0x494>
    e578:	ldr	r0, [r7, #20]
    e57c:	cmp	r0, #0
    e580:	beq	e7d8 <ReadCompressedInt64Data+0x418>
    e584:	cmp	sl, #1
    e588:	blt	e858 <ReadCompressedInt64Data+0x498>
    e58c:	mov	r8, sp
    e590:	mov	r4, sl
    e594:	mov	r0, r7
    e598:	mov	r1, r6
    e59c:	mov	r2, r8
    e5a0:	mov	r3, r9
    e5a4:	bl	3238 <InflateData>
    e5a8:	mov	r0, r8
    e5ac:	bl	1bf8 <Mat_int32Swap>
    e5b0:	asr	r1, r0, #31
    e5b4:	subs	r4, r4, #1
    e5b8:	strd	r0, [r5]
    e5bc:	add	r5, r5, #8
    e5c0:	bne	e594 <ReadCompressedInt64Data+0x1d4>
    e5c4:	b	e858 <ReadCompressedInt64Data+0x498>
    e5c8:	ldr	r0, [r7, #20]
    e5cc:	cmp	r0, #0
    e5d0:	beq	e818 <ReadCompressedInt64Data+0x458>
    e5d4:	cmp	sl, #1
    e5d8:	blt	e854 <ReadCompressedInt64Data+0x494>
    e5dc:	ldr	sl, [fp, #8]
    e5e0:	mov	r8, sp
    e5e4:	mov	r4, #0
    e5e8:	mov	r0, r7
    e5ec:	mov	r1, r6
    e5f0:	mov	r2, r8
    e5f4:	mov	r3, r9
    e5f8:	bl	3238 <InflateData>
    e5fc:	mov	r0, r8
    e600:	bl	1c0c <Mat_uint32Swap>
    e604:	stm	r5, {r0, r4}
    e608:	add	r5, r5, #8
    e60c:	subs	sl, sl, #1
    e610:	bne	e5e8 <ReadCompressedInt64Data+0x228>
    e614:	b	e854 <ReadCompressedInt64Data+0x494>
    e618:	ldr	r0, [r7, #20]
    e61c:	cmp	r0, #0
    e620:	beq	e864 <ReadCompressedInt64Data+0x4a4>
    e624:	cmp	sl, #1
    e628:	blt	e858 <ReadCompressedInt64Data+0x498>
    e62c:	mov	r8, sp
    e630:	mov	r4, sl
    e634:	mov	r0, r7
    e638:	mov	r1, r6
    e63c:	mov	r2, r8
    e640:	mov	r3, r9
    e644:	bl	3238 <InflateData>
    e648:	mov	r0, r8
    e64c:	bl	1c4c <Mat_floatSwap>
    e650:	vmov	r0, s0
    e654:	bl	6b914 <__aeabi_f2lz>
    e658:	strd	r0, [r5]
    e65c:	add	r5, r5, #8
    e660:	subs	r4, r4, #1
    e664:	bne	e634 <ReadCompressedInt64Data+0x274>
    e668:	b	e858 <ReadCompressedInt64Data+0x498>
    e66c:	ldr	r0, [r7, #20]
    e670:	cmp	r0, #0
    e674:	beq	e8a4 <ReadCompressedInt64Data+0x4e4>
    e678:	cmp	sl, #1
    e67c:	blt	e858 <ReadCompressedInt64Data+0x498>
    e680:	mov	r8, sp
    e684:	mov	r4, sl
    e688:	mov	r0, r7
    e68c:	mov	r1, r6
    e690:	mov	r2, r8
    e694:	mov	r3, r9
    e698:	bl	3238 <InflateData>
    e69c:	mov	r0, r8
    e6a0:	bl	1c90 <Mat_doubleSwap>
    e6a4:	vmov	r0, r1, d0
    e6a8:	bl	6b940 <__aeabi_d2lz>
    e6ac:	strd	r0, [r5]
    e6b0:	add	r5, r5, #8
    e6b4:	subs	r4, r4, #1
    e6b8:	bne	e688 <ReadCompressedInt64Data+0x2c8>
    e6bc:	b	e858 <ReadCompressedInt64Data+0x498>
    e6c0:	ldr	r0, [r7, #20]
    e6c4:	cmp	r0, #0
    e6c8:	beq	e8e8 <ReadCompressedInt64Data+0x528>
    e6cc:	cmp	sl, #1
    e6d0:	blt	e858 <ReadCompressedInt64Data+0x498>
    e6d4:	mov	r8, sp
    e6d8:	mov	r4, sl
    e6dc:	mov	r0, r7
    e6e0:	mov	r1, r6
    e6e4:	mov	r2, r8
    e6e8:	mov	r3, r9
    e6ec:	bl	3238 <InflateData>
    e6f0:	mov	r0, r8
    e6f4:	bl	1b84 <Mat_int64Swap>
    e6f8:	strd	r0, [r5]
    e6fc:	add	r5, r5, #8
    e700:	subs	r4, r4, #1
    e704:	bne	e6dc <ReadCompressedInt64Data+0x31c>
    e708:	b	e858 <ReadCompressedInt64Data+0x498>
    e70c:	ldr	r0, [r7, #20]
    e710:	cmp	r0, #0
    e714:	beq	e924 <ReadCompressedInt64Data+0x564>
    e718:	cmp	sl, #1
    e71c:	blt	e858 <ReadCompressedInt64Data+0x498>
    e720:	mov	r8, sp
    e724:	mov	r4, sl
    e728:	mov	r0, r7
    e72c:	mov	r1, r6
    e730:	mov	r2, r8
    e734:	mov	r3, r9
    e738:	bl	3238 <InflateData>
    e73c:	mov	r0, r8
    e740:	bl	1bd4 <Mat_uint64Swap>
    e744:	strd	r0, [r5]
    e748:	add	r5, r5, #8
    e74c:	subs	r4, r4, #1
    e750:	bne	e728 <ReadCompressedInt64Data+0x368>
    e754:	b	e858 <ReadCompressedInt64Data+0x498>
    e758:	cmp	sl, #1
    e75c:	blt	e858 <ReadCompressedInt64Data+0x498>
    e760:	mov	r8, sp
    e764:	mov	r4, sl
    e768:	mov	r0, r7
    e76c:	mov	r1, r6
    e770:	mov	r2, r8
    e774:	mov	r3, r9
    e778:	bl	3238 <InflateData>
    e77c:	ldrsh	r0, [sp]
    e780:	subs	r4, r4, #1
    e784:	asr	r1, r0, #31
    e788:	strd	r0, [r5]
    e78c:	add	r5, r5, #8
    e790:	bne	e768 <ReadCompressedInt64Data+0x3a8>
    e794:	b	e858 <ReadCompressedInt64Data+0x498>
    e798:	cmp	sl, #1
    e79c:	blt	e854 <ReadCompressedInt64Data+0x494>
    e7a0:	ldr	r4, [fp, #8]
    e7a4:	mov	r8, sp
    e7a8:	mov	sl, #0
    e7ac:	mov	r0, r7
    e7b0:	mov	r1, r6
    e7b4:	mov	r2, r8
    e7b8:	mov	r3, r9
    e7bc:	bl	3238 <InflateData>
    e7c0:	ldrh	r0, [sp]
    e7c4:	subs	r4, r4, #1
    e7c8:	stm	r5, {r0, sl}
    e7cc:	add	r5, r5, #8
    e7d0:	bne	e7ac <ReadCompressedInt64Data+0x3ec>
    e7d4:	b	e854 <ReadCompressedInt64Data+0x494>
    e7d8:	cmp	sl, #1
    e7dc:	blt	e858 <ReadCompressedInt64Data+0x498>
    e7e0:	mov	r8, sp
    e7e4:	mov	r4, sl
    e7e8:	mov	r0, r7
    e7ec:	mov	r1, r6
    e7f0:	mov	r2, r8
    e7f4:	mov	r3, r9
    e7f8:	bl	3238 <InflateData>
    e7fc:	ldr	r0, [sp]
    e800:	subs	r4, r4, #1
    e804:	asr	r1, r0, #31
    e808:	strd	r0, [r5]
    e80c:	add	r5, r5, #8
    e810:	bne	e7e8 <ReadCompressedInt64Data+0x428>
    e814:	b	e858 <ReadCompressedInt64Data+0x498>
    e818:	cmp	sl, #1
    e81c:	blt	e854 <ReadCompressedInt64Data+0x494>
    e820:	ldr	r4, [fp, #8]
    e824:	mov	r8, sp
    e828:	mov	sl, #0
    e82c:	mov	r0, r7
    e830:	mov	r1, r6
    e834:	mov	r2, r8
    e838:	mov	r3, r9
    e83c:	bl	3238 <InflateData>
    e840:	ldr	r0, [sp]
    e844:	subs	r4, r4, #1
    e848:	stm	r5, {r0, sl}
    e84c:	add	r5, r5, #8
    e850:	bne	e82c <ReadCompressedInt64Data+0x46c>
    e854:	ldr	sl, [fp, #8]
    e858:	mul	r0, r9, sl
    e85c:	sub	sp, fp, #28
    e860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e864:	cmp	sl, #1
    e868:	blt	e858 <ReadCompressedInt64Data+0x498>
    e86c:	mov	r8, sp
    e870:	mov	r4, sl
    e874:	mov	r0, r7
    e878:	mov	r1, r6
    e87c:	mov	r2, r8
    e880:	mov	r3, r9
    e884:	bl	3238 <InflateData>
    e888:	ldr	r0, [sp]
    e88c:	bl	6b914 <__aeabi_f2lz>
    e890:	strd	r0, [r5]
    e894:	add	r5, r5, #8
    e898:	subs	r4, r4, #1
    e89c:	bne	e874 <ReadCompressedInt64Data+0x4b4>
    e8a0:	b	e858 <ReadCompressedInt64Data+0x498>
    e8a4:	cmp	sl, #1
    e8a8:	blt	e858 <ReadCompressedInt64Data+0x498>
    e8ac:	mov	r8, sp
    e8b0:	mov	r4, sl
    e8b4:	mov	r0, r7
    e8b8:	mov	r1, r6
    e8bc:	mov	r2, r8
    e8c0:	mov	r3, r9
    e8c4:	bl	3238 <InflateData>
    e8c8:	vldr	d16, [sp]
    e8cc:	vmov	r0, r1, d16
    e8d0:	bl	6b940 <__aeabi_d2lz>
    e8d4:	strd	r0, [r5]
    e8d8:	add	r5, r5, #8
    e8dc:	subs	r4, r4, #1
    e8e0:	bne	e8b4 <ReadCompressedInt64Data+0x4f4>
    e8e4:	b	e858 <ReadCompressedInt64Data+0x498>
    e8e8:	cmp	sl, #1
    e8ec:	blt	e858 <ReadCompressedInt64Data+0x498>
    e8f0:	mov	r8, sp
    e8f4:	mov	r4, sl
    e8f8:	mov	r0, r7
    e8fc:	mov	r1, r6
    e900:	mov	r2, r8
    e904:	mov	r3, r9
    e908:	bl	3238 <InflateData>
    e90c:	ldm	sp, {r0, r1}
    e910:	subs	r4, r4, #1
    e914:	strd	r0, [r5]
    e918:	add	r5, r5, #8
    e91c:	bne	e8f8 <ReadCompressedInt64Data+0x538>
    e920:	b	e858 <ReadCompressedInt64Data+0x498>
    e924:	cmp	sl, #1
    e928:	blt	e858 <ReadCompressedInt64Data+0x498>
    e92c:	mov	r8, sp
    e930:	mov	r4, sl
    e934:	mov	r0, r7
    e938:	mov	r1, r6
    e93c:	mov	r2, r8
    e940:	mov	r3, r9
    e944:	bl	3238 <InflateData>
    e948:	ldm	sp, {r0, r1}
    e94c:	subs	r4, r4, #1
    e950:	strd	r0, [r5]
    e954:	add	r5, r5, #8
    e958:	bne	e934 <ReadCompressedInt64Data+0x574>
    e95c:	b	e858 <ReadCompressedInt64Data+0x498>

0000e960 <ReadUInt64Data>:
    e960:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e964:	add	fp, sp, #28
    e968:	sub	sp, sp, #300	; 0x12c
    e96c:	sub	sp, sp, #2048	; 0x800
    e970:	mov	r4, r0
    e974:	mov	r0, #0
    e978:	cmp	r4, #0
    e97c:	movne	r7, r1
    e980:	cmpne	r1, #0
    e984:	bne	e990 <ReadUInt64Data+0x30>
    e988:	sub	sp, fp, #28
    e98c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e990:	ldr	r1, [r4]
    e994:	cmp	r1, #0
    e998:	beq	e988 <ReadUInt64Data+0x28>
    e99c:	mov	r0, r2
    e9a0:	mov	r6, r3
    e9a4:	mov	r5, r2
    e9a8:	bl	1924 <Mat_SizeOf@plt>
    e9ac:	mov	sl, r0
    e9b0:	sub	r0, r5, #1
    e9b4:	mov	r9, #0
    e9b8:	str	r4, [sp, #36]	; 0x24
    e9bc:	cmp	r0, #11
    e9c0:	bhi	1086c <ReadUInt64Data+0x1f0c>
    e9c4:	add	r1, pc, #8
    e9c8:	add	r8, sp, #232	; 0xe8
    e9cc:	ldr	r0, [r1, r0, lsl #2]
    e9d0:	add	pc, r1, r0
    e9d4:	.word	0x00000030
    e9d8:	.word	0x000000f4
    e9dc:	.word	0x000001bc
    e9e0:	.word	0x00000218
    e9e4:	.word	0x00000274
    e9e8:	.word	0x000002d0
    e9ec:	.word	0x0000032c
    e9f0:	.word	0x00001e98
    e9f4:	.word	0x0000038c
    e9f8:	.word	0x00001e98
    e9fc:	.word	0x00001e98
    ea00:	.word	0x000003ec
    ea04:	cmp	r6, #256	; 0x100
    ea08:	bgt	ee34 <ReadUInt64Data+0x4d4>
    ea0c:	ldr	r3, [r4]
    ea10:	add	r4, sp, #296	; 0x128
    ea14:	mov	r1, sl
    ea18:	mov	r2, r6
    ea1c:	mov	r0, r4
    ea20:	bl	18b8 <fread@plt>
    ea24:	mov	r9, r0
    ea28:	cmp	r6, #1
    ea2c:	blt	10c20 <ReadUInt64Data+0x22c0>
    ea30:	mov	lr, #0
    ea34:	beq	10af4 <ReadUInt64Data+0x2194>
    ea38:	bic	lr, r6, #1
    ea3c:	mov	r1, #1
    ea40:	str	sl, [sp, #32]
    ea44:	mov	sl, r7
    ea48:	str	r9, [sp, #28]
    ea4c:	str	r6, [sp, #8]
    ea50:	subs	r0, lr, #2
    ea54:	add	r0, r1, r0, lsr #1
    ea58:	and	ip, r0, #1
    ea5c:	beq	10aac <ReadUInt64Data+0x214c>
    ea60:	sub	r3, r0, ip
    ea64:	mov	r1, #0
    ea68:	add	r9, sp, #236	; 0xec
    ea6c:	mov	r5, #32
    ea70:	add	r2, sp, #240	; 0xf0
    ea74:	mov	r0, sl
    ea78:	add	r7, r4, r1
    ea7c:	subs	r3, r3, #2
    ea80:	add	r1, r1, #4
    ea84:	ldrh	r6, [r7]
    ea88:	strh	r6, [r8, #4]
    ea8c:	add	r6, r0, #16
    ea90:	vld1.16	{d16[0]}, [r9 :16]
    ea94:	vmovl.s8	q8, d16
    ea98:	vmovl.s16	q8, d16
    ea9c:	vmovl.s32	q8, d16
    eaa0:	vst1.64	{d16-d17}, [r0], r5
    eaa4:	ldrh	r7, [r7, #2]
    eaa8:	strh	r7, [r8, #8]
    eaac:	vld1.16	{d16[0]}, [r2 :16]
    eab0:	vmovl.s8	q8, d16
    eab4:	vmovl.s16	q8, d16
    eab8:	vmovl.s32	q8, d16
    eabc:	vst1.64	{d16-d17}, [r6]
    eac0:	bne	ea78 <ReadUInt64Data+0x118>
    eac4:	b	10ab0 <ReadUInt64Data+0x2150>
    eac8:	cmp	r6, #256	; 0x100
    eacc:	bgt	f010 <ReadUInt64Data+0x6b0>
    ead0:	ldr	r3, [r4]
    ead4:	add	r9, sp, #296	; 0x128
    ead8:	mov	r1, sl
    eadc:	mov	r2, r6
    eae0:	mov	r0, r9
    eae4:	bl	18b8 <fread@plt>
    eae8:	mov	ip, r0
    eaec:	cmp	r6, #1
    eaf0:	blt	10b8c <ReadUInt64Data+0x222c>
    eaf4:	mov	r1, #0
    eaf8:	mov	lr, #0
    eafc:	beq	10b68 <ReadUInt64Data+0x2208>
    eb00:	bic	lr, r6, #1
    eb04:	mov	r2, #1
    eb08:	str	r7, [sp, #4]
    eb0c:	str	r6, [sp, #8]
    eb10:	str	sl, [sp, #32]
    eb14:	subs	r0, lr, #2
    eb18:	add	r0, r2, r0, lsr #1
    eb1c:	and	r2, r0, #1
    eb20:	str	r2, [sp, #36]	; 0x24
    eb24:	beq	10b1c <ReadUInt64Data+0x21bc>
    eb28:	ldr	r7, [sp, #4]
    eb2c:	sub	r6, r0, r2
    eb30:	mov	r2, #0
    eb34:	add	sl, sp, #268	; 0x10c
    eb38:	mov	r3, #32
    eb3c:	add	r0, sp, #272	; 0x110
    eb40:	add	r4, r9, r2
    eb44:	subs	r6, r6, #2
    eb48:	add	r2, r2, #4
    eb4c:	ldrh	r5, [r4]
    eb50:	strh	r5, [r8, #36]	; 0x24
    eb54:	add	r5, r7, #16
    eb58:	vld1.16	{d16[0]}, [sl :16]
    eb5c:	vmovl.u8	q8, d16
    eb60:	vmovl.u16	q8, d16
    eb64:	vmovl.u32	q8, d16
    eb68:	vst1.64	{d16-d17}, [r7], r3
    eb6c:	ldrh	r4, [r4, #2]
    eb70:	strh	r4, [r8, #40]	; 0x28
    eb74:	vld1.16	{d16[0]}, [r0 :16]
    eb78:	vmovl.u8	q8, d16
    eb7c:	vmovl.u16	q8, d16
    eb80:	vmovl.u32	q8, d16
    eb84:	vst1.64	{d16-d17}, [r5]
    eb88:	bne	eb40 <ReadUInt64Data+0x1e0>
    eb8c:	b	10b20 <ReadUInt64Data+0x21c0>
    eb90:	ldr	r0, [r4, #20]
    eb94:	cmp	r0, #0
    eb98:	beq	f1f0 <ReadUInt64Data+0x890>
    eb9c:	cmp	r6, #256	; 0x100
    eba0:	bgt	f674 <ReadUInt64Data+0xd14>
    eba4:	ldr	r3, [r4]
    eba8:	add	r4, sp, #296	; 0x128
    ebac:	mov	r1, sl
    ebb0:	mov	r2, r6
    ebb4:	mov	r0, r4
    ebb8:	bl	18b8 <fread@plt>
    ebbc:	mov	r9, r0
    ebc0:	cmp	r6, #1
    ebc4:	blt	10c20 <ReadUInt64Data+0x22c0>
    ebc8:	mov	r0, r4
    ebcc:	bl	1c20 <Mat_int16Swap>
    ebd0:	asr	r1, r0, #31
    ebd4:	add	r4, r4, #2
    ebd8:	subs	r6, r6, #1
    ebdc:	strd	r0, [r7]
    ebe0:	add	r7, r7, #8
    ebe4:	bne	ebc8 <ReadUInt64Data+0x268>
    ebe8:	b	10c20 <ReadUInt64Data+0x22c0>
    ebec:	ldr	r0, [r4, #20]
    ebf0:	cmp	r0, #0
    ebf4:	beq	f2a8 <ReadUInt64Data+0x948>
    ebf8:	cmp	r6, #256	; 0x100
    ebfc:	bgt	f764 <ReadUInt64Data+0xe04>
    ec00:	ldr	r3, [r4]
    ec04:	add	r4, sp, #296	; 0x128
    ec08:	mov	r1, sl
    ec0c:	mov	r2, r6
    ec10:	mov	r0, r4
    ec14:	bl	18b8 <fread@plt>
    ec18:	mov	r9, r0
    ec1c:	cmp	r6, #1
    ec20:	blt	10c20 <ReadUInt64Data+0x22c0>
    ec24:	mov	r5, #0
    ec28:	mov	r0, r4
    ec2c:	bl	1c34 <Mat_uint16Swap>
    ec30:	stm	r7, {r0, r5}
    ec34:	add	r4, r4, #2
    ec38:	add	r7, r7, #8
    ec3c:	subs	r6, r6, #1
    ec40:	bne	ec28 <ReadUInt64Data+0x2c8>
    ec44:	b	10c20 <ReadUInt64Data+0x22c0>
    ec48:	ldr	r0, [r4, #20]
    ec4c:	cmp	r0, #0
    ec50:	beq	f368 <ReadUInt64Data+0xa08>
    ec54:	cmp	r6, #256	; 0x100
    ec58:	bgt	f860 <ReadUInt64Data+0xf00>
    ec5c:	ldr	r3, [r4]
    ec60:	add	r4, sp, #296	; 0x128
    ec64:	mov	r1, sl
    ec68:	mov	r2, r6
    ec6c:	mov	r0, r4
    ec70:	bl	18b8 <fread@plt>
    ec74:	mov	r9, r0
    ec78:	cmp	r6, #1
    ec7c:	blt	10c20 <ReadUInt64Data+0x22c0>
    ec80:	mov	r0, r4
    ec84:	bl	1bf8 <Mat_int32Swap>
    ec88:	asr	r1, r0, #31
    ec8c:	add	r4, r4, #4
    ec90:	subs	r6, r6, #1
    ec94:	strd	r0, [r7]
    ec98:	add	r7, r7, #8
    ec9c:	bne	ec80 <ReadUInt64Data+0x320>
    eca0:	b	10c20 <ReadUInt64Data+0x22c0>
    eca4:	ldr	r0, [r4, #20]
    eca8:	cmp	r0, #0
    ecac:	beq	f428 <ReadUInt64Data+0xac8>
    ecb0:	cmp	r6, #256	; 0x100
    ecb4:	bgt	f950 <ReadUInt64Data+0xff0>
    ecb8:	ldr	r3, [r4]
    ecbc:	add	r4, sp, #296	; 0x128
    ecc0:	mov	r1, sl
    ecc4:	mov	r2, r6
    ecc8:	mov	r0, r4
    eccc:	bl	18b8 <fread@plt>
    ecd0:	mov	r9, r0
    ecd4:	cmp	r6, #1
    ecd8:	blt	10c20 <ReadUInt64Data+0x22c0>
    ecdc:	mov	r5, #0
    ece0:	mov	r0, r4
    ece4:	bl	1c0c <Mat_uint32Swap>
    ece8:	stm	r7, {r0, r5}
    ecec:	add	r4, r4, #4
    ecf0:	add	r7, r7, #8
    ecf4:	subs	r6, r6, #1
    ecf8:	bne	ece0 <ReadUInt64Data+0x380>
    ecfc:	b	10c20 <ReadUInt64Data+0x22c0>
    ed00:	ldr	r0, [r4, #20]
    ed04:	cmp	r0, #0
    ed08:	beq	f4f0 <ReadUInt64Data+0xb90>
    ed0c:	cmp	r6, #256	; 0x100
    ed10:	bgt	fa4c <ReadUInt64Data+0x10ec>
    ed14:	ldr	r3, [r4]
    ed18:	add	r4, sp, #296	; 0x128
    ed1c:	mov	r1, sl
    ed20:	mov	r2, r6
    ed24:	mov	r0, r4
    ed28:	bl	18b8 <fread@plt>
    ed2c:	mov	r9, r0
    ed30:	cmp	r6, #1
    ed34:	blt	10c20 <ReadUInt64Data+0x22c0>
    ed38:	mov	r0, r4
    ed3c:	bl	1c4c <Mat_floatSwap>
    ed40:	vmov	r0, s0
    ed44:	bl	6b970 <__aeabi_f2ulz>
    ed48:	strd	r0, [r7]
    ed4c:	add	r4, r4, #4
    ed50:	add	r7, r7, #8
    ed54:	subs	r6, r6, #1
    ed58:	bne	ed38 <ReadUInt64Data+0x3d8>
    ed5c:	b	10c20 <ReadUInt64Data+0x22c0>
    ed60:	ldr	r0, [r4, #20]
    ed64:	cmp	r0, #0
    ed68:	beq	f584 <ReadUInt64Data+0xc24>
    ed6c:	cmp	r6, #256	; 0x100
    ed70:	bgt	fb44 <ReadUInt64Data+0x11e4>
    ed74:	ldr	r3, [r4]
    ed78:	add	r4, sp, #296	; 0x128
    ed7c:	mov	r1, sl
    ed80:	mov	r2, r6
    ed84:	mov	r0, r4
    ed88:	bl	18b8 <fread@plt>
    ed8c:	mov	r9, r0
    ed90:	cmp	r6, #1
    ed94:	blt	10c20 <ReadUInt64Data+0x22c0>
    ed98:	mov	r0, r4
    ed9c:	bl	1c90 <Mat_doubleSwap>
    eda0:	vmov	r0, r1, d0
    eda4:	bl	6b9b0 <__aeabi_d2ulz>
    eda8:	strd	r0, [r7]
    edac:	add	r4, r4, #8
    edb0:	add	r7, r7, #8
    edb4:	subs	r6, r6, #1
    edb8:	bne	ed98 <ReadUInt64Data+0x438>
    edbc:	b	10c20 <ReadUInt64Data+0x22c0>
    edc0:	ldr	r0, [r4, #20]
    edc4:	cmp	r0, #0
    edc8:	beq	f630 <ReadUInt64Data+0xcd0>
    edcc:	cmp	r6, #256	; 0x100
    edd0:	bgt	fc40 <ReadUInt64Data+0x12e0>
    edd4:	ldr	r3, [r4]
    edd8:	add	r4, sp, #296	; 0x128
    eddc:	mov	r1, sl
    ede0:	mov	r2, r6
    ede4:	mov	r0, r4
    ede8:	bl	18b8 <fread@plt>
    edec:	mov	r9, r0
    edf0:	cmp	r6, #1
    edf4:	blt	10a94 <ReadUInt64Data+0x2134>
    edf8:	str	r5, [sp, #24]
    edfc:	mov	r8, r7
    ee00:	mov	r5, r7
    ee04:	mov	r7, r6
    ee08:	mov	r0, r4
    ee0c:	bl	1b84 <Mat_int64Swap>
    ee10:	strd	r0, [r5]
    ee14:	add	r4, r4, #8
    ee18:	add	r5, r5, #8
    ee1c:	subs	r6, r6, #1
    ee20:	bne	ee08 <ReadUInt64Data+0x4a8>
    ee24:	ldr	r4, [sp, #36]	; 0x24
    ee28:	mov	r6, r7
    ee2c:	mov	r7, r8
    ee30:	b	10868 <ReadUInt64Data+0x1f08>
    ee34:	sub	r1, r6, #256	; 0x100
    ee38:	str	sl, [sp, #32]
    ee3c:	str	r6, [sp, #8]
    ee40:	mov	r9, r7
    ee44:	add	r0, r7, #2048	; 0x800
    ee48:	mov	r2, #0
    ee4c:	mov	r4, #0
    ee50:	add	r7, sp, #296	; 0x128
    ee54:	add	r5, sp, #256	; 0x100
    ee58:	mov	sl, #32
    ee5c:	add	r6, sp, #260	; 0x104
    ee60:	str	r1, [sp, #12]
    ee64:	mov	r1, #256	; 0x100
    ee68:	str	r9, [sp, #4]
    ee6c:	str	r2, [sp, #28]
    ee70:	add	r2, sp, #16
    ee74:	stm	r2, {r0, r1, r4}
    ee78:	ldr	r0, [sp, #36]	; 0x24
    ee7c:	ldr	r1, [sp, #32]
    ee80:	mov	r2, #256	; 0x100
    ee84:	ldr	r3, [r0]
    ee88:	mov	r0, r7
    ee8c:	bl	18b8 <fread@plt>
    ee90:	mov	r1, r9
    ee94:	mov	r2, #0
    ee98:	add	r3, r7, r2
    ee9c:	add	r2, r2, #4
    eea0:	ldrh	r4, [r3]
    eea4:	cmp	r2, #256	; 0x100
    eea8:	strh	r4, [r8, #24]
    eeac:	add	r4, r1, #16
    eeb0:	vld1.16	{d16[0]}, [r5 :16]
    eeb4:	vmovl.s8	q8, d16
    eeb8:	vmovl.s16	q8, d16
    eebc:	vmovl.s32	q8, d16
    eec0:	vst1.64	{d16-d17}, [r1], sl
    eec4:	ldrh	r3, [r3, #2]
    eec8:	strh	r3, [r8, #28]
    eecc:	vld1.16	{d16[0]}, [r6 :16]
    eed0:	vmovl.s8	q8, d16
    eed4:	vmovl.s16	q8, d16
    eed8:	vmovl.s32	q8, d16
    eedc:	vst1.64	{d16-d17}, [r4]
    eee0:	bne	ee98 <ReadUInt64Data+0x538>
    eee4:	ldr	r1, [sp, #28]
    eee8:	ldr	r2, [sp, #24]
    eeec:	add	r9, r9, #2048	; 0x800
    eef0:	add	r1, r0, r1
    eef4:	ldr	r0, [sp, #16]
    eef8:	add	r4, r2, #256	; 0x100
    eefc:	ldr	r2, [sp, #12]
    ef00:	str	r1, [sp, #28]
    ef04:	ldr	r1, [sp, #20]
    ef08:	add	r0, r0, #2048	; 0x800
    ef0c:	cmp	r4, r2
    ef10:	add	r1, r1, #256	; 0x100
    ef14:	blt	ee70 <ReadUInt64Data+0x510>
    ef18:	ldr	r5, [sp, #8]
    ef1c:	cmp	r4, r5
    ef20:	bge	105fc <ReadUInt64Data+0x1c9c>
    ef24:	ldr	r0, [sp, #36]	; 0x24
    ef28:	ldr	sl, [sp, #32]
    ef2c:	sub	r6, r5, r4
    ef30:	add	r9, sp, #296	; 0x128
    ef34:	mov	r2, r6
    ef38:	ldr	r3, [r0]
    ef3c:	mov	r0, r9
    ef40:	mov	r1, sl
    ef44:	bl	18b8 <fread@plt>
    ef48:	ldr	r1, [sp, #28]
    ef4c:	cmp	r6, #1
    ef50:	add	r1, r0, r1
    ef54:	str	r1, [sp, #28]
    ef58:	blt	10cb8 <ReadUInt64Data+0x2358>
    ef5c:	ldr	sl, [sp, #4]
    ef60:	mov	lr, #0
    ef64:	beq	10be0 <ReadUInt64Data+0x2280>
    ef68:	bic	lr, r6, #1
    ef6c:	mov	r1, #1
    ef70:	str	r6, [sp, #36]	; 0x24
    ef74:	subs	r2, lr, #2
    ef78:	add	r2, r1, r2, lsr #1
    ef7c:	and	r0, r2, #1
    ef80:	str	r0, [sp, #12]
    ef84:	beq	10b94 <ReadUInt64Data+0x2234>
    ef88:	ldr	r0, [sp, #24]
    ef8c:	ldr	ip, [sp, #16]
    ef90:	add	r6, sp, #248	; 0xf8
    ef94:	sub	r2, r5, r0
    ef98:	mov	r5, #32
    ef9c:	sub	r2, r2, #256	; 0x100
    efa0:	bic	r2, r2, #1
    efa4:	sub	r2, r2, #2
    efa8:	add	r1, r1, r2, lsr #1
    efac:	mvn	r3, r2, lsr #1
    efb0:	mov	r2, #0
    efb4:	and	r1, r1, #1
    efb8:	add	r3, r3, r1
    efbc:	add	r1, sp, #252	; 0xfc
    efc0:	add	r0, r9, r2
    efc4:	adds	r3, r3, #2
    efc8:	add	r2, r2, #4
    efcc:	ldrh	r7, [r0]
    efd0:	strh	r7, [r8, #16]
    efd4:	add	r7, ip, #16
    efd8:	vld1.16	{d16[0]}, [r6 :16]
    efdc:	vmovl.s8	q8, d16
    efe0:	vmovl.s16	q8, d16
    efe4:	vmovl.s32	q8, d16
    efe8:	vst1.64	{d16-d17}, [ip], r5
    efec:	ldrh	r0, [r0, #2]
    eff0:	strh	r0, [r8, #20]
    eff4:	vld1.16	{d16[0]}, [r1 :16]
    eff8:	vmovl.s8	q8, d16
    effc:	vmovl.s16	q8, d16
    f000:	vmovl.s32	q8, d16
    f004:	vst1.64	{d16-d17}, [r7]
    f008:	bne	efc0 <ReadUInt64Data+0x660>
    f00c:	b	10b98 <ReadUInt64Data+0x2238>
    f010:	sub	r1, r6, #256	; 0x100
    f014:	str	sl, [sp, #32]
    f018:	str	r6, [sp, #8]
    f01c:	mov	r6, r7
    f020:	add	r0, r7, #2048	; 0x800
    f024:	mov	r2, #0
    f028:	mov	r4, #0
    f02c:	add	r7, sp, #296	; 0x128
    f030:	add	r5, sp, #288	; 0x120
    f034:	mov	sl, #32
    f038:	add	r9, sp, #292	; 0x124
    f03c:	str	r1, [sp, #12]
    f040:	mov	r1, #256	; 0x100
    f044:	str	r6, [sp, #4]
    f048:	str	r2, [sp, #28]
    f04c:	add	r2, sp, #16
    f050:	stm	r2, {r0, r1, r4}
    f054:	ldr	r0, [sp, #36]	; 0x24
    f058:	ldr	r1, [sp, #32]
    f05c:	mov	r2, #256	; 0x100
    f060:	ldr	r3, [r0]
    f064:	mov	r0, r7
    f068:	bl	18b8 <fread@plt>
    f06c:	mov	r1, r6
    f070:	mov	r2, #0
    f074:	add	r3, r7, r2
    f078:	add	r2, r2, #4
    f07c:	ldrh	r4, [r3]
    f080:	cmp	r2, #256	; 0x100
    f084:	strh	r4, [r8, #56]	; 0x38
    f088:	add	r4, r1, #16
    f08c:	vld1.16	{d16[0]}, [r5 :16]
    f090:	vmovl.u8	q8, d16
    f094:	vmovl.u16	q8, d16
    f098:	vmovl.u32	q8, d16
    f09c:	vst1.64	{d16-d17}, [r1], sl
    f0a0:	ldrh	r3, [r3, #2]
    f0a4:	strh	r3, [r8, #60]	; 0x3c
    f0a8:	vld1.16	{d16[0]}, [r9 :16]
    f0ac:	vmovl.u8	q8, d16
    f0b0:	vmovl.u16	q8, d16
    f0b4:	vmovl.u32	q8, d16
    f0b8:	vst1.64	{d16-d17}, [r4]
    f0bc:	bne	f074 <ReadUInt64Data+0x714>
    f0c0:	ldr	r1, [sp, #28]
    f0c4:	ldr	r2, [sp, #24]
    f0c8:	add	r6, r6, #2048	; 0x800
    f0cc:	add	r1, r0, r1
    f0d0:	ldr	r0, [sp, #16]
    f0d4:	add	r4, r2, #256	; 0x100
    f0d8:	ldr	r2, [sp, #12]
    f0dc:	str	r1, [sp, #28]
    f0e0:	ldr	r1, [sp, #20]
    f0e4:	add	r0, r0, #2048	; 0x800
    f0e8:	cmp	r4, r2
    f0ec:	add	r1, r1, #256	; 0x100
    f0f0:	blt	f04c <ReadUInt64Data+0x6ec>
    f0f4:	ldr	r5, [sp, #8]
    f0f8:	cmp	r4, r5
    f0fc:	bge	105fc <ReadUInt64Data+0x1c9c>
    f100:	ldr	r0, [sp, #36]	; 0x24
    f104:	ldr	sl, [sp, #32]
    f108:	sub	r6, r5, r4
    f10c:	add	r9, sp, #296	; 0x128
    f110:	mov	r2, r6
    f114:	ldr	r3, [r0]
    f118:	mov	r0, r9
    f11c:	mov	r1, sl
    f120:	bl	18b8 <fread@plt>
    f124:	ldr	r1, [sp, #28]
    f128:	cmp	r6, #1
    f12c:	add	r1, r0, r1
    f130:	str	r1, [sp, #28]
    f134:	blt	10cb8 <ReadUInt64Data+0x2358>
    f138:	ldr	r7, [sp, #4]
    f13c:	mov	r1, #0
    f140:	mov	lr, #0
    f144:	beq	10c80 <ReadUInt64Data+0x2320>
    f148:	bic	lr, r6, #1
    f14c:	mov	r0, #1
    f150:	str	r6, [sp, #36]	; 0x24
    f154:	subs	r2, lr, #2
    f158:	add	r2, r0, r2, lsr #1
    f15c:	and	r2, r2, #1
    f160:	str	r2, [sp, #12]
    f164:	beq	10c2c <ReadUInt64Data+0x22cc>
    f168:	ldr	r2, [sp, #24]
    f16c:	ldr	ip, [sp, #16]
    f170:	add	sl, sp, #280	; 0x118
    f174:	sub	r2, r5, r2
    f178:	sub	r2, r2, #256	; 0x100
    f17c:	bic	r2, r2, #1
    f180:	sub	r2, r2, #2
    f184:	add	r0, r0, r2, lsr #1
    f188:	mvn	r3, r2, lsr #1
    f18c:	mov	r2, #32
    f190:	and	r0, r0, #1
    f194:	add	r6, r3, r0
    f198:	mov	r3, #0
    f19c:	add	r0, sp, #284	; 0x11c
    f1a0:	add	r7, r9, r3
    f1a4:	adds	r6, r6, #2
    f1a8:	add	r3, r3, #4
    f1ac:	ldrh	r5, [r7]
    f1b0:	strh	r5, [r8, #48]	; 0x30
    f1b4:	add	r5, ip, #16
    f1b8:	vld1.16	{d16[0]}, [sl :16]
    f1bc:	vmovl.u8	q8, d16
    f1c0:	vmovl.u16	q8, d16
    f1c4:	vmovl.u32	q8, d16
    f1c8:	vst1.64	{d16-d17}, [ip], r2
    f1cc:	ldrh	r7, [r7, #2]
    f1d0:	strh	r7, [r8, #52]	; 0x34
    f1d4:	vld1.16	{d16[0]}, [r0 :16]
    f1d8:	vmovl.u8	q8, d16
    f1dc:	vmovl.u16	q8, d16
    f1e0:	vmovl.u32	q8, d16
    f1e4:	vst1.64	{d16-d17}, [r5]
    f1e8:	bne	f1a0 <ReadUInt64Data+0x840>
    f1ec:	b	10c30 <ReadUInt64Data+0x22d0>
    f1f0:	cmp	r6, #256	; 0x100
    f1f4:	bgt	fd58 <ReadUInt64Data+0x13f8>
    f1f8:	ldr	r3, [r4]
    f1fc:	add	r4, sp, #296	; 0x128
    f200:	mov	r1, sl
    f204:	mov	r2, r6
    f208:	mov	r0, r4
    f20c:	bl	18b8 <fread@plt>
    f210:	mov	r9, r0
    f214:	cmp	r6, #1
    f218:	blt	10c20 <ReadUInt64Data+0x22c0>
    f21c:	mov	lr, #0
    f220:	beq	10d08 <ReadUInt64Data+0x23a8>
    f224:	bic	lr, r6, #1
    f228:	mov	r2, #1
    f22c:	str	sl, [sp, #32]
    f230:	str	r6, [sp, #8]
    f234:	subs	r1, lr, #2
    f238:	add	r1, r2, r1, lsr #1
    f23c:	and	ip, r1, #1
    f240:	beq	10cc0 <ReadUInt64Data+0x2360>
    f244:	sub	r3, r1, ip
    f248:	mov	r1, #0
    f24c:	add	r8, sp, #172	; 0xac
    f250:	mov	r6, #32
    f254:	add	r5, sp, #176	; 0xb0
    f258:	mov	sl, r7
    f25c:	mov	r2, r7
    f260:	ldr	r0, [r4]
    f264:	subs	r3, r3, #2
    f268:	add	r1, r1, #4
    f26c:	str	r0, [sp, #172]	; 0xac
    f270:	add	r0, r2, #16
    f274:	vld1.32	{d16[0]}, [r8 :32]
    f278:	vmovl.s16	q8, d16
    f27c:	vmovl.s32	q8, d16
    f280:	vst1.64	{d16-d17}, [r2], r6
    f284:	ldr	r7, [r4, #4]
    f288:	add	r4, r4, #8
    f28c:	str	r7, [sp, #176]	; 0xb0
    f290:	vld1.32	{d16[0]}, [r5 :32]
    f294:	vmovl.s16	q8, d16
    f298:	vmovl.s32	q8, d16
    f29c:	vst1.64	{d16-d17}, [r0]
    f2a0:	bne	f260 <ReadUInt64Data+0x900>
    f2a4:	b	10cc8 <ReadUInt64Data+0x2368>
    f2a8:	cmp	r6, #256	; 0x100
    f2ac:	bgt	ff10 <ReadUInt64Data+0x15b0>
    f2b0:	ldr	r3, [r4]
    f2b4:	add	r4, sp, #296	; 0x128
    f2b8:	mov	r1, sl
    f2bc:	mov	r2, r6
    f2c0:	mov	r0, r4
    f2c4:	bl	18b8 <fread@plt>
    f2c8:	mov	r9, r0
    f2cc:	cmp	r6, #1
    f2d0:	blt	10c20 <ReadUInt64Data+0x22c0>
    f2d4:	mov	r1, #0
    f2d8:	mov	lr, #0
    f2dc:	beq	10d7c <ReadUInt64Data+0x241c>
    f2e0:	bic	lr, r6, #1
    f2e4:	mov	r2, #1
    f2e8:	str	sl, [sp, #32]
    f2ec:	mov	sl, r7
    f2f0:	str	r9, [sp, #28]
    f2f4:	str	r6, [sp, #8]
    f2f8:	subs	r0, lr, #2
    f2fc:	add	r0, r2, r0, lsr #1
    f300:	and	ip, r0, #1
    f304:	beq	10d34 <ReadUInt64Data+0x23d4>
    f308:	sub	r7, r0, ip
    f30c:	mov	r2, #0
    f310:	add	r8, sp, #204	; 0xcc
    f314:	mov	r9, #32
    f318:	add	r3, sp, #208	; 0xd0
    f31c:	mov	r0, sl
    f320:	ldr	r6, [r4]
    f324:	subs	r7, r7, #2
    f328:	add	r2, r2, #4
    f32c:	str	r6, [sp, #204]	; 0xcc
    f330:	add	r6, r0, #16
    f334:	vld1.32	{d16[0]}, [r8 :32]
    f338:	vmovl.u16	q8, d16
    f33c:	vmovl.u32	q8, d16
    f340:	vst1.64	{d16-d17}, [r0], r9
    f344:	ldr	r5, [r4, #4]
    f348:	add	r4, r4, #8
    f34c:	str	r5, [sp, #208]	; 0xd0
    f350:	vld1.32	{d16[0]}, [r3 :32]
    f354:	vmovl.u16	q8, d16
    f358:	vmovl.u32	q8, d16
    f35c:	vst1.64	{d16-d17}, [r6]
    f360:	bne	f320 <ReadUInt64Data+0x9c0>
    f364:	b	10d38 <ReadUInt64Data+0x23d8>
    f368:	cmp	r6, #256	; 0x100
    f36c:	bgt	100d0 <ReadUInt64Data+0x1770>
    f370:	ldr	r3, [r4]
    f374:	add	r4, sp, #296	; 0x128
    f378:	mov	r1, sl
    f37c:	mov	r2, r6
    f380:	mov	r0, r4
    f384:	bl	18b8 <fread@plt>
    f388:	mov	r9, r0
    f38c:	cmp	r6, #1
    f390:	blt	10c20 <ReadUInt64Data+0x22c0>
    f394:	mov	lr, #0
    f398:	beq	10e74 <ReadUInt64Data+0x2514>
    f39c:	bic	lr, r6, #1
    f3a0:	mov	r2, #1
    f3a4:	str	sl, [sp, #32]
    f3a8:	mov	sl, r7
    f3ac:	str	r6, [sp, #8]
    f3b0:	str	r9, [sp, #28]
    f3b4:	subs	r1, lr, #2
    f3b8:	add	r1, r2, r1, lsr #1
    f3bc:	and	ip, r1, #1
    f3c0:	beq	10e24 <ReadUInt64Data+0x24c4>
    f3c4:	sub	r3, r1, ip
    f3c8:	mov	r1, #0
    f3cc:	add	r8, sp, #48	; 0x30
    f3d0:	mov	r9, #32
    f3d4:	add	r5, sp, #56	; 0x38
    f3d8:	mov	r2, sl
    f3dc:	ldm	r4, {r0, r7}
    f3e0:	str	r7, [sp, #52]	; 0x34
    f3e4:	subs	r3, r3, #2
    f3e8:	add	r1, r1, #4
    f3ec:	str	r0, [sp, #48]	; 0x30
    f3f0:	add	r0, r2, #16
    f3f4:	vld1.32	{d16}, [r8 :64]
    f3f8:	vmovl.s32	q8, d16
    f3fc:	vst1.64	{d16-d17}, [r2], r9
    f400:	ldr	r7, [r4, #8]
    f404:	ldr	r6, [r4, #12]
    f408:	add	r4, r4, #16
    f40c:	str	r6, [sp, #60]	; 0x3c
    f410:	str	r7, [sp, #56]	; 0x38
    f414:	vld1.32	{d16}, [r5 :64]
    f418:	vmovl.s32	q8, d16
    f41c:	vst1.64	{d16-d17}, [r0]
    f420:	bne	f3dc <ReadUInt64Data+0xa7c>
    f424:	b	10e28 <ReadUInt64Data+0x24c8>
    f428:	cmp	r6, #256	; 0x100
    f42c:	bgt	102a8 <ReadUInt64Data+0x1948>
    f430:	ldr	r3, [r4]
    f434:	add	r4, sp, #296	; 0x128
    f438:	mov	r1, sl
    f43c:	mov	r2, r6
    f440:	mov	r0, r4
    f444:	bl	18b8 <fread@plt>
    f448:	mov	r9, r0
    f44c:	cmp	r6, #1
    f450:	blt	10c20 <ReadUInt64Data+0x22c0>
    f454:	mov	r1, #0
    f458:	mov	lr, #0
    f45c:	beq	10df8 <ReadUInt64Data+0x2498>
    f460:	bic	lr, r6, #1
    f464:	mov	r2, #1
    f468:	str	r7, [sp, #4]
    f46c:	str	r9, [sp, #28]
    f470:	str	r6, [sp, #8]
    f474:	str	sl, [sp, #32]
    f478:	subs	r0, lr, #2
    f47c:	add	r0, r2, r0, lsr #1
    f480:	and	ip, r0, #1
    f484:	beq	10da8 <ReadUInt64Data+0x2448>
    f488:	sub	r7, r0, ip
    f48c:	ldr	r0, [sp, #4]
    f490:	mov	r2, #0
    f494:	add	r8, sp, #112	; 0x70
    f498:	mov	r9, #32
    f49c:	add	sl, sp, #120	; 0x78
    f4a0:	ldr	r6, [r4]
    f4a4:	ldr	r5, [r4, #4]
    f4a8:	subs	r7, r7, #2
    f4ac:	add	r2, r2, #4
    f4b0:	str	r5, [sp, #116]	; 0x74
    f4b4:	str	r6, [sp, #112]	; 0x70
    f4b8:	add	r5, r0, #16
    f4bc:	vld1.32	{d16}, [r8 :64]
    f4c0:	vmovl.u32	q8, d16
    f4c4:	vst1.64	{d16-d17}, [r0], r9
    f4c8:	ldr	r6, [r4, #8]
    f4cc:	ldr	r3, [r4, #12]
    f4d0:	add	r4, r4, #16
    f4d4:	str	r3, [sp, #124]	; 0x7c
    f4d8:	str	r6, [sp, #120]	; 0x78
    f4dc:	vld1.32	{d16}, [sl :64]
    f4e0:	vmovl.u32	q8, d16
    f4e4:	vst1.64	{d16-d17}, [r5]
    f4e8:	bne	f4a0 <ReadUInt64Data+0xb40>
    f4ec:	b	10dac <ReadUInt64Data+0x244c>
    f4f0:	cmp	r6, #256	; 0x100
    f4f4:	bgt	1048c <ReadUInt64Data+0x1b2c>
    f4f8:	ldr	r3, [r4]
    f4fc:	add	r8, sp, #296	; 0x128
    f500:	mov	r1, sl
    f504:	mov	r2, r6
    f508:	mov	r0, r8
    f50c:	bl	18b8 <fread@plt>
    f510:	mov	r9, r0
    f514:	cmp	r6, #1
    f518:	blt	10c20 <ReadUInt64Data+0x22c0>
    f51c:	str	sl, [sp, #32]
    f520:	str	r9, [sp, #28]
    f524:	mov	sl, r7
    f528:	and	r9, r6, #1
    f52c:	mov	r5, #0
    f530:	beq	f570 <ReadUInt64Data+0xc10>
    f534:	sub	r7, r6, r9
    f538:	add	r4, r8, #4
    f53c:	mov	r5, #0
    f540:	mov	r6, sl
    f544:	ldr	r0, [r4, #-4]
    f548:	bl	6b970 <__aeabi_f2ulz>
    f54c:	strd	r0, [r6]
    f550:	ldr	r0, [r4]
    f554:	bl	6b970 <__aeabi_f2ulz>
    f558:	add	r5, r5, #2
    f55c:	strd	r0, [r6, #8]
    f560:	add	r6, r6, #16
    f564:	add	r4, r4, #8
    f568:	cmp	r7, r5
    f56c:	bne	f544 <ReadUInt64Data+0xbe4>
    f570:	cmp	r9, #0
    f574:	beq	10c18 <ReadUInt64Data+0x22b8>
    f578:	ldr	r0, [r8, r5, lsl #2]
    f57c:	bl	6b970 <__aeabi_f2ulz>
    f580:	b	f624 <ReadUInt64Data+0xcc4>
    f584:	cmp	r6, #256	; 0x100
    f588:	bgt	10608 <ReadUInt64Data+0x1ca8>
    f58c:	ldr	r3, [r4]
    f590:	add	r8, sp, #296	; 0x128
    f594:	mov	r1, sl
    f598:	mov	r2, r6
    f59c:	mov	r0, r8
    f5a0:	bl	18b8 <fread@plt>
    f5a4:	mov	r9, r0
    f5a8:	cmp	r6, #1
    f5ac:	blt	10c20 <ReadUInt64Data+0x22c0>
    f5b0:	str	sl, [sp, #32]
    f5b4:	str	r9, [sp, #28]
    f5b8:	mov	sl, r7
    f5bc:	and	r9, r6, #1
    f5c0:	mov	r5, #0
    f5c4:	beq	f60c <ReadUInt64Data+0xcac>
    f5c8:	sub	r7, r6, r9
    f5cc:	add	r4, r8, #8
    f5d0:	mov	r5, #0
    f5d4:	mov	r6, sl
    f5d8:	vldr	d16, [r4, #-8]
    f5dc:	vmov	r0, r1, d16
    f5e0:	bl	6b9b0 <__aeabi_d2ulz>
    f5e4:	strd	r0, [r6]
    f5e8:	vldr	d16, [r4]
    f5ec:	vmov	r0, r1, d16
    f5f0:	bl	6b9b0 <__aeabi_d2ulz>
    f5f4:	add	r5, r5, #2
    f5f8:	strd	r0, [r6, #8]
    f5fc:	add	r6, r6, #16
    f600:	add	r4, r4, #16
    f604:	cmp	r7, r5
    f608:	bne	f5d8 <ReadUInt64Data+0xc78>
    f60c:	cmp	r9, #0
    f610:	beq	10c18 <ReadUInt64Data+0x22b8>
    f614:	add	r0, r8, r5, lsl #3
    f618:	vldr	d16, [r0]
    f61c:	vmov	r0, r1, d16
    f620:	bl	6b9b0 <__aeabi_d2ulz>
    f624:	str	r0, [sl, r5, lsl #3]!
    f628:	str	r1, [sl, #4]
    f62c:	b	10c18 <ReadUInt64Data+0x22b8>
    f630:	cmp	r6, #256	; 0x100
    f634:	bgt	10794 <ReadUInt64Data+0x1e34>
    f638:	ldr	r3, [r4]
    f63c:	add	r0, sp, #296	; 0x128
    f640:	mov	r1, sl
    f644:	mov	r2, r6
    f648:	bl	18b8 <fread@plt>
    f64c:	mov	r9, r0
    f650:	cmp	r6, #1
    f654:	blt	1086c <ReadUInt64Data+0x1f0c>
    f658:	lsl	r2, r6, #3
    f65c:	add	r1, sp, #296	; 0x128
    f660:	mov	r0, r7
    f664:	bl	181c <memcpy@plt>
    f668:	cmp	r5, #13
    f66c:	beq	10874 <ReadUInt64Data+0x1f14>
    f670:	b	10c20 <ReadUInt64Data+0x22c0>
    f674:	sub	r0, r6, #256	; 0x100
    f678:	mov	r8, r7
    f67c:	add	r1, r7, #2048	; 0x800
    f680:	mov	r9, #0
    f684:	str	sl, [sp, #32]
    f688:	str	r6, [sp, #8]
    f68c:	str	r0, [sp, #28]
    f690:	mov	r0, #0
    f694:	mov	r5, r1
    f698:	ldr	r3, [r4]
    f69c:	ldr	r1, [sp, #32]
    f6a0:	add	r4, sp, #296	; 0x128
    f6a4:	mov	sl, r0
    f6a8:	mov	r2, #256	; 0x100
    f6ac:	mov	r0, r4
    f6b0:	bl	18b8 <fread@plt>
    f6b4:	mov	r7, r0
    f6b8:	mov	r6, #0
    f6bc:	mov	r0, r4
    f6c0:	bl	1c20 <Mat_int16Swap>
    f6c4:	mov	r1, r8
    f6c8:	add	r4, r4, #2
    f6cc:	str	r0, [r1, r6]!
    f6d0:	add	r6, r6, #8
    f6d4:	asr	r0, r0, #31
    f6d8:	cmp	r6, #2048	; 0x800
    f6dc:	str	r0, [r1, #4]
    f6e0:	bne	f6bc <ReadUInt64Data+0xd5c>
    f6e4:	ldr	r2, [sp, #28]
    f6e8:	ldr	r4, [sp, #36]	; 0x24
    f6ec:	add	r0, sl, #256	; 0x100
    f6f0:	add	r9, r7, r9
    f6f4:	add	r8, r8, #2048	; 0x800
    f6f8:	add	r1, r5, #2048	; 0x800
    f6fc:	cmp	r0, r2
    f700:	blt	f694 <ReadUInt64Data+0xd34>
    f704:	ldr	r6, [sp, #8]
    f708:	cmp	r0, r6
    f70c:	bge	10c1c <ReadUInt64Data+0x22bc>
    f710:	ldr	r3, [r4]
    f714:	ldr	r1, [sp, #32]
    f718:	sub	r7, r6, r0
    f71c:	add	r4, sp, #296	; 0x128
    f720:	mov	r0, r4
    f724:	mov	r2, r7
    f728:	bl	18b8 <fread@plt>
    f72c:	add	r9, r0, r9
    f730:	cmp	r7, #1
    f734:	blt	10c1c <ReadUInt64Data+0x22bc>
    f738:	sub	r0, r6, sl
    f73c:	sub	r6, r0, #256	; 0x100
    f740:	mov	r0, r4
    f744:	bl	1c20 <Mat_int16Swap>
    f748:	asr	r1, r0, #31
    f74c:	add	r4, r4, #2
    f750:	subs	r6, r6, #1
    f754:	strd	r0, [r5]
    f758:	add	r5, r5, #8
    f75c:	bne	f740 <ReadUInt64Data+0xde0>
    f760:	b	10c1c <ReadUInt64Data+0x22bc>
    f764:	sub	r1, r6, #256	; 0x100
    f768:	str	sl, [sp, #32]
    f76c:	str	r6, [sp, #8]
    f770:	mov	sl, r7
    f774:	add	r0, r7, #2048	; 0x800
    f778:	mov	r6, #0
    f77c:	mov	r9, #0
    f780:	str	r1, [sp, #24]
    f784:	mov	r1, #0
    f788:	str	r1, [sp, #28]
    f78c:	ldr	r3, [r4]
    f790:	ldr	r1, [sp, #32]
    f794:	add	r4, sp, #296	; 0x128
    f798:	mov	r5, r0
    f79c:	mov	r2, #256	; 0x100
    f7a0:	mov	r8, r9
    f7a4:	mov	r0, r4
    f7a8:	bl	18b8 <fread@plt>
    f7ac:	mov	r7, r0
    f7b0:	mov	r9, #0
    f7b4:	mov	r0, r4
    f7b8:	bl	1c34 <Mat_uint16Swap>
    f7bc:	mov	r1, sl
    f7c0:	add	r4, r4, #2
    f7c4:	str	r0, [r1, r9]!
    f7c8:	add	r9, r9, #8
    f7cc:	cmp	r9, #2048	; 0x800
    f7d0:	str	r6, [r1, #4]
    f7d4:	bne	f7b4 <ReadUInt64Data+0xe54>
    f7d8:	mov	r9, r8
    f7dc:	add	r9, r7, r8
    f7e0:	ldr	r7, [sp, #28]
    f7e4:	ldr	r2, [sp, #24]
    f7e8:	ldr	r4, [sp, #36]	; 0x24
    f7ec:	add	sl, sl, #2048	; 0x800
    f7f0:	add	r0, r5, #2048	; 0x800
    f7f4:	add	r1, r7, #256	; 0x100
    f7f8:	cmp	r1, r2
    f7fc:	blt	f788 <ReadUInt64Data+0xe28>
    f800:	ldr	r6, [sp, #8]
    f804:	cmp	r1, r6
    f808:	bge	10c1c <ReadUInt64Data+0x22bc>
    f80c:	sub	r8, r6, r1
    f810:	ldr	r3, [r4]
    f814:	ldr	r1, [sp, #32]
    f818:	add	r4, sp, #296	; 0x128
    f81c:	mov	r0, r4
    f820:	mov	r2, r8
    f824:	bl	18b8 <fread@plt>
    f828:	add	r9, r0, r9
    f82c:	cmp	r8, #1
    f830:	blt	10c1c <ReadUInt64Data+0x22bc>
    f834:	sub	r0, r6, r7
    f838:	mov	r7, #0
    f83c:	sub	r6, r0, #256	; 0x100
    f840:	mov	r0, r4
    f844:	bl	1c34 <Mat_uint16Swap>
    f848:	stm	r5, {r0, r7}
    f84c:	add	r5, r5, #8
    f850:	add	r4, r4, #2
    f854:	subs	r6, r6, #1
    f858:	bne	f840 <ReadUInt64Data+0xee0>
    f85c:	b	10c1c <ReadUInt64Data+0x22bc>
    f860:	sub	r0, r6, #256	; 0x100
    f864:	mov	r8, r7
    f868:	add	r1, r7, #2048	; 0x800
    f86c:	mov	r9, #0
    f870:	str	sl, [sp, #32]
    f874:	str	r6, [sp, #8]
    f878:	str	r0, [sp, #28]
    f87c:	mov	r0, #0
    f880:	mov	r5, r1
    f884:	ldr	r3, [r4]
    f888:	ldr	r1, [sp, #32]
    f88c:	add	r4, sp, #296	; 0x128
    f890:	mov	sl, r0
    f894:	mov	r2, #256	; 0x100
    f898:	mov	r0, r4
    f89c:	bl	18b8 <fread@plt>
    f8a0:	mov	r7, r0
    f8a4:	mov	r6, #0
    f8a8:	mov	r0, r4
    f8ac:	bl	1bf8 <Mat_int32Swap>
    f8b0:	mov	r1, r8
    f8b4:	add	r4, r4, #4
    f8b8:	str	r0, [r1, r6]!
    f8bc:	add	r6, r6, #8
    f8c0:	asr	r0, r0, #31
    f8c4:	cmp	r6, #2048	; 0x800
    f8c8:	str	r0, [r1, #4]
    f8cc:	bne	f8a8 <ReadUInt64Data+0xf48>
    f8d0:	ldr	r2, [sp, #28]
    f8d4:	ldr	r4, [sp, #36]	; 0x24
    f8d8:	add	r0, sl, #256	; 0x100
    f8dc:	add	r9, r7, r9
    f8e0:	add	r8, r8, #2048	; 0x800
    f8e4:	add	r1, r5, #2048	; 0x800
    f8e8:	cmp	r0, r2
    f8ec:	blt	f880 <ReadUInt64Data+0xf20>
    f8f0:	ldr	r6, [sp, #8]
    f8f4:	cmp	r0, r6
    f8f8:	bge	10c1c <ReadUInt64Data+0x22bc>
    f8fc:	ldr	r3, [r4]
    f900:	ldr	r1, [sp, #32]
    f904:	sub	r7, r6, r0
    f908:	add	r4, sp, #296	; 0x128
    f90c:	mov	r0, r4
    f910:	mov	r2, r7
    f914:	bl	18b8 <fread@plt>
    f918:	add	r9, r0, r9
    f91c:	cmp	r7, #1
    f920:	blt	10c1c <ReadUInt64Data+0x22bc>
    f924:	sub	r0, r6, sl
    f928:	sub	r6, r0, #256	; 0x100
    f92c:	mov	r0, r4
    f930:	bl	1bf8 <Mat_int32Swap>
    f934:	asr	r1, r0, #31
    f938:	add	r4, r4, #4
    f93c:	subs	r6, r6, #1
    f940:	strd	r0, [r5]
    f944:	add	r5, r5, #8
    f948:	bne	f92c <ReadUInt64Data+0xfcc>
    f94c:	b	10c1c <ReadUInt64Data+0x22bc>
    f950:	sub	r1, r6, #256	; 0x100
    f954:	str	sl, [sp, #32]
    f958:	str	r6, [sp, #8]
    f95c:	mov	sl, r7
    f960:	add	r0, r7, #2048	; 0x800
    f964:	mov	r6, #0
    f968:	mov	r9, #0
    f96c:	str	r1, [sp, #24]
    f970:	mov	r1, #0
    f974:	str	r1, [sp, #28]
    f978:	ldr	r3, [r4]
    f97c:	ldr	r1, [sp, #32]
    f980:	add	r4, sp, #296	; 0x128
    f984:	mov	r5, r0
    f988:	mov	r2, #256	; 0x100
    f98c:	mov	r8, r9
    f990:	mov	r0, r4
    f994:	bl	18b8 <fread@plt>
    f998:	mov	r7, r0
    f99c:	mov	r9, #0
    f9a0:	mov	r0, r4
    f9a4:	bl	1c0c <Mat_uint32Swap>
    f9a8:	mov	r1, sl
    f9ac:	add	r4, r4, #4
    f9b0:	str	r0, [r1, r9]!
    f9b4:	add	r9, r9, #8
    f9b8:	cmp	r9, #2048	; 0x800
    f9bc:	str	r6, [r1, #4]
    f9c0:	bne	f9a0 <ReadUInt64Data+0x1040>
    f9c4:	mov	r9, r8
    f9c8:	add	r9, r7, r8
    f9cc:	ldr	r7, [sp, #28]
    f9d0:	ldr	r2, [sp, #24]
    f9d4:	ldr	r4, [sp, #36]	; 0x24
    f9d8:	add	sl, sl, #2048	; 0x800
    f9dc:	add	r0, r5, #2048	; 0x800
    f9e0:	add	r1, r7, #256	; 0x100
    f9e4:	cmp	r1, r2
    f9e8:	blt	f974 <ReadUInt64Data+0x1014>
    f9ec:	ldr	r6, [sp, #8]
    f9f0:	cmp	r1, r6
    f9f4:	bge	10c1c <ReadUInt64Data+0x22bc>
    f9f8:	sub	r8, r6, r1
    f9fc:	ldr	r3, [r4]
    fa00:	ldr	r1, [sp, #32]
    fa04:	add	r4, sp, #296	; 0x128
    fa08:	mov	r0, r4
    fa0c:	mov	r2, r8
    fa10:	bl	18b8 <fread@plt>
    fa14:	add	r9, r0, r9
    fa18:	cmp	r8, #1
    fa1c:	blt	10c1c <ReadUInt64Data+0x22bc>
    fa20:	sub	r0, r6, r7
    fa24:	mov	r7, #0
    fa28:	sub	r6, r0, #256	; 0x100
    fa2c:	mov	r0, r4
    fa30:	bl	1c0c <Mat_uint32Swap>
    fa34:	stm	r5, {r0, r7}
    fa38:	add	r5, r5, #8
    fa3c:	add	r4, r4, #4
    fa40:	subs	r6, r6, #1
    fa44:	bne	fa2c <ReadUInt64Data+0x10cc>
    fa48:	b	10c1c <ReadUInt64Data+0x22bc>
    fa4c:	sub	r0, r6, #256	; 0x100
    fa50:	mov	r8, r7
    fa54:	add	r1, r7, #2048	; 0x800
    fa58:	mov	r9, #0
    fa5c:	str	sl, [sp, #32]
    fa60:	str	r6, [sp, #8]
    fa64:	str	r0, [sp, #28]
    fa68:	mov	r0, #0
    fa6c:	mov	r5, r1
    fa70:	ldr	r3, [r4]
    fa74:	ldr	r1, [sp, #32]
    fa78:	add	r4, sp, #296	; 0x128
    fa7c:	mov	sl, r0
    fa80:	mov	r2, #256	; 0x100
    fa84:	mov	r0, r4
    fa88:	bl	18b8 <fread@plt>
    fa8c:	mov	r7, r0
    fa90:	mov	r6, #0
    fa94:	mov	r0, r4
    fa98:	bl	1c4c <Mat_floatSwap>
    fa9c:	vmov	r0, s0
    faa0:	bl	6b970 <__aeabi_f2ulz>
    faa4:	mov	r2, r8
    faa8:	add	r4, r4, #4
    faac:	str	r0, [r2, r6]!
    fab0:	add	r6, r6, #8
    fab4:	cmp	r6, #2048	; 0x800
    fab8:	str	r1, [r2, #4]
    fabc:	bne	fa94 <ReadUInt64Data+0x1134>
    fac0:	ldr	r2, [sp, #28]
    fac4:	ldr	r4, [sp, #36]	; 0x24
    fac8:	add	r0, sl, #256	; 0x100
    facc:	add	r9, r7, r9
    fad0:	add	r8, r8, #2048	; 0x800
    fad4:	add	r1, r5, #2048	; 0x800
    fad8:	cmp	r0, r2
    fadc:	blt	fa6c <ReadUInt64Data+0x110c>
    fae0:	ldr	r7, [sp, #8]
    fae4:	cmp	r0, r7
    fae8:	bge	10c1c <ReadUInt64Data+0x22bc>
    faec:	ldr	r3, [r4]
    faf0:	ldr	r1, [sp, #32]
    faf4:	sub	r6, r7, r0
    faf8:	add	r4, sp, #296	; 0x128
    fafc:	mov	r0, r4
    fb00:	mov	r2, r6
    fb04:	bl	18b8 <fread@plt>
    fb08:	add	r9, r0, r9
    fb0c:	cmp	r6, #1
    fb10:	blt	10c1c <ReadUInt64Data+0x22bc>
    fb14:	sub	r0, r7, sl
    fb18:	sub	r6, r0, #256	; 0x100
    fb1c:	mov	r0, r4
    fb20:	bl	1c4c <Mat_floatSwap>
    fb24:	vmov	r0, s0
    fb28:	bl	6b970 <__aeabi_f2ulz>
    fb2c:	strd	r0, [r5]
    fb30:	add	r5, r5, #8
    fb34:	add	r4, r4, #4
    fb38:	subs	r6, r6, #1
    fb3c:	bne	fb1c <ReadUInt64Data+0x11bc>
    fb40:	b	10c1c <ReadUInt64Data+0x22bc>
    fb44:	sub	r0, r6, #256	; 0x100
    fb48:	mov	r9, r7
    fb4c:	add	r1, r7, #2048	; 0x800
    fb50:	add	r4, sp, #296	; 0x128
    fb54:	mov	r5, #0
    fb58:	str	sl, [sp, #32]
    fb5c:	str	r6, [sp, #8]
    fb60:	str	r0, [sp, #28]
    fb64:	mov	r0, #0
    fb68:	mov	r8, r0
    fb6c:	ldr	r0, [sp, #36]	; 0x24
    fb70:	mov	sl, r1
    fb74:	ldr	r1, [sp, #32]
    fb78:	mov	r2, #256	; 0x100
    fb7c:	ldr	r3, [r0]
    fb80:	mov	r0, r4
    fb84:	bl	18b8 <fread@plt>
    fb88:	mov	r7, r0
    fb8c:	mov	r6, #0
    fb90:	add	r0, r4, r6
    fb94:	bl	1c90 <Mat_doubleSwap>
    fb98:	vmov	r0, r1, d0
    fb9c:	bl	6b9b0 <__aeabi_d2ulz>
    fba0:	mov	r2, r9
    fba4:	str	r0, [r2, r6]!
    fba8:	add	r6, r6, #8
    fbac:	cmp	r6, #2048	; 0x800
    fbb0:	str	r1, [r2, #4]
    fbb4:	bne	fb90 <ReadUInt64Data+0x1230>
    fbb8:	ldr	r2, [sp, #28]
    fbbc:	add	r0, r8, #256	; 0x100
    fbc0:	add	r5, r7, r5
    fbc4:	add	r9, r9, #2048	; 0x800
    fbc8:	add	r1, sl, #2048	; 0x800
    fbcc:	cmp	r0, r2
    fbd0:	blt	fb68 <ReadUInt64Data+0x1208>
    fbd4:	ldr	r7, [sp, #8]
    fbd8:	cmp	r0, r7
    fbdc:	bge	10850 <ReadUInt64Data+0x1ef0>
    fbe0:	sub	r6, r7, r0
    fbe4:	ldr	r0, [sp, #36]	; 0x24
    fbe8:	ldr	r1, [sp, #32]
    fbec:	add	r4, sp, #296	; 0x128
    fbf0:	mov	r2, r6
    fbf4:	ldr	r3, [r0]
    fbf8:	mov	r0, r4
    fbfc:	bl	18b8 <fread@plt>
    fc00:	mov	r9, r5
    fc04:	add	r9, r0, r5
    fc08:	cmp	r6, #1
    fc0c:	blt	10c1c <ReadUInt64Data+0x22bc>
    fc10:	sub	r0, r7, r8
    fc14:	sub	r6, r0, #256	; 0x100
    fc18:	mov	r0, r4
    fc1c:	bl	1c90 <Mat_doubleSwap>
    fc20:	vmov	r0, r1, d0
    fc24:	bl	6b9b0 <__aeabi_d2ulz>
    fc28:	strd	r0, [sl]
    fc2c:	add	sl, sl, #8
    fc30:	add	r4, r4, #8
    fc34:	subs	r6, r6, #1
    fc38:	bne	fc18 <ReadUInt64Data+0x12b8>
    fc3c:	b	10c1c <ReadUInt64Data+0x22bc>
    fc40:	sub	r0, r6, #256	; 0x100
    fc44:	str	r6, [sp, #8]
    fc48:	add	r1, r7, #2048	; 0x800
    fc4c:	add	r4, sp, #296	; 0x128
    fc50:	mov	r6, r7
    fc54:	mov	r9, #0
    fc58:	str	r5, [sp, #24]
    fc5c:	str	sl, [sp, #32]
    fc60:	str	r7, [sp, #4]
    fc64:	str	r0, [sp, #28]
    fc68:	mov	r0, #0
    fc6c:	mov	sl, r0
    fc70:	ldr	r0, [sp, #36]	; 0x24
    fc74:	mov	r5, r1
    fc78:	ldr	r1, [sp, #32]
    fc7c:	mov	r2, #256	; 0x100
    fc80:	mov	r8, r9
    fc84:	ldr	r3, [r0]
    fc88:	mov	r0, r4
    fc8c:	bl	18b8 <fread@plt>
    fc90:	mov	r7, r0
    fc94:	mov	r9, #0
    fc98:	add	r0, r4, r9
    fc9c:	bl	1b84 <Mat_int64Swap>
    fca0:	mov	r2, r6
    fca4:	str	r0, [r2, r9]!
    fca8:	add	r9, r9, #8
    fcac:	cmp	r9, #2048	; 0x800
    fcb0:	str	r1, [r2, #4]
    fcb4:	bne	fc98 <ReadUInt64Data+0x1338>
    fcb8:	ldr	r2, [sp, #28]
    fcbc:	add	r0, sl, #256	; 0x100
    fcc0:	mov	r9, r8
    fcc4:	add	r9, r7, r8
    fcc8:	add	r6, r6, #2048	; 0x800
    fccc:	add	r1, r5, #2048	; 0x800
    fcd0:	cmp	r0, r2
    fcd4:	blt	fc6c <ReadUInt64Data+0x130c>
    fcd8:	ldr	r6, [sp, #8]
    fcdc:	cmp	r0, r6
    fce0:	bge	fd48 <ReadUInt64Data+0x13e8>
    fce4:	sub	r7, r6, r0
    fce8:	ldr	r0, [sp, #36]	; 0x24
    fcec:	ldr	r1, [sp, #32]
    fcf0:	add	r4, sp, #296	; 0x128
    fcf4:	mov	r2, r7
    fcf8:	ldr	r3, [r0]
    fcfc:	mov	r0, r4
    fd00:	bl	18b8 <fread@plt>
    fd04:	add	r9, r0, r9
    fd08:	cmp	r7, #1
    fd0c:	blt	fd48 <ReadUInt64Data+0x13e8>
    fd10:	sub	r0, r6, sl
    fd14:	sub	r6, r0, #256	; 0x100
    fd18:	mov	r0, r4
    fd1c:	bl	1b84 <Mat_int64Swap>
    fd20:	strd	r0, [r5]
    fd24:	add	r5, r5, #8
    fd28:	add	r4, r4, #8
    fd2c:	subs	r6, r6, #1
    fd30:	bne	fd18 <ReadUInt64Data+0x13b8>
    fd34:	ldr	sl, [sp, #32]
    fd38:	ldr	r7, [sp, #4]
    fd3c:	ldr	r6, [sp, #8]
    fd40:	ldr	r4, [sp, #36]	; 0x24
    fd44:	b	10868 <ReadUInt64Data+0x1f08>
    fd48:	ldr	sl, [sp, #32]
    fd4c:	ldr	r7, [sp, #4]
    fd50:	ldr	r4, [sp, #36]	; 0x24
    fd54:	b	10868 <ReadUInt64Data+0x1f08>
    fd58:	sub	r1, r6, #256	; 0x100
    fd5c:	str	sl, [sp, #32]
    fd60:	str	r6, [sp, #8]
    fd64:	mov	sl, r7
    fd68:	add	r0, r7, #2048	; 0x800
    fd6c:	mov	r5, #0
    fd70:	add	r7, sp, #296	; 0x128
    fd74:	add	r6, sp, #192	; 0xc0
    fd78:	mov	r4, #32
    fd7c:	add	r8, sp, #196	; 0xc4
    fd80:	mov	r9, #0
    fd84:	str	r1, [sp, #16]
    fd88:	mov	r1, #256	; 0x100
    fd8c:	str	sl, [sp, #4]
    fd90:	add	r2, sp, #20
    fd94:	stm	r2, {r0, r1, r5}
    fd98:	ldr	r0, [sp, #36]	; 0x24
    fd9c:	ldr	r1, [sp, #32]
    fda0:	mov	r2, #256	; 0x100
    fda4:	ldr	r3, [r0]
    fda8:	mov	r0, r7
    fdac:	bl	18b8 <fread@plt>
    fdb0:	mov	r1, sl
    fdb4:	mov	r2, #0
    fdb8:	ldr	r3, [r7, r2]
    fdbc:	add	r5, r7, r2
    fdc0:	add	r2, r2, #8
    fdc4:	cmp	r2, #512	; 0x200
    fdc8:	str	r3, [sp, #192]	; 0xc0
    fdcc:	add	r3, r1, #16
    fdd0:	vld1.32	{d16[0]}, [r6 :32]
    fdd4:	vmovl.s16	q8, d16
    fdd8:	vmovl.s32	q8, d16
    fddc:	vst1.64	{d16-d17}, [r1], r4
    fde0:	ldr	r5, [r5, #4]
    fde4:	str	r5, [sp, #196]	; 0xc4
    fde8:	vld1.32	{d16[0]}, [r8 :32]
    fdec:	vmovl.s16	q8, d16
    fdf0:	vmovl.s32	q8, d16
    fdf4:	vst1.64	{d16-d17}, [r3]
    fdf8:	bne	fdb8 <ReadUInt64Data+0x1458>
    fdfc:	ldr	r2, [sp, #28]
    fe00:	ldr	r1, [sp, #24]
    fe04:	add	r9, r0, r9
    fe08:	ldr	r0, [sp, #20]
    fe0c:	add	sl, sl, #2048	; 0x800
    fe10:	add	r5, r2, #256	; 0x100
    fe14:	ldr	r2, [sp, #16]
    fe18:	add	r0, r0, #2048	; 0x800
    fe1c:	add	r1, r1, #256	; 0x100
    fe20:	cmp	r5, r2
    fe24:	blt	fd90 <ReadUInt64Data+0x1430>
    fe28:	ldr	r4, [sp, #8]
    fe2c:	cmp	r5, r4
    fe30:	bge	10c1c <ReadUInt64Data+0x22bc>
    fe34:	ldr	r0, [sp, #36]	; 0x24
    fe38:	ldr	sl, [sp, #32]
    fe3c:	sub	r6, r4, r5
    fe40:	add	r7, sp, #296	; 0x128
    fe44:	mov	r2, r6
    fe48:	ldr	r3, [r0]
    fe4c:	mov	r0, r7
    fe50:	mov	r1, sl
    fe54:	bl	18b8 <fread@plt>
    fe58:	add	r9, r0, r9
    fe5c:	cmp	r6, #1
    fe60:	blt	10c20 <ReadUInt64Data+0x22c0>
    fe64:	ldr	sl, [sp, #4]
    fe68:	mov	lr, #0
    fe6c:	beq	10ee8 <ReadUInt64Data+0x2588>
    fe70:	bic	lr, r6, #1
    fe74:	mov	r1, #1
    fe78:	str	r6, [sp, #36]	; 0x24
    fe7c:	subs	r2, lr, #2
    fe80:	add	r2, r1, r2, lsr #1
    fe84:	and	r0, r2, #1
    fe88:	str	r0, [sp, #16]
    fe8c:	beq	10ea0 <ReadUInt64Data+0x2540>
    fe90:	ldr	r0, [sp, #28]
    fe94:	ldr	ip, [sp, #20]
    fe98:	add	r8, sp, #184	; 0xb8
    fe9c:	sub	r2, r4, r0
    fea0:	mov	r4, #32
    fea4:	sub	r2, r2, #256	; 0x100
    fea8:	bic	r2, r2, #1
    feac:	sub	r2, r2, #2
    feb0:	add	r1, r1, r2, lsr #1
    feb4:	mvn	r3, r2, lsr #1
    feb8:	mov	r2, #0
    febc:	and	r1, r1, #1
    fec0:	add	r3, r3, r1
    fec4:	add	r1, sp, #188	; 0xbc
    fec8:	ldr	r0, [r7]
    fecc:	adds	r3, r3, #2
    fed0:	add	r2, r2, #4
    fed4:	str	r0, [sp, #184]	; 0xb8
    fed8:	add	r0, ip, #16
    fedc:	vld1.32	{d16[0]}, [r8 :32]
    fee0:	vmovl.s16	q8, d16
    fee4:	vmovl.s32	q8, d16
    fee8:	vst1.64	{d16-d17}, [ip], r4
    feec:	ldr	r6, [r7, #4]
    fef0:	add	r7, r7, #8
    fef4:	str	r6, [sp, #188]	; 0xbc
    fef8:	vld1.32	{d16[0]}, [r1 :32]
    fefc:	vmovl.s16	q8, d16
    ff00:	vmovl.s32	q8, d16
    ff04:	vst1.64	{d16-d17}, [r0]
    ff08:	bne	fec8 <ReadUInt64Data+0x1568>
    ff0c:	b	10ea4 <ReadUInt64Data+0x2544>
    ff10:	sub	r1, r6, #256	; 0x100
    ff14:	str	sl, [sp, #32]
    ff18:	str	r6, [sp, #8]
    ff1c:	mov	sl, r7
    ff20:	add	r0, r7, #2048	; 0x800
    ff24:	mov	r5, #0
    ff28:	add	r7, sp, #296	; 0x128
    ff2c:	add	r6, sp, #224	; 0xe0
    ff30:	mov	r4, #32
    ff34:	add	r8, sp, #228	; 0xe4
    ff38:	mov	r9, #0
    ff3c:	str	r1, [sp, #16]
    ff40:	mov	r1, #256	; 0x100
    ff44:	str	sl, [sp, #4]
    ff48:	add	r2, sp, #20
    ff4c:	stm	r2, {r0, r1, r5}
    ff50:	ldr	r0, [sp, #36]	; 0x24
    ff54:	ldr	r1, [sp, #32]
    ff58:	mov	r2, #256	; 0x100
    ff5c:	ldr	r3, [r0]
    ff60:	mov	r0, r7
    ff64:	bl	18b8 <fread@plt>
    ff68:	mov	r1, sl
    ff6c:	mov	r2, #0
    ff70:	ldr	r3, [r7, r2]
    ff74:	add	r5, r7, r2
    ff78:	add	r2, r2, #8
    ff7c:	cmp	r2, #512	; 0x200
    ff80:	str	r3, [sp, #224]	; 0xe0
    ff84:	add	r3, r1, #16
    ff88:	vld1.32	{d16[0]}, [r6 :32]
    ff8c:	vmovl.u16	q8, d16
    ff90:	vmovl.u32	q8, d16
    ff94:	vst1.64	{d16-d17}, [r1], r4
    ff98:	ldr	r5, [r5, #4]
    ff9c:	str	r5, [sp, #228]	; 0xe4
    ffa0:	vld1.32	{d16[0]}, [r8 :32]
    ffa4:	vmovl.u16	q8, d16
    ffa8:	vmovl.u32	q8, d16
    ffac:	vst1.64	{d16-d17}, [r3]
    ffb0:	bne	ff70 <ReadUInt64Data+0x1610>
    ffb4:	ldr	r2, [sp, #28]
    ffb8:	ldr	r1, [sp, #24]
    ffbc:	add	r9, r0, r9
    ffc0:	ldr	r0, [sp, #20]
    ffc4:	add	sl, sl, #2048	; 0x800
    ffc8:	add	r5, r2, #256	; 0x100
    ffcc:	ldr	r2, [sp, #16]
    ffd0:	add	r0, r0, #2048	; 0x800
    ffd4:	add	r1, r1, #256	; 0x100
    ffd8:	cmp	r5, r2
    ffdc:	blt	ff48 <ReadUInt64Data+0x15e8>
    ffe0:	ldr	r0, [sp, #8]
    ffe4:	cmp	r5, r0
    ffe8:	bge	10c1c <ReadUInt64Data+0x22bc>
    ffec:	sub	r4, r0, r5
    fff0:	ldr	r0, [sp, #36]	; 0x24
    fff4:	ldr	sl, [sp, #32]
    fff8:	add	r7, sp, #296	; 0x128
    fffc:	mov	r2, r4
   10000:	ldr	r3, [r0]
   10004:	mov	r0, r7
   10008:	mov	r1, sl
   1000c:	bl	18b8 <fread@plt>
   10010:	add	r9, r0, r9
   10014:	cmp	r4, #1
   10018:	blt	10c20 <ReadUInt64Data+0x22c0>
   1001c:	ldr	r6, [sp, #4]
   10020:	mov	r1, #0
   10024:	mov	lr, #0
   10028:	beq	10f74 <ReadUInt64Data+0x2614>
   1002c:	bic	lr, r4, #1
   10030:	mov	r0, #1
   10034:	str	r4, [sp, #36]	; 0x24
   10038:	subs	r2, lr, #2
   1003c:	add	r2, r0, r2, lsr #1
   10040:	and	r2, r2, #1
   10044:	str	r2, [sp, #16]
   10048:	beq	10f28 <ReadUInt64Data+0x25c8>
   1004c:	ldr	r2, [sp, #8]
   10050:	ldr	r3, [sp, #28]
   10054:	ldr	ip, [sp, #20]
   10058:	add	r8, sp, #216	; 0xd8
   1005c:	mov	sl, #32
   10060:	sub	r2, r2, r3
   10064:	sub	r2, r2, #256	; 0x100
   10068:	bic	r2, r2, #1
   1006c:	sub	r2, r2, #2
   10070:	add	r0, r0, r2, lsr #1
   10074:	mvn	r3, r2, lsr #1
   10078:	and	r0, r0, #1
   1007c:	add	r6, r3, r0
   10080:	mov	r3, #0
   10084:	add	r0, sp, #220	; 0xdc
   10088:	ldr	r4, [r7]
   1008c:	adds	r6, r6, #2
   10090:	add	r3, r3, #4
   10094:	str	r4, [sp, #216]	; 0xd8
   10098:	add	r4, ip, #16
   1009c:	vld1.32	{d16[0]}, [r8 :32]
   100a0:	vmovl.u16	q8, d16
   100a4:	vmovl.u32	q8, d16
   100a8:	vst1.64	{d16-d17}, [ip], sl
   100ac:	ldr	r2, [r7, #4]
   100b0:	add	r7, r7, #8
   100b4:	str	r2, [sp, #220]	; 0xdc
   100b8:	vld1.32	{d16[0]}, [r0 :32]
   100bc:	vmovl.u16	q8, d16
   100c0:	vmovl.u32	q8, d16
   100c4:	vst1.64	{d16-d17}, [r4]
   100c8:	bne	10088 <ReadUInt64Data+0x1728>
   100cc:	b	10f2c <ReadUInt64Data+0x25cc>
   100d0:	sub	r1, r6, #256	; 0x100
   100d4:	str	sl, [sp, #32]
   100d8:	mov	r8, r7
   100dc:	add	r0, r7, #2048	; 0x800
   100e0:	mov	r2, #0
   100e4:	mov	r5, #0
   100e8:	add	r7, sp, #296	; 0x128
   100ec:	add	r9, sp, #88	; 0x58
   100f0:	mov	r4, #32
   100f4:	add	sl, sp, #96	; 0x60
   100f8:	str	r6, [sp, #8]
   100fc:	str	r1, [sp, #12]
   10100:	mov	r1, #256	; 0x100
   10104:	str	r8, [sp, #4]
   10108:	str	r2, [sp, #28]
   1010c:	str	r0, [sp, #16]
   10110:	ldr	r0, [sp, #36]	; 0x24
   10114:	str	r1, [sp, #24]
   10118:	ldr	r1, [sp, #32]
   1011c:	mov	r2, #256	; 0x100
   10120:	str	r5, [sp, #20]
   10124:	ldr	r3, [r0]
   10128:	mov	r0, r7
   1012c:	bl	18b8 <fread@plt>
   10130:	mov	r1, r8
   10134:	mov	r2, #0
   10138:	ldr	r3, [r7, r2]
   1013c:	str	r3, [sp, #88]	; 0x58
   10140:	add	r3, r7, r2
   10144:	add	r2, r2, #16
   10148:	ldr	r5, [r3, #4]
   1014c:	cmp	r2, #1024	; 0x400
   10150:	str	r5, [sp, #92]	; 0x5c
   10154:	add	r5, r1, #16
   10158:	vld1.32	{d16}, [r9 :64]
   1015c:	vmovl.s32	q8, d16
   10160:	vst1.64	{d16-d17}, [r1], r4
   10164:	ldr	r6, [r3, #8]
   10168:	ldr	r3, [r3, #12]
   1016c:	str	r6, [sp, #96]	; 0x60
   10170:	str	r3, [sp, #100]	; 0x64
   10174:	vld1.32	{d16}, [sl :64]
   10178:	vmovl.s32	q8, d16
   1017c:	vst1.64	{d16-d17}, [r5]
   10180:	bne	10138 <ReadUInt64Data+0x17d8>
   10184:	ldr	r1, [sp, #28]
   10188:	ldr	r6, [sp, #20]
   1018c:	ldr	r2, [sp, #12]
   10190:	add	r8, r8, #2048	; 0x800
   10194:	add	r1, r0, r1
   10198:	ldr	r0, [sp, #16]
   1019c:	add	r5, r6, #256	; 0x100
   101a0:	str	r1, [sp, #28]
   101a4:	ldr	r1, [sp, #24]
   101a8:	cmp	r5, r2
   101ac:	add	r0, r0, #2048	; 0x800
   101b0:	add	r1, r1, #256	; 0x100
   101b4:	blt	1010c <ReadUInt64Data+0x17ac>
   101b8:	ldr	r4, [sp, #8]
   101bc:	cmp	r5, r4
   101c0:	bge	105fc <ReadUInt64Data+0x1c9c>
   101c4:	ldr	r0, [sp, #36]	; 0x24
   101c8:	ldr	sl, [sp, #32]
   101cc:	sub	r8, r4, r5
   101d0:	add	r7, sp, #296	; 0x128
   101d4:	mov	r2, r8
   101d8:	ldr	r3, [r0]
   101dc:	mov	r0, r7
   101e0:	mov	r1, sl
   101e4:	bl	18b8 <fread@plt>
   101e8:	ldr	r9, [sp, #28]
   101ec:	cmp	r8, #1
   101f0:	add	r9, r0, r9
   101f4:	blt	10c20 <ReadUInt64Data+0x22c0>
   101f8:	ldr	r3, [sp, #4]
   101fc:	mov	lr, #0
   10200:	beq	11018 <ReadUInt64Data+0x26b8>
   10204:	bic	lr, r8, #1
   10208:	mov	r1, #1
   1020c:	mov	sl, r9
   10210:	str	r8, [sp, #36]	; 0x24
   10214:	subs	r2, lr, #2
   10218:	add	r2, r1, r2, lsr #1
   1021c:	and	r0, r2, #1
   10220:	str	r0, [sp, #28]
   10224:	beq	10fb8 <ReadUInt64Data+0x2658>
   10228:	sub	r2, r4, r6
   1022c:	ldr	ip, [sp, #16]
   10230:	add	r8, sp, #72	; 0x48
   10234:	mov	r9, #32
   10238:	sub	r2, r2, #256	; 0x100
   1023c:	bic	r2, r2, #1
   10240:	sub	r2, r2, #2
   10244:	add	r1, r1, r2, lsr #1
   10248:	mvn	r3, r2, lsr #1
   1024c:	mov	r2, #0
   10250:	and	r1, r1, #1
   10254:	add	r3, r3, r1
   10258:	add	r1, sp, #80	; 0x50
   1025c:	ldm	r7, {r0, r6}
   10260:	str	r6, [sp, #76]	; 0x4c
   10264:	adds	r3, r3, #2
   10268:	add	r2, r2, #4
   1026c:	str	r0, [sp, #72]	; 0x48
   10270:	add	r0, ip, #16
   10274:	vld1.32	{d16}, [r8 :64]
   10278:	vmovl.s32	q8, d16
   1027c:	vst1.64	{d16-d17}, [ip], r9
   10280:	ldr	r6, [r7, #8]
   10284:	ldr	r4, [r7, #12]
   10288:	add	r7, r7, #16
   1028c:	str	r4, [sp, #84]	; 0x54
   10290:	str	r6, [sp, #80]	; 0x50
   10294:	vld1.32	{d16}, [r1 :64]
   10298:	vmovl.s32	q8, d16
   1029c:	vst1.64	{d16-d17}, [r0]
   102a0:	bne	1025c <ReadUInt64Data+0x18fc>
   102a4:	b	10fbc <ReadUInt64Data+0x265c>
   102a8:	sub	r1, r6, #256	; 0x100
   102ac:	str	sl, [sp, #32]
   102b0:	mov	r8, r7
   102b4:	add	r0, r7, #2048	; 0x800
   102b8:	mov	r2, #0
   102bc:	mov	r5, #0
   102c0:	add	r7, sp, #296	; 0x128
   102c4:	add	r9, sp, #152	; 0x98
   102c8:	mov	r4, #32
   102cc:	add	sl, sp, #160	; 0xa0
   102d0:	str	r6, [sp, #8]
   102d4:	str	r1, [sp, #12]
   102d8:	mov	r1, #256	; 0x100
   102dc:	str	r8, [sp, #4]
   102e0:	str	r2, [sp, #28]
   102e4:	add	r2, sp, #16
   102e8:	stm	r2, {r0, r1, r5}
   102ec:	ldr	r0, [sp, #36]	; 0x24
   102f0:	ldr	r1, [sp, #32]
   102f4:	mov	r2, #256	; 0x100
   102f8:	ldr	r3, [r0]
   102fc:	mov	r0, r7
   10300:	bl	18b8 <fread@plt>
   10304:	mov	r1, r8
   10308:	mov	r2, #0
   1030c:	ldr	r3, [r7, r2]
   10310:	str	r3, [sp, #152]	; 0x98
   10314:	add	r3, r7, r2
   10318:	add	r2, r2, #16
   1031c:	ldr	r5, [r3, #4]
   10320:	cmp	r2, #1024	; 0x400
   10324:	str	r5, [sp, #156]	; 0x9c
   10328:	add	r5, r1, #16
   1032c:	vld1.32	{d16}, [r9 :64]
   10330:	vmovl.u32	q8, d16
   10334:	vst1.64	{d16-d17}, [r1], r4
   10338:	ldr	r6, [r3, #8]
   1033c:	ldr	r3, [r3, #12]
   10340:	str	r6, [sp, #160]	; 0xa0
   10344:	str	r3, [sp, #164]	; 0xa4
   10348:	vld1.32	{d16}, [sl :64]
   1034c:	vmovl.u32	q8, d16
   10350:	vst1.64	{d16-d17}, [r5]
   10354:	bne	1030c <ReadUInt64Data+0x19ac>
   10358:	ldr	r1, [sp, #28]
   1035c:	ldr	r2, [sp, #24]
   10360:	add	r8, r8, #2048	; 0x800
   10364:	add	r1, r0, r1
   10368:	ldr	r0, [sp, #16]
   1036c:	add	r5, r2, #256	; 0x100
   10370:	ldr	r2, [sp, #12]
   10374:	str	r1, [sp, #28]
   10378:	ldr	r1, [sp, #20]
   1037c:	add	r0, r0, #2048	; 0x800
   10380:	cmp	r5, r2
   10384:	add	r1, r1, #256	; 0x100
   10388:	blt	102e4 <ReadUInt64Data+0x1984>
   1038c:	ldr	r0, [sp, #8]
   10390:	cmp	r5, r0
   10394:	bge	105fc <ReadUInt64Data+0x1c9c>
   10398:	sub	r4, r0, r5
   1039c:	ldr	r0, [sp, #36]	; 0x24
   103a0:	ldr	sl, [sp, #32]
   103a4:	add	r7, sp, #296	; 0x128
   103a8:	mov	r2, r4
   103ac:	ldr	r3, [r0]
   103b0:	mov	r0, r7
   103b4:	mov	r1, sl
   103b8:	bl	18b8 <fread@plt>
   103bc:	ldr	r9, [sp, #28]
   103c0:	cmp	r4, #1
   103c4:	add	r9, r0, r9
   103c8:	blt	10c20 <ReadUInt64Data+0x22c0>
   103cc:	ldr	r6, [sp, #4]
   103d0:	mov	r1, #0
   103d4:	mov	lr, #0
   103d8:	beq	110ac <ReadUInt64Data+0x274c>
   103dc:	bic	lr, r4, #1
   103e0:	mov	r0, #1
   103e4:	str	r4, [sp, #36]	; 0x24
   103e8:	str	r9, [sp, #28]
   103ec:	subs	r2, lr, #2
   103f0:	add	r2, r0, r2, lsr #1
   103f4:	and	r2, r2, #1
   103f8:	str	r2, [sp, #12]
   103fc:	beq	11054 <ReadUInt64Data+0x26f4>
   10400:	ldr	r2, [sp, #8]
   10404:	ldr	r3, [sp, #24]
   10408:	ldr	ip, [sp, #16]
   1040c:	add	r8, sp, #136	; 0x88
   10410:	mov	r9, #32
   10414:	add	sl, sp, #144	; 0x90
   10418:	sub	r2, r2, r3
   1041c:	sub	r2, r2, #256	; 0x100
   10420:	bic	r2, r2, #1
   10424:	sub	r2, r2, #2
   10428:	add	r0, r0, r2, lsr #1
   1042c:	mvn	r3, r2, lsr #1
   10430:	and	r0, r0, #1
   10434:	add	r6, r3, r0
   10438:	mov	r3, #0
   1043c:	ldr	r4, [r7]
   10440:	ldr	r2, [r7, #4]
   10444:	adds	r6, r6, #2
   10448:	add	r3, r3, #4
   1044c:	str	r2, [sp, #140]	; 0x8c
   10450:	str	r4, [sp, #136]	; 0x88
   10454:	add	r2, ip, #16
   10458:	vld1.32	{d16}, [r8 :64]
   1045c:	vmovl.u32	q8, d16
   10460:	vst1.64	{d16-d17}, [ip], r9
   10464:	ldr	r4, [r7, #8]
   10468:	ldr	r0, [r7, #12]
   1046c:	add	r7, r7, #16
   10470:	str	r0, [sp, #148]	; 0x94
   10474:	str	r4, [sp, #144]	; 0x90
   10478:	vld1.32	{d16}, [sl :64]
   1047c:	vmovl.u32	q8, d16
   10480:	vst1.64	{d16-d17}, [r2]
   10484:	bne	1043c <ReadUInt64Data+0x1adc>
   10488:	b	11058 <ReadUInt64Data+0x26f8>
   1048c:	add	r0, sp, #296	; 0x128
   10490:	sub	r1, r6, #256	; 0x100
   10494:	str	r6, [sp, #8]
   10498:	mov	r8, #0
   1049c:	mov	r6, r7
   104a0:	mov	r9, #0
   104a4:	str	sl, [sp, #32]
   104a8:	str	r7, [sp, #4]
   104ac:	add	r0, r0, #4
   104b0:	str	r1, [sp, #20]
   104b4:	str	r0, [sp, #28]
   104b8:	add	r0, r7, #2048	; 0x800
   104bc:	ldr	r3, [r4]
   104c0:	ldr	r1, [sp, #32]
   104c4:	mov	r7, r0
   104c8:	add	r0, sp, #296	; 0x128
   104cc:	mov	r2, #256	; 0x100
   104d0:	mov	sl, r9
   104d4:	str	r8, [sp, #24]
   104d8:	bl	18b8 <fread@plt>
   104dc:	ldr	r9, [sp, #28]
   104e0:	mov	r4, r0
   104e4:	mov	r5, #0
   104e8:	ldr	r0, [r9, #-4]
   104ec:	bl	6b970 <__aeabi_f2ulz>
   104f0:	mov	r8, r6
   104f4:	str	r0, [r8, r5]!
   104f8:	str	r1, [r8, #4]
   104fc:	ldr	r0, [r9]
   10500:	bl	6b970 <__aeabi_f2ulz>
   10504:	add	r5, r5, #16
   10508:	add	r9, r9, #8
   1050c:	strd	r0, [r8, #8]
   10510:	cmp	r5, #2048	; 0x800
   10514:	bne	104e8 <ReadUInt64Data+0x1b88>
   10518:	mov	r5, r7
   1051c:	add	r0, r7, #2048	; 0x800
   10520:	ldr	r7, [sp, #24]
   10524:	ldr	r1, [sp, #20]
   10528:	mov	r9, sl
   1052c:	add	r9, r4, sl
   10530:	ldr	r4, [sp, #36]	; 0x24
   10534:	add	r6, r6, #2048	; 0x800
   10538:	add	r8, r7, #256	; 0x100
   1053c:	cmp	r8, r1
   10540:	blt	104bc <ReadUInt64Data+0x1b5c>
   10544:	ldr	r6, [sp, #8]
   10548:	cmp	r8, r6
   1054c:	bge	10c1c <ReadUInt64Data+0x22bc>
   10550:	mov	r0, r4
   10554:	ldr	r1, [sp, #32]
   10558:	sub	r4, r6, r8
   1055c:	ldr	r3, [r0]
   10560:	add	r0, sp, #296	; 0x128
   10564:	mov	r2, r4
   10568:	bl	18b8 <fread@plt>
   1056c:	add	r9, r0, r9
   10570:	cmp	r4, #1
   10574:	blt	10c1c <ReadUInt64Data+0x22bc>
   10578:	mvn	r0, #256	; 0x100
   1057c:	str	r9, [sp, #28]
   10580:	and	r9, r4, #1
   10584:	mov	r4, #0
   10588:	sub	r0, r0, r7
   1058c:	cmn	r0, r6
   10590:	beq	105d8 <ReadUInt64Data+0x1c78>
   10594:	sub	r0, r9, r6
   10598:	mov	r4, #0
   1059c:	add	sl, r0, r8
   105a0:	add	r0, sp, #296	; 0x128
   105a4:	add	r6, r0, #4
   105a8:	ldr	r0, [r6, #-4]
   105ac:	bl	6b970 <__aeabi_f2ulz>
   105b0:	strd	r0, [r5]
   105b4:	ldr	r0, [r6]
   105b8:	bl	6b970 <__aeabi_f2ulz>
   105bc:	sub	r4, r4, #2
   105c0:	strd	r0, [r5, #8]
   105c4:	add	r5, r5, #16
   105c8:	add	r6, r6, #8
   105cc:	cmp	sl, r4
   105d0:	bne	105a8 <ReadUInt64Data+0x1c48>
   105d4:	rsb	r4, r4, #0
   105d8:	ldr	r6, [sp, #4]
   105dc:	cmp	r9, #0
   105e0:	beq	105fc <ReadUInt64Data+0x1c9c>
   105e4:	add	r0, sp, #296	; 0x128
   105e8:	ldr	r0, [r0, r4, lsl #2]
   105ec:	bl	6b970 <__aeabi_f2ulz>
   105f0:	add	r2, r4, r8
   105f4:	str	r0, [r6, r2, lsl #3]!
   105f8:	str	r1, [r6, #4]
   105fc:	ldr	sl, [sp, #32]
   10600:	ldr	r9, [sp, #28]
   10604:	b	10c20 <ReadUInt64Data+0x22c0>
   10608:	str	sl, [sp, #32]
   1060c:	sub	r1, r6, #256	; 0x100
   10610:	mov	sl, r7
   10614:	add	r0, r7, #2048	; 0x800
   10618:	mov	r4, #0
   1061c:	add	r7, sp, #296	; 0x128
   10620:	mov	r9, #0
   10624:	str	r6, [sp, #8]
   10628:	str	r1, [sp, #20]
   1062c:	str	sl, [sp, #4]
   10630:	str	r0, [sp, #28]
   10634:	ldr	r0, [sp, #36]	; 0x24
   10638:	ldr	r1, [sp, #32]
   1063c:	mov	r2, #256	; 0x100
   10640:	mov	r8, r9
   10644:	str	r4, [sp, #24]
   10648:	ldr	r3, [r0]
   1064c:	mov	r0, r7
   10650:	bl	18b8 <fread@plt>
   10654:	mov	r4, r0
   10658:	mov	r5, #0
   1065c:	add	r9, r7, r5
   10660:	vldr	d16, [r9]
   10664:	vmov	r0, r1, d16
   10668:	bl	6b9b0 <__aeabi_d2ulz>
   1066c:	mov	r6, sl
   10670:	str	r0, [r6, r5]!
   10674:	str	r1, [r6, #4]
   10678:	vldr	d16, [r9, #8]
   1067c:	vmov	r0, r1, d16
   10680:	bl	6b9b0 <__aeabi_d2ulz>
   10684:	add	r5, r5, #16
   10688:	strd	r0, [r6, #8]
   1068c:	cmp	r5, #2048	; 0x800
   10690:	bne	1065c <ReadUInt64Data+0x1cfc>
   10694:	ldr	r5, [sp, #24]
   10698:	ldr	r0, [sp, #28]
   1069c:	ldr	r1, [sp, #20]
   106a0:	mov	r9, r8
   106a4:	add	r9, r4, r8
   106a8:	add	sl, sl, #2048	; 0x800
   106ac:	add	r4, r5, #256	; 0x100
   106b0:	add	r0, r0, #2048	; 0x800
   106b4:	cmp	r4, r1
   106b8:	blt	10630 <ReadUInt64Data+0x1cd0>
   106bc:	ldr	r6, [sp, #8]
   106c0:	cmp	r4, r6
   106c4:	bge	10c1c <ReadUInt64Data+0x22bc>
   106c8:	ldr	r0, [sp, #36]	; 0x24
   106cc:	ldr	sl, [sp, #32]
   106d0:	sub	r7, r6, r4
   106d4:	add	r8, sp, #296	; 0x128
   106d8:	mov	r2, r7
   106dc:	ldr	r3, [r0]
   106e0:	mov	r0, r8
   106e4:	mov	r1, sl
   106e8:	bl	18b8 <fread@plt>
   106ec:	add	r9, r0, r9
   106f0:	cmp	r7, #1
   106f4:	blt	10c20 <ReadUInt64Data+0x22c0>
   106f8:	mvn	r0, #256	; 0x100
   106fc:	mov	sl, r9
   10700:	and	r9, r7, #1
   10704:	sub	r0, r0, r5
   10708:	mov	r5, #0
   1070c:	cmn	r0, r6
   10710:	beq	10764 <ReadUInt64Data+0x1e04>
   10714:	add	r5, r8, #8
   10718:	ldr	r8, [sp, #28]
   1071c:	sub	r0, r9, r6
   10720:	mov	r7, #0
   10724:	add	r6, r0, r4
   10728:	vldr	d16, [r5, #-8]
   1072c:	vmov	r0, r1, d16
   10730:	bl	6b9b0 <__aeabi_d2ulz>
   10734:	strd	r0, [r8]
   10738:	vldr	d16, [r5]
   1073c:	vmov	r0, r1, d16
   10740:	bl	6b9b0 <__aeabi_d2ulz>
   10744:	sub	r7, r7, #2
   10748:	strd	r0, [r8, #8]
   1074c:	add	r8, r8, #16
   10750:	add	r5, r5, #16
   10754:	cmp	r6, r7
   10758:	bne	10728 <ReadUInt64Data+0x1dc8>
   1075c:	rsb	r5, r7, #0
   10760:	add	r8, sp, #296	; 0x128
   10764:	cmp	r9, #0
   10768:	beq	1078c <ReadUInt64Data+0x1e2c>
   1076c:	add	r0, r8, r5, lsl #3
   10770:	vldr	d16, [r0]
   10774:	vmov	r0, r1, d16
   10778:	bl	6b9b0 <__aeabi_d2ulz>
   1077c:	ldr	r3, [sp, #4]
   10780:	add	r2, r5, r4
   10784:	str	r0, [r3, r2, lsl #3]!
   10788:	str	r1, [r3, #4]
   1078c:	mov	r9, sl
   10790:	b	10c1c <ReadUInt64Data+0x22bc>
   10794:	str	r5, [sp, #24]
   10798:	sub	r0, r6, #256	; 0x100
   1079c:	mov	r8, sl
   107a0:	lsl	r4, r6, #3
   107a4:	mov	r5, #0
   107a8:	mov	r9, #0
   107ac:	mov	sl, r7
   107b0:	str	r6, [sp, #8]
   107b4:	str	r0, [sp, #28]
   107b8:	ldr	r0, [sp, #36]	; 0x24
   107bc:	add	r6, sp, #296	; 0x128
   107c0:	mov	r1, r8
   107c4:	mov	r2, #256	; 0x100
   107c8:	ldr	r3, [r0]
   107cc:	mov	r0, r6
   107d0:	bl	18b8 <fread@plt>
   107d4:	mov	r7, r0
   107d8:	add	r0, sl, r5, lsl #3
   107dc:	mov	r1, r6
   107e0:	mov	r2, #2048	; 0x800
   107e4:	bl	181c <memcpy@plt>
   107e8:	ldr	r0, [sp, #28]
   107ec:	add	r5, r5, #256	; 0x100
   107f0:	add	r9, r7, r9
   107f4:	sub	r4, r4, #2048	; 0x800
   107f8:	cmp	r5, r0
   107fc:	blt	107b8 <ReadUInt64Data+0x1e58>
   10800:	ldr	r6, [sp, #8]
   10804:	cmp	r5, r6
   10808:	bge	1085c <ReadUInt64Data+0x1efc>
   1080c:	ldr	r0, [sp, #36]	; 0x24
   10810:	sub	r7, r6, r5
   10814:	mov	r1, r8
   10818:	mov	r2, r7
   1081c:	ldr	r3, [r0]
   10820:	add	r0, sp, #296	; 0x128
   10824:	bl	18b8 <fread@plt>
   10828:	add	r9, r0, r9
   1082c:	cmp	r7, #1
   10830:	blt	1085c <ReadUInt64Data+0x1efc>
   10834:	add	r0, sl, r5, lsl #3
   10838:	add	r1, sp, #296	; 0x128
   1083c:	mov	r2, r4
   10840:	mov	r7, sl
   10844:	bl	181c <memcpy@plt>
   10848:	ldr	r4, [sp, #36]	; 0x24
   1084c:	b	10864 <ReadUInt64Data+0x1f04>
   10850:	ldr	sl, [sp, #32]
   10854:	mov	r9, r5
   10858:	b	10c20 <ReadUInt64Data+0x22c0>
   1085c:	ldr	r4, [sp, #36]	; 0x24
   10860:	mov	r7, sl
   10864:	mov	sl, r8
   10868:	ldr	r5, [sp, #24]
   1086c:	cmp	r5, #13
   10870:	bne	10c20 <ReadUInt64Data+0x22c0>
   10874:	ldr	r0, [r4, #20]
   10878:	cmp	r0, #0
   1087c:	beq	108cc <ReadUInt64Data+0x1f6c>
   10880:	cmp	r6, #256	; 0x100
   10884:	bgt	10904 <ReadUInt64Data+0x1fa4>
   10888:	ldr	r3, [r4]
   1088c:	add	r4, sp, #296	; 0x128
   10890:	mov	r1, sl
   10894:	mov	r2, r6
   10898:	mov	r0, r4
   1089c:	bl	18b8 <fread@plt>
   108a0:	add	r9, r0, r9
   108a4:	cmp	r6, #1
   108a8:	blt	10c20 <ReadUInt64Data+0x22c0>
   108ac:	mov	r0, r4
   108b0:	bl	1bd4 <Mat_uint64Swap>
   108b4:	strd	r0, [r7]
   108b8:	add	r4, r4, #8
   108bc:	add	r7, r7, #8
   108c0:	subs	r6, r6, #1
   108c4:	bne	108ac <ReadUInt64Data+0x1f4c>
   108c8:	b	10c20 <ReadUInt64Data+0x22c0>
   108cc:	cmp	r6, #256	; 0x100
   108d0:	bgt	109e8 <ReadUInt64Data+0x2088>
   108d4:	ldr	r3, [r4]
   108d8:	add	r0, sp, #296	; 0x128
   108dc:	mov	r1, sl
   108e0:	mov	r2, r6
   108e4:	bl	18b8 <fread@plt>
   108e8:	add	r9, r0, r9
   108ec:	cmp	r6, #1
   108f0:	blt	10c20 <ReadUInt64Data+0x22c0>
   108f4:	lsl	r2, r6, #3
   108f8:	add	r1, sp, #296	; 0x128
   108fc:	mov	r0, r7
   10900:	b	10a8c <ReadUInt64Data+0x212c>
   10904:	sub	r0, r6, #256	; 0x100
   10908:	mov	r8, r7
   1090c:	add	r1, r7, #2048	; 0x800
   10910:	add	r4, sp, #296	; 0x128
   10914:	str	sl, [sp, #32]
   10918:	str	r6, [sp, #8]
   1091c:	str	r0, [sp, #28]
   10920:	mov	r0, #0
   10924:	mov	sl, r0
   10928:	ldr	r0, [sp, #36]	; 0x24
   1092c:	mov	r5, r1
   10930:	ldr	r1, [sp, #32]
   10934:	mov	r2, #256	; 0x100
   10938:	ldr	r3, [r0]
   1093c:	mov	r0, r4
   10940:	bl	18b8 <fread@plt>
   10944:	mov	r7, r0
   10948:	mov	r6, #0
   1094c:	add	r0, r4, r6
   10950:	bl	1bd4 <Mat_uint64Swap>
   10954:	mov	r2, r8
   10958:	str	r0, [r2, r6]!
   1095c:	add	r6, r6, #8
   10960:	cmp	r6, #2048	; 0x800
   10964:	str	r1, [r2, #4]
   10968:	bne	1094c <ReadUInt64Data+0x1fec>
   1096c:	ldr	r2, [sp, #28]
   10970:	add	r0, sl, #256	; 0x100
   10974:	add	r9, r7, r9
   10978:	add	r8, r8, #2048	; 0x800
   1097c:	add	r1, r5, #2048	; 0x800
   10980:	cmp	r0, r2
   10984:	blt	10924 <ReadUInt64Data+0x1fc4>
   10988:	ldr	r6, [sp, #8]
   1098c:	cmp	r0, r6
   10990:	bge	10c1c <ReadUInt64Data+0x22bc>
   10994:	sub	r7, r6, r0
   10998:	ldr	r0, [sp, #36]	; 0x24
   1099c:	ldr	r1, [sp, #32]
   109a0:	add	r4, sp, #296	; 0x128
   109a4:	mov	r2, r7
   109a8:	ldr	r3, [r0]
   109ac:	mov	r0, r4
   109b0:	bl	18b8 <fread@plt>
   109b4:	add	r9, r0, r9
   109b8:	cmp	r7, #1
   109bc:	blt	10c1c <ReadUInt64Data+0x22bc>
   109c0:	sub	r0, r6, sl
   109c4:	sub	r6, r0, #256	; 0x100
   109c8:	mov	r0, r4
   109cc:	bl	1bd4 <Mat_uint64Swap>
   109d0:	strd	r0, [r5]
   109d4:	add	r5, r5, #8
   109d8:	add	r4, r4, #8
   109dc:	subs	r6, r6, #1
   109e0:	bne	109c8 <ReadUInt64Data+0x2068>
   109e4:	b	10c1c <ReadUInt64Data+0x22bc>
   109e8:	sub	r0, r6, #256	; 0x100
   109ec:	lsl	r4, r6, #3
   109f0:	str	r6, [sp, #8]
   109f4:	mov	r5, #0
   109f8:	add	r8, sp, #296	; 0x128
   109fc:	mov	r6, r7
   10a00:	str	r0, [sp, #28]
   10a04:	ldr	r0, [sp, #36]	; 0x24
   10a08:	mov	r1, sl
   10a0c:	mov	r2, #256	; 0x100
   10a10:	ldr	r3, [r0]
   10a14:	mov	r0, r8
   10a18:	bl	18b8 <fread@plt>
   10a1c:	mov	r7, r0
   10a20:	add	r0, r6, r5, lsl #3
   10a24:	mov	r1, r8
   10a28:	mov	r2, #2048	; 0x800
   10a2c:	bl	181c <memcpy@plt>
   10a30:	ldr	r0, [sp, #28]
   10a34:	add	r5, r5, #256	; 0x100
   10a38:	add	r9, r7, r9
   10a3c:	sub	r4, r4, #2048	; 0x800
   10a40:	cmp	r5, r0
   10a44:	blt	10a04 <ReadUInt64Data+0x20a4>
   10a48:	mov	r1, sl
   10a4c:	ldr	sl, [sp, #8]
   10a50:	cmp	r5, sl
   10a54:	bge	10aa4 <ReadUInt64Data+0x2144>
   10a58:	ldr	r0, [sp, #36]	; 0x24
   10a5c:	sub	r7, sl, r5
   10a60:	mov	sl, r1
   10a64:	mov	r2, r7
   10a68:	ldr	r3, [r0]
   10a6c:	add	r0, sp, #296	; 0x128
   10a70:	bl	18b8 <fread@plt>
   10a74:	add	r9, r0, r9
   10a78:	cmp	r7, #1
   10a7c:	blt	10c20 <ReadUInt64Data+0x22c0>
   10a80:	add	r0, r6, r5, lsl #3
   10a84:	add	r1, sp, #296	; 0x128
   10a88:	mov	r2, r4
   10a8c:	bl	181c <memcpy@plt>
   10a90:	b	10c20 <ReadUInt64Data+0x22c0>
   10a94:	ldr	r4, [sp, #36]	; 0x24
   10a98:	cmp	r5, #13
   10a9c:	beq	10874 <ReadUInt64Data+0x1f14>
   10aa0:	b	10c20 <ReadUInt64Data+0x22c0>
   10aa4:	mov	sl, r1
   10aa8:	b	10c20 <ReadUInt64Data+0x22c0>
   10aac:	mov	r1, #0
   10ab0:	ldr	r9, [sp, #28]
   10ab4:	cmp	ip, #0
   10ab8:	mov	r7, sl
   10abc:	beq	10ae4 <ReadUInt64Data+0x2184>
   10ac0:	add	r0, r4, r1
   10ac4:	ldrh	r0, [r0]
   10ac8:	strh	r0, [r8]
   10acc:	add	r0, r7, r1, lsl #3
   10ad0:	vld1.16	{d16[0]}, [r8 :16]
   10ad4:	vmovl.s8	q8, d16
   10ad8:	vmovl.s16	q8, d16
   10adc:	vmovl.s32	q8, d16
   10ae0:	vst1.64	{d16-d17}, [r0]
   10ae4:	ldr	r6, [sp, #8]
   10ae8:	ldr	sl, [sp, #32]
   10aec:	cmp	lr, r6
   10af0:	beq	10c20 <ReadUInt64Data+0x22c0>
   10af4:	add	r1, r7, lr, lsl #3
   10af8:	add	r0, r4, lr
   10afc:	sub	r2, r6, lr
   10b00:	ldrsb	r4, [r0], #1
   10b04:	subs	r2, r2, #1
   10b08:	asr	r5, r4, #31
   10b0c:	strd	r4, [r1]
   10b10:	add	r1, r1, #8
   10b14:	bne	10b00 <ReadUInt64Data+0x21a0>
   10b18:	b	10c20 <ReadUInt64Data+0x22c0>
   10b1c:	mov	r2, #0
   10b20:	ldr	r0, [sp, #36]	; 0x24
   10b24:	ldr	sl, [sp, #32]
   10b28:	ldr	r7, [sp, #4]
   10b2c:	cmp	r0, #0
   10b30:	beq	10b5c <ReadUInt64Data+0x21fc>
   10b34:	add	r0, r9, r2
   10b38:	ldrh	r0, [r0]
   10b3c:	strh	r0, [r8, #32]
   10b40:	add	r0, sp, #264	; 0x108
   10b44:	vld1.16	{d16[0]}, [r0 :16]
   10b48:	add	r0, r7, r2, lsl #3
   10b4c:	vmovl.u8	q8, d16
   10b50:	vmovl.u16	q8, d16
   10b54:	vmovl.u32	q8, d16
   10b58:	vst1.64	{d16-d17}, [r0]
   10b5c:	ldr	r6, [sp, #8]
   10b60:	cmp	lr, r6
   10b64:	beq	10b8c <ReadUInt64Data+0x222c>
   10b68:	add	r2, r7, lr, lsl #3
   10b6c:	add	r0, r9, lr
   10b70:	sub	r3, r6, lr
   10b74:	ldrb	r4, [r0], #1
   10b78:	subs	r3, r3, #1
   10b7c:	str	r4, [r2]
   10b80:	str	r1, [r2, #4]
   10b84:	add	r2, r2, #8
   10b88:	bne	10b74 <ReadUInt64Data+0x2214>
   10b8c:	mov	r9, ip
   10b90:	b	10c20 <ReadUInt64Data+0x22c0>
   10b94:	mov	r2, #0
   10b98:	ldr	r0, [sp, #12]
   10b9c:	cmp	r0, #0
   10ba0:	beq	10bd0 <ReadUInt64Data+0x2270>
   10ba4:	add	r0, r9, r2
   10ba8:	ldrh	r0, [r0]
   10bac:	strh	r0, [r8, #12]
   10bb0:	add	r0, sp, #244	; 0xf4
   10bb4:	vld1.16	{d16[0]}, [r0 :16]
   10bb8:	add	r0, r2, r4
   10bbc:	add	r0, sl, r0, lsl #3
   10bc0:	vmovl.s8	q8, d16
   10bc4:	vmovl.s16	q8, d16
   10bc8:	vmovl.s32	q8, d16
   10bcc:	vst1.64	{d16-d17}, [r0]
   10bd0:	ldr	r0, [sp, #36]	; 0x24
   10bd4:	ldr	r5, [sp, #8]
   10bd8:	cmp	r0, lr
   10bdc:	beq	10c18 <ReadUInt64Data+0x22b8>
   10be0:	ldr	r0, [sp, #20]
   10be4:	add	r1, r9, lr
   10be8:	add	r0, lr, r0
   10bec:	add	r2, sl, r0, lsl #3
   10bf0:	ldr	r0, [sp, #24]
   10bf4:	sub	r0, r5, r0
   10bf8:	sub	r0, r0, lr
   10bfc:	sub	r0, r0, #256	; 0x100
   10c00:	ldrsb	r4, [r1], #1
   10c04:	subs	r0, r0, #1
   10c08:	asr	r5, r4, #31
   10c0c:	strd	r4, [r2]
   10c10:	add	r2, r2, #8
   10c14:	bne	10c00 <ReadUInt64Data+0x22a0>
   10c18:	ldr	r9, [sp, #28]
   10c1c:	ldr	sl, [sp, #32]
   10c20:	mul	r0, r9, sl
   10c24:	sub	sp, fp, #28
   10c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c2c:	mov	r3, #0
   10c30:	ldr	r0, [sp, #12]
   10c34:	ldr	sl, [sp, #32]
   10c38:	ldr	r7, [sp, #4]
   10c3c:	cmp	r0, #0
   10c40:	beq	10c70 <ReadUInt64Data+0x2310>
   10c44:	add	r0, r9, r3
   10c48:	ldrh	r0, [r0]
   10c4c:	strh	r0, [r8, #44]	; 0x2c
   10c50:	add	r0, sp, #276	; 0x114
   10c54:	vld1.16	{d16[0]}, [r0 :16]
   10c58:	add	r0, r3, r4
   10c5c:	add	r0, r7, r0, lsl #3
   10c60:	vmovl.u8	q8, d16
   10c64:	vmovl.u16	q8, d16
   10c68:	vmovl.u32	q8, d16
   10c6c:	vst1.64	{d16-d17}, [r0]
   10c70:	ldr	r0, [sp, #36]	; 0x24
   10c74:	ldr	r5, [sp, #8]
   10c78:	cmp	r0, lr
   10c7c:	beq	10cb8 <ReadUInt64Data+0x2358>
   10c80:	ldr	r2, [sp, #20]
   10c84:	ldr	r3, [sp, #24]
   10c88:	add	r0, r9, lr
   10c8c:	add	r2, lr, r2
   10c90:	sub	r3, r5, r3
   10c94:	sub	r3, r3, lr
   10c98:	add	r2, r7, r2, lsl #3
   10c9c:	sub	r3, r3, #256	; 0x100
   10ca0:	ldrb	r4, [r0], #1
   10ca4:	subs	r3, r3, #1
   10ca8:	str	r4, [r2]
   10cac:	str	r1, [r2, #4]
   10cb0:	add	r2, r2, #8
   10cb4:	bne	10ca0 <ReadUInt64Data+0x2340>
   10cb8:	ldr	r9, [sp, #28]
   10cbc:	b	10c20 <ReadUInt64Data+0x22c0>
   10cc0:	mov	sl, r7
   10cc4:	mov	r1, #0
   10cc8:	cmp	ip, #0
   10ccc:	mov	r7, sl
   10cd0:	beq	10cf8 <ReadUInt64Data+0x2398>
   10cd4:	add	r0, sp, #296	; 0x128
   10cd8:	ldr	r0, [r0, r1, lsl #1]
   10cdc:	str	r0, [sp, #168]	; 0xa8
   10ce0:	add	r0, sp, #168	; 0xa8
   10ce4:	vld1.32	{d16[0]}, [r0 :32]
   10ce8:	add	r0, r7, r1, lsl #3
   10cec:	vmovl.s16	q8, d16
   10cf0:	vmovl.s32	q8, d16
   10cf4:	vst1.64	{d16-d17}, [r0]
   10cf8:	ldr	r6, [sp, #8]
   10cfc:	ldr	sl, [sp, #32]
   10d00:	cmp	lr, r6
   10d04:	beq	10c20 <ReadUInt64Data+0x22c0>
   10d08:	add	r0, sp, #296	; 0x128
   10d0c:	add	r2, r7, lr, lsl #3
   10d10:	add	r1, r0, lr, lsl #1
   10d14:	sub	r0, r6, lr
   10d18:	ldrsh	r4, [r1], #2
   10d1c:	subs	r0, r0, #1
   10d20:	asr	r5, r4, #31
   10d24:	strd	r4, [r2]
   10d28:	add	r2, r2, #8
   10d2c:	bne	10d18 <ReadUInt64Data+0x23b8>
   10d30:	b	10c20 <ReadUInt64Data+0x22c0>
   10d34:	mov	r2, #0
   10d38:	ldr	r9, [sp, #28]
   10d3c:	cmp	ip, #0
   10d40:	mov	r7, sl
   10d44:	beq	10d6c <ReadUInt64Data+0x240c>
   10d48:	add	r0, sp, #296	; 0x128
   10d4c:	ldr	r0, [r0, r2, lsl #1]
   10d50:	str	r0, [sp, #200]	; 0xc8
   10d54:	add	r0, sp, #200	; 0xc8
   10d58:	vld1.32	{d16[0]}, [r0 :32]
   10d5c:	add	r0, r7, r2, lsl #3
   10d60:	vmovl.u16	q8, d16
   10d64:	vmovl.u32	q8, d16
   10d68:	vst1.64	{d16-d17}, [r0]
   10d6c:	ldr	r6, [sp, #8]
   10d70:	ldr	sl, [sp, #32]
   10d74:	cmp	lr, r6
   10d78:	beq	10c20 <ReadUInt64Data+0x22c0>
   10d7c:	add	r0, sp, #296	; 0x128
   10d80:	add	r2, r7, lr, lsl #3
   10d84:	sub	r3, r6, lr
   10d88:	add	r0, r0, lr, lsl #1
   10d8c:	ldrh	r4, [r0], #2
   10d90:	subs	r3, r3, #1
   10d94:	str	r4, [r2]
   10d98:	str	r1, [r2, #4]
   10d9c:	add	r2, r2, #8
   10da0:	bne	10d8c <ReadUInt64Data+0x242c>
   10da4:	b	10c20 <ReadUInt64Data+0x22c0>
   10da8:	mov	r2, #0
   10dac:	ldr	sl, [sp, #32]
   10db0:	ldr	r9, [sp, #28]
   10db4:	ldr	r7, [sp, #4]
   10db8:	cmp	ip, #0
   10dbc:	beq	10dec <ReadUInt64Data+0x248c>
   10dc0:	add	r0, sp, #296	; 0x128
   10dc4:	ldr	r3, [r0, r2, lsl #2]
   10dc8:	add	r0, r0, r2, lsl #2
   10dcc:	str	r3, [sp, #104]	; 0x68
   10dd0:	ldr	r0, [r0, #4]
   10dd4:	str	r0, [sp, #108]	; 0x6c
   10dd8:	add	r0, sp, #104	; 0x68
   10ddc:	vld1.32	{d16}, [r0 :64]
   10de0:	add	r0, r7, r2, lsl #3
   10de4:	vmovl.u32	q8, d16
   10de8:	vst1.64	{d16-d17}, [r0]
   10dec:	ldr	r6, [sp, #8]
   10df0:	cmp	lr, r6
   10df4:	beq	10c20 <ReadUInt64Data+0x22c0>
   10df8:	add	r0, sp, #296	; 0x128
   10dfc:	add	r2, r7, lr, lsl #3
   10e00:	sub	r3, r6, lr
   10e04:	add	r0, r0, lr, lsl #2
   10e08:	ldr	r4, [r0], #4
   10e0c:	subs	r3, r3, #1
   10e10:	str	r4, [r2]
   10e14:	str	r1, [r2, #4]
   10e18:	add	r2, r2, #8
   10e1c:	bne	10e08 <ReadUInt64Data+0x24a8>
   10e20:	b	10c20 <ReadUInt64Data+0x22c0>
   10e24:	mov	r1, #0
   10e28:	ldr	r9, [sp, #28]
   10e2c:	cmp	ip, #0
   10e30:	mov	r7, sl
   10e34:	beq	10e64 <ReadUInt64Data+0x2504>
   10e38:	add	r0, sp, #296	; 0x128
   10e3c:	ldr	r2, [r0, r1, lsl #2]
   10e40:	add	r0, r0, r1, lsl #2
   10e44:	str	r2, [sp, #40]	; 0x28
   10e48:	ldr	r0, [r0, #4]
   10e4c:	str	r0, [sp, #44]	; 0x2c
   10e50:	add	r0, sp, #40	; 0x28
   10e54:	vld1.32	{d16}, [r0 :64]
   10e58:	add	r0, r7, r1, lsl #3
   10e5c:	vmovl.s32	q8, d16
   10e60:	vst1.64	{d16-d17}, [r0]
   10e64:	ldr	r6, [sp, #8]
   10e68:	ldr	sl, [sp, #32]
   10e6c:	cmp	lr, r6
   10e70:	beq	10c20 <ReadUInt64Data+0x22c0>
   10e74:	add	r0, sp, #296	; 0x128
   10e78:	add	r2, r7, lr, lsl #3
   10e7c:	add	r1, r0, lr, lsl #2
   10e80:	sub	r0, r6, lr
   10e84:	ldr	r4, [r1], #4
   10e88:	subs	r0, r0, #1
   10e8c:	asr	r5, r4, #31
   10e90:	strd	r4, [r2]
   10e94:	add	r2, r2, #8
   10e98:	bne	10e84 <ReadUInt64Data+0x2524>
   10e9c:	b	10c20 <ReadUInt64Data+0x22c0>
   10ea0:	mov	r2, #0
   10ea4:	ldr	r0, [sp, #16]
   10ea8:	cmp	r0, #0
   10eac:	beq	10ed8 <ReadUInt64Data+0x2578>
   10eb0:	add	r0, sp, #296	; 0x128
   10eb4:	ldr	r0, [r0, r2, lsl #1]
   10eb8:	str	r0, [sp, #180]	; 0xb4
   10ebc:	add	r0, sp, #180	; 0xb4
   10ec0:	vld1.32	{d16[0]}, [r0 :32]
   10ec4:	add	r0, r2, r5
   10ec8:	add	r0, sl, r0, lsl #3
   10ecc:	vmovl.s16	q8, d16
   10ed0:	vmovl.s32	q8, d16
   10ed4:	vst1.64	{d16-d17}, [r0]
   10ed8:	ldr	r0, [sp, #36]	; 0x24
   10edc:	ldr	r4, [sp, #8]
   10ee0:	cmp	r0, lr
   10ee4:	beq	10c1c <ReadUInt64Data+0x22bc>
   10ee8:	add	r0, sp, #296	; 0x128
   10eec:	add	r1, r0, lr, lsl #1
   10ef0:	ldr	r0, [sp, #24]
   10ef4:	add	r0, lr, r0
   10ef8:	add	r2, sl, r0, lsl #3
   10efc:	ldr	r0, [sp, #28]
   10f00:	sub	r0, r4, r0
   10f04:	sub	r0, r0, lr
   10f08:	sub	r0, r0, #256	; 0x100
   10f0c:	ldrsh	r4, [r1], #2
   10f10:	subs	r0, r0, #1
   10f14:	asr	r5, r4, #31
   10f18:	strd	r4, [r2]
   10f1c:	add	r2, r2, #8
   10f20:	bne	10f0c <ReadUInt64Data+0x25ac>
   10f24:	b	10c1c <ReadUInt64Data+0x22bc>
   10f28:	mov	r3, #0
   10f2c:	ldr	r0, [sp, #16]
   10f30:	ldr	sl, [sp, #32]
   10f34:	ldr	r6, [sp, #4]
   10f38:	cmp	r0, #0
   10f3c:	beq	10f68 <ReadUInt64Data+0x2608>
   10f40:	add	r0, sp, #296	; 0x128
   10f44:	ldr	r0, [r0, r3, lsl #1]
   10f48:	str	r0, [sp, #212]	; 0xd4
   10f4c:	add	r0, sp, #212	; 0xd4
   10f50:	vld1.32	{d16[0]}, [r0 :32]
   10f54:	add	r0, r3, r5
   10f58:	add	r0, r6, r0, lsl #3
   10f5c:	vmovl.u16	q8, d16
   10f60:	vmovl.u32	q8, d16
   10f64:	vst1.64	{d16-d17}, [r0]
   10f68:	ldr	r0, [sp, #36]	; 0x24
   10f6c:	cmp	r0, lr
   10f70:	beq	10c20 <ReadUInt64Data+0x22c0>
   10f74:	ldr	r2, [sp, #24]
   10f78:	ldr	r3, [sp, #8]
   10f7c:	ldr	r7, [sp, #28]
   10f80:	add	r0, sp, #296	; 0x128
   10f84:	add	r0, r0, lr, lsl #1
   10f88:	add	r2, lr, r2
   10f8c:	sub	r3, r3, r7
   10f90:	sub	r3, r3, lr
   10f94:	add	r2, r6, r2, lsl #3
   10f98:	sub	r3, r3, #256	; 0x100
   10f9c:	ldrh	r4, [r0], #2
   10fa0:	subs	r3, r3, #1
   10fa4:	str	r4, [r2]
   10fa8:	str	r1, [r2, #4]
   10fac:	add	r2, r2, #8
   10fb0:	bne	10f9c <ReadUInt64Data+0x263c>
   10fb4:	b	10c20 <ReadUInt64Data+0x22c0>
   10fb8:	mov	r2, #0
   10fbc:	ldr	r0, [sp, #28]
   10fc0:	ldr	r3, [sp, #4]
   10fc4:	mov	r9, sl
   10fc8:	cmp	r0, #0
   10fcc:	beq	11000 <ReadUInt64Data+0x26a0>
   10fd0:	add	r0, sp, #296	; 0x128
   10fd4:	ldr	r1, [r0, r2, lsl #2]
   10fd8:	add	r0, r0, r2, lsl #2
   10fdc:	str	r1, [sp, #64]	; 0x40
   10fe0:	ldr	r0, [r0, #4]
   10fe4:	str	r0, [sp, #68]	; 0x44
   10fe8:	add	r0, sp, #64	; 0x40
   10fec:	vld1.32	{d16}, [r0 :64]
   10ff0:	add	r0, r2, r5
   10ff4:	add	r0, r3, r0, lsl #3
   10ff8:	vmovl.s32	q8, d16
   10ffc:	vst1.64	{d16-d17}, [r0]
   11000:	ldr	r0, [sp, #36]	; 0x24
   11004:	ldr	r4, [sp, #8]
   11008:	ldr	sl, [sp, #32]
   1100c:	ldr	r6, [sp, #20]
   11010:	cmp	r0, lr
   11014:	beq	10c20 <ReadUInt64Data+0x22c0>
   11018:	add	r0, sp, #296	; 0x128
   1101c:	add	r1, r0, lr, lsl #2
   11020:	ldr	r0, [sp, #24]
   11024:	add	r0, lr, r0
   11028:	add	r2, r3, r0, lsl #3
   1102c:	sub	r0, r4, r6
   11030:	sub	r0, r0, lr
   11034:	sub	r0, r0, #256	; 0x100
   11038:	ldr	r4, [r1], #4
   1103c:	subs	r0, r0, #1
   11040:	asr	r5, r4, #31
   11044:	strd	r4, [r2]
   11048:	add	r2, r2, #8
   1104c:	bne	11038 <ReadUInt64Data+0x26d8>
   11050:	b	10c20 <ReadUInt64Data+0x22c0>
   11054:	mov	r3, #0
   11058:	ldr	r0, [sp, #12]
   1105c:	ldr	sl, [sp, #32]
   11060:	ldr	r9, [sp, #28]
   11064:	ldr	r6, [sp, #4]
   11068:	cmp	r0, #0
   1106c:	beq	110a0 <ReadUInt64Data+0x2740>
   11070:	add	r0, sp, #296	; 0x128
   11074:	ldr	r2, [r0, r3, lsl #2]
   11078:	add	r0, r0, r3, lsl #2
   1107c:	str	r2, [sp, #128]	; 0x80
   11080:	ldr	r0, [r0, #4]
   11084:	str	r0, [sp, #132]	; 0x84
   11088:	add	r0, sp, #128	; 0x80
   1108c:	vld1.32	{d16}, [r0 :64]
   11090:	add	r0, r3, r5
   11094:	add	r0, r6, r0, lsl #3
   11098:	vmovl.u32	q8, d16
   1109c:	vst1.64	{d16-d17}, [r0]
   110a0:	ldr	r0, [sp, #36]	; 0x24
   110a4:	cmp	r0, lr
   110a8:	beq	10c20 <ReadUInt64Data+0x22c0>
   110ac:	ldr	r2, [sp, #20]
   110b0:	ldr	r3, [sp, #8]
   110b4:	ldr	r7, [sp, #24]
   110b8:	add	r0, sp, #296	; 0x128
   110bc:	add	r0, r0, lr, lsl #2
   110c0:	add	r2, lr, r2
   110c4:	sub	r3, r3, r7
   110c8:	sub	r3, r3, lr
   110cc:	add	r2, r6, r2, lsl #3
   110d0:	sub	r3, r3, #256	; 0x100
   110d4:	ldr	r4, [r0], #4
   110d8:	subs	r3, r3, #1
   110dc:	str	r4, [r2]
   110e0:	str	r1, [r2, #4]
   110e4:	add	r2, r2, #8
   110e8:	bne	110d4 <ReadUInt64Data+0x2774>
   110ec:	b	10c20 <ReadUInt64Data+0x22c0>

000110f0 <ReadCompressedUInt64Data>:
   110f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110f4:	add	fp, sp, #28
   110f8:	sub	sp, sp, #12
   110fc:	mov	r7, r0
   11100:	mov	r0, #0
   11104:	cmp	r1, #0
   11108:	beq	1111c <ReadCompressedUInt64Data+0x2c>
   1110c:	cmp	r7, #0
   11110:	movne	r5, r2
   11114:	cmpne	r2, #0
   11118:	bne	11124 <ReadCompressedUInt64Data+0x34>
   1111c:	sub	sp, fp, #28
   11120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11124:	ldr	sl, [fp, #8]
   11128:	mov	r0, r3
   1112c:	mov	r4, r3
   11130:	mov	r6, r1
   11134:	bl	1924 <Mat_SizeOf@plt>
   11138:	mov	r9, r0
   1113c:	sub	r0, r4, #1
   11140:	cmp	r0, #12
   11144:	bhi	11588 <ReadCompressedUInt64Data+0x498>
   11148:	add	r1, pc, #4
   1114c:	ldr	r0, [r1, r0, lsl #2]
   11150:	add	pc, r1, r0
   11154:	.word	0x00000034
   11158:	.word	0x00000074
   1115c:	.word	0x000000b4
   11160:	.word	0x00000104
   11164:	.word	0x00000154
   11168:	.word	0x000001a4
   1116c:	.word	0x000001f4
   11170:	.word	0x00000434
   11174:	.word	0x00000248
   11178:	.word	0x00000434
   1117c:	.word	0x00000434
   11180:	.word	0x0000029c
   11184:	.word	0x000002e8
   11188:	cmp	sl, #1
   1118c:	blt	11588 <ReadCompressedUInt64Data+0x498>
   11190:	mov	r8, sp
   11194:	mov	r4, sl
   11198:	mov	r0, r7
   1119c:	mov	r1, r6
   111a0:	mov	r2, r8
   111a4:	mov	r3, r9
   111a8:	bl	3238 <InflateData>
   111ac:	ldrsb	r0, [sp]
   111b0:	subs	r4, r4, #1
   111b4:	asr	r1, r0, #31
   111b8:	strd	r0, [r5]
   111bc:	add	r5, r5, #8
   111c0:	bne	11198 <ReadCompressedUInt64Data+0xa8>
   111c4:	b	11588 <ReadCompressedUInt64Data+0x498>
   111c8:	cmp	sl, #1
   111cc:	blt	11584 <ReadCompressedUInt64Data+0x494>
   111d0:	ldr	r4, [fp, #8]
   111d4:	mov	r8, sp
   111d8:	mov	sl, #0
   111dc:	mov	r0, r7
   111e0:	mov	r1, r6
   111e4:	mov	r2, r8
   111e8:	mov	r3, r9
   111ec:	bl	3238 <InflateData>
   111f0:	ldrb	r0, [sp]
   111f4:	subs	r4, r4, #1
   111f8:	stm	r5, {r0, sl}
   111fc:	add	r5, r5, #8
   11200:	bne	111dc <ReadCompressedUInt64Data+0xec>
   11204:	b	11584 <ReadCompressedUInt64Data+0x494>
   11208:	ldr	r0, [r7, #20]
   1120c:	cmp	r0, #0
   11210:	beq	11488 <ReadCompressedUInt64Data+0x398>
   11214:	cmp	sl, #1
   11218:	blt	11588 <ReadCompressedUInt64Data+0x498>
   1121c:	mov	r8, sp
   11220:	mov	r4, sl
   11224:	mov	r0, r7
   11228:	mov	r1, r6
   1122c:	mov	r2, r8
   11230:	mov	r3, r9
   11234:	bl	3238 <InflateData>
   11238:	mov	r0, r8
   1123c:	bl	1c20 <Mat_int16Swap>
   11240:	asr	r1, r0, #31
   11244:	subs	r4, r4, #1
   11248:	strd	r0, [r5]
   1124c:	add	r5, r5, #8
   11250:	bne	11224 <ReadCompressedUInt64Data+0x134>
   11254:	b	11588 <ReadCompressedUInt64Data+0x498>
   11258:	ldr	r0, [r7, #20]
   1125c:	cmp	r0, #0
   11260:	beq	114c8 <ReadCompressedUInt64Data+0x3d8>
   11264:	cmp	sl, #1
   11268:	blt	11584 <ReadCompressedUInt64Data+0x494>
   1126c:	ldr	r4, [fp, #8]
   11270:	mov	r8, sp
   11274:	mov	sl, #0
   11278:	mov	r0, r7
   1127c:	mov	r1, r6
   11280:	mov	r2, r8
   11284:	mov	r3, r9
   11288:	bl	3238 <InflateData>
   1128c:	mov	r0, r8
   11290:	bl	1c34 <Mat_uint16Swap>
   11294:	stm	r5, {r0, sl}
   11298:	add	r5, r5, #8
   1129c:	subs	r4, r4, #1
   112a0:	bne	11278 <ReadCompressedUInt64Data+0x188>
   112a4:	b	11584 <ReadCompressedUInt64Data+0x494>
   112a8:	ldr	r0, [r7, #20]
   112ac:	cmp	r0, #0
   112b0:	beq	11508 <ReadCompressedUInt64Data+0x418>
   112b4:	cmp	sl, #1
   112b8:	blt	11588 <ReadCompressedUInt64Data+0x498>
   112bc:	mov	r8, sp
   112c0:	mov	r4, sl
   112c4:	mov	r0, r7
   112c8:	mov	r1, r6
   112cc:	mov	r2, r8
   112d0:	mov	r3, r9
   112d4:	bl	3238 <InflateData>
   112d8:	mov	r0, r8
   112dc:	bl	1bf8 <Mat_int32Swap>
   112e0:	asr	r1, r0, #31
   112e4:	subs	r4, r4, #1
   112e8:	strd	r0, [r5]
   112ec:	add	r5, r5, #8
   112f0:	bne	112c4 <ReadCompressedUInt64Data+0x1d4>
   112f4:	b	11588 <ReadCompressedUInt64Data+0x498>
   112f8:	ldr	r0, [r7, #20]
   112fc:	cmp	r0, #0
   11300:	beq	11548 <ReadCompressedUInt64Data+0x458>
   11304:	cmp	sl, #1
   11308:	blt	11584 <ReadCompressedUInt64Data+0x494>
   1130c:	ldr	sl, [fp, #8]
   11310:	mov	r8, sp
   11314:	mov	r4, #0
   11318:	mov	r0, r7
   1131c:	mov	r1, r6
   11320:	mov	r2, r8
   11324:	mov	r3, r9
   11328:	bl	3238 <InflateData>
   1132c:	mov	r0, r8
   11330:	bl	1c0c <Mat_uint32Swap>
   11334:	stm	r5, {r0, r4}
   11338:	add	r5, r5, #8
   1133c:	subs	sl, sl, #1
   11340:	bne	11318 <ReadCompressedUInt64Data+0x228>
   11344:	b	11584 <ReadCompressedUInt64Data+0x494>
   11348:	ldr	r0, [r7, #20]
   1134c:	cmp	r0, #0
   11350:	beq	11594 <ReadCompressedUInt64Data+0x4a4>
   11354:	cmp	sl, #1
   11358:	blt	11588 <ReadCompressedUInt64Data+0x498>
   1135c:	mov	r8, sp
   11360:	mov	r4, sl
   11364:	mov	r0, r7
   11368:	mov	r1, r6
   1136c:	mov	r2, r8
   11370:	mov	r3, r9
   11374:	bl	3238 <InflateData>
   11378:	mov	r0, r8
   1137c:	bl	1c4c <Mat_floatSwap>
   11380:	vmov	r0, s0
   11384:	bl	6b970 <__aeabi_f2ulz>
   11388:	strd	r0, [r5]
   1138c:	add	r5, r5, #8
   11390:	subs	r4, r4, #1
   11394:	bne	11364 <ReadCompressedUInt64Data+0x274>
   11398:	b	11588 <ReadCompressedUInt64Data+0x498>
   1139c:	ldr	r0, [r7, #20]
   113a0:	cmp	r0, #0
   113a4:	beq	115d4 <ReadCompressedUInt64Data+0x4e4>
   113a8:	cmp	sl, #1
   113ac:	blt	11588 <ReadCompressedUInt64Data+0x498>
   113b0:	mov	r8, sp
   113b4:	mov	r4, sl
   113b8:	mov	r0, r7
   113bc:	mov	r1, r6
   113c0:	mov	r2, r8
   113c4:	mov	r3, r9
   113c8:	bl	3238 <InflateData>
   113cc:	mov	r0, r8
   113d0:	bl	1c90 <Mat_doubleSwap>
   113d4:	vmov	r0, r1, d0
   113d8:	bl	6b9b0 <__aeabi_d2ulz>
   113dc:	strd	r0, [r5]
   113e0:	add	r5, r5, #8
   113e4:	subs	r4, r4, #1
   113e8:	bne	113b8 <ReadCompressedUInt64Data+0x2c8>
   113ec:	b	11588 <ReadCompressedUInt64Data+0x498>
   113f0:	ldr	r0, [r7, #20]
   113f4:	cmp	r0, #0
   113f8:	beq	11618 <ReadCompressedUInt64Data+0x528>
   113fc:	cmp	sl, #1
   11400:	blt	11588 <ReadCompressedUInt64Data+0x498>
   11404:	mov	r8, sp
   11408:	mov	r4, sl
   1140c:	mov	r0, r7
   11410:	mov	r1, r6
   11414:	mov	r2, r8
   11418:	mov	r3, r9
   1141c:	bl	3238 <InflateData>
   11420:	mov	r0, r8
   11424:	bl	1b84 <Mat_int64Swap>
   11428:	strd	r0, [r5]
   1142c:	add	r5, r5, #8
   11430:	subs	r4, r4, #1
   11434:	bne	1140c <ReadCompressedUInt64Data+0x31c>
   11438:	b	11588 <ReadCompressedUInt64Data+0x498>
   1143c:	ldr	r0, [r7, #20]
   11440:	cmp	r0, #0
   11444:	beq	11654 <ReadCompressedUInt64Data+0x564>
   11448:	cmp	sl, #1
   1144c:	blt	11588 <ReadCompressedUInt64Data+0x498>
   11450:	mov	r8, sp
   11454:	mov	r4, sl
   11458:	mov	r0, r7
   1145c:	mov	r1, r6
   11460:	mov	r2, r8
   11464:	mov	r3, r9
   11468:	bl	3238 <InflateData>
   1146c:	mov	r0, r8
   11470:	bl	1bd4 <Mat_uint64Swap>
   11474:	strd	r0, [r5]
   11478:	add	r5, r5, #8
   1147c:	subs	r4, r4, #1
   11480:	bne	11458 <ReadCompressedUInt64Data+0x368>
   11484:	b	11588 <ReadCompressedUInt64Data+0x498>
   11488:	cmp	sl, #1
   1148c:	blt	11588 <ReadCompressedUInt64Data+0x498>
   11490:	mov	r8, sp
   11494:	mov	r4, sl
   11498:	mov	r0, r7
   1149c:	mov	r1, r6
   114a0:	mov	r2, r8
   114a4:	mov	r3, r9
   114a8:	bl	3238 <InflateData>
   114ac:	ldrsh	r0, [sp]
   114b0:	subs	r4, r4, #1
   114b4:	asr	r1, r0, #31
   114b8:	strd	r0, [r5]
   114bc:	add	r5, r5, #8
   114c0:	bne	11498 <ReadCompressedUInt64Data+0x3a8>
   114c4:	b	11588 <ReadCompressedUInt64Data+0x498>
   114c8:	cmp	sl, #1
   114cc:	blt	11584 <ReadCompressedUInt64Data+0x494>
   114d0:	ldr	r4, [fp, #8]
   114d4:	mov	r8, sp
   114d8:	mov	sl, #0
   114dc:	mov	r0, r7
   114e0:	mov	r1, r6
   114e4:	mov	r2, r8
   114e8:	mov	r3, r9
   114ec:	bl	3238 <InflateData>
   114f0:	ldrh	r0, [sp]
   114f4:	subs	r4, r4, #1
   114f8:	stm	r5, {r0, sl}
   114fc:	add	r5, r5, #8
   11500:	bne	114dc <ReadCompressedUInt64Data+0x3ec>
   11504:	b	11584 <ReadCompressedUInt64Data+0x494>
   11508:	cmp	sl, #1
   1150c:	blt	11588 <ReadCompressedUInt64Data+0x498>
   11510:	mov	r8, sp
   11514:	mov	r4, sl
   11518:	mov	r0, r7
   1151c:	mov	r1, r6
   11520:	mov	r2, r8
   11524:	mov	r3, r9
   11528:	bl	3238 <InflateData>
   1152c:	ldr	r0, [sp]
   11530:	subs	r4, r4, #1
   11534:	asr	r1, r0, #31
   11538:	strd	r0, [r5]
   1153c:	add	r5, r5, #8
   11540:	bne	11518 <ReadCompressedUInt64Data+0x428>
   11544:	b	11588 <ReadCompressedUInt64Data+0x498>
   11548:	cmp	sl, #1
   1154c:	blt	11584 <ReadCompressedUInt64Data+0x494>
   11550:	ldr	r4, [fp, #8]
   11554:	mov	r8, sp
   11558:	mov	sl, #0
   1155c:	mov	r0, r7
   11560:	mov	r1, r6
   11564:	mov	r2, r8
   11568:	mov	r3, r9
   1156c:	bl	3238 <InflateData>
   11570:	ldr	r0, [sp]
   11574:	subs	r4, r4, #1
   11578:	stm	r5, {r0, sl}
   1157c:	add	r5, r5, #8
   11580:	bne	1155c <ReadCompressedUInt64Data+0x46c>
   11584:	ldr	sl, [fp, #8]
   11588:	mul	r0, r9, sl
   1158c:	sub	sp, fp, #28
   11590:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11594:	cmp	sl, #1
   11598:	blt	11588 <ReadCompressedUInt64Data+0x498>
   1159c:	mov	r8, sp
   115a0:	mov	r4, sl
   115a4:	mov	r0, r7
   115a8:	mov	r1, r6
   115ac:	mov	r2, r8
   115b0:	mov	r3, r9
   115b4:	bl	3238 <InflateData>
   115b8:	ldr	r0, [sp]
   115bc:	bl	6b970 <__aeabi_f2ulz>
   115c0:	strd	r0, [r5]
   115c4:	add	r5, r5, #8
   115c8:	subs	r4, r4, #1
   115cc:	bne	115a4 <ReadCompressedUInt64Data+0x4b4>
   115d0:	b	11588 <ReadCompressedUInt64Data+0x498>
   115d4:	cmp	sl, #1
   115d8:	blt	11588 <ReadCompressedUInt64Data+0x498>
   115dc:	mov	r8, sp
   115e0:	mov	r4, sl
   115e4:	mov	r0, r7
   115e8:	mov	r1, r6
   115ec:	mov	r2, r8
   115f0:	mov	r3, r9
   115f4:	bl	3238 <InflateData>
   115f8:	vldr	d16, [sp]
   115fc:	vmov	r0, r1, d16
   11600:	bl	6b9b0 <__aeabi_d2ulz>
   11604:	strd	r0, [r5]
   11608:	add	r5, r5, #8
   1160c:	subs	r4, r4, #1
   11610:	bne	115e4 <ReadCompressedUInt64Data+0x4f4>
   11614:	b	11588 <ReadCompressedUInt64Data+0x498>
   11618:	cmp	sl, #1
   1161c:	blt	11588 <ReadCompressedUInt64Data+0x498>
   11620:	mov	r8, sp
   11624:	mov	r4, sl
   11628:	mov	r0, r7
   1162c:	mov	r1, r6
   11630:	mov	r2, r8
   11634:	mov	r3, r9
   11638:	bl	3238 <InflateData>
   1163c:	ldm	sp, {r0, r1}
   11640:	subs	r4, r4, #1
   11644:	strd	r0, [r5]
   11648:	add	r5, r5, #8
   1164c:	bne	11628 <ReadCompressedUInt64Data+0x538>
   11650:	b	11588 <ReadCompressedUInt64Data+0x498>
   11654:	cmp	sl, #1
   11658:	blt	11588 <ReadCompressedUInt64Data+0x498>
   1165c:	mov	r8, sp
   11660:	mov	r4, sl
   11664:	mov	r0, r7
   11668:	mov	r1, r6
   1166c:	mov	r2, r8
   11670:	mov	r3, r9
   11674:	bl	3238 <InflateData>
   11678:	ldm	sp, {r0, r1}
   1167c:	subs	r4, r4, #1
   11680:	strd	r0, [r5]
   11684:	add	r5, r5, #8
   11688:	bne	11664 <ReadCompressedUInt64Data+0x574>
   1168c:	b	11588 <ReadCompressedUInt64Data+0x498>

00011690 <ReadInt32Data>:
   11690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11694:	add	fp, sp, #28
   11698:	sub	sp, sp, #252	; 0xfc
   1169c:	sub	sp, sp, #2048	; 0x800
   116a0:	mov	r4, r0
   116a4:	mov	r0, #0
   116a8:	cmp	r4, #0
   116ac:	movne	sl, r1
   116b0:	cmpne	r1, #0
   116b4:	bne	116c0 <ReadInt32Data+0x30>
   116b8:	sub	sp, fp, #28
   116bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116c0:	ldr	r1, [r4]
   116c4:	cmp	r1, #0
   116c8:	beq	116b8 <ReadInt32Data+0x28>
   116cc:	mov	r0, r2
   116d0:	mov	r7, r3
   116d4:	mov	r5, r2
   116d8:	bl	1924 <Mat_SizeOf@plt>
   116dc:	mov	r8, r0
   116e0:	sub	r0, r5, #1
   116e4:	mov	r9, #0
   116e8:	str	r4, [sp, #36]	; 0x24
   116ec:	cmp	r0, #11
   116f0:	bhi	139d4 <ReadInt32Data+0x2344>
   116f4:	add	r1, pc, #4
   116f8:	ldr	r0, [r1, r0, lsl #2]
   116fc:	add	pc, r1, r0
   11700:	.word	0x00000030
   11704:	.word	0x000001c0
   11708:	.word	0x00000350
   1170c:	.word	0x000003a4
   11710:	.word	0x000003f8
   11714:	.word	0x0000044c
   11718:	.word	0x000004a0
   1171c:	.word	0x000022d4
   11720:	.word	0x000004fc
   11724:	.word	0x000022d4
   11728:	.word	0x000022d4
   1172c:	.word	0x00000558
   11730:	cmp	r7, #256	; 0x100
   11734:	bgt	11cb8 <ReadInt32Data+0x628>
   11738:	ldr	r3, [r4]
   1173c:	add	r4, sp, #248	; 0xf8
   11740:	mov	r1, r8
   11744:	mov	r2, r7
   11748:	mov	r0, r4
   1174c:	bl	18b8 <fread@plt>
   11750:	mov	r9, r0
   11754:	cmp	r7, #1
   11758:	blt	13e00 <ReadInt32Data+0x2770>
   1175c:	mov	r2, #0
   11760:	cmp	r7, #4
   11764:	bcc	118a0 <ReadInt32Data+0x210>
   11768:	bic	r0, r7, #3
   1176c:	str	sl, [sp, #4]
   11770:	str	r9, [sp, #28]
   11774:	str	r8, [sp, #32]
   11778:	str	r7, [sp, #12]
   1177c:	sub	r1, r0, #4
   11780:	str	r0, [sp, #24]
   11784:	mov	r0, #1
   11788:	add	r0, r0, r1, lsr #2
   1178c:	cmp	r1, #12
   11790:	and	r2, r0, #3
   11794:	str	r2, [sp, #36]	; 0x24
   11798:	mov	r2, #0
   1179c:	bcc	11848 <ReadInt32Data+0x1b8>
   117a0:	ldr	r1, [sp, #36]	; 0x24
   117a4:	ldr	r6, [sp, #4]
   117a8:	mov	r2, #0
   117ac:	add	r8, sp, #172	; 0xac
   117b0:	mov	r9, #64	; 0x40
   117b4:	add	sl, sp, #176	; 0xb0
   117b8:	add	lr, sp, #180	; 0xb4
   117bc:	sub	r3, r0, r1
   117c0:	add	r0, sp, #184	; 0xb8
   117c4:	mov	r7, r6
   117c8:	ldr	r5, [r4, r2]
   117cc:	add	r1, r6, #16
   117d0:	subs	r3, r3, #4
   117d4:	str	r5, [sp, #172]	; 0xac
   117d8:	add	r5, r4, r2
   117dc:	add	r2, r2, #16
   117e0:	vld1.32	{d16[0]}, [r8 :32]
   117e4:	vmovl.s8	q8, d16
   117e8:	vmovl.s16	q8, d16
   117ec:	vst1.32	{d16-d17}, [r7], r9
   117f0:	ldr	ip, [r5, #4]
   117f4:	str	ip, [sp, #176]	; 0xb0
   117f8:	vld1.32	{d16[0]}, [sl :32]
   117fc:	vmovl.s8	q8, d16
   11800:	vmovl.s16	q8, d16
   11804:	vst1.32	{d16-d17}, [r1]
   11808:	ldr	r1, [r5, #8]
   1180c:	str	r1, [sp, #180]	; 0xb4
   11810:	add	r1, r6, #32
   11814:	vld1.32	{d16[0]}, [lr :32]
   11818:	vmovl.s8	q8, d16
   1181c:	vmovl.s16	q8, d16
   11820:	vst1.32	{d16-d17}, [r1]
   11824:	ldr	r1, [r5, #12]
   11828:	str	r1, [sp, #184]	; 0xb8
   1182c:	add	r1, r6, #48	; 0x30
   11830:	mov	r6, r7
   11834:	vld1.32	{d16[0]}, [r0 :32]
   11838:	vmovl.s8	q8, d16
   1183c:	vmovl.s16	q8, d16
   11840:	vst1.32	{d16-d17}, [r1]
   11844:	bne	117c8 <ReadInt32Data+0x138>
   11848:	ldr	r3, [sp, #36]	; 0x24
   1184c:	ldr	sl, [sp, #4]
   11850:	cmp	r3, #0
   11854:	beq	11888 <ReadInt32Data+0x1f8>
   11858:	add	r1, sl, r2, lsl #2
   1185c:	add	r0, r4, r2
   11860:	rsb	r2, r3, #0
   11864:	add	r3, sp, #168	; 0xa8
   11868:	ldr	r7, [r0], #4
   1186c:	adds	r2, r2, #1
   11870:	str	r7, [sp, #168]	; 0xa8
   11874:	vld1.32	{d16[0]}, [r3 :32]
   11878:	vmovl.s8	q8, d16
   1187c:	vmovl.s16	q8, d16
   11880:	vst1.32	{d16-d17}, [r1]!
   11884:	bcc	11868 <ReadInt32Data+0x1d8>
   11888:	ldr	r7, [sp, #12]
   1188c:	ldr	r2, [sp, #24]
   11890:	ldr	r8, [sp, #32]
   11894:	ldr	r9, [sp, #28]
   11898:	cmp	r2, r7
   1189c:	beq	13e00 <ReadInt32Data+0x2770>
   118a0:	add	r1, sl, r2, lsl #2
   118a4:	add	r0, r4, r2
   118a8:	sub	r2, r7, r2
   118ac:	ldrsb	r3, [r0], #1
   118b0:	subs	r2, r2, #1
   118b4:	str	r3, [r1], #4
   118b8:	bne	118ac <ReadInt32Data+0x21c>
   118bc:	b	13e00 <ReadInt32Data+0x2770>
   118c0:	cmp	r7, #256	; 0x100
   118c4:	bgt	11e74 <ReadInt32Data+0x7e4>
   118c8:	ldr	r3, [r4]
   118cc:	add	r4, sp, #248	; 0xf8
   118d0:	mov	r1, r8
   118d4:	mov	r2, r7
   118d8:	mov	r0, r4
   118dc:	bl	18b8 <fread@plt>
   118e0:	mov	r9, r0
   118e4:	cmp	r7, #1
   118e8:	blt	13e00 <ReadInt32Data+0x2770>
   118ec:	mov	r2, #0
   118f0:	cmp	r7, #4
   118f4:	bcc	11a30 <ReadInt32Data+0x3a0>
   118f8:	bic	r0, r7, #3
   118fc:	str	sl, [sp, #4]
   11900:	str	r9, [sp, #28]
   11904:	str	r8, [sp, #32]
   11908:	str	r7, [sp, #12]
   1190c:	sub	r1, r0, #4
   11910:	str	r0, [sp, #24]
   11914:	mov	r0, #1
   11918:	add	r0, r0, r1, lsr #2
   1191c:	cmp	r1, #12
   11920:	and	r2, r0, #3
   11924:	str	r2, [sp, #36]	; 0x24
   11928:	mov	r2, #0
   1192c:	bcc	119d8 <ReadInt32Data+0x348>
   11930:	ldr	r1, [sp, #36]	; 0x24
   11934:	ldr	r6, [sp, #4]
   11938:	mov	r2, #0
   1193c:	add	r8, sp, #212	; 0xd4
   11940:	mov	r9, #64	; 0x40
   11944:	add	sl, sp, #216	; 0xd8
   11948:	add	lr, sp, #220	; 0xdc
   1194c:	sub	r3, r0, r1
   11950:	add	r0, sp, #224	; 0xe0
   11954:	mov	r7, r6
   11958:	ldr	r5, [r4, r2]
   1195c:	add	r1, r6, #16
   11960:	subs	r3, r3, #4
   11964:	str	r5, [sp, #212]	; 0xd4
   11968:	add	r5, r4, r2
   1196c:	add	r2, r2, #16
   11970:	vld1.32	{d16[0]}, [r8 :32]
   11974:	vmovl.u8	q8, d16
   11978:	vmovl.u16	q8, d16
   1197c:	vst1.32	{d16-d17}, [r7], r9
   11980:	ldr	ip, [r5, #4]
   11984:	str	ip, [sp, #216]	; 0xd8
   11988:	vld1.32	{d16[0]}, [sl :32]
   1198c:	vmovl.u8	q8, d16
   11990:	vmovl.u16	q8, d16
   11994:	vst1.32	{d16-d17}, [r1]
   11998:	ldr	r1, [r5, #8]
   1199c:	str	r1, [sp, #220]	; 0xdc
   119a0:	add	r1, r6, #32
   119a4:	vld1.32	{d16[0]}, [lr :32]
   119a8:	vmovl.u8	q8, d16
   119ac:	vmovl.u16	q8, d16
   119b0:	vst1.32	{d16-d17}, [r1]
   119b4:	ldr	r1, [r5, #12]
   119b8:	str	r1, [sp, #224]	; 0xe0
   119bc:	add	r1, r6, #48	; 0x30
   119c0:	mov	r6, r7
   119c4:	vld1.32	{d16[0]}, [r0 :32]
   119c8:	vmovl.u8	q8, d16
   119cc:	vmovl.u16	q8, d16
   119d0:	vst1.32	{d16-d17}, [r1]
   119d4:	bne	11958 <ReadInt32Data+0x2c8>
   119d8:	ldr	r3, [sp, #36]	; 0x24
   119dc:	ldr	sl, [sp, #4]
   119e0:	cmp	r3, #0
   119e4:	beq	11a18 <ReadInt32Data+0x388>
   119e8:	add	r1, sl, r2, lsl #2
   119ec:	add	r0, r4, r2
   119f0:	rsb	r2, r3, #0
   119f4:	add	r3, sp, #208	; 0xd0
   119f8:	ldr	r7, [r0], #4
   119fc:	adds	r2, r2, #1
   11a00:	str	r7, [sp, #208]	; 0xd0
   11a04:	vld1.32	{d16[0]}, [r3 :32]
   11a08:	vmovl.u8	q8, d16
   11a0c:	vmovl.u16	q8, d16
   11a10:	vst1.32	{d16-d17}, [r1]!
   11a14:	bcc	119f8 <ReadInt32Data+0x368>
   11a18:	ldr	r7, [sp, #12]
   11a1c:	ldr	r2, [sp, #24]
   11a20:	ldr	r8, [sp, #32]
   11a24:	ldr	r9, [sp, #28]
   11a28:	cmp	r2, r7
   11a2c:	beq	13e00 <ReadInt32Data+0x2770>
   11a30:	add	r1, sl, r2, lsl #2
   11a34:	add	r0, r4, r2
   11a38:	sub	r2, r7, r2
   11a3c:	ldrb	r3, [r0], #1
   11a40:	subs	r2, r2, #1
   11a44:	str	r3, [r1], #4
   11a48:	bne	11a3c <ReadInt32Data+0x3ac>
   11a4c:	b	13e00 <ReadInt32Data+0x2770>
   11a50:	ldr	r0, [r4, #20]
   11a54:	cmp	r0, #0
   11a58:	beq	1203c <ReadInt32Data+0x9ac>
   11a5c:	cmp	r7, #256	; 0x100
   11a60:	bgt	12464 <ReadInt32Data+0xdd4>
   11a64:	ldr	r3, [r4]
   11a68:	add	r4, sp, #248	; 0xf8
   11a6c:	mov	r1, r8
   11a70:	mov	r2, r7
   11a74:	mov	r0, r4
   11a78:	bl	18b8 <fread@plt>
   11a7c:	mov	r9, r0
   11a80:	cmp	r7, #1
   11a84:	blt	13e00 <ReadInt32Data+0x2770>
   11a88:	mov	r0, r4
   11a8c:	bl	1c20 <Mat_int16Swap>
   11a90:	str	r0, [sl], #4
   11a94:	add	r4, r4, #2
   11a98:	subs	r7, r7, #1
   11a9c:	bne	11a88 <ReadInt32Data+0x3f8>
   11aa0:	b	13e00 <ReadInt32Data+0x2770>
   11aa4:	ldr	r0, [r4, #20]
   11aa8:	cmp	r0, #0
   11aac:	beq	12100 <ReadInt32Data+0xa70>
   11ab0:	cmp	r7, #256	; 0x100
   11ab4:	bgt	12540 <ReadInt32Data+0xeb0>
   11ab8:	ldr	r3, [r4]
   11abc:	add	r4, sp, #248	; 0xf8
   11ac0:	mov	r1, r8
   11ac4:	mov	r2, r7
   11ac8:	mov	r0, r4
   11acc:	bl	18b8 <fread@plt>
   11ad0:	mov	r9, r0
   11ad4:	cmp	r7, #1
   11ad8:	blt	13e00 <ReadInt32Data+0x2770>
   11adc:	mov	r0, r4
   11ae0:	bl	1c34 <Mat_uint16Swap>
   11ae4:	str	r0, [sl], #4
   11ae8:	add	r4, r4, #2
   11aec:	subs	r7, r7, #1
   11af0:	bne	11adc <ReadInt32Data+0x44c>
   11af4:	b	13e00 <ReadInt32Data+0x2770>
   11af8:	ldr	r0, [r4, #20]
   11afc:	cmp	r0, #0
   11b00:	beq	121c4 <ReadInt32Data+0xb34>
   11b04:	cmp	r7, #256	; 0x100
   11b08:	bgt	1261c <ReadInt32Data+0xf8c>
   11b0c:	ldr	r3, [r4]
   11b10:	add	r4, sp, #248	; 0xf8
   11b14:	mov	r1, r8
   11b18:	mov	r2, r7
   11b1c:	mov	r0, r4
   11b20:	bl	18b8 <fread@plt>
   11b24:	mov	r9, r0
   11b28:	cmp	r7, #1
   11b2c:	blt	13e00 <ReadInt32Data+0x2770>
   11b30:	mov	r0, r4
   11b34:	bl	1bf8 <Mat_int32Swap>
   11b38:	str	r0, [sl], #4
   11b3c:	add	r4, r4, #4
   11b40:	subs	r7, r7, #1
   11b44:	bne	11b30 <ReadInt32Data+0x4a0>
   11b48:	b	13e00 <ReadInt32Data+0x2770>
   11b4c:	ldr	r0, [r4, #20]
   11b50:	cmp	r0, #0
   11b54:	beq	12230 <ReadInt32Data+0xba0>
   11b58:	cmp	r7, #256	; 0x100
   11b5c:	bgt	126f8 <ReadInt32Data+0x1068>
   11b60:	ldr	r3, [r4]
   11b64:	add	r4, sp, #248	; 0xf8
   11b68:	mov	r1, r8
   11b6c:	mov	r2, r7
   11b70:	mov	r0, r4
   11b74:	bl	18b8 <fread@plt>
   11b78:	mov	r9, r0
   11b7c:	cmp	r7, #1
   11b80:	blt	13e00 <ReadInt32Data+0x2770>
   11b84:	mov	r0, r4
   11b88:	bl	1c0c <Mat_uint32Swap>
   11b8c:	str	r0, [sl], #4
   11b90:	add	r4, r4, #4
   11b94:	subs	r7, r7, #1
   11b98:	bne	11b84 <ReadInt32Data+0x4f4>
   11b9c:	b	13e00 <ReadInt32Data+0x2770>
   11ba0:	ldr	r0, [r4, #20]
   11ba4:	cmp	r0, #0
   11ba8:	beq	1226c <ReadInt32Data+0xbdc>
   11bac:	cmp	r7, #256	; 0x100
   11bb0:	bgt	127e0 <ReadInt32Data+0x1150>
   11bb4:	ldr	r3, [r4]
   11bb8:	add	r4, sp, #248	; 0xf8
   11bbc:	mov	r1, r8
   11bc0:	mov	r2, r7
   11bc4:	mov	r0, r4
   11bc8:	bl	18b8 <fread@plt>
   11bcc:	mov	r9, r0
   11bd0:	cmp	r7, #1
   11bd4:	blt	13e00 <ReadInt32Data+0x2770>
   11bd8:	mov	r0, r4
   11bdc:	bl	1c4c <Mat_floatSwap>
   11be0:	vcvt.s32.f32	s0, s0
   11be4:	add	r4, r4, #4
   11be8:	subs	r7, r7, #1
   11bec:	vmov	r0, s0
   11bf0:	str	r0, [sl], #4
   11bf4:	bne	11bd8 <ReadInt32Data+0x548>
   11bf8:	b	13e00 <ReadInt32Data+0x2770>
   11bfc:	ldr	r0, [r4, #20]
   11c00:	cmp	r0, #0
   11c04:	beq	122fc <ReadInt32Data+0xc6c>
   11c08:	cmp	r7, #256	; 0x100
   11c0c:	bgt	128cc <ReadInt32Data+0x123c>
   11c10:	ldr	r3, [r4]
   11c14:	add	r4, sp, #248	; 0xf8
   11c18:	mov	r1, r8
   11c1c:	mov	r2, r7
   11c20:	mov	r0, r4
   11c24:	bl	18b8 <fread@plt>
   11c28:	mov	r9, r0
   11c2c:	cmp	r7, #1
   11c30:	blt	13e00 <ReadInt32Data+0x2770>
   11c34:	mov	r0, r4
   11c38:	bl	1c90 <Mat_doubleSwap>
   11c3c:	vcvt.s32.f64	s0, d0
   11c40:	add	r4, r4, #8
   11c44:	subs	r7, r7, #1
   11c48:	vmov	r0, s0
   11c4c:	str	r0, [sl], #4
   11c50:	bne	11c34 <ReadInt32Data+0x5a4>
   11c54:	b	13e00 <ReadInt32Data+0x2770>
   11c58:	ldr	r0, [r4, #20]
   11c5c:	cmp	r0, #0
   11c60:	beq	123c8 <ReadInt32Data+0xd38>
   11c64:	cmp	r7, #256	; 0x100
   11c68:	bgt	129b8 <ReadInt32Data+0x1328>
   11c6c:	ldr	r3, [r4]
   11c70:	add	r6, sp, #248	; 0xf8
   11c74:	mov	r1, r8
   11c78:	mov	r2, r7
   11c7c:	mov	r0, r6
   11c80:	bl	18b8 <fread@plt>
   11c84:	mov	r9, r0
   11c88:	cmp	r7, #1
   11c8c:	blt	139d4 <ReadInt32Data+0x2344>
   11c90:	str	r5, [sp, #20]
   11c94:	mov	r4, sl
   11c98:	mov	r5, r7
   11c9c:	mov	r0, r6
   11ca0:	bl	1b84 <Mat_int64Swap>
   11ca4:	str	r0, [r4], #4
   11ca8:	add	r6, r6, #8
   11cac:	subs	r5, r5, #1
   11cb0:	bne	11c9c <ReadInt32Data+0x60c>
   11cb4:	b	139cc <ReadInt32Data+0x233c>
   11cb8:	sub	r1, r7, #256	; 0x100
   11cbc:	str	r8, [sp, #32]
   11cc0:	str	r7, [sp, #12]
   11cc4:	add	r0, sl, #1024	; 0x400
   11cc8:	mov	r7, #0
   11ccc:	add	r6, sp, #248	; 0xf8
   11cd0:	add	r8, sp, #200	; 0xc8
   11cd4:	mov	r5, #32
   11cd8:	add	r4, sp, #204	; 0xcc
   11cdc:	str	sl, [sp, #4]
   11ce0:	mov	r9, sl
   11ce4:	mov	sl, #0
   11ce8:	str	r1, [sp, #16]
   11cec:	mov	r1, #256	; 0x100
   11cf0:	add	r2, sp, #20
   11cf4:	stm	r2, {r0, r1, r7}
   11cf8:	ldr	r0, [sp, #36]	; 0x24
   11cfc:	ldr	r1, [sp, #32]
   11d00:	mov	r2, #256	; 0x100
   11d04:	ldr	r3, [r0]
   11d08:	mov	r0, r6
   11d0c:	bl	18b8 <fread@plt>
   11d10:	mov	r1, r9
   11d14:	mov	r2, #0
   11d18:	ldr	r3, [r6, r2]
   11d1c:	add	r7, r6, r2
   11d20:	add	r2, r2, #8
   11d24:	cmp	r2, #256	; 0x100
   11d28:	str	r3, [sp, #200]	; 0xc8
   11d2c:	add	r3, r1, #16
   11d30:	vld1.32	{d16[0]}, [r8 :32]
   11d34:	vmovl.s8	q8, d16
   11d38:	vmovl.s16	q8, d16
   11d3c:	vst1.32	{d16-d17}, [r1], r5
   11d40:	ldr	r7, [r7, #4]
   11d44:	str	r7, [sp, #204]	; 0xcc
   11d48:	vld1.32	{d16[0]}, [r4 :32]
   11d4c:	vmovl.s8	q8, d16
   11d50:	vmovl.s16	q8, d16
   11d54:	vst1.32	{d16-d17}, [r3]
   11d58:	bne	11d18 <ReadInt32Data+0x688>
   11d5c:	ldr	r2, [sp, #28]
   11d60:	ldr	r1, [sp, #24]
   11d64:	add	sl, r0, sl
   11d68:	ldr	r0, [sp, #20]
   11d6c:	add	r9, r9, #1024	; 0x400
   11d70:	add	r7, r2, #256	; 0x100
   11d74:	ldr	r2, [sp, #16]
   11d78:	add	r0, r0, #1024	; 0x400
   11d7c:	add	r1, r1, #256	; 0x100
   11d80:	cmp	r7, r2
   11d84:	blt	11cf0 <ReadInt32Data+0x660>
   11d88:	ldr	r4, [sp, #12]
   11d8c:	cmp	r7, r4
   11d90:	bge	12ab4 <ReadInt32Data+0x1424>
   11d94:	ldr	r0, [sp, #36]	; 0x24
   11d98:	ldr	r1, [sp, #32]
   11d9c:	sub	r5, r4, r7
   11da0:	add	r6, sp, #248	; 0xf8
   11da4:	mov	r2, r5
   11da8:	ldr	r3, [r0]
   11dac:	mov	r0, r6
   11db0:	bl	18b8 <fread@plt>
   11db4:	mov	r9, sl
   11db8:	add	r9, r0, sl
   11dbc:	cmp	r5, #1
   11dc0:	blt	13dfc <ReadInt32Data+0x276c>
   11dc4:	ldr	sl, [sp, #4]
   11dc8:	mov	lr, #0
   11dcc:	cmp	r5, #4
   11dd0:	bcc	1344c <ReadInt32Data+0x1dbc>
   11dd4:	bic	lr, r5, #3
   11dd8:	mov	r2, #1
   11ddc:	str	r5, [sp, #36]	; 0x24
   11de0:	subs	r1, lr, #4
   11de4:	add	r1, r2, r1, lsr #2
   11de8:	and	r0, r1, #1
   11dec:	str	r0, [sp, #16]
   11df0:	beq	13408 <ReadInt32Data+0x1d78>
   11df4:	ldr	r0, [sp, #28]
   11df8:	ldr	ip, [sp, #20]
   11dfc:	add	r8, sp, #192	; 0xc0
   11e00:	mov	r5, #32
   11e04:	sub	r3, r4, r0
   11e08:	add	r4, sp, #196	; 0xc4
   11e0c:	sub	r3, r3, #256	; 0x100
   11e10:	bic	r3, r3, #3
   11e14:	sub	r3, r3, #4
   11e18:	add	r2, r2, r3, lsr #2
   11e1c:	mvn	r0, r3, lsr #2
   11e20:	and	r2, r2, #1
   11e24:	add	r3, r0, r2
   11e28:	mov	r2, #0
   11e2c:	ldr	r1, [r6, r2]
   11e30:	add	r0, r6, r2
   11e34:	adds	r3, r3, #2
   11e38:	add	r2, r2, #8
   11e3c:	str	r1, [sp, #192]	; 0xc0
   11e40:	add	r1, ip, #16
   11e44:	vld1.32	{d16[0]}, [r8 :32]
   11e48:	vmovl.s8	q8, d16
   11e4c:	vmovl.s16	q8, d16
   11e50:	vst1.32	{d16-d17}, [ip], r5
   11e54:	ldr	r0, [r0, #4]
   11e58:	str	r0, [sp, #196]	; 0xc4
   11e5c:	vld1.32	{d16[0]}, [r4 :32]
   11e60:	vmovl.s8	q8, d16
   11e64:	vmovl.s16	q8, d16
   11e68:	vst1.32	{d16-d17}, [r1]
   11e6c:	bne	11e2c <ReadInt32Data+0x79c>
   11e70:	b	1340c <ReadInt32Data+0x1d7c>
   11e74:	sub	r1, r7, #256	; 0x100
   11e78:	str	r8, [sp, #32]
   11e7c:	str	r7, [sp, #12]
   11e80:	mov	r8, sl
   11e84:	add	r0, sl, #1024	; 0x400
   11e88:	mov	r2, #0
   11e8c:	mov	r9, #0
   11e90:	add	r6, sp, #248	; 0xf8
   11e94:	add	r7, sp, #240	; 0xf0
   11e98:	mov	sl, #32
   11e9c:	add	r5, sp, #244	; 0xf4
   11ea0:	str	r1, [sp, #16]
   11ea4:	mov	r1, #256	; 0x100
   11ea8:	str	r8, [sp, #4]
   11eac:	str	r2, [sp, #28]
   11eb0:	str	r1, [sp, #24]
   11eb4:	ldr	r3, [r4]
   11eb8:	ldr	r1, [sp, #32]
   11ebc:	str	r0, [sp, #20]
   11ec0:	mov	r0, r6
   11ec4:	mov	r2, #256	; 0x100
   11ec8:	bl	18b8 <fread@plt>
   11ecc:	mov	r1, r8
   11ed0:	mov	r2, #0
   11ed4:	ldr	r3, [r6, r2]
   11ed8:	add	r4, r6, r2
   11edc:	add	r2, r2, #8
   11ee0:	cmp	r2, #256	; 0x100
   11ee4:	str	r3, [sp, #240]	; 0xf0
   11ee8:	add	r3, r1, #16
   11eec:	vld1.32	{d16[0]}, [r7 :32]
   11ef0:	vmovl.u8	q8, d16
   11ef4:	vmovl.u16	q8, d16
   11ef8:	vst1.32	{d16-d17}, [r1], sl
   11efc:	ldr	r4, [r4, #4]
   11f00:	str	r4, [sp, #244]	; 0xf4
   11f04:	vld1.32	{d16[0]}, [r5 :32]
   11f08:	vmovl.u8	q8, d16
   11f0c:	vmovl.u16	q8, d16
   11f10:	vst1.32	{d16-d17}, [r3]
   11f14:	bne	11ed4 <ReadInt32Data+0x844>
   11f18:	ldr	r1, [sp, #28]
   11f1c:	ldr	r3, [sp, #16]
   11f20:	ldr	r4, [sp, #36]	; 0x24
   11f24:	mov	r2, r9
   11f28:	add	r9, r9, #256	; 0x100
   11f2c:	add	r8, r8, #1024	; 0x400
   11f30:	add	r1, r0, r1
   11f34:	ldr	r0, [sp, #20]
   11f38:	cmp	r9, r3
   11f3c:	str	r1, [sp, #28]
   11f40:	ldr	r1, [sp, #24]
   11f44:	add	r0, r0, #1024	; 0x400
   11f48:	add	r1, r1, #256	; 0x100
   11f4c:	blt	11eb0 <ReadInt32Data+0x820>
   11f50:	ldr	r8, [sp, #12]
   11f54:	cmp	r9, r8
   11f58:	bge	12e80 <ReadInt32Data+0x17f0>
   11f5c:	ldr	r3, [r4]
   11f60:	ldr	r1, [sp, #32]
   11f64:	add	r6, sp, #248	; 0xf8
   11f68:	sub	r5, r8, r9
   11f6c:	mov	sl, r2
   11f70:	mov	r0, r6
   11f74:	mov	r2, r5
   11f78:	bl	18b8 <fread@plt>
   11f7c:	ldr	r1, [sp, #28]
   11f80:	cmp	r5, #1
   11f84:	add	r1, r0, r1
   11f88:	str	r1, [sp, #28]
   11f8c:	blt	134f0 <ReadInt32Data+0x1e60>
   11f90:	ldr	r3, [sp, #4]
   11f94:	mov	lr, #0
   11f98:	cmp	r5, #4
   11f9c:	bcc	134c4 <ReadInt32Data+0x1e34>
   11fa0:	bic	lr, r5, #3
   11fa4:	mov	r2, #1
   11fa8:	str	r5, [sp, #36]	; 0x24
   11fac:	subs	r1, lr, #4
   11fb0:	add	r1, r2, r1, lsr #2
   11fb4:	and	r0, r1, #1
   11fb8:	str	r0, [sp, #16]
   11fbc:	beq	13480 <ReadInt32Data+0x1df0>
   11fc0:	sub	r3, r8, sl
   11fc4:	ldr	ip, [sp, #20]
   11fc8:	mov	r5, #32
   11fcc:	add	r4, sp, #236	; 0xec
   11fd0:	sub	r3, r3, #256	; 0x100
   11fd4:	bic	r3, r3, #3
   11fd8:	sub	r3, r3, #4
   11fdc:	add	r2, r2, r3, lsr #2
   11fe0:	mvn	r7, r3, lsr #2
   11fe4:	and	r2, r2, #1
   11fe8:	add	r3, r7, r2
   11fec:	mov	r2, #0
   11ff0:	add	r7, sp, #232	; 0xe8
   11ff4:	ldr	r1, [r6, r2]
   11ff8:	add	r0, r6, r2
   11ffc:	adds	r3, r3, #2
   12000:	add	r2, r2, #8
   12004:	str	r1, [sp, #232]	; 0xe8
   12008:	add	r1, ip, #16
   1200c:	vld1.32	{d16[0]}, [r7 :32]
   12010:	vmovl.u8	q8, d16
   12014:	vmovl.u16	q8, d16
   12018:	vst1.32	{d16-d17}, [ip], r5
   1201c:	ldr	r0, [r0, #4]
   12020:	str	r0, [sp, #236]	; 0xec
   12024:	vld1.32	{d16[0]}, [r4 :32]
   12028:	vmovl.u8	q8, d16
   1202c:	vmovl.u16	q8, d16
   12030:	vst1.32	{d16-d17}, [r1]
   12034:	bne	11ff4 <ReadInt32Data+0x964>
   12038:	b	13484 <ReadInt32Data+0x1df4>
   1203c:	cmp	r7, #256	; 0x100
   12040:	bgt	12ac0 <ReadInt32Data+0x1430>
   12044:	ldr	r3, [r4]
   12048:	add	r4, sp, #248	; 0xf8
   1204c:	mov	r1, r8
   12050:	mov	r2, r7
   12054:	mov	r0, r4
   12058:	bl	18b8 <fread@plt>
   1205c:	mov	r9, r0
   12060:	cmp	r7, #1
   12064:	blt	13e00 <ReadInt32Data+0x2770>
   12068:	mov	lr, #0
   1206c:	cmp	r7, #4
   12070:	bcc	13544 <ReadInt32Data+0x1eb4>
   12074:	bic	lr, r7, #3
   12078:	mov	r2, #1
   1207c:	str	r7, [sp, #12]
   12080:	str	r8, [sp, #32]
   12084:	str	r9, [sp, #28]
   12088:	subs	r1, lr, #4
   1208c:	add	r1, r2, r1, lsr #2
   12090:	and	ip, r1, #1
   12094:	beq	134f8 <ReadInt32Data+0x1e68>
   12098:	sub	r3, r1, ip
   1209c:	mov	r1, #0
   120a0:	add	r8, sp, #48	; 0x30
   120a4:	mov	r9, #32
   120a8:	add	r5, sp, #56	; 0x38
   120ac:	mov	r2, sl
   120b0:	ldr	r0, [r4]
   120b4:	ldr	r7, [r4, #4]
   120b8:	subs	r3, r3, #2
   120bc:	add	r1, r1, #8
   120c0:	str	r0, [sp, #48]	; 0x30
   120c4:	str	r7, [sp, #52]	; 0x34
   120c8:	add	r0, r2, #16
   120cc:	vld1.16	{d16}, [r8 :64]
   120d0:	vmovl.s16	q8, d16
   120d4:	vst1.32	{d16-d17}, [r2], r9
   120d8:	ldr	r7, [r4, #8]
   120dc:	ldr	r6, [r4, #12]
   120e0:	add	r4, r4, #16
   120e4:	str	r6, [sp, #60]	; 0x3c
   120e8:	str	r7, [sp, #56]	; 0x38
   120ec:	vld1.16	{d16}, [r5 :64]
   120f0:	vmovl.s16	q8, d16
   120f4:	vst1.32	{d16-d17}, [r0]
   120f8:	bne	120b0 <ReadInt32Data+0xa20>
   120fc:	b	134fc <ReadInt32Data+0x1e6c>
   12100:	cmp	r7, #256	; 0x100
   12104:	bgt	12ca0 <ReadInt32Data+0x1610>
   12108:	ldr	r3, [r4]
   1210c:	add	r4, sp, #248	; 0xf8
   12110:	mov	r1, r8
   12114:	mov	r2, r7
   12118:	mov	r0, r4
   1211c:	bl	18b8 <fread@plt>
   12120:	mov	r9, r0
   12124:	cmp	r7, #1
   12128:	blt	13e00 <ReadInt32Data+0x2770>
   1212c:	mov	lr, #0
   12130:	cmp	r7, #4
   12134:	bcc	135b4 <ReadInt32Data+0x1f24>
   12138:	bic	lr, r7, #3
   1213c:	mov	r2, #1
   12140:	str	r7, [sp, #12]
   12144:	str	r8, [sp, #32]
   12148:	str	r9, [sp, #28]
   1214c:	subs	r1, lr, #4
   12150:	add	r1, r2, r1, lsr #2
   12154:	and	ip, r1, #1
   12158:	beq	13568 <ReadInt32Data+0x1ed8>
   1215c:	sub	r3, r1, ip
   12160:	mov	r1, #0
   12164:	add	r8, sp, #112	; 0x70
   12168:	mov	r9, #32
   1216c:	add	r5, sp, #120	; 0x78
   12170:	mov	r2, sl
   12174:	ldr	r0, [r4]
   12178:	ldr	r7, [r4, #4]
   1217c:	subs	r3, r3, #2
   12180:	add	r1, r1, #8
   12184:	str	r0, [sp, #112]	; 0x70
   12188:	str	r7, [sp, #116]	; 0x74
   1218c:	add	r0, r2, #16
   12190:	vld1.16	{d16}, [r8 :64]
   12194:	vmovl.u16	q8, d16
   12198:	vst1.32	{d16-d17}, [r2], r9
   1219c:	ldr	r7, [r4, #8]
   121a0:	ldr	r6, [r4, #12]
   121a4:	add	r4, r4, #16
   121a8:	str	r6, [sp, #124]	; 0x7c
   121ac:	str	r7, [sp, #120]	; 0x78
   121b0:	vld1.16	{d16}, [r5 :64]
   121b4:	vmovl.u16	q8, d16
   121b8:	vst1.32	{d16-d17}, [r0]
   121bc:	bne	12174 <ReadInt32Data+0xae4>
   121c0:	b	1356c <ReadInt32Data+0x1edc>
   121c4:	cmp	r7, #256	; 0x100
   121c8:	ble	12238 <ReadInt32Data+0xba8>
   121cc:	sub	r0, r7, #256	; 0x100
   121d0:	lsl	r6, r7, #2
   121d4:	str	r7, [sp, #12]
   121d8:	mov	r5, #0
   121dc:	add	r7, sp, #248	; 0xf8
   121e0:	mov	r9, #0
   121e4:	str	r0, [sp, #28]
   121e8:	ldr	r3, [r4]
   121ec:	mov	r0, r7
   121f0:	mov	r1, r8
   121f4:	mov	r2, #256	; 0x100
   121f8:	bl	18b8 <fread@plt>
   121fc:	mov	r4, r0
   12200:	add	r0, sl, r5, lsl #2
   12204:	mov	r1, r7
   12208:	mov	r2, #1024	; 0x400
   1220c:	bl	181c <memcpy@plt>
   12210:	ldr	r0, [sp, #28]
   12214:	add	r9, r4, r9
   12218:	ldr	r4, [sp, #36]	; 0x24
   1221c:	add	r5, r5, #256	; 0x100
   12220:	sub	r6, r6, #1024	; 0x400
   12224:	cmp	r5, r0
   12228:	blt	121e8 <ReadInt32Data+0xb58>
   1222c:	b	12eec <ReadInt32Data+0x185c>
   12230:	cmp	r7, #256	; 0x100
   12234:	bgt	12e8c <ReadInt32Data+0x17fc>
   12238:	ldr	r3, [r4]
   1223c:	add	r0, sp, #248	; 0xf8
   12240:	mov	r1, r8
   12244:	mov	r2, r7
   12248:	bl	18b8 <fread@plt>
   1224c:	mov	r9, r0
   12250:	cmp	r7, #1
   12254:	blt	13e00 <ReadInt32Data+0x2770>
   12258:	lsl	r2, r7, #2
   1225c:	add	r1, sp, #248	; 0xf8
   12260:	mov	r0, sl
   12264:	bl	181c <memcpy@plt>
   12268:	b	13e00 <ReadInt32Data+0x2770>
   1226c:	cmp	r7, #256	; 0x100
   12270:	bgt	12f38 <ReadInt32Data+0x18a8>
   12274:	ldr	r3, [r4]
   12278:	add	r4, sp, #248	; 0xf8
   1227c:	mov	r1, r8
   12280:	mov	r2, r7
   12284:	mov	r0, r4
   12288:	bl	18b8 <fread@plt>
   1228c:	mov	r9, r0
   12290:	cmp	r7, #1
   12294:	blt	13e00 <ReadInt32Data+0x2770>
   12298:	mov	lr, #0
   1229c:	cmp	r7, #4
   122a0:	bcc	13604 <ReadInt32Data+0x1f74>
   122a4:	bic	lr, r7, #3
   122a8:	mov	r2, #1
   122ac:	subs	r1, lr, #4
   122b0:	add	r1, r2, r1, lsr #2
   122b4:	and	ip, r1, #1
   122b8:	beq	135d8 <ReadInt32Data+0x1f48>
   122bc:	sub	r3, r1, ip
   122c0:	mov	r1, #0
   122c4:	mov	r0, #32
   122c8:	mov	r6, sl
   122cc:	add	r5, r4, #16
   122d0:	vld1.32	{d16-d17}, [r4], r0
   122d4:	add	r2, r6, #16
   122d8:	subs	r3, r3, #2
   122dc:	add	r1, r1, #8
   122e0:	vcvt.s32.f32	q8, q8
   122e4:	vst1.32	{d16-d17}, [r6], r0
   122e8:	vld1.32	{d16-d17}, [r5]
   122ec:	vcvt.s32.f32	q8, q8
   122f0:	vst1.32	{d16-d17}, [r2]
   122f4:	bne	122cc <ReadInt32Data+0xc3c>
   122f8:	b	135dc <ReadInt32Data+0x1f4c>
   122fc:	cmp	r7, #256	; 0x100
   12300:	bgt	13094 <ReadInt32Data+0x1a04>
   12304:	ldr	r3, [r4]
   12308:	add	r6, sp, #248	; 0xf8
   1230c:	mov	r1, r8
   12310:	mov	r2, r7
   12314:	mov	r0, r6
   12318:	bl	18b8 <fread@plt>
   1231c:	mov	r9, r0
   12320:	cmp	r7, #1
   12324:	blt	13e00 <ReadInt32Data+0x2770>
   12328:	mov	lr, #0
   1232c:	beq	1367c <ReadInt32Data+0x1fec>
   12330:	bic	lr, r7, #1
   12334:	mov	r1, #1
   12338:	str	r7, [sp, #12]
   1233c:	str	r8, [sp, #32]
   12340:	subs	r0, lr, #2
   12344:	add	r0, r1, r0, lsr #1
   12348:	and	ip, r0, #1
   1234c:	beq	13634 <ReadInt32Data+0x1fa4>
   12350:	sub	r3, r0, ip
   12354:	mov	r1, #0
   12358:	mov	r8, #32
   1235c:	mov	r7, #16
   12360:	mov	r0, sl
   12364:	mov	r4, r6
   12368:	mov	r5, sl
   1236c:	vld1.64	{d16-d17}, [r4], r8
   12370:	subs	r3, r3, #2
   12374:	add	r1, r1, #4
   12378:	vcvt.s32.f64	s0, d16
   1237c:	vcvt.s32.f64	s2, d17
   12380:	vmov	r2, s0
   12384:	vmov.32	d16[0], r2
   12388:	vmov	r2, s2
   1238c:	vmov.32	d16[1], r2
   12390:	add	r2, r6, #16
   12394:	mov	r6, r4
   12398:	vst1.32	{d16}, [r5], r7
   1239c:	vld1.64	{d16-d17}, [r2]
   123a0:	vcvt.s32.f64	s0, d16
   123a4:	vcvt.s32.f64	s2, d17
   123a8:	vmov	r2, s0
   123ac:	vmov.32	d16[0], r2
   123b0:	vmov	r2, s2
   123b4:	vmov.32	d16[1], r2
   123b8:	vstr	d16, [r0, #8]
   123bc:	mov	r0, r5
   123c0:	bne	1236c <ReadInt32Data+0xcdc>
   123c4:	b	13638 <ReadInt32Data+0x1fa8>
   123c8:	cmp	r7, #256	; 0x100
   123cc:	bgt	13268 <ReadInt32Data+0x1bd8>
   123d0:	ldr	r3, [r4]
   123d4:	add	r6, sp, #248	; 0xf8
   123d8:	mov	r1, r8
   123dc:	mov	r2, r7
   123e0:	mov	r0, r6
   123e4:	bl	18b8 <fread@plt>
   123e8:	mov	r9, r0
   123ec:	cmp	r7, #1
   123f0:	blt	139d4 <ReadInt32Data+0x2344>
   123f4:	mov	lr, #0
   123f8:	beq	136e4 <ReadInt32Data+0x2054>
   123fc:	bic	lr, r7, #1
   12400:	mov	r2, #1
   12404:	str	r5, [sp, #20]
   12408:	str	r8, [sp, #32]
   1240c:	subs	r1, lr, #2
   12410:	add	r1, r2, r1, lsr #1
   12414:	and	ip, r1, #1
   12418:	beq	136ac <ReadInt32Data+0x201c>
   1241c:	sub	r3, r1, ip
   12420:	mov	r1, #0
   12424:	mov	r8, #32
   12428:	mov	r5, #16
   1242c:	mov	r2, sl
   12430:	mov	r4, sl
   12434:	add	r0, r6, #16
   12438:	vld1.64	{d16-d17}, [r6], r8
   1243c:	subs	r3, r3, #2
   12440:	add	r1, r1, #4
   12444:	vmovn.i64	d16, q8
   12448:	vst1.32	{d16}, [r4], r5
   1244c:	vld1.64	{d16-d17}, [r0]
   12450:	vmovn.i64	d16, q8
   12454:	vstr	d16, [r2, #8]
   12458:	mov	r2, r4
   1245c:	bne	12434 <ReadInt32Data+0xda4>
   12460:	b	136b0 <ReadInt32Data+0x2020>
   12464:	sub	r0, r7, #256	; 0x100
   12468:	str	r8, [sp, #32]
   1246c:	mov	r8, sl
   12470:	add	r1, sl, #1024	; 0x400
   12474:	add	r6, sp, #248	; 0xf8
   12478:	mov	r5, #0
   1247c:	str	r7, [sp, #12]
   12480:	str	r0, [sp, #28]
   12484:	mov	r0, #0
   12488:	mov	sl, r1
   1248c:	ldr	r3, [r4]
   12490:	ldr	r1, [sp, #32]
   12494:	mov	r9, r0
   12498:	mov	r0, r6
   1249c:	mov	r2, #256	; 0x100
   124a0:	bl	18b8 <fread@plt>
   124a4:	mov	r4, r0
   124a8:	mov	r7, #0
   124ac:	add	r0, r6, r7
   124b0:	bl	1c20 <Mat_int16Swap>
   124b4:	str	r0, [r8, r7, lsl #1]
   124b8:	add	r7, r7, #2
   124bc:	cmp	r7, #512	; 0x200
   124c0:	bne	124ac <ReadInt32Data+0xe1c>
   124c4:	ldr	r2, [sp, #28]
   124c8:	add	r5, r4, r5
   124cc:	ldr	r4, [sp, #36]	; 0x24
   124d0:	add	r0, r9, #256	; 0x100
   124d4:	add	r8, r8, #1024	; 0x400
   124d8:	add	r1, sl, #1024	; 0x400
   124dc:	cmp	r0, r2
   124e0:	blt	12488 <ReadInt32Data+0xdf8>
   124e4:	ldr	r7, [sp, #12]
   124e8:	cmp	r0, r7
   124ec:	bge	127d8 <ReadInt32Data+0x1148>
   124f0:	ldr	r8, [sp, #32]
   124f4:	ldr	r3, [r4]
   124f8:	sub	r6, r7, r0
   124fc:	add	r4, sp, #248	; 0xf8
   12500:	mov	r0, r4
   12504:	mov	r2, r6
   12508:	mov	r1, r8
   1250c:	bl	18b8 <fread@plt>
   12510:	add	r5, r0, r5
   12514:	cmp	r6, #1
   12518:	blt	127d0 <ReadInt32Data+0x1140>
   1251c:	sub	r0, r7, r9
   12520:	sub	r6, r0, #256	; 0x100
   12524:	mov	r0, r4
   12528:	bl	1c20 <Mat_int16Swap>
   1252c:	str	r0, [sl], #4
   12530:	add	r4, r4, #2
   12534:	subs	r6, r6, #1
   12538:	bne	12524 <ReadInt32Data+0xe94>
   1253c:	b	127d0 <ReadInt32Data+0x1140>
   12540:	sub	r0, r7, #256	; 0x100
   12544:	str	r8, [sp, #32]
   12548:	mov	r8, sl
   1254c:	add	r1, sl, #1024	; 0x400
   12550:	add	r6, sp, #248	; 0xf8
   12554:	mov	r5, #0
   12558:	str	r7, [sp, #12]
   1255c:	str	r0, [sp, #28]
   12560:	mov	r0, #0
   12564:	mov	sl, r1
   12568:	ldr	r3, [r4]
   1256c:	ldr	r1, [sp, #32]
   12570:	mov	r9, r0
   12574:	mov	r0, r6
   12578:	mov	r2, #256	; 0x100
   1257c:	bl	18b8 <fread@plt>
   12580:	mov	r4, r0
   12584:	mov	r7, #0
   12588:	add	r0, r6, r7
   1258c:	bl	1c34 <Mat_uint16Swap>
   12590:	str	r0, [r8, r7, lsl #1]
   12594:	add	r7, r7, #2
   12598:	cmp	r7, #512	; 0x200
   1259c:	bne	12588 <ReadInt32Data+0xef8>
   125a0:	ldr	r2, [sp, #28]
   125a4:	add	r5, r4, r5
   125a8:	ldr	r4, [sp, #36]	; 0x24
   125ac:	add	r0, r9, #256	; 0x100
   125b0:	add	r8, r8, #1024	; 0x400
   125b4:	add	r1, sl, #1024	; 0x400
   125b8:	cmp	r0, r2
   125bc:	blt	12564 <ReadInt32Data+0xed4>
   125c0:	ldr	r7, [sp, #12]
   125c4:	cmp	r0, r7
   125c8:	bge	127d8 <ReadInt32Data+0x1148>
   125cc:	ldr	r8, [sp, #32]
   125d0:	ldr	r3, [r4]
   125d4:	sub	r6, r7, r0
   125d8:	add	r4, sp, #248	; 0xf8
   125dc:	mov	r0, r4
   125e0:	mov	r2, r6
   125e4:	mov	r1, r8
   125e8:	bl	18b8 <fread@plt>
   125ec:	add	r5, r0, r5
   125f0:	cmp	r6, #1
   125f4:	blt	127d0 <ReadInt32Data+0x1140>
   125f8:	sub	r0, r7, r9
   125fc:	sub	r6, r0, #256	; 0x100
   12600:	mov	r0, r4
   12604:	bl	1c34 <Mat_uint16Swap>
   12608:	str	r0, [sl], #4
   1260c:	add	r4, r4, #2
   12610:	subs	r6, r6, #1
   12614:	bne	12600 <ReadInt32Data+0xf70>
   12618:	b	127d0 <ReadInt32Data+0x1140>
   1261c:	sub	r0, r7, #256	; 0x100
   12620:	str	r8, [sp, #32]
   12624:	mov	r8, sl
   12628:	add	r1, sl, #1024	; 0x400
   1262c:	add	r6, sp, #248	; 0xf8
   12630:	mov	r5, #0
   12634:	str	r7, [sp, #12]
   12638:	str	r0, [sp, #28]
   1263c:	mov	r0, #0
   12640:	mov	sl, r1
   12644:	ldr	r3, [r4]
   12648:	ldr	r1, [sp, #32]
   1264c:	mov	r9, r0
   12650:	mov	r0, r6
   12654:	mov	r2, #256	; 0x100
   12658:	bl	18b8 <fread@plt>
   1265c:	mov	r4, r0
   12660:	mov	r7, #0
   12664:	add	r0, r6, r7
   12668:	bl	1bf8 <Mat_int32Swap>
   1266c:	str	r0, [r8, r7]
   12670:	add	r7, r7, #4
   12674:	cmp	r7, #1024	; 0x400
   12678:	bne	12664 <ReadInt32Data+0xfd4>
   1267c:	ldr	r2, [sp, #28]
   12680:	add	r5, r4, r5
   12684:	ldr	r4, [sp, #36]	; 0x24
   12688:	add	r0, r9, #256	; 0x100
   1268c:	add	r8, r8, #1024	; 0x400
   12690:	add	r1, sl, #1024	; 0x400
   12694:	cmp	r0, r2
   12698:	blt	12640 <ReadInt32Data+0xfb0>
   1269c:	ldr	r7, [sp, #12]
   126a0:	cmp	r0, r7
   126a4:	bge	127d8 <ReadInt32Data+0x1148>
   126a8:	ldr	r8, [sp, #32]
   126ac:	ldr	r3, [r4]
   126b0:	sub	r6, r7, r0
   126b4:	add	r4, sp, #248	; 0xf8
   126b8:	mov	r0, r4
   126bc:	mov	r2, r6
   126c0:	mov	r1, r8
   126c4:	bl	18b8 <fread@plt>
   126c8:	add	r5, r0, r5
   126cc:	cmp	r6, #1
   126d0:	blt	127d0 <ReadInt32Data+0x1140>
   126d4:	sub	r0, r7, r9
   126d8:	sub	r6, r0, #256	; 0x100
   126dc:	mov	r0, r4
   126e0:	bl	1bf8 <Mat_int32Swap>
   126e4:	str	r0, [sl], #4
   126e8:	add	r4, r4, #4
   126ec:	subs	r6, r6, #1
   126f0:	bne	126dc <ReadInt32Data+0x104c>
   126f4:	b	127d0 <ReadInt32Data+0x1140>
   126f8:	sub	r0, r7, #256	; 0x100
   126fc:	str	r8, [sp, #32]
   12700:	mov	r8, sl
   12704:	add	r1, sl, #1024	; 0x400
   12708:	add	r6, sp, #248	; 0xf8
   1270c:	mov	r5, #0
   12710:	str	r7, [sp, #12]
   12714:	str	r0, [sp, #28]
   12718:	mov	r0, #0
   1271c:	mov	sl, r1
   12720:	ldr	r3, [r4]
   12724:	ldr	r1, [sp, #32]
   12728:	mov	r9, r0
   1272c:	mov	r0, r6
   12730:	mov	r2, #256	; 0x100
   12734:	bl	18b8 <fread@plt>
   12738:	mov	r4, r0
   1273c:	mov	r7, #0
   12740:	add	r0, r6, r7
   12744:	bl	1c0c <Mat_uint32Swap>
   12748:	str	r0, [r8, r7]
   1274c:	add	r7, r7, #4
   12750:	cmp	r7, #1024	; 0x400
   12754:	bne	12740 <ReadInt32Data+0x10b0>
   12758:	ldr	r2, [sp, #28]
   1275c:	add	r5, r4, r5
   12760:	ldr	r4, [sp, #36]	; 0x24
   12764:	add	r0, r9, #256	; 0x100
   12768:	add	r8, r8, #1024	; 0x400
   1276c:	add	r1, sl, #1024	; 0x400
   12770:	cmp	r0, r2
   12774:	blt	1271c <ReadInt32Data+0x108c>
   12778:	ldr	r7, [sp, #12]
   1277c:	cmp	r0, r7
   12780:	bge	127d8 <ReadInt32Data+0x1148>
   12784:	ldr	r8, [sp, #32]
   12788:	ldr	r3, [r4]
   1278c:	sub	r6, r7, r0
   12790:	add	r4, sp, #248	; 0xf8
   12794:	mov	r0, r4
   12798:	mov	r2, r6
   1279c:	mov	r1, r8
   127a0:	bl	18b8 <fread@plt>
   127a4:	add	r5, r0, r5
   127a8:	cmp	r6, #1
   127ac:	blt	127d0 <ReadInt32Data+0x1140>
   127b0:	sub	r0, r7, r9
   127b4:	sub	r6, r0, #256	; 0x100
   127b8:	mov	r0, r4
   127bc:	bl	1c0c <Mat_uint32Swap>
   127c0:	str	r0, [sl], #4
   127c4:	add	r4, r4, #4
   127c8:	subs	r6, r6, #1
   127cc:	bne	127b8 <ReadInt32Data+0x1128>
   127d0:	mov	r9, r5
   127d4:	b	13e00 <ReadInt32Data+0x2770>
   127d8:	mov	r9, r5
   127dc:	b	13dfc <ReadInt32Data+0x276c>
   127e0:	sub	r0, r7, #256	; 0x100
   127e4:	str	r8, [sp, #32]
   127e8:	mov	r8, sl
   127ec:	add	r1, sl, #1024	; 0x400
   127f0:	add	r6, sp, #248	; 0xf8
   127f4:	mov	r9, #0
   127f8:	str	r7, [sp, #12]
   127fc:	str	r0, [sp, #28]
   12800:	mov	r0, #0
   12804:	mov	r5, r1
   12808:	ldr	r3, [r4]
   1280c:	ldr	r1, [sp, #32]
   12810:	mov	sl, r0
   12814:	mov	r0, r6
   12818:	mov	r2, #256	; 0x100
   1281c:	bl	18b8 <fread@plt>
   12820:	mov	r4, r0
   12824:	mov	r7, #0
   12828:	add	r0, r6, r7
   1282c:	bl	1c4c <Mat_floatSwap>
   12830:	vcvt.s32.f32	s0, s0
   12834:	vmov	r0, s0
   12838:	str	r0, [r8, r7]
   1283c:	add	r7, r7, #4
   12840:	cmp	r7, #1024	; 0x400
   12844:	bne	12828 <ReadInt32Data+0x1198>
   12848:	ldr	r2, [sp, #28]
   1284c:	add	r9, r4, r9
   12850:	ldr	r4, [sp, #36]	; 0x24
   12854:	add	r0, sl, #256	; 0x100
   12858:	add	r8, r8, #1024	; 0x400
   1285c:	add	r1, r5, #1024	; 0x400
   12860:	cmp	r0, r2
   12864:	blt	12804 <ReadInt32Data+0x1174>
   12868:	ldr	r7, [sp, #12]
   1286c:	cmp	r0, r7
   12870:	bge	13dfc <ReadInt32Data+0x276c>
   12874:	ldr	r8, [sp, #32]
   12878:	ldr	r3, [r4]
   1287c:	sub	r6, r7, r0
   12880:	add	r4, sp, #248	; 0xf8
   12884:	mov	r0, r4
   12888:	mov	r2, r6
   1288c:	mov	r1, r8
   12890:	bl	18b8 <fread@plt>
   12894:	add	r9, r0, r9
   12898:	cmp	r6, #1
   1289c:	blt	13e00 <ReadInt32Data+0x2770>
   128a0:	sub	r0, r7, sl
   128a4:	sub	r6, r0, #256	; 0x100
   128a8:	mov	r0, r4
   128ac:	bl	1c4c <Mat_floatSwap>
   128b0:	vcvt.s32.f32	s0, s0
   128b4:	add	r4, r4, #4
   128b8:	subs	r6, r6, #1
   128bc:	vmov	r0, s0
   128c0:	str	r0, [r5], #4
   128c4:	bne	128a8 <ReadInt32Data+0x1218>
   128c8:	b	13e00 <ReadInt32Data+0x2770>
   128cc:	mov	r0, sl
   128d0:	sub	r0, r7, #256	; 0x100
   128d4:	add	r1, sl, #1024	; 0x400
   128d8:	mov	r9, #0
   128dc:	str	r8, [sp, #32]
   128e0:	str	r7, [sp, #12]
   128e4:	str	r0, [sp, #28]
   128e8:	mov	r0, #0
   128ec:	mov	r5, r1
   128f0:	ldr	r3, [r4]
   128f4:	ldr	r1, [sp, #32]
   128f8:	add	r4, sp, #248	; 0xf8
   128fc:	mov	r8, r0
   12900:	mov	r2, #256	; 0x100
   12904:	mov	r0, r4
   12908:	bl	18b8 <fread@plt>
   1290c:	mov	r6, r0
   12910:	mov	r7, #0
   12914:	mov	r0, r4
   12918:	bl	1c90 <Mat_doubleSwap>
   1291c:	vcvt.s32.f64	s0, d0
   12920:	add	r4, r4, #8
   12924:	vmov	r0, s0
   12928:	str	r0, [sl, r7, lsl #2]
   1292c:	add	r7, r7, #1
   12930:	cmp	r7, #256	; 0x100
   12934:	bne	12914 <ReadInt32Data+0x1284>
   12938:	ldr	r2, [sp, #28]
   1293c:	ldr	r4, [sp, #36]	; 0x24
   12940:	add	r0, r8, #256	; 0x100
   12944:	add	r9, r6, r9
   12948:	add	sl, sl, #1024	; 0x400
   1294c:	add	r1, r5, #1024	; 0x400
   12950:	cmp	r0, r2
   12954:	blt	128ec <ReadInt32Data+0x125c>
   12958:	ldr	r7, [sp, #12]
   1295c:	cmp	r0, r7
   12960:	bge	13dfc <ReadInt32Data+0x276c>
   12964:	ldr	r3, [r4]
   12968:	ldr	r1, [sp, #32]
   1296c:	sub	r6, r7, r0
   12970:	add	r4, sp, #248	; 0xf8
   12974:	mov	r0, r4
   12978:	mov	r2, r6
   1297c:	bl	18b8 <fread@plt>
   12980:	add	r9, r0, r9
   12984:	cmp	r6, #1
   12988:	blt	13dfc <ReadInt32Data+0x276c>
   1298c:	sub	r0, r7, r8
   12990:	sub	r6, r0, #256	; 0x100
   12994:	mov	r0, r4
   12998:	bl	1c90 <Mat_doubleSwap>
   1299c:	vcvt.s32.f64	s0, d0
   129a0:	add	r4, r4, #8
   129a4:	subs	r6, r6, #1
   129a8:	vmov	r0, s0
   129ac:	str	r0, [r5], #4
   129b0:	bne	12994 <ReadInt32Data+0x1304>
   129b4:	b	13dfc <ReadInt32Data+0x276c>
   129b8:	sub	r0, r7, #256	; 0x100
   129bc:	str	r8, [sp, #32]
   129c0:	add	r1, sl, #1024	; 0x400
   129c4:	mov	r8, sl
   129c8:	mov	r9, #0
   129cc:	str	r5, [sp, #20]
   129d0:	str	r7, [sp, #12]
   129d4:	str	sl, [sp, #4]
   129d8:	str	r0, [sp, #28]
   129dc:	mov	r0, #0
   129e0:	mov	r5, r1
   129e4:	ldr	r3, [r4]
   129e8:	ldr	r1, [sp, #32]
   129ec:	add	r4, sp, #248	; 0xf8
   129f0:	mov	r7, r0
   129f4:	mov	r2, #256	; 0x100
   129f8:	mov	sl, r9
   129fc:	mov	r0, r4
   12a00:	bl	18b8 <fread@plt>
   12a04:	mov	r6, r0
   12a08:	mov	r9, #0
   12a0c:	mov	r0, r4
   12a10:	bl	1b84 <Mat_int64Swap>
   12a14:	str	r0, [r8, r9, lsl #2]
   12a18:	add	r9, r9, #1
   12a1c:	add	r4, r4, #8
   12a20:	cmp	r9, #256	; 0x100
   12a24:	bne	12a0c <ReadInt32Data+0x137c>
   12a28:	ldr	r2, [sp, #28]
   12a2c:	ldr	r4, [sp, #36]	; 0x24
   12a30:	add	r0, r7, #256	; 0x100
   12a34:	mov	r9, sl
   12a38:	add	r9, r6, sl
   12a3c:	add	r8, r8, #1024	; 0x400
   12a40:	add	r1, r5, #1024	; 0x400
   12a44:	cmp	r0, r2
   12a48:	blt	129e0 <ReadInt32Data+0x1350>
   12a4c:	mov	sl, r7
   12a50:	ldr	r7, [sp, #12]
   12a54:	cmp	r0, r7
   12a58:	bge	133e8 <ReadInt32Data+0x1d58>
   12a5c:	mov	r1, r4
   12a60:	ldr	r8, [sp, #32]
   12a64:	sub	r4, r7, r0
   12a68:	add	r6, sp, #248	; 0xf8
   12a6c:	ldr	r3, [r1]
   12a70:	mov	r0, r6
   12a74:	mov	r2, r4
   12a78:	mov	r1, r8
   12a7c:	bl	18b8 <fread@plt>
   12a80:	add	r9, r0, r9
   12a84:	cmp	r4, #1
   12a88:	blt	12aac <ReadInt32Data+0x141c>
   12a8c:	sub	r0, r7, sl
   12a90:	sub	r4, r0, #256	; 0x100
   12a94:	mov	r0, r6
   12a98:	bl	1b84 <Mat_int64Swap>
   12a9c:	str	r0, [r5], #4
   12aa0:	add	r6, r6, #8
   12aa4:	subs	r4, r4, #1
   12aa8:	bne	12a94 <ReadInt32Data+0x1404>
   12aac:	ldr	sl, [sp, #4]
   12ab0:	b	139cc <ReadInt32Data+0x233c>
   12ab4:	ldr	r8, [sp, #32]
   12ab8:	mov	r9, sl
   12abc:	b	13e00 <ReadInt32Data+0x2770>
   12ac0:	sub	r1, r7, #256	; 0x100
   12ac4:	str	r8, [sp, #32]
   12ac8:	str	r7, [sp, #12]
   12acc:	mov	r8, sl
   12ad0:	add	r0, sl, #1024	; 0x400
   12ad4:	mov	r2, #0
   12ad8:	mov	r7, #0
   12adc:	add	r6, sp, #248	; 0xf8
   12ae0:	add	r9, sp, #88	; 0x58
   12ae4:	mov	sl, #32
   12ae8:	add	r5, sp, #96	; 0x60
   12aec:	str	r1, [sp, #8]
   12af0:	mov	r1, #256	; 0x100
   12af4:	str	r8, [sp, #4]
   12af8:	str	r2, [sp, #28]
   12afc:	add	r2, sp, #16
   12b00:	stm	r2, {r0, r1, r7}
   12b04:	ldr	r0, [sp, #36]	; 0x24
   12b08:	ldr	r1, [sp, #32]
   12b0c:	mov	r2, #256	; 0x100
   12b10:	ldr	r3, [r0]
   12b14:	mov	r0, r6
   12b18:	bl	18b8 <fread@plt>
   12b1c:	mov	r1, r8
   12b20:	mov	r2, #0
   12b24:	ldr	r3, [r6, r2]
   12b28:	str	r3, [sp, #88]	; 0x58
   12b2c:	add	r3, r6, r2
   12b30:	add	r2, r2, #16
   12b34:	ldr	r7, [r3, #4]
   12b38:	cmp	r2, #512	; 0x200
   12b3c:	str	r7, [sp, #92]	; 0x5c
   12b40:	add	r7, r1, #16
   12b44:	vld1.16	{d16}, [r9 :64]
   12b48:	vmovl.s16	q8, d16
   12b4c:	vst1.32	{d16-d17}, [r1], sl
   12b50:	ldr	r4, [r3, #8]
   12b54:	ldr	r3, [r3, #12]
   12b58:	str	r4, [sp, #96]	; 0x60
   12b5c:	str	r3, [sp, #100]	; 0x64
   12b60:	vld1.16	{d16}, [r5 :64]
   12b64:	vmovl.s16	q8, d16
   12b68:	vst1.32	{d16-d17}, [r7]
   12b6c:	bne	12b24 <ReadInt32Data+0x1494>
   12b70:	ldr	r1, [sp, #28]
   12b74:	ldr	r2, [sp, #24]
   12b78:	add	r8, r8, #1024	; 0x400
   12b7c:	add	r1, r0, r1
   12b80:	ldr	r0, [sp, #16]
   12b84:	add	r7, r2, #256	; 0x100
   12b88:	ldr	r2, [sp, #8]
   12b8c:	str	r1, [sp, #28]
   12b90:	ldr	r1, [sp, #20]
   12b94:	add	r0, r0, #1024	; 0x400
   12b98:	cmp	r7, r2
   12b9c:	add	r1, r1, #256	; 0x100
   12ba0:	blt	12afc <ReadInt32Data+0x146c>
   12ba4:	ldr	r4, [sp, #12]
   12ba8:	cmp	r7, r4
   12bac:	bge	12e80 <ReadInt32Data+0x17f0>
   12bb0:	ldr	r0, [sp, #36]	; 0x24
   12bb4:	ldr	r8, [sp, #32]
   12bb8:	sub	r5, r4, r7
   12bbc:	add	r6, sp, #248	; 0xf8
   12bc0:	mov	r2, r5
   12bc4:	ldr	r3, [r0]
   12bc8:	mov	r0, r6
   12bcc:	mov	r1, r8
   12bd0:	bl	18b8 <fread@plt>
   12bd4:	ldr	r9, [sp, #28]
   12bd8:	cmp	r5, #1
   12bdc:	add	r9, r0, r9
   12be0:	blt	13e00 <ReadInt32Data+0x2770>
   12be4:	ldr	r3, [sp, #4]
   12be8:	mov	lr, #0
   12bec:	cmp	r5, #4
   12bf0:	bcc	13764 <ReadInt32Data+0x20d4>
   12bf4:	bic	lr, r5, #3
   12bf8:	mov	r2, #1
   12bfc:	mov	sl, r9
   12c00:	str	r5, [sp, #36]	; 0x24
   12c04:	subs	r1, lr, #4
   12c08:	add	r1, r2, r1, lsr #2
   12c0c:	and	r0, r1, #1
   12c10:	str	r0, [sp, #28]
   12c14:	beq	13708 <ReadInt32Data+0x2078>
   12c18:	ldr	r0, [sp, #24]
   12c1c:	ldr	ip, [sp, #16]
   12c20:	add	r8, sp, #72	; 0x48
   12c24:	mov	r9, #32
   12c28:	sub	r1, r4, r0
   12c2c:	add	r4, sp, #80	; 0x50
   12c30:	sub	r1, r1, #256	; 0x100
   12c34:	bic	r1, r1, #3
   12c38:	sub	r1, r1, #4
   12c3c:	mvn	r3, r1, lsr #2
   12c40:	add	r1, r2, r1, lsr #2
   12c44:	mov	r2, #0
   12c48:	and	r1, r1, #1
   12c4c:	add	r3, r3, r1
   12c50:	ldr	r0, [r6]
   12c54:	ldr	r1, [r6, #4]
   12c58:	adds	r3, r3, #2
   12c5c:	add	r2, r2, #8
   12c60:	str	r0, [sp, #72]	; 0x48
   12c64:	str	r1, [sp, #76]	; 0x4c
   12c68:	add	r0, ip, #16
   12c6c:	vld1.16	{d16}, [r8 :64]
   12c70:	vmovl.s16	q8, d16
   12c74:	vst1.32	{d16-d17}, [ip], r9
   12c78:	ldr	r1, [r6, #8]
   12c7c:	ldr	r5, [r6, #12]
   12c80:	add	r6, r6, #16
   12c84:	str	r5, [sp, #84]	; 0x54
   12c88:	str	r1, [sp, #80]	; 0x50
   12c8c:	vld1.16	{d16}, [r4 :64]
   12c90:	vmovl.s16	q8, d16
   12c94:	vst1.32	{d16-d17}, [r0]
   12c98:	bne	12c50 <ReadInt32Data+0x15c0>
   12c9c:	b	1370c <ReadInt32Data+0x207c>
   12ca0:	sub	r1, r7, #256	; 0x100
   12ca4:	str	r8, [sp, #32]
   12ca8:	str	r7, [sp, #12]
   12cac:	mov	r8, sl
   12cb0:	add	r0, sl, #1024	; 0x400
   12cb4:	mov	r2, #0
   12cb8:	mov	r7, #0
   12cbc:	add	r6, sp, #248	; 0xf8
   12cc0:	add	r9, sp, #152	; 0x98
   12cc4:	mov	sl, #32
   12cc8:	add	r5, sp, #160	; 0xa0
   12ccc:	str	r1, [sp, #8]
   12cd0:	mov	r1, #256	; 0x100
   12cd4:	str	r8, [sp, #4]
   12cd8:	str	r2, [sp, #28]
   12cdc:	add	r2, sp, #16
   12ce0:	stm	r2, {r0, r1, r7}
   12ce4:	ldr	r0, [sp, #36]	; 0x24
   12ce8:	ldr	r1, [sp, #32]
   12cec:	mov	r2, #256	; 0x100
   12cf0:	ldr	r3, [r0]
   12cf4:	mov	r0, r6
   12cf8:	bl	18b8 <fread@plt>
   12cfc:	mov	r1, r8
   12d00:	mov	r2, #0
   12d04:	ldr	r3, [r6, r2]
   12d08:	str	r3, [sp, #152]	; 0x98
   12d0c:	add	r3, r6, r2
   12d10:	add	r2, r2, #16
   12d14:	ldr	r7, [r3, #4]
   12d18:	cmp	r2, #512	; 0x200
   12d1c:	str	r7, [sp, #156]	; 0x9c
   12d20:	add	r7, r1, #16
   12d24:	vld1.16	{d16}, [r9 :64]
   12d28:	vmovl.u16	q8, d16
   12d2c:	vst1.32	{d16-d17}, [r1], sl
   12d30:	ldr	r4, [r3, #8]
   12d34:	ldr	r3, [r3, #12]
   12d38:	str	r4, [sp, #160]	; 0xa0
   12d3c:	str	r3, [sp, #164]	; 0xa4
   12d40:	vld1.16	{d16}, [r5 :64]
   12d44:	vmovl.u16	q8, d16
   12d48:	vst1.32	{d16-d17}, [r7]
   12d4c:	bne	12d04 <ReadInt32Data+0x1674>
   12d50:	ldr	r1, [sp, #28]
   12d54:	ldr	r2, [sp, #24]
   12d58:	add	r8, r8, #1024	; 0x400
   12d5c:	add	r1, r0, r1
   12d60:	ldr	r0, [sp, #16]
   12d64:	add	r7, r2, #256	; 0x100
   12d68:	ldr	r2, [sp, #8]
   12d6c:	str	r1, [sp, #28]
   12d70:	ldr	r1, [sp, #20]
   12d74:	add	r0, r0, #1024	; 0x400
   12d78:	cmp	r7, r2
   12d7c:	add	r1, r1, #256	; 0x100
   12d80:	blt	12cdc <ReadInt32Data+0x164c>
   12d84:	ldr	r4, [sp, #12]
   12d88:	cmp	r7, r4
   12d8c:	bge	12e80 <ReadInt32Data+0x17f0>
   12d90:	ldr	r0, [sp, #36]	; 0x24
   12d94:	ldr	r8, [sp, #32]
   12d98:	sub	r5, r4, r7
   12d9c:	add	r6, sp, #248	; 0xf8
   12da0:	mov	r2, r5
   12da4:	ldr	r3, [r0]
   12da8:	mov	r0, r6
   12dac:	mov	r1, r8
   12db0:	bl	18b8 <fread@plt>
   12db4:	ldr	r9, [sp, #28]
   12db8:	cmp	r5, #1
   12dbc:	add	r9, r0, r9
   12dc0:	blt	13e00 <ReadInt32Data+0x2770>
   12dc4:	ldr	r3, [sp, #4]
   12dc8:	mov	lr, #0
   12dcc:	cmp	r5, #4
   12dd0:	bcc	137f8 <ReadInt32Data+0x2168>
   12dd4:	bic	lr, r5, #3
   12dd8:	mov	r2, #1
   12ddc:	mov	sl, r9
   12de0:	str	r5, [sp, #36]	; 0x24
   12de4:	subs	r1, lr, #4
   12de8:	add	r1, r2, r1, lsr #2
   12dec:	and	r0, r1, #1
   12df0:	str	r0, [sp, #28]
   12df4:	beq	1379c <ReadInt32Data+0x210c>
   12df8:	ldr	r0, [sp, #24]
   12dfc:	ldr	ip, [sp, #16]
   12e00:	add	r8, sp, #136	; 0x88
   12e04:	mov	r9, #32
   12e08:	sub	r1, r4, r0
   12e0c:	add	r4, sp, #144	; 0x90
   12e10:	sub	r1, r1, #256	; 0x100
   12e14:	bic	r1, r1, #3
   12e18:	sub	r1, r1, #4
   12e1c:	mvn	r3, r1, lsr #2
   12e20:	add	r1, r2, r1, lsr #2
   12e24:	mov	r2, #0
   12e28:	and	r1, r1, #1
   12e2c:	add	r3, r3, r1
   12e30:	ldr	r0, [r6]
   12e34:	ldr	r1, [r6, #4]
   12e38:	adds	r3, r3, #2
   12e3c:	add	r2, r2, #8
   12e40:	str	r0, [sp, #136]	; 0x88
   12e44:	str	r1, [sp, #140]	; 0x8c
   12e48:	add	r0, ip, #16
   12e4c:	vld1.16	{d16}, [r8 :64]
   12e50:	vmovl.u16	q8, d16
   12e54:	vst1.32	{d16-d17}, [ip], r9
   12e58:	ldr	r1, [r6, #8]
   12e5c:	ldr	r5, [r6, #12]
   12e60:	add	r6, r6, #16
   12e64:	str	r5, [sp, #148]	; 0x94
   12e68:	str	r1, [sp, #144]	; 0x90
   12e6c:	vld1.16	{d16}, [r4 :64]
   12e70:	vmovl.u16	q8, d16
   12e74:	vst1.32	{d16-d17}, [r0]
   12e78:	bne	12e30 <ReadInt32Data+0x17a0>
   12e7c:	b	137a0 <ReadInt32Data+0x2110>
   12e80:	ldr	r8, [sp, #32]
   12e84:	ldr	r9, [sp, #28]
   12e88:	b	13e00 <ReadInt32Data+0x2770>
   12e8c:	sub	r0, r7, #256	; 0x100
   12e90:	lsl	r6, r7, #2
   12e94:	str	r7, [sp, #12]
   12e98:	mov	r5, #0
   12e9c:	add	r7, sp, #248	; 0xf8
   12ea0:	mov	r9, #0
   12ea4:	str	r0, [sp, #28]
   12ea8:	ldr	r3, [r4]
   12eac:	mov	r0, r7
   12eb0:	mov	r1, r8
   12eb4:	mov	r2, #256	; 0x100
   12eb8:	bl	18b8 <fread@plt>
   12ebc:	mov	r4, r0
   12ec0:	add	r0, sl, r5, lsl #2
   12ec4:	mov	r1, r7
   12ec8:	mov	r2, #1024	; 0x400
   12ecc:	bl	181c <memcpy@plt>
   12ed0:	ldr	r0, [sp, #28]
   12ed4:	add	r9, r4, r9
   12ed8:	ldr	r4, [sp, #36]	; 0x24
   12edc:	add	r5, r5, #256	; 0x100
   12ee0:	sub	r6, r6, #1024	; 0x400
   12ee4:	cmp	r5, r0
   12ee8:	blt	12ea8 <ReadInt32Data+0x1818>
   12eec:	mov	r7, sl
   12ef0:	ldr	sl, [sp, #12]
   12ef4:	cmp	r5, sl
   12ef8:	bge	13e00 <ReadInt32Data+0x2770>
   12efc:	mov	r0, r4
   12f00:	sub	r4, sl, r5
   12f04:	mov	r1, r8
   12f08:	ldr	r3, [r0]
   12f0c:	add	r0, sp, #248	; 0xf8
   12f10:	mov	r2, r4
   12f14:	bl	18b8 <fread@plt>
   12f18:	add	r9, r0, r9
   12f1c:	cmp	r4, #1
   12f20:	blt	13e00 <ReadInt32Data+0x2770>
   12f24:	add	r0, r7, r5, lsl #2
   12f28:	add	r1, sp, #248	; 0xf8
   12f2c:	mov	r2, r6
   12f30:	bl	181c <memcpy@plt>
   12f34:	b	13e00 <ReadInt32Data+0x2770>
   12f38:	str	r7, [sp, #12]
   12f3c:	mov	r5, sl
   12f40:	add	r0, sl, #1024	; 0x400
   12f44:	sub	r7, r7, #256	; 0x100
   12f48:	mov	sl, #0
   12f4c:	mov	r1, #256	; 0x100
   12f50:	add	r6, sp, #248	; 0xf8
   12f54:	mov	r9, #0
   12f58:	str	r8, [sp, #32]
   12f5c:	str	r5, [sp, #4]
   12f60:	mov	r4, r0
   12f64:	ldr	r0, [sp, #36]	; 0x24
   12f68:	mov	r8, r1
   12f6c:	ldr	r1, [sp, #32]
   12f70:	mov	r2, #256	; 0x100
   12f74:	ldr	r3, [r0]
   12f78:	mov	r0, r6
   12f7c:	bl	18b8 <fread@plt>
   12f80:	mov	r1, #0
   12f84:	add	r2, r6, r1
   12f88:	add	r3, r5, r1
   12f8c:	add	r1, r1, #32
   12f90:	vld1.32	{d16-d17}, [r2]!
   12f94:	cmp	r1, #1024	; 0x400
   12f98:	vcvt.s32.f32	q8, q8
   12f9c:	vst1.32	{d16-d17}, [r3]!
   12fa0:	vld1.32	{d16-d17}, [r2]
   12fa4:	vcvt.s32.f32	q8, q8
   12fa8:	vst1.32	{d16-d17}, [r3]
   12fac:	bne	12f84 <ReadInt32Data+0x18f4>
   12fb0:	mov	r2, sl
   12fb4:	add	sl, sl, #256	; 0x100
   12fb8:	add	r9, r0, r9
   12fbc:	add	r5, r5, #1024	; 0x400
   12fc0:	add	r0, r4, #1024	; 0x400
   12fc4:	add	r1, r8, #256	; 0x100
   12fc8:	cmp	sl, r7
   12fcc:	blt	12f60 <ReadInt32Data+0x18d0>
   12fd0:	ldr	r0, [sp, #12]
   12fd4:	str	r2, [sp, #28]
   12fd8:	cmp	sl, r0
   12fdc:	bge	13dfc <ReadInt32Data+0x276c>
   12fe0:	sub	r5, r0, sl
   12fe4:	ldr	r0, [sp, #36]	; 0x24
   12fe8:	ldr	r1, [sp, #32]
   12fec:	add	r6, sp, #248	; 0xf8
   12ff0:	mov	r2, r5
   12ff4:	ldr	r3, [r0]
   12ff8:	mov	r0, r6
   12ffc:	bl	18b8 <fread@plt>
   13000:	add	r9, r0, r9
   13004:	cmp	r5, #1
   13008:	blt	13dfc <ReadInt32Data+0x276c>
   1300c:	mov	r0, #0
   13010:	cmp	r5, #4
   13014:	bcc	13864 <ReadInt32Data+0x21d4>
   13018:	bic	r0, r5, #3
   1301c:	mov	r2, #1
   13020:	mov	lr, r5
   13024:	subs	r1, r0, #4
   13028:	add	r1, r2, r1, lsr #2
   1302c:	and	ip, r1, #1
   13030:	beq	13830 <ReadInt32Data+0x21a0>
   13034:	ldr	r1, [sp, #12]
   13038:	ldr	r3, [sp, #28]
   1303c:	sub	r3, r1, r3
   13040:	sub	r3, r3, #256	; 0x100
   13044:	bic	r3, r3, #3
   13048:	sub	r3, r3, #4
   1304c:	add	r2, r2, r3, lsr #2
   13050:	mvn	r7, r3, lsr #2
   13054:	and	r2, r2, #1
   13058:	add	r3, r7, r2
   1305c:	mov	r2, #0
   13060:	mov	r7, #32
   13064:	add	r5, r6, #16
   13068:	vld1.32	{d16-d17}, [r6], r7
   1306c:	add	r1, r4, #16
   13070:	adds	r3, r3, #2
   13074:	add	r2, r2, #8
   13078:	vcvt.s32.f32	q8, q8
   1307c:	vst1.32	{d16-d17}, [r4], r7
   13080:	vld1.32	{d16-d17}, [r5]
   13084:	vcvt.s32.f32	q8, q8
   13088:	vst1.32	{d16-d17}, [r1]
   1308c:	bne	13064 <ReadInt32Data+0x19d4>
   13090:	b	13834 <ReadInt32Data+0x21a4>
   13094:	sub	r1, r7, #256	; 0x100
   13098:	str	r7, [sp, #12]
   1309c:	mov	r7, sl
   130a0:	add	r0, sl, #1024	; 0x400
   130a4:	mov	sl, #0
   130a8:	mov	r4, #32
   130ac:	mov	r9, #0
   130b0:	str	r8, [sp, #32]
   130b4:	str	r1, [sp, #24]
   130b8:	mov	r1, #256	; 0x100
   130bc:	str	r7, [sp, #4]
   130c0:	mov	r8, r0
   130c4:	ldr	r0, [sp, #36]	; 0x24
   130c8:	str	r1, [sp, #28]
   130cc:	ldr	r1, [sp, #32]
   130d0:	add	r5, sp, #248	; 0xf8
   130d4:	mov	r2, #256	; 0x100
   130d8:	ldr	r3, [r0]
   130dc:	mov	r0, r5
   130e0:	bl	18b8 <fread@plt>
   130e4:	mov	r1, #0
   130e8:	mov	r3, r5
   130ec:	mov	r2, r5
   130f0:	vld1.64	{d16-d17}, [r2], r4
   130f4:	add	r3, r3, #16
   130f8:	vcvt.s32.f64	s0, d16
   130fc:	vmov	r5, s0
   13100:	vcvt.s32.f64	s0, d17
   13104:	vmov.32	d16[0], r5
   13108:	vmov	r6, s0
   1310c:	add	r5, r7, r1
   13110:	add	r1, r1, #16
   13114:	cmp	r1, #1024	; 0x400
   13118:	vmov.32	d16[1], r6
   1311c:	vst1.32	{d16}, [r5]!
   13120:	vld1.64	{d16-d17}, [r3]
   13124:	vcvt.s32.f64	s0, d16
   13128:	vcvt.s32.f64	s2, d17
   1312c:	vmov	r3, s0
   13130:	vmov.32	d16[0], r3
   13134:	vmov	r3, s2
   13138:	vmov.32	d16[1], r3
   1313c:	mov	r3, r2
   13140:	vstr	d16, [r5]
   13144:	bne	130f0 <ReadInt32Data+0x1a60>
   13148:	ldr	r5, [sp, #28]
   1314c:	ldr	r3, [sp, #24]
   13150:	mov	r2, sl
   13154:	add	sl, sl, #256	; 0x100
   13158:	add	r9, r0, r9
   1315c:	add	r7, r7, #1024	; 0x400
   13160:	add	r0, r8, #1024	; 0x400
   13164:	add	r1, r5, #256	; 0x100
   13168:	cmp	sl, r3
   1316c:	blt	130c0 <ReadInt32Data+0x1a30>
   13170:	ldr	r0, [sp, #12]
   13174:	str	r2, [sp, #24]
   13178:	cmp	sl, r0
   1317c:	bge	13dfc <ReadInt32Data+0x276c>
   13180:	sub	r6, r0, sl
   13184:	ldr	r0, [sp, #36]	; 0x24
   13188:	ldr	r1, [sp, #32]
   1318c:	add	r4, sp, #248	; 0xf8
   13190:	mov	r2, r6
   13194:	ldr	r3, [r0]
   13198:	mov	r0, r4
   1319c:	bl	18b8 <fread@plt>
   131a0:	add	r9, r0, r9
   131a4:	cmp	r6, #1
   131a8:	blt	13dfc <ReadInt32Data+0x276c>
   131ac:	mov	lr, #0
   131b0:	beq	138fc <ReadInt32Data+0x226c>
   131b4:	bic	lr, r6, #1
   131b8:	mov	r1, #1
   131bc:	str	r6, [sp, #36]	; 0x24
   131c0:	subs	r2, lr, #2
   131c4:	add	r2, r1, r2, lsr #1
   131c8:	and	ip, r2, #1
   131cc:	beq	138ac <ReadInt32Data+0x221c>
   131d0:	ldr	r0, [sp, #12]
   131d4:	ldr	r2, [sp, #24]
   131d8:	mov	r7, #32
   131dc:	mov	r5, #16
   131e0:	mov	r6, r4
   131e4:	sub	r2, r0, r2
   131e8:	sub	r2, r2, #256	; 0x100
   131ec:	bic	r2, r2, #1
   131f0:	sub	r2, r2, #2
   131f4:	add	r1, r1, r2, lsr #1
   131f8:	mvn	r3, r2, lsr #1
   131fc:	mov	r2, #0
   13200:	and	r1, r1, #1
   13204:	add	r3, r3, r1
   13208:	mov	r1, r8
   1320c:	vld1.64	{d16-d17}, [r6], r7
   13210:	adds	r3, r3, #2
   13214:	add	r2, r2, #4
   13218:	vcvt.s32.f64	s0, d16
   1321c:	vcvt.s32.f64	s2, d17
   13220:	vmov	r0, s0
   13224:	vmov.32	d16[0], r0
   13228:	vmov	r0, s2
   1322c:	vmov.32	d16[1], r0
   13230:	add	r0, r4, #16
   13234:	mov	r4, r6
   13238:	vst1.32	{d16}, [r1], r5
   1323c:	vld1.64	{d16-d17}, [r0]
   13240:	vcvt.s32.f64	s0, d16
   13244:	vcvt.s32.f64	s2, d17
   13248:	vmov	r0, s0
   1324c:	vmov.32	d16[0], r0
   13250:	vmov	r0, s2
   13254:	vmov.32	d16[1], r0
   13258:	vstr	d16, [r8, #8]
   1325c:	mov	r8, r1
   13260:	bne	1320c <ReadInt32Data+0x1b7c>
   13264:	b	138b0 <ReadInt32Data+0x2220>
   13268:	sub	r1, r7, #256	; 0x100
   1326c:	str	r5, [sp, #20]
   13270:	str	r8, [sp, #32]
   13274:	str	r7, [sp, #12]
   13278:	mov	r9, sl
   1327c:	add	r0, sl, #1024	; 0x400
   13280:	mov	r5, #0
   13284:	add	sl, sp, #248	; 0xf8
   13288:	mov	r7, #32
   1328c:	mov	r8, #0
   13290:	str	r1, [sp, #24]
   13294:	mov	r1, #256	; 0x100
   13298:	str	r9, [sp, #4]
   1329c:	mov	r4, r0
   132a0:	ldr	r0, [sp, #36]	; 0x24
   132a4:	mov	r6, r1
   132a8:	ldr	r1, [sp, #32]
   132ac:	mov	r2, #256	; 0x100
   132b0:	str	r5, [sp, #28]
   132b4:	ldr	r3, [r0]
   132b8:	mov	r0, sl
   132bc:	bl	18b8 <fread@plt>
   132c0:	mov	r1, #0
   132c4:	mov	r2, sl
   132c8:	add	r3, r2, #16
   132cc:	vld1.64	{d16-d17}, [r2], r7
   132d0:	add	r5, r9, r1
   132d4:	add	r1, r1, #16
   132d8:	cmp	r1, #1024	; 0x400
   132dc:	vmovn.i64	d16, q8
   132e0:	vst1.32	{d16}, [r5]!
   132e4:	vld1.64	{d16-d17}, [r3]
   132e8:	vmovn.i64	d16, q8
   132ec:	vstr	d16, [r5]
   132f0:	bne	132c8 <ReadInt32Data+0x1c38>
   132f4:	ldr	r2, [sp, #28]
   132f8:	add	r8, r0, r8
   132fc:	mov	r1, r6
   13300:	add	r9, r9, #1024	; 0x400
   13304:	add	r0, r4, #1024	; 0x400
   13308:	add	r1, r6, #256	; 0x100
   1330c:	add	r5, r2, #256	; 0x100
   13310:	ldr	r2, [sp, #24]
   13314:	cmp	r5, r2
   13318:	blt	1329c <ReadInt32Data+0x1c0c>
   1331c:	ldr	r7, [sp, #12]
   13320:	cmp	r5, r7
   13324:	bge	133f4 <ReadInt32Data+0x1d64>
   13328:	ldr	r0, [sp, #36]	; 0x24
   1332c:	ldr	r1, [sp, #32]
   13330:	sub	r7, r7, r5
   13334:	add	sl, sp, #248	; 0xf8
   13338:	mov	r2, r7
   1333c:	ldr	r3, [r0]
   13340:	mov	r0, sl
   13344:	bl	18b8 <fread@plt>
   13348:	mov	r9, r8
   1334c:	add	r9, r0, r8
   13350:	cmp	r7, #1
   13354:	blt	13980 <ReadInt32Data+0x22f0>
   13358:	mov	lr, #0
   1335c:	beq	13990 <ReadInt32Data+0x2300>
   13360:	bic	lr, r7, #1
   13364:	mov	r0, #1
   13368:	mov	r8, r9
   1336c:	str	r7, [sp, #24]
   13370:	subs	r1, lr, #2
   13374:	add	r1, r0, r1, lsr #1
   13378:	and	ip, r1, #1
   1337c:	beq	13944 <ReadInt32Data+0x22b4>
   13380:	ldr	r1, [sp, #12]
   13384:	ldr	r2, [sp, #28]
   13388:	mov	r9, #32
   1338c:	sub	r1, r1, r2
   13390:	sub	r1, r1, #256	; 0x100
   13394:	bic	r1, r1, #1
   13398:	sub	r1, r1, #2
   1339c:	add	r0, r0, r1, lsr #1
   133a0:	mvn	r2, r1, lsr #1
   133a4:	mov	r1, #16
   133a8:	and	r0, r0, #1
   133ac:	add	r3, r2, r0
   133b0:	mov	r2, #0
   133b4:	mov	r0, r4
   133b8:	add	r7, sl, #16
   133bc:	vld1.64	{d16-d17}, [sl], r9
   133c0:	adds	r3, r3, #2
   133c4:	add	r2, r2, #4
   133c8:	vmovn.i64	d16, q8
   133cc:	vst1.32	{d16}, [r0], r1
   133d0:	vld1.64	{d16-d17}, [r7]
   133d4:	vmovn.i64	d16, q8
   133d8:	vstr	d16, [r4, #8]
   133dc:	mov	r4, r0
   133e0:	bne	133b8 <ReadInt32Data+0x1d28>
   133e4:	b	13948 <ReadInt32Data+0x22b8>
   133e8:	ldr	r8, [sp, #32]
   133ec:	ldr	sl, [sp, #4]
   133f0:	b	139d0 <ReadInt32Data+0x2340>
   133f4:	ldr	r0, [sp, #32]
   133f8:	ldr	sl, [sp, #4]
   133fc:	mov	r9, r8
   13400:	mov	r8, r0
   13404:	b	139cc <ReadInt32Data+0x233c>
   13408:	mov	r2, #0
   1340c:	ldr	r0, [sp, #16]
   13410:	cmp	r0, #0
   13414:	beq	1343c <ReadInt32Data+0x1dac>
   13418:	ldr	r0, [r6, r2]
   1341c:	str	r0, [sp, #188]	; 0xbc
   13420:	add	r0, sp, #188	; 0xbc
   13424:	vld1.32	{d16[0]}, [r0 :32]
   13428:	add	r0, r2, r7
   1342c:	add	r0, sl, r0, lsl #2
   13430:	vmovl.s8	q8, d16
   13434:	vmovl.s16	q8, d16
   13438:	vst1.32	{d16-d17}, [r0]
   1343c:	ldr	r0, [sp, #36]	; 0x24
   13440:	ldr	r4, [sp, #12]
   13444:	cmp	r0, lr
   13448:	beq	13dfc <ReadInt32Data+0x276c>
   1344c:	ldr	r0, [sp, #24]
   13450:	add	r1, r6, lr
   13454:	add	r0, lr, r0
   13458:	add	r2, sl, r0, lsl #2
   1345c:	ldr	r0, [sp, #28]
   13460:	sub	r0, r4, r0
   13464:	sub	r0, r0, lr
   13468:	sub	r0, r0, #256	; 0x100
   1346c:	ldrsb	r3, [r1], #1
   13470:	subs	r0, r0, #1
   13474:	str	r3, [r2], #4
   13478:	bne	1346c <ReadInt32Data+0x1ddc>
   1347c:	b	13dfc <ReadInt32Data+0x276c>
   13480:	mov	r2, #0
   13484:	ldr	r0, [sp, #16]
   13488:	ldr	r3, [sp, #4]
   1348c:	cmp	r0, #0
   13490:	beq	134b8 <ReadInt32Data+0x1e28>
   13494:	ldr	r0, [r6, r2]
   13498:	str	r0, [sp, #228]	; 0xe4
   1349c:	add	r0, sp, #228	; 0xe4
   134a0:	vld1.32	{d16[0]}, [r0 :32]
   134a4:	add	r0, r2, r9
   134a8:	add	r0, r3, r0, lsl #2
   134ac:	vmovl.u8	q8, d16
   134b0:	vmovl.u16	q8, d16
   134b4:	vst1.32	{d16-d17}, [r0]
   134b8:	ldr	r0, [sp, #36]	; 0x24
   134bc:	cmp	r0, lr
   134c0:	beq	134f0 <ReadInt32Data+0x1e60>
   134c4:	ldr	r0, [sp, #24]
   134c8:	add	r1, r6, lr
   134cc:	add	r0, lr, r0
   134d0:	add	r2, r3, r0, lsl #2
   134d4:	sub	r0, r8, sl
   134d8:	sub	r0, r0, lr
   134dc:	sub	r0, r0, #256	; 0x100
   134e0:	ldrb	r3, [r1], #1
   134e4:	subs	r0, r0, #1
   134e8:	str	r3, [r2], #4
   134ec:	bne	134e0 <ReadInt32Data+0x1e50>
   134f0:	ldr	r9, [sp, #28]
   134f4:	b	13dfc <ReadInt32Data+0x276c>
   134f8:	mov	r1, #0
   134fc:	ldr	r9, [sp, #28]
   13500:	ldr	r8, [sp, #32]
   13504:	cmp	ip, #0
   13508:	beq	13538 <ReadInt32Data+0x1ea8>
   1350c:	add	r0, sp, #248	; 0xf8
   13510:	ldr	r2, [r0, r1, lsl #1]
   13514:	add	r0, r0, r1, lsl #1
   13518:	str	r2, [sp, #40]	; 0x28
   1351c:	ldr	r0, [r0, #4]
   13520:	str	r0, [sp, #44]	; 0x2c
   13524:	add	r0, sp, #40	; 0x28
   13528:	vld1.16	{d16}, [r0 :64]
   1352c:	add	r0, sl, r1, lsl #2
   13530:	vmovl.s16	q8, d16
   13534:	vst1.32	{d16-d17}, [r0]
   13538:	ldr	r7, [sp, #12]
   1353c:	cmp	lr, r7
   13540:	beq	13e00 <ReadInt32Data+0x2770>
   13544:	add	r0, sp, #248	; 0xf8
   13548:	add	r2, sl, lr, lsl #2
   1354c:	add	r1, r0, lr, lsl #1
   13550:	sub	r0, r7, lr
   13554:	ldrsh	r3, [r1], #2
   13558:	subs	r0, r0, #1
   1355c:	str	r3, [r2], #4
   13560:	bne	13554 <ReadInt32Data+0x1ec4>
   13564:	b	13e00 <ReadInt32Data+0x2770>
   13568:	mov	r1, #0
   1356c:	ldr	r9, [sp, #28]
   13570:	ldr	r8, [sp, #32]
   13574:	cmp	ip, #0
   13578:	beq	135a8 <ReadInt32Data+0x1f18>
   1357c:	add	r0, sp, #248	; 0xf8
   13580:	ldr	r2, [r0, r1, lsl #1]
   13584:	add	r0, r0, r1, lsl #1
   13588:	str	r2, [sp, #104]	; 0x68
   1358c:	ldr	r0, [r0, #4]
   13590:	str	r0, [sp, #108]	; 0x6c
   13594:	add	r0, sp, #104	; 0x68
   13598:	vld1.16	{d16}, [r0 :64]
   1359c:	add	r0, sl, r1, lsl #2
   135a0:	vmovl.u16	q8, d16
   135a4:	vst1.32	{d16-d17}, [r0]
   135a8:	ldr	r7, [sp, #12]
   135ac:	cmp	lr, r7
   135b0:	beq	13e00 <ReadInt32Data+0x2770>
   135b4:	add	r0, sp, #248	; 0xf8
   135b8:	add	r2, sl, lr, lsl #2
   135bc:	add	r1, r0, lr, lsl #1
   135c0:	sub	r0, r7, lr
   135c4:	ldrh	r3, [r1], #2
   135c8:	subs	r0, r0, #1
   135cc:	str	r3, [r2], #4
   135d0:	bne	135c4 <ReadInt32Data+0x1f34>
   135d4:	b	13e00 <ReadInt32Data+0x2770>
   135d8:	mov	r1, #0
   135dc:	cmp	ip, #0
   135e0:	beq	135fc <ReadInt32Data+0x1f6c>
   135e4:	add	r2, sp, #248	; 0xf8
   135e8:	add	r2, r2, r1, lsl #2
   135ec:	add	r1, sl, r1, lsl #2
   135f0:	vld1.32	{d16-d17}, [r2]
   135f4:	vcvt.s32.f32	q8, q8
   135f8:	vst1.32	{d16-d17}, [r1]
   135fc:	cmp	lr, r7
   13600:	beq	13e00 <ReadInt32Data+0x2770>
   13604:	add	r1, sp, #248	; 0xf8
   13608:	add	r2, sl, lr, lsl #2
   1360c:	sub	r0, r7, lr
   13610:	add	r1, r1, lr, lsl #2
   13614:	vldr	s0, [r1]
   13618:	add	r1, r1, #4
   1361c:	subs	r0, r0, #1
   13620:	vcvt.s32.f32	s0, s0
   13624:	vmov	r3, s0
   13628:	str	r3, [r2], #4
   1362c:	bne	13614 <ReadInt32Data+0x1f84>
   13630:	b	13e00 <ReadInt32Data+0x2770>
   13634:	mov	r1, #0
   13638:	ldr	r8, [sp, #32]
   1363c:	cmp	ip, #0
   13640:	beq	13670 <ReadInt32Data+0x1fe0>
   13644:	add	r0, sp, #248	; 0xf8
   13648:	add	r0, r0, r1, lsl #3
   1364c:	vld1.64	{d16-d17}, [r0]
   13650:	vcvt.s32.f64	s0, d16
   13654:	vmov	r0, s0
   13658:	vcvt.s32.f64	s0, d17
   1365c:	vmov.32	d16[0], r0
   13660:	add	r0, sl, r1, lsl #2
   13664:	vmov	r1, s0
   13668:	vmov.32	d16[1], r1
   1366c:	vstr	d16, [r0]
   13670:	ldr	r7, [sp, #12]
   13674:	cmp	lr, r7
   13678:	beq	13e00 <ReadInt32Data+0x2770>
   1367c:	add	r0, sp, #248	; 0xf8
   13680:	add	r1, sl, lr, lsl #2
   13684:	sub	r2, r7, lr
   13688:	add	r0, r0, lr, lsl #3
   1368c:	vldr	d16, [r0]
   13690:	add	r0, r0, #8
   13694:	subs	r2, r2, #1
   13698:	vcvt.s32.f64	s0, d16
   1369c:	vmov	r3, s0
   136a0:	str	r3, [r1], #4
   136a4:	bne	1368c <ReadInt32Data+0x1ffc>
   136a8:	b	13e00 <ReadInt32Data+0x2770>
   136ac:	mov	r1, #0
   136b0:	ldr	r8, [sp, #32]
   136b4:	ldr	r4, [sp, #36]	; 0x24
   136b8:	ldr	r5, [sp, #20]
   136bc:	cmp	ip, #0
   136c0:	beq	136dc <ReadInt32Data+0x204c>
   136c4:	add	r0, sp, #248	; 0xf8
   136c8:	add	r0, r0, r1, lsl #3
   136cc:	vld1.64	{d16-d17}, [r0]
   136d0:	add	r0, sl, r1, lsl #2
   136d4:	vmovn.i64	d16, q8
   136d8:	vstr	d16, [r0]
   136dc:	cmp	lr, r7
   136e0:	beq	139d4 <ReadInt32Data+0x2344>
   136e4:	add	r0, sp, #248	; 0xf8
   136e8:	add	r2, sl, lr, lsl #2
   136ec:	add	r1, r0, lr, lsl #3
   136f0:	sub	r0, r7, lr
   136f4:	ldr	r3, [r1], #8
   136f8:	subs	r0, r0, #1
   136fc:	str	r3, [r2], #4
   13700:	bne	136f4 <ReadInt32Data+0x2064>
   13704:	b	139d4 <ReadInt32Data+0x2344>
   13708:	mov	r2, #0
   1370c:	ldr	r0, [sp, #28]
   13710:	ldr	r3, [sp, #4]
   13714:	ldr	r8, [sp, #32]
   13718:	mov	r9, sl
   1371c:	cmp	r0, #0
   13720:	beq	13754 <ReadInt32Data+0x20c4>
   13724:	add	r0, sp, #248	; 0xf8
   13728:	ldr	r1, [r0, r2, lsl #1]
   1372c:	add	r0, r0, r2, lsl #1
   13730:	str	r1, [sp, #64]	; 0x40
   13734:	ldr	r0, [r0, #4]
   13738:	str	r0, [sp, #68]	; 0x44
   1373c:	add	r0, sp, #64	; 0x40
   13740:	vld1.16	{d16}, [r0 :64]
   13744:	add	r0, r2, r7
   13748:	add	r0, r3, r0, lsl #2
   1374c:	vmovl.s16	q8, d16
   13750:	vst1.32	{d16-d17}, [r0]
   13754:	ldr	r0, [sp, #36]	; 0x24
   13758:	ldr	r4, [sp, #12]
   1375c:	cmp	r0, lr
   13760:	beq	13e00 <ReadInt32Data+0x2770>
   13764:	add	r0, sp, #248	; 0xf8
   13768:	add	r1, r0, lr, lsl #1
   1376c:	ldr	r0, [sp, #20]
   13770:	add	r0, lr, r0
   13774:	add	r2, r3, r0, lsl #2
   13778:	ldr	r0, [sp, #24]
   1377c:	sub	r0, r4, r0
   13780:	sub	r0, r0, lr
   13784:	sub	r0, r0, #256	; 0x100
   13788:	ldrsh	r3, [r1], #2
   1378c:	subs	r0, r0, #1
   13790:	str	r3, [r2], #4
   13794:	bne	13788 <ReadInt32Data+0x20f8>
   13798:	b	13e00 <ReadInt32Data+0x2770>
   1379c:	mov	r2, #0
   137a0:	ldr	r0, [sp, #28]
   137a4:	ldr	r3, [sp, #4]
   137a8:	ldr	r8, [sp, #32]
   137ac:	mov	r9, sl
   137b0:	cmp	r0, #0
   137b4:	beq	137e8 <ReadInt32Data+0x2158>
   137b8:	add	r0, sp, #248	; 0xf8
   137bc:	ldr	r1, [r0, r2, lsl #1]
   137c0:	add	r0, r0, r2, lsl #1
   137c4:	str	r1, [sp, #128]	; 0x80
   137c8:	ldr	r0, [r0, #4]
   137cc:	str	r0, [sp, #132]	; 0x84
   137d0:	add	r0, sp, #128	; 0x80
   137d4:	vld1.16	{d16}, [r0 :64]
   137d8:	add	r0, r2, r7
   137dc:	add	r0, r3, r0, lsl #2
   137e0:	vmovl.u16	q8, d16
   137e4:	vst1.32	{d16-d17}, [r0]
   137e8:	ldr	r0, [sp, #36]	; 0x24
   137ec:	ldr	r4, [sp, #12]
   137f0:	cmp	r0, lr
   137f4:	beq	13e00 <ReadInt32Data+0x2770>
   137f8:	add	r0, sp, #248	; 0xf8
   137fc:	add	r1, r0, lr, lsl #1
   13800:	ldr	r0, [sp, #20]
   13804:	add	r0, lr, r0
   13808:	add	r2, r3, r0, lsl #2
   1380c:	ldr	r0, [sp, #24]
   13810:	sub	r0, r4, r0
   13814:	sub	r0, r0, lr
   13818:	sub	r0, r0, #256	; 0x100
   1381c:	ldrh	r3, [r1], #2
   13820:	subs	r0, r0, #1
   13824:	str	r3, [r2], #4
   13828:	bne	1381c <ReadInt32Data+0x218c>
   1382c:	b	13e00 <ReadInt32Data+0x2770>
   13830:	mov	r2, #0
   13834:	cmp	ip, #0
   13838:	beq	1385c <ReadInt32Data+0x21cc>
   1383c:	add	r1, sp, #248	; 0xf8
   13840:	add	r1, r1, r2, lsl #2
   13844:	vld1.32	{d16-d17}, [r1]
   13848:	add	r1, r2, sl
   1384c:	ldr	r2, [sp, #4]
   13850:	add	r1, r2, r1, lsl #2
   13854:	vcvt.s32.f32	q8, q8
   13858:	vst1.32	{d16-d17}, [r1]
   1385c:	cmp	lr, r0
   13860:	beq	13dfc <ReadInt32Data+0x276c>
   13864:	ldr	r3, [sp, #4]
   13868:	add	r2, r0, r8
   1386c:	ldr	r7, [sp, #28]
   13870:	add	r1, sp, #248	; 0xf8
   13874:	add	r1, r1, r0, lsl #2
   13878:	add	r2, r3, r2, lsl #2
   1387c:	ldr	r3, [sp, #12]
   13880:	sub	r3, r3, r7
   13884:	sub	r0, r3, r0
   13888:	sub	r0, r0, #256	; 0x100
   1388c:	vldr	s0, [r1]
   13890:	add	r1, r1, #4
   13894:	subs	r0, r0, #1
   13898:	vcvt.s32.f32	s0, s0
   1389c:	vmov	r3, s0
   138a0:	str	r3, [r2], #4
   138a4:	bne	1388c <ReadInt32Data+0x21fc>
   138a8:	b	13dfc <ReadInt32Data+0x276c>
   138ac:	mov	r2, #0
   138b0:	ldr	r5, [sp, #28]
   138b4:	cmp	ip, #0
   138b8:	beq	138f0 <ReadInt32Data+0x2260>
   138bc:	add	r0, sp, #248	; 0xf8
   138c0:	add	r0, r0, r2, lsl #3
   138c4:	vld1.64	{d16-d17}, [r0]
   138c8:	add	r0, r2, sl
   138cc:	vcvt.s32.f64	s0, d16
   138d0:	vmov	r1, s0
   138d4:	vcvt.s32.f64	s0, d17
   138d8:	vmov.32	d16[0], r1
   138dc:	ldr	r1, [sp, #4]
   138e0:	add	r0, r1, r0, lsl #2
   138e4:	vmov	r1, s0
   138e8:	vmov.32	d16[1], r1
   138ec:	vstr	d16, [r0]
   138f0:	ldr	r0, [sp, #36]	; 0x24
   138f4:	cmp	r0, lr
   138f8:	beq	13dfc <ReadInt32Data+0x276c>
   138fc:	ldr	r2, [sp, #4]
   13900:	add	r0, sp, #248	; 0xf8
   13904:	ldr	r3, [sp, #24]
   13908:	add	r1, r0, lr, lsl #3
   1390c:	add	r0, lr, r5
   13910:	add	r2, r2, r0, lsl #2
   13914:	ldr	r0, [sp, #12]
   13918:	sub	r0, r0, r3
   1391c:	sub	r0, r0, lr
   13920:	sub	r0, r0, #256	; 0x100
   13924:	vldr	d16, [r1]
   13928:	add	r1, r1, #8
   1392c:	subs	r0, r0, #1
   13930:	vcvt.s32.f64	s0, d16
   13934:	vmov	r3, s0
   13938:	str	r3, [r2], #4
   1393c:	bne	13924 <ReadInt32Data+0x2294>
   13940:	b	13dfc <ReadInt32Data+0x276c>
   13944:	mov	r2, #0
   13948:	cmp	ip, #0
   1394c:	mov	r9, r8
   13950:	beq	13974 <ReadInt32Data+0x22e4>
   13954:	add	r0, sp, #248	; 0xf8
   13958:	ldr	r1, [sp, #4]
   1395c:	add	r0, r0, r2, lsl #3
   13960:	vld1.64	{d16-d17}, [r0]
   13964:	add	r0, r2, r5
   13968:	add	r0, r1, r0, lsl #2
   1396c:	vmovn.i64	d16, q8
   13970:	vstr	d16, [r0]
   13974:	ldr	r0, [sp, #24]
   13978:	cmp	r0, lr
   1397c:	bne	13990 <ReadInt32Data+0x2300>
   13980:	ldr	r8, [sp, #32]
   13984:	ldr	r7, [sp, #12]
   13988:	ldr	sl, [sp, #4]
   1398c:	b	139cc <ReadInt32Data+0x233c>
   13990:	ldr	r7, [sp, #12]
   13994:	ldr	r2, [sp, #28]
   13998:	ldr	sl, [sp, #4]
   1399c:	add	r0, sp, #248	; 0xf8
   139a0:	add	r1, lr, r6
   139a4:	add	r0, r0, lr, lsl #3
   139a8:	sub	r2, r7, r2
   139ac:	add	r1, sl, r1, lsl #2
   139b0:	sub	r2, r2, lr
   139b4:	sub	r2, r2, #256	; 0x100
   139b8:	ldr	r3, [r0], #8
   139bc:	subs	r2, r2, #1
   139c0:	str	r3, [r1], #4
   139c4:	bne	139b8 <ReadInt32Data+0x2328>
   139c8:	ldr	r8, [sp, #32]
   139cc:	ldr	r4, [sp, #36]	; 0x24
   139d0:	ldr	r5, [sp, #20]
   139d4:	cmp	r5, #13
   139d8:	bne	13e00 <ReadInt32Data+0x2770>
   139dc:	ldr	r0, [r4, #20]
   139e0:	cmp	r0, #0
   139e4:	beq	13a30 <ReadInt32Data+0x23a0>
   139e8:	cmp	r7, #256	; 0x100
   139ec:	bgt	13ac8 <ReadInt32Data+0x2438>
   139f0:	ldr	r3, [r4]
   139f4:	add	r4, sp, #248	; 0xf8
   139f8:	mov	r1, r8
   139fc:	mov	r2, r7
   13a00:	mov	r0, r4
   13a04:	bl	18b8 <fread@plt>
   13a08:	add	r9, r0, r9
   13a0c:	cmp	r7, #1
   13a10:	blt	13e00 <ReadInt32Data+0x2770>
   13a14:	mov	r0, r4
   13a18:	bl	1bd4 <Mat_uint64Swap>
   13a1c:	str	r0, [sl], #4
   13a20:	add	r4, r4, #8
   13a24:	subs	r7, r7, #1
   13a28:	bne	13a14 <ReadInt32Data+0x2384>
   13a2c:	b	13e00 <ReadInt32Data+0x2770>
   13a30:	cmp	r7, #256	; 0x100
   13a34:	bgt	13ba0 <ReadInt32Data+0x2510>
   13a38:	ldr	r3, [r4]
   13a3c:	add	r4, sp, #248	; 0xf8
   13a40:	mov	r1, r8
   13a44:	mov	r2, r7
   13a48:	mov	r0, r4
   13a4c:	bl	18b8 <fread@plt>
   13a50:	add	r9, r0, r9
   13a54:	cmp	r7, #1
   13a58:	blt	13e00 <ReadInt32Data+0x2770>
   13a5c:	mov	lr, #0
   13a60:	beq	13d64 <ReadInt32Data+0x26d4>
   13a64:	bic	lr, r7, #1
   13a68:	mov	r2, #1
   13a6c:	str	r8, [sp, #32]
   13a70:	subs	r1, lr, #2
   13a74:	add	r1, r2, r1, lsr #1
   13a78:	and	ip, r1, #1
   13a7c:	beq	13d34 <ReadInt32Data+0x26a4>
   13a80:	sub	r3, r1, ip
   13a84:	mov	r1, #0
   13a88:	mov	r8, #32
   13a8c:	mov	r6, #16
   13a90:	mov	r2, sl
   13a94:	mov	r5, sl
   13a98:	add	r0, r4, #16
   13a9c:	vld1.64	{d16-d17}, [r4], r8
   13aa0:	subs	r3, r3, #2
   13aa4:	add	r1, r1, #4
   13aa8:	vmovn.i64	d16, q8
   13aac:	vst1.32	{d16}, [r5], r6
   13ab0:	vld1.64	{d16-d17}, [r0]
   13ab4:	vmovn.i64	d16, q8
   13ab8:	vstr	d16, [r2, #8]
   13abc:	mov	r2, r5
   13ac0:	bne	13a98 <ReadInt32Data+0x2408>
   13ac4:	b	13d38 <ReadInt32Data+0x26a8>
   13ac8:	sub	r0, r7, #256	; 0x100
   13acc:	str	r8, [sp, #32]
   13ad0:	mov	r8, sl
   13ad4:	add	r1, sl, #1024	; 0x400
   13ad8:	str	r7, [sp, #12]
   13adc:	str	r0, [sp, #28]
   13ae0:	mov	r0, #0
   13ae4:	mov	r5, r1
   13ae8:	ldr	r3, [r4]
   13aec:	ldr	r1, [sp, #32]
   13af0:	add	r4, sp, #248	; 0xf8
   13af4:	mov	sl, r0
   13af8:	mov	r2, #256	; 0x100
   13afc:	mov	r0, r4
   13b00:	bl	18b8 <fread@plt>
   13b04:	mov	r6, r0
   13b08:	mov	r7, #0
   13b0c:	mov	r0, r4
   13b10:	bl	1bd4 <Mat_uint64Swap>
   13b14:	str	r0, [r8, r7, lsl #2]
   13b18:	add	r7, r7, #1
   13b1c:	add	r4, r4, #8
   13b20:	cmp	r7, #256	; 0x100
   13b24:	bne	13b0c <ReadInt32Data+0x247c>
   13b28:	ldr	r2, [sp, #28]
   13b2c:	ldr	r4, [sp, #36]	; 0x24
   13b30:	add	r0, sl, #256	; 0x100
   13b34:	add	r9, r6, r9
   13b38:	add	r8, r8, #1024	; 0x400
   13b3c:	add	r1, r5, #1024	; 0x400
   13b40:	cmp	r0, r2
   13b44:	blt	13ae4 <ReadInt32Data+0x2454>
   13b48:	ldr	r7, [sp, #12]
   13b4c:	cmp	r0, r7
   13b50:	bge	13dfc <ReadInt32Data+0x276c>
   13b54:	ldr	r3, [r4]
   13b58:	ldr	r1, [sp, #32]
   13b5c:	sub	r6, r7, r0
   13b60:	add	r4, sp, #248	; 0xf8
   13b64:	mov	r0, r4
   13b68:	mov	r2, r6
   13b6c:	bl	18b8 <fread@plt>
   13b70:	add	r9, r0, r9
   13b74:	cmp	r6, #1
   13b78:	blt	13dfc <ReadInt32Data+0x276c>
   13b7c:	sub	r0, r7, sl
   13b80:	sub	r6, r0, #256	; 0x100
   13b84:	mov	r0, r4
   13b88:	bl	1bd4 <Mat_uint64Swap>
   13b8c:	str	r0, [r5], #4
   13b90:	add	r4, r4, #8
   13b94:	subs	r6, r6, #1
   13b98:	bne	13b84 <ReadInt32Data+0x24f4>
   13b9c:	b	13dfc <ReadInt32Data+0x276c>
   13ba0:	mov	r0, r8
   13ba4:	sub	r1, r7, #256	; 0x100
   13ba8:	mov	r8, r9
   13bac:	str	r7, [sp, #12]
   13bb0:	mov	r9, sl
   13bb4:	mov	r7, #32
   13bb8:	str	r0, [sp, #32]
   13bbc:	add	r0, sl, #1024	; 0x400
   13bc0:	str	r1, [sp, #28]
   13bc4:	mov	sl, #0
   13bc8:	mov	r1, #256	; 0x100
   13bcc:	str	r9, [sp, #4]
   13bd0:	mov	r4, r0
   13bd4:	ldr	r0, [sp, #36]	; 0x24
   13bd8:	mov	r6, r1
   13bdc:	ldr	r1, [sp, #32]
   13be0:	add	r5, sp, #248	; 0xf8
   13be4:	mov	r2, #256	; 0x100
   13be8:	ldr	r3, [r0]
   13bec:	mov	r0, r5
   13bf0:	bl	18b8 <fread@plt>
   13bf4:	mov	r1, #0
   13bf8:	mov	r2, r5
   13bfc:	add	r3, r2, #16
   13c00:	vld1.64	{d16-d17}, [r2], r7
   13c04:	add	r5, r9, r1
   13c08:	add	r1, r1, #16
   13c0c:	cmp	r1, #1024	; 0x400
   13c10:	vmovn.i64	d16, q8
   13c14:	vst1.32	{d16}, [r5]!
   13c18:	vld1.64	{d16-d17}, [r3]
   13c1c:	vmovn.i64	d16, q8
   13c20:	vstr	d16, [r5]
   13c24:	bne	13bfc <ReadInt32Data+0x256c>
   13c28:	ldr	r3, [sp, #28]
   13c2c:	mov	r2, sl
   13c30:	add	sl, sl, #256	; 0x100
   13c34:	add	r8, r0, r8
   13c38:	add	r9, r9, #1024	; 0x400
   13c3c:	add	r0, r4, #1024	; 0x400
   13c40:	add	r1, r6, #256	; 0x100
   13c44:	cmp	sl, r3
   13c48:	blt	13bd0 <ReadInt32Data+0x2540>
   13c4c:	ldr	r0, [sp, #12]
   13c50:	str	r2, [sp, #28]
   13c54:	cmp	sl, r0
   13c58:	bge	13d24 <ReadInt32Data+0x2694>
   13c5c:	sub	r2, r0, sl
   13c60:	ldr	r0, [sp, #36]	; 0x24
   13c64:	ldr	r1, [sp, #32]
   13c68:	add	r7, sp, #248	; 0xf8
   13c6c:	mov	r5, r6
   13c70:	str	r2, [sp, #24]
   13c74:	ldr	r3, [r0]
   13c78:	mov	r0, r7
   13c7c:	bl	18b8 <fread@plt>
   13c80:	mov	r9, r8
   13c84:	add	r9, r0, r8
   13c88:	ldr	r0, [sp, #24]
   13c8c:	cmp	r0, #1
   13c90:	blt	13dfc <ReadInt32Data+0x276c>
   13c94:	ldr	r3, [sp, #12]
   13c98:	mov	lr, #0
   13c9c:	beq	13dc8 <ReadInt32Data+0x2738>
   13ca0:	bic	lr, r0, #1
   13ca4:	mov	r8, r0
   13ca8:	mov	r0, #1
   13cac:	subs	r1, lr, #2
   13cb0:	add	r1, r0, r1, lsr #1
   13cb4:	and	r1, r1, #1
   13cb8:	str	r1, [sp, #36]	; 0x24
   13cbc:	beq	13d88 <ReadInt32Data+0x26f8>
   13cc0:	ldr	r1, [sp, #28]
   13cc4:	mov	ip, #32
   13cc8:	sub	r1, r3, r1
   13ccc:	sub	r1, r1, #256	; 0x100
   13cd0:	bic	r1, r1, #1
   13cd4:	sub	r1, r1, #2
   13cd8:	add	r0, r0, r1, lsr #1
   13cdc:	mvn	r2, r1, lsr #1
   13ce0:	mov	r1, #16
   13ce4:	and	r0, r0, #1
   13ce8:	add	r3, r2, r0
   13cec:	mov	r2, #0
   13cf0:	mov	r0, r4
   13cf4:	add	r5, r7, #16
   13cf8:	vld1.64	{d16-d17}, [r7], ip
   13cfc:	adds	r3, r3, #2
   13d00:	add	r2, r2, #4
   13d04:	vmovn.i64	d16, q8
   13d08:	vst1.32	{d16}, [r0], r1
   13d0c:	vld1.64	{d16-d17}, [r5]
   13d10:	vmovn.i64	d16, q8
   13d14:	vstr	d16, [r4, #8]
   13d18:	mov	r4, r0
   13d1c:	bne	13cf4 <ReadInt32Data+0x2664>
   13d20:	b	13d8c <ReadInt32Data+0x26fc>
   13d24:	ldr	r0, [sp, #32]
   13d28:	mov	r9, r8
   13d2c:	mov	r8, r0
   13d30:	b	13e00 <ReadInt32Data+0x2770>
   13d34:	mov	r1, #0
   13d38:	ldr	r8, [sp, #32]
   13d3c:	cmp	ip, #0
   13d40:	beq	13d5c <ReadInt32Data+0x26cc>
   13d44:	add	r0, sp, #248	; 0xf8
   13d48:	add	r0, r0, r1, lsl #3
   13d4c:	vld1.64	{d16-d17}, [r0]
   13d50:	add	r0, sl, r1, lsl #2
   13d54:	vmovn.i64	d16, q8
   13d58:	vstr	d16, [r0]
   13d5c:	cmp	lr, r7
   13d60:	beq	13e00 <ReadInt32Data+0x2770>
   13d64:	add	r0, sp, #248	; 0xf8
   13d68:	add	r2, sl, lr, lsl #2
   13d6c:	add	r1, r0, lr, lsl #3
   13d70:	sub	r0, r7, lr
   13d74:	ldr	r3, [r1], #8
   13d78:	subs	r0, r0, #1
   13d7c:	str	r3, [r2], #4
   13d80:	bne	13d74 <ReadInt32Data+0x26e4>
   13d84:	b	13e00 <ReadInt32Data+0x2770>
   13d88:	mov	r2, #0
   13d8c:	ldr	r0, [sp, #36]	; 0x24
   13d90:	cmp	r0, #0
   13d94:	beq	13db8 <ReadInt32Data+0x2728>
   13d98:	add	r0, sp, #248	; 0xf8
   13d9c:	ldr	r1, [sp, #4]
   13da0:	add	r0, r0, r2, lsl #3
   13da4:	vld1.64	{d16-d17}, [r0]
   13da8:	add	r0, r2, sl
   13dac:	add	r0, r1, r0, lsl #2
   13db0:	vmovn.i64	d16, q8
   13db4:	vstr	d16, [r0]
   13db8:	ldr	r3, [sp, #12]
   13dbc:	cmp	r8, lr
   13dc0:	mov	r5, r6
   13dc4:	beq	13dfc <ReadInt32Data+0x276c>
   13dc8:	ldr	r2, [sp, #4]
   13dcc:	add	r1, lr, r5
   13dd0:	add	r0, sp, #248	; 0xf8
   13dd4:	add	r0, r0, lr, lsl #3
   13dd8:	add	r1, r2, r1, lsl #2
   13ddc:	ldr	r2, [sp, #28]
   13de0:	sub	r2, r3, r2
   13de4:	sub	r2, r2, lr
   13de8:	sub	r2, r2, #256	; 0x100
   13dec:	ldr	r3, [r0], #8
   13df0:	subs	r2, r2, #1
   13df4:	str	r3, [r1], #4
   13df8:	bne	13dec <ReadInt32Data+0x275c>
   13dfc:	ldr	r8, [sp, #32]
   13e00:	mul	r0, r9, r8
   13e04:	sub	sp, fp, #28
   13e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013e0c <ReadCompressedInt32Data>:
   13e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e10:	add	fp, sp, #28
   13e14:	sub	sp, sp, #12
   13e18:	mov	r7, r0
   13e1c:	mov	r0, #0
   13e20:	cmp	r1, #0
   13e24:	beq	13e38 <ReadCompressedInt32Data+0x2c>
   13e28:	cmp	r7, #0
   13e2c:	movne	r5, r2
   13e30:	cmpne	r2, #0
   13e34:	bne	13e40 <ReadCompressedInt32Data+0x34>
   13e38:	sub	sp, fp, #28
   13e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e40:	ldr	sl, [fp, #8]
   13e44:	mov	r0, r3
   13e48:	mov	r4, r3
   13e4c:	mov	r6, r1
   13e50:	bl	1924 <Mat_SizeOf@plt>
   13e54:	mov	r9, r0
   13e58:	sub	r0, r4, #1
   13e5c:	cmp	r0, #12
   13e60:	bhi	14330 <ReadCompressedInt32Data+0x524>
   13e64:	add	r1, pc, #4
   13e68:	ldr	r0, [r1, r0, lsl #2]
   13e6c:	add	pc, r1, r0
   13e70:	.word	0x00000034
   13e74:	.word	0x0000006c
   13e78:	.word	0x000000a4
   13e7c:	.word	0x000000ec
   13e80:	.word	0x00000134
   13e84:	.word	0x0000017c
   13e88:	.word	0x000001c4
   13e8c:	.word	0x000004c0
   13e90:	.word	0x00000214
   13e94:	.word	0x000004c0
   13e98:	.word	0x000004c0
   13e9c:	.word	0x00000264
   13ea0:	.word	0x000002ac
   13ea4:	cmp	sl, #1
   13ea8:	blt	14330 <ReadCompressedInt32Data+0x524>
   13eac:	mov	r8, sp
   13eb0:	mov	r4, sl
   13eb4:	mov	r0, r7
   13eb8:	mov	r1, r6
   13ebc:	mov	r2, r8
   13ec0:	mov	r3, r9
   13ec4:	bl	3238 <InflateData>
   13ec8:	ldrsb	r0, [sp]
   13ecc:	subs	r4, r4, #1
   13ed0:	str	r0, [r5], #4
   13ed4:	bne	13eb4 <ReadCompressedInt32Data+0xa8>
   13ed8:	b	14330 <ReadCompressedInt32Data+0x524>
   13edc:	cmp	sl, #1
   13ee0:	blt	14330 <ReadCompressedInt32Data+0x524>
   13ee4:	mov	r8, sp
   13ee8:	mov	r4, sl
   13eec:	mov	r0, r7
   13ef0:	mov	r1, r6
   13ef4:	mov	r2, r8
   13ef8:	mov	r3, r9
   13efc:	bl	3238 <InflateData>
   13f00:	ldrb	r0, [sp]
   13f04:	subs	r4, r4, #1
   13f08:	str	r0, [r5], #4
   13f0c:	bne	13eec <ReadCompressedInt32Data+0xe0>
   13f10:	b	14330 <ReadCompressedInt32Data+0x524>
   13f14:	ldr	r0, [r7, #20]
   13f18:	cmp	r0, #0
   13f1c:	beq	14164 <ReadCompressedInt32Data+0x358>
   13f20:	cmp	sl, #1
   13f24:	blt	14330 <ReadCompressedInt32Data+0x524>
   13f28:	mov	r8, sp
   13f2c:	mov	r4, sl
   13f30:	mov	r0, r7
   13f34:	mov	r1, r6
   13f38:	mov	r2, r8
   13f3c:	mov	r3, r9
   13f40:	bl	3238 <InflateData>
   13f44:	mov	r0, r8
   13f48:	bl	1c20 <Mat_int16Swap>
   13f4c:	str	r0, [r5], #4
   13f50:	subs	r4, r4, #1
   13f54:	bne	13f30 <ReadCompressedInt32Data+0x124>
   13f58:	b	14330 <ReadCompressedInt32Data+0x524>
   13f5c:	ldr	r0, [r7, #20]
   13f60:	cmp	r0, #0
   13f64:	beq	1419c <ReadCompressedInt32Data+0x390>
   13f68:	cmp	sl, #1
   13f6c:	blt	14330 <ReadCompressedInt32Data+0x524>
   13f70:	mov	r8, sp
   13f74:	mov	r4, sl
   13f78:	mov	r0, r7
   13f7c:	mov	r1, r6
   13f80:	mov	r2, r8
   13f84:	mov	r3, r9
   13f88:	bl	3238 <InflateData>
   13f8c:	mov	r0, r8
   13f90:	bl	1c34 <Mat_uint16Swap>
   13f94:	str	r0, [r5], #4
   13f98:	subs	r4, r4, #1
   13f9c:	bne	13f78 <ReadCompressedInt32Data+0x16c>
   13fa0:	b	14330 <ReadCompressedInt32Data+0x524>
   13fa4:	ldr	r0, [r7, #20]
   13fa8:	cmp	r0, #0
   13fac:	beq	141d4 <ReadCompressedInt32Data+0x3c8>
   13fb0:	cmp	sl, #1
   13fb4:	blt	14330 <ReadCompressedInt32Data+0x524>
   13fb8:	mov	r8, sp
   13fbc:	mov	r4, sl
   13fc0:	mov	r0, r7
   13fc4:	mov	r1, r6
   13fc8:	mov	r2, r8
   13fcc:	mov	r3, r9
   13fd0:	bl	3238 <InflateData>
   13fd4:	mov	r0, r8
   13fd8:	bl	1bf8 <Mat_int32Swap>
   13fdc:	str	r0, [r5], #4
   13fe0:	subs	r4, r4, #1
   13fe4:	bne	13fc0 <ReadCompressedInt32Data+0x1b4>
   13fe8:	b	14330 <ReadCompressedInt32Data+0x524>
   13fec:	ldr	r0, [r7, #20]
   13ff0:	cmp	r0, #0
   13ff4:	beq	1420c <ReadCompressedInt32Data+0x400>
   13ff8:	cmp	sl, #1
   13ffc:	blt	14330 <ReadCompressedInt32Data+0x524>
   14000:	mov	r8, sp
   14004:	mov	r4, sl
   14008:	mov	r0, r7
   1400c:	mov	r1, r6
   14010:	mov	r2, r8
   14014:	mov	r3, r9
   14018:	bl	3238 <InflateData>
   1401c:	mov	r0, r8
   14020:	bl	1c0c <Mat_uint32Swap>
   14024:	str	r0, [r5], #4
   14028:	subs	r4, r4, #1
   1402c:	bne	14008 <ReadCompressedInt32Data+0x1fc>
   14030:	b	14330 <ReadCompressedInt32Data+0x524>
   14034:	ldr	r0, [r7, #20]
   14038:	cmp	r0, #0
   1403c:	beq	14244 <ReadCompressedInt32Data+0x438>
   14040:	cmp	sl, #1
   14044:	blt	14330 <ReadCompressedInt32Data+0x524>
   14048:	mov	r8, sp
   1404c:	mov	r4, sl
   14050:	mov	r0, r7
   14054:	mov	r1, r6
   14058:	mov	r2, r8
   1405c:	mov	r3, r9
   14060:	bl	3238 <InflateData>
   14064:	mov	r0, r8
   14068:	bl	1c4c <Mat_floatSwap>
   1406c:	vcvt.s32.f32	s0, s0
   14070:	subs	r4, r4, #1
   14074:	vmov	r0, s0
   14078:	str	r0, [r5], #4
   1407c:	bne	14050 <ReadCompressedInt32Data+0x244>
   14080:	b	14330 <ReadCompressedInt32Data+0x524>
   14084:	ldr	r0, [r7, #20]
   14088:	cmp	r0, #0
   1408c:	beq	14284 <ReadCompressedInt32Data+0x478>
   14090:	cmp	sl, #1
   14094:	blt	14330 <ReadCompressedInt32Data+0x524>
   14098:	mov	r8, sp
   1409c:	mov	r4, sl
   140a0:	mov	r0, r7
   140a4:	mov	r1, r6
   140a8:	mov	r2, r8
   140ac:	mov	r3, r9
   140b0:	bl	3238 <InflateData>
   140b4:	mov	r0, r8
   140b8:	bl	1c90 <Mat_doubleSwap>
   140bc:	vcvt.s32.f64	s0, d0
   140c0:	subs	r4, r4, #1
   140c4:	vmov	r0, s0
   140c8:	str	r0, [r5], #4
   140cc:	bne	140a0 <ReadCompressedInt32Data+0x294>
   140d0:	b	14330 <ReadCompressedInt32Data+0x524>
   140d4:	ldr	r0, [r7, #20]
   140d8:	cmp	r0, #0
   140dc:	beq	142c4 <ReadCompressedInt32Data+0x4b8>
   140e0:	cmp	sl, #1
   140e4:	blt	14330 <ReadCompressedInt32Data+0x524>
   140e8:	mov	r8, sp
   140ec:	mov	r4, sl
   140f0:	mov	r0, r7
   140f4:	mov	r1, r6
   140f8:	mov	r2, r8
   140fc:	mov	r3, r9
   14100:	bl	3238 <InflateData>
   14104:	mov	r0, r8
   14108:	bl	1b84 <Mat_int64Swap>
   1410c:	str	r0, [r5], #4
   14110:	subs	r4, r4, #1
   14114:	bne	140f0 <ReadCompressedInt32Data+0x2e4>
   14118:	b	14330 <ReadCompressedInt32Data+0x524>
   1411c:	ldr	r0, [r7, #20]
   14120:	cmp	r0, #0
   14124:	beq	142fc <ReadCompressedInt32Data+0x4f0>
   14128:	cmp	sl, #1
   1412c:	blt	14330 <ReadCompressedInt32Data+0x524>
   14130:	mov	r8, sp
   14134:	mov	r4, sl
   14138:	mov	r0, r7
   1413c:	mov	r1, r6
   14140:	mov	r2, r8
   14144:	mov	r3, r9
   14148:	bl	3238 <InflateData>
   1414c:	mov	r0, r8
   14150:	bl	1bd4 <Mat_uint64Swap>
   14154:	str	r0, [r5], #4
   14158:	subs	r4, r4, #1
   1415c:	bne	14138 <ReadCompressedInt32Data+0x32c>
   14160:	b	14330 <ReadCompressedInt32Data+0x524>
   14164:	cmp	sl, #1
   14168:	blt	14330 <ReadCompressedInt32Data+0x524>
   1416c:	mov	r8, sp
   14170:	mov	r4, sl
   14174:	mov	r0, r7
   14178:	mov	r1, r6
   1417c:	mov	r2, r8
   14180:	mov	r3, r9
   14184:	bl	3238 <InflateData>
   14188:	ldrsh	r0, [sp]
   1418c:	subs	r4, r4, #1
   14190:	str	r0, [r5], #4
   14194:	bne	14174 <ReadCompressedInt32Data+0x368>
   14198:	b	14330 <ReadCompressedInt32Data+0x524>
   1419c:	cmp	sl, #1
   141a0:	blt	14330 <ReadCompressedInt32Data+0x524>
   141a4:	mov	r8, sp
   141a8:	mov	r4, sl
   141ac:	mov	r0, r7
   141b0:	mov	r1, r6
   141b4:	mov	r2, r8
   141b8:	mov	r3, r9
   141bc:	bl	3238 <InflateData>
   141c0:	ldrh	r0, [sp]
   141c4:	subs	r4, r4, #1
   141c8:	str	r0, [r5], #4
   141cc:	bne	141ac <ReadCompressedInt32Data+0x3a0>
   141d0:	b	14330 <ReadCompressedInt32Data+0x524>
   141d4:	cmp	sl, #1
   141d8:	blt	14330 <ReadCompressedInt32Data+0x524>
   141dc:	mov	r8, sp
   141e0:	mov	r4, sl
   141e4:	mov	r0, r7
   141e8:	mov	r1, r6
   141ec:	mov	r2, r8
   141f0:	mov	r3, r9
   141f4:	bl	3238 <InflateData>
   141f8:	ldr	r0, [sp]
   141fc:	subs	r4, r4, #1
   14200:	str	r0, [r5], #4
   14204:	bne	141e4 <ReadCompressedInt32Data+0x3d8>
   14208:	b	14330 <ReadCompressedInt32Data+0x524>
   1420c:	cmp	sl, #1
   14210:	blt	14330 <ReadCompressedInt32Data+0x524>
   14214:	mov	r8, sp
   14218:	mov	r4, sl
   1421c:	mov	r0, r7
   14220:	mov	r1, r6
   14224:	mov	r2, r8
   14228:	mov	r3, r9
   1422c:	bl	3238 <InflateData>
   14230:	ldr	r0, [sp]
   14234:	subs	r4, r4, #1
   14238:	str	r0, [r5], #4
   1423c:	bne	1421c <ReadCompressedInt32Data+0x410>
   14240:	b	14330 <ReadCompressedInt32Data+0x524>
   14244:	cmp	sl, #1
   14248:	blt	14330 <ReadCompressedInt32Data+0x524>
   1424c:	mov	r8, sp
   14250:	mov	r4, sl
   14254:	mov	r0, r7
   14258:	mov	r1, r6
   1425c:	mov	r2, r8
   14260:	mov	r3, r9
   14264:	bl	3238 <InflateData>
   14268:	vldr	s0, [sp]
   1426c:	subs	r4, r4, #1
   14270:	vcvt.s32.f32	s0, s0
   14274:	vmov	r0, s0
   14278:	str	r0, [r5], #4
   1427c:	bne	14254 <ReadCompressedInt32Data+0x448>
   14280:	b	14330 <ReadCompressedInt32Data+0x524>
   14284:	cmp	sl, #1
   14288:	blt	14330 <ReadCompressedInt32Data+0x524>
   1428c:	mov	r8, sp
   14290:	mov	r4, sl
   14294:	mov	r0, r7
   14298:	mov	r1, r6
   1429c:	mov	r2, r8
   142a0:	mov	r3, r9
   142a4:	bl	3238 <InflateData>
   142a8:	vldr	d16, [sp]
   142ac:	subs	r4, r4, #1
   142b0:	vcvt.s32.f64	s0, d16
   142b4:	vmov	r0, s0
   142b8:	str	r0, [r5], #4
   142bc:	bne	14294 <ReadCompressedInt32Data+0x488>
   142c0:	b	14330 <ReadCompressedInt32Data+0x524>
   142c4:	cmp	sl, #1
   142c8:	blt	14330 <ReadCompressedInt32Data+0x524>
   142cc:	mov	r8, sp
   142d0:	mov	r4, sl
   142d4:	mov	r0, r7
   142d8:	mov	r1, r6
   142dc:	mov	r2, r8
   142e0:	mov	r3, r9
   142e4:	bl	3238 <InflateData>
   142e8:	ldr	r0, [sp]
   142ec:	subs	r4, r4, #1
   142f0:	str	r0, [r5], #4
   142f4:	bne	142d4 <ReadCompressedInt32Data+0x4c8>
   142f8:	b	14330 <ReadCompressedInt32Data+0x524>
   142fc:	cmp	sl, #1
   14300:	blt	14330 <ReadCompressedInt32Data+0x524>
   14304:	mov	r8, sp
   14308:	mov	r4, sl
   1430c:	mov	r0, r7
   14310:	mov	r1, r6
   14314:	mov	r2, r8
   14318:	mov	r3, r9
   1431c:	bl	3238 <InflateData>
   14320:	ldr	r0, [sp]
   14324:	subs	r4, r4, #1
   14328:	str	r0, [r5], #4
   1432c:	bne	1430c <ReadCompressedInt32Data+0x500>
   14330:	mul	r0, r9, sl
   14334:	sub	sp, fp, #28
   14338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001433c <ReadUInt32Data>:
   1433c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14340:	add	fp, sp, #28
   14344:	sub	sp, sp, #252	; 0xfc
   14348:	sub	sp, sp, #2048	; 0x800
   1434c:	mov	r4, r0
   14350:	mov	r0, #0
   14354:	cmp	r4, #0
   14358:	movne	sl, r1
   1435c:	cmpne	r1, #0
   14360:	bne	1436c <ReadUInt32Data+0x30>
   14364:	sub	sp, fp, #28
   14368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1436c:	ldr	r1, [r4]
   14370:	cmp	r1, #0
   14374:	beq	14364 <ReadUInt32Data+0x28>
   14378:	mov	r0, r2
   1437c:	mov	r7, r3
   14380:	mov	r5, r2
   14384:	bl	1924 <Mat_SizeOf@plt>
   14388:	mov	r8, r0
   1438c:	sub	r0, r5, #1
   14390:	mov	r9, #0
   14394:	str	r4, [sp, #36]	; 0x24
   14398:	cmp	r0, #11
   1439c:	bhi	16680 <ReadUInt32Data+0x2344>
   143a0:	add	r1, pc, #4
   143a4:	ldr	r0, [r1, r0, lsl #2]
   143a8:	add	pc, r1, r0
   143ac:	.word	0x00000030
   143b0:	.word	0x000001c0
   143b4:	.word	0x00000350
   143b8:	.word	0x000003a4
   143bc:	.word	0x000003f8
   143c0:	.word	0x0000044c
   143c4:	.word	0x000004a0
   143c8:	.word	0x000022d4
   143cc:	.word	0x000004fc
   143d0:	.word	0x000022d4
   143d4:	.word	0x000022d4
   143d8:	.word	0x00000558
   143dc:	cmp	r7, #256	; 0x100
   143e0:	bgt	14964 <ReadUInt32Data+0x628>
   143e4:	ldr	r3, [r4]
   143e8:	add	r4, sp, #248	; 0xf8
   143ec:	mov	r1, r8
   143f0:	mov	r2, r7
   143f4:	mov	r0, r4
   143f8:	bl	18b8 <fread@plt>
   143fc:	mov	r9, r0
   14400:	cmp	r7, #1
   14404:	blt	16aac <ReadUInt32Data+0x2770>
   14408:	mov	r2, #0
   1440c:	cmp	r7, #4
   14410:	bcc	1454c <ReadUInt32Data+0x210>
   14414:	bic	r0, r7, #3
   14418:	str	sl, [sp, #4]
   1441c:	str	r9, [sp, #28]
   14420:	str	r8, [sp, #32]
   14424:	str	r7, [sp, #12]
   14428:	sub	r1, r0, #4
   1442c:	str	r0, [sp, #24]
   14430:	mov	r0, #1
   14434:	add	r0, r0, r1, lsr #2
   14438:	cmp	r1, #12
   1443c:	and	r2, r0, #3
   14440:	str	r2, [sp, #36]	; 0x24
   14444:	mov	r2, #0
   14448:	bcc	144f4 <ReadUInt32Data+0x1b8>
   1444c:	ldr	r1, [sp, #36]	; 0x24
   14450:	ldr	r6, [sp, #4]
   14454:	mov	r2, #0
   14458:	add	r8, sp, #172	; 0xac
   1445c:	mov	r9, #64	; 0x40
   14460:	add	sl, sp, #176	; 0xb0
   14464:	add	lr, sp, #180	; 0xb4
   14468:	sub	r3, r0, r1
   1446c:	add	r0, sp, #184	; 0xb8
   14470:	mov	r7, r6
   14474:	ldr	r5, [r4, r2]
   14478:	add	r1, r6, #16
   1447c:	subs	r3, r3, #4
   14480:	str	r5, [sp, #172]	; 0xac
   14484:	add	r5, r4, r2
   14488:	add	r2, r2, #16
   1448c:	vld1.32	{d16[0]}, [r8 :32]
   14490:	vmovl.s8	q8, d16
   14494:	vmovl.s16	q8, d16
   14498:	vst1.32	{d16-d17}, [r7], r9
   1449c:	ldr	ip, [r5, #4]
   144a0:	str	ip, [sp, #176]	; 0xb0
   144a4:	vld1.32	{d16[0]}, [sl :32]
   144a8:	vmovl.s8	q8, d16
   144ac:	vmovl.s16	q8, d16
   144b0:	vst1.32	{d16-d17}, [r1]
   144b4:	ldr	r1, [r5, #8]
   144b8:	str	r1, [sp, #180]	; 0xb4
   144bc:	add	r1, r6, #32
   144c0:	vld1.32	{d16[0]}, [lr :32]
   144c4:	vmovl.s8	q8, d16
   144c8:	vmovl.s16	q8, d16
   144cc:	vst1.32	{d16-d17}, [r1]
   144d0:	ldr	r1, [r5, #12]
   144d4:	str	r1, [sp, #184]	; 0xb8
   144d8:	add	r1, r6, #48	; 0x30
   144dc:	mov	r6, r7
   144e0:	vld1.32	{d16[0]}, [r0 :32]
   144e4:	vmovl.s8	q8, d16
   144e8:	vmovl.s16	q8, d16
   144ec:	vst1.32	{d16-d17}, [r1]
   144f0:	bne	14474 <ReadUInt32Data+0x138>
   144f4:	ldr	r3, [sp, #36]	; 0x24
   144f8:	ldr	sl, [sp, #4]
   144fc:	cmp	r3, #0
   14500:	beq	14534 <ReadUInt32Data+0x1f8>
   14504:	add	r1, sl, r2, lsl #2
   14508:	add	r0, r4, r2
   1450c:	rsb	r2, r3, #0
   14510:	add	r3, sp, #168	; 0xa8
   14514:	ldr	r7, [r0], #4
   14518:	adds	r2, r2, #1
   1451c:	str	r7, [sp, #168]	; 0xa8
   14520:	vld1.32	{d16[0]}, [r3 :32]
   14524:	vmovl.s8	q8, d16
   14528:	vmovl.s16	q8, d16
   1452c:	vst1.32	{d16-d17}, [r1]!
   14530:	bcc	14514 <ReadUInt32Data+0x1d8>
   14534:	ldr	r7, [sp, #12]
   14538:	ldr	r2, [sp, #24]
   1453c:	ldr	r8, [sp, #32]
   14540:	ldr	r9, [sp, #28]
   14544:	cmp	r2, r7
   14548:	beq	16aac <ReadUInt32Data+0x2770>
   1454c:	add	r1, sl, r2, lsl #2
   14550:	add	r0, r4, r2
   14554:	sub	r2, r7, r2
   14558:	ldrsb	r3, [r0], #1
   1455c:	subs	r2, r2, #1
   14560:	str	r3, [r1], #4
   14564:	bne	14558 <ReadUInt32Data+0x21c>
   14568:	b	16aac <ReadUInt32Data+0x2770>
   1456c:	cmp	r7, #256	; 0x100
   14570:	bgt	14b20 <ReadUInt32Data+0x7e4>
   14574:	ldr	r3, [r4]
   14578:	add	r4, sp, #248	; 0xf8
   1457c:	mov	r1, r8
   14580:	mov	r2, r7
   14584:	mov	r0, r4
   14588:	bl	18b8 <fread@plt>
   1458c:	mov	r9, r0
   14590:	cmp	r7, #1
   14594:	blt	16aac <ReadUInt32Data+0x2770>
   14598:	mov	r2, #0
   1459c:	cmp	r7, #4
   145a0:	bcc	146dc <ReadUInt32Data+0x3a0>
   145a4:	bic	r0, r7, #3
   145a8:	str	sl, [sp, #4]
   145ac:	str	r9, [sp, #28]
   145b0:	str	r8, [sp, #32]
   145b4:	str	r7, [sp, #12]
   145b8:	sub	r1, r0, #4
   145bc:	str	r0, [sp, #24]
   145c0:	mov	r0, #1
   145c4:	add	r0, r0, r1, lsr #2
   145c8:	cmp	r1, #12
   145cc:	and	r2, r0, #3
   145d0:	str	r2, [sp, #36]	; 0x24
   145d4:	mov	r2, #0
   145d8:	bcc	14684 <ReadUInt32Data+0x348>
   145dc:	ldr	r1, [sp, #36]	; 0x24
   145e0:	ldr	r6, [sp, #4]
   145e4:	mov	r2, #0
   145e8:	add	r8, sp, #212	; 0xd4
   145ec:	mov	r9, #64	; 0x40
   145f0:	add	sl, sp, #216	; 0xd8
   145f4:	add	lr, sp, #220	; 0xdc
   145f8:	sub	r3, r0, r1
   145fc:	add	r0, sp, #224	; 0xe0
   14600:	mov	r7, r6
   14604:	ldr	r5, [r4, r2]
   14608:	add	r1, r6, #16
   1460c:	subs	r3, r3, #4
   14610:	str	r5, [sp, #212]	; 0xd4
   14614:	add	r5, r4, r2
   14618:	add	r2, r2, #16
   1461c:	vld1.32	{d16[0]}, [r8 :32]
   14620:	vmovl.u8	q8, d16
   14624:	vmovl.u16	q8, d16
   14628:	vst1.32	{d16-d17}, [r7], r9
   1462c:	ldr	ip, [r5, #4]
   14630:	str	ip, [sp, #216]	; 0xd8
   14634:	vld1.32	{d16[0]}, [sl :32]
   14638:	vmovl.u8	q8, d16
   1463c:	vmovl.u16	q8, d16
   14640:	vst1.32	{d16-d17}, [r1]
   14644:	ldr	r1, [r5, #8]
   14648:	str	r1, [sp, #220]	; 0xdc
   1464c:	add	r1, r6, #32
   14650:	vld1.32	{d16[0]}, [lr :32]
   14654:	vmovl.u8	q8, d16
   14658:	vmovl.u16	q8, d16
   1465c:	vst1.32	{d16-d17}, [r1]
   14660:	ldr	r1, [r5, #12]
   14664:	str	r1, [sp, #224]	; 0xe0
   14668:	add	r1, r6, #48	; 0x30
   1466c:	mov	r6, r7
   14670:	vld1.32	{d16[0]}, [r0 :32]
   14674:	vmovl.u8	q8, d16
   14678:	vmovl.u16	q8, d16
   1467c:	vst1.32	{d16-d17}, [r1]
   14680:	bne	14604 <ReadUInt32Data+0x2c8>
   14684:	ldr	r3, [sp, #36]	; 0x24
   14688:	ldr	sl, [sp, #4]
   1468c:	cmp	r3, #0
   14690:	beq	146c4 <ReadUInt32Data+0x388>
   14694:	add	r1, sl, r2, lsl #2
   14698:	add	r0, r4, r2
   1469c:	rsb	r2, r3, #0
   146a0:	add	r3, sp, #208	; 0xd0
   146a4:	ldr	r7, [r0], #4
   146a8:	adds	r2, r2, #1
   146ac:	str	r7, [sp, #208]	; 0xd0
   146b0:	vld1.32	{d16[0]}, [r3 :32]
   146b4:	vmovl.u8	q8, d16
   146b8:	vmovl.u16	q8, d16
   146bc:	vst1.32	{d16-d17}, [r1]!
   146c0:	bcc	146a4 <ReadUInt32Data+0x368>
   146c4:	ldr	r7, [sp, #12]
   146c8:	ldr	r2, [sp, #24]
   146cc:	ldr	r8, [sp, #32]
   146d0:	ldr	r9, [sp, #28]
   146d4:	cmp	r2, r7
   146d8:	beq	16aac <ReadUInt32Data+0x2770>
   146dc:	add	r1, sl, r2, lsl #2
   146e0:	add	r0, r4, r2
   146e4:	sub	r2, r7, r2
   146e8:	ldrb	r3, [r0], #1
   146ec:	subs	r2, r2, #1
   146f0:	str	r3, [r1], #4
   146f4:	bne	146e8 <ReadUInt32Data+0x3ac>
   146f8:	b	16aac <ReadUInt32Data+0x2770>
   146fc:	ldr	r0, [r4, #20]
   14700:	cmp	r0, #0
   14704:	beq	14ce8 <ReadUInt32Data+0x9ac>
   14708:	cmp	r7, #256	; 0x100
   1470c:	bgt	15110 <ReadUInt32Data+0xdd4>
   14710:	ldr	r3, [r4]
   14714:	add	r4, sp, #248	; 0xf8
   14718:	mov	r1, r8
   1471c:	mov	r2, r7
   14720:	mov	r0, r4
   14724:	bl	18b8 <fread@plt>
   14728:	mov	r9, r0
   1472c:	cmp	r7, #1
   14730:	blt	16aac <ReadUInt32Data+0x2770>
   14734:	mov	r0, r4
   14738:	bl	1c20 <Mat_int16Swap>
   1473c:	str	r0, [sl], #4
   14740:	add	r4, r4, #2
   14744:	subs	r7, r7, #1
   14748:	bne	14734 <ReadUInt32Data+0x3f8>
   1474c:	b	16aac <ReadUInt32Data+0x2770>
   14750:	ldr	r0, [r4, #20]
   14754:	cmp	r0, #0
   14758:	beq	14dac <ReadUInt32Data+0xa70>
   1475c:	cmp	r7, #256	; 0x100
   14760:	bgt	151ec <ReadUInt32Data+0xeb0>
   14764:	ldr	r3, [r4]
   14768:	add	r4, sp, #248	; 0xf8
   1476c:	mov	r1, r8
   14770:	mov	r2, r7
   14774:	mov	r0, r4
   14778:	bl	18b8 <fread@plt>
   1477c:	mov	r9, r0
   14780:	cmp	r7, #1
   14784:	blt	16aac <ReadUInt32Data+0x2770>
   14788:	mov	r0, r4
   1478c:	bl	1c34 <Mat_uint16Swap>
   14790:	str	r0, [sl], #4
   14794:	add	r4, r4, #2
   14798:	subs	r7, r7, #1
   1479c:	bne	14788 <ReadUInt32Data+0x44c>
   147a0:	b	16aac <ReadUInt32Data+0x2770>
   147a4:	ldr	r0, [r4, #20]
   147a8:	cmp	r0, #0
   147ac:	beq	14e70 <ReadUInt32Data+0xb34>
   147b0:	cmp	r7, #256	; 0x100
   147b4:	bgt	152c8 <ReadUInt32Data+0xf8c>
   147b8:	ldr	r3, [r4]
   147bc:	add	r4, sp, #248	; 0xf8
   147c0:	mov	r1, r8
   147c4:	mov	r2, r7
   147c8:	mov	r0, r4
   147cc:	bl	18b8 <fread@plt>
   147d0:	mov	r9, r0
   147d4:	cmp	r7, #1
   147d8:	blt	16aac <ReadUInt32Data+0x2770>
   147dc:	mov	r0, r4
   147e0:	bl	1bf8 <Mat_int32Swap>
   147e4:	str	r0, [sl], #4
   147e8:	add	r4, r4, #4
   147ec:	subs	r7, r7, #1
   147f0:	bne	147dc <ReadUInt32Data+0x4a0>
   147f4:	b	16aac <ReadUInt32Data+0x2770>
   147f8:	ldr	r0, [r4, #20]
   147fc:	cmp	r0, #0
   14800:	beq	14edc <ReadUInt32Data+0xba0>
   14804:	cmp	r7, #256	; 0x100
   14808:	bgt	153a4 <ReadUInt32Data+0x1068>
   1480c:	ldr	r3, [r4]
   14810:	add	r4, sp, #248	; 0xf8
   14814:	mov	r1, r8
   14818:	mov	r2, r7
   1481c:	mov	r0, r4
   14820:	bl	18b8 <fread@plt>
   14824:	mov	r9, r0
   14828:	cmp	r7, #1
   1482c:	blt	16aac <ReadUInt32Data+0x2770>
   14830:	mov	r0, r4
   14834:	bl	1c0c <Mat_uint32Swap>
   14838:	str	r0, [sl], #4
   1483c:	add	r4, r4, #4
   14840:	subs	r7, r7, #1
   14844:	bne	14830 <ReadUInt32Data+0x4f4>
   14848:	b	16aac <ReadUInt32Data+0x2770>
   1484c:	ldr	r0, [r4, #20]
   14850:	cmp	r0, #0
   14854:	beq	14f18 <ReadUInt32Data+0xbdc>
   14858:	cmp	r7, #256	; 0x100
   1485c:	bgt	1548c <ReadUInt32Data+0x1150>
   14860:	ldr	r3, [r4]
   14864:	add	r4, sp, #248	; 0xf8
   14868:	mov	r1, r8
   1486c:	mov	r2, r7
   14870:	mov	r0, r4
   14874:	bl	18b8 <fread@plt>
   14878:	mov	r9, r0
   1487c:	cmp	r7, #1
   14880:	blt	16aac <ReadUInt32Data+0x2770>
   14884:	mov	r0, r4
   14888:	bl	1c4c <Mat_floatSwap>
   1488c:	vcvt.u32.f32	s0, s0
   14890:	add	r4, r4, #4
   14894:	subs	r7, r7, #1
   14898:	vmov	r0, s0
   1489c:	str	r0, [sl], #4
   148a0:	bne	14884 <ReadUInt32Data+0x548>
   148a4:	b	16aac <ReadUInt32Data+0x2770>
   148a8:	ldr	r0, [r4, #20]
   148ac:	cmp	r0, #0
   148b0:	beq	14fa8 <ReadUInt32Data+0xc6c>
   148b4:	cmp	r7, #256	; 0x100
   148b8:	bgt	15578 <ReadUInt32Data+0x123c>
   148bc:	ldr	r3, [r4]
   148c0:	add	r4, sp, #248	; 0xf8
   148c4:	mov	r1, r8
   148c8:	mov	r2, r7
   148cc:	mov	r0, r4
   148d0:	bl	18b8 <fread@plt>
   148d4:	mov	r9, r0
   148d8:	cmp	r7, #1
   148dc:	blt	16aac <ReadUInt32Data+0x2770>
   148e0:	mov	r0, r4
   148e4:	bl	1c90 <Mat_doubleSwap>
   148e8:	vcvt.u32.f64	s0, d0
   148ec:	add	r4, r4, #8
   148f0:	subs	r7, r7, #1
   148f4:	vmov	r0, s0
   148f8:	str	r0, [sl], #4
   148fc:	bne	148e0 <ReadUInt32Data+0x5a4>
   14900:	b	16aac <ReadUInt32Data+0x2770>
   14904:	ldr	r0, [r4, #20]
   14908:	cmp	r0, #0
   1490c:	beq	15074 <ReadUInt32Data+0xd38>
   14910:	cmp	r7, #256	; 0x100
   14914:	bgt	15664 <ReadUInt32Data+0x1328>
   14918:	ldr	r3, [r4]
   1491c:	add	r6, sp, #248	; 0xf8
   14920:	mov	r1, r8
   14924:	mov	r2, r7
   14928:	mov	r0, r6
   1492c:	bl	18b8 <fread@plt>
   14930:	mov	r9, r0
   14934:	cmp	r7, #1
   14938:	blt	16680 <ReadUInt32Data+0x2344>
   1493c:	str	r5, [sp, #20]
   14940:	mov	r4, sl
   14944:	mov	r5, r7
   14948:	mov	r0, r6
   1494c:	bl	1b84 <Mat_int64Swap>
   14950:	str	r0, [r4], #4
   14954:	add	r6, r6, #8
   14958:	subs	r5, r5, #1
   1495c:	bne	14948 <ReadUInt32Data+0x60c>
   14960:	b	16678 <ReadUInt32Data+0x233c>
   14964:	sub	r1, r7, #256	; 0x100
   14968:	str	r8, [sp, #32]
   1496c:	str	r7, [sp, #12]
   14970:	add	r0, sl, #1024	; 0x400
   14974:	mov	r7, #0
   14978:	add	r6, sp, #248	; 0xf8
   1497c:	add	r8, sp, #200	; 0xc8
   14980:	mov	r5, #32
   14984:	add	r4, sp, #204	; 0xcc
   14988:	str	sl, [sp, #4]
   1498c:	mov	r9, sl
   14990:	mov	sl, #0
   14994:	str	r1, [sp, #16]
   14998:	mov	r1, #256	; 0x100
   1499c:	add	r2, sp, #20
   149a0:	stm	r2, {r0, r1, r7}
   149a4:	ldr	r0, [sp, #36]	; 0x24
   149a8:	ldr	r1, [sp, #32]
   149ac:	mov	r2, #256	; 0x100
   149b0:	ldr	r3, [r0]
   149b4:	mov	r0, r6
   149b8:	bl	18b8 <fread@plt>
   149bc:	mov	r1, r9
   149c0:	mov	r2, #0
   149c4:	ldr	r3, [r6, r2]
   149c8:	add	r7, r6, r2
   149cc:	add	r2, r2, #8
   149d0:	cmp	r2, #256	; 0x100
   149d4:	str	r3, [sp, #200]	; 0xc8
   149d8:	add	r3, r1, #16
   149dc:	vld1.32	{d16[0]}, [r8 :32]
   149e0:	vmovl.s8	q8, d16
   149e4:	vmovl.s16	q8, d16
   149e8:	vst1.32	{d16-d17}, [r1], r5
   149ec:	ldr	r7, [r7, #4]
   149f0:	str	r7, [sp, #204]	; 0xcc
   149f4:	vld1.32	{d16[0]}, [r4 :32]
   149f8:	vmovl.s8	q8, d16
   149fc:	vmovl.s16	q8, d16
   14a00:	vst1.32	{d16-d17}, [r3]
   14a04:	bne	149c4 <ReadUInt32Data+0x688>
   14a08:	ldr	r2, [sp, #28]
   14a0c:	ldr	r1, [sp, #24]
   14a10:	add	sl, r0, sl
   14a14:	ldr	r0, [sp, #20]
   14a18:	add	r9, r9, #1024	; 0x400
   14a1c:	add	r7, r2, #256	; 0x100
   14a20:	ldr	r2, [sp, #16]
   14a24:	add	r0, r0, #1024	; 0x400
   14a28:	add	r1, r1, #256	; 0x100
   14a2c:	cmp	r7, r2
   14a30:	blt	1499c <ReadUInt32Data+0x660>
   14a34:	ldr	r4, [sp, #12]
   14a38:	cmp	r7, r4
   14a3c:	bge	15760 <ReadUInt32Data+0x1424>
   14a40:	ldr	r0, [sp, #36]	; 0x24
   14a44:	ldr	r1, [sp, #32]
   14a48:	sub	r5, r4, r7
   14a4c:	add	r6, sp, #248	; 0xf8
   14a50:	mov	r2, r5
   14a54:	ldr	r3, [r0]
   14a58:	mov	r0, r6
   14a5c:	bl	18b8 <fread@plt>
   14a60:	mov	r9, sl
   14a64:	add	r9, r0, sl
   14a68:	cmp	r5, #1
   14a6c:	blt	16aa8 <ReadUInt32Data+0x276c>
   14a70:	ldr	sl, [sp, #4]
   14a74:	mov	lr, #0
   14a78:	cmp	r5, #4
   14a7c:	bcc	160f8 <ReadUInt32Data+0x1dbc>
   14a80:	bic	lr, r5, #3
   14a84:	mov	r2, #1
   14a88:	str	r5, [sp, #36]	; 0x24
   14a8c:	subs	r1, lr, #4
   14a90:	add	r1, r2, r1, lsr #2
   14a94:	and	r0, r1, #1
   14a98:	str	r0, [sp, #16]
   14a9c:	beq	160b4 <ReadUInt32Data+0x1d78>
   14aa0:	ldr	r0, [sp, #28]
   14aa4:	ldr	ip, [sp, #20]
   14aa8:	add	r8, sp, #192	; 0xc0
   14aac:	mov	r5, #32
   14ab0:	sub	r3, r4, r0
   14ab4:	add	r4, sp, #196	; 0xc4
   14ab8:	sub	r3, r3, #256	; 0x100
   14abc:	bic	r3, r3, #3
   14ac0:	sub	r3, r3, #4
   14ac4:	add	r2, r2, r3, lsr #2
   14ac8:	mvn	r0, r3, lsr #2
   14acc:	and	r2, r2, #1
   14ad0:	add	r3, r0, r2
   14ad4:	mov	r2, #0
   14ad8:	ldr	r1, [r6, r2]
   14adc:	add	r0, r6, r2
   14ae0:	adds	r3, r3, #2
   14ae4:	add	r2, r2, #8
   14ae8:	str	r1, [sp, #192]	; 0xc0
   14aec:	add	r1, ip, #16
   14af0:	vld1.32	{d16[0]}, [r8 :32]
   14af4:	vmovl.s8	q8, d16
   14af8:	vmovl.s16	q8, d16
   14afc:	vst1.32	{d16-d17}, [ip], r5
   14b00:	ldr	r0, [r0, #4]
   14b04:	str	r0, [sp, #196]	; 0xc4
   14b08:	vld1.32	{d16[0]}, [r4 :32]
   14b0c:	vmovl.s8	q8, d16
   14b10:	vmovl.s16	q8, d16
   14b14:	vst1.32	{d16-d17}, [r1]
   14b18:	bne	14ad8 <ReadUInt32Data+0x79c>
   14b1c:	b	160b8 <ReadUInt32Data+0x1d7c>
   14b20:	sub	r1, r7, #256	; 0x100
   14b24:	str	r8, [sp, #32]
   14b28:	str	r7, [sp, #12]
   14b2c:	mov	r8, sl
   14b30:	add	r0, sl, #1024	; 0x400
   14b34:	mov	r2, #0
   14b38:	mov	r9, #0
   14b3c:	add	r6, sp, #248	; 0xf8
   14b40:	add	r7, sp, #240	; 0xf0
   14b44:	mov	sl, #32
   14b48:	add	r5, sp, #244	; 0xf4
   14b4c:	str	r1, [sp, #16]
   14b50:	mov	r1, #256	; 0x100
   14b54:	str	r8, [sp, #4]
   14b58:	str	r2, [sp, #28]
   14b5c:	str	r1, [sp, #24]
   14b60:	ldr	r3, [r4]
   14b64:	ldr	r1, [sp, #32]
   14b68:	str	r0, [sp, #20]
   14b6c:	mov	r0, r6
   14b70:	mov	r2, #256	; 0x100
   14b74:	bl	18b8 <fread@plt>
   14b78:	mov	r1, r8
   14b7c:	mov	r2, #0
   14b80:	ldr	r3, [r6, r2]
   14b84:	add	r4, r6, r2
   14b88:	add	r2, r2, #8
   14b8c:	cmp	r2, #256	; 0x100
   14b90:	str	r3, [sp, #240]	; 0xf0
   14b94:	add	r3, r1, #16
   14b98:	vld1.32	{d16[0]}, [r7 :32]
   14b9c:	vmovl.u8	q8, d16
   14ba0:	vmovl.u16	q8, d16
   14ba4:	vst1.32	{d16-d17}, [r1], sl
   14ba8:	ldr	r4, [r4, #4]
   14bac:	str	r4, [sp, #244]	; 0xf4
   14bb0:	vld1.32	{d16[0]}, [r5 :32]
   14bb4:	vmovl.u8	q8, d16
   14bb8:	vmovl.u16	q8, d16
   14bbc:	vst1.32	{d16-d17}, [r3]
   14bc0:	bne	14b80 <ReadUInt32Data+0x844>
   14bc4:	ldr	r1, [sp, #28]
   14bc8:	ldr	r3, [sp, #16]
   14bcc:	ldr	r4, [sp, #36]	; 0x24
   14bd0:	mov	r2, r9
   14bd4:	add	r9, r9, #256	; 0x100
   14bd8:	add	r8, r8, #1024	; 0x400
   14bdc:	add	r1, r0, r1
   14be0:	ldr	r0, [sp, #20]
   14be4:	cmp	r9, r3
   14be8:	str	r1, [sp, #28]
   14bec:	ldr	r1, [sp, #24]
   14bf0:	add	r0, r0, #1024	; 0x400
   14bf4:	add	r1, r1, #256	; 0x100
   14bf8:	blt	14b5c <ReadUInt32Data+0x820>
   14bfc:	ldr	r8, [sp, #12]
   14c00:	cmp	r9, r8
   14c04:	bge	15b2c <ReadUInt32Data+0x17f0>
   14c08:	ldr	r3, [r4]
   14c0c:	ldr	r1, [sp, #32]
   14c10:	add	r6, sp, #248	; 0xf8
   14c14:	sub	r5, r8, r9
   14c18:	mov	sl, r2
   14c1c:	mov	r0, r6
   14c20:	mov	r2, r5
   14c24:	bl	18b8 <fread@plt>
   14c28:	ldr	r1, [sp, #28]
   14c2c:	cmp	r5, #1
   14c30:	add	r1, r0, r1
   14c34:	str	r1, [sp, #28]
   14c38:	blt	1619c <ReadUInt32Data+0x1e60>
   14c3c:	ldr	r3, [sp, #4]
   14c40:	mov	lr, #0
   14c44:	cmp	r5, #4
   14c48:	bcc	16170 <ReadUInt32Data+0x1e34>
   14c4c:	bic	lr, r5, #3
   14c50:	mov	r2, #1
   14c54:	str	r5, [sp, #36]	; 0x24
   14c58:	subs	r1, lr, #4
   14c5c:	add	r1, r2, r1, lsr #2
   14c60:	and	r0, r1, #1
   14c64:	str	r0, [sp, #16]
   14c68:	beq	1612c <ReadUInt32Data+0x1df0>
   14c6c:	sub	r3, r8, sl
   14c70:	ldr	ip, [sp, #20]
   14c74:	mov	r5, #32
   14c78:	add	r4, sp, #236	; 0xec
   14c7c:	sub	r3, r3, #256	; 0x100
   14c80:	bic	r3, r3, #3
   14c84:	sub	r3, r3, #4
   14c88:	add	r2, r2, r3, lsr #2
   14c8c:	mvn	r7, r3, lsr #2
   14c90:	and	r2, r2, #1
   14c94:	add	r3, r7, r2
   14c98:	mov	r2, #0
   14c9c:	add	r7, sp, #232	; 0xe8
   14ca0:	ldr	r1, [r6, r2]
   14ca4:	add	r0, r6, r2
   14ca8:	adds	r3, r3, #2
   14cac:	add	r2, r2, #8
   14cb0:	str	r1, [sp, #232]	; 0xe8
   14cb4:	add	r1, ip, #16
   14cb8:	vld1.32	{d16[0]}, [r7 :32]
   14cbc:	vmovl.u8	q8, d16
   14cc0:	vmovl.u16	q8, d16
   14cc4:	vst1.32	{d16-d17}, [ip], r5
   14cc8:	ldr	r0, [r0, #4]
   14ccc:	str	r0, [sp, #236]	; 0xec
   14cd0:	vld1.32	{d16[0]}, [r4 :32]
   14cd4:	vmovl.u8	q8, d16
   14cd8:	vmovl.u16	q8, d16
   14cdc:	vst1.32	{d16-d17}, [r1]
   14ce0:	bne	14ca0 <ReadUInt32Data+0x964>
   14ce4:	b	16130 <ReadUInt32Data+0x1df4>
   14ce8:	cmp	r7, #256	; 0x100
   14cec:	bgt	1576c <ReadUInt32Data+0x1430>
   14cf0:	ldr	r3, [r4]
   14cf4:	add	r4, sp, #248	; 0xf8
   14cf8:	mov	r1, r8
   14cfc:	mov	r2, r7
   14d00:	mov	r0, r4
   14d04:	bl	18b8 <fread@plt>
   14d08:	mov	r9, r0
   14d0c:	cmp	r7, #1
   14d10:	blt	16aac <ReadUInt32Data+0x2770>
   14d14:	mov	lr, #0
   14d18:	cmp	r7, #4
   14d1c:	bcc	161f0 <ReadUInt32Data+0x1eb4>
   14d20:	bic	lr, r7, #3
   14d24:	mov	r2, #1
   14d28:	str	r7, [sp, #12]
   14d2c:	str	r8, [sp, #32]
   14d30:	str	r9, [sp, #28]
   14d34:	subs	r1, lr, #4
   14d38:	add	r1, r2, r1, lsr #2
   14d3c:	and	ip, r1, #1
   14d40:	beq	161a4 <ReadUInt32Data+0x1e68>
   14d44:	sub	r3, r1, ip
   14d48:	mov	r1, #0
   14d4c:	add	r8, sp, #48	; 0x30
   14d50:	mov	r9, #32
   14d54:	add	r5, sp, #56	; 0x38
   14d58:	mov	r2, sl
   14d5c:	ldr	r0, [r4]
   14d60:	ldr	r7, [r4, #4]
   14d64:	subs	r3, r3, #2
   14d68:	add	r1, r1, #8
   14d6c:	str	r0, [sp, #48]	; 0x30
   14d70:	str	r7, [sp, #52]	; 0x34
   14d74:	add	r0, r2, #16
   14d78:	vld1.16	{d16}, [r8 :64]
   14d7c:	vmovl.s16	q8, d16
   14d80:	vst1.32	{d16-d17}, [r2], r9
   14d84:	ldr	r7, [r4, #8]
   14d88:	ldr	r6, [r4, #12]
   14d8c:	add	r4, r4, #16
   14d90:	str	r6, [sp, #60]	; 0x3c
   14d94:	str	r7, [sp, #56]	; 0x38
   14d98:	vld1.16	{d16}, [r5 :64]
   14d9c:	vmovl.s16	q8, d16
   14da0:	vst1.32	{d16-d17}, [r0]
   14da4:	bne	14d5c <ReadUInt32Data+0xa20>
   14da8:	b	161a8 <ReadUInt32Data+0x1e6c>
   14dac:	cmp	r7, #256	; 0x100
   14db0:	bgt	1594c <ReadUInt32Data+0x1610>
   14db4:	ldr	r3, [r4]
   14db8:	add	r4, sp, #248	; 0xf8
   14dbc:	mov	r1, r8
   14dc0:	mov	r2, r7
   14dc4:	mov	r0, r4
   14dc8:	bl	18b8 <fread@plt>
   14dcc:	mov	r9, r0
   14dd0:	cmp	r7, #1
   14dd4:	blt	16aac <ReadUInt32Data+0x2770>
   14dd8:	mov	lr, #0
   14ddc:	cmp	r7, #4
   14de0:	bcc	16260 <ReadUInt32Data+0x1f24>
   14de4:	bic	lr, r7, #3
   14de8:	mov	r2, #1
   14dec:	str	r7, [sp, #12]
   14df0:	str	r8, [sp, #32]
   14df4:	str	r9, [sp, #28]
   14df8:	subs	r1, lr, #4
   14dfc:	add	r1, r2, r1, lsr #2
   14e00:	and	ip, r1, #1
   14e04:	beq	16214 <ReadUInt32Data+0x1ed8>
   14e08:	sub	r3, r1, ip
   14e0c:	mov	r1, #0
   14e10:	add	r8, sp, #112	; 0x70
   14e14:	mov	r9, #32
   14e18:	add	r5, sp, #120	; 0x78
   14e1c:	mov	r2, sl
   14e20:	ldr	r0, [r4]
   14e24:	ldr	r7, [r4, #4]
   14e28:	subs	r3, r3, #2
   14e2c:	add	r1, r1, #8
   14e30:	str	r0, [sp, #112]	; 0x70
   14e34:	str	r7, [sp, #116]	; 0x74
   14e38:	add	r0, r2, #16
   14e3c:	vld1.16	{d16}, [r8 :64]
   14e40:	vmovl.u16	q8, d16
   14e44:	vst1.32	{d16-d17}, [r2], r9
   14e48:	ldr	r7, [r4, #8]
   14e4c:	ldr	r6, [r4, #12]
   14e50:	add	r4, r4, #16
   14e54:	str	r6, [sp, #124]	; 0x7c
   14e58:	str	r7, [sp, #120]	; 0x78
   14e5c:	vld1.16	{d16}, [r5 :64]
   14e60:	vmovl.u16	q8, d16
   14e64:	vst1.32	{d16-d17}, [r0]
   14e68:	bne	14e20 <ReadUInt32Data+0xae4>
   14e6c:	b	16218 <ReadUInt32Data+0x1edc>
   14e70:	cmp	r7, #256	; 0x100
   14e74:	ble	14ee4 <ReadUInt32Data+0xba8>
   14e78:	sub	r0, r7, #256	; 0x100
   14e7c:	lsl	r6, r7, #2
   14e80:	str	r7, [sp, #12]
   14e84:	mov	r5, #0
   14e88:	add	r7, sp, #248	; 0xf8
   14e8c:	mov	r9, #0
   14e90:	str	r0, [sp, #28]
   14e94:	ldr	r3, [r4]
   14e98:	mov	r0, r7
   14e9c:	mov	r1, r8
   14ea0:	mov	r2, #256	; 0x100
   14ea4:	bl	18b8 <fread@plt>
   14ea8:	mov	r4, r0
   14eac:	add	r0, sl, r5, lsl #2
   14eb0:	mov	r1, r7
   14eb4:	mov	r2, #1024	; 0x400
   14eb8:	bl	181c <memcpy@plt>
   14ebc:	ldr	r0, [sp, #28]
   14ec0:	add	r9, r4, r9
   14ec4:	ldr	r4, [sp, #36]	; 0x24
   14ec8:	add	r5, r5, #256	; 0x100
   14ecc:	sub	r6, r6, #1024	; 0x400
   14ed0:	cmp	r5, r0
   14ed4:	blt	14e94 <ReadUInt32Data+0xb58>
   14ed8:	b	15b98 <ReadUInt32Data+0x185c>
   14edc:	cmp	r7, #256	; 0x100
   14ee0:	bgt	15b38 <ReadUInt32Data+0x17fc>
   14ee4:	ldr	r3, [r4]
   14ee8:	add	r0, sp, #248	; 0xf8
   14eec:	mov	r1, r8
   14ef0:	mov	r2, r7
   14ef4:	bl	18b8 <fread@plt>
   14ef8:	mov	r9, r0
   14efc:	cmp	r7, #1
   14f00:	blt	16aac <ReadUInt32Data+0x2770>
   14f04:	lsl	r2, r7, #2
   14f08:	add	r1, sp, #248	; 0xf8
   14f0c:	mov	r0, sl
   14f10:	bl	181c <memcpy@plt>
   14f14:	b	16aac <ReadUInt32Data+0x2770>
   14f18:	cmp	r7, #256	; 0x100
   14f1c:	bgt	15be4 <ReadUInt32Data+0x18a8>
   14f20:	ldr	r3, [r4]
   14f24:	add	r4, sp, #248	; 0xf8
   14f28:	mov	r1, r8
   14f2c:	mov	r2, r7
   14f30:	mov	r0, r4
   14f34:	bl	18b8 <fread@plt>
   14f38:	mov	r9, r0
   14f3c:	cmp	r7, #1
   14f40:	blt	16aac <ReadUInt32Data+0x2770>
   14f44:	mov	lr, #0
   14f48:	cmp	r7, #4
   14f4c:	bcc	162b0 <ReadUInt32Data+0x1f74>
   14f50:	bic	lr, r7, #3
   14f54:	mov	r2, #1
   14f58:	subs	r1, lr, #4
   14f5c:	add	r1, r2, r1, lsr #2
   14f60:	and	ip, r1, #1
   14f64:	beq	16284 <ReadUInt32Data+0x1f48>
   14f68:	sub	r3, r1, ip
   14f6c:	mov	r1, #0
   14f70:	mov	r0, #32
   14f74:	mov	r6, sl
   14f78:	add	r5, r4, #16
   14f7c:	vld1.32	{d16-d17}, [r4], r0
   14f80:	add	r2, r6, #16
   14f84:	subs	r3, r3, #2
   14f88:	add	r1, r1, #8
   14f8c:	vcvt.u32.f32	q8, q8
   14f90:	vst1.32	{d16-d17}, [r6], r0
   14f94:	vld1.32	{d16-d17}, [r5]
   14f98:	vcvt.u32.f32	q8, q8
   14f9c:	vst1.32	{d16-d17}, [r2]
   14fa0:	bne	14f78 <ReadUInt32Data+0xc3c>
   14fa4:	b	16288 <ReadUInt32Data+0x1f4c>
   14fa8:	cmp	r7, #256	; 0x100
   14fac:	bgt	15d40 <ReadUInt32Data+0x1a04>
   14fb0:	ldr	r3, [r4]
   14fb4:	add	r6, sp, #248	; 0xf8
   14fb8:	mov	r1, r8
   14fbc:	mov	r2, r7
   14fc0:	mov	r0, r6
   14fc4:	bl	18b8 <fread@plt>
   14fc8:	mov	r9, r0
   14fcc:	cmp	r7, #1
   14fd0:	blt	16aac <ReadUInt32Data+0x2770>
   14fd4:	mov	lr, #0
   14fd8:	beq	16328 <ReadUInt32Data+0x1fec>
   14fdc:	bic	lr, r7, #1
   14fe0:	mov	r1, #1
   14fe4:	str	r7, [sp, #12]
   14fe8:	str	r8, [sp, #32]
   14fec:	subs	r0, lr, #2
   14ff0:	add	r0, r1, r0, lsr #1
   14ff4:	and	ip, r0, #1
   14ff8:	beq	162e0 <ReadUInt32Data+0x1fa4>
   14ffc:	sub	r3, r0, ip
   15000:	mov	r1, #0
   15004:	mov	r8, #32
   15008:	mov	r7, #16
   1500c:	mov	r0, sl
   15010:	mov	r4, r6
   15014:	mov	r5, sl
   15018:	vld1.64	{d16-d17}, [r4], r8
   1501c:	subs	r3, r3, #2
   15020:	add	r1, r1, #4
   15024:	vcvt.u32.f64	s0, d16
   15028:	vcvt.u32.f64	s2, d17
   1502c:	vmov	r2, s0
   15030:	vmov.32	d16[0], r2
   15034:	vmov	r2, s2
   15038:	vmov.32	d16[1], r2
   1503c:	add	r2, r6, #16
   15040:	mov	r6, r4
   15044:	vst1.32	{d16}, [r5], r7
   15048:	vld1.64	{d16-d17}, [r2]
   1504c:	vcvt.u32.f64	s0, d16
   15050:	vcvt.u32.f64	s2, d17
   15054:	vmov	r2, s0
   15058:	vmov.32	d16[0], r2
   1505c:	vmov	r2, s2
   15060:	vmov.32	d16[1], r2
   15064:	vstr	d16, [r0, #8]
   15068:	mov	r0, r5
   1506c:	bne	15018 <ReadUInt32Data+0xcdc>
   15070:	b	162e4 <ReadUInt32Data+0x1fa8>
   15074:	cmp	r7, #256	; 0x100
   15078:	bgt	15f14 <ReadUInt32Data+0x1bd8>
   1507c:	ldr	r3, [r4]
   15080:	add	r6, sp, #248	; 0xf8
   15084:	mov	r1, r8
   15088:	mov	r2, r7
   1508c:	mov	r0, r6
   15090:	bl	18b8 <fread@plt>
   15094:	mov	r9, r0
   15098:	cmp	r7, #1
   1509c:	blt	16680 <ReadUInt32Data+0x2344>
   150a0:	mov	lr, #0
   150a4:	beq	16390 <ReadUInt32Data+0x2054>
   150a8:	bic	lr, r7, #1
   150ac:	mov	r2, #1
   150b0:	str	r5, [sp, #20]
   150b4:	str	r8, [sp, #32]
   150b8:	subs	r1, lr, #2
   150bc:	add	r1, r2, r1, lsr #1
   150c0:	and	ip, r1, #1
   150c4:	beq	16358 <ReadUInt32Data+0x201c>
   150c8:	sub	r3, r1, ip
   150cc:	mov	r1, #0
   150d0:	mov	r8, #32
   150d4:	mov	r5, #16
   150d8:	mov	r2, sl
   150dc:	mov	r4, sl
   150e0:	add	r0, r6, #16
   150e4:	vld1.64	{d16-d17}, [r6], r8
   150e8:	subs	r3, r3, #2
   150ec:	add	r1, r1, #4
   150f0:	vmovn.i64	d16, q8
   150f4:	vst1.32	{d16}, [r4], r5
   150f8:	vld1.64	{d16-d17}, [r0]
   150fc:	vmovn.i64	d16, q8
   15100:	vstr	d16, [r2, #8]
   15104:	mov	r2, r4
   15108:	bne	150e0 <ReadUInt32Data+0xda4>
   1510c:	b	1635c <ReadUInt32Data+0x2020>
   15110:	sub	r0, r7, #256	; 0x100
   15114:	str	r8, [sp, #32]
   15118:	mov	r8, sl
   1511c:	add	r1, sl, #1024	; 0x400
   15120:	add	r6, sp, #248	; 0xf8
   15124:	mov	r5, #0
   15128:	str	r7, [sp, #12]
   1512c:	str	r0, [sp, #28]
   15130:	mov	r0, #0
   15134:	mov	sl, r1
   15138:	ldr	r3, [r4]
   1513c:	ldr	r1, [sp, #32]
   15140:	mov	r9, r0
   15144:	mov	r0, r6
   15148:	mov	r2, #256	; 0x100
   1514c:	bl	18b8 <fread@plt>
   15150:	mov	r4, r0
   15154:	mov	r7, #0
   15158:	add	r0, r6, r7
   1515c:	bl	1c20 <Mat_int16Swap>
   15160:	str	r0, [r8, r7, lsl #1]
   15164:	add	r7, r7, #2
   15168:	cmp	r7, #512	; 0x200
   1516c:	bne	15158 <ReadUInt32Data+0xe1c>
   15170:	ldr	r2, [sp, #28]
   15174:	add	r5, r4, r5
   15178:	ldr	r4, [sp, #36]	; 0x24
   1517c:	add	r0, r9, #256	; 0x100
   15180:	add	r8, r8, #1024	; 0x400
   15184:	add	r1, sl, #1024	; 0x400
   15188:	cmp	r0, r2
   1518c:	blt	15134 <ReadUInt32Data+0xdf8>
   15190:	ldr	r7, [sp, #12]
   15194:	cmp	r0, r7
   15198:	bge	15484 <ReadUInt32Data+0x1148>
   1519c:	ldr	r8, [sp, #32]
   151a0:	ldr	r3, [r4]
   151a4:	sub	r6, r7, r0
   151a8:	add	r4, sp, #248	; 0xf8
   151ac:	mov	r0, r4
   151b0:	mov	r2, r6
   151b4:	mov	r1, r8
   151b8:	bl	18b8 <fread@plt>
   151bc:	add	r5, r0, r5
   151c0:	cmp	r6, #1
   151c4:	blt	1547c <ReadUInt32Data+0x1140>
   151c8:	sub	r0, r7, r9
   151cc:	sub	r6, r0, #256	; 0x100
   151d0:	mov	r0, r4
   151d4:	bl	1c20 <Mat_int16Swap>
   151d8:	str	r0, [sl], #4
   151dc:	add	r4, r4, #2
   151e0:	subs	r6, r6, #1
   151e4:	bne	151d0 <ReadUInt32Data+0xe94>
   151e8:	b	1547c <ReadUInt32Data+0x1140>
   151ec:	sub	r0, r7, #256	; 0x100
   151f0:	str	r8, [sp, #32]
   151f4:	mov	r8, sl
   151f8:	add	r1, sl, #1024	; 0x400
   151fc:	add	r6, sp, #248	; 0xf8
   15200:	mov	r5, #0
   15204:	str	r7, [sp, #12]
   15208:	str	r0, [sp, #28]
   1520c:	mov	r0, #0
   15210:	mov	sl, r1
   15214:	ldr	r3, [r4]
   15218:	ldr	r1, [sp, #32]
   1521c:	mov	r9, r0
   15220:	mov	r0, r6
   15224:	mov	r2, #256	; 0x100
   15228:	bl	18b8 <fread@plt>
   1522c:	mov	r4, r0
   15230:	mov	r7, #0
   15234:	add	r0, r6, r7
   15238:	bl	1c34 <Mat_uint16Swap>
   1523c:	str	r0, [r8, r7, lsl #1]
   15240:	add	r7, r7, #2
   15244:	cmp	r7, #512	; 0x200
   15248:	bne	15234 <ReadUInt32Data+0xef8>
   1524c:	ldr	r2, [sp, #28]
   15250:	add	r5, r4, r5
   15254:	ldr	r4, [sp, #36]	; 0x24
   15258:	add	r0, r9, #256	; 0x100
   1525c:	add	r8, r8, #1024	; 0x400
   15260:	add	r1, sl, #1024	; 0x400
   15264:	cmp	r0, r2
   15268:	blt	15210 <ReadUInt32Data+0xed4>
   1526c:	ldr	r7, [sp, #12]
   15270:	cmp	r0, r7
   15274:	bge	15484 <ReadUInt32Data+0x1148>
   15278:	ldr	r8, [sp, #32]
   1527c:	ldr	r3, [r4]
   15280:	sub	r6, r7, r0
   15284:	add	r4, sp, #248	; 0xf8
   15288:	mov	r0, r4
   1528c:	mov	r2, r6
   15290:	mov	r1, r8
   15294:	bl	18b8 <fread@plt>
   15298:	add	r5, r0, r5
   1529c:	cmp	r6, #1
   152a0:	blt	1547c <ReadUInt32Data+0x1140>
   152a4:	sub	r0, r7, r9
   152a8:	sub	r6, r0, #256	; 0x100
   152ac:	mov	r0, r4
   152b0:	bl	1c34 <Mat_uint16Swap>
   152b4:	str	r0, [sl], #4
   152b8:	add	r4, r4, #2
   152bc:	subs	r6, r6, #1
   152c0:	bne	152ac <ReadUInt32Data+0xf70>
   152c4:	b	1547c <ReadUInt32Data+0x1140>
   152c8:	sub	r0, r7, #256	; 0x100
   152cc:	str	r8, [sp, #32]
   152d0:	mov	r8, sl
   152d4:	add	r1, sl, #1024	; 0x400
   152d8:	add	r6, sp, #248	; 0xf8
   152dc:	mov	r5, #0
   152e0:	str	r7, [sp, #12]
   152e4:	str	r0, [sp, #28]
   152e8:	mov	r0, #0
   152ec:	mov	sl, r1
   152f0:	ldr	r3, [r4]
   152f4:	ldr	r1, [sp, #32]
   152f8:	mov	r9, r0
   152fc:	mov	r0, r6
   15300:	mov	r2, #256	; 0x100
   15304:	bl	18b8 <fread@plt>
   15308:	mov	r4, r0
   1530c:	mov	r7, #0
   15310:	add	r0, r6, r7
   15314:	bl	1bf8 <Mat_int32Swap>
   15318:	str	r0, [r8, r7]
   1531c:	add	r7, r7, #4
   15320:	cmp	r7, #1024	; 0x400
   15324:	bne	15310 <ReadUInt32Data+0xfd4>
   15328:	ldr	r2, [sp, #28]
   1532c:	add	r5, r4, r5
   15330:	ldr	r4, [sp, #36]	; 0x24
   15334:	add	r0, r9, #256	; 0x100
   15338:	add	r8, r8, #1024	; 0x400
   1533c:	add	r1, sl, #1024	; 0x400
   15340:	cmp	r0, r2
   15344:	blt	152ec <ReadUInt32Data+0xfb0>
   15348:	ldr	r7, [sp, #12]
   1534c:	cmp	r0, r7
   15350:	bge	15484 <ReadUInt32Data+0x1148>
   15354:	ldr	r8, [sp, #32]
   15358:	ldr	r3, [r4]
   1535c:	sub	r6, r7, r0
   15360:	add	r4, sp, #248	; 0xf8
   15364:	mov	r0, r4
   15368:	mov	r2, r6
   1536c:	mov	r1, r8
   15370:	bl	18b8 <fread@plt>
   15374:	add	r5, r0, r5
   15378:	cmp	r6, #1
   1537c:	blt	1547c <ReadUInt32Data+0x1140>
   15380:	sub	r0, r7, r9
   15384:	sub	r6, r0, #256	; 0x100
   15388:	mov	r0, r4
   1538c:	bl	1bf8 <Mat_int32Swap>
   15390:	str	r0, [sl], #4
   15394:	add	r4, r4, #4
   15398:	subs	r6, r6, #1
   1539c:	bne	15388 <ReadUInt32Data+0x104c>
   153a0:	b	1547c <ReadUInt32Data+0x1140>
   153a4:	sub	r0, r7, #256	; 0x100
   153a8:	str	r8, [sp, #32]
   153ac:	mov	r8, sl
   153b0:	add	r1, sl, #1024	; 0x400
   153b4:	add	r6, sp, #248	; 0xf8
   153b8:	mov	r5, #0
   153bc:	str	r7, [sp, #12]
   153c0:	str	r0, [sp, #28]
   153c4:	mov	r0, #0
   153c8:	mov	sl, r1
   153cc:	ldr	r3, [r4]
   153d0:	ldr	r1, [sp, #32]
   153d4:	mov	r9, r0
   153d8:	mov	r0, r6
   153dc:	mov	r2, #256	; 0x100
   153e0:	bl	18b8 <fread@plt>
   153e4:	mov	r4, r0
   153e8:	mov	r7, #0
   153ec:	add	r0, r6, r7
   153f0:	bl	1c0c <Mat_uint32Swap>
   153f4:	str	r0, [r8, r7]
   153f8:	add	r7, r7, #4
   153fc:	cmp	r7, #1024	; 0x400
   15400:	bne	153ec <ReadUInt32Data+0x10b0>
   15404:	ldr	r2, [sp, #28]
   15408:	add	r5, r4, r5
   1540c:	ldr	r4, [sp, #36]	; 0x24
   15410:	add	r0, r9, #256	; 0x100
   15414:	add	r8, r8, #1024	; 0x400
   15418:	add	r1, sl, #1024	; 0x400
   1541c:	cmp	r0, r2
   15420:	blt	153c8 <ReadUInt32Data+0x108c>
   15424:	ldr	r7, [sp, #12]
   15428:	cmp	r0, r7
   1542c:	bge	15484 <ReadUInt32Data+0x1148>
   15430:	ldr	r8, [sp, #32]
   15434:	ldr	r3, [r4]
   15438:	sub	r6, r7, r0
   1543c:	add	r4, sp, #248	; 0xf8
   15440:	mov	r0, r4
   15444:	mov	r2, r6
   15448:	mov	r1, r8
   1544c:	bl	18b8 <fread@plt>
   15450:	add	r5, r0, r5
   15454:	cmp	r6, #1
   15458:	blt	1547c <ReadUInt32Data+0x1140>
   1545c:	sub	r0, r7, r9
   15460:	sub	r6, r0, #256	; 0x100
   15464:	mov	r0, r4
   15468:	bl	1c0c <Mat_uint32Swap>
   1546c:	str	r0, [sl], #4
   15470:	add	r4, r4, #4
   15474:	subs	r6, r6, #1
   15478:	bne	15464 <ReadUInt32Data+0x1128>
   1547c:	mov	r9, r5
   15480:	b	16aac <ReadUInt32Data+0x2770>
   15484:	mov	r9, r5
   15488:	b	16aa8 <ReadUInt32Data+0x276c>
   1548c:	sub	r0, r7, #256	; 0x100
   15490:	str	r8, [sp, #32]
   15494:	mov	r8, sl
   15498:	add	r1, sl, #1024	; 0x400
   1549c:	add	r6, sp, #248	; 0xf8
   154a0:	mov	r9, #0
   154a4:	str	r7, [sp, #12]
   154a8:	str	r0, [sp, #28]
   154ac:	mov	r0, #0
   154b0:	mov	r5, r1
   154b4:	ldr	r3, [r4]
   154b8:	ldr	r1, [sp, #32]
   154bc:	mov	sl, r0
   154c0:	mov	r0, r6
   154c4:	mov	r2, #256	; 0x100
   154c8:	bl	18b8 <fread@plt>
   154cc:	mov	r4, r0
   154d0:	mov	r7, #0
   154d4:	add	r0, r6, r7
   154d8:	bl	1c4c <Mat_floatSwap>
   154dc:	vcvt.u32.f32	s0, s0
   154e0:	vmov	r0, s0
   154e4:	str	r0, [r8, r7]
   154e8:	add	r7, r7, #4
   154ec:	cmp	r7, #1024	; 0x400
   154f0:	bne	154d4 <ReadUInt32Data+0x1198>
   154f4:	ldr	r2, [sp, #28]
   154f8:	add	r9, r4, r9
   154fc:	ldr	r4, [sp, #36]	; 0x24
   15500:	add	r0, sl, #256	; 0x100
   15504:	add	r8, r8, #1024	; 0x400
   15508:	add	r1, r5, #1024	; 0x400
   1550c:	cmp	r0, r2
   15510:	blt	154b0 <ReadUInt32Data+0x1174>
   15514:	ldr	r7, [sp, #12]
   15518:	cmp	r0, r7
   1551c:	bge	16aa8 <ReadUInt32Data+0x276c>
   15520:	ldr	r8, [sp, #32]
   15524:	ldr	r3, [r4]
   15528:	sub	r6, r7, r0
   1552c:	add	r4, sp, #248	; 0xf8
   15530:	mov	r0, r4
   15534:	mov	r2, r6
   15538:	mov	r1, r8
   1553c:	bl	18b8 <fread@plt>
   15540:	add	r9, r0, r9
   15544:	cmp	r6, #1
   15548:	blt	16aac <ReadUInt32Data+0x2770>
   1554c:	sub	r0, r7, sl
   15550:	sub	r6, r0, #256	; 0x100
   15554:	mov	r0, r4
   15558:	bl	1c4c <Mat_floatSwap>
   1555c:	vcvt.u32.f32	s0, s0
   15560:	add	r4, r4, #4
   15564:	subs	r6, r6, #1
   15568:	vmov	r0, s0
   1556c:	str	r0, [r5], #4
   15570:	bne	15554 <ReadUInt32Data+0x1218>
   15574:	b	16aac <ReadUInt32Data+0x2770>
   15578:	mov	r0, sl
   1557c:	sub	r0, r7, #256	; 0x100
   15580:	add	r1, sl, #1024	; 0x400
   15584:	mov	r9, #0
   15588:	str	r8, [sp, #32]
   1558c:	str	r7, [sp, #12]
   15590:	str	r0, [sp, #28]
   15594:	mov	r0, #0
   15598:	mov	r5, r1
   1559c:	ldr	r3, [r4]
   155a0:	ldr	r1, [sp, #32]
   155a4:	add	r4, sp, #248	; 0xf8
   155a8:	mov	r8, r0
   155ac:	mov	r2, #256	; 0x100
   155b0:	mov	r0, r4
   155b4:	bl	18b8 <fread@plt>
   155b8:	mov	r6, r0
   155bc:	mov	r7, #0
   155c0:	mov	r0, r4
   155c4:	bl	1c90 <Mat_doubleSwap>
   155c8:	vcvt.u32.f64	s0, d0
   155cc:	add	r4, r4, #8
   155d0:	vmov	r0, s0
   155d4:	str	r0, [sl, r7, lsl #2]
   155d8:	add	r7, r7, #1
   155dc:	cmp	r7, #256	; 0x100
   155e0:	bne	155c0 <ReadUInt32Data+0x1284>
   155e4:	ldr	r2, [sp, #28]
   155e8:	ldr	r4, [sp, #36]	; 0x24
   155ec:	add	r0, r8, #256	; 0x100
   155f0:	add	r9, r6, r9
   155f4:	add	sl, sl, #1024	; 0x400
   155f8:	add	r1, r5, #1024	; 0x400
   155fc:	cmp	r0, r2
   15600:	blt	15598 <ReadUInt32Data+0x125c>
   15604:	ldr	r7, [sp, #12]
   15608:	cmp	r0, r7
   1560c:	bge	16aa8 <ReadUInt32Data+0x276c>
   15610:	ldr	r3, [r4]
   15614:	ldr	r1, [sp, #32]
   15618:	sub	r6, r7, r0
   1561c:	add	r4, sp, #248	; 0xf8
   15620:	mov	r0, r4
   15624:	mov	r2, r6
   15628:	bl	18b8 <fread@plt>
   1562c:	add	r9, r0, r9
   15630:	cmp	r6, #1
   15634:	blt	16aa8 <ReadUInt32Data+0x276c>
   15638:	sub	r0, r7, r8
   1563c:	sub	r6, r0, #256	; 0x100
   15640:	mov	r0, r4
   15644:	bl	1c90 <Mat_doubleSwap>
   15648:	vcvt.u32.f64	s0, d0
   1564c:	add	r4, r4, #8
   15650:	subs	r6, r6, #1
   15654:	vmov	r0, s0
   15658:	str	r0, [r5], #4
   1565c:	bne	15640 <ReadUInt32Data+0x1304>
   15660:	b	16aa8 <ReadUInt32Data+0x276c>
   15664:	sub	r0, r7, #256	; 0x100
   15668:	str	r8, [sp, #32]
   1566c:	add	r1, sl, #1024	; 0x400
   15670:	mov	r8, sl
   15674:	mov	r9, #0
   15678:	str	r5, [sp, #20]
   1567c:	str	r7, [sp, #12]
   15680:	str	sl, [sp, #4]
   15684:	str	r0, [sp, #28]
   15688:	mov	r0, #0
   1568c:	mov	r5, r1
   15690:	ldr	r3, [r4]
   15694:	ldr	r1, [sp, #32]
   15698:	add	r4, sp, #248	; 0xf8
   1569c:	mov	r7, r0
   156a0:	mov	r2, #256	; 0x100
   156a4:	mov	sl, r9
   156a8:	mov	r0, r4
   156ac:	bl	18b8 <fread@plt>
   156b0:	mov	r6, r0
   156b4:	mov	r9, #0
   156b8:	mov	r0, r4
   156bc:	bl	1b84 <Mat_int64Swap>
   156c0:	str	r0, [r8, r9, lsl #2]
   156c4:	add	r9, r9, #1
   156c8:	add	r4, r4, #8
   156cc:	cmp	r9, #256	; 0x100
   156d0:	bne	156b8 <ReadUInt32Data+0x137c>
   156d4:	ldr	r2, [sp, #28]
   156d8:	ldr	r4, [sp, #36]	; 0x24
   156dc:	add	r0, r7, #256	; 0x100
   156e0:	mov	r9, sl
   156e4:	add	r9, r6, sl
   156e8:	add	r8, r8, #1024	; 0x400
   156ec:	add	r1, r5, #1024	; 0x400
   156f0:	cmp	r0, r2
   156f4:	blt	1568c <ReadUInt32Data+0x1350>
   156f8:	mov	sl, r7
   156fc:	ldr	r7, [sp, #12]
   15700:	cmp	r0, r7
   15704:	bge	16094 <ReadUInt32Data+0x1d58>
   15708:	mov	r1, r4
   1570c:	ldr	r8, [sp, #32]
   15710:	sub	r4, r7, r0
   15714:	add	r6, sp, #248	; 0xf8
   15718:	ldr	r3, [r1]
   1571c:	mov	r0, r6
   15720:	mov	r2, r4
   15724:	mov	r1, r8
   15728:	bl	18b8 <fread@plt>
   1572c:	add	r9, r0, r9
   15730:	cmp	r4, #1
   15734:	blt	15758 <ReadUInt32Data+0x141c>
   15738:	sub	r0, r7, sl
   1573c:	sub	r4, r0, #256	; 0x100
   15740:	mov	r0, r6
   15744:	bl	1b84 <Mat_int64Swap>
   15748:	str	r0, [r5], #4
   1574c:	add	r6, r6, #8
   15750:	subs	r4, r4, #1
   15754:	bne	15740 <ReadUInt32Data+0x1404>
   15758:	ldr	sl, [sp, #4]
   1575c:	b	16678 <ReadUInt32Data+0x233c>
   15760:	ldr	r8, [sp, #32]
   15764:	mov	r9, sl
   15768:	b	16aac <ReadUInt32Data+0x2770>
   1576c:	sub	r1, r7, #256	; 0x100
   15770:	str	r8, [sp, #32]
   15774:	str	r7, [sp, #12]
   15778:	mov	r8, sl
   1577c:	add	r0, sl, #1024	; 0x400
   15780:	mov	r2, #0
   15784:	mov	r7, #0
   15788:	add	r6, sp, #248	; 0xf8
   1578c:	add	r9, sp, #88	; 0x58
   15790:	mov	sl, #32
   15794:	add	r5, sp, #96	; 0x60
   15798:	str	r1, [sp, #8]
   1579c:	mov	r1, #256	; 0x100
   157a0:	str	r8, [sp, #4]
   157a4:	str	r2, [sp, #28]
   157a8:	add	r2, sp, #16
   157ac:	stm	r2, {r0, r1, r7}
   157b0:	ldr	r0, [sp, #36]	; 0x24
   157b4:	ldr	r1, [sp, #32]
   157b8:	mov	r2, #256	; 0x100
   157bc:	ldr	r3, [r0]
   157c0:	mov	r0, r6
   157c4:	bl	18b8 <fread@plt>
   157c8:	mov	r1, r8
   157cc:	mov	r2, #0
   157d0:	ldr	r3, [r6, r2]
   157d4:	str	r3, [sp, #88]	; 0x58
   157d8:	add	r3, r6, r2
   157dc:	add	r2, r2, #16
   157e0:	ldr	r7, [r3, #4]
   157e4:	cmp	r2, #512	; 0x200
   157e8:	str	r7, [sp, #92]	; 0x5c
   157ec:	add	r7, r1, #16
   157f0:	vld1.16	{d16}, [r9 :64]
   157f4:	vmovl.s16	q8, d16
   157f8:	vst1.32	{d16-d17}, [r1], sl
   157fc:	ldr	r4, [r3, #8]
   15800:	ldr	r3, [r3, #12]
   15804:	str	r4, [sp, #96]	; 0x60
   15808:	str	r3, [sp, #100]	; 0x64
   1580c:	vld1.16	{d16}, [r5 :64]
   15810:	vmovl.s16	q8, d16
   15814:	vst1.32	{d16-d17}, [r7]
   15818:	bne	157d0 <ReadUInt32Data+0x1494>
   1581c:	ldr	r1, [sp, #28]
   15820:	ldr	r2, [sp, #24]
   15824:	add	r8, r8, #1024	; 0x400
   15828:	add	r1, r0, r1
   1582c:	ldr	r0, [sp, #16]
   15830:	add	r7, r2, #256	; 0x100
   15834:	ldr	r2, [sp, #8]
   15838:	str	r1, [sp, #28]
   1583c:	ldr	r1, [sp, #20]
   15840:	add	r0, r0, #1024	; 0x400
   15844:	cmp	r7, r2
   15848:	add	r1, r1, #256	; 0x100
   1584c:	blt	157a8 <ReadUInt32Data+0x146c>
   15850:	ldr	r4, [sp, #12]
   15854:	cmp	r7, r4
   15858:	bge	15b2c <ReadUInt32Data+0x17f0>
   1585c:	ldr	r0, [sp, #36]	; 0x24
   15860:	ldr	r8, [sp, #32]
   15864:	sub	r5, r4, r7
   15868:	add	r6, sp, #248	; 0xf8
   1586c:	mov	r2, r5
   15870:	ldr	r3, [r0]
   15874:	mov	r0, r6
   15878:	mov	r1, r8
   1587c:	bl	18b8 <fread@plt>
   15880:	ldr	r9, [sp, #28]
   15884:	cmp	r5, #1
   15888:	add	r9, r0, r9
   1588c:	blt	16aac <ReadUInt32Data+0x2770>
   15890:	ldr	r3, [sp, #4]
   15894:	mov	lr, #0
   15898:	cmp	r5, #4
   1589c:	bcc	16410 <ReadUInt32Data+0x20d4>
   158a0:	bic	lr, r5, #3
   158a4:	mov	r2, #1
   158a8:	mov	sl, r9
   158ac:	str	r5, [sp, #36]	; 0x24
   158b0:	subs	r1, lr, #4
   158b4:	add	r1, r2, r1, lsr #2
   158b8:	and	r0, r1, #1
   158bc:	str	r0, [sp, #28]
   158c0:	beq	163b4 <ReadUInt32Data+0x2078>
   158c4:	ldr	r0, [sp, #24]
   158c8:	ldr	ip, [sp, #16]
   158cc:	add	r8, sp, #72	; 0x48
   158d0:	mov	r9, #32
   158d4:	sub	r1, r4, r0
   158d8:	add	r4, sp, #80	; 0x50
   158dc:	sub	r1, r1, #256	; 0x100
   158e0:	bic	r1, r1, #3
   158e4:	sub	r1, r1, #4
   158e8:	mvn	r3, r1, lsr #2
   158ec:	add	r1, r2, r1, lsr #2
   158f0:	mov	r2, #0
   158f4:	and	r1, r1, #1
   158f8:	add	r3, r3, r1
   158fc:	ldr	r0, [r6]
   15900:	ldr	r1, [r6, #4]
   15904:	adds	r3, r3, #2
   15908:	add	r2, r2, #8
   1590c:	str	r0, [sp, #72]	; 0x48
   15910:	str	r1, [sp, #76]	; 0x4c
   15914:	add	r0, ip, #16
   15918:	vld1.16	{d16}, [r8 :64]
   1591c:	vmovl.s16	q8, d16
   15920:	vst1.32	{d16-d17}, [ip], r9
   15924:	ldr	r1, [r6, #8]
   15928:	ldr	r5, [r6, #12]
   1592c:	add	r6, r6, #16
   15930:	str	r5, [sp, #84]	; 0x54
   15934:	str	r1, [sp, #80]	; 0x50
   15938:	vld1.16	{d16}, [r4 :64]
   1593c:	vmovl.s16	q8, d16
   15940:	vst1.32	{d16-d17}, [r0]
   15944:	bne	158fc <ReadUInt32Data+0x15c0>
   15948:	b	163b8 <ReadUInt32Data+0x207c>
   1594c:	sub	r1, r7, #256	; 0x100
   15950:	str	r8, [sp, #32]
   15954:	str	r7, [sp, #12]
   15958:	mov	r8, sl
   1595c:	add	r0, sl, #1024	; 0x400
   15960:	mov	r2, #0
   15964:	mov	r7, #0
   15968:	add	r6, sp, #248	; 0xf8
   1596c:	add	r9, sp, #152	; 0x98
   15970:	mov	sl, #32
   15974:	add	r5, sp, #160	; 0xa0
   15978:	str	r1, [sp, #8]
   1597c:	mov	r1, #256	; 0x100
   15980:	str	r8, [sp, #4]
   15984:	str	r2, [sp, #28]
   15988:	add	r2, sp, #16
   1598c:	stm	r2, {r0, r1, r7}
   15990:	ldr	r0, [sp, #36]	; 0x24
   15994:	ldr	r1, [sp, #32]
   15998:	mov	r2, #256	; 0x100
   1599c:	ldr	r3, [r0]
   159a0:	mov	r0, r6
   159a4:	bl	18b8 <fread@plt>
   159a8:	mov	r1, r8
   159ac:	mov	r2, #0
   159b0:	ldr	r3, [r6, r2]
   159b4:	str	r3, [sp, #152]	; 0x98
   159b8:	add	r3, r6, r2
   159bc:	add	r2, r2, #16
   159c0:	ldr	r7, [r3, #4]
   159c4:	cmp	r2, #512	; 0x200
   159c8:	str	r7, [sp, #156]	; 0x9c
   159cc:	add	r7, r1, #16
   159d0:	vld1.16	{d16}, [r9 :64]
   159d4:	vmovl.u16	q8, d16
   159d8:	vst1.32	{d16-d17}, [r1], sl
   159dc:	ldr	r4, [r3, #8]
   159e0:	ldr	r3, [r3, #12]
   159e4:	str	r4, [sp, #160]	; 0xa0
   159e8:	str	r3, [sp, #164]	; 0xa4
   159ec:	vld1.16	{d16}, [r5 :64]
   159f0:	vmovl.u16	q8, d16
   159f4:	vst1.32	{d16-d17}, [r7]
   159f8:	bne	159b0 <ReadUInt32Data+0x1674>
   159fc:	ldr	r1, [sp, #28]
   15a00:	ldr	r2, [sp, #24]
   15a04:	add	r8, r8, #1024	; 0x400
   15a08:	add	r1, r0, r1
   15a0c:	ldr	r0, [sp, #16]
   15a10:	add	r7, r2, #256	; 0x100
   15a14:	ldr	r2, [sp, #8]
   15a18:	str	r1, [sp, #28]
   15a1c:	ldr	r1, [sp, #20]
   15a20:	add	r0, r0, #1024	; 0x400
   15a24:	cmp	r7, r2
   15a28:	add	r1, r1, #256	; 0x100
   15a2c:	blt	15988 <ReadUInt32Data+0x164c>
   15a30:	ldr	r4, [sp, #12]
   15a34:	cmp	r7, r4
   15a38:	bge	15b2c <ReadUInt32Data+0x17f0>
   15a3c:	ldr	r0, [sp, #36]	; 0x24
   15a40:	ldr	r8, [sp, #32]
   15a44:	sub	r5, r4, r7
   15a48:	add	r6, sp, #248	; 0xf8
   15a4c:	mov	r2, r5
   15a50:	ldr	r3, [r0]
   15a54:	mov	r0, r6
   15a58:	mov	r1, r8
   15a5c:	bl	18b8 <fread@plt>
   15a60:	ldr	r9, [sp, #28]
   15a64:	cmp	r5, #1
   15a68:	add	r9, r0, r9
   15a6c:	blt	16aac <ReadUInt32Data+0x2770>
   15a70:	ldr	r3, [sp, #4]
   15a74:	mov	lr, #0
   15a78:	cmp	r5, #4
   15a7c:	bcc	164a4 <ReadUInt32Data+0x2168>
   15a80:	bic	lr, r5, #3
   15a84:	mov	r2, #1
   15a88:	mov	sl, r9
   15a8c:	str	r5, [sp, #36]	; 0x24
   15a90:	subs	r1, lr, #4
   15a94:	add	r1, r2, r1, lsr #2
   15a98:	and	r0, r1, #1
   15a9c:	str	r0, [sp, #28]
   15aa0:	beq	16448 <ReadUInt32Data+0x210c>
   15aa4:	ldr	r0, [sp, #24]
   15aa8:	ldr	ip, [sp, #16]
   15aac:	add	r8, sp, #136	; 0x88
   15ab0:	mov	r9, #32
   15ab4:	sub	r1, r4, r0
   15ab8:	add	r4, sp, #144	; 0x90
   15abc:	sub	r1, r1, #256	; 0x100
   15ac0:	bic	r1, r1, #3
   15ac4:	sub	r1, r1, #4
   15ac8:	mvn	r3, r1, lsr #2
   15acc:	add	r1, r2, r1, lsr #2
   15ad0:	mov	r2, #0
   15ad4:	and	r1, r1, #1
   15ad8:	add	r3, r3, r1
   15adc:	ldr	r0, [r6]
   15ae0:	ldr	r1, [r6, #4]
   15ae4:	adds	r3, r3, #2
   15ae8:	add	r2, r2, #8
   15aec:	str	r0, [sp, #136]	; 0x88
   15af0:	str	r1, [sp, #140]	; 0x8c
   15af4:	add	r0, ip, #16
   15af8:	vld1.16	{d16}, [r8 :64]
   15afc:	vmovl.u16	q8, d16
   15b00:	vst1.32	{d16-d17}, [ip], r9
   15b04:	ldr	r1, [r6, #8]
   15b08:	ldr	r5, [r6, #12]
   15b0c:	add	r6, r6, #16
   15b10:	str	r5, [sp, #148]	; 0x94
   15b14:	str	r1, [sp, #144]	; 0x90
   15b18:	vld1.16	{d16}, [r4 :64]
   15b1c:	vmovl.u16	q8, d16
   15b20:	vst1.32	{d16-d17}, [r0]
   15b24:	bne	15adc <ReadUInt32Data+0x17a0>
   15b28:	b	1644c <ReadUInt32Data+0x2110>
   15b2c:	ldr	r8, [sp, #32]
   15b30:	ldr	r9, [sp, #28]
   15b34:	b	16aac <ReadUInt32Data+0x2770>
   15b38:	sub	r0, r7, #256	; 0x100
   15b3c:	lsl	r6, r7, #2
   15b40:	str	r7, [sp, #12]
   15b44:	mov	r5, #0
   15b48:	add	r7, sp, #248	; 0xf8
   15b4c:	mov	r9, #0
   15b50:	str	r0, [sp, #28]
   15b54:	ldr	r3, [r4]
   15b58:	mov	r0, r7
   15b5c:	mov	r1, r8
   15b60:	mov	r2, #256	; 0x100
   15b64:	bl	18b8 <fread@plt>
   15b68:	mov	r4, r0
   15b6c:	add	r0, sl, r5, lsl #2
   15b70:	mov	r1, r7
   15b74:	mov	r2, #1024	; 0x400
   15b78:	bl	181c <memcpy@plt>
   15b7c:	ldr	r0, [sp, #28]
   15b80:	add	r9, r4, r9
   15b84:	ldr	r4, [sp, #36]	; 0x24
   15b88:	add	r5, r5, #256	; 0x100
   15b8c:	sub	r6, r6, #1024	; 0x400
   15b90:	cmp	r5, r0
   15b94:	blt	15b54 <ReadUInt32Data+0x1818>
   15b98:	mov	r7, sl
   15b9c:	ldr	sl, [sp, #12]
   15ba0:	cmp	r5, sl
   15ba4:	bge	16aac <ReadUInt32Data+0x2770>
   15ba8:	mov	r0, r4
   15bac:	sub	r4, sl, r5
   15bb0:	mov	r1, r8
   15bb4:	ldr	r3, [r0]
   15bb8:	add	r0, sp, #248	; 0xf8
   15bbc:	mov	r2, r4
   15bc0:	bl	18b8 <fread@plt>
   15bc4:	add	r9, r0, r9
   15bc8:	cmp	r4, #1
   15bcc:	blt	16aac <ReadUInt32Data+0x2770>
   15bd0:	add	r0, r7, r5, lsl #2
   15bd4:	add	r1, sp, #248	; 0xf8
   15bd8:	mov	r2, r6
   15bdc:	bl	181c <memcpy@plt>
   15be0:	b	16aac <ReadUInt32Data+0x2770>
   15be4:	str	r7, [sp, #12]
   15be8:	mov	r5, sl
   15bec:	add	r0, sl, #1024	; 0x400
   15bf0:	sub	r7, r7, #256	; 0x100
   15bf4:	mov	sl, #0
   15bf8:	mov	r1, #256	; 0x100
   15bfc:	add	r6, sp, #248	; 0xf8
   15c00:	mov	r9, #0
   15c04:	str	r8, [sp, #32]
   15c08:	str	r5, [sp, #4]
   15c0c:	mov	r4, r0
   15c10:	ldr	r0, [sp, #36]	; 0x24
   15c14:	mov	r8, r1
   15c18:	ldr	r1, [sp, #32]
   15c1c:	mov	r2, #256	; 0x100
   15c20:	ldr	r3, [r0]
   15c24:	mov	r0, r6
   15c28:	bl	18b8 <fread@plt>
   15c2c:	mov	r1, #0
   15c30:	add	r2, r6, r1
   15c34:	add	r3, r5, r1
   15c38:	add	r1, r1, #32
   15c3c:	vld1.32	{d16-d17}, [r2]!
   15c40:	cmp	r1, #1024	; 0x400
   15c44:	vcvt.u32.f32	q8, q8
   15c48:	vst1.32	{d16-d17}, [r3]!
   15c4c:	vld1.32	{d16-d17}, [r2]
   15c50:	vcvt.u32.f32	q8, q8
   15c54:	vst1.32	{d16-d17}, [r3]
   15c58:	bne	15c30 <ReadUInt32Data+0x18f4>
   15c5c:	mov	r2, sl
   15c60:	add	sl, sl, #256	; 0x100
   15c64:	add	r9, r0, r9
   15c68:	add	r5, r5, #1024	; 0x400
   15c6c:	add	r0, r4, #1024	; 0x400
   15c70:	add	r1, r8, #256	; 0x100
   15c74:	cmp	sl, r7
   15c78:	blt	15c0c <ReadUInt32Data+0x18d0>
   15c7c:	ldr	r0, [sp, #12]
   15c80:	str	r2, [sp, #28]
   15c84:	cmp	sl, r0
   15c88:	bge	16aa8 <ReadUInt32Data+0x276c>
   15c8c:	sub	r5, r0, sl
   15c90:	ldr	r0, [sp, #36]	; 0x24
   15c94:	ldr	r1, [sp, #32]
   15c98:	add	r6, sp, #248	; 0xf8
   15c9c:	mov	r2, r5
   15ca0:	ldr	r3, [r0]
   15ca4:	mov	r0, r6
   15ca8:	bl	18b8 <fread@plt>
   15cac:	add	r9, r0, r9
   15cb0:	cmp	r5, #1
   15cb4:	blt	16aa8 <ReadUInt32Data+0x276c>
   15cb8:	mov	r0, #0
   15cbc:	cmp	r5, #4
   15cc0:	bcc	16510 <ReadUInt32Data+0x21d4>
   15cc4:	bic	r0, r5, #3
   15cc8:	mov	r2, #1
   15ccc:	mov	lr, r5
   15cd0:	subs	r1, r0, #4
   15cd4:	add	r1, r2, r1, lsr #2
   15cd8:	and	ip, r1, #1
   15cdc:	beq	164dc <ReadUInt32Data+0x21a0>
   15ce0:	ldr	r1, [sp, #12]
   15ce4:	ldr	r3, [sp, #28]
   15ce8:	sub	r3, r1, r3
   15cec:	sub	r3, r3, #256	; 0x100
   15cf0:	bic	r3, r3, #3
   15cf4:	sub	r3, r3, #4
   15cf8:	add	r2, r2, r3, lsr #2
   15cfc:	mvn	r7, r3, lsr #2
   15d00:	and	r2, r2, #1
   15d04:	add	r3, r7, r2
   15d08:	mov	r2, #0
   15d0c:	mov	r7, #32
   15d10:	add	r5, r6, #16
   15d14:	vld1.32	{d16-d17}, [r6], r7
   15d18:	add	r1, r4, #16
   15d1c:	adds	r3, r3, #2
   15d20:	add	r2, r2, #8
   15d24:	vcvt.u32.f32	q8, q8
   15d28:	vst1.32	{d16-d17}, [r4], r7
   15d2c:	vld1.32	{d16-d17}, [r5]
   15d30:	vcvt.u32.f32	q8, q8
   15d34:	vst1.32	{d16-d17}, [r1]
   15d38:	bne	15d10 <ReadUInt32Data+0x19d4>
   15d3c:	b	164e0 <ReadUInt32Data+0x21a4>
   15d40:	sub	r1, r7, #256	; 0x100
   15d44:	str	r7, [sp, #12]
   15d48:	mov	r7, sl
   15d4c:	add	r0, sl, #1024	; 0x400
   15d50:	mov	sl, #0
   15d54:	mov	r4, #32
   15d58:	mov	r9, #0
   15d5c:	str	r8, [sp, #32]
   15d60:	str	r1, [sp, #24]
   15d64:	mov	r1, #256	; 0x100
   15d68:	str	r7, [sp, #4]
   15d6c:	mov	r8, r0
   15d70:	ldr	r0, [sp, #36]	; 0x24
   15d74:	str	r1, [sp, #28]
   15d78:	ldr	r1, [sp, #32]
   15d7c:	add	r5, sp, #248	; 0xf8
   15d80:	mov	r2, #256	; 0x100
   15d84:	ldr	r3, [r0]
   15d88:	mov	r0, r5
   15d8c:	bl	18b8 <fread@plt>
   15d90:	mov	r1, #0
   15d94:	mov	r3, r5
   15d98:	mov	r2, r5
   15d9c:	vld1.64	{d16-d17}, [r2], r4
   15da0:	add	r3, r3, #16
   15da4:	vcvt.u32.f64	s0, d16
   15da8:	vmov	r5, s0
   15dac:	vcvt.u32.f64	s0, d17
   15db0:	vmov.32	d16[0], r5
   15db4:	vmov	r6, s0
   15db8:	add	r5, r7, r1
   15dbc:	add	r1, r1, #16
   15dc0:	cmp	r1, #1024	; 0x400
   15dc4:	vmov.32	d16[1], r6
   15dc8:	vst1.32	{d16}, [r5]!
   15dcc:	vld1.64	{d16-d17}, [r3]
   15dd0:	vcvt.u32.f64	s0, d16
   15dd4:	vcvt.u32.f64	s2, d17
   15dd8:	vmov	r3, s0
   15ddc:	vmov.32	d16[0], r3
   15de0:	vmov	r3, s2
   15de4:	vmov.32	d16[1], r3
   15de8:	mov	r3, r2
   15dec:	vstr	d16, [r5]
   15df0:	bne	15d9c <ReadUInt32Data+0x1a60>
   15df4:	ldr	r5, [sp, #28]
   15df8:	ldr	r3, [sp, #24]
   15dfc:	mov	r2, sl
   15e00:	add	sl, sl, #256	; 0x100
   15e04:	add	r9, r0, r9
   15e08:	add	r7, r7, #1024	; 0x400
   15e0c:	add	r0, r8, #1024	; 0x400
   15e10:	add	r1, r5, #256	; 0x100
   15e14:	cmp	sl, r3
   15e18:	blt	15d6c <ReadUInt32Data+0x1a30>
   15e1c:	ldr	r0, [sp, #12]
   15e20:	str	r2, [sp, #24]
   15e24:	cmp	sl, r0
   15e28:	bge	16aa8 <ReadUInt32Data+0x276c>
   15e2c:	sub	r6, r0, sl
   15e30:	ldr	r0, [sp, #36]	; 0x24
   15e34:	ldr	r1, [sp, #32]
   15e38:	add	r4, sp, #248	; 0xf8
   15e3c:	mov	r2, r6
   15e40:	ldr	r3, [r0]
   15e44:	mov	r0, r4
   15e48:	bl	18b8 <fread@plt>
   15e4c:	add	r9, r0, r9
   15e50:	cmp	r6, #1
   15e54:	blt	16aa8 <ReadUInt32Data+0x276c>
   15e58:	mov	lr, #0
   15e5c:	beq	165a8 <ReadUInt32Data+0x226c>
   15e60:	bic	lr, r6, #1
   15e64:	mov	r1, #1
   15e68:	str	r6, [sp, #36]	; 0x24
   15e6c:	subs	r2, lr, #2
   15e70:	add	r2, r1, r2, lsr #1
   15e74:	and	ip, r2, #1
   15e78:	beq	16558 <ReadUInt32Data+0x221c>
   15e7c:	ldr	r0, [sp, #12]
   15e80:	ldr	r2, [sp, #24]
   15e84:	mov	r7, #32
   15e88:	mov	r5, #16
   15e8c:	mov	r6, r4
   15e90:	sub	r2, r0, r2
   15e94:	sub	r2, r2, #256	; 0x100
   15e98:	bic	r2, r2, #1
   15e9c:	sub	r2, r2, #2
   15ea0:	add	r1, r1, r2, lsr #1
   15ea4:	mvn	r3, r2, lsr #1
   15ea8:	mov	r2, #0
   15eac:	and	r1, r1, #1
   15eb0:	add	r3, r3, r1
   15eb4:	mov	r1, r8
   15eb8:	vld1.64	{d16-d17}, [r6], r7
   15ebc:	adds	r3, r3, #2
   15ec0:	add	r2, r2, #4
   15ec4:	vcvt.u32.f64	s0, d16
   15ec8:	vcvt.u32.f64	s2, d17
   15ecc:	vmov	r0, s0
   15ed0:	vmov.32	d16[0], r0
   15ed4:	vmov	r0, s2
   15ed8:	vmov.32	d16[1], r0
   15edc:	add	r0, r4, #16
   15ee0:	mov	r4, r6
   15ee4:	vst1.32	{d16}, [r1], r5
   15ee8:	vld1.64	{d16-d17}, [r0]
   15eec:	vcvt.u32.f64	s0, d16
   15ef0:	vcvt.u32.f64	s2, d17
   15ef4:	vmov	r0, s0
   15ef8:	vmov.32	d16[0], r0
   15efc:	vmov	r0, s2
   15f00:	vmov.32	d16[1], r0
   15f04:	vstr	d16, [r8, #8]
   15f08:	mov	r8, r1
   15f0c:	bne	15eb8 <ReadUInt32Data+0x1b7c>
   15f10:	b	1655c <ReadUInt32Data+0x2220>
   15f14:	sub	r1, r7, #256	; 0x100
   15f18:	str	r5, [sp, #20]
   15f1c:	str	r8, [sp, #32]
   15f20:	str	r7, [sp, #12]
   15f24:	mov	r9, sl
   15f28:	add	r0, sl, #1024	; 0x400
   15f2c:	mov	r5, #0
   15f30:	add	sl, sp, #248	; 0xf8
   15f34:	mov	r7, #32
   15f38:	mov	r8, #0
   15f3c:	str	r1, [sp, #24]
   15f40:	mov	r1, #256	; 0x100
   15f44:	str	r9, [sp, #4]
   15f48:	mov	r4, r0
   15f4c:	ldr	r0, [sp, #36]	; 0x24
   15f50:	mov	r6, r1
   15f54:	ldr	r1, [sp, #32]
   15f58:	mov	r2, #256	; 0x100
   15f5c:	str	r5, [sp, #28]
   15f60:	ldr	r3, [r0]
   15f64:	mov	r0, sl
   15f68:	bl	18b8 <fread@plt>
   15f6c:	mov	r1, #0
   15f70:	mov	r2, sl
   15f74:	add	r3, r2, #16
   15f78:	vld1.64	{d16-d17}, [r2], r7
   15f7c:	add	r5, r9, r1
   15f80:	add	r1, r1, #16
   15f84:	cmp	r1, #1024	; 0x400
   15f88:	vmovn.i64	d16, q8
   15f8c:	vst1.32	{d16}, [r5]!
   15f90:	vld1.64	{d16-d17}, [r3]
   15f94:	vmovn.i64	d16, q8
   15f98:	vstr	d16, [r5]
   15f9c:	bne	15f74 <ReadUInt32Data+0x1c38>
   15fa0:	ldr	r2, [sp, #28]
   15fa4:	add	r8, r0, r8
   15fa8:	mov	r1, r6
   15fac:	add	r9, r9, #1024	; 0x400
   15fb0:	add	r0, r4, #1024	; 0x400
   15fb4:	add	r1, r6, #256	; 0x100
   15fb8:	add	r5, r2, #256	; 0x100
   15fbc:	ldr	r2, [sp, #24]
   15fc0:	cmp	r5, r2
   15fc4:	blt	15f48 <ReadUInt32Data+0x1c0c>
   15fc8:	ldr	r7, [sp, #12]
   15fcc:	cmp	r5, r7
   15fd0:	bge	160a0 <ReadUInt32Data+0x1d64>
   15fd4:	ldr	r0, [sp, #36]	; 0x24
   15fd8:	ldr	r1, [sp, #32]
   15fdc:	sub	r7, r7, r5
   15fe0:	add	sl, sp, #248	; 0xf8
   15fe4:	mov	r2, r7
   15fe8:	ldr	r3, [r0]
   15fec:	mov	r0, sl
   15ff0:	bl	18b8 <fread@plt>
   15ff4:	mov	r9, r8
   15ff8:	add	r9, r0, r8
   15ffc:	cmp	r7, #1
   16000:	blt	1662c <ReadUInt32Data+0x22f0>
   16004:	mov	lr, #0
   16008:	beq	1663c <ReadUInt32Data+0x2300>
   1600c:	bic	lr, r7, #1
   16010:	mov	r0, #1
   16014:	mov	r8, r9
   16018:	str	r7, [sp, #24]
   1601c:	subs	r1, lr, #2
   16020:	add	r1, r0, r1, lsr #1
   16024:	and	ip, r1, #1
   16028:	beq	165f0 <ReadUInt32Data+0x22b4>
   1602c:	ldr	r1, [sp, #12]
   16030:	ldr	r2, [sp, #28]
   16034:	mov	r9, #32
   16038:	sub	r1, r1, r2
   1603c:	sub	r1, r1, #256	; 0x100
   16040:	bic	r1, r1, #1
   16044:	sub	r1, r1, #2
   16048:	add	r0, r0, r1, lsr #1
   1604c:	mvn	r2, r1, lsr #1
   16050:	mov	r1, #16
   16054:	and	r0, r0, #1
   16058:	add	r3, r2, r0
   1605c:	mov	r2, #0
   16060:	mov	r0, r4
   16064:	add	r7, sl, #16
   16068:	vld1.64	{d16-d17}, [sl], r9
   1606c:	adds	r3, r3, #2
   16070:	add	r2, r2, #4
   16074:	vmovn.i64	d16, q8
   16078:	vst1.32	{d16}, [r0], r1
   1607c:	vld1.64	{d16-d17}, [r7]
   16080:	vmovn.i64	d16, q8
   16084:	vstr	d16, [r4, #8]
   16088:	mov	r4, r0
   1608c:	bne	16064 <ReadUInt32Data+0x1d28>
   16090:	b	165f4 <ReadUInt32Data+0x22b8>
   16094:	ldr	r8, [sp, #32]
   16098:	ldr	sl, [sp, #4]
   1609c:	b	1667c <ReadUInt32Data+0x2340>
   160a0:	ldr	r0, [sp, #32]
   160a4:	ldr	sl, [sp, #4]
   160a8:	mov	r9, r8
   160ac:	mov	r8, r0
   160b0:	b	16678 <ReadUInt32Data+0x233c>
   160b4:	mov	r2, #0
   160b8:	ldr	r0, [sp, #16]
   160bc:	cmp	r0, #0
   160c0:	beq	160e8 <ReadUInt32Data+0x1dac>
   160c4:	ldr	r0, [r6, r2]
   160c8:	str	r0, [sp, #188]	; 0xbc
   160cc:	add	r0, sp, #188	; 0xbc
   160d0:	vld1.32	{d16[0]}, [r0 :32]
   160d4:	add	r0, r2, r7
   160d8:	add	r0, sl, r0, lsl #2
   160dc:	vmovl.s8	q8, d16
   160e0:	vmovl.s16	q8, d16
   160e4:	vst1.32	{d16-d17}, [r0]
   160e8:	ldr	r0, [sp, #36]	; 0x24
   160ec:	ldr	r4, [sp, #12]
   160f0:	cmp	r0, lr
   160f4:	beq	16aa8 <ReadUInt32Data+0x276c>
   160f8:	ldr	r0, [sp, #24]
   160fc:	add	r1, r6, lr
   16100:	add	r0, lr, r0
   16104:	add	r2, sl, r0, lsl #2
   16108:	ldr	r0, [sp, #28]
   1610c:	sub	r0, r4, r0
   16110:	sub	r0, r0, lr
   16114:	sub	r0, r0, #256	; 0x100
   16118:	ldrsb	r3, [r1], #1
   1611c:	subs	r0, r0, #1
   16120:	str	r3, [r2], #4
   16124:	bne	16118 <ReadUInt32Data+0x1ddc>
   16128:	b	16aa8 <ReadUInt32Data+0x276c>
   1612c:	mov	r2, #0
   16130:	ldr	r0, [sp, #16]
   16134:	ldr	r3, [sp, #4]
   16138:	cmp	r0, #0
   1613c:	beq	16164 <ReadUInt32Data+0x1e28>
   16140:	ldr	r0, [r6, r2]
   16144:	str	r0, [sp, #228]	; 0xe4
   16148:	add	r0, sp, #228	; 0xe4
   1614c:	vld1.32	{d16[0]}, [r0 :32]
   16150:	add	r0, r2, r9
   16154:	add	r0, r3, r0, lsl #2
   16158:	vmovl.u8	q8, d16
   1615c:	vmovl.u16	q8, d16
   16160:	vst1.32	{d16-d17}, [r0]
   16164:	ldr	r0, [sp, #36]	; 0x24
   16168:	cmp	r0, lr
   1616c:	beq	1619c <ReadUInt32Data+0x1e60>
   16170:	ldr	r0, [sp, #24]
   16174:	add	r1, r6, lr
   16178:	add	r0, lr, r0
   1617c:	add	r2, r3, r0, lsl #2
   16180:	sub	r0, r8, sl
   16184:	sub	r0, r0, lr
   16188:	sub	r0, r0, #256	; 0x100
   1618c:	ldrb	r3, [r1], #1
   16190:	subs	r0, r0, #1
   16194:	str	r3, [r2], #4
   16198:	bne	1618c <ReadUInt32Data+0x1e50>
   1619c:	ldr	r9, [sp, #28]
   161a0:	b	16aa8 <ReadUInt32Data+0x276c>
   161a4:	mov	r1, #0
   161a8:	ldr	r9, [sp, #28]
   161ac:	ldr	r8, [sp, #32]
   161b0:	cmp	ip, #0
   161b4:	beq	161e4 <ReadUInt32Data+0x1ea8>
   161b8:	add	r0, sp, #248	; 0xf8
   161bc:	ldr	r2, [r0, r1, lsl #1]
   161c0:	add	r0, r0, r1, lsl #1
   161c4:	str	r2, [sp, #40]	; 0x28
   161c8:	ldr	r0, [r0, #4]
   161cc:	str	r0, [sp, #44]	; 0x2c
   161d0:	add	r0, sp, #40	; 0x28
   161d4:	vld1.16	{d16}, [r0 :64]
   161d8:	add	r0, sl, r1, lsl #2
   161dc:	vmovl.s16	q8, d16
   161e0:	vst1.32	{d16-d17}, [r0]
   161e4:	ldr	r7, [sp, #12]
   161e8:	cmp	lr, r7
   161ec:	beq	16aac <ReadUInt32Data+0x2770>
   161f0:	add	r0, sp, #248	; 0xf8
   161f4:	add	r2, sl, lr, lsl #2
   161f8:	add	r1, r0, lr, lsl #1
   161fc:	sub	r0, r7, lr
   16200:	ldrsh	r3, [r1], #2
   16204:	subs	r0, r0, #1
   16208:	str	r3, [r2], #4
   1620c:	bne	16200 <ReadUInt32Data+0x1ec4>
   16210:	b	16aac <ReadUInt32Data+0x2770>
   16214:	mov	r1, #0
   16218:	ldr	r9, [sp, #28]
   1621c:	ldr	r8, [sp, #32]
   16220:	cmp	ip, #0
   16224:	beq	16254 <ReadUInt32Data+0x1f18>
   16228:	add	r0, sp, #248	; 0xf8
   1622c:	ldr	r2, [r0, r1, lsl #1]
   16230:	add	r0, r0, r1, lsl #1
   16234:	str	r2, [sp, #104]	; 0x68
   16238:	ldr	r0, [r0, #4]
   1623c:	str	r0, [sp, #108]	; 0x6c
   16240:	add	r0, sp, #104	; 0x68
   16244:	vld1.16	{d16}, [r0 :64]
   16248:	add	r0, sl, r1, lsl #2
   1624c:	vmovl.u16	q8, d16
   16250:	vst1.32	{d16-d17}, [r0]
   16254:	ldr	r7, [sp, #12]
   16258:	cmp	lr, r7
   1625c:	beq	16aac <ReadUInt32Data+0x2770>
   16260:	add	r0, sp, #248	; 0xf8
   16264:	add	r2, sl, lr, lsl #2
   16268:	add	r1, r0, lr, lsl #1
   1626c:	sub	r0, r7, lr
   16270:	ldrh	r3, [r1], #2
   16274:	subs	r0, r0, #1
   16278:	str	r3, [r2], #4
   1627c:	bne	16270 <ReadUInt32Data+0x1f34>
   16280:	b	16aac <ReadUInt32Data+0x2770>
   16284:	mov	r1, #0
   16288:	cmp	ip, #0
   1628c:	beq	162a8 <ReadUInt32Data+0x1f6c>
   16290:	add	r2, sp, #248	; 0xf8
   16294:	add	r2, r2, r1, lsl #2
   16298:	add	r1, sl, r1, lsl #2
   1629c:	vld1.32	{d16-d17}, [r2]
   162a0:	vcvt.u32.f32	q8, q8
   162a4:	vst1.32	{d16-d17}, [r1]
   162a8:	cmp	lr, r7
   162ac:	beq	16aac <ReadUInt32Data+0x2770>
   162b0:	add	r1, sp, #248	; 0xf8
   162b4:	add	r2, sl, lr, lsl #2
   162b8:	sub	r0, r7, lr
   162bc:	add	r1, r1, lr, lsl #2
   162c0:	vldr	s0, [r1]
   162c4:	add	r1, r1, #4
   162c8:	subs	r0, r0, #1
   162cc:	vcvt.u32.f32	s0, s0
   162d0:	vmov	r3, s0
   162d4:	str	r3, [r2], #4
   162d8:	bne	162c0 <ReadUInt32Data+0x1f84>
   162dc:	b	16aac <ReadUInt32Data+0x2770>
   162e0:	mov	r1, #0
   162e4:	ldr	r8, [sp, #32]
   162e8:	cmp	ip, #0
   162ec:	beq	1631c <ReadUInt32Data+0x1fe0>
   162f0:	add	r0, sp, #248	; 0xf8
   162f4:	add	r0, r0, r1, lsl #3
   162f8:	vld1.64	{d16-d17}, [r0]
   162fc:	vcvt.u32.f64	s0, d16
   16300:	vmov	r0, s0
   16304:	vcvt.u32.f64	s0, d17
   16308:	vmov.32	d16[0], r0
   1630c:	add	r0, sl, r1, lsl #2
   16310:	vmov	r1, s0
   16314:	vmov.32	d16[1], r1
   16318:	vstr	d16, [r0]
   1631c:	ldr	r7, [sp, #12]
   16320:	cmp	lr, r7
   16324:	beq	16aac <ReadUInt32Data+0x2770>
   16328:	add	r0, sp, #248	; 0xf8
   1632c:	add	r1, sl, lr, lsl #2
   16330:	sub	r2, r7, lr
   16334:	add	r0, r0, lr, lsl #3
   16338:	vldr	d16, [r0]
   1633c:	add	r0, r0, #8
   16340:	subs	r2, r2, #1
   16344:	vcvt.u32.f64	s0, d16
   16348:	vmov	r3, s0
   1634c:	str	r3, [r1], #4
   16350:	bne	16338 <ReadUInt32Data+0x1ffc>
   16354:	b	16aac <ReadUInt32Data+0x2770>
   16358:	mov	r1, #0
   1635c:	ldr	r8, [sp, #32]
   16360:	ldr	r4, [sp, #36]	; 0x24
   16364:	ldr	r5, [sp, #20]
   16368:	cmp	ip, #0
   1636c:	beq	16388 <ReadUInt32Data+0x204c>
   16370:	add	r0, sp, #248	; 0xf8
   16374:	add	r0, r0, r1, lsl #3
   16378:	vld1.64	{d16-d17}, [r0]
   1637c:	add	r0, sl, r1, lsl #2
   16380:	vmovn.i64	d16, q8
   16384:	vstr	d16, [r0]
   16388:	cmp	lr, r7
   1638c:	beq	16680 <ReadUInt32Data+0x2344>
   16390:	add	r0, sp, #248	; 0xf8
   16394:	add	r2, sl, lr, lsl #2
   16398:	add	r1, r0, lr, lsl #3
   1639c:	sub	r0, r7, lr
   163a0:	ldr	r3, [r1], #8
   163a4:	subs	r0, r0, #1
   163a8:	str	r3, [r2], #4
   163ac:	bne	163a0 <ReadUInt32Data+0x2064>
   163b0:	b	16680 <ReadUInt32Data+0x2344>
   163b4:	mov	r2, #0
   163b8:	ldr	r0, [sp, #28]
   163bc:	ldr	r3, [sp, #4]
   163c0:	ldr	r8, [sp, #32]
   163c4:	mov	r9, sl
   163c8:	cmp	r0, #0
   163cc:	beq	16400 <ReadUInt32Data+0x20c4>
   163d0:	add	r0, sp, #248	; 0xf8
   163d4:	ldr	r1, [r0, r2, lsl #1]
   163d8:	add	r0, r0, r2, lsl #1
   163dc:	str	r1, [sp, #64]	; 0x40
   163e0:	ldr	r0, [r0, #4]
   163e4:	str	r0, [sp, #68]	; 0x44
   163e8:	add	r0, sp, #64	; 0x40
   163ec:	vld1.16	{d16}, [r0 :64]
   163f0:	add	r0, r2, r7
   163f4:	add	r0, r3, r0, lsl #2
   163f8:	vmovl.s16	q8, d16
   163fc:	vst1.32	{d16-d17}, [r0]
   16400:	ldr	r0, [sp, #36]	; 0x24
   16404:	ldr	r4, [sp, #12]
   16408:	cmp	r0, lr
   1640c:	beq	16aac <ReadUInt32Data+0x2770>
   16410:	add	r0, sp, #248	; 0xf8
   16414:	add	r1, r0, lr, lsl #1
   16418:	ldr	r0, [sp, #20]
   1641c:	add	r0, lr, r0
   16420:	add	r2, r3, r0, lsl #2
   16424:	ldr	r0, [sp, #24]
   16428:	sub	r0, r4, r0
   1642c:	sub	r0, r0, lr
   16430:	sub	r0, r0, #256	; 0x100
   16434:	ldrsh	r3, [r1], #2
   16438:	subs	r0, r0, #1
   1643c:	str	r3, [r2], #4
   16440:	bne	16434 <ReadUInt32Data+0x20f8>
   16444:	b	16aac <ReadUInt32Data+0x2770>
   16448:	mov	r2, #0
   1644c:	ldr	r0, [sp, #28]
   16450:	ldr	r3, [sp, #4]
   16454:	ldr	r8, [sp, #32]
   16458:	mov	r9, sl
   1645c:	cmp	r0, #0
   16460:	beq	16494 <ReadUInt32Data+0x2158>
   16464:	add	r0, sp, #248	; 0xf8
   16468:	ldr	r1, [r0, r2, lsl #1]
   1646c:	add	r0, r0, r2, lsl #1
   16470:	str	r1, [sp, #128]	; 0x80
   16474:	ldr	r0, [r0, #4]
   16478:	str	r0, [sp, #132]	; 0x84
   1647c:	add	r0, sp, #128	; 0x80
   16480:	vld1.16	{d16}, [r0 :64]
   16484:	add	r0, r2, r7
   16488:	add	r0, r3, r0, lsl #2
   1648c:	vmovl.u16	q8, d16
   16490:	vst1.32	{d16-d17}, [r0]
   16494:	ldr	r0, [sp, #36]	; 0x24
   16498:	ldr	r4, [sp, #12]
   1649c:	cmp	r0, lr
   164a0:	beq	16aac <ReadUInt32Data+0x2770>
   164a4:	add	r0, sp, #248	; 0xf8
   164a8:	add	r1, r0, lr, lsl #1
   164ac:	ldr	r0, [sp, #20]
   164b0:	add	r0, lr, r0
   164b4:	add	r2, r3, r0, lsl #2
   164b8:	ldr	r0, [sp, #24]
   164bc:	sub	r0, r4, r0
   164c0:	sub	r0, r0, lr
   164c4:	sub	r0, r0, #256	; 0x100
   164c8:	ldrh	r3, [r1], #2
   164cc:	subs	r0, r0, #1
   164d0:	str	r3, [r2], #4
   164d4:	bne	164c8 <ReadUInt32Data+0x218c>
   164d8:	b	16aac <ReadUInt32Data+0x2770>
   164dc:	mov	r2, #0
   164e0:	cmp	ip, #0
   164e4:	beq	16508 <ReadUInt32Data+0x21cc>
   164e8:	add	r1, sp, #248	; 0xf8
   164ec:	add	r1, r1, r2, lsl #2
   164f0:	vld1.32	{d16-d17}, [r1]
   164f4:	add	r1, r2, sl
   164f8:	ldr	r2, [sp, #4]
   164fc:	add	r1, r2, r1, lsl #2
   16500:	vcvt.u32.f32	q8, q8
   16504:	vst1.32	{d16-d17}, [r1]
   16508:	cmp	lr, r0
   1650c:	beq	16aa8 <ReadUInt32Data+0x276c>
   16510:	ldr	r3, [sp, #4]
   16514:	add	r2, r0, r8
   16518:	ldr	r7, [sp, #28]
   1651c:	add	r1, sp, #248	; 0xf8
   16520:	add	r1, r1, r0, lsl #2
   16524:	add	r2, r3, r2, lsl #2
   16528:	ldr	r3, [sp, #12]
   1652c:	sub	r3, r3, r7
   16530:	sub	r0, r3, r0
   16534:	sub	r0, r0, #256	; 0x100
   16538:	vldr	s0, [r1]
   1653c:	add	r1, r1, #4
   16540:	subs	r0, r0, #1
   16544:	vcvt.u32.f32	s0, s0
   16548:	vmov	r3, s0
   1654c:	str	r3, [r2], #4
   16550:	bne	16538 <ReadUInt32Data+0x21fc>
   16554:	b	16aa8 <ReadUInt32Data+0x276c>
   16558:	mov	r2, #0
   1655c:	ldr	r5, [sp, #28]
   16560:	cmp	ip, #0
   16564:	beq	1659c <ReadUInt32Data+0x2260>
   16568:	add	r0, sp, #248	; 0xf8
   1656c:	add	r0, r0, r2, lsl #3
   16570:	vld1.64	{d16-d17}, [r0]
   16574:	add	r0, r2, sl
   16578:	vcvt.u32.f64	s0, d16
   1657c:	vmov	r1, s0
   16580:	vcvt.u32.f64	s0, d17
   16584:	vmov.32	d16[0], r1
   16588:	ldr	r1, [sp, #4]
   1658c:	add	r0, r1, r0, lsl #2
   16590:	vmov	r1, s0
   16594:	vmov.32	d16[1], r1
   16598:	vstr	d16, [r0]
   1659c:	ldr	r0, [sp, #36]	; 0x24
   165a0:	cmp	r0, lr
   165a4:	beq	16aa8 <ReadUInt32Data+0x276c>
   165a8:	ldr	r2, [sp, #4]
   165ac:	add	r0, sp, #248	; 0xf8
   165b0:	ldr	r3, [sp, #24]
   165b4:	add	r1, r0, lr, lsl #3
   165b8:	add	r0, lr, r5
   165bc:	add	r2, r2, r0, lsl #2
   165c0:	ldr	r0, [sp, #12]
   165c4:	sub	r0, r0, r3
   165c8:	sub	r0, r0, lr
   165cc:	sub	r0, r0, #256	; 0x100
   165d0:	vldr	d16, [r1]
   165d4:	add	r1, r1, #8
   165d8:	subs	r0, r0, #1
   165dc:	vcvt.u32.f64	s0, d16
   165e0:	vmov	r3, s0
   165e4:	str	r3, [r2], #4
   165e8:	bne	165d0 <ReadUInt32Data+0x2294>
   165ec:	b	16aa8 <ReadUInt32Data+0x276c>
   165f0:	mov	r2, #0
   165f4:	cmp	ip, #0
   165f8:	mov	r9, r8
   165fc:	beq	16620 <ReadUInt32Data+0x22e4>
   16600:	add	r0, sp, #248	; 0xf8
   16604:	ldr	r1, [sp, #4]
   16608:	add	r0, r0, r2, lsl #3
   1660c:	vld1.64	{d16-d17}, [r0]
   16610:	add	r0, r2, r5
   16614:	add	r0, r1, r0, lsl #2
   16618:	vmovn.i64	d16, q8
   1661c:	vstr	d16, [r0]
   16620:	ldr	r0, [sp, #24]
   16624:	cmp	r0, lr
   16628:	bne	1663c <ReadUInt32Data+0x2300>
   1662c:	ldr	r8, [sp, #32]
   16630:	ldr	r7, [sp, #12]
   16634:	ldr	sl, [sp, #4]
   16638:	b	16678 <ReadUInt32Data+0x233c>
   1663c:	ldr	r7, [sp, #12]
   16640:	ldr	r2, [sp, #28]
   16644:	ldr	sl, [sp, #4]
   16648:	add	r0, sp, #248	; 0xf8
   1664c:	add	r1, lr, r6
   16650:	add	r0, r0, lr, lsl #3
   16654:	sub	r2, r7, r2
   16658:	add	r1, sl, r1, lsl #2
   1665c:	sub	r2, r2, lr
   16660:	sub	r2, r2, #256	; 0x100
   16664:	ldr	r3, [r0], #8
   16668:	subs	r2, r2, #1
   1666c:	str	r3, [r1], #4
   16670:	bne	16664 <ReadUInt32Data+0x2328>
   16674:	ldr	r8, [sp, #32]
   16678:	ldr	r4, [sp, #36]	; 0x24
   1667c:	ldr	r5, [sp, #20]
   16680:	cmp	r5, #13
   16684:	bne	16aac <ReadUInt32Data+0x2770>
   16688:	ldr	r0, [r4, #20]
   1668c:	cmp	r0, #0
   16690:	beq	166dc <ReadUInt32Data+0x23a0>
   16694:	cmp	r7, #256	; 0x100
   16698:	bgt	16774 <ReadUInt32Data+0x2438>
   1669c:	ldr	r3, [r4]
   166a0:	add	r4, sp, #248	; 0xf8
   166a4:	mov	r1, r8
   166a8:	mov	r2, r7
   166ac:	mov	r0, r4
   166b0:	bl	18b8 <fread@plt>
   166b4:	add	r9, r0, r9
   166b8:	cmp	r7, #1
   166bc:	blt	16aac <ReadUInt32Data+0x2770>
   166c0:	mov	r0, r4
   166c4:	bl	1bd4 <Mat_uint64Swap>
   166c8:	str	r0, [sl], #4
   166cc:	add	r4, r4, #8
   166d0:	subs	r7, r7, #1
   166d4:	bne	166c0 <ReadUInt32Data+0x2384>
   166d8:	b	16aac <ReadUInt32Data+0x2770>
   166dc:	cmp	r7, #256	; 0x100
   166e0:	bgt	1684c <ReadUInt32Data+0x2510>
   166e4:	ldr	r3, [r4]
   166e8:	add	r4, sp, #248	; 0xf8
   166ec:	mov	r1, r8
   166f0:	mov	r2, r7
   166f4:	mov	r0, r4
   166f8:	bl	18b8 <fread@plt>
   166fc:	add	r9, r0, r9
   16700:	cmp	r7, #1
   16704:	blt	16aac <ReadUInt32Data+0x2770>
   16708:	mov	lr, #0
   1670c:	beq	16a10 <ReadUInt32Data+0x26d4>
   16710:	bic	lr, r7, #1
   16714:	mov	r2, #1
   16718:	str	r8, [sp, #32]
   1671c:	subs	r1, lr, #2
   16720:	add	r1, r2, r1, lsr #1
   16724:	and	ip, r1, #1
   16728:	beq	169e0 <ReadUInt32Data+0x26a4>
   1672c:	sub	r3, r1, ip
   16730:	mov	r1, #0
   16734:	mov	r8, #32
   16738:	mov	r6, #16
   1673c:	mov	r2, sl
   16740:	mov	r5, sl
   16744:	add	r0, r4, #16
   16748:	vld1.64	{d16-d17}, [r4], r8
   1674c:	subs	r3, r3, #2
   16750:	add	r1, r1, #4
   16754:	vmovn.i64	d16, q8
   16758:	vst1.32	{d16}, [r5], r6
   1675c:	vld1.64	{d16-d17}, [r0]
   16760:	vmovn.i64	d16, q8
   16764:	vstr	d16, [r2, #8]
   16768:	mov	r2, r5
   1676c:	bne	16744 <ReadUInt32Data+0x2408>
   16770:	b	169e4 <ReadUInt32Data+0x26a8>
   16774:	sub	r0, r7, #256	; 0x100
   16778:	str	r8, [sp, #32]
   1677c:	mov	r8, sl
   16780:	add	r1, sl, #1024	; 0x400
   16784:	str	r7, [sp, #12]
   16788:	str	r0, [sp, #28]
   1678c:	mov	r0, #0
   16790:	mov	r5, r1
   16794:	ldr	r3, [r4]
   16798:	ldr	r1, [sp, #32]
   1679c:	add	r4, sp, #248	; 0xf8
   167a0:	mov	sl, r0
   167a4:	mov	r2, #256	; 0x100
   167a8:	mov	r0, r4
   167ac:	bl	18b8 <fread@plt>
   167b0:	mov	r6, r0
   167b4:	mov	r7, #0
   167b8:	mov	r0, r4
   167bc:	bl	1bd4 <Mat_uint64Swap>
   167c0:	str	r0, [r8, r7, lsl #2]
   167c4:	add	r7, r7, #1
   167c8:	add	r4, r4, #8
   167cc:	cmp	r7, #256	; 0x100
   167d0:	bne	167b8 <ReadUInt32Data+0x247c>
   167d4:	ldr	r2, [sp, #28]
   167d8:	ldr	r4, [sp, #36]	; 0x24
   167dc:	add	r0, sl, #256	; 0x100
   167e0:	add	r9, r6, r9
   167e4:	add	r8, r8, #1024	; 0x400
   167e8:	add	r1, r5, #1024	; 0x400
   167ec:	cmp	r0, r2
   167f0:	blt	16790 <ReadUInt32Data+0x2454>
   167f4:	ldr	r7, [sp, #12]
   167f8:	cmp	r0, r7
   167fc:	bge	16aa8 <ReadUInt32Data+0x276c>
   16800:	ldr	r3, [r4]
   16804:	ldr	r1, [sp, #32]
   16808:	sub	r6, r7, r0
   1680c:	add	r4, sp, #248	; 0xf8
   16810:	mov	r0, r4
   16814:	mov	r2, r6
   16818:	bl	18b8 <fread@plt>
   1681c:	add	r9, r0, r9
   16820:	cmp	r6, #1
   16824:	blt	16aa8 <ReadUInt32Data+0x276c>
   16828:	sub	r0, r7, sl
   1682c:	sub	r6, r0, #256	; 0x100
   16830:	mov	r0, r4
   16834:	bl	1bd4 <Mat_uint64Swap>
   16838:	str	r0, [r5], #4
   1683c:	add	r4, r4, #8
   16840:	subs	r6, r6, #1
   16844:	bne	16830 <ReadUInt32Data+0x24f4>
   16848:	b	16aa8 <ReadUInt32Data+0x276c>
   1684c:	mov	r0, r8
   16850:	sub	r1, r7, #256	; 0x100
   16854:	mov	r8, r9
   16858:	str	r7, [sp, #12]
   1685c:	mov	r9, sl
   16860:	mov	r7, #32
   16864:	str	r0, [sp, #32]
   16868:	add	r0, sl, #1024	; 0x400
   1686c:	str	r1, [sp, #28]
   16870:	mov	sl, #0
   16874:	mov	r1, #256	; 0x100
   16878:	str	r9, [sp, #4]
   1687c:	mov	r4, r0
   16880:	ldr	r0, [sp, #36]	; 0x24
   16884:	mov	r6, r1
   16888:	ldr	r1, [sp, #32]
   1688c:	add	r5, sp, #248	; 0xf8
   16890:	mov	r2, #256	; 0x100
   16894:	ldr	r3, [r0]
   16898:	mov	r0, r5
   1689c:	bl	18b8 <fread@plt>
   168a0:	mov	r1, #0
   168a4:	mov	r2, r5
   168a8:	add	r3, r2, #16
   168ac:	vld1.64	{d16-d17}, [r2], r7
   168b0:	add	r5, r9, r1
   168b4:	add	r1, r1, #16
   168b8:	cmp	r1, #1024	; 0x400
   168bc:	vmovn.i64	d16, q8
   168c0:	vst1.32	{d16}, [r5]!
   168c4:	vld1.64	{d16-d17}, [r3]
   168c8:	vmovn.i64	d16, q8
   168cc:	vstr	d16, [r5]
   168d0:	bne	168a8 <ReadUInt32Data+0x256c>
   168d4:	ldr	r3, [sp, #28]
   168d8:	mov	r2, sl
   168dc:	add	sl, sl, #256	; 0x100
   168e0:	add	r8, r0, r8
   168e4:	add	r9, r9, #1024	; 0x400
   168e8:	add	r0, r4, #1024	; 0x400
   168ec:	add	r1, r6, #256	; 0x100
   168f0:	cmp	sl, r3
   168f4:	blt	1687c <ReadUInt32Data+0x2540>
   168f8:	ldr	r0, [sp, #12]
   168fc:	str	r2, [sp, #28]
   16900:	cmp	sl, r0
   16904:	bge	169d0 <ReadUInt32Data+0x2694>
   16908:	sub	r2, r0, sl
   1690c:	ldr	r0, [sp, #36]	; 0x24
   16910:	ldr	r1, [sp, #32]
   16914:	add	r7, sp, #248	; 0xf8
   16918:	mov	r5, r6
   1691c:	str	r2, [sp, #24]
   16920:	ldr	r3, [r0]
   16924:	mov	r0, r7
   16928:	bl	18b8 <fread@plt>
   1692c:	mov	r9, r8
   16930:	add	r9, r0, r8
   16934:	ldr	r0, [sp, #24]
   16938:	cmp	r0, #1
   1693c:	blt	16aa8 <ReadUInt32Data+0x276c>
   16940:	ldr	r3, [sp, #12]
   16944:	mov	lr, #0
   16948:	beq	16a74 <ReadUInt32Data+0x2738>
   1694c:	bic	lr, r0, #1
   16950:	mov	r8, r0
   16954:	mov	r0, #1
   16958:	subs	r1, lr, #2
   1695c:	add	r1, r0, r1, lsr #1
   16960:	and	r1, r1, #1
   16964:	str	r1, [sp, #36]	; 0x24
   16968:	beq	16a34 <ReadUInt32Data+0x26f8>
   1696c:	ldr	r1, [sp, #28]
   16970:	mov	ip, #32
   16974:	sub	r1, r3, r1
   16978:	sub	r1, r1, #256	; 0x100
   1697c:	bic	r1, r1, #1
   16980:	sub	r1, r1, #2
   16984:	add	r0, r0, r1, lsr #1
   16988:	mvn	r2, r1, lsr #1
   1698c:	mov	r1, #16
   16990:	and	r0, r0, #1
   16994:	add	r3, r2, r0
   16998:	mov	r2, #0
   1699c:	mov	r0, r4
   169a0:	add	r5, r7, #16
   169a4:	vld1.64	{d16-d17}, [r7], ip
   169a8:	adds	r3, r3, #2
   169ac:	add	r2, r2, #4
   169b0:	vmovn.i64	d16, q8
   169b4:	vst1.32	{d16}, [r0], r1
   169b8:	vld1.64	{d16-d17}, [r5]
   169bc:	vmovn.i64	d16, q8
   169c0:	vstr	d16, [r4, #8]
   169c4:	mov	r4, r0
   169c8:	bne	169a0 <ReadUInt32Data+0x2664>
   169cc:	b	16a38 <ReadUInt32Data+0x26fc>
   169d0:	ldr	r0, [sp, #32]
   169d4:	mov	r9, r8
   169d8:	mov	r8, r0
   169dc:	b	16aac <ReadUInt32Data+0x2770>
   169e0:	mov	r1, #0
   169e4:	ldr	r8, [sp, #32]
   169e8:	cmp	ip, #0
   169ec:	beq	16a08 <ReadUInt32Data+0x26cc>
   169f0:	add	r0, sp, #248	; 0xf8
   169f4:	add	r0, r0, r1, lsl #3
   169f8:	vld1.64	{d16-d17}, [r0]
   169fc:	add	r0, sl, r1, lsl #2
   16a00:	vmovn.i64	d16, q8
   16a04:	vstr	d16, [r0]
   16a08:	cmp	lr, r7
   16a0c:	beq	16aac <ReadUInt32Data+0x2770>
   16a10:	add	r0, sp, #248	; 0xf8
   16a14:	add	r2, sl, lr, lsl #2
   16a18:	add	r1, r0, lr, lsl #3
   16a1c:	sub	r0, r7, lr
   16a20:	ldr	r3, [r1], #8
   16a24:	subs	r0, r0, #1
   16a28:	str	r3, [r2], #4
   16a2c:	bne	16a20 <ReadUInt32Data+0x26e4>
   16a30:	b	16aac <ReadUInt32Data+0x2770>
   16a34:	mov	r2, #0
   16a38:	ldr	r0, [sp, #36]	; 0x24
   16a3c:	cmp	r0, #0
   16a40:	beq	16a64 <ReadUInt32Data+0x2728>
   16a44:	add	r0, sp, #248	; 0xf8
   16a48:	ldr	r1, [sp, #4]
   16a4c:	add	r0, r0, r2, lsl #3
   16a50:	vld1.64	{d16-d17}, [r0]
   16a54:	add	r0, r2, sl
   16a58:	add	r0, r1, r0, lsl #2
   16a5c:	vmovn.i64	d16, q8
   16a60:	vstr	d16, [r0]
   16a64:	ldr	r3, [sp, #12]
   16a68:	cmp	r8, lr
   16a6c:	mov	r5, r6
   16a70:	beq	16aa8 <ReadUInt32Data+0x276c>
   16a74:	ldr	r2, [sp, #4]
   16a78:	add	r1, lr, r5
   16a7c:	add	r0, sp, #248	; 0xf8
   16a80:	add	r0, r0, lr, lsl #3
   16a84:	add	r1, r2, r1, lsl #2
   16a88:	ldr	r2, [sp, #28]
   16a8c:	sub	r2, r3, r2
   16a90:	sub	r2, r2, lr
   16a94:	sub	r2, r2, #256	; 0x100
   16a98:	ldr	r3, [r0], #8
   16a9c:	subs	r2, r2, #1
   16aa0:	str	r3, [r1], #4
   16aa4:	bne	16a98 <ReadUInt32Data+0x275c>
   16aa8:	ldr	r8, [sp, #32]
   16aac:	mul	r0, r9, r8
   16ab0:	sub	sp, fp, #28
   16ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016ab8 <ReadCompressedUInt32Data>:
   16ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16abc:	add	fp, sp, #28
   16ac0:	sub	sp, sp, #12
   16ac4:	mov	r7, r0
   16ac8:	mov	r0, #0
   16acc:	cmp	r1, #0
   16ad0:	beq	16ae4 <ReadCompressedUInt32Data+0x2c>
   16ad4:	cmp	r7, #0
   16ad8:	movne	r5, r2
   16adc:	cmpne	r2, #0
   16ae0:	bne	16aec <ReadCompressedUInt32Data+0x34>
   16ae4:	sub	sp, fp, #28
   16ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16aec:	ldr	sl, [fp, #8]
   16af0:	mov	r0, r3
   16af4:	mov	r4, r3
   16af8:	mov	r6, r1
   16afc:	bl	1924 <Mat_SizeOf@plt>
   16b00:	mov	r9, r0
   16b04:	sub	r0, r4, #1
   16b08:	cmp	r0, #12
   16b0c:	bhi	16fdc <ReadCompressedUInt32Data+0x524>
   16b10:	add	r1, pc, #4
   16b14:	ldr	r0, [r1, r0, lsl #2]
   16b18:	add	pc, r1, r0
   16b1c:	.word	0x00000034
   16b20:	.word	0x0000006c
   16b24:	.word	0x000000a4
   16b28:	.word	0x000000ec
   16b2c:	.word	0x00000134
   16b30:	.word	0x0000017c
   16b34:	.word	0x000001c4
   16b38:	.word	0x000004c0
   16b3c:	.word	0x00000214
   16b40:	.word	0x000004c0
   16b44:	.word	0x000004c0
   16b48:	.word	0x00000264
   16b4c:	.word	0x000002ac
   16b50:	cmp	sl, #1
   16b54:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16b58:	mov	r8, sp
   16b5c:	mov	r4, sl
   16b60:	mov	r0, r7
   16b64:	mov	r1, r6
   16b68:	mov	r2, r8
   16b6c:	mov	r3, r9
   16b70:	bl	3238 <InflateData>
   16b74:	ldrsb	r0, [sp]
   16b78:	subs	r4, r4, #1
   16b7c:	str	r0, [r5], #4
   16b80:	bne	16b60 <ReadCompressedUInt32Data+0xa8>
   16b84:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16b88:	cmp	sl, #1
   16b8c:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16b90:	mov	r8, sp
   16b94:	mov	r4, sl
   16b98:	mov	r0, r7
   16b9c:	mov	r1, r6
   16ba0:	mov	r2, r8
   16ba4:	mov	r3, r9
   16ba8:	bl	3238 <InflateData>
   16bac:	ldrb	r0, [sp]
   16bb0:	subs	r4, r4, #1
   16bb4:	str	r0, [r5], #4
   16bb8:	bne	16b98 <ReadCompressedUInt32Data+0xe0>
   16bbc:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16bc0:	ldr	r0, [r7, #20]
   16bc4:	cmp	r0, #0
   16bc8:	beq	16e10 <ReadCompressedUInt32Data+0x358>
   16bcc:	cmp	sl, #1
   16bd0:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16bd4:	mov	r8, sp
   16bd8:	mov	r4, sl
   16bdc:	mov	r0, r7
   16be0:	mov	r1, r6
   16be4:	mov	r2, r8
   16be8:	mov	r3, r9
   16bec:	bl	3238 <InflateData>
   16bf0:	mov	r0, r8
   16bf4:	bl	1c20 <Mat_int16Swap>
   16bf8:	str	r0, [r5], #4
   16bfc:	subs	r4, r4, #1
   16c00:	bne	16bdc <ReadCompressedUInt32Data+0x124>
   16c04:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16c08:	ldr	r0, [r7, #20]
   16c0c:	cmp	r0, #0
   16c10:	beq	16e48 <ReadCompressedUInt32Data+0x390>
   16c14:	cmp	sl, #1
   16c18:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16c1c:	mov	r8, sp
   16c20:	mov	r4, sl
   16c24:	mov	r0, r7
   16c28:	mov	r1, r6
   16c2c:	mov	r2, r8
   16c30:	mov	r3, r9
   16c34:	bl	3238 <InflateData>
   16c38:	mov	r0, r8
   16c3c:	bl	1c34 <Mat_uint16Swap>
   16c40:	str	r0, [r5], #4
   16c44:	subs	r4, r4, #1
   16c48:	bne	16c24 <ReadCompressedUInt32Data+0x16c>
   16c4c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16c50:	ldr	r0, [r7, #20]
   16c54:	cmp	r0, #0
   16c58:	beq	16e80 <ReadCompressedUInt32Data+0x3c8>
   16c5c:	cmp	sl, #1
   16c60:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16c64:	mov	r8, sp
   16c68:	mov	r4, sl
   16c6c:	mov	r0, r7
   16c70:	mov	r1, r6
   16c74:	mov	r2, r8
   16c78:	mov	r3, r9
   16c7c:	bl	3238 <InflateData>
   16c80:	mov	r0, r8
   16c84:	bl	1bf8 <Mat_int32Swap>
   16c88:	str	r0, [r5], #4
   16c8c:	subs	r4, r4, #1
   16c90:	bne	16c6c <ReadCompressedUInt32Data+0x1b4>
   16c94:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16c98:	ldr	r0, [r7, #20]
   16c9c:	cmp	r0, #0
   16ca0:	beq	16eb8 <ReadCompressedUInt32Data+0x400>
   16ca4:	cmp	sl, #1
   16ca8:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16cac:	mov	r8, sp
   16cb0:	mov	r4, sl
   16cb4:	mov	r0, r7
   16cb8:	mov	r1, r6
   16cbc:	mov	r2, r8
   16cc0:	mov	r3, r9
   16cc4:	bl	3238 <InflateData>
   16cc8:	mov	r0, r8
   16ccc:	bl	1c0c <Mat_uint32Swap>
   16cd0:	str	r0, [r5], #4
   16cd4:	subs	r4, r4, #1
   16cd8:	bne	16cb4 <ReadCompressedUInt32Data+0x1fc>
   16cdc:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16ce0:	ldr	r0, [r7, #20]
   16ce4:	cmp	r0, #0
   16ce8:	beq	16ef0 <ReadCompressedUInt32Data+0x438>
   16cec:	cmp	sl, #1
   16cf0:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16cf4:	mov	r8, sp
   16cf8:	mov	r4, sl
   16cfc:	mov	r0, r7
   16d00:	mov	r1, r6
   16d04:	mov	r2, r8
   16d08:	mov	r3, r9
   16d0c:	bl	3238 <InflateData>
   16d10:	mov	r0, r8
   16d14:	bl	1c4c <Mat_floatSwap>
   16d18:	vcvt.u32.f32	s0, s0
   16d1c:	subs	r4, r4, #1
   16d20:	vmov	r0, s0
   16d24:	str	r0, [r5], #4
   16d28:	bne	16cfc <ReadCompressedUInt32Data+0x244>
   16d2c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16d30:	ldr	r0, [r7, #20]
   16d34:	cmp	r0, #0
   16d38:	beq	16f30 <ReadCompressedUInt32Data+0x478>
   16d3c:	cmp	sl, #1
   16d40:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16d44:	mov	r8, sp
   16d48:	mov	r4, sl
   16d4c:	mov	r0, r7
   16d50:	mov	r1, r6
   16d54:	mov	r2, r8
   16d58:	mov	r3, r9
   16d5c:	bl	3238 <InflateData>
   16d60:	mov	r0, r8
   16d64:	bl	1c90 <Mat_doubleSwap>
   16d68:	vcvt.u32.f64	s0, d0
   16d6c:	subs	r4, r4, #1
   16d70:	vmov	r0, s0
   16d74:	str	r0, [r5], #4
   16d78:	bne	16d4c <ReadCompressedUInt32Data+0x294>
   16d7c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16d80:	ldr	r0, [r7, #20]
   16d84:	cmp	r0, #0
   16d88:	beq	16f70 <ReadCompressedUInt32Data+0x4b8>
   16d8c:	cmp	sl, #1
   16d90:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16d94:	mov	r8, sp
   16d98:	mov	r4, sl
   16d9c:	mov	r0, r7
   16da0:	mov	r1, r6
   16da4:	mov	r2, r8
   16da8:	mov	r3, r9
   16dac:	bl	3238 <InflateData>
   16db0:	mov	r0, r8
   16db4:	bl	1b84 <Mat_int64Swap>
   16db8:	str	r0, [r5], #4
   16dbc:	subs	r4, r4, #1
   16dc0:	bne	16d9c <ReadCompressedUInt32Data+0x2e4>
   16dc4:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16dc8:	ldr	r0, [r7, #20]
   16dcc:	cmp	r0, #0
   16dd0:	beq	16fa8 <ReadCompressedUInt32Data+0x4f0>
   16dd4:	cmp	sl, #1
   16dd8:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16ddc:	mov	r8, sp
   16de0:	mov	r4, sl
   16de4:	mov	r0, r7
   16de8:	mov	r1, r6
   16dec:	mov	r2, r8
   16df0:	mov	r3, r9
   16df4:	bl	3238 <InflateData>
   16df8:	mov	r0, r8
   16dfc:	bl	1bd4 <Mat_uint64Swap>
   16e00:	str	r0, [r5], #4
   16e04:	subs	r4, r4, #1
   16e08:	bne	16de4 <ReadCompressedUInt32Data+0x32c>
   16e0c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16e10:	cmp	sl, #1
   16e14:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16e18:	mov	r8, sp
   16e1c:	mov	r4, sl
   16e20:	mov	r0, r7
   16e24:	mov	r1, r6
   16e28:	mov	r2, r8
   16e2c:	mov	r3, r9
   16e30:	bl	3238 <InflateData>
   16e34:	ldrsh	r0, [sp]
   16e38:	subs	r4, r4, #1
   16e3c:	str	r0, [r5], #4
   16e40:	bne	16e20 <ReadCompressedUInt32Data+0x368>
   16e44:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16e48:	cmp	sl, #1
   16e4c:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16e50:	mov	r8, sp
   16e54:	mov	r4, sl
   16e58:	mov	r0, r7
   16e5c:	mov	r1, r6
   16e60:	mov	r2, r8
   16e64:	mov	r3, r9
   16e68:	bl	3238 <InflateData>
   16e6c:	ldrh	r0, [sp]
   16e70:	subs	r4, r4, #1
   16e74:	str	r0, [r5], #4
   16e78:	bne	16e58 <ReadCompressedUInt32Data+0x3a0>
   16e7c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16e80:	cmp	sl, #1
   16e84:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16e88:	mov	r8, sp
   16e8c:	mov	r4, sl
   16e90:	mov	r0, r7
   16e94:	mov	r1, r6
   16e98:	mov	r2, r8
   16e9c:	mov	r3, r9
   16ea0:	bl	3238 <InflateData>
   16ea4:	ldr	r0, [sp]
   16ea8:	subs	r4, r4, #1
   16eac:	str	r0, [r5], #4
   16eb0:	bne	16e90 <ReadCompressedUInt32Data+0x3d8>
   16eb4:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16eb8:	cmp	sl, #1
   16ebc:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16ec0:	mov	r8, sp
   16ec4:	mov	r4, sl
   16ec8:	mov	r0, r7
   16ecc:	mov	r1, r6
   16ed0:	mov	r2, r8
   16ed4:	mov	r3, r9
   16ed8:	bl	3238 <InflateData>
   16edc:	ldr	r0, [sp]
   16ee0:	subs	r4, r4, #1
   16ee4:	str	r0, [r5], #4
   16ee8:	bne	16ec8 <ReadCompressedUInt32Data+0x410>
   16eec:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16ef0:	cmp	sl, #1
   16ef4:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16ef8:	mov	r8, sp
   16efc:	mov	r4, sl
   16f00:	mov	r0, r7
   16f04:	mov	r1, r6
   16f08:	mov	r2, r8
   16f0c:	mov	r3, r9
   16f10:	bl	3238 <InflateData>
   16f14:	vldr	s0, [sp]
   16f18:	subs	r4, r4, #1
   16f1c:	vcvt.u32.f32	s0, s0
   16f20:	vmov	r0, s0
   16f24:	str	r0, [r5], #4
   16f28:	bne	16f00 <ReadCompressedUInt32Data+0x448>
   16f2c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16f30:	cmp	sl, #1
   16f34:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16f38:	mov	r8, sp
   16f3c:	mov	r4, sl
   16f40:	mov	r0, r7
   16f44:	mov	r1, r6
   16f48:	mov	r2, r8
   16f4c:	mov	r3, r9
   16f50:	bl	3238 <InflateData>
   16f54:	vldr	d16, [sp]
   16f58:	subs	r4, r4, #1
   16f5c:	vcvt.u32.f64	s0, d16
   16f60:	vmov	r0, s0
   16f64:	str	r0, [r5], #4
   16f68:	bne	16f40 <ReadCompressedUInt32Data+0x488>
   16f6c:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16f70:	cmp	sl, #1
   16f74:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16f78:	mov	r8, sp
   16f7c:	mov	r4, sl
   16f80:	mov	r0, r7
   16f84:	mov	r1, r6
   16f88:	mov	r2, r8
   16f8c:	mov	r3, r9
   16f90:	bl	3238 <InflateData>
   16f94:	ldr	r0, [sp]
   16f98:	subs	r4, r4, #1
   16f9c:	str	r0, [r5], #4
   16fa0:	bne	16f80 <ReadCompressedUInt32Data+0x4c8>
   16fa4:	b	16fdc <ReadCompressedUInt32Data+0x524>
   16fa8:	cmp	sl, #1
   16fac:	blt	16fdc <ReadCompressedUInt32Data+0x524>
   16fb0:	mov	r8, sp
   16fb4:	mov	r4, sl
   16fb8:	mov	r0, r7
   16fbc:	mov	r1, r6
   16fc0:	mov	r2, r8
   16fc4:	mov	r3, r9
   16fc8:	bl	3238 <InflateData>
   16fcc:	ldr	r0, [sp]
   16fd0:	subs	r4, r4, #1
   16fd4:	str	r0, [r5], #4
   16fd8:	bne	16fb8 <ReadCompressedUInt32Data+0x500>
   16fdc:	mul	r0, r9, sl
   16fe0:	sub	sp, fp, #28
   16fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016fe8 <ReadInt16Data>:
   16fe8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fec:	add	fp, sp, #28
   16ff0:	sub	sp, sp, #172	; 0xac
   16ff4:	sub	sp, sp, #2048	; 0x800
   16ff8:	mov	r4, r0
   16ffc:	mov	r0, #0
   17000:	cmp	r4, #0
   17004:	movne	r9, r1
   17008:	cmpne	r1, #0
   1700c:	bne	17018 <ReadInt16Data+0x30>
   17010:	sub	sp, fp, #28
   17014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17018:	ldr	r1, [r4]
   1701c:	cmp	r1, #0
   17020:	beq	17010 <ReadInt16Data+0x28>
   17024:	mov	r0, r2
   17028:	mov	r7, r3
   1702c:	mov	r5, r2
   17030:	bl	1924 <Mat_SizeOf@plt>
   17034:	mov	sl, r0
   17038:	sub	r0, r5, #1
   1703c:	mov	r8, #0
   17040:	str	r4, [sp, #36]	; 0x24
   17044:	cmp	r0, #11
   17048:	bhi	19094 <ReadInt16Data+0x20ac>
   1704c:	add	r1, pc, #4
   17050:	ldr	r0, [r1, r0, lsl #2]
   17054:	add	pc, r1, r0
   17058:	.word	0x00000030
   1705c:	.word	0x000000f8
   17060:	.word	0x000001c0
   17064:	.word	0x00000214
   17068:	.word	0x00000268
   1706c:	.word	0x000002bc
   17070:	.word	0x00000310
   17074:	.word	0x0000203c
   17078:	.word	0x0000036c
   1707c:	.word	0x0000203c
   17080:	.word	0x0000203c
   17084:	.word	0x000003c8
   17088:	cmp	r7, #256	; 0x100
   1708c:	bgt	17480 <ReadInt16Data+0x498>
   17090:	ldr	r3, [r4]
   17094:	add	r4, sp, #168	; 0xa8
   17098:	mov	r1, sl
   1709c:	mov	r2, r7
   170a0:	mov	r0, r4
   170a4:	bl	18b8 <fread@plt>
   170a8:	mov	r8, r0
   170ac:	cmp	r7, #1
   170b0:	blt	194e8 <ReadInt16Data+0x2500>
   170b4:	mov	lr, #0
   170b8:	cmp	r7, #8
   170bc:	bcc	18b6c <ReadInt16Data+0x1b84>
   170c0:	bic	lr, r7, #7
   170c4:	mov	r2, #1
   170c8:	str	sl, [sp, #32]
   170cc:	mov	sl, r9
   170d0:	str	r7, [sp, #8]
   170d4:	str	r8, [sp, #28]
   170d8:	subs	r1, lr, #8
   170dc:	add	r1, r2, r1, lsr #3
   170e0:	and	ip, r1, #1
   170e4:	beq	18b20 <ReadInt16Data+0x1b38>
   170e8:	sub	r3, r1, ip
   170ec:	mov	r1, #0
   170f0:	add	r8, sp, #48	; 0x30
   170f4:	mov	r9, #32
   170f8:	add	r5, sp, #56	; 0x38
   170fc:	mov	r2, sl
   17100:	ldr	r0, [r4, r1]
   17104:	subs	r3, r3, #2
   17108:	str	r0, [sp, #48]	; 0x30
   1710c:	add	r0, r4, r1
   17110:	add	r1, r1, #16
   17114:	ldr	r7, [r0, #4]
   17118:	str	r7, [sp, #52]	; 0x34
   1711c:	add	r7, r2, #16
   17120:	vld1.8	{d16}, [r8 :64]
   17124:	vmovl.s8	q8, d16
   17128:	vst1.16	{d16-d17}, [r2], r9
   1712c:	ldr	r6, [r0, #8]
   17130:	ldr	r0, [r0, #12]
   17134:	str	r6, [sp, #56]	; 0x38
   17138:	str	r0, [sp, #60]	; 0x3c
   1713c:	vld1.8	{d16}, [r5 :64]
   17140:	vmovl.s8	q8, d16
   17144:	vst1.16	{d16-d17}, [r7]
   17148:	bne	17100 <ReadInt16Data+0x118>
   1714c:	b	18b24 <ReadInt16Data+0x1b3c>
   17150:	cmp	r7, #256	; 0x100
   17154:	bgt	17660 <ReadInt16Data+0x678>
   17158:	ldr	r3, [r4]
   1715c:	add	r4, sp, #168	; 0xa8
   17160:	mov	r1, sl
   17164:	mov	r2, r7
   17168:	mov	r0, r4
   1716c:	bl	18b8 <fread@plt>
   17170:	mov	r8, r0
   17174:	cmp	r7, #1
   17178:	blt	194e8 <ReadInt16Data+0x2500>
   1717c:	mov	lr, #0
   17180:	cmp	r7, #8
   17184:	bcc	18bd8 <ReadInt16Data+0x1bf0>
   17188:	bic	lr, r7, #7
   1718c:	mov	r2, #1
   17190:	str	sl, [sp, #32]
   17194:	mov	sl, r9
   17198:	str	r8, [sp, #28]
   1719c:	str	r7, [sp, #8]
   171a0:	subs	r1, lr, #8
   171a4:	add	r1, r2, r1, lsr #3
   171a8:	and	ip, r1, #1
   171ac:	beq	18b8c <ReadInt16Data+0x1ba4>
   171b0:	sub	r3, r1, ip
   171b4:	mov	r1, #0
   171b8:	add	r8, sp, #112	; 0x70
   171bc:	mov	r9, #32
   171c0:	add	r5, sp, #120	; 0x78
   171c4:	mov	r2, sl
   171c8:	ldr	r0, [r4, r1]
   171cc:	subs	r3, r3, #2
   171d0:	str	r0, [sp, #112]	; 0x70
   171d4:	add	r0, r4, r1
   171d8:	add	r1, r1, #16
   171dc:	ldr	r7, [r0, #4]
   171e0:	str	r7, [sp, #116]	; 0x74
   171e4:	add	r7, r2, #16
   171e8:	vld1.8	{d16}, [r8 :64]
   171ec:	vmovl.u8	q8, d16
   171f0:	vst1.16	{d16-d17}, [r2], r9
   171f4:	ldr	r6, [r0, #8]
   171f8:	ldr	r0, [r0, #12]
   171fc:	str	r6, [sp, #120]	; 0x78
   17200:	str	r0, [sp, #124]	; 0x7c
   17204:	vld1.8	{d16}, [r5 :64]
   17208:	vmovl.u8	q8, d16
   1720c:	vst1.16	{d16-d17}, [r7]
   17210:	bne	171c8 <ReadInt16Data+0x1e0>
   17214:	b	18b90 <ReadInt16Data+0x1ba8>
   17218:	ldr	r0, [r4, #20]
   1721c:	cmp	r0, #0
   17220:	beq	17844 <ReadInt16Data+0x85c>
   17224:	cmp	r7, #256	; 0x100
   17228:	bgt	17c54 <ReadInt16Data+0xc6c>
   1722c:	ldr	r3, [r4]
   17230:	add	r4, sp, #168	; 0xa8
   17234:	mov	r1, sl
   17238:	mov	r2, r7
   1723c:	mov	r0, r4
   17240:	bl	18b8 <fread@plt>
   17244:	mov	r8, r0
   17248:	cmp	r7, #1
   1724c:	blt	194e8 <ReadInt16Data+0x2500>
   17250:	mov	r0, r4
   17254:	bl	1c20 <Mat_int16Swap>
   17258:	strh	r0, [r9], #2
   1725c:	add	r4, r4, #2
   17260:	subs	r7, r7, #1
   17264:	bne	17250 <ReadInt16Data+0x268>
   17268:	b	194e8 <ReadInt16Data+0x2500>
   1726c:	ldr	r0, [r4, #20]
   17270:	cmp	r0, #0
   17274:	beq	178e8 <ReadInt16Data+0x900>
   17278:	cmp	r7, #256	; 0x100
   1727c:	bgt	17d34 <ReadInt16Data+0xd4c>
   17280:	ldr	r3, [r4]
   17284:	add	r4, sp, #168	; 0xa8
   17288:	mov	r1, sl
   1728c:	mov	r2, r7
   17290:	mov	r0, r4
   17294:	bl	18b8 <fread@plt>
   17298:	mov	r8, r0
   1729c:	cmp	r7, #1
   172a0:	blt	194e8 <ReadInt16Data+0x2500>
   172a4:	mov	r0, r4
   172a8:	bl	1c34 <Mat_uint16Swap>
   172ac:	strh	r0, [r9], #2
   172b0:	add	r4, r4, #2
   172b4:	subs	r7, r7, #1
   172b8:	bne	172a4 <ReadInt16Data+0x2bc>
   172bc:	b	194e8 <ReadInt16Data+0x2500>
   172c0:	ldr	r0, [r4, #20]
   172c4:	cmp	r0, #0
   172c8:	beq	17924 <ReadInt16Data+0x93c>
   172cc:	cmp	r7, #256	; 0x100
   172d0:	bgt	17e14 <ReadInt16Data+0xe2c>
   172d4:	ldr	r3, [r4]
   172d8:	add	r4, sp, #168	; 0xa8
   172dc:	mov	r1, sl
   172e0:	mov	r2, r7
   172e4:	mov	r0, r4
   172e8:	bl	18b8 <fread@plt>
   172ec:	mov	r8, r0
   172f0:	cmp	r7, #1
   172f4:	blt	194e8 <ReadInt16Data+0x2500>
   172f8:	mov	r0, r4
   172fc:	bl	1bf8 <Mat_int32Swap>
   17300:	strh	r0, [r9], #2
   17304:	add	r4, r4, #4
   17308:	subs	r7, r7, #1
   1730c:	bne	172f8 <ReadInt16Data+0x310>
   17310:	b	194e8 <ReadInt16Data+0x2500>
   17314:	ldr	r0, [r4, #20]
   17318:	cmp	r0, #0
   1731c:	beq	179c8 <ReadInt16Data+0x9e0>
   17320:	cmp	r7, #256	; 0x100
   17324:	bgt	17ef4 <ReadInt16Data+0xf0c>
   17328:	ldr	r3, [r4]
   1732c:	add	r4, sp, #168	; 0xa8
   17330:	mov	r1, sl
   17334:	mov	r2, r7
   17338:	mov	r0, r4
   1733c:	bl	18b8 <fread@plt>
   17340:	mov	r8, r0
   17344:	cmp	r7, #1
   17348:	blt	194e8 <ReadInt16Data+0x2500>
   1734c:	mov	r0, r4
   17350:	bl	1c0c <Mat_uint32Swap>
   17354:	strh	r0, [r9], #2
   17358:	add	r4, r4, #4
   1735c:	subs	r7, r7, #1
   17360:	bne	1734c <ReadInt16Data+0x364>
   17364:	b	194e8 <ReadInt16Data+0x2500>
   17368:	ldr	r0, [r4, #20]
   1736c:	cmp	r0, #0
   17370:	beq	17a6c <ReadInt16Data+0xa84>
   17374:	cmp	r7, #256	; 0x100
   17378:	bgt	17fd4 <ReadInt16Data+0xfec>
   1737c:	ldr	r3, [r4]
   17380:	add	r4, sp, #168	; 0xa8
   17384:	mov	r1, sl
   17388:	mov	r2, r7
   1738c:	mov	r0, r4
   17390:	bl	18b8 <fread@plt>
   17394:	mov	r8, r0
   17398:	cmp	r7, #1
   1739c:	blt	194e8 <ReadInt16Data+0x2500>
   173a0:	mov	r0, r4
   173a4:	bl	1c4c <Mat_floatSwap>
   173a8:	vcvt.s32.f32	s0, s0
   173ac:	add	r4, r4, #4
   173b0:	subs	r7, r7, #1
   173b4:	vmov	r0, s0
   173b8:	strh	r0, [r9], #2
   173bc:	bne	173a0 <ReadInt16Data+0x3b8>
   173c0:	b	194e8 <ReadInt16Data+0x2500>
   173c4:	ldr	r0, [r4, #20]
   173c8:	cmp	r0, #0
   173cc:	beq	17b18 <ReadInt16Data+0xb30>
   173d0:	cmp	r7, #256	; 0x100
   173d4:	bgt	180c8 <ReadInt16Data+0x10e0>
   173d8:	ldr	r3, [r4]
   173dc:	add	r4, sp, #168	; 0xa8
   173e0:	mov	r1, sl
   173e4:	mov	r2, r7
   173e8:	mov	r0, r4
   173ec:	bl	18b8 <fread@plt>
   173f0:	mov	r8, r0
   173f4:	cmp	r7, #1
   173f8:	blt	194e8 <ReadInt16Data+0x2500>
   173fc:	mov	r0, r4
   17400:	bl	1c90 <Mat_doubleSwap>
   17404:	vcvt.s32.f64	s0, d0
   17408:	add	r4, r4, #8
   1740c:	subs	r7, r7, #1
   17410:	vmov	r0, s0
   17414:	strh	r0, [r9], #2
   17418:	bne	173fc <ReadInt16Data+0x414>
   1741c:	b	194e8 <ReadInt16Data+0x2500>
   17420:	ldr	r0, [r4, #20]
   17424:	cmp	r0, #0
   17428:	beq	17bac <ReadInt16Data+0xbc4>
   1742c:	cmp	r7, #256	; 0x100
   17430:	bgt	181bc <ReadInt16Data+0x11d4>
   17434:	ldr	r3, [r4]
   17438:	add	r6, sp, #168	; 0xa8
   1743c:	mov	r1, sl
   17440:	mov	r2, r7
   17444:	mov	r0, r6
   17448:	bl	18b8 <fread@plt>
   1744c:	mov	r8, r0
   17450:	cmp	r7, #1
   17454:	blt	19094 <ReadInt16Data+0x20ac>
   17458:	str	r5, [sp, #16]
   1745c:	mov	r4, r9
   17460:	mov	r5, r7
   17464:	mov	r0, r6
   17468:	bl	1b84 <Mat_int64Swap>
   1746c:	strh	r0, [r4], #2
   17470:	add	r6, r6, #8
   17474:	subs	r5, r5, #1
   17478:	bne	17464 <ReadInt16Data+0x47c>
   1747c:	b	1908c <ReadInt16Data+0x20a4>
   17480:	sub	r1, r7, #256	; 0x100
   17484:	str	sl, [sp, #32]
   17488:	str	r7, [sp, #8]
   1748c:	mov	sl, r9
   17490:	add	r0, r9, #512	; 0x200
   17494:	mov	r2, #0
   17498:	mov	r5, #0
   1749c:	add	r6, sp, #168	; 0xa8
   174a0:	add	r9, sp, #88	; 0x58
   174a4:	mov	r8, #32
   174a8:	add	r7, sp, #96	; 0x60
   174ac:	str	r1, [sp, #12]
   174b0:	mov	r1, #256	; 0x100
   174b4:	str	sl, [sp, #4]
   174b8:	str	r2, [sp, #28]
   174bc:	add	r2, sp, #16
   174c0:	stm	r2, {r0, r1, r5}
   174c4:	ldr	r0, [sp, #36]	; 0x24
   174c8:	ldr	r1, [sp, #32]
   174cc:	mov	r2, #256	; 0x100
   174d0:	ldr	r3, [r0]
   174d4:	mov	r0, r6
   174d8:	bl	18b8 <fread@plt>
   174dc:	mov	r1, sl
   174e0:	mov	r2, #0
   174e4:	ldr	r3, [r6, r2]
   174e8:	str	r3, [sp, #88]	; 0x58
   174ec:	add	r3, r6, r2
   174f0:	add	r2, r2, #16
   174f4:	ldr	r5, [r3, #4]
   174f8:	cmp	r2, #256	; 0x100
   174fc:	str	r5, [sp, #92]	; 0x5c
   17500:	add	r5, r1, #16
   17504:	vld1.8	{d16}, [r9 :64]
   17508:	vmovl.s8	q8, d16
   1750c:	vst1.16	{d16-d17}, [r1], r8
   17510:	ldr	r4, [r3, #8]
   17514:	ldr	r3, [r3, #12]
   17518:	str	r4, [sp, #96]	; 0x60
   1751c:	str	r3, [sp, #100]	; 0x64
   17520:	vld1.8	{d16}, [r7 :64]
   17524:	vmovl.s8	q8, d16
   17528:	vst1.16	{d16-d17}, [r5]
   1752c:	bne	174e4 <ReadInt16Data+0x4fc>
   17530:	ldr	r1, [sp, #28]
   17534:	ldr	r2, [sp, #24]
   17538:	add	sl, sl, #512	; 0x200
   1753c:	add	r1, r0, r1
   17540:	ldr	r0, [sp, #16]
   17544:	add	r5, r2, #256	; 0x100
   17548:	ldr	r2, [sp, #12]
   1754c:	str	r1, [sp, #28]
   17550:	ldr	r1, [sp, #20]
   17554:	add	r0, r0, #512	; 0x200
   17558:	cmp	r5, r2
   1755c:	add	r1, r1, #256	; 0x100
   17560:	blt	174bc <ReadInt16Data+0x4d4>
   17564:	ldr	r4, [sp, #8]
   17568:	cmp	r5, r4
   1756c:	bge	17838 <ReadInt16Data+0x850>
   17570:	ldr	r0, [sp, #36]	; 0x24
   17574:	ldr	sl, [sp, #32]
   17578:	sub	r7, r4, r5
   1757c:	add	r6, sp, #168	; 0xa8
   17580:	mov	r2, r7
   17584:	ldr	r3, [r0]
   17588:	mov	r0, r6
   1758c:	mov	r1, sl
   17590:	bl	18b8 <fread@plt>
   17594:	ldr	r8, [sp, #28]
   17598:	cmp	r7, #1
   1759c:	add	r8, r0, r8
   175a0:	blt	194e8 <ReadInt16Data+0x2500>
   175a4:	ldr	r3, [sp, #4]
   175a8:	mov	lr, #0
   175ac:	cmp	r7, #8
   175b0:	bcc	18c50 <ReadInt16Data+0x1c68>
   175b4:	bic	lr, r7, #7
   175b8:	mov	r2, #1
   175bc:	mov	sl, r8
   175c0:	str	r7, [sp, #36]	; 0x24
   175c4:	subs	r1, lr, #8
   175c8:	add	r1, r2, r1, lsr #3
   175cc:	and	r0, r1, #1
   175d0:	str	r0, [sp, #28]
   175d4:	beq	18bf8 <ReadInt16Data+0x1c10>
   175d8:	ldr	r0, [sp, #24]
   175dc:	ldr	ip, [sp, #16]
   175e0:	add	r8, sp, #72	; 0x48
   175e4:	mov	r9, #32
   175e8:	sub	r1, r4, r0
   175ec:	add	r4, sp, #80	; 0x50
   175f0:	sub	r1, r1, #256	; 0x100
   175f4:	bic	r1, r1, #7
   175f8:	sub	r1, r1, #8
   175fc:	mvn	r3, r1, lsr #3
   17600:	add	r1, r2, r1, lsr #3
   17604:	mov	r2, #0
   17608:	and	r1, r1, #1
   1760c:	add	r3, r3, r1
   17610:	ldr	r0, [r6, r2]
   17614:	adds	r3, r3, #2
   17618:	str	r0, [sp, #72]	; 0x48
   1761c:	add	r0, r6, r2
   17620:	add	r2, r2, #16
   17624:	ldr	r7, [r0, #4]
   17628:	str	r7, [sp, #76]	; 0x4c
   1762c:	add	r7, ip, #16
   17630:	vld1.8	{d16}, [r8 :64]
   17634:	vmovl.s8	q8, d16
   17638:	vst1.16	{d16-d17}, [ip], r9
   1763c:	ldr	r1, [r0, #8]
   17640:	ldr	r0, [r0, #12]
   17644:	str	r1, [sp, #80]	; 0x50
   17648:	str	r0, [sp, #84]	; 0x54
   1764c:	vld1.8	{d16}, [r4 :64]
   17650:	vmovl.s8	q8, d16
   17654:	vst1.16	{d16-d17}, [r7]
   17658:	bne	17610 <ReadInt16Data+0x628>
   1765c:	b	18bfc <ReadInt16Data+0x1c14>
   17660:	sub	r1, r7, #256	; 0x100
   17664:	str	sl, [sp, #32]
   17668:	mov	r2, #0
   1766c:	add	r0, r9, #512	; 0x200
   17670:	mov	r4, #0
   17674:	add	r6, sp, #168	; 0xa8
   17678:	add	r8, sp, #152	; 0x98
   1767c:	mov	r5, #32
   17680:	add	sl, sp, #160	; 0xa0
   17684:	str	r7, [sp, #8]
   17688:	str	r9, [sp, #4]
   1768c:	str	r1, [sp, #12]
   17690:	mov	r1, #256	; 0x100
   17694:	str	r2, [sp, #28]
   17698:	str	r0, [sp, #16]
   1769c:	ldr	r0, [sp, #36]	; 0x24
   176a0:	str	r1, [sp, #24]
   176a4:	ldr	r1, [sp, #32]
   176a8:	mov	r2, #256	; 0x100
   176ac:	str	r4, [sp, #20]
   176b0:	ldr	r3, [r0]
   176b4:	mov	r0, r6
   176b8:	bl	18b8 <fread@plt>
   176bc:	mov	r1, r9
   176c0:	mov	r2, #0
   176c4:	ldr	r3, [r6, r2]
   176c8:	str	r3, [sp, #152]	; 0x98
   176cc:	add	r3, r6, r2
   176d0:	add	r2, r2, #16
   176d4:	ldr	r4, [r3, #4]
   176d8:	cmp	r2, #256	; 0x100
   176dc:	str	r4, [sp, #156]	; 0x9c
   176e0:	add	r4, r1, #16
   176e4:	vld1.8	{d16}, [r8 :64]
   176e8:	vmovl.u8	q8, d16
   176ec:	vst1.16	{d16-d17}, [r1], r5
   176f0:	ldr	r7, [r3, #8]
   176f4:	ldr	r3, [r3, #12]
   176f8:	str	r7, [sp, #160]	; 0xa0
   176fc:	str	r3, [sp, #164]	; 0xa4
   17700:	vld1.8	{d16}, [sl :64]
   17704:	vmovl.u8	q8, d16
   17708:	vst1.16	{d16-d17}, [r4]
   1770c:	bne	176c4 <ReadInt16Data+0x6dc>
   17710:	ldr	r1, [sp, #28]
   17714:	ldr	r7, [sp, #20]
   17718:	ldr	r2, [sp, #12]
   1771c:	add	r9, r9, #512	; 0x200
   17720:	add	r1, r0, r1
   17724:	ldr	r0, [sp, #16]
   17728:	add	r4, r7, #256	; 0x100
   1772c:	str	r1, [sp, #28]
   17730:	ldr	r1, [sp, #24]
   17734:	cmp	r4, r2
   17738:	add	r0, r0, #512	; 0x200
   1773c:	add	r1, r1, #256	; 0x100
   17740:	blt	17698 <ReadInt16Data+0x6b0>
   17744:	ldr	r5, [sp, #8]
   17748:	cmp	r4, r5
   1774c:	bge	17838 <ReadInt16Data+0x850>
   17750:	ldr	r0, [sp, #36]	; 0x24
   17754:	ldr	sl, [sp, #32]
   17758:	sub	r6, r5, r4
   1775c:	add	r9, sp, #168	; 0xa8
   17760:	mov	r2, r6
   17764:	ldr	r3, [r0]
   17768:	mov	r0, r9
   1776c:	mov	r1, sl
   17770:	bl	18b8 <fread@plt>
   17774:	ldr	r8, [sp, #28]
   17778:	cmp	r6, #1
   1777c:	add	r8, r0, r8
   17780:	blt	194e8 <ReadInt16Data+0x2500>
   17784:	ldr	r3, [sp, #4]
   17788:	mov	lr, #0
   1778c:	cmp	r6, #8
   17790:	bcc	18cdc <ReadInt16Data+0x1cf4>
   17794:	bic	lr, r6, #7
   17798:	mov	r1, #1
   1779c:	str	r8, [sp, #28]
   177a0:	str	r6, [sp, #36]	; 0x24
   177a4:	subs	r2, lr, #8
   177a8:	add	r2, r1, r2, lsr #3
   177ac:	and	ip, r2, #1
   177b0:	beq	18c84 <ReadInt16Data+0x1c9c>
   177b4:	sub	r2, r5, r7
   177b8:	ldr	sl, [sp, #16]
   177bc:	add	r8, sp, #136	; 0x88
   177c0:	mov	r6, #32
   177c4:	sub	r2, r2, #256	; 0x100
   177c8:	bic	r2, r2, #7
   177cc:	sub	r2, r2, #8
   177d0:	add	r1, r1, r2, lsr #3
   177d4:	mvn	r3, r2, lsr #3
   177d8:	mov	r2, #0
   177dc:	and	r1, r1, #1
   177e0:	add	r3, r3, r1
   177e4:	add	r1, sp, #144	; 0x90
   177e8:	ldr	r0, [r9, r2]
   177ec:	adds	r3, r3, #2
   177f0:	str	r0, [sp, #136]	; 0x88
   177f4:	add	r0, r9, r2
   177f8:	add	r2, r2, #16
   177fc:	ldr	r7, [r0, #4]
   17800:	str	r7, [sp, #140]	; 0x8c
   17804:	add	r7, sl, #16
   17808:	vld1.8	{d16}, [r8 :64]
   1780c:	vmovl.u8	q8, d16
   17810:	vst1.16	{d16-d17}, [sl], r6
   17814:	ldr	r5, [r0, #8]
   17818:	ldr	r0, [r0, #12]
   1781c:	str	r5, [sp, #144]	; 0x90
   17820:	str	r0, [sp, #148]	; 0x94
   17824:	vld1.8	{d16}, [r1 :64]
   17828:	vmovl.u8	q8, d16
   1782c:	vst1.16	{d16-d17}, [r7]
   17830:	bne	177e8 <ReadInt16Data+0x800>
   17834:	b	18c88 <ReadInt16Data+0x1ca0>
   17838:	ldr	sl, [sp, #32]
   1783c:	ldr	r8, [sp, #28]
   17840:	b	194e8 <ReadInt16Data+0x2500>
   17844:	cmp	r7, #256	; 0x100
   17848:	ble	178f0 <ReadInt16Data+0x908>
   1784c:	sub	r0, r7, #256	; 0x100
   17850:	lsl	r6, r7, #1
   17854:	str	r7, [sp, #8]
   17858:	mov	r5, #0
   1785c:	add	r7, sp, #168	; 0xa8
   17860:	mov	r8, #0
   17864:	str	r0, [sp, #28]
   17868:	ldr	r3, [r4]
   1786c:	mov	r0, r7
   17870:	mov	r1, sl
   17874:	mov	r2, #256	; 0x100
   17878:	bl	18b8 <fread@plt>
   1787c:	mov	r4, r0
   17880:	add	r0, r9, r5, lsl #1
   17884:	mov	r1, r7
   17888:	mov	r2, #512	; 0x200
   1788c:	bl	181c <memcpy@plt>
   17890:	ldr	r0, [sp, #28]
   17894:	add	r8, r4, r8
   17898:	ldr	r4, [sp, #36]	; 0x24
   1789c:	add	r5, r5, #256	; 0x100
   178a0:	sub	r6, r6, #512	; 0x200
   178a4:	cmp	r5, r0
   178a8:	blt	17868 <ReadInt16Data+0x880>
   178ac:	mov	r1, sl
   178b0:	ldr	sl, [sp, #8]
   178b4:	cmp	r5, sl
   178b8:	bge	18b00 <ReadInt16Data+0x1b18>
   178bc:	mov	r0, r4
   178c0:	sub	r4, sl, r5
   178c4:	mov	sl, r1
   178c8:	ldr	r3, [r0]
   178cc:	add	r0, sp, #168	; 0xa8
   178d0:	mov	r2, r4
   178d4:	bl	18b8 <fread@plt>
   178d8:	add	r8, r0, r8
   178dc:	cmp	r4, #1
   178e0:	bge	18360 <ReadInt16Data+0x1378>
   178e4:	b	194e8 <ReadInt16Data+0x2500>
   178e8:	cmp	r7, #256	; 0x100
   178ec:	bgt	182c4 <ReadInt16Data+0x12dc>
   178f0:	ldr	r3, [r4]
   178f4:	add	r0, sp, #168	; 0xa8
   178f8:	mov	r1, sl
   178fc:	mov	r2, r7
   17900:	bl	18b8 <fread@plt>
   17904:	mov	r8, r0
   17908:	cmp	r7, #1
   1790c:	blt	194e8 <ReadInt16Data+0x2500>
   17910:	lsl	r2, r7, #1
   17914:	add	r1, sp, #168	; 0xa8
   17918:	mov	r0, r9
   1791c:	bl	181c <memcpy@plt>
   17920:	b	194e8 <ReadInt16Data+0x2500>
   17924:	cmp	r7, #256	; 0x100
   17928:	bgt	18374 <ReadInt16Data+0x138c>
   1792c:	ldr	r3, [r4]
   17930:	add	r4, sp, #168	; 0xa8
   17934:	mov	r1, sl
   17938:	mov	r2, r7
   1793c:	mov	r0, r4
   17940:	bl	18b8 <fread@plt>
   17944:	mov	r8, r0
   17948:	cmp	r7, #1
   1794c:	blt	194e8 <ReadInt16Data+0x2500>
   17950:	mov	lr, #0
   17954:	cmp	r7, #4
   17958:	bcc	18d48 <ReadInt16Data+0x1d60>
   1795c:	bic	lr, r7, #3
   17960:	mov	r2, #1
   17964:	str	r8, [sp, #28]
   17968:	mov	r8, sl
   1796c:	mov	sl, r9
   17970:	mov	r9, r7
   17974:	subs	r1, lr, #4
   17978:	add	r1, r2, r1, lsr #2
   1797c:	and	ip, r1, #1
   17980:	beq	18d0c <ReadInt16Data+0x1d24>
   17984:	sub	r3, r1, ip
   17988:	mov	r1, #0
   1798c:	mov	r7, #32
   17990:	mov	r6, #16
   17994:	mov	r5, sl
   17998:	add	r2, r4, #16
   1799c:	vld1.32	{d16-d17}, [r4], r7
   179a0:	add	r0, r5, #8
   179a4:	subs	r3, r3, #2
   179a8:	add	r1, r1, #8
   179ac:	vmovn.i32	d16, q8
   179b0:	vst1.16	{d16}, [r5], r6
   179b4:	vld1.32	{d16-d17}, [r2]
   179b8:	vmovn.i32	d16, q8
   179bc:	vst1.16	{d16}, [r0]
   179c0:	bne	17998 <ReadInt16Data+0x9b0>
   179c4:	b	18d10 <ReadInt16Data+0x1d28>
   179c8:	cmp	r7, #256	; 0x100
   179cc:	bgt	184f0 <ReadInt16Data+0x1508>
   179d0:	ldr	r3, [r4]
   179d4:	add	r4, sp, #168	; 0xa8
   179d8:	mov	r1, sl
   179dc:	mov	r2, r7
   179e0:	mov	r0, r4
   179e4:	bl	18b8 <fread@plt>
   179e8:	mov	r8, r0
   179ec:	cmp	r7, #1
   179f0:	blt	194e8 <ReadInt16Data+0x2500>
   179f4:	mov	lr, #0
   179f8:	cmp	r7, #4
   179fc:	bcc	18da8 <ReadInt16Data+0x1dc0>
   17a00:	bic	lr, r7, #3
   17a04:	mov	r2, #1
   17a08:	str	r8, [sp, #28]
   17a0c:	mov	r8, sl
   17a10:	mov	sl, r9
   17a14:	mov	r9, r7
   17a18:	subs	r1, lr, #4
   17a1c:	add	r1, r2, r1, lsr #2
   17a20:	and	ip, r1, #1
   17a24:	beq	18d6c <ReadInt16Data+0x1d84>
   17a28:	sub	r3, r1, ip
   17a2c:	mov	r1, #0
   17a30:	mov	r7, #32
   17a34:	mov	r6, #16
   17a38:	mov	r5, sl
   17a3c:	add	r2, r4, #16
   17a40:	vld1.32	{d16-d17}, [r4], r7
   17a44:	add	r0, r5, #8
   17a48:	subs	r3, r3, #2
   17a4c:	add	r1, r1, #8
   17a50:	vmovn.i32	d16, q8
   17a54:	vst1.16	{d16}, [r5], r6
   17a58:	vld1.32	{d16-d17}, [r2]
   17a5c:	vmovn.i32	d16, q8
   17a60:	vst1.16	{d16}, [r0]
   17a64:	bne	17a3c <ReadInt16Data+0xa54>
   17a68:	b	18d70 <ReadInt16Data+0x1d88>
   17a6c:	cmp	r7, #256	; 0x100
   17a70:	bgt	1866c <ReadInt16Data+0x1684>
   17a74:	ldr	r3, [r4]
   17a78:	add	r4, sp, #168	; 0xa8
   17a7c:	mov	r1, sl
   17a80:	mov	r2, r7
   17a84:	mov	r0, r4
   17a88:	bl	18b8 <fread@plt>
   17a8c:	mov	r8, r0
   17a90:	cmp	r7, #1
   17a94:	blt	194e8 <ReadInt16Data+0x2500>
   17a98:	mov	lr, #0
   17a9c:	cmp	r7, #4
   17aa0:	bcc	18e0c <ReadInt16Data+0x1e24>
   17aa4:	bic	lr, r7, #3
   17aa8:	mov	r2, #1
   17aac:	str	r8, [sp, #28]
   17ab0:	mov	r8, sl
   17ab4:	mov	sl, r9
   17ab8:	mov	r9, r7
   17abc:	subs	r1, lr, #4
   17ac0:	add	r1, r2, r1, lsr #2
   17ac4:	and	ip, r1, #1
   17ac8:	beq	18dcc <ReadInt16Data+0x1de4>
   17acc:	sub	r3, r1, ip
   17ad0:	mov	r1, #0
   17ad4:	mov	r7, #32
   17ad8:	mov	r6, #16
   17adc:	mov	r5, sl
   17ae0:	add	r2, r4, #16
   17ae4:	vld1.32	{d16-d17}, [r4], r7
   17ae8:	add	r0, r5, #8
   17aec:	subs	r3, r3, #2
   17af0:	add	r1, r1, #8
   17af4:	vcvt.s32.f32	q8, q8
   17af8:	vmovn.i32	d16, q8
   17afc:	vst1.16	{d16}, [r5], r6
   17b00:	vld1.32	{d16-d17}, [r2]
   17b04:	vcvt.s32.f32	q8, q8
   17b08:	vmovn.i32	d16, q8
   17b0c:	vst1.16	{d16}, [r0]
   17b10:	bne	17ae0 <ReadInt16Data+0xaf8>
   17b14:	b	18dd0 <ReadInt16Data+0x1de8>
   17b18:	cmp	r7, #256	; 0x100
   17b1c:	bgt	187e8 <ReadInt16Data+0x1800>
   17b20:	ldr	r3, [r4]
   17b24:	add	r4, sp, #168	; 0xa8
   17b28:	mov	r1, sl
   17b2c:	mov	r2, r7
   17b30:	mov	r0, r4
   17b34:	bl	18b8 <fread@plt>
   17b38:	mov	r8, r0
   17b3c:	cmp	r7, #1
   17b40:	blt	194e8 <ReadInt16Data+0x2500>
   17b44:	and	r1, r7, #1
   17b48:	mov	r0, #0
   17b4c:	beq	17b94 <ReadInt16Data+0xbac>
   17b50:	sub	r2, r7, r1
   17b54:	add	r3, r9, #2
   17b58:	add	r7, r4, #8
   17b5c:	mov	r0, #0
   17b60:	vldr	d16, [r7, #-8]
   17b64:	add	r0, r0, #2
   17b68:	cmp	r2, r0
   17b6c:	vcvt.s32.f64	s0, d16
   17b70:	vmov	r6, s0
   17b74:	strh	r6, [r3, #-2]
   17b78:	vldr	d16, [r7]
   17b7c:	add	r7, r7, #16
   17b80:	vcvt.s32.f64	s0, d16
   17b84:	vmov	r6, s0
   17b88:	strh	r6, [r3]
   17b8c:	add	r3, r3, #4
   17b90:	bne	17b60 <ReadInt16Data+0xb78>
   17b94:	cmp	r1, #0
   17b98:	beq	194e8 <ReadInt16Data+0x2500>
   17b9c:	add	r1, r4, r0, lsl #3
   17ba0:	add	r0, r9, r0, lsl #1
   17ba4:	vldr	d16, [r1]
   17ba8:	b	18948 <ReadInt16Data+0x1960>
   17bac:	cmp	r7, #256	; 0x100
   17bb0:	bgt	18958 <ReadInt16Data+0x1970>
   17bb4:	ldr	r3, [r4]
   17bb8:	add	r4, sp, #168	; 0xa8
   17bbc:	mov	r1, sl
   17bc0:	mov	r2, r7
   17bc4:	mov	r0, r4
   17bc8:	bl	18b8 <fread@plt>
   17bcc:	mov	r8, r0
   17bd0:	cmp	r7, #1
   17bd4:	blt	18e94 <ReadInt16Data+0x1eac>
   17bd8:	mov	r0, #0
   17bdc:	beq	18e74 <ReadInt16Data+0x1e8c>
   17be0:	bic	r0, r7, #1
   17be4:	mov	r2, #1
   17be8:	mov	lr, r5
   17bec:	mov	ip, r7
   17bf0:	subs	r1, r0, #2
   17bf4:	add	r1, r2, r1, lsr #1
   17bf8:	and	r2, r1, #1
   17bfc:	beq	18e3c <ReadInt16Data+0x1e54>
   17c00:	sub	r3, r1, r2
   17c04:	mov	r1, #0
   17c08:	mov	r7, #32
   17c0c:	mov	r5, r9
   17c10:	mov	r6, r4
   17c14:	vld1.64	{d16-d17}, [r6], r7
   17c18:	add	r4, r4, #16
   17c1c:	subs	r3, r3, #2
   17c20:	add	r1, r1, #4
   17c24:	vmovn.i64	d16, q8
   17c28:	vuzp.16	d16, d17
   17c2c:	vst1.32	{d16[0]}, [r5]
   17c30:	vld1.64	{d16-d17}, [r4]
   17c34:	add	r4, r5, #4
   17c38:	add	r5, r5, #8
   17c3c:	vmovn.i64	d16, q8
   17c40:	vuzp.16	d16, d17
   17c44:	vst1.32	{d16[0]}, [r4]
   17c48:	mov	r4, r6
   17c4c:	bne	17c14 <ReadInt16Data+0xc2c>
   17c50:	b	18e40 <ReadInt16Data+0x1e58>
   17c54:	sub	r0, r7, #256	; 0x100
   17c58:	mov	r8, r9
   17c5c:	add	r1, r9, #512	; 0x200
   17c60:	add	r6, sp, #168	; 0xa8
   17c64:	mov	r5, #0
   17c68:	str	sl, [sp, #32]
   17c6c:	str	r7, [sp, #8]
   17c70:	str	r0, [sp, #28]
   17c74:	mov	r0, #0
   17c78:	mov	sl, r1
   17c7c:	ldr	r3, [r4]
   17c80:	ldr	r1, [sp, #32]
   17c84:	mov	r9, r0
   17c88:	mov	r0, r6
   17c8c:	mov	r2, #256	; 0x100
   17c90:	bl	18b8 <fread@plt>
   17c94:	mov	r4, r0
   17c98:	mov	r7, #0
   17c9c:	add	r0, r6, r7
   17ca0:	bl	1c20 <Mat_int16Swap>
   17ca4:	add	r1, r8, r7
   17ca8:	add	r7, r7, #2
   17cac:	cmp	r7, #512	; 0x200
   17cb0:	strh	r0, [r1]
   17cb4:	bne	17c9c <ReadInt16Data+0xcb4>
   17cb8:	ldr	r2, [sp, #28]
   17cbc:	add	r5, r4, r5
   17cc0:	ldr	r4, [sp, #36]	; 0x24
   17cc4:	add	r0, r9, #256	; 0x100
   17cc8:	add	r8, r8, #512	; 0x200
   17ccc:	add	r1, sl, #512	; 0x200
   17cd0:	cmp	r0, r2
   17cd4:	blt	17c78 <ReadInt16Data+0xc90>
   17cd8:	ldr	r7, [sp, #8]
   17cdc:	cmp	r0, r7
   17ce0:	bge	182bc <ReadInt16Data+0x12d4>
   17ce4:	ldr	r3, [r4]
   17ce8:	ldr	r1, [sp, #32]
   17cec:	sub	r6, r7, r0
   17cf0:	add	r4, sp, #168	; 0xa8
   17cf4:	mov	r0, r4
   17cf8:	mov	r2, r6
   17cfc:	bl	18b8 <fread@plt>
   17d00:	mov	r8, r5
   17d04:	add	r8, r0, r5
   17d08:	cmp	r6, #1
   17d0c:	blt	194e4 <ReadInt16Data+0x24fc>
   17d10:	sub	r0, r7, r9
   17d14:	sub	r6, r0, #256	; 0x100
   17d18:	mov	r0, r4
   17d1c:	bl	1c20 <Mat_int16Swap>
   17d20:	strh	r0, [sl], #2
   17d24:	add	r4, r4, #2
   17d28:	subs	r6, r6, #1
   17d2c:	bne	17d18 <ReadInt16Data+0xd30>
   17d30:	b	194e4 <ReadInt16Data+0x24fc>
   17d34:	sub	r0, r7, #256	; 0x100
   17d38:	mov	r8, r9
   17d3c:	add	r1, r9, #512	; 0x200
   17d40:	add	r6, sp, #168	; 0xa8
   17d44:	mov	r5, #0
   17d48:	str	sl, [sp, #32]
   17d4c:	str	r7, [sp, #8]
   17d50:	str	r0, [sp, #28]
   17d54:	mov	r0, #0
   17d58:	mov	sl, r1
   17d5c:	ldr	r3, [r4]
   17d60:	ldr	r1, [sp, #32]
   17d64:	mov	r9, r0
   17d68:	mov	r0, r6
   17d6c:	mov	r2, #256	; 0x100
   17d70:	bl	18b8 <fread@plt>
   17d74:	mov	r4, r0
   17d78:	mov	r7, #0
   17d7c:	add	r0, r6, r7
   17d80:	bl	1c34 <Mat_uint16Swap>
   17d84:	add	r1, r8, r7
   17d88:	add	r7, r7, #2
   17d8c:	cmp	r7, #512	; 0x200
   17d90:	strh	r0, [r1]
   17d94:	bne	17d7c <ReadInt16Data+0xd94>
   17d98:	ldr	r2, [sp, #28]
   17d9c:	add	r5, r4, r5
   17da0:	ldr	r4, [sp, #36]	; 0x24
   17da4:	add	r0, r9, #256	; 0x100
   17da8:	add	r8, r8, #512	; 0x200
   17dac:	add	r1, sl, #512	; 0x200
   17db0:	cmp	r0, r2
   17db4:	blt	17d58 <ReadInt16Data+0xd70>
   17db8:	ldr	r7, [sp, #8]
   17dbc:	cmp	r0, r7
   17dc0:	bge	182bc <ReadInt16Data+0x12d4>
   17dc4:	ldr	r3, [r4]
   17dc8:	ldr	r1, [sp, #32]
   17dcc:	sub	r6, r7, r0
   17dd0:	add	r4, sp, #168	; 0xa8
   17dd4:	mov	r0, r4
   17dd8:	mov	r2, r6
   17ddc:	bl	18b8 <fread@plt>
   17de0:	mov	r8, r5
   17de4:	add	r8, r0, r5
   17de8:	cmp	r6, #1
   17dec:	blt	194e4 <ReadInt16Data+0x24fc>
   17df0:	sub	r0, r7, r9
   17df4:	sub	r6, r0, #256	; 0x100
   17df8:	mov	r0, r4
   17dfc:	bl	1c34 <Mat_uint16Swap>
   17e00:	strh	r0, [sl], #2
   17e04:	add	r4, r4, #2
   17e08:	subs	r6, r6, #1
   17e0c:	bne	17df8 <ReadInt16Data+0xe10>
   17e10:	b	194e4 <ReadInt16Data+0x24fc>
   17e14:	sub	r0, r7, #256	; 0x100
   17e18:	add	r1, r9, #512	; 0x200
   17e1c:	mov	r8, #0
   17e20:	str	sl, [sp, #32]
   17e24:	str	r7, [sp, #8]
   17e28:	str	r0, [sp, #24]
   17e2c:	mov	r0, #0
   17e30:	mov	r5, r1
   17e34:	ldr	r3, [r4]
   17e38:	ldr	r1, [sp, #32]
   17e3c:	add	r4, sp, #168	; 0xa8
   17e40:	str	r0, [sp, #28]
   17e44:	mov	r2, #256	; 0x100
   17e48:	mov	r0, r4
   17e4c:	bl	18b8 <fread@plt>
   17e50:	mov	r6, r0
   17e54:	mov	r7, #0
   17e58:	mov	r0, r4
   17e5c:	add	sl, r9, r7
   17e60:	bl	1bf8 <Mat_int32Swap>
   17e64:	add	r7, r7, #2
   17e68:	add	r4, r4, #4
   17e6c:	strh	r0, [sl]
   17e70:	cmp	r7, #512	; 0x200
   17e74:	bne	17e58 <ReadInt16Data+0xe70>
   17e78:	add	r8, r6, r8
   17e7c:	ldr	r6, [sp, #28]
   17e80:	ldr	r2, [sp, #24]
   17e84:	ldr	r4, [sp, #36]	; 0x24
   17e88:	add	r9, r9, #512	; 0x200
   17e8c:	add	r1, r5, #512	; 0x200
   17e90:	add	r0, r6, #256	; 0x100
   17e94:	cmp	r0, r2
   17e98:	blt	17e30 <ReadInt16Data+0xe48>
   17e9c:	ldr	r7, [sp, #8]
   17ea0:	cmp	r0, r7
   17ea4:	bge	194e4 <ReadInt16Data+0x24fc>
   17ea8:	ldr	r3, [r4]
   17eac:	ldr	r1, [sp, #32]
   17eb0:	sub	r9, r7, r0
   17eb4:	add	r4, sp, #168	; 0xa8
   17eb8:	mov	r0, r4
   17ebc:	mov	r2, r9
   17ec0:	bl	18b8 <fread@plt>
   17ec4:	add	r8, r0, r8
   17ec8:	cmp	r9, #1
   17ecc:	blt	194e4 <ReadInt16Data+0x24fc>
   17ed0:	sub	r0, r7, r6
   17ed4:	sub	r6, r0, #256	; 0x100
   17ed8:	mov	r0, r4
   17edc:	bl	1bf8 <Mat_int32Swap>
   17ee0:	strh	r0, [r5], #2
   17ee4:	add	r4, r4, #4
   17ee8:	subs	r6, r6, #1
   17eec:	bne	17ed8 <ReadInt16Data+0xef0>
   17ef0:	b	194e4 <ReadInt16Data+0x24fc>
   17ef4:	sub	r0, r7, #256	; 0x100
   17ef8:	add	r1, r9, #512	; 0x200
   17efc:	mov	r8, #0
   17f00:	str	sl, [sp, #32]
   17f04:	str	r7, [sp, #8]
   17f08:	str	r0, [sp, #24]
   17f0c:	mov	r0, #0
   17f10:	mov	r5, r1
   17f14:	ldr	r3, [r4]
   17f18:	ldr	r1, [sp, #32]
   17f1c:	add	r4, sp, #168	; 0xa8
   17f20:	str	r0, [sp, #28]
   17f24:	mov	r2, #256	; 0x100
   17f28:	mov	r0, r4
   17f2c:	bl	18b8 <fread@plt>
   17f30:	mov	r6, r0
   17f34:	mov	r7, #0
   17f38:	mov	r0, r4
   17f3c:	add	sl, r9, r7
   17f40:	bl	1c0c <Mat_uint32Swap>
   17f44:	add	r7, r7, #2
   17f48:	add	r4, r4, #4
   17f4c:	strh	r0, [sl]
   17f50:	cmp	r7, #512	; 0x200
   17f54:	bne	17f38 <ReadInt16Data+0xf50>
   17f58:	add	r8, r6, r8
   17f5c:	ldr	r6, [sp, #28]
   17f60:	ldr	r2, [sp, #24]
   17f64:	ldr	r4, [sp, #36]	; 0x24
   17f68:	add	r9, r9, #512	; 0x200
   17f6c:	add	r1, r5, #512	; 0x200
   17f70:	add	r0, r6, #256	; 0x100
   17f74:	cmp	r0, r2
   17f78:	blt	17f10 <ReadInt16Data+0xf28>
   17f7c:	ldr	r7, [sp, #8]
   17f80:	cmp	r0, r7
   17f84:	bge	194e4 <ReadInt16Data+0x24fc>
   17f88:	ldr	r3, [r4]
   17f8c:	ldr	r1, [sp, #32]
   17f90:	sub	r9, r7, r0
   17f94:	add	r4, sp, #168	; 0xa8
   17f98:	mov	r0, r4
   17f9c:	mov	r2, r9
   17fa0:	bl	18b8 <fread@plt>
   17fa4:	add	r8, r0, r8
   17fa8:	cmp	r9, #1
   17fac:	blt	194e4 <ReadInt16Data+0x24fc>
   17fb0:	sub	r0, r7, r6
   17fb4:	sub	r6, r0, #256	; 0x100
   17fb8:	mov	r0, r4
   17fbc:	bl	1c0c <Mat_uint32Swap>
   17fc0:	strh	r0, [r5], #2
   17fc4:	add	r4, r4, #4
   17fc8:	subs	r6, r6, #1
   17fcc:	bne	17fb8 <ReadInt16Data+0xfd0>
   17fd0:	b	194e4 <ReadInt16Data+0x24fc>
   17fd4:	sub	r0, r7, #256	; 0x100
   17fd8:	str	sl, [sp, #32]
   17fdc:	mov	sl, r9
   17fe0:	add	r1, r9, #512	; 0x200
   17fe4:	mov	r8, #0
   17fe8:	str	r7, [sp, #8]
   17fec:	str	r0, [sp, #28]
   17ff0:	mov	r0, #0
   17ff4:	mov	r5, r1
   17ff8:	ldr	r3, [r4]
   17ffc:	ldr	r1, [sp, #32]
   18000:	add	r4, sp, #168	; 0xa8
   18004:	mov	r9, r0
   18008:	mov	r2, #256	; 0x100
   1800c:	mov	r0, r4
   18010:	bl	18b8 <fread@plt>
   18014:	mov	r6, r0
   18018:	mov	r7, #0
   1801c:	mov	r0, r4
   18020:	bl	1c4c <Mat_floatSwap>
   18024:	vcvt.s32.f32	s0, s0
   18028:	add	r0, sl, r7
   1802c:	add	r7, r7, #2
   18030:	add	r4, r4, #4
   18034:	cmp	r7, #512	; 0x200
   18038:	vmov	r1, s0
   1803c:	strh	r1, [r0]
   18040:	bne	1801c <ReadInt16Data+0x1034>
   18044:	ldr	r2, [sp, #28]
   18048:	ldr	r4, [sp, #36]	; 0x24
   1804c:	add	r0, r9, #256	; 0x100
   18050:	add	r8, r6, r8
   18054:	add	sl, sl, #512	; 0x200
   18058:	add	r1, r5, #512	; 0x200
   1805c:	cmp	r0, r2
   18060:	blt	17ff4 <ReadInt16Data+0x100c>
   18064:	ldr	r7, [sp, #8]
   18068:	cmp	r0, r7
   1806c:	bge	194e4 <ReadInt16Data+0x24fc>
   18070:	ldr	sl, [sp, #32]
   18074:	ldr	r3, [r4]
   18078:	sub	r6, r7, r0
   1807c:	add	r4, sp, #168	; 0xa8
   18080:	mov	r0, r4
   18084:	mov	r2, r6
   18088:	mov	r1, sl
   1808c:	bl	18b8 <fread@plt>
   18090:	add	r8, r0, r8
   18094:	cmp	r6, #1
   18098:	blt	194e8 <ReadInt16Data+0x2500>
   1809c:	sub	r0, r7, r9
   180a0:	sub	r6, r0, #256	; 0x100
   180a4:	mov	r0, r4
   180a8:	bl	1c4c <Mat_floatSwap>
   180ac:	vcvt.s32.f32	s0, s0
   180b0:	add	r4, r4, #4
   180b4:	subs	r6, r6, #1
   180b8:	vmov	r0, s0
   180bc:	strh	r0, [r5], #2
   180c0:	bne	180a4 <ReadInt16Data+0x10bc>
   180c4:	b	194e8 <ReadInt16Data+0x2500>
   180c8:	sub	r0, r7, #256	; 0x100
   180cc:	str	sl, [sp, #32]
   180d0:	mov	sl, r9
   180d4:	add	r1, r9, #512	; 0x200
   180d8:	mov	r8, #0
   180dc:	str	r7, [sp, #8]
   180e0:	str	r0, [sp, #28]
   180e4:	mov	r0, #0
   180e8:	mov	r5, r1
   180ec:	ldr	r3, [r4]
   180f0:	ldr	r1, [sp, #32]
   180f4:	add	r4, sp, #168	; 0xa8
   180f8:	mov	r9, r0
   180fc:	mov	r2, #256	; 0x100
   18100:	mov	r0, r4
   18104:	bl	18b8 <fread@plt>
   18108:	mov	r6, r0
   1810c:	mov	r7, #0
   18110:	mov	r0, r4
   18114:	bl	1c90 <Mat_doubleSwap>
   18118:	vcvt.s32.f64	s0, d0
   1811c:	add	r0, sl, r7
   18120:	add	r7, r7, #2
   18124:	add	r4, r4, #8
   18128:	cmp	r7, #512	; 0x200
   1812c:	vmov	r1, s0
   18130:	strh	r1, [r0]
   18134:	bne	18110 <ReadInt16Data+0x1128>
   18138:	ldr	r2, [sp, #28]
   1813c:	ldr	r4, [sp, #36]	; 0x24
   18140:	add	r0, r9, #256	; 0x100
   18144:	add	r8, r6, r8
   18148:	add	sl, sl, #512	; 0x200
   1814c:	add	r1, r5, #512	; 0x200
   18150:	cmp	r0, r2
   18154:	blt	180e8 <ReadInt16Data+0x1100>
   18158:	ldr	r7, [sp, #8]
   1815c:	cmp	r0, r7
   18160:	bge	194e4 <ReadInt16Data+0x24fc>
   18164:	ldr	sl, [sp, #32]
   18168:	ldr	r3, [r4]
   1816c:	sub	r6, r7, r0
   18170:	add	r4, sp, #168	; 0xa8
   18174:	mov	r0, r4
   18178:	mov	r2, r6
   1817c:	mov	r1, sl
   18180:	bl	18b8 <fread@plt>
   18184:	add	r8, r0, r8
   18188:	cmp	r6, #1
   1818c:	blt	194e8 <ReadInt16Data+0x2500>
   18190:	sub	r0, r7, r9
   18194:	sub	r6, r0, #256	; 0x100
   18198:	mov	r0, r4
   1819c:	bl	1c90 <Mat_doubleSwap>
   181a0:	vcvt.s32.f64	s0, d0
   181a4:	add	r4, r4, #8
   181a8:	subs	r6, r6, #1
   181ac:	vmov	r0, s0
   181b0:	strh	r0, [r5], #2
   181b4:	bne	18198 <ReadInt16Data+0x11b0>
   181b8:	b	194e8 <ReadInt16Data+0x2500>
   181bc:	sub	r0, r7, #256	; 0x100
   181c0:	add	r1, r9, #512	; 0x200
   181c4:	mov	r8, #0
   181c8:	str	r5, [sp, #16]
   181cc:	str	r7, [sp, #8]
   181d0:	str	r9, [sp, #4]
   181d4:	str	sl, [sp, #32]
   181d8:	str	r0, [sp, #24]
   181dc:	mov	r0, #0
   181e0:	ldr	r3, [r4]
   181e4:	add	r4, sp, #168	; 0xa8
   181e8:	str	r0, [sp, #28]
   181ec:	mov	r5, r1
   181f0:	mov	r1, sl
   181f4:	mov	r2, #256	; 0x100
   181f8:	mov	r7, r8
   181fc:	mov	r0, r4
   18200:	bl	18b8 <fread@plt>
   18204:	mov	r8, r0
   18208:	mov	sl, #0
   1820c:	mov	r0, r4
   18210:	add	r6, r9, sl
   18214:	bl	1b84 <Mat_int64Swap>
   18218:	add	sl, sl, #2
   1821c:	add	r4, r4, #8
   18220:	strh	r0, [r6]
   18224:	cmp	sl, #512	; 0x200
   18228:	bne	1820c <ReadInt16Data+0x1224>
   1822c:	ldr	r0, [sp, #28]
   18230:	ldr	r2, [sp, #24]
   18234:	ldr	sl, [sp, #32]
   18238:	ldr	r4, [sp, #36]	; 0x24
   1823c:	add	r7, r8, r7
   18240:	add	r9, r9, #512	; 0x200
   18244:	add	r1, r5, #512	; 0x200
   18248:	mov	r8, r7
   1824c:	add	r0, r0, #256	; 0x100
   18250:	cmp	r0, r2
   18254:	blt	181e0 <ReadInt16Data+0x11f8>
   18258:	ldr	r7, [sp, #8]
   1825c:	cmp	r0, r7
   18260:	bge	18af8 <ReadInt16Data+0x1b10>
   18264:	mov	r1, r4
   18268:	sub	r4, r7, r0
   1826c:	add	r6, sp, #168	; 0xa8
   18270:	ldr	r3, [r1]
   18274:	mov	r0, r6
   18278:	mov	r1, sl
   1827c:	mov	r2, r4
   18280:	bl	18b8 <fread@plt>
   18284:	ldr	r9, [sp, #4]
   18288:	add	r8, r0, r8
   1828c:	cmp	r4, #1
   18290:	blt	1908c <ReadInt16Data+0x20a4>
   18294:	ldr	r0, [sp, #28]
   18298:	sub	r0, r7, r0
   1829c:	sub	r4, r0, #256	; 0x100
   182a0:	mov	r0, r6
   182a4:	bl	1b84 <Mat_int64Swap>
   182a8:	strh	r0, [r5], #2
   182ac:	add	r6, r6, #8
   182b0:	subs	r4, r4, #1
   182b4:	bne	182a0 <ReadInt16Data+0x12b8>
   182b8:	b	1908c <ReadInt16Data+0x20a4>
   182bc:	mov	r8, r5
   182c0:	b	194e4 <ReadInt16Data+0x24fc>
   182c4:	sub	r0, r7, #256	; 0x100
   182c8:	lsl	r6, r7, #1
   182cc:	str	r7, [sp, #8]
   182d0:	mov	r5, #0
   182d4:	add	r8, sp, #168	; 0xa8
   182d8:	mov	r7, #0
   182dc:	str	r0, [sp, #28]
   182e0:	ldr	r3, [r4]
   182e4:	mov	r0, r8
   182e8:	mov	r1, sl
   182ec:	mov	r2, #256	; 0x100
   182f0:	bl	18b8 <fread@plt>
   182f4:	mov	r4, r0
   182f8:	add	r0, r9, r5, lsl #1
   182fc:	mov	r1, r8
   18300:	mov	r2, #512	; 0x200
   18304:	bl	181c <memcpy@plt>
   18308:	ldr	r0, [sp, #28]
   1830c:	add	r7, r4, r7
   18310:	ldr	r4, [sp, #36]	; 0x24
   18314:	add	r5, r5, #256	; 0x100
   18318:	sub	r6, r6, #512	; 0x200
   1831c:	cmp	r5, r0
   18320:	blt	182e0 <ReadInt16Data+0x12f8>
   18324:	mov	r1, sl
   18328:	ldr	sl, [sp, #8]
   1832c:	cmp	r5, sl
   18330:	bge	18b08 <ReadInt16Data+0x1b20>
   18334:	mov	r0, r4
   18338:	sub	r4, sl, r5
   1833c:	mov	sl, r1
   18340:	ldr	r3, [r0]
   18344:	add	r0, sp, #168	; 0xa8
   18348:	mov	r2, r4
   1834c:	bl	18b8 <fread@plt>
   18350:	mov	r8, r7
   18354:	add	r8, r0, r7
   18358:	cmp	r4, #1
   1835c:	blt	194e8 <ReadInt16Data+0x2500>
   18360:	add	r0, r9, r5, lsl #1
   18364:	add	r1, sp, #168	; 0xa8
   18368:	mov	r2, r6
   1836c:	bl	181c <memcpy@plt>
   18370:	b	194e8 <ReadInt16Data+0x2500>
   18374:	sub	r1, r7, #256	; 0x100
   18378:	str	sl, [sp, #32]
   1837c:	str	r7, [sp, #8]
   18380:	add	r0, r9, #512	; 0x200
   18384:	mov	r4, #0
   18388:	add	r6, sp, #168	; 0xa8
   1838c:	mov	r7, #32
   18390:	mov	r8, r9
   18394:	mov	sl, #0
   18398:	str	r9, [sp, #4]
   1839c:	str	r1, [sp, #24]
   183a0:	mov	r1, #256	; 0x100
   183a4:	mov	r9, r0
   183a8:	ldr	r0, [sp, #36]	; 0x24
   183ac:	mov	r5, r1
   183b0:	ldr	r1, [sp, #32]
   183b4:	mov	r2, #256	; 0x100
   183b8:	str	r4, [sp, #28]
   183bc:	ldr	r3, [r0]
   183c0:	mov	r0, r6
   183c4:	bl	18b8 <fread@plt>
   183c8:	mov	r1, #0
   183cc:	mov	r2, r6
   183d0:	add	r3, r2, #16
   183d4:	vld1.32	{d16-d17}, [r2], r7
   183d8:	add	r4, r8, r1
   183dc:	add	r1, r1, #16
   183e0:	cmp	r1, #512	; 0x200
   183e4:	vmovn.i32	d16, q8
   183e8:	vst1.16	{d16}, [r4]!
   183ec:	vld1.32	{d16-d17}, [r3]
   183f0:	vmovn.i32	d16, q8
   183f4:	vst1.16	{d16}, [r4]
   183f8:	bne	183d0 <ReadInt16Data+0x13e8>
   183fc:	ldr	r2, [sp, #28]
   18400:	add	sl, r0, sl
   18404:	add	r8, r8, #512	; 0x200
   18408:	add	r0, r9, #512	; 0x200
   1840c:	add	r1, r5, #256	; 0x100
   18410:	add	r4, r2, #256	; 0x100
   18414:	ldr	r2, [sp, #24]
   18418:	cmp	r4, r2
   1841c:	blt	183a4 <ReadInt16Data+0x13bc>
   18420:	ldr	r7, [sp, #8]
   18424:	cmp	r4, r7
   18428:	bge	1940c <ReadInt16Data+0x2424>
   1842c:	ldr	r0, [sp, #36]	; 0x24
   18430:	ldr	r1, [sp, #32]
   18434:	sub	r8, r7, r4
   18438:	add	r6, sp, #168	; 0xa8
   1843c:	mov	r2, r8
   18440:	ldr	r3, [r0]
   18444:	mov	r0, r6
   18448:	bl	18b8 <fread@plt>
   1844c:	mov	r1, r8
   18450:	mov	r8, sl
   18454:	add	r8, r0, sl
   18458:	cmp	r1, #1
   1845c:	blt	194e4 <ReadInt16Data+0x24fc>
   18460:	ldr	sl, [sp, #32]
   18464:	mov	lr, #0
   18468:	cmp	r1, #4
   1846c:	bcc	18ee8 <ReadInt16Data+0x1f00>
   18470:	bic	lr, r1, #3
   18474:	str	r1, [sp, #36]	; 0x24
   18478:	mov	r1, #1
   1847c:	mov	sl, r8
   18480:	subs	r2, lr, #4
   18484:	add	r2, r1, r2, lsr #2
   18488:	and	ip, r2, #1
   1848c:	beq	18ea4 <ReadInt16Data+0x1ebc>
   18490:	ldr	r0, [sp, #28]
   18494:	mov	r8, #32
   18498:	sub	r2, r7, r0
   1849c:	sub	r2, r2, #256	; 0x100
   184a0:	bic	r2, r2, #3
   184a4:	sub	r2, r2, #4
   184a8:	add	r1, r1, r2, lsr #2
   184ac:	mvn	r3, r2, lsr #2
   184b0:	mov	r2, #0
   184b4:	and	r1, r1, #1
   184b8:	add	r3, r3, r1
   184bc:	mov	r1, #16
   184c0:	add	r0, r6, #16
   184c4:	vld1.32	{d16-d17}, [r6], r8
   184c8:	add	r7, r9, #8
   184cc:	adds	r3, r3, #2
   184d0:	add	r2, r2, #8
   184d4:	vmovn.i32	d16, q8
   184d8:	vst1.16	{d16}, [r9], r1
   184dc:	vld1.32	{d16-d17}, [r0]
   184e0:	vmovn.i32	d16, q8
   184e4:	vst1.16	{d16}, [r7]
   184e8:	bne	184c0 <ReadInt16Data+0x14d8>
   184ec:	b	18ea8 <ReadInt16Data+0x1ec0>
   184f0:	sub	r1, r7, #256	; 0x100
   184f4:	str	sl, [sp, #32]
   184f8:	str	r7, [sp, #8]
   184fc:	add	r0, r9, #512	; 0x200
   18500:	mov	r4, #0
   18504:	add	r6, sp, #168	; 0xa8
   18508:	mov	r7, #32
   1850c:	mov	r8, r9
   18510:	mov	sl, #0
   18514:	str	r9, [sp, #4]
   18518:	str	r1, [sp, #24]
   1851c:	mov	r1, #256	; 0x100
   18520:	mov	r9, r0
   18524:	ldr	r0, [sp, #36]	; 0x24
   18528:	mov	r5, r1
   1852c:	ldr	r1, [sp, #32]
   18530:	mov	r2, #256	; 0x100
   18534:	str	r4, [sp, #28]
   18538:	ldr	r3, [r0]
   1853c:	mov	r0, r6
   18540:	bl	18b8 <fread@plt>
   18544:	mov	r1, #0
   18548:	mov	r2, r6
   1854c:	add	r3, r2, #16
   18550:	vld1.32	{d16-d17}, [r2], r7
   18554:	add	r4, r8, r1
   18558:	add	r1, r1, #16
   1855c:	cmp	r1, #512	; 0x200
   18560:	vmovn.i32	d16, q8
   18564:	vst1.16	{d16}, [r4]!
   18568:	vld1.32	{d16-d17}, [r3]
   1856c:	vmovn.i32	d16, q8
   18570:	vst1.16	{d16}, [r4]
   18574:	bne	1854c <ReadInt16Data+0x1564>
   18578:	ldr	r2, [sp, #28]
   1857c:	add	sl, r0, sl
   18580:	add	r8, r8, #512	; 0x200
   18584:	add	r0, r9, #512	; 0x200
   18588:	add	r1, r5, #256	; 0x100
   1858c:	add	r4, r2, #256	; 0x100
   18590:	ldr	r2, [sp, #24]
   18594:	cmp	r4, r2
   18598:	blt	18520 <ReadInt16Data+0x1538>
   1859c:	ldr	r7, [sp, #8]
   185a0:	cmp	r4, r7
   185a4:	bge	1940c <ReadInt16Data+0x2424>
   185a8:	ldr	r0, [sp, #36]	; 0x24
   185ac:	ldr	r1, [sp, #32]
   185b0:	sub	r8, r7, r4
   185b4:	add	r6, sp, #168	; 0xa8
   185b8:	mov	r2, r8
   185bc:	ldr	r3, [r0]
   185c0:	mov	r0, r6
   185c4:	bl	18b8 <fread@plt>
   185c8:	mov	r1, r8
   185cc:	mov	r8, sl
   185d0:	add	r8, r0, sl
   185d4:	cmp	r1, #1
   185d8:	blt	194e4 <ReadInt16Data+0x24fc>
   185dc:	ldr	sl, [sp, #32]
   185e0:	mov	lr, #0
   185e4:	cmp	r1, #4
   185e8:	bcc	18f64 <ReadInt16Data+0x1f7c>
   185ec:	bic	lr, r1, #3
   185f0:	str	r1, [sp, #36]	; 0x24
   185f4:	mov	r1, #1
   185f8:	mov	sl, r8
   185fc:	subs	r2, lr, #4
   18600:	add	r2, r1, r2, lsr #2
   18604:	and	ip, r2, #1
   18608:	beq	18f20 <ReadInt16Data+0x1f38>
   1860c:	ldr	r0, [sp, #28]
   18610:	mov	r8, #32
   18614:	sub	r2, r7, r0
   18618:	sub	r2, r2, #256	; 0x100
   1861c:	bic	r2, r2, #3
   18620:	sub	r2, r2, #4
   18624:	add	r1, r1, r2, lsr #2
   18628:	mvn	r3, r2, lsr #2
   1862c:	mov	r2, #0
   18630:	and	r1, r1, #1
   18634:	add	r3, r3, r1
   18638:	mov	r1, #16
   1863c:	add	r0, r6, #16
   18640:	vld1.32	{d16-d17}, [r6], r8
   18644:	add	r7, r9, #8
   18648:	adds	r3, r3, #2
   1864c:	add	r2, r2, #8
   18650:	vmovn.i32	d16, q8
   18654:	vst1.16	{d16}, [r9], r1
   18658:	vld1.32	{d16-d17}, [r0]
   1865c:	vmovn.i32	d16, q8
   18660:	vst1.16	{d16}, [r7]
   18664:	bne	1863c <ReadInt16Data+0x1654>
   18668:	b	18f24 <ReadInt16Data+0x1f3c>
   1866c:	str	sl, [sp, #32]
   18670:	str	r7, [sp, #8]
   18674:	add	r0, r9, #512	; 0x200
   18678:	sub	r7, r7, #256	; 0x100
   1867c:	mov	r4, #0
   18680:	mov	r1, #256	; 0x100
   18684:	add	r6, sp, #168	; 0xa8
   18688:	mov	r5, #32
   1868c:	mov	r8, r9
   18690:	mov	sl, #0
   18694:	str	r9, [sp, #4]
   18698:	mov	r9, r0
   1869c:	ldr	r0, [sp, #36]	; 0x24
   186a0:	str	r1, [sp, #24]
   186a4:	ldr	r1, [sp, #32]
   186a8:	mov	r2, #256	; 0x100
   186ac:	str	r4, [sp, #28]
   186b0:	ldr	r3, [r0]
   186b4:	mov	r0, r6
   186b8:	bl	18b8 <fread@plt>
   186bc:	mov	r1, #0
   186c0:	mov	r2, r6
   186c4:	add	r3, r2, #16
   186c8:	vld1.32	{d16-d17}, [r2], r5
   186cc:	add	r4, r8, r1
   186d0:	add	r1, r1, #16
   186d4:	cmp	r1, #512	; 0x200
   186d8:	vcvt.s32.f32	q8, q8
   186dc:	vmovn.i32	d16, q8
   186e0:	vst1.16	{d16}, [r4]!
   186e4:	vld1.32	{d16-d17}, [r3]
   186e8:	vcvt.s32.f32	q8, q8
   186ec:	vmovn.i32	d16, q8
   186f0:	vst1.16	{d16}, [r4]
   186f4:	bne	186c4 <ReadInt16Data+0x16dc>
   186f8:	ldr	r2, [sp, #28]
   186fc:	ldr	r1, [sp, #24]
   18700:	add	sl, r0, sl
   18704:	add	r8, r8, #512	; 0x200
   18708:	add	r0, r9, #512	; 0x200
   1870c:	add	r4, r2, #256	; 0x100
   18710:	add	r1, r1, #256	; 0x100
   18714:	cmp	r4, r7
   18718:	blt	18698 <ReadInt16Data+0x16b0>
   1871c:	ldr	r5, [sp, #8]
   18720:	cmp	r4, r5
   18724:	bge	1940c <ReadInt16Data+0x2424>
   18728:	ldr	r0, [sp, #36]	; 0x24
   1872c:	ldr	r1, [sp, #32]
   18730:	sub	r7, r5, r4
   18734:	add	r6, sp, #168	; 0xa8
   18738:	mov	r2, r7
   1873c:	ldr	r3, [r0]
   18740:	mov	r0, r6
   18744:	bl	18b8 <fread@plt>
   18748:	mov	r8, sl
   1874c:	add	r8, r0, sl
   18750:	cmp	r7, #1
   18754:	blt	194e4 <ReadInt16Data+0x24fc>
   18758:	mov	lr, #0
   1875c:	cmp	r7, #4
   18760:	bcc	18fd8 <ReadInt16Data+0x1ff0>
   18764:	bic	lr, r7, #3
   18768:	mov	r2, #1
   1876c:	mov	sl, r7
   18770:	subs	r1, lr, #4
   18774:	add	r1, r2, r1, lsr #2
   18778:	and	ip, r1, #1
   1877c:	beq	18f9c <ReadInt16Data+0x1fb4>
   18780:	ldr	r0, [sp, #28]
   18784:	sub	r3, r5, r0
   18788:	mov	r5, #16
   1878c:	sub	r3, r3, #256	; 0x100
   18790:	bic	r3, r3, #3
   18794:	sub	r3, r3, #4
   18798:	add	r2, r2, r3, lsr #2
   1879c:	mvn	r7, r3, lsr #2
   187a0:	and	r2, r2, #1
   187a4:	add	r3, r7, r2
   187a8:	mov	r2, #0
   187ac:	mov	r7, #32
   187b0:	add	r1, r6, #16
   187b4:	vld1.32	{d16-d17}, [r6], r7
   187b8:	add	r0, r9, #8
   187bc:	adds	r3, r3, #2
   187c0:	add	r2, r2, #8
   187c4:	vcvt.s32.f32	q8, q8
   187c8:	vmovn.i32	d16, q8
   187cc:	vst1.16	{d16}, [r9], r5
   187d0:	vld1.32	{d16-d17}, [r1]
   187d4:	vcvt.s32.f32	q8, q8
   187d8:	vmovn.i32	d16, q8
   187dc:	vst1.16	{d16}, [r0]
   187e0:	bne	187b0 <ReadInt16Data+0x17c8>
   187e4:	b	18fa0 <ReadInt16Data+0x1fb8>
   187e8:	movw	r0, #514	; 0x202
   187ec:	mov	r1, r7
   187f0:	add	r2, sp, #168	; 0xa8
   187f4:	str	sl, [sp, #32]
   187f8:	str	r9, [sp, #4]
   187fc:	add	r7, r9, #2
   18800:	mov	r5, #0
   18804:	mov	r8, #0
   18808:	add	r0, r9, r0
   1880c:	add	r9, r2, #8
   18810:	sub	sl, r1, #256	; 0x100
   18814:	str	r1, [sp, #8]
   18818:	mov	r4, r0
   1881c:	ldr	r0, [sp, #36]	; 0x24
   18820:	ldr	r1, [sp, #32]
   18824:	mov	r2, #256	; 0x100
   18828:	mov	r6, r5
   1882c:	ldr	r3, [r0]
   18830:	add	r0, sp, #168	; 0xa8
   18834:	bl	18b8 <fread@plt>
   18838:	mov	r1, #0
   1883c:	mov	r2, r9
   18840:	vldr	d16, [r2, #-8]
   18844:	add	r3, r7, r1
   18848:	add	r1, r1, #4
   1884c:	cmp	r1, #512	; 0x200
   18850:	vcvt.s32.f64	s0, d16
   18854:	vmov	r5, s0
   18858:	strh	r5, [r3, #-2]
   1885c:	vldr	d16, [r2]
   18860:	add	r2, r2, #16
   18864:	vcvt.s32.f64	s0, d16
   18868:	vmov	r5, s0
   1886c:	strh	r5, [r3]
   18870:	bne	18840 <ReadInt16Data+0x1858>
   18874:	add	r5, r6, #256	; 0x100
   18878:	add	r8, r0, r8
   1887c:	add	r7, r7, #512	; 0x200
   18880:	add	r0, r4, #512	; 0x200
   18884:	cmp	r5, sl
   18888:	blt	18818 <ReadInt16Data+0x1830>
   1888c:	ldr	r7, [sp, #8]
   18890:	cmp	r5, r7
   18894:	bge	194e4 <ReadInt16Data+0x24fc>
   18898:	ldr	r0, [sp, #36]	; 0x24
   1889c:	ldr	sl, [sp, #32]
   188a0:	sub	r9, r7, r5
   188a4:	mov	r2, r9
   188a8:	ldr	r3, [r0]
   188ac:	add	r0, sp, #168	; 0xa8
   188b0:	mov	r1, sl
   188b4:	bl	18b8 <fread@plt>
   188b8:	add	r8, r0, r8
   188bc:	cmp	r9, #1
   188c0:	blt	194e8 <ReadInt16Data+0x2500>
   188c4:	mvn	r0, #256	; 0x100
   188c8:	mov	r1, #0
   188cc:	sub	r2, r0, r6
   188d0:	ldr	r6, [sp, #4]
   188d4:	and	r0, r9, #1
   188d8:	cmn	r2, r7
   188dc:	beq	1892c <ReadInt16Data+0x1944>
   188e0:	sub	r1, r0, r7
   188e4:	add	r2, sp, #168	; 0xa8
   188e8:	add	r3, r2, #8
   188ec:	add	r1, r1, r5
   188f0:	mov	r2, #0
   188f4:	vldr	d16, [r3, #-8]
   188f8:	sub	r2, r2, #2
   188fc:	cmp	r1, r2
   18900:	vcvt.s32.f64	s0, d16
   18904:	vmov	r7, s0
   18908:	strh	r7, [r4, #-2]
   1890c:	vldr	d16, [r3]
   18910:	add	r3, r3, #16
   18914:	vcvt.s32.f64	s0, d16
   18918:	vmov	r7, s0
   1891c:	strh	r7, [r4]
   18920:	add	r4, r4, #4
   18924:	bne	188f4 <ReadInt16Data+0x190c>
   18928:	rsb	r1, r2, #0
   1892c:	cmp	r0, #0
   18930:	beq	194e8 <ReadInt16Data+0x2500>
   18934:	add	r0, sp, #168	; 0xa8
   18938:	add	r0, r0, r1, lsl #3
   1893c:	vldr	d16, [r0]
   18940:	add	r0, r1, r5
   18944:	add	r0, r6, r0, lsl #1
   18948:	vcvt.s32.f64	s0, d16
   1894c:	vmov	r1, s0
   18950:	strh	r1, [r0]
   18954:	b	194e8 <ReadInt16Data+0x2500>
   18958:	sub	r1, r7, #256	; 0x100
   1895c:	str	r7, [sp, #8]
   18960:	mov	r6, r9
   18964:	add	r0, r9, #512	; 0x200
   18968:	mov	r4, #0
   1896c:	add	r9, sp, #168	; 0xa8
   18970:	mov	r7, #32
   18974:	mov	r8, #0
   18978:	str	r5, [sp, #16]
   1897c:	str	sl, [sp, #32]
   18980:	str	r1, [sp, #20]
   18984:	mov	r1, #256	; 0x100
   18988:	str	r6, [sp, #4]
   1898c:	str	r0, [sp, #24]
   18990:	ldr	r0, [sp, #36]	; 0x24
   18994:	str	r1, [sp, #28]
   18998:	ldr	r1, [sp, #32]
   1899c:	mov	r2, #256	; 0x100
   189a0:	mov	sl, r4
   189a4:	ldr	r3, [r0]
   189a8:	mov	r0, r9
   189ac:	bl	18b8 <fread@plt>
   189b0:	mov	r1, #0
   189b4:	mov	r3, r9
   189b8:	mov	r2, r9
   189bc:	vld1.64	{d16-d17}, [r2], r7
   189c0:	mov	r5, r6
   189c4:	add	r3, r3, #16
   189c8:	vmovn.i64	d16, q8
   189cc:	vuzp.16	d16, d17
   189d0:	vmov.32	r4, d16[0]
   189d4:	str	r4, [r5, r1]!
   189d8:	add	r1, r1, #8
   189dc:	vld1.64	{d16-d17}, [r3]
   189e0:	add	r3, r5, #4
   189e4:	cmp	r1, #512	; 0x200
   189e8:	vmovn.i64	d16, q8
   189ec:	vuzp.16	d16, d17
   189f0:	vst1.32	{d16[0]}, [r3]
   189f4:	mov	r3, r2
   189f8:	bne	189bc <ReadInt16Data+0x19d4>
   189fc:	ldr	r1, [sp, #28]
   18a00:	add	r8, r0, r8
   18a04:	ldr	r0, [sp, #24]
   18a08:	mov	r2, sl
   18a0c:	ldr	r2, [sp, #20]
   18a10:	add	r4, sl, #256	; 0x100
   18a14:	add	r6, r6, #512	; 0x200
   18a18:	add	r0, r0, #512	; 0x200
   18a1c:	add	r1, r1, #256	; 0x100
   18a20:	cmp	r4, r2
   18a24:	blt	1898c <ReadInt16Data+0x19a4>
   18a28:	ldr	r7, [sp, #8]
   18a2c:	cmp	r4, r7
   18a30:	bge	18b14 <ReadInt16Data+0x1b2c>
   18a34:	ldr	r0, [sp, #36]	; 0x24
   18a38:	ldr	r1, [sp, #32]
   18a3c:	sub	r6, r7, r4
   18a40:	add	r5, sp, #168	; 0xa8
   18a44:	mov	r2, r6
   18a48:	ldr	r3, [r0]
   18a4c:	mov	r0, r5
   18a50:	bl	18b8 <fread@plt>
   18a54:	ldr	r9, [sp, #4]
   18a58:	add	r8, r0, r8
   18a5c:	cmp	r6, #1
   18a60:	blt	19088 <ReadInt16Data+0x20a0>
   18a64:	mov	r0, #0
   18a68:	beq	19058 <ReadInt16Data+0x2070>
   18a6c:	bic	r0, r6, #1
   18a70:	mov	r2, #1
   18a74:	mov	lr, r6
   18a78:	subs	r1, r0, #2
   18a7c:	add	r1, r2, r1, lsr #1
   18a80:	and	ip, r1, #1
   18a84:	beq	19020 <ReadInt16Data+0x2038>
   18a88:	sub	r3, r7, sl
   18a8c:	ldr	r1, [sp, #24]
   18a90:	mov	r6, r5
   18a94:	sub	r3, r3, #256	; 0x100
   18a98:	bic	r3, r3, #1
   18a9c:	sub	r3, r3, #2
   18aa0:	add	r2, r2, r3, lsr #1
   18aa4:	mvn	r7, r3, lsr #1
   18aa8:	and	r2, r2, #1
   18aac:	add	r3, r7, r2
   18ab0:	mov	r2, #0
   18ab4:	mov	r7, #32
   18ab8:	vld1.64	{d16-d17}, [r6], r7
   18abc:	add	r5, r5, #16
   18ac0:	adds	r3, r3, #2
   18ac4:	add	r2, r2, #4
   18ac8:	vmovn.i64	d16, q8
   18acc:	vuzp.16	d16, d17
   18ad0:	vst1.32	{d16[0]}, [r1]
   18ad4:	vld1.64	{d16-d17}, [r5]
   18ad8:	add	r5, r1, #4
   18adc:	add	r1, r1, #8
   18ae0:	vmovn.i64	d16, q8
   18ae4:	vuzp.16	d16, d17
   18ae8:	vst1.32	{d16[0]}, [r5]
   18aec:	mov	r5, r6
   18af0:	bne	18ab8 <ReadInt16Data+0x1ad0>
   18af4:	b	19024 <ReadInt16Data+0x203c>
   18af8:	ldr	r9, [sp, #4]
   18afc:	b	19090 <ReadInt16Data+0x20a8>
   18b00:	mov	sl, r1
   18b04:	b	194e8 <ReadInt16Data+0x2500>
   18b08:	mov	sl, r1
   18b0c:	mov	r8, r7
   18b10:	b	194e8 <ReadInt16Data+0x2500>
   18b14:	ldr	sl, [sp, #32]
   18b18:	ldr	r9, [sp, #4]
   18b1c:	b	1908c <ReadInt16Data+0x20a4>
   18b20:	mov	r1, #0
   18b24:	ldr	r8, [sp, #28]
   18b28:	cmp	ip, #0
   18b2c:	mov	r9, sl
   18b30:	beq	18b5c <ReadInt16Data+0x1b74>
   18b34:	ldr	r0, [r4, r1]
   18b38:	str	r0, [sp, #40]	; 0x28
   18b3c:	add	r0, r4, r1
   18b40:	ldr	r0, [r0, #4]
   18b44:	str	r0, [sp, #44]	; 0x2c
   18b48:	add	r0, sp, #40	; 0x28
   18b4c:	vld1.8	{d16}, [r0 :64]
   18b50:	add	r0, r9, r1, lsl #1
   18b54:	vmovl.s8	q8, d16
   18b58:	vst1.16	{d16-d17}, [r0]
   18b5c:	ldr	r7, [sp, #8]
   18b60:	ldr	sl, [sp, #32]
   18b64:	cmp	lr, r7
   18b68:	beq	194e8 <ReadInt16Data+0x2500>
   18b6c:	add	r2, r9, lr, lsl #1
   18b70:	add	r1, r4, lr
   18b74:	sub	r0, r7, lr
   18b78:	ldrsb	r3, [r1], #1
   18b7c:	subs	r0, r0, #1
   18b80:	strh	r3, [r2], #2
   18b84:	bne	18b78 <ReadInt16Data+0x1b90>
   18b88:	b	194e8 <ReadInt16Data+0x2500>
   18b8c:	mov	r1, #0
   18b90:	ldr	r8, [sp, #28]
   18b94:	cmp	ip, #0
   18b98:	mov	r9, sl
   18b9c:	beq	18bc8 <ReadInt16Data+0x1be0>
   18ba0:	ldr	r0, [r4, r1]
   18ba4:	str	r0, [sp, #104]	; 0x68
   18ba8:	add	r0, r4, r1
   18bac:	ldr	r0, [r0, #4]
   18bb0:	str	r0, [sp, #108]	; 0x6c
   18bb4:	add	r0, sp, #104	; 0x68
   18bb8:	vld1.8	{d16}, [r0 :64]
   18bbc:	add	r0, r9, r1, lsl #1
   18bc0:	vmovl.u8	q8, d16
   18bc4:	vst1.16	{d16-d17}, [r0]
   18bc8:	ldr	r7, [sp, #8]
   18bcc:	ldr	sl, [sp, #32]
   18bd0:	cmp	lr, r7
   18bd4:	beq	194e8 <ReadInt16Data+0x2500>
   18bd8:	add	r2, r9, lr, lsl #1
   18bdc:	add	r1, r4, lr
   18be0:	sub	r0, r7, lr
   18be4:	ldrb	r3, [r1], #1
   18be8:	subs	r0, r0, #1
   18bec:	strh	r3, [r2], #2
   18bf0:	bne	18be4 <ReadInt16Data+0x1bfc>
   18bf4:	b	194e8 <ReadInt16Data+0x2500>
   18bf8:	mov	r2, #0
   18bfc:	ldr	r0, [sp, #28]
   18c00:	ldr	r3, [sp, #4]
   18c04:	mov	r8, sl
   18c08:	cmp	r0, #0
   18c0c:	beq	18c3c <ReadInt16Data+0x1c54>
   18c10:	ldr	r0, [r6, r2]
   18c14:	str	r0, [sp, #64]	; 0x40
   18c18:	add	r0, r6, r2
   18c1c:	ldr	r0, [r0, #4]
   18c20:	str	r0, [sp, #68]	; 0x44
   18c24:	add	r0, sp, #64	; 0x40
   18c28:	vld1.8	{d16}, [r0 :64]
   18c2c:	add	r0, r2, r5
   18c30:	add	r0, r3, r0, lsl #1
   18c34:	vmovl.s8	q8, d16
   18c38:	vst1.16	{d16-d17}, [r0]
   18c3c:	ldr	r0, [sp, #36]	; 0x24
   18c40:	ldr	r4, [sp, #8]
   18c44:	ldr	sl, [sp, #32]
   18c48:	cmp	r0, lr
   18c4c:	beq	194e8 <ReadInt16Data+0x2500>
   18c50:	ldr	r0, [sp, #20]
   18c54:	add	r1, r6, lr
   18c58:	add	r0, lr, r0
   18c5c:	add	r2, r3, r0, lsl #1
   18c60:	ldr	r0, [sp, #24]
   18c64:	sub	r0, r4, r0
   18c68:	sub	r0, r0, lr
   18c6c:	sub	r0, r0, #256	; 0x100
   18c70:	ldrsb	r3, [r1], #1
   18c74:	subs	r0, r0, #1
   18c78:	strh	r3, [r2], #2
   18c7c:	bne	18c70 <ReadInt16Data+0x1c88>
   18c80:	b	194e8 <ReadInt16Data+0x2500>
   18c84:	mov	r2, #0
   18c88:	ldr	r8, [sp, #28]
   18c8c:	ldr	r3, [sp, #4]
   18c90:	cmp	ip, #0
   18c94:	beq	18cc4 <ReadInt16Data+0x1cdc>
   18c98:	ldr	r0, [r9, r2]
   18c9c:	str	r0, [sp, #128]	; 0x80
   18ca0:	add	r0, r9, r2
   18ca4:	ldr	r0, [r0, #4]
   18ca8:	str	r0, [sp, #132]	; 0x84
   18cac:	add	r0, sp, #128	; 0x80
   18cb0:	vld1.8	{d16}, [r0 :64]
   18cb4:	add	r0, r2, r4
   18cb8:	add	r0, r3, r0, lsl #1
   18cbc:	vmovl.u8	q8, d16
   18cc0:	vst1.16	{d16-d17}, [r0]
   18cc4:	ldr	r0, [sp, #36]	; 0x24
   18cc8:	ldr	r5, [sp, #8]
   18ccc:	ldr	sl, [sp, #32]
   18cd0:	ldr	r7, [sp, #20]
   18cd4:	cmp	r0, lr
   18cd8:	beq	194e8 <ReadInt16Data+0x2500>
   18cdc:	ldr	r0, [sp, #24]
   18ce0:	add	r1, r9, lr
   18ce4:	add	r0, lr, r0
   18ce8:	add	r2, r3, r0, lsl #1
   18cec:	sub	r0, r5, r7
   18cf0:	sub	r0, r0, lr
   18cf4:	sub	r0, r0, #256	; 0x100
   18cf8:	ldrb	r3, [r1], #1
   18cfc:	subs	r0, r0, #1
   18d00:	strh	r3, [r2], #2
   18d04:	bne	18cf8 <ReadInt16Data+0x1d10>
   18d08:	b	194e8 <ReadInt16Data+0x2500>
   18d0c:	mov	r1, #0
   18d10:	cmp	ip, #0
   18d14:	beq	18d30 <ReadInt16Data+0x1d48>
   18d18:	add	r0, sp, #168	; 0xa8
   18d1c:	add	r0, r0, r1, lsl #2
   18d20:	vld1.32	{d16-d17}, [r0]
   18d24:	add	r0, sl, r1, lsl #1
   18d28:	vmovn.i32	d16, q8
   18d2c:	vst1.16	{d16}, [r0]
   18d30:	mov	r7, r9
   18d34:	cmp	lr, r9
   18d38:	mov	r9, sl
   18d3c:	mov	sl, r8
   18d40:	ldr	r8, [sp, #28]
   18d44:	beq	194e8 <ReadInt16Data+0x2500>
   18d48:	add	r0, sp, #168	; 0xa8
   18d4c:	add	r2, r9, lr, lsl #1
   18d50:	add	r1, r0, lr, lsl #2
   18d54:	sub	r0, r7, lr
   18d58:	ldr	r3, [r1], #4
   18d5c:	subs	r0, r0, #1
   18d60:	strh	r3, [r2], #2
   18d64:	bne	18d58 <ReadInt16Data+0x1d70>
   18d68:	b	194e8 <ReadInt16Data+0x2500>
   18d6c:	mov	r1, #0
   18d70:	cmp	ip, #0
   18d74:	beq	18d90 <ReadInt16Data+0x1da8>
   18d78:	add	r0, sp, #168	; 0xa8
   18d7c:	add	r0, r0, r1, lsl #2
   18d80:	vld1.32	{d16-d17}, [r0]
   18d84:	add	r0, sl, r1, lsl #1
   18d88:	vmovn.i32	d16, q8
   18d8c:	vst1.16	{d16}, [r0]
   18d90:	mov	r7, r9
   18d94:	cmp	lr, r9
   18d98:	mov	r9, sl
   18d9c:	mov	sl, r8
   18da0:	ldr	r8, [sp, #28]
   18da4:	beq	194e8 <ReadInt16Data+0x2500>
   18da8:	add	r0, sp, #168	; 0xa8
   18dac:	add	r2, r9, lr, lsl #1
   18db0:	add	r1, r0, lr, lsl #2
   18db4:	sub	r0, r7, lr
   18db8:	ldr	r3, [r1], #4
   18dbc:	subs	r0, r0, #1
   18dc0:	strh	r3, [r2], #2
   18dc4:	bne	18db8 <ReadInt16Data+0x1dd0>
   18dc8:	b	194e8 <ReadInt16Data+0x2500>
   18dcc:	mov	r1, #0
   18dd0:	cmp	ip, #0
   18dd4:	beq	18df4 <ReadInt16Data+0x1e0c>
   18dd8:	add	r0, sp, #168	; 0xa8
   18ddc:	add	r0, r0, r1, lsl #2
   18de0:	vld1.32	{d16-d17}, [r0]
   18de4:	add	r0, sl, r1, lsl #1
   18de8:	vcvt.s32.f32	q8, q8
   18dec:	vmovn.i32	d16, q8
   18df0:	vst1.16	{d16}, [r0]
   18df4:	mov	r7, r9
   18df8:	cmp	lr, r9
   18dfc:	mov	r9, sl
   18e00:	mov	sl, r8
   18e04:	ldr	r8, [sp, #28]
   18e08:	beq	194e8 <ReadInt16Data+0x2500>
   18e0c:	add	r0, sp, #168	; 0xa8
   18e10:	add	r2, r9, lr, lsl #1
   18e14:	add	r1, r0, lr, lsl #2
   18e18:	sub	r0, r7, lr
   18e1c:	vldr	s0, [r1]
   18e20:	add	r1, r1, #4
   18e24:	subs	r0, r0, #1
   18e28:	vcvt.s32.f32	s0, s0
   18e2c:	vmov	r3, s0
   18e30:	strh	r3, [r2], #2
   18e34:	bne	18e1c <ReadInt16Data+0x1e34>
   18e38:	b	194e8 <ReadInt16Data+0x2500>
   18e3c:	mov	r1, #0
   18e40:	cmp	r2, #0
   18e44:	mov	r5, lr
   18e48:	beq	18e68 <ReadInt16Data+0x1e80>
   18e4c:	add	r2, sp, #168	; 0xa8
   18e50:	add	r2, r2, r1, lsl #3
   18e54:	add	r1, r9, r1, lsl #1
   18e58:	vld1.64	{d16-d17}, [r2]
   18e5c:	vmovn.i64	d16, q8
   18e60:	vuzp.16	d16, d17
   18e64:	vst1.32	{d16[0]}, [r1]
   18e68:	mov	r7, ip
   18e6c:	cmp	r0, ip
   18e70:	beq	18e94 <ReadInt16Data+0x1eac>
   18e74:	add	r1, sp, #168	; 0xa8
   18e78:	add	r2, r9, r0, lsl #1
   18e7c:	add	r1, r1, r0, lsl #3
   18e80:	sub	r0, r7, r0
   18e84:	ldrh	r3, [r1], #8
   18e88:	subs	r0, r0, #1
   18e8c:	strh	r3, [r2], #2
   18e90:	bne	18e84 <ReadInt16Data+0x1e9c>
   18e94:	ldr	r4, [sp, #36]	; 0x24
   18e98:	cmp	r5, #13
   18e9c:	beq	1909c <ReadInt16Data+0x20b4>
   18ea0:	b	194e8 <ReadInt16Data+0x2500>
   18ea4:	mov	r2, #0
   18ea8:	cmp	ip, #0
   18eac:	mov	r8, sl
   18eb0:	beq	18ed4 <ReadInt16Data+0x1eec>
   18eb4:	add	r0, sp, #168	; 0xa8
   18eb8:	ldr	r1, [sp, #4]
   18ebc:	add	r0, r0, r2, lsl #2
   18ec0:	vld1.32	{d16-d17}, [r0]
   18ec4:	add	r0, r2, r4
   18ec8:	add	r0, r1, r0, lsl #1
   18ecc:	vmovn.i32	d16, q8
   18ed0:	vst1.16	{d16}, [r0]
   18ed4:	ldr	r0, [sp, #36]	; 0x24
   18ed8:	ldr	r7, [sp, #8]
   18edc:	ldr	sl, [sp, #32]
   18ee0:	cmp	r0, lr
   18ee4:	beq	194e8 <ReadInt16Data+0x2500>
   18ee8:	ldr	r2, [sp, #4]
   18eec:	add	r0, sp, #168	; 0xa8
   18ef0:	add	r1, r0, lr, lsl #2
   18ef4:	add	r0, lr, r5
   18ef8:	add	r2, r2, r0, lsl #1
   18efc:	ldr	r0, [sp, #28]
   18f00:	sub	r0, r7, r0
   18f04:	sub	r0, r0, lr
   18f08:	sub	r0, r0, #256	; 0x100
   18f0c:	ldr	r3, [r1], #4
   18f10:	subs	r0, r0, #1
   18f14:	strh	r3, [r2], #2
   18f18:	bne	18f0c <ReadInt16Data+0x1f24>
   18f1c:	b	194e8 <ReadInt16Data+0x2500>
   18f20:	mov	r2, #0
   18f24:	cmp	ip, #0
   18f28:	mov	r8, sl
   18f2c:	beq	18f50 <ReadInt16Data+0x1f68>
   18f30:	add	r0, sp, #168	; 0xa8
   18f34:	ldr	r1, [sp, #4]
   18f38:	add	r0, r0, r2, lsl #2
   18f3c:	vld1.32	{d16-d17}, [r0]
   18f40:	add	r0, r2, r4
   18f44:	add	r0, r1, r0, lsl #1
   18f48:	vmovn.i32	d16, q8
   18f4c:	vst1.16	{d16}, [r0]
   18f50:	ldr	r0, [sp, #36]	; 0x24
   18f54:	ldr	r7, [sp, #8]
   18f58:	ldr	sl, [sp, #32]
   18f5c:	cmp	r0, lr
   18f60:	beq	194e8 <ReadInt16Data+0x2500>
   18f64:	ldr	r2, [sp, #4]
   18f68:	add	r0, sp, #168	; 0xa8
   18f6c:	add	r1, r0, lr, lsl #2
   18f70:	add	r0, lr, r5
   18f74:	add	r2, r2, r0, lsl #1
   18f78:	ldr	r0, [sp, #28]
   18f7c:	sub	r0, r7, r0
   18f80:	sub	r0, r0, lr
   18f84:	sub	r0, r0, #256	; 0x100
   18f88:	ldr	r3, [r1], #4
   18f8c:	subs	r0, r0, #1
   18f90:	strh	r3, [r2], #2
   18f94:	bne	18f88 <ReadInt16Data+0x1fa0>
   18f98:	b	194e8 <ReadInt16Data+0x2500>
   18f9c:	mov	r2, #0
   18fa0:	cmp	ip, #0
   18fa4:	beq	18fcc <ReadInt16Data+0x1fe4>
   18fa8:	add	r0, sp, #168	; 0xa8
   18fac:	ldr	r1, [sp, #4]
   18fb0:	add	r0, r0, r2, lsl #2
   18fb4:	vld1.32	{d16-d17}, [r0]
   18fb8:	add	r0, r2, r4
   18fbc:	add	r0, r1, r0, lsl #1
   18fc0:	vcvt.s32.f32	q8, q8
   18fc4:	vmovn.i32	d16, q8
   18fc8:	vst1.16	{d16}, [r0]
   18fcc:	ldr	r5, [sp, #8]
   18fd0:	cmp	sl, lr
   18fd4:	beq	194e4 <ReadInt16Data+0x24fc>
   18fd8:	add	r0, sp, #168	; 0xa8
   18fdc:	ldr	r2, [sp, #4]
   18fe0:	add	r1, r0, lr, lsl #2
   18fe4:	ldr	r0, [sp, #24]
   18fe8:	add	r0, lr, r0
   18fec:	add	r2, r2, r0, lsl #1
   18ff0:	ldr	r0, [sp, #28]
   18ff4:	sub	r0, r5, r0
   18ff8:	sub	r0, r0, lr
   18ffc:	sub	r0, r0, #256	; 0x100
   19000:	vldr	s0, [r1]
   19004:	add	r1, r1, #4
   19008:	subs	r0, r0, #1
   1900c:	vcvt.s32.f32	s0, s0
   19010:	vmov	r3, s0
   19014:	strh	r3, [r2], #2
   19018:	bne	19000 <ReadInt16Data+0x2018>
   1901c:	b	194e4 <ReadInt16Data+0x24fc>
   19020:	mov	r2, #0
   19024:	cmp	ip, #0
   19028:	beq	1904c <ReadInt16Data+0x2064>
   1902c:	add	r1, sp, #168	; 0xa8
   19030:	add	r1, r1, r2, lsl #3
   19034:	vld1.64	{d16-d17}, [r1]
   19038:	add	r1, r2, r4
   1903c:	add	r1, r9, r1, lsl #1
   19040:	vmovn.i64	d16, q8
   19044:	vuzp.16	d16, d17
   19048:	vst1.32	{d16[0]}, [r1]
   1904c:	ldr	r7, [sp, #8]
   19050:	cmp	lr, r0
   19054:	beq	19088 <ReadInt16Data+0x20a0>
   19058:	ldr	r2, [sp, #28]
   1905c:	add	r1, sp, #168	; 0xa8
   19060:	sub	r3, r7, sl
   19064:	add	r1, r1, r0, lsl #3
   19068:	add	r2, r0, r2
   1906c:	sub	r0, r3, r0
   19070:	add	r2, r9, r2, lsl #1
   19074:	sub	r0, r0, #256	; 0x100
   19078:	ldrh	r3, [r1], #8
   1907c:	subs	r0, r0, #1
   19080:	strh	r3, [r2], #2
   19084:	bne	19078 <ReadInt16Data+0x2090>
   19088:	ldr	sl, [sp, #32]
   1908c:	ldr	r4, [sp, #36]	; 0x24
   19090:	ldr	r5, [sp, #16]
   19094:	cmp	r5, #13
   19098:	bne	194e8 <ReadInt16Data+0x2500>
   1909c:	ldr	r0, [r4, #20]
   190a0:	cmp	r0, #0
   190a4:	beq	190f0 <ReadInt16Data+0x2108>
   190a8:	cmp	r7, #256	; 0x100
   190ac:	bgt	19194 <ReadInt16Data+0x21ac>
   190b0:	ldr	r3, [r4]
   190b4:	add	r4, sp, #168	; 0xa8
   190b8:	mov	r1, sl
   190bc:	mov	r2, r7
   190c0:	mov	r0, r4
   190c4:	bl	18b8 <fread@plt>
   190c8:	add	r8, r0, r8
   190cc:	cmp	r7, #1
   190d0:	blt	194e8 <ReadInt16Data+0x2500>
   190d4:	mov	r0, r4
   190d8:	bl	1bd4 <Mat_uint64Swap>
   190dc:	strh	r0, [r9], #2
   190e0:	add	r4, r4, #8
   190e4:	subs	r7, r7, #1
   190e8:	bne	190d4 <ReadInt16Data+0x20ec>
   190ec:	b	194e8 <ReadInt16Data+0x2500>
   190f0:	cmp	r7, #256	; 0x100
   190f4:	bgt	19270 <ReadInt16Data+0x2288>
   190f8:	ldr	r3, [r4]
   190fc:	add	r5, sp, #168	; 0xa8
   19100:	mov	r1, sl
   19104:	mov	r2, r7
   19108:	mov	r0, r5
   1910c:	bl	18b8 <fread@plt>
   19110:	add	r8, r0, r8
   19114:	cmp	r7, #1
   19118:	blt	194e8 <ReadInt16Data+0x2500>
   1911c:	mov	r0, #0
   19120:	beq	19450 <ReadInt16Data+0x2468>
   19124:	bic	r0, r7, #1
   19128:	mov	r2, #1
   1912c:	mov	ip, r7
   19130:	subs	r1, r0, #2
   19134:	add	r1, r2, r1, lsr #1
   19138:	and	r2, r1, #1
   1913c:	beq	1941c <ReadInt16Data+0x2434>
   19140:	sub	r3, r1, r2
   19144:	mov	r1, #0
   19148:	mov	r7, #32
   1914c:	mov	r6, r9
   19150:	mov	r4, r5
   19154:	vld1.64	{d16-d17}, [r4], r7
   19158:	add	r5, r5, #16
   1915c:	subs	r3, r3, #2
   19160:	add	r1, r1, #4
   19164:	vmovn.i64	d16, q8
   19168:	vuzp.16	d16, d17
   1916c:	vst1.32	{d16[0]}, [r6]
   19170:	vld1.64	{d16-d17}, [r5]
   19174:	add	r5, r6, #4
   19178:	add	r6, r6, #8
   1917c:	vmovn.i64	d16, q8
   19180:	vuzp.16	d16, d17
   19184:	vst1.32	{d16[0]}, [r5]
   19188:	mov	r5, r4
   1918c:	bne	19154 <ReadInt16Data+0x216c>
   19190:	b	19420 <ReadInt16Data+0x2438>
   19194:	sub	r0, r7, #256	; 0x100
   19198:	add	r1, r9, #512	; 0x200
   1919c:	str	sl, [sp, #32]
   191a0:	str	r7, [sp, #8]
   191a4:	str	r0, [sp, #24]
   191a8:	mov	r0, #0
   191ac:	mov	r5, r1
   191b0:	ldr	r3, [r4]
   191b4:	ldr	r1, [sp, #32]
   191b8:	add	r4, sp, #168	; 0xa8
   191bc:	str	r0, [sp, #28]
   191c0:	mov	r2, #256	; 0x100
   191c4:	mov	r0, r4
   191c8:	bl	18b8 <fread@plt>
   191cc:	mov	r6, r0
   191d0:	mov	r7, #0
   191d4:	mov	r0, r4
   191d8:	add	sl, r9, r7
   191dc:	bl	1bd4 <Mat_uint64Swap>
   191e0:	add	r7, r7, #2
   191e4:	add	r4, r4, #8
   191e8:	strh	r0, [sl]
   191ec:	cmp	r7, #512	; 0x200
   191f0:	bne	191d4 <ReadInt16Data+0x21ec>
   191f4:	add	r8, r6, r8
   191f8:	ldr	r6, [sp, #28]
   191fc:	ldr	r2, [sp, #24]
   19200:	ldr	r4, [sp, #36]	; 0x24
   19204:	add	r9, r9, #512	; 0x200
   19208:	add	r1, r5, #512	; 0x200
   1920c:	add	r0, r6, #256	; 0x100
   19210:	cmp	r0, r2
   19214:	blt	191ac <ReadInt16Data+0x21c4>
   19218:	ldr	r7, [sp, #8]
   1921c:	cmp	r0, r7
   19220:	bge	194e4 <ReadInt16Data+0x24fc>
   19224:	ldr	r3, [r4]
   19228:	ldr	r1, [sp, #32]
   1922c:	sub	r9, r7, r0
   19230:	add	r4, sp, #168	; 0xa8
   19234:	mov	r0, r4
   19238:	mov	r2, r9
   1923c:	bl	18b8 <fread@plt>
   19240:	add	r8, r0, r8
   19244:	cmp	r9, #1
   19248:	blt	194e4 <ReadInt16Data+0x24fc>
   1924c:	sub	r0, r7, r6
   19250:	sub	r6, r0, #256	; 0x100
   19254:	mov	r0, r4
   19258:	bl	1bd4 <Mat_uint64Swap>
   1925c:	strh	r0, [r5], #2
   19260:	add	r4, r4, #8
   19264:	subs	r6, r6, #1
   19268:	bne	19254 <ReadInt16Data+0x226c>
   1926c:	b	194e4 <ReadInt16Data+0x24fc>
   19270:	mov	r0, sl
   19274:	sub	r1, r7, #256	; 0x100
   19278:	mov	sl, r8
   1927c:	str	r7, [sp, #8]
   19280:	mov	r4, #0
   19284:	mov	r7, #32
   19288:	mov	r8, r9
   1928c:	str	r9, [sp, #4]
   19290:	str	r0, [sp, #32]
   19294:	str	r1, [sp, #24]
   19298:	add	r0, r9, #512	; 0x200
   1929c:	mov	r1, #256	; 0x100
   192a0:	mov	r9, r0
   192a4:	ldr	r0, [sp, #36]	; 0x24
   192a8:	str	r1, [sp, #28]
   192ac:	ldr	r1, [sp, #32]
   192b0:	mov	r6, r4
   192b4:	add	r4, sp, #168	; 0xa8
   192b8:	mov	r2, #256	; 0x100
   192bc:	ldr	r3, [r0]
   192c0:	mov	r0, r4
   192c4:	bl	18b8 <fread@plt>
   192c8:	mov	r1, #0
   192cc:	mov	r3, r4
   192d0:	mov	r2, r4
   192d4:	vld1.64	{d16-d17}, [r2], r7
   192d8:	mov	r5, r8
   192dc:	add	r3, r3, #16
   192e0:	vmovn.i64	d16, q8
   192e4:	vuzp.16	d16, d17
   192e8:	vmov.32	r4, d16[0]
   192ec:	str	r4, [r5, r1]!
   192f0:	add	r1, r1, #8
   192f4:	vld1.64	{d16-d17}, [r3]
   192f8:	add	r3, r5, #4
   192fc:	cmp	r1, #512	; 0x200
   19300:	vmovn.i64	d16, q8
   19304:	vuzp.16	d16, d17
   19308:	vst1.32	{d16[0]}, [r3]
   1930c:	mov	r3, r2
   19310:	bne	192d4 <ReadInt16Data+0x22ec>
   19314:	ldr	r1, [sp, #28]
   19318:	mov	r2, r6
   1931c:	ldr	r2, [sp, #24]
   19320:	add	r4, r6, #256	; 0x100
   19324:	add	sl, r0, sl
   19328:	add	r8, r8, #512	; 0x200
   1932c:	add	r0, r9, #512	; 0x200
   19330:	add	r1, r1, #256	; 0x100
   19334:	cmp	r4, r2
   19338:	blt	192a0 <ReadInt16Data+0x22b8>
   1933c:	ldr	r7, [sp, #8]
   19340:	cmp	r4, r7
   19344:	bge	1940c <ReadInt16Data+0x2424>
   19348:	ldr	r0, [sp, #36]	; 0x24
   1934c:	ldr	r1, [sp, #32]
   19350:	sub	r8, r7, r4
   19354:	add	r5, sp, #168	; 0xa8
   19358:	mov	r2, r8
   1935c:	ldr	r3, [r0]
   19360:	mov	r0, r5
   19364:	bl	18b8 <fread@plt>
   19368:	mov	lr, r8
   1936c:	mov	r8, sl
   19370:	add	r8, r0, sl
   19374:	cmp	lr, #1
   19378:	blt	194e4 <ReadInt16Data+0x24fc>
   1937c:	mov	r0, #0
   19380:	mov	ip, r6
   19384:	beq	194b0 <ReadInt16Data+0x24c8>
   19388:	bic	r0, lr, #1
   1938c:	mov	r2, #1
   19390:	subs	r1, r0, #2
   19394:	add	r1, r2, r1, lsr #1
   19398:	and	r1, r1, #1
   1939c:	beq	19474 <ReadInt16Data+0x248c>
   193a0:	sub	r3, r7, ip
   193a4:	mov	r6, r5
   193a8:	sub	r3, r3, #256	; 0x100
   193ac:	bic	r3, r3, #1
   193b0:	sub	r3, r3, #2
   193b4:	add	r2, r2, r3, lsr #1
   193b8:	mvn	r7, r3, lsr #1
   193bc:	and	r2, r2, #1
   193c0:	add	r3, r7, r2
   193c4:	mov	r2, #0
   193c8:	mov	r7, #32
   193cc:	vld1.64	{d16-d17}, [r6], r7
   193d0:	add	r5, r5, #16
   193d4:	adds	r3, r3, #2
   193d8:	add	r2, r2, #4
   193dc:	vmovn.i64	d16, q8
   193e0:	vuzp.16	d16, d17
   193e4:	vst1.32	{d16[0]}, [r9]
   193e8:	vld1.64	{d16-d17}, [r5]
   193ec:	add	r5, r9, #4
   193f0:	add	r9, r9, #8
   193f4:	vmovn.i64	d16, q8
   193f8:	vuzp.16	d16, d17
   193fc:	vst1.32	{d16[0]}, [r5]
   19400:	mov	r5, r6
   19404:	bne	193cc <ReadInt16Data+0x23e4>
   19408:	b	19478 <ReadInt16Data+0x2490>
   1940c:	ldr	r0, [sp, #32]
   19410:	mov	r8, sl
   19414:	mov	sl, r0
   19418:	b	194e8 <ReadInt16Data+0x2500>
   1941c:	mov	r1, #0
   19420:	cmp	r2, #0
   19424:	beq	19444 <ReadInt16Data+0x245c>
   19428:	add	r2, sp, #168	; 0xa8
   1942c:	add	r2, r2, r1, lsl #3
   19430:	add	r1, r9, r1, lsl #1
   19434:	vld1.64	{d16-d17}, [r2]
   19438:	vmovn.i64	d16, q8
   1943c:	vuzp.16	d16, d17
   19440:	vst1.32	{d16[0]}, [r1]
   19444:	mov	r7, ip
   19448:	cmp	r0, ip
   1944c:	beq	194e8 <ReadInt16Data+0x2500>
   19450:	add	r1, sp, #168	; 0xa8
   19454:	add	r2, r9, r0, lsl #1
   19458:	add	r1, r1, r0, lsl #3
   1945c:	sub	r0, r7, r0
   19460:	ldrh	r3, [r1], #8
   19464:	subs	r0, r0, #1
   19468:	strh	r3, [r2], #2
   1946c:	bne	19460 <ReadInt16Data+0x2478>
   19470:	b	194e8 <ReadInt16Data+0x2500>
   19474:	mov	r2, #0
   19478:	cmp	r1, #0
   1947c:	beq	194a4 <ReadInt16Data+0x24bc>
   19480:	add	r1, sp, #168	; 0xa8
   19484:	add	r1, r1, r2, lsl #3
   19488:	vld1.64	{d16-d17}, [r1]
   1948c:	add	r1, r2, r4
   19490:	ldr	r2, [sp, #4]
   19494:	add	r1, r2, r1, lsl #1
   19498:	vmovn.i64	d16, q8
   1949c:	vuzp.16	d16, d17
   194a0:	vst1.32	{d16[0]}, [r1]
   194a4:	ldr	r7, [sp, #8]
   194a8:	cmp	lr, r0
   194ac:	beq	194e4 <ReadInt16Data+0x24fc>
   194b0:	ldr	r2, [sp, #28]
   194b4:	ldr	r3, [sp, #4]
   194b8:	add	r1, sp, #168	; 0xa8
   194bc:	add	r1, r1, r0, lsl #3
   194c0:	add	r2, r0, r2
   194c4:	add	r2, r3, r2, lsl #1
   194c8:	sub	r3, r7, ip
   194cc:	sub	r0, r3, r0
   194d0:	sub	r0, r0, #256	; 0x100
   194d4:	ldrh	r3, [r1], #8
   194d8:	subs	r0, r0, #1
   194dc:	strh	r3, [r2], #2
   194e0:	bne	194d4 <ReadInt16Data+0x24ec>
   194e4:	ldr	sl, [sp, #32]
   194e8:	mul	r0, r8, sl
   194ec:	sub	sp, fp, #28
   194f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000194f4 <ReadCompressedInt16Data>:
   194f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194f8:	add	fp, sp, #28
   194fc:	sub	sp, sp, #12
   19500:	mov	r7, r0
   19504:	mov	r0, #0
   19508:	cmp	r1, #0
   1950c:	beq	19520 <ReadCompressedInt16Data+0x2c>
   19510:	cmp	r7, #0
   19514:	movne	r5, r2
   19518:	cmpne	r2, #0
   1951c:	bne	19528 <ReadCompressedInt16Data+0x34>
   19520:	sub	sp, fp, #28
   19524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19528:	ldr	sl, [fp, #8]
   1952c:	mov	r0, r3
   19530:	mov	r4, r3
   19534:	mov	r6, r1
   19538:	bl	1924 <Mat_SizeOf@plt>
   1953c:	mov	r9, r0
   19540:	sub	r0, r4, #1
   19544:	cmp	r0, #12
   19548:	bhi	19a18 <ReadCompressedInt16Data+0x524>
   1954c:	add	r1, pc, #4
   19550:	ldr	r0, [r1, r0, lsl #2]
   19554:	add	pc, r1, r0
   19558:	.word	0x00000034
   1955c:	.word	0x0000006c
   19560:	.word	0x000000a4
   19564:	.word	0x000000ec
   19568:	.word	0x00000134
   1956c:	.word	0x0000017c
   19570:	.word	0x000001c4
   19574:	.word	0x000004c0
   19578:	.word	0x00000214
   1957c:	.word	0x000004c0
   19580:	.word	0x000004c0
   19584:	.word	0x00000264
   19588:	.word	0x000002ac
   1958c:	cmp	sl, #1
   19590:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19594:	mov	r8, sp
   19598:	mov	r4, sl
   1959c:	mov	r0, r7
   195a0:	mov	r1, r6
   195a4:	mov	r2, r8
   195a8:	mov	r3, r9
   195ac:	bl	3238 <InflateData>
   195b0:	ldrsb	r0, [sp]
   195b4:	subs	r4, r4, #1
   195b8:	strh	r0, [r5], #2
   195bc:	bne	1959c <ReadCompressedInt16Data+0xa8>
   195c0:	b	19a18 <ReadCompressedInt16Data+0x524>
   195c4:	cmp	sl, #1
   195c8:	blt	19a18 <ReadCompressedInt16Data+0x524>
   195cc:	mov	r8, sp
   195d0:	mov	r4, sl
   195d4:	mov	r0, r7
   195d8:	mov	r1, r6
   195dc:	mov	r2, r8
   195e0:	mov	r3, r9
   195e4:	bl	3238 <InflateData>
   195e8:	ldrb	r0, [sp]
   195ec:	subs	r4, r4, #1
   195f0:	strh	r0, [r5], #2
   195f4:	bne	195d4 <ReadCompressedInt16Data+0xe0>
   195f8:	b	19a18 <ReadCompressedInt16Data+0x524>
   195fc:	ldr	r0, [r7, #20]
   19600:	cmp	r0, #0
   19604:	beq	1984c <ReadCompressedInt16Data+0x358>
   19608:	cmp	sl, #1
   1960c:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19610:	mov	r8, sp
   19614:	mov	r4, sl
   19618:	mov	r0, r7
   1961c:	mov	r1, r6
   19620:	mov	r2, r8
   19624:	mov	r3, r9
   19628:	bl	3238 <InflateData>
   1962c:	mov	r0, r8
   19630:	bl	1c20 <Mat_int16Swap>
   19634:	strh	r0, [r5], #2
   19638:	subs	r4, r4, #1
   1963c:	bne	19618 <ReadCompressedInt16Data+0x124>
   19640:	b	19a18 <ReadCompressedInt16Data+0x524>
   19644:	ldr	r0, [r7, #20]
   19648:	cmp	r0, #0
   1964c:	beq	19884 <ReadCompressedInt16Data+0x390>
   19650:	cmp	sl, #1
   19654:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19658:	mov	r8, sp
   1965c:	mov	r4, sl
   19660:	mov	r0, r7
   19664:	mov	r1, r6
   19668:	mov	r2, r8
   1966c:	mov	r3, r9
   19670:	bl	3238 <InflateData>
   19674:	mov	r0, r8
   19678:	bl	1c34 <Mat_uint16Swap>
   1967c:	strh	r0, [r5], #2
   19680:	subs	r4, r4, #1
   19684:	bne	19660 <ReadCompressedInt16Data+0x16c>
   19688:	b	19a18 <ReadCompressedInt16Data+0x524>
   1968c:	ldr	r0, [r7, #20]
   19690:	cmp	r0, #0
   19694:	beq	198bc <ReadCompressedInt16Data+0x3c8>
   19698:	cmp	sl, #1
   1969c:	blt	19a18 <ReadCompressedInt16Data+0x524>
   196a0:	mov	r8, sp
   196a4:	mov	r4, sl
   196a8:	mov	r0, r7
   196ac:	mov	r1, r6
   196b0:	mov	r2, r8
   196b4:	mov	r3, r9
   196b8:	bl	3238 <InflateData>
   196bc:	mov	r0, r8
   196c0:	bl	1bf8 <Mat_int32Swap>
   196c4:	strh	r0, [r5], #2
   196c8:	subs	r4, r4, #1
   196cc:	bne	196a8 <ReadCompressedInt16Data+0x1b4>
   196d0:	b	19a18 <ReadCompressedInt16Data+0x524>
   196d4:	ldr	r0, [r7, #20]
   196d8:	cmp	r0, #0
   196dc:	beq	198f4 <ReadCompressedInt16Data+0x400>
   196e0:	cmp	sl, #1
   196e4:	blt	19a18 <ReadCompressedInt16Data+0x524>
   196e8:	mov	r8, sp
   196ec:	mov	r4, sl
   196f0:	mov	r0, r7
   196f4:	mov	r1, r6
   196f8:	mov	r2, r8
   196fc:	mov	r3, r9
   19700:	bl	3238 <InflateData>
   19704:	mov	r0, r8
   19708:	bl	1c0c <Mat_uint32Swap>
   1970c:	strh	r0, [r5], #2
   19710:	subs	r4, r4, #1
   19714:	bne	196f0 <ReadCompressedInt16Data+0x1fc>
   19718:	b	19a18 <ReadCompressedInt16Data+0x524>
   1971c:	ldr	r0, [r7, #20]
   19720:	cmp	r0, #0
   19724:	beq	1992c <ReadCompressedInt16Data+0x438>
   19728:	cmp	sl, #1
   1972c:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19730:	mov	r8, sp
   19734:	mov	r4, sl
   19738:	mov	r0, r7
   1973c:	mov	r1, r6
   19740:	mov	r2, r8
   19744:	mov	r3, r9
   19748:	bl	3238 <InflateData>
   1974c:	mov	r0, r8
   19750:	bl	1c4c <Mat_floatSwap>
   19754:	vcvt.s32.f32	s0, s0
   19758:	subs	r4, r4, #1
   1975c:	vmov	r0, s0
   19760:	strh	r0, [r5], #2
   19764:	bne	19738 <ReadCompressedInt16Data+0x244>
   19768:	b	19a18 <ReadCompressedInt16Data+0x524>
   1976c:	ldr	r0, [r7, #20]
   19770:	cmp	r0, #0
   19774:	beq	1996c <ReadCompressedInt16Data+0x478>
   19778:	cmp	sl, #1
   1977c:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19780:	mov	r8, sp
   19784:	mov	r4, sl
   19788:	mov	r0, r7
   1978c:	mov	r1, r6
   19790:	mov	r2, r8
   19794:	mov	r3, r9
   19798:	bl	3238 <InflateData>
   1979c:	mov	r0, r8
   197a0:	bl	1c90 <Mat_doubleSwap>
   197a4:	vcvt.s32.f64	s0, d0
   197a8:	subs	r4, r4, #1
   197ac:	vmov	r0, s0
   197b0:	strh	r0, [r5], #2
   197b4:	bne	19788 <ReadCompressedInt16Data+0x294>
   197b8:	b	19a18 <ReadCompressedInt16Data+0x524>
   197bc:	ldr	r0, [r7, #20]
   197c0:	cmp	r0, #0
   197c4:	beq	199ac <ReadCompressedInt16Data+0x4b8>
   197c8:	cmp	sl, #1
   197cc:	blt	19a18 <ReadCompressedInt16Data+0x524>
   197d0:	mov	r8, sp
   197d4:	mov	r4, sl
   197d8:	mov	r0, r7
   197dc:	mov	r1, r6
   197e0:	mov	r2, r8
   197e4:	mov	r3, r9
   197e8:	bl	3238 <InflateData>
   197ec:	mov	r0, r8
   197f0:	bl	1b84 <Mat_int64Swap>
   197f4:	strh	r0, [r5], #2
   197f8:	subs	r4, r4, #1
   197fc:	bne	197d8 <ReadCompressedInt16Data+0x2e4>
   19800:	b	19a18 <ReadCompressedInt16Data+0x524>
   19804:	ldr	r0, [r7, #20]
   19808:	cmp	r0, #0
   1980c:	beq	199e4 <ReadCompressedInt16Data+0x4f0>
   19810:	cmp	sl, #1
   19814:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19818:	mov	r8, sp
   1981c:	mov	r4, sl
   19820:	mov	r0, r7
   19824:	mov	r1, r6
   19828:	mov	r2, r8
   1982c:	mov	r3, r9
   19830:	bl	3238 <InflateData>
   19834:	mov	r0, r8
   19838:	bl	1bd4 <Mat_uint64Swap>
   1983c:	strh	r0, [r5], #2
   19840:	subs	r4, r4, #1
   19844:	bne	19820 <ReadCompressedInt16Data+0x32c>
   19848:	b	19a18 <ReadCompressedInt16Data+0x524>
   1984c:	cmp	sl, #1
   19850:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19854:	mov	r8, sp
   19858:	mov	r4, sl
   1985c:	mov	r0, r7
   19860:	mov	r1, r6
   19864:	mov	r2, r8
   19868:	mov	r3, r9
   1986c:	bl	3238 <InflateData>
   19870:	ldrh	r0, [sp]
   19874:	subs	r4, r4, #1
   19878:	strh	r0, [r5], #2
   1987c:	bne	1985c <ReadCompressedInt16Data+0x368>
   19880:	b	19a18 <ReadCompressedInt16Data+0x524>
   19884:	cmp	sl, #1
   19888:	blt	19a18 <ReadCompressedInt16Data+0x524>
   1988c:	mov	r8, sp
   19890:	mov	r4, sl
   19894:	mov	r0, r7
   19898:	mov	r1, r6
   1989c:	mov	r2, r8
   198a0:	mov	r3, r9
   198a4:	bl	3238 <InflateData>
   198a8:	ldrh	r0, [sp]
   198ac:	subs	r4, r4, #1
   198b0:	strh	r0, [r5], #2
   198b4:	bne	19894 <ReadCompressedInt16Data+0x3a0>
   198b8:	b	19a18 <ReadCompressedInt16Data+0x524>
   198bc:	cmp	sl, #1
   198c0:	blt	19a18 <ReadCompressedInt16Data+0x524>
   198c4:	mov	r8, sp
   198c8:	mov	r4, sl
   198cc:	mov	r0, r7
   198d0:	mov	r1, r6
   198d4:	mov	r2, r8
   198d8:	mov	r3, r9
   198dc:	bl	3238 <InflateData>
   198e0:	ldr	r0, [sp]
   198e4:	subs	r4, r4, #1
   198e8:	strh	r0, [r5], #2
   198ec:	bne	198cc <ReadCompressedInt16Data+0x3d8>
   198f0:	b	19a18 <ReadCompressedInt16Data+0x524>
   198f4:	cmp	sl, #1
   198f8:	blt	19a18 <ReadCompressedInt16Data+0x524>
   198fc:	mov	r8, sp
   19900:	mov	r4, sl
   19904:	mov	r0, r7
   19908:	mov	r1, r6
   1990c:	mov	r2, r8
   19910:	mov	r3, r9
   19914:	bl	3238 <InflateData>
   19918:	ldr	r0, [sp]
   1991c:	subs	r4, r4, #1
   19920:	strh	r0, [r5], #2
   19924:	bne	19904 <ReadCompressedInt16Data+0x410>
   19928:	b	19a18 <ReadCompressedInt16Data+0x524>
   1992c:	cmp	sl, #1
   19930:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19934:	mov	r8, sp
   19938:	mov	r4, sl
   1993c:	mov	r0, r7
   19940:	mov	r1, r6
   19944:	mov	r2, r8
   19948:	mov	r3, r9
   1994c:	bl	3238 <InflateData>
   19950:	vldr	s0, [sp]
   19954:	subs	r4, r4, #1
   19958:	vcvt.s32.f32	s0, s0
   1995c:	vmov	r0, s0
   19960:	strh	r0, [r5], #2
   19964:	bne	1993c <ReadCompressedInt16Data+0x448>
   19968:	b	19a18 <ReadCompressedInt16Data+0x524>
   1996c:	cmp	sl, #1
   19970:	blt	19a18 <ReadCompressedInt16Data+0x524>
   19974:	mov	r8, sp
   19978:	mov	r4, sl
   1997c:	mov	r0, r7
   19980:	mov	r1, r6
   19984:	mov	r2, r8
   19988:	mov	r3, r9
   1998c:	bl	3238 <InflateData>
   19990:	vldr	d16, [sp]
   19994:	subs	r4, r4, #1
   19998:	vcvt.s32.f64	s0, d16
   1999c:	vmov	r0, s0
   199a0:	strh	r0, [r5], #2
   199a4:	bne	1997c <ReadCompressedInt16Data+0x488>
   199a8:	b	19a18 <ReadCompressedInt16Data+0x524>
   199ac:	cmp	sl, #1
   199b0:	blt	19a18 <ReadCompressedInt16Data+0x524>
   199b4:	mov	r8, sp
   199b8:	mov	r4, sl
   199bc:	mov	r0, r7
   199c0:	mov	r1, r6
   199c4:	mov	r2, r8
   199c8:	mov	r3, r9
   199cc:	bl	3238 <InflateData>
   199d0:	ldrh	r0, [sp]
   199d4:	subs	r4, r4, #1
   199d8:	strh	r0, [r5], #2
   199dc:	bne	199bc <ReadCompressedInt16Data+0x4c8>
   199e0:	b	19a18 <ReadCompressedInt16Data+0x524>
   199e4:	cmp	sl, #1
   199e8:	blt	19a18 <ReadCompressedInt16Data+0x524>
   199ec:	mov	r8, sp
   199f0:	mov	r4, sl
   199f4:	mov	r0, r7
   199f8:	mov	r1, r6
   199fc:	mov	r2, r8
   19a00:	mov	r3, r9
   19a04:	bl	3238 <InflateData>
   19a08:	ldrh	r0, [sp]
   19a0c:	subs	r4, r4, #1
   19a10:	strh	r0, [r5], #2
   19a14:	bne	199f4 <ReadCompressedInt16Data+0x500>
   19a18:	mul	r0, r9, sl
   19a1c:	sub	sp, fp, #28
   19a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019a24 <ReadUInt16Data>:
   19a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a28:	add	fp, sp, #28
   19a2c:	sub	sp, sp, #172	; 0xac
   19a30:	sub	sp, sp, #2048	; 0x800
   19a34:	mov	r4, r0
   19a38:	mov	r0, #0
   19a3c:	cmp	r4, #0
   19a40:	movne	r9, r1
   19a44:	cmpne	r1, #0
   19a48:	bne	19a54 <ReadUInt16Data+0x30>
   19a4c:	sub	sp, fp, #28
   19a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a54:	ldr	r1, [r4]
   19a58:	cmp	r1, #0
   19a5c:	beq	19a4c <ReadUInt16Data+0x28>
   19a60:	mov	r0, r2
   19a64:	mov	r7, r3
   19a68:	mov	r5, r2
   19a6c:	bl	1924 <Mat_SizeOf@plt>
   19a70:	mov	sl, r0
   19a74:	sub	r0, r5, #1
   19a78:	mov	r8, #0
   19a7c:	str	r4, [sp, #36]	; 0x24
   19a80:	cmp	r0, #11
   19a84:	bhi	1bad0 <ReadUInt16Data+0x20ac>
   19a88:	add	r1, pc, #4
   19a8c:	ldr	r0, [r1, r0, lsl #2]
   19a90:	add	pc, r1, r0
   19a94:	.word	0x00000030
   19a98:	.word	0x000000f8
   19a9c:	.word	0x000001c0
   19aa0:	.word	0x00000214
   19aa4:	.word	0x00000268
   19aa8:	.word	0x000002bc
   19aac:	.word	0x00000310
   19ab0:	.word	0x0000203c
   19ab4:	.word	0x0000036c
   19ab8:	.word	0x0000203c
   19abc:	.word	0x0000203c
   19ac0:	.word	0x000003c8
   19ac4:	cmp	r7, #256	; 0x100
   19ac8:	bgt	19ebc <ReadUInt16Data+0x498>
   19acc:	ldr	r3, [r4]
   19ad0:	add	r4, sp, #168	; 0xa8
   19ad4:	mov	r1, sl
   19ad8:	mov	r2, r7
   19adc:	mov	r0, r4
   19ae0:	bl	18b8 <fread@plt>
   19ae4:	mov	r8, r0
   19ae8:	cmp	r7, #1
   19aec:	blt	1bf24 <ReadUInt16Data+0x2500>
   19af0:	mov	lr, #0
   19af4:	cmp	r7, #8
   19af8:	bcc	1b5a8 <ReadUInt16Data+0x1b84>
   19afc:	bic	lr, r7, #7
   19b00:	mov	r2, #1
   19b04:	str	sl, [sp, #32]
   19b08:	mov	sl, r9
   19b0c:	str	r7, [sp, #8]
   19b10:	str	r8, [sp, #28]
   19b14:	subs	r1, lr, #8
   19b18:	add	r1, r2, r1, lsr #3
   19b1c:	and	ip, r1, #1
   19b20:	beq	1b55c <ReadUInt16Data+0x1b38>
   19b24:	sub	r3, r1, ip
   19b28:	mov	r1, #0
   19b2c:	add	r8, sp, #48	; 0x30
   19b30:	mov	r9, #32
   19b34:	add	r5, sp, #56	; 0x38
   19b38:	mov	r2, sl
   19b3c:	ldr	r0, [r4, r1]
   19b40:	subs	r3, r3, #2
   19b44:	str	r0, [sp, #48]	; 0x30
   19b48:	add	r0, r4, r1
   19b4c:	add	r1, r1, #16
   19b50:	ldr	r7, [r0, #4]
   19b54:	str	r7, [sp, #52]	; 0x34
   19b58:	add	r7, r2, #16
   19b5c:	vld1.8	{d16}, [r8 :64]
   19b60:	vmovl.s8	q8, d16
   19b64:	vst1.16	{d16-d17}, [r2], r9
   19b68:	ldr	r6, [r0, #8]
   19b6c:	ldr	r0, [r0, #12]
   19b70:	str	r6, [sp, #56]	; 0x38
   19b74:	str	r0, [sp, #60]	; 0x3c
   19b78:	vld1.8	{d16}, [r5 :64]
   19b7c:	vmovl.s8	q8, d16
   19b80:	vst1.16	{d16-d17}, [r7]
   19b84:	bne	19b3c <ReadUInt16Data+0x118>
   19b88:	b	1b560 <ReadUInt16Data+0x1b3c>
   19b8c:	cmp	r7, #256	; 0x100
   19b90:	bgt	1a09c <ReadUInt16Data+0x678>
   19b94:	ldr	r3, [r4]
   19b98:	add	r4, sp, #168	; 0xa8
   19b9c:	mov	r1, sl
   19ba0:	mov	r2, r7
   19ba4:	mov	r0, r4
   19ba8:	bl	18b8 <fread@plt>
   19bac:	mov	r8, r0
   19bb0:	cmp	r7, #1
   19bb4:	blt	1bf24 <ReadUInt16Data+0x2500>
   19bb8:	mov	lr, #0
   19bbc:	cmp	r7, #8
   19bc0:	bcc	1b614 <ReadUInt16Data+0x1bf0>
   19bc4:	bic	lr, r7, #7
   19bc8:	mov	r2, #1
   19bcc:	str	sl, [sp, #32]
   19bd0:	mov	sl, r9
   19bd4:	str	r8, [sp, #28]
   19bd8:	str	r7, [sp, #8]
   19bdc:	subs	r1, lr, #8
   19be0:	add	r1, r2, r1, lsr #3
   19be4:	and	ip, r1, #1
   19be8:	beq	1b5c8 <ReadUInt16Data+0x1ba4>
   19bec:	sub	r3, r1, ip
   19bf0:	mov	r1, #0
   19bf4:	add	r8, sp, #112	; 0x70
   19bf8:	mov	r9, #32
   19bfc:	add	r5, sp, #120	; 0x78
   19c00:	mov	r2, sl
   19c04:	ldr	r0, [r4, r1]
   19c08:	subs	r3, r3, #2
   19c0c:	str	r0, [sp, #112]	; 0x70
   19c10:	add	r0, r4, r1
   19c14:	add	r1, r1, #16
   19c18:	ldr	r7, [r0, #4]
   19c1c:	str	r7, [sp, #116]	; 0x74
   19c20:	add	r7, r2, #16
   19c24:	vld1.8	{d16}, [r8 :64]
   19c28:	vmovl.u8	q8, d16
   19c2c:	vst1.16	{d16-d17}, [r2], r9
   19c30:	ldr	r6, [r0, #8]
   19c34:	ldr	r0, [r0, #12]
   19c38:	str	r6, [sp, #120]	; 0x78
   19c3c:	str	r0, [sp, #124]	; 0x7c
   19c40:	vld1.8	{d16}, [r5 :64]
   19c44:	vmovl.u8	q8, d16
   19c48:	vst1.16	{d16-d17}, [r7]
   19c4c:	bne	19c04 <ReadUInt16Data+0x1e0>
   19c50:	b	1b5cc <ReadUInt16Data+0x1ba8>
   19c54:	ldr	r0, [r4, #20]
   19c58:	cmp	r0, #0
   19c5c:	beq	1a280 <ReadUInt16Data+0x85c>
   19c60:	cmp	r7, #256	; 0x100
   19c64:	bgt	1a690 <ReadUInt16Data+0xc6c>
   19c68:	ldr	r3, [r4]
   19c6c:	add	r4, sp, #168	; 0xa8
   19c70:	mov	r1, sl
   19c74:	mov	r2, r7
   19c78:	mov	r0, r4
   19c7c:	bl	18b8 <fread@plt>
   19c80:	mov	r8, r0
   19c84:	cmp	r7, #1
   19c88:	blt	1bf24 <ReadUInt16Data+0x2500>
   19c8c:	mov	r0, r4
   19c90:	bl	1c20 <Mat_int16Swap>
   19c94:	strh	r0, [r9], #2
   19c98:	add	r4, r4, #2
   19c9c:	subs	r7, r7, #1
   19ca0:	bne	19c8c <ReadUInt16Data+0x268>
   19ca4:	b	1bf24 <ReadUInt16Data+0x2500>
   19ca8:	ldr	r0, [r4, #20]
   19cac:	cmp	r0, #0
   19cb0:	beq	1a324 <ReadUInt16Data+0x900>
   19cb4:	cmp	r7, #256	; 0x100
   19cb8:	bgt	1a770 <ReadUInt16Data+0xd4c>
   19cbc:	ldr	r3, [r4]
   19cc0:	add	r4, sp, #168	; 0xa8
   19cc4:	mov	r1, sl
   19cc8:	mov	r2, r7
   19ccc:	mov	r0, r4
   19cd0:	bl	18b8 <fread@plt>
   19cd4:	mov	r8, r0
   19cd8:	cmp	r7, #1
   19cdc:	blt	1bf24 <ReadUInt16Data+0x2500>
   19ce0:	mov	r0, r4
   19ce4:	bl	1c34 <Mat_uint16Swap>
   19ce8:	strh	r0, [r9], #2
   19cec:	add	r4, r4, #2
   19cf0:	subs	r7, r7, #1
   19cf4:	bne	19ce0 <ReadUInt16Data+0x2bc>
   19cf8:	b	1bf24 <ReadUInt16Data+0x2500>
   19cfc:	ldr	r0, [r4, #20]
   19d00:	cmp	r0, #0
   19d04:	beq	1a360 <ReadUInt16Data+0x93c>
   19d08:	cmp	r7, #256	; 0x100
   19d0c:	bgt	1a850 <ReadUInt16Data+0xe2c>
   19d10:	ldr	r3, [r4]
   19d14:	add	r4, sp, #168	; 0xa8
   19d18:	mov	r1, sl
   19d1c:	mov	r2, r7
   19d20:	mov	r0, r4
   19d24:	bl	18b8 <fread@plt>
   19d28:	mov	r8, r0
   19d2c:	cmp	r7, #1
   19d30:	blt	1bf24 <ReadUInt16Data+0x2500>
   19d34:	mov	r0, r4
   19d38:	bl	1bf8 <Mat_int32Swap>
   19d3c:	strh	r0, [r9], #2
   19d40:	add	r4, r4, #4
   19d44:	subs	r7, r7, #1
   19d48:	bne	19d34 <ReadUInt16Data+0x310>
   19d4c:	b	1bf24 <ReadUInt16Data+0x2500>
   19d50:	ldr	r0, [r4, #20]
   19d54:	cmp	r0, #0
   19d58:	beq	1a404 <ReadUInt16Data+0x9e0>
   19d5c:	cmp	r7, #256	; 0x100
   19d60:	bgt	1a930 <ReadUInt16Data+0xf0c>
   19d64:	ldr	r3, [r4]
   19d68:	add	r4, sp, #168	; 0xa8
   19d6c:	mov	r1, sl
   19d70:	mov	r2, r7
   19d74:	mov	r0, r4
   19d78:	bl	18b8 <fread@plt>
   19d7c:	mov	r8, r0
   19d80:	cmp	r7, #1
   19d84:	blt	1bf24 <ReadUInt16Data+0x2500>
   19d88:	mov	r0, r4
   19d8c:	bl	1c0c <Mat_uint32Swap>
   19d90:	strh	r0, [r9], #2
   19d94:	add	r4, r4, #4
   19d98:	subs	r7, r7, #1
   19d9c:	bne	19d88 <ReadUInt16Data+0x364>
   19da0:	b	1bf24 <ReadUInt16Data+0x2500>
   19da4:	ldr	r0, [r4, #20]
   19da8:	cmp	r0, #0
   19dac:	beq	1a4a8 <ReadUInt16Data+0xa84>
   19db0:	cmp	r7, #256	; 0x100
   19db4:	bgt	1aa10 <ReadUInt16Data+0xfec>
   19db8:	ldr	r3, [r4]
   19dbc:	add	r4, sp, #168	; 0xa8
   19dc0:	mov	r1, sl
   19dc4:	mov	r2, r7
   19dc8:	mov	r0, r4
   19dcc:	bl	18b8 <fread@plt>
   19dd0:	mov	r8, r0
   19dd4:	cmp	r7, #1
   19dd8:	blt	1bf24 <ReadUInt16Data+0x2500>
   19ddc:	mov	r0, r4
   19de0:	bl	1c4c <Mat_floatSwap>
   19de4:	vcvt.u32.f32	s0, s0
   19de8:	add	r4, r4, #4
   19dec:	subs	r7, r7, #1
   19df0:	vmov	r0, s0
   19df4:	strh	r0, [r9], #2
   19df8:	bne	19ddc <ReadUInt16Data+0x3b8>
   19dfc:	b	1bf24 <ReadUInt16Data+0x2500>
   19e00:	ldr	r0, [r4, #20]
   19e04:	cmp	r0, #0
   19e08:	beq	1a554 <ReadUInt16Data+0xb30>
   19e0c:	cmp	r7, #256	; 0x100
   19e10:	bgt	1ab04 <ReadUInt16Data+0x10e0>
   19e14:	ldr	r3, [r4]
   19e18:	add	r4, sp, #168	; 0xa8
   19e1c:	mov	r1, sl
   19e20:	mov	r2, r7
   19e24:	mov	r0, r4
   19e28:	bl	18b8 <fread@plt>
   19e2c:	mov	r8, r0
   19e30:	cmp	r7, #1
   19e34:	blt	1bf24 <ReadUInt16Data+0x2500>
   19e38:	mov	r0, r4
   19e3c:	bl	1c90 <Mat_doubleSwap>
   19e40:	vcvt.u32.f64	s0, d0
   19e44:	add	r4, r4, #8
   19e48:	subs	r7, r7, #1
   19e4c:	vmov	r0, s0
   19e50:	strh	r0, [r9], #2
   19e54:	bne	19e38 <ReadUInt16Data+0x414>
   19e58:	b	1bf24 <ReadUInt16Data+0x2500>
   19e5c:	ldr	r0, [r4, #20]
   19e60:	cmp	r0, #0
   19e64:	beq	1a5e8 <ReadUInt16Data+0xbc4>
   19e68:	cmp	r7, #256	; 0x100
   19e6c:	bgt	1abf8 <ReadUInt16Data+0x11d4>
   19e70:	ldr	r3, [r4]
   19e74:	add	r6, sp, #168	; 0xa8
   19e78:	mov	r1, sl
   19e7c:	mov	r2, r7
   19e80:	mov	r0, r6
   19e84:	bl	18b8 <fread@plt>
   19e88:	mov	r8, r0
   19e8c:	cmp	r7, #1
   19e90:	blt	1bad0 <ReadUInt16Data+0x20ac>
   19e94:	str	r5, [sp, #16]
   19e98:	mov	r4, r9
   19e9c:	mov	r5, r7
   19ea0:	mov	r0, r6
   19ea4:	bl	1b84 <Mat_int64Swap>
   19ea8:	strh	r0, [r4], #2
   19eac:	add	r6, r6, #8
   19eb0:	subs	r5, r5, #1
   19eb4:	bne	19ea0 <ReadUInt16Data+0x47c>
   19eb8:	b	1bac8 <ReadUInt16Data+0x20a4>
   19ebc:	sub	r1, r7, #256	; 0x100
   19ec0:	str	sl, [sp, #32]
   19ec4:	str	r7, [sp, #8]
   19ec8:	mov	sl, r9
   19ecc:	add	r0, r9, #512	; 0x200
   19ed0:	mov	r2, #0
   19ed4:	mov	r5, #0
   19ed8:	add	r6, sp, #168	; 0xa8
   19edc:	add	r9, sp, #88	; 0x58
   19ee0:	mov	r8, #32
   19ee4:	add	r7, sp, #96	; 0x60
   19ee8:	str	r1, [sp, #12]
   19eec:	mov	r1, #256	; 0x100
   19ef0:	str	sl, [sp, #4]
   19ef4:	str	r2, [sp, #28]
   19ef8:	add	r2, sp, #16
   19efc:	stm	r2, {r0, r1, r5}
   19f00:	ldr	r0, [sp, #36]	; 0x24
   19f04:	ldr	r1, [sp, #32]
   19f08:	mov	r2, #256	; 0x100
   19f0c:	ldr	r3, [r0]
   19f10:	mov	r0, r6
   19f14:	bl	18b8 <fread@plt>
   19f18:	mov	r1, sl
   19f1c:	mov	r2, #0
   19f20:	ldr	r3, [r6, r2]
   19f24:	str	r3, [sp, #88]	; 0x58
   19f28:	add	r3, r6, r2
   19f2c:	add	r2, r2, #16
   19f30:	ldr	r5, [r3, #4]
   19f34:	cmp	r2, #256	; 0x100
   19f38:	str	r5, [sp, #92]	; 0x5c
   19f3c:	add	r5, r1, #16
   19f40:	vld1.8	{d16}, [r9 :64]
   19f44:	vmovl.s8	q8, d16
   19f48:	vst1.16	{d16-d17}, [r1], r8
   19f4c:	ldr	r4, [r3, #8]
   19f50:	ldr	r3, [r3, #12]
   19f54:	str	r4, [sp, #96]	; 0x60
   19f58:	str	r3, [sp, #100]	; 0x64
   19f5c:	vld1.8	{d16}, [r7 :64]
   19f60:	vmovl.s8	q8, d16
   19f64:	vst1.16	{d16-d17}, [r5]
   19f68:	bne	19f20 <ReadUInt16Data+0x4fc>
   19f6c:	ldr	r1, [sp, #28]
   19f70:	ldr	r2, [sp, #24]
   19f74:	add	sl, sl, #512	; 0x200
   19f78:	add	r1, r0, r1
   19f7c:	ldr	r0, [sp, #16]
   19f80:	add	r5, r2, #256	; 0x100
   19f84:	ldr	r2, [sp, #12]
   19f88:	str	r1, [sp, #28]
   19f8c:	ldr	r1, [sp, #20]
   19f90:	add	r0, r0, #512	; 0x200
   19f94:	cmp	r5, r2
   19f98:	add	r1, r1, #256	; 0x100
   19f9c:	blt	19ef8 <ReadUInt16Data+0x4d4>
   19fa0:	ldr	r4, [sp, #8]
   19fa4:	cmp	r5, r4
   19fa8:	bge	1a274 <ReadUInt16Data+0x850>
   19fac:	ldr	r0, [sp, #36]	; 0x24
   19fb0:	ldr	sl, [sp, #32]
   19fb4:	sub	r7, r4, r5
   19fb8:	add	r6, sp, #168	; 0xa8
   19fbc:	mov	r2, r7
   19fc0:	ldr	r3, [r0]
   19fc4:	mov	r0, r6
   19fc8:	mov	r1, sl
   19fcc:	bl	18b8 <fread@plt>
   19fd0:	ldr	r8, [sp, #28]
   19fd4:	cmp	r7, #1
   19fd8:	add	r8, r0, r8
   19fdc:	blt	1bf24 <ReadUInt16Data+0x2500>
   19fe0:	ldr	r3, [sp, #4]
   19fe4:	mov	lr, #0
   19fe8:	cmp	r7, #8
   19fec:	bcc	1b68c <ReadUInt16Data+0x1c68>
   19ff0:	bic	lr, r7, #7
   19ff4:	mov	r2, #1
   19ff8:	mov	sl, r8
   19ffc:	str	r7, [sp, #36]	; 0x24
   1a000:	subs	r1, lr, #8
   1a004:	add	r1, r2, r1, lsr #3
   1a008:	and	r0, r1, #1
   1a00c:	str	r0, [sp, #28]
   1a010:	beq	1b634 <ReadUInt16Data+0x1c10>
   1a014:	ldr	r0, [sp, #24]
   1a018:	ldr	ip, [sp, #16]
   1a01c:	add	r8, sp, #72	; 0x48
   1a020:	mov	r9, #32
   1a024:	sub	r1, r4, r0
   1a028:	add	r4, sp, #80	; 0x50
   1a02c:	sub	r1, r1, #256	; 0x100
   1a030:	bic	r1, r1, #7
   1a034:	sub	r1, r1, #8
   1a038:	mvn	r3, r1, lsr #3
   1a03c:	add	r1, r2, r1, lsr #3
   1a040:	mov	r2, #0
   1a044:	and	r1, r1, #1
   1a048:	add	r3, r3, r1
   1a04c:	ldr	r0, [r6, r2]
   1a050:	adds	r3, r3, #2
   1a054:	str	r0, [sp, #72]	; 0x48
   1a058:	add	r0, r6, r2
   1a05c:	add	r2, r2, #16
   1a060:	ldr	r7, [r0, #4]
   1a064:	str	r7, [sp, #76]	; 0x4c
   1a068:	add	r7, ip, #16
   1a06c:	vld1.8	{d16}, [r8 :64]
   1a070:	vmovl.s8	q8, d16
   1a074:	vst1.16	{d16-d17}, [ip], r9
   1a078:	ldr	r1, [r0, #8]
   1a07c:	ldr	r0, [r0, #12]
   1a080:	str	r1, [sp, #80]	; 0x50
   1a084:	str	r0, [sp, #84]	; 0x54
   1a088:	vld1.8	{d16}, [r4 :64]
   1a08c:	vmovl.s8	q8, d16
   1a090:	vst1.16	{d16-d17}, [r7]
   1a094:	bne	1a04c <ReadUInt16Data+0x628>
   1a098:	b	1b638 <ReadUInt16Data+0x1c14>
   1a09c:	sub	r1, r7, #256	; 0x100
   1a0a0:	str	sl, [sp, #32]
   1a0a4:	mov	r2, #0
   1a0a8:	add	r0, r9, #512	; 0x200
   1a0ac:	mov	r4, #0
   1a0b0:	add	r6, sp, #168	; 0xa8
   1a0b4:	add	r8, sp, #152	; 0x98
   1a0b8:	mov	r5, #32
   1a0bc:	add	sl, sp, #160	; 0xa0
   1a0c0:	str	r7, [sp, #8]
   1a0c4:	str	r9, [sp, #4]
   1a0c8:	str	r1, [sp, #12]
   1a0cc:	mov	r1, #256	; 0x100
   1a0d0:	str	r2, [sp, #28]
   1a0d4:	str	r0, [sp, #16]
   1a0d8:	ldr	r0, [sp, #36]	; 0x24
   1a0dc:	str	r1, [sp, #24]
   1a0e0:	ldr	r1, [sp, #32]
   1a0e4:	mov	r2, #256	; 0x100
   1a0e8:	str	r4, [sp, #20]
   1a0ec:	ldr	r3, [r0]
   1a0f0:	mov	r0, r6
   1a0f4:	bl	18b8 <fread@plt>
   1a0f8:	mov	r1, r9
   1a0fc:	mov	r2, #0
   1a100:	ldr	r3, [r6, r2]
   1a104:	str	r3, [sp, #152]	; 0x98
   1a108:	add	r3, r6, r2
   1a10c:	add	r2, r2, #16
   1a110:	ldr	r4, [r3, #4]
   1a114:	cmp	r2, #256	; 0x100
   1a118:	str	r4, [sp, #156]	; 0x9c
   1a11c:	add	r4, r1, #16
   1a120:	vld1.8	{d16}, [r8 :64]
   1a124:	vmovl.u8	q8, d16
   1a128:	vst1.16	{d16-d17}, [r1], r5
   1a12c:	ldr	r7, [r3, #8]
   1a130:	ldr	r3, [r3, #12]
   1a134:	str	r7, [sp, #160]	; 0xa0
   1a138:	str	r3, [sp, #164]	; 0xa4
   1a13c:	vld1.8	{d16}, [sl :64]
   1a140:	vmovl.u8	q8, d16
   1a144:	vst1.16	{d16-d17}, [r4]
   1a148:	bne	1a100 <ReadUInt16Data+0x6dc>
   1a14c:	ldr	r1, [sp, #28]
   1a150:	ldr	r7, [sp, #20]
   1a154:	ldr	r2, [sp, #12]
   1a158:	add	r9, r9, #512	; 0x200
   1a15c:	add	r1, r0, r1
   1a160:	ldr	r0, [sp, #16]
   1a164:	add	r4, r7, #256	; 0x100
   1a168:	str	r1, [sp, #28]
   1a16c:	ldr	r1, [sp, #24]
   1a170:	cmp	r4, r2
   1a174:	add	r0, r0, #512	; 0x200
   1a178:	add	r1, r1, #256	; 0x100
   1a17c:	blt	1a0d4 <ReadUInt16Data+0x6b0>
   1a180:	ldr	r5, [sp, #8]
   1a184:	cmp	r4, r5
   1a188:	bge	1a274 <ReadUInt16Data+0x850>
   1a18c:	ldr	r0, [sp, #36]	; 0x24
   1a190:	ldr	sl, [sp, #32]
   1a194:	sub	r6, r5, r4
   1a198:	add	r9, sp, #168	; 0xa8
   1a19c:	mov	r2, r6
   1a1a0:	ldr	r3, [r0]
   1a1a4:	mov	r0, r9
   1a1a8:	mov	r1, sl
   1a1ac:	bl	18b8 <fread@plt>
   1a1b0:	ldr	r8, [sp, #28]
   1a1b4:	cmp	r6, #1
   1a1b8:	add	r8, r0, r8
   1a1bc:	blt	1bf24 <ReadUInt16Data+0x2500>
   1a1c0:	ldr	r3, [sp, #4]
   1a1c4:	mov	lr, #0
   1a1c8:	cmp	r6, #8
   1a1cc:	bcc	1b718 <ReadUInt16Data+0x1cf4>
   1a1d0:	bic	lr, r6, #7
   1a1d4:	mov	r1, #1
   1a1d8:	str	r8, [sp, #28]
   1a1dc:	str	r6, [sp, #36]	; 0x24
   1a1e0:	subs	r2, lr, #8
   1a1e4:	add	r2, r1, r2, lsr #3
   1a1e8:	and	ip, r2, #1
   1a1ec:	beq	1b6c0 <ReadUInt16Data+0x1c9c>
   1a1f0:	sub	r2, r5, r7
   1a1f4:	ldr	sl, [sp, #16]
   1a1f8:	add	r8, sp, #136	; 0x88
   1a1fc:	mov	r6, #32
   1a200:	sub	r2, r2, #256	; 0x100
   1a204:	bic	r2, r2, #7
   1a208:	sub	r2, r2, #8
   1a20c:	add	r1, r1, r2, lsr #3
   1a210:	mvn	r3, r2, lsr #3
   1a214:	mov	r2, #0
   1a218:	and	r1, r1, #1
   1a21c:	add	r3, r3, r1
   1a220:	add	r1, sp, #144	; 0x90
   1a224:	ldr	r0, [r9, r2]
   1a228:	adds	r3, r3, #2
   1a22c:	str	r0, [sp, #136]	; 0x88
   1a230:	add	r0, r9, r2
   1a234:	add	r2, r2, #16
   1a238:	ldr	r7, [r0, #4]
   1a23c:	str	r7, [sp, #140]	; 0x8c
   1a240:	add	r7, sl, #16
   1a244:	vld1.8	{d16}, [r8 :64]
   1a248:	vmovl.u8	q8, d16
   1a24c:	vst1.16	{d16-d17}, [sl], r6
   1a250:	ldr	r5, [r0, #8]
   1a254:	ldr	r0, [r0, #12]
   1a258:	str	r5, [sp, #144]	; 0x90
   1a25c:	str	r0, [sp, #148]	; 0x94
   1a260:	vld1.8	{d16}, [r1 :64]
   1a264:	vmovl.u8	q8, d16
   1a268:	vst1.16	{d16-d17}, [r7]
   1a26c:	bne	1a224 <ReadUInt16Data+0x800>
   1a270:	b	1b6c4 <ReadUInt16Data+0x1ca0>
   1a274:	ldr	sl, [sp, #32]
   1a278:	ldr	r8, [sp, #28]
   1a27c:	b	1bf24 <ReadUInt16Data+0x2500>
   1a280:	cmp	r7, #256	; 0x100
   1a284:	ble	1a32c <ReadUInt16Data+0x908>
   1a288:	sub	r0, r7, #256	; 0x100
   1a28c:	lsl	r6, r7, #1
   1a290:	str	r7, [sp, #8]
   1a294:	mov	r5, #0
   1a298:	add	r7, sp, #168	; 0xa8
   1a29c:	mov	r8, #0
   1a2a0:	str	r0, [sp, #28]
   1a2a4:	ldr	r3, [r4]
   1a2a8:	mov	r0, r7
   1a2ac:	mov	r1, sl
   1a2b0:	mov	r2, #256	; 0x100
   1a2b4:	bl	18b8 <fread@plt>
   1a2b8:	mov	r4, r0
   1a2bc:	add	r0, r9, r5, lsl #1
   1a2c0:	mov	r1, r7
   1a2c4:	mov	r2, #512	; 0x200
   1a2c8:	bl	181c <memcpy@plt>
   1a2cc:	ldr	r0, [sp, #28]
   1a2d0:	add	r8, r4, r8
   1a2d4:	ldr	r4, [sp, #36]	; 0x24
   1a2d8:	add	r5, r5, #256	; 0x100
   1a2dc:	sub	r6, r6, #512	; 0x200
   1a2e0:	cmp	r5, r0
   1a2e4:	blt	1a2a4 <ReadUInt16Data+0x880>
   1a2e8:	mov	r1, sl
   1a2ec:	ldr	sl, [sp, #8]
   1a2f0:	cmp	r5, sl
   1a2f4:	bge	1b53c <ReadUInt16Data+0x1b18>
   1a2f8:	mov	r0, r4
   1a2fc:	sub	r4, sl, r5
   1a300:	mov	sl, r1
   1a304:	ldr	r3, [r0]
   1a308:	add	r0, sp, #168	; 0xa8
   1a30c:	mov	r2, r4
   1a310:	bl	18b8 <fread@plt>
   1a314:	add	r8, r0, r8
   1a318:	cmp	r4, #1
   1a31c:	bge	1ad9c <ReadUInt16Data+0x1378>
   1a320:	b	1bf24 <ReadUInt16Data+0x2500>
   1a324:	cmp	r7, #256	; 0x100
   1a328:	bgt	1ad00 <ReadUInt16Data+0x12dc>
   1a32c:	ldr	r3, [r4]
   1a330:	add	r0, sp, #168	; 0xa8
   1a334:	mov	r1, sl
   1a338:	mov	r2, r7
   1a33c:	bl	18b8 <fread@plt>
   1a340:	mov	r8, r0
   1a344:	cmp	r7, #1
   1a348:	blt	1bf24 <ReadUInt16Data+0x2500>
   1a34c:	lsl	r2, r7, #1
   1a350:	add	r1, sp, #168	; 0xa8
   1a354:	mov	r0, r9
   1a358:	bl	181c <memcpy@plt>
   1a35c:	b	1bf24 <ReadUInt16Data+0x2500>
   1a360:	cmp	r7, #256	; 0x100
   1a364:	bgt	1adb0 <ReadUInt16Data+0x138c>
   1a368:	ldr	r3, [r4]
   1a36c:	add	r4, sp, #168	; 0xa8
   1a370:	mov	r1, sl
   1a374:	mov	r2, r7
   1a378:	mov	r0, r4
   1a37c:	bl	18b8 <fread@plt>
   1a380:	mov	r8, r0
   1a384:	cmp	r7, #1
   1a388:	blt	1bf24 <ReadUInt16Data+0x2500>
   1a38c:	mov	lr, #0
   1a390:	cmp	r7, #4
   1a394:	bcc	1b784 <ReadUInt16Data+0x1d60>
   1a398:	bic	lr, r7, #3
   1a39c:	mov	r2, #1
   1a3a0:	str	r8, [sp, #28]
   1a3a4:	mov	r8, sl
   1a3a8:	mov	sl, r9
   1a3ac:	mov	r9, r7
   1a3b0:	subs	r1, lr, #4
   1a3b4:	add	r1, r2, r1, lsr #2
   1a3b8:	and	ip, r1, #1
   1a3bc:	beq	1b748 <ReadUInt16Data+0x1d24>
   1a3c0:	sub	r3, r1, ip
   1a3c4:	mov	r1, #0
   1a3c8:	mov	r7, #32
   1a3cc:	mov	r6, #16
   1a3d0:	mov	r5, sl
   1a3d4:	add	r2, r4, #16
   1a3d8:	vld1.32	{d16-d17}, [r4], r7
   1a3dc:	add	r0, r5, #8
   1a3e0:	subs	r3, r3, #2
   1a3e4:	add	r1, r1, #8
   1a3e8:	vmovn.i32	d16, q8
   1a3ec:	vst1.16	{d16}, [r5], r6
   1a3f0:	vld1.32	{d16-d17}, [r2]
   1a3f4:	vmovn.i32	d16, q8
   1a3f8:	vst1.16	{d16}, [r0]
   1a3fc:	bne	1a3d4 <ReadUInt16Data+0x9b0>
   1a400:	b	1b74c <ReadUInt16Data+0x1d28>
   1a404:	cmp	r7, #256	; 0x100
   1a408:	bgt	1af2c <ReadUInt16Data+0x1508>
   1a40c:	ldr	r3, [r4]
   1a410:	add	r4, sp, #168	; 0xa8
   1a414:	mov	r1, sl
   1a418:	mov	r2, r7
   1a41c:	mov	r0, r4
   1a420:	bl	18b8 <fread@plt>
   1a424:	mov	r8, r0
   1a428:	cmp	r7, #1
   1a42c:	blt	1bf24 <ReadUInt16Data+0x2500>
   1a430:	mov	lr, #0
   1a434:	cmp	r7, #4
   1a438:	bcc	1b7e4 <ReadUInt16Data+0x1dc0>
   1a43c:	bic	lr, r7, #3
   1a440:	mov	r2, #1
   1a444:	str	r8, [sp, #28]
   1a448:	mov	r8, sl
   1a44c:	mov	sl, r9
   1a450:	mov	r9, r7
   1a454:	subs	r1, lr, #4
   1a458:	add	r1, r2, r1, lsr #2
   1a45c:	and	ip, r1, #1
   1a460:	beq	1b7a8 <ReadUInt16Data+0x1d84>
   1a464:	sub	r3, r1, ip
   1a468:	mov	r1, #0
   1a46c:	mov	r7, #32
   1a470:	mov	r6, #16
   1a474:	mov	r5, sl
   1a478:	add	r2, r4, #16
   1a47c:	vld1.32	{d16-d17}, [r4], r7
   1a480:	add	r0, r5, #8
   1a484:	subs	r3, r3, #2
   1a488:	add	r1, r1, #8
   1a48c:	vmovn.i32	d16, q8
   1a490:	vst1.16	{d16}, [r5], r6
   1a494:	vld1.32	{d16-d17}, [r2]
   1a498:	vmovn.i32	d16, q8
   1a49c:	vst1.16	{d16}, [r0]
   1a4a0:	bne	1a478 <ReadUInt16Data+0xa54>
   1a4a4:	b	1b7ac <ReadUInt16Data+0x1d88>
   1a4a8:	cmp	r7, #256	; 0x100
   1a4ac:	bgt	1b0a8 <ReadUInt16Data+0x1684>
   1a4b0:	ldr	r3, [r4]
   1a4b4:	add	r4, sp, #168	; 0xa8
   1a4b8:	mov	r1, sl
   1a4bc:	mov	r2, r7
   1a4c0:	mov	r0, r4
   1a4c4:	bl	18b8 <fread@plt>
   1a4c8:	mov	r8, r0
   1a4cc:	cmp	r7, #1
   1a4d0:	blt	1bf24 <ReadUInt16Data+0x2500>
   1a4d4:	mov	lr, #0
   1a4d8:	cmp	r7, #4
   1a4dc:	bcc	1b848 <ReadUInt16Data+0x1e24>
   1a4e0:	bic	lr, r7, #3
   1a4e4:	mov	r2, #1
   1a4e8:	str	r8, [sp, #28]
   1a4ec:	mov	r8, sl
   1a4f0:	mov	sl, r9
   1a4f4:	mov	r9, r7
   1a4f8:	subs	r1, lr, #4
   1a4fc:	add	r1, r2, r1, lsr #2
   1a500:	and	ip, r1, #1
   1a504:	beq	1b808 <ReadUInt16Data+0x1de4>
   1a508:	sub	r3, r1, ip
   1a50c:	mov	r1, #0
   1a510:	mov	r7, #32
   1a514:	mov	r6, #16
   1a518:	mov	r5, sl
   1a51c:	add	r2, r4, #16
   1a520:	vld1.32	{d16-d17}, [r4], r7
   1a524:	add	r0, r5, #8
   1a528:	subs	r3, r3, #2
   1a52c:	add	r1, r1, #8
   1a530:	vcvt.u32.f32	q8, q8
   1a534:	vmovn.i32	d16, q8
   1a538:	vst1.16	{d16}, [r5], r6
   1a53c:	vld1.32	{d16-d17}, [r2]
   1a540:	vcvt.u32.f32	q8, q8
   1a544:	vmovn.i32	d16, q8
   1a548:	vst1.16	{d16}, [r0]
   1a54c:	bne	1a51c <ReadUInt16Data+0xaf8>
   1a550:	b	1b80c <ReadUInt16Data+0x1de8>
   1a554:	cmp	r7, #256	; 0x100
   1a558:	bgt	1b224 <ReadUInt16Data+0x1800>
   1a55c:	ldr	r3, [r4]
   1a560:	add	r4, sp, #168	; 0xa8
   1a564:	mov	r1, sl
   1a568:	mov	r2, r7
   1a56c:	mov	r0, r4
   1a570:	bl	18b8 <fread@plt>
   1a574:	mov	r8, r0
   1a578:	cmp	r7, #1
   1a57c:	blt	1bf24 <ReadUInt16Data+0x2500>
   1a580:	and	r1, r7, #1
   1a584:	mov	r0, #0
   1a588:	beq	1a5d0 <ReadUInt16Data+0xbac>
   1a58c:	sub	r2, r7, r1
   1a590:	add	r3, r9, #2
   1a594:	add	r7, r4, #8
   1a598:	mov	r0, #0
   1a59c:	vldr	d16, [r7, #-8]
   1a5a0:	add	r0, r0, #2
   1a5a4:	cmp	r2, r0
   1a5a8:	vcvt.u32.f64	s0, d16
   1a5ac:	vmov	r6, s0
   1a5b0:	strh	r6, [r3, #-2]
   1a5b4:	vldr	d16, [r7]
   1a5b8:	add	r7, r7, #16
   1a5bc:	vcvt.u32.f64	s0, d16
   1a5c0:	vmov	r6, s0
   1a5c4:	strh	r6, [r3]
   1a5c8:	add	r3, r3, #4
   1a5cc:	bne	1a59c <ReadUInt16Data+0xb78>
   1a5d0:	cmp	r1, #0
   1a5d4:	beq	1bf24 <ReadUInt16Data+0x2500>
   1a5d8:	add	r1, r4, r0, lsl #3
   1a5dc:	add	r0, r9, r0, lsl #1
   1a5e0:	vldr	d16, [r1]
   1a5e4:	b	1b384 <ReadUInt16Data+0x1960>
   1a5e8:	cmp	r7, #256	; 0x100
   1a5ec:	bgt	1b394 <ReadUInt16Data+0x1970>
   1a5f0:	ldr	r3, [r4]
   1a5f4:	add	r4, sp, #168	; 0xa8
   1a5f8:	mov	r1, sl
   1a5fc:	mov	r2, r7
   1a600:	mov	r0, r4
   1a604:	bl	18b8 <fread@plt>
   1a608:	mov	r8, r0
   1a60c:	cmp	r7, #1
   1a610:	blt	1b8d0 <ReadUInt16Data+0x1eac>
   1a614:	mov	r0, #0
   1a618:	beq	1b8b0 <ReadUInt16Data+0x1e8c>
   1a61c:	bic	r0, r7, #1
   1a620:	mov	r2, #1
   1a624:	mov	lr, r5
   1a628:	mov	ip, r7
   1a62c:	subs	r1, r0, #2
   1a630:	add	r1, r2, r1, lsr #1
   1a634:	and	r2, r1, #1
   1a638:	beq	1b878 <ReadUInt16Data+0x1e54>
   1a63c:	sub	r3, r1, r2
   1a640:	mov	r1, #0
   1a644:	mov	r7, #32
   1a648:	mov	r5, r9
   1a64c:	mov	r6, r4
   1a650:	vld1.64	{d16-d17}, [r6], r7
   1a654:	add	r4, r4, #16
   1a658:	subs	r3, r3, #2
   1a65c:	add	r1, r1, #4
   1a660:	vmovn.i64	d16, q8
   1a664:	vuzp.16	d16, d17
   1a668:	vst1.32	{d16[0]}, [r5]
   1a66c:	vld1.64	{d16-d17}, [r4]
   1a670:	add	r4, r5, #4
   1a674:	add	r5, r5, #8
   1a678:	vmovn.i64	d16, q8
   1a67c:	vuzp.16	d16, d17
   1a680:	vst1.32	{d16[0]}, [r4]
   1a684:	mov	r4, r6
   1a688:	bne	1a650 <ReadUInt16Data+0xc2c>
   1a68c:	b	1b87c <ReadUInt16Data+0x1e58>
   1a690:	sub	r0, r7, #256	; 0x100
   1a694:	mov	r8, r9
   1a698:	add	r1, r9, #512	; 0x200
   1a69c:	add	r6, sp, #168	; 0xa8
   1a6a0:	mov	r5, #0
   1a6a4:	str	sl, [sp, #32]
   1a6a8:	str	r7, [sp, #8]
   1a6ac:	str	r0, [sp, #28]
   1a6b0:	mov	r0, #0
   1a6b4:	mov	sl, r1
   1a6b8:	ldr	r3, [r4]
   1a6bc:	ldr	r1, [sp, #32]
   1a6c0:	mov	r9, r0
   1a6c4:	mov	r0, r6
   1a6c8:	mov	r2, #256	; 0x100
   1a6cc:	bl	18b8 <fread@plt>
   1a6d0:	mov	r4, r0
   1a6d4:	mov	r7, #0
   1a6d8:	add	r0, r6, r7
   1a6dc:	bl	1c20 <Mat_int16Swap>
   1a6e0:	add	r1, r8, r7
   1a6e4:	add	r7, r7, #2
   1a6e8:	cmp	r7, #512	; 0x200
   1a6ec:	strh	r0, [r1]
   1a6f0:	bne	1a6d8 <ReadUInt16Data+0xcb4>
   1a6f4:	ldr	r2, [sp, #28]
   1a6f8:	add	r5, r4, r5
   1a6fc:	ldr	r4, [sp, #36]	; 0x24
   1a700:	add	r0, r9, #256	; 0x100
   1a704:	add	r8, r8, #512	; 0x200
   1a708:	add	r1, sl, #512	; 0x200
   1a70c:	cmp	r0, r2
   1a710:	blt	1a6b4 <ReadUInt16Data+0xc90>
   1a714:	ldr	r7, [sp, #8]
   1a718:	cmp	r0, r7
   1a71c:	bge	1acf8 <ReadUInt16Data+0x12d4>
   1a720:	ldr	r3, [r4]
   1a724:	ldr	r1, [sp, #32]
   1a728:	sub	r6, r7, r0
   1a72c:	add	r4, sp, #168	; 0xa8
   1a730:	mov	r0, r4
   1a734:	mov	r2, r6
   1a738:	bl	18b8 <fread@plt>
   1a73c:	mov	r8, r5
   1a740:	add	r8, r0, r5
   1a744:	cmp	r6, #1
   1a748:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1a74c:	sub	r0, r7, r9
   1a750:	sub	r6, r0, #256	; 0x100
   1a754:	mov	r0, r4
   1a758:	bl	1c20 <Mat_int16Swap>
   1a75c:	strh	r0, [sl], #2
   1a760:	add	r4, r4, #2
   1a764:	subs	r6, r6, #1
   1a768:	bne	1a754 <ReadUInt16Data+0xd30>
   1a76c:	b	1bf20 <ReadUInt16Data+0x24fc>
   1a770:	sub	r0, r7, #256	; 0x100
   1a774:	mov	r8, r9
   1a778:	add	r1, r9, #512	; 0x200
   1a77c:	add	r6, sp, #168	; 0xa8
   1a780:	mov	r5, #0
   1a784:	str	sl, [sp, #32]
   1a788:	str	r7, [sp, #8]
   1a78c:	str	r0, [sp, #28]
   1a790:	mov	r0, #0
   1a794:	mov	sl, r1
   1a798:	ldr	r3, [r4]
   1a79c:	ldr	r1, [sp, #32]
   1a7a0:	mov	r9, r0
   1a7a4:	mov	r0, r6
   1a7a8:	mov	r2, #256	; 0x100
   1a7ac:	bl	18b8 <fread@plt>
   1a7b0:	mov	r4, r0
   1a7b4:	mov	r7, #0
   1a7b8:	add	r0, r6, r7
   1a7bc:	bl	1c34 <Mat_uint16Swap>
   1a7c0:	add	r1, r8, r7
   1a7c4:	add	r7, r7, #2
   1a7c8:	cmp	r7, #512	; 0x200
   1a7cc:	strh	r0, [r1]
   1a7d0:	bne	1a7b8 <ReadUInt16Data+0xd94>
   1a7d4:	ldr	r2, [sp, #28]
   1a7d8:	add	r5, r4, r5
   1a7dc:	ldr	r4, [sp, #36]	; 0x24
   1a7e0:	add	r0, r9, #256	; 0x100
   1a7e4:	add	r8, r8, #512	; 0x200
   1a7e8:	add	r1, sl, #512	; 0x200
   1a7ec:	cmp	r0, r2
   1a7f0:	blt	1a794 <ReadUInt16Data+0xd70>
   1a7f4:	ldr	r7, [sp, #8]
   1a7f8:	cmp	r0, r7
   1a7fc:	bge	1acf8 <ReadUInt16Data+0x12d4>
   1a800:	ldr	r3, [r4]
   1a804:	ldr	r1, [sp, #32]
   1a808:	sub	r6, r7, r0
   1a80c:	add	r4, sp, #168	; 0xa8
   1a810:	mov	r0, r4
   1a814:	mov	r2, r6
   1a818:	bl	18b8 <fread@plt>
   1a81c:	mov	r8, r5
   1a820:	add	r8, r0, r5
   1a824:	cmp	r6, #1
   1a828:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1a82c:	sub	r0, r7, r9
   1a830:	sub	r6, r0, #256	; 0x100
   1a834:	mov	r0, r4
   1a838:	bl	1c34 <Mat_uint16Swap>
   1a83c:	strh	r0, [sl], #2
   1a840:	add	r4, r4, #2
   1a844:	subs	r6, r6, #1
   1a848:	bne	1a834 <ReadUInt16Data+0xe10>
   1a84c:	b	1bf20 <ReadUInt16Data+0x24fc>
   1a850:	sub	r0, r7, #256	; 0x100
   1a854:	add	r1, r9, #512	; 0x200
   1a858:	mov	r8, #0
   1a85c:	str	sl, [sp, #32]
   1a860:	str	r7, [sp, #8]
   1a864:	str	r0, [sp, #24]
   1a868:	mov	r0, #0
   1a86c:	mov	r5, r1
   1a870:	ldr	r3, [r4]
   1a874:	ldr	r1, [sp, #32]
   1a878:	add	r4, sp, #168	; 0xa8
   1a87c:	str	r0, [sp, #28]
   1a880:	mov	r2, #256	; 0x100
   1a884:	mov	r0, r4
   1a888:	bl	18b8 <fread@plt>
   1a88c:	mov	r6, r0
   1a890:	mov	r7, #0
   1a894:	mov	r0, r4
   1a898:	add	sl, r9, r7
   1a89c:	bl	1bf8 <Mat_int32Swap>
   1a8a0:	add	r7, r7, #2
   1a8a4:	add	r4, r4, #4
   1a8a8:	strh	r0, [sl]
   1a8ac:	cmp	r7, #512	; 0x200
   1a8b0:	bne	1a894 <ReadUInt16Data+0xe70>
   1a8b4:	add	r8, r6, r8
   1a8b8:	ldr	r6, [sp, #28]
   1a8bc:	ldr	r2, [sp, #24]
   1a8c0:	ldr	r4, [sp, #36]	; 0x24
   1a8c4:	add	r9, r9, #512	; 0x200
   1a8c8:	add	r1, r5, #512	; 0x200
   1a8cc:	add	r0, r6, #256	; 0x100
   1a8d0:	cmp	r0, r2
   1a8d4:	blt	1a86c <ReadUInt16Data+0xe48>
   1a8d8:	ldr	r7, [sp, #8]
   1a8dc:	cmp	r0, r7
   1a8e0:	bge	1bf20 <ReadUInt16Data+0x24fc>
   1a8e4:	ldr	r3, [r4]
   1a8e8:	ldr	r1, [sp, #32]
   1a8ec:	sub	r9, r7, r0
   1a8f0:	add	r4, sp, #168	; 0xa8
   1a8f4:	mov	r0, r4
   1a8f8:	mov	r2, r9
   1a8fc:	bl	18b8 <fread@plt>
   1a900:	add	r8, r0, r8
   1a904:	cmp	r9, #1
   1a908:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1a90c:	sub	r0, r7, r6
   1a910:	sub	r6, r0, #256	; 0x100
   1a914:	mov	r0, r4
   1a918:	bl	1bf8 <Mat_int32Swap>
   1a91c:	strh	r0, [r5], #2
   1a920:	add	r4, r4, #4
   1a924:	subs	r6, r6, #1
   1a928:	bne	1a914 <ReadUInt16Data+0xef0>
   1a92c:	b	1bf20 <ReadUInt16Data+0x24fc>
   1a930:	sub	r0, r7, #256	; 0x100
   1a934:	add	r1, r9, #512	; 0x200
   1a938:	mov	r8, #0
   1a93c:	str	sl, [sp, #32]
   1a940:	str	r7, [sp, #8]
   1a944:	str	r0, [sp, #24]
   1a948:	mov	r0, #0
   1a94c:	mov	r5, r1
   1a950:	ldr	r3, [r4]
   1a954:	ldr	r1, [sp, #32]
   1a958:	add	r4, sp, #168	; 0xa8
   1a95c:	str	r0, [sp, #28]
   1a960:	mov	r2, #256	; 0x100
   1a964:	mov	r0, r4
   1a968:	bl	18b8 <fread@plt>
   1a96c:	mov	r6, r0
   1a970:	mov	r7, #0
   1a974:	mov	r0, r4
   1a978:	add	sl, r9, r7
   1a97c:	bl	1c0c <Mat_uint32Swap>
   1a980:	add	r7, r7, #2
   1a984:	add	r4, r4, #4
   1a988:	strh	r0, [sl]
   1a98c:	cmp	r7, #512	; 0x200
   1a990:	bne	1a974 <ReadUInt16Data+0xf50>
   1a994:	add	r8, r6, r8
   1a998:	ldr	r6, [sp, #28]
   1a99c:	ldr	r2, [sp, #24]
   1a9a0:	ldr	r4, [sp, #36]	; 0x24
   1a9a4:	add	r9, r9, #512	; 0x200
   1a9a8:	add	r1, r5, #512	; 0x200
   1a9ac:	add	r0, r6, #256	; 0x100
   1a9b0:	cmp	r0, r2
   1a9b4:	blt	1a94c <ReadUInt16Data+0xf28>
   1a9b8:	ldr	r7, [sp, #8]
   1a9bc:	cmp	r0, r7
   1a9c0:	bge	1bf20 <ReadUInt16Data+0x24fc>
   1a9c4:	ldr	r3, [r4]
   1a9c8:	ldr	r1, [sp, #32]
   1a9cc:	sub	r9, r7, r0
   1a9d0:	add	r4, sp, #168	; 0xa8
   1a9d4:	mov	r0, r4
   1a9d8:	mov	r2, r9
   1a9dc:	bl	18b8 <fread@plt>
   1a9e0:	add	r8, r0, r8
   1a9e4:	cmp	r9, #1
   1a9e8:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1a9ec:	sub	r0, r7, r6
   1a9f0:	sub	r6, r0, #256	; 0x100
   1a9f4:	mov	r0, r4
   1a9f8:	bl	1c0c <Mat_uint32Swap>
   1a9fc:	strh	r0, [r5], #2
   1aa00:	add	r4, r4, #4
   1aa04:	subs	r6, r6, #1
   1aa08:	bne	1a9f4 <ReadUInt16Data+0xfd0>
   1aa0c:	b	1bf20 <ReadUInt16Data+0x24fc>
   1aa10:	sub	r0, r7, #256	; 0x100
   1aa14:	str	sl, [sp, #32]
   1aa18:	mov	sl, r9
   1aa1c:	add	r1, r9, #512	; 0x200
   1aa20:	mov	r8, #0
   1aa24:	str	r7, [sp, #8]
   1aa28:	str	r0, [sp, #28]
   1aa2c:	mov	r0, #0
   1aa30:	mov	r5, r1
   1aa34:	ldr	r3, [r4]
   1aa38:	ldr	r1, [sp, #32]
   1aa3c:	add	r4, sp, #168	; 0xa8
   1aa40:	mov	r9, r0
   1aa44:	mov	r2, #256	; 0x100
   1aa48:	mov	r0, r4
   1aa4c:	bl	18b8 <fread@plt>
   1aa50:	mov	r6, r0
   1aa54:	mov	r7, #0
   1aa58:	mov	r0, r4
   1aa5c:	bl	1c4c <Mat_floatSwap>
   1aa60:	vcvt.u32.f32	s0, s0
   1aa64:	add	r0, sl, r7
   1aa68:	add	r7, r7, #2
   1aa6c:	add	r4, r4, #4
   1aa70:	cmp	r7, #512	; 0x200
   1aa74:	vmov	r1, s0
   1aa78:	strh	r1, [r0]
   1aa7c:	bne	1aa58 <ReadUInt16Data+0x1034>
   1aa80:	ldr	r2, [sp, #28]
   1aa84:	ldr	r4, [sp, #36]	; 0x24
   1aa88:	add	r0, r9, #256	; 0x100
   1aa8c:	add	r8, r6, r8
   1aa90:	add	sl, sl, #512	; 0x200
   1aa94:	add	r1, r5, #512	; 0x200
   1aa98:	cmp	r0, r2
   1aa9c:	blt	1aa30 <ReadUInt16Data+0x100c>
   1aaa0:	ldr	r7, [sp, #8]
   1aaa4:	cmp	r0, r7
   1aaa8:	bge	1bf20 <ReadUInt16Data+0x24fc>
   1aaac:	ldr	sl, [sp, #32]
   1aab0:	ldr	r3, [r4]
   1aab4:	sub	r6, r7, r0
   1aab8:	add	r4, sp, #168	; 0xa8
   1aabc:	mov	r0, r4
   1aac0:	mov	r2, r6
   1aac4:	mov	r1, sl
   1aac8:	bl	18b8 <fread@plt>
   1aacc:	add	r8, r0, r8
   1aad0:	cmp	r6, #1
   1aad4:	blt	1bf24 <ReadUInt16Data+0x2500>
   1aad8:	sub	r0, r7, r9
   1aadc:	sub	r6, r0, #256	; 0x100
   1aae0:	mov	r0, r4
   1aae4:	bl	1c4c <Mat_floatSwap>
   1aae8:	vcvt.u32.f32	s0, s0
   1aaec:	add	r4, r4, #4
   1aaf0:	subs	r6, r6, #1
   1aaf4:	vmov	r0, s0
   1aaf8:	strh	r0, [r5], #2
   1aafc:	bne	1aae0 <ReadUInt16Data+0x10bc>
   1ab00:	b	1bf24 <ReadUInt16Data+0x2500>
   1ab04:	sub	r0, r7, #256	; 0x100
   1ab08:	str	sl, [sp, #32]
   1ab0c:	mov	sl, r9
   1ab10:	add	r1, r9, #512	; 0x200
   1ab14:	mov	r8, #0
   1ab18:	str	r7, [sp, #8]
   1ab1c:	str	r0, [sp, #28]
   1ab20:	mov	r0, #0
   1ab24:	mov	r5, r1
   1ab28:	ldr	r3, [r4]
   1ab2c:	ldr	r1, [sp, #32]
   1ab30:	add	r4, sp, #168	; 0xa8
   1ab34:	mov	r9, r0
   1ab38:	mov	r2, #256	; 0x100
   1ab3c:	mov	r0, r4
   1ab40:	bl	18b8 <fread@plt>
   1ab44:	mov	r6, r0
   1ab48:	mov	r7, #0
   1ab4c:	mov	r0, r4
   1ab50:	bl	1c90 <Mat_doubleSwap>
   1ab54:	vcvt.u32.f64	s0, d0
   1ab58:	add	r0, sl, r7
   1ab5c:	add	r7, r7, #2
   1ab60:	add	r4, r4, #8
   1ab64:	cmp	r7, #512	; 0x200
   1ab68:	vmov	r1, s0
   1ab6c:	strh	r1, [r0]
   1ab70:	bne	1ab4c <ReadUInt16Data+0x1128>
   1ab74:	ldr	r2, [sp, #28]
   1ab78:	ldr	r4, [sp, #36]	; 0x24
   1ab7c:	add	r0, r9, #256	; 0x100
   1ab80:	add	r8, r6, r8
   1ab84:	add	sl, sl, #512	; 0x200
   1ab88:	add	r1, r5, #512	; 0x200
   1ab8c:	cmp	r0, r2
   1ab90:	blt	1ab24 <ReadUInt16Data+0x1100>
   1ab94:	ldr	r7, [sp, #8]
   1ab98:	cmp	r0, r7
   1ab9c:	bge	1bf20 <ReadUInt16Data+0x24fc>
   1aba0:	ldr	sl, [sp, #32]
   1aba4:	ldr	r3, [r4]
   1aba8:	sub	r6, r7, r0
   1abac:	add	r4, sp, #168	; 0xa8
   1abb0:	mov	r0, r4
   1abb4:	mov	r2, r6
   1abb8:	mov	r1, sl
   1abbc:	bl	18b8 <fread@plt>
   1abc0:	add	r8, r0, r8
   1abc4:	cmp	r6, #1
   1abc8:	blt	1bf24 <ReadUInt16Data+0x2500>
   1abcc:	sub	r0, r7, r9
   1abd0:	sub	r6, r0, #256	; 0x100
   1abd4:	mov	r0, r4
   1abd8:	bl	1c90 <Mat_doubleSwap>
   1abdc:	vcvt.u32.f64	s0, d0
   1abe0:	add	r4, r4, #8
   1abe4:	subs	r6, r6, #1
   1abe8:	vmov	r0, s0
   1abec:	strh	r0, [r5], #2
   1abf0:	bne	1abd4 <ReadUInt16Data+0x11b0>
   1abf4:	b	1bf24 <ReadUInt16Data+0x2500>
   1abf8:	sub	r0, r7, #256	; 0x100
   1abfc:	add	r1, r9, #512	; 0x200
   1ac00:	mov	r8, #0
   1ac04:	str	r5, [sp, #16]
   1ac08:	str	r7, [sp, #8]
   1ac0c:	str	r9, [sp, #4]
   1ac10:	str	sl, [sp, #32]
   1ac14:	str	r0, [sp, #24]
   1ac18:	mov	r0, #0
   1ac1c:	ldr	r3, [r4]
   1ac20:	add	r4, sp, #168	; 0xa8
   1ac24:	str	r0, [sp, #28]
   1ac28:	mov	r5, r1
   1ac2c:	mov	r1, sl
   1ac30:	mov	r2, #256	; 0x100
   1ac34:	mov	r7, r8
   1ac38:	mov	r0, r4
   1ac3c:	bl	18b8 <fread@plt>
   1ac40:	mov	r8, r0
   1ac44:	mov	sl, #0
   1ac48:	mov	r0, r4
   1ac4c:	add	r6, r9, sl
   1ac50:	bl	1b84 <Mat_int64Swap>
   1ac54:	add	sl, sl, #2
   1ac58:	add	r4, r4, #8
   1ac5c:	strh	r0, [r6]
   1ac60:	cmp	sl, #512	; 0x200
   1ac64:	bne	1ac48 <ReadUInt16Data+0x1224>
   1ac68:	ldr	r0, [sp, #28]
   1ac6c:	ldr	r2, [sp, #24]
   1ac70:	ldr	sl, [sp, #32]
   1ac74:	ldr	r4, [sp, #36]	; 0x24
   1ac78:	add	r7, r8, r7
   1ac7c:	add	r9, r9, #512	; 0x200
   1ac80:	add	r1, r5, #512	; 0x200
   1ac84:	mov	r8, r7
   1ac88:	add	r0, r0, #256	; 0x100
   1ac8c:	cmp	r0, r2
   1ac90:	blt	1ac1c <ReadUInt16Data+0x11f8>
   1ac94:	ldr	r7, [sp, #8]
   1ac98:	cmp	r0, r7
   1ac9c:	bge	1b534 <ReadUInt16Data+0x1b10>
   1aca0:	mov	r1, r4
   1aca4:	sub	r4, r7, r0
   1aca8:	add	r6, sp, #168	; 0xa8
   1acac:	ldr	r3, [r1]
   1acb0:	mov	r0, r6
   1acb4:	mov	r1, sl
   1acb8:	mov	r2, r4
   1acbc:	bl	18b8 <fread@plt>
   1acc0:	ldr	r9, [sp, #4]
   1acc4:	add	r8, r0, r8
   1acc8:	cmp	r4, #1
   1accc:	blt	1bac8 <ReadUInt16Data+0x20a4>
   1acd0:	ldr	r0, [sp, #28]
   1acd4:	sub	r0, r7, r0
   1acd8:	sub	r4, r0, #256	; 0x100
   1acdc:	mov	r0, r6
   1ace0:	bl	1b84 <Mat_int64Swap>
   1ace4:	strh	r0, [r5], #2
   1ace8:	add	r6, r6, #8
   1acec:	subs	r4, r4, #1
   1acf0:	bne	1acdc <ReadUInt16Data+0x12b8>
   1acf4:	b	1bac8 <ReadUInt16Data+0x20a4>
   1acf8:	mov	r8, r5
   1acfc:	b	1bf20 <ReadUInt16Data+0x24fc>
   1ad00:	sub	r0, r7, #256	; 0x100
   1ad04:	lsl	r6, r7, #1
   1ad08:	str	r7, [sp, #8]
   1ad0c:	mov	r5, #0
   1ad10:	add	r8, sp, #168	; 0xa8
   1ad14:	mov	r7, #0
   1ad18:	str	r0, [sp, #28]
   1ad1c:	ldr	r3, [r4]
   1ad20:	mov	r0, r8
   1ad24:	mov	r1, sl
   1ad28:	mov	r2, #256	; 0x100
   1ad2c:	bl	18b8 <fread@plt>
   1ad30:	mov	r4, r0
   1ad34:	add	r0, r9, r5, lsl #1
   1ad38:	mov	r1, r8
   1ad3c:	mov	r2, #512	; 0x200
   1ad40:	bl	181c <memcpy@plt>
   1ad44:	ldr	r0, [sp, #28]
   1ad48:	add	r7, r4, r7
   1ad4c:	ldr	r4, [sp, #36]	; 0x24
   1ad50:	add	r5, r5, #256	; 0x100
   1ad54:	sub	r6, r6, #512	; 0x200
   1ad58:	cmp	r5, r0
   1ad5c:	blt	1ad1c <ReadUInt16Data+0x12f8>
   1ad60:	mov	r1, sl
   1ad64:	ldr	sl, [sp, #8]
   1ad68:	cmp	r5, sl
   1ad6c:	bge	1b544 <ReadUInt16Data+0x1b20>
   1ad70:	mov	r0, r4
   1ad74:	sub	r4, sl, r5
   1ad78:	mov	sl, r1
   1ad7c:	ldr	r3, [r0]
   1ad80:	add	r0, sp, #168	; 0xa8
   1ad84:	mov	r2, r4
   1ad88:	bl	18b8 <fread@plt>
   1ad8c:	mov	r8, r7
   1ad90:	add	r8, r0, r7
   1ad94:	cmp	r4, #1
   1ad98:	blt	1bf24 <ReadUInt16Data+0x2500>
   1ad9c:	add	r0, r9, r5, lsl #1
   1ada0:	add	r1, sp, #168	; 0xa8
   1ada4:	mov	r2, r6
   1ada8:	bl	181c <memcpy@plt>
   1adac:	b	1bf24 <ReadUInt16Data+0x2500>
   1adb0:	sub	r1, r7, #256	; 0x100
   1adb4:	str	sl, [sp, #32]
   1adb8:	str	r7, [sp, #8]
   1adbc:	add	r0, r9, #512	; 0x200
   1adc0:	mov	r4, #0
   1adc4:	add	r6, sp, #168	; 0xa8
   1adc8:	mov	r7, #32
   1adcc:	mov	r8, r9
   1add0:	mov	sl, #0
   1add4:	str	r9, [sp, #4]
   1add8:	str	r1, [sp, #24]
   1addc:	mov	r1, #256	; 0x100
   1ade0:	mov	r9, r0
   1ade4:	ldr	r0, [sp, #36]	; 0x24
   1ade8:	mov	r5, r1
   1adec:	ldr	r1, [sp, #32]
   1adf0:	mov	r2, #256	; 0x100
   1adf4:	str	r4, [sp, #28]
   1adf8:	ldr	r3, [r0]
   1adfc:	mov	r0, r6
   1ae00:	bl	18b8 <fread@plt>
   1ae04:	mov	r1, #0
   1ae08:	mov	r2, r6
   1ae0c:	add	r3, r2, #16
   1ae10:	vld1.32	{d16-d17}, [r2], r7
   1ae14:	add	r4, r8, r1
   1ae18:	add	r1, r1, #16
   1ae1c:	cmp	r1, #512	; 0x200
   1ae20:	vmovn.i32	d16, q8
   1ae24:	vst1.16	{d16}, [r4]!
   1ae28:	vld1.32	{d16-d17}, [r3]
   1ae2c:	vmovn.i32	d16, q8
   1ae30:	vst1.16	{d16}, [r4]
   1ae34:	bne	1ae0c <ReadUInt16Data+0x13e8>
   1ae38:	ldr	r2, [sp, #28]
   1ae3c:	add	sl, r0, sl
   1ae40:	add	r8, r8, #512	; 0x200
   1ae44:	add	r0, r9, #512	; 0x200
   1ae48:	add	r1, r5, #256	; 0x100
   1ae4c:	add	r4, r2, #256	; 0x100
   1ae50:	ldr	r2, [sp, #24]
   1ae54:	cmp	r4, r2
   1ae58:	blt	1ade0 <ReadUInt16Data+0x13bc>
   1ae5c:	ldr	r7, [sp, #8]
   1ae60:	cmp	r4, r7
   1ae64:	bge	1be48 <ReadUInt16Data+0x2424>
   1ae68:	ldr	r0, [sp, #36]	; 0x24
   1ae6c:	ldr	r1, [sp, #32]
   1ae70:	sub	r8, r7, r4
   1ae74:	add	r6, sp, #168	; 0xa8
   1ae78:	mov	r2, r8
   1ae7c:	ldr	r3, [r0]
   1ae80:	mov	r0, r6
   1ae84:	bl	18b8 <fread@plt>
   1ae88:	mov	r1, r8
   1ae8c:	mov	r8, sl
   1ae90:	add	r8, r0, sl
   1ae94:	cmp	r1, #1
   1ae98:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1ae9c:	ldr	sl, [sp, #32]
   1aea0:	mov	lr, #0
   1aea4:	cmp	r1, #4
   1aea8:	bcc	1b924 <ReadUInt16Data+0x1f00>
   1aeac:	bic	lr, r1, #3
   1aeb0:	str	r1, [sp, #36]	; 0x24
   1aeb4:	mov	r1, #1
   1aeb8:	mov	sl, r8
   1aebc:	subs	r2, lr, #4
   1aec0:	add	r2, r1, r2, lsr #2
   1aec4:	and	ip, r2, #1
   1aec8:	beq	1b8e0 <ReadUInt16Data+0x1ebc>
   1aecc:	ldr	r0, [sp, #28]
   1aed0:	mov	r8, #32
   1aed4:	sub	r2, r7, r0
   1aed8:	sub	r2, r2, #256	; 0x100
   1aedc:	bic	r2, r2, #3
   1aee0:	sub	r2, r2, #4
   1aee4:	add	r1, r1, r2, lsr #2
   1aee8:	mvn	r3, r2, lsr #2
   1aeec:	mov	r2, #0
   1aef0:	and	r1, r1, #1
   1aef4:	add	r3, r3, r1
   1aef8:	mov	r1, #16
   1aefc:	add	r0, r6, #16
   1af00:	vld1.32	{d16-d17}, [r6], r8
   1af04:	add	r7, r9, #8
   1af08:	adds	r3, r3, #2
   1af0c:	add	r2, r2, #8
   1af10:	vmovn.i32	d16, q8
   1af14:	vst1.16	{d16}, [r9], r1
   1af18:	vld1.32	{d16-d17}, [r0]
   1af1c:	vmovn.i32	d16, q8
   1af20:	vst1.16	{d16}, [r7]
   1af24:	bne	1aefc <ReadUInt16Data+0x14d8>
   1af28:	b	1b8e4 <ReadUInt16Data+0x1ec0>
   1af2c:	sub	r1, r7, #256	; 0x100
   1af30:	str	sl, [sp, #32]
   1af34:	str	r7, [sp, #8]
   1af38:	add	r0, r9, #512	; 0x200
   1af3c:	mov	r4, #0
   1af40:	add	r6, sp, #168	; 0xa8
   1af44:	mov	r7, #32
   1af48:	mov	r8, r9
   1af4c:	mov	sl, #0
   1af50:	str	r9, [sp, #4]
   1af54:	str	r1, [sp, #24]
   1af58:	mov	r1, #256	; 0x100
   1af5c:	mov	r9, r0
   1af60:	ldr	r0, [sp, #36]	; 0x24
   1af64:	mov	r5, r1
   1af68:	ldr	r1, [sp, #32]
   1af6c:	mov	r2, #256	; 0x100
   1af70:	str	r4, [sp, #28]
   1af74:	ldr	r3, [r0]
   1af78:	mov	r0, r6
   1af7c:	bl	18b8 <fread@plt>
   1af80:	mov	r1, #0
   1af84:	mov	r2, r6
   1af88:	add	r3, r2, #16
   1af8c:	vld1.32	{d16-d17}, [r2], r7
   1af90:	add	r4, r8, r1
   1af94:	add	r1, r1, #16
   1af98:	cmp	r1, #512	; 0x200
   1af9c:	vmovn.i32	d16, q8
   1afa0:	vst1.16	{d16}, [r4]!
   1afa4:	vld1.32	{d16-d17}, [r3]
   1afa8:	vmovn.i32	d16, q8
   1afac:	vst1.16	{d16}, [r4]
   1afb0:	bne	1af88 <ReadUInt16Data+0x1564>
   1afb4:	ldr	r2, [sp, #28]
   1afb8:	add	sl, r0, sl
   1afbc:	add	r8, r8, #512	; 0x200
   1afc0:	add	r0, r9, #512	; 0x200
   1afc4:	add	r1, r5, #256	; 0x100
   1afc8:	add	r4, r2, #256	; 0x100
   1afcc:	ldr	r2, [sp, #24]
   1afd0:	cmp	r4, r2
   1afd4:	blt	1af5c <ReadUInt16Data+0x1538>
   1afd8:	ldr	r7, [sp, #8]
   1afdc:	cmp	r4, r7
   1afe0:	bge	1be48 <ReadUInt16Data+0x2424>
   1afe4:	ldr	r0, [sp, #36]	; 0x24
   1afe8:	ldr	r1, [sp, #32]
   1afec:	sub	r8, r7, r4
   1aff0:	add	r6, sp, #168	; 0xa8
   1aff4:	mov	r2, r8
   1aff8:	ldr	r3, [r0]
   1affc:	mov	r0, r6
   1b000:	bl	18b8 <fread@plt>
   1b004:	mov	r1, r8
   1b008:	mov	r8, sl
   1b00c:	add	r8, r0, sl
   1b010:	cmp	r1, #1
   1b014:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1b018:	ldr	sl, [sp, #32]
   1b01c:	mov	lr, #0
   1b020:	cmp	r1, #4
   1b024:	bcc	1b9a0 <ReadUInt16Data+0x1f7c>
   1b028:	bic	lr, r1, #3
   1b02c:	str	r1, [sp, #36]	; 0x24
   1b030:	mov	r1, #1
   1b034:	mov	sl, r8
   1b038:	subs	r2, lr, #4
   1b03c:	add	r2, r1, r2, lsr #2
   1b040:	and	ip, r2, #1
   1b044:	beq	1b95c <ReadUInt16Data+0x1f38>
   1b048:	ldr	r0, [sp, #28]
   1b04c:	mov	r8, #32
   1b050:	sub	r2, r7, r0
   1b054:	sub	r2, r2, #256	; 0x100
   1b058:	bic	r2, r2, #3
   1b05c:	sub	r2, r2, #4
   1b060:	add	r1, r1, r2, lsr #2
   1b064:	mvn	r3, r2, lsr #2
   1b068:	mov	r2, #0
   1b06c:	and	r1, r1, #1
   1b070:	add	r3, r3, r1
   1b074:	mov	r1, #16
   1b078:	add	r0, r6, #16
   1b07c:	vld1.32	{d16-d17}, [r6], r8
   1b080:	add	r7, r9, #8
   1b084:	adds	r3, r3, #2
   1b088:	add	r2, r2, #8
   1b08c:	vmovn.i32	d16, q8
   1b090:	vst1.16	{d16}, [r9], r1
   1b094:	vld1.32	{d16-d17}, [r0]
   1b098:	vmovn.i32	d16, q8
   1b09c:	vst1.16	{d16}, [r7]
   1b0a0:	bne	1b078 <ReadUInt16Data+0x1654>
   1b0a4:	b	1b960 <ReadUInt16Data+0x1f3c>
   1b0a8:	str	sl, [sp, #32]
   1b0ac:	str	r7, [sp, #8]
   1b0b0:	add	r0, r9, #512	; 0x200
   1b0b4:	sub	r7, r7, #256	; 0x100
   1b0b8:	mov	r4, #0
   1b0bc:	mov	r1, #256	; 0x100
   1b0c0:	add	r6, sp, #168	; 0xa8
   1b0c4:	mov	r5, #32
   1b0c8:	mov	r8, r9
   1b0cc:	mov	sl, #0
   1b0d0:	str	r9, [sp, #4]
   1b0d4:	mov	r9, r0
   1b0d8:	ldr	r0, [sp, #36]	; 0x24
   1b0dc:	str	r1, [sp, #24]
   1b0e0:	ldr	r1, [sp, #32]
   1b0e4:	mov	r2, #256	; 0x100
   1b0e8:	str	r4, [sp, #28]
   1b0ec:	ldr	r3, [r0]
   1b0f0:	mov	r0, r6
   1b0f4:	bl	18b8 <fread@plt>
   1b0f8:	mov	r1, #0
   1b0fc:	mov	r2, r6
   1b100:	add	r3, r2, #16
   1b104:	vld1.32	{d16-d17}, [r2], r5
   1b108:	add	r4, r8, r1
   1b10c:	add	r1, r1, #16
   1b110:	cmp	r1, #512	; 0x200
   1b114:	vcvt.u32.f32	q8, q8
   1b118:	vmovn.i32	d16, q8
   1b11c:	vst1.16	{d16}, [r4]!
   1b120:	vld1.32	{d16-d17}, [r3]
   1b124:	vcvt.u32.f32	q8, q8
   1b128:	vmovn.i32	d16, q8
   1b12c:	vst1.16	{d16}, [r4]
   1b130:	bne	1b100 <ReadUInt16Data+0x16dc>
   1b134:	ldr	r2, [sp, #28]
   1b138:	ldr	r1, [sp, #24]
   1b13c:	add	sl, r0, sl
   1b140:	add	r8, r8, #512	; 0x200
   1b144:	add	r0, r9, #512	; 0x200
   1b148:	add	r4, r2, #256	; 0x100
   1b14c:	add	r1, r1, #256	; 0x100
   1b150:	cmp	r4, r7
   1b154:	blt	1b0d4 <ReadUInt16Data+0x16b0>
   1b158:	ldr	r5, [sp, #8]
   1b15c:	cmp	r4, r5
   1b160:	bge	1be48 <ReadUInt16Data+0x2424>
   1b164:	ldr	r0, [sp, #36]	; 0x24
   1b168:	ldr	r1, [sp, #32]
   1b16c:	sub	r7, r5, r4
   1b170:	add	r6, sp, #168	; 0xa8
   1b174:	mov	r2, r7
   1b178:	ldr	r3, [r0]
   1b17c:	mov	r0, r6
   1b180:	bl	18b8 <fread@plt>
   1b184:	mov	r8, sl
   1b188:	add	r8, r0, sl
   1b18c:	cmp	r7, #1
   1b190:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1b194:	mov	lr, #0
   1b198:	cmp	r7, #4
   1b19c:	bcc	1ba14 <ReadUInt16Data+0x1ff0>
   1b1a0:	bic	lr, r7, #3
   1b1a4:	mov	r2, #1
   1b1a8:	mov	sl, r7
   1b1ac:	subs	r1, lr, #4
   1b1b0:	add	r1, r2, r1, lsr #2
   1b1b4:	and	ip, r1, #1
   1b1b8:	beq	1b9d8 <ReadUInt16Data+0x1fb4>
   1b1bc:	ldr	r0, [sp, #28]
   1b1c0:	sub	r3, r5, r0
   1b1c4:	mov	r5, #16
   1b1c8:	sub	r3, r3, #256	; 0x100
   1b1cc:	bic	r3, r3, #3
   1b1d0:	sub	r3, r3, #4
   1b1d4:	add	r2, r2, r3, lsr #2
   1b1d8:	mvn	r7, r3, lsr #2
   1b1dc:	and	r2, r2, #1
   1b1e0:	add	r3, r7, r2
   1b1e4:	mov	r2, #0
   1b1e8:	mov	r7, #32
   1b1ec:	add	r1, r6, #16
   1b1f0:	vld1.32	{d16-d17}, [r6], r7
   1b1f4:	add	r0, r9, #8
   1b1f8:	adds	r3, r3, #2
   1b1fc:	add	r2, r2, #8
   1b200:	vcvt.u32.f32	q8, q8
   1b204:	vmovn.i32	d16, q8
   1b208:	vst1.16	{d16}, [r9], r5
   1b20c:	vld1.32	{d16-d17}, [r1]
   1b210:	vcvt.u32.f32	q8, q8
   1b214:	vmovn.i32	d16, q8
   1b218:	vst1.16	{d16}, [r0]
   1b21c:	bne	1b1ec <ReadUInt16Data+0x17c8>
   1b220:	b	1b9dc <ReadUInt16Data+0x1fb8>
   1b224:	movw	r0, #514	; 0x202
   1b228:	mov	r1, r7
   1b22c:	add	r2, sp, #168	; 0xa8
   1b230:	str	sl, [sp, #32]
   1b234:	str	r9, [sp, #4]
   1b238:	add	r7, r9, #2
   1b23c:	mov	r5, #0
   1b240:	mov	r8, #0
   1b244:	add	r0, r9, r0
   1b248:	add	r9, r2, #8
   1b24c:	sub	sl, r1, #256	; 0x100
   1b250:	str	r1, [sp, #8]
   1b254:	mov	r4, r0
   1b258:	ldr	r0, [sp, #36]	; 0x24
   1b25c:	ldr	r1, [sp, #32]
   1b260:	mov	r2, #256	; 0x100
   1b264:	mov	r6, r5
   1b268:	ldr	r3, [r0]
   1b26c:	add	r0, sp, #168	; 0xa8
   1b270:	bl	18b8 <fread@plt>
   1b274:	mov	r1, #0
   1b278:	mov	r2, r9
   1b27c:	vldr	d16, [r2, #-8]
   1b280:	add	r3, r7, r1
   1b284:	add	r1, r1, #4
   1b288:	cmp	r1, #512	; 0x200
   1b28c:	vcvt.u32.f64	s0, d16
   1b290:	vmov	r5, s0
   1b294:	strh	r5, [r3, #-2]
   1b298:	vldr	d16, [r2]
   1b29c:	add	r2, r2, #16
   1b2a0:	vcvt.u32.f64	s0, d16
   1b2a4:	vmov	r5, s0
   1b2a8:	strh	r5, [r3]
   1b2ac:	bne	1b27c <ReadUInt16Data+0x1858>
   1b2b0:	add	r5, r6, #256	; 0x100
   1b2b4:	add	r8, r0, r8
   1b2b8:	add	r7, r7, #512	; 0x200
   1b2bc:	add	r0, r4, #512	; 0x200
   1b2c0:	cmp	r5, sl
   1b2c4:	blt	1b254 <ReadUInt16Data+0x1830>
   1b2c8:	ldr	r7, [sp, #8]
   1b2cc:	cmp	r5, r7
   1b2d0:	bge	1bf20 <ReadUInt16Data+0x24fc>
   1b2d4:	ldr	r0, [sp, #36]	; 0x24
   1b2d8:	ldr	sl, [sp, #32]
   1b2dc:	sub	r9, r7, r5
   1b2e0:	mov	r2, r9
   1b2e4:	ldr	r3, [r0]
   1b2e8:	add	r0, sp, #168	; 0xa8
   1b2ec:	mov	r1, sl
   1b2f0:	bl	18b8 <fread@plt>
   1b2f4:	add	r8, r0, r8
   1b2f8:	cmp	r9, #1
   1b2fc:	blt	1bf24 <ReadUInt16Data+0x2500>
   1b300:	mvn	r0, #256	; 0x100
   1b304:	mov	r1, #0
   1b308:	sub	r2, r0, r6
   1b30c:	ldr	r6, [sp, #4]
   1b310:	and	r0, r9, #1
   1b314:	cmn	r2, r7
   1b318:	beq	1b368 <ReadUInt16Data+0x1944>
   1b31c:	sub	r1, r0, r7
   1b320:	add	r2, sp, #168	; 0xa8
   1b324:	add	r3, r2, #8
   1b328:	add	r1, r1, r5
   1b32c:	mov	r2, #0
   1b330:	vldr	d16, [r3, #-8]
   1b334:	sub	r2, r2, #2
   1b338:	cmp	r1, r2
   1b33c:	vcvt.u32.f64	s0, d16
   1b340:	vmov	r7, s0
   1b344:	strh	r7, [r4, #-2]
   1b348:	vldr	d16, [r3]
   1b34c:	add	r3, r3, #16
   1b350:	vcvt.u32.f64	s0, d16
   1b354:	vmov	r7, s0
   1b358:	strh	r7, [r4]
   1b35c:	add	r4, r4, #4
   1b360:	bne	1b330 <ReadUInt16Data+0x190c>
   1b364:	rsb	r1, r2, #0
   1b368:	cmp	r0, #0
   1b36c:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b370:	add	r0, sp, #168	; 0xa8
   1b374:	add	r0, r0, r1, lsl #3
   1b378:	vldr	d16, [r0]
   1b37c:	add	r0, r1, r5
   1b380:	add	r0, r6, r0, lsl #1
   1b384:	vcvt.u32.f64	s0, d16
   1b388:	vmov	r1, s0
   1b38c:	strh	r1, [r0]
   1b390:	b	1bf24 <ReadUInt16Data+0x2500>
   1b394:	sub	r1, r7, #256	; 0x100
   1b398:	str	r7, [sp, #8]
   1b39c:	mov	r6, r9
   1b3a0:	add	r0, r9, #512	; 0x200
   1b3a4:	mov	r4, #0
   1b3a8:	add	r9, sp, #168	; 0xa8
   1b3ac:	mov	r7, #32
   1b3b0:	mov	r8, #0
   1b3b4:	str	r5, [sp, #16]
   1b3b8:	str	sl, [sp, #32]
   1b3bc:	str	r1, [sp, #20]
   1b3c0:	mov	r1, #256	; 0x100
   1b3c4:	str	r6, [sp, #4]
   1b3c8:	str	r0, [sp, #24]
   1b3cc:	ldr	r0, [sp, #36]	; 0x24
   1b3d0:	str	r1, [sp, #28]
   1b3d4:	ldr	r1, [sp, #32]
   1b3d8:	mov	r2, #256	; 0x100
   1b3dc:	mov	sl, r4
   1b3e0:	ldr	r3, [r0]
   1b3e4:	mov	r0, r9
   1b3e8:	bl	18b8 <fread@plt>
   1b3ec:	mov	r1, #0
   1b3f0:	mov	r3, r9
   1b3f4:	mov	r2, r9
   1b3f8:	vld1.64	{d16-d17}, [r2], r7
   1b3fc:	mov	r5, r6
   1b400:	add	r3, r3, #16
   1b404:	vmovn.i64	d16, q8
   1b408:	vuzp.16	d16, d17
   1b40c:	vmov.32	r4, d16[0]
   1b410:	str	r4, [r5, r1]!
   1b414:	add	r1, r1, #8
   1b418:	vld1.64	{d16-d17}, [r3]
   1b41c:	add	r3, r5, #4
   1b420:	cmp	r1, #512	; 0x200
   1b424:	vmovn.i64	d16, q8
   1b428:	vuzp.16	d16, d17
   1b42c:	vst1.32	{d16[0]}, [r3]
   1b430:	mov	r3, r2
   1b434:	bne	1b3f8 <ReadUInt16Data+0x19d4>
   1b438:	ldr	r1, [sp, #28]
   1b43c:	add	r8, r0, r8
   1b440:	ldr	r0, [sp, #24]
   1b444:	mov	r2, sl
   1b448:	ldr	r2, [sp, #20]
   1b44c:	add	r4, sl, #256	; 0x100
   1b450:	add	r6, r6, #512	; 0x200
   1b454:	add	r0, r0, #512	; 0x200
   1b458:	add	r1, r1, #256	; 0x100
   1b45c:	cmp	r4, r2
   1b460:	blt	1b3c8 <ReadUInt16Data+0x19a4>
   1b464:	ldr	r7, [sp, #8]
   1b468:	cmp	r4, r7
   1b46c:	bge	1b550 <ReadUInt16Data+0x1b2c>
   1b470:	ldr	r0, [sp, #36]	; 0x24
   1b474:	ldr	r1, [sp, #32]
   1b478:	sub	r6, r7, r4
   1b47c:	add	r5, sp, #168	; 0xa8
   1b480:	mov	r2, r6
   1b484:	ldr	r3, [r0]
   1b488:	mov	r0, r5
   1b48c:	bl	18b8 <fread@plt>
   1b490:	ldr	r9, [sp, #4]
   1b494:	add	r8, r0, r8
   1b498:	cmp	r6, #1
   1b49c:	blt	1bac4 <ReadUInt16Data+0x20a0>
   1b4a0:	mov	r0, #0
   1b4a4:	beq	1ba94 <ReadUInt16Data+0x2070>
   1b4a8:	bic	r0, r6, #1
   1b4ac:	mov	r2, #1
   1b4b0:	mov	lr, r6
   1b4b4:	subs	r1, r0, #2
   1b4b8:	add	r1, r2, r1, lsr #1
   1b4bc:	and	ip, r1, #1
   1b4c0:	beq	1ba5c <ReadUInt16Data+0x2038>
   1b4c4:	sub	r3, r7, sl
   1b4c8:	ldr	r1, [sp, #24]
   1b4cc:	mov	r6, r5
   1b4d0:	sub	r3, r3, #256	; 0x100
   1b4d4:	bic	r3, r3, #1
   1b4d8:	sub	r3, r3, #2
   1b4dc:	add	r2, r2, r3, lsr #1
   1b4e0:	mvn	r7, r3, lsr #1
   1b4e4:	and	r2, r2, #1
   1b4e8:	add	r3, r7, r2
   1b4ec:	mov	r2, #0
   1b4f0:	mov	r7, #32
   1b4f4:	vld1.64	{d16-d17}, [r6], r7
   1b4f8:	add	r5, r5, #16
   1b4fc:	adds	r3, r3, #2
   1b500:	add	r2, r2, #4
   1b504:	vmovn.i64	d16, q8
   1b508:	vuzp.16	d16, d17
   1b50c:	vst1.32	{d16[0]}, [r1]
   1b510:	vld1.64	{d16-d17}, [r5]
   1b514:	add	r5, r1, #4
   1b518:	add	r1, r1, #8
   1b51c:	vmovn.i64	d16, q8
   1b520:	vuzp.16	d16, d17
   1b524:	vst1.32	{d16[0]}, [r5]
   1b528:	mov	r5, r6
   1b52c:	bne	1b4f4 <ReadUInt16Data+0x1ad0>
   1b530:	b	1ba60 <ReadUInt16Data+0x203c>
   1b534:	ldr	r9, [sp, #4]
   1b538:	b	1bacc <ReadUInt16Data+0x20a8>
   1b53c:	mov	sl, r1
   1b540:	b	1bf24 <ReadUInt16Data+0x2500>
   1b544:	mov	sl, r1
   1b548:	mov	r8, r7
   1b54c:	b	1bf24 <ReadUInt16Data+0x2500>
   1b550:	ldr	sl, [sp, #32]
   1b554:	ldr	r9, [sp, #4]
   1b558:	b	1bac8 <ReadUInt16Data+0x20a4>
   1b55c:	mov	r1, #0
   1b560:	ldr	r8, [sp, #28]
   1b564:	cmp	ip, #0
   1b568:	mov	r9, sl
   1b56c:	beq	1b598 <ReadUInt16Data+0x1b74>
   1b570:	ldr	r0, [r4, r1]
   1b574:	str	r0, [sp, #40]	; 0x28
   1b578:	add	r0, r4, r1
   1b57c:	ldr	r0, [r0, #4]
   1b580:	str	r0, [sp, #44]	; 0x2c
   1b584:	add	r0, sp, #40	; 0x28
   1b588:	vld1.8	{d16}, [r0 :64]
   1b58c:	add	r0, r9, r1, lsl #1
   1b590:	vmovl.s8	q8, d16
   1b594:	vst1.16	{d16-d17}, [r0]
   1b598:	ldr	r7, [sp, #8]
   1b59c:	ldr	sl, [sp, #32]
   1b5a0:	cmp	lr, r7
   1b5a4:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b5a8:	add	r2, r9, lr, lsl #1
   1b5ac:	add	r1, r4, lr
   1b5b0:	sub	r0, r7, lr
   1b5b4:	ldrsb	r3, [r1], #1
   1b5b8:	subs	r0, r0, #1
   1b5bc:	strh	r3, [r2], #2
   1b5c0:	bne	1b5b4 <ReadUInt16Data+0x1b90>
   1b5c4:	b	1bf24 <ReadUInt16Data+0x2500>
   1b5c8:	mov	r1, #0
   1b5cc:	ldr	r8, [sp, #28]
   1b5d0:	cmp	ip, #0
   1b5d4:	mov	r9, sl
   1b5d8:	beq	1b604 <ReadUInt16Data+0x1be0>
   1b5dc:	ldr	r0, [r4, r1]
   1b5e0:	str	r0, [sp, #104]	; 0x68
   1b5e4:	add	r0, r4, r1
   1b5e8:	ldr	r0, [r0, #4]
   1b5ec:	str	r0, [sp, #108]	; 0x6c
   1b5f0:	add	r0, sp, #104	; 0x68
   1b5f4:	vld1.8	{d16}, [r0 :64]
   1b5f8:	add	r0, r9, r1, lsl #1
   1b5fc:	vmovl.u8	q8, d16
   1b600:	vst1.16	{d16-d17}, [r0]
   1b604:	ldr	r7, [sp, #8]
   1b608:	ldr	sl, [sp, #32]
   1b60c:	cmp	lr, r7
   1b610:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b614:	add	r2, r9, lr, lsl #1
   1b618:	add	r1, r4, lr
   1b61c:	sub	r0, r7, lr
   1b620:	ldrb	r3, [r1], #1
   1b624:	subs	r0, r0, #1
   1b628:	strh	r3, [r2], #2
   1b62c:	bne	1b620 <ReadUInt16Data+0x1bfc>
   1b630:	b	1bf24 <ReadUInt16Data+0x2500>
   1b634:	mov	r2, #0
   1b638:	ldr	r0, [sp, #28]
   1b63c:	ldr	r3, [sp, #4]
   1b640:	mov	r8, sl
   1b644:	cmp	r0, #0
   1b648:	beq	1b678 <ReadUInt16Data+0x1c54>
   1b64c:	ldr	r0, [r6, r2]
   1b650:	str	r0, [sp, #64]	; 0x40
   1b654:	add	r0, r6, r2
   1b658:	ldr	r0, [r0, #4]
   1b65c:	str	r0, [sp, #68]	; 0x44
   1b660:	add	r0, sp, #64	; 0x40
   1b664:	vld1.8	{d16}, [r0 :64]
   1b668:	add	r0, r2, r5
   1b66c:	add	r0, r3, r0, lsl #1
   1b670:	vmovl.s8	q8, d16
   1b674:	vst1.16	{d16-d17}, [r0]
   1b678:	ldr	r0, [sp, #36]	; 0x24
   1b67c:	ldr	r4, [sp, #8]
   1b680:	ldr	sl, [sp, #32]
   1b684:	cmp	r0, lr
   1b688:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b68c:	ldr	r0, [sp, #20]
   1b690:	add	r1, r6, lr
   1b694:	add	r0, lr, r0
   1b698:	add	r2, r3, r0, lsl #1
   1b69c:	ldr	r0, [sp, #24]
   1b6a0:	sub	r0, r4, r0
   1b6a4:	sub	r0, r0, lr
   1b6a8:	sub	r0, r0, #256	; 0x100
   1b6ac:	ldrsb	r3, [r1], #1
   1b6b0:	subs	r0, r0, #1
   1b6b4:	strh	r3, [r2], #2
   1b6b8:	bne	1b6ac <ReadUInt16Data+0x1c88>
   1b6bc:	b	1bf24 <ReadUInt16Data+0x2500>
   1b6c0:	mov	r2, #0
   1b6c4:	ldr	r8, [sp, #28]
   1b6c8:	ldr	r3, [sp, #4]
   1b6cc:	cmp	ip, #0
   1b6d0:	beq	1b700 <ReadUInt16Data+0x1cdc>
   1b6d4:	ldr	r0, [r9, r2]
   1b6d8:	str	r0, [sp, #128]	; 0x80
   1b6dc:	add	r0, r9, r2
   1b6e0:	ldr	r0, [r0, #4]
   1b6e4:	str	r0, [sp, #132]	; 0x84
   1b6e8:	add	r0, sp, #128	; 0x80
   1b6ec:	vld1.8	{d16}, [r0 :64]
   1b6f0:	add	r0, r2, r4
   1b6f4:	add	r0, r3, r0, lsl #1
   1b6f8:	vmovl.u8	q8, d16
   1b6fc:	vst1.16	{d16-d17}, [r0]
   1b700:	ldr	r0, [sp, #36]	; 0x24
   1b704:	ldr	r5, [sp, #8]
   1b708:	ldr	sl, [sp, #32]
   1b70c:	ldr	r7, [sp, #20]
   1b710:	cmp	r0, lr
   1b714:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b718:	ldr	r0, [sp, #24]
   1b71c:	add	r1, r9, lr
   1b720:	add	r0, lr, r0
   1b724:	add	r2, r3, r0, lsl #1
   1b728:	sub	r0, r5, r7
   1b72c:	sub	r0, r0, lr
   1b730:	sub	r0, r0, #256	; 0x100
   1b734:	ldrb	r3, [r1], #1
   1b738:	subs	r0, r0, #1
   1b73c:	strh	r3, [r2], #2
   1b740:	bne	1b734 <ReadUInt16Data+0x1d10>
   1b744:	b	1bf24 <ReadUInt16Data+0x2500>
   1b748:	mov	r1, #0
   1b74c:	cmp	ip, #0
   1b750:	beq	1b76c <ReadUInt16Data+0x1d48>
   1b754:	add	r0, sp, #168	; 0xa8
   1b758:	add	r0, r0, r1, lsl #2
   1b75c:	vld1.32	{d16-d17}, [r0]
   1b760:	add	r0, sl, r1, lsl #1
   1b764:	vmovn.i32	d16, q8
   1b768:	vst1.16	{d16}, [r0]
   1b76c:	mov	r7, r9
   1b770:	cmp	lr, r9
   1b774:	mov	r9, sl
   1b778:	mov	sl, r8
   1b77c:	ldr	r8, [sp, #28]
   1b780:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b784:	add	r0, sp, #168	; 0xa8
   1b788:	add	r2, r9, lr, lsl #1
   1b78c:	add	r1, r0, lr, lsl #2
   1b790:	sub	r0, r7, lr
   1b794:	ldr	r3, [r1], #4
   1b798:	subs	r0, r0, #1
   1b79c:	strh	r3, [r2], #2
   1b7a0:	bne	1b794 <ReadUInt16Data+0x1d70>
   1b7a4:	b	1bf24 <ReadUInt16Data+0x2500>
   1b7a8:	mov	r1, #0
   1b7ac:	cmp	ip, #0
   1b7b0:	beq	1b7cc <ReadUInt16Data+0x1da8>
   1b7b4:	add	r0, sp, #168	; 0xa8
   1b7b8:	add	r0, r0, r1, lsl #2
   1b7bc:	vld1.32	{d16-d17}, [r0]
   1b7c0:	add	r0, sl, r1, lsl #1
   1b7c4:	vmovn.i32	d16, q8
   1b7c8:	vst1.16	{d16}, [r0]
   1b7cc:	mov	r7, r9
   1b7d0:	cmp	lr, r9
   1b7d4:	mov	r9, sl
   1b7d8:	mov	sl, r8
   1b7dc:	ldr	r8, [sp, #28]
   1b7e0:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b7e4:	add	r0, sp, #168	; 0xa8
   1b7e8:	add	r2, r9, lr, lsl #1
   1b7ec:	add	r1, r0, lr, lsl #2
   1b7f0:	sub	r0, r7, lr
   1b7f4:	ldr	r3, [r1], #4
   1b7f8:	subs	r0, r0, #1
   1b7fc:	strh	r3, [r2], #2
   1b800:	bne	1b7f4 <ReadUInt16Data+0x1dd0>
   1b804:	b	1bf24 <ReadUInt16Data+0x2500>
   1b808:	mov	r1, #0
   1b80c:	cmp	ip, #0
   1b810:	beq	1b830 <ReadUInt16Data+0x1e0c>
   1b814:	add	r0, sp, #168	; 0xa8
   1b818:	add	r0, r0, r1, lsl #2
   1b81c:	vld1.32	{d16-d17}, [r0]
   1b820:	add	r0, sl, r1, lsl #1
   1b824:	vcvt.u32.f32	q8, q8
   1b828:	vmovn.i32	d16, q8
   1b82c:	vst1.16	{d16}, [r0]
   1b830:	mov	r7, r9
   1b834:	cmp	lr, r9
   1b838:	mov	r9, sl
   1b83c:	mov	sl, r8
   1b840:	ldr	r8, [sp, #28]
   1b844:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b848:	add	r0, sp, #168	; 0xa8
   1b84c:	add	r2, r9, lr, lsl #1
   1b850:	add	r1, r0, lr, lsl #2
   1b854:	sub	r0, r7, lr
   1b858:	vldr	s0, [r1]
   1b85c:	add	r1, r1, #4
   1b860:	subs	r0, r0, #1
   1b864:	vcvt.u32.f32	s0, s0
   1b868:	vmov	r3, s0
   1b86c:	strh	r3, [r2], #2
   1b870:	bne	1b858 <ReadUInt16Data+0x1e34>
   1b874:	b	1bf24 <ReadUInt16Data+0x2500>
   1b878:	mov	r1, #0
   1b87c:	cmp	r2, #0
   1b880:	mov	r5, lr
   1b884:	beq	1b8a4 <ReadUInt16Data+0x1e80>
   1b888:	add	r2, sp, #168	; 0xa8
   1b88c:	add	r2, r2, r1, lsl #3
   1b890:	add	r1, r9, r1, lsl #1
   1b894:	vld1.64	{d16-d17}, [r2]
   1b898:	vmovn.i64	d16, q8
   1b89c:	vuzp.16	d16, d17
   1b8a0:	vst1.32	{d16[0]}, [r1]
   1b8a4:	mov	r7, ip
   1b8a8:	cmp	r0, ip
   1b8ac:	beq	1b8d0 <ReadUInt16Data+0x1eac>
   1b8b0:	add	r1, sp, #168	; 0xa8
   1b8b4:	add	r2, r9, r0, lsl #1
   1b8b8:	add	r1, r1, r0, lsl #3
   1b8bc:	sub	r0, r7, r0
   1b8c0:	ldrh	r3, [r1], #8
   1b8c4:	subs	r0, r0, #1
   1b8c8:	strh	r3, [r2], #2
   1b8cc:	bne	1b8c0 <ReadUInt16Data+0x1e9c>
   1b8d0:	ldr	r4, [sp, #36]	; 0x24
   1b8d4:	cmp	r5, #13
   1b8d8:	beq	1bad8 <ReadUInt16Data+0x20b4>
   1b8dc:	b	1bf24 <ReadUInt16Data+0x2500>
   1b8e0:	mov	r2, #0
   1b8e4:	cmp	ip, #0
   1b8e8:	mov	r8, sl
   1b8ec:	beq	1b910 <ReadUInt16Data+0x1eec>
   1b8f0:	add	r0, sp, #168	; 0xa8
   1b8f4:	ldr	r1, [sp, #4]
   1b8f8:	add	r0, r0, r2, lsl #2
   1b8fc:	vld1.32	{d16-d17}, [r0]
   1b900:	add	r0, r2, r4
   1b904:	add	r0, r1, r0, lsl #1
   1b908:	vmovn.i32	d16, q8
   1b90c:	vst1.16	{d16}, [r0]
   1b910:	ldr	r0, [sp, #36]	; 0x24
   1b914:	ldr	r7, [sp, #8]
   1b918:	ldr	sl, [sp, #32]
   1b91c:	cmp	r0, lr
   1b920:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b924:	ldr	r2, [sp, #4]
   1b928:	add	r0, sp, #168	; 0xa8
   1b92c:	add	r1, r0, lr, lsl #2
   1b930:	add	r0, lr, r5
   1b934:	add	r2, r2, r0, lsl #1
   1b938:	ldr	r0, [sp, #28]
   1b93c:	sub	r0, r7, r0
   1b940:	sub	r0, r0, lr
   1b944:	sub	r0, r0, #256	; 0x100
   1b948:	ldr	r3, [r1], #4
   1b94c:	subs	r0, r0, #1
   1b950:	strh	r3, [r2], #2
   1b954:	bne	1b948 <ReadUInt16Data+0x1f24>
   1b958:	b	1bf24 <ReadUInt16Data+0x2500>
   1b95c:	mov	r2, #0
   1b960:	cmp	ip, #0
   1b964:	mov	r8, sl
   1b968:	beq	1b98c <ReadUInt16Data+0x1f68>
   1b96c:	add	r0, sp, #168	; 0xa8
   1b970:	ldr	r1, [sp, #4]
   1b974:	add	r0, r0, r2, lsl #2
   1b978:	vld1.32	{d16-d17}, [r0]
   1b97c:	add	r0, r2, r4
   1b980:	add	r0, r1, r0, lsl #1
   1b984:	vmovn.i32	d16, q8
   1b988:	vst1.16	{d16}, [r0]
   1b98c:	ldr	r0, [sp, #36]	; 0x24
   1b990:	ldr	r7, [sp, #8]
   1b994:	ldr	sl, [sp, #32]
   1b998:	cmp	r0, lr
   1b99c:	beq	1bf24 <ReadUInt16Data+0x2500>
   1b9a0:	ldr	r2, [sp, #4]
   1b9a4:	add	r0, sp, #168	; 0xa8
   1b9a8:	add	r1, r0, lr, lsl #2
   1b9ac:	add	r0, lr, r5
   1b9b0:	add	r2, r2, r0, lsl #1
   1b9b4:	ldr	r0, [sp, #28]
   1b9b8:	sub	r0, r7, r0
   1b9bc:	sub	r0, r0, lr
   1b9c0:	sub	r0, r0, #256	; 0x100
   1b9c4:	ldr	r3, [r1], #4
   1b9c8:	subs	r0, r0, #1
   1b9cc:	strh	r3, [r2], #2
   1b9d0:	bne	1b9c4 <ReadUInt16Data+0x1fa0>
   1b9d4:	b	1bf24 <ReadUInt16Data+0x2500>
   1b9d8:	mov	r2, #0
   1b9dc:	cmp	ip, #0
   1b9e0:	beq	1ba08 <ReadUInt16Data+0x1fe4>
   1b9e4:	add	r0, sp, #168	; 0xa8
   1b9e8:	ldr	r1, [sp, #4]
   1b9ec:	add	r0, r0, r2, lsl #2
   1b9f0:	vld1.32	{d16-d17}, [r0]
   1b9f4:	add	r0, r2, r4
   1b9f8:	add	r0, r1, r0, lsl #1
   1b9fc:	vcvt.u32.f32	q8, q8
   1ba00:	vmovn.i32	d16, q8
   1ba04:	vst1.16	{d16}, [r0]
   1ba08:	ldr	r5, [sp, #8]
   1ba0c:	cmp	sl, lr
   1ba10:	beq	1bf20 <ReadUInt16Data+0x24fc>
   1ba14:	add	r0, sp, #168	; 0xa8
   1ba18:	ldr	r2, [sp, #4]
   1ba1c:	add	r1, r0, lr, lsl #2
   1ba20:	ldr	r0, [sp, #24]
   1ba24:	add	r0, lr, r0
   1ba28:	add	r2, r2, r0, lsl #1
   1ba2c:	ldr	r0, [sp, #28]
   1ba30:	sub	r0, r5, r0
   1ba34:	sub	r0, r0, lr
   1ba38:	sub	r0, r0, #256	; 0x100
   1ba3c:	vldr	s0, [r1]
   1ba40:	add	r1, r1, #4
   1ba44:	subs	r0, r0, #1
   1ba48:	vcvt.u32.f32	s0, s0
   1ba4c:	vmov	r3, s0
   1ba50:	strh	r3, [r2], #2
   1ba54:	bne	1ba3c <ReadUInt16Data+0x2018>
   1ba58:	b	1bf20 <ReadUInt16Data+0x24fc>
   1ba5c:	mov	r2, #0
   1ba60:	cmp	ip, #0
   1ba64:	beq	1ba88 <ReadUInt16Data+0x2064>
   1ba68:	add	r1, sp, #168	; 0xa8
   1ba6c:	add	r1, r1, r2, lsl #3
   1ba70:	vld1.64	{d16-d17}, [r1]
   1ba74:	add	r1, r2, r4
   1ba78:	add	r1, r9, r1, lsl #1
   1ba7c:	vmovn.i64	d16, q8
   1ba80:	vuzp.16	d16, d17
   1ba84:	vst1.32	{d16[0]}, [r1]
   1ba88:	ldr	r7, [sp, #8]
   1ba8c:	cmp	lr, r0
   1ba90:	beq	1bac4 <ReadUInt16Data+0x20a0>
   1ba94:	ldr	r2, [sp, #28]
   1ba98:	add	r1, sp, #168	; 0xa8
   1ba9c:	sub	r3, r7, sl
   1baa0:	add	r1, r1, r0, lsl #3
   1baa4:	add	r2, r0, r2
   1baa8:	sub	r0, r3, r0
   1baac:	add	r2, r9, r2, lsl #1
   1bab0:	sub	r0, r0, #256	; 0x100
   1bab4:	ldrh	r3, [r1], #8
   1bab8:	subs	r0, r0, #1
   1babc:	strh	r3, [r2], #2
   1bac0:	bne	1bab4 <ReadUInt16Data+0x2090>
   1bac4:	ldr	sl, [sp, #32]
   1bac8:	ldr	r4, [sp, #36]	; 0x24
   1bacc:	ldr	r5, [sp, #16]
   1bad0:	cmp	r5, #13
   1bad4:	bne	1bf24 <ReadUInt16Data+0x2500>
   1bad8:	ldr	r0, [r4, #20]
   1badc:	cmp	r0, #0
   1bae0:	beq	1bb2c <ReadUInt16Data+0x2108>
   1bae4:	cmp	r7, #256	; 0x100
   1bae8:	bgt	1bbd0 <ReadUInt16Data+0x21ac>
   1baec:	ldr	r3, [r4]
   1baf0:	add	r4, sp, #168	; 0xa8
   1baf4:	mov	r1, sl
   1baf8:	mov	r2, r7
   1bafc:	mov	r0, r4
   1bb00:	bl	18b8 <fread@plt>
   1bb04:	add	r8, r0, r8
   1bb08:	cmp	r7, #1
   1bb0c:	blt	1bf24 <ReadUInt16Data+0x2500>
   1bb10:	mov	r0, r4
   1bb14:	bl	1bd4 <Mat_uint64Swap>
   1bb18:	strh	r0, [r9], #2
   1bb1c:	add	r4, r4, #8
   1bb20:	subs	r7, r7, #1
   1bb24:	bne	1bb10 <ReadUInt16Data+0x20ec>
   1bb28:	b	1bf24 <ReadUInt16Data+0x2500>
   1bb2c:	cmp	r7, #256	; 0x100
   1bb30:	bgt	1bcac <ReadUInt16Data+0x2288>
   1bb34:	ldr	r3, [r4]
   1bb38:	add	r5, sp, #168	; 0xa8
   1bb3c:	mov	r1, sl
   1bb40:	mov	r2, r7
   1bb44:	mov	r0, r5
   1bb48:	bl	18b8 <fread@plt>
   1bb4c:	add	r8, r0, r8
   1bb50:	cmp	r7, #1
   1bb54:	blt	1bf24 <ReadUInt16Data+0x2500>
   1bb58:	mov	r0, #0
   1bb5c:	beq	1be8c <ReadUInt16Data+0x2468>
   1bb60:	bic	r0, r7, #1
   1bb64:	mov	r2, #1
   1bb68:	mov	ip, r7
   1bb6c:	subs	r1, r0, #2
   1bb70:	add	r1, r2, r1, lsr #1
   1bb74:	and	r2, r1, #1
   1bb78:	beq	1be58 <ReadUInt16Data+0x2434>
   1bb7c:	sub	r3, r1, r2
   1bb80:	mov	r1, #0
   1bb84:	mov	r7, #32
   1bb88:	mov	r6, r9
   1bb8c:	mov	r4, r5
   1bb90:	vld1.64	{d16-d17}, [r4], r7
   1bb94:	add	r5, r5, #16
   1bb98:	subs	r3, r3, #2
   1bb9c:	add	r1, r1, #4
   1bba0:	vmovn.i64	d16, q8
   1bba4:	vuzp.16	d16, d17
   1bba8:	vst1.32	{d16[0]}, [r6]
   1bbac:	vld1.64	{d16-d17}, [r5]
   1bbb0:	add	r5, r6, #4
   1bbb4:	add	r6, r6, #8
   1bbb8:	vmovn.i64	d16, q8
   1bbbc:	vuzp.16	d16, d17
   1bbc0:	vst1.32	{d16[0]}, [r5]
   1bbc4:	mov	r5, r4
   1bbc8:	bne	1bb90 <ReadUInt16Data+0x216c>
   1bbcc:	b	1be5c <ReadUInt16Data+0x2438>
   1bbd0:	sub	r0, r7, #256	; 0x100
   1bbd4:	add	r1, r9, #512	; 0x200
   1bbd8:	str	sl, [sp, #32]
   1bbdc:	str	r7, [sp, #8]
   1bbe0:	str	r0, [sp, #24]
   1bbe4:	mov	r0, #0
   1bbe8:	mov	r5, r1
   1bbec:	ldr	r3, [r4]
   1bbf0:	ldr	r1, [sp, #32]
   1bbf4:	add	r4, sp, #168	; 0xa8
   1bbf8:	str	r0, [sp, #28]
   1bbfc:	mov	r2, #256	; 0x100
   1bc00:	mov	r0, r4
   1bc04:	bl	18b8 <fread@plt>
   1bc08:	mov	r6, r0
   1bc0c:	mov	r7, #0
   1bc10:	mov	r0, r4
   1bc14:	add	sl, r9, r7
   1bc18:	bl	1bd4 <Mat_uint64Swap>
   1bc1c:	add	r7, r7, #2
   1bc20:	add	r4, r4, #8
   1bc24:	strh	r0, [sl]
   1bc28:	cmp	r7, #512	; 0x200
   1bc2c:	bne	1bc10 <ReadUInt16Data+0x21ec>
   1bc30:	add	r8, r6, r8
   1bc34:	ldr	r6, [sp, #28]
   1bc38:	ldr	r2, [sp, #24]
   1bc3c:	ldr	r4, [sp, #36]	; 0x24
   1bc40:	add	r9, r9, #512	; 0x200
   1bc44:	add	r1, r5, #512	; 0x200
   1bc48:	add	r0, r6, #256	; 0x100
   1bc4c:	cmp	r0, r2
   1bc50:	blt	1bbe8 <ReadUInt16Data+0x21c4>
   1bc54:	ldr	r7, [sp, #8]
   1bc58:	cmp	r0, r7
   1bc5c:	bge	1bf20 <ReadUInt16Data+0x24fc>
   1bc60:	ldr	r3, [r4]
   1bc64:	ldr	r1, [sp, #32]
   1bc68:	sub	r9, r7, r0
   1bc6c:	add	r4, sp, #168	; 0xa8
   1bc70:	mov	r0, r4
   1bc74:	mov	r2, r9
   1bc78:	bl	18b8 <fread@plt>
   1bc7c:	add	r8, r0, r8
   1bc80:	cmp	r9, #1
   1bc84:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1bc88:	sub	r0, r7, r6
   1bc8c:	sub	r6, r0, #256	; 0x100
   1bc90:	mov	r0, r4
   1bc94:	bl	1bd4 <Mat_uint64Swap>
   1bc98:	strh	r0, [r5], #2
   1bc9c:	add	r4, r4, #8
   1bca0:	subs	r6, r6, #1
   1bca4:	bne	1bc90 <ReadUInt16Data+0x226c>
   1bca8:	b	1bf20 <ReadUInt16Data+0x24fc>
   1bcac:	mov	r0, sl
   1bcb0:	sub	r1, r7, #256	; 0x100
   1bcb4:	mov	sl, r8
   1bcb8:	str	r7, [sp, #8]
   1bcbc:	mov	r4, #0
   1bcc0:	mov	r7, #32
   1bcc4:	mov	r8, r9
   1bcc8:	str	r9, [sp, #4]
   1bccc:	str	r0, [sp, #32]
   1bcd0:	str	r1, [sp, #24]
   1bcd4:	add	r0, r9, #512	; 0x200
   1bcd8:	mov	r1, #256	; 0x100
   1bcdc:	mov	r9, r0
   1bce0:	ldr	r0, [sp, #36]	; 0x24
   1bce4:	str	r1, [sp, #28]
   1bce8:	ldr	r1, [sp, #32]
   1bcec:	mov	r6, r4
   1bcf0:	add	r4, sp, #168	; 0xa8
   1bcf4:	mov	r2, #256	; 0x100
   1bcf8:	ldr	r3, [r0]
   1bcfc:	mov	r0, r4
   1bd00:	bl	18b8 <fread@plt>
   1bd04:	mov	r1, #0
   1bd08:	mov	r3, r4
   1bd0c:	mov	r2, r4
   1bd10:	vld1.64	{d16-d17}, [r2], r7
   1bd14:	mov	r5, r8
   1bd18:	add	r3, r3, #16
   1bd1c:	vmovn.i64	d16, q8
   1bd20:	vuzp.16	d16, d17
   1bd24:	vmov.32	r4, d16[0]
   1bd28:	str	r4, [r5, r1]!
   1bd2c:	add	r1, r1, #8
   1bd30:	vld1.64	{d16-d17}, [r3]
   1bd34:	add	r3, r5, #4
   1bd38:	cmp	r1, #512	; 0x200
   1bd3c:	vmovn.i64	d16, q8
   1bd40:	vuzp.16	d16, d17
   1bd44:	vst1.32	{d16[0]}, [r3]
   1bd48:	mov	r3, r2
   1bd4c:	bne	1bd10 <ReadUInt16Data+0x22ec>
   1bd50:	ldr	r1, [sp, #28]
   1bd54:	mov	r2, r6
   1bd58:	ldr	r2, [sp, #24]
   1bd5c:	add	r4, r6, #256	; 0x100
   1bd60:	add	sl, r0, sl
   1bd64:	add	r8, r8, #512	; 0x200
   1bd68:	add	r0, r9, #512	; 0x200
   1bd6c:	add	r1, r1, #256	; 0x100
   1bd70:	cmp	r4, r2
   1bd74:	blt	1bcdc <ReadUInt16Data+0x22b8>
   1bd78:	ldr	r7, [sp, #8]
   1bd7c:	cmp	r4, r7
   1bd80:	bge	1be48 <ReadUInt16Data+0x2424>
   1bd84:	ldr	r0, [sp, #36]	; 0x24
   1bd88:	ldr	r1, [sp, #32]
   1bd8c:	sub	r8, r7, r4
   1bd90:	add	r5, sp, #168	; 0xa8
   1bd94:	mov	r2, r8
   1bd98:	ldr	r3, [r0]
   1bd9c:	mov	r0, r5
   1bda0:	bl	18b8 <fread@plt>
   1bda4:	mov	lr, r8
   1bda8:	mov	r8, sl
   1bdac:	add	r8, r0, sl
   1bdb0:	cmp	lr, #1
   1bdb4:	blt	1bf20 <ReadUInt16Data+0x24fc>
   1bdb8:	mov	r0, #0
   1bdbc:	mov	ip, r6
   1bdc0:	beq	1beec <ReadUInt16Data+0x24c8>
   1bdc4:	bic	r0, lr, #1
   1bdc8:	mov	r2, #1
   1bdcc:	subs	r1, r0, #2
   1bdd0:	add	r1, r2, r1, lsr #1
   1bdd4:	and	r1, r1, #1
   1bdd8:	beq	1beb0 <ReadUInt16Data+0x248c>
   1bddc:	sub	r3, r7, ip
   1bde0:	mov	r6, r5
   1bde4:	sub	r3, r3, #256	; 0x100
   1bde8:	bic	r3, r3, #1
   1bdec:	sub	r3, r3, #2
   1bdf0:	add	r2, r2, r3, lsr #1
   1bdf4:	mvn	r7, r3, lsr #1
   1bdf8:	and	r2, r2, #1
   1bdfc:	add	r3, r7, r2
   1be00:	mov	r2, #0
   1be04:	mov	r7, #32
   1be08:	vld1.64	{d16-d17}, [r6], r7
   1be0c:	add	r5, r5, #16
   1be10:	adds	r3, r3, #2
   1be14:	add	r2, r2, #4
   1be18:	vmovn.i64	d16, q8
   1be1c:	vuzp.16	d16, d17
   1be20:	vst1.32	{d16[0]}, [r9]
   1be24:	vld1.64	{d16-d17}, [r5]
   1be28:	add	r5, r9, #4
   1be2c:	add	r9, r9, #8
   1be30:	vmovn.i64	d16, q8
   1be34:	vuzp.16	d16, d17
   1be38:	vst1.32	{d16[0]}, [r5]
   1be3c:	mov	r5, r6
   1be40:	bne	1be08 <ReadUInt16Data+0x23e4>
   1be44:	b	1beb4 <ReadUInt16Data+0x2490>
   1be48:	ldr	r0, [sp, #32]
   1be4c:	mov	r8, sl
   1be50:	mov	sl, r0
   1be54:	b	1bf24 <ReadUInt16Data+0x2500>
   1be58:	mov	r1, #0
   1be5c:	cmp	r2, #0
   1be60:	beq	1be80 <ReadUInt16Data+0x245c>
   1be64:	add	r2, sp, #168	; 0xa8
   1be68:	add	r2, r2, r1, lsl #3
   1be6c:	add	r1, r9, r1, lsl #1
   1be70:	vld1.64	{d16-d17}, [r2]
   1be74:	vmovn.i64	d16, q8
   1be78:	vuzp.16	d16, d17
   1be7c:	vst1.32	{d16[0]}, [r1]
   1be80:	mov	r7, ip
   1be84:	cmp	r0, ip
   1be88:	beq	1bf24 <ReadUInt16Data+0x2500>
   1be8c:	add	r1, sp, #168	; 0xa8
   1be90:	add	r2, r9, r0, lsl #1
   1be94:	add	r1, r1, r0, lsl #3
   1be98:	sub	r0, r7, r0
   1be9c:	ldrh	r3, [r1], #8
   1bea0:	subs	r0, r0, #1
   1bea4:	strh	r3, [r2], #2
   1bea8:	bne	1be9c <ReadUInt16Data+0x2478>
   1beac:	b	1bf24 <ReadUInt16Data+0x2500>
   1beb0:	mov	r2, #0
   1beb4:	cmp	r1, #0
   1beb8:	beq	1bee0 <ReadUInt16Data+0x24bc>
   1bebc:	add	r1, sp, #168	; 0xa8
   1bec0:	add	r1, r1, r2, lsl #3
   1bec4:	vld1.64	{d16-d17}, [r1]
   1bec8:	add	r1, r2, r4
   1becc:	ldr	r2, [sp, #4]
   1bed0:	add	r1, r2, r1, lsl #1
   1bed4:	vmovn.i64	d16, q8
   1bed8:	vuzp.16	d16, d17
   1bedc:	vst1.32	{d16[0]}, [r1]
   1bee0:	ldr	r7, [sp, #8]
   1bee4:	cmp	lr, r0
   1bee8:	beq	1bf20 <ReadUInt16Data+0x24fc>
   1beec:	ldr	r2, [sp, #28]
   1bef0:	ldr	r3, [sp, #4]
   1bef4:	add	r1, sp, #168	; 0xa8
   1bef8:	add	r1, r1, r0, lsl #3
   1befc:	add	r2, r0, r2
   1bf00:	add	r2, r3, r2, lsl #1
   1bf04:	sub	r3, r7, ip
   1bf08:	sub	r0, r3, r0
   1bf0c:	sub	r0, r0, #256	; 0x100
   1bf10:	ldrh	r3, [r1], #8
   1bf14:	subs	r0, r0, #1
   1bf18:	strh	r3, [r2], #2
   1bf1c:	bne	1bf10 <ReadUInt16Data+0x24ec>
   1bf20:	ldr	sl, [sp, #32]
   1bf24:	mul	r0, r8, sl
   1bf28:	sub	sp, fp, #28
   1bf2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bf30 <ReadCompressedUInt16Data>:
   1bf30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf34:	add	fp, sp, #28
   1bf38:	sub	sp, sp, #12
   1bf3c:	mov	r7, r0
   1bf40:	mov	r0, #0
   1bf44:	cmp	r1, #0
   1bf48:	beq	1bf5c <ReadCompressedUInt16Data+0x2c>
   1bf4c:	cmp	r7, #0
   1bf50:	movne	r5, r2
   1bf54:	cmpne	r2, #0
   1bf58:	bne	1bf64 <ReadCompressedUInt16Data+0x34>
   1bf5c:	sub	sp, fp, #28
   1bf60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bf64:	ldr	sl, [fp, #8]
   1bf68:	mov	r0, r3
   1bf6c:	mov	r4, r3
   1bf70:	mov	r6, r1
   1bf74:	bl	1924 <Mat_SizeOf@plt>
   1bf78:	mov	r9, r0
   1bf7c:	sub	r0, r4, #1
   1bf80:	cmp	r0, #12
   1bf84:	bhi	1c454 <ReadCompressedUInt16Data+0x524>
   1bf88:	add	r1, pc, #4
   1bf8c:	ldr	r0, [r1, r0, lsl #2]
   1bf90:	add	pc, r1, r0
   1bf94:	.word	0x00000034
   1bf98:	.word	0x0000006c
   1bf9c:	.word	0x000000a4
   1bfa0:	.word	0x000000ec
   1bfa4:	.word	0x00000134
   1bfa8:	.word	0x0000017c
   1bfac:	.word	0x000001c4
   1bfb0:	.word	0x000004c0
   1bfb4:	.word	0x00000214
   1bfb8:	.word	0x000004c0
   1bfbc:	.word	0x000004c0
   1bfc0:	.word	0x00000264
   1bfc4:	.word	0x000002ac
   1bfc8:	cmp	sl, #1
   1bfcc:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1bfd0:	mov	r8, sp
   1bfd4:	mov	r4, sl
   1bfd8:	mov	r0, r7
   1bfdc:	mov	r1, r6
   1bfe0:	mov	r2, r8
   1bfe4:	mov	r3, r9
   1bfe8:	bl	3238 <InflateData>
   1bfec:	ldrsb	r0, [sp]
   1bff0:	subs	r4, r4, #1
   1bff4:	strh	r0, [r5], #2
   1bff8:	bne	1bfd8 <ReadCompressedUInt16Data+0xa8>
   1bffc:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c000:	cmp	sl, #1
   1c004:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c008:	mov	r8, sp
   1c00c:	mov	r4, sl
   1c010:	mov	r0, r7
   1c014:	mov	r1, r6
   1c018:	mov	r2, r8
   1c01c:	mov	r3, r9
   1c020:	bl	3238 <InflateData>
   1c024:	ldrb	r0, [sp]
   1c028:	subs	r4, r4, #1
   1c02c:	strh	r0, [r5], #2
   1c030:	bne	1c010 <ReadCompressedUInt16Data+0xe0>
   1c034:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c038:	ldr	r0, [r7, #20]
   1c03c:	cmp	r0, #0
   1c040:	beq	1c288 <ReadCompressedUInt16Data+0x358>
   1c044:	cmp	sl, #1
   1c048:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c04c:	mov	r8, sp
   1c050:	mov	r4, sl
   1c054:	mov	r0, r7
   1c058:	mov	r1, r6
   1c05c:	mov	r2, r8
   1c060:	mov	r3, r9
   1c064:	bl	3238 <InflateData>
   1c068:	mov	r0, r8
   1c06c:	bl	1c20 <Mat_int16Swap>
   1c070:	strh	r0, [r5], #2
   1c074:	subs	r4, r4, #1
   1c078:	bne	1c054 <ReadCompressedUInt16Data+0x124>
   1c07c:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c080:	ldr	r0, [r7, #20]
   1c084:	cmp	r0, #0
   1c088:	beq	1c2c0 <ReadCompressedUInt16Data+0x390>
   1c08c:	cmp	sl, #1
   1c090:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c094:	mov	r8, sp
   1c098:	mov	r4, sl
   1c09c:	mov	r0, r7
   1c0a0:	mov	r1, r6
   1c0a4:	mov	r2, r8
   1c0a8:	mov	r3, r9
   1c0ac:	bl	3238 <InflateData>
   1c0b0:	mov	r0, r8
   1c0b4:	bl	1c34 <Mat_uint16Swap>
   1c0b8:	strh	r0, [r5], #2
   1c0bc:	subs	r4, r4, #1
   1c0c0:	bne	1c09c <ReadCompressedUInt16Data+0x16c>
   1c0c4:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c0c8:	ldr	r0, [r7, #20]
   1c0cc:	cmp	r0, #0
   1c0d0:	beq	1c2f8 <ReadCompressedUInt16Data+0x3c8>
   1c0d4:	cmp	sl, #1
   1c0d8:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c0dc:	mov	r8, sp
   1c0e0:	mov	r4, sl
   1c0e4:	mov	r0, r7
   1c0e8:	mov	r1, r6
   1c0ec:	mov	r2, r8
   1c0f0:	mov	r3, r9
   1c0f4:	bl	3238 <InflateData>
   1c0f8:	mov	r0, r8
   1c0fc:	bl	1bf8 <Mat_int32Swap>
   1c100:	strh	r0, [r5], #2
   1c104:	subs	r4, r4, #1
   1c108:	bne	1c0e4 <ReadCompressedUInt16Data+0x1b4>
   1c10c:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c110:	ldr	r0, [r7, #20]
   1c114:	cmp	r0, #0
   1c118:	beq	1c330 <ReadCompressedUInt16Data+0x400>
   1c11c:	cmp	sl, #1
   1c120:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c124:	mov	r8, sp
   1c128:	mov	r4, sl
   1c12c:	mov	r0, r7
   1c130:	mov	r1, r6
   1c134:	mov	r2, r8
   1c138:	mov	r3, r9
   1c13c:	bl	3238 <InflateData>
   1c140:	mov	r0, r8
   1c144:	bl	1c0c <Mat_uint32Swap>
   1c148:	strh	r0, [r5], #2
   1c14c:	subs	r4, r4, #1
   1c150:	bne	1c12c <ReadCompressedUInt16Data+0x1fc>
   1c154:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c158:	ldr	r0, [r7, #20]
   1c15c:	cmp	r0, #0
   1c160:	beq	1c368 <ReadCompressedUInt16Data+0x438>
   1c164:	cmp	sl, #1
   1c168:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c16c:	mov	r8, sp
   1c170:	mov	r4, sl
   1c174:	mov	r0, r7
   1c178:	mov	r1, r6
   1c17c:	mov	r2, r8
   1c180:	mov	r3, r9
   1c184:	bl	3238 <InflateData>
   1c188:	mov	r0, r8
   1c18c:	bl	1c4c <Mat_floatSwap>
   1c190:	vcvt.u32.f32	s0, s0
   1c194:	subs	r4, r4, #1
   1c198:	vmov	r0, s0
   1c19c:	strh	r0, [r5], #2
   1c1a0:	bne	1c174 <ReadCompressedUInt16Data+0x244>
   1c1a4:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c1a8:	ldr	r0, [r7, #20]
   1c1ac:	cmp	r0, #0
   1c1b0:	beq	1c3a8 <ReadCompressedUInt16Data+0x478>
   1c1b4:	cmp	sl, #1
   1c1b8:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c1bc:	mov	r8, sp
   1c1c0:	mov	r4, sl
   1c1c4:	mov	r0, r7
   1c1c8:	mov	r1, r6
   1c1cc:	mov	r2, r8
   1c1d0:	mov	r3, r9
   1c1d4:	bl	3238 <InflateData>
   1c1d8:	mov	r0, r8
   1c1dc:	bl	1c90 <Mat_doubleSwap>
   1c1e0:	vcvt.u32.f64	s0, d0
   1c1e4:	subs	r4, r4, #1
   1c1e8:	vmov	r0, s0
   1c1ec:	strh	r0, [r5], #2
   1c1f0:	bne	1c1c4 <ReadCompressedUInt16Data+0x294>
   1c1f4:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c1f8:	ldr	r0, [r7, #20]
   1c1fc:	cmp	r0, #0
   1c200:	beq	1c3e8 <ReadCompressedUInt16Data+0x4b8>
   1c204:	cmp	sl, #1
   1c208:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c20c:	mov	r8, sp
   1c210:	mov	r4, sl
   1c214:	mov	r0, r7
   1c218:	mov	r1, r6
   1c21c:	mov	r2, r8
   1c220:	mov	r3, r9
   1c224:	bl	3238 <InflateData>
   1c228:	mov	r0, r8
   1c22c:	bl	1b84 <Mat_int64Swap>
   1c230:	strh	r0, [r5], #2
   1c234:	subs	r4, r4, #1
   1c238:	bne	1c214 <ReadCompressedUInt16Data+0x2e4>
   1c23c:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c240:	ldr	r0, [r7, #20]
   1c244:	cmp	r0, #0
   1c248:	beq	1c420 <ReadCompressedUInt16Data+0x4f0>
   1c24c:	cmp	sl, #1
   1c250:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c254:	mov	r8, sp
   1c258:	mov	r4, sl
   1c25c:	mov	r0, r7
   1c260:	mov	r1, r6
   1c264:	mov	r2, r8
   1c268:	mov	r3, r9
   1c26c:	bl	3238 <InflateData>
   1c270:	mov	r0, r8
   1c274:	bl	1bd4 <Mat_uint64Swap>
   1c278:	strh	r0, [r5], #2
   1c27c:	subs	r4, r4, #1
   1c280:	bne	1c25c <ReadCompressedUInt16Data+0x32c>
   1c284:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c288:	cmp	sl, #1
   1c28c:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c290:	mov	r8, sp
   1c294:	mov	r4, sl
   1c298:	mov	r0, r7
   1c29c:	mov	r1, r6
   1c2a0:	mov	r2, r8
   1c2a4:	mov	r3, r9
   1c2a8:	bl	3238 <InflateData>
   1c2ac:	ldrh	r0, [sp]
   1c2b0:	subs	r4, r4, #1
   1c2b4:	strh	r0, [r5], #2
   1c2b8:	bne	1c298 <ReadCompressedUInt16Data+0x368>
   1c2bc:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c2c0:	cmp	sl, #1
   1c2c4:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c2c8:	mov	r8, sp
   1c2cc:	mov	r4, sl
   1c2d0:	mov	r0, r7
   1c2d4:	mov	r1, r6
   1c2d8:	mov	r2, r8
   1c2dc:	mov	r3, r9
   1c2e0:	bl	3238 <InflateData>
   1c2e4:	ldrh	r0, [sp]
   1c2e8:	subs	r4, r4, #1
   1c2ec:	strh	r0, [r5], #2
   1c2f0:	bne	1c2d0 <ReadCompressedUInt16Data+0x3a0>
   1c2f4:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c2f8:	cmp	sl, #1
   1c2fc:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c300:	mov	r8, sp
   1c304:	mov	r4, sl
   1c308:	mov	r0, r7
   1c30c:	mov	r1, r6
   1c310:	mov	r2, r8
   1c314:	mov	r3, r9
   1c318:	bl	3238 <InflateData>
   1c31c:	ldr	r0, [sp]
   1c320:	subs	r4, r4, #1
   1c324:	strh	r0, [r5], #2
   1c328:	bne	1c308 <ReadCompressedUInt16Data+0x3d8>
   1c32c:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c330:	cmp	sl, #1
   1c334:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c338:	mov	r8, sp
   1c33c:	mov	r4, sl
   1c340:	mov	r0, r7
   1c344:	mov	r1, r6
   1c348:	mov	r2, r8
   1c34c:	mov	r3, r9
   1c350:	bl	3238 <InflateData>
   1c354:	ldr	r0, [sp]
   1c358:	subs	r4, r4, #1
   1c35c:	strh	r0, [r5], #2
   1c360:	bne	1c340 <ReadCompressedUInt16Data+0x410>
   1c364:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c368:	cmp	sl, #1
   1c36c:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c370:	mov	r8, sp
   1c374:	mov	r4, sl
   1c378:	mov	r0, r7
   1c37c:	mov	r1, r6
   1c380:	mov	r2, r8
   1c384:	mov	r3, r9
   1c388:	bl	3238 <InflateData>
   1c38c:	vldr	s0, [sp]
   1c390:	subs	r4, r4, #1
   1c394:	vcvt.u32.f32	s0, s0
   1c398:	vmov	r0, s0
   1c39c:	strh	r0, [r5], #2
   1c3a0:	bne	1c378 <ReadCompressedUInt16Data+0x448>
   1c3a4:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c3a8:	cmp	sl, #1
   1c3ac:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c3b0:	mov	r8, sp
   1c3b4:	mov	r4, sl
   1c3b8:	mov	r0, r7
   1c3bc:	mov	r1, r6
   1c3c0:	mov	r2, r8
   1c3c4:	mov	r3, r9
   1c3c8:	bl	3238 <InflateData>
   1c3cc:	vldr	d16, [sp]
   1c3d0:	subs	r4, r4, #1
   1c3d4:	vcvt.u32.f64	s0, d16
   1c3d8:	vmov	r0, s0
   1c3dc:	strh	r0, [r5], #2
   1c3e0:	bne	1c3b8 <ReadCompressedUInt16Data+0x488>
   1c3e4:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c3e8:	cmp	sl, #1
   1c3ec:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c3f0:	mov	r8, sp
   1c3f4:	mov	r4, sl
   1c3f8:	mov	r0, r7
   1c3fc:	mov	r1, r6
   1c400:	mov	r2, r8
   1c404:	mov	r3, r9
   1c408:	bl	3238 <InflateData>
   1c40c:	ldrh	r0, [sp]
   1c410:	subs	r4, r4, #1
   1c414:	strh	r0, [r5], #2
   1c418:	bne	1c3f8 <ReadCompressedUInt16Data+0x4c8>
   1c41c:	b	1c454 <ReadCompressedUInt16Data+0x524>
   1c420:	cmp	sl, #1
   1c424:	blt	1c454 <ReadCompressedUInt16Data+0x524>
   1c428:	mov	r8, sp
   1c42c:	mov	r4, sl
   1c430:	mov	r0, r7
   1c434:	mov	r1, r6
   1c438:	mov	r2, r8
   1c43c:	mov	r3, r9
   1c440:	bl	3238 <InflateData>
   1c444:	ldrh	r0, [sp]
   1c448:	subs	r4, r4, #1
   1c44c:	strh	r0, [r5], #2
   1c450:	bne	1c430 <ReadCompressedUInt16Data+0x500>
   1c454:	mul	r0, r9, sl
   1c458:	sub	sp, fp, #28
   1c45c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c460 <ReadInt8Data>:
   1c460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c464:	add	fp, sp, #28
   1c468:	sub	sp, sp, #36	; 0x24
   1c46c:	sub	sp, sp, #2048	; 0x800
   1c470:	mov	r9, r0
   1c474:	mov	r0, #0
   1c478:	cmp	r9, #0
   1c47c:	movne	r5, r1
   1c480:	cmpne	r1, #0
   1c484:	bne	1c490 <ReadInt8Data+0x30>
   1c488:	sub	sp, fp, #28
   1c48c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c490:	ldr	r1, [r9]
   1c494:	cmp	r1, #0
   1c498:	beq	1c488 <ReadInt8Data+0x28>
   1c49c:	mov	r0, r2
   1c4a0:	mov	r7, r3
   1c4a4:	mov	r4, r2
   1c4a8:	bl	1924 <Mat_SizeOf@plt>
   1c4ac:	mov	sl, r0
   1c4b0:	sub	r0, r4, #1
   1c4b4:	mov	r8, #0
   1c4b8:	cmp	r0, #11
   1c4bc:	bhi	1dea8 <ReadInt8Data+0x1a48>
   1c4c0:	add	r1, pc, #4
   1c4c4:	ldr	r0, [r1, r0, lsl #2]
   1c4c8:	add	pc, r1, r0
   1c4cc:	.word	0x00000030
   1c4d0:	.word	0x000000e8
   1c4d4:	.word	0x00000124
   1c4d8:	.word	0x00000178
   1c4dc:	.word	0x000001cc
   1c4e0:	.word	0x00000220
   1c4e4:	.word	0x00000274
   1c4e8:	.word	0x000019dc
   1c4ec:	.word	0x000002d0
   1c4f0:	.word	0x000019dc
   1c4f4:	.word	0x000019dc
   1c4f8:	.word	0x0000032c
   1c4fc:	cmp	r7, #256	; 0x100
   1c500:	ble	1c5bc <ReadInt8Data+0x15c>
   1c504:	sub	r0, r7, #256	; 0x100
   1c508:	mov	r8, sl
   1c50c:	mov	sl, r5
   1c510:	mov	r5, #0
   1c514:	add	r6, sp, #32
   1c518:	mov	r4, #0
   1c51c:	str	r7, [sp, #12]
   1c520:	str	r0, [sp, #24]
   1c524:	ldr	r3, [r9]
   1c528:	mov	r0, r6
   1c52c:	mov	r1, r8
   1c530:	mov	r2, #256	; 0x100
   1c534:	bl	18b8 <fread@plt>
   1c538:	mov	r7, r9
   1c53c:	mov	r9, r0
   1c540:	add	r0, sl, r5
   1c544:	mov	r1, r6
   1c548:	mov	r2, #256	; 0x100
   1c54c:	bl	181c <memcpy@plt>
   1c550:	ldr	r0, [sp, #24]
   1c554:	add	r5, r5, #256	; 0x100
   1c558:	add	r4, r9, r4
   1c55c:	mov	r9, r7
   1c560:	cmp	r5, r0
   1c564:	blt	1c524 <ReadInt8Data+0xc4>
   1c568:	ldr	r0, [sp, #12]
   1c56c:	cmp	r5, r0
   1c570:	bge	1c5a8 <ReadInt8Data+0x148>
   1c574:	ldr	r3, [r9]
   1c578:	sub	r6, r0, r5
   1c57c:	add	r0, sp, #32
   1c580:	mov	r1, r8
   1c584:	mov	r2, r6
   1c588:	bl	18b8 <fread@plt>
   1c58c:	add	r4, r0, r4
   1c590:	cmp	r6, #1
   1c594:	blt	1c5a8 <ReadInt8Data+0x148>
   1c598:	add	r0, sl, r5
   1c59c:	add	r1, sp, #32
   1c5a0:	mov	r2, r6
   1c5a4:	bl	181c <memcpy@plt>
   1c5a8:	mov	sl, r8
   1c5ac:	mov	r8, r4
   1c5b0:	b	1e654 <ReadInt8Data+0x21f4>
   1c5b4:	cmp	r7, #256	; 0x100
   1c5b8:	bgt	1c874 <ReadInt8Data+0x414>
   1c5bc:	ldr	r3, [r9]
   1c5c0:	add	r0, sp, #32
   1c5c4:	mov	r1, sl
   1c5c8:	mov	r2, r7
   1c5cc:	bl	18b8 <fread@plt>
   1c5d0:	mov	r8, r0
   1c5d4:	cmp	r7, #1
   1c5d8:	blt	1e654 <ReadInt8Data+0x21f4>
   1c5dc:	add	r1, sp, #32
   1c5e0:	mov	r0, r5
   1c5e4:	mov	r2, r7
   1c5e8:	bl	181c <memcpy@plt>
   1c5ec:	b	1e654 <ReadInt8Data+0x21f4>
   1c5f0:	ldr	r0, [r9, #20]
   1c5f4:	cmp	r0, #0
   1c5f8:	beq	1c924 <ReadInt8Data+0x4c4>
   1c5fc:	cmp	r7, #256	; 0x100
   1c600:	bgt	1cdb8 <ReadInt8Data+0x958>
   1c604:	ldr	r3, [r9]
   1c608:	add	r4, sp, #32
   1c60c:	mov	r1, sl
   1c610:	mov	r2, r7
   1c614:	mov	r0, r4
   1c618:	bl	18b8 <fread@plt>
   1c61c:	mov	r8, r0
   1c620:	cmp	r7, #1
   1c624:	blt	1e654 <ReadInt8Data+0x21f4>
   1c628:	mov	r0, r4
   1c62c:	bl	1c20 <Mat_int16Swap>
   1c630:	strb	r0, [r5], #1
   1c634:	add	r4, r4, #2
   1c638:	subs	r7, r7, #1
   1c63c:	bne	1c628 <ReadInt8Data+0x1c8>
   1c640:	b	1e654 <ReadInt8Data+0x21f4>
   1c644:	ldr	r0, [r9, #20]
   1c648:	cmp	r0, #0
   1c64c:	beq	1c9bc <ReadInt8Data+0x55c>
   1c650:	cmp	r7, #256	; 0x100
   1c654:	bgt	1ce9c <ReadInt8Data+0xa3c>
   1c658:	ldr	r3, [r9]
   1c65c:	add	r4, sp, #32
   1c660:	mov	r1, sl
   1c664:	mov	r2, r7
   1c668:	mov	r0, r4
   1c66c:	bl	18b8 <fread@plt>
   1c670:	mov	r8, r0
   1c674:	cmp	r7, #1
   1c678:	blt	1e654 <ReadInt8Data+0x21f4>
   1c67c:	mov	r0, r4
   1c680:	bl	1c34 <Mat_uint16Swap>
   1c684:	strb	r0, [r5], #1
   1c688:	add	r4, r4, #2
   1c68c:	subs	r7, r7, #1
   1c690:	bne	1c67c <ReadInt8Data+0x21c>
   1c694:	b	1e654 <ReadInt8Data+0x21f4>
   1c698:	ldr	r0, [r9, #20]
   1c69c:	cmp	r0, #0
   1c6a0:	beq	1ca54 <ReadInt8Data+0x5f4>
   1c6a4:	cmp	r7, #256	; 0x100
   1c6a8:	bgt	1cf80 <ReadInt8Data+0xb20>
   1c6ac:	ldr	r3, [r9]
   1c6b0:	add	r4, sp, #32
   1c6b4:	mov	r1, sl
   1c6b8:	mov	r2, r7
   1c6bc:	mov	r0, r4
   1c6c0:	bl	18b8 <fread@plt>
   1c6c4:	mov	r8, r0
   1c6c8:	cmp	r7, #1
   1c6cc:	blt	1e654 <ReadInt8Data+0x21f4>
   1c6d0:	mov	r0, r4
   1c6d4:	bl	1bf8 <Mat_int32Swap>
   1c6d8:	strb	r0, [r5], #1
   1c6dc:	add	r4, r4, #4
   1c6e0:	subs	r7, r7, #1
   1c6e4:	bne	1c6d0 <ReadInt8Data+0x270>
   1c6e8:	b	1e654 <ReadInt8Data+0x21f4>
   1c6ec:	ldr	r0, [r9, #20]
   1c6f0:	cmp	r0, #0
   1c6f4:	beq	1cb04 <ReadInt8Data+0x6a4>
   1c6f8:	cmp	r7, #256	; 0x100
   1c6fc:	bgt	1d064 <ReadInt8Data+0xc04>
   1c700:	ldr	r3, [r9]
   1c704:	add	r4, sp, #32
   1c708:	mov	r1, sl
   1c70c:	mov	r2, r7
   1c710:	mov	r0, r4
   1c714:	bl	18b8 <fread@plt>
   1c718:	mov	r8, r0
   1c71c:	cmp	r7, #1
   1c720:	blt	1e654 <ReadInt8Data+0x21f4>
   1c724:	mov	r0, r4
   1c728:	bl	1c0c <Mat_uint32Swap>
   1c72c:	strb	r0, [r5], #1
   1c730:	add	r4, r4, #4
   1c734:	subs	r7, r7, #1
   1c738:	bne	1c724 <ReadInt8Data+0x2c4>
   1c73c:	b	1e654 <ReadInt8Data+0x21f4>
   1c740:	ldr	r0, [r9, #20]
   1c744:	cmp	r0, #0
   1c748:	beq	1cbb4 <ReadInt8Data+0x754>
   1c74c:	cmp	r7, #256	; 0x100
   1c750:	bgt	1d148 <ReadInt8Data+0xce8>
   1c754:	ldr	r3, [r9]
   1c758:	add	r4, sp, #32
   1c75c:	mov	r1, sl
   1c760:	mov	r2, r7
   1c764:	mov	r0, r4
   1c768:	bl	18b8 <fread@plt>
   1c76c:	mov	r8, r0
   1c770:	cmp	r7, #1
   1c774:	blt	1e654 <ReadInt8Data+0x21f4>
   1c778:	mov	r0, r4
   1c77c:	bl	1c4c <Mat_floatSwap>
   1c780:	vcvt.s32.f32	s0, s0
   1c784:	add	r4, r4, #4
   1c788:	subs	r7, r7, #1
   1c78c:	vmov	r0, s0
   1c790:	strb	r0, [r5], #1
   1c794:	bne	1c778 <ReadInt8Data+0x318>
   1c798:	b	1e654 <ReadInt8Data+0x21f4>
   1c79c:	ldr	r0, [r9, #20]
   1c7a0:	cmp	r0, #0
   1c7a4:	beq	1cc6c <ReadInt8Data+0x80c>
   1c7a8:	cmp	r7, #256	; 0x100
   1c7ac:	bgt	1d23c <ReadInt8Data+0xddc>
   1c7b0:	ldr	r3, [r9]
   1c7b4:	add	r4, sp, #32
   1c7b8:	mov	r1, sl
   1c7bc:	mov	r2, r7
   1c7c0:	mov	r0, r4
   1c7c4:	bl	18b8 <fread@plt>
   1c7c8:	mov	r8, r0
   1c7cc:	cmp	r7, #1
   1c7d0:	blt	1e654 <ReadInt8Data+0x21f4>
   1c7d4:	mov	r0, r4
   1c7d8:	bl	1c90 <Mat_doubleSwap>
   1c7dc:	vcvt.s32.f64	s0, d0
   1c7e0:	add	r4, r4, #8
   1c7e4:	subs	r7, r7, #1
   1c7e8:	vmov	r0, s0
   1c7ec:	strb	r0, [r5], #1
   1c7f0:	bne	1c7d4 <ReadInt8Data+0x374>
   1c7f4:	b	1e654 <ReadInt8Data+0x21f4>
   1c7f8:	ldr	r0, [r9, #20]
   1c7fc:	cmp	r0, #0
   1c800:	beq	1cd04 <ReadInt8Data+0x8a4>
   1c804:	cmp	r7, #256	; 0x100
   1c808:	bgt	1d330 <ReadInt8Data+0xed0>
   1c80c:	ldr	r3, [r9]
   1c810:	add	r6, sp, #32
   1c814:	mov	r1, sl
   1c818:	mov	r2, r7
   1c81c:	mov	r0, r6
   1c820:	bl	18b8 <fread@plt>
   1c824:	mov	r8, r0
   1c828:	cmp	r7, #1
   1c82c:	blt	1dea8 <ReadInt8Data+0x1a48>
   1c830:	str	r4, [sp, #4]
   1c834:	str	r9, [sp, #24]
   1c838:	mov	r9, r8
   1c83c:	mov	r8, sl
   1c840:	mov	sl, r5
   1c844:	mov	r4, r5
   1c848:	mov	r5, r7
   1c84c:	mov	r0, r6
   1c850:	bl	1b84 <Mat_int64Swap>
   1c854:	strb	r0, [r4], #1
   1c858:	add	r6, r6, #8
   1c85c:	subs	r5, r5, #1
   1c860:	bne	1c84c <ReadInt8Data+0x3ec>
   1c864:	mov	r5, sl
   1c868:	mov	sl, r8
   1c86c:	mov	r8, r9
   1c870:	b	1dea0 <ReadInt8Data+0x1a40>
   1c874:	mov	r0, sl
   1c878:	mov	sl, r9
   1c87c:	str	r7, [sp, #12]
   1c880:	add	r8, sp, #32
   1c884:	mov	r6, #0
   1c888:	mov	r9, r0
   1c88c:	sub	r0, r7, #256	; 0x100
   1c890:	mov	r7, r5
   1c894:	mov	r5, #0
   1c898:	str	r0, [sp, #24]
   1c89c:	ldr	r3, [sl]
   1c8a0:	mov	r0, r8
   1c8a4:	mov	r1, r9
   1c8a8:	mov	r2, #256	; 0x100
   1c8ac:	bl	18b8 <fread@plt>
   1c8b0:	mov	r4, r0
   1c8b4:	add	r0, r7, r5
   1c8b8:	mov	r1, r8
   1c8bc:	mov	r2, #256	; 0x100
   1c8c0:	bl	181c <memcpy@plt>
   1c8c4:	ldr	r0, [sp, #24]
   1c8c8:	add	r5, r5, #256	; 0x100
   1c8cc:	add	r6, r4, r6
   1c8d0:	cmp	r5, r0
   1c8d4:	blt	1c89c <ReadInt8Data+0x43c>
   1c8d8:	ldr	r0, [sp, #12]
   1c8dc:	mov	r8, r6
   1c8e0:	cmp	r5, r0
   1c8e4:	bge	1d428 <ReadInt8Data+0xfc8>
   1c8e8:	ldr	r3, [sl]
   1c8ec:	sub	r6, r0, r5
   1c8f0:	add	r0, sp, #32
   1c8f4:	mov	r1, r9
   1c8f8:	mov	sl, r9
   1c8fc:	mov	r2, r6
   1c900:	bl	18b8 <fread@plt>
   1c904:	add	r8, r0, r8
   1c908:	cmp	r6, #1
   1c90c:	blt	1e654 <ReadInt8Data+0x21f4>
   1c910:	add	r0, r7, r5
   1c914:	add	r1, sp, #32
   1c918:	mov	r2, r6
   1c91c:	bl	181c <memcpy@plt>
   1c920:	b	1e654 <ReadInt8Data+0x21f4>
   1c924:	cmp	r7, #256	; 0x100
   1c928:	bgt	1d430 <ReadInt8Data+0xfd0>
   1c92c:	ldr	r3, [r9]
   1c930:	add	r4, sp, #32
   1c934:	mov	r1, sl
   1c938:	mov	r2, r7
   1c93c:	mov	r0, r4
   1c940:	bl	18b8 <fread@plt>
   1c944:	mov	r8, r0
   1c948:	cmp	r7, #1
   1c94c:	blt	1e654 <ReadInt8Data+0x21f4>
   1c950:	mov	r0, #0
   1c954:	cmp	r7, #8
   1c958:	bcc	1e274 <ReadInt8Data+0x1e14>
   1c95c:	bic	r0, r7, #7
   1c960:	mov	r2, #1
   1c964:	mov	ip, r7
   1c968:	subs	r1, r0, #8
   1c96c:	add	r1, r2, r1, lsr #3
   1c970:	and	lr, r1, #1
   1c974:	beq	1e244 <ReadInt8Data+0x1de4>
   1c978:	sub	r3, r1, lr
   1c97c:	mov	r1, #0
   1c980:	mov	r7, #32
   1c984:	add	r6, r4, #16
   1c988:	vld1.16	{d16-d17}, [r4], r7
   1c98c:	mov	r2, r5
   1c990:	add	r5, r5, r1
   1c994:	subs	r3, r3, #2
   1c998:	add	r1, r1, #16
   1c99c:	vmovn.i16	d16, q8
   1c9a0:	vst1.8	{d16}, [r5]!
   1c9a4:	vld1.16	{d16-d17}, [r6]
   1c9a8:	vmovn.i16	d16, q8
   1c9ac:	vst1.8	{d16}, [r5]
   1c9b0:	mov	r5, r2
   1c9b4:	bne	1c984 <ReadInt8Data+0x524>
   1c9b8:	b	1e248 <ReadInt8Data+0x1de8>
   1c9bc:	cmp	r7, #256	; 0x100
   1c9c0:	bgt	1d594 <ReadInt8Data+0x1134>
   1c9c4:	ldr	r3, [r9]
   1c9c8:	add	r4, sp, #32
   1c9cc:	mov	r1, sl
   1c9d0:	mov	r2, r7
   1c9d4:	mov	r0, r4
   1c9d8:	bl	18b8 <fread@plt>
   1c9dc:	mov	r8, r0
   1c9e0:	cmp	r7, #1
   1c9e4:	blt	1e654 <ReadInt8Data+0x21f4>
   1c9e8:	mov	r0, #0
   1c9ec:	cmp	r7, #8
   1c9f0:	bcc	1e2c8 <ReadInt8Data+0x1e68>
   1c9f4:	bic	r0, r7, #7
   1c9f8:	mov	r2, #1
   1c9fc:	mov	ip, r7
   1ca00:	subs	r1, r0, #8
   1ca04:	add	r1, r2, r1, lsr #3
   1ca08:	and	lr, r1, #1
   1ca0c:	beq	1e298 <ReadInt8Data+0x1e38>
   1ca10:	sub	r3, r1, lr
   1ca14:	mov	r1, #0
   1ca18:	mov	r7, #32
   1ca1c:	add	r6, r4, #16
   1ca20:	vld1.16	{d16-d17}, [r4], r7
   1ca24:	mov	r2, r5
   1ca28:	add	r5, r5, r1
   1ca2c:	subs	r3, r3, #2
   1ca30:	add	r1, r1, #16
   1ca34:	vmovn.i16	d16, q8
   1ca38:	vst1.8	{d16}, [r5]!
   1ca3c:	vld1.16	{d16-d17}, [r6]
   1ca40:	vmovn.i16	d16, q8
   1ca44:	vst1.8	{d16}, [r5]
   1ca48:	mov	r5, r2
   1ca4c:	bne	1ca1c <ReadInt8Data+0x5bc>
   1ca50:	b	1e29c <ReadInt8Data+0x1e3c>
   1ca54:	cmp	r7, #256	; 0x100
   1ca58:	str	r5, [sp, #8]
   1ca5c:	bgt	1d6f8 <ReadInt8Data+0x1298>
   1ca60:	ldr	r3, [r9]
   1ca64:	add	r5, sp, #32
   1ca68:	mov	r1, sl
   1ca6c:	mov	r2, r7
   1ca70:	mov	r0, r5
   1ca74:	bl	18b8 <fread@plt>
   1ca78:	mov	r8, r0
   1ca7c:	cmp	r7, #1
   1ca80:	blt	1e654 <ReadInt8Data+0x21f4>
   1ca84:	mov	r9, #0
   1ca88:	cmp	r7, #4
   1ca8c:	bcc	1e324 <ReadInt8Data+0x1ec4>
   1ca90:	bic	r9, r7, #3
   1ca94:	mov	r2, #1
   1ca98:	mov	lr, r7
   1ca9c:	subs	r1, r9, #4
   1caa0:	add	r1, r2, r1, lsr #2
   1caa4:	and	ip, r1, #1
   1caa8:	beq	1e2ec <ReadInt8Data+0x1e8c>
   1caac:	ldr	r0, [sp, #8]
   1cab0:	sub	r3, r1, ip
   1cab4:	mov	r1, #0
   1cab8:	mov	r7, #32
   1cabc:	mov	r4, r5
   1cac0:	vld1.32	{d16-d17}, [r4], r7
   1cac4:	mov	r2, r0
   1cac8:	subs	r3, r3, #2
   1cacc:	vmovn.i32	d16, q8
   1cad0:	vuzp.8	d16, d17
   1cad4:	vmov.32	r6, d16[0]
   1cad8:	str	r6, [r2, r1]!
   1cadc:	add	r6, r5, #16
   1cae0:	add	r1, r1, #8
   1cae4:	mov	r5, r4
   1cae8:	vld1.32	{d16-d17}, [r6]
   1caec:	add	r2, r2, #4
   1caf0:	vmovn.i32	d16, q8
   1caf4:	vuzp.8	d16, d17
   1caf8:	vst1.32	{d16[0]}, [r2]
   1cafc:	bne	1cac0 <ReadInt8Data+0x660>
   1cb00:	b	1e2f0 <ReadInt8Data+0x1e90>
   1cb04:	cmp	r7, #256	; 0x100
   1cb08:	str	r5, [sp, #8]
   1cb0c:	bgt	1d884 <ReadInt8Data+0x1424>
   1cb10:	ldr	r3, [r9]
   1cb14:	add	r5, sp, #32
   1cb18:	mov	r1, sl
   1cb1c:	mov	r2, r7
   1cb20:	mov	r0, r5
   1cb24:	bl	18b8 <fread@plt>
   1cb28:	mov	r8, r0
   1cb2c:	cmp	r7, #1
   1cb30:	blt	1e654 <ReadInt8Data+0x21f4>
   1cb34:	mov	r9, #0
   1cb38:	cmp	r7, #4
   1cb3c:	bcc	1e384 <ReadInt8Data+0x1f24>
   1cb40:	bic	r9, r7, #3
   1cb44:	mov	r2, #1
   1cb48:	mov	lr, r7
   1cb4c:	subs	r1, r9, #4
   1cb50:	add	r1, r2, r1, lsr #2
   1cb54:	and	ip, r1, #1
   1cb58:	beq	1e34c <ReadInt8Data+0x1eec>
   1cb5c:	ldr	r0, [sp, #8]
   1cb60:	sub	r3, r1, ip
   1cb64:	mov	r1, #0
   1cb68:	mov	r7, #32
   1cb6c:	mov	r4, r5
   1cb70:	vld1.32	{d16-d17}, [r4], r7
   1cb74:	mov	r2, r0
   1cb78:	subs	r3, r3, #2
   1cb7c:	vmovn.i32	d16, q8
   1cb80:	vuzp.8	d16, d17
   1cb84:	vmov.32	r6, d16[0]
   1cb88:	str	r6, [r2, r1]!
   1cb8c:	add	r6, r5, #16
   1cb90:	add	r1, r1, #8
   1cb94:	mov	r5, r4
   1cb98:	vld1.32	{d16-d17}, [r6]
   1cb9c:	add	r2, r2, #4
   1cba0:	vmovn.i32	d16, q8
   1cba4:	vuzp.8	d16, d17
   1cba8:	vst1.32	{d16[0]}, [r2]
   1cbac:	bne	1cb70 <ReadInt8Data+0x710>
   1cbb0:	b	1e350 <ReadInt8Data+0x1ef0>
   1cbb4:	cmp	r7, #256	; 0x100
   1cbb8:	str	r5, [sp, #8]
   1cbbc:	bgt	1da14 <ReadInt8Data+0x15b4>
   1cbc0:	ldr	r3, [r9]
   1cbc4:	add	r5, sp, #32
   1cbc8:	mov	r1, sl
   1cbcc:	mov	r2, r7
   1cbd0:	mov	r0, r5
   1cbd4:	bl	18b8 <fread@plt>
   1cbd8:	mov	r8, r0
   1cbdc:	cmp	r7, #1
   1cbe0:	blt	1e654 <ReadInt8Data+0x21f4>
   1cbe4:	mov	r9, #0
   1cbe8:	cmp	r7, #4
   1cbec:	bcc	1e3e8 <ReadInt8Data+0x1f88>
   1cbf0:	bic	r9, r7, #3
   1cbf4:	mov	r2, #1
   1cbf8:	mov	lr, r7
   1cbfc:	subs	r1, r9, #4
   1cc00:	add	r1, r2, r1, lsr #2
   1cc04:	and	ip, r1, #1
   1cc08:	beq	1e3ac <ReadInt8Data+0x1f4c>
   1cc0c:	ldr	r0, [sp, #8]
   1cc10:	sub	r3, r1, ip
   1cc14:	mov	r1, #0
   1cc18:	mov	r7, #32
   1cc1c:	mov	r4, r5
   1cc20:	vld1.32	{d16-d17}, [r4], r7
   1cc24:	mov	r2, r0
   1cc28:	subs	r3, r3, #2
   1cc2c:	vcvt.s32.f32	q8, q8
   1cc30:	vmovn.i32	d16, q8
   1cc34:	vuzp.8	d16, d17
   1cc38:	vmov.32	r6, d16[0]
   1cc3c:	str	r6, [r2, r1]!
   1cc40:	add	r6, r5, #16
   1cc44:	add	r1, r1, #8
   1cc48:	mov	r5, r4
   1cc4c:	vld1.32	{d16-d17}, [r6]
   1cc50:	add	r2, r2, #4
   1cc54:	vcvt.s32.f32	q8, q8
   1cc58:	vmovn.i32	d16, q8
   1cc5c:	vuzp.8	d16, d17
   1cc60:	vst1.32	{d16[0]}, [r2]
   1cc64:	bne	1cc20 <ReadInt8Data+0x7c0>
   1cc68:	b	1e3b0 <ReadInt8Data+0x1f50>
   1cc6c:	cmp	r7, #256	; 0x100
   1cc70:	bgt	1dbb4 <ReadInt8Data+0x1754>
   1cc74:	ldr	r3, [r9]
   1cc78:	add	r4, sp, #32
   1cc7c:	mov	r1, sl
   1cc80:	mov	r2, r7
   1cc84:	mov	r0, r4
   1cc88:	bl	18b8 <fread@plt>
   1cc8c:	mov	r8, r0
   1cc90:	cmp	r7, #1
   1cc94:	blt	1e654 <ReadInt8Data+0x21f4>
   1cc98:	and	r1, r7, #1
   1cc9c:	mov	r0, #0
   1cca0:	beq	1cce4 <ReadInt8Data+0x884>
   1cca4:	sub	r2, r7, r1
   1cca8:	add	r3, r4, #8
   1ccac:	mov	r0, #0
   1ccb0:	vldr	d16, [r3, #-8]
   1ccb4:	mov	r6, r5
   1ccb8:	vcvt.s32.f64	s0, d16
   1ccbc:	vmov	r7, s0
   1ccc0:	strb	r7, [r6, r0]!
   1ccc4:	add	r0, r0, #2
   1ccc8:	vldr	d16, [r3]
   1cccc:	add	r3, r3, #16
   1ccd0:	cmp	r2, r0
   1ccd4:	vcvt.s32.f64	s0, d16
   1ccd8:	vmov	r7, s0
   1ccdc:	strb	r7, [r6, #1]
   1cce0:	bne	1ccb0 <ReadInt8Data+0x850>
   1cce4:	cmp	r1, #0
   1cce8:	beq	1e654 <ReadInt8Data+0x21f4>
   1ccec:	add	r1, r4, r0, lsl #3
   1ccf0:	vldr	d16, [r1]
   1ccf4:	vcvt.s32.f64	s0, d16
   1ccf8:	vmov	r1, s0
   1ccfc:	strb	r1, [r5, r0]
   1cd00:	b	1e654 <ReadInt8Data+0x21f4>
   1cd04:	cmp	r7, #256	; 0x100
   1cd08:	str	sl, [sp, #28]
   1cd0c:	str	r5, [sp, #8]
   1cd10:	bgt	1dd0c <ReadInt8Data+0x18ac>
   1cd14:	ldr	r3, [r9]
   1cd18:	ldr	r1, [sp, #28]
   1cd1c:	add	sl, sp, #32
   1cd20:	mov	r2, r7
   1cd24:	mov	r0, sl
   1cd28:	bl	18b8 <fread@plt>
   1cd2c:	mov	r8, r0
   1cd30:	cmp	r7, #1
   1cd34:	blt	1e45c <ReadInt8Data+0x1ffc>
   1cd38:	mov	r0, #0
   1cd3c:	beq	1e470 <ReadInt8Data+0x2010>
   1cd40:	bic	r0, r7, #1
   1cd44:	mov	r2, #1
   1cd48:	mov	lr, r7
   1cd4c:	str	r4, [sp, #4]
   1cd50:	subs	r1, r0, #2
   1cd54:	add	r1, r2, r1, lsr #1
   1cd58:	and	ip, r1, #1
   1cd5c:	beq	1e41c <ReadInt8Data+0x1fbc>
   1cd60:	ldr	r2, [sp, #8]
   1cd64:	sub	r3, r1, ip
   1cd68:	mov	r1, #0
   1cd6c:	mov	r7, #32
   1cd70:	add	r6, sl, #16
   1cd74:	vld1.64	{d16-d17}, [sl], r7
   1cd78:	mov	r4, r2
   1cd7c:	subs	r3, r3, #2
   1cd80:	vmovn.i64	d16, q8
   1cd84:	vmov.32	r5, d16[0]
   1cd88:	strb	r5, [r4, r1]!
   1cd8c:	vmov.32	r5, d16[1]
   1cd90:	add	r1, r1, #4
   1cd94:	strb	r5, [r4, #1]
   1cd98:	vld1.64	{d16-d17}, [r6]
   1cd9c:	vmovn.i64	d16, q8
   1cda0:	vmov.32	r6, d16[1]
   1cda4:	strb	r6, [r4, #3]
   1cda8:	vmov.32	r6, d16[0]
   1cdac:	strb	r6, [r4, #2]
   1cdb0:	bne	1cd70 <ReadInt8Data+0x910>
   1cdb4:	b	1e420 <ReadInt8Data+0x1fc0>
   1cdb8:	sub	r0, r7, #256	; 0x100
   1cdbc:	str	r9, [sp, #24]
   1cdc0:	mov	r9, r5
   1cdc4:	add	r1, r5, #256	; 0x100
   1cdc8:	mov	r8, #0
   1cdcc:	str	sl, [sp, #28]
   1cdd0:	str	r7, [sp, #12]
   1cdd4:	str	r0, [sp, #20]
   1cdd8:	mov	r0, #0
   1cddc:	mov	sl, r0
   1cde0:	ldr	r0, [sp, #24]
   1cde4:	mov	r5, r1
   1cde8:	ldr	r1, [sp, #28]
   1cdec:	add	r4, sp, #32
   1cdf0:	mov	r2, #256	; 0x100
   1cdf4:	ldr	r3, [r0]
   1cdf8:	mov	r0, r4
   1cdfc:	bl	18b8 <fread@plt>
   1ce00:	mov	r6, r0
   1ce04:	mov	r7, #0
   1ce08:	mov	r0, r4
   1ce0c:	bl	1c20 <Mat_int16Swap>
   1ce10:	strb	r0, [r9, r7]
   1ce14:	add	r7, r7, #1
   1ce18:	add	r4, r4, #2
   1ce1c:	cmp	r7, #256	; 0x100
   1ce20:	bne	1ce08 <ReadInt8Data+0x9a8>
   1ce24:	ldr	r2, [sp, #20]
   1ce28:	add	r0, sl, #256	; 0x100
   1ce2c:	add	r8, r6, r8
   1ce30:	add	r9, r9, #256	; 0x100
   1ce34:	add	r1, r5, #256	; 0x100
   1ce38:	cmp	r0, r2
   1ce3c:	blt	1cddc <ReadInt8Data+0x97c>
   1ce40:	ldr	r7, [sp, #12]
   1ce44:	cmp	r0, r7
   1ce48:	bge	1e650 <ReadInt8Data+0x21f0>
   1ce4c:	sub	r6, r7, r0
   1ce50:	ldr	r0, [sp, #24]
   1ce54:	ldr	r1, [sp, #28]
   1ce58:	add	r4, sp, #32
   1ce5c:	mov	r2, r6
   1ce60:	ldr	r3, [r0]
   1ce64:	mov	r0, r4
   1ce68:	bl	18b8 <fread@plt>
   1ce6c:	add	r8, r0, r8
   1ce70:	cmp	r6, #1
   1ce74:	blt	1e650 <ReadInt8Data+0x21f0>
   1ce78:	sub	r0, r7, sl
   1ce7c:	sub	r6, r0, #256	; 0x100
   1ce80:	mov	r0, r4
   1ce84:	bl	1c20 <Mat_int16Swap>
   1ce88:	strb	r0, [r5], #1
   1ce8c:	add	r4, r4, #2
   1ce90:	subs	r6, r6, #1
   1ce94:	bne	1ce80 <ReadInt8Data+0xa20>
   1ce98:	b	1e650 <ReadInt8Data+0x21f0>
   1ce9c:	sub	r0, r7, #256	; 0x100
   1cea0:	str	r9, [sp, #24]
   1cea4:	mov	r9, r5
   1cea8:	add	r1, r5, #256	; 0x100
   1ceac:	mov	r8, #0
   1ceb0:	str	sl, [sp, #28]
   1ceb4:	str	r7, [sp, #12]
   1ceb8:	str	r0, [sp, #20]
   1cebc:	mov	r0, #0
   1cec0:	mov	sl, r0
   1cec4:	ldr	r0, [sp, #24]
   1cec8:	mov	r5, r1
   1cecc:	ldr	r1, [sp, #28]
   1ced0:	add	r4, sp, #32
   1ced4:	mov	r2, #256	; 0x100
   1ced8:	ldr	r3, [r0]
   1cedc:	mov	r0, r4
   1cee0:	bl	18b8 <fread@plt>
   1cee4:	mov	r6, r0
   1cee8:	mov	r7, #0
   1ceec:	mov	r0, r4
   1cef0:	bl	1c34 <Mat_uint16Swap>
   1cef4:	strb	r0, [r9, r7]
   1cef8:	add	r7, r7, #1
   1cefc:	add	r4, r4, #2
   1cf00:	cmp	r7, #256	; 0x100
   1cf04:	bne	1ceec <ReadInt8Data+0xa8c>
   1cf08:	ldr	r2, [sp, #20]
   1cf0c:	add	r0, sl, #256	; 0x100
   1cf10:	add	r8, r6, r8
   1cf14:	add	r9, r9, #256	; 0x100
   1cf18:	add	r1, r5, #256	; 0x100
   1cf1c:	cmp	r0, r2
   1cf20:	blt	1cec0 <ReadInt8Data+0xa60>
   1cf24:	ldr	r7, [sp, #12]
   1cf28:	cmp	r0, r7
   1cf2c:	bge	1e650 <ReadInt8Data+0x21f0>
   1cf30:	sub	r6, r7, r0
   1cf34:	ldr	r0, [sp, #24]
   1cf38:	ldr	r1, [sp, #28]
   1cf3c:	add	r4, sp, #32
   1cf40:	mov	r2, r6
   1cf44:	ldr	r3, [r0]
   1cf48:	mov	r0, r4
   1cf4c:	bl	18b8 <fread@plt>
   1cf50:	add	r8, r0, r8
   1cf54:	cmp	r6, #1
   1cf58:	blt	1e650 <ReadInt8Data+0x21f0>
   1cf5c:	sub	r0, r7, sl
   1cf60:	sub	r6, r0, #256	; 0x100
   1cf64:	mov	r0, r4
   1cf68:	bl	1c34 <Mat_uint16Swap>
   1cf6c:	strb	r0, [r5], #1
   1cf70:	add	r4, r4, #2
   1cf74:	subs	r6, r6, #1
   1cf78:	bne	1cf64 <ReadInt8Data+0xb04>
   1cf7c:	b	1e650 <ReadInt8Data+0x21f0>
   1cf80:	sub	r0, r7, #256	; 0x100
   1cf84:	str	r9, [sp, #24]
   1cf88:	mov	r9, r5
   1cf8c:	add	r1, r5, #256	; 0x100
   1cf90:	mov	r8, #0
   1cf94:	str	sl, [sp, #28]
   1cf98:	str	r7, [sp, #12]
   1cf9c:	str	r0, [sp, #20]
   1cfa0:	mov	r0, #0
   1cfa4:	mov	sl, r0
   1cfa8:	ldr	r0, [sp, #24]
   1cfac:	mov	r5, r1
   1cfb0:	ldr	r1, [sp, #28]
   1cfb4:	add	r4, sp, #32
   1cfb8:	mov	r2, #256	; 0x100
   1cfbc:	ldr	r3, [r0]
   1cfc0:	mov	r0, r4
   1cfc4:	bl	18b8 <fread@plt>
   1cfc8:	mov	r6, r0
   1cfcc:	mov	r7, #0
   1cfd0:	mov	r0, r4
   1cfd4:	bl	1bf8 <Mat_int32Swap>
   1cfd8:	strb	r0, [r9, r7]
   1cfdc:	add	r7, r7, #1
   1cfe0:	add	r4, r4, #4
   1cfe4:	cmp	r7, #256	; 0x100
   1cfe8:	bne	1cfd0 <ReadInt8Data+0xb70>
   1cfec:	ldr	r2, [sp, #20]
   1cff0:	add	r0, sl, #256	; 0x100
   1cff4:	add	r8, r6, r8
   1cff8:	add	r9, r9, #256	; 0x100
   1cffc:	add	r1, r5, #256	; 0x100
   1d000:	cmp	r0, r2
   1d004:	blt	1cfa4 <ReadInt8Data+0xb44>
   1d008:	ldr	r7, [sp, #12]
   1d00c:	cmp	r0, r7
   1d010:	bge	1e650 <ReadInt8Data+0x21f0>
   1d014:	sub	r6, r7, r0
   1d018:	ldr	r0, [sp, #24]
   1d01c:	ldr	r1, [sp, #28]
   1d020:	add	r4, sp, #32
   1d024:	mov	r2, r6
   1d028:	ldr	r3, [r0]
   1d02c:	mov	r0, r4
   1d030:	bl	18b8 <fread@plt>
   1d034:	add	r8, r0, r8
   1d038:	cmp	r6, #1
   1d03c:	blt	1e650 <ReadInt8Data+0x21f0>
   1d040:	sub	r0, r7, sl
   1d044:	sub	r6, r0, #256	; 0x100
   1d048:	mov	r0, r4
   1d04c:	bl	1bf8 <Mat_int32Swap>
   1d050:	strb	r0, [r5], #1
   1d054:	add	r4, r4, #4
   1d058:	subs	r6, r6, #1
   1d05c:	bne	1d048 <ReadInt8Data+0xbe8>
   1d060:	b	1e650 <ReadInt8Data+0x21f0>
   1d064:	sub	r0, r7, #256	; 0x100
   1d068:	str	r9, [sp, #24]
   1d06c:	mov	r9, r5
   1d070:	add	r1, r5, #256	; 0x100
   1d074:	mov	r8, #0
   1d078:	str	sl, [sp, #28]
   1d07c:	str	r7, [sp, #12]
   1d080:	str	r0, [sp, #20]
   1d084:	mov	r0, #0
   1d088:	mov	sl, r0
   1d08c:	ldr	r0, [sp, #24]
   1d090:	mov	r5, r1
   1d094:	ldr	r1, [sp, #28]
   1d098:	add	r4, sp, #32
   1d09c:	mov	r2, #256	; 0x100
   1d0a0:	ldr	r3, [r0]
   1d0a4:	mov	r0, r4
   1d0a8:	bl	18b8 <fread@plt>
   1d0ac:	mov	r6, r0
   1d0b0:	mov	r7, #0
   1d0b4:	mov	r0, r4
   1d0b8:	bl	1c0c <Mat_uint32Swap>
   1d0bc:	strb	r0, [r9, r7]
   1d0c0:	add	r7, r7, #1
   1d0c4:	add	r4, r4, #4
   1d0c8:	cmp	r7, #256	; 0x100
   1d0cc:	bne	1d0b4 <ReadInt8Data+0xc54>
   1d0d0:	ldr	r2, [sp, #20]
   1d0d4:	add	r0, sl, #256	; 0x100
   1d0d8:	add	r8, r6, r8
   1d0dc:	add	r9, r9, #256	; 0x100
   1d0e0:	add	r1, r5, #256	; 0x100
   1d0e4:	cmp	r0, r2
   1d0e8:	blt	1d088 <ReadInt8Data+0xc28>
   1d0ec:	ldr	r7, [sp, #12]
   1d0f0:	cmp	r0, r7
   1d0f4:	bge	1e650 <ReadInt8Data+0x21f0>
   1d0f8:	sub	r6, r7, r0
   1d0fc:	ldr	r0, [sp, #24]
   1d100:	ldr	r1, [sp, #28]
   1d104:	add	r4, sp, #32
   1d108:	mov	r2, r6
   1d10c:	ldr	r3, [r0]
   1d110:	mov	r0, r4
   1d114:	bl	18b8 <fread@plt>
   1d118:	add	r8, r0, r8
   1d11c:	cmp	r6, #1
   1d120:	blt	1e650 <ReadInt8Data+0x21f0>
   1d124:	sub	r0, r7, sl
   1d128:	sub	r6, r0, #256	; 0x100
   1d12c:	mov	r0, r4
   1d130:	bl	1c0c <Mat_uint32Swap>
   1d134:	strb	r0, [r5], #1
   1d138:	add	r4, r4, #4
   1d13c:	subs	r6, r6, #1
   1d140:	bne	1d12c <ReadInt8Data+0xccc>
   1d144:	b	1e650 <ReadInt8Data+0x21f0>
   1d148:	sub	r0, r7, #256	; 0x100
   1d14c:	str	sl, [sp, #28]
   1d150:	mov	sl, r5
   1d154:	add	r1, r5, #256	; 0x100
   1d158:	mov	r8, #0
   1d15c:	str	r9, [sp, #24]
   1d160:	str	r7, [sp, #12]
   1d164:	str	r0, [sp, #20]
   1d168:	mov	r0, #0
   1d16c:	mov	r9, r0
   1d170:	ldr	r0, [sp, #24]
   1d174:	mov	r5, r1
   1d178:	ldr	r1, [sp, #28]
   1d17c:	add	r4, sp, #32
   1d180:	mov	r2, #256	; 0x100
   1d184:	ldr	r3, [r0]
   1d188:	mov	r0, r4
   1d18c:	bl	18b8 <fread@plt>
   1d190:	mov	r6, r0
   1d194:	mov	r7, #0
   1d198:	mov	r0, r4
   1d19c:	bl	1c4c <Mat_floatSwap>
   1d1a0:	vcvt.s32.f32	s0, s0
   1d1a4:	add	r4, r4, #4
   1d1a8:	vmov	r0, s0
   1d1ac:	strb	r0, [sl, r7]
   1d1b0:	add	r7, r7, #1
   1d1b4:	cmp	r7, #256	; 0x100
   1d1b8:	bne	1d198 <ReadInt8Data+0xd38>
   1d1bc:	ldr	r2, [sp, #20]
   1d1c0:	add	r0, r9, #256	; 0x100
   1d1c4:	add	r8, r6, r8
   1d1c8:	add	sl, sl, #256	; 0x100
   1d1cc:	add	r1, r5, #256	; 0x100
   1d1d0:	cmp	r0, r2
   1d1d4:	blt	1d16c <ReadInt8Data+0xd0c>
   1d1d8:	ldr	r7, [sp, #12]
   1d1dc:	cmp	r0, r7
   1d1e0:	bge	1e650 <ReadInt8Data+0x21f0>
   1d1e4:	sub	r6, r7, r0
   1d1e8:	ldr	r0, [sp, #24]
   1d1ec:	ldr	r1, [sp, #28]
   1d1f0:	add	r4, sp, #32
   1d1f4:	mov	r2, r6
   1d1f8:	ldr	r3, [r0]
   1d1fc:	mov	r0, r4
   1d200:	bl	18b8 <fread@plt>
   1d204:	add	r8, r0, r8
   1d208:	cmp	r6, #1
   1d20c:	blt	1e650 <ReadInt8Data+0x21f0>
   1d210:	sub	r0, r7, r9
   1d214:	sub	r6, r0, #256	; 0x100
   1d218:	mov	r0, r4
   1d21c:	bl	1c4c <Mat_floatSwap>
   1d220:	vcvt.s32.f32	s0, s0
   1d224:	add	r4, r4, #4
   1d228:	subs	r6, r6, #1
   1d22c:	vmov	r0, s0
   1d230:	strb	r0, [r5], #1
   1d234:	bne	1d218 <ReadInt8Data+0xdb8>
   1d238:	b	1e650 <ReadInt8Data+0x21f0>
   1d23c:	sub	r0, r7, #256	; 0x100
   1d240:	str	sl, [sp, #28]
   1d244:	mov	sl, r5
   1d248:	add	r1, r5, #256	; 0x100
   1d24c:	mov	r8, #0
   1d250:	str	r9, [sp, #24]
   1d254:	str	r7, [sp, #12]
   1d258:	str	r0, [sp, #20]
   1d25c:	mov	r0, #0
   1d260:	mov	r9, r0
   1d264:	ldr	r0, [sp, #24]
   1d268:	mov	r5, r1
   1d26c:	ldr	r1, [sp, #28]
   1d270:	add	r4, sp, #32
   1d274:	mov	r2, #256	; 0x100
   1d278:	ldr	r3, [r0]
   1d27c:	mov	r0, r4
   1d280:	bl	18b8 <fread@plt>
   1d284:	mov	r6, r0
   1d288:	mov	r7, #0
   1d28c:	mov	r0, r4
   1d290:	bl	1c90 <Mat_doubleSwap>
   1d294:	vcvt.s32.f64	s0, d0
   1d298:	add	r4, r4, #8
   1d29c:	vmov	r0, s0
   1d2a0:	strb	r0, [sl, r7]
   1d2a4:	add	r7, r7, #1
   1d2a8:	cmp	r7, #256	; 0x100
   1d2ac:	bne	1d28c <ReadInt8Data+0xe2c>
   1d2b0:	ldr	r2, [sp, #20]
   1d2b4:	add	r0, r9, #256	; 0x100
   1d2b8:	add	r8, r6, r8
   1d2bc:	add	sl, sl, #256	; 0x100
   1d2c0:	add	r1, r5, #256	; 0x100
   1d2c4:	cmp	r0, r2
   1d2c8:	blt	1d260 <ReadInt8Data+0xe00>
   1d2cc:	ldr	r7, [sp, #12]
   1d2d0:	cmp	r0, r7
   1d2d4:	bge	1e650 <ReadInt8Data+0x21f0>
   1d2d8:	sub	r6, r7, r0
   1d2dc:	ldr	r0, [sp, #24]
   1d2e0:	ldr	r1, [sp, #28]
   1d2e4:	add	r4, sp, #32
   1d2e8:	mov	r2, r6
   1d2ec:	ldr	r3, [r0]
   1d2f0:	mov	r0, r4
   1d2f4:	bl	18b8 <fread@plt>
   1d2f8:	add	r8, r0, r8
   1d2fc:	cmp	r6, #1
   1d300:	blt	1e650 <ReadInt8Data+0x21f0>
   1d304:	sub	r0, r7, r9
   1d308:	sub	r6, r0, #256	; 0x100
   1d30c:	mov	r0, r4
   1d310:	bl	1c90 <Mat_doubleSwap>
   1d314:	vcvt.s32.f64	s0, d0
   1d318:	add	r4, r4, #8
   1d31c:	subs	r6, r6, #1
   1d320:	vmov	r0, s0
   1d324:	strb	r0, [r5], #1
   1d328:	bne	1d30c <ReadInt8Data+0xeac>
   1d32c:	b	1e650 <ReadInt8Data+0x21f0>
   1d330:	sub	r0, r7, #256	; 0x100
   1d334:	str	r7, [sp, #12]
   1d338:	add	r1, r5, #256	; 0x100
   1d33c:	mov	r7, r5
   1d340:	mov	r8, #0
   1d344:	str	r4, [sp, #4]
   1d348:	str	r9, [sp, #24]
   1d34c:	str	sl, [sp, #28]
   1d350:	str	r5, [sp, #8]
   1d354:	str	r0, [sp, #20]
   1d358:	mov	r0, #0
   1d35c:	mov	r9, r0
   1d360:	ldr	r0, [sp, #24]
   1d364:	mov	r5, r1
   1d368:	ldr	r1, [sp, #28]
   1d36c:	add	r4, sp, #32
   1d370:	mov	r2, #256	; 0x100
   1d374:	mov	sl, r8
   1d378:	ldr	r3, [r0]
   1d37c:	mov	r0, r4
   1d380:	bl	18b8 <fread@plt>
   1d384:	mov	r6, r0
   1d388:	mov	r8, #0
   1d38c:	mov	r0, r4
   1d390:	bl	1b84 <Mat_int64Swap>
   1d394:	strb	r0, [r7, r8]
   1d398:	add	r8, r8, #1
   1d39c:	add	r4, r4, #8
   1d3a0:	cmp	r8, #256	; 0x100
   1d3a4:	bne	1d38c <ReadInt8Data+0xf2c>
   1d3a8:	ldr	r2, [sp, #20]
   1d3ac:	add	r0, r9, #256	; 0x100
   1d3b0:	mov	r8, sl
   1d3b4:	add	r8, r6, sl
   1d3b8:	add	r7, r7, #256	; 0x100
   1d3bc:	add	r1, r5, #256	; 0x100
   1d3c0:	cmp	r0, r2
   1d3c4:	blt	1d35c <ReadInt8Data+0xefc>
   1d3c8:	ldr	r7, [sp, #12]
   1d3cc:	cmp	r0, r7
   1d3d0:	bge	1de98 <ReadInt8Data+0x1a38>
   1d3d4:	sub	r4, r7, r0
   1d3d8:	ldr	r0, [sp, #24]
   1d3dc:	ldr	sl, [sp, #28]
   1d3e0:	add	r6, sp, #32
   1d3e4:	mov	r2, r4
   1d3e8:	ldr	r3, [r0]
   1d3ec:	mov	r0, r6
   1d3f0:	mov	r1, sl
   1d3f4:	bl	18b8 <fread@plt>
   1d3f8:	add	r8, r0, r8
   1d3fc:	cmp	r4, #1
   1d400:	blt	1de9c <ReadInt8Data+0x1a3c>
   1d404:	sub	r0, r7, r9
   1d408:	sub	r4, r0, #256	; 0x100
   1d40c:	mov	r0, r6
   1d410:	bl	1b84 <Mat_int64Swap>
   1d414:	strb	r0, [r5], #1
   1d418:	add	r6, r6, #8
   1d41c:	subs	r4, r4, #1
   1d420:	bne	1d40c <ReadInt8Data+0xfac>
   1d424:	b	1de9c <ReadInt8Data+0x1a3c>
   1d428:	mov	sl, r9
   1d42c:	b	1e654 <ReadInt8Data+0x21f4>
   1d430:	str	r9, [sp, #24]
   1d434:	str	sl, [sp, #28]
   1d438:	add	r0, r5, #256	; 0x100
   1d43c:	str	r7, [sp, #12]
   1d440:	sub	sl, r7, #256	; 0x100
   1d444:	mov	r6, #0
   1d448:	add	r9, sp, #32
   1d44c:	mov	r7, #32
   1d450:	mov	r8, #0
   1d454:	str	r5, [sp, #8]
   1d458:	mov	r4, r0
   1d45c:	ldr	r0, [sp, #24]
   1d460:	ldr	r1, [sp, #28]
   1d464:	mov	r2, #256	; 0x100
   1d468:	str	r6, [sp, #20]
   1d46c:	ldr	r3, [r0]
   1d470:	mov	r0, r9
   1d474:	bl	18b8 <fread@plt>
   1d478:	mov	r1, r9
   1d47c:	mov	r2, #0
   1d480:	add	r3, r1, #16
   1d484:	vld1.16	{d16-d17}, [r1], r7
   1d488:	add	r6, r5, r2
   1d48c:	add	r2, r2, #16
   1d490:	cmp	r2, #256	; 0x100
   1d494:	vmovn.i16	d16, q8
   1d498:	vst1.8	{d16}, [r6]!
   1d49c:	vld1.16	{d16-d17}, [r3]
   1d4a0:	vmovn.i16	d16, q8
   1d4a4:	vst1.8	{d16}, [r6]
   1d4a8:	bne	1d480 <ReadInt8Data+0x1020>
   1d4ac:	ldr	r1, [sp, #20]
   1d4b0:	add	r8, r0, r8
   1d4b4:	add	r5, r5, #256	; 0x100
   1d4b8:	add	r0, r4, #256	; 0x100
   1d4bc:	add	r6, r1, #256	; 0x100
   1d4c0:	cmp	r6, sl
   1d4c4:	blt	1d458 <ReadInt8Data+0xff8>
   1d4c8:	ldr	r0, [sp, #12]
   1d4cc:	cmp	r6, r0
   1d4d0:	bge	1e650 <ReadInt8Data+0x21f0>
   1d4d4:	sub	r9, r0, r6
   1d4d8:	ldr	r0, [sp, #24]
   1d4dc:	ldr	r1, [sp, #28]
   1d4e0:	add	r5, sp, #32
   1d4e4:	mov	r2, r9
   1d4e8:	ldr	r3, [r0]
   1d4ec:	mov	r0, r5
   1d4f0:	bl	18b8 <fread@plt>
   1d4f4:	add	r8, r0, r8
   1d4f8:	cmp	r9, #1
   1d4fc:	blt	1e650 <ReadInt8Data+0x21f0>
   1d500:	mov	lr, #0
   1d504:	cmp	r9, #8
   1d508:	bcc	1e544 <ReadInt8Data+0x20e4>
   1d50c:	bic	lr, r9, #7
   1d510:	mov	r1, #1
   1d514:	mov	sl, r8
   1d518:	subs	r2, lr, #8
   1d51c:	add	r2, r1, r2, lsr #3
   1d520:	and	ip, r2, #1
   1d524:	beq	1e50c <ReadInt8Data+0x20ac>
   1d528:	ldr	r0, [sp, #12]
   1d52c:	ldr	r2, [sp, #20]
   1d530:	mov	r8, #32
   1d534:	sub	r2, r0, r2
   1d538:	ldr	r0, [sp, #8]
   1d53c:	sub	r2, r2, #256	; 0x100
   1d540:	bic	r2, r2, #7
   1d544:	sub	r2, r2, #8
   1d548:	add	r1, r1, r2, lsr #3
   1d54c:	mvn	r3, r2, lsr #3
   1d550:	add	r7, r0, r6
   1d554:	mov	r2, #0
   1d558:	and	r1, r1, #1
   1d55c:	add	r3, r3, r1
   1d560:	add	r0, r5, #16
   1d564:	vld1.16	{d16-d17}, [r5], r8
   1d568:	add	r1, r7, r2
   1d56c:	adds	r3, r3, #2
   1d570:	add	r2, r2, #16
   1d574:	vmovn.i16	d16, q8
   1d578:	vst1.8	{d16}, [r1]
   1d57c:	vld1.16	{d16-d17}, [r0]
   1d580:	add	r0, r1, #8
   1d584:	vmovn.i16	d16, q8
   1d588:	vst1.8	{d16}, [r0]
   1d58c:	bne	1d560 <ReadInt8Data+0x1100>
   1d590:	b	1e510 <ReadInt8Data+0x20b0>
   1d594:	str	r9, [sp, #24]
   1d598:	str	sl, [sp, #28]
   1d59c:	add	r0, r5, #256	; 0x100
   1d5a0:	str	r7, [sp, #12]
   1d5a4:	sub	sl, r7, #256	; 0x100
   1d5a8:	mov	r6, #0
   1d5ac:	add	r9, sp, #32
   1d5b0:	mov	r7, #32
   1d5b4:	mov	r8, #0
   1d5b8:	str	r5, [sp, #8]
   1d5bc:	mov	r4, r0
   1d5c0:	ldr	r0, [sp, #24]
   1d5c4:	ldr	r1, [sp, #28]
   1d5c8:	mov	r2, #256	; 0x100
   1d5cc:	str	r6, [sp, #20]
   1d5d0:	ldr	r3, [r0]
   1d5d4:	mov	r0, r9
   1d5d8:	bl	18b8 <fread@plt>
   1d5dc:	mov	r1, r9
   1d5e0:	mov	r2, #0
   1d5e4:	add	r3, r1, #16
   1d5e8:	vld1.16	{d16-d17}, [r1], r7
   1d5ec:	add	r6, r5, r2
   1d5f0:	add	r2, r2, #16
   1d5f4:	cmp	r2, #256	; 0x100
   1d5f8:	vmovn.i16	d16, q8
   1d5fc:	vst1.8	{d16}, [r6]!
   1d600:	vld1.16	{d16-d17}, [r3]
   1d604:	vmovn.i16	d16, q8
   1d608:	vst1.8	{d16}, [r6]
   1d60c:	bne	1d5e4 <ReadInt8Data+0x1184>
   1d610:	ldr	r1, [sp, #20]
   1d614:	add	r8, r0, r8
   1d618:	add	r5, r5, #256	; 0x100
   1d61c:	add	r0, r4, #256	; 0x100
   1d620:	add	r6, r1, #256	; 0x100
   1d624:	cmp	r6, sl
   1d628:	blt	1d5bc <ReadInt8Data+0x115c>
   1d62c:	ldr	r0, [sp, #12]
   1d630:	cmp	r6, r0
   1d634:	bge	1e650 <ReadInt8Data+0x21f0>
   1d638:	sub	r9, r0, r6
   1d63c:	ldr	r0, [sp, #24]
   1d640:	ldr	r1, [sp, #28]
   1d644:	add	r5, sp, #32
   1d648:	mov	r2, r9
   1d64c:	ldr	r3, [r0]
   1d650:	mov	r0, r5
   1d654:	bl	18b8 <fread@plt>
   1d658:	add	r8, r0, r8
   1d65c:	cmp	r9, #1
   1d660:	blt	1e650 <ReadInt8Data+0x21f0>
   1d664:	mov	lr, #0
   1d668:	cmp	r9, #8
   1d66c:	bcc	1e5b0 <ReadInt8Data+0x2150>
   1d670:	bic	lr, r9, #7
   1d674:	mov	r1, #1
   1d678:	mov	sl, r8
   1d67c:	subs	r2, lr, #8
   1d680:	add	r2, r1, r2, lsr #3
   1d684:	and	ip, r2, #1
   1d688:	beq	1e578 <ReadInt8Data+0x2118>
   1d68c:	ldr	r0, [sp, #12]
   1d690:	ldr	r2, [sp, #20]
   1d694:	mov	r8, #32
   1d698:	sub	r2, r0, r2
   1d69c:	ldr	r0, [sp, #8]
   1d6a0:	sub	r2, r2, #256	; 0x100
   1d6a4:	bic	r2, r2, #7
   1d6a8:	sub	r2, r2, #8
   1d6ac:	add	r1, r1, r2, lsr #3
   1d6b0:	mvn	r3, r2, lsr #3
   1d6b4:	add	r7, r0, r6
   1d6b8:	mov	r2, #0
   1d6bc:	and	r1, r1, #1
   1d6c0:	add	r3, r3, r1
   1d6c4:	add	r0, r5, #16
   1d6c8:	vld1.16	{d16-d17}, [r5], r8
   1d6cc:	add	r1, r7, r2
   1d6d0:	adds	r3, r3, #2
   1d6d4:	add	r2, r2, #16
   1d6d8:	vmovn.i16	d16, q8
   1d6dc:	vst1.8	{d16}, [r1]
   1d6e0:	vld1.16	{d16-d17}, [r0]
   1d6e4:	add	r0, r1, #8
   1d6e8:	vmovn.i16	d16, q8
   1d6ec:	vst1.8	{d16}, [r0]
   1d6f0:	bne	1d6c4 <ReadInt8Data+0x1264>
   1d6f4:	b	1e57c <ReadInt8Data+0x211c>
   1d6f8:	str	r9, [sp, #24]
   1d6fc:	str	sl, [sp, #28]
   1d700:	add	r0, r5, #256	; 0x100
   1d704:	mov	r8, r5
   1d708:	str	r7, [sp, #12]
   1d70c:	sub	r5, r7, #256	; 0x100
   1d710:	mov	r6, #0
   1d714:	add	r9, sp, #32
   1d718:	mov	r7, #32
   1d71c:	mov	sl, #0
   1d720:	str	r0, [sp, #20]
   1d724:	ldr	r0, [sp, #24]
   1d728:	ldr	r1, [sp, #28]
   1d72c:	mov	r2, #256	; 0x100
   1d730:	str	r6, [sp, #16]
   1d734:	ldr	r3, [r0]
   1d738:	mov	r0, r9
   1d73c:	bl	18b8 <fread@plt>
   1d740:	mov	r3, r9
   1d744:	mov	r1, #0
   1d748:	mov	r2, r9
   1d74c:	vld1.32	{d16-d17}, [r2], r7
   1d750:	mov	r4, r8
   1d754:	add	r3, r3, #16
   1d758:	vmovn.i32	d16, q8
   1d75c:	vuzp.8	d16, d17
   1d760:	vmov.32	r6, d16[0]
   1d764:	str	r6, [r4, r1]!
   1d768:	add	r1, r1, #8
   1d76c:	vld1.32	{d16-d17}, [r3]
   1d770:	add	r3, r4, #4
   1d774:	cmp	r1, #256	; 0x100
   1d778:	vmovn.i32	d16, q8
   1d77c:	vuzp.8	d16, d17
   1d780:	vst1.32	{d16[0]}, [r3]
   1d784:	mov	r3, r2
   1d788:	bne	1d74c <ReadInt8Data+0x12ec>
   1d78c:	ldr	r4, [sp, #16]
   1d790:	add	sl, r0, sl
   1d794:	ldr	r0, [sp, #20]
   1d798:	add	r8, r8, #256	; 0x100
   1d79c:	add	r6, r4, #256	; 0x100
   1d7a0:	add	r0, r0, #256	; 0x100
   1d7a4:	cmp	r6, r5
   1d7a8:	blt	1d720 <ReadInt8Data+0x12c0>
   1d7ac:	ldr	r0, [sp, #12]
   1d7b0:	cmp	r6, r0
   1d7b4:	bge	1e228 <ReadInt8Data+0x1dc8>
   1d7b8:	sub	r9, r0, r6
   1d7bc:	ldr	r0, [sp, #24]
   1d7c0:	ldr	r1, [sp, #28]
   1d7c4:	add	r7, sp, #32
   1d7c8:	mov	r2, r9
   1d7cc:	ldr	r3, [r0]
   1d7d0:	mov	r0, r7
   1d7d4:	bl	18b8 <fread@plt>
   1d7d8:	mov	r8, sl
   1d7dc:	add	r8, r0, sl
   1d7e0:	cmp	r9, #1
   1d7e4:	blt	1e650 <ReadInt8Data+0x21f0>
   1d7e8:	mov	lr, #0
   1d7ec:	cmp	r9, #4
   1d7f0:	bcc	1e620 <ReadInt8Data+0x21c0>
   1d7f4:	bic	lr, r9, #3
   1d7f8:	mov	r0, #1
   1d7fc:	subs	r1, lr, #4
   1d800:	add	r1, r0, r1, lsr #2
   1d804:	and	ip, r1, #1
   1d808:	beq	1e5e4 <ReadInt8Data+0x2184>
   1d80c:	ldr	r1, [sp, #12]
   1d810:	ldr	sl, [sp, #8]
   1d814:	mov	r5, r7
   1d818:	sub	r1, r1, r4
   1d81c:	sub	r1, r1, #256	; 0x100
   1d820:	bic	r1, r1, #3
   1d824:	sub	r1, r1, #4
   1d828:	add	r0, r0, r1, lsr #2
   1d82c:	mvn	r2, r1, lsr #2
   1d830:	mov	r1, #32
   1d834:	and	r0, r0, #1
   1d838:	add	r3, r2, r0
   1d83c:	add	r0, sl, r6
   1d840:	mov	r2, #0
   1d844:	vld1.32	{d16-d17}, [r5], r1
   1d848:	add	r4, r0, r2
   1d84c:	add	r7, r7, #16
   1d850:	adds	r3, r3, #2
   1d854:	add	r2, r2, #8
   1d858:	vmovn.i32	d16, q8
   1d85c:	vuzp.8	d16, d17
   1d860:	vst1.32	{d16[0]}, [r4]
   1d864:	add	r4, r4, #4
   1d868:	vld1.32	{d16-d17}, [r7]
   1d86c:	mov	r7, r5
   1d870:	vmovn.i32	d16, q8
   1d874:	vuzp.8	d16, d17
   1d878:	vst1.32	{d16[0]}, [r4]
   1d87c:	bne	1d844 <ReadInt8Data+0x13e4>
   1d880:	b	1e5ec <ReadInt8Data+0x218c>
   1d884:	str	r9, [sp, #24]
   1d888:	str	sl, [sp, #28]
   1d88c:	add	r0, r5, #256	; 0x100
   1d890:	mov	sl, r5
   1d894:	str	r7, [sp, #12]
   1d898:	sub	r5, r7, #256	; 0x100
   1d89c:	mov	r6, #0
   1d8a0:	add	r9, sp, #32
   1d8a4:	mov	r7, #32
   1d8a8:	mov	r8, #0
   1d8ac:	str	r0, [sp, #20]
   1d8b0:	ldr	r0, [sp, #24]
   1d8b4:	ldr	r1, [sp, #28]
   1d8b8:	mov	r2, #256	; 0x100
   1d8bc:	str	r6, [sp, #16]
   1d8c0:	ldr	r3, [r0]
   1d8c4:	mov	r0, r9
   1d8c8:	bl	18b8 <fread@plt>
   1d8cc:	mov	r3, r9
   1d8d0:	mov	r1, #0
   1d8d4:	mov	r2, r9
   1d8d8:	vld1.32	{d16-d17}, [r2], r7
   1d8dc:	mov	r4, sl
   1d8e0:	add	r3, r3, #16
   1d8e4:	vmovn.i32	d16, q8
   1d8e8:	vuzp.8	d16, d17
   1d8ec:	vmov.32	r6, d16[0]
   1d8f0:	str	r6, [r4, r1]!
   1d8f4:	add	r1, r1, #8
   1d8f8:	vld1.32	{d16-d17}, [r3]
   1d8fc:	add	r3, r4, #4
   1d900:	cmp	r1, #256	; 0x100
   1d904:	vmovn.i32	d16, q8
   1d908:	vuzp.8	d16, d17
   1d90c:	vst1.32	{d16[0]}, [r3]
   1d910:	mov	r3, r2
   1d914:	bne	1d8d8 <ReadInt8Data+0x1478>
   1d918:	ldr	r4, [sp, #16]
   1d91c:	add	r8, r0, r8
   1d920:	ldr	r0, [sp, #20]
   1d924:	add	sl, sl, #256	; 0x100
   1d928:	add	r6, r4, #256	; 0x100
   1d92c:	add	r0, r0, #256	; 0x100
   1d930:	cmp	r6, r5
   1d934:	blt	1d8ac <ReadInt8Data+0x144c>
   1d938:	ldr	r0, [sp, #12]
   1d93c:	cmp	r6, r0
   1d940:	bge	1e650 <ReadInt8Data+0x21f0>
   1d944:	sub	r5, r0, r6
   1d948:	ldr	r0, [sp, #24]
   1d94c:	ldr	sl, [sp, #28]
   1d950:	add	r9, sp, #32
   1d954:	mov	r2, r5
   1d958:	ldr	r3, [r0]
   1d95c:	mov	r0, r9
   1d960:	mov	r1, sl
   1d964:	bl	18b8 <fread@plt>
   1d968:	add	r8, r0, r8
   1d96c:	cmp	r5, #1
   1d970:	blt	1e654 <ReadInt8Data+0x21f4>
   1d974:	mov	lr, #0
   1d978:	cmp	r5, #4
   1d97c:	bcc	1e6a4 <ReadInt8Data+0x2244>
   1d980:	bic	lr, r5, #3
   1d984:	mov	r2, #1
   1d988:	str	r5, [sp, #24]
   1d98c:	subs	r1, lr, #4
   1d990:	add	r1, r2, r1, lsr #2
   1d994:	and	ip, r1, #1
   1d998:	beq	1e660 <ReadInt8Data+0x2200>
   1d99c:	ldr	r0, [sp, #12]
   1d9a0:	ldr	sl, [sp, #8]
   1d9a4:	mov	r5, r9
   1d9a8:	sub	r3, r0, r4
   1d9ac:	mov	r4, #32
   1d9b0:	sub	r3, r3, #256	; 0x100
   1d9b4:	bic	r3, r3, #3
   1d9b8:	sub	r3, r3, #4
   1d9bc:	add	r2, r2, r3, lsr #2
   1d9c0:	mvn	r7, r3, lsr #2
   1d9c4:	and	r2, r2, #1
   1d9c8:	add	r3, r7, r2
   1d9cc:	add	r7, sl, r6
   1d9d0:	mov	r2, #0
   1d9d4:	vld1.32	{d16-d17}, [r5], r4
   1d9d8:	add	r1, r7, r2
   1d9dc:	add	r0, r9, #16
   1d9e0:	adds	r3, r3, #2
   1d9e4:	add	r2, r2, #8
   1d9e8:	mov	r9, r5
   1d9ec:	vmovn.i32	d16, q8
   1d9f0:	vuzp.8	d16, d17
   1d9f4:	vst1.32	{d16[0]}, [r1]
   1d9f8:	vld1.32	{d16-d17}, [r0]
   1d9fc:	add	r0, r1, #4
   1da00:	vmovn.i32	d16, q8
   1da04:	vuzp.8	d16, d17
   1da08:	vst1.32	{d16[0]}, [r0]
   1da0c:	bne	1d9d4 <ReadInt8Data+0x1574>
   1da10:	b	1e668 <ReadInt8Data+0x2208>
   1da14:	str	r9, [sp, #24]
   1da18:	str	sl, [sp, #28]
   1da1c:	add	r0, r5, #256	; 0x100
   1da20:	mov	r4, r5
   1da24:	sub	r5, r7, #256	; 0x100
   1da28:	mov	r6, #0
   1da2c:	add	r9, sp, #32
   1da30:	mov	sl, #32
   1da34:	mov	r8, #0
   1da38:	str	r7, [sp, #12]
   1da3c:	str	r0, [sp, #16]
   1da40:	ldr	r0, [sp, #24]
   1da44:	ldr	r1, [sp, #28]
   1da48:	mov	r2, #256	; 0x100
   1da4c:	str	r6, [sp, #20]
   1da50:	ldr	r3, [r0]
   1da54:	mov	r0, r9
   1da58:	bl	18b8 <fread@plt>
   1da5c:	mov	r3, r9
   1da60:	mov	r1, #0
   1da64:	mov	r2, r9
   1da68:	vld1.32	{d16-d17}, [r2], sl
   1da6c:	mov	r7, r4
   1da70:	add	r3, r3, #16
   1da74:	vcvt.s32.f32	q8, q8
   1da78:	vmovn.i32	d16, q8
   1da7c:	vuzp.8	d16, d17
   1da80:	vmov.32	r6, d16[0]
   1da84:	str	r6, [r7, r1]!
   1da88:	add	r1, r1, #8
   1da8c:	vld1.32	{d16-d17}, [r3]
   1da90:	add	r3, r7, #4
   1da94:	cmp	r1, #256	; 0x100
   1da98:	vcvt.s32.f32	q8, q8
   1da9c:	vmovn.i32	d16, q8
   1daa0:	vuzp.8	d16, d17
   1daa4:	vst1.32	{d16[0]}, [r3]
   1daa8:	mov	r3, r2
   1daac:	bne	1da68 <ReadInt8Data+0x1608>
   1dab0:	ldr	r1, [sp, #20]
   1dab4:	add	r8, r0, r8
   1dab8:	ldr	r0, [sp, #16]
   1dabc:	add	r4, r4, #256	; 0x100
   1dac0:	add	r6, r1, #256	; 0x100
   1dac4:	add	r0, r0, #256	; 0x100
   1dac8:	cmp	r6, r5
   1dacc:	blt	1da3c <ReadInt8Data+0x15dc>
   1dad0:	ldr	r0, [sp, #12]
   1dad4:	cmp	r6, r0
   1dad8:	bge	1e650 <ReadInt8Data+0x21f0>
   1dadc:	sub	r9, r0, r6
   1dae0:	ldr	r0, [sp, #24]
   1dae4:	ldr	sl, [sp, #28]
   1dae8:	add	r7, sp, #32
   1daec:	mov	r2, r9
   1daf0:	ldr	r3, [r0]
   1daf4:	mov	r0, r7
   1daf8:	mov	r1, sl
   1dafc:	bl	18b8 <fread@plt>
   1db00:	add	r8, r0, r8
   1db04:	cmp	r9, #1
   1db08:	blt	1e654 <ReadInt8Data+0x21f4>
   1db0c:	mov	lr, #0
   1db10:	cmp	r9, #4
   1db14:	bcc	1e718 <ReadInt8Data+0x22b8>
   1db18:	bic	lr, r9, #3
   1db1c:	mov	r0, #1
   1db20:	subs	r1, lr, #4
   1db24:	add	r1, r0, r1, lsr #2
   1db28:	and	ip, r1, #1
   1db2c:	beq	1e6d8 <ReadInt8Data+0x2278>
   1db30:	ldr	r1, [sp, #12]
   1db34:	ldr	r2, [sp, #20]
   1db38:	ldr	sl, [sp, #8]
   1db3c:	mov	r5, r7
   1db40:	sub	r1, r1, r2
   1db44:	sub	r1, r1, #256	; 0x100
   1db48:	bic	r1, r1, #3
   1db4c:	sub	r1, r1, #4
   1db50:	add	r0, r0, r1, lsr #2
   1db54:	mvn	r2, r1, lsr #2
   1db58:	mov	r1, #32
   1db5c:	and	r0, r0, #1
   1db60:	add	r3, r2, r0
   1db64:	add	r0, sl, r6
   1db68:	mov	r2, #0
   1db6c:	vld1.32	{d16-d17}, [r5], r1
   1db70:	add	r4, r0, r2
   1db74:	add	r7, r7, #16
   1db78:	adds	r3, r3, #2
   1db7c:	add	r2, r2, #8
   1db80:	vcvt.s32.f32	q8, q8
   1db84:	vmovn.i32	d16, q8
   1db88:	vuzp.8	d16, d17
   1db8c:	vst1.32	{d16[0]}, [r4]
   1db90:	add	r4, r4, #4
   1db94:	vld1.32	{d16-d17}, [r7]
   1db98:	mov	r7, r5
   1db9c:	vcvt.s32.f32	q8, q8
   1dba0:	vmovn.i32	d16, q8
   1dba4:	vuzp.8	d16, d17
   1dba8:	vst1.32	{d16[0]}, [r4]
   1dbac:	bne	1db6c <ReadInt8Data+0x170c>
   1dbb0:	b	1e6e0 <ReadInt8Data+0x2280>
   1dbb4:	add	r1, sp, #32
   1dbb8:	str	sl, [sp, #28]
   1dbbc:	str	r5, [sp, #8]
   1dbc0:	add	r6, r5, #1
   1dbc4:	mov	r0, r7
   1dbc8:	str	r7, [sp, #12]
   1dbcc:	sub	sl, r7, #256	; 0x100
   1dbd0:	mov	r5, #0
   1dbd4:	mov	r7, #0
   1dbd8:	add	r8, r1, #8
   1dbdc:	ldr	r3, [r9]
   1dbe0:	ldr	r1, [sp, #28]
   1dbe4:	add	r0, sp, #32
   1dbe8:	mov	r2, #256	; 0x100
   1dbec:	mov	r4, r5
   1dbf0:	bl	18b8 <fread@plt>
   1dbf4:	mov	r1, r8
   1dbf8:	mov	r2, #0
   1dbfc:	vldr	d16, [r1, #-8]
   1dc00:	add	r3, r6, r2
   1dc04:	vcvt.s32.f64	s0, d16
   1dc08:	vmov	r5, s0
   1dc0c:	strb	r5, [r3, #-1]
   1dc10:	vldr	d16, [r1]
   1dc14:	add	r1, r1, #16
   1dc18:	vcvt.s32.f64	s0, d16
   1dc1c:	vmov	r3, s0
   1dc20:	strb	r3, [r6, r2]
   1dc24:	add	r2, r2, #2
   1dc28:	cmp	r2, #256	; 0x100
   1dc2c:	bne	1dbfc <ReadInt8Data+0x179c>
   1dc30:	add	r5, r4, #256	; 0x100
   1dc34:	add	r7, r0, r7
   1dc38:	add	r6, r6, #256	; 0x100
   1dc3c:	cmp	r5, sl
   1dc40:	blt	1dbdc <ReadInt8Data+0x177c>
   1dc44:	ldr	sl, [sp, #12]
   1dc48:	cmp	r5, sl
   1dc4c:	bge	1e238 <ReadInt8Data+0x1dd8>
   1dc50:	ldr	r3, [r9]
   1dc54:	ldr	r1, [sp, #28]
   1dc58:	sub	r6, sl, r5
   1dc5c:	add	r9, sp, #32
   1dc60:	mov	r0, r9
   1dc64:	mov	r2, r6
   1dc68:	bl	18b8 <fread@plt>
   1dc6c:	mov	r8, r7
   1dc70:	add	r8, r0, r7
   1dc74:	cmp	r6, #1
   1dc78:	blt	1e650 <ReadInt8Data+0x21f0>
   1dc7c:	mvn	r0, #256	; 0x100
   1dc80:	mov	r1, #0
   1dc84:	sub	r2, r0, r4
   1dc88:	and	r0, r6, #1
   1dc8c:	cmn	r2, sl
   1dc90:	beq	1dce4 <ReadInt8Data+0x1884>
   1dc94:	ldr	r1, [sp, #8]
   1dc98:	sub	r2, r0, sl
   1dc9c:	add	r7, r9, #8
   1dca0:	mov	r3, #0
   1dca4:	add	r2, r2, r5
   1dca8:	add	r4, r1, r5
   1dcac:	vldr	d16, [r7, #-8]
   1dcb0:	mov	r1, r4
   1dcb4:	vcvt.s32.f64	s0, d16
   1dcb8:	vmov	r6, s0
   1dcbc:	strb	r6, [r1, -r3]!
   1dcc0:	sub	r3, r3, #2
   1dcc4:	vldr	d16, [r7]
   1dcc8:	add	r7, r7, #16
   1dccc:	cmp	r2, r3
   1dcd0:	vcvt.s32.f64	s0, d16
   1dcd4:	vmov	r6, s0
   1dcd8:	strb	r6, [r1, #1]
   1dcdc:	bne	1dcac <ReadInt8Data+0x184c>
   1dce0:	rsb	r1, r3, #0
   1dce4:	cmp	r0, #0
   1dce8:	beq	1e650 <ReadInt8Data+0x21f0>
   1dcec:	add	r0, r9, r1, lsl #3
   1dcf0:	vldr	d16, [r0]
   1dcf4:	add	r0, r1, r5
   1dcf8:	vcvt.s32.f64	s0, d16
   1dcfc:	ldr	r2, [sp, #8]
   1dd00:	vmov	r1, s0
   1dd04:	strb	r1, [r2, r0]
   1dd08:	b	1e650 <ReadInt8Data+0x21f0>
   1dd0c:	str	r4, [sp, #4]
   1dd10:	str	r9, [sp, #24]
   1dd14:	mov	r9, r7
   1dd18:	add	r0, r5, #256	; 0x100
   1dd1c:	str	r7, [sp, #12]
   1dd20:	sub	r9, r7, #256	; 0x100
   1dd24:	mov	r4, #0
   1dd28:	add	sl, sp, #32
   1dd2c:	mov	r7, #32
   1dd30:	mov	r8, #0
   1dd34:	str	r0, [sp, #20]
   1dd38:	ldr	r0, [sp, #24]
   1dd3c:	ldr	r1, [sp, #28]
   1dd40:	mov	r2, #256	; 0x100
   1dd44:	str	r4, [sp, #16]
   1dd48:	ldr	r3, [r0]
   1dd4c:	mov	r0, sl
   1dd50:	bl	18b8 <fread@plt>
   1dd54:	mov	r1, sl
   1dd58:	mov	r2, #0
   1dd5c:	add	r3, r1, #16
   1dd60:	vld1.64	{d16-d17}, [r1], r7
   1dd64:	mov	r6, r5
   1dd68:	vmovn.i64	d16, q8
   1dd6c:	vmov.32	r4, d16[0]
   1dd70:	strb	r4, [r6, r2]!
   1dd74:	vmov.32	r4, d16[1]
   1dd78:	add	r2, r2, #4
   1dd7c:	cmp	r2, #256	; 0x100
   1dd80:	strb	r4, [r6, #1]
   1dd84:	vld1.64	{d16-d17}, [r3]
   1dd88:	vmovn.i64	d16, q8
   1dd8c:	vmov.32	r3, d16[1]
   1dd90:	strb	r3, [r6, #3]
   1dd94:	vmov.32	r3, d16[0]
   1dd98:	strb	r3, [r6, #2]
   1dd9c:	bne	1dd5c <ReadInt8Data+0x18fc>
   1dda0:	ldr	r6, [sp, #16]
   1dda4:	add	r8, r0, r8
   1dda8:	ldr	r0, [sp, #20]
   1ddac:	add	r5, r5, #256	; 0x100
   1ddb0:	add	r4, r6, #256	; 0x100
   1ddb4:	add	r0, r0, #256	; 0x100
   1ddb8:	cmp	r4, r9
   1ddbc:	blt	1dd34 <ReadInt8Data+0x18d4>
   1ddc0:	ldr	r7, [sp, #12]
   1ddc4:	cmp	r4, r7
   1ddc8:	bge	1de98 <ReadInt8Data+0x1a38>
   1ddcc:	ldr	r9, [sp, #24]
   1ddd0:	ldr	r1, [sp, #28]
   1ddd4:	sub	r5, r7, r4
   1ddd8:	add	sl, sp, #32
   1dddc:	mov	r0, sl
   1dde0:	mov	r2, r5
   1dde4:	ldr	r3, [r9]
   1dde8:	bl	18b8 <fread@plt>
   1ddec:	add	r8, r0, r8
   1ddf0:	cmp	r5, #1
   1ddf4:	blt	1e7d0 <ReadInt8Data+0x2370>
   1ddf8:	mov	lr, #0
   1ddfc:	beq	1e7a4 <ReadInt8Data+0x2344>
   1de00:	bic	lr, r5, #1
   1de04:	mov	r2, #1
   1de08:	str	r5, [sp]
   1de0c:	subs	r1, lr, #2
   1de10:	add	r1, r2, r1, lsr #1
   1de14:	and	ip, r1, #1
   1de18:	beq	1e75c <ReadInt8Data+0x22fc>
   1de1c:	sub	r3, r7, r6
   1de20:	ldr	r0, [sp, #8]
   1de24:	mov	r6, #32
   1de28:	sub	r3, r3, #256	; 0x100
   1de2c:	bic	r3, r3, #1
   1de30:	sub	r3, r3, #2
   1de34:	add	r2, r2, r3, lsr #1
   1de38:	mvn	r7, r3, lsr #1
   1de3c:	add	r0, r0, r4
   1de40:	and	r2, r2, #1
   1de44:	add	r3, r7, r2
   1de48:	mov	r2, #0
   1de4c:	add	r5, sl, #16
   1de50:	vld1.64	{d16-d17}, [sl], r6
   1de54:	mov	r7, r0
   1de58:	adds	r3, r3, #2
   1de5c:	vmovn.i64	d16, q8
   1de60:	vmov.32	r1, d16[0]
   1de64:	strb	r1, [r7, r2]!
   1de68:	vmov.32	r1, d16[1]
   1de6c:	strb	r1, [r7, #1]
   1de70:	add	r1, r0, r2
   1de74:	add	r2, r2, #4
   1de78:	vld1.64	{d16-d17}, [r5]
   1de7c:	vmovn.i64	d16, q8
   1de80:	vmov.32	r5, d16[1]
   1de84:	strb	r5, [r1, #3]
   1de88:	vmov.32	r5, d16[0]
   1de8c:	strb	r5, [r1, #2]
   1de90:	bne	1de4c <ReadInt8Data+0x19ec>
   1de94:	b	1e760 <ReadInt8Data+0x2300>
   1de98:	ldr	sl, [sp, #28]
   1de9c:	ldr	r5, [sp, #8]
   1dea0:	ldr	r9, [sp, #24]
   1dea4:	ldr	r4, [sp, #4]
   1dea8:	cmp	r4, #13
   1deac:	bne	1e654 <ReadInt8Data+0x21f4>
   1deb0:	ldr	r0, [r9, #20]
   1deb4:	cmp	r0, #0
   1deb8:	beq	1df04 <ReadInt8Data+0x1aa4>
   1debc:	cmp	r7, #256	; 0x100
   1dec0:	bgt	1dfac <ReadInt8Data+0x1b4c>
   1dec4:	ldr	r3, [r9]
   1dec8:	add	r4, sp, #32
   1decc:	mov	r1, sl
   1ded0:	mov	r2, r7
   1ded4:	mov	r0, r4
   1ded8:	bl	18b8 <fread@plt>
   1dedc:	add	r8, r0, r8
   1dee0:	cmp	r7, #1
   1dee4:	blt	1e654 <ReadInt8Data+0x21f4>
   1dee8:	mov	r0, r4
   1deec:	bl	1bd4 <Mat_uint64Swap>
   1def0:	strb	r0, [r5], #1
   1def4:	add	r4, r4, #8
   1def8:	subs	r7, r7, #1
   1defc:	bne	1dee8 <ReadInt8Data+0x1a88>
   1df00:	b	1e654 <ReadInt8Data+0x21f4>
   1df04:	cmp	r7, #256	; 0x100
   1df08:	bgt	1e08c <ReadInt8Data+0x1c2c>
   1df0c:	ldr	r3, [r9]
   1df10:	add	r4, sp, #32
   1df14:	mov	r1, sl
   1df18:	mov	r2, r7
   1df1c:	mov	r0, r4
   1df20:	bl	18b8 <fread@plt>
   1df24:	add	r8, r0, r8
   1df28:	cmp	r7, #1
   1df2c:	blt	1e654 <ReadInt8Data+0x21f4>
   1df30:	mov	r9, #0
   1df34:	beq	1e4e8 <ReadInt8Data+0x2088>
   1df38:	bic	r9, r7, #1
   1df3c:	mov	r2, #1
   1df40:	mov	lr, r7
   1df44:	subs	r1, r9, #2
   1df48:	add	r1, r2, r1, lsr #1
   1df4c:	and	ip, r1, #1
   1df50:	beq	1e4a4 <ReadInt8Data+0x2044>
   1df54:	sub	r3, r1, ip
   1df58:	mov	r1, #0
   1df5c:	mov	r7, #32
   1df60:	mov	r0, r5
   1df64:	add	r6, r4, #16
   1df68:	vld1.64	{d16-d17}, [r4], r7
   1df6c:	mov	r2, r0
   1df70:	subs	r3, r3, #2
   1df74:	vmovn.i64	d16, q8
   1df78:	vmov.32	r5, d16[0]
   1df7c:	strb	r5, [r2, r1]!
   1df80:	vmov.32	r5, d16[1]
   1df84:	add	r1, r1, #4
   1df88:	strb	r5, [r2, #1]
   1df8c:	vld1.64	{d16-d17}, [r6]
   1df90:	vmovn.i64	d16, q8
   1df94:	vmov.32	r6, d16[1]
   1df98:	strb	r6, [r2, #3]
   1df9c:	vmov.32	r6, d16[0]
   1dfa0:	strb	r6, [r2, #2]
   1dfa4:	bne	1df64 <ReadInt8Data+0x1b04>
   1dfa8:	b	1e4ac <ReadInt8Data+0x204c>
   1dfac:	sub	r0, r7, #256	; 0x100
   1dfb0:	str	r9, [sp, #24]
   1dfb4:	mov	r9, r5
   1dfb8:	add	r1, r5, #256	; 0x100
   1dfbc:	str	sl, [sp, #28]
   1dfc0:	str	r7, [sp, #12]
   1dfc4:	str	r0, [sp, #20]
   1dfc8:	mov	r0, #0
   1dfcc:	mov	sl, r0
   1dfd0:	ldr	r0, [sp, #24]
   1dfd4:	mov	r5, r1
   1dfd8:	ldr	r1, [sp, #28]
   1dfdc:	add	r4, sp, #32
   1dfe0:	mov	r2, #256	; 0x100
   1dfe4:	ldr	r3, [r0]
   1dfe8:	mov	r0, r4
   1dfec:	bl	18b8 <fread@plt>
   1dff0:	mov	r6, r0
   1dff4:	mov	r7, #0
   1dff8:	mov	r0, r4
   1dffc:	bl	1bd4 <Mat_uint64Swap>
   1e000:	strb	r0, [r9, r7]
   1e004:	add	r7, r7, #1
   1e008:	add	r4, r4, #8
   1e00c:	cmp	r7, #256	; 0x100
   1e010:	bne	1dff8 <ReadInt8Data+0x1b98>
   1e014:	ldr	r2, [sp, #20]
   1e018:	add	r0, sl, #256	; 0x100
   1e01c:	add	r8, r6, r8
   1e020:	add	r9, r9, #256	; 0x100
   1e024:	add	r1, r5, #256	; 0x100
   1e028:	cmp	r0, r2
   1e02c:	blt	1dfcc <ReadInt8Data+0x1b6c>
   1e030:	ldr	r7, [sp, #12]
   1e034:	cmp	r0, r7
   1e038:	bge	1e650 <ReadInt8Data+0x21f0>
   1e03c:	sub	r6, r7, r0
   1e040:	ldr	r0, [sp, #24]
   1e044:	ldr	r1, [sp, #28]
   1e048:	add	r4, sp, #32
   1e04c:	mov	r2, r6
   1e050:	ldr	r3, [r0]
   1e054:	mov	r0, r4
   1e058:	bl	18b8 <fread@plt>
   1e05c:	add	r8, r0, r8
   1e060:	cmp	r6, #1
   1e064:	blt	1e650 <ReadInt8Data+0x21f0>
   1e068:	sub	r0, r7, sl
   1e06c:	sub	r6, r0, #256	; 0x100
   1e070:	mov	r0, r4
   1e074:	bl	1bd4 <Mat_uint64Swap>
   1e078:	strb	r0, [r5], #1
   1e07c:	add	r4, r4, #8
   1e080:	subs	r6, r6, #1
   1e084:	bne	1e070 <ReadInt8Data+0x1c10>
   1e088:	b	1e650 <ReadInt8Data+0x21f0>
   1e08c:	str	r9, [sp, #24]
   1e090:	str	sl, [sp, #28]
   1e094:	sub	r1, r7, #256	; 0x100
   1e098:	str	r7, [sp, #12]
   1e09c:	add	r0, r5, #256	; 0x100
   1e0a0:	mov	sl, r5
   1e0a4:	mov	r6, #0
   1e0a8:	add	r9, sp, #32
   1e0ac:	mov	r7, #32
   1e0b0:	str	r5, [sp, #8]
   1e0b4:	str	r1, [sp, #16]
   1e0b8:	str	r0, [sp, #20]
   1e0bc:	ldr	r0, [sp, #24]
   1e0c0:	ldr	r1, [sp, #28]
   1e0c4:	mov	r2, #256	; 0x100
   1e0c8:	mov	r5, r6
   1e0cc:	ldr	r3, [r0]
   1e0d0:	mov	r0, r9
   1e0d4:	bl	18b8 <fread@plt>
   1e0d8:	mov	r1, r9
   1e0dc:	mov	r2, #0
   1e0e0:	add	r3, r1, #16
   1e0e4:	vld1.64	{d16-d17}, [r1], r7
   1e0e8:	mov	r4, sl
   1e0ec:	vmovn.i64	d16, q8
   1e0f0:	vmov.32	r6, d16[0]
   1e0f4:	strb	r6, [r4, r2]!
   1e0f8:	vmov.32	r6, d16[1]
   1e0fc:	add	r2, r2, #4
   1e100:	cmp	r2, #256	; 0x100
   1e104:	strb	r6, [r4, #1]
   1e108:	vld1.64	{d16-d17}, [r3]
   1e10c:	vmovn.i64	d16, q8
   1e110:	vmov.32	r3, d16[1]
   1e114:	strb	r3, [r4, #3]
   1e118:	vmov.32	r3, d16[0]
   1e11c:	strb	r3, [r4, #2]
   1e120:	bne	1e0e0 <ReadInt8Data+0x1c80>
   1e124:	add	r8, r0, r8
   1e128:	ldr	r0, [sp, #20]
   1e12c:	ldr	r1, [sp, #16]
   1e130:	add	r6, r5, #256	; 0x100
   1e134:	add	sl, sl, #256	; 0x100
   1e138:	add	r0, r0, #256	; 0x100
   1e13c:	cmp	r6, r1
   1e140:	blt	1e0b8 <ReadInt8Data+0x1c58>
   1e144:	ldr	r0, [sp, #12]
   1e148:	cmp	r6, r0
   1e14c:	bge	1e650 <ReadInt8Data+0x21f0>
   1e150:	sub	r7, r0, r6
   1e154:	ldr	r0, [sp, #24]
   1e158:	ldr	sl, [sp, #28]
   1e15c:	add	r9, sp, #32
   1e160:	mov	r4, r5
   1e164:	mov	r2, r7
   1e168:	ldr	r3, [r0]
   1e16c:	mov	r0, r9
   1e170:	mov	r1, sl
   1e174:	bl	18b8 <fread@plt>
   1e178:	add	r8, r0, r8
   1e17c:	cmp	r7, #1
   1e180:	blt	1e654 <ReadInt8Data+0x21f4>
   1e184:	mov	lr, #0
   1e188:	beq	1e824 <ReadInt8Data+0x23c4>
   1e18c:	bic	lr, r7, #1
   1e190:	mov	r2, #1
   1e194:	str	r7, [sp, #24]
   1e198:	subs	r1, lr, #2
   1e19c:	add	r1, r2, r1, lsr #1
   1e1a0:	and	ip, r1, #1
   1e1a4:	beq	1e7dc <ReadInt8Data+0x237c>
   1e1a8:	ldr	r0, [sp, #12]
   1e1ac:	mov	sl, #32
   1e1b0:	sub	r3, r0, r4
   1e1b4:	ldr	r0, [sp, #8]
   1e1b8:	sub	r3, r3, #256	; 0x100
   1e1bc:	bic	r3, r3, #1
   1e1c0:	sub	r3, r3, #2
   1e1c4:	add	r2, r2, r3, lsr #1
   1e1c8:	mvn	r7, r3, lsr #1
   1e1cc:	add	r4, r0, r6
   1e1d0:	and	r2, r2, #1
   1e1d4:	add	r3, r7, r2
   1e1d8:	mov	r2, #0
   1e1dc:	add	r1, r9, #16
   1e1e0:	vld1.64	{d16-d17}, [r9], sl
   1e1e4:	mov	r7, r4
   1e1e8:	adds	r3, r3, #2
   1e1ec:	vmovn.i64	d16, q8
   1e1f0:	vmov.32	r0, d16[0]
   1e1f4:	strb	r0, [r7, r2]!
   1e1f8:	vmov.32	r0, d16[1]
   1e1fc:	strb	r0, [r7, #1]
   1e200:	add	r0, r4, r2
   1e204:	add	r2, r2, #4
   1e208:	vld1.64	{d16-d17}, [r1]
   1e20c:	vmovn.i64	d16, q8
   1e210:	vmov.32	r1, d16[1]
   1e214:	strb	r1, [r0, #3]
   1e218:	vmov.32	r1, d16[0]
   1e21c:	strb	r1, [r0, #2]
   1e220:	bne	1e1dc <ReadInt8Data+0x1d7c>
   1e224:	b	1e7e0 <ReadInt8Data+0x2380>
   1e228:	ldr	r0, [sp, #28]
   1e22c:	mov	r8, sl
   1e230:	mov	sl, r0
   1e234:	b	1e654 <ReadInt8Data+0x21f4>
   1e238:	ldr	sl, [sp, #28]
   1e23c:	mov	r8, r7
   1e240:	b	1e654 <ReadInt8Data+0x21f4>
   1e244:	mov	r1, #0
   1e248:	cmp	lr, #0
   1e24c:	beq	1e268 <ReadInt8Data+0x1e08>
   1e250:	add	r2, sp, #32
   1e254:	add	r2, r2, r1, lsl #1
   1e258:	add	r1, r5, r1
   1e25c:	vld1.16	{d16-d17}, [r2]
   1e260:	vmovn.i16	d16, q8
   1e264:	vst1.8	{d16}, [r1]
   1e268:	mov	r7, ip
   1e26c:	cmp	r0, ip
   1e270:	beq	1e654 <ReadInt8Data+0x21f4>
   1e274:	add	r1, sp, #32
   1e278:	add	r2, r5, r0
   1e27c:	add	r1, r1, r0, lsl #1
   1e280:	sub	r0, r7, r0
   1e284:	ldrb	r3, [r1], #2
   1e288:	subs	r0, r0, #1
   1e28c:	strb	r3, [r2], #1
   1e290:	bne	1e284 <ReadInt8Data+0x1e24>
   1e294:	b	1e654 <ReadInt8Data+0x21f4>
   1e298:	mov	r1, #0
   1e29c:	cmp	lr, #0
   1e2a0:	beq	1e2bc <ReadInt8Data+0x1e5c>
   1e2a4:	add	r2, sp, #32
   1e2a8:	add	r2, r2, r1, lsl #1
   1e2ac:	add	r1, r5, r1
   1e2b0:	vld1.16	{d16-d17}, [r2]
   1e2b4:	vmovn.i16	d16, q8
   1e2b8:	vst1.8	{d16}, [r1]
   1e2bc:	mov	r7, ip
   1e2c0:	cmp	r0, ip
   1e2c4:	beq	1e654 <ReadInt8Data+0x21f4>
   1e2c8:	add	r1, sp, #32
   1e2cc:	add	r2, r5, r0
   1e2d0:	add	r1, r1, r0, lsl #1
   1e2d4:	sub	r0, r7, r0
   1e2d8:	ldrb	r3, [r1], #2
   1e2dc:	subs	r0, r0, #1
   1e2e0:	strb	r3, [r2], #1
   1e2e4:	bne	1e2d8 <ReadInt8Data+0x1e78>
   1e2e8:	b	1e654 <ReadInt8Data+0x21f4>
   1e2ec:	mov	r1, #0
   1e2f0:	cmp	ip, #0
   1e2f4:	beq	1e318 <ReadInt8Data+0x1eb8>
   1e2f8:	add	r2, sp, #32
   1e2fc:	ldr	r0, [sp, #8]
   1e300:	add	r2, r2, r1, lsl #2
   1e304:	vld1.32	{d16-d17}, [r2]
   1e308:	add	r1, r0, r1
   1e30c:	vmovn.i32	d16, q8
   1e310:	vuzp.8	d16, d17
   1e314:	vst1.32	{d16[0]}, [r1]
   1e318:	mov	r7, lr
   1e31c:	cmp	r9, lr
   1e320:	beq	1e654 <ReadInt8Data+0x21f4>
   1e324:	ldr	r0, [sp, #8]
   1e328:	add	r1, sp, #32
   1e32c:	add	r1, r1, r9, lsl #2
   1e330:	add	r2, r0, r9
   1e334:	sub	r0, r7, r9
   1e338:	ldr	r3, [r1], #4
   1e33c:	subs	r0, r0, #1
   1e340:	strb	r3, [r2], #1
   1e344:	bne	1e338 <ReadInt8Data+0x1ed8>
   1e348:	b	1e654 <ReadInt8Data+0x21f4>
   1e34c:	mov	r1, #0
   1e350:	cmp	ip, #0
   1e354:	beq	1e378 <ReadInt8Data+0x1f18>
   1e358:	add	r2, sp, #32
   1e35c:	ldr	r0, [sp, #8]
   1e360:	add	r2, r2, r1, lsl #2
   1e364:	vld1.32	{d16-d17}, [r2]
   1e368:	add	r1, r0, r1
   1e36c:	vmovn.i32	d16, q8
   1e370:	vuzp.8	d16, d17
   1e374:	vst1.32	{d16[0]}, [r1]
   1e378:	mov	r7, lr
   1e37c:	cmp	r9, lr
   1e380:	beq	1e654 <ReadInt8Data+0x21f4>
   1e384:	ldr	r0, [sp, #8]
   1e388:	add	r1, sp, #32
   1e38c:	add	r1, r1, r9, lsl #2
   1e390:	add	r2, r0, r9
   1e394:	sub	r0, r7, r9
   1e398:	ldr	r3, [r1], #4
   1e39c:	subs	r0, r0, #1
   1e3a0:	strb	r3, [r2], #1
   1e3a4:	bne	1e398 <ReadInt8Data+0x1f38>
   1e3a8:	b	1e654 <ReadInt8Data+0x21f4>
   1e3ac:	mov	r1, #0
   1e3b0:	cmp	ip, #0
   1e3b4:	beq	1e3dc <ReadInt8Data+0x1f7c>
   1e3b8:	add	r2, sp, #32
   1e3bc:	ldr	r0, [sp, #8]
   1e3c0:	add	r2, r2, r1, lsl #2
   1e3c4:	vld1.32	{d16-d17}, [r2]
   1e3c8:	add	r1, r0, r1
   1e3cc:	vcvt.s32.f32	q8, q8
   1e3d0:	vmovn.i32	d16, q8
   1e3d4:	vuzp.8	d16, d17
   1e3d8:	vst1.32	{d16[0]}, [r1]
   1e3dc:	mov	r7, lr
   1e3e0:	cmp	r9, lr
   1e3e4:	beq	1e654 <ReadInt8Data+0x21f4>
   1e3e8:	ldr	r0, [sp, #8]
   1e3ec:	add	r1, sp, #32
   1e3f0:	add	r1, r1, r9, lsl #2
   1e3f4:	add	r2, r0, r9
   1e3f8:	sub	r0, r7, r9
   1e3fc:	vldr	s0, [r1]
   1e400:	add	r1, r1, #4
   1e404:	subs	r0, r0, #1
   1e408:	vcvt.s32.f32	s0, s0
   1e40c:	vmov	r3, s0
   1e410:	strb	r3, [r2], #1
   1e414:	bne	1e3fc <ReadInt8Data+0x1f9c>
   1e418:	b	1e654 <ReadInt8Data+0x21f4>
   1e41c:	mov	r1, #0
   1e420:	cmp	ip, #0
   1e424:	beq	1e44c <ReadInt8Data+0x1fec>
   1e428:	add	r2, sp, #32
   1e42c:	ldr	r3, [sp, #8]
   1e430:	add	r2, r2, r1, lsl #3
   1e434:	vld1.64	{d16-d17}, [r2]
   1e438:	vmovn.i64	d16, q8
   1e43c:	vmov.32	r2, d16[0]
   1e440:	strb	r2, [r3, r1]!
   1e444:	vmov.32	r1, d16[1]
   1e448:	strb	r1, [r3, #1]
   1e44c:	ldr	r4, [sp, #4]
   1e450:	mov	r7, lr
   1e454:	cmp	r0, lr
   1e458:	bne	1e470 <ReadInt8Data+0x2010>
   1e45c:	ldr	sl, [sp, #28]
   1e460:	ldr	r5, [sp, #8]
   1e464:	cmp	r4, #13
   1e468:	beq	1deb0 <ReadInt8Data+0x1a50>
   1e46c:	b	1e654 <ReadInt8Data+0x21f4>
   1e470:	ldr	r5, [sp, #8]
   1e474:	add	r1, sp, #32
   1e478:	add	r1, r1, r0, lsl #3
   1e47c:	add	r2, r5, r0
   1e480:	sub	r0, r7, r0
   1e484:	ldrb	r3, [r1], #8
   1e488:	subs	r0, r0, #1
   1e48c:	strb	r3, [r2], #1
   1e490:	bne	1e484 <ReadInt8Data+0x2024>
   1e494:	ldr	sl, [sp, #28]
   1e498:	cmp	r4, #13
   1e49c:	beq	1deb0 <ReadInt8Data+0x1a50>
   1e4a0:	b	1e654 <ReadInt8Data+0x21f4>
   1e4a4:	mov	r1, #0
   1e4a8:	mov	r0, r5
   1e4ac:	cmp	ip, #0
   1e4b0:	mov	r5, r0
   1e4b4:	beq	1e4dc <ReadInt8Data+0x207c>
   1e4b8:	add	r2, sp, #32
   1e4bc:	mov	r3, r5
   1e4c0:	add	r2, r2, r1, lsl #3
   1e4c4:	vld1.64	{d16-d17}, [r2]
   1e4c8:	vmovn.i64	d16, q8
   1e4cc:	vmov.32	r2, d16[0]
   1e4d0:	strb	r2, [r3, r1]!
   1e4d4:	vmov.32	r1, d16[1]
   1e4d8:	strb	r1, [r3, #1]
   1e4dc:	mov	r7, lr
   1e4e0:	cmp	r9, lr
   1e4e4:	beq	1e654 <ReadInt8Data+0x21f4>
   1e4e8:	add	r1, sp, #32
   1e4ec:	add	r2, r5, r9
   1e4f0:	sub	r0, r7, r9
   1e4f4:	add	r1, r1, r9, lsl #3
   1e4f8:	ldrb	r3, [r1], #8
   1e4fc:	subs	r0, r0, #1
   1e500:	strb	r3, [r2], #1
   1e504:	bne	1e4f8 <ReadInt8Data+0x2098>
   1e508:	b	1e654 <ReadInt8Data+0x21f4>
   1e50c:	mov	r2, #0
   1e510:	cmp	ip, #0
   1e514:	mov	r8, sl
   1e518:	beq	1e53c <ReadInt8Data+0x20dc>
   1e51c:	add	r0, sp, #32
   1e520:	ldr	r1, [sp, #8]
   1e524:	add	r0, r0, r2, lsl #1
   1e528:	vld1.16	{d16-d17}, [r0]
   1e52c:	add	r0, r2, r6
   1e530:	add	r0, r1, r0
   1e534:	vmovn.i16	d16, q8
   1e538:	vst1.8	{d16}, [r0]
   1e53c:	cmp	r9, lr
   1e540:	beq	1e650 <ReadInt8Data+0x21f0>
   1e544:	add	r0, sp, #32
   1e548:	ldr	r3, [sp, #20]
   1e54c:	add	r1, r4, lr
   1e550:	add	r2, r0, lr, lsl #1
   1e554:	ldr	r0, [sp, #12]
   1e558:	sub	r0, r0, r3
   1e55c:	sub	r0, r0, lr
   1e560:	sub	r0, r0, #256	; 0x100
   1e564:	ldrb	r3, [r2], #2
   1e568:	subs	r0, r0, #1
   1e56c:	strb	r3, [r1], #1
   1e570:	bne	1e564 <ReadInt8Data+0x2104>
   1e574:	b	1e650 <ReadInt8Data+0x21f0>
   1e578:	mov	r2, #0
   1e57c:	cmp	ip, #0
   1e580:	mov	r8, sl
   1e584:	beq	1e5a8 <ReadInt8Data+0x2148>
   1e588:	add	r0, sp, #32
   1e58c:	ldr	r1, [sp, #8]
   1e590:	add	r0, r0, r2, lsl #1
   1e594:	vld1.16	{d16-d17}, [r0]
   1e598:	add	r0, r2, r6
   1e59c:	add	r0, r1, r0
   1e5a0:	vmovn.i16	d16, q8
   1e5a4:	vst1.8	{d16}, [r0]
   1e5a8:	cmp	r9, lr
   1e5ac:	beq	1e650 <ReadInt8Data+0x21f0>
   1e5b0:	add	r0, sp, #32
   1e5b4:	ldr	r3, [sp, #20]
   1e5b8:	add	r1, r4, lr
   1e5bc:	add	r2, r0, lr, lsl #1
   1e5c0:	ldr	r0, [sp, #12]
   1e5c4:	sub	r0, r0, r3
   1e5c8:	sub	r0, r0, lr
   1e5cc:	sub	r0, r0, #256	; 0x100
   1e5d0:	ldrb	r3, [r2], #2
   1e5d4:	subs	r0, r0, #1
   1e5d8:	strb	r3, [r1], #1
   1e5dc:	bne	1e5d0 <ReadInt8Data+0x2170>
   1e5e0:	b	1e650 <ReadInt8Data+0x21f0>
   1e5e4:	ldr	sl, [sp, #8]
   1e5e8:	mov	r2, #0
   1e5ec:	cmp	ip, #0
   1e5f0:	beq	1e614 <ReadInt8Data+0x21b4>
   1e5f4:	add	r0, sp, #32
   1e5f8:	add	r0, r0, r2, lsl #2
   1e5fc:	vld1.32	{d16-d17}, [r0]
   1e600:	add	r0, r2, r6
   1e604:	add	r0, sl, r0
   1e608:	vmovn.i32	d16, q8
   1e60c:	vuzp.8	d16, d17
   1e610:	vst1.32	{d16[0]}, [r0]
   1e614:	ldr	r4, [sp, #16]
   1e618:	cmp	r9, lr
   1e61c:	beq	1e650 <ReadInt8Data+0x21f0>
   1e620:	ldr	r2, [sp, #12]
   1e624:	ldr	r0, [sp, #20]
   1e628:	add	r1, sp, #32
   1e62c:	add	r1, r1, lr, lsl #2
   1e630:	sub	r2, r2, r4
   1e634:	add	r0, r0, lr
   1e638:	sub	r2, r2, lr
   1e63c:	sub	r2, r2, #256	; 0x100
   1e640:	ldr	r3, [r1], #4
   1e644:	subs	r2, r2, #1
   1e648:	strb	r3, [r0], #1
   1e64c:	bne	1e640 <ReadInt8Data+0x21e0>
   1e650:	ldr	sl, [sp, #28]
   1e654:	mul	r0, r8, sl
   1e658:	sub	sp, fp, #28
   1e65c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e660:	ldr	sl, [sp, #8]
   1e664:	mov	r2, #0
   1e668:	cmp	ip, #0
   1e66c:	beq	1e690 <ReadInt8Data+0x2230>
   1e670:	add	r0, sp, #32
   1e674:	add	r0, r0, r2, lsl #2
   1e678:	vld1.32	{d16-d17}, [r0]
   1e67c:	add	r0, r2, r6
   1e680:	add	r0, sl, r0
   1e684:	vmovn.i32	d16, q8
   1e688:	vuzp.8	d16, d17
   1e68c:	vst1.32	{d16[0]}, [r0]
   1e690:	ldr	r0, [sp, #24]
   1e694:	ldr	sl, [sp, #28]
   1e698:	ldr	r4, [sp, #16]
   1e69c:	cmp	r0, lr
   1e6a0:	beq	1e654 <ReadInt8Data+0x21f4>
   1e6a4:	ldr	r0, [sp, #20]
   1e6a8:	add	r1, r0, lr
   1e6ac:	add	r0, sp, #32
   1e6b0:	add	r2, r0, lr, lsl #2
   1e6b4:	ldr	r0, [sp, #12]
   1e6b8:	sub	r0, r0, r4
   1e6bc:	sub	r0, r0, lr
   1e6c0:	sub	r0, r0, #256	; 0x100
   1e6c4:	ldr	r3, [r2], #4
   1e6c8:	subs	r0, r0, #1
   1e6cc:	strb	r3, [r1], #1
   1e6d0:	bne	1e6c4 <ReadInt8Data+0x2264>
   1e6d4:	b	1e654 <ReadInt8Data+0x21f4>
   1e6d8:	ldr	sl, [sp, #8]
   1e6dc:	mov	r2, #0
   1e6e0:	cmp	ip, #0
   1e6e4:	beq	1e70c <ReadInt8Data+0x22ac>
   1e6e8:	add	r0, sp, #32
   1e6ec:	add	r0, r0, r2, lsl #2
   1e6f0:	vld1.32	{d16-d17}, [r0]
   1e6f4:	add	r0, r2, r6
   1e6f8:	add	r0, sl, r0
   1e6fc:	vcvt.s32.f32	q8, q8
   1e700:	vmovn.i32	d16, q8
   1e704:	vuzp.8	d16, d17
   1e708:	vst1.32	{d16[0]}, [r0]
   1e70c:	ldr	sl, [sp, #28]
   1e710:	cmp	r9, lr
   1e714:	beq	1e654 <ReadInt8Data+0x21f4>
   1e718:	ldr	r2, [sp, #12]
   1e71c:	ldr	r3, [sp, #20]
   1e720:	ldr	r0, [sp, #16]
   1e724:	add	r1, sp, #32
   1e728:	add	r1, r1, lr, lsl #2
   1e72c:	sub	r2, r2, r3
   1e730:	add	r0, r0, lr
   1e734:	sub	r2, r2, lr
   1e738:	sub	r2, r2, #256	; 0x100
   1e73c:	vldr	s0, [r1]
   1e740:	add	r1, r1, #4
   1e744:	subs	r2, r2, #1
   1e748:	vcvt.s32.f32	s0, s0
   1e74c:	vmov	r3, s0
   1e750:	strb	r3, [r0], #1
   1e754:	bne	1e73c <ReadInt8Data+0x22dc>
   1e758:	b	1e654 <ReadInt8Data+0x21f4>
   1e75c:	mov	r2, #0
   1e760:	cmp	ip, #0
   1e764:	beq	1e790 <ReadInt8Data+0x2330>
   1e768:	add	r0, sp, #32
   1e76c:	add	r0, r0, r2, lsl #3
   1e770:	vld1.64	{d16-d17}, [r0]
   1e774:	add	r0, r2, r4
   1e778:	ldr	r2, [sp, #8]
   1e77c:	vmovn.i64	d16, q8
   1e780:	vmov.32	r1, d16[0]
   1e784:	strb	r1, [r2, r0]!
   1e788:	vmov.32	r0, d16[1]
   1e78c:	strb	r0, [r2, #1]
   1e790:	ldr	r0, [sp]
   1e794:	ldr	r7, [sp, #12]
   1e798:	ldr	r6, [sp, #16]
   1e79c:	cmp	r0, lr
   1e7a0:	beq	1e7d0 <ReadInt8Data+0x2370>
   1e7a4:	ldr	r0, [sp, #20]
   1e7a8:	add	r1, r0, lr
   1e7ac:	add	r0, sp, #32
   1e7b0:	add	r2, r0, lr, lsl #3
   1e7b4:	sub	r0, r7, r6
   1e7b8:	sub	r0, r0, lr
   1e7bc:	sub	r0, r0, #256	; 0x100
   1e7c0:	ldrb	r3, [r2], #8
   1e7c4:	subs	r0, r0, #1
   1e7c8:	strb	r3, [r1], #1
   1e7cc:	bne	1e7c0 <ReadInt8Data+0x2360>
   1e7d0:	ldr	sl, [sp, #28]
   1e7d4:	ldr	r5, [sp, #8]
   1e7d8:	b	1dea4 <ReadInt8Data+0x1a44>
   1e7dc:	mov	r2, #0
   1e7e0:	ldr	sl, [sp, #28]
   1e7e4:	cmp	ip, #0
   1e7e8:	beq	1e814 <ReadInt8Data+0x23b4>
   1e7ec:	add	r0, sp, #32
   1e7f0:	add	r0, r0, r2, lsl #3
   1e7f4:	vld1.64	{d16-d17}, [r0]
   1e7f8:	add	r0, r2, r6
   1e7fc:	ldr	r2, [sp, #8]
   1e800:	vmovn.i64	d16, q8
   1e804:	vmov.32	r1, d16[0]
   1e808:	strb	r1, [r2, r0]!
   1e80c:	vmov.32	r0, d16[1]
   1e810:	strb	r0, [r2, #1]
   1e814:	ldr	r0, [sp, #24]
   1e818:	mov	r4, r5
   1e81c:	cmp	r0, lr
   1e820:	beq	1e654 <ReadInt8Data+0x21f4>
   1e824:	ldr	r0, [sp, #20]
   1e828:	add	r1, r0, lr
   1e82c:	add	r0, sp, #32
   1e830:	add	r2, r0, lr, lsl #3
   1e834:	ldr	r0, [sp, #12]
   1e838:	sub	r0, r0, r4
   1e83c:	sub	r0, r0, lr
   1e840:	sub	r0, r0, #256	; 0x100
   1e844:	ldrb	r3, [r2], #8
   1e848:	subs	r0, r0, #1
   1e84c:	strb	r3, [r1], #1
   1e850:	bne	1e844 <ReadInt8Data+0x23e4>
   1e854:	b	1e654 <ReadInt8Data+0x21f4>

0001e858 <ReadCompressedInt8Data>:
   1e858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e85c:	add	fp, sp, #28
   1e860:	sub	sp, sp, #12
   1e864:	mov	r7, r0
   1e868:	mov	r0, #0
   1e86c:	cmp	r1, #0
   1e870:	beq	1e884 <ReadCompressedInt8Data+0x2c>
   1e874:	cmp	r7, #0
   1e878:	movne	r5, r2
   1e87c:	cmpne	r2, #0
   1e880:	bne	1e88c <ReadCompressedInt8Data+0x34>
   1e884:	sub	sp, fp, #28
   1e888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e88c:	ldr	sl, [fp, #8]
   1e890:	mov	r0, r3
   1e894:	mov	r4, r3
   1e898:	mov	r6, r1
   1e89c:	bl	1924 <Mat_SizeOf@plt>
   1e8a0:	mov	r9, r0
   1e8a4:	sub	r0, r4, #1
   1e8a8:	cmp	r0, #12
   1e8ac:	bhi	1ed7c <ReadCompressedInt8Data+0x524>
   1e8b0:	add	r1, pc, #4
   1e8b4:	ldr	r0, [r1, r0, lsl #2]
   1e8b8:	add	pc, r1, r0
   1e8bc:	.word	0x00000034
   1e8c0:	.word	0x0000006c
   1e8c4:	.word	0x000000a4
   1e8c8:	.word	0x000000ec
   1e8cc:	.word	0x00000134
   1e8d0:	.word	0x0000017c
   1e8d4:	.word	0x000001c4
   1e8d8:	.word	0x000004c0
   1e8dc:	.word	0x00000214
   1e8e0:	.word	0x000004c0
   1e8e4:	.word	0x000004c0
   1e8e8:	.word	0x00000264
   1e8ec:	.word	0x000002ac
   1e8f0:	cmp	sl, #1
   1e8f4:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1e8f8:	mov	r8, sp
   1e8fc:	mov	r4, sl
   1e900:	mov	r0, r7
   1e904:	mov	r1, r6
   1e908:	mov	r2, r8
   1e90c:	mov	r3, r9
   1e910:	bl	3238 <InflateData>
   1e914:	ldrb	r0, [sp]
   1e918:	subs	r4, r4, #1
   1e91c:	strb	r0, [r5], #1
   1e920:	bne	1e900 <ReadCompressedInt8Data+0xa8>
   1e924:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1e928:	cmp	sl, #1
   1e92c:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1e930:	mov	r8, sp
   1e934:	mov	r4, sl
   1e938:	mov	r0, r7
   1e93c:	mov	r1, r6
   1e940:	mov	r2, r8
   1e944:	mov	r3, r9
   1e948:	bl	3238 <InflateData>
   1e94c:	ldrb	r0, [sp]
   1e950:	subs	r4, r4, #1
   1e954:	strb	r0, [r5], #1
   1e958:	bne	1e938 <ReadCompressedInt8Data+0xe0>
   1e95c:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1e960:	ldr	r0, [r7, #20]
   1e964:	cmp	r0, #0
   1e968:	beq	1ebb0 <ReadCompressedInt8Data+0x358>
   1e96c:	cmp	sl, #1
   1e970:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1e974:	mov	r8, sp
   1e978:	mov	r4, sl
   1e97c:	mov	r0, r7
   1e980:	mov	r1, r6
   1e984:	mov	r2, r8
   1e988:	mov	r3, r9
   1e98c:	bl	3238 <InflateData>
   1e990:	mov	r0, r8
   1e994:	bl	1c20 <Mat_int16Swap>
   1e998:	strb	r0, [r5], #1
   1e99c:	subs	r4, r4, #1
   1e9a0:	bne	1e97c <ReadCompressedInt8Data+0x124>
   1e9a4:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1e9a8:	ldr	r0, [r7, #20]
   1e9ac:	cmp	r0, #0
   1e9b0:	beq	1ebe8 <ReadCompressedInt8Data+0x390>
   1e9b4:	cmp	sl, #1
   1e9b8:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1e9bc:	mov	r8, sp
   1e9c0:	mov	r4, sl
   1e9c4:	mov	r0, r7
   1e9c8:	mov	r1, r6
   1e9cc:	mov	r2, r8
   1e9d0:	mov	r3, r9
   1e9d4:	bl	3238 <InflateData>
   1e9d8:	mov	r0, r8
   1e9dc:	bl	1c34 <Mat_uint16Swap>
   1e9e0:	strb	r0, [r5], #1
   1e9e4:	subs	r4, r4, #1
   1e9e8:	bne	1e9c4 <ReadCompressedInt8Data+0x16c>
   1e9ec:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1e9f0:	ldr	r0, [r7, #20]
   1e9f4:	cmp	r0, #0
   1e9f8:	beq	1ec20 <ReadCompressedInt8Data+0x3c8>
   1e9fc:	cmp	sl, #1
   1ea00:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ea04:	mov	r8, sp
   1ea08:	mov	r4, sl
   1ea0c:	mov	r0, r7
   1ea10:	mov	r1, r6
   1ea14:	mov	r2, r8
   1ea18:	mov	r3, r9
   1ea1c:	bl	3238 <InflateData>
   1ea20:	mov	r0, r8
   1ea24:	bl	1bf8 <Mat_int32Swap>
   1ea28:	strb	r0, [r5], #1
   1ea2c:	subs	r4, r4, #1
   1ea30:	bne	1ea0c <ReadCompressedInt8Data+0x1b4>
   1ea34:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ea38:	ldr	r0, [r7, #20]
   1ea3c:	cmp	r0, #0
   1ea40:	beq	1ec58 <ReadCompressedInt8Data+0x400>
   1ea44:	cmp	sl, #1
   1ea48:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ea4c:	mov	r8, sp
   1ea50:	mov	r4, sl
   1ea54:	mov	r0, r7
   1ea58:	mov	r1, r6
   1ea5c:	mov	r2, r8
   1ea60:	mov	r3, r9
   1ea64:	bl	3238 <InflateData>
   1ea68:	mov	r0, r8
   1ea6c:	bl	1c0c <Mat_uint32Swap>
   1ea70:	strb	r0, [r5], #1
   1ea74:	subs	r4, r4, #1
   1ea78:	bne	1ea54 <ReadCompressedInt8Data+0x1fc>
   1ea7c:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ea80:	ldr	r0, [r7, #20]
   1ea84:	cmp	r0, #0
   1ea88:	beq	1ec90 <ReadCompressedInt8Data+0x438>
   1ea8c:	cmp	sl, #1
   1ea90:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ea94:	mov	r8, sp
   1ea98:	mov	r4, sl
   1ea9c:	mov	r0, r7
   1eaa0:	mov	r1, r6
   1eaa4:	mov	r2, r8
   1eaa8:	mov	r3, r9
   1eaac:	bl	3238 <InflateData>
   1eab0:	mov	r0, r8
   1eab4:	bl	1c4c <Mat_floatSwap>
   1eab8:	vcvt.s32.f32	s0, s0
   1eabc:	subs	r4, r4, #1
   1eac0:	vmov	r0, s0
   1eac4:	strb	r0, [r5], #1
   1eac8:	bne	1ea9c <ReadCompressedInt8Data+0x244>
   1eacc:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ead0:	ldr	r0, [r7, #20]
   1ead4:	cmp	r0, #0
   1ead8:	beq	1ecd0 <ReadCompressedInt8Data+0x478>
   1eadc:	cmp	sl, #1
   1eae0:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1eae4:	mov	r8, sp
   1eae8:	mov	r4, sl
   1eaec:	mov	r0, r7
   1eaf0:	mov	r1, r6
   1eaf4:	mov	r2, r8
   1eaf8:	mov	r3, r9
   1eafc:	bl	3238 <InflateData>
   1eb00:	mov	r0, r8
   1eb04:	bl	1c90 <Mat_doubleSwap>
   1eb08:	vcvt.s32.f64	s0, d0
   1eb0c:	subs	r4, r4, #1
   1eb10:	vmov	r0, s0
   1eb14:	strb	r0, [r5], #1
   1eb18:	bne	1eaec <ReadCompressedInt8Data+0x294>
   1eb1c:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1eb20:	ldr	r0, [r7, #20]
   1eb24:	cmp	r0, #0
   1eb28:	beq	1ed10 <ReadCompressedInt8Data+0x4b8>
   1eb2c:	cmp	sl, #1
   1eb30:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1eb34:	mov	r8, sp
   1eb38:	mov	r4, sl
   1eb3c:	mov	r0, r7
   1eb40:	mov	r1, r6
   1eb44:	mov	r2, r8
   1eb48:	mov	r3, r9
   1eb4c:	bl	3238 <InflateData>
   1eb50:	mov	r0, r8
   1eb54:	bl	1b84 <Mat_int64Swap>
   1eb58:	strb	r0, [r5], #1
   1eb5c:	subs	r4, r4, #1
   1eb60:	bne	1eb3c <ReadCompressedInt8Data+0x2e4>
   1eb64:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1eb68:	ldr	r0, [r7, #20]
   1eb6c:	cmp	r0, #0
   1eb70:	beq	1ed48 <ReadCompressedInt8Data+0x4f0>
   1eb74:	cmp	sl, #1
   1eb78:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1eb7c:	mov	r8, sp
   1eb80:	mov	r4, sl
   1eb84:	mov	r0, r7
   1eb88:	mov	r1, r6
   1eb8c:	mov	r2, r8
   1eb90:	mov	r3, r9
   1eb94:	bl	3238 <InflateData>
   1eb98:	mov	r0, r8
   1eb9c:	bl	1bd4 <Mat_uint64Swap>
   1eba0:	strb	r0, [r5], #1
   1eba4:	subs	r4, r4, #1
   1eba8:	bne	1eb84 <ReadCompressedInt8Data+0x32c>
   1ebac:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ebb0:	cmp	sl, #1
   1ebb4:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ebb8:	mov	r8, sp
   1ebbc:	mov	r4, sl
   1ebc0:	mov	r0, r7
   1ebc4:	mov	r1, r6
   1ebc8:	mov	r2, r8
   1ebcc:	mov	r3, r9
   1ebd0:	bl	3238 <InflateData>
   1ebd4:	ldrb	r0, [sp]
   1ebd8:	subs	r4, r4, #1
   1ebdc:	strb	r0, [r5], #1
   1ebe0:	bne	1ebc0 <ReadCompressedInt8Data+0x368>
   1ebe4:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ebe8:	cmp	sl, #1
   1ebec:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ebf0:	mov	r8, sp
   1ebf4:	mov	r4, sl
   1ebf8:	mov	r0, r7
   1ebfc:	mov	r1, r6
   1ec00:	mov	r2, r8
   1ec04:	mov	r3, r9
   1ec08:	bl	3238 <InflateData>
   1ec0c:	ldrb	r0, [sp]
   1ec10:	subs	r4, r4, #1
   1ec14:	strb	r0, [r5], #1
   1ec18:	bne	1ebf8 <ReadCompressedInt8Data+0x3a0>
   1ec1c:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ec20:	cmp	sl, #1
   1ec24:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ec28:	mov	r8, sp
   1ec2c:	mov	r4, sl
   1ec30:	mov	r0, r7
   1ec34:	mov	r1, r6
   1ec38:	mov	r2, r8
   1ec3c:	mov	r3, r9
   1ec40:	bl	3238 <InflateData>
   1ec44:	ldr	r0, [sp]
   1ec48:	subs	r4, r4, #1
   1ec4c:	strb	r0, [r5], #1
   1ec50:	bne	1ec30 <ReadCompressedInt8Data+0x3d8>
   1ec54:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ec58:	cmp	sl, #1
   1ec5c:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ec60:	mov	r8, sp
   1ec64:	mov	r4, sl
   1ec68:	mov	r0, r7
   1ec6c:	mov	r1, r6
   1ec70:	mov	r2, r8
   1ec74:	mov	r3, r9
   1ec78:	bl	3238 <InflateData>
   1ec7c:	ldr	r0, [sp]
   1ec80:	subs	r4, r4, #1
   1ec84:	strb	r0, [r5], #1
   1ec88:	bne	1ec68 <ReadCompressedInt8Data+0x410>
   1ec8c:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ec90:	cmp	sl, #1
   1ec94:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ec98:	mov	r8, sp
   1ec9c:	mov	r4, sl
   1eca0:	mov	r0, r7
   1eca4:	mov	r1, r6
   1eca8:	mov	r2, r8
   1ecac:	mov	r3, r9
   1ecb0:	bl	3238 <InflateData>
   1ecb4:	vldr	s0, [sp]
   1ecb8:	subs	r4, r4, #1
   1ecbc:	vcvt.s32.f32	s0, s0
   1ecc0:	vmov	r0, s0
   1ecc4:	strb	r0, [r5], #1
   1ecc8:	bne	1eca0 <ReadCompressedInt8Data+0x448>
   1eccc:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ecd0:	cmp	sl, #1
   1ecd4:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ecd8:	mov	r8, sp
   1ecdc:	mov	r4, sl
   1ece0:	mov	r0, r7
   1ece4:	mov	r1, r6
   1ece8:	mov	r2, r8
   1ecec:	mov	r3, r9
   1ecf0:	bl	3238 <InflateData>
   1ecf4:	vldr	d16, [sp]
   1ecf8:	subs	r4, r4, #1
   1ecfc:	vcvt.s32.f64	s0, d16
   1ed00:	vmov	r0, s0
   1ed04:	strb	r0, [r5], #1
   1ed08:	bne	1ece0 <ReadCompressedInt8Data+0x488>
   1ed0c:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ed10:	cmp	sl, #1
   1ed14:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ed18:	mov	r8, sp
   1ed1c:	mov	r4, sl
   1ed20:	mov	r0, r7
   1ed24:	mov	r1, r6
   1ed28:	mov	r2, r8
   1ed2c:	mov	r3, r9
   1ed30:	bl	3238 <InflateData>
   1ed34:	ldrb	r0, [sp]
   1ed38:	subs	r4, r4, #1
   1ed3c:	strb	r0, [r5], #1
   1ed40:	bne	1ed20 <ReadCompressedInt8Data+0x4c8>
   1ed44:	b	1ed7c <ReadCompressedInt8Data+0x524>
   1ed48:	cmp	sl, #1
   1ed4c:	blt	1ed7c <ReadCompressedInt8Data+0x524>
   1ed50:	mov	r8, sp
   1ed54:	mov	r4, sl
   1ed58:	mov	r0, r7
   1ed5c:	mov	r1, r6
   1ed60:	mov	r2, r8
   1ed64:	mov	r3, r9
   1ed68:	bl	3238 <InflateData>
   1ed6c:	ldrb	r0, [sp]
   1ed70:	subs	r4, r4, #1
   1ed74:	strb	r0, [r5], #1
   1ed78:	bne	1ed58 <ReadCompressedInt8Data+0x500>
   1ed7c:	mul	r0, r9, sl
   1ed80:	sub	sp, fp, #28
   1ed84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001ed88 <ReadUInt8Data>:
   1ed88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed8c:	add	fp, sp, #28
   1ed90:	sub	sp, sp, #36	; 0x24
   1ed94:	sub	sp, sp, #2048	; 0x800
   1ed98:	mov	r9, r0
   1ed9c:	mov	r0, #0
   1eda0:	cmp	r9, #0
   1eda4:	movne	r5, r1
   1eda8:	cmpne	r1, #0
   1edac:	bne	1edb8 <ReadUInt8Data+0x30>
   1edb0:	sub	sp, fp, #28
   1edb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edb8:	ldr	r1, [r9]
   1edbc:	cmp	r1, #0
   1edc0:	beq	1edb0 <ReadUInt8Data+0x28>
   1edc4:	mov	r0, r2
   1edc8:	mov	r7, r3
   1edcc:	mov	r4, r2
   1edd0:	bl	1924 <Mat_SizeOf@plt>
   1edd4:	mov	sl, r0
   1edd8:	sub	r0, r4, #1
   1eddc:	mov	r8, #0
   1ede0:	cmp	r0, #11
   1ede4:	bhi	207d0 <ReadUInt8Data+0x1a48>
   1ede8:	add	r1, pc, #4
   1edec:	ldr	r0, [r1, r0, lsl #2]
   1edf0:	add	pc, r1, r0
   1edf4:	.word	0x00000030
   1edf8:	.word	0x000000e8
   1edfc:	.word	0x00000124
   1ee00:	.word	0x00000178
   1ee04:	.word	0x000001cc
   1ee08:	.word	0x00000220
   1ee0c:	.word	0x00000274
   1ee10:	.word	0x000019dc
   1ee14:	.word	0x000002d0
   1ee18:	.word	0x000019dc
   1ee1c:	.word	0x000019dc
   1ee20:	.word	0x0000032c
   1ee24:	cmp	r7, #256	; 0x100
   1ee28:	ble	1eee4 <ReadUInt8Data+0x15c>
   1ee2c:	sub	r0, r7, #256	; 0x100
   1ee30:	mov	r8, sl
   1ee34:	mov	sl, r5
   1ee38:	mov	r5, #0
   1ee3c:	add	r6, sp, #32
   1ee40:	mov	r4, #0
   1ee44:	str	r7, [sp, #12]
   1ee48:	str	r0, [sp, #24]
   1ee4c:	ldr	r3, [r9]
   1ee50:	mov	r0, r6
   1ee54:	mov	r1, r8
   1ee58:	mov	r2, #256	; 0x100
   1ee5c:	bl	18b8 <fread@plt>
   1ee60:	mov	r7, r9
   1ee64:	mov	r9, r0
   1ee68:	add	r0, sl, r5
   1ee6c:	mov	r1, r6
   1ee70:	mov	r2, #256	; 0x100
   1ee74:	bl	181c <memcpy@plt>
   1ee78:	ldr	r0, [sp, #24]
   1ee7c:	add	r5, r5, #256	; 0x100
   1ee80:	add	r4, r9, r4
   1ee84:	mov	r9, r7
   1ee88:	cmp	r5, r0
   1ee8c:	blt	1ee4c <ReadUInt8Data+0xc4>
   1ee90:	ldr	r0, [sp, #12]
   1ee94:	cmp	r5, r0
   1ee98:	bge	1eed0 <ReadUInt8Data+0x148>
   1ee9c:	ldr	r3, [r9]
   1eea0:	sub	r6, r0, r5
   1eea4:	add	r0, sp, #32
   1eea8:	mov	r1, r8
   1eeac:	mov	r2, r6
   1eeb0:	bl	18b8 <fread@plt>
   1eeb4:	add	r4, r0, r4
   1eeb8:	cmp	r6, #1
   1eebc:	blt	1eed0 <ReadUInt8Data+0x148>
   1eec0:	add	r0, sl, r5
   1eec4:	add	r1, sp, #32
   1eec8:	mov	r2, r6
   1eecc:	bl	181c <memcpy@plt>
   1eed0:	mov	sl, r8
   1eed4:	mov	r8, r4
   1eed8:	b	20f7c <ReadUInt8Data+0x21f4>
   1eedc:	cmp	r7, #256	; 0x100
   1eee0:	bgt	1f19c <ReadUInt8Data+0x414>
   1eee4:	ldr	r3, [r9]
   1eee8:	add	r0, sp, #32
   1eeec:	mov	r1, sl
   1eef0:	mov	r2, r7
   1eef4:	bl	18b8 <fread@plt>
   1eef8:	mov	r8, r0
   1eefc:	cmp	r7, #1
   1ef00:	blt	20f7c <ReadUInt8Data+0x21f4>
   1ef04:	add	r1, sp, #32
   1ef08:	mov	r0, r5
   1ef0c:	mov	r2, r7
   1ef10:	bl	181c <memcpy@plt>
   1ef14:	b	20f7c <ReadUInt8Data+0x21f4>
   1ef18:	ldr	r0, [r9, #20]
   1ef1c:	cmp	r0, #0
   1ef20:	beq	1f24c <ReadUInt8Data+0x4c4>
   1ef24:	cmp	r7, #256	; 0x100
   1ef28:	bgt	1f6e0 <ReadUInt8Data+0x958>
   1ef2c:	ldr	r3, [r9]
   1ef30:	add	r4, sp, #32
   1ef34:	mov	r1, sl
   1ef38:	mov	r2, r7
   1ef3c:	mov	r0, r4
   1ef40:	bl	18b8 <fread@plt>
   1ef44:	mov	r8, r0
   1ef48:	cmp	r7, #1
   1ef4c:	blt	20f7c <ReadUInt8Data+0x21f4>
   1ef50:	mov	r0, r4
   1ef54:	bl	1c20 <Mat_int16Swap>
   1ef58:	strb	r0, [r5], #1
   1ef5c:	add	r4, r4, #2
   1ef60:	subs	r7, r7, #1
   1ef64:	bne	1ef50 <ReadUInt8Data+0x1c8>
   1ef68:	b	20f7c <ReadUInt8Data+0x21f4>
   1ef6c:	ldr	r0, [r9, #20]
   1ef70:	cmp	r0, #0
   1ef74:	beq	1f2e4 <ReadUInt8Data+0x55c>
   1ef78:	cmp	r7, #256	; 0x100
   1ef7c:	bgt	1f7c4 <ReadUInt8Data+0xa3c>
   1ef80:	ldr	r3, [r9]
   1ef84:	add	r4, sp, #32
   1ef88:	mov	r1, sl
   1ef8c:	mov	r2, r7
   1ef90:	mov	r0, r4
   1ef94:	bl	18b8 <fread@plt>
   1ef98:	mov	r8, r0
   1ef9c:	cmp	r7, #1
   1efa0:	blt	20f7c <ReadUInt8Data+0x21f4>
   1efa4:	mov	r0, r4
   1efa8:	bl	1c34 <Mat_uint16Swap>
   1efac:	strb	r0, [r5], #1
   1efb0:	add	r4, r4, #2
   1efb4:	subs	r7, r7, #1
   1efb8:	bne	1efa4 <ReadUInt8Data+0x21c>
   1efbc:	b	20f7c <ReadUInt8Data+0x21f4>
   1efc0:	ldr	r0, [r9, #20]
   1efc4:	cmp	r0, #0
   1efc8:	beq	1f37c <ReadUInt8Data+0x5f4>
   1efcc:	cmp	r7, #256	; 0x100
   1efd0:	bgt	1f8a8 <ReadUInt8Data+0xb20>
   1efd4:	ldr	r3, [r9]
   1efd8:	add	r4, sp, #32
   1efdc:	mov	r1, sl
   1efe0:	mov	r2, r7
   1efe4:	mov	r0, r4
   1efe8:	bl	18b8 <fread@plt>
   1efec:	mov	r8, r0
   1eff0:	cmp	r7, #1
   1eff4:	blt	20f7c <ReadUInt8Data+0x21f4>
   1eff8:	mov	r0, r4
   1effc:	bl	1bf8 <Mat_int32Swap>
   1f000:	strb	r0, [r5], #1
   1f004:	add	r4, r4, #4
   1f008:	subs	r7, r7, #1
   1f00c:	bne	1eff8 <ReadUInt8Data+0x270>
   1f010:	b	20f7c <ReadUInt8Data+0x21f4>
   1f014:	ldr	r0, [r9, #20]
   1f018:	cmp	r0, #0
   1f01c:	beq	1f42c <ReadUInt8Data+0x6a4>
   1f020:	cmp	r7, #256	; 0x100
   1f024:	bgt	1f98c <ReadUInt8Data+0xc04>
   1f028:	ldr	r3, [r9]
   1f02c:	add	r4, sp, #32
   1f030:	mov	r1, sl
   1f034:	mov	r2, r7
   1f038:	mov	r0, r4
   1f03c:	bl	18b8 <fread@plt>
   1f040:	mov	r8, r0
   1f044:	cmp	r7, #1
   1f048:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f04c:	mov	r0, r4
   1f050:	bl	1c0c <Mat_uint32Swap>
   1f054:	strb	r0, [r5], #1
   1f058:	add	r4, r4, #4
   1f05c:	subs	r7, r7, #1
   1f060:	bne	1f04c <ReadUInt8Data+0x2c4>
   1f064:	b	20f7c <ReadUInt8Data+0x21f4>
   1f068:	ldr	r0, [r9, #20]
   1f06c:	cmp	r0, #0
   1f070:	beq	1f4dc <ReadUInt8Data+0x754>
   1f074:	cmp	r7, #256	; 0x100
   1f078:	bgt	1fa70 <ReadUInt8Data+0xce8>
   1f07c:	ldr	r3, [r9]
   1f080:	add	r4, sp, #32
   1f084:	mov	r1, sl
   1f088:	mov	r2, r7
   1f08c:	mov	r0, r4
   1f090:	bl	18b8 <fread@plt>
   1f094:	mov	r8, r0
   1f098:	cmp	r7, #1
   1f09c:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f0a0:	mov	r0, r4
   1f0a4:	bl	1c4c <Mat_floatSwap>
   1f0a8:	vcvt.u32.f32	s0, s0
   1f0ac:	add	r4, r4, #4
   1f0b0:	subs	r7, r7, #1
   1f0b4:	vmov	r0, s0
   1f0b8:	strb	r0, [r5], #1
   1f0bc:	bne	1f0a0 <ReadUInt8Data+0x318>
   1f0c0:	b	20f7c <ReadUInt8Data+0x21f4>
   1f0c4:	ldr	r0, [r9, #20]
   1f0c8:	cmp	r0, #0
   1f0cc:	beq	1f594 <ReadUInt8Data+0x80c>
   1f0d0:	cmp	r7, #256	; 0x100
   1f0d4:	bgt	1fb64 <ReadUInt8Data+0xddc>
   1f0d8:	ldr	r3, [r9]
   1f0dc:	add	r4, sp, #32
   1f0e0:	mov	r1, sl
   1f0e4:	mov	r2, r7
   1f0e8:	mov	r0, r4
   1f0ec:	bl	18b8 <fread@plt>
   1f0f0:	mov	r8, r0
   1f0f4:	cmp	r7, #1
   1f0f8:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f0fc:	mov	r0, r4
   1f100:	bl	1c90 <Mat_doubleSwap>
   1f104:	vcvt.u32.f64	s0, d0
   1f108:	add	r4, r4, #8
   1f10c:	subs	r7, r7, #1
   1f110:	vmov	r0, s0
   1f114:	strb	r0, [r5], #1
   1f118:	bne	1f0fc <ReadUInt8Data+0x374>
   1f11c:	b	20f7c <ReadUInt8Data+0x21f4>
   1f120:	ldr	r0, [r9, #20]
   1f124:	cmp	r0, #0
   1f128:	beq	1f62c <ReadUInt8Data+0x8a4>
   1f12c:	cmp	r7, #256	; 0x100
   1f130:	bgt	1fc58 <ReadUInt8Data+0xed0>
   1f134:	ldr	r3, [r9]
   1f138:	add	r6, sp, #32
   1f13c:	mov	r1, sl
   1f140:	mov	r2, r7
   1f144:	mov	r0, r6
   1f148:	bl	18b8 <fread@plt>
   1f14c:	mov	r8, r0
   1f150:	cmp	r7, #1
   1f154:	blt	207d0 <ReadUInt8Data+0x1a48>
   1f158:	str	r4, [sp, #4]
   1f15c:	str	r9, [sp, #24]
   1f160:	mov	r9, r8
   1f164:	mov	r8, sl
   1f168:	mov	sl, r5
   1f16c:	mov	r4, r5
   1f170:	mov	r5, r7
   1f174:	mov	r0, r6
   1f178:	bl	1b84 <Mat_int64Swap>
   1f17c:	strb	r0, [r4], #1
   1f180:	add	r6, r6, #8
   1f184:	subs	r5, r5, #1
   1f188:	bne	1f174 <ReadUInt8Data+0x3ec>
   1f18c:	mov	r5, sl
   1f190:	mov	sl, r8
   1f194:	mov	r8, r9
   1f198:	b	207c8 <ReadUInt8Data+0x1a40>
   1f19c:	mov	r0, sl
   1f1a0:	mov	sl, r9
   1f1a4:	str	r7, [sp, #12]
   1f1a8:	add	r8, sp, #32
   1f1ac:	mov	r6, #0
   1f1b0:	mov	r9, r0
   1f1b4:	sub	r0, r7, #256	; 0x100
   1f1b8:	mov	r7, r5
   1f1bc:	mov	r5, #0
   1f1c0:	str	r0, [sp, #24]
   1f1c4:	ldr	r3, [sl]
   1f1c8:	mov	r0, r8
   1f1cc:	mov	r1, r9
   1f1d0:	mov	r2, #256	; 0x100
   1f1d4:	bl	18b8 <fread@plt>
   1f1d8:	mov	r4, r0
   1f1dc:	add	r0, r7, r5
   1f1e0:	mov	r1, r8
   1f1e4:	mov	r2, #256	; 0x100
   1f1e8:	bl	181c <memcpy@plt>
   1f1ec:	ldr	r0, [sp, #24]
   1f1f0:	add	r5, r5, #256	; 0x100
   1f1f4:	add	r6, r4, r6
   1f1f8:	cmp	r5, r0
   1f1fc:	blt	1f1c4 <ReadUInt8Data+0x43c>
   1f200:	ldr	r0, [sp, #12]
   1f204:	mov	r8, r6
   1f208:	cmp	r5, r0
   1f20c:	bge	1fd50 <ReadUInt8Data+0xfc8>
   1f210:	ldr	r3, [sl]
   1f214:	sub	r6, r0, r5
   1f218:	add	r0, sp, #32
   1f21c:	mov	r1, r9
   1f220:	mov	sl, r9
   1f224:	mov	r2, r6
   1f228:	bl	18b8 <fread@plt>
   1f22c:	add	r8, r0, r8
   1f230:	cmp	r6, #1
   1f234:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f238:	add	r0, r7, r5
   1f23c:	add	r1, sp, #32
   1f240:	mov	r2, r6
   1f244:	bl	181c <memcpy@plt>
   1f248:	b	20f7c <ReadUInt8Data+0x21f4>
   1f24c:	cmp	r7, #256	; 0x100
   1f250:	bgt	1fd58 <ReadUInt8Data+0xfd0>
   1f254:	ldr	r3, [r9]
   1f258:	add	r4, sp, #32
   1f25c:	mov	r1, sl
   1f260:	mov	r2, r7
   1f264:	mov	r0, r4
   1f268:	bl	18b8 <fread@plt>
   1f26c:	mov	r8, r0
   1f270:	cmp	r7, #1
   1f274:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f278:	mov	r0, #0
   1f27c:	cmp	r7, #8
   1f280:	bcc	20b9c <ReadUInt8Data+0x1e14>
   1f284:	bic	r0, r7, #7
   1f288:	mov	r2, #1
   1f28c:	mov	ip, r7
   1f290:	subs	r1, r0, #8
   1f294:	add	r1, r2, r1, lsr #3
   1f298:	and	lr, r1, #1
   1f29c:	beq	20b6c <ReadUInt8Data+0x1de4>
   1f2a0:	sub	r3, r1, lr
   1f2a4:	mov	r1, #0
   1f2a8:	mov	r7, #32
   1f2ac:	add	r6, r4, #16
   1f2b0:	vld1.16	{d16-d17}, [r4], r7
   1f2b4:	mov	r2, r5
   1f2b8:	add	r5, r5, r1
   1f2bc:	subs	r3, r3, #2
   1f2c0:	add	r1, r1, #16
   1f2c4:	vmovn.i16	d16, q8
   1f2c8:	vst1.8	{d16}, [r5]!
   1f2cc:	vld1.16	{d16-d17}, [r6]
   1f2d0:	vmovn.i16	d16, q8
   1f2d4:	vst1.8	{d16}, [r5]
   1f2d8:	mov	r5, r2
   1f2dc:	bne	1f2ac <ReadUInt8Data+0x524>
   1f2e0:	b	20b70 <ReadUInt8Data+0x1de8>
   1f2e4:	cmp	r7, #256	; 0x100
   1f2e8:	bgt	1febc <ReadUInt8Data+0x1134>
   1f2ec:	ldr	r3, [r9]
   1f2f0:	add	r4, sp, #32
   1f2f4:	mov	r1, sl
   1f2f8:	mov	r2, r7
   1f2fc:	mov	r0, r4
   1f300:	bl	18b8 <fread@plt>
   1f304:	mov	r8, r0
   1f308:	cmp	r7, #1
   1f30c:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f310:	mov	r0, #0
   1f314:	cmp	r7, #8
   1f318:	bcc	20bf0 <ReadUInt8Data+0x1e68>
   1f31c:	bic	r0, r7, #7
   1f320:	mov	r2, #1
   1f324:	mov	ip, r7
   1f328:	subs	r1, r0, #8
   1f32c:	add	r1, r2, r1, lsr #3
   1f330:	and	lr, r1, #1
   1f334:	beq	20bc0 <ReadUInt8Data+0x1e38>
   1f338:	sub	r3, r1, lr
   1f33c:	mov	r1, #0
   1f340:	mov	r7, #32
   1f344:	add	r6, r4, #16
   1f348:	vld1.16	{d16-d17}, [r4], r7
   1f34c:	mov	r2, r5
   1f350:	add	r5, r5, r1
   1f354:	subs	r3, r3, #2
   1f358:	add	r1, r1, #16
   1f35c:	vmovn.i16	d16, q8
   1f360:	vst1.8	{d16}, [r5]!
   1f364:	vld1.16	{d16-d17}, [r6]
   1f368:	vmovn.i16	d16, q8
   1f36c:	vst1.8	{d16}, [r5]
   1f370:	mov	r5, r2
   1f374:	bne	1f344 <ReadUInt8Data+0x5bc>
   1f378:	b	20bc4 <ReadUInt8Data+0x1e3c>
   1f37c:	cmp	r7, #256	; 0x100
   1f380:	str	r5, [sp, #8]
   1f384:	bgt	20020 <ReadUInt8Data+0x1298>
   1f388:	ldr	r3, [r9]
   1f38c:	add	r5, sp, #32
   1f390:	mov	r1, sl
   1f394:	mov	r2, r7
   1f398:	mov	r0, r5
   1f39c:	bl	18b8 <fread@plt>
   1f3a0:	mov	r8, r0
   1f3a4:	cmp	r7, #1
   1f3a8:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f3ac:	mov	r9, #0
   1f3b0:	cmp	r7, #4
   1f3b4:	bcc	20c4c <ReadUInt8Data+0x1ec4>
   1f3b8:	bic	r9, r7, #3
   1f3bc:	mov	r2, #1
   1f3c0:	mov	lr, r7
   1f3c4:	subs	r1, r9, #4
   1f3c8:	add	r1, r2, r1, lsr #2
   1f3cc:	and	ip, r1, #1
   1f3d0:	beq	20c14 <ReadUInt8Data+0x1e8c>
   1f3d4:	ldr	r0, [sp, #8]
   1f3d8:	sub	r3, r1, ip
   1f3dc:	mov	r1, #0
   1f3e0:	mov	r7, #32
   1f3e4:	mov	r4, r5
   1f3e8:	vld1.32	{d16-d17}, [r4], r7
   1f3ec:	mov	r2, r0
   1f3f0:	subs	r3, r3, #2
   1f3f4:	vmovn.i32	d16, q8
   1f3f8:	vuzp.8	d16, d17
   1f3fc:	vmov.32	r6, d16[0]
   1f400:	str	r6, [r2, r1]!
   1f404:	add	r6, r5, #16
   1f408:	add	r1, r1, #8
   1f40c:	mov	r5, r4
   1f410:	vld1.32	{d16-d17}, [r6]
   1f414:	add	r2, r2, #4
   1f418:	vmovn.i32	d16, q8
   1f41c:	vuzp.8	d16, d17
   1f420:	vst1.32	{d16[0]}, [r2]
   1f424:	bne	1f3e8 <ReadUInt8Data+0x660>
   1f428:	b	20c18 <ReadUInt8Data+0x1e90>
   1f42c:	cmp	r7, #256	; 0x100
   1f430:	str	r5, [sp, #8]
   1f434:	bgt	201ac <ReadUInt8Data+0x1424>
   1f438:	ldr	r3, [r9]
   1f43c:	add	r5, sp, #32
   1f440:	mov	r1, sl
   1f444:	mov	r2, r7
   1f448:	mov	r0, r5
   1f44c:	bl	18b8 <fread@plt>
   1f450:	mov	r8, r0
   1f454:	cmp	r7, #1
   1f458:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f45c:	mov	r9, #0
   1f460:	cmp	r7, #4
   1f464:	bcc	20cac <ReadUInt8Data+0x1f24>
   1f468:	bic	r9, r7, #3
   1f46c:	mov	r2, #1
   1f470:	mov	lr, r7
   1f474:	subs	r1, r9, #4
   1f478:	add	r1, r2, r1, lsr #2
   1f47c:	and	ip, r1, #1
   1f480:	beq	20c74 <ReadUInt8Data+0x1eec>
   1f484:	ldr	r0, [sp, #8]
   1f488:	sub	r3, r1, ip
   1f48c:	mov	r1, #0
   1f490:	mov	r7, #32
   1f494:	mov	r4, r5
   1f498:	vld1.32	{d16-d17}, [r4], r7
   1f49c:	mov	r2, r0
   1f4a0:	subs	r3, r3, #2
   1f4a4:	vmovn.i32	d16, q8
   1f4a8:	vuzp.8	d16, d17
   1f4ac:	vmov.32	r6, d16[0]
   1f4b0:	str	r6, [r2, r1]!
   1f4b4:	add	r6, r5, #16
   1f4b8:	add	r1, r1, #8
   1f4bc:	mov	r5, r4
   1f4c0:	vld1.32	{d16-d17}, [r6]
   1f4c4:	add	r2, r2, #4
   1f4c8:	vmovn.i32	d16, q8
   1f4cc:	vuzp.8	d16, d17
   1f4d0:	vst1.32	{d16[0]}, [r2]
   1f4d4:	bne	1f498 <ReadUInt8Data+0x710>
   1f4d8:	b	20c78 <ReadUInt8Data+0x1ef0>
   1f4dc:	cmp	r7, #256	; 0x100
   1f4e0:	str	r5, [sp, #8]
   1f4e4:	bgt	2033c <ReadUInt8Data+0x15b4>
   1f4e8:	ldr	r3, [r9]
   1f4ec:	add	r5, sp, #32
   1f4f0:	mov	r1, sl
   1f4f4:	mov	r2, r7
   1f4f8:	mov	r0, r5
   1f4fc:	bl	18b8 <fread@plt>
   1f500:	mov	r8, r0
   1f504:	cmp	r7, #1
   1f508:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f50c:	mov	r9, #0
   1f510:	cmp	r7, #4
   1f514:	bcc	20d10 <ReadUInt8Data+0x1f88>
   1f518:	bic	r9, r7, #3
   1f51c:	mov	r2, #1
   1f520:	mov	lr, r7
   1f524:	subs	r1, r9, #4
   1f528:	add	r1, r2, r1, lsr #2
   1f52c:	and	ip, r1, #1
   1f530:	beq	20cd4 <ReadUInt8Data+0x1f4c>
   1f534:	ldr	r0, [sp, #8]
   1f538:	sub	r3, r1, ip
   1f53c:	mov	r1, #0
   1f540:	mov	r7, #32
   1f544:	mov	r4, r5
   1f548:	vld1.32	{d16-d17}, [r4], r7
   1f54c:	mov	r2, r0
   1f550:	subs	r3, r3, #2
   1f554:	vcvt.s32.f32	q8, q8
   1f558:	vmovn.i32	d16, q8
   1f55c:	vuzp.8	d16, d17
   1f560:	vmov.32	r6, d16[0]
   1f564:	str	r6, [r2, r1]!
   1f568:	add	r6, r5, #16
   1f56c:	add	r1, r1, #8
   1f570:	mov	r5, r4
   1f574:	vld1.32	{d16-d17}, [r6]
   1f578:	add	r2, r2, #4
   1f57c:	vcvt.s32.f32	q8, q8
   1f580:	vmovn.i32	d16, q8
   1f584:	vuzp.8	d16, d17
   1f588:	vst1.32	{d16[0]}, [r2]
   1f58c:	bne	1f548 <ReadUInt8Data+0x7c0>
   1f590:	b	20cd8 <ReadUInt8Data+0x1f50>
   1f594:	cmp	r7, #256	; 0x100
   1f598:	bgt	204dc <ReadUInt8Data+0x1754>
   1f59c:	ldr	r3, [r9]
   1f5a0:	add	r4, sp, #32
   1f5a4:	mov	r1, sl
   1f5a8:	mov	r2, r7
   1f5ac:	mov	r0, r4
   1f5b0:	bl	18b8 <fread@plt>
   1f5b4:	mov	r8, r0
   1f5b8:	cmp	r7, #1
   1f5bc:	blt	20f7c <ReadUInt8Data+0x21f4>
   1f5c0:	and	r1, r7, #1
   1f5c4:	mov	r0, #0
   1f5c8:	beq	1f60c <ReadUInt8Data+0x884>
   1f5cc:	sub	r2, r7, r1
   1f5d0:	add	r3, r4, #8
   1f5d4:	mov	r0, #0
   1f5d8:	vldr	d16, [r3, #-8]
   1f5dc:	mov	r6, r5
   1f5e0:	vcvt.u32.f64	s0, d16
   1f5e4:	vmov	r7, s0
   1f5e8:	strb	r7, [r6, r0]!
   1f5ec:	add	r0, r0, #2
   1f5f0:	vldr	d16, [r3]
   1f5f4:	add	r3, r3, #16
   1f5f8:	cmp	r2, r0
   1f5fc:	vcvt.u32.f64	s0, d16
   1f600:	vmov	r7, s0
   1f604:	strb	r7, [r6, #1]
   1f608:	bne	1f5d8 <ReadUInt8Data+0x850>
   1f60c:	cmp	r1, #0
   1f610:	beq	20f7c <ReadUInt8Data+0x21f4>
   1f614:	add	r1, r4, r0, lsl #3
   1f618:	vldr	d16, [r1]
   1f61c:	vcvt.u32.f64	s0, d16
   1f620:	vmov	r1, s0
   1f624:	strb	r1, [r5, r0]
   1f628:	b	20f7c <ReadUInt8Data+0x21f4>
   1f62c:	cmp	r7, #256	; 0x100
   1f630:	str	sl, [sp, #28]
   1f634:	str	r5, [sp, #8]
   1f638:	bgt	20634 <ReadUInt8Data+0x18ac>
   1f63c:	ldr	r3, [r9]
   1f640:	ldr	r1, [sp, #28]
   1f644:	add	sl, sp, #32
   1f648:	mov	r2, r7
   1f64c:	mov	r0, sl
   1f650:	bl	18b8 <fread@plt>
   1f654:	mov	r8, r0
   1f658:	cmp	r7, #1
   1f65c:	blt	20d84 <ReadUInt8Data+0x1ffc>
   1f660:	mov	r0, #0
   1f664:	beq	20d98 <ReadUInt8Data+0x2010>
   1f668:	bic	r0, r7, #1
   1f66c:	mov	r2, #1
   1f670:	mov	lr, r7
   1f674:	str	r4, [sp, #4]
   1f678:	subs	r1, r0, #2
   1f67c:	add	r1, r2, r1, lsr #1
   1f680:	and	ip, r1, #1
   1f684:	beq	20d44 <ReadUInt8Data+0x1fbc>
   1f688:	ldr	r2, [sp, #8]
   1f68c:	sub	r3, r1, ip
   1f690:	mov	r1, #0
   1f694:	mov	r7, #32
   1f698:	add	r6, sl, #16
   1f69c:	vld1.64	{d16-d17}, [sl], r7
   1f6a0:	mov	r4, r2
   1f6a4:	subs	r3, r3, #2
   1f6a8:	vmovn.i64	d16, q8
   1f6ac:	vmov.32	r5, d16[0]
   1f6b0:	strb	r5, [r4, r1]!
   1f6b4:	vmov.32	r5, d16[1]
   1f6b8:	add	r1, r1, #4
   1f6bc:	strb	r5, [r4, #1]
   1f6c0:	vld1.64	{d16-d17}, [r6]
   1f6c4:	vmovn.i64	d16, q8
   1f6c8:	vmov.32	r6, d16[1]
   1f6cc:	strb	r6, [r4, #3]
   1f6d0:	vmov.32	r6, d16[0]
   1f6d4:	strb	r6, [r4, #2]
   1f6d8:	bne	1f698 <ReadUInt8Data+0x910>
   1f6dc:	b	20d48 <ReadUInt8Data+0x1fc0>
   1f6e0:	sub	r0, r7, #256	; 0x100
   1f6e4:	str	r9, [sp, #24]
   1f6e8:	mov	r9, r5
   1f6ec:	add	r1, r5, #256	; 0x100
   1f6f0:	mov	r8, #0
   1f6f4:	str	sl, [sp, #28]
   1f6f8:	str	r7, [sp, #12]
   1f6fc:	str	r0, [sp, #20]
   1f700:	mov	r0, #0
   1f704:	mov	sl, r0
   1f708:	ldr	r0, [sp, #24]
   1f70c:	mov	r5, r1
   1f710:	ldr	r1, [sp, #28]
   1f714:	add	r4, sp, #32
   1f718:	mov	r2, #256	; 0x100
   1f71c:	ldr	r3, [r0]
   1f720:	mov	r0, r4
   1f724:	bl	18b8 <fread@plt>
   1f728:	mov	r6, r0
   1f72c:	mov	r7, #0
   1f730:	mov	r0, r4
   1f734:	bl	1c20 <Mat_int16Swap>
   1f738:	strb	r0, [r9, r7]
   1f73c:	add	r7, r7, #1
   1f740:	add	r4, r4, #2
   1f744:	cmp	r7, #256	; 0x100
   1f748:	bne	1f730 <ReadUInt8Data+0x9a8>
   1f74c:	ldr	r2, [sp, #20]
   1f750:	add	r0, sl, #256	; 0x100
   1f754:	add	r8, r6, r8
   1f758:	add	r9, r9, #256	; 0x100
   1f75c:	add	r1, r5, #256	; 0x100
   1f760:	cmp	r0, r2
   1f764:	blt	1f704 <ReadUInt8Data+0x97c>
   1f768:	ldr	r7, [sp, #12]
   1f76c:	cmp	r0, r7
   1f770:	bge	20f78 <ReadUInt8Data+0x21f0>
   1f774:	sub	r6, r7, r0
   1f778:	ldr	r0, [sp, #24]
   1f77c:	ldr	r1, [sp, #28]
   1f780:	add	r4, sp, #32
   1f784:	mov	r2, r6
   1f788:	ldr	r3, [r0]
   1f78c:	mov	r0, r4
   1f790:	bl	18b8 <fread@plt>
   1f794:	add	r8, r0, r8
   1f798:	cmp	r6, #1
   1f79c:	blt	20f78 <ReadUInt8Data+0x21f0>
   1f7a0:	sub	r0, r7, sl
   1f7a4:	sub	r6, r0, #256	; 0x100
   1f7a8:	mov	r0, r4
   1f7ac:	bl	1c20 <Mat_int16Swap>
   1f7b0:	strb	r0, [r5], #1
   1f7b4:	add	r4, r4, #2
   1f7b8:	subs	r6, r6, #1
   1f7bc:	bne	1f7a8 <ReadUInt8Data+0xa20>
   1f7c0:	b	20f78 <ReadUInt8Data+0x21f0>
   1f7c4:	sub	r0, r7, #256	; 0x100
   1f7c8:	str	r9, [sp, #24]
   1f7cc:	mov	r9, r5
   1f7d0:	add	r1, r5, #256	; 0x100
   1f7d4:	mov	r8, #0
   1f7d8:	str	sl, [sp, #28]
   1f7dc:	str	r7, [sp, #12]
   1f7e0:	str	r0, [sp, #20]
   1f7e4:	mov	r0, #0
   1f7e8:	mov	sl, r0
   1f7ec:	ldr	r0, [sp, #24]
   1f7f0:	mov	r5, r1
   1f7f4:	ldr	r1, [sp, #28]
   1f7f8:	add	r4, sp, #32
   1f7fc:	mov	r2, #256	; 0x100
   1f800:	ldr	r3, [r0]
   1f804:	mov	r0, r4
   1f808:	bl	18b8 <fread@plt>
   1f80c:	mov	r6, r0
   1f810:	mov	r7, #0
   1f814:	mov	r0, r4
   1f818:	bl	1c34 <Mat_uint16Swap>
   1f81c:	strb	r0, [r9, r7]
   1f820:	add	r7, r7, #1
   1f824:	add	r4, r4, #2
   1f828:	cmp	r7, #256	; 0x100
   1f82c:	bne	1f814 <ReadUInt8Data+0xa8c>
   1f830:	ldr	r2, [sp, #20]
   1f834:	add	r0, sl, #256	; 0x100
   1f838:	add	r8, r6, r8
   1f83c:	add	r9, r9, #256	; 0x100
   1f840:	add	r1, r5, #256	; 0x100
   1f844:	cmp	r0, r2
   1f848:	blt	1f7e8 <ReadUInt8Data+0xa60>
   1f84c:	ldr	r7, [sp, #12]
   1f850:	cmp	r0, r7
   1f854:	bge	20f78 <ReadUInt8Data+0x21f0>
   1f858:	sub	r6, r7, r0
   1f85c:	ldr	r0, [sp, #24]
   1f860:	ldr	r1, [sp, #28]
   1f864:	add	r4, sp, #32
   1f868:	mov	r2, r6
   1f86c:	ldr	r3, [r0]
   1f870:	mov	r0, r4
   1f874:	bl	18b8 <fread@plt>
   1f878:	add	r8, r0, r8
   1f87c:	cmp	r6, #1
   1f880:	blt	20f78 <ReadUInt8Data+0x21f0>
   1f884:	sub	r0, r7, sl
   1f888:	sub	r6, r0, #256	; 0x100
   1f88c:	mov	r0, r4
   1f890:	bl	1c34 <Mat_uint16Swap>
   1f894:	strb	r0, [r5], #1
   1f898:	add	r4, r4, #2
   1f89c:	subs	r6, r6, #1
   1f8a0:	bne	1f88c <ReadUInt8Data+0xb04>
   1f8a4:	b	20f78 <ReadUInt8Data+0x21f0>
   1f8a8:	sub	r0, r7, #256	; 0x100
   1f8ac:	str	r9, [sp, #24]
   1f8b0:	mov	r9, r5
   1f8b4:	add	r1, r5, #256	; 0x100
   1f8b8:	mov	r8, #0
   1f8bc:	str	sl, [sp, #28]
   1f8c0:	str	r7, [sp, #12]
   1f8c4:	str	r0, [sp, #20]
   1f8c8:	mov	r0, #0
   1f8cc:	mov	sl, r0
   1f8d0:	ldr	r0, [sp, #24]
   1f8d4:	mov	r5, r1
   1f8d8:	ldr	r1, [sp, #28]
   1f8dc:	add	r4, sp, #32
   1f8e0:	mov	r2, #256	; 0x100
   1f8e4:	ldr	r3, [r0]
   1f8e8:	mov	r0, r4
   1f8ec:	bl	18b8 <fread@plt>
   1f8f0:	mov	r6, r0
   1f8f4:	mov	r7, #0
   1f8f8:	mov	r0, r4
   1f8fc:	bl	1bf8 <Mat_int32Swap>
   1f900:	strb	r0, [r9, r7]
   1f904:	add	r7, r7, #1
   1f908:	add	r4, r4, #4
   1f90c:	cmp	r7, #256	; 0x100
   1f910:	bne	1f8f8 <ReadUInt8Data+0xb70>
   1f914:	ldr	r2, [sp, #20]
   1f918:	add	r0, sl, #256	; 0x100
   1f91c:	add	r8, r6, r8
   1f920:	add	r9, r9, #256	; 0x100
   1f924:	add	r1, r5, #256	; 0x100
   1f928:	cmp	r0, r2
   1f92c:	blt	1f8cc <ReadUInt8Data+0xb44>
   1f930:	ldr	r7, [sp, #12]
   1f934:	cmp	r0, r7
   1f938:	bge	20f78 <ReadUInt8Data+0x21f0>
   1f93c:	sub	r6, r7, r0
   1f940:	ldr	r0, [sp, #24]
   1f944:	ldr	r1, [sp, #28]
   1f948:	add	r4, sp, #32
   1f94c:	mov	r2, r6
   1f950:	ldr	r3, [r0]
   1f954:	mov	r0, r4
   1f958:	bl	18b8 <fread@plt>
   1f95c:	add	r8, r0, r8
   1f960:	cmp	r6, #1
   1f964:	blt	20f78 <ReadUInt8Data+0x21f0>
   1f968:	sub	r0, r7, sl
   1f96c:	sub	r6, r0, #256	; 0x100
   1f970:	mov	r0, r4
   1f974:	bl	1bf8 <Mat_int32Swap>
   1f978:	strb	r0, [r5], #1
   1f97c:	add	r4, r4, #4
   1f980:	subs	r6, r6, #1
   1f984:	bne	1f970 <ReadUInt8Data+0xbe8>
   1f988:	b	20f78 <ReadUInt8Data+0x21f0>
   1f98c:	sub	r0, r7, #256	; 0x100
   1f990:	str	r9, [sp, #24]
   1f994:	mov	r9, r5
   1f998:	add	r1, r5, #256	; 0x100
   1f99c:	mov	r8, #0
   1f9a0:	str	sl, [sp, #28]
   1f9a4:	str	r7, [sp, #12]
   1f9a8:	str	r0, [sp, #20]
   1f9ac:	mov	r0, #0
   1f9b0:	mov	sl, r0
   1f9b4:	ldr	r0, [sp, #24]
   1f9b8:	mov	r5, r1
   1f9bc:	ldr	r1, [sp, #28]
   1f9c0:	add	r4, sp, #32
   1f9c4:	mov	r2, #256	; 0x100
   1f9c8:	ldr	r3, [r0]
   1f9cc:	mov	r0, r4
   1f9d0:	bl	18b8 <fread@plt>
   1f9d4:	mov	r6, r0
   1f9d8:	mov	r7, #0
   1f9dc:	mov	r0, r4
   1f9e0:	bl	1c0c <Mat_uint32Swap>
   1f9e4:	strb	r0, [r9, r7]
   1f9e8:	add	r7, r7, #1
   1f9ec:	add	r4, r4, #4
   1f9f0:	cmp	r7, #256	; 0x100
   1f9f4:	bne	1f9dc <ReadUInt8Data+0xc54>
   1f9f8:	ldr	r2, [sp, #20]
   1f9fc:	add	r0, sl, #256	; 0x100
   1fa00:	add	r8, r6, r8
   1fa04:	add	r9, r9, #256	; 0x100
   1fa08:	add	r1, r5, #256	; 0x100
   1fa0c:	cmp	r0, r2
   1fa10:	blt	1f9b0 <ReadUInt8Data+0xc28>
   1fa14:	ldr	r7, [sp, #12]
   1fa18:	cmp	r0, r7
   1fa1c:	bge	20f78 <ReadUInt8Data+0x21f0>
   1fa20:	sub	r6, r7, r0
   1fa24:	ldr	r0, [sp, #24]
   1fa28:	ldr	r1, [sp, #28]
   1fa2c:	add	r4, sp, #32
   1fa30:	mov	r2, r6
   1fa34:	ldr	r3, [r0]
   1fa38:	mov	r0, r4
   1fa3c:	bl	18b8 <fread@plt>
   1fa40:	add	r8, r0, r8
   1fa44:	cmp	r6, #1
   1fa48:	blt	20f78 <ReadUInt8Data+0x21f0>
   1fa4c:	sub	r0, r7, sl
   1fa50:	sub	r6, r0, #256	; 0x100
   1fa54:	mov	r0, r4
   1fa58:	bl	1c0c <Mat_uint32Swap>
   1fa5c:	strb	r0, [r5], #1
   1fa60:	add	r4, r4, #4
   1fa64:	subs	r6, r6, #1
   1fa68:	bne	1fa54 <ReadUInt8Data+0xccc>
   1fa6c:	b	20f78 <ReadUInt8Data+0x21f0>
   1fa70:	sub	r0, r7, #256	; 0x100
   1fa74:	str	sl, [sp, #28]
   1fa78:	mov	sl, r5
   1fa7c:	add	r1, r5, #256	; 0x100
   1fa80:	mov	r8, #0
   1fa84:	str	r9, [sp, #24]
   1fa88:	str	r7, [sp, #12]
   1fa8c:	str	r0, [sp, #20]
   1fa90:	mov	r0, #0
   1fa94:	mov	r9, r0
   1fa98:	ldr	r0, [sp, #24]
   1fa9c:	mov	r5, r1
   1faa0:	ldr	r1, [sp, #28]
   1faa4:	add	r4, sp, #32
   1faa8:	mov	r2, #256	; 0x100
   1faac:	ldr	r3, [r0]
   1fab0:	mov	r0, r4
   1fab4:	bl	18b8 <fread@plt>
   1fab8:	mov	r6, r0
   1fabc:	mov	r7, #0
   1fac0:	mov	r0, r4
   1fac4:	bl	1c4c <Mat_floatSwap>
   1fac8:	vcvt.u32.f32	s0, s0
   1facc:	add	r4, r4, #4
   1fad0:	vmov	r0, s0
   1fad4:	strb	r0, [sl, r7]
   1fad8:	add	r7, r7, #1
   1fadc:	cmp	r7, #256	; 0x100
   1fae0:	bne	1fac0 <ReadUInt8Data+0xd38>
   1fae4:	ldr	r2, [sp, #20]
   1fae8:	add	r0, r9, #256	; 0x100
   1faec:	add	r8, r6, r8
   1faf0:	add	sl, sl, #256	; 0x100
   1faf4:	add	r1, r5, #256	; 0x100
   1faf8:	cmp	r0, r2
   1fafc:	blt	1fa94 <ReadUInt8Data+0xd0c>
   1fb00:	ldr	r7, [sp, #12]
   1fb04:	cmp	r0, r7
   1fb08:	bge	20f78 <ReadUInt8Data+0x21f0>
   1fb0c:	sub	r6, r7, r0
   1fb10:	ldr	r0, [sp, #24]
   1fb14:	ldr	r1, [sp, #28]
   1fb18:	add	r4, sp, #32
   1fb1c:	mov	r2, r6
   1fb20:	ldr	r3, [r0]
   1fb24:	mov	r0, r4
   1fb28:	bl	18b8 <fread@plt>
   1fb2c:	add	r8, r0, r8
   1fb30:	cmp	r6, #1
   1fb34:	blt	20f78 <ReadUInt8Data+0x21f0>
   1fb38:	sub	r0, r7, r9
   1fb3c:	sub	r6, r0, #256	; 0x100
   1fb40:	mov	r0, r4
   1fb44:	bl	1c4c <Mat_floatSwap>
   1fb48:	vcvt.u32.f32	s0, s0
   1fb4c:	add	r4, r4, #4
   1fb50:	subs	r6, r6, #1
   1fb54:	vmov	r0, s0
   1fb58:	strb	r0, [r5], #1
   1fb5c:	bne	1fb40 <ReadUInt8Data+0xdb8>
   1fb60:	b	20f78 <ReadUInt8Data+0x21f0>
   1fb64:	sub	r0, r7, #256	; 0x100
   1fb68:	str	sl, [sp, #28]
   1fb6c:	mov	sl, r5
   1fb70:	add	r1, r5, #256	; 0x100
   1fb74:	mov	r8, #0
   1fb78:	str	r9, [sp, #24]
   1fb7c:	str	r7, [sp, #12]
   1fb80:	str	r0, [sp, #20]
   1fb84:	mov	r0, #0
   1fb88:	mov	r9, r0
   1fb8c:	ldr	r0, [sp, #24]
   1fb90:	mov	r5, r1
   1fb94:	ldr	r1, [sp, #28]
   1fb98:	add	r4, sp, #32
   1fb9c:	mov	r2, #256	; 0x100
   1fba0:	ldr	r3, [r0]
   1fba4:	mov	r0, r4
   1fba8:	bl	18b8 <fread@plt>
   1fbac:	mov	r6, r0
   1fbb0:	mov	r7, #0
   1fbb4:	mov	r0, r4
   1fbb8:	bl	1c90 <Mat_doubleSwap>
   1fbbc:	vcvt.u32.f64	s0, d0
   1fbc0:	add	r4, r4, #8
   1fbc4:	vmov	r0, s0
   1fbc8:	strb	r0, [sl, r7]
   1fbcc:	add	r7, r7, #1
   1fbd0:	cmp	r7, #256	; 0x100
   1fbd4:	bne	1fbb4 <ReadUInt8Data+0xe2c>
   1fbd8:	ldr	r2, [sp, #20]
   1fbdc:	add	r0, r9, #256	; 0x100
   1fbe0:	add	r8, r6, r8
   1fbe4:	add	sl, sl, #256	; 0x100
   1fbe8:	add	r1, r5, #256	; 0x100
   1fbec:	cmp	r0, r2
   1fbf0:	blt	1fb88 <ReadUInt8Data+0xe00>
   1fbf4:	ldr	r7, [sp, #12]
   1fbf8:	cmp	r0, r7
   1fbfc:	bge	20f78 <ReadUInt8Data+0x21f0>
   1fc00:	sub	r6, r7, r0
   1fc04:	ldr	r0, [sp, #24]
   1fc08:	ldr	r1, [sp, #28]
   1fc0c:	add	r4, sp, #32
   1fc10:	mov	r2, r6
   1fc14:	ldr	r3, [r0]
   1fc18:	mov	r0, r4
   1fc1c:	bl	18b8 <fread@plt>
   1fc20:	add	r8, r0, r8
   1fc24:	cmp	r6, #1
   1fc28:	blt	20f78 <ReadUInt8Data+0x21f0>
   1fc2c:	sub	r0, r7, r9
   1fc30:	sub	r6, r0, #256	; 0x100
   1fc34:	mov	r0, r4
   1fc38:	bl	1c90 <Mat_doubleSwap>
   1fc3c:	vcvt.u32.f64	s0, d0
   1fc40:	add	r4, r4, #8
   1fc44:	subs	r6, r6, #1
   1fc48:	vmov	r0, s0
   1fc4c:	strb	r0, [r5], #1
   1fc50:	bne	1fc34 <ReadUInt8Data+0xeac>
   1fc54:	b	20f78 <ReadUInt8Data+0x21f0>
   1fc58:	sub	r0, r7, #256	; 0x100
   1fc5c:	str	r7, [sp, #12]
   1fc60:	add	r1, r5, #256	; 0x100
   1fc64:	mov	r7, r5
   1fc68:	mov	r8, #0
   1fc6c:	str	r4, [sp, #4]
   1fc70:	str	r9, [sp, #24]
   1fc74:	str	sl, [sp, #28]
   1fc78:	str	r5, [sp, #8]
   1fc7c:	str	r0, [sp, #20]
   1fc80:	mov	r0, #0
   1fc84:	mov	r9, r0
   1fc88:	ldr	r0, [sp, #24]
   1fc8c:	mov	r5, r1
   1fc90:	ldr	r1, [sp, #28]
   1fc94:	add	r4, sp, #32
   1fc98:	mov	r2, #256	; 0x100
   1fc9c:	mov	sl, r8
   1fca0:	ldr	r3, [r0]
   1fca4:	mov	r0, r4
   1fca8:	bl	18b8 <fread@plt>
   1fcac:	mov	r6, r0
   1fcb0:	mov	r8, #0
   1fcb4:	mov	r0, r4
   1fcb8:	bl	1b84 <Mat_int64Swap>
   1fcbc:	strb	r0, [r7, r8]
   1fcc0:	add	r8, r8, #1
   1fcc4:	add	r4, r4, #8
   1fcc8:	cmp	r8, #256	; 0x100
   1fccc:	bne	1fcb4 <ReadUInt8Data+0xf2c>
   1fcd0:	ldr	r2, [sp, #20]
   1fcd4:	add	r0, r9, #256	; 0x100
   1fcd8:	mov	r8, sl
   1fcdc:	add	r8, r6, sl
   1fce0:	add	r7, r7, #256	; 0x100
   1fce4:	add	r1, r5, #256	; 0x100
   1fce8:	cmp	r0, r2
   1fcec:	blt	1fc84 <ReadUInt8Data+0xefc>
   1fcf0:	ldr	r7, [sp, #12]
   1fcf4:	cmp	r0, r7
   1fcf8:	bge	207c0 <ReadUInt8Data+0x1a38>
   1fcfc:	sub	r4, r7, r0
   1fd00:	ldr	r0, [sp, #24]
   1fd04:	ldr	sl, [sp, #28]
   1fd08:	add	r6, sp, #32
   1fd0c:	mov	r2, r4
   1fd10:	ldr	r3, [r0]
   1fd14:	mov	r0, r6
   1fd18:	mov	r1, sl
   1fd1c:	bl	18b8 <fread@plt>
   1fd20:	add	r8, r0, r8
   1fd24:	cmp	r4, #1
   1fd28:	blt	207c4 <ReadUInt8Data+0x1a3c>
   1fd2c:	sub	r0, r7, r9
   1fd30:	sub	r4, r0, #256	; 0x100
   1fd34:	mov	r0, r6
   1fd38:	bl	1b84 <Mat_int64Swap>
   1fd3c:	strb	r0, [r5], #1
   1fd40:	add	r6, r6, #8
   1fd44:	subs	r4, r4, #1
   1fd48:	bne	1fd34 <ReadUInt8Data+0xfac>
   1fd4c:	b	207c4 <ReadUInt8Data+0x1a3c>
   1fd50:	mov	sl, r9
   1fd54:	b	20f7c <ReadUInt8Data+0x21f4>
   1fd58:	str	r9, [sp, #24]
   1fd5c:	str	sl, [sp, #28]
   1fd60:	add	r0, r5, #256	; 0x100
   1fd64:	str	r7, [sp, #12]
   1fd68:	sub	sl, r7, #256	; 0x100
   1fd6c:	mov	r6, #0
   1fd70:	add	r9, sp, #32
   1fd74:	mov	r7, #32
   1fd78:	mov	r8, #0
   1fd7c:	str	r5, [sp, #8]
   1fd80:	mov	r4, r0
   1fd84:	ldr	r0, [sp, #24]
   1fd88:	ldr	r1, [sp, #28]
   1fd8c:	mov	r2, #256	; 0x100
   1fd90:	str	r6, [sp, #20]
   1fd94:	ldr	r3, [r0]
   1fd98:	mov	r0, r9
   1fd9c:	bl	18b8 <fread@plt>
   1fda0:	mov	r1, r9
   1fda4:	mov	r2, #0
   1fda8:	add	r3, r1, #16
   1fdac:	vld1.16	{d16-d17}, [r1], r7
   1fdb0:	add	r6, r5, r2
   1fdb4:	add	r2, r2, #16
   1fdb8:	cmp	r2, #256	; 0x100
   1fdbc:	vmovn.i16	d16, q8
   1fdc0:	vst1.8	{d16}, [r6]!
   1fdc4:	vld1.16	{d16-d17}, [r3]
   1fdc8:	vmovn.i16	d16, q8
   1fdcc:	vst1.8	{d16}, [r6]
   1fdd0:	bne	1fda8 <ReadUInt8Data+0x1020>
   1fdd4:	ldr	r1, [sp, #20]
   1fdd8:	add	r8, r0, r8
   1fddc:	add	r5, r5, #256	; 0x100
   1fde0:	add	r0, r4, #256	; 0x100
   1fde4:	add	r6, r1, #256	; 0x100
   1fde8:	cmp	r6, sl
   1fdec:	blt	1fd80 <ReadUInt8Data+0xff8>
   1fdf0:	ldr	r0, [sp, #12]
   1fdf4:	cmp	r6, r0
   1fdf8:	bge	20f78 <ReadUInt8Data+0x21f0>
   1fdfc:	sub	r9, r0, r6
   1fe00:	ldr	r0, [sp, #24]
   1fe04:	ldr	r1, [sp, #28]
   1fe08:	add	r5, sp, #32
   1fe0c:	mov	r2, r9
   1fe10:	ldr	r3, [r0]
   1fe14:	mov	r0, r5
   1fe18:	bl	18b8 <fread@plt>
   1fe1c:	add	r8, r0, r8
   1fe20:	cmp	r9, #1
   1fe24:	blt	20f78 <ReadUInt8Data+0x21f0>
   1fe28:	mov	lr, #0
   1fe2c:	cmp	r9, #8
   1fe30:	bcc	20e6c <ReadUInt8Data+0x20e4>
   1fe34:	bic	lr, r9, #7
   1fe38:	mov	r1, #1
   1fe3c:	mov	sl, r8
   1fe40:	subs	r2, lr, #8
   1fe44:	add	r2, r1, r2, lsr #3
   1fe48:	and	ip, r2, #1
   1fe4c:	beq	20e34 <ReadUInt8Data+0x20ac>
   1fe50:	ldr	r0, [sp, #12]
   1fe54:	ldr	r2, [sp, #20]
   1fe58:	mov	r8, #32
   1fe5c:	sub	r2, r0, r2
   1fe60:	ldr	r0, [sp, #8]
   1fe64:	sub	r2, r2, #256	; 0x100
   1fe68:	bic	r2, r2, #7
   1fe6c:	sub	r2, r2, #8
   1fe70:	add	r1, r1, r2, lsr #3
   1fe74:	mvn	r3, r2, lsr #3
   1fe78:	add	r7, r0, r6
   1fe7c:	mov	r2, #0
   1fe80:	and	r1, r1, #1
   1fe84:	add	r3, r3, r1
   1fe88:	add	r0, r5, #16
   1fe8c:	vld1.16	{d16-d17}, [r5], r8
   1fe90:	add	r1, r7, r2
   1fe94:	adds	r3, r3, #2
   1fe98:	add	r2, r2, #16
   1fe9c:	vmovn.i16	d16, q8
   1fea0:	vst1.8	{d16}, [r1]
   1fea4:	vld1.16	{d16-d17}, [r0]
   1fea8:	add	r0, r1, #8
   1feac:	vmovn.i16	d16, q8
   1feb0:	vst1.8	{d16}, [r0]
   1feb4:	bne	1fe88 <ReadUInt8Data+0x1100>
   1feb8:	b	20e38 <ReadUInt8Data+0x20b0>
   1febc:	str	r9, [sp, #24]
   1fec0:	str	sl, [sp, #28]
   1fec4:	add	r0, r5, #256	; 0x100
   1fec8:	str	r7, [sp, #12]
   1fecc:	sub	sl, r7, #256	; 0x100
   1fed0:	mov	r6, #0
   1fed4:	add	r9, sp, #32
   1fed8:	mov	r7, #32
   1fedc:	mov	r8, #0
   1fee0:	str	r5, [sp, #8]
   1fee4:	mov	r4, r0
   1fee8:	ldr	r0, [sp, #24]
   1feec:	ldr	r1, [sp, #28]
   1fef0:	mov	r2, #256	; 0x100
   1fef4:	str	r6, [sp, #20]
   1fef8:	ldr	r3, [r0]
   1fefc:	mov	r0, r9
   1ff00:	bl	18b8 <fread@plt>
   1ff04:	mov	r1, r9
   1ff08:	mov	r2, #0
   1ff0c:	add	r3, r1, #16
   1ff10:	vld1.16	{d16-d17}, [r1], r7
   1ff14:	add	r6, r5, r2
   1ff18:	add	r2, r2, #16
   1ff1c:	cmp	r2, #256	; 0x100
   1ff20:	vmovn.i16	d16, q8
   1ff24:	vst1.8	{d16}, [r6]!
   1ff28:	vld1.16	{d16-d17}, [r3]
   1ff2c:	vmovn.i16	d16, q8
   1ff30:	vst1.8	{d16}, [r6]
   1ff34:	bne	1ff0c <ReadUInt8Data+0x1184>
   1ff38:	ldr	r1, [sp, #20]
   1ff3c:	add	r8, r0, r8
   1ff40:	add	r5, r5, #256	; 0x100
   1ff44:	add	r0, r4, #256	; 0x100
   1ff48:	add	r6, r1, #256	; 0x100
   1ff4c:	cmp	r6, sl
   1ff50:	blt	1fee4 <ReadUInt8Data+0x115c>
   1ff54:	ldr	r0, [sp, #12]
   1ff58:	cmp	r6, r0
   1ff5c:	bge	20f78 <ReadUInt8Data+0x21f0>
   1ff60:	sub	r9, r0, r6
   1ff64:	ldr	r0, [sp, #24]
   1ff68:	ldr	r1, [sp, #28]
   1ff6c:	add	r5, sp, #32
   1ff70:	mov	r2, r9
   1ff74:	ldr	r3, [r0]
   1ff78:	mov	r0, r5
   1ff7c:	bl	18b8 <fread@plt>
   1ff80:	add	r8, r0, r8
   1ff84:	cmp	r9, #1
   1ff88:	blt	20f78 <ReadUInt8Data+0x21f0>
   1ff8c:	mov	lr, #0
   1ff90:	cmp	r9, #8
   1ff94:	bcc	20ed8 <ReadUInt8Data+0x2150>
   1ff98:	bic	lr, r9, #7
   1ff9c:	mov	r1, #1
   1ffa0:	mov	sl, r8
   1ffa4:	subs	r2, lr, #8
   1ffa8:	add	r2, r1, r2, lsr #3
   1ffac:	and	ip, r2, #1
   1ffb0:	beq	20ea0 <ReadUInt8Data+0x2118>
   1ffb4:	ldr	r0, [sp, #12]
   1ffb8:	ldr	r2, [sp, #20]
   1ffbc:	mov	r8, #32
   1ffc0:	sub	r2, r0, r2
   1ffc4:	ldr	r0, [sp, #8]
   1ffc8:	sub	r2, r2, #256	; 0x100
   1ffcc:	bic	r2, r2, #7
   1ffd0:	sub	r2, r2, #8
   1ffd4:	add	r1, r1, r2, lsr #3
   1ffd8:	mvn	r3, r2, lsr #3
   1ffdc:	add	r7, r0, r6
   1ffe0:	mov	r2, #0
   1ffe4:	and	r1, r1, #1
   1ffe8:	add	r3, r3, r1
   1ffec:	add	r0, r5, #16
   1fff0:	vld1.16	{d16-d17}, [r5], r8
   1fff4:	add	r1, r7, r2
   1fff8:	adds	r3, r3, #2
   1fffc:	add	r2, r2, #16
   20000:	vmovn.i16	d16, q8
   20004:	vst1.8	{d16}, [r1]
   20008:	vld1.16	{d16-d17}, [r0]
   2000c:	add	r0, r1, #8
   20010:	vmovn.i16	d16, q8
   20014:	vst1.8	{d16}, [r0]
   20018:	bne	1ffec <ReadUInt8Data+0x1264>
   2001c:	b	20ea4 <ReadUInt8Data+0x211c>
   20020:	str	r9, [sp, #24]
   20024:	str	sl, [sp, #28]
   20028:	add	r0, r5, #256	; 0x100
   2002c:	mov	r8, r5
   20030:	str	r7, [sp, #12]
   20034:	sub	r5, r7, #256	; 0x100
   20038:	mov	r6, #0
   2003c:	add	r9, sp, #32
   20040:	mov	r7, #32
   20044:	mov	sl, #0
   20048:	str	r0, [sp, #20]
   2004c:	ldr	r0, [sp, #24]
   20050:	ldr	r1, [sp, #28]
   20054:	mov	r2, #256	; 0x100
   20058:	str	r6, [sp, #16]
   2005c:	ldr	r3, [r0]
   20060:	mov	r0, r9
   20064:	bl	18b8 <fread@plt>
   20068:	mov	r3, r9
   2006c:	mov	r1, #0
   20070:	mov	r2, r9
   20074:	vld1.32	{d16-d17}, [r2], r7
   20078:	mov	r4, r8
   2007c:	add	r3, r3, #16
   20080:	vmovn.i32	d16, q8
   20084:	vuzp.8	d16, d17
   20088:	vmov.32	r6, d16[0]
   2008c:	str	r6, [r4, r1]!
   20090:	add	r1, r1, #8
   20094:	vld1.32	{d16-d17}, [r3]
   20098:	add	r3, r4, #4
   2009c:	cmp	r1, #256	; 0x100
   200a0:	vmovn.i32	d16, q8
   200a4:	vuzp.8	d16, d17
   200a8:	vst1.32	{d16[0]}, [r3]
   200ac:	mov	r3, r2
   200b0:	bne	20074 <ReadUInt8Data+0x12ec>
   200b4:	ldr	r4, [sp, #16]
   200b8:	add	sl, r0, sl
   200bc:	ldr	r0, [sp, #20]
   200c0:	add	r8, r8, #256	; 0x100
   200c4:	add	r6, r4, #256	; 0x100
   200c8:	add	r0, r0, #256	; 0x100
   200cc:	cmp	r6, r5
   200d0:	blt	20048 <ReadUInt8Data+0x12c0>
   200d4:	ldr	r0, [sp, #12]
   200d8:	cmp	r6, r0
   200dc:	bge	20b50 <ReadUInt8Data+0x1dc8>
   200e0:	sub	r9, r0, r6
   200e4:	ldr	r0, [sp, #24]
   200e8:	ldr	r1, [sp, #28]
   200ec:	add	r7, sp, #32
   200f0:	mov	r2, r9
   200f4:	ldr	r3, [r0]
   200f8:	mov	r0, r7
   200fc:	bl	18b8 <fread@plt>
   20100:	mov	r8, sl
   20104:	add	r8, r0, sl
   20108:	cmp	r9, #1
   2010c:	blt	20f78 <ReadUInt8Data+0x21f0>
   20110:	mov	lr, #0
   20114:	cmp	r9, #4
   20118:	bcc	20f48 <ReadUInt8Data+0x21c0>
   2011c:	bic	lr, r9, #3
   20120:	mov	r0, #1
   20124:	subs	r1, lr, #4
   20128:	add	r1, r0, r1, lsr #2
   2012c:	and	ip, r1, #1
   20130:	beq	20f0c <ReadUInt8Data+0x2184>
   20134:	ldr	r1, [sp, #12]
   20138:	ldr	sl, [sp, #8]
   2013c:	mov	r5, r7
   20140:	sub	r1, r1, r4
   20144:	sub	r1, r1, #256	; 0x100
   20148:	bic	r1, r1, #3
   2014c:	sub	r1, r1, #4
   20150:	add	r0, r0, r1, lsr #2
   20154:	mvn	r2, r1, lsr #2
   20158:	mov	r1, #32
   2015c:	and	r0, r0, #1
   20160:	add	r3, r2, r0
   20164:	add	r0, sl, r6
   20168:	mov	r2, #0
   2016c:	vld1.32	{d16-d17}, [r5], r1
   20170:	add	r4, r0, r2
   20174:	add	r7, r7, #16
   20178:	adds	r3, r3, #2
   2017c:	add	r2, r2, #8
   20180:	vmovn.i32	d16, q8
   20184:	vuzp.8	d16, d17
   20188:	vst1.32	{d16[0]}, [r4]
   2018c:	add	r4, r4, #4
   20190:	vld1.32	{d16-d17}, [r7]
   20194:	mov	r7, r5
   20198:	vmovn.i32	d16, q8
   2019c:	vuzp.8	d16, d17
   201a0:	vst1.32	{d16[0]}, [r4]
   201a4:	bne	2016c <ReadUInt8Data+0x13e4>
   201a8:	b	20f14 <ReadUInt8Data+0x218c>
   201ac:	str	r9, [sp, #24]
   201b0:	str	sl, [sp, #28]
   201b4:	add	r0, r5, #256	; 0x100
   201b8:	mov	sl, r5
   201bc:	str	r7, [sp, #12]
   201c0:	sub	r5, r7, #256	; 0x100
   201c4:	mov	r6, #0
   201c8:	add	r9, sp, #32
   201cc:	mov	r7, #32
   201d0:	mov	r8, #0
   201d4:	str	r0, [sp, #20]
   201d8:	ldr	r0, [sp, #24]
   201dc:	ldr	r1, [sp, #28]
   201e0:	mov	r2, #256	; 0x100
   201e4:	str	r6, [sp, #16]
   201e8:	ldr	r3, [r0]
   201ec:	mov	r0, r9
   201f0:	bl	18b8 <fread@plt>
   201f4:	mov	r3, r9
   201f8:	mov	r1, #0
   201fc:	mov	r2, r9
   20200:	vld1.32	{d16-d17}, [r2], r7
   20204:	mov	r4, sl
   20208:	add	r3, r3, #16
   2020c:	vmovn.i32	d16, q8
   20210:	vuzp.8	d16, d17
   20214:	vmov.32	r6, d16[0]
   20218:	str	r6, [r4, r1]!
   2021c:	add	r1, r1, #8
   20220:	vld1.32	{d16-d17}, [r3]
   20224:	add	r3, r4, #4
   20228:	cmp	r1, #256	; 0x100
   2022c:	vmovn.i32	d16, q8
   20230:	vuzp.8	d16, d17
   20234:	vst1.32	{d16[0]}, [r3]
   20238:	mov	r3, r2
   2023c:	bne	20200 <ReadUInt8Data+0x1478>
   20240:	ldr	r4, [sp, #16]
   20244:	add	r8, r0, r8
   20248:	ldr	r0, [sp, #20]
   2024c:	add	sl, sl, #256	; 0x100
   20250:	add	r6, r4, #256	; 0x100
   20254:	add	r0, r0, #256	; 0x100
   20258:	cmp	r6, r5
   2025c:	blt	201d4 <ReadUInt8Data+0x144c>
   20260:	ldr	r0, [sp, #12]
   20264:	cmp	r6, r0
   20268:	bge	20f78 <ReadUInt8Data+0x21f0>
   2026c:	sub	r5, r0, r6
   20270:	ldr	r0, [sp, #24]
   20274:	ldr	sl, [sp, #28]
   20278:	add	r9, sp, #32
   2027c:	mov	r2, r5
   20280:	ldr	r3, [r0]
   20284:	mov	r0, r9
   20288:	mov	r1, sl
   2028c:	bl	18b8 <fread@plt>
   20290:	add	r8, r0, r8
   20294:	cmp	r5, #1
   20298:	blt	20f7c <ReadUInt8Data+0x21f4>
   2029c:	mov	lr, #0
   202a0:	cmp	r5, #4
   202a4:	bcc	20fcc <ReadUInt8Data+0x2244>
   202a8:	bic	lr, r5, #3
   202ac:	mov	r2, #1
   202b0:	str	r5, [sp, #24]
   202b4:	subs	r1, lr, #4
   202b8:	add	r1, r2, r1, lsr #2
   202bc:	and	ip, r1, #1
   202c0:	beq	20f88 <ReadUInt8Data+0x2200>
   202c4:	ldr	r0, [sp, #12]
   202c8:	ldr	sl, [sp, #8]
   202cc:	mov	r5, r9
   202d0:	sub	r3, r0, r4
   202d4:	mov	r4, #32
   202d8:	sub	r3, r3, #256	; 0x100
   202dc:	bic	r3, r3, #3
   202e0:	sub	r3, r3, #4
   202e4:	add	r2, r2, r3, lsr #2
   202e8:	mvn	r7, r3, lsr #2
   202ec:	and	r2, r2, #1
   202f0:	add	r3, r7, r2
   202f4:	add	r7, sl, r6
   202f8:	mov	r2, #0
   202fc:	vld1.32	{d16-d17}, [r5], r4
   20300:	add	r1, r7, r2
   20304:	add	r0, r9, #16
   20308:	adds	r3, r3, #2
   2030c:	add	r2, r2, #8
   20310:	mov	r9, r5
   20314:	vmovn.i32	d16, q8
   20318:	vuzp.8	d16, d17
   2031c:	vst1.32	{d16[0]}, [r1]
   20320:	vld1.32	{d16-d17}, [r0]
   20324:	add	r0, r1, #4
   20328:	vmovn.i32	d16, q8
   2032c:	vuzp.8	d16, d17
   20330:	vst1.32	{d16[0]}, [r0]
   20334:	bne	202fc <ReadUInt8Data+0x1574>
   20338:	b	20f90 <ReadUInt8Data+0x2208>
   2033c:	str	r9, [sp, #24]
   20340:	str	sl, [sp, #28]
   20344:	add	r0, r5, #256	; 0x100
   20348:	mov	r4, r5
   2034c:	sub	r5, r7, #256	; 0x100
   20350:	mov	r6, #0
   20354:	add	r9, sp, #32
   20358:	mov	sl, #32
   2035c:	mov	r8, #0
   20360:	str	r7, [sp, #12]
   20364:	str	r0, [sp, #16]
   20368:	ldr	r0, [sp, #24]
   2036c:	ldr	r1, [sp, #28]
   20370:	mov	r2, #256	; 0x100
   20374:	str	r6, [sp, #20]
   20378:	ldr	r3, [r0]
   2037c:	mov	r0, r9
   20380:	bl	18b8 <fread@plt>
   20384:	mov	r3, r9
   20388:	mov	r1, #0
   2038c:	mov	r2, r9
   20390:	vld1.32	{d16-d17}, [r2], sl
   20394:	mov	r7, r4
   20398:	add	r3, r3, #16
   2039c:	vcvt.s32.f32	q8, q8
   203a0:	vmovn.i32	d16, q8
   203a4:	vuzp.8	d16, d17
   203a8:	vmov.32	r6, d16[0]
   203ac:	str	r6, [r7, r1]!
   203b0:	add	r1, r1, #8
   203b4:	vld1.32	{d16-d17}, [r3]
   203b8:	add	r3, r7, #4
   203bc:	cmp	r1, #256	; 0x100
   203c0:	vcvt.s32.f32	q8, q8
   203c4:	vmovn.i32	d16, q8
   203c8:	vuzp.8	d16, d17
   203cc:	vst1.32	{d16[0]}, [r3]
   203d0:	mov	r3, r2
   203d4:	bne	20390 <ReadUInt8Data+0x1608>
   203d8:	ldr	r1, [sp, #20]
   203dc:	add	r8, r0, r8
   203e0:	ldr	r0, [sp, #16]
   203e4:	add	r4, r4, #256	; 0x100
   203e8:	add	r6, r1, #256	; 0x100
   203ec:	add	r0, r0, #256	; 0x100
   203f0:	cmp	r6, r5
   203f4:	blt	20364 <ReadUInt8Data+0x15dc>
   203f8:	ldr	r0, [sp, #12]
   203fc:	cmp	r6, r0
   20400:	bge	20f78 <ReadUInt8Data+0x21f0>
   20404:	sub	r9, r0, r6
   20408:	ldr	r0, [sp, #24]
   2040c:	ldr	sl, [sp, #28]
   20410:	add	r7, sp, #32
   20414:	mov	r2, r9
   20418:	ldr	r3, [r0]
   2041c:	mov	r0, r7
   20420:	mov	r1, sl
   20424:	bl	18b8 <fread@plt>
   20428:	add	r8, r0, r8
   2042c:	cmp	r9, #1
   20430:	blt	20f7c <ReadUInt8Data+0x21f4>
   20434:	mov	lr, #0
   20438:	cmp	r9, #4
   2043c:	bcc	21040 <ReadUInt8Data+0x22b8>
   20440:	bic	lr, r9, #3
   20444:	mov	r0, #1
   20448:	subs	r1, lr, #4
   2044c:	add	r1, r0, r1, lsr #2
   20450:	and	ip, r1, #1
   20454:	beq	21000 <ReadUInt8Data+0x2278>
   20458:	ldr	r1, [sp, #12]
   2045c:	ldr	r2, [sp, #20]
   20460:	ldr	sl, [sp, #8]
   20464:	mov	r5, r7
   20468:	sub	r1, r1, r2
   2046c:	sub	r1, r1, #256	; 0x100
   20470:	bic	r1, r1, #3
   20474:	sub	r1, r1, #4
   20478:	add	r0, r0, r1, lsr #2
   2047c:	mvn	r2, r1, lsr #2
   20480:	mov	r1, #32
   20484:	and	r0, r0, #1
   20488:	add	r3, r2, r0
   2048c:	add	r0, sl, r6
   20490:	mov	r2, #0
   20494:	vld1.32	{d16-d17}, [r5], r1
   20498:	add	r4, r0, r2
   2049c:	add	r7, r7, #16
   204a0:	adds	r3, r3, #2
   204a4:	add	r2, r2, #8
   204a8:	vcvt.s32.f32	q8, q8
   204ac:	vmovn.i32	d16, q8
   204b0:	vuzp.8	d16, d17
   204b4:	vst1.32	{d16[0]}, [r4]
   204b8:	add	r4, r4, #4
   204bc:	vld1.32	{d16-d17}, [r7]
   204c0:	mov	r7, r5
   204c4:	vcvt.s32.f32	q8, q8
   204c8:	vmovn.i32	d16, q8
   204cc:	vuzp.8	d16, d17
   204d0:	vst1.32	{d16[0]}, [r4]
   204d4:	bne	20494 <ReadUInt8Data+0x170c>
   204d8:	b	21008 <ReadUInt8Data+0x2280>
   204dc:	add	r1, sp, #32
   204e0:	str	sl, [sp, #28]
   204e4:	str	r5, [sp, #8]
   204e8:	add	r6, r5, #1
   204ec:	mov	r0, r7
   204f0:	str	r7, [sp, #12]
   204f4:	sub	sl, r7, #256	; 0x100
   204f8:	mov	r5, #0
   204fc:	mov	r7, #0
   20500:	add	r8, r1, #8
   20504:	ldr	r3, [r9]
   20508:	ldr	r1, [sp, #28]
   2050c:	add	r0, sp, #32
   20510:	mov	r2, #256	; 0x100
   20514:	mov	r4, r5
   20518:	bl	18b8 <fread@plt>
   2051c:	mov	r1, r8
   20520:	mov	r2, #0
   20524:	vldr	d16, [r1, #-8]
   20528:	add	r3, r6, r2
   2052c:	vcvt.u32.f64	s0, d16
   20530:	vmov	r5, s0
   20534:	strb	r5, [r3, #-1]
   20538:	vldr	d16, [r1]
   2053c:	add	r1, r1, #16
   20540:	vcvt.u32.f64	s0, d16
   20544:	vmov	r3, s0
   20548:	strb	r3, [r6, r2]
   2054c:	add	r2, r2, #2
   20550:	cmp	r2, #256	; 0x100
   20554:	bne	20524 <ReadUInt8Data+0x179c>
   20558:	add	r5, r4, #256	; 0x100
   2055c:	add	r7, r0, r7
   20560:	add	r6, r6, #256	; 0x100
   20564:	cmp	r5, sl
   20568:	blt	20504 <ReadUInt8Data+0x177c>
   2056c:	ldr	sl, [sp, #12]
   20570:	cmp	r5, sl
   20574:	bge	20b60 <ReadUInt8Data+0x1dd8>
   20578:	ldr	r3, [r9]
   2057c:	ldr	r1, [sp, #28]
   20580:	sub	r6, sl, r5
   20584:	add	r9, sp, #32
   20588:	mov	r0, r9
   2058c:	mov	r2, r6
   20590:	bl	18b8 <fread@plt>
   20594:	mov	r8, r7
   20598:	add	r8, r0, r7
   2059c:	cmp	r6, #1
   205a0:	blt	20f78 <ReadUInt8Data+0x21f0>
   205a4:	mvn	r0, #256	; 0x100
   205a8:	mov	r1, #0
   205ac:	sub	r2, r0, r4
   205b0:	and	r0, r6, #1
   205b4:	cmn	r2, sl
   205b8:	beq	2060c <ReadUInt8Data+0x1884>
   205bc:	ldr	r1, [sp, #8]
   205c0:	sub	r2, r0, sl
   205c4:	add	r7, r9, #8
   205c8:	mov	r3, #0
   205cc:	add	r2, r2, r5
   205d0:	add	r4, r1, r5
   205d4:	vldr	d16, [r7, #-8]
   205d8:	mov	r1, r4
   205dc:	vcvt.u32.f64	s0, d16
   205e0:	vmov	r6, s0
   205e4:	strb	r6, [r1, -r3]!
   205e8:	sub	r3, r3, #2
   205ec:	vldr	d16, [r7]
   205f0:	add	r7, r7, #16
   205f4:	cmp	r2, r3
   205f8:	vcvt.u32.f64	s0, d16
   205fc:	vmov	r6, s0
   20600:	strb	r6, [r1, #1]
   20604:	bne	205d4 <ReadUInt8Data+0x184c>
   20608:	rsb	r1, r3, #0
   2060c:	cmp	r0, #0
   20610:	beq	20f78 <ReadUInt8Data+0x21f0>
   20614:	add	r0, r9, r1, lsl #3
   20618:	vldr	d16, [r0]
   2061c:	add	r0, r1, r5
   20620:	vcvt.u32.f64	s0, d16
   20624:	ldr	r2, [sp, #8]
   20628:	vmov	r1, s0
   2062c:	strb	r1, [r2, r0]
   20630:	b	20f78 <ReadUInt8Data+0x21f0>
   20634:	str	r4, [sp, #4]
   20638:	str	r9, [sp, #24]
   2063c:	mov	r9, r7
   20640:	add	r0, r5, #256	; 0x100
   20644:	str	r7, [sp, #12]
   20648:	sub	r9, r7, #256	; 0x100
   2064c:	mov	r4, #0
   20650:	add	sl, sp, #32
   20654:	mov	r7, #32
   20658:	mov	r8, #0
   2065c:	str	r0, [sp, #20]
   20660:	ldr	r0, [sp, #24]
   20664:	ldr	r1, [sp, #28]
   20668:	mov	r2, #256	; 0x100
   2066c:	str	r4, [sp, #16]
   20670:	ldr	r3, [r0]
   20674:	mov	r0, sl
   20678:	bl	18b8 <fread@plt>
   2067c:	mov	r1, sl
   20680:	mov	r2, #0
   20684:	add	r3, r1, #16
   20688:	vld1.64	{d16-d17}, [r1], r7
   2068c:	mov	r6, r5
   20690:	vmovn.i64	d16, q8
   20694:	vmov.32	r4, d16[0]
   20698:	strb	r4, [r6, r2]!
   2069c:	vmov.32	r4, d16[1]
   206a0:	add	r2, r2, #4
   206a4:	cmp	r2, #256	; 0x100
   206a8:	strb	r4, [r6, #1]
   206ac:	vld1.64	{d16-d17}, [r3]
   206b0:	vmovn.i64	d16, q8
   206b4:	vmov.32	r3, d16[1]
   206b8:	strb	r3, [r6, #3]
   206bc:	vmov.32	r3, d16[0]
   206c0:	strb	r3, [r6, #2]
   206c4:	bne	20684 <ReadUInt8Data+0x18fc>
   206c8:	ldr	r6, [sp, #16]
   206cc:	add	r8, r0, r8
   206d0:	ldr	r0, [sp, #20]
   206d4:	add	r5, r5, #256	; 0x100
   206d8:	add	r4, r6, #256	; 0x100
   206dc:	add	r0, r0, #256	; 0x100
   206e0:	cmp	r4, r9
   206e4:	blt	2065c <ReadUInt8Data+0x18d4>
   206e8:	ldr	r7, [sp, #12]
   206ec:	cmp	r4, r7
   206f0:	bge	207c0 <ReadUInt8Data+0x1a38>
   206f4:	ldr	r9, [sp, #24]
   206f8:	ldr	r1, [sp, #28]
   206fc:	sub	r5, r7, r4
   20700:	add	sl, sp, #32
   20704:	mov	r0, sl
   20708:	mov	r2, r5
   2070c:	ldr	r3, [r9]
   20710:	bl	18b8 <fread@plt>
   20714:	add	r8, r0, r8
   20718:	cmp	r5, #1
   2071c:	blt	210f8 <ReadUInt8Data+0x2370>
   20720:	mov	lr, #0
   20724:	beq	210cc <ReadUInt8Data+0x2344>
   20728:	bic	lr, r5, #1
   2072c:	mov	r2, #1
   20730:	str	r5, [sp]
   20734:	subs	r1, lr, #2
   20738:	add	r1, r2, r1, lsr #1
   2073c:	and	ip, r1, #1
   20740:	beq	21084 <ReadUInt8Data+0x22fc>
   20744:	sub	r3, r7, r6
   20748:	ldr	r0, [sp, #8]
   2074c:	mov	r6, #32
   20750:	sub	r3, r3, #256	; 0x100
   20754:	bic	r3, r3, #1
   20758:	sub	r3, r3, #2
   2075c:	add	r2, r2, r3, lsr #1
   20760:	mvn	r7, r3, lsr #1
   20764:	add	r0, r0, r4
   20768:	and	r2, r2, #1
   2076c:	add	r3, r7, r2
   20770:	mov	r2, #0
   20774:	add	r5, sl, #16
   20778:	vld1.64	{d16-d17}, [sl], r6
   2077c:	mov	r7, r0
   20780:	adds	r3, r3, #2
   20784:	vmovn.i64	d16, q8
   20788:	vmov.32	r1, d16[0]
   2078c:	strb	r1, [r7, r2]!
   20790:	vmov.32	r1, d16[1]
   20794:	strb	r1, [r7, #1]
   20798:	add	r1, r0, r2
   2079c:	add	r2, r2, #4
   207a0:	vld1.64	{d16-d17}, [r5]
   207a4:	vmovn.i64	d16, q8
   207a8:	vmov.32	r5, d16[1]
   207ac:	strb	r5, [r1, #3]
   207b0:	vmov.32	r5, d16[0]
   207b4:	strb	r5, [r1, #2]
   207b8:	bne	20774 <ReadUInt8Data+0x19ec>
   207bc:	b	21088 <ReadUInt8Data+0x2300>
   207c0:	ldr	sl, [sp, #28]
   207c4:	ldr	r5, [sp, #8]
   207c8:	ldr	r9, [sp, #24]
   207cc:	ldr	r4, [sp, #4]
   207d0:	cmp	r4, #13
   207d4:	bne	20f7c <ReadUInt8Data+0x21f4>
   207d8:	ldr	r0, [r9, #20]
   207dc:	cmp	r0, #0
   207e0:	beq	2082c <ReadUInt8Data+0x1aa4>
   207e4:	cmp	r7, #256	; 0x100
   207e8:	bgt	208d4 <ReadUInt8Data+0x1b4c>
   207ec:	ldr	r3, [r9]
   207f0:	add	r4, sp, #32
   207f4:	mov	r1, sl
   207f8:	mov	r2, r7
   207fc:	mov	r0, r4
   20800:	bl	18b8 <fread@plt>
   20804:	add	r8, r0, r8
   20808:	cmp	r7, #1
   2080c:	blt	20f7c <ReadUInt8Data+0x21f4>
   20810:	mov	r0, r4
   20814:	bl	1bd4 <Mat_uint64Swap>
   20818:	strb	r0, [r5], #1
   2081c:	add	r4, r4, #8
   20820:	subs	r7, r7, #1
   20824:	bne	20810 <ReadUInt8Data+0x1a88>
   20828:	b	20f7c <ReadUInt8Data+0x21f4>
   2082c:	cmp	r7, #256	; 0x100
   20830:	bgt	209b4 <ReadUInt8Data+0x1c2c>
   20834:	ldr	r3, [r9]
   20838:	add	r4, sp, #32
   2083c:	mov	r1, sl
   20840:	mov	r2, r7
   20844:	mov	r0, r4
   20848:	bl	18b8 <fread@plt>
   2084c:	add	r8, r0, r8
   20850:	cmp	r7, #1
   20854:	blt	20f7c <ReadUInt8Data+0x21f4>
   20858:	mov	r9, #0
   2085c:	beq	20e10 <ReadUInt8Data+0x2088>
   20860:	bic	r9, r7, #1
   20864:	mov	r2, #1
   20868:	mov	lr, r7
   2086c:	subs	r1, r9, #2
   20870:	add	r1, r2, r1, lsr #1
   20874:	and	ip, r1, #1
   20878:	beq	20dcc <ReadUInt8Data+0x2044>
   2087c:	sub	r3, r1, ip
   20880:	mov	r1, #0
   20884:	mov	r7, #32
   20888:	mov	r0, r5
   2088c:	add	r6, r4, #16
   20890:	vld1.64	{d16-d17}, [r4], r7
   20894:	mov	r2, r0
   20898:	subs	r3, r3, #2
   2089c:	vmovn.i64	d16, q8
   208a0:	vmov.32	r5, d16[0]
   208a4:	strb	r5, [r2, r1]!
   208a8:	vmov.32	r5, d16[1]
   208ac:	add	r1, r1, #4
   208b0:	strb	r5, [r2, #1]
   208b4:	vld1.64	{d16-d17}, [r6]
   208b8:	vmovn.i64	d16, q8
   208bc:	vmov.32	r6, d16[1]
   208c0:	strb	r6, [r2, #3]
   208c4:	vmov.32	r6, d16[0]
   208c8:	strb	r6, [r2, #2]
   208cc:	bne	2088c <ReadUInt8Data+0x1b04>
   208d0:	b	20dd4 <ReadUInt8Data+0x204c>
   208d4:	sub	r0, r7, #256	; 0x100
   208d8:	str	r9, [sp, #24]
   208dc:	mov	r9, r5
   208e0:	add	r1, r5, #256	; 0x100
   208e4:	str	sl, [sp, #28]
   208e8:	str	r7, [sp, #12]
   208ec:	str	r0, [sp, #20]
   208f0:	mov	r0, #0
   208f4:	mov	sl, r0
   208f8:	ldr	r0, [sp, #24]
   208fc:	mov	r5, r1
   20900:	ldr	r1, [sp, #28]
   20904:	add	r4, sp, #32
   20908:	mov	r2, #256	; 0x100
   2090c:	ldr	r3, [r0]
   20910:	mov	r0, r4
   20914:	bl	18b8 <fread@plt>
   20918:	mov	r6, r0
   2091c:	mov	r7, #0
   20920:	mov	r0, r4
   20924:	bl	1bd4 <Mat_uint64Swap>
   20928:	strb	r0, [r9, r7]
   2092c:	add	r7, r7, #1
   20930:	add	r4, r4, #8
   20934:	cmp	r7, #256	; 0x100
   20938:	bne	20920 <ReadUInt8Data+0x1b98>
   2093c:	ldr	r2, [sp, #20]
   20940:	add	r0, sl, #256	; 0x100
   20944:	add	r8, r6, r8
   20948:	add	r9, r9, #256	; 0x100
   2094c:	add	r1, r5, #256	; 0x100
   20950:	cmp	r0, r2
   20954:	blt	208f4 <ReadUInt8Data+0x1b6c>
   20958:	ldr	r7, [sp, #12]
   2095c:	cmp	r0, r7
   20960:	bge	20f78 <ReadUInt8Data+0x21f0>
   20964:	sub	r6, r7, r0
   20968:	ldr	r0, [sp, #24]
   2096c:	ldr	r1, [sp, #28]
   20970:	add	r4, sp, #32
   20974:	mov	r2, r6
   20978:	ldr	r3, [r0]
   2097c:	mov	r0, r4
   20980:	bl	18b8 <fread@plt>
   20984:	add	r8, r0, r8
   20988:	cmp	r6, #1
   2098c:	blt	20f78 <ReadUInt8Data+0x21f0>
   20990:	sub	r0, r7, sl
   20994:	sub	r6, r0, #256	; 0x100
   20998:	mov	r0, r4
   2099c:	bl	1bd4 <Mat_uint64Swap>
   209a0:	strb	r0, [r5], #1
   209a4:	add	r4, r4, #8
   209a8:	subs	r6, r6, #1
   209ac:	bne	20998 <ReadUInt8Data+0x1c10>
   209b0:	b	20f78 <ReadUInt8Data+0x21f0>
   209b4:	str	r9, [sp, #24]
   209b8:	str	sl, [sp, #28]
   209bc:	sub	r1, r7, #256	; 0x100
   209c0:	str	r7, [sp, #12]
   209c4:	add	r0, r5, #256	; 0x100
   209c8:	mov	sl, r5
   209cc:	mov	r6, #0
   209d0:	add	r9, sp, #32
   209d4:	mov	r7, #32
   209d8:	str	r5, [sp, #8]
   209dc:	str	r1, [sp, #16]
   209e0:	str	r0, [sp, #20]
   209e4:	ldr	r0, [sp, #24]
   209e8:	ldr	r1, [sp, #28]
   209ec:	mov	r2, #256	; 0x100
   209f0:	mov	r5, r6
   209f4:	ldr	r3, [r0]
   209f8:	mov	r0, r9
   209fc:	bl	18b8 <fread@plt>
   20a00:	mov	r1, r9
   20a04:	mov	r2, #0
   20a08:	add	r3, r1, #16
   20a0c:	vld1.64	{d16-d17}, [r1], r7
   20a10:	mov	r4, sl
   20a14:	vmovn.i64	d16, q8
   20a18:	vmov.32	r6, d16[0]
   20a1c:	strb	r6, [r4, r2]!
   20a20:	vmov.32	r6, d16[1]
   20a24:	add	r2, r2, #4
   20a28:	cmp	r2, #256	; 0x100
   20a2c:	strb	r6, [r4, #1]
   20a30:	vld1.64	{d16-d17}, [r3]
   20a34:	vmovn.i64	d16, q8
   20a38:	vmov.32	r3, d16[1]
   20a3c:	strb	r3, [r4, #3]
   20a40:	vmov.32	r3, d16[0]
   20a44:	strb	r3, [r4, #2]
   20a48:	bne	20a08 <ReadUInt8Data+0x1c80>
   20a4c:	add	r8, r0, r8
   20a50:	ldr	r0, [sp, #20]
   20a54:	ldr	r1, [sp, #16]
   20a58:	add	r6, r5, #256	; 0x100
   20a5c:	add	sl, sl, #256	; 0x100
   20a60:	add	r0, r0, #256	; 0x100
   20a64:	cmp	r6, r1
   20a68:	blt	209e0 <ReadUInt8Data+0x1c58>
   20a6c:	ldr	r0, [sp, #12]
   20a70:	cmp	r6, r0
   20a74:	bge	20f78 <ReadUInt8Data+0x21f0>
   20a78:	sub	r7, r0, r6
   20a7c:	ldr	r0, [sp, #24]
   20a80:	ldr	sl, [sp, #28]
   20a84:	add	r9, sp, #32
   20a88:	mov	r4, r5
   20a8c:	mov	r2, r7
   20a90:	ldr	r3, [r0]
   20a94:	mov	r0, r9
   20a98:	mov	r1, sl
   20a9c:	bl	18b8 <fread@plt>
   20aa0:	add	r8, r0, r8
   20aa4:	cmp	r7, #1
   20aa8:	blt	20f7c <ReadUInt8Data+0x21f4>
   20aac:	mov	lr, #0
   20ab0:	beq	2114c <ReadUInt8Data+0x23c4>
   20ab4:	bic	lr, r7, #1
   20ab8:	mov	r2, #1
   20abc:	str	r7, [sp, #24]
   20ac0:	subs	r1, lr, #2
   20ac4:	add	r1, r2, r1, lsr #1
   20ac8:	and	ip, r1, #1
   20acc:	beq	21104 <ReadUInt8Data+0x237c>
   20ad0:	ldr	r0, [sp, #12]
   20ad4:	mov	sl, #32
   20ad8:	sub	r3, r0, r4
   20adc:	ldr	r0, [sp, #8]
   20ae0:	sub	r3, r3, #256	; 0x100
   20ae4:	bic	r3, r3, #1
   20ae8:	sub	r3, r3, #2
   20aec:	add	r2, r2, r3, lsr #1
   20af0:	mvn	r7, r3, lsr #1
   20af4:	add	r4, r0, r6
   20af8:	and	r2, r2, #1
   20afc:	add	r3, r7, r2
   20b00:	mov	r2, #0
   20b04:	add	r1, r9, #16
   20b08:	vld1.64	{d16-d17}, [r9], sl
   20b0c:	mov	r7, r4
   20b10:	adds	r3, r3, #2
   20b14:	vmovn.i64	d16, q8
   20b18:	vmov.32	r0, d16[0]
   20b1c:	strb	r0, [r7, r2]!
   20b20:	vmov.32	r0, d16[1]
   20b24:	strb	r0, [r7, #1]
   20b28:	add	r0, r4, r2
   20b2c:	add	r2, r2, #4
   20b30:	vld1.64	{d16-d17}, [r1]
   20b34:	vmovn.i64	d16, q8
   20b38:	vmov.32	r1, d16[1]
   20b3c:	strb	r1, [r0, #3]
   20b40:	vmov.32	r1, d16[0]
   20b44:	strb	r1, [r0, #2]
   20b48:	bne	20b04 <ReadUInt8Data+0x1d7c>
   20b4c:	b	21108 <ReadUInt8Data+0x2380>
   20b50:	ldr	r0, [sp, #28]
   20b54:	mov	r8, sl
   20b58:	mov	sl, r0
   20b5c:	b	20f7c <ReadUInt8Data+0x21f4>
   20b60:	ldr	sl, [sp, #28]
   20b64:	mov	r8, r7
   20b68:	b	20f7c <ReadUInt8Data+0x21f4>
   20b6c:	mov	r1, #0
   20b70:	cmp	lr, #0
   20b74:	beq	20b90 <ReadUInt8Data+0x1e08>
   20b78:	add	r2, sp, #32
   20b7c:	add	r2, r2, r1, lsl #1
   20b80:	add	r1, r5, r1
   20b84:	vld1.16	{d16-d17}, [r2]
   20b88:	vmovn.i16	d16, q8
   20b8c:	vst1.8	{d16}, [r1]
   20b90:	mov	r7, ip
   20b94:	cmp	r0, ip
   20b98:	beq	20f7c <ReadUInt8Data+0x21f4>
   20b9c:	add	r1, sp, #32
   20ba0:	add	r2, r5, r0
   20ba4:	add	r1, r1, r0, lsl #1
   20ba8:	sub	r0, r7, r0
   20bac:	ldrb	r3, [r1], #2
   20bb0:	subs	r0, r0, #1
   20bb4:	strb	r3, [r2], #1
   20bb8:	bne	20bac <ReadUInt8Data+0x1e24>
   20bbc:	b	20f7c <ReadUInt8Data+0x21f4>
   20bc0:	mov	r1, #0
   20bc4:	cmp	lr, #0
   20bc8:	beq	20be4 <ReadUInt8Data+0x1e5c>
   20bcc:	add	r2, sp, #32
   20bd0:	add	r2, r2, r1, lsl #1
   20bd4:	add	r1, r5, r1
   20bd8:	vld1.16	{d16-d17}, [r2]
   20bdc:	vmovn.i16	d16, q8
   20be0:	vst1.8	{d16}, [r1]
   20be4:	mov	r7, ip
   20be8:	cmp	r0, ip
   20bec:	beq	20f7c <ReadUInt8Data+0x21f4>
   20bf0:	add	r1, sp, #32
   20bf4:	add	r2, r5, r0
   20bf8:	add	r1, r1, r0, lsl #1
   20bfc:	sub	r0, r7, r0
   20c00:	ldrb	r3, [r1], #2
   20c04:	subs	r0, r0, #1
   20c08:	strb	r3, [r2], #1
   20c0c:	bne	20c00 <ReadUInt8Data+0x1e78>
   20c10:	b	20f7c <ReadUInt8Data+0x21f4>
   20c14:	mov	r1, #0
   20c18:	cmp	ip, #0
   20c1c:	beq	20c40 <ReadUInt8Data+0x1eb8>
   20c20:	add	r2, sp, #32
   20c24:	ldr	r0, [sp, #8]
   20c28:	add	r2, r2, r1, lsl #2
   20c2c:	vld1.32	{d16-d17}, [r2]
   20c30:	add	r1, r0, r1
   20c34:	vmovn.i32	d16, q8
   20c38:	vuzp.8	d16, d17
   20c3c:	vst1.32	{d16[0]}, [r1]
   20c40:	mov	r7, lr
   20c44:	cmp	r9, lr
   20c48:	beq	20f7c <ReadUInt8Data+0x21f4>
   20c4c:	ldr	r0, [sp, #8]
   20c50:	add	r1, sp, #32
   20c54:	add	r1, r1, r9, lsl #2
   20c58:	add	r2, r0, r9
   20c5c:	sub	r0, r7, r9
   20c60:	ldr	r3, [r1], #4
   20c64:	subs	r0, r0, #1
   20c68:	strb	r3, [r2], #1
   20c6c:	bne	20c60 <ReadUInt8Data+0x1ed8>
   20c70:	b	20f7c <ReadUInt8Data+0x21f4>
   20c74:	mov	r1, #0
   20c78:	cmp	ip, #0
   20c7c:	beq	20ca0 <ReadUInt8Data+0x1f18>
   20c80:	add	r2, sp, #32
   20c84:	ldr	r0, [sp, #8]
   20c88:	add	r2, r2, r1, lsl #2
   20c8c:	vld1.32	{d16-d17}, [r2]
   20c90:	add	r1, r0, r1
   20c94:	vmovn.i32	d16, q8
   20c98:	vuzp.8	d16, d17
   20c9c:	vst1.32	{d16[0]}, [r1]
   20ca0:	mov	r7, lr
   20ca4:	cmp	r9, lr
   20ca8:	beq	20f7c <ReadUInt8Data+0x21f4>
   20cac:	ldr	r0, [sp, #8]
   20cb0:	add	r1, sp, #32
   20cb4:	add	r1, r1, r9, lsl #2
   20cb8:	add	r2, r0, r9
   20cbc:	sub	r0, r7, r9
   20cc0:	ldr	r3, [r1], #4
   20cc4:	subs	r0, r0, #1
   20cc8:	strb	r3, [r2], #1
   20ccc:	bne	20cc0 <ReadUInt8Data+0x1f38>
   20cd0:	b	20f7c <ReadUInt8Data+0x21f4>
   20cd4:	mov	r1, #0
   20cd8:	cmp	ip, #0
   20cdc:	beq	20d04 <ReadUInt8Data+0x1f7c>
   20ce0:	add	r2, sp, #32
   20ce4:	ldr	r0, [sp, #8]
   20ce8:	add	r2, r2, r1, lsl #2
   20cec:	vld1.32	{d16-d17}, [r2]
   20cf0:	add	r1, r0, r1
   20cf4:	vcvt.s32.f32	q8, q8
   20cf8:	vmovn.i32	d16, q8
   20cfc:	vuzp.8	d16, d17
   20d00:	vst1.32	{d16[0]}, [r1]
   20d04:	mov	r7, lr
   20d08:	cmp	r9, lr
   20d0c:	beq	20f7c <ReadUInt8Data+0x21f4>
   20d10:	ldr	r0, [sp, #8]
   20d14:	add	r1, sp, #32
   20d18:	add	r1, r1, r9, lsl #2
   20d1c:	add	r2, r0, r9
   20d20:	sub	r0, r7, r9
   20d24:	vldr	s0, [r1]
   20d28:	add	r1, r1, #4
   20d2c:	subs	r0, r0, #1
   20d30:	vcvt.u32.f32	s0, s0
   20d34:	vmov	r3, s0
   20d38:	strb	r3, [r2], #1
   20d3c:	bne	20d24 <ReadUInt8Data+0x1f9c>
   20d40:	b	20f7c <ReadUInt8Data+0x21f4>
   20d44:	mov	r1, #0
   20d48:	cmp	ip, #0
   20d4c:	beq	20d74 <ReadUInt8Data+0x1fec>
   20d50:	add	r2, sp, #32
   20d54:	ldr	r3, [sp, #8]
   20d58:	add	r2, r2, r1, lsl #3
   20d5c:	vld1.64	{d16-d17}, [r2]
   20d60:	vmovn.i64	d16, q8
   20d64:	vmov.32	r2, d16[0]
   20d68:	strb	r2, [r3, r1]!
   20d6c:	vmov.32	r1, d16[1]
   20d70:	strb	r1, [r3, #1]
   20d74:	ldr	r4, [sp, #4]
   20d78:	mov	r7, lr
   20d7c:	cmp	r0, lr
   20d80:	bne	20d98 <ReadUInt8Data+0x2010>
   20d84:	ldr	sl, [sp, #28]
   20d88:	ldr	r5, [sp, #8]
   20d8c:	cmp	r4, #13
   20d90:	beq	207d8 <ReadUInt8Data+0x1a50>
   20d94:	b	20f7c <ReadUInt8Data+0x21f4>
   20d98:	ldr	r5, [sp, #8]
   20d9c:	add	r1, sp, #32
   20da0:	add	r1, r1, r0, lsl #3
   20da4:	add	r2, r5, r0
   20da8:	sub	r0, r7, r0
   20dac:	ldrb	r3, [r1], #8
   20db0:	subs	r0, r0, #1
   20db4:	strb	r3, [r2], #1
   20db8:	bne	20dac <ReadUInt8Data+0x2024>
   20dbc:	ldr	sl, [sp, #28]
   20dc0:	cmp	r4, #13
   20dc4:	beq	207d8 <ReadUInt8Data+0x1a50>
   20dc8:	b	20f7c <ReadUInt8Data+0x21f4>
   20dcc:	mov	r1, #0
   20dd0:	mov	r0, r5
   20dd4:	cmp	ip, #0
   20dd8:	mov	r5, r0
   20ddc:	beq	20e04 <ReadUInt8Data+0x207c>
   20de0:	add	r2, sp, #32
   20de4:	mov	r3, r5
   20de8:	add	r2, r2, r1, lsl #3
   20dec:	vld1.64	{d16-d17}, [r2]
   20df0:	vmovn.i64	d16, q8
   20df4:	vmov.32	r2, d16[0]
   20df8:	strb	r2, [r3, r1]!
   20dfc:	vmov.32	r1, d16[1]
   20e00:	strb	r1, [r3, #1]
   20e04:	mov	r7, lr
   20e08:	cmp	r9, lr
   20e0c:	beq	20f7c <ReadUInt8Data+0x21f4>
   20e10:	add	r1, sp, #32
   20e14:	add	r2, r5, r9
   20e18:	sub	r0, r7, r9
   20e1c:	add	r1, r1, r9, lsl #3
   20e20:	ldrb	r3, [r1], #8
   20e24:	subs	r0, r0, #1
   20e28:	strb	r3, [r2], #1
   20e2c:	bne	20e20 <ReadUInt8Data+0x2098>
   20e30:	b	20f7c <ReadUInt8Data+0x21f4>
   20e34:	mov	r2, #0
   20e38:	cmp	ip, #0
   20e3c:	mov	r8, sl
   20e40:	beq	20e64 <ReadUInt8Data+0x20dc>
   20e44:	add	r0, sp, #32
   20e48:	ldr	r1, [sp, #8]
   20e4c:	add	r0, r0, r2, lsl #1
   20e50:	vld1.16	{d16-d17}, [r0]
   20e54:	add	r0, r2, r6
   20e58:	add	r0, r1, r0
   20e5c:	vmovn.i16	d16, q8
   20e60:	vst1.8	{d16}, [r0]
   20e64:	cmp	r9, lr
   20e68:	beq	20f78 <ReadUInt8Data+0x21f0>
   20e6c:	add	r0, sp, #32
   20e70:	ldr	r3, [sp, #20]
   20e74:	add	r1, r4, lr
   20e78:	add	r2, r0, lr, lsl #1
   20e7c:	ldr	r0, [sp, #12]
   20e80:	sub	r0, r0, r3
   20e84:	sub	r0, r0, lr
   20e88:	sub	r0, r0, #256	; 0x100
   20e8c:	ldrb	r3, [r2], #2
   20e90:	subs	r0, r0, #1
   20e94:	strb	r3, [r1], #1
   20e98:	bne	20e8c <ReadUInt8Data+0x2104>
   20e9c:	b	20f78 <ReadUInt8Data+0x21f0>
   20ea0:	mov	r2, #0
   20ea4:	cmp	ip, #0
   20ea8:	mov	r8, sl
   20eac:	beq	20ed0 <ReadUInt8Data+0x2148>
   20eb0:	add	r0, sp, #32
   20eb4:	ldr	r1, [sp, #8]
   20eb8:	add	r0, r0, r2, lsl #1
   20ebc:	vld1.16	{d16-d17}, [r0]
   20ec0:	add	r0, r2, r6
   20ec4:	add	r0, r1, r0
   20ec8:	vmovn.i16	d16, q8
   20ecc:	vst1.8	{d16}, [r0]
   20ed0:	cmp	r9, lr
   20ed4:	beq	20f78 <ReadUInt8Data+0x21f0>
   20ed8:	add	r0, sp, #32
   20edc:	ldr	r3, [sp, #20]
   20ee0:	add	r1, r4, lr
   20ee4:	add	r2, r0, lr, lsl #1
   20ee8:	ldr	r0, [sp, #12]
   20eec:	sub	r0, r0, r3
   20ef0:	sub	r0, r0, lr
   20ef4:	sub	r0, r0, #256	; 0x100
   20ef8:	ldrb	r3, [r2], #2
   20efc:	subs	r0, r0, #1
   20f00:	strb	r3, [r1], #1
   20f04:	bne	20ef8 <ReadUInt8Data+0x2170>
   20f08:	b	20f78 <ReadUInt8Data+0x21f0>
   20f0c:	ldr	sl, [sp, #8]
   20f10:	mov	r2, #0
   20f14:	cmp	ip, #0
   20f18:	beq	20f3c <ReadUInt8Data+0x21b4>
   20f1c:	add	r0, sp, #32
   20f20:	add	r0, r0, r2, lsl #2
   20f24:	vld1.32	{d16-d17}, [r0]
   20f28:	add	r0, r2, r6
   20f2c:	add	r0, sl, r0
   20f30:	vmovn.i32	d16, q8
   20f34:	vuzp.8	d16, d17
   20f38:	vst1.32	{d16[0]}, [r0]
   20f3c:	ldr	r4, [sp, #16]
   20f40:	cmp	r9, lr
   20f44:	beq	20f78 <ReadUInt8Data+0x21f0>
   20f48:	ldr	r2, [sp, #12]
   20f4c:	ldr	r0, [sp, #20]
   20f50:	add	r1, sp, #32
   20f54:	add	r1, r1, lr, lsl #2
   20f58:	sub	r2, r2, r4
   20f5c:	add	r0, r0, lr
   20f60:	sub	r2, r2, lr
   20f64:	sub	r2, r2, #256	; 0x100
   20f68:	ldr	r3, [r1], #4
   20f6c:	subs	r2, r2, #1
   20f70:	strb	r3, [r0], #1
   20f74:	bne	20f68 <ReadUInt8Data+0x21e0>
   20f78:	ldr	sl, [sp, #28]
   20f7c:	mul	r0, r8, sl
   20f80:	sub	sp, fp, #28
   20f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20f88:	ldr	sl, [sp, #8]
   20f8c:	mov	r2, #0
   20f90:	cmp	ip, #0
   20f94:	beq	20fb8 <ReadUInt8Data+0x2230>
   20f98:	add	r0, sp, #32
   20f9c:	add	r0, r0, r2, lsl #2
   20fa0:	vld1.32	{d16-d17}, [r0]
   20fa4:	add	r0, r2, r6
   20fa8:	add	r0, sl, r0
   20fac:	vmovn.i32	d16, q8
   20fb0:	vuzp.8	d16, d17
   20fb4:	vst1.32	{d16[0]}, [r0]
   20fb8:	ldr	r0, [sp, #24]
   20fbc:	ldr	sl, [sp, #28]
   20fc0:	ldr	r4, [sp, #16]
   20fc4:	cmp	r0, lr
   20fc8:	beq	20f7c <ReadUInt8Data+0x21f4>
   20fcc:	ldr	r0, [sp, #20]
   20fd0:	add	r1, r0, lr
   20fd4:	add	r0, sp, #32
   20fd8:	add	r2, r0, lr, lsl #2
   20fdc:	ldr	r0, [sp, #12]
   20fe0:	sub	r0, r0, r4
   20fe4:	sub	r0, r0, lr
   20fe8:	sub	r0, r0, #256	; 0x100
   20fec:	ldr	r3, [r2], #4
   20ff0:	subs	r0, r0, #1
   20ff4:	strb	r3, [r1], #1
   20ff8:	bne	20fec <ReadUInt8Data+0x2264>
   20ffc:	b	20f7c <ReadUInt8Data+0x21f4>
   21000:	ldr	sl, [sp, #8]
   21004:	mov	r2, #0
   21008:	cmp	ip, #0
   2100c:	beq	21034 <ReadUInt8Data+0x22ac>
   21010:	add	r0, sp, #32
   21014:	add	r0, r0, r2, lsl #2
   21018:	vld1.32	{d16-d17}, [r0]
   2101c:	add	r0, r2, r6
   21020:	add	r0, sl, r0
   21024:	vcvt.s32.f32	q8, q8
   21028:	vmovn.i32	d16, q8
   2102c:	vuzp.8	d16, d17
   21030:	vst1.32	{d16[0]}, [r0]
   21034:	ldr	sl, [sp, #28]
   21038:	cmp	r9, lr
   2103c:	beq	20f7c <ReadUInt8Data+0x21f4>
   21040:	ldr	r2, [sp, #12]
   21044:	ldr	r3, [sp, #20]
   21048:	ldr	r0, [sp, #16]
   2104c:	add	r1, sp, #32
   21050:	add	r1, r1, lr, lsl #2
   21054:	sub	r2, r2, r3
   21058:	add	r0, r0, lr
   2105c:	sub	r2, r2, lr
   21060:	sub	r2, r2, #256	; 0x100
   21064:	vldr	s0, [r1]
   21068:	add	r1, r1, #4
   2106c:	subs	r2, r2, #1
   21070:	vcvt.u32.f32	s0, s0
   21074:	vmov	r3, s0
   21078:	strb	r3, [r0], #1
   2107c:	bne	21064 <ReadUInt8Data+0x22dc>
   21080:	b	20f7c <ReadUInt8Data+0x21f4>
   21084:	mov	r2, #0
   21088:	cmp	ip, #0
   2108c:	beq	210b8 <ReadUInt8Data+0x2330>
   21090:	add	r0, sp, #32
   21094:	add	r0, r0, r2, lsl #3
   21098:	vld1.64	{d16-d17}, [r0]
   2109c:	add	r0, r2, r4
   210a0:	ldr	r2, [sp, #8]
   210a4:	vmovn.i64	d16, q8
   210a8:	vmov.32	r1, d16[0]
   210ac:	strb	r1, [r2, r0]!
   210b0:	vmov.32	r0, d16[1]
   210b4:	strb	r0, [r2, #1]
   210b8:	ldr	r0, [sp]
   210bc:	ldr	r7, [sp, #12]
   210c0:	ldr	r6, [sp, #16]
   210c4:	cmp	r0, lr
   210c8:	beq	210f8 <ReadUInt8Data+0x2370>
   210cc:	ldr	r0, [sp, #20]
   210d0:	add	r1, r0, lr
   210d4:	add	r0, sp, #32
   210d8:	add	r2, r0, lr, lsl #3
   210dc:	sub	r0, r7, r6
   210e0:	sub	r0, r0, lr
   210e4:	sub	r0, r0, #256	; 0x100
   210e8:	ldrb	r3, [r2], #8
   210ec:	subs	r0, r0, #1
   210f0:	strb	r3, [r1], #1
   210f4:	bne	210e8 <ReadUInt8Data+0x2360>
   210f8:	ldr	sl, [sp, #28]
   210fc:	ldr	r5, [sp, #8]
   21100:	b	207cc <ReadUInt8Data+0x1a44>
   21104:	mov	r2, #0
   21108:	ldr	sl, [sp, #28]
   2110c:	cmp	ip, #0
   21110:	beq	2113c <ReadUInt8Data+0x23b4>
   21114:	add	r0, sp, #32
   21118:	add	r0, r0, r2, lsl #3
   2111c:	vld1.64	{d16-d17}, [r0]
   21120:	add	r0, r2, r6
   21124:	ldr	r2, [sp, #8]
   21128:	vmovn.i64	d16, q8
   2112c:	vmov.32	r1, d16[0]
   21130:	strb	r1, [r2, r0]!
   21134:	vmov.32	r0, d16[1]
   21138:	strb	r0, [r2, #1]
   2113c:	ldr	r0, [sp, #24]
   21140:	mov	r4, r5
   21144:	cmp	r0, lr
   21148:	beq	20f7c <ReadUInt8Data+0x21f4>
   2114c:	ldr	r0, [sp, #20]
   21150:	add	r1, r0, lr
   21154:	add	r0, sp, #32
   21158:	add	r2, r0, lr, lsl #3
   2115c:	ldr	r0, [sp, #12]
   21160:	sub	r0, r0, r4
   21164:	sub	r0, r0, lr
   21168:	sub	r0, r0, #256	; 0x100
   2116c:	ldrb	r3, [r2], #8
   21170:	subs	r0, r0, #1
   21174:	strb	r3, [r1], #1
   21178:	bne	2116c <ReadUInt8Data+0x23e4>
   2117c:	b	20f7c <ReadUInt8Data+0x21f4>

00021180 <ReadCompressedUInt8Data>:
   21180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21184:	add	fp, sp, #28
   21188:	sub	sp, sp, #12
   2118c:	mov	r7, r0
   21190:	mov	r0, #0
   21194:	cmp	r1, #0
   21198:	beq	211ac <ReadCompressedUInt8Data+0x2c>
   2119c:	cmp	r7, #0
   211a0:	movne	r5, r2
   211a4:	cmpne	r2, #0
   211a8:	bne	211b4 <ReadCompressedUInt8Data+0x34>
   211ac:	sub	sp, fp, #28
   211b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   211b4:	ldr	sl, [fp, #8]
   211b8:	mov	r0, r3
   211bc:	mov	r4, r3
   211c0:	mov	r6, r1
   211c4:	bl	1924 <Mat_SizeOf@plt>
   211c8:	mov	r9, r0
   211cc:	sub	r0, r4, #1
   211d0:	cmp	r0, #12
   211d4:	bhi	216a4 <ReadCompressedUInt8Data+0x524>
   211d8:	add	r1, pc, #4
   211dc:	ldr	r0, [r1, r0, lsl #2]
   211e0:	add	pc, r1, r0
   211e4:	.word	0x00000034
   211e8:	.word	0x0000006c
   211ec:	.word	0x000000a4
   211f0:	.word	0x000000ec
   211f4:	.word	0x00000134
   211f8:	.word	0x0000017c
   211fc:	.word	0x000001c4
   21200:	.word	0x000004c0
   21204:	.word	0x00000214
   21208:	.word	0x000004c0
   2120c:	.word	0x000004c0
   21210:	.word	0x00000264
   21214:	.word	0x000002ac
   21218:	cmp	sl, #1
   2121c:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21220:	mov	r8, sp
   21224:	mov	r4, sl
   21228:	mov	r0, r7
   2122c:	mov	r1, r6
   21230:	mov	r2, r8
   21234:	mov	r3, r9
   21238:	bl	3238 <InflateData>
   2123c:	ldrb	r0, [sp]
   21240:	subs	r4, r4, #1
   21244:	strb	r0, [r5], #1
   21248:	bne	21228 <ReadCompressedUInt8Data+0xa8>
   2124c:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21250:	cmp	sl, #1
   21254:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21258:	mov	r8, sp
   2125c:	mov	r4, sl
   21260:	mov	r0, r7
   21264:	mov	r1, r6
   21268:	mov	r2, r8
   2126c:	mov	r3, r9
   21270:	bl	3238 <InflateData>
   21274:	ldrb	r0, [sp]
   21278:	subs	r4, r4, #1
   2127c:	strb	r0, [r5], #1
   21280:	bne	21260 <ReadCompressedUInt8Data+0xe0>
   21284:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21288:	ldr	r0, [r7, #20]
   2128c:	cmp	r0, #0
   21290:	beq	214d8 <ReadCompressedUInt8Data+0x358>
   21294:	cmp	sl, #1
   21298:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   2129c:	mov	r8, sp
   212a0:	mov	r4, sl
   212a4:	mov	r0, r7
   212a8:	mov	r1, r6
   212ac:	mov	r2, r8
   212b0:	mov	r3, r9
   212b4:	bl	3238 <InflateData>
   212b8:	mov	r0, r8
   212bc:	bl	1c20 <Mat_int16Swap>
   212c0:	strb	r0, [r5], #1
   212c4:	subs	r4, r4, #1
   212c8:	bne	212a4 <ReadCompressedUInt8Data+0x124>
   212cc:	b	216a4 <ReadCompressedUInt8Data+0x524>
   212d0:	ldr	r0, [r7, #20]
   212d4:	cmp	r0, #0
   212d8:	beq	21510 <ReadCompressedUInt8Data+0x390>
   212dc:	cmp	sl, #1
   212e0:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   212e4:	mov	r8, sp
   212e8:	mov	r4, sl
   212ec:	mov	r0, r7
   212f0:	mov	r1, r6
   212f4:	mov	r2, r8
   212f8:	mov	r3, r9
   212fc:	bl	3238 <InflateData>
   21300:	mov	r0, r8
   21304:	bl	1c34 <Mat_uint16Swap>
   21308:	strb	r0, [r5], #1
   2130c:	subs	r4, r4, #1
   21310:	bne	212ec <ReadCompressedUInt8Data+0x16c>
   21314:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21318:	ldr	r0, [r7, #20]
   2131c:	cmp	r0, #0
   21320:	beq	21548 <ReadCompressedUInt8Data+0x3c8>
   21324:	cmp	sl, #1
   21328:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   2132c:	mov	r8, sp
   21330:	mov	r4, sl
   21334:	mov	r0, r7
   21338:	mov	r1, r6
   2133c:	mov	r2, r8
   21340:	mov	r3, r9
   21344:	bl	3238 <InflateData>
   21348:	mov	r0, r8
   2134c:	bl	1bf8 <Mat_int32Swap>
   21350:	strb	r0, [r5], #1
   21354:	subs	r4, r4, #1
   21358:	bne	21334 <ReadCompressedUInt8Data+0x1b4>
   2135c:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21360:	ldr	r0, [r7, #20]
   21364:	cmp	r0, #0
   21368:	beq	21580 <ReadCompressedUInt8Data+0x400>
   2136c:	cmp	sl, #1
   21370:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21374:	mov	r8, sp
   21378:	mov	r4, sl
   2137c:	mov	r0, r7
   21380:	mov	r1, r6
   21384:	mov	r2, r8
   21388:	mov	r3, r9
   2138c:	bl	3238 <InflateData>
   21390:	mov	r0, r8
   21394:	bl	1c0c <Mat_uint32Swap>
   21398:	strb	r0, [r5], #1
   2139c:	subs	r4, r4, #1
   213a0:	bne	2137c <ReadCompressedUInt8Data+0x1fc>
   213a4:	b	216a4 <ReadCompressedUInt8Data+0x524>
   213a8:	ldr	r0, [r7, #20]
   213ac:	cmp	r0, #0
   213b0:	beq	215b8 <ReadCompressedUInt8Data+0x438>
   213b4:	cmp	sl, #1
   213b8:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   213bc:	mov	r8, sp
   213c0:	mov	r4, sl
   213c4:	mov	r0, r7
   213c8:	mov	r1, r6
   213cc:	mov	r2, r8
   213d0:	mov	r3, r9
   213d4:	bl	3238 <InflateData>
   213d8:	mov	r0, r8
   213dc:	bl	1c4c <Mat_floatSwap>
   213e0:	vcvt.u32.f32	s0, s0
   213e4:	subs	r4, r4, #1
   213e8:	vmov	r0, s0
   213ec:	strb	r0, [r5], #1
   213f0:	bne	213c4 <ReadCompressedUInt8Data+0x244>
   213f4:	b	216a4 <ReadCompressedUInt8Data+0x524>
   213f8:	ldr	r0, [r7, #20]
   213fc:	cmp	r0, #0
   21400:	beq	215f8 <ReadCompressedUInt8Data+0x478>
   21404:	cmp	sl, #1
   21408:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   2140c:	mov	r8, sp
   21410:	mov	r4, sl
   21414:	mov	r0, r7
   21418:	mov	r1, r6
   2141c:	mov	r2, r8
   21420:	mov	r3, r9
   21424:	bl	3238 <InflateData>
   21428:	mov	r0, r8
   2142c:	bl	1c90 <Mat_doubleSwap>
   21430:	vcvt.u32.f64	s0, d0
   21434:	subs	r4, r4, #1
   21438:	vmov	r0, s0
   2143c:	strb	r0, [r5], #1
   21440:	bne	21414 <ReadCompressedUInt8Data+0x294>
   21444:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21448:	ldr	r0, [r7, #20]
   2144c:	cmp	r0, #0
   21450:	beq	21638 <ReadCompressedUInt8Data+0x4b8>
   21454:	cmp	sl, #1
   21458:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   2145c:	mov	r8, sp
   21460:	mov	r4, sl
   21464:	mov	r0, r7
   21468:	mov	r1, r6
   2146c:	mov	r2, r8
   21470:	mov	r3, r9
   21474:	bl	3238 <InflateData>
   21478:	mov	r0, r8
   2147c:	bl	1b84 <Mat_int64Swap>
   21480:	strb	r0, [r5], #1
   21484:	subs	r4, r4, #1
   21488:	bne	21464 <ReadCompressedUInt8Data+0x2e4>
   2148c:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21490:	ldr	r0, [r7, #20]
   21494:	cmp	r0, #0
   21498:	beq	21670 <ReadCompressedUInt8Data+0x4f0>
   2149c:	cmp	sl, #1
   214a0:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   214a4:	mov	r8, sp
   214a8:	mov	r4, sl
   214ac:	mov	r0, r7
   214b0:	mov	r1, r6
   214b4:	mov	r2, r8
   214b8:	mov	r3, r9
   214bc:	bl	3238 <InflateData>
   214c0:	mov	r0, r8
   214c4:	bl	1bd4 <Mat_uint64Swap>
   214c8:	strb	r0, [r5], #1
   214cc:	subs	r4, r4, #1
   214d0:	bne	214ac <ReadCompressedUInt8Data+0x32c>
   214d4:	b	216a4 <ReadCompressedUInt8Data+0x524>
   214d8:	cmp	sl, #1
   214dc:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   214e0:	mov	r8, sp
   214e4:	mov	r4, sl
   214e8:	mov	r0, r7
   214ec:	mov	r1, r6
   214f0:	mov	r2, r8
   214f4:	mov	r3, r9
   214f8:	bl	3238 <InflateData>
   214fc:	ldrb	r0, [sp]
   21500:	subs	r4, r4, #1
   21504:	strb	r0, [r5], #1
   21508:	bne	214e8 <ReadCompressedUInt8Data+0x368>
   2150c:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21510:	cmp	sl, #1
   21514:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21518:	mov	r8, sp
   2151c:	mov	r4, sl
   21520:	mov	r0, r7
   21524:	mov	r1, r6
   21528:	mov	r2, r8
   2152c:	mov	r3, r9
   21530:	bl	3238 <InflateData>
   21534:	ldrb	r0, [sp]
   21538:	subs	r4, r4, #1
   2153c:	strb	r0, [r5], #1
   21540:	bne	21520 <ReadCompressedUInt8Data+0x3a0>
   21544:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21548:	cmp	sl, #1
   2154c:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21550:	mov	r8, sp
   21554:	mov	r4, sl
   21558:	mov	r0, r7
   2155c:	mov	r1, r6
   21560:	mov	r2, r8
   21564:	mov	r3, r9
   21568:	bl	3238 <InflateData>
   2156c:	ldr	r0, [sp]
   21570:	subs	r4, r4, #1
   21574:	strb	r0, [r5], #1
   21578:	bne	21558 <ReadCompressedUInt8Data+0x3d8>
   2157c:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21580:	cmp	sl, #1
   21584:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21588:	mov	r8, sp
   2158c:	mov	r4, sl
   21590:	mov	r0, r7
   21594:	mov	r1, r6
   21598:	mov	r2, r8
   2159c:	mov	r3, r9
   215a0:	bl	3238 <InflateData>
   215a4:	ldr	r0, [sp]
   215a8:	subs	r4, r4, #1
   215ac:	strb	r0, [r5], #1
   215b0:	bne	21590 <ReadCompressedUInt8Data+0x410>
   215b4:	b	216a4 <ReadCompressedUInt8Data+0x524>
   215b8:	cmp	sl, #1
   215bc:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   215c0:	mov	r8, sp
   215c4:	mov	r4, sl
   215c8:	mov	r0, r7
   215cc:	mov	r1, r6
   215d0:	mov	r2, r8
   215d4:	mov	r3, r9
   215d8:	bl	3238 <InflateData>
   215dc:	vldr	s0, [sp]
   215e0:	subs	r4, r4, #1
   215e4:	vcvt.u32.f32	s0, s0
   215e8:	vmov	r0, s0
   215ec:	strb	r0, [r5], #1
   215f0:	bne	215c8 <ReadCompressedUInt8Data+0x448>
   215f4:	b	216a4 <ReadCompressedUInt8Data+0x524>
   215f8:	cmp	sl, #1
   215fc:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21600:	mov	r8, sp
   21604:	mov	r4, sl
   21608:	mov	r0, r7
   2160c:	mov	r1, r6
   21610:	mov	r2, r8
   21614:	mov	r3, r9
   21618:	bl	3238 <InflateData>
   2161c:	vldr	d16, [sp]
   21620:	subs	r4, r4, #1
   21624:	vcvt.u32.f64	s0, d16
   21628:	vmov	r0, s0
   2162c:	strb	r0, [r5], #1
   21630:	bne	21608 <ReadCompressedUInt8Data+0x488>
   21634:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21638:	cmp	sl, #1
   2163c:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21640:	mov	r8, sp
   21644:	mov	r4, sl
   21648:	mov	r0, r7
   2164c:	mov	r1, r6
   21650:	mov	r2, r8
   21654:	mov	r3, r9
   21658:	bl	3238 <InflateData>
   2165c:	ldrb	r0, [sp]
   21660:	subs	r4, r4, #1
   21664:	strb	r0, [r5], #1
   21668:	bne	21648 <ReadCompressedUInt8Data+0x4c8>
   2166c:	b	216a4 <ReadCompressedUInt8Data+0x524>
   21670:	cmp	sl, #1
   21674:	blt	216a4 <ReadCompressedUInt8Data+0x524>
   21678:	mov	r8, sp
   2167c:	mov	r4, sl
   21680:	mov	r0, r7
   21684:	mov	r1, r6
   21688:	mov	r2, r8
   2168c:	mov	r3, r9
   21690:	bl	3238 <InflateData>
   21694:	ldrb	r0, [sp]
   21698:	subs	r4, r4, #1
   2169c:	strb	r0, [r5], #1
   216a0:	bne	21680 <ReadCompressedUInt8Data+0x500>
   216a4:	mul	r0, r9, sl
   216a8:	sub	sp, fp, #28
   216ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000216b0 <ReadCompressedCharData>:
   216b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   216b4:	add	fp, sp, #24
   216b8:	cmp	r0, #0
   216bc:	mov	r9, #0
   216c0:	movne	r5, r2
   216c4:	cmpne	r2, #0
   216c8:	bne	216d4 <ReadCompressedCharData+0x24>
   216cc:	mov	r0, r9
   216d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   216d4:	mov	r6, r0
   216d8:	ldr	r0, [r0]
   216dc:	cmp	r0, #0
   216e0:	beq	216cc <ReadCompressedCharData+0x1c>
   216e4:	ldr	r4, [fp, #8]
   216e8:	mov	r0, r3
   216ec:	mov	r7, r3
   216f0:	mov	r8, r1
   216f4:	bl	1924 <Mat_SizeOf@plt>
   216f8:	mov	r9, r0
   216fc:	sub	r0, r7, #2
   21700:	cmp	r0, #15
   21704:	bhi	217b8 <ReadCompressedCharData+0x108>
   21708:	add	r1, pc, #4
   2170c:	ldr	r0, [r1, r0, lsl #2]
   21710:	add	pc, r1, r0
   21714:	.word	0x00000040
   21718:	.word	0x000000a4
   2171c:	.word	0x00000060
   21720:	.word	0x000000a4
   21724:	.word	0x000000a4
   21728:	.word	0x000000a4
   2172c:	.word	0x000000a4
   21730:	.word	0x000000a4
   21734:	.word	0x000000a4
   21738:	.word	0x000000a4
   2173c:	.word	0x000000a4
   21740:	.word	0x000000a4
   21744:	.word	0x000000a4
   21748:	.word	0x000000a4
   2174c:	.word	0x00000040
   21750:	.word	0x00000060
   21754:	mul	r9, r9, r4
   21758:	mov	r0, r6
   2175c:	mov	r1, r8
   21760:	mov	r2, r5
   21764:	mov	r3, r9
   21768:	bl	3238 <InflateData>
   2176c:	mov	r0, r9
   21770:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21774:	mul	r9, r9, r4
   21778:	mov	r0, r6
   2177c:	mov	r1, r8
   21780:	mov	r2, r5
   21784:	mov	r3, r9
   21788:	bl	3238 <InflateData>
   2178c:	ldr	r0, [r6, #20]
   21790:	cmp	r0, #0
   21794:	beq	216cc <ReadCompressedCharData+0x1c>
   21798:	cmp	r4, #1
   2179c:	blt	216cc <ReadCompressedCharData+0x1c>
   217a0:	mov	r0, r5
   217a4:	bl	1c34 <Mat_uint16Swap>
   217a8:	add	r5, r5, #2
   217ac:	subs	r4, r4, #1
   217b0:	bne	217a0 <ReadCompressedCharData+0xf0>
   217b4:	b	216cc <ReadCompressedCharData+0x1c>
   217b8:	ldr	r0, [pc, #20]	; 217d4 <ReadCompressedCharData+0x124>
   217bc:	mov	r1, r7
   217c0:	add	r0, pc, r0
   217c4:	bl	1810 <Mat_Warning@plt>
   217c8:	mul	r9, r9, r4
   217cc:	mov	r0, r9
   217d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   217d4:	.word	0x0004a540

000217d8 <ReadCharData>:
   217d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   217dc:	add	fp, sp, #24
   217e0:	sub	sp, sp, #8
   217e4:	cmp	r0, #0
   217e8:	mov	r4, #0
   217ec:	movne	r6, r1
   217f0:	cmpne	r1, #0
   217f4:	bne	21804 <ReadCharData+0x2c>
   217f8:	mov	r0, r4
   217fc:	sub	sp, fp, #24
   21800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21804:	mov	r7, r0
   21808:	ldr	r0, [r0]
   2180c:	cmp	r0, #0
   21810:	beq	217f8 <ReadCharData+0x20>
   21814:	mov	r0, r2
   21818:	mov	r5, r3
   2181c:	mov	r9, r2
   21820:	bl	1924 <Mat_SizeOf@plt>
   21824:	mov	r8, r0
   21828:	sub	r0, r9, #2
   2182c:	cmp	r0, #15
   21830:	bhi	218e8 <ReadCharData+0x110>
   21834:	add	r1, pc, #4
   21838:	ldr	r0, [r1, r0, lsl #2]
   2183c:	add	pc, r1, r0
   21840:	.word	0x00000040
   21844:	.word	0x000000a8
   21848:	.word	0x0000005c
   2184c:	.word	0x000000a8
   21850:	.word	0x000000a8
   21854:	.word	0x000000a8
   21858:	.word	0x000000a8
   2185c:	.word	0x000000a8
   21860:	.word	0x000000a8
   21864:	.word	0x000000a8
   21868:	.word	0x000000a8
   2186c:	.word	0x000000a8
   21870:	.word	0x000000a8
   21874:	.word	0x000000a8
   21878:	.word	0x00000040
   2187c:	.word	0x0000005c
   21880:	ldr	r3, [r7]
   21884:	mov	r0, r6
   21888:	mov	r1, r8
   2188c:	mov	r2, r5
   21890:	sub	sp, fp, #24
   21894:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   21898:	b	18b8 <fread@plt>
   2189c:	ldr	r0, [r7, #20]
   218a0:	mov	r4, #0
   218a4:	cmp	r0, #0
   218a8:	beq	218fc <ReadCharData+0x124>
   218ac:	cmp	r5, #1
   218b0:	blt	217f8 <ReadCharData+0x20>
   218b4:	add	r9, sp, #6
   218b8:	ldr	r3, [r7]
   218bc:	mov	r0, r9
   218c0:	mov	r1, r8
   218c4:	mov	r2, #1
   218c8:	bl	18b8 <fread@plt>
   218cc:	add	r4, r0, r4
   218d0:	mov	r0, r9
   218d4:	bl	1c34 <Mat_uint16Swap>
   218d8:	strb	r0, [r6], #1
   218dc:	subs	r5, r5, #1
   218e0:	bne	218b8 <ReadCharData+0xe0>
   218e4:	b	217f8 <ReadCharData+0x20>
   218e8:	ldr	r0, [pc, #68]	; 21934 <ReadCharData+0x15c>
   218ec:	mov	r1, r9
   218f0:	add	r0, pc, r0
   218f4:	bl	1810 <Mat_Warning@plt>
   218f8:	b	217f8 <ReadCharData+0x20>
   218fc:	cmp	r5, #1
   21900:	blt	217f8 <ReadCharData+0x20>
   21904:	add	r9, sp, #6
   21908:	ldr	r3, [r7]
   2190c:	mov	r0, r9
   21910:	mov	r1, r8
   21914:	mov	r2, #1
   21918:	bl	18b8 <fread@plt>
   2191c:	add	r4, r0, r4
   21920:	ldrb	r0, [sp, #6]
   21924:	subs	r5, r5, #1
   21928:	strb	r0, [r6], #1
   2192c:	bne	21908 <ReadCharData+0x130>
   21930:	b	217f8 <ReadCharData+0x20>
   21934:	.word	0x0004a45b

00021938 <ReadDataSlabN>:
   21938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2193c:	add	fp, sp, #28
   21940:	sub	sp, sp, #180	; 0xb4
   21944:	vmov.i32	q8, #0	; 0x00000000
   21948:	sub	r5, fp, #72	; 0x48
   2194c:	mov	r6, r0
   21950:	mov	r0, #36	; 0x24
   21954:	mov	r8, r2
   21958:	mov	r2, #0
   2195c:	add	r4, sp, #56	; 0x38
   21960:	mov	r7, r5
   21964:	cmp	r6, #0
   21968:	str	r2, [fp, #-40]	; 0xffffffd8
   2196c:	str	r2, [sp, #128]	; 0x80
   21970:	str	r2, [sp, #88]	; 0x58
   21974:	cmpne	r1, #0
   21978:	vst1.64	{d16-d17}, [r7], r0
   2197c:	str	r2, [r7]
   21980:	add	r7, r5, #16
   21984:	add	r5, sp, #96	; 0x60
   21988:	vst1.64	{d16-d17}, [r7]
   2198c:	add	r7, r5, #16
   21990:	vst1.64	{d16-d17}, [r7]
   21994:	mov	r7, r5
   21998:	vst1.64	{d16-d17}, [r7], r0
   2199c:	str	r2, [r7]
   219a0:	add	r7, r4, #16
   219a4:	vst1.64	{d16-d17}, [r7]
   219a8:	mov	r7, r4
   219ac:	vst1.64	{d16-d17}, [r7], r0
   219b0:	mvn	r0, #0
   219b4:	str	r2, [r7]
   219b8:	bne	219c4 <ReadDataSlabN+0x8c>
   219bc:	sub	sp, fp, #28
   219c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219c4:	ldr	r2, [fp, #8]
   219c8:	cmp	r2, #10
   219cc:	bgt	219bc <ReadDataSlabN+0x84>
   219d0:	ldr	r2, [fp, #24]
   219d4:	cmp	r2, #0
   219d8:	ldrne	r2, [fp, #20]
   219dc:	cmpne	r2, #0
   219e0:	beq	219bc <ReadDataSlabN+0x84>
   219e4:	ldr	r2, [fp, #16]
   219e8:	cmp	r2, #0
   219ec:	addne	r2, sp, #40	; 0x28
   219f0:	stmne	r2, {r1, r3, r6}
   219f4:	ldrne	r1, [r6]
   219f8:	cmpne	r1, #0
   219fc:	beq	219bc <ReadDataSlabN+0x84>
   21a00:	ldr	r0, [sp, #44]	; 0x2c
   21a04:	bl	1924 <Mat_SizeOf@plt>
   21a08:	ldr	ip, [fp, #20]
   21a0c:	sub	r2, r8, #6
   21a10:	cmp	r2, #9
   21a14:	bhi	25bc4 <ReadDataSlabN+0x428c>
   21a18:	add	r1, pc, #12
   21a1c:	ldr	r8, [fp, #12]
   21a20:	str	r0, [sp, #52]	; 0x34
   21a24:	ldr	r2, [r1, r2, lsl #2]
   21a28:	add	pc, r1, r2
   21a2c:	.word	0x00000028
   21a30:	.word	0x000001b4
   21a34:	.word	0x00000340
   21a38:	.word	0x000004d0
   21a3c:	.word	0x00000660
   21a40:	.word	0x000007ec
   21a44:	.word	0x00000978
   21a48:	.word	0x00000b04
   21a4c:	.word	0x00000c90
   21a50:	.word	0x00000e18
   21a54:	ldr	r0, [ip]
   21a58:	mov	r6, r8
   21a5c:	mov	r9, #0
   21a60:	sub	r0, r0, #1
   21a64:	str	r0, [fp, #-72]	; 0xffffffb8
   21a68:	ldr	sl, [r8]
   21a6c:	ldr	r8, [fp, #24]
   21a70:	str	sl, [sp, #56]	; 0x38
   21a74:	ldr	r0, [r8]
   21a78:	str	r0, [sp, #24]
   21a7c:	ldr	r0, [fp, #8]
   21a80:	cmp	r0, #2
   21a84:	blt	22ed0 <ReadDataSlabN+0x1598>
   21a88:	sub	r0, r6, #4
   21a8c:	sub	lr, r6, #12
   21a90:	mov	r3, #1
   21a94:	mov	r2, #0
   21a98:	mvn	r5, #15
   21a9c:	mov	r4, sl
   21aa0:	mov	r9, #0
   21aa4:	add	r6, sp, #56	; 0x38
   21aa8:	sub	ip, fp, #72	; 0x48
   21aac:	b	21afc <ReadDataSlabN+0x1c4>
   21ab0:	sub	ip, fp, #72	; 0x48
   21ab4:	ldr	r1, [fp, #16]
   21ab8:	str	r4, [r6, r3, lsl #2]
   21abc:	str	r7, [ip, r3, lsl #2]
   21ac0:	ldr	r2, [sp, #24]
   21ac4:	add	lr, lr, #4
   21ac8:	ldr	r1, [r1, r3, lsl #2]
   21acc:	mla	r9, r1, sl, r9
   21ad0:	ldr	r1, [fp, #24]
   21ad4:	mov	sl, r4
   21ad8:	ldr	r4, [sp, #36]	; 0x24
   21adc:	ldr	r1, [r1, r3, lsl #2]
   21ae0:	add	r3, r3, #1
   21ae4:	mul	r2, r1, r2
   21ae8:	ldr	r1, [fp, #8]
   21aec:	str	r2, [sp, #24]
   21af0:	mov	r2, r8
   21af4:	cmp	r3, r1
   21af8:	beq	22ed4 <ReadDataSlabN+0x159c>
   21afc:	ldr	r1, [fp, #20]
   21b00:	add	r2, r2, #1
   21b04:	cmp	r2, #4
   21b08:	ldr	r1, [r1, r3, lsl #2]
   21b0c:	str	r4, [r6, r3, lsl #2]
   21b10:	sub	r7, r1, #1
   21b14:	ldr	r1, [fp, #12]
   21b18:	str	r7, [ip, r3, lsl #2]
   21b1c:	ldr	r1, [r1, r3, lsl #2]
   21b20:	str	r1, [sp, #36]	; 0x24
   21b24:	bcs	21b34 <ReadDataSlabN+0x1fc>
   21b28:	mov	r8, r2
   21b2c:	mov	r2, r3
   21b30:	b	21bc8 <ReadDataSlabN+0x290>
   21b34:	vmov.i32	q9, #1	; 0x00000001
   21b38:	vmov.i32	q10, #1	; 0x00000001
   21b3c:	vmov.32	d23[1], r1
   21b40:	vmov.i32	q8, #1	; 0x00000001
   21b44:	bic	r1, r2, #3
   21b48:	mov	r8, r2
   21b4c:	bic	ip, r3, #3
   21b50:	str	r1, [sp, #32]
   21b54:	sub	r2, r3, r1
   21b58:	mov	r1, lr
   21b5c:	vmov.32	d18[0], r4
   21b60:	vmov.32	d20[0], r7
   21b64:	vorr	d16, d18, d18
   21b68:	vmov.i32	q9, #1	; 0x00000001
   21b6c:	vorr	d18, d20, d20
   21b70:	vld1.32	{d20-d21}, [r1], r5
   21b74:	subs	ip, ip, #4
   21b78:	vrev64.32	q12, q10
   21b7c:	vext.8	q12, q12, q12, #8
   21b80:	vext.8	q11, q11, q12, #12
   21b84:	vmul.i32	q9, q9, q12
   21b88:	vmul.i32	q8, q11, q8
   21b8c:	vorr	q11, q12, q12
   21b90:	bne	21b70 <ReadDataSlabN+0x238>
   21b94:	vext.8	q11, q9, q8, #8
   21b98:	vext.8	q12, q8, q8, #8
   21b9c:	ldr	r1, [sp, #32]
   21ba0:	vmul.i32	q0, q9, q11
   21ba4:	vmul.i32	q1, q8, q12
   21ba8:	cmp	r8, r1
   21bac:	vmul.i32	q8, q0, d0[1]
   21bb0:	vmul.i32	q9, q1, d2[1]
   21bb4:	vmov.32	r7, d16[0]
   21bb8:	vmov.32	r4, d18[0]
   21bbc:	beq	21ab0 <ReadDataSlabN+0x178>
   21bc0:	vmov.32	r1, d20[0]
   21bc4:	sub	ip, fp, #72	; 0x48
   21bc8:	mul	r4, r1, r4
   21bcc:	ldr	r1, [r0, r2, lsl #2]
   21bd0:	subs	r2, r2, #1
   21bd4:	mul	r7, r7, r1
   21bd8:	bne	21bc8 <ReadDataSlabN+0x290>
   21bdc:	b	21ab4 <ReadDataSlabN+0x17c>
   21be0:	ldr	r0, [ip]
   21be4:	mov	r6, r8
   21be8:	mov	r9, #0
   21bec:	sub	r0, r0, #1
   21bf0:	str	r0, [fp, #-72]	; 0xffffffb8
   21bf4:	ldr	sl, [r8]
   21bf8:	ldr	r8, [fp, #24]
   21bfc:	str	sl, [sp, #56]	; 0x38
   21c00:	ldr	r0, [r8]
   21c04:	str	r0, [sp, #20]
   21c08:	ldr	r0, [fp, #8]
   21c0c:	cmp	r0, #2
   21c10:	blt	23120 <ReadDataSlabN+0x17e8>
   21c14:	sub	r0, r6, #4
   21c18:	sub	lr, r6, #12
   21c1c:	mov	r3, #1
   21c20:	mov	r2, #0
   21c24:	mvn	r5, #15
   21c28:	mov	r4, sl
   21c2c:	mov	r9, #0
   21c30:	add	r6, sp, #56	; 0x38
   21c34:	sub	ip, fp, #72	; 0x48
   21c38:	b	21c88 <ReadDataSlabN+0x350>
   21c3c:	sub	ip, fp, #72	; 0x48
   21c40:	ldr	r1, [fp, #16]
   21c44:	str	r4, [r6, r3, lsl #2]
   21c48:	str	r7, [ip, r3, lsl #2]
   21c4c:	ldr	r2, [sp, #20]
   21c50:	add	lr, lr, #4
   21c54:	ldr	r1, [r1, r3, lsl #2]
   21c58:	mla	r9, r1, sl, r9
   21c5c:	ldr	r1, [fp, #24]
   21c60:	mov	sl, r4
   21c64:	ldr	r4, [sp, #36]	; 0x24
   21c68:	ldr	r1, [r1, r3, lsl #2]
   21c6c:	add	r3, r3, #1
   21c70:	mul	r2, r1, r2
   21c74:	ldr	r1, [fp, #8]
   21c78:	str	r2, [sp, #20]
   21c7c:	mov	r2, r8
   21c80:	cmp	r3, r1
   21c84:	beq	23124 <ReadDataSlabN+0x17ec>
   21c88:	ldr	r1, [fp, #20]
   21c8c:	add	r2, r2, #1
   21c90:	cmp	r2, #4
   21c94:	ldr	r1, [r1, r3, lsl #2]
   21c98:	str	r4, [r6, r3, lsl #2]
   21c9c:	sub	r7, r1, #1
   21ca0:	ldr	r1, [fp, #12]
   21ca4:	str	r7, [ip, r3, lsl #2]
   21ca8:	ldr	r1, [r1, r3, lsl #2]
   21cac:	str	r1, [sp, #36]	; 0x24
   21cb0:	bcs	21cc0 <ReadDataSlabN+0x388>
   21cb4:	mov	r8, r2
   21cb8:	mov	r2, r3
   21cbc:	b	21d54 <ReadDataSlabN+0x41c>
   21cc0:	vmov.i32	q9, #1	; 0x00000001
   21cc4:	vmov.i32	q10, #1	; 0x00000001
   21cc8:	vmov.32	d23[1], r1
   21ccc:	vmov.i32	q8, #1	; 0x00000001
   21cd0:	bic	r1, r2, #3
   21cd4:	mov	r8, r2
   21cd8:	bic	ip, r3, #3
   21cdc:	str	r1, [sp, #32]
   21ce0:	sub	r2, r3, r1
   21ce4:	mov	r1, lr
   21ce8:	vmov.32	d18[0], r4
   21cec:	vmov.32	d20[0], r7
   21cf0:	vorr	d16, d18, d18
   21cf4:	vmov.i32	q9, #1	; 0x00000001
   21cf8:	vorr	d18, d20, d20
   21cfc:	vld1.32	{d20-d21}, [r1], r5
   21d00:	subs	ip, ip, #4
   21d04:	vrev64.32	q12, q10
   21d08:	vext.8	q12, q12, q12, #8
   21d0c:	vext.8	q11, q11, q12, #12
   21d10:	vmul.i32	q9, q9, q12
   21d14:	vmul.i32	q8, q11, q8
   21d18:	vorr	q11, q12, q12
   21d1c:	bne	21cfc <ReadDataSlabN+0x3c4>
   21d20:	vext.8	q11, q9, q8, #8
   21d24:	vext.8	q12, q8, q8, #8
   21d28:	ldr	r1, [sp, #32]
   21d2c:	vmul.i32	q0, q9, q11
   21d30:	vmul.i32	q1, q8, q12
   21d34:	cmp	r8, r1
   21d38:	vmul.i32	q8, q0, d0[1]
   21d3c:	vmul.i32	q9, q1, d2[1]
   21d40:	vmov.32	r7, d16[0]
   21d44:	vmov.32	r4, d18[0]
   21d48:	beq	21c3c <ReadDataSlabN+0x304>
   21d4c:	vmov.32	r1, d20[0]
   21d50:	sub	ip, fp, #72	; 0x48
   21d54:	mul	r4, r1, r4
   21d58:	ldr	r1, [r0, r2, lsl #2]
   21d5c:	subs	r2, r2, #1
   21d60:	mul	r7, r7, r1
   21d64:	bne	21d54 <ReadDataSlabN+0x41c>
   21d68:	b	21c40 <ReadDataSlabN+0x308>
   21d6c:	ldr	r0, [ip]
   21d70:	ldr	r5, [fp, #24]
   21d74:	mov	r6, #0
   21d78:	sub	r0, r0, #1
   21d7c:	str	r0, [fp, #-72]	; 0xffffffb8
   21d80:	ldr	r9, [r8]
   21d84:	str	r9, [sp, #56]	; 0x38
   21d88:	ldr	r0, [r5]
   21d8c:	str	r0, [sp, #24]
   21d90:	ldr	r0, [fp, #8]
   21d94:	cmp	r0, #2
   21d98:	blt	229d0 <ReadDataSlabN+0x1098>
   21d9c:	sub	r0, r8, #4
   21da0:	sub	sl, r8, #12
   21da4:	mov	r3, #1
   21da8:	mov	r4, #0
   21dac:	mvn	lr, #15
   21db0:	mov	r7, r9
   21db4:	mov	r6, #0
   21db8:	add	r2, sp, #56	; 0x38
   21dbc:	sub	r5, fp, #72	; 0x48
   21dc0:	b	21e1c <ReadDataSlabN+0x4e4>
   21dc4:	mov	ip, r8
   21dc8:	ldr	r8, [fp, #12]
   21dcc:	sub	r5, fp, #72	; 0x48
   21dd0:	str	r1, [r5, r3, lsl #2]
   21dd4:	ldr	r1, [fp, #16]
   21dd8:	add	r2, sp, #56	; 0x38
   21ddc:	ldr	r4, [sp, #24]
   21de0:	add	sl, sl, #4
   21de4:	str	r7, [r2, r3, lsl #2]
   21de8:	ldr	r1, [r1, r3, lsl #2]
   21dec:	mla	r6, r1, r9, r6
   21df0:	ldr	r1, [fp, #24]
   21df4:	mov	r9, r7
   21df8:	ldr	r7, [sp, #32]
   21dfc:	ldr	r1, [r1, r3, lsl #2]
   21e00:	add	r3, r3, #1
   21e04:	mul	r4, r1, r4
   21e08:	ldr	r1, [fp, #8]
   21e0c:	str	r4, [sp, #24]
   21e10:	ldr	r4, [sp, #36]	; 0x24
   21e14:	cmp	r3, r1
   21e18:	beq	229d0 <ReadDataSlabN+0x1098>
   21e1c:	ldr	r1, [ip, r3, lsl #2]
   21e20:	str	r7, [r2, r3, lsl #2]
   21e24:	add	r4, r4, #1
   21e28:	cmp	r4, #4
   21e2c:	str	r4, [sp, #36]	; 0x24
   21e30:	sub	r1, r1, #1
   21e34:	str	r1, [r5, r3, lsl #2]
   21e38:	ldr	r2, [r8, r3, lsl #2]
   21e3c:	str	r2, [sp, #32]
   21e40:	bcs	21e50 <ReadDataSlabN+0x518>
   21e44:	mov	r4, r2
   21e48:	mov	r2, r3
   21e4c:	b	21ee4 <ReadDataSlabN+0x5ac>
   21e50:	vmov.i32	q9, #1	; 0x00000001
   21e54:	vmov.i32	q10, #1	; 0x00000001
   21e58:	vmov.32	d23[1], r2
   21e5c:	vmov.i32	q8, #1	; 0x00000001
   21e60:	bic	r5, r4, #3
   21e64:	mov	r8, ip
   21e68:	bic	ip, r3, #3
   21e6c:	sub	r2, r3, r5
   21e70:	vmov.32	d18[0], r7
   21e74:	vmov.32	d20[0], r1
   21e78:	mov	r1, sl
   21e7c:	vorr	d16, d18, d18
   21e80:	vmov.i32	q9, #1	; 0x00000001
   21e84:	vorr	d18, d20, d20
   21e88:	vld1.32	{d20-d21}, [r1], lr
   21e8c:	subs	ip, ip, #4
   21e90:	vrev64.32	q12, q10
   21e94:	vext.8	q12, q12, q12, #8
   21e98:	vext.8	q11, q11, q12, #12
   21e9c:	vmul.i32	q9, q9, q12
   21ea0:	vmul.i32	q8, q11, q8
   21ea4:	vorr	q11, q12, q12
   21ea8:	bne	21e88 <ReadDataSlabN+0x550>
   21eac:	vext.8	q11, q9, q8, #8
   21eb0:	vext.8	q12, q8, q8, #8
   21eb4:	cmp	r4, r5
   21eb8:	vmul.i32	q0, q9, q11
   21ebc:	vmul.i32	q1, q8, q12
   21ec0:	vmul.i32	q8, q0, d0[1]
   21ec4:	vmul.i32	q9, q1, d2[1]
   21ec8:	vmov.32	r1, d16[0]
   21ecc:	vmov.32	r7, d18[0]
   21ed0:	beq	21dc4 <ReadDataSlabN+0x48c>
   21ed4:	vmov.32	r4, d20[0]
   21ed8:	mov	ip, r8
   21edc:	ldr	r8, [fp, #12]
   21ee0:	sub	r5, fp, #72	; 0x48
   21ee4:	mul	r7, r4, r7
   21ee8:	ldr	r4, [r0, r2, lsl #2]
   21eec:	subs	r2, r2, #1
   21ef0:	mul	r1, r1, r4
   21ef4:	bne	21ee4 <ReadDataSlabN+0x5ac>
   21ef8:	b	21dd0 <ReadDataSlabN+0x498>
   21efc:	ldr	r0, [ip]
   21f00:	ldr	r5, [fp, #24]
   21f04:	mov	r6, #0
   21f08:	sub	r0, r0, #1
   21f0c:	str	r0, [fp, #-72]	; 0xffffffb8
   21f10:	ldr	r9, [r8]
   21f14:	str	r9, [sp, #56]	; 0x38
   21f18:	ldr	r0, [r5]
   21f1c:	str	r0, [sp, #24]
   21f20:	ldr	r0, [fp, #8]
   21f24:	cmp	r0, #2
   21f28:	blt	22c50 <ReadDataSlabN+0x1318>
   21f2c:	sub	r0, r8, #4
   21f30:	sub	sl, r8, #12
   21f34:	mov	r3, #1
   21f38:	mov	r4, #0
   21f3c:	mvn	lr, #15
   21f40:	mov	r7, r9
   21f44:	mov	r6, #0
   21f48:	add	r2, sp, #56	; 0x38
   21f4c:	sub	r5, fp, #72	; 0x48
   21f50:	b	21fac <ReadDataSlabN+0x674>
   21f54:	mov	ip, r8
   21f58:	ldr	r8, [fp, #12]
   21f5c:	sub	r5, fp, #72	; 0x48
   21f60:	str	r1, [r5, r3, lsl #2]
   21f64:	ldr	r1, [fp, #16]
   21f68:	add	r2, sp, #56	; 0x38
   21f6c:	ldr	r4, [sp, #24]
   21f70:	add	sl, sl, #4
   21f74:	str	r7, [r2, r3, lsl #2]
   21f78:	ldr	r1, [r1, r3, lsl #2]
   21f7c:	mla	r6, r1, r9, r6
   21f80:	ldr	r1, [fp, #24]
   21f84:	mov	r9, r7
   21f88:	ldr	r7, [sp, #32]
   21f8c:	ldr	r1, [r1, r3, lsl #2]
   21f90:	add	r3, r3, #1
   21f94:	mul	r4, r1, r4
   21f98:	ldr	r1, [fp, #8]
   21f9c:	str	r4, [sp, #24]
   21fa0:	ldr	r4, [sp, #36]	; 0x24
   21fa4:	cmp	r3, r1
   21fa8:	beq	22c50 <ReadDataSlabN+0x1318>
   21fac:	ldr	r1, [ip, r3, lsl #2]
   21fb0:	str	r7, [r2, r3, lsl #2]
   21fb4:	add	r4, r4, #1
   21fb8:	cmp	r4, #4
   21fbc:	str	r4, [sp, #36]	; 0x24
   21fc0:	sub	r1, r1, #1
   21fc4:	str	r1, [r5, r3, lsl #2]
   21fc8:	ldr	r2, [r8, r3, lsl #2]
   21fcc:	str	r2, [sp, #32]
   21fd0:	bcs	21fe0 <ReadDataSlabN+0x6a8>
   21fd4:	mov	r4, r2
   21fd8:	mov	r2, r3
   21fdc:	b	22074 <ReadDataSlabN+0x73c>
   21fe0:	vmov.i32	q9, #1	; 0x00000001
   21fe4:	vmov.i32	q10, #1	; 0x00000001
   21fe8:	vmov.32	d23[1], r2
   21fec:	vmov.i32	q8, #1	; 0x00000001
   21ff0:	bic	r5, r4, #3
   21ff4:	mov	r8, ip
   21ff8:	bic	ip, r3, #3
   21ffc:	sub	r2, r3, r5
   22000:	vmov.32	d18[0], r7
   22004:	vmov.32	d20[0], r1
   22008:	mov	r1, sl
   2200c:	vorr	d16, d18, d18
   22010:	vmov.i32	q9, #1	; 0x00000001
   22014:	vorr	d18, d20, d20
   22018:	vld1.32	{d20-d21}, [r1], lr
   2201c:	subs	ip, ip, #4
   22020:	vrev64.32	q12, q10
   22024:	vext.8	q12, q12, q12, #8
   22028:	vext.8	q11, q11, q12, #12
   2202c:	vmul.i32	q9, q9, q12
   22030:	vmul.i32	q8, q11, q8
   22034:	vorr	q11, q12, q12
   22038:	bne	22018 <ReadDataSlabN+0x6e0>
   2203c:	vext.8	q11, q9, q8, #8
   22040:	vext.8	q12, q8, q8, #8
   22044:	cmp	r4, r5
   22048:	vmul.i32	q0, q9, q11
   2204c:	vmul.i32	q1, q8, q12
   22050:	vmul.i32	q8, q0, d0[1]
   22054:	vmul.i32	q9, q1, d2[1]
   22058:	vmov.32	r1, d16[0]
   2205c:	vmov.32	r7, d18[0]
   22060:	beq	21f54 <ReadDataSlabN+0x61c>
   22064:	vmov.32	r4, d20[0]
   22068:	mov	ip, r8
   2206c:	ldr	r8, [fp, #12]
   22070:	sub	r5, fp, #72	; 0x48
   22074:	mul	r7, r4, r7
   22078:	ldr	r4, [r0, r2, lsl #2]
   2207c:	subs	r2, r2, #1
   22080:	mul	r1, r1, r4
   22084:	bne	22074 <ReadDataSlabN+0x73c>
   22088:	b	21f60 <ReadDataSlabN+0x628>
   2208c:	ldr	r0, [ip]
   22090:	mov	r6, r8
   22094:	mov	r9, #0
   22098:	sub	r0, r0, #1
   2209c:	str	r0, [fp, #-72]	; 0xffffffb8
   220a0:	ldr	sl, [r8]
   220a4:	ldr	r8, [fp, #24]
   220a8:	str	sl, [sp, #56]	; 0x38
   220ac:	ldr	r0, [r8]
   220b0:	str	r0, [sp, #20]
   220b4:	ldr	r0, [fp, #8]
   220b8:	cmp	r0, #2
   220bc:	blt	23368 <ReadDataSlabN+0x1a30>
   220c0:	sub	r0, r6, #4
   220c4:	sub	lr, r6, #12
   220c8:	mov	r3, #1
   220cc:	mov	r2, #0
   220d0:	mvn	r5, #15
   220d4:	mov	r4, sl
   220d8:	mov	r9, #0
   220dc:	add	r6, sp, #56	; 0x38
   220e0:	sub	ip, fp, #72	; 0x48
   220e4:	b	22134 <ReadDataSlabN+0x7fc>
   220e8:	sub	ip, fp, #72	; 0x48
   220ec:	ldr	r1, [fp, #16]
   220f0:	str	r4, [r6, r3, lsl #2]
   220f4:	str	r7, [ip, r3, lsl #2]
   220f8:	ldr	r2, [sp, #20]
   220fc:	add	lr, lr, #4
   22100:	ldr	r1, [r1, r3, lsl #2]
   22104:	mla	r9, r1, sl, r9
   22108:	ldr	r1, [fp, #24]
   2210c:	mov	sl, r4
   22110:	ldr	r4, [sp, #36]	; 0x24
   22114:	ldr	r1, [r1, r3, lsl #2]
   22118:	add	r3, r3, #1
   2211c:	mul	r2, r1, r2
   22120:	ldr	r1, [fp, #8]
   22124:	str	r2, [sp, #20]
   22128:	mov	r2, r8
   2212c:	cmp	r3, r1
   22130:	beq	2336c <ReadDataSlabN+0x1a34>
   22134:	ldr	r1, [fp, #20]
   22138:	add	r2, r2, #1
   2213c:	cmp	r2, #4
   22140:	ldr	r1, [r1, r3, lsl #2]
   22144:	str	r4, [r6, r3, lsl #2]
   22148:	sub	r7, r1, #1
   2214c:	ldr	r1, [fp, #12]
   22150:	str	r7, [ip, r3, lsl #2]
   22154:	ldr	r1, [r1, r3, lsl #2]
   22158:	str	r1, [sp, #36]	; 0x24
   2215c:	bcs	2216c <ReadDataSlabN+0x834>
   22160:	mov	r8, r2
   22164:	mov	r2, r3
   22168:	b	22200 <ReadDataSlabN+0x8c8>
   2216c:	vmov.i32	q9, #1	; 0x00000001
   22170:	vmov.i32	q10, #1	; 0x00000001
   22174:	vmov.32	d23[1], r1
   22178:	vmov.i32	q8, #1	; 0x00000001
   2217c:	bic	r1, r2, #3
   22180:	mov	r8, r2
   22184:	bic	ip, r3, #3
   22188:	str	r1, [sp, #32]
   2218c:	sub	r2, r3, r1
   22190:	mov	r1, lr
   22194:	vmov.32	d18[0], r4
   22198:	vmov.32	d20[0], r7
   2219c:	vorr	d16, d18, d18
   221a0:	vmov.i32	q9, #1	; 0x00000001
   221a4:	vorr	d18, d20, d20
   221a8:	vld1.32	{d20-d21}, [r1], r5
   221ac:	subs	ip, ip, #4
   221b0:	vrev64.32	q12, q10
   221b4:	vext.8	q12, q12, q12, #8
   221b8:	vext.8	q11, q11, q12, #12
   221bc:	vmul.i32	q9, q9, q12
   221c0:	vmul.i32	q8, q11, q8
   221c4:	vorr	q11, q12, q12
   221c8:	bne	221a8 <ReadDataSlabN+0x870>
   221cc:	vext.8	q11, q9, q8, #8
   221d0:	vext.8	q12, q8, q8, #8
   221d4:	ldr	r1, [sp, #32]
   221d8:	vmul.i32	q0, q9, q11
   221dc:	vmul.i32	q1, q8, q12
   221e0:	cmp	r8, r1
   221e4:	vmul.i32	q8, q0, d0[1]
   221e8:	vmul.i32	q9, q1, d2[1]
   221ec:	vmov.32	r7, d16[0]
   221f0:	vmov.32	r4, d18[0]
   221f4:	beq	220e8 <ReadDataSlabN+0x7b0>
   221f8:	vmov.32	r1, d20[0]
   221fc:	sub	ip, fp, #72	; 0x48
   22200:	mul	r4, r1, r4
   22204:	ldr	r1, [r0, r2, lsl #2]
   22208:	subs	r2, r2, #1
   2220c:	mul	r7, r7, r1
   22210:	bne	22200 <ReadDataSlabN+0x8c8>
   22214:	b	220ec <ReadDataSlabN+0x7b4>
   22218:	ldr	r0, [ip]
   2221c:	mov	r6, r8
   22220:	mov	r9, #0
   22224:	sub	r0, r0, #1
   22228:	str	r0, [fp, #-72]	; 0xffffffb8
   2222c:	ldr	sl, [r8]
   22230:	ldr	r8, [fp, #24]
   22234:	str	sl, [sp, #56]	; 0x38
   22238:	ldr	r0, [r8]
   2223c:	str	r0, [sp, #20]
   22240:	ldr	r0, [fp, #8]
   22244:	cmp	r0, #2
   22248:	blt	235b0 <ReadDataSlabN+0x1c78>
   2224c:	sub	r0, r6, #4
   22250:	sub	lr, r6, #12
   22254:	mov	r3, #1
   22258:	mov	r2, #0
   2225c:	mvn	r5, #15
   22260:	mov	r4, sl
   22264:	mov	r9, #0
   22268:	add	r6, sp, #56	; 0x38
   2226c:	sub	ip, fp, #72	; 0x48
   22270:	b	222c0 <ReadDataSlabN+0x988>
   22274:	sub	ip, fp, #72	; 0x48
   22278:	ldr	r1, [fp, #16]
   2227c:	str	r4, [r6, r3, lsl #2]
   22280:	str	r7, [ip, r3, lsl #2]
   22284:	ldr	r2, [sp, #20]
   22288:	add	lr, lr, #4
   2228c:	ldr	r1, [r1, r3, lsl #2]
   22290:	mla	r9, r1, sl, r9
   22294:	ldr	r1, [fp, #24]
   22298:	mov	sl, r4
   2229c:	ldr	r4, [sp, #36]	; 0x24
   222a0:	ldr	r1, [r1, r3, lsl #2]
   222a4:	add	r3, r3, #1
   222a8:	mul	r2, r1, r2
   222ac:	ldr	r1, [fp, #8]
   222b0:	str	r2, [sp, #20]
   222b4:	mov	r2, r8
   222b8:	cmp	r3, r1
   222bc:	beq	235b4 <ReadDataSlabN+0x1c7c>
   222c0:	ldr	r1, [fp, #20]
   222c4:	add	r2, r2, #1
   222c8:	cmp	r2, #4
   222cc:	ldr	r1, [r1, r3, lsl #2]
   222d0:	str	r4, [r6, r3, lsl #2]
   222d4:	sub	r7, r1, #1
   222d8:	ldr	r1, [fp, #12]
   222dc:	str	r7, [ip, r3, lsl #2]
   222e0:	ldr	r1, [r1, r3, lsl #2]
   222e4:	str	r1, [sp, #36]	; 0x24
   222e8:	bcs	222f8 <ReadDataSlabN+0x9c0>
   222ec:	mov	r8, r2
   222f0:	mov	r2, r3
   222f4:	b	2238c <ReadDataSlabN+0xa54>
   222f8:	vmov.i32	q9, #1	; 0x00000001
   222fc:	vmov.i32	q10, #1	; 0x00000001
   22300:	vmov.32	d23[1], r1
   22304:	vmov.i32	q8, #1	; 0x00000001
   22308:	bic	r1, r2, #3
   2230c:	mov	r8, r2
   22310:	bic	ip, r3, #3
   22314:	str	r1, [sp, #32]
   22318:	sub	r2, r3, r1
   2231c:	mov	r1, lr
   22320:	vmov.32	d18[0], r4
   22324:	vmov.32	d20[0], r7
   22328:	vorr	d16, d18, d18
   2232c:	vmov.i32	q9, #1	; 0x00000001
   22330:	vorr	d18, d20, d20
   22334:	vld1.32	{d20-d21}, [r1], r5
   22338:	subs	ip, ip, #4
   2233c:	vrev64.32	q12, q10
   22340:	vext.8	q12, q12, q12, #8
   22344:	vext.8	q11, q11, q12, #12
   22348:	vmul.i32	q9, q9, q12
   2234c:	vmul.i32	q8, q11, q8
   22350:	vorr	q11, q12, q12
   22354:	bne	22334 <ReadDataSlabN+0x9fc>
   22358:	vext.8	q11, q9, q8, #8
   2235c:	vext.8	q12, q8, q8, #8
   22360:	ldr	r1, [sp, #32]
   22364:	vmul.i32	q0, q9, q11
   22368:	vmul.i32	q1, q8, q12
   2236c:	cmp	r8, r1
   22370:	vmul.i32	q8, q0, d0[1]
   22374:	vmul.i32	q9, q1, d2[1]
   22378:	vmov.32	r7, d16[0]
   2237c:	vmov.32	r4, d18[0]
   22380:	beq	22274 <ReadDataSlabN+0x93c>
   22384:	vmov.32	r1, d20[0]
   22388:	sub	ip, fp, #72	; 0x48
   2238c:	mul	r4, r1, r4
   22390:	ldr	r1, [r0, r2, lsl #2]
   22394:	subs	r2, r2, #1
   22398:	mul	r7, r7, r1
   2239c:	bne	2238c <ReadDataSlabN+0xa54>
   223a0:	b	22278 <ReadDataSlabN+0x940>
   223a4:	ldr	r0, [ip]
   223a8:	mov	r6, r8
   223ac:	mov	r9, #0
   223b0:	sub	r0, r0, #1
   223b4:	str	r0, [fp, #-72]	; 0xffffffb8
   223b8:	ldr	sl, [r8]
   223bc:	ldr	r8, [fp, #24]
   223c0:	str	sl, [sp, #56]	; 0x38
   223c4:	ldr	r0, [r8]
   223c8:	str	r0, [sp, #20]
   223cc:	ldr	r0, [fp, #8]
   223d0:	cmp	r0, #2
   223d4:	blt	237f8 <ReadDataSlabN+0x1ec0>
   223d8:	sub	r0, r6, #4
   223dc:	sub	lr, r6, #12
   223e0:	mov	r3, #1
   223e4:	mov	r2, #0
   223e8:	mvn	r5, #15
   223ec:	mov	r4, sl
   223f0:	mov	r9, #0
   223f4:	add	r6, sp, #56	; 0x38
   223f8:	sub	ip, fp, #72	; 0x48
   223fc:	b	2244c <ReadDataSlabN+0xb14>
   22400:	sub	ip, fp, #72	; 0x48
   22404:	ldr	r1, [fp, #16]
   22408:	str	r4, [r6, r3, lsl #2]
   2240c:	str	r7, [ip, r3, lsl #2]
   22410:	ldr	r2, [sp, #20]
   22414:	add	lr, lr, #4
   22418:	ldr	r1, [r1, r3, lsl #2]
   2241c:	mla	r9, r1, sl, r9
   22420:	ldr	r1, [fp, #24]
   22424:	mov	sl, r4
   22428:	ldr	r4, [sp, #36]	; 0x24
   2242c:	ldr	r1, [r1, r3, lsl #2]
   22430:	add	r3, r3, #1
   22434:	mul	r2, r1, r2
   22438:	ldr	r1, [fp, #8]
   2243c:	str	r2, [sp, #20]
   22440:	mov	r2, r8
   22444:	cmp	r3, r1
   22448:	beq	237fc <ReadDataSlabN+0x1ec4>
   2244c:	ldr	r1, [fp, #20]
   22450:	add	r2, r2, #1
   22454:	cmp	r2, #4
   22458:	ldr	r1, [r1, r3, lsl #2]
   2245c:	str	r4, [r6, r3, lsl #2]
   22460:	sub	r7, r1, #1
   22464:	ldr	r1, [fp, #12]
   22468:	str	r7, [ip, r3, lsl #2]
   2246c:	ldr	r1, [r1, r3, lsl #2]
   22470:	str	r1, [sp, #36]	; 0x24
   22474:	bcs	22484 <ReadDataSlabN+0xb4c>
   22478:	mov	r8, r2
   2247c:	mov	r2, r3
   22480:	b	22518 <ReadDataSlabN+0xbe0>
   22484:	vmov.i32	q9, #1	; 0x00000001
   22488:	vmov.i32	q10, #1	; 0x00000001
   2248c:	vmov.32	d23[1], r1
   22490:	vmov.i32	q8, #1	; 0x00000001
   22494:	bic	r1, r2, #3
   22498:	mov	r8, r2
   2249c:	bic	ip, r3, #3
   224a0:	str	r1, [sp, #32]
   224a4:	sub	r2, r3, r1
   224a8:	mov	r1, lr
   224ac:	vmov.32	d18[0], r4
   224b0:	vmov.32	d20[0], r7
   224b4:	vorr	d16, d18, d18
   224b8:	vmov.i32	q9, #1	; 0x00000001
   224bc:	vorr	d18, d20, d20
   224c0:	vld1.32	{d20-d21}, [r1], r5
   224c4:	subs	ip, ip, #4
   224c8:	vrev64.32	q12, q10
   224cc:	vext.8	q12, q12, q12, #8
   224d0:	vext.8	q11, q11, q12, #12
   224d4:	vmul.i32	q9, q9, q12
   224d8:	vmul.i32	q8, q11, q8
   224dc:	vorr	q11, q12, q12
   224e0:	bne	224c0 <ReadDataSlabN+0xb88>
   224e4:	vext.8	q11, q9, q8, #8
   224e8:	vext.8	q12, q8, q8, #8
   224ec:	ldr	r1, [sp, #32]
   224f0:	vmul.i32	q0, q9, q11
   224f4:	vmul.i32	q1, q8, q12
   224f8:	cmp	r8, r1
   224fc:	vmul.i32	q8, q0, d0[1]
   22500:	vmul.i32	q9, q1, d2[1]
   22504:	vmov.32	r7, d16[0]
   22508:	vmov.32	r4, d18[0]
   2250c:	beq	22400 <ReadDataSlabN+0xac8>
   22510:	vmov.32	r1, d20[0]
   22514:	sub	ip, fp, #72	; 0x48
   22518:	mul	r4, r1, r4
   2251c:	ldr	r1, [r0, r2, lsl #2]
   22520:	subs	r2, r2, #1
   22524:	mul	r7, r7, r1
   22528:	bne	22518 <ReadDataSlabN+0xbe0>
   2252c:	b	22404 <ReadDataSlabN+0xacc>
   22530:	ldr	r0, [ip]
   22534:	mov	r6, r8
   22538:	mov	r9, #0
   2253c:	sub	r0, r0, #1
   22540:	str	r0, [fp, #-72]	; 0xffffffb8
   22544:	ldr	sl, [r8]
   22548:	ldr	r8, [fp, #24]
   2254c:	str	sl, [sp, #56]	; 0x38
   22550:	ldr	r0, [r8]
   22554:	str	r0, [sp, #20]
   22558:	ldr	r0, [fp, #8]
   2255c:	cmp	r0, #2
   22560:	blt	23a40 <ReadDataSlabN+0x2108>
   22564:	sub	r0, r6, #4
   22568:	sub	lr, r6, #12
   2256c:	mov	r3, #1
   22570:	mov	r2, #0
   22574:	mvn	r5, #15
   22578:	mov	r4, sl
   2257c:	mov	r9, #0
   22580:	add	r6, sp, #56	; 0x38
   22584:	sub	ip, fp, #72	; 0x48
   22588:	b	225d8 <ReadDataSlabN+0xca0>
   2258c:	sub	ip, fp, #72	; 0x48
   22590:	ldr	r1, [fp, #16]
   22594:	str	r4, [r6, r3, lsl #2]
   22598:	str	r7, [ip, r3, lsl #2]
   2259c:	ldr	r2, [sp, #20]
   225a0:	add	lr, lr, #4
   225a4:	ldr	r1, [r1, r3, lsl #2]
   225a8:	mla	r9, r1, sl, r9
   225ac:	ldr	r1, [fp, #24]
   225b0:	mov	sl, r4
   225b4:	ldr	r4, [sp, #36]	; 0x24
   225b8:	ldr	r1, [r1, r3, lsl #2]
   225bc:	add	r3, r3, #1
   225c0:	mul	r2, r1, r2
   225c4:	ldr	r1, [fp, #8]
   225c8:	str	r2, [sp, #20]
   225cc:	mov	r2, r8
   225d0:	cmp	r3, r1
   225d4:	beq	23a44 <ReadDataSlabN+0x210c>
   225d8:	ldr	r1, [fp, #20]
   225dc:	add	r2, r2, #1
   225e0:	cmp	r2, #4
   225e4:	ldr	r1, [r1, r3, lsl #2]
   225e8:	str	r4, [r6, r3, lsl #2]
   225ec:	sub	r7, r1, #1
   225f0:	ldr	r1, [fp, #12]
   225f4:	str	r7, [ip, r3, lsl #2]
   225f8:	ldr	r1, [r1, r3, lsl #2]
   225fc:	str	r1, [sp, #36]	; 0x24
   22600:	bcs	22610 <ReadDataSlabN+0xcd8>
   22604:	mov	r8, r2
   22608:	mov	r2, r3
   2260c:	b	226a4 <ReadDataSlabN+0xd6c>
   22610:	vmov.i32	q9, #1	; 0x00000001
   22614:	vmov.i32	q10, #1	; 0x00000001
   22618:	vmov.32	d23[1], r1
   2261c:	vmov.i32	q8, #1	; 0x00000001
   22620:	bic	r1, r2, #3
   22624:	mov	r8, r2
   22628:	bic	ip, r3, #3
   2262c:	str	r1, [sp, #32]
   22630:	sub	r2, r3, r1
   22634:	mov	r1, lr
   22638:	vmov.32	d18[0], r4
   2263c:	vmov.32	d20[0], r7
   22640:	vorr	d16, d18, d18
   22644:	vmov.i32	q9, #1	; 0x00000001
   22648:	vorr	d18, d20, d20
   2264c:	vld1.32	{d20-d21}, [r1], r5
   22650:	subs	ip, ip, #4
   22654:	vrev64.32	q12, q10
   22658:	vext.8	q12, q12, q12, #8
   2265c:	vext.8	q11, q11, q12, #12
   22660:	vmul.i32	q9, q9, q12
   22664:	vmul.i32	q8, q11, q8
   22668:	vorr	q11, q12, q12
   2266c:	bne	2264c <ReadDataSlabN+0xd14>
   22670:	vext.8	q11, q9, q8, #8
   22674:	vext.8	q12, q8, q8, #8
   22678:	ldr	r1, [sp, #32]
   2267c:	vmul.i32	q0, q9, q11
   22680:	vmul.i32	q1, q8, q12
   22684:	cmp	r8, r1
   22688:	vmul.i32	q8, q0, d0[1]
   2268c:	vmul.i32	q9, q1, d2[1]
   22690:	vmov.32	r7, d16[0]
   22694:	vmov.32	r4, d18[0]
   22698:	beq	2258c <ReadDataSlabN+0xc54>
   2269c:	vmov.32	r1, d20[0]
   226a0:	sub	ip, fp, #72	; 0x48
   226a4:	mul	r4, r1, r4
   226a8:	ldr	r1, [r0, r2, lsl #2]
   226ac:	subs	r2, r2, #1
   226b0:	mul	r7, r7, r1
   226b4:	bne	226a4 <ReadDataSlabN+0xd6c>
   226b8:	b	22590 <ReadDataSlabN+0xc58>
   226bc:	ldr	r0, [ip]
   226c0:	mov	r6, r8
   226c4:	sub	r0, r0, #1
   226c8:	str	r0, [fp, #-72]	; 0xffffffb8
   226cc:	ldr	sl, [r8]
   226d0:	ldr	r8, [fp, #24]
   226d4:	str	sl, [sp, #56]	; 0x38
   226d8:	ldr	r0, [r8]
   226dc:	str	r0, [sp, #20]
   226e0:	ldr	r0, [fp, #8]
   226e4:	cmp	r0, #2
   226e8:	blt	23c88 <ReadDataSlabN+0x2350>
   226ec:	sub	r0, r6, #4
   226f0:	sub	lr, r6, #12
   226f4:	add	r6, sp, #56	; 0x38
   226f8:	mov	r3, #1
   226fc:	mov	r9, #0
   22700:	mvn	r5, #15
   22704:	mov	r4, sl
   22708:	mov	r8, #0
   2270c:	mov	ip, r6
   22710:	sub	r6, fp, #72	; 0x48
   22714:	b	22764 <ReadDataSlabN+0xe2c>
   22718:	sub	r6, fp, #72	; 0x48
   2271c:	add	ip, sp, #56	; 0x38
   22720:	ldr	r1, [fp, #16]
   22724:	str	r4, [ip, r3, lsl #2]
   22728:	str	r7, [r6, r3, lsl #2]
   2272c:	ldr	r2, [sp, #20]
   22730:	add	lr, lr, #4
   22734:	ldr	r1, [r1, r3, lsl #2]
   22738:	mla	r8, r1, sl, r8
   2273c:	ldr	r1, [fp, #24]
   22740:	mov	sl, r4
   22744:	ldr	r4, [sp, #36]	; 0x24
   22748:	ldr	r1, [r1, r3, lsl #2]
   2274c:	add	r3, r3, #1
   22750:	mul	r2, r1, r2
   22754:	ldr	r1, [fp, #8]
   22758:	str	r2, [sp, #20]
   2275c:	cmp	r3, r1
   22760:	beq	23c94 <ReadDataSlabN+0x235c>
   22764:	ldr	r1, [fp, #20]
   22768:	add	r9, r9, #1
   2276c:	cmp	r9, #4
   22770:	ldr	r1, [r1, r3, lsl #2]
   22774:	str	r4, [ip, r3, lsl #2]
   22778:	sub	r7, r1, #1
   2277c:	ldr	r1, [fp, #12]
   22780:	str	r7, [r6, r3, lsl #2]
   22784:	ldr	r2, [r1, r3, lsl #2]
   22788:	str	r2, [sp, #36]	; 0x24
   2278c:	bcs	2279c <ReadDataSlabN+0xe64>
   22790:	mov	r1, r2
   22794:	mov	r2, r3
   22798:	b	2282c <ReadDataSlabN+0xef4>
   2279c:	vmov.i32	q9, #1	; 0x00000001
   227a0:	vmov.i32	q10, #1	; 0x00000001
   227a4:	vmov.32	d23[1], r2
   227a8:	vmov.i32	q8, #1	; 0x00000001
   227ac:	bic	r6, r9, #3
   227b0:	mov	r1, r9
   227b4:	bic	ip, r3, #3
   227b8:	mov	r1, lr
   227bc:	sub	r2, r3, r6
   227c0:	vmov.32	d18[0], r4
   227c4:	vmov.32	d20[0], r7
   227c8:	vorr	d16, d18, d18
   227cc:	vmov.i32	q9, #1	; 0x00000001
   227d0:	vorr	d18, d20, d20
   227d4:	vld1.32	{d20-d21}, [r1], r5
   227d8:	subs	ip, ip, #4
   227dc:	vrev64.32	q12, q10
   227e0:	vext.8	q12, q12, q12, #8
   227e4:	vext.8	q11, q11, q12, #12
   227e8:	vmul.i32	q9, q9, q12
   227ec:	vmul.i32	q8, q11, q8
   227f0:	vorr	q11, q12, q12
   227f4:	bne	227d4 <ReadDataSlabN+0xe9c>
   227f8:	vext.8	q11, q9, q8, #8
   227fc:	vext.8	q12, q8, q8, #8
   22800:	cmp	r9, r6
   22804:	vmul.i32	q0, q9, q11
   22808:	vmul.i32	q1, q8, q12
   2280c:	vmul.i32	q8, q0, d0[1]
   22810:	vmul.i32	q9, q1, d2[1]
   22814:	vmov.32	r7, d16[0]
   22818:	vmov.32	r4, d18[0]
   2281c:	beq	22718 <ReadDataSlabN+0xde0>
   22820:	vmov.32	r1, d20[0]
   22824:	sub	r6, fp, #72	; 0x48
   22828:	add	ip, sp, #56	; 0x38
   2282c:	mul	r4, r1, r4
   22830:	ldr	r1, [r0, r2, lsl #2]
   22834:	subs	r2, r2, #1
   22838:	mul	r7, r7, r1
   2283c:	bne	2282c <ReadDataSlabN+0xef4>
   22840:	b	22720 <ReadDataSlabN+0xde8>
   22844:	ldr	r0, [ip]
   22848:	mov	r6, r8
   2284c:	mov	r9, #0
   22850:	sub	r0, r0, #1
   22854:	str	r0, [fp, #-72]	; 0xffffffb8
   22858:	ldr	sl, [r8]
   2285c:	ldr	r8, [fp, #24]
   22860:	str	sl, [sp, #56]	; 0x38
   22864:	ldr	r0, [r8]
   22868:	str	r0, [sp, #20]
   2286c:	ldr	r0, [fp, #8]
   22870:	cmp	r0, #2
   22874:	blt	23ee0 <ReadDataSlabN+0x25a8>
   22878:	sub	r0, r6, #4
   2287c:	sub	lr, r6, #12
   22880:	mov	r3, #1
   22884:	mov	r2, #0
   22888:	mvn	r5, #15
   2288c:	mov	r4, sl
   22890:	mov	r9, #0
   22894:	add	r6, sp, #56	; 0x38
   22898:	sub	ip, fp, #72	; 0x48
   2289c:	b	228ec <ReadDataSlabN+0xfb4>
   228a0:	sub	ip, fp, #72	; 0x48
   228a4:	ldr	r1, [fp, #16]
   228a8:	str	r4, [r6, r3, lsl #2]
   228ac:	str	r7, [ip, r3, lsl #2]
   228b0:	ldr	r2, [sp, #20]
   228b4:	add	lr, lr, #4
   228b8:	ldr	r1, [r1, r3, lsl #2]
   228bc:	mla	r9, r1, sl, r9
   228c0:	ldr	r1, [fp, #24]
   228c4:	mov	sl, r4
   228c8:	ldr	r4, [sp, #36]	; 0x24
   228cc:	ldr	r1, [r1, r3, lsl #2]
   228d0:	add	r3, r3, #1
   228d4:	mul	r2, r1, r2
   228d8:	ldr	r1, [fp, #8]
   228dc:	str	r2, [sp, #20]
   228e0:	mov	r2, r8
   228e4:	cmp	r3, r1
   228e8:	beq	23ee4 <ReadDataSlabN+0x25ac>
   228ec:	ldr	r1, [fp, #20]
   228f0:	add	r2, r2, #1
   228f4:	cmp	r2, #4
   228f8:	ldr	r1, [r1, r3, lsl #2]
   228fc:	str	r4, [r6, r3, lsl #2]
   22900:	sub	r7, r1, #1
   22904:	ldr	r1, [fp, #12]
   22908:	str	r7, [ip, r3, lsl #2]
   2290c:	ldr	r1, [r1, r3, lsl #2]
   22910:	str	r1, [sp, #36]	; 0x24
   22914:	bcs	22924 <ReadDataSlabN+0xfec>
   22918:	mov	r8, r2
   2291c:	mov	r2, r3
   22920:	b	229b8 <ReadDataSlabN+0x1080>
   22924:	vmov.i32	q9, #1	; 0x00000001
   22928:	vmov.i32	q10, #1	; 0x00000001
   2292c:	vmov.32	d23[1], r1
   22930:	vmov.i32	q8, #1	; 0x00000001
   22934:	bic	r1, r2, #3
   22938:	mov	r8, r2
   2293c:	bic	ip, r3, #3
   22940:	str	r1, [sp, #32]
   22944:	sub	r2, r3, r1
   22948:	mov	r1, lr
   2294c:	vmov.32	d18[0], r4
   22950:	vmov.32	d20[0], r7
   22954:	vorr	d16, d18, d18
   22958:	vmov.i32	q9, #1	; 0x00000001
   2295c:	vorr	d18, d20, d20
   22960:	vld1.32	{d20-d21}, [r1], r5
   22964:	subs	ip, ip, #4
   22968:	vrev64.32	q12, q10
   2296c:	vext.8	q12, q12, q12, #8
   22970:	vext.8	q11, q11, q12, #12
   22974:	vmul.i32	q9, q9, q12
   22978:	vmul.i32	q8, q11, q8
   2297c:	vorr	q11, q12, q12
   22980:	bne	22960 <ReadDataSlabN+0x1028>
   22984:	vext.8	q11, q9, q8, #8
   22988:	vext.8	q12, q8, q8, #8
   2298c:	ldr	r1, [sp, #32]
   22990:	vmul.i32	q0, q9, q11
   22994:	vmul.i32	q1, q8, q12
   22998:	cmp	r8, r1
   2299c:	vmul.i32	q8, q0, d0[1]
   229a0:	vmul.i32	q9, q1, d2[1]
   229a4:	vmov.32	r7, d16[0]
   229a8:	vmov.32	r4, d18[0]
   229ac:	beq	228a0 <ReadDataSlabN+0xf68>
   229b0:	vmov.32	r1, d20[0]
   229b4:	sub	ip, fp, #72	; 0x48
   229b8:	mul	r4, r1, r4
   229bc:	ldr	r1, [r0, r2, lsl #2]
   229c0:	subs	r2, r2, #1
   229c4:	mul	r7, r7, r1
   229c8:	bne	229b8 <ReadDataSlabN+0x1080>
   229cc:	b	228a4 <ReadDataSlabN+0xf6c>
   229d0:	ldr	r0, [sp, #52]	; 0x34
   229d4:	mov	r2, #1
   229d8:	mov	r4, ip
   229dc:	mul	r1, r6, r0
   229e0:	ldr	r0, [sp, #48]	; 0x30
   229e4:	ldr	r0, [r0]
   229e8:	bl	1a2c <fseek@plt>
   229ec:	ldr	r0, [r4]
   229f0:	cmp	r0, #1
   229f4:	bne	24128 <ReadDataSlabN+0x27f0>
   229f8:	ldr	r0, [sp, #24]
   229fc:	sub	r1, fp, #72	; 0x48
   22a00:	add	r2, sp, #96	; 0x60
   22a04:	cmp	r0, #1
   22a08:	add	r0, sp, #56	; 0x38
   22a0c:	blt	25bc4 <ReadDataSlabN+0x428c>
   22a10:	orr	r0, r0, #4
   22a14:	orr	r4, r2, #4
   22a18:	ldr	r2, [fp, #24]
   22a1c:	str	r0, [sp, #32]
   22a20:	ldr	r0, [fp, #16]
   22a24:	str	r4, [sp, #20]
   22a28:	add	r2, r2, #4
   22a2c:	add	r3, r0, #4
   22a30:	ldr	r0, [fp, #8]
   22a34:	str	r2, [sp, #36]	; 0x24
   22a38:	str	r3, [sp, #28]
   22a3c:	sub	r0, r0, #1
   22a40:	str	r0, [sp, #12]
   22a44:	orr	r0, r1, #4
   22a48:	str	r0, [sp, #8]
   22a4c:	mov	r0, #0
   22a50:	str	r0, [sp, #16]
   22a54:	b	22aa4 <ReadDataSlabN+0x116c>
   22a58:	ldr	r0, [sp, #8]
   22a5c:	mov	r5, r6
   22a60:	mov	r2, #1
   22a64:	ldr	r6, [r0, r9]
   22a68:	ldr	r0, [sp, #52]	; 0x34
   22a6c:	mul	r1, r6, r0
   22a70:	ldr	r0, [sl]
   22a74:	bl	1a2c <fseek@plt>
   22a78:	add	r5, r6, r5
   22a7c:	mov	r6, r5
   22a80:	ldr	r0, [fp, #24]
   22a84:	ldr	r2, [sp, #16]
   22a88:	ldr	r1, [sp, #24]
   22a8c:	ldr	r0, [r0]
   22a90:	add	r2, r0, r2
   22a94:	mov	r0, #0
   22a98:	cmp	r2, r1
   22a9c:	str	r2, [sp, #16]
   22aa0:	bge	219bc <ReadDataSlabN+0x84>
   22aa4:	ldr	r5, [fp, #16]
   22aa8:	ldr	r0, [r5]
   22aac:	cmp	r0, #0
   22ab0:	beq	22aec <ReadDataSlabN+0x11b4>
   22ab4:	ldr	r8, [sp, #52]	; 0x34
   22ab8:	ldr	sl, [sp, #48]	; 0x30
   22abc:	mov	r2, #1
   22ac0:	mul	r1, r0, r8
   22ac4:	ldr	r0, [sl]
   22ac8:	bl	1a2c <fseek@plt>
   22acc:	ldr	r0, [r5]
   22ad0:	ldr	r2, [sp, #44]	; 0x2c
   22ad4:	add	r6, r0, r6
   22ad8:	ldr	r0, [sp, #40]	; 0x28
   22adc:	mov	r9, r6
   22ae0:	mov	r6, r5
   22ae4:	ldr	r5, [fp, #24]
   22ae8:	b	22b04 <ReadDataSlabN+0x11cc>
   22aec:	add	sl, sp, #40	; 0x28
   22af0:	mov	r9, r6
   22af4:	mov	r6, r5
   22af8:	ldr	r5, [fp, #24]
   22afc:	ldr	r8, [sp, #52]	; 0x34
   22b00:	ldm	sl, {r0, r2, sl}
   22b04:	ldr	r1, [sp, #16]
   22b08:	ldr	r3, [r5]
   22b0c:	add	r1, r0, r1
   22b10:	mov	r0, sl
   22b14:	bl	1c460 <ReadInt8Data>
   22b18:	ldr	r0, [fp, #12]
   22b1c:	ldr	r6, [r6]
   22b20:	ldr	r1, [r5]
   22b24:	mov	r2, #1
   22b28:	ldr	r7, [r0]
   22b2c:	sub	r0, r7, r6
   22b30:	sub	r0, r0, r1
   22b34:	mul	r1, r0, r8
   22b38:	ldr	r0, [sl]
   22b3c:	bl	1a2c <fseek@plt>
   22b40:	add	r0, r7, r9
   22b44:	sub	r6, r0, r6
   22b48:	ldr	r0, [fp, #8]
   22b4c:	cmp	r0, #2
   22b50:	blt	22a80 <ReadDataSlabN+0x1148>
   22b54:	ldr	r8, [sp, #12]
   22b58:	ldr	r3, [sp, #28]
   22b5c:	mov	r9, #0
   22b60:	b	22bbc <ReadDataSlabN+0x1284>
   22b64:	add	r0, sp, #56	; 0x38
   22b68:	mov	r4, r6
   22b6c:	sub	r1, sl, r7
   22b70:	ldr	r5, [sp, #48]	; 0x30
   22b74:	mov	r2, #1
   22b78:	ldr	r6, [r0, r9]
   22b7c:	ldr	r0, [r3, r9]
   22b80:	mla	r0, r0, r6, r1
   22b84:	ldr	r1, [sp, #52]	; 0x34
   22b88:	mul	r1, r0, r1
   22b8c:	ldr	r0, [r5]
   22b90:	bl	1a2c <fseek@plt>
   22b94:	ldr	r3, [sp, #28]
   22b98:	add	r1, sl, r4
   22b9c:	ldr	r4, [sp, #20]
   22ba0:	mov	sl, r5
   22ba4:	sub	r1, r1, r7
   22ba8:	ldr	r0, [r3, r9]
   22bac:	mla	r6, r0, r6, r1
   22bb0:	subs	r8, r8, #1
   22bb4:	add	r9, r9, #4
   22bb8:	beq	22a80 <ReadDataSlabN+0x1148>
   22bbc:	ldr	r0, [r4, r9]
   22bc0:	ldr	r1, [sp, #36]	; 0x24
   22bc4:	add	r0, r0, #1
   22bc8:	str	r0, [r4, r9]
   22bcc:	ldr	r1, [r1, r9]
   22bd0:	sdiv	r2, r0, r1
   22bd4:	mls	r0, r2, r1, r0
   22bd8:	cmp	r0, #0
   22bdc:	bne	22a58 <ReadDataSlabN+0x1120>
   22be0:	mov	r0, #0
   22be4:	str	r0, [r4, r9]
   22be8:	ldr	r0, [sp, #32]
   22bec:	ldr	sl, [r0, r9]
   22bf0:	sdiv	r0, r6, sl
   22bf4:	mls	r7, r0, sl, r6
   22bf8:	cmp	r7, #0
   22bfc:	bne	22b64 <ReadDataSlabN+0x122c>
   22c00:	ldr	r0, [r3, r9]
   22c04:	cmp	r0, #0
   22c08:	beq	22c48 <ReadDataSlabN+0x1310>
   22c0c:	add	r1, sp, #56	; 0x38
   22c10:	mov	r5, r6
   22c14:	ldr	sl, [sp, #48]	; 0x30
   22c18:	mov	r2, #1
   22c1c:	ldr	r6, [r1, r9]
   22c20:	ldr	r1, [sp, #52]	; 0x34
   22c24:	mul	r0, r0, r1
   22c28:	mul	r1, r0, r6
   22c2c:	ldr	r0, [sl]
   22c30:	bl	1a2c <fseek@plt>
   22c34:	ldr	r3, [sp, #28]
   22c38:	ldr	r0, [r3, r9]
   22c3c:	mla	r5, r0, r6, r5
   22c40:	mov	r6, r5
   22c44:	b	22bb0 <ReadDataSlabN+0x1278>
   22c48:	ldr	sl, [sp, #48]	; 0x30
   22c4c:	b	22bb0 <ReadDataSlabN+0x1278>
   22c50:	ldr	r0, [sp, #52]	; 0x34
   22c54:	mov	r2, #1
   22c58:	mov	r4, ip
   22c5c:	mul	r1, r6, r0
   22c60:	ldr	r0, [sp, #48]	; 0x30
   22c64:	ldr	r0, [r0]
   22c68:	bl	1a2c <fseek@plt>
   22c6c:	ldr	r0, [r4]
   22c70:	cmp	r0, #1
   22c74:	bne	243c4 <ReadDataSlabN+0x2a8c>
   22c78:	ldr	r0, [sp, #24]
   22c7c:	sub	r1, fp, #72	; 0x48
   22c80:	add	r2, sp, #96	; 0x60
   22c84:	cmp	r0, #1
   22c88:	add	r0, sp, #56	; 0x38
   22c8c:	blt	25bc4 <ReadDataSlabN+0x428c>
   22c90:	orr	r0, r0, #4
   22c94:	orr	r4, r2, #4
   22c98:	ldr	r2, [fp, #24]
   22c9c:	str	r0, [sp, #32]
   22ca0:	ldr	r0, [fp, #16]
   22ca4:	str	r4, [sp, #20]
   22ca8:	add	r2, r2, #4
   22cac:	add	r3, r0, #4
   22cb0:	ldr	r0, [fp, #8]
   22cb4:	str	r2, [sp, #36]	; 0x24
   22cb8:	str	r3, [sp, #28]
   22cbc:	sub	r0, r0, #1
   22cc0:	str	r0, [sp, #12]
   22cc4:	orr	r0, r1, #4
   22cc8:	str	r0, [sp, #8]
   22ccc:	mov	r0, #0
   22cd0:	str	r0, [sp, #16]
   22cd4:	b	22d24 <ReadDataSlabN+0x13ec>
   22cd8:	ldr	r0, [sp, #8]
   22cdc:	mov	r5, r6
   22ce0:	mov	r2, #1
   22ce4:	ldr	r6, [r0, r9]
   22ce8:	ldr	r0, [sp, #52]	; 0x34
   22cec:	mul	r1, r6, r0
   22cf0:	ldr	r0, [sl]
   22cf4:	bl	1a2c <fseek@plt>
   22cf8:	add	r5, r6, r5
   22cfc:	mov	r6, r5
   22d00:	ldr	r0, [fp, #24]
   22d04:	ldr	r2, [sp, #16]
   22d08:	ldr	r1, [sp, #24]
   22d0c:	ldr	r0, [r0]
   22d10:	add	r2, r0, r2
   22d14:	mov	r0, #0
   22d18:	cmp	r2, r1
   22d1c:	str	r2, [sp, #16]
   22d20:	bge	219bc <ReadDataSlabN+0x84>
   22d24:	ldr	r5, [fp, #16]
   22d28:	ldr	r0, [r5]
   22d2c:	cmp	r0, #0
   22d30:	beq	22d6c <ReadDataSlabN+0x1434>
   22d34:	ldr	r8, [sp, #52]	; 0x34
   22d38:	ldr	sl, [sp, #48]	; 0x30
   22d3c:	mov	r2, #1
   22d40:	mul	r1, r0, r8
   22d44:	ldr	r0, [sl]
   22d48:	bl	1a2c <fseek@plt>
   22d4c:	ldr	r0, [r5]
   22d50:	ldr	r2, [sp, #44]	; 0x2c
   22d54:	add	r6, r0, r6
   22d58:	ldr	r0, [sp, #40]	; 0x28
   22d5c:	mov	r9, r6
   22d60:	mov	r6, r5
   22d64:	ldr	r5, [fp, #24]
   22d68:	b	22d84 <ReadDataSlabN+0x144c>
   22d6c:	add	sl, sp, #40	; 0x28
   22d70:	mov	r9, r6
   22d74:	mov	r6, r5
   22d78:	ldr	r5, [fp, #24]
   22d7c:	ldr	r8, [sp, #52]	; 0x34
   22d80:	ldm	sl, {r0, r2, sl}
   22d84:	ldr	r1, [sp, #16]
   22d88:	ldr	r3, [r5]
   22d8c:	add	r1, r0, r1
   22d90:	mov	r0, sl
   22d94:	bl	1ed88 <ReadUInt8Data>
   22d98:	ldr	r0, [fp, #12]
   22d9c:	ldr	r6, [r6]
   22da0:	ldr	r1, [r5]
   22da4:	mov	r2, #1
   22da8:	ldr	r7, [r0]
   22dac:	sub	r0, r7, r6
   22db0:	sub	r0, r0, r1
   22db4:	mul	r1, r0, r8
   22db8:	ldr	r0, [sl]
   22dbc:	bl	1a2c <fseek@plt>
   22dc0:	add	r0, r7, r9
   22dc4:	sub	r6, r0, r6
   22dc8:	ldr	r0, [fp, #8]
   22dcc:	cmp	r0, #2
   22dd0:	blt	22d00 <ReadDataSlabN+0x13c8>
   22dd4:	ldr	r8, [sp, #12]
   22dd8:	ldr	r3, [sp, #28]
   22ddc:	mov	r9, #0
   22de0:	b	22e3c <ReadDataSlabN+0x1504>
   22de4:	add	r0, sp, #56	; 0x38
   22de8:	mov	r4, r6
   22dec:	sub	r1, sl, r7
   22df0:	ldr	r5, [sp, #48]	; 0x30
   22df4:	mov	r2, #1
   22df8:	ldr	r6, [r0, r9]
   22dfc:	ldr	r0, [r3, r9]
   22e00:	mla	r0, r0, r6, r1
   22e04:	ldr	r1, [sp, #52]	; 0x34
   22e08:	mul	r1, r0, r1
   22e0c:	ldr	r0, [r5]
   22e10:	bl	1a2c <fseek@plt>
   22e14:	ldr	r3, [sp, #28]
   22e18:	add	r1, sl, r4
   22e1c:	ldr	r4, [sp, #20]
   22e20:	mov	sl, r5
   22e24:	sub	r1, r1, r7
   22e28:	ldr	r0, [r3, r9]
   22e2c:	mla	r6, r0, r6, r1
   22e30:	subs	r8, r8, #1
   22e34:	add	r9, r9, #4
   22e38:	beq	22d00 <ReadDataSlabN+0x13c8>
   22e3c:	ldr	r0, [r4, r9]
   22e40:	ldr	r1, [sp, #36]	; 0x24
   22e44:	add	r0, r0, #1
   22e48:	str	r0, [r4, r9]
   22e4c:	ldr	r1, [r1, r9]
   22e50:	sdiv	r2, r0, r1
   22e54:	mls	r0, r2, r1, r0
   22e58:	cmp	r0, #0
   22e5c:	bne	22cd8 <ReadDataSlabN+0x13a0>
   22e60:	mov	r0, #0
   22e64:	str	r0, [r4, r9]
   22e68:	ldr	r0, [sp, #32]
   22e6c:	ldr	sl, [r0, r9]
   22e70:	sdiv	r0, r6, sl
   22e74:	mls	r7, r0, sl, r6
   22e78:	cmp	r7, #0
   22e7c:	bne	22de4 <ReadDataSlabN+0x14ac>
   22e80:	ldr	r0, [r3, r9]
   22e84:	cmp	r0, #0
   22e88:	beq	22ec8 <ReadDataSlabN+0x1590>
   22e8c:	add	r1, sp, #56	; 0x38
   22e90:	mov	r5, r6
   22e94:	ldr	sl, [sp, #48]	; 0x30
   22e98:	mov	r2, #1
   22e9c:	ldr	r6, [r1, r9]
   22ea0:	ldr	r1, [sp, #52]	; 0x34
   22ea4:	mul	r0, r0, r1
   22ea8:	mul	r1, r0, r6
   22eac:	ldr	r0, [sl]
   22eb0:	bl	1a2c <fseek@plt>
   22eb4:	ldr	r3, [sp, #28]
   22eb8:	ldr	r0, [r3, r9]
   22ebc:	mla	r5, r0, r6, r5
   22ec0:	mov	r6, r5
   22ec4:	b	22e30 <ReadDataSlabN+0x14f8>
   22ec8:	ldr	sl, [sp, #48]	; 0x30
   22ecc:	b	22e30 <ReadDataSlabN+0x14f8>
   22ed0:	add	r6, sp, #56	; 0x38
   22ed4:	ldr	r0, [sp, #52]	; 0x34
   22ed8:	mov	r2, #1
   22edc:	mul	r1, r9, r0
   22ee0:	ldr	r0, [sp, #48]	; 0x30
   22ee4:	ldr	r0, [r0]
   22ee8:	bl	1a2c <fseek@plt>
   22eec:	ldr	r0, [fp, #20]
   22ef0:	ldr	r0, [r0]
   22ef4:	cmp	r0, #1
   22ef8:	bne	24660 <ReadDataSlabN+0x2d28>
   22efc:	ldr	r0, [sp, #24]
   22f00:	sub	r1, fp, #72	; 0x48
   22f04:	cmp	r0, #1
   22f08:	ldr	r0, [fp, #16]
   22f0c:	blt	25bc4 <ReadDataSlabN+0x428c>
   22f10:	add	r3, r0, #4
   22f14:	ldr	r0, [fp, #8]
   22f18:	add	r2, sp, #96	; 0x60
   22f1c:	orr	r4, r2, #4
   22f20:	ldr	r2, [fp, #24]
   22f24:	str	r3, [sp, #28]
   22f28:	sub	r0, r0, #1
   22f2c:	add	r2, r2, #4
   22f30:	str	r0, [sp, #16]
   22f34:	orr	r0, r1, #4
   22f38:	str	r2, [sp, #36]	; 0x24
   22f3c:	orr	r2, r6, #4
   22f40:	str	r0, [sp, #12]
   22f44:	mov	r0, #0
   22f48:	str	r2, [sp, #32]
   22f4c:	str	r0, [sp, #20]
   22f50:	b	22f9c <ReadDataSlabN+0x1664>
   22f54:	ldr	r0, [sp, #12]
   22f58:	mov	r2, #1
   22f5c:	ldr	r5, [r0, r8]
   22f60:	ldr	r0, [sp, #52]	; 0x34
   22f64:	mul	r1, r5, r0
   22f68:	ldr	r0, [sp, #48]	; 0x30
   22f6c:	ldr	r0, [r0]
   22f70:	bl	1a2c <fseek@plt>
   22f74:	add	r9, r5, r9
   22f78:	ldr	r0, [fp, #24]
   22f7c:	ldr	r2, [sp, #20]
   22f80:	ldr	r1, [sp, #24]
   22f84:	ldr	r0, [r0]
   22f88:	add	r2, r0, r2
   22f8c:	mov	r0, #0
   22f90:	cmp	r2, r1
   22f94:	str	r2, [sp, #20]
   22f98:	bge	219bc <ReadDataSlabN+0x84>
   22f9c:	ldr	r5, [fp, #16]
   22fa0:	ldr	r0, [r5]
   22fa4:	cmp	r0, #0
   22fa8:	beq	22fdc <ReadDataSlabN+0x16a4>
   22fac:	ldr	sl, [sp, #52]	; 0x34
   22fb0:	ldr	r8, [sp, #48]	; 0x30
   22fb4:	mov	r2, #1
   22fb8:	mul	r1, r0, sl
   22fbc:	ldr	r0, [r8]
   22fc0:	bl	1a2c <fseek@plt>
   22fc4:	ldr	r0, [r5]
   22fc8:	ldr	r2, [sp, #44]	; 0x2c
   22fcc:	ldr	r6, [fp, #24]
   22fd0:	add	r9, r0, r9
   22fd4:	ldr	r0, [sp, #40]	; 0x28
   22fd8:	b	22fec <ReadDataSlabN+0x16b4>
   22fdc:	add	r8, sp, #40	; 0x28
   22fe0:	ldr	r6, [fp, #24]
   22fe4:	ldr	sl, [sp, #52]	; 0x34
   22fe8:	ldm	r8, {r0, r2, r8}
   22fec:	ldr	r1, [sp, #20]
   22ff0:	ldr	r3, [r6]
   22ff4:	add	r1, r0, r1, lsl #3
   22ff8:	mov	r0, r8
   22ffc:	bl	37d8 <ReadDoubleData>
   23000:	ldr	r0, [fp, #12]
   23004:	ldr	r5, [r5]
   23008:	ldr	r1, [r6]
   2300c:	mov	r2, #1
   23010:	ldr	r7, [r0]
   23014:	sub	r0, r7, r5
   23018:	sub	r0, r0, r1
   2301c:	mul	r1, r0, sl
   23020:	ldr	r0, [r8]
   23024:	bl	1a2c <fseek@plt>
   23028:	add	r0, r7, r9
   2302c:	sub	r9, r0, r5
   23030:	ldr	r0, [fp, #8]
   23034:	cmp	r0, #2
   23038:	blt	22f78 <ReadDataSlabN+0x1640>
   2303c:	ldr	sl, [sp, #16]
   23040:	ldr	r3, [sp, #28]
   23044:	mov	r8, #0
   23048:	add	r6, sp, #56	; 0x38
   2304c:	b	230a0 <ReadDataSlabN+0x1768>
   23050:	add	r0, sp, #56	; 0x38
   23054:	sub	r1, r7, r5
   23058:	mov	r2, #1
   2305c:	ldr	r6, [r0, r8]
   23060:	ldr	r0, [r3, r8]
   23064:	mla	r0, r0, r6, r1
   23068:	ldr	r1, [sp, #52]	; 0x34
   2306c:	mul	r1, r0, r1
   23070:	ldr	r0, [sp, #48]	; 0x30
   23074:	ldr	r0, [r0]
   23078:	bl	1a2c <fseek@plt>
   2307c:	ldr	r3, [sp, #28]
   23080:	add	r1, r7, r9
   23084:	sub	r1, r1, r5
   23088:	ldr	r0, [r3, r8]
   2308c:	mla	r9, r0, r6, r1
   23090:	add	r6, sp, #56	; 0x38
   23094:	subs	sl, sl, #1
   23098:	add	r8, r8, #4
   2309c:	beq	22f78 <ReadDataSlabN+0x1640>
   230a0:	ldr	r0, [r4, r8]
   230a4:	ldr	r1, [sp, #36]	; 0x24
   230a8:	add	r0, r0, #1
   230ac:	str	r0, [r4, r8]
   230b0:	ldr	r1, [r1, r8]
   230b4:	sdiv	r2, r0, r1
   230b8:	mls	r0, r2, r1, r0
   230bc:	cmp	r0, #0
   230c0:	bne	22f54 <ReadDataSlabN+0x161c>
   230c4:	mov	r0, #0
   230c8:	str	r0, [r4, r8]
   230cc:	ldr	r0, [sp, #32]
   230d0:	ldr	r7, [r0, r8]
   230d4:	sdiv	r0, r9, r7
   230d8:	mls	r5, r0, r7, r9
   230dc:	cmp	r5, #0
   230e0:	bne	23050 <ReadDataSlabN+0x1718>
   230e4:	ldr	r0, [r3, r8]
   230e8:	cmp	r0, #0
   230ec:	beq	23094 <ReadDataSlabN+0x175c>
   230f0:	ldr	r1, [sp, #52]	; 0x34
   230f4:	ldr	r5, [r6, r8]
   230f8:	mov	r2, #1
   230fc:	mul	r0, r0, r1
   23100:	mul	r1, r0, r5
   23104:	ldr	r0, [sp, #48]	; 0x30
   23108:	ldr	r0, [r0]
   2310c:	bl	1a2c <fseek@plt>
   23110:	ldr	r3, [sp, #28]
   23114:	ldr	r0, [r3, r8]
   23118:	mla	r9, r0, r5, r9
   2311c:	b	23094 <ReadDataSlabN+0x175c>
   23120:	add	r6, sp, #56	; 0x38
   23124:	ldr	r0, [sp, #52]	; 0x34
   23128:	mov	r2, #1
   2312c:	mul	r1, r9, r0
   23130:	ldr	r0, [sp, #48]	; 0x30
   23134:	ldr	r0, [r0]
   23138:	bl	1a2c <fseek@plt>
   2313c:	ldr	r0, [fp, #20]
   23140:	ldr	r0, [r0]
   23144:	cmp	r0, #1
   23148:	bne	248e4 <ReadDataSlabN+0x2fac>
   2314c:	ldr	r0, [sp, #20]
   23150:	sub	r1, fp, #72	; 0x48
   23154:	cmp	r0, #1
   23158:	ldr	r0, [fp, #16]
   2315c:	blt	25bc4 <ReadDataSlabN+0x428c>
   23160:	add	r2, sp, #96	; 0x60
   23164:	add	r3, r0, #4
   23168:	ldr	r0, [fp, #8]
   2316c:	orr	r4, r2, #4
   23170:	ldr	r2, [fp, #24]
   23174:	str	r3, [sp, #28]
   23178:	sub	r0, r0, #1
   2317c:	add	r2, r2, #4
   23180:	str	r0, [sp, #16]
   23184:	orr	r0, r1, #4
   23188:	str	r2, [sp, #36]	; 0x24
   2318c:	orr	r2, r6, #4
   23190:	mov	r6, #0
   23194:	str	r0, [sp, #12]
   23198:	str	r2, [sp, #32]
   2319c:	b	231e4 <ReadDataSlabN+0x18ac>
   231a0:	ldr	r0, [sp, #12]
   231a4:	mov	r2, #1
   231a8:	ldr	r5, [r0, r8]
   231ac:	ldr	r0, [sp, #52]	; 0x34
   231b0:	mul	r1, r5, r0
   231b4:	ldr	r0, [sp, #48]	; 0x30
   231b8:	ldr	r0, [r0]
   231bc:	bl	1a2c <fseek@plt>
   231c0:	add	r9, r5, r9
   231c4:	ldr	r0, [fp, #24]
   231c8:	ldr	r6, [sp, #24]
   231cc:	ldr	r1, [sp, #20]
   231d0:	ldr	r0, [r0]
   231d4:	add	r6, r0, r6
   231d8:	mov	r0, #0
   231dc:	cmp	r6, r1
   231e0:	bge	219bc <ReadDataSlabN+0x84>
   231e4:	ldr	r5, [fp, #16]
   231e8:	ldr	r0, [r5]
   231ec:	cmp	r0, #0
   231f0:	beq	23224 <ReadDataSlabN+0x18ec>
   231f4:	ldr	sl, [sp, #52]	; 0x34
   231f8:	ldr	r8, [sp, #48]	; 0x30
   231fc:	mov	r2, #1
   23200:	mul	r1, r0, sl
   23204:	ldr	r0, [r8]
   23208:	bl	1a2c <fseek@plt>
   2320c:	ldr	r0, [r5]
   23210:	ldr	r2, [sp, #44]	; 0x2c
   23214:	ldr	r7, [fp, #24]
   23218:	add	r9, r0, r9
   2321c:	ldr	r0, [sp, #40]	; 0x28
   23220:	b	23234 <ReadDataSlabN+0x18fc>
   23224:	add	r8, sp, #40	; 0x28
   23228:	ldr	r7, [fp, #24]
   2322c:	ldr	sl, [sp, #52]	; 0x34
   23230:	ldm	r8, {r0, r2, r8}
   23234:	ldr	r3, [r7]
   23238:	add	r1, r0, r6, lsl #2
   2323c:	mov	r0, r8
   23240:	str	r6, [sp, #24]
   23244:	bl	8aa0 <ReadSingleData>
   23248:	ldr	r0, [fp, #12]
   2324c:	ldr	r5, [r5]
   23250:	ldr	r1, [r7]
   23254:	mov	r2, #1
   23258:	ldr	r6, [r0]
   2325c:	sub	r0, r6, r5
   23260:	sub	r0, r0, r1
   23264:	mul	r1, r0, sl
   23268:	ldr	r0, [r8]
   2326c:	bl	1a2c <fseek@plt>
   23270:	add	r0, r6, r9
   23274:	sub	r9, r0, r5
   23278:	ldr	r0, [fp, #8]
   2327c:	cmp	r0, #2
   23280:	blt	231c4 <ReadDataSlabN+0x188c>
   23284:	ldr	sl, [sp, #16]
   23288:	ldr	r3, [sp, #28]
   2328c:	mov	r8, #0
   23290:	add	r6, sp, #56	; 0x38
   23294:	b	232e8 <ReadDataSlabN+0x19b0>
   23298:	add	r0, sp, #56	; 0x38
   2329c:	sub	r1, r7, r5
   232a0:	mov	r2, #1
   232a4:	ldr	r6, [r0, r8]
   232a8:	ldr	r0, [r3, r8]
   232ac:	mla	r0, r0, r6, r1
   232b0:	ldr	r1, [sp, #52]	; 0x34
   232b4:	mul	r1, r0, r1
   232b8:	ldr	r0, [sp, #48]	; 0x30
   232bc:	ldr	r0, [r0]
   232c0:	bl	1a2c <fseek@plt>
   232c4:	ldr	r3, [sp, #28]
   232c8:	add	r1, r7, r9
   232cc:	sub	r1, r1, r5
   232d0:	ldr	r0, [r3, r8]
   232d4:	mla	r9, r0, r6, r1
   232d8:	add	r6, sp, #56	; 0x38
   232dc:	subs	sl, sl, #1
   232e0:	add	r8, r8, #4
   232e4:	beq	231c4 <ReadDataSlabN+0x188c>
   232e8:	ldr	r0, [r4, r8]
   232ec:	ldr	r1, [sp, #36]	; 0x24
   232f0:	add	r0, r0, #1
   232f4:	str	r0, [r4, r8]
   232f8:	ldr	r1, [r1, r8]
   232fc:	sdiv	r2, r0, r1
   23300:	mls	r0, r2, r1, r0
   23304:	cmp	r0, #0
   23308:	bne	231a0 <ReadDataSlabN+0x1868>
   2330c:	mov	r0, #0
   23310:	str	r0, [r4, r8]
   23314:	ldr	r0, [sp, #32]
   23318:	ldr	r7, [r0, r8]
   2331c:	sdiv	r0, r9, r7
   23320:	mls	r5, r0, r7, r9
   23324:	cmp	r5, #0
   23328:	bne	23298 <ReadDataSlabN+0x1960>
   2332c:	ldr	r0, [r3, r8]
   23330:	cmp	r0, #0
   23334:	beq	232dc <ReadDataSlabN+0x19a4>
   23338:	ldr	r1, [sp, #52]	; 0x34
   2333c:	ldr	r5, [r6, r8]
   23340:	mov	r2, #1
   23344:	mul	r0, r0, r1
   23348:	mul	r1, r0, r5
   2334c:	ldr	r0, [sp, #48]	; 0x30
   23350:	ldr	r0, [r0]
   23354:	bl	1a2c <fseek@plt>
   23358:	ldr	r3, [sp, #28]
   2335c:	ldr	r0, [r3, r8]
   23360:	mla	r9, r0, r5, r9
   23364:	b	232dc <ReadDataSlabN+0x19a4>
   23368:	add	r6, sp, #56	; 0x38
   2336c:	ldr	r0, [sp, #52]	; 0x34
   23370:	mov	r2, #1
   23374:	mul	r1, r9, r0
   23378:	ldr	r0, [sp, #48]	; 0x30
   2337c:	ldr	r0, [r0]
   23380:	bl	1a2c <fseek@plt>
   23384:	ldr	r0, [fp, #20]
   23388:	ldr	r0, [r0]
   2338c:	cmp	r0, #1
   23390:	bne	24b98 <ReadDataSlabN+0x3260>
   23394:	ldr	r0, [sp, #20]
   23398:	sub	r1, fp, #72	; 0x48
   2339c:	cmp	r0, #1
   233a0:	ldr	r0, [fp, #16]
   233a4:	blt	25bc4 <ReadDataSlabN+0x428c>
   233a8:	add	r2, sp, #96	; 0x60
   233ac:	add	r3, r0, #4
   233b0:	ldr	r0, [fp, #8]
   233b4:	orr	r4, r2, #4
   233b8:	ldr	r2, [fp, #24]
   233bc:	str	r3, [sp, #28]
   233c0:	sub	r0, r0, #1
   233c4:	add	r2, r2, #4
   233c8:	str	r0, [sp, #16]
   233cc:	orr	r0, r1, #4
   233d0:	str	r2, [sp, #36]	; 0x24
   233d4:	orr	r2, r6, #4
   233d8:	mov	r6, #0
   233dc:	str	r0, [sp, #12]
   233e0:	str	r2, [sp, #32]
   233e4:	b	2342c <ReadDataSlabN+0x1af4>
   233e8:	ldr	r0, [sp, #12]
   233ec:	mov	r2, #1
   233f0:	ldr	r5, [r0, r8]
   233f4:	ldr	r0, [sp, #52]	; 0x34
   233f8:	mul	r1, r5, r0
   233fc:	ldr	r0, [sp, #48]	; 0x30
   23400:	ldr	r0, [r0]
   23404:	bl	1a2c <fseek@plt>
   23408:	add	r9, r5, r9
   2340c:	ldr	r0, [fp, #24]
   23410:	ldr	r6, [sp, #24]
   23414:	ldr	r1, [sp, #20]
   23418:	ldr	r0, [r0]
   2341c:	add	r6, r0, r6
   23420:	mov	r0, #0
   23424:	cmp	r6, r1
   23428:	bge	219bc <ReadDataSlabN+0x84>
   2342c:	ldr	r5, [fp, #16]
   23430:	ldr	r0, [r5]
   23434:	cmp	r0, #0
   23438:	beq	2346c <ReadDataSlabN+0x1b34>
   2343c:	ldr	sl, [sp, #52]	; 0x34
   23440:	ldr	r8, [sp, #48]	; 0x30
   23444:	mov	r2, #1
   23448:	mul	r1, r0, sl
   2344c:	ldr	r0, [r8]
   23450:	bl	1a2c <fseek@plt>
   23454:	ldr	r0, [r5]
   23458:	ldr	r2, [sp, #44]	; 0x2c
   2345c:	ldr	r7, [fp, #24]
   23460:	add	r9, r0, r9
   23464:	ldr	r0, [sp, #40]	; 0x28
   23468:	b	2347c <ReadDataSlabN+0x1b44>
   2346c:	add	r8, sp, #40	; 0x28
   23470:	ldr	r7, [fp, #24]
   23474:	ldr	sl, [sp, #52]	; 0x34
   23478:	ldm	r8, {r0, r2, r8}
   2347c:	ldr	r3, [r7]
   23480:	add	r1, r0, r6, lsl #1
   23484:	mov	r0, r8
   23488:	str	r6, [sp, #24]
   2348c:	bl	16fe8 <ReadInt16Data>
   23490:	ldr	r0, [fp, #12]
   23494:	ldr	r5, [r5]
   23498:	ldr	r1, [r7]
   2349c:	mov	r2, #1
   234a0:	ldr	r6, [r0]
   234a4:	sub	r0, r6, r5
   234a8:	sub	r0, r0, r1
   234ac:	mul	r1, r0, sl
   234b0:	ldr	r0, [r8]
   234b4:	bl	1a2c <fseek@plt>
   234b8:	add	r0, r6, r9
   234bc:	sub	r9, r0, r5
   234c0:	ldr	r0, [fp, #8]
   234c4:	cmp	r0, #2
   234c8:	blt	2340c <ReadDataSlabN+0x1ad4>
   234cc:	ldr	sl, [sp, #16]
   234d0:	ldr	r3, [sp, #28]
   234d4:	mov	r8, #0
   234d8:	add	r6, sp, #56	; 0x38
   234dc:	b	23530 <ReadDataSlabN+0x1bf8>
   234e0:	add	r0, sp, #56	; 0x38
   234e4:	sub	r1, r7, r5
   234e8:	mov	r2, #1
   234ec:	ldr	r6, [r0, r8]
   234f0:	ldr	r0, [r3, r8]
   234f4:	mla	r0, r0, r6, r1
   234f8:	ldr	r1, [sp, #52]	; 0x34
   234fc:	mul	r1, r0, r1
   23500:	ldr	r0, [sp, #48]	; 0x30
   23504:	ldr	r0, [r0]
   23508:	bl	1a2c <fseek@plt>
   2350c:	ldr	r3, [sp, #28]
   23510:	add	r1, r7, r9
   23514:	sub	r1, r1, r5
   23518:	ldr	r0, [r3, r8]
   2351c:	mla	r9, r0, r6, r1
   23520:	add	r6, sp, #56	; 0x38
   23524:	subs	sl, sl, #1
   23528:	add	r8, r8, #4
   2352c:	beq	2340c <ReadDataSlabN+0x1ad4>
   23530:	ldr	r0, [r4, r8]
   23534:	ldr	r1, [sp, #36]	; 0x24
   23538:	add	r0, r0, #1
   2353c:	str	r0, [r4, r8]
   23540:	ldr	r1, [r1, r8]
   23544:	sdiv	r2, r0, r1
   23548:	mls	r0, r2, r1, r0
   2354c:	cmp	r0, #0
   23550:	bne	233e8 <ReadDataSlabN+0x1ab0>
   23554:	mov	r0, #0
   23558:	str	r0, [r4, r8]
   2355c:	ldr	r0, [sp, #32]
   23560:	ldr	r7, [r0, r8]
   23564:	sdiv	r0, r9, r7
   23568:	mls	r5, r0, r7, r9
   2356c:	cmp	r5, #0
   23570:	bne	234e0 <ReadDataSlabN+0x1ba8>
   23574:	ldr	r0, [r3, r8]
   23578:	cmp	r0, #0
   2357c:	beq	23524 <ReadDataSlabN+0x1bec>
   23580:	ldr	r1, [sp, #52]	; 0x34
   23584:	ldr	r5, [r6, r8]
   23588:	mov	r2, #1
   2358c:	mul	r0, r0, r1
   23590:	mul	r1, r0, r5
   23594:	ldr	r0, [sp, #48]	; 0x30
   23598:	ldr	r0, [r0]
   2359c:	bl	1a2c <fseek@plt>
   235a0:	ldr	r3, [sp, #28]
   235a4:	ldr	r0, [r3, r8]
   235a8:	mla	r9, r0, r5, r9
   235ac:	b	23524 <ReadDataSlabN+0x1bec>
   235b0:	add	r6, sp, #56	; 0x38
   235b4:	ldr	r0, [sp, #52]	; 0x34
   235b8:	mov	r2, #1
   235bc:	mul	r1, r9, r0
   235c0:	ldr	r0, [sp, #48]	; 0x30
   235c4:	ldr	r0, [r0]
   235c8:	bl	1a2c <fseek@plt>
   235cc:	ldr	r0, [fp, #20]
   235d0:	ldr	r0, [r0]
   235d4:	cmp	r0, #1
   235d8:	bne	24e4c <ReadDataSlabN+0x3514>
   235dc:	ldr	r0, [sp, #20]
   235e0:	sub	r1, fp, #72	; 0x48
   235e4:	cmp	r0, #1
   235e8:	ldr	r0, [fp, #16]
   235ec:	blt	25bc4 <ReadDataSlabN+0x428c>
   235f0:	add	r2, sp, #96	; 0x60
   235f4:	add	r3, r0, #4
   235f8:	ldr	r0, [fp, #8]
   235fc:	orr	r4, r2, #4
   23600:	ldr	r2, [fp, #24]
   23604:	str	r3, [sp, #28]
   23608:	sub	r0, r0, #1
   2360c:	add	r2, r2, #4
   23610:	str	r0, [sp, #16]
   23614:	orr	r0, r1, #4
   23618:	str	r2, [sp, #36]	; 0x24
   2361c:	orr	r2, r6, #4
   23620:	mov	r6, #0
   23624:	str	r0, [sp, #12]
   23628:	str	r2, [sp, #32]
   2362c:	b	23674 <ReadDataSlabN+0x1d3c>
   23630:	ldr	r0, [sp, #12]
   23634:	mov	r2, #1
   23638:	ldr	r5, [r0, r8]
   2363c:	ldr	r0, [sp, #52]	; 0x34
   23640:	mul	r1, r5, r0
   23644:	ldr	r0, [sp, #48]	; 0x30
   23648:	ldr	r0, [r0]
   2364c:	bl	1a2c <fseek@plt>
   23650:	add	r9, r5, r9
   23654:	ldr	r0, [fp, #24]
   23658:	ldr	r6, [sp, #24]
   2365c:	ldr	r1, [sp, #20]
   23660:	ldr	r0, [r0]
   23664:	add	r6, r0, r6
   23668:	mov	r0, #0
   2366c:	cmp	r6, r1
   23670:	bge	219bc <ReadDataSlabN+0x84>
   23674:	ldr	r5, [fp, #16]
   23678:	ldr	r0, [r5]
   2367c:	cmp	r0, #0
   23680:	beq	236b4 <ReadDataSlabN+0x1d7c>
   23684:	ldr	sl, [sp, #52]	; 0x34
   23688:	ldr	r8, [sp, #48]	; 0x30
   2368c:	mov	r2, #1
   23690:	mul	r1, r0, sl
   23694:	ldr	r0, [r8]
   23698:	bl	1a2c <fseek@plt>
   2369c:	ldr	r0, [r5]
   236a0:	ldr	r2, [sp, #44]	; 0x2c
   236a4:	ldr	r7, [fp, #24]
   236a8:	add	r9, r0, r9
   236ac:	ldr	r0, [sp, #40]	; 0x28
   236b0:	b	236c4 <ReadDataSlabN+0x1d8c>
   236b4:	add	r8, sp, #40	; 0x28
   236b8:	ldr	r7, [fp, #24]
   236bc:	ldr	sl, [sp, #52]	; 0x34
   236c0:	ldm	r8, {r0, r2, r8}
   236c4:	ldr	r3, [r7]
   236c8:	add	r1, r0, r6, lsl #1
   236cc:	mov	r0, r8
   236d0:	str	r6, [sp, #24]
   236d4:	bl	19a24 <ReadUInt16Data>
   236d8:	ldr	r0, [fp, #12]
   236dc:	ldr	r5, [r5]
   236e0:	ldr	r1, [r7]
   236e4:	mov	r2, #1
   236e8:	ldr	r6, [r0]
   236ec:	sub	r0, r6, r5
   236f0:	sub	r0, r0, r1
   236f4:	mul	r1, r0, sl
   236f8:	ldr	r0, [r8]
   236fc:	bl	1a2c <fseek@plt>
   23700:	add	r0, r6, r9
   23704:	sub	r9, r0, r5
   23708:	ldr	r0, [fp, #8]
   2370c:	cmp	r0, #2
   23710:	blt	23654 <ReadDataSlabN+0x1d1c>
   23714:	ldr	sl, [sp, #16]
   23718:	ldr	r3, [sp, #28]
   2371c:	mov	r8, #0
   23720:	add	r6, sp, #56	; 0x38
   23724:	b	23778 <ReadDataSlabN+0x1e40>
   23728:	add	r0, sp, #56	; 0x38
   2372c:	sub	r1, r7, r5
   23730:	mov	r2, #1
   23734:	ldr	r6, [r0, r8]
   23738:	ldr	r0, [r3, r8]
   2373c:	mla	r0, r0, r6, r1
   23740:	ldr	r1, [sp, #52]	; 0x34
   23744:	mul	r1, r0, r1
   23748:	ldr	r0, [sp, #48]	; 0x30
   2374c:	ldr	r0, [r0]
   23750:	bl	1a2c <fseek@plt>
   23754:	ldr	r3, [sp, #28]
   23758:	add	r1, r7, r9
   2375c:	sub	r1, r1, r5
   23760:	ldr	r0, [r3, r8]
   23764:	mla	r9, r0, r6, r1
   23768:	add	r6, sp, #56	; 0x38
   2376c:	subs	sl, sl, #1
   23770:	add	r8, r8, #4
   23774:	beq	23654 <ReadDataSlabN+0x1d1c>
   23778:	ldr	r0, [r4, r8]
   2377c:	ldr	r1, [sp, #36]	; 0x24
   23780:	add	r0, r0, #1
   23784:	str	r0, [r4, r8]
   23788:	ldr	r1, [r1, r8]
   2378c:	sdiv	r2, r0, r1
   23790:	mls	r0, r2, r1, r0
   23794:	cmp	r0, #0
   23798:	bne	23630 <ReadDataSlabN+0x1cf8>
   2379c:	mov	r0, #0
   237a0:	str	r0, [r4, r8]
   237a4:	ldr	r0, [sp, #32]
   237a8:	ldr	r7, [r0, r8]
   237ac:	sdiv	r0, r9, r7
   237b0:	mls	r5, r0, r7, r9
   237b4:	cmp	r5, #0
   237b8:	bne	23728 <ReadDataSlabN+0x1df0>
   237bc:	ldr	r0, [r3, r8]
   237c0:	cmp	r0, #0
   237c4:	beq	2376c <ReadDataSlabN+0x1e34>
   237c8:	ldr	r1, [sp, #52]	; 0x34
   237cc:	ldr	r5, [r6, r8]
   237d0:	mov	r2, #1
   237d4:	mul	r0, r0, r1
   237d8:	mul	r1, r0, r5
   237dc:	ldr	r0, [sp, #48]	; 0x30
   237e0:	ldr	r0, [r0]
   237e4:	bl	1a2c <fseek@plt>
   237e8:	ldr	r3, [sp, #28]
   237ec:	ldr	r0, [r3, r8]
   237f0:	mla	r9, r0, r5, r9
   237f4:	b	2376c <ReadDataSlabN+0x1e34>
   237f8:	add	r6, sp, #56	; 0x38
   237fc:	ldr	r0, [sp, #52]	; 0x34
   23800:	mov	r2, #1
   23804:	mul	r1, r9, r0
   23808:	ldr	r0, [sp, #48]	; 0x30
   2380c:	ldr	r0, [r0]
   23810:	bl	1a2c <fseek@plt>
   23814:	ldr	r0, [fp, #20]
   23818:	ldr	r0, [r0]
   2381c:	cmp	r0, #1
   23820:	bne	25100 <ReadDataSlabN+0x37c8>
   23824:	ldr	r0, [sp, #20]
   23828:	sub	r1, fp, #72	; 0x48
   2382c:	cmp	r0, #1
   23830:	ldr	r0, [fp, #16]
   23834:	blt	25bc4 <ReadDataSlabN+0x428c>
   23838:	add	r2, sp, #96	; 0x60
   2383c:	add	r3, r0, #4
   23840:	ldr	r0, [fp, #8]
   23844:	orr	r4, r2, #4
   23848:	ldr	r2, [fp, #24]
   2384c:	str	r3, [sp, #28]
   23850:	sub	r0, r0, #1
   23854:	add	r2, r2, #4
   23858:	str	r0, [sp, #16]
   2385c:	orr	r0, r1, #4
   23860:	str	r2, [sp, #36]	; 0x24
   23864:	orr	r2, r6, #4
   23868:	mov	r6, #0
   2386c:	str	r0, [sp, #12]
   23870:	str	r2, [sp, #32]
   23874:	b	238bc <ReadDataSlabN+0x1f84>
   23878:	ldr	r0, [sp, #12]
   2387c:	mov	r2, #1
   23880:	ldr	r5, [r0, r8]
   23884:	ldr	r0, [sp, #52]	; 0x34
   23888:	mul	r1, r5, r0
   2388c:	ldr	r0, [sp, #48]	; 0x30
   23890:	ldr	r0, [r0]
   23894:	bl	1a2c <fseek@plt>
   23898:	add	r9, r5, r9
   2389c:	ldr	r0, [fp, #24]
   238a0:	ldr	r6, [sp, #24]
   238a4:	ldr	r1, [sp, #20]
   238a8:	ldr	r0, [r0]
   238ac:	add	r6, r0, r6
   238b0:	mov	r0, #0
   238b4:	cmp	r6, r1
   238b8:	bge	219bc <ReadDataSlabN+0x84>
   238bc:	ldr	r5, [fp, #16]
   238c0:	ldr	r0, [r5]
   238c4:	cmp	r0, #0
   238c8:	beq	238fc <ReadDataSlabN+0x1fc4>
   238cc:	ldr	sl, [sp, #52]	; 0x34
   238d0:	ldr	r8, [sp, #48]	; 0x30
   238d4:	mov	r2, #1
   238d8:	mul	r1, r0, sl
   238dc:	ldr	r0, [r8]
   238e0:	bl	1a2c <fseek@plt>
   238e4:	ldr	r0, [r5]
   238e8:	ldr	r2, [sp, #44]	; 0x2c
   238ec:	ldr	r7, [fp, #24]
   238f0:	add	r9, r0, r9
   238f4:	ldr	r0, [sp, #40]	; 0x28
   238f8:	b	2390c <ReadDataSlabN+0x1fd4>
   238fc:	add	r8, sp, #40	; 0x28
   23900:	ldr	r7, [fp, #24]
   23904:	ldr	sl, [sp, #52]	; 0x34
   23908:	ldm	r8, {r0, r2, r8}
   2390c:	ldr	r3, [r7]
   23910:	add	r1, r0, r6, lsl #2
   23914:	mov	r0, r8
   23918:	str	r6, [sp, #24]
   2391c:	bl	11690 <ReadInt32Data>
   23920:	ldr	r0, [fp, #12]
   23924:	ldr	r5, [r5]
   23928:	ldr	r1, [r7]
   2392c:	mov	r2, #1
   23930:	ldr	r6, [r0]
   23934:	sub	r0, r6, r5
   23938:	sub	r0, r0, r1
   2393c:	mul	r1, r0, sl
   23940:	ldr	r0, [r8]
   23944:	bl	1a2c <fseek@plt>
   23948:	add	r0, r6, r9
   2394c:	sub	r9, r0, r5
   23950:	ldr	r0, [fp, #8]
   23954:	cmp	r0, #2
   23958:	blt	2389c <ReadDataSlabN+0x1f64>
   2395c:	ldr	sl, [sp, #16]
   23960:	ldr	r3, [sp, #28]
   23964:	mov	r8, #0
   23968:	add	r6, sp, #56	; 0x38
   2396c:	b	239c0 <ReadDataSlabN+0x2088>
   23970:	add	r0, sp, #56	; 0x38
   23974:	sub	r1, r7, r5
   23978:	mov	r2, #1
   2397c:	ldr	r6, [r0, r8]
   23980:	ldr	r0, [r3, r8]
   23984:	mla	r0, r0, r6, r1
   23988:	ldr	r1, [sp, #52]	; 0x34
   2398c:	mul	r1, r0, r1
   23990:	ldr	r0, [sp, #48]	; 0x30
   23994:	ldr	r0, [r0]
   23998:	bl	1a2c <fseek@plt>
   2399c:	ldr	r3, [sp, #28]
   239a0:	add	r1, r7, r9
   239a4:	sub	r1, r1, r5
   239a8:	ldr	r0, [r3, r8]
   239ac:	mla	r9, r0, r6, r1
   239b0:	add	r6, sp, #56	; 0x38
   239b4:	subs	sl, sl, #1
   239b8:	add	r8, r8, #4
   239bc:	beq	2389c <ReadDataSlabN+0x1f64>
   239c0:	ldr	r0, [r4, r8]
   239c4:	ldr	r1, [sp, #36]	; 0x24
   239c8:	add	r0, r0, #1
   239cc:	str	r0, [r4, r8]
   239d0:	ldr	r1, [r1, r8]
   239d4:	sdiv	r2, r0, r1
   239d8:	mls	r0, r2, r1, r0
   239dc:	cmp	r0, #0
   239e0:	bne	23878 <ReadDataSlabN+0x1f40>
   239e4:	mov	r0, #0
   239e8:	str	r0, [r4, r8]
   239ec:	ldr	r0, [sp, #32]
   239f0:	ldr	r7, [r0, r8]
   239f4:	sdiv	r0, r9, r7
   239f8:	mls	r5, r0, r7, r9
   239fc:	cmp	r5, #0
   23a00:	bne	23970 <ReadDataSlabN+0x2038>
   23a04:	ldr	r0, [r3, r8]
   23a08:	cmp	r0, #0
   23a0c:	beq	239b4 <ReadDataSlabN+0x207c>
   23a10:	ldr	r1, [sp, #52]	; 0x34
   23a14:	ldr	r5, [r6, r8]
   23a18:	mov	r2, #1
   23a1c:	mul	r0, r0, r1
   23a20:	mul	r1, r0, r5
   23a24:	ldr	r0, [sp, #48]	; 0x30
   23a28:	ldr	r0, [r0]
   23a2c:	bl	1a2c <fseek@plt>
   23a30:	ldr	r3, [sp, #28]
   23a34:	ldr	r0, [r3, r8]
   23a38:	mla	r9, r0, r5, r9
   23a3c:	b	239b4 <ReadDataSlabN+0x207c>
   23a40:	add	r6, sp, #56	; 0x38
   23a44:	ldr	r0, [sp, #52]	; 0x34
   23a48:	mov	r2, #1
   23a4c:	mul	r1, r9, r0
   23a50:	ldr	r0, [sp, #48]	; 0x30
   23a54:	ldr	r0, [r0]
   23a58:	bl	1a2c <fseek@plt>
   23a5c:	ldr	r0, [fp, #20]
   23a60:	ldr	r0, [r0]
   23a64:	cmp	r0, #1
   23a68:	bne	253b4 <ReadDataSlabN+0x3a7c>
   23a6c:	ldr	r0, [sp, #20]
   23a70:	sub	r1, fp, #72	; 0x48
   23a74:	cmp	r0, #1
   23a78:	ldr	r0, [fp, #16]
   23a7c:	blt	25bc4 <ReadDataSlabN+0x428c>
   23a80:	add	r2, sp, #96	; 0x60
   23a84:	add	r3, r0, #4
   23a88:	ldr	r0, [fp, #8]
   23a8c:	orr	r4, r2, #4
   23a90:	ldr	r2, [fp, #24]
   23a94:	str	r3, [sp, #28]
   23a98:	sub	r0, r0, #1
   23a9c:	add	r2, r2, #4
   23aa0:	str	r0, [sp, #16]
   23aa4:	orr	r0, r1, #4
   23aa8:	str	r2, [sp, #36]	; 0x24
   23aac:	orr	r2, r6, #4
   23ab0:	mov	r6, #0
   23ab4:	str	r0, [sp, #12]
   23ab8:	str	r2, [sp, #32]
   23abc:	b	23b04 <ReadDataSlabN+0x21cc>
   23ac0:	ldr	r0, [sp, #12]
   23ac4:	mov	r2, #1
   23ac8:	ldr	r5, [r0, r8]
   23acc:	ldr	r0, [sp, #52]	; 0x34
   23ad0:	mul	r1, r5, r0
   23ad4:	ldr	r0, [sp, #48]	; 0x30
   23ad8:	ldr	r0, [r0]
   23adc:	bl	1a2c <fseek@plt>
   23ae0:	add	r9, r5, r9
   23ae4:	ldr	r0, [fp, #24]
   23ae8:	ldr	r6, [sp, #24]
   23aec:	ldr	r1, [sp, #20]
   23af0:	ldr	r0, [r0]
   23af4:	add	r6, r0, r6
   23af8:	mov	r0, #0
   23afc:	cmp	r6, r1
   23b00:	bge	219bc <ReadDataSlabN+0x84>
   23b04:	ldr	r5, [fp, #16]
   23b08:	ldr	r0, [r5]
   23b0c:	cmp	r0, #0
   23b10:	beq	23b44 <ReadDataSlabN+0x220c>
   23b14:	ldr	sl, [sp, #52]	; 0x34
   23b18:	ldr	r8, [sp, #48]	; 0x30
   23b1c:	mov	r2, #1
   23b20:	mul	r1, r0, sl
   23b24:	ldr	r0, [r8]
   23b28:	bl	1a2c <fseek@plt>
   23b2c:	ldr	r0, [r5]
   23b30:	ldr	r2, [sp, #44]	; 0x2c
   23b34:	ldr	r7, [fp, #24]
   23b38:	add	r9, r0, r9
   23b3c:	ldr	r0, [sp, #40]	; 0x28
   23b40:	b	23b54 <ReadDataSlabN+0x221c>
   23b44:	add	r8, sp, #40	; 0x28
   23b48:	ldr	r7, [fp, #24]
   23b4c:	ldr	sl, [sp, #52]	; 0x34
   23b50:	ldm	r8, {r0, r2, r8}
   23b54:	ldr	r3, [r7]
   23b58:	add	r1, r0, r6, lsl #2
   23b5c:	mov	r0, r8
   23b60:	str	r6, [sp, #24]
   23b64:	bl	1433c <ReadUInt32Data>
   23b68:	ldr	r0, [fp, #12]
   23b6c:	ldr	r5, [r5]
   23b70:	ldr	r1, [r7]
   23b74:	mov	r2, #1
   23b78:	ldr	r6, [r0]
   23b7c:	sub	r0, r6, r5
   23b80:	sub	r0, r0, r1
   23b84:	mul	r1, r0, sl
   23b88:	ldr	r0, [r8]
   23b8c:	bl	1a2c <fseek@plt>
   23b90:	add	r0, r6, r9
   23b94:	sub	r9, r0, r5
   23b98:	ldr	r0, [fp, #8]
   23b9c:	cmp	r0, #2
   23ba0:	blt	23ae4 <ReadDataSlabN+0x21ac>
   23ba4:	ldr	sl, [sp, #16]
   23ba8:	ldr	r3, [sp, #28]
   23bac:	mov	r8, #0
   23bb0:	add	r6, sp, #56	; 0x38
   23bb4:	b	23c08 <ReadDataSlabN+0x22d0>
   23bb8:	add	r0, sp, #56	; 0x38
   23bbc:	sub	r1, r7, r5
   23bc0:	mov	r2, #1
   23bc4:	ldr	r6, [r0, r8]
   23bc8:	ldr	r0, [r3, r8]
   23bcc:	mla	r0, r0, r6, r1
   23bd0:	ldr	r1, [sp, #52]	; 0x34
   23bd4:	mul	r1, r0, r1
   23bd8:	ldr	r0, [sp, #48]	; 0x30
   23bdc:	ldr	r0, [r0]
   23be0:	bl	1a2c <fseek@plt>
   23be4:	ldr	r3, [sp, #28]
   23be8:	add	r1, r7, r9
   23bec:	sub	r1, r1, r5
   23bf0:	ldr	r0, [r3, r8]
   23bf4:	mla	r9, r0, r6, r1
   23bf8:	add	r6, sp, #56	; 0x38
   23bfc:	subs	sl, sl, #1
   23c00:	add	r8, r8, #4
   23c04:	beq	23ae4 <ReadDataSlabN+0x21ac>
   23c08:	ldr	r0, [r4, r8]
   23c0c:	ldr	r1, [sp, #36]	; 0x24
   23c10:	add	r0, r0, #1
   23c14:	str	r0, [r4, r8]
   23c18:	ldr	r1, [r1, r8]
   23c1c:	sdiv	r2, r0, r1
   23c20:	mls	r0, r2, r1, r0
   23c24:	cmp	r0, #0
   23c28:	bne	23ac0 <ReadDataSlabN+0x2188>
   23c2c:	mov	r0, #0
   23c30:	str	r0, [r4, r8]
   23c34:	ldr	r0, [sp, #32]
   23c38:	ldr	r7, [r0, r8]
   23c3c:	sdiv	r0, r9, r7
   23c40:	mls	r5, r0, r7, r9
   23c44:	cmp	r5, #0
   23c48:	bne	23bb8 <ReadDataSlabN+0x2280>
   23c4c:	ldr	r0, [r3, r8]
   23c50:	cmp	r0, #0
   23c54:	beq	23bfc <ReadDataSlabN+0x22c4>
   23c58:	ldr	r1, [sp, #52]	; 0x34
   23c5c:	ldr	r5, [r6, r8]
   23c60:	mov	r2, #1
   23c64:	mul	r0, r0, r1
   23c68:	mul	r1, r0, r5
   23c6c:	ldr	r0, [sp, #48]	; 0x30
   23c70:	ldr	r0, [r0]
   23c74:	bl	1a2c <fseek@plt>
   23c78:	ldr	r3, [sp, #28]
   23c7c:	ldr	r0, [r3, r8]
   23c80:	mla	r9, r0, r5, r9
   23c84:	b	23bfc <ReadDataSlabN+0x22c4>
   23c88:	add	r6, sp, #56	; 0x38
   23c8c:	mov	r8, #0
   23c90:	mov	ip, r6
   23c94:	ldr	r0, [sp, #52]	; 0x34
   23c98:	mov	r2, #1
   23c9c:	mov	r4, ip
   23ca0:	mul	r1, r8, r0
   23ca4:	ldr	r0, [sp, #48]	; 0x30
   23ca8:	ldr	r0, [r0]
   23cac:	bl	1a2c <fseek@plt>
   23cb0:	ldr	r0, [fp, #20]
   23cb4:	ldr	r0, [r0]
   23cb8:	cmp	r0, #1
   23cbc:	bne	25668 <ReadDataSlabN+0x3d30>
   23cc0:	ldr	r0, [sp, #20]
   23cc4:	sub	r1, fp, #72	; 0x48
   23cc8:	cmp	r0, #1
   23ccc:	ldr	r0, [fp, #16]
   23cd0:	blt	25bc4 <ReadDataSlabN+0x428c>
   23cd4:	add	r2, sp, #96	; 0x60
   23cd8:	add	r0, r0, #4
   23cdc:	mov	r6, #0
   23ce0:	orr	r9, r2, #4
   23ce4:	ldr	r2, [fp, #24]
   23ce8:	str	r0, [sp, #28]
   23cec:	ldr	r0, [fp, #8]
   23cf0:	add	r2, r2, #4
   23cf4:	sub	r0, r0, #1
   23cf8:	str	r2, [sp, #36]	; 0x24
   23cfc:	orr	r2, r4, #4
   23d00:	str	r0, [sp, #16]
   23d04:	orr	r0, r1, #4
   23d08:	mov	r4, r8
   23d0c:	str	r2, [sp, #32]
   23d10:	str	r0, [sp, #12]
   23d14:	b	23d5c <ReadDataSlabN+0x2424>
   23d18:	ldr	r0, [sp, #12]
   23d1c:	mov	r2, #1
   23d20:	ldr	r5, [r0, r8]
   23d24:	ldr	r0, [sp, #52]	; 0x34
   23d28:	mul	r1, r5, r0
   23d2c:	ldr	r0, [sp, #48]	; 0x30
   23d30:	ldr	r0, [r0]
   23d34:	bl	1a2c <fseek@plt>
   23d38:	add	r4, r5, r4
   23d3c:	ldr	r0, [fp, #24]
   23d40:	ldr	r6, [sp, #24]
   23d44:	ldr	r1, [sp, #20]
   23d48:	ldr	r0, [r0]
   23d4c:	add	r6, r0, r6
   23d50:	mov	r0, #0
   23d54:	cmp	r6, r1
   23d58:	bge	219bc <ReadDataSlabN+0x84>
   23d5c:	ldr	r5, [fp, #16]
   23d60:	ldr	r0, [r5]
   23d64:	cmp	r0, #0
   23d68:	beq	23d9c <ReadDataSlabN+0x2464>
   23d6c:	ldr	sl, [sp, #52]	; 0x34
   23d70:	ldr	r8, [sp, #48]	; 0x30
   23d74:	mov	r2, #1
   23d78:	mul	r1, r0, sl
   23d7c:	ldr	r0, [r8]
   23d80:	bl	1a2c <fseek@plt>
   23d84:	ldr	r0, [r5]
   23d88:	ldr	r2, [sp, #44]	; 0x2c
   23d8c:	ldr	r7, [fp, #24]
   23d90:	add	r4, r0, r4
   23d94:	ldr	r0, [sp, #40]	; 0x28
   23d98:	b	23dac <ReadDataSlabN+0x2474>
   23d9c:	add	r8, sp, #40	; 0x28
   23da0:	ldr	r7, [fp, #24]
   23da4:	ldr	sl, [sp, #52]	; 0x34
   23da8:	ldm	r8, {r0, r2, r8}
   23dac:	ldr	r3, [r7]
   23db0:	add	r1, r0, r6, lsl #3
   23db4:	mov	r0, r8
   23db8:	str	r6, [sp, #24]
   23dbc:	bl	bc30 <ReadInt64Data>
   23dc0:	ldr	r0, [fp, #12]
   23dc4:	ldr	r5, [r5]
   23dc8:	ldr	r1, [r7]
   23dcc:	mov	r2, #1
   23dd0:	ldr	r6, [r0]
   23dd4:	sub	r0, r6, r5
   23dd8:	sub	r0, r0, r1
   23ddc:	mul	r1, r0, sl
   23de0:	ldr	r0, [r8]
   23de4:	bl	1a2c <fseek@plt>
   23de8:	add	r0, r6, r4
   23dec:	sub	r4, r0, r5
   23df0:	ldr	r0, [fp, #8]
   23df4:	cmp	r0, #2
   23df8:	blt	23d3c <ReadDataSlabN+0x2404>
   23dfc:	ldr	sl, [sp, #16]
   23e00:	ldr	r3, [sp, #28]
   23e04:	mov	r8, #0
   23e08:	add	r6, sp, #56	; 0x38
   23e0c:	b	23e60 <ReadDataSlabN+0x2528>
   23e10:	add	r0, sp, #56	; 0x38
   23e14:	sub	r1, r7, r5
   23e18:	mov	r2, #1
   23e1c:	ldr	r6, [r0, r8]
   23e20:	ldr	r0, [r3, r8]
   23e24:	mla	r0, r0, r6, r1
   23e28:	ldr	r1, [sp, #52]	; 0x34
   23e2c:	mul	r1, r0, r1
   23e30:	ldr	r0, [sp, #48]	; 0x30
   23e34:	ldr	r0, [r0]
   23e38:	bl	1a2c <fseek@plt>
   23e3c:	ldr	r3, [sp, #28]
   23e40:	add	r1, r7, r4
   23e44:	sub	r1, r1, r5
   23e48:	ldr	r0, [r3, r8]
   23e4c:	mla	r4, r0, r6, r1
   23e50:	add	r6, sp, #56	; 0x38
   23e54:	subs	sl, sl, #1
   23e58:	add	r8, r8, #4
   23e5c:	beq	23d3c <ReadDataSlabN+0x2404>
   23e60:	ldr	r0, [r9, r8]
   23e64:	ldr	r1, [sp, #36]	; 0x24
   23e68:	add	r0, r0, #1
   23e6c:	str	r0, [r9, r8]
   23e70:	ldr	r1, [r1, r8]
   23e74:	sdiv	r2, r0, r1
   23e78:	mls	r0, r2, r1, r0
   23e7c:	cmp	r0, #0
   23e80:	bne	23d18 <ReadDataSlabN+0x23e0>
   23e84:	mov	r0, #0
   23e88:	str	r0, [r9, r8]
   23e8c:	ldr	r0, [sp, #32]
   23e90:	ldr	r7, [r0, r8]
   23e94:	sdiv	r0, r4, r7
   23e98:	mls	r5, r0, r7, r4
   23e9c:	cmp	r5, #0
   23ea0:	bne	23e10 <ReadDataSlabN+0x24d8>
   23ea4:	ldr	r0, [r3, r8]
   23ea8:	cmp	r0, #0
   23eac:	beq	23e54 <ReadDataSlabN+0x251c>
   23eb0:	ldr	r1, [sp, #52]	; 0x34
   23eb4:	ldr	r5, [r6, r8]
   23eb8:	mov	r2, #1
   23ebc:	mul	r0, r0, r1
   23ec0:	mul	r1, r0, r5
   23ec4:	ldr	r0, [sp, #48]	; 0x30
   23ec8:	ldr	r0, [r0]
   23ecc:	bl	1a2c <fseek@plt>
   23ed0:	ldr	r3, [sp, #28]
   23ed4:	ldr	r0, [r3, r8]
   23ed8:	mla	r4, r0, r5, r4
   23edc:	b	23e54 <ReadDataSlabN+0x251c>
   23ee0:	add	r6, sp, #56	; 0x38
   23ee4:	ldr	r0, [sp, #52]	; 0x34
   23ee8:	mov	r2, #1
   23eec:	mul	r1, r9, r0
   23ef0:	ldr	r0, [sp, #48]	; 0x30
   23ef4:	ldr	r0, [r0]
   23ef8:	bl	1a2c <fseek@plt>
   23efc:	ldr	r0, [fp, #20]
   23f00:	ldr	r0, [r0]
   23f04:	cmp	r0, #1
   23f08:	bne	25910 <ReadDataSlabN+0x3fd8>
   23f0c:	ldr	r0, [sp, #20]
   23f10:	sub	r1, fp, #72	; 0x48
   23f14:	cmp	r0, #1
   23f18:	ldr	r0, [fp, #16]
   23f1c:	blt	25bc4 <ReadDataSlabN+0x428c>
   23f20:	add	r2, sp, #96	; 0x60
   23f24:	add	r3, r0, #4
   23f28:	ldr	r0, [fp, #8]
   23f2c:	orr	r4, r2, #4
   23f30:	ldr	r2, [fp, #24]
   23f34:	str	r3, [sp, #28]
   23f38:	sub	r0, r0, #1
   23f3c:	add	r2, r2, #4
   23f40:	str	r0, [sp, #16]
   23f44:	orr	r0, r1, #4
   23f48:	str	r2, [sp, #36]	; 0x24
   23f4c:	orr	r2, r6, #4
   23f50:	mov	r6, #0
   23f54:	str	r0, [sp, #12]
   23f58:	str	r2, [sp, #32]
   23f5c:	b	23fa4 <ReadDataSlabN+0x266c>
   23f60:	ldr	r0, [sp, #12]
   23f64:	mov	r2, #1
   23f68:	ldr	r5, [r0, r8]
   23f6c:	ldr	r0, [sp, #52]	; 0x34
   23f70:	mul	r1, r5, r0
   23f74:	ldr	r0, [sp, #48]	; 0x30
   23f78:	ldr	r0, [r0]
   23f7c:	bl	1a2c <fseek@plt>
   23f80:	add	r9, r5, r9
   23f84:	ldr	r0, [fp, #24]
   23f88:	ldr	r6, [sp, #24]
   23f8c:	ldr	r1, [sp, #20]
   23f90:	ldr	r0, [r0]
   23f94:	add	r6, r0, r6
   23f98:	mov	r0, #0
   23f9c:	cmp	r6, r1
   23fa0:	bge	219bc <ReadDataSlabN+0x84>
   23fa4:	ldr	r5, [fp, #16]
   23fa8:	ldr	r0, [r5]
   23fac:	cmp	r0, #0
   23fb0:	beq	23fe4 <ReadDataSlabN+0x26ac>
   23fb4:	ldr	sl, [sp, #52]	; 0x34
   23fb8:	ldr	r8, [sp, #48]	; 0x30
   23fbc:	mov	r2, #1
   23fc0:	mul	r1, r0, sl
   23fc4:	ldr	r0, [r8]
   23fc8:	bl	1a2c <fseek@plt>
   23fcc:	ldr	r0, [r5]
   23fd0:	ldr	r2, [sp, #44]	; 0x2c
   23fd4:	ldr	r7, [fp, #24]
   23fd8:	add	r9, r0, r9
   23fdc:	ldr	r0, [sp, #40]	; 0x28
   23fe0:	b	23ff4 <ReadDataSlabN+0x26bc>
   23fe4:	add	r8, sp, #40	; 0x28
   23fe8:	ldr	r7, [fp, #24]
   23fec:	ldr	sl, [sp, #52]	; 0x34
   23ff0:	ldm	r8, {r0, r2, r8}
   23ff4:	ldr	r3, [r7]
   23ff8:	add	r1, r0, r6, lsl #3
   23ffc:	mov	r0, r8
   24000:	str	r6, [sp, #24]
   24004:	bl	e960 <ReadUInt64Data>
   24008:	ldr	r0, [fp, #12]
   2400c:	ldr	r5, [r5]
   24010:	ldr	r1, [r7]
   24014:	mov	r2, #1
   24018:	ldr	r6, [r0]
   2401c:	sub	r0, r6, r5
   24020:	sub	r0, r0, r1
   24024:	mul	r1, r0, sl
   24028:	ldr	r0, [r8]
   2402c:	bl	1a2c <fseek@plt>
   24030:	add	r0, r6, r9
   24034:	sub	r9, r0, r5
   24038:	ldr	r0, [fp, #8]
   2403c:	cmp	r0, #2
   24040:	blt	23f84 <ReadDataSlabN+0x264c>
   24044:	ldr	sl, [sp, #16]
   24048:	ldr	r3, [sp, #28]
   2404c:	mov	r8, #0
   24050:	add	r6, sp, #56	; 0x38
   24054:	b	240a8 <ReadDataSlabN+0x2770>
   24058:	add	r0, sp, #56	; 0x38
   2405c:	sub	r1, r7, r5
   24060:	mov	r2, #1
   24064:	ldr	r6, [r0, r8]
   24068:	ldr	r0, [r3, r8]
   2406c:	mla	r0, r0, r6, r1
   24070:	ldr	r1, [sp, #52]	; 0x34
   24074:	mul	r1, r0, r1
   24078:	ldr	r0, [sp, #48]	; 0x30
   2407c:	ldr	r0, [r0]
   24080:	bl	1a2c <fseek@plt>
   24084:	ldr	r3, [sp, #28]
   24088:	add	r1, r7, r9
   2408c:	sub	r1, r1, r5
   24090:	ldr	r0, [r3, r8]
   24094:	mla	r9, r0, r6, r1
   24098:	add	r6, sp, #56	; 0x38
   2409c:	subs	sl, sl, #1
   240a0:	add	r8, r8, #4
   240a4:	beq	23f84 <ReadDataSlabN+0x264c>
   240a8:	ldr	r0, [r4, r8]
   240ac:	ldr	r1, [sp, #36]	; 0x24
   240b0:	add	r0, r0, #1
   240b4:	str	r0, [r4, r8]
   240b8:	ldr	r1, [r1, r8]
   240bc:	sdiv	r2, r0, r1
   240c0:	mls	r0, r2, r1, r0
   240c4:	cmp	r0, #0
   240c8:	bne	23f60 <ReadDataSlabN+0x2628>
   240cc:	mov	r0, #0
   240d0:	str	r0, [r4, r8]
   240d4:	ldr	r0, [sp, #32]
   240d8:	ldr	r7, [r0, r8]
   240dc:	sdiv	r0, r9, r7
   240e0:	mls	r5, r0, r7, r9
   240e4:	cmp	r5, #0
   240e8:	bne	24058 <ReadDataSlabN+0x2720>
   240ec:	ldr	r0, [r3, r8]
   240f0:	cmp	r0, #0
   240f4:	beq	2409c <ReadDataSlabN+0x2764>
   240f8:	ldr	r1, [sp, #52]	; 0x34
   240fc:	ldr	r5, [r6, r8]
   24100:	mov	r2, #1
   24104:	mul	r0, r0, r1
   24108:	mul	r1, r0, r5
   2410c:	ldr	r0, [sp, #48]	; 0x30
   24110:	ldr	r0, [r0]
   24114:	bl	1a2c <fseek@plt>
   24118:	ldr	r3, [sp, #28]
   2411c:	ldr	r0, [r3, r8]
   24120:	mla	r9, r0, r5, r9
   24124:	b	2409c <ReadDataSlabN+0x2764>
   24128:	ldr	r0, [sp, #24]
   2412c:	sub	r1, fp, #72	; 0x48
   24130:	add	r2, sp, #96	; 0x60
   24134:	cmp	r0, #1
   24138:	add	r0, sp, #56	; 0x38
   2413c:	blt	25bc4 <ReadDataSlabN+0x428c>
   24140:	orr	r0, r0, #4
   24144:	orr	r3, r2, #4
   24148:	ldr	r2, [fp, #24]
   2414c:	mov	r7, #0
   24150:	str	r0, [sp, #36]	; 0x24
   24154:	ldr	r0, [fp, #16]
   24158:	str	r3, [sp, #32]
   2415c:	add	r8, r2, #4
   24160:	add	ip, r0, #4
   24164:	ldr	r0, [fp, #8]
   24168:	str	r8, [sp, #12]
   2416c:	str	ip, [sp, #28]
   24170:	sub	r0, r0, #1
   24174:	str	r0, [sp, #8]
   24178:	orr	r0, r1, #4
   2417c:	str	r0, [sp, #4]
   24180:	b	241c8 <ReadDataSlabN+0x2890>
   24184:	ldr	r0, [sp, #4]
   24188:	mov	r2, #1
   2418c:	ldr	r4, [r0, r7]
   24190:	ldr	r0, [sp, #52]	; 0x34
   24194:	mul	r1, r4, r0
   24198:	ldr	r0, [sp, #48]	; 0x30
   2419c:	ldr	r0, [r0]
   241a0:	bl	1a2c <fseek@plt>
   241a4:	add	r6, r4, r6
   241a8:	ldr	r0, [fp, #24]
   241ac:	ldr	r7, [sp, #16]
   241b0:	ldr	r1, [sp, #24]
   241b4:	ldr	r0, [r0]
   241b8:	add	r7, r0, r7
   241bc:	mov	r0, #0
   241c0:	cmp	r7, r1
   241c4:	bge	219bc <ReadDataSlabN+0x84>
   241c8:	ldr	r4, [fp, #16]
   241cc:	ldr	r0, [r4]
   241d0:	cmp	r0, #0
   241d4:	beq	24200 <ReadDataSlabN+0x28c8>
   241d8:	ldr	sl, [sp, #52]	; 0x34
   241dc:	ldr	r5, [sp, #48]	; 0x30
   241e0:	mov	r2, #1
   241e4:	mul	r1, r0, sl
   241e8:	ldr	r0, [r5]
   241ec:	bl	1a2c <fseek@plt>
   241f0:	ldr	r0, [r4]
   241f4:	add	r6, r0, r6
   241f8:	str	r6, [sp, #20]
   241fc:	b	24210 <ReadDataSlabN+0x28d8>
   24200:	ldr	r5, [sp, #48]	; 0x30
   24204:	ldr	sl, [sp, #52]	; 0x34
   24208:	str	r6, [sp, #20]
   2420c:	mov	r0, #0
   24210:	ldr	r1, [fp, #24]
   24214:	ldr	r6, [sp, #44]	; 0x2c
   24218:	str	r7, [sp, #16]
   2421c:	ldr	r1, [r1]
   24220:	cmp	r1, #0
   24224:	ble	24298 <ReadDataSlabN+0x2960>
   24228:	ldr	r0, [sp, #40]	; 0x28
   2422c:	ldr	r8, [fp, #20]
   24230:	ldr	r9, [sp, #20]
   24234:	mov	r4, #0
   24238:	add	r7, r0, r7
   2423c:	add	r1, r7, r4
   24240:	mov	r0, r5
   24244:	mov	r2, r6
   24248:	mov	r3, #1
   2424c:	bl	1c460 <ReadInt8Data>
   24250:	ldr	r0, [r8]
   24254:	mov	r2, #1
   24258:	sub	r0, r0, #1
   2425c:	mul	r1, r0, sl
   24260:	ldr	r0, [r5]
   24264:	bl	1a2c <fseek@plt>
   24268:	ldr	r0, [fp, #24]
   2426c:	ldr	r2, [r8]
   24270:	add	r4, r4, #1
   24274:	ldr	r1, [r0]
   24278:	add	r9, r2, r9
   2427c:	cmp	r4, r1
   24280:	blt	2423c <ReadDataSlabN+0x2904>
   24284:	ldr	r0, [fp, #16]
   24288:	ldr	r8, [sp, #12]
   2428c:	str	r9, [sp, #20]
   24290:	ldr	r0, [r0]
   24294:	b	242a0 <ReadDataSlabN+0x2968>
   24298:	ldr	r2, [fp, #20]
   2429c:	ldr	r2, [r2]
   242a0:	ldr	r3, [fp, #12]
   242a4:	ldr	r3, [r3]
   242a8:	mls	r1, r2, r1, r3
   242ac:	mov	r2, #1
   242b0:	sub	r4, r1, r0
   242b4:	ldr	r0, [r5]
   242b8:	mul	r1, r4, sl
   242bc:	bl	1a2c <fseek@plt>
   242c0:	ldr	r6, [sp, #20]
   242c4:	ldr	r0, [fp, #8]
   242c8:	add	r5, sp, #56	; 0x38
   242cc:	add	r6, r4, r6
   242d0:	cmp	r0, #2
   242d4:	blt	241a8 <ReadDataSlabN+0x2870>
   242d8:	ldr	sl, [sp, #8]
   242dc:	ldr	r3, [sp, #32]
   242e0:	ldr	ip, [sp, #28]
   242e4:	mov	r7, #0
   242e8:	b	24344 <ReadDataSlabN+0x2a0c>
   242ec:	add	r0, sp, #56	; 0x38
   242f0:	mov	r5, r6
   242f4:	sub	r1, r4, r9
   242f8:	mov	r2, #1
   242fc:	ldr	r6, [r0, r7]
   24300:	ldr	r0, [ip, r7]
   24304:	mla	r0, r0, r6, r1
   24308:	ldr	r1, [sp, #52]	; 0x34
   2430c:	mul	r1, r0, r1
   24310:	ldr	r0, [sp, #48]	; 0x30
   24314:	ldr	r0, [r0]
   24318:	bl	1a2c <fseek@plt>
   2431c:	ldr	ip, [sp, #28]
   24320:	ldr	r3, [sp, #32]
   24324:	add	r1, r4, r5
   24328:	add	r5, sp, #56	; 0x38
   2432c:	sub	r1, r1, r9
   24330:	ldr	r0, [ip, r7]
   24334:	mla	r6, r0, r6, r1
   24338:	subs	sl, sl, #1
   2433c:	add	r7, r7, #4
   24340:	beq	241a8 <ReadDataSlabN+0x2870>
   24344:	ldr	r0, [r3, r7]
   24348:	add	r0, r0, #1
   2434c:	str	r0, [r3, r7]
   24350:	ldr	r1, [r8, r7]
   24354:	sdiv	r2, r0, r1
   24358:	mls	r0, r2, r1, r0
   2435c:	cmp	r0, #0
   24360:	bne	24184 <ReadDataSlabN+0x284c>
   24364:	mov	r0, #0
   24368:	str	r0, [r3, r7]
   2436c:	ldr	r0, [sp, #36]	; 0x24
   24370:	ldr	r4, [r0, r7]
   24374:	sdiv	r0, r6, r4
   24378:	mls	r9, r0, r4, r6
   2437c:	cmp	r9, #0
   24380:	bne	242ec <ReadDataSlabN+0x29b4>
   24384:	ldr	r0, [ip, r7]
   24388:	cmp	r0, #0
   2438c:	beq	24338 <ReadDataSlabN+0x2a00>
   24390:	ldr	r1, [sp, #52]	; 0x34
   24394:	ldr	r4, [r5, r7]
   24398:	mov	r2, #1
   2439c:	mul	r0, r0, r1
   243a0:	mul	r1, r0, r4
   243a4:	ldr	r0, [sp, #48]	; 0x30
   243a8:	ldr	r0, [r0]
   243ac:	bl	1a2c <fseek@plt>
   243b0:	ldr	ip, [sp, #28]
   243b4:	ldr	r3, [sp, #32]
   243b8:	ldr	r0, [ip, r7]
   243bc:	mla	r6, r0, r4, r6
   243c0:	b	24338 <ReadDataSlabN+0x2a00>
   243c4:	ldr	r0, [sp, #24]
   243c8:	sub	r1, fp, #72	; 0x48
   243cc:	add	r2, sp, #96	; 0x60
   243d0:	cmp	r0, #1
   243d4:	add	r0, sp, #56	; 0x38
   243d8:	blt	25bc4 <ReadDataSlabN+0x428c>
   243dc:	orr	r0, r0, #4
   243e0:	orr	r3, r2, #4
   243e4:	ldr	r2, [fp, #24]
   243e8:	mov	r7, #0
   243ec:	str	r0, [sp, #36]	; 0x24
   243f0:	ldr	r0, [fp, #16]
   243f4:	str	r3, [sp, #32]
   243f8:	add	r8, r2, #4
   243fc:	add	ip, r0, #4
   24400:	ldr	r0, [fp, #8]
   24404:	str	r8, [sp, #12]
   24408:	str	ip, [sp, #28]
   2440c:	sub	r0, r0, #1
   24410:	str	r0, [sp, #8]
   24414:	orr	r0, r1, #4
   24418:	str	r0, [sp, #4]
   2441c:	b	24464 <ReadDataSlabN+0x2b2c>
   24420:	ldr	r0, [sp, #4]
   24424:	mov	r2, #1
   24428:	ldr	r4, [r0, r7]
   2442c:	ldr	r0, [sp, #52]	; 0x34
   24430:	mul	r1, r4, r0
   24434:	ldr	r0, [sp, #48]	; 0x30
   24438:	ldr	r0, [r0]
   2443c:	bl	1a2c <fseek@plt>
   24440:	add	r6, r4, r6
   24444:	ldr	r0, [fp, #24]
   24448:	ldr	r7, [sp, #16]
   2444c:	ldr	r1, [sp, #24]
   24450:	ldr	r0, [r0]
   24454:	add	r7, r0, r7
   24458:	mov	r0, #0
   2445c:	cmp	r7, r1
   24460:	bge	219bc <ReadDataSlabN+0x84>
   24464:	ldr	r4, [fp, #16]
   24468:	ldr	r0, [r4]
   2446c:	cmp	r0, #0
   24470:	beq	2449c <ReadDataSlabN+0x2b64>
   24474:	ldr	sl, [sp, #52]	; 0x34
   24478:	ldr	r5, [sp, #48]	; 0x30
   2447c:	mov	r2, #1
   24480:	mul	r1, r0, sl
   24484:	ldr	r0, [r5]
   24488:	bl	1a2c <fseek@plt>
   2448c:	ldr	r0, [r4]
   24490:	add	r6, r0, r6
   24494:	str	r6, [sp, #20]
   24498:	b	244ac <ReadDataSlabN+0x2b74>
   2449c:	ldr	r5, [sp, #48]	; 0x30
   244a0:	ldr	sl, [sp, #52]	; 0x34
   244a4:	str	r6, [sp, #20]
   244a8:	mov	r0, #0
   244ac:	ldr	r1, [fp, #24]
   244b0:	ldr	r6, [sp, #44]	; 0x2c
   244b4:	str	r7, [sp, #16]
   244b8:	ldr	r1, [r1]
   244bc:	cmp	r1, #0
   244c0:	ble	24534 <ReadDataSlabN+0x2bfc>
   244c4:	ldr	r0, [sp, #40]	; 0x28
   244c8:	ldr	r8, [fp, #20]
   244cc:	ldr	r9, [sp, #20]
   244d0:	mov	r4, #0
   244d4:	add	r7, r0, r7
   244d8:	add	r1, r7, r4
   244dc:	mov	r0, r5
   244e0:	mov	r2, r6
   244e4:	mov	r3, #1
   244e8:	bl	1ed88 <ReadUInt8Data>
   244ec:	ldr	r0, [r8]
   244f0:	mov	r2, #1
   244f4:	sub	r0, r0, #1
   244f8:	mul	r1, r0, sl
   244fc:	ldr	r0, [r5]
   24500:	bl	1a2c <fseek@plt>
   24504:	ldr	r0, [fp, #24]
   24508:	ldr	r2, [r8]
   2450c:	add	r4, r4, #1
   24510:	ldr	r1, [r0]
   24514:	add	r9, r2, r9
   24518:	cmp	r4, r1
   2451c:	blt	244d8 <ReadDataSlabN+0x2ba0>
   24520:	ldr	r0, [fp, #16]
   24524:	ldr	r8, [sp, #12]
   24528:	str	r9, [sp, #20]
   2452c:	ldr	r0, [r0]
   24530:	b	2453c <ReadDataSlabN+0x2c04>
   24534:	ldr	r2, [fp, #20]
   24538:	ldr	r2, [r2]
   2453c:	ldr	r3, [fp, #12]
   24540:	ldr	r3, [r3]
   24544:	mls	r1, r2, r1, r3
   24548:	mov	r2, #1
   2454c:	sub	r4, r1, r0
   24550:	ldr	r0, [r5]
   24554:	mul	r1, r4, sl
   24558:	bl	1a2c <fseek@plt>
   2455c:	ldr	r6, [sp, #20]
   24560:	ldr	r0, [fp, #8]
   24564:	add	r5, sp, #56	; 0x38
   24568:	add	r6, r4, r6
   2456c:	cmp	r0, #2
   24570:	blt	24444 <ReadDataSlabN+0x2b0c>
   24574:	ldr	sl, [sp, #8]
   24578:	ldr	r3, [sp, #32]
   2457c:	ldr	ip, [sp, #28]
   24580:	mov	r7, #0
   24584:	b	245e0 <ReadDataSlabN+0x2ca8>
   24588:	add	r0, sp, #56	; 0x38
   2458c:	mov	r5, r6
   24590:	sub	r1, r4, r9
   24594:	mov	r2, #1
   24598:	ldr	r6, [r0, r7]
   2459c:	ldr	r0, [ip, r7]
   245a0:	mla	r0, r0, r6, r1
   245a4:	ldr	r1, [sp, #52]	; 0x34
   245a8:	mul	r1, r0, r1
   245ac:	ldr	r0, [sp, #48]	; 0x30
   245b0:	ldr	r0, [r0]
   245b4:	bl	1a2c <fseek@plt>
   245b8:	ldr	ip, [sp, #28]
   245bc:	ldr	r3, [sp, #32]
   245c0:	add	r1, r4, r5
   245c4:	add	r5, sp, #56	; 0x38
   245c8:	sub	r1, r1, r9
   245cc:	ldr	r0, [ip, r7]
   245d0:	mla	r6, r0, r6, r1
   245d4:	subs	sl, sl, #1
   245d8:	add	r7, r7, #4
   245dc:	beq	24444 <ReadDataSlabN+0x2b0c>
   245e0:	ldr	r0, [r3, r7]
   245e4:	add	r0, r0, #1
   245e8:	str	r0, [r3, r7]
   245ec:	ldr	r1, [r8, r7]
   245f0:	sdiv	r2, r0, r1
   245f4:	mls	r0, r2, r1, r0
   245f8:	cmp	r0, #0
   245fc:	bne	24420 <ReadDataSlabN+0x2ae8>
   24600:	mov	r0, #0
   24604:	str	r0, [r3, r7]
   24608:	ldr	r0, [sp, #36]	; 0x24
   2460c:	ldr	r4, [r0, r7]
   24610:	sdiv	r0, r6, r4
   24614:	mls	r9, r0, r4, r6
   24618:	cmp	r9, #0
   2461c:	bne	24588 <ReadDataSlabN+0x2c50>
   24620:	ldr	r0, [ip, r7]
   24624:	cmp	r0, #0
   24628:	beq	245d4 <ReadDataSlabN+0x2c9c>
   2462c:	ldr	r1, [sp, #52]	; 0x34
   24630:	ldr	r4, [r5, r7]
   24634:	mov	r2, #1
   24638:	mul	r0, r0, r1
   2463c:	mul	r1, r0, r4
   24640:	ldr	r0, [sp, #48]	; 0x30
   24644:	ldr	r0, [r0]
   24648:	bl	1a2c <fseek@plt>
   2464c:	ldr	ip, [sp, #28]
   24650:	ldr	r3, [sp, #32]
   24654:	ldr	r0, [ip, r7]
   24658:	mla	r6, r0, r4, r6
   2465c:	b	245d4 <ReadDataSlabN+0x2c9c>
   24660:	ldr	r0, [sp, #24]
   24664:	sub	r1, fp, #72	; 0x48
   24668:	cmp	r0, #1
   2466c:	ldr	r0, [fp, #16]
   24670:	blt	25bc4 <ReadDataSlabN+0x428c>
   24674:	add	r2, sp, #96	; 0x60
   24678:	add	r3, r0, #4
   2467c:	ldr	r0, [fp, #8]
   24680:	mov	r5, #0
   24684:	orr	sl, r2, #4
   24688:	ldr	r2, [fp, #24]
   2468c:	str	r3, [sp, #28]
   24690:	str	sl, [sp, #16]
   24694:	sub	r0, r0, #1
   24698:	add	r2, r2, #4
   2469c:	str	r0, [sp, #12]
   246a0:	orr	r0, r1, #4
   246a4:	str	r2, [sp, #36]	; 0x24
   246a8:	orr	r2, r6, #4
   246ac:	str	r0, [sp, #8]
   246b0:	str	r2, [sp, #32]
   246b4:	b	246f8 <ReadDataSlabN+0x2dc0>
   246b8:	ldr	r0, [sp, #8]
   246bc:	mov	r2, #1
   246c0:	ldr	r4, [r0, r5]
   246c4:	ldr	r0, [sp, #52]	; 0x34
   246c8:	mul	r1, r4, r0
   246cc:	ldr	r0, [sp, #48]	; 0x30
   246d0:	ldr	r0, [r0]
   246d4:	bl	1a2c <fseek@plt>
   246d8:	add	r9, r4, r9
   246dc:	ldr	r0, [r8]
   246e0:	ldr	r5, [sp, #20]
   246e4:	ldr	r1, [sp, #24]
   246e8:	add	r5, r0, r5
   246ec:	mov	r0, #0
   246f0:	cmp	r5, r1
   246f4:	bge	219bc <ReadDataSlabN+0x84>
   246f8:	ldr	r4, [fp, #16]
   246fc:	ldr	r0, [r4]
   24700:	cmp	r0, #0
   24704:	beq	2472c <ReadDataSlabN+0x2df4>
   24708:	ldr	r1, [sp, #52]	; 0x34
   2470c:	mov	r2, #1
   24710:	mul	r1, r0, r1
   24714:	ldr	r0, [sp, #48]	; 0x30
   24718:	ldr	r0, [r0]
   2471c:	bl	1a2c <fseek@plt>
   24720:	ldr	r0, [r4]
   24724:	add	r9, r0, r9
   24728:	b	24730 <ReadDataSlabN+0x2df8>
   2472c:	mov	r0, #0
   24730:	ldr	r8, [fp, #24]
   24734:	ldr	r2, [sp, #40]	; 0x28
   24738:	str	r5, [sp, #20]
   2473c:	ldr	r1, [r8]
   24740:	cmp	r1, #0
   24744:	ble	247c0 <ReadDataSlabN+0x2e88>
   24748:	add	sl, sp, #44	; 0x2c
   2474c:	ldr	r8, [fp, #20]
   24750:	add	r5, r2, r5, lsl #3
   24754:	mov	r7, #0
   24758:	ldm	sl, {r4, r6, sl}
   2475c:	mov	r0, r6
   24760:	mov	r1, r5
   24764:	mov	r2, r4
   24768:	mov	r3, #1
   2476c:	bl	37d8 <ReadDoubleData>
   24770:	ldr	r0, [r8]
   24774:	mov	r2, #1
   24778:	sub	r0, r0, #1
   2477c:	mul	r1, r0, sl
   24780:	ldr	r0, [r6]
   24784:	bl	1a2c <fseek@plt>
   24788:	ldr	r0, [fp, #24]
   2478c:	ldr	r2, [r8]
   24790:	add	r7, r7, #1
   24794:	add	r5, r5, #8
   24798:	ldr	r1, [r0]
   2479c:	add	r9, r2, r9
   247a0:	cmp	r7, r1
   247a4:	blt	2475c <ReadDataSlabN+0x2e24>
   247a8:	ldr	r0, [fp, #16]
   247ac:	ldr	sl, [sp, #16]
   247b0:	ldr	r8, [fp, #24]
   247b4:	add	r6, sp, #56	; 0x38
   247b8:	ldr	r0, [r0]
   247bc:	b	247c8 <ReadDataSlabN+0x2e90>
   247c0:	ldr	r2, [fp, #20]
   247c4:	ldr	r2, [r2]
   247c8:	ldr	r3, [fp, #12]
   247cc:	ldr	r3, [r3]
   247d0:	mls	r1, r2, r1, r3
   247d4:	mov	r2, #1
   247d8:	sub	r4, r1, r0
   247dc:	ldr	r0, [sp, #52]	; 0x34
   247e0:	mul	r1, r4, r0
   247e4:	ldr	r0, [sp, #48]	; 0x30
   247e8:	ldr	r0, [r0]
   247ec:	bl	1a2c <fseek@plt>
   247f0:	ldr	r0, [fp, #8]
   247f4:	add	r9, r4, r9
   247f8:	cmp	r0, #2
   247fc:	blt	246dc <ReadDataSlabN+0x2da4>
   24800:	ldr	r7, [sp, #12]
   24804:	ldr	r3, [sp, #28]
   24808:	mov	r5, #0
   2480c:	b	24864 <ReadDataSlabN+0x2f2c>
   24810:	add	r0, sp, #56	; 0x38
   24814:	sub	r1, r4, r8
   24818:	mov	r2, #1
   2481c:	ldr	r6, [r0, r5]
   24820:	ldr	r0, [r3, r5]
   24824:	mla	r0, r0, r6, r1
   24828:	ldr	r1, [sp, #52]	; 0x34
   2482c:	mul	r1, r0, r1
   24830:	ldr	r0, [sp, #48]	; 0x30
   24834:	ldr	r0, [r0]
   24838:	bl	1a2c <fseek@plt>
   2483c:	ldr	r3, [sp, #28]
   24840:	add	r1, r4, r9
   24844:	sub	r1, r1, r8
   24848:	ldr	r0, [r3, r5]
   2484c:	mla	r9, r0, r6, r1
   24850:	add	r6, sp, #56	; 0x38
   24854:	ldr	r8, [fp, #24]
   24858:	subs	r7, r7, #1
   2485c:	add	r5, r5, #4
   24860:	beq	246dc <ReadDataSlabN+0x2da4>
   24864:	ldr	r0, [sl, r5]
   24868:	ldr	r1, [sp, #36]	; 0x24
   2486c:	add	r0, r0, #1
   24870:	str	r0, [sl, r5]
   24874:	ldr	r1, [r1, r5]
   24878:	sdiv	r2, r0, r1
   2487c:	mls	r0, r2, r1, r0
   24880:	cmp	r0, #0
   24884:	bne	246b8 <ReadDataSlabN+0x2d80>
   24888:	mov	r0, #0
   2488c:	str	r0, [sl, r5]
   24890:	ldr	r0, [sp, #32]
   24894:	ldr	r4, [r0, r5]
   24898:	sdiv	r0, r9, r4
   2489c:	mls	r8, r0, r4, r9
   248a0:	cmp	r8, #0
   248a4:	bne	24810 <ReadDataSlabN+0x2ed8>
   248a8:	ldr	r0, [r3, r5]
   248ac:	cmp	r0, #0
   248b0:	beq	24854 <ReadDataSlabN+0x2f1c>
   248b4:	ldr	r1, [sp, #52]	; 0x34
   248b8:	ldr	r4, [r6, r5]
   248bc:	mov	r2, #1
   248c0:	mul	r0, r0, r1
   248c4:	mul	r1, r0, r4
   248c8:	ldr	r0, [sp, #48]	; 0x30
   248cc:	ldr	r0, [r0]
   248d0:	bl	1a2c <fseek@plt>
   248d4:	ldr	r3, [sp, #28]
   248d8:	ldr	r0, [r3, r5]
   248dc:	mla	r9, r0, r4, r9
   248e0:	b	24854 <ReadDataSlabN+0x2f1c>
   248e4:	ldr	r0, [sp, #20]
   248e8:	sub	r1, fp, #72	; 0x48
   248ec:	cmp	r0, #1
   248f0:	ldr	r0, [fp, #16]
   248f4:	blt	25bc4 <ReadDataSlabN+0x428c>
   248f8:	ldr	r3, [fp, #24]
   248fc:	add	r2, sp, #96	; 0x60
   24900:	mov	r5, #0
   24904:	orr	r2, r2, #4
   24908:	mov	r8, r2
   2490c:	orr	r2, r6, #4
   24910:	str	r2, [sp, #32]
   24914:	str	r8, [sp, #24]
   24918:	add	r3, r3, #4
   2491c:	str	r3, [sp, #36]	; 0x24
   24920:	add	r3, r0, #4
   24924:	ldr	r0, [fp, #8]
   24928:	str	r3, [sp, #28]
   2492c:	sub	r0, r0, #1
   24930:	str	r0, [sp, #12]
   24934:	orr	r0, r1, #4
   24938:	str	r0, [sp, #8]
   2493c:	b	24960 <ReadDataSlabN+0x3028>
   24940:	ldr	ip, [fp, #24]
   24944:	ldr	r0, [ip]
   24948:	ldr	r5, [sp, #16]
   2494c:	ldr	r1, [sp, #20]
   24950:	add	r5, r0, r5
   24954:	mov	r0, #0
   24958:	cmp	r5, r1
   2495c:	bge	219bc <ReadDataSlabN+0x84>
   24960:	ldr	r4, [fp, #16]
   24964:	ldr	r0, [r4]
   24968:	cmp	r0, #0
   2496c:	beq	24994 <ReadDataSlabN+0x305c>
   24970:	ldr	r1, [sp, #52]	; 0x34
   24974:	ldr	sl, [sp, #48]	; 0x30
   24978:	mov	r2, #1
   2497c:	mul	r1, r0, r1
   24980:	ldr	r0, [sl]
   24984:	bl	1a2c <fseek@plt>
   24988:	ldr	r0, [r4]
   2498c:	add	r9, r0, r9
   24990:	b	2499c <ReadDataSlabN+0x3064>
   24994:	ldr	sl, [sp, #48]	; 0x30
   24998:	mov	r0, #0
   2499c:	ldr	r8, [fp, #24]
   249a0:	ldr	r4, [sp, #44]	; 0x2c
   249a4:	str	r5, [sp, #16]
   249a8:	ldr	r1, [r8]
   249ac:	cmp	r1, #0
   249b0:	ble	24a24 <ReadDataSlabN+0x30ec>
   249b4:	ldr	r0, [sp, #40]	; 0x28
   249b8:	ldr	r6, [sp, #52]	; 0x34
   249bc:	ldr	r8, [fp, #20]
   249c0:	mov	r7, #0
   249c4:	add	r5, r0, r5, lsl #2
   249c8:	mov	r0, sl
   249cc:	mov	r1, r5
   249d0:	mov	r2, r4
   249d4:	mov	r3, #1
   249d8:	bl	8aa0 <ReadSingleData>
   249dc:	ldr	r0, [r8]
   249e0:	mov	r2, #1
   249e4:	sub	r0, r0, #1
   249e8:	mul	r1, r0, r6
   249ec:	ldr	r0, [sl]
   249f0:	bl	1a2c <fseek@plt>
   249f4:	ldr	r0, [fp, #24]
   249f8:	ldr	r2, [r8]
   249fc:	add	r7, r7, #1
   24a00:	add	r5, r5, #4
   24a04:	ldr	r1, [r0]
   24a08:	add	r9, r2, r9
   24a0c:	cmp	r7, r1
   24a10:	blt	249c8 <ReadDataSlabN+0x3090>
   24a14:	ldr	r0, [fp, #16]
   24a18:	add	r6, sp, #56	; 0x38
   24a1c:	ldr	r0, [r0]
   24a20:	b	24a2c <ReadDataSlabN+0x30f4>
   24a24:	ldr	r2, [fp, #20]
   24a28:	ldr	r2, [r2]
   24a2c:	ldr	r3, [fp, #12]
   24a30:	ldr	r3, [r3]
   24a34:	mls	r1, r2, r1, r3
   24a38:	mov	r2, #1
   24a3c:	sub	r4, r1, r0
   24a40:	ldr	r0, [sp, #52]	; 0x34
   24a44:	mul	r1, r4, r0
   24a48:	ldr	r0, [sl]
   24a4c:	bl	1a2c <fseek@plt>
   24a50:	ldr	r0, [fp, #8]
   24a54:	ldr	r8, [sp, #24]
   24a58:	add	r9, r4, r9
   24a5c:	cmp	r0, #2
   24a60:	blt	24940 <ReadDataSlabN+0x3008>
   24a64:	ldr	r7, [sp, #12]
   24a68:	ldr	r3, [sp, #28]
   24a6c:	ldr	ip, [fp, #24]
   24a70:	mov	r5, #0
   24a74:	b	24ad8 <ReadDataSlabN+0x31a0>
   24a78:	add	r0, sp, #56	; 0x38
   24a7c:	sub	r1, r4, sl
   24a80:	ldr	r8, [sp, #48]	; 0x30
   24a84:	mov	r2, #1
   24a88:	ldr	r6, [r0, r5]
   24a8c:	ldr	r0, [r3, r5]
   24a90:	mla	r0, r0, r6, r1
   24a94:	ldr	r1, [sp, #52]	; 0x34
   24a98:	mul	r1, r0, r1
   24a9c:	ldr	r0, [r8]
   24aa0:	bl	1a2c <fseek@plt>
   24aa4:	add	r1, r4, r9
   24aa8:	ldr	r3, [sp, #28]
   24aac:	sub	r1, r1, sl
   24ab0:	mov	sl, r8
   24ab4:	ldr	r8, [fp, #24]
   24ab8:	ldr	r0, [r3, r5]
   24abc:	mov	ip, r8
   24ac0:	ldr	r8, [sp, #24]
   24ac4:	mla	r9, r0, r6, r1
   24ac8:	add	r6, sp, #56	; 0x38
   24acc:	subs	r7, r7, #1
   24ad0:	add	r5, r5, #4
   24ad4:	beq	24944 <ReadDataSlabN+0x300c>
   24ad8:	ldr	r0, [r8, r5]
   24adc:	ldr	r1, [sp, #36]	; 0x24
   24ae0:	add	r0, r0, #1
   24ae4:	str	r0, [r8, r5]
   24ae8:	ldr	r1, [r1, r5]
   24aec:	sdiv	r2, r0, r1
   24af0:	mls	r0, r2, r1, r0
   24af4:	cmp	r0, #0
   24af8:	bne	24b6c <ReadDataSlabN+0x3234>
   24afc:	mov	r0, #0
   24b00:	str	r0, [r8, r5]
   24b04:	ldr	r0, [sp, #32]
   24b08:	ldr	r4, [r0, r5]
   24b0c:	sdiv	r0, r9, r4
   24b10:	mls	sl, r0, r4, r9
   24b14:	cmp	sl, #0
   24b18:	bne	24a78 <ReadDataSlabN+0x3140>
   24b1c:	ldr	r0, [r3, r5]
   24b20:	cmp	r0, #0
   24b24:	beq	24b64 <ReadDataSlabN+0x322c>
   24b28:	ldr	r1, [sp, #52]	; 0x34
   24b2c:	ldr	r4, [r6, r5]
   24b30:	ldr	sl, [sp, #48]	; 0x30
   24b34:	mov	r2, #1
   24b38:	mov	r6, ip
   24b3c:	mul	r0, r0, r1
   24b40:	mul	r1, r0, r4
   24b44:	ldr	r0, [sl]
   24b48:	bl	1a2c <fseek@plt>
   24b4c:	ldr	r3, [sp, #28]
   24b50:	mov	ip, r6
   24b54:	add	r6, sp, #56	; 0x38
   24b58:	ldr	r0, [r3, r5]
   24b5c:	mla	r9, r0, r4, r9
   24b60:	b	24acc <ReadDataSlabN+0x3194>
   24b64:	ldr	sl, [sp, #48]	; 0x30
   24b68:	b	24acc <ReadDataSlabN+0x3194>
   24b6c:	ldr	r0, [sp, #8]
   24b70:	mov	r2, #1
   24b74:	ldr	r4, [r0, r5]
   24b78:	ldr	r0, [sp, #52]	; 0x34
   24b7c:	mov	r5, ip
   24b80:	mul	r1, r4, r0
   24b84:	ldr	r0, [sl]
   24b88:	bl	1a2c <fseek@plt>
   24b8c:	mov	ip, r5
   24b90:	add	r9, r4, r9
   24b94:	b	24944 <ReadDataSlabN+0x300c>
   24b98:	ldr	r0, [sp, #20]
   24b9c:	sub	r1, fp, #72	; 0x48
   24ba0:	cmp	r0, #1
   24ba4:	ldr	r0, [fp, #16]
   24ba8:	blt	25bc4 <ReadDataSlabN+0x428c>
   24bac:	ldr	r3, [fp, #24]
   24bb0:	add	r2, sp, #96	; 0x60
   24bb4:	mov	r5, #0
   24bb8:	orr	r2, r2, #4
   24bbc:	mov	r8, r2
   24bc0:	orr	r2, r6, #4
   24bc4:	str	r2, [sp, #32]
   24bc8:	str	r8, [sp, #24]
   24bcc:	add	r3, r3, #4
   24bd0:	str	r3, [sp, #36]	; 0x24
   24bd4:	add	r3, r0, #4
   24bd8:	ldr	r0, [fp, #8]
   24bdc:	str	r3, [sp, #28]
   24be0:	sub	r0, r0, #1
   24be4:	str	r0, [sp, #12]
   24be8:	orr	r0, r1, #4
   24bec:	str	r0, [sp, #8]
   24bf0:	b	24c14 <ReadDataSlabN+0x32dc>
   24bf4:	ldr	ip, [fp, #24]
   24bf8:	ldr	r0, [ip]
   24bfc:	ldr	r5, [sp, #16]
   24c00:	ldr	r1, [sp, #20]
   24c04:	add	r5, r0, r5
   24c08:	mov	r0, #0
   24c0c:	cmp	r5, r1
   24c10:	bge	219bc <ReadDataSlabN+0x84>
   24c14:	ldr	r4, [fp, #16]
   24c18:	ldr	r0, [r4]
   24c1c:	cmp	r0, #0
   24c20:	beq	24c48 <ReadDataSlabN+0x3310>
   24c24:	ldr	r1, [sp, #52]	; 0x34
   24c28:	ldr	sl, [sp, #48]	; 0x30
   24c2c:	mov	r2, #1
   24c30:	mul	r1, r0, r1
   24c34:	ldr	r0, [sl]
   24c38:	bl	1a2c <fseek@plt>
   24c3c:	ldr	r0, [r4]
   24c40:	add	r9, r0, r9
   24c44:	b	24c50 <ReadDataSlabN+0x3318>
   24c48:	ldr	sl, [sp, #48]	; 0x30
   24c4c:	mov	r0, #0
   24c50:	ldr	r8, [fp, #24]
   24c54:	ldr	r4, [sp, #44]	; 0x2c
   24c58:	str	r5, [sp, #16]
   24c5c:	ldr	r1, [r8]
   24c60:	cmp	r1, #0
   24c64:	ble	24cd8 <ReadDataSlabN+0x33a0>
   24c68:	ldr	r0, [sp, #40]	; 0x28
   24c6c:	ldr	r6, [sp, #52]	; 0x34
   24c70:	ldr	r8, [fp, #20]
   24c74:	mov	r7, #0
   24c78:	add	r5, r0, r5, lsl #1
   24c7c:	mov	r0, sl
   24c80:	mov	r1, r5
   24c84:	mov	r2, r4
   24c88:	mov	r3, #1
   24c8c:	bl	16fe8 <ReadInt16Data>
   24c90:	ldr	r0, [r8]
   24c94:	mov	r2, #1
   24c98:	sub	r0, r0, #1
   24c9c:	mul	r1, r0, r6
   24ca0:	ldr	r0, [sl]
   24ca4:	bl	1a2c <fseek@plt>
   24ca8:	ldr	r0, [fp, #24]
   24cac:	ldr	r2, [r8]
   24cb0:	add	r7, r7, #1
   24cb4:	add	r5, r5, #2
   24cb8:	ldr	r1, [r0]
   24cbc:	add	r9, r2, r9
   24cc0:	cmp	r7, r1
   24cc4:	blt	24c7c <ReadDataSlabN+0x3344>
   24cc8:	ldr	r0, [fp, #16]
   24ccc:	add	r6, sp, #56	; 0x38
   24cd0:	ldr	r0, [r0]
   24cd4:	b	24ce0 <ReadDataSlabN+0x33a8>
   24cd8:	ldr	r2, [fp, #20]
   24cdc:	ldr	r2, [r2]
   24ce0:	ldr	r3, [fp, #12]
   24ce4:	ldr	r3, [r3]
   24ce8:	mls	r1, r2, r1, r3
   24cec:	mov	r2, #1
   24cf0:	sub	r4, r1, r0
   24cf4:	ldr	r0, [sp, #52]	; 0x34
   24cf8:	mul	r1, r4, r0
   24cfc:	ldr	r0, [sl]
   24d00:	bl	1a2c <fseek@plt>
   24d04:	ldr	r0, [fp, #8]
   24d08:	ldr	r8, [sp, #24]
   24d0c:	add	r9, r4, r9
   24d10:	cmp	r0, #2
   24d14:	blt	24bf4 <ReadDataSlabN+0x32bc>
   24d18:	ldr	r7, [sp, #12]
   24d1c:	ldr	r3, [sp, #28]
   24d20:	ldr	ip, [fp, #24]
   24d24:	mov	r5, #0
   24d28:	b	24d8c <ReadDataSlabN+0x3454>
   24d2c:	add	r0, sp, #56	; 0x38
   24d30:	sub	r1, r4, sl
   24d34:	ldr	r8, [sp, #48]	; 0x30
   24d38:	mov	r2, #1
   24d3c:	ldr	r6, [r0, r5]
   24d40:	ldr	r0, [r3, r5]
   24d44:	mla	r0, r0, r6, r1
   24d48:	ldr	r1, [sp, #52]	; 0x34
   24d4c:	mul	r1, r0, r1
   24d50:	ldr	r0, [r8]
   24d54:	bl	1a2c <fseek@plt>
   24d58:	add	r1, r4, r9
   24d5c:	ldr	r3, [sp, #28]
   24d60:	sub	r1, r1, sl
   24d64:	mov	sl, r8
   24d68:	ldr	r8, [fp, #24]
   24d6c:	ldr	r0, [r3, r5]
   24d70:	mov	ip, r8
   24d74:	ldr	r8, [sp, #24]
   24d78:	mla	r9, r0, r6, r1
   24d7c:	add	r6, sp, #56	; 0x38
   24d80:	subs	r7, r7, #1
   24d84:	add	r5, r5, #4
   24d88:	beq	24bf8 <ReadDataSlabN+0x32c0>
   24d8c:	ldr	r0, [r8, r5]
   24d90:	ldr	r1, [sp, #36]	; 0x24
   24d94:	add	r0, r0, #1
   24d98:	str	r0, [r8, r5]
   24d9c:	ldr	r1, [r1, r5]
   24da0:	sdiv	r2, r0, r1
   24da4:	mls	r0, r2, r1, r0
   24da8:	cmp	r0, #0
   24dac:	bne	24e20 <ReadDataSlabN+0x34e8>
   24db0:	mov	r0, #0
   24db4:	str	r0, [r8, r5]
   24db8:	ldr	r0, [sp, #32]
   24dbc:	ldr	r4, [r0, r5]
   24dc0:	sdiv	r0, r9, r4
   24dc4:	mls	sl, r0, r4, r9
   24dc8:	cmp	sl, #0
   24dcc:	bne	24d2c <ReadDataSlabN+0x33f4>
   24dd0:	ldr	r0, [r3, r5]
   24dd4:	cmp	r0, #0
   24dd8:	beq	24e18 <ReadDataSlabN+0x34e0>
   24ddc:	ldr	r1, [sp, #52]	; 0x34
   24de0:	ldr	r4, [r6, r5]
   24de4:	ldr	sl, [sp, #48]	; 0x30
   24de8:	mov	r2, #1
   24dec:	mov	r6, ip
   24df0:	mul	r0, r0, r1
   24df4:	mul	r1, r0, r4
   24df8:	ldr	r0, [sl]
   24dfc:	bl	1a2c <fseek@plt>
   24e00:	ldr	r3, [sp, #28]
   24e04:	mov	ip, r6
   24e08:	add	r6, sp, #56	; 0x38
   24e0c:	ldr	r0, [r3, r5]
   24e10:	mla	r9, r0, r4, r9
   24e14:	b	24d80 <ReadDataSlabN+0x3448>
   24e18:	ldr	sl, [sp, #48]	; 0x30
   24e1c:	b	24d80 <ReadDataSlabN+0x3448>
   24e20:	ldr	r0, [sp, #8]
   24e24:	mov	r2, #1
   24e28:	ldr	r4, [r0, r5]
   24e2c:	ldr	r0, [sp, #52]	; 0x34
   24e30:	mov	r5, ip
   24e34:	mul	r1, r4, r0
   24e38:	ldr	r0, [sl]
   24e3c:	bl	1a2c <fseek@plt>
   24e40:	mov	ip, r5
   24e44:	add	r9, r4, r9
   24e48:	b	24bf8 <ReadDataSlabN+0x32c0>
   24e4c:	ldr	r0, [sp, #20]
   24e50:	sub	r1, fp, #72	; 0x48
   24e54:	cmp	r0, #1
   24e58:	ldr	r0, [fp, #16]
   24e5c:	blt	25bc4 <ReadDataSlabN+0x428c>
   24e60:	ldr	r3, [fp, #24]
   24e64:	add	r2, sp, #96	; 0x60
   24e68:	mov	r5, #0
   24e6c:	orr	r2, r2, #4
   24e70:	mov	r8, r2
   24e74:	orr	r2, r6, #4
   24e78:	str	r2, [sp, #32]
   24e7c:	str	r8, [sp, #24]
   24e80:	add	r3, r3, #4
   24e84:	str	r3, [sp, #36]	; 0x24
   24e88:	add	r3, r0, #4
   24e8c:	ldr	r0, [fp, #8]
   24e90:	str	r3, [sp, #28]
   24e94:	sub	r0, r0, #1
   24e98:	str	r0, [sp, #12]
   24e9c:	orr	r0, r1, #4
   24ea0:	str	r0, [sp, #8]
   24ea4:	b	24ec8 <ReadDataSlabN+0x3590>
   24ea8:	ldr	ip, [fp, #24]
   24eac:	ldr	r0, [ip]
   24eb0:	ldr	r5, [sp, #16]
   24eb4:	ldr	r1, [sp, #20]
   24eb8:	add	r5, r0, r5
   24ebc:	mov	r0, #0
   24ec0:	cmp	r5, r1
   24ec4:	bge	219bc <ReadDataSlabN+0x84>
   24ec8:	ldr	r4, [fp, #16]
   24ecc:	ldr	r0, [r4]
   24ed0:	cmp	r0, #0
   24ed4:	beq	24efc <ReadDataSlabN+0x35c4>
   24ed8:	ldr	r1, [sp, #52]	; 0x34
   24edc:	ldr	sl, [sp, #48]	; 0x30
   24ee0:	mov	r2, #1
   24ee4:	mul	r1, r0, r1
   24ee8:	ldr	r0, [sl]
   24eec:	bl	1a2c <fseek@plt>
   24ef0:	ldr	r0, [r4]
   24ef4:	add	r9, r0, r9
   24ef8:	b	24f04 <ReadDataSlabN+0x35cc>
   24efc:	ldr	sl, [sp, #48]	; 0x30
   24f00:	mov	r0, #0
   24f04:	ldr	r8, [fp, #24]
   24f08:	ldr	r4, [sp, #44]	; 0x2c
   24f0c:	str	r5, [sp, #16]
   24f10:	ldr	r1, [r8]
   24f14:	cmp	r1, #0
   24f18:	ble	24f8c <ReadDataSlabN+0x3654>
   24f1c:	ldr	r0, [sp, #40]	; 0x28
   24f20:	ldr	r6, [sp, #52]	; 0x34
   24f24:	ldr	r8, [fp, #20]
   24f28:	mov	r7, #0
   24f2c:	add	r5, r0, r5, lsl #1
   24f30:	mov	r0, sl
   24f34:	mov	r1, r5
   24f38:	mov	r2, r4
   24f3c:	mov	r3, #1
   24f40:	bl	19a24 <ReadUInt16Data>
   24f44:	ldr	r0, [r8]
   24f48:	mov	r2, #1
   24f4c:	sub	r0, r0, #1
   24f50:	mul	r1, r0, r6
   24f54:	ldr	r0, [sl]
   24f58:	bl	1a2c <fseek@plt>
   24f5c:	ldr	r0, [fp, #24]
   24f60:	ldr	r2, [r8]
   24f64:	add	r7, r7, #1
   24f68:	add	r5, r5, #2
   24f6c:	ldr	r1, [r0]
   24f70:	add	r9, r2, r9
   24f74:	cmp	r7, r1
   24f78:	blt	24f30 <ReadDataSlabN+0x35f8>
   24f7c:	ldr	r0, [fp, #16]
   24f80:	add	r6, sp, #56	; 0x38
   24f84:	ldr	r0, [r0]
   24f88:	b	24f94 <ReadDataSlabN+0x365c>
   24f8c:	ldr	r2, [fp, #20]
   24f90:	ldr	r2, [r2]
   24f94:	ldr	r3, [fp, #12]
   24f98:	ldr	r3, [r3]
   24f9c:	mls	r1, r2, r1, r3
   24fa0:	mov	r2, #1
   24fa4:	sub	r4, r1, r0
   24fa8:	ldr	r0, [sp, #52]	; 0x34
   24fac:	mul	r1, r4, r0
   24fb0:	ldr	r0, [sl]
   24fb4:	bl	1a2c <fseek@plt>
   24fb8:	ldr	r0, [fp, #8]
   24fbc:	ldr	r8, [sp, #24]
   24fc0:	add	r9, r4, r9
   24fc4:	cmp	r0, #2
   24fc8:	blt	24ea8 <ReadDataSlabN+0x3570>
   24fcc:	ldr	r7, [sp, #12]
   24fd0:	ldr	r3, [sp, #28]
   24fd4:	ldr	ip, [fp, #24]
   24fd8:	mov	r5, #0
   24fdc:	b	25040 <ReadDataSlabN+0x3708>
   24fe0:	add	r0, sp, #56	; 0x38
   24fe4:	sub	r1, r4, sl
   24fe8:	ldr	r8, [sp, #48]	; 0x30
   24fec:	mov	r2, #1
   24ff0:	ldr	r6, [r0, r5]
   24ff4:	ldr	r0, [r3, r5]
   24ff8:	mla	r0, r0, r6, r1
   24ffc:	ldr	r1, [sp, #52]	; 0x34
   25000:	mul	r1, r0, r1
   25004:	ldr	r0, [r8]
   25008:	bl	1a2c <fseek@plt>
   2500c:	add	r1, r4, r9
   25010:	ldr	r3, [sp, #28]
   25014:	sub	r1, r1, sl
   25018:	mov	sl, r8
   2501c:	ldr	r8, [fp, #24]
   25020:	ldr	r0, [r3, r5]
   25024:	mov	ip, r8
   25028:	ldr	r8, [sp, #24]
   2502c:	mla	r9, r0, r6, r1
   25030:	add	r6, sp, #56	; 0x38
   25034:	subs	r7, r7, #1
   25038:	add	r5, r5, #4
   2503c:	beq	24eac <ReadDataSlabN+0x3574>
   25040:	ldr	r0, [r8, r5]
   25044:	ldr	r1, [sp, #36]	; 0x24
   25048:	add	r0, r0, #1
   2504c:	str	r0, [r8, r5]
   25050:	ldr	r1, [r1, r5]
   25054:	sdiv	r2, r0, r1
   25058:	mls	r0, r2, r1, r0
   2505c:	cmp	r0, #0
   25060:	bne	250d4 <ReadDataSlabN+0x379c>
   25064:	mov	r0, #0
   25068:	str	r0, [r8, r5]
   2506c:	ldr	r0, [sp, #32]
   25070:	ldr	r4, [r0, r5]
   25074:	sdiv	r0, r9, r4
   25078:	mls	sl, r0, r4, r9
   2507c:	cmp	sl, #0
   25080:	bne	24fe0 <ReadDataSlabN+0x36a8>
   25084:	ldr	r0, [r3, r5]
   25088:	cmp	r0, #0
   2508c:	beq	250cc <ReadDataSlabN+0x3794>
   25090:	ldr	r1, [sp, #52]	; 0x34
   25094:	ldr	r4, [r6, r5]
   25098:	ldr	sl, [sp, #48]	; 0x30
   2509c:	mov	r2, #1
   250a0:	mov	r6, ip
   250a4:	mul	r0, r0, r1
   250a8:	mul	r1, r0, r4
   250ac:	ldr	r0, [sl]
   250b0:	bl	1a2c <fseek@plt>
   250b4:	ldr	r3, [sp, #28]
   250b8:	mov	ip, r6
   250bc:	add	r6, sp, #56	; 0x38
   250c0:	ldr	r0, [r3, r5]
   250c4:	mla	r9, r0, r4, r9
   250c8:	b	25034 <ReadDataSlabN+0x36fc>
   250cc:	ldr	sl, [sp, #48]	; 0x30
   250d0:	b	25034 <ReadDataSlabN+0x36fc>
   250d4:	ldr	r0, [sp, #8]
   250d8:	mov	r2, #1
   250dc:	ldr	r4, [r0, r5]
   250e0:	ldr	r0, [sp, #52]	; 0x34
   250e4:	mov	r5, ip
   250e8:	mul	r1, r4, r0
   250ec:	ldr	r0, [sl]
   250f0:	bl	1a2c <fseek@plt>
   250f4:	mov	ip, r5
   250f8:	add	r9, r4, r9
   250fc:	b	24eac <ReadDataSlabN+0x3574>
   25100:	ldr	r0, [sp, #20]
   25104:	sub	r1, fp, #72	; 0x48
   25108:	cmp	r0, #1
   2510c:	ldr	r0, [fp, #16]
   25110:	blt	25bc4 <ReadDataSlabN+0x428c>
   25114:	ldr	r3, [fp, #24]
   25118:	add	r2, sp, #96	; 0x60
   2511c:	mov	r5, #0
   25120:	orr	r2, r2, #4
   25124:	mov	r8, r2
   25128:	orr	r2, r6, #4
   2512c:	str	r2, [sp, #32]
   25130:	str	r8, [sp, #24]
   25134:	add	r3, r3, #4
   25138:	str	r3, [sp, #36]	; 0x24
   2513c:	add	r3, r0, #4
   25140:	ldr	r0, [fp, #8]
   25144:	str	r3, [sp, #28]
   25148:	sub	r0, r0, #1
   2514c:	str	r0, [sp, #12]
   25150:	orr	r0, r1, #4
   25154:	str	r0, [sp, #8]
   25158:	b	2517c <ReadDataSlabN+0x3844>
   2515c:	ldr	ip, [fp, #24]
   25160:	ldr	r0, [ip]
   25164:	ldr	r5, [sp, #16]
   25168:	ldr	r1, [sp, #20]
   2516c:	add	r5, r0, r5
   25170:	mov	r0, #0
   25174:	cmp	r5, r1
   25178:	bge	219bc <ReadDataSlabN+0x84>
   2517c:	ldr	r4, [fp, #16]
   25180:	ldr	r0, [r4]
   25184:	cmp	r0, #0
   25188:	beq	251b0 <ReadDataSlabN+0x3878>
   2518c:	ldr	r1, [sp, #52]	; 0x34
   25190:	ldr	sl, [sp, #48]	; 0x30
   25194:	mov	r2, #1
   25198:	mul	r1, r0, r1
   2519c:	ldr	r0, [sl]
   251a0:	bl	1a2c <fseek@plt>
   251a4:	ldr	r0, [r4]
   251a8:	add	r9, r0, r9
   251ac:	b	251b8 <ReadDataSlabN+0x3880>
   251b0:	ldr	sl, [sp, #48]	; 0x30
   251b4:	mov	r0, #0
   251b8:	ldr	r8, [fp, #24]
   251bc:	ldr	r4, [sp, #44]	; 0x2c
   251c0:	str	r5, [sp, #16]
   251c4:	ldr	r1, [r8]
   251c8:	cmp	r1, #0
   251cc:	ble	25240 <ReadDataSlabN+0x3908>
   251d0:	ldr	r0, [sp, #40]	; 0x28
   251d4:	ldr	r6, [sp, #52]	; 0x34
   251d8:	ldr	r8, [fp, #20]
   251dc:	mov	r7, #0
   251e0:	add	r5, r0, r5, lsl #2
   251e4:	mov	r0, sl
   251e8:	mov	r1, r5
   251ec:	mov	r2, r4
   251f0:	mov	r3, #1
   251f4:	bl	11690 <ReadInt32Data>
   251f8:	ldr	r0, [r8]
   251fc:	mov	r2, #1
   25200:	sub	r0, r0, #1
   25204:	mul	r1, r0, r6
   25208:	ldr	r0, [sl]
   2520c:	bl	1a2c <fseek@plt>
   25210:	ldr	r0, [fp, #24]
   25214:	ldr	r2, [r8]
   25218:	add	r7, r7, #1
   2521c:	add	r5, r5, #4
   25220:	ldr	r1, [r0]
   25224:	add	r9, r2, r9
   25228:	cmp	r7, r1
   2522c:	blt	251e4 <ReadDataSlabN+0x38ac>
   25230:	ldr	r0, [fp, #16]
   25234:	add	r6, sp, #56	; 0x38
   25238:	ldr	r0, [r0]
   2523c:	b	25248 <ReadDataSlabN+0x3910>
   25240:	ldr	r2, [fp, #20]
   25244:	ldr	r2, [r2]
   25248:	ldr	r3, [fp, #12]
   2524c:	ldr	r3, [r3]
   25250:	mls	r1, r2, r1, r3
   25254:	mov	r2, #1
   25258:	sub	r4, r1, r0
   2525c:	ldr	r0, [sp, #52]	; 0x34
   25260:	mul	r1, r4, r0
   25264:	ldr	r0, [sl]
   25268:	bl	1a2c <fseek@plt>
   2526c:	ldr	r0, [fp, #8]
   25270:	ldr	r8, [sp, #24]
   25274:	add	r9, r4, r9
   25278:	cmp	r0, #2
   2527c:	blt	2515c <ReadDataSlabN+0x3824>
   25280:	ldr	r7, [sp, #12]
   25284:	ldr	r3, [sp, #28]
   25288:	ldr	ip, [fp, #24]
   2528c:	mov	r5, #0
   25290:	b	252f4 <ReadDataSlabN+0x39bc>
   25294:	add	r0, sp, #56	; 0x38
   25298:	sub	r1, r4, sl
   2529c:	ldr	r8, [sp, #48]	; 0x30
   252a0:	mov	r2, #1
   252a4:	ldr	r6, [r0, r5]
   252a8:	ldr	r0, [r3, r5]
   252ac:	mla	r0, r0, r6, r1
   252b0:	ldr	r1, [sp, #52]	; 0x34
   252b4:	mul	r1, r0, r1
   252b8:	ldr	r0, [r8]
   252bc:	bl	1a2c <fseek@plt>
   252c0:	add	r1, r4, r9
   252c4:	ldr	r3, [sp, #28]
   252c8:	sub	r1, r1, sl
   252cc:	mov	sl, r8
   252d0:	ldr	r8, [fp, #24]
   252d4:	ldr	r0, [r3, r5]
   252d8:	mov	ip, r8
   252dc:	ldr	r8, [sp, #24]
   252e0:	mla	r9, r0, r6, r1
   252e4:	add	r6, sp, #56	; 0x38
   252e8:	subs	r7, r7, #1
   252ec:	add	r5, r5, #4
   252f0:	beq	25160 <ReadDataSlabN+0x3828>
   252f4:	ldr	r0, [r8, r5]
   252f8:	ldr	r1, [sp, #36]	; 0x24
   252fc:	add	r0, r0, #1
   25300:	str	r0, [r8, r5]
   25304:	ldr	r1, [r1, r5]
   25308:	sdiv	r2, r0, r1
   2530c:	mls	r0, r2, r1, r0
   25310:	cmp	r0, #0
   25314:	bne	25388 <ReadDataSlabN+0x3a50>
   25318:	mov	r0, #0
   2531c:	str	r0, [r8, r5]
   25320:	ldr	r0, [sp, #32]
   25324:	ldr	r4, [r0, r5]
   25328:	sdiv	r0, r9, r4
   2532c:	mls	sl, r0, r4, r9
   25330:	cmp	sl, #0
   25334:	bne	25294 <ReadDataSlabN+0x395c>
   25338:	ldr	r0, [r3, r5]
   2533c:	cmp	r0, #0
   25340:	beq	25380 <ReadDataSlabN+0x3a48>
   25344:	ldr	r1, [sp, #52]	; 0x34
   25348:	ldr	r4, [r6, r5]
   2534c:	ldr	sl, [sp, #48]	; 0x30
   25350:	mov	r2, #1
   25354:	mov	r6, ip
   25358:	mul	r0, r0, r1
   2535c:	mul	r1, r0, r4
   25360:	ldr	r0, [sl]
   25364:	bl	1a2c <fseek@plt>
   25368:	ldr	r3, [sp, #28]
   2536c:	mov	ip, r6
   25370:	add	r6, sp, #56	; 0x38
   25374:	ldr	r0, [r3, r5]
   25378:	mla	r9, r0, r4, r9
   2537c:	b	252e8 <ReadDataSlabN+0x39b0>
   25380:	ldr	sl, [sp, #48]	; 0x30
   25384:	b	252e8 <ReadDataSlabN+0x39b0>
   25388:	ldr	r0, [sp, #8]
   2538c:	mov	r2, #1
   25390:	ldr	r4, [r0, r5]
   25394:	ldr	r0, [sp, #52]	; 0x34
   25398:	mov	r5, ip
   2539c:	mul	r1, r4, r0
   253a0:	ldr	r0, [sl]
   253a4:	bl	1a2c <fseek@plt>
   253a8:	mov	ip, r5
   253ac:	add	r9, r4, r9
   253b0:	b	25160 <ReadDataSlabN+0x3828>
   253b4:	ldr	r0, [sp, #20]
   253b8:	sub	r1, fp, #72	; 0x48
   253bc:	cmp	r0, #1
   253c0:	ldr	r0, [fp, #16]
   253c4:	blt	25bc4 <ReadDataSlabN+0x428c>
   253c8:	ldr	r3, [fp, #24]
   253cc:	add	r2, sp, #96	; 0x60
   253d0:	mov	r5, #0
   253d4:	orr	r2, r2, #4
   253d8:	mov	r8, r2
   253dc:	orr	r2, r6, #4
   253e0:	str	r2, [sp, #32]
   253e4:	str	r8, [sp, #24]
   253e8:	add	r3, r3, #4
   253ec:	str	r3, [sp, #36]	; 0x24
   253f0:	add	r3, r0, #4
   253f4:	ldr	r0, [fp, #8]
   253f8:	str	r3, [sp, #28]
   253fc:	sub	r0, r0, #1
   25400:	str	r0, [sp, #12]
   25404:	orr	r0, r1, #4
   25408:	str	r0, [sp, #8]
   2540c:	b	25430 <ReadDataSlabN+0x3af8>
   25410:	ldr	ip, [fp, #24]
   25414:	ldr	r0, [ip]
   25418:	ldr	r5, [sp, #16]
   2541c:	ldr	r1, [sp, #20]
   25420:	add	r5, r0, r5
   25424:	mov	r0, #0
   25428:	cmp	r5, r1
   2542c:	bge	219bc <ReadDataSlabN+0x84>
   25430:	ldr	r4, [fp, #16]
   25434:	ldr	r0, [r4]
   25438:	cmp	r0, #0
   2543c:	beq	25464 <ReadDataSlabN+0x3b2c>
   25440:	ldr	r1, [sp, #52]	; 0x34
   25444:	ldr	sl, [sp, #48]	; 0x30
   25448:	mov	r2, #1
   2544c:	mul	r1, r0, r1
   25450:	ldr	r0, [sl]
   25454:	bl	1a2c <fseek@plt>
   25458:	ldr	r0, [r4]
   2545c:	add	r9, r0, r9
   25460:	b	2546c <ReadDataSlabN+0x3b34>
   25464:	ldr	sl, [sp, #48]	; 0x30
   25468:	mov	r0, #0
   2546c:	ldr	r8, [fp, #24]
   25470:	ldr	r4, [sp, #44]	; 0x2c
   25474:	str	r5, [sp, #16]
   25478:	ldr	r1, [r8]
   2547c:	cmp	r1, #0
   25480:	ble	254f4 <ReadDataSlabN+0x3bbc>
   25484:	ldr	r0, [sp, #40]	; 0x28
   25488:	ldr	r6, [sp, #52]	; 0x34
   2548c:	ldr	r8, [fp, #20]
   25490:	mov	r7, #0
   25494:	add	r5, r0, r5, lsl #2
   25498:	mov	r0, sl
   2549c:	mov	r1, r5
   254a0:	mov	r2, r4
   254a4:	mov	r3, #1
   254a8:	bl	1433c <ReadUInt32Data>
   254ac:	ldr	r0, [r8]
   254b0:	mov	r2, #1
   254b4:	sub	r0, r0, #1
   254b8:	mul	r1, r0, r6
   254bc:	ldr	r0, [sl]
   254c0:	bl	1a2c <fseek@plt>
   254c4:	ldr	r0, [fp, #24]
   254c8:	ldr	r2, [r8]
   254cc:	add	r7, r7, #1
   254d0:	add	r5, r5, #4
   254d4:	ldr	r1, [r0]
   254d8:	add	r9, r2, r9
   254dc:	cmp	r7, r1
   254e0:	blt	25498 <ReadDataSlabN+0x3b60>
   254e4:	ldr	r0, [fp, #16]
   254e8:	add	r6, sp, #56	; 0x38
   254ec:	ldr	r0, [r0]
   254f0:	b	254fc <ReadDataSlabN+0x3bc4>
   254f4:	ldr	r2, [fp, #20]
   254f8:	ldr	r2, [r2]
   254fc:	ldr	r3, [fp, #12]
   25500:	ldr	r3, [r3]
   25504:	mls	r1, r2, r1, r3
   25508:	mov	r2, #1
   2550c:	sub	r4, r1, r0
   25510:	ldr	r0, [sp, #52]	; 0x34
   25514:	mul	r1, r4, r0
   25518:	ldr	r0, [sl]
   2551c:	bl	1a2c <fseek@plt>
   25520:	ldr	r0, [fp, #8]
   25524:	ldr	r8, [sp, #24]
   25528:	add	r9, r4, r9
   2552c:	cmp	r0, #2
   25530:	blt	25410 <ReadDataSlabN+0x3ad8>
   25534:	ldr	r7, [sp, #12]
   25538:	ldr	r3, [sp, #28]
   2553c:	ldr	ip, [fp, #24]
   25540:	mov	r5, #0
   25544:	b	255a8 <ReadDataSlabN+0x3c70>
   25548:	add	r0, sp, #56	; 0x38
   2554c:	sub	r1, r4, sl
   25550:	ldr	r8, [sp, #48]	; 0x30
   25554:	mov	r2, #1
   25558:	ldr	r6, [r0, r5]
   2555c:	ldr	r0, [r3, r5]
   25560:	mla	r0, r0, r6, r1
   25564:	ldr	r1, [sp, #52]	; 0x34
   25568:	mul	r1, r0, r1
   2556c:	ldr	r0, [r8]
   25570:	bl	1a2c <fseek@plt>
   25574:	add	r1, r4, r9
   25578:	ldr	r3, [sp, #28]
   2557c:	sub	r1, r1, sl
   25580:	mov	sl, r8
   25584:	ldr	r8, [fp, #24]
   25588:	ldr	r0, [r3, r5]
   2558c:	mov	ip, r8
   25590:	ldr	r8, [sp, #24]
   25594:	mla	r9, r0, r6, r1
   25598:	add	r6, sp, #56	; 0x38
   2559c:	subs	r7, r7, #1
   255a0:	add	r5, r5, #4
   255a4:	beq	25414 <ReadDataSlabN+0x3adc>
   255a8:	ldr	r0, [r8, r5]
   255ac:	ldr	r1, [sp, #36]	; 0x24
   255b0:	add	r0, r0, #1
   255b4:	str	r0, [r8, r5]
   255b8:	ldr	r1, [r1, r5]
   255bc:	sdiv	r2, r0, r1
   255c0:	mls	r0, r2, r1, r0
   255c4:	cmp	r0, #0
   255c8:	bne	2563c <ReadDataSlabN+0x3d04>
   255cc:	mov	r0, #0
   255d0:	str	r0, [r8, r5]
   255d4:	ldr	r0, [sp, #32]
   255d8:	ldr	r4, [r0, r5]
   255dc:	sdiv	r0, r9, r4
   255e0:	mls	sl, r0, r4, r9
   255e4:	cmp	sl, #0
   255e8:	bne	25548 <ReadDataSlabN+0x3c10>
   255ec:	ldr	r0, [r3, r5]
   255f0:	cmp	r0, #0
   255f4:	beq	25634 <ReadDataSlabN+0x3cfc>
   255f8:	ldr	r1, [sp, #52]	; 0x34
   255fc:	ldr	r4, [r6, r5]
   25600:	ldr	sl, [sp, #48]	; 0x30
   25604:	mov	r2, #1
   25608:	mov	r6, ip
   2560c:	mul	r0, r0, r1
   25610:	mul	r1, r0, r4
   25614:	ldr	r0, [sl]
   25618:	bl	1a2c <fseek@plt>
   2561c:	ldr	r3, [sp, #28]
   25620:	mov	ip, r6
   25624:	add	r6, sp, #56	; 0x38
   25628:	ldr	r0, [r3, r5]
   2562c:	mla	r9, r0, r4, r9
   25630:	b	2559c <ReadDataSlabN+0x3c64>
   25634:	ldr	sl, [sp, #48]	; 0x30
   25638:	b	2559c <ReadDataSlabN+0x3c64>
   2563c:	ldr	r0, [sp, #8]
   25640:	mov	r2, #1
   25644:	ldr	r4, [r0, r5]
   25648:	ldr	r0, [sp, #52]	; 0x34
   2564c:	mov	r5, ip
   25650:	mul	r1, r4, r0
   25654:	ldr	r0, [sl]
   25658:	bl	1a2c <fseek@plt>
   2565c:	mov	ip, r5
   25660:	add	r9, r4, r9
   25664:	b	25414 <ReadDataSlabN+0x3adc>
   25668:	ldr	r0, [sp, #20]
   2566c:	sub	r1, fp, #72	; 0x48
   25670:	cmp	r0, #1
   25674:	ldr	r0, [fp, #16]
   25678:	blt	25bc4 <ReadDataSlabN+0x428c>
   2567c:	add	r2, sp, #96	; 0x60
   25680:	add	r0, r0, #4
   25684:	mov	r7, #0
   25688:	mov	r9, r8
   2568c:	orr	r6, r2, #4
   25690:	ldr	r2, [fp, #24]
   25694:	str	r0, [sp, #24]
   25698:	ldr	r0, [fp, #8]
   2569c:	str	r6, [sp, #28]
   256a0:	add	r2, r2, #4
   256a4:	sub	r0, r0, #1
   256a8:	str	r2, [sp, #36]	; 0x24
   256ac:	orr	r2, r4, #4
   256b0:	str	r0, [sp, #12]
   256b4:	orr	r0, r1, #4
   256b8:	str	r2, [sp, #32]
   256bc:	str	r0, [sp, #8]
   256c0:	b	256e4 <ReadDataSlabN+0x3dac>
   256c4:	ldr	r8, [fp, #24]
   256c8:	ldr	r0, [r8]
   256cc:	ldr	r7, [sp, #16]
   256d0:	ldr	r1, [sp, #20]
   256d4:	add	r7, r0, r7
   256d8:	mov	r0, #0
   256dc:	cmp	r7, r1
   256e0:	bge	219bc <ReadDataSlabN+0x84>
   256e4:	ldr	r5, [fp, #16]
   256e8:	ldr	r0, [r5]
   256ec:	cmp	r0, #0
   256f0:	beq	25718 <ReadDataSlabN+0x3de0>
   256f4:	ldr	r1, [sp, #52]	; 0x34
   256f8:	mov	r2, #1
   256fc:	mul	r1, r0, r1
   25700:	ldr	r0, [sp, #48]	; 0x30
   25704:	ldr	r0, [r0]
   25708:	bl	1a2c <fseek@plt>
   2570c:	ldr	r0, [r5]
   25710:	add	r9, r0, r9
   25714:	b	2571c <ReadDataSlabN+0x3de4>
   25718:	mov	r0, #0
   2571c:	ldr	r8, [fp, #24]
   25720:	ldr	r2, [sp, #44]	; 0x2c
   25724:	str	r7, [sp, #16]
   25728:	ldr	r1, [r8]
   2572c:	cmp	r1, #0
   25730:	ble	257b0 <ReadDataSlabN+0x3e78>
   25734:	ldr	r0, [sp, #40]	; 0x28
   25738:	mov	r6, r8
   2573c:	ldr	sl, [fp, #20]
   25740:	ldr	r8, [sp, #48]	; 0x30
   25744:	add	r5, r0, r7, lsl #3
   25748:	mov	r7, #0
   2574c:	mov	r0, r8
   25750:	mov	r1, r5
   25754:	mov	r3, #1
   25758:	mov	r4, r2
   2575c:	bl	bc30 <ReadInt64Data>
   25760:	ldr	r0, [sl]
   25764:	ldr	r1, [sp, #52]	; 0x34
   25768:	mov	r2, #1
   2576c:	sub	r0, r0, #1
   25770:	mul	r1, r0, r1
   25774:	ldr	r0, [r8]
   25778:	bl	1a2c <fseek@plt>
   2577c:	mov	r2, r4
   25780:	ldr	r4, [sl]
   25784:	ldr	r1, [r6]
   25788:	add	r7, r7, #1
   2578c:	add	r5, r5, #8
   25790:	add	r9, r4, r9
   25794:	cmp	r7, r1
   25798:	blt	2574c <ReadDataSlabN+0x3e14>
   2579c:	ldr	r0, [fp, #16]
   257a0:	ldr	r6, [sp, #28]
   257a4:	ldr	sl, [sp, #52]	; 0x34
   257a8:	ldr	r0, [r0]
   257ac:	b	257c0 <ReadDataSlabN+0x3e88>
   257b0:	ldr	r2, [fp, #20]
   257b4:	ldr	sl, [sp, #52]	; 0x34
   257b8:	ldr	r8, [sp, #48]	; 0x30
   257bc:	ldr	r4, [r2]
   257c0:	ldr	r3, [fp, #12]
   257c4:	mov	r2, #1
   257c8:	ldr	r3, [r3]
   257cc:	mls	r1, r4, r1, r3
   257d0:	sub	r5, r1, r0
   257d4:	ldr	r0, [r8]
   257d8:	mul	r1, r5, sl
   257dc:	bl	1a2c <fseek@plt>
   257e0:	ldr	r0, [fp, #8]
   257e4:	add	r9, r5, r9
   257e8:	cmp	r0, #2
   257ec:	blt	256c4 <ReadDataSlabN+0x3d8c>
   257f0:	ldr	r7, [sp, #12]
   257f4:	ldr	r3, [sp, #24]
   257f8:	ldr	r8, [fp, #24]
   257fc:	mov	r5, #0
   25800:	b	25860 <ReadDataSlabN+0x3f28>
   25804:	add	r0, sp, #56	; 0x38
   25808:	mov	r8, r9
   2580c:	sub	r1, r4, sl
   25810:	ldr	r9, [sp, #52]	; 0x34
   25814:	mov	r2, #1
   25818:	ldr	r6, [r0, r5]
   2581c:	ldr	r0, [r3, r5]
   25820:	mla	r0, r0, r6, r1
   25824:	mul	r1, r0, r9
   25828:	ldr	r0, [sp, #48]	; 0x30
   2582c:	ldr	r0, [r0]
   25830:	bl	1a2c <fseek@plt>
   25834:	ldr	r3, [sp, #24]
   25838:	add	r1, r4, r8
   2583c:	ldr	r8, [fp, #24]
   25840:	sub	r1, r1, sl
   25844:	mov	sl, r9
   25848:	ldr	r0, [r3, r5]
   2584c:	mla	r9, r0, r6, r1
   25850:	ldr	r6, [sp, #28]
   25854:	subs	r7, r7, #1
   25858:	add	r5, r5, #4
   2585c:	beq	256c8 <ReadDataSlabN+0x3d90>
   25860:	ldr	r0, [r6, r5]
   25864:	ldr	r1, [sp, #36]	; 0x24
   25868:	add	r0, r0, #1
   2586c:	str	r0, [r6, r5]
   25870:	ldr	r1, [r1, r5]
   25874:	sdiv	r2, r0, r1
   25878:	mls	r0, r2, r1, r0
   2587c:	cmp	r0, #0
   25880:	bne	258ec <ReadDataSlabN+0x3fb4>
   25884:	mov	r0, #0
   25888:	str	r0, [r6, r5]
   2588c:	ldr	r0, [sp, #32]
   25890:	ldr	r4, [r0, r5]
   25894:	sdiv	r0, r9, r4
   25898:	mls	sl, r0, r4, r9
   2589c:	cmp	sl, #0
   258a0:	bne	25804 <ReadDataSlabN+0x3ecc>
   258a4:	ldr	r0, [r3, r5]
   258a8:	cmp	r0, #0
   258ac:	beq	258e4 <ReadDataSlabN+0x3fac>
   258b0:	ldr	sl, [sp, #52]	; 0x34
   258b4:	add	r1, sp, #56	; 0x38
   258b8:	mov	r2, #1
   258bc:	ldr	r6, [r1, r5]
   258c0:	mul	r0, r0, sl
   258c4:	mul	r1, r0, r6
   258c8:	ldr	r0, [sp, #48]	; 0x30
   258cc:	ldr	r0, [r0]
   258d0:	bl	1a2c <fseek@plt>
   258d4:	ldr	r3, [sp, #24]
   258d8:	ldr	r0, [r3, r5]
   258dc:	mla	r9, r0, r6, r9
   258e0:	b	25850 <ReadDataSlabN+0x3f18>
   258e4:	ldr	sl, [sp, #52]	; 0x34
   258e8:	b	25854 <ReadDataSlabN+0x3f1c>
   258ec:	ldr	r0, [sp, #8]
   258f0:	mov	r2, #1
   258f4:	ldr	r5, [r0, r5]
   258f8:	ldr	r0, [sp, #48]	; 0x30
   258fc:	ldr	r0, [r0]
   25900:	mul	r1, r5, sl
   25904:	bl	1a2c <fseek@plt>
   25908:	add	r9, r5, r9
   2590c:	b	256c8 <ReadDataSlabN+0x3d90>
   25910:	ldr	r0, [sp, #20]
   25914:	sub	r1, fp, #72	; 0x48
   25918:	cmp	r0, #1
   2591c:	ldr	r0, [fp, #16]
   25920:	blt	25bc4 <ReadDataSlabN+0x428c>
   25924:	ldr	r3, [fp, #24]
   25928:	add	r2, sp, #96	; 0x60
   2592c:	mov	r5, #0
   25930:	orr	r2, r2, #4
   25934:	mov	r8, r2
   25938:	orr	r2, r6, #4
   2593c:	str	r2, [sp, #32]
   25940:	str	r8, [sp, #24]
   25944:	add	r3, r3, #4
   25948:	str	r3, [sp, #36]	; 0x24
   2594c:	add	r3, r0, #4
   25950:	ldr	r0, [fp, #8]
   25954:	str	r3, [sp, #28]
   25958:	sub	r0, r0, #1
   2595c:	str	r0, [sp, #12]
   25960:	orr	r0, r1, #4
   25964:	str	r0, [sp, #8]
   25968:	b	2598c <ReadDataSlabN+0x4054>
   2596c:	ldr	ip, [fp, #24]
   25970:	ldr	r0, [ip]
   25974:	ldr	r5, [sp, #16]
   25978:	ldr	r1, [sp, #20]
   2597c:	add	r5, r0, r5
   25980:	mov	r0, #0
   25984:	cmp	r5, r1
   25988:	bge	219bc <ReadDataSlabN+0x84>
   2598c:	ldr	r4, [fp, #16]
   25990:	ldr	r0, [r4]
   25994:	cmp	r0, #0
   25998:	beq	259c0 <ReadDataSlabN+0x4088>
   2599c:	ldr	r1, [sp, #52]	; 0x34
   259a0:	ldr	sl, [sp, #48]	; 0x30
   259a4:	mov	r2, #1
   259a8:	mul	r1, r0, r1
   259ac:	ldr	r0, [sl]
   259b0:	bl	1a2c <fseek@plt>
   259b4:	ldr	r0, [r4]
   259b8:	add	r9, r0, r9
   259bc:	b	259c8 <ReadDataSlabN+0x4090>
   259c0:	ldr	sl, [sp, #48]	; 0x30
   259c4:	mov	r0, #0
   259c8:	ldr	r8, [fp, #24]
   259cc:	ldr	r4, [sp, #44]	; 0x2c
   259d0:	str	r5, [sp, #16]
   259d4:	ldr	r1, [r8]
   259d8:	cmp	r1, #0
   259dc:	ble	25a50 <ReadDataSlabN+0x4118>
   259e0:	ldr	r0, [sp, #40]	; 0x28
   259e4:	ldr	r6, [sp, #52]	; 0x34
   259e8:	ldr	r8, [fp, #20]
   259ec:	mov	r7, #0
   259f0:	add	r5, r0, r5, lsl #3
   259f4:	mov	r0, sl
   259f8:	mov	r1, r5
   259fc:	mov	r2, r4
   25a00:	mov	r3, #1
   25a04:	bl	e960 <ReadUInt64Data>
   25a08:	ldr	r0, [r8]
   25a0c:	mov	r2, #1
   25a10:	sub	r0, r0, #1
   25a14:	mul	r1, r0, r6
   25a18:	ldr	r0, [sl]
   25a1c:	bl	1a2c <fseek@plt>
   25a20:	ldr	r0, [fp, #24]
   25a24:	ldr	r2, [r8]
   25a28:	add	r7, r7, #1
   25a2c:	add	r5, r5, #8
   25a30:	ldr	r1, [r0]
   25a34:	add	r9, r2, r9
   25a38:	cmp	r7, r1
   25a3c:	blt	259f4 <ReadDataSlabN+0x40bc>
   25a40:	ldr	r0, [fp, #16]
   25a44:	add	r6, sp, #56	; 0x38
   25a48:	ldr	r0, [r0]
   25a4c:	b	25a58 <ReadDataSlabN+0x4120>
   25a50:	ldr	r2, [fp, #20]
   25a54:	ldr	r2, [r2]
   25a58:	ldr	r3, [fp, #12]
   25a5c:	ldr	r3, [r3]
   25a60:	mls	r1, r2, r1, r3
   25a64:	mov	r2, #1
   25a68:	sub	r4, r1, r0
   25a6c:	ldr	r0, [sp, #52]	; 0x34
   25a70:	mul	r1, r4, r0
   25a74:	ldr	r0, [sl]
   25a78:	bl	1a2c <fseek@plt>
   25a7c:	ldr	r0, [fp, #8]
   25a80:	ldr	r8, [sp, #24]
   25a84:	add	r9, r4, r9
   25a88:	cmp	r0, #2
   25a8c:	blt	2596c <ReadDataSlabN+0x4034>
   25a90:	ldr	r7, [sp, #12]
   25a94:	ldr	r3, [sp, #28]
   25a98:	ldr	ip, [fp, #24]
   25a9c:	mov	r5, #0
   25aa0:	b	25b04 <ReadDataSlabN+0x41cc>
   25aa4:	add	r0, sp, #56	; 0x38
   25aa8:	sub	r1, r4, sl
   25aac:	ldr	r8, [sp, #48]	; 0x30
   25ab0:	mov	r2, #1
   25ab4:	ldr	r6, [r0, r5]
   25ab8:	ldr	r0, [r3, r5]
   25abc:	mla	r0, r0, r6, r1
   25ac0:	ldr	r1, [sp, #52]	; 0x34
   25ac4:	mul	r1, r0, r1
   25ac8:	ldr	r0, [r8]
   25acc:	bl	1a2c <fseek@plt>
   25ad0:	add	r1, r4, r9
   25ad4:	ldr	r3, [sp, #28]
   25ad8:	sub	r1, r1, sl
   25adc:	mov	sl, r8
   25ae0:	ldr	r8, [fp, #24]
   25ae4:	ldr	r0, [r3, r5]
   25ae8:	mov	ip, r8
   25aec:	ldr	r8, [sp, #24]
   25af0:	mla	r9, r0, r6, r1
   25af4:	add	r6, sp, #56	; 0x38
   25af8:	subs	r7, r7, #1
   25afc:	add	r5, r5, #4
   25b00:	beq	25970 <ReadDataSlabN+0x4038>
   25b04:	ldr	r0, [r8, r5]
   25b08:	ldr	r1, [sp, #36]	; 0x24
   25b0c:	add	r0, r0, #1
   25b10:	str	r0, [r8, r5]
   25b14:	ldr	r1, [r1, r5]
   25b18:	sdiv	r2, r0, r1
   25b1c:	mls	r0, r2, r1, r0
   25b20:	cmp	r0, #0
   25b24:	bne	25b98 <ReadDataSlabN+0x4260>
   25b28:	mov	r0, #0
   25b2c:	str	r0, [r8, r5]
   25b30:	ldr	r0, [sp, #32]
   25b34:	ldr	r4, [r0, r5]
   25b38:	sdiv	r0, r9, r4
   25b3c:	mls	sl, r0, r4, r9
   25b40:	cmp	sl, #0
   25b44:	bne	25aa4 <ReadDataSlabN+0x416c>
   25b48:	ldr	r0, [r3, r5]
   25b4c:	cmp	r0, #0
   25b50:	beq	25b90 <ReadDataSlabN+0x4258>
   25b54:	ldr	r1, [sp, #52]	; 0x34
   25b58:	ldr	r4, [r6, r5]
   25b5c:	ldr	sl, [sp, #48]	; 0x30
   25b60:	mov	r2, #1
   25b64:	mov	r6, ip
   25b68:	mul	r0, r0, r1
   25b6c:	mul	r1, r0, r4
   25b70:	ldr	r0, [sl]
   25b74:	bl	1a2c <fseek@plt>
   25b78:	ldr	r3, [sp, #28]
   25b7c:	mov	ip, r6
   25b80:	add	r6, sp, #56	; 0x38
   25b84:	ldr	r0, [r3, r5]
   25b88:	mla	r9, r0, r4, r9
   25b8c:	b	25af8 <ReadDataSlabN+0x41c0>
   25b90:	ldr	sl, [sp, #48]	; 0x30
   25b94:	b	25af8 <ReadDataSlabN+0x41c0>
   25b98:	ldr	r0, [sp, #8]
   25b9c:	mov	r2, #1
   25ba0:	ldr	r4, [r0, r5]
   25ba4:	ldr	r0, [sp, #52]	; 0x34
   25ba8:	mov	r5, ip
   25bac:	mul	r1, r4, r0
   25bb0:	ldr	r0, [sl]
   25bb4:	bl	1a2c <fseek@plt>
   25bb8:	mov	ip, r5
   25bbc:	add	r9, r4, r9
   25bc0:	b	25970 <ReadDataSlabN+0x4038>
   25bc4:	mov	r0, #0
   25bc8:	sub	sp, fp, #28
   25bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025bd0 <ReadCompressedDataSlabN>:
   25bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25bd4:	add	fp, sp, #28
   25bd8:	sub	sp, sp, #236	; 0xec
   25bdc:	vmov.i32	q8, #0	; 0x00000000
   25be0:	sub	r5, fp, #72	; 0x48
   25be4:	mov	r6, r0
   25be8:	mov	r7, r2
   25bec:	mov	r0, #36	; 0x24
   25bf0:	mov	r8, r3
   25bf4:	mov	r3, #0
   25bf8:	mov	r2, r5
   25bfc:	cmp	r6, #0
   25c00:	str	r3, [fp, #-40]	; 0xffffffd8
   25c04:	str	r3, [fp, #-80]	; 0xffffffb0
   25c08:	str	r3, [sp, #144]	; 0x90
   25c0c:	str	r3, [sp, #104]	; 0x68
   25c10:	cmpne	r7, #0
   25c14:	vst1.64	{d16-d17}, [r2], r0
   25c18:	str	r3, [r2]
   25c1c:	add	r2, r5, #16
   25c20:	sub	r5, fp, #112	; 0x70
   25c24:	vst1.64	{d16-d17}, [r2]
   25c28:	add	r2, r5, #16
   25c2c:	vst1.64	{d16-d17}, [r2]
   25c30:	mov	r2, r5
   25c34:	add	r5, sp, #112	; 0x70
   25c38:	vst1.64	{d16-d17}, [r2], r0
   25c3c:	str	r3, [r2]
   25c40:	add	r2, r5, #16
   25c44:	vst1.64	{d16-d17}, [r2]
   25c48:	mov	r2, r5
   25c4c:	vst1.64	{d16-d17}, [r2], r0
   25c50:	add	r0, sp, #56	; 0x38
   25c54:	str	r3, [r2]
   25c58:	add	r2, r0, #32
   25c5c:	vst1.64	{d16-d17}, [r2]
   25c60:	add	r2, r0, #16
   25c64:	vst1.64	{d16-d17}, [r2]
   25c68:	mov	r2, #52	; 0x34
   25c6c:	vst1.64	{d16-d17}, [r0], r2
   25c70:	str	r3, [r0]
   25c74:	mov	r0, #1
   25c78:	bne	25c84 <ReadCompressedDataSlabN+0xb4>
   25c7c:	sub	sp, fp, #28
   25c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c84:	ldr	r2, [fp, #12]
   25c88:	cmp	r2, #10
   25c8c:	bgt	25c7c <ReadCompressedDataSlabN+0xac>
   25c90:	ldr	r2, [fp, #28]
   25c94:	cmp	r2, #0
   25c98:	ldrne	r2, [fp, #24]
   25c9c:	cmpne	r2, #0
   25ca0:	beq	25c7c <ReadCompressedDataSlabN+0xac>
   25ca4:	ldr	sl, [fp, #20]
   25ca8:	cmp	sl, #0
   25cac:	ldrne	r2, [r6]
   25cb0:	cmpne	r2, #0
   25cb4:	beq	25c7c <ReadCompressedDataSlabN+0xac>
   25cb8:	add	r0, sp, #56	; 0x38
   25cbc:	str	r6, [sp, #52]	; 0x34
   25cc0:	str	r7, [sp, #48]	; 0x30
   25cc4:	bl	1948 <inflateCopy@plt>
   25cc8:	sub	r0, r8, #6
   25ccc:	cmp	r0, #9
   25cd0:	bhi	2a2cc <ReadCompressedDataSlabN+0x46fc>
   25cd4:	add	r1, pc, #8
   25cd8:	ldr	r2, [fp, #16]
   25cdc:	ldr	r0, [r1, r0, lsl #2]
   25ce0:	add	pc, r1, r0
   25ce4:	.word	0x00000028
   25ce8:	.word	0x000001ac
   25cec:	.word	0x00000324
   25cf0:	.word	0x0000049c
   25cf4:	.word	0x00000614
   25cf8:	.word	0x0000078c
   25cfc:	.word	0x00000904
   25d00:	.word	0x00000a7c
   25d04:	.word	0x00000bf4
   25d08:	.word	0x00000d6c
   25d0c:	ldr	r7, [fp, #24]
   25d10:	ldr	r0, [r7]
   25d14:	sub	r0, r0, #1
   25d18:	str	r0, [fp, #-72]	; 0xffffffb8
   25d1c:	ldr	r0, [fp, #28]
   25d20:	ldr	r9, [r2]
   25d24:	str	r9, [sp, #112]	; 0x70
   25d28:	ldr	r0, [r0]
   25d2c:	str	r0, [sp, #28]
   25d30:	ldr	r0, [fp, #12]
   25d34:	cmp	r0, #2
   25d38:	blt	281ac <ReadCompressedDataSlabN+0x25dc>
   25d3c:	mov	r1, #0
   25d40:	sub	r5, r2, #4
   25d44:	sub	ip, r2, #12
   25d48:	mov	r3, #1
   25d4c:	mov	lr, #0
   25d50:	mvn	r8, #15
   25d54:	mov	r4, r9
   25d58:	add	r2, sp, #112	; 0x70
   25d5c:	sub	r7, fp, #72	; 0x48
   25d60:	str	r1, [sp, #44]	; 0x2c
   25d64:	b	25db8 <ReadCompressedDataSlabN+0x1e8>
   25d68:	add	r2, sp, #112	; 0x70
   25d6c:	sub	r7, fp, #72	; 0x48
   25d70:	add	ip, ip, #4
   25d74:	str	r6, [r7, r3, lsl #2]
   25d78:	str	r4, [r2, r3, lsl #2]
   25d7c:	ldr	r6, [sp, #44]	; 0x2c
   25d80:	ldr	r1, [sl, r3, lsl #2]
   25d84:	mla	r6, r1, r9, r6
   25d88:	ldr	r1, [fp, #28]
   25d8c:	mov	r9, r4
   25d90:	mov	r4, r0
   25d94:	str	r6, [sp, #44]	; 0x2c
   25d98:	ldr	r6, [sp, #28]
   25d9c:	ldr	r1, [r1, r3, lsl #2]
   25da0:	add	r3, r3, #1
   25da4:	mul	r6, r1, r6
   25da8:	ldr	r1, [fp, #12]
   25dac:	str	r6, [sp, #28]
   25db0:	cmp	r3, r1
   25db4:	beq	281b4 <ReadCompressedDataSlabN+0x25e4>
   25db8:	ldr	r1, [fp, #24]
   25dbc:	add	lr, lr, #1
   25dc0:	cmp	lr, #4
   25dc4:	ldr	r1, [r1, r3, lsl #2]
   25dc8:	str	r4, [r2, r3, lsl #2]
   25dcc:	sub	r6, r1, #1
   25dd0:	ldr	r1, [fp, #16]
   25dd4:	str	r6, [r7, r3, lsl #2]
   25dd8:	ldr	r1, [r1, r3, lsl #2]
   25ddc:	bcs	25dec <ReadCompressedDataSlabN+0x21c>
   25de0:	mov	r0, r1
   25de4:	mov	r2, r3
   25de8:	b	25e78 <ReadCompressedDataSlabN+0x2a8>
   25dec:	vmov.i32	q9, #1	; 0x00000001
   25df0:	vmov.i32	q10, #1	; 0x00000001
   25df4:	vmov.32	d23[1], r1
   25df8:	vmov.i32	q8, #1	; 0x00000001
   25dfc:	bic	r7, lr, #3
   25e00:	mov	r0, r1
   25e04:	bic	sl, r3, #3
   25e08:	mov	r1, ip
   25e0c:	sub	r2, r3, r7
   25e10:	vmov.32	d18[0], r4
   25e14:	vmov.32	d20[0], r6
   25e18:	vorr	d16, d18, d18
   25e1c:	vmov.i32	q9, #1	; 0x00000001
   25e20:	vorr	d18, d20, d20
   25e24:	vld1.32	{d20-d21}, [r1], r8
   25e28:	subs	sl, sl, #4
   25e2c:	vrev64.32	q12, q10
   25e30:	vext.8	q12, q12, q12, #8
   25e34:	vext.8	q11, q11, q12, #12
   25e38:	vmul.i32	q9, q9, q12
   25e3c:	vmul.i32	q8, q11, q8
   25e40:	vorr	q11, q12, q12
   25e44:	bne	25e24 <ReadCompressedDataSlabN+0x254>
   25e48:	vext.8	q11, q9, q8, #8
   25e4c:	vext.8	q12, q8, q8, #8
   25e50:	ldr	sl, [fp, #20]
   25e54:	cmp	lr, r7
   25e58:	vmul.i32	q0, q9, q11
   25e5c:	vmul.i32	q1, q8, q12
   25e60:	vmul.i32	q8, q0, d0[1]
   25e64:	vmul.i32	q9, q1, d2[1]
   25e68:	vmov.32	r6, d16[0]
   25e6c:	vmov.32	r4, d18[0]
   25e70:	beq	25d68 <ReadCompressedDataSlabN+0x198>
   25e74:	vmov.32	r1, d20[0]
   25e78:	mul	r4, r1, r4
   25e7c:	ldr	r1, [r5, r2, lsl #2]
   25e80:	subs	r2, r2, #1
   25e84:	mul	r6, r6, r1
   25e88:	bne	25e78 <ReadCompressedDataSlabN+0x2a8>
   25e8c:	b	25d68 <ReadCompressedDataSlabN+0x198>
   25e90:	ldr	r0, [fp, #24]
   25e94:	mov	r9, #0
   25e98:	ldr	r0, [r0]
   25e9c:	sub	r0, r0, #1
   25ea0:	str	r0, [fp, #-72]	; 0xffffffb8
   25ea4:	ldr	r0, [fp, #28]
   25ea8:	ldr	r8, [r2]
   25eac:	str	r8, [sp, #112]	; 0x70
   25eb0:	ldr	r0, [r0]
   25eb4:	str	r0, [sp, #32]
   25eb8:	ldr	r0, [fp, #12]
   25ebc:	cmp	r0, #2
   25ec0:	blt	26bc8 <ReadCompressedDataSlabN+0xff8>
   25ec4:	sub	r7, r2, #4
   25ec8:	sub	ip, r2, #12
   25ecc:	mov	r3, #1
   25ed0:	mov	r0, #0
   25ed4:	mvn	r5, #15
   25ed8:	mov	r4, r8
   25edc:	mov	r9, #0
   25ee0:	add	r2, sp, #112	; 0x70
   25ee4:	sub	lr, fp, #72	; 0x48
   25ee8:	b	25f34 <ReadCompressedDataSlabN+0x364>
   25eec:	add	r2, sp, #112	; 0x70
   25ef0:	sub	lr, fp, #72	; 0x48
   25ef4:	add	ip, ip, #4
   25ef8:	str	r6, [lr, r3, lsl #2]
   25efc:	str	r4, [r2, r3, lsl #2]
   25f00:	ldr	r6, [sp, #32]
   25f04:	ldr	r1, [sl, r3, lsl #2]
   25f08:	mla	r9, r1, r8, r9
   25f0c:	ldr	r1, [fp, #28]
   25f10:	mov	r8, r4
   25f14:	ldr	r4, [sp, #44]	; 0x2c
   25f18:	ldr	r1, [r1, r3, lsl #2]
   25f1c:	add	r3, r3, #1
   25f20:	mul	r6, r1, r6
   25f24:	ldr	r1, [fp, #12]
   25f28:	str	r6, [sp, #32]
   25f2c:	cmp	r3, r1
   25f30:	beq	26bc8 <ReadCompressedDataSlabN+0xff8>
   25f34:	ldr	r1, [fp, #24]
   25f38:	add	r0, r0, #1
   25f3c:	cmp	r0, #4
   25f40:	ldr	r1, [r1, r3, lsl #2]
   25f44:	str	r4, [r2, r3, lsl #2]
   25f48:	sub	r6, r1, #1
   25f4c:	ldr	r1, [fp, #16]
   25f50:	str	r6, [lr, r3, lsl #2]
   25f54:	ldr	r1, [r1, r3, lsl #2]
   25f58:	str	r1, [sp, #44]	; 0x2c
   25f5c:	bcs	25f68 <ReadCompressedDataSlabN+0x398>
   25f60:	mov	r2, r3
   25f64:	b	25ff0 <ReadCompressedDataSlabN+0x420>
   25f68:	vmov.i32	q9, #1	; 0x00000001
   25f6c:	vmov.i32	q10, #1	; 0x00000001
   25f70:	vmov.32	d23[1], r1
   25f74:	vmov.i32	q8, #1	; 0x00000001
   25f78:	bic	lr, r0, #3
   25f7c:	bic	sl, r3, #3
   25f80:	mov	r1, ip
   25f84:	sub	r2, r3, lr
   25f88:	vmov.32	d18[0], r4
   25f8c:	vmov.32	d20[0], r6
   25f90:	vorr	d16, d18, d18
   25f94:	vmov.i32	q9, #1	; 0x00000001
   25f98:	vorr	d18, d20, d20
   25f9c:	vld1.32	{d20-d21}, [r1], r5
   25fa0:	subs	sl, sl, #4
   25fa4:	vrev64.32	q12, q10
   25fa8:	vext.8	q12, q12, q12, #8
   25fac:	vext.8	q11, q11, q12, #12
   25fb0:	vmul.i32	q9, q9, q12
   25fb4:	vmul.i32	q8, q11, q8
   25fb8:	vorr	q11, q12, q12
   25fbc:	bne	25f9c <ReadCompressedDataSlabN+0x3cc>
   25fc0:	vext.8	q11, q9, q8, #8
   25fc4:	vext.8	q12, q8, q8, #8
   25fc8:	ldr	sl, [fp, #20]
   25fcc:	cmp	r0, lr
   25fd0:	vmul.i32	q0, q9, q11
   25fd4:	vmul.i32	q1, q8, q12
   25fd8:	vmul.i32	q8, q0, d0[1]
   25fdc:	vmul.i32	q9, q1, d2[1]
   25fe0:	vmov.32	r6, d16[0]
   25fe4:	vmov.32	r4, d18[0]
   25fe8:	beq	25eec <ReadCompressedDataSlabN+0x31c>
   25fec:	vmov.32	r1, d20[0]
   25ff0:	mul	r4, r1, r4
   25ff4:	ldr	r1, [r7, r2, lsl #2]
   25ff8:	subs	r2, r2, #1
   25ffc:	mul	r6, r6, r1
   26000:	bne	25ff0 <ReadCompressedDataSlabN+0x420>
   26004:	b	25eec <ReadCompressedDataSlabN+0x31c>
   26008:	ldr	r0, [fp, #24]
   2600c:	mov	r7, #0
   26010:	ldr	r0, [r0]
   26014:	sub	r0, r0, #1
   26018:	str	r0, [fp, #-72]	; 0xffffffb8
   2601c:	ldr	r0, [fp, #28]
   26020:	ldr	r9, [r2]
   26024:	str	r9, [sp, #112]	; 0x70
   26028:	ldr	r0, [r0]
   2602c:	str	r0, [sp, #24]
   26030:	ldr	r0, [fp, #12]
   26034:	cmp	r0, #2
   26038:	blt	26e34 <ReadCompressedDataSlabN+0x1264>
   2603c:	sub	r5, r2, #4
   26040:	sub	ip, r2, #12
   26044:	mov	r3, #1
   26048:	mov	r0, #0
   2604c:	mvn	r8, #15
   26050:	mov	r4, r9
   26054:	mov	r7, #0
   26058:	add	r2, sp, #112	; 0x70
   2605c:	sub	lr, fp, #72	; 0x48
   26060:	b	260ac <ReadCompressedDataSlabN+0x4dc>
   26064:	add	r2, sp, #112	; 0x70
   26068:	sub	lr, fp, #72	; 0x48
   2606c:	add	ip, ip, #4
   26070:	str	r6, [lr, r3, lsl #2]
   26074:	str	r4, [r2, r3, lsl #2]
   26078:	ldr	r6, [sp, #24]
   2607c:	ldr	r1, [sl, r3, lsl #2]
   26080:	mla	r7, r1, r9, r7
   26084:	ldr	r1, [fp, #28]
   26088:	mov	r9, r4
   2608c:	ldr	r4, [sp, #44]	; 0x2c
   26090:	ldr	r1, [r1, r3, lsl #2]
   26094:	add	r3, r3, #1
   26098:	mul	r6, r1, r6
   2609c:	ldr	r1, [fp, #12]
   260a0:	str	r6, [sp, #24]
   260a4:	cmp	r3, r1
   260a8:	beq	26e34 <ReadCompressedDataSlabN+0x1264>
   260ac:	ldr	r1, [fp, #24]
   260b0:	add	r0, r0, #1
   260b4:	cmp	r0, #4
   260b8:	ldr	r1, [r1, r3, lsl #2]
   260bc:	str	r4, [r2, r3, lsl #2]
   260c0:	sub	r6, r1, #1
   260c4:	ldr	r1, [fp, #16]
   260c8:	str	r6, [lr, r3, lsl #2]
   260cc:	ldr	r1, [r1, r3, lsl #2]
   260d0:	str	r1, [sp, #44]	; 0x2c
   260d4:	bcs	260e0 <ReadCompressedDataSlabN+0x510>
   260d8:	mov	r2, r3
   260dc:	b	26168 <ReadCompressedDataSlabN+0x598>
   260e0:	vmov.i32	q9, #1	; 0x00000001
   260e4:	vmov.i32	q10, #1	; 0x00000001
   260e8:	vmov.32	d23[1], r1
   260ec:	vmov.i32	q8, #1	; 0x00000001
   260f0:	bic	lr, r0, #3
   260f4:	bic	sl, r3, #3
   260f8:	mov	r1, ip
   260fc:	sub	r2, r3, lr
   26100:	vmov.32	d18[0], r4
   26104:	vmov.32	d20[0], r6
   26108:	vorr	d16, d18, d18
   2610c:	vmov.i32	q9, #1	; 0x00000001
   26110:	vorr	d18, d20, d20
   26114:	vld1.32	{d20-d21}, [r1], r8
   26118:	subs	sl, sl, #4
   2611c:	vrev64.32	q12, q10
   26120:	vext.8	q12, q12, q12, #8
   26124:	vext.8	q11, q11, q12, #12
   26128:	vmul.i32	q9, q9, q12
   2612c:	vmul.i32	q8, q11, q8
   26130:	vorr	q11, q12, q12
   26134:	bne	26114 <ReadCompressedDataSlabN+0x544>
   26138:	vext.8	q11, q9, q8, #8
   2613c:	vext.8	q12, q8, q8, #8
   26140:	ldr	sl, [fp, #20]
   26144:	cmp	r0, lr
   26148:	vmul.i32	q0, q9, q11
   2614c:	vmul.i32	q1, q8, q12
   26150:	vmul.i32	q8, q0, d0[1]
   26154:	vmul.i32	q9, q1, d2[1]
   26158:	vmov.32	r6, d16[0]
   2615c:	vmov.32	r4, d18[0]
   26160:	beq	26064 <ReadCompressedDataSlabN+0x494>
   26164:	vmov.32	r1, d20[0]
   26168:	mul	r4, r1, r4
   2616c:	ldr	r1, [r5, r2, lsl #2]
   26170:	subs	r2, r2, #1
   26174:	mul	r6, r6, r1
   26178:	bne	26168 <ReadCompressedDataSlabN+0x598>
   2617c:	b	26064 <ReadCompressedDataSlabN+0x494>
   26180:	ldr	r0, [fp, #24]
   26184:	mov	r7, #0
   26188:	ldr	r0, [r0]
   2618c:	sub	r0, r0, #1
   26190:	str	r0, [fp, #-72]	; 0xffffffb8
   26194:	ldr	r0, [fp, #28]
   26198:	ldr	r9, [r2]
   2619c:	str	r9, [sp, #112]	; 0x70
   261a0:	ldr	r0, [r0]
   261a4:	str	r0, [sp, #24]
   261a8:	ldr	r0, [fp, #12]
   261ac:	cmp	r0, #2
   261b0:	blt	270ac <ReadCompressedDataSlabN+0x14dc>
   261b4:	sub	r5, r2, #4
   261b8:	sub	ip, r2, #12
   261bc:	mov	r3, #1
   261c0:	mov	r0, #0
   261c4:	mvn	r8, #15
   261c8:	mov	r4, r9
   261cc:	mov	r7, #0
   261d0:	add	r2, sp, #112	; 0x70
   261d4:	sub	lr, fp, #72	; 0x48
   261d8:	b	26224 <ReadCompressedDataSlabN+0x654>
   261dc:	add	r2, sp, #112	; 0x70
   261e0:	sub	lr, fp, #72	; 0x48
   261e4:	add	ip, ip, #4
   261e8:	str	r6, [lr, r3, lsl #2]
   261ec:	str	r4, [r2, r3, lsl #2]
   261f0:	ldr	r6, [sp, #24]
   261f4:	ldr	r1, [sl, r3, lsl #2]
   261f8:	mla	r7, r1, r9, r7
   261fc:	ldr	r1, [fp, #28]
   26200:	mov	r9, r4
   26204:	ldr	r4, [sp, #44]	; 0x2c
   26208:	ldr	r1, [r1, r3, lsl #2]
   2620c:	add	r3, r3, #1
   26210:	mul	r6, r1, r6
   26214:	ldr	r1, [fp, #12]
   26218:	str	r6, [sp, #24]
   2621c:	cmp	r3, r1
   26220:	beq	270ac <ReadCompressedDataSlabN+0x14dc>
   26224:	ldr	r1, [fp, #24]
   26228:	add	r0, r0, #1
   2622c:	cmp	r0, #4
   26230:	ldr	r1, [r1, r3, lsl #2]
   26234:	str	r4, [r2, r3, lsl #2]
   26238:	sub	r6, r1, #1
   2623c:	ldr	r1, [fp, #16]
   26240:	str	r6, [lr, r3, lsl #2]
   26244:	ldr	r1, [r1, r3, lsl #2]
   26248:	str	r1, [sp, #44]	; 0x2c
   2624c:	bcs	26258 <ReadCompressedDataSlabN+0x688>
   26250:	mov	r2, r3
   26254:	b	262e0 <ReadCompressedDataSlabN+0x710>
   26258:	vmov.i32	q9, #1	; 0x00000001
   2625c:	vmov.i32	q10, #1	; 0x00000001
   26260:	vmov.32	d23[1], r1
   26264:	vmov.i32	q8, #1	; 0x00000001
   26268:	bic	lr, r0, #3
   2626c:	bic	sl, r3, #3
   26270:	mov	r1, ip
   26274:	sub	r2, r3, lr
   26278:	vmov.32	d18[0], r4
   2627c:	vmov.32	d20[0], r6
   26280:	vorr	d16, d18, d18
   26284:	vmov.i32	q9, #1	; 0x00000001
   26288:	vorr	d18, d20, d20
   2628c:	vld1.32	{d20-d21}, [r1], r8
   26290:	subs	sl, sl, #4
   26294:	vrev64.32	q12, q10
   26298:	vext.8	q12, q12, q12, #8
   2629c:	vext.8	q11, q11, q12, #12
   262a0:	vmul.i32	q9, q9, q12
   262a4:	vmul.i32	q8, q11, q8
   262a8:	vorr	q11, q12, q12
   262ac:	bne	2628c <ReadCompressedDataSlabN+0x6bc>
   262b0:	vext.8	q11, q9, q8, #8
   262b4:	vext.8	q12, q8, q8, #8
   262b8:	ldr	sl, [fp, #20]
   262bc:	cmp	r0, lr
   262c0:	vmul.i32	q0, q9, q11
   262c4:	vmul.i32	q1, q8, q12
   262c8:	vmul.i32	q8, q0, d0[1]
   262cc:	vmul.i32	q9, q1, d2[1]
   262d0:	vmov.32	r6, d16[0]
   262d4:	vmov.32	r4, d18[0]
   262d8:	beq	261dc <ReadCompressedDataSlabN+0x60c>
   262dc:	vmov.32	r1, d20[0]
   262e0:	mul	r4, r1, r4
   262e4:	ldr	r1, [r5, r2, lsl #2]
   262e8:	subs	r2, r2, #1
   262ec:	mul	r6, r6, r1
   262f0:	bne	262e0 <ReadCompressedDataSlabN+0x710>
   262f4:	b	261dc <ReadCompressedDataSlabN+0x60c>
   262f8:	ldr	r0, [fp, #24]
   262fc:	mov	r9, #0
   26300:	ldr	r0, [r0]
   26304:	sub	r0, r0, #1
   26308:	str	r0, [fp, #-72]	; 0xffffffb8
   2630c:	ldr	r0, [fp, #28]
   26310:	ldr	r8, [r2]
   26314:	str	r8, [sp, #112]	; 0x70
   26318:	ldr	r0, [r0]
   2631c:	str	r0, [sp, #32]
   26320:	ldr	r0, [fp, #12]
   26324:	cmp	r0, #2
   26328:	blt	27324 <ReadCompressedDataSlabN+0x1754>
   2632c:	sub	r7, r2, #4
   26330:	sub	ip, r2, #12
   26334:	mov	r3, #1
   26338:	mov	r0, #0
   2633c:	mvn	r5, #15
   26340:	mov	r4, r8
   26344:	mov	r9, #0
   26348:	add	r2, sp, #112	; 0x70
   2634c:	sub	lr, fp, #72	; 0x48
   26350:	b	2639c <ReadCompressedDataSlabN+0x7cc>
   26354:	add	r2, sp, #112	; 0x70
   26358:	sub	lr, fp, #72	; 0x48
   2635c:	add	ip, ip, #4
   26360:	str	r6, [lr, r3, lsl #2]
   26364:	str	r4, [r2, r3, lsl #2]
   26368:	ldr	r6, [sp, #32]
   2636c:	ldr	r1, [sl, r3, lsl #2]
   26370:	mla	r9, r1, r8, r9
   26374:	ldr	r1, [fp, #28]
   26378:	mov	r8, r4
   2637c:	ldr	r4, [sp, #44]	; 0x2c
   26380:	ldr	r1, [r1, r3, lsl #2]
   26384:	add	r3, r3, #1
   26388:	mul	r6, r1, r6
   2638c:	ldr	r1, [fp, #12]
   26390:	str	r6, [sp, #32]
   26394:	cmp	r3, r1
   26398:	beq	27324 <ReadCompressedDataSlabN+0x1754>
   2639c:	ldr	r1, [fp, #24]
   263a0:	add	r0, r0, #1
   263a4:	cmp	r0, #4
   263a8:	ldr	r1, [r1, r3, lsl #2]
   263ac:	str	r4, [r2, r3, lsl #2]
   263b0:	sub	r6, r1, #1
   263b4:	ldr	r1, [fp, #16]
   263b8:	str	r6, [lr, r3, lsl #2]
   263bc:	ldr	r1, [r1, r3, lsl #2]
   263c0:	str	r1, [sp, #44]	; 0x2c
   263c4:	bcs	263d0 <ReadCompressedDataSlabN+0x800>
   263c8:	mov	r2, r3
   263cc:	b	26458 <ReadCompressedDataSlabN+0x888>
   263d0:	vmov.i32	q9, #1	; 0x00000001
   263d4:	vmov.i32	q10, #1	; 0x00000001
   263d8:	vmov.32	d23[1], r1
   263dc:	vmov.i32	q8, #1	; 0x00000001
   263e0:	bic	lr, r0, #3
   263e4:	bic	sl, r3, #3
   263e8:	mov	r1, ip
   263ec:	sub	r2, r3, lr
   263f0:	vmov.32	d18[0], r4
   263f4:	vmov.32	d20[0], r6
   263f8:	vorr	d16, d18, d18
   263fc:	vmov.i32	q9, #1	; 0x00000001
   26400:	vorr	d18, d20, d20
   26404:	vld1.32	{d20-d21}, [r1], r5
   26408:	subs	sl, sl, #4
   2640c:	vrev64.32	q12, q10
   26410:	vext.8	q12, q12, q12, #8
   26414:	vext.8	q11, q11, q12, #12
   26418:	vmul.i32	q9, q9, q12
   2641c:	vmul.i32	q8, q11, q8
   26420:	vorr	q11, q12, q12
   26424:	bne	26404 <ReadCompressedDataSlabN+0x834>
   26428:	vext.8	q11, q9, q8, #8
   2642c:	vext.8	q12, q8, q8, #8
   26430:	ldr	sl, [fp, #20]
   26434:	cmp	r0, lr
   26438:	vmul.i32	q0, q9, q11
   2643c:	vmul.i32	q1, q8, q12
   26440:	vmul.i32	q8, q0, d0[1]
   26444:	vmul.i32	q9, q1, d2[1]
   26448:	vmov.32	r6, d16[0]
   2644c:	vmov.32	r4, d18[0]
   26450:	beq	26354 <ReadCompressedDataSlabN+0x784>
   26454:	vmov.32	r1, d20[0]
   26458:	mul	r4, r1, r4
   2645c:	ldr	r1, [r7, r2, lsl #2]
   26460:	subs	r2, r2, #1
   26464:	mul	r6, r6, r1
   26468:	bne	26458 <ReadCompressedDataSlabN+0x888>
   2646c:	b	26354 <ReadCompressedDataSlabN+0x784>
   26470:	ldr	r0, [fp, #24]
   26474:	mov	r9, #0
   26478:	ldr	r0, [r0]
   2647c:	sub	r0, r0, #1
   26480:	str	r0, [fp, #-72]	; 0xffffffb8
   26484:	ldr	r0, [fp, #28]
   26488:	ldr	r8, [r2]
   2648c:	str	r8, [sp, #112]	; 0x70
   26490:	ldr	r0, [r0]
   26494:	str	r0, [sp, #32]
   26498:	ldr	r0, [fp, #12]
   2649c:	cmp	r0, #2
   264a0:	blt	27590 <ReadCompressedDataSlabN+0x19c0>
   264a4:	sub	r7, r2, #4
   264a8:	sub	ip, r2, #12
   264ac:	mov	r3, #1
   264b0:	mov	r0, #0
   264b4:	mvn	r5, #15
   264b8:	mov	r4, r8
   264bc:	mov	r9, #0
   264c0:	add	r2, sp, #112	; 0x70
   264c4:	sub	lr, fp, #72	; 0x48
   264c8:	b	26514 <ReadCompressedDataSlabN+0x944>
   264cc:	add	r2, sp, #112	; 0x70
   264d0:	sub	lr, fp, #72	; 0x48
   264d4:	add	ip, ip, #4
   264d8:	str	r6, [lr, r3, lsl #2]
   264dc:	str	r4, [r2, r3, lsl #2]
   264e0:	ldr	r6, [sp, #32]
   264e4:	ldr	r1, [sl, r3, lsl #2]
   264e8:	mla	r9, r1, r8, r9
   264ec:	ldr	r1, [fp, #28]
   264f0:	mov	r8, r4
   264f4:	ldr	r4, [sp, #44]	; 0x2c
   264f8:	ldr	r1, [r1, r3, lsl #2]
   264fc:	add	r3, r3, #1
   26500:	mul	r6, r1, r6
   26504:	ldr	r1, [fp, #12]
   26508:	str	r6, [sp, #32]
   2650c:	cmp	r3, r1
   26510:	beq	27590 <ReadCompressedDataSlabN+0x19c0>
   26514:	ldr	r1, [fp, #24]
   26518:	add	r0, r0, #1
   2651c:	cmp	r0, #4
   26520:	ldr	r1, [r1, r3, lsl #2]
   26524:	str	r4, [r2, r3, lsl #2]
   26528:	sub	r6, r1, #1
   2652c:	ldr	r1, [fp, #16]
   26530:	str	r6, [lr, r3, lsl #2]
   26534:	ldr	r1, [r1, r3, lsl #2]
   26538:	str	r1, [sp, #44]	; 0x2c
   2653c:	bcs	26548 <ReadCompressedDataSlabN+0x978>
   26540:	mov	r2, r3
   26544:	b	265d0 <ReadCompressedDataSlabN+0xa00>
   26548:	vmov.i32	q9, #1	; 0x00000001
   2654c:	vmov.i32	q10, #1	; 0x00000001
   26550:	vmov.32	d23[1], r1
   26554:	vmov.i32	q8, #1	; 0x00000001
   26558:	bic	lr, r0, #3
   2655c:	bic	sl, r3, #3
   26560:	mov	r1, ip
   26564:	sub	r2, r3, lr
   26568:	vmov.32	d18[0], r4
   2656c:	vmov.32	d20[0], r6
   26570:	vorr	d16, d18, d18
   26574:	vmov.i32	q9, #1	; 0x00000001
   26578:	vorr	d18, d20, d20
   2657c:	vld1.32	{d20-d21}, [r1], r5
   26580:	subs	sl, sl, #4
   26584:	vrev64.32	q12, q10
   26588:	vext.8	q12, q12, q12, #8
   2658c:	vext.8	q11, q11, q12, #12
   26590:	vmul.i32	q9, q9, q12
   26594:	vmul.i32	q8, q11, q8
   26598:	vorr	q11, q12, q12
   2659c:	bne	2657c <ReadCompressedDataSlabN+0x9ac>
   265a0:	vext.8	q11, q9, q8, #8
   265a4:	vext.8	q12, q8, q8, #8
   265a8:	ldr	sl, [fp, #20]
   265ac:	cmp	r0, lr
   265b0:	vmul.i32	q0, q9, q11
   265b4:	vmul.i32	q1, q8, q12
   265b8:	vmul.i32	q8, q0, d0[1]
   265bc:	vmul.i32	q9, q1, d2[1]
   265c0:	vmov.32	r6, d16[0]
   265c4:	vmov.32	r4, d18[0]
   265c8:	beq	264cc <ReadCompressedDataSlabN+0x8fc>
   265cc:	vmov.32	r1, d20[0]
   265d0:	mul	r4, r1, r4
   265d4:	ldr	r1, [r7, r2, lsl #2]
   265d8:	subs	r2, r2, #1
   265dc:	mul	r6, r6, r1
   265e0:	bne	265d0 <ReadCompressedDataSlabN+0xa00>
   265e4:	b	264cc <ReadCompressedDataSlabN+0x8fc>
   265e8:	ldr	r0, [fp, #24]
   265ec:	mov	r9, #0
   265f0:	ldr	r0, [r0]
   265f4:	sub	r0, r0, #1
   265f8:	str	r0, [fp, #-72]	; 0xffffffb8
   265fc:	ldr	r0, [fp, #28]
   26600:	ldr	r8, [r2]
   26604:	str	r8, [sp, #112]	; 0x70
   26608:	ldr	r0, [r0]
   2660c:	str	r0, [sp, #32]
   26610:	ldr	r0, [fp, #12]
   26614:	cmp	r0, #2
   26618:	blt	277fc <ReadCompressedDataSlabN+0x1c2c>
   2661c:	sub	r7, r2, #4
   26620:	sub	ip, r2, #12
   26624:	mov	r3, #1
   26628:	mov	r0, #0
   2662c:	mvn	r5, #15
   26630:	mov	r4, r8
   26634:	mov	r9, #0
   26638:	add	r2, sp, #112	; 0x70
   2663c:	sub	lr, fp, #72	; 0x48
   26640:	b	2668c <ReadCompressedDataSlabN+0xabc>
   26644:	add	r2, sp, #112	; 0x70
   26648:	sub	lr, fp, #72	; 0x48
   2664c:	add	ip, ip, #4
   26650:	str	r6, [lr, r3, lsl #2]
   26654:	str	r4, [r2, r3, lsl #2]
   26658:	ldr	r6, [sp, #32]
   2665c:	ldr	r1, [sl, r3, lsl #2]
   26660:	mla	r9, r1, r8, r9
   26664:	ldr	r1, [fp, #28]
   26668:	mov	r8, r4
   2666c:	ldr	r4, [sp, #44]	; 0x2c
   26670:	ldr	r1, [r1, r3, lsl #2]
   26674:	add	r3, r3, #1
   26678:	mul	r6, r1, r6
   2667c:	ldr	r1, [fp, #12]
   26680:	str	r6, [sp, #32]
   26684:	cmp	r3, r1
   26688:	beq	277fc <ReadCompressedDataSlabN+0x1c2c>
   2668c:	ldr	r1, [fp, #24]
   26690:	add	r0, r0, #1
   26694:	cmp	r0, #4
   26698:	ldr	r1, [r1, r3, lsl #2]
   2669c:	str	r4, [r2, r3, lsl #2]
   266a0:	sub	r6, r1, #1
   266a4:	ldr	r1, [fp, #16]
   266a8:	str	r6, [lr, r3, lsl #2]
   266ac:	ldr	r1, [r1, r3, lsl #2]
   266b0:	str	r1, [sp, #44]	; 0x2c
   266b4:	bcs	266c0 <ReadCompressedDataSlabN+0xaf0>
   266b8:	mov	r2, r3
   266bc:	b	26748 <ReadCompressedDataSlabN+0xb78>
   266c0:	vmov.i32	q9, #1	; 0x00000001
   266c4:	vmov.i32	q10, #1	; 0x00000001
   266c8:	vmov.32	d23[1], r1
   266cc:	vmov.i32	q8, #1	; 0x00000001
   266d0:	bic	lr, r0, #3
   266d4:	bic	sl, r3, #3
   266d8:	mov	r1, ip
   266dc:	sub	r2, r3, lr
   266e0:	vmov.32	d18[0], r4
   266e4:	vmov.32	d20[0], r6
   266e8:	vorr	d16, d18, d18
   266ec:	vmov.i32	q9, #1	; 0x00000001
   266f0:	vorr	d18, d20, d20
   266f4:	vld1.32	{d20-d21}, [r1], r5
   266f8:	subs	sl, sl, #4
   266fc:	vrev64.32	q12, q10
   26700:	vext.8	q12, q12, q12, #8
   26704:	vext.8	q11, q11, q12, #12
   26708:	vmul.i32	q9, q9, q12
   2670c:	vmul.i32	q8, q11, q8
   26710:	vorr	q11, q12, q12
   26714:	bne	266f4 <ReadCompressedDataSlabN+0xb24>
   26718:	vext.8	q11, q9, q8, #8
   2671c:	vext.8	q12, q8, q8, #8
   26720:	ldr	sl, [fp, #20]
   26724:	cmp	r0, lr
   26728:	vmul.i32	q0, q9, q11
   2672c:	vmul.i32	q1, q8, q12
   26730:	vmul.i32	q8, q0, d0[1]
   26734:	vmul.i32	q9, q1, d2[1]
   26738:	vmov.32	r6, d16[0]
   2673c:	vmov.32	r4, d18[0]
   26740:	beq	26644 <ReadCompressedDataSlabN+0xa74>
   26744:	vmov.32	r1, d20[0]
   26748:	mul	r4, r1, r4
   2674c:	ldr	r1, [r7, r2, lsl #2]
   26750:	subs	r2, r2, #1
   26754:	mul	r6, r6, r1
   26758:	bne	26748 <ReadCompressedDataSlabN+0xb78>
   2675c:	b	26644 <ReadCompressedDataSlabN+0xa74>
   26760:	ldr	r0, [fp, #24]
   26764:	mov	r9, #0
   26768:	ldr	r0, [r0]
   2676c:	sub	r0, r0, #1
   26770:	str	r0, [fp, #-72]	; 0xffffffb8
   26774:	ldr	r0, [fp, #28]
   26778:	ldr	r8, [r2]
   2677c:	str	r8, [sp, #112]	; 0x70
   26780:	ldr	r0, [r0]
   26784:	str	r0, [sp, #32]
   26788:	ldr	r0, [fp, #12]
   2678c:	cmp	r0, #2
   26790:	blt	27a68 <ReadCompressedDataSlabN+0x1e98>
   26794:	sub	r7, r2, #4
   26798:	sub	ip, r2, #12
   2679c:	mov	r3, #1
   267a0:	mov	r0, #0
   267a4:	mvn	r5, #15
   267a8:	mov	r4, r8
   267ac:	mov	r9, #0
   267b0:	add	r2, sp, #112	; 0x70
   267b4:	sub	lr, fp, #72	; 0x48
   267b8:	b	26804 <ReadCompressedDataSlabN+0xc34>
   267bc:	add	r2, sp, #112	; 0x70
   267c0:	sub	lr, fp, #72	; 0x48
   267c4:	add	ip, ip, #4
   267c8:	str	r6, [lr, r3, lsl #2]
   267cc:	str	r4, [r2, r3, lsl #2]
   267d0:	ldr	r6, [sp, #32]
   267d4:	ldr	r1, [sl, r3, lsl #2]
   267d8:	mla	r9, r1, r8, r9
   267dc:	ldr	r1, [fp, #28]
   267e0:	mov	r8, r4
   267e4:	ldr	r4, [sp, #44]	; 0x2c
   267e8:	ldr	r1, [r1, r3, lsl #2]
   267ec:	add	r3, r3, #1
   267f0:	mul	r6, r1, r6
   267f4:	ldr	r1, [fp, #12]
   267f8:	str	r6, [sp, #32]
   267fc:	cmp	r3, r1
   26800:	beq	27a68 <ReadCompressedDataSlabN+0x1e98>
   26804:	ldr	r1, [fp, #24]
   26808:	add	r0, r0, #1
   2680c:	cmp	r0, #4
   26810:	ldr	r1, [r1, r3, lsl #2]
   26814:	str	r4, [r2, r3, lsl #2]
   26818:	sub	r6, r1, #1
   2681c:	ldr	r1, [fp, #16]
   26820:	str	r6, [lr, r3, lsl #2]
   26824:	ldr	r1, [r1, r3, lsl #2]
   26828:	str	r1, [sp, #44]	; 0x2c
   2682c:	bcs	26838 <ReadCompressedDataSlabN+0xc68>
   26830:	mov	r2, r3
   26834:	b	268c0 <ReadCompressedDataSlabN+0xcf0>
   26838:	vmov.i32	q9, #1	; 0x00000001
   2683c:	vmov.i32	q10, #1	; 0x00000001
   26840:	vmov.32	d23[1], r1
   26844:	vmov.i32	q8, #1	; 0x00000001
   26848:	bic	lr, r0, #3
   2684c:	bic	sl, r3, #3
   26850:	mov	r1, ip
   26854:	sub	r2, r3, lr
   26858:	vmov.32	d18[0], r4
   2685c:	vmov.32	d20[0], r6
   26860:	vorr	d16, d18, d18
   26864:	vmov.i32	q9, #1	; 0x00000001
   26868:	vorr	d18, d20, d20
   2686c:	vld1.32	{d20-d21}, [r1], r5
   26870:	subs	sl, sl, #4
   26874:	vrev64.32	q12, q10
   26878:	vext.8	q12, q12, q12, #8
   2687c:	vext.8	q11, q11, q12, #12
   26880:	vmul.i32	q9, q9, q12
   26884:	vmul.i32	q8, q11, q8
   26888:	vorr	q11, q12, q12
   2688c:	bne	2686c <ReadCompressedDataSlabN+0xc9c>
   26890:	vext.8	q11, q9, q8, #8
   26894:	vext.8	q12, q8, q8, #8
   26898:	ldr	sl, [fp, #20]
   2689c:	cmp	r0, lr
   268a0:	vmul.i32	q0, q9, q11
   268a4:	vmul.i32	q1, q8, q12
   268a8:	vmul.i32	q8, q0, d0[1]
   268ac:	vmul.i32	q9, q1, d2[1]
   268b0:	vmov.32	r6, d16[0]
   268b4:	vmov.32	r4, d18[0]
   268b8:	beq	267bc <ReadCompressedDataSlabN+0xbec>
   268bc:	vmov.32	r1, d20[0]
   268c0:	mul	r4, r1, r4
   268c4:	ldr	r1, [r7, r2, lsl #2]
   268c8:	subs	r2, r2, #1
   268cc:	mul	r6, r6, r1
   268d0:	bne	268c0 <ReadCompressedDataSlabN+0xcf0>
   268d4:	b	267bc <ReadCompressedDataSlabN+0xbec>
   268d8:	ldr	r0, [fp, #24]
   268dc:	mov	r9, #0
   268e0:	ldr	r0, [r0]
   268e4:	sub	r0, r0, #1
   268e8:	str	r0, [fp, #-72]	; 0xffffffb8
   268ec:	ldr	r0, [fp, #28]
   268f0:	ldr	r8, [r2]
   268f4:	str	r8, [sp, #112]	; 0x70
   268f8:	ldr	r0, [r0]
   268fc:	str	r0, [sp, #32]
   26900:	ldr	r0, [fp, #12]
   26904:	cmp	r0, #2
   26908:	blt	27cd4 <ReadCompressedDataSlabN+0x2104>
   2690c:	sub	r7, r2, #4
   26910:	sub	ip, r2, #12
   26914:	mov	r3, #1
   26918:	mov	r0, #0
   2691c:	mvn	r5, #15
   26920:	mov	r4, r8
   26924:	mov	r9, #0
   26928:	add	r2, sp, #112	; 0x70
   2692c:	sub	lr, fp, #72	; 0x48
   26930:	b	2697c <ReadCompressedDataSlabN+0xdac>
   26934:	add	r2, sp, #112	; 0x70
   26938:	sub	lr, fp, #72	; 0x48
   2693c:	add	ip, ip, #4
   26940:	str	r6, [lr, r3, lsl #2]
   26944:	str	r4, [r2, r3, lsl #2]
   26948:	ldr	r6, [sp, #32]
   2694c:	ldr	r1, [sl, r3, lsl #2]
   26950:	mla	r9, r1, r8, r9
   26954:	ldr	r1, [fp, #28]
   26958:	mov	r8, r4
   2695c:	ldr	r4, [sp, #44]	; 0x2c
   26960:	ldr	r1, [r1, r3, lsl #2]
   26964:	add	r3, r3, #1
   26968:	mul	r6, r1, r6
   2696c:	ldr	r1, [fp, #12]
   26970:	str	r6, [sp, #32]
   26974:	cmp	r3, r1
   26978:	beq	27cd4 <ReadCompressedDataSlabN+0x2104>
   2697c:	ldr	r1, [fp, #24]
   26980:	add	r0, r0, #1
   26984:	cmp	r0, #4
   26988:	ldr	r1, [r1, r3, lsl #2]
   2698c:	str	r4, [r2, r3, lsl #2]
   26990:	sub	r6, r1, #1
   26994:	ldr	r1, [fp, #16]
   26998:	str	r6, [lr, r3, lsl #2]
   2699c:	ldr	r1, [r1, r3, lsl #2]
   269a0:	str	r1, [sp, #44]	; 0x2c
   269a4:	bcs	269b0 <ReadCompressedDataSlabN+0xde0>
   269a8:	mov	r2, r3
   269ac:	b	26a38 <ReadCompressedDataSlabN+0xe68>
   269b0:	vmov.i32	q9, #1	; 0x00000001
   269b4:	vmov.i32	q10, #1	; 0x00000001
   269b8:	vmov.32	d23[1], r1
   269bc:	vmov.i32	q8, #1	; 0x00000001
   269c0:	bic	lr, r0, #3
   269c4:	bic	sl, r3, #3
   269c8:	mov	r1, ip
   269cc:	sub	r2, r3, lr
   269d0:	vmov.32	d18[0], r4
   269d4:	vmov.32	d20[0], r6
   269d8:	vorr	d16, d18, d18
   269dc:	vmov.i32	q9, #1	; 0x00000001
   269e0:	vorr	d18, d20, d20
   269e4:	vld1.32	{d20-d21}, [r1], r5
   269e8:	subs	sl, sl, #4
   269ec:	vrev64.32	q12, q10
   269f0:	vext.8	q12, q12, q12, #8
   269f4:	vext.8	q11, q11, q12, #12
   269f8:	vmul.i32	q9, q9, q12
   269fc:	vmul.i32	q8, q11, q8
   26a00:	vorr	q11, q12, q12
   26a04:	bne	269e4 <ReadCompressedDataSlabN+0xe14>
   26a08:	vext.8	q11, q9, q8, #8
   26a0c:	vext.8	q12, q8, q8, #8
   26a10:	ldr	sl, [fp, #20]
   26a14:	cmp	r0, lr
   26a18:	vmul.i32	q0, q9, q11
   26a1c:	vmul.i32	q1, q8, q12
   26a20:	vmul.i32	q8, q0, d0[1]
   26a24:	vmul.i32	q9, q1, d2[1]
   26a28:	vmov.32	r6, d16[0]
   26a2c:	vmov.32	r4, d18[0]
   26a30:	beq	26934 <ReadCompressedDataSlabN+0xd64>
   26a34:	vmov.32	r1, d20[0]
   26a38:	mul	r4, r1, r4
   26a3c:	ldr	r1, [r7, r2, lsl #2]
   26a40:	subs	r2, r2, #1
   26a44:	mul	r6, r6, r1
   26a48:	bne	26a38 <ReadCompressedDataSlabN+0xe68>
   26a4c:	b	26934 <ReadCompressedDataSlabN+0xd64>
   26a50:	ldr	r0, [fp, #24]
   26a54:	mov	r9, #0
   26a58:	ldr	r0, [r0]
   26a5c:	sub	r0, r0, #1
   26a60:	str	r0, [fp, #-72]	; 0xffffffb8
   26a64:	ldr	r0, [fp, #28]
   26a68:	ldr	r8, [r2]
   26a6c:	str	r8, [sp, #112]	; 0x70
   26a70:	ldr	r0, [r0]
   26a74:	str	r0, [sp, #32]
   26a78:	ldr	r0, [fp, #12]
   26a7c:	cmp	r0, #2
   26a80:	blt	27f40 <ReadCompressedDataSlabN+0x2370>
   26a84:	sub	r7, r2, #4
   26a88:	sub	ip, r2, #12
   26a8c:	mov	r3, #1
   26a90:	mov	r0, #0
   26a94:	mvn	r5, #15
   26a98:	mov	r4, r8
   26a9c:	mov	r9, #0
   26aa0:	add	r2, sp, #112	; 0x70
   26aa4:	sub	lr, fp, #72	; 0x48
   26aa8:	b	26af4 <ReadCompressedDataSlabN+0xf24>
   26aac:	add	r2, sp, #112	; 0x70
   26ab0:	sub	lr, fp, #72	; 0x48
   26ab4:	add	ip, ip, #4
   26ab8:	str	r6, [lr, r3, lsl #2]
   26abc:	str	r4, [r2, r3, lsl #2]
   26ac0:	ldr	r6, [sp, #32]
   26ac4:	ldr	r1, [sl, r3, lsl #2]
   26ac8:	mla	r9, r1, r8, r9
   26acc:	ldr	r1, [fp, #28]
   26ad0:	mov	r8, r4
   26ad4:	ldr	r4, [sp, #44]	; 0x2c
   26ad8:	ldr	r1, [r1, r3, lsl #2]
   26adc:	add	r3, r3, #1
   26ae0:	mul	r6, r1, r6
   26ae4:	ldr	r1, [fp, #12]
   26ae8:	str	r6, [sp, #32]
   26aec:	cmp	r3, r1
   26af0:	beq	27f40 <ReadCompressedDataSlabN+0x2370>
   26af4:	ldr	r1, [fp, #24]
   26af8:	add	r0, r0, #1
   26afc:	cmp	r0, #4
   26b00:	ldr	r1, [r1, r3, lsl #2]
   26b04:	str	r4, [r2, r3, lsl #2]
   26b08:	sub	r6, r1, #1
   26b0c:	ldr	r1, [fp, #16]
   26b10:	str	r6, [lr, r3, lsl #2]
   26b14:	ldr	r1, [r1, r3, lsl #2]
   26b18:	str	r1, [sp, #44]	; 0x2c
   26b1c:	bcs	26b28 <ReadCompressedDataSlabN+0xf58>
   26b20:	mov	r2, r3
   26b24:	b	26bb0 <ReadCompressedDataSlabN+0xfe0>
   26b28:	vmov.i32	q9, #1	; 0x00000001
   26b2c:	vmov.i32	q10, #1	; 0x00000001
   26b30:	vmov.32	d23[1], r1
   26b34:	vmov.i32	q8, #1	; 0x00000001
   26b38:	bic	lr, r0, #3
   26b3c:	bic	sl, r3, #3
   26b40:	mov	r1, ip
   26b44:	sub	r2, r3, lr
   26b48:	vmov.32	d18[0], r4
   26b4c:	vmov.32	d20[0], r6
   26b50:	vorr	d16, d18, d18
   26b54:	vmov.i32	q9, #1	; 0x00000001
   26b58:	vorr	d18, d20, d20
   26b5c:	vld1.32	{d20-d21}, [r1], r5
   26b60:	subs	sl, sl, #4
   26b64:	vrev64.32	q12, q10
   26b68:	vext.8	q12, q12, q12, #8
   26b6c:	vext.8	q11, q11, q12, #12
   26b70:	vmul.i32	q9, q9, q12
   26b74:	vmul.i32	q8, q11, q8
   26b78:	vorr	q11, q12, q12
   26b7c:	bne	26b5c <ReadCompressedDataSlabN+0xf8c>
   26b80:	vext.8	q11, q9, q8, #8
   26b84:	vext.8	q12, q8, q8, #8
   26b88:	ldr	sl, [fp, #20]
   26b8c:	cmp	r0, lr
   26b90:	vmul.i32	q0, q9, q11
   26b94:	vmul.i32	q1, q8, q12
   26b98:	vmul.i32	q8, q0, d0[1]
   26b9c:	vmul.i32	q9, q1, d2[1]
   26ba0:	vmov.32	r6, d16[0]
   26ba4:	vmov.32	r4, d18[0]
   26ba8:	beq	26aac <ReadCompressedDataSlabN+0xedc>
   26bac:	vmov.32	r1, d20[0]
   26bb0:	mul	r4, r1, r4
   26bb4:	ldr	r1, [r7, r2, lsl #2]
   26bb8:	subs	r2, r2, #1
   26bbc:	mul	r6, r6, r1
   26bc0:	bne	26bb0 <ReadCompressedDataSlabN+0xfe0>
   26bc4:	b	26aac <ReadCompressedDataSlabN+0xedc>
   26bc8:	ldr	r0, [sp, #52]	; 0x34
   26bcc:	ldr	r2, [fp, #8]
   26bd0:	add	r1, sp, #56	; 0x38
   26bd4:	mov	r3, r9
   26bd8:	bl	26ec <InflateSkipData>
   26bdc:	ldr	r0, [fp, #24]
   26be0:	ldr	r0, [r0]
   26be4:	cmp	r0, #1
   26be8:	bne	28444 <ReadCompressedDataSlabN+0x2874>
   26bec:	ldr	r0, [sp, #32]
   26bf0:	cmp	r0, #1
   26bf4:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   26bf8:	sub	r0, fp, #112	; 0x70
   26bfc:	add	r7, sl, #4
   26c00:	add	r6, sp, #56	; 0x38
   26c04:	orr	r5, r0, #4
   26c08:	ldr	r0, [fp, #28]
   26c0c:	str	r7, [sp, #24]
   26c10:	add	r8, r0, #4
   26c14:	add	r0, sp, #112	; 0x70
   26c18:	orr	r3, r0, #4
   26c1c:	ldr	r0, [fp, #12]
   26c20:	str	r8, [sp, #36]	; 0x24
   26c24:	str	r3, [sp, #44]	; 0x2c
   26c28:	sub	r0, r0, #1
   26c2c:	str	r0, [sp, #28]
   26c30:	sub	r0, fp, #72	; 0x48
   26c34:	orr	r0, r0, #4
   26c38:	str	r0, [sp, #20]
   26c3c:	mov	r0, #0
   26c40:	str	r0, [sp, #40]	; 0x28
   26c44:	b	26c70 <ReadCompressedDataSlabN+0x10a0>
   26c48:	ldr	r0, [fp, #28]
   26c4c:	ldr	r1, [sp, #40]	; 0x28
   26c50:	ldr	sl, [fp, #20]
   26c54:	add	r6, sp, #56	; 0x38
   26c58:	ldr	r0, [r0]
   26c5c:	add	r1, r0, r1
   26c60:	ldr	r0, [sp, #32]
   26c64:	str	r1, [sp, #40]	; 0x28
   26c68:	cmp	r1, r0
   26c6c:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   26c70:	ldr	r3, [sl]
   26c74:	cmp	r3, #0
   26c78:	beq	26ca8 <ReadCompressedDataSlabN+0x10d8>
   26c7c:	ldr	r8, [fp, #8]
   26c80:	ldr	r0, [sp, #52]	; 0x34
   26c84:	mov	r1, r6
   26c88:	mov	r2, r8
   26c8c:	mov	r7, r0
   26c90:	bl	26ec <InflateSkipData>
   26c94:	ldr	r0, [sl]
   26c98:	ldr	r1, [sp, #48]	; 0x30
   26c9c:	add	r4, sp, #112	; 0x70
   26ca0:	add	r9, r0, r9
   26ca4:	b	26cb8 <ReadCompressedDataSlabN+0x10e8>
   26ca8:	ldr	r1, [sp, #48]	; 0x30
   26cac:	ldr	r7, [sp, #52]	; 0x34
   26cb0:	ldr	r8, [fp, #8]
   26cb4:	add	r4, sp, #112	; 0x70
   26cb8:	ldr	r0, [fp, #28]
   26cbc:	mov	r3, r8
   26cc0:	ldr	r0, [r0]
   26cc4:	str	r0, [sp]
   26cc8:	ldr	r0, [sp, #40]	; 0x28
   26ccc:	add	r2, r1, r0, lsl #2
   26cd0:	mov	r0, r7
   26cd4:	mov	r1, r6
   26cd8:	bl	b6c0 <ReadCompressedSingleData>
   26cdc:	ldr	r1, [fp, #16]
   26ce0:	ldr	r0, [sl]
   26ce4:	mov	r2, r8
   26ce8:	ldr	r1, [r1]
   26cec:	sub	r0, r1, r0
   26cf0:	ldr	r1, [fp, #28]
   26cf4:	ldr	r1, [r1]
   26cf8:	sub	r3, r0, r1
   26cfc:	mov	r0, r7
   26d00:	mov	r1, r6
   26d04:	bl	26ec <InflateSkipData>
   26d08:	ldr	r0, [fp, #16]
   26d0c:	ldr	r1, [sl]
   26d10:	ldr	r0, [r0]
   26d14:	add	r0, r0, r9
   26d18:	sub	r9, r0, r1
   26d1c:	ldr	r0, [fp, #12]
   26d20:	cmp	r0, #2
   26d24:	blt	26c48 <ReadCompressedDataSlabN+0x1078>
   26d28:	ldr	sl, [sp, #28]
   26d2c:	ldr	r8, [sp, #36]	; 0x24
   26d30:	ldr	r3, [sp, #44]	; 0x2c
   26d34:	ldr	r7, [sp, #24]
   26d38:	mov	r6, #0
   26d3c:	b	26d94 <ReadCompressedDataSlabN+0x11c4>
   26d40:	ldr	r2, [r4, r6]
   26d44:	ldr	r3, [r7, r6]
   26d48:	sub	r0, r0, r1
   26d4c:	add	r1, sp, #56	; 0x38
   26d50:	mla	r3, r3, r2, r0
   26d54:	ldr	r0, [sp, #52]	; 0x34
   26d58:	ldr	r2, [fp, #8]
   26d5c:	bl	26ec <InflateSkipData>
   26d60:	ldr	r3, [sp, #44]	; 0x2c
   26d64:	ldr	r2, [r7, r6]
   26d68:	ldr	r0, [r3, r6]
   26d6c:	sdiv	r1, r9, r0
   26d70:	mul	r1, r1, r0
   26d74:	add	r0, r0, r9
   26d78:	sub	r1, r1, r9
   26d7c:	add	r0, r0, r1
   26d80:	ldr	r1, [r4, r6]
   26d84:	mla	r9, r2, r1, r0
   26d88:	subs	sl, sl, #1
   26d8c:	add	r6, r6, #4
   26d90:	beq	26c48 <ReadCompressedDataSlabN+0x1078>
   26d94:	ldr	r0, [r5, r6]
   26d98:	add	r0, r0, #1
   26d9c:	str	r0, [r5, r6]
   26da0:	ldr	r1, [r8, r6]
   26da4:	sdiv	r2, r0, r1
   26da8:	mls	r0, r2, r1, r0
   26dac:	cmp	r0, #0
   26db0:	bne	26e08 <ReadCompressedDataSlabN+0x1238>
   26db4:	mov	r0, #0
   26db8:	str	r0, [r5, r6]
   26dbc:	ldr	r0, [r3, r6]
   26dc0:	sdiv	r1, r9, r0
   26dc4:	mls	r1, r1, r0, r9
   26dc8:	cmp	r1, #0
   26dcc:	bne	26d40 <ReadCompressedDataSlabN+0x1170>
   26dd0:	ldr	r0, [r7, r6]
   26dd4:	cmp	r0, #0
   26dd8:	beq	26d88 <ReadCompressedDataSlabN+0x11b8>
   26ddc:	ldr	r1, [r4, r6]
   26de0:	ldr	r2, [fp, #8]
   26de4:	mul	r3, r1, r0
   26de8:	ldr	r0, [sp, #52]	; 0x34
   26dec:	add	r1, sp, #56	; 0x38
   26df0:	bl	26ec <InflateSkipData>
   26df4:	ldr	r0, [r4, r6]
   26df8:	ldr	r1, [r7, r6]
   26dfc:	ldr	r3, [sp, #44]	; 0x2c
   26e00:	mla	r9, r1, r0, r9
   26e04:	b	26d88 <ReadCompressedDataSlabN+0x11b8>
   26e08:	ldr	r0, [sp, #20]
   26e0c:	ldr	r4, [r0, r6]
   26e10:	cmp	r4, #0
   26e14:	beq	26c48 <ReadCompressedDataSlabN+0x1078>
   26e18:	ldr	r0, [sp, #52]	; 0x34
   26e1c:	ldr	r2, [fp, #8]
   26e20:	add	r1, sp, #56	; 0x38
   26e24:	mov	r3, r4
   26e28:	bl	26ec <InflateSkipData>
   26e2c:	add	r9, r4, r9
   26e30:	b	26c48 <ReadCompressedDataSlabN+0x1078>
   26e34:	ldr	r0, [sp, #52]	; 0x34
   26e38:	ldr	r2, [fp, #8]
   26e3c:	add	r1, sp, #56	; 0x38
   26e40:	mov	r3, r7
   26e44:	bl	26ec <InflateSkipData>
   26e48:	ldr	r0, [fp, #24]
   26e4c:	str	r7, [sp, #28]
   26e50:	ldr	r0, [r0]
   26e54:	cmp	r0, #1
   26e58:	bne	28750 <ReadCompressedDataSlabN+0x2b80>
   26e5c:	ldr	r0, [sp, #24]
   26e60:	cmp	r0, #1
   26e64:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   26e68:	sub	r0, fp, #112	; 0x70
   26e6c:	add	r9, sl, #4
   26e70:	add	r6, sp, #56	; 0x38
   26e74:	orr	r5, r0, #4
   26e78:	ldr	r0, [fp, #28]
   26e7c:	add	r8, r0, #4
   26e80:	add	r0, sp, #112	; 0x70
   26e84:	orr	r3, r0, #4
   26e88:	ldr	r0, [fp, #12]
   26e8c:	str	r8, [sp, #36]	; 0x24
   26e90:	str	r3, [sp, #44]	; 0x2c
   26e94:	sub	r0, r0, #1
   26e98:	str	r0, [sp, #32]
   26e9c:	sub	r0, fp, #72	; 0x48
   26ea0:	orr	r0, r0, #4
   26ea4:	str	r0, [sp, #20]
   26ea8:	mov	r0, #0
   26eac:	str	r0, [sp, #40]	; 0x28
   26eb0:	b	26ee0 <ReadCompressedDataSlabN+0x1310>
   26eb4:	ldr	r0, [fp, #28]
   26eb8:	ldr	r1, [sp, #40]	; 0x28
   26ebc:	ldr	sl, [fp, #20]
   26ec0:	add	r6, sp, #56	; 0x38
   26ec4:	str	r7, [sp, #28]
   26ec8:	ldr	r0, [r0]
   26ecc:	add	r1, r0, r1
   26ed0:	ldr	r0, [sp, #24]
   26ed4:	str	r1, [sp, #40]	; 0x28
   26ed8:	cmp	r1, r0
   26edc:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   26ee0:	ldr	r3, [sl]
   26ee4:	cmp	r3, #0
   26ee8:	beq	26f20 <ReadCompressedDataSlabN+0x1350>
   26eec:	ldr	r7, [sp, #52]	; 0x34
   26ef0:	ldr	r8, [fp, #8]
   26ef4:	mov	r1, r6
   26ef8:	mov	r0, r7
   26efc:	mov	r2, r8
   26f00:	bl	26ec <InflateSkipData>
   26f04:	ldr	r0, [sl]
   26f08:	ldr	r1, [sp, #28]
   26f0c:	add	r4, sp, #112	; 0x70
   26f10:	add	r1, r0, r1
   26f14:	str	r1, [sp, #28]
   26f18:	ldr	r1, [sp, #48]	; 0x30
   26f1c:	b	26f30 <ReadCompressedDataSlabN+0x1360>
   26f20:	ldr	r1, [sp, #48]	; 0x30
   26f24:	ldr	r7, [sp, #52]	; 0x34
   26f28:	ldr	r8, [fp, #8]
   26f2c:	add	r4, sp, #112	; 0x70
   26f30:	ldr	r0, [fp, #28]
   26f34:	mov	r3, r8
   26f38:	ldr	r0, [r0]
   26f3c:	str	r0, [sp]
   26f40:	ldr	r0, [sp, #40]	; 0x28
   26f44:	add	r2, r1, r0
   26f48:	mov	r0, r7
   26f4c:	mov	r1, r6
   26f50:	bl	1e858 <ReadCompressedInt8Data>
   26f54:	ldr	r1, [fp, #16]
   26f58:	ldr	r0, [sl]
   26f5c:	mov	r2, r8
   26f60:	ldr	r1, [r1]
   26f64:	sub	r0, r1, r0
   26f68:	ldr	r1, [fp, #28]
   26f6c:	ldr	r1, [r1]
   26f70:	sub	r3, r0, r1
   26f74:	mov	r0, r7
   26f78:	mov	r1, r6
   26f7c:	bl	26ec <InflateSkipData>
   26f80:	ldr	r0, [fp, #16]
   26f84:	ldr	r1, [sp, #28]
   26f88:	ldr	r0, [r0]
   26f8c:	add	r0, r0, r1
   26f90:	ldr	r1, [sl]
   26f94:	sub	r7, r0, r1
   26f98:	ldr	r0, [fp, #12]
   26f9c:	cmp	r0, #2
   26fa0:	blt	26eb4 <ReadCompressedDataSlabN+0x12e4>
   26fa4:	ldr	sl, [sp, #32]
   26fa8:	ldr	r8, [sp, #36]	; 0x24
   26fac:	ldr	r3, [sp, #44]	; 0x2c
   26fb0:	mov	r6, #0
   26fb4:	b	2700c <ReadCompressedDataSlabN+0x143c>
   26fb8:	ldr	r2, [r4, r6]
   26fbc:	ldr	r3, [r9, r6]
   26fc0:	sub	r0, r0, r1
   26fc4:	add	r1, sp, #56	; 0x38
   26fc8:	mla	r3, r3, r2, r0
   26fcc:	ldr	r0, [sp, #52]	; 0x34
   26fd0:	ldr	r2, [fp, #8]
   26fd4:	bl	26ec <InflateSkipData>
   26fd8:	ldr	r3, [sp, #44]	; 0x2c
   26fdc:	ldr	r2, [r9, r6]
   26fe0:	ldr	r0, [r3, r6]
   26fe4:	sdiv	r1, r7, r0
   26fe8:	mul	r1, r1, r0
   26fec:	add	r0, r0, r7
   26ff0:	sub	r1, r1, r7
   26ff4:	add	r0, r0, r1
   26ff8:	ldr	r1, [r4, r6]
   26ffc:	mla	r7, r2, r1, r0
   27000:	subs	sl, sl, #1
   27004:	add	r6, r6, #4
   27008:	beq	26eb4 <ReadCompressedDataSlabN+0x12e4>
   2700c:	ldr	r0, [r5, r6]
   27010:	add	r0, r0, #1
   27014:	str	r0, [r5, r6]
   27018:	ldr	r1, [r8, r6]
   2701c:	sdiv	r2, r0, r1
   27020:	mls	r0, r2, r1, r0
   27024:	cmp	r0, #0
   27028:	bne	27080 <ReadCompressedDataSlabN+0x14b0>
   2702c:	mov	r0, #0
   27030:	str	r0, [r5, r6]
   27034:	ldr	r0, [r3, r6]
   27038:	sdiv	r1, r7, r0
   2703c:	mls	r1, r1, r0, r7
   27040:	cmp	r1, #0
   27044:	bne	26fb8 <ReadCompressedDataSlabN+0x13e8>
   27048:	ldr	r0, [r9, r6]
   2704c:	cmp	r0, #0
   27050:	beq	27000 <ReadCompressedDataSlabN+0x1430>
   27054:	ldr	r1, [r4, r6]
   27058:	ldr	r2, [fp, #8]
   2705c:	mul	r3, r1, r0
   27060:	ldr	r0, [sp, #52]	; 0x34
   27064:	add	r1, sp, #56	; 0x38
   27068:	bl	26ec <InflateSkipData>
   2706c:	ldr	r0, [r4, r6]
   27070:	ldr	r1, [r9, r6]
   27074:	ldr	r3, [sp, #44]	; 0x2c
   27078:	mla	r7, r1, r0, r7
   2707c:	b	27000 <ReadCompressedDataSlabN+0x1430>
   27080:	ldr	r0, [sp, #20]
   27084:	ldr	r4, [r0, r6]
   27088:	cmp	r4, #0
   2708c:	beq	26eb4 <ReadCompressedDataSlabN+0x12e4>
   27090:	ldr	r0, [sp, #52]	; 0x34
   27094:	ldr	r2, [fp, #8]
   27098:	add	r1, sp, #56	; 0x38
   2709c:	mov	r3, r4
   270a0:	bl	26ec <InflateSkipData>
   270a4:	add	r7, r4, r7
   270a8:	b	26eb4 <ReadCompressedDataSlabN+0x12e4>
   270ac:	ldr	r0, [sp, #52]	; 0x34
   270b0:	ldr	r2, [fp, #8]
   270b4:	add	r1, sp, #56	; 0x38
   270b8:	mov	r3, r7
   270bc:	bl	26ec <InflateSkipData>
   270c0:	ldr	r0, [fp, #24]
   270c4:	str	r7, [sp, #28]
   270c8:	ldr	r0, [r0]
   270cc:	cmp	r0, #1
   270d0:	bne	28a60 <ReadCompressedDataSlabN+0x2e90>
   270d4:	ldr	r0, [sp, #24]
   270d8:	cmp	r0, #1
   270dc:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   270e0:	sub	r0, fp, #112	; 0x70
   270e4:	add	r9, sl, #4
   270e8:	add	r6, sp, #56	; 0x38
   270ec:	orr	r5, r0, #4
   270f0:	ldr	r0, [fp, #28]
   270f4:	add	r8, r0, #4
   270f8:	add	r0, sp, #112	; 0x70
   270fc:	orr	r3, r0, #4
   27100:	ldr	r0, [fp, #12]
   27104:	str	r8, [sp, #36]	; 0x24
   27108:	str	r3, [sp, #44]	; 0x2c
   2710c:	sub	r0, r0, #1
   27110:	str	r0, [sp, #32]
   27114:	sub	r0, fp, #72	; 0x48
   27118:	orr	r0, r0, #4
   2711c:	str	r0, [sp, #20]
   27120:	mov	r0, #0
   27124:	str	r0, [sp, #40]	; 0x28
   27128:	b	27158 <ReadCompressedDataSlabN+0x1588>
   2712c:	ldr	r0, [fp, #28]
   27130:	ldr	r1, [sp, #40]	; 0x28
   27134:	ldr	sl, [fp, #20]
   27138:	add	r6, sp, #56	; 0x38
   2713c:	str	r7, [sp, #28]
   27140:	ldr	r0, [r0]
   27144:	add	r1, r0, r1
   27148:	ldr	r0, [sp, #24]
   2714c:	str	r1, [sp, #40]	; 0x28
   27150:	cmp	r1, r0
   27154:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27158:	ldr	r3, [sl]
   2715c:	cmp	r3, #0
   27160:	beq	27198 <ReadCompressedDataSlabN+0x15c8>
   27164:	ldr	r7, [sp, #52]	; 0x34
   27168:	ldr	r8, [fp, #8]
   2716c:	mov	r1, r6
   27170:	mov	r0, r7
   27174:	mov	r2, r8
   27178:	bl	26ec <InflateSkipData>
   2717c:	ldr	r0, [sl]
   27180:	ldr	r1, [sp, #28]
   27184:	add	r4, sp, #112	; 0x70
   27188:	add	r1, r0, r1
   2718c:	str	r1, [sp, #28]
   27190:	ldr	r1, [sp, #48]	; 0x30
   27194:	b	271a8 <ReadCompressedDataSlabN+0x15d8>
   27198:	ldr	r1, [sp, #48]	; 0x30
   2719c:	ldr	r7, [sp, #52]	; 0x34
   271a0:	ldr	r8, [fp, #8]
   271a4:	add	r4, sp, #112	; 0x70
   271a8:	ldr	r0, [fp, #28]
   271ac:	mov	r3, r8
   271b0:	ldr	r0, [r0]
   271b4:	str	r0, [sp]
   271b8:	ldr	r0, [sp, #40]	; 0x28
   271bc:	add	r2, r1, r0
   271c0:	mov	r0, r7
   271c4:	mov	r1, r6
   271c8:	bl	21180 <ReadCompressedUInt8Data>
   271cc:	ldr	r1, [fp, #16]
   271d0:	ldr	r0, [sl]
   271d4:	mov	r2, r8
   271d8:	ldr	r1, [r1]
   271dc:	sub	r0, r1, r0
   271e0:	ldr	r1, [fp, #28]
   271e4:	ldr	r1, [r1]
   271e8:	sub	r3, r0, r1
   271ec:	mov	r0, r7
   271f0:	mov	r1, r6
   271f4:	bl	26ec <InflateSkipData>
   271f8:	ldr	r0, [fp, #16]
   271fc:	ldr	r1, [sp, #28]
   27200:	ldr	r0, [r0]
   27204:	add	r0, r0, r1
   27208:	ldr	r1, [sl]
   2720c:	sub	r7, r0, r1
   27210:	ldr	r0, [fp, #12]
   27214:	cmp	r0, #2
   27218:	blt	2712c <ReadCompressedDataSlabN+0x155c>
   2721c:	ldr	sl, [sp, #32]
   27220:	ldr	r8, [sp, #36]	; 0x24
   27224:	ldr	r3, [sp, #44]	; 0x2c
   27228:	mov	r6, #0
   2722c:	b	27284 <ReadCompressedDataSlabN+0x16b4>
   27230:	ldr	r2, [r4, r6]
   27234:	ldr	r3, [r9, r6]
   27238:	sub	r0, r0, r1
   2723c:	add	r1, sp, #56	; 0x38
   27240:	mla	r3, r3, r2, r0
   27244:	ldr	r0, [sp, #52]	; 0x34
   27248:	ldr	r2, [fp, #8]
   2724c:	bl	26ec <InflateSkipData>
   27250:	ldr	r3, [sp, #44]	; 0x2c
   27254:	ldr	r2, [r9, r6]
   27258:	ldr	r0, [r3, r6]
   2725c:	sdiv	r1, r7, r0
   27260:	mul	r1, r1, r0
   27264:	add	r0, r0, r7
   27268:	sub	r1, r1, r7
   2726c:	add	r0, r0, r1
   27270:	ldr	r1, [r4, r6]
   27274:	mla	r7, r2, r1, r0
   27278:	subs	sl, sl, #1
   2727c:	add	r6, r6, #4
   27280:	beq	2712c <ReadCompressedDataSlabN+0x155c>
   27284:	ldr	r0, [r5, r6]
   27288:	add	r0, r0, #1
   2728c:	str	r0, [r5, r6]
   27290:	ldr	r1, [r8, r6]
   27294:	sdiv	r2, r0, r1
   27298:	mls	r0, r2, r1, r0
   2729c:	cmp	r0, #0
   272a0:	bne	272f8 <ReadCompressedDataSlabN+0x1728>
   272a4:	mov	r0, #0
   272a8:	str	r0, [r5, r6]
   272ac:	ldr	r0, [r3, r6]
   272b0:	sdiv	r1, r7, r0
   272b4:	mls	r1, r1, r0, r7
   272b8:	cmp	r1, #0
   272bc:	bne	27230 <ReadCompressedDataSlabN+0x1660>
   272c0:	ldr	r0, [r9, r6]
   272c4:	cmp	r0, #0
   272c8:	beq	27278 <ReadCompressedDataSlabN+0x16a8>
   272cc:	ldr	r1, [r4, r6]
   272d0:	ldr	r2, [fp, #8]
   272d4:	mul	r3, r1, r0
   272d8:	ldr	r0, [sp, #52]	; 0x34
   272dc:	add	r1, sp, #56	; 0x38
   272e0:	bl	26ec <InflateSkipData>
   272e4:	ldr	r0, [r4, r6]
   272e8:	ldr	r1, [r9, r6]
   272ec:	ldr	r3, [sp, #44]	; 0x2c
   272f0:	mla	r7, r1, r0, r7
   272f4:	b	27278 <ReadCompressedDataSlabN+0x16a8>
   272f8:	ldr	r0, [sp, #20]
   272fc:	ldr	r4, [r0, r6]
   27300:	cmp	r4, #0
   27304:	beq	2712c <ReadCompressedDataSlabN+0x155c>
   27308:	ldr	r0, [sp, #52]	; 0x34
   2730c:	ldr	r2, [fp, #8]
   27310:	add	r1, sp, #56	; 0x38
   27314:	mov	r3, r4
   27318:	bl	26ec <InflateSkipData>
   2731c:	add	r7, r4, r7
   27320:	b	2712c <ReadCompressedDataSlabN+0x155c>
   27324:	ldr	r0, [sp, #52]	; 0x34
   27328:	ldr	r2, [fp, #8]
   2732c:	add	r1, sp, #56	; 0x38
   27330:	mov	r3, r9
   27334:	bl	26ec <InflateSkipData>
   27338:	ldr	r0, [fp, #24]
   2733c:	ldr	r0, [r0]
   27340:	cmp	r0, #1
   27344:	bne	28d70 <ReadCompressedDataSlabN+0x31a0>
   27348:	ldr	r0, [sp, #32]
   2734c:	cmp	r0, #1
   27350:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27354:	sub	r0, fp, #112	; 0x70
   27358:	add	r7, sl, #4
   2735c:	add	r6, sp, #56	; 0x38
   27360:	orr	r5, r0, #4
   27364:	ldr	r0, [fp, #28]
   27368:	str	r7, [sp, #24]
   2736c:	add	r8, r0, #4
   27370:	add	r0, sp, #112	; 0x70
   27374:	orr	r3, r0, #4
   27378:	ldr	r0, [fp, #12]
   2737c:	str	r8, [sp, #36]	; 0x24
   27380:	str	r3, [sp, #44]	; 0x2c
   27384:	sub	r0, r0, #1
   27388:	str	r0, [sp, #28]
   2738c:	sub	r0, fp, #72	; 0x48
   27390:	orr	r0, r0, #4
   27394:	str	r0, [sp, #20]
   27398:	mov	r0, #0
   2739c:	str	r0, [sp, #40]	; 0x28
   273a0:	b	273cc <ReadCompressedDataSlabN+0x17fc>
   273a4:	ldr	r0, [fp, #28]
   273a8:	ldr	r1, [sp, #40]	; 0x28
   273ac:	ldr	sl, [fp, #20]
   273b0:	add	r6, sp, #56	; 0x38
   273b4:	ldr	r0, [r0]
   273b8:	add	r1, r0, r1
   273bc:	ldr	r0, [sp, #32]
   273c0:	str	r1, [sp, #40]	; 0x28
   273c4:	cmp	r1, r0
   273c8:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   273cc:	ldr	r3, [sl]
   273d0:	cmp	r3, #0
   273d4:	beq	27404 <ReadCompressedDataSlabN+0x1834>
   273d8:	ldr	r8, [fp, #8]
   273dc:	ldr	r0, [sp, #52]	; 0x34
   273e0:	mov	r1, r6
   273e4:	mov	r2, r8
   273e8:	mov	r7, r0
   273ec:	bl	26ec <InflateSkipData>
   273f0:	ldr	r0, [sl]
   273f4:	ldr	r1, [sp, #48]	; 0x30
   273f8:	add	r4, sp, #112	; 0x70
   273fc:	add	r9, r0, r9
   27400:	b	27414 <ReadCompressedDataSlabN+0x1844>
   27404:	ldr	r1, [sp, #48]	; 0x30
   27408:	ldr	r7, [sp, #52]	; 0x34
   2740c:	ldr	r8, [fp, #8]
   27410:	add	r4, sp, #112	; 0x70
   27414:	ldr	r0, [fp, #28]
   27418:	mov	r3, r8
   2741c:	ldr	r0, [r0]
   27420:	str	r0, [sp]
   27424:	ldr	r0, [sp, #40]	; 0x28
   27428:	add	r2, r1, r0, lsl #1
   2742c:	mov	r0, r7
   27430:	mov	r1, r6
   27434:	bl	194f4 <ReadCompressedInt16Data>
   27438:	ldr	r1, [fp, #16]
   2743c:	ldr	r0, [sl]
   27440:	mov	r2, r8
   27444:	ldr	r1, [r1]
   27448:	sub	r0, r1, r0
   2744c:	ldr	r1, [fp, #28]
   27450:	ldr	r1, [r1]
   27454:	sub	r3, r0, r1
   27458:	mov	r0, r7
   2745c:	mov	r1, r6
   27460:	bl	26ec <InflateSkipData>
   27464:	ldr	r0, [fp, #16]
   27468:	ldr	r1, [sl]
   2746c:	ldr	r0, [r0]
   27470:	add	r0, r0, r9
   27474:	sub	r9, r0, r1
   27478:	ldr	r0, [fp, #12]
   2747c:	cmp	r0, #2
   27480:	blt	273a4 <ReadCompressedDataSlabN+0x17d4>
   27484:	ldr	sl, [sp, #28]
   27488:	ldr	r8, [sp, #36]	; 0x24
   2748c:	ldr	r3, [sp, #44]	; 0x2c
   27490:	ldr	r7, [sp, #24]
   27494:	mov	r6, #0
   27498:	b	274f0 <ReadCompressedDataSlabN+0x1920>
   2749c:	ldr	r2, [r4, r6]
   274a0:	ldr	r3, [r7, r6]
   274a4:	sub	r0, r0, r1
   274a8:	add	r1, sp, #56	; 0x38
   274ac:	mla	r3, r3, r2, r0
   274b0:	ldr	r0, [sp, #52]	; 0x34
   274b4:	ldr	r2, [fp, #8]
   274b8:	bl	26ec <InflateSkipData>
   274bc:	ldr	r3, [sp, #44]	; 0x2c
   274c0:	ldr	r2, [r7, r6]
   274c4:	ldr	r0, [r3, r6]
   274c8:	sdiv	r1, r9, r0
   274cc:	mul	r1, r1, r0
   274d0:	add	r0, r0, r9
   274d4:	sub	r1, r1, r9
   274d8:	add	r0, r0, r1
   274dc:	ldr	r1, [r4, r6]
   274e0:	mla	r9, r2, r1, r0
   274e4:	subs	sl, sl, #1
   274e8:	add	r6, r6, #4
   274ec:	beq	273a4 <ReadCompressedDataSlabN+0x17d4>
   274f0:	ldr	r0, [r5, r6]
   274f4:	add	r0, r0, #1
   274f8:	str	r0, [r5, r6]
   274fc:	ldr	r1, [r8, r6]
   27500:	sdiv	r2, r0, r1
   27504:	mls	r0, r2, r1, r0
   27508:	cmp	r0, #0
   2750c:	bne	27564 <ReadCompressedDataSlabN+0x1994>
   27510:	mov	r0, #0
   27514:	str	r0, [r5, r6]
   27518:	ldr	r0, [r3, r6]
   2751c:	sdiv	r1, r9, r0
   27520:	mls	r1, r1, r0, r9
   27524:	cmp	r1, #0
   27528:	bne	2749c <ReadCompressedDataSlabN+0x18cc>
   2752c:	ldr	r0, [r7, r6]
   27530:	cmp	r0, #0
   27534:	beq	274e4 <ReadCompressedDataSlabN+0x1914>
   27538:	ldr	r1, [r4, r6]
   2753c:	ldr	r2, [fp, #8]
   27540:	mul	r3, r1, r0
   27544:	ldr	r0, [sp, #52]	; 0x34
   27548:	add	r1, sp, #56	; 0x38
   2754c:	bl	26ec <InflateSkipData>
   27550:	ldr	r0, [r4, r6]
   27554:	ldr	r1, [r7, r6]
   27558:	ldr	r3, [sp, #44]	; 0x2c
   2755c:	mla	r9, r1, r0, r9
   27560:	b	274e4 <ReadCompressedDataSlabN+0x1914>
   27564:	ldr	r0, [sp, #20]
   27568:	ldr	r4, [r0, r6]
   2756c:	cmp	r4, #0
   27570:	beq	273a4 <ReadCompressedDataSlabN+0x17d4>
   27574:	ldr	r0, [sp, #52]	; 0x34
   27578:	ldr	r2, [fp, #8]
   2757c:	add	r1, sp, #56	; 0x38
   27580:	mov	r3, r4
   27584:	bl	26ec <InflateSkipData>
   27588:	add	r9, r4, r9
   2758c:	b	273a4 <ReadCompressedDataSlabN+0x17d4>
   27590:	ldr	r0, [sp, #52]	; 0x34
   27594:	ldr	r2, [fp, #8]
   27598:	add	r1, sp, #56	; 0x38
   2759c:	mov	r3, r9
   275a0:	bl	26ec <InflateSkipData>
   275a4:	ldr	r0, [fp, #24]
   275a8:	ldr	r0, [r0]
   275ac:	cmp	r0, #1
   275b0:	bne	2907c <ReadCompressedDataSlabN+0x34ac>
   275b4:	ldr	r0, [sp, #32]
   275b8:	cmp	r0, #1
   275bc:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   275c0:	sub	r0, fp, #112	; 0x70
   275c4:	add	r7, sl, #4
   275c8:	add	r6, sp, #56	; 0x38
   275cc:	orr	r5, r0, #4
   275d0:	ldr	r0, [fp, #28]
   275d4:	str	r7, [sp, #24]
   275d8:	add	r8, r0, #4
   275dc:	add	r0, sp, #112	; 0x70
   275e0:	orr	r3, r0, #4
   275e4:	ldr	r0, [fp, #12]
   275e8:	str	r8, [sp, #36]	; 0x24
   275ec:	str	r3, [sp, #44]	; 0x2c
   275f0:	sub	r0, r0, #1
   275f4:	str	r0, [sp, #28]
   275f8:	sub	r0, fp, #72	; 0x48
   275fc:	orr	r0, r0, #4
   27600:	str	r0, [sp, #20]
   27604:	mov	r0, #0
   27608:	str	r0, [sp, #40]	; 0x28
   2760c:	b	27638 <ReadCompressedDataSlabN+0x1a68>
   27610:	ldr	r0, [fp, #28]
   27614:	ldr	r1, [sp, #40]	; 0x28
   27618:	ldr	sl, [fp, #20]
   2761c:	add	r6, sp, #56	; 0x38
   27620:	ldr	r0, [r0]
   27624:	add	r1, r0, r1
   27628:	ldr	r0, [sp, #32]
   2762c:	str	r1, [sp, #40]	; 0x28
   27630:	cmp	r1, r0
   27634:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27638:	ldr	r3, [sl]
   2763c:	cmp	r3, #0
   27640:	beq	27670 <ReadCompressedDataSlabN+0x1aa0>
   27644:	ldr	r8, [fp, #8]
   27648:	ldr	r0, [sp, #52]	; 0x34
   2764c:	mov	r1, r6
   27650:	mov	r2, r8
   27654:	mov	r7, r0
   27658:	bl	26ec <InflateSkipData>
   2765c:	ldr	r0, [sl]
   27660:	ldr	r1, [sp, #48]	; 0x30
   27664:	add	r4, sp, #112	; 0x70
   27668:	add	r9, r0, r9
   2766c:	b	27680 <ReadCompressedDataSlabN+0x1ab0>
   27670:	ldr	r1, [sp, #48]	; 0x30
   27674:	ldr	r7, [sp, #52]	; 0x34
   27678:	ldr	r8, [fp, #8]
   2767c:	add	r4, sp, #112	; 0x70
   27680:	ldr	r0, [fp, #28]
   27684:	mov	r3, r8
   27688:	ldr	r0, [r0]
   2768c:	str	r0, [sp]
   27690:	ldr	r0, [sp, #40]	; 0x28
   27694:	add	r2, r1, r0, lsl #1
   27698:	mov	r0, r7
   2769c:	mov	r1, r6
   276a0:	bl	1bf30 <ReadCompressedUInt16Data>
   276a4:	ldr	r1, [fp, #16]
   276a8:	ldr	r0, [sl]
   276ac:	mov	r2, r8
   276b0:	ldr	r1, [r1]
   276b4:	sub	r0, r1, r0
   276b8:	ldr	r1, [fp, #28]
   276bc:	ldr	r1, [r1]
   276c0:	sub	r3, r0, r1
   276c4:	mov	r0, r7
   276c8:	mov	r1, r6
   276cc:	bl	26ec <InflateSkipData>
   276d0:	ldr	r0, [fp, #16]
   276d4:	ldr	r1, [sl]
   276d8:	ldr	r0, [r0]
   276dc:	add	r0, r0, r9
   276e0:	sub	r9, r0, r1
   276e4:	ldr	r0, [fp, #12]
   276e8:	cmp	r0, #2
   276ec:	blt	27610 <ReadCompressedDataSlabN+0x1a40>
   276f0:	ldr	sl, [sp, #28]
   276f4:	ldr	r8, [sp, #36]	; 0x24
   276f8:	ldr	r3, [sp, #44]	; 0x2c
   276fc:	ldr	r7, [sp, #24]
   27700:	mov	r6, #0
   27704:	b	2775c <ReadCompressedDataSlabN+0x1b8c>
   27708:	ldr	r2, [r4, r6]
   2770c:	ldr	r3, [r7, r6]
   27710:	sub	r0, r0, r1
   27714:	add	r1, sp, #56	; 0x38
   27718:	mla	r3, r3, r2, r0
   2771c:	ldr	r0, [sp, #52]	; 0x34
   27720:	ldr	r2, [fp, #8]
   27724:	bl	26ec <InflateSkipData>
   27728:	ldr	r3, [sp, #44]	; 0x2c
   2772c:	ldr	r2, [r7, r6]
   27730:	ldr	r0, [r3, r6]
   27734:	sdiv	r1, r9, r0
   27738:	mul	r1, r1, r0
   2773c:	add	r0, r0, r9
   27740:	sub	r1, r1, r9
   27744:	add	r0, r0, r1
   27748:	ldr	r1, [r4, r6]
   2774c:	mla	r9, r2, r1, r0
   27750:	subs	sl, sl, #1
   27754:	add	r6, r6, #4
   27758:	beq	27610 <ReadCompressedDataSlabN+0x1a40>
   2775c:	ldr	r0, [r5, r6]
   27760:	add	r0, r0, #1
   27764:	str	r0, [r5, r6]
   27768:	ldr	r1, [r8, r6]
   2776c:	sdiv	r2, r0, r1
   27770:	mls	r0, r2, r1, r0
   27774:	cmp	r0, #0
   27778:	bne	277d0 <ReadCompressedDataSlabN+0x1c00>
   2777c:	mov	r0, #0
   27780:	str	r0, [r5, r6]
   27784:	ldr	r0, [r3, r6]
   27788:	sdiv	r1, r9, r0
   2778c:	mls	r1, r1, r0, r9
   27790:	cmp	r1, #0
   27794:	bne	27708 <ReadCompressedDataSlabN+0x1b38>
   27798:	ldr	r0, [r7, r6]
   2779c:	cmp	r0, #0
   277a0:	beq	27750 <ReadCompressedDataSlabN+0x1b80>
   277a4:	ldr	r1, [r4, r6]
   277a8:	ldr	r2, [fp, #8]
   277ac:	mul	r3, r1, r0
   277b0:	ldr	r0, [sp, #52]	; 0x34
   277b4:	add	r1, sp, #56	; 0x38
   277b8:	bl	26ec <InflateSkipData>
   277bc:	ldr	r0, [r4, r6]
   277c0:	ldr	r1, [r7, r6]
   277c4:	ldr	r3, [sp, #44]	; 0x2c
   277c8:	mla	r9, r1, r0, r9
   277cc:	b	27750 <ReadCompressedDataSlabN+0x1b80>
   277d0:	ldr	r0, [sp, #20]
   277d4:	ldr	r4, [r0, r6]
   277d8:	cmp	r4, #0
   277dc:	beq	27610 <ReadCompressedDataSlabN+0x1a40>
   277e0:	ldr	r0, [sp, #52]	; 0x34
   277e4:	ldr	r2, [fp, #8]
   277e8:	add	r1, sp, #56	; 0x38
   277ec:	mov	r3, r4
   277f0:	bl	26ec <InflateSkipData>
   277f4:	add	r9, r4, r9
   277f8:	b	27610 <ReadCompressedDataSlabN+0x1a40>
   277fc:	ldr	r0, [sp, #52]	; 0x34
   27800:	ldr	r2, [fp, #8]
   27804:	add	r1, sp, #56	; 0x38
   27808:	mov	r3, r9
   2780c:	bl	26ec <InflateSkipData>
   27810:	ldr	r0, [fp, #24]
   27814:	ldr	r0, [r0]
   27818:	cmp	r0, #1
   2781c:	bne	29388 <ReadCompressedDataSlabN+0x37b8>
   27820:	ldr	r0, [sp, #32]
   27824:	cmp	r0, #1
   27828:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   2782c:	sub	r0, fp, #112	; 0x70
   27830:	add	r7, sl, #4
   27834:	add	r6, sp, #56	; 0x38
   27838:	orr	r5, r0, #4
   2783c:	ldr	r0, [fp, #28]
   27840:	str	r7, [sp, #24]
   27844:	add	r8, r0, #4
   27848:	add	r0, sp, #112	; 0x70
   2784c:	orr	r3, r0, #4
   27850:	ldr	r0, [fp, #12]
   27854:	str	r8, [sp, #36]	; 0x24
   27858:	str	r3, [sp, #44]	; 0x2c
   2785c:	sub	r0, r0, #1
   27860:	str	r0, [sp, #28]
   27864:	sub	r0, fp, #72	; 0x48
   27868:	orr	r0, r0, #4
   2786c:	str	r0, [sp, #20]
   27870:	mov	r0, #0
   27874:	str	r0, [sp, #40]	; 0x28
   27878:	b	278a4 <ReadCompressedDataSlabN+0x1cd4>
   2787c:	ldr	r0, [fp, #28]
   27880:	ldr	r1, [sp, #40]	; 0x28
   27884:	ldr	sl, [fp, #20]
   27888:	add	r6, sp, #56	; 0x38
   2788c:	ldr	r0, [r0]
   27890:	add	r1, r0, r1
   27894:	ldr	r0, [sp, #32]
   27898:	str	r1, [sp, #40]	; 0x28
   2789c:	cmp	r1, r0
   278a0:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   278a4:	ldr	r3, [sl]
   278a8:	cmp	r3, #0
   278ac:	beq	278dc <ReadCompressedDataSlabN+0x1d0c>
   278b0:	ldr	r8, [fp, #8]
   278b4:	ldr	r0, [sp, #52]	; 0x34
   278b8:	mov	r1, r6
   278bc:	mov	r2, r8
   278c0:	mov	r7, r0
   278c4:	bl	26ec <InflateSkipData>
   278c8:	ldr	r0, [sl]
   278cc:	ldr	r1, [sp, #48]	; 0x30
   278d0:	add	r4, sp, #112	; 0x70
   278d4:	add	r9, r0, r9
   278d8:	b	278ec <ReadCompressedDataSlabN+0x1d1c>
   278dc:	ldr	r1, [sp, #48]	; 0x30
   278e0:	ldr	r7, [sp, #52]	; 0x34
   278e4:	ldr	r8, [fp, #8]
   278e8:	add	r4, sp, #112	; 0x70
   278ec:	ldr	r0, [fp, #28]
   278f0:	mov	r3, r8
   278f4:	ldr	r0, [r0]
   278f8:	str	r0, [sp]
   278fc:	ldr	r0, [sp, #40]	; 0x28
   27900:	add	r2, r1, r0, lsl #2
   27904:	mov	r0, r7
   27908:	mov	r1, r6
   2790c:	bl	13e0c <ReadCompressedInt32Data>
   27910:	ldr	r1, [fp, #16]
   27914:	ldr	r0, [sl]
   27918:	mov	r2, r8
   2791c:	ldr	r1, [r1]
   27920:	sub	r0, r1, r0
   27924:	ldr	r1, [fp, #28]
   27928:	ldr	r1, [r1]
   2792c:	sub	r3, r0, r1
   27930:	mov	r0, r7
   27934:	mov	r1, r6
   27938:	bl	26ec <InflateSkipData>
   2793c:	ldr	r0, [fp, #16]
   27940:	ldr	r1, [sl]
   27944:	ldr	r0, [r0]
   27948:	add	r0, r0, r9
   2794c:	sub	r9, r0, r1
   27950:	ldr	r0, [fp, #12]
   27954:	cmp	r0, #2
   27958:	blt	2787c <ReadCompressedDataSlabN+0x1cac>
   2795c:	ldr	sl, [sp, #28]
   27960:	ldr	r8, [sp, #36]	; 0x24
   27964:	ldr	r3, [sp, #44]	; 0x2c
   27968:	ldr	r7, [sp, #24]
   2796c:	mov	r6, #0
   27970:	b	279c8 <ReadCompressedDataSlabN+0x1df8>
   27974:	ldr	r2, [r4, r6]
   27978:	ldr	r3, [r7, r6]
   2797c:	sub	r0, r0, r1
   27980:	add	r1, sp, #56	; 0x38
   27984:	mla	r3, r3, r2, r0
   27988:	ldr	r0, [sp, #52]	; 0x34
   2798c:	ldr	r2, [fp, #8]
   27990:	bl	26ec <InflateSkipData>
   27994:	ldr	r3, [sp, #44]	; 0x2c
   27998:	ldr	r2, [r7, r6]
   2799c:	ldr	r0, [r3, r6]
   279a0:	sdiv	r1, r9, r0
   279a4:	mul	r1, r1, r0
   279a8:	add	r0, r0, r9
   279ac:	sub	r1, r1, r9
   279b0:	add	r0, r0, r1
   279b4:	ldr	r1, [r4, r6]
   279b8:	mla	r9, r2, r1, r0
   279bc:	subs	sl, sl, #1
   279c0:	add	r6, r6, #4
   279c4:	beq	2787c <ReadCompressedDataSlabN+0x1cac>
   279c8:	ldr	r0, [r5, r6]
   279cc:	add	r0, r0, #1
   279d0:	str	r0, [r5, r6]
   279d4:	ldr	r1, [r8, r6]
   279d8:	sdiv	r2, r0, r1
   279dc:	mls	r0, r2, r1, r0
   279e0:	cmp	r0, #0
   279e4:	bne	27a3c <ReadCompressedDataSlabN+0x1e6c>
   279e8:	mov	r0, #0
   279ec:	str	r0, [r5, r6]
   279f0:	ldr	r0, [r3, r6]
   279f4:	sdiv	r1, r9, r0
   279f8:	mls	r1, r1, r0, r9
   279fc:	cmp	r1, #0
   27a00:	bne	27974 <ReadCompressedDataSlabN+0x1da4>
   27a04:	ldr	r0, [r7, r6]
   27a08:	cmp	r0, #0
   27a0c:	beq	279bc <ReadCompressedDataSlabN+0x1dec>
   27a10:	ldr	r1, [r4, r6]
   27a14:	ldr	r2, [fp, #8]
   27a18:	mul	r3, r1, r0
   27a1c:	ldr	r0, [sp, #52]	; 0x34
   27a20:	add	r1, sp, #56	; 0x38
   27a24:	bl	26ec <InflateSkipData>
   27a28:	ldr	r0, [r4, r6]
   27a2c:	ldr	r1, [r7, r6]
   27a30:	ldr	r3, [sp, #44]	; 0x2c
   27a34:	mla	r9, r1, r0, r9
   27a38:	b	279bc <ReadCompressedDataSlabN+0x1dec>
   27a3c:	ldr	r0, [sp, #20]
   27a40:	ldr	r4, [r0, r6]
   27a44:	cmp	r4, #0
   27a48:	beq	2787c <ReadCompressedDataSlabN+0x1cac>
   27a4c:	ldr	r0, [sp, #52]	; 0x34
   27a50:	ldr	r2, [fp, #8]
   27a54:	add	r1, sp, #56	; 0x38
   27a58:	mov	r3, r4
   27a5c:	bl	26ec <InflateSkipData>
   27a60:	add	r9, r4, r9
   27a64:	b	2787c <ReadCompressedDataSlabN+0x1cac>
   27a68:	ldr	r0, [sp, #52]	; 0x34
   27a6c:	ldr	r2, [fp, #8]
   27a70:	add	r1, sp, #56	; 0x38
   27a74:	mov	r3, r9
   27a78:	bl	26ec <InflateSkipData>
   27a7c:	ldr	r0, [fp, #24]
   27a80:	ldr	r0, [r0]
   27a84:	cmp	r0, #1
   27a88:	bne	29694 <ReadCompressedDataSlabN+0x3ac4>
   27a8c:	ldr	r0, [sp, #32]
   27a90:	cmp	r0, #1
   27a94:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27a98:	sub	r0, fp, #112	; 0x70
   27a9c:	add	r7, sl, #4
   27aa0:	add	r6, sp, #56	; 0x38
   27aa4:	orr	r5, r0, #4
   27aa8:	ldr	r0, [fp, #28]
   27aac:	str	r7, [sp, #24]
   27ab0:	add	r8, r0, #4
   27ab4:	add	r0, sp, #112	; 0x70
   27ab8:	orr	r3, r0, #4
   27abc:	ldr	r0, [fp, #12]
   27ac0:	str	r8, [sp, #36]	; 0x24
   27ac4:	str	r3, [sp, #44]	; 0x2c
   27ac8:	sub	r0, r0, #1
   27acc:	str	r0, [sp, #28]
   27ad0:	sub	r0, fp, #72	; 0x48
   27ad4:	orr	r0, r0, #4
   27ad8:	str	r0, [sp, #20]
   27adc:	mov	r0, #0
   27ae0:	str	r0, [sp, #40]	; 0x28
   27ae4:	b	27b10 <ReadCompressedDataSlabN+0x1f40>
   27ae8:	ldr	r0, [fp, #28]
   27aec:	ldr	r1, [sp, #40]	; 0x28
   27af0:	ldr	sl, [fp, #20]
   27af4:	add	r6, sp, #56	; 0x38
   27af8:	ldr	r0, [r0]
   27afc:	add	r1, r0, r1
   27b00:	ldr	r0, [sp, #32]
   27b04:	str	r1, [sp, #40]	; 0x28
   27b08:	cmp	r1, r0
   27b0c:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27b10:	ldr	r3, [sl]
   27b14:	cmp	r3, #0
   27b18:	beq	27b48 <ReadCompressedDataSlabN+0x1f78>
   27b1c:	ldr	r8, [fp, #8]
   27b20:	ldr	r0, [sp, #52]	; 0x34
   27b24:	mov	r1, r6
   27b28:	mov	r2, r8
   27b2c:	mov	r7, r0
   27b30:	bl	26ec <InflateSkipData>
   27b34:	ldr	r0, [sl]
   27b38:	ldr	r1, [sp, #48]	; 0x30
   27b3c:	add	r4, sp, #112	; 0x70
   27b40:	add	r9, r0, r9
   27b44:	b	27b58 <ReadCompressedDataSlabN+0x1f88>
   27b48:	ldr	r1, [sp, #48]	; 0x30
   27b4c:	ldr	r7, [sp, #52]	; 0x34
   27b50:	ldr	r8, [fp, #8]
   27b54:	add	r4, sp, #112	; 0x70
   27b58:	ldr	r0, [fp, #28]
   27b5c:	mov	r3, r8
   27b60:	ldr	r0, [r0]
   27b64:	str	r0, [sp]
   27b68:	ldr	r0, [sp, #40]	; 0x28
   27b6c:	add	r2, r1, r0, lsl #2
   27b70:	mov	r0, r7
   27b74:	mov	r1, r6
   27b78:	bl	16ab8 <ReadCompressedUInt32Data>
   27b7c:	ldr	r1, [fp, #16]
   27b80:	ldr	r0, [sl]
   27b84:	mov	r2, r8
   27b88:	ldr	r1, [r1]
   27b8c:	sub	r0, r1, r0
   27b90:	ldr	r1, [fp, #28]
   27b94:	ldr	r1, [r1]
   27b98:	sub	r3, r0, r1
   27b9c:	mov	r0, r7
   27ba0:	mov	r1, r6
   27ba4:	bl	26ec <InflateSkipData>
   27ba8:	ldr	r0, [fp, #16]
   27bac:	ldr	r1, [sl]
   27bb0:	ldr	r0, [r0]
   27bb4:	add	r0, r0, r9
   27bb8:	sub	r9, r0, r1
   27bbc:	ldr	r0, [fp, #12]
   27bc0:	cmp	r0, #2
   27bc4:	blt	27ae8 <ReadCompressedDataSlabN+0x1f18>
   27bc8:	ldr	sl, [sp, #28]
   27bcc:	ldr	r8, [sp, #36]	; 0x24
   27bd0:	ldr	r3, [sp, #44]	; 0x2c
   27bd4:	ldr	r7, [sp, #24]
   27bd8:	mov	r6, #0
   27bdc:	b	27c34 <ReadCompressedDataSlabN+0x2064>
   27be0:	ldr	r2, [r4, r6]
   27be4:	ldr	r3, [r7, r6]
   27be8:	sub	r0, r0, r1
   27bec:	add	r1, sp, #56	; 0x38
   27bf0:	mla	r3, r3, r2, r0
   27bf4:	ldr	r0, [sp, #52]	; 0x34
   27bf8:	ldr	r2, [fp, #8]
   27bfc:	bl	26ec <InflateSkipData>
   27c00:	ldr	r3, [sp, #44]	; 0x2c
   27c04:	ldr	r2, [r7, r6]
   27c08:	ldr	r0, [r3, r6]
   27c0c:	sdiv	r1, r9, r0
   27c10:	mul	r1, r1, r0
   27c14:	add	r0, r0, r9
   27c18:	sub	r1, r1, r9
   27c1c:	add	r0, r0, r1
   27c20:	ldr	r1, [r4, r6]
   27c24:	mla	r9, r2, r1, r0
   27c28:	subs	sl, sl, #1
   27c2c:	add	r6, r6, #4
   27c30:	beq	27ae8 <ReadCompressedDataSlabN+0x1f18>
   27c34:	ldr	r0, [r5, r6]
   27c38:	add	r0, r0, #1
   27c3c:	str	r0, [r5, r6]
   27c40:	ldr	r1, [r8, r6]
   27c44:	sdiv	r2, r0, r1
   27c48:	mls	r0, r2, r1, r0
   27c4c:	cmp	r0, #0
   27c50:	bne	27ca8 <ReadCompressedDataSlabN+0x20d8>
   27c54:	mov	r0, #0
   27c58:	str	r0, [r5, r6]
   27c5c:	ldr	r0, [r3, r6]
   27c60:	sdiv	r1, r9, r0
   27c64:	mls	r1, r1, r0, r9
   27c68:	cmp	r1, #0
   27c6c:	bne	27be0 <ReadCompressedDataSlabN+0x2010>
   27c70:	ldr	r0, [r7, r6]
   27c74:	cmp	r0, #0
   27c78:	beq	27c28 <ReadCompressedDataSlabN+0x2058>
   27c7c:	ldr	r1, [r4, r6]
   27c80:	ldr	r2, [fp, #8]
   27c84:	mul	r3, r1, r0
   27c88:	ldr	r0, [sp, #52]	; 0x34
   27c8c:	add	r1, sp, #56	; 0x38
   27c90:	bl	26ec <InflateSkipData>
   27c94:	ldr	r0, [r4, r6]
   27c98:	ldr	r1, [r7, r6]
   27c9c:	ldr	r3, [sp, #44]	; 0x2c
   27ca0:	mla	r9, r1, r0, r9
   27ca4:	b	27c28 <ReadCompressedDataSlabN+0x2058>
   27ca8:	ldr	r0, [sp, #20]
   27cac:	ldr	r4, [r0, r6]
   27cb0:	cmp	r4, #0
   27cb4:	beq	27ae8 <ReadCompressedDataSlabN+0x1f18>
   27cb8:	ldr	r0, [sp, #52]	; 0x34
   27cbc:	ldr	r2, [fp, #8]
   27cc0:	add	r1, sp, #56	; 0x38
   27cc4:	mov	r3, r4
   27cc8:	bl	26ec <InflateSkipData>
   27ccc:	add	r9, r4, r9
   27cd0:	b	27ae8 <ReadCompressedDataSlabN+0x1f18>
   27cd4:	ldr	r0, [sp, #52]	; 0x34
   27cd8:	ldr	r2, [fp, #8]
   27cdc:	add	r1, sp, #56	; 0x38
   27ce0:	mov	r3, r9
   27ce4:	bl	26ec <InflateSkipData>
   27ce8:	ldr	r0, [fp, #24]
   27cec:	ldr	r0, [r0]
   27cf0:	cmp	r0, #1
   27cf4:	bne	299a0 <ReadCompressedDataSlabN+0x3dd0>
   27cf8:	ldr	r0, [sp, #32]
   27cfc:	cmp	r0, #1
   27d00:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27d04:	sub	r0, fp, #112	; 0x70
   27d08:	add	r7, sp, #56	; 0x38
   27d0c:	orr	r5, r0, #4
   27d10:	ldr	r0, [fp, #28]
   27d14:	add	r0, r0, #4
   27d18:	str	r0, [sp, #36]	; 0x24
   27d1c:	add	r0, sp, #112	; 0x70
   27d20:	orr	r0, r0, #4
   27d24:	str	r0, [sp, #28]
   27d28:	add	r0, sl, #4
   27d2c:	str	r0, [sp, #44]	; 0x2c
   27d30:	ldr	r0, [fp, #12]
   27d34:	sub	r0, r0, #1
   27d38:	str	r0, [sp, #24]
   27d3c:	sub	r0, fp, #72	; 0x48
   27d40:	orr	r0, r0, #4
   27d44:	str	r0, [sp, #20]
   27d48:	mov	r0, #0
   27d4c:	str	r0, [sp, #40]	; 0x28
   27d50:	b	27d7c <ReadCompressedDataSlabN+0x21ac>
   27d54:	ldr	r0, [fp, #28]
   27d58:	ldr	r1, [sp, #40]	; 0x28
   27d5c:	ldr	sl, [fp, #20]
   27d60:	add	r7, sp, #56	; 0x38
   27d64:	ldr	r0, [r0]
   27d68:	add	r1, r0, r1
   27d6c:	ldr	r0, [sp, #32]
   27d70:	str	r1, [sp, #40]	; 0x28
   27d74:	cmp	r1, r0
   27d78:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27d7c:	ldr	r3, [sl]
   27d80:	cmp	r3, #0
   27d84:	beq	27db4 <ReadCompressedDataSlabN+0x21e4>
   27d88:	ldr	r6, [sp, #52]	; 0x34
   27d8c:	ldr	r8, [fp, #8]
   27d90:	mov	r1, r7
   27d94:	mov	r0, r6
   27d98:	mov	r2, r8
   27d9c:	bl	26ec <InflateSkipData>
   27da0:	ldr	r0, [sl]
   27da4:	ldr	r1, [sp, #48]	; 0x30
   27da8:	add	r4, sp, #112	; 0x70
   27dac:	add	r9, r0, r9
   27db0:	b	27dc4 <ReadCompressedDataSlabN+0x21f4>
   27db4:	ldr	r1, [sp, #48]	; 0x30
   27db8:	ldr	r6, [sp, #52]	; 0x34
   27dbc:	ldr	r8, [fp, #8]
   27dc0:	add	r4, sp, #112	; 0x70
   27dc4:	ldr	r0, [fp, #28]
   27dc8:	mov	r3, r8
   27dcc:	ldr	r0, [r0]
   27dd0:	str	r0, [sp]
   27dd4:	ldr	r0, [sp, #40]	; 0x28
   27dd8:	add	r2, r1, r0, lsl #3
   27ddc:	mov	r0, r6
   27de0:	mov	r1, r7
   27de4:	bl	e3c0 <ReadCompressedInt64Data>
   27de8:	ldr	r1, [fp, #16]
   27dec:	ldr	r0, [sl]
   27df0:	mov	r2, r8
   27df4:	ldr	r1, [r1]
   27df8:	sub	r0, r1, r0
   27dfc:	ldr	r1, [fp, #28]
   27e00:	ldr	r1, [r1]
   27e04:	sub	r3, r0, r1
   27e08:	mov	r0, r6
   27e0c:	mov	r1, r7
   27e10:	bl	26ec <InflateSkipData>
   27e14:	ldr	r0, [fp, #16]
   27e18:	ldr	r1, [sl]
   27e1c:	ldr	r0, [r0]
   27e20:	add	r0, r0, r9
   27e24:	sub	r9, r0, r1
   27e28:	ldr	r0, [fp, #12]
   27e2c:	cmp	r0, #2
   27e30:	blt	27d54 <ReadCompressedDataSlabN+0x2184>
   27e34:	ldr	sl, [sp, #24]
   27e38:	ldr	r8, [sp, #36]	; 0x24
   27e3c:	ldr	r7, [sp, #28]
   27e40:	ldr	r3, [sp, #44]	; 0x2c
   27e44:	mov	r6, #0
   27e48:	b	27ea0 <ReadCompressedDataSlabN+0x22d0>
   27e4c:	ldr	r2, [r4, r6]
   27e50:	ldr	r3, [r3, r6]
   27e54:	sub	r0, r0, r1
   27e58:	add	r1, sp, #56	; 0x38
   27e5c:	mla	r3, r3, r2, r0
   27e60:	ldr	r0, [sp, #52]	; 0x34
   27e64:	ldr	r2, [fp, #8]
   27e68:	bl	26ec <InflateSkipData>
   27e6c:	ldr	r0, [r7, r6]
   27e70:	ldr	r3, [sp, #44]	; 0x2c
   27e74:	sdiv	r1, r9, r0
   27e78:	ldr	r2, [r3, r6]
   27e7c:	mul	r1, r1, r0
   27e80:	add	r0, r0, r9
   27e84:	sub	r1, r1, r9
   27e88:	add	r0, r0, r1
   27e8c:	ldr	r1, [r4, r6]
   27e90:	mla	r9, r2, r1, r0
   27e94:	subs	sl, sl, #1
   27e98:	add	r6, r6, #4
   27e9c:	beq	27d54 <ReadCompressedDataSlabN+0x2184>
   27ea0:	ldr	r0, [r5, r6]
   27ea4:	add	r0, r0, #1
   27ea8:	str	r0, [r5, r6]
   27eac:	ldr	r1, [r8, r6]
   27eb0:	sdiv	r2, r0, r1
   27eb4:	mls	r0, r2, r1, r0
   27eb8:	cmp	r0, #0
   27ebc:	bne	27f14 <ReadCompressedDataSlabN+0x2344>
   27ec0:	mov	r0, #0
   27ec4:	str	r0, [r5, r6]
   27ec8:	ldr	r0, [r7, r6]
   27ecc:	sdiv	r1, r9, r0
   27ed0:	mls	r1, r1, r0, r9
   27ed4:	cmp	r1, #0
   27ed8:	bne	27e4c <ReadCompressedDataSlabN+0x227c>
   27edc:	ldr	r0, [r3, r6]
   27ee0:	cmp	r0, #0
   27ee4:	beq	27e94 <ReadCompressedDataSlabN+0x22c4>
   27ee8:	ldr	r1, [r4, r6]
   27eec:	ldr	r2, [fp, #8]
   27ef0:	mul	r3, r1, r0
   27ef4:	ldr	r0, [sp, #52]	; 0x34
   27ef8:	add	r1, sp, #56	; 0x38
   27efc:	bl	26ec <InflateSkipData>
   27f00:	ldr	r3, [sp, #44]	; 0x2c
   27f04:	ldr	r0, [r4, r6]
   27f08:	ldr	r1, [r3, r6]
   27f0c:	mla	r9, r1, r0, r9
   27f10:	b	27e94 <ReadCompressedDataSlabN+0x22c4>
   27f14:	ldr	r0, [sp, #20]
   27f18:	ldr	r4, [r0, r6]
   27f1c:	cmp	r4, #0
   27f20:	beq	27d54 <ReadCompressedDataSlabN+0x2184>
   27f24:	ldr	r0, [sp, #52]	; 0x34
   27f28:	ldr	r2, [fp, #8]
   27f2c:	add	r1, sp, #56	; 0x38
   27f30:	mov	r3, r4
   27f34:	bl	26ec <InflateSkipData>
   27f38:	add	r9, r4, r9
   27f3c:	b	27d54 <ReadCompressedDataSlabN+0x2184>
   27f40:	ldr	r0, [sp, #52]	; 0x34
   27f44:	ldr	r2, [fp, #8]
   27f48:	add	r1, sp, #56	; 0x38
   27f4c:	mov	r3, r9
   27f50:	bl	26ec <InflateSkipData>
   27f54:	ldr	r0, [fp, #24]
   27f58:	ldr	r0, [r0]
   27f5c:	cmp	r0, #1
   27f60:	bne	29cac <ReadCompressedDataSlabN+0x40dc>
   27f64:	ldr	r0, [sp, #32]
   27f68:	cmp	r0, #1
   27f6c:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27f70:	sub	r0, fp, #112	; 0x70
   27f74:	add	r7, sl, #4
   27f78:	add	r6, sp, #56	; 0x38
   27f7c:	orr	r5, r0, #4
   27f80:	ldr	r0, [fp, #28]
   27f84:	str	r7, [sp, #24]
   27f88:	add	r8, r0, #4
   27f8c:	add	r0, sp, #112	; 0x70
   27f90:	orr	r3, r0, #4
   27f94:	ldr	r0, [fp, #12]
   27f98:	str	r8, [sp, #36]	; 0x24
   27f9c:	str	r3, [sp, #44]	; 0x2c
   27fa0:	sub	r0, r0, #1
   27fa4:	str	r0, [sp, #28]
   27fa8:	sub	r0, fp, #72	; 0x48
   27fac:	orr	r0, r0, #4
   27fb0:	str	r0, [sp, #20]
   27fb4:	mov	r0, #0
   27fb8:	str	r0, [sp, #40]	; 0x28
   27fbc:	b	27fe8 <ReadCompressedDataSlabN+0x2418>
   27fc0:	ldr	r0, [fp, #28]
   27fc4:	ldr	r1, [sp, #40]	; 0x28
   27fc8:	ldr	sl, [fp, #20]
   27fcc:	add	r6, sp, #56	; 0x38
   27fd0:	ldr	r0, [r0]
   27fd4:	add	r1, r0, r1
   27fd8:	ldr	r0, [sp, #32]
   27fdc:	str	r1, [sp, #40]	; 0x28
   27fe0:	cmp	r1, r0
   27fe4:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   27fe8:	ldr	r3, [sl]
   27fec:	cmp	r3, #0
   27ff0:	beq	28020 <ReadCompressedDataSlabN+0x2450>
   27ff4:	ldr	r8, [fp, #8]
   27ff8:	ldr	r0, [sp, #52]	; 0x34
   27ffc:	mov	r1, r6
   28000:	mov	r2, r8
   28004:	mov	r7, r0
   28008:	bl	26ec <InflateSkipData>
   2800c:	ldr	r0, [sl]
   28010:	ldr	r1, [sp, #48]	; 0x30
   28014:	add	r4, sp, #112	; 0x70
   28018:	add	r9, r0, r9
   2801c:	b	28030 <ReadCompressedDataSlabN+0x2460>
   28020:	ldr	r1, [sp, #48]	; 0x30
   28024:	ldr	r7, [sp, #52]	; 0x34
   28028:	ldr	r8, [fp, #8]
   2802c:	add	r4, sp, #112	; 0x70
   28030:	ldr	r0, [fp, #28]
   28034:	mov	r3, r8
   28038:	ldr	r0, [r0]
   2803c:	str	r0, [sp]
   28040:	ldr	r0, [sp, #40]	; 0x28
   28044:	add	r2, r1, r0, lsl #3
   28048:	mov	r0, r7
   2804c:	mov	r1, r6
   28050:	bl	110f0 <ReadCompressedUInt64Data>
   28054:	ldr	r1, [fp, #16]
   28058:	ldr	r0, [sl]
   2805c:	mov	r2, r8
   28060:	ldr	r1, [r1]
   28064:	sub	r0, r1, r0
   28068:	ldr	r1, [fp, #28]
   2806c:	ldr	r1, [r1]
   28070:	sub	r3, r0, r1
   28074:	mov	r0, r7
   28078:	mov	r1, r6
   2807c:	bl	26ec <InflateSkipData>
   28080:	ldr	r0, [fp, #16]
   28084:	ldr	r1, [sl]
   28088:	ldr	r0, [r0]
   2808c:	add	r0, r0, r9
   28090:	sub	r9, r0, r1
   28094:	ldr	r0, [fp, #12]
   28098:	cmp	r0, #2
   2809c:	blt	27fc0 <ReadCompressedDataSlabN+0x23f0>
   280a0:	ldr	sl, [sp, #28]
   280a4:	ldr	r8, [sp, #36]	; 0x24
   280a8:	ldr	r3, [sp, #44]	; 0x2c
   280ac:	ldr	r7, [sp, #24]
   280b0:	mov	r6, #0
   280b4:	b	2810c <ReadCompressedDataSlabN+0x253c>
   280b8:	ldr	r2, [r4, r6]
   280bc:	ldr	r3, [r7, r6]
   280c0:	sub	r0, r0, r1
   280c4:	add	r1, sp, #56	; 0x38
   280c8:	mla	r3, r3, r2, r0
   280cc:	ldr	r0, [sp, #52]	; 0x34
   280d0:	ldr	r2, [fp, #8]
   280d4:	bl	26ec <InflateSkipData>
   280d8:	ldr	r3, [sp, #44]	; 0x2c
   280dc:	ldr	r2, [r7, r6]
   280e0:	ldr	r0, [r3, r6]
   280e4:	sdiv	r1, r9, r0
   280e8:	mul	r1, r1, r0
   280ec:	add	r0, r0, r9
   280f0:	sub	r1, r1, r9
   280f4:	add	r0, r0, r1
   280f8:	ldr	r1, [r4, r6]
   280fc:	mla	r9, r2, r1, r0
   28100:	subs	sl, sl, #1
   28104:	add	r6, r6, #4
   28108:	beq	27fc0 <ReadCompressedDataSlabN+0x23f0>
   2810c:	ldr	r0, [r5, r6]
   28110:	add	r0, r0, #1
   28114:	str	r0, [r5, r6]
   28118:	ldr	r1, [r8, r6]
   2811c:	sdiv	r2, r0, r1
   28120:	mls	r0, r2, r1, r0
   28124:	cmp	r0, #0
   28128:	bne	28180 <ReadCompressedDataSlabN+0x25b0>
   2812c:	mov	r0, #0
   28130:	str	r0, [r5, r6]
   28134:	ldr	r0, [r3, r6]
   28138:	sdiv	r1, r9, r0
   2813c:	mls	r1, r1, r0, r9
   28140:	cmp	r1, #0
   28144:	bne	280b8 <ReadCompressedDataSlabN+0x24e8>
   28148:	ldr	r0, [r7, r6]
   2814c:	cmp	r0, #0
   28150:	beq	28100 <ReadCompressedDataSlabN+0x2530>
   28154:	ldr	r1, [r4, r6]
   28158:	ldr	r2, [fp, #8]
   2815c:	mul	r3, r1, r0
   28160:	ldr	r0, [sp, #52]	; 0x34
   28164:	add	r1, sp, #56	; 0x38
   28168:	bl	26ec <InflateSkipData>
   2816c:	ldr	r0, [r4, r6]
   28170:	ldr	r1, [r7, r6]
   28174:	ldr	r3, [sp, #44]	; 0x2c
   28178:	mla	r9, r1, r0, r9
   2817c:	b	28100 <ReadCompressedDataSlabN+0x2530>
   28180:	ldr	r0, [sp, #20]
   28184:	ldr	r4, [r0, r6]
   28188:	cmp	r4, #0
   2818c:	beq	27fc0 <ReadCompressedDataSlabN+0x23f0>
   28190:	ldr	r0, [sp, #52]	; 0x34
   28194:	ldr	r2, [fp, #8]
   28198:	add	r1, sp, #56	; 0x38
   2819c:	mov	r3, r4
   281a0:	bl	26ec <InflateSkipData>
   281a4:	add	r9, r4, r9
   281a8:	b	27fc0 <ReadCompressedDataSlabN+0x23f0>
   281ac:	mov	r1, #0
   281b0:	str	r1, [sp, #44]	; 0x2c
   281b4:	ldr	r0, [sp, #52]	; 0x34
   281b8:	ldr	r2, [fp, #8]
   281bc:	ldr	r3, [sp, #44]	; 0x2c
   281c0:	add	r1, sp, #56	; 0x38
   281c4:	bl	26ec <InflateSkipData>
   281c8:	ldr	r0, [fp, #24]
   281cc:	ldr	r0, [r0]
   281d0:	cmp	r0, #1
   281d4:	bne	29fb8 <ReadCompressedDataSlabN+0x43e8>
   281d8:	ldr	r0, [sp, #28]
   281dc:	cmp	r0, #1
   281e0:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   281e4:	sub	r0, fp, #112	; 0x70
   281e8:	add	r5, sp, #56	; 0x38
   281ec:	orr	r9, r0, #4
   281f0:	ldr	r0, [fp, #28]
   281f4:	add	r0, r0, #4
   281f8:	str	r0, [sp, #40]	; 0x28
   281fc:	add	r0, sp, #112	; 0x70
   28200:	orr	r0, r0, #4
   28204:	str	r0, [sp, #24]
   28208:	add	r0, sl, #4
   2820c:	str	r0, [sp, #20]
   28210:	ldr	r0, [fp, #12]
   28214:	sub	r0, r0, #1
   28218:	str	r0, [sp, #32]
   2821c:	sub	r0, fp, #72	; 0x48
   28220:	orr	r0, r0, #4
   28224:	str	r0, [sp, #16]
   28228:	mov	r0, #0
   2822c:	str	r0, [sp, #36]	; 0x24
   28230:	b	28260 <ReadCompressedDataSlabN+0x2690>
   28234:	ldr	r0, [fp, #28]
   28238:	ldr	r1, [sp, #36]	; 0x24
   2823c:	ldr	sl, [fp, #20]
   28240:	add	r5, sp, #56	; 0x38
   28244:	str	r3, [sp, #44]	; 0x2c
   28248:	ldr	r0, [r0]
   2824c:	add	r1, r0, r1
   28250:	ldr	r0, [sp, #28]
   28254:	str	r1, [sp, #36]	; 0x24
   28258:	cmp	r1, r0
   2825c:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   28260:	ldr	r3, [sl]
   28264:	cmp	r3, #0
   28268:	beq	282a4 <ReadCompressedDataSlabN+0x26d4>
   2826c:	ldr	r6, [sp, #52]	; 0x34
   28270:	ldr	r7, [fp, #8]
   28274:	mov	r1, r5
   28278:	mov	r0, r6
   2827c:	mov	r2, r7
   28280:	bl	26ec <InflateSkipData>
   28284:	ldr	r1, [sp, #44]	; 0x2c
   28288:	ldr	r0, [sl]
   2828c:	add	r8, sp, #112	; 0x70
   28290:	mov	r2, r1
   28294:	add	r2, r0, r1
   28298:	ldr	r1, [sp, #48]	; 0x30
   2829c:	mov	r4, r2
   282a0:	b	282bc <ReadCompressedDataSlabN+0x26ec>
   282a4:	ldr	r0, [sp, #44]	; 0x2c
   282a8:	ldr	r1, [sp, #48]	; 0x30
   282ac:	ldr	r6, [sp, #52]	; 0x34
   282b0:	ldr	r7, [fp, #8]
   282b4:	add	r8, sp, #112	; 0x70
   282b8:	mov	r4, r0
   282bc:	ldr	r0, [fp, #28]
   282c0:	mov	r3, r7
   282c4:	ldr	r0, [r0]
   282c8:	str	r0, [sp]
   282cc:	ldr	r0, [sp, #36]	; 0x24
   282d0:	add	r2, r1, r0, lsl #3
   282d4:	mov	r0, r6
   282d8:	mov	r1, r5
   282dc:	bl	6348 <ReadCompressedDoubleData>
   282e0:	ldr	r1, [fp, #16]
   282e4:	ldr	r0, [sl]
   282e8:	mov	r2, r7
   282ec:	ldr	r1, [r1]
   282f0:	sub	r0, r1, r0
   282f4:	ldr	r1, [fp, #28]
   282f8:	ldr	r1, [r1]
   282fc:	sub	r3, r0, r1
   28300:	mov	r0, r6
   28304:	mov	r1, r5
   28308:	bl	26ec <InflateSkipData>
   2830c:	ldr	r0, [fp, #16]
   28310:	ldr	r1, [sl]
   28314:	ldr	r0, [r0]
   28318:	add	r0, r0, r4
   2831c:	sub	r3, r0, r1
   28320:	ldr	r0, [fp, #12]
   28324:	cmp	r0, #2
   28328:	blt	28234 <ReadCompressedDataSlabN+0x2664>
   2832c:	ldr	sl, [sp, #32]
   28330:	ldr	r4, [sp, #24]
   28334:	ldr	r5, [sp, #20]
   28338:	mov	r6, #0
   2833c:	b	28394 <ReadCompressedDataSlabN+0x27c4>
   28340:	mov	r7, r3
   28344:	ldr	r2, [r8, r6]
   28348:	ldr	r3, [r5, r6]
   2834c:	sub	r0, r0, r1
   28350:	add	r1, sp, #56	; 0x38
   28354:	mla	r3, r3, r2, r0
   28358:	ldr	r0, [sp, #52]	; 0x34
   2835c:	ldr	r2, [fp, #8]
   28360:	bl	26ec <InflateSkipData>
   28364:	ldr	r0, [r4, r6]
   28368:	ldr	r2, [r5, r6]
   2836c:	sdiv	r1, r7, r0
   28370:	mul	r1, r1, r0
   28374:	add	r0, r0, r7
   28378:	sub	r1, r1, r7
   2837c:	add	r0, r0, r1
   28380:	ldr	r1, [r8, r6]
   28384:	mla	r3, r2, r1, r0
   28388:	subs	sl, sl, #1
   2838c:	add	r6, r6, #4
   28390:	beq	28234 <ReadCompressedDataSlabN+0x2664>
   28394:	ldr	r0, [r9, r6]
   28398:	ldr	r1, [sp, #40]	; 0x28
   2839c:	add	r0, r0, #1
   283a0:	str	r0, [r9, r6]
   283a4:	ldr	r1, [r1, r6]
   283a8:	sdiv	r2, r0, r1
   283ac:	mls	r0, r2, r1, r0
   283b0:	cmp	r0, #0
   283b4:	bne	28410 <ReadCompressedDataSlabN+0x2840>
   283b8:	mov	r0, #0
   283bc:	str	r0, [r9, r6]
   283c0:	ldr	r0, [r4, r6]
   283c4:	sdiv	r1, r3, r0
   283c8:	mls	r1, r1, r0, r3
   283cc:	cmp	r1, #0
   283d0:	bne	28340 <ReadCompressedDataSlabN+0x2770>
   283d4:	ldr	r0, [r5, r6]
   283d8:	cmp	r0, #0
   283dc:	beq	28388 <ReadCompressedDataSlabN+0x27b8>
   283e0:	ldr	r1, [r8, r6]
   283e4:	mov	r7, r3
   283e8:	ldr	r2, [fp, #8]
   283ec:	mul	r3, r1, r0
   283f0:	ldr	r0, [sp, #52]	; 0x34
   283f4:	add	r1, sp, #56	; 0x38
   283f8:	bl	26ec <InflateSkipData>
   283fc:	ldr	r0, [r8, r6]
   28400:	ldr	r1, [r5, r6]
   28404:	mov	r3, r7
   28408:	mla	r3, r1, r0, r7
   2840c:	b	28388 <ReadCompressedDataSlabN+0x27b8>
   28410:	ldr	r0, [sp, #16]
   28414:	ldr	r5, [r0, r6]
   28418:	cmp	r5, #0
   2841c:	beq	28234 <ReadCompressedDataSlabN+0x2664>
   28420:	ldr	r0, [sp, #52]	; 0x34
   28424:	ldr	r2, [fp, #8]
   28428:	mov	r4, r3
   2842c:	add	r1, sp, #56	; 0x38
   28430:	mov	r3, r5
   28434:	bl	26ec <InflateSkipData>
   28438:	mov	r3, r4
   2843c:	add	r3, r5, r4
   28440:	b	28234 <ReadCompressedDataSlabN+0x2664>
   28444:	ldr	r0, [sp, #32]
   28448:	cmp	r0, #1
   2844c:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   28450:	sub	r0, fp, #112	; 0x70
   28454:	add	r7, sl, #4
   28458:	add	r1, sp, #56	; 0x38
   2845c:	orr	r8, r0, #4
   28460:	ldr	r0, [fp, #28]
   28464:	str	r7, [sp, #36]	; 0x24
   28468:	str	r8, [sp, #20]
   2846c:	add	r0, r0, #4
   28470:	str	r0, [sp, #44]	; 0x2c
   28474:	add	r0, sp, #112	; 0x70
   28478:	orr	r3, r0, #4
   2847c:	ldr	r0, [fp, #12]
   28480:	str	r3, [sp, #40]	; 0x28
   28484:	sub	r0, r0, #1
   28488:	str	r0, [sp, #16]
   2848c:	sub	r0, fp, #72	; 0x48
   28490:	orr	r0, r0, #4
   28494:	str	r0, [sp, #8]
   28498:	ldr	r0, [sp, #48]	; 0x30
   2849c:	add	r0, r0, #4
   284a0:	str	r0, [sp, #12]
   284a4:	mov	r0, #0
   284a8:	str	r0, [sp, #28]
   284ac:	b	284d4 <ReadCompressedDataSlabN+0x2904>
   284b0:	ldr	r0, [r5]
   284b4:	ldr	r1, [sp, #28]
   284b8:	ldr	sl, [fp, #20]
   284bc:	add	r1, r0, r1
   284c0:	ldr	r0, [sp, #32]
   284c4:	str	r1, [sp, #28]
   284c8:	cmp	r1, r0
   284cc:	add	r1, sp, #56	; 0x38
   284d0:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   284d4:	ldr	r3, [sl]
   284d8:	cmp	r3, #0
   284dc:	beq	28510 <ReadCompressedDataSlabN+0x2940>
   284e0:	ldr	r7, [sp, #52]	; 0x34
   284e4:	ldr	r6, [fp, #8]
   284e8:	mov	r4, sl
   284ec:	mov	sl, r1
   284f0:	mov	r0, r7
   284f4:	mov	r2, r6
   284f8:	bl	26ec <InflateSkipData>
   284fc:	ldr	r0, [r4]
   28500:	ldr	r5, [fp, #28]
   28504:	add	r9, r0, r9
   28508:	ldr	r0, [sp, #48]	; 0x30
   2850c:	b	28524 <ReadCompressedDataSlabN+0x2954>
   28510:	ldr	r0, [sp, #48]	; 0x30
   28514:	ldr	r7, [sp, #52]	; 0x34
   28518:	ldr	r5, [fp, #28]
   2851c:	ldr	r6, [fp, #8]
   28520:	mov	sl, r1
   28524:	ldr	r4, [sp, #28]
   28528:	ldr	r8, [r5]
   2852c:	mov	r1, #1
   28530:	mov	r3, r6
   28534:	str	r9, [sp, #24]
   28538:	str	r1, [sp]
   2853c:	mov	r1, sl
   28540:	add	r2, r0, r4, lsl #2
   28544:	mov	r0, r7
   28548:	bl	b6c0 <ReadCompressedSingleData>
   2854c:	ldr	r1, [fp, #24]
   28550:	cmp	r8, #2
   28554:	blt	285dc <ReadCompressedDataSlabN+0x2a0c>
   28558:	ldr	r0, [sp, #12]
   2855c:	ldr	r9, [sp, #24]
   28560:	add	r6, r0, r4, lsl #2
   28564:	mov	r4, #0
   28568:	ldr	r0, [r1]
   2856c:	ldr	sl, [fp, #8]
   28570:	ldr	r5, [sp, #52]	; 0x34
   28574:	add	r8, sp, #56	; 0x38
   28578:	mov	r1, r8
   2857c:	sub	r3, r0, #1
   28580:	mov	r0, r5
   28584:	mov	r2, sl
   28588:	bl	26ec <InflateSkipData>
   2858c:	ldr	r0, [fp, #28]
   28590:	ldr	r3, [fp, #8]
   28594:	mov	r1, r8
   28598:	mov	r2, r6
   2859c:	ldr	sl, [r0]
   285a0:	ldr	r0, [fp, #24]
   285a4:	ldr	r7, [r0]
   285a8:	mov	r0, #1
   285ac:	str	r0, [sp]
   285b0:	mov	r0, r5
   285b4:	bl	b6c0 <ReadCompressedSingleData>
   285b8:	ldr	r1, [fp, #24]
   285bc:	ldr	r5, [fp, #28]
   285c0:	add	r4, r4, #1
   285c4:	sub	r0, sl, #1
   285c8:	add	r9, r7, r9
   285cc:	add	r6, r6, #4
   285d0:	cmp	r4, r0
   285d4:	blt	28568 <ReadCompressedDataSlabN+0x2998>
   285d8:	b	285e0 <ReadCompressedDataSlabN+0x2a10>
   285dc:	ldr	r9, [sp, #24]
   285e0:	ldr	r0, [fp, #16]
   285e4:	ldr	r2, [r5]
   285e8:	ldr	r1, [r1]
   285ec:	ldr	r0, [r0]
   285f0:	sub	r2, r2, #1
   285f4:	mls	r0, r2, r1, r0
   285f8:	ldr	r1, [fp, #20]
   285fc:	ldr	r2, [fp, #8]
   28600:	ldr	r1, [r1]
   28604:	sub	r4, r0, r1
   28608:	ldr	r0, [sp, #52]	; 0x34
   2860c:	add	r1, sp, #56	; 0x38
   28610:	sub	r3, r4, #1
   28614:	bl	26ec <InflateSkipData>
   28618:	ldr	r0, [fp, #12]
   2861c:	add	r9, r4, r9
   28620:	cmp	r0, #2
   28624:	blt	284b0 <ReadCompressedDataSlabN+0x28e0>
   28628:	ldr	sl, [sp, #16]
   2862c:	ldr	r8, [sp, #20]
   28630:	ldr	r3, [sp, #40]	; 0x28
   28634:	ldr	r7, [sp, #36]	; 0x24
   28638:	mov	r6, #0
   2863c:	b	286a0 <ReadCompressedDataSlabN+0x2ad0>
   28640:	add	r2, sp, #112	; 0x70
   28644:	ldr	r3, [r7, r6]
   28648:	sub	r0, r0, r1
   2864c:	add	r1, sp, #56	; 0x38
   28650:	mov	r4, r2
   28654:	ldr	r2, [r2, r6]
   28658:	mla	r3, r3, r2, r0
   2865c:	ldr	r0, [sp, #52]	; 0x34
   28660:	ldr	r2, [fp, #8]
   28664:	bl	26ec <InflateSkipData>
   28668:	ldr	r3, [sp, #40]	; 0x28
   2866c:	ldr	r7, [sp, #36]	; 0x24
   28670:	ldr	r0, [r3, r6]
   28674:	ldr	r2, [r7, r6]
   28678:	sdiv	r1, r9, r0
   2867c:	mul	r1, r1, r0
   28680:	add	r0, r0, r9
   28684:	sub	r1, r1, r9
   28688:	add	r0, r0, r1
   2868c:	ldr	r1, [r4, r6]
   28690:	mla	r9, r2, r1, r0
   28694:	subs	sl, sl, #1
   28698:	add	r6, r6, #4
   2869c:	beq	284b0 <ReadCompressedDataSlabN+0x28e0>
   286a0:	ldr	r0, [r8, r6]
   286a4:	ldr	r1, [sp, #44]	; 0x2c
   286a8:	add	r0, r0, #1
   286ac:	str	r0, [r8, r6]
   286b0:	ldr	r1, [r1, r6]
   286b4:	sdiv	r2, r0, r1
   286b8:	mls	r0, r2, r1, r0
   286bc:	cmp	r0, #0
   286c0:	bne	28724 <ReadCompressedDataSlabN+0x2b54>
   286c4:	mov	r0, #0
   286c8:	str	r0, [r8, r6]
   286cc:	ldr	r0, [r3, r6]
   286d0:	sdiv	r1, r9, r0
   286d4:	mls	r1, r1, r0, r9
   286d8:	cmp	r1, #0
   286dc:	bne	28640 <ReadCompressedDataSlabN+0x2a70>
   286e0:	ldr	r0, [r7, r6]
   286e4:	cmp	r0, #0
   286e8:	beq	28694 <ReadCompressedDataSlabN+0x2ac4>
   286ec:	add	r1, sp, #112	; 0x70
   286f0:	ldr	r2, [fp, #8]
   286f4:	mov	r4, r1
   286f8:	ldr	r1, [r1, r6]
   286fc:	mul	r3, r1, r0
   28700:	ldr	r0, [sp, #52]	; 0x34
   28704:	add	r1, sp, #56	; 0x38
   28708:	bl	26ec <InflateSkipData>
   2870c:	ldr	r7, [sp, #36]	; 0x24
   28710:	ldr	r0, [r4, r6]
   28714:	ldr	r3, [sp, #40]	; 0x28
   28718:	ldr	r1, [r7, r6]
   2871c:	mla	r9, r1, r0, r9
   28720:	b	28694 <ReadCompressedDataSlabN+0x2ac4>
   28724:	ldr	r0, [sp, #8]
   28728:	ldr	r6, [r0, r6]
   2872c:	cmp	r6, #0
   28730:	beq	284b0 <ReadCompressedDataSlabN+0x28e0>
   28734:	ldr	r0, [sp, #52]	; 0x34
   28738:	ldr	r2, [fp, #8]
   2873c:	add	r1, sp, #56	; 0x38
   28740:	mov	r3, r6
   28744:	bl	26ec <InflateSkipData>
   28748:	add	r9, r6, r9
   2874c:	b	284b0 <ReadCompressedDataSlabN+0x28e0>
   28750:	ldr	r0, [sp, #24]
   28754:	cmp	r0, #1
   28758:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   2875c:	sub	r0, fp, #112	; 0x70
   28760:	add	r5, sl, #4
   28764:	mov	r9, #1
   28768:	add	r7, sp, #56	; 0x38
   2876c:	mov	r4, #0
   28770:	orr	r8, r0, #4
   28774:	ldr	r0, [fp, #28]
   28778:	str	r5, [sp, #32]
   2877c:	str	r8, [sp, #16]
   28780:	add	r0, r0, #4
   28784:	str	r0, [sp, #40]	; 0x28
   28788:	add	r0, sp, #112	; 0x70
   2878c:	orr	r3, r0, #4
   28790:	ldr	r0, [fp, #12]
   28794:	str	r3, [sp, #36]	; 0x24
   28798:	sub	r0, r0, #1
   2879c:	str	r0, [sp, #12]
   287a0:	sub	r0, fp, #72	; 0x48
   287a4:	orr	r0, r0, #4
   287a8:	str	r0, [sp, #4]
   287ac:	ldr	r0, [sp, #48]	; 0x30
   287b0:	add	r0, r0, #1
   287b4:	str	r0, [sp, #8]
   287b8:	b	287e8 <ReadCompressedDataSlabN+0x2c18>
   287bc:	ldr	r0, [fp, #28]
   287c0:	ldr	r4, [sp, #20]
   287c4:	ldr	sl, [fp, #20]
   287c8:	str	r7, [sp, #28]
   287cc:	mov	r9, #1
   287d0:	add	r7, sp, #56	; 0x38
   287d4:	ldr	r0, [r0]
   287d8:	add	r4, r0, r4
   287dc:	ldr	r0, [sp, #24]
   287e0:	cmp	r4, r0
   287e4:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   287e8:	ldr	r3, [sl]
   287ec:	cmp	r3, #0
   287f0:	beq	28824 <ReadCompressedDataSlabN+0x2c54>
   287f4:	ldr	r5, [sp, #52]	; 0x34
   287f8:	ldr	r6, [fp, #8]
   287fc:	mov	r1, r7
   28800:	mov	r0, r5
   28804:	mov	r2, r6
   28808:	bl	26ec <InflateSkipData>
   2880c:	ldr	r0, [sl]
   28810:	ldr	r1, [sp, #28]
   28814:	add	r1, r0, r1
   28818:	ldr	r0, [sp, #48]	; 0x30
   2881c:	str	r1, [sp, #28]
   28820:	b	28830 <ReadCompressedDataSlabN+0x2c60>
   28824:	ldr	r0, [sp, #48]	; 0x30
   28828:	ldr	r5, [sp, #52]	; 0x34
   2882c:	ldr	r6, [fp, #8]
   28830:	ldr	r1, [fp, #28]
   28834:	add	r2, r0, r4
   28838:	mov	r0, r5
   2883c:	mov	r3, r6
   28840:	ldr	r8, [r1]
   28844:	mov	r1, r7
   28848:	str	r9, [sp]
   2884c:	bl	1e858 <ReadCompressedInt8Data>
   28850:	cmp	r8, #2
   28854:	str	r4, [sp, #20]
   28858:	blt	288e0 <ReadCompressedDataSlabN+0x2d10>
   2885c:	ldr	r0, [sp, #8]
   28860:	ldr	r7, [sp, #28]
   28864:	add	r0, r0, r4
   28868:	mov	r4, #0
   2886c:	str	r0, [sp, #44]	; 0x2c
   28870:	ldr	r0, [fp, #24]
   28874:	ldr	r9, [fp, #8]
   28878:	ldr	sl, [sp, #52]	; 0x34
   2887c:	add	r8, sp, #56	; 0x38
   28880:	mov	r1, r8
   28884:	mov	r6, r0
   28888:	ldr	r0, [r0]
   2888c:	mov	r2, r9
   28890:	sub	r3, r0, #1
   28894:	mov	r0, sl
   28898:	bl	26ec <InflateSkipData>
   2889c:	ldr	r0, [fp, #28]
   288a0:	ldr	r6, [r6]
   288a4:	mov	r1, r8
   288a8:	mov	r3, r9
   288ac:	ldr	r5, [r0]
   288b0:	mov	r0, #1
   288b4:	str	r0, [sp]
   288b8:	ldr	r0, [sp, #44]	; 0x2c
   288bc:	add	r2, r0, r4
   288c0:	mov	r0, sl
   288c4:	bl	1e858 <ReadCompressedInt8Data>
   288c8:	add	r4, r4, #1
   288cc:	sub	r0, r5, #1
   288d0:	add	r7, r6, r7
   288d4:	cmp	r4, r0
   288d8:	blt	28870 <ReadCompressedDataSlabN+0x2ca0>
   288dc:	b	288e4 <ReadCompressedDataSlabN+0x2d14>
   288e0:	ldr	r7, [sp, #28]
   288e4:	ldr	r2, [fp, #28]
   288e8:	ldr	r0, [fp, #16]
   288ec:	ldr	r1, [fp, #24]
   288f0:	ldr	r9, [fp, #8]
   288f4:	ldr	r2, [r2]
   288f8:	ldr	r0, [r0]
   288fc:	ldr	r1, [r1]
   28900:	sub	r2, r2, #1
   28904:	mls	r0, r2, r1, r0
   28908:	ldr	r1, [fp, #20]
   2890c:	mov	r2, r9
   28910:	ldr	r1, [r1]
   28914:	sub	r4, r0, r1
   28918:	ldr	r0, [sp, #52]	; 0x34
   2891c:	add	r1, sp, #56	; 0x38
   28920:	sub	r3, r4, #1
   28924:	bl	26ec <InflateSkipData>
   28928:	ldr	r0, [fp, #12]
   2892c:	add	r7, r4, r7
   28930:	cmp	r0, #2
   28934:	blt	287bc <ReadCompressedDataSlabN+0x2bec>
   28938:	ldr	r6, [sp, #12]
   2893c:	ldr	r8, [sp, #16]
   28940:	ldr	r3, [sp, #36]	; 0x24
   28944:	ldr	r5, [sp, #32]
   28948:	mov	sl, #0
   2894c:	b	289b0 <ReadCompressedDataSlabN+0x2de0>
   28950:	add	r2, sp, #112	; 0x70
   28954:	ldr	r3, [r5, sl]
   28958:	sub	r0, r0, r1
   2895c:	add	r1, sp, #56	; 0x38
   28960:	mov	r4, r2
   28964:	ldr	r2, [r2, sl]
   28968:	mla	r3, r3, r2, r0
   2896c:	ldr	r0, [sp, #52]	; 0x34
   28970:	mov	r2, r9
   28974:	bl	26ec <InflateSkipData>
   28978:	ldr	r3, [sp, #36]	; 0x24
   2897c:	ldr	r5, [sp, #32]
   28980:	ldr	r0, [r3, sl]
   28984:	ldr	r2, [r5, sl]
   28988:	sdiv	r1, r7, r0
   2898c:	mul	r1, r1, r0
   28990:	add	r0, r0, r7
   28994:	sub	r1, r1, r7
   28998:	add	r0, r0, r1
   2899c:	ldr	r1, [r4, sl]
   289a0:	mla	r7, r2, r1, r0
   289a4:	subs	r6, r6, #1
   289a8:	add	sl, sl, #4
   289ac:	beq	287bc <ReadCompressedDataSlabN+0x2bec>
   289b0:	ldr	r0, [r8, sl]
   289b4:	ldr	r1, [sp, #40]	; 0x28
   289b8:	add	r0, r0, #1
   289bc:	str	r0, [r8, sl]
   289c0:	ldr	r1, [r1, sl]
   289c4:	sdiv	r2, r0, r1
   289c8:	mls	r0, r2, r1, r0
   289cc:	cmp	r0, #0
   289d0:	bne	28a34 <ReadCompressedDataSlabN+0x2e64>
   289d4:	mov	r0, #0
   289d8:	str	r0, [r8, sl]
   289dc:	ldr	r0, [r3, sl]
   289e0:	sdiv	r1, r7, r0
   289e4:	mls	r1, r1, r0, r7
   289e8:	cmp	r1, #0
   289ec:	bne	28950 <ReadCompressedDataSlabN+0x2d80>
   289f0:	ldr	r0, [r5, sl]
   289f4:	cmp	r0, #0
   289f8:	beq	289a4 <ReadCompressedDataSlabN+0x2dd4>
   289fc:	add	r1, sp, #112	; 0x70
   28a00:	mov	r2, r9
   28a04:	mov	r4, r1
   28a08:	ldr	r1, [r1, sl]
   28a0c:	mul	r3, r1, r0
   28a10:	ldr	r0, [sp, #52]	; 0x34
   28a14:	add	r1, sp, #56	; 0x38
   28a18:	bl	26ec <InflateSkipData>
   28a1c:	ldr	r5, [sp, #32]
   28a20:	ldr	r0, [r4, sl]
   28a24:	ldr	r3, [sp, #36]	; 0x24
   28a28:	ldr	r1, [r5, sl]
   28a2c:	mla	r7, r1, r0, r7
   28a30:	b	289a4 <ReadCompressedDataSlabN+0x2dd4>
   28a34:	ldr	r0, [sp, #4]
   28a38:	ldr	r4, [r0, sl]
   28a3c:	cmp	r4, #0
   28a40:	beq	287bc <ReadCompressedDataSlabN+0x2bec>
   28a44:	ldr	r0, [sp, #52]	; 0x34
   28a48:	add	r1, sp, #56	; 0x38
   28a4c:	mov	r2, r9
   28a50:	mov	r3, r4
   28a54:	bl	26ec <InflateSkipData>
   28a58:	add	r7, r4, r7
   28a5c:	b	287bc <ReadCompressedDataSlabN+0x2bec>
   28a60:	ldr	r0, [sp, #24]
   28a64:	cmp	r0, #1
   28a68:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   28a6c:	sub	r0, fp, #112	; 0x70
   28a70:	add	r5, sl, #4
   28a74:	mov	r9, #1
   28a78:	add	r7, sp, #56	; 0x38
   28a7c:	mov	r4, #0
   28a80:	orr	r8, r0, #4
   28a84:	ldr	r0, [fp, #28]
   28a88:	str	r5, [sp, #32]
   28a8c:	str	r8, [sp, #16]
   28a90:	add	r0, r0, #4
   28a94:	str	r0, [sp, #40]	; 0x28
   28a98:	add	r0, sp, #112	; 0x70
   28a9c:	orr	r3, r0, #4
   28aa0:	ldr	r0, [fp, #12]
   28aa4:	str	r3, [sp, #36]	; 0x24
   28aa8:	sub	r0, r0, #1
   28aac:	str	r0, [sp, #12]
   28ab0:	sub	r0, fp, #72	; 0x48
   28ab4:	orr	r0, r0, #4
   28ab8:	str	r0, [sp, #4]
   28abc:	ldr	r0, [sp, #48]	; 0x30
   28ac0:	add	r0, r0, #1
   28ac4:	str	r0, [sp, #8]
   28ac8:	b	28af8 <ReadCompressedDataSlabN+0x2f28>
   28acc:	ldr	r0, [fp, #28]
   28ad0:	ldr	r4, [sp, #20]
   28ad4:	ldr	sl, [fp, #20]
   28ad8:	str	r7, [sp, #28]
   28adc:	mov	r9, #1
   28ae0:	add	r7, sp, #56	; 0x38
   28ae4:	ldr	r0, [r0]
   28ae8:	add	r4, r0, r4
   28aec:	ldr	r0, [sp, #24]
   28af0:	cmp	r4, r0
   28af4:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   28af8:	ldr	r3, [sl]
   28afc:	cmp	r3, #0
   28b00:	beq	28b34 <ReadCompressedDataSlabN+0x2f64>
   28b04:	ldr	r5, [sp, #52]	; 0x34
   28b08:	ldr	r6, [fp, #8]
   28b0c:	mov	r1, r7
   28b10:	mov	r0, r5
   28b14:	mov	r2, r6
   28b18:	bl	26ec <InflateSkipData>
   28b1c:	ldr	r0, [sl]
   28b20:	ldr	r1, [sp, #28]
   28b24:	add	r1, r0, r1
   28b28:	ldr	r0, [sp, #48]	; 0x30
   28b2c:	str	r1, [sp, #28]
   28b30:	b	28b40 <ReadCompressedDataSlabN+0x2f70>
   28b34:	ldr	r0, [sp, #48]	; 0x30
   28b38:	ldr	r5, [sp, #52]	; 0x34
   28b3c:	ldr	r6, [fp, #8]
   28b40:	ldr	r1, [fp, #28]
   28b44:	add	r2, r0, r4
   28b48:	mov	r0, r5
   28b4c:	mov	r3, r6
   28b50:	ldr	r8, [r1]
   28b54:	mov	r1, r7
   28b58:	str	r9, [sp]
   28b5c:	bl	21180 <ReadCompressedUInt8Data>
   28b60:	cmp	r8, #2
   28b64:	str	r4, [sp, #20]
   28b68:	blt	28bf0 <ReadCompressedDataSlabN+0x3020>
   28b6c:	ldr	r0, [sp, #8]
   28b70:	ldr	r7, [sp, #28]
   28b74:	add	r0, r0, r4
   28b78:	mov	r4, #0
   28b7c:	str	r0, [sp, #44]	; 0x2c
   28b80:	ldr	r0, [fp, #24]
   28b84:	ldr	r9, [fp, #8]
   28b88:	ldr	sl, [sp, #52]	; 0x34
   28b8c:	add	r8, sp, #56	; 0x38
   28b90:	mov	r1, r8
   28b94:	mov	r6, r0
   28b98:	ldr	r0, [r0]
   28b9c:	mov	r2, r9
   28ba0:	sub	r3, r0, #1
   28ba4:	mov	r0, sl
   28ba8:	bl	26ec <InflateSkipData>
   28bac:	ldr	r0, [fp, #28]
   28bb0:	ldr	r6, [r6]
   28bb4:	mov	r1, r8
   28bb8:	mov	r3, r9
   28bbc:	ldr	r5, [r0]
   28bc0:	mov	r0, #1
   28bc4:	str	r0, [sp]
   28bc8:	ldr	r0, [sp, #44]	; 0x2c
   28bcc:	add	r2, r0, r4
   28bd0:	mov	r0, sl
   28bd4:	bl	21180 <ReadCompressedUInt8Data>
   28bd8:	add	r4, r4, #1
   28bdc:	sub	r0, r5, #1
   28be0:	add	r7, r6, r7
   28be4:	cmp	r4, r0
   28be8:	blt	28b80 <ReadCompressedDataSlabN+0x2fb0>
   28bec:	b	28bf4 <ReadCompressedDataSlabN+0x3024>
   28bf0:	ldr	r7, [sp, #28]
   28bf4:	ldr	r2, [fp, #28]
   28bf8:	ldr	r0, [fp, #16]
   28bfc:	ldr	r1, [fp, #24]
   28c00:	ldr	r9, [fp, #8]
   28c04:	ldr	r2, [r2]
   28c08:	ldr	r0, [r0]
   28c0c:	ldr	r1, [r1]
   28c10:	sub	r2, r2, #1
   28c14:	mls	r0, r2, r1, r0
   28c18:	ldr	r1, [fp, #20]
   28c1c:	mov	r2, r9
   28c20:	ldr	r1, [r1]
   28c24:	sub	r4, r0, r1
   28c28:	ldr	r0, [sp, #52]	; 0x34
   28c2c:	add	r1, sp, #56	; 0x38
   28c30:	sub	r3, r4, #1
   28c34:	bl	26ec <InflateSkipData>
   28c38:	ldr	r0, [fp, #12]
   28c3c:	add	r7, r4, r7
   28c40:	cmp	r0, #2
   28c44:	blt	28acc <ReadCompressedDataSlabN+0x2efc>
   28c48:	ldr	r6, [sp, #12]
   28c4c:	ldr	r8, [sp, #16]
   28c50:	ldr	r3, [sp, #36]	; 0x24
   28c54:	ldr	r5, [sp, #32]
   28c58:	mov	sl, #0
   28c5c:	b	28cc0 <ReadCompressedDataSlabN+0x30f0>
   28c60:	add	r2, sp, #112	; 0x70
   28c64:	ldr	r3, [r5, sl]
   28c68:	sub	r0, r0, r1
   28c6c:	add	r1, sp, #56	; 0x38
   28c70:	mov	r4, r2
   28c74:	ldr	r2, [r2, sl]
   28c78:	mla	r3, r3, r2, r0
   28c7c:	ldr	r0, [sp, #52]	; 0x34
   28c80:	mov	r2, r9
   28c84:	bl	26ec <InflateSkipData>
   28c88:	ldr	r3, [sp, #36]	; 0x24
   28c8c:	ldr	r5, [sp, #32]
   28c90:	ldr	r0, [r3, sl]
   28c94:	ldr	r2, [r5, sl]
   28c98:	sdiv	r1, r7, r0
   28c9c:	mul	r1, r1, r0
   28ca0:	add	r0, r0, r7
   28ca4:	sub	r1, r1, r7
   28ca8:	add	r0, r0, r1
   28cac:	ldr	r1, [r4, sl]
   28cb0:	mla	r7, r2, r1, r0
   28cb4:	subs	r6, r6, #1
   28cb8:	add	sl, sl, #4
   28cbc:	beq	28acc <ReadCompressedDataSlabN+0x2efc>
   28cc0:	ldr	r0, [r8, sl]
   28cc4:	ldr	r1, [sp, #40]	; 0x28
   28cc8:	add	r0, r0, #1
   28ccc:	str	r0, [r8, sl]
   28cd0:	ldr	r1, [r1, sl]
   28cd4:	sdiv	r2, r0, r1
   28cd8:	mls	r0, r2, r1, r0
   28cdc:	cmp	r0, #0
   28ce0:	bne	28d44 <ReadCompressedDataSlabN+0x3174>
   28ce4:	mov	r0, #0
   28ce8:	str	r0, [r8, sl]
   28cec:	ldr	r0, [r3, sl]
   28cf0:	sdiv	r1, r7, r0
   28cf4:	mls	r1, r1, r0, r7
   28cf8:	cmp	r1, #0
   28cfc:	bne	28c60 <ReadCompressedDataSlabN+0x3090>
   28d00:	ldr	r0, [r5, sl]
   28d04:	cmp	r0, #0
   28d08:	beq	28cb4 <ReadCompressedDataSlabN+0x30e4>
   28d0c:	add	r1, sp, #112	; 0x70
   28d10:	mov	r2, r9
   28d14:	mov	r4, r1
   28d18:	ldr	r1, [r1, sl]
   28d1c:	mul	r3, r1, r0
   28d20:	ldr	r0, [sp, #52]	; 0x34
   28d24:	add	r1, sp, #56	; 0x38
   28d28:	bl	26ec <InflateSkipData>
   28d2c:	ldr	r5, [sp, #32]
   28d30:	ldr	r0, [r4, sl]
   28d34:	ldr	r3, [sp, #36]	; 0x24
   28d38:	ldr	r1, [r5, sl]
   28d3c:	mla	r7, r1, r0, r7
   28d40:	b	28cb4 <ReadCompressedDataSlabN+0x30e4>
   28d44:	ldr	r0, [sp, #4]
   28d48:	ldr	r4, [r0, sl]
   28d4c:	cmp	r4, #0
   28d50:	beq	28acc <ReadCompressedDataSlabN+0x2efc>
   28d54:	ldr	r0, [sp, #52]	; 0x34
   28d58:	add	r1, sp, #56	; 0x38
   28d5c:	mov	r2, r9
   28d60:	mov	r3, r4
   28d64:	bl	26ec <InflateSkipData>
   28d68:	add	r7, r4, r7
   28d6c:	b	28acc <ReadCompressedDataSlabN+0x2efc>
   28d70:	ldr	r0, [sp, #32]
   28d74:	cmp	r0, #1
   28d78:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   28d7c:	sub	r0, fp, #112	; 0x70
   28d80:	add	r7, sl, #4
   28d84:	add	r1, sp, #56	; 0x38
   28d88:	orr	r8, r0, #4
   28d8c:	ldr	r0, [fp, #28]
   28d90:	str	r7, [sp, #36]	; 0x24
   28d94:	str	r8, [sp, #20]
   28d98:	add	r0, r0, #4
   28d9c:	str	r0, [sp, #44]	; 0x2c
   28da0:	add	r0, sp, #112	; 0x70
   28da4:	orr	r3, r0, #4
   28da8:	ldr	r0, [fp, #12]
   28dac:	str	r3, [sp, #40]	; 0x28
   28db0:	sub	r0, r0, #1
   28db4:	str	r0, [sp, #16]
   28db8:	sub	r0, fp, #72	; 0x48
   28dbc:	orr	r0, r0, #4
   28dc0:	str	r0, [sp, #8]
   28dc4:	ldr	r0, [sp, #48]	; 0x30
   28dc8:	add	r0, r0, #2
   28dcc:	str	r0, [sp, #12]
   28dd0:	mov	r0, #0
   28dd4:	str	r0, [sp, #28]
   28dd8:	b	28e00 <ReadCompressedDataSlabN+0x3230>
   28ddc:	ldr	r0, [r5]
   28de0:	ldr	r1, [sp, #28]
   28de4:	ldr	sl, [fp, #20]
   28de8:	add	r1, r0, r1
   28dec:	ldr	r0, [sp, #32]
   28df0:	str	r1, [sp, #28]
   28df4:	cmp	r1, r0
   28df8:	add	r1, sp, #56	; 0x38
   28dfc:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   28e00:	ldr	r3, [sl]
   28e04:	cmp	r3, #0
   28e08:	beq	28e3c <ReadCompressedDataSlabN+0x326c>
   28e0c:	ldr	r7, [sp, #52]	; 0x34
   28e10:	ldr	r6, [fp, #8]
   28e14:	mov	r4, sl
   28e18:	mov	sl, r1
   28e1c:	mov	r0, r7
   28e20:	mov	r2, r6
   28e24:	bl	26ec <InflateSkipData>
   28e28:	ldr	r0, [r4]
   28e2c:	ldr	r5, [fp, #28]
   28e30:	add	r9, r0, r9
   28e34:	ldr	r0, [sp, #48]	; 0x30
   28e38:	b	28e50 <ReadCompressedDataSlabN+0x3280>
   28e3c:	ldr	r0, [sp, #48]	; 0x30
   28e40:	ldr	r7, [sp, #52]	; 0x34
   28e44:	ldr	r5, [fp, #28]
   28e48:	ldr	r6, [fp, #8]
   28e4c:	mov	sl, r1
   28e50:	ldr	r4, [sp, #28]
   28e54:	ldr	r8, [r5]
   28e58:	mov	r1, #1
   28e5c:	mov	r3, r6
   28e60:	str	r9, [sp, #24]
   28e64:	str	r1, [sp]
   28e68:	mov	r1, sl
   28e6c:	add	r2, r0, r4, lsl #1
   28e70:	mov	r0, r7
   28e74:	bl	194f4 <ReadCompressedInt16Data>
   28e78:	ldr	r1, [fp, #24]
   28e7c:	cmp	r8, #2
   28e80:	blt	28f08 <ReadCompressedDataSlabN+0x3338>
   28e84:	ldr	r0, [sp, #12]
   28e88:	ldr	r9, [sp, #24]
   28e8c:	add	r6, r0, r4, lsl #1
   28e90:	mov	r4, #0
   28e94:	ldr	r0, [r1]
   28e98:	ldr	sl, [fp, #8]
   28e9c:	ldr	r5, [sp, #52]	; 0x34
   28ea0:	add	r8, sp, #56	; 0x38
   28ea4:	mov	r1, r8
   28ea8:	sub	r3, r0, #1
   28eac:	mov	r0, r5
   28eb0:	mov	r2, sl
   28eb4:	bl	26ec <InflateSkipData>
   28eb8:	ldr	r0, [fp, #28]
   28ebc:	ldr	r3, [fp, #8]
   28ec0:	mov	r1, r8
   28ec4:	mov	r2, r6
   28ec8:	ldr	sl, [r0]
   28ecc:	ldr	r0, [fp, #24]
   28ed0:	ldr	r7, [r0]
   28ed4:	mov	r0, #1
   28ed8:	str	r0, [sp]
   28edc:	mov	r0, r5
   28ee0:	bl	194f4 <ReadCompressedInt16Data>
   28ee4:	ldr	r1, [fp, #24]
   28ee8:	ldr	r5, [fp, #28]
   28eec:	add	r4, r4, #1
   28ef0:	sub	r0, sl, #1
   28ef4:	add	r9, r7, r9
   28ef8:	add	r6, r6, #2
   28efc:	cmp	r4, r0
   28f00:	blt	28e94 <ReadCompressedDataSlabN+0x32c4>
   28f04:	b	28f0c <ReadCompressedDataSlabN+0x333c>
   28f08:	ldr	r9, [sp, #24]
   28f0c:	ldr	r0, [fp, #16]
   28f10:	ldr	r2, [r5]
   28f14:	ldr	r1, [r1]
   28f18:	ldr	r0, [r0]
   28f1c:	sub	r2, r2, #1
   28f20:	mls	r0, r2, r1, r0
   28f24:	ldr	r1, [fp, #20]
   28f28:	ldr	r2, [fp, #8]
   28f2c:	ldr	r1, [r1]
   28f30:	sub	r4, r0, r1
   28f34:	ldr	r0, [sp, #52]	; 0x34
   28f38:	add	r1, sp, #56	; 0x38
   28f3c:	sub	r3, r4, #1
   28f40:	bl	26ec <InflateSkipData>
   28f44:	ldr	r0, [fp, #12]
   28f48:	add	r9, r4, r9
   28f4c:	cmp	r0, #2
   28f50:	blt	28ddc <ReadCompressedDataSlabN+0x320c>
   28f54:	ldr	sl, [sp, #16]
   28f58:	ldr	r8, [sp, #20]
   28f5c:	ldr	r3, [sp, #40]	; 0x28
   28f60:	ldr	r7, [sp, #36]	; 0x24
   28f64:	mov	r6, #0
   28f68:	b	28fcc <ReadCompressedDataSlabN+0x33fc>
   28f6c:	add	r2, sp, #112	; 0x70
   28f70:	ldr	r3, [r7, r6]
   28f74:	sub	r0, r0, r1
   28f78:	add	r1, sp, #56	; 0x38
   28f7c:	mov	r4, r2
   28f80:	ldr	r2, [r2, r6]
   28f84:	mla	r3, r3, r2, r0
   28f88:	ldr	r0, [sp, #52]	; 0x34
   28f8c:	ldr	r2, [fp, #8]
   28f90:	bl	26ec <InflateSkipData>
   28f94:	ldr	r3, [sp, #40]	; 0x28
   28f98:	ldr	r7, [sp, #36]	; 0x24
   28f9c:	ldr	r0, [r3, r6]
   28fa0:	ldr	r2, [r7, r6]
   28fa4:	sdiv	r1, r9, r0
   28fa8:	mul	r1, r1, r0
   28fac:	add	r0, r0, r9
   28fb0:	sub	r1, r1, r9
   28fb4:	add	r0, r0, r1
   28fb8:	ldr	r1, [r4, r6]
   28fbc:	mla	r9, r2, r1, r0
   28fc0:	subs	sl, sl, #1
   28fc4:	add	r6, r6, #4
   28fc8:	beq	28ddc <ReadCompressedDataSlabN+0x320c>
   28fcc:	ldr	r0, [r8, r6]
   28fd0:	ldr	r1, [sp, #44]	; 0x2c
   28fd4:	add	r0, r0, #1
   28fd8:	str	r0, [r8, r6]
   28fdc:	ldr	r1, [r1, r6]
   28fe0:	sdiv	r2, r0, r1
   28fe4:	mls	r0, r2, r1, r0
   28fe8:	cmp	r0, #0
   28fec:	bne	29050 <ReadCompressedDataSlabN+0x3480>
   28ff0:	mov	r0, #0
   28ff4:	str	r0, [r8, r6]
   28ff8:	ldr	r0, [r3, r6]
   28ffc:	sdiv	r1, r9, r0
   29000:	mls	r1, r1, r0, r9
   29004:	cmp	r1, #0
   29008:	bne	28f6c <ReadCompressedDataSlabN+0x339c>
   2900c:	ldr	r0, [r7, r6]
   29010:	cmp	r0, #0
   29014:	beq	28fc0 <ReadCompressedDataSlabN+0x33f0>
   29018:	add	r1, sp, #112	; 0x70
   2901c:	ldr	r2, [fp, #8]
   29020:	mov	r4, r1
   29024:	ldr	r1, [r1, r6]
   29028:	mul	r3, r1, r0
   2902c:	ldr	r0, [sp, #52]	; 0x34
   29030:	add	r1, sp, #56	; 0x38
   29034:	bl	26ec <InflateSkipData>
   29038:	ldr	r7, [sp, #36]	; 0x24
   2903c:	ldr	r0, [r4, r6]
   29040:	ldr	r3, [sp, #40]	; 0x28
   29044:	ldr	r1, [r7, r6]
   29048:	mla	r9, r1, r0, r9
   2904c:	b	28fc0 <ReadCompressedDataSlabN+0x33f0>
   29050:	ldr	r0, [sp, #8]
   29054:	ldr	r6, [r0, r6]
   29058:	cmp	r6, #0
   2905c:	beq	28ddc <ReadCompressedDataSlabN+0x320c>
   29060:	ldr	r0, [sp, #52]	; 0x34
   29064:	ldr	r2, [fp, #8]
   29068:	add	r1, sp, #56	; 0x38
   2906c:	mov	r3, r6
   29070:	bl	26ec <InflateSkipData>
   29074:	add	r9, r6, r9
   29078:	b	28ddc <ReadCompressedDataSlabN+0x320c>
   2907c:	ldr	r0, [sp, #32]
   29080:	cmp	r0, #1
   29084:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29088:	sub	r0, fp, #112	; 0x70
   2908c:	add	r7, sl, #4
   29090:	add	r1, sp, #56	; 0x38
   29094:	orr	r8, r0, #4
   29098:	ldr	r0, [fp, #28]
   2909c:	str	r7, [sp, #36]	; 0x24
   290a0:	str	r8, [sp, #20]
   290a4:	add	r0, r0, #4
   290a8:	str	r0, [sp, #44]	; 0x2c
   290ac:	add	r0, sp, #112	; 0x70
   290b0:	orr	r3, r0, #4
   290b4:	ldr	r0, [fp, #12]
   290b8:	str	r3, [sp, #40]	; 0x28
   290bc:	sub	r0, r0, #1
   290c0:	str	r0, [sp, #16]
   290c4:	sub	r0, fp, #72	; 0x48
   290c8:	orr	r0, r0, #4
   290cc:	str	r0, [sp, #8]
   290d0:	ldr	r0, [sp, #48]	; 0x30
   290d4:	add	r0, r0, #2
   290d8:	str	r0, [sp, #12]
   290dc:	mov	r0, #0
   290e0:	str	r0, [sp, #28]
   290e4:	b	2910c <ReadCompressedDataSlabN+0x353c>
   290e8:	ldr	r0, [r5]
   290ec:	ldr	r1, [sp, #28]
   290f0:	ldr	sl, [fp, #20]
   290f4:	add	r1, r0, r1
   290f8:	ldr	r0, [sp, #32]
   290fc:	str	r1, [sp, #28]
   29100:	cmp	r1, r0
   29104:	add	r1, sp, #56	; 0x38
   29108:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   2910c:	ldr	r3, [sl]
   29110:	cmp	r3, #0
   29114:	beq	29148 <ReadCompressedDataSlabN+0x3578>
   29118:	ldr	r7, [sp, #52]	; 0x34
   2911c:	ldr	r6, [fp, #8]
   29120:	mov	r4, sl
   29124:	mov	sl, r1
   29128:	mov	r0, r7
   2912c:	mov	r2, r6
   29130:	bl	26ec <InflateSkipData>
   29134:	ldr	r0, [r4]
   29138:	ldr	r5, [fp, #28]
   2913c:	add	r9, r0, r9
   29140:	ldr	r0, [sp, #48]	; 0x30
   29144:	b	2915c <ReadCompressedDataSlabN+0x358c>
   29148:	ldr	r0, [sp, #48]	; 0x30
   2914c:	ldr	r7, [sp, #52]	; 0x34
   29150:	ldr	r5, [fp, #28]
   29154:	ldr	r6, [fp, #8]
   29158:	mov	sl, r1
   2915c:	ldr	r4, [sp, #28]
   29160:	ldr	r8, [r5]
   29164:	mov	r1, #1
   29168:	mov	r3, r6
   2916c:	str	r9, [sp, #24]
   29170:	str	r1, [sp]
   29174:	mov	r1, sl
   29178:	add	r2, r0, r4, lsl #1
   2917c:	mov	r0, r7
   29180:	bl	1bf30 <ReadCompressedUInt16Data>
   29184:	ldr	r1, [fp, #24]
   29188:	cmp	r8, #2
   2918c:	blt	29214 <ReadCompressedDataSlabN+0x3644>
   29190:	ldr	r0, [sp, #12]
   29194:	ldr	r9, [sp, #24]
   29198:	add	r6, r0, r4, lsl #1
   2919c:	mov	r4, #0
   291a0:	ldr	r0, [r1]
   291a4:	ldr	sl, [fp, #8]
   291a8:	ldr	r5, [sp, #52]	; 0x34
   291ac:	add	r8, sp, #56	; 0x38
   291b0:	mov	r1, r8
   291b4:	sub	r3, r0, #1
   291b8:	mov	r0, r5
   291bc:	mov	r2, sl
   291c0:	bl	26ec <InflateSkipData>
   291c4:	ldr	r0, [fp, #28]
   291c8:	ldr	r3, [fp, #8]
   291cc:	mov	r1, r8
   291d0:	mov	r2, r6
   291d4:	ldr	sl, [r0]
   291d8:	ldr	r0, [fp, #24]
   291dc:	ldr	r7, [r0]
   291e0:	mov	r0, #1
   291e4:	str	r0, [sp]
   291e8:	mov	r0, r5
   291ec:	bl	1bf30 <ReadCompressedUInt16Data>
   291f0:	ldr	r1, [fp, #24]
   291f4:	ldr	r5, [fp, #28]
   291f8:	add	r4, r4, #1
   291fc:	sub	r0, sl, #1
   29200:	add	r9, r7, r9
   29204:	add	r6, r6, #2
   29208:	cmp	r4, r0
   2920c:	blt	291a0 <ReadCompressedDataSlabN+0x35d0>
   29210:	b	29218 <ReadCompressedDataSlabN+0x3648>
   29214:	ldr	r9, [sp, #24]
   29218:	ldr	r0, [fp, #16]
   2921c:	ldr	r2, [r5]
   29220:	ldr	r1, [r1]
   29224:	ldr	r0, [r0]
   29228:	sub	r2, r2, #1
   2922c:	mls	r0, r2, r1, r0
   29230:	ldr	r1, [fp, #20]
   29234:	ldr	r2, [fp, #8]
   29238:	ldr	r1, [r1]
   2923c:	sub	r4, r0, r1
   29240:	ldr	r0, [sp, #52]	; 0x34
   29244:	add	r1, sp, #56	; 0x38
   29248:	sub	r3, r4, #1
   2924c:	bl	26ec <InflateSkipData>
   29250:	ldr	r0, [fp, #12]
   29254:	add	r9, r4, r9
   29258:	cmp	r0, #2
   2925c:	blt	290e8 <ReadCompressedDataSlabN+0x3518>
   29260:	ldr	sl, [sp, #16]
   29264:	ldr	r8, [sp, #20]
   29268:	ldr	r3, [sp, #40]	; 0x28
   2926c:	ldr	r7, [sp, #36]	; 0x24
   29270:	mov	r6, #0
   29274:	b	292d8 <ReadCompressedDataSlabN+0x3708>
   29278:	add	r2, sp, #112	; 0x70
   2927c:	ldr	r3, [r7, r6]
   29280:	sub	r0, r0, r1
   29284:	add	r1, sp, #56	; 0x38
   29288:	mov	r4, r2
   2928c:	ldr	r2, [r2, r6]
   29290:	mla	r3, r3, r2, r0
   29294:	ldr	r0, [sp, #52]	; 0x34
   29298:	ldr	r2, [fp, #8]
   2929c:	bl	26ec <InflateSkipData>
   292a0:	ldr	r3, [sp, #40]	; 0x28
   292a4:	ldr	r7, [sp, #36]	; 0x24
   292a8:	ldr	r0, [r3, r6]
   292ac:	ldr	r2, [r7, r6]
   292b0:	sdiv	r1, r9, r0
   292b4:	mul	r1, r1, r0
   292b8:	add	r0, r0, r9
   292bc:	sub	r1, r1, r9
   292c0:	add	r0, r0, r1
   292c4:	ldr	r1, [r4, r6]
   292c8:	mla	r9, r2, r1, r0
   292cc:	subs	sl, sl, #1
   292d0:	add	r6, r6, #4
   292d4:	beq	290e8 <ReadCompressedDataSlabN+0x3518>
   292d8:	ldr	r0, [r8, r6]
   292dc:	ldr	r1, [sp, #44]	; 0x2c
   292e0:	add	r0, r0, #1
   292e4:	str	r0, [r8, r6]
   292e8:	ldr	r1, [r1, r6]
   292ec:	sdiv	r2, r0, r1
   292f0:	mls	r0, r2, r1, r0
   292f4:	cmp	r0, #0
   292f8:	bne	2935c <ReadCompressedDataSlabN+0x378c>
   292fc:	mov	r0, #0
   29300:	str	r0, [r8, r6]
   29304:	ldr	r0, [r3, r6]
   29308:	sdiv	r1, r9, r0
   2930c:	mls	r1, r1, r0, r9
   29310:	cmp	r1, #0
   29314:	bne	29278 <ReadCompressedDataSlabN+0x36a8>
   29318:	ldr	r0, [r7, r6]
   2931c:	cmp	r0, #0
   29320:	beq	292cc <ReadCompressedDataSlabN+0x36fc>
   29324:	add	r1, sp, #112	; 0x70
   29328:	ldr	r2, [fp, #8]
   2932c:	mov	r4, r1
   29330:	ldr	r1, [r1, r6]
   29334:	mul	r3, r1, r0
   29338:	ldr	r0, [sp, #52]	; 0x34
   2933c:	add	r1, sp, #56	; 0x38
   29340:	bl	26ec <InflateSkipData>
   29344:	ldr	r7, [sp, #36]	; 0x24
   29348:	ldr	r0, [r4, r6]
   2934c:	ldr	r3, [sp, #40]	; 0x28
   29350:	ldr	r1, [r7, r6]
   29354:	mla	r9, r1, r0, r9
   29358:	b	292cc <ReadCompressedDataSlabN+0x36fc>
   2935c:	ldr	r0, [sp, #8]
   29360:	ldr	r6, [r0, r6]
   29364:	cmp	r6, #0
   29368:	beq	290e8 <ReadCompressedDataSlabN+0x3518>
   2936c:	ldr	r0, [sp, #52]	; 0x34
   29370:	ldr	r2, [fp, #8]
   29374:	add	r1, sp, #56	; 0x38
   29378:	mov	r3, r6
   2937c:	bl	26ec <InflateSkipData>
   29380:	add	r9, r6, r9
   29384:	b	290e8 <ReadCompressedDataSlabN+0x3518>
   29388:	ldr	r0, [sp, #32]
   2938c:	cmp	r0, #1
   29390:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29394:	sub	r0, fp, #112	; 0x70
   29398:	add	r7, sl, #4
   2939c:	add	r1, sp, #56	; 0x38
   293a0:	orr	r8, r0, #4
   293a4:	ldr	r0, [fp, #28]
   293a8:	str	r7, [sp, #36]	; 0x24
   293ac:	str	r8, [sp, #20]
   293b0:	add	r0, r0, #4
   293b4:	str	r0, [sp, #44]	; 0x2c
   293b8:	add	r0, sp, #112	; 0x70
   293bc:	orr	r3, r0, #4
   293c0:	ldr	r0, [fp, #12]
   293c4:	str	r3, [sp, #40]	; 0x28
   293c8:	sub	r0, r0, #1
   293cc:	str	r0, [sp, #16]
   293d0:	sub	r0, fp, #72	; 0x48
   293d4:	orr	r0, r0, #4
   293d8:	str	r0, [sp, #8]
   293dc:	ldr	r0, [sp, #48]	; 0x30
   293e0:	add	r0, r0, #4
   293e4:	str	r0, [sp, #12]
   293e8:	mov	r0, #0
   293ec:	str	r0, [sp, #28]
   293f0:	b	29418 <ReadCompressedDataSlabN+0x3848>
   293f4:	ldr	r0, [r5]
   293f8:	ldr	r1, [sp, #28]
   293fc:	ldr	sl, [fp, #20]
   29400:	add	r1, r0, r1
   29404:	ldr	r0, [sp, #32]
   29408:	str	r1, [sp, #28]
   2940c:	cmp	r1, r0
   29410:	add	r1, sp, #56	; 0x38
   29414:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29418:	ldr	r3, [sl]
   2941c:	cmp	r3, #0
   29420:	beq	29454 <ReadCompressedDataSlabN+0x3884>
   29424:	ldr	r7, [sp, #52]	; 0x34
   29428:	ldr	r6, [fp, #8]
   2942c:	mov	r4, sl
   29430:	mov	sl, r1
   29434:	mov	r0, r7
   29438:	mov	r2, r6
   2943c:	bl	26ec <InflateSkipData>
   29440:	ldr	r0, [r4]
   29444:	ldr	r5, [fp, #28]
   29448:	add	r9, r0, r9
   2944c:	ldr	r0, [sp, #48]	; 0x30
   29450:	b	29468 <ReadCompressedDataSlabN+0x3898>
   29454:	ldr	r0, [sp, #48]	; 0x30
   29458:	ldr	r7, [sp, #52]	; 0x34
   2945c:	ldr	r5, [fp, #28]
   29460:	ldr	r6, [fp, #8]
   29464:	mov	sl, r1
   29468:	ldr	r4, [sp, #28]
   2946c:	ldr	r8, [r5]
   29470:	mov	r1, #1
   29474:	mov	r3, r6
   29478:	str	r9, [sp, #24]
   2947c:	str	r1, [sp]
   29480:	mov	r1, sl
   29484:	add	r2, r0, r4, lsl #2
   29488:	mov	r0, r7
   2948c:	bl	13e0c <ReadCompressedInt32Data>
   29490:	ldr	r1, [fp, #24]
   29494:	cmp	r8, #2
   29498:	blt	29520 <ReadCompressedDataSlabN+0x3950>
   2949c:	ldr	r0, [sp, #12]
   294a0:	ldr	r9, [sp, #24]
   294a4:	add	r6, r0, r4, lsl #2
   294a8:	mov	r4, #0
   294ac:	ldr	r0, [r1]
   294b0:	ldr	sl, [fp, #8]
   294b4:	ldr	r5, [sp, #52]	; 0x34
   294b8:	add	r8, sp, #56	; 0x38
   294bc:	mov	r1, r8
   294c0:	sub	r3, r0, #1
   294c4:	mov	r0, r5
   294c8:	mov	r2, sl
   294cc:	bl	26ec <InflateSkipData>
   294d0:	ldr	r0, [fp, #28]
   294d4:	ldr	r3, [fp, #8]
   294d8:	mov	r1, r8
   294dc:	mov	r2, r6
   294e0:	ldr	sl, [r0]
   294e4:	ldr	r0, [fp, #24]
   294e8:	ldr	r7, [r0]
   294ec:	mov	r0, #1
   294f0:	str	r0, [sp]
   294f4:	mov	r0, r5
   294f8:	bl	13e0c <ReadCompressedInt32Data>
   294fc:	ldr	r1, [fp, #24]
   29500:	ldr	r5, [fp, #28]
   29504:	add	r4, r4, #1
   29508:	sub	r0, sl, #1
   2950c:	add	r9, r7, r9
   29510:	add	r6, r6, #4
   29514:	cmp	r4, r0
   29518:	blt	294ac <ReadCompressedDataSlabN+0x38dc>
   2951c:	b	29524 <ReadCompressedDataSlabN+0x3954>
   29520:	ldr	r9, [sp, #24]
   29524:	ldr	r0, [fp, #16]
   29528:	ldr	r2, [r5]
   2952c:	ldr	r1, [r1]
   29530:	ldr	r0, [r0]
   29534:	sub	r2, r2, #1
   29538:	mls	r0, r2, r1, r0
   2953c:	ldr	r1, [fp, #20]
   29540:	ldr	r2, [fp, #8]
   29544:	ldr	r1, [r1]
   29548:	sub	r4, r0, r1
   2954c:	ldr	r0, [sp, #52]	; 0x34
   29550:	add	r1, sp, #56	; 0x38
   29554:	sub	r3, r4, #1
   29558:	bl	26ec <InflateSkipData>
   2955c:	ldr	r0, [fp, #12]
   29560:	add	r9, r4, r9
   29564:	cmp	r0, #2
   29568:	blt	293f4 <ReadCompressedDataSlabN+0x3824>
   2956c:	ldr	sl, [sp, #16]
   29570:	ldr	r8, [sp, #20]
   29574:	ldr	r3, [sp, #40]	; 0x28
   29578:	ldr	r7, [sp, #36]	; 0x24
   2957c:	mov	r6, #0
   29580:	b	295e4 <ReadCompressedDataSlabN+0x3a14>
   29584:	add	r2, sp, #112	; 0x70
   29588:	ldr	r3, [r7, r6]
   2958c:	sub	r0, r0, r1
   29590:	add	r1, sp, #56	; 0x38
   29594:	mov	r4, r2
   29598:	ldr	r2, [r2, r6]
   2959c:	mla	r3, r3, r2, r0
   295a0:	ldr	r0, [sp, #52]	; 0x34
   295a4:	ldr	r2, [fp, #8]
   295a8:	bl	26ec <InflateSkipData>
   295ac:	ldr	r3, [sp, #40]	; 0x28
   295b0:	ldr	r7, [sp, #36]	; 0x24
   295b4:	ldr	r0, [r3, r6]
   295b8:	ldr	r2, [r7, r6]
   295bc:	sdiv	r1, r9, r0
   295c0:	mul	r1, r1, r0
   295c4:	add	r0, r0, r9
   295c8:	sub	r1, r1, r9
   295cc:	add	r0, r0, r1
   295d0:	ldr	r1, [r4, r6]
   295d4:	mla	r9, r2, r1, r0
   295d8:	subs	sl, sl, #1
   295dc:	add	r6, r6, #4
   295e0:	beq	293f4 <ReadCompressedDataSlabN+0x3824>
   295e4:	ldr	r0, [r8, r6]
   295e8:	ldr	r1, [sp, #44]	; 0x2c
   295ec:	add	r0, r0, #1
   295f0:	str	r0, [r8, r6]
   295f4:	ldr	r1, [r1, r6]
   295f8:	sdiv	r2, r0, r1
   295fc:	mls	r0, r2, r1, r0
   29600:	cmp	r0, #0
   29604:	bne	29668 <ReadCompressedDataSlabN+0x3a98>
   29608:	mov	r0, #0
   2960c:	str	r0, [r8, r6]
   29610:	ldr	r0, [r3, r6]
   29614:	sdiv	r1, r9, r0
   29618:	mls	r1, r1, r0, r9
   2961c:	cmp	r1, #0
   29620:	bne	29584 <ReadCompressedDataSlabN+0x39b4>
   29624:	ldr	r0, [r7, r6]
   29628:	cmp	r0, #0
   2962c:	beq	295d8 <ReadCompressedDataSlabN+0x3a08>
   29630:	add	r1, sp, #112	; 0x70
   29634:	ldr	r2, [fp, #8]
   29638:	mov	r4, r1
   2963c:	ldr	r1, [r1, r6]
   29640:	mul	r3, r1, r0
   29644:	ldr	r0, [sp, #52]	; 0x34
   29648:	add	r1, sp, #56	; 0x38
   2964c:	bl	26ec <InflateSkipData>
   29650:	ldr	r7, [sp, #36]	; 0x24
   29654:	ldr	r0, [r4, r6]
   29658:	ldr	r3, [sp, #40]	; 0x28
   2965c:	ldr	r1, [r7, r6]
   29660:	mla	r9, r1, r0, r9
   29664:	b	295d8 <ReadCompressedDataSlabN+0x3a08>
   29668:	ldr	r0, [sp, #8]
   2966c:	ldr	r6, [r0, r6]
   29670:	cmp	r6, #0
   29674:	beq	293f4 <ReadCompressedDataSlabN+0x3824>
   29678:	ldr	r0, [sp, #52]	; 0x34
   2967c:	ldr	r2, [fp, #8]
   29680:	add	r1, sp, #56	; 0x38
   29684:	mov	r3, r6
   29688:	bl	26ec <InflateSkipData>
   2968c:	add	r9, r6, r9
   29690:	b	293f4 <ReadCompressedDataSlabN+0x3824>
   29694:	ldr	r0, [sp, #32]
   29698:	cmp	r0, #1
   2969c:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   296a0:	sub	r0, fp, #112	; 0x70
   296a4:	add	r7, sl, #4
   296a8:	add	r1, sp, #56	; 0x38
   296ac:	orr	r8, r0, #4
   296b0:	ldr	r0, [fp, #28]
   296b4:	str	r7, [sp, #36]	; 0x24
   296b8:	str	r8, [sp, #20]
   296bc:	add	r0, r0, #4
   296c0:	str	r0, [sp, #44]	; 0x2c
   296c4:	add	r0, sp, #112	; 0x70
   296c8:	orr	r3, r0, #4
   296cc:	ldr	r0, [fp, #12]
   296d0:	str	r3, [sp, #40]	; 0x28
   296d4:	sub	r0, r0, #1
   296d8:	str	r0, [sp, #16]
   296dc:	sub	r0, fp, #72	; 0x48
   296e0:	orr	r0, r0, #4
   296e4:	str	r0, [sp, #8]
   296e8:	ldr	r0, [sp, #48]	; 0x30
   296ec:	add	r0, r0, #4
   296f0:	str	r0, [sp, #12]
   296f4:	mov	r0, #0
   296f8:	str	r0, [sp, #28]
   296fc:	b	29724 <ReadCompressedDataSlabN+0x3b54>
   29700:	ldr	r0, [r5]
   29704:	ldr	r1, [sp, #28]
   29708:	ldr	sl, [fp, #20]
   2970c:	add	r1, r0, r1
   29710:	ldr	r0, [sp, #32]
   29714:	str	r1, [sp, #28]
   29718:	cmp	r1, r0
   2971c:	add	r1, sp, #56	; 0x38
   29720:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29724:	ldr	r3, [sl]
   29728:	cmp	r3, #0
   2972c:	beq	29760 <ReadCompressedDataSlabN+0x3b90>
   29730:	ldr	r7, [sp, #52]	; 0x34
   29734:	ldr	r6, [fp, #8]
   29738:	mov	r4, sl
   2973c:	mov	sl, r1
   29740:	mov	r0, r7
   29744:	mov	r2, r6
   29748:	bl	26ec <InflateSkipData>
   2974c:	ldr	r0, [r4]
   29750:	ldr	r5, [fp, #28]
   29754:	add	r9, r0, r9
   29758:	ldr	r0, [sp, #48]	; 0x30
   2975c:	b	29774 <ReadCompressedDataSlabN+0x3ba4>
   29760:	ldr	r0, [sp, #48]	; 0x30
   29764:	ldr	r7, [sp, #52]	; 0x34
   29768:	ldr	r5, [fp, #28]
   2976c:	ldr	r6, [fp, #8]
   29770:	mov	sl, r1
   29774:	ldr	r4, [sp, #28]
   29778:	ldr	r8, [r5]
   2977c:	mov	r1, #1
   29780:	mov	r3, r6
   29784:	str	r9, [sp, #24]
   29788:	str	r1, [sp]
   2978c:	mov	r1, sl
   29790:	add	r2, r0, r4, lsl #2
   29794:	mov	r0, r7
   29798:	bl	16ab8 <ReadCompressedUInt32Data>
   2979c:	ldr	r1, [fp, #24]
   297a0:	cmp	r8, #2
   297a4:	blt	2982c <ReadCompressedDataSlabN+0x3c5c>
   297a8:	ldr	r0, [sp, #12]
   297ac:	ldr	r9, [sp, #24]
   297b0:	add	r6, r0, r4, lsl #2
   297b4:	mov	r4, #0
   297b8:	ldr	r0, [r1]
   297bc:	ldr	sl, [fp, #8]
   297c0:	ldr	r5, [sp, #52]	; 0x34
   297c4:	add	r8, sp, #56	; 0x38
   297c8:	mov	r1, r8
   297cc:	sub	r3, r0, #1
   297d0:	mov	r0, r5
   297d4:	mov	r2, sl
   297d8:	bl	26ec <InflateSkipData>
   297dc:	ldr	r0, [fp, #28]
   297e0:	ldr	r3, [fp, #8]
   297e4:	mov	r1, r8
   297e8:	mov	r2, r6
   297ec:	ldr	sl, [r0]
   297f0:	ldr	r0, [fp, #24]
   297f4:	ldr	r7, [r0]
   297f8:	mov	r0, #1
   297fc:	str	r0, [sp]
   29800:	mov	r0, r5
   29804:	bl	16ab8 <ReadCompressedUInt32Data>
   29808:	ldr	r1, [fp, #24]
   2980c:	ldr	r5, [fp, #28]
   29810:	add	r4, r4, #1
   29814:	sub	r0, sl, #1
   29818:	add	r9, r7, r9
   2981c:	add	r6, r6, #4
   29820:	cmp	r4, r0
   29824:	blt	297b8 <ReadCompressedDataSlabN+0x3be8>
   29828:	b	29830 <ReadCompressedDataSlabN+0x3c60>
   2982c:	ldr	r9, [sp, #24]
   29830:	ldr	r0, [fp, #16]
   29834:	ldr	r2, [r5]
   29838:	ldr	r1, [r1]
   2983c:	ldr	r0, [r0]
   29840:	sub	r2, r2, #1
   29844:	mls	r0, r2, r1, r0
   29848:	ldr	r1, [fp, #20]
   2984c:	ldr	r2, [fp, #8]
   29850:	ldr	r1, [r1]
   29854:	sub	r4, r0, r1
   29858:	ldr	r0, [sp, #52]	; 0x34
   2985c:	add	r1, sp, #56	; 0x38
   29860:	sub	r3, r4, #1
   29864:	bl	26ec <InflateSkipData>
   29868:	ldr	r0, [fp, #12]
   2986c:	add	r9, r4, r9
   29870:	cmp	r0, #2
   29874:	blt	29700 <ReadCompressedDataSlabN+0x3b30>
   29878:	ldr	sl, [sp, #16]
   2987c:	ldr	r8, [sp, #20]
   29880:	ldr	r3, [sp, #40]	; 0x28
   29884:	ldr	r7, [sp, #36]	; 0x24
   29888:	mov	r6, #0
   2988c:	b	298f0 <ReadCompressedDataSlabN+0x3d20>
   29890:	add	r2, sp, #112	; 0x70
   29894:	ldr	r3, [r7, r6]
   29898:	sub	r0, r0, r1
   2989c:	add	r1, sp, #56	; 0x38
   298a0:	mov	r4, r2
   298a4:	ldr	r2, [r2, r6]
   298a8:	mla	r3, r3, r2, r0
   298ac:	ldr	r0, [sp, #52]	; 0x34
   298b0:	ldr	r2, [fp, #8]
   298b4:	bl	26ec <InflateSkipData>
   298b8:	ldr	r3, [sp, #40]	; 0x28
   298bc:	ldr	r7, [sp, #36]	; 0x24
   298c0:	ldr	r0, [r3, r6]
   298c4:	ldr	r2, [r7, r6]
   298c8:	sdiv	r1, r9, r0
   298cc:	mul	r1, r1, r0
   298d0:	add	r0, r0, r9
   298d4:	sub	r1, r1, r9
   298d8:	add	r0, r0, r1
   298dc:	ldr	r1, [r4, r6]
   298e0:	mla	r9, r2, r1, r0
   298e4:	subs	sl, sl, #1
   298e8:	add	r6, r6, #4
   298ec:	beq	29700 <ReadCompressedDataSlabN+0x3b30>
   298f0:	ldr	r0, [r8, r6]
   298f4:	ldr	r1, [sp, #44]	; 0x2c
   298f8:	add	r0, r0, #1
   298fc:	str	r0, [r8, r6]
   29900:	ldr	r1, [r1, r6]
   29904:	sdiv	r2, r0, r1
   29908:	mls	r0, r2, r1, r0
   2990c:	cmp	r0, #0
   29910:	bne	29974 <ReadCompressedDataSlabN+0x3da4>
   29914:	mov	r0, #0
   29918:	str	r0, [r8, r6]
   2991c:	ldr	r0, [r3, r6]
   29920:	sdiv	r1, r9, r0
   29924:	mls	r1, r1, r0, r9
   29928:	cmp	r1, #0
   2992c:	bne	29890 <ReadCompressedDataSlabN+0x3cc0>
   29930:	ldr	r0, [r7, r6]
   29934:	cmp	r0, #0
   29938:	beq	298e4 <ReadCompressedDataSlabN+0x3d14>
   2993c:	add	r1, sp, #112	; 0x70
   29940:	ldr	r2, [fp, #8]
   29944:	mov	r4, r1
   29948:	ldr	r1, [r1, r6]
   2994c:	mul	r3, r1, r0
   29950:	ldr	r0, [sp, #52]	; 0x34
   29954:	add	r1, sp, #56	; 0x38
   29958:	bl	26ec <InflateSkipData>
   2995c:	ldr	r7, [sp, #36]	; 0x24
   29960:	ldr	r0, [r4, r6]
   29964:	ldr	r3, [sp, #40]	; 0x28
   29968:	ldr	r1, [r7, r6]
   2996c:	mla	r9, r1, r0, r9
   29970:	b	298e4 <ReadCompressedDataSlabN+0x3d14>
   29974:	ldr	r0, [sp, #8]
   29978:	ldr	r6, [r0, r6]
   2997c:	cmp	r6, #0
   29980:	beq	29700 <ReadCompressedDataSlabN+0x3b30>
   29984:	ldr	r0, [sp, #52]	; 0x34
   29988:	ldr	r2, [fp, #8]
   2998c:	add	r1, sp, #56	; 0x38
   29990:	mov	r3, r6
   29994:	bl	26ec <InflateSkipData>
   29998:	add	r9, r6, r9
   2999c:	b	29700 <ReadCompressedDataSlabN+0x3b30>
   299a0:	ldr	r0, [sp, #32]
   299a4:	cmp	r0, #1
   299a8:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   299ac:	sub	r0, fp, #112	; 0x70
   299b0:	orr	r0, r0, #4
   299b4:	str	r0, [sp, #24]
   299b8:	ldr	r0, [fp, #28]
   299bc:	add	r0, r0, #4
   299c0:	str	r0, [sp, #44]	; 0x2c
   299c4:	add	r0, sp, #112	; 0x70
   299c8:	orr	r0, r0, #4
   299cc:	str	r0, [sp, #40]	; 0x28
   299d0:	add	r0, sl, #4
   299d4:	str	r0, [sp, #36]	; 0x24
   299d8:	ldr	r0, [fp, #12]
   299dc:	sub	r0, r0, #1
   299e0:	str	r0, [sp, #20]
   299e4:	sub	r0, fp, #72	; 0x48
   299e8:	orr	r0, r0, #4
   299ec:	str	r0, [sp, #12]
   299f0:	ldr	r0, [sp, #48]	; 0x30
   299f4:	add	r0, r0, #8
   299f8:	str	r0, [sp, #16]
   299fc:	mov	r0, #0
   29a00:	str	r0, [sp, #28]
   29a04:	b	29a28 <ReadCompressedDataSlabN+0x3e58>
   29a08:	ldr	r0, [r5]
   29a0c:	ldr	r1, [sp, #28]
   29a10:	ldr	sl, [fp, #20]
   29a14:	add	r1, r0, r1
   29a18:	ldr	r0, [sp, #32]
   29a1c:	str	r1, [sp, #28]
   29a20:	cmp	r1, r0
   29a24:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29a28:	ldr	r3, [sl]
   29a2c:	cmp	r3, #0
   29a30:	beq	29a74 <ReadCompressedDataSlabN+0x3ea4>
   29a34:	mov	r4, sl
   29a38:	ldr	sl, [sp, #52]	; 0x34
   29a3c:	ldr	r6, [fp, #8]
   29a40:	add	r5, sp, #56	; 0x38
   29a44:	mov	r1, r5
   29a48:	mov	r0, sl
   29a4c:	mov	r2, r6
   29a50:	bl	26ec <InflateSkipData>
   29a54:	ldr	r0, [r4]
   29a58:	mov	r1, r5
   29a5c:	ldr	r5, [fp, #28]
   29a60:	ldr	r7, [fp, #24]
   29a64:	mov	r2, #1
   29a68:	add	r9, r0, r9
   29a6c:	ldr	r0, [sp, #48]	; 0x30
   29a70:	b	29a90 <ReadCompressedDataSlabN+0x3ec0>
   29a74:	ldr	r0, [sp, #48]	; 0x30
   29a78:	ldr	sl, [sp, #52]	; 0x34
   29a7c:	ldr	r5, [fp, #28]
   29a80:	ldr	r6, [fp, #8]
   29a84:	ldr	r7, [fp, #24]
   29a88:	mov	r2, #1
   29a8c:	add	r1, sp, #56	; 0x38
   29a90:	ldr	r4, [sp, #28]
   29a94:	ldr	r8, [r5]
   29a98:	str	r2, [sp]
   29a9c:	mov	r3, r6
   29aa0:	add	r2, r0, r4, lsl #3
   29aa4:	mov	r0, sl
   29aa8:	bl	e3c0 <ReadCompressedInt64Data>
   29aac:	cmp	r8, #2
   29ab0:	blt	29b38 <ReadCompressedDataSlabN+0x3f68>
   29ab4:	ldr	r0, [sp, #16]
   29ab8:	mov	sl, r9
   29abc:	add	r6, r0, r4, lsl #3
   29ac0:	mov	r4, #0
   29ac4:	ldr	r0, [r7]
   29ac8:	ldr	r9, [fp, #8]
   29acc:	ldr	r5, [sp, #52]	; 0x34
   29ad0:	add	r8, sp, #56	; 0x38
   29ad4:	mov	r1, r8
   29ad8:	sub	r3, r0, #1
   29adc:	mov	r0, r5
   29ae0:	mov	r2, r9
   29ae4:	bl	26ec <InflateSkipData>
   29ae8:	ldr	r0, [fp, #28]
   29aec:	ldr	r3, [fp, #8]
   29af0:	mov	r1, r8
   29af4:	mov	r2, r6
   29af8:	ldr	r9, [r0]
   29afc:	ldr	r0, [fp, #24]
   29b00:	ldr	r7, [r0]
   29b04:	mov	r0, #1
   29b08:	str	r0, [sp]
   29b0c:	mov	r0, r5
   29b10:	bl	e3c0 <ReadCompressedInt64Data>
   29b14:	add	sl, r7, sl
   29b18:	ldr	r7, [fp, #24]
   29b1c:	ldr	r5, [fp, #28]
   29b20:	add	r4, r4, #1
   29b24:	sub	r0, r9, #1
   29b28:	add	r6, r6, #8
   29b2c:	cmp	r4, r0
   29b30:	blt	29ac4 <ReadCompressedDataSlabN+0x3ef4>
   29b34:	b	29b3c <ReadCompressedDataSlabN+0x3f6c>
   29b38:	mov	sl, r9
   29b3c:	ldr	r0, [fp, #16]
   29b40:	ldr	r2, [r5]
   29b44:	ldr	r1, [r7]
   29b48:	ldr	r0, [r0]
   29b4c:	sub	r2, r2, #1
   29b50:	mls	r0, r2, r1, r0
   29b54:	ldr	r1, [fp, #20]
   29b58:	ldr	r2, [fp, #8]
   29b5c:	ldr	r1, [r1]
   29b60:	sub	r4, r0, r1
   29b64:	ldr	r0, [sp, #52]	; 0x34
   29b68:	add	r1, sp, #56	; 0x38
   29b6c:	sub	r3, r4, #1
   29b70:	bl	26ec <InflateSkipData>
   29b74:	ldr	r0, [fp, #12]
   29b78:	add	sl, r4, sl
   29b7c:	mov	r9, sl
   29b80:	cmp	r0, #2
   29b84:	blt	29a08 <ReadCompressedDataSlabN+0x3e38>
   29b88:	ldr	sl, [sp, #20]
   29b8c:	ldr	r7, [sp, #24]
   29b90:	ldr	r3, [sp, #40]	; 0x28
   29b94:	ldr	r4, [sp, #36]	; 0x24
   29b98:	mov	r6, #0
   29b9c:	b	29bfc <ReadCompressedDataSlabN+0x402c>
   29ba0:	add	r8, sp, #112	; 0x70
   29ba4:	ldr	r3, [r4, r6]
   29ba8:	sub	r0, r0, r1
   29bac:	add	r1, sp, #56	; 0x38
   29bb0:	ldr	r2, [r8, r6]
   29bb4:	mla	r3, r3, r2, r0
   29bb8:	ldr	r0, [sp, #52]	; 0x34
   29bbc:	ldr	r2, [fp, #8]
   29bc0:	bl	26ec <InflateSkipData>
   29bc4:	ldr	r3, [sp, #40]	; 0x28
   29bc8:	ldr	r4, [sp, #36]	; 0x24
   29bcc:	ldr	r0, [r3, r6]
   29bd0:	ldr	r2, [r4, r6]
   29bd4:	sdiv	r1, r9, r0
   29bd8:	mul	r1, r1, r0
   29bdc:	add	r0, r0, r9
   29be0:	sub	r1, r1, r9
   29be4:	add	r0, r0, r1
   29be8:	ldr	r1, [r8, r6]
   29bec:	mla	r9, r2, r1, r0
   29bf0:	subs	sl, sl, #1
   29bf4:	add	r6, r6, #4
   29bf8:	beq	29a08 <ReadCompressedDataSlabN+0x3e38>
   29bfc:	ldr	r0, [r7, r6]
   29c00:	ldr	r1, [sp, #44]	; 0x2c
   29c04:	add	r0, r0, #1
   29c08:	str	r0, [r7, r6]
   29c0c:	ldr	r1, [r1, r6]
   29c10:	sdiv	r2, r0, r1
   29c14:	mls	r0, r2, r1, r0
   29c18:	cmp	r0, #0
   29c1c:	bne	29c80 <ReadCompressedDataSlabN+0x40b0>
   29c20:	mov	r0, #0
   29c24:	str	r0, [r7, r6]
   29c28:	ldr	r0, [r3, r6]
   29c2c:	sdiv	r1, r9, r0
   29c30:	mls	r1, r1, r0, r9
   29c34:	cmp	r1, #0
   29c38:	bne	29ba0 <ReadCompressedDataSlabN+0x3fd0>
   29c3c:	ldr	r0, [r4, r6]
   29c40:	cmp	r0, #0
   29c44:	beq	29bf0 <ReadCompressedDataSlabN+0x4020>
   29c48:	add	r1, sp, #112	; 0x70
   29c4c:	ldr	r2, [fp, #8]
   29c50:	mov	r8, r1
   29c54:	ldr	r1, [r1, r6]
   29c58:	mul	r3, r1, r0
   29c5c:	ldr	r0, [sp, #52]	; 0x34
   29c60:	add	r1, sp, #56	; 0x38
   29c64:	bl	26ec <InflateSkipData>
   29c68:	ldr	r4, [sp, #36]	; 0x24
   29c6c:	ldr	r0, [r8, r6]
   29c70:	ldr	r3, [sp, #40]	; 0x28
   29c74:	ldr	r1, [r4, r6]
   29c78:	mla	r9, r1, r0, r9
   29c7c:	b	29bf0 <ReadCompressedDataSlabN+0x4020>
   29c80:	ldr	r0, [sp, #12]
   29c84:	ldr	r6, [r0, r6]
   29c88:	cmp	r6, #0
   29c8c:	beq	29a08 <ReadCompressedDataSlabN+0x3e38>
   29c90:	ldr	r0, [sp, #52]	; 0x34
   29c94:	ldr	r2, [fp, #8]
   29c98:	add	r1, sp, #56	; 0x38
   29c9c:	mov	r3, r6
   29ca0:	bl	26ec <InflateSkipData>
   29ca4:	add	r9, r6, r9
   29ca8:	b	29a08 <ReadCompressedDataSlabN+0x3e38>
   29cac:	ldr	r0, [sp, #32]
   29cb0:	cmp	r0, #1
   29cb4:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29cb8:	sub	r0, fp, #112	; 0x70
   29cbc:	add	r7, sl, #4
   29cc0:	add	r1, sp, #56	; 0x38
   29cc4:	orr	r8, r0, #4
   29cc8:	ldr	r0, [fp, #28]
   29ccc:	str	r7, [sp, #36]	; 0x24
   29cd0:	str	r8, [sp, #20]
   29cd4:	add	r0, r0, #4
   29cd8:	str	r0, [sp, #44]	; 0x2c
   29cdc:	add	r0, sp, #112	; 0x70
   29ce0:	orr	r3, r0, #4
   29ce4:	ldr	r0, [fp, #12]
   29ce8:	str	r3, [sp, #40]	; 0x28
   29cec:	sub	r0, r0, #1
   29cf0:	str	r0, [sp, #16]
   29cf4:	sub	r0, fp, #72	; 0x48
   29cf8:	orr	r0, r0, #4
   29cfc:	str	r0, [sp, #8]
   29d00:	ldr	r0, [sp, #48]	; 0x30
   29d04:	add	r0, r0, #8
   29d08:	str	r0, [sp, #12]
   29d0c:	mov	r0, #0
   29d10:	str	r0, [sp, #28]
   29d14:	b	29d3c <ReadCompressedDataSlabN+0x416c>
   29d18:	ldr	r0, [r5]
   29d1c:	ldr	r1, [sp, #28]
   29d20:	ldr	sl, [fp, #20]
   29d24:	add	r1, r0, r1
   29d28:	ldr	r0, [sp, #32]
   29d2c:	str	r1, [sp, #28]
   29d30:	cmp	r1, r0
   29d34:	add	r1, sp, #56	; 0x38
   29d38:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29d3c:	ldr	r3, [sl]
   29d40:	cmp	r3, #0
   29d44:	beq	29d78 <ReadCompressedDataSlabN+0x41a8>
   29d48:	ldr	r7, [sp, #52]	; 0x34
   29d4c:	ldr	r6, [fp, #8]
   29d50:	mov	r4, sl
   29d54:	mov	sl, r1
   29d58:	mov	r0, r7
   29d5c:	mov	r2, r6
   29d60:	bl	26ec <InflateSkipData>
   29d64:	ldr	r0, [r4]
   29d68:	ldr	r5, [fp, #28]
   29d6c:	add	r9, r0, r9
   29d70:	ldr	r0, [sp, #48]	; 0x30
   29d74:	b	29d8c <ReadCompressedDataSlabN+0x41bc>
   29d78:	ldr	r0, [sp, #48]	; 0x30
   29d7c:	ldr	r7, [sp, #52]	; 0x34
   29d80:	ldr	r5, [fp, #28]
   29d84:	ldr	r6, [fp, #8]
   29d88:	mov	sl, r1
   29d8c:	ldr	r4, [sp, #28]
   29d90:	ldr	r8, [r5]
   29d94:	mov	r1, #1
   29d98:	mov	r3, r6
   29d9c:	str	r9, [sp, #24]
   29da0:	str	r1, [sp]
   29da4:	mov	r1, sl
   29da8:	add	r2, r0, r4, lsl #3
   29dac:	mov	r0, r7
   29db0:	bl	110f0 <ReadCompressedUInt64Data>
   29db4:	ldr	r1, [fp, #24]
   29db8:	cmp	r8, #2
   29dbc:	blt	29e44 <ReadCompressedDataSlabN+0x4274>
   29dc0:	ldr	r0, [sp, #12]
   29dc4:	ldr	r9, [sp, #24]
   29dc8:	add	r6, r0, r4, lsl #3
   29dcc:	mov	r4, #0
   29dd0:	ldr	r0, [r1]
   29dd4:	ldr	sl, [fp, #8]
   29dd8:	ldr	r5, [sp, #52]	; 0x34
   29ddc:	add	r8, sp, #56	; 0x38
   29de0:	mov	r1, r8
   29de4:	sub	r3, r0, #1
   29de8:	mov	r0, r5
   29dec:	mov	r2, sl
   29df0:	bl	26ec <InflateSkipData>
   29df4:	ldr	r0, [fp, #28]
   29df8:	ldr	r3, [fp, #8]
   29dfc:	mov	r1, r8
   29e00:	mov	r2, r6
   29e04:	ldr	sl, [r0]
   29e08:	ldr	r0, [fp, #24]
   29e0c:	ldr	r7, [r0]
   29e10:	mov	r0, #1
   29e14:	str	r0, [sp]
   29e18:	mov	r0, r5
   29e1c:	bl	110f0 <ReadCompressedUInt64Data>
   29e20:	ldr	r1, [fp, #24]
   29e24:	ldr	r5, [fp, #28]
   29e28:	add	r4, r4, #1
   29e2c:	sub	r0, sl, #1
   29e30:	add	r9, r7, r9
   29e34:	add	r6, r6, #8
   29e38:	cmp	r4, r0
   29e3c:	blt	29dd0 <ReadCompressedDataSlabN+0x4200>
   29e40:	b	29e48 <ReadCompressedDataSlabN+0x4278>
   29e44:	ldr	r9, [sp, #24]
   29e48:	ldr	r0, [fp, #16]
   29e4c:	ldr	r2, [r5]
   29e50:	ldr	r1, [r1]
   29e54:	ldr	r0, [r0]
   29e58:	sub	r2, r2, #1
   29e5c:	mls	r0, r2, r1, r0
   29e60:	ldr	r1, [fp, #20]
   29e64:	ldr	r2, [fp, #8]
   29e68:	ldr	r1, [r1]
   29e6c:	sub	r4, r0, r1
   29e70:	ldr	r0, [sp, #52]	; 0x34
   29e74:	add	r1, sp, #56	; 0x38
   29e78:	sub	r3, r4, #1
   29e7c:	bl	26ec <InflateSkipData>
   29e80:	ldr	r0, [fp, #12]
   29e84:	add	r9, r4, r9
   29e88:	cmp	r0, #2
   29e8c:	blt	29d18 <ReadCompressedDataSlabN+0x4148>
   29e90:	ldr	sl, [sp, #16]
   29e94:	ldr	r8, [sp, #20]
   29e98:	ldr	r3, [sp, #40]	; 0x28
   29e9c:	ldr	r7, [sp, #36]	; 0x24
   29ea0:	mov	r6, #0
   29ea4:	b	29f08 <ReadCompressedDataSlabN+0x4338>
   29ea8:	add	r2, sp, #112	; 0x70
   29eac:	ldr	r3, [r7, r6]
   29eb0:	sub	r0, r0, r1
   29eb4:	add	r1, sp, #56	; 0x38
   29eb8:	mov	r4, r2
   29ebc:	ldr	r2, [r2, r6]
   29ec0:	mla	r3, r3, r2, r0
   29ec4:	ldr	r0, [sp, #52]	; 0x34
   29ec8:	ldr	r2, [fp, #8]
   29ecc:	bl	26ec <InflateSkipData>
   29ed0:	ldr	r3, [sp, #40]	; 0x28
   29ed4:	ldr	r7, [sp, #36]	; 0x24
   29ed8:	ldr	r0, [r3, r6]
   29edc:	ldr	r2, [r7, r6]
   29ee0:	sdiv	r1, r9, r0
   29ee4:	mul	r1, r1, r0
   29ee8:	add	r0, r0, r9
   29eec:	sub	r1, r1, r9
   29ef0:	add	r0, r0, r1
   29ef4:	ldr	r1, [r4, r6]
   29ef8:	mla	r9, r2, r1, r0
   29efc:	subs	sl, sl, #1
   29f00:	add	r6, r6, #4
   29f04:	beq	29d18 <ReadCompressedDataSlabN+0x4148>
   29f08:	ldr	r0, [r8, r6]
   29f0c:	ldr	r1, [sp, #44]	; 0x2c
   29f10:	add	r0, r0, #1
   29f14:	str	r0, [r8, r6]
   29f18:	ldr	r1, [r1, r6]
   29f1c:	sdiv	r2, r0, r1
   29f20:	mls	r0, r2, r1, r0
   29f24:	cmp	r0, #0
   29f28:	bne	29f8c <ReadCompressedDataSlabN+0x43bc>
   29f2c:	mov	r0, #0
   29f30:	str	r0, [r8, r6]
   29f34:	ldr	r0, [r3, r6]
   29f38:	sdiv	r1, r9, r0
   29f3c:	mls	r1, r1, r0, r9
   29f40:	cmp	r1, #0
   29f44:	bne	29ea8 <ReadCompressedDataSlabN+0x42d8>
   29f48:	ldr	r0, [r7, r6]
   29f4c:	cmp	r0, #0
   29f50:	beq	29efc <ReadCompressedDataSlabN+0x432c>
   29f54:	add	r1, sp, #112	; 0x70
   29f58:	ldr	r2, [fp, #8]
   29f5c:	mov	r4, r1
   29f60:	ldr	r1, [r1, r6]
   29f64:	mul	r3, r1, r0
   29f68:	ldr	r0, [sp, #52]	; 0x34
   29f6c:	add	r1, sp, #56	; 0x38
   29f70:	bl	26ec <InflateSkipData>
   29f74:	ldr	r7, [sp, #36]	; 0x24
   29f78:	ldr	r0, [r4, r6]
   29f7c:	ldr	r3, [sp, #40]	; 0x28
   29f80:	ldr	r1, [r7, r6]
   29f84:	mla	r9, r1, r0, r9
   29f88:	b	29efc <ReadCompressedDataSlabN+0x432c>
   29f8c:	ldr	r0, [sp, #8]
   29f90:	ldr	r6, [r0, r6]
   29f94:	cmp	r6, #0
   29f98:	beq	29d18 <ReadCompressedDataSlabN+0x4148>
   29f9c:	ldr	r0, [sp, #52]	; 0x34
   29fa0:	ldr	r2, [fp, #8]
   29fa4:	add	r1, sp, #56	; 0x38
   29fa8:	mov	r3, r6
   29fac:	bl	26ec <InflateSkipData>
   29fb0:	add	r9, r6, r9
   29fb4:	b	29d18 <ReadCompressedDataSlabN+0x4148>
   29fb8:	ldr	r0, [sp, #28]
   29fbc:	cmp	r0, #1
   29fc0:	blt	2a2cc <ReadCompressedDataSlabN+0x46fc>
   29fc4:	sub	r0, fp, #112	; 0x70
   29fc8:	add	lr, sl, #4
   29fcc:	mov	r6, #1
   29fd0:	add	r5, sp, #56	; 0x38
   29fd4:	mov	r4, #0
   29fd8:	orr	r8, r0, #4
   29fdc:	ldr	r0, [fp, #28]
   29fe0:	str	lr, [sp, #32]
   29fe4:	str	r8, [sp, #20]
   29fe8:	add	r0, r0, #4
   29fec:	str	r0, [sp, #40]	; 0x28
   29ff0:	add	r0, sp, #112	; 0x70
   29ff4:	orr	ip, r0, #4
   29ff8:	ldr	r0, [fp, #12]
   29ffc:	str	ip, [sp, #36]	; 0x24
   2a000:	sub	r0, r0, #1
   2a004:	str	r0, [sp, #16]
   2a008:	sub	r0, fp, #72	; 0x48
   2a00c:	orr	r0, r0, #4
   2a010:	str	r0, [sp, #8]
   2a014:	ldr	r0, [sp, #48]	; 0x30
   2a018:	add	r0, r0, #8
   2a01c:	str	r0, [sp, #12]
   2a020:	b	2a04c <ReadCompressedDataSlabN+0x447c>
   2a024:	ldr	r0, [fp, #28]
   2a028:	ldr	r4, [sp, #24]
   2a02c:	mov	r6, #1
   2a030:	add	r5, sp, #56	; 0x38
   2a034:	str	r3, [sp, #44]	; 0x2c
   2a038:	ldr	r0, [r0]
   2a03c:	add	r4, r0, r4
   2a040:	ldr	r0, [sp, #28]
   2a044:	cmp	r4, r0
   2a048:	bge	2a2cc <ReadCompressedDataSlabN+0x46fc>
   2a04c:	ldr	r3, [sl]
   2a050:	cmp	r3, #0
   2a054:	beq	2a08c <ReadCompressedDataSlabN+0x44bc>
   2a058:	ldr	sl, [sp, #52]	; 0x34
   2a05c:	ldr	r9, [fp, #8]
   2a060:	mov	r1, r5
   2a064:	mov	r0, sl
   2a068:	mov	r2, r9
   2a06c:	bl	26ec <InflateSkipData>
   2a070:	ldr	r0, [fp, #20]
   2a074:	ldr	r1, [sp, #44]	; 0x2c
   2a078:	ldr	r0, [r0]
   2a07c:	add	r1, r0, r1
   2a080:	ldr	r0, [fp, #28]
   2a084:	str	r1, [sp, #44]	; 0x2c
   2a088:	b	2a098 <ReadCompressedDataSlabN+0x44c8>
   2a08c:	ldr	sl, [sp, #52]	; 0x34
   2a090:	ldr	r0, [fp, #28]
   2a094:	ldr	r9, [fp, #8]
   2a098:	mov	r1, r5
   2a09c:	ldr	r5, [r0]
   2a0a0:	ldr	r0, [sp, #48]	; 0x30
   2a0a4:	mov	r3, r9
   2a0a8:	str	r6, [sp]
   2a0ac:	add	r2, r0, r4, lsl #3
   2a0b0:	mov	r0, sl
   2a0b4:	bl	6348 <ReadCompressedDoubleData>
   2a0b8:	cmp	r5, #2
   2a0bc:	str	r4, [sp, #24]
   2a0c0:	blt	2a140 <ReadCompressedDataSlabN+0x4570>
   2a0c4:	ldr	r0, [sp, #12]
   2a0c8:	mov	r5, #0
   2a0cc:	add	r6, r0, r4, lsl #3
   2a0d0:	ldr	r4, [sp, #44]	; 0x2c
   2a0d4:	ldr	r8, [fp, #24]
   2a0d8:	ldr	r7, [sp, #52]	; 0x34
   2a0dc:	add	sl, sp, #56	; 0x38
   2a0e0:	mov	r2, r9
   2a0e4:	mov	r1, sl
   2a0e8:	ldr	r0, [r8]
   2a0ec:	sub	r3, r0, #1
   2a0f0:	mov	r0, r7
   2a0f4:	bl	26ec <InflateSkipData>
   2a0f8:	ldr	r0, [fp, #28]
   2a0fc:	ldr	r3, [fp, #8]
   2a100:	ldr	r8, [r8]
   2a104:	mov	r1, sl
   2a108:	mov	r2, r6
   2a10c:	ldr	r9, [r0]
   2a110:	mov	r0, #1
   2a114:	str	r0, [sp]
   2a118:	mov	r0, r7
   2a11c:	bl	6348 <ReadCompressedDoubleData>
   2a120:	sub	r0, r9, #1
   2a124:	ldr	r9, [fp, #8]
   2a128:	add	r5, r5, #1
   2a12c:	add	r4, r8, r4
   2a130:	add	r6, r6, #8
   2a134:	cmp	r5, r0
   2a138:	blt	2a0d4 <ReadCompressedDataSlabN+0x4504>
   2a13c:	b	2a144 <ReadCompressedDataSlabN+0x4574>
   2a140:	ldr	r4, [sp, #44]	; 0x2c
   2a144:	ldr	r2, [fp, #28]
   2a148:	ldr	r0, [fp, #16]
   2a14c:	ldr	r1, [fp, #24]
   2a150:	ldr	sl, [fp, #20]
   2a154:	ldr	r2, [r2]
   2a158:	ldr	r0, [r0]
   2a15c:	ldr	r1, [r1]
   2a160:	sub	r2, r2, #1
   2a164:	mls	r0, r2, r1, r0
   2a168:	ldr	r1, [sl]
   2a16c:	mov	r2, r9
   2a170:	sub	r5, r0, r1
   2a174:	ldr	r0, [sp, #52]	; 0x34
   2a178:	add	r1, sp, #56	; 0x38
   2a17c:	sub	r3, r5, #1
   2a180:	bl	26ec <InflateSkipData>
   2a184:	ldr	r0, [fp, #12]
   2a188:	add	r4, r5, r4
   2a18c:	mov	r3, r4
   2a190:	cmp	r0, #2
   2a194:	blt	2a024 <ReadCompressedDataSlabN+0x4454>
   2a198:	ldr	r5, [sp, #16]
   2a19c:	ldr	r8, [sp, #20]
   2a1a0:	ldr	ip, [sp, #36]	; 0x24
   2a1a4:	ldr	lr, [sp, #32]
   2a1a8:	add	r4, sp, #112	; 0x70
   2a1ac:	mov	r6, #0
   2a1b0:	mov	r7, r4
   2a1b4:	b	2a214 <ReadCompressedDataSlabN+0x4644>
   2a1b8:	mov	r4, r3
   2a1bc:	ldr	r2, [r7, r6]
   2a1c0:	ldr	r3, [lr, r6]
   2a1c4:	sub	r0, r0, r1
   2a1c8:	add	r1, sp, #56	; 0x38
   2a1cc:	mla	r3, r3, r2, r0
   2a1d0:	ldr	r0, [sp, #52]	; 0x34
   2a1d4:	mov	r2, r9
   2a1d8:	bl	26ec <InflateSkipData>
   2a1dc:	ldr	ip, [sp, #36]	; 0x24
   2a1e0:	ldr	lr, [sp, #32]
   2a1e4:	ldr	r0, [ip, r6]
   2a1e8:	ldr	r2, [lr, r6]
   2a1ec:	sdiv	r1, r4, r0
   2a1f0:	mul	r1, r1, r0
   2a1f4:	add	r0, r0, r4
   2a1f8:	sub	r1, r1, r4
   2a1fc:	add	r0, r0, r1
   2a200:	ldr	r1, [r7, r6]
   2a204:	mla	r3, r2, r1, r0
   2a208:	subs	r5, r5, #1
   2a20c:	add	r6, r6, #4
   2a210:	beq	2a024 <ReadCompressedDataSlabN+0x4454>
   2a214:	ldr	r0, [r8, r6]
   2a218:	ldr	r1, [sp, #40]	; 0x28
   2a21c:	add	r0, r0, #1
   2a220:	str	r0, [r8, r6]
   2a224:	ldr	r1, [r1, r6]
   2a228:	sdiv	r2, r0, r1
   2a22c:	mls	r0, r2, r1, r0
   2a230:	cmp	r0, #0
   2a234:	bne	2a298 <ReadCompressedDataSlabN+0x46c8>
   2a238:	mov	r0, #0
   2a23c:	str	r0, [r8, r6]
   2a240:	ldr	r0, [ip, r6]
   2a244:	sdiv	r1, r3, r0
   2a248:	mls	r1, r1, r0, r3
   2a24c:	cmp	r1, #0
   2a250:	bne	2a1b8 <ReadCompressedDataSlabN+0x45e8>
   2a254:	ldr	r0, [lr, r6]
   2a258:	cmp	r0, #0
   2a25c:	beq	2a208 <ReadCompressedDataSlabN+0x4638>
   2a260:	ldr	r1, [r7, r6]
   2a264:	mov	r4, r3
   2a268:	mov	r2, r9
   2a26c:	mul	r3, r1, r0
   2a270:	ldr	r0, [sp, #52]	; 0x34
   2a274:	add	r1, sp, #56	; 0x38
   2a278:	bl	26ec <InflateSkipData>
   2a27c:	ldr	lr, [sp, #32]
   2a280:	ldr	r0, [r7, r6]
   2a284:	ldr	ip, [sp, #36]	; 0x24
   2a288:	mov	r3, r4
   2a28c:	ldr	r1, [lr, r6]
   2a290:	mla	r3, r1, r0, r4
   2a294:	b	2a208 <ReadCompressedDataSlabN+0x4638>
   2a298:	ldr	r0, [sp, #8]
   2a29c:	ldr	r6, [r0, r6]
   2a2a0:	cmp	r6, #0
   2a2a4:	beq	2a024 <ReadCompressedDataSlabN+0x4454>
   2a2a8:	ldr	r0, [sp, #52]	; 0x34
   2a2ac:	mov	r4, r3
   2a2b0:	add	r1, sp, #56	; 0x38
   2a2b4:	mov	r2, r9
   2a2b8:	mov	r3, r6
   2a2bc:	bl	26ec <InflateSkipData>
   2a2c0:	mov	r3, r4
   2a2c4:	add	r3, r6, r4
   2a2c8:	b	2a024 <ReadCompressedDataSlabN+0x4454>
   2a2cc:	add	r0, sp, #56	; 0x38
   2a2d0:	bl	193c <inflateEnd@plt>
   2a2d4:	mov	r0, #0
   2a2d8:	sub	sp, fp, #28
   2a2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002a2e0 <ReadDataSlab1>:
   2a2e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2e4:	add	fp, sp, #28
   2a2e8:	sub	sp, sp, #4
   2a2ec:	mov	sl, r0
   2a2f0:	mov	r0, r3
   2a2f4:	mov	r8, r3
   2a2f8:	mov	r4, r2
   2a2fc:	mov	r5, r1
   2a300:	bl	1924 <Mat_SizeOf@plt>
   2a304:	mov	r6, r0
   2a308:	ldr	r0, [fp, #8]
   2a30c:	mov	r2, #1
   2a310:	mul	r1, r6, r0
   2a314:	ldr	r0, [sl]
   2a318:	bl	1a2c <fseek@plt>
   2a31c:	sub	r0, r4, #6
   2a320:	mov	r4, #0
   2a324:	cmp	r0, #9
   2a328:	bhi	2a68c <ReadDataSlab1+0x3ac>
   2a32c:	ldr	r1, [fp, #12]
   2a330:	sub	r1, r1, #1
   2a334:	mul	r9, r6, r1
   2a338:	ldr	r6, [fp, #16]
   2a33c:	add	r1, pc, #4
   2a340:	ldr	r0, [r1, r0, lsl #2]
   2a344:	add	pc, r1, r0
   2a348:	.word	0x00000028
   2a34c:	.word	0x00000078
   2a350:	.word	0x000000c8
   2a354:	.word	0x00000118
   2a358:	.word	0x00000168
   2a35c:	.word	0x000001b8
   2a360:	.word	0x00000208
   2a364:	.word	0x00000258
   2a368:	.word	0x000002a8
   2a36c:	.word	0x000002f8
   2a370:	cmp	r9, #0
   2a374:	beq	2a698 <ReadDataSlab1+0x3b8>
   2a378:	cmp	r6, #1
   2a37c:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a380:	mov	r4, #0
   2a384:	mov	r0, sl
   2a388:	mov	r1, r5
   2a38c:	mov	r2, r8
   2a390:	mov	r3, #1
   2a394:	bl	37d8 <ReadDoubleData>
   2a398:	mov	r7, r0
   2a39c:	ldr	r0, [sl]
   2a3a0:	mov	r1, r9
   2a3a4:	mov	r2, #1
   2a3a8:	bl	1a2c <fseek@plt>
   2a3ac:	add	r4, r7, r4
   2a3b0:	add	r5, r5, #8
   2a3b4:	subs	r6, r6, #1
   2a3b8:	bne	2a384 <ReadDataSlab1+0xa4>
   2a3bc:	b	2a68c <ReadDataSlab1+0x3ac>
   2a3c0:	cmp	r9, #0
   2a3c4:	beq	2a6b4 <ReadDataSlab1+0x3d4>
   2a3c8:	cmp	r6, #1
   2a3cc:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a3d0:	mov	r4, #0
   2a3d4:	mov	r0, sl
   2a3d8:	mov	r1, r5
   2a3dc:	mov	r2, r8
   2a3e0:	mov	r3, #1
   2a3e4:	bl	8aa0 <ReadSingleData>
   2a3e8:	mov	r7, r0
   2a3ec:	ldr	r0, [sl]
   2a3f0:	mov	r1, r9
   2a3f4:	mov	r2, #1
   2a3f8:	bl	1a2c <fseek@plt>
   2a3fc:	add	r4, r7, r4
   2a400:	add	r5, r5, #4
   2a404:	subs	r6, r6, #1
   2a408:	bne	2a3d4 <ReadDataSlab1+0xf4>
   2a40c:	b	2a68c <ReadDataSlab1+0x3ac>
   2a410:	cmp	r9, #0
   2a414:	beq	2a6d0 <ReadDataSlab1+0x3f0>
   2a418:	cmp	r6, #1
   2a41c:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a420:	mov	r4, #0
   2a424:	mov	r0, sl
   2a428:	mov	r1, r5
   2a42c:	mov	r2, r8
   2a430:	mov	r3, #1
   2a434:	bl	1c460 <ReadInt8Data>
   2a438:	mov	r7, r0
   2a43c:	ldr	r0, [sl]
   2a440:	mov	r1, r9
   2a444:	mov	r2, #1
   2a448:	bl	1a2c <fseek@plt>
   2a44c:	add	r4, r7, r4
   2a450:	add	r5, r5, #1
   2a454:	subs	r6, r6, #1
   2a458:	bne	2a424 <ReadDataSlab1+0x144>
   2a45c:	b	2a68c <ReadDataSlab1+0x3ac>
   2a460:	cmp	r9, #0
   2a464:	beq	2a6ec <ReadDataSlab1+0x40c>
   2a468:	cmp	r6, #1
   2a46c:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a470:	mov	r4, #0
   2a474:	mov	r0, sl
   2a478:	mov	r1, r5
   2a47c:	mov	r2, r8
   2a480:	mov	r3, #1
   2a484:	bl	1ed88 <ReadUInt8Data>
   2a488:	mov	r7, r0
   2a48c:	ldr	r0, [sl]
   2a490:	mov	r1, r9
   2a494:	mov	r2, #1
   2a498:	bl	1a2c <fseek@plt>
   2a49c:	add	r4, r7, r4
   2a4a0:	add	r5, r5, #1
   2a4a4:	subs	r6, r6, #1
   2a4a8:	bne	2a474 <ReadDataSlab1+0x194>
   2a4ac:	b	2a68c <ReadDataSlab1+0x3ac>
   2a4b0:	cmp	r9, #0
   2a4b4:	beq	2a708 <ReadDataSlab1+0x428>
   2a4b8:	cmp	r6, #1
   2a4bc:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a4c0:	mov	r4, #0
   2a4c4:	mov	r0, sl
   2a4c8:	mov	r1, r5
   2a4cc:	mov	r2, r8
   2a4d0:	mov	r3, #1
   2a4d4:	bl	16fe8 <ReadInt16Data>
   2a4d8:	mov	r7, r0
   2a4dc:	ldr	r0, [sl]
   2a4e0:	mov	r1, r9
   2a4e4:	mov	r2, #1
   2a4e8:	bl	1a2c <fseek@plt>
   2a4ec:	add	r4, r7, r4
   2a4f0:	add	r5, r5, #2
   2a4f4:	subs	r6, r6, #1
   2a4f8:	bne	2a4c4 <ReadDataSlab1+0x1e4>
   2a4fc:	b	2a68c <ReadDataSlab1+0x3ac>
   2a500:	cmp	r9, #0
   2a504:	beq	2a724 <ReadDataSlab1+0x444>
   2a508:	cmp	r6, #1
   2a50c:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a510:	mov	r4, #0
   2a514:	mov	r0, sl
   2a518:	mov	r1, r5
   2a51c:	mov	r2, r8
   2a520:	mov	r3, #1
   2a524:	bl	19a24 <ReadUInt16Data>
   2a528:	mov	r7, r0
   2a52c:	ldr	r0, [sl]
   2a530:	mov	r1, r9
   2a534:	mov	r2, #1
   2a538:	bl	1a2c <fseek@plt>
   2a53c:	add	r4, r7, r4
   2a540:	add	r5, r5, #2
   2a544:	subs	r6, r6, #1
   2a548:	bne	2a514 <ReadDataSlab1+0x234>
   2a54c:	b	2a68c <ReadDataSlab1+0x3ac>
   2a550:	cmp	r9, #0
   2a554:	beq	2a740 <ReadDataSlab1+0x460>
   2a558:	cmp	r6, #1
   2a55c:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a560:	mov	r4, #0
   2a564:	mov	r0, sl
   2a568:	mov	r1, r5
   2a56c:	mov	r2, r8
   2a570:	mov	r3, #1
   2a574:	bl	11690 <ReadInt32Data>
   2a578:	mov	r7, r0
   2a57c:	ldr	r0, [sl]
   2a580:	mov	r1, r9
   2a584:	mov	r2, #1
   2a588:	bl	1a2c <fseek@plt>
   2a58c:	add	r4, r7, r4
   2a590:	add	r5, r5, #4
   2a594:	subs	r6, r6, #1
   2a598:	bne	2a564 <ReadDataSlab1+0x284>
   2a59c:	b	2a68c <ReadDataSlab1+0x3ac>
   2a5a0:	cmp	r9, #0
   2a5a4:	beq	2a75c <ReadDataSlab1+0x47c>
   2a5a8:	cmp	r6, #1
   2a5ac:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a5b0:	mov	r4, #0
   2a5b4:	mov	r0, sl
   2a5b8:	mov	r1, r5
   2a5bc:	mov	r2, r8
   2a5c0:	mov	r3, #1
   2a5c4:	bl	1433c <ReadUInt32Data>
   2a5c8:	mov	r7, r0
   2a5cc:	ldr	r0, [sl]
   2a5d0:	mov	r1, r9
   2a5d4:	mov	r2, #1
   2a5d8:	bl	1a2c <fseek@plt>
   2a5dc:	add	r4, r7, r4
   2a5e0:	add	r5, r5, #4
   2a5e4:	subs	r6, r6, #1
   2a5e8:	bne	2a5b4 <ReadDataSlab1+0x2d4>
   2a5ec:	b	2a68c <ReadDataSlab1+0x3ac>
   2a5f0:	cmp	r9, #0
   2a5f4:	beq	2a778 <ReadDataSlab1+0x498>
   2a5f8:	cmp	r6, #1
   2a5fc:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a600:	mov	r4, #0
   2a604:	mov	r0, sl
   2a608:	mov	r1, r5
   2a60c:	mov	r2, r8
   2a610:	mov	r3, #1
   2a614:	bl	bc30 <ReadInt64Data>
   2a618:	mov	r7, r0
   2a61c:	ldr	r0, [sl]
   2a620:	mov	r1, r9
   2a624:	mov	r2, #1
   2a628:	bl	1a2c <fseek@plt>
   2a62c:	add	r4, r7, r4
   2a630:	add	r5, r5, #8
   2a634:	subs	r6, r6, #1
   2a638:	bne	2a604 <ReadDataSlab1+0x324>
   2a63c:	b	2a68c <ReadDataSlab1+0x3ac>
   2a640:	cmp	r9, #0
   2a644:	beq	2a794 <ReadDataSlab1+0x4b4>
   2a648:	cmp	r6, #1
   2a64c:	blt	2a68c <ReadDataSlab1+0x3ac>
   2a650:	mov	r4, #0
   2a654:	mov	r0, sl
   2a658:	mov	r1, r5
   2a65c:	mov	r2, r8
   2a660:	mov	r3, #1
   2a664:	bl	e960 <ReadUInt64Data>
   2a668:	mov	r7, r0
   2a66c:	ldr	r0, [sl]
   2a670:	mov	r1, r9
   2a674:	mov	r2, #1
   2a678:	bl	1a2c <fseek@plt>
   2a67c:	add	r4, r7, r4
   2a680:	add	r5, r5, #8
   2a684:	subs	r6, r6, #1
   2a688:	bne	2a654 <ReadDataSlab1+0x374>
   2a68c:	mov	r0, r4
   2a690:	sub	sp, fp, #28
   2a694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a698:	mov	r0, sl
   2a69c:	mov	r1, r5
   2a6a0:	mov	r2, r8
   2a6a4:	mov	r3, r6
   2a6a8:	sub	sp, fp, #28
   2a6ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a6b0:	b	37d8 <ReadDoubleData>
   2a6b4:	mov	r0, sl
   2a6b8:	mov	r1, r5
   2a6bc:	mov	r2, r8
   2a6c0:	mov	r3, r6
   2a6c4:	sub	sp, fp, #28
   2a6c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a6cc:	b	8aa0 <ReadSingleData>
   2a6d0:	mov	r0, sl
   2a6d4:	mov	r1, r5
   2a6d8:	mov	r2, r8
   2a6dc:	mov	r3, r6
   2a6e0:	sub	sp, fp, #28
   2a6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a6e8:	b	1c460 <ReadInt8Data>
   2a6ec:	mov	r0, sl
   2a6f0:	mov	r1, r5
   2a6f4:	mov	r2, r8
   2a6f8:	mov	r3, r6
   2a6fc:	sub	sp, fp, #28
   2a700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a704:	b	1ed88 <ReadUInt8Data>
   2a708:	mov	r0, sl
   2a70c:	mov	r1, r5
   2a710:	mov	r2, r8
   2a714:	mov	r3, r6
   2a718:	sub	sp, fp, #28
   2a71c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a720:	b	16fe8 <ReadInt16Data>
   2a724:	mov	r0, sl
   2a728:	mov	r1, r5
   2a72c:	mov	r2, r8
   2a730:	mov	r3, r6
   2a734:	sub	sp, fp, #28
   2a738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a73c:	b	19a24 <ReadUInt16Data>
   2a740:	mov	r0, sl
   2a744:	mov	r1, r5
   2a748:	mov	r2, r8
   2a74c:	mov	r3, r6
   2a750:	sub	sp, fp, #28
   2a754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a758:	b	11690 <ReadInt32Data>
   2a75c:	mov	r0, sl
   2a760:	mov	r1, r5
   2a764:	mov	r2, r8
   2a768:	mov	r3, r6
   2a76c:	sub	sp, fp, #28
   2a770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a774:	b	1433c <ReadUInt32Data>
   2a778:	mov	r0, sl
   2a77c:	mov	r1, r5
   2a780:	mov	r2, r8
   2a784:	mov	r3, r6
   2a788:	sub	sp, fp, #28
   2a78c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a790:	b	bc30 <ReadInt64Data>
   2a794:	mov	r0, sl
   2a798:	mov	r1, r5
   2a79c:	mov	r2, r8
   2a7a0:	mov	r3, r6
   2a7a4:	sub	sp, fp, #28
   2a7a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a7ac:	b	e960 <ReadUInt64Data>

0002a7b0 <ReadDataSlab2>:
   2a7b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a7b4:	add	fp, sp, #28
   2a7b8:	sub	sp, sp, #20
   2a7bc:	cmp	r0, #0
   2a7c0:	mov	r9, #0
   2a7c4:	movne	r5, r1
   2a7c8:	cmpne	r1, #0
   2a7cc:	beq	2a7fc <ReadDataSlab2+0x4c>
   2a7d0:	ldr	r4, [fp, #20]
   2a7d4:	cmp	r4, #0
   2a7d8:	ldrne	r8, [fp, #16]
   2a7dc:	cmpne	r8, #0
   2a7e0:	beq	2a7fc <ReadDataSlab2+0x4c>
   2a7e4:	mov	r6, r0
   2a7e8:	ldr	r0, [fp, #12]
   2a7ec:	cmp	r0, #0
   2a7f0:	ldrne	r0, [r6]
   2a7f4:	cmpne	r0, #0
   2a7f8:	bne	2a808 <ReadDataSlab2+0x58>
   2a7fc:	mov	r0, r9
   2a800:	sub	sp, fp, #28
   2a804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a808:	mov	r0, r3
   2a80c:	mov	sl, r3
   2a810:	mov	r7, r2
   2a814:	bl	1924 <Mat_SizeOf@plt>
   2a818:	str	r0, [sp, #16]
   2a81c:	sub	r0, r7, #6
   2a820:	cmp	r0, #9
   2a824:	bhi	2a7fc <ReadDataSlab2+0x4c>
   2a828:	add	r1, pc, #8
   2a82c:	ldr	r7, [fp, #8]
   2a830:	ldr	r0, [r1, r0, lsl #2]
   2a834:	add	pc, r1, r0
   2a838:	.word	0x00000028
   2a83c:	.word	0x0000006c
   2a840:	.word	0x000000b0
   2a844:	.word	0x000000f4
   2a848:	.word	0x00000138
   2a84c:	.word	0x0000017c
   2a850:	.word	0x000001c0
   2a854:	.word	0x00000204
   2a858:	.word	0x0000028c
   2a85c:	.word	0x00000248
   2a860:	ldr	r2, [r8]
   2a864:	cmp	r2, #1
   2a868:	bne	2ab08 <ReadDataSlab2+0x358>
   2a86c:	ldr	r1, [r7]
   2a870:	ldr	r0, [r4]
   2a874:	cmp	r0, r1
   2a878:	bne	2ab5c <ReadDataSlab2+0x3ac>
   2a87c:	ldr	r1, [r8, #4]
   2a880:	cmp	r1, #1
   2a884:	bne	2ab58 <ReadDataSlab2+0x3a8>
   2a888:	ldr	r1, [r4, #4]
   2a88c:	mov	r2, sl
   2a890:	mul	r3, r1, r0
   2a894:	mov	r0, r6
   2a898:	mov	r1, r5
   2a89c:	bl	37d8 <ReadDoubleData>
   2a8a0:	b	2a7fc <ReadDataSlab2+0x4c>
   2a8a4:	ldr	r2, [r8]
   2a8a8:	cmp	r2, #1
   2a8ac:	bne	2ab10 <ReadDataSlab2+0x360>
   2a8b0:	ldr	r1, [r7]
   2a8b4:	ldr	r0, [r4]
   2a8b8:	cmp	r0, r1
   2a8bc:	bne	2ac98 <ReadDataSlab2+0x4e8>
   2a8c0:	ldr	r1, [r8, #4]
   2a8c4:	cmp	r1, #1
   2a8c8:	bne	2ac94 <ReadDataSlab2+0x4e4>
   2a8cc:	ldr	r1, [r4, #4]
   2a8d0:	mov	r2, sl
   2a8d4:	mul	r3, r1, r0
   2a8d8:	mov	r0, r6
   2a8dc:	mov	r1, r5
   2a8e0:	bl	8aa0 <ReadSingleData>
   2a8e4:	b	2a7fc <ReadDataSlab2+0x4c>
   2a8e8:	ldr	r2, [r8]
   2a8ec:	cmp	r2, #1
   2a8f0:	bne	2ab18 <ReadDataSlab2+0x368>
   2a8f4:	ldr	r1, [r7]
   2a8f8:	ldr	r0, [r4]
   2a8fc:	cmp	r0, r1
   2a900:	bne	2add0 <ReadDataSlab2+0x620>
   2a904:	ldr	r1, [r8, #4]
   2a908:	cmp	r1, #1
   2a90c:	bne	2adcc <ReadDataSlab2+0x61c>
   2a910:	ldr	r1, [r4, #4]
   2a914:	mov	r2, sl
   2a918:	mul	r3, r1, r0
   2a91c:	mov	r0, r6
   2a920:	mov	r1, r5
   2a924:	bl	1c460 <ReadInt8Data>
   2a928:	b	2a7fc <ReadDataSlab2+0x4c>
   2a92c:	ldr	r2, [r8]
   2a930:	cmp	r2, #1
   2a934:	bne	2ab20 <ReadDataSlab2+0x370>
   2a938:	ldr	r1, [r7]
   2a93c:	ldr	r0, [r4]
   2a940:	cmp	r0, r1
   2a944:	bne	2af08 <ReadDataSlab2+0x758>
   2a948:	ldr	r1, [r8, #4]
   2a94c:	cmp	r1, #1
   2a950:	bne	2af04 <ReadDataSlab2+0x754>
   2a954:	ldr	r1, [r4, #4]
   2a958:	mov	r2, sl
   2a95c:	mul	r3, r1, r0
   2a960:	mov	r0, r6
   2a964:	mov	r1, r5
   2a968:	bl	1ed88 <ReadUInt8Data>
   2a96c:	b	2a7fc <ReadDataSlab2+0x4c>
   2a970:	ldr	r2, [r8]
   2a974:	cmp	r2, #1
   2a978:	bne	2ab28 <ReadDataSlab2+0x378>
   2a97c:	ldr	r1, [r7]
   2a980:	ldr	r0, [r4]
   2a984:	cmp	r0, r1
   2a988:	bne	2b040 <ReadDataSlab2+0x890>
   2a98c:	ldr	r1, [r8, #4]
   2a990:	cmp	r1, #1
   2a994:	bne	2b03c <ReadDataSlab2+0x88c>
   2a998:	ldr	r1, [r4, #4]
   2a99c:	mov	r2, sl
   2a9a0:	mul	r3, r1, r0
   2a9a4:	mov	r0, r6
   2a9a8:	mov	r1, r5
   2a9ac:	bl	16fe8 <ReadInt16Data>
   2a9b0:	b	2a7fc <ReadDataSlab2+0x4c>
   2a9b4:	ldr	r2, [r8]
   2a9b8:	cmp	r2, #1
   2a9bc:	bne	2ab30 <ReadDataSlab2+0x380>
   2a9c0:	ldr	r1, [r7]
   2a9c4:	ldr	r0, [r4]
   2a9c8:	cmp	r0, r1
   2a9cc:	bne	2b178 <ReadDataSlab2+0x9c8>
   2a9d0:	ldr	r1, [r8, #4]
   2a9d4:	cmp	r1, #1
   2a9d8:	bne	2b174 <ReadDataSlab2+0x9c4>
   2a9dc:	ldr	r1, [r4, #4]
   2a9e0:	mov	r2, sl
   2a9e4:	mul	r3, r1, r0
   2a9e8:	mov	r0, r6
   2a9ec:	mov	r1, r5
   2a9f0:	bl	19a24 <ReadUInt16Data>
   2a9f4:	b	2a7fc <ReadDataSlab2+0x4c>
   2a9f8:	ldr	r2, [r8]
   2a9fc:	cmp	r2, #1
   2aa00:	bne	2ab38 <ReadDataSlab2+0x388>
   2aa04:	ldr	r1, [r7]
   2aa08:	ldr	r0, [r4]
   2aa0c:	cmp	r0, r1
   2aa10:	bne	2b2b0 <ReadDataSlab2+0xb00>
   2aa14:	ldr	r1, [r8, #4]
   2aa18:	cmp	r1, #1
   2aa1c:	bne	2b2ac <ReadDataSlab2+0xafc>
   2aa20:	ldr	r1, [r4, #4]
   2aa24:	mov	r2, sl
   2aa28:	mul	r3, r1, r0
   2aa2c:	mov	r0, r6
   2aa30:	mov	r1, r5
   2aa34:	bl	11690 <ReadInt32Data>
   2aa38:	b	2a7fc <ReadDataSlab2+0x4c>
   2aa3c:	ldr	r2, [r8]
   2aa40:	cmp	r2, #1
   2aa44:	bne	2ab40 <ReadDataSlab2+0x390>
   2aa48:	ldr	r1, [r7]
   2aa4c:	ldr	r0, [r4]
   2aa50:	cmp	r0, r1
   2aa54:	bne	2b3e8 <ReadDataSlab2+0xc38>
   2aa58:	ldr	r1, [r8, #4]
   2aa5c:	cmp	r1, #1
   2aa60:	bne	2b3e4 <ReadDataSlab2+0xc34>
   2aa64:	ldr	r1, [r4, #4]
   2aa68:	mov	r2, sl
   2aa6c:	mul	r3, r1, r0
   2aa70:	mov	r0, r6
   2aa74:	mov	r1, r5
   2aa78:	bl	1433c <ReadUInt32Data>
   2aa7c:	b	2a7fc <ReadDataSlab2+0x4c>
   2aa80:	ldr	r2, [r8]
   2aa84:	cmp	r2, #1
   2aa88:	bne	2ab48 <ReadDataSlab2+0x398>
   2aa8c:	ldr	r1, [r7]
   2aa90:	ldr	r0, [r4]
   2aa94:	cmp	r0, r1
   2aa98:	bne	2b520 <ReadDataSlab2+0xd70>
   2aa9c:	ldr	r1, [r8, #4]
   2aaa0:	cmp	r1, #1
   2aaa4:	bne	2b51c <ReadDataSlab2+0xd6c>
   2aaa8:	ldr	r1, [r4, #4]
   2aaac:	mov	r2, sl
   2aab0:	mul	r3, r1, r0
   2aab4:	mov	r0, r6
   2aab8:	mov	r1, r5
   2aabc:	bl	e960 <ReadUInt64Data>
   2aac0:	b	2a7fc <ReadDataSlab2+0x4c>
   2aac4:	ldr	r2, [r8]
   2aac8:	cmp	r2, #1
   2aacc:	bne	2ab50 <ReadDataSlab2+0x3a0>
   2aad0:	ldr	r1, [r7]
   2aad4:	ldr	r0, [r4]
   2aad8:	cmp	r0, r1
   2aadc:	bne	2b658 <ReadDataSlab2+0xea8>
   2aae0:	ldr	r1, [r8, #4]
   2aae4:	cmp	r1, #1
   2aae8:	bne	2b654 <ReadDataSlab2+0xea4>
   2aaec:	ldr	r1, [r4, #4]
   2aaf0:	mov	r2, sl
   2aaf4:	mul	r3, r1, r0
   2aaf8:	mov	r0, r6
   2aafc:	mov	r1, r5
   2ab00:	bl	bc30 <ReadInt64Data>
   2ab04:	b	2a7fc <ReadDataSlab2+0x4c>
   2ab08:	ldr	r1, [r7]
   2ab0c:	b	2ab5c <ReadDataSlab2+0x3ac>
   2ab10:	ldr	r1, [r7]
   2ab14:	b	2ac98 <ReadDataSlab2+0x4e8>
   2ab18:	ldr	r1, [r7]
   2ab1c:	b	2add0 <ReadDataSlab2+0x620>
   2ab20:	ldr	r1, [r7]
   2ab24:	b	2af08 <ReadDataSlab2+0x758>
   2ab28:	ldr	r1, [r7]
   2ab2c:	b	2b040 <ReadDataSlab2+0x890>
   2ab30:	ldr	r1, [r7]
   2ab34:	b	2b178 <ReadDataSlab2+0x9c8>
   2ab38:	ldr	r1, [r7]
   2ab3c:	b	2b2b0 <ReadDataSlab2+0xb00>
   2ab40:	ldr	r1, [r7]
   2ab44:	b	2b3e8 <ReadDataSlab2+0xc38>
   2ab48:	ldr	r1, [r7]
   2ab4c:	b	2b520 <ReadDataSlab2+0xd70>
   2ab50:	ldr	r1, [r7]
   2ab54:	b	2b658 <ReadDataSlab2+0xea8>
   2ab58:	mov	r1, r0
   2ab5c:	ldr	r0, [r6]
   2ab60:	ldr	r8, [r8, #4]
   2ab64:	str	r1, [sp, #8]
   2ab68:	str	r2, [sp, #12]
   2ab6c:	bl	1840 <ftell@plt>
   2ab70:	cmn	r0, #1
   2ab74:	beq	2b78c <ReadDataSlab2+0xfdc>
   2ab78:	ldr	r0, [fp, #12]
   2ab7c:	ldr	r1, [sp, #16]
   2ab80:	mov	r2, #1
   2ab84:	ldr	r0, [r0, #4]
   2ab88:	mul	r0, r0, r1
   2ab8c:	ldr	r1, [r7]
   2ab90:	mul	r1, r0, r1
   2ab94:	ldr	r0, [r6]
   2ab98:	bl	1a2c <fseek@plt>
   2ab9c:	ldr	r0, [r4, #4]
   2aba0:	cmp	r0, #1
   2aba4:	blt	2a7fc <ReadDataSlab2+0x4c>
   2aba8:	ldr	r0, [sp, #12]
   2abac:	ldr	r1, [sp, #16]
   2abb0:	mov	r4, #0
   2abb4:	sub	r0, r0, #1
   2abb8:	mul	r7, r0, r1
   2abbc:	mul	r0, r8, r1
   2abc0:	ldr	r1, [sp, #8]
   2abc4:	mul	r0, r0, r1
   2abc8:	str	r0, [sp, #8]
   2abcc:	ldr	r0, [r6]
   2abd0:	bl	1840 <ftell@plt>
   2abd4:	cmn	r0, #1
   2abd8:	beq	2b78c <ReadDataSlab2+0xfdc>
   2abdc:	mov	r9, r0
   2abe0:	ldr	r0, [fp, #12]
   2abe4:	ldr	r1, [sp, #16]
   2abe8:	mov	r2, #1
   2abec:	str	r4, [sp, #12]
   2abf0:	ldr	r0, [r0]
   2abf4:	mul	r1, r0, r1
   2abf8:	ldr	r0, [r6]
   2abfc:	bl	1a2c <fseek@plt>
   2ac00:	ldr	r4, [fp, #20]
   2ac04:	ldr	r0, [r4]
   2ac08:	cmp	r0, #1
   2ac0c:	blt	2ac4c <ReadDataSlab2+0x49c>
   2ac10:	mov	r8, #0
   2ac14:	mov	r0, r6
   2ac18:	mov	r1, r5
   2ac1c:	mov	r2, sl
   2ac20:	mov	r3, #1
   2ac24:	bl	37d8 <ReadDoubleData>
   2ac28:	ldr	r0, [r6]
   2ac2c:	mov	r1, r7
   2ac30:	mov	r2, #1
   2ac34:	bl	1a2c <fseek@plt>
   2ac38:	ldr	r0, [r4]
   2ac3c:	add	r8, r8, #1
   2ac40:	add	r5, r5, #8
   2ac44:	cmp	r8, r0
   2ac48:	blt	2ac14 <ReadDataSlab2+0x464>
   2ac4c:	ldr	r0, [r6]
   2ac50:	bl	1840 <ftell@plt>
   2ac54:	cmn	r0, #1
   2ac58:	beq	2b78c <ReadDataSlab2+0xfdc>
   2ac5c:	ldr	r1, [sp, #8]
   2ac60:	mov	r2, #1
   2ac64:	add	r1, r9, r1
   2ac68:	sub	r1, r1, r0
   2ac6c:	ldr	r0, [r6]
   2ac70:	bl	1a2c <fseek@plt>
   2ac74:	mov	r0, r4
   2ac78:	ldr	r4, [sp, #12]
   2ac7c:	mov	r9, #0
   2ac80:	ldr	r0, [r0, #4]
   2ac84:	add	r4, r4, #1
   2ac88:	cmp	r4, r0
   2ac8c:	blt	2abcc <ReadDataSlab2+0x41c>
   2ac90:	b	2a7fc <ReadDataSlab2+0x4c>
   2ac94:	mov	r1, r0
   2ac98:	ldr	r0, [r6]
   2ac9c:	ldr	r8, [r8, #4]
   2aca0:	str	r1, [sp, #8]
   2aca4:	str	r2, [sp, #12]
   2aca8:	bl	1840 <ftell@plt>
   2acac:	cmn	r0, #1
   2acb0:	beq	2b78c <ReadDataSlab2+0xfdc>
   2acb4:	ldr	r0, [fp, #12]
   2acb8:	ldr	r1, [sp, #16]
   2acbc:	mov	r2, #1
   2acc0:	ldr	r0, [r0, #4]
   2acc4:	mul	r0, r0, r1
   2acc8:	ldr	r1, [r7]
   2accc:	mul	r1, r0, r1
   2acd0:	ldr	r0, [r6]
   2acd4:	bl	1a2c <fseek@plt>
   2acd8:	ldr	r0, [r4, #4]
   2acdc:	cmp	r0, #1
   2ace0:	blt	2a7fc <ReadDataSlab2+0x4c>
   2ace4:	ldr	r0, [sp, #12]
   2ace8:	ldr	r1, [sp, #16]
   2acec:	mov	r4, #0
   2acf0:	sub	r0, r0, #1
   2acf4:	mul	r7, r0, r1
   2acf8:	mul	r0, r8, r1
   2acfc:	ldr	r1, [sp, #8]
   2ad00:	mul	r0, r0, r1
   2ad04:	str	r0, [sp, #4]
   2ad08:	ldr	r0, [r6]
   2ad0c:	bl	1840 <ftell@plt>
   2ad10:	cmn	r0, #1
   2ad14:	beq	2b78c <ReadDataSlab2+0xfdc>
   2ad18:	str	r0, [sp, #8]
   2ad1c:	ldr	r0, [fp, #12]
   2ad20:	ldr	r1, [sp, #16]
   2ad24:	mov	r2, #1
   2ad28:	str	r4, [sp, #12]
   2ad2c:	ldr	r0, [r0]
   2ad30:	mul	r1, r0, r1
   2ad34:	ldr	r0, [r6]
   2ad38:	bl	1a2c <fseek@plt>
   2ad3c:	ldr	r9, [fp, #20]
   2ad40:	ldr	r0, [r9]
   2ad44:	cmp	r0, #1
   2ad48:	blt	2ad88 <ReadDataSlab2+0x5d8>
   2ad4c:	mov	r8, #0
   2ad50:	mov	r0, r6
   2ad54:	mov	r1, r5
   2ad58:	mov	r2, sl
   2ad5c:	mov	r3, #1
   2ad60:	bl	8aa0 <ReadSingleData>
   2ad64:	ldr	r0, [r6]
   2ad68:	mov	r1, r7
   2ad6c:	mov	r2, #1
   2ad70:	bl	1a2c <fseek@plt>
   2ad74:	ldr	r0, [r9]
   2ad78:	add	r8, r8, #1
   2ad7c:	add	r5, r5, #4
   2ad80:	cmp	r8, r0
   2ad84:	blt	2ad50 <ReadDataSlab2+0x5a0>
   2ad88:	ldr	r0, [r6]
   2ad8c:	bl	1840 <ftell@plt>
   2ad90:	cmn	r0, #1
   2ad94:	beq	2b78c <ReadDataSlab2+0xfdc>
   2ad98:	ldmib	sp, {r1, r2}
   2ad9c:	add	r1, r2, r1
   2ada0:	mov	r2, #1
   2ada4:	sub	r1, r1, r0
   2ada8:	ldr	r0, [r6]
   2adac:	bl	1a2c <fseek@plt>
   2adb0:	ldr	r4, [sp, #12]
   2adb4:	ldr	r0, [r9, #4]
   2adb8:	mov	r9, #0
   2adbc:	add	r4, r4, #1
   2adc0:	cmp	r4, r0
   2adc4:	blt	2ad08 <ReadDataSlab2+0x558>
   2adc8:	b	2a7fc <ReadDataSlab2+0x4c>
   2adcc:	mov	r1, r0
   2add0:	ldr	r0, [r6]
   2add4:	ldr	r8, [r8, #4]
   2add8:	str	r1, [sp, #8]
   2addc:	str	r2, [sp, #12]
   2ade0:	bl	1840 <ftell@plt>
   2ade4:	cmn	r0, #1
   2ade8:	beq	2b78c <ReadDataSlab2+0xfdc>
   2adec:	ldr	r0, [fp, #12]
   2adf0:	ldr	r1, [sp, #16]
   2adf4:	mov	r2, #1
   2adf8:	ldr	r0, [r0, #4]
   2adfc:	mul	r0, r0, r1
   2ae00:	ldr	r1, [r7]
   2ae04:	mul	r1, r0, r1
   2ae08:	ldr	r0, [r6]
   2ae0c:	bl	1a2c <fseek@plt>
   2ae10:	ldr	r0, [r4, #4]
   2ae14:	cmp	r0, #1
   2ae18:	blt	2a7fc <ReadDataSlab2+0x4c>
   2ae1c:	ldr	r0, [sp, #12]
   2ae20:	ldr	r1, [sp, #16]
   2ae24:	sub	r0, r0, #1
   2ae28:	mul	r7, r0, r1
   2ae2c:	mul	r0, r8, r1
   2ae30:	ldr	r1, [sp, #8]
   2ae34:	mov	r8, #0
   2ae38:	mul	r0, r0, r1
   2ae3c:	str	r0, [sp, #8]
   2ae40:	ldr	r0, [r6]
   2ae44:	bl	1840 <ftell@plt>
   2ae48:	cmn	r0, #1
   2ae4c:	beq	2b78c <ReadDataSlab2+0xfdc>
   2ae50:	mov	r9, r0
   2ae54:	ldr	r0, [fp, #12]
   2ae58:	ldr	r1, [sp, #16]
   2ae5c:	mov	r2, #1
   2ae60:	ldr	r0, [r0]
   2ae64:	mul	r1, r0, r1
   2ae68:	ldr	r0, [r6]
   2ae6c:	bl	1a2c <fseek@plt>
   2ae70:	ldr	r4, [fp, #20]
   2ae74:	ldr	r0, [r4]
   2ae78:	cmp	r0, #1
   2ae7c:	blt	2aec4 <ReadDataSlab2+0x714>
   2ae80:	str	r8, [sp, #12]
   2ae84:	mov	r8, #0
   2ae88:	add	r1, r5, r8
   2ae8c:	mov	r0, r6
   2ae90:	mov	r2, sl
   2ae94:	mov	r3, #1
   2ae98:	bl	1c460 <ReadInt8Data>
   2ae9c:	ldr	r0, [r6]
   2aea0:	mov	r1, r7
   2aea4:	mov	r2, #1
   2aea8:	bl	1a2c <fseek@plt>
   2aeac:	ldr	r0, [r4]
   2aeb0:	add	r8, r8, #1
   2aeb4:	cmp	r8, r0
   2aeb8:	blt	2ae88 <ReadDataSlab2+0x6d8>
   2aebc:	add	r5, r5, r8
   2aec0:	ldr	r8, [sp, #12]
   2aec4:	ldr	r0, [r6]
   2aec8:	bl	1840 <ftell@plt>
   2aecc:	cmn	r0, #1
   2aed0:	beq	2b78c <ReadDataSlab2+0xfdc>
   2aed4:	ldr	r1, [sp, #8]
   2aed8:	mov	r2, #1
   2aedc:	add	r1, r9, r1
   2aee0:	sub	r1, r1, r0
   2aee4:	ldr	r0, [r6]
   2aee8:	bl	1a2c <fseek@plt>
   2aeec:	ldr	r0, [r4, #4]
   2aef0:	add	r8, r8, #1
   2aef4:	mov	r9, #0
   2aef8:	cmp	r8, r0
   2aefc:	blt	2ae40 <ReadDataSlab2+0x690>
   2af00:	b	2a7fc <ReadDataSlab2+0x4c>
   2af04:	mov	r1, r0
   2af08:	ldr	r0, [r6]
   2af0c:	ldr	r8, [r8, #4]
   2af10:	str	r1, [sp, #8]
   2af14:	str	r2, [sp, #12]
   2af18:	bl	1840 <ftell@plt>
   2af1c:	cmn	r0, #1
   2af20:	beq	2b78c <ReadDataSlab2+0xfdc>
   2af24:	ldr	r0, [fp, #12]
   2af28:	ldr	r1, [sp, #16]
   2af2c:	mov	r2, #1
   2af30:	ldr	r0, [r0, #4]
   2af34:	mul	r0, r0, r1
   2af38:	ldr	r1, [r7]
   2af3c:	mul	r1, r0, r1
   2af40:	ldr	r0, [r6]
   2af44:	bl	1a2c <fseek@plt>
   2af48:	ldr	r0, [r4, #4]
   2af4c:	cmp	r0, #1
   2af50:	blt	2a7fc <ReadDataSlab2+0x4c>
   2af54:	ldr	r0, [sp, #12]
   2af58:	ldr	r1, [sp, #16]
   2af5c:	sub	r0, r0, #1
   2af60:	mul	r7, r0, r1
   2af64:	mul	r0, r8, r1
   2af68:	ldr	r1, [sp, #8]
   2af6c:	mov	r8, #0
   2af70:	mul	r0, r0, r1
   2af74:	str	r0, [sp, #8]
   2af78:	ldr	r0, [r6]
   2af7c:	bl	1840 <ftell@plt>
   2af80:	cmn	r0, #1
   2af84:	beq	2b78c <ReadDataSlab2+0xfdc>
   2af88:	mov	r9, r0
   2af8c:	ldr	r0, [fp, #12]
   2af90:	ldr	r1, [sp, #16]
   2af94:	mov	r2, #1
   2af98:	ldr	r0, [r0]
   2af9c:	mul	r1, r0, r1
   2afa0:	ldr	r0, [r6]
   2afa4:	bl	1a2c <fseek@plt>
   2afa8:	ldr	r4, [fp, #20]
   2afac:	ldr	r0, [r4]
   2afb0:	cmp	r0, #1
   2afb4:	blt	2affc <ReadDataSlab2+0x84c>
   2afb8:	str	r8, [sp, #12]
   2afbc:	mov	r8, #0
   2afc0:	add	r1, r5, r8
   2afc4:	mov	r0, r6
   2afc8:	mov	r2, sl
   2afcc:	mov	r3, #1
   2afd0:	bl	1ed88 <ReadUInt8Data>
   2afd4:	ldr	r0, [r6]
   2afd8:	mov	r1, r7
   2afdc:	mov	r2, #1
   2afe0:	bl	1a2c <fseek@plt>
   2afe4:	ldr	r0, [r4]
   2afe8:	add	r8, r8, #1
   2afec:	cmp	r8, r0
   2aff0:	blt	2afc0 <ReadDataSlab2+0x810>
   2aff4:	add	r5, r5, r8
   2aff8:	ldr	r8, [sp, #12]
   2affc:	ldr	r0, [r6]
   2b000:	bl	1840 <ftell@plt>
   2b004:	cmn	r0, #1
   2b008:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b00c:	ldr	r1, [sp, #8]
   2b010:	mov	r2, #1
   2b014:	add	r1, r9, r1
   2b018:	sub	r1, r1, r0
   2b01c:	ldr	r0, [r6]
   2b020:	bl	1a2c <fseek@plt>
   2b024:	ldr	r0, [r4, #4]
   2b028:	add	r8, r8, #1
   2b02c:	mov	r9, #0
   2b030:	cmp	r8, r0
   2b034:	blt	2af78 <ReadDataSlab2+0x7c8>
   2b038:	b	2a7fc <ReadDataSlab2+0x4c>
   2b03c:	mov	r1, r0
   2b040:	ldr	r0, [r6]
   2b044:	ldr	r8, [r8, #4]
   2b048:	str	r1, [sp, #8]
   2b04c:	str	r2, [sp, #12]
   2b050:	bl	1840 <ftell@plt>
   2b054:	cmn	r0, #1
   2b058:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b05c:	ldr	r0, [fp, #12]
   2b060:	ldr	r1, [sp, #16]
   2b064:	mov	r2, #1
   2b068:	ldr	r0, [r0, #4]
   2b06c:	mul	r0, r0, r1
   2b070:	ldr	r1, [r7]
   2b074:	mul	r1, r0, r1
   2b078:	ldr	r0, [r6]
   2b07c:	bl	1a2c <fseek@plt>
   2b080:	ldr	r0, [r4, #4]
   2b084:	cmp	r0, #1
   2b088:	blt	2a7fc <ReadDataSlab2+0x4c>
   2b08c:	ldr	r0, [sp, #12]
   2b090:	ldr	r1, [sp, #16]
   2b094:	mov	r4, #0
   2b098:	sub	r0, r0, #1
   2b09c:	mul	r7, r0, r1
   2b0a0:	mul	r0, r8, r1
   2b0a4:	ldr	r1, [sp, #8]
   2b0a8:	mul	r0, r0, r1
   2b0ac:	str	r0, [sp, #4]
   2b0b0:	ldr	r0, [r6]
   2b0b4:	bl	1840 <ftell@plt>
   2b0b8:	cmn	r0, #1
   2b0bc:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b0c0:	str	r0, [sp, #8]
   2b0c4:	ldr	r0, [fp, #12]
   2b0c8:	ldr	r1, [sp, #16]
   2b0cc:	mov	r2, #1
   2b0d0:	str	r4, [sp, #12]
   2b0d4:	ldr	r0, [r0]
   2b0d8:	mul	r1, r0, r1
   2b0dc:	ldr	r0, [r6]
   2b0e0:	bl	1a2c <fseek@plt>
   2b0e4:	ldr	r9, [fp, #20]
   2b0e8:	ldr	r0, [r9]
   2b0ec:	cmp	r0, #1
   2b0f0:	blt	2b130 <ReadDataSlab2+0x980>
   2b0f4:	mov	r8, #0
   2b0f8:	mov	r0, r6
   2b0fc:	mov	r1, r5
   2b100:	mov	r2, sl
   2b104:	mov	r3, #1
   2b108:	bl	16fe8 <ReadInt16Data>
   2b10c:	ldr	r0, [r6]
   2b110:	mov	r1, r7
   2b114:	mov	r2, #1
   2b118:	bl	1a2c <fseek@plt>
   2b11c:	ldr	r0, [r9]
   2b120:	add	r8, r8, #1
   2b124:	add	r5, r5, #2
   2b128:	cmp	r8, r0
   2b12c:	blt	2b0f8 <ReadDataSlab2+0x948>
   2b130:	ldr	r0, [r6]
   2b134:	bl	1840 <ftell@plt>
   2b138:	cmn	r0, #1
   2b13c:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b140:	ldmib	sp, {r1, r2}
   2b144:	add	r1, r2, r1
   2b148:	mov	r2, #1
   2b14c:	sub	r1, r1, r0
   2b150:	ldr	r0, [r6]
   2b154:	bl	1a2c <fseek@plt>
   2b158:	ldr	r4, [sp, #12]
   2b15c:	ldr	r0, [r9, #4]
   2b160:	mov	r9, #0
   2b164:	add	r4, r4, #1
   2b168:	cmp	r4, r0
   2b16c:	blt	2b0b0 <ReadDataSlab2+0x900>
   2b170:	b	2a7fc <ReadDataSlab2+0x4c>
   2b174:	mov	r1, r0
   2b178:	ldr	r0, [r6]
   2b17c:	ldr	r8, [r8, #4]
   2b180:	str	r1, [sp, #8]
   2b184:	str	r2, [sp, #12]
   2b188:	bl	1840 <ftell@plt>
   2b18c:	cmn	r0, #1
   2b190:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b194:	ldr	r0, [fp, #12]
   2b198:	ldr	r1, [sp, #16]
   2b19c:	mov	r2, #1
   2b1a0:	ldr	r0, [r0, #4]
   2b1a4:	mul	r0, r0, r1
   2b1a8:	ldr	r1, [r7]
   2b1ac:	mul	r1, r0, r1
   2b1b0:	ldr	r0, [r6]
   2b1b4:	bl	1a2c <fseek@plt>
   2b1b8:	ldr	r0, [r4, #4]
   2b1bc:	cmp	r0, #1
   2b1c0:	blt	2a7fc <ReadDataSlab2+0x4c>
   2b1c4:	ldr	r0, [sp, #12]
   2b1c8:	ldr	r1, [sp, #16]
   2b1cc:	mov	r4, #0
   2b1d0:	sub	r0, r0, #1
   2b1d4:	mul	r7, r0, r1
   2b1d8:	mul	r0, r8, r1
   2b1dc:	ldr	r1, [sp, #8]
   2b1e0:	mul	r0, r0, r1
   2b1e4:	str	r0, [sp, #4]
   2b1e8:	ldr	r0, [r6]
   2b1ec:	bl	1840 <ftell@plt>
   2b1f0:	cmn	r0, #1
   2b1f4:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b1f8:	str	r0, [sp, #8]
   2b1fc:	ldr	r0, [fp, #12]
   2b200:	ldr	r1, [sp, #16]
   2b204:	mov	r2, #1
   2b208:	str	r4, [sp, #12]
   2b20c:	ldr	r0, [r0]
   2b210:	mul	r1, r0, r1
   2b214:	ldr	r0, [r6]
   2b218:	bl	1a2c <fseek@plt>
   2b21c:	ldr	r9, [fp, #20]
   2b220:	ldr	r0, [r9]
   2b224:	cmp	r0, #1
   2b228:	blt	2b268 <ReadDataSlab2+0xab8>
   2b22c:	mov	r8, #0
   2b230:	mov	r0, r6
   2b234:	mov	r1, r5
   2b238:	mov	r2, sl
   2b23c:	mov	r3, #1
   2b240:	bl	19a24 <ReadUInt16Data>
   2b244:	ldr	r0, [r6]
   2b248:	mov	r1, r7
   2b24c:	mov	r2, #1
   2b250:	bl	1a2c <fseek@plt>
   2b254:	ldr	r0, [r9]
   2b258:	add	r8, r8, #1
   2b25c:	add	r5, r5, #2
   2b260:	cmp	r8, r0
   2b264:	blt	2b230 <ReadDataSlab2+0xa80>
   2b268:	ldr	r0, [r6]
   2b26c:	bl	1840 <ftell@plt>
   2b270:	cmn	r0, #1
   2b274:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b278:	ldmib	sp, {r1, r2}
   2b27c:	add	r1, r2, r1
   2b280:	mov	r2, #1
   2b284:	sub	r1, r1, r0
   2b288:	ldr	r0, [r6]
   2b28c:	bl	1a2c <fseek@plt>
   2b290:	ldr	r4, [sp, #12]
   2b294:	ldr	r0, [r9, #4]
   2b298:	mov	r9, #0
   2b29c:	add	r4, r4, #1
   2b2a0:	cmp	r4, r0
   2b2a4:	blt	2b1e8 <ReadDataSlab2+0xa38>
   2b2a8:	b	2a7fc <ReadDataSlab2+0x4c>
   2b2ac:	mov	r1, r0
   2b2b0:	ldr	r0, [r6]
   2b2b4:	ldr	r8, [r8, #4]
   2b2b8:	str	r1, [sp, #8]
   2b2bc:	str	r2, [sp, #12]
   2b2c0:	bl	1840 <ftell@plt>
   2b2c4:	cmn	r0, #1
   2b2c8:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b2cc:	ldr	r0, [fp, #12]
   2b2d0:	ldr	r1, [sp, #16]
   2b2d4:	mov	r2, #1
   2b2d8:	ldr	r0, [r0, #4]
   2b2dc:	mul	r0, r0, r1
   2b2e0:	ldr	r1, [r7]
   2b2e4:	mul	r1, r0, r1
   2b2e8:	ldr	r0, [r6]
   2b2ec:	bl	1a2c <fseek@plt>
   2b2f0:	ldr	r0, [r4, #4]
   2b2f4:	cmp	r0, #1
   2b2f8:	blt	2a7fc <ReadDataSlab2+0x4c>
   2b2fc:	ldr	r0, [sp, #12]
   2b300:	ldr	r1, [sp, #16]
   2b304:	sub	r0, r0, #1
   2b308:	mul	r7, r0, r1
   2b30c:	mul	r0, r8, r1
   2b310:	ldr	r1, [sp, #8]
   2b314:	mov	r8, #0
   2b318:	mul	r0, r0, r1
   2b31c:	str	r0, [sp, #8]
   2b320:	ldr	r0, [r6]
   2b324:	bl	1840 <ftell@plt>
   2b328:	cmn	r0, #1
   2b32c:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b330:	mov	r9, r0
   2b334:	ldr	r0, [fp, #12]
   2b338:	ldr	r1, [sp, #16]
   2b33c:	mov	r2, #1
   2b340:	ldr	r0, [r0]
   2b344:	mul	r1, r0, r1
   2b348:	ldr	r0, [r6]
   2b34c:	bl	1a2c <fseek@plt>
   2b350:	ldr	r4, [fp, #20]
   2b354:	str	r8, [sp, #12]
   2b358:	ldr	r0, [r4]
   2b35c:	cmp	r0, #1
   2b360:	blt	2b3a0 <ReadDataSlab2+0xbf0>
   2b364:	mov	r8, #0
   2b368:	mov	r0, r6
   2b36c:	mov	r1, r5
   2b370:	mov	r2, sl
   2b374:	mov	r3, #1
   2b378:	bl	11690 <ReadInt32Data>
   2b37c:	ldr	r0, [r6]
   2b380:	mov	r1, r7
   2b384:	mov	r2, #1
   2b388:	bl	1a2c <fseek@plt>
   2b38c:	ldr	r0, [r4]
   2b390:	add	r8, r8, #1
   2b394:	add	r5, r5, #4
   2b398:	cmp	r8, r0
   2b39c:	blt	2b368 <ReadDataSlab2+0xbb8>
   2b3a0:	ldr	r0, [r6]
   2b3a4:	bl	1840 <ftell@plt>
   2b3a8:	cmn	r0, #1
   2b3ac:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b3b0:	ldr	r1, [sp, #8]
   2b3b4:	mov	r2, #1
   2b3b8:	add	r1, r9, r1
   2b3bc:	sub	r1, r1, r0
   2b3c0:	ldr	r0, [r6]
   2b3c4:	bl	1a2c <fseek@plt>
   2b3c8:	ldr	r8, [sp, #12]
   2b3cc:	ldr	r0, [r4, #4]
   2b3d0:	mov	r9, #0
   2b3d4:	add	r8, r8, #1
   2b3d8:	cmp	r8, r0
   2b3dc:	blt	2b320 <ReadDataSlab2+0xb70>
   2b3e0:	b	2a7fc <ReadDataSlab2+0x4c>
   2b3e4:	mov	r1, r0
   2b3e8:	ldr	r0, [r6]
   2b3ec:	ldr	r8, [r8, #4]
   2b3f0:	str	r1, [sp, #8]
   2b3f4:	str	r2, [sp, #12]
   2b3f8:	bl	1840 <ftell@plt>
   2b3fc:	cmn	r0, #1
   2b400:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b404:	ldr	r0, [fp, #12]
   2b408:	ldr	r1, [sp, #16]
   2b40c:	mov	r2, #1
   2b410:	ldr	r0, [r0, #4]
   2b414:	mul	r0, r0, r1
   2b418:	ldr	r1, [r7]
   2b41c:	mul	r1, r0, r1
   2b420:	ldr	r0, [r6]
   2b424:	bl	1a2c <fseek@plt>
   2b428:	ldr	r0, [r4, #4]
   2b42c:	cmp	r0, #1
   2b430:	blt	2a7fc <ReadDataSlab2+0x4c>
   2b434:	ldr	r0, [sp, #12]
   2b438:	ldr	r1, [sp, #16]
   2b43c:	mov	r4, #0
   2b440:	sub	r0, r0, #1
   2b444:	mul	r7, r0, r1
   2b448:	mul	r0, r8, r1
   2b44c:	ldr	r1, [sp, #8]
   2b450:	mul	r0, r0, r1
   2b454:	str	r0, [sp, #4]
   2b458:	ldr	r0, [r6]
   2b45c:	bl	1840 <ftell@plt>
   2b460:	cmn	r0, #1
   2b464:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b468:	str	r0, [sp, #8]
   2b46c:	ldr	r0, [fp, #12]
   2b470:	ldr	r1, [sp, #16]
   2b474:	mov	r2, #1
   2b478:	str	r4, [sp, #12]
   2b47c:	ldr	r0, [r0]
   2b480:	mul	r1, r0, r1
   2b484:	ldr	r0, [r6]
   2b488:	bl	1a2c <fseek@plt>
   2b48c:	ldr	r9, [fp, #20]
   2b490:	ldr	r0, [r9]
   2b494:	cmp	r0, #1
   2b498:	blt	2b4d8 <ReadDataSlab2+0xd28>
   2b49c:	mov	r8, #0
   2b4a0:	mov	r0, r6
   2b4a4:	mov	r1, r5
   2b4a8:	mov	r2, sl
   2b4ac:	mov	r3, #1
   2b4b0:	bl	1433c <ReadUInt32Data>
   2b4b4:	ldr	r0, [r6]
   2b4b8:	mov	r1, r7
   2b4bc:	mov	r2, #1
   2b4c0:	bl	1a2c <fseek@plt>
   2b4c4:	ldr	r0, [r9]
   2b4c8:	add	r8, r8, #1
   2b4cc:	add	r5, r5, #4
   2b4d0:	cmp	r8, r0
   2b4d4:	blt	2b4a0 <ReadDataSlab2+0xcf0>
   2b4d8:	ldr	r0, [r6]
   2b4dc:	bl	1840 <ftell@plt>
   2b4e0:	cmn	r0, #1
   2b4e4:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b4e8:	ldmib	sp, {r1, r2}
   2b4ec:	add	r1, r2, r1
   2b4f0:	mov	r2, #1
   2b4f4:	sub	r1, r1, r0
   2b4f8:	ldr	r0, [r6]
   2b4fc:	bl	1a2c <fseek@plt>
   2b500:	ldr	r4, [sp, #12]
   2b504:	ldr	r0, [r9, #4]
   2b508:	mov	r9, #0
   2b50c:	add	r4, r4, #1
   2b510:	cmp	r4, r0
   2b514:	blt	2b458 <ReadDataSlab2+0xca8>
   2b518:	b	2a7fc <ReadDataSlab2+0x4c>
   2b51c:	mov	r1, r0
   2b520:	ldr	r0, [r6]
   2b524:	ldr	r8, [r8, #4]
   2b528:	str	r1, [sp, #8]
   2b52c:	str	r2, [sp, #12]
   2b530:	bl	1840 <ftell@plt>
   2b534:	cmn	r0, #1
   2b538:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b53c:	ldr	r0, [fp, #12]
   2b540:	ldr	r1, [sp, #16]
   2b544:	mov	r2, #1
   2b548:	ldr	r0, [r0, #4]
   2b54c:	mul	r0, r0, r1
   2b550:	ldr	r1, [r7]
   2b554:	mul	r1, r0, r1
   2b558:	ldr	r0, [r6]
   2b55c:	bl	1a2c <fseek@plt>
   2b560:	ldr	r0, [r4, #4]
   2b564:	cmp	r0, #1
   2b568:	blt	2a7fc <ReadDataSlab2+0x4c>
   2b56c:	ldr	r0, [sp, #12]
   2b570:	ldr	r1, [sp, #16]
   2b574:	mov	r4, #0
   2b578:	sub	r0, r0, #1
   2b57c:	mul	r7, r0, r1
   2b580:	mul	r0, r8, r1
   2b584:	ldr	r1, [sp, #8]
   2b588:	mul	r0, r0, r1
   2b58c:	str	r0, [sp, #4]
   2b590:	ldr	r0, [r6]
   2b594:	bl	1840 <ftell@plt>
   2b598:	cmn	r0, #1
   2b59c:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b5a0:	str	r0, [sp, #8]
   2b5a4:	ldr	r0, [fp, #12]
   2b5a8:	ldr	r1, [sp, #16]
   2b5ac:	mov	r2, #1
   2b5b0:	str	r4, [sp, #12]
   2b5b4:	ldr	r0, [r0]
   2b5b8:	mul	r1, r0, r1
   2b5bc:	ldr	r0, [r6]
   2b5c0:	bl	1a2c <fseek@plt>
   2b5c4:	ldr	r9, [fp, #20]
   2b5c8:	ldr	r0, [r9]
   2b5cc:	cmp	r0, #1
   2b5d0:	blt	2b610 <ReadDataSlab2+0xe60>
   2b5d4:	mov	r8, #0
   2b5d8:	mov	r0, r6
   2b5dc:	mov	r1, r5
   2b5e0:	mov	r2, sl
   2b5e4:	mov	r3, #1
   2b5e8:	bl	e960 <ReadUInt64Data>
   2b5ec:	ldr	r0, [r6]
   2b5f0:	mov	r1, r7
   2b5f4:	mov	r2, #1
   2b5f8:	bl	1a2c <fseek@plt>
   2b5fc:	ldr	r0, [r9]
   2b600:	add	r8, r8, #1
   2b604:	add	r5, r5, #8
   2b608:	cmp	r8, r0
   2b60c:	blt	2b5d8 <ReadDataSlab2+0xe28>
   2b610:	ldr	r0, [r6]
   2b614:	bl	1840 <ftell@plt>
   2b618:	cmn	r0, #1
   2b61c:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b620:	ldmib	sp, {r1, r2}
   2b624:	add	r1, r2, r1
   2b628:	mov	r2, #1
   2b62c:	sub	r1, r1, r0
   2b630:	ldr	r0, [r6]
   2b634:	bl	1a2c <fseek@plt>
   2b638:	ldr	r4, [sp, #12]
   2b63c:	ldr	r0, [r9, #4]
   2b640:	mov	r9, #0
   2b644:	add	r4, r4, #1
   2b648:	cmp	r4, r0
   2b64c:	blt	2b590 <ReadDataSlab2+0xde0>
   2b650:	b	2a7fc <ReadDataSlab2+0x4c>
   2b654:	mov	r1, r0
   2b658:	ldr	r0, [r6]
   2b65c:	ldr	r8, [r8, #4]
   2b660:	str	r1, [sp, #8]
   2b664:	str	r2, [sp, #12]
   2b668:	bl	1840 <ftell@plt>
   2b66c:	cmn	r0, #1
   2b670:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b674:	ldr	r0, [fp, #12]
   2b678:	ldr	r1, [sp, #16]
   2b67c:	mov	r2, #1
   2b680:	ldr	r0, [r0, #4]
   2b684:	mul	r0, r0, r1
   2b688:	ldr	r1, [r7]
   2b68c:	mul	r1, r0, r1
   2b690:	ldr	r0, [r6]
   2b694:	bl	1a2c <fseek@plt>
   2b698:	ldr	r0, [r4, #4]
   2b69c:	cmp	r0, #1
   2b6a0:	blt	2a7fc <ReadDataSlab2+0x4c>
   2b6a4:	ldr	r0, [sp, #12]
   2b6a8:	ldr	r1, [sp, #16]
   2b6ac:	sub	r0, r0, #1
   2b6b0:	mul	r7, r0, r1
   2b6b4:	mul	r0, r8, r1
   2b6b8:	ldr	r1, [sp, #8]
   2b6bc:	mov	r8, #0
   2b6c0:	mul	r0, r0, r1
   2b6c4:	str	r0, [sp, #8]
   2b6c8:	ldr	r0, [r6]
   2b6cc:	bl	1840 <ftell@plt>
   2b6d0:	cmn	r0, #1
   2b6d4:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b6d8:	mov	r9, r0
   2b6dc:	ldr	r0, [fp, #12]
   2b6e0:	ldr	r1, [sp, #16]
   2b6e4:	mov	r2, #1
   2b6e8:	ldr	r0, [r0]
   2b6ec:	mul	r1, r0, r1
   2b6f0:	ldr	r0, [r6]
   2b6f4:	bl	1a2c <fseek@plt>
   2b6f8:	ldr	r4, [fp, #20]
   2b6fc:	str	r8, [sp, #12]
   2b700:	ldr	r0, [r4]
   2b704:	cmp	r0, #1
   2b708:	blt	2b748 <ReadDataSlab2+0xf98>
   2b70c:	mov	r8, #0
   2b710:	mov	r0, r6
   2b714:	mov	r1, r5
   2b718:	mov	r2, sl
   2b71c:	mov	r3, #1
   2b720:	bl	bc30 <ReadInt64Data>
   2b724:	ldr	r0, [r6]
   2b728:	mov	r1, r7
   2b72c:	mov	r2, #1
   2b730:	bl	1a2c <fseek@plt>
   2b734:	ldr	r0, [r4]
   2b738:	add	r8, r8, #1
   2b73c:	add	r5, r5, #8
   2b740:	cmp	r8, r0
   2b744:	blt	2b710 <ReadDataSlab2+0xf60>
   2b748:	ldr	r0, [r6]
   2b74c:	bl	1840 <ftell@plt>
   2b750:	cmn	r0, #1
   2b754:	beq	2b78c <ReadDataSlab2+0xfdc>
   2b758:	ldr	r1, [sp, #8]
   2b75c:	mov	r2, #1
   2b760:	add	r1, r9, r1
   2b764:	sub	r1, r1, r0
   2b768:	ldr	r0, [r6]
   2b76c:	bl	1a2c <fseek@plt>
   2b770:	ldr	r8, [sp, #12]
   2b774:	ldr	r0, [r4, #4]
   2b778:	mov	r9, #0
   2b77c:	add	r8, r8, #1
   2b780:	cmp	r8, r0
   2b784:	blt	2b6c8 <ReadDataSlab2+0xf18>
   2b788:	b	2a7fc <ReadDataSlab2+0x4c>
   2b78c:	ldr	r0, [pc, #12]	; 2b7a0 <ReadDataSlab2+0xff0>
   2b790:	add	r0, pc, r0
   2b794:	bl	19b4 <Mat_Critical@plt>
   2b798:	mvn	r9, #0
   2b79c:	b	2a7fc <ReadDataSlab2+0x4c>
   2b7a0:	.word	0x000405fc

0002b7a4 <ReadCompressedDataSlab1>:
   2b7a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b7a8:	add	fp, sp, #28
   2b7ac:	sub	sp, sp, #68	; 0x44
   2b7b0:	vmov.i32	q8, #0	; 0x00000000
   2b7b4:	mov	r4, r2
   2b7b8:	add	r2, sp, #8
   2b7bc:	mov	r6, r0
   2b7c0:	mov	r5, r3
   2b7c4:	mov	r0, #52	; 0x34
   2b7c8:	mov	r7, #0
   2b7cc:	mov	r3, r2
   2b7d0:	cmp	r6, #0
   2b7d4:	str	r7, [sp, #56]	; 0x38
   2b7d8:	cmpne	r4, #0
   2b7dc:	vst1.64	{d16-d17}, [r3], r0
   2b7e0:	add	r0, r2, #32
   2b7e4:	vst1.64	{d16-d17}, [r0]
   2b7e8:	add	r0, r2, #16
   2b7ec:	str	r7, [r3]
   2b7f0:	vst1.64	{d16-d17}, [r0]
   2b7f4:	bne	2b804 <ReadCompressedDataSlab1+0x60>
   2b7f8:	mov	r0, r7
   2b7fc:	sub	sp, fp, #28
   2b800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b804:	ldr	r0, [r6]
   2b808:	cmp	r0, #0
   2b80c:	beq	2b7f8 <ReadCompressedDataSlab1+0x54>
   2b810:	ldr	r9, [fp, #12]
   2b814:	ldr	r8, [fp, #8]
   2b818:	add	r7, sp, #8
   2b81c:	mov	r0, r7
   2b820:	bl	1948 <inflateCopy@plt>
   2b824:	mov	r0, r6
   2b828:	mov	r1, r7
   2b82c:	mov	r2, r8
   2b830:	mov	r3, r9
   2b834:	bl	26ec <InflateSkipData>
   2b838:	sub	r0, r5, #6
   2b83c:	mov	r7, #0
   2b840:	cmp	r0, #9
   2b844:	bhi	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b848:	ldr	r1, [fp, #16]
   2b84c:	mov	r9, r8
   2b850:	ldr	r8, [fp, #20]
   2b854:	sub	r1, r1, #1
   2b858:	str	r1, [sp, #4]
   2b85c:	add	r1, pc, #4
   2b860:	ldr	r0, [r1, r0, lsl #2]
   2b864:	add	pc, r1, r0
   2b868:	.word	0x00000028
   2b86c:	.word	0x0000008c
   2b870:	.word	0x000000f0
   2b874:	.word	0x00000154
   2b878:	.word	0x000001b8
   2b87c:	.word	0x0000021c
   2b880:	.word	0x00000280
   2b884:	.word	0x000002e4
   2b888:	.word	0x00000348
   2b88c:	.word	0x000003ac
   2b890:	ldr	r0, [sp, #4]
   2b894:	cmp	r0, #0
   2b898:	beq	2bc78 <ReadCompressedDataSlab1+0x4d4>
   2b89c:	cmp	r8, #1
   2b8a0:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b8a4:	mov	r7, #0
   2b8a8:	add	sl, sp, #8
   2b8ac:	mov	r0, #1
   2b8b0:	mov	r1, sl
   2b8b4:	mov	r2, r4
   2b8b8:	mov	r3, r9
   2b8bc:	str	r0, [sp]
   2b8c0:	mov	r0, r6
   2b8c4:	bl	6348 <ReadCompressedDoubleData>
   2b8c8:	ldr	r3, [sp, #4]
   2b8cc:	mov	r5, r0
   2b8d0:	mov	r0, r6
   2b8d4:	mov	r1, sl
   2b8d8:	mov	r2, r9
   2b8dc:	bl	26ec <InflateSkipData>
   2b8e0:	add	r7, r5, r7
   2b8e4:	add	r4, r4, #8
   2b8e8:	subs	r8, r8, #1
   2b8ec:	bne	2b8ac <ReadCompressedDataSlab1+0x108>
   2b8f0:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b8f4:	ldr	r0, [sp, #4]
   2b8f8:	cmp	r0, #0
   2b8fc:	beq	2bc94 <ReadCompressedDataSlab1+0x4f0>
   2b900:	cmp	r8, #1
   2b904:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b908:	mov	r7, #0
   2b90c:	add	sl, sp, #8
   2b910:	mov	r0, #1
   2b914:	mov	r1, sl
   2b918:	mov	r2, r4
   2b91c:	mov	r3, r9
   2b920:	str	r0, [sp]
   2b924:	mov	r0, r6
   2b928:	bl	b6c0 <ReadCompressedSingleData>
   2b92c:	ldr	r3, [sp, #4]
   2b930:	mov	r5, r0
   2b934:	mov	r0, r6
   2b938:	mov	r1, sl
   2b93c:	mov	r2, r9
   2b940:	bl	26ec <InflateSkipData>
   2b944:	add	r7, r5, r7
   2b948:	add	r4, r4, #4
   2b94c:	subs	r8, r8, #1
   2b950:	bne	2b910 <ReadCompressedDataSlab1+0x16c>
   2b954:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b958:	ldr	r0, [sp, #4]
   2b95c:	cmp	r0, #0
   2b960:	beq	2bcb0 <ReadCompressedDataSlab1+0x50c>
   2b964:	cmp	r8, #1
   2b968:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b96c:	mov	r7, #0
   2b970:	mov	r0, #1
   2b974:	add	sl, sp, #8
   2b978:	mov	r2, r4
   2b97c:	mov	r3, r9
   2b980:	str	r0, [sp]
   2b984:	mov	r0, r6
   2b988:	mov	r1, sl
   2b98c:	bl	1e858 <ReadCompressedInt8Data>
   2b990:	ldr	r3, [sp, #4]
   2b994:	mov	r5, r0
   2b998:	mov	r0, r6
   2b99c:	mov	r1, sl
   2b9a0:	mov	r2, r9
   2b9a4:	bl	26ec <InflateSkipData>
   2b9a8:	add	r7, r5, r7
   2b9ac:	add	r4, r4, #1
   2b9b0:	subs	r8, r8, #1
   2b9b4:	bne	2b970 <ReadCompressedDataSlab1+0x1cc>
   2b9b8:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b9bc:	ldr	r0, [sp, #4]
   2b9c0:	cmp	r0, #0
   2b9c4:	beq	2bccc <ReadCompressedDataSlab1+0x528>
   2b9c8:	cmp	r8, #1
   2b9cc:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2b9d0:	mov	r7, #0
   2b9d4:	mov	r0, #1
   2b9d8:	add	sl, sp, #8
   2b9dc:	mov	r2, r4
   2b9e0:	mov	r3, r9
   2b9e4:	str	r0, [sp]
   2b9e8:	mov	r0, r6
   2b9ec:	mov	r1, sl
   2b9f0:	bl	21180 <ReadCompressedUInt8Data>
   2b9f4:	ldr	r3, [sp, #4]
   2b9f8:	mov	r5, r0
   2b9fc:	mov	r0, r6
   2ba00:	mov	r1, sl
   2ba04:	mov	r2, r9
   2ba08:	bl	26ec <InflateSkipData>
   2ba0c:	add	r7, r5, r7
   2ba10:	add	r4, r4, #1
   2ba14:	subs	r8, r8, #1
   2ba18:	bne	2b9d4 <ReadCompressedDataSlab1+0x230>
   2ba1c:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2ba20:	ldr	r0, [sp, #4]
   2ba24:	cmp	r0, #0
   2ba28:	beq	2bce8 <ReadCompressedDataSlab1+0x544>
   2ba2c:	cmp	r8, #1
   2ba30:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2ba34:	mov	r7, #0
   2ba38:	add	sl, sp, #8
   2ba3c:	mov	r0, #1
   2ba40:	mov	r1, sl
   2ba44:	mov	r2, r4
   2ba48:	mov	r3, r9
   2ba4c:	str	r0, [sp]
   2ba50:	mov	r0, r6
   2ba54:	bl	194f4 <ReadCompressedInt16Data>
   2ba58:	ldr	r3, [sp, #4]
   2ba5c:	mov	r5, r0
   2ba60:	mov	r0, r6
   2ba64:	mov	r1, sl
   2ba68:	mov	r2, r9
   2ba6c:	bl	26ec <InflateSkipData>
   2ba70:	add	r7, r5, r7
   2ba74:	add	r4, r4, #2
   2ba78:	subs	r8, r8, #1
   2ba7c:	bne	2ba3c <ReadCompressedDataSlab1+0x298>
   2ba80:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2ba84:	ldr	r0, [sp, #4]
   2ba88:	cmp	r0, #0
   2ba8c:	beq	2bd04 <ReadCompressedDataSlab1+0x560>
   2ba90:	cmp	r8, #1
   2ba94:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2ba98:	mov	r7, #0
   2ba9c:	add	sl, sp, #8
   2baa0:	mov	r0, #1
   2baa4:	mov	r1, sl
   2baa8:	mov	r2, r4
   2baac:	mov	r3, r9
   2bab0:	str	r0, [sp]
   2bab4:	mov	r0, r6
   2bab8:	bl	1bf30 <ReadCompressedUInt16Data>
   2babc:	ldr	r3, [sp, #4]
   2bac0:	mov	r5, r0
   2bac4:	mov	r0, r6
   2bac8:	mov	r1, sl
   2bacc:	mov	r2, r9
   2bad0:	bl	26ec <InflateSkipData>
   2bad4:	add	r7, r5, r7
   2bad8:	add	r4, r4, #2
   2badc:	subs	r8, r8, #1
   2bae0:	bne	2baa0 <ReadCompressedDataSlab1+0x2fc>
   2bae4:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bae8:	ldr	r0, [sp, #4]
   2baec:	cmp	r0, #0
   2baf0:	beq	2bd20 <ReadCompressedDataSlab1+0x57c>
   2baf4:	cmp	r8, #1
   2baf8:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bafc:	mov	r7, #0
   2bb00:	add	sl, sp, #8
   2bb04:	mov	r0, #1
   2bb08:	mov	r1, sl
   2bb0c:	mov	r2, r4
   2bb10:	mov	r3, r9
   2bb14:	str	r0, [sp]
   2bb18:	mov	r0, r6
   2bb1c:	bl	13e0c <ReadCompressedInt32Data>
   2bb20:	ldr	r3, [sp, #4]
   2bb24:	mov	r5, r0
   2bb28:	mov	r0, r6
   2bb2c:	mov	r1, sl
   2bb30:	mov	r2, r9
   2bb34:	bl	26ec <InflateSkipData>
   2bb38:	add	r7, r5, r7
   2bb3c:	add	r4, r4, #4
   2bb40:	subs	r8, r8, #1
   2bb44:	bne	2bb04 <ReadCompressedDataSlab1+0x360>
   2bb48:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bb4c:	ldr	r0, [sp, #4]
   2bb50:	cmp	r0, #0
   2bb54:	beq	2bd3c <ReadCompressedDataSlab1+0x598>
   2bb58:	cmp	r8, #1
   2bb5c:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bb60:	mov	r7, #0
   2bb64:	add	sl, sp, #8
   2bb68:	mov	r0, #1
   2bb6c:	mov	r1, sl
   2bb70:	mov	r2, r4
   2bb74:	mov	r3, r9
   2bb78:	str	r0, [sp]
   2bb7c:	mov	r0, r6
   2bb80:	bl	16ab8 <ReadCompressedUInt32Data>
   2bb84:	ldr	r3, [sp, #4]
   2bb88:	mov	r5, r0
   2bb8c:	mov	r0, r6
   2bb90:	mov	r1, sl
   2bb94:	mov	r2, r9
   2bb98:	bl	26ec <InflateSkipData>
   2bb9c:	add	r7, r5, r7
   2bba0:	add	r4, r4, #4
   2bba4:	subs	r8, r8, #1
   2bba8:	bne	2bb68 <ReadCompressedDataSlab1+0x3c4>
   2bbac:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bbb0:	ldr	r0, [sp, #4]
   2bbb4:	cmp	r0, #0
   2bbb8:	beq	2bd74 <ReadCompressedDataSlab1+0x5d0>
   2bbbc:	cmp	r8, #1
   2bbc0:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bbc4:	mov	r7, #0
   2bbc8:	add	sl, sp, #8
   2bbcc:	mov	r0, #1
   2bbd0:	mov	r1, sl
   2bbd4:	mov	r2, r4
   2bbd8:	mov	r3, r9
   2bbdc:	str	r0, [sp]
   2bbe0:	mov	r0, r6
   2bbe4:	bl	e3c0 <ReadCompressedInt64Data>
   2bbe8:	ldr	r3, [sp, #4]
   2bbec:	mov	r5, r0
   2bbf0:	mov	r0, r6
   2bbf4:	mov	r1, sl
   2bbf8:	mov	r2, r9
   2bbfc:	bl	26ec <InflateSkipData>
   2bc00:	add	r7, r5, r7
   2bc04:	add	r4, r4, #8
   2bc08:	subs	r8, r8, #1
   2bc0c:	bne	2bbcc <ReadCompressedDataSlab1+0x428>
   2bc10:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bc14:	ldr	r0, [sp, #4]
   2bc18:	cmp	r0, #0
   2bc1c:	beq	2bd58 <ReadCompressedDataSlab1+0x5b4>
   2bc20:	cmp	r8, #1
   2bc24:	blt	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bc28:	mov	r7, #0
   2bc2c:	add	sl, sp, #8
   2bc30:	mov	r0, #1
   2bc34:	mov	r1, sl
   2bc38:	mov	r2, r4
   2bc3c:	mov	r3, r9
   2bc40:	str	r0, [sp]
   2bc44:	mov	r0, r6
   2bc48:	bl	110f0 <ReadCompressedUInt64Data>
   2bc4c:	ldr	r3, [sp, #4]
   2bc50:	mov	r5, r0
   2bc54:	mov	r0, r6
   2bc58:	mov	r1, sl
   2bc5c:	mov	r2, r9
   2bc60:	bl	26ec <InflateSkipData>
   2bc64:	add	r7, r5, r7
   2bc68:	add	r4, r4, #8
   2bc6c:	subs	r8, r8, #1
   2bc70:	bne	2bc30 <ReadCompressedDataSlab1+0x48c>
   2bc74:	b	2bd90 <ReadCompressedDataSlab1+0x5ec>
   2bc78:	add	r1, sp, #8
   2bc7c:	mov	r0, r6
   2bc80:	mov	r2, r4
   2bc84:	mov	r3, r9
   2bc88:	str	r8, [sp]
   2bc8c:	bl	6348 <ReadCompressedDoubleData>
   2bc90:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bc94:	add	r1, sp, #8
   2bc98:	mov	r0, r6
   2bc9c:	mov	r2, r4
   2bca0:	mov	r3, r9
   2bca4:	str	r8, [sp]
   2bca8:	bl	b6c0 <ReadCompressedSingleData>
   2bcac:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bcb0:	add	r1, sp, #8
   2bcb4:	mov	r0, r6
   2bcb8:	mov	r2, r4
   2bcbc:	mov	r3, r9
   2bcc0:	str	r8, [sp]
   2bcc4:	bl	1e858 <ReadCompressedInt8Data>
   2bcc8:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bccc:	add	r1, sp, #8
   2bcd0:	mov	r0, r6
   2bcd4:	mov	r2, r4
   2bcd8:	mov	r3, r9
   2bcdc:	str	r8, [sp]
   2bce0:	bl	21180 <ReadCompressedUInt8Data>
   2bce4:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bce8:	add	r1, sp, #8
   2bcec:	mov	r0, r6
   2bcf0:	mov	r2, r4
   2bcf4:	mov	r3, r9
   2bcf8:	str	r8, [sp]
   2bcfc:	bl	194f4 <ReadCompressedInt16Data>
   2bd00:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bd04:	add	r1, sp, #8
   2bd08:	mov	r0, r6
   2bd0c:	mov	r2, r4
   2bd10:	mov	r3, r9
   2bd14:	str	r8, [sp]
   2bd18:	bl	1bf30 <ReadCompressedUInt16Data>
   2bd1c:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bd20:	add	r1, sp, #8
   2bd24:	mov	r0, r6
   2bd28:	mov	r2, r4
   2bd2c:	mov	r3, r9
   2bd30:	str	r8, [sp]
   2bd34:	bl	13e0c <ReadCompressedInt32Data>
   2bd38:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bd3c:	add	r1, sp, #8
   2bd40:	mov	r0, r6
   2bd44:	mov	r2, r4
   2bd48:	mov	r3, r9
   2bd4c:	str	r8, [sp]
   2bd50:	bl	16ab8 <ReadCompressedUInt32Data>
   2bd54:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bd58:	add	r1, sp, #8
   2bd5c:	mov	r0, r6
   2bd60:	mov	r2, r4
   2bd64:	mov	r3, r9
   2bd68:	str	r8, [sp]
   2bd6c:	bl	110f0 <ReadCompressedUInt64Data>
   2bd70:	b	2bd8c <ReadCompressedDataSlab1+0x5e8>
   2bd74:	add	r1, sp, #8
   2bd78:	mov	r0, r6
   2bd7c:	mov	r2, r4
   2bd80:	mov	r3, r9
   2bd84:	str	r8, [sp]
   2bd88:	bl	e3c0 <ReadCompressedInt64Data>
   2bd8c:	mov	r7, r0
   2bd90:	add	r0, sp, #8
   2bd94:	bl	193c <inflateEnd@plt>
   2bd98:	b	2b7f8 <ReadCompressedDataSlab1+0x54>

0002bd9c <ReadCompressedDataSlab2>:
   2bd9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bda0:	add	fp, sp, #28
   2bda4:	sub	sp, sp, #84	; 0x54
   2bda8:	vmov.i32	q8, #0	; 0x00000000
   2bdac:	mov	r4, r2
   2bdb0:	add	r2, sp, #24
   2bdb4:	mov	r5, r0
   2bdb8:	mov	r6, r3
   2bdbc:	mov	r0, #52	; 0x34
   2bdc0:	mov	r3, r2
   2bdc4:	cmp	r5, #0
   2bdc8:	cmpne	r4, #0
   2bdcc:	vst1.64	{d16-d17}, [r3], r0
   2bdd0:	mov	r0, #0
   2bdd4:	str	r0, [r3]
   2bdd8:	add	r3, r2, #32
   2bddc:	add	r2, r2, #16
   2bde0:	str	r0, [sp, #72]	; 0x48
   2bde4:	vst1.64	{d16-d17}, [r3]
   2bde8:	vst1.64	{d16-d17}, [r2]
   2bdec:	beq	2d840 <ReadCompressedDataSlab2+0x1aa4>
   2bdf0:	ldr	r7, [fp, #24]
   2bdf4:	cmp	r7, #0
   2bdf8:	ldrne	r0, [fp, #20]
   2bdfc:	cmpne	r0, #0
   2be00:	beq	2d840 <ReadCompressedDataSlab2+0x1aa4>
   2be04:	ldr	r0, [fp, #16]
   2be08:	cmp	r0, #0
   2be0c:	ldrne	r0, [r5]
   2be10:	cmpne	r0, #0
   2be14:	beq	2d840 <ReadCompressedDataSlab2+0x1aa4>
   2be18:	add	r0, sp, #24
   2be1c:	bl	1948 <inflateCopy@plt>
   2be20:	sub	r0, r6, #6
   2be24:	cmp	r0, #9
   2be28:	bhi	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2be2c:	str	r5, [sp, #20]
   2be30:	add	r1, pc, #16
   2be34:	ldr	r2, [fp, #12]
   2be38:	ldr	r8, [fp, #8]
   2be3c:	mov	sl, r7
   2be40:	ldr	r0, [r1, r0, lsl #2]
   2be44:	add	pc, r1, r0
   2be48:	.word	0x00000028
   2be4c:	.word	0x000000b8
   2be50:	.word	0x00000148
   2be54:	.word	0x000001d8
   2be58:	.word	0x00000268
   2be5c:	.word	0x000002f8
   2be60:	.word	0x00000388
   2be64:	.word	0x00000418
   2be68:	.word	0x00000538
   2be6c:	.word	0x000004a8
   2be70:	ldr	r0, [fp, #16]
   2be74:	ldr	r7, [r2]
   2be78:	ldr	r9, [fp, #20]
   2be7c:	ldr	r5, [sp, #20]
   2be80:	add	r1, sp, #24
   2be84:	mov	r2, r8
   2be88:	ldr	r0, [r0, #4]
   2be8c:	ldr	r6, [r9, #4]
   2be90:	mul	r3, r0, r7
   2be94:	ldr	r0, [r9]
   2be98:	str	r0, [sp, #12]
   2be9c:	mov	r0, r5
   2bea0:	bl	26ec <InflateSkipData>
   2bea4:	sub	r0, r6, #1
   2bea8:	mul	r3, r0, r7
   2beac:	ldr	r0, [r9]
   2beb0:	cmp	r0, #1
   2beb4:	bne	2c410 <ReadCompressedDataSlab2+0x674>
   2beb8:	ldr	r2, [fp, #12]
   2bebc:	ldr	r0, [sl]
   2bec0:	ldr	r1, [r2]
   2bec4:	cmp	r0, r1
   2bec8:	bne	2d0e4 <ReadCompressedDataSlab2+0x1348>
   2becc:	ldr	r1, [fp, #20]
   2bed0:	ldr	r1, [r1, #4]
   2bed4:	cmp	r1, #1
   2bed8:	bne	2d0e4 <ReadCompressedDataSlab2+0x1348>
   2bedc:	ldr	r1, [sl, #4]
   2bee0:	mov	r2, r4
   2bee4:	mov	r3, r8
   2bee8:	mul	r0, r1, r0
   2beec:	add	r1, sp, #24
   2bef0:	str	r0, [sp]
   2bef4:	mov	r0, r5
   2bef8:	bl	6348 <ReadCompressedDoubleData>
   2befc:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2bf00:	ldr	r0, [fp, #16]
   2bf04:	ldr	r7, [r2]
   2bf08:	ldr	r9, [fp, #20]
   2bf0c:	ldr	r5, [sp, #20]
   2bf10:	add	r1, sp, #24
   2bf14:	mov	r2, r8
   2bf18:	ldr	r0, [r0, #4]
   2bf1c:	ldr	r6, [r9, #4]
   2bf20:	mul	r3, r0, r7
   2bf24:	ldr	r0, [r9]
   2bf28:	str	r0, [sp, #12]
   2bf2c:	mov	r0, r5
   2bf30:	bl	26ec <InflateSkipData>
   2bf34:	sub	r0, r6, #1
   2bf38:	mul	r3, r0, r7
   2bf3c:	ldr	r0, [r9]
   2bf40:	cmp	r0, #1
   2bf44:	bne	2c558 <ReadCompressedDataSlab2+0x7bc>
   2bf48:	ldr	r2, [fp, #12]
   2bf4c:	ldr	r0, [sl]
   2bf50:	ldr	r1, [r2]
   2bf54:	cmp	r0, r1
   2bf58:	bne	2d1a0 <ReadCompressedDataSlab2+0x1404>
   2bf5c:	ldr	r1, [fp, #20]
   2bf60:	ldr	r1, [r1, #4]
   2bf64:	cmp	r1, #1
   2bf68:	bne	2d1a0 <ReadCompressedDataSlab2+0x1404>
   2bf6c:	ldr	r1, [sl, #4]
   2bf70:	mov	r2, r4
   2bf74:	mov	r3, r8
   2bf78:	mul	r0, r1, r0
   2bf7c:	add	r1, sp, #24
   2bf80:	str	r0, [sp]
   2bf84:	mov	r0, r5
   2bf88:	bl	b6c0 <ReadCompressedSingleData>
   2bf8c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2bf90:	ldr	r0, [fp, #16]
   2bf94:	ldr	r7, [r2]
   2bf98:	ldr	r9, [fp, #20]
   2bf9c:	ldr	r5, [sp, #20]
   2bfa0:	add	r1, sp, #24
   2bfa4:	mov	r2, r8
   2bfa8:	ldr	r0, [r0, #4]
   2bfac:	ldr	r6, [r9, #4]
   2bfb0:	mul	r3, r0, r7
   2bfb4:	ldr	r0, [r9]
   2bfb8:	str	r0, [sp, #12]
   2bfbc:	mov	r0, r5
   2bfc0:	bl	26ec <InflateSkipData>
   2bfc4:	sub	r0, r6, #1
   2bfc8:	mul	r3, r0, r7
   2bfcc:	ldr	r0, [r9]
   2bfd0:	cmp	r0, #1
   2bfd4:	bne	2c6a0 <ReadCompressedDataSlab2+0x904>
   2bfd8:	ldr	r2, [fp, #12]
   2bfdc:	ldr	r0, [sl]
   2bfe0:	ldr	r1, [r2]
   2bfe4:	cmp	r0, r1
   2bfe8:	bne	2d25c <ReadCompressedDataSlab2+0x14c0>
   2bfec:	ldr	r1, [fp, #20]
   2bff0:	ldr	r1, [r1, #4]
   2bff4:	cmp	r1, #1
   2bff8:	bne	2d25c <ReadCompressedDataSlab2+0x14c0>
   2bffc:	ldr	r1, [sl, #4]
   2c000:	mov	r2, r4
   2c004:	mov	r3, r8
   2c008:	mul	r0, r1, r0
   2c00c:	add	r1, sp, #24
   2c010:	str	r0, [sp]
   2c014:	mov	r0, r5
   2c018:	bl	1e858 <ReadCompressedInt8Data>
   2c01c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c020:	ldr	r0, [fp, #16]
   2c024:	ldr	r7, [r2]
   2c028:	ldr	r9, [fp, #20]
   2c02c:	ldr	r5, [sp, #20]
   2c030:	add	r1, sp, #24
   2c034:	mov	r2, r8
   2c038:	ldr	r0, [r0, #4]
   2c03c:	ldr	r6, [r9, #4]
   2c040:	mul	r3, r0, r7
   2c044:	ldr	r0, [r9]
   2c048:	str	r0, [sp, #12]
   2c04c:	mov	r0, r5
   2c050:	bl	26ec <InflateSkipData>
   2c054:	sub	r0, r6, #1
   2c058:	mul	r3, r0, r7
   2c05c:	ldr	r0, [r9]
   2c060:	cmp	r0, #1
   2c064:	bne	2c7f0 <ReadCompressedDataSlab2+0xa54>
   2c068:	ldr	r2, [fp, #12]
   2c06c:	ldr	r0, [sl]
   2c070:	ldr	r1, [r2]
   2c074:	cmp	r0, r1
   2c078:	bne	2d318 <ReadCompressedDataSlab2+0x157c>
   2c07c:	ldr	r1, [fp, #20]
   2c080:	ldr	r1, [r1, #4]
   2c084:	cmp	r1, #1
   2c088:	bne	2d318 <ReadCompressedDataSlab2+0x157c>
   2c08c:	ldr	r1, [sl, #4]
   2c090:	mov	r2, r4
   2c094:	mov	r3, r8
   2c098:	mul	r0, r1, r0
   2c09c:	add	r1, sp, #24
   2c0a0:	str	r0, [sp]
   2c0a4:	mov	r0, r5
   2c0a8:	bl	21180 <ReadCompressedUInt8Data>
   2c0ac:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c0b0:	ldr	r0, [fp, #16]
   2c0b4:	ldr	r7, [r2]
   2c0b8:	ldr	r9, [fp, #20]
   2c0bc:	ldr	r5, [sp, #20]
   2c0c0:	add	r1, sp, #24
   2c0c4:	mov	r2, r8
   2c0c8:	ldr	r0, [r0, #4]
   2c0cc:	ldr	r6, [r9, #4]
   2c0d0:	mul	r3, r0, r7
   2c0d4:	ldr	r0, [r9]
   2c0d8:	str	r0, [sp, #12]
   2c0dc:	mov	r0, r5
   2c0e0:	bl	26ec <InflateSkipData>
   2c0e4:	sub	r0, r6, #1
   2c0e8:	mul	r3, r0, r7
   2c0ec:	ldr	r0, [r9]
   2c0f0:	cmp	r0, #1
   2c0f4:	bne	2c940 <ReadCompressedDataSlab2+0xba4>
   2c0f8:	ldr	r2, [fp, #12]
   2c0fc:	ldr	r0, [sl]
   2c100:	ldr	r1, [r2]
   2c104:	cmp	r0, r1
   2c108:	bne	2d3d4 <ReadCompressedDataSlab2+0x1638>
   2c10c:	ldr	r1, [fp, #20]
   2c110:	ldr	r1, [r1, #4]
   2c114:	cmp	r1, #1
   2c118:	bne	2d3d4 <ReadCompressedDataSlab2+0x1638>
   2c11c:	ldr	r1, [sl, #4]
   2c120:	mov	r2, r4
   2c124:	mov	r3, r8
   2c128:	mul	r0, r1, r0
   2c12c:	add	r1, sp, #24
   2c130:	str	r0, [sp]
   2c134:	mov	r0, r5
   2c138:	bl	194f4 <ReadCompressedInt16Data>
   2c13c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c140:	ldr	r0, [fp, #16]
   2c144:	ldr	r7, [r2]
   2c148:	ldr	r9, [fp, #20]
   2c14c:	ldr	r5, [sp, #20]
   2c150:	add	r1, sp, #24
   2c154:	mov	r2, r8
   2c158:	ldr	r0, [r0, #4]
   2c15c:	ldr	r6, [r9, #4]
   2c160:	mul	r3, r0, r7
   2c164:	ldr	r0, [r9]
   2c168:	str	r0, [sp, #16]
   2c16c:	mov	r0, r5
   2c170:	bl	26ec <InflateSkipData>
   2c174:	sub	r0, r6, #1
   2c178:	mul	r3, r0, r7
   2c17c:	ldr	r0, [r9]
   2c180:	cmp	r0, #1
   2c184:	bne	2ca88 <ReadCompressedDataSlab2+0xcec>
   2c188:	ldr	r2, [fp, #12]
   2c18c:	ldr	r0, [sl]
   2c190:	ldr	r1, [r2]
   2c194:	cmp	r0, r1
   2c198:	bne	2d490 <ReadCompressedDataSlab2+0x16f4>
   2c19c:	ldr	r1, [fp, #20]
   2c1a0:	ldr	r1, [r1, #4]
   2c1a4:	cmp	r1, #1
   2c1a8:	bne	2d490 <ReadCompressedDataSlab2+0x16f4>
   2c1ac:	ldr	r1, [sl, #4]
   2c1b0:	mov	r2, r4
   2c1b4:	mov	r3, r8
   2c1b8:	mul	r0, r1, r0
   2c1bc:	add	r1, sp, #24
   2c1c0:	str	r0, [sp]
   2c1c4:	mov	r0, r5
   2c1c8:	bl	1bf30 <ReadCompressedUInt16Data>
   2c1cc:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c1d0:	ldr	r0, [fp, #16]
   2c1d4:	ldr	r7, [r2]
   2c1d8:	ldr	r9, [fp, #20]
   2c1dc:	ldr	r5, [sp, #20]
   2c1e0:	add	r1, sp, #24
   2c1e4:	mov	r2, r8
   2c1e8:	ldr	r0, [r0, #4]
   2c1ec:	ldr	r6, [r9, #4]
   2c1f0:	mul	r3, r0, r7
   2c1f4:	ldr	r0, [r9]
   2c1f8:	str	r0, [sp, #12]
   2c1fc:	mov	r0, r5
   2c200:	bl	26ec <InflateSkipData>
   2c204:	sub	r0, r6, #1
   2c208:	mul	r3, r0, r7
   2c20c:	ldr	r0, [r9]
   2c210:	cmp	r0, #1
   2c214:	bne	2cbdc <ReadCompressedDataSlab2+0xe40>
   2c218:	ldr	r2, [fp, #12]
   2c21c:	ldr	r0, [sl]
   2c220:	ldr	r1, [r2]
   2c224:	cmp	r0, r1
   2c228:	bne	2d54c <ReadCompressedDataSlab2+0x17b0>
   2c22c:	ldr	r1, [fp, #20]
   2c230:	ldr	r1, [r1, #4]
   2c234:	cmp	r1, #1
   2c238:	bne	2d54c <ReadCompressedDataSlab2+0x17b0>
   2c23c:	ldr	r1, [sl, #4]
   2c240:	mov	r2, r4
   2c244:	mov	r3, r8
   2c248:	mul	r0, r1, r0
   2c24c:	add	r1, sp, #24
   2c250:	str	r0, [sp]
   2c254:	mov	r0, r5
   2c258:	bl	13e0c <ReadCompressedInt32Data>
   2c25c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c260:	ldr	r0, [fp, #16]
   2c264:	ldr	r7, [r2]
   2c268:	ldr	r9, [fp, #20]
   2c26c:	ldr	r5, [sp, #20]
   2c270:	add	r1, sp, #24
   2c274:	mov	r2, r8
   2c278:	ldr	r0, [r0, #4]
   2c27c:	ldr	r6, [r9, #4]
   2c280:	mul	r3, r0, r7
   2c284:	ldr	r0, [r9]
   2c288:	str	r0, [sp, #12]
   2c28c:	mov	r0, r5
   2c290:	bl	26ec <InflateSkipData>
   2c294:	sub	r0, r6, #1
   2c298:	mul	r3, r0, r7
   2c29c:	ldr	r0, [r9]
   2c2a0:	cmp	r0, #1
   2c2a4:	bne	2cd24 <ReadCompressedDataSlab2+0xf88>
   2c2a8:	ldr	r2, [fp, #12]
   2c2ac:	ldr	r0, [sl]
   2c2b0:	ldr	r1, [r2]
   2c2b4:	cmp	r0, r1
   2c2b8:	bne	2d608 <ReadCompressedDataSlab2+0x186c>
   2c2bc:	ldr	r1, [fp, #20]
   2c2c0:	ldr	r1, [r1, #4]
   2c2c4:	cmp	r1, #1
   2c2c8:	bne	2d608 <ReadCompressedDataSlab2+0x186c>
   2c2cc:	ldr	r1, [sl, #4]
   2c2d0:	mov	r2, r4
   2c2d4:	mov	r3, r8
   2c2d8:	mul	r0, r1, r0
   2c2dc:	add	r1, sp, #24
   2c2e0:	str	r0, [sp]
   2c2e4:	mov	r0, r5
   2c2e8:	bl	16ab8 <ReadCompressedUInt32Data>
   2c2ec:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c2f0:	ldr	r0, [fp, #16]
   2c2f4:	ldr	r7, [r2]
   2c2f8:	ldr	r9, [fp, #20]
   2c2fc:	ldr	r5, [sp, #20]
   2c300:	add	r1, sp, #24
   2c304:	mov	r2, r8
   2c308:	ldr	r0, [r0, #4]
   2c30c:	ldr	r6, [r9, #4]
   2c310:	mul	r3, r0, r7
   2c314:	ldr	r0, [r9]
   2c318:	str	r0, [sp, #12]
   2c31c:	mov	r0, r5
   2c320:	bl	26ec <InflateSkipData>
   2c324:	sub	r0, r6, #1
   2c328:	mul	r3, r0, r7
   2c32c:	ldr	r0, [r9]
   2c330:	cmp	r0, #1
   2c334:	bne	2ce6c <ReadCompressedDataSlab2+0x10d0>
   2c338:	ldr	r2, [fp, #12]
   2c33c:	ldr	r0, [sl]
   2c340:	ldr	r1, [r2]
   2c344:	cmp	r0, r1
   2c348:	bne	2d6c4 <ReadCompressedDataSlab2+0x1928>
   2c34c:	ldr	r1, [fp, #20]
   2c350:	ldr	r1, [r1, #4]
   2c354:	cmp	r1, #1
   2c358:	bne	2d6c4 <ReadCompressedDataSlab2+0x1928>
   2c35c:	ldr	r1, [sl, #4]
   2c360:	mov	r2, r4
   2c364:	mov	r3, r8
   2c368:	mul	r0, r1, r0
   2c36c:	add	r1, sp, #24
   2c370:	str	r0, [sp]
   2c374:	mov	r0, r5
   2c378:	bl	110f0 <ReadCompressedUInt64Data>
   2c37c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c380:	ldr	r0, [fp, #16]
   2c384:	ldr	r7, [r2]
   2c388:	ldr	r9, [fp, #20]
   2c38c:	ldr	r5, [sp, #20]
   2c390:	add	r1, sp, #24
   2c394:	mov	r2, r8
   2c398:	ldr	r0, [r0, #4]
   2c39c:	ldr	r6, [r9, #4]
   2c3a0:	mul	r3, r0, r7
   2c3a4:	ldr	r0, [r9]
   2c3a8:	str	r0, [sp, #12]
   2c3ac:	mov	r0, r5
   2c3b0:	bl	26ec <InflateSkipData>
   2c3b4:	sub	r0, r6, #1
   2c3b8:	mul	r3, r0, r7
   2c3bc:	ldr	r0, [r9]
   2c3c0:	cmp	r0, #1
   2c3c4:	bne	2cfb4 <ReadCompressedDataSlab2+0x1218>
   2c3c8:	ldr	r2, [fp, #12]
   2c3cc:	ldr	r0, [sl]
   2c3d0:	ldr	r1, [r2]
   2c3d4:	cmp	r0, r1
   2c3d8:	bne	2d780 <ReadCompressedDataSlab2+0x19e4>
   2c3dc:	ldr	r1, [fp, #20]
   2c3e0:	ldr	r1, [r1, #4]
   2c3e4:	cmp	r1, #1
   2c3e8:	bne	2d780 <ReadCompressedDataSlab2+0x19e4>
   2c3ec:	ldr	r1, [sl, #4]
   2c3f0:	mov	r2, r4
   2c3f4:	mov	r3, r8
   2c3f8:	mul	r0, r1, r0
   2c3fc:	add	r1, sp, #24
   2c400:	str	r0, [sp]
   2c404:	mov	r0, r5
   2c408:	bl	e3c0 <ReadCompressedInt64Data>
   2c40c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c410:	ldr	r0, [sl, #4]
   2c414:	ldr	r9, [fp, #16]
   2c418:	cmp	r0, #1
   2c41c:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c420:	ldr	r0, [sp, #12]
   2c424:	mov	r7, sl
   2c428:	mov	r1, #0
   2c42c:	add	r6, sp, #24
   2c430:	mov	sl, r3
   2c434:	str	r3, [sp, #16]
   2c438:	sub	r0, r0, #1
   2c43c:	str	r0, [sp, #12]
   2c440:	b	2c4ac <ReadCompressedDataSlab2+0x710>
   2c444:	ldr	r8, [fp, #8]
   2c448:	mov	r6, r9
   2c44c:	ldr	r7, [fp, #24]
   2c450:	ldr	r1, [fp, #20]
   2c454:	ldr	r0, [fp, #12]
   2c458:	ldr	sl, [sp, #16]
   2c45c:	ldr	r9, [fp, #16]
   2c460:	ldr	r2, [r7]
   2c464:	ldr	r1, [r1]
   2c468:	ldr	r0, [r0]
   2c46c:	sub	r2, r2, #1
   2c470:	add	r0, r0, sl
   2c474:	mul	r1, r2, r1
   2c478:	mov	r2, r8
   2c47c:	mvn	r1, r1
   2c480:	add	r0, r0, r1
   2c484:	ldr	r1, [r9]
   2c488:	sub	r3, r0, r1
   2c48c:	mov	r0, r5
   2c490:	mov	r1, r6
   2c494:	bl	26ec <InflateSkipData>
   2c498:	ldr	r1, [sp, #20]
   2c49c:	ldr	r0, [r7, #4]
   2c4a0:	add	r1, r1, #1
   2c4a4:	cmp	r1, r0
   2c4a8:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c4ac:	ldr	r3, [r9]
   2c4b0:	str	r1, [sp, #20]
   2c4b4:	mov	r0, r5
   2c4b8:	mov	r1, r6
   2c4bc:	mov	r2, r8
   2c4c0:	bl	26ec <InflateSkipData>
   2c4c4:	mov	sl, r7
   2c4c8:	ldr	sl, [r7]
   2c4cc:	mov	r0, #1
   2c4d0:	mov	r1, r6
   2c4d4:	mov	r2, r4
   2c4d8:	mov	r3, r8
   2c4dc:	mov	r9, r6
   2c4e0:	str	r0, [sp]
   2c4e4:	mov	r0, r5
   2c4e8:	bl	6348 <ReadCompressedDoubleData>
   2c4ec:	add	r4, r4, #8
   2c4f0:	cmp	sl, #2
   2c4f4:	blt	2c444 <ReadCompressedDataSlab2+0x6a8>
   2c4f8:	ldr	r8, [fp, #8]
   2c4fc:	ldr	r7, [sp, #12]
   2c500:	mov	sl, #0
   2c504:	mov	r6, r9
   2c508:	mov	r0, r5
   2c50c:	mov	r1, r6
   2c510:	mov	r2, r8
   2c514:	mov	r3, r7
   2c518:	bl	26ec <InflateSkipData>
   2c51c:	ldr	r0, [fp, #24]
   2c520:	mov	r1, r6
   2c524:	mov	r2, r4
   2c528:	mov	r3, r8
   2c52c:	ldr	r9, [r0]
   2c530:	mov	r0, #1
   2c534:	str	r0, [sp]
   2c538:	mov	r0, r5
   2c53c:	bl	6348 <ReadCompressedDoubleData>
   2c540:	add	sl, sl, #1
   2c544:	sub	r0, r9, #1
   2c548:	add	r4, r4, #8
   2c54c:	cmp	sl, r0
   2c550:	blt	2c508 <ReadCompressedDataSlab2+0x76c>
   2c554:	b	2c44c <ReadCompressedDataSlab2+0x6b0>
   2c558:	ldr	r0, [sl, #4]
   2c55c:	ldr	r9, [fp, #16]
   2c560:	cmp	r0, #1
   2c564:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c568:	ldr	r0, [sp, #12]
   2c56c:	mov	r7, sl
   2c570:	mov	r1, #0
   2c574:	add	r6, sp, #24
   2c578:	mov	sl, r3
   2c57c:	str	r3, [sp, #16]
   2c580:	sub	r0, r0, #1
   2c584:	str	r0, [sp, #12]
   2c588:	b	2c5f4 <ReadCompressedDataSlab2+0x858>
   2c58c:	ldr	r8, [fp, #8]
   2c590:	mov	r6, r9
   2c594:	ldr	r7, [fp, #24]
   2c598:	ldr	r1, [fp, #20]
   2c59c:	ldr	r0, [fp, #12]
   2c5a0:	ldr	sl, [sp, #16]
   2c5a4:	ldr	r9, [fp, #16]
   2c5a8:	ldr	r2, [r7]
   2c5ac:	ldr	r1, [r1]
   2c5b0:	ldr	r0, [r0]
   2c5b4:	sub	r2, r2, #1
   2c5b8:	add	r0, r0, sl
   2c5bc:	mul	r1, r2, r1
   2c5c0:	mov	r2, r8
   2c5c4:	mvn	r1, r1
   2c5c8:	add	r0, r0, r1
   2c5cc:	ldr	r1, [r9]
   2c5d0:	sub	r3, r0, r1
   2c5d4:	mov	r0, r5
   2c5d8:	mov	r1, r6
   2c5dc:	bl	26ec <InflateSkipData>
   2c5e0:	ldr	r1, [sp, #20]
   2c5e4:	ldr	r0, [r7, #4]
   2c5e8:	add	r1, r1, #1
   2c5ec:	cmp	r1, r0
   2c5f0:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c5f4:	ldr	r3, [r9]
   2c5f8:	str	r1, [sp, #20]
   2c5fc:	mov	r0, r5
   2c600:	mov	r1, r6
   2c604:	mov	r2, r8
   2c608:	bl	26ec <InflateSkipData>
   2c60c:	mov	sl, r7
   2c610:	ldr	sl, [r7]
   2c614:	mov	r0, #1
   2c618:	mov	r1, r6
   2c61c:	mov	r2, r4
   2c620:	mov	r3, r8
   2c624:	mov	r9, r6
   2c628:	str	r0, [sp]
   2c62c:	mov	r0, r5
   2c630:	bl	b6c0 <ReadCompressedSingleData>
   2c634:	add	r4, r4, #4
   2c638:	cmp	sl, #2
   2c63c:	blt	2c58c <ReadCompressedDataSlab2+0x7f0>
   2c640:	ldr	r8, [fp, #8]
   2c644:	ldr	r7, [sp, #12]
   2c648:	mov	sl, #0
   2c64c:	mov	r6, r9
   2c650:	mov	r0, r5
   2c654:	mov	r1, r6
   2c658:	mov	r2, r8
   2c65c:	mov	r3, r7
   2c660:	bl	26ec <InflateSkipData>
   2c664:	ldr	r0, [fp, #24]
   2c668:	mov	r1, r6
   2c66c:	mov	r2, r4
   2c670:	mov	r3, r8
   2c674:	ldr	r9, [r0]
   2c678:	mov	r0, #1
   2c67c:	str	r0, [sp]
   2c680:	mov	r0, r5
   2c684:	bl	b6c0 <ReadCompressedSingleData>
   2c688:	add	sl, sl, #1
   2c68c:	sub	r0, r9, #1
   2c690:	add	r4, r4, #4
   2c694:	cmp	sl, r0
   2c698:	blt	2c650 <ReadCompressedDataSlab2+0x8b4>
   2c69c:	b	2c594 <ReadCompressedDataSlab2+0x7f8>
   2c6a0:	ldr	r0, [sl, #4]
   2c6a4:	mov	r7, r8
   2c6a8:	ldr	r8, [fp, #16]
   2c6ac:	cmp	r0, #1
   2c6b0:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c6b4:	ldr	r0, [sp, #12]
   2c6b8:	mov	r1, r8
   2c6bc:	mov	r6, #0
   2c6c0:	add	r9, sp, #24
   2c6c4:	mov	r8, r3
   2c6c8:	str	r3, [sp, #16]
   2c6cc:	sub	r0, r0, #1
   2c6d0:	str	r0, [sp, #12]
   2c6d4:	b	2c740 <ReadCompressedDataSlab2+0x9a4>
   2c6d8:	mov	r3, r8
   2c6dc:	ldr	sl, [fp, #24]
   2c6e0:	ldr	r1, [fp, #20]
   2c6e4:	ldr	r0, [fp, #12]
   2c6e8:	ldr	r8, [sp, #16]
   2c6ec:	ldr	r7, [fp, #8]
   2c6f0:	add	r9, sp, #24
   2c6f4:	ldr	r2, [sl]
   2c6f8:	ldr	r1, [r1]
   2c6fc:	ldr	r0, [r0]
   2c700:	sub	r2, r2, #1
   2c704:	add	r0, r0, r8
   2c708:	mul	r1, r2, r1
   2c70c:	mov	r2, r7
   2c710:	mvn	r1, r1
   2c714:	add	r0, r0, r1
   2c718:	ldr	r1, [r3]
   2c71c:	sub	r3, r0, r1
   2c720:	mov	r0, r5
   2c724:	mov	r1, r9
   2c728:	bl	26ec <InflateSkipData>
   2c72c:	ldr	r0, [sl, #4]
   2c730:	ldr	r1, [fp, #16]
   2c734:	add	r6, r6, #1
   2c738:	cmp	r6, r0
   2c73c:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c740:	ldr	r3, [r1]
   2c744:	mov	r8, r1
   2c748:	mov	r0, r5
   2c74c:	mov	r1, r9
   2c750:	mov	r2, r7
   2c754:	bl	26ec <InflateSkipData>
   2c758:	ldr	sl, [sl]
   2c75c:	mov	r0, #1
   2c760:	mov	r1, r9
   2c764:	mov	r2, r4
   2c768:	mov	r3, r7
   2c76c:	str	r0, [sp]
   2c770:	mov	r0, r5
   2c774:	bl	1e858 <ReadCompressedInt8Data>
   2c778:	add	r4, r4, #1
   2c77c:	cmp	sl, #2
   2c780:	blt	2c6d8 <ReadCompressedDataSlab2+0x93c>
   2c784:	str	r6, [sp, #20]
   2c788:	ldr	r8, [fp, #8]
   2c78c:	ldr	r6, [sp, #12]
   2c790:	mov	r1, r9
   2c794:	mov	sl, #0
   2c798:	mov	r7, #1
   2c79c:	mov	r0, r5
   2c7a0:	mov	r2, r8
   2c7a4:	mov	r3, r6
   2c7a8:	bl	26ec <InflateSkipData>
   2c7ac:	ldr	r0, [fp, #24]
   2c7b0:	add	r2, r4, sl
   2c7b4:	add	r1, sp, #24
   2c7b8:	mov	r3, r8
   2c7bc:	ldr	r9, [r0]
   2c7c0:	mov	r0, r5
   2c7c4:	str	r7, [sp]
   2c7c8:	bl	1e858 <ReadCompressedInt8Data>
   2c7cc:	add	sl, sl, #1
   2c7d0:	sub	r0, r9, #1
   2c7d4:	add	r1, sp, #24
   2c7d8:	cmp	sl, r0
   2c7dc:	blt	2c79c <ReadCompressedDataSlab2+0xa00>
   2c7e0:	ldr	r8, [fp, #16]
   2c7e4:	ldr	r6, [sp, #20]
   2c7e8:	add	r4, r4, sl
   2c7ec:	b	2c6d8 <ReadCompressedDataSlab2+0x93c>
   2c7f0:	ldr	r0, [sl, #4]
   2c7f4:	mov	r7, r8
   2c7f8:	ldr	r8, [fp, #16]
   2c7fc:	cmp	r0, #1
   2c800:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c804:	ldr	r0, [sp, #12]
   2c808:	mov	r1, r8
   2c80c:	mov	r6, #0
   2c810:	add	r9, sp, #24
   2c814:	mov	r8, r3
   2c818:	str	r3, [sp, #16]
   2c81c:	sub	r0, r0, #1
   2c820:	str	r0, [sp, #12]
   2c824:	b	2c890 <ReadCompressedDataSlab2+0xaf4>
   2c828:	mov	r3, r8
   2c82c:	ldr	sl, [fp, #24]
   2c830:	ldr	r1, [fp, #20]
   2c834:	ldr	r0, [fp, #12]
   2c838:	ldr	r8, [sp, #16]
   2c83c:	ldr	r7, [fp, #8]
   2c840:	add	r9, sp, #24
   2c844:	ldr	r2, [sl]
   2c848:	ldr	r1, [r1]
   2c84c:	ldr	r0, [r0]
   2c850:	sub	r2, r2, #1
   2c854:	add	r0, r0, r8
   2c858:	mul	r1, r2, r1
   2c85c:	mov	r2, r7
   2c860:	mvn	r1, r1
   2c864:	add	r0, r0, r1
   2c868:	ldr	r1, [r3]
   2c86c:	sub	r3, r0, r1
   2c870:	mov	r0, r5
   2c874:	mov	r1, r9
   2c878:	bl	26ec <InflateSkipData>
   2c87c:	ldr	r0, [sl, #4]
   2c880:	ldr	r1, [fp, #16]
   2c884:	add	r6, r6, #1
   2c888:	cmp	r6, r0
   2c88c:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c890:	ldr	r3, [r1]
   2c894:	mov	r8, r1
   2c898:	mov	r0, r5
   2c89c:	mov	r1, r9
   2c8a0:	mov	r2, r7
   2c8a4:	bl	26ec <InflateSkipData>
   2c8a8:	ldr	sl, [sl]
   2c8ac:	mov	r0, #1
   2c8b0:	mov	r1, r9
   2c8b4:	mov	r2, r4
   2c8b8:	mov	r3, r7
   2c8bc:	str	r0, [sp]
   2c8c0:	mov	r0, r5
   2c8c4:	bl	21180 <ReadCompressedUInt8Data>
   2c8c8:	add	r4, r4, #1
   2c8cc:	cmp	sl, #2
   2c8d0:	blt	2c828 <ReadCompressedDataSlab2+0xa8c>
   2c8d4:	str	r6, [sp, #20]
   2c8d8:	ldr	r8, [fp, #8]
   2c8dc:	ldr	r6, [sp, #12]
   2c8e0:	mov	r1, r9
   2c8e4:	mov	sl, #0
   2c8e8:	mov	r7, #1
   2c8ec:	mov	r0, r5
   2c8f0:	mov	r2, r8
   2c8f4:	mov	r3, r6
   2c8f8:	bl	26ec <InflateSkipData>
   2c8fc:	ldr	r0, [fp, #24]
   2c900:	add	r2, r4, sl
   2c904:	add	r1, sp, #24
   2c908:	mov	r3, r8
   2c90c:	ldr	r9, [r0]
   2c910:	mov	r0, r5
   2c914:	str	r7, [sp]
   2c918:	bl	21180 <ReadCompressedUInt8Data>
   2c91c:	add	sl, sl, #1
   2c920:	sub	r0, r9, #1
   2c924:	add	r1, sp, #24
   2c928:	cmp	sl, r0
   2c92c:	blt	2c8ec <ReadCompressedDataSlab2+0xb50>
   2c930:	ldr	r8, [fp, #16]
   2c934:	ldr	r6, [sp, #20]
   2c938:	add	r4, r4, sl
   2c93c:	b	2c828 <ReadCompressedDataSlab2+0xa8c>
   2c940:	ldr	r0, [sl, #4]
   2c944:	ldr	r9, [fp, #16]
   2c948:	cmp	r0, #1
   2c94c:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c950:	ldr	r0, [sp, #12]
   2c954:	mov	r7, sl
   2c958:	mov	r1, #0
   2c95c:	add	r6, sp, #24
   2c960:	mov	sl, r3
   2c964:	str	r3, [sp, #16]
   2c968:	sub	r0, r0, #1
   2c96c:	str	r0, [sp, #12]
   2c970:	b	2c9dc <ReadCompressedDataSlab2+0xc40>
   2c974:	ldr	r8, [fp, #8]
   2c978:	mov	r6, r9
   2c97c:	ldr	r7, [fp, #24]
   2c980:	ldr	r1, [fp, #20]
   2c984:	ldr	r0, [fp, #12]
   2c988:	ldr	sl, [sp, #16]
   2c98c:	ldr	r9, [fp, #16]
   2c990:	ldr	r2, [r7]
   2c994:	ldr	r1, [r1]
   2c998:	ldr	r0, [r0]
   2c99c:	sub	r2, r2, #1
   2c9a0:	add	r0, r0, sl
   2c9a4:	mul	r1, r2, r1
   2c9a8:	mov	r2, r8
   2c9ac:	mvn	r1, r1
   2c9b0:	add	r0, r0, r1
   2c9b4:	ldr	r1, [r9]
   2c9b8:	sub	r3, r0, r1
   2c9bc:	mov	r0, r5
   2c9c0:	mov	r1, r6
   2c9c4:	bl	26ec <InflateSkipData>
   2c9c8:	ldr	r1, [sp, #20]
   2c9cc:	ldr	r0, [r7, #4]
   2c9d0:	add	r1, r1, #1
   2c9d4:	cmp	r1, r0
   2c9d8:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2c9dc:	ldr	r3, [r9]
   2c9e0:	str	r1, [sp, #20]
   2c9e4:	mov	r0, r5
   2c9e8:	mov	r1, r6
   2c9ec:	mov	r2, r8
   2c9f0:	bl	26ec <InflateSkipData>
   2c9f4:	mov	sl, r7
   2c9f8:	ldr	sl, [r7]
   2c9fc:	mov	r0, #1
   2ca00:	mov	r1, r6
   2ca04:	mov	r2, r4
   2ca08:	mov	r3, r8
   2ca0c:	mov	r9, r6
   2ca10:	str	r0, [sp]
   2ca14:	mov	r0, r5
   2ca18:	bl	194f4 <ReadCompressedInt16Data>
   2ca1c:	add	r4, r4, #2
   2ca20:	cmp	sl, #2
   2ca24:	blt	2c974 <ReadCompressedDataSlab2+0xbd8>
   2ca28:	ldr	r8, [fp, #8]
   2ca2c:	ldr	r7, [sp, #12]
   2ca30:	mov	sl, #0
   2ca34:	mov	r6, r9
   2ca38:	mov	r0, r5
   2ca3c:	mov	r1, r6
   2ca40:	mov	r2, r8
   2ca44:	mov	r3, r7
   2ca48:	bl	26ec <InflateSkipData>
   2ca4c:	ldr	r0, [fp, #24]
   2ca50:	mov	r1, r6
   2ca54:	mov	r2, r4
   2ca58:	mov	r3, r8
   2ca5c:	ldr	r9, [r0]
   2ca60:	mov	r0, #1
   2ca64:	str	r0, [sp]
   2ca68:	mov	r0, r5
   2ca6c:	bl	194f4 <ReadCompressedInt16Data>
   2ca70:	add	sl, sl, #1
   2ca74:	sub	r0, r9, #1
   2ca78:	add	r4, r4, #2
   2ca7c:	cmp	sl, r0
   2ca80:	blt	2ca38 <ReadCompressedDataSlab2+0xc9c>
   2ca84:	b	2c97c <ReadCompressedDataSlab2+0xbe0>
   2ca88:	ldr	r0, [sl, #4]
   2ca8c:	ldr	r9, [fp, #16]
   2ca90:	cmp	r0, #1
   2ca94:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2ca98:	ldr	r0, [sp, #16]
   2ca9c:	mov	r7, sl
   2caa0:	mov	r6, r5
   2caa4:	mov	r1, #0
   2caa8:	add	r5, sp, #24
   2caac:	mov	sl, r3
   2cab0:	str	r3, [sp, #12]
   2cab4:	sub	r0, r0, #1
   2cab8:	str	r0, [sp, #8]
   2cabc:	b	2cb2c <ReadCompressedDataSlab2+0xd90>
   2cac0:	ldr	r8, [fp, #8]
   2cac4:	ldr	r6, [sp, #20]
   2cac8:	mov	r5, r9
   2cacc:	ldr	r7, [fp, #24]
   2cad0:	ldr	r1, [fp, #20]
   2cad4:	ldr	r0, [fp, #12]
   2cad8:	ldr	sl, [sp, #12]
   2cadc:	ldr	r9, [fp, #16]
   2cae0:	ldr	r2, [r7]
   2cae4:	ldr	r1, [r1]
   2cae8:	ldr	r0, [r0]
   2caec:	sub	r2, r2, #1
   2caf0:	add	r0, r0, sl
   2caf4:	mul	r1, r2, r1
   2caf8:	mov	r2, r8
   2cafc:	mvn	r1, r1
   2cb00:	add	r0, r0, r1
   2cb04:	ldr	r1, [r9]
   2cb08:	sub	r3, r0, r1
   2cb0c:	mov	r0, r6
   2cb10:	mov	r1, r5
   2cb14:	bl	26ec <InflateSkipData>
   2cb18:	ldr	r1, [sp, #16]
   2cb1c:	ldr	r0, [r7, #4]
   2cb20:	add	r1, r1, #1
   2cb24:	cmp	r1, r0
   2cb28:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cb2c:	ldr	r3, [r9]
   2cb30:	str	r1, [sp, #16]
   2cb34:	mov	r0, r6
   2cb38:	mov	r1, r5
   2cb3c:	mov	r2, r8
   2cb40:	bl	26ec <InflateSkipData>
   2cb44:	mov	sl, r7
   2cb48:	ldr	sl, [r7]
   2cb4c:	mov	r0, #1
   2cb50:	mov	r1, r5
   2cb54:	mov	r2, r4
   2cb58:	mov	r3, r8
   2cb5c:	mov	r9, r5
   2cb60:	str	r0, [sp]
   2cb64:	mov	r0, r6
   2cb68:	bl	1bf30 <ReadCompressedUInt16Data>
   2cb6c:	add	r4, r4, #2
   2cb70:	cmp	sl, #2
   2cb74:	blt	2cac0 <ReadCompressedDataSlab2+0xd24>
   2cb78:	ldr	r8, [fp, #8]
   2cb7c:	ldr	r7, [sp, #8]
   2cb80:	ldr	r6, [sp, #20]
   2cb84:	mov	sl, #0
   2cb88:	mov	r5, r9
   2cb8c:	mov	r0, r6
   2cb90:	mov	r1, r5
   2cb94:	mov	r2, r8
   2cb98:	mov	r3, r7
   2cb9c:	bl	26ec <InflateSkipData>
   2cba0:	ldr	r0, [fp, #24]
   2cba4:	mov	r1, r5
   2cba8:	mov	r2, r4
   2cbac:	mov	r3, r8
   2cbb0:	ldr	r9, [r0]
   2cbb4:	mov	r0, #1
   2cbb8:	str	r0, [sp]
   2cbbc:	mov	r0, r6
   2cbc0:	bl	1bf30 <ReadCompressedUInt16Data>
   2cbc4:	add	sl, sl, #1
   2cbc8:	sub	r0, r9, #1
   2cbcc:	add	r4, r4, #2
   2cbd0:	cmp	sl, r0
   2cbd4:	blt	2cb8c <ReadCompressedDataSlab2+0xdf0>
   2cbd8:	b	2cacc <ReadCompressedDataSlab2+0xd30>
   2cbdc:	ldr	r0, [sl, #4]
   2cbe0:	ldr	r9, [fp, #16]
   2cbe4:	cmp	r0, #1
   2cbe8:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cbec:	ldr	r0, [sp, #12]
   2cbf0:	mov	r7, sl
   2cbf4:	mov	r1, #0
   2cbf8:	add	r6, sp, #24
   2cbfc:	mov	sl, r3
   2cc00:	str	r3, [sp, #16]
   2cc04:	sub	r0, r0, #1
   2cc08:	str	r0, [sp, #12]
   2cc0c:	b	2cc78 <ReadCompressedDataSlab2+0xedc>
   2cc10:	ldr	r8, [fp, #8]
   2cc14:	mov	r6, r9
   2cc18:	ldr	r7, [fp, #24]
   2cc1c:	ldr	r1, [fp, #20]
   2cc20:	ldr	r0, [fp, #12]
   2cc24:	ldr	sl, [sp, #16]
   2cc28:	ldr	r9, [fp, #16]
   2cc2c:	ldr	r2, [r7]
   2cc30:	ldr	r1, [r1]
   2cc34:	ldr	r0, [r0]
   2cc38:	sub	r2, r2, #1
   2cc3c:	add	r0, r0, sl
   2cc40:	mul	r1, r2, r1
   2cc44:	mov	r2, r8
   2cc48:	mvn	r1, r1
   2cc4c:	add	r0, r0, r1
   2cc50:	ldr	r1, [r9]
   2cc54:	sub	r3, r0, r1
   2cc58:	mov	r0, r5
   2cc5c:	mov	r1, r6
   2cc60:	bl	26ec <InflateSkipData>
   2cc64:	ldr	r1, [sp, #20]
   2cc68:	ldr	r0, [r7, #4]
   2cc6c:	add	r1, r1, #1
   2cc70:	cmp	r1, r0
   2cc74:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cc78:	ldr	r3, [r9]
   2cc7c:	str	r1, [sp, #20]
   2cc80:	mov	r0, r5
   2cc84:	mov	r1, r6
   2cc88:	mov	r2, r8
   2cc8c:	bl	26ec <InflateSkipData>
   2cc90:	mov	sl, r7
   2cc94:	ldr	sl, [r7]
   2cc98:	mov	r0, #1
   2cc9c:	mov	r1, r6
   2cca0:	mov	r2, r4
   2cca4:	mov	r3, r8
   2cca8:	mov	r9, r6
   2ccac:	str	r0, [sp]
   2ccb0:	mov	r0, r5
   2ccb4:	bl	13e0c <ReadCompressedInt32Data>
   2ccb8:	add	r4, r4, #4
   2ccbc:	cmp	sl, #2
   2ccc0:	blt	2cc10 <ReadCompressedDataSlab2+0xe74>
   2ccc4:	ldr	r8, [fp, #8]
   2ccc8:	ldr	r7, [sp, #12]
   2cccc:	mov	sl, #0
   2ccd0:	mov	r6, r9
   2ccd4:	mov	r0, r5
   2ccd8:	mov	r1, r6
   2ccdc:	mov	r2, r8
   2cce0:	mov	r3, r7
   2cce4:	bl	26ec <InflateSkipData>
   2cce8:	ldr	r0, [fp, #24]
   2ccec:	mov	r1, r6
   2ccf0:	mov	r2, r4
   2ccf4:	mov	r3, r8
   2ccf8:	ldr	r9, [r0]
   2ccfc:	mov	r0, #1
   2cd00:	str	r0, [sp]
   2cd04:	mov	r0, r5
   2cd08:	bl	13e0c <ReadCompressedInt32Data>
   2cd0c:	add	sl, sl, #1
   2cd10:	sub	r0, r9, #1
   2cd14:	add	r4, r4, #4
   2cd18:	cmp	sl, r0
   2cd1c:	blt	2ccd4 <ReadCompressedDataSlab2+0xf38>
   2cd20:	b	2cc18 <ReadCompressedDataSlab2+0xe7c>
   2cd24:	ldr	r0, [sl, #4]
   2cd28:	ldr	r9, [fp, #16]
   2cd2c:	cmp	r0, #1
   2cd30:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cd34:	ldr	r0, [sp, #12]
   2cd38:	mov	r7, sl
   2cd3c:	mov	r1, #0
   2cd40:	add	r6, sp, #24
   2cd44:	mov	sl, r3
   2cd48:	str	r3, [sp, #16]
   2cd4c:	sub	r0, r0, #1
   2cd50:	str	r0, [sp, #12]
   2cd54:	b	2cdc0 <ReadCompressedDataSlab2+0x1024>
   2cd58:	ldr	r8, [fp, #8]
   2cd5c:	mov	r6, r9
   2cd60:	ldr	r7, [fp, #24]
   2cd64:	ldr	r1, [fp, #20]
   2cd68:	ldr	r0, [fp, #12]
   2cd6c:	ldr	sl, [sp, #16]
   2cd70:	ldr	r9, [fp, #16]
   2cd74:	ldr	r2, [r7]
   2cd78:	ldr	r1, [r1]
   2cd7c:	ldr	r0, [r0]
   2cd80:	sub	r2, r2, #1
   2cd84:	add	r0, r0, sl
   2cd88:	mul	r1, r2, r1
   2cd8c:	mov	r2, r8
   2cd90:	mvn	r1, r1
   2cd94:	add	r0, r0, r1
   2cd98:	ldr	r1, [r9]
   2cd9c:	sub	r3, r0, r1
   2cda0:	mov	r0, r5
   2cda4:	mov	r1, r6
   2cda8:	bl	26ec <InflateSkipData>
   2cdac:	ldr	r1, [sp, #20]
   2cdb0:	ldr	r0, [r7, #4]
   2cdb4:	add	r1, r1, #1
   2cdb8:	cmp	r1, r0
   2cdbc:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cdc0:	ldr	r3, [r9]
   2cdc4:	str	r1, [sp, #20]
   2cdc8:	mov	r0, r5
   2cdcc:	mov	r1, r6
   2cdd0:	mov	r2, r8
   2cdd4:	bl	26ec <InflateSkipData>
   2cdd8:	mov	sl, r7
   2cddc:	ldr	sl, [r7]
   2cde0:	mov	r0, #1
   2cde4:	mov	r1, r6
   2cde8:	mov	r2, r4
   2cdec:	mov	r3, r8
   2cdf0:	mov	r9, r6
   2cdf4:	str	r0, [sp]
   2cdf8:	mov	r0, r5
   2cdfc:	bl	16ab8 <ReadCompressedUInt32Data>
   2ce00:	add	r4, r4, #4
   2ce04:	cmp	sl, #2
   2ce08:	blt	2cd58 <ReadCompressedDataSlab2+0xfbc>
   2ce0c:	ldr	r8, [fp, #8]
   2ce10:	ldr	r7, [sp, #12]
   2ce14:	mov	sl, #0
   2ce18:	mov	r6, r9
   2ce1c:	mov	r0, r5
   2ce20:	mov	r1, r6
   2ce24:	mov	r2, r8
   2ce28:	mov	r3, r7
   2ce2c:	bl	26ec <InflateSkipData>
   2ce30:	ldr	r0, [fp, #24]
   2ce34:	mov	r1, r6
   2ce38:	mov	r2, r4
   2ce3c:	mov	r3, r8
   2ce40:	ldr	r9, [r0]
   2ce44:	mov	r0, #1
   2ce48:	str	r0, [sp]
   2ce4c:	mov	r0, r5
   2ce50:	bl	16ab8 <ReadCompressedUInt32Data>
   2ce54:	add	sl, sl, #1
   2ce58:	sub	r0, r9, #1
   2ce5c:	add	r4, r4, #4
   2ce60:	cmp	sl, r0
   2ce64:	blt	2ce1c <ReadCompressedDataSlab2+0x1080>
   2ce68:	b	2cd60 <ReadCompressedDataSlab2+0xfc4>
   2ce6c:	ldr	r0, [sl, #4]
   2ce70:	ldr	r9, [fp, #16]
   2ce74:	cmp	r0, #1
   2ce78:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2ce7c:	ldr	r0, [sp, #12]
   2ce80:	mov	r7, sl
   2ce84:	mov	r1, #0
   2ce88:	add	r6, sp, #24
   2ce8c:	mov	sl, r3
   2ce90:	str	r3, [sp, #16]
   2ce94:	sub	r0, r0, #1
   2ce98:	str	r0, [sp, #12]
   2ce9c:	b	2cf08 <ReadCompressedDataSlab2+0x116c>
   2cea0:	ldr	r8, [fp, #8]
   2cea4:	mov	r6, r9
   2cea8:	ldr	r7, [fp, #24]
   2ceac:	ldr	r1, [fp, #20]
   2ceb0:	ldr	r0, [fp, #12]
   2ceb4:	ldr	sl, [sp, #16]
   2ceb8:	ldr	r9, [fp, #16]
   2cebc:	ldr	r2, [r7]
   2cec0:	ldr	r1, [r1]
   2cec4:	ldr	r0, [r0]
   2cec8:	sub	r2, r2, #1
   2cecc:	add	r0, r0, sl
   2ced0:	mul	r1, r2, r1
   2ced4:	mov	r2, r8
   2ced8:	mvn	r1, r1
   2cedc:	add	r0, r0, r1
   2cee0:	ldr	r1, [r9]
   2cee4:	sub	r3, r0, r1
   2cee8:	mov	r0, r5
   2ceec:	mov	r1, r6
   2cef0:	bl	26ec <InflateSkipData>
   2cef4:	ldr	r1, [sp, #20]
   2cef8:	ldr	r0, [r7, #4]
   2cefc:	add	r1, r1, #1
   2cf00:	cmp	r1, r0
   2cf04:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cf08:	ldr	r3, [r9]
   2cf0c:	str	r1, [sp, #20]
   2cf10:	mov	r0, r5
   2cf14:	mov	r1, r6
   2cf18:	mov	r2, r8
   2cf1c:	bl	26ec <InflateSkipData>
   2cf20:	mov	sl, r7
   2cf24:	ldr	sl, [r7]
   2cf28:	mov	r0, #1
   2cf2c:	mov	r1, r6
   2cf30:	mov	r2, r4
   2cf34:	mov	r3, r8
   2cf38:	mov	r9, r6
   2cf3c:	str	r0, [sp]
   2cf40:	mov	r0, r5
   2cf44:	bl	110f0 <ReadCompressedUInt64Data>
   2cf48:	add	r4, r4, #8
   2cf4c:	cmp	sl, #2
   2cf50:	blt	2cea0 <ReadCompressedDataSlab2+0x1104>
   2cf54:	ldr	r8, [fp, #8]
   2cf58:	ldr	r7, [sp, #12]
   2cf5c:	mov	sl, #0
   2cf60:	mov	r6, r9
   2cf64:	mov	r0, r5
   2cf68:	mov	r1, r6
   2cf6c:	mov	r2, r8
   2cf70:	mov	r3, r7
   2cf74:	bl	26ec <InflateSkipData>
   2cf78:	ldr	r0, [fp, #24]
   2cf7c:	mov	r1, r6
   2cf80:	mov	r2, r4
   2cf84:	mov	r3, r8
   2cf88:	ldr	r9, [r0]
   2cf8c:	mov	r0, #1
   2cf90:	str	r0, [sp]
   2cf94:	mov	r0, r5
   2cf98:	bl	110f0 <ReadCompressedUInt64Data>
   2cf9c:	add	sl, sl, #1
   2cfa0:	sub	r0, r9, #1
   2cfa4:	add	r4, r4, #8
   2cfa8:	cmp	sl, r0
   2cfac:	blt	2cf64 <ReadCompressedDataSlab2+0x11c8>
   2cfb0:	b	2cea8 <ReadCompressedDataSlab2+0x110c>
   2cfb4:	ldr	r0, [sl, #4]
   2cfb8:	ldr	r1, [sp, #12]
   2cfbc:	ldr	r9, [fp, #16]
   2cfc0:	cmp	r0, #1
   2cfc4:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2cfc8:	sub	r0, r1, #1
   2cfcc:	mov	r7, #0
   2cfd0:	add	r6, sp, #24
   2cfd4:	str	r3, [sp, #16]
   2cfd8:	str	r0, [sp, #12]
   2cfdc:	b	2d044 <ReadCompressedDataSlab2+0x12a8>
   2cfe0:	ldr	r8, [fp, #8]
   2cfe4:	ldr	sl, [fp, #24]
   2cfe8:	ldr	r1, [fp, #20]
   2cfec:	ldr	r0, [fp, #12]
   2cff0:	ldr	r7, [sp, #16]
   2cff4:	ldr	r9, [fp, #16]
   2cff8:	ldr	r2, [sl]
   2cffc:	ldr	r1, [r1]
   2d000:	ldr	r0, [r0]
   2d004:	sub	r2, r2, #1
   2d008:	add	r0, r0, r7
   2d00c:	mul	r1, r2, r1
   2d010:	mov	r2, r8
   2d014:	mvn	r1, r1
   2d018:	add	r0, r0, r1
   2d01c:	ldr	r1, [r9]
   2d020:	sub	r3, r0, r1
   2d024:	mov	r0, r5
   2d028:	mov	r1, r6
   2d02c:	bl	26ec <InflateSkipData>
   2d030:	ldr	r7, [sp, #20]
   2d034:	ldr	r0, [sl, #4]
   2d038:	add	r7, r7, #1
   2d03c:	cmp	r7, r0
   2d040:	bge	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d044:	ldr	r3, [r9]
   2d048:	mov	r0, r5
   2d04c:	mov	r1, r6
   2d050:	mov	r2, r8
   2d054:	bl	26ec <InflateSkipData>
   2d058:	ldr	sl, [sl]
   2d05c:	mov	r0, #1
   2d060:	mov	r1, r6
   2d064:	mov	r2, r4
   2d068:	mov	r3, r8
   2d06c:	str	r0, [sp]
   2d070:	mov	r0, r5
   2d074:	bl	e3c0 <ReadCompressedInt64Data>
   2d078:	add	r4, r4, #8
   2d07c:	cmp	sl, #2
   2d080:	str	r7, [sp, #20]
   2d084:	blt	2cfe0 <ReadCompressedDataSlab2+0x1244>
   2d088:	ldr	r8, [fp, #8]
   2d08c:	ldr	r7, [sp, #12]
   2d090:	mov	sl, #0
   2d094:	mov	r0, r5
   2d098:	mov	r1, r6
   2d09c:	mov	r2, r8
   2d0a0:	mov	r3, r7
   2d0a4:	bl	26ec <InflateSkipData>
   2d0a8:	ldr	r0, [fp, #24]
   2d0ac:	mov	r1, r6
   2d0b0:	mov	r2, r4
   2d0b4:	mov	r3, r8
   2d0b8:	ldr	r9, [r0]
   2d0bc:	mov	r0, #1
   2d0c0:	str	r0, [sp]
   2d0c4:	mov	r0, r5
   2d0c8:	bl	e3c0 <ReadCompressedInt64Data>
   2d0cc:	add	sl, sl, #1
   2d0d0:	sub	r0, r9, #1
   2d0d4:	add	r4, r4, #8
   2d0d8:	cmp	sl, r0
   2d0dc:	blt	2d094 <ReadCompressedDataSlab2+0x12f8>
   2d0e0:	b	2cfe4 <ReadCompressedDataSlab2+0x1248>
   2d0e4:	ldr	r0, [sl, #4]
   2d0e8:	str	r3, [sp, #16]
   2d0ec:	cmp	r0, #1
   2d0f0:	ldr	r0, [fp, #16]
   2d0f4:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d0f8:	mov	r9, r8
   2d0fc:	mov	r6, r2
   2d100:	mov	r7, #0
   2d104:	ldr	r3, [r0]
   2d108:	add	r1, sp, #24
   2d10c:	mov	r0, r5
   2d110:	mov	r2, r9
   2d114:	mov	r8, r1
   2d118:	bl	26ec <InflateSkipData>
   2d11c:	ldr	r0, [sl]
   2d120:	mov	r1, r8
   2d124:	mov	r2, r4
   2d128:	mov	r3, r9
   2d12c:	str	r0, [sp]
   2d130:	mov	r0, r5
   2d134:	bl	6348 <ReadCompressedDoubleData>
   2d138:	ldr	r0, [r6]
   2d13c:	ldr	r1, [sp, #16]
   2d140:	mov	r8, r6
   2d144:	ldr	r6, [sl]
   2d148:	add	r0, r0, r1
   2d14c:	ldr	r1, [fp, #20]
   2d150:	sub	r2, r6, #1
   2d154:	ldr	r1, [r1]
   2d158:	mul	r1, r1, r2
   2d15c:	mov	r2, r9
   2d160:	mvn	r1, r1
   2d164:	add	r0, r0, r1
   2d168:	ldr	r1, [fp, #16]
   2d16c:	ldr	r1, [r1]
   2d170:	sub	r3, r0, r1
   2d174:	mov	r0, r5
   2d178:	add	r1, sp, #24
   2d17c:	bl	26ec <InflateSkipData>
   2d180:	ldr	r0, [sl, #4]
   2d184:	add	r7, r7, #1
   2d188:	add	r4, r4, r6, lsl #3
   2d18c:	mov	r6, r8
   2d190:	cmp	r7, r0
   2d194:	ldr	r0, [fp, #16]
   2d198:	blt	2d104 <ReadCompressedDataSlab2+0x1368>
   2d19c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d1a0:	ldr	r0, [sl, #4]
   2d1a4:	str	r3, [sp, #16]
   2d1a8:	cmp	r0, #1
   2d1ac:	ldr	r0, [fp, #16]
   2d1b0:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d1b4:	mov	r9, r8
   2d1b8:	mov	r6, r2
   2d1bc:	mov	r7, #0
   2d1c0:	ldr	r3, [r0]
   2d1c4:	add	r1, sp, #24
   2d1c8:	mov	r0, r5
   2d1cc:	mov	r2, r9
   2d1d0:	mov	r8, r1
   2d1d4:	bl	26ec <InflateSkipData>
   2d1d8:	ldr	r0, [sl]
   2d1dc:	mov	r1, r8
   2d1e0:	mov	r2, r4
   2d1e4:	mov	r3, r9
   2d1e8:	str	r0, [sp]
   2d1ec:	mov	r0, r5
   2d1f0:	bl	b6c0 <ReadCompressedSingleData>
   2d1f4:	ldr	r0, [r6]
   2d1f8:	ldr	r1, [sp, #16]
   2d1fc:	mov	r8, r6
   2d200:	ldr	r6, [sl]
   2d204:	add	r0, r0, r1
   2d208:	ldr	r1, [fp, #20]
   2d20c:	sub	r2, r6, #1
   2d210:	ldr	r1, [r1]
   2d214:	mul	r1, r1, r2
   2d218:	mov	r2, r9
   2d21c:	mvn	r1, r1
   2d220:	add	r0, r0, r1
   2d224:	ldr	r1, [fp, #16]
   2d228:	ldr	r1, [r1]
   2d22c:	sub	r3, r0, r1
   2d230:	mov	r0, r5
   2d234:	add	r1, sp, #24
   2d238:	bl	26ec <InflateSkipData>
   2d23c:	ldr	r0, [sl, #4]
   2d240:	add	r7, r7, #1
   2d244:	add	r4, r4, r6, lsl #2
   2d248:	mov	r6, r8
   2d24c:	cmp	r7, r0
   2d250:	ldr	r0, [fp, #16]
   2d254:	blt	2d1c0 <ReadCompressedDataSlab2+0x1424>
   2d258:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d25c:	ldr	r0, [sl, #4]
   2d260:	str	r3, [sp, #16]
   2d264:	cmp	r0, #1
   2d268:	ldr	r0, [fp, #16]
   2d26c:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d270:	mov	r9, r8
   2d274:	mov	r6, r2
   2d278:	mov	r7, #0
   2d27c:	ldr	r3, [r0]
   2d280:	add	r1, sp, #24
   2d284:	mov	r0, r5
   2d288:	mov	r2, r9
   2d28c:	mov	r8, r1
   2d290:	bl	26ec <InflateSkipData>
   2d294:	ldr	r0, [sl]
   2d298:	mov	r1, r8
   2d29c:	mov	r2, r4
   2d2a0:	mov	r3, r9
   2d2a4:	str	r0, [sp]
   2d2a8:	mov	r0, r5
   2d2ac:	bl	1e858 <ReadCompressedInt8Data>
   2d2b0:	ldr	r0, [r6]
   2d2b4:	ldr	r1, [sp, #16]
   2d2b8:	mov	r8, r6
   2d2bc:	ldr	r6, [sl]
   2d2c0:	add	r0, r0, r1
   2d2c4:	ldr	r1, [fp, #20]
   2d2c8:	sub	r2, r6, #1
   2d2cc:	ldr	r1, [r1]
   2d2d0:	mul	r1, r1, r2
   2d2d4:	mov	r2, r9
   2d2d8:	mvn	r1, r1
   2d2dc:	add	r0, r0, r1
   2d2e0:	ldr	r1, [fp, #16]
   2d2e4:	ldr	r1, [r1]
   2d2e8:	sub	r3, r0, r1
   2d2ec:	mov	r0, r5
   2d2f0:	add	r1, sp, #24
   2d2f4:	bl	26ec <InflateSkipData>
   2d2f8:	ldr	r0, [sl, #4]
   2d2fc:	add	r7, r7, #1
   2d300:	add	r4, r4, r6
   2d304:	mov	r6, r8
   2d308:	cmp	r7, r0
   2d30c:	ldr	r0, [fp, #16]
   2d310:	blt	2d27c <ReadCompressedDataSlab2+0x14e0>
   2d314:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d318:	ldr	r0, [sl, #4]
   2d31c:	str	r3, [sp, #16]
   2d320:	cmp	r0, #1
   2d324:	ldr	r0, [fp, #16]
   2d328:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d32c:	mov	r9, r8
   2d330:	mov	r6, r2
   2d334:	mov	r7, #0
   2d338:	ldr	r3, [r0]
   2d33c:	add	r1, sp, #24
   2d340:	mov	r0, r5
   2d344:	mov	r2, r9
   2d348:	mov	r8, r1
   2d34c:	bl	26ec <InflateSkipData>
   2d350:	ldr	r0, [sl]
   2d354:	mov	r1, r8
   2d358:	mov	r2, r4
   2d35c:	mov	r3, r9
   2d360:	str	r0, [sp]
   2d364:	mov	r0, r5
   2d368:	bl	21180 <ReadCompressedUInt8Data>
   2d36c:	ldr	r0, [r6]
   2d370:	ldr	r1, [sp, #16]
   2d374:	mov	r8, r6
   2d378:	ldr	r6, [sl]
   2d37c:	add	r0, r0, r1
   2d380:	ldr	r1, [fp, #20]
   2d384:	sub	r2, r6, #1
   2d388:	ldr	r1, [r1]
   2d38c:	mul	r1, r1, r2
   2d390:	mov	r2, r9
   2d394:	mvn	r1, r1
   2d398:	add	r0, r0, r1
   2d39c:	ldr	r1, [fp, #16]
   2d3a0:	ldr	r1, [r1]
   2d3a4:	sub	r3, r0, r1
   2d3a8:	mov	r0, r5
   2d3ac:	add	r1, sp, #24
   2d3b0:	bl	26ec <InflateSkipData>
   2d3b4:	ldr	r0, [sl, #4]
   2d3b8:	add	r7, r7, #1
   2d3bc:	add	r4, r4, r6
   2d3c0:	mov	r6, r8
   2d3c4:	cmp	r7, r0
   2d3c8:	ldr	r0, [fp, #16]
   2d3cc:	blt	2d338 <ReadCompressedDataSlab2+0x159c>
   2d3d0:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d3d4:	ldr	r0, [sl, #4]
   2d3d8:	str	r3, [sp, #16]
   2d3dc:	cmp	r0, #1
   2d3e0:	ldr	r0, [fp, #16]
   2d3e4:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d3e8:	mov	r9, r8
   2d3ec:	mov	r6, r2
   2d3f0:	mov	r7, #0
   2d3f4:	ldr	r3, [r0]
   2d3f8:	add	r1, sp, #24
   2d3fc:	mov	r0, r5
   2d400:	mov	r2, r9
   2d404:	mov	r8, r1
   2d408:	bl	26ec <InflateSkipData>
   2d40c:	ldr	r0, [sl]
   2d410:	mov	r1, r8
   2d414:	mov	r2, r4
   2d418:	mov	r3, r9
   2d41c:	str	r0, [sp]
   2d420:	mov	r0, r5
   2d424:	bl	194f4 <ReadCompressedInt16Data>
   2d428:	ldr	r0, [r6]
   2d42c:	ldr	r1, [sp, #16]
   2d430:	mov	r8, r6
   2d434:	ldr	r6, [sl]
   2d438:	add	r0, r0, r1
   2d43c:	ldr	r1, [fp, #20]
   2d440:	sub	r2, r6, #1
   2d444:	ldr	r1, [r1]
   2d448:	mul	r1, r1, r2
   2d44c:	mov	r2, r9
   2d450:	mvn	r1, r1
   2d454:	add	r0, r0, r1
   2d458:	ldr	r1, [fp, #16]
   2d45c:	ldr	r1, [r1]
   2d460:	sub	r3, r0, r1
   2d464:	mov	r0, r5
   2d468:	add	r1, sp, #24
   2d46c:	bl	26ec <InflateSkipData>
   2d470:	ldr	r0, [sl, #4]
   2d474:	add	r7, r7, #1
   2d478:	add	r4, r4, r6, lsl #1
   2d47c:	mov	r6, r8
   2d480:	cmp	r7, r0
   2d484:	ldr	r0, [fp, #16]
   2d488:	blt	2d3f4 <ReadCompressedDataSlab2+0x1658>
   2d48c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d490:	ldr	r0, [sl, #4]
   2d494:	str	r3, [sp, #12]
   2d498:	cmp	r0, #1
   2d49c:	ldr	r0, [fp, #16]
   2d4a0:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d4a4:	mov	r9, r8
   2d4a8:	mov	r6, r2
   2d4ac:	mov	r7, #0
   2d4b0:	ldr	r3, [r0]
   2d4b4:	add	r1, sp, #24
   2d4b8:	mov	r0, r5
   2d4bc:	mov	r2, r9
   2d4c0:	mov	r8, r1
   2d4c4:	bl	26ec <InflateSkipData>
   2d4c8:	ldr	r0, [sl]
   2d4cc:	mov	r1, r8
   2d4d0:	mov	r2, r4
   2d4d4:	mov	r3, r9
   2d4d8:	str	r0, [sp]
   2d4dc:	mov	r0, r5
   2d4e0:	bl	1bf30 <ReadCompressedUInt16Data>
   2d4e4:	ldr	r0, [r6]
   2d4e8:	ldr	r1, [sp, #12]
   2d4ec:	mov	r8, r6
   2d4f0:	ldr	r6, [sl]
   2d4f4:	add	r0, r0, r1
   2d4f8:	ldr	r1, [fp, #20]
   2d4fc:	sub	r2, r6, #1
   2d500:	ldr	r1, [r1]
   2d504:	mul	r1, r1, r2
   2d508:	mov	r2, r9
   2d50c:	mvn	r1, r1
   2d510:	add	r0, r0, r1
   2d514:	ldr	r1, [fp, #16]
   2d518:	ldr	r1, [r1]
   2d51c:	sub	r3, r0, r1
   2d520:	mov	r0, r5
   2d524:	add	r1, sp, #24
   2d528:	bl	26ec <InflateSkipData>
   2d52c:	ldr	r0, [sl, #4]
   2d530:	add	r7, r7, #1
   2d534:	add	r4, r4, r6, lsl #1
   2d538:	mov	r6, r8
   2d53c:	cmp	r7, r0
   2d540:	ldr	r0, [fp, #16]
   2d544:	blt	2d4b0 <ReadCompressedDataSlab2+0x1714>
   2d548:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d54c:	ldr	r0, [sl, #4]
   2d550:	str	r3, [sp, #16]
   2d554:	cmp	r0, #1
   2d558:	ldr	r0, [fp, #16]
   2d55c:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d560:	mov	r9, r8
   2d564:	mov	r6, r2
   2d568:	mov	r7, #0
   2d56c:	ldr	r3, [r0]
   2d570:	add	r1, sp, #24
   2d574:	mov	r0, r5
   2d578:	mov	r2, r9
   2d57c:	mov	r8, r1
   2d580:	bl	26ec <InflateSkipData>
   2d584:	ldr	r0, [sl]
   2d588:	mov	r1, r8
   2d58c:	mov	r2, r4
   2d590:	mov	r3, r9
   2d594:	str	r0, [sp]
   2d598:	mov	r0, r5
   2d59c:	bl	13e0c <ReadCompressedInt32Data>
   2d5a0:	ldr	r0, [r6]
   2d5a4:	ldr	r1, [sp, #16]
   2d5a8:	mov	r8, r6
   2d5ac:	ldr	r6, [sl]
   2d5b0:	add	r0, r0, r1
   2d5b4:	ldr	r1, [fp, #20]
   2d5b8:	sub	r2, r6, #1
   2d5bc:	ldr	r1, [r1]
   2d5c0:	mul	r1, r1, r2
   2d5c4:	mov	r2, r9
   2d5c8:	mvn	r1, r1
   2d5cc:	add	r0, r0, r1
   2d5d0:	ldr	r1, [fp, #16]
   2d5d4:	ldr	r1, [r1]
   2d5d8:	sub	r3, r0, r1
   2d5dc:	mov	r0, r5
   2d5e0:	add	r1, sp, #24
   2d5e4:	bl	26ec <InflateSkipData>
   2d5e8:	ldr	r0, [sl, #4]
   2d5ec:	add	r7, r7, #1
   2d5f0:	add	r4, r4, r6, lsl #2
   2d5f4:	mov	r6, r8
   2d5f8:	cmp	r7, r0
   2d5fc:	ldr	r0, [fp, #16]
   2d600:	blt	2d56c <ReadCompressedDataSlab2+0x17d0>
   2d604:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d608:	ldr	r0, [sl, #4]
   2d60c:	str	r3, [sp, #16]
   2d610:	cmp	r0, #1
   2d614:	ldr	r0, [fp, #16]
   2d618:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d61c:	mov	r9, r8
   2d620:	mov	r6, r2
   2d624:	mov	r7, #0
   2d628:	ldr	r3, [r0]
   2d62c:	add	r1, sp, #24
   2d630:	mov	r0, r5
   2d634:	mov	r2, r9
   2d638:	mov	r8, r1
   2d63c:	bl	26ec <InflateSkipData>
   2d640:	ldr	r0, [sl]
   2d644:	mov	r1, r8
   2d648:	mov	r2, r4
   2d64c:	mov	r3, r9
   2d650:	str	r0, [sp]
   2d654:	mov	r0, r5
   2d658:	bl	16ab8 <ReadCompressedUInt32Data>
   2d65c:	ldr	r0, [r6]
   2d660:	ldr	r1, [sp, #16]
   2d664:	mov	r8, r6
   2d668:	ldr	r6, [sl]
   2d66c:	add	r0, r0, r1
   2d670:	ldr	r1, [fp, #20]
   2d674:	sub	r2, r6, #1
   2d678:	ldr	r1, [r1]
   2d67c:	mul	r1, r1, r2
   2d680:	mov	r2, r9
   2d684:	mvn	r1, r1
   2d688:	add	r0, r0, r1
   2d68c:	ldr	r1, [fp, #16]
   2d690:	ldr	r1, [r1]
   2d694:	sub	r3, r0, r1
   2d698:	mov	r0, r5
   2d69c:	add	r1, sp, #24
   2d6a0:	bl	26ec <InflateSkipData>
   2d6a4:	ldr	r0, [sl, #4]
   2d6a8:	add	r7, r7, #1
   2d6ac:	add	r4, r4, r6, lsl #2
   2d6b0:	mov	r6, r8
   2d6b4:	cmp	r7, r0
   2d6b8:	ldr	r0, [fp, #16]
   2d6bc:	blt	2d628 <ReadCompressedDataSlab2+0x188c>
   2d6c0:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d6c4:	ldr	r0, [sl, #4]
   2d6c8:	str	r3, [sp, #16]
   2d6cc:	cmp	r0, #1
   2d6d0:	ldr	r0, [fp, #16]
   2d6d4:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d6d8:	mov	r9, r8
   2d6dc:	mov	r6, r2
   2d6e0:	mov	r7, #0
   2d6e4:	ldr	r3, [r0]
   2d6e8:	add	r1, sp, #24
   2d6ec:	mov	r0, r5
   2d6f0:	mov	r2, r9
   2d6f4:	mov	r8, r1
   2d6f8:	bl	26ec <InflateSkipData>
   2d6fc:	ldr	r0, [sl]
   2d700:	mov	r1, r8
   2d704:	mov	r2, r4
   2d708:	mov	r3, r9
   2d70c:	str	r0, [sp]
   2d710:	mov	r0, r5
   2d714:	bl	110f0 <ReadCompressedUInt64Data>
   2d718:	ldr	r0, [r6]
   2d71c:	ldr	r1, [sp, #16]
   2d720:	mov	r8, r6
   2d724:	ldr	r6, [sl]
   2d728:	add	r0, r0, r1
   2d72c:	ldr	r1, [fp, #20]
   2d730:	sub	r2, r6, #1
   2d734:	ldr	r1, [r1]
   2d738:	mul	r1, r1, r2
   2d73c:	mov	r2, r9
   2d740:	mvn	r1, r1
   2d744:	add	r0, r0, r1
   2d748:	ldr	r1, [fp, #16]
   2d74c:	ldr	r1, [r1]
   2d750:	sub	r3, r0, r1
   2d754:	mov	r0, r5
   2d758:	add	r1, sp, #24
   2d75c:	bl	26ec <InflateSkipData>
   2d760:	ldr	r0, [sl, #4]
   2d764:	add	r7, r7, #1
   2d768:	add	r4, r4, r6, lsl #3
   2d76c:	mov	r6, r8
   2d770:	cmp	r7, r0
   2d774:	ldr	r0, [fp, #16]
   2d778:	blt	2d6e4 <ReadCompressedDataSlab2+0x1948>
   2d77c:	b	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d780:	ldr	r0, [sl, #4]
   2d784:	str	r3, [sp, #16]
   2d788:	cmp	r0, #1
   2d78c:	ldr	r0, [fp, #16]
   2d790:	blt	2d838 <ReadCompressedDataSlab2+0x1a9c>
   2d794:	mov	r9, r8
   2d798:	mov	r6, r2
   2d79c:	mov	r7, #0
   2d7a0:	ldr	r3, [r0]
   2d7a4:	add	r1, sp, #24
   2d7a8:	mov	r0, r5
   2d7ac:	mov	r2, r9
   2d7b0:	mov	r8, r1
   2d7b4:	bl	26ec <InflateSkipData>
   2d7b8:	ldr	r0, [sl]
   2d7bc:	mov	r1, r8
   2d7c0:	mov	r2, r4
   2d7c4:	mov	r3, r9
   2d7c8:	str	r0, [sp]
   2d7cc:	mov	r0, r5
   2d7d0:	bl	e3c0 <ReadCompressedInt64Data>
   2d7d4:	ldr	r0, [r6]
   2d7d8:	ldr	r1, [sp, #16]
   2d7dc:	mov	r8, r6
   2d7e0:	ldr	r6, [sl]
   2d7e4:	add	r0, r0, r1
   2d7e8:	ldr	r1, [fp, #20]
   2d7ec:	sub	r2, r6, #1
   2d7f0:	ldr	r1, [r1]
   2d7f4:	mul	r1, r1, r2
   2d7f8:	mov	r2, r9
   2d7fc:	mvn	r1, r1
   2d800:	add	r0, r0, r1
   2d804:	ldr	r1, [fp, #16]
   2d808:	ldr	r1, [r1]
   2d80c:	sub	r3, r0, r1
   2d810:	mov	r0, r5
   2d814:	add	r1, sp, #24
   2d818:	bl	26ec <InflateSkipData>
   2d81c:	ldr	r0, [sl, #4]
   2d820:	add	r7, r7, #1
   2d824:	add	r4, r4, r6, lsl #3
   2d828:	mov	r6, r8
   2d82c:	cmp	r7, r0
   2d830:	ldr	r0, [fp, #16]
   2d834:	blt	2d7a0 <ReadCompressedDataSlab2+0x1a04>
   2d838:	add	r0, sp, #24
   2d83c:	bl	193c <inflateEnd@plt>
   2d840:	mov	r0, #0
   2d844:	sub	sp, fp, #28
   2d848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d84c:	andeq	r0, r0, r0

0002d850 <Mat_Create5>:
   2d850:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2d854:	add	fp, sp, #24
   2d858:	sub	sp, sp, #24
   2d85c:	mov	r4, #0
   2d860:	mov	r8, r1
   2d864:	mov	r6, r0
   2d868:	strh	r4, [sp, #22]
   2d86c:	ldr	r1, [pc, #408]	; 2da0c <Mat_Create5+0x1bc>
   2d870:	add	r1, pc, r1
   2d874:	bl	17e0 <fopen@plt>
   2d878:	cmp	r0, #0
   2d87c:	beq	2da00 <Mat_Create5+0x1b0>
   2d880:	mov	r5, r0
   2d884:	mov	r0, #44	; 0x2c
   2d888:	bl	18d0 <malloc@plt>
   2d88c:	cmp	r0, #0
   2d890:	beq	2d934 <Mat_Create5+0xe4>
   2d894:	mov	r4, r0
   2d898:	mov	r0, #128	; 0x80
   2d89c:	mov	r7, #0
   2d8a0:	str	r0, [r4, #28]
   2d8a4:	mov	r0, #0
   2d8a8:	str	r7, [r4, #32]
   2d8ac:	str	r7, [r4, #36]	; 0x24
   2d8b0:	str	r7, [r4, #40]	; 0x28
   2d8b4:	str	r7, [r4, #16]
   2d8b8:	bl	1834 <time@plt>
   2d8bc:	str	r0, [sp, #16]
   2d8c0:	str	r5, [r4]
   2d8c4:	mov	r1, r6
   2d8c8:	ldr	r0, [pc, #320]	; 2da10 <Mat_Create5+0x1c0>
   2d8cc:	add	r0, pc, r0
   2d8d0:	bl	1da4 <strdup_printf>
   2d8d4:	str	r0, [r4, #12]
   2d8d8:	mov	r0, #128	; 0x80
   2d8dc:	mov	r9, #1
   2d8e0:	str	r7, [r4, #20]
   2d8e4:	str	r9, [r4, #24]
   2d8e8:	bl	18d0 <malloc@plt>
   2d8ec:	mov	r7, r0
   2d8f0:	str	r0, [r4, #4]
   2d8f4:	mov	r0, #8
   2d8f8:	bl	18d0 <malloc@plt>
   2d8fc:	mov	r6, r0
   2d900:	str	r0, [r4, #8]
   2d904:	mov	r0, r7
   2d908:	mov	r1, #32
   2d90c:	mov	r2, #128	; 0x80
   2d910:	bl	1990 <memset@plt>
   2d914:	cmp	r8, #0
   2d918:	beq	2d944 <Mat_Create5+0xf4>
   2d91c:	ldr	r2, [pc, #248]	; 2da1c <Mat_Create5+0x1cc>
   2d920:	mov	r0, r7
   2d924:	mov	r1, #116	; 0x74
   2d928:	mov	r3, r8
   2d92c:	add	r2, pc, r2
   2d930:	b	2d97c <Mat_Create5+0x12c>
   2d934:	mov	r0, r5
   2d938:	bl	19cc <fclose@plt>
   2d93c:	mov	r4, #0
   2d940:	b	2da00 <Mat_Create5+0x1b0>
   2d944:	add	r0, sp, #16
   2d948:	bl	1858 <ctime@plt>
   2d94c:	mov	r1, #15
   2d950:	mov	r2, #5
   2d954:	str	r0, [sp, #12]
   2d958:	str	r9, [sp]
   2d95c:	mov	r0, r7
   2d960:	str	r1, [sp, #8]
   2d964:	str	r2, [sp, #4]
   2d968:	mov	r1, #116	; 0x74
   2d96c:	ldr	r2, [pc, #160]	; 2da14 <Mat_Create5+0x1c4>
   2d970:	ldr	r3, [pc, #160]	; 2da18 <Mat_Create5+0x1c8>
   2d974:	add	r2, pc, r2
   2d978:	add	r3, pc, r3
   2d97c:	bl	1978 <snprintf@plt>
   2d980:	cmp	r0, #116	; 0x74
   2d984:	mov	r1, #1
   2d988:	mov	r2, #116	; 0x74
   2d98c:	mov	r3, r5
   2d990:	movcs	r0, #0
   2d994:	strbcs	r0, [r7, #115]	; 0x73
   2d998:	movw	r0, #8224	; 0x2020
   2d99c:	movt	r0, #8224	; 0x2020
   2d9a0:	str	r0, [r6, #4]
   2d9a4:	str	r0, [r6]
   2d9a8:	mov	r0, #256	; 0x100
   2d9ac:	str	r0, [r4, #16]
   2d9b0:	strh	r0, [sp, #20]
   2d9b4:	movw	r0, #19785	; 0x4d49
   2d9b8:	strh	r0, [sp, #22]
   2d9bc:	mov	r0, r7
   2d9c0:	bl	18ac <fwrite@plt>
   2d9c4:	mov	r0, r6
   2d9c8:	mov	r1, #1
   2d9cc:	mov	r2, #8
   2d9d0:	mov	r3, r5
   2d9d4:	bl	18ac <fwrite@plt>
   2d9d8:	add	r0, sp, #20
   2d9dc:	mov	r1, #2
   2d9e0:	mov	r2, #1
   2d9e4:	mov	r3, r5
   2d9e8:	bl	18ac <fwrite@plt>
   2d9ec:	add	r0, sp, #22
   2d9f0:	mov	r1, #2
   2d9f4:	mov	r2, #1
   2d9f8:	mov	r3, r5
   2d9fc:	bl	18ac <fwrite@plt>
   2da00:	mov	r0, r4
   2da04:	sub	sp, fp, #24
   2da08:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2da0c:	.word	0x0003e53d
   2da10:	.word	0x0003edff
   2da14:	.word	0x0003e43d
   2da18:	.word	0x0003e481
   2da1c:	.word	0x0003ed9f

0002da20 <Mat_VarRead5>:
   2da20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da24:	add	fp, sp, #28
   2da28:	sub	sp, sp, #44	; 0x2c
   2da2c:	mov	r4, r0
   2da30:	mov	r0, #1
   2da34:	cmp	r1, #0
   2da38:	str	r0, [fp, #-32]	; 0xffffffe0
   2da3c:	beq	2dfb4 <Mat_VarRead5+0x594>
   2da40:	ldr	r0, [r1, #4]
   2da44:	mov	r5, r1
   2da48:	cmp	r0, #0
   2da4c:	beq	2dfb4 <Mat_VarRead5+0x594>
   2da50:	mov	r9, r5
   2da54:	ldr	r0, [r9, #52]!	; 0x34
   2da58:	ldr	r1, [r0, #16]
   2da5c:	cmp	r1, #0
   2da60:	beq	2da78 <Mat_VarRead5+0x58>
   2da64:	str	r1, [r5, #40]	; 0x28
   2da68:	mov	r1, #0
   2da6c:	str	r1, [r0, #16]
   2da70:	sub	sp, fp, #28
   2da74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2da78:	ldr	r0, [r4]
   2da7c:	bl	1840 <ftell@plt>
   2da80:	cmn	r0, #1
   2da84:	beq	2daac <Mat_VarRead5+0x8c>
   2da88:	mov	sl, r0
   2da8c:	sub	r1, fp, #32
   2da90:	mov	r0, r5
   2da94:	bl	665f0 <SafeMulDims>
   2da98:	cmp	r0, #0
   2da9c:	beq	2dac0 <Mat_VarRead5+0xa0>
   2daa0:	ldr	r0, [pc, #3916]	; 2e9f4 <Mat_VarRead5+0xfd4>
   2daa4:	add	r0, pc, r0
   2daa8:	b	2dab4 <Mat_VarRead5+0x94>
   2daac:	ldr	r0, [pc, #3908]	; 2e9f8 <Mat_VarRead5+0xfd8>
   2dab0:	add	r0, pc, r0
   2dab4:	bl	19b4 <Mat_Critical@plt>
   2dab8:	sub	sp, fp, #28
   2dabc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dac0:	ldr	r1, [r5, #16]
   2dac4:	cmp	r1, #16
   2dac8:	bhi	2dc18 <Mat_VarRead5+0x1f8>
   2dacc:	ldr	r7, [r4, #20]
   2dad0:	add	r0, pc, #4
   2dad4:	ldr	r2, [r0, r1, lsl #2]
   2dad8:	add	pc, r0, r2
   2dadc:	.word	0x00000044
   2dae0:	.word	0x00000074
   2dae4:	.word	0x000000bc
   2dae8:	.word	0x0000013c
   2daec:	.word	0x00000148
   2daf0:	.word	0x000001e8
   2daf4:	.word	0x000002b8
   2daf8:	.word	0x000002d8
   2dafc:	.word	0x000002f8
   2db00:	.word	0x00000318
   2db04:	.word	0x00000338
   2db08:	.word	0x00000358
   2db0c:	.word	0x00000378
   2db10:	.word	0x00000398
   2db14:	.word	0x000003b8
   2db18:	.word	0x000003f4
   2db1c:	.word	0x000004e0
   2db20:	add	r0, pc, #920	; 0x398
   2db24:	mov	r6, r5
   2db28:	vld1.64	{d16-d17}, [r0 :128]
   2db2c:	mov	r0, #32
   2db30:	vst1.32	{d16-d17}, [r6], r0
   2db34:	mov	r0, #8
   2db38:	bl	18d0 <malloc@plt>
   2db3c:	mov	r1, #0
   2db40:	str	r0, [r6]
   2db44:	str	r1, [r0]
   2db48:	str	r1, [r0, #4]
   2db4c:	b	2def4 <Mat_VarRead5+0x4d4>
   2db50:	ldr	r7, [r5, #40]	; 0x28
   2db54:	cmp	r7, #0
   2db58:	beq	2e0dc <Mat_VarRead5+0x6bc>
   2db5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2db60:	cmp	r0, #0
   2db64:	beq	2e014 <Mat_VarRead5+0x5f4>
   2db68:	mov	r6, #0
   2db6c:	b	2db7c <Mat_VarRead5+0x15c>
   2db70:	add	r6, r6, #1
   2db74:	cmp	r6, r0
   2db78:	bcs	2e014 <Mat_VarRead5+0x5f4>
   2db7c:	ldr	r1, [r7, r6, lsl #2]
   2db80:	cmp	r1, #0
   2db84:	beq	2db70 <Mat_VarRead5+0x150>
   2db88:	mov	r0, r4
   2db8c:	bl	2da20 <Mat_VarRead5>
   2db90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2db94:	b	2db70 <Mat_VarRead5+0x150>
   2db98:	mov	r0, #22
   2db9c:	str	r0, [r5, #8]
   2dba0:	ldr	r0, [r5]
   2dba4:	cmp	r0, #0
   2dba8:	beq	2def4 <Mat_VarRead5+0x4d4>
   2dbac:	ldr	r0, [r5, #12]
   2dbb0:	cmp	r0, #0
   2dbb4:	beq	2def4 <Mat_VarRead5+0x4d4>
   2dbb8:	ldr	r0, [r5, #40]	; 0x28
   2dbbc:	cmp	r0, #0
   2dbc0:	beq	2def4 <Mat_VarRead5+0x4d4>
   2dbc4:	ldr	r0, [r5, #52]	; 0x34
   2dbc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dbcc:	ldr	r2, [r0, #4]
   2dbd0:	add	r0, sp, #32
   2dbd4:	bl	6664c <SafeMul>
   2dbd8:	ldr	r0, [sp, #32]
   2dbdc:	cmp	r0, #0
   2dbe0:	beq	2def4 <Mat_VarRead5+0x4d4>
   2dbe4:	ldr	r7, [r5, #40]	; 0x28
   2dbe8:	mov	r6, #0
   2dbec:	b	2dbfc <Mat_VarRead5+0x1dc>
   2dbf0:	add	r6, r6, #1
   2dbf4:	cmp	r6, r0
   2dbf8:	bcs	2def4 <Mat_VarRead5+0x4d4>
   2dbfc:	ldr	r1, [r7, r6, lsl #2]
   2dc00:	cmp	r1, #0
   2dc04:	beq	2dbf0 <Mat_VarRead5+0x1d0>
   2dc08:	mov	r0, r4
   2dc0c:	bl	2da20 <Mat_VarRead5>
   2dc10:	ldr	r0, [sp, #32]
   2dc14:	b	2dbf0 <Mat_VarRead5+0x1d0>
   2dc18:	ldr	r0, [pc, #4068]	; 2ec04 <Mat_VarRead5+0x11e4>
   2dc1c:	add	r0, pc, r0
   2dc20:	b	2e0e8 <Mat_VarRead5+0x6c8>
   2dc24:	ldr	r1, [r5, #52]	; 0x34
   2dc28:	ldr	r0, [r4]
   2dc2c:	mov	r2, #0
   2dc30:	mov	r6, #0
   2dc34:	ldr	r1, [r1]
   2dc38:	bl	1a2c <fseek@plt>
   2dc3c:	ldr	r0, [r5, #48]	; 0x30
   2dc40:	cmp	r0, #1
   2dc44:	bne	2e020 <Mat_VarRead5+0x600>
   2dc48:	ldr	r0, [r9]
   2dc4c:	add	r8, sp, #32
   2dc50:	mov	r2, r8
   2dc54:	ldr	r1, [r0, #12]
   2dc58:	mov	r0, r4
   2dc5c:	str	r6, [r1, #4]
   2dc60:	bl	3108 <InflateDataType>
   2dc64:	mov	r6, r7
   2dc68:	cmp	r7, #0
   2dc6c:	beq	2dc78 <Mat_VarRead5+0x258>
   2dc70:	add	r0, sp, #32
   2dc74:	bl	1c0c <Mat_uint32Swap>
   2dc78:	ldr	r0, [sp, #32]
   2dc7c:	uxtb	r7, r0
   2dc80:	cmp	r7, #25
   2dc84:	movcs	r7, #0
   2dc88:	cmp	r0, #65536	; 0x10000
   2dc8c:	bcs	2e220 <Mat_VarRead5+0x800>
   2dc90:	ldr	r0, [r9]
   2dc94:	add	r8, r8, #4
   2dc98:	mov	r2, r8
   2dc9c:	ldr	r1, [r0, #12]
   2dca0:	mov	r0, r4
   2dca4:	bl	3108 <InflateDataType>
   2dca8:	cmp	r6, #0
   2dcac:	beq	2dcb8 <Mat_VarRead5+0x298>
   2dcb0:	mov	r0, r8
   2dcb4:	bl	1c0c <Mat_uint32Swap>
   2dcb8:	ldr	r6, [sp, #36]	; 0x24
   2dcbc:	mov	r0, #0
   2dcc0:	b	2e228 <Mat_VarRead5+0x808>
   2dcc4:	mov	r0, #0
   2dcc8:	str	r7, [sp, #20]
   2dccc:	str	r0, [sp, #28]
   2dcd0:	mov	r0, #28
   2dcd4:	str	r0, [r5, #12]
   2dcd8:	mov	r0, #28
   2dcdc:	bl	18d0 <malloc@plt>
   2dce0:	cmp	r0, #0
   2dce4:	str	r0, [r5, #40]	; 0x28
   2dce8:	beq	2e0f0 <Mat_VarRead5+0x6d0>
   2dcec:	mov	r7, r0
   2dcf0:	ldr	r0, [r5]
   2dcf4:	mov	r2, #0
   2dcf8:	mov	r6, #0
   2dcfc:	str	r0, [r7]
   2dd00:	ldr	r1, [r5, #52]	; 0x34
   2dd04:	ldr	r0, [r4]
   2dd08:	ldr	r1, [r1]
   2dd0c:	bl	1a2c <fseek@plt>
   2dd10:	ldr	r0, [r5, #48]	; 0x30
   2dd14:	str	r7, [sp, #24]
   2dd18:	cmp	r0, #1
   2dd1c:	bne	2e100 <Mat_VarRead5+0x6e0>
   2dd20:	ldr	r0, [r9]
   2dd24:	add	r2, sp, #32
   2dd28:	ldr	r1, [r0, #12]
   2dd2c:	mov	r0, r4
   2dd30:	str	r6, [r1, #4]
   2dd34:	bl	3108 <InflateDataType>
   2dd38:	ldr	r0, [r4, #20]
   2dd3c:	cmp	r0, #0
   2dd40:	beq	2dd4c <Mat_VarRead5+0x32c>
   2dd44:	add	r0, sp, #32
   2dd48:	bl	1c0c <Mat_uint32Swap>
   2dd4c:	ldr	r0, [sp, #32]
   2dd50:	mov	r1, #0
   2dd54:	uxtb	r6, r0
   2dd58:	cmp	r6, #25
   2dd5c:	movcs	r6, r1
   2dd60:	cmp	r0, #65536	; 0x10000
   2dd64:	bcs	2e178 <Mat_VarRead5+0x758>
   2dd68:	mov	r0, #0
   2dd6c:	add	r2, sp, #28
   2dd70:	mov	r3, #5
   2dd74:	str	r0, [sp, #16]
   2dd78:	ldr	r0, [r9]
   2dd7c:	ldr	r1, [r0, #12]
   2dd80:	mov	r0, #1
   2dd84:	str	r0, [sp]
   2dd88:	mov	r0, r4
   2dd8c:	bl	13e0c <ReadCompressedInt32Data>
   2dd90:	b	2e188 <Mat_VarRead5+0x768>
   2dd94:	ldr	r1, [r5, #52]	; 0x34
   2dd98:	ldr	r0, [r4]
   2dd9c:	mov	r2, #0
   2dda0:	ldr	r1, [r1]
   2dda4:	bl	1a2c <fseek@plt>
   2dda8:	mov	r0, #8
   2ddac:	mov	r1, #9
   2ddb0:	b	2deec <Mat_VarRead5+0x4cc>
   2ddb4:	ldr	r1, [r5, #52]	; 0x34
   2ddb8:	ldr	r0, [r4]
   2ddbc:	mov	r2, #0
   2ddc0:	ldr	r1, [r1]
   2ddc4:	bl	1a2c <fseek@plt>
   2ddc8:	mov	r0, #4
   2ddcc:	mov	r1, #7
   2ddd0:	b	2deec <Mat_VarRead5+0x4cc>
   2ddd4:	ldr	r1, [r5, #52]	; 0x34
   2ddd8:	ldr	r0, [r4]
   2dddc:	mov	r2, #0
   2dde0:	ldr	r1, [r1]
   2dde4:	bl	1a2c <fseek@plt>
   2dde8:	mov	r0, #1
   2ddec:	str	r0, [r5, #8]
   2ddf0:	b	2def0 <Mat_VarRead5+0x4d0>
   2ddf4:	ldr	r1, [r5, #52]	; 0x34
   2ddf8:	ldr	r0, [r4]
   2ddfc:	mov	r2, #0
   2de00:	ldr	r1, [r1]
   2de04:	bl	1a2c <fseek@plt>
   2de08:	mov	r0, #1
   2de0c:	mov	r1, #2
   2de10:	b	2deec <Mat_VarRead5+0x4cc>
   2de14:	ldr	r1, [r5, #52]	; 0x34
   2de18:	ldr	r0, [r4]
   2de1c:	mov	r2, #0
   2de20:	ldr	r1, [r1]
   2de24:	bl	1a2c <fseek@plt>
   2de28:	mov	r0, #2
   2de2c:	mov	r1, #3
   2de30:	b	2deec <Mat_VarRead5+0x4cc>
   2de34:	ldr	r1, [r5, #52]	; 0x34
   2de38:	ldr	r0, [r4]
   2de3c:	mov	r2, #0
   2de40:	ldr	r1, [r1]
   2de44:	bl	1a2c <fseek@plt>
   2de48:	mov	r0, #2
   2de4c:	mov	r1, #4
   2de50:	b	2deec <Mat_VarRead5+0x4cc>
   2de54:	ldr	r1, [r5, #52]	; 0x34
   2de58:	ldr	r0, [r4]
   2de5c:	mov	r2, #0
   2de60:	ldr	r1, [r1]
   2de64:	bl	1a2c <fseek@plt>
   2de68:	mov	r0, #4
   2de6c:	mov	r1, #5
   2de70:	b	2deec <Mat_VarRead5+0x4cc>
   2de74:	ldr	r1, [r5, #52]	; 0x34
   2de78:	ldr	r0, [r4]
   2de7c:	mov	r2, #0
   2de80:	ldr	r1, [r1]
   2de84:	bl	1a2c <fseek@plt>
   2de88:	mov	r0, #4
   2de8c:	mov	r1, #6
   2de90:	b	2deec <Mat_VarRead5+0x4cc>
   2de94:	ldr	r1, [r5, #52]	; 0x34
   2de98:	ldr	r0, [r4]
   2de9c:	mov	r2, #0
   2dea0:	ldr	r1, [r1]
   2dea4:	bl	1a2c <fseek@plt>
   2dea8:	mov	r0, #8
   2deac:	mov	r1, #12
   2deb0:	b	2deec <Mat_VarRead5+0x4cc>
   2deb4:	nop	{0}
   2deb8:	nop	{0}
   2debc:	nop	{0}
   2dec0:	.word	0x00000000
   2dec4:	.word	0x00000002
   2dec8:	.word	0x00000009
   2decc:	.word	0x00000008
   2ded0:	ldr	r1, [r5, #52]	; 0x34
   2ded4:	ldr	r0, [r4]
   2ded8:	mov	r2, #0
   2dedc:	ldr	r1, [r1]
   2dee0:	bl	1a2c <fseek@plt>
   2dee4:	mov	r0, #8
   2dee8:	mov	r1, #13
   2deec:	str	r1, [r5, #8]
   2def0:	str	r0, [r5, #12]
   2def4:	ldr	r0, [r5, #16]
   2def8:	sub	r0, r0, #6
   2defc:	cmp	r0, #9
   2df00:	bhi	2dfa4 <Mat_VarRead5+0x584>
   2df04:	ldr	r2, [r5, #12]
   2df08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2df0c:	ldr	r6, [r5, #20]
   2df10:	mov	r0, r5
   2df14:	bl	6664c <SafeMul>
   2df18:	ldr	r0, [r5]
   2df1c:	cmp	r6, #0
   2df20:	beq	2df64 <Mat_VarRead5+0x544>
   2df24:	bl	6655c <ComplexMalloc>
   2df28:	cmp	r0, #0
   2df2c:	beq	2df8c <Mat_VarRead5+0x56c>
   2df30:	ldr	r2, [r0]
   2df34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df38:	mov	r7, r0
   2df3c:	mov	r0, r4
   2df40:	mov	r1, r5
   2df44:	bl	2f338 <Mat_VarReadNumeric5>
   2df48:	ldr	r2, [r7, #4]
   2df4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df50:	mov	r0, r4
   2df54:	mov	r1, r5
   2df58:	bl	2f338 <Mat_VarReadNumeric5>
   2df5c:	str	r7, [r5, #40]	; 0x28
   2df60:	b	2dfa4 <Mat_VarRead5+0x584>
   2df64:	bl	18d0 <malloc@plt>
   2df68:	cmp	r0, #0
   2df6c:	str	r0, [r5, #40]	; 0x28
   2df70:	beq	2df98 <Mat_VarRead5+0x578>
   2df74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2df78:	mov	r2, r0
   2df7c:	mov	r0, r4
   2df80:	mov	r1, r5
   2df84:	bl	2f338 <Mat_VarReadNumeric5>
   2df88:	b	2dfa4 <Mat_VarRead5+0x584>
   2df8c:	ldr	r0, [pc, #4072]	; 2ef7c <Mat_VarRead5+0x155c>
   2df90:	add	r0, pc, r0
   2df94:	b	2dfa0 <Mat_VarRead5+0x580>
   2df98:	ldr	r0, [pc, #4064]	; 2ef80 <Mat_VarRead5+0x1560>
   2df9c:	add	r0, pc, r0
   2dfa0:	bl	19b4 <Mat_Critical@plt>
   2dfa4:	ldr	r0, [r4]
   2dfa8:	mov	r1, sl
   2dfac:	mov	r2, #0
   2dfb0:	bl	1a2c <fseek@plt>
   2dfb4:	sub	sp, fp, #28
   2dfb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dfbc:	ldr	r0, [r5]
   2dfc0:	cmp	r0, #0
   2dfc4:	beq	2def4 <Mat_VarRead5+0x4d4>
   2dfc8:	ldr	r1, [r5, #12]
   2dfcc:	cmp	r1, #0
   2dfd0:	beq	2def4 <Mat_VarRead5+0x4d4>
   2dfd4:	ldr	r8, [r5, #40]	; 0x28
   2dfd8:	cmp	r8, #0
   2dfdc:	beq	2e008 <Mat_VarRead5+0x5e8>
   2dfe0:	cmp	r1, r0
   2dfe4:	bhi	2e008 <Mat_VarRead5+0x5e8>
   2dfe8:	udiv	r7, r0, r1
   2dfec:	mov	r6, #0
   2dff0:	ldr	r1, [r8, r6, lsl #2]
   2dff4:	mov	r0, r4
   2dff8:	bl	2da20 <Mat_VarRead5>
   2dffc:	add	r6, r6, #1
   2e000:	cmp	r6, r7
   2e004:	bcc	2dff0 <Mat_VarRead5+0x5d0>
   2e008:	mov	r0, #24
   2e00c:	str	r0, [r5, #8]
   2e010:	b	2def4 <Mat_VarRead5+0x4d4>
   2e014:	mov	r0, #21
   2e018:	str	r0, [r5, #8]
   2e01c:	b	2def4 <Mat_VarRead5+0x4d4>
   2e020:	ldr	r3, [r4]
   2e024:	mov	r0, #1
   2e028:	add	r8, sp, #32
   2e02c:	mov	r1, #4
   2e030:	mov	r2, #1
   2e034:	str	r0, [sp, #24]
   2e038:	mov	r0, r8
   2e03c:	bl	18b8 <fread@plt>
   2e040:	mov	r6, r7
   2e044:	cmp	r7, #0
   2e048:	beq	2e054 <Mat_VarRead5+0x634>
   2e04c:	add	r0, sp, #32
   2e050:	bl	1c0c <Mat_uint32Swap>
   2e054:	ldr	r0, [sp, #32]
   2e058:	mov	r1, #0
   2e05c:	uxtb	r7, r0
   2e060:	cmp	r7, #25
   2e064:	movcs	r7, r1
   2e068:	cmp	r1, r0, lsr #16
   2e06c:	bne	2e0a0 <Mat_VarRead5+0x680>
   2e070:	ldr	r3, [r4]
   2e074:	add	r8, r8, #4
   2e078:	mov	r1, #4
   2e07c:	mov	r2, #1
   2e080:	mov	r0, r8
   2e084:	bl	18b8 <fread@plt>
   2e088:	cmp	r6, #0
   2e08c:	beq	2e098 <Mat_VarRead5+0x678>
   2e090:	mov	r0, r8
   2e094:	bl	1c0c <Mat_uint32Swap>
   2e098:	mov	r0, #0
   2e09c:	str	r0, [sp, #24]
   2e0a0:	mov	r0, #2
   2e0a4:	str	r0, [r5, #8]
   2e0a8:	mov	r0, #2
   2e0ac:	bl	1924 <Mat_SizeOf@plt>
   2e0b0:	str	r0, [r5, #12]
   2e0b4:	mov	r2, r0
   2e0b8:	mov	r0, r5
   2e0bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e0c0:	bl	6664c <SafeMul>
   2e0c4:	cmp	r0, #0
   2e0c8:	beq	2e240 <Mat_VarRead5+0x820>
   2e0cc:	ldr	r0, [pc, #4080]	; 2f0c4 <Mat_VarRead5+0x16a4>
   2e0d0:	add	r0, pc, r0
   2e0d4:	bl	19b4 <Mat_Critical@plt>
   2e0d8:	b	2def4 <Mat_VarRead5+0x4d4>
   2e0dc:	ldr	r1, [r5, #36]	; 0x24
   2e0e0:	ldr	r0, [pc, #4088]	; 2f0e0 <Mat_VarRead5+0x16c0>
   2e0e4:	add	r0, pc, r0
   2e0e8:	bl	19b4 <Mat_Critical@plt>
   2e0ec:	b	2def4 <Mat_VarRead5+0x4d4>
   2e0f0:	ldr	r0, [pc, #4076]	; 2f0e4 <Mat_VarRead5+0x16c4>
   2e0f4:	add	r0, pc, r0
   2e0f8:	bl	19b4 <Mat_Critical@plt>
   2e0fc:	b	2def4 <Mat_VarRead5+0x4d4>
   2e100:	ldr	r3, [r4]
   2e104:	add	r0, sp, #32
   2e108:	mov	r1, #4
   2e10c:	mov	r2, #1
   2e110:	bl	18b8 <fread@plt>
   2e114:	ldr	r0, [r4, #20]
   2e118:	cmp	r0, #0
   2e11c:	beq	2e128 <Mat_VarRead5+0x708>
   2e120:	add	r0, sp, #32
   2e124:	bl	1c0c <Mat_uint32Swap>
   2e128:	ldr	r0, [sp, #32]
   2e12c:	mov	r1, #0
   2e130:	uxtb	r6, r0
   2e134:	cmp	r6, #25
   2e138:	movcs	r6, r1
   2e13c:	cmp	r0, #65536	; 0x10000
   2e140:	bcs	2e178 <Mat_VarRead5+0x758>
   2e144:	ldr	r3, [r4]
   2e148:	mov	r0, #0
   2e14c:	mov	r1, #4
   2e150:	mov	r2, #1
   2e154:	str	r0, [sp, #16]
   2e158:	add	r0, sp, #28
   2e15c:	bl	18b8 <fread@plt>
   2e160:	ldr	r0, [r4, #20]
   2e164:	cmp	r0, #0
   2e168:	beq	2e188 <Mat_VarRead5+0x768>
   2e16c:	add	r0, sp, #28
   2e170:	bl	1bf8 <Mat_int32Swap>
   2e174:	b	2e188 <Mat_VarRead5+0x768>
   2e178:	lsr	r0, r0, #16
   2e17c:	str	r0, [sp, #28]
   2e180:	mov	r0, #1
   2e184:	str	r0, [sp, #16]
   2e188:	ldr	r0, [sp, #28]
   2e18c:	ldr	r8, [sp, #24]
   2e190:	asr	r1, r0, #31
   2e194:	add	r0, r0, r1, lsr #30
   2e198:	asr	r7, r0, #2
   2e19c:	bic	r0, r0, #3
   2e1a0:	str	r7, [r8, #8]
   2e1a4:	bl	18d0 <malloc@plt>
   2e1a8:	cmp	r0, #0
   2e1ac:	str	r0, [r8, #4]
   2e1b0:	beq	2e2e4 <Mat_VarRead5+0x8c4>
   2e1b4:	mov	r2, r0
   2e1b8:	ldr	r0, [r5, #48]	; 0x30
   2e1bc:	cmp	r0, #1
   2e1c0:	beq	2e2f4 <Mat_VarRead5+0x8d4>
   2e1c4:	mov	r1, #0
   2e1c8:	cmp	r0, #0
   2e1cc:	str	r1, [sp, #12]
   2e1d0:	bne	2e3bc <Mat_VarRead5+0x99c>
   2e1d4:	mov	r1, r2
   2e1d8:	mov	r0, r4
   2e1dc:	mov	r2, r6
   2e1e0:	mov	r3, r7
   2e1e4:	bl	11690 <ReadInt32Data>
   2e1e8:	ldr	r1, [sp, #16]
   2e1ec:	cmp	r1, #0
   2e1f0:	addne	r0, r0, #4
   2e1f4:	asr	r1, r0, #31
   2e1f8:	str	r0, [sp, #12]
   2e1fc:	add	r1, r0, r1, lsr #29
   2e200:	bic	r1, r1, #7
   2e204:	subs	r1, r0, r1
   2e208:	beq	2e344 <Mat_VarRead5+0x924>
   2e20c:	ldr	r0, [r4]
   2e210:	rsb	r1, r1, #8
   2e214:	mov	r2, #1
   2e218:	bl	1a2c <fseek@plt>
   2e21c:	b	2e344 <Mat_VarRead5+0x924>
   2e220:	lsr	r6, r0, #16
   2e224:	mov	r0, #1
   2e228:	str	r0, [sp, #24]
   2e22c:	mov	r0, r7
   2e230:	str	r7, [r5, #8]
   2e234:	bl	1924 <Mat_SizeOf@plt>
   2e238:	str	r0, [r5, #12]
   2e23c:	str	r6, [r5]
   2e240:	ldr	r0, [r5, #20]
   2e244:	cmp	r0, #0
   2e248:	bne	2def4 <Mat_VarRead5+0x4d4>
   2e24c:	ldr	r6, [r5]
   2e250:	mov	r1, #1
   2e254:	add	r0, r6, #1
   2e258:	bl	1798 <calloc@plt>
   2e25c:	cmp	r0, #0
   2e260:	str	r0, [r5, #40]	; 0x28
   2e264:	beq	2e4ec <Mat_VarRead5+0xacc>
   2e268:	cmp	r6, #0
   2e26c:	beq	2def4 <Mat_VarRead5+0x4d4>
   2e270:	ldr	r2, [r5, #12]
   2e274:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e278:	add	r0, sp, #28
   2e27c:	bl	6664c <SafeMul>
   2e280:	cmp	r0, #0
   2e284:	bne	2def4 <Mat_VarRead5+0x4d4>
   2e288:	ldr	r0, [r5]
   2e28c:	ldr	r1, [sp, #28]
   2e290:	cmp	r1, r0
   2e294:	bhi	2def4 <Mat_VarRead5+0x4d4>
   2e298:	ldr	r0, [r5, #48]	; 0x30
   2e29c:	cmp	r0, #1
   2e2a0:	beq	2e8d0 <Mat_VarRead5+0xeb0>
   2e2a4:	cmp	r0, #0
   2e2a8:	bne	2def4 <Mat_VarRead5+0x4d4>
   2e2ac:	ldr	r1, [r5, #40]	; 0x28
   2e2b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e2b4:	mov	r0, r4
   2e2b8:	mov	r2, r7
   2e2bc:	bl	217d8 <ReadCharData>
   2e2c0:	ldr	r1, [sp, #24]
   2e2c4:	cmp	r1, #0
   2e2c8:	addne	r0, r0, #4
   2e2cc:	asr	r1, r0, #31
   2e2d0:	add	r1, r0, r1, lsr #29
   2e2d4:	bic	r1, r1, #7
   2e2d8:	subs	r1, r0, r1
   2e2dc:	bne	2f1b4 <Mat_VarRead5+0x1794>
   2e2e0:	b	2def4 <Mat_VarRead5+0x4d4>
   2e2e4:	ldr	r0, [pc, #4060]	; 2f2c8 <Mat_VarRead5+0x18a8>
   2e2e8:	add	r0, pc, r0
   2e2ec:	bl	19b4 <Mat_Critical@plt>
   2e2f0:	b	2def4 <Mat_VarRead5+0x4d4>
   2e2f4:	ldr	r0, [r9]
   2e2f8:	mov	r3, r6
   2e2fc:	ldr	r1, [r0, #12]
   2e300:	mov	r0, r4
   2e304:	str	r7, [sp]
   2e308:	bl	13e0c <ReadCompressedInt32Data>
   2e30c:	ldr	r1, [sp, #16]
   2e310:	cmp	r1, #0
   2e314:	addne	r0, r0, #4
   2e318:	asr	r1, r0, #31
   2e31c:	str	r0, [sp, #12]
   2e320:	add	r1, r0, r1, lsr #29
   2e324:	bic	r1, r1, #7
   2e328:	subs	r0, r0, r1
   2e32c:	beq	2e344 <Mat_VarRead5+0x924>
   2e330:	ldr	r1, [r9]
   2e334:	rsb	r2, r0, #8
   2e338:	mov	r0, r4
   2e33c:	ldr	r1, [r1, #12]
   2e340:	bl	2394 <InflateSkip>
   2e344:	ldr	r0, [r5, #48]	; 0x30
   2e348:	cmp	r0, #1
   2e34c:	bne	2e3bc <Mat_VarRead5+0x99c>
   2e350:	ldr	r0, [r9]
   2e354:	mov	r6, #0
   2e358:	add	r2, sp, #32
   2e35c:	ldr	r1, [r0, #12]
   2e360:	mov	r0, r4
   2e364:	str	r6, [r1, #4]
   2e368:	bl	3108 <InflateDataType>
   2e36c:	ldr	r0, [r4, #20]
   2e370:	cmp	r0, #0
   2e374:	beq	2e380 <Mat_VarRead5+0x960>
   2e378:	add	r0, sp, #32
   2e37c:	bl	1c0c <Mat_uint32Swap>
   2e380:	ldr	r0, [sp, #32]
   2e384:	uxtb	r1, r0
   2e388:	cmp	r1, #25
   2e38c:	movcc	r6, r1
   2e390:	cmp	r0, #65536	; 0x10000
   2e394:	bcs	2e434 <Mat_VarRead5+0xa14>
   2e398:	ldr	r0, [r9]
   2e39c:	add	r2, sp, #28
   2e3a0:	mov	r3, #5
   2e3a4:	ldr	r1, [r0, #12]
   2e3a8:	mov	r0, #1
   2e3ac:	str	r0, [sp]
   2e3b0:	mov	r0, r4
   2e3b4:	bl	13e0c <ReadCompressedInt32Data>
   2e3b8:	b	2e444 <Mat_VarRead5+0xa24>
   2e3bc:	ldr	r3, [r4]
   2e3c0:	add	r0, sp, #32
   2e3c4:	mov	r1, #4
   2e3c8:	mov	r2, #1
   2e3cc:	bl	18b8 <fread@plt>
   2e3d0:	ldr	r0, [r4, #20]
   2e3d4:	cmp	r0, #0
   2e3d8:	beq	2e3e4 <Mat_VarRead5+0x9c4>
   2e3dc:	add	r0, sp, #32
   2e3e0:	bl	1c0c <Mat_uint32Swap>
   2e3e4:	ldr	r0, [sp, #32]
   2e3e8:	mov	r1, #0
   2e3ec:	uxtb	r6, r0
   2e3f0:	cmp	r6, #25
   2e3f4:	movcs	r6, r1
   2e3f8:	cmp	r0, #65536	; 0x10000
   2e3fc:	bcs	2e434 <Mat_VarRead5+0xa14>
   2e400:	ldr	r3, [r4]
   2e404:	add	r0, sp, #28
   2e408:	mov	r1, #4
   2e40c:	mov	r2, #1
   2e410:	bl	18b8 <fread@plt>
   2e414:	ldr	r0, [r4, #20]
   2e418:	cmp	r0, #0
   2e41c:	beq	2e444 <Mat_VarRead5+0xa24>
   2e420:	mov	r0, #0
   2e424:	str	r0, [sp, #16]
   2e428:	add	r0, sp, #28
   2e42c:	bl	1bf8 <Mat_int32Swap>
   2e430:	b	2e44c <Mat_VarRead5+0xa2c>
   2e434:	lsr	r0, r0, #16
   2e438:	str	r0, [sp, #28]
   2e43c:	mov	r0, #1
   2e440:	b	2e448 <Mat_VarRead5+0xa28>
   2e444:	mov	r0, #0
   2e448:	str	r0, [sp, #16]
   2e44c:	ldr	r0, [sp, #28]
   2e450:	ldr	r8, [sp, #24]
   2e454:	asr	r1, r0, #31
   2e458:	add	r0, r0, r1, lsr #30
   2e45c:	asr	r7, r0, #2
   2e460:	bic	r0, r0, #3
   2e464:	str	r7, [r8, #16]
   2e468:	bl	18d0 <malloc@plt>
   2e46c:	cmp	r0, #0
   2e470:	str	r0, [r8, #12]
   2e474:	beq	2e4dc <Mat_VarRead5+0xabc>
   2e478:	mov	r2, r0
   2e47c:	ldr	r0, [r5, #48]	; 0x30
   2e480:	cmp	r0, #1
   2e484:	beq	2e4fc <Mat_VarRead5+0xadc>
   2e488:	cmp	r0, #0
   2e48c:	bne	2e5c8 <Mat_VarRead5+0xba8>
   2e490:	mov	r1, r2
   2e494:	mov	r0, r4
   2e498:	mov	r2, r6
   2e49c:	mov	r3, r7
   2e4a0:	bl	11690 <ReadInt32Data>
   2e4a4:	ldr	r1, [sp, #16]
   2e4a8:	cmp	r1, #0
   2e4ac:	addne	r0, r0, #4
   2e4b0:	asr	r1, r0, #31
   2e4b4:	str	r0, [sp, #12]
   2e4b8:	add	r1, r0, r1, lsr #29
   2e4bc:	bic	r1, r1, #7
   2e4c0:	subs	r1, r0, r1
   2e4c4:	beq	2e54c <Mat_VarRead5+0xb2c>
   2e4c8:	ldr	r0, [r4]
   2e4cc:	rsb	r1, r1, #8
   2e4d0:	mov	r2, #1
   2e4d4:	bl	1a2c <fseek@plt>
   2e4d8:	b	2e54c <Mat_VarRead5+0xb2c>
   2e4dc:	ldr	r0, [pc, #3664]	; 2f334 <Mat_VarRead5+0x1914>
   2e4e0:	add	r0, pc, r0
   2e4e4:	bl	19b4 <Mat_Critical@plt>
   2e4e8:	b	2def4 <Mat_VarRead5+0x4d4>
   2e4ec:	ldr	r0, [pc, #3636]	; 2f328 <Mat_VarRead5+0x1908>
   2e4f0:	add	r0, pc, r0
   2e4f4:	bl	19b4 <Mat_Critical@plt>
   2e4f8:	b	2def4 <Mat_VarRead5+0x4d4>
   2e4fc:	ldr	r0, [r9]
   2e500:	mov	r3, r6
   2e504:	ldr	r1, [r0, #12]
   2e508:	mov	r0, r4
   2e50c:	str	r7, [sp]
   2e510:	bl	13e0c <ReadCompressedInt32Data>
   2e514:	ldr	r1, [sp, #16]
   2e518:	cmp	r1, #0
   2e51c:	addne	r0, r0, #4
   2e520:	asr	r1, r0, #31
   2e524:	str	r0, [sp, #12]
   2e528:	add	r1, r0, r1, lsr #29
   2e52c:	bic	r1, r1, #7
   2e530:	subs	r0, r0, r1
   2e534:	beq	2e54c <Mat_VarRead5+0xb2c>
   2e538:	ldr	r1, [r9]
   2e53c:	rsb	r2, r0, #8
   2e540:	mov	r0, r4
   2e544:	ldr	r1, [r1, #12]
   2e548:	bl	2394 <InflateSkip>
   2e54c:	ldr	r0, [r5, #48]	; 0x30
   2e550:	cmp	r0, #1
   2e554:	bne	2e5c8 <Mat_VarRead5+0xba8>
   2e558:	ldr	r0, [r9]
   2e55c:	mov	r6, #0
   2e560:	add	r2, sp, #32
   2e564:	ldr	r1, [r0, #12]
   2e568:	mov	r0, r4
   2e56c:	str	r6, [r1, #4]
   2e570:	bl	3108 <InflateDataType>
   2e574:	ldr	r0, [r4, #20]
   2e578:	cmp	r0, #0
   2e57c:	beq	2e588 <Mat_VarRead5+0xb68>
   2e580:	add	r0, sp, #32
   2e584:	bl	1c0c <Mat_uint32Swap>
   2e588:	ldr	r0, [sp, #32]
   2e58c:	uxtb	r1, r0
   2e590:	cmp	r1, #25
   2e594:	movcc	r6, r1
   2e598:	cmp	r0, #65536	; 0x10000
   2e59c:	bcs	2e638 <Mat_VarRead5+0xc18>
   2e5a0:	ldr	r0, [r9]
   2e5a4:	add	r2, sp, #28
   2e5a8:	mov	r3, #5
   2e5ac:	ldr	r1, [r0, #12]
   2e5b0:	mov	r0, #1
   2e5b4:	str	r0, [sp]
   2e5b8:	mov	r0, r4
   2e5bc:	bl	13e0c <ReadCompressedInt32Data>
   2e5c0:	mov	r8, #0
   2e5c4:	b	2e644 <Mat_VarRead5+0xc24>
   2e5c8:	ldr	r3, [r4]
   2e5cc:	add	r0, sp, #32
   2e5d0:	mov	r1, #4
   2e5d4:	mov	r2, #1
   2e5d8:	bl	18b8 <fread@plt>
   2e5dc:	ldr	r0, [r4, #20]
   2e5e0:	cmp	r0, #0
   2e5e4:	beq	2e5f0 <Mat_VarRead5+0xbd0>
   2e5e8:	add	r0, sp, #32
   2e5ec:	bl	1c0c <Mat_uint32Swap>
   2e5f0:	ldr	r0, [sp, #32]
   2e5f4:	mov	r8, #0
   2e5f8:	uxtb	r6, r0
   2e5fc:	cmp	r6, #25
   2e600:	movcs	r6, r8
   2e604:	cmp	r0, #65536	; 0x10000
   2e608:	bcs	2e638 <Mat_VarRead5+0xc18>
   2e60c:	ldr	r3, [r4]
   2e610:	add	r0, sp, #28
   2e614:	mov	r1, #4
   2e618:	mov	r2, #1
   2e61c:	bl	18b8 <fread@plt>
   2e620:	ldr	r0, [r4, #20]
   2e624:	cmp	r0, #0
   2e628:	beq	2e644 <Mat_VarRead5+0xc24>
   2e62c:	add	r0, sp, #28
   2e630:	bl	1bf8 <Mat_int32Swap>
   2e634:	b	2e644 <Mat_VarRead5+0xc24>
   2e638:	lsr	r0, r0, #16
   2e63c:	mov	r8, #1
   2e640:	str	r0, [sp, #28]
   2e644:	ldr	r0, [r5, #28]
   2e648:	mov	r7, r6
   2e64c:	cmp	r0, #0
   2e650:	movwne	r7, #2
   2e654:	cmp	r6, #9
   2e658:	movne	r7, r6
   2e65c:	mov	r0, r7
   2e660:	str	r7, [r5, #8]
   2e664:	bl	1924 <Mat_SizeOf@plt>
   2e668:	cmp	r0, #0
   2e66c:	beq	2def4 <Mat_VarRead5+0x4d4>
   2e670:	ldr	r1, [sp, #28]
   2e674:	str	r7, [sp, #8]
   2e678:	ldr	r6, [sp, #24]
   2e67c:	str	r8, [sp, #16]
   2e680:	udiv	r7, r1, r0
   2e684:	str	r7, [r6, #20]!
   2e688:	ldr	r0, [r5, #8]
   2e68c:	ldr	r8, [r5, #20]
   2e690:	bl	1924 <Mat_SizeOf@plt>
   2e694:	mul	r0, r0, r7
   2e698:	cmp	r8, #0
   2e69c:	beq	2e734 <Mat_VarRead5+0xd14>
   2e6a0:	bl	6655c <ComplexMalloc>
   2e6a4:	cmp	r0, #0
   2e6a8:	beq	2e7c8 <Mat_VarRead5+0xda8>
   2e6ac:	mov	r8, r0
   2e6b0:	ldr	r0, [r5, #48]	; 0x30
   2e6b4:	str	r6, [sp, #4]
   2e6b8:	cmp	r0, #1
   2e6bc:	beq	2e7e8 <Mat_VarRead5+0xdc8>
   2e6c0:	cmp	r0, #0
   2e6c4:	bne	2f0a0 <Mat_VarRead5+0x1680>
   2e6c8:	ldr	r0, [r5, #8]
   2e6cc:	sub	r0, r0, #1
   2e6d0:	cmp	r0, #12
   2e6d4:	bhi	2ea18 <Mat_VarRead5+0xff8>
   2e6d8:	add	r1, pc, #4
   2e6dc:	ldr	r0, [r1, r0, lsl #2]
   2e6e0:	add	pc, r1, r0
   2e6e4:	.word	0x00000034
   2e6e8:	.word	0x00000230
   2e6ec:	.word	0x0000024c
   2e6f0:	.word	0x00000268
   2e6f4:	.word	0x00000284
   2e6f8:	.word	0x000002a0
   2e6fc:	.word	0x000002bc
   2e700:	.word	0x00000334
   2e704:	.word	0x000002d8
   2e708:	.word	0x00000334
   2e70c:	.word	0x00000334
   2e710:	.word	0x000002f4
   2e714:	.word	0x00000318
   2e718:	ldr	r0, [sp, #4]
   2e71c:	ldr	r1, [r8]
   2e720:	ldr	r2, [sp, #8]
   2e724:	ldr	r3, [r0]
   2e728:	mov	r0, r4
   2e72c:	bl	1c460 <ReadInt8Data>
   2e730:	b	2ea14 <Mat_VarRead5+0xff4>
   2e734:	bl	18d0 <malloc@plt>
   2e738:	mov	r2, r0
   2e73c:	ldr	r0, [sp, #24]
   2e740:	cmp	r2, #0
   2e744:	str	r2, [r0, #24]
   2e748:	beq	2e7d8 <Mat_VarRead5+0xdb8>
   2e74c:	ldr	r0, [r5, #48]	; 0x30
   2e750:	cmp	r0, #1
   2e754:	beq	2e860 <Mat_VarRead5+0xe40>
   2e758:	cmp	r0, #0
   2e75c:	bne	2def4 <Mat_VarRead5+0x4d4>
   2e760:	ldr	r0, [r5, #8]
   2e764:	sub	r0, r0, #1
   2e768:	cmp	r0, #12
   2e76c:	bhi	2f190 <Mat_VarRead5+0x1770>
   2e770:	add	r1, pc, #4
   2e774:	ldr	r0, [r1, r0, lsl #2]
   2e778:	add	pc, r1, r0
   2e77c:	.word	0x00000034
   2e780:	.word	0x00000930
   2e784:	.word	0x0000094c
   2e788:	.word	0x0000096c
   2e78c:	.word	0x00000984
   2e790:	.word	0x0000099c
   2e794:	.word	0x000009b4
   2e798:	.word	0x00000a14
   2e79c:	.word	0x000009cc
   2e7a0:	.word	0x00000a14
   2e7a4:	.word	0x00000a14
   2e7a8:	.word	0x000009e4
   2e7ac:	.word	0x000009fc
   2e7b0:	mov	r1, r2
   2e7b4:	ldr	r3, [r6]
   2e7b8:	ldr	r2, [sp, #8]
   2e7bc:	mov	r0, r4
   2e7c0:	bl	1c460 <ReadInt8Data>
   2e7c4:	b	2f18c <Mat_VarRead5+0x176c>
   2e7c8:	ldr	r0, [pc, #2908]	; 2f32c <Mat_VarRead5+0x190c>
   2e7cc:	add	r0, pc, r0
   2e7d0:	bl	19b4 <Mat_Critical@plt>
   2e7d4:	b	2def4 <Mat_VarRead5+0x4d4>
   2e7d8:	ldr	r0, [pc, #2896]	; 2f330 <Mat_VarRead5+0x1910>
   2e7dc:	add	r0, pc, r0
   2e7e0:	bl	19b4 <Mat_Critical@plt>
   2e7e4:	b	2def4 <Mat_VarRead5+0x4d4>
   2e7e8:	ldr	r0, [r5, #8]
   2e7ec:	sub	r0, r0, #1
   2e7f0:	cmp	r0, #12
   2e7f4:	bhi	2eca8 <Mat_VarRead5+0x1288>
   2e7f8:	add	r1, pc, #4
   2e7fc:	ldr	r0, [r1, r0, lsl #2]
   2e800:	add	pc, r1, r0
   2e804:	.word	0x00000034
   2e808:	.word	0x00000338
   2e80c:	.word	0x00000360
   2e810:	.word	0x00000388
   2e814:	.word	0x000003b0
   2e818:	.word	0x000003d8
   2e81c:	.word	0x00000404
   2e820:	.word	0x000004a4
   2e824:	.word	0x0000042c
   2e828:	.word	0x000004a4
   2e82c:	.word	0x000004a4
   2e830:	.word	0x00000454
   2e834:	.word	0x0000047c
   2e838:	ldr	r0, [r9]
   2e83c:	ldr	r2, [r8]
   2e840:	ldr	r3, [sp, #8]
   2e844:	ldr	r1, [r0, #12]
   2e848:	ldr	r0, [sp, #4]
   2e84c:	ldr	r0, [r0]
   2e850:	str	r0, [sp]
   2e854:	mov	r0, r4
   2e858:	bl	1e858 <ReadCompressedInt8Data>
   2e85c:	b	2eca4 <Mat_VarRead5+0x1284>
   2e860:	ldr	r0, [r5, #8]
   2e864:	sub	r0, r0, #1
   2e868:	cmp	r0, #12
   2e86c:	bhi	2f2ec <Mat_VarRead5+0x18cc>
   2e870:	add	r1, pc, #4
   2e874:	ldr	r0, [r1, r0, lsl #2]
   2e878:	add	pc, r1, r0
   2e87c:	.word	0x00000034
   2e880:	.word	0x0000094c
   2e884:	.word	0x0000096c
   2e888:	.word	0x0000098c
   2e88c:	.word	0x000009ac
   2e890:	.word	0x000009cc
   2e894:	.word	0x000009ec
   2e898:	.word	0x00000a70
   2e89c:	.word	0x00000a0c
   2e8a0:	.word	0x00000a70
   2e8a4:	.word	0x00000a70
   2e8a8:	.word	0x00000a2c
   2e8ac:	.word	0x00000a50
   2e8b0:	ldr	r0, [r9]
   2e8b4:	ldr	r3, [sp, #8]
   2e8b8:	ldr	r1, [r0, #12]
   2e8bc:	ldr	r0, [r6]
   2e8c0:	str	r0, [sp]
   2e8c4:	mov	r0, r4
   2e8c8:	bl	1e858 <ReadCompressedInt8Data>
   2e8cc:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2e8d0:	ldr	r0, [r5, #52]	; 0x34
   2e8d4:	ldr	r2, [r5, #40]	; 0x28
   2e8d8:	mov	r3, r7
   2e8dc:	ldr	r1, [r0, #12]
   2e8e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e8e4:	str	r0, [sp]
   2e8e8:	mov	r0, r4
   2e8ec:	bl	216b0 <ReadCompressedCharData>
   2e8f0:	ldr	r1, [sp, #24]
   2e8f4:	cmp	r1, #0
   2e8f8:	addne	r0, r0, #4
   2e8fc:	asr	r1, r0, #31
   2e900:	add	r1, r0, r1, lsr #29
   2e904:	bic	r1, r1, #7
   2e908:	subs	r0, r0, r1
   2e90c:	bne	2f310 <Mat_VarRead5+0x18f0>
   2e910:	b	2def4 <Mat_VarRead5+0x4d4>
   2e914:	ldr	r0, [sp, #4]
   2e918:	ldr	r1, [r8]
   2e91c:	ldr	r2, [sp, #8]
   2e920:	ldr	r3, [r0]
   2e924:	mov	r0, r4
   2e928:	bl	1ed88 <ReadUInt8Data>
   2e92c:	b	2ea14 <Mat_VarRead5+0xff4>
   2e930:	ldr	r0, [sp, #4]
   2e934:	ldr	r1, [r8]
   2e938:	ldr	r2, [sp, #8]
   2e93c:	ldr	r3, [r0]
   2e940:	mov	r0, r4
   2e944:	bl	16fe8 <ReadInt16Data>
   2e948:	b	2ea14 <Mat_VarRead5+0xff4>
   2e94c:	ldr	r0, [sp, #4]
   2e950:	ldr	r1, [r8]
   2e954:	ldr	r2, [sp, #8]
   2e958:	ldr	r3, [r0]
   2e95c:	mov	r0, r4
   2e960:	bl	19a24 <ReadUInt16Data>
   2e964:	b	2ea14 <Mat_VarRead5+0xff4>
   2e968:	ldr	r0, [sp, #4]
   2e96c:	ldr	r1, [r8]
   2e970:	ldr	r2, [sp, #8]
   2e974:	ldr	r3, [r0]
   2e978:	mov	r0, r4
   2e97c:	bl	11690 <ReadInt32Data>
   2e980:	b	2ea14 <Mat_VarRead5+0xff4>
   2e984:	ldr	r0, [sp, #4]
   2e988:	ldr	r1, [r8]
   2e98c:	ldr	r2, [sp, #8]
   2e990:	ldr	r3, [r0]
   2e994:	mov	r0, r4
   2e998:	bl	1433c <ReadUInt32Data>
   2e99c:	b	2ea14 <Mat_VarRead5+0xff4>
   2e9a0:	ldr	r0, [sp, #4]
   2e9a4:	ldr	r1, [r8]
   2e9a8:	ldr	r2, [sp, #8]
   2e9ac:	ldr	r3, [r0]
   2e9b0:	mov	r0, r4
   2e9b4:	bl	8aa0 <ReadSingleData>
   2e9b8:	b	2ea14 <Mat_VarRead5+0xff4>
   2e9bc:	ldr	r0, [sp, #4]
   2e9c0:	ldr	r1, [r8]
   2e9c4:	ldr	r2, [sp, #8]
   2e9c8:	ldr	r3, [r0]
   2e9cc:	mov	r0, r4
   2e9d0:	bl	37d8 <ReadDoubleData>
   2e9d4:	b	2ea14 <Mat_VarRead5+0xff4>
   2e9d8:	ldr	r0, [sp, #4]
   2e9dc:	ldr	r1, [r8]
   2e9e0:	ldr	r2, [sp, #8]
   2e9e4:	ldr	r3, [r0]
   2e9e8:	mov	r0, r4
   2e9ec:	bl	bc30 <ReadInt64Data>
   2e9f0:	b	2ea14 <Mat_VarRead5+0xff4>
   2e9f4:	.word	0x0003e374
   2e9f8:	.word	0x0003e2dc
   2e9fc:	ldr	r0, [sp, #4]
   2ea00:	ldr	r1, [r8]
   2ea04:	ldr	r2, [sp, #8]
   2ea08:	ldr	r3, [r0]
   2ea0c:	mov	r0, r4
   2ea10:	bl	e960 <ReadUInt64Data>
   2ea14:	str	r0, [sp, #12]
   2ea18:	ldr	r0, [sp, #16]
   2ea1c:	ldr	r1, [sp, #12]
   2ea20:	cmp	r0, #0
   2ea24:	addne	r1, r1, #4
   2ea28:	asr	r0, r1, #31
   2ea2c:	add	r0, r1, r0, lsr #29
   2ea30:	bic	r0, r0, #7
   2ea34:	subs	r1, r1, r0
   2ea38:	beq	2ea4c <Mat_VarRead5+0x102c>
   2ea3c:	ldr	r0, [r4]
   2ea40:	rsb	r1, r1, #8
   2ea44:	mov	r2, #1
   2ea48:	bl	1a2c <fseek@plt>
   2ea4c:	ldr	r3, [r4]
   2ea50:	add	r6, sp, #32
   2ea54:	mov	r1, #4
   2ea58:	mov	r2, #1
   2ea5c:	mov	r0, r6
   2ea60:	bl	18b8 <fread@plt>
   2ea64:	ldr	r0, [sp, #20]
   2ea68:	cmp	r0, #0
   2ea6c:	beq	2ea78 <Mat_VarRead5+0x1058>
   2ea70:	add	r0, sp, #32
   2ea74:	bl	1c0c <Mat_uint32Swap>
   2ea78:	ldr	r0, [sp, #32]
   2ea7c:	uxtb	r9, r0
   2ea80:	cmp	r9, #25
   2ea84:	movcs	r9, #0
   2ea88:	cmp	r0, #65536	; 0x10000
   2ea8c:	bcs	2eac8 <Mat_VarRead5+0x10a8>
   2ea90:	ldr	r3, [r4]
   2ea94:	add	r6, r6, #4
   2ea98:	mov	r1, #4
   2ea9c:	mov	r2, #1
   2eaa0:	mov	r0, r6
   2eaa4:	bl	18b8 <fread@plt>
   2eaa8:	ldr	r0, [sp, #20]
   2eaac:	cmp	r0, #0
   2eab0:	beq	2eabc <Mat_VarRead5+0x109c>
   2eab4:	mov	r0, r6
   2eab8:	bl	1c0c <Mat_uint32Swap>
   2eabc:	ldr	r0, [sp, #36]	; 0x24
   2eac0:	mov	r6, #0
   2eac4:	b	2ead0 <Mat_VarRead5+0x10b0>
   2eac8:	lsr	r0, r0, #16
   2eacc:	mov	r6, #1
   2ead0:	ldr	r1, [r5, #8]
   2ead4:	sub	r1, r1, #1
   2ead8:	cmp	r1, #12
   2eadc:	bhi	2eed4 <Mat_VarRead5+0x14b4>
   2eae0:	add	r2, pc, #4
   2eae4:	ldr	r1, [r2, r1, lsl #2]
   2eae8:	add	pc, r2, r1
   2eaec:	.word	0x00000034
   2eaf0:	.word	0x000002f0
   2eaf4:	.word	0x0000030c
   2eaf8:	.word	0x00000328
   2eafc:	.word	0x00000344
   2eb00:	.word	0x00000360
   2eb04:	.word	0x0000037c
   2eb08:	.word	0x000003e8
   2eb0c:	.word	0x00000398
   2eb10:	.word	0x000003e8
   2eb14:	.word	0x000003e8
   2eb18:	.word	0x000003b4
   2eb1c:	.word	0x000003d0
   2eb20:	ldr	r0, [sp, #4]
   2eb24:	ldr	r1, [r8, #4]
   2eb28:	mov	r2, r9
   2eb2c:	ldr	r3, [r0]
   2eb30:	mov	r0, r4
   2eb34:	bl	1c460 <ReadInt8Data>
   2eb38:	b	2eed4 <Mat_VarRead5+0x14b4>
   2eb3c:	ldr	r0, [r9]
   2eb40:	ldr	r2, [r8]
   2eb44:	ldr	r3, [sp, #8]
   2eb48:	ldr	r1, [r0, #12]
   2eb4c:	ldr	r0, [sp, #4]
   2eb50:	ldr	r0, [r0]
   2eb54:	str	r0, [sp]
   2eb58:	mov	r0, r4
   2eb5c:	bl	21180 <ReadCompressedUInt8Data>
   2eb60:	b	2eca4 <Mat_VarRead5+0x1284>
   2eb64:	ldr	r0, [r9]
   2eb68:	ldr	r2, [r8]
   2eb6c:	ldr	r3, [sp, #8]
   2eb70:	ldr	r1, [r0, #12]
   2eb74:	ldr	r0, [sp, #4]
   2eb78:	ldr	r0, [r0]
   2eb7c:	str	r0, [sp]
   2eb80:	mov	r0, r4
   2eb84:	bl	194f4 <ReadCompressedInt16Data>
   2eb88:	b	2eca4 <Mat_VarRead5+0x1284>
   2eb8c:	ldr	r0, [r9]
   2eb90:	ldr	r2, [r8]
   2eb94:	ldr	r3, [sp, #8]
   2eb98:	ldr	r1, [r0, #12]
   2eb9c:	ldr	r0, [sp, #4]
   2eba0:	ldr	r0, [r0]
   2eba4:	str	r0, [sp]
   2eba8:	mov	r0, r4
   2ebac:	bl	1bf30 <ReadCompressedUInt16Data>
   2ebb0:	b	2eca4 <Mat_VarRead5+0x1284>
   2ebb4:	ldr	r0, [r9]
   2ebb8:	ldr	r2, [r8]
   2ebbc:	ldr	r3, [sp, #8]
   2ebc0:	ldr	r1, [r0, #12]
   2ebc4:	ldr	r0, [sp, #4]
   2ebc8:	ldr	r0, [r0]
   2ebcc:	str	r0, [sp]
   2ebd0:	mov	r0, r4
   2ebd4:	bl	13e0c <ReadCompressedInt32Data>
   2ebd8:	b	2eca4 <Mat_VarRead5+0x1284>
   2ebdc:	ldr	r0, [r9]
   2ebe0:	ldr	r2, [r8]
   2ebe4:	ldr	r3, [sp, #8]
   2ebe8:	ldr	r1, [r0, #12]
   2ebec:	ldr	r0, [sp, #4]
   2ebf0:	ldr	r0, [r0]
   2ebf4:	str	r0, [sp]
   2ebf8:	mov	r0, r4
   2ebfc:	bl	16ab8 <ReadCompressedUInt32Data>
   2ec00:	b	2eca4 <Mat_VarRead5+0x1284>
   2ec04:	.word	0x0003e34f
   2ec08:	ldr	r0, [r9]
   2ec0c:	ldr	r2, [r8]
   2ec10:	ldr	r3, [sp, #8]
   2ec14:	ldr	r1, [r0, #12]
   2ec18:	ldr	r0, [sp, #4]
   2ec1c:	ldr	r0, [r0]
   2ec20:	str	r0, [sp]
   2ec24:	mov	r0, r4
   2ec28:	bl	b6c0 <ReadCompressedSingleData>
   2ec2c:	b	2eca4 <Mat_VarRead5+0x1284>
   2ec30:	ldr	r0, [r9]
   2ec34:	ldr	r2, [r8]
   2ec38:	ldr	r3, [sp, #8]
   2ec3c:	ldr	r1, [r0, #12]
   2ec40:	ldr	r0, [sp, #4]
   2ec44:	ldr	r0, [r0]
   2ec48:	str	r0, [sp]
   2ec4c:	mov	r0, r4
   2ec50:	bl	6348 <ReadCompressedDoubleData>
   2ec54:	b	2eca4 <Mat_VarRead5+0x1284>
   2ec58:	ldr	r0, [r9]
   2ec5c:	ldr	r2, [r8]
   2ec60:	ldr	r3, [sp, #8]
   2ec64:	ldr	r1, [r0, #12]
   2ec68:	ldr	r0, [sp, #4]
   2ec6c:	ldr	r0, [r0]
   2ec70:	str	r0, [sp]
   2ec74:	mov	r0, r4
   2ec78:	bl	e3c0 <ReadCompressedInt64Data>
   2ec7c:	b	2eca4 <Mat_VarRead5+0x1284>
   2ec80:	ldr	r0, [r9]
   2ec84:	ldr	r2, [r8]
   2ec88:	ldr	r3, [sp, #8]
   2ec8c:	ldr	r1, [r0, #12]
   2ec90:	ldr	r0, [sp, #4]
   2ec94:	ldr	r0, [r0]
   2ec98:	str	r0, [sp]
   2ec9c:	mov	r0, r4
   2eca0:	bl	110f0 <ReadCompressedUInt64Data>
   2eca4:	str	r0, [sp, #12]
   2eca8:	ldr	r0, [sp, #16]
   2ecac:	ldr	r1, [sp, #12]
   2ecb0:	cmp	r0, #0
   2ecb4:	addne	r1, r1, #4
   2ecb8:	asr	r0, r1, #31
   2ecbc:	add	r0, r1, r0, lsr #29
   2ecc0:	bic	r0, r0, #7
   2ecc4:	subs	r0, r1, r0
   2ecc8:	beq	2ece0 <Mat_VarRead5+0x12c0>
   2eccc:	ldr	r1, [r9]
   2ecd0:	rsb	r2, r0, #8
   2ecd4:	mov	r0, r4
   2ecd8:	ldr	r1, [r1, #12]
   2ecdc:	bl	2394 <InflateSkip>
   2ece0:	ldr	r0, [r9]
   2ece4:	add	r7, sp, #32
   2ece8:	mov	r2, r7
   2ecec:	ldr	r1, [r0, #12]
   2ecf0:	mov	r0, r4
   2ecf4:	bl	3108 <InflateDataType>
   2ecf8:	ldr	r0, [sp, #20]
   2ecfc:	cmp	r0, #0
   2ed00:	beq	2ed0c <Mat_VarRead5+0x12ec>
   2ed04:	add	r0, sp, #32
   2ed08:	bl	1c0c <Mat_uint32Swap>
   2ed0c:	ldr	r0, [sp, #32]
   2ed10:	uxtb	r6, r0
   2ed14:	cmp	r6, #25
   2ed18:	movcs	r6, #0
   2ed1c:	cmp	r0, #65536	; 0x10000
   2ed20:	bcs	2ed5c <Mat_VarRead5+0x133c>
   2ed24:	ldr	r0, [r9]
   2ed28:	add	r7, r7, #4
   2ed2c:	mov	r2, r7
   2ed30:	ldr	r1, [r0, #12]
   2ed34:	mov	r0, r4
   2ed38:	bl	3108 <InflateDataType>
   2ed3c:	ldr	r0, [sp, #20]
   2ed40:	cmp	r0, #0
   2ed44:	beq	2ed50 <Mat_VarRead5+0x1330>
   2ed48:	mov	r0, r7
   2ed4c:	bl	1c0c <Mat_uint32Swap>
   2ed50:	ldr	r0, [sp, #36]	; 0x24
   2ed54:	mov	r7, #0
   2ed58:	b	2ed64 <Mat_VarRead5+0x1344>
   2ed5c:	lsr	r0, r0, #16
   2ed60:	mov	r7, #1
   2ed64:	ldr	r1, [r5, #8]
   2ed68:	sub	r1, r1, #1
   2ed6c:	cmp	r1, #12
   2ed70:	bhi	2f070 <Mat_VarRead5+0x1650>
   2ed74:	add	r2, pc, #4
   2ed78:	ldr	r1, [r2, r1, lsl #2]
   2ed7c:	add	pc, r2, r1
   2ed80:	.word	0x00000034
   2ed84:	.word	0x00000184
   2ed88:	.word	0x000001ac
   2ed8c:	.word	0x000001d4
   2ed90:	.word	0x00000204
   2ed94:	.word	0x0000022c
   2ed98:	.word	0x00000254
   2ed9c:	.word	0x000002f0
   2eda0:	.word	0x0000027c
   2eda4:	.word	0x000002f0
   2eda8:	.word	0x000002f0
   2edac:	.word	0x000002a4
   2edb0:	.word	0x000002cc
   2edb4:	ldr	r0, [r9]
   2edb8:	ldr	r2, [r8, #4]
   2edbc:	mov	r3, r6
   2edc0:	ldr	r1, [r0, #12]
   2edc4:	ldr	r0, [sp, #4]
   2edc8:	ldr	r0, [r0]
   2edcc:	str	r0, [sp]
   2edd0:	mov	r0, r4
   2edd4:	bl	1e858 <ReadCompressedInt8Data>
   2edd8:	b	2f070 <Mat_VarRead5+0x1650>
   2eddc:	ldr	r0, [sp, #4]
   2ede0:	ldr	r1, [r8, #4]
   2ede4:	mov	r2, r9
   2ede8:	ldr	r3, [r0]
   2edec:	mov	r0, r4
   2edf0:	bl	1ed88 <ReadUInt8Data>
   2edf4:	b	2eed4 <Mat_VarRead5+0x14b4>
   2edf8:	ldr	r0, [sp, #4]
   2edfc:	ldr	r1, [r8, #4]
   2ee00:	mov	r2, r9
   2ee04:	ldr	r3, [r0]
   2ee08:	mov	r0, r4
   2ee0c:	bl	16fe8 <ReadInt16Data>
   2ee10:	b	2eed4 <Mat_VarRead5+0x14b4>
   2ee14:	ldr	r0, [sp, #4]
   2ee18:	ldr	r1, [r8, #4]
   2ee1c:	mov	r2, r9
   2ee20:	ldr	r3, [r0]
   2ee24:	mov	r0, r4
   2ee28:	bl	19a24 <ReadUInt16Data>
   2ee2c:	b	2eed4 <Mat_VarRead5+0x14b4>
   2ee30:	ldr	r0, [sp, #4]
   2ee34:	ldr	r1, [r8, #4]
   2ee38:	mov	r2, r9
   2ee3c:	ldr	r3, [r0]
   2ee40:	mov	r0, r4
   2ee44:	bl	11690 <ReadInt32Data>
   2ee48:	b	2eed4 <Mat_VarRead5+0x14b4>
   2ee4c:	ldr	r0, [sp, #4]
   2ee50:	ldr	r1, [r8, #4]
   2ee54:	mov	r2, r9
   2ee58:	ldr	r3, [r0]
   2ee5c:	mov	r0, r4
   2ee60:	bl	1433c <ReadUInt32Data>
   2ee64:	b	2eed4 <Mat_VarRead5+0x14b4>
   2ee68:	ldr	r0, [sp, #4]
   2ee6c:	ldr	r1, [r8, #4]
   2ee70:	mov	r2, r9
   2ee74:	ldr	r3, [r0]
   2ee78:	mov	r0, r4
   2ee7c:	bl	8aa0 <ReadSingleData>
   2ee80:	b	2eed4 <Mat_VarRead5+0x14b4>
   2ee84:	ldr	r0, [sp, #4]
   2ee88:	ldr	r1, [r8, #4]
   2ee8c:	mov	r2, r9
   2ee90:	ldr	r3, [r0]
   2ee94:	mov	r0, r4
   2ee98:	bl	37d8 <ReadDoubleData>
   2ee9c:	b	2eed4 <Mat_VarRead5+0x14b4>
   2eea0:	ldr	r0, [sp, #4]
   2eea4:	ldr	r1, [r8, #4]
   2eea8:	mov	r2, r9
   2eeac:	ldr	r3, [r0]
   2eeb0:	mov	r0, r4
   2eeb4:	bl	bc30 <ReadInt64Data>
   2eeb8:	b	2eed4 <Mat_VarRead5+0x14b4>
   2eebc:	ldr	r0, [sp, #4]
   2eec0:	ldr	r1, [r8, #4]
   2eec4:	mov	r2, r9
   2eec8:	ldr	r3, [r0]
   2eecc:	mov	r0, r4
   2eed0:	bl	e960 <ReadUInt64Data>
   2eed4:	cmp	r6, #0
   2eed8:	addne	r0, r0, #4
   2eedc:	asr	r1, r0, #31
   2eee0:	add	r1, r0, r1, lsr #29
   2eee4:	bic	r1, r1, #7
   2eee8:	subs	r1, r0, r1
   2eeec:	beq	2f0a0 <Mat_VarRead5+0x1680>
   2eef0:	ldr	r0, [r4]
   2eef4:	rsb	r1, r1, #8
   2eef8:	mov	r2, #1
   2eefc:	bl	1a2c <fseek@plt>
   2ef00:	b	2f0a0 <Mat_VarRead5+0x1680>
   2ef04:	ldr	r0, [r9]
   2ef08:	ldr	r2, [r8, #4]
   2ef0c:	mov	r3, r6
   2ef10:	ldr	r1, [r0, #12]
   2ef14:	ldr	r0, [sp, #4]
   2ef18:	ldr	r0, [r0]
   2ef1c:	str	r0, [sp]
   2ef20:	mov	r0, r4
   2ef24:	bl	21180 <ReadCompressedUInt8Data>
   2ef28:	b	2f070 <Mat_VarRead5+0x1650>
   2ef2c:	ldr	r0, [r9]
   2ef30:	ldr	r2, [r8, #4]
   2ef34:	mov	r3, r6
   2ef38:	ldr	r1, [r0, #12]
   2ef3c:	ldr	r0, [sp, #4]
   2ef40:	ldr	r0, [r0]
   2ef44:	str	r0, [sp]
   2ef48:	mov	r0, r4
   2ef4c:	bl	194f4 <ReadCompressedInt16Data>
   2ef50:	b	2f070 <Mat_VarRead5+0x1650>
   2ef54:	ldr	r0, [r9]
   2ef58:	ldr	r2, [r8, #4]
   2ef5c:	mov	r3, r6
   2ef60:	ldr	r1, [r0, #12]
   2ef64:	ldr	r0, [sp, #4]
   2ef68:	ldr	r0, [r0]
   2ef6c:	str	r0, [sp]
   2ef70:	mov	r0, r4
   2ef74:	bl	1bf30 <ReadCompressedUInt16Data>
   2ef78:	b	2f070 <Mat_VarRead5+0x1650>
   2ef7c:	.word	0x0003e005
   2ef80:	.word	0x0003de9c
   2ef84:	ldr	r0, [r9]
   2ef88:	ldr	r2, [r8, #4]
   2ef8c:	mov	r3, r6
   2ef90:	ldr	r1, [r0, #12]
   2ef94:	ldr	r0, [sp, #4]
   2ef98:	ldr	r0, [r0]
   2ef9c:	str	r0, [sp]
   2efa0:	mov	r0, r4
   2efa4:	bl	13e0c <ReadCompressedInt32Data>
   2efa8:	b	2f070 <Mat_VarRead5+0x1650>
   2efac:	ldr	r0, [r9]
   2efb0:	ldr	r2, [r8, #4]
   2efb4:	mov	r3, r6
   2efb8:	ldr	r1, [r0, #12]
   2efbc:	ldr	r0, [sp, #4]
   2efc0:	ldr	r0, [r0]
   2efc4:	str	r0, [sp]
   2efc8:	mov	r0, r4
   2efcc:	bl	16ab8 <ReadCompressedUInt32Data>
   2efd0:	b	2f070 <Mat_VarRead5+0x1650>
   2efd4:	ldr	r0, [r9]
   2efd8:	ldr	r2, [r8, #4]
   2efdc:	mov	r3, r6
   2efe0:	ldr	r1, [r0, #12]
   2efe4:	ldr	r0, [sp, #4]
   2efe8:	ldr	r0, [r0]
   2efec:	str	r0, [sp]
   2eff0:	mov	r0, r4
   2eff4:	bl	b6c0 <ReadCompressedSingleData>
   2eff8:	b	2f070 <Mat_VarRead5+0x1650>
   2effc:	ldr	r0, [r9]
   2f000:	ldr	r2, [r8, #4]
   2f004:	mov	r3, r6
   2f008:	ldr	r1, [r0, #12]
   2f00c:	ldr	r0, [sp, #4]
   2f010:	ldr	r0, [r0]
   2f014:	str	r0, [sp]
   2f018:	mov	r0, r4
   2f01c:	bl	6348 <ReadCompressedDoubleData>
   2f020:	b	2f070 <Mat_VarRead5+0x1650>
   2f024:	ldr	r0, [r9]
   2f028:	ldr	r2, [r8, #4]
   2f02c:	mov	r3, r6
   2f030:	ldr	r1, [r0, #12]
   2f034:	ldr	r0, [sp, #4]
   2f038:	ldr	r0, [r0]
   2f03c:	str	r0, [sp]
   2f040:	mov	r0, r4
   2f044:	bl	e3c0 <ReadCompressedInt64Data>
   2f048:	b	2f070 <Mat_VarRead5+0x1650>
   2f04c:	ldr	r0, [r9]
   2f050:	ldr	r2, [r8, #4]
   2f054:	mov	r3, r6
   2f058:	ldr	r1, [r0, #12]
   2f05c:	ldr	r0, [sp, #4]
   2f060:	ldr	r0, [r0]
   2f064:	str	r0, [sp]
   2f068:	mov	r0, r4
   2f06c:	bl	110f0 <ReadCompressedUInt64Data>
   2f070:	cmp	r7, #0
   2f074:	addne	r0, r0, #4
   2f078:	asr	r1, r0, #31
   2f07c:	add	r1, r0, r1, lsr #29
   2f080:	bic	r1, r1, #7
   2f084:	subs	r0, r0, r1
   2f088:	beq	2f0a0 <Mat_VarRead5+0x1680>
   2f08c:	ldr	r1, [r9]
   2f090:	rsb	r2, r0, #8
   2f094:	mov	r0, r4
   2f098:	ldr	r1, [r1, #12]
   2f09c:	bl	2394 <InflateSkip>
   2f0a0:	ldr	r0, [sp, #24]
   2f0a4:	str	r8, [r0, #24]
   2f0a8:	b	2def4 <Mat_VarRead5+0x4d4>
   2f0ac:	mov	r1, r2
   2f0b0:	ldr	r3, [r6]
   2f0b4:	ldr	r2, [sp, #8]
   2f0b8:	mov	r0, r4
   2f0bc:	bl	1ed88 <ReadUInt8Data>
   2f0c0:	b	2f18c <Mat_VarRead5+0x176c>
   2f0c4:	.word	0x0003dd48
   2f0c8:	mov	r1, r2
   2f0cc:	ldr	r3, [r6]
   2f0d0:	ldr	r2, [sp, #8]
   2f0d4:	mov	r0, r4
   2f0d8:	bl	16fe8 <ReadInt16Data>
   2f0dc:	b	2f18c <Mat_VarRead5+0x176c>
   2f0e0:	.word	0x0003dd7a
   2f0e4:	.word	0x0003dd89
   2f0e8:	mov	r1, r2
   2f0ec:	ldr	r3, [r6]
   2f0f0:	ldr	r2, [sp, #8]
   2f0f4:	mov	r0, r4
   2f0f8:	bl	19a24 <ReadUInt16Data>
   2f0fc:	b	2f18c <Mat_VarRead5+0x176c>
   2f100:	mov	r1, r2
   2f104:	ldr	r3, [r6]
   2f108:	ldr	r2, [sp, #8]
   2f10c:	mov	r0, r4
   2f110:	bl	11690 <ReadInt32Data>
   2f114:	b	2f18c <Mat_VarRead5+0x176c>
   2f118:	mov	r1, r2
   2f11c:	ldr	r3, [r6]
   2f120:	ldr	r2, [sp, #8]
   2f124:	mov	r0, r4
   2f128:	bl	1433c <ReadUInt32Data>
   2f12c:	b	2f18c <Mat_VarRead5+0x176c>
   2f130:	mov	r1, r2
   2f134:	ldr	r3, [r6]
   2f138:	ldr	r2, [sp, #8]
   2f13c:	mov	r0, r4
   2f140:	bl	8aa0 <ReadSingleData>
   2f144:	b	2f18c <Mat_VarRead5+0x176c>
   2f148:	mov	r1, r2
   2f14c:	ldr	r3, [r6]
   2f150:	ldr	r2, [sp, #8]
   2f154:	mov	r0, r4
   2f158:	bl	37d8 <ReadDoubleData>
   2f15c:	b	2f18c <Mat_VarRead5+0x176c>
   2f160:	mov	r1, r2
   2f164:	ldr	r3, [r6]
   2f168:	ldr	r2, [sp, #8]
   2f16c:	mov	r0, r4
   2f170:	bl	bc30 <ReadInt64Data>
   2f174:	b	2f18c <Mat_VarRead5+0x176c>
   2f178:	mov	r1, r2
   2f17c:	ldr	r3, [r6]
   2f180:	ldr	r2, [sp, #8]
   2f184:	mov	r0, r4
   2f188:	bl	e960 <ReadUInt64Data>
   2f18c:	str	r0, [sp, #12]
   2f190:	ldr	r0, [sp, #16]
   2f194:	ldr	r1, [sp, #12]
   2f198:	cmp	r0, #0
   2f19c:	addne	r1, r1, #4
   2f1a0:	asr	r0, r1, #31
   2f1a4:	add	r0, r1, r0, lsr #29
   2f1a8:	bic	r0, r0, #7
   2f1ac:	subs	r1, r1, r0
   2f1b0:	beq	2def4 <Mat_VarRead5+0x4d4>
   2f1b4:	ldr	r0, [r4]
   2f1b8:	rsb	r1, r1, #8
   2f1bc:	mov	r2, #1
   2f1c0:	bl	1a2c <fseek@plt>
   2f1c4:	b	2def4 <Mat_VarRead5+0x4d4>
   2f1c8:	ldr	r0, [r9]
   2f1cc:	ldr	r3, [sp, #8]
   2f1d0:	ldr	r1, [r0, #12]
   2f1d4:	ldr	r0, [r6]
   2f1d8:	str	r0, [sp]
   2f1dc:	mov	r0, r4
   2f1e0:	bl	21180 <ReadCompressedUInt8Data>
   2f1e4:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f1e8:	ldr	r0, [r9]
   2f1ec:	ldr	r3, [sp, #8]
   2f1f0:	ldr	r1, [r0, #12]
   2f1f4:	ldr	r0, [r6]
   2f1f8:	str	r0, [sp]
   2f1fc:	mov	r0, r4
   2f200:	bl	194f4 <ReadCompressedInt16Data>
   2f204:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f208:	ldr	r0, [r9]
   2f20c:	ldr	r3, [sp, #8]
   2f210:	ldr	r1, [r0, #12]
   2f214:	ldr	r0, [r6]
   2f218:	str	r0, [sp]
   2f21c:	mov	r0, r4
   2f220:	bl	1bf30 <ReadCompressedUInt16Data>
   2f224:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f228:	ldr	r0, [r9]
   2f22c:	ldr	r3, [sp, #8]
   2f230:	ldr	r1, [r0, #12]
   2f234:	ldr	r0, [r6]
   2f238:	str	r0, [sp]
   2f23c:	mov	r0, r4
   2f240:	bl	13e0c <ReadCompressedInt32Data>
   2f244:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f248:	ldr	r0, [r9]
   2f24c:	ldr	r3, [sp, #8]
   2f250:	ldr	r1, [r0, #12]
   2f254:	ldr	r0, [r6]
   2f258:	str	r0, [sp]
   2f25c:	mov	r0, r4
   2f260:	bl	16ab8 <ReadCompressedUInt32Data>
   2f264:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f268:	ldr	r0, [r9]
   2f26c:	ldr	r3, [sp, #8]
   2f270:	ldr	r1, [r0, #12]
   2f274:	ldr	r0, [r6]
   2f278:	str	r0, [sp]
   2f27c:	mov	r0, r4
   2f280:	bl	b6c0 <ReadCompressedSingleData>
   2f284:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f288:	ldr	r0, [r9]
   2f28c:	ldr	r3, [sp, #8]
   2f290:	ldr	r1, [r0, #12]
   2f294:	ldr	r0, [r6]
   2f298:	str	r0, [sp]
   2f29c:	mov	r0, r4
   2f2a0:	bl	6348 <ReadCompressedDoubleData>
   2f2a4:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f2a8:	ldr	r0, [r9]
   2f2ac:	ldr	r3, [sp, #8]
   2f2b0:	ldr	r1, [r0, #12]
   2f2b4:	ldr	r0, [r6]
   2f2b8:	str	r0, [sp]
   2f2bc:	mov	r0, r4
   2f2c0:	bl	e3c0 <ReadCompressedInt64Data>
   2f2c4:	b	2f2e8 <Mat_VarRead5+0x18c8>
   2f2c8:	.word	0x0003dbc5
   2f2cc:	ldr	r0, [r9]
   2f2d0:	ldr	r3, [sp, #8]
   2f2d4:	ldr	r1, [r0, #12]
   2f2d8:	ldr	r0, [r6]
   2f2dc:	str	r0, [sp]
   2f2e0:	mov	r0, r4
   2f2e4:	bl	110f0 <ReadCompressedUInt64Data>
   2f2e8:	str	r0, [sp, #12]
   2f2ec:	ldr	r0, [sp, #16]
   2f2f0:	ldr	r1, [sp, #12]
   2f2f4:	cmp	r0, #0
   2f2f8:	addne	r1, r1, #4
   2f2fc:	asr	r0, r1, #31
   2f300:	add	r0, r1, r0, lsr #29
   2f304:	bic	r0, r0, #7
   2f308:	subs	r0, r1, r0
   2f30c:	beq	2def4 <Mat_VarRead5+0x4d4>
   2f310:	ldr	r1, [r9]
   2f314:	rsb	r2, r0, #8
   2f318:	mov	r0, r4
   2f31c:	ldr	r1, [r1, #12]
   2f320:	bl	2394 <InflateSkip>
   2f324:	b	2def4 <Mat_VarRead5+0x4d4>
   2f328:	.word	0x0003d948
   2f32c:	.word	0x0003d73d
   2f330:	.word	0x0003d762
   2f334:	.word	0x0003d9fb

0002f338 <Mat_VarReadNumeric5>:
   2f338:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2f33c:	add	fp, sp, #24
   2f340:	sub	sp, sp, #16
   2f344:	mov	r4, r0
   2f348:	ldr	r0, [r1, #48]	; 0x30
   2f34c:	mov	r9, r3
   2f350:	mov	r8, r2
   2f354:	mov	r5, r1
   2f358:	cmp	r0, #1
   2f35c:	bne	2f3c8 <Mat_VarReadNumeric5+0x90>
   2f360:	ldr	r0, [r5, #52]	; 0x34
   2f364:	add	r7, sp, #8
   2f368:	mov	r6, #0
   2f36c:	mov	r2, r7
   2f370:	ldr	r1, [r0, #12]
   2f374:	mov	r0, r4
   2f378:	str	r6, [r1, #4]
   2f37c:	bl	3108 <InflateDataType>
   2f380:	ldr	r0, [r4, #20]
   2f384:	cmp	r0, #0
   2f388:	beq	2f394 <Mat_VarReadNumeric5+0x5c>
   2f38c:	add	r0, sp, #8
   2f390:	bl	1c0c <Mat_uint32Swap>
   2f394:	ldr	r0, [sp, #8]
   2f398:	uxtb	r1, r0
   2f39c:	cmp	r1, #25
   2f3a0:	movcc	r6, r1
   2f3a4:	cmp	r0, #65536	; 0x10000
   2f3a8:	bcs	2f458 <Mat_VarReadNumeric5+0x120>
   2f3ac:	ldr	r0, [r5, #52]	; 0x34
   2f3b0:	add	r7, r7, #4
   2f3b4:	mov	r2, r7
   2f3b8:	ldr	r1, [r0, #12]
   2f3bc:	mov	r0, r4
   2f3c0:	bl	3108 <InflateDataType>
   2f3c4:	b	2f424 <Mat_VarReadNumeric5+0xec>
   2f3c8:	ldr	r3, [r4]
   2f3cc:	add	r7, sp, #8
   2f3d0:	mov	r1, #4
   2f3d4:	mov	r2, #1
   2f3d8:	mov	r0, r7
   2f3dc:	bl	18b8 <fread@plt>
   2f3e0:	ldr	r0, [r4, #20]
   2f3e4:	cmp	r0, #0
   2f3e8:	beq	2f3f4 <Mat_VarReadNumeric5+0xbc>
   2f3ec:	add	r0, sp, #8
   2f3f0:	bl	1c0c <Mat_uint32Swap>
   2f3f4:	ldr	r0, [sp, #8]
   2f3f8:	uxtb	r6, r0
   2f3fc:	cmp	r6, #25
   2f400:	movcs	r6, #0
   2f404:	cmp	r0, #65536	; 0x10000
   2f408:	bcs	2f458 <Mat_VarReadNumeric5+0x120>
   2f40c:	ldr	r3, [r4]
   2f410:	add	r7, r7, #4
   2f414:	mov	r1, #4
   2f418:	mov	r2, #1
   2f41c:	mov	r0, r7
   2f420:	bl	18b8 <fread@plt>
   2f424:	ldr	r0, [r4, #20]
   2f428:	cmp	r0, #0
   2f42c:	beq	2f438 <Mat_VarReadNumeric5+0x100>
   2f430:	mov	r0, r7
   2f434:	bl	1c0c <Mat_uint32Swap>
   2f438:	ldr	r0, [sp, #12]
   2f43c:	mov	r7, #0
   2f440:	cmp	r0, #0
   2f444:	bne	2f460 <Mat_VarReadNumeric5+0x128>
   2f448:	mov	r0, #0
   2f44c:	str	r0, [r5]
   2f450:	sub	sp, fp, #24
   2f454:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f458:	lsr	r0, r0, #16
   2f45c:	mov	r7, #1
   2f460:	ldr	r1, [r5, #48]	; 0x30
   2f464:	cmp	r1, #1
   2f468:	beq	2f4d0 <Mat_VarReadNumeric5+0x198>
   2f46c:	cmp	r1, #0
   2f470:	bne	2f788 <Mat_VarReadNumeric5+0x450>
   2f474:	ldr	r1, [r5, #16]
   2f478:	sub	r1, r1, #6
   2f47c:	cmp	r1, #9
   2f480:	bhi	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f484:	add	r0, pc, #4
   2f488:	ldr	r1, [r0, r1, lsl #2]
   2f48c:	add	pc, r0, r1
   2f490:	.word	0x00000028
   2f494:	.word	0x000000a4
   2f498:	.word	0x000000bc
   2f49c:	.word	0x000000d4
   2f4a0:	.word	0x000000ec
   2f4a4:	.word	0x00000104
   2f4a8:	.word	0x0000011c
   2f4ac:	.word	0x00000134
   2f4b0:	.word	0x0000014c
   2f4b4:	.word	0x00000164
   2f4b8:	mov	r0, r4
   2f4bc:	mov	r1, r8
   2f4c0:	mov	r2, r6
   2f4c4:	mov	r3, r9
   2f4c8:	bl	37d8 <ReadDoubleData>
   2f4cc:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f4d0:	ldr	r1, [r5, #16]
   2f4d4:	sub	r1, r1, #6
   2f4d8:	cmp	r1, #9
   2f4dc:	bhi	2f758 <Mat_VarReadNumeric5+0x420>
   2f4e0:	add	r0, pc, #4
   2f4e4:	ldr	r1, [r0, r1, lsl #2]
   2f4e8:	add	pc, r0, r1
   2f4ec:	.word	0x00000028
   2f4f0:	.word	0x00000150
   2f4f4:	.word	0x00000170
   2f4f8:	.word	0x00000190
   2f4fc:	.word	0x000001b0
   2f500:	.word	0x000001d0
   2f504:	.word	0x000001f0
   2f508:	.word	0x00000210
   2f50c:	.word	0x00000230
   2f510:	.word	0x00000250
   2f514:	ldr	r0, [r5, #52]	; 0x34
   2f518:	mov	r2, r8
   2f51c:	mov	r3, r6
   2f520:	ldr	r1, [r0, #12]
   2f524:	mov	r0, r4
   2f528:	str	r9, [sp]
   2f52c:	bl	6348 <ReadCompressedDoubleData>
   2f530:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f534:	mov	r0, r4
   2f538:	mov	r1, r8
   2f53c:	mov	r2, r6
   2f540:	mov	r3, r9
   2f544:	bl	8aa0 <ReadSingleData>
   2f548:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f54c:	mov	r0, r4
   2f550:	mov	r1, r8
   2f554:	mov	r2, r6
   2f558:	mov	r3, r9
   2f55c:	bl	1c460 <ReadInt8Data>
   2f560:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f564:	mov	r0, r4
   2f568:	mov	r1, r8
   2f56c:	mov	r2, r6
   2f570:	mov	r3, r9
   2f574:	bl	1ed88 <ReadUInt8Data>
   2f578:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f57c:	mov	r0, r4
   2f580:	mov	r1, r8
   2f584:	mov	r2, r6
   2f588:	mov	r3, r9
   2f58c:	bl	16fe8 <ReadInt16Data>
   2f590:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f594:	mov	r0, r4
   2f598:	mov	r1, r8
   2f59c:	mov	r2, r6
   2f5a0:	mov	r3, r9
   2f5a4:	bl	19a24 <ReadUInt16Data>
   2f5a8:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f5ac:	mov	r0, r4
   2f5b0:	mov	r1, r8
   2f5b4:	mov	r2, r6
   2f5b8:	mov	r3, r9
   2f5bc:	bl	11690 <ReadInt32Data>
   2f5c0:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f5c4:	mov	r0, r4
   2f5c8:	mov	r1, r8
   2f5cc:	mov	r2, r6
   2f5d0:	mov	r3, r9
   2f5d4:	bl	1433c <ReadUInt32Data>
   2f5d8:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f5dc:	mov	r0, r4
   2f5e0:	mov	r1, r8
   2f5e4:	mov	r2, r6
   2f5e8:	mov	r3, r9
   2f5ec:	bl	bc30 <ReadInt64Data>
   2f5f0:	b	2f608 <Mat_VarReadNumeric5+0x2d0>
   2f5f4:	mov	r0, r4
   2f5f8:	mov	r1, r8
   2f5fc:	mov	r2, r6
   2f600:	mov	r3, r9
   2f604:	bl	e960 <ReadUInt64Data>
   2f608:	cmp	r7, #0
   2f60c:	addne	r0, r0, #4
   2f610:	asr	r1, r0, #31
   2f614:	add	r1, r0, r1, lsr #29
   2f618:	bic	r1, r1, #7
   2f61c:	subs	r1, r0, r1
   2f620:	beq	2f788 <Mat_VarReadNumeric5+0x450>
   2f624:	ldr	r0, [r4]
   2f628:	rsb	r1, r1, #8
   2f62c:	mov	r2, #1
   2f630:	bl	1a2c <fseek@plt>
   2f634:	sub	sp, fp, #24
   2f638:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f63c:	ldr	r0, [r5, #52]	; 0x34
   2f640:	mov	r2, r8
   2f644:	mov	r3, r6
   2f648:	ldr	r1, [r0, #12]
   2f64c:	mov	r0, r4
   2f650:	str	r9, [sp]
   2f654:	bl	b6c0 <ReadCompressedSingleData>
   2f658:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f65c:	ldr	r0, [r5, #52]	; 0x34
   2f660:	mov	r2, r8
   2f664:	mov	r3, r6
   2f668:	ldr	r1, [r0, #12]
   2f66c:	mov	r0, r4
   2f670:	str	r9, [sp]
   2f674:	bl	1e858 <ReadCompressedInt8Data>
   2f678:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f67c:	ldr	r0, [r5, #52]	; 0x34
   2f680:	mov	r2, r8
   2f684:	mov	r3, r6
   2f688:	ldr	r1, [r0, #12]
   2f68c:	mov	r0, r4
   2f690:	str	r9, [sp]
   2f694:	bl	21180 <ReadCompressedUInt8Data>
   2f698:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f69c:	ldr	r0, [r5, #52]	; 0x34
   2f6a0:	mov	r2, r8
   2f6a4:	mov	r3, r6
   2f6a8:	ldr	r1, [r0, #12]
   2f6ac:	mov	r0, r4
   2f6b0:	str	r9, [sp]
   2f6b4:	bl	194f4 <ReadCompressedInt16Data>
   2f6b8:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f6bc:	ldr	r0, [r5, #52]	; 0x34
   2f6c0:	mov	r2, r8
   2f6c4:	mov	r3, r6
   2f6c8:	ldr	r1, [r0, #12]
   2f6cc:	mov	r0, r4
   2f6d0:	str	r9, [sp]
   2f6d4:	bl	1bf30 <ReadCompressedUInt16Data>
   2f6d8:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f6dc:	ldr	r0, [r5, #52]	; 0x34
   2f6e0:	mov	r2, r8
   2f6e4:	mov	r3, r6
   2f6e8:	ldr	r1, [r0, #12]
   2f6ec:	mov	r0, r4
   2f6f0:	str	r9, [sp]
   2f6f4:	bl	13e0c <ReadCompressedInt32Data>
   2f6f8:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f6fc:	ldr	r0, [r5, #52]	; 0x34
   2f700:	mov	r2, r8
   2f704:	mov	r3, r6
   2f708:	ldr	r1, [r0, #12]
   2f70c:	mov	r0, r4
   2f710:	str	r9, [sp]
   2f714:	bl	16ab8 <ReadCompressedUInt32Data>
   2f718:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f71c:	ldr	r0, [r5, #52]	; 0x34
   2f720:	mov	r2, r8
   2f724:	mov	r3, r6
   2f728:	ldr	r1, [r0, #12]
   2f72c:	mov	r0, r4
   2f730:	str	r9, [sp]
   2f734:	bl	e3c0 <ReadCompressedInt64Data>
   2f738:	b	2f758 <Mat_VarReadNumeric5+0x420>
   2f73c:	ldr	r0, [r5, #52]	; 0x34
   2f740:	mov	r2, r8
   2f744:	mov	r3, r6
   2f748:	ldr	r1, [r0, #12]
   2f74c:	mov	r0, r4
   2f750:	str	r9, [sp]
   2f754:	bl	110f0 <ReadCompressedUInt64Data>
   2f758:	cmp	r7, #0
   2f75c:	addne	r0, r0, #4
   2f760:	asr	r1, r0, #31
   2f764:	add	r1, r0, r1, lsr #29
   2f768:	bic	r1, r1, #7
   2f76c:	subs	r0, r0, r1
   2f770:	beq	2f788 <Mat_VarReadNumeric5+0x450>
   2f774:	ldr	r1, [r5, #52]	; 0x34
   2f778:	rsb	r2, r0, #8
   2f77c:	mov	r0, r4
   2f780:	ldr	r1, [r1, #12]
   2f784:	bl	2394 <InflateSkip>
   2f788:	sub	sp, fp, #24
   2f78c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002f790 <Mat_VarReadData5>:
   2f790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f794:	add	fp, sp, #28
   2f798:	sub	sp, sp, #92	; 0x5c
   2f79c:	mov	r4, r1
   2f7a0:	ldr	r1, [r1, #52]	; 0x34
   2f7a4:	mov	r8, r0
   2f7a8:	ldr	r0, [r0]
   2f7ac:	str	r2, [sp, #24]
   2f7b0:	mov	r2, #0
   2f7b4:	mov	r9, r3
   2f7b8:	mov	r6, #0
   2f7bc:	ldr	r1, [r1]
   2f7c0:	bl	1a2c <fseek@plt>
   2f7c4:	ldr	r0, [r4, #48]	; 0x30
   2f7c8:	ldr	sl, [fp, #12]
   2f7cc:	ldr	r7, [fp, #8]
   2f7d0:	cmp	r0, #1
   2f7d4:	beq	2f850 <Mat_VarReadData5+0xc0>
   2f7d8:	cmp	r0, #0
   2f7dc:	bne	2f9c4 <Mat_VarReadData5+0x234>
   2f7e0:	ldr	r3, [r8]
   2f7e4:	sub	r5, fp, #36	; 0x24
   2f7e8:	mov	r1, #4
   2f7ec:	mov	r2, #2
   2f7f0:	mov	r0, r5
   2f7f4:	bl	18b8 <fread@plt>
   2f7f8:	ldr	r0, [r8, #20]
   2f7fc:	cmp	r0, #0
   2f800:	beq	2f814 <Mat_VarReadData5+0x84>
   2f804:	mov	r0, r5
   2f808:	bl	1bf8 <Mat_int32Swap>
   2f80c:	add	r0, r5, #4
   2f810:	bl	1bf8 <Mat_int32Swap>
   2f814:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f818:	uxtb	r1, r0
   2f81c:	cmp	r1, #25
   2f820:	movcs	r1, #0
   2f824:	cmp	r0, #65536	; 0x10000
   2f828:	str	r1, [r4, #8]
   2f82c:	bcc	2f9bc <Mat_VarReadData5+0x22c>
   2f830:	ldr	r0, [r8]
   2f834:	mvn	r1, #3
   2f838:	mov	r2, #1
   2f83c:	bl	1a2c <fseek@plt>
   2f840:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f844:	mov	r1, #4
   2f848:	add	r6, r1, r0, asr #16
   2f84c:	b	2f9c4 <Mat_VarReadData5+0x234>
   2f850:	ldr	r0, [r4, #52]	; 0x34
   2f854:	ldr	r6, [r0, #16]
   2f858:	cmp	r6, #0
   2f85c:	beq	2f8e0 <Mat_VarReadData5+0x150>
   2f860:	ldr	r0, [r4, #20]
   2f864:	cmp	r0, #0
   2f868:	beq	2f910 <Mat_VarReadData5+0x180>
   2f86c:	ldr	r0, [sp, #24]
   2f870:	ldr	r5, [r4, #32]
   2f874:	ldr	r3, [r4, #8]
   2f878:	ldr	r2, [r4, #16]
   2f87c:	ldm	r4, {ip, lr}
   2f880:	ldr	r1, [r0]
   2f884:	ldr	r0, [r6]
   2f888:	stm	sp, {r5, r9}
   2f88c:	add	r5, sp, #8
   2f890:	stm	r5, {r7, sl, lr}
   2f894:	str	ip, [sp, #20]
   2f898:	bl	2ff80 <GetDataSlab>
   2f89c:	mov	r5, r0
   2f8a0:	cmp	r0, #0
   2f8a4:	bne	2ff68 <Mat_VarReadData5+0x7d8>
   2f8a8:	ldr	r0, [sp, #24]
   2f8ac:	mov	ip, r7
   2f8b0:	ldr	r7, [r4, #32]
   2f8b4:	ldr	r5, [r4, #4]
   2f8b8:	ldr	r3, [r4, #8]
   2f8bc:	ldr	r2, [r4, #16]
   2f8c0:	ldr	r1, [r0, #4]
   2f8c4:	ldr	r0, [r6, #4]
   2f8c8:	ldr	r6, [r4]
   2f8cc:	stm	sp, {r7, r9, ip}
   2f8d0:	str	sl, [sp, #12]
   2f8d4:	str	r5, [sp, #16]
   2f8d8:	str	r6, [sp, #20]
   2f8dc:	b	2f93c <Mat_VarReadData5+0x1ac>
   2f8e0:	ldr	r1, [r0, #12]
   2f8e4:	add	r0, sp, #28
   2f8e8:	bl	1948 <inflateCopy@plt>
   2f8ec:	cmp	r0, #0
   2f8f0:	beq	2f948 <Mat_VarReadData5+0x1b8>
   2f8f4:	bl	1888 <zError@plt>
   2f8f8:	mov	r1, r0
   2f8fc:	ldr	r0, [pc, #1648]	; 2ff74 <Mat_VarReadData5+0x7e4>
   2f900:	add	r0, pc, r0
   2f904:	bl	19b4 <Mat_Critical@plt>
   2f908:	mvn	r5, #0
   2f90c:	b	2ff68 <Mat_VarReadData5+0x7d8>
   2f910:	ldr	r0, [r4, #32]
   2f914:	ldm	r4, {r1, r5}
   2f918:	ldr	r3, [r4, #8]
   2f91c:	ldr	r2, [r4, #16]
   2f920:	stm	sp, {r0, r9}
   2f924:	str	r1, [sp, #20]
   2f928:	ldr	r1, [sp, #24]
   2f92c:	mov	r0, r6
   2f930:	str	r7, [sp, #8]
   2f934:	str	sl, [sp, #12]
   2f938:	str	r5, [sp, #16]
   2f93c:	bl	2ff80 <GetDataSlab>
   2f940:	mov	r5, r0
   2f944:	b	2ff68 <Mat_VarReadData5+0x7d8>
   2f948:	sub	r5, fp, #36	; 0x24
   2f94c:	mov	r6, #0
   2f950:	add	r1, sp, #28
   2f954:	mov	r0, r8
   2f958:	mov	r2, r5
   2f95c:	str	r6, [sp, #32]
   2f960:	bl	3108 <InflateDataType>
   2f964:	ldr	r0, [r8, #20]
   2f968:	cmp	r0, #0
   2f96c:	beq	2f978 <Mat_VarReadData5+0x1e8>
   2f970:	sub	r0, fp, #36	; 0x24
   2f974:	bl	1bf8 <Mat_int32Swap>
   2f978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f97c:	uxtb	r1, r0
   2f980:	cmp	r1, #25
   2f984:	movcs	r1, r6
   2f988:	cmp	r6, r0, lsr #16
   2f98c:	str	r1, [r4, #8]
   2f990:	bne	2f844 <Mat_VarReadData5+0xb4>
   2f994:	add	r5, r5, #4
   2f998:	add	r1, sp, #28
   2f99c:	mov	r0, r8
   2f9a0:	mov	r2, r5
   2f9a4:	bl	3108 <InflateDataType>
   2f9a8:	ldr	r0, [r8, #20]
   2f9ac:	cmp	r0, #0
   2f9b0:	beq	2f9bc <Mat_VarReadData5+0x22c>
   2f9b4:	mov	r0, r5
   2f9b8:	bl	1bf8 <Mat_int32Swap>
   2f9bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f9c0:	add	r6, r0, #8
   2f9c4:	asr	r0, r6, #31
   2f9c8:	add	r0, r6, r0, lsr #29
   2f9cc:	bic	r0, r0, #7
   2f9d0:	subs	r1, r6, r0
   2f9d4:	addne	r6, r0, #8
   2f9d8:	ldr	r0, [r4, #4]
   2f9dc:	cmp	r0, #2
   2f9e0:	bne	2fb28 <Mat_VarReadData5+0x398>
   2f9e4:	ldr	r2, [sl]
   2f9e8:	ldr	r0, [r9]
   2f9ec:	ldr	r1, [r7]
   2f9f0:	mov	r5, #1
   2f9f4:	sub	r2, r2, #1
   2f9f8:	mla	r0, r2, r1, r0
   2f9fc:	add	r1, r0, #1
   2fa00:	ldr	r0, [r4, #32]
   2fa04:	ldr	r2, [r0]
   2fa08:	cmp	r1, r2
   2fa0c:	bhi	2ff68 <Mat_VarReadData5+0x7d8>
   2fa10:	ldr	r3, [sl, #4]
   2fa14:	ldr	r1, [r9, #4]
   2fa18:	ldr	r2, [r7, #4]
   2fa1c:	sub	r3, r3, #1
   2fa20:	mla	r1, r3, r2, r1
   2fa24:	ldr	r2, [r0, #4]
   2fa28:	add	r1, r1, #1
   2fa2c:	cmp	r1, r2
   2fa30:	bhi	2ff68 <Mat_VarReadData5+0x7d8>
   2fa34:	ldr	r1, [r4, #48]	; 0x30
   2fa38:	cmp	r1, #1
   2fa3c:	beq	2fdb8 <Mat_VarReadData5+0x628>
   2fa40:	cmp	r1, #0
   2fa44:	bne	2ff4c <Mat_VarReadData5+0x7bc>
   2fa48:	ldr	r1, [r4, #20]
   2fa4c:	cmp	r1, #0
   2fa50:	beq	2feec <Mat_VarReadData5+0x75c>
   2fa54:	ldr	r1, [sp, #24]
   2fa58:	ldr	r3, [r4, #8]
   2fa5c:	ldr	r2, [r4, #16]
   2fa60:	ldr	r1, [r1]
   2fa64:	stm	sp, {r0, r9}
   2fa68:	mov	r0, r8
   2fa6c:	str	r7, [sp, #8]
   2fa70:	str	sl, [sp, #12]
   2fa74:	bl	2a7b0 <ReadDataSlab2>
   2fa78:	ldr	r0, [r4, #52]	; 0x34
   2fa7c:	mov	r2, #0
   2fa80:	mov	r5, #0
   2fa84:	ldr	r0, [r0]
   2fa88:	add	r1, r0, r6
   2fa8c:	ldr	r0, [r8]
   2fa90:	bl	1a2c <fseek@plt>
   2fa94:	ldr	r3, [r8]
   2fa98:	sub	r6, fp, #36	; 0x24
   2fa9c:	mov	r1, #4
   2faa0:	mov	r2, #2
   2faa4:	mov	r0, r6
   2faa8:	bl	18b8 <fread@plt>
   2faac:	ldr	r0, [r8, #20]
   2fab0:	cmp	r0, #0
   2fab4:	beq	2fac8 <Mat_VarReadData5+0x338>
   2fab8:	mov	r0, r6
   2fabc:	bl	1bf8 <Mat_int32Swap>
   2fac0:	add	r0, r6, #4
   2fac4:	bl	1bf8 <Mat_int32Swap>
   2fac8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2facc:	uxtb	r1, r0
   2fad0:	cmp	r1, #25
   2fad4:	movcc	r5, r1
   2fad8:	cmp	r0, #65536	; 0x10000
   2fadc:	str	r5, [r4, #8]
   2fae0:	bcc	2faf8 <Mat_VarReadData5+0x368>
   2fae4:	ldr	r0, [r8]
   2fae8:	mvn	r1, #3
   2faec:	mov	r2, #1
   2faf0:	bl	1a2c <fseek@plt>
   2faf4:	ldr	r5, [r4, #8]
   2faf8:	ldr	r0, [sp, #24]
   2fafc:	ldr	r2, [r4, #16]
   2fb00:	mov	r3, r5
   2fb04:	ldr	r1, [r0, #4]
   2fb08:	ldr	r0, [r4, #32]
   2fb0c:	stm	sp, {r0, r9}
   2fb10:	ldr	r0, [fp, #8]
   2fb14:	str	sl, [sp, #12]
   2fb18:	str	r0, [sp, #8]
   2fb1c:	mov	r0, r8
   2fb20:	bl	2a7b0 <ReadDataSlab2>
   2fb24:	b	2ff4c <Mat_VarReadData5+0x7bc>
   2fb28:	ldr	r1, [r4, #48]	; 0x30
   2fb2c:	cmp	r1, #1
   2fb30:	beq	2fc24 <Mat_VarReadData5+0x494>
   2fb34:	cmp	r1, #0
   2fb38:	bne	2ff4c <Mat_VarReadData5+0x7bc>
   2fb3c:	ldr	r1, [r4, #20]
   2fb40:	cmp	r1, #0
   2fb44:	beq	2fd60 <Mat_VarReadData5+0x5d0>
   2fb48:	ldr	r1, [sp, #24]
   2fb4c:	ldr	r3, [r4, #8]
   2fb50:	ldr	r2, [r4, #16]
   2fb54:	ldr	r5, [r4, #32]
   2fb58:	ldr	r1, [r1]
   2fb5c:	stm	sp, {r0, r5, r9}
   2fb60:	mov	r0, r8
   2fb64:	str	r7, [sp, #12]
   2fb68:	str	sl, [sp, #16]
   2fb6c:	bl	21938 <ReadDataSlabN>
   2fb70:	ldr	r0, [r4, #52]	; 0x34
   2fb74:	mov	r2, #0
   2fb78:	mov	r5, #0
   2fb7c:	ldr	r0, [r0]
   2fb80:	add	r1, r0, r6
   2fb84:	ldr	r0, [r8]
   2fb88:	bl	1a2c <fseek@plt>
   2fb8c:	ldr	r3, [r8]
   2fb90:	sub	r6, fp, #36	; 0x24
   2fb94:	mov	r1, #4
   2fb98:	mov	r2, #2
   2fb9c:	mov	r0, r6
   2fba0:	bl	18b8 <fread@plt>
   2fba4:	ldr	r0, [r8, #20]
   2fba8:	cmp	r0, #0
   2fbac:	beq	2fbc0 <Mat_VarReadData5+0x430>
   2fbb0:	mov	r0, r6
   2fbb4:	bl	1bf8 <Mat_int32Swap>
   2fbb8:	add	r0, r6, #4
   2fbbc:	bl	1bf8 <Mat_int32Swap>
   2fbc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2fbc4:	uxtb	r1, r0
   2fbc8:	cmp	r1, #25
   2fbcc:	movcc	r5, r1
   2fbd0:	cmp	r0, #65536	; 0x10000
   2fbd4:	str	r5, [r4, #8]
   2fbd8:	bcc	2fbf0 <Mat_VarReadData5+0x460>
   2fbdc:	ldr	r0, [r8]
   2fbe0:	mvn	r1, #3
   2fbe4:	mov	r2, #1
   2fbe8:	bl	1a2c <fseek@plt>
   2fbec:	ldr	r5, [r4, #8]
   2fbf0:	ldr	r0, [sp, #24]
   2fbf4:	ldr	r2, [r4, #16]
   2fbf8:	ldr	r3, [r4, #32]
   2fbfc:	ldr	r1, [r0, #4]
   2fc00:	ldr	r0, [r4, #4]
   2fc04:	stm	sp, {r0, r3, r9}
   2fc08:	ldr	r0, [fp, #8]
   2fc0c:	mov	r3, r5
   2fc10:	str	sl, [sp, #16]
   2fc14:	str	r0, [sp, #12]
   2fc18:	mov	r0, r8
   2fc1c:	bl	21938 <ReadDataSlabN>
   2fc20:	b	2ff4c <Mat_VarReadData5+0x7bc>
   2fc24:	ldr	r1, [r4, #20]
   2fc28:	cmp	r1, #0
   2fc2c:	beq	2fd88 <Mat_VarReadData5+0x5f8>
   2fc30:	ldr	r1, [sp, #24]
   2fc34:	ldr	r3, [r4, #16]
   2fc38:	ldr	r5, [r4, #32]
   2fc3c:	ldr	r2, [r1]
   2fc40:	ldr	r1, [r4, #8]
   2fc44:	str	r1, [sp]
   2fc48:	stmib	sp, {r0, r5, r9}
   2fc4c:	add	r5, sp, #28
   2fc50:	mov	r0, r8
   2fc54:	str	r7, [sp, #16]
   2fc58:	str	sl, [sp, #20]
   2fc5c:	mov	r1, r5
   2fc60:	bl	25bd0 <ReadCompressedDataSlabN>
   2fc64:	ldr	r1, [r4, #52]	; 0x34
   2fc68:	ldr	r0, [r8]
   2fc6c:	mov	r2, #0
   2fc70:	mov	r7, #0
   2fc74:	ldr	r1, [r1]
   2fc78:	bl	1a2c <fseek@plt>
   2fc7c:	mov	r0, r5
   2fc80:	bl	193c <inflateEnd@plt>
   2fc84:	ldr	r0, [r4, #52]	; 0x34
   2fc88:	ldr	r1, [r0, #12]
   2fc8c:	mov	r0, r5
   2fc90:	bl	1948 <inflateCopy@plt>
   2fc94:	mov	r5, r0
   2fc98:	cmp	r0, #0
   2fc9c:	beq	2fcb8 <Mat_VarReadData5+0x528>
   2fca0:	mov	r0, r5
   2fca4:	bl	1888 <zError@plt>
   2fca8:	mov	r1, r0
   2fcac:	ldr	r0, [pc, #712]	; 2ff7c <Mat_VarReadData5+0x7ec>
   2fcb0:	add	r0, pc, r0
   2fcb4:	bl	19b4 <Mat_Critical@plt>
   2fcb8:	add	sl, sp, #28
   2fcbc:	mov	r0, r8
   2fcc0:	mov	r2, r6
   2fcc4:	mov	r1, sl
   2fcc8:	bl	2394 <InflateSkip>
   2fccc:	sub	r2, fp, #36	; 0x24
   2fcd0:	mov	r0, r8
   2fcd4:	mov	r1, sl
   2fcd8:	str	r7, [sp, #32]
   2fcdc:	bl	3108 <InflateDataType>
   2fce0:	ldr	r0, [r8, #20]
   2fce4:	cmp	r0, #0
   2fce8:	beq	2fcf4 <Mat_VarReadData5+0x564>
   2fcec:	sub	r0, fp, #36	; 0x24
   2fcf0:	bl	1bf8 <Mat_int32Swap>
   2fcf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fcf8:	ldr	sl, [fp, #12]
   2fcfc:	mov	r2, #0
   2fd00:	uxtb	r0, r1
   2fd04:	cmp	r0, #25
   2fd08:	movcs	r0, r2
   2fd0c:	cmp	r2, r1, lsr #16
   2fd10:	str	r0, [r4, #8]
   2fd14:	bne	2fd2c <Mat_VarReadData5+0x59c>
   2fd18:	add	r1, sp, #28
   2fd1c:	mov	r0, r8
   2fd20:	mov	r2, #4
   2fd24:	bl	2394 <InflateSkip>
   2fd28:	ldr	r0, [r4, #8]
   2fd2c:	ldr	r1, [sp, #24]
   2fd30:	ldr	r3, [r4, #16]
   2fd34:	ldr	r6, [r4, #32]
   2fd38:	ldr	r2, [r1, #4]
   2fd3c:	ldr	r1, [r4, #4]
   2fd40:	stm	sp, {r0, r1, r6, r9}
   2fd44:	ldr	r0, [fp, #8]
   2fd48:	add	r1, sp, #28
   2fd4c:	str	sl, [sp, #20]
   2fd50:	str	r0, [sp, #16]
   2fd54:	mov	r0, r8
   2fd58:	bl	25bd0 <ReadCompressedDataSlabN>
   2fd5c:	b	2ff3c <Mat_VarReadData5+0x7ac>
   2fd60:	ldr	r3, [r4, #8]
   2fd64:	ldr	r2, [r4, #16]
   2fd68:	ldr	r1, [r4, #32]
   2fd6c:	stm	sp, {r0, r1, r9}
   2fd70:	ldr	r1, [sp, #24]
   2fd74:	mov	r0, r8
   2fd78:	str	r7, [sp, #12]
   2fd7c:	str	sl, [sp, #16]
   2fd80:	bl	21938 <ReadDataSlabN>
   2fd84:	b	2ff4c <Mat_VarReadData5+0x7bc>
   2fd88:	ldr	r1, [r4, #8]
   2fd8c:	ldr	r3, [r4, #16]
   2fd90:	ldr	r2, [r4, #32]
   2fd94:	str	r1, [sp]
   2fd98:	stmib	sp, {r0, r2, r9}
   2fd9c:	ldr	r2, [sp, #24]
   2fda0:	add	r1, sp, #28
   2fda4:	mov	r0, r8
   2fda8:	str	r7, [sp, #16]
   2fdac:	str	sl, [sp, #20]
   2fdb0:	bl	25bd0 <ReadCompressedDataSlabN>
   2fdb4:	b	2ff38 <Mat_VarReadData5+0x7a8>
   2fdb8:	ldr	r1, [r4, #20]
   2fdbc:	cmp	r1, #0
   2fdc0:	beq	2ff10 <Mat_VarReadData5+0x780>
   2fdc4:	ldr	r1, [sp, #24]
   2fdc8:	ldr	r3, [r4, #16]
   2fdcc:	add	r5, sp, #28
   2fdd0:	ldr	r2, [r1]
   2fdd4:	ldr	r1, [r4, #8]
   2fdd8:	str	r1, [sp]
   2fddc:	stmib	sp, {r0, r9}
   2fde0:	mov	r0, r8
   2fde4:	mov	r1, r5
   2fde8:	str	r7, [sp, #12]
   2fdec:	str	sl, [sp, #16]
   2fdf0:	bl	2bd9c <ReadCompressedDataSlab2>
   2fdf4:	ldr	r1, [r4, #52]	; 0x34
   2fdf8:	ldr	r0, [r8]
   2fdfc:	mov	r2, #0
   2fe00:	mov	r7, #0
   2fe04:	ldr	r1, [r1]
   2fe08:	bl	1a2c <fseek@plt>
   2fe0c:	mov	r0, r5
   2fe10:	bl	193c <inflateEnd@plt>
   2fe14:	ldr	r0, [r4, #52]	; 0x34
   2fe18:	ldr	r1, [r0, #12]
   2fe1c:	mov	r0, r5
   2fe20:	bl	1948 <inflateCopy@plt>
   2fe24:	mov	r5, r0
   2fe28:	cmp	r0, #0
   2fe2c:	beq	2fe48 <Mat_VarReadData5+0x6b8>
   2fe30:	mov	r0, r5
   2fe34:	bl	1888 <zError@plt>
   2fe38:	mov	r1, r0
   2fe3c:	ldr	r0, [pc, #308]	; 2ff78 <Mat_VarReadData5+0x7e8>
   2fe40:	add	r0, pc, r0
   2fe44:	bl	19b4 <Mat_Critical@plt>
   2fe48:	add	sl, sp, #28
   2fe4c:	mov	r0, r8
   2fe50:	mov	r2, r6
   2fe54:	mov	r1, sl
   2fe58:	bl	2394 <InflateSkip>
   2fe5c:	sub	r2, fp, #36	; 0x24
   2fe60:	mov	r0, r8
   2fe64:	mov	r1, sl
   2fe68:	str	r7, [sp, #32]
   2fe6c:	bl	3108 <InflateDataType>
   2fe70:	ldr	r0, [r8, #20]
   2fe74:	cmp	r0, #0
   2fe78:	beq	2fe84 <Mat_VarReadData5+0x6f4>
   2fe7c:	sub	r0, fp, #36	; 0x24
   2fe80:	bl	1bf8 <Mat_int32Swap>
   2fe84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fe88:	ldr	r6, [fp, #12]
   2fe8c:	mov	r2, #0
   2fe90:	uxtb	r0, r1
   2fe94:	cmp	r0, #25
   2fe98:	movcs	r0, r2
   2fe9c:	cmp	r2, r1, lsr #16
   2fea0:	str	r0, [r4, #8]
   2fea4:	bne	2febc <Mat_VarReadData5+0x72c>
   2fea8:	add	r1, sp, #28
   2feac:	mov	r0, r8
   2feb0:	mov	r2, #4
   2feb4:	bl	2394 <InflateSkip>
   2feb8:	ldr	r0, [r4, #8]
   2febc:	ldr	r1, [sp, #24]
   2fec0:	ldr	r3, [r4, #16]
   2fec4:	ldr	r2, [r1, #4]
   2fec8:	ldr	r1, [r4, #32]
   2fecc:	stm	sp, {r0, r1, r9}
   2fed0:	ldr	r0, [fp, #8]
   2fed4:	add	r1, sp, #28
   2fed8:	str	r6, [sp, #16]
   2fedc:	str	r0, [sp, #12]
   2fee0:	mov	r0, r8
   2fee4:	bl	2bd9c <ReadCompressedDataSlab2>
   2fee8:	b	2ff3c <Mat_VarReadData5+0x7ac>
   2feec:	ldr	r3, [r4, #8]
   2fef0:	ldr	r2, [r4, #16]
   2fef4:	ldr	r1, [sp, #24]
   2fef8:	stm	sp, {r0, r9}
   2fefc:	mov	r0, r8
   2ff00:	str	r7, [sp, #8]
   2ff04:	str	sl, [sp, #12]
   2ff08:	bl	2a7b0 <ReadDataSlab2>
   2ff0c:	b	2ff4c <Mat_VarReadData5+0x7bc>
   2ff10:	ldr	r1, [r4, #8]
   2ff14:	ldr	r3, [r4, #16]
   2ff18:	ldr	r2, [sp, #24]
   2ff1c:	str	r1, [sp]
   2ff20:	stmib	sp, {r0, r9}
   2ff24:	add	r1, sp, #28
   2ff28:	mov	r0, r8
   2ff2c:	str	r7, [sp, #12]
   2ff30:	str	sl, [sp, #16]
   2ff34:	bl	2bd9c <ReadCompressedDataSlab2>
   2ff38:	mov	r5, #0
   2ff3c:	add	r0, sp, #28
   2ff40:	bl	193c <inflateEnd@plt>
   2ff44:	cmp	r5, #0
   2ff48:	bne	2ff68 <Mat_VarReadData5+0x7d8>
   2ff4c:	ldr	r0, [r4, #16]
   2ff50:	bl	665cc <ClassType2DataType>
   2ff54:	str	r0, [r4, #8]
   2ff58:	ldr	r0, [r4, #16]
   2ff5c:	bl	1a08 <Mat_SizeOfClass@plt>
   2ff60:	mov	r5, #0
   2ff64:	str	r0, [r4, #12]
   2ff68:	mov	r0, r5
   2ff6c:	sub	sp, fp, #28
   2ff70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ff74:	.word	0x0003c6c3
   2ff78:	.word	0x0003c183
   2ff7c:	.word	0x0003c313

0002ff80 <GetDataSlab>:
   2ff80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ff84:	add	fp, sp, #28
   2ff88:	sub	sp, sp, #4
   2ff8c:	vpush	{d8-d9}
   2ff90:	sub	sp, sp, #1008	; 0x3f0
   2ff94:	cmp	r2, #6
   2ff98:	mov	r8, r1
   2ff9c:	mov	r1, r0
   2ffa0:	cmpeq	r3, #9
   2ffa4:	beq	30018 <GetDataSlab+0x98>
   2ffa8:	cmp	r2, #7
   2ffac:	cmpeq	r3, #7
   2ffb0:	beq	30018 <GetDataSlab+0x98>
   2ffb4:	cmp	r2, #10
   2ffb8:	cmpeq	r3, #3
   2ffbc:	beq	30018 <GetDataSlab+0x98>
   2ffc0:	cmp	r2, #12
   2ffc4:	cmpeq	r3, #5
   2ffc8:	beq	30018 <GetDataSlab+0x98>
   2ffcc:	cmp	r2, #14
   2ffd0:	cmpeq	r3, #12
   2ffd4:	beq	30018 <GetDataSlab+0x98>
   2ffd8:	cmp	r2, #8
   2ffdc:	cmpeq	r3, #1
   2ffe0:	beq	30018 <GetDataSlab+0x98>
   2ffe4:	cmp	r2, #11
   2ffe8:	cmpeq	r3, #4
   2ffec:	beq	30018 <GetDataSlab+0x98>
   2fff0:	cmp	r2, #13
   2fff4:	cmpeq	r3, #6
   2fff8:	beq	30018 <GetDataSlab+0x98>
   2fffc:	cmp	r2, #15
   30000:	cmpeq	r3, #13
   30004:	beq	30018 <GetDataSlab+0x98>
   30008:	cmp	r2, #9
   3000c:	mov	ip, #0
   30010:	cmpeq	r3, #2
   30014:	bne	3001c <GetDataSlab+0x9c>
   30018:	mov	ip, #1
   3001c:	ldr	r0, [fp, #24]
   30020:	str	r3, [sp, #76]	; 0x4c
   30024:	ldr	r3, [fp, #12]
   30028:	ldr	sl, [fp, #16]
   3002c:	ldr	r5, [fp, #8]
   30030:	str	r8, [sp, #88]	; 0x58
   30034:	str	r1, [sp, #80]	; 0x50
   30038:	cmp	r0, #2
   3003c:	str	r3, [sp, #92]	; 0x5c
   30040:	bne	30434 <GetDataSlab+0x4b4>
   30044:	ldr	r9, [fp, #20]
   30048:	mov	r7, sl
   3004c:	ldr	r4, [r3]
   30050:	mov	sl, r8
   30054:	ldr	r6, [r5]
   30058:	ldr	r1, [r7]
   3005c:	ldr	r0, [r9]
   30060:	str	r6, [sp, #64]	; 0x40
   30064:	str	r1, [sp, #68]	; 0x44
   30068:	mov	r8, r0
   3006c:	sub	r0, r0, #1
   30070:	mla	r0, r0, r1, r4
   30074:	add	r1, r0, #1
   30078:	mov	r0, #1
   3007c:	cmp	r1, r6
   30080:	bhi	56c20 <GetDataSlab+0x26ca0>
   30084:	ldr	r1, [r9, #4]!
   30088:	str	r4, [sp, #60]	; 0x3c
   3008c:	ldr	lr, [r3, #4]
   30090:	ldr	r4, [r7, #4]!
   30094:	sub	r6, r1, #1
   30098:	str	r4, [sp, #72]	; 0x48
   3009c:	str	lr, [sp, #56]	; 0x38
   300a0:	mla	r6, r6, r4, lr
   300a4:	ldr	r4, [r5, #4]
   300a8:	add	r6, r6, #1
   300ac:	cmp	r6, r4
   300b0:	bhi	56c20 <GetDataSlab+0x26ca0>
   300b4:	ldr	r4, [sp, #68]	; 0x44
   300b8:	mov	lr, r5
   300bc:	mov	r5, r8
   300c0:	cmp	r4, #1
   300c4:	ldreq	r4, [sp, #64]	; 0x40
   300c8:	cmpeq	r5, r4
   300cc:	beq	31044 <GetDataSlab+0x10c4>
   300d0:	mov	r3, r9
   300d4:	ldr	r8, [sp, #64]	; 0x40
   300d8:	ldr	r9, [fp, #20]
   300dc:	ldr	sl, [fp, #16]
   300e0:	sub	r2, r2, #6
   300e4:	str	r1, [sp, #84]	; 0x54
   300e8:	cmp	r2, #9
   300ec:	bhi	56c20 <GetDataSlab+0x26ca0>
   300f0:	add	r0, pc, #8
   300f4:	mov	ip, r7
   300f8:	ldr	r2, [r0, r2, lsl #2]
   300fc:	add	pc, r0, r2
   30100:	.word	0x00000028
   30104:	.word	0x000017d8
   30108:	.word	0x00001ab8
   3010c:	.word	0x00001ba0
   30110:	.word	0x00001c88
   30114:	.word	0x00001f74
   30118:	.word	0x00002260
   3011c:	.word	0x00002350
   30120:	.word	0x00002440
   30124:	.word	0x00002730
   30128:	ldr	r6, [sp, #76]	; 0x4c
   3012c:	mov	r0, #1
   30130:	sub	r1, r6, #1
   30134:	cmp	r1, #11
   30138:	bhi	5e6c0 <GetDataSlab+0x2e740>
   3013c:	add	r2, pc, #16
   30140:	ldr	r3, [sp, #80]	; 0x50
   30144:	ldr	r7, [sp, #84]	; 0x54
   30148:	ldr	r4, [sp, #60]	; 0x3c
   3014c:	ldr	r1, [r2, r1, lsl #2]
   30150:	add	pc, r2, r1
   30154:	.word	0x00000030
   30158:	.word	0x00026c78
   3015c:	.word	0x00026f20
   30160:	.word	0x00027198
   30164:	.word	0x00027410
   30168:	.word	0x00027630
   3016c:	.word	0x00027850
   30170:	.word	0x0002e56c
   30174:	.word	0x00027a4c
   30178:	.word	0x0002e56c
   3017c:	.word	0x0002e56c
   30180:	.word	0x00027c70
   30184:	cmp	r7, #1
   30188:	blt	5f88c <GetDataSlab+0x2f90c>
   3018c:	ldr	r7, [sp, #56]	; 0x38
   30190:	mov	r2, r8
   30194:	mov	r1, #1
   30198:	mov	ip, #0
   3019c:	mla	r0, r7, r8, r4
   301a0:	str	r0, [sp, #52]	; 0x34
   301a4:	add	r8, r3, r0
   301a8:	sub	r0, r5, #2
   301ac:	add	r1, r1, r0, lsr #1
   301b0:	lsr	r0, r0, #1
   301b4:	str	r0, [sp, #56]	; 0x38
   301b8:	and	r3, r1, #1
   301bc:	sub	r1, r1, r3
   301c0:	str	r3, [sp, #48]	; 0x30
   301c4:	str	r1, [sp, #44]	; 0x2c
   301c8:	add	r1, r5, r4
   301cc:	mla	r1, r7, r2, r1
   301d0:	str	r1, [sp, #60]	; 0x3c
   301d4:	ldr	r1, [sp, #72]	; 0x48
   301d8:	mul	r1, r1, r2
   301dc:	ldr	r2, [sp, #68]	; 0x44
   301e0:	str	r1, [sp, #92]	; 0x5c
   301e4:	subs	r1, r5, #1
   301e8:	mov	r3, r2
   301ec:	sub	r2, r2, #1
   301f0:	movwne	r1, #1
   301f4:	clz	r2, r2
   301f8:	lsr	r2, r2, #5
   301fc:	and	r1, r1, r2
   30200:	and	r2, r5, #1
   30204:	str	r1, [sp, #76]	; 0x4c
   30208:	lsl	r1, r3, #2
   3020c:	str	r2, [sp, #72]	; 0x48
   30210:	bic	r2, r5, #1
   30214:	str	r1, [sp, #40]	; 0x28
   30218:	lsl	r1, r3, #1
   3021c:	str	r2, [sp, #64]	; 0x40
   30220:	ldr	sl, [sp, #40]	; 0x28
   30224:	cmp	r5, #1
   30228:	bge	30250 <GetDataSlab+0x2d0>
   3022c:	ldr	lr, [sp, #84]	; 0x54
   30230:	ldr	r6, [sp, #92]	; 0x5c
   30234:	add	ip, ip, #1
   30238:	add	r8, r8, r6
   3023c:	mov	r0, #0
   30240:	cmp	ip, lr
   30244:	beq	56c20 <GetDataSlab+0x26ca0>
   30248:	cmp	r5, #1
   3024c:	blt	3022c <GetDataSlab+0x2ac>
   30250:	ldr	r2, [sp, #76]	; 0x4c
   30254:	ldr	lr, [sp, #84]	; 0x54
   30258:	ldr	r6, [sp, #92]	; 0x5c
   3025c:	mov	r0, #0
   30260:	cmp	r2, #0
   30264:	beq	30390 <GetDataSlab+0x410>
   30268:	ldr	r2, [sp, #60]	; 0x3c
   3026c:	ldr	r7, [sp, #80]	; 0x50
   30270:	ldr	r3, [sp, #88]	; 0x58
   30274:	mla	r2, r6, ip, r2
   30278:	add	r2, r7, r2
   3027c:	cmp	r2, r3
   30280:	bls	3029c <GetDataSlab+0x31c>
   30284:	ldr	r2, [sp, #52]	; 0x34
   30288:	add	r4, r3, r5, lsl #3
   3028c:	mla	r2, r6, ip, r2
   30290:	add	r2, r7, r2
   30294:	cmp	r2, r4
   30298:	bcc	30390 <GetDataSlab+0x410>
   3029c:	ldr	r0, [sp, #56]	; 0x38
   302a0:	cmp	r0, #0
   302a4:	beq	30328 <GetDataSlab+0x3a8>
   302a8:	ldr	r4, [sp, #88]	; 0x58
   302ac:	ldr	r6, [sp, #44]	; 0x2c
   302b0:	mov	r0, #0
   302b4:	mov	r2, r8
   302b8:	add	r9, sp, #128	; 0x80
   302bc:	mov	r7, r4
   302c0:	ldrh	lr, [r2]
   302c4:	add	r3, sp, #124	; 0x7c
   302c8:	subs	r6, r6, #2
   302cc:	add	r0, r0, #4
   302d0:	strh	lr, [sp, #124]	; 0x7c
   302d4:	vld1.16	{d16[0]}, [r3 :16]
   302d8:	mov	r3, #32
   302dc:	vmovl.s8	q8, d16
   302e0:	vmovl.s16	q0, d16
   302e4:	vcvt.f64.s32	d17, s1
   302e8:	vcvt.f64.s32	d16, s0
   302ec:	vst1.64	{d16-d17}, [r7], r3
   302f0:	add	r3, r2, r1
   302f4:	add	r2, r2, sl
   302f8:	ldrh	r3, [r3]
   302fc:	strh	r3, [sp, #128]	; 0x80
   30300:	add	r3, r4, #16
   30304:	mov	r4, r7
   30308:	vld1.16	{d16[0]}, [r9 :16]
   3030c:	vmovl.s8	q8, d16
   30310:	vmovl.s16	q0, d16
   30314:	vcvt.f64.s32	d17, s1
   30318:	vcvt.f64.s32	d16, s0
   3031c:	vst1.64	{d16-d17}, [r3]
   30320:	bne	302c0 <GetDataSlab+0x340>
   30324:	b	3032c <GetDataSlab+0x3ac>
   30328:	mov	r0, #0
   3032c:	ldr	r2, [sp, #48]	; 0x30
   30330:	ldr	r6, [sp, #92]	; 0x5c
   30334:	cmp	r2, #0
   30338:	beq	30370 <GetDataSlab+0x3f0>
   3033c:	ldr	r2, [sp, #68]	; 0x44
   30340:	mla	r2, r0, r2, r8
   30344:	ldrh	r2, [r2]
   30348:	strh	r2, [sp, #120]	; 0x78
   3034c:	add	r2, sp, #120	; 0x78
   30350:	vld1.16	{d16[0]}, [r2 :16]
   30354:	vmovl.s8	q8, d16
   30358:	vmovl.s16	q0, d16
   3035c:	vcvt.f64.s32	d17, s1
   30360:	vcvt.f64.s32	d16, s0
   30364:	ldr	r2, [sp, #88]	; 0x58
   30368:	add	r0, r2, r0, lsl #3
   3036c:	vst1.64	{d16-d17}, [r0]
   30370:	ldr	r2, [sp, #64]	; 0x40
   30374:	ldr	r0, [sp, #88]	; 0x58
   30378:	ldr	lr, [sp, #84]	; 0x54
   3037c:	add	r0, r0, r2, lsl #3
   30380:	cmp	r5, r2
   30384:	str	r0, [sp, #88]	; 0x58
   30388:	mov	r0, r2
   3038c:	beq	30234 <GetDataSlab+0x2b4>
   30390:	ldr	r2, [sp, #72]	; 0x48
   30394:	cmp	r2, #0
   30398:	bne	303a4 <GetDataSlab+0x424>
   3039c:	mov	r4, r0
   303a0:	b	303cc <GetDataSlab+0x44c>
   303a4:	ldr	r2, [sp, #68]	; 0x44
   303a8:	orr	r4, r0, #1
   303ac:	mla	r2, r0, r2, r8
   303b0:	ldrsb	r2, [r2]
   303b4:	vmov	s0, r2
   303b8:	vcvt.f64.s32	d16, s0
   303bc:	ldr	r2, [sp, #88]	; 0x58
   303c0:	vstr	d16, [r2]
   303c4:	add	r2, r2, #8
   303c8:	str	r2, [sp, #88]	; 0x58
   303cc:	orr	r0, r0, #1
   303d0:	cmp	r5, r0
   303d4:	beq	30234 <GetDataSlab+0x2b4>
   303d8:	ldr	r6, [sp, #68]	; 0x44
   303dc:	add	r3, r4, #1
   303e0:	ldr	r7, [sp, #88]	; 0x58
   303e4:	sub	r2, r5, r4
   303e8:	mul	r0, r6, r4
   303ec:	mul	r4, r6, r3
   303f0:	mov	r6, r8
   303f4:	add	r3, r6, r0
   303f8:	subs	r2, r2, #2
   303fc:	ldrsb	r3, [r3]
   30400:	vmov	s0, r3
   30404:	add	r3, r6, r4
   30408:	add	r6, r6, r1
   3040c:	vcvt.f64.s32	d16, s0
   30410:	vstr	d16, [r7]
   30414:	ldrsb	r3, [r3]
   30418:	vmov	s0, r3
   3041c:	vcvt.f64.s32	d16, s0
   30420:	vstr	d16, [r7, #8]
   30424:	add	r7, r7, #16
   30428:	bne	303f4 <GetDataSlab+0x474>
   3042c:	str	r7, [sp, #88]	; 0x58
   30430:	b	30230 <GetDataSlab+0x2b0>
   30434:	vmov.i32	q8, #0	; 0x00000000
   30438:	sub	r7, fp, #96	; 0x60
   3043c:	mov	r0, #36	; 0x24
   30440:	mov	r3, #0
   30444:	sub	ip, fp, #176	; 0xb0
   30448:	mov	r1, r7
   3044c:	str	r3, [fp, #-64]	; 0xffffffc0
   30450:	str	r3, [fp, #-104]	; 0xffffff98
   30454:	str	r3, [fp, #-144]	; 0xffffff70
   30458:	vst1.64	{d16-d17}, [r1], r0
   3045c:	str	r3, [r1]
   30460:	add	r1, r7, #16
   30464:	sub	r7, fp, #136	; 0x88
   30468:	vst1.64	{d16-d17}, [r1]
   3046c:	add	r1, r7, #16
   30470:	vst1.64	{d16-d17}, [r1]
   30474:	mov	r1, r7
   30478:	vst1.64	{d16-d17}, [r1], r0
   3047c:	str	r3, [r1]
   30480:	add	r1, ip, #16
   30484:	vst1.64	{d16-d17}, [r1]
   30488:	mov	r1, ip
   3048c:	vst1.64	{d16-d17}, [r1], r0
   30490:	sub	r0, r2, #6
   30494:	cmp	r0, #9
   30498:	str	r3, [r1]
   3049c:	bhi	30594 <GetDataSlab+0x614>
   304a0:	add	r1, pc, #4
   304a4:	ldr	r0, [r1, r0, lsl #2]
   304a8:	add	pc, r1, r0
   304ac:	.word	0x00000028
   304b0:	.word	0x000000f0
   304b4:	.word	0x000002e8
   304b8:	.word	0x000003b4
   304bc:	.word	0x00000480
   304c0:	.word	0x00000678
   304c4:	.word	0x00000870
   304c8:	.word	0x0000093c
   304cc:	.word	0x00000a08
   304d0:	.word	0x00000ad0
   304d4:	ldr	r0, [sp, #76]	; 0x4c
   304d8:	mov	r2, #1
   304dc:	sub	r0, r0, #1
   304e0:	cmp	r0, #11
   304e4:	bhi	4a57c <GetDataSlab+0x1a5fc>
   304e8:	add	r1, pc, #4
   304ec:	ldr	r0, [r1, r0, lsl #2]
   304f0:	add	pc, r1, r0
   304f4:	.word	0x00000030
   304f8:	.word	0x00002630
   304fc:	.word	0x000027c8
   30500:	.word	0x00002960
   30504:	.word	0x00002af8
   30508:	.word	0x00002cb0
   3050c:	.word	0x00002e68
   30510:	.word	0x0001a088
   30514:	.word	0x0000300c
   30518:	.word	0x0001a088
   3051c:	.word	0x0001a088
   30520:	.word	0x000031b0
   30524:	ldr	sl, [sl]
   30528:	mov	r7, #0
   3052c:	sub	r2, fp, #96	; 0x60
   30530:	sub	r0, sl, #1
   30534:	str	r0, [fp, #-96]	; 0xffffffa0
   30538:	ldr	r0, [fp, #8]
   3053c:	ldr	r0, [r0]
   30540:	str	r0, [sp, #44]	; 0x2c
   30544:	str	r0, [fp, #-176]	; 0xffffff50
   30548:	ldr	r0, [fp, #20]
   3054c:	ldr	r1, [r0]
   30550:	ldr	r0, [fp, #24]
   30554:	cmp	r0, #2
   30558:	str	r1, [sp, #72]	; 0x48
   3055c:	str	r1, [sp, #76]	; 0x4c
   30560:	blt	3b988 <GetDataSlab+0xba08>
   30564:	ldr	r0, [fp, #8]
   30568:	ldr	r4, [sp, #44]	; 0x2c
   3056c:	mov	r6, #1
   30570:	mov	r8, #0
   30574:	mvn	r5, #15
   30578:	mov	r7, #0
   3057c:	sub	r1, r0, #4
   30580:	sub	lr, r0, #12
   30584:	ldr	r0, [sp, #72]	; 0x48
   30588:	mov	r9, r4
   3058c:	str	r0, [sp, #76]	; 0x4c
   30590:	b	310bc <GetDataSlab+0x113c>
   30594:	mov	r2, #1
   30598:	b	56c1c <GetDataSlab+0x26c9c>
   3059c:	ldr	r0, [sp, #76]	; 0x4c
   305a0:	mov	r2, #1
   305a4:	sub	r0, r0, #1
   305a8:	cmp	r0, #11
   305ac:	bhi	4bbac <GetDataSlab+0x1bc2c>
   305b0:	add	r1, pc, #4
   305b4:	ldr	r0, [r1, r0, lsl #2]
   305b8:	add	pc, r1, r0
   305bc:	.word	0x00000030
   305c0:	.word	0x0000328c
   305c4:	.word	0x00003434
   305c8:	.word	0x000035cc
   305cc:	.word	0x00003764
   305d0:	.word	0x000038fc
   305d4:	.word	0x00003a94
   305d8:	.word	0x0001b5f0
   305dc:	.word	0x00003c2c
   305e0:	.word	0x0001b5f0
   305e4:	.word	0x0001b5f0
   305e8:	.word	0x00003dd0
   305ec:	ldr	sl, [sl]
   305f0:	mov	r3, #0
   305f4:	sub	lr, fp, #96	; 0x60
   305f8:	sub	r0, sl, #1
   305fc:	str	r0, [fp, #-96]	; 0xffffffa0
   30600:	ldr	r0, [fp, #8]
   30604:	ldr	r0, [r0]
   30608:	str	r0, [sp, #40]	; 0x28
   3060c:	str	r0, [fp, #-176]	; 0xffffff50
   30610:	ldr	r0, [fp, #20]
   30614:	ldr	r1, [r0]
   30618:	ldr	r0, [fp, #24]
   3061c:	cmp	r0, #2
   30620:	str	r1, [sp, #60]	; 0x3c
   30624:	str	r1, [sp, #76]	; 0x4c
   30628:	blt	34530 <GetDataSlab+0x45b0>
   3062c:	ldr	r0, [fp, #8]
   30630:	ldr	r4, [sp, #40]	; 0x28
   30634:	mov	r2, ip
   30638:	mov	r6, #1
   3063c:	mov	r9, #0
   30640:	mvn	r5, #15
   30644:	mov	r3, #0
   30648:	mov	r1, r0
   3064c:	sub	r0, r0, #4
   30650:	mov	r8, r4
   30654:	sub	ip, r1, #12
   30658:	ldr	r1, [sp, #60]	; 0x3c
   3065c:	str	r1, [sp, #76]	; 0x4c
   30660:	b	306b0 <GetDataSlab+0x730>
   30664:	ldr	r1, [fp, #12]
   30668:	sub	r2, fp, #176	; 0xb0
   3066c:	sub	lr, fp, #96	; 0x60
   30670:	add	ip, ip, #4
   30674:	str	r7, [lr, r6, lsl #2]
   30678:	str	r4, [r2, r6, lsl #2]
   3067c:	ldr	r7, [sp, #76]	; 0x4c
   30680:	ldr	r1, [r1, r6, lsl #2]
   30684:	mla	r3, r1, r8, r3
   30688:	ldr	r1, [fp, #20]
   3068c:	mov	r8, r4
   30690:	ldr	r4, [sp, #84]	; 0x54
   30694:	ldr	r1, [r1, r6, lsl #2]
   30698:	add	r6, r6, #1
   3069c:	mul	r7, r1, r7
   306a0:	ldr	r1, [fp, #24]
   306a4:	str	r7, [sp, #76]	; 0x4c
   306a8:	cmp	r6, r1
   306ac:	beq	34530 <GetDataSlab+0x45b0>
   306b0:	ldr	r1, [fp, #16]
   306b4:	add	r9, r9, #1
   306b8:	cmp	r9, #4
   306bc:	ldr	r1, [r1, r6, lsl #2]
   306c0:	str	r4, [r2, r6, lsl #2]
   306c4:	sub	r7, r1, #1
   306c8:	ldr	r1, [fp, #8]
   306cc:	str	r7, [lr, r6, lsl #2]
   306d0:	ldr	r2, [r1, r6, lsl #2]
   306d4:	str	r2, [sp, #84]	; 0x54
   306d8:	bcs	306e8 <GetDataSlab+0x768>
   306dc:	mov	r1, r2
   306e0:	mov	r2, r6
   306e4:	b	3077c <GetDataSlab+0x7fc>
   306e8:	vmov.i32	q9, #1	; 0x00000001
   306ec:	vmov.i32	q10, #1	; 0x00000001
   306f0:	vmov.32	d23[1], r2
   306f4:	mov	r1, r9
   306f8:	vmov.i32	q8, #1	; 0x00000001
   306fc:	bic	r9, r6, #3
   30700:	str	r1, [sp, #72]	; 0x48
   30704:	bic	r1, r1, #3
   30708:	mov	lr, r1
   3070c:	sub	r2, r6, r1
   30710:	mov	r1, ip
   30714:	vmov.32	d18[0], r4
   30718:	vmov.32	d20[0], r7
   3071c:	vorr	d16, d18, d18
   30720:	vmov.i32	q9, #1	; 0x00000001
   30724:	vorr	d18, d20, d20
   30728:	vld1.32	{d20-d21}, [r1], r5
   3072c:	subs	r9, r9, #4
   30730:	vrev64.32	q12, q10
   30734:	vext.8	q12, q12, q12, #8
   30738:	vext.8	q11, q11, q12, #12
   3073c:	vmul.i32	q9, q9, q12
   30740:	vmul.i32	q8, q11, q8
   30744:	vorr	q11, q12, q12
   30748:	bne	30728 <GetDataSlab+0x7a8>
   3074c:	vext.8	q11, q9, q8, #8
   30750:	vext.8	q12, q8, q8, #8
   30754:	ldr	r9, [sp, #72]	; 0x48
   30758:	vmul.i32	q0, q9, q11
   3075c:	vmul.i32	q1, q8, q12
   30760:	cmp	r9, lr
   30764:	vmul.i32	q8, q0, d0[1]
   30768:	vmul.i32	q9, q1, d2[1]
   3076c:	vmov.32	r7, d16[0]
   30770:	vmov.32	r4, d18[0]
   30774:	beq	30664 <GetDataSlab+0x6e4>
   30778:	vmov.32	r1, d20[0]
   3077c:	mul	r4, r1, r4
   30780:	ldr	r1, [r0, r2, lsl #2]
   30784:	subs	r2, r2, #1
   30788:	mul	r7, r7, r1
   3078c:	bne	3077c <GetDataSlab+0x7fc>
   30790:	b	30664 <GetDataSlab+0x6e4>
   30794:	ldr	r7, [sp, #76]	; 0x4c
   30798:	mov	r2, #1
   3079c:	sub	r0, r7, #1
   307a0:	cmp	r0, #11
   307a4:	bhi	4cddc <GetDataSlab+0x1ce5c>
   307a8:	add	r1, pc, #8
   307ac:	ldr	r3, [fp, #8]
   307b0:	ldr	r0, [r1, r0, lsl #2]
   307b4:	add	pc, r1, r0
   307b8:	.word	0x00000030
   307bc:	.word	0x000040e8
   307c0:	.word	0x00004298
   307c4:	.word	0x00004448
   307c8:	.word	0x000045f8
   307cc:	.word	0x000047a8
   307d0:	.word	0x00004958
   307d4:	.word	0x0001c624
   307d8:	.word	0x00004b08
   307dc:	.word	0x0001c624
   307e0:	.word	0x0001c624
   307e4:	.word	0x00004cb8
   307e8:	ldr	r5, [sl]
   307ec:	mov	r7, #0
   307f0:	sub	r9, fp, #176	; 0xb0
   307f4:	sub	r8, fp, #96	; 0x60
   307f8:	sub	r0, r5, #1
   307fc:	str	r0, [fp, #-96]	; 0xffffffa0
   30800:	ldr	r0, [r3]
   30804:	str	r0, [sp, #72]	; 0x48
   30808:	str	r0, [fp, #-176]	; 0xffffff50
   3080c:	ldr	r0, [fp, #20]
   30810:	ldr	r1, [r0]
   30814:	ldr	r0, [fp, #24]
   30818:	cmp	r0, #2
   3081c:	mov	r0, r1
   30820:	str	r1, [sp, #76]	; 0x4c
   30824:	blt	3bd14 <GetDataSlab+0xbd94>
   30828:	ldr	r0, [fp, #8]
   3082c:	ldr	r4, [sp, #72]	; 0x48
   30830:	mov	r3, #0
   30834:	mvn	ip, #15
   30838:	mov	r7, #0
   3083c:	str	r1, [sp, #76]	; 0x4c
   30840:	str	r3, [sp, #84]	; 0x54
   30844:	mov	r3, r1
   30848:	mov	r2, r0
   3084c:	sub	r0, r0, #4
   30850:	mov	r6, r4
   30854:	sub	sl, r2, #12
   30858:	mov	r2, #1
   3085c:	b	311e8 <GetDataSlab+0x1268>
   30860:	ldr	r7, [sp, #76]	; 0x4c
   30864:	mov	r2, #1
   30868:	sub	r0, r7, #1
   3086c:	cmp	r0, #11
   30870:	bhi	4de9c <GetDataSlab+0x1df1c>
   30874:	add	r1, pc, #8
   30878:	ldr	r3, [fp, #8]
   3087c:	ldr	r0, [r1, r0, lsl #2]
   30880:	add	pc, r1, r0
   30884:	.word	0x00000030
   30888:	.word	0x00004da8
   3088c:	.word	0x00004f58
   30890:	.word	0x00005108
   30894:	.word	0x000052b8
   30898:	.word	0x00005468
   3089c:	.word	0x00005618
   308a0:	.word	0x0001d618
   308a4:	.word	0x000057c8
   308a8:	.word	0x0001d618
   308ac:	.word	0x0001d618
   308b0:	.word	0x00005978
   308b4:	ldr	r5, [sl]
   308b8:	mov	r7, #0
   308bc:	sub	r9, fp, #176	; 0xb0
   308c0:	sub	r8, fp, #96	; 0x60
   308c4:	sub	r0, r5, #1
   308c8:	str	r0, [fp, #-96]	; 0xffffffa0
   308cc:	ldr	r0, [r3]
   308d0:	str	r0, [sp, #72]	; 0x48
   308d4:	str	r0, [fp, #-176]	; 0xffffff50
   308d8:	ldr	r0, [fp, #20]
   308dc:	ldr	r1, [r0]
   308e0:	ldr	r0, [fp, #24]
   308e4:	cmp	r0, #2
   308e8:	mov	r0, r1
   308ec:	str	r1, [sp, #76]	; 0x4c
   308f0:	blt	3bea8 <GetDataSlab+0xbf28>
   308f4:	ldr	r0, [fp, #8]
   308f8:	ldr	r4, [sp, #72]	; 0x48
   308fc:	mov	r3, #0
   30900:	mvn	ip, #15
   30904:	mov	r7, #0
   30908:	str	r1, [sp, #76]	; 0x4c
   3090c:	str	r3, [sp, #84]	; 0x54
   30910:	mov	r3, r1
   30914:	mov	r2, r0
   30918:	sub	r0, r0, #4
   3091c:	mov	r6, r4
   30920:	sub	sl, r2, #12
   30924:	mov	r2, #1
   30928:	b	31320 <GetDataSlab+0x13a0>
   3092c:	ldr	r0, [sp, #76]	; 0x4c
   30930:	mov	r2, #1
   30934:	sub	r0, r0, #1
   30938:	cmp	r0, #11
   3093c:	bhi	4f2ac <GetDataSlab+0x1f32c>
   30940:	add	r1, pc, #4
   30944:	ldr	r0, [r1, r0, lsl #2]
   30948:	add	pc, r1, r0
   3094c:	.word	0x00000030
   30950:	.word	0x00005a6c
   30954:	.word	0x00005c14
   30958:	.word	0x00005dac
   3095c:	.word	0x00005f44
   30960:	.word	0x000060fc
   30964:	.word	0x000062b4
   30968:	.word	0x0001e960
   3096c:	.word	0x00006458
   30970:	.word	0x0001e960
   30974:	.word	0x0001e960
   30978:	.word	0x00006600
   3097c:	ldr	sl, [sl]
   30980:	mov	r3, #0
   30984:	sub	lr, fp, #96	; 0x60
   30988:	sub	r0, sl, #1
   3098c:	str	r0, [fp, #-96]	; 0xffffffa0
   30990:	ldr	r0, [fp, #8]
   30994:	ldr	r0, [r0]
   30998:	str	r0, [sp, #52]	; 0x34
   3099c:	str	r0, [fp, #-176]	; 0xffffff50
   309a0:	ldr	r0, [fp, #20]
   309a4:	ldr	r1, [r0]
   309a8:	ldr	r0, [fp, #24]
   309ac:	cmp	r0, #2
   309b0:	str	r1, [sp, #56]	; 0x38
   309b4:	str	r1, [sp, #76]	; 0x4c
   309b8:	blt	370e4 <GetDataSlab+0x7164>
   309bc:	ldr	r0, [fp, #8]
   309c0:	ldr	r4, [sp, #52]	; 0x34
   309c4:	mov	r2, ip
   309c8:	mov	r6, #1
   309cc:	mov	r9, #0
   309d0:	mvn	r5, #15
   309d4:	mov	r3, #0
   309d8:	mov	r1, r0
   309dc:	sub	r0, r0, #4
   309e0:	mov	r8, r4
   309e4:	sub	ip, r1, #12
   309e8:	ldr	r1, [sp, #56]	; 0x38
   309ec:	str	r1, [sp, #76]	; 0x4c
   309f0:	b	30a40 <GetDataSlab+0xac0>
   309f4:	ldr	r1, [fp, #12]
   309f8:	sub	r2, fp, #176	; 0xb0
   309fc:	sub	lr, fp, #96	; 0x60
   30a00:	add	ip, ip, #4
   30a04:	str	r7, [lr, r6, lsl #2]
   30a08:	str	r4, [r2, r6, lsl #2]
   30a0c:	ldr	r7, [sp, #76]	; 0x4c
   30a10:	ldr	r1, [r1, r6, lsl #2]
   30a14:	mla	r3, r1, r8, r3
   30a18:	ldr	r1, [fp, #20]
   30a1c:	mov	r8, r4
   30a20:	ldr	r4, [sp, #84]	; 0x54
   30a24:	ldr	r1, [r1, r6, lsl #2]
   30a28:	add	r6, r6, #1
   30a2c:	mul	r7, r1, r7
   30a30:	ldr	r1, [fp, #24]
   30a34:	str	r7, [sp, #76]	; 0x4c
   30a38:	cmp	r6, r1
   30a3c:	beq	370e4 <GetDataSlab+0x7164>
   30a40:	ldr	r1, [fp, #16]
   30a44:	add	r9, r9, #1
   30a48:	cmp	r9, #4
   30a4c:	ldr	r1, [r1, r6, lsl #2]
   30a50:	str	r4, [r2, r6, lsl #2]
   30a54:	sub	r7, r1, #1
   30a58:	ldr	r1, [fp, #8]
   30a5c:	str	r7, [lr, r6, lsl #2]
   30a60:	ldr	r2, [r1, r6, lsl #2]
   30a64:	str	r2, [sp, #84]	; 0x54
   30a68:	bcs	30a78 <GetDataSlab+0xaf8>
   30a6c:	mov	r1, r2
   30a70:	mov	r2, r6
   30a74:	b	30b0c <GetDataSlab+0xb8c>
   30a78:	vmov.i32	q9, #1	; 0x00000001
   30a7c:	vmov.i32	q10, #1	; 0x00000001
   30a80:	vmov.32	d23[1], r2
   30a84:	mov	r1, r9
   30a88:	vmov.i32	q8, #1	; 0x00000001
   30a8c:	bic	r9, r6, #3
   30a90:	str	r1, [sp, #72]	; 0x48
   30a94:	bic	r1, r1, #3
   30a98:	mov	lr, r1
   30a9c:	sub	r2, r6, r1
   30aa0:	mov	r1, ip
   30aa4:	vmov.32	d18[0], r4
   30aa8:	vmov.32	d20[0], r7
   30aac:	vorr	d16, d18, d18
   30ab0:	vmov.i32	q9, #1	; 0x00000001
   30ab4:	vorr	d18, d20, d20
   30ab8:	vld1.32	{d20-d21}, [r1], r5
   30abc:	subs	r9, r9, #4
   30ac0:	vrev64.32	q12, q10
   30ac4:	vext.8	q12, q12, q12, #8
   30ac8:	vext.8	q11, q11, q12, #12
   30acc:	vmul.i32	q9, q9, q12
   30ad0:	vmul.i32	q8, q11, q8
   30ad4:	vorr	q11, q12, q12
   30ad8:	bne	30ab8 <GetDataSlab+0xb38>
   30adc:	vext.8	q11, q9, q8, #8
   30ae0:	vext.8	q12, q8, q8, #8
   30ae4:	ldr	r9, [sp, #72]	; 0x48
   30ae8:	vmul.i32	q0, q9, q11
   30aec:	vmul.i32	q1, q8, q12
   30af0:	cmp	r9, lr
   30af4:	vmul.i32	q8, q0, d0[1]
   30af8:	vmul.i32	q9, q1, d2[1]
   30afc:	vmov.32	r7, d16[0]
   30b00:	vmov.32	r4, d18[0]
   30b04:	beq	309f4 <GetDataSlab+0xa74>
   30b08:	vmov.32	r1, d20[0]
   30b0c:	mul	r4, r1, r4
   30b10:	ldr	r1, [r0, r2, lsl #2]
   30b14:	subs	r2, r2, #1
   30b18:	mul	r7, r7, r1
   30b1c:	bne	30b0c <GetDataSlab+0xb8c>
   30b20:	b	309f4 <GetDataSlab+0xa74>
   30b24:	ldr	r0, [sp, #76]	; 0x4c
   30b28:	mov	r2, #1
   30b2c:	sub	r0, r0, #1
   30b30:	cmp	r0, #11
   30b34:	bhi	507a0 <GetDataSlab+0x20820>
   30b38:	add	r1, pc, #4
   30b3c:	ldr	r0, [r1, r0, lsl #2]
   30b40:	add	pc, r1, r0
   30b44:	.word	0x00000030
   30b48:	.word	0x0000690c
   30b4c:	.word	0x00006ab4
   30b50:	.word	0x00006c4c
   30b54:	.word	0x00006de4
   30b58:	.word	0x00006f9c
   30b5c:	.word	0x00007154
   30b60:	.word	0x0001fc5c
   30b64:	.word	0x000072f8
   30b68:	.word	0x0001fc5c
   30b6c:	.word	0x0001fc5c
   30b70:	.word	0x000074a0
   30b74:	ldr	sl, [sl]
   30b78:	mov	r3, #0
   30b7c:	sub	lr, fp, #96	; 0x60
   30b80:	sub	r0, sl, #1
   30b84:	str	r0, [fp, #-96]	; 0xffffffa0
   30b88:	ldr	r0, [fp, #8]
   30b8c:	ldr	r0, [r0]
   30b90:	str	r0, [sp, #52]	; 0x34
   30b94:	str	r0, [fp, #-176]	; 0xffffff50
   30b98:	ldr	r0, [fp, #20]
   30b9c:	ldr	r1, [r0]
   30ba0:	ldr	r0, [fp, #24]
   30ba4:	cmp	r0, #2
   30ba8:	str	r1, [sp, #56]	; 0x38
   30bac:	str	r1, [sp, #76]	; 0x4c
   30bb0:	blt	3817c <GetDataSlab+0x81fc>
   30bb4:	ldr	r0, [fp, #8]
   30bb8:	ldr	r4, [sp, #52]	; 0x34
   30bbc:	mov	r2, ip
   30bc0:	mov	r6, #1
   30bc4:	mov	r9, #0
   30bc8:	mvn	r5, #15
   30bcc:	mov	r3, #0
   30bd0:	mov	r1, r0
   30bd4:	sub	r0, r0, #4
   30bd8:	mov	r8, r4
   30bdc:	sub	ip, r1, #12
   30be0:	ldr	r1, [sp, #56]	; 0x38
   30be4:	str	r1, [sp, #76]	; 0x4c
   30be8:	b	30c38 <GetDataSlab+0xcb8>
   30bec:	ldr	r1, [fp, #12]
   30bf0:	sub	r2, fp, #176	; 0xb0
   30bf4:	sub	lr, fp, #96	; 0x60
   30bf8:	add	ip, ip, #4
   30bfc:	str	r7, [lr, r6, lsl #2]
   30c00:	str	r4, [r2, r6, lsl #2]
   30c04:	ldr	r7, [sp, #76]	; 0x4c
   30c08:	ldr	r1, [r1, r6, lsl #2]
   30c0c:	mla	r3, r1, r8, r3
   30c10:	ldr	r1, [fp, #20]
   30c14:	mov	r8, r4
   30c18:	ldr	r4, [sp, #84]	; 0x54
   30c1c:	ldr	r1, [r1, r6, lsl #2]
   30c20:	add	r6, r6, #1
   30c24:	mul	r7, r1, r7
   30c28:	ldr	r1, [fp, #24]
   30c2c:	str	r7, [sp, #76]	; 0x4c
   30c30:	cmp	r6, r1
   30c34:	beq	3817c <GetDataSlab+0x81fc>
   30c38:	ldr	r1, [fp, #16]
   30c3c:	add	r9, r9, #1
   30c40:	cmp	r9, #4
   30c44:	ldr	r1, [r1, r6, lsl #2]
   30c48:	str	r4, [r2, r6, lsl #2]
   30c4c:	sub	r7, r1, #1
   30c50:	ldr	r1, [fp, #8]
   30c54:	str	r7, [lr, r6, lsl #2]
   30c58:	ldr	r2, [r1, r6, lsl #2]
   30c5c:	str	r2, [sp, #84]	; 0x54
   30c60:	bcs	30c70 <GetDataSlab+0xcf0>
   30c64:	mov	r1, r2
   30c68:	mov	r2, r6
   30c6c:	b	30d04 <GetDataSlab+0xd84>
   30c70:	vmov.i32	q9, #1	; 0x00000001
   30c74:	vmov.i32	q10, #1	; 0x00000001
   30c78:	vmov.32	d23[1], r2
   30c7c:	mov	r1, r9
   30c80:	vmov.i32	q8, #1	; 0x00000001
   30c84:	bic	r9, r6, #3
   30c88:	str	r1, [sp, #72]	; 0x48
   30c8c:	bic	r1, r1, #3
   30c90:	mov	lr, r1
   30c94:	sub	r2, r6, r1
   30c98:	mov	r1, ip
   30c9c:	vmov.32	d18[0], r4
   30ca0:	vmov.32	d20[0], r7
   30ca4:	vorr	d16, d18, d18
   30ca8:	vmov.i32	q9, #1	; 0x00000001
   30cac:	vorr	d18, d20, d20
   30cb0:	vld1.32	{d20-d21}, [r1], r5
   30cb4:	subs	r9, r9, #4
   30cb8:	vrev64.32	q12, q10
   30cbc:	vext.8	q12, q12, q12, #8
   30cc0:	vext.8	q11, q11, q12, #12
   30cc4:	vmul.i32	q9, q9, q12
   30cc8:	vmul.i32	q8, q11, q8
   30ccc:	vorr	q11, q12, q12
   30cd0:	bne	30cb0 <GetDataSlab+0xd30>
   30cd4:	vext.8	q11, q9, q8, #8
   30cd8:	vext.8	q12, q8, q8, #8
   30cdc:	ldr	r9, [sp, #72]	; 0x48
   30ce0:	vmul.i32	q0, q9, q11
   30ce4:	vmul.i32	q1, q8, q12
   30ce8:	cmp	r9, lr
   30cec:	vmul.i32	q8, q0, d0[1]
   30cf0:	vmul.i32	q9, q1, d2[1]
   30cf4:	vmov.32	r7, d16[0]
   30cf8:	vmov.32	r4, d18[0]
   30cfc:	beq	30bec <GetDataSlab+0xc6c>
   30d00:	vmov.32	r1, d20[0]
   30d04:	mul	r4, r1, r4
   30d08:	ldr	r1, [r0, r2, lsl #2]
   30d0c:	subs	r2, r2, #1
   30d10:	mul	r7, r7, r1
   30d14:	bne	30d04 <GetDataSlab+0xd84>
   30d18:	b	30bec <GetDataSlab+0xc6c>
   30d1c:	ldr	r7, [sp, #76]	; 0x4c
   30d20:	mov	r2, #1
   30d24:	sub	r0, r7, #1
   30d28:	cmp	r0, #11
   30d2c:	bhi	51944 <GetDataSlab+0x219c4>
   30d30:	add	r1, pc, #8
   30d34:	ldr	r3, [fp, #8]
   30d38:	ldr	r0, [r1, r0, lsl #2]
   30d3c:	add	pc, r1, r0
   30d40:	.word	0x00000030
   30d44:	.word	0x000077a8
   30d48:	.word	0x00007958
   30d4c:	.word	0x00007b08
   30d50:	.word	0x00007cb8
   30d54:	.word	0x00007e68
   30d58:	.word	0x00008018
   30d5c:	.word	0x00020c04
   30d60:	.word	0x000081c8
   30d64:	.word	0x00020c04
   30d68:	.word	0x00020c04
   30d6c:	.word	0x00008378
   30d70:	ldr	r5, [sl]
   30d74:	mov	r7, #0
   30d78:	sub	r9, fp, #176	; 0xb0
   30d7c:	sub	r8, fp, #96	; 0x60
   30d80:	sub	r0, r5, #1
   30d84:	str	r0, [fp, #-96]	; 0xffffffa0
   30d88:	ldr	r0, [r3]
   30d8c:	str	r0, [sp, #72]	; 0x48
   30d90:	str	r0, [fp, #-176]	; 0xffffff50
   30d94:	ldr	r0, [fp, #20]
   30d98:	ldr	r1, [r0]
   30d9c:	ldr	r0, [fp, #24]
   30da0:	cmp	r0, #2
   30da4:	mov	r0, r1
   30da8:	str	r1, [sp, #76]	; 0x4c
   30dac:	blt	3c03c <GetDataSlab+0xc0bc>
   30db0:	ldr	r0, [fp, #8]
   30db4:	ldr	r4, [sp, #72]	; 0x48
   30db8:	mov	r3, #0
   30dbc:	mvn	ip, #15
   30dc0:	mov	r7, #0
   30dc4:	str	r1, [sp, #76]	; 0x4c
   30dc8:	str	r3, [sp, #84]	; 0x54
   30dcc:	mov	r3, r1
   30dd0:	mov	r2, r0
   30dd4:	sub	r0, r0, #4
   30dd8:	mov	r6, r4
   30ddc:	sub	sl, r2, #12
   30de0:	mov	r2, #1
   30de4:	b	31458 <GetDataSlab+0x14d8>
   30de8:	ldr	r7, [sp, #76]	; 0x4c
   30dec:	mov	r2, #1
   30df0:	sub	r0, r7, #1
   30df4:	cmp	r0, #11
   30df8:	bhi	52a04 <GetDataSlab+0x22a84>
   30dfc:	add	r1, pc, #8
   30e00:	ldr	r3, [fp, #8]
   30e04:	ldr	r0, [r1, r0, lsl #2]
   30e08:	add	pc, r1, r0
   30e0c:	.word	0x00000030
   30e10:	.word	0x00008468
   30e14:	.word	0x00008618
   30e18:	.word	0x000087c8
   30e1c:	.word	0x00008978
   30e20:	.word	0x00008b28
   30e24:	.word	0x00008cd8
   30e28:	.word	0x00021bf8
   30e2c:	.word	0x00008e88
   30e30:	.word	0x00021bf8
   30e34:	.word	0x00021bf8
   30e38:	.word	0x00009038
   30e3c:	ldr	r5, [sl]
   30e40:	mov	r7, #0
   30e44:	sub	r9, fp, #176	; 0xb0
   30e48:	sub	r8, fp, #96	; 0x60
   30e4c:	sub	r0, r5, #1
   30e50:	str	r0, [fp, #-96]	; 0xffffffa0
   30e54:	ldr	r0, [r3]
   30e58:	str	r0, [sp, #72]	; 0x48
   30e5c:	str	r0, [fp, #-176]	; 0xffffff50
   30e60:	ldr	r0, [fp, #20]
   30e64:	ldr	r1, [r0]
   30e68:	ldr	r0, [fp, #24]
   30e6c:	cmp	r0, #2
   30e70:	mov	r0, r1
   30e74:	str	r1, [sp, #76]	; 0x4c
   30e78:	blt	3c1d0 <GetDataSlab+0xc250>
   30e7c:	ldr	r0, [fp, #8]
   30e80:	ldr	r4, [sp, #72]	; 0x48
   30e84:	mov	r3, #0
   30e88:	mvn	ip, #15
   30e8c:	mov	r7, #0
   30e90:	str	r1, [sp, #76]	; 0x4c
   30e94:	str	r3, [sp, #84]	; 0x54
   30e98:	mov	r3, r1
   30e9c:	mov	r2, r0
   30ea0:	sub	r0, r0, #4
   30ea4:	mov	r6, r4
   30ea8:	sub	sl, r2, #12
   30eac:	mov	r2, #1
   30eb0:	b	31590 <GetDataSlab+0x1610>
   30eb4:	ldr	r3, [sp, #76]	; 0x4c
   30eb8:	mov	r2, #1
   30ebc:	sub	r0, r3, #1
   30ec0:	cmp	r0, #11
   30ec4:	bhi	53ecc <GetDataSlab+0x23f4c>
   30ec8:	add	r1, pc, #8
   30ecc:	ldr	r6, [fp, #8]
   30ed0:	ldr	r0, [r1, r0, lsl #2]
   30ed4:	add	pc, r1, r0
   30ed8:	.word	0x00000030
   30edc:	.word	0x00009128
   30ee0:	.word	0x000092cc
   30ee4:	.word	0x00009460
   30ee8:	.word	0x000095f8
   30eec:	.word	0x0000978c
   30ef0:	.word	0x00009924
   30ef4:	.word	0x00022ff4
   30ef8:	.word	0x00009abc
   30efc:	.word	0x00022ff4
   30f00:	.word	0x00022ff4
   30f04:	.word	0x00009c50
   30f08:	ldr	r9, [sl]
   30f0c:	mov	r7, #0
   30f10:	sub	r2, fp, #176	; 0xb0
   30f14:	sub	r3, fp, #96	; 0x60
   30f18:	sub	r0, r9, #1
   30f1c:	str	r0, [fp, #-96]	; 0xffffffa0
   30f20:	ldr	r0, [r6]
   30f24:	str	r0, [sp, #48]	; 0x30
   30f28:	str	r0, [fp, #-176]	; 0xffffff50
   30f2c:	ldr	r0, [fp, #20]
   30f30:	ldr	r1, [r0]
   30f34:	ldr	r0, [fp, #24]
   30f38:	cmp	r0, #2
   30f3c:	str	r1, [sp, #72]	; 0x48
   30f40:	str	r1, [sp, #76]	; 0x4c
   30f44:	blt	3c364 <GetDataSlab+0xc3e4>
   30f48:	ldr	r0, [fp, #8]
   30f4c:	ldr	r4, [sp, #48]	; 0x30
   30f50:	mov	r6, #1
   30f54:	mov	r5, #0
   30f58:	mvn	lr, #15
   30f5c:	mov	r7, #0
   30f60:	sub	r1, r0, #4
   30f64:	sub	ip, r0, #12
   30f68:	mov	r0, r4
   30f6c:	ldr	r0, [sp, #72]	; 0x48
   30f70:	str	r4, [sp, #84]	; 0x54
   30f74:	str	r0, [sp, #76]	; 0x4c
   30f78:	b	316d4 <GetDataSlab+0x1754>
   30f7c:	ldr	r3, [sp, #76]	; 0x4c
   30f80:	mov	r2, #1
   30f84:	sub	r0, r3, #1
   30f88:	cmp	r0, #11
   30f8c:	bhi	55500 <GetDataSlab+0x25580>
   30f90:	add	r1, pc, #8
   30f94:	ldr	r6, [fp, #8]
   30f98:	ldr	r0, [r1, r0, lsl #2]
   30f9c:	add	pc, r1, r0
   30fa0:	.word	0x00000030
   30fa4:	.word	0x00009d24
   30fa8:	.word	0x00009ec8
   30fac:	.word	0x0000a05c
   30fb0:	.word	0x0000a1f4
   30fb4:	.word	0x0000a388
   30fb8:	.word	0x0000a520
   30fbc:	.word	0x00024560
   30fc0:	.word	0x0000a6b8
   30fc4:	.word	0x00024560
   30fc8:	.word	0x00024560
   30fcc:	.word	0x0000a84c
   30fd0:	ldr	r9, [sl]
   30fd4:	mov	r7, #0
   30fd8:	sub	r2, fp, #176	; 0xb0
   30fdc:	sub	r3, fp, #96	; 0x60
   30fe0:	sub	r0, r9, #1
   30fe4:	str	r0, [fp, #-96]	; 0xffffffa0
   30fe8:	ldr	r0, [r6]
   30fec:	str	r0, [sp, #48]	; 0x30
   30ff0:	str	r0, [fp, #-176]	; 0xffffff50
   30ff4:	ldr	r0, [fp, #20]
   30ff8:	ldr	r1, [r0]
   30ffc:	ldr	r0, [fp, #24]
   31000:	cmp	r0, #2
   31004:	str	r1, [sp, #72]	; 0x48
   31008:	str	r1, [sp, #76]	; 0x4c
   3100c:	blt	3c6d8 <GetDataSlab+0xc758>
   31010:	ldr	r0, [fp, #8]
   31014:	ldr	r4, [sp, #48]	; 0x30
   31018:	mov	r6, #1
   3101c:	mov	r5, #0
   31020:	mvn	lr, #15
   31024:	mov	r7, #0
   31028:	sub	r1, r0, #4
   3102c:	sub	ip, r0, #12
   31030:	mov	r0, r4
   31034:	ldr	r0, [sp, #72]	; 0x48
   31038:	str	r4, [sp, #84]	; 0x54
   3103c:	str	r0, [sp, #76]	; 0x4c
   31040:	b	31804 <GetDataSlab+0x1884>
   31044:	cmp	ip, #0
   31048:	beq	300d0 <GetDataSlab+0x150>
   3104c:	ldr	r4, [sp, #72]	; 0x48
   31050:	cmp	r4, #1
   31054:	bne	300d0 <GetDataSlab+0x150>
   31058:	ldr	r2, [fp, #28]
   3105c:	ldr	r1, [sp, #80]	; 0x50
   31060:	mov	r0, sl
   31064:	bl	181c <memcpy@plt>
   31068:	mov	r0, #0
   3106c:	b	56c20 <GetDataSlab+0x26ca0>
   31070:	sub	ip, fp, #176	; 0xb0
   31074:	sub	r2, fp, #96	; 0x60
   31078:	str	r4, [ip, r6, lsl #2]
   3107c:	ldr	r3, [sp, #76]	; 0x4c
   31080:	add	lr, lr, #4
   31084:	str	r0, [r2, r6, lsl #2]
   31088:	ldr	r0, [fp, #12]
   3108c:	ldr	r0, [r0, r6, lsl #2]
   31090:	mla	r7, r0, r9, r7
   31094:	ldr	r0, [fp, #20]
   31098:	mov	r9, r4
   3109c:	ldr	r4, [sp, #84]	; 0x54
   310a0:	ldr	r0, [r0, r6, lsl #2]
   310a4:	add	r6, r6, #1
   310a8:	mul	r3, r0, r3
   310ac:	ldr	r0, [fp, #24]
   310b0:	str	r3, [sp, #76]	; 0x4c
   310b4:	cmp	r6, r0
   310b8:	beq	3b988 <GetDataSlab+0xba08>
   310bc:	ldr	r0, [fp, #16]
   310c0:	add	r8, r8, #1
   310c4:	cmp	r8, #4
   310c8:	ldr	r0, [r0, r6, lsl #2]
   310cc:	str	r4, [ip, r6, lsl #2]
   310d0:	sub	r0, r0, #1
   310d4:	str	r0, [r2, r6, lsl #2]
   310d8:	ldr	r2, [fp, #8]
   310dc:	ldr	r2, [r2, r6, lsl #2]
   310e0:	str	r2, [sp, #84]	; 0x54
   310e4:	bcs	310f0 <GetDataSlab+0x1170>
   310e8:	mov	r3, r6
   310ec:	b	31180 <GetDataSlab+0x1200>
   310f0:	vmov.i32	q9, #1	; 0x00000001
   310f4:	vmov.i32	q10, #1	; 0x00000001
   310f8:	vmov.32	d23[1], r2
   310fc:	vmov.i32	q8, #1	; 0x00000001
   31100:	bic	ip, r6, #3
   31104:	vmov.32	d18[0], r4
   31108:	vmov.32	d20[0], r0
   3110c:	bic	r0, r8, #3
   31110:	str	r0, [sp, #68]	; 0x44
   31114:	sub	r3, r6, r0
   31118:	mov	r0, lr
   3111c:	vorr	d16, d18, d18
   31120:	vmov.i32	q9, #1	; 0x00000001
   31124:	vorr	d18, d20, d20
   31128:	vld1.32	{d20-d21}, [r0], r5
   3112c:	subs	ip, ip, #4
   31130:	vrev64.32	q12, q10
   31134:	vext.8	q12, q12, q12, #8
   31138:	vext.8	q11, q11, q12, #12
   3113c:	vmul.i32	q9, q9, q12
   31140:	vmul.i32	q8, q11, q8
   31144:	vorr	q11, q12, q12
   31148:	bne	31128 <GetDataSlab+0x11a8>
   3114c:	vext.8	q11, q9, q8, #8
   31150:	vext.8	q12, q8, q8, #8
   31154:	ldr	r2, [sp, #68]	; 0x44
   31158:	vmul.i32	q0, q9, q11
   3115c:	vmul.i32	q1, q8, q12
   31160:	cmp	r8, r2
   31164:	vmul.i32	q8, q0, d0[1]
   31168:	vmul.i32	q9, q1, d2[1]
   3116c:	vmov.32	r0, d16[0]
   31170:	vmov.32	r4, d18[0]
   31174:	beq	31070 <GetDataSlab+0x10f0>
   31178:	vmov.32	r2, d20[0]
   3117c:	sub	ip, fp, #176	; 0xb0
   31180:	mul	r4, r2, r4
   31184:	ldr	r2, [r1, r3, lsl #2]
   31188:	subs	r3, r3, #1
   3118c:	mul	r0, r0, r2
   31190:	bne	31180 <GetDataSlab+0x1200>
   31194:	b	31074 <GetDataSlab+0x10f4>
   31198:	sub	r8, fp, #96	; 0x60
   3119c:	ldr	r3, [fp, #12]
   311a0:	sub	r9, fp, #176	; 0xb0
   311a4:	str	lr, [r8, r2, lsl #2]
   311a8:	ldr	r6, [sp, #68]	; 0x44
   311ac:	add	sl, sl, #4
   311b0:	str	r4, [r9, r2, lsl #2]
   311b4:	ldr	r3, [r3, r2, lsl #2]
   311b8:	mla	r7, r3, r6, r7
   311bc:	ldr	r3, [fp, #20]
   311c0:	ldr	r6, [sp, #76]	; 0x4c
   311c4:	ldr	r3, [r3, r2, lsl #2]
   311c8:	add	r2, r2, #1
   311cc:	mul	r6, r3, r6
   311d0:	ldr	r3, [fp, #24]
   311d4:	str	r6, [sp, #76]	; 0x4c
   311d8:	mov	r6, r4
   311dc:	ldr	r4, [sp, #64]	; 0x40
   311e0:	cmp	r2, r3
   311e4:	beq	3bd14 <GetDataSlab+0xbd94>
   311e8:	ldr	r3, [fp, #16]
   311ec:	str	r6, [sp, #68]	; 0x44
   311f0:	ldr	r3, [r3, r2, lsl #2]
   311f4:	str	r4, [r9, r2, lsl #2]
   311f8:	ldr	r9, [sp, #84]	; 0x54
   311fc:	sub	lr, r3, #1
   31200:	ldr	r3, [fp, #8]
   31204:	add	r9, r9, #1
   31208:	str	lr, [r8, r2, lsl #2]
   3120c:	cmp	r9, #4
   31210:	str	r9, [sp, #84]	; 0x54
   31214:	ldr	r6, [r3, r2, lsl #2]
   31218:	str	r6, [sp, #64]	; 0x40
   3121c:	bcs	31228 <GetDataSlab+0x12a8>
   31220:	mov	r3, r2
   31224:	b	312b8 <GetDataSlab+0x1338>
   31228:	vmov.i32	q9, #1	; 0x00000001
   3122c:	vmov.i32	q10, #1	; 0x00000001
   31230:	vmov.32	d23[1], r6
   31234:	vmov.i32	q8, #1	; 0x00000001
   31238:	bic	r3, r9, #3
   3123c:	bic	r8, r2, #3
   31240:	mov	r6, sl
   31244:	str	r3, [sp, #60]	; 0x3c
   31248:	sub	r3, r2, r3
   3124c:	vmov.32	d18[0], r4
   31250:	vmov.32	d20[0], lr
   31254:	vorr	d16, d18, d18
   31258:	vmov.i32	q9, #1	; 0x00000001
   3125c:	vorr	d18, d20, d20
   31260:	vld1.32	{d20-d21}, [r6], ip
   31264:	subs	r8, r8, #4
   31268:	vrev64.32	q12, q10
   3126c:	vext.8	q12, q12, q12, #8
   31270:	vext.8	q11, q11, q12, #12
   31274:	vmul.i32	q9, q9, q12
   31278:	vmul.i32	q8, q11, q8
   3127c:	vorr	q11, q12, q12
   31280:	bne	31260 <GetDataSlab+0x12e0>
   31284:	vext.8	q11, q9, q8, #8
   31288:	vext.8	q12, q8, q8, #8
   3128c:	ldr	r6, [sp, #60]	; 0x3c
   31290:	vmul.i32	q0, q9, q11
   31294:	vmul.i32	q1, q8, q12
   31298:	cmp	r9, r6
   3129c:	vmul.i32	q8, q0, d0[1]
   312a0:	vmul.i32	q9, q1, d2[1]
   312a4:	vmov.32	lr, d16[0]
   312a8:	vmov.32	r4, d18[0]
   312ac:	beq	31198 <GetDataSlab+0x1218>
   312b0:	vmov.32	r6, d20[0]
   312b4:	sub	r8, fp, #96	; 0x60
   312b8:	mul	r4, r6, r4
   312bc:	ldr	r6, [r0, r3, lsl #2]
   312c0:	subs	r3, r3, #1
   312c4:	mul	lr, lr, r6
   312c8:	bne	312b8 <GetDataSlab+0x1338>
   312cc:	b	3119c <GetDataSlab+0x121c>
   312d0:	sub	r8, fp, #96	; 0x60
   312d4:	ldr	r3, [fp, #12]
   312d8:	sub	r9, fp, #176	; 0xb0
   312dc:	str	lr, [r8, r2, lsl #2]
   312e0:	ldr	r6, [sp, #68]	; 0x44
   312e4:	add	sl, sl, #4
   312e8:	str	r4, [r9, r2, lsl #2]
   312ec:	ldr	r3, [r3, r2, lsl #2]
   312f0:	mla	r7, r3, r6, r7
   312f4:	ldr	r3, [fp, #20]
   312f8:	ldr	r6, [sp, #76]	; 0x4c
   312fc:	ldr	r3, [r3, r2, lsl #2]
   31300:	add	r2, r2, #1
   31304:	mul	r6, r3, r6
   31308:	ldr	r3, [fp, #24]
   3130c:	str	r6, [sp, #76]	; 0x4c
   31310:	mov	r6, r4
   31314:	ldr	r4, [sp, #64]	; 0x40
   31318:	cmp	r2, r3
   3131c:	beq	3bea8 <GetDataSlab+0xbf28>
   31320:	ldr	r3, [fp, #16]
   31324:	str	r6, [sp, #68]	; 0x44
   31328:	ldr	r3, [r3, r2, lsl #2]
   3132c:	str	r4, [r9, r2, lsl #2]
   31330:	ldr	r9, [sp, #84]	; 0x54
   31334:	sub	lr, r3, #1
   31338:	ldr	r3, [fp, #8]
   3133c:	add	r9, r9, #1
   31340:	str	lr, [r8, r2, lsl #2]
   31344:	cmp	r9, #4
   31348:	str	r9, [sp, #84]	; 0x54
   3134c:	ldr	r6, [r3, r2, lsl #2]
   31350:	str	r6, [sp, #64]	; 0x40
   31354:	bcs	31360 <GetDataSlab+0x13e0>
   31358:	mov	r3, r2
   3135c:	b	313f0 <GetDataSlab+0x1470>
   31360:	vmov.i32	q9, #1	; 0x00000001
   31364:	vmov.i32	q10, #1	; 0x00000001
   31368:	vmov.32	d23[1], r6
   3136c:	vmov.i32	q8, #1	; 0x00000001
   31370:	bic	r3, r9, #3
   31374:	bic	r8, r2, #3
   31378:	mov	r6, sl
   3137c:	str	r3, [sp, #60]	; 0x3c
   31380:	sub	r3, r2, r3
   31384:	vmov.32	d18[0], r4
   31388:	vmov.32	d20[0], lr
   3138c:	vorr	d16, d18, d18
   31390:	vmov.i32	q9, #1	; 0x00000001
   31394:	vorr	d18, d20, d20
   31398:	vld1.32	{d20-d21}, [r6], ip
   3139c:	subs	r8, r8, #4
   313a0:	vrev64.32	q12, q10
   313a4:	vext.8	q12, q12, q12, #8
   313a8:	vext.8	q11, q11, q12, #12
   313ac:	vmul.i32	q9, q9, q12
   313b0:	vmul.i32	q8, q11, q8
   313b4:	vorr	q11, q12, q12
   313b8:	bne	31398 <GetDataSlab+0x1418>
   313bc:	vext.8	q11, q9, q8, #8
   313c0:	vext.8	q12, q8, q8, #8
   313c4:	ldr	r6, [sp, #60]	; 0x3c
   313c8:	vmul.i32	q0, q9, q11
   313cc:	vmul.i32	q1, q8, q12
   313d0:	cmp	r9, r6
   313d4:	vmul.i32	q8, q0, d0[1]
   313d8:	vmul.i32	q9, q1, d2[1]
   313dc:	vmov.32	lr, d16[0]
   313e0:	vmov.32	r4, d18[0]
   313e4:	beq	312d0 <GetDataSlab+0x1350>
   313e8:	vmov.32	r6, d20[0]
   313ec:	sub	r8, fp, #96	; 0x60
   313f0:	mul	r4, r6, r4
   313f4:	ldr	r6, [r0, r3, lsl #2]
   313f8:	subs	r3, r3, #1
   313fc:	mul	lr, lr, r6
   31400:	bne	313f0 <GetDataSlab+0x1470>
   31404:	b	312d4 <GetDataSlab+0x1354>
   31408:	sub	r8, fp, #96	; 0x60
   3140c:	ldr	r3, [fp, #12]
   31410:	sub	r9, fp, #176	; 0xb0
   31414:	str	lr, [r8, r2, lsl #2]
   31418:	ldr	r6, [sp, #68]	; 0x44
   3141c:	add	sl, sl, #4
   31420:	str	r4, [r9, r2, lsl #2]
   31424:	ldr	r3, [r3, r2, lsl #2]
   31428:	mla	r7, r3, r6, r7
   3142c:	ldr	r3, [fp, #20]
   31430:	ldr	r6, [sp, #76]	; 0x4c
   31434:	ldr	r3, [r3, r2, lsl #2]
   31438:	add	r2, r2, #1
   3143c:	mul	r6, r3, r6
   31440:	ldr	r3, [fp, #24]
   31444:	str	r6, [sp, #76]	; 0x4c
   31448:	mov	r6, r4
   3144c:	ldr	r4, [sp, #64]	; 0x40
   31450:	cmp	r2, r3
   31454:	beq	3c03c <GetDataSlab+0xc0bc>
   31458:	ldr	r3, [fp, #16]
   3145c:	str	r6, [sp, #68]	; 0x44
   31460:	ldr	r3, [r3, r2, lsl #2]
   31464:	str	r4, [r9, r2, lsl #2]
   31468:	ldr	r9, [sp, #84]	; 0x54
   3146c:	sub	lr, r3, #1
   31470:	ldr	r3, [fp, #8]
   31474:	add	r9, r9, #1
   31478:	str	lr, [r8, r2, lsl #2]
   3147c:	cmp	r9, #4
   31480:	str	r9, [sp, #84]	; 0x54
   31484:	ldr	r6, [r3, r2, lsl #2]
   31488:	str	r6, [sp, #64]	; 0x40
   3148c:	bcs	31498 <GetDataSlab+0x1518>
   31490:	mov	r3, r2
   31494:	b	31528 <GetDataSlab+0x15a8>
   31498:	vmov.i32	q9, #1	; 0x00000001
   3149c:	vmov.i32	q10, #1	; 0x00000001
   314a0:	vmov.32	d23[1], r6
   314a4:	vmov.i32	q8, #1	; 0x00000001
   314a8:	bic	r3, r9, #3
   314ac:	bic	r8, r2, #3
   314b0:	mov	r6, sl
   314b4:	str	r3, [sp, #60]	; 0x3c
   314b8:	sub	r3, r2, r3
   314bc:	vmov.32	d18[0], r4
   314c0:	vmov.32	d20[0], lr
   314c4:	vorr	d16, d18, d18
   314c8:	vmov.i32	q9, #1	; 0x00000001
   314cc:	vorr	d18, d20, d20
   314d0:	vld1.32	{d20-d21}, [r6], ip
   314d4:	subs	r8, r8, #4
   314d8:	vrev64.32	q12, q10
   314dc:	vext.8	q12, q12, q12, #8
   314e0:	vext.8	q11, q11, q12, #12
   314e4:	vmul.i32	q9, q9, q12
   314e8:	vmul.i32	q8, q11, q8
   314ec:	vorr	q11, q12, q12
   314f0:	bne	314d0 <GetDataSlab+0x1550>
   314f4:	vext.8	q11, q9, q8, #8
   314f8:	vext.8	q12, q8, q8, #8
   314fc:	ldr	r6, [sp, #60]	; 0x3c
   31500:	vmul.i32	q0, q9, q11
   31504:	vmul.i32	q1, q8, q12
   31508:	cmp	r9, r6
   3150c:	vmul.i32	q8, q0, d0[1]
   31510:	vmul.i32	q9, q1, d2[1]
   31514:	vmov.32	lr, d16[0]
   31518:	vmov.32	r4, d18[0]
   3151c:	beq	31408 <GetDataSlab+0x1488>
   31520:	vmov.32	r6, d20[0]
   31524:	sub	r8, fp, #96	; 0x60
   31528:	mul	r4, r6, r4
   3152c:	ldr	r6, [r0, r3, lsl #2]
   31530:	subs	r3, r3, #1
   31534:	mul	lr, lr, r6
   31538:	bne	31528 <GetDataSlab+0x15a8>
   3153c:	b	3140c <GetDataSlab+0x148c>
   31540:	sub	r8, fp, #96	; 0x60
   31544:	ldr	r3, [fp, #12]
   31548:	sub	r9, fp, #176	; 0xb0
   3154c:	str	lr, [r8, r2, lsl #2]
   31550:	ldr	r6, [sp, #68]	; 0x44
   31554:	add	sl, sl, #4
   31558:	str	r4, [r9, r2, lsl #2]
   3155c:	ldr	r3, [r3, r2, lsl #2]
   31560:	mla	r7, r3, r6, r7
   31564:	ldr	r3, [fp, #20]
   31568:	ldr	r6, [sp, #76]	; 0x4c
   3156c:	ldr	r3, [r3, r2, lsl #2]
   31570:	add	r2, r2, #1
   31574:	mul	r6, r3, r6
   31578:	ldr	r3, [fp, #24]
   3157c:	str	r6, [sp, #76]	; 0x4c
   31580:	mov	r6, r4
   31584:	ldr	r4, [sp, #64]	; 0x40
   31588:	cmp	r2, r3
   3158c:	beq	3c1d0 <GetDataSlab+0xc250>
   31590:	ldr	r3, [fp, #16]
   31594:	str	r6, [sp, #68]	; 0x44
   31598:	ldr	r3, [r3, r2, lsl #2]
   3159c:	str	r4, [r9, r2, lsl #2]
   315a0:	ldr	r9, [sp, #84]	; 0x54
   315a4:	sub	lr, r3, #1
   315a8:	ldr	r3, [fp, #8]
   315ac:	add	r9, r9, #1
   315b0:	str	lr, [r8, r2, lsl #2]
   315b4:	cmp	r9, #4
   315b8:	str	r9, [sp, #84]	; 0x54
   315bc:	ldr	r6, [r3, r2, lsl #2]
   315c0:	str	r6, [sp, #64]	; 0x40
   315c4:	bcs	315d0 <GetDataSlab+0x1650>
   315c8:	mov	r3, r2
   315cc:	b	31660 <GetDataSlab+0x16e0>
   315d0:	vmov.i32	q9, #1	; 0x00000001
   315d4:	vmov.i32	q10, #1	; 0x00000001
   315d8:	vmov.32	d23[1], r6
   315dc:	vmov.i32	q8, #1	; 0x00000001
   315e0:	bic	r3, r9, #3
   315e4:	bic	r8, r2, #3
   315e8:	mov	r6, sl
   315ec:	str	r3, [sp, #60]	; 0x3c
   315f0:	sub	r3, r2, r3
   315f4:	vmov.32	d18[0], r4
   315f8:	vmov.32	d20[0], lr
   315fc:	vorr	d16, d18, d18
   31600:	vmov.i32	q9, #1	; 0x00000001
   31604:	vorr	d18, d20, d20
   31608:	vld1.32	{d20-d21}, [r6], ip
   3160c:	subs	r8, r8, #4
   31610:	vrev64.32	q12, q10
   31614:	vext.8	q12, q12, q12, #8
   31618:	vext.8	q11, q11, q12, #12
   3161c:	vmul.i32	q9, q9, q12
   31620:	vmul.i32	q8, q11, q8
   31624:	vorr	q11, q12, q12
   31628:	bne	31608 <GetDataSlab+0x1688>
   3162c:	vext.8	q11, q9, q8, #8
   31630:	vext.8	q12, q8, q8, #8
   31634:	ldr	r6, [sp, #60]	; 0x3c
   31638:	vmul.i32	q0, q9, q11
   3163c:	vmul.i32	q1, q8, q12
   31640:	cmp	r9, r6
   31644:	vmul.i32	q8, q0, d0[1]
   31648:	vmul.i32	q9, q1, d2[1]
   3164c:	vmov.32	lr, d16[0]
   31650:	vmov.32	r4, d18[0]
   31654:	beq	31540 <GetDataSlab+0x15c0>
   31658:	vmov.32	r6, d20[0]
   3165c:	sub	r8, fp, #96	; 0x60
   31660:	mul	r4, r6, r4
   31664:	ldr	r6, [r0, r3, lsl #2]
   31668:	subs	r3, r3, #1
   3166c:	mul	lr, lr, r6
   31670:	bne	31660 <GetDataSlab+0x16e0>
   31674:	b	31544 <GetDataSlab+0x15c4>
   31678:	ldr	sl, [fp, #16]
   3167c:	mov	r8, r5
   31680:	sub	r3, fp, #96	; 0x60
   31684:	sub	r2, fp, #176	; 0xb0
   31688:	ldr	r5, [sp, #84]	; 0x54
   3168c:	str	r4, [sp, #84]	; 0x54
   31690:	add	ip, ip, #4
   31694:	str	r0, [r3, r6, lsl #2]
   31698:	ldr	r0, [fp, #12]
   3169c:	str	r4, [r2, r6, lsl #2]
   316a0:	ldr	r4, [sp, #68]	; 0x44
   316a4:	ldr	r0, [r0, r6, lsl #2]
   316a8:	mla	r7, r0, r5, r7
   316ac:	ldr	r0, [fp, #20]
   316b0:	ldr	r5, [sp, #76]	; 0x4c
   316b4:	ldr	r0, [r0, r6, lsl #2]
   316b8:	add	r6, r6, #1
   316bc:	mul	r5, r0, r5
   316c0:	ldr	r0, [fp, #24]
   316c4:	str	r5, [sp, #76]	; 0x4c
   316c8:	mov	r5, r8
   316cc:	cmp	r6, r0
   316d0:	beq	3c364 <GetDataSlab+0xc3e4>
   316d4:	ldr	r0, [sl, r6, lsl #2]
   316d8:	str	r4, [r2, r6, lsl #2]
   316dc:	ldr	r2, [fp, #8]
   316e0:	add	r5, r5, #1
   316e4:	cmp	r5, #4
   316e8:	sub	r0, r0, #1
   316ec:	str	r0, [r3, r6, lsl #2]
   316f0:	ldr	r2, [r2, r6, lsl #2]
   316f4:	str	r2, [sp, #68]	; 0x44
   316f8:	bcs	31704 <GetDataSlab+0x1784>
   316fc:	mov	r3, r6
   31700:	b	3178c <GetDataSlab+0x180c>
   31704:	vmov.i32	q9, #1	; 0x00000001
   31708:	vmov.i32	q10, #1	; 0x00000001
   3170c:	vmov.32	d23[1], r2
   31710:	vmov.i32	q8, #1	; 0x00000001
   31714:	bic	r8, r5, #3
   31718:	bic	sl, r6, #3
   3171c:	sub	r3, r6, r8
   31720:	vmov.32	d18[0], r4
   31724:	vmov.32	d20[0], r0
   31728:	mov	r0, ip
   3172c:	vorr	d16, d18, d18
   31730:	vmov.i32	q9, #1	; 0x00000001
   31734:	vorr	d18, d20, d20
   31738:	vld1.32	{d20-d21}, [r0], lr
   3173c:	subs	sl, sl, #4
   31740:	vrev64.32	q12, q10
   31744:	vext.8	q12, q12, q12, #8
   31748:	vext.8	q11, q11, q12, #12
   3174c:	vmul.i32	q9, q9, q12
   31750:	vmul.i32	q8, q11, q8
   31754:	vorr	q11, q12, q12
   31758:	bne	31738 <GetDataSlab+0x17b8>
   3175c:	vext.8	q11, q9, q8, #8
   31760:	vext.8	q12, q8, q8, #8
   31764:	cmp	r5, r8
   31768:	vmul.i32	q0, q9, q11
   3176c:	vmul.i32	q1, q8, q12
   31770:	vmul.i32	q8, q0, d0[1]
   31774:	vmul.i32	q9, q1, d2[1]
   31778:	vmov.32	r0, d16[0]
   3177c:	vmov.32	r4, d18[0]
   31780:	beq	31678 <GetDataSlab+0x16f8>
   31784:	vmov.32	r2, d20[0]
   31788:	ldr	sl, [fp, #16]
   3178c:	mov	r8, r5
   31790:	mul	r4, r2, r4
   31794:	ldr	r2, [r1, r3, lsl #2]
   31798:	subs	r3, r3, #1
   3179c:	mul	r0, r0, r2
   317a0:	bne	31790 <GetDataSlab+0x1810>
   317a4:	b	31680 <GetDataSlab+0x1700>
   317a8:	ldr	sl, [fp, #16]
   317ac:	mov	r8, r5
   317b0:	sub	r3, fp, #96	; 0x60
   317b4:	sub	r2, fp, #176	; 0xb0
   317b8:	ldr	r5, [sp, #84]	; 0x54
   317bc:	str	r4, [sp, #84]	; 0x54
   317c0:	add	ip, ip, #4
   317c4:	str	r0, [r3, r6, lsl #2]
   317c8:	ldr	r0, [fp, #12]
   317cc:	str	r4, [r2, r6, lsl #2]
   317d0:	ldr	r4, [sp, #68]	; 0x44
   317d4:	ldr	r0, [r0, r6, lsl #2]
   317d8:	mla	r7, r0, r5, r7
   317dc:	ldr	r0, [fp, #20]
   317e0:	ldr	r5, [sp, #76]	; 0x4c
   317e4:	ldr	r0, [r0, r6, lsl #2]
   317e8:	add	r6, r6, #1
   317ec:	mul	r5, r0, r5
   317f0:	ldr	r0, [fp, #24]
   317f4:	str	r5, [sp, #76]	; 0x4c
   317f8:	mov	r5, r8
   317fc:	cmp	r6, r0
   31800:	beq	3c6d8 <GetDataSlab+0xc758>
   31804:	ldr	r0, [sl, r6, lsl #2]
   31808:	str	r4, [r2, r6, lsl #2]
   3180c:	ldr	r2, [fp, #8]
   31810:	add	r5, r5, #1
   31814:	cmp	r5, #4
   31818:	sub	r0, r0, #1
   3181c:	str	r0, [r3, r6, lsl #2]
   31820:	ldr	r2, [r2, r6, lsl #2]
   31824:	str	r2, [sp, #68]	; 0x44
   31828:	bcs	31834 <GetDataSlab+0x18b4>
   3182c:	mov	r3, r6
   31830:	b	318bc <GetDataSlab+0x193c>
   31834:	vmov.i32	q9, #1	; 0x00000001
   31838:	vmov.i32	q10, #1	; 0x00000001
   3183c:	vmov.32	d23[1], r2
   31840:	vmov.i32	q8, #1	; 0x00000001
   31844:	bic	r8, r5, #3
   31848:	bic	sl, r6, #3
   3184c:	sub	r3, r6, r8
   31850:	vmov.32	d18[0], r4
   31854:	vmov.32	d20[0], r0
   31858:	mov	r0, ip
   3185c:	vorr	d16, d18, d18
   31860:	vmov.i32	q9, #1	; 0x00000001
   31864:	vorr	d18, d20, d20
   31868:	vld1.32	{d20-d21}, [r0], lr
   3186c:	subs	sl, sl, #4
   31870:	vrev64.32	q12, q10
   31874:	vext.8	q12, q12, q12, #8
   31878:	vext.8	q11, q11, q12, #12
   3187c:	vmul.i32	q9, q9, q12
   31880:	vmul.i32	q8, q11, q8
   31884:	vorr	q11, q12, q12
   31888:	bne	31868 <GetDataSlab+0x18e8>
   3188c:	vext.8	q11, q9, q8, #8
   31890:	vext.8	q12, q8, q8, #8
   31894:	cmp	r5, r8
   31898:	vmul.i32	q0, q9, q11
   3189c:	vmul.i32	q1, q8, q12
   318a0:	vmul.i32	q8, q0, d0[1]
   318a4:	vmul.i32	q9, q1, d2[1]
   318a8:	vmov.32	r0, d16[0]
   318ac:	vmov.32	r4, d18[0]
   318b0:	beq	317a8 <GetDataSlab+0x1828>
   318b4:	vmov.32	r2, d20[0]
   318b8:	ldr	sl, [fp, #16]
   318bc:	mov	r8, r5
   318c0:	mul	r4, r2, r4
   318c4:	ldr	r2, [r1, r3, lsl #2]
   318c8:	subs	r3, r3, #1
   318cc:	mul	r0, r0, r2
   318d0:	bne	318c0 <GetDataSlab+0x1940>
   318d4:	b	317b0 <GetDataSlab+0x1830>
   318d8:	ldr	r6, [sp, #76]	; 0x4c
   318dc:	mov	r0, #1
   318e0:	sub	r1, r6, #1
   318e4:	cmp	r1, #11
   318e8:	bhi	5e98c <GetDataSlab+0x2ea0c>
   318ec:	add	r2, pc, #16
   318f0:	ldr	r3, [sp, #80]	; 0x50
   318f4:	ldr	r7, [sp, #84]	; 0x54
   318f8:	ldr	r4, [sp, #60]	; 0x3c
   318fc:	ldr	r1, [r2, r1, lsl #2]
   31900:	add	pc, r2, r1
   31904:	.word	0x00000030
   31908:	.word	0x00026780
   3190c:	.word	0x000269fc
   31910:	.word	0x00026c80
   31914:	.word	0x00026f04
   31918:	.word	0x0002711c
   3191c:	.word	0x00027334
   31920:	.word	0x0002d088
   31924:	.word	0x00027420
   31928:	.word	0x0002d088
   3192c:	.word	0x0002d088
   31930:	.word	0x00027620
   31934:	cmp	r7, #1
   31938:	blt	5f88c <GetDataSlab+0x2f90c>
   3193c:	ldr	r2, [sp, #56]	; 0x38
   31940:	mov	r1, #1
   31944:	cmp	r5, #3
   31948:	mov	r7, #0
   3194c:	mla	r0, r2, r8, r4
   31950:	str	r0, [sp, #52]	; 0x34
   31954:	add	ip, r3, r0
   31958:	sub	r0, r5, #4
   3195c:	add	r1, r1, r0, lsr #2
   31960:	lsr	r0, r0, #2
   31964:	str	r0, [sp, #56]	; 0x38
   31968:	and	r3, r1, #1
   3196c:	sub	r1, r1, r3
   31970:	str	r3, [sp, #48]	; 0x30
   31974:	str	r1, [sp, #44]	; 0x2c
   31978:	add	r1, r5, r4
   3197c:	mla	r1, r2, r8, r1
   31980:	mov	r2, #0
   31984:	movwhi	r2, #1
   31988:	str	r1, [sp, #60]	; 0x3c
   3198c:	ldr	r1, [sp, #72]	; 0x48
   31990:	mul	r1, r1, r8
   31994:	str	r1, [sp, #92]	; 0x5c
   31998:	ldr	r1, [sp, #68]	; 0x44
   3199c:	mov	r3, r1
   319a0:	sub	r1, r1, #1
   319a4:	clz	r1, r1
   319a8:	lsr	r1, r1, #5
   319ac:	and	r1, r2, r1
   319b0:	lsl	r2, r3, #3
   319b4:	str	r2, [sp, #40]	; 0x28
   319b8:	lsl	r2, r3, #2
   319bc:	str	r1, [sp, #76]	; 0x4c
   319c0:	lsl	r1, r3, #1
   319c4:	str	r2, [sp, #36]	; 0x24
   319c8:	ldr	lr, [sp, #40]	; 0x28
   319cc:	and	r2, r5, #1
   319d0:	ldr	r9, [sp, #36]	; 0x24
   319d4:	str	r2, [sp, #72]	; 0x48
   319d8:	bic	r2, r5, #3
   319dc:	str	r2, [sp, #64]	; 0x40
   319e0:	cmp	r5, #1
   319e4:	bge	31a14 <GetDataSlab+0x1a94>
   319e8:	ldr	r8, [sp, #88]	; 0x58
   319ec:	ldr	sl, [sp, #92]	; 0x5c
   319f0:	ldr	r2, [sp, #84]	; 0x54
   319f4:	add	r7, r7, #1
   319f8:	add	ip, ip, sl
   319fc:	mov	r0, #0
   31a00:	str	r8, [sp, #88]	; 0x58
   31a04:	cmp	r7, r2
   31a08:	beq	56c20 <GetDataSlab+0x26ca0>
   31a0c:	cmp	r5, #1
   31a10:	blt	319e8 <GetDataSlab+0x1a68>
   31a14:	ldr	r2, [sp, #76]	; 0x4c
   31a18:	ldr	r8, [sp, #88]	; 0x58
   31a1c:	ldr	sl, [sp, #92]	; 0x5c
   31a20:	mov	r0, #0
   31a24:	cmp	r2, #0
   31a28:	beq	31b24 <GetDataSlab+0x1ba4>
   31a2c:	ldr	r2, [sp, #60]	; 0x3c
   31a30:	ldr	r3, [sp, #80]	; 0x50
   31a34:	mla	r2, sl, r7, r2
   31a38:	add	r2, r3, r2
   31a3c:	cmp	r2, r8
   31a40:	bls	31a5c <GetDataSlab+0x1adc>
   31a44:	ldr	r2, [sp, #52]	; 0x34
   31a48:	add	r4, r8, r5, lsl #2
   31a4c:	mla	r2, sl, r7, r2
   31a50:	add	r2, r3, r2
   31a54:	cmp	r2, r4
   31a58:	bcc	31b24 <GetDataSlab+0x1ba4>
   31a5c:	ldr	r0, [sp, #56]	; 0x38
   31a60:	cmp	r0, #0
   31a64:	beq	31ad0 <GetDataSlab+0x1b50>
   31a68:	ldr	r4, [sp, #44]	; 0x2c
   31a6c:	mov	r0, #0
   31a70:	mov	r2, ip
   31a74:	ldr	r6, [r2]
   31a78:	mov	r3, #32
   31a7c:	subs	r4, r4, #2
   31a80:	add	r0, r0, #8
   31a84:	str	r6, [sp, #180]	; 0xb4
   31a88:	add	r6, sp, #180	; 0xb4
   31a8c:	vld1.32	{d16[0]}, [r6 :32]
   31a90:	add	r6, r8, #16
   31a94:	vmovl.s8	q8, d16
   31a98:	vmovl.s16	q8, d16
   31a9c:	vcvt.f32.s32	q8, q8
   31aa0:	vst1.32	{d16-d17}, [r8], r3
   31aa4:	add	r3, sp, #184	; 0xb8
   31aa8:	ldr	sl, [r2, r9]
   31aac:	add	r2, r2, lr
   31ab0:	str	sl, [sp, #184]	; 0xb8
   31ab4:	vld1.32	{d16[0]}, [r3 :32]
   31ab8:	vmovl.s8	q8, d16
   31abc:	vmovl.s16	q8, d16
   31ac0:	vcvt.f32.s32	q8, q8
   31ac4:	vst1.32	{d16-d17}, [r6]
   31ac8:	bne	31a74 <GetDataSlab+0x1af4>
   31acc:	b	31ad4 <GetDataSlab+0x1b54>
   31ad0:	mov	r0, #0
   31ad4:	ldr	r2, [sp, #48]	; 0x30
   31ad8:	ldr	r8, [sp, #88]	; 0x58
   31adc:	cmp	r2, #0
   31ae0:	beq	31b10 <GetDataSlab+0x1b90>
   31ae4:	ldr	r2, [sp, #68]	; 0x44
   31ae8:	mul	r2, r0, r2
   31aec:	add	r0, r8, r0, lsl #2
   31af0:	ldr	r2, [ip, r2]
   31af4:	str	r2, [sp, #176]	; 0xb0
   31af8:	add	r2, sp, #176	; 0xb0
   31afc:	vld1.32	{d16[0]}, [r2 :32]
   31b00:	vmovl.s8	q8, d16
   31b04:	vmovl.s16	q8, d16
   31b08:	vcvt.f32.s32	q8, q8
   31b0c:	vst1.32	{d16-d17}, [r0]
   31b10:	ldr	r0, [sp, #64]	; 0x40
   31b14:	ldr	sl, [sp, #92]	; 0x5c
   31b18:	add	r8, r8, r0, lsl #2
   31b1c:	cmp	r5, r0
   31b20:	beq	319f0 <GetDataSlab+0x1a70>
   31b24:	ldr	r2, [sp, #72]	; 0x48
   31b28:	cmp	r2, #0
   31b2c:	bne	31b38 <GetDataSlab+0x1bb8>
   31b30:	mov	r4, r0
   31b34:	b	31b58 <GetDataSlab+0x1bd8>
   31b38:	ldr	r2, [sp, #68]	; 0x44
   31b3c:	orr	r4, r0, #1
   31b40:	mla	r2, r0, r2, ip
   31b44:	ldrsb	r2, [r2]
   31b48:	vmov	s0, r2
   31b4c:	vcvt.f32.s32	s0, s0
   31b50:	vstr	s0, [r8]
   31b54:	add	r8, r8, #4
   31b58:	orr	r0, r0, #1
   31b5c:	cmp	r5, r0
   31b60:	beq	319f0 <GetDataSlab+0x1a70>
   31b64:	ldr	r3, [sp, #68]	; 0x44
   31b68:	sub	r2, r5, r4
   31b6c:	mov	r6, ip
   31b70:	mul	r0, r3, r4
   31b74:	add	r4, r4, #1
   31b78:	mul	r4, r3, r4
   31b7c:	add	r3, r6, r0
   31b80:	subs	r2, r2, #2
   31b84:	ldrsb	r3, [r3]
   31b88:	vmov	s0, r3
   31b8c:	add	r3, r6, r4
   31b90:	add	r6, r6, r1
   31b94:	vcvt.f32.s32	s0, s0
   31b98:	vstr	s0, [r8]
   31b9c:	ldrsb	r3, [r3]
   31ba0:	vmov	s0, r3
   31ba4:	vcvt.f32.s32	s0, s0
   31ba8:	vstr	s0, [r8, #4]
   31bac:	add	r8, r8, #8
   31bb0:	bne	31b7c <GetDataSlab+0x1bfc>
   31bb4:	b	319f0 <GetDataSlab+0x1a70>
   31bb8:	ldr	r0, [sp, #76]	; 0x4c
   31bbc:	sub	r2, r0, #1
   31bc0:	mov	r0, #1
   31bc4:	cmp	r2, #11
   31bc8:	bhi	5f16c <GetDataSlab+0x2f1ec>
   31bcc:	add	r7, pc, #16
   31bd0:	ldr	r1, [sp, #88]	; 0x58
   31bd4:	ldr	r6, [sp, #80]	; 0x50
   31bd8:	ldr	r4, [sp, #84]	; 0x54
   31bdc:	ldr	r2, [r7, r2, lsl #2]
   31be0:	add	pc, r7, r2
   31be4:	.word	0x00000030
   31be8:	.word	0x000275ec
   31bec:	.word	0x00027678
   31bf0:	.word	0x0002770c
   31bf4:	.word	0x000277a0
   31bf8:	.word	0x00027834
   31bfc:	.word	0x000278c8
   31c00:	.word	0x0002d590
   31c04:	.word	0x00027968
   31c08:	.word	0x0002d590
   31c0c:	.word	0x0002d590
   31c10:	.word	0x00027a08
   31c14:	cmp	r4, #1
   31c18:	blt	5f88c <GetDataSlab+0x2f90c>
   31c1c:	ldr	r0, [sp, #60]	; 0x3c
   31c20:	ldr	r2, [sp, #56]	; 0x38
   31c24:	mov	r7, #0
   31c28:	mla	r0, r2, r8, r0
   31c2c:	add	r2, r6, r0
   31c30:	mov	r6, r1
   31c34:	cmp	r5, #1
   31c38:	bge	31c68 <GetDataSlab+0x1ce8>
   31c3c:	ldr	r1, [sp, #84]	; 0x54
   31c40:	ldr	r0, [sp, #72]	; 0x48
   31c44:	mla	r2, r8, r0, r2
   31c48:	add	r7, r7, #1
   31c4c:	str	r0, [sp, #72]	; 0x48
   31c50:	mov	r0, #0
   31c54:	str	r1, [sp, #84]	; 0x54
   31c58:	cmp	r7, r1
   31c5c:	bge	56c20 <GetDataSlab+0x26ca0>
   31c60:	cmp	r5, #1
   31c64:	blt	31c3c <GetDataSlab+0x1cbc>
   31c68:	mov	r0, #0
   31c6c:	ldr	r5, [sl]
   31c70:	mul	r5, r5, r0
   31c74:	ldrb	r5, [r2, r5]
   31c78:	strb	r5, [r6, r0]
   31c7c:	add	r0, r0, #1
   31c80:	ldr	r5, [r9]
   31c84:	cmp	r0, r5
   31c88:	blt	31c6c <GetDataSlab+0x1cec>
   31c8c:	add	r6, r6, r0
   31c90:	ldr	r1, [r3]
   31c94:	ldr	r8, [lr]
   31c98:	ldr	r0, [ip]
   31c9c:	b	31c44 <GetDataSlab+0x1cc4>
   31ca0:	ldr	r0, [sp, #76]	; 0x4c
   31ca4:	sub	r2, r0, #1
   31ca8:	mov	r0, #1
   31cac:	cmp	r2, #11
   31cb0:	bhi	5f224 <GetDataSlab+0x2f2a4>
   31cb4:	add	r7, pc, #16
   31cb8:	ldr	r1, [sp, #88]	; 0x58
   31cbc:	ldr	r6, [sp, #80]	; 0x50
   31cc0:	ldr	r4, [sp, #84]	; 0x54
   31cc4:	ldr	r2, [r7, r2, lsl #2]
   31cc8:	add	pc, r7, r2
   31ccc:	.word	0x00000030
   31cd0:	.word	0x000279a4
   31cd4:	.word	0x00027a30
   31cd8:	.word	0x00027ac4
   31cdc:	.word	0x00027b58
   31ce0:	.word	0x00027bec
   31ce4:	.word	0x00027c80
   31ce8:	.word	0x0002d560
   31cec:	.word	0x00027d20
   31cf0:	.word	0x0002d560
   31cf4:	.word	0x0002d560
   31cf8:	.word	0x00027dc0
   31cfc:	cmp	r4, #1
   31d00:	blt	5f88c <GetDataSlab+0x2f90c>
   31d04:	ldr	r0, [sp, #60]	; 0x3c
   31d08:	ldr	r2, [sp, #56]	; 0x38
   31d0c:	mov	r7, #0
   31d10:	mla	r0, r2, r8, r0
   31d14:	add	r2, r6, r0
   31d18:	mov	r6, r1
   31d1c:	cmp	r5, #1
   31d20:	bge	31d50 <GetDataSlab+0x1dd0>
   31d24:	ldr	r1, [sp, #84]	; 0x54
   31d28:	ldr	r0, [sp, #72]	; 0x48
   31d2c:	mla	r2, r8, r0, r2
   31d30:	add	r7, r7, #1
   31d34:	str	r0, [sp, #72]	; 0x48
   31d38:	mov	r0, #0
   31d3c:	str	r1, [sp, #84]	; 0x54
   31d40:	cmp	r7, r1
   31d44:	bge	56c20 <GetDataSlab+0x26ca0>
   31d48:	cmp	r5, #1
   31d4c:	blt	31d24 <GetDataSlab+0x1da4>
   31d50:	mov	r0, #0
   31d54:	ldr	r5, [sl]
   31d58:	mul	r5, r5, r0
   31d5c:	ldrb	r5, [r2, r5]
   31d60:	strb	r5, [r6, r0]
   31d64:	add	r0, r0, #1
   31d68:	ldr	r5, [r9]
   31d6c:	cmp	r0, r5
   31d70:	blt	31d54 <GetDataSlab+0x1dd4>
   31d74:	add	r6, r6, r0
   31d78:	ldr	r1, [r3]
   31d7c:	ldr	r8, [lr]
   31d80:	ldr	r0, [ip]
   31d84:	b	31d2c <GetDataSlab+0x1dac>
   31d88:	ldr	r0, [sp, #76]	; 0x4c
   31d8c:	sub	r1, r0, #1
   31d90:	mov	r0, #1
   31d94:	cmp	r1, #11
   31d98:	bhi	5f2dc <GetDataSlab+0x2f35c>
   31d9c:	add	r2, pc, #16
   31da0:	add	r9, sp, #80	; 0x50
   31da4:	ldr	r6, [sp, #60]	; 0x3c
   31da8:	ldr	r1, [r2, r1, lsl #2]
   31dac:	ldm	r9, {r3, r7, r9}
   31db0:	add	pc, r2, r1
   31db4:	.word	0x00000030
   31db8:	.word	0x00027d5c
   31dbc:	.word	0x00027fe4
   31dc0:	.word	0x0002822c
   31dc4:	.word	0x00028474
   31dc8:	.word	0x00028670
   31dcc:	.word	0x00028874
   31dd0:	.word	0x0002d52c
   31dd4:	.word	0x00028aa0
   31dd8:	.word	0x0002d52c
   31ddc:	.word	0x0002d52c
   31de0:	.word	0x00028b84
   31de4:	cmp	r7, #1
   31de8:	blt	5f88c <GetDataSlab+0x2f90c>
   31dec:	ldr	r2, [sp, #56]	; 0x38
   31df0:	mov	r1, #1
   31df4:	cmp	r5, #7
   31df8:	mla	r0, r2, r8, r6
   31dfc:	str	r0, [sp, #52]	; 0x34
   31e00:	add	r0, r3, r0
   31e04:	str	r0, [sp, #92]	; 0x5c
   31e08:	sub	r0, r5, #8
   31e0c:	add	r1, r1, r0, lsr #3
   31e10:	lsr	r0, r0, #3
   31e14:	str	r0, [sp, #40]	; 0x28
   31e18:	and	r3, r1, #1
   31e1c:	sub	r1, r1, r3
   31e20:	str	r3, [sp, #48]	; 0x30
   31e24:	str	r1, [sp, #36]	; 0x24
   31e28:	add	r1, r5, r6
   31e2c:	mla	r1, r2, r8, r1
   31e30:	mov	r2, #0
   31e34:	str	r2, [sp, #76]	; 0x4c
   31e38:	mov	r2, #0
   31e3c:	movwhi	r2, #1
   31e40:	str	r1, [sp, #56]	; 0x38
   31e44:	ldr	r1, [sp, #72]	; 0x48
   31e48:	mul	r1, r1, r8
   31e4c:	mov	r8, r9
   31e50:	str	r1, [sp, #72]	; 0x48
   31e54:	ldr	r1, [sp, #68]	; 0x44
   31e58:	mov	r3, r1
   31e5c:	sub	r1, r1, #1
   31e60:	clz	r1, r1
   31e64:	lsr	r1, r1, #5
   31e68:	and	r1, r2, r1
   31e6c:	lsl	r2, r3, #4
   31e70:	str	r2, [sp, #32]
   31e74:	lsl	r2, r3, #3
   31e78:	str	r1, [sp, #64]	; 0x40
   31e7c:	lsl	r1, r3, #1
   31e80:	ldr	sl, [sp, #32]
   31e84:	str	r2, [sp, #28]
   31e88:	and	r2, r5, #1
   31e8c:	str	r2, [sp, #60]	; 0x3c
   31e90:	bic	r2, r5, #7
   31e94:	str	r2, [sp, #44]	; 0x2c
   31e98:	cmp	r5, #1
   31e9c:	bge	31ed4 <GetDataSlab+0x1f54>
   31ea0:	ldr	ip, [sp, #72]	; 0x48
   31ea4:	ldr	lr, [sp, #92]	; 0x5c
   31ea8:	ldr	r7, [sp, #76]	; 0x4c
   31eac:	ldr	r2, [sp, #84]	; 0x54
   31eb0:	add	r7, r7, #1
   31eb4:	add	lr, lr, ip
   31eb8:	mov	r0, #0
   31ebc:	str	lr, [sp, #92]	; 0x5c
   31ec0:	str	r7, [sp, #76]	; 0x4c
   31ec4:	cmp	r7, r2
   31ec8:	beq	56c20 <GetDataSlab+0x26ca0>
   31ecc:	cmp	r5, #1
   31ed0:	blt	31ea0 <GetDataSlab+0x1f20>
   31ed4:	ldr	r2, [sp, #64]	; 0x40
   31ed8:	ldr	ip, [sp, #72]	; 0x48
   31edc:	ldr	lr, [sp, #92]	; 0x5c
   31ee0:	ldr	r7, [sp, #76]	; 0x4c
   31ee4:	mov	r0, #0
   31ee8:	cmp	r2, #0
   31eec:	beq	31ffc <GetDataSlab+0x207c>
   31ef0:	ldr	r2, [sp, #56]	; 0x38
   31ef4:	ldr	r3, [sp, #80]	; 0x50
   31ef8:	mla	r2, ip, r7, r2
   31efc:	add	r2, r3, r2
   31f00:	cmp	r2, r8
   31f04:	bls	31f20 <GetDataSlab+0x1fa0>
   31f08:	ldr	r2, [sp, #52]	; 0x34
   31f0c:	add	r4, r8, r5, lsl #1
   31f10:	mla	r2, ip, r7, r2
   31f14:	add	r2, r3, r2
   31f18:	cmp	r2, r4
   31f1c:	bcc	31ffc <GetDataSlab+0x207c>
   31f20:	ldr	r0, [sp, #40]	; 0x28
   31f24:	cmp	r0, #0
   31f28:	beq	31fa0 <GetDataSlab+0x2020>
   31f2c:	mov	r2, lr
   31f30:	ldr	r4, [sp, #36]	; 0x24
   31f34:	ldr	lr, [sp, #28]
   31f38:	mov	r0, #0
   31f3c:	mov	r9, r8
   31f40:	ldr	r6, [r2]
   31f44:	ldr	ip, [r2, #4]
   31f48:	add	r3, sp, #400	; 0x190
   31f4c:	subs	r4, r4, #2
   31f50:	add	r0, r0, #16
   31f54:	str	r6, [sp, #400]	; 0x190
   31f58:	str	ip, [sp, #404]	; 0x194
   31f5c:	add	r6, r9, #16
   31f60:	vld1.8	{d16}, [r3 :64]
   31f64:	mov	r3, #32
   31f68:	vmovl.s8	q8, d16
   31f6c:	vst1.16	{d16-d17}, [r9], r3
   31f70:	add	r3, r2, sl
   31f74:	ldr	r7, [r2, lr]!
   31f78:	str	r7, [sp, #408]	; 0x198
   31f7c:	ldr	r2, [r2, #4]
   31f80:	str	r2, [sp, #412]	; 0x19c
   31f84:	add	r2, sp, #408	; 0x198
   31f88:	vld1.8	{d16}, [r2 :64]
   31f8c:	mov	r2, r3
   31f90:	vmovl.s8	q8, d16
   31f94:	vst1.16	{d16-d17}, [r6]
   31f98:	bne	31f40 <GetDataSlab+0x1fc0>
   31f9c:	b	31fa4 <GetDataSlab+0x2024>
   31fa0:	mov	r0, #0
   31fa4:	ldr	r2, [sp, #48]	; 0x30
   31fa8:	ldr	lr, [sp, #92]	; 0x5c
   31fac:	ldr	r7, [sp, #76]	; 0x4c
   31fb0:	cmp	r2, #0
   31fb4:	beq	31fe8 <GetDataSlab+0x2068>
   31fb8:	ldr	r2, [sp, #68]	; 0x44
   31fbc:	mov	r3, lr
   31fc0:	mul	r2, r0, r2
   31fc4:	add	r0, r8, r0, lsl #1
   31fc8:	ldr	r2, [r3, r2]!
   31fcc:	str	r2, [sp, #392]	; 0x188
   31fd0:	ldr	r2, [r3, #4]
   31fd4:	str	r2, [sp, #396]	; 0x18c
   31fd8:	add	r2, sp, #392	; 0x188
   31fdc:	vld1.8	{d16}, [r2 :64]
   31fe0:	vmovl.s8	q8, d16
   31fe4:	vst1.16	{d16-d17}, [r0]
   31fe8:	ldr	r0, [sp, #44]	; 0x2c
   31fec:	ldr	ip, [sp, #72]	; 0x48
   31ff0:	add	r8, r8, r0, lsl #1
   31ff4:	cmp	r5, r0
   31ff8:	beq	31eac <GetDataSlab+0x1f2c>
   31ffc:	ldr	r2, [sp, #60]	; 0x3c
   32000:	cmp	r2, #0
   32004:	bne	32010 <GetDataSlab+0x2090>
   32008:	mov	r4, r0
   3200c:	b	32024 <GetDataSlab+0x20a4>
   32010:	ldr	r2, [sp, #68]	; 0x44
   32014:	orr	r4, r0, #1
   32018:	mla	r2, r0, r2, lr
   3201c:	ldrsb	r2, [r2]
   32020:	strh	r2, [r8], #2
   32024:	orr	r0, r0, #1
   32028:	cmp	r5, r0
   3202c:	beq	31eac <GetDataSlab+0x1f2c>
   32030:	ldr	r6, [sp, #68]	; 0x44
   32034:	add	r3, r4, #1
   32038:	sub	r2, r5, r4
   3203c:	mul	r0, r6, r4
   32040:	mul	r4, r6, r3
   32044:	mov	r6, lr
   32048:	add	r3, r6, r0
   3204c:	subs	r2, r2, #2
   32050:	ldrsb	r3, [r3]
   32054:	strh	r3, [r8]
   32058:	add	r3, r6, r4
   3205c:	add	r6, r6, r1
   32060:	ldrsb	r3, [r3]
   32064:	strh	r3, [r8, #2]
   32068:	add	r8, r8, #4
   3206c:	bne	32048 <GetDataSlab+0x20c8>
   32070:	b	31eac <GetDataSlab+0x1f2c>
   32074:	ldr	r0, [sp, #76]	; 0x4c
   32078:	sub	r1, r0, #1
   3207c:	mov	r0, #1
   32080:	cmp	r1, #11
   32084:	bhi	5f4f4 <GetDataSlab+0x2f574>
   32088:	add	r2, pc, #16
   3208c:	add	r9, sp, #80	; 0x50
   32090:	ldr	r6, [sp, #60]	; 0x3c
   32094:	ldr	r1, [r2, r1, lsl #2]
   32098:	ldm	r9, {r3, r7, r9}
   3209c:	add	pc, r2, r1
   320a0:	.word	0x00000030
   320a4:	.word	0x00028a7c
   320a8:	.word	0x00028d04
   320ac:	.word	0x00028f4c
   320b0:	.word	0x00029194
   320b4:	.word	0x00029398
   320b8:	.word	0x0002959c
   320bc:	.word	0x0002d458
   320c0:	.word	0x000297d4
   320c4:	.word	0x0002d458
   320c8:	.word	0x0002d458
   320cc:	.word	0x000298ac
   320d0:	cmp	r7, #1
   320d4:	blt	5f88c <GetDataSlab+0x2f90c>
   320d8:	ldr	r2, [sp, #56]	; 0x38
   320dc:	mov	r1, #1
   320e0:	cmp	r5, #7
   320e4:	mla	r0, r2, r8, r6
   320e8:	str	r0, [sp, #52]	; 0x34
   320ec:	add	r0, r3, r0
   320f0:	str	r0, [sp, #92]	; 0x5c
   320f4:	sub	r0, r5, #8
   320f8:	add	r1, r1, r0, lsr #3
   320fc:	lsr	r0, r0, #3
   32100:	str	r0, [sp, #40]	; 0x28
   32104:	and	r3, r1, #1
   32108:	sub	r1, r1, r3
   3210c:	str	r3, [sp, #48]	; 0x30
   32110:	str	r1, [sp, #36]	; 0x24
   32114:	add	r1, r5, r6
   32118:	mla	r1, r2, r8, r1
   3211c:	mov	r2, #0
   32120:	str	r2, [sp, #76]	; 0x4c
   32124:	mov	r2, #0
   32128:	movwhi	r2, #1
   3212c:	str	r1, [sp, #56]	; 0x38
   32130:	ldr	r1, [sp, #72]	; 0x48
   32134:	mul	r1, r1, r8
   32138:	mov	r8, r9
   3213c:	str	r1, [sp, #72]	; 0x48
   32140:	ldr	r1, [sp, #68]	; 0x44
   32144:	mov	r3, r1
   32148:	sub	r1, r1, #1
   3214c:	clz	r1, r1
   32150:	lsr	r1, r1, #5
   32154:	and	r1, r2, r1
   32158:	lsl	r2, r3, #4
   3215c:	str	r2, [sp, #32]
   32160:	lsl	r2, r3, #3
   32164:	str	r1, [sp, #64]	; 0x40
   32168:	lsl	r1, r3, #1
   3216c:	ldr	sl, [sp, #32]
   32170:	str	r2, [sp, #28]
   32174:	and	r2, r5, #1
   32178:	str	r2, [sp, #60]	; 0x3c
   3217c:	bic	r2, r5, #7
   32180:	str	r2, [sp, #44]	; 0x2c
   32184:	cmp	r5, #1
   32188:	bge	321c0 <GetDataSlab+0x2240>
   3218c:	ldr	ip, [sp, #72]	; 0x48
   32190:	ldr	lr, [sp, #92]	; 0x5c
   32194:	ldr	r7, [sp, #76]	; 0x4c
   32198:	ldr	r2, [sp, #84]	; 0x54
   3219c:	add	r7, r7, #1
   321a0:	add	lr, lr, ip
   321a4:	mov	r0, #0
   321a8:	str	lr, [sp, #92]	; 0x5c
   321ac:	str	r7, [sp, #76]	; 0x4c
   321b0:	cmp	r7, r2
   321b4:	beq	56c20 <GetDataSlab+0x26ca0>
   321b8:	cmp	r5, #1
   321bc:	blt	3218c <GetDataSlab+0x220c>
   321c0:	ldr	r2, [sp, #64]	; 0x40
   321c4:	ldr	ip, [sp, #72]	; 0x48
   321c8:	ldr	lr, [sp, #92]	; 0x5c
   321cc:	ldr	r7, [sp, #76]	; 0x4c
   321d0:	mov	r0, #0
   321d4:	cmp	r2, #0
   321d8:	beq	322e8 <GetDataSlab+0x2368>
   321dc:	ldr	r2, [sp, #56]	; 0x38
   321e0:	ldr	r3, [sp, #80]	; 0x50
   321e4:	mla	r2, ip, r7, r2
   321e8:	add	r2, r3, r2
   321ec:	cmp	r2, r8
   321f0:	bls	3220c <GetDataSlab+0x228c>
   321f4:	ldr	r2, [sp, #52]	; 0x34
   321f8:	add	r4, r8, r5, lsl #1
   321fc:	mla	r2, ip, r7, r2
   32200:	add	r2, r3, r2
   32204:	cmp	r2, r4
   32208:	bcc	322e8 <GetDataSlab+0x2368>
   3220c:	ldr	r0, [sp, #40]	; 0x28
   32210:	cmp	r0, #0
   32214:	beq	3228c <GetDataSlab+0x230c>
   32218:	mov	r2, lr
   3221c:	ldr	r4, [sp, #36]	; 0x24
   32220:	ldr	lr, [sp, #28]
   32224:	mov	r0, #0
   32228:	mov	r9, r8
   3222c:	ldr	r6, [r2]
   32230:	ldr	ip, [r2, #4]
   32234:	add	r3, sp, #448	; 0x1c0
   32238:	subs	r4, r4, #2
   3223c:	add	r0, r0, #16
   32240:	str	r6, [sp, #448]	; 0x1c0
   32244:	str	ip, [sp, #452]	; 0x1c4
   32248:	add	r6, r9, #16
   3224c:	vld1.8	{d16}, [r3 :64]
   32250:	mov	r3, #32
   32254:	vmovl.s8	q8, d16
   32258:	vst1.16	{d16-d17}, [r9], r3
   3225c:	add	r3, r2, sl
   32260:	ldr	r7, [r2, lr]!
   32264:	str	r7, [sp, #456]	; 0x1c8
   32268:	ldr	r2, [r2, #4]
   3226c:	str	r2, [sp, #460]	; 0x1cc
   32270:	add	r2, sp, #456	; 0x1c8
   32274:	vld1.8	{d16}, [r2 :64]
   32278:	mov	r2, r3
   3227c:	vmovl.s8	q8, d16
   32280:	vst1.16	{d16-d17}, [r6]
   32284:	bne	3222c <GetDataSlab+0x22ac>
   32288:	b	32290 <GetDataSlab+0x2310>
   3228c:	mov	r0, #0
   32290:	ldr	r2, [sp, #48]	; 0x30
   32294:	ldr	lr, [sp, #92]	; 0x5c
   32298:	ldr	r7, [sp, #76]	; 0x4c
   3229c:	cmp	r2, #0
   322a0:	beq	322d4 <GetDataSlab+0x2354>
   322a4:	ldr	r2, [sp, #68]	; 0x44
   322a8:	mov	r3, lr
   322ac:	mul	r2, r0, r2
   322b0:	add	r0, r8, r0, lsl #1
   322b4:	ldr	r2, [r3, r2]!
   322b8:	str	r2, [sp, #440]	; 0x1b8
   322bc:	ldr	r2, [r3, #4]
   322c0:	str	r2, [sp, #444]	; 0x1bc
   322c4:	add	r2, sp, #440	; 0x1b8
   322c8:	vld1.8	{d16}, [r2 :64]
   322cc:	vmovl.s8	q8, d16
   322d0:	vst1.16	{d16-d17}, [r0]
   322d4:	ldr	r0, [sp, #44]	; 0x2c
   322d8:	ldr	ip, [sp, #72]	; 0x48
   322dc:	add	r8, r8, r0, lsl #1
   322e0:	cmp	r5, r0
   322e4:	beq	32198 <GetDataSlab+0x2218>
   322e8:	ldr	r2, [sp, #60]	; 0x3c
   322ec:	cmp	r2, #0
   322f0:	bne	322fc <GetDataSlab+0x237c>
   322f4:	mov	r4, r0
   322f8:	b	32310 <GetDataSlab+0x2390>
   322fc:	ldr	r2, [sp, #68]	; 0x44
   32300:	orr	r4, r0, #1
   32304:	mla	r2, r0, r2, lr
   32308:	ldrsb	r2, [r2]
   3230c:	strh	r2, [r8], #2
   32310:	orr	r0, r0, #1
   32314:	cmp	r5, r0
   32318:	beq	32198 <GetDataSlab+0x2218>
   3231c:	ldr	r6, [sp, #68]	; 0x44
   32320:	add	r3, r4, #1
   32324:	sub	r2, r5, r4
   32328:	mul	r0, r6, r4
   3232c:	mul	r4, r6, r3
   32330:	mov	r6, lr
   32334:	add	r3, r6, r0
   32338:	subs	r2, r2, #2
   3233c:	ldrsb	r3, [r3]
   32340:	strh	r3, [r8]
   32344:	add	r3, r6, r4
   32348:	add	r6, r6, r1
   3234c:	ldrsb	r3, [r3]
   32350:	strh	r3, [r8, #2]
   32354:	add	r8, r8, #4
   32358:	bne	32334 <GetDataSlab+0x23b4>
   3235c:	b	32198 <GetDataSlab+0x2218>
   32360:	ldr	r0, [sp, #76]	; 0x4c
   32364:	sub	r2, r0, #1
   32368:	mov	r0, #1
   3236c:	cmp	r2, #11
   32370:	bhi	5f70c <GetDataSlab+0x2f78c>
   32374:	add	r7, pc, #12
   32378:	ldr	r4, [sp, #80]	; 0x50
   3237c:	ldr	r6, [sp, #84]	; 0x54
   32380:	ldr	r2, [r7, r2, lsl #2]
   32384:	add	pc, r7, r2
   32388:	.word	0x00000030
   3238c:	.word	0x000297a8
   32390:	.word	0x00029840
   32394:	.word	0x000298e4
   32398:	.word	0x00029988
   3239c:	.word	0x00029a28
   323a0:	.word	0x00029ac8
   323a4:	.word	0x0002d388
   323a8:	.word	0x00029b74
   323ac:	.word	0x0002d388
   323b0:	.word	0x0002d388
   323b4:	.word	0x00029c20
   323b8:	cmp	r6, #1
   323bc:	blt	5f88c <GetDataSlab+0x2f90c>
   323c0:	ldr	r0, [sp, #60]	; 0x3c
   323c4:	ldr	r1, [sp, #56]	; 0x38
   323c8:	mov	r7, #0
   323cc:	mla	r0, r1, r8, r0
   323d0:	add	r2, r4, r0
   323d4:	cmp	r5, #1
   323d8:	bge	32408 <GetDataSlab+0x2488>
   323dc:	ldr	r1, [sp, #84]	; 0x54
   323e0:	ldr	r0, [sp, #72]	; 0x48
   323e4:	mla	r2, r8, r0, r2
   323e8:	add	r7, r7, #1
   323ec:	str	r0, [sp, #72]	; 0x48
   323f0:	mov	r0, #0
   323f4:	str	r1, [sp, #84]	; 0x54
   323f8:	cmp	r7, r1
   323fc:	bge	56c20 <GetDataSlab+0x26ca0>
   32400:	cmp	r5, #1
   32404:	blt	323dc <GetDataSlab+0x245c>
   32408:	ldr	r4, [sp, #88]	; 0x58
   3240c:	mov	r0, #0
   32410:	mov	r6, #0
   32414:	ldr	r5, [sl]
   32418:	add	r0, r0, #4
   3241c:	mla	r5, r5, r6, r2
   32420:	ldrsb	r5, [r5]
   32424:	str	r5, [r4, r6, lsl #2]
   32428:	add	r6, r6, #1
   3242c:	ldr	r5, [r9]
   32430:	cmp	r6, r5
   32434:	blt	32414 <GetDataSlab+0x2494>
   32438:	add	r4, r4, r0
   3243c:	ldr	r1, [r3]
   32440:	ldr	r8, [lr]
   32444:	ldr	r0, [ip]
   32448:	str	r4, [sp, #88]	; 0x58
   3244c:	b	323e4 <GetDataSlab+0x2464>
   32450:	ldr	r0, [sp, #76]	; 0x4c
   32454:	sub	r2, r0, #1
   32458:	mov	r0, #1
   3245c:	cmp	r2, #11
   32460:	bhi	5f7cc <GetDataSlab+0x2f84c>
   32464:	add	r7, pc, #12
   32468:	ldr	r4, [sp, #80]	; 0x50
   3246c:	ldr	r6, [sp, #84]	; 0x54
   32470:	ldr	r2, [r7, r2, lsl #2]
   32474:	add	pc, r7, r2
   32478:	.word	0x00000030
   3247c:	.word	0x00029bbc
   32480:	.word	0x00029c54
   32484:	.word	0x00029cf8
   32488:	.word	0x00029d9c
   3248c:	.word	0x00029e3c
   32490:	.word	0x00029edc
   32494:	.word	0x0002d358
   32498:	.word	0x00029f88
   3249c:	.word	0x0002d358
   324a0:	.word	0x0002d358
   324a4:	.word	0x0002a034
   324a8:	cmp	r6, #1
   324ac:	blt	5f88c <GetDataSlab+0x2f90c>
   324b0:	ldr	r0, [sp, #60]	; 0x3c
   324b4:	ldr	r1, [sp, #56]	; 0x38
   324b8:	mov	r7, #0
   324bc:	mla	r0, r1, r8, r0
   324c0:	add	r2, r4, r0
   324c4:	cmp	r5, #1
   324c8:	bge	324f8 <GetDataSlab+0x2578>
   324cc:	ldr	r1, [sp, #84]	; 0x54
   324d0:	ldr	r0, [sp, #72]	; 0x48
   324d4:	mla	r2, r8, r0, r2
   324d8:	add	r7, r7, #1
   324dc:	str	r0, [sp, #72]	; 0x48
   324e0:	mov	r0, #0
   324e4:	str	r1, [sp, #84]	; 0x54
   324e8:	cmp	r7, r1
   324ec:	bge	56c20 <GetDataSlab+0x26ca0>
   324f0:	cmp	r5, #1
   324f4:	blt	324cc <GetDataSlab+0x254c>
   324f8:	ldr	r4, [sp, #88]	; 0x58
   324fc:	mov	r0, #0
   32500:	mov	r6, #0
   32504:	ldr	r5, [sl]
   32508:	add	r0, r0, #4
   3250c:	mla	r5, r5, r6, r2
   32510:	ldrsb	r5, [r5]
   32514:	str	r5, [r4, r6, lsl #2]
   32518:	add	r6, r6, #1
   3251c:	ldr	r5, [r9]
   32520:	cmp	r6, r5
   32524:	blt	32504 <GetDataSlab+0x2584>
   32528:	add	r4, r4, r0
   3252c:	ldr	r1, [r3]
   32530:	ldr	r8, [lr]
   32534:	ldr	r0, [ip]
   32538:	str	r4, [sp, #88]	; 0x58
   3253c:	b	324d4 <GetDataSlab+0x2554>
   32540:	ldr	r3, [sp, #76]	; 0x4c
   32544:	mov	r0, #1
   32548:	sub	r1, r3, #1
   3254c:	cmp	r1, #11
   32550:	bhi	5ec90 <GetDataSlab+0x2ed10>
   32554:	add	r2, pc, #12
   32558:	ldr	r4, [sp, #80]	; 0x50
   3255c:	ldr	lr, [sp, #84]	; 0x54
   32560:	ldr	r1, [r2, r1, lsl #2]
   32564:	add	pc, r2, r1
   32568:	.word	0x00000030
   3256c:	.word	0x00029fd0
   32570:	.word	0x0002a268
   32574:	.word	0x0002a4c4
   32578:	.word	0x0002a71c
   3257c:	.word	0x0002a98c
   32580:	.word	0x0002abf8
   32584:	.word	0x0002c728
   32588:	.word	0x0002ad14
   3258c:	.word	0x0002c728
   32590:	.word	0x0002c728
   32594:	.word	0x0002ae44
   32598:	cmp	lr, #1
   3259c:	blt	5f88c <GetDataSlab+0x2f90c>
   325a0:	ldr	r3, [sp, #60]	; 0x3c
   325a4:	ldr	r7, [sp, #56]	; 0x38
   325a8:	mov	r2, r8
   325ac:	mov	r1, #1
   325b0:	mov	ip, #0
   325b4:	mla	r0, r7, r8, r3
   325b8:	str	r0, [sp, #52]	; 0x34
   325bc:	add	r8, r4, r0
   325c0:	sub	r0, r5, #2
   325c4:	add	r1, r1, r0, lsr #1
   325c8:	lsr	r0, r0, #1
   325cc:	str	r0, [sp, #56]	; 0x38
   325d0:	and	r6, r1, #1
   325d4:	sub	r1, r1, r6
   325d8:	str	r6, [sp, #48]	; 0x30
   325dc:	str	r1, [sp, #44]	; 0x2c
   325e0:	add	r1, r5, r3
   325e4:	mla	r1, r7, r2, r1
   325e8:	str	r1, [sp, #60]	; 0x3c
   325ec:	ldr	r1, [sp, #72]	; 0x48
   325f0:	mul	r1, r1, r2
   325f4:	ldr	r2, [sp, #68]	; 0x44
   325f8:	str	r1, [sp, #92]	; 0x5c
   325fc:	subs	r1, r5, #1
   32600:	mov	r3, r2
   32604:	sub	r2, r2, #1
   32608:	movwne	r1, #1
   3260c:	clz	r2, r2
   32610:	lsr	r2, r2, #5
   32614:	and	r1, r1, r2
   32618:	and	r2, r5, #1
   3261c:	str	r1, [sp, #76]	; 0x4c
   32620:	lsl	r1, r3, #2
   32624:	str	r2, [sp, #72]	; 0x48
   32628:	bic	r2, r5, #1
   3262c:	str	r1, [sp, #40]	; 0x28
   32630:	lsl	r1, r3, #1
   32634:	str	r2, [sp, #64]	; 0x40
   32638:	ldr	lr, [sp, #40]	; 0x28
   3263c:	cmp	r5, #1
   32640:	bge	32668 <GetDataSlab+0x26e8>
   32644:	ldr	r9, [sp, #92]	; 0x5c
   32648:	ldr	r2, [sp, #84]	; 0x54
   3264c:	add	ip, ip, #1
   32650:	add	r8, r8, r9
   32654:	mov	r0, #0
   32658:	cmp	ip, r2
   3265c:	beq	56c20 <GetDataSlab+0x26ca0>
   32660:	cmp	r5, #1
   32664:	blt	32644 <GetDataSlab+0x26c4>
   32668:	ldr	r2, [sp, #76]	; 0x4c
   3266c:	ldr	r4, [sp, #80]	; 0x50
   32670:	ldr	r9, [sp, #92]	; 0x5c
   32674:	mov	r0, #0
   32678:	cmp	r2, #0
   3267c:	beq	32790 <GetDataSlab+0x2810>
   32680:	ldr	r2, [sp, #60]	; 0x3c
   32684:	ldr	r3, [sp, #88]	; 0x58
   32688:	mla	r2, r9, ip, r2
   3268c:	add	r2, r4, r2
   32690:	cmp	r2, r3
   32694:	bls	326b0 <GetDataSlab+0x2730>
   32698:	ldr	r2, [sp, #52]	; 0x34
   3269c:	add	r6, r3, r5, lsl #3
   326a0:	mla	r2, r9, ip, r2
   326a4:	add	r2, r4, r2
   326a8:	cmp	r2, r6
   326ac:	bcc	32790 <GetDataSlab+0x2810>
   326b0:	ldr	r0, [sp, #56]	; 0x38
   326b4:	cmp	r0, #0
   326b8:	beq	32730 <GetDataSlab+0x27b0>
   326bc:	ldr	r6, [sp, #88]	; 0x58
   326c0:	ldr	r7, [sp, #44]	; 0x2c
   326c4:	mov	r0, #0
   326c8:	mov	r2, r8
   326cc:	add	sl, sp, #272	; 0x110
   326d0:	ldrh	r4, [r2]
   326d4:	add	r3, sp, #276	; 0x114
   326d8:	add	r9, r2, r1
   326dc:	add	r2, r2, lr
   326e0:	subs	r7, r7, #2
   326e4:	add	r0, r0, #4
   326e8:	strh	r4, [sl, #4]
   326ec:	add	r4, r6, #16
   326f0:	vld1.16	{d16[0]}, [r3 :16]
   326f4:	mov	r3, #32
   326f8:	vmovl.s8	q8, d16
   326fc:	vmovl.s16	q8, d16
   32700:	vmovl.s32	q8, d16
   32704:	vst1.64	{d16-d17}, [r6], r3
   32708:	ldrh	r3, [r9]
   3270c:	strh	r3, [sl, #8]
   32710:	add	r3, sp, #280	; 0x118
   32714:	vld1.16	{d16[0]}, [r3 :16]
   32718:	vmovl.s8	q8, d16
   3271c:	vmovl.s16	q8, d16
   32720:	vmovl.s32	q8, d16
   32724:	vst1.64	{d16-d17}, [r4]
   32728:	bne	326d0 <GetDataSlab+0x2750>
   3272c:	b	32734 <GetDataSlab+0x27b4>
   32730:	mov	r0, #0
   32734:	ldr	r2, [sp, #48]	; 0x30
   32738:	cmp	r2, #0
   3273c:	beq	32770 <GetDataSlab+0x27f0>
   32740:	ldr	r2, [sp, #68]	; 0x44
   32744:	add	r3, sp, #272	; 0x110
   32748:	mla	r2, r0, r2, r8
   3274c:	ldrh	r2, [r2]
   32750:	strh	r2, [r3]
   32754:	vld1.16	{d16[0]}, [r3 :16]
   32758:	ldr	r2, [sp, #88]	; 0x58
   3275c:	add	r0, r2, r0, lsl #3
   32760:	vmovl.s8	q8, d16
   32764:	vmovl.s16	q8, d16
   32768:	vmovl.s32	q8, d16
   3276c:	vst1.64	{d16-d17}, [r0]
   32770:	ldr	r2, [sp, #64]	; 0x40
   32774:	ldr	r0, [sp, #88]	; 0x58
   32778:	ldr	r9, [sp, #92]	; 0x5c
   3277c:	add	r0, r0, r2, lsl #3
   32780:	cmp	r5, r2
   32784:	str	r0, [sp, #88]	; 0x58
   32788:	mov	r0, r2
   3278c:	beq	32648 <GetDataSlab+0x26c8>
   32790:	ldr	r2, [sp, #72]	; 0x48
   32794:	cmp	r2, #0
   32798:	bne	327a4 <GetDataSlab+0x2824>
   3279c:	mov	r6, r0
   327a0:	b	327c8 <GetDataSlab+0x2848>
   327a4:	ldr	r2, [sp, #68]	; 0x44
   327a8:	ldr	r4, [sp, #88]	; 0x58
   327ac:	orr	r6, r0, #1
   327b0:	mla	r2, r0, r2, r8
   327b4:	ldrsb	r2, [r2]
   327b8:	asr	r3, r2, #31
   327bc:	strd	r2, [r4]
   327c0:	add	r4, r4, #8
   327c4:	str	r4, [sp, #88]	; 0x58
   327c8:	orr	r0, r0, #1
   327cc:	cmp	r5, r0
   327d0:	beq	32648 <GetDataSlab+0x26c8>
   327d4:	ldr	r4, [sp, #68]	; 0x44
   327d8:	add	r3, r6, #1
   327dc:	sub	r2, r5, r6
   327e0:	mov	r7, r8
   327e4:	mul	r0, r4, r6
   327e8:	mul	r6, r4, r3
   327ec:	ldr	r4, [sp, #88]	; 0x58
   327f0:	add	r3, r7, r0
   327f4:	subs	r2, r2, #2
   327f8:	ldrsb	r3, [r3]
   327fc:	str	r3, [r4]
   32800:	asr	r3, r3, #31
   32804:	str	r3, [r4, #4]
   32808:	add	r3, r7, r6
   3280c:	add	r7, r7, r1
   32810:	ldrsb	r3, [r3]
   32814:	str	r3, [r4, #8]
   32818:	asr	r3, r3, #31
   3281c:	str	r3, [r4, #12]
   32820:	add	r4, r4, #16
   32824:	bne	327f0 <GetDataSlab+0x2870>
   32828:	str	r4, [sp, #88]	; 0x58
   3282c:	b	32648 <GetDataSlab+0x26c8>
   32830:	ldr	r3, [sp, #76]	; 0x4c
   32834:	mov	r0, #1
   32838:	sub	r1, r3, #1
   3283c:	cmp	r1, #11
   32840:	bhi	5ef04 <GetDataSlab+0x2ef84>
   32844:	add	r2, pc, #12
   32848:	ldr	r4, [sp, #80]	; 0x50
   3284c:	ldr	lr, [sp, #84]	; 0x54
   32850:	ldr	r1, [r2, r1, lsl #2]
   32854:	add	pc, r2, r1
   32858:	.word	0x00000030
   3285c:	.word	0x0002ada0
   32860:	.word	0x0002b038
   32864:	.word	0x0002b294
   32868:	.word	0x0002b4ec
   3286c:	.word	0x0002b75c
   32870:	.word	0x0002b9c8
   32874:	.word	0x0002c6ac
   32878:	.word	0x0002bae4
   3287c:	.word	0x0002c6ac
   32880:	.word	0x0002c6ac
   32884:	.word	0x0002bc14
   32888:	cmp	lr, #1
   3288c:	blt	5f88c <GetDataSlab+0x2f90c>
   32890:	ldr	r3, [sp, #60]	; 0x3c
   32894:	ldr	r7, [sp, #56]	; 0x38
   32898:	mov	r2, r8
   3289c:	mov	r1, #1
   328a0:	mov	sl, #0
   328a4:	mla	r0, r7, r8, r3
   328a8:	str	r0, [sp, #52]	; 0x34
   328ac:	add	r8, r4, r0
   328b0:	sub	r0, r5, #2
   328b4:	add	r1, r1, r0, lsr #1
   328b8:	lsr	r0, r0, #1
   328bc:	str	r0, [sp, #56]	; 0x38
   328c0:	and	r6, r1, #1
   328c4:	sub	r1, r1, r6
   328c8:	str	r6, [sp, #48]	; 0x30
   328cc:	str	r1, [sp, #44]	; 0x2c
   328d0:	add	r1, r5, r3
   328d4:	mla	r1, r7, r2, r1
   328d8:	str	r1, [sp, #60]	; 0x3c
   328dc:	ldr	r1, [sp, #72]	; 0x48
   328e0:	mul	r1, r1, r2
   328e4:	ldr	r2, [sp, #68]	; 0x44
   328e8:	str	r1, [sp, #92]	; 0x5c
   328ec:	subs	r1, r5, #1
   328f0:	mov	r3, r2
   328f4:	sub	r2, r2, #1
   328f8:	movwne	r1, #1
   328fc:	clz	r2, r2
   32900:	lsr	r2, r2, #5
   32904:	and	r1, r1, r2
   32908:	and	r2, r5, #1
   3290c:	str	r1, [sp, #76]	; 0x4c
   32910:	lsl	r1, r3, #2
   32914:	str	r2, [sp, #72]	; 0x48
   32918:	bic	r2, r5, #1
   3291c:	str	r1, [sp, #40]	; 0x28
   32920:	lsl	r1, r3, #1
   32924:	str	r2, [sp, #64]	; 0x40
   32928:	ldr	lr, [sp, #40]	; 0x28
   3292c:	cmp	r5, #1
   32930:	bge	32958 <GetDataSlab+0x29d8>
   32934:	ldr	ip, [sp, #92]	; 0x5c
   32938:	ldr	r2, [sp, #84]	; 0x54
   3293c:	add	sl, sl, #1
   32940:	add	r8, r8, ip
   32944:	mov	r0, #0
   32948:	cmp	sl, r2
   3294c:	beq	56c20 <GetDataSlab+0x26ca0>
   32950:	cmp	r5, #1
   32954:	blt	32934 <GetDataSlab+0x29b4>
   32958:	ldr	r2, [sp, #76]	; 0x4c
   3295c:	ldr	r7, [sp, #80]	; 0x50
   32960:	ldr	ip, [sp, #92]	; 0x5c
   32964:	mov	r0, #0
   32968:	cmp	r2, #0
   3296c:	beq	32a84 <GetDataSlab+0x2b04>
   32970:	ldr	r2, [sp, #60]	; 0x3c
   32974:	ldr	r3, [sp, #88]	; 0x58
   32978:	mla	r2, ip, sl, r2
   3297c:	add	r2, r7, r2
   32980:	cmp	r2, r3
   32984:	bls	329a0 <GetDataSlab+0x2a20>
   32988:	ldr	r2, [sp, #52]	; 0x34
   3298c:	mla	r2, ip, sl, r2
   32990:	add	r2, r7, r2
   32994:	add	r7, r3, r5, lsl #3
   32998:	cmp	r2, r7
   3299c:	bcc	32a84 <GetDataSlab+0x2b04>
   329a0:	ldr	r0, [sp, #56]	; 0x38
   329a4:	cmp	r0, #0
   329a8:	beq	32a20 <GetDataSlab+0x2aa0>
   329ac:	ldr	ip, [sp, #88]	; 0x58
   329b0:	ldr	r7, [sp, #44]	; 0x2c
   329b4:	mov	r0, #0
   329b8:	mov	r2, r8
   329bc:	add	r6, sp, #272	; 0x110
   329c0:	ldrh	r4, [r2]
   329c4:	add	r3, sp, #372	; 0x174
   329c8:	add	r9, r2, r1
   329cc:	add	r2, r2, lr
   329d0:	subs	r7, r7, #2
   329d4:	add	r0, r0, #4
   329d8:	strh	r4, [r6, #100]	; 0x64
   329dc:	add	r4, ip, #16
   329e0:	vld1.16	{d16[0]}, [r3 :16]
   329e4:	mov	r3, #32
   329e8:	vmovl.s8	q8, d16
   329ec:	vmovl.s16	q8, d16
   329f0:	vmovl.s32	q8, d16
   329f4:	vst1.64	{d16-d17}, [ip], r3
   329f8:	ldrh	r3, [r9]
   329fc:	strh	r3, [r6, #104]	; 0x68
   32a00:	add	r3, sp, #376	; 0x178
   32a04:	vld1.16	{d16[0]}, [r3 :16]
   32a08:	vmovl.s8	q8, d16
   32a0c:	vmovl.s16	q8, d16
   32a10:	vmovl.s32	q8, d16
   32a14:	vst1.64	{d16-d17}, [r4]
   32a18:	bne	329c0 <GetDataSlab+0x2a40>
   32a1c:	b	32a24 <GetDataSlab+0x2aa4>
   32a20:	mov	r0, #0
   32a24:	ldr	r2, [sp, #48]	; 0x30
   32a28:	ldr	ip, [sp, #92]	; 0x5c
   32a2c:	cmp	r2, #0
   32a30:	beq	32a68 <GetDataSlab+0x2ae8>
   32a34:	ldr	r2, [sp, #68]	; 0x44
   32a38:	add	r3, sp, #272	; 0x110
   32a3c:	mla	r2, r0, r2, r8
   32a40:	ldrh	r2, [r2]
   32a44:	strh	r2, [r3, #96]	; 0x60
   32a48:	add	r2, sp, #368	; 0x170
   32a4c:	vld1.16	{d16[0]}, [r2 :16]
   32a50:	ldr	r2, [sp, #88]	; 0x58
   32a54:	add	r0, r2, r0, lsl #3
   32a58:	vmovl.s8	q8, d16
   32a5c:	vmovl.s16	q8, d16
   32a60:	vmovl.s32	q8, d16
   32a64:	vst1.64	{d16-d17}, [r0]
   32a68:	ldr	r2, [sp, #64]	; 0x40
   32a6c:	ldr	r0, [sp, #88]	; 0x58
   32a70:	add	r0, r0, r2, lsl #3
   32a74:	cmp	r5, r2
   32a78:	str	r0, [sp, #88]	; 0x58
   32a7c:	mov	r0, r2
   32a80:	beq	32938 <GetDataSlab+0x29b8>
   32a84:	ldr	r2, [sp, #72]	; 0x48
   32a88:	cmp	r2, #0
   32a8c:	bne	32a98 <GetDataSlab+0x2b18>
   32a90:	mov	r7, r0
   32a94:	b	32abc <GetDataSlab+0x2b3c>
   32a98:	ldr	r2, [sp, #68]	; 0x44
   32a9c:	ldr	r6, [sp, #88]	; 0x58
   32aa0:	orr	r7, r0, #1
   32aa4:	mla	r2, r0, r2, r8
   32aa8:	ldrsb	r2, [r2]
   32aac:	asr	r3, r2, #31
   32ab0:	strd	r2, [r6]
   32ab4:	add	r6, r6, #8
   32ab8:	str	r6, [sp, #88]	; 0x58
   32abc:	orr	r0, r0, #1
   32ac0:	cmp	r5, r0
   32ac4:	beq	32938 <GetDataSlab+0x29b8>
   32ac8:	ldr	r6, [sp, #68]	; 0x44
   32acc:	add	r3, r7, #1
   32ad0:	sub	r2, r5, r7
   32ad4:	mov	r4, r8
   32ad8:	mul	r0, r6, r7
   32adc:	mul	r7, r6, r3
   32ae0:	ldr	r6, [sp, #88]	; 0x58
   32ae4:	add	r3, r4, r0
   32ae8:	subs	r2, r2, #2
   32aec:	ldrsb	r3, [r3]
   32af0:	str	r3, [r6]
   32af4:	asr	r3, r3, #31
   32af8:	str	r3, [r6, #4]
   32afc:	add	r3, r4, r7
   32b00:	add	r4, r4, r1
   32b04:	ldrsb	r3, [r3]
   32b08:	str	r3, [r6, #8]
   32b0c:	asr	r3, r3, #31
   32b10:	str	r3, [r6, #12]
   32b14:	add	r6, r6, #16
   32b18:	bne	32ae4 <GetDataSlab+0x2b64>
   32b1c:	str	r6, [sp, #88]	; 0x58
   32b20:	b	32938 <GetDataSlab+0x29b8>
   32b24:	ldr	sl, [sl]
   32b28:	mov	r5, #0
   32b2c:	sub	r2, fp, #96	; 0x60
   32b30:	sub	r0, sl, #1
   32b34:	str	r0, [fp, #-96]	; 0xffffffa0
   32b38:	ldr	r0, [fp, #8]
   32b3c:	ldr	r0, [r0]
   32b40:	str	r0, [sp, #40]	; 0x28
   32b44:	str	r0, [fp, #-176]	; 0xffffff50
   32b48:	ldr	r0, [fp, #20]
   32b4c:	ldr	r1, [r0]
   32b50:	ldr	r0, [fp, #24]
   32b54:	cmp	r0, #2
   32b58:	str	r1, [sp, #72]	; 0x48
   32b5c:	str	r1, [sp, #76]	; 0x4c
   32b60:	blt	3ca4c <GetDataSlab+0xcacc>
   32b64:	ldr	r0, [fp, #8]
   32b68:	ldr	r4, [sp, #40]	; 0x28
   32b6c:	mov	r7, #1
   32b70:	mov	r8, #0
   32b74:	mvn	r6, #15
   32b78:	mov	r5, #0
   32b7c:	sub	r1, r0, #4
   32b80:	sub	lr, r0, #12
   32b84:	ldr	r0, [sp, #72]	; 0x48
   32b88:	mov	r9, r4
   32b8c:	str	r0, [sp, #76]	; 0x4c
   32b90:	b	32be0 <GetDataSlab+0x2c60>
   32b94:	sub	ip, fp, #176	; 0xb0
   32b98:	sub	r2, fp, #96	; 0x60
   32b9c:	str	r4, [ip, r7, lsl #2]
   32ba0:	ldr	r3, [sp, #76]	; 0x4c
   32ba4:	add	lr, lr, #4
   32ba8:	str	r0, [r2, r7, lsl #2]
   32bac:	ldr	r0, [fp, #12]
   32bb0:	ldr	r0, [r0, r7, lsl #2]
   32bb4:	mla	r5, r0, r9, r5
   32bb8:	ldr	r0, [fp, #20]
   32bbc:	mov	r9, r4
   32bc0:	ldr	r4, [sp, #84]	; 0x54
   32bc4:	ldr	r0, [r0, r7, lsl #2]
   32bc8:	add	r7, r7, #1
   32bcc:	mul	r3, r0, r3
   32bd0:	ldr	r0, [fp, #24]
   32bd4:	str	r3, [sp, #76]	; 0x4c
   32bd8:	cmp	r7, r0
   32bdc:	beq	3ca4c <GetDataSlab+0xcacc>
   32be0:	ldr	r0, [fp, #16]
   32be4:	add	r8, r8, #1
   32be8:	cmp	r8, #4
   32bec:	ldr	r0, [r0, r7, lsl #2]
   32bf0:	str	r4, [ip, r7, lsl #2]
   32bf4:	sub	r0, r0, #1
   32bf8:	str	r0, [r2, r7, lsl #2]
   32bfc:	ldr	r2, [fp, #8]
   32c00:	ldr	r2, [r2, r7, lsl #2]
   32c04:	str	r2, [sp, #84]	; 0x54
   32c08:	bcs	32c14 <GetDataSlab+0x2c94>
   32c0c:	mov	r3, r7
   32c10:	b	32ca4 <GetDataSlab+0x2d24>
   32c14:	vmov.i32	q9, #1	; 0x00000001
   32c18:	vmov.i32	q10, #1	; 0x00000001
   32c1c:	vmov.32	d23[1], r2
   32c20:	vmov.i32	q8, #1	; 0x00000001
   32c24:	bic	ip, r7, #3
   32c28:	vmov.32	d18[0], r4
   32c2c:	vmov.32	d20[0], r0
   32c30:	bic	r0, r8, #3
   32c34:	str	r0, [sp, #68]	; 0x44
   32c38:	sub	r3, r7, r0
   32c3c:	mov	r0, lr
   32c40:	vorr	d16, d18, d18
   32c44:	vmov.i32	q9, #1	; 0x00000001
   32c48:	vorr	d18, d20, d20
   32c4c:	vld1.32	{d20-d21}, [r0], r6
   32c50:	subs	ip, ip, #4
   32c54:	vrev64.32	q12, q10
   32c58:	vext.8	q12, q12, q12, #8
   32c5c:	vext.8	q11, q11, q12, #12
   32c60:	vmul.i32	q9, q9, q12
   32c64:	vmul.i32	q8, q11, q8
   32c68:	vorr	q11, q12, q12
   32c6c:	bne	32c4c <GetDataSlab+0x2ccc>
   32c70:	vext.8	q11, q9, q8, #8
   32c74:	vext.8	q12, q8, q8, #8
   32c78:	ldr	r2, [sp, #68]	; 0x44
   32c7c:	vmul.i32	q0, q9, q11
   32c80:	vmul.i32	q1, q8, q12
   32c84:	cmp	r8, r2
   32c88:	vmul.i32	q8, q0, d0[1]
   32c8c:	vmul.i32	q9, q1, d2[1]
   32c90:	vmov.32	r0, d16[0]
   32c94:	vmov.32	r4, d18[0]
   32c98:	beq	32b94 <GetDataSlab+0x2c14>
   32c9c:	vmov.32	r2, d20[0]
   32ca0:	sub	ip, fp, #176	; 0xb0
   32ca4:	mul	r4, r2, r4
   32ca8:	ldr	r2, [r1, r3, lsl #2]
   32cac:	subs	r3, r3, #1
   32cb0:	mul	r0, r0, r2
   32cb4:	bne	32ca4 <GetDataSlab+0x2d24>
   32cb8:	b	32b98 <GetDataSlab+0x2c18>
   32cbc:	ldr	r0, [sl]
   32cc0:	mov	r1, #0
   32cc4:	sub	r6, fp, #96	; 0x60
   32cc8:	str	r0, [sp, #68]	; 0x44
   32ccc:	sub	r0, r0, #1
   32cd0:	str	r0, [fp, #-96]	; 0xffffffa0
   32cd4:	ldr	r0, [fp, #8]
   32cd8:	ldr	r0, [r0]
   32cdc:	str	r0, [sp, #60]	; 0x3c
   32ce0:	str	r0, [fp, #-176]	; 0xffffff50
   32ce4:	ldr	r0, [fp, #20]
   32ce8:	ldr	r2, [r0]
   32cec:	ldr	r0, [fp, #24]
   32cf0:	cmp	r0, #2
   32cf4:	str	r2, [sp, #72]	; 0x48
   32cf8:	str	r2, [sp, #76]	; 0x4c
   32cfc:	blt	3cdd0 <GetDataSlab+0xce50>
   32d00:	ldr	r0, [fp, #8]
   32d04:	ldr	r3, [sp, #60]	; 0x3c
   32d08:	ldr	r2, [sp, #72]	; 0x48
   32d0c:	mov	r5, #1
   32d10:	mov	r8, #0
   32d14:	mvn	r4, #15
   32d18:	mov	r1, r0
   32d1c:	sub	r0, r0, #4
   32d20:	mov	r9, r3
   32d24:	str	r2, [sp, #76]	; 0x4c
   32d28:	sub	sl, r1, #12
   32d2c:	mov	r1, #0
   32d30:	b	32d80 <GetDataSlab+0x2e00>
   32d34:	sub	ip, fp, #176	; 0xb0
   32d38:	sub	r6, fp, #96	; 0x60
   32d3c:	str	r3, [ip, r5, lsl #2]
   32d40:	ldr	r7, [sp, #76]	; 0x4c
   32d44:	add	sl, sl, #4
   32d48:	str	r2, [r6, r5, lsl #2]
   32d4c:	ldr	r2, [fp, #12]
   32d50:	ldr	r2, [r2, r5, lsl #2]
   32d54:	mla	r1, r2, r9, r1
   32d58:	ldr	r2, [fp, #20]
   32d5c:	mov	r9, r3
   32d60:	mov	r3, lr
   32d64:	ldr	r2, [r2, r5, lsl #2]
   32d68:	add	r5, r5, #1
   32d6c:	mul	r7, r2, r7
   32d70:	ldr	r2, [fp, #24]
   32d74:	str	r7, [sp, #76]	; 0x4c
   32d78:	cmp	r5, r2
   32d7c:	beq	3cdd0 <GetDataSlab+0xce50>
   32d80:	ldr	r2, [fp, #16]
   32d84:	ldr	r7, [fp, #8]
   32d88:	add	r8, r8, #1
   32d8c:	cmp	r8, #4
   32d90:	ldr	r2, [r2, r5, lsl #2]
   32d94:	str	r3, [ip, r5, lsl #2]
   32d98:	sub	r2, r2, #1
   32d9c:	str	r2, [r6, r5, lsl #2]
   32da0:	ldr	lr, [r7, r5, lsl #2]
   32da4:	bcs	32db4 <GetDataSlab+0x2e34>
   32da8:	mov	r7, lr
   32dac:	mov	r6, r5
   32db0:	b	32e3c <GetDataSlab+0x2ebc>
   32db4:	vmov.i32	q9, #1	; 0x00000001
   32db8:	vmov.i32	q10, #1	; 0x00000001
   32dbc:	vmov.32	d23[1], lr
   32dc0:	vmov.i32	q8, #1	; 0x00000001
   32dc4:	bic	r7, r8, #3
   32dc8:	bic	ip, r5, #3
   32dcc:	sub	r6, r5, r7
   32dd0:	vmov.32	d18[0], r3
   32dd4:	vmov.32	d20[0], r2
   32dd8:	mov	r2, sl
   32ddc:	vorr	d16, d18, d18
   32de0:	vmov.i32	q9, #1	; 0x00000001
   32de4:	vorr	d18, d20, d20
   32de8:	vld1.32	{d20-d21}, [r2], r4
   32dec:	subs	ip, ip, #4
   32df0:	vrev64.32	q12, q10
   32df4:	vext.8	q12, q12, q12, #8
   32df8:	vext.8	q11, q11, q12, #12
   32dfc:	vmul.i32	q9, q9, q12
   32e00:	vmul.i32	q8, q11, q8
   32e04:	vorr	q11, q12, q12
   32e08:	bne	32de8 <GetDataSlab+0x2e68>
   32e0c:	vext.8	q11, q9, q8, #8
   32e10:	vext.8	q12, q8, q8, #8
   32e14:	cmp	r8, r7
   32e18:	vmul.i32	q0, q9, q11
   32e1c:	vmul.i32	q1, q8, q12
   32e20:	vmul.i32	q8, q0, d0[1]
   32e24:	vmul.i32	q9, q1, d2[1]
   32e28:	vmov.32	r2, d16[0]
   32e2c:	vmov.32	r3, d18[0]
   32e30:	beq	32d34 <GetDataSlab+0x2db4>
   32e34:	vmov.32	r7, d20[0]
   32e38:	sub	ip, fp, #176	; 0xb0
   32e3c:	mul	r3, r7, r3
   32e40:	ldr	r7, [r0, r6, lsl #2]
   32e44:	subs	r6, r6, #1
   32e48:	mul	r2, r2, r7
   32e4c:	bne	32e3c <GetDataSlab+0x2ebc>
   32e50:	b	32d38 <GetDataSlab+0x2db8>
   32e54:	ldr	r0, [sl]
   32e58:	mov	r1, #0
   32e5c:	sub	r6, fp, #96	; 0x60
   32e60:	str	r0, [sp, #68]	; 0x44
   32e64:	sub	r0, r0, #1
   32e68:	str	r0, [fp, #-96]	; 0xffffffa0
   32e6c:	ldr	r0, [fp, #8]
   32e70:	ldr	r0, [r0]
   32e74:	str	r0, [sp, #60]	; 0x3c
   32e78:	str	r0, [fp, #-176]	; 0xffffff50
   32e7c:	ldr	r0, [fp, #20]
   32e80:	ldr	r2, [r0]
   32e84:	ldr	r0, [fp, #24]
   32e88:	cmp	r0, #2
   32e8c:	str	r2, [sp, #72]	; 0x48
   32e90:	str	r2, [sp, #76]	; 0x4c
   32e94:	blt	3d098 <GetDataSlab+0xd118>
   32e98:	ldr	r0, [fp, #8]
   32e9c:	ldr	r3, [sp, #60]	; 0x3c
   32ea0:	ldr	r2, [sp, #72]	; 0x48
   32ea4:	mov	r5, #1
   32ea8:	mov	r8, #0
   32eac:	mvn	r4, #15
   32eb0:	mov	r1, r0
   32eb4:	sub	r0, r0, #4
   32eb8:	mov	r9, r3
   32ebc:	str	r2, [sp, #76]	; 0x4c
   32ec0:	sub	sl, r1, #12
   32ec4:	mov	r1, #0
   32ec8:	b	32f18 <GetDataSlab+0x2f98>
   32ecc:	sub	ip, fp, #176	; 0xb0
   32ed0:	sub	r6, fp, #96	; 0x60
   32ed4:	str	r3, [ip, r5, lsl #2]
   32ed8:	ldr	r7, [sp, #76]	; 0x4c
   32edc:	add	sl, sl, #4
   32ee0:	str	r2, [r6, r5, lsl #2]
   32ee4:	ldr	r2, [fp, #12]
   32ee8:	ldr	r2, [r2, r5, lsl #2]
   32eec:	mla	r1, r2, r9, r1
   32ef0:	ldr	r2, [fp, #20]
   32ef4:	mov	r9, r3
   32ef8:	mov	r3, lr
   32efc:	ldr	r2, [r2, r5, lsl #2]
   32f00:	add	r5, r5, #1
   32f04:	mul	r7, r2, r7
   32f08:	ldr	r2, [fp, #24]
   32f0c:	str	r7, [sp, #76]	; 0x4c
   32f10:	cmp	r5, r2
   32f14:	beq	3d098 <GetDataSlab+0xd118>
   32f18:	ldr	r2, [fp, #16]
   32f1c:	ldr	r7, [fp, #8]
   32f20:	add	r8, r8, #1
   32f24:	cmp	r8, #4
   32f28:	ldr	r2, [r2, r5, lsl #2]
   32f2c:	str	r3, [ip, r5, lsl #2]
   32f30:	sub	r2, r2, #1
   32f34:	str	r2, [r6, r5, lsl #2]
   32f38:	ldr	lr, [r7, r5, lsl #2]
   32f3c:	bcs	32f4c <GetDataSlab+0x2fcc>
   32f40:	mov	r7, lr
   32f44:	mov	r6, r5
   32f48:	b	32fd4 <GetDataSlab+0x3054>
   32f4c:	vmov.i32	q9, #1	; 0x00000001
   32f50:	vmov.i32	q10, #1	; 0x00000001
   32f54:	vmov.32	d23[1], lr
   32f58:	vmov.i32	q8, #1	; 0x00000001
   32f5c:	bic	r7, r8, #3
   32f60:	bic	ip, r5, #3
   32f64:	sub	r6, r5, r7
   32f68:	vmov.32	d18[0], r3
   32f6c:	vmov.32	d20[0], r2
   32f70:	mov	r2, sl
   32f74:	vorr	d16, d18, d18
   32f78:	vmov.i32	q9, #1	; 0x00000001
   32f7c:	vorr	d18, d20, d20
   32f80:	vld1.32	{d20-d21}, [r2], r4
   32f84:	subs	ip, ip, #4
   32f88:	vrev64.32	q12, q10
   32f8c:	vext.8	q12, q12, q12, #8
   32f90:	vext.8	q11, q11, q12, #12
   32f94:	vmul.i32	q9, q9, q12
   32f98:	vmul.i32	q8, q11, q8
   32f9c:	vorr	q11, q12, q12
   32fa0:	bne	32f80 <GetDataSlab+0x3000>
   32fa4:	vext.8	q11, q9, q8, #8
   32fa8:	vext.8	q12, q8, q8, #8
   32fac:	cmp	r8, r7
   32fb0:	vmul.i32	q0, q9, q11
   32fb4:	vmul.i32	q1, q8, q12
   32fb8:	vmul.i32	q8, q0, d0[1]
   32fbc:	vmul.i32	q9, q1, d2[1]
   32fc0:	vmov.32	r2, d16[0]
   32fc4:	vmov.32	r3, d18[0]
   32fc8:	beq	32ecc <GetDataSlab+0x2f4c>
   32fcc:	vmov.32	r7, d20[0]
   32fd0:	sub	ip, fp, #176	; 0xb0
   32fd4:	mul	r3, r7, r3
   32fd8:	ldr	r7, [r0, r6, lsl #2]
   32fdc:	subs	r6, r6, #1
   32fe0:	mul	r2, r2, r7
   32fe4:	bne	32fd4 <GetDataSlab+0x3054>
   32fe8:	b	32ed0 <GetDataSlab+0x2f50>
   32fec:	ldr	r0, [sl]
   32ff0:	mov	r3, #0
   32ff4:	sub	lr, fp, #96	; 0x60
   32ff8:	str	r0, [sp, #56]	; 0x38
   32ffc:	sub	r0, r0, #1
   33000:	str	r0, [fp, #-96]	; 0xffffffa0
   33004:	ldr	r0, [fp, #8]
   33008:	ldr	r0, [r0]
   3300c:	str	r0, [sp, #52]	; 0x34
   33010:	str	r0, [fp, #-176]	; 0xffffff50
   33014:	ldr	r0, [fp, #20]
   33018:	ldr	r1, [r0]
   3301c:	ldr	r0, [fp, #24]
   33020:	cmp	r0, #2
   33024:	str	r1, [sp, #68]	; 0x44
   33028:	str	r1, [sp, #76]	; 0x4c
   3302c:	blt	3d360 <GetDataSlab+0xd3e0>
   33030:	ldr	r0, [fp, #8]
   33034:	ldr	r5, [sp, #52]	; 0x34
   33038:	mov	r7, #1
   3303c:	mvn	r9, #15
   33040:	mov	r3, #0
   33044:	mov	r1, r0
   33048:	sub	r0, r0, #4
   3304c:	mov	r4, r5
   33050:	sub	sl, r1, #12
   33054:	mov	r1, #0
   33058:	str	r1, [sp, #84]	; 0x54
   3305c:	ldr	r1, [sp, #68]	; 0x44
   33060:	str	r1, [sp, #76]	; 0x4c
   33064:	b	330c4 <GetDataSlab+0x3144>
   33068:	ldr	r8, [sp, #88]	; 0x58
   3306c:	sub	r1, fp, #176	; 0xb0
   33070:	sub	lr, fp, #96	; 0x60
   33074:	add	sl, sl, #4
   33078:	mov	r2, r1
   3307c:	str	r5, [r1, r7, lsl #2]
   33080:	ldr	r1, [fp, #12]
   33084:	str	r4, [lr, r7, lsl #2]
   33088:	ldr	r4, [sp, #72]	; 0x48
   3308c:	ldr	r1, [r1, r7, lsl #2]
   33090:	mla	r3, r1, r4, r3
   33094:	ldr	r1, [fp, #20]
   33098:	ldr	r4, [sp, #76]	; 0x4c
   3309c:	ldr	r1, [r1, r7, lsl #2]
   330a0:	add	r7, r7, #1
   330a4:	mul	r4, r1, r4
   330a8:	ldr	r1, [fp, #24]
   330ac:	str	r4, [sp, #76]	; 0x4c
   330b0:	mov	r4, r5
   330b4:	mov	r5, ip
   330b8:	mov	ip, r2
   330bc:	cmp	r7, r1
   330c0:	beq	3d360 <GetDataSlab+0xd3e0>
   330c4:	ldr	r1, [fp, #16]
   330c8:	str	r4, [sp, #72]	; 0x48
   330cc:	ldr	r6, [sp, #84]	; 0x54
   330d0:	ldr	r1, [r1, r7, lsl #2]
   330d4:	str	r5, [ip, r7, lsl #2]
   330d8:	add	r6, r6, #1
   330dc:	cmp	r6, #4
   330e0:	str	r6, [sp, #84]	; 0x54
   330e4:	sub	r4, r1, #1
   330e8:	ldr	r1, [fp, #8]
   330ec:	str	r4, [lr, r7, lsl #2]
   330f0:	ldr	ip, [r1, r7, lsl #2]
   330f4:	bcs	33104 <GetDataSlab+0x3184>
   330f8:	mov	r1, ip
   330fc:	mov	r2, r7
   33100:	b	3318c <GetDataSlab+0x320c>
   33104:	vmov.i32	q9, #1	; 0x00000001
   33108:	vmov.i32	q10, #1	; 0x00000001
   3310c:	vmov.32	d23[1], ip
   33110:	vmov.i32	q8, #1	; 0x00000001
   33114:	bic	r1, r6, #3
   33118:	bic	r8, r7, #3
   3311c:	sub	r2, r7, r1
   33120:	vmov.32	d18[0], r5
   33124:	vmov.32	d20[0], r4
   33128:	mov	r4, sl
   3312c:	vorr	d16, d18, d18
   33130:	vmov.i32	q9, #1	; 0x00000001
   33134:	vorr	d18, d20, d20
   33138:	vld1.32	{d20-d21}, [r4], r9
   3313c:	subs	r8, r8, #4
   33140:	vrev64.32	q12, q10
   33144:	vext.8	q12, q12, q12, #8
   33148:	vext.8	q11, q11, q12, #12
   3314c:	vmul.i32	q9, q9, q12
   33150:	vmul.i32	q8, q11, q8
   33154:	vorr	q11, q12, q12
   33158:	bne	33138 <GetDataSlab+0x31b8>
   3315c:	vext.8	q11, q9, q8, #8
   33160:	vext.8	q12, q8, q8, #8
   33164:	cmp	r6, r1
   33168:	vmul.i32	q0, q9, q11
   3316c:	vmul.i32	q1, q8, q12
   33170:	vmul.i32	q8, q0, d0[1]
   33174:	vmul.i32	q9, q1, d2[1]
   33178:	vmov.32	r4, d16[0]
   3317c:	vmov.32	r5, d18[0]
   33180:	beq	33068 <GetDataSlab+0x30e8>
   33184:	vmov.32	r1, d20[0]
   33188:	ldr	r8, [sp, #88]	; 0x58
   3318c:	mul	r5, r1, r5
   33190:	ldr	r1, [r0, r2, lsl #2]
   33194:	subs	r2, r2, #1
   33198:	mul	r4, r4, r1
   3319c:	bne	3318c <GetDataSlab+0x320c>
   331a0:	b	3306c <GetDataSlab+0x30ec>
   331a4:	ldr	r0, [sl]
   331a8:	mov	r3, #0
   331ac:	sub	lr, fp, #96	; 0x60
   331b0:	str	r0, [sp, #56]	; 0x38
   331b4:	sub	r0, r0, #1
   331b8:	str	r0, [fp, #-96]	; 0xffffffa0
   331bc:	ldr	r0, [fp, #8]
   331c0:	ldr	r0, [r0]
   331c4:	str	r0, [sp, #52]	; 0x34
   331c8:	str	r0, [fp, #-176]	; 0xffffff50
   331cc:	ldr	r0, [fp, #20]
   331d0:	ldr	r1, [r0]
   331d4:	ldr	r0, [fp, #24]
   331d8:	cmp	r0, #2
   331dc:	str	r1, [sp, #68]	; 0x44
   331e0:	str	r1, [sp, #76]	; 0x4c
   331e4:	blt	3d61c <GetDataSlab+0xd69c>
   331e8:	ldr	r0, [fp, #8]
   331ec:	ldr	r5, [sp, #52]	; 0x34
   331f0:	mov	r7, #1
   331f4:	mvn	r9, #15
   331f8:	mov	r3, #0
   331fc:	mov	r1, r0
   33200:	sub	r0, r0, #4
   33204:	mov	r4, r5
   33208:	sub	sl, r1, #12
   3320c:	mov	r1, #0
   33210:	str	r1, [sp, #84]	; 0x54
   33214:	ldr	r1, [sp, #68]	; 0x44
   33218:	str	r1, [sp, #76]	; 0x4c
   3321c:	b	3327c <GetDataSlab+0x32fc>
   33220:	ldr	r8, [sp, #88]	; 0x58
   33224:	sub	r1, fp, #176	; 0xb0
   33228:	sub	lr, fp, #96	; 0x60
   3322c:	add	sl, sl, #4
   33230:	mov	r2, r1
   33234:	str	r5, [r1, r7, lsl #2]
   33238:	ldr	r1, [fp, #12]
   3323c:	str	r4, [lr, r7, lsl #2]
   33240:	ldr	r4, [sp, #72]	; 0x48
   33244:	ldr	r1, [r1, r7, lsl #2]
   33248:	mla	r3, r1, r4, r3
   3324c:	ldr	r1, [fp, #20]
   33250:	ldr	r4, [sp, #76]	; 0x4c
   33254:	ldr	r1, [r1, r7, lsl #2]
   33258:	add	r7, r7, #1
   3325c:	mul	r4, r1, r4
   33260:	ldr	r1, [fp, #24]
   33264:	str	r4, [sp, #76]	; 0x4c
   33268:	mov	r4, r5
   3326c:	mov	r5, ip
   33270:	mov	ip, r2
   33274:	cmp	r7, r1
   33278:	beq	3d61c <GetDataSlab+0xd69c>
   3327c:	ldr	r1, [fp, #16]
   33280:	str	r4, [sp, #72]	; 0x48
   33284:	ldr	r6, [sp, #84]	; 0x54
   33288:	ldr	r1, [r1, r7, lsl #2]
   3328c:	str	r5, [ip, r7, lsl #2]
   33290:	add	r6, r6, #1
   33294:	cmp	r6, #4
   33298:	str	r6, [sp, #84]	; 0x54
   3329c:	sub	r4, r1, #1
   332a0:	ldr	r1, [fp, #8]
   332a4:	str	r4, [lr, r7, lsl #2]
   332a8:	ldr	ip, [r1, r7, lsl #2]
   332ac:	bcs	332bc <GetDataSlab+0x333c>
   332b0:	mov	r1, ip
   332b4:	mov	r2, r7
   332b8:	b	33344 <GetDataSlab+0x33c4>
   332bc:	vmov.i32	q9, #1	; 0x00000001
   332c0:	vmov.i32	q10, #1	; 0x00000001
   332c4:	vmov.32	d23[1], ip
   332c8:	vmov.i32	q8, #1	; 0x00000001
   332cc:	bic	r1, r6, #3
   332d0:	bic	r8, r7, #3
   332d4:	sub	r2, r7, r1
   332d8:	vmov.32	d18[0], r5
   332dc:	vmov.32	d20[0], r4
   332e0:	mov	r4, sl
   332e4:	vorr	d16, d18, d18
   332e8:	vmov.i32	q9, #1	; 0x00000001
   332ec:	vorr	d18, d20, d20
   332f0:	vld1.32	{d20-d21}, [r4], r9
   332f4:	subs	r8, r8, #4
   332f8:	vrev64.32	q12, q10
   332fc:	vext.8	q12, q12, q12, #8
   33300:	vext.8	q11, q11, q12, #12
   33304:	vmul.i32	q9, q9, q12
   33308:	vmul.i32	q8, q11, q8
   3330c:	vorr	q11, q12, q12
   33310:	bne	332f0 <GetDataSlab+0x3370>
   33314:	vext.8	q11, q9, q8, #8
   33318:	vext.8	q12, q8, q8, #8
   3331c:	cmp	r6, r1
   33320:	vmul.i32	q0, q9, q11
   33324:	vmul.i32	q1, q8, q12
   33328:	vmul.i32	q8, q0, d0[1]
   3332c:	vmul.i32	q9, q1, d2[1]
   33330:	vmov.32	r4, d16[0]
   33334:	vmov.32	r5, d18[0]
   33338:	beq	33220 <GetDataSlab+0x32a0>
   3333c:	vmov.32	r1, d20[0]
   33340:	ldr	r8, [sp, #88]	; 0x58
   33344:	mul	r5, r1, r5
   33348:	ldr	r1, [r0, r2, lsl #2]
   3334c:	subs	r2, r2, #1
   33350:	mul	r4, r4, r1
   33354:	bne	33344 <GetDataSlab+0x33c4>
   33358:	b	33224 <GetDataSlab+0x32a4>
   3335c:	ldr	r0, [sl]
   33360:	mov	r1, #0
   33364:	sub	lr, fp, #96	; 0x60
   33368:	str	r0, [sp, #40]	; 0x28
   3336c:	sub	r0, r0, #1
   33370:	str	r0, [fp, #-96]	; 0xffffffa0
   33374:	ldr	r0, [fp, #8]
   33378:	ldr	r0, [r0]
   3337c:	str	r0, [sp, #60]	; 0x3c
   33380:	str	r0, [fp, #-176]	; 0xffffff50
   33384:	ldr	r0, [fp, #20]
   33388:	ldr	r2, [r0]
   3338c:	ldr	r0, [fp, #24]
   33390:	cmp	r0, #2
   33394:	str	r2, [sp, #64]	; 0x40
   33398:	str	r2, [sp, #76]	; 0x4c
   3339c:	blt	3d8d8 <GetDataSlab+0xd958>
   333a0:	ldr	r0, [fp, #8]
   333a4:	ldr	r3, [sp, #60]	; 0x3c
   333a8:	ldr	r2, [sp, #64]	; 0x40
   333ac:	mov	r6, #1
   333b0:	mov	r9, #0
   333b4:	mvn	r5, #15
   333b8:	mov	r1, r0
   333bc:	sub	r0, r0, #4
   333c0:	mov	r8, r3
   333c4:	str	r2, [sp, #76]	; 0x4c
   333c8:	sub	sl, r1, #12
   333cc:	mov	r1, #0
   333d0:	b	33428 <GetDataSlab+0x34a8>
   333d4:	sub	r2, fp, #176	; 0xb0
   333d8:	sub	lr, fp, #96	; 0x60
   333dc:	add	sl, sl, #4
   333e0:	mov	r7, r2
   333e4:	str	r3, [r2, r6, lsl #2]
   333e8:	ldr	r2, [fp, #12]
   333ec:	str	r4, [lr, r6, lsl #2]
   333f0:	ldr	r4, [sp, #76]	; 0x4c
   333f4:	ldr	r2, [r2, r6, lsl #2]
   333f8:	mla	r1, r2, r8, r1
   333fc:	ldr	r2, [fp, #20]
   33400:	mov	r8, r3
   33404:	mov	r3, ip
   33408:	mov	ip, r7
   3340c:	ldr	r2, [r2, r6, lsl #2]
   33410:	add	r6, r6, #1
   33414:	mul	r4, r2, r4
   33418:	ldr	r2, [fp, #24]
   3341c:	str	r4, [sp, #76]	; 0x4c
   33420:	cmp	r6, r2
   33424:	beq	3d8d8 <GetDataSlab+0xd958>
   33428:	ldr	r2, [fp, #16]
   3342c:	add	r9, r9, #1
   33430:	cmp	r9, #4
   33434:	ldr	r2, [r2, r6, lsl #2]
   33438:	str	r3, [ip, r6, lsl #2]
   3343c:	sub	r4, r2, #1
   33440:	ldr	r2, [fp, #8]
   33444:	str	r4, [lr, r6, lsl #2]
   33448:	ldr	ip, [r2, r6, lsl #2]
   3344c:	bcs	3345c <GetDataSlab+0x34dc>
   33450:	mov	r2, ip
   33454:	mov	r7, r6
   33458:	b	334e8 <GetDataSlab+0x3568>
   3345c:	vmov.i32	q9, #1	; 0x00000001
   33460:	vmov.i32	q10, #1	; 0x00000001
   33464:	vmov.32	d23[1], ip
   33468:	vmov.i32	q8, #1	; 0x00000001
   3346c:	mov	lr, r9
   33470:	bic	r9, r9, #3
   33474:	bic	r2, r6, #3
   33478:	sub	r7, r6, r9
   3347c:	vmov.32	d18[0], r3
   33480:	vmov.32	d20[0], r4
   33484:	mov	r3, sl
   33488:	vorr	d16, d18, d18
   3348c:	vmov.i32	q9, #1	; 0x00000001
   33490:	vorr	d18, d20, d20
   33494:	vld1.32	{d20-d21}, [r3], r5
   33498:	subs	r2, r2, #4
   3349c:	vrev64.32	q12, q10
   334a0:	vext.8	q12, q12, q12, #8
   334a4:	vext.8	q11, q11, q12, #12
   334a8:	vmul.i32	q9, q9, q12
   334ac:	vmul.i32	q8, q11, q8
   334b0:	vorr	q11, q12, q12
   334b4:	bne	33494 <GetDataSlab+0x3514>
   334b8:	vext.8	q11, q9, q8, #8
   334bc:	vext.8	q12, q8, q8, #8
   334c0:	cmp	lr, r9
   334c4:	mov	r9, lr
   334c8:	vmul.i32	q0, q9, q11
   334cc:	vmul.i32	q1, q8, q12
   334d0:	vmul.i32	q8, q0, d0[1]
   334d4:	vmul.i32	q9, q1, d2[1]
   334d8:	vmov.32	r4, d16[0]
   334dc:	vmov.32	r3, d18[0]
   334e0:	beq	333d4 <GetDataSlab+0x3454>
   334e4:	vmov.32	r2, d20[0]
   334e8:	mul	r3, r2, r3
   334ec:	ldr	r2, [r0, r7, lsl #2]
   334f0:	subs	r7, r7, #1
   334f4:	mul	r4, r4, r2
   334f8:	bne	334e8 <GetDataSlab+0x3568>
   334fc:	b	333d4 <GetDataSlab+0x3454>
   33500:	ldr	r0, [sl]
   33504:	mov	r1, #0
   33508:	sub	lr, fp, #96	; 0x60
   3350c:	str	r0, [sp, #44]	; 0x2c
   33510:	sub	r0, r0, #1
   33514:	str	r0, [fp, #-96]	; 0xffffffa0
   33518:	ldr	r0, [fp, #8]
   3351c:	ldr	r0, [r0]
   33520:	str	r0, [sp, #40]	; 0x28
   33524:	str	r0, [fp, #-176]	; 0xffffff50
   33528:	ldr	r0, [fp, #20]
   3352c:	ldr	r2, [r0]
   33530:	ldr	r0, [fp, #24]
   33534:	cmp	r0, #2
   33538:	str	r2, [sp, #72]	; 0x48
   3353c:	str	r2, [sp, #76]	; 0x4c
   33540:	blt	3db70 <GetDataSlab+0xdbf0>
   33544:	ldr	r0, [fp, #8]
   33548:	ldr	r3, [sp, #40]	; 0x28
   3354c:	ldr	r2, [sp, #72]	; 0x48
   33550:	mov	r6, #1
   33554:	mov	r9, #0
   33558:	mvn	r5, #15
   3355c:	mov	r1, r0
   33560:	sub	r0, r0, #4
   33564:	mov	r8, r3
   33568:	str	r2, [sp, #76]	; 0x4c
   3356c:	sub	sl, r1, #12
   33570:	mov	r1, #0
   33574:	b	335cc <GetDataSlab+0x364c>
   33578:	sub	r2, fp, #176	; 0xb0
   3357c:	sub	lr, fp, #96	; 0x60
   33580:	add	sl, sl, #4
   33584:	mov	r7, r2
   33588:	str	r3, [r2, r6, lsl #2]
   3358c:	ldr	r2, [fp, #12]
   33590:	str	r4, [lr, r6, lsl #2]
   33594:	ldr	r4, [sp, #76]	; 0x4c
   33598:	ldr	r2, [r2, r6, lsl #2]
   3359c:	mla	r1, r2, r8, r1
   335a0:	ldr	r2, [fp, #20]
   335a4:	mov	r8, r3
   335a8:	mov	r3, ip
   335ac:	mov	ip, r7
   335b0:	ldr	r2, [r2, r6, lsl #2]
   335b4:	add	r6, r6, #1
   335b8:	mul	r4, r2, r4
   335bc:	ldr	r2, [fp, #24]
   335c0:	str	r4, [sp, #76]	; 0x4c
   335c4:	cmp	r6, r2
   335c8:	beq	3db70 <GetDataSlab+0xdbf0>
   335cc:	ldr	r2, [fp, #16]
   335d0:	add	r9, r9, #1
   335d4:	cmp	r9, #4
   335d8:	ldr	r2, [r2, r6, lsl #2]
   335dc:	str	r3, [ip, r6, lsl #2]
   335e0:	sub	r4, r2, #1
   335e4:	ldr	r2, [fp, #8]
   335e8:	str	r4, [lr, r6, lsl #2]
   335ec:	ldr	ip, [r2, r6, lsl #2]
   335f0:	bcs	33600 <GetDataSlab+0x3680>
   335f4:	mov	r2, ip
   335f8:	mov	r7, r6
   335fc:	b	3368c <GetDataSlab+0x370c>
   33600:	vmov.i32	q9, #1	; 0x00000001
   33604:	vmov.i32	q10, #1	; 0x00000001
   33608:	vmov.32	d23[1], ip
   3360c:	vmov.i32	q8, #1	; 0x00000001
   33610:	mov	lr, r9
   33614:	bic	r9, r9, #3
   33618:	bic	r2, r6, #3
   3361c:	sub	r7, r6, r9
   33620:	vmov.32	d18[0], r3
   33624:	vmov.32	d20[0], r4
   33628:	mov	r3, sl
   3362c:	vorr	d16, d18, d18
   33630:	vmov.i32	q9, #1	; 0x00000001
   33634:	vorr	d18, d20, d20
   33638:	vld1.32	{d20-d21}, [r3], r5
   3363c:	subs	r2, r2, #4
   33640:	vrev64.32	q12, q10
   33644:	vext.8	q12, q12, q12, #8
   33648:	vext.8	q11, q11, q12, #12
   3364c:	vmul.i32	q9, q9, q12
   33650:	vmul.i32	q8, q11, q8
   33654:	vorr	q11, q12, q12
   33658:	bne	33638 <GetDataSlab+0x36b8>
   3365c:	vext.8	q11, q9, q8, #8
   33660:	vext.8	q12, q8, q8, #8
   33664:	cmp	lr, r9
   33668:	mov	r9, lr
   3366c:	vmul.i32	q0, q9, q11
   33670:	vmul.i32	q1, q8, q12
   33674:	vmul.i32	q8, q0, d0[1]
   33678:	vmul.i32	q9, q1, d2[1]
   3367c:	vmov.32	r4, d16[0]
   33680:	vmov.32	r3, d18[0]
   33684:	beq	33578 <GetDataSlab+0x35f8>
   33688:	vmov.32	r2, d20[0]
   3368c:	mul	r3, r2, r3
   33690:	ldr	r2, [r0, r7, lsl #2]
   33694:	subs	r7, r7, #1
   33698:	mul	r4, r4, r2
   3369c:	bne	3368c <GetDataSlab+0x370c>
   336a0:	b	33578 <GetDataSlab+0x35f8>
   336a4:	ldr	r0, [sl]
   336a8:	mov	r7, #0
   336ac:	sub	lr, fp, #96	; 0x60
   336b0:	str	r0, [sp, #20]
   336b4:	sub	r0, r0, #1
   336b8:	str	r0, [fp, #-96]	; 0xffffffa0
   336bc:	ldr	r0, [fp, #8]
   336c0:	ldr	r0, [r0]
   336c4:	str	r0, [sp, #16]
   336c8:	str	r0, [fp, #-176]	; 0xffffff50
   336cc:	ldr	r0, [fp, #20]
   336d0:	ldr	r1, [r0]
   336d4:	ldr	r0, [fp, #24]
   336d8:	cmp	r0, #2
   336dc:	str	r1, [sp, #52]	; 0x34
   336e0:	str	r1, [sp, #60]	; 0x3c
   336e4:	blt	3de6c <GetDataSlab+0xdeec>
   336e8:	ldr	r0, [fp, #8]
   336ec:	ldr	r4, [sp, #16]
   336f0:	mov	r3, #1
   336f4:	mov	r9, #0
   336f8:	mvn	r6, #15
   336fc:	mov	r7, #0
   33700:	mov	r1, r0
   33704:	sub	r0, r0, #4
   33708:	mov	r8, r4
   3370c:	sub	sl, r1, #12
   33710:	ldr	r1, [sp, #52]	; 0x34
   33714:	str	r1, [sp, #60]	; 0x3c
   33718:	b	33770 <GetDataSlab+0x37f0>
   3371c:	sub	r1, fp, #176	; 0xb0
   33720:	sub	lr, fp, #96	; 0x60
   33724:	add	sl, sl, #4
   33728:	mov	r2, r1
   3372c:	str	r4, [r1, r3, lsl #2]
   33730:	ldr	r1, [fp, #12]
   33734:	str	r5, [lr, r3, lsl #2]
   33738:	ldr	r5, [sp, #60]	; 0x3c
   3373c:	ldr	r1, [r1, r3, lsl #2]
   33740:	mla	r7, r1, r8, r7
   33744:	ldr	r1, [fp, #20]
   33748:	mov	r8, r4
   3374c:	mov	r4, ip
   33750:	mov	ip, r2
   33754:	ldr	r1, [r1, r3, lsl #2]
   33758:	add	r3, r3, #1
   3375c:	mul	r5, r1, r5
   33760:	ldr	r1, [fp, #24]
   33764:	str	r5, [sp, #60]	; 0x3c
   33768:	cmp	r3, r1
   3376c:	beq	3de6c <GetDataSlab+0xdeec>
   33770:	ldr	r1, [fp, #16]
   33774:	add	r9, r9, #1
   33778:	cmp	r9, #4
   3377c:	ldr	r1, [r1, r3, lsl #2]
   33780:	str	r4, [ip, r3, lsl #2]
   33784:	sub	r5, r1, #1
   33788:	ldr	r1, [fp, #8]
   3378c:	str	r5, [lr, r3, lsl #2]
   33790:	ldr	ip, [r1, r3, lsl #2]
   33794:	bcs	337a4 <GetDataSlab+0x3824>
   33798:	mov	r1, ip
   3379c:	mov	r2, r3
   337a0:	b	33830 <GetDataSlab+0x38b0>
   337a4:	vmov.i32	q9, #1	; 0x00000001
   337a8:	vmov.i32	q10, #1	; 0x00000001
   337ac:	vmov.32	d23[1], ip
   337b0:	vmov.i32	q8, #1	; 0x00000001
   337b4:	mov	lr, r9
   337b8:	bic	r9, r9, #3
   337bc:	bic	r1, r3, #3
   337c0:	sub	r2, r3, r9
   337c4:	vmov.32	d18[0], r4
   337c8:	vmov.32	d20[0], r5
   337cc:	mov	r4, sl
   337d0:	vorr	d16, d18, d18
   337d4:	vmov.i32	q9, #1	; 0x00000001
   337d8:	vorr	d18, d20, d20
   337dc:	vld1.32	{d20-d21}, [r4], r6
   337e0:	subs	r1, r1, #4
   337e4:	vrev64.32	q12, q10
   337e8:	vext.8	q12, q12, q12, #8
   337ec:	vext.8	q11, q11, q12, #12
   337f0:	vmul.i32	q9, q9, q12
   337f4:	vmul.i32	q8, q11, q8
   337f8:	vorr	q11, q12, q12
   337fc:	bne	337dc <GetDataSlab+0x385c>
   33800:	vext.8	q11, q9, q8, #8
   33804:	vext.8	q12, q8, q8, #8
   33808:	cmp	lr, r9
   3380c:	mov	r9, lr
   33810:	vmul.i32	q0, q9, q11
   33814:	vmul.i32	q1, q8, q12
   33818:	vmul.i32	q8, q0, d0[1]
   3381c:	vmul.i32	q9, q1, d2[1]
   33820:	vmov.32	r5, d16[0]
   33824:	vmov.32	r4, d18[0]
   33828:	beq	3371c <GetDataSlab+0x379c>
   3382c:	vmov.32	r1, d20[0]
   33830:	mul	r4, r1, r4
   33834:	ldr	r1, [r0, r2, lsl #2]
   33838:	subs	r2, r2, #1
   3383c:	mul	r5, r5, r1
   33840:	bne	33830 <GetDataSlab+0x38b0>
   33844:	b	3371c <GetDataSlab+0x379c>
   33848:	ldr	sl, [sl]
   3384c:	mov	r3, #0
   33850:	sub	lr, fp, #96	; 0x60
   33854:	sub	r0, sl, #1
   33858:	str	r0, [fp, #-96]	; 0xffffffa0
   3385c:	ldr	r0, [fp, #8]
   33860:	ldr	r0, [r0]
   33864:	str	r0, [sp, #40]	; 0x28
   33868:	str	r0, [fp, #-176]	; 0xffffff50
   3386c:	ldr	r0, [fp, #20]
   33870:	ldr	r1, [r0]
   33874:	ldr	r0, [fp, #24]
   33878:	cmp	r0, #2
   3387c:	str	r1, [sp, #60]	; 0x3c
   33880:	str	r1, [sp, #76]	; 0x4c
   33884:	blt	3e184 <GetDataSlab+0xe204>
   33888:	ldr	r0, [fp, #8]
   3388c:	ldr	r4, [sp, #40]	; 0x28
   33890:	mov	r2, ip
   33894:	mov	r6, #1
   33898:	mov	r9, #0
   3389c:	mvn	r5, #15
   338a0:	mov	r3, #0
   338a4:	mov	r1, r0
   338a8:	sub	r0, r0, #4
   338ac:	mov	r8, r4
   338b0:	sub	ip, r1, #12
   338b4:	ldr	r1, [sp, #60]	; 0x3c
   338b8:	str	r1, [sp, #76]	; 0x4c
   338bc:	b	3390c <GetDataSlab+0x398c>
   338c0:	ldr	r1, [fp, #12]
   338c4:	sub	r2, fp, #176	; 0xb0
   338c8:	sub	lr, fp, #96	; 0x60
   338cc:	add	ip, ip, #4
   338d0:	str	r7, [lr, r6, lsl #2]
   338d4:	str	r4, [r2, r6, lsl #2]
   338d8:	ldr	r7, [sp, #76]	; 0x4c
   338dc:	ldr	r1, [r1, r6, lsl #2]
   338e0:	mla	r3, r1, r8, r3
   338e4:	ldr	r1, [fp, #20]
   338e8:	mov	r8, r4
   338ec:	ldr	r4, [sp, #84]	; 0x54
   338f0:	ldr	r1, [r1, r6, lsl #2]
   338f4:	add	r6, r6, #1
   338f8:	mul	r7, r1, r7
   338fc:	ldr	r1, [fp, #24]
   33900:	str	r7, [sp, #76]	; 0x4c
   33904:	cmp	r6, r1
   33908:	beq	3e184 <GetDataSlab+0xe204>
   3390c:	ldr	r1, [fp, #16]
   33910:	add	r9, r9, #1
   33914:	cmp	r9, #4
   33918:	ldr	r1, [r1, r6, lsl #2]
   3391c:	str	r4, [r2, r6, lsl #2]
   33920:	sub	r7, r1, #1
   33924:	ldr	r1, [fp, #8]
   33928:	str	r7, [lr, r6, lsl #2]
   3392c:	ldr	r2, [r1, r6, lsl #2]
   33930:	str	r2, [sp, #84]	; 0x54
   33934:	bcs	33944 <GetDataSlab+0x39c4>
   33938:	mov	r1, r2
   3393c:	mov	r2, r6
   33940:	b	339d8 <GetDataSlab+0x3a58>
   33944:	vmov.i32	q9, #1	; 0x00000001
   33948:	vmov.i32	q10, #1	; 0x00000001
   3394c:	vmov.32	d23[1], r2
   33950:	mov	r1, r9
   33954:	vmov.i32	q8, #1	; 0x00000001
   33958:	bic	r9, r6, #3
   3395c:	str	r1, [sp, #72]	; 0x48
   33960:	bic	r1, r1, #3
   33964:	mov	lr, r1
   33968:	sub	r2, r6, r1
   3396c:	mov	r1, ip
   33970:	vmov.32	d18[0], r4
   33974:	vmov.32	d20[0], r7
   33978:	vorr	d16, d18, d18
   3397c:	vmov.i32	q9, #1	; 0x00000001
   33980:	vorr	d18, d20, d20
   33984:	vld1.32	{d20-d21}, [r1], r5
   33988:	subs	r9, r9, #4
   3398c:	vrev64.32	q12, q10
   33990:	vext.8	q12, q12, q12, #8
   33994:	vext.8	q11, q11, q12, #12
   33998:	vmul.i32	q9, q9, q12
   3399c:	vmul.i32	q8, q11, q8
   339a0:	vorr	q11, q12, q12
   339a4:	bne	33984 <GetDataSlab+0x3a04>
   339a8:	vext.8	q11, q9, q8, #8
   339ac:	vext.8	q12, q8, q8, #8
   339b0:	ldr	r9, [sp, #72]	; 0x48
   339b4:	vmul.i32	q0, q9, q11
   339b8:	vmul.i32	q1, q8, q12
   339bc:	cmp	r9, lr
   339c0:	vmul.i32	q8, q0, d0[1]
   339c4:	vmul.i32	q9, q1, d2[1]
   339c8:	vmov.32	r7, d16[0]
   339cc:	vmov.32	r4, d18[0]
   339d0:	beq	338c0 <GetDataSlab+0x3940>
   339d4:	vmov.32	r1, d20[0]
   339d8:	mul	r4, r1, r4
   339dc:	ldr	r1, [r0, r2, lsl #2]
   339e0:	subs	r2, r2, #1
   339e4:	mul	r7, r7, r1
   339e8:	bne	339d8 <GetDataSlab+0x3a58>
   339ec:	b	338c0 <GetDataSlab+0x3940>
   339f0:	ldr	r0, [sl]
   339f4:	mov	r1, #0
   339f8:	sub	r6, fp, #96	; 0x60
   339fc:	str	r0, [sp, #68]	; 0x44
   33a00:	sub	r0, r0, #1
   33a04:	str	r0, [fp, #-96]	; 0xffffffa0
   33a08:	ldr	r0, [fp, #8]
   33a0c:	ldr	r0, [r0]
   33a10:	str	r0, [sp, #48]	; 0x30
   33a14:	str	r0, [fp, #-176]	; 0xffffff50
   33a18:	ldr	r0, [fp, #20]
   33a1c:	ldr	r2, [r0]
   33a20:	ldr	r0, [fp, #24]
   33a24:	cmp	r0, #2
   33a28:	str	r2, [sp, #64]	; 0x40
   33a2c:	str	r2, [sp, #76]	; 0x4c
   33a30:	blt	3e4f0 <GetDataSlab+0xe570>
   33a34:	ldr	r0, [fp, #8]
   33a38:	ldr	r3, [sp, #48]	; 0x30
   33a3c:	ldr	r2, [sp, #64]	; 0x40
   33a40:	mov	r5, #1
   33a44:	mov	r9, #0
   33a48:	mvn	r4, #15
   33a4c:	mov	r1, r0
   33a50:	sub	r0, r0, #4
   33a54:	mov	sl, r3
   33a58:	str	r2, [sp, #76]	; 0x4c
   33a5c:	sub	lr, r1, #12
   33a60:	mov	r1, #0
   33a64:	b	33ab4 <GetDataSlab+0x3b34>
   33a68:	sub	ip, fp, #176	; 0xb0
   33a6c:	sub	r6, fp, #96	; 0x60
   33a70:	str	r3, [ip, r5, lsl #2]
   33a74:	ldr	r7, [sp, #76]	; 0x4c
   33a78:	add	lr, lr, #4
   33a7c:	str	r2, [r6, r5, lsl #2]
   33a80:	ldr	r2, [fp, #12]
   33a84:	ldr	r2, [r2, r5, lsl #2]
   33a88:	mla	r1, r2, sl, r1
   33a8c:	ldr	r2, [fp, #20]
   33a90:	mov	sl, r3
   33a94:	mov	r3, r8
   33a98:	ldr	r2, [r2, r5, lsl #2]
   33a9c:	add	r5, r5, #1
   33aa0:	mul	r7, r2, r7
   33aa4:	ldr	r2, [fp, #24]
   33aa8:	str	r7, [sp, #76]	; 0x4c
   33aac:	cmp	r5, r2
   33ab0:	beq	3e4f0 <GetDataSlab+0xe570>
   33ab4:	ldr	r2, [fp, #16]
   33ab8:	add	r9, r9, #1
   33abc:	cmp	r9, #4
   33ac0:	ldr	r2, [r2, r5, lsl #2]
   33ac4:	str	r3, [ip, r5, lsl #2]
   33ac8:	sub	r2, r2, #1
   33acc:	str	r2, [r6, r5, lsl #2]
   33ad0:	ldr	r6, [fp, #8]
   33ad4:	ldr	r8, [r6, r5, lsl #2]
   33ad8:	bcs	33ae8 <GetDataSlab+0x3b68>
   33adc:	mov	r7, r8
   33ae0:	mov	r6, r5
   33ae4:	b	33b70 <GetDataSlab+0x3bf0>
   33ae8:	vmov.i32	q9, #1	; 0x00000001
   33aec:	vmov.i32	q10, #1	; 0x00000001
   33af0:	vmov.32	d23[1], r8
   33af4:	vmov.i32	q8, #1	; 0x00000001
   33af8:	bic	r7, r9, #3
   33afc:	bic	ip, r5, #3
   33b00:	sub	r6, r5, r7
   33b04:	vmov.32	d18[0], r3
   33b08:	vmov.32	d20[0], r2
   33b0c:	mov	r2, lr
   33b10:	vorr	d16, d18, d18
   33b14:	vmov.i32	q9, #1	; 0x00000001
   33b18:	vorr	d18, d20, d20
   33b1c:	vld1.32	{d20-d21}, [r2], r4
   33b20:	subs	ip, ip, #4
   33b24:	vrev64.32	q12, q10
   33b28:	vext.8	q12, q12, q12, #8
   33b2c:	vext.8	q11, q11, q12, #12
   33b30:	vmul.i32	q9, q9, q12
   33b34:	vmul.i32	q8, q11, q8
   33b38:	vorr	q11, q12, q12
   33b3c:	bne	33b1c <GetDataSlab+0x3b9c>
   33b40:	vext.8	q11, q9, q8, #8
   33b44:	vext.8	q12, q8, q8, #8
   33b48:	cmp	r9, r7
   33b4c:	vmul.i32	q0, q9, q11
   33b50:	vmul.i32	q1, q8, q12
   33b54:	vmul.i32	q8, q0, d0[1]
   33b58:	vmul.i32	q9, q1, d2[1]
   33b5c:	vmov.32	r2, d16[0]
   33b60:	vmov.32	r3, d18[0]
   33b64:	beq	33a68 <GetDataSlab+0x3ae8>
   33b68:	vmov.32	r7, d20[0]
   33b6c:	sub	ip, fp, #176	; 0xb0
   33b70:	mul	r3, r7, r3
   33b74:	ldr	r7, [r0, r6, lsl #2]
   33b78:	subs	r6, r6, #1
   33b7c:	mul	r2, r2, r7
   33b80:	bne	33b70 <GetDataSlab+0x3bf0>
   33b84:	b	33a6c <GetDataSlab+0x3aec>
   33b88:	ldr	r0, [sl]
   33b8c:	mov	r1, #0
   33b90:	sub	r6, fp, #96	; 0x60
   33b94:	str	r0, [sp, #68]	; 0x44
   33b98:	sub	r0, r0, #1
   33b9c:	str	r0, [fp, #-96]	; 0xffffffa0
   33ba0:	ldr	r0, [fp, #8]
   33ba4:	ldr	r0, [r0]
   33ba8:	str	r0, [sp, #48]	; 0x30
   33bac:	str	r0, [fp, #-176]	; 0xffffff50
   33bb0:	ldr	r0, [fp, #20]
   33bb4:	ldr	r2, [r0]
   33bb8:	ldr	r0, [fp, #24]
   33bbc:	cmp	r0, #2
   33bc0:	str	r2, [sp, #64]	; 0x40
   33bc4:	str	r2, [sp, #76]	; 0x4c
   33bc8:	blt	3e79c <GetDataSlab+0xe81c>
   33bcc:	ldr	r0, [fp, #8]
   33bd0:	ldr	r3, [sp, #48]	; 0x30
   33bd4:	ldr	r2, [sp, #64]	; 0x40
   33bd8:	mov	r5, #1
   33bdc:	mov	r9, #0
   33be0:	mvn	r4, #15
   33be4:	mov	r1, r0
   33be8:	sub	r0, r0, #4
   33bec:	mov	sl, r3
   33bf0:	str	r2, [sp, #76]	; 0x4c
   33bf4:	sub	lr, r1, #12
   33bf8:	mov	r1, #0
   33bfc:	b	33c4c <GetDataSlab+0x3ccc>
   33c00:	sub	ip, fp, #176	; 0xb0
   33c04:	sub	r6, fp, #96	; 0x60
   33c08:	str	r3, [ip, r5, lsl #2]
   33c0c:	ldr	r7, [sp, #76]	; 0x4c
   33c10:	add	lr, lr, #4
   33c14:	str	r2, [r6, r5, lsl #2]
   33c18:	ldr	r2, [fp, #12]
   33c1c:	ldr	r2, [r2, r5, lsl #2]
   33c20:	mla	r1, r2, sl, r1
   33c24:	ldr	r2, [fp, #20]
   33c28:	mov	sl, r3
   33c2c:	mov	r3, r8
   33c30:	ldr	r2, [r2, r5, lsl #2]
   33c34:	add	r5, r5, #1
   33c38:	mul	r7, r2, r7
   33c3c:	ldr	r2, [fp, #24]
   33c40:	str	r7, [sp, #76]	; 0x4c
   33c44:	cmp	r5, r2
   33c48:	beq	3e79c <GetDataSlab+0xe81c>
   33c4c:	ldr	r2, [fp, #16]
   33c50:	add	r9, r9, #1
   33c54:	cmp	r9, #4
   33c58:	ldr	r2, [r2, r5, lsl #2]
   33c5c:	str	r3, [ip, r5, lsl #2]
   33c60:	sub	r2, r2, #1
   33c64:	str	r2, [r6, r5, lsl #2]
   33c68:	ldr	r6, [fp, #8]
   33c6c:	ldr	r8, [r6, r5, lsl #2]
   33c70:	bcs	33c80 <GetDataSlab+0x3d00>
   33c74:	mov	r7, r8
   33c78:	mov	r6, r5
   33c7c:	b	33d08 <GetDataSlab+0x3d88>
   33c80:	vmov.i32	q9, #1	; 0x00000001
   33c84:	vmov.i32	q10, #1	; 0x00000001
   33c88:	vmov.32	d23[1], r8
   33c8c:	vmov.i32	q8, #1	; 0x00000001
   33c90:	bic	r7, r9, #3
   33c94:	bic	ip, r5, #3
   33c98:	sub	r6, r5, r7
   33c9c:	vmov.32	d18[0], r3
   33ca0:	vmov.32	d20[0], r2
   33ca4:	mov	r2, lr
   33ca8:	vorr	d16, d18, d18
   33cac:	vmov.i32	q9, #1	; 0x00000001
   33cb0:	vorr	d18, d20, d20
   33cb4:	vld1.32	{d20-d21}, [r2], r4
   33cb8:	subs	ip, ip, #4
   33cbc:	vrev64.32	q12, q10
   33cc0:	vext.8	q12, q12, q12, #8
   33cc4:	vext.8	q11, q11, q12, #12
   33cc8:	vmul.i32	q9, q9, q12
   33ccc:	vmul.i32	q8, q11, q8
   33cd0:	vorr	q11, q12, q12
   33cd4:	bne	33cb4 <GetDataSlab+0x3d34>
   33cd8:	vext.8	q11, q9, q8, #8
   33cdc:	vext.8	q12, q8, q8, #8
   33ce0:	cmp	r9, r7
   33ce4:	vmul.i32	q0, q9, q11
   33ce8:	vmul.i32	q1, q8, q12
   33cec:	vmul.i32	q8, q0, d0[1]
   33cf0:	vmul.i32	q9, q1, d2[1]
   33cf4:	vmov.32	r2, d16[0]
   33cf8:	vmov.32	r3, d18[0]
   33cfc:	beq	33c00 <GetDataSlab+0x3c80>
   33d00:	vmov.32	r7, d20[0]
   33d04:	sub	ip, fp, #176	; 0xb0
   33d08:	mul	r3, r7, r3
   33d0c:	ldr	r7, [r0, r6, lsl #2]
   33d10:	subs	r6, r6, #1
   33d14:	mul	r2, r2, r7
   33d18:	bne	33d08 <GetDataSlab+0x3d88>
   33d1c:	b	33c04 <GetDataSlab+0x3c84>
   33d20:	ldr	r0, [sl]
   33d24:	mov	r2, ip
   33d28:	mov	r3, #0
   33d2c:	sub	ip, fp, #96	; 0x60
   33d30:	str	r0, [sp, #52]	; 0x34
   33d34:	sub	r0, r0, #1
   33d38:	str	r0, [fp, #-96]	; 0xffffffa0
   33d3c:	ldr	r0, [fp, #8]
   33d40:	ldr	r0, [r0]
   33d44:	str	r0, [sp, #56]	; 0x38
   33d48:	str	r0, [fp, #-176]	; 0xffffff50
   33d4c:	ldr	r0, [fp, #20]
   33d50:	ldr	r1, [r0]
   33d54:	ldr	r0, [fp, #24]
   33d58:	cmp	r0, #2
   33d5c:	str	r1, [sp, #72]	; 0x48
   33d60:	str	r1, [sp, #76]	; 0x4c
   33d64:	blt	3ea48 <GetDataSlab+0xeac8>
   33d68:	ldr	r0, [fp, #8]
   33d6c:	ldr	r5, [sp, #56]	; 0x38
   33d70:	mov	r7, #1
   33d74:	mov	lr, #0
   33d78:	mvn	r6, #15
   33d7c:	mov	r3, #0
   33d80:	mov	r1, r0
   33d84:	sub	r0, r0, #4
   33d88:	mov	r8, r5
   33d8c:	sub	sl, r1, #12
   33d90:	ldr	r1, [sp, #72]	; 0x48
   33d94:	str	r1, [sp, #76]	; 0x4c
   33d98:	b	33de8 <GetDataSlab+0x3e68>
   33d9c:	ldr	r1, [fp, #12]
   33da0:	sub	r2, fp, #176	; 0xb0
   33da4:	sub	ip, fp, #96	; 0x60
   33da8:	add	sl, sl, #4
   33dac:	str	r4, [ip, r7, lsl #2]
   33db0:	str	r5, [r2, r7, lsl #2]
   33db4:	ldr	r4, [sp, #76]	; 0x4c
   33db8:	ldr	r1, [r1, r7, lsl #2]
   33dbc:	mla	r3, r1, r8, r3
   33dc0:	ldr	r1, [fp, #20]
   33dc4:	mov	r8, r5
   33dc8:	ldr	r5, [sp, #84]	; 0x54
   33dcc:	ldr	r1, [r1, r7, lsl #2]
   33dd0:	add	r7, r7, #1
   33dd4:	mul	r4, r1, r4
   33dd8:	ldr	r1, [fp, #24]
   33ddc:	str	r4, [sp, #76]	; 0x4c
   33de0:	cmp	r7, r1
   33de4:	beq	3ea48 <GetDataSlab+0xeac8>
   33de8:	ldr	r1, [fp, #16]
   33dec:	add	lr, lr, #1
   33df0:	cmp	lr, #4
   33df4:	ldr	r1, [r1, r7, lsl #2]
   33df8:	str	r5, [r2, r7, lsl #2]
   33dfc:	sub	r4, r1, #1
   33e00:	ldr	r1, [fp, #8]
   33e04:	str	r4, [ip, r7, lsl #2]
   33e08:	ldr	r1, [r1, r7, lsl #2]
   33e0c:	str	r1, [sp, #84]	; 0x54
   33e10:	bcs	33e1c <GetDataSlab+0x3e9c>
   33e14:	mov	r2, r7
   33e18:	b	33ea0 <GetDataSlab+0x3f20>
   33e1c:	vmov.i32	q9, #1	; 0x00000001
   33e20:	vmov.i32	q10, #1	; 0x00000001
   33e24:	vmov.32	d23[1], r1
   33e28:	vmov.i32	q8, #1	; 0x00000001
   33e2c:	bic	r1, lr, #3
   33e30:	bic	r9, r7, #3
   33e34:	sub	r2, r7, r1
   33e38:	vmov.32	d18[0], r5
   33e3c:	vmov.32	d20[0], r4
   33e40:	mov	r4, sl
   33e44:	vorr	d16, d18, d18
   33e48:	vmov.i32	q9, #1	; 0x00000001
   33e4c:	vorr	d18, d20, d20
   33e50:	vld1.32	{d20-d21}, [r4], r6
   33e54:	subs	r9, r9, #4
   33e58:	vrev64.32	q12, q10
   33e5c:	vext.8	q12, q12, q12, #8
   33e60:	vext.8	q11, q11, q12, #12
   33e64:	vmul.i32	q9, q9, q12
   33e68:	vmul.i32	q8, q11, q8
   33e6c:	vorr	q11, q12, q12
   33e70:	bne	33e50 <GetDataSlab+0x3ed0>
   33e74:	vext.8	q11, q9, q8, #8
   33e78:	vext.8	q12, q8, q8, #8
   33e7c:	cmp	lr, r1
   33e80:	vmul.i32	q0, q9, q11
   33e84:	vmul.i32	q1, q8, q12
   33e88:	vmul.i32	q8, q0, d0[1]
   33e8c:	vmul.i32	q9, q1, d2[1]
   33e90:	vmov.32	r4, d16[0]
   33e94:	vmov.32	r5, d18[0]
   33e98:	beq	33d9c <GetDataSlab+0x3e1c>
   33e9c:	vmov.32	r1, d20[0]
   33ea0:	mul	r5, r1, r5
   33ea4:	ldr	r1, [r0, r2, lsl #2]
   33ea8:	subs	r2, r2, #1
   33eac:	mul	r4, r4, r1
   33eb0:	bne	33ea0 <GetDataSlab+0x3f20>
   33eb4:	b	33d9c <GetDataSlab+0x3e1c>
   33eb8:	ldr	r0, [sl]
   33ebc:	mov	r2, ip
   33ec0:	mov	r3, #0
   33ec4:	sub	ip, fp, #96	; 0x60
   33ec8:	str	r0, [sp, #52]	; 0x34
   33ecc:	sub	r0, r0, #1
   33ed0:	str	r0, [fp, #-96]	; 0xffffffa0
   33ed4:	ldr	r0, [fp, #8]
   33ed8:	ldr	r0, [r0]
   33edc:	str	r0, [sp, #56]	; 0x38
   33ee0:	str	r0, [fp, #-176]	; 0xffffff50
   33ee4:	ldr	r0, [fp, #20]
   33ee8:	ldr	r1, [r0]
   33eec:	ldr	r0, [fp, #24]
   33ef0:	cmp	r0, #2
   33ef4:	str	r1, [sp, #72]	; 0x48
   33ef8:	str	r1, [sp, #76]	; 0x4c
   33efc:	blt	3ecc8 <GetDataSlab+0xed48>
   33f00:	ldr	r0, [fp, #8]
   33f04:	ldr	r5, [sp, #56]	; 0x38
   33f08:	mov	r7, #1
   33f0c:	mov	lr, #0
   33f10:	mvn	r6, #15
   33f14:	mov	r3, #0
   33f18:	mov	r1, r0
   33f1c:	sub	r0, r0, #4
   33f20:	mov	r8, r5
   33f24:	sub	sl, r1, #12
   33f28:	ldr	r1, [sp, #72]	; 0x48
   33f2c:	str	r1, [sp, #76]	; 0x4c
   33f30:	b	33f80 <GetDataSlab+0x4000>
   33f34:	ldr	r1, [fp, #12]
   33f38:	sub	r2, fp, #176	; 0xb0
   33f3c:	sub	ip, fp, #96	; 0x60
   33f40:	add	sl, sl, #4
   33f44:	str	r4, [ip, r7, lsl #2]
   33f48:	str	r5, [r2, r7, lsl #2]
   33f4c:	ldr	r4, [sp, #76]	; 0x4c
   33f50:	ldr	r1, [r1, r7, lsl #2]
   33f54:	mla	r3, r1, r8, r3
   33f58:	ldr	r1, [fp, #20]
   33f5c:	mov	r8, r5
   33f60:	ldr	r5, [sp, #84]	; 0x54
   33f64:	ldr	r1, [r1, r7, lsl #2]
   33f68:	add	r7, r7, #1
   33f6c:	mul	r4, r1, r4
   33f70:	ldr	r1, [fp, #24]
   33f74:	str	r4, [sp, #76]	; 0x4c
   33f78:	cmp	r7, r1
   33f7c:	beq	3ecc8 <GetDataSlab+0xed48>
   33f80:	ldr	r1, [fp, #16]
   33f84:	add	lr, lr, #1
   33f88:	cmp	lr, #4
   33f8c:	ldr	r1, [r1, r7, lsl #2]
   33f90:	str	r5, [r2, r7, lsl #2]
   33f94:	sub	r4, r1, #1
   33f98:	ldr	r1, [fp, #8]
   33f9c:	str	r4, [ip, r7, lsl #2]
   33fa0:	ldr	r1, [r1, r7, lsl #2]
   33fa4:	str	r1, [sp, #84]	; 0x54
   33fa8:	bcs	33fb4 <GetDataSlab+0x4034>
   33fac:	mov	r2, r7
   33fb0:	b	34038 <GetDataSlab+0x40b8>
   33fb4:	vmov.i32	q9, #1	; 0x00000001
   33fb8:	vmov.i32	q10, #1	; 0x00000001
   33fbc:	vmov.32	d23[1], r1
   33fc0:	vmov.i32	q8, #1	; 0x00000001
   33fc4:	bic	r1, lr, #3
   33fc8:	bic	r9, r7, #3
   33fcc:	sub	r2, r7, r1
   33fd0:	vmov.32	d18[0], r5
   33fd4:	vmov.32	d20[0], r4
   33fd8:	mov	r4, sl
   33fdc:	vorr	d16, d18, d18
   33fe0:	vmov.i32	q9, #1	; 0x00000001
   33fe4:	vorr	d18, d20, d20
   33fe8:	vld1.32	{d20-d21}, [r4], r6
   33fec:	subs	r9, r9, #4
   33ff0:	vrev64.32	q12, q10
   33ff4:	vext.8	q12, q12, q12, #8
   33ff8:	vext.8	q11, q11, q12, #12
   33ffc:	vmul.i32	q9, q9, q12
   34000:	vmul.i32	q8, q11, q8
   34004:	vorr	q11, q12, q12
   34008:	bne	33fe8 <GetDataSlab+0x4068>
   3400c:	vext.8	q11, q9, q8, #8
   34010:	vext.8	q12, q8, q8, #8
   34014:	cmp	lr, r1
   34018:	vmul.i32	q0, q9, q11
   3401c:	vmul.i32	q1, q8, q12
   34020:	vmul.i32	q8, q0, d0[1]
   34024:	vmul.i32	q9, q1, d2[1]
   34028:	vmov.32	r4, d16[0]
   3402c:	vmov.32	r5, d18[0]
   34030:	beq	33f34 <GetDataSlab+0x3fb4>
   34034:	vmov.32	r1, d20[0]
   34038:	mul	r5, r1, r5
   3403c:	ldr	r1, [r0, r2, lsl #2]
   34040:	subs	r2, r2, #1
   34044:	mul	r4, r4, r1
   34048:	bne	34038 <GetDataSlab+0x40b8>
   3404c:	b	33f34 <GetDataSlab+0x3fb4>
   34050:	ldr	r0, [sl]
   34054:	mov	r1, #0
   34058:	sub	r6, fp, #96	; 0x60
   3405c:	str	r0, [sp, #52]	; 0x34
   34060:	sub	r0, r0, #1
   34064:	str	r0, [fp, #-96]	; 0xffffffa0
   34068:	ldr	r0, [fp, #8]
   3406c:	ldr	r0, [r0]
   34070:	str	r0, [sp, #60]	; 0x3c
   34074:	str	r0, [fp, #-176]	; 0xffffff50
   34078:	ldr	r0, [fp, #20]
   3407c:	ldr	r2, [r0]
   34080:	ldr	r0, [fp, #24]
   34084:	cmp	r0, #2
   34088:	str	r2, [sp, #64]	; 0x40
   3408c:	str	r2, [sp, #76]	; 0x4c
   34090:	blt	3ef48 <GetDataSlab+0xefc8>
   34094:	ldr	r0, [fp, #8]
   34098:	ldr	r7, [sp, #60]	; 0x3c
   3409c:	ldr	r2, [sp, #64]	; 0x40
   340a0:	mov	r5, #1
   340a4:	mov	r8, #0
   340a8:	mvn	r4, #15
   340ac:	mov	r1, r0
   340b0:	sub	r0, r0, #4
   340b4:	mov	r9, r7
   340b8:	str	r2, [sp, #76]	; 0x4c
   340bc:	sub	sl, r1, #12
   340c0:	mov	r1, #0
   340c4:	b	34114 <GetDataSlab+0x4194>
   340c8:	sub	ip, fp, #176	; 0xb0
   340cc:	ldr	r2, [fp, #12]
   340d0:	sub	r6, fp, #96	; 0x60
   340d4:	str	r7, [ip, r5, lsl #2]
   340d8:	add	sl, sl, #4
   340dc:	str	r3, [r6, r5, lsl #2]
   340e0:	ldr	r3, [sp, #76]	; 0x4c
   340e4:	ldr	r2, [r2, r5, lsl #2]
   340e8:	mla	r1, r2, r9, r1
   340ec:	ldr	r2, [fp, #20]
   340f0:	mov	r9, r7
   340f4:	mov	r7, lr
   340f8:	ldr	r2, [r2, r5, lsl #2]
   340fc:	add	r5, r5, #1
   34100:	mul	r3, r2, r3
   34104:	ldr	r2, [fp, #24]
   34108:	str	r3, [sp, #76]	; 0x4c
   3410c:	cmp	r5, r2
   34110:	beq	3ef48 <GetDataSlab+0xefc8>
   34114:	ldr	r2, [fp, #16]
   34118:	add	r8, r8, #1
   3411c:	cmp	r8, #4
   34120:	ldr	r2, [r2, r5, lsl #2]
   34124:	str	r7, [ip, r5, lsl #2]
   34128:	sub	r3, r2, #1
   3412c:	ldr	r2, [fp, #8]
   34130:	str	r3, [r6, r5, lsl #2]
   34134:	ldr	lr, [r2, r5, lsl #2]
   34138:	bcs	34148 <GetDataSlab+0x41c8>
   3413c:	mov	r2, lr
   34140:	mov	r6, r5
   34144:	b	341d0 <GetDataSlab+0x4250>
   34148:	vmov.i32	q9, #1	; 0x00000001
   3414c:	vmov.i32	q10, #1	; 0x00000001
   34150:	vmov.32	d23[1], lr
   34154:	vmov.i32	q8, #1	; 0x00000001
   34158:	bic	r2, r8, #3
   3415c:	bic	ip, r5, #3
   34160:	sub	r6, r5, r2
   34164:	vmov.32	d18[0], r7
   34168:	vmov.32	d20[0], r3
   3416c:	mov	r3, sl
   34170:	vorr	d16, d18, d18
   34174:	vmov.i32	q9, #1	; 0x00000001
   34178:	vorr	d18, d20, d20
   3417c:	vld1.32	{d20-d21}, [r3], r4
   34180:	subs	ip, ip, #4
   34184:	vrev64.32	q12, q10
   34188:	vext.8	q12, q12, q12, #8
   3418c:	vext.8	q11, q11, q12, #12
   34190:	vmul.i32	q9, q9, q12
   34194:	vmul.i32	q8, q11, q8
   34198:	vorr	q11, q12, q12
   3419c:	bne	3417c <GetDataSlab+0x41fc>
   341a0:	vext.8	q11, q9, q8, #8
   341a4:	vext.8	q12, q8, q8, #8
   341a8:	cmp	r8, r2
   341ac:	vmul.i32	q0, q9, q11
   341b0:	vmul.i32	q1, q8, q12
   341b4:	vmul.i32	q8, q0, d0[1]
   341b8:	vmul.i32	q9, q1, d2[1]
   341bc:	vmov.32	r3, d16[0]
   341c0:	vmov.32	r7, d18[0]
   341c4:	beq	340c8 <GetDataSlab+0x4148>
   341c8:	vmov.32	r2, d20[0]
   341cc:	sub	ip, fp, #176	; 0xb0
   341d0:	mul	r7, r2, r7
   341d4:	ldr	r2, [r0, r6, lsl #2]
   341d8:	subs	r6, r6, #1
   341dc:	mul	r3, r3, r2
   341e0:	bne	341d0 <GetDataSlab+0x4250>
   341e4:	b	340cc <GetDataSlab+0x414c>
   341e8:	ldr	r0, [sl]
   341ec:	mov	r1, #0
   341f0:	sub	lr, fp, #96	; 0x60
   341f4:	str	r0, [sp, #44]	; 0x2c
   341f8:	sub	r0, r0, #1
   341fc:	str	r0, [fp, #-96]	; 0xffffffa0
   34200:	ldr	r0, [fp, #8]
   34204:	ldr	r0, [r0]
   34208:	str	r0, [sp, #60]	; 0x3c
   3420c:	str	r0, [fp, #-176]	; 0xffffff50
   34210:	ldr	r0, [fp, #20]
   34214:	ldr	r2, [r0]
   34218:	ldr	r0, [fp, #24]
   3421c:	cmp	r0, #2
   34220:	str	r2, [sp, #72]	; 0x48
   34224:	str	r2, [sp, #76]	; 0x4c
   34228:	blt	3f238 <GetDataSlab+0xf2b8>
   3422c:	ldr	r0, [fp, #8]
   34230:	ldr	r3, [sp, #60]	; 0x3c
   34234:	ldr	r2, [sp, #72]	; 0x48
   34238:	mov	r6, #1
   3423c:	mov	r9, #0
   34240:	mvn	r5, #15
   34244:	mov	r1, r0
   34248:	sub	r0, r0, #4
   3424c:	mov	r8, r3
   34250:	str	r2, [sp, #76]	; 0x4c
   34254:	sub	sl, r1, #12
   34258:	mov	r1, #0
   3425c:	b	342b4 <GetDataSlab+0x4334>
   34260:	sub	r2, fp, #176	; 0xb0
   34264:	sub	lr, fp, #96	; 0x60
   34268:	add	sl, sl, #4
   3426c:	mov	r7, r2
   34270:	str	r3, [r2, r6, lsl #2]
   34274:	ldr	r2, [fp, #12]
   34278:	str	r4, [lr, r6, lsl #2]
   3427c:	ldr	r4, [sp, #76]	; 0x4c
   34280:	ldr	r2, [r2, r6, lsl #2]
   34284:	mla	r1, r2, r8, r1
   34288:	ldr	r2, [fp, #20]
   3428c:	mov	r8, r3
   34290:	mov	r3, ip
   34294:	mov	ip, r7
   34298:	ldr	r2, [r2, r6, lsl #2]
   3429c:	add	r6, r6, #1
   342a0:	mul	r4, r2, r4
   342a4:	ldr	r2, [fp, #24]
   342a8:	str	r4, [sp, #76]	; 0x4c
   342ac:	cmp	r6, r2
   342b0:	beq	3f238 <GetDataSlab+0xf2b8>
   342b4:	ldr	r2, [fp, #16]
   342b8:	add	r9, r9, #1
   342bc:	cmp	r9, #4
   342c0:	ldr	r2, [r2, r6, lsl #2]
   342c4:	str	r3, [ip, r6, lsl #2]
   342c8:	sub	r4, r2, #1
   342cc:	ldr	r2, [fp, #8]
   342d0:	str	r4, [lr, r6, lsl #2]
   342d4:	ldr	ip, [r2, r6, lsl #2]
   342d8:	bcs	342e8 <GetDataSlab+0x4368>
   342dc:	mov	r2, ip
   342e0:	mov	r7, r6
   342e4:	b	34374 <GetDataSlab+0x43f4>
   342e8:	vmov.i32	q9, #1	; 0x00000001
   342ec:	vmov.i32	q10, #1	; 0x00000001
   342f0:	vmov.32	d23[1], ip
   342f4:	vmov.i32	q8, #1	; 0x00000001
   342f8:	mov	lr, r9
   342fc:	bic	r9, r9, #3
   34300:	bic	r2, r6, #3
   34304:	sub	r7, r6, r9
   34308:	vmov.32	d18[0], r3
   3430c:	vmov.32	d20[0], r4
   34310:	mov	r3, sl
   34314:	vorr	d16, d18, d18
   34318:	vmov.i32	q9, #1	; 0x00000001
   3431c:	vorr	d18, d20, d20
   34320:	vld1.32	{d20-d21}, [r3], r5
   34324:	subs	r2, r2, #4
   34328:	vrev64.32	q12, q10
   3432c:	vext.8	q12, q12, q12, #8
   34330:	vext.8	q11, q11, q12, #12
   34334:	vmul.i32	q9, q9, q12
   34338:	vmul.i32	q8, q11, q8
   3433c:	vorr	q11, q12, q12
   34340:	bne	34320 <GetDataSlab+0x43a0>
   34344:	vext.8	q11, q9, q8, #8
   34348:	vext.8	q12, q8, q8, #8
   3434c:	cmp	lr, r9
   34350:	mov	r9, lr
   34354:	vmul.i32	q0, q9, q11
   34358:	vmul.i32	q1, q8, q12
   3435c:	vmul.i32	q8, q0, d0[1]
   34360:	vmul.i32	q9, q1, d2[1]
   34364:	vmov.32	r4, d16[0]
   34368:	vmov.32	r3, d18[0]
   3436c:	beq	34260 <GetDataSlab+0x42e0>
   34370:	vmov.32	r2, d20[0]
   34374:	mul	r3, r2, r3
   34378:	ldr	r2, [r0, r7, lsl #2]
   3437c:	subs	r7, r7, #1
   34380:	mul	r4, r4, r2
   34384:	bne	34374 <GetDataSlab+0x43f4>
   34388:	b	34260 <GetDataSlab+0x42e0>
   3438c:	ldr	r0, [sl]
   34390:	mov	r5, #0
   34394:	sub	lr, fp, #96	; 0x60
   34398:	str	r0, [sp, #20]
   3439c:	sub	r0, r0, #1
   343a0:	str	r0, [fp, #-96]	; 0xffffffa0
   343a4:	ldr	r0, [fp, #8]
   343a8:	ldr	r0, [r0]
   343ac:	str	r0, [sp, #28]
   343b0:	str	r0, [fp, #-176]	; 0xffffff50
   343b4:	ldr	r0, [fp, #20]
   343b8:	ldr	r1, [r0]
   343bc:	ldr	r0, [fp, #24]
   343c0:	cmp	r0, #2
   343c4:	str	r1, [sp, #56]	; 0x38
   343c8:	str	r1, [sp, #68]	; 0x44
   343cc:	blt	3f4cc <GetDataSlab+0xf54c>
   343d0:	ldr	r0, [fp, #8]
   343d4:	ldr	r4, [sp, #28]
   343d8:	mov	r3, #1
   343dc:	mov	r9, #0
   343e0:	mvn	r7, #15
   343e4:	mov	r5, #0
   343e8:	mov	r1, r0
   343ec:	sub	r0, r0, #4
   343f0:	mov	r8, r4
   343f4:	sub	sl, r1, #12
   343f8:	ldr	r1, [sp, #56]	; 0x38
   343fc:	str	r1, [sp, #68]	; 0x44
   34400:	b	34458 <GetDataSlab+0x44d8>
   34404:	sub	r1, fp, #176	; 0xb0
   34408:	sub	lr, fp, #96	; 0x60
   3440c:	add	sl, sl, #4
   34410:	mov	r2, r1
   34414:	str	r4, [r1, r3, lsl #2]
   34418:	ldr	r1, [fp, #12]
   3441c:	str	r6, [lr, r3, lsl #2]
   34420:	ldr	r6, [sp, #68]	; 0x44
   34424:	ldr	r1, [r1, r3, lsl #2]
   34428:	mla	r5, r1, r8, r5
   3442c:	ldr	r1, [fp, #20]
   34430:	mov	r8, r4
   34434:	mov	r4, ip
   34438:	mov	ip, r2
   3443c:	ldr	r1, [r1, r3, lsl #2]
   34440:	add	r3, r3, #1
   34444:	mul	r6, r1, r6
   34448:	ldr	r1, [fp, #24]
   3444c:	str	r6, [sp, #68]	; 0x44
   34450:	cmp	r3, r1
   34454:	beq	3f4cc <GetDataSlab+0xf54c>
   34458:	ldr	r1, [fp, #16]
   3445c:	add	r9, r9, #1
   34460:	cmp	r9, #4
   34464:	ldr	r1, [r1, r3, lsl #2]
   34468:	str	r4, [ip, r3, lsl #2]
   3446c:	sub	r6, r1, #1
   34470:	ldr	r1, [fp, #8]
   34474:	str	r6, [lr, r3, lsl #2]
   34478:	ldr	ip, [r1, r3, lsl #2]
   3447c:	bcs	3448c <GetDataSlab+0x450c>
   34480:	mov	r1, ip
   34484:	mov	r2, r3
   34488:	b	34518 <GetDataSlab+0x4598>
   3448c:	vmov.i32	q9, #1	; 0x00000001
   34490:	vmov.i32	q10, #1	; 0x00000001
   34494:	vmov.32	d23[1], ip
   34498:	vmov.i32	q8, #1	; 0x00000001
   3449c:	mov	lr, r9
   344a0:	bic	r9, r9, #3
   344a4:	bic	r1, r3, #3
   344a8:	sub	r2, r3, r9
   344ac:	vmov.32	d18[0], r4
   344b0:	vmov.32	d20[0], r6
   344b4:	mov	r4, sl
   344b8:	vorr	d16, d18, d18
   344bc:	vmov.i32	q9, #1	; 0x00000001
   344c0:	vorr	d18, d20, d20
   344c4:	vld1.32	{d20-d21}, [r4], r7
   344c8:	subs	r1, r1, #4
   344cc:	vrev64.32	q12, q10
   344d0:	vext.8	q12, q12, q12, #8
   344d4:	vext.8	q11, q11, q12, #12
   344d8:	vmul.i32	q9, q9, q12
   344dc:	vmul.i32	q8, q11, q8
   344e0:	vorr	q11, q12, q12
   344e4:	bne	344c4 <GetDataSlab+0x4544>
   344e8:	vext.8	q11, q9, q8, #8
   344ec:	vext.8	q12, q8, q8, #8
   344f0:	cmp	lr, r9
   344f4:	mov	r9, lr
   344f8:	vmul.i32	q0, q9, q11
   344fc:	vmul.i32	q1, q8, q12
   34500:	vmul.i32	q8, q0, d0[1]
   34504:	vmul.i32	q9, q1, d2[1]
   34508:	vmov.32	r6, d16[0]
   3450c:	vmov.32	r4, d18[0]
   34510:	beq	34404 <GetDataSlab+0x4484>
   34514:	vmov.32	r1, d20[0]
   34518:	mul	r4, r1, r4
   3451c:	ldr	r1, [r0, r2, lsl #2]
   34520:	subs	r2, r2, #1
   34524:	mul	r6, r6, r1
   34528:	bne	34518 <GetDataSlab+0x4598>
   3452c:	b	34404 <GetDataSlab+0x4484>
   34530:	ldr	r0, [sp, #80]	; 0x50
   34534:	cmp	sl, #1
   34538:	add	ip, r0, r3
   3453c:	bne	480e4 <GetDataSlab+0x18164>
   34540:	ldr	r0, [sp, #76]	; 0x4c
   34544:	ldr	r2, [fp, #12]
   34548:	sub	r7, fp, #96	; 0x60
   3454c:	cmp	r0, #1
   34550:	blt	56c18 <GetDataSlab+0x26c98>
   34554:	ldr	lr, [sp, #60]	; 0x3c
   34558:	mov	r1, #1
   3455c:	ldr	sl, [sp, #40]	; 0x28
   34560:	mov	r6, #32
   34564:	mov	r8, #0
   34568:	sub	r0, lr, #4
   3456c:	add	r1, r1, r0, lsr #2
   34570:	lsr	r0, r0, #2
   34574:	str	r0, [sp, #24]
   34578:	ldr	r0, [sp, #88]	; 0x58
   3457c:	and	r4, r1, #1
   34580:	sub	r1, r1, r4
   34584:	str	r4, [sp, #32]
   34588:	str	r1, [sp, #16]
   3458c:	sub	r1, fp, #136	; 0x88
   34590:	orr	r4, r1, #4
   34594:	ldr	r1, [fp, #20]
   34598:	str	r0, [sp, #68]	; 0x44
   3459c:	mov	r0, #0
   345a0:	str	r0, [sp, #72]	; 0x48
   345a4:	add	r9, r1, #4
   345a8:	sub	r1, fp, #176	; 0xb0
   345ac:	orr	r1, r1, #4
   345b0:	str	r9, [sp, #20]
   345b4:	str	r1, [sp, #84]	; 0x54
   345b8:	add	r1, r2, #4
   345bc:	str	r1, [sp, #80]	; 0x50
   345c0:	ldr	r1, [fp, #24]
   345c4:	sub	r1, r1, #1
   345c8:	str	r1, [sp, #44]	; 0x2c
   345cc:	orr	r1, r7, #4
   345d0:	str	r1, [sp, #36]	; 0x24
   345d4:	lsl	r1, lr, #2
   345d8:	str	r1, [sp, #64]	; 0x40
   345dc:	and	r1, lr, #1
   345e0:	str	r1, [sp, #48]	; 0x30
   345e4:	bic	r1, lr, #3
   345e8:	str	r1, [sp, #28]
   345ec:	cmp	lr, #1
   345f0:	bge	34644 <GetDataSlab+0x46c4>
   345f4:	b	347ec <GetDataSlab+0x486c>
   345f8:	ldr	r0, [sp, #36]	; 0x24
   345fc:	mov	r6, #32
   34600:	ldr	r0, [r0, r1]
   34604:	add	ip, ip, r0
   34608:	add	r3, r0, r3
   3460c:	ldr	r0, [sp, #64]	; 0x40
   34610:	ldr	r1, [sp, #68]	; 0x44
   34614:	add	r8, r8, lr
   34618:	mov	r2, #0
   3461c:	add	r1, r1, r0
   34620:	ldr	r0, [sp, #72]	; 0x48
   34624:	str	r1, [sp, #68]	; 0x44
   34628:	add	r0, r0, #1
   3462c:	str	r0, [sp, #72]	; 0x48
   34630:	ldr	r0, [sp, #76]	; 0x4c
   34634:	cmp	r8, r0
   34638:	bge	56c1c <GetDataSlab+0x26c9c>
   3463c:	cmp	lr, #1
   34640:	blt	347ec <GetDataSlab+0x486c>
   34644:	ldr	r0, [fp, #12]
   34648:	cmp	lr, #4
   3464c:	ldr	r5, [r0]
   34650:	ldr	r0, [sp, #88]	; 0x58
   34654:	add	r1, r0, r8, lsl #2
   34658:	add	r2, ip, r5
   3465c:	str	r1, [sp, #52]	; 0x34
   34660:	mov	r1, #0
   34664:	bcc	34768 <GetDataSlab+0x47e8>
   34668:	str	r5, [sp, #56]	; 0x38
   3466c:	ldr	r5, [sp, #64]	; 0x40
   34670:	ldr	r7, [sp, #72]	; 0x48
   34674:	mla	r0, r5, r7, r0
   34678:	ldr	r5, [sp, #56]	; 0x38
   3467c:	add	r7, ip, lr
   34680:	add	r7, r7, r5
   34684:	cmp	r0, r7
   34688:	bcs	346ac <GetDataSlab+0x472c>
   3468c:	ldr	r0, [sp, #64]	; 0x40
   34690:	ldr	r5, [sp, #72]	; 0x48
   34694:	ldr	r7, [sp, #88]	; 0x58
   34698:	mla	r0, r0, r5, r0
   3469c:	ldr	r5, [sp, #56]	; 0x38
   346a0:	add	r0, r7, r0
   346a4:	cmp	r2, r0
   346a8:	bcc	34768 <GetDataSlab+0x47e8>
   346ac:	ldr	r0, [sp, #24]
   346b0:	mov	r1, #0
   346b4:	cmp	r0, #0
   346b8:	beq	34718 <GetDataSlab+0x4798>
   346bc:	ldr	lr, [sp, #68]	; 0x44
   346c0:	ldr	sl, [sp, #16]
   346c4:	sub	r5, fp, #480	; 0x1e0
   346c8:	sub	r9, fp, #484	; 0x1e4
   346cc:	mov	r0, r2
   346d0:	subs	sl, sl, #2
   346d4:	ldr	r7, [r0, r1]!
   346d8:	add	r1, r1, #8
   346dc:	str	r7, [fp, #-484]	; 0xfffffe1c
   346e0:	add	r7, lr, #16
   346e4:	vld1.32	{d16[0]}, [r9 :32]
   346e8:	vmovl.s8	q8, d16
   346ec:	vmovl.s16	q8, d16
   346f0:	vcvt.f32.s32	q8, q8
   346f4:	vst1.32	{d16-d17}, [lr], r6
   346f8:	ldr	r0, [r0, #4]
   346fc:	str	r0, [fp, #-480]	; 0xfffffe20
   34700:	vld1.32	{d16[0]}, [r5 :32]
   34704:	vmovl.s8	q8, d16
   34708:	vmovl.s16	q8, d16
   3470c:	vcvt.f32.s32	q8, q8
   34710:	vst1.32	{d16-d17}, [r7]
   34714:	bne	346cc <GetDataSlab+0x474c>
   34718:	ldr	r0, [sp, #32]
   3471c:	ldr	sl, [sp, #40]	; 0x28
   34720:	ldr	r5, [sp, #56]	; 0x38
   34724:	ldr	r9, [sp, #20]
   34728:	cmp	r0, #0
   3472c:	beq	34758 <GetDataSlab+0x47d8>
   34730:	ldr	r0, [r2, r1]
   34734:	str	r0, [fp, #-488]	; 0xfffffe18
   34738:	sub	r0, fp, #488	; 0x1e8
   3473c:	vld1.32	{d16[0]}, [r0 :32]
   34740:	ldr	r0, [sp, #52]	; 0x34
   34744:	add	r0, r0, r1, lsl #2
   34748:	vmovl.s8	q8, d16
   3474c:	vmovl.s16	q8, d16
   34750:	vcvt.f32.s32	q8, q8
   34754:	vst1.32	{d16-d17}, [r0]
   34758:	ldr	lr, [sp, #60]	; 0x3c
   3475c:	ldr	r1, [sp, #28]
   34760:	cmp	lr, r1
   34764:	beq	347ec <GetDataSlab+0x486c>
   34768:	ldr	r0, [sp, #48]	; 0x30
   3476c:	mov	r7, r1
   34770:	cmp	r0, #0
   34774:	beq	34798 <GetDataSlab+0x4818>
   34778:	add	r2, r2, r1
   3477c:	ldr	r0, [sp, #52]	; 0x34
   34780:	orr	r7, r1, #1
   34784:	ldrsb	r2, [r2]
   34788:	add	r0, r0, r1, lsl #2
   3478c:	vmov	s0, r2
   34790:	vcvt.f32.s32	s0, s0
   34794:	vstr	s0, [r0]
   34798:	orr	r0, r1, #1
   3479c:	cmp	lr, r0
   347a0:	beq	347ec <GetDataSlab+0x486c>
   347a4:	ldr	r0, [sp, #68]	; 0x44
   347a8:	sub	r2, lr, r7
   347ac:	add	r1, r0, r7, lsl #2
   347b0:	add	r0, r7, r5
   347b4:	add	r0, ip, r0
   347b8:	add	r7, r0, #1
   347bc:	ldrsb	r0, [r7, #-1]
   347c0:	subs	r2, r2, #2
   347c4:	vmov	s0, r0
   347c8:	vcvt.f32.s32	s0, s0
   347cc:	vstr	s0, [r1]
   347d0:	ldrsb	r0, [r7]
   347d4:	add	r7, r7, #2
   347d8:	vmov	s0, r0
   347dc:	vcvt.f32.s32	s0, s0
   347e0:	vstr	s0, [r1, #4]
   347e4:	add	r1, r1, #8
   347e8:	bne	347bc <GetDataSlab+0x483c>
   347ec:	ldr	r0, [fp, #24]
   347f0:	add	ip, ip, sl
   347f4:	add	r3, r3, sl
   347f8:	cmp	r0, #2
   347fc:	blt	3460c <GetDataSlab+0x468c>
   34800:	ldr	r2, [sp, #44]	; 0x2c
   34804:	mov	r1, #0
   34808:	b	3483c <GetDataSlab+0x48bc>
   3480c:	ldr	r5, [sp, #80]	; 0x50
   34810:	sub	r6, fp, #176	; 0xb0
   34814:	sub	r0, r7, r0
   34818:	ldr	r6, [r6, r1]
   3481c:	ldr	r5, [r5, r1]
   34820:	mla	r0, r5, r6, r0
   34824:	add	r3, r0, r3
   34828:	add	ip, ip, r0
   3482c:	mov	r6, #32
   34830:	subs	r2, r2, #1
   34834:	add	r1, r1, #4
   34838:	beq	3460c <GetDataSlab+0x468c>
   3483c:	ldr	r0, [r4, r1]
   34840:	add	r0, r0, #1
   34844:	str	r0, [r4, r1]
   34848:	ldr	r7, [r9, r1]
   3484c:	sdiv	r6, r0, r7
   34850:	mls	r0, r6, r7, r0
   34854:	cmp	r0, #0
   34858:	bne	345f8 <GetDataSlab+0x4678>
   3485c:	mov	r0, #0
   34860:	str	r0, [r4, r1]
   34864:	ldr	r0, [sp, #84]	; 0x54
   34868:	ldr	r7, [r0, r1]
   3486c:	sdiv	r0, r3, r7
   34870:	mls	r0, r0, r7, r3
   34874:	cmp	r0, #0
   34878:	bne	3480c <GetDataSlab+0x488c>
   3487c:	ldr	r0, [sp, #80]	; 0x50
   34880:	ldr	r0, [r0, r1]
   34884:	cmp	r0, #0
   34888:	beq	3482c <GetDataSlab+0x48ac>
   3488c:	sub	r7, fp, #176	; 0xb0
   34890:	ldr	r7, [r7, r1]
   34894:	mla	r3, r7, r0, r3
   34898:	mla	ip, r7, r0, ip
   3489c:	b	3482c <GetDataSlab+0x48ac>
   348a0:	ldr	r5, [sl]
   348a4:	mov	r7, #0
   348a8:	sub	r9, fp, #176	; 0xb0
   348ac:	sub	r8, fp, #96	; 0x60
   348b0:	sub	r0, r5, #1
   348b4:	str	r0, [fp, #-96]	; 0xffffffa0
   348b8:	ldr	r0, [r3]
   348bc:	str	r0, [sp, #72]	; 0x48
   348c0:	str	r0, [fp, #-176]	; 0xffffff50
   348c4:	ldr	r0, [fp, #20]
   348c8:	ldr	r1, [r0]
   348cc:	ldr	r0, [fp, #24]
   348d0:	cmp	r0, #2
   348d4:	mov	r0, r1
   348d8:	str	r1, [sp, #76]	; 0x4c
   348dc:	blt	3f7cc <GetDataSlab+0xf84c>
   348e0:	ldr	r0, [fp, #8]
   348e4:	ldr	r4, [sp, #72]	; 0x48
   348e8:	mov	r3, #0
   348ec:	mvn	ip, #15
   348f0:	mov	r7, #0
   348f4:	str	r1, [sp, #76]	; 0x4c
   348f8:	str	r3, [sp, #84]	; 0x54
   348fc:	mov	r3, r1
   34900:	mov	r2, r0
   34904:	sub	r0, r0, #4
   34908:	mov	r6, r4
   3490c:	sub	sl, r2, #12
   34910:	mov	r2, #1
   34914:	b	34968 <GetDataSlab+0x49e8>
   34918:	sub	r8, fp, #96	; 0x60
   3491c:	ldr	r3, [fp, #12]
   34920:	sub	r9, fp, #176	; 0xb0
   34924:	str	lr, [r8, r2, lsl #2]
   34928:	ldr	r6, [sp, #68]	; 0x44
   3492c:	add	sl, sl, #4
   34930:	str	r4, [r9, r2, lsl #2]
   34934:	ldr	r3, [r3, r2, lsl #2]
   34938:	mla	r7, r3, r6, r7
   3493c:	ldr	r3, [fp, #20]
   34940:	ldr	r6, [sp, #76]	; 0x4c
   34944:	ldr	r3, [r3, r2, lsl #2]
   34948:	add	r2, r2, #1
   3494c:	mul	r6, r3, r6
   34950:	ldr	r3, [fp, #24]
   34954:	str	r6, [sp, #76]	; 0x4c
   34958:	mov	r6, r4
   3495c:	ldr	r4, [sp, #64]	; 0x40
   34960:	cmp	r2, r3
   34964:	beq	3f7cc <GetDataSlab+0xf84c>
   34968:	ldr	r3, [fp, #16]
   3496c:	str	r6, [sp, #68]	; 0x44
   34970:	ldr	r3, [r3, r2, lsl #2]
   34974:	str	r4, [r9, r2, lsl #2]
   34978:	ldr	r9, [sp, #84]	; 0x54
   3497c:	sub	lr, r3, #1
   34980:	ldr	r3, [fp, #8]
   34984:	add	r9, r9, #1
   34988:	str	lr, [r8, r2, lsl #2]
   3498c:	cmp	r9, #4
   34990:	str	r9, [sp, #84]	; 0x54
   34994:	ldr	r6, [r3, r2, lsl #2]
   34998:	str	r6, [sp, #64]	; 0x40
   3499c:	bcs	349a8 <GetDataSlab+0x4a28>
   349a0:	mov	r3, r2
   349a4:	b	34a38 <GetDataSlab+0x4ab8>
   349a8:	vmov.i32	q9, #1	; 0x00000001
   349ac:	vmov.i32	q10, #1	; 0x00000001
   349b0:	vmov.32	d23[1], r6
   349b4:	vmov.i32	q8, #1	; 0x00000001
   349b8:	bic	r3, r9, #3
   349bc:	bic	r8, r2, #3
   349c0:	mov	r6, sl
   349c4:	str	r3, [sp, #60]	; 0x3c
   349c8:	sub	r3, r2, r3
   349cc:	vmov.32	d18[0], r4
   349d0:	vmov.32	d20[0], lr
   349d4:	vorr	d16, d18, d18
   349d8:	vmov.i32	q9, #1	; 0x00000001
   349dc:	vorr	d18, d20, d20
   349e0:	vld1.32	{d20-d21}, [r6], ip
   349e4:	subs	r8, r8, #4
   349e8:	vrev64.32	q12, q10
   349ec:	vext.8	q12, q12, q12, #8
   349f0:	vext.8	q11, q11, q12, #12
   349f4:	vmul.i32	q9, q9, q12
   349f8:	vmul.i32	q8, q11, q8
   349fc:	vorr	q11, q12, q12
   34a00:	bne	349e0 <GetDataSlab+0x4a60>
   34a04:	vext.8	q11, q9, q8, #8
   34a08:	vext.8	q12, q8, q8, #8
   34a0c:	ldr	r6, [sp, #60]	; 0x3c
   34a10:	vmul.i32	q0, q9, q11
   34a14:	vmul.i32	q1, q8, q12
   34a18:	cmp	r9, r6
   34a1c:	vmul.i32	q8, q0, d0[1]
   34a20:	vmul.i32	q9, q1, d2[1]
   34a24:	vmov.32	lr, d16[0]
   34a28:	vmov.32	r4, d18[0]
   34a2c:	beq	34918 <GetDataSlab+0x4998>
   34a30:	vmov.32	r6, d20[0]
   34a34:	sub	r8, fp, #96	; 0x60
   34a38:	mul	r4, r6, r4
   34a3c:	ldr	r6, [r0, r3, lsl #2]
   34a40:	subs	r3, r3, #1
   34a44:	mul	lr, lr, r6
   34a48:	bne	34a38 <GetDataSlab+0x4ab8>
   34a4c:	b	3491c <GetDataSlab+0x499c>
   34a50:	ldr	r5, [sl]
   34a54:	mov	r7, #0
   34a58:	sub	r9, fp, #176	; 0xb0
   34a5c:	sub	r8, fp, #96	; 0x60
   34a60:	sub	r0, r5, #1
   34a64:	str	r0, [fp, #-96]	; 0xffffffa0
   34a68:	ldr	r0, [r3]
   34a6c:	str	r0, [sp, #72]	; 0x48
   34a70:	str	r0, [fp, #-176]	; 0xffffff50
   34a74:	ldr	r0, [fp, #20]
   34a78:	ldr	r1, [r0]
   34a7c:	ldr	r0, [fp, #24]
   34a80:	cmp	r0, #2
   34a84:	mov	r0, r1
   34a88:	str	r1, [sp, #76]	; 0x4c
   34a8c:	blt	3f960 <GetDataSlab+0xf9e0>
   34a90:	ldr	r0, [fp, #8]
   34a94:	ldr	r4, [sp, #72]	; 0x48
   34a98:	mov	r3, #0
   34a9c:	mvn	ip, #15
   34aa0:	mov	r7, #0
   34aa4:	str	r1, [sp, #76]	; 0x4c
   34aa8:	str	r3, [sp, #84]	; 0x54
   34aac:	mov	r3, r1
   34ab0:	mov	r2, r0
   34ab4:	sub	r0, r0, #4
   34ab8:	mov	r6, r4
   34abc:	sub	sl, r2, #12
   34ac0:	mov	r2, #1
   34ac4:	b	34b18 <GetDataSlab+0x4b98>
   34ac8:	sub	r8, fp, #96	; 0x60
   34acc:	ldr	r3, [fp, #12]
   34ad0:	sub	r9, fp, #176	; 0xb0
   34ad4:	str	lr, [r8, r2, lsl #2]
   34ad8:	ldr	r6, [sp, #68]	; 0x44
   34adc:	add	sl, sl, #4
   34ae0:	str	r4, [r9, r2, lsl #2]
   34ae4:	ldr	r3, [r3, r2, lsl #2]
   34ae8:	mla	r7, r3, r6, r7
   34aec:	ldr	r3, [fp, #20]
   34af0:	ldr	r6, [sp, #76]	; 0x4c
   34af4:	ldr	r3, [r3, r2, lsl #2]
   34af8:	add	r2, r2, #1
   34afc:	mul	r6, r3, r6
   34b00:	ldr	r3, [fp, #24]
   34b04:	str	r6, [sp, #76]	; 0x4c
   34b08:	mov	r6, r4
   34b0c:	ldr	r4, [sp, #64]	; 0x40
   34b10:	cmp	r2, r3
   34b14:	beq	3f960 <GetDataSlab+0xf9e0>
   34b18:	ldr	r3, [fp, #16]
   34b1c:	str	r6, [sp, #68]	; 0x44
   34b20:	ldr	r3, [r3, r2, lsl #2]
   34b24:	str	r4, [r9, r2, lsl #2]
   34b28:	ldr	r9, [sp, #84]	; 0x54
   34b2c:	sub	lr, r3, #1
   34b30:	ldr	r3, [fp, #8]
   34b34:	add	r9, r9, #1
   34b38:	str	lr, [r8, r2, lsl #2]
   34b3c:	cmp	r9, #4
   34b40:	str	r9, [sp, #84]	; 0x54
   34b44:	ldr	r6, [r3, r2, lsl #2]
   34b48:	str	r6, [sp, #64]	; 0x40
   34b4c:	bcs	34b58 <GetDataSlab+0x4bd8>
   34b50:	mov	r3, r2
   34b54:	b	34be8 <GetDataSlab+0x4c68>
   34b58:	vmov.i32	q9, #1	; 0x00000001
   34b5c:	vmov.i32	q10, #1	; 0x00000001
   34b60:	vmov.32	d23[1], r6
   34b64:	vmov.i32	q8, #1	; 0x00000001
   34b68:	bic	r3, r9, #3
   34b6c:	bic	r8, r2, #3
   34b70:	mov	r6, sl
   34b74:	str	r3, [sp, #60]	; 0x3c
   34b78:	sub	r3, r2, r3
   34b7c:	vmov.32	d18[0], r4
   34b80:	vmov.32	d20[0], lr
   34b84:	vorr	d16, d18, d18
   34b88:	vmov.i32	q9, #1	; 0x00000001
   34b8c:	vorr	d18, d20, d20
   34b90:	vld1.32	{d20-d21}, [r6], ip
   34b94:	subs	r8, r8, #4
   34b98:	vrev64.32	q12, q10
   34b9c:	vext.8	q12, q12, q12, #8
   34ba0:	vext.8	q11, q11, q12, #12
   34ba4:	vmul.i32	q9, q9, q12
   34ba8:	vmul.i32	q8, q11, q8
   34bac:	vorr	q11, q12, q12
   34bb0:	bne	34b90 <GetDataSlab+0x4c10>
   34bb4:	vext.8	q11, q9, q8, #8
   34bb8:	vext.8	q12, q8, q8, #8
   34bbc:	ldr	r6, [sp, #60]	; 0x3c
   34bc0:	vmul.i32	q0, q9, q11
   34bc4:	vmul.i32	q1, q8, q12
   34bc8:	cmp	r9, r6
   34bcc:	vmul.i32	q8, q0, d0[1]
   34bd0:	vmul.i32	q9, q1, d2[1]
   34bd4:	vmov.32	lr, d16[0]
   34bd8:	vmov.32	r4, d18[0]
   34bdc:	beq	34ac8 <GetDataSlab+0x4b48>
   34be0:	vmov.32	r6, d20[0]
   34be4:	sub	r8, fp, #96	; 0x60
   34be8:	mul	r4, r6, r4
   34bec:	ldr	r6, [r0, r3, lsl #2]
   34bf0:	subs	r3, r3, #1
   34bf4:	mul	lr, lr, r6
   34bf8:	bne	34be8 <GetDataSlab+0x4c68>
   34bfc:	b	34acc <GetDataSlab+0x4b4c>
   34c00:	ldr	r5, [sl]
   34c04:	mov	r7, #0
   34c08:	sub	r9, fp, #176	; 0xb0
   34c0c:	sub	r8, fp, #96	; 0x60
   34c10:	sub	r0, r5, #1
   34c14:	str	r0, [fp, #-96]	; 0xffffffa0
   34c18:	ldr	r0, [r3]
   34c1c:	str	r0, [sp, #72]	; 0x48
   34c20:	str	r0, [fp, #-176]	; 0xffffff50
   34c24:	ldr	r0, [fp, #20]
   34c28:	ldr	r1, [r0]
   34c2c:	ldr	r0, [fp, #24]
   34c30:	cmp	r0, #2
   34c34:	mov	r0, r1
   34c38:	str	r1, [sp, #76]	; 0x4c
   34c3c:	blt	3faf4 <GetDataSlab+0xfb74>
   34c40:	ldr	r0, [fp, #8]
   34c44:	ldr	r4, [sp, #72]	; 0x48
   34c48:	mov	r3, #0
   34c4c:	mvn	ip, #15
   34c50:	mov	r7, #0
   34c54:	str	r1, [sp, #76]	; 0x4c
   34c58:	str	r3, [sp, #84]	; 0x54
   34c5c:	mov	r3, r1
   34c60:	mov	r2, r0
   34c64:	sub	r0, r0, #4
   34c68:	mov	r6, r4
   34c6c:	sub	sl, r2, #12
   34c70:	mov	r2, #1
   34c74:	b	34cc8 <GetDataSlab+0x4d48>
   34c78:	sub	r8, fp, #96	; 0x60
   34c7c:	ldr	r3, [fp, #12]
   34c80:	sub	r9, fp, #176	; 0xb0
   34c84:	str	lr, [r8, r2, lsl #2]
   34c88:	ldr	r6, [sp, #68]	; 0x44
   34c8c:	add	sl, sl, #4
   34c90:	str	r4, [r9, r2, lsl #2]
   34c94:	ldr	r3, [r3, r2, lsl #2]
   34c98:	mla	r7, r3, r6, r7
   34c9c:	ldr	r3, [fp, #20]
   34ca0:	ldr	r6, [sp, #76]	; 0x4c
   34ca4:	ldr	r3, [r3, r2, lsl #2]
   34ca8:	add	r2, r2, #1
   34cac:	mul	r6, r3, r6
   34cb0:	ldr	r3, [fp, #24]
   34cb4:	str	r6, [sp, #76]	; 0x4c
   34cb8:	mov	r6, r4
   34cbc:	ldr	r4, [sp, #64]	; 0x40
   34cc0:	cmp	r2, r3
   34cc4:	beq	3faf4 <GetDataSlab+0xfb74>
   34cc8:	ldr	r3, [fp, #16]
   34ccc:	str	r6, [sp, #68]	; 0x44
   34cd0:	ldr	r3, [r3, r2, lsl #2]
   34cd4:	str	r4, [r9, r2, lsl #2]
   34cd8:	ldr	r9, [sp, #84]	; 0x54
   34cdc:	sub	lr, r3, #1
   34ce0:	ldr	r3, [fp, #8]
   34ce4:	add	r9, r9, #1
   34ce8:	str	lr, [r8, r2, lsl #2]
   34cec:	cmp	r9, #4
   34cf0:	str	r9, [sp, #84]	; 0x54
   34cf4:	ldr	r6, [r3, r2, lsl #2]
   34cf8:	str	r6, [sp, #64]	; 0x40
   34cfc:	bcs	34d08 <GetDataSlab+0x4d88>
   34d00:	mov	r3, r2
   34d04:	b	34d98 <GetDataSlab+0x4e18>
   34d08:	vmov.i32	q9, #1	; 0x00000001
   34d0c:	vmov.i32	q10, #1	; 0x00000001
   34d10:	vmov.32	d23[1], r6
   34d14:	vmov.i32	q8, #1	; 0x00000001
   34d18:	bic	r3, r9, #3
   34d1c:	bic	r8, r2, #3
   34d20:	mov	r6, sl
   34d24:	str	r3, [sp, #60]	; 0x3c
   34d28:	sub	r3, r2, r3
   34d2c:	vmov.32	d18[0], r4
   34d30:	vmov.32	d20[0], lr
   34d34:	vorr	d16, d18, d18
   34d38:	vmov.i32	q9, #1	; 0x00000001
   34d3c:	vorr	d18, d20, d20
   34d40:	vld1.32	{d20-d21}, [r6], ip
   34d44:	subs	r8, r8, #4
   34d48:	vrev64.32	q12, q10
   34d4c:	vext.8	q12, q12, q12, #8
   34d50:	vext.8	q11, q11, q12, #12
   34d54:	vmul.i32	q9, q9, q12
   34d58:	vmul.i32	q8, q11, q8
   34d5c:	vorr	q11, q12, q12
   34d60:	bne	34d40 <GetDataSlab+0x4dc0>
   34d64:	vext.8	q11, q9, q8, #8
   34d68:	vext.8	q12, q8, q8, #8
   34d6c:	ldr	r6, [sp, #60]	; 0x3c
   34d70:	vmul.i32	q0, q9, q11
   34d74:	vmul.i32	q1, q8, q12
   34d78:	cmp	r9, r6
   34d7c:	vmul.i32	q8, q0, d0[1]
   34d80:	vmul.i32	q9, q1, d2[1]
   34d84:	vmov.32	lr, d16[0]
   34d88:	vmov.32	r4, d18[0]
   34d8c:	beq	34c78 <GetDataSlab+0x4cf8>
   34d90:	vmov.32	r6, d20[0]
   34d94:	sub	r8, fp, #96	; 0x60
   34d98:	mul	r4, r6, r4
   34d9c:	ldr	r6, [r0, r3, lsl #2]
   34da0:	subs	r3, r3, #1
   34da4:	mul	lr, lr, r6
   34da8:	bne	34d98 <GetDataSlab+0x4e18>
   34dac:	b	34c7c <GetDataSlab+0x4cfc>
   34db0:	ldr	r5, [sl]
   34db4:	mov	r7, #0
   34db8:	sub	r9, fp, #176	; 0xb0
   34dbc:	sub	r8, fp, #96	; 0x60
   34dc0:	sub	r0, r5, #1
   34dc4:	str	r0, [fp, #-96]	; 0xffffffa0
   34dc8:	ldr	r0, [r3]
   34dcc:	str	r0, [sp, #72]	; 0x48
   34dd0:	str	r0, [fp, #-176]	; 0xffffff50
   34dd4:	ldr	r0, [fp, #20]
   34dd8:	ldr	r1, [r0]
   34ddc:	ldr	r0, [fp, #24]
   34de0:	cmp	r0, #2
   34de4:	mov	r0, r1
   34de8:	str	r1, [sp, #76]	; 0x4c
   34dec:	blt	3fc88 <GetDataSlab+0xfd08>
   34df0:	ldr	r0, [fp, #8]
   34df4:	ldr	r4, [sp, #72]	; 0x48
   34df8:	mov	r3, #0
   34dfc:	mvn	ip, #15
   34e00:	mov	r7, #0
   34e04:	str	r1, [sp, #76]	; 0x4c
   34e08:	str	r3, [sp, #84]	; 0x54
   34e0c:	mov	r3, r1
   34e10:	mov	r2, r0
   34e14:	sub	r0, r0, #4
   34e18:	mov	r6, r4
   34e1c:	sub	sl, r2, #12
   34e20:	mov	r2, #1
   34e24:	b	34e78 <GetDataSlab+0x4ef8>
   34e28:	sub	r8, fp, #96	; 0x60
   34e2c:	ldr	r3, [fp, #12]
   34e30:	sub	r9, fp, #176	; 0xb0
   34e34:	str	lr, [r8, r2, lsl #2]
   34e38:	ldr	r6, [sp, #68]	; 0x44
   34e3c:	add	sl, sl, #4
   34e40:	str	r4, [r9, r2, lsl #2]
   34e44:	ldr	r3, [r3, r2, lsl #2]
   34e48:	mla	r7, r3, r6, r7
   34e4c:	ldr	r3, [fp, #20]
   34e50:	ldr	r6, [sp, #76]	; 0x4c
   34e54:	ldr	r3, [r3, r2, lsl #2]
   34e58:	add	r2, r2, #1
   34e5c:	mul	r6, r3, r6
   34e60:	ldr	r3, [fp, #24]
   34e64:	str	r6, [sp, #76]	; 0x4c
   34e68:	mov	r6, r4
   34e6c:	ldr	r4, [sp, #64]	; 0x40
   34e70:	cmp	r2, r3
   34e74:	beq	3fc88 <GetDataSlab+0xfd08>
   34e78:	ldr	r3, [fp, #16]
   34e7c:	str	r6, [sp, #68]	; 0x44
   34e80:	ldr	r3, [r3, r2, lsl #2]
   34e84:	str	r4, [r9, r2, lsl #2]
   34e88:	ldr	r9, [sp, #84]	; 0x54
   34e8c:	sub	lr, r3, #1
   34e90:	ldr	r3, [fp, #8]
   34e94:	add	r9, r9, #1
   34e98:	str	lr, [r8, r2, lsl #2]
   34e9c:	cmp	r9, #4
   34ea0:	str	r9, [sp, #84]	; 0x54
   34ea4:	ldr	r6, [r3, r2, lsl #2]
   34ea8:	str	r6, [sp, #64]	; 0x40
   34eac:	bcs	34eb8 <GetDataSlab+0x4f38>
   34eb0:	mov	r3, r2
   34eb4:	b	34f48 <GetDataSlab+0x4fc8>
   34eb8:	vmov.i32	q9, #1	; 0x00000001
   34ebc:	vmov.i32	q10, #1	; 0x00000001
   34ec0:	vmov.32	d23[1], r6
   34ec4:	vmov.i32	q8, #1	; 0x00000001
   34ec8:	bic	r3, r9, #3
   34ecc:	bic	r8, r2, #3
   34ed0:	mov	r6, sl
   34ed4:	str	r3, [sp, #60]	; 0x3c
   34ed8:	sub	r3, r2, r3
   34edc:	vmov.32	d18[0], r4
   34ee0:	vmov.32	d20[0], lr
   34ee4:	vorr	d16, d18, d18
   34ee8:	vmov.i32	q9, #1	; 0x00000001
   34eec:	vorr	d18, d20, d20
   34ef0:	vld1.32	{d20-d21}, [r6], ip
   34ef4:	subs	r8, r8, #4
   34ef8:	vrev64.32	q12, q10
   34efc:	vext.8	q12, q12, q12, #8
   34f00:	vext.8	q11, q11, q12, #12
   34f04:	vmul.i32	q9, q9, q12
   34f08:	vmul.i32	q8, q11, q8
   34f0c:	vorr	q11, q12, q12
   34f10:	bne	34ef0 <GetDataSlab+0x4f70>
   34f14:	vext.8	q11, q9, q8, #8
   34f18:	vext.8	q12, q8, q8, #8
   34f1c:	ldr	r6, [sp, #60]	; 0x3c
   34f20:	vmul.i32	q0, q9, q11
   34f24:	vmul.i32	q1, q8, q12
   34f28:	cmp	r9, r6
   34f2c:	vmul.i32	q8, q0, d0[1]
   34f30:	vmul.i32	q9, q1, d2[1]
   34f34:	vmov.32	lr, d16[0]
   34f38:	vmov.32	r4, d18[0]
   34f3c:	beq	34e28 <GetDataSlab+0x4ea8>
   34f40:	vmov.32	r6, d20[0]
   34f44:	sub	r8, fp, #96	; 0x60
   34f48:	mul	r4, r6, r4
   34f4c:	ldr	r6, [r0, r3, lsl #2]
   34f50:	subs	r3, r3, #1
   34f54:	mul	lr, lr, r6
   34f58:	bne	34f48 <GetDataSlab+0x4fc8>
   34f5c:	b	34e2c <GetDataSlab+0x4eac>
   34f60:	ldr	r5, [sl]
   34f64:	mov	r7, #0
   34f68:	sub	r9, fp, #176	; 0xb0
   34f6c:	sub	r8, fp, #96	; 0x60
   34f70:	sub	r0, r5, #1
   34f74:	str	r0, [fp, #-96]	; 0xffffffa0
   34f78:	ldr	r0, [r3]
   34f7c:	str	r0, [sp, #72]	; 0x48
   34f80:	str	r0, [fp, #-176]	; 0xffffff50
   34f84:	ldr	r0, [fp, #20]
   34f88:	ldr	r1, [r0]
   34f8c:	ldr	r0, [fp, #24]
   34f90:	cmp	r0, #2
   34f94:	mov	r0, r1
   34f98:	str	r1, [sp, #76]	; 0x4c
   34f9c:	blt	3fe1c <GetDataSlab+0xfe9c>
   34fa0:	ldr	r0, [fp, #8]
   34fa4:	ldr	r4, [sp, #72]	; 0x48
   34fa8:	mov	r3, #0
   34fac:	mvn	ip, #15
   34fb0:	mov	r7, #0
   34fb4:	str	r1, [sp, #76]	; 0x4c
   34fb8:	str	r3, [sp, #84]	; 0x54
   34fbc:	mov	r3, r1
   34fc0:	mov	r2, r0
   34fc4:	sub	r0, r0, #4
   34fc8:	mov	r6, r4
   34fcc:	sub	sl, r2, #12
   34fd0:	mov	r2, #1
   34fd4:	b	35028 <GetDataSlab+0x50a8>
   34fd8:	sub	r8, fp, #96	; 0x60
   34fdc:	ldr	r3, [fp, #12]
   34fe0:	sub	r9, fp, #176	; 0xb0
   34fe4:	str	lr, [r8, r2, lsl #2]
   34fe8:	ldr	r6, [sp, #68]	; 0x44
   34fec:	add	sl, sl, #4
   34ff0:	str	r4, [r9, r2, lsl #2]
   34ff4:	ldr	r3, [r3, r2, lsl #2]
   34ff8:	mla	r7, r3, r6, r7
   34ffc:	ldr	r3, [fp, #20]
   35000:	ldr	r6, [sp, #76]	; 0x4c
   35004:	ldr	r3, [r3, r2, lsl #2]
   35008:	add	r2, r2, #1
   3500c:	mul	r6, r3, r6
   35010:	ldr	r3, [fp, #24]
   35014:	str	r6, [sp, #76]	; 0x4c
   35018:	mov	r6, r4
   3501c:	ldr	r4, [sp, #64]	; 0x40
   35020:	cmp	r2, r3
   35024:	beq	3fe1c <GetDataSlab+0xfe9c>
   35028:	ldr	r3, [fp, #16]
   3502c:	str	r6, [sp, #68]	; 0x44
   35030:	ldr	r3, [r3, r2, lsl #2]
   35034:	str	r4, [r9, r2, lsl #2]
   35038:	ldr	r9, [sp, #84]	; 0x54
   3503c:	sub	lr, r3, #1
   35040:	ldr	r3, [fp, #8]
   35044:	add	r9, r9, #1
   35048:	str	lr, [r8, r2, lsl #2]
   3504c:	cmp	r9, #4
   35050:	str	r9, [sp, #84]	; 0x54
   35054:	ldr	r6, [r3, r2, lsl #2]
   35058:	str	r6, [sp, #64]	; 0x40
   3505c:	bcs	35068 <GetDataSlab+0x50e8>
   35060:	mov	r3, r2
   35064:	b	350f8 <GetDataSlab+0x5178>
   35068:	vmov.i32	q9, #1	; 0x00000001
   3506c:	vmov.i32	q10, #1	; 0x00000001
   35070:	vmov.32	d23[1], r6
   35074:	vmov.i32	q8, #1	; 0x00000001
   35078:	bic	r3, r9, #3
   3507c:	bic	r8, r2, #3
   35080:	mov	r6, sl
   35084:	str	r3, [sp, #60]	; 0x3c
   35088:	sub	r3, r2, r3
   3508c:	vmov.32	d18[0], r4
   35090:	vmov.32	d20[0], lr
   35094:	vorr	d16, d18, d18
   35098:	vmov.i32	q9, #1	; 0x00000001
   3509c:	vorr	d18, d20, d20
   350a0:	vld1.32	{d20-d21}, [r6], ip
   350a4:	subs	r8, r8, #4
   350a8:	vrev64.32	q12, q10
   350ac:	vext.8	q12, q12, q12, #8
   350b0:	vext.8	q11, q11, q12, #12
   350b4:	vmul.i32	q9, q9, q12
   350b8:	vmul.i32	q8, q11, q8
   350bc:	vorr	q11, q12, q12
   350c0:	bne	350a0 <GetDataSlab+0x5120>
   350c4:	vext.8	q11, q9, q8, #8
   350c8:	vext.8	q12, q8, q8, #8
   350cc:	ldr	r6, [sp, #60]	; 0x3c
   350d0:	vmul.i32	q0, q9, q11
   350d4:	vmul.i32	q1, q8, q12
   350d8:	cmp	r9, r6
   350dc:	vmul.i32	q8, q0, d0[1]
   350e0:	vmul.i32	q9, q1, d2[1]
   350e4:	vmov.32	lr, d16[0]
   350e8:	vmov.32	r4, d18[0]
   350ec:	beq	34fd8 <GetDataSlab+0x5058>
   350f0:	vmov.32	r6, d20[0]
   350f4:	sub	r8, fp, #96	; 0x60
   350f8:	mul	r4, r6, r4
   350fc:	ldr	r6, [r0, r3, lsl #2]
   35100:	subs	r3, r3, #1
   35104:	mul	lr, lr, r6
   35108:	bne	350f8 <GetDataSlab+0x5178>
   3510c:	b	34fdc <GetDataSlab+0x505c>
   35110:	ldr	r5, [sl]
   35114:	mov	r7, #0
   35118:	sub	r9, fp, #176	; 0xb0
   3511c:	sub	r8, fp, #96	; 0x60
   35120:	sub	r0, r5, #1
   35124:	str	r0, [fp, #-96]	; 0xffffffa0
   35128:	ldr	r0, [r3]
   3512c:	str	r0, [sp, #72]	; 0x48
   35130:	str	r0, [fp, #-176]	; 0xffffff50
   35134:	ldr	r0, [fp, #20]
   35138:	ldr	r1, [r0]
   3513c:	ldr	r0, [fp, #24]
   35140:	cmp	r0, #2
   35144:	mov	r0, r1
   35148:	str	r1, [sp, #76]	; 0x4c
   3514c:	blt	3ffb0 <GetDataSlab+0x10030>
   35150:	ldr	r0, [fp, #8]
   35154:	ldr	r4, [sp, #72]	; 0x48
   35158:	mov	r3, #0
   3515c:	mvn	ip, #15
   35160:	mov	r7, #0
   35164:	str	r1, [sp, #76]	; 0x4c
   35168:	str	r3, [sp, #84]	; 0x54
   3516c:	mov	r3, r1
   35170:	mov	r2, r0
   35174:	sub	r0, r0, #4
   35178:	mov	r6, r4
   3517c:	sub	sl, r2, #12
   35180:	mov	r2, #1
   35184:	b	351d8 <GetDataSlab+0x5258>
   35188:	sub	r8, fp, #96	; 0x60
   3518c:	ldr	r3, [fp, #12]
   35190:	sub	r9, fp, #176	; 0xb0
   35194:	str	lr, [r8, r2, lsl #2]
   35198:	ldr	r6, [sp, #68]	; 0x44
   3519c:	add	sl, sl, #4
   351a0:	str	r4, [r9, r2, lsl #2]
   351a4:	ldr	r3, [r3, r2, lsl #2]
   351a8:	mla	r7, r3, r6, r7
   351ac:	ldr	r3, [fp, #20]
   351b0:	ldr	r6, [sp, #76]	; 0x4c
   351b4:	ldr	r3, [r3, r2, lsl #2]
   351b8:	add	r2, r2, #1
   351bc:	mul	r6, r3, r6
   351c0:	ldr	r3, [fp, #24]
   351c4:	str	r6, [sp, #76]	; 0x4c
   351c8:	mov	r6, r4
   351cc:	ldr	r4, [sp, #64]	; 0x40
   351d0:	cmp	r2, r3
   351d4:	beq	3ffb0 <GetDataSlab+0x10030>
   351d8:	ldr	r3, [fp, #16]
   351dc:	str	r6, [sp, #68]	; 0x44
   351e0:	ldr	r3, [r3, r2, lsl #2]
   351e4:	str	r4, [r9, r2, lsl #2]
   351e8:	ldr	r9, [sp, #84]	; 0x54
   351ec:	sub	lr, r3, #1
   351f0:	ldr	r3, [fp, #8]
   351f4:	add	r9, r9, #1
   351f8:	str	lr, [r8, r2, lsl #2]
   351fc:	cmp	r9, #4
   35200:	str	r9, [sp, #84]	; 0x54
   35204:	ldr	r6, [r3, r2, lsl #2]
   35208:	str	r6, [sp, #64]	; 0x40
   3520c:	bcs	35218 <GetDataSlab+0x5298>
   35210:	mov	r3, r2
   35214:	b	352a8 <GetDataSlab+0x5328>
   35218:	vmov.i32	q9, #1	; 0x00000001
   3521c:	vmov.i32	q10, #1	; 0x00000001
   35220:	vmov.32	d23[1], r6
   35224:	vmov.i32	q8, #1	; 0x00000001
   35228:	bic	r3, r9, #3
   3522c:	bic	r8, r2, #3
   35230:	mov	r6, sl
   35234:	str	r3, [sp, #60]	; 0x3c
   35238:	sub	r3, r2, r3
   3523c:	vmov.32	d18[0], r4
   35240:	vmov.32	d20[0], lr
   35244:	vorr	d16, d18, d18
   35248:	vmov.i32	q9, #1	; 0x00000001
   3524c:	vorr	d18, d20, d20
   35250:	vld1.32	{d20-d21}, [r6], ip
   35254:	subs	r8, r8, #4
   35258:	vrev64.32	q12, q10
   3525c:	vext.8	q12, q12, q12, #8
   35260:	vext.8	q11, q11, q12, #12
   35264:	vmul.i32	q9, q9, q12
   35268:	vmul.i32	q8, q11, q8
   3526c:	vorr	q11, q12, q12
   35270:	bne	35250 <GetDataSlab+0x52d0>
   35274:	vext.8	q11, q9, q8, #8
   35278:	vext.8	q12, q8, q8, #8
   3527c:	ldr	r6, [sp, #60]	; 0x3c
   35280:	vmul.i32	q0, q9, q11
   35284:	vmul.i32	q1, q8, q12
   35288:	cmp	r9, r6
   3528c:	vmul.i32	q8, q0, d0[1]
   35290:	vmul.i32	q9, q1, d2[1]
   35294:	vmov.32	lr, d16[0]
   35298:	vmov.32	r4, d18[0]
   3529c:	beq	35188 <GetDataSlab+0x5208>
   352a0:	vmov.32	r6, d20[0]
   352a4:	sub	r8, fp, #96	; 0x60
   352a8:	mul	r4, r6, r4
   352ac:	ldr	r6, [r0, r3, lsl #2]
   352b0:	subs	r3, r3, #1
   352b4:	mul	lr, lr, r6
   352b8:	bne	352a8 <GetDataSlab+0x5328>
   352bc:	b	3518c <GetDataSlab+0x520c>
   352c0:	ldr	r5, [sl]
   352c4:	mov	r7, #0
   352c8:	sub	r9, fp, #176	; 0xb0
   352cc:	sub	r8, fp, #96	; 0x60
   352d0:	sub	r0, r5, #1
   352d4:	str	r0, [fp, #-96]	; 0xffffffa0
   352d8:	ldr	r0, [r3]
   352dc:	str	r0, [sp, #72]	; 0x48
   352e0:	str	r0, [fp, #-176]	; 0xffffff50
   352e4:	ldr	r0, [fp, #20]
   352e8:	ldr	r1, [r0]
   352ec:	ldr	r0, [fp, #24]
   352f0:	cmp	r0, #2
   352f4:	mov	r0, r1
   352f8:	str	r1, [sp, #76]	; 0x4c
   352fc:	blt	40150 <GetDataSlab+0x101d0>
   35300:	ldr	r0, [fp, #8]
   35304:	ldr	r4, [sp, #72]	; 0x48
   35308:	mov	r3, #0
   3530c:	mvn	ip, #15
   35310:	mov	r7, #0
   35314:	str	r1, [sp, #76]	; 0x4c
   35318:	str	r3, [sp, #84]	; 0x54
   3531c:	mov	r3, r1
   35320:	mov	r2, r0
   35324:	sub	r0, r0, #4
   35328:	mov	r6, r4
   3532c:	sub	sl, r2, #12
   35330:	mov	r2, #1
   35334:	b	35388 <GetDataSlab+0x5408>
   35338:	sub	r8, fp, #96	; 0x60
   3533c:	ldr	r3, [fp, #12]
   35340:	sub	r9, fp, #176	; 0xb0
   35344:	str	lr, [r8, r2, lsl #2]
   35348:	ldr	r6, [sp, #68]	; 0x44
   3534c:	add	sl, sl, #4
   35350:	str	r4, [r9, r2, lsl #2]
   35354:	ldr	r3, [r3, r2, lsl #2]
   35358:	mla	r7, r3, r6, r7
   3535c:	ldr	r3, [fp, #20]
   35360:	ldr	r6, [sp, #76]	; 0x4c
   35364:	ldr	r3, [r3, r2, lsl #2]
   35368:	add	r2, r2, #1
   3536c:	mul	r6, r3, r6
   35370:	ldr	r3, [fp, #24]
   35374:	str	r6, [sp, #76]	; 0x4c
   35378:	mov	r6, r4
   3537c:	ldr	r4, [sp, #64]	; 0x40
   35380:	cmp	r2, r3
   35384:	beq	40150 <GetDataSlab+0x101d0>
   35388:	ldr	r3, [fp, #16]
   3538c:	str	r6, [sp, #68]	; 0x44
   35390:	ldr	r3, [r3, r2, lsl #2]
   35394:	str	r4, [r9, r2, lsl #2]
   35398:	ldr	r9, [sp, #84]	; 0x54
   3539c:	sub	lr, r3, #1
   353a0:	ldr	r3, [fp, #8]
   353a4:	add	r9, r9, #1
   353a8:	str	lr, [r8, r2, lsl #2]
   353ac:	cmp	r9, #4
   353b0:	str	r9, [sp, #84]	; 0x54
   353b4:	ldr	r6, [r3, r2, lsl #2]
   353b8:	str	r6, [sp, #64]	; 0x40
   353bc:	bcs	353c8 <GetDataSlab+0x5448>
   353c0:	mov	r3, r2
   353c4:	b	35458 <GetDataSlab+0x54d8>
   353c8:	vmov.i32	q9, #1	; 0x00000001
   353cc:	vmov.i32	q10, #1	; 0x00000001
   353d0:	vmov.32	d23[1], r6
   353d4:	vmov.i32	q8, #1	; 0x00000001
   353d8:	bic	r3, r9, #3
   353dc:	bic	r8, r2, #3
   353e0:	mov	r6, sl
   353e4:	str	r3, [sp, #60]	; 0x3c
   353e8:	sub	r3, r2, r3
   353ec:	vmov.32	d18[0], r4
   353f0:	vmov.32	d20[0], lr
   353f4:	vorr	d16, d18, d18
   353f8:	vmov.i32	q9, #1	; 0x00000001
   353fc:	vorr	d18, d20, d20
   35400:	vld1.32	{d20-d21}, [r6], ip
   35404:	subs	r8, r8, #4
   35408:	vrev64.32	q12, q10
   3540c:	vext.8	q12, q12, q12, #8
   35410:	vext.8	q11, q11, q12, #12
   35414:	vmul.i32	q9, q9, q12
   35418:	vmul.i32	q8, q11, q8
   3541c:	vorr	q11, q12, q12
   35420:	bne	35400 <GetDataSlab+0x5480>
   35424:	vext.8	q11, q9, q8, #8
   35428:	vext.8	q12, q8, q8, #8
   3542c:	ldr	r6, [sp, #60]	; 0x3c
   35430:	vmul.i32	q0, q9, q11
   35434:	vmul.i32	q1, q8, q12
   35438:	cmp	r9, r6
   3543c:	vmul.i32	q8, q0, d0[1]
   35440:	vmul.i32	q9, q1, d2[1]
   35444:	vmov.32	lr, d16[0]
   35448:	vmov.32	r4, d18[0]
   3544c:	beq	35338 <GetDataSlab+0x53b8>
   35450:	vmov.32	r6, d20[0]
   35454:	sub	r8, fp, #96	; 0x60
   35458:	mul	r4, r6, r4
   3545c:	ldr	r6, [r0, r3, lsl #2]
   35460:	subs	r3, r3, #1
   35464:	mul	lr, lr, r6
   35468:	bne	35458 <GetDataSlab+0x54d8>
   3546c:	b	3533c <GetDataSlab+0x53bc>
   35470:	ldr	r7, [sl]
   35474:	sub	r6, fp, #176	; 0xb0
   35478:	sub	r8, fp, #96	; 0x60
   3547c:	sub	r0, r7, #1
   35480:	str	r0, [fp, #-96]	; 0xffffffa0
   35484:	ldr	r0, [r3]
   35488:	mov	r3, #0
   3548c:	str	r0, [sp, #64]	; 0x40
   35490:	str	r0, [fp, #-176]	; 0xffffff50
   35494:	ldr	r0, [fp, #20]
   35498:	ldr	r1, [r0]
   3549c:	ldr	r0, [fp, #24]
   354a0:	cmp	r0, #2
   354a4:	mov	r0, r1
   354a8:	str	r1, [sp, #68]	; 0x44
   354ac:	blt	402f0 <GetDataSlab+0x10370>
   354b0:	ldr	r0, [fp, #8]
   354b4:	ldr	r5, [sp, #64]	; 0x40
   354b8:	mov	ip, #1
   354bc:	mvn	sl, #15
   354c0:	mov	r3, #0
   354c4:	str	r1, [sp, #68]	; 0x44
   354c8:	mov	r2, r0
   354cc:	sub	r0, r0, #4
   354d0:	mov	r4, r5
   354d4:	sub	lr, r2, #12
   354d8:	mov	r2, #0
   354dc:	str	r2, [sp, #84]	; 0x54
   354e0:	mov	r2, r1
   354e4:	b	35538 <GetDataSlab+0x55b8>
   354e8:	ldr	r4, [sp, #56]	; 0x38
   354ec:	sub	r8, fp, #96	; 0x60
   354f0:	ldr	r2, [fp, #12]
   354f4:	sub	r6, fp, #176	; 0xb0
   354f8:	str	r9, [r8, ip, lsl #2]
   354fc:	add	lr, lr, #4
   35500:	str	r5, [r6, ip, lsl #2]
   35504:	ldr	r2, [r2, ip, lsl #2]
   35508:	mla	r3, r2, r4, r3
   3550c:	ldr	r2, [fp, #20]
   35510:	ldr	r4, [sp, #68]	; 0x44
   35514:	ldr	r2, [r2, ip, lsl #2]
   35518:	add	ip, ip, #1
   3551c:	mul	r4, r2, r4
   35520:	ldr	r2, [fp, #24]
   35524:	str	r4, [sp, #68]	; 0x44
   35528:	mov	r4, r5
   3552c:	ldr	r5, [sp, #72]	; 0x48
   35530:	cmp	ip, r2
   35534:	beq	402f0 <GetDataSlab+0x10370>
   35538:	ldr	r2, [fp, #16]
   3553c:	ldr	r2, [r2, ip, lsl #2]
   35540:	str	r5, [r6, ip, lsl #2]
   35544:	sub	r9, r2, #1
   35548:	ldr	r2, [fp, #8]
   3554c:	str	r9, [r8, ip, lsl #2]
   35550:	ldr	r6, [r2, ip, lsl #2]
   35554:	ldr	r2, [sp, #84]	; 0x54
   35558:	add	r2, r2, #1
   3555c:	str	r6, [sp, #72]	; 0x48
   35560:	cmp	r2, #4
   35564:	str	r2, [sp, #84]	; 0x54
   35568:	bcs	35578 <GetDataSlab+0x55f8>
   3556c:	mov	r2, r6
   35570:	mov	r6, ip
   35574:	b	35614 <GetDataSlab+0x5694>
   35578:	vmov.i32	q9, #1	; 0x00000001
   3557c:	vmov.i32	q10, #1	; 0x00000001
   35580:	vmov.32	d23[1], r6
   35584:	vmov.i32	q8, #1	; 0x00000001
   35588:	bic	r2, r2, #3
   3558c:	bic	r8, ip, #3
   35590:	str	r4, [sp, #56]	; 0x38
   35594:	str	r2, [sp, #60]	; 0x3c
   35598:	sub	r6, ip, r2
   3559c:	mov	r2, lr
   355a0:	vmov.32	d18[0], r5
   355a4:	vmov.32	d20[0], r9
   355a8:	vorr	d16, d18, d18
   355ac:	vmov.i32	q9, #1	; 0x00000001
   355b0:	vorr	d18, d20, d20
   355b4:	vld1.32	{d20-d21}, [r2], sl
   355b8:	subs	r8, r8, #4
   355bc:	vrev64.32	q12, q10
   355c0:	vext.8	q12, q12, q12, #8
   355c4:	vext.8	q11, q11, q12, #12
   355c8:	vmul.i32	q9, q9, q12
   355cc:	vmul.i32	q8, q11, q8
   355d0:	vorr	q11, q12, q12
   355d4:	bne	355b4 <GetDataSlab+0x5634>
   355d8:	vext.8	q11, q9, q8, #8
   355dc:	vext.8	q12, q8, q8, #8
   355e0:	ldr	r2, [sp, #84]	; 0x54
   355e4:	ldr	r4, [sp, #60]	; 0x3c
   355e8:	vmul.i32	q0, q9, q11
   355ec:	vmul.i32	q1, q8, q12
   355f0:	cmp	r2, r4
   355f4:	vmul.i32	q8, q0, d0[1]
   355f8:	vmul.i32	q9, q1, d2[1]
   355fc:	vmov.32	r9, d16[0]
   35600:	vmov.32	r5, d18[0]
   35604:	beq	354e8 <GetDataSlab+0x5568>
   35608:	vmov.32	r2, d20[0]
   3560c:	ldr	r4, [sp, #56]	; 0x38
   35610:	sub	r8, fp, #96	; 0x60
   35614:	mul	r5, r2, r5
   35618:	ldr	r2, [r0, r6, lsl #2]
   3561c:	subs	r6, r6, #1
   35620:	mul	r9, r9, r2
   35624:	bne	35614 <GetDataSlab+0x5694>
   35628:	b	354f0 <GetDataSlab+0x5570>
   3562c:	ldr	r5, [sl]
   35630:	mov	r7, #0
   35634:	sub	r9, fp, #176	; 0xb0
   35638:	sub	r8, fp, #96	; 0x60
   3563c:	sub	r0, r5, #1
   35640:	str	r0, [fp, #-96]	; 0xffffffa0
   35644:	ldr	r0, [r3]
   35648:	str	r0, [sp, #72]	; 0x48
   3564c:	str	r0, [fp, #-176]	; 0xffffff50
   35650:	ldr	r0, [fp, #20]
   35654:	ldr	r1, [r0]
   35658:	ldr	r0, [fp, #24]
   3565c:	cmp	r0, #2
   35660:	mov	r0, r1
   35664:	str	r1, [sp, #76]	; 0x4c
   35668:	blt	40478 <GetDataSlab+0x104f8>
   3566c:	ldr	r0, [fp, #8]
   35670:	ldr	r4, [sp, #72]	; 0x48
   35674:	mov	r3, #0
   35678:	mvn	ip, #15
   3567c:	mov	r7, #0
   35680:	str	r1, [sp, #76]	; 0x4c
   35684:	str	r3, [sp, #84]	; 0x54
   35688:	mov	r3, r1
   3568c:	mov	r2, r0
   35690:	sub	r0, r0, #4
   35694:	mov	r6, r4
   35698:	sub	sl, r2, #12
   3569c:	mov	r2, #1
   356a0:	b	356f4 <GetDataSlab+0x5774>
   356a4:	sub	r8, fp, #96	; 0x60
   356a8:	ldr	r3, [fp, #12]
   356ac:	sub	r9, fp, #176	; 0xb0
   356b0:	str	lr, [r8, r2, lsl #2]
   356b4:	ldr	r6, [sp, #68]	; 0x44
   356b8:	add	sl, sl, #4
   356bc:	str	r4, [r9, r2, lsl #2]
   356c0:	ldr	r3, [r3, r2, lsl #2]
   356c4:	mla	r7, r3, r6, r7
   356c8:	ldr	r3, [fp, #20]
   356cc:	ldr	r6, [sp, #76]	; 0x4c
   356d0:	ldr	r3, [r3, r2, lsl #2]
   356d4:	add	r2, r2, #1
   356d8:	mul	r6, r3, r6
   356dc:	ldr	r3, [fp, #24]
   356e0:	str	r6, [sp, #76]	; 0x4c
   356e4:	mov	r6, r4
   356e8:	ldr	r4, [sp, #64]	; 0x40
   356ec:	cmp	r2, r3
   356f0:	beq	40478 <GetDataSlab+0x104f8>
   356f4:	ldr	r3, [fp, #16]
   356f8:	str	r6, [sp, #68]	; 0x44
   356fc:	ldr	r3, [r3, r2, lsl #2]
   35700:	str	r4, [r9, r2, lsl #2]
   35704:	ldr	r9, [sp, #84]	; 0x54
   35708:	sub	lr, r3, #1
   3570c:	ldr	r3, [fp, #8]
   35710:	add	r9, r9, #1
   35714:	str	lr, [r8, r2, lsl #2]
   35718:	cmp	r9, #4
   3571c:	str	r9, [sp, #84]	; 0x54
   35720:	ldr	r6, [r3, r2, lsl #2]
   35724:	str	r6, [sp, #64]	; 0x40
   35728:	bcs	35734 <GetDataSlab+0x57b4>
   3572c:	mov	r3, r2
   35730:	b	357c4 <GetDataSlab+0x5844>
   35734:	vmov.i32	q9, #1	; 0x00000001
   35738:	vmov.i32	q10, #1	; 0x00000001
   3573c:	vmov.32	d23[1], r6
   35740:	vmov.i32	q8, #1	; 0x00000001
   35744:	bic	r3, r9, #3
   35748:	bic	r8, r2, #3
   3574c:	mov	r6, sl
   35750:	str	r3, [sp, #60]	; 0x3c
   35754:	sub	r3, r2, r3
   35758:	vmov.32	d18[0], r4
   3575c:	vmov.32	d20[0], lr
   35760:	vorr	d16, d18, d18
   35764:	vmov.i32	q9, #1	; 0x00000001
   35768:	vorr	d18, d20, d20
   3576c:	vld1.32	{d20-d21}, [r6], ip
   35770:	subs	r8, r8, #4
   35774:	vrev64.32	q12, q10
   35778:	vext.8	q12, q12, q12, #8
   3577c:	vext.8	q11, q11, q12, #12
   35780:	vmul.i32	q9, q9, q12
   35784:	vmul.i32	q8, q11, q8
   35788:	vorr	q11, q12, q12
   3578c:	bne	3576c <GetDataSlab+0x57ec>
   35790:	vext.8	q11, q9, q8, #8
   35794:	vext.8	q12, q8, q8, #8
   35798:	ldr	r6, [sp, #60]	; 0x3c
   3579c:	vmul.i32	q0, q9, q11
   357a0:	vmul.i32	q1, q8, q12
   357a4:	cmp	r9, r6
   357a8:	vmul.i32	q8, q0, d0[1]
   357ac:	vmul.i32	q9, q1, d2[1]
   357b0:	vmov.32	lr, d16[0]
   357b4:	vmov.32	r4, d18[0]
   357b8:	beq	356a4 <GetDataSlab+0x5724>
   357bc:	vmov.32	r6, d20[0]
   357c0:	sub	r8, fp, #96	; 0x60
   357c4:	mul	r4, r6, r4
   357c8:	ldr	r6, [r0, r3, lsl #2]
   357cc:	subs	r3, r3, #1
   357d0:	mul	lr, lr, r6
   357d4:	bne	357c4 <GetDataSlab+0x5844>
   357d8:	b	356a8 <GetDataSlab+0x5728>
   357dc:	ldr	r5, [sl]
   357e0:	mov	r7, #0
   357e4:	sub	r9, fp, #176	; 0xb0
   357e8:	sub	r8, fp, #96	; 0x60
   357ec:	sub	r0, r5, #1
   357f0:	str	r0, [fp, #-96]	; 0xffffffa0
   357f4:	ldr	r0, [r3]
   357f8:	str	r0, [sp, #72]	; 0x48
   357fc:	str	r0, [fp, #-176]	; 0xffffff50
   35800:	ldr	r0, [fp, #20]
   35804:	ldr	r1, [r0]
   35808:	ldr	r0, [fp, #24]
   3580c:	cmp	r0, #2
   35810:	mov	r0, r1
   35814:	str	r1, [sp, #76]	; 0x4c
   35818:	blt	4060c <GetDataSlab+0x1068c>
   3581c:	ldr	r0, [fp, #8]
   35820:	ldr	r4, [sp, #72]	; 0x48
   35824:	mov	r3, #0
   35828:	mvn	ip, #15
   3582c:	mov	r7, #0
   35830:	str	r1, [sp, #76]	; 0x4c
   35834:	str	r3, [sp, #84]	; 0x54
   35838:	mov	r3, r1
   3583c:	mov	r2, r0
   35840:	sub	r0, r0, #4
   35844:	mov	r6, r4
   35848:	sub	sl, r2, #12
   3584c:	mov	r2, #1
   35850:	b	358a4 <GetDataSlab+0x5924>
   35854:	sub	r8, fp, #96	; 0x60
   35858:	ldr	r3, [fp, #12]
   3585c:	sub	r9, fp, #176	; 0xb0
   35860:	str	lr, [r8, r2, lsl #2]
   35864:	ldr	r6, [sp, #68]	; 0x44
   35868:	add	sl, sl, #4
   3586c:	str	r4, [r9, r2, lsl #2]
   35870:	ldr	r3, [r3, r2, lsl #2]
   35874:	mla	r7, r3, r6, r7
   35878:	ldr	r3, [fp, #20]
   3587c:	ldr	r6, [sp, #76]	; 0x4c
   35880:	ldr	r3, [r3, r2, lsl #2]
   35884:	add	r2, r2, #1
   35888:	mul	r6, r3, r6
   3588c:	ldr	r3, [fp, #24]
   35890:	str	r6, [sp, #76]	; 0x4c
   35894:	mov	r6, r4
   35898:	ldr	r4, [sp, #64]	; 0x40
   3589c:	cmp	r2, r3
   358a0:	beq	4060c <GetDataSlab+0x1068c>
   358a4:	ldr	r3, [fp, #16]
   358a8:	str	r6, [sp, #68]	; 0x44
   358ac:	ldr	r3, [r3, r2, lsl #2]
   358b0:	str	r4, [r9, r2, lsl #2]
   358b4:	ldr	r9, [sp, #84]	; 0x54
   358b8:	sub	lr, r3, #1
   358bc:	ldr	r3, [fp, #8]
   358c0:	add	r9, r9, #1
   358c4:	str	lr, [r8, r2, lsl #2]
   358c8:	cmp	r9, #4
   358cc:	str	r9, [sp, #84]	; 0x54
   358d0:	ldr	r6, [r3, r2, lsl #2]
   358d4:	str	r6, [sp, #64]	; 0x40
   358d8:	bcs	358e4 <GetDataSlab+0x5964>
   358dc:	mov	r3, r2
   358e0:	b	35974 <GetDataSlab+0x59f4>
   358e4:	vmov.i32	q9, #1	; 0x00000001
   358e8:	vmov.i32	q10, #1	; 0x00000001
   358ec:	vmov.32	d23[1], r6
   358f0:	vmov.i32	q8, #1	; 0x00000001
   358f4:	bic	r3, r9, #3
   358f8:	bic	r8, r2, #3
   358fc:	mov	r6, sl
   35900:	str	r3, [sp, #60]	; 0x3c
   35904:	sub	r3, r2, r3
   35908:	vmov.32	d18[0], r4
   3590c:	vmov.32	d20[0], lr
   35910:	vorr	d16, d18, d18
   35914:	vmov.i32	q9, #1	; 0x00000001
   35918:	vorr	d18, d20, d20
   3591c:	vld1.32	{d20-d21}, [r6], ip
   35920:	subs	r8, r8, #4
   35924:	vrev64.32	q12, q10
   35928:	vext.8	q12, q12, q12, #8
   3592c:	vext.8	q11, q11, q12, #12
   35930:	vmul.i32	q9, q9, q12
   35934:	vmul.i32	q8, q11, q8
   35938:	vorr	q11, q12, q12
   3593c:	bne	3591c <GetDataSlab+0x599c>
   35940:	vext.8	q11, q9, q8, #8
   35944:	vext.8	q12, q8, q8, #8
   35948:	ldr	r6, [sp, #60]	; 0x3c
   3594c:	vmul.i32	q0, q9, q11
   35950:	vmul.i32	q1, q8, q12
   35954:	cmp	r9, r6
   35958:	vmul.i32	q8, q0, d0[1]
   3595c:	vmul.i32	q9, q1, d2[1]
   35960:	vmov.32	lr, d16[0]
   35964:	vmov.32	r4, d18[0]
   35968:	beq	35854 <GetDataSlab+0x58d4>
   3596c:	vmov.32	r6, d20[0]
   35970:	sub	r8, fp, #96	; 0x60
   35974:	mul	r4, r6, r4
   35978:	ldr	r6, [r0, r3, lsl #2]
   3597c:	subs	r3, r3, #1
   35980:	mul	lr, lr, r6
   35984:	bne	35974 <GetDataSlab+0x59f4>
   35988:	b	35858 <GetDataSlab+0x58d8>
   3598c:	ldr	r5, [sl]
   35990:	mov	r7, #0
   35994:	sub	r9, fp, #176	; 0xb0
   35998:	sub	r8, fp, #96	; 0x60
   3599c:	sub	r0, r5, #1
   359a0:	str	r0, [fp, #-96]	; 0xffffffa0
   359a4:	ldr	r0, [r3]
   359a8:	str	r0, [sp, #72]	; 0x48
   359ac:	str	r0, [fp, #-176]	; 0xffffff50
   359b0:	ldr	r0, [fp, #20]
   359b4:	ldr	r1, [r0]
   359b8:	ldr	r0, [fp, #24]
   359bc:	cmp	r0, #2
   359c0:	mov	r0, r1
   359c4:	str	r1, [sp, #76]	; 0x4c
   359c8:	blt	407a0 <GetDataSlab+0x10820>
   359cc:	ldr	r0, [fp, #8]
   359d0:	ldr	r4, [sp, #72]	; 0x48
   359d4:	mov	r3, #0
   359d8:	mvn	ip, #15
   359dc:	mov	r7, #0
   359e0:	str	r1, [sp, #76]	; 0x4c
   359e4:	str	r3, [sp, #84]	; 0x54
   359e8:	mov	r3, r1
   359ec:	mov	r2, r0
   359f0:	sub	r0, r0, #4
   359f4:	mov	r6, r4
   359f8:	sub	sl, r2, #12
   359fc:	mov	r2, #1
   35a00:	b	35a54 <GetDataSlab+0x5ad4>
   35a04:	sub	r8, fp, #96	; 0x60
   35a08:	ldr	r3, [fp, #12]
   35a0c:	sub	r9, fp, #176	; 0xb0
   35a10:	str	lr, [r8, r2, lsl #2]
   35a14:	ldr	r6, [sp, #68]	; 0x44
   35a18:	add	sl, sl, #4
   35a1c:	str	r4, [r9, r2, lsl #2]
   35a20:	ldr	r3, [r3, r2, lsl #2]
   35a24:	mla	r7, r3, r6, r7
   35a28:	ldr	r3, [fp, #20]
   35a2c:	ldr	r6, [sp, #76]	; 0x4c
   35a30:	ldr	r3, [r3, r2, lsl #2]
   35a34:	add	r2, r2, #1
   35a38:	mul	r6, r3, r6
   35a3c:	ldr	r3, [fp, #24]
   35a40:	str	r6, [sp, #76]	; 0x4c
   35a44:	mov	r6, r4
   35a48:	ldr	r4, [sp, #64]	; 0x40
   35a4c:	cmp	r2, r3
   35a50:	beq	407a0 <GetDataSlab+0x10820>
   35a54:	ldr	r3, [fp, #16]
   35a58:	str	r6, [sp, #68]	; 0x44
   35a5c:	ldr	r3, [r3, r2, lsl #2]
   35a60:	str	r4, [r9, r2, lsl #2]
   35a64:	ldr	r9, [sp, #84]	; 0x54
   35a68:	sub	lr, r3, #1
   35a6c:	ldr	r3, [fp, #8]
   35a70:	add	r9, r9, #1
   35a74:	str	lr, [r8, r2, lsl #2]
   35a78:	cmp	r9, #4
   35a7c:	str	r9, [sp, #84]	; 0x54
   35a80:	ldr	r6, [r3, r2, lsl #2]
   35a84:	str	r6, [sp, #64]	; 0x40
   35a88:	bcs	35a94 <GetDataSlab+0x5b14>
   35a8c:	mov	r3, r2
   35a90:	b	35b24 <GetDataSlab+0x5ba4>
   35a94:	vmov.i32	q9, #1	; 0x00000001
   35a98:	vmov.i32	q10, #1	; 0x00000001
   35a9c:	vmov.32	d23[1], r6
   35aa0:	vmov.i32	q8, #1	; 0x00000001
   35aa4:	bic	r3, r9, #3
   35aa8:	bic	r8, r2, #3
   35aac:	mov	r6, sl
   35ab0:	str	r3, [sp, #60]	; 0x3c
   35ab4:	sub	r3, r2, r3
   35ab8:	vmov.32	d18[0], r4
   35abc:	vmov.32	d20[0], lr
   35ac0:	vorr	d16, d18, d18
   35ac4:	vmov.i32	q9, #1	; 0x00000001
   35ac8:	vorr	d18, d20, d20
   35acc:	vld1.32	{d20-d21}, [r6], ip
   35ad0:	subs	r8, r8, #4
   35ad4:	vrev64.32	q12, q10
   35ad8:	vext.8	q12, q12, q12, #8
   35adc:	vext.8	q11, q11, q12, #12
   35ae0:	vmul.i32	q9, q9, q12
   35ae4:	vmul.i32	q8, q11, q8
   35ae8:	vorr	q11, q12, q12
   35aec:	bne	35acc <GetDataSlab+0x5b4c>
   35af0:	vext.8	q11, q9, q8, #8
   35af4:	vext.8	q12, q8, q8, #8
   35af8:	ldr	r6, [sp, #60]	; 0x3c
   35afc:	vmul.i32	q0, q9, q11
   35b00:	vmul.i32	q1, q8, q12
   35b04:	cmp	r9, r6
   35b08:	vmul.i32	q8, q0, d0[1]
   35b0c:	vmul.i32	q9, q1, d2[1]
   35b10:	vmov.32	lr, d16[0]
   35b14:	vmov.32	r4, d18[0]
   35b18:	beq	35a04 <GetDataSlab+0x5a84>
   35b1c:	vmov.32	r6, d20[0]
   35b20:	sub	r8, fp, #96	; 0x60
   35b24:	mul	r4, r6, r4
   35b28:	ldr	r6, [r0, r3, lsl #2]
   35b2c:	subs	r3, r3, #1
   35b30:	mul	lr, lr, r6
   35b34:	bne	35b24 <GetDataSlab+0x5ba4>
   35b38:	b	35a08 <GetDataSlab+0x5a88>
   35b3c:	ldr	r5, [sl]
   35b40:	mov	r7, #0
   35b44:	sub	r9, fp, #176	; 0xb0
   35b48:	sub	r8, fp, #96	; 0x60
   35b4c:	sub	r0, r5, #1
   35b50:	str	r0, [fp, #-96]	; 0xffffffa0
   35b54:	ldr	r0, [r3]
   35b58:	str	r0, [sp, #72]	; 0x48
   35b5c:	str	r0, [fp, #-176]	; 0xffffff50
   35b60:	ldr	r0, [fp, #20]
   35b64:	ldr	r1, [r0]
   35b68:	ldr	r0, [fp, #24]
   35b6c:	cmp	r0, #2
   35b70:	mov	r0, r1
   35b74:	str	r1, [sp, #76]	; 0x4c
   35b78:	blt	40934 <GetDataSlab+0x109b4>
   35b7c:	ldr	r0, [fp, #8]
   35b80:	ldr	r4, [sp, #72]	; 0x48
   35b84:	mov	r3, #0
   35b88:	mvn	ip, #15
   35b8c:	mov	r7, #0
   35b90:	str	r1, [sp, #76]	; 0x4c
   35b94:	str	r3, [sp, #84]	; 0x54
   35b98:	mov	r3, r1
   35b9c:	mov	r2, r0
   35ba0:	sub	r0, r0, #4
   35ba4:	mov	r6, r4
   35ba8:	sub	sl, r2, #12
   35bac:	mov	r2, #1
   35bb0:	b	35c04 <GetDataSlab+0x5c84>
   35bb4:	sub	r8, fp, #96	; 0x60
   35bb8:	ldr	r3, [fp, #12]
   35bbc:	sub	r9, fp, #176	; 0xb0
   35bc0:	str	lr, [r8, r2, lsl #2]
   35bc4:	ldr	r6, [sp, #68]	; 0x44
   35bc8:	add	sl, sl, #4
   35bcc:	str	r4, [r9, r2, lsl #2]
   35bd0:	ldr	r3, [r3, r2, lsl #2]
   35bd4:	mla	r7, r3, r6, r7
   35bd8:	ldr	r3, [fp, #20]
   35bdc:	ldr	r6, [sp, #76]	; 0x4c
   35be0:	ldr	r3, [r3, r2, lsl #2]
   35be4:	add	r2, r2, #1
   35be8:	mul	r6, r3, r6
   35bec:	ldr	r3, [fp, #24]
   35bf0:	str	r6, [sp, #76]	; 0x4c
   35bf4:	mov	r6, r4
   35bf8:	ldr	r4, [sp, #64]	; 0x40
   35bfc:	cmp	r2, r3
   35c00:	beq	40934 <GetDataSlab+0x109b4>
   35c04:	ldr	r3, [fp, #16]
   35c08:	str	r6, [sp, #68]	; 0x44
   35c0c:	ldr	r3, [r3, r2, lsl #2]
   35c10:	str	r4, [r9, r2, lsl #2]
   35c14:	ldr	r9, [sp, #84]	; 0x54
   35c18:	sub	lr, r3, #1
   35c1c:	ldr	r3, [fp, #8]
   35c20:	add	r9, r9, #1
   35c24:	str	lr, [r8, r2, lsl #2]
   35c28:	cmp	r9, #4
   35c2c:	str	r9, [sp, #84]	; 0x54
   35c30:	ldr	r6, [r3, r2, lsl #2]
   35c34:	str	r6, [sp, #64]	; 0x40
   35c38:	bcs	35c44 <GetDataSlab+0x5cc4>
   35c3c:	mov	r3, r2
   35c40:	b	35cd4 <GetDataSlab+0x5d54>
   35c44:	vmov.i32	q9, #1	; 0x00000001
   35c48:	vmov.i32	q10, #1	; 0x00000001
   35c4c:	vmov.32	d23[1], r6
   35c50:	vmov.i32	q8, #1	; 0x00000001
   35c54:	bic	r3, r9, #3
   35c58:	bic	r8, r2, #3
   35c5c:	mov	r6, sl
   35c60:	str	r3, [sp, #60]	; 0x3c
   35c64:	sub	r3, r2, r3
   35c68:	vmov.32	d18[0], r4
   35c6c:	vmov.32	d20[0], lr
   35c70:	vorr	d16, d18, d18
   35c74:	vmov.i32	q9, #1	; 0x00000001
   35c78:	vorr	d18, d20, d20
   35c7c:	vld1.32	{d20-d21}, [r6], ip
   35c80:	subs	r8, r8, #4
   35c84:	vrev64.32	q12, q10
   35c88:	vext.8	q12, q12, q12, #8
   35c8c:	vext.8	q11, q11, q12, #12
   35c90:	vmul.i32	q9, q9, q12
   35c94:	vmul.i32	q8, q11, q8
   35c98:	vorr	q11, q12, q12
   35c9c:	bne	35c7c <GetDataSlab+0x5cfc>
   35ca0:	vext.8	q11, q9, q8, #8
   35ca4:	vext.8	q12, q8, q8, #8
   35ca8:	ldr	r6, [sp, #60]	; 0x3c
   35cac:	vmul.i32	q0, q9, q11
   35cb0:	vmul.i32	q1, q8, q12
   35cb4:	cmp	r9, r6
   35cb8:	vmul.i32	q8, q0, d0[1]
   35cbc:	vmul.i32	q9, q1, d2[1]
   35cc0:	vmov.32	lr, d16[0]
   35cc4:	vmov.32	r4, d18[0]
   35cc8:	beq	35bb4 <GetDataSlab+0x5c34>
   35ccc:	vmov.32	r6, d20[0]
   35cd0:	sub	r8, fp, #96	; 0x60
   35cd4:	mul	r4, r6, r4
   35cd8:	ldr	r6, [r0, r3, lsl #2]
   35cdc:	subs	r3, r3, #1
   35ce0:	mul	lr, lr, r6
   35ce4:	bne	35cd4 <GetDataSlab+0x5d54>
   35ce8:	b	35bb8 <GetDataSlab+0x5c38>
   35cec:	ldr	r5, [sl]
   35cf0:	mov	r7, #0
   35cf4:	sub	r9, fp, #176	; 0xb0
   35cf8:	sub	r8, fp, #96	; 0x60
   35cfc:	sub	r0, r5, #1
   35d00:	str	r0, [fp, #-96]	; 0xffffffa0
   35d04:	ldr	r0, [r3]
   35d08:	str	r0, [sp, #72]	; 0x48
   35d0c:	str	r0, [fp, #-176]	; 0xffffff50
   35d10:	ldr	r0, [fp, #20]
   35d14:	ldr	r1, [r0]
   35d18:	ldr	r0, [fp, #24]
   35d1c:	cmp	r0, #2
   35d20:	mov	r0, r1
   35d24:	str	r1, [sp, #76]	; 0x4c
   35d28:	blt	40ac8 <GetDataSlab+0x10b48>
   35d2c:	ldr	r0, [fp, #8]
   35d30:	ldr	r4, [sp, #72]	; 0x48
   35d34:	mov	r3, #0
   35d38:	mvn	ip, #15
   35d3c:	mov	r7, #0
   35d40:	str	r1, [sp, #76]	; 0x4c
   35d44:	str	r3, [sp, #84]	; 0x54
   35d48:	mov	r3, r1
   35d4c:	mov	r2, r0
   35d50:	sub	r0, r0, #4
   35d54:	mov	r6, r4
   35d58:	sub	sl, r2, #12
   35d5c:	mov	r2, #1
   35d60:	b	35db4 <GetDataSlab+0x5e34>
   35d64:	sub	r8, fp, #96	; 0x60
   35d68:	ldr	r3, [fp, #12]
   35d6c:	sub	r9, fp, #176	; 0xb0
   35d70:	str	lr, [r8, r2, lsl #2]
   35d74:	ldr	r6, [sp, #68]	; 0x44
   35d78:	add	sl, sl, #4
   35d7c:	str	r4, [r9, r2, lsl #2]
   35d80:	ldr	r3, [r3, r2, lsl #2]
   35d84:	mla	r7, r3, r6, r7
   35d88:	ldr	r3, [fp, #20]
   35d8c:	ldr	r6, [sp, #76]	; 0x4c
   35d90:	ldr	r3, [r3, r2, lsl #2]
   35d94:	add	r2, r2, #1
   35d98:	mul	r6, r3, r6
   35d9c:	ldr	r3, [fp, #24]
   35da0:	str	r6, [sp, #76]	; 0x4c
   35da4:	mov	r6, r4
   35da8:	ldr	r4, [sp, #64]	; 0x40
   35dac:	cmp	r2, r3
   35db0:	beq	40ac8 <GetDataSlab+0x10b48>
   35db4:	ldr	r3, [fp, #16]
   35db8:	str	r6, [sp, #68]	; 0x44
   35dbc:	ldr	r3, [r3, r2, lsl #2]
   35dc0:	str	r4, [r9, r2, lsl #2]
   35dc4:	ldr	r9, [sp, #84]	; 0x54
   35dc8:	sub	lr, r3, #1
   35dcc:	ldr	r3, [fp, #8]
   35dd0:	add	r9, r9, #1
   35dd4:	str	lr, [r8, r2, lsl #2]
   35dd8:	cmp	r9, #4
   35ddc:	str	r9, [sp, #84]	; 0x54
   35de0:	ldr	r6, [r3, r2, lsl #2]
   35de4:	str	r6, [sp, #64]	; 0x40
   35de8:	bcs	35df4 <GetDataSlab+0x5e74>
   35dec:	mov	r3, r2
   35df0:	b	35e84 <GetDataSlab+0x5f04>
   35df4:	vmov.i32	q9, #1	; 0x00000001
   35df8:	vmov.i32	q10, #1	; 0x00000001
   35dfc:	vmov.32	d23[1], r6
   35e00:	vmov.i32	q8, #1	; 0x00000001
   35e04:	bic	r3, r9, #3
   35e08:	bic	r8, r2, #3
   35e0c:	mov	r6, sl
   35e10:	str	r3, [sp, #60]	; 0x3c
   35e14:	sub	r3, r2, r3
   35e18:	vmov.32	d18[0], r4
   35e1c:	vmov.32	d20[0], lr
   35e20:	vorr	d16, d18, d18
   35e24:	vmov.i32	q9, #1	; 0x00000001
   35e28:	vorr	d18, d20, d20
   35e2c:	vld1.32	{d20-d21}, [r6], ip
   35e30:	subs	r8, r8, #4
   35e34:	vrev64.32	q12, q10
   35e38:	vext.8	q12, q12, q12, #8
   35e3c:	vext.8	q11, q11, q12, #12
   35e40:	vmul.i32	q9, q9, q12
   35e44:	vmul.i32	q8, q11, q8
   35e48:	vorr	q11, q12, q12
   35e4c:	bne	35e2c <GetDataSlab+0x5eac>
   35e50:	vext.8	q11, q9, q8, #8
   35e54:	vext.8	q12, q8, q8, #8
   35e58:	ldr	r6, [sp, #60]	; 0x3c
   35e5c:	vmul.i32	q0, q9, q11
   35e60:	vmul.i32	q1, q8, q12
   35e64:	cmp	r9, r6
   35e68:	vmul.i32	q8, q0, d0[1]
   35e6c:	vmul.i32	q9, q1, d2[1]
   35e70:	vmov.32	lr, d16[0]
   35e74:	vmov.32	r4, d18[0]
   35e78:	beq	35d64 <GetDataSlab+0x5de4>
   35e7c:	vmov.32	r6, d20[0]
   35e80:	sub	r8, fp, #96	; 0x60
   35e84:	mul	r4, r6, r4
   35e88:	ldr	r6, [r0, r3, lsl #2]
   35e8c:	subs	r3, r3, #1
   35e90:	mul	lr, lr, r6
   35e94:	bne	35e84 <GetDataSlab+0x5f04>
   35e98:	b	35d68 <GetDataSlab+0x5de8>
   35e9c:	ldr	r5, [sl]
   35ea0:	mov	r7, #0
   35ea4:	sub	r9, fp, #176	; 0xb0
   35ea8:	sub	r8, fp, #96	; 0x60
   35eac:	sub	r0, r5, #1
   35eb0:	str	r0, [fp, #-96]	; 0xffffffa0
   35eb4:	ldr	r0, [r3]
   35eb8:	str	r0, [sp, #72]	; 0x48
   35ebc:	str	r0, [fp, #-176]	; 0xffffff50
   35ec0:	ldr	r0, [fp, #20]
   35ec4:	ldr	r1, [r0]
   35ec8:	ldr	r0, [fp, #24]
   35ecc:	cmp	r0, #2
   35ed0:	mov	r0, r1
   35ed4:	str	r1, [sp, #76]	; 0x4c
   35ed8:	blt	40c5c <GetDataSlab+0x10cdc>
   35edc:	ldr	r0, [fp, #8]
   35ee0:	ldr	r4, [sp, #72]	; 0x48
   35ee4:	mov	r3, #0
   35ee8:	mvn	ip, #15
   35eec:	mov	r7, #0
   35ef0:	str	r1, [sp, #76]	; 0x4c
   35ef4:	str	r3, [sp, #84]	; 0x54
   35ef8:	mov	r3, r1
   35efc:	mov	r2, r0
   35f00:	sub	r0, r0, #4
   35f04:	mov	r6, r4
   35f08:	sub	sl, r2, #12
   35f0c:	mov	r2, #1
   35f10:	b	35f64 <GetDataSlab+0x5fe4>
   35f14:	sub	r8, fp, #96	; 0x60
   35f18:	ldr	r3, [fp, #12]
   35f1c:	sub	r9, fp, #176	; 0xb0
   35f20:	str	lr, [r8, r2, lsl #2]
   35f24:	ldr	r6, [sp, #68]	; 0x44
   35f28:	add	sl, sl, #4
   35f2c:	str	r4, [r9, r2, lsl #2]
   35f30:	ldr	r3, [r3, r2, lsl #2]
   35f34:	mla	r7, r3, r6, r7
   35f38:	ldr	r3, [fp, #20]
   35f3c:	ldr	r6, [sp, #76]	; 0x4c
   35f40:	ldr	r3, [r3, r2, lsl #2]
   35f44:	add	r2, r2, #1
   35f48:	mul	r6, r3, r6
   35f4c:	ldr	r3, [fp, #24]
   35f50:	str	r6, [sp, #76]	; 0x4c
   35f54:	mov	r6, r4
   35f58:	ldr	r4, [sp, #64]	; 0x40
   35f5c:	cmp	r2, r3
   35f60:	beq	40c5c <GetDataSlab+0x10cdc>
   35f64:	ldr	r3, [fp, #16]
   35f68:	str	r6, [sp, #68]	; 0x44
   35f6c:	ldr	r3, [r3, r2, lsl #2]
   35f70:	str	r4, [r9, r2, lsl #2]
   35f74:	ldr	r9, [sp, #84]	; 0x54
   35f78:	sub	lr, r3, #1
   35f7c:	ldr	r3, [fp, #8]
   35f80:	add	r9, r9, #1
   35f84:	str	lr, [r8, r2, lsl #2]
   35f88:	cmp	r9, #4
   35f8c:	str	r9, [sp, #84]	; 0x54
   35f90:	ldr	r6, [r3, r2, lsl #2]
   35f94:	str	r6, [sp, #64]	; 0x40
   35f98:	bcs	35fa4 <GetDataSlab+0x6024>
   35f9c:	mov	r3, r2
   35fa0:	b	36034 <GetDataSlab+0x60b4>
   35fa4:	vmov.i32	q9, #1	; 0x00000001
   35fa8:	vmov.i32	q10, #1	; 0x00000001
   35fac:	vmov.32	d23[1], r6
   35fb0:	vmov.i32	q8, #1	; 0x00000001
   35fb4:	bic	r3, r9, #3
   35fb8:	bic	r8, r2, #3
   35fbc:	mov	r6, sl
   35fc0:	str	r3, [sp, #60]	; 0x3c
   35fc4:	sub	r3, r2, r3
   35fc8:	vmov.32	d18[0], r4
   35fcc:	vmov.32	d20[0], lr
   35fd0:	vorr	d16, d18, d18
   35fd4:	vmov.i32	q9, #1	; 0x00000001
   35fd8:	vorr	d18, d20, d20
   35fdc:	vld1.32	{d20-d21}, [r6], ip
   35fe0:	subs	r8, r8, #4
   35fe4:	vrev64.32	q12, q10
   35fe8:	vext.8	q12, q12, q12, #8
   35fec:	vext.8	q11, q11, q12, #12
   35ff0:	vmul.i32	q9, q9, q12
   35ff4:	vmul.i32	q8, q11, q8
   35ff8:	vorr	q11, q12, q12
   35ffc:	bne	35fdc <GetDataSlab+0x605c>
   36000:	vext.8	q11, q9, q8, #8
   36004:	vext.8	q12, q8, q8, #8
   36008:	ldr	r6, [sp, #60]	; 0x3c
   3600c:	vmul.i32	q0, q9, q11
   36010:	vmul.i32	q1, q8, q12
   36014:	cmp	r9, r6
   36018:	vmul.i32	q8, q0, d0[1]
   3601c:	vmul.i32	q9, q1, d2[1]
   36020:	vmov.32	lr, d16[0]
   36024:	vmov.32	r4, d18[0]
   36028:	beq	35f14 <GetDataSlab+0x5f94>
   3602c:	vmov.32	r6, d20[0]
   36030:	sub	r8, fp, #96	; 0x60
   36034:	mul	r4, r6, r4
   36038:	ldr	r6, [r0, r3, lsl #2]
   3603c:	subs	r3, r3, #1
   36040:	mul	lr, lr, r6
   36044:	bne	36034 <GetDataSlab+0x60b4>
   36048:	b	35f18 <GetDataSlab+0x5f98>
   3604c:	ldr	r5, [sl]
   36050:	mov	r7, #0
   36054:	sub	r9, fp, #176	; 0xb0
   36058:	sub	r8, fp, #96	; 0x60
   3605c:	sub	r0, r5, #1
   36060:	str	r0, [fp, #-96]	; 0xffffffa0
   36064:	ldr	r0, [r3]
   36068:	str	r0, [sp, #72]	; 0x48
   3606c:	str	r0, [fp, #-176]	; 0xffffff50
   36070:	ldr	r0, [fp, #20]
   36074:	ldr	r1, [r0]
   36078:	ldr	r0, [fp, #24]
   3607c:	cmp	r0, #2
   36080:	mov	r0, r1
   36084:	str	r1, [sp, #76]	; 0x4c
   36088:	blt	40dfc <GetDataSlab+0x10e7c>
   3608c:	ldr	r0, [fp, #8]
   36090:	ldr	r4, [sp, #72]	; 0x48
   36094:	mov	r3, #0
   36098:	mvn	ip, #15
   3609c:	mov	r7, #0
   360a0:	str	r1, [sp, #76]	; 0x4c
   360a4:	str	r3, [sp, #84]	; 0x54
   360a8:	mov	r3, r1
   360ac:	mov	r2, r0
   360b0:	sub	r0, r0, #4
   360b4:	mov	r6, r4
   360b8:	sub	sl, r2, #12
   360bc:	mov	r2, #1
   360c0:	b	36114 <GetDataSlab+0x6194>
   360c4:	sub	r8, fp, #96	; 0x60
   360c8:	ldr	r3, [fp, #12]
   360cc:	sub	r9, fp, #176	; 0xb0
   360d0:	str	lr, [r8, r2, lsl #2]
   360d4:	ldr	r6, [sp, #68]	; 0x44
   360d8:	add	sl, sl, #4
   360dc:	str	r4, [r9, r2, lsl #2]
   360e0:	ldr	r3, [r3, r2, lsl #2]
   360e4:	mla	r7, r3, r6, r7
   360e8:	ldr	r3, [fp, #20]
   360ec:	ldr	r6, [sp, #76]	; 0x4c
   360f0:	ldr	r3, [r3, r2, lsl #2]
   360f4:	add	r2, r2, #1
   360f8:	mul	r6, r3, r6
   360fc:	ldr	r3, [fp, #24]
   36100:	str	r6, [sp, #76]	; 0x4c
   36104:	mov	r6, r4
   36108:	ldr	r4, [sp, #64]	; 0x40
   3610c:	cmp	r2, r3
   36110:	beq	40dfc <GetDataSlab+0x10e7c>
   36114:	ldr	r3, [fp, #16]
   36118:	str	r6, [sp, #68]	; 0x44
   3611c:	ldr	r3, [r3, r2, lsl #2]
   36120:	str	r4, [r9, r2, lsl #2]
   36124:	ldr	r9, [sp, #84]	; 0x54
   36128:	sub	lr, r3, #1
   3612c:	ldr	r3, [fp, #8]
   36130:	add	r9, r9, #1
   36134:	str	lr, [r8, r2, lsl #2]
   36138:	cmp	r9, #4
   3613c:	str	r9, [sp, #84]	; 0x54
   36140:	ldr	r6, [r3, r2, lsl #2]
   36144:	str	r6, [sp, #64]	; 0x40
   36148:	bcs	36154 <GetDataSlab+0x61d4>
   3614c:	mov	r3, r2
   36150:	b	361e4 <GetDataSlab+0x6264>
   36154:	vmov.i32	q9, #1	; 0x00000001
   36158:	vmov.i32	q10, #1	; 0x00000001
   3615c:	vmov.32	d23[1], r6
   36160:	vmov.i32	q8, #1	; 0x00000001
   36164:	bic	r3, r9, #3
   36168:	bic	r8, r2, #3
   3616c:	mov	r6, sl
   36170:	str	r3, [sp, #60]	; 0x3c
   36174:	sub	r3, r2, r3
   36178:	vmov.32	d18[0], r4
   3617c:	vmov.32	d20[0], lr
   36180:	vorr	d16, d18, d18
   36184:	vmov.i32	q9, #1	; 0x00000001
   36188:	vorr	d18, d20, d20
   3618c:	vld1.32	{d20-d21}, [r6], ip
   36190:	subs	r8, r8, #4
   36194:	vrev64.32	q12, q10
   36198:	vext.8	q12, q12, q12, #8
   3619c:	vext.8	q11, q11, q12, #12
   361a0:	vmul.i32	q9, q9, q12
   361a4:	vmul.i32	q8, q11, q8
   361a8:	vorr	q11, q12, q12
   361ac:	bne	3618c <GetDataSlab+0x620c>
   361b0:	vext.8	q11, q9, q8, #8
   361b4:	vext.8	q12, q8, q8, #8
   361b8:	ldr	r6, [sp, #60]	; 0x3c
   361bc:	vmul.i32	q0, q9, q11
   361c0:	vmul.i32	q1, q8, q12
   361c4:	cmp	r9, r6
   361c8:	vmul.i32	q8, q0, d0[1]
   361cc:	vmul.i32	q9, q1, d2[1]
   361d0:	vmov.32	lr, d16[0]
   361d4:	vmov.32	r4, d18[0]
   361d8:	beq	360c4 <GetDataSlab+0x6144>
   361dc:	vmov.32	r6, d20[0]
   361e0:	sub	r8, fp, #96	; 0x60
   361e4:	mul	r4, r6, r4
   361e8:	ldr	r6, [r0, r3, lsl #2]
   361ec:	subs	r3, r3, #1
   361f0:	mul	lr, lr, r6
   361f4:	bne	361e4 <GetDataSlab+0x6264>
   361f8:	b	360c8 <GetDataSlab+0x6148>
   361fc:	ldr	r7, [sl]
   36200:	sub	r6, fp, #176	; 0xb0
   36204:	sub	r8, fp, #96	; 0x60
   36208:	sub	r0, r7, #1
   3620c:	str	r0, [fp, #-96]	; 0xffffffa0
   36210:	ldr	r0, [r3]
   36214:	mov	r3, #0
   36218:	str	r0, [sp, #64]	; 0x40
   3621c:	str	r0, [fp, #-176]	; 0xffffff50
   36220:	ldr	r0, [fp, #20]
   36224:	ldr	r1, [r0]
   36228:	ldr	r0, [fp, #24]
   3622c:	cmp	r0, #2
   36230:	mov	r0, r1
   36234:	str	r1, [sp, #68]	; 0x44
   36238:	blt	40f9c <GetDataSlab+0x1101c>
   3623c:	ldr	r0, [fp, #8]
   36240:	ldr	r5, [sp, #64]	; 0x40
   36244:	mov	ip, #1
   36248:	mvn	sl, #15
   3624c:	mov	r3, #0
   36250:	str	r1, [sp, #68]	; 0x44
   36254:	mov	r2, r0
   36258:	sub	r0, r0, #4
   3625c:	mov	r4, r5
   36260:	sub	lr, r2, #12
   36264:	mov	r2, #0
   36268:	str	r2, [sp, #84]	; 0x54
   3626c:	mov	r2, r1
   36270:	b	362c4 <GetDataSlab+0x6344>
   36274:	ldr	r4, [sp, #56]	; 0x38
   36278:	sub	r8, fp, #96	; 0x60
   3627c:	ldr	r2, [fp, #12]
   36280:	sub	r6, fp, #176	; 0xb0
   36284:	str	r9, [r8, ip, lsl #2]
   36288:	add	lr, lr, #4
   3628c:	str	r5, [r6, ip, lsl #2]
   36290:	ldr	r2, [r2, ip, lsl #2]
   36294:	mla	r3, r2, r4, r3
   36298:	ldr	r2, [fp, #20]
   3629c:	ldr	r4, [sp, #68]	; 0x44
   362a0:	ldr	r2, [r2, ip, lsl #2]
   362a4:	add	ip, ip, #1
   362a8:	mul	r4, r2, r4
   362ac:	ldr	r2, [fp, #24]
   362b0:	str	r4, [sp, #68]	; 0x44
   362b4:	mov	r4, r5
   362b8:	ldr	r5, [sp, #72]	; 0x48
   362bc:	cmp	ip, r2
   362c0:	beq	40f9c <GetDataSlab+0x1101c>
   362c4:	ldr	r2, [fp, #16]
   362c8:	ldr	r2, [r2, ip, lsl #2]
   362cc:	str	r5, [r6, ip, lsl #2]
   362d0:	sub	r9, r2, #1
   362d4:	ldr	r2, [fp, #8]
   362d8:	str	r9, [r8, ip, lsl #2]
   362dc:	ldr	r6, [r2, ip, lsl #2]
   362e0:	ldr	r2, [sp, #84]	; 0x54
   362e4:	add	r2, r2, #1
   362e8:	str	r6, [sp, #72]	; 0x48
   362ec:	cmp	r2, #4
   362f0:	str	r2, [sp, #84]	; 0x54
   362f4:	bcs	36304 <GetDataSlab+0x6384>
   362f8:	mov	r2, r6
   362fc:	mov	r6, ip
   36300:	b	363a0 <GetDataSlab+0x6420>
   36304:	vmov.i32	q9, #1	; 0x00000001
   36308:	vmov.i32	q10, #1	; 0x00000001
   3630c:	vmov.32	d23[1], r6
   36310:	vmov.i32	q8, #1	; 0x00000001
   36314:	bic	r2, r2, #3
   36318:	bic	r8, ip, #3
   3631c:	str	r4, [sp, #56]	; 0x38
   36320:	str	r2, [sp, #60]	; 0x3c
   36324:	sub	r6, ip, r2
   36328:	mov	r2, lr
   3632c:	vmov.32	d18[0], r5
   36330:	vmov.32	d20[0], r9
   36334:	vorr	d16, d18, d18
   36338:	vmov.i32	q9, #1	; 0x00000001
   3633c:	vorr	d18, d20, d20
   36340:	vld1.32	{d20-d21}, [r2], sl
   36344:	subs	r8, r8, #4
   36348:	vrev64.32	q12, q10
   3634c:	vext.8	q12, q12, q12, #8
   36350:	vext.8	q11, q11, q12, #12
   36354:	vmul.i32	q9, q9, q12
   36358:	vmul.i32	q8, q11, q8
   3635c:	vorr	q11, q12, q12
   36360:	bne	36340 <GetDataSlab+0x63c0>
   36364:	vext.8	q11, q9, q8, #8
   36368:	vext.8	q12, q8, q8, #8
   3636c:	ldr	r2, [sp, #84]	; 0x54
   36370:	ldr	r4, [sp, #60]	; 0x3c
   36374:	vmul.i32	q0, q9, q11
   36378:	vmul.i32	q1, q8, q12
   3637c:	cmp	r2, r4
   36380:	vmul.i32	q8, q0, d0[1]
   36384:	vmul.i32	q9, q1, d2[1]
   36388:	vmov.32	r9, d16[0]
   3638c:	vmov.32	r5, d18[0]
   36390:	beq	36274 <GetDataSlab+0x62f4>
   36394:	vmov.32	r2, d20[0]
   36398:	ldr	r4, [sp, #56]	; 0x38
   3639c:	sub	r8, fp, #96	; 0x60
   363a0:	mul	r5, r2, r5
   363a4:	ldr	r2, [r0, r6, lsl #2]
   363a8:	subs	r6, r6, #1
   363ac:	mul	r9, r9, r2
   363b0:	bne	363a0 <GetDataSlab+0x6420>
   363b4:	b	3627c <GetDataSlab+0x62fc>
   363b8:	ldr	sl, [sl]
   363bc:	mov	r3, #0
   363c0:	sub	lr, fp, #96	; 0x60
   363c4:	sub	r0, sl, #1
   363c8:	str	r0, [fp, #-96]	; 0xffffffa0
   363cc:	ldr	r0, [fp, #8]
   363d0:	ldr	r0, [r0]
   363d4:	str	r0, [sp, #52]	; 0x34
   363d8:	str	r0, [fp, #-176]	; 0xffffff50
   363dc:	ldr	r0, [fp, #20]
   363e0:	ldr	r1, [r0]
   363e4:	ldr	r0, [fp, #24]
   363e8:	cmp	r0, #2
   363ec:	str	r1, [sp, #56]	; 0x38
   363f0:	str	r1, [sp, #76]	; 0x4c
   363f4:	blt	41124 <GetDataSlab+0x111a4>
   363f8:	ldr	r0, [fp, #8]
   363fc:	ldr	r4, [sp, #52]	; 0x34
   36400:	mov	r2, ip
   36404:	mov	r6, #1
   36408:	mov	r9, #0
   3640c:	mvn	r5, #15
   36410:	mov	r3, #0
   36414:	mov	r1, r0
   36418:	sub	r0, r0, #4
   3641c:	mov	r8, r4
   36420:	sub	ip, r1, #12
   36424:	ldr	r1, [sp, #56]	; 0x38
   36428:	str	r1, [sp, #76]	; 0x4c
   3642c:	b	3647c <GetDataSlab+0x64fc>
   36430:	ldr	r1, [fp, #12]
   36434:	sub	r2, fp, #176	; 0xb0
   36438:	sub	lr, fp, #96	; 0x60
   3643c:	add	ip, ip, #4
   36440:	str	r7, [lr, r6, lsl #2]
   36444:	str	r4, [r2, r6, lsl #2]
   36448:	ldr	r7, [sp, #76]	; 0x4c
   3644c:	ldr	r1, [r1, r6, lsl #2]
   36450:	mla	r3, r1, r8, r3
   36454:	ldr	r1, [fp, #20]
   36458:	mov	r8, r4
   3645c:	ldr	r4, [sp, #84]	; 0x54
   36460:	ldr	r1, [r1, r6, lsl #2]
   36464:	add	r6, r6, #1
   36468:	mul	r7, r1, r7
   3646c:	ldr	r1, [fp, #24]
   36470:	str	r7, [sp, #76]	; 0x4c
   36474:	cmp	r6, r1
   36478:	beq	41124 <GetDataSlab+0x111a4>
   3647c:	ldr	r1, [fp, #16]
   36480:	add	r9, r9, #1
   36484:	cmp	r9, #4
   36488:	ldr	r1, [r1, r6, lsl #2]
   3648c:	str	r4, [r2, r6, lsl #2]
   36490:	sub	r7, r1, #1
   36494:	ldr	r1, [fp, #8]
   36498:	str	r7, [lr, r6, lsl #2]
   3649c:	ldr	r2, [r1, r6, lsl #2]
   364a0:	str	r2, [sp, #84]	; 0x54
   364a4:	bcs	364b4 <GetDataSlab+0x6534>
   364a8:	mov	r1, r2
   364ac:	mov	r2, r6
   364b0:	b	36548 <GetDataSlab+0x65c8>
   364b4:	vmov.i32	q9, #1	; 0x00000001
   364b8:	vmov.i32	q10, #1	; 0x00000001
   364bc:	vmov.32	d23[1], r2
   364c0:	mov	r1, r9
   364c4:	vmov.i32	q8, #1	; 0x00000001
   364c8:	bic	r9, r6, #3
   364cc:	str	r1, [sp, #72]	; 0x48
   364d0:	bic	r1, r1, #3
   364d4:	mov	lr, r1
   364d8:	sub	r2, r6, r1
   364dc:	mov	r1, ip
   364e0:	vmov.32	d18[0], r4
   364e4:	vmov.32	d20[0], r7
   364e8:	vorr	d16, d18, d18
   364ec:	vmov.i32	q9, #1	; 0x00000001
   364f0:	vorr	d18, d20, d20
   364f4:	vld1.32	{d20-d21}, [r1], r5
   364f8:	subs	r9, r9, #4
   364fc:	vrev64.32	q12, q10
   36500:	vext.8	q12, q12, q12, #8
   36504:	vext.8	q11, q11, q12, #12
   36508:	vmul.i32	q9, q9, q12
   3650c:	vmul.i32	q8, q11, q8
   36510:	vorr	q11, q12, q12
   36514:	bne	364f4 <GetDataSlab+0x6574>
   36518:	vext.8	q11, q9, q8, #8
   3651c:	vext.8	q12, q8, q8, #8
   36520:	ldr	r9, [sp, #72]	; 0x48
   36524:	vmul.i32	q0, q9, q11
   36528:	vmul.i32	q1, q8, q12
   3652c:	cmp	r9, lr
   36530:	vmul.i32	q8, q0, d0[1]
   36534:	vmul.i32	q9, q1, d2[1]
   36538:	vmov.32	r7, d16[0]
   3653c:	vmov.32	r4, d18[0]
   36540:	beq	36430 <GetDataSlab+0x64b0>
   36544:	vmov.32	r1, d20[0]
   36548:	mul	r4, r1, r4
   3654c:	ldr	r1, [r0, r2, lsl #2]
   36550:	subs	r2, r2, #1
   36554:	mul	r7, r7, r1
   36558:	bne	36548 <GetDataSlab+0x65c8>
   3655c:	b	36430 <GetDataSlab+0x64b0>
   36560:	ldr	r0, [sl]
   36564:	mov	r1, #0
   36568:	sub	r6, fp, #96	; 0x60
   3656c:	str	r0, [sp, #68]	; 0x44
   36570:	sub	r0, r0, #1
   36574:	str	r0, [fp, #-96]	; 0xffffffa0
   36578:	ldr	r0, [fp, #8]
   3657c:	ldr	r0, [r0]
   36580:	str	r0, [sp, #60]	; 0x3c
   36584:	str	r0, [fp, #-176]	; 0xffffff50
   36588:	ldr	r0, [fp, #20]
   3658c:	ldr	r2, [r0]
   36590:	ldr	r0, [fp, #24]
   36594:	cmp	r0, #2
   36598:	str	r2, [sp, #64]	; 0x40
   3659c:	str	r2, [sp, #76]	; 0x4c
   365a0:	blt	4148c <GetDataSlab+0x1150c>
   365a4:	ldr	r0, [fp, #8]
   365a8:	ldr	r3, [sp, #60]	; 0x3c
   365ac:	ldr	r2, [sp, #64]	; 0x40
   365b0:	mov	r5, #1
   365b4:	mov	r8, #0
   365b8:	mvn	r4, #15
   365bc:	mov	r1, r0
   365c0:	sub	r0, r0, #4
   365c4:	mov	r9, r3
   365c8:	str	r2, [sp, #76]	; 0x4c
   365cc:	sub	sl, r1, #12
   365d0:	mov	r1, #0
   365d4:	b	36624 <GetDataSlab+0x66a4>
   365d8:	sub	ip, fp, #176	; 0xb0
   365dc:	sub	r6, fp, #96	; 0x60
   365e0:	str	r3, [ip, r5, lsl #2]
   365e4:	ldr	r7, [sp, #76]	; 0x4c
   365e8:	add	sl, sl, #4
   365ec:	str	r2, [r6, r5, lsl #2]
   365f0:	ldr	r2, [fp, #12]
   365f4:	ldr	r2, [r2, r5, lsl #2]
   365f8:	mla	r1, r2, r9, r1
   365fc:	ldr	r2, [fp, #20]
   36600:	mov	r9, r3
   36604:	mov	r3, lr
   36608:	ldr	r2, [r2, r5, lsl #2]
   3660c:	add	r5, r5, #1
   36610:	mul	r7, r2, r7
   36614:	ldr	r2, [fp, #24]
   36618:	str	r7, [sp, #76]	; 0x4c
   3661c:	cmp	r5, r2
   36620:	beq	4148c <GetDataSlab+0x1150c>
   36624:	ldr	r2, [fp, #16]
   36628:	ldr	r7, [fp, #8]
   3662c:	add	r8, r8, #1
   36630:	cmp	r8, #4
   36634:	ldr	r2, [r2, r5, lsl #2]
   36638:	str	r3, [ip, r5, lsl #2]
   3663c:	sub	r2, r2, #1
   36640:	str	r2, [r6, r5, lsl #2]
   36644:	ldr	lr, [r7, r5, lsl #2]
   36648:	bcs	36658 <GetDataSlab+0x66d8>
   3664c:	mov	r7, lr
   36650:	mov	r6, r5
   36654:	b	366e0 <GetDataSlab+0x6760>
   36658:	vmov.i32	q9, #1	; 0x00000001
   3665c:	vmov.i32	q10, #1	; 0x00000001
   36660:	vmov.32	d23[1], lr
   36664:	vmov.i32	q8, #1	; 0x00000001
   36668:	bic	r7, r8, #3
   3666c:	bic	ip, r5, #3
   36670:	sub	r6, r5, r7
   36674:	vmov.32	d18[0], r3
   36678:	vmov.32	d20[0], r2
   3667c:	mov	r2, sl
   36680:	vorr	d16, d18, d18
   36684:	vmov.i32	q9, #1	; 0x00000001
   36688:	vorr	d18, d20, d20
   3668c:	vld1.32	{d20-d21}, [r2], r4
   36690:	subs	ip, ip, #4
   36694:	vrev64.32	q12, q10
   36698:	vext.8	q12, q12, q12, #8
   3669c:	vext.8	q11, q11, q12, #12
   366a0:	vmul.i32	q9, q9, q12
   366a4:	vmul.i32	q8, q11, q8
   366a8:	vorr	q11, q12, q12
   366ac:	bne	3668c <GetDataSlab+0x670c>
   366b0:	vext.8	q11, q9, q8, #8
   366b4:	vext.8	q12, q8, q8, #8
   366b8:	cmp	r8, r7
   366bc:	vmul.i32	q0, q9, q11
   366c0:	vmul.i32	q1, q8, q12
   366c4:	vmul.i32	q8, q0, d0[1]
   366c8:	vmul.i32	q9, q1, d2[1]
   366cc:	vmov.32	r2, d16[0]
   366d0:	vmov.32	r3, d18[0]
   366d4:	beq	365d8 <GetDataSlab+0x6658>
   366d8:	vmov.32	r7, d20[0]
   366dc:	sub	ip, fp, #176	; 0xb0
   366e0:	mul	r3, r7, r3
   366e4:	ldr	r7, [r0, r6, lsl #2]
   366e8:	subs	r6, r6, #1
   366ec:	mul	r2, r2, r7
   366f0:	bne	366e0 <GetDataSlab+0x6760>
   366f4:	b	365dc <GetDataSlab+0x665c>
   366f8:	ldr	r0, [sl]
   366fc:	mov	r1, #0
   36700:	sub	r6, fp, #96	; 0x60
   36704:	str	r0, [sp, #68]	; 0x44
   36708:	sub	r0, r0, #1
   3670c:	str	r0, [fp, #-96]	; 0xffffffa0
   36710:	ldr	r0, [fp, #8]
   36714:	ldr	r0, [r0]
   36718:	str	r0, [sp, #60]	; 0x3c
   3671c:	str	r0, [fp, #-176]	; 0xffffff50
   36720:	ldr	r0, [fp, #20]
   36724:	ldr	r2, [r0]
   36728:	ldr	r0, [fp, #24]
   3672c:	cmp	r0, #2
   36730:	str	r2, [sp, #64]	; 0x40
   36734:	str	r2, [sp, #76]	; 0x4c
   36738:	blt	4177c <GetDataSlab+0x117fc>
   3673c:	ldr	r0, [fp, #8]
   36740:	ldr	r3, [sp, #60]	; 0x3c
   36744:	ldr	r2, [sp, #64]	; 0x40
   36748:	mov	r5, #1
   3674c:	mov	r8, #0
   36750:	mvn	r4, #15
   36754:	mov	r1, r0
   36758:	sub	r0, r0, #4
   3675c:	mov	r9, r3
   36760:	str	r2, [sp, #76]	; 0x4c
   36764:	sub	sl, r1, #12
   36768:	mov	r1, #0
   3676c:	b	367bc <GetDataSlab+0x683c>
   36770:	sub	ip, fp, #176	; 0xb0
   36774:	sub	r6, fp, #96	; 0x60
   36778:	str	r3, [ip, r5, lsl #2]
   3677c:	ldr	r7, [sp, #76]	; 0x4c
   36780:	add	sl, sl, #4
   36784:	str	r2, [r6, r5, lsl #2]
   36788:	ldr	r2, [fp, #12]
   3678c:	ldr	r2, [r2, r5, lsl #2]
   36790:	mla	r1, r2, r9, r1
   36794:	ldr	r2, [fp, #20]
   36798:	mov	r9, r3
   3679c:	mov	r3, lr
   367a0:	ldr	r2, [r2, r5, lsl #2]
   367a4:	add	r5, r5, #1
   367a8:	mul	r7, r2, r7
   367ac:	ldr	r2, [fp, #24]
   367b0:	str	r7, [sp, #76]	; 0x4c
   367b4:	cmp	r5, r2
   367b8:	beq	4177c <GetDataSlab+0x117fc>
   367bc:	ldr	r2, [fp, #16]
   367c0:	ldr	r7, [fp, #8]
   367c4:	add	r8, r8, #1
   367c8:	cmp	r8, #4
   367cc:	ldr	r2, [r2, r5, lsl #2]
   367d0:	str	r3, [ip, r5, lsl #2]
   367d4:	sub	r2, r2, #1
   367d8:	str	r2, [r6, r5, lsl #2]
   367dc:	ldr	lr, [r7, r5, lsl #2]
   367e0:	bcs	367f0 <GetDataSlab+0x6870>
   367e4:	mov	r7, lr
   367e8:	mov	r6, r5
   367ec:	b	36878 <GetDataSlab+0x68f8>
   367f0:	vmov.i32	q9, #1	; 0x00000001
   367f4:	vmov.i32	q10, #1	; 0x00000001
   367f8:	vmov.32	d23[1], lr
   367fc:	vmov.i32	q8, #1	; 0x00000001
   36800:	bic	r7, r8, #3
   36804:	bic	ip, r5, #3
   36808:	sub	r6, r5, r7
   3680c:	vmov.32	d18[0], r3
   36810:	vmov.32	d20[0], r2
   36814:	mov	r2, sl
   36818:	vorr	d16, d18, d18
   3681c:	vmov.i32	q9, #1	; 0x00000001
   36820:	vorr	d18, d20, d20
   36824:	vld1.32	{d20-d21}, [r2], r4
   36828:	subs	ip, ip, #4
   3682c:	vrev64.32	q12, q10
   36830:	vext.8	q12, q12, q12, #8
   36834:	vext.8	q11, q11, q12, #12
   36838:	vmul.i32	q9, q9, q12
   3683c:	vmul.i32	q8, q11, q8
   36840:	vorr	q11, q12, q12
   36844:	bne	36824 <GetDataSlab+0x68a4>
   36848:	vext.8	q11, q9, q8, #8
   3684c:	vext.8	q12, q8, q8, #8
   36850:	cmp	r8, r7
   36854:	vmul.i32	q0, q9, q11
   36858:	vmul.i32	q1, q8, q12
   3685c:	vmul.i32	q8, q0, d0[1]
   36860:	vmul.i32	q9, q1, d2[1]
   36864:	vmov.32	r2, d16[0]
   36868:	vmov.32	r3, d18[0]
   3686c:	beq	36770 <GetDataSlab+0x67f0>
   36870:	vmov.32	r7, d20[0]
   36874:	sub	ip, fp, #176	; 0xb0
   36878:	mul	r3, r7, r3
   3687c:	ldr	r7, [r0, r6, lsl #2]
   36880:	subs	r6, r6, #1
   36884:	mul	r2, r2, r7
   36888:	bne	36878 <GetDataSlab+0x68f8>
   3688c:	b	36774 <GetDataSlab+0x67f4>
   36890:	ldr	r0, [sl]
   36894:	mov	r3, #0
   36898:	sub	lr, fp, #96	; 0x60
   3689c:	str	r0, [sp, #56]	; 0x38
   368a0:	sub	r0, r0, #1
   368a4:	str	r0, [fp, #-96]	; 0xffffffa0
   368a8:	ldr	r0, [fp, #8]
   368ac:	ldr	r0, [r0]
   368b0:	str	r0, [sp, #60]	; 0x3c
   368b4:	str	r0, [fp, #-176]	; 0xffffff50
   368b8:	ldr	r0, [fp, #20]
   368bc:	ldr	r1, [r0]
   368c0:	ldr	r0, [fp, #24]
   368c4:	cmp	r0, #2
   368c8:	str	r1, [sp, #72]	; 0x48
   368cc:	str	r1, [sp, #76]	; 0x4c
   368d0:	blt	41a6c <GetDataSlab+0x11aec>
   368d4:	ldr	r0, [fp, #8]
   368d8:	ldr	r5, [sp, #60]	; 0x3c
   368dc:	mov	r7, #1
   368e0:	mvn	r9, #15
   368e4:	mov	r3, #0
   368e8:	mov	r1, r0
   368ec:	sub	r0, r0, #4
   368f0:	mov	r4, r5
   368f4:	sub	sl, r1, #12
   368f8:	mov	r1, #0
   368fc:	str	r1, [sp, #84]	; 0x54
   36900:	ldr	r1, [sp, #72]	; 0x48
   36904:	str	r1, [sp, #76]	; 0x4c
   36908:	b	36968 <GetDataSlab+0x69e8>
   3690c:	ldr	r8, [sp, #88]	; 0x58
   36910:	sub	r1, fp, #176	; 0xb0
   36914:	sub	lr, fp, #96	; 0x60
   36918:	add	sl, sl, #4
   3691c:	mov	r2, r1
   36920:	str	r5, [r1, r7, lsl #2]
   36924:	ldr	r1, [fp, #12]
   36928:	str	r4, [lr, r7, lsl #2]
   3692c:	ldr	r4, [sp, #68]	; 0x44
   36930:	ldr	r1, [r1, r7, lsl #2]
   36934:	mla	r3, r1, r4, r3
   36938:	ldr	r1, [fp, #20]
   3693c:	ldr	r4, [sp, #76]	; 0x4c
   36940:	ldr	r1, [r1, r7, lsl #2]
   36944:	add	r7, r7, #1
   36948:	mul	r4, r1, r4
   3694c:	ldr	r1, [fp, #24]
   36950:	str	r4, [sp, #76]	; 0x4c
   36954:	mov	r4, r5
   36958:	mov	r5, ip
   3695c:	mov	ip, r2
   36960:	cmp	r7, r1
   36964:	beq	41a6c <GetDataSlab+0x11aec>
   36968:	ldr	r1, [fp, #16]
   3696c:	str	r4, [sp, #68]	; 0x44
   36970:	ldr	r6, [sp, #84]	; 0x54
   36974:	ldr	r1, [r1, r7, lsl #2]
   36978:	str	r5, [ip, r7, lsl #2]
   3697c:	add	r6, r6, #1
   36980:	cmp	r6, #4
   36984:	str	r6, [sp, #84]	; 0x54
   36988:	sub	r4, r1, #1
   3698c:	ldr	r1, [fp, #8]
   36990:	str	r4, [lr, r7, lsl #2]
   36994:	ldr	ip, [r1, r7, lsl #2]
   36998:	bcs	369a8 <GetDataSlab+0x6a28>
   3699c:	mov	r1, ip
   369a0:	mov	r2, r7
   369a4:	b	36a30 <GetDataSlab+0x6ab0>
   369a8:	vmov.i32	q9, #1	; 0x00000001
   369ac:	vmov.i32	q10, #1	; 0x00000001
   369b0:	vmov.32	d23[1], ip
   369b4:	vmov.i32	q8, #1	; 0x00000001
   369b8:	bic	r1, r6, #3
   369bc:	bic	r8, r7, #3
   369c0:	sub	r2, r7, r1
   369c4:	vmov.32	d18[0], r5
   369c8:	vmov.32	d20[0], r4
   369cc:	mov	r4, sl
   369d0:	vorr	d16, d18, d18
   369d4:	vmov.i32	q9, #1	; 0x00000001
   369d8:	vorr	d18, d20, d20
   369dc:	vld1.32	{d20-d21}, [r4], r9
   369e0:	subs	r8, r8, #4
   369e4:	vrev64.32	q12, q10
   369e8:	vext.8	q12, q12, q12, #8
   369ec:	vext.8	q11, q11, q12, #12
   369f0:	vmul.i32	q9, q9, q12
   369f4:	vmul.i32	q8, q11, q8
   369f8:	vorr	q11, q12, q12
   369fc:	bne	369dc <GetDataSlab+0x6a5c>
   36a00:	vext.8	q11, q9, q8, #8
   36a04:	vext.8	q12, q8, q8, #8
   36a08:	cmp	r6, r1
   36a0c:	vmul.i32	q0, q9, q11
   36a10:	vmul.i32	q1, q8, q12
   36a14:	vmul.i32	q8, q0, d0[1]
   36a18:	vmul.i32	q9, q1, d2[1]
   36a1c:	vmov.32	r4, d16[0]
   36a20:	vmov.32	r5, d18[0]
   36a24:	beq	3690c <GetDataSlab+0x698c>
   36a28:	vmov.32	r1, d20[0]
   36a2c:	ldr	r8, [sp, #88]	; 0x58
   36a30:	mul	r5, r1, r5
   36a34:	ldr	r1, [r0, r2, lsl #2]
   36a38:	subs	r2, r2, #1
   36a3c:	mul	r4, r4, r1
   36a40:	bne	36a30 <GetDataSlab+0x6ab0>
   36a44:	b	36910 <GetDataSlab+0x6990>
   36a48:	ldr	r0, [sl]
   36a4c:	mov	r3, #0
   36a50:	sub	lr, fp, #96	; 0x60
   36a54:	str	r0, [sp, #56]	; 0x38
   36a58:	sub	r0, r0, #1
   36a5c:	str	r0, [fp, #-96]	; 0xffffffa0
   36a60:	ldr	r0, [fp, #8]
   36a64:	ldr	r0, [r0]
   36a68:	str	r0, [sp, #60]	; 0x3c
   36a6c:	str	r0, [fp, #-176]	; 0xffffff50
   36a70:	ldr	r0, [fp, #20]
   36a74:	ldr	r1, [r0]
   36a78:	ldr	r0, [fp, #24]
   36a7c:	cmp	r0, #2
   36a80:	str	r1, [sp, #72]	; 0x48
   36a84:	str	r1, [sp, #76]	; 0x4c
   36a88:	blt	41cf0 <GetDataSlab+0x11d70>
   36a8c:	ldr	r0, [fp, #8]
   36a90:	ldr	r5, [sp, #60]	; 0x3c
   36a94:	mov	r7, #1
   36a98:	mvn	r9, #15
   36a9c:	mov	r3, #0
   36aa0:	mov	r1, r0
   36aa4:	sub	r0, r0, #4
   36aa8:	mov	r4, r5
   36aac:	sub	sl, r1, #12
   36ab0:	mov	r1, #0
   36ab4:	str	r1, [sp, #84]	; 0x54
   36ab8:	ldr	r1, [sp, #72]	; 0x48
   36abc:	str	r1, [sp, #76]	; 0x4c
   36ac0:	b	36b20 <GetDataSlab+0x6ba0>
   36ac4:	ldr	r8, [sp, #88]	; 0x58
   36ac8:	sub	r1, fp, #176	; 0xb0
   36acc:	sub	lr, fp, #96	; 0x60
   36ad0:	add	sl, sl, #4
   36ad4:	mov	r2, r1
   36ad8:	str	r5, [r1, r7, lsl #2]
   36adc:	ldr	r1, [fp, #12]
   36ae0:	str	r4, [lr, r7, lsl #2]
   36ae4:	ldr	r4, [sp, #68]	; 0x44
   36ae8:	ldr	r1, [r1, r7, lsl #2]
   36aec:	mla	r3, r1, r4, r3
   36af0:	ldr	r1, [fp, #20]
   36af4:	ldr	r4, [sp, #76]	; 0x4c
   36af8:	ldr	r1, [r1, r7, lsl #2]
   36afc:	add	r7, r7, #1
   36b00:	mul	r4, r1, r4
   36b04:	ldr	r1, [fp, #24]
   36b08:	str	r4, [sp, #76]	; 0x4c
   36b0c:	mov	r4, r5
   36b10:	mov	r5, ip
   36b14:	mov	ip, r2
   36b18:	cmp	r7, r1
   36b1c:	beq	41cf0 <GetDataSlab+0x11d70>
   36b20:	ldr	r1, [fp, #16]
   36b24:	str	r4, [sp, #68]	; 0x44
   36b28:	ldr	r6, [sp, #84]	; 0x54
   36b2c:	ldr	r1, [r1, r7, lsl #2]
   36b30:	str	r5, [ip, r7, lsl #2]
   36b34:	add	r6, r6, #1
   36b38:	cmp	r6, #4
   36b3c:	str	r6, [sp, #84]	; 0x54
   36b40:	sub	r4, r1, #1
   36b44:	ldr	r1, [fp, #8]
   36b48:	str	r4, [lr, r7, lsl #2]
   36b4c:	ldr	ip, [r1, r7, lsl #2]
   36b50:	bcs	36b60 <GetDataSlab+0x6be0>
   36b54:	mov	r1, ip
   36b58:	mov	r2, r7
   36b5c:	b	36be8 <GetDataSlab+0x6c68>
   36b60:	vmov.i32	q9, #1	; 0x00000001
   36b64:	vmov.i32	q10, #1	; 0x00000001
   36b68:	vmov.32	d23[1], ip
   36b6c:	vmov.i32	q8, #1	; 0x00000001
   36b70:	bic	r1, r6, #3
   36b74:	bic	r8, r7, #3
   36b78:	sub	r2, r7, r1
   36b7c:	vmov.32	d18[0], r5
   36b80:	vmov.32	d20[0], r4
   36b84:	mov	r4, sl
   36b88:	vorr	d16, d18, d18
   36b8c:	vmov.i32	q9, #1	; 0x00000001
   36b90:	vorr	d18, d20, d20
   36b94:	vld1.32	{d20-d21}, [r4], r9
   36b98:	subs	r8, r8, #4
   36b9c:	vrev64.32	q12, q10
   36ba0:	vext.8	q12, q12, q12, #8
   36ba4:	vext.8	q11, q11, q12, #12
   36ba8:	vmul.i32	q9, q9, q12
   36bac:	vmul.i32	q8, q11, q8
   36bb0:	vorr	q11, q12, q12
   36bb4:	bne	36b94 <GetDataSlab+0x6c14>
   36bb8:	vext.8	q11, q9, q8, #8
   36bbc:	vext.8	q12, q8, q8, #8
   36bc0:	cmp	r6, r1
   36bc4:	vmul.i32	q0, q9, q11
   36bc8:	vmul.i32	q1, q8, q12
   36bcc:	vmul.i32	q8, q0, d0[1]
   36bd0:	vmul.i32	q9, q1, d2[1]
   36bd4:	vmov.32	r4, d16[0]
   36bd8:	vmov.32	r5, d18[0]
   36bdc:	beq	36ac4 <GetDataSlab+0x6b44>
   36be0:	vmov.32	r1, d20[0]
   36be4:	ldr	r8, [sp, #88]	; 0x58
   36be8:	mul	r5, r1, r5
   36bec:	ldr	r1, [r0, r2, lsl #2]
   36bf0:	subs	r2, r2, #1
   36bf4:	mul	r4, r4, r1
   36bf8:	bne	36be8 <GetDataSlab+0x6c68>
   36bfc:	b	36ac8 <GetDataSlab+0x6b48>
   36c00:	ldr	r0, [sl]
   36c04:	mov	r1, #0
   36c08:	sub	lr, fp, #96	; 0x60
   36c0c:	str	r0, [sp, #40]	; 0x28
   36c10:	sub	r0, r0, #1
   36c14:	str	r0, [fp, #-96]	; 0xffffffa0
   36c18:	ldr	r0, [fp, #8]
   36c1c:	ldr	r0, [r0]
   36c20:	str	r0, [sp, #60]	; 0x3c
   36c24:	str	r0, [fp, #-176]	; 0xffffff50
   36c28:	ldr	r0, [fp, #20]
   36c2c:	ldr	r2, [r0]
   36c30:	ldr	r0, [fp, #24]
   36c34:	cmp	r0, #2
   36c38:	str	r2, [sp, #64]	; 0x40
   36c3c:	str	r2, [sp, #76]	; 0x4c
   36c40:	blt	41f74 <GetDataSlab+0x11ff4>
   36c44:	ldr	r0, [fp, #8]
   36c48:	ldr	r3, [sp, #60]	; 0x3c
   36c4c:	ldr	r2, [sp, #64]	; 0x40
   36c50:	mov	r6, #1
   36c54:	mov	r9, #0
   36c58:	mvn	r5, #15
   36c5c:	mov	r1, r0
   36c60:	sub	r0, r0, #4
   36c64:	mov	r8, r3
   36c68:	str	r2, [sp, #76]	; 0x4c
   36c6c:	sub	sl, r1, #12
   36c70:	mov	r1, #0
   36c74:	b	36ccc <GetDataSlab+0x6d4c>
   36c78:	sub	r2, fp, #176	; 0xb0
   36c7c:	sub	lr, fp, #96	; 0x60
   36c80:	add	sl, sl, #4
   36c84:	mov	r7, r2
   36c88:	str	r3, [r2, r6, lsl #2]
   36c8c:	ldr	r2, [fp, #12]
   36c90:	str	r4, [lr, r6, lsl #2]
   36c94:	ldr	r4, [sp, #76]	; 0x4c
   36c98:	ldr	r2, [r2, r6, lsl #2]
   36c9c:	mla	r1, r2, r8, r1
   36ca0:	ldr	r2, [fp, #20]
   36ca4:	mov	r8, r3
   36ca8:	mov	r3, ip
   36cac:	mov	ip, r7
   36cb0:	ldr	r2, [r2, r6, lsl #2]
   36cb4:	add	r6, r6, #1
   36cb8:	mul	r4, r2, r4
   36cbc:	ldr	r2, [fp, #24]
   36cc0:	str	r4, [sp, #76]	; 0x4c
   36cc4:	cmp	r6, r2
   36cc8:	beq	41f74 <GetDataSlab+0x11ff4>
   36ccc:	ldr	r2, [fp, #16]
   36cd0:	add	r9, r9, #1
   36cd4:	cmp	r9, #4
   36cd8:	ldr	r2, [r2, r6, lsl #2]
   36cdc:	str	r3, [ip, r6, lsl #2]
   36ce0:	sub	r4, r2, #1
   36ce4:	ldr	r2, [fp, #8]
   36ce8:	str	r4, [lr, r6, lsl #2]
   36cec:	ldr	ip, [r2, r6, lsl #2]
   36cf0:	bcs	36d00 <GetDataSlab+0x6d80>
   36cf4:	mov	r2, ip
   36cf8:	mov	r7, r6
   36cfc:	b	36d8c <GetDataSlab+0x6e0c>
   36d00:	vmov.i32	q9, #1	; 0x00000001
   36d04:	vmov.i32	q10, #1	; 0x00000001
   36d08:	vmov.32	d23[1], ip
   36d0c:	vmov.i32	q8, #1	; 0x00000001
   36d10:	mov	lr, r9
   36d14:	bic	r9, r9, #3
   36d18:	bic	r2, r6, #3
   36d1c:	sub	r7, r6, r9
   36d20:	vmov.32	d18[0], r3
   36d24:	vmov.32	d20[0], r4
   36d28:	mov	r3, sl
   36d2c:	vorr	d16, d18, d18
   36d30:	vmov.i32	q9, #1	; 0x00000001
   36d34:	vorr	d18, d20, d20
   36d38:	vld1.32	{d20-d21}, [r3], r5
   36d3c:	subs	r2, r2, #4
   36d40:	vrev64.32	q12, q10
   36d44:	vext.8	q12, q12, q12, #8
   36d48:	vext.8	q11, q11, q12, #12
   36d4c:	vmul.i32	q9, q9, q12
   36d50:	vmul.i32	q8, q11, q8
   36d54:	vorr	q11, q12, q12
   36d58:	bne	36d38 <GetDataSlab+0x6db8>
   36d5c:	vext.8	q11, q9, q8, #8
   36d60:	vext.8	q12, q8, q8, #8
   36d64:	cmp	lr, r9
   36d68:	mov	r9, lr
   36d6c:	vmul.i32	q0, q9, q11
   36d70:	vmul.i32	q1, q8, q12
   36d74:	vmul.i32	q8, q0, d0[1]
   36d78:	vmul.i32	q9, q1, d2[1]
   36d7c:	vmov.32	r4, d16[0]
   36d80:	vmov.32	r3, d18[0]
   36d84:	beq	36c78 <GetDataSlab+0x6cf8>
   36d88:	vmov.32	r2, d20[0]
   36d8c:	mul	r3, r2, r3
   36d90:	ldr	r2, [r0, r7, lsl #2]
   36d94:	subs	r7, r7, #1
   36d98:	mul	r4, r4, r2
   36d9c:	bne	36d8c <GetDataSlab+0x6e0c>
   36da0:	b	36c78 <GetDataSlab+0x6cf8>
   36da4:	ldr	r0, [sl]
   36da8:	mov	r1, #0
   36dac:	sub	lr, fp, #96	; 0x60
   36db0:	str	r0, [sp, #40]	; 0x28
   36db4:	sub	r0, r0, #1
   36db8:	str	r0, [fp, #-96]	; 0xffffffa0
   36dbc:	ldr	r0, [fp, #8]
   36dc0:	ldr	r0, [r0]
   36dc4:	str	r0, [sp, #72]	; 0x48
   36dc8:	str	r0, [fp, #-176]	; 0xffffff50
   36dcc:	ldr	r0, [fp, #20]
   36dd0:	ldr	r2, [r0]
   36dd4:	ldr	r0, [fp, #24]
   36dd8:	cmp	r0, #2
   36ddc:	str	r2, [sp, #64]	; 0x40
   36de0:	str	r2, [sp, #76]	; 0x4c
   36de4:	blt	4220c <GetDataSlab+0x1228c>
   36de8:	ldr	r0, [fp, #8]
   36dec:	ldr	r3, [sp, #72]	; 0x48
   36df0:	ldr	r2, [sp, #64]	; 0x40
   36df4:	mov	r6, #1
   36df8:	mov	r9, #0
   36dfc:	mvn	r5, #15
   36e00:	mov	r1, r0
   36e04:	sub	r0, r0, #4
   36e08:	mov	r8, r3
   36e0c:	str	r2, [sp, #76]	; 0x4c
   36e10:	sub	sl, r1, #12
   36e14:	mov	r1, #0
   36e18:	b	36e70 <GetDataSlab+0x6ef0>
   36e1c:	sub	r2, fp, #176	; 0xb0
   36e20:	sub	lr, fp, #96	; 0x60
   36e24:	add	sl, sl, #4
   36e28:	mov	r7, r2
   36e2c:	str	r3, [r2, r6, lsl #2]
   36e30:	ldr	r2, [fp, #12]
   36e34:	str	r4, [lr, r6, lsl #2]
   36e38:	ldr	r4, [sp, #76]	; 0x4c
   36e3c:	ldr	r2, [r2, r6, lsl #2]
   36e40:	mla	r1, r2, r8, r1
   36e44:	ldr	r2, [fp, #20]
   36e48:	mov	r8, r3
   36e4c:	mov	r3, ip
   36e50:	mov	ip, r7
   36e54:	ldr	r2, [r2, r6, lsl #2]
   36e58:	add	r6, r6, #1
   36e5c:	mul	r4, r2, r4
   36e60:	ldr	r2, [fp, #24]
   36e64:	str	r4, [sp, #76]	; 0x4c
   36e68:	cmp	r6, r2
   36e6c:	beq	4220c <GetDataSlab+0x1228c>
   36e70:	ldr	r2, [fp, #16]
   36e74:	add	r9, r9, #1
   36e78:	cmp	r9, #4
   36e7c:	ldr	r2, [r2, r6, lsl #2]
   36e80:	str	r3, [ip, r6, lsl #2]
   36e84:	sub	r4, r2, #1
   36e88:	ldr	r2, [fp, #8]
   36e8c:	str	r4, [lr, r6, lsl #2]
   36e90:	ldr	ip, [r2, r6, lsl #2]
   36e94:	bcs	36ea4 <GetDataSlab+0x6f24>
   36e98:	mov	r2, ip
   36e9c:	mov	r7, r6
   36ea0:	b	36f34 <GetDataSlab+0x6fb4>
   36ea4:	vmov.i32	q9, #1	; 0x00000001
   36ea8:	vmov.i32	q10, #1	; 0x00000001
   36eac:	vmov.32	d23[1], ip
   36eb0:	mov	r2, r9
   36eb4:	vmov.i32	q8, #1	; 0x00000001
   36eb8:	bic	r9, r6, #3
   36ebc:	mov	lr, r2
   36ec0:	bic	r2, r2, #3
   36ec4:	sub	r7, r6, r2
   36ec8:	vmov.32	d18[0], r3
   36ecc:	vmov.32	d20[0], r4
   36ed0:	mov	r3, sl
   36ed4:	vorr	d16, d18, d18
   36ed8:	vmov.i32	q9, #1	; 0x00000001
   36edc:	vorr	d18, d20, d20
   36ee0:	vld1.32	{d20-d21}, [r3], r5
   36ee4:	subs	r9, r9, #4
   36ee8:	vrev64.32	q12, q10
   36eec:	vext.8	q12, q12, q12, #8
   36ef0:	vext.8	q11, q11, q12, #12
   36ef4:	vmul.i32	q9, q9, q12
   36ef8:	vmul.i32	q8, q11, q8
   36efc:	vorr	q11, q12, q12
   36f00:	bne	36ee0 <GetDataSlab+0x6f60>
   36f04:	vext.8	q11, q9, q8, #8
   36f08:	vext.8	q12, q8, q8, #8
   36f0c:	mov	r9, lr
   36f10:	cmp	lr, r2
   36f14:	vmul.i32	q0, q9, q11
   36f18:	vmul.i32	q1, q8, q12
   36f1c:	vmul.i32	q8, q0, d0[1]
   36f20:	vmul.i32	q9, q1, d2[1]
   36f24:	vmov.32	r4, d16[0]
   36f28:	vmov.32	r3, d18[0]
   36f2c:	beq	36e1c <GetDataSlab+0x6e9c>
   36f30:	vmov.32	r2, d20[0]
   36f34:	mul	r3, r2, r3
   36f38:	ldr	r2, [r0, r7, lsl #2]
   36f3c:	subs	r7, r7, #1
   36f40:	mul	r4, r4, r2
   36f44:	bne	36f34 <GetDataSlab+0x6fb4>
   36f48:	b	36e1c <GetDataSlab+0x6e9c>
   36f4c:	ldr	r0, [sl]
   36f50:	mov	r1, #0
   36f54:	sub	r7, fp, #96	; 0x60
   36f58:	str	r0, [sp, #60]	; 0x3c
   36f5c:	sub	r0, r0, #1
   36f60:	str	r0, [fp, #-96]	; 0xffffffa0
   36f64:	ldr	r0, [fp, #8]
   36f68:	ldr	r0, [r0]
   36f6c:	str	r0, [sp, #44]	; 0x2c
   36f70:	str	r0, [fp, #-176]	; 0xffffff50
   36f74:	ldr	r0, [fp, #20]
   36f78:	ldr	r2, [r0]
   36f7c:	ldr	r0, [fp, #24]
   36f80:	cmp	r0, #2
   36f84:	str	r2, [sp, #56]	; 0x38
   36f88:	str	r2, [sp, #68]	; 0x44
   36f8c:	blt	42414 <GetDataSlab+0x12494>
   36f90:	ldr	r0, [fp, #8]
   36f94:	ldr	r2, [sp, #44]	; 0x2c
   36f98:	mov	r5, #1
   36f9c:	mov	lr, #0
   36fa0:	mvn	r4, #15
   36fa4:	mov	r1, #0
   36fa8:	sub	r3, r0, #4
   36fac:	sub	sl, r0, #12
   36fb0:	ldr	r0, [sp, #56]	; 0x38
   36fb4:	mov	r9, r2
   36fb8:	str	r0, [sp, #68]	; 0x44
   36fbc:	b	37010 <GetDataSlab+0x7090>
   36fc0:	ldr	r8, [sp, #88]	; 0x58
   36fc4:	sub	r7, fp, #96	; 0x60
   36fc8:	sub	ip, fp, #176	; 0xb0
   36fcc:	ldr	r6, [sp, #68]	; 0x44
   36fd0:	add	sl, sl, #4
   36fd4:	str	r0, [r7, r5, lsl #2]
   36fd8:	ldr	r0, [fp, #12]
   36fdc:	str	r2, [ip, r5, lsl #2]
   36fe0:	ldr	r0, [r0, r5, lsl #2]
   36fe4:	mla	r1, r0, r9, r1
   36fe8:	ldr	r0, [fp, #20]
   36fec:	mov	r9, r2
   36ff0:	ldr	r2, [sp, #84]	; 0x54
   36ff4:	ldr	r0, [r0, r5, lsl #2]
   36ff8:	add	r5, r5, #1
   36ffc:	mul	r6, r0, r6
   37000:	ldr	r0, [fp, #24]
   37004:	str	r6, [sp, #68]	; 0x44
   37008:	cmp	r5, r0
   3700c:	beq	42414 <GetDataSlab+0x12494>
   37010:	ldr	r0, [fp, #16]
   37014:	add	lr, lr, #1
   37018:	cmp	lr, #4
   3701c:	ldr	r0, [r0, r5, lsl #2]
   37020:	str	r2, [ip, r5, lsl #2]
   37024:	sub	r0, r0, #1
   37028:	str	r0, [r7, r5, lsl #2]
   3702c:	ldr	r7, [fp, #8]
   37030:	ldr	r7, [r7, r5, lsl #2]
   37034:	str	r7, [sp, #84]	; 0x54
   37038:	bcs	37044 <GetDataSlab+0x70c4>
   3703c:	mov	r6, r5
   37040:	b	370cc <GetDataSlab+0x714c>
   37044:	vmov.i32	q9, #1	; 0x00000001
   37048:	vmov.i32	q10, #1	; 0x00000001
   3704c:	vmov.32	d23[1], r7
   37050:	vmov.i32	q8, #1	; 0x00000001
   37054:	bic	r7, lr, #3
   37058:	bic	r8, r5, #3
   3705c:	sub	r6, r5, r7
   37060:	vmov.32	d18[0], r2
   37064:	vmov.32	d20[0], r0
   37068:	mov	r0, sl
   3706c:	vorr	d16, d18, d18
   37070:	vmov.i32	q9, #1	; 0x00000001
   37074:	vorr	d18, d20, d20
   37078:	vld1.32	{d20-d21}, [r0], r4
   3707c:	subs	r8, r8, #4
   37080:	vrev64.32	q12, q10
   37084:	vext.8	q12, q12, q12, #8
   37088:	vext.8	q11, q11, q12, #12
   3708c:	vmul.i32	q9, q9, q12
   37090:	vmul.i32	q8, q11, q8
   37094:	vorr	q11, q12, q12
   37098:	bne	37078 <GetDataSlab+0x70f8>
   3709c:	vext.8	q11, q9, q8, #8
   370a0:	vext.8	q12, q8, q8, #8
   370a4:	cmp	lr, r7
   370a8:	vmul.i32	q0, q9, q11
   370ac:	vmul.i32	q1, q8, q12
   370b0:	vmul.i32	q8, q0, d0[1]
   370b4:	vmul.i32	q9, q1, d2[1]
   370b8:	vmov.32	r0, d16[0]
   370bc:	vmov.32	r2, d18[0]
   370c0:	beq	36fc0 <GetDataSlab+0x7040>
   370c4:	vmov.32	r7, d20[0]
   370c8:	ldr	r8, [sp, #88]	; 0x58
   370cc:	mul	r2, r7, r2
   370d0:	ldr	r7, [r3, r6, lsl #2]
   370d4:	subs	r6, r6, #1
   370d8:	mul	r0, r0, r7
   370dc:	bne	370cc <GetDataSlab+0x714c>
   370e0:	b	36fc4 <GetDataSlab+0x7044>
   370e4:	ldr	r0, [sp, #80]	; 0x50
   370e8:	cmp	sl, #1
   370ec:	add	ip, r0, r3
   370f0:	bne	48314 <GetDataSlab+0x18394>
   370f4:	ldr	r0, [sp, #76]	; 0x4c
   370f8:	ldr	r2, [fp, #12]
   370fc:	sub	r7, fp, #96	; 0x60
   37100:	cmp	r0, #1
   37104:	blt	56c18 <GetDataSlab+0x26c98>
   37108:	ldr	lr, [sp, #56]	; 0x38
   3710c:	mov	r1, #1
   37110:	ldr	r8, [sp, #88]	; 0x58
   37114:	sub	r6, fp, #264	; 0x108
   37118:	sub	r0, lr, #8
   3711c:	add	r1, r1, r0, lsr #3
   37120:	lsr	r0, r0, #3
   37124:	str	r0, [sp, #20]
   37128:	mov	r0, #0
   3712c:	and	r4, r1, #1
   37130:	str	r0, [sp, #72]	; 0x48
   37134:	sub	r1, r1, r4
   37138:	str	r4, [sp, #28]
   3713c:	str	r1, [sp, #12]
   37140:	sub	r1, fp, #136	; 0x88
   37144:	orr	r4, r1, #4
   37148:	ldr	r1, [fp, #20]
   3714c:	add	sl, r1, #4
   37150:	sub	r1, fp, #176	; 0xb0
   37154:	orr	r1, r1, #4
   37158:	str	sl, [sp, #16]
   3715c:	str	r1, [sp, #84]	; 0x54
   37160:	add	r1, r2, #4
   37164:	str	r1, [sp, #80]	; 0x50
   37168:	ldr	r1, [fp, #24]
   3716c:	sub	r1, r1, #1
   37170:	str	r1, [sp, #40]	; 0x28
   37174:	orr	r1, r7, #4
   37178:	str	r1, [sp, #32]
   3717c:	lsl	r1, lr, #1
   37180:	str	r1, [sp, #64]	; 0x40
   37184:	and	r1, lr, #1
   37188:	str	r1, [sp, #44]	; 0x2c
   3718c:	bic	r1, lr, #7
   37190:	str	r1, [sp, #24]
   37194:	mov	r1, #0
   37198:	b	371dc <GetDataSlab+0x725c>
   3719c:	ldr	r0, [sp, #32]
   371a0:	mov	r6, r9
   371a4:	ldr	r0, [r0, r1]
   371a8:	add	ip, ip, r0
   371ac:	add	r3, r0, r3
   371b0:	ldr	r0, [sp, #64]	; 0x40
   371b4:	ldr	r2, [sp, #72]	; 0x48
   371b8:	ldr	r1, [sp, #68]	; 0x44
   371bc:	add	r8, r8, r0
   371c0:	ldr	r0, [sp, #76]	; 0x4c
   371c4:	add	r2, r2, lr
   371c8:	add	r1, r1, #1
   371cc:	str	r2, [sp, #72]	; 0x48
   371d0:	cmp	r2, r0
   371d4:	mov	r2, #0
   371d8:	bge	56c1c <GetDataSlab+0x26c9c>
   371dc:	cmp	lr, #1
   371e0:	str	r1, [sp, #68]	; 0x44
   371e4:	blt	37394 <GetDataSlab+0x7414>
   371e8:	ldr	r0, [fp, #12]
   371ec:	str	r8, [sp, #60]	; 0x3c
   371f0:	mov	r8, lr
   371f4:	ldr	r5, [sp, #72]	; 0x48
   371f8:	mov	r9, #0
   371fc:	cmp	r8, #8
   37200:	ldr	lr, [r0]
   37204:	ldr	r0, [sp, #88]	; 0x58
   37208:	add	r5, r0, r5, lsl #1
   3720c:	add	r2, ip, lr
   37210:	str	r5, [sp, #48]	; 0x30
   37214:	bcs	37228 <GetDataSlab+0x72a8>
   37218:	mov	r5, lr
   3721c:	mov	lr, r8
   37220:	ldr	r8, [sp, #60]	; 0x3c
   37224:	b	3732c <GetDataSlab+0x73ac>
   37228:	ldr	r5, [sp, #64]	; 0x40
   3722c:	add	r7, ip, r8
   37230:	add	r7, r7, lr
   37234:	mla	r0, r5, r1, r0
   37238:	mov	r5, lr
   3723c:	mov	lr, r8
   37240:	ldr	r8, [sp, #60]	; 0x3c
   37244:	cmp	r0, r7
   37248:	bcs	37264 <GetDataSlab+0x72e4>
   3724c:	ldr	r0, [sp, #64]	; 0x40
   37250:	ldr	r7, [sp, #88]	; 0x58
   37254:	mla	r0, r0, r1, r0
   37258:	add	r0, r7, r0
   3725c:	cmp	r2, r0
   37260:	bcc	3732c <GetDataSlab+0x73ac>
   37264:	ldr	r0, [sp, #20]
   37268:	mov	r1, #0
   3726c:	str	r5, [sp, #36]	; 0x24
   37270:	cmp	r0, #0
   37274:	beq	372d4 <GetDataSlab+0x7354>
   37278:	ldr	sl, [sp, #12]
   3727c:	mov	lr, r8
   37280:	mov	r5, #32
   37284:	sub	r8, fp, #256	; 0x100
   37288:	mov	r0, r2
   3728c:	subs	sl, sl, #2
   37290:	ldr	r7, [r0, r1]!
   37294:	add	r1, r1, #16
   37298:	str	r7, [fp, #-264]	; 0xfffffef8
   3729c:	ldr	r7, [r0, #4]
   372a0:	str	r7, [fp, #-260]	; 0xfffffefc
   372a4:	add	r7, lr, #16
   372a8:	vld1.8	{d16}, [r6 :64]
   372ac:	vmovl.s8	q8, d16
   372b0:	vst1.16	{d16-d17}, [lr], r5
   372b4:	ldr	r9, [r0, #8]
   372b8:	ldr	r0, [r0, #12]
   372bc:	str	r0, [fp, #-252]	; 0xffffff04
   372c0:	str	r9, [fp, #-256]	; 0xffffff00
   372c4:	vld1.8	{d16}, [r8 :64]
   372c8:	vmovl.s8	q8, d16
   372cc:	vst1.16	{d16-d17}, [r7]
   372d0:	bne	37288 <GetDataSlab+0x7308>
   372d4:	ldr	r0, [sp, #28]
   372d8:	ldr	sl, [sp, #16]
   372dc:	ldr	r5, [sp, #36]	; 0x24
   372e0:	cmp	r0, #0
   372e4:	beq	37314 <GetDataSlab+0x7394>
   372e8:	mov	r0, r2
   372ec:	ldr	r7, [r0, r1]!
   372f0:	str	r7, [fp, #-272]	; 0xfffffef0
   372f4:	ldr	r0, [r0, #4]
   372f8:	str	r0, [fp, #-268]	; 0xfffffef4
   372fc:	sub	r0, fp, #272	; 0x110
   37300:	vld1.8	{d16}, [r0 :64]
   37304:	ldr	r0, [sp, #48]	; 0x30
   37308:	add	r0, r0, r1, lsl #1
   3730c:	vmovl.s8	q8, d16
   37310:	vst1.16	{d16-d17}, [r0]
   37314:	ldr	r1, [sp, #24]
   37318:	ldr	lr, [sp, #56]	; 0x38
   3731c:	ldr	r8, [sp, #60]	; 0x3c
   37320:	cmp	lr, r1
   37324:	mov	r9, r1
   37328:	beq	37394 <GetDataSlab+0x7414>
   3732c:	ldr	r0, [sp, #44]	; 0x2c
   37330:	mov	r7, r9
   37334:	cmp	r0, #0
   37338:	beq	37354 <GetDataSlab+0x73d4>
   3733c:	ldr	r0, [sp, #48]	; 0x30
   37340:	add	r2, r2, r9
   37344:	orr	r7, r9, #1
   37348:	ldrsb	r2, [r2]
   3734c:	add	r0, r0, r9, lsl #1
   37350:	strh	r2, [r0]
   37354:	orr	r0, r9, #1
   37358:	cmp	lr, r0
   3735c:	beq	37394 <GetDataSlab+0x7414>
   37360:	add	r0, r7, r5
   37364:	add	r1, r8, r7, lsl #1
   37368:	sub	r2, lr, r7
   3736c:	add	r0, ip, r0
   37370:	add	r7, r0, #1
   37374:	ldrsb	r0, [r7, #-1]
   37378:	subs	r2, r2, #2
   3737c:	strh	r0, [r1]
   37380:	ldrsb	r0, [r7]
   37384:	add	r7, r7, #2
   37388:	strh	r0, [r1, #2]
   3738c:	add	r1, r1, #4
   37390:	bne	37374 <GetDataSlab+0x73f4>
   37394:	ldr	r0, [sp, #52]	; 0x34
   37398:	add	ip, ip, r0
   3739c:	add	r3, r3, r0
   373a0:	ldr	r0, [fp, #24]
   373a4:	cmp	r0, #2
   373a8:	blt	371b0 <GetDataSlab+0x7230>
   373ac:	ldr	r2, [sp, #40]	; 0x28
   373b0:	mov	r1, #0
   373b4:	b	373e8 <GetDataSlab+0x7468>
   373b8:	ldr	r5, [sp, #80]	; 0x50
   373bc:	sub	r6, fp, #176	; 0xb0
   373c0:	sub	r0, r7, r0
   373c4:	ldr	r6, [r6, r1]
   373c8:	ldr	r5, [r5, r1]
   373cc:	mla	r0, r5, r6, r0
   373d0:	add	r3, r0, r3
   373d4:	add	ip, ip, r0
   373d8:	mov	r6, r9
   373dc:	subs	r2, r2, #1
   373e0:	add	r1, r1, #4
   373e4:	beq	371b0 <GetDataSlab+0x7230>
   373e8:	ldr	r0, [r4, r1]
   373ec:	mov	r9, r6
   373f0:	add	r0, r0, #1
   373f4:	str	r0, [r4, r1]
   373f8:	ldr	r7, [sl, r1]
   373fc:	sdiv	r6, r0, r7
   37400:	mls	r0, r6, r7, r0
   37404:	cmp	r0, #0
   37408:	bne	3719c <GetDataSlab+0x721c>
   3740c:	mov	r0, #0
   37410:	str	r0, [r4, r1]
   37414:	ldr	r0, [sp, #84]	; 0x54
   37418:	ldr	r7, [r0, r1]
   3741c:	sdiv	r0, r3, r7
   37420:	mls	r0, r0, r7, r3
   37424:	cmp	r0, #0
   37428:	bne	373b8 <GetDataSlab+0x7438>
   3742c:	ldr	r0, [sp, #80]	; 0x50
   37430:	ldr	r0, [r0, r1]
   37434:	cmp	r0, #0
   37438:	beq	373d8 <GetDataSlab+0x7458>
   3743c:	sub	r7, fp, #176	; 0xb0
   37440:	ldr	r7, [r7, r1]
   37444:	mla	r3, r7, r0, r3
   37448:	mla	ip, r7, r0, ip
   3744c:	b	373d8 <GetDataSlab+0x7458>
   37450:	ldr	sl, [sl]
   37454:	mov	r3, #0
   37458:	sub	lr, fp, #96	; 0x60
   3745c:	sub	r0, sl, #1
   37460:	str	r0, [fp, #-96]	; 0xffffffa0
   37464:	ldr	r0, [fp, #8]
   37468:	ldr	r0, [r0]
   3746c:	str	r0, [sp, #52]	; 0x34
   37470:	str	r0, [fp, #-176]	; 0xffffff50
   37474:	ldr	r0, [fp, #20]
   37478:	ldr	r1, [r0]
   3747c:	ldr	r0, [fp, #24]
   37480:	cmp	r0, #2
   37484:	str	r1, [sp, #56]	; 0x38
   37488:	str	r1, [sp, #76]	; 0x4c
   3748c:	blt	42690 <GetDataSlab+0x12710>
   37490:	ldr	r0, [fp, #8]
   37494:	ldr	r4, [sp, #52]	; 0x34
   37498:	mov	r2, ip
   3749c:	mov	r6, #1
   374a0:	mov	r9, #0
   374a4:	mvn	r5, #15
   374a8:	mov	r3, #0
   374ac:	mov	r1, r0
   374b0:	sub	r0, r0, #4
   374b4:	mov	r8, r4
   374b8:	sub	ip, r1, #12
   374bc:	ldr	r1, [sp, #56]	; 0x38
   374c0:	str	r1, [sp, #76]	; 0x4c
   374c4:	b	37514 <GetDataSlab+0x7594>
   374c8:	ldr	r1, [fp, #12]
   374cc:	sub	r2, fp, #176	; 0xb0
   374d0:	sub	lr, fp, #96	; 0x60
   374d4:	add	ip, ip, #4
   374d8:	str	r7, [lr, r6, lsl #2]
   374dc:	str	r4, [r2, r6, lsl #2]
   374e0:	ldr	r7, [sp, #76]	; 0x4c
   374e4:	ldr	r1, [r1, r6, lsl #2]
   374e8:	mla	r3, r1, r8, r3
   374ec:	ldr	r1, [fp, #20]
   374f0:	mov	r8, r4
   374f4:	ldr	r4, [sp, #84]	; 0x54
   374f8:	ldr	r1, [r1, r6, lsl #2]
   374fc:	add	r6, r6, #1
   37500:	mul	r7, r1, r7
   37504:	ldr	r1, [fp, #24]
   37508:	str	r7, [sp, #76]	; 0x4c
   3750c:	cmp	r6, r1
   37510:	beq	42690 <GetDataSlab+0x12710>
   37514:	ldr	r1, [fp, #16]
   37518:	add	r9, r9, #1
   3751c:	cmp	r9, #4
   37520:	ldr	r1, [r1, r6, lsl #2]
   37524:	str	r4, [r2, r6, lsl #2]
   37528:	sub	r7, r1, #1
   3752c:	ldr	r1, [fp, #8]
   37530:	str	r7, [lr, r6, lsl #2]
   37534:	ldr	r2, [r1, r6, lsl #2]
   37538:	str	r2, [sp, #84]	; 0x54
   3753c:	bcs	3754c <GetDataSlab+0x75cc>
   37540:	mov	r1, r2
   37544:	mov	r2, r6
   37548:	b	375e0 <GetDataSlab+0x7660>
   3754c:	vmov.i32	q9, #1	; 0x00000001
   37550:	vmov.i32	q10, #1	; 0x00000001
   37554:	vmov.32	d23[1], r2
   37558:	mov	r1, r9
   3755c:	vmov.i32	q8, #1	; 0x00000001
   37560:	bic	r9, r6, #3
   37564:	str	r1, [sp, #72]	; 0x48
   37568:	bic	r1, r1, #3
   3756c:	mov	lr, r1
   37570:	sub	r2, r6, r1
   37574:	mov	r1, ip
   37578:	vmov.32	d18[0], r4
   3757c:	vmov.32	d20[0], r7
   37580:	vorr	d16, d18, d18
   37584:	vmov.i32	q9, #1	; 0x00000001
   37588:	vorr	d18, d20, d20
   3758c:	vld1.32	{d20-d21}, [r1], r5
   37590:	subs	r9, r9, #4
   37594:	vrev64.32	q12, q10
   37598:	vext.8	q12, q12, q12, #8
   3759c:	vext.8	q11, q11, q12, #12
   375a0:	vmul.i32	q9, q9, q12
   375a4:	vmul.i32	q8, q11, q8
   375a8:	vorr	q11, q12, q12
   375ac:	bne	3758c <GetDataSlab+0x760c>
   375b0:	vext.8	q11, q9, q8, #8
   375b4:	vext.8	q12, q8, q8, #8
   375b8:	ldr	r9, [sp, #72]	; 0x48
   375bc:	vmul.i32	q0, q9, q11
   375c0:	vmul.i32	q1, q8, q12
   375c4:	cmp	r9, lr
   375c8:	vmul.i32	q8, q0, d0[1]
   375cc:	vmul.i32	q9, q1, d2[1]
   375d0:	vmov.32	r7, d16[0]
   375d4:	vmov.32	r4, d18[0]
   375d8:	beq	374c8 <GetDataSlab+0x7548>
   375dc:	vmov.32	r1, d20[0]
   375e0:	mul	r4, r1, r4
   375e4:	ldr	r1, [r0, r2, lsl #2]
   375e8:	subs	r2, r2, #1
   375ec:	mul	r7, r7, r1
   375f0:	bne	375e0 <GetDataSlab+0x7660>
   375f4:	b	374c8 <GetDataSlab+0x7548>
   375f8:	ldr	r0, [sl]
   375fc:	mov	r1, #0
   37600:	sub	r6, fp, #96	; 0x60
   37604:	str	r0, [sp, #68]	; 0x44
   37608:	sub	r0, r0, #1
   3760c:	str	r0, [fp, #-96]	; 0xffffffa0
   37610:	ldr	r0, [fp, #8]
   37614:	ldr	r0, [r0]
   37618:	str	r0, [sp, #60]	; 0x3c
   3761c:	str	r0, [fp, #-176]	; 0xffffff50
   37620:	ldr	r0, [fp, #20]
   37624:	ldr	r2, [r0]
   37628:	ldr	r0, [fp, #24]
   3762c:	cmp	r0, #2
   37630:	str	r2, [sp, #64]	; 0x40
   37634:	str	r2, [sp, #76]	; 0x4c
   37638:	blt	429f8 <GetDataSlab+0x12a78>
   3763c:	ldr	r0, [fp, #8]
   37640:	ldr	r3, [sp, #60]	; 0x3c
   37644:	ldr	r2, [sp, #64]	; 0x40
   37648:	mov	r5, #1
   3764c:	mov	r8, #0
   37650:	mvn	r4, #15
   37654:	mov	r1, r0
   37658:	sub	r0, r0, #4
   3765c:	mov	r9, r3
   37660:	str	r2, [sp, #76]	; 0x4c
   37664:	sub	sl, r1, #12
   37668:	mov	r1, #0
   3766c:	b	376bc <GetDataSlab+0x773c>
   37670:	sub	ip, fp, #176	; 0xb0
   37674:	sub	r6, fp, #96	; 0x60
   37678:	str	r3, [ip, r5, lsl #2]
   3767c:	ldr	r7, [sp, #76]	; 0x4c
   37680:	add	sl, sl, #4
   37684:	str	r2, [r6, r5, lsl #2]
   37688:	ldr	r2, [fp, #12]
   3768c:	ldr	r2, [r2, r5, lsl #2]
   37690:	mla	r1, r2, r9, r1
   37694:	ldr	r2, [fp, #20]
   37698:	mov	r9, r3
   3769c:	mov	r3, lr
   376a0:	ldr	r2, [r2, r5, lsl #2]
   376a4:	add	r5, r5, #1
   376a8:	mul	r7, r2, r7
   376ac:	ldr	r2, [fp, #24]
   376b0:	str	r7, [sp, #76]	; 0x4c
   376b4:	cmp	r5, r2
   376b8:	beq	429f8 <GetDataSlab+0x12a78>
   376bc:	ldr	r2, [fp, #16]
   376c0:	ldr	r7, [fp, #8]
   376c4:	add	r8, r8, #1
   376c8:	cmp	r8, #4
   376cc:	ldr	r2, [r2, r5, lsl #2]
   376d0:	str	r3, [ip, r5, lsl #2]
   376d4:	sub	r2, r2, #1
   376d8:	str	r2, [r6, r5, lsl #2]
   376dc:	ldr	lr, [r7, r5, lsl #2]
   376e0:	bcs	376f0 <GetDataSlab+0x7770>
   376e4:	mov	r7, lr
   376e8:	mov	r6, r5
   376ec:	b	37778 <GetDataSlab+0x77f8>
   376f0:	vmov.i32	q9, #1	; 0x00000001
   376f4:	vmov.i32	q10, #1	; 0x00000001
   376f8:	vmov.32	d23[1], lr
   376fc:	vmov.i32	q8, #1	; 0x00000001
   37700:	bic	r7, r8, #3
   37704:	bic	ip, r5, #3
   37708:	sub	r6, r5, r7
   3770c:	vmov.32	d18[0], r3
   37710:	vmov.32	d20[0], r2
   37714:	mov	r2, sl
   37718:	vorr	d16, d18, d18
   3771c:	vmov.i32	q9, #1	; 0x00000001
   37720:	vorr	d18, d20, d20
   37724:	vld1.32	{d20-d21}, [r2], r4
   37728:	subs	ip, ip, #4
   3772c:	vrev64.32	q12, q10
   37730:	vext.8	q12, q12, q12, #8
   37734:	vext.8	q11, q11, q12, #12
   37738:	vmul.i32	q9, q9, q12
   3773c:	vmul.i32	q8, q11, q8
   37740:	vorr	q11, q12, q12
   37744:	bne	37724 <GetDataSlab+0x77a4>
   37748:	vext.8	q11, q9, q8, #8
   3774c:	vext.8	q12, q8, q8, #8
   37750:	cmp	r8, r7
   37754:	vmul.i32	q0, q9, q11
   37758:	vmul.i32	q1, q8, q12
   3775c:	vmul.i32	q8, q0, d0[1]
   37760:	vmul.i32	q9, q1, d2[1]
   37764:	vmov.32	r2, d16[0]
   37768:	vmov.32	r3, d18[0]
   3776c:	beq	37670 <GetDataSlab+0x76f0>
   37770:	vmov.32	r7, d20[0]
   37774:	sub	ip, fp, #176	; 0xb0
   37778:	mul	r3, r7, r3
   3777c:	ldr	r7, [r0, r6, lsl #2]
   37780:	subs	r6, r6, #1
   37784:	mul	r2, r2, r7
   37788:	bne	37778 <GetDataSlab+0x77f8>
   3778c:	b	37674 <GetDataSlab+0x76f4>
   37790:	ldr	r0, [sl]
   37794:	mov	r1, #0
   37798:	sub	r6, fp, #96	; 0x60
   3779c:	str	r0, [sp, #68]	; 0x44
   377a0:	sub	r0, r0, #1
   377a4:	str	r0, [fp, #-96]	; 0xffffffa0
   377a8:	ldr	r0, [fp, #8]
   377ac:	ldr	r0, [r0]
   377b0:	str	r0, [sp, #60]	; 0x3c
   377b4:	str	r0, [fp, #-176]	; 0xffffff50
   377b8:	ldr	r0, [fp, #20]
   377bc:	ldr	r2, [r0]
   377c0:	ldr	r0, [fp, #24]
   377c4:	cmp	r0, #2
   377c8:	str	r2, [sp, #64]	; 0x40
   377cc:	str	r2, [sp, #76]	; 0x4c
   377d0:	blt	42ce8 <GetDataSlab+0x12d68>
   377d4:	ldr	r0, [fp, #8]
   377d8:	ldr	r3, [sp, #60]	; 0x3c
   377dc:	ldr	r2, [sp, #64]	; 0x40
   377e0:	mov	r5, #1
   377e4:	mov	r8, #0
   377e8:	mvn	r4, #15
   377ec:	mov	r1, r0
   377f0:	sub	r0, r0, #4
   377f4:	mov	r9, r3
   377f8:	str	r2, [sp, #76]	; 0x4c
   377fc:	sub	sl, r1, #12
   37800:	mov	r1, #0
   37804:	b	37854 <GetDataSlab+0x78d4>
   37808:	sub	ip, fp, #176	; 0xb0
   3780c:	sub	r6, fp, #96	; 0x60
   37810:	str	r3, [ip, r5, lsl #2]
   37814:	ldr	r7, [sp, #76]	; 0x4c
   37818:	add	sl, sl, #4
   3781c:	str	r2, [r6, r5, lsl #2]
   37820:	ldr	r2, [fp, #12]
   37824:	ldr	r2, [r2, r5, lsl #2]
   37828:	mla	r1, r2, r9, r1
   3782c:	ldr	r2, [fp, #20]
   37830:	mov	r9, r3
   37834:	mov	r3, lr
   37838:	ldr	r2, [r2, r5, lsl #2]
   3783c:	add	r5, r5, #1
   37840:	mul	r7, r2, r7
   37844:	ldr	r2, [fp, #24]
   37848:	str	r7, [sp, #76]	; 0x4c
   3784c:	cmp	r5, r2
   37850:	beq	42ce8 <GetDataSlab+0x12d68>
   37854:	ldr	r2, [fp, #16]
   37858:	ldr	r7, [fp, #8]
   3785c:	add	r8, r8, #1
   37860:	cmp	r8, #4
   37864:	ldr	r2, [r2, r5, lsl #2]
   37868:	str	r3, [ip, r5, lsl #2]
   3786c:	sub	r2, r2, #1
   37870:	str	r2, [r6, r5, lsl #2]
   37874:	ldr	lr, [r7, r5, lsl #2]
   37878:	bcs	37888 <GetDataSlab+0x7908>
   3787c:	mov	r7, lr
   37880:	mov	r6, r5
   37884:	b	37910 <GetDataSlab+0x7990>
   37888:	vmov.i32	q9, #1	; 0x00000001
   3788c:	vmov.i32	q10, #1	; 0x00000001
   37890:	vmov.32	d23[1], lr
   37894:	vmov.i32	q8, #1	; 0x00000001
   37898:	bic	r7, r8, #3
   3789c:	bic	ip, r5, #3
   378a0:	sub	r6, r5, r7
   378a4:	vmov.32	d18[0], r3
   378a8:	vmov.32	d20[0], r2
   378ac:	mov	r2, sl
   378b0:	vorr	d16, d18, d18
   378b4:	vmov.i32	q9, #1	; 0x00000001
   378b8:	vorr	d18, d20, d20
   378bc:	vld1.32	{d20-d21}, [r2], r4
   378c0:	subs	ip, ip, #4
   378c4:	vrev64.32	q12, q10
   378c8:	vext.8	q12, q12, q12, #8
   378cc:	vext.8	q11, q11, q12, #12
   378d0:	vmul.i32	q9, q9, q12
   378d4:	vmul.i32	q8, q11, q8
   378d8:	vorr	q11, q12, q12
   378dc:	bne	378bc <GetDataSlab+0x793c>
   378e0:	vext.8	q11, q9, q8, #8
   378e4:	vext.8	q12, q8, q8, #8
   378e8:	cmp	r8, r7
   378ec:	vmul.i32	q0, q9, q11
   378f0:	vmul.i32	q1, q8, q12
   378f4:	vmul.i32	q8, q0, d0[1]
   378f8:	vmul.i32	q9, q1, d2[1]
   378fc:	vmov.32	r2, d16[0]
   37900:	vmov.32	r3, d18[0]
   37904:	beq	37808 <GetDataSlab+0x7888>
   37908:	vmov.32	r7, d20[0]
   3790c:	sub	ip, fp, #176	; 0xb0
   37910:	mul	r3, r7, r3
   37914:	ldr	r7, [r0, r6, lsl #2]
   37918:	subs	r6, r6, #1
   3791c:	mul	r2, r2, r7
   37920:	bne	37910 <GetDataSlab+0x7990>
   37924:	b	3780c <GetDataSlab+0x788c>
   37928:	ldr	r0, [sl]
   3792c:	mov	r3, #0
   37930:	sub	lr, fp, #96	; 0x60
   37934:	str	r0, [sp, #56]	; 0x38
   37938:	sub	r0, r0, #1
   3793c:	str	r0, [fp, #-96]	; 0xffffffa0
   37940:	ldr	r0, [fp, #8]
   37944:	ldr	r0, [r0]
   37948:	str	r0, [sp, #60]	; 0x3c
   3794c:	str	r0, [fp, #-176]	; 0xffffff50
   37950:	ldr	r0, [fp, #20]
   37954:	ldr	r1, [r0]
   37958:	ldr	r0, [fp, #24]
   3795c:	cmp	r0, #2
   37960:	str	r1, [sp, #72]	; 0x48
   37964:	str	r1, [sp, #76]	; 0x4c
   37968:	blt	42fd8 <GetDataSlab+0x13058>
   3796c:	ldr	r0, [fp, #8]
   37970:	ldr	r5, [sp, #60]	; 0x3c
   37974:	mov	r7, #1
   37978:	mvn	r9, #15
   3797c:	mov	r3, #0
   37980:	mov	r1, r0
   37984:	sub	r0, r0, #4
   37988:	mov	r4, r5
   3798c:	sub	sl, r1, #12
   37990:	mov	r1, #0
   37994:	str	r1, [sp, #84]	; 0x54
   37998:	ldr	r1, [sp, #72]	; 0x48
   3799c:	str	r1, [sp, #76]	; 0x4c
   379a0:	b	37a00 <GetDataSlab+0x7a80>
   379a4:	ldr	r8, [sp, #88]	; 0x58
   379a8:	sub	r1, fp, #176	; 0xb0
   379ac:	sub	lr, fp, #96	; 0x60
   379b0:	add	sl, sl, #4
   379b4:	mov	r2, r1
   379b8:	str	r5, [r1, r7, lsl #2]
   379bc:	ldr	r1, [fp, #12]
   379c0:	str	r4, [lr, r7, lsl #2]
   379c4:	ldr	r4, [sp, #68]	; 0x44
   379c8:	ldr	r1, [r1, r7, lsl #2]
   379cc:	mla	r3, r1, r4, r3
   379d0:	ldr	r1, [fp, #20]
   379d4:	ldr	r4, [sp, #76]	; 0x4c
   379d8:	ldr	r1, [r1, r7, lsl #2]
   379dc:	add	r7, r7, #1
   379e0:	mul	r4, r1, r4
   379e4:	ldr	r1, [fp, #24]
   379e8:	str	r4, [sp, #76]	; 0x4c
   379ec:	mov	r4, r5
   379f0:	mov	r5, ip
   379f4:	mov	ip, r2
   379f8:	cmp	r7, r1
   379fc:	beq	42fd8 <GetDataSlab+0x13058>
   37a00:	ldr	r1, [fp, #16]
   37a04:	str	r4, [sp, #68]	; 0x44
   37a08:	ldr	r6, [sp, #84]	; 0x54
   37a0c:	ldr	r1, [r1, r7, lsl #2]
   37a10:	str	r5, [ip, r7, lsl #2]
   37a14:	add	r6, r6, #1
   37a18:	cmp	r6, #4
   37a1c:	str	r6, [sp, #84]	; 0x54
   37a20:	sub	r4, r1, #1
   37a24:	ldr	r1, [fp, #8]
   37a28:	str	r4, [lr, r7, lsl #2]
   37a2c:	ldr	ip, [r1, r7, lsl #2]
   37a30:	bcs	37a40 <GetDataSlab+0x7ac0>
   37a34:	mov	r1, ip
   37a38:	mov	r2, r7
   37a3c:	b	37ac8 <GetDataSlab+0x7b48>
   37a40:	vmov.i32	q9, #1	; 0x00000001
   37a44:	vmov.i32	q10, #1	; 0x00000001
   37a48:	vmov.32	d23[1], ip
   37a4c:	vmov.i32	q8, #1	; 0x00000001
   37a50:	bic	r1, r6, #3
   37a54:	bic	r8, r7, #3
   37a58:	sub	r2, r7, r1
   37a5c:	vmov.32	d18[0], r5
   37a60:	vmov.32	d20[0], r4
   37a64:	mov	r4, sl
   37a68:	vorr	d16, d18, d18
   37a6c:	vmov.i32	q9, #1	; 0x00000001
   37a70:	vorr	d18, d20, d20
   37a74:	vld1.32	{d20-d21}, [r4], r9
   37a78:	subs	r8, r8, #4
   37a7c:	vrev64.32	q12, q10
   37a80:	vext.8	q12, q12, q12, #8
   37a84:	vext.8	q11, q11, q12, #12
   37a88:	vmul.i32	q9, q9, q12
   37a8c:	vmul.i32	q8, q11, q8
   37a90:	vorr	q11, q12, q12
   37a94:	bne	37a74 <GetDataSlab+0x7af4>
   37a98:	vext.8	q11, q9, q8, #8
   37a9c:	vext.8	q12, q8, q8, #8
   37aa0:	cmp	r6, r1
   37aa4:	vmul.i32	q0, q9, q11
   37aa8:	vmul.i32	q1, q8, q12
   37aac:	vmul.i32	q8, q0, d0[1]
   37ab0:	vmul.i32	q9, q1, d2[1]
   37ab4:	vmov.32	r4, d16[0]
   37ab8:	vmov.32	r5, d18[0]
   37abc:	beq	379a4 <GetDataSlab+0x7a24>
   37ac0:	vmov.32	r1, d20[0]
   37ac4:	ldr	r8, [sp, #88]	; 0x58
   37ac8:	mul	r5, r1, r5
   37acc:	ldr	r1, [r0, r2, lsl #2]
   37ad0:	subs	r2, r2, #1
   37ad4:	mul	r4, r4, r1
   37ad8:	bne	37ac8 <GetDataSlab+0x7b48>
   37adc:	b	379a8 <GetDataSlab+0x7a28>
   37ae0:	ldr	r0, [sl]
   37ae4:	mov	r3, #0
   37ae8:	sub	lr, fp, #96	; 0x60
   37aec:	str	r0, [sp, #56]	; 0x38
   37af0:	sub	r0, r0, #1
   37af4:	str	r0, [fp, #-96]	; 0xffffffa0
   37af8:	ldr	r0, [fp, #8]
   37afc:	ldr	r0, [r0]
   37b00:	str	r0, [sp, #60]	; 0x3c
   37b04:	str	r0, [fp, #-176]	; 0xffffff50
   37b08:	ldr	r0, [fp, #20]
   37b0c:	ldr	r1, [r0]
   37b10:	ldr	r0, [fp, #24]
   37b14:	cmp	r0, #2
   37b18:	str	r1, [sp, #72]	; 0x48
   37b1c:	str	r1, [sp, #76]	; 0x4c
   37b20:	blt	4325c <GetDataSlab+0x132dc>
   37b24:	ldr	r0, [fp, #8]
   37b28:	ldr	r5, [sp, #60]	; 0x3c
   37b2c:	mov	r7, #1
   37b30:	mvn	r9, #15
   37b34:	mov	r3, #0
   37b38:	mov	r1, r0
   37b3c:	sub	r0, r0, #4
   37b40:	mov	r4, r5
   37b44:	sub	sl, r1, #12
   37b48:	mov	r1, #0
   37b4c:	str	r1, [sp, #84]	; 0x54
   37b50:	ldr	r1, [sp, #72]	; 0x48
   37b54:	str	r1, [sp, #76]	; 0x4c
   37b58:	b	37bb8 <GetDataSlab+0x7c38>
   37b5c:	ldr	r8, [sp, #88]	; 0x58
   37b60:	sub	r1, fp, #176	; 0xb0
   37b64:	sub	lr, fp, #96	; 0x60
   37b68:	add	sl, sl, #4
   37b6c:	mov	r2, r1
   37b70:	str	r5, [r1, r7, lsl #2]
   37b74:	ldr	r1, [fp, #12]
   37b78:	str	r4, [lr, r7, lsl #2]
   37b7c:	ldr	r4, [sp, #68]	; 0x44
   37b80:	ldr	r1, [r1, r7, lsl #2]
   37b84:	mla	r3, r1, r4, r3
   37b88:	ldr	r1, [fp, #20]
   37b8c:	ldr	r4, [sp, #76]	; 0x4c
   37b90:	ldr	r1, [r1, r7, lsl #2]
   37b94:	add	r7, r7, #1
   37b98:	mul	r4, r1, r4
   37b9c:	ldr	r1, [fp, #24]
   37ba0:	str	r4, [sp, #76]	; 0x4c
   37ba4:	mov	r4, r5
   37ba8:	mov	r5, ip
   37bac:	mov	ip, r2
   37bb0:	cmp	r7, r1
   37bb4:	beq	4325c <GetDataSlab+0x132dc>
   37bb8:	ldr	r1, [fp, #16]
   37bbc:	str	r4, [sp, #68]	; 0x44
   37bc0:	ldr	r6, [sp, #84]	; 0x54
   37bc4:	ldr	r1, [r1, r7, lsl #2]
   37bc8:	str	r5, [ip, r7, lsl #2]
   37bcc:	add	r6, r6, #1
   37bd0:	cmp	r6, #4
   37bd4:	str	r6, [sp, #84]	; 0x54
   37bd8:	sub	r4, r1, #1
   37bdc:	ldr	r1, [fp, #8]
   37be0:	str	r4, [lr, r7, lsl #2]
   37be4:	ldr	ip, [r1, r7, lsl #2]
   37be8:	bcs	37bf8 <GetDataSlab+0x7c78>
   37bec:	mov	r1, ip
   37bf0:	mov	r2, r7
   37bf4:	b	37c80 <GetDataSlab+0x7d00>
   37bf8:	vmov.i32	q9, #1	; 0x00000001
   37bfc:	vmov.i32	q10, #1	; 0x00000001
   37c00:	vmov.32	d23[1], ip
   37c04:	vmov.i32	q8, #1	; 0x00000001
   37c08:	bic	r1, r6, #3
   37c0c:	bic	r8, r7, #3
   37c10:	sub	r2, r7, r1
   37c14:	vmov.32	d18[0], r5
   37c18:	vmov.32	d20[0], r4
   37c1c:	mov	r4, sl
   37c20:	vorr	d16, d18, d18
   37c24:	vmov.i32	q9, #1	; 0x00000001
   37c28:	vorr	d18, d20, d20
   37c2c:	vld1.32	{d20-d21}, [r4], r9
   37c30:	subs	r8, r8, #4
   37c34:	vrev64.32	q12, q10
   37c38:	vext.8	q12, q12, q12, #8
   37c3c:	vext.8	q11, q11, q12, #12
   37c40:	vmul.i32	q9, q9, q12
   37c44:	vmul.i32	q8, q11, q8
   37c48:	vorr	q11, q12, q12
   37c4c:	bne	37c2c <GetDataSlab+0x7cac>
   37c50:	vext.8	q11, q9, q8, #8
   37c54:	vext.8	q12, q8, q8, #8
   37c58:	cmp	r6, r1
   37c5c:	vmul.i32	q0, q9, q11
   37c60:	vmul.i32	q1, q8, q12
   37c64:	vmul.i32	q8, q0, d0[1]
   37c68:	vmul.i32	q9, q1, d2[1]
   37c6c:	vmov.32	r4, d16[0]
   37c70:	vmov.32	r5, d18[0]
   37c74:	beq	37b5c <GetDataSlab+0x7bdc>
   37c78:	vmov.32	r1, d20[0]
   37c7c:	ldr	r8, [sp, #88]	; 0x58
   37c80:	mul	r5, r1, r5
   37c84:	ldr	r1, [r0, r2, lsl #2]
   37c88:	subs	r2, r2, #1
   37c8c:	mul	r4, r4, r1
   37c90:	bne	37c80 <GetDataSlab+0x7d00>
   37c94:	b	37b60 <GetDataSlab+0x7be0>
   37c98:	ldr	r0, [sl]
   37c9c:	mov	r1, #0
   37ca0:	sub	lr, fp, #96	; 0x60
   37ca4:	str	r0, [sp, #40]	; 0x28
   37ca8:	sub	r0, r0, #1
   37cac:	str	r0, [fp, #-96]	; 0xffffffa0
   37cb0:	ldr	r0, [fp, #8]
   37cb4:	ldr	r0, [r0]
   37cb8:	str	r0, [sp, #60]	; 0x3c
   37cbc:	str	r0, [fp, #-176]	; 0xffffff50
   37cc0:	ldr	r0, [fp, #20]
   37cc4:	ldr	r2, [r0]
   37cc8:	ldr	r0, [fp, #24]
   37ccc:	cmp	r0, #2
   37cd0:	str	r2, [sp, #64]	; 0x40
   37cd4:	str	r2, [sp, #76]	; 0x4c
   37cd8:	blt	434e0 <GetDataSlab+0x13560>
   37cdc:	ldr	r0, [fp, #8]
   37ce0:	ldr	r3, [sp, #60]	; 0x3c
   37ce4:	ldr	r2, [sp, #64]	; 0x40
   37ce8:	mov	r6, #1
   37cec:	mov	r9, #0
   37cf0:	mvn	r5, #15
   37cf4:	mov	r1, r0
   37cf8:	sub	r0, r0, #4
   37cfc:	mov	r8, r3
   37d00:	str	r2, [sp, #76]	; 0x4c
   37d04:	sub	sl, r1, #12
   37d08:	mov	r1, #0
   37d0c:	b	37d64 <GetDataSlab+0x7de4>
   37d10:	sub	r2, fp, #176	; 0xb0
   37d14:	sub	lr, fp, #96	; 0x60
   37d18:	add	sl, sl, #4
   37d1c:	mov	r7, r2
   37d20:	str	r3, [r2, r6, lsl #2]
   37d24:	ldr	r2, [fp, #12]
   37d28:	str	r4, [lr, r6, lsl #2]
   37d2c:	ldr	r4, [sp, #76]	; 0x4c
   37d30:	ldr	r2, [r2, r6, lsl #2]
   37d34:	mla	r1, r2, r8, r1
   37d38:	ldr	r2, [fp, #20]
   37d3c:	mov	r8, r3
   37d40:	mov	r3, ip
   37d44:	mov	ip, r7
   37d48:	ldr	r2, [r2, r6, lsl #2]
   37d4c:	add	r6, r6, #1
   37d50:	mul	r4, r2, r4
   37d54:	ldr	r2, [fp, #24]
   37d58:	str	r4, [sp, #76]	; 0x4c
   37d5c:	cmp	r6, r2
   37d60:	beq	434e0 <GetDataSlab+0x13560>
   37d64:	ldr	r2, [fp, #16]
   37d68:	add	r9, r9, #1
   37d6c:	cmp	r9, #4
   37d70:	ldr	r2, [r2, r6, lsl #2]
   37d74:	str	r3, [ip, r6, lsl #2]
   37d78:	sub	r4, r2, #1
   37d7c:	ldr	r2, [fp, #8]
   37d80:	str	r4, [lr, r6, lsl #2]
   37d84:	ldr	ip, [r2, r6, lsl #2]
   37d88:	bcs	37d98 <GetDataSlab+0x7e18>
   37d8c:	mov	r2, ip
   37d90:	mov	r7, r6
   37d94:	b	37e24 <GetDataSlab+0x7ea4>
   37d98:	vmov.i32	q9, #1	; 0x00000001
   37d9c:	vmov.i32	q10, #1	; 0x00000001
   37da0:	vmov.32	d23[1], ip
   37da4:	vmov.i32	q8, #1	; 0x00000001
   37da8:	mov	lr, r9
   37dac:	bic	r9, r9, #3
   37db0:	bic	r2, r6, #3
   37db4:	sub	r7, r6, r9
   37db8:	vmov.32	d18[0], r3
   37dbc:	vmov.32	d20[0], r4
   37dc0:	mov	r3, sl
   37dc4:	vorr	d16, d18, d18
   37dc8:	vmov.i32	q9, #1	; 0x00000001
   37dcc:	vorr	d18, d20, d20
   37dd0:	vld1.32	{d20-d21}, [r3], r5
   37dd4:	subs	r2, r2, #4
   37dd8:	vrev64.32	q12, q10
   37ddc:	vext.8	q12, q12, q12, #8
   37de0:	vext.8	q11, q11, q12, #12
   37de4:	vmul.i32	q9, q9, q12
   37de8:	vmul.i32	q8, q11, q8
   37dec:	vorr	q11, q12, q12
   37df0:	bne	37dd0 <GetDataSlab+0x7e50>
   37df4:	vext.8	q11, q9, q8, #8
   37df8:	vext.8	q12, q8, q8, #8
   37dfc:	cmp	lr, r9
   37e00:	mov	r9, lr
   37e04:	vmul.i32	q0, q9, q11
   37e08:	vmul.i32	q1, q8, q12
   37e0c:	vmul.i32	q8, q0, d0[1]
   37e10:	vmul.i32	q9, q1, d2[1]
   37e14:	vmov.32	r4, d16[0]
   37e18:	vmov.32	r3, d18[0]
   37e1c:	beq	37d10 <GetDataSlab+0x7d90>
   37e20:	vmov.32	r2, d20[0]
   37e24:	mul	r3, r2, r3
   37e28:	ldr	r2, [r0, r7, lsl #2]
   37e2c:	subs	r7, r7, #1
   37e30:	mul	r4, r4, r2
   37e34:	bne	37e24 <GetDataSlab+0x7ea4>
   37e38:	b	37d10 <GetDataSlab+0x7d90>
   37e3c:	ldr	r0, [sl]
   37e40:	mov	r1, #0
   37e44:	sub	lr, fp, #96	; 0x60
   37e48:	str	r0, [sp, #40]	; 0x28
   37e4c:	sub	r0, r0, #1
   37e50:	str	r0, [fp, #-96]	; 0xffffffa0
   37e54:	ldr	r0, [fp, #8]
   37e58:	ldr	r0, [r0]
   37e5c:	str	r0, [sp, #72]	; 0x48
   37e60:	str	r0, [fp, #-176]	; 0xffffff50
   37e64:	ldr	r0, [fp, #20]
   37e68:	ldr	r2, [r0]
   37e6c:	ldr	r0, [fp, #24]
   37e70:	cmp	r0, #2
   37e74:	str	r2, [sp, #64]	; 0x40
   37e78:	str	r2, [sp, #76]	; 0x4c
   37e7c:	blt	43778 <GetDataSlab+0x137f8>
   37e80:	ldr	r0, [fp, #8]
   37e84:	ldr	r3, [sp, #72]	; 0x48
   37e88:	ldr	r2, [sp, #64]	; 0x40
   37e8c:	mov	r6, #1
   37e90:	mov	r9, #0
   37e94:	mvn	r5, #15
   37e98:	mov	r1, r0
   37e9c:	sub	r0, r0, #4
   37ea0:	mov	r8, r3
   37ea4:	str	r2, [sp, #76]	; 0x4c
   37ea8:	sub	sl, r1, #12
   37eac:	mov	r1, #0
   37eb0:	b	37f08 <GetDataSlab+0x7f88>
   37eb4:	sub	r2, fp, #176	; 0xb0
   37eb8:	sub	lr, fp, #96	; 0x60
   37ebc:	add	sl, sl, #4
   37ec0:	mov	r7, r2
   37ec4:	str	r3, [r2, r6, lsl #2]
   37ec8:	ldr	r2, [fp, #12]
   37ecc:	str	r4, [lr, r6, lsl #2]
   37ed0:	ldr	r4, [sp, #76]	; 0x4c
   37ed4:	ldr	r2, [r2, r6, lsl #2]
   37ed8:	mla	r1, r2, r8, r1
   37edc:	ldr	r2, [fp, #20]
   37ee0:	mov	r8, r3
   37ee4:	mov	r3, ip
   37ee8:	mov	ip, r7
   37eec:	ldr	r2, [r2, r6, lsl #2]
   37ef0:	add	r6, r6, #1
   37ef4:	mul	r4, r2, r4
   37ef8:	ldr	r2, [fp, #24]
   37efc:	str	r4, [sp, #76]	; 0x4c
   37f00:	cmp	r6, r2
   37f04:	beq	43778 <GetDataSlab+0x137f8>
   37f08:	ldr	r2, [fp, #16]
   37f0c:	add	r9, r9, #1
   37f10:	cmp	r9, #4
   37f14:	ldr	r2, [r2, r6, lsl #2]
   37f18:	str	r3, [ip, r6, lsl #2]
   37f1c:	sub	r4, r2, #1
   37f20:	ldr	r2, [fp, #8]
   37f24:	str	r4, [lr, r6, lsl #2]
   37f28:	ldr	ip, [r2, r6, lsl #2]
   37f2c:	bcs	37f3c <GetDataSlab+0x7fbc>
   37f30:	mov	r2, ip
   37f34:	mov	r7, r6
   37f38:	b	37fcc <GetDataSlab+0x804c>
   37f3c:	vmov.i32	q9, #1	; 0x00000001
   37f40:	vmov.i32	q10, #1	; 0x00000001
   37f44:	vmov.32	d23[1], ip
   37f48:	mov	r2, r9
   37f4c:	vmov.i32	q8, #1	; 0x00000001
   37f50:	bic	r9, r6, #3
   37f54:	mov	lr, r2
   37f58:	bic	r2, r2, #3
   37f5c:	sub	r7, r6, r2
   37f60:	vmov.32	d18[0], r3
   37f64:	vmov.32	d20[0], r4
   37f68:	mov	r3, sl
   37f6c:	vorr	d16, d18, d18
   37f70:	vmov.i32	q9, #1	; 0x00000001
   37f74:	vorr	d18, d20, d20
   37f78:	vld1.32	{d20-d21}, [r3], r5
   37f7c:	subs	r9, r9, #4
   37f80:	vrev64.32	q12, q10
   37f84:	vext.8	q12, q12, q12, #8
   37f88:	vext.8	q11, q11, q12, #12
   37f8c:	vmul.i32	q9, q9, q12
   37f90:	vmul.i32	q8, q11, q8
   37f94:	vorr	q11, q12, q12
   37f98:	bne	37f78 <GetDataSlab+0x7ff8>
   37f9c:	vext.8	q11, q9, q8, #8
   37fa0:	vext.8	q12, q8, q8, #8
   37fa4:	mov	r9, lr
   37fa8:	cmp	lr, r2
   37fac:	vmul.i32	q0, q9, q11
   37fb0:	vmul.i32	q1, q8, q12
   37fb4:	vmul.i32	q8, q0, d0[1]
   37fb8:	vmul.i32	q9, q1, d2[1]
   37fbc:	vmov.32	r4, d16[0]
   37fc0:	vmov.32	r3, d18[0]
   37fc4:	beq	37eb4 <GetDataSlab+0x7f34>
   37fc8:	vmov.32	r2, d20[0]
   37fcc:	mul	r3, r2, r3
   37fd0:	ldr	r2, [r0, r7, lsl #2]
   37fd4:	subs	r7, r7, #1
   37fd8:	mul	r4, r4, r2
   37fdc:	bne	37fcc <GetDataSlab+0x804c>
   37fe0:	b	37eb4 <GetDataSlab+0x7f34>
   37fe4:	ldr	r0, [sl]
   37fe8:	mov	r1, #0
   37fec:	sub	r7, fp, #96	; 0x60
   37ff0:	str	r0, [sp, #60]	; 0x3c
   37ff4:	sub	r0, r0, #1
   37ff8:	str	r0, [fp, #-96]	; 0xffffffa0
   37ffc:	ldr	r0, [fp, #8]
   38000:	ldr	r0, [r0]
   38004:	str	r0, [sp, #44]	; 0x2c
   38008:	str	r0, [fp, #-176]	; 0xffffff50
   3800c:	ldr	r0, [fp, #20]
   38010:	ldr	r2, [r0]
   38014:	ldr	r0, [fp, #24]
   38018:	cmp	r0, #2
   3801c:	str	r2, [sp, #56]	; 0x38
   38020:	str	r2, [sp, #68]	; 0x44
   38024:	blt	43980 <GetDataSlab+0x13a00>
   38028:	ldr	r0, [fp, #8]
   3802c:	ldr	r2, [sp, #44]	; 0x2c
   38030:	mov	r5, #1
   38034:	mov	lr, #0
   38038:	mvn	r4, #15
   3803c:	mov	r1, #0
   38040:	sub	r3, r0, #4
   38044:	sub	sl, r0, #12
   38048:	ldr	r0, [sp, #56]	; 0x38
   3804c:	mov	r9, r2
   38050:	str	r0, [sp, #68]	; 0x44
   38054:	b	380a8 <GetDataSlab+0x8128>
   38058:	ldr	r8, [sp, #88]	; 0x58
   3805c:	sub	r7, fp, #96	; 0x60
   38060:	sub	ip, fp, #176	; 0xb0
   38064:	ldr	r6, [sp, #68]	; 0x44
   38068:	add	sl, sl, #4
   3806c:	str	r0, [r7, r5, lsl #2]
   38070:	ldr	r0, [fp, #12]
   38074:	str	r2, [ip, r5, lsl #2]
   38078:	ldr	r0, [r0, r5, lsl #2]
   3807c:	mla	r1, r0, r9, r1
   38080:	ldr	r0, [fp, #20]
   38084:	mov	r9, r2
   38088:	ldr	r2, [sp, #84]	; 0x54
   3808c:	ldr	r0, [r0, r5, lsl #2]
   38090:	add	r5, r5, #1
   38094:	mul	r6, r0, r6
   38098:	ldr	r0, [fp, #24]
   3809c:	str	r6, [sp, #68]	; 0x44
   380a0:	cmp	r5, r0
   380a4:	beq	43980 <GetDataSlab+0x13a00>
   380a8:	ldr	r0, [fp, #16]
   380ac:	add	lr, lr, #1
   380b0:	cmp	lr, #4
   380b4:	ldr	r0, [r0, r5, lsl #2]
   380b8:	str	r2, [ip, r5, lsl #2]
   380bc:	sub	r0, r0, #1
   380c0:	str	r0, [r7, r5, lsl #2]
   380c4:	ldr	r7, [fp, #8]
   380c8:	ldr	r7, [r7, r5, lsl #2]
   380cc:	str	r7, [sp, #84]	; 0x54
   380d0:	bcs	380dc <GetDataSlab+0x815c>
   380d4:	mov	r6, r5
   380d8:	b	38164 <GetDataSlab+0x81e4>
   380dc:	vmov.i32	q9, #1	; 0x00000001
   380e0:	vmov.i32	q10, #1	; 0x00000001
   380e4:	vmov.32	d23[1], r7
   380e8:	vmov.i32	q8, #1	; 0x00000001
   380ec:	bic	r7, lr, #3
   380f0:	bic	r8, r5, #3
   380f4:	sub	r6, r5, r7
   380f8:	vmov.32	d18[0], r2
   380fc:	vmov.32	d20[0], r0
   38100:	mov	r0, sl
   38104:	vorr	d16, d18, d18
   38108:	vmov.i32	q9, #1	; 0x00000001
   3810c:	vorr	d18, d20, d20
   38110:	vld1.32	{d20-d21}, [r0], r4
   38114:	subs	r8, r8, #4
   38118:	vrev64.32	q12, q10
   3811c:	vext.8	q12, q12, q12, #8
   38120:	vext.8	q11, q11, q12, #12
   38124:	vmul.i32	q9, q9, q12
   38128:	vmul.i32	q8, q11, q8
   3812c:	vorr	q11, q12, q12
   38130:	bne	38110 <GetDataSlab+0x8190>
   38134:	vext.8	q11, q9, q8, #8
   38138:	vext.8	q12, q8, q8, #8
   3813c:	cmp	lr, r7
   38140:	vmul.i32	q0, q9, q11
   38144:	vmul.i32	q1, q8, q12
   38148:	vmul.i32	q8, q0, d0[1]
   3814c:	vmul.i32	q9, q1, d2[1]
   38150:	vmov.32	r0, d16[0]
   38154:	vmov.32	r2, d18[0]
   38158:	beq	38058 <GetDataSlab+0x80d8>
   3815c:	vmov.32	r7, d20[0]
   38160:	ldr	r8, [sp, #88]	; 0x58
   38164:	mul	r2, r7, r2
   38168:	ldr	r7, [r3, r6, lsl #2]
   3816c:	subs	r6, r6, #1
   38170:	mul	r0, r0, r7
   38174:	bne	38164 <GetDataSlab+0x81e4>
   38178:	b	3805c <GetDataSlab+0x80dc>
   3817c:	ldr	r0, [sp, #80]	; 0x50
   38180:	cmp	sl, #1
   38184:	add	ip, r0, r3
   38188:	bne	48528 <GetDataSlab+0x185a8>
   3818c:	ldr	r0, [sp, #76]	; 0x4c
   38190:	ldr	r2, [fp, #12]
   38194:	sub	r7, fp, #96	; 0x60
   38198:	cmp	r0, #1
   3819c:	blt	56468 <GetDataSlab+0x264e8>
   381a0:	ldr	lr, [sp, #56]	; 0x38
   381a4:	mov	r1, #1
   381a8:	ldr	r8, [sp, #88]	; 0x58
   381ac:	sub	r6, fp, #216	; 0xd8
   381b0:	sub	r0, lr, #8
   381b4:	add	r1, r1, r0, lsr #3
   381b8:	lsr	r0, r0, #3
   381bc:	str	r0, [sp, #20]
   381c0:	mov	r0, #0
   381c4:	and	r4, r1, #1
   381c8:	str	r0, [sp, #72]	; 0x48
   381cc:	sub	r1, r1, r4
   381d0:	str	r4, [sp, #28]
   381d4:	str	r1, [sp, #12]
   381d8:	sub	r1, fp, #136	; 0x88
   381dc:	orr	r4, r1, #4
   381e0:	ldr	r1, [fp, #20]
   381e4:	add	sl, r1, #4
   381e8:	sub	r1, fp, #176	; 0xb0
   381ec:	orr	r1, r1, #4
   381f0:	str	sl, [sp, #16]
   381f4:	str	r1, [sp, #84]	; 0x54
   381f8:	add	r1, r2, #4
   381fc:	str	r1, [sp, #80]	; 0x50
   38200:	ldr	r1, [fp, #24]
   38204:	sub	r1, r1, #1
   38208:	str	r1, [sp, #40]	; 0x28
   3820c:	orr	r1, r7, #4
   38210:	str	r1, [sp, #32]
   38214:	lsl	r1, lr, #1
   38218:	str	r1, [sp, #64]	; 0x40
   3821c:	and	r1, lr, #1
   38220:	str	r1, [sp, #44]	; 0x2c
   38224:	bic	r1, lr, #7
   38228:	str	r1, [sp, #24]
   3822c:	mov	r1, #0
   38230:	b	38274 <GetDataSlab+0x82f4>
   38234:	ldr	r0, [sp, #32]
   38238:	mov	r6, r9
   3823c:	ldr	r0, [r0, r1]
   38240:	add	ip, ip, r0
   38244:	add	r3, r0, r3
   38248:	ldr	r0, [sp, #64]	; 0x40
   3824c:	ldr	r2, [sp, #72]	; 0x48
   38250:	ldr	r1, [sp, #68]	; 0x44
   38254:	add	r8, r8, r0
   38258:	ldr	r0, [sp, #76]	; 0x4c
   3825c:	add	r2, r2, lr
   38260:	add	r1, r1, #1
   38264:	str	r2, [sp, #72]	; 0x48
   38268:	cmp	r2, r0
   3826c:	mov	r2, #0
   38270:	bge	56c1c <GetDataSlab+0x26c9c>
   38274:	cmp	lr, #1
   38278:	str	r1, [sp, #68]	; 0x44
   3827c:	blt	3842c <GetDataSlab+0x84ac>
   38280:	ldr	r0, [fp, #12]
   38284:	str	r8, [sp, #60]	; 0x3c
   38288:	mov	r8, lr
   3828c:	ldr	r5, [sp, #72]	; 0x48
   38290:	mov	r9, #0
   38294:	cmp	r8, #8
   38298:	ldr	lr, [r0]
   3829c:	ldr	r0, [sp, #88]	; 0x58
   382a0:	add	r5, r0, r5, lsl #1
   382a4:	add	r2, ip, lr
   382a8:	str	r5, [sp, #48]	; 0x30
   382ac:	bcs	382c0 <GetDataSlab+0x8340>
   382b0:	mov	r5, lr
   382b4:	mov	lr, r8
   382b8:	ldr	r8, [sp, #60]	; 0x3c
   382bc:	b	383c4 <GetDataSlab+0x8444>
   382c0:	ldr	r5, [sp, #64]	; 0x40
   382c4:	add	r7, ip, r8
   382c8:	add	r7, r7, lr
   382cc:	mla	r0, r5, r1, r0
   382d0:	mov	r5, lr
   382d4:	mov	lr, r8
   382d8:	ldr	r8, [sp, #60]	; 0x3c
   382dc:	cmp	r0, r7
   382e0:	bcs	382fc <GetDataSlab+0x837c>
   382e4:	ldr	r0, [sp, #64]	; 0x40
   382e8:	ldr	r7, [sp, #88]	; 0x58
   382ec:	mla	r0, r0, r1, r0
   382f0:	add	r0, r7, r0
   382f4:	cmp	r2, r0
   382f8:	bcc	383c4 <GetDataSlab+0x8444>
   382fc:	ldr	r0, [sp, #20]
   38300:	mov	r1, #0
   38304:	str	r5, [sp, #36]	; 0x24
   38308:	cmp	r0, #0
   3830c:	beq	3836c <GetDataSlab+0x83ec>
   38310:	ldr	sl, [sp, #12]
   38314:	mov	lr, r8
   38318:	mov	r5, #32
   3831c:	sub	r8, fp, #208	; 0xd0
   38320:	mov	r0, r2
   38324:	subs	sl, sl, #2
   38328:	ldr	r7, [r0, r1]!
   3832c:	add	r1, r1, #16
   38330:	str	r7, [fp, #-216]	; 0xffffff28
   38334:	ldr	r7, [r0, #4]
   38338:	str	r7, [fp, #-212]	; 0xffffff2c
   3833c:	add	r7, lr, #16
   38340:	vld1.8	{d16}, [r6 :64]
   38344:	vmovl.s8	q8, d16
   38348:	vst1.16	{d16-d17}, [lr], r5
   3834c:	ldr	r9, [r0, #8]
   38350:	ldr	r0, [r0, #12]
   38354:	str	r0, [fp, #-204]	; 0xffffff34
   38358:	str	r9, [fp, #-208]	; 0xffffff30
   3835c:	vld1.8	{d16}, [r8 :64]
   38360:	vmovl.s8	q8, d16
   38364:	vst1.16	{d16-d17}, [r7]
   38368:	bne	38320 <GetDataSlab+0x83a0>
   3836c:	ldr	r0, [sp, #28]
   38370:	ldr	sl, [sp, #16]
   38374:	ldr	r5, [sp, #36]	; 0x24
   38378:	cmp	r0, #0
   3837c:	beq	383ac <GetDataSlab+0x842c>
   38380:	mov	r0, r2
   38384:	ldr	r7, [r0, r1]!
   38388:	str	r7, [fp, #-224]	; 0xffffff20
   3838c:	ldr	r0, [r0, #4]
   38390:	str	r0, [fp, #-220]	; 0xffffff24
   38394:	sub	r0, fp, #224	; 0xe0
   38398:	vld1.8	{d16}, [r0 :64]
   3839c:	ldr	r0, [sp, #48]	; 0x30
   383a0:	add	r0, r0, r1, lsl #1
   383a4:	vmovl.s8	q8, d16
   383a8:	vst1.16	{d16-d17}, [r0]
   383ac:	ldr	r1, [sp, #24]
   383b0:	ldr	lr, [sp, #56]	; 0x38
   383b4:	ldr	r8, [sp, #60]	; 0x3c
   383b8:	cmp	lr, r1
   383bc:	mov	r9, r1
   383c0:	beq	3842c <GetDataSlab+0x84ac>
   383c4:	ldr	r0, [sp, #44]	; 0x2c
   383c8:	mov	r7, r9
   383cc:	cmp	r0, #0
   383d0:	beq	383ec <GetDataSlab+0x846c>
   383d4:	ldr	r0, [sp, #48]	; 0x30
   383d8:	add	r2, r2, r9
   383dc:	orr	r7, r9, #1
   383e0:	ldrsb	r2, [r2]
   383e4:	add	r0, r0, r9, lsl #1
   383e8:	strh	r2, [r0]
   383ec:	orr	r0, r9, #1
   383f0:	cmp	lr, r0
   383f4:	beq	3842c <GetDataSlab+0x84ac>
   383f8:	add	r0, r7, r5
   383fc:	add	r1, r8, r7, lsl #1
   38400:	sub	r2, lr, r7
   38404:	add	r0, ip, r0
   38408:	add	r7, r0, #1
   3840c:	ldrsb	r0, [r7, #-1]
   38410:	subs	r2, r2, #2
   38414:	strh	r0, [r1]
   38418:	ldrsb	r0, [r7]
   3841c:	add	r7, r7, #2
   38420:	strh	r0, [r1, #2]
   38424:	add	r1, r1, #4
   38428:	bne	3840c <GetDataSlab+0x848c>
   3842c:	ldr	r0, [sp, #52]	; 0x34
   38430:	add	ip, ip, r0
   38434:	add	r3, r3, r0
   38438:	ldr	r0, [fp, #24]
   3843c:	cmp	r0, #2
   38440:	blt	38248 <GetDataSlab+0x82c8>
   38444:	ldr	r2, [sp, #40]	; 0x28
   38448:	mov	r1, #0
   3844c:	b	38480 <GetDataSlab+0x8500>
   38450:	ldr	r5, [sp, #80]	; 0x50
   38454:	sub	r6, fp, #176	; 0xb0
   38458:	sub	r0, r7, r0
   3845c:	ldr	r6, [r6, r1]
   38460:	ldr	r5, [r5, r1]
   38464:	mla	r0, r5, r6, r0
   38468:	add	r3, r0, r3
   3846c:	add	ip, ip, r0
   38470:	mov	r6, r9
   38474:	subs	r2, r2, #1
   38478:	add	r1, r1, #4
   3847c:	beq	38248 <GetDataSlab+0x82c8>
   38480:	ldr	r0, [r4, r1]
   38484:	mov	r9, r6
   38488:	add	r0, r0, #1
   3848c:	str	r0, [r4, r1]
   38490:	ldr	r7, [sl, r1]
   38494:	sdiv	r6, r0, r7
   38498:	mls	r0, r6, r7, r0
   3849c:	cmp	r0, #0
   384a0:	bne	38234 <GetDataSlab+0x82b4>
   384a4:	mov	r0, #0
   384a8:	str	r0, [r4, r1]
   384ac:	ldr	r0, [sp, #84]	; 0x54
   384b0:	ldr	r7, [r0, r1]
   384b4:	sdiv	r0, r3, r7
   384b8:	mls	r0, r0, r7, r3
   384bc:	cmp	r0, #0
   384c0:	bne	38450 <GetDataSlab+0x84d0>
   384c4:	ldr	r0, [sp, #80]	; 0x50
   384c8:	ldr	r0, [r0, r1]
   384cc:	cmp	r0, #0
   384d0:	beq	38470 <GetDataSlab+0x84f0>
   384d4:	sub	r7, fp, #176	; 0xb0
   384d8:	ldr	r7, [r7, r1]
   384dc:	mla	r3, r7, r0, r3
   384e0:	mla	ip, r7, r0, ip
   384e4:	b	38470 <GetDataSlab+0x84f0>
   384e8:	ldr	r5, [sl]
   384ec:	mov	r7, #0
   384f0:	sub	r9, fp, #176	; 0xb0
   384f4:	sub	r8, fp, #96	; 0x60
   384f8:	sub	r0, r5, #1
   384fc:	str	r0, [fp, #-96]	; 0xffffffa0
   38500:	ldr	r0, [r3]
   38504:	str	r0, [sp, #72]	; 0x48
   38508:	str	r0, [fp, #-176]	; 0xffffff50
   3850c:	ldr	r0, [fp, #20]
   38510:	ldr	r1, [r0]
   38514:	ldr	r0, [fp, #24]
   38518:	cmp	r0, #2
   3851c:	mov	r0, r1
   38520:	str	r1, [sp, #76]	; 0x4c
   38524:	blt	43bfc <GetDataSlab+0x13c7c>
   38528:	ldr	r0, [fp, #8]
   3852c:	ldr	r4, [sp, #72]	; 0x48
   38530:	mov	r3, #0
   38534:	mvn	ip, #15
   38538:	mov	r7, #0
   3853c:	str	r1, [sp, #76]	; 0x4c
   38540:	str	r3, [sp, #84]	; 0x54
   38544:	mov	r3, r1
   38548:	mov	r2, r0
   3854c:	sub	r0, r0, #4
   38550:	mov	r6, r4
   38554:	sub	sl, r2, #12
   38558:	mov	r2, #1
   3855c:	b	385b0 <GetDataSlab+0x8630>
   38560:	sub	r8, fp, #96	; 0x60
   38564:	ldr	r3, [fp, #12]
   38568:	sub	r9, fp, #176	; 0xb0
   3856c:	str	lr, [r8, r2, lsl #2]
   38570:	ldr	r6, [sp, #68]	; 0x44
   38574:	add	sl, sl, #4
   38578:	str	r4, [r9, r2, lsl #2]
   3857c:	ldr	r3, [r3, r2, lsl #2]
   38580:	mla	r7, r3, r6, r7
   38584:	ldr	r3, [fp, #20]
   38588:	ldr	r6, [sp, #76]	; 0x4c
   3858c:	ldr	r3, [r3, r2, lsl #2]
   38590:	add	r2, r2, #1
   38594:	mul	r6, r3, r6
   38598:	ldr	r3, [fp, #24]
   3859c:	str	r6, [sp, #76]	; 0x4c
   385a0:	mov	r6, r4
   385a4:	ldr	r4, [sp, #64]	; 0x40
   385a8:	cmp	r2, r3
   385ac:	beq	43bfc <GetDataSlab+0x13c7c>
   385b0:	ldr	r3, [fp, #16]
   385b4:	str	r6, [sp, #68]	; 0x44
   385b8:	ldr	r3, [r3, r2, lsl #2]
   385bc:	str	r4, [r9, r2, lsl #2]
   385c0:	ldr	r9, [sp, #84]	; 0x54
   385c4:	sub	lr, r3, #1
   385c8:	ldr	r3, [fp, #8]
   385cc:	add	r9, r9, #1
   385d0:	str	lr, [r8, r2, lsl #2]
   385d4:	cmp	r9, #4
   385d8:	str	r9, [sp, #84]	; 0x54
   385dc:	ldr	r6, [r3, r2, lsl #2]
   385e0:	str	r6, [sp, #64]	; 0x40
   385e4:	bcs	385f0 <GetDataSlab+0x8670>
   385e8:	mov	r3, r2
   385ec:	b	38680 <GetDataSlab+0x8700>
   385f0:	vmov.i32	q9, #1	; 0x00000001
   385f4:	vmov.i32	q10, #1	; 0x00000001
   385f8:	vmov.32	d23[1], r6
   385fc:	vmov.i32	q8, #1	; 0x00000001
   38600:	bic	r3, r9, #3
   38604:	bic	r8, r2, #3
   38608:	mov	r6, sl
   3860c:	str	r3, [sp, #60]	; 0x3c
   38610:	sub	r3, r2, r3
   38614:	vmov.32	d18[0], r4
   38618:	vmov.32	d20[0], lr
   3861c:	vorr	d16, d18, d18
   38620:	vmov.i32	q9, #1	; 0x00000001
   38624:	vorr	d18, d20, d20
   38628:	vld1.32	{d20-d21}, [r6], ip
   3862c:	subs	r8, r8, #4
   38630:	vrev64.32	q12, q10
   38634:	vext.8	q12, q12, q12, #8
   38638:	vext.8	q11, q11, q12, #12
   3863c:	vmul.i32	q9, q9, q12
   38640:	vmul.i32	q8, q11, q8
   38644:	vorr	q11, q12, q12
   38648:	bne	38628 <GetDataSlab+0x86a8>
   3864c:	vext.8	q11, q9, q8, #8
   38650:	vext.8	q12, q8, q8, #8
   38654:	ldr	r6, [sp, #60]	; 0x3c
   38658:	vmul.i32	q0, q9, q11
   3865c:	vmul.i32	q1, q8, q12
   38660:	cmp	r9, r6
   38664:	vmul.i32	q8, q0, d0[1]
   38668:	vmul.i32	q9, q1, d2[1]
   3866c:	vmov.32	lr, d16[0]
   38670:	vmov.32	r4, d18[0]
   38674:	beq	38560 <GetDataSlab+0x85e0>
   38678:	vmov.32	r6, d20[0]
   3867c:	sub	r8, fp, #96	; 0x60
   38680:	mul	r4, r6, r4
   38684:	ldr	r6, [r0, r3, lsl #2]
   38688:	subs	r3, r3, #1
   3868c:	mul	lr, lr, r6
   38690:	bne	38680 <GetDataSlab+0x8700>
   38694:	b	38564 <GetDataSlab+0x85e4>
   38698:	ldr	r5, [sl]
   3869c:	mov	r7, #0
   386a0:	sub	r9, fp, #176	; 0xb0
   386a4:	sub	r8, fp, #96	; 0x60
   386a8:	sub	r0, r5, #1
   386ac:	str	r0, [fp, #-96]	; 0xffffffa0
   386b0:	ldr	r0, [r3]
   386b4:	str	r0, [sp, #72]	; 0x48
   386b8:	str	r0, [fp, #-176]	; 0xffffff50
   386bc:	ldr	r0, [fp, #20]
   386c0:	ldr	r1, [r0]
   386c4:	ldr	r0, [fp, #24]
   386c8:	cmp	r0, #2
   386cc:	mov	r0, r1
   386d0:	str	r1, [sp, #76]	; 0x4c
   386d4:	blt	43d90 <GetDataSlab+0x13e10>
   386d8:	ldr	r0, [fp, #8]
   386dc:	ldr	r4, [sp, #72]	; 0x48
   386e0:	mov	r3, #0
   386e4:	mvn	ip, #15
   386e8:	mov	r7, #0
   386ec:	str	r1, [sp, #76]	; 0x4c
   386f0:	str	r3, [sp, #84]	; 0x54
   386f4:	mov	r3, r1
   386f8:	mov	r2, r0
   386fc:	sub	r0, r0, #4
   38700:	mov	r6, r4
   38704:	sub	sl, r2, #12
   38708:	mov	r2, #1
   3870c:	b	38760 <GetDataSlab+0x87e0>
   38710:	sub	r8, fp, #96	; 0x60
   38714:	ldr	r3, [fp, #12]
   38718:	sub	r9, fp, #176	; 0xb0
   3871c:	str	lr, [r8, r2, lsl #2]
   38720:	ldr	r6, [sp, #68]	; 0x44
   38724:	add	sl, sl, #4
   38728:	str	r4, [r9, r2, lsl #2]
   3872c:	ldr	r3, [r3, r2, lsl #2]
   38730:	mla	r7, r3, r6, r7
   38734:	ldr	r3, [fp, #20]
   38738:	ldr	r6, [sp, #76]	; 0x4c
   3873c:	ldr	r3, [r3, r2, lsl #2]
   38740:	add	r2, r2, #1
   38744:	mul	r6, r3, r6
   38748:	ldr	r3, [fp, #24]
   3874c:	str	r6, [sp, #76]	; 0x4c
   38750:	mov	r6, r4
   38754:	ldr	r4, [sp, #64]	; 0x40
   38758:	cmp	r2, r3
   3875c:	beq	43d90 <GetDataSlab+0x13e10>
   38760:	ldr	r3, [fp, #16]
   38764:	str	r6, [sp, #68]	; 0x44
   38768:	ldr	r3, [r3, r2, lsl #2]
   3876c:	str	r4, [r9, r2, lsl #2]
   38770:	ldr	r9, [sp, #84]	; 0x54
   38774:	sub	lr, r3, #1
   38778:	ldr	r3, [fp, #8]
   3877c:	add	r9, r9, #1
   38780:	str	lr, [r8, r2, lsl #2]
   38784:	cmp	r9, #4
   38788:	str	r9, [sp, #84]	; 0x54
   3878c:	ldr	r6, [r3, r2, lsl #2]
   38790:	str	r6, [sp, #64]	; 0x40
   38794:	bcs	387a0 <GetDataSlab+0x8820>
   38798:	mov	r3, r2
   3879c:	b	38830 <GetDataSlab+0x88b0>
   387a0:	vmov.i32	q9, #1	; 0x00000001
   387a4:	vmov.i32	q10, #1	; 0x00000001
   387a8:	vmov.32	d23[1], r6
   387ac:	vmov.i32	q8, #1	; 0x00000001
   387b0:	bic	r3, r9, #3
   387b4:	bic	r8, r2, #3
   387b8:	mov	r6, sl
   387bc:	str	r3, [sp, #60]	; 0x3c
   387c0:	sub	r3, r2, r3
   387c4:	vmov.32	d18[0], r4
   387c8:	vmov.32	d20[0], lr
   387cc:	vorr	d16, d18, d18
   387d0:	vmov.i32	q9, #1	; 0x00000001
   387d4:	vorr	d18, d20, d20
   387d8:	vld1.32	{d20-d21}, [r6], ip
   387dc:	subs	r8, r8, #4
   387e0:	vrev64.32	q12, q10
   387e4:	vext.8	q12, q12, q12, #8
   387e8:	vext.8	q11, q11, q12, #12
   387ec:	vmul.i32	q9, q9, q12
   387f0:	vmul.i32	q8, q11, q8
   387f4:	vorr	q11, q12, q12
   387f8:	bne	387d8 <GetDataSlab+0x8858>
   387fc:	vext.8	q11, q9, q8, #8
   38800:	vext.8	q12, q8, q8, #8
   38804:	ldr	r6, [sp, #60]	; 0x3c
   38808:	vmul.i32	q0, q9, q11
   3880c:	vmul.i32	q1, q8, q12
   38810:	cmp	r9, r6
   38814:	vmul.i32	q8, q0, d0[1]
   38818:	vmul.i32	q9, q1, d2[1]
   3881c:	vmov.32	lr, d16[0]
   38820:	vmov.32	r4, d18[0]
   38824:	beq	38710 <GetDataSlab+0x8790>
   38828:	vmov.32	r6, d20[0]
   3882c:	sub	r8, fp, #96	; 0x60
   38830:	mul	r4, r6, r4
   38834:	ldr	r6, [r0, r3, lsl #2]
   38838:	subs	r3, r3, #1
   3883c:	mul	lr, lr, r6
   38840:	bne	38830 <GetDataSlab+0x88b0>
   38844:	b	38714 <GetDataSlab+0x8794>
   38848:	ldr	r5, [sl]
   3884c:	mov	r7, #0
   38850:	sub	r9, fp, #176	; 0xb0
   38854:	sub	r8, fp, #96	; 0x60
   38858:	sub	r0, r5, #1
   3885c:	str	r0, [fp, #-96]	; 0xffffffa0
   38860:	ldr	r0, [r3]
   38864:	str	r0, [sp, #72]	; 0x48
   38868:	str	r0, [fp, #-176]	; 0xffffff50
   3886c:	ldr	r0, [fp, #20]
   38870:	ldr	r1, [r0]
   38874:	ldr	r0, [fp, #24]
   38878:	cmp	r0, #2
   3887c:	mov	r0, r1
   38880:	str	r1, [sp, #76]	; 0x4c
   38884:	blt	43f24 <GetDataSlab+0x13fa4>
   38888:	ldr	r0, [fp, #8]
   3888c:	ldr	r4, [sp, #72]	; 0x48
   38890:	mov	r3, #0
   38894:	mvn	ip, #15
   38898:	mov	r7, #0
   3889c:	str	r1, [sp, #76]	; 0x4c
   388a0:	str	r3, [sp, #84]	; 0x54
   388a4:	mov	r3, r1
   388a8:	mov	r2, r0
   388ac:	sub	r0, r0, #4
   388b0:	mov	r6, r4
   388b4:	sub	sl, r2, #12
   388b8:	mov	r2, #1
   388bc:	b	38910 <GetDataSlab+0x8990>
   388c0:	sub	r8, fp, #96	; 0x60
   388c4:	ldr	r3, [fp, #12]
   388c8:	sub	r9, fp, #176	; 0xb0
   388cc:	str	lr, [r8, r2, lsl #2]
   388d0:	ldr	r6, [sp, #68]	; 0x44
   388d4:	add	sl, sl, #4
   388d8:	str	r4, [r9, r2, lsl #2]
   388dc:	ldr	r3, [r3, r2, lsl #2]
   388e0:	mla	r7, r3, r6, r7
   388e4:	ldr	r3, [fp, #20]
   388e8:	ldr	r6, [sp, #76]	; 0x4c
   388ec:	ldr	r3, [r3, r2, lsl #2]
   388f0:	add	r2, r2, #1
   388f4:	mul	r6, r3, r6
   388f8:	ldr	r3, [fp, #24]
   388fc:	str	r6, [sp, #76]	; 0x4c
   38900:	mov	r6, r4
   38904:	ldr	r4, [sp, #64]	; 0x40
   38908:	cmp	r2, r3
   3890c:	beq	43f24 <GetDataSlab+0x13fa4>
   38910:	ldr	r3, [fp, #16]
   38914:	str	r6, [sp, #68]	; 0x44
   38918:	ldr	r3, [r3, r2, lsl #2]
   3891c:	str	r4, [r9, r2, lsl #2]
   38920:	ldr	r9, [sp, #84]	; 0x54
   38924:	sub	lr, r3, #1
   38928:	ldr	r3, [fp, #8]
   3892c:	add	r9, r9, #1
   38930:	str	lr, [r8, r2, lsl #2]
   38934:	cmp	r9, #4
   38938:	str	r9, [sp, #84]	; 0x54
   3893c:	ldr	r6, [r3, r2, lsl #2]
   38940:	str	r6, [sp, #64]	; 0x40
   38944:	bcs	38950 <GetDataSlab+0x89d0>
   38948:	mov	r3, r2
   3894c:	b	389e0 <GetDataSlab+0x8a60>
   38950:	vmov.i32	q9, #1	; 0x00000001
   38954:	vmov.i32	q10, #1	; 0x00000001
   38958:	vmov.32	d23[1], r6
   3895c:	vmov.i32	q8, #1	; 0x00000001
   38960:	bic	r3, r9, #3
   38964:	bic	r8, r2, #3
   38968:	mov	r6, sl
   3896c:	str	r3, [sp, #60]	; 0x3c
   38970:	sub	r3, r2, r3
   38974:	vmov.32	d18[0], r4
   38978:	vmov.32	d20[0], lr
   3897c:	vorr	d16, d18, d18
   38980:	vmov.i32	q9, #1	; 0x00000001
   38984:	vorr	d18, d20, d20
   38988:	vld1.32	{d20-d21}, [r6], ip
   3898c:	subs	r8, r8, #4
   38990:	vrev64.32	q12, q10
   38994:	vext.8	q12, q12, q12, #8
   38998:	vext.8	q11, q11, q12, #12
   3899c:	vmul.i32	q9, q9, q12
   389a0:	vmul.i32	q8, q11, q8
   389a4:	vorr	q11, q12, q12
   389a8:	bne	38988 <GetDataSlab+0x8a08>
   389ac:	vext.8	q11, q9, q8, #8
   389b0:	vext.8	q12, q8, q8, #8
   389b4:	ldr	r6, [sp, #60]	; 0x3c
   389b8:	vmul.i32	q0, q9, q11
   389bc:	vmul.i32	q1, q8, q12
   389c0:	cmp	r9, r6
   389c4:	vmul.i32	q8, q0, d0[1]
   389c8:	vmul.i32	q9, q1, d2[1]
   389cc:	vmov.32	lr, d16[0]
   389d0:	vmov.32	r4, d18[0]
   389d4:	beq	388c0 <GetDataSlab+0x8940>
   389d8:	vmov.32	r6, d20[0]
   389dc:	sub	r8, fp, #96	; 0x60
   389e0:	mul	r4, r6, r4
   389e4:	ldr	r6, [r0, r3, lsl #2]
   389e8:	subs	r3, r3, #1
   389ec:	mul	lr, lr, r6
   389f0:	bne	389e0 <GetDataSlab+0x8a60>
   389f4:	b	388c4 <GetDataSlab+0x8944>
   389f8:	ldr	r5, [sl]
   389fc:	mov	r7, #0
   38a00:	sub	r9, fp, #176	; 0xb0
   38a04:	sub	r8, fp, #96	; 0x60
   38a08:	sub	r0, r5, #1
   38a0c:	str	r0, [fp, #-96]	; 0xffffffa0
   38a10:	ldr	r0, [r3]
   38a14:	str	r0, [sp, #72]	; 0x48
   38a18:	str	r0, [fp, #-176]	; 0xffffff50
   38a1c:	ldr	r0, [fp, #20]
   38a20:	ldr	r1, [r0]
   38a24:	ldr	r0, [fp, #24]
   38a28:	cmp	r0, #2
   38a2c:	mov	r0, r1
   38a30:	str	r1, [sp, #76]	; 0x4c
   38a34:	blt	440b8 <GetDataSlab+0x14138>
   38a38:	ldr	r0, [fp, #8]
   38a3c:	ldr	r4, [sp, #72]	; 0x48
   38a40:	mov	r3, #0
   38a44:	mvn	ip, #15
   38a48:	mov	r7, #0
   38a4c:	str	r1, [sp, #76]	; 0x4c
   38a50:	str	r3, [sp, #84]	; 0x54
   38a54:	mov	r3, r1
   38a58:	mov	r2, r0
   38a5c:	sub	r0, r0, #4
   38a60:	mov	r6, r4
   38a64:	sub	sl, r2, #12
   38a68:	mov	r2, #1
   38a6c:	b	38ac0 <GetDataSlab+0x8b40>
   38a70:	sub	r8, fp, #96	; 0x60
   38a74:	ldr	r3, [fp, #12]
   38a78:	sub	r9, fp, #176	; 0xb0
   38a7c:	str	lr, [r8, r2, lsl #2]
   38a80:	ldr	r6, [sp, #68]	; 0x44
   38a84:	add	sl, sl, #4
   38a88:	str	r4, [r9, r2, lsl #2]
   38a8c:	ldr	r3, [r3, r2, lsl #2]
   38a90:	mla	r7, r3, r6, r7
   38a94:	ldr	r3, [fp, #20]
   38a98:	ldr	r6, [sp, #76]	; 0x4c
   38a9c:	ldr	r3, [r3, r2, lsl #2]
   38aa0:	add	r2, r2, #1
   38aa4:	mul	r6, r3, r6
   38aa8:	ldr	r3, [fp, #24]
   38aac:	str	r6, [sp, #76]	; 0x4c
   38ab0:	mov	r6, r4
   38ab4:	ldr	r4, [sp, #64]	; 0x40
   38ab8:	cmp	r2, r3
   38abc:	beq	440b8 <GetDataSlab+0x14138>
   38ac0:	ldr	r3, [fp, #16]
   38ac4:	str	r6, [sp, #68]	; 0x44
   38ac8:	ldr	r3, [r3, r2, lsl #2]
   38acc:	str	r4, [r9, r2, lsl #2]
   38ad0:	ldr	r9, [sp, #84]	; 0x54
   38ad4:	sub	lr, r3, #1
   38ad8:	ldr	r3, [fp, #8]
   38adc:	add	r9, r9, #1
   38ae0:	str	lr, [r8, r2, lsl #2]
   38ae4:	cmp	r9, #4
   38ae8:	str	r9, [sp, #84]	; 0x54
   38aec:	ldr	r6, [r3, r2, lsl #2]
   38af0:	str	r6, [sp, #64]	; 0x40
   38af4:	bcs	38b00 <GetDataSlab+0x8b80>
   38af8:	mov	r3, r2
   38afc:	b	38b90 <GetDataSlab+0x8c10>
   38b00:	vmov.i32	q9, #1	; 0x00000001
   38b04:	vmov.i32	q10, #1	; 0x00000001
   38b08:	vmov.32	d23[1], r6
   38b0c:	vmov.i32	q8, #1	; 0x00000001
   38b10:	bic	r3, r9, #3
   38b14:	bic	r8, r2, #3
   38b18:	mov	r6, sl
   38b1c:	str	r3, [sp, #60]	; 0x3c
   38b20:	sub	r3, r2, r3
   38b24:	vmov.32	d18[0], r4
   38b28:	vmov.32	d20[0], lr
   38b2c:	vorr	d16, d18, d18
   38b30:	vmov.i32	q9, #1	; 0x00000001
   38b34:	vorr	d18, d20, d20
   38b38:	vld1.32	{d20-d21}, [r6], ip
   38b3c:	subs	r8, r8, #4
   38b40:	vrev64.32	q12, q10
   38b44:	vext.8	q12, q12, q12, #8
   38b48:	vext.8	q11, q11, q12, #12
   38b4c:	vmul.i32	q9, q9, q12
   38b50:	vmul.i32	q8, q11, q8
   38b54:	vorr	q11, q12, q12
   38b58:	bne	38b38 <GetDataSlab+0x8bb8>
   38b5c:	vext.8	q11, q9, q8, #8
   38b60:	vext.8	q12, q8, q8, #8
   38b64:	ldr	r6, [sp, #60]	; 0x3c
   38b68:	vmul.i32	q0, q9, q11
   38b6c:	vmul.i32	q1, q8, q12
   38b70:	cmp	r9, r6
   38b74:	vmul.i32	q8, q0, d0[1]
   38b78:	vmul.i32	q9, q1, d2[1]
   38b7c:	vmov.32	lr, d16[0]
   38b80:	vmov.32	r4, d18[0]
   38b84:	beq	38a70 <GetDataSlab+0x8af0>
   38b88:	vmov.32	r6, d20[0]
   38b8c:	sub	r8, fp, #96	; 0x60
   38b90:	mul	r4, r6, r4
   38b94:	ldr	r6, [r0, r3, lsl #2]
   38b98:	subs	r3, r3, #1
   38b9c:	mul	lr, lr, r6
   38ba0:	bne	38b90 <GetDataSlab+0x8c10>
   38ba4:	b	38a74 <GetDataSlab+0x8af4>
   38ba8:	ldr	r5, [sl]
   38bac:	mov	r7, #0
   38bb0:	sub	r9, fp, #176	; 0xb0
   38bb4:	sub	r8, fp, #96	; 0x60
   38bb8:	sub	r0, r5, #1
   38bbc:	str	r0, [fp, #-96]	; 0xffffffa0
   38bc0:	ldr	r0, [r3]
   38bc4:	str	r0, [sp, #72]	; 0x48
   38bc8:	str	r0, [fp, #-176]	; 0xffffff50
   38bcc:	ldr	r0, [fp, #20]
   38bd0:	ldr	r1, [r0]
   38bd4:	ldr	r0, [fp, #24]
   38bd8:	cmp	r0, #2
   38bdc:	mov	r0, r1
   38be0:	str	r1, [sp, #76]	; 0x4c
   38be4:	blt	4424c <GetDataSlab+0x142cc>
   38be8:	ldr	r0, [fp, #8]
   38bec:	ldr	r4, [sp, #72]	; 0x48
   38bf0:	mov	r3, #0
   38bf4:	mvn	ip, #15
   38bf8:	mov	r7, #0
   38bfc:	str	r1, [sp, #76]	; 0x4c
   38c00:	str	r3, [sp, #84]	; 0x54
   38c04:	mov	r3, r1
   38c08:	mov	r2, r0
   38c0c:	sub	r0, r0, #4
   38c10:	mov	r6, r4
   38c14:	sub	sl, r2, #12
   38c18:	mov	r2, #1
   38c1c:	b	38c70 <GetDataSlab+0x8cf0>
   38c20:	sub	r8, fp, #96	; 0x60
   38c24:	ldr	r3, [fp, #12]
   38c28:	sub	r9, fp, #176	; 0xb0
   38c2c:	str	lr, [r8, r2, lsl #2]
   38c30:	ldr	r6, [sp, #68]	; 0x44
   38c34:	add	sl, sl, #4
   38c38:	str	r4, [r9, r2, lsl #2]
   38c3c:	ldr	r3, [r3, r2, lsl #2]
   38c40:	mla	r7, r3, r6, r7
   38c44:	ldr	r3, [fp, #20]
   38c48:	ldr	r6, [sp, #76]	; 0x4c
   38c4c:	ldr	r3, [r3, r2, lsl #2]
   38c50:	add	r2, r2, #1
   38c54:	mul	r6, r3, r6
   38c58:	ldr	r3, [fp, #24]
   38c5c:	str	r6, [sp, #76]	; 0x4c
   38c60:	mov	r6, r4
   38c64:	ldr	r4, [sp, #64]	; 0x40
   38c68:	cmp	r2, r3
   38c6c:	beq	4424c <GetDataSlab+0x142cc>
   38c70:	ldr	r3, [fp, #16]
   38c74:	str	r6, [sp, #68]	; 0x44
   38c78:	ldr	r3, [r3, r2, lsl #2]
   38c7c:	str	r4, [r9, r2, lsl #2]
   38c80:	ldr	r9, [sp, #84]	; 0x54
   38c84:	sub	lr, r3, #1
   38c88:	ldr	r3, [fp, #8]
   38c8c:	add	r9, r9, #1
   38c90:	str	lr, [r8, r2, lsl #2]
   38c94:	cmp	r9, #4
   38c98:	str	r9, [sp, #84]	; 0x54
   38c9c:	ldr	r6, [r3, r2, lsl #2]
   38ca0:	str	r6, [sp, #64]	; 0x40
   38ca4:	bcs	38cb0 <GetDataSlab+0x8d30>
   38ca8:	mov	r3, r2
   38cac:	b	38d40 <GetDataSlab+0x8dc0>
   38cb0:	vmov.i32	q9, #1	; 0x00000001
   38cb4:	vmov.i32	q10, #1	; 0x00000001
   38cb8:	vmov.32	d23[1], r6
   38cbc:	vmov.i32	q8, #1	; 0x00000001
   38cc0:	bic	r3, r9, #3
   38cc4:	bic	r8, r2, #3
   38cc8:	mov	r6, sl
   38ccc:	str	r3, [sp, #60]	; 0x3c
   38cd0:	sub	r3, r2, r3
   38cd4:	vmov.32	d18[0], r4
   38cd8:	vmov.32	d20[0], lr
   38cdc:	vorr	d16, d18, d18
   38ce0:	vmov.i32	q9, #1	; 0x00000001
   38ce4:	vorr	d18, d20, d20
   38ce8:	vld1.32	{d20-d21}, [r6], ip
   38cec:	subs	r8, r8, #4
   38cf0:	vrev64.32	q12, q10
   38cf4:	vext.8	q12, q12, q12, #8
   38cf8:	vext.8	q11, q11, q12, #12
   38cfc:	vmul.i32	q9, q9, q12
   38d00:	vmul.i32	q8, q11, q8
   38d04:	vorr	q11, q12, q12
   38d08:	bne	38ce8 <GetDataSlab+0x8d68>
   38d0c:	vext.8	q11, q9, q8, #8
   38d10:	vext.8	q12, q8, q8, #8
   38d14:	ldr	r6, [sp, #60]	; 0x3c
   38d18:	vmul.i32	q0, q9, q11
   38d1c:	vmul.i32	q1, q8, q12
   38d20:	cmp	r9, r6
   38d24:	vmul.i32	q8, q0, d0[1]
   38d28:	vmul.i32	q9, q1, d2[1]
   38d2c:	vmov.32	lr, d16[0]
   38d30:	vmov.32	r4, d18[0]
   38d34:	beq	38c20 <GetDataSlab+0x8ca0>
   38d38:	vmov.32	r6, d20[0]
   38d3c:	sub	r8, fp, #96	; 0x60
   38d40:	mul	r4, r6, r4
   38d44:	ldr	r6, [r0, r3, lsl #2]
   38d48:	subs	r3, r3, #1
   38d4c:	mul	lr, lr, r6
   38d50:	bne	38d40 <GetDataSlab+0x8dc0>
   38d54:	b	38c24 <GetDataSlab+0x8ca4>
   38d58:	ldr	r5, [sl]
   38d5c:	mov	r7, #0
   38d60:	sub	r9, fp, #176	; 0xb0
   38d64:	sub	r8, fp, #96	; 0x60
   38d68:	sub	r0, r5, #1
   38d6c:	str	r0, [fp, #-96]	; 0xffffffa0
   38d70:	ldr	r0, [r3]
   38d74:	str	r0, [sp, #72]	; 0x48
   38d78:	str	r0, [fp, #-176]	; 0xffffff50
   38d7c:	ldr	r0, [fp, #20]
   38d80:	ldr	r1, [r0]
   38d84:	ldr	r0, [fp, #24]
   38d88:	cmp	r0, #2
   38d8c:	mov	r0, r1
   38d90:	str	r1, [sp, #76]	; 0x4c
   38d94:	blt	443e0 <GetDataSlab+0x14460>
   38d98:	ldr	r0, [fp, #8]
   38d9c:	ldr	r4, [sp, #72]	; 0x48
   38da0:	mov	r3, #0
   38da4:	mvn	ip, #15
   38da8:	mov	r7, #0
   38dac:	str	r1, [sp, #76]	; 0x4c
   38db0:	str	r3, [sp, #84]	; 0x54
   38db4:	mov	r3, r1
   38db8:	mov	r2, r0
   38dbc:	sub	r0, r0, #4
   38dc0:	mov	r6, r4
   38dc4:	sub	sl, r2, #12
   38dc8:	mov	r2, #1
   38dcc:	b	38e20 <GetDataSlab+0x8ea0>
   38dd0:	sub	r8, fp, #96	; 0x60
   38dd4:	ldr	r3, [fp, #12]
   38dd8:	sub	r9, fp, #176	; 0xb0
   38ddc:	str	lr, [r8, r2, lsl #2]
   38de0:	ldr	r6, [sp, #68]	; 0x44
   38de4:	add	sl, sl, #4
   38de8:	str	r4, [r9, r2, lsl #2]
   38dec:	ldr	r3, [r3, r2, lsl #2]
   38df0:	mla	r7, r3, r6, r7
   38df4:	ldr	r3, [fp, #20]
   38df8:	ldr	r6, [sp, #76]	; 0x4c
   38dfc:	ldr	r3, [r3, r2, lsl #2]
   38e00:	add	r2, r2, #1
   38e04:	mul	r6, r3, r6
   38e08:	ldr	r3, [fp, #24]
   38e0c:	str	r6, [sp, #76]	; 0x4c
   38e10:	mov	r6, r4
   38e14:	ldr	r4, [sp, #64]	; 0x40
   38e18:	cmp	r2, r3
   38e1c:	beq	443e0 <GetDataSlab+0x14460>
   38e20:	ldr	r3, [fp, #16]
   38e24:	str	r6, [sp, #68]	; 0x44
   38e28:	ldr	r3, [r3, r2, lsl #2]
   38e2c:	str	r4, [r9, r2, lsl #2]
   38e30:	ldr	r9, [sp, #84]	; 0x54
   38e34:	sub	lr, r3, #1
   38e38:	ldr	r3, [fp, #8]
   38e3c:	add	r9, r9, #1
   38e40:	str	lr, [r8, r2, lsl #2]
   38e44:	cmp	r9, #4
   38e48:	str	r9, [sp, #84]	; 0x54
   38e4c:	ldr	r6, [r3, r2, lsl #2]
   38e50:	str	r6, [sp, #64]	; 0x40
   38e54:	bcs	38e60 <GetDataSlab+0x8ee0>
   38e58:	mov	r3, r2
   38e5c:	b	38ef0 <GetDataSlab+0x8f70>
   38e60:	vmov.i32	q9, #1	; 0x00000001
   38e64:	vmov.i32	q10, #1	; 0x00000001
   38e68:	vmov.32	d23[1], r6
   38e6c:	vmov.i32	q8, #1	; 0x00000001
   38e70:	bic	r3, r9, #3
   38e74:	bic	r8, r2, #3
   38e78:	mov	r6, sl
   38e7c:	str	r3, [sp, #60]	; 0x3c
   38e80:	sub	r3, r2, r3
   38e84:	vmov.32	d18[0], r4
   38e88:	vmov.32	d20[0], lr
   38e8c:	vorr	d16, d18, d18
   38e90:	vmov.i32	q9, #1	; 0x00000001
   38e94:	vorr	d18, d20, d20
   38e98:	vld1.32	{d20-d21}, [r6], ip
   38e9c:	subs	r8, r8, #4
   38ea0:	vrev64.32	q12, q10
   38ea4:	vext.8	q12, q12, q12, #8
   38ea8:	vext.8	q11, q11, q12, #12
   38eac:	vmul.i32	q9, q9, q12
   38eb0:	vmul.i32	q8, q11, q8
   38eb4:	vorr	q11, q12, q12
   38eb8:	bne	38e98 <GetDataSlab+0x8f18>
   38ebc:	vext.8	q11, q9, q8, #8
   38ec0:	vext.8	q12, q8, q8, #8
   38ec4:	ldr	r6, [sp, #60]	; 0x3c
   38ec8:	vmul.i32	q0, q9, q11
   38ecc:	vmul.i32	q1, q8, q12
   38ed0:	cmp	r9, r6
   38ed4:	vmul.i32	q8, q0, d0[1]
   38ed8:	vmul.i32	q9, q1, d2[1]
   38edc:	vmov.32	lr, d16[0]
   38ee0:	vmov.32	r4, d18[0]
   38ee4:	beq	38dd0 <GetDataSlab+0x8e50>
   38ee8:	vmov.32	r6, d20[0]
   38eec:	sub	r8, fp, #96	; 0x60
   38ef0:	mul	r4, r6, r4
   38ef4:	ldr	r6, [r0, r3, lsl #2]
   38ef8:	subs	r3, r3, #1
   38efc:	mul	lr, lr, r6
   38f00:	bne	38ef0 <GetDataSlab+0x8f70>
   38f04:	b	38dd4 <GetDataSlab+0x8e54>
   38f08:	ldr	r5, [sl]
   38f0c:	mov	r7, #0
   38f10:	sub	r9, fp, #176	; 0xb0
   38f14:	sub	r8, fp, #96	; 0x60
   38f18:	sub	r0, r5, #1
   38f1c:	str	r0, [fp, #-96]	; 0xffffffa0
   38f20:	ldr	r0, [r3]
   38f24:	str	r0, [sp, #72]	; 0x48
   38f28:	str	r0, [fp, #-176]	; 0xffffff50
   38f2c:	ldr	r0, [fp, #20]
   38f30:	ldr	r1, [r0]
   38f34:	ldr	r0, [fp, #24]
   38f38:	cmp	r0, #2
   38f3c:	mov	r0, r1
   38f40:	str	r1, [sp, #76]	; 0x4c
   38f44:	blt	44580 <GetDataSlab+0x14600>
   38f48:	ldr	r0, [fp, #8]
   38f4c:	ldr	r4, [sp, #72]	; 0x48
   38f50:	mov	r3, #0
   38f54:	mvn	ip, #15
   38f58:	mov	r7, #0
   38f5c:	str	r1, [sp, #76]	; 0x4c
   38f60:	str	r3, [sp, #84]	; 0x54
   38f64:	mov	r3, r1
   38f68:	mov	r2, r0
   38f6c:	sub	r0, r0, #4
   38f70:	mov	r6, r4
   38f74:	sub	sl, r2, #12
   38f78:	mov	r2, #1
   38f7c:	b	38fd0 <GetDataSlab+0x9050>
   38f80:	sub	r8, fp, #96	; 0x60
   38f84:	ldr	r3, [fp, #12]
   38f88:	sub	r9, fp, #176	; 0xb0
   38f8c:	str	lr, [r8, r2, lsl #2]
   38f90:	ldr	r6, [sp, #68]	; 0x44
   38f94:	add	sl, sl, #4
   38f98:	str	r4, [r9, r2, lsl #2]
   38f9c:	ldr	r3, [r3, r2, lsl #2]
   38fa0:	mla	r7, r3, r6, r7
   38fa4:	ldr	r3, [fp, #20]
   38fa8:	ldr	r6, [sp, #76]	; 0x4c
   38fac:	ldr	r3, [r3, r2, lsl #2]
   38fb0:	add	r2, r2, #1
   38fb4:	mul	r6, r3, r6
   38fb8:	ldr	r3, [fp, #24]
   38fbc:	str	r6, [sp, #76]	; 0x4c
   38fc0:	mov	r6, r4
   38fc4:	ldr	r4, [sp, #64]	; 0x40
   38fc8:	cmp	r2, r3
   38fcc:	beq	44580 <GetDataSlab+0x14600>
   38fd0:	ldr	r3, [fp, #16]
   38fd4:	str	r6, [sp, #68]	; 0x44
   38fd8:	ldr	r3, [r3, r2, lsl #2]
   38fdc:	str	r4, [r9, r2, lsl #2]
   38fe0:	ldr	r9, [sp, #84]	; 0x54
   38fe4:	sub	lr, r3, #1
   38fe8:	ldr	r3, [fp, #8]
   38fec:	add	r9, r9, #1
   38ff0:	str	lr, [r8, r2, lsl #2]
   38ff4:	cmp	r9, #4
   38ff8:	str	r9, [sp, #84]	; 0x54
   38ffc:	ldr	r6, [r3, r2, lsl #2]
   39000:	str	r6, [sp, #64]	; 0x40
   39004:	bcs	39010 <GetDataSlab+0x9090>
   39008:	mov	r3, r2
   3900c:	b	390a0 <GetDataSlab+0x9120>
   39010:	vmov.i32	q9, #1	; 0x00000001
   39014:	vmov.i32	q10, #1	; 0x00000001
   39018:	vmov.32	d23[1], r6
   3901c:	vmov.i32	q8, #1	; 0x00000001
   39020:	bic	r3, r9, #3
   39024:	bic	r8, r2, #3
   39028:	mov	r6, sl
   3902c:	str	r3, [sp, #60]	; 0x3c
   39030:	sub	r3, r2, r3
   39034:	vmov.32	d18[0], r4
   39038:	vmov.32	d20[0], lr
   3903c:	vorr	d16, d18, d18
   39040:	vmov.i32	q9, #1	; 0x00000001
   39044:	vorr	d18, d20, d20
   39048:	vld1.32	{d20-d21}, [r6], ip
   3904c:	subs	r8, r8, #4
   39050:	vrev64.32	q12, q10
   39054:	vext.8	q12, q12, q12, #8
   39058:	vext.8	q11, q11, q12, #12
   3905c:	vmul.i32	q9, q9, q12
   39060:	vmul.i32	q8, q11, q8
   39064:	vorr	q11, q12, q12
   39068:	bne	39048 <GetDataSlab+0x90c8>
   3906c:	vext.8	q11, q9, q8, #8
   39070:	vext.8	q12, q8, q8, #8
   39074:	ldr	r6, [sp, #60]	; 0x3c
   39078:	vmul.i32	q0, q9, q11
   3907c:	vmul.i32	q1, q8, q12
   39080:	cmp	r9, r6
   39084:	vmul.i32	q8, q0, d0[1]
   39088:	vmul.i32	q9, q1, d2[1]
   3908c:	vmov.32	lr, d16[0]
   39090:	vmov.32	r4, d18[0]
   39094:	beq	38f80 <GetDataSlab+0x9000>
   39098:	vmov.32	r6, d20[0]
   3909c:	sub	r8, fp, #96	; 0x60
   390a0:	mul	r4, r6, r4
   390a4:	ldr	r6, [r0, r3, lsl #2]
   390a8:	subs	r3, r3, #1
   390ac:	mul	lr, lr, r6
   390b0:	bne	390a0 <GetDataSlab+0x9120>
   390b4:	b	38f84 <GetDataSlab+0x9004>
   390b8:	ldr	r7, [sl]
   390bc:	sub	r6, fp, #176	; 0xb0
   390c0:	sub	r8, fp, #96	; 0x60
   390c4:	sub	r0, r7, #1
   390c8:	str	r0, [fp, #-96]	; 0xffffffa0
   390cc:	ldr	r0, [r3]
   390d0:	mov	r3, #0
   390d4:	str	r0, [sp, #64]	; 0x40
   390d8:	str	r0, [fp, #-176]	; 0xffffff50
   390dc:	ldr	r0, [fp, #20]
   390e0:	ldr	r1, [r0]
   390e4:	ldr	r0, [fp, #24]
   390e8:	cmp	r0, #2
   390ec:	mov	r0, r1
   390f0:	str	r1, [sp, #68]	; 0x44
   390f4:	blt	44720 <GetDataSlab+0x147a0>
   390f8:	ldr	r0, [fp, #8]
   390fc:	ldr	r5, [sp, #64]	; 0x40
   39100:	mov	ip, #1
   39104:	mvn	sl, #15
   39108:	mov	r3, #0
   3910c:	str	r1, [sp, #68]	; 0x44
   39110:	mov	r2, r0
   39114:	sub	r0, r0, #4
   39118:	mov	r4, r5
   3911c:	sub	lr, r2, #12
   39120:	mov	r2, #0
   39124:	str	r2, [sp, #84]	; 0x54
   39128:	mov	r2, r1
   3912c:	b	39180 <GetDataSlab+0x9200>
   39130:	ldr	r4, [sp, #56]	; 0x38
   39134:	sub	r8, fp, #96	; 0x60
   39138:	ldr	r2, [fp, #12]
   3913c:	sub	r6, fp, #176	; 0xb0
   39140:	str	r9, [r8, ip, lsl #2]
   39144:	add	lr, lr, #4
   39148:	str	r5, [r6, ip, lsl #2]
   3914c:	ldr	r2, [r2, ip, lsl #2]
   39150:	mla	r3, r2, r4, r3
   39154:	ldr	r2, [fp, #20]
   39158:	ldr	r4, [sp, #68]	; 0x44
   3915c:	ldr	r2, [r2, ip, lsl #2]
   39160:	add	ip, ip, #1
   39164:	mul	r4, r2, r4
   39168:	ldr	r2, [fp, #24]
   3916c:	str	r4, [sp, #68]	; 0x44
   39170:	mov	r4, r5
   39174:	ldr	r5, [sp, #72]	; 0x48
   39178:	cmp	ip, r2
   3917c:	beq	44720 <GetDataSlab+0x147a0>
   39180:	ldr	r2, [fp, #16]
   39184:	ldr	r2, [r2, ip, lsl #2]
   39188:	str	r5, [r6, ip, lsl #2]
   3918c:	sub	r9, r2, #1
   39190:	ldr	r2, [fp, #8]
   39194:	str	r9, [r8, ip, lsl #2]
   39198:	ldr	r6, [r2, ip, lsl #2]
   3919c:	ldr	r2, [sp, #84]	; 0x54
   391a0:	add	r2, r2, #1
   391a4:	str	r6, [sp, #72]	; 0x48
   391a8:	cmp	r2, #4
   391ac:	str	r2, [sp, #84]	; 0x54
   391b0:	bcs	391c0 <GetDataSlab+0x9240>
   391b4:	mov	r2, r6
   391b8:	mov	r6, ip
   391bc:	b	3925c <GetDataSlab+0x92dc>
   391c0:	vmov.i32	q9, #1	; 0x00000001
   391c4:	vmov.i32	q10, #1	; 0x00000001
   391c8:	vmov.32	d23[1], r6
   391cc:	vmov.i32	q8, #1	; 0x00000001
   391d0:	bic	r2, r2, #3
   391d4:	bic	r8, ip, #3
   391d8:	str	r4, [sp, #56]	; 0x38
   391dc:	str	r2, [sp, #60]	; 0x3c
   391e0:	sub	r6, ip, r2
   391e4:	mov	r2, lr
   391e8:	vmov.32	d18[0], r5
   391ec:	vmov.32	d20[0], r9
   391f0:	vorr	d16, d18, d18
   391f4:	vmov.i32	q9, #1	; 0x00000001
   391f8:	vorr	d18, d20, d20
   391fc:	vld1.32	{d20-d21}, [r2], sl
   39200:	subs	r8, r8, #4
   39204:	vrev64.32	q12, q10
   39208:	vext.8	q12, q12, q12, #8
   3920c:	vext.8	q11, q11, q12, #12
   39210:	vmul.i32	q9, q9, q12
   39214:	vmul.i32	q8, q11, q8
   39218:	vorr	q11, q12, q12
   3921c:	bne	391fc <GetDataSlab+0x927c>
   39220:	vext.8	q11, q9, q8, #8
   39224:	vext.8	q12, q8, q8, #8
   39228:	ldr	r2, [sp, #84]	; 0x54
   3922c:	ldr	r4, [sp, #60]	; 0x3c
   39230:	vmul.i32	q0, q9, q11
   39234:	vmul.i32	q1, q8, q12
   39238:	cmp	r2, r4
   3923c:	vmul.i32	q8, q0, d0[1]
   39240:	vmul.i32	q9, q1, d2[1]
   39244:	vmov.32	r9, d16[0]
   39248:	vmov.32	r5, d18[0]
   3924c:	beq	39130 <GetDataSlab+0x91b0>
   39250:	vmov.32	r2, d20[0]
   39254:	ldr	r4, [sp, #56]	; 0x38
   39258:	sub	r8, fp, #96	; 0x60
   3925c:	mul	r5, r2, r5
   39260:	ldr	r2, [r0, r6, lsl #2]
   39264:	subs	r6, r6, #1
   39268:	mul	r9, r9, r2
   3926c:	bne	3925c <GetDataSlab+0x92dc>
   39270:	b	39138 <GetDataSlab+0x91b8>
   39274:	ldr	r5, [sl]
   39278:	mov	r7, #0
   3927c:	sub	r9, fp, #176	; 0xb0
   39280:	sub	r8, fp, #96	; 0x60
   39284:	sub	r0, r5, #1
   39288:	str	r0, [fp, #-96]	; 0xffffffa0
   3928c:	ldr	r0, [r3]
   39290:	str	r0, [sp, #72]	; 0x48
   39294:	str	r0, [fp, #-176]	; 0xffffff50
   39298:	ldr	r0, [fp, #20]
   3929c:	ldr	r1, [r0]
   392a0:	ldr	r0, [fp, #24]
   392a4:	cmp	r0, #2
   392a8:	mov	r0, r1
   392ac:	str	r1, [sp, #76]	; 0x4c
   392b0:	blt	448a8 <GetDataSlab+0x14928>
   392b4:	ldr	r0, [fp, #8]
   392b8:	ldr	r4, [sp, #72]	; 0x48
   392bc:	mov	r3, #0
   392c0:	mvn	ip, #15
   392c4:	mov	r7, #0
   392c8:	str	r1, [sp, #76]	; 0x4c
   392cc:	str	r3, [sp, #84]	; 0x54
   392d0:	mov	r3, r1
   392d4:	mov	r2, r0
   392d8:	sub	r0, r0, #4
   392dc:	mov	r6, r4
   392e0:	sub	sl, r2, #12
   392e4:	mov	r2, #1
   392e8:	b	3933c <GetDataSlab+0x93bc>
   392ec:	sub	r8, fp, #96	; 0x60
   392f0:	ldr	r3, [fp, #12]
   392f4:	sub	r9, fp, #176	; 0xb0
   392f8:	str	lr, [r8, r2, lsl #2]
   392fc:	ldr	r6, [sp, #68]	; 0x44
   39300:	add	sl, sl, #4
   39304:	str	r4, [r9, r2, lsl #2]
   39308:	ldr	r3, [r3, r2, lsl #2]
   3930c:	mla	r7, r3, r6, r7
   39310:	ldr	r3, [fp, #20]
   39314:	ldr	r6, [sp, #76]	; 0x4c
   39318:	ldr	r3, [r3, r2, lsl #2]
   3931c:	add	r2, r2, #1
   39320:	mul	r6, r3, r6
   39324:	ldr	r3, [fp, #24]
   39328:	str	r6, [sp, #76]	; 0x4c
   3932c:	mov	r6, r4
   39330:	ldr	r4, [sp, #64]	; 0x40
   39334:	cmp	r2, r3
   39338:	beq	448a8 <GetDataSlab+0x14928>
   3933c:	ldr	r3, [fp, #16]
   39340:	str	r6, [sp, #68]	; 0x44
   39344:	ldr	r3, [r3, r2, lsl #2]
   39348:	str	r4, [r9, r2, lsl #2]
   3934c:	ldr	r9, [sp, #84]	; 0x54
   39350:	sub	lr, r3, #1
   39354:	ldr	r3, [fp, #8]
   39358:	add	r9, r9, #1
   3935c:	str	lr, [r8, r2, lsl #2]
   39360:	cmp	r9, #4
   39364:	str	r9, [sp, #84]	; 0x54
   39368:	ldr	r6, [r3, r2, lsl #2]
   3936c:	str	r6, [sp, #64]	; 0x40
   39370:	bcs	3937c <GetDataSlab+0x93fc>
   39374:	mov	r3, r2
   39378:	b	3940c <GetDataSlab+0x948c>
   3937c:	vmov.i32	q9, #1	; 0x00000001
   39380:	vmov.i32	q10, #1	; 0x00000001
   39384:	vmov.32	d23[1], r6
   39388:	vmov.i32	q8, #1	; 0x00000001
   3938c:	bic	r3, r9, #3
   39390:	bic	r8, r2, #3
   39394:	mov	r6, sl
   39398:	str	r3, [sp, #60]	; 0x3c
   3939c:	sub	r3, r2, r3
   393a0:	vmov.32	d18[0], r4
   393a4:	vmov.32	d20[0], lr
   393a8:	vorr	d16, d18, d18
   393ac:	vmov.i32	q9, #1	; 0x00000001
   393b0:	vorr	d18, d20, d20
   393b4:	vld1.32	{d20-d21}, [r6], ip
   393b8:	subs	r8, r8, #4
   393bc:	vrev64.32	q12, q10
   393c0:	vext.8	q12, q12, q12, #8
   393c4:	vext.8	q11, q11, q12, #12
   393c8:	vmul.i32	q9, q9, q12
   393cc:	vmul.i32	q8, q11, q8
   393d0:	vorr	q11, q12, q12
   393d4:	bne	393b4 <GetDataSlab+0x9434>
   393d8:	vext.8	q11, q9, q8, #8
   393dc:	vext.8	q12, q8, q8, #8
   393e0:	ldr	r6, [sp, #60]	; 0x3c
   393e4:	vmul.i32	q0, q9, q11
   393e8:	vmul.i32	q1, q8, q12
   393ec:	cmp	r9, r6
   393f0:	vmul.i32	q8, q0, d0[1]
   393f4:	vmul.i32	q9, q1, d2[1]
   393f8:	vmov.32	lr, d16[0]
   393fc:	vmov.32	r4, d18[0]
   39400:	beq	392ec <GetDataSlab+0x936c>
   39404:	vmov.32	r6, d20[0]
   39408:	sub	r8, fp, #96	; 0x60
   3940c:	mul	r4, r6, r4
   39410:	ldr	r6, [r0, r3, lsl #2]
   39414:	subs	r3, r3, #1
   39418:	mul	lr, lr, r6
   3941c:	bne	3940c <GetDataSlab+0x948c>
   39420:	b	392f0 <GetDataSlab+0x9370>
   39424:	ldr	r5, [sl]
   39428:	mov	r7, #0
   3942c:	sub	r9, fp, #176	; 0xb0
   39430:	sub	r8, fp, #96	; 0x60
   39434:	sub	r0, r5, #1
   39438:	str	r0, [fp, #-96]	; 0xffffffa0
   3943c:	ldr	r0, [r3]
   39440:	str	r0, [sp, #72]	; 0x48
   39444:	str	r0, [fp, #-176]	; 0xffffff50
   39448:	ldr	r0, [fp, #20]
   3944c:	ldr	r1, [r0]
   39450:	ldr	r0, [fp, #24]
   39454:	cmp	r0, #2
   39458:	mov	r0, r1
   3945c:	str	r1, [sp, #76]	; 0x4c
   39460:	blt	44a3c <GetDataSlab+0x14abc>
   39464:	ldr	r0, [fp, #8]
   39468:	ldr	r4, [sp, #72]	; 0x48
   3946c:	mov	r3, #0
   39470:	mvn	ip, #15
   39474:	mov	r7, #0
   39478:	str	r1, [sp, #76]	; 0x4c
   3947c:	str	r3, [sp, #84]	; 0x54
   39480:	mov	r3, r1
   39484:	mov	r2, r0
   39488:	sub	r0, r0, #4
   3948c:	mov	r6, r4
   39490:	sub	sl, r2, #12
   39494:	mov	r2, #1
   39498:	b	394ec <GetDataSlab+0x956c>
   3949c:	sub	r8, fp, #96	; 0x60
   394a0:	ldr	r3, [fp, #12]
   394a4:	sub	r9, fp, #176	; 0xb0
   394a8:	str	lr, [r8, r2, lsl #2]
   394ac:	ldr	r6, [sp, #68]	; 0x44
   394b0:	add	sl, sl, #4
   394b4:	str	r4, [r9, r2, lsl #2]
   394b8:	ldr	r3, [r3, r2, lsl #2]
   394bc:	mla	r7, r3, r6, r7
   394c0:	ldr	r3, [fp, #20]
   394c4:	ldr	r6, [sp, #76]	; 0x4c
   394c8:	ldr	r3, [r3, r2, lsl #2]
   394cc:	add	r2, r2, #1
   394d0:	mul	r6, r3, r6
   394d4:	ldr	r3, [fp, #24]
   394d8:	str	r6, [sp, #76]	; 0x4c
   394dc:	mov	r6, r4
   394e0:	ldr	r4, [sp, #64]	; 0x40
   394e4:	cmp	r2, r3
   394e8:	beq	44a3c <GetDataSlab+0x14abc>
   394ec:	ldr	r3, [fp, #16]
   394f0:	str	r6, [sp, #68]	; 0x44
   394f4:	ldr	r3, [r3, r2, lsl #2]
   394f8:	str	r4, [r9, r2, lsl #2]
   394fc:	ldr	r9, [sp, #84]	; 0x54
   39500:	sub	lr, r3, #1
   39504:	ldr	r3, [fp, #8]
   39508:	add	r9, r9, #1
   3950c:	str	lr, [r8, r2, lsl #2]
   39510:	cmp	r9, #4
   39514:	str	r9, [sp, #84]	; 0x54
   39518:	ldr	r6, [r3, r2, lsl #2]
   3951c:	str	r6, [sp, #64]	; 0x40
   39520:	bcs	3952c <GetDataSlab+0x95ac>
   39524:	mov	r3, r2
   39528:	b	395bc <GetDataSlab+0x963c>
   3952c:	vmov.i32	q9, #1	; 0x00000001
   39530:	vmov.i32	q10, #1	; 0x00000001
   39534:	vmov.32	d23[1], r6
   39538:	vmov.i32	q8, #1	; 0x00000001
   3953c:	bic	r3, r9, #3
   39540:	bic	r8, r2, #3
   39544:	mov	r6, sl
   39548:	str	r3, [sp, #60]	; 0x3c
   3954c:	sub	r3, r2, r3
   39550:	vmov.32	d18[0], r4
   39554:	vmov.32	d20[0], lr
   39558:	vorr	d16, d18, d18
   3955c:	vmov.i32	q9, #1	; 0x00000001
   39560:	vorr	d18, d20, d20
   39564:	vld1.32	{d20-d21}, [r6], ip
   39568:	subs	r8, r8, #4
   3956c:	vrev64.32	q12, q10
   39570:	vext.8	q12, q12, q12, #8
   39574:	vext.8	q11, q11, q12, #12
   39578:	vmul.i32	q9, q9, q12
   3957c:	vmul.i32	q8, q11, q8
   39580:	vorr	q11, q12, q12
   39584:	bne	39564 <GetDataSlab+0x95e4>
   39588:	vext.8	q11, q9, q8, #8
   3958c:	vext.8	q12, q8, q8, #8
   39590:	ldr	r6, [sp, #60]	; 0x3c
   39594:	vmul.i32	q0, q9, q11
   39598:	vmul.i32	q1, q8, q12
   3959c:	cmp	r9, r6
   395a0:	vmul.i32	q8, q0, d0[1]
   395a4:	vmul.i32	q9, q1, d2[1]
   395a8:	vmov.32	lr, d16[0]
   395ac:	vmov.32	r4, d18[0]
   395b0:	beq	3949c <GetDataSlab+0x951c>
   395b4:	vmov.32	r6, d20[0]
   395b8:	sub	r8, fp, #96	; 0x60
   395bc:	mul	r4, r6, r4
   395c0:	ldr	r6, [r0, r3, lsl #2]
   395c4:	subs	r3, r3, #1
   395c8:	mul	lr, lr, r6
   395cc:	bne	395bc <GetDataSlab+0x963c>
   395d0:	b	394a0 <GetDataSlab+0x9520>
   395d4:	ldr	r5, [sl]
   395d8:	mov	r7, #0
   395dc:	sub	r9, fp, #176	; 0xb0
   395e0:	sub	r8, fp, #96	; 0x60
   395e4:	sub	r0, r5, #1
   395e8:	str	r0, [fp, #-96]	; 0xffffffa0
   395ec:	ldr	r0, [r3]
   395f0:	str	r0, [sp, #72]	; 0x48
   395f4:	str	r0, [fp, #-176]	; 0xffffff50
   395f8:	ldr	r0, [fp, #20]
   395fc:	ldr	r1, [r0]
   39600:	ldr	r0, [fp, #24]
   39604:	cmp	r0, #2
   39608:	mov	r0, r1
   3960c:	str	r1, [sp, #76]	; 0x4c
   39610:	blt	44bd0 <GetDataSlab+0x14c50>
   39614:	ldr	r0, [fp, #8]
   39618:	ldr	r4, [sp, #72]	; 0x48
   3961c:	mov	r3, #0
   39620:	mvn	ip, #15
   39624:	mov	r7, #0
   39628:	str	r1, [sp, #76]	; 0x4c
   3962c:	str	r3, [sp, #84]	; 0x54
   39630:	mov	r3, r1
   39634:	mov	r2, r0
   39638:	sub	r0, r0, #4
   3963c:	mov	r6, r4
   39640:	sub	sl, r2, #12
   39644:	mov	r2, #1
   39648:	b	3969c <GetDataSlab+0x971c>
   3964c:	sub	r8, fp, #96	; 0x60
   39650:	ldr	r3, [fp, #12]
   39654:	sub	r9, fp, #176	; 0xb0
   39658:	str	lr, [r8, r2, lsl #2]
   3965c:	ldr	r6, [sp, #68]	; 0x44
   39660:	add	sl, sl, #4
   39664:	str	r4, [r9, r2, lsl #2]
   39668:	ldr	r3, [r3, r2, lsl #2]
   3966c:	mla	r7, r3, r6, r7
   39670:	ldr	r3, [fp, #20]
   39674:	ldr	r6, [sp, #76]	; 0x4c
   39678:	ldr	r3, [r3, r2, lsl #2]
   3967c:	add	r2, r2, #1
   39680:	mul	r6, r3, r6
   39684:	ldr	r3, [fp, #24]
   39688:	str	r6, [sp, #76]	; 0x4c
   3968c:	mov	r6, r4
   39690:	ldr	r4, [sp, #64]	; 0x40
   39694:	cmp	r2, r3
   39698:	beq	44bd0 <GetDataSlab+0x14c50>
   3969c:	ldr	r3, [fp, #16]
   396a0:	str	r6, [sp, #68]	; 0x44
   396a4:	ldr	r3, [r3, r2, lsl #2]
   396a8:	str	r4, [r9, r2, lsl #2]
   396ac:	ldr	r9, [sp, #84]	; 0x54
   396b0:	sub	lr, r3, #1
   396b4:	ldr	r3, [fp, #8]
   396b8:	add	r9, r9, #1
   396bc:	str	lr, [r8, r2, lsl #2]
   396c0:	cmp	r9, #4
   396c4:	str	r9, [sp, #84]	; 0x54
   396c8:	ldr	r6, [r3, r2, lsl #2]
   396cc:	str	r6, [sp, #64]	; 0x40
   396d0:	bcs	396dc <GetDataSlab+0x975c>
   396d4:	mov	r3, r2
   396d8:	b	3976c <GetDataSlab+0x97ec>
   396dc:	vmov.i32	q9, #1	; 0x00000001
   396e0:	vmov.i32	q10, #1	; 0x00000001
   396e4:	vmov.32	d23[1], r6
   396e8:	vmov.i32	q8, #1	; 0x00000001
   396ec:	bic	r3, r9, #3
   396f0:	bic	r8, r2, #3
   396f4:	mov	r6, sl
   396f8:	str	r3, [sp, #60]	; 0x3c
   396fc:	sub	r3, r2, r3
   39700:	vmov.32	d18[0], r4
   39704:	vmov.32	d20[0], lr
   39708:	vorr	d16, d18, d18
   3970c:	vmov.i32	q9, #1	; 0x00000001
   39710:	vorr	d18, d20, d20
   39714:	vld1.32	{d20-d21}, [r6], ip
   39718:	subs	r8, r8, #4
   3971c:	vrev64.32	q12, q10
   39720:	vext.8	q12, q12, q12, #8
   39724:	vext.8	q11, q11, q12, #12
   39728:	vmul.i32	q9, q9, q12
   3972c:	vmul.i32	q8, q11, q8
   39730:	vorr	q11, q12, q12
   39734:	bne	39714 <GetDataSlab+0x9794>
   39738:	vext.8	q11, q9, q8, #8
   3973c:	vext.8	q12, q8, q8, #8
   39740:	ldr	r6, [sp, #60]	; 0x3c
   39744:	vmul.i32	q0, q9, q11
   39748:	vmul.i32	q1, q8, q12
   3974c:	cmp	r9, r6
   39750:	vmul.i32	q8, q0, d0[1]
   39754:	vmul.i32	q9, q1, d2[1]
   39758:	vmov.32	lr, d16[0]
   3975c:	vmov.32	r4, d18[0]
   39760:	beq	3964c <GetDataSlab+0x96cc>
   39764:	vmov.32	r6, d20[0]
   39768:	sub	r8, fp, #96	; 0x60
   3976c:	mul	r4, r6, r4
   39770:	ldr	r6, [r0, r3, lsl #2]
   39774:	subs	r3, r3, #1
   39778:	mul	lr, lr, r6
   3977c:	bne	3976c <GetDataSlab+0x97ec>
   39780:	b	39650 <GetDataSlab+0x96d0>
   39784:	ldr	r5, [sl]
   39788:	mov	r7, #0
   3978c:	sub	r9, fp, #176	; 0xb0
   39790:	sub	r8, fp, #96	; 0x60
   39794:	sub	r0, r5, #1
   39798:	str	r0, [fp, #-96]	; 0xffffffa0
   3979c:	ldr	r0, [r3]
   397a0:	str	r0, [sp, #72]	; 0x48
   397a4:	str	r0, [fp, #-176]	; 0xffffff50
   397a8:	ldr	r0, [fp, #20]
   397ac:	ldr	r1, [r0]
   397b0:	ldr	r0, [fp, #24]
   397b4:	cmp	r0, #2
   397b8:	mov	r0, r1
   397bc:	str	r1, [sp, #76]	; 0x4c
   397c0:	blt	44d64 <GetDataSlab+0x14de4>
   397c4:	ldr	r0, [fp, #8]
   397c8:	ldr	r4, [sp, #72]	; 0x48
   397cc:	mov	r3, #0
   397d0:	mvn	ip, #15
   397d4:	mov	r7, #0
   397d8:	str	r1, [sp, #76]	; 0x4c
   397dc:	str	r3, [sp, #84]	; 0x54
   397e0:	mov	r3, r1
   397e4:	mov	r2, r0
   397e8:	sub	r0, r0, #4
   397ec:	mov	r6, r4
   397f0:	sub	sl, r2, #12
   397f4:	mov	r2, #1
   397f8:	b	3984c <GetDataSlab+0x98cc>
   397fc:	sub	r8, fp, #96	; 0x60
   39800:	ldr	r3, [fp, #12]
   39804:	sub	r9, fp, #176	; 0xb0
   39808:	str	lr, [r8, r2, lsl #2]
   3980c:	ldr	r6, [sp, #68]	; 0x44
   39810:	add	sl, sl, #4
   39814:	str	r4, [r9, r2, lsl #2]
   39818:	ldr	r3, [r3, r2, lsl #2]
   3981c:	mla	r7, r3, r6, r7
   39820:	ldr	r3, [fp, #20]
   39824:	ldr	r6, [sp, #76]	; 0x4c
   39828:	ldr	r3, [r3, r2, lsl #2]
   3982c:	add	r2, r2, #1
   39830:	mul	r6, r3, r6
   39834:	ldr	r3, [fp, #24]
   39838:	str	r6, [sp, #76]	; 0x4c
   3983c:	mov	r6, r4
   39840:	ldr	r4, [sp, #64]	; 0x40
   39844:	cmp	r2, r3
   39848:	beq	44d64 <GetDataSlab+0x14de4>
   3984c:	ldr	r3, [fp, #16]
   39850:	str	r6, [sp, #68]	; 0x44
   39854:	ldr	r3, [r3, r2, lsl #2]
   39858:	str	r4, [r9, r2, lsl #2]
   3985c:	ldr	r9, [sp, #84]	; 0x54
   39860:	sub	lr, r3, #1
   39864:	ldr	r3, [fp, #8]
   39868:	add	r9, r9, #1
   3986c:	str	lr, [r8, r2, lsl #2]
   39870:	cmp	r9, #4
   39874:	str	r9, [sp, #84]	; 0x54
   39878:	ldr	r6, [r3, r2, lsl #2]
   3987c:	str	r6, [sp, #64]	; 0x40
   39880:	bcs	3988c <GetDataSlab+0x990c>
   39884:	mov	r3, r2
   39888:	b	3991c <GetDataSlab+0x999c>
   3988c:	vmov.i32	q9, #1	; 0x00000001
   39890:	vmov.i32	q10, #1	; 0x00000001
   39894:	vmov.32	d23[1], r6
   39898:	vmov.i32	q8, #1	; 0x00000001
   3989c:	bic	r3, r9, #3
   398a0:	bic	r8, r2, #3
   398a4:	mov	r6, sl
   398a8:	str	r3, [sp, #60]	; 0x3c
   398ac:	sub	r3, r2, r3
   398b0:	vmov.32	d18[0], r4
   398b4:	vmov.32	d20[0], lr
   398b8:	vorr	d16, d18, d18
   398bc:	vmov.i32	q9, #1	; 0x00000001
   398c0:	vorr	d18, d20, d20
   398c4:	vld1.32	{d20-d21}, [r6], ip
   398c8:	subs	r8, r8, #4
   398cc:	vrev64.32	q12, q10
   398d0:	vext.8	q12, q12, q12, #8
   398d4:	vext.8	q11, q11, q12, #12
   398d8:	vmul.i32	q9, q9, q12
   398dc:	vmul.i32	q8, q11, q8
   398e0:	vorr	q11, q12, q12
   398e4:	bne	398c4 <GetDataSlab+0x9944>
   398e8:	vext.8	q11, q9, q8, #8
   398ec:	vext.8	q12, q8, q8, #8
   398f0:	ldr	r6, [sp, #60]	; 0x3c
   398f4:	vmul.i32	q0, q9, q11
   398f8:	vmul.i32	q1, q8, q12
   398fc:	cmp	r9, r6
   39900:	vmul.i32	q8, q0, d0[1]
   39904:	vmul.i32	q9, q1, d2[1]
   39908:	vmov.32	lr, d16[0]
   3990c:	vmov.32	r4, d18[0]
   39910:	beq	397fc <GetDataSlab+0x987c>
   39914:	vmov.32	r6, d20[0]
   39918:	sub	r8, fp, #96	; 0x60
   3991c:	mul	r4, r6, r4
   39920:	ldr	r6, [r0, r3, lsl #2]
   39924:	subs	r3, r3, #1
   39928:	mul	lr, lr, r6
   3992c:	bne	3991c <GetDataSlab+0x999c>
   39930:	b	39800 <GetDataSlab+0x9880>
   39934:	ldr	r5, [sl]
   39938:	mov	r7, #0
   3993c:	sub	r9, fp, #176	; 0xb0
   39940:	sub	r8, fp, #96	; 0x60
   39944:	sub	r0, r5, #1
   39948:	str	r0, [fp, #-96]	; 0xffffffa0
   3994c:	ldr	r0, [r3]
   39950:	str	r0, [sp, #72]	; 0x48
   39954:	str	r0, [fp, #-176]	; 0xffffff50
   39958:	ldr	r0, [fp, #20]
   3995c:	ldr	r1, [r0]
   39960:	ldr	r0, [fp, #24]
   39964:	cmp	r0, #2
   39968:	mov	r0, r1
   3996c:	str	r1, [sp, #76]	; 0x4c
   39970:	blt	44ef8 <GetDataSlab+0x14f78>
   39974:	ldr	r0, [fp, #8]
   39978:	ldr	r4, [sp, #72]	; 0x48
   3997c:	mov	r3, #0
   39980:	mvn	ip, #15
   39984:	mov	r7, #0
   39988:	str	r1, [sp, #76]	; 0x4c
   3998c:	str	r3, [sp, #84]	; 0x54
   39990:	mov	r3, r1
   39994:	mov	r2, r0
   39998:	sub	r0, r0, #4
   3999c:	mov	r6, r4
   399a0:	sub	sl, r2, #12
   399a4:	mov	r2, #1
   399a8:	b	399fc <GetDataSlab+0x9a7c>
   399ac:	sub	r8, fp, #96	; 0x60
   399b0:	ldr	r3, [fp, #12]
   399b4:	sub	r9, fp, #176	; 0xb0
   399b8:	str	lr, [r8, r2, lsl #2]
   399bc:	ldr	r6, [sp, #68]	; 0x44
   399c0:	add	sl, sl, #4
   399c4:	str	r4, [r9, r2, lsl #2]
   399c8:	ldr	r3, [r3, r2, lsl #2]
   399cc:	mla	r7, r3, r6, r7
   399d0:	ldr	r3, [fp, #20]
   399d4:	ldr	r6, [sp, #76]	; 0x4c
   399d8:	ldr	r3, [r3, r2, lsl #2]
   399dc:	add	r2, r2, #1
   399e0:	mul	r6, r3, r6
   399e4:	ldr	r3, [fp, #24]
   399e8:	str	r6, [sp, #76]	; 0x4c
   399ec:	mov	r6, r4
   399f0:	ldr	r4, [sp, #64]	; 0x40
   399f4:	cmp	r2, r3
   399f8:	beq	44ef8 <GetDataSlab+0x14f78>
   399fc:	ldr	r3, [fp, #16]
   39a00:	str	r6, [sp, #68]	; 0x44
   39a04:	ldr	r3, [r3, r2, lsl #2]
   39a08:	str	r4, [r9, r2, lsl #2]
   39a0c:	ldr	r9, [sp, #84]	; 0x54
   39a10:	sub	lr, r3, #1
   39a14:	ldr	r3, [fp, #8]
   39a18:	add	r9, r9, #1
   39a1c:	str	lr, [r8, r2, lsl #2]
   39a20:	cmp	r9, #4
   39a24:	str	r9, [sp, #84]	; 0x54
   39a28:	ldr	r6, [r3, r2, lsl #2]
   39a2c:	str	r6, [sp, #64]	; 0x40
   39a30:	bcs	39a3c <GetDataSlab+0x9abc>
   39a34:	mov	r3, r2
   39a38:	b	39acc <GetDataSlab+0x9b4c>
   39a3c:	vmov.i32	q9, #1	; 0x00000001
   39a40:	vmov.i32	q10, #1	; 0x00000001
   39a44:	vmov.32	d23[1], r6
   39a48:	vmov.i32	q8, #1	; 0x00000001
   39a4c:	bic	r3, r9, #3
   39a50:	bic	r8, r2, #3
   39a54:	mov	r6, sl
   39a58:	str	r3, [sp, #60]	; 0x3c
   39a5c:	sub	r3, r2, r3
   39a60:	vmov.32	d18[0], r4
   39a64:	vmov.32	d20[0], lr
   39a68:	vorr	d16, d18, d18
   39a6c:	vmov.i32	q9, #1	; 0x00000001
   39a70:	vorr	d18, d20, d20
   39a74:	vld1.32	{d20-d21}, [r6], ip
   39a78:	subs	r8, r8, #4
   39a7c:	vrev64.32	q12, q10
   39a80:	vext.8	q12, q12, q12, #8
   39a84:	vext.8	q11, q11, q12, #12
   39a88:	vmul.i32	q9, q9, q12
   39a8c:	vmul.i32	q8, q11, q8
   39a90:	vorr	q11, q12, q12
   39a94:	bne	39a74 <GetDataSlab+0x9af4>
   39a98:	vext.8	q11, q9, q8, #8
   39a9c:	vext.8	q12, q8, q8, #8
   39aa0:	ldr	r6, [sp, #60]	; 0x3c
   39aa4:	vmul.i32	q0, q9, q11
   39aa8:	vmul.i32	q1, q8, q12
   39aac:	cmp	r9, r6
   39ab0:	vmul.i32	q8, q0, d0[1]
   39ab4:	vmul.i32	q9, q1, d2[1]
   39ab8:	vmov.32	lr, d16[0]
   39abc:	vmov.32	r4, d18[0]
   39ac0:	beq	399ac <GetDataSlab+0x9a2c>
   39ac4:	vmov.32	r6, d20[0]
   39ac8:	sub	r8, fp, #96	; 0x60
   39acc:	mul	r4, r6, r4
   39ad0:	ldr	r6, [r0, r3, lsl #2]
   39ad4:	subs	r3, r3, #1
   39ad8:	mul	lr, lr, r6
   39adc:	bne	39acc <GetDataSlab+0x9b4c>
   39ae0:	b	399b0 <GetDataSlab+0x9a30>
   39ae4:	ldr	r5, [sl]
   39ae8:	mov	r7, #0
   39aec:	sub	r9, fp, #176	; 0xb0
   39af0:	sub	r8, fp, #96	; 0x60
   39af4:	sub	r0, r5, #1
   39af8:	str	r0, [fp, #-96]	; 0xffffffa0
   39afc:	ldr	r0, [r3]
   39b00:	str	r0, [sp, #72]	; 0x48
   39b04:	str	r0, [fp, #-176]	; 0xffffff50
   39b08:	ldr	r0, [fp, #20]
   39b0c:	ldr	r1, [r0]
   39b10:	ldr	r0, [fp, #24]
   39b14:	cmp	r0, #2
   39b18:	mov	r0, r1
   39b1c:	str	r1, [sp, #76]	; 0x4c
   39b20:	blt	4508c <GetDataSlab+0x1510c>
   39b24:	ldr	r0, [fp, #8]
   39b28:	ldr	r4, [sp, #72]	; 0x48
   39b2c:	mov	r3, #0
   39b30:	mvn	ip, #15
   39b34:	mov	r7, #0
   39b38:	str	r1, [sp, #76]	; 0x4c
   39b3c:	str	r3, [sp, #84]	; 0x54
   39b40:	mov	r3, r1
   39b44:	mov	r2, r0
   39b48:	sub	r0, r0, #4
   39b4c:	mov	r6, r4
   39b50:	sub	sl, r2, #12
   39b54:	mov	r2, #1
   39b58:	b	39bac <GetDataSlab+0x9c2c>
   39b5c:	sub	r8, fp, #96	; 0x60
   39b60:	ldr	r3, [fp, #12]
   39b64:	sub	r9, fp, #176	; 0xb0
   39b68:	str	lr, [r8, r2, lsl #2]
   39b6c:	ldr	r6, [sp, #68]	; 0x44
   39b70:	add	sl, sl, #4
   39b74:	str	r4, [r9, r2, lsl #2]
   39b78:	ldr	r3, [r3, r2, lsl #2]
   39b7c:	mla	r7, r3, r6, r7
   39b80:	ldr	r3, [fp, #20]
   39b84:	ldr	r6, [sp, #76]	; 0x4c
   39b88:	ldr	r3, [r3, r2, lsl #2]
   39b8c:	add	r2, r2, #1
   39b90:	mul	r6, r3, r6
   39b94:	ldr	r3, [fp, #24]
   39b98:	str	r6, [sp, #76]	; 0x4c
   39b9c:	mov	r6, r4
   39ba0:	ldr	r4, [sp, #64]	; 0x40
   39ba4:	cmp	r2, r3
   39ba8:	beq	4508c <GetDataSlab+0x1510c>
   39bac:	ldr	r3, [fp, #16]
   39bb0:	str	r6, [sp, #68]	; 0x44
   39bb4:	ldr	r3, [r3, r2, lsl #2]
   39bb8:	str	r4, [r9, r2, lsl #2]
   39bbc:	ldr	r9, [sp, #84]	; 0x54
   39bc0:	sub	lr, r3, #1
   39bc4:	ldr	r3, [fp, #8]
   39bc8:	add	r9, r9, #1
   39bcc:	str	lr, [r8, r2, lsl #2]
   39bd0:	cmp	r9, #4
   39bd4:	str	r9, [sp, #84]	; 0x54
   39bd8:	ldr	r6, [r3, r2, lsl #2]
   39bdc:	str	r6, [sp, #64]	; 0x40
   39be0:	bcs	39bec <GetDataSlab+0x9c6c>
   39be4:	mov	r3, r2
   39be8:	b	39c7c <GetDataSlab+0x9cfc>
   39bec:	vmov.i32	q9, #1	; 0x00000001
   39bf0:	vmov.i32	q10, #1	; 0x00000001
   39bf4:	vmov.32	d23[1], r6
   39bf8:	vmov.i32	q8, #1	; 0x00000001
   39bfc:	bic	r3, r9, #3
   39c00:	bic	r8, r2, #3
   39c04:	mov	r6, sl
   39c08:	str	r3, [sp, #60]	; 0x3c
   39c0c:	sub	r3, r2, r3
   39c10:	vmov.32	d18[0], r4
   39c14:	vmov.32	d20[0], lr
   39c18:	vorr	d16, d18, d18
   39c1c:	vmov.i32	q9, #1	; 0x00000001
   39c20:	vorr	d18, d20, d20
   39c24:	vld1.32	{d20-d21}, [r6], ip
   39c28:	subs	r8, r8, #4
   39c2c:	vrev64.32	q12, q10
   39c30:	vext.8	q12, q12, q12, #8
   39c34:	vext.8	q11, q11, q12, #12
   39c38:	vmul.i32	q9, q9, q12
   39c3c:	vmul.i32	q8, q11, q8
   39c40:	vorr	q11, q12, q12
   39c44:	bne	39c24 <GetDataSlab+0x9ca4>
   39c48:	vext.8	q11, q9, q8, #8
   39c4c:	vext.8	q12, q8, q8, #8
   39c50:	ldr	r6, [sp, #60]	; 0x3c
   39c54:	vmul.i32	q0, q9, q11
   39c58:	vmul.i32	q1, q8, q12
   39c5c:	cmp	r9, r6
   39c60:	vmul.i32	q8, q0, d0[1]
   39c64:	vmul.i32	q9, q1, d2[1]
   39c68:	vmov.32	lr, d16[0]
   39c6c:	vmov.32	r4, d18[0]
   39c70:	beq	39b5c <GetDataSlab+0x9bdc>
   39c74:	vmov.32	r6, d20[0]
   39c78:	sub	r8, fp, #96	; 0x60
   39c7c:	mul	r4, r6, r4
   39c80:	ldr	r6, [r0, r3, lsl #2]
   39c84:	subs	r3, r3, #1
   39c88:	mul	lr, lr, r6
   39c8c:	bne	39c7c <GetDataSlab+0x9cfc>
   39c90:	b	39b60 <GetDataSlab+0x9be0>
   39c94:	ldr	r5, [sl]
   39c98:	mov	r7, #0
   39c9c:	sub	r9, fp, #176	; 0xb0
   39ca0:	sub	r8, fp, #96	; 0x60
   39ca4:	sub	r0, r5, #1
   39ca8:	str	r0, [fp, #-96]	; 0xffffffa0
   39cac:	ldr	r0, [r3]
   39cb0:	str	r0, [sp, #72]	; 0x48
   39cb4:	str	r0, [fp, #-176]	; 0xffffff50
   39cb8:	ldr	r0, [fp, #20]
   39cbc:	ldr	r1, [r0]
   39cc0:	ldr	r0, [fp, #24]
   39cc4:	cmp	r0, #2
   39cc8:	mov	r0, r1
   39ccc:	str	r1, [sp, #76]	; 0x4c
   39cd0:	blt	4522c <GetDataSlab+0x152ac>
   39cd4:	ldr	r0, [fp, #8]
   39cd8:	ldr	r4, [sp, #72]	; 0x48
   39cdc:	mov	r3, #0
   39ce0:	mvn	ip, #15
   39ce4:	mov	r7, #0
   39ce8:	str	r1, [sp, #76]	; 0x4c
   39cec:	str	r3, [sp, #84]	; 0x54
   39cf0:	mov	r3, r1
   39cf4:	mov	r2, r0
   39cf8:	sub	r0, r0, #4
   39cfc:	mov	r6, r4
   39d00:	sub	sl, r2, #12
   39d04:	mov	r2, #1
   39d08:	b	39d5c <GetDataSlab+0x9ddc>
   39d0c:	sub	r8, fp, #96	; 0x60
   39d10:	ldr	r3, [fp, #12]
   39d14:	sub	r9, fp, #176	; 0xb0
   39d18:	str	lr, [r8, r2, lsl #2]
   39d1c:	ldr	r6, [sp, #68]	; 0x44
   39d20:	add	sl, sl, #4
   39d24:	str	r4, [r9, r2, lsl #2]
   39d28:	ldr	r3, [r3, r2, lsl #2]
   39d2c:	mla	r7, r3, r6, r7
   39d30:	ldr	r3, [fp, #20]
   39d34:	ldr	r6, [sp, #76]	; 0x4c
   39d38:	ldr	r3, [r3, r2, lsl #2]
   39d3c:	add	r2, r2, #1
   39d40:	mul	r6, r3, r6
   39d44:	ldr	r3, [fp, #24]
   39d48:	str	r6, [sp, #76]	; 0x4c
   39d4c:	mov	r6, r4
   39d50:	ldr	r4, [sp, #64]	; 0x40
   39d54:	cmp	r2, r3
   39d58:	beq	4522c <GetDataSlab+0x152ac>
   39d5c:	ldr	r3, [fp, #16]
   39d60:	str	r6, [sp, #68]	; 0x44
   39d64:	ldr	r3, [r3, r2, lsl #2]
   39d68:	str	r4, [r9, r2, lsl #2]
   39d6c:	ldr	r9, [sp, #84]	; 0x54
   39d70:	sub	lr, r3, #1
   39d74:	ldr	r3, [fp, #8]
   39d78:	add	r9, r9, #1
   39d7c:	str	lr, [r8, r2, lsl #2]
   39d80:	cmp	r9, #4
   39d84:	str	r9, [sp, #84]	; 0x54
   39d88:	ldr	r6, [r3, r2, lsl #2]
   39d8c:	str	r6, [sp, #64]	; 0x40
   39d90:	bcs	39d9c <GetDataSlab+0x9e1c>
   39d94:	mov	r3, r2
   39d98:	b	39e2c <GetDataSlab+0x9eac>
   39d9c:	vmov.i32	q9, #1	; 0x00000001
   39da0:	vmov.i32	q10, #1	; 0x00000001
   39da4:	vmov.32	d23[1], r6
   39da8:	vmov.i32	q8, #1	; 0x00000001
   39dac:	bic	r3, r9, #3
   39db0:	bic	r8, r2, #3
   39db4:	mov	r6, sl
   39db8:	str	r3, [sp, #60]	; 0x3c
   39dbc:	sub	r3, r2, r3
   39dc0:	vmov.32	d18[0], r4
   39dc4:	vmov.32	d20[0], lr
   39dc8:	vorr	d16, d18, d18
   39dcc:	vmov.i32	q9, #1	; 0x00000001
   39dd0:	vorr	d18, d20, d20
   39dd4:	vld1.32	{d20-d21}, [r6], ip
   39dd8:	subs	r8, r8, #4
   39ddc:	vrev64.32	q12, q10
   39de0:	vext.8	q12, q12, q12, #8
   39de4:	vext.8	q11, q11, q12, #12
   39de8:	vmul.i32	q9, q9, q12
   39dec:	vmul.i32	q8, q11, q8
   39df0:	vorr	q11, q12, q12
   39df4:	bne	39dd4 <GetDataSlab+0x9e54>
   39df8:	vext.8	q11, q9, q8, #8
   39dfc:	vext.8	q12, q8, q8, #8
   39e00:	ldr	r6, [sp, #60]	; 0x3c
   39e04:	vmul.i32	q0, q9, q11
   39e08:	vmul.i32	q1, q8, q12
   39e0c:	cmp	r9, r6
   39e10:	vmul.i32	q8, q0, d0[1]
   39e14:	vmul.i32	q9, q1, d2[1]
   39e18:	vmov.32	lr, d16[0]
   39e1c:	vmov.32	r4, d18[0]
   39e20:	beq	39d0c <GetDataSlab+0x9d8c>
   39e24:	vmov.32	r6, d20[0]
   39e28:	sub	r8, fp, #96	; 0x60
   39e2c:	mul	r4, r6, r4
   39e30:	ldr	r6, [r0, r3, lsl #2]
   39e34:	subs	r3, r3, #1
   39e38:	mul	lr, lr, r6
   39e3c:	bne	39e2c <GetDataSlab+0x9eac>
   39e40:	b	39d10 <GetDataSlab+0x9d90>
   39e44:	ldr	r7, [sl]
   39e48:	sub	r6, fp, #176	; 0xb0
   39e4c:	sub	r8, fp, #96	; 0x60
   39e50:	sub	r0, r7, #1
   39e54:	str	r0, [fp, #-96]	; 0xffffffa0
   39e58:	ldr	r0, [r3]
   39e5c:	mov	r3, #0
   39e60:	str	r0, [sp, #64]	; 0x40
   39e64:	str	r0, [fp, #-176]	; 0xffffff50
   39e68:	ldr	r0, [fp, #20]
   39e6c:	ldr	r1, [r0]
   39e70:	ldr	r0, [fp, #24]
   39e74:	cmp	r0, #2
   39e78:	mov	r0, r1
   39e7c:	str	r1, [sp, #68]	; 0x44
   39e80:	blt	453cc <GetDataSlab+0x1544c>
   39e84:	ldr	r0, [fp, #8]
   39e88:	ldr	r5, [sp, #64]	; 0x40
   39e8c:	mov	ip, #1
   39e90:	mvn	sl, #15
   39e94:	mov	r3, #0
   39e98:	str	r1, [sp, #68]	; 0x44
   39e9c:	mov	r2, r0
   39ea0:	sub	r0, r0, #4
   39ea4:	mov	r4, r5
   39ea8:	sub	lr, r2, #12
   39eac:	mov	r2, #0
   39eb0:	str	r2, [sp, #84]	; 0x54
   39eb4:	mov	r2, r1
   39eb8:	b	39f0c <GetDataSlab+0x9f8c>
   39ebc:	ldr	r4, [sp, #56]	; 0x38
   39ec0:	sub	r8, fp, #96	; 0x60
   39ec4:	ldr	r2, [fp, #12]
   39ec8:	sub	r6, fp, #176	; 0xb0
   39ecc:	str	r9, [r8, ip, lsl #2]
   39ed0:	add	lr, lr, #4
   39ed4:	str	r5, [r6, ip, lsl #2]
   39ed8:	ldr	r2, [r2, ip, lsl #2]
   39edc:	mla	r3, r2, r4, r3
   39ee0:	ldr	r2, [fp, #20]
   39ee4:	ldr	r4, [sp, #68]	; 0x44
   39ee8:	ldr	r2, [r2, ip, lsl #2]
   39eec:	add	ip, ip, #1
   39ef0:	mul	r4, r2, r4
   39ef4:	ldr	r2, [fp, #24]
   39ef8:	str	r4, [sp, #68]	; 0x44
   39efc:	mov	r4, r5
   39f00:	ldr	r5, [sp, #72]	; 0x48
   39f04:	cmp	ip, r2
   39f08:	beq	453cc <GetDataSlab+0x1544c>
   39f0c:	ldr	r2, [fp, #16]
   39f10:	ldr	r2, [r2, ip, lsl #2]
   39f14:	str	r5, [r6, ip, lsl #2]
   39f18:	sub	r9, r2, #1
   39f1c:	ldr	r2, [fp, #8]
   39f20:	str	r9, [r8, ip, lsl #2]
   39f24:	ldr	r6, [r2, ip, lsl #2]
   39f28:	ldr	r2, [sp, #84]	; 0x54
   39f2c:	add	r2, r2, #1
   39f30:	str	r6, [sp, #72]	; 0x48
   39f34:	cmp	r2, #4
   39f38:	str	r2, [sp, #84]	; 0x54
   39f3c:	bcs	39f4c <GetDataSlab+0x9fcc>
   39f40:	mov	r2, r6
   39f44:	mov	r6, ip
   39f48:	b	39fe8 <GetDataSlab+0xa068>
   39f4c:	vmov.i32	q9, #1	; 0x00000001
   39f50:	vmov.i32	q10, #1	; 0x00000001
   39f54:	vmov.32	d23[1], r6
   39f58:	vmov.i32	q8, #1	; 0x00000001
   39f5c:	bic	r2, r2, #3
   39f60:	bic	r8, ip, #3
   39f64:	str	r4, [sp, #56]	; 0x38
   39f68:	str	r2, [sp, #60]	; 0x3c
   39f6c:	sub	r6, ip, r2
   39f70:	mov	r2, lr
   39f74:	vmov.32	d18[0], r5
   39f78:	vmov.32	d20[0], r9
   39f7c:	vorr	d16, d18, d18
   39f80:	vmov.i32	q9, #1	; 0x00000001
   39f84:	vorr	d18, d20, d20
   39f88:	vld1.32	{d20-d21}, [r2], sl
   39f8c:	subs	r8, r8, #4
   39f90:	vrev64.32	q12, q10
   39f94:	vext.8	q12, q12, q12, #8
   39f98:	vext.8	q11, q11, q12, #12
   39f9c:	vmul.i32	q9, q9, q12
   39fa0:	vmul.i32	q8, q11, q8
   39fa4:	vorr	q11, q12, q12
   39fa8:	bne	39f88 <GetDataSlab+0xa008>
   39fac:	vext.8	q11, q9, q8, #8
   39fb0:	vext.8	q12, q8, q8, #8
   39fb4:	ldr	r2, [sp, #84]	; 0x54
   39fb8:	ldr	r4, [sp, #60]	; 0x3c
   39fbc:	vmul.i32	q0, q9, q11
   39fc0:	vmul.i32	q1, q8, q12
   39fc4:	cmp	r2, r4
   39fc8:	vmul.i32	q8, q0, d0[1]
   39fcc:	vmul.i32	q9, q1, d2[1]
   39fd0:	vmov.32	r9, d16[0]
   39fd4:	vmov.32	r5, d18[0]
   39fd8:	beq	39ebc <GetDataSlab+0x9f3c>
   39fdc:	vmov.32	r2, d20[0]
   39fe0:	ldr	r4, [sp, #56]	; 0x38
   39fe4:	sub	r8, fp, #96	; 0x60
   39fe8:	mul	r5, r2, r5
   39fec:	ldr	r2, [r0, r6, lsl #2]
   39ff0:	subs	r6, r6, #1
   39ff4:	mul	r9, r9, r2
   39ff8:	bne	39fe8 <GetDataSlab+0xa068>
   39ffc:	b	39ec4 <GetDataSlab+0x9f44>
   3a000:	ldr	lr, [sl]
   3a004:	mov	r7, #0
   3a008:	sub	r2, fp, #176	; 0xb0
   3a00c:	sub	r3, fp, #96	; 0x60
   3a010:	sub	r0, lr, #1
   3a014:	str	r0, [fp, #-96]	; 0xffffffa0
   3a018:	ldr	r0, [r6]
   3a01c:	str	r0, [sp, #40]	; 0x28
   3a020:	str	r0, [fp, #-176]	; 0xffffff50
   3a024:	ldr	r0, [fp, #20]
   3a028:	ldr	r1, [r0]
   3a02c:	ldr	r0, [fp, #24]
   3a030:	cmp	r0, #2
   3a034:	str	r1, [sp, #68]	; 0x44
   3a038:	str	r1, [sp, #72]	; 0x48
   3a03c:	blt	45554 <GetDataSlab+0x155d4>
   3a040:	ldr	r0, [fp, #8]
   3a044:	ldr	r4, [sp, #40]	; 0x28
   3a048:	mov	r6, #1
   3a04c:	mov	r5, #0
   3a050:	mvn	r8, #15
   3a054:	mov	r7, #0
   3a058:	sub	r1, r0, #4
   3a05c:	sub	ip, r0, #12
   3a060:	mov	r0, r4
   3a064:	ldr	r0, [sp, #68]	; 0x44
   3a068:	str	r4, [sp, #84]	; 0x54
   3a06c:	str	r0, [sp, #72]	; 0x48
   3a070:	b	3a0d0 <GetDataSlab+0xa150>
   3a074:	ldr	sl, [fp, #16]
   3a078:	mov	r9, r5
   3a07c:	sub	r3, fp, #96	; 0x60
   3a080:	sub	r2, fp, #176	; 0xb0
   3a084:	ldr	r5, [sp, #84]	; 0x54
   3a088:	str	r4, [sp, #84]	; 0x54
   3a08c:	add	ip, ip, #4
   3a090:	str	r0, [r3, r6, lsl #2]
   3a094:	ldr	r0, [fp, #12]
   3a098:	str	r4, [r2, r6, lsl #2]
   3a09c:	ldr	r4, [sp, #76]	; 0x4c
   3a0a0:	ldr	r0, [r0, r6, lsl #2]
   3a0a4:	mla	r7, r0, r5, r7
   3a0a8:	ldr	r0, [fp, #20]
   3a0ac:	ldr	r5, [sp, #72]	; 0x48
   3a0b0:	ldr	r0, [r0, r6, lsl #2]
   3a0b4:	add	r6, r6, #1
   3a0b8:	mul	r5, r0, r5
   3a0bc:	ldr	r0, [fp, #24]
   3a0c0:	str	r5, [sp, #72]	; 0x48
   3a0c4:	mov	r5, r9
   3a0c8:	cmp	r6, r0
   3a0cc:	beq	45554 <GetDataSlab+0x155d4>
   3a0d0:	ldr	r0, [sl, r6, lsl #2]
   3a0d4:	str	r4, [r2, r6, lsl #2]
   3a0d8:	ldr	r2, [fp, #8]
   3a0dc:	add	r5, r5, #1
   3a0e0:	cmp	r5, #4
   3a0e4:	sub	r0, r0, #1
   3a0e8:	str	r0, [r3, r6, lsl #2]
   3a0ec:	ldr	r2, [r2, r6, lsl #2]
   3a0f0:	str	r2, [sp, #76]	; 0x4c
   3a0f4:	bcs	3a100 <GetDataSlab+0xa180>
   3a0f8:	mov	r3, r6
   3a0fc:	b	3a188 <GetDataSlab+0xa208>
   3a100:	vmov.i32	q9, #1	; 0x00000001
   3a104:	vmov.i32	q10, #1	; 0x00000001
   3a108:	vmov.32	d23[1], r2
   3a10c:	vmov.i32	q8, #1	; 0x00000001
   3a110:	bic	r9, r5, #3
   3a114:	bic	sl, r6, #3
   3a118:	sub	r3, r6, r9
   3a11c:	vmov.32	d18[0], r4
   3a120:	vmov.32	d20[0], r0
   3a124:	mov	r0, ip
   3a128:	vorr	d16, d18, d18
   3a12c:	vmov.i32	q9, #1	; 0x00000001
   3a130:	vorr	d18, d20, d20
   3a134:	vld1.32	{d20-d21}, [r0], r8
   3a138:	subs	sl, sl, #4
   3a13c:	vrev64.32	q12, q10
   3a140:	vext.8	q12, q12, q12, #8
   3a144:	vext.8	q11, q11, q12, #12
   3a148:	vmul.i32	q9, q9, q12
   3a14c:	vmul.i32	q8, q11, q8
   3a150:	vorr	q11, q12, q12
   3a154:	bne	3a134 <GetDataSlab+0xa1b4>
   3a158:	vext.8	q11, q9, q8, #8
   3a15c:	vext.8	q12, q8, q8, #8
   3a160:	cmp	r5, r9
   3a164:	vmul.i32	q0, q9, q11
   3a168:	vmul.i32	q1, q8, q12
   3a16c:	vmul.i32	q8, q0, d0[1]
   3a170:	vmul.i32	q9, q1, d2[1]
   3a174:	vmov.32	r0, d16[0]
   3a178:	vmov.32	r4, d18[0]
   3a17c:	beq	3a074 <GetDataSlab+0xa0f4>
   3a180:	vmov.32	r2, d20[0]
   3a184:	ldr	sl, [fp, #16]
   3a188:	mov	r9, r5
   3a18c:	mul	r4, r2, r4
   3a190:	ldr	r2, [r1, r3, lsl #2]
   3a194:	subs	r3, r3, #1
   3a198:	mul	r0, r0, r2
   3a19c:	bne	3a18c <GetDataSlab+0xa20c>
   3a1a0:	b	3a07c <GetDataSlab+0xa0fc>
   3a1a4:	ldr	r0, [sl]
   3a1a8:	mov	r1, #0
   3a1ac:	sub	r7, fp, #176	; 0xb0
   3a1b0:	str	r0, [sp, #68]	; 0x44
   3a1b4:	sub	r0, r0, #1
   3a1b8:	str	r0, [fp, #-96]	; 0xffffffa0
   3a1bc:	ldr	r0, [r6]
   3a1c0:	sub	r6, fp, #96	; 0x60
   3a1c4:	str	r0, [sp, #60]	; 0x3c
   3a1c8:	str	r0, [fp, #-176]	; 0xffffff50
   3a1cc:	ldr	r0, [fp, #20]
   3a1d0:	ldr	r2, [r0]
   3a1d4:	ldr	r0, [fp, #24]
   3a1d8:	cmp	r0, #2
   3a1dc:	str	r2, [sp, #72]	; 0x48
   3a1e0:	str	r2, [sp, #76]	; 0x4c
   3a1e4:	blt	458bc <GetDataSlab+0x1593c>
   3a1e8:	ldr	r0, [fp, #8]
   3a1ec:	ldr	r3, [sp, #60]	; 0x3c
   3a1f0:	ldr	r2, [sp, #72]	; 0x48
   3a1f4:	mov	r5, #1
   3a1f8:	mov	r9, #0
   3a1fc:	mvn	r8, #15
   3a200:	mov	r1, r0
   3a204:	sub	r0, r0, #4
   3a208:	mov	sl, r3
   3a20c:	str	r2, [sp, #76]	; 0x4c
   3a210:	sub	ip, r1, #12
   3a214:	mov	r1, #0
   3a218:	b	3a268 <GetDataSlab+0xa2e8>
   3a21c:	sub	r6, fp, #96	; 0x60
   3a220:	sub	r7, fp, #176	; 0xb0
   3a224:	ldr	r4, [sp, #76]	; 0x4c
   3a228:	add	ip, ip, #4
   3a22c:	str	r2, [r6, r5, lsl #2]
   3a230:	ldr	r2, [fp, #12]
   3a234:	str	r3, [r7, r5, lsl #2]
   3a238:	ldr	r2, [r2, r5, lsl #2]
   3a23c:	mla	r1, r2, sl, r1
   3a240:	ldr	r2, [fp, #20]
   3a244:	mov	sl, r3
   3a248:	ldr	r3, [sp, #84]	; 0x54
   3a24c:	ldr	r2, [r2, r5, lsl #2]
   3a250:	add	r5, r5, #1
   3a254:	mul	r4, r2, r4
   3a258:	ldr	r2, [fp, #24]
   3a25c:	str	r4, [sp, #76]	; 0x4c
   3a260:	cmp	r5, r2
   3a264:	beq	458bc <GetDataSlab+0x1593c>
   3a268:	ldr	r2, [fp, #16]
   3a26c:	add	r9, r9, #1
   3a270:	cmp	r9, #4
   3a274:	ldr	r2, [r2, r5, lsl #2]
   3a278:	str	r3, [r7, r5, lsl #2]
   3a27c:	ldr	r7, [fp, #8]
   3a280:	sub	r2, r2, #1
   3a284:	str	r2, [r6, r5, lsl #2]
   3a288:	ldr	r7, [r7, r5, lsl #2]
   3a28c:	str	r7, [sp, #84]	; 0x54
   3a290:	bcs	3a29c <GetDataSlab+0xa31c>
   3a294:	mov	r6, r5
   3a298:	b	3a320 <GetDataSlab+0xa3a0>
   3a29c:	vmov.i32	q9, #1	; 0x00000001
   3a2a0:	vmov.i32	q10, #1	; 0x00000001
   3a2a4:	vmov.32	d23[1], r7
   3a2a8:	vmov.i32	q8, #1	; 0x00000001
   3a2ac:	bic	r7, r9, #3
   3a2b0:	bic	lr, r5, #3
   3a2b4:	sub	r6, r5, r7
   3a2b8:	vmov.32	d18[0], r3
   3a2bc:	vmov.32	d20[0], r2
   3a2c0:	mov	r2, ip
   3a2c4:	vorr	d16, d18, d18
   3a2c8:	vmov.i32	q9, #1	; 0x00000001
   3a2cc:	vorr	d18, d20, d20
   3a2d0:	vld1.32	{d20-d21}, [r2], r8
   3a2d4:	subs	lr, lr, #4
   3a2d8:	vrev64.32	q12, q10
   3a2dc:	vext.8	q12, q12, q12, #8
   3a2e0:	vext.8	q11, q11, q12, #12
   3a2e4:	vmul.i32	q9, q9, q12
   3a2e8:	vmul.i32	q8, q11, q8
   3a2ec:	vorr	q11, q12, q12
   3a2f0:	bne	3a2d0 <GetDataSlab+0xa350>
   3a2f4:	vext.8	q11, q9, q8, #8
   3a2f8:	vext.8	q12, q8, q8, #8
   3a2fc:	cmp	r9, r7
   3a300:	vmul.i32	q0, q9, q11
   3a304:	vmul.i32	q1, q8, q12
   3a308:	vmul.i32	q8, q0, d0[1]
   3a30c:	vmul.i32	q9, q1, d2[1]
   3a310:	vmov.32	r2, d16[0]
   3a314:	vmov.32	r3, d18[0]
   3a318:	beq	3a21c <GetDataSlab+0xa29c>
   3a31c:	vmov.32	r7, d20[0]
   3a320:	mul	r3, r7, r3
   3a324:	ldr	r7, [r0, r6, lsl #2]
   3a328:	subs	r6, r6, #1
   3a32c:	mul	r2, r2, r7
   3a330:	bne	3a320 <GetDataSlab+0xa3a0>
   3a334:	b	3a21c <GetDataSlab+0xa29c>
   3a338:	ldr	r0, [sl]
   3a33c:	mov	r1, #0
   3a340:	sub	ip, fp, #176	; 0xb0
   3a344:	str	r0, [sp, #68]	; 0x44
   3a348:	sub	r0, r0, #1
   3a34c:	str	r0, [fp, #-96]	; 0xffffffa0
   3a350:	ldr	r0, [r6]
   3a354:	sub	r6, fp, #96	; 0x60
   3a358:	str	r0, [sp, #56]	; 0x38
   3a35c:	str	r0, [fp, #-176]	; 0xffffff50
   3a360:	ldr	r0, [fp, #20]
   3a364:	ldr	r2, [r0]
   3a368:	ldr	r0, [fp, #24]
   3a36c:	cmp	r0, #2
   3a370:	str	r2, [sp, #72]	; 0x48
   3a374:	str	r2, [sp, #76]	; 0x4c
   3a378:	blt	45b74 <GetDataSlab+0x15bf4>
   3a37c:	ldr	r0, [fp, #8]
   3a380:	ldr	r3, [sp, #56]	; 0x38
   3a384:	ldr	r2, [sp, #72]	; 0x48
   3a388:	mov	r5, #1
   3a38c:	mov	r8, #0
   3a390:	mvn	r4, #15
   3a394:	mov	r1, r0
   3a398:	sub	r0, r0, #4
   3a39c:	mov	r9, r3
   3a3a0:	str	r2, [sp, #76]	; 0x4c
   3a3a4:	sub	sl, r1, #12
   3a3a8:	mov	r1, #0
   3a3ac:	b	3a3fc <GetDataSlab+0xa47c>
   3a3b0:	sub	ip, fp, #176	; 0xb0
   3a3b4:	sub	r6, fp, #96	; 0x60
   3a3b8:	str	r3, [ip, r5, lsl #2]
   3a3bc:	ldr	r7, [sp, #76]	; 0x4c
   3a3c0:	add	sl, sl, #4
   3a3c4:	str	r2, [r6, r5, lsl #2]
   3a3c8:	ldr	r2, [fp, #12]
   3a3cc:	ldr	r2, [r2, r5, lsl #2]
   3a3d0:	mla	r1, r2, r9, r1
   3a3d4:	ldr	r2, [fp, #20]
   3a3d8:	mov	r9, r3
   3a3dc:	mov	r3, lr
   3a3e0:	ldr	r2, [r2, r5, lsl #2]
   3a3e4:	add	r5, r5, #1
   3a3e8:	mul	r7, r2, r7
   3a3ec:	ldr	r2, [fp, #24]
   3a3f0:	str	r7, [sp, #76]	; 0x4c
   3a3f4:	cmp	r5, r2
   3a3f8:	beq	45b74 <GetDataSlab+0x15bf4>
   3a3fc:	ldr	r2, [fp, #16]
   3a400:	ldr	r7, [fp, #8]
   3a404:	add	r8, r8, #1
   3a408:	cmp	r8, #4
   3a40c:	ldr	r2, [r2, r5, lsl #2]
   3a410:	str	r3, [ip, r5, lsl #2]
   3a414:	sub	r2, r2, #1
   3a418:	str	r2, [r6, r5, lsl #2]
   3a41c:	ldr	lr, [r7, r5, lsl #2]
   3a420:	bcs	3a430 <GetDataSlab+0xa4b0>
   3a424:	mov	r7, lr
   3a428:	mov	r6, r5
   3a42c:	b	3a4b8 <GetDataSlab+0xa538>
   3a430:	vmov.i32	q9, #1	; 0x00000001
   3a434:	vmov.i32	q10, #1	; 0x00000001
   3a438:	vmov.32	d23[1], lr
   3a43c:	vmov.i32	q8, #1	; 0x00000001
   3a440:	bic	r7, r8, #3
   3a444:	bic	ip, r5, #3
   3a448:	sub	r6, r5, r7
   3a44c:	vmov.32	d18[0], r3
   3a450:	vmov.32	d20[0], r2
   3a454:	mov	r2, sl
   3a458:	vorr	d16, d18, d18
   3a45c:	vmov.i32	q9, #1	; 0x00000001
   3a460:	vorr	d18, d20, d20
   3a464:	vld1.32	{d20-d21}, [r2], r4
   3a468:	subs	ip, ip, #4
   3a46c:	vrev64.32	q12, q10
   3a470:	vext.8	q12, q12, q12, #8
   3a474:	vext.8	q11, q11, q12, #12
   3a478:	vmul.i32	q9, q9, q12
   3a47c:	vmul.i32	q8, q11, q8
   3a480:	vorr	q11, q12, q12
   3a484:	bne	3a464 <GetDataSlab+0xa4e4>
   3a488:	vext.8	q11, q9, q8, #8
   3a48c:	vext.8	q12, q8, q8, #8
   3a490:	cmp	r8, r7
   3a494:	vmul.i32	q0, q9, q11
   3a498:	vmul.i32	q1, q8, q12
   3a49c:	vmul.i32	q8, q0, d0[1]
   3a4a0:	vmul.i32	q9, q1, d2[1]
   3a4a4:	vmov.32	r2, d16[0]
   3a4a8:	vmov.32	r3, d18[0]
   3a4ac:	beq	3a3b0 <GetDataSlab+0xa430>
   3a4b0:	vmov.32	r7, d20[0]
   3a4b4:	sub	ip, fp, #176	; 0xb0
   3a4b8:	mul	r3, r7, r3
   3a4bc:	ldr	r7, [r0, r6, lsl #2]
   3a4c0:	subs	r6, r6, #1
   3a4c4:	mul	r2, r2, r7
   3a4c8:	bne	3a4b8 <GetDataSlab+0xa538>
   3a4cc:	b	3a3b4 <GetDataSlab+0xa434>
   3a4d0:	ldr	r0, [sl]
   3a4d4:	sub	r2, fp, #176	; 0xb0
   3a4d8:	mov	r3, #0
   3a4dc:	mov	lr, r2
   3a4e0:	sub	r2, fp, #96	; 0x60
   3a4e4:	str	r0, [sp, #56]	; 0x38
   3a4e8:	sub	r0, r0, #1
   3a4ec:	str	r0, [fp, #-96]	; 0xffffffa0
   3a4f0:	ldr	r0, [r6]
   3a4f4:	str	r0, [sp, #52]	; 0x34
   3a4f8:	str	r0, [fp, #-176]	; 0xffffff50
   3a4fc:	ldr	r0, [fp, #20]
   3a500:	ldr	r1, [r0]
   3a504:	ldr	r0, [fp, #24]
   3a508:	cmp	r0, #2
   3a50c:	str	r1, [sp, #72]	; 0x48
   3a510:	str	r1, [sp, #76]	; 0x4c
   3a514:	blt	45e34 <GetDataSlab+0x15eb4>
   3a518:	ldr	r5, [sp, #52]	; 0x34
   3a51c:	ldr	r1, [sp, #72]	; 0x48
   3a520:	sub	r0, r6, #4
   3a524:	sub	sl, r6, #12
   3a528:	mov	r7, #1
   3a52c:	mov	r8, #0
   3a530:	mvn	ip, #15
   3a534:	mov	r3, #0
   3a538:	mov	r9, r5
   3a53c:	str	r1, [sp, #76]	; 0x4c
   3a540:	b	3a598 <GetDataSlab+0xa618>
   3a544:	ldr	r1, [fp, #12]
   3a548:	sub	r2, fp, #176	; 0xb0
   3a54c:	add	sl, sl, #4
   3a550:	mov	lr, r2
   3a554:	str	r5, [r2, r7, lsl #2]
   3a558:	sub	r2, fp, #96	; 0x60
   3a55c:	str	r4, [r2, r7, lsl #2]
   3a560:	ldr	r4, [sp, #76]	; 0x4c
   3a564:	ldr	r1, [r1, r7, lsl #2]
   3a568:	mla	r3, r1, r9, r3
   3a56c:	ldr	r1, [fp, #20]
   3a570:	mov	r9, r5
   3a574:	mov	r5, r6
   3a578:	ldr	r6, [fp, #8]
   3a57c:	ldr	r1, [r1, r7, lsl #2]
   3a580:	add	r7, r7, #1
   3a584:	mul	r4, r1, r4
   3a588:	ldr	r1, [fp, #24]
   3a58c:	str	r4, [sp, #76]	; 0x4c
   3a590:	cmp	r7, r1
   3a594:	beq	45e34 <GetDataSlab+0x15eb4>
   3a598:	ldr	r1, [fp, #16]
   3a59c:	add	r8, r8, #1
   3a5a0:	cmp	r8, #4
   3a5a4:	ldr	r1, [r1, r7, lsl #2]
   3a5a8:	str	r5, [lr, r7, lsl #2]
   3a5ac:	sub	r4, r1, #1
   3a5b0:	str	r4, [r2, r7, lsl #2]
   3a5b4:	ldr	r6, [r6, r7, lsl #2]
   3a5b8:	bcs	3a5c8 <GetDataSlab+0xa648>
   3a5bc:	mov	r1, r6
   3a5c0:	mov	r2, r7
   3a5c4:	b	3a64c <GetDataSlab+0xa6cc>
   3a5c8:	vmov.i32	q9, #1	; 0x00000001
   3a5cc:	vmov.i32	q10, #1	; 0x00000001
   3a5d0:	vmov.32	d23[1], r6
   3a5d4:	vmov.i32	q8, #1	; 0x00000001
   3a5d8:	bic	r1, r8, #3
   3a5dc:	bic	lr, r7, #3
   3a5e0:	sub	r2, r7, r1
   3a5e4:	vmov.32	d18[0], r5
   3a5e8:	vmov.32	d20[0], r4
   3a5ec:	mov	r4, sl
   3a5f0:	vorr	d16, d18, d18
   3a5f4:	vmov.i32	q9, #1	; 0x00000001
   3a5f8:	vorr	d18, d20, d20
   3a5fc:	vld1.32	{d20-d21}, [r4], ip
   3a600:	subs	lr, lr, #4
   3a604:	vrev64.32	q12, q10
   3a608:	vext.8	q12, q12, q12, #8
   3a60c:	vext.8	q11, q11, q12, #12
   3a610:	vmul.i32	q9, q9, q12
   3a614:	vmul.i32	q8, q11, q8
   3a618:	vorr	q11, q12, q12
   3a61c:	bne	3a5fc <GetDataSlab+0xa67c>
   3a620:	vext.8	q11, q9, q8, #8
   3a624:	vext.8	q12, q8, q8, #8
   3a628:	cmp	r8, r1
   3a62c:	vmul.i32	q0, q9, q11
   3a630:	vmul.i32	q1, q8, q12
   3a634:	vmul.i32	q8, q0, d0[1]
   3a638:	vmul.i32	q9, q1, d2[1]
   3a63c:	vmov.32	r4, d16[0]
   3a640:	vmov.32	r5, d18[0]
   3a644:	beq	3a544 <GetDataSlab+0xa5c4>
   3a648:	vmov.32	r1, d20[0]
   3a64c:	mul	r5, r1, r5
   3a650:	ldr	r1, [r0, r2, lsl #2]
   3a654:	subs	r2, r2, #1
   3a658:	mul	r4, r4, r1
   3a65c:	bne	3a64c <GetDataSlab+0xa6cc>
   3a660:	b	3a544 <GetDataSlab+0xa5c4>
   3a664:	ldr	r1, [sl]
   3a668:	mov	r3, #0
   3a66c:	sub	r2, fp, #176	; 0xb0
   3a670:	sub	lr, fp, #96	; 0x60
   3a674:	mov	r0, r1
   3a678:	sub	r0, r1, #1
   3a67c:	str	r1, [sp, #48]	; 0x30
   3a680:	str	r0, [fp, #-96]	; 0xffffffa0
   3a684:	ldr	r0, [r6]
   3a688:	str	r0, [sp, #52]	; 0x34
   3a68c:	str	r0, [fp, #-176]	; 0xffffff50
   3a690:	ldr	r0, [fp, #20]
   3a694:	ldr	r1, [r0]
   3a698:	ldr	r0, [fp, #24]
   3a69c:	cmp	r0, #2
   3a6a0:	str	r1, [sp, #68]	; 0x44
   3a6a4:	str	r1, [sp, #72]	; 0x48
   3a6a8:	blt	460fc <GetDataSlab+0x1617c>
   3a6ac:	ldr	r5, [sp, #52]	; 0x34
   3a6b0:	ldr	r1, [sp, #68]	; 0x44
   3a6b4:	sub	r0, r6, #4
   3a6b8:	sub	sl, r6, #12
   3a6bc:	mov	r7, #1
   3a6c0:	mov	r9, #0
   3a6c4:	mvn	ip, #15
   3a6c8:	mov	r3, #0
   3a6cc:	mov	r8, r5
   3a6d0:	str	r1, [sp, #72]	; 0x48
   3a6d4:	b	3a728 <GetDataSlab+0xa7a8>
   3a6d8:	ldr	r1, [fp, #12]
   3a6dc:	sub	r2, fp, #176	; 0xb0
   3a6e0:	sub	lr, fp, #96	; 0x60
   3a6e4:	add	sl, sl, #4
   3a6e8:	str	r4, [lr, r7, lsl #2]
   3a6ec:	str	r5, [r2, r7, lsl #2]
   3a6f0:	ldr	r4, [sp, #72]	; 0x48
   3a6f4:	ldr	r1, [r1, r7, lsl #2]
   3a6f8:	mla	r3, r1, r8, r3
   3a6fc:	ldr	r1, [fp, #20]
   3a700:	mov	r8, r5
   3a704:	mov	r5, r6
   3a708:	ldr	r6, [fp, #8]
   3a70c:	ldr	r1, [r1, r7, lsl #2]
   3a710:	add	r7, r7, #1
   3a714:	mul	r4, r1, r4
   3a718:	ldr	r1, [fp, #24]
   3a71c:	str	r4, [sp, #72]	; 0x48
   3a720:	cmp	r7, r1
   3a724:	beq	460fc <GetDataSlab+0x1617c>
   3a728:	ldr	r1, [fp, #16]
   3a72c:	add	r9, r9, #1
   3a730:	cmp	r9, #4
   3a734:	ldr	r1, [r1, r7, lsl #2]
   3a738:	str	r5, [r2, r7, lsl #2]
   3a73c:	sub	r4, r1, #1
   3a740:	str	r4, [lr, r7, lsl #2]
   3a744:	ldr	r6, [r6, r7, lsl #2]
   3a748:	bcs	3a758 <GetDataSlab+0xa7d8>
   3a74c:	mov	r1, r6
   3a750:	mov	r2, r7
   3a754:	b	3a7e4 <GetDataSlab+0xa864>
   3a758:	vmov.i32	q9, #1	; 0x00000001
   3a75c:	vmov.i32	q10, #1	; 0x00000001
   3a760:	vmov.32	d23[1], r6
   3a764:	vmov.i32	q8, #1	; 0x00000001
   3a768:	mov	lr, r9
   3a76c:	bic	r9, r9, #3
   3a770:	bic	r1, r7, #3
   3a774:	sub	r2, r7, r9
   3a778:	vmov.32	d18[0], r5
   3a77c:	vmov.32	d20[0], r4
   3a780:	mov	r4, sl
   3a784:	vorr	d16, d18, d18
   3a788:	vmov.i32	q9, #1	; 0x00000001
   3a78c:	vorr	d18, d20, d20
   3a790:	vld1.32	{d20-d21}, [r4], ip
   3a794:	subs	r1, r1, #4
   3a798:	vrev64.32	q12, q10
   3a79c:	vext.8	q12, q12, q12, #8
   3a7a0:	vext.8	q11, q11, q12, #12
   3a7a4:	vmul.i32	q9, q9, q12
   3a7a8:	vmul.i32	q8, q11, q8
   3a7ac:	vorr	q11, q12, q12
   3a7b0:	bne	3a790 <GetDataSlab+0xa810>
   3a7b4:	vext.8	q11, q9, q8, #8
   3a7b8:	vext.8	q12, q8, q8, #8
   3a7bc:	cmp	lr, r9
   3a7c0:	mov	r9, lr
   3a7c4:	vmul.i32	q0, q9, q11
   3a7c8:	vmul.i32	q1, q8, q12
   3a7cc:	vmul.i32	q8, q0, d0[1]
   3a7d0:	vmul.i32	q9, q1, d2[1]
   3a7d4:	vmov.32	r4, d16[0]
   3a7d8:	vmov.32	r5, d18[0]
   3a7dc:	beq	3a6d8 <GetDataSlab+0xa758>
   3a7e0:	vmov.32	r1, d20[0]
   3a7e4:	mul	r5, r1, r5
   3a7e8:	ldr	r1, [r0, r2, lsl #2]
   3a7ec:	subs	r2, r2, #1
   3a7f0:	mul	r4, r4, r1
   3a7f4:	bne	3a7e4 <GetDataSlab+0xa864>
   3a7f8:	b	3a6d8 <GetDataSlab+0xa758>
   3a7fc:	ldr	r1, [sl]
   3a800:	mov	r8, #0
   3a804:	sub	r2, fp, #176	; 0xb0
   3a808:	sub	lr, fp, #96	; 0x60
   3a80c:	mov	r0, r1
   3a810:	sub	r0, r1, #1
   3a814:	str	r1, [sp, #36]	; 0x24
   3a818:	str	r0, [fp, #-96]	; 0xffffffa0
   3a81c:	ldr	r0, [r6]
   3a820:	str	r0, [sp, #72]	; 0x48
   3a824:	str	r0, [fp, #-176]	; 0xffffff50
   3a828:	ldr	r0, [fp, #20]
   3a82c:	ldr	r1, [r0]
   3a830:	ldr	r0, [fp, #24]
   3a834:	cmp	r0, #2
   3a838:	str	r1, [sp, #68]	; 0x44
   3a83c:	str	r1, [sp, #76]	; 0x4c
   3a840:	blt	463bc <GetDataSlab+0x1643c>
   3a844:	ldr	r4, [sp, #72]	; 0x48
   3a848:	ldr	r1, [sp, #68]	; 0x44
   3a84c:	sub	r0, r6, #4
   3a850:	sub	sl, r6, #12
   3a854:	mov	r3, #1
   3a858:	mov	r7, #0
   3a85c:	mvn	ip, #15
   3a860:	mov	r8, #0
   3a864:	mov	r9, r4
   3a868:	str	r1, [sp, #76]	; 0x4c
   3a86c:	b	3a8c0 <GetDataSlab+0xa940>
   3a870:	ldr	r1, [fp, #12]
   3a874:	sub	r2, fp, #176	; 0xb0
   3a878:	sub	lr, fp, #96	; 0x60
   3a87c:	add	sl, sl, #4
   3a880:	str	r5, [lr, r3, lsl #2]
   3a884:	str	r4, [r2, r3, lsl #2]
   3a888:	ldr	r5, [sp, #76]	; 0x4c
   3a88c:	ldr	r1, [r1, r3, lsl #2]
   3a890:	mla	r8, r1, r9, r8
   3a894:	ldr	r1, [fp, #20]
   3a898:	mov	r9, r4
   3a89c:	mov	r4, r6
   3a8a0:	ldr	r6, [fp, #8]
   3a8a4:	ldr	r1, [r1, r3, lsl #2]
   3a8a8:	add	r3, r3, #1
   3a8ac:	mul	r5, r1, r5
   3a8b0:	ldr	r1, [fp, #24]
   3a8b4:	str	r5, [sp, #76]	; 0x4c
   3a8b8:	cmp	r3, r1
   3a8bc:	beq	463bc <GetDataSlab+0x1643c>
   3a8c0:	ldr	r1, [fp, #16]
   3a8c4:	add	r7, r7, #1
   3a8c8:	cmp	r7, #4
   3a8cc:	ldr	r1, [r1, r3, lsl #2]
   3a8d0:	str	r4, [r2, r3, lsl #2]
   3a8d4:	sub	r5, r1, #1
   3a8d8:	str	r5, [lr, r3, lsl #2]
   3a8dc:	ldr	r6, [r6, r3, lsl #2]
   3a8e0:	bcs	3a8f0 <GetDataSlab+0xa970>
   3a8e4:	mov	r1, r6
   3a8e8:	mov	r2, r3
   3a8ec:	b	3a97c <GetDataSlab+0xa9fc>
   3a8f0:	vmov.i32	q9, #1	; 0x00000001
   3a8f4:	vmov.i32	q10, #1	; 0x00000001
   3a8f8:	vmov.32	d23[1], r6
   3a8fc:	vmov.i32	q8, #1	; 0x00000001
   3a900:	mov	lr, r7
   3a904:	bic	r7, r7, #3
   3a908:	bic	r1, r3, #3
   3a90c:	sub	r2, r3, r7
   3a910:	vmov.32	d18[0], r4
   3a914:	vmov.32	d20[0], r5
   3a918:	mov	r4, sl
   3a91c:	vorr	d16, d18, d18
   3a920:	vmov.i32	q9, #1	; 0x00000001
   3a924:	vorr	d18, d20, d20
   3a928:	vld1.32	{d20-d21}, [r4], ip
   3a92c:	subs	r1, r1, #4
   3a930:	vrev64.32	q12, q10
   3a934:	vext.8	q12, q12, q12, #8
   3a938:	vext.8	q11, q11, q12, #12
   3a93c:	vmul.i32	q9, q9, q12
   3a940:	vmul.i32	q8, q11, q8
   3a944:	vorr	q11, q12, q12
   3a948:	bne	3a928 <GetDataSlab+0xa9a8>
   3a94c:	vext.8	q11, q9, q8, #8
   3a950:	vext.8	q12, q8, q8, #8
   3a954:	cmp	lr, r7
   3a958:	mov	r7, lr
   3a95c:	vmul.i32	q0, q9, q11
   3a960:	vmul.i32	q1, q8, q12
   3a964:	vmul.i32	q8, q0, d0[1]
   3a968:	vmul.i32	q9, q1, d2[1]
   3a96c:	vmov.32	r5, d16[0]
   3a970:	vmov.32	r4, d18[0]
   3a974:	beq	3a870 <GetDataSlab+0xa8f0>
   3a978:	vmov.32	r1, d20[0]
   3a97c:	mul	r4, r1, r4
   3a980:	ldr	r1, [r0, r2, lsl #2]
   3a984:	subs	r2, r2, #1
   3a988:	mul	r5, r5, r1
   3a98c:	bne	3a97c <GetDataSlab+0xa9fc>
   3a990:	b	3a870 <GetDataSlab+0xa8f0>
   3a994:	ldr	r0, [sl]
   3a998:	mov	r8, #0
   3a99c:	sub	r2, fp, #176	; 0xb0
   3a9a0:	sub	lr, fp, #96	; 0x60
   3a9a4:	str	r0, [sp, #36]	; 0x24
   3a9a8:	sub	r0, r0, #1
   3a9ac:	str	r0, [fp, #-96]	; 0xffffffa0
   3a9b0:	ldr	r0, [r6]
   3a9b4:	str	r0, [sp, #68]	; 0x44
   3a9b8:	str	r0, [fp, #-176]	; 0xffffff50
   3a9bc:	ldr	r0, [fp, #20]
   3a9c0:	ldr	r1, [r0]
   3a9c4:	ldr	r0, [fp, #24]
   3a9c8:	cmp	r0, #2
   3a9cc:	str	r1, [sp, #72]	; 0x48
   3a9d0:	str	r1, [sp, #76]	; 0x4c
   3a9d4:	blt	465d4 <GetDataSlab+0x16654>
   3a9d8:	ldr	r4, [sp, #68]	; 0x44
   3a9dc:	ldr	r1, [sp, #72]	; 0x48
   3a9e0:	sub	r0, r6, #4
   3a9e4:	sub	sl, r6, #12
   3a9e8:	mov	r3, #1
   3a9ec:	mov	r7, #0
   3a9f0:	mvn	ip, #15
   3a9f4:	mov	r8, #0
   3a9f8:	mov	r9, r4
   3a9fc:	str	r1, [sp, #76]	; 0x4c
   3aa00:	b	3aa54 <GetDataSlab+0xaad4>
   3aa04:	ldr	r1, [fp, #12]
   3aa08:	sub	r2, fp, #176	; 0xb0
   3aa0c:	sub	lr, fp, #96	; 0x60
   3aa10:	add	sl, sl, #4
   3aa14:	str	r5, [lr, r3, lsl #2]
   3aa18:	str	r4, [r2, r3, lsl #2]
   3aa1c:	ldr	r5, [sp, #76]	; 0x4c
   3aa20:	ldr	r1, [r1, r3, lsl #2]
   3aa24:	mla	r8, r1, r9, r8
   3aa28:	ldr	r1, [fp, #20]
   3aa2c:	mov	r9, r4
   3aa30:	mov	r4, r6
   3aa34:	ldr	r6, [fp, #8]
   3aa38:	ldr	r1, [r1, r3, lsl #2]
   3aa3c:	add	r3, r3, #1
   3aa40:	mul	r5, r1, r5
   3aa44:	ldr	r1, [fp, #24]
   3aa48:	str	r5, [sp, #76]	; 0x4c
   3aa4c:	cmp	r3, r1
   3aa50:	beq	465d4 <GetDataSlab+0x16654>
   3aa54:	ldr	r1, [fp, #16]
   3aa58:	add	r7, r7, #1
   3aa5c:	cmp	r7, #4
   3aa60:	ldr	r1, [r1, r3, lsl #2]
   3aa64:	str	r4, [r2, r3, lsl #2]
   3aa68:	sub	r5, r1, #1
   3aa6c:	str	r5, [lr, r3, lsl #2]
   3aa70:	ldr	r6, [r6, r3, lsl #2]
   3aa74:	bcs	3aa84 <GetDataSlab+0xab04>
   3aa78:	mov	r1, r6
   3aa7c:	mov	r2, r3
   3aa80:	b	3ab10 <GetDataSlab+0xab90>
   3aa84:	vmov.i32	q9, #1	; 0x00000001
   3aa88:	vmov.i32	q10, #1	; 0x00000001
   3aa8c:	vmov.32	d23[1], r6
   3aa90:	vmov.i32	q8, #1	; 0x00000001
   3aa94:	mov	lr, r7
   3aa98:	bic	r7, r7, #3
   3aa9c:	bic	r1, r3, #3
   3aaa0:	sub	r2, r3, r7
   3aaa4:	vmov.32	d18[0], r4
   3aaa8:	vmov.32	d20[0], r5
   3aaac:	mov	r4, sl
   3aab0:	vorr	d16, d18, d18
   3aab4:	vmov.i32	q9, #1	; 0x00000001
   3aab8:	vorr	d18, d20, d20
   3aabc:	vld1.32	{d20-d21}, [r4], ip
   3aac0:	subs	r1, r1, #4
   3aac4:	vrev64.32	q12, q10
   3aac8:	vext.8	q12, q12, q12, #8
   3aacc:	vext.8	q11, q11, q12, #12
   3aad0:	vmul.i32	q9, q9, q12
   3aad4:	vmul.i32	q8, q11, q8
   3aad8:	vorr	q11, q12, q12
   3aadc:	bne	3aabc <GetDataSlab+0xab3c>
   3aae0:	vext.8	q11, q9, q8, #8
   3aae4:	vext.8	q12, q8, q8, #8
   3aae8:	cmp	lr, r7
   3aaec:	mov	r7, lr
   3aaf0:	vmul.i32	q0, q9, q11
   3aaf4:	vmul.i32	q1, q8, q12
   3aaf8:	vmul.i32	q8, q0, d0[1]
   3aafc:	vmul.i32	q9, q1, d2[1]
   3ab00:	vmov.32	r5, d16[0]
   3ab04:	vmov.32	r4, d18[0]
   3ab08:	beq	3aa04 <GetDataSlab+0xaa84>
   3ab0c:	vmov.32	r1, d20[0]
   3ab10:	mul	r4, r1, r4
   3ab14:	ldr	r1, [r0, r2, lsl #2]
   3ab18:	subs	r2, r2, #1
   3ab1c:	mul	r5, r5, r1
   3ab20:	bne	3ab10 <GetDataSlab+0xab90>
   3ab24:	b	3aa04 <GetDataSlab+0xaa84>
   3ab28:	ldr	r0, [sl]
   3ab2c:	mov	ip, #0
   3ab30:	sub	r7, fp, #176	; 0xb0
   3ab34:	sub	lr, fp, #96	; 0x60
   3ab38:	str	r0, [sp, #32]
   3ab3c:	sub	r0, r0, #1
   3ab40:	str	r0, [fp, #-96]	; 0xffffffa0
   3ab44:	ldr	r0, [r6]
   3ab48:	str	r0, [sp, #24]
   3ab4c:	str	r0, [fp, #-176]	; 0xffffff50
   3ab50:	ldr	r0, [fp, #20]
   3ab54:	ldr	r1, [r0]
   3ab58:	ldr	r0, [fp, #24]
   3ab5c:	cmp	r0, #2
   3ab60:	str	r1, [sp, #44]	; 0x2c
   3ab64:	str	r1, [sp, #68]	; 0x44
   3ab68:	blt	46804 <GetDataSlab+0x16884>
   3ab6c:	ldr	r0, [fp, #8]
   3ab70:	ldr	r2, [sp, #24]
   3ab74:	mov	r6, #1
   3ab78:	mov	r9, #0
   3ab7c:	mvn	r5, #15
   3ab80:	mov	ip, #0
   3ab84:	mov	r1, r0
   3ab88:	sub	r0, r0, #4
   3ab8c:	mov	r8, r2
   3ab90:	sub	sl, r1, #12
   3ab94:	ldr	r1, [sp, #44]	; 0x2c
   3ab98:	str	r1, [sp, #68]	; 0x44
   3ab9c:	b	3abec <GetDataSlab+0xac6c>
   3aba0:	ldr	r3, [fp, #12]
   3aba4:	sub	r7, fp, #176	; 0xb0
   3aba8:	sub	lr, fp, #96	; 0x60
   3abac:	add	sl, sl, #4
   3abb0:	str	r4, [lr, r6, lsl #2]
   3abb4:	str	r2, [r7, r6, lsl #2]
   3abb8:	ldr	r4, [sp, #68]	; 0x44
   3abbc:	ldr	r3, [r3, r6, lsl #2]
   3abc0:	mla	ip, r3, r8, ip
   3abc4:	ldr	r3, [fp, #20]
   3abc8:	mov	r8, r2
   3abcc:	mov	r2, r1
   3abd0:	ldr	r3, [r3, r6, lsl #2]
   3abd4:	add	r6, r6, #1
   3abd8:	mul	r4, r3, r4
   3abdc:	ldr	r3, [fp, #24]
   3abe0:	str	r4, [sp, #68]	; 0x44
   3abe4:	cmp	r6, r3
   3abe8:	beq	46804 <GetDataSlab+0x16884>
   3abec:	ldr	r1, [fp, #16]
   3abf0:	add	r9, r9, #1
   3abf4:	cmp	r9, #4
   3abf8:	ldr	r3, [r1, r6, lsl #2]
   3abfc:	ldr	r1, [fp, #8]
   3ac00:	str	r2, [r7, r6, lsl #2]
   3ac04:	sub	r4, r3, #1
   3ac08:	str	r4, [lr, r6, lsl #2]
   3ac0c:	ldr	r1, [r1, r6, lsl #2]
   3ac10:	bcs	3ac20 <GetDataSlab+0xaca0>
   3ac14:	mov	r3, r1
   3ac18:	mov	r7, r6
   3ac1c:	b	3acac <GetDataSlab+0xad2c>
   3ac20:	vmov.i32	q9, #1	; 0x00000001
   3ac24:	vmov.i32	q10, #1	; 0x00000001
   3ac28:	vmov.32	d23[1], r1
   3ac2c:	vmov.i32	q8, #1	; 0x00000001
   3ac30:	mov	lr, r9
   3ac34:	bic	r9, r9, #3
   3ac38:	bic	r3, r6, #3
   3ac3c:	sub	r7, r6, r9
   3ac40:	vmov.32	d18[0], r2
   3ac44:	vmov.32	d20[0], r4
   3ac48:	mov	r2, sl
   3ac4c:	vorr	d16, d18, d18
   3ac50:	vmov.i32	q9, #1	; 0x00000001
   3ac54:	vorr	d18, d20, d20
   3ac58:	vld1.32	{d20-d21}, [r2], r5
   3ac5c:	subs	r3, r3, #4
   3ac60:	vrev64.32	q12, q10
   3ac64:	vext.8	q12, q12, q12, #8
   3ac68:	vext.8	q11, q11, q12, #12
   3ac6c:	vmul.i32	q9, q9, q12
   3ac70:	vmul.i32	q8, q11, q8
   3ac74:	vorr	q11, q12, q12
   3ac78:	bne	3ac58 <GetDataSlab+0xacd8>
   3ac7c:	vext.8	q11, q9, q8, #8
   3ac80:	vext.8	q12, q8, q8, #8
   3ac84:	cmp	lr, r9
   3ac88:	mov	r9, lr
   3ac8c:	vmul.i32	q0, q9, q11
   3ac90:	vmul.i32	q1, q8, q12
   3ac94:	vmul.i32	q8, q0, d0[1]
   3ac98:	vmul.i32	q9, q1, d2[1]
   3ac9c:	vmov.32	r4, d16[0]
   3aca0:	vmov.32	r2, d18[0]
   3aca4:	beq	3aba0 <GetDataSlab+0xac20>
   3aca8:	vmov.32	r3, d20[0]
   3acac:	mul	r2, r3, r2
   3acb0:	ldr	r3, [r0, r7, lsl #2]
   3acb4:	subs	r7, r7, #1
   3acb8:	mul	r4, r4, r3
   3acbc:	bne	3acac <GetDataSlab+0xad2c>
   3acc0:	b	3aba0 <GetDataSlab+0xac20>
   3acc4:	ldr	lr, [sl]
   3acc8:	mov	r7, #0
   3accc:	sub	r2, fp, #176	; 0xb0
   3acd0:	sub	r3, fp, #96	; 0x60
   3acd4:	sub	r0, lr, #1
   3acd8:	str	r0, [fp, #-96]	; 0xffffffa0
   3acdc:	ldr	r0, [r6]
   3ace0:	str	r0, [sp, #40]	; 0x28
   3ace4:	str	r0, [fp, #-176]	; 0xffffff50
   3ace8:	ldr	r0, [fp, #20]
   3acec:	ldr	r1, [r0]
   3acf0:	ldr	r0, [fp, #24]
   3acf4:	cmp	r0, #2
   3acf8:	str	r1, [sp, #68]	; 0x44
   3acfc:	str	r1, [sp, #72]	; 0x48
   3ad00:	blt	46b1c <GetDataSlab+0x16b9c>
   3ad04:	ldr	r0, [fp, #8]
   3ad08:	ldr	r4, [sp, #40]	; 0x28
   3ad0c:	mov	r6, #1
   3ad10:	mov	r5, #0
   3ad14:	mvn	r8, #15
   3ad18:	mov	r7, #0
   3ad1c:	sub	r1, r0, #4
   3ad20:	sub	ip, r0, #12
   3ad24:	mov	r0, r4
   3ad28:	ldr	r0, [sp, #68]	; 0x44
   3ad2c:	str	r4, [sp, #84]	; 0x54
   3ad30:	str	r0, [sp, #72]	; 0x48
   3ad34:	b	3ad94 <GetDataSlab+0xae14>
   3ad38:	ldr	sl, [fp, #16]
   3ad3c:	mov	r9, r5
   3ad40:	sub	r3, fp, #96	; 0x60
   3ad44:	sub	r2, fp, #176	; 0xb0
   3ad48:	ldr	r5, [sp, #84]	; 0x54
   3ad4c:	str	r4, [sp, #84]	; 0x54
   3ad50:	add	ip, ip, #4
   3ad54:	str	r0, [r3, r6, lsl #2]
   3ad58:	ldr	r0, [fp, #12]
   3ad5c:	str	r4, [r2, r6, lsl #2]
   3ad60:	ldr	r4, [sp, #76]	; 0x4c
   3ad64:	ldr	r0, [r0, r6, lsl #2]
   3ad68:	mla	r7, r0, r5, r7
   3ad6c:	ldr	r0, [fp, #20]
   3ad70:	ldr	r5, [sp, #72]	; 0x48
   3ad74:	ldr	r0, [r0, r6, lsl #2]
   3ad78:	add	r6, r6, #1
   3ad7c:	mul	r5, r0, r5
   3ad80:	ldr	r0, [fp, #24]
   3ad84:	str	r5, [sp, #72]	; 0x48
   3ad88:	mov	r5, r9
   3ad8c:	cmp	r6, r0
   3ad90:	beq	46b1c <GetDataSlab+0x16b9c>
   3ad94:	ldr	r0, [sl, r6, lsl #2]
   3ad98:	str	r4, [r2, r6, lsl #2]
   3ad9c:	ldr	r2, [fp, #8]
   3ada0:	add	r5, r5, #1
   3ada4:	cmp	r5, #4
   3ada8:	sub	r0, r0, #1
   3adac:	str	r0, [r3, r6, lsl #2]
   3adb0:	ldr	r2, [r2, r6, lsl #2]
   3adb4:	str	r2, [sp, #76]	; 0x4c
   3adb8:	bcs	3adc4 <GetDataSlab+0xae44>
   3adbc:	mov	r3, r6
   3adc0:	b	3ae4c <GetDataSlab+0xaecc>
   3adc4:	vmov.i32	q9, #1	; 0x00000001
   3adc8:	vmov.i32	q10, #1	; 0x00000001
   3adcc:	vmov.32	d23[1], r2
   3add0:	vmov.i32	q8, #1	; 0x00000001
   3add4:	bic	r9, r5, #3
   3add8:	bic	sl, r6, #3
   3addc:	sub	r3, r6, r9
   3ade0:	vmov.32	d18[0], r4
   3ade4:	vmov.32	d20[0], r0
   3ade8:	mov	r0, ip
   3adec:	vorr	d16, d18, d18
   3adf0:	vmov.i32	q9, #1	; 0x00000001
   3adf4:	vorr	d18, d20, d20
   3adf8:	vld1.32	{d20-d21}, [r0], r8
   3adfc:	subs	sl, sl, #4
   3ae00:	vrev64.32	q12, q10
   3ae04:	vext.8	q12, q12, q12, #8
   3ae08:	vext.8	q11, q11, q12, #12
   3ae0c:	vmul.i32	q9, q9, q12
   3ae10:	vmul.i32	q8, q11, q8
   3ae14:	vorr	q11, q12, q12
   3ae18:	bne	3adf8 <GetDataSlab+0xae78>
   3ae1c:	vext.8	q11, q9, q8, #8
   3ae20:	vext.8	q12, q8, q8, #8
   3ae24:	cmp	r5, r9
   3ae28:	vmul.i32	q0, q9, q11
   3ae2c:	vmul.i32	q1, q8, q12
   3ae30:	vmul.i32	q8, q0, d0[1]
   3ae34:	vmul.i32	q9, q1, d2[1]
   3ae38:	vmov.32	r0, d16[0]
   3ae3c:	vmov.32	r4, d18[0]
   3ae40:	beq	3ad38 <GetDataSlab+0xadb8>
   3ae44:	vmov.32	r2, d20[0]
   3ae48:	ldr	sl, [fp, #16]
   3ae4c:	mov	r9, r5
   3ae50:	mul	r4, r2, r4
   3ae54:	ldr	r2, [r1, r3, lsl #2]
   3ae58:	subs	r3, r3, #1
   3ae5c:	mul	r0, r0, r2
   3ae60:	bne	3ae50 <GetDataSlab+0xaed0>
   3ae64:	b	3ad40 <GetDataSlab+0xadc0>
   3ae68:	ldr	r0, [sl]
   3ae6c:	mov	r1, #0
   3ae70:	sub	r7, fp, #176	; 0xb0
   3ae74:	str	r0, [sp, #68]	; 0x44
   3ae78:	sub	r0, r0, #1
   3ae7c:	str	r0, [fp, #-96]	; 0xffffffa0
   3ae80:	ldr	r0, [r6]
   3ae84:	sub	r6, fp, #96	; 0x60
   3ae88:	str	r0, [sp, #60]	; 0x3c
   3ae8c:	str	r0, [fp, #-176]	; 0xffffff50
   3ae90:	ldr	r0, [fp, #20]
   3ae94:	ldr	r2, [r0]
   3ae98:	ldr	r0, [fp, #24]
   3ae9c:	cmp	r0, #2
   3aea0:	str	r2, [sp, #72]	; 0x48
   3aea4:	str	r2, [sp, #76]	; 0x4c
   3aea8:	blt	46e84 <GetDataSlab+0x16f04>
   3aeac:	ldr	r0, [fp, #8]
   3aeb0:	ldr	r3, [sp, #60]	; 0x3c
   3aeb4:	ldr	r2, [sp, #72]	; 0x48
   3aeb8:	mov	r5, #1
   3aebc:	mov	r9, #0
   3aec0:	mvn	r8, #15
   3aec4:	mov	r1, r0
   3aec8:	sub	r0, r0, #4
   3aecc:	mov	sl, r3
   3aed0:	str	r2, [sp, #76]	; 0x4c
   3aed4:	sub	ip, r1, #12
   3aed8:	mov	r1, #0
   3aedc:	b	3af2c <GetDataSlab+0xafac>
   3aee0:	sub	r6, fp, #96	; 0x60
   3aee4:	sub	r7, fp, #176	; 0xb0
   3aee8:	ldr	r4, [sp, #76]	; 0x4c
   3aeec:	add	ip, ip, #4
   3aef0:	str	r2, [r6, r5, lsl #2]
   3aef4:	ldr	r2, [fp, #12]
   3aef8:	str	r3, [r7, r5, lsl #2]
   3aefc:	ldr	r2, [r2, r5, lsl #2]
   3af00:	mla	r1, r2, sl, r1
   3af04:	ldr	r2, [fp, #20]
   3af08:	mov	sl, r3
   3af0c:	ldr	r3, [sp, #84]	; 0x54
   3af10:	ldr	r2, [r2, r5, lsl #2]
   3af14:	add	r5, r5, #1
   3af18:	mul	r4, r2, r4
   3af1c:	ldr	r2, [fp, #24]
   3af20:	str	r4, [sp, #76]	; 0x4c
   3af24:	cmp	r5, r2
   3af28:	beq	46e84 <GetDataSlab+0x16f04>
   3af2c:	ldr	r2, [fp, #16]
   3af30:	add	r9, r9, #1
   3af34:	cmp	r9, #4
   3af38:	ldr	r2, [r2, r5, lsl #2]
   3af3c:	str	r3, [r7, r5, lsl #2]
   3af40:	ldr	r7, [fp, #8]
   3af44:	sub	r2, r2, #1
   3af48:	str	r2, [r6, r5, lsl #2]
   3af4c:	ldr	r7, [r7, r5, lsl #2]
   3af50:	str	r7, [sp, #84]	; 0x54
   3af54:	bcs	3af60 <GetDataSlab+0xafe0>
   3af58:	mov	r6, r5
   3af5c:	b	3afe4 <GetDataSlab+0xb064>
   3af60:	vmov.i32	q9, #1	; 0x00000001
   3af64:	vmov.i32	q10, #1	; 0x00000001
   3af68:	vmov.32	d23[1], r7
   3af6c:	vmov.i32	q8, #1	; 0x00000001
   3af70:	bic	r7, r9, #3
   3af74:	bic	lr, r5, #3
   3af78:	sub	r6, r5, r7
   3af7c:	vmov.32	d18[0], r3
   3af80:	vmov.32	d20[0], r2
   3af84:	mov	r2, ip
   3af88:	vorr	d16, d18, d18
   3af8c:	vmov.i32	q9, #1	; 0x00000001
   3af90:	vorr	d18, d20, d20
   3af94:	vld1.32	{d20-d21}, [r2], r8
   3af98:	subs	lr, lr, #4
   3af9c:	vrev64.32	q12, q10
   3afa0:	vext.8	q12, q12, q12, #8
   3afa4:	vext.8	q11, q11, q12, #12
   3afa8:	vmul.i32	q9, q9, q12
   3afac:	vmul.i32	q8, q11, q8
   3afb0:	vorr	q11, q12, q12
   3afb4:	bne	3af94 <GetDataSlab+0xb014>
   3afb8:	vext.8	q11, q9, q8, #8
   3afbc:	vext.8	q12, q8, q8, #8
   3afc0:	cmp	r9, r7
   3afc4:	vmul.i32	q0, q9, q11
   3afc8:	vmul.i32	q1, q8, q12
   3afcc:	vmul.i32	q8, q0, d0[1]
   3afd0:	vmul.i32	q9, q1, d2[1]
   3afd4:	vmov.32	r2, d16[0]
   3afd8:	vmov.32	r3, d18[0]
   3afdc:	beq	3aee0 <GetDataSlab+0xaf60>
   3afe0:	vmov.32	r7, d20[0]
   3afe4:	mul	r3, r7, r3
   3afe8:	ldr	r7, [r0, r6, lsl #2]
   3afec:	subs	r6, r6, #1
   3aff0:	mul	r2, r2, r7
   3aff4:	bne	3afe4 <GetDataSlab+0xb064>
   3aff8:	b	3aee0 <GetDataSlab+0xaf60>
   3affc:	ldr	r0, [sl]
   3b000:	mov	r1, #0
   3b004:	sub	ip, fp, #176	; 0xb0
   3b008:	str	r0, [sp, #68]	; 0x44
   3b00c:	sub	r0, r0, #1
   3b010:	str	r0, [fp, #-96]	; 0xffffffa0
   3b014:	ldr	r0, [r6]
   3b018:	sub	r6, fp, #96	; 0x60
   3b01c:	str	r0, [sp, #56]	; 0x38
   3b020:	str	r0, [fp, #-176]	; 0xffffff50
   3b024:	ldr	r0, [fp, #20]
   3b028:	ldr	r2, [r0]
   3b02c:	ldr	r0, [fp, #24]
   3b030:	cmp	r0, #2
   3b034:	str	r2, [sp, #72]	; 0x48
   3b038:	str	r2, [sp, #76]	; 0x4c
   3b03c:	blt	4713c <GetDataSlab+0x171bc>
   3b040:	ldr	r0, [fp, #8]
   3b044:	ldr	r3, [sp, #56]	; 0x38
   3b048:	ldr	r2, [sp, #72]	; 0x48
   3b04c:	mov	r5, #1
   3b050:	mov	r8, #0
   3b054:	mvn	r4, #15
   3b058:	mov	r1, r0
   3b05c:	sub	r0, r0, #4
   3b060:	mov	r9, r3
   3b064:	str	r2, [sp, #76]	; 0x4c
   3b068:	sub	sl, r1, #12
   3b06c:	mov	r1, #0
   3b070:	b	3b0c0 <GetDataSlab+0xb140>
   3b074:	sub	ip, fp, #176	; 0xb0
   3b078:	sub	r6, fp, #96	; 0x60
   3b07c:	str	r3, [ip, r5, lsl #2]
   3b080:	ldr	r7, [sp, #76]	; 0x4c
   3b084:	add	sl, sl, #4
   3b088:	str	r2, [r6, r5, lsl #2]
   3b08c:	ldr	r2, [fp, #12]
   3b090:	ldr	r2, [r2, r5, lsl #2]
   3b094:	mla	r1, r2, r9, r1
   3b098:	ldr	r2, [fp, #20]
   3b09c:	mov	r9, r3
   3b0a0:	mov	r3, lr
   3b0a4:	ldr	r2, [r2, r5, lsl #2]
   3b0a8:	add	r5, r5, #1
   3b0ac:	mul	r7, r2, r7
   3b0b0:	ldr	r2, [fp, #24]
   3b0b4:	str	r7, [sp, #76]	; 0x4c
   3b0b8:	cmp	r5, r2
   3b0bc:	beq	4713c <GetDataSlab+0x171bc>
   3b0c0:	ldr	r2, [fp, #16]
   3b0c4:	ldr	r7, [fp, #8]
   3b0c8:	add	r8, r8, #1
   3b0cc:	cmp	r8, #4
   3b0d0:	ldr	r2, [r2, r5, lsl #2]
   3b0d4:	str	r3, [ip, r5, lsl #2]
   3b0d8:	sub	r2, r2, #1
   3b0dc:	str	r2, [r6, r5, lsl #2]
   3b0e0:	ldr	lr, [r7, r5, lsl #2]
   3b0e4:	bcs	3b0f4 <GetDataSlab+0xb174>
   3b0e8:	mov	r7, lr
   3b0ec:	mov	r6, r5
   3b0f0:	b	3b17c <GetDataSlab+0xb1fc>
   3b0f4:	vmov.i32	q9, #1	; 0x00000001
   3b0f8:	vmov.i32	q10, #1	; 0x00000001
   3b0fc:	vmov.32	d23[1], lr
   3b100:	vmov.i32	q8, #1	; 0x00000001
   3b104:	bic	r7, r8, #3
   3b108:	bic	ip, r5, #3
   3b10c:	sub	r6, r5, r7
   3b110:	vmov.32	d18[0], r3
   3b114:	vmov.32	d20[0], r2
   3b118:	mov	r2, sl
   3b11c:	vorr	d16, d18, d18
   3b120:	vmov.i32	q9, #1	; 0x00000001
   3b124:	vorr	d18, d20, d20
   3b128:	vld1.32	{d20-d21}, [r2], r4
   3b12c:	subs	ip, ip, #4
   3b130:	vrev64.32	q12, q10
   3b134:	vext.8	q12, q12, q12, #8
   3b138:	vext.8	q11, q11, q12, #12
   3b13c:	vmul.i32	q9, q9, q12
   3b140:	vmul.i32	q8, q11, q8
   3b144:	vorr	q11, q12, q12
   3b148:	bne	3b128 <GetDataSlab+0xb1a8>
   3b14c:	vext.8	q11, q9, q8, #8
   3b150:	vext.8	q12, q8, q8, #8
   3b154:	cmp	r8, r7
   3b158:	vmul.i32	q0, q9, q11
   3b15c:	vmul.i32	q1, q8, q12
   3b160:	vmul.i32	q8, q0, d0[1]
   3b164:	vmul.i32	q9, q1, d2[1]
   3b168:	vmov.32	r2, d16[0]
   3b16c:	vmov.32	r3, d18[0]
   3b170:	beq	3b074 <GetDataSlab+0xb0f4>
   3b174:	vmov.32	r7, d20[0]
   3b178:	sub	ip, fp, #176	; 0xb0
   3b17c:	mul	r3, r7, r3
   3b180:	ldr	r7, [r0, r6, lsl #2]
   3b184:	subs	r6, r6, #1
   3b188:	mul	r2, r2, r7
   3b18c:	bne	3b17c <GetDataSlab+0xb1fc>
   3b190:	b	3b078 <GetDataSlab+0xb0f8>
   3b194:	ldr	r0, [sl]
   3b198:	sub	r2, fp, #176	; 0xb0
   3b19c:	mov	r3, #0
   3b1a0:	mov	lr, r2
   3b1a4:	sub	r2, fp, #96	; 0x60
   3b1a8:	str	r0, [sp, #56]	; 0x38
   3b1ac:	sub	r0, r0, #1
   3b1b0:	str	r0, [fp, #-96]	; 0xffffffa0
   3b1b4:	ldr	r0, [r6]
   3b1b8:	str	r0, [sp, #52]	; 0x34
   3b1bc:	str	r0, [fp, #-176]	; 0xffffff50
   3b1c0:	ldr	r0, [fp, #20]
   3b1c4:	ldr	r1, [r0]
   3b1c8:	ldr	r0, [fp, #24]
   3b1cc:	cmp	r0, #2
   3b1d0:	str	r1, [sp, #72]	; 0x48
   3b1d4:	str	r1, [sp, #76]	; 0x4c
   3b1d8:	blt	473fc <GetDataSlab+0x1747c>
   3b1dc:	ldr	r5, [sp, #52]	; 0x34
   3b1e0:	ldr	r1, [sp, #72]	; 0x48
   3b1e4:	sub	r0, r6, #4
   3b1e8:	sub	sl, r6, #12
   3b1ec:	mov	r7, #1
   3b1f0:	mov	r8, #0
   3b1f4:	mvn	ip, #15
   3b1f8:	mov	r3, #0
   3b1fc:	mov	r9, r5
   3b200:	str	r1, [sp, #76]	; 0x4c
   3b204:	b	3b25c <GetDataSlab+0xb2dc>
   3b208:	ldr	r1, [fp, #12]
   3b20c:	sub	r2, fp, #176	; 0xb0
   3b210:	add	sl, sl, #4
   3b214:	mov	lr, r2
   3b218:	str	r5, [r2, r7, lsl #2]
   3b21c:	sub	r2, fp, #96	; 0x60
   3b220:	str	r4, [r2, r7, lsl #2]
   3b224:	ldr	r4, [sp, #76]	; 0x4c
   3b228:	ldr	r1, [r1, r7, lsl #2]
   3b22c:	mla	r3, r1, r9, r3
   3b230:	ldr	r1, [fp, #20]
   3b234:	mov	r9, r5
   3b238:	mov	r5, r6
   3b23c:	ldr	r6, [fp, #8]
   3b240:	ldr	r1, [r1, r7, lsl #2]
   3b244:	add	r7, r7, #1
   3b248:	mul	r4, r1, r4
   3b24c:	ldr	r1, [fp, #24]
   3b250:	str	r4, [sp, #76]	; 0x4c
   3b254:	cmp	r7, r1
   3b258:	beq	473fc <GetDataSlab+0x1747c>
   3b25c:	ldr	r1, [fp, #16]
   3b260:	add	r8, r8, #1
   3b264:	cmp	r8, #4
   3b268:	ldr	r1, [r1, r7, lsl #2]
   3b26c:	str	r5, [lr, r7, lsl #2]
   3b270:	sub	r4, r1, #1
   3b274:	str	r4, [r2, r7, lsl #2]
   3b278:	ldr	r6, [r6, r7, lsl #2]
   3b27c:	bcs	3b28c <GetDataSlab+0xb30c>
   3b280:	mov	r1, r6
   3b284:	mov	r2, r7
   3b288:	b	3b310 <GetDataSlab+0xb390>
   3b28c:	vmov.i32	q9, #1	; 0x00000001
   3b290:	vmov.i32	q10, #1	; 0x00000001
   3b294:	vmov.32	d23[1], r6
   3b298:	vmov.i32	q8, #1	; 0x00000001
   3b29c:	bic	r1, r8, #3
   3b2a0:	bic	lr, r7, #3
   3b2a4:	sub	r2, r7, r1
   3b2a8:	vmov.32	d18[0], r5
   3b2ac:	vmov.32	d20[0], r4
   3b2b0:	mov	r4, sl
   3b2b4:	vorr	d16, d18, d18
   3b2b8:	vmov.i32	q9, #1	; 0x00000001
   3b2bc:	vorr	d18, d20, d20
   3b2c0:	vld1.32	{d20-d21}, [r4], ip
   3b2c4:	subs	lr, lr, #4
   3b2c8:	vrev64.32	q12, q10
   3b2cc:	vext.8	q12, q12, q12, #8
   3b2d0:	vext.8	q11, q11, q12, #12
   3b2d4:	vmul.i32	q9, q9, q12
   3b2d8:	vmul.i32	q8, q11, q8
   3b2dc:	vorr	q11, q12, q12
   3b2e0:	bne	3b2c0 <GetDataSlab+0xb340>
   3b2e4:	vext.8	q11, q9, q8, #8
   3b2e8:	vext.8	q12, q8, q8, #8
   3b2ec:	cmp	r8, r1
   3b2f0:	vmul.i32	q0, q9, q11
   3b2f4:	vmul.i32	q1, q8, q12
   3b2f8:	vmul.i32	q8, q0, d0[1]
   3b2fc:	vmul.i32	q9, q1, d2[1]
   3b300:	vmov.32	r4, d16[0]
   3b304:	vmov.32	r5, d18[0]
   3b308:	beq	3b208 <GetDataSlab+0xb288>
   3b30c:	vmov.32	r1, d20[0]
   3b310:	mul	r5, r1, r5
   3b314:	ldr	r1, [r0, r2, lsl #2]
   3b318:	subs	r2, r2, #1
   3b31c:	mul	r4, r4, r1
   3b320:	bne	3b310 <GetDataSlab+0xb390>
   3b324:	b	3b208 <GetDataSlab+0xb288>
   3b328:	ldr	r1, [sl]
   3b32c:	mov	r3, #0
   3b330:	sub	r2, fp, #176	; 0xb0
   3b334:	sub	lr, fp, #96	; 0x60
   3b338:	mov	r0, r1
   3b33c:	sub	r0, r1, #1
   3b340:	str	r1, [sp, #48]	; 0x30
   3b344:	str	r0, [fp, #-96]	; 0xffffffa0
   3b348:	ldr	r0, [r6]
   3b34c:	str	r0, [sp, #52]	; 0x34
   3b350:	str	r0, [fp, #-176]	; 0xffffff50
   3b354:	ldr	r0, [fp, #20]
   3b358:	ldr	r1, [r0]
   3b35c:	ldr	r0, [fp, #24]
   3b360:	cmp	r0, #2
   3b364:	str	r1, [sp, #68]	; 0x44
   3b368:	str	r1, [sp, #72]	; 0x48
   3b36c:	blt	476c4 <GetDataSlab+0x17744>
   3b370:	ldr	r5, [sp, #52]	; 0x34
   3b374:	ldr	r1, [sp, #68]	; 0x44
   3b378:	sub	r0, r6, #4
   3b37c:	sub	sl, r6, #12
   3b380:	mov	r7, #1
   3b384:	mov	r9, #0
   3b388:	mvn	ip, #15
   3b38c:	mov	r3, #0
   3b390:	mov	r8, r5
   3b394:	str	r1, [sp, #72]	; 0x48
   3b398:	b	3b3ec <GetDataSlab+0xb46c>
   3b39c:	ldr	r1, [fp, #12]
   3b3a0:	sub	r2, fp, #176	; 0xb0
   3b3a4:	sub	lr, fp, #96	; 0x60
   3b3a8:	add	sl, sl, #4
   3b3ac:	str	r4, [lr, r7, lsl #2]
   3b3b0:	str	r5, [r2, r7, lsl #2]
   3b3b4:	ldr	r4, [sp, #72]	; 0x48
   3b3b8:	ldr	r1, [r1, r7, lsl #2]
   3b3bc:	mla	r3, r1, r8, r3
   3b3c0:	ldr	r1, [fp, #20]
   3b3c4:	mov	r8, r5
   3b3c8:	mov	r5, r6
   3b3cc:	ldr	r6, [fp, #8]
   3b3d0:	ldr	r1, [r1, r7, lsl #2]
   3b3d4:	add	r7, r7, #1
   3b3d8:	mul	r4, r1, r4
   3b3dc:	ldr	r1, [fp, #24]
   3b3e0:	str	r4, [sp, #72]	; 0x48
   3b3e4:	cmp	r7, r1
   3b3e8:	beq	476c4 <GetDataSlab+0x17744>
   3b3ec:	ldr	r1, [fp, #16]
   3b3f0:	add	r9, r9, #1
   3b3f4:	cmp	r9, #4
   3b3f8:	ldr	r1, [r1, r7, lsl #2]
   3b3fc:	str	r5, [r2, r7, lsl #2]
   3b400:	sub	r4, r1, #1
   3b404:	str	r4, [lr, r7, lsl #2]
   3b408:	ldr	r6, [r6, r7, lsl #2]
   3b40c:	bcs	3b41c <GetDataSlab+0xb49c>
   3b410:	mov	r1, r6
   3b414:	mov	r2, r7
   3b418:	b	3b4a8 <GetDataSlab+0xb528>
   3b41c:	vmov.i32	q9, #1	; 0x00000001
   3b420:	vmov.i32	q10, #1	; 0x00000001
   3b424:	vmov.32	d23[1], r6
   3b428:	vmov.i32	q8, #1	; 0x00000001
   3b42c:	mov	lr, r9
   3b430:	bic	r9, r9, #3
   3b434:	bic	r1, r7, #3
   3b438:	sub	r2, r7, r9
   3b43c:	vmov.32	d18[0], r5
   3b440:	vmov.32	d20[0], r4
   3b444:	mov	r4, sl
   3b448:	vorr	d16, d18, d18
   3b44c:	vmov.i32	q9, #1	; 0x00000001
   3b450:	vorr	d18, d20, d20
   3b454:	vld1.32	{d20-d21}, [r4], ip
   3b458:	subs	r1, r1, #4
   3b45c:	vrev64.32	q12, q10
   3b460:	vext.8	q12, q12, q12, #8
   3b464:	vext.8	q11, q11, q12, #12
   3b468:	vmul.i32	q9, q9, q12
   3b46c:	vmul.i32	q8, q11, q8
   3b470:	vorr	q11, q12, q12
   3b474:	bne	3b454 <GetDataSlab+0xb4d4>
   3b478:	vext.8	q11, q9, q8, #8
   3b47c:	vext.8	q12, q8, q8, #8
   3b480:	cmp	lr, r9
   3b484:	mov	r9, lr
   3b488:	vmul.i32	q0, q9, q11
   3b48c:	vmul.i32	q1, q8, q12
   3b490:	vmul.i32	q8, q0, d0[1]
   3b494:	vmul.i32	q9, q1, d2[1]
   3b498:	vmov.32	r4, d16[0]
   3b49c:	vmov.32	r5, d18[0]
   3b4a0:	beq	3b39c <GetDataSlab+0xb41c>
   3b4a4:	vmov.32	r1, d20[0]
   3b4a8:	mul	r5, r1, r5
   3b4ac:	ldr	r1, [r0, r2, lsl #2]
   3b4b0:	subs	r2, r2, #1
   3b4b4:	mul	r4, r4, r1
   3b4b8:	bne	3b4a8 <GetDataSlab+0xb528>
   3b4bc:	b	3b39c <GetDataSlab+0xb41c>
   3b4c0:	ldr	r1, [sl]
   3b4c4:	mov	r8, #0
   3b4c8:	sub	r2, fp, #176	; 0xb0
   3b4cc:	sub	lr, fp, #96	; 0x60
   3b4d0:	mov	r0, r1
   3b4d4:	sub	r0, r1, #1
   3b4d8:	str	r1, [sp, #36]	; 0x24
   3b4dc:	str	r0, [fp, #-96]	; 0xffffffa0
   3b4e0:	ldr	r0, [r6]
   3b4e4:	str	r0, [sp, #72]	; 0x48
   3b4e8:	str	r0, [fp, #-176]	; 0xffffff50
   3b4ec:	ldr	r0, [fp, #20]
   3b4f0:	ldr	r1, [r0]
   3b4f4:	ldr	r0, [fp, #24]
   3b4f8:	cmp	r0, #2
   3b4fc:	str	r1, [sp, #68]	; 0x44
   3b500:	str	r1, [sp, #76]	; 0x4c
   3b504:	blt	47984 <GetDataSlab+0x17a04>
   3b508:	ldr	r4, [sp, #72]	; 0x48
   3b50c:	ldr	r1, [sp, #68]	; 0x44
   3b510:	sub	r0, r6, #4
   3b514:	sub	sl, r6, #12
   3b518:	mov	r3, #1
   3b51c:	mov	r7, #0
   3b520:	mvn	ip, #15
   3b524:	mov	r8, #0
   3b528:	mov	r9, r4
   3b52c:	str	r1, [sp, #76]	; 0x4c
   3b530:	b	3b584 <GetDataSlab+0xb604>
   3b534:	ldr	r1, [fp, #12]
   3b538:	sub	r2, fp, #176	; 0xb0
   3b53c:	sub	lr, fp, #96	; 0x60
   3b540:	add	sl, sl, #4
   3b544:	str	r5, [lr, r3, lsl #2]
   3b548:	str	r4, [r2, r3, lsl #2]
   3b54c:	ldr	r5, [sp, #76]	; 0x4c
   3b550:	ldr	r1, [r1, r3, lsl #2]
   3b554:	mla	r8, r1, r9, r8
   3b558:	ldr	r1, [fp, #20]
   3b55c:	mov	r9, r4
   3b560:	mov	r4, r6
   3b564:	ldr	r6, [fp, #8]
   3b568:	ldr	r1, [r1, r3, lsl #2]
   3b56c:	add	r3, r3, #1
   3b570:	mul	r5, r1, r5
   3b574:	ldr	r1, [fp, #24]
   3b578:	str	r5, [sp, #76]	; 0x4c
   3b57c:	cmp	r3, r1
   3b580:	beq	47984 <GetDataSlab+0x17a04>
   3b584:	ldr	r1, [fp, #16]
   3b588:	add	r7, r7, #1
   3b58c:	cmp	r7, #4
   3b590:	ldr	r1, [r1, r3, lsl #2]
   3b594:	str	r4, [r2, r3, lsl #2]
   3b598:	sub	r5, r1, #1
   3b59c:	str	r5, [lr, r3, lsl #2]
   3b5a0:	ldr	r6, [r6, r3, lsl #2]
   3b5a4:	bcs	3b5b4 <GetDataSlab+0xb634>
   3b5a8:	mov	r1, r6
   3b5ac:	mov	r2, r3
   3b5b0:	b	3b640 <GetDataSlab+0xb6c0>
   3b5b4:	vmov.i32	q9, #1	; 0x00000001
   3b5b8:	vmov.i32	q10, #1	; 0x00000001
   3b5bc:	vmov.32	d23[1], r6
   3b5c0:	vmov.i32	q8, #1	; 0x00000001
   3b5c4:	mov	lr, r7
   3b5c8:	bic	r7, r7, #3
   3b5cc:	bic	r1, r3, #3
   3b5d0:	sub	r2, r3, r7
   3b5d4:	vmov.32	d18[0], r4
   3b5d8:	vmov.32	d20[0], r5
   3b5dc:	mov	r4, sl
   3b5e0:	vorr	d16, d18, d18
   3b5e4:	vmov.i32	q9, #1	; 0x00000001
   3b5e8:	vorr	d18, d20, d20
   3b5ec:	vld1.32	{d20-d21}, [r4], ip
   3b5f0:	subs	r1, r1, #4
   3b5f4:	vrev64.32	q12, q10
   3b5f8:	vext.8	q12, q12, q12, #8
   3b5fc:	vext.8	q11, q11, q12, #12
   3b600:	vmul.i32	q9, q9, q12
   3b604:	vmul.i32	q8, q11, q8
   3b608:	vorr	q11, q12, q12
   3b60c:	bne	3b5ec <GetDataSlab+0xb66c>
   3b610:	vext.8	q11, q9, q8, #8
   3b614:	vext.8	q12, q8, q8, #8
   3b618:	cmp	lr, r7
   3b61c:	mov	r7, lr
   3b620:	vmul.i32	q0, q9, q11
   3b624:	vmul.i32	q1, q8, q12
   3b628:	vmul.i32	q8, q0, d0[1]
   3b62c:	vmul.i32	q9, q1, d2[1]
   3b630:	vmov.32	r5, d16[0]
   3b634:	vmov.32	r4, d18[0]
   3b638:	beq	3b534 <GetDataSlab+0xb5b4>
   3b63c:	vmov.32	r1, d20[0]
   3b640:	mul	r4, r1, r4
   3b644:	ldr	r1, [r0, r2, lsl #2]
   3b648:	subs	r2, r2, #1
   3b64c:	mul	r5, r5, r1
   3b650:	bne	3b640 <GetDataSlab+0xb6c0>
   3b654:	b	3b534 <GetDataSlab+0xb5b4>
   3b658:	ldr	r0, [sl]
   3b65c:	mov	r8, #0
   3b660:	sub	r2, fp, #176	; 0xb0
   3b664:	sub	lr, fp, #96	; 0x60
   3b668:	str	r0, [sp, #36]	; 0x24
   3b66c:	sub	r0, r0, #1
   3b670:	str	r0, [fp, #-96]	; 0xffffffa0
   3b674:	ldr	r0, [r6]
   3b678:	str	r0, [sp, #68]	; 0x44
   3b67c:	str	r0, [fp, #-176]	; 0xffffff50
   3b680:	ldr	r0, [fp, #20]
   3b684:	ldr	r1, [r0]
   3b688:	ldr	r0, [fp, #24]
   3b68c:	cmp	r0, #2
   3b690:	str	r1, [sp, #72]	; 0x48
   3b694:	str	r1, [sp, #76]	; 0x4c
   3b698:	blt	47b9c <GetDataSlab+0x17c1c>
   3b69c:	ldr	r4, [sp, #68]	; 0x44
   3b6a0:	ldr	r1, [sp, #72]	; 0x48
   3b6a4:	sub	r0, r6, #4
   3b6a8:	sub	sl, r6, #12
   3b6ac:	mov	r3, #1
   3b6b0:	mov	r7, #0
   3b6b4:	mvn	ip, #15
   3b6b8:	mov	r8, #0
   3b6bc:	mov	r9, r4
   3b6c0:	str	r1, [sp, #76]	; 0x4c
   3b6c4:	b	3b718 <GetDataSlab+0xb798>
   3b6c8:	ldr	r1, [fp, #12]
   3b6cc:	sub	r2, fp, #176	; 0xb0
   3b6d0:	sub	lr, fp, #96	; 0x60
   3b6d4:	add	sl, sl, #4
   3b6d8:	str	r5, [lr, r3, lsl #2]
   3b6dc:	str	r4, [r2, r3, lsl #2]
   3b6e0:	ldr	r5, [sp, #76]	; 0x4c
   3b6e4:	ldr	r1, [r1, r3, lsl #2]
   3b6e8:	mla	r8, r1, r9, r8
   3b6ec:	ldr	r1, [fp, #20]
   3b6f0:	mov	r9, r4
   3b6f4:	mov	r4, r6
   3b6f8:	ldr	r6, [fp, #8]
   3b6fc:	ldr	r1, [r1, r3, lsl #2]
   3b700:	add	r3, r3, #1
   3b704:	mul	r5, r1, r5
   3b708:	ldr	r1, [fp, #24]
   3b70c:	str	r5, [sp, #76]	; 0x4c
   3b710:	cmp	r3, r1
   3b714:	beq	47b9c <GetDataSlab+0x17c1c>
   3b718:	ldr	r1, [fp, #16]
   3b71c:	add	r7, r7, #1
   3b720:	cmp	r7, #4
   3b724:	ldr	r1, [r1, r3, lsl #2]
   3b728:	str	r4, [r2, r3, lsl #2]
   3b72c:	sub	r5, r1, #1
   3b730:	str	r5, [lr, r3, lsl #2]
   3b734:	ldr	r6, [r6, r3, lsl #2]
   3b738:	bcs	3b748 <GetDataSlab+0xb7c8>
   3b73c:	mov	r1, r6
   3b740:	mov	r2, r3
   3b744:	b	3b7d4 <GetDataSlab+0xb854>
   3b748:	vmov.i32	q9, #1	; 0x00000001
   3b74c:	vmov.i32	q10, #1	; 0x00000001
   3b750:	vmov.32	d23[1], r6
   3b754:	vmov.i32	q8, #1	; 0x00000001
   3b758:	mov	lr, r7
   3b75c:	bic	r7, r7, #3
   3b760:	bic	r1, r3, #3
   3b764:	sub	r2, r3, r7
   3b768:	vmov.32	d18[0], r4
   3b76c:	vmov.32	d20[0], r5
   3b770:	mov	r4, sl
   3b774:	vorr	d16, d18, d18
   3b778:	vmov.i32	q9, #1	; 0x00000001
   3b77c:	vorr	d18, d20, d20
   3b780:	vld1.32	{d20-d21}, [r4], ip
   3b784:	subs	r1, r1, #4
   3b788:	vrev64.32	q12, q10
   3b78c:	vext.8	q12, q12, q12, #8
   3b790:	vext.8	q11, q11, q12, #12
   3b794:	vmul.i32	q9, q9, q12
   3b798:	vmul.i32	q8, q11, q8
   3b79c:	vorr	q11, q12, q12
   3b7a0:	bne	3b780 <GetDataSlab+0xb800>
   3b7a4:	vext.8	q11, q9, q8, #8
   3b7a8:	vext.8	q12, q8, q8, #8
   3b7ac:	cmp	lr, r7
   3b7b0:	mov	r7, lr
   3b7b4:	vmul.i32	q0, q9, q11
   3b7b8:	vmul.i32	q1, q8, q12
   3b7bc:	vmul.i32	q8, q0, d0[1]
   3b7c0:	vmul.i32	q9, q1, d2[1]
   3b7c4:	vmov.32	r5, d16[0]
   3b7c8:	vmov.32	r4, d18[0]
   3b7cc:	beq	3b6c8 <GetDataSlab+0xb748>
   3b7d0:	vmov.32	r1, d20[0]
   3b7d4:	mul	r4, r1, r4
   3b7d8:	ldr	r1, [r0, r2, lsl #2]
   3b7dc:	subs	r2, r2, #1
   3b7e0:	mul	r5, r5, r1
   3b7e4:	bne	3b7d4 <GetDataSlab+0xb854>
   3b7e8:	b	3b6c8 <GetDataSlab+0xb748>
   3b7ec:	ldr	r0, [sl]
   3b7f0:	mov	ip, #0
   3b7f4:	sub	r7, fp, #176	; 0xb0
   3b7f8:	sub	lr, fp, #96	; 0x60
   3b7fc:	str	r0, [sp, #32]
   3b800:	sub	r0, r0, #1
   3b804:	str	r0, [fp, #-96]	; 0xffffffa0
   3b808:	ldr	r0, [r6]
   3b80c:	str	r0, [sp, #24]
   3b810:	str	r0, [fp, #-176]	; 0xffffff50
   3b814:	ldr	r0, [fp, #20]
   3b818:	ldr	r1, [r0]
   3b81c:	ldr	r0, [fp, #24]
   3b820:	cmp	r0, #2
   3b824:	str	r1, [sp, #44]	; 0x2c
   3b828:	str	r1, [sp, #68]	; 0x44
   3b82c:	blt	47dcc <GetDataSlab+0x17e4c>
   3b830:	ldr	r0, [fp, #8]
   3b834:	ldr	r2, [sp, #24]
   3b838:	mov	r6, #1
   3b83c:	mov	r9, #0
   3b840:	mvn	r5, #15
   3b844:	mov	ip, #0
   3b848:	mov	r1, r0
   3b84c:	sub	r0, r0, #4
   3b850:	mov	r8, r2
   3b854:	sub	sl, r1, #12
   3b858:	ldr	r1, [sp, #44]	; 0x2c
   3b85c:	str	r1, [sp, #68]	; 0x44
   3b860:	b	3b8b0 <GetDataSlab+0xb930>
   3b864:	ldr	r3, [fp, #12]
   3b868:	sub	r7, fp, #176	; 0xb0
   3b86c:	sub	lr, fp, #96	; 0x60
   3b870:	add	sl, sl, #4
   3b874:	str	r4, [lr, r6, lsl #2]
   3b878:	str	r2, [r7, r6, lsl #2]
   3b87c:	ldr	r4, [sp, #68]	; 0x44
   3b880:	ldr	r3, [r3, r6, lsl #2]
   3b884:	mla	ip, r3, r8, ip
   3b888:	ldr	r3, [fp, #20]
   3b88c:	mov	r8, r2
   3b890:	mov	r2, r1
   3b894:	ldr	r3, [r3, r6, lsl #2]
   3b898:	add	r6, r6, #1
   3b89c:	mul	r4, r3, r4
   3b8a0:	ldr	r3, [fp, #24]
   3b8a4:	str	r4, [sp, #68]	; 0x44
   3b8a8:	cmp	r6, r3
   3b8ac:	beq	47dcc <GetDataSlab+0x17e4c>
   3b8b0:	ldr	r1, [fp, #16]
   3b8b4:	add	r9, r9, #1
   3b8b8:	cmp	r9, #4
   3b8bc:	ldr	r3, [r1, r6, lsl #2]
   3b8c0:	ldr	r1, [fp, #8]
   3b8c4:	str	r2, [r7, r6, lsl #2]
   3b8c8:	sub	r4, r3, #1
   3b8cc:	str	r4, [lr, r6, lsl #2]
   3b8d0:	ldr	r1, [r1, r6, lsl #2]
   3b8d4:	bcs	3b8e4 <GetDataSlab+0xb964>
   3b8d8:	mov	r3, r1
   3b8dc:	mov	r7, r6
   3b8e0:	b	3b970 <GetDataSlab+0xb9f0>
   3b8e4:	vmov.i32	q9, #1	; 0x00000001
   3b8e8:	vmov.i32	q10, #1	; 0x00000001
   3b8ec:	vmov.32	d23[1], r1
   3b8f0:	vmov.i32	q8, #1	; 0x00000001
   3b8f4:	mov	lr, r9
   3b8f8:	bic	r9, r9, #3
   3b8fc:	bic	r3, r6, #3
   3b900:	sub	r7, r6, r9
   3b904:	vmov.32	d18[0], r2
   3b908:	vmov.32	d20[0], r4
   3b90c:	mov	r2, sl
   3b910:	vorr	d16, d18, d18
   3b914:	vmov.i32	q9, #1	; 0x00000001
   3b918:	vorr	d18, d20, d20
   3b91c:	vld1.32	{d20-d21}, [r2], r5
   3b920:	subs	r3, r3, #4
   3b924:	vrev64.32	q12, q10
   3b928:	vext.8	q12, q12, q12, #8
   3b92c:	vext.8	q11, q11, q12, #12
   3b930:	vmul.i32	q9, q9, q12
   3b934:	vmul.i32	q8, q11, q8
   3b938:	vorr	q11, q12, q12
   3b93c:	bne	3b91c <GetDataSlab+0xb99c>
   3b940:	vext.8	q11, q9, q8, #8
   3b944:	vext.8	q12, q8, q8, #8
   3b948:	cmp	lr, r9
   3b94c:	mov	r9, lr
   3b950:	vmul.i32	q0, q9, q11
   3b954:	vmul.i32	q1, q8, q12
   3b958:	vmul.i32	q8, q0, d0[1]
   3b95c:	vmul.i32	q9, q1, d2[1]
   3b960:	vmov.32	r4, d16[0]
   3b964:	vmov.32	r2, d18[0]
   3b968:	beq	3b864 <GetDataSlab+0xb8e4>
   3b96c:	vmov.32	r3, d20[0]
   3b970:	mul	r2, r3, r2
   3b974:	ldr	r3, [r0, r7, lsl #2]
   3b978:	subs	r7, r7, #1
   3b97c:	mul	r4, r4, r3
   3b980:	bne	3b970 <GetDataSlab+0xb9f0>
   3b984:	b	3b864 <GetDataSlab+0xb8e4>
   3b988:	ldr	r0, [sp, #80]	; 0x50
   3b98c:	cmp	sl, #1
   3b990:	add	lr, r0, r7
   3b994:	bne	4873c <GetDataSlab+0x187bc>
   3b998:	ldr	r0, [sp, #76]	; 0x4c
   3b99c:	ldr	r2, [fp, #12]
   3b9a0:	ldr	r3, [fp, #20]
   3b9a4:	ldr	r8, [sp, #44]	; 0x2c
   3b9a8:	cmp	r0, #1
   3b9ac:	blt	56c18 <GetDataSlab+0x26c98>
   3b9b0:	ldr	r5, [sp, #72]	; 0x48
   3b9b4:	mov	r1, #1
   3b9b8:	add	sl, r3, #4
   3b9bc:	orr	r9, ip, #4
   3b9c0:	str	r9, [sp, #20]
   3b9c4:	sub	r0, r5, #2
   3b9c8:	mov	r3, r5
   3b9cc:	add	r1, r1, r0, lsr #1
   3b9d0:	lsr	r0, r0, #1
   3b9d4:	str	r0, [sp, #24]
   3b9d8:	ldr	r0, [sp, #88]	; 0x58
   3b9dc:	and	r4, r1, #1
   3b9e0:	sub	r1, r1, r4
   3b9e4:	str	r4, [sp, #32]
   3b9e8:	str	r1, [sp, #16]
   3b9ec:	sub	r1, fp, #136	; 0x88
   3b9f0:	orr	r4, r1, #4
   3b9f4:	add	r1, r2, #4
   3b9f8:	str	r0, [sp, #64]	; 0x40
   3b9fc:	mov	r0, #0
   3ba00:	str	r1, [sp, #84]	; 0x54
   3ba04:	ldr	r1, [fp, #24]
   3ba08:	str	r0, [sp, #68]	; 0x44
   3ba0c:	mov	r0, #0
   3ba10:	str	r0, [sp, #80]	; 0x50
   3ba14:	sub	r1, r1, #1
   3ba18:	str	r1, [sp, #48]	; 0x30
   3ba1c:	sub	r1, fp, #96	; 0x60
   3ba20:	orr	r1, r1, #4
   3ba24:	str	r1, [sp, #36]	; 0x24
   3ba28:	lsl	r1, r5, #3
   3ba2c:	str	r1, [sp, #60]	; 0x3c
   3ba30:	and	r1, r5, #1
   3ba34:	str	r1, [sp, #52]	; 0x34
   3ba38:	bic	r1, r5, #1
   3ba3c:	str	r1, [sp, #28]
   3ba40:	b	3ba90 <GetDataSlab+0xbb10>
   3ba44:	ldr	r0, [sp, #36]	; 0x24
   3ba48:	ldr	r0, [r0, r2]
   3ba4c:	add	lr, lr, r0
   3ba50:	add	r7, r0, r7
   3ba54:	ldr	r0, [sp, #60]	; 0x3c
   3ba58:	ldr	r1, [sp, #64]	; 0x40
   3ba5c:	ldr	r3, [sp, #72]	; 0x48
   3ba60:	mov	r2, #0
   3ba64:	add	r1, r1, r0
   3ba68:	ldr	r0, [sp, #68]	; 0x44
   3ba6c:	str	r1, [sp, #64]	; 0x40
   3ba70:	ldr	r1, [sp, #80]	; 0x50
   3ba74:	add	r0, r0, #1
   3ba78:	str	r0, [sp, #68]	; 0x44
   3ba7c:	ldr	r0, [sp, #76]	; 0x4c
   3ba80:	add	r1, r1, r3
   3ba84:	str	r1, [sp, #80]	; 0x50
   3ba88:	cmp	r1, r0
   3ba8c:	bge	56c1c <GetDataSlab+0x26c9c>
   3ba90:	ldr	r6, [sp, #88]	; 0x58
   3ba94:	ldr	r0, [fp, #12]
   3ba98:	cmp	r3, #1
   3ba9c:	sub	ip, fp, #176	; 0xb0
   3baa0:	blt	3bc70 <GetDataSlab+0xbcf0>
   3baa4:	ldr	r5, [r0]
   3baa8:	ldr	r0, [sp, #80]	; 0x50
   3baac:	add	r0, r6, r0, lsl #3
   3bab0:	add	r3, lr, r5
   3bab4:	str	r0, [sp, #56]	; 0x38
   3bab8:	mov	r0, #0
   3babc:	beq	3bbe4 <GetDataSlab+0xbc64>
   3bac0:	ldr	r1, [sp, #60]	; 0x3c
   3bac4:	ldr	r2, [sp, #68]	; 0x44
   3bac8:	mla	r1, r1, r2, r6
   3bacc:	ldr	r2, [sp, #72]	; 0x48
   3bad0:	add	r2, lr, r2
   3bad4:	add	r2, r2, r5
   3bad8:	cmp	r1, r2
   3badc:	bcs	3baf8 <GetDataSlab+0xbb78>
   3bae0:	ldr	r1, [sp, #60]	; 0x3c
   3bae4:	ldr	r2, [sp, #68]	; 0x44
   3bae8:	mla	r1, r1, r2, r1
   3baec:	add	r1, r6, r1
   3baf0:	cmp	r3, r1
   3baf4:	bcc	3bbe4 <GetDataSlab+0xbc64>
   3baf8:	ldr	r0, [sp, #24]
   3bafc:	mov	r2, #0
   3bb00:	str	r5, [sp, #40]	; 0x28
   3bb04:	cmp	r0, #0
   3bb08:	beq	3bb80 <GetDataSlab+0xbc00>
   3bb0c:	ldr	r9, [sp, #64]	; 0x40
   3bb10:	ldr	r0, [sp, #16]
   3bb14:	add	r5, sp, #272	; 0x110
   3bb18:	mov	r8, r9
   3bb1c:	mov	r1, r3
   3bb20:	add	r6, sp, #516	; 0x204
   3bb24:	subs	r0, r0, #2
   3bb28:	ldrh	ip, [r1, r2]!
   3bb2c:	add	r2, r2, #4
   3bb30:	strh	ip, [r5, #244]	; 0xf4
   3bb34:	vld1.16	{d16[0]}, [r6 :16]
   3bb38:	mov	r6, #32
   3bb3c:	vmovl.s8	q8, d16
   3bb40:	vmovl.s16	q0, d16
   3bb44:	vcvt.f64.s32	d17, s1
   3bb48:	vcvt.f64.s32	d16, s0
   3bb4c:	vst1.64	{d16-d17}, [r8], r6
   3bb50:	ldrh	r1, [r1, #2]
   3bb54:	strh	r1, [r5, #248]	; 0xf8
   3bb58:	add	r1, sp, #520	; 0x208
   3bb5c:	vld1.16	{d16[0]}, [r1 :16]
   3bb60:	add	r1, r9, #16
   3bb64:	mov	r9, r8
   3bb68:	vmovl.s8	q8, d16
   3bb6c:	vmovl.s16	q0, d16
   3bb70:	vcvt.f64.s32	d17, s1
   3bb74:	vcvt.f64.s32	d16, s0
   3bb78:	vst1.64	{d16-d17}, [r1]
   3bb7c:	bne	3bb1c <GetDataSlab+0xbb9c>
   3bb80:	ldr	r0, [sp, #32]
   3bb84:	ldr	r8, [sp, #44]	; 0x2c
   3bb88:	ldr	r9, [sp, #20]
   3bb8c:	ldr	r5, [sp, #40]	; 0x28
   3bb90:	cmp	r0, #0
   3bb94:	beq	3bbcc <GetDataSlab+0xbc4c>
   3bb98:	add	r0, r3, r2
   3bb9c:	add	r1, sp, #272	; 0x110
   3bba0:	ldrh	r0, [r0]
   3bba4:	strh	r0, [r1, #240]	; 0xf0
   3bba8:	add	r0, sp, #512	; 0x200
   3bbac:	vld1.16	{d16[0]}, [r0 :16]
   3bbb0:	vmovl.s8	q8, d16
   3bbb4:	vmovl.s16	q0, d16
   3bbb8:	vcvt.f64.s32	d17, s1
   3bbbc:	vcvt.f64.s32	d16, s0
   3bbc0:	ldr	r0, [sp, #56]	; 0x38
   3bbc4:	add	r0, r0, r2, lsl #3
   3bbc8:	vst1.64	{d16-d17}, [r0]
   3bbcc:	ldr	r0, [sp, #72]	; 0x48
   3bbd0:	ldr	r1, [sp, #28]
   3bbd4:	sub	ip, fp, #176	; 0xb0
   3bbd8:	cmp	r0, r1
   3bbdc:	mov	r0, r1
   3bbe0:	beq	3bc70 <GetDataSlab+0xbcf0>
   3bbe4:	ldr	r1, [sp, #52]	; 0x34
   3bbe8:	cmp	r1, #0
   3bbec:	mov	r1, r0
   3bbf0:	beq	3bc14 <GetDataSlab+0xbc94>
   3bbf4:	add	r2, r3, r0
   3bbf8:	ldr	r1, [sp, #56]	; 0x38
   3bbfc:	ldrsb	r2, [r2]
   3bc00:	add	r1, r1, r0, lsl #3
   3bc04:	vmov	s0, r2
   3bc08:	vcvt.f64.s32	d16, s0
   3bc0c:	vstr	d16, [r1]
   3bc10:	orr	r1, r0, #1
   3bc14:	ldr	r2, [sp, #72]	; 0x48
   3bc18:	orr	r0, r0, #1
   3bc1c:	cmp	r2, r0
   3bc20:	beq	3bc70 <GetDataSlab+0xbcf0>
   3bc24:	ldr	r0, [sp, #64]	; 0x40
   3bc28:	ldr	r2, [sp, #72]	; 0x48
   3bc2c:	add	r0, r0, r1, lsl #3
   3bc30:	sub	r2, r2, r1
   3bc34:	add	r1, r1, r5
   3bc38:	add	r1, lr, r1
   3bc3c:	add	r3, r1, #1
   3bc40:	ldrsb	r1, [r3, #-1]
   3bc44:	subs	r2, r2, #2
   3bc48:	vmov	s0, r1
   3bc4c:	vcvt.f64.s32	d16, s0
   3bc50:	vstr	d16, [r0]
   3bc54:	ldrsb	r1, [r3]
   3bc58:	add	r3, r3, #2
   3bc5c:	vmov	s0, r1
   3bc60:	vcvt.f64.s32	d16, s0
   3bc64:	vstr	d16, [r0, #8]
   3bc68:	add	r0, r0, #16
   3bc6c:	bne	3bc40 <GetDataSlab+0xbcc0>
   3bc70:	ldr	r0, [fp, #24]
   3bc74:	add	lr, lr, r8
   3bc78:	add	r7, r7, r8
   3bc7c:	cmp	r0, #2
   3bc80:	blt	3ba54 <GetDataSlab+0xbad4>
   3bc84:	ldr	r3, [sp, #48]	; 0x30
   3bc88:	mov	r2, #0
   3bc8c:	b	3bcb8 <GetDataSlab+0xbd38>
   3bc90:	ldr	r5, [sp, #84]	; 0x54
   3bc94:	ldr	r6, [ip, r2]
   3bc98:	sub	r0, r0, r1
   3bc9c:	ldr	r5, [r5, r2]
   3bca0:	mla	r0, r5, r6, r0
   3bca4:	add	r7, r0, r7
   3bca8:	add	lr, lr, r0
   3bcac:	subs	r3, r3, #1
   3bcb0:	add	r2, r2, #4
   3bcb4:	beq	3ba54 <GetDataSlab+0xbad4>
   3bcb8:	ldr	r0, [r4, r2]
   3bcbc:	add	r0, r0, #1
   3bcc0:	str	r0, [r4, r2]
   3bcc4:	ldr	r1, [sl, r2]
   3bcc8:	sdiv	r6, r0, r1
   3bccc:	mls	r0, r6, r1, r0
   3bcd0:	cmp	r0, #0
   3bcd4:	bne	3ba44 <GetDataSlab+0xbac4>
   3bcd8:	mov	r0, #0
   3bcdc:	str	r0, [r4, r2]
   3bce0:	ldr	r0, [r9, r2]
   3bce4:	sdiv	r1, r7, r0
   3bce8:	mls	r1, r1, r0, r7
   3bcec:	cmp	r1, #0
   3bcf0:	bne	3bc90 <GetDataSlab+0xbd10>
   3bcf4:	ldr	r0, [sp, #84]	; 0x54
   3bcf8:	ldr	r0, [r0, r2]
   3bcfc:	cmp	r0, #0
   3bd00:	beq	3bcac <GetDataSlab+0xbd2c>
   3bd04:	ldr	r1, [ip, r2]
   3bd08:	mla	r7, r1, r0, r7
   3bd0c:	mla	lr, r1, r0, lr
   3bd10:	b	3bcac <GetDataSlab+0xbd2c>
   3bd14:	ldr	r0, [sp, #80]	; 0x50
   3bd18:	cmp	r5, #1
   3bd1c:	add	r8, r0, r7
   3bd20:	bne	48954 <GetDataSlab+0x189d4>
   3bd24:	ldr	r0, [sp, #76]	; 0x4c
   3bd28:	ldr	r3, [fp, #20]
   3bd2c:	sub	r2, fp, #176	; 0xb0
   3bd30:	cmp	r0, #1
   3bd34:	blt	56468 <GetDataSlab+0x264e8>
   3bd38:	orr	r2, r2, #4
   3bd3c:	ldr	lr, [fp, #12]
   3bd40:	sub	r0, fp, #136	; 0x88
   3bd44:	add	r3, r3, #4
   3bd48:	mov	ip, #0
   3bd4c:	str	r2, [sp, #80]	; 0x50
   3bd50:	ldr	r2, [fp, #24]
   3bd54:	orr	r0, r0, #4
   3bd58:	str	r3, [sp, #84]	; 0x54
   3bd5c:	sub	r2, r2, #1
   3bd60:	str	r2, [sp, #64]	; 0x40
   3bd64:	sub	r2, fp, #96	; 0x60
   3bd68:	orr	r2, r2, #4
   3bd6c:	str	r2, [sp, #60]	; 0x3c
   3bd70:	ldr	r2, [lr], #4
   3bd74:	str	r2, [sp, #68]	; 0x44
   3bd78:	b	3bda0 <GetDataSlab+0xbe20>
   3bd7c:	ldr	r3, [sp, #60]	; 0x3c
   3bd80:	ldr	r2, [r3, r2]
   3bd84:	add	r8, r8, r2
   3bd88:	add	r7, r2, r7
   3bd8c:	ldr	r2, [sp, #76]	; 0x4c
   3bd90:	add	ip, r1, ip
   3bd94:	cmp	ip, r2
   3bd98:	mov	r2, #0
   3bd9c:	bge	56c1c <GetDataSlab+0x26c9c>
   3bda0:	ldr	r4, [sp, #68]	; 0x44
   3bda4:	ldr	r5, [fp, #20]
   3bda8:	ldr	r2, [sp, #72]	; 0x48
   3bdac:	cmp	r1, #1
   3bdb0:	add	r3, r4, r7
   3bdb4:	add	r7, r8, r4
   3bdb8:	blt	3bdf0 <GetDataSlab+0xbe70>
   3bdbc:	ldr	r1, [sp, #88]	; 0x58
   3bdc0:	mov	r2, #0
   3bdc4:	add	r4, r1, ip
   3bdc8:	ldrb	r1, [r7, r2]
   3bdcc:	strb	r1, [r4, r2]
   3bdd0:	add	r2, r2, #1
   3bdd4:	ldr	r1, [r5]
   3bdd8:	cmp	r2, r1
   3bddc:	blt	3bdc8 <GetDataSlab+0xbe48>
   3bde0:	ldr	r2, [fp, #12]
   3bde4:	ldr	r4, [r2]
   3bde8:	ldr	r2, [fp, #8]
   3bdec:	ldr	r2, [r2]
   3bdf0:	str	r2, [sp, #72]	; 0x48
   3bdf4:	sub	r2, r2, r4
   3bdf8:	str	r4, [sp, #68]	; 0x44
   3bdfc:	add	r8, r7, r2
   3be00:	add	r7, r3, r2
   3be04:	ldr	r2, [fp, #24]
   3be08:	cmp	r2, #2
   3be0c:	blt	3bd8c <GetDataSlab+0xbe0c>
   3be10:	ldr	r9, [sp, #64]	; 0x40
   3be14:	mov	r2, #0
   3be18:	b	3be44 <GetDataSlab+0xbec4>
   3be1c:	sub	r4, fp, #176	; 0xb0
   3be20:	ldr	sl, [lr, r2]
   3be24:	sub	r3, r3, r5
   3be28:	ldr	r6, [r4, r2]
   3be2c:	mla	r3, sl, r6, r3
   3be30:	add	r7, r3, r7
   3be34:	add	r8, r8, r3
   3be38:	subs	r9, r9, #1
   3be3c:	add	r2, r2, #4
   3be40:	beq	3bd8c <GetDataSlab+0xbe0c>
   3be44:	ldr	r3, [r0, r2]
   3be48:	ldr	r4, [sp, #84]	; 0x54
   3be4c:	add	r3, r3, #1
   3be50:	str	r3, [r0, r2]
   3be54:	ldr	r5, [r4, r2]
   3be58:	sdiv	r6, r3, r5
   3be5c:	mls	r3, r6, r5, r3
   3be60:	cmp	r3, #0
   3be64:	bne	3bd7c <GetDataSlab+0xbdfc>
   3be68:	mov	r3, #0
   3be6c:	str	r3, [r0, r2]
   3be70:	ldr	r3, [sp, #80]	; 0x50
   3be74:	ldr	r3, [r3, r2]
   3be78:	sdiv	r5, r7, r3
   3be7c:	mls	r5, r5, r3, r7
   3be80:	cmp	r5, #0
   3be84:	bne	3be1c <GetDataSlab+0xbe9c>
   3be88:	ldr	r3, [lr, r2]
   3be8c:	cmp	r3, #0
   3be90:	beq	3be38 <GetDataSlab+0xbeb8>
   3be94:	sub	r4, fp, #176	; 0xb0
   3be98:	ldr	r5, [r4, r2]
   3be9c:	mla	r7, r5, r3, r7
   3bea0:	mla	r8, r5, r3, r8
   3bea4:	b	3be38 <GetDataSlab+0xbeb8>
   3bea8:	ldr	r0, [sp, #80]	; 0x50
   3beac:	cmp	r5, #1
   3beb0:	add	r8, r0, r7
   3beb4:	bne	48b00 <GetDataSlab+0x18b80>
   3beb8:	ldr	r0, [sp, #76]	; 0x4c
   3bebc:	ldr	r3, [fp, #20]
   3bec0:	sub	r2, fp, #176	; 0xb0
   3bec4:	cmp	r0, #1
   3bec8:	blt	56468 <GetDataSlab+0x264e8>
   3becc:	orr	r2, r2, #4
   3bed0:	ldr	lr, [fp, #12]
   3bed4:	sub	r0, fp, #136	; 0x88
   3bed8:	add	r3, r3, #4
   3bedc:	mov	ip, #0
   3bee0:	str	r2, [sp, #80]	; 0x50
   3bee4:	ldr	r2, [fp, #24]
   3bee8:	orr	r0, r0, #4
   3beec:	str	r3, [sp, #84]	; 0x54
   3bef0:	sub	r2, r2, #1
   3bef4:	str	r2, [sp, #64]	; 0x40
   3bef8:	sub	r2, fp, #96	; 0x60
   3befc:	orr	r2, r2, #4
   3bf00:	str	r2, [sp, #60]	; 0x3c
   3bf04:	ldr	r2, [lr], #4
   3bf08:	str	r2, [sp, #68]	; 0x44
   3bf0c:	b	3bf34 <GetDataSlab+0xbfb4>
   3bf10:	ldr	r3, [sp, #60]	; 0x3c
   3bf14:	ldr	r2, [r3, r2]
   3bf18:	add	r8, r8, r2
   3bf1c:	add	r7, r2, r7
   3bf20:	ldr	r2, [sp, #76]	; 0x4c
   3bf24:	add	ip, r1, ip
   3bf28:	cmp	ip, r2
   3bf2c:	mov	r2, #0
   3bf30:	bge	56c1c <GetDataSlab+0x26c9c>
   3bf34:	ldr	r4, [sp, #68]	; 0x44
   3bf38:	ldr	r5, [fp, #20]
   3bf3c:	ldr	r2, [sp, #72]	; 0x48
   3bf40:	cmp	r1, #1
   3bf44:	add	r3, r4, r7
   3bf48:	add	r7, r8, r4
   3bf4c:	blt	3bf84 <GetDataSlab+0xc004>
   3bf50:	ldr	r1, [sp, #88]	; 0x58
   3bf54:	mov	r2, #0
   3bf58:	add	r4, r1, ip
   3bf5c:	ldrb	r1, [r7, r2]
   3bf60:	strb	r1, [r4, r2]
   3bf64:	add	r2, r2, #1
   3bf68:	ldr	r1, [r5]
   3bf6c:	cmp	r2, r1
   3bf70:	blt	3bf5c <GetDataSlab+0xbfdc>
   3bf74:	ldr	r2, [fp, #12]
   3bf78:	ldr	r4, [r2]
   3bf7c:	ldr	r2, [fp, #8]
   3bf80:	ldr	r2, [r2]
   3bf84:	str	r2, [sp, #72]	; 0x48
   3bf88:	sub	r2, r2, r4
   3bf8c:	str	r4, [sp, #68]	; 0x44
   3bf90:	add	r8, r7, r2
   3bf94:	add	r7, r3, r2
   3bf98:	ldr	r2, [fp, #24]
   3bf9c:	cmp	r2, #2
   3bfa0:	blt	3bf20 <GetDataSlab+0xbfa0>
   3bfa4:	ldr	r9, [sp, #64]	; 0x40
   3bfa8:	mov	r2, #0
   3bfac:	b	3bfd8 <GetDataSlab+0xc058>
   3bfb0:	sub	r4, fp, #176	; 0xb0
   3bfb4:	ldr	sl, [lr, r2]
   3bfb8:	sub	r3, r3, r5
   3bfbc:	ldr	r6, [r4, r2]
   3bfc0:	mla	r3, sl, r6, r3
   3bfc4:	add	r7, r3, r7
   3bfc8:	add	r8, r8, r3
   3bfcc:	subs	r9, r9, #1
   3bfd0:	add	r2, r2, #4
   3bfd4:	beq	3bf20 <GetDataSlab+0xbfa0>
   3bfd8:	ldr	r3, [r0, r2]
   3bfdc:	ldr	r4, [sp, #84]	; 0x54
   3bfe0:	add	r3, r3, #1
   3bfe4:	str	r3, [r0, r2]
   3bfe8:	ldr	r5, [r4, r2]
   3bfec:	sdiv	r6, r3, r5
   3bff0:	mls	r3, r6, r5, r3
   3bff4:	cmp	r3, #0
   3bff8:	bne	3bf10 <GetDataSlab+0xbf90>
   3bffc:	mov	r3, #0
   3c000:	str	r3, [r0, r2]
   3c004:	ldr	r3, [sp, #80]	; 0x50
   3c008:	ldr	r3, [r3, r2]
   3c00c:	sdiv	r5, r7, r3
   3c010:	mls	r5, r5, r3, r7
   3c014:	cmp	r5, #0
   3c018:	bne	3bfb0 <GetDataSlab+0xc030>
   3c01c:	ldr	r3, [lr, r2]
   3c020:	cmp	r3, #0
   3c024:	beq	3bfcc <GetDataSlab+0xc04c>
   3c028:	sub	r4, fp, #176	; 0xb0
   3c02c:	ldr	r5, [r4, r2]
   3c030:	mla	r7, r5, r3, r7
   3c034:	mla	r8, r5, r3, r8
   3c038:	b	3bfcc <GetDataSlab+0xc04c>
   3c03c:	ldr	r0, [sp, #80]	; 0x50
   3c040:	cmp	r5, #1
   3c044:	add	sl, r0, r7
   3c048:	bne	48cac <GetDataSlab+0x18d2c>
   3c04c:	ldr	r0, [sp, #76]	; 0x4c
   3c050:	ldr	r3, [fp, #20]
   3c054:	sub	r2, fp, #176	; 0xb0
   3c058:	cmp	r0, #1
   3c05c:	blt	56c18 <GetDataSlab+0x26c98>
   3c060:	orr	r2, r2, #4
   3c064:	ldr	lr, [fp, #12]
   3c068:	sub	r0, fp, #136	; 0x88
   3c06c:	add	r4, r3, #4
   3c070:	str	r2, [sp, #84]	; 0x54
   3c074:	ldr	r2, [fp, #24]
   3c078:	orr	r0, r0, #4
   3c07c:	sub	r2, r2, #1
   3c080:	str	r2, [sp, #68]	; 0x44
   3c084:	orr	r2, r8, #4
   3c088:	mov	r8, #0
   3c08c:	str	r2, [sp, #64]	; 0x40
   3c090:	ldr	r2, [lr], #4
   3c094:	str	r2, [sp, #80]	; 0x50
   3c098:	b	3c0c0 <GetDataSlab+0xc140>
   3c09c:	ldr	r3, [sp, #64]	; 0x40
   3c0a0:	ldr	r2, [r3, r2]
   3c0a4:	add	sl, sl, r2
   3c0a8:	add	r7, r2, r7
   3c0ac:	ldr	r3, [sp, #76]	; 0x4c
   3c0b0:	add	r8, r1, r8
   3c0b4:	mov	r2, #0
   3c0b8:	cmp	r8, r3
   3c0bc:	bge	56c1c <GetDataSlab+0x26c9c>
   3c0c0:	ldr	r6, [sp, #80]	; 0x50
   3c0c4:	ldr	r5, [fp, #20]
   3c0c8:	ldr	r2, [sp, #72]	; 0x48
   3c0cc:	cmp	r1, #1
   3c0d0:	sub	ip, fp, #176	; 0xb0
   3c0d4:	add	r3, r6, r7
   3c0d8:	add	r7, sl, r6
   3c0dc:	blt	3c120 <GetDataSlab+0xc1a0>
   3c0e0:	ldr	r1, [sp, #88]	; 0x58
   3c0e4:	mov	r9, r4
   3c0e8:	mov	r2, #0
   3c0ec:	add	r4, r1, r8, lsl #2
   3c0f0:	add	r1, r7, r2
   3c0f4:	ldrsb	r1, [r1]
   3c0f8:	str	r1, [r4, r2, lsl #2]
   3c0fc:	add	r2, r2, #1
   3c100:	ldr	r1, [r5]
   3c104:	cmp	r2, r1
   3c108:	blt	3c0f0 <GetDataSlab+0xc170>
   3c10c:	ldr	r2, [fp, #12]
   3c110:	mov	r4, r9
   3c114:	ldr	r6, [r2]
   3c118:	ldr	r2, [fp, #8]
   3c11c:	ldr	r2, [r2]
   3c120:	str	r2, [sp, #72]	; 0x48
   3c124:	sub	r2, r2, r6
   3c128:	str	r6, [sp, #80]	; 0x50
   3c12c:	add	sl, r7, r2
   3c130:	add	r7, r3, r2
   3c134:	ldr	r2, [fp, #24]
   3c138:	cmp	r2, #2
   3c13c:	blt	3c0ac <GetDataSlab+0xc12c>
   3c140:	ldr	r9, [sp, #68]	; 0x44
   3c144:	mov	r2, #0
   3c148:	b	3c174 <GetDataSlab+0xc1f4>
   3c14c:	ldr	r6, [ip, r2]
   3c150:	ldr	ip, [lr, r2]
   3c154:	sub	r3, r3, r5
   3c158:	mla	r3, ip, r6, r3
   3c15c:	sub	ip, fp, #176	; 0xb0
   3c160:	add	r7, r3, r7
   3c164:	add	sl, sl, r3
   3c168:	subs	r9, r9, #1
   3c16c:	add	r2, r2, #4
   3c170:	beq	3c0ac <GetDataSlab+0xc12c>
   3c174:	ldr	r3, [r0, r2]
   3c178:	add	r3, r3, #1
   3c17c:	str	r3, [r0, r2]
   3c180:	ldr	r5, [r4, r2]
   3c184:	sdiv	r6, r3, r5
   3c188:	mls	r3, r6, r5, r3
   3c18c:	cmp	r3, #0
   3c190:	bne	3c09c <GetDataSlab+0xc11c>
   3c194:	mov	r3, #0
   3c198:	str	r3, [r0, r2]
   3c19c:	ldr	r3, [sp, #84]	; 0x54
   3c1a0:	ldr	r3, [r3, r2]
   3c1a4:	sdiv	r5, r7, r3
   3c1a8:	mls	r5, r5, r3, r7
   3c1ac:	cmp	r5, #0
   3c1b0:	bne	3c14c <GetDataSlab+0xc1cc>
   3c1b4:	ldr	r3, [lr, r2]
   3c1b8:	cmp	r3, #0
   3c1bc:	beq	3c168 <GetDataSlab+0xc1e8>
   3c1c0:	ldr	r6, [ip, r2]
   3c1c4:	mla	r7, r6, r3, r7
   3c1c8:	mla	sl, r6, r3, sl
   3c1cc:	b	3c168 <GetDataSlab+0xc1e8>
   3c1d0:	ldr	r0, [sp, #80]	; 0x50
   3c1d4:	cmp	r5, #1
   3c1d8:	add	sl, r0, r7
   3c1dc:	bne	48e58 <GetDataSlab+0x18ed8>
   3c1e0:	ldr	r0, [sp, #76]	; 0x4c
   3c1e4:	ldr	r3, [fp, #20]
   3c1e8:	sub	r2, fp, #176	; 0xb0
   3c1ec:	cmp	r0, #1
   3c1f0:	blt	56c18 <GetDataSlab+0x26c98>
   3c1f4:	orr	r2, r2, #4
   3c1f8:	ldr	lr, [fp, #12]
   3c1fc:	sub	r0, fp, #136	; 0x88
   3c200:	add	r4, r3, #4
   3c204:	str	r2, [sp, #84]	; 0x54
   3c208:	ldr	r2, [fp, #24]
   3c20c:	orr	r0, r0, #4
   3c210:	sub	r2, r2, #1
   3c214:	str	r2, [sp, #68]	; 0x44
   3c218:	orr	r2, r8, #4
   3c21c:	mov	r8, #0
   3c220:	str	r2, [sp, #64]	; 0x40
   3c224:	ldr	r2, [lr], #4
   3c228:	str	r2, [sp, #80]	; 0x50
   3c22c:	b	3c254 <GetDataSlab+0xc2d4>
   3c230:	ldr	r3, [sp, #64]	; 0x40
   3c234:	ldr	r2, [r3, r2]
   3c238:	add	sl, sl, r2
   3c23c:	add	r7, r2, r7
   3c240:	ldr	r2, [sp, #76]	; 0x4c
   3c244:	add	r8, r1, r8
   3c248:	cmp	r8, r2
   3c24c:	mov	r2, #0
   3c250:	bge	56c1c <GetDataSlab+0x26c9c>
   3c254:	ldr	r6, [sp, #80]	; 0x50
   3c258:	ldr	r5, [fp, #20]
   3c25c:	ldr	r2, [sp, #72]	; 0x48
   3c260:	cmp	r1, #1
   3c264:	sub	ip, fp, #176	; 0xb0
   3c268:	add	r3, r6, r7
   3c26c:	add	r7, sl, r6
   3c270:	blt	3c2b4 <GetDataSlab+0xc334>
   3c274:	ldr	r1, [sp, #88]	; 0x58
   3c278:	mov	r9, r4
   3c27c:	mov	r2, #0
   3c280:	add	r4, r1, r8, lsl #2
   3c284:	add	r1, r7, r2
   3c288:	ldrsb	r1, [r1]
   3c28c:	str	r1, [r4, r2, lsl #2]
   3c290:	add	r2, r2, #1
   3c294:	ldr	r1, [r5]
   3c298:	cmp	r2, r1
   3c29c:	blt	3c284 <GetDataSlab+0xc304>
   3c2a0:	ldr	r2, [fp, #12]
   3c2a4:	mov	r4, r9
   3c2a8:	ldr	r6, [r2]
   3c2ac:	ldr	r2, [fp, #8]
   3c2b0:	ldr	r2, [r2]
   3c2b4:	str	r2, [sp, #72]	; 0x48
   3c2b8:	sub	r2, r2, r6
   3c2bc:	str	r6, [sp, #80]	; 0x50
   3c2c0:	add	sl, r7, r2
   3c2c4:	add	r7, r3, r2
   3c2c8:	ldr	r2, [fp, #24]
   3c2cc:	cmp	r2, #2
   3c2d0:	blt	3c240 <GetDataSlab+0xc2c0>
   3c2d4:	ldr	r9, [sp, #68]	; 0x44
   3c2d8:	mov	r2, #0
   3c2dc:	b	3c308 <GetDataSlab+0xc388>
   3c2e0:	ldr	r6, [ip, r2]
   3c2e4:	ldr	ip, [lr, r2]
   3c2e8:	sub	r3, r3, r5
   3c2ec:	mla	r3, ip, r6, r3
   3c2f0:	sub	ip, fp, #176	; 0xb0
   3c2f4:	add	r7, r3, r7
   3c2f8:	add	sl, sl, r3
   3c2fc:	subs	r9, r9, #1
   3c300:	add	r2, r2, #4
   3c304:	beq	3c240 <GetDataSlab+0xc2c0>
   3c308:	ldr	r3, [r0, r2]
   3c30c:	add	r3, r3, #1
   3c310:	str	r3, [r0, r2]
   3c314:	ldr	r5, [r4, r2]
   3c318:	sdiv	r6, r3, r5
   3c31c:	mls	r3, r6, r5, r3
   3c320:	cmp	r3, #0
   3c324:	bne	3c230 <GetDataSlab+0xc2b0>
   3c328:	mov	r3, #0
   3c32c:	str	r3, [r0, r2]
   3c330:	ldr	r3, [sp, #84]	; 0x54
   3c334:	ldr	r3, [r3, r2]
   3c338:	sdiv	r5, r7, r3
   3c33c:	mls	r5, r5, r3, r7
   3c340:	cmp	r5, #0
   3c344:	bne	3c2e0 <GetDataSlab+0xc360>
   3c348:	ldr	r3, [lr, r2]
   3c34c:	cmp	r3, #0
   3c350:	beq	3c2fc <GetDataSlab+0xc37c>
   3c354:	ldr	r6, [ip, r2]
   3c358:	mla	r7, r6, r3, r7
   3c35c:	mla	sl, r6, r3, sl
   3c360:	b	3c2fc <GetDataSlab+0xc37c>
   3c364:	ldr	r0, [sp, #80]	; 0x50
   3c368:	cmp	r9, #1
   3c36c:	add	ip, r0, r7
   3c370:	bne	49004 <GetDataSlab+0x19084>
   3c374:	ldr	r0, [sp, #76]	; 0x4c
   3c378:	ldr	r2, [fp, #12]
   3c37c:	ldr	lr, [sp, #48]	; 0x30
   3c380:	sub	r3, fp, #96	; 0x60
   3c384:	cmp	r0, #1
   3c388:	ldr	r0, [sp, #72]	; 0x48
   3c38c:	blt	56c18 <GetDataSlab+0x26c98>
   3c390:	sub	r0, r0, #2
   3c394:	mov	r1, #1
   3c398:	ldr	sl, [sp, #88]	; 0x58
   3c39c:	add	r1, r1, r0, lsr #1
   3c3a0:	lsr	r0, r0, #1
   3c3a4:	str	r0, [sp, #28]
   3c3a8:	mov	r0, #0
   3c3ac:	and	r4, r1, #1
   3c3b0:	str	r0, [sp, #68]	; 0x44
   3c3b4:	mov	r0, #0
   3c3b8:	sub	r1, r1, r4
   3c3bc:	str	r4, [sp, #36]	; 0x24
   3c3c0:	str	r0, [sp, #80]	; 0x50
   3c3c4:	str	r1, [sp, #16]
   3c3c8:	sub	r1, fp, #136	; 0x88
   3c3cc:	orr	r4, r1, #4
   3c3d0:	ldr	r1, [fp, #20]
   3c3d4:	add	r9, r1, #4
   3c3d8:	sub	r1, fp, #176	; 0xb0
   3c3dc:	orr	r8, r1, #4
   3c3e0:	add	r1, r2, #4
   3c3e4:	orr	r2, r3, #4
   3c3e8:	str	r9, [sp, #20]
   3c3ec:	str	r1, [sp, #84]	; 0x54
   3c3f0:	ldr	r1, [fp, #24]
   3c3f4:	str	r2, [sp, #40]	; 0x28
   3c3f8:	str	r8, [sp, #24]
   3c3fc:	sub	r1, r1, #1
   3c400:	str	r1, [sp, #52]	; 0x34
   3c404:	ldr	r1, [sp, #72]	; 0x48
   3c408:	lsl	r2, r1, #3
   3c40c:	str	r2, [sp, #64]	; 0x40
   3c410:	and	r2, r1, #1
   3c414:	str	r2, [sp, #56]	; 0x38
   3c418:	bic	r2, r1, #1
   3c41c:	str	r2, [sp, #32]
   3c420:	b	3c468 <GetDataSlab+0xc4e8>
   3c424:	ldr	r0, [sp, #40]	; 0x28
   3c428:	ldr	r0, [r0, r2]
   3c42c:	add	ip, ip, r0
   3c430:	add	r7, r0, r7
   3c434:	ldr	r0, [sp, #64]	; 0x40
   3c438:	ldr	r1, [sp, #72]	; 0x48
   3c43c:	ldr	r3, [sp, #80]	; 0x50
   3c440:	mov	r2, #0
   3c444:	add	sl, sl, r0
   3c448:	ldr	r0, [sp, #68]	; 0x44
   3c44c:	add	r3, r3, r1
   3c450:	str	r3, [sp, #80]	; 0x50
   3c454:	add	r0, r0, #1
   3c458:	str	r0, [sp, #68]	; 0x44
   3c45c:	ldr	r0, [sp, #76]	; 0x4c
   3c460:	cmp	r3, r0
   3c464:	bge	56c1c <GetDataSlab+0x26c9c>
   3c468:	ldr	r6, [sp, #88]	; 0x58
   3c46c:	ldr	r0, [fp, #12]
   3c470:	cmp	r1, #1
   3c474:	blt	3c62c <GetDataSlab+0xc6ac>
   3c478:	ldr	r5, [r0]
   3c47c:	ldr	r0, [sp, #80]	; 0x50
   3c480:	mov	r2, #0
   3c484:	add	r0, r6, r0, lsl #3
   3c488:	add	r3, ip, r5
   3c48c:	str	r0, [sp, #60]	; 0x3c
   3c490:	beq	3c5a4 <GetDataSlab+0xc624>
   3c494:	ldr	r0, [sp, #64]	; 0x40
   3c498:	ldr	r1, [sp, #68]	; 0x44
   3c49c:	mla	r0, r0, r1, r6
   3c4a0:	ldr	r1, [sp, #72]	; 0x48
   3c4a4:	add	r1, ip, r1
   3c4a8:	add	r1, r1, r5
   3c4ac:	cmp	r0, r1
   3c4b0:	bcs	3c4cc <GetDataSlab+0xc54c>
   3c4b4:	ldr	r0, [sp, #64]	; 0x40
   3c4b8:	ldr	r1, [sp, #68]	; 0x44
   3c4bc:	mla	r0, r0, r1, r0
   3c4c0:	add	r0, r6, r0
   3c4c4:	cmp	r3, r0
   3c4c8:	bcc	3c5a4 <GetDataSlab+0xc624>
   3c4cc:	ldr	r0, [sp, #28]
   3c4d0:	mov	r2, #0
   3c4d4:	str	r5, [sp, #44]	; 0x2c
   3c4d8:	cmp	r0, #0
   3c4dc:	beq	3c548 <GetDataSlab+0xc5c8>
   3c4e0:	ldr	lr, [sp, #16]
   3c4e4:	mov	r8, sl
   3c4e8:	add	r5, sp, #528	; 0x210
   3c4ec:	mov	r9, #32
   3c4f0:	sub	r6, fp, #384	; 0x180
   3c4f4:	mov	r0, r3
   3c4f8:	subs	lr, lr, #2
   3c4fc:	ldrh	r1, [r0, r2]!
   3c500:	add	r2, r2, #4
   3c504:	strh	r1, [r5, #140]	; 0x8c
   3c508:	sub	r1, fp, #388	; 0x184
   3c50c:	vld1.16	{d16[0]}, [r1 :16]
   3c510:	add	r1, r8, #16
   3c514:	vmovl.s8	q8, d16
   3c518:	vmovl.s16	q8, d16
   3c51c:	vmovl.s32	q8, d16
   3c520:	vst1.64	{d16-d17}, [r8], r9
   3c524:	ldrh	r0, [r0, #2]
   3c528:	strh	r0, [r5, #144]	; 0x90
   3c52c:	vld1.16	{d16[0]}, [r6 :16]
   3c530:	vmovl.s8	q8, d16
   3c534:	vmovl.s16	q8, d16
   3c538:	vmovl.s32	q8, d16
   3c53c:	vst1.64	{d16-d17}, [r1]
   3c540:	bne	3c4f4 <GetDataSlab+0xc574>
   3c544:	b	3c54c <GetDataSlab+0xc5cc>
   3c548:	add	r5, sp, #528	; 0x210
   3c54c:	ldr	r0, [sp, #36]	; 0x24
   3c550:	ldr	lr, [sp, #48]	; 0x30
   3c554:	ldr	r8, [sp, #24]
   3c558:	ldr	r9, [sp, #20]
   3c55c:	cmp	r0, #0
   3c560:	beq	3c590 <GetDataSlab+0xc610>
   3c564:	add	r0, r3, r2
   3c568:	ldrh	r0, [r0]
   3c56c:	strh	r0, [r5, #136]	; 0x88
   3c570:	sub	r0, fp, #392	; 0x188
   3c574:	vld1.16	{d16[0]}, [r0 :16]
   3c578:	ldr	r0, [sp, #60]	; 0x3c
   3c57c:	add	r0, r0, r2, lsl #3
   3c580:	vmovl.s8	q8, d16
   3c584:	vmovl.s16	q8, d16
   3c588:	vmovl.s32	q8, d16
   3c58c:	vst1.64	{d16-d17}, [r0]
   3c590:	ldr	r0, [sp, #72]	; 0x48
   3c594:	ldr	r2, [sp, #32]
   3c598:	ldr	r5, [sp, #44]	; 0x2c
   3c59c:	cmp	r0, r2
   3c5a0:	beq	3c62c <GetDataSlab+0xc6ac>
   3c5a4:	ldr	r0, [sp, #56]	; 0x38
   3c5a8:	cmp	r0, #0
   3c5ac:	mov	r0, r2
   3c5b0:	beq	3c5d0 <GetDataSlab+0xc650>
   3c5b4:	add	r0, r3, r2
   3c5b8:	ldr	r1, [sp, #60]	; 0x3c
   3c5bc:	ldrsb	r0, [r0]
   3c5c0:	str	r0, [r1, r2, lsl #3]!
   3c5c4:	asr	r0, r0, #31
   3c5c8:	str	r0, [r1, #4]
   3c5cc:	orr	r0, r2, #1
   3c5d0:	orr	r1, r2, #1
   3c5d4:	ldr	r2, [sp, #72]	; 0x48
   3c5d8:	cmp	r2, r1
   3c5dc:	beq	3c62c <GetDataSlab+0xc6ac>
   3c5e0:	ldr	r1, [sp, #72]	; 0x48
   3c5e4:	sub	r2, r1, r0
   3c5e8:	add	r1, r0, r5
   3c5ec:	lsl	r0, r0, #3
   3c5f0:	add	r1, ip, r1
   3c5f4:	add	r3, r1, #1
   3c5f8:	ldrsb	r1, [r3, #-1]
   3c5fc:	mov	r6, sl
   3c600:	subs	r2, r2, #2
   3c604:	str	r1, [r6, r0]!
   3c608:	asr	r1, r1, #31
   3c60c:	add	r0, r0, #16
   3c610:	str	r1, [r6, #4]
   3c614:	ldrsb	r1, [r3]
   3c618:	add	r3, r3, #2
   3c61c:	str	r1, [r6, #8]
   3c620:	asr	r1, r1, #31
   3c624:	str	r1, [r6, #12]
   3c628:	bne	3c5f8 <GetDataSlab+0xc678>
   3c62c:	ldr	r0, [fp, #24]
   3c630:	add	ip, ip, lr
   3c634:	add	r7, r7, lr
   3c638:	cmp	r0, #2
   3c63c:	blt	3c434 <GetDataSlab+0xc4b4>
   3c640:	ldr	r3, [sp, #52]	; 0x34
   3c644:	mov	r2, #0
   3c648:	b	3c678 <GetDataSlab+0xc6f8>
   3c64c:	ldr	r5, [sp, #84]	; 0x54
   3c650:	sub	r6, fp, #176	; 0xb0
   3c654:	sub	r0, r0, r1
   3c658:	ldr	r6, [r6, r2]
   3c65c:	ldr	r5, [r5, r2]
   3c660:	mla	r0, r5, r6, r0
   3c664:	add	r7, r0, r7
   3c668:	add	ip, ip, r0
   3c66c:	subs	r3, r3, #1
   3c670:	add	r2, r2, #4
   3c674:	beq	3c434 <GetDataSlab+0xc4b4>
   3c678:	ldr	r0, [r4, r2]
   3c67c:	add	r0, r0, #1
   3c680:	str	r0, [r4, r2]
   3c684:	ldr	r1, [r9, r2]
   3c688:	sdiv	r6, r0, r1
   3c68c:	mls	r0, r6, r1, r0
   3c690:	cmp	r0, #0
   3c694:	bne	3c424 <GetDataSlab+0xc4a4>
   3c698:	mov	r0, #0
   3c69c:	str	r0, [r4, r2]
   3c6a0:	ldr	r0, [r8, r2]
   3c6a4:	sdiv	r1, r7, r0
   3c6a8:	mls	r1, r1, r0, r7
   3c6ac:	cmp	r1, #0
   3c6b0:	bne	3c64c <GetDataSlab+0xc6cc>
   3c6b4:	ldr	r0, [sp, #84]	; 0x54
   3c6b8:	ldr	r0, [r0, r2]
   3c6bc:	cmp	r0, #0
   3c6c0:	beq	3c66c <GetDataSlab+0xc6ec>
   3c6c4:	sub	r1, fp, #176	; 0xb0
   3c6c8:	ldr	r1, [r1, r2]
   3c6cc:	mla	r7, r1, r0, r7
   3c6d0:	mla	ip, r1, r0, ip
   3c6d4:	b	3c66c <GetDataSlab+0xc6ec>
   3c6d8:	ldr	r0, [sp, #80]	; 0x50
   3c6dc:	cmp	r9, #1
   3c6e0:	add	ip, r0, r7
   3c6e4:	bne	49218 <GetDataSlab+0x19298>
   3c6e8:	ldr	r0, [sp, #76]	; 0x4c
   3c6ec:	ldr	r2, [fp, #12]
   3c6f0:	ldr	lr, [sp, #48]	; 0x30
   3c6f4:	sub	r3, fp, #96	; 0x60
   3c6f8:	cmp	r0, #1
   3c6fc:	ldr	r0, [sp, #72]	; 0x48
   3c700:	blt	56c18 <GetDataSlab+0x26c98>
   3c704:	sub	r0, r0, #2
   3c708:	mov	r1, #1
   3c70c:	ldr	sl, [sp, #88]	; 0x58
   3c710:	add	r1, r1, r0, lsr #1
   3c714:	lsr	r0, r0, #1
   3c718:	str	r0, [sp, #28]
   3c71c:	mov	r0, #0
   3c720:	and	r4, r1, #1
   3c724:	str	r0, [sp, #68]	; 0x44
   3c728:	mov	r0, #0
   3c72c:	sub	r1, r1, r4
   3c730:	str	r4, [sp, #36]	; 0x24
   3c734:	str	r0, [sp, #80]	; 0x50
   3c738:	str	r1, [sp, #16]
   3c73c:	sub	r1, fp, #136	; 0x88
   3c740:	orr	r4, r1, #4
   3c744:	ldr	r1, [fp, #20]
   3c748:	add	r9, r1, #4
   3c74c:	sub	r1, fp, #176	; 0xb0
   3c750:	orr	r8, r1, #4
   3c754:	add	r1, r2, #4
   3c758:	orr	r2, r3, #4
   3c75c:	str	r9, [sp, #20]
   3c760:	str	r1, [sp, #84]	; 0x54
   3c764:	ldr	r1, [fp, #24]
   3c768:	str	r2, [sp, #40]	; 0x28
   3c76c:	str	r8, [sp, #24]
   3c770:	sub	r1, r1, #1
   3c774:	str	r1, [sp, #52]	; 0x34
   3c778:	ldr	r1, [sp, #72]	; 0x48
   3c77c:	lsl	r2, r1, #3
   3c780:	str	r2, [sp, #64]	; 0x40
   3c784:	and	r2, r1, #1
   3c788:	str	r2, [sp, #56]	; 0x38
   3c78c:	bic	r2, r1, #1
   3c790:	str	r2, [sp, #32]
   3c794:	b	3c7dc <GetDataSlab+0xc85c>
   3c798:	ldr	r0, [sp, #40]	; 0x28
   3c79c:	ldr	r0, [r0, r2]
   3c7a0:	add	ip, ip, r0
   3c7a4:	add	r7, r0, r7
   3c7a8:	ldr	r0, [sp, #64]	; 0x40
   3c7ac:	ldr	r1, [sp, #72]	; 0x48
   3c7b0:	ldr	r3, [sp, #80]	; 0x50
   3c7b4:	mov	r2, #0
   3c7b8:	add	sl, sl, r0
   3c7bc:	ldr	r0, [sp, #68]	; 0x44
   3c7c0:	add	r3, r3, r1
   3c7c4:	str	r3, [sp, #80]	; 0x50
   3c7c8:	add	r0, r0, #1
   3c7cc:	str	r0, [sp, #68]	; 0x44
   3c7d0:	ldr	r0, [sp, #76]	; 0x4c
   3c7d4:	cmp	r3, r0
   3c7d8:	bge	56c1c <GetDataSlab+0x26c9c>
   3c7dc:	ldr	r6, [sp, #88]	; 0x58
   3c7e0:	ldr	r0, [fp, #12]
   3c7e4:	cmp	r1, #1
   3c7e8:	blt	3c9a0 <GetDataSlab+0xca20>
   3c7ec:	ldr	r5, [r0]
   3c7f0:	ldr	r0, [sp, #80]	; 0x50
   3c7f4:	mov	r2, #0
   3c7f8:	add	r0, r6, r0, lsl #3
   3c7fc:	add	r3, ip, r5
   3c800:	str	r0, [sp, #60]	; 0x3c
   3c804:	beq	3c918 <GetDataSlab+0xc998>
   3c808:	ldr	r0, [sp, #64]	; 0x40
   3c80c:	ldr	r1, [sp, #68]	; 0x44
   3c810:	mla	r0, r0, r1, r6
   3c814:	ldr	r1, [sp, #72]	; 0x48
   3c818:	add	r1, ip, r1
   3c81c:	add	r1, r1, r5
   3c820:	cmp	r0, r1
   3c824:	bcs	3c840 <GetDataSlab+0xc8c0>
   3c828:	ldr	r0, [sp, #64]	; 0x40
   3c82c:	ldr	r1, [sp, #68]	; 0x44
   3c830:	mla	r0, r0, r1, r0
   3c834:	add	r0, r6, r0
   3c838:	cmp	r3, r0
   3c83c:	bcc	3c918 <GetDataSlab+0xc998>
   3c840:	ldr	r0, [sp, #28]
   3c844:	mov	r2, #0
   3c848:	str	r5, [sp, #44]	; 0x2c
   3c84c:	cmp	r0, #0
   3c850:	beq	3c8bc <GetDataSlab+0xc93c>
   3c854:	ldr	lr, [sp, #16]
   3c858:	mov	r8, sl
   3c85c:	add	r5, sp, #528	; 0x210
   3c860:	mov	r9, #32
   3c864:	sub	r6, fp, #288	; 0x120
   3c868:	mov	r0, r3
   3c86c:	subs	lr, lr, #2
   3c870:	ldrh	r1, [r0, r2]!
   3c874:	add	r2, r2, #4
   3c878:	strh	r1, [r5, #236]	; 0xec
   3c87c:	sub	r1, fp, #292	; 0x124
   3c880:	vld1.16	{d16[0]}, [r1 :16]
   3c884:	add	r1, r8, #16
   3c888:	vmovl.s8	q8, d16
   3c88c:	vmovl.s16	q8, d16
   3c890:	vmovl.s32	q8, d16
   3c894:	vst1.64	{d16-d17}, [r8], r9
   3c898:	ldrh	r0, [r0, #2]
   3c89c:	strh	r0, [r5, #240]	; 0xf0
   3c8a0:	vld1.16	{d16[0]}, [r6 :16]
   3c8a4:	vmovl.s8	q8, d16
   3c8a8:	vmovl.s16	q8, d16
   3c8ac:	vmovl.s32	q8, d16
   3c8b0:	vst1.64	{d16-d17}, [r1]
   3c8b4:	bne	3c868 <GetDataSlab+0xc8e8>
   3c8b8:	b	3c8c0 <GetDataSlab+0xc940>
   3c8bc:	add	r5, sp, #528	; 0x210
   3c8c0:	ldr	r0, [sp, #36]	; 0x24
   3c8c4:	ldr	lr, [sp, #48]	; 0x30
   3c8c8:	ldr	r8, [sp, #24]
   3c8cc:	ldr	r9, [sp, #20]
   3c8d0:	cmp	r0, #0
   3c8d4:	beq	3c904 <GetDataSlab+0xc984>
   3c8d8:	add	r0, r3, r2
   3c8dc:	ldrh	r0, [r0]
   3c8e0:	strh	r0, [r5, #232]	; 0xe8
   3c8e4:	sub	r0, fp, #296	; 0x128
   3c8e8:	vld1.16	{d16[0]}, [r0 :16]
   3c8ec:	ldr	r0, [sp, #60]	; 0x3c
   3c8f0:	add	r0, r0, r2, lsl #3
   3c8f4:	vmovl.s8	q8, d16
   3c8f8:	vmovl.s16	q8, d16
   3c8fc:	vmovl.s32	q8, d16
   3c900:	vst1.64	{d16-d17}, [r0]
   3c904:	ldr	r0, [sp, #72]	; 0x48
   3c908:	ldr	r2, [sp, #32]
   3c90c:	ldr	r5, [sp, #44]	; 0x2c
   3c910:	cmp	r0, r2
   3c914:	beq	3c9a0 <GetDataSlab+0xca20>
   3c918:	ldr	r0, [sp, #56]	; 0x38
   3c91c:	cmp	r0, #0
   3c920:	mov	r0, r2
   3c924:	beq	3c944 <GetDataSlab+0xc9c4>
   3c928:	add	r0, r3, r2
   3c92c:	ldr	r1, [sp, #60]	; 0x3c
   3c930:	ldrsb	r0, [r0]
   3c934:	str	r0, [r1, r2, lsl #3]!
   3c938:	asr	r0, r0, #31
   3c93c:	str	r0, [r1, #4]
   3c940:	orr	r0, r2, #1
   3c944:	orr	r1, r2, #1
   3c948:	ldr	r2, [sp, #72]	; 0x48
   3c94c:	cmp	r2, r1
   3c950:	beq	3c9a0 <GetDataSlab+0xca20>
   3c954:	ldr	r1, [sp, #72]	; 0x48
   3c958:	sub	r2, r1, r0
   3c95c:	add	r1, r0, r5
   3c960:	lsl	r0, r0, #3
   3c964:	add	r1, ip, r1
   3c968:	add	r3, r1, #1
   3c96c:	ldrsb	r1, [r3, #-1]
   3c970:	mov	r6, sl
   3c974:	subs	r2, r2, #2
   3c978:	str	r1, [r6, r0]!
   3c97c:	asr	r1, r1, #31
   3c980:	add	r0, r0, #16
   3c984:	str	r1, [r6, #4]
   3c988:	ldrsb	r1, [r3]
   3c98c:	add	r3, r3, #2
   3c990:	str	r1, [r6, #8]
   3c994:	asr	r1, r1, #31
   3c998:	str	r1, [r6, #12]
   3c99c:	bne	3c96c <GetDataSlab+0xc9ec>
   3c9a0:	ldr	r0, [fp, #24]
   3c9a4:	add	ip, ip, lr
   3c9a8:	add	r7, r7, lr
   3c9ac:	cmp	r0, #2
   3c9b0:	blt	3c7a8 <GetDataSlab+0xc828>
   3c9b4:	ldr	r3, [sp, #52]	; 0x34
   3c9b8:	mov	r2, #0
   3c9bc:	b	3c9ec <GetDataSlab+0xca6c>
   3c9c0:	ldr	r5, [sp, #84]	; 0x54
   3c9c4:	sub	r6, fp, #176	; 0xb0
   3c9c8:	sub	r0, r0, r1
   3c9cc:	ldr	r6, [r6, r2]
   3c9d0:	ldr	r5, [r5, r2]
   3c9d4:	mla	r0, r5, r6, r0
   3c9d8:	add	r7, r0, r7
   3c9dc:	add	ip, ip, r0
   3c9e0:	subs	r3, r3, #1
   3c9e4:	add	r2, r2, #4
   3c9e8:	beq	3c7a8 <GetDataSlab+0xc828>
   3c9ec:	ldr	r0, [r4, r2]
   3c9f0:	add	r0, r0, #1
   3c9f4:	str	r0, [r4, r2]
   3c9f8:	ldr	r1, [r9, r2]
   3c9fc:	sdiv	r6, r0, r1
   3ca00:	mls	r0, r6, r1, r0
   3ca04:	cmp	r0, #0
   3ca08:	bne	3c798 <GetDataSlab+0xc818>
   3ca0c:	mov	r0, #0
   3ca10:	str	r0, [r4, r2]
   3ca14:	ldr	r0, [r8, r2]
   3ca18:	sdiv	r1, r7, r0
   3ca1c:	mls	r1, r1, r0, r7
   3ca20:	cmp	r1, #0
   3ca24:	bne	3c9c0 <GetDataSlab+0xca40>
   3ca28:	ldr	r0, [sp, #84]	; 0x54
   3ca2c:	ldr	r0, [r0, r2]
   3ca30:	cmp	r0, #0
   3ca34:	beq	3c9e0 <GetDataSlab+0xca60>
   3ca38:	sub	r1, fp, #176	; 0xb0
   3ca3c:	ldr	r1, [r1, r2]
   3ca40:	mla	r7, r1, r0, r7
   3ca44:	mla	ip, r1, r0, ip
   3ca48:	b	3c9e0 <GetDataSlab+0xca60>
   3ca4c:	ldr	r0, [sp, #80]	; 0x50
   3ca50:	cmp	sl, #1
   3ca54:	add	r8, r0, r5
   3ca58:	bne	4942c <GetDataSlab+0x194ac>
   3ca5c:	ldr	r0, [sp, #76]	; 0x4c
   3ca60:	ldr	r2, [fp, #20]
   3ca64:	cmp	r0, #1
   3ca68:	blt	56c18 <GetDataSlab+0x26c98>
   3ca6c:	ldr	r3, [sp, #72]	; 0x48
   3ca70:	mov	r1, #1
   3ca74:	ldr	lr, [sp, #40]	; 0x28
   3ca78:	orr	sl, ip, #4
   3ca7c:	add	r9, r2, #4
   3ca80:	str	sl, [sp, #20]
   3ca84:	sub	r0, r3, #2
   3ca88:	add	r1, r1, r0, lsr #1
   3ca8c:	lsr	r0, r0, #1
   3ca90:	str	r0, [sp, #24]
   3ca94:	ldr	r0, [sp, #88]	; 0x58
   3ca98:	and	r7, r1, #1
   3ca9c:	sub	r1, r1, r7
   3caa0:	str	r7, [sp, #32]
   3caa4:	str	r1, [sp, #16]
   3caa8:	sub	r1, fp, #136	; 0x88
   3caac:	orr	r4, r1, #4
   3cab0:	ldr	r1, [fp, #12]
   3cab4:	str	r0, [sp, #64]	; 0x40
   3cab8:	mov	r0, #0
   3cabc:	str	r0, [sp, #68]	; 0x44
   3cac0:	mov	r0, #0
   3cac4:	str	r0, [sp, #80]	; 0x50
   3cac8:	add	r1, r1, #4
   3cacc:	str	r1, [sp, #84]	; 0x54
   3cad0:	ldr	r1, [fp, #24]
   3cad4:	sub	r1, r1, #1
   3cad8:	str	r1, [sp, #44]	; 0x2c
   3cadc:	sub	r1, fp, #96	; 0x60
   3cae0:	orr	r1, r1, #4
   3cae4:	str	r1, [sp, #36]	; 0x24
   3cae8:	lsl	r1, r3, #3
   3caec:	str	r1, [sp, #60]	; 0x3c
   3caf0:	and	r1, r3, #1
   3caf4:	str	r1, [sp, #48]	; 0x30
   3caf8:	bic	r1, r3, #1
   3cafc:	str	r1, [sp, #28]
   3cb00:	b	3cb50 <GetDataSlab+0xcbd0>
   3cb04:	ldr	r0, [sp, #36]	; 0x24
   3cb08:	ldr	r0, [r0, r2]
   3cb0c:	add	r8, r8, r0
   3cb10:	add	r5, r0, r5
   3cb14:	ldr	r0, [sp, #60]	; 0x3c
   3cb18:	ldr	r1, [sp, #64]	; 0x40
   3cb1c:	ldr	r3, [sp, #72]	; 0x48
   3cb20:	mov	r2, #0
   3cb24:	add	r1, r1, r0
   3cb28:	ldr	r0, [sp, #68]	; 0x44
   3cb2c:	str	r1, [sp, #64]	; 0x40
   3cb30:	ldr	r1, [sp, #80]	; 0x50
   3cb34:	add	r0, r0, #1
   3cb38:	str	r0, [sp, #68]	; 0x44
   3cb3c:	ldr	r0, [sp, #76]	; 0x4c
   3cb40:	add	r1, r1, r3
   3cb44:	str	r1, [sp, #80]	; 0x50
   3cb48:	cmp	r1, r0
   3cb4c:	bge	56c1c <GetDataSlab+0x26c9c>
   3cb50:	cmp	r3, #1
   3cb54:	sub	ip, fp, #176	; 0xb0
   3cb58:	add	r6, sp, #528	; 0x210
   3cb5c:	blt	3cd2c <GetDataSlab+0xcdac>
   3cb60:	ldr	r0, [fp, #12]
   3cb64:	ldr	r1, [sp, #80]	; 0x50
   3cb68:	ldr	r7, [r0]
   3cb6c:	ldr	r0, [sp, #88]	; 0x58
   3cb70:	add	r1, r0, r1, lsl #3
   3cb74:	add	r3, r8, r7
   3cb78:	str	r1, [sp, #56]	; 0x38
   3cb7c:	mov	r1, #0
   3cb80:	beq	3cca4 <GetDataSlab+0xcd24>
   3cb84:	str	r7, [sp, #52]	; 0x34
   3cb88:	ldr	r2, [sp, #60]	; 0x3c
   3cb8c:	ldr	r7, [sp, #68]	; 0x44
   3cb90:	mla	r0, r2, r7, r0
   3cb94:	ldr	r2, [sp, #72]	; 0x48
   3cb98:	ldr	r7, [sp, #52]	; 0x34
   3cb9c:	add	r2, r8, r2
   3cba0:	add	r2, r2, r7
   3cba4:	cmp	r0, r2
   3cba8:	bcs	3cbc8 <GetDataSlab+0xcc48>
   3cbac:	ldr	r0, [sp, #60]	; 0x3c
   3cbb0:	ldr	r2, [sp, #68]	; 0x44
   3cbb4:	mla	r0, r0, r2, r0
   3cbb8:	ldr	r2, [sp, #88]	; 0x58
   3cbbc:	add	r0, r2, r0
   3cbc0:	cmp	r3, r0
   3cbc4:	bcc	3cca4 <GetDataSlab+0xcd24>
   3cbc8:	ldr	r0, [sp, #24]
   3cbcc:	mov	r2, #0
   3cbd0:	cmp	r0, #0
   3cbd4:	beq	3cc44 <GetDataSlab+0xccc4>
   3cbd8:	ldr	sl, [sp, #64]	; 0x40
   3cbdc:	ldr	r1, [sp, #16]
   3cbe0:	mov	ip, sl
   3cbe4:	mov	r0, r3
   3cbe8:	mov	r7, #32
   3cbec:	subs	r1, r1, #2
   3cbf0:	ldrh	lr, [r0, r2]!
   3cbf4:	add	r2, r2, #4
   3cbf8:	strh	lr, [r6]
   3cbfc:	vld1.16	{d16[0]}, [r6 :16]
   3cc00:	vmovl.u8	q8, d16
   3cc04:	vmovl.u16	q0, d16
   3cc08:	vcvt.f64.u32	d17, s1
   3cc0c:	vcvt.f64.u32	d16, s0
   3cc10:	vst1.64	{d16-d17}, [ip], r7
   3cc14:	ldrh	r0, [r0, #2]
   3cc18:	strh	r0, [r6, #4]
   3cc1c:	sub	r0, fp, #524	; 0x20c
   3cc20:	vld1.16	{d16[0]}, [r0 :16]
   3cc24:	add	r0, sl, #16
   3cc28:	mov	sl, ip
   3cc2c:	vmovl.u8	q8, d16
   3cc30:	vmovl.u16	q0, d16
   3cc34:	vcvt.f64.u32	d17, s1
   3cc38:	vcvt.f64.u32	d16, s0
   3cc3c:	vst1.64	{d16-d17}, [r0]
   3cc40:	bne	3cbe4 <GetDataSlab+0xcc64>
   3cc44:	ldr	r0, [sp, #32]
   3cc48:	ldr	lr, [sp, #40]	; 0x28
   3cc4c:	ldr	sl, [sp, #20]
   3cc50:	ldr	r7, [sp, #52]	; 0x34
   3cc54:	sub	ip, fp, #176	; 0xb0
   3cc58:	add	r1, sp, #272	; 0x110
   3cc5c:	cmp	r0, #0
   3cc60:	beq	3cc94 <GetDataSlab+0xcd14>
   3cc64:	add	r0, r3, r2
   3cc68:	ldrh	r0, [r0]
   3cc6c:	strh	r0, [r1, #252]	; 0xfc
   3cc70:	add	r0, sp, #524	; 0x20c
   3cc74:	vld1.16	{d16[0]}, [r0 :16]
   3cc78:	vmovl.u8	q8, d16
   3cc7c:	vmovl.u16	q0, d16
   3cc80:	vcvt.f64.u32	d17, s1
   3cc84:	vcvt.f64.u32	d16, s0
   3cc88:	ldr	r0, [sp, #56]	; 0x38
   3cc8c:	add	r0, r0, r2, lsl #3
   3cc90:	vst1.64	{d16-d17}, [r0]
   3cc94:	ldr	r0, [sp, #72]	; 0x48
   3cc98:	ldr	r1, [sp, #28]
   3cc9c:	cmp	r0, r1
   3cca0:	beq	3cd2c <GetDataSlab+0xcdac>
   3cca4:	ldr	r0, [sp, #48]	; 0x30
   3cca8:	cmp	r0, #0
   3ccac:	mov	r0, r1
   3ccb0:	beq	3ccd0 <GetDataSlab+0xcd50>
   3ccb4:	ldrb	r2, [r3, r1]
   3ccb8:	ldr	r0, [sp, #56]	; 0x38
   3ccbc:	vmov	s0, r2
   3ccc0:	add	r0, r0, r1, lsl #3
   3ccc4:	vcvt.f64.u32	d16, s0
   3ccc8:	vstr	d16, [r0]
   3cccc:	orr	r0, r1, #1
   3ccd0:	ldr	r2, [sp, #72]	; 0x48
   3ccd4:	orr	r1, r1, #1
   3ccd8:	cmp	r2, r1
   3ccdc:	beq	3cd2c <GetDataSlab+0xcdac>
   3cce0:	ldr	r1, [sp, #64]	; 0x40
   3cce4:	ldr	r2, [sp, #72]	; 0x48
   3cce8:	add	r1, r1, r0, lsl #3
   3ccec:	sub	r2, r2, r0
   3ccf0:	add	r0, r0, r7
   3ccf4:	add	r0, r8, r0
   3ccf8:	add	r3, r0, #1
   3ccfc:	ldrb	r0, [r3, #-1]
   3cd00:	subs	r2, r2, #2
   3cd04:	vmov	s0, r0
   3cd08:	vcvt.f64.u32	d16, s0
   3cd0c:	vstr	d16, [r1]
   3cd10:	ldrb	r0, [r3]
   3cd14:	add	r3, r3, #2
   3cd18:	vmov	s0, r0
   3cd1c:	vcvt.f64.u32	d16, s0
   3cd20:	vstr	d16, [r1, #8]
   3cd24:	add	r1, r1, #16
   3cd28:	bne	3ccfc <GetDataSlab+0xcd7c>
   3cd2c:	ldr	r0, [fp, #24]
   3cd30:	add	r8, r8, lr
   3cd34:	add	r5, r5, lr
   3cd38:	cmp	r0, #2
   3cd3c:	blt	3cb14 <GetDataSlab+0xcb94>
   3cd40:	ldr	r3, [sp, #44]	; 0x2c
   3cd44:	mov	r2, #0
   3cd48:	b	3cd74 <GetDataSlab+0xcdf4>
   3cd4c:	ldr	r7, [sp, #84]	; 0x54
   3cd50:	ldr	r6, [ip, r2]
   3cd54:	sub	r0, r0, r1
   3cd58:	ldr	r7, [r7, r2]
   3cd5c:	mla	r0, r7, r6, r0
   3cd60:	add	r5, r0, r5
   3cd64:	add	r8, r8, r0
   3cd68:	subs	r3, r3, #1
   3cd6c:	add	r2, r2, #4
   3cd70:	beq	3cb14 <GetDataSlab+0xcb94>
   3cd74:	ldr	r0, [r4, r2]
   3cd78:	add	r0, r0, #1
   3cd7c:	str	r0, [r4, r2]
   3cd80:	ldr	r1, [r9, r2]
   3cd84:	sdiv	r6, r0, r1
   3cd88:	mls	r0, r6, r1, r0
   3cd8c:	cmp	r0, #0
   3cd90:	bne	3cb04 <GetDataSlab+0xcb84>
   3cd94:	mov	r0, #0
   3cd98:	str	r0, [r4, r2]
   3cd9c:	ldr	r0, [sl, r2]
   3cda0:	sdiv	r1, r5, r0
   3cda4:	mls	r1, r1, r0, r5
   3cda8:	cmp	r1, #0
   3cdac:	bne	3cd4c <GetDataSlab+0xcdcc>
   3cdb0:	ldr	r0, [sp, #84]	; 0x54
   3cdb4:	ldr	r0, [r0, r2]
   3cdb8:	cmp	r0, #0
   3cdbc:	beq	3cd68 <GetDataSlab+0xcde8>
   3cdc0:	ldr	r1, [ip, r2]
   3cdc4:	mla	r5, r1, r0, r5
   3cdc8:	mla	r8, r1, r0, r8
   3cdcc:	b	3cd68 <GetDataSlab+0xcde8>
   3cdd0:	ldr	r0, [sp, #80]	; 0x50
   3cdd4:	ldr	r6, [sp, #68]	; 0x44
   3cdd8:	add	r9, r0, r1, lsl #1
   3cddc:	cmp	r6, #1
   3cde0:	bne	4964c <GetDataSlab+0x196cc>
   3cde4:	ldr	r0, [sp, #76]	; 0x4c
   3cde8:	ldr	r3, [fp, #12]
   3cdec:	ldr	r8, [sp, #60]	; 0x3c
   3cdf0:	sub	r6, fp, #96	; 0x60
   3cdf4:	cmp	r0, #1
   3cdf8:	blt	56c18 <GetDataSlab+0x26c98>
   3cdfc:	mov	r5, r3
   3ce00:	ldr	r3, [sp, #72]	; 0x48
   3ce04:	mov	r2, #1
   3ce08:	sub	r0, r3, #2
   3ce0c:	add	r2, r2, r0, lsr #1
   3ce10:	lsr	r0, r0, #1
   3ce14:	str	r0, [sp, #40]	; 0x28
   3ce18:	ldr	r0, [sp, #88]	; 0x58
   3ce1c:	and	r7, r2, #1
   3ce20:	sub	r2, r2, r7
   3ce24:	str	r7, [sp, #48]	; 0x30
   3ce28:	ldr	r7, [fp, #20]
   3ce2c:	str	r2, [sp, #28]
   3ce30:	sub	r2, fp, #136	; 0x88
   3ce34:	orr	r4, r2, #4
   3ce38:	mov	r2, ip
   3ce3c:	str	r0, [sp, #84]	; 0x54
   3ce40:	mov	r0, #0
   3ce44:	orr	sl, r2, #4
   3ce48:	ldr	r2, [fp, #24]
   3ce4c:	str	r0, [sp, #80]	; 0x50
   3ce50:	add	ip, r7, #4
   3ce54:	str	sl, [sp, #36]	; 0x24
   3ce58:	sub	r2, r2, #1
   3ce5c:	str	r2, [sp, #56]	; 0x38
   3ce60:	orr	r2, r6, #4
   3ce64:	str	r2, [sp, #32]
   3ce68:	lsl	r2, r3, #3
   3ce6c:	str	r2, [sp, #68]	; 0x44
   3ce70:	bic	r2, r3, #1
   3ce74:	str	r2, [sp, #44]	; 0x2c
   3ce78:	ldr	r2, [r5], #4
   3ce7c:	str	r5, [sp, #92]	; 0x5c
   3ce80:	str	r2, [sp, #64]	; 0x40
   3ce84:	b	3cec8 <GetDataSlab+0xcf48>
   3ce88:	ldr	r0, [sp, #32]
   3ce8c:	ldr	r0, [r0, r2]
   3ce90:	add	r9, r9, r0, lsl #1
   3ce94:	add	r1, r0, r1
   3ce98:	ldr	r0, [sp, #68]	; 0x44
   3ce9c:	ldr	r2, [sp, #84]	; 0x54
   3cea0:	ldr	r3, [sp, #72]	; 0x48
   3cea4:	ldr	r7, [sp, #80]	; 0x50
   3cea8:	add	r2, r2, r0
   3ceac:	ldr	r0, [sp, #76]	; 0x4c
   3ceb0:	add	r7, r7, r3
   3ceb4:	str	r2, [sp, #84]	; 0x54
   3ceb8:	mov	r2, #0
   3cebc:	str	r7, [sp, #80]	; 0x50
   3cec0:	cmp	r7, r0
   3cec4:	bge	56c1c <GetDataSlab+0x26c9c>
   3cec8:	ldr	lr, [sp, #92]	; 0x5c
   3cecc:	cmp	r3, #1
   3ced0:	blt	3cff4 <GetDataSlab+0xd074>
   3ced4:	mov	r0, #0
   3ced8:	beq	3cfc0 <GetDataSlab+0xd040>
   3cedc:	ldr	r0, [sp, #64]	; 0x40
   3cee0:	mov	r2, #0
   3cee4:	add	r3, r9, r0, lsl #1
   3cee8:	ldr	r0, [sp, #40]	; 0x28
   3ceec:	str	r3, [sp, #52]	; 0x34
   3cef0:	cmp	r0, #0
   3cef4:	beq	3cf60 <GetDataSlab+0xcfe0>
   3cef8:	ldr	r8, [sp, #84]	; 0x54
   3cefc:	ldr	sl, [sp, #28]
   3cf00:	add	r6, sp, #492	; 0x1ec
   3cf04:	mov	r7, #32
   3cf08:	add	r5, sp, #496	; 0x1f0
   3cf0c:	mov	lr, r8
   3cf10:	ldr	r0, [r3]
   3cf14:	subs	sl, sl, #2
   3cf18:	add	r2, r2, #4
   3cf1c:	str	r0, [sp, #492]	; 0x1ec
   3cf20:	vld1.32	{d16[0]}, [r6 :32]
   3cf24:	vmovl.s16	q0, d16
   3cf28:	vcvt.f64.s32	d17, s1
   3cf2c:	vcvt.f64.s32	d16, s0
   3cf30:	vst1.64	{d16-d17}, [lr], r7
   3cf34:	ldr	r0, [r3, #4]
   3cf38:	add	r3, r3, #8
   3cf3c:	str	r0, [sp, #496]	; 0x1f0
   3cf40:	add	r0, r8, #16
   3cf44:	mov	r8, lr
   3cf48:	vld1.32	{d16[0]}, [r5 :32]
   3cf4c:	vmovl.s16	q0, d16
   3cf50:	vcvt.f64.s32	d17, s1
   3cf54:	vcvt.f64.s32	d16, s0
   3cf58:	vst1.64	{d16-d17}, [r0]
   3cf5c:	bne	3cf10 <GetDataSlab+0xcf90>
   3cf60:	ldr	r0, [sp, #48]	; 0x30
   3cf64:	ldr	lr, [sp, #92]	; 0x5c
   3cf68:	ldr	r8, [sp, #60]	; 0x3c
   3cf6c:	ldr	sl, [sp, #36]	; 0x24
   3cf70:	cmp	r0, #0
   3cf74:	ldr	r0, [sp, #88]	; 0x58
   3cf78:	beq	3cfac <GetDataSlab+0xd02c>
   3cf7c:	ldr	r3, [sp, #80]	; 0x50
   3cf80:	add	r0, r0, r3, lsl #3
   3cf84:	ldr	r3, [sp, #52]	; 0x34
   3cf88:	add	r0, r0, r2, lsl #3
   3cf8c:	ldr	r3, [r3, r2, lsl #1]
   3cf90:	str	r3, [sp, #488]	; 0x1e8
   3cf94:	add	r3, sp, #488	; 0x1e8
   3cf98:	vld1.32	{d16[0]}, [r3 :32]
   3cf9c:	vmovl.s16	q0, d16
   3cfa0:	vcvt.f64.s32	d17, s1
   3cfa4:	vcvt.f64.s32	d16, s0
   3cfa8:	vst1.64	{d16-d17}, [r0]
   3cfac:	ldr	r0, [sp, #72]	; 0x48
   3cfb0:	ldr	r2, [sp, #44]	; 0x2c
   3cfb4:	cmp	r0, r2
   3cfb8:	mov	r0, r2
   3cfbc:	beq	3cff4 <GetDataSlab+0xd074>
   3cfc0:	ldr	r5, [sp, #64]	; 0x40
   3cfc4:	ldr	r2, [sp, #84]	; 0x54
   3cfc8:	ldr	r3, [sp, #72]	; 0x48
   3cfcc:	add	r7, r9, r5, lsl #1
   3cfd0:	add	r2, r2, r0, lsl #3
   3cfd4:	sub	r3, r3, r0
   3cfd8:	add	r0, r7, r0, lsl #1
   3cfdc:	ldrsh	r7, [r0], #2
   3cfe0:	subs	r3, r3, #1
   3cfe4:	vmov	s0, r7
   3cfe8:	vcvt.f64.s32	d16, s0
   3cfec:	vstmia	r2!, {d16}
   3cff0:	bne	3cfdc <GetDataSlab+0xd05c>
   3cff4:	ldr	r0, [fp, #24]
   3cff8:	add	r9, r9, r8, lsl #1
   3cffc:	add	r1, r1, r8
   3d000:	cmp	r0, #2
   3d004:	blt	3ce98 <GetDataSlab+0xcf18>
   3d008:	ldr	r3, [sp, #56]	; 0x38
   3d00c:	mov	r2, #0
   3d010:	b	3d03c <GetDataSlab+0xd0bc>
   3d014:	sub	r5, fp, #176	; 0xb0
   3d018:	sub	r0, r0, r7
   3d01c:	ldr	r6, [r5, r2]
   3d020:	ldr	r5, [lr, r2]
   3d024:	mla	r0, r5, r6, r0
   3d028:	add	r1, r0, r1
   3d02c:	add	r9, r9, r0, lsl #1
   3d030:	subs	r3, r3, #1
   3d034:	add	r2, r2, #4
   3d038:	beq	3ce98 <GetDataSlab+0xcf18>
   3d03c:	ldr	r0, [r4, r2]
   3d040:	add	r0, r0, #1
   3d044:	str	r0, [r4, r2]
   3d048:	ldr	r7, [ip, r2]
   3d04c:	sdiv	r6, r0, r7
   3d050:	mls	r0, r6, r7, r0
   3d054:	cmp	r0, #0
   3d058:	bne	3ce88 <GetDataSlab+0xcf08>
   3d05c:	mov	r0, #0
   3d060:	str	r0, [r4, r2]
   3d064:	ldr	r0, [sl, r2]
   3d068:	sdiv	r7, r1, r0
   3d06c:	mls	r7, r7, r0, r1
   3d070:	cmp	r7, #0
   3d074:	bne	3d014 <GetDataSlab+0xd094>
   3d078:	ldr	r0, [lr, r2]
   3d07c:	cmp	r0, #0
   3d080:	beq	3d030 <GetDataSlab+0xd0b0>
   3d084:	sub	r5, fp, #176	; 0xb0
   3d088:	ldr	r7, [r5, r2]
   3d08c:	mla	r1, r7, r0, r1
   3d090:	mul	r0, r7, r0
   3d094:	b	3d02c <GetDataSlab+0xd0ac>
   3d098:	ldr	r0, [sp, #80]	; 0x50
   3d09c:	ldr	r6, [sp, #68]	; 0x44
   3d0a0:	add	r9, r0, r1, lsl #1
   3d0a4:	cmp	r6, #1
   3d0a8:	bne	4986c <GetDataSlab+0x198ec>
   3d0ac:	ldr	r0, [sp, #76]	; 0x4c
   3d0b0:	ldr	r3, [fp, #12]
   3d0b4:	ldr	r8, [sp, #60]	; 0x3c
   3d0b8:	sub	r6, fp, #96	; 0x60
   3d0bc:	cmp	r0, #1
   3d0c0:	blt	56c18 <GetDataSlab+0x26c98>
   3d0c4:	mov	r5, r3
   3d0c8:	ldr	r3, [sp, #72]	; 0x48
   3d0cc:	mov	r2, #1
   3d0d0:	sub	r0, r3, #2
   3d0d4:	add	r2, r2, r0, lsr #1
   3d0d8:	lsr	r0, r0, #1
   3d0dc:	str	r0, [sp, #40]	; 0x28
   3d0e0:	ldr	r0, [sp, #88]	; 0x58
   3d0e4:	and	r7, r2, #1
   3d0e8:	sub	r2, r2, r7
   3d0ec:	str	r7, [sp, #48]	; 0x30
   3d0f0:	ldr	r7, [fp, #20]
   3d0f4:	str	r2, [sp, #28]
   3d0f8:	sub	r2, fp, #136	; 0x88
   3d0fc:	orr	r4, r2, #4
   3d100:	mov	r2, ip
   3d104:	str	r0, [sp, #84]	; 0x54
   3d108:	mov	r0, #0
   3d10c:	orr	sl, r2, #4
   3d110:	ldr	r2, [fp, #24]
   3d114:	str	r0, [sp, #80]	; 0x50
   3d118:	add	ip, r7, #4
   3d11c:	str	sl, [sp, #36]	; 0x24
   3d120:	sub	r2, r2, #1
   3d124:	str	r2, [sp, #56]	; 0x38
   3d128:	orr	r2, r6, #4
   3d12c:	str	r2, [sp, #32]
   3d130:	lsl	r2, r3, #3
   3d134:	str	r2, [sp, #68]	; 0x44
   3d138:	bic	r2, r3, #1
   3d13c:	str	r2, [sp, #44]	; 0x2c
   3d140:	ldr	r2, [r5], #4
   3d144:	str	r5, [sp, #92]	; 0x5c
   3d148:	str	r2, [sp, #64]	; 0x40
   3d14c:	b	3d190 <GetDataSlab+0xd210>
   3d150:	ldr	r0, [sp, #32]
   3d154:	ldr	r0, [r0, r2]
   3d158:	add	r9, r9, r0, lsl #1
   3d15c:	add	r1, r0, r1
   3d160:	ldr	r0, [sp, #68]	; 0x44
   3d164:	ldr	r2, [sp, #84]	; 0x54
   3d168:	ldr	r3, [sp, #72]	; 0x48
   3d16c:	ldr	r7, [sp, #80]	; 0x50
   3d170:	add	r2, r2, r0
   3d174:	ldr	r0, [sp, #76]	; 0x4c
   3d178:	add	r7, r7, r3
   3d17c:	str	r2, [sp, #84]	; 0x54
   3d180:	mov	r2, #0
   3d184:	str	r7, [sp, #80]	; 0x50
   3d188:	cmp	r7, r0
   3d18c:	bge	56c1c <GetDataSlab+0x26c9c>
   3d190:	ldr	lr, [sp, #92]	; 0x5c
   3d194:	cmp	r3, #1
   3d198:	blt	3d2bc <GetDataSlab+0xd33c>
   3d19c:	mov	r0, #0
   3d1a0:	beq	3d288 <GetDataSlab+0xd308>
   3d1a4:	ldr	r0, [sp, #64]	; 0x40
   3d1a8:	mov	r2, #0
   3d1ac:	add	r3, r9, r0, lsl #1
   3d1b0:	ldr	r0, [sp, #40]	; 0x28
   3d1b4:	str	r3, [sp, #52]	; 0x34
   3d1b8:	cmp	r0, #0
   3d1bc:	beq	3d228 <GetDataSlab+0xd2a8>
   3d1c0:	ldr	r8, [sp, #84]	; 0x54
   3d1c4:	ldr	sl, [sp, #28]
   3d1c8:	add	r6, sp, #504	; 0x1f8
   3d1cc:	mov	r7, #32
   3d1d0:	add	r5, sp, #508	; 0x1fc
   3d1d4:	mov	lr, r8
   3d1d8:	ldr	r0, [r3]
   3d1dc:	subs	sl, sl, #2
   3d1e0:	add	r2, r2, #4
   3d1e4:	str	r0, [sp, #504]	; 0x1f8
   3d1e8:	vld1.32	{d16[0]}, [r6 :32]
   3d1ec:	vmovl.u16	q0, d16
   3d1f0:	vcvt.f64.u32	d17, s1
   3d1f4:	vcvt.f64.u32	d16, s0
   3d1f8:	vst1.64	{d16-d17}, [lr], r7
   3d1fc:	ldr	r0, [r3, #4]
   3d200:	add	r3, r3, #8
   3d204:	str	r0, [sp, #508]	; 0x1fc
   3d208:	add	r0, r8, #16
   3d20c:	mov	r8, lr
   3d210:	vld1.32	{d16[0]}, [r5 :32]
   3d214:	vmovl.u16	q0, d16
   3d218:	vcvt.f64.u32	d17, s1
   3d21c:	vcvt.f64.u32	d16, s0
   3d220:	vst1.64	{d16-d17}, [r0]
   3d224:	bne	3d1d8 <GetDataSlab+0xd258>
   3d228:	ldr	r0, [sp, #48]	; 0x30
   3d22c:	ldr	lr, [sp, #92]	; 0x5c
   3d230:	ldr	r8, [sp, #60]	; 0x3c
   3d234:	ldr	sl, [sp, #36]	; 0x24
   3d238:	cmp	r0, #0
   3d23c:	ldr	r0, [sp, #88]	; 0x58
   3d240:	beq	3d274 <GetDataSlab+0xd2f4>
   3d244:	ldr	r3, [sp, #80]	; 0x50
   3d248:	add	r0, r0, r3, lsl #3
   3d24c:	ldr	r3, [sp, #52]	; 0x34
   3d250:	add	r0, r0, r2, lsl #3
   3d254:	ldr	r3, [r3, r2, lsl #1]
   3d258:	str	r3, [sp, #500]	; 0x1f4
   3d25c:	add	r3, sp, #500	; 0x1f4
   3d260:	vld1.32	{d16[0]}, [r3 :32]
   3d264:	vmovl.u16	q0, d16
   3d268:	vcvt.f64.u32	d17, s1
   3d26c:	vcvt.f64.u32	d16, s0
   3d270:	vst1.64	{d16-d17}, [r0]
   3d274:	ldr	r0, [sp, #72]	; 0x48
   3d278:	ldr	r2, [sp, #44]	; 0x2c
   3d27c:	cmp	r0, r2
   3d280:	mov	r0, r2
   3d284:	beq	3d2bc <GetDataSlab+0xd33c>
   3d288:	ldr	r5, [sp, #64]	; 0x40
   3d28c:	ldr	r2, [sp, #84]	; 0x54
   3d290:	ldr	r3, [sp, #72]	; 0x48
   3d294:	add	r7, r9, r5, lsl #1
   3d298:	add	r2, r2, r0, lsl #3
   3d29c:	sub	r3, r3, r0
   3d2a0:	add	r0, r7, r0, lsl #1
   3d2a4:	ldrh	r7, [r0], #2
   3d2a8:	subs	r3, r3, #1
   3d2ac:	vmov	s0, r7
   3d2b0:	vcvt.f64.u32	d16, s0
   3d2b4:	vstmia	r2!, {d16}
   3d2b8:	bne	3d2a4 <GetDataSlab+0xd324>
   3d2bc:	ldr	r0, [fp, #24]
   3d2c0:	add	r9, r9, r8, lsl #1
   3d2c4:	add	r1, r1, r8
   3d2c8:	cmp	r0, #2
   3d2cc:	blt	3d160 <GetDataSlab+0xd1e0>
   3d2d0:	ldr	r3, [sp, #56]	; 0x38
   3d2d4:	mov	r2, #0
   3d2d8:	b	3d304 <GetDataSlab+0xd384>
   3d2dc:	sub	r5, fp, #176	; 0xb0
   3d2e0:	sub	r0, r0, r7
   3d2e4:	ldr	r6, [r5, r2]
   3d2e8:	ldr	r5, [lr, r2]
   3d2ec:	mla	r0, r5, r6, r0
   3d2f0:	add	r1, r0, r1
   3d2f4:	add	r9, r9, r0, lsl #1
   3d2f8:	subs	r3, r3, #1
   3d2fc:	add	r2, r2, #4
   3d300:	beq	3d160 <GetDataSlab+0xd1e0>
   3d304:	ldr	r0, [r4, r2]
   3d308:	add	r0, r0, #1
   3d30c:	str	r0, [r4, r2]
   3d310:	ldr	r7, [ip, r2]
   3d314:	sdiv	r6, r0, r7
   3d318:	mls	r0, r6, r7, r0
   3d31c:	cmp	r0, #0
   3d320:	bne	3d150 <GetDataSlab+0xd1d0>
   3d324:	mov	r0, #0
   3d328:	str	r0, [r4, r2]
   3d32c:	ldr	r0, [sl, r2]
   3d330:	sdiv	r7, r1, r0
   3d334:	mls	r7, r7, r0, r1
   3d338:	cmp	r7, #0
   3d33c:	bne	3d2dc <GetDataSlab+0xd35c>
   3d340:	ldr	r0, [lr, r2]
   3d344:	cmp	r0, #0
   3d348:	beq	3d2f8 <GetDataSlab+0xd378>
   3d34c:	sub	r5, fp, #176	; 0xb0
   3d350:	ldr	r7, [r5, r2]
   3d354:	mla	r1, r7, r0, r1
   3d358:	mul	r0, r7, r0
   3d35c:	b	3d2f4 <GetDataSlab+0xd374>
   3d360:	ldr	r0, [sp, #80]	; 0x50
   3d364:	ldr	r5, [sp, #56]	; 0x38
   3d368:	add	r4, r0, r3, lsl #2
   3d36c:	cmp	r5, #1
   3d370:	bne	49a8c <GetDataSlab+0x19b0c>
   3d374:	ldr	r0, [sp, #76]	; 0x4c
   3d378:	ldr	r2, [fp, #20]
   3d37c:	cmp	r0, #1
   3d380:	ldr	r0, [sp, #68]	; 0x44
   3d384:	blt	56c18 <GetDataSlab+0x26c98>
   3d388:	sub	r0, r0, #2
   3d38c:	mov	r1, #1
   3d390:	ldr	lr, [sp, #52]	; 0x34
   3d394:	add	sl, r2, #4
   3d398:	orr	r2, ip, #4
   3d39c:	str	r8, [sp, #80]	; 0x50
   3d3a0:	mov	r6, r4
   3d3a4:	add	r1, r1, r0, lsr #1
   3d3a8:	lsr	r0, r0, #1
   3d3ac:	mov	r8, r2
   3d3b0:	str	sl, [sp, #32]
   3d3b4:	str	r0, [sp, #36]	; 0x24
   3d3b8:	mov	r0, #0
   3d3bc:	and	r7, r1, #1
   3d3c0:	str	r0, [sp, #72]	; 0x48
   3d3c4:	sub	r1, r1, r7
   3d3c8:	str	r7, [sp, #44]	; 0x2c
   3d3cc:	str	r1, [sp, #24]
   3d3d0:	sub	r1, fp, #136	; 0x88
   3d3d4:	orr	r9, r1, #4
   3d3d8:	ldr	r1, [fp, #12]
   3d3dc:	add	r1, r1, #4
   3d3e0:	str	r1, [sp, #84]	; 0x54
   3d3e4:	ldr	r1, [fp, #24]
   3d3e8:	sub	r1, r1, #1
   3d3ec:	str	r1, [sp, #56]	; 0x38
   3d3f0:	sub	r1, fp, #96	; 0x60
   3d3f4:	orr	r1, r1, #4
   3d3f8:	str	r1, [sp, #28]
   3d3fc:	ldr	r1, [sp, #68]	; 0x44
   3d400:	lsl	r7, r1, #3
   3d404:	str	r7, [sp, #64]	; 0x40
   3d408:	bic	r7, r1, #1
   3d40c:	str	r7, [sp, #40]	; 0x28
   3d410:	b	3d458 <GetDataSlab+0xd4d8>
   3d414:	ldr	r0, [sp, #28]
   3d418:	ldr	r0, [r0, r2]
   3d41c:	add	r4, r4, r0, lsl #2
   3d420:	add	r3, r0, r3
   3d424:	ldr	r0, [sp, #64]	; 0x40
   3d428:	ldr	r1, [sp, #80]	; 0x50
   3d42c:	ldr	r7, [sp, #72]	; 0x48
   3d430:	mov	r6, r4
   3d434:	mov	r2, #0
   3d438:	add	r1, r1, r0
   3d43c:	ldr	r0, [sp, #76]	; 0x4c
   3d440:	str	r1, [sp, #80]	; 0x50
   3d444:	ldr	r1, [sp, #68]	; 0x44
   3d448:	add	r7, r7, r1
   3d44c:	cmp	r7, r0
   3d450:	str	r7, [sp, #72]	; 0x48
   3d454:	bge	56c1c <GetDataSlab+0x26c9c>
   3d458:	ldr	r0, [fp, #12]
   3d45c:	cmp	r1, #1
   3d460:	sub	ip, fp, #176	; 0xb0
   3d464:	mov	r4, r6
   3d468:	blt	3d578 <GetDataSlab+0xd5f8>
   3d46c:	ldr	r7, [r0]
   3d470:	mov	r5, #0
   3d474:	beq	3d548 <GetDataSlab+0xd5c8>
   3d478:	mov	r0, r7
   3d47c:	mov	r7, r8
   3d480:	mov	r1, #0
   3d484:	add	sl, r4, r0, lsl #2
   3d488:	str	r0, [sp, #60]	; 0x3c
   3d48c:	ldr	r0, [sp, #36]	; 0x24
   3d490:	str	sl, [sp, #48]	; 0x30
   3d494:	cmp	r0, #0
   3d498:	beq	3d4ec <GetDataSlab+0xd56c>
   3d49c:	ldr	ip, [sp, #80]	; 0x50
   3d4a0:	ldr	r8, [sp, #24]
   3d4a4:	mov	lr, sl
   3d4a8:	mov	r4, #16
   3d4ac:	mov	r5, #32
   3d4b0:	mov	r2, ip
   3d4b4:	vld1.32	{d0}, [lr], r4
   3d4b8:	add	r0, ip, #16
   3d4bc:	subs	r8, r8, #2
   3d4c0:	add	r1, r1, #4
   3d4c4:	vcvt.f64.s32	d17, s1
   3d4c8:	vcvt.f64.s32	d16, s0
   3d4cc:	vst1.64	{d16-d17}, [r2], r5
   3d4d0:	vldr	d0, [sl, #8]
   3d4d4:	mov	ip, r2
   3d4d8:	mov	sl, lr
   3d4dc:	vcvt.f64.s32	d17, s1
   3d4e0:	vcvt.f64.s32	d16, s0
   3d4e4:	vst1.64	{d16-d17}, [r0]
   3d4e8:	bne	3d4b4 <GetDataSlab+0xd534>
   3d4ec:	ldr	r0, [sp, #44]	; 0x2c
   3d4f0:	ldr	lr, [sp, #52]	; 0x34
   3d4f4:	ldr	sl, [sp, #32]
   3d4f8:	sub	ip, fp, #176	; 0xb0
   3d4fc:	mov	r8, r7
   3d500:	cmp	r0, #0
   3d504:	ldr	r0, [sp, #88]	; 0x58
   3d508:	beq	3d530 <GetDataSlab+0xd5b0>
   3d50c:	ldr	r2, [sp, #72]	; 0x48
   3d510:	add	r0, r0, r2, lsl #3
   3d514:	ldr	r2, [sp, #48]	; 0x30
   3d518:	add	r0, r0, r1, lsl #3
   3d51c:	add	r2, r2, r1, lsl #2
   3d520:	vldr	d0, [r2]
   3d524:	vcvt.f64.s32	d17, s1
   3d528:	vcvt.f64.s32	d16, s0
   3d52c:	vst1.64	{d16-d17}, [r0]
   3d530:	ldr	r0, [sp, #68]	; 0x44
   3d534:	ldr	r5, [sp, #40]	; 0x28
   3d538:	ldr	r7, [sp, #60]	; 0x3c
   3d53c:	mov	r4, r6
   3d540:	cmp	r0, r5
   3d544:	beq	3d578 <GetDataSlab+0xd5f8>
   3d548:	ldr	r0, [sp, #80]	; 0x50
   3d54c:	add	r1, r0, r5, lsl #3
   3d550:	ldr	r0, [sp, #68]	; 0x44
   3d554:	sub	r2, r0, r5
   3d558:	add	r0, r5, r7
   3d55c:	add	r5, r4, r0, lsl #2
   3d560:	ldr	r0, [r5], #4
   3d564:	subs	r2, r2, #1
   3d568:	vmov	s0, r0
   3d56c:	vcvt.f64.s32	d16, s0
   3d570:	vstmia	r1!, {d16}
   3d574:	bne	3d560 <GetDataSlab+0xd5e0>
   3d578:	ldr	r0, [fp, #24]
   3d57c:	add	r4, r4, lr, lsl #2
   3d580:	add	r3, r3, lr
   3d584:	cmp	r0, #2
   3d588:	blt	3d424 <GetDataSlab+0xd4a4>
   3d58c:	ldr	r1, [sp, #56]	; 0x38
   3d590:	mov	r2, #0
   3d594:	b	3d5c0 <GetDataSlab+0xd640>
   3d598:	ldr	r7, [sp, #84]	; 0x54
   3d59c:	ldr	r6, [ip, r2]
   3d5a0:	sub	r0, r5, r0
   3d5a4:	ldr	r7, [r7, r2]
   3d5a8:	mla	r0, r7, r6, r0
   3d5ac:	add	r3, r0, r3
   3d5b0:	add	r4, r4, r0, lsl #2
   3d5b4:	subs	r1, r1, #1
   3d5b8:	add	r2, r2, #4
   3d5bc:	beq	3d424 <GetDataSlab+0xd4a4>
   3d5c0:	ldr	r0, [r9, r2]
   3d5c4:	add	r0, r0, #1
   3d5c8:	str	r0, [r9, r2]
   3d5cc:	ldr	r5, [sl, r2]
   3d5d0:	sdiv	r6, r0, r5
   3d5d4:	mls	r0, r6, r5, r0
   3d5d8:	cmp	r0, #0
   3d5dc:	bne	3d414 <GetDataSlab+0xd494>
   3d5e0:	ldr	r5, [r8, r2]
   3d5e4:	mov	r0, #0
   3d5e8:	str	r0, [r9, r2]
   3d5ec:	sdiv	r0, r3, r5
   3d5f0:	mls	r0, r0, r5, r3
   3d5f4:	cmp	r0, #0
   3d5f8:	bne	3d598 <GetDataSlab+0xd618>
   3d5fc:	ldr	r0, [sp, #84]	; 0x54
   3d600:	ldr	r0, [r0, r2]
   3d604:	cmp	r0, #0
   3d608:	beq	3d5b4 <GetDataSlab+0xd634>
   3d60c:	ldr	r7, [ip, r2]
   3d610:	mla	r3, r7, r0, r3
   3d614:	mul	r0, r7, r0
   3d618:	b	3d5b0 <GetDataSlab+0xd630>
   3d61c:	ldr	r0, [sp, #80]	; 0x50
   3d620:	ldr	r5, [sp, #56]	; 0x38
   3d624:	add	r4, r0, r3, lsl #2
   3d628:	cmp	r5, #1
   3d62c:	bne	49ca8 <GetDataSlab+0x19d28>
   3d630:	ldr	r0, [sp, #76]	; 0x4c
   3d634:	ldr	r2, [fp, #20]
   3d638:	cmp	r0, #1
   3d63c:	ldr	r0, [sp, #68]	; 0x44
   3d640:	blt	56c18 <GetDataSlab+0x26c98>
   3d644:	sub	r0, r0, #2
   3d648:	mov	r1, #1
   3d64c:	ldr	lr, [sp, #52]	; 0x34
   3d650:	add	sl, r2, #4
   3d654:	orr	r2, ip, #4
   3d658:	str	r8, [sp, #80]	; 0x50
   3d65c:	mov	r6, r4
   3d660:	add	r1, r1, r0, lsr #1
   3d664:	lsr	r0, r0, #1
   3d668:	mov	r8, r2
   3d66c:	str	sl, [sp, #32]
   3d670:	str	r0, [sp, #36]	; 0x24
   3d674:	mov	r0, #0
   3d678:	and	r7, r1, #1
   3d67c:	str	r0, [sp, #72]	; 0x48
   3d680:	sub	r1, r1, r7
   3d684:	str	r7, [sp, #44]	; 0x2c
   3d688:	str	r1, [sp, #24]
   3d68c:	sub	r1, fp, #136	; 0x88
   3d690:	orr	r9, r1, #4
   3d694:	ldr	r1, [fp, #12]
   3d698:	add	r1, r1, #4
   3d69c:	str	r1, [sp, #84]	; 0x54
   3d6a0:	ldr	r1, [fp, #24]
   3d6a4:	sub	r1, r1, #1
   3d6a8:	str	r1, [sp, #56]	; 0x38
   3d6ac:	sub	r1, fp, #96	; 0x60
   3d6b0:	orr	r1, r1, #4
   3d6b4:	str	r1, [sp, #28]
   3d6b8:	ldr	r1, [sp, #68]	; 0x44
   3d6bc:	lsl	r7, r1, #3
   3d6c0:	str	r7, [sp, #64]	; 0x40
   3d6c4:	bic	r7, r1, #1
   3d6c8:	str	r7, [sp, #40]	; 0x28
   3d6cc:	b	3d714 <GetDataSlab+0xd794>
   3d6d0:	ldr	r0, [sp, #28]
   3d6d4:	ldr	r0, [r0, r2]
   3d6d8:	add	r4, r4, r0, lsl #2
   3d6dc:	add	r3, r0, r3
   3d6e0:	ldr	r0, [sp, #64]	; 0x40
   3d6e4:	ldr	r1, [sp, #80]	; 0x50
   3d6e8:	ldr	r7, [sp, #72]	; 0x48
   3d6ec:	mov	r6, r4
   3d6f0:	mov	r2, #0
   3d6f4:	add	r1, r1, r0
   3d6f8:	ldr	r0, [sp, #76]	; 0x4c
   3d6fc:	str	r1, [sp, #80]	; 0x50
   3d700:	ldr	r1, [sp, #68]	; 0x44
   3d704:	add	r7, r7, r1
   3d708:	cmp	r7, r0
   3d70c:	str	r7, [sp, #72]	; 0x48
   3d710:	bge	56c1c <GetDataSlab+0x26c9c>
   3d714:	ldr	r0, [fp, #12]
   3d718:	cmp	r1, #1
   3d71c:	sub	ip, fp, #176	; 0xb0
   3d720:	mov	r4, r6
   3d724:	blt	3d834 <GetDataSlab+0xd8b4>
   3d728:	ldr	r7, [r0]
   3d72c:	mov	r5, #0
   3d730:	beq	3d804 <GetDataSlab+0xd884>
   3d734:	mov	r0, r7
   3d738:	mov	r7, r8
   3d73c:	mov	r1, #0
   3d740:	add	sl, r4, r0, lsl #2
   3d744:	str	r0, [sp, #60]	; 0x3c
   3d748:	ldr	r0, [sp, #36]	; 0x24
   3d74c:	str	sl, [sp, #48]	; 0x30
   3d750:	cmp	r0, #0
   3d754:	beq	3d7a8 <GetDataSlab+0xd828>
   3d758:	ldr	ip, [sp, #80]	; 0x50
   3d75c:	ldr	r8, [sp, #24]
   3d760:	mov	lr, sl
   3d764:	mov	r4, #16
   3d768:	mov	r5, #32
   3d76c:	mov	r2, ip
   3d770:	vld1.32	{d0}, [lr], r4
   3d774:	add	r0, ip, #16
   3d778:	subs	r8, r8, #2
   3d77c:	add	r1, r1, #4
   3d780:	vcvt.f64.u32	d17, s1
   3d784:	vcvt.f64.u32	d16, s0
   3d788:	vst1.64	{d16-d17}, [r2], r5
   3d78c:	vldr	d0, [sl, #8]
   3d790:	mov	ip, r2
   3d794:	mov	sl, lr
   3d798:	vcvt.f64.u32	d17, s1
   3d79c:	vcvt.f64.u32	d16, s0
   3d7a0:	vst1.64	{d16-d17}, [r0]
   3d7a4:	bne	3d770 <GetDataSlab+0xd7f0>
   3d7a8:	ldr	r0, [sp, #44]	; 0x2c
   3d7ac:	ldr	lr, [sp, #52]	; 0x34
   3d7b0:	ldr	sl, [sp, #32]
   3d7b4:	sub	ip, fp, #176	; 0xb0
   3d7b8:	mov	r8, r7
   3d7bc:	cmp	r0, #0
   3d7c0:	ldr	r0, [sp, #88]	; 0x58
   3d7c4:	beq	3d7ec <GetDataSlab+0xd86c>
   3d7c8:	ldr	r2, [sp, #72]	; 0x48
   3d7cc:	add	r0, r0, r2, lsl #3
   3d7d0:	ldr	r2, [sp, #48]	; 0x30
   3d7d4:	add	r0, r0, r1, lsl #3
   3d7d8:	add	r2, r2, r1, lsl #2
   3d7dc:	vldr	d0, [r2]
   3d7e0:	vcvt.f64.u32	d17, s1
   3d7e4:	vcvt.f64.u32	d16, s0
   3d7e8:	vst1.64	{d16-d17}, [r0]
   3d7ec:	ldr	r0, [sp, #68]	; 0x44
   3d7f0:	ldr	r5, [sp, #40]	; 0x28
   3d7f4:	ldr	r7, [sp, #60]	; 0x3c
   3d7f8:	mov	r4, r6
   3d7fc:	cmp	r0, r5
   3d800:	beq	3d834 <GetDataSlab+0xd8b4>
   3d804:	ldr	r0, [sp, #80]	; 0x50
   3d808:	add	r1, r0, r5, lsl #3
   3d80c:	ldr	r0, [sp, #68]	; 0x44
   3d810:	sub	r2, r0, r5
   3d814:	add	r0, r5, r7
   3d818:	add	r5, r4, r0, lsl #2
   3d81c:	ldr	r0, [r5], #4
   3d820:	subs	r2, r2, #1
   3d824:	vmov	s0, r0
   3d828:	vcvt.f64.u32	d16, s0
   3d82c:	vstmia	r1!, {d16}
   3d830:	bne	3d81c <GetDataSlab+0xd89c>
   3d834:	ldr	r0, [fp, #24]
   3d838:	add	r4, r4, lr, lsl #2
   3d83c:	add	r3, r3, lr
   3d840:	cmp	r0, #2
   3d844:	blt	3d6e0 <GetDataSlab+0xd760>
   3d848:	ldr	r1, [sp, #56]	; 0x38
   3d84c:	mov	r2, #0
   3d850:	b	3d87c <GetDataSlab+0xd8fc>
   3d854:	ldr	r7, [sp, #84]	; 0x54
   3d858:	ldr	r6, [ip, r2]
   3d85c:	sub	r0, r5, r0
   3d860:	ldr	r7, [r7, r2]
   3d864:	mla	r0, r7, r6, r0
   3d868:	add	r3, r0, r3
   3d86c:	add	r4, r4, r0, lsl #2
   3d870:	subs	r1, r1, #1
   3d874:	add	r2, r2, #4
   3d878:	beq	3d6e0 <GetDataSlab+0xd760>
   3d87c:	ldr	r0, [r9, r2]
   3d880:	add	r0, r0, #1
   3d884:	str	r0, [r9, r2]
   3d888:	ldr	r5, [sl, r2]
   3d88c:	sdiv	r6, r0, r5
   3d890:	mls	r0, r6, r5, r0
   3d894:	cmp	r0, #0
   3d898:	bne	3d6d0 <GetDataSlab+0xd750>
   3d89c:	ldr	r5, [r8, r2]
   3d8a0:	mov	r0, #0
   3d8a4:	str	r0, [r9, r2]
   3d8a8:	sdiv	r0, r3, r5
   3d8ac:	mls	r0, r0, r5, r3
   3d8b0:	cmp	r0, #0
   3d8b4:	bne	3d854 <GetDataSlab+0xd8d4>
   3d8b8:	ldr	r0, [sp, #84]	; 0x54
   3d8bc:	ldr	r0, [r0, r2]
   3d8c0:	cmp	r0, #0
   3d8c4:	beq	3d870 <GetDataSlab+0xd8f0>
   3d8c8:	ldr	r7, [ip, r2]
   3d8cc:	mla	r3, r7, r0, r3
   3d8d0:	mul	r0, r7, r0
   3d8d4:	b	3d86c <GetDataSlab+0xd8ec>
   3d8d8:	ldr	r0, [sp, #80]	; 0x50
   3d8dc:	add	r9, r0, r1, lsl #2
   3d8e0:	ldr	r0, [sp, #40]	; 0x28
   3d8e4:	cmp	r0, #1
   3d8e8:	bne	49ec4 <GetDataSlab+0x19f44>
   3d8ec:	ldr	r0, [sp, #76]	; 0x4c
   3d8f0:	ldr	lr, [sp, #64]	; 0x40
   3d8f4:	ldr	sl, [sp, #60]	; 0x3c
   3d8f8:	cmp	r0, #1
   3d8fc:	blt	56c18 <GetDataSlab+0x26c98>
   3d900:	sub	r0, lr, #2
   3d904:	mov	r2, #1
   3d908:	mov	r6, #32
   3d90c:	add	r2, r2, r0, lsr #1
   3d910:	lsr	r0, r0, #1
   3d914:	str	r0, [sp, #40]	; 0x28
   3d918:	ldr	r0, [sp, #88]	; 0x58
   3d91c:	and	r3, r2, #1
   3d920:	sub	r2, r2, r3
   3d924:	str	r3, [sp, #48]	; 0x30
   3d928:	ldr	r3, [fp, #20]
   3d92c:	str	r2, [sp, #32]
   3d930:	sub	r2, fp, #136	; 0x88
   3d934:	orr	r4, r2, #4
   3d938:	mov	r2, ip
   3d93c:	str	r0, [sp, #84]	; 0x54
   3d940:	mov	r0, #0
   3d944:	orr	r8, r2, #4
   3d948:	ldr	r2, [fp, #24]
   3d94c:	str	r0, [sp, #80]	; 0x50
   3d950:	add	ip, r3, #4
   3d954:	sub	r2, r2, #1
   3d958:	str	r2, [sp, #56]	; 0x38
   3d95c:	sub	r2, fp, #96	; 0x60
   3d960:	orr	r2, r2, #4
   3d964:	str	r2, [sp, #36]	; 0x24
   3d968:	lsl	r2, lr, #3
   3d96c:	str	r2, [sp, #72]	; 0x48
   3d970:	bic	r2, lr, #1
   3d974:	str	r2, [sp, #44]	; 0x2c
   3d978:	ldr	r2, [sp, #92]	; 0x5c
   3d97c:	ldr	r3, [r2], #4
   3d980:	str	r2, [sp, #92]	; 0x5c
   3d984:	str	r3, [sp, #68]	; 0x44
   3d988:	cmp	lr, #1
   3d98c:	bge	3d9dc <GetDataSlab+0xda5c>
   3d990:	b	3dac0 <GetDataSlab+0xdb40>
   3d994:	ldr	r2, [sp, #36]	; 0x24
   3d998:	mov	r6, #32
   3d99c:	ldr	r0, [r2, r0]
   3d9a0:	add	r9, r9, r0, lsl #2
   3d9a4:	add	r1, r0, r1
   3d9a8:	ldr	r0, [sp, #72]	; 0x48
   3d9ac:	ldr	r2, [sp, #84]	; 0x54
   3d9b0:	ldr	r3, [sp, #80]	; 0x50
   3d9b4:	add	r2, r2, r0
   3d9b8:	ldr	r0, [sp, #76]	; 0x4c
   3d9bc:	add	r3, r3, lr
   3d9c0:	str	r2, [sp, #84]	; 0x54
   3d9c4:	mov	r2, #0
   3d9c8:	str	r3, [sp, #80]	; 0x50
   3d9cc:	cmp	r3, r0
   3d9d0:	bge	56c1c <GetDataSlab+0x26c9c>
   3d9d4:	cmp	lr, #1
   3d9d8:	blt	3dac0 <GetDataSlab+0xdb40>
   3d9dc:	mov	r3, #0
   3d9e0:	beq	3da8c <GetDataSlab+0xdb0c>
   3d9e4:	ldr	r0, [sp, #68]	; 0x44
   3d9e8:	add	lr, r9, r0, lsl #2
   3d9ec:	ldr	r0, [sp, #40]	; 0x28
   3d9f0:	str	lr, [sp, #52]	; 0x34
   3d9f4:	cmp	r0, #0
   3d9f8:	mov	r0, #0
   3d9fc:	beq	3da44 <GetDataSlab+0xdac4>
   3da00:	ldr	r3, [sp, #84]	; 0x54
   3da04:	ldr	r2, [sp, #32]
   3da08:	mov	sl, lr
   3da0c:	mov	r5, #16
   3da10:	vld1.32	{d0}, [sl], r5
   3da14:	add	r7, r3, #16
   3da18:	subs	r2, r2, #2
   3da1c:	add	r0, r0, #4
   3da20:	vcvt.f64.f32	d17, s1
   3da24:	vcvt.f64.f32	d16, s0
   3da28:	vst1.64	{d16-d17}, [r3], r6
   3da2c:	vldr	d0, [lr, #8]
   3da30:	mov	lr, sl
   3da34:	vcvt.f64.f32	d17, s1
   3da38:	vcvt.f64.f32	d16, s0
   3da3c:	vst1.64	{d16-d17}, [r7]
   3da40:	bne	3da10 <GetDataSlab+0xda90>
   3da44:	ldr	r2, [sp, #48]	; 0x30
   3da48:	ldr	sl, [sp, #60]	; 0x3c
   3da4c:	cmp	r2, #0
   3da50:	beq	3da7c <GetDataSlab+0xdafc>
   3da54:	ldr	r2, [sp, #88]	; 0x58
   3da58:	ldr	r3, [sp, #80]	; 0x50
   3da5c:	add	r2, r2, r3, lsl #3
   3da60:	ldr	r3, [sp, #52]	; 0x34
   3da64:	add	r3, r3, r0, lsl #2
   3da68:	add	r0, r2, r0, lsl #3
   3da6c:	vldr	d0, [r3]
   3da70:	vcvt.f64.f32	d17, s1
   3da74:	vcvt.f64.f32	d16, s0
   3da78:	vst1.64	{d16-d17}, [r0]
   3da7c:	ldr	lr, [sp, #64]	; 0x40
   3da80:	ldr	r3, [sp, #44]	; 0x2c
   3da84:	cmp	lr, r3
   3da88:	beq	3dac0 <GetDataSlab+0xdb40>
   3da8c:	ldr	r5, [sp, #68]	; 0x44
   3da90:	ldr	r0, [sp, #84]	; 0x54
   3da94:	sub	r2, lr, r3
   3da98:	add	r7, r9, r5, lsl #2
   3da9c:	add	r0, r0, r3, lsl #3
   3daa0:	add	r3, r7, r3, lsl #2
   3daa4:	vldr	s0, [r3]
   3daa8:	add	r3, r3, #4
   3daac:	subs	r2, r2, #1
   3dab0:	vcvt.f64.f32	d16, s0
   3dab4:	vstr	d16, [r0]
   3dab8:	add	r0, r0, #8
   3dabc:	bne	3daa4 <GetDataSlab+0xdb24>
   3dac0:	ldr	r0, [fp, #24]
   3dac4:	add	r9, r9, sl, lsl #2
   3dac8:	add	r1, r1, sl
   3dacc:	cmp	r0, #2
   3dad0:	blt	3d9a8 <GetDataSlab+0xda28>
   3dad4:	ldr	r2, [sp, #56]	; 0x38
   3dad8:	mov	r0, #0
   3dadc:	b	3db10 <GetDataSlab+0xdb90>
   3dae0:	ldr	r5, [sp, #92]	; 0x5c
   3dae4:	sub	r6, fp, #176	; 0xb0
   3dae8:	sub	r3, r3, r7
   3daec:	ldr	r6, [r6, r0]
   3daf0:	ldr	r5, [r5, r0]
   3daf4:	mla	r3, r5, r6, r3
   3daf8:	add	r1, r3, r1
   3dafc:	add	r9, r9, r3, lsl #2
   3db00:	mov	r6, #32
   3db04:	subs	r2, r2, #1
   3db08:	add	r0, r0, #4
   3db0c:	beq	3d9a8 <GetDataSlab+0xda28>
   3db10:	ldr	r3, [r4, r0]
   3db14:	add	r3, r3, #1
   3db18:	str	r3, [r4, r0]
   3db1c:	ldr	r7, [ip, r0]
   3db20:	sdiv	r6, r3, r7
   3db24:	mls	r3, r6, r7, r3
   3db28:	cmp	r3, #0
   3db2c:	bne	3d994 <GetDataSlab+0xda14>
   3db30:	mov	r3, #0
   3db34:	str	r3, [r4, r0]
   3db38:	ldr	r3, [r8, r0]
   3db3c:	sdiv	r7, r1, r3
   3db40:	mls	r7, r7, r3, r1
   3db44:	cmp	r7, #0
   3db48:	bne	3dae0 <GetDataSlab+0xdb60>
   3db4c:	ldr	r3, [sp, #92]	; 0x5c
   3db50:	ldr	r3, [r3, r0]
   3db54:	cmp	r3, #0
   3db58:	beq	3db00 <GetDataSlab+0xdb80>
   3db5c:	sub	r7, fp, #176	; 0xb0
   3db60:	ldr	r7, [r7, r0]
   3db64:	mla	r1, r7, r3, r1
   3db68:	mul	r3, r7, r3
   3db6c:	b	3dafc <GetDataSlab+0xdb7c>
   3db70:	ldr	r0, [sp, #80]	; 0x50
   3db74:	add	r9, r0, r1, lsl #3
   3db78:	ldr	r0, [sp, #44]	; 0x2c
   3db7c:	cmp	r0, #1
   3db80:	bne	4a0fc <GetDataSlab+0x1a17c>
   3db84:	ldr	r0, [sp, #76]	; 0x4c
   3db88:	ldr	sl, [sp, #88]	; 0x58
   3db8c:	ldr	r3, [fp, #12]
   3db90:	ldr	r8, [sp, #40]	; 0x28
   3db94:	sub	r7, fp, #96	; 0x60
   3db98:	cmp	r0, #1
   3db9c:	blt	56c18 <GetDataSlab+0x26c98>
   3dba0:	ldr	r6, [sp, #72]	; 0x48
   3dba4:	mov	r2, #1
   3dba8:	mov	lr, #0
   3dbac:	sub	r0, r6, #2
   3dbb0:	add	r2, r2, r0, lsr #1
   3dbb4:	lsr	r0, r0, #1
   3dbb8:	str	r0, [sp, #20]
   3dbbc:	and	r5, r2, #1
   3dbc0:	sub	r2, r2, r5
   3dbc4:	str	r5, [sp, #28]
   3dbc8:	mov	r5, #0
   3dbcc:	str	r2, [sp, #16]
   3dbd0:	sub	r2, fp, #136	; 0x88
   3dbd4:	orr	r4, r2, #4
   3dbd8:	ldr	r2, [fp, #20]
   3dbdc:	add	r2, r2, #4
   3dbe0:	str	r2, [sp, #84]	; 0x54
   3dbe4:	orr	r2, ip, #4
   3dbe8:	str	r2, [sp, #80]	; 0x50
   3dbec:	ldr	r2, [fp, #24]
   3dbf0:	sub	r2, r2, #1
   3dbf4:	str	r2, [sp, #48]	; 0x30
   3dbf8:	orr	r2, r7, #4
   3dbfc:	str	r2, [sp, #32]
   3dc00:	ldr	r2, [r3], #4
   3dc04:	str	r3, [sp, #92]	; 0x5c
   3dc08:	mov	r3, r6
   3dc0c:	add	r7, r6, r2
   3dc10:	add	r0, r2, #1
   3dc14:	str	r2, [sp, #56]	; 0x38
   3dc18:	str	r7, [sp, #44]	; 0x2c
   3dc1c:	and	r7, r6, #1
   3dc20:	str	r0, [sp, #36]	; 0x24
   3dc24:	str	r7, [sp, #52]	; 0x34
   3dc28:	bic	r7, r6, #1
   3dc2c:	str	r7, [sp, #24]
   3dc30:	lsl	r7, r6, #3
   3dc34:	str	r7, [sp, #64]	; 0x40
   3dc38:	b	3dc74 <GetDataSlab+0xdcf4>
   3dc3c:	ldr	r2, [sp, #32]
   3dc40:	ldr	r0, [r2, r0]
   3dc44:	add	r9, r9, r0, lsl #3
   3dc48:	add	r1, r0, r1
   3dc4c:	ldr	r0, [sp, #64]	; 0x40
   3dc50:	ldr	r3, [sp, #72]	; 0x48
   3dc54:	ldr	r5, [sp, #68]	; 0x44
   3dc58:	mov	r2, #0
   3dc5c:	add	sl, sl, r0
   3dc60:	ldr	r0, [sp, #76]	; 0x4c
   3dc64:	add	lr, lr, r3
   3dc68:	add	r5, r5, #1
   3dc6c:	cmp	lr, r0
   3dc70:	bge	56c1c <GetDataSlab+0x26c9c>
   3dc74:	ldr	r7, [sp, #88]	; 0x58
   3dc78:	ldr	ip, [sp, #92]	; 0x5c
   3dc7c:	cmp	r3, #1
   3dc80:	str	r5, [sp, #68]	; 0x44
   3dc84:	blt	3ddc0 <GetDataSlab+0xde40>
   3dc88:	ldr	r0, [sp, #56]	; 0x38
   3dc8c:	mov	r3, #0
   3dc90:	add	r2, r9, r0, lsl #3
   3dc94:	add	r0, r7, lr, lsl #3
   3dc98:	str	r0, [sp, #60]	; 0x3c
   3dc9c:	beq	3dd50 <GetDataSlab+0xddd0>
   3dca0:	ldr	r0, [sp, #64]	; 0x40
   3dca4:	mov	r6, r2
   3dca8:	ldr	r2, [sp, #44]	; 0x2c
   3dcac:	mla	r0, r0, r5, r7
   3dcb0:	add	r2, r9, r2, lsl #3
   3dcb4:	cmp	r0, r2
   3dcb8:	mov	r2, r6
   3dcbc:	bcs	3dcd4 <GetDataSlab+0xdd54>
   3dcc0:	ldr	r0, [sp, #64]	; 0x40
   3dcc4:	mla	r0, r0, r5, r0
   3dcc8:	add	r0, r7, r0
   3dccc:	cmp	r0, r2
   3dcd0:	bhi	3dd50 <GetDataSlab+0xddd0>
   3dcd4:	ldr	r0, [sp, #20]
   3dcd8:	mov	r3, #0
   3dcdc:	cmp	r0, #0
   3dce0:	beq	3dd14 <GetDataSlab+0xdd94>
   3dce4:	ldr	r0, [sp, #16]
   3dce8:	mov	ip, sl
   3dcec:	mov	r5, #32
   3dcf0:	add	r7, r2, #16
   3dcf4:	vld1.64	{d16-d17}, [r2], r5
   3dcf8:	add	r8, ip, #16
   3dcfc:	subs	r0, r0, #2
   3dd00:	add	r3, r3, #4
   3dd04:	vst1.64	{d16-d17}, [ip], r5
   3dd08:	vld1.64	{d16-d17}, [r7]
   3dd0c:	vst1.64	{d16-d17}, [r8]
   3dd10:	bne	3dcf0 <GetDataSlab+0xdd70>
   3dd14:	ldr	r0, [sp, #28]
   3dd18:	mov	r2, r6
   3dd1c:	cmp	r0, #0
   3dd20:	beq	3dd38 <GetDataSlab+0xddb8>
   3dd24:	add	r0, r2, r3, lsl #3
   3dd28:	vld1.64	{d16-d17}, [r0]
   3dd2c:	ldr	r0, [sp, #60]	; 0x3c
   3dd30:	add	r0, r0, r3, lsl #3
   3dd34:	vst1.64	{d16-d17}, [r0]
   3dd38:	ldr	r0, [sp, #72]	; 0x48
   3dd3c:	ldr	r3, [sp, #24]
   3dd40:	ldr	ip, [sp, #92]	; 0x5c
   3dd44:	ldr	r8, [sp, #40]	; 0x28
   3dd48:	cmp	r0, r3
   3dd4c:	beq	3ddc0 <GetDataSlab+0xde40>
   3dd50:	ldr	r0, [sp, #52]	; 0x34
   3dd54:	mov	r7, r3
   3dd58:	cmp	r0, #0
   3dd5c:	beq	3dd78 <GetDataSlab+0xddf8>
   3dd60:	add	r0, r2, r3, lsl #3
   3dd64:	orr	r7, r3, #1
   3dd68:	vldr	d16, [r0]
   3dd6c:	ldr	r0, [sp, #60]	; 0x3c
   3dd70:	add	r0, r0, r3, lsl #3
   3dd74:	vstr	d16, [r0]
   3dd78:	ldr	r2, [sp, #72]	; 0x48
   3dd7c:	orr	r0, r3, #1
   3dd80:	cmp	r2, r0
   3dd84:	beq	3ddc0 <GetDataSlab+0xde40>
   3dd88:	ldr	r0, [sp, #36]	; 0x24
   3dd8c:	ldr	r2, [sp, #72]	; 0x48
   3dd90:	lsl	r3, r7, #3
   3dd94:	add	r0, r9, r0, lsl #3
   3dd98:	sub	r2, r2, r7
   3dd9c:	add	r7, r0, r3
   3dda0:	add	r6, sl, r3
   3dda4:	add	r3, r3, #16
   3dda8:	subs	r2, r2, #2
   3ddac:	vldr	d16, [r7, #-8]
   3ddb0:	vstr	d16, [r6]
   3ddb4:	vldr	d16, [r7]
   3ddb8:	vstr	d16, [r6, #8]
   3ddbc:	bne	3dd9c <GetDataSlab+0xde1c>
   3ddc0:	ldr	r0, [fp, #24]
   3ddc4:	add	r9, r9, r8, lsl #3
   3ddc8:	add	r1, r1, r8
   3ddcc:	cmp	r0, #2
   3ddd0:	blt	3dc4c <GetDataSlab+0xdccc>
   3ddd4:	ldr	r2, [sp, #48]	; 0x30
   3ddd8:	mov	r0, #0
   3dddc:	b	3de08 <GetDataSlab+0xde88>
   3dde0:	sub	r5, fp, #176	; 0xb0
   3dde4:	sub	r3, r3, r7
   3dde8:	ldr	r6, [r5, r0]
   3ddec:	ldr	r5, [ip, r0]
   3ddf0:	mla	r3, r5, r6, r3
   3ddf4:	add	r1, r3, r1
   3ddf8:	add	r9, r9, r3, lsl #3
   3ddfc:	subs	r2, r2, #1
   3de00:	add	r0, r0, #4
   3de04:	beq	3dc4c <GetDataSlab+0xdccc>
   3de08:	ldr	r3, [r4, r0]
   3de0c:	ldr	r5, [sp, #84]	; 0x54
   3de10:	add	r3, r3, #1
   3de14:	str	r3, [r4, r0]
   3de18:	ldr	r7, [r5, r0]
   3de1c:	sdiv	r6, r3, r7
   3de20:	mls	r3, r6, r7, r3
   3de24:	cmp	r3, #0
   3de28:	bne	3dc3c <GetDataSlab+0xdcbc>
   3de2c:	mov	r3, #0
   3de30:	str	r3, [r4, r0]
   3de34:	ldr	r3, [sp, #80]	; 0x50
   3de38:	ldr	r3, [r3, r0]
   3de3c:	sdiv	r7, r1, r3
   3de40:	mls	r7, r7, r3, r1
   3de44:	cmp	r7, #0
   3de48:	bne	3dde0 <GetDataSlab+0xde60>
   3de4c:	ldr	r3, [ip, r0]
   3de50:	cmp	r3, #0
   3de54:	beq	3ddfc <GetDataSlab+0xde7c>
   3de58:	sub	r5, fp, #176	; 0xb0
   3de5c:	ldr	r7, [r5, r0]
   3de60:	mla	r1, r7, r3, r1
   3de64:	mul	r3, r7, r3
   3de68:	b	3ddf8 <GetDataSlab+0xde78>
   3de6c:	ldr	r0, [sp, #80]	; 0x50
   3de70:	add	sl, r0, r7, lsl #3
   3de74:	ldr	r0, [sp, #20]
   3de78:	cmp	r0, #1
   3de7c:	bne	4a320 <GetDataSlab+0x1a3a0>
   3de80:	ldr	r0, [sp, #60]	; 0x3c
   3de84:	ldr	r2, [sp, #88]	; 0x58
   3de88:	ldr	r3, [fp, #12]
   3de8c:	sub	r6, fp, #96	; 0x60
   3de90:	cmp	r0, #1
   3de94:	blt	4a578 <GetDataSlab+0x1a5f8>
   3de98:	ldr	r8, [sp, #52]	; 0x34
   3de9c:	mov	r1, #1
   3dea0:	ldr	r9, [sp, #16]
   3dea4:	sub	r0, r8, #2
   3dea8:	add	r1, r1, r0, lsr #1
   3deac:	lsr	r0, r0, #1
   3deb0:	str	r0, [sp, #8]
   3deb4:	mov	r0, #0
   3deb8:	and	r5, r1, #1
   3debc:	str	r0, [sp, #56]	; 0x38
   3dec0:	sub	r1, r1, r5
   3dec4:	str	r5, [sp, #20]
   3dec8:	str	r1, [sp]
   3decc:	sub	r1, fp, #136	; 0x88
   3ded0:	orr	r4, r1, #4
   3ded4:	ldr	r1, [fp, #20]
   3ded8:	str	r4, [sp, #32]
   3dedc:	add	lr, r1, #4
   3dee0:	orr	r1, ip, #4
   3dee4:	str	r1, [sp, #68]	; 0x44
   3dee8:	ldr	r1, [fp, #24]
   3deec:	str	lr, [sp, #28]
   3def0:	sub	r1, r1, #1
   3def4:	str	r1, [sp, #24]
   3def8:	orr	r1, r6, #4
   3defc:	mov	r6, r2
   3df00:	str	r1, [sp, #4]
   3df04:	lsl	r1, r8, #3
   3df08:	str	r1, [sp, #48]	; 0x30
   3df0c:	bic	r1, r8, #1
   3df10:	str	r1, [sp, #12]
   3df14:	ldr	r1, [r3], #4
   3df18:	str	r3, [sp, #64]	; 0x40
   3df1c:	str	r1, [sp, #44]	; 0x2c
   3df20:	b	3df58 <GetDataSlab+0xdfd8>
   3df24:	ldr	r1, [sp, #4]
   3df28:	ldr	r6, [sp, #72]	; 0x48
   3df2c:	ldr	r0, [r1, r0]
   3df30:	add	sl, sl, r0, lsl #3
   3df34:	add	r7, r0, r7
   3df38:	ldr	r0, [sp, #48]	; 0x30
   3df3c:	ldr	r1, [sp, #56]	; 0x38
   3df40:	add	r6, r6, r0
   3df44:	ldr	r0, [sp, #60]	; 0x3c
   3df48:	add	r1, r1, r8
   3df4c:	str	r1, [sp, #56]	; 0x38
   3df50:	cmp	r1, r0
   3df54:	bge	4a578 <GetDataSlab+0x1a5f8>
   3df58:	cmp	r8, #1
   3df5c:	str	r6, [sp, #72]	; 0x48
   3df60:	blt	3e0c8 <GetDataSlab+0xe148>
   3df64:	ldr	r0, [sp, #44]	; 0x2c
   3df68:	add	r1, sl, r0, lsl #3
   3df6c:	mov	r0, #0
   3df70:	str	r1, [sp, #84]	; 0x54
   3df74:	beq	3e098 <GetDataSlab+0xe118>
   3df78:	ldr	r0, [sp, #8]
   3df7c:	str	sl, [sp, #40]	; 0x28
   3df80:	mov	sl, #0
   3df84:	str	r7, [sp, #36]	; 0x24
   3df88:	cmp	r0, #0
   3df8c:	beq	3e024 <GetDataSlab+0xe0a4>
   3df90:	ldr	r9, [sp]
   3df94:	mov	r4, r6
   3df98:	mov	r6, r1
   3df9c:	mov	r5, r1
   3dfa0:	mov	r8, r4
   3dfa4:	mov	r7, #32
   3dfa8:	vld1.64	{d8-d9}, [r5], r7
   3dfac:	vmov.32	r0, d9[0]
   3dfb0:	vmov.32	r1, d9[1]
   3dfb4:	bl	6b664 <__aeabi_l2d>
   3dfb8:	vmov.32	r2, d8[0]
   3dfbc:	vmov.32	r3, d8[1]
   3dfc0:	vmov	d9, r0, r1
   3dfc4:	mov	r0, r2
   3dfc8:	mov	r1, r3
   3dfcc:	bl	6b664 <__aeabi_l2d>
   3dfd0:	vmov	d8, r0, r1
   3dfd4:	add	r0, r6, #16
   3dfd8:	vst1.64	{d8-d9}, [r8], r7
   3dfdc:	vld1.64	{d8-d9}, [r0]
   3dfe0:	vmov.32	r0, d9[0]
   3dfe4:	vmov.32	r1, d9[1]
   3dfe8:	bl	6b664 <__aeabi_l2d>
   3dfec:	vmov.32	r2, d8[0]
   3dff0:	vmov.32	r3, d8[1]
   3dff4:	vmov	d9, r0, r1
   3dff8:	mov	r0, r2
   3dffc:	mov	r1, r3
   3e000:	bl	6b664 <__aeabi_l2d>
   3e004:	vmov	d8, r0, r1
   3e008:	add	r0, r4, #16
   3e00c:	subs	r9, r9, #2
   3e010:	add	sl, sl, #4
   3e014:	mov	r4, r8
   3e018:	mov	r6, r5
   3e01c:	vst1.64	{d8-d9}, [r0]
   3e020:	bne	3dfa4 <GetDataSlab+0xe024>
   3e024:	ldr	r0, [sp, #20]
   3e028:	ldr	r9, [sp, #16]
   3e02c:	cmp	r0, #0
   3e030:	ldr	r0, [sp, #88]	; 0x58
   3e034:	beq	3e07c <GetDataSlab+0xe0fc>
   3e038:	ldr	r1, [sp, #56]	; 0x38
   3e03c:	add	r4, r0, r1, lsl #3
   3e040:	ldr	r0, [sp, #84]	; 0x54
   3e044:	add	r0, r0, sl, lsl #3
   3e048:	vld1.64	{d8-d9}, [r0]
   3e04c:	vmov.32	r0, d9[0]
   3e050:	vmov.32	r1, d9[1]
   3e054:	bl	6b664 <__aeabi_l2d>
   3e058:	vmov.32	r2, d8[0]
   3e05c:	vmov.32	r3, d8[1]
   3e060:	vmov	d9, r0, r1
   3e064:	mov	r0, r2
   3e068:	mov	r1, r3
   3e06c:	bl	6b664 <__aeabi_l2d>
   3e070:	vmov	d8, r0, r1
   3e074:	add	r0, r4, sl, lsl #3
   3e078:	vst1.64	{d8-d9}, [r0]
   3e07c:	ldr	r8, [sp, #52]	; 0x34
   3e080:	ldr	r0, [sp, #12]
   3e084:	ldr	sl, [sp, #40]	; 0x28
   3e088:	ldr	r6, [sp, #72]	; 0x48
   3e08c:	ldr	r7, [sp, #36]	; 0x24
   3e090:	cmp	r8, r0
   3e094:	beq	3e0c8 <GetDataSlab+0xe148>
   3e098:	sub	r4, r8, r0
   3e09c:	lsl	r5, r0, #3
   3e0a0:	ldr	r1, [sp, #84]	; 0x54
   3e0a4:	ldr	r0, [r1, r5]!
   3e0a8:	ldr	r1, [r1, #4]
   3e0ac:	bl	6b664 <__aeabi_l2d>
   3e0b0:	mov	r2, r6
   3e0b4:	subs	r4, r4, #1
   3e0b8:	str	r0, [r2, r5]!
   3e0bc:	add	r5, r5, #8
   3e0c0:	str	r1, [r2, #4]
   3e0c4:	bne	3e0a0 <GetDataSlab+0xe120>
   3e0c8:	ldr	r0, [fp, #24]
   3e0cc:	add	sl, sl, r9, lsl #3
   3e0d0:	add	r7, r7, r9
   3e0d4:	cmp	r0, #2
   3e0d8:	blt	3df38 <GetDataSlab+0xdfb8>
   3e0dc:	sub	r4, fp, #176	; 0xb0
   3e0e0:	ldr	r1, [sp, #24]
   3e0e4:	ldr	lr, [sp, #28]
   3e0e8:	mov	r0, #0
   3e0ec:	mov	ip, r4
   3e0f0:	ldr	r4, [sp, #32]
   3e0f4:	b	3e124 <GetDataSlab+0xe1a4>
   3e0f8:	ldr	r5, [sp, #64]	; 0x40
   3e0fc:	ldr	r6, [ip, r0]
   3e100:	sub	r2, r2, r3
   3e104:	ldr	r5, [r5, r0]
   3e108:	mla	r2, r5, r6, r2
   3e10c:	add	r7, r2, r7
   3e110:	add	sl, sl, r2, lsl #3
   3e114:	ldr	r6, [sp, #72]	; 0x48
   3e118:	subs	r1, r1, #1
   3e11c:	add	r0, r0, #4
   3e120:	beq	3df38 <GetDataSlab+0xdfb8>
   3e124:	ldr	r2, [r4, r0]
   3e128:	add	r2, r2, #1
   3e12c:	str	r2, [r4, r0]
   3e130:	ldr	r3, [lr, r0]
   3e134:	sdiv	r6, r2, r3
   3e138:	mls	r2, r6, r3, r2
   3e13c:	cmp	r2, #0
   3e140:	bne	3df24 <GetDataSlab+0xdfa4>
   3e144:	mov	r2, #0
   3e148:	str	r2, [r4, r0]
   3e14c:	ldr	r2, [sp, #68]	; 0x44
   3e150:	ldr	r2, [r2, r0]
   3e154:	sdiv	r3, r7, r2
   3e158:	mls	r3, r3, r2, r7
   3e15c:	cmp	r3, #0
   3e160:	bne	3e0f8 <GetDataSlab+0xe178>
   3e164:	ldr	r2, [sp, #64]	; 0x40
   3e168:	ldr	r2, [r2, r0]
   3e16c:	cmp	r2, #0
   3e170:	beq	3e114 <GetDataSlab+0xe194>
   3e174:	ldr	r3, [ip, r0]
   3e178:	mla	r7, r3, r2, r7
   3e17c:	mul	r2, r3, r2
   3e180:	b	3e110 <GetDataSlab+0xe190>
   3e184:	ldr	r0, [sp, #80]	; 0x50
   3e188:	cmp	sl, #1
   3e18c:	add	ip, r0, r3
   3e190:	bne	4aa34 <GetDataSlab+0x1aab4>
   3e194:	ldr	r0, [sp, #76]	; 0x4c
   3e198:	ldr	r2, [fp, #12]
   3e19c:	sub	r7, fp, #96	; 0x60
   3e1a0:	cmp	r0, #1
   3e1a4:	blt	56c18 <GetDataSlab+0x26c98>
   3e1a8:	ldr	lr, [sp, #60]	; 0x3c
   3e1ac:	mov	r1, #1
   3e1b0:	ldr	sl, [sp, #40]	; 0x28
   3e1b4:	mov	r6, #32
   3e1b8:	mov	r8, #0
   3e1bc:	sub	r0, lr, #4
   3e1c0:	add	r1, r1, r0, lsr #2
   3e1c4:	lsr	r0, r0, #2
   3e1c8:	str	r0, [sp, #24]
   3e1cc:	ldr	r0, [sp, #88]	; 0x58
   3e1d0:	and	r4, r1, #1
   3e1d4:	sub	r1, r1, r4
   3e1d8:	str	r4, [sp, #32]
   3e1dc:	str	r1, [sp, #16]
   3e1e0:	sub	r1, fp, #136	; 0x88
   3e1e4:	orr	r4, r1, #4
   3e1e8:	ldr	r1, [fp, #20]
   3e1ec:	str	r0, [sp, #68]	; 0x44
   3e1f0:	mov	r0, #0
   3e1f4:	str	r0, [sp, #72]	; 0x48
   3e1f8:	add	r9, r1, #4
   3e1fc:	sub	r1, fp, #176	; 0xb0
   3e200:	orr	r1, r1, #4
   3e204:	str	r9, [sp, #20]
   3e208:	str	r1, [sp, #84]	; 0x54
   3e20c:	add	r1, r2, #4
   3e210:	str	r1, [sp, #80]	; 0x50
   3e214:	ldr	r1, [fp, #24]
   3e218:	sub	r1, r1, #1
   3e21c:	str	r1, [sp, #44]	; 0x2c
   3e220:	orr	r1, r7, #4
   3e224:	str	r1, [sp, #36]	; 0x24
   3e228:	lsl	r1, lr, #2
   3e22c:	str	r1, [sp, #64]	; 0x40
   3e230:	and	r1, lr, #1
   3e234:	str	r1, [sp, #48]	; 0x30
   3e238:	bic	r1, lr, #3
   3e23c:	str	r1, [sp, #28]
   3e240:	cmp	lr, #1
   3e244:	bge	3e298 <GetDataSlab+0xe318>
   3e248:	b	3e43c <GetDataSlab+0xe4bc>
   3e24c:	ldr	r0, [sp, #36]	; 0x24
   3e250:	mov	r6, #32
   3e254:	ldr	r0, [r0, r1]
   3e258:	add	ip, ip, r0
   3e25c:	add	r3, r0, r3
   3e260:	ldr	r0, [sp, #64]	; 0x40
   3e264:	ldr	r1, [sp, #68]	; 0x44
   3e268:	add	r8, r8, lr
   3e26c:	mov	r2, #0
   3e270:	add	r1, r1, r0
   3e274:	ldr	r0, [sp, #72]	; 0x48
   3e278:	str	r1, [sp, #68]	; 0x44
   3e27c:	add	r0, r0, #1
   3e280:	str	r0, [sp, #72]	; 0x48
   3e284:	ldr	r0, [sp, #76]	; 0x4c
   3e288:	cmp	r8, r0
   3e28c:	bge	56c1c <GetDataSlab+0x26c9c>
   3e290:	cmp	lr, #1
   3e294:	blt	3e43c <GetDataSlab+0xe4bc>
   3e298:	ldr	r0, [fp, #12]
   3e29c:	cmp	lr, #4
   3e2a0:	ldr	r5, [r0]
   3e2a4:	ldr	r0, [sp, #88]	; 0x58
   3e2a8:	add	r1, r0, r8, lsl #2
   3e2ac:	add	r2, ip, r5
   3e2b0:	str	r1, [sp, #52]	; 0x34
   3e2b4:	mov	r1, #0
   3e2b8:	bcc	3e3bc <GetDataSlab+0xe43c>
   3e2bc:	str	r5, [sp, #56]	; 0x38
   3e2c0:	ldr	r5, [sp, #64]	; 0x40
   3e2c4:	ldr	r7, [sp, #72]	; 0x48
   3e2c8:	mla	r0, r5, r7, r0
   3e2cc:	ldr	r5, [sp, #56]	; 0x38
   3e2d0:	add	r7, ip, lr
   3e2d4:	add	r7, r7, r5
   3e2d8:	cmp	r0, r7
   3e2dc:	bcs	3e300 <GetDataSlab+0xe380>
   3e2e0:	ldr	r0, [sp, #64]	; 0x40
   3e2e4:	ldr	r5, [sp, #72]	; 0x48
   3e2e8:	ldr	r7, [sp, #88]	; 0x58
   3e2ec:	mla	r0, r0, r5, r0
   3e2f0:	ldr	r5, [sp, #56]	; 0x38
   3e2f4:	add	r0, r7, r0
   3e2f8:	cmp	r2, r0
   3e2fc:	bcc	3e3bc <GetDataSlab+0xe43c>
   3e300:	ldr	r0, [sp, #24]
   3e304:	mov	r1, #0
   3e308:	cmp	r0, #0
   3e30c:	beq	3e36c <GetDataSlab+0xe3ec>
   3e310:	ldr	lr, [sp, #68]	; 0x44
   3e314:	ldr	sl, [sp, #16]
   3e318:	sub	r5, fp, #468	; 0x1d4
   3e31c:	sub	r9, fp, #472	; 0x1d8
   3e320:	mov	r0, r2
   3e324:	subs	sl, sl, #2
   3e328:	ldr	r7, [r0, r1]!
   3e32c:	add	r1, r1, #8
   3e330:	str	r7, [fp, #-472]	; 0xfffffe28
   3e334:	add	r7, lr, #16
   3e338:	vld1.32	{d16[0]}, [r9 :32]
   3e33c:	vmovl.u8	q8, d16
   3e340:	vmovl.u16	q8, d16
   3e344:	vcvt.f32.u32	q8, q8
   3e348:	vst1.32	{d16-d17}, [lr], r6
   3e34c:	ldr	r0, [r0, #4]
   3e350:	str	r0, [fp, #-468]	; 0xfffffe2c
   3e354:	vld1.32	{d16[0]}, [r5 :32]
   3e358:	vmovl.u8	q8, d16
   3e35c:	vmovl.u16	q8, d16
   3e360:	vcvt.f32.u32	q8, q8
   3e364:	vst1.32	{d16-d17}, [r7]
   3e368:	bne	3e320 <GetDataSlab+0xe3a0>
   3e36c:	ldr	r0, [sp, #32]
   3e370:	ldr	sl, [sp, #40]	; 0x28
   3e374:	ldr	r5, [sp, #56]	; 0x38
   3e378:	ldr	r9, [sp, #20]
   3e37c:	cmp	r0, #0
   3e380:	beq	3e3ac <GetDataSlab+0xe42c>
   3e384:	ldr	r0, [r2, r1]
   3e388:	str	r0, [fp, #-476]	; 0xfffffe24
   3e38c:	sub	r0, fp, #476	; 0x1dc
   3e390:	vld1.32	{d16[0]}, [r0 :32]
   3e394:	ldr	r0, [sp, #52]	; 0x34
   3e398:	add	r0, r0, r1, lsl #2
   3e39c:	vmovl.u8	q8, d16
   3e3a0:	vmovl.u16	q8, d16
   3e3a4:	vcvt.f32.u32	q8, q8
   3e3a8:	vst1.32	{d16-d17}, [r0]
   3e3ac:	ldr	lr, [sp, #60]	; 0x3c
   3e3b0:	ldr	r1, [sp, #28]
   3e3b4:	cmp	lr, r1
   3e3b8:	beq	3e43c <GetDataSlab+0xe4bc>
   3e3bc:	ldr	r0, [sp, #48]	; 0x30
   3e3c0:	mov	r7, r1
   3e3c4:	cmp	r0, #0
   3e3c8:	beq	3e3e8 <GetDataSlab+0xe468>
   3e3cc:	ldrb	r2, [r2, r1]
   3e3d0:	ldr	r0, [sp, #52]	; 0x34
   3e3d4:	orr	r7, r1, #1
   3e3d8:	vmov	s0, r2
   3e3dc:	add	r0, r0, r1, lsl #2
   3e3e0:	vcvt.f32.u32	s0, s0
   3e3e4:	vstr	s0, [r0]
   3e3e8:	orr	r0, r1, #1
   3e3ec:	cmp	lr, r0
   3e3f0:	beq	3e43c <GetDataSlab+0xe4bc>
   3e3f4:	ldr	r0, [sp, #68]	; 0x44
   3e3f8:	sub	r2, lr, r7
   3e3fc:	add	r1, r0, r7, lsl #2
   3e400:	add	r0, r7, r5
   3e404:	add	r0, ip, r0
   3e408:	add	r7, r0, #1
   3e40c:	ldrb	r0, [r7, #-1]
   3e410:	subs	r2, r2, #2
   3e414:	vmov	s0, r0
   3e418:	vcvt.f32.u32	s0, s0
   3e41c:	vstr	s0, [r1]
   3e420:	ldrb	r0, [r7]
   3e424:	add	r7, r7, #2
   3e428:	vmov	s0, r0
   3e42c:	vcvt.f32.u32	s0, s0
   3e430:	vstr	s0, [r1, #4]
   3e434:	add	r1, r1, #8
   3e438:	bne	3e40c <GetDataSlab+0xe48c>
   3e43c:	ldr	r0, [fp, #24]
   3e440:	add	ip, ip, sl
   3e444:	add	r3, r3, sl
   3e448:	cmp	r0, #2
   3e44c:	blt	3e260 <GetDataSlab+0xe2e0>
   3e450:	ldr	r2, [sp, #44]	; 0x2c
   3e454:	mov	r1, #0
   3e458:	b	3e48c <GetDataSlab+0xe50c>
   3e45c:	ldr	r5, [sp, #80]	; 0x50
   3e460:	sub	r6, fp, #176	; 0xb0
   3e464:	sub	r0, r7, r0
   3e468:	ldr	r6, [r6, r1]
   3e46c:	ldr	r5, [r5, r1]
   3e470:	mla	r0, r5, r6, r0
   3e474:	add	r3, r0, r3
   3e478:	add	ip, ip, r0
   3e47c:	mov	r6, #32
   3e480:	subs	r2, r2, #1
   3e484:	add	r1, r1, #4
   3e488:	beq	3e260 <GetDataSlab+0xe2e0>
   3e48c:	ldr	r0, [r4, r1]
   3e490:	add	r0, r0, #1
   3e494:	str	r0, [r4, r1]
   3e498:	ldr	r7, [r9, r1]
   3e49c:	sdiv	r6, r0, r7
   3e4a0:	mls	r0, r6, r7, r0
   3e4a4:	cmp	r0, #0
   3e4a8:	bne	3e24c <GetDataSlab+0xe2cc>
   3e4ac:	mov	r0, #0
   3e4b0:	str	r0, [r4, r1]
   3e4b4:	ldr	r0, [sp, #84]	; 0x54
   3e4b8:	ldr	r7, [r0, r1]
   3e4bc:	sdiv	r0, r3, r7
   3e4c0:	mls	r0, r0, r7, r3
   3e4c4:	cmp	r0, #0
   3e4c8:	bne	3e45c <GetDataSlab+0xe4dc>
   3e4cc:	ldr	r0, [sp, #80]	; 0x50
   3e4d0:	ldr	r0, [r0, r1]
   3e4d4:	cmp	r0, #0
   3e4d8:	beq	3e47c <GetDataSlab+0xe4fc>
   3e4dc:	sub	r7, fp, #176	; 0xb0
   3e4e0:	ldr	r7, [r7, r1]
   3e4e4:	mla	r3, r7, r0, r3
   3e4e8:	mla	ip, r7, r0, ip
   3e4ec:	b	3e47c <GetDataSlab+0xe4fc>
   3e4f0:	ldr	r0, [sp, #80]	; 0x50
   3e4f4:	ldr	r7, [sp, #68]	; 0x44
   3e4f8:	add	r9, r0, r1, lsl #1
   3e4fc:	cmp	r7, #1
   3e500:	bne	4ac64 <GetDataSlab+0x1ace4>
   3e504:	ldr	r0, [sp, #76]	; 0x4c
   3e508:	ldr	r3, [fp, #12]
   3e50c:	ldr	r7, [sp, #64]	; 0x40
   3e510:	cmp	r0, #1
   3e514:	blt	56c18 <GetDataSlab+0x26c98>
   3e518:	sub	r0, r7, #4
   3e51c:	mov	r2, #1
   3e520:	ldr	r8, [sp, #48]	; 0x30
   3e524:	mov	lr, r7
   3e528:	add	r2, r2, r0, lsr #2
   3e52c:	lsr	r0, r0, #2
   3e530:	str	r0, [sp, #32]
   3e534:	mov	r0, #0
   3e538:	and	r5, r2, #1
   3e53c:	str	r0, [sp, #68]	; 0x44
   3e540:	sub	r2, r2, r5
   3e544:	str	r5, [sp, #40]	; 0x28
   3e548:	str	r2, [sp, #24]
   3e54c:	sub	r2, fp, #136	; 0x88
   3e550:	orr	r4, r2, #4
   3e554:	ldr	r2, [fp, #20]
   3e558:	add	r2, r2, #4
   3e55c:	str	r2, [sp, #84]	; 0x54
   3e560:	orr	r2, ip, #4
   3e564:	str	r2, [sp, #80]	; 0x50
   3e568:	ldr	r2, [fp, #24]
   3e56c:	sub	r2, r2, #1
   3e570:	str	r2, [sp, #52]	; 0x34
   3e574:	orr	r2, r6, #4
   3e578:	str	r2, [sp, #28]
   3e57c:	lsl	r2, r7, #2
   3e580:	str	r2, [sp, #60]	; 0x3c
   3e584:	bic	r2, r7, #3
   3e588:	str	r2, [sp, #36]	; 0x24
   3e58c:	ldr	r2, [r3], #4
   3e590:	str	r3, [sp, #92]	; 0x5c
   3e594:	ldr	r3, [sp, #88]	; 0x58
   3e598:	str	r2, [sp, #56]	; 0x38
   3e59c:	b	3e5d8 <GetDataSlab+0xe658>
   3e5a0:	ldr	r0, [sp, #28]
   3e5a4:	ldr	r0, [r0, r2]
   3e5a8:	add	r9, r9, r0, lsl #1
   3e5ac:	add	r1, r0, r1
   3e5b0:	ldr	r0, [sp, #60]	; 0x3c
   3e5b4:	ldr	r3, [sp, #72]	; 0x48
   3e5b8:	ldr	r7, [sp, #68]	; 0x44
   3e5bc:	mov	r2, #0
   3e5c0:	add	r3, r3, r0
   3e5c4:	ldr	r0, [sp, #76]	; 0x4c
   3e5c8:	add	r7, r7, lr
   3e5cc:	str	r7, [sp, #68]	; 0x44
   3e5d0:	cmp	r7, r0
   3e5d4:	bge	56c1c <GetDataSlab+0x26c9c>
   3e5d8:	cmp	lr, #1
   3e5dc:	sub	ip, fp, #176	; 0xb0
   3e5e0:	str	r3, [sp, #72]	; 0x48
   3e5e4:	blt	3e6f4 <GetDataSlab+0xe774>
   3e5e8:	mov	r0, #0
   3e5ec:	cmp	lr, #4
   3e5f0:	bcc	3e6c8 <GetDataSlab+0xe748>
   3e5f4:	ldr	r0, [sp, #56]	; 0x38
   3e5f8:	mov	r2, #0
   3e5fc:	add	ip, r9, r0, lsl #1
   3e600:	ldr	r0, [sp, #32]
   3e604:	str	ip, [sp, #44]	; 0x2c
   3e608:	cmp	r0, #0
   3e60c:	beq	3e668 <GetDataSlab+0xe6e8>
   3e610:	ldr	sl, [sp, #24]
   3e614:	mov	lr, ip
   3e618:	mov	r5, #16
   3e61c:	sub	r6, fp, #512	; 0x200
   3e620:	vld1.16	{d16}, [lr], r5
   3e624:	mov	r7, #32
   3e628:	add	r0, r3, #16
   3e62c:	subs	sl, sl, #2
   3e630:	add	r2, r2, #8
   3e634:	vmovl.s16	q8, d16
   3e638:	vcvt.f32.s32	q8, q8
   3e63c:	vst1.32	{d16-d17}, [r3], r7
   3e640:	ldr	r8, [ip, #8]
   3e644:	ldr	r7, [ip, #12]
   3e648:	mov	ip, lr
   3e64c:	str	r7, [fp, #-508]	; 0xfffffe04
   3e650:	str	r8, [fp, #-512]	; 0xfffffe00
   3e654:	vld1.16	{d16}, [r6 :64]
   3e658:	vmovl.s16	q8, d16
   3e65c:	vcvt.f32.s32	q8, q8
   3e660:	vst1.32	{d16-d17}, [r0]
   3e664:	bne	3e620 <GetDataSlab+0xe6a0>
   3e668:	ldr	r0, [sp, #40]	; 0x28
   3e66c:	sub	ip, fp, #176	; 0xb0
   3e670:	cmp	r0, #0
   3e674:	ldr	r0, [sp, #88]	; 0x58
   3e678:	beq	3e6b0 <GetDataSlab+0xe730>
   3e67c:	ldr	r3, [sp, #68]	; 0x44
   3e680:	ldr	r7, [sp, #44]	; 0x2c
   3e684:	add	r0, r0, r3, lsl #2
   3e688:	ldr	r3, [r7, r2, lsl #1]!
   3e68c:	add	r0, r0, r2, lsl #2
   3e690:	str	r3, [fp, #-520]	; 0xfffffdf8
   3e694:	ldr	r3, [r7, #4]
   3e698:	str	r3, [fp, #-516]	; 0xfffffdfc
   3e69c:	sub	r3, fp, #520	; 0x208
   3e6a0:	vld1.16	{d16}, [r3 :64]
   3e6a4:	vmovl.s16	q8, d16
   3e6a8:	vcvt.f32.s32	q8, q8
   3e6ac:	vst1.32	{d16-d17}, [r0]
   3e6b0:	ldr	lr, [sp, #64]	; 0x40
   3e6b4:	ldr	r0, [sp, #36]	; 0x24
   3e6b8:	ldr	r8, [sp, #48]	; 0x30
   3e6bc:	ldr	r3, [sp, #72]	; 0x48
   3e6c0:	cmp	lr, r0
   3e6c4:	beq	3e6f4 <GetDataSlab+0xe774>
   3e6c8:	ldr	r5, [sp, #56]	; 0x38
   3e6cc:	add	r2, r3, r0, lsl #2
   3e6d0:	sub	r3, lr, r0
   3e6d4:	add	r7, r9, r5, lsl #1
   3e6d8:	add	r0, r7, r0, lsl #1
   3e6dc:	ldrsh	r7, [r0], #2
   3e6e0:	subs	r3, r3, #1
   3e6e4:	vmov	s0, r7
   3e6e8:	vcvt.f32.s32	s0, s0
   3e6ec:	vstmia	r2!, {s0}
   3e6f0:	bne	3e6dc <GetDataSlab+0xe75c>
   3e6f4:	ldr	r0, [fp, #24]
   3e6f8:	ldr	r5, [sp, #92]	; 0x5c
   3e6fc:	add	r9, r9, r8, lsl #1
   3e700:	add	r1, r1, r8
   3e704:	cmp	r0, #2
   3e708:	blt	3e5b0 <GetDataSlab+0xe630>
   3e70c:	ldr	sl, [sp, #52]	; 0x34
   3e710:	mov	r2, #0
   3e714:	b	3e73c <GetDataSlab+0xe7bc>
   3e718:	ldr	r7, [ip, r2]
   3e71c:	ldr	r6, [r5, r2]
   3e720:	sub	r0, r0, r3
   3e724:	mla	r0, r6, r7, r0
   3e728:	add	r1, r0, r1
   3e72c:	add	r9, r9, r0, lsl #1
   3e730:	subs	sl, sl, #1
   3e734:	add	r2, r2, #4
   3e738:	beq	3e5b0 <GetDataSlab+0xe630>
   3e73c:	ldr	r0, [r4, r2]
   3e740:	ldr	r3, [sp, #84]	; 0x54
   3e744:	add	r0, r0, #1
   3e748:	str	r0, [r4, r2]
   3e74c:	ldr	r3, [r3, r2]
   3e750:	sdiv	r7, r0, r3
   3e754:	mls	r0, r7, r3, r0
   3e758:	cmp	r0, #0
   3e75c:	bne	3e5a0 <GetDataSlab+0xe620>
   3e760:	mov	r0, #0
   3e764:	str	r0, [r4, r2]
   3e768:	ldr	r0, [sp, #80]	; 0x50
   3e76c:	ldr	r0, [r0, r2]
   3e770:	sdiv	r3, r1, r0
   3e774:	mls	r3, r3, r0, r1
   3e778:	cmp	r3, #0
   3e77c:	bne	3e718 <GetDataSlab+0xe798>
   3e780:	ldr	r0, [r5, r2]
   3e784:	cmp	r0, #0
   3e788:	beq	3e730 <GetDataSlab+0xe7b0>
   3e78c:	ldr	r3, [ip, r2]
   3e790:	mla	r1, r3, r0, r1
   3e794:	mul	r0, r3, r0
   3e798:	b	3e72c <GetDataSlab+0xe7ac>
   3e79c:	ldr	r0, [sp, #80]	; 0x50
   3e7a0:	ldr	r7, [sp, #68]	; 0x44
   3e7a4:	add	r9, r0, r1, lsl #1
   3e7a8:	cmp	r7, #1
   3e7ac:	bne	4ae8c <GetDataSlab+0x1af0c>
   3e7b0:	ldr	r0, [sp, #76]	; 0x4c
   3e7b4:	ldr	r3, [fp, #12]
   3e7b8:	ldr	r7, [sp, #64]	; 0x40
   3e7bc:	cmp	r0, #1
   3e7c0:	blt	56c18 <GetDataSlab+0x26c98>
   3e7c4:	sub	r0, r7, #4
   3e7c8:	mov	r2, #1
   3e7cc:	ldr	r8, [sp, #48]	; 0x30
   3e7d0:	mov	lr, r7
   3e7d4:	add	r2, r2, r0, lsr #2
   3e7d8:	lsr	r0, r0, #2
   3e7dc:	str	r0, [sp, #32]
   3e7e0:	mov	r0, #0
   3e7e4:	and	r5, r2, #1
   3e7e8:	str	r0, [sp, #68]	; 0x44
   3e7ec:	sub	r2, r2, r5
   3e7f0:	str	r5, [sp, #40]	; 0x28
   3e7f4:	str	r2, [sp, #24]
   3e7f8:	sub	r2, fp, #136	; 0x88
   3e7fc:	orr	r4, r2, #4
   3e800:	ldr	r2, [fp, #20]
   3e804:	add	r2, r2, #4
   3e808:	str	r2, [sp, #84]	; 0x54
   3e80c:	orr	r2, ip, #4
   3e810:	str	r2, [sp, #80]	; 0x50
   3e814:	ldr	r2, [fp, #24]
   3e818:	sub	r2, r2, #1
   3e81c:	str	r2, [sp, #52]	; 0x34
   3e820:	orr	r2, r6, #4
   3e824:	str	r2, [sp, #28]
   3e828:	lsl	r2, r7, #2
   3e82c:	str	r2, [sp, #60]	; 0x3c
   3e830:	bic	r2, r7, #3
   3e834:	str	r2, [sp, #36]	; 0x24
   3e838:	ldr	r2, [r3], #4
   3e83c:	str	r3, [sp, #92]	; 0x5c
   3e840:	ldr	r3, [sp, #88]	; 0x58
   3e844:	str	r2, [sp, #56]	; 0x38
   3e848:	b	3e884 <GetDataSlab+0xe904>
   3e84c:	ldr	r0, [sp, #28]
   3e850:	ldr	r0, [r0, r2]
   3e854:	add	r9, r9, r0, lsl #1
   3e858:	add	r1, r0, r1
   3e85c:	ldr	r0, [sp, #60]	; 0x3c
   3e860:	ldr	r3, [sp, #72]	; 0x48
   3e864:	ldr	r7, [sp, #68]	; 0x44
   3e868:	mov	r2, #0
   3e86c:	add	r3, r3, r0
   3e870:	ldr	r0, [sp, #76]	; 0x4c
   3e874:	add	r7, r7, lr
   3e878:	str	r7, [sp, #68]	; 0x44
   3e87c:	cmp	r7, r0
   3e880:	bge	56c1c <GetDataSlab+0x26c9c>
   3e884:	cmp	lr, #1
   3e888:	sub	ip, fp, #176	; 0xb0
   3e88c:	str	r3, [sp, #72]	; 0x48
   3e890:	blt	3e9a0 <GetDataSlab+0xea20>
   3e894:	mov	r0, #0
   3e898:	cmp	lr, #4
   3e89c:	bcc	3e974 <GetDataSlab+0xe9f4>
   3e8a0:	ldr	r0, [sp, #56]	; 0x38
   3e8a4:	mov	r2, #0
   3e8a8:	add	ip, r9, r0, lsl #1
   3e8ac:	ldr	r0, [sp, #32]
   3e8b0:	str	ip, [sp, #44]	; 0x2c
   3e8b4:	cmp	r0, #0
   3e8b8:	beq	3e914 <GetDataSlab+0xe994>
   3e8bc:	ldr	sl, [sp, #24]
   3e8c0:	mov	lr, ip
   3e8c4:	mov	r5, #16
   3e8c8:	sub	r6, fp, #496	; 0x1f0
   3e8cc:	vld1.16	{d16}, [lr], r5
   3e8d0:	mov	r7, #32
   3e8d4:	add	r0, r3, #16
   3e8d8:	subs	sl, sl, #2
   3e8dc:	add	r2, r2, #8
   3e8e0:	vmovl.u16	q8, d16
   3e8e4:	vcvt.f32.u32	q8, q8
   3e8e8:	vst1.32	{d16-d17}, [r3], r7
   3e8ec:	ldr	r8, [ip, #8]
   3e8f0:	ldr	r7, [ip, #12]
   3e8f4:	mov	ip, lr
   3e8f8:	str	r7, [fp, #-492]	; 0xfffffe14
   3e8fc:	str	r8, [fp, #-496]	; 0xfffffe10
   3e900:	vld1.16	{d16}, [r6 :64]
   3e904:	vmovl.u16	q8, d16
   3e908:	vcvt.f32.u32	q8, q8
   3e90c:	vst1.32	{d16-d17}, [r0]
   3e910:	bne	3e8cc <GetDataSlab+0xe94c>
   3e914:	ldr	r0, [sp, #40]	; 0x28
   3e918:	sub	ip, fp, #176	; 0xb0
   3e91c:	cmp	r0, #0
   3e920:	ldr	r0, [sp, #88]	; 0x58
   3e924:	beq	3e95c <GetDataSlab+0xe9dc>
   3e928:	ldr	r3, [sp, #68]	; 0x44
   3e92c:	ldr	r7, [sp, #44]	; 0x2c
   3e930:	add	r0, r0, r3, lsl #2
   3e934:	ldr	r3, [r7, r2, lsl #1]!
   3e938:	add	r0, r0, r2, lsl #2
   3e93c:	str	r3, [fp, #-504]	; 0xfffffe08
   3e940:	ldr	r3, [r7, #4]
   3e944:	str	r3, [fp, #-500]	; 0xfffffe0c
   3e948:	sub	r3, fp, #504	; 0x1f8
   3e94c:	vld1.16	{d16}, [r3 :64]
   3e950:	vmovl.u16	q8, d16
   3e954:	vcvt.f32.u32	q8, q8
   3e958:	vst1.32	{d16-d17}, [r0]
   3e95c:	ldr	lr, [sp, #64]	; 0x40
   3e960:	ldr	r0, [sp, #36]	; 0x24
   3e964:	ldr	r8, [sp, #48]	; 0x30
   3e968:	ldr	r3, [sp, #72]	; 0x48
   3e96c:	cmp	lr, r0
   3e970:	beq	3e9a0 <GetDataSlab+0xea20>
   3e974:	ldr	r5, [sp, #56]	; 0x38
   3e978:	add	r2, r3, r0, lsl #2
   3e97c:	sub	r3, lr, r0
   3e980:	add	r7, r9, r5, lsl #1
   3e984:	add	r0, r7, r0, lsl #1
   3e988:	ldrh	r7, [r0], #2
   3e98c:	subs	r3, r3, #1
   3e990:	vmov	s0, r7
   3e994:	vcvt.f32.u32	s0, s0
   3e998:	vstmia	r2!, {s0}
   3e99c:	bne	3e988 <GetDataSlab+0xea08>
   3e9a0:	ldr	r0, [fp, #24]
   3e9a4:	ldr	r5, [sp, #92]	; 0x5c
   3e9a8:	add	r9, r9, r8, lsl #1
   3e9ac:	add	r1, r1, r8
   3e9b0:	cmp	r0, #2
   3e9b4:	blt	3e85c <GetDataSlab+0xe8dc>
   3e9b8:	ldr	sl, [sp, #52]	; 0x34
   3e9bc:	mov	r2, #0
   3e9c0:	b	3e9e8 <GetDataSlab+0xea68>
   3e9c4:	ldr	r7, [ip, r2]
   3e9c8:	ldr	r6, [r5, r2]
   3e9cc:	sub	r0, r0, r3
   3e9d0:	mla	r0, r6, r7, r0
   3e9d4:	add	r1, r0, r1
   3e9d8:	add	r9, r9, r0, lsl #1
   3e9dc:	subs	sl, sl, #1
   3e9e0:	add	r2, r2, #4
   3e9e4:	beq	3e85c <GetDataSlab+0xe8dc>
   3e9e8:	ldr	r0, [r4, r2]
   3e9ec:	ldr	r3, [sp, #84]	; 0x54
   3e9f0:	add	r0, r0, #1
   3e9f4:	str	r0, [r4, r2]
   3e9f8:	ldr	r3, [r3, r2]
   3e9fc:	sdiv	r7, r0, r3
   3ea00:	mls	r0, r7, r3, r0
   3ea04:	cmp	r0, #0
   3ea08:	bne	3e84c <GetDataSlab+0xe8cc>
   3ea0c:	mov	r0, #0
   3ea10:	str	r0, [r4, r2]
   3ea14:	ldr	r0, [sp, #80]	; 0x50
   3ea18:	ldr	r0, [r0, r2]
   3ea1c:	sdiv	r3, r1, r0
   3ea20:	mls	r3, r3, r0, r1
   3ea24:	cmp	r3, #0
   3ea28:	bne	3e9c4 <GetDataSlab+0xea44>
   3ea2c:	ldr	r0, [r5, r2]
   3ea30:	cmp	r0, #0
   3ea34:	beq	3e9dc <GetDataSlab+0xea5c>
   3ea38:	ldr	r3, [ip, r2]
   3ea3c:	mla	r1, r3, r0, r1
   3ea40:	mul	r0, r3, r0
   3ea44:	b	3e9d8 <GetDataSlab+0xea58>
   3ea48:	ldr	r0, [sp, #80]	; 0x50
   3ea4c:	add	ip, r0, r3, lsl #2
   3ea50:	ldr	r0, [sp, #52]	; 0x34
   3ea54:	cmp	r0, #1
   3ea58:	bne	4b0b4 <GetDataSlab+0x1b134>
   3ea5c:	ldr	r0, [sp, #76]	; 0x4c
   3ea60:	ldr	lr, [sp, #88]	; 0x58
   3ea64:	ldr	r2, [fp, #12]
   3ea68:	sub	r5, fp, #96	; 0x60
   3ea6c:	cmp	r0, #1
   3ea70:	blt	56c18 <GetDataSlab+0x26c98>
   3ea74:	ldr	r6, [sp, #72]	; 0x48
   3ea78:	mov	r1, #1
   3ea7c:	ldr	r8, [sp, #56]	; 0x38
   3ea80:	mov	r7, #32
   3ea84:	sub	r0, r6, #4
   3ea88:	add	r1, r1, r0, lsr #2
   3ea8c:	lsr	r0, r0, #2
   3ea90:	str	r0, [sp, #44]	; 0x2c
   3ea94:	mov	r0, #0
   3ea98:	and	r4, r1, #1
   3ea9c:	str	r0, [sp, #80]	; 0x50
   3eaa0:	sub	r1, r1, r4
   3eaa4:	str	r4, [sp, #52]	; 0x34
   3eaa8:	str	r1, [sp, #36]	; 0x24
   3eaac:	sub	r1, fp, #136	; 0x88
   3eab0:	orr	r4, r1, #4
   3eab4:	ldr	r1, [fp, #20]
   3eab8:	add	r9, r1, #4
   3eabc:	sub	r1, fp, #176	; 0xb0
   3eac0:	orr	r1, r1, #4
   3eac4:	str	r1, [sp, #64]	; 0x40
   3eac8:	add	r1, r2, #4
   3eacc:	orr	r2, r5, #4
   3ead0:	str	r1, [sp, #84]	; 0x54
   3ead4:	ldr	r1, [fp, #24]
   3ead8:	str	r2, [sp, #40]	; 0x28
   3eadc:	lsl	r2, r6, #2
   3eae0:	str	r2, [sp, #68]	; 0x44
   3eae4:	bic	r2, r6, #3
   3eae8:	str	r2, [sp, #48]	; 0x30
   3eaec:	sub	r1, r1, #1
   3eaf0:	str	r1, [sp, #60]	; 0x3c
   3eaf4:	mov	r1, r6
   3eaf8:	b	3eb34 <GetDataSlab+0xebb4>
   3eafc:	ldr	r0, [sp, #40]	; 0x28
   3eb00:	ldr	r0, [r0, r2]
   3eb04:	add	ip, ip, r0, lsl #2
   3eb08:	add	r3, r0, r3
   3eb0c:	ldr	r0, [sp, #68]	; 0x44
   3eb10:	ldr	r1, [sp, #72]	; 0x48
   3eb14:	ldr	r5, [sp, #80]	; 0x50
   3eb18:	mov	r2, #0
   3eb1c:	add	lr, lr, r0
   3eb20:	ldr	r0, [sp, #76]	; 0x4c
   3eb24:	add	r5, r5, r1
   3eb28:	str	r5, [sp, #80]	; 0x50
   3eb2c:	cmp	r5, r0
   3eb30:	bge	56c1c <GetDataSlab+0x26c9c>
   3eb34:	ldr	r0, [fp, #12]
   3eb38:	cmp	r1, #1
   3eb3c:	blt	3ec14 <GetDataSlab+0xec94>
   3eb40:	ldr	r0, [r0]
   3eb44:	mov	r2, #0
   3eb48:	add	sl, ip, r0, lsl #2
   3eb4c:	ldr	r0, [sp, #72]	; 0x48
   3eb50:	cmp	r0, #4
   3eb54:	bcc	3ebe8 <GetDataSlab+0xec68>
   3eb58:	ldr	r0, [sp, #44]	; 0x2c
   3eb5c:	mov	r6, r9
   3eb60:	mov	r1, #0
   3eb64:	cmp	r0, #0
   3eb68:	beq	3eba4 <GetDataSlab+0xec24>
   3eb6c:	ldr	r8, [sp, #36]	; 0x24
   3eb70:	mov	r5, lr
   3eb74:	mov	r2, sl
   3eb78:	add	r0, r2, #16
   3eb7c:	vld1.32	{d16-d17}, [r2], r7
   3eb80:	add	r9, r5, #16
   3eb84:	subs	r8, r8, #2
   3eb88:	add	r1, r1, #8
   3eb8c:	vcvt.f32.s32	q8, q8
   3eb90:	vst1.32	{d16-d17}, [r5], r7
   3eb94:	vld1.32	{d16-d17}, [r0]
   3eb98:	vcvt.f32.s32	q8, q8
   3eb9c:	vst1.32	{d16-d17}, [r9]
   3eba0:	bne	3eb78 <GetDataSlab+0xebf8>
   3eba4:	ldr	r0, [sp, #52]	; 0x34
   3eba8:	cmp	r0, #0
   3ebac:	ldr	r0, [sp, #88]	; 0x58
   3ebb0:	beq	3ebd0 <GetDataSlab+0xec50>
   3ebb4:	ldr	r2, [sp, #80]	; 0x50
   3ebb8:	add	r0, r0, r2, lsl #2
   3ebbc:	add	r2, sl, r1, lsl #2
   3ebc0:	vld1.32	{d16-d17}, [r2]
   3ebc4:	add	r0, r0, r1, lsl #2
   3ebc8:	vcvt.f32.s32	q8, q8
   3ebcc:	vst1.32	{d16-d17}, [r0]
   3ebd0:	ldr	r0, [sp, #72]	; 0x48
   3ebd4:	ldr	r2, [sp, #48]	; 0x30
   3ebd8:	ldr	r8, [sp, #56]	; 0x38
   3ebdc:	mov	r9, r6
   3ebe0:	cmp	r0, r2
   3ebe4:	beq	3ec14 <GetDataSlab+0xec94>
   3ebe8:	ldr	r0, [sp, #72]	; 0x48
   3ebec:	sub	r1, r0, r2
   3ebf0:	lsl	r2, r2, #2
   3ebf4:	add	r0, sl, r2
   3ebf8:	subs	r1, r1, #1
   3ebfc:	vldr	s0, [r0]
   3ec00:	add	r0, lr, r2
   3ec04:	add	r2, r2, #4
   3ec08:	vcvt.f32.s32	s0, s0
   3ec0c:	vstr	s0, [r0]
   3ec10:	bne	3ebf4 <GetDataSlab+0xec74>
   3ec14:	ldr	r0, [fp, #24]
   3ec18:	add	ip, ip, r8, lsl #2
   3ec1c:	add	r3, r3, r8
   3ec20:	cmp	r0, #2
   3ec24:	blt	3eb0c <GetDataSlab+0xeb8c>
   3ec28:	ldr	r1, [sp, #60]	; 0x3c
   3ec2c:	ldr	sl, [sp, #64]	; 0x40
   3ec30:	mov	r2, #0
   3ec34:	b	3ec68 <GetDataSlab+0xece8>
   3ec38:	ldr	r7, [sp, #84]	; 0x54
   3ec3c:	sub	r6, fp, #176	; 0xb0
   3ec40:	sub	r0, r5, r0
   3ec44:	ldr	r6, [r6, r2]
   3ec48:	ldr	r7, [r7, r2]
   3ec4c:	mla	r0, r7, r6, r0
   3ec50:	mov	r7, #32
   3ec54:	add	r3, r0, r3
   3ec58:	add	ip, ip, r0, lsl #2
   3ec5c:	subs	r1, r1, #1
   3ec60:	add	r2, r2, #4
   3ec64:	beq	3eb0c <GetDataSlab+0xeb8c>
   3ec68:	ldr	r0, [r4, r2]
   3ec6c:	add	r0, r0, #1
   3ec70:	str	r0, [r4, r2]
   3ec74:	ldr	r5, [r9, r2]
   3ec78:	sdiv	r6, r0, r5
   3ec7c:	mls	r0, r6, r5, r0
   3ec80:	cmp	r0, #0
   3ec84:	bne	3eafc <GetDataSlab+0xeb7c>
   3ec88:	ldr	r5, [sl, r2]
   3ec8c:	mov	r0, #0
   3ec90:	str	r0, [r4, r2]
   3ec94:	sdiv	r0, r3, r5
   3ec98:	mls	r0, r0, r5, r3
   3ec9c:	cmp	r0, #0
   3eca0:	bne	3ec38 <GetDataSlab+0xecb8>
   3eca4:	ldr	r0, [sp, #84]	; 0x54
   3eca8:	ldr	r0, [r0, r2]
   3ecac:	cmp	r0, #0
   3ecb0:	beq	3ec5c <GetDataSlab+0xecdc>
   3ecb4:	sub	r5, fp, #176	; 0xb0
   3ecb8:	ldr	r5, [r5, r2]
   3ecbc:	mla	r3, r5, r0, r3
   3ecc0:	mul	r0, r5, r0
   3ecc4:	b	3ec58 <GetDataSlab+0xecd8>
   3ecc8:	ldr	r0, [sp, #80]	; 0x50
   3eccc:	add	ip, r0, r3, lsl #2
   3ecd0:	ldr	r0, [sp, #52]	; 0x34
   3ecd4:	cmp	r0, #1
   3ecd8:	bne	4b2ec <GetDataSlab+0x1b36c>
   3ecdc:	ldr	r0, [sp, #76]	; 0x4c
   3ece0:	ldr	lr, [sp, #88]	; 0x58
   3ece4:	ldr	r2, [fp, #12]
   3ece8:	sub	r5, fp, #96	; 0x60
   3ecec:	cmp	r0, #1
   3ecf0:	blt	56c18 <GetDataSlab+0x26c98>
   3ecf4:	ldr	r6, [sp, #72]	; 0x48
   3ecf8:	mov	r1, #1
   3ecfc:	ldr	r8, [sp, #56]	; 0x38
   3ed00:	mov	r7, #32
   3ed04:	sub	r0, r6, #4
   3ed08:	add	r1, r1, r0, lsr #2
   3ed0c:	lsr	r0, r0, #2
   3ed10:	str	r0, [sp, #44]	; 0x2c
   3ed14:	mov	r0, #0
   3ed18:	and	r4, r1, #1
   3ed1c:	str	r0, [sp, #80]	; 0x50
   3ed20:	sub	r1, r1, r4
   3ed24:	str	r4, [sp, #52]	; 0x34
   3ed28:	str	r1, [sp, #36]	; 0x24
   3ed2c:	sub	r1, fp, #136	; 0x88
   3ed30:	orr	r4, r1, #4
   3ed34:	ldr	r1, [fp, #20]
   3ed38:	add	r9, r1, #4
   3ed3c:	sub	r1, fp, #176	; 0xb0
   3ed40:	orr	r1, r1, #4
   3ed44:	str	r1, [sp, #64]	; 0x40
   3ed48:	add	r1, r2, #4
   3ed4c:	orr	r2, r5, #4
   3ed50:	str	r1, [sp, #84]	; 0x54
   3ed54:	ldr	r1, [fp, #24]
   3ed58:	str	r2, [sp, #40]	; 0x28
   3ed5c:	lsl	r2, r6, #2
   3ed60:	str	r2, [sp, #68]	; 0x44
   3ed64:	bic	r2, r6, #3
   3ed68:	str	r2, [sp, #48]	; 0x30
   3ed6c:	sub	r1, r1, #1
   3ed70:	str	r1, [sp, #60]	; 0x3c
   3ed74:	mov	r1, r6
   3ed78:	b	3edb4 <GetDataSlab+0xee34>
   3ed7c:	ldr	r0, [sp, #40]	; 0x28
   3ed80:	ldr	r0, [r0, r2]
   3ed84:	add	ip, ip, r0, lsl #2
   3ed88:	add	r3, r0, r3
   3ed8c:	ldr	r0, [sp, #68]	; 0x44
   3ed90:	ldr	r1, [sp, #72]	; 0x48
   3ed94:	ldr	r5, [sp, #80]	; 0x50
   3ed98:	mov	r2, #0
   3ed9c:	add	lr, lr, r0
   3eda0:	ldr	r0, [sp, #76]	; 0x4c
   3eda4:	add	r5, r5, r1
   3eda8:	str	r5, [sp, #80]	; 0x50
   3edac:	cmp	r5, r0
   3edb0:	bge	56c1c <GetDataSlab+0x26c9c>
   3edb4:	ldr	r0, [fp, #12]
   3edb8:	cmp	r1, #1
   3edbc:	blt	3ee94 <GetDataSlab+0xef14>
   3edc0:	ldr	r0, [r0]
   3edc4:	mov	r2, #0
   3edc8:	add	sl, ip, r0, lsl #2
   3edcc:	ldr	r0, [sp, #72]	; 0x48
   3edd0:	cmp	r0, #4
   3edd4:	bcc	3ee68 <GetDataSlab+0xeee8>
   3edd8:	ldr	r0, [sp, #44]	; 0x2c
   3eddc:	mov	r6, r9
   3ede0:	mov	r1, #0
   3ede4:	cmp	r0, #0
   3ede8:	beq	3ee24 <GetDataSlab+0xeea4>
   3edec:	ldr	r8, [sp, #36]	; 0x24
   3edf0:	mov	r5, lr
   3edf4:	mov	r2, sl
   3edf8:	add	r0, r2, #16
   3edfc:	vld1.32	{d16-d17}, [r2], r7
   3ee00:	add	r9, r5, #16
   3ee04:	subs	r8, r8, #2
   3ee08:	add	r1, r1, #8
   3ee0c:	vcvt.f32.u32	q8, q8
   3ee10:	vst1.32	{d16-d17}, [r5], r7
   3ee14:	vld1.32	{d16-d17}, [r0]
   3ee18:	vcvt.f32.u32	q8, q8
   3ee1c:	vst1.32	{d16-d17}, [r9]
   3ee20:	bne	3edf8 <GetDataSlab+0xee78>
   3ee24:	ldr	r0, [sp, #52]	; 0x34
   3ee28:	cmp	r0, #0
   3ee2c:	ldr	r0, [sp, #88]	; 0x58
   3ee30:	beq	3ee50 <GetDataSlab+0xeed0>
   3ee34:	ldr	r2, [sp, #80]	; 0x50
   3ee38:	add	r0, r0, r2, lsl #2
   3ee3c:	add	r2, sl, r1, lsl #2
   3ee40:	vld1.32	{d16-d17}, [r2]
   3ee44:	add	r0, r0, r1, lsl #2
   3ee48:	vcvt.f32.u32	q8, q8
   3ee4c:	vst1.32	{d16-d17}, [r0]
   3ee50:	ldr	r0, [sp, #72]	; 0x48
   3ee54:	ldr	r2, [sp, #48]	; 0x30
   3ee58:	ldr	r8, [sp, #56]	; 0x38
   3ee5c:	mov	r9, r6
   3ee60:	cmp	r0, r2
   3ee64:	beq	3ee94 <GetDataSlab+0xef14>
   3ee68:	ldr	r0, [sp, #72]	; 0x48
   3ee6c:	sub	r1, r0, r2
   3ee70:	lsl	r2, r2, #2
   3ee74:	add	r0, sl, r2
   3ee78:	subs	r1, r1, #1
   3ee7c:	vldr	s0, [r0]
   3ee80:	add	r0, lr, r2
   3ee84:	add	r2, r2, #4
   3ee88:	vcvt.f32.u32	s0, s0
   3ee8c:	vstr	s0, [r0]
   3ee90:	bne	3ee74 <GetDataSlab+0xeef4>
   3ee94:	ldr	r0, [fp, #24]
   3ee98:	add	ip, ip, r8, lsl #2
   3ee9c:	add	r3, r3, r8
   3eea0:	cmp	r0, #2
   3eea4:	blt	3ed8c <GetDataSlab+0xee0c>
   3eea8:	ldr	r1, [sp, #60]	; 0x3c
   3eeac:	ldr	sl, [sp, #64]	; 0x40
   3eeb0:	mov	r2, #0
   3eeb4:	b	3eee8 <GetDataSlab+0xef68>
   3eeb8:	ldr	r7, [sp, #84]	; 0x54
   3eebc:	sub	r6, fp, #176	; 0xb0
   3eec0:	sub	r0, r5, r0
   3eec4:	ldr	r6, [r6, r2]
   3eec8:	ldr	r7, [r7, r2]
   3eecc:	mla	r0, r7, r6, r0
   3eed0:	mov	r7, #32
   3eed4:	add	r3, r0, r3
   3eed8:	add	ip, ip, r0, lsl #2
   3eedc:	subs	r1, r1, #1
   3eee0:	add	r2, r2, #4
   3eee4:	beq	3ed8c <GetDataSlab+0xee0c>
   3eee8:	ldr	r0, [r4, r2]
   3eeec:	add	r0, r0, #1
   3eef0:	str	r0, [r4, r2]
   3eef4:	ldr	r5, [r9, r2]
   3eef8:	sdiv	r6, r0, r5
   3eefc:	mls	r0, r6, r5, r0
   3ef00:	cmp	r0, #0
   3ef04:	bne	3ed7c <GetDataSlab+0xedfc>
   3ef08:	ldr	r5, [sl, r2]
   3ef0c:	mov	r0, #0
   3ef10:	str	r0, [r4, r2]
   3ef14:	sdiv	r0, r3, r5
   3ef18:	mls	r0, r0, r5, r3
   3ef1c:	cmp	r0, #0
   3ef20:	bne	3eeb8 <GetDataSlab+0xef38>
   3ef24:	ldr	r0, [sp, #84]	; 0x54
   3ef28:	ldr	r0, [r0, r2]
   3ef2c:	cmp	r0, #0
   3ef30:	beq	3eedc <GetDataSlab+0xef5c>
   3ef34:	sub	r5, fp, #176	; 0xb0
   3ef38:	ldr	r5, [r5, r2]
   3ef3c:	mla	r3, r5, r0, r3
   3ef40:	mul	r0, r5, r0
   3ef44:	b	3eed8 <GetDataSlab+0xef58>
   3ef48:	ldr	r0, [sp, #80]	; 0x50
   3ef4c:	add	r8, r0, r1, lsl #2
   3ef50:	ldr	r0, [sp, #52]	; 0x34
   3ef54:	cmp	r0, #1
   3ef58:	bne	4b524 <GetDataSlab+0x1b5a4>
   3ef5c:	ldr	r0, [sp, #76]	; 0x4c
   3ef60:	ldr	r3, [fp, #20]
   3ef64:	ldr	r7, [sp, #64]	; 0x40
   3ef68:	cmp	r0, #1
   3ef6c:	blt	56c18 <GetDataSlab+0x26c98>
   3ef70:	sub	r0, r7, #4
   3ef74:	mov	r2, #1
   3ef78:	ldr	sl, [sp, #88]	; 0x58
   3ef7c:	mov	r9, #0
   3ef80:	mov	lr, r7
   3ef84:	add	r2, r2, r0, lsr #2
   3ef88:	lsr	r0, r0, #2
   3ef8c:	str	r0, [sp, #20]
   3ef90:	and	r6, r2, #1
   3ef94:	sub	r2, r2, r6
   3ef98:	str	r6, [sp, #28]
   3ef9c:	str	r2, [sp, #16]
   3efa0:	sub	r2, fp, #136	; 0x88
   3efa4:	orr	r4, r2, #4
   3efa8:	add	r2, r3, #4
   3efac:	str	r2, [sp, #84]	; 0x54
   3efb0:	orr	r2, ip, #4
   3efb4:	str	r2, [sp, #80]	; 0x50
   3efb8:	ldr	r2, [fp, #24]
   3efbc:	sub	r2, r2, #1
   3efc0:	str	r2, [sp, #44]	; 0x2c
   3efc4:	sub	r2, fp, #96	; 0x60
   3efc8:	orr	r2, r2, #4
   3efcc:	str	r2, [sp, #32]
   3efd0:	ldr	r2, [sp, #92]	; 0x5c
   3efd4:	ldr	r3, [r2], #4
   3efd8:	str	r2, [sp, #92]	; 0x5c
   3efdc:	add	r2, r7, r3
   3efe0:	add	r0, r3, #1
   3efe4:	str	r3, [sp, #52]	; 0x34
   3efe8:	str	r2, [sp, #40]	; 0x28
   3efec:	and	r2, r7, #1
   3eff0:	str	r0, [sp, #36]	; 0x24
   3eff4:	mov	r0, #0
   3eff8:	str	r2, [sp, #48]	; 0x30
   3effc:	bic	r2, r7, #3
   3f000:	str	r0, [sp, #72]	; 0x48
   3f004:	str	r2, [sp, #24]
   3f008:	lsl	r2, r7, #2
   3f00c:	str	r2, [sp, #68]	; 0x44
   3f010:	b	3f04c <GetDataSlab+0xf0cc>
   3f014:	ldr	r2, [sp, #32]
   3f018:	ldr	r0, [r2, r0]
   3f01c:	add	r8, r8, r0, lsl #2
   3f020:	add	r1, r0, r1
   3f024:	ldr	r0, [sp, #68]	; 0x44
   3f028:	add	r9, r9, lr
   3f02c:	mov	r2, #0
   3f030:	add	sl, sl, r0
   3f034:	ldr	r0, [sp, #72]	; 0x48
   3f038:	add	r0, r0, #1
   3f03c:	str	r0, [sp, #72]	; 0x48
   3f040:	ldr	r0, [sp, #76]	; 0x4c
   3f044:	cmp	r9, r0
   3f048:	bge	56c1c <GetDataSlab+0x26c9c>
   3f04c:	cmp	lr, #1
   3f050:	sub	ip, fp, #176	; 0xb0
   3f054:	blt	3f188 <GetDataSlab+0xf208>
   3f058:	ldr	r0, [sp, #52]	; 0x34
   3f05c:	mov	r3, #0
   3f060:	cmp	lr, #4
   3f064:	add	r6, r8, r0, lsl #2
   3f068:	ldr	r0, [sp, #88]	; 0x58
   3f06c:	add	r5, r0, r9, lsl #2
   3f070:	bcc	3f12c <GetDataSlab+0xf1ac>
   3f074:	str	r5, [sp, #56]	; 0x38
   3f078:	ldr	r2, [sp, #68]	; 0x44
   3f07c:	ldr	r5, [sp, #72]	; 0x48
   3f080:	mla	r0, r2, r5, r0
   3f084:	ldr	r2, [sp, #40]	; 0x28
   3f088:	ldr	r5, [sp, #56]	; 0x38
   3f08c:	add	r2, r8, r2, lsl #2
   3f090:	cmp	r0, r2
   3f094:	bcs	3f0b4 <GetDataSlab+0xf134>
   3f098:	ldr	r0, [sp, #68]	; 0x44
   3f09c:	ldr	r2, [sp, #72]	; 0x48
   3f0a0:	mla	r0, r0, r2, r0
   3f0a4:	ldr	r2, [sp, #88]	; 0x58
   3f0a8:	add	r0, r2, r0
   3f0ac:	cmp	r0, r6
   3f0b0:	bhi	3f12c <GetDataSlab+0xf1ac>
   3f0b4:	ldr	r0, [sp, #20]
   3f0b8:	mov	r3, #0
   3f0bc:	cmp	r0, #0
   3f0c0:	beq	3f0f8 <GetDataSlab+0xf178>
   3f0c4:	ldr	r2, [sp, #16]
   3f0c8:	mov	lr, sl
   3f0cc:	mov	r0, r6
   3f0d0:	mov	r5, #32
   3f0d4:	add	r7, r0, #16
   3f0d8:	vld1.32	{d16-d17}, [r0], r5
   3f0dc:	add	ip, lr, #16
   3f0e0:	subs	r2, r2, #2
   3f0e4:	add	r3, r3, #8
   3f0e8:	vst1.32	{d16-d17}, [lr], r5
   3f0ec:	vld1.32	{d16-d17}, [r7]
   3f0f0:	vst1.32	{d16-d17}, [ip]
   3f0f4:	bne	3f0d4 <GetDataSlab+0xf154>
   3f0f8:	ldr	r0, [sp, #28]
   3f0fc:	ldr	r5, [sp, #56]	; 0x38
   3f100:	cmp	r0, #0
   3f104:	beq	3f118 <GetDataSlab+0xf198>
   3f108:	add	r0, r6, r3, lsl #2
   3f10c:	vld1.32	{d16-d17}, [r0]
   3f110:	add	r0, r5, r3, lsl #2
   3f114:	vst1.32	{d16-d17}, [r0]
   3f118:	ldr	lr, [sp, #64]	; 0x40
   3f11c:	ldr	r3, [sp, #24]
   3f120:	sub	ip, fp, #176	; 0xb0
   3f124:	cmp	lr, r3
   3f128:	beq	3f188 <GetDataSlab+0xf208>
   3f12c:	ldr	r0, [sp, #48]	; 0x30
   3f130:	mov	r7, r3
   3f134:	cmp	r0, #0
   3f138:	beq	3f148 <GetDataSlab+0xf1c8>
   3f13c:	ldr	r0, [r6, r3, lsl #2]
   3f140:	orr	r7, r3, #1
   3f144:	str	r0, [r5, r3, lsl #2]
   3f148:	orr	r0, r3, #1
   3f14c:	cmp	lr, r0
   3f150:	beq	3f188 <GetDataSlab+0xf208>
   3f154:	ldr	r0, [sp, #36]	; 0x24
   3f158:	sub	r2, lr, r7
   3f15c:	lsl	r3, r7, #2
   3f160:	add	r0, r8, r0, lsl #2
   3f164:	add	r7, r0, r3
   3f168:	mov	r6, sl
   3f16c:	subs	r2, r2, #2
   3f170:	ldr	r7, [r7, #-4]
   3f174:	str	r7, [r6, r3]!
   3f178:	ldr	r7, [r0, r3]
   3f17c:	add	r3, r3, #8
   3f180:	str	r7, [r6, #4]
   3f184:	bne	3f164 <GetDataSlab+0xf1e4>
   3f188:	ldr	r0, [sp, #60]	; 0x3c
   3f18c:	add	r8, r8, r0, lsl #2
   3f190:	add	r1, r1, r0
   3f194:	ldr	r0, [fp, #24]
   3f198:	cmp	r0, #2
   3f19c:	blt	3f024 <GetDataSlab+0xf0a4>
   3f1a0:	ldr	r2, [sp, #44]	; 0x2c
   3f1a4:	mov	r0, #0
   3f1a8:	b	3f1d4 <GetDataSlab+0xf254>
   3f1ac:	ldr	r5, [sp, #92]	; 0x5c
   3f1b0:	ldr	r6, [ip, r0]
   3f1b4:	sub	r3, r3, r7
   3f1b8:	ldr	r5, [r5, r0]
   3f1bc:	mla	r3, r5, r6, r3
   3f1c0:	add	r1, r3, r1
   3f1c4:	add	r8, r8, r3, lsl #2
   3f1c8:	subs	r2, r2, #1
   3f1cc:	add	r0, r0, #4
   3f1d0:	beq	3f024 <GetDataSlab+0xf0a4>
   3f1d4:	ldr	r3, [r4, r0]
   3f1d8:	ldr	r5, [sp, #84]	; 0x54
   3f1dc:	add	r3, r3, #1
   3f1e0:	str	r3, [r4, r0]
   3f1e4:	ldr	r7, [r5, r0]
   3f1e8:	sdiv	r6, r3, r7
   3f1ec:	mls	r3, r6, r7, r3
   3f1f0:	cmp	r3, #0
   3f1f4:	bne	3f014 <GetDataSlab+0xf094>
   3f1f8:	mov	r3, #0
   3f1fc:	str	r3, [r4, r0]
   3f200:	ldr	r3, [sp, #80]	; 0x50
   3f204:	ldr	r3, [r3, r0]
   3f208:	sdiv	r7, r1, r3
   3f20c:	mls	r7, r7, r3, r1
   3f210:	cmp	r7, #0
   3f214:	bne	3f1ac <GetDataSlab+0xf22c>
   3f218:	ldr	r3, [sp, #92]	; 0x5c
   3f21c:	ldr	r3, [r3, r0]
   3f220:	cmp	r3, #0
   3f224:	beq	3f1c8 <GetDataSlab+0xf248>
   3f228:	ldr	r7, [ip, r0]
   3f22c:	mla	r1, r7, r3, r1
   3f230:	mul	r3, r7, r3
   3f234:	b	3f1c4 <GetDataSlab+0xf244>
   3f238:	ldr	r0, [sp, #80]	; 0x50
   3f23c:	add	r9, r0, r1, lsl #3
   3f240:	ldr	r0, [sp, #44]	; 0x2c
   3f244:	cmp	r0, #1
   3f248:	bne	4b72c <GetDataSlab+0x1b7ac>
   3f24c:	ldr	r0, [sp, #76]	; 0x4c
   3f250:	ldr	r3, [sp, #72]	; 0x48
   3f254:	ldr	sl, [sp, #60]	; 0x3c
   3f258:	cmp	r0, #1
   3f25c:	blt	56c18 <GetDataSlab+0x26c98>
   3f260:	sub	r0, r3, #2
   3f264:	mov	r2, #1
   3f268:	orr	r8, ip, #4
   3f26c:	mov	r6, #16
   3f270:	add	r2, r2, r0, lsr #1
   3f274:	lsr	r0, r0, #1
   3f278:	str	r0, [sp, #40]	; 0x28
   3f27c:	ldr	r0, [sp, #88]	; 0x58
   3f280:	and	r7, r2, #1
   3f284:	sub	r2, r2, r7
   3f288:	str	r7, [sp, #48]	; 0x30
   3f28c:	str	r2, [sp, #32]
   3f290:	sub	r2, fp, #136	; 0x88
   3f294:	orr	r4, r2, #4
   3f298:	ldr	r2, [fp, #20]
   3f29c:	str	r0, [sp, #84]	; 0x54
   3f2a0:	mov	r0, #0
   3f2a4:	str	r0, [sp, #80]	; 0x50
   3f2a8:	add	lr, r2, #4
   3f2ac:	ldr	r2, [fp, #24]
   3f2b0:	sub	r2, r2, #1
   3f2b4:	str	r2, [sp, #56]	; 0x38
   3f2b8:	sub	r2, fp, #96	; 0x60
   3f2bc:	orr	r2, r2, #4
   3f2c0:	str	r2, [sp, #36]	; 0x24
   3f2c4:	lsl	r2, r3, #2
   3f2c8:	str	r2, [sp, #68]	; 0x44
   3f2cc:	bic	r2, r3, #1
   3f2d0:	str	r2, [sp, #44]	; 0x2c
   3f2d4:	ldr	r2, [sp, #92]	; 0x5c
   3f2d8:	ldr	r7, [r2], #4
   3f2dc:	str	r2, [sp, #92]	; 0x5c
   3f2e0:	str	r7, [sp, #64]	; 0x40
   3f2e4:	b	3f32c <GetDataSlab+0xf3ac>
   3f2e8:	ldr	r2, [sp, #36]	; 0x24
   3f2ec:	mov	r6, #16
   3f2f0:	ldr	r0, [r2, r0]
   3f2f4:	add	r9, r9, r0, lsl #3
   3f2f8:	add	r1, r0, r1
   3f2fc:	ldr	r0, [sp, #68]	; 0x44
   3f300:	ldr	r2, [sp, #84]	; 0x54
   3f304:	ldr	r3, [sp, #72]	; 0x48
   3f308:	ldr	r7, [sp, #80]	; 0x50
   3f30c:	add	r2, r2, r0
   3f310:	ldr	r0, [sp, #76]	; 0x4c
   3f314:	add	r7, r7, r3
   3f318:	str	r2, [sp, #84]	; 0x54
   3f31c:	mov	r2, #0
   3f320:	str	r7, [sp, #80]	; 0x50
   3f324:	cmp	r7, r0
   3f328:	bge	56c1c <GetDataSlab+0x26c9c>
   3f32c:	cmp	r3, #1
   3f330:	sub	ip, fp, #176	; 0xb0
   3f334:	blt	3f424 <GetDataSlab+0xf4a4>
   3f338:	mov	r3, #0
   3f33c:	beq	3f3ec <GetDataSlab+0xf46c>
   3f340:	ldr	r0, [sp, #64]	; 0x40
   3f344:	add	r3, r9, r0, lsl #3
   3f348:	ldr	r0, [sp, #40]	; 0x28
   3f34c:	str	r3, [sp, #52]	; 0x34
   3f350:	cmp	r0, #0
   3f354:	mov	r0, #0
   3f358:	beq	3f3a0 <GetDataSlab+0xf420>
   3f35c:	ldr	sl, [sp, #84]	; 0x54
   3f360:	ldr	r2, [sp, #32]
   3f364:	mov	r5, #32
   3f368:	mov	ip, sl
   3f36c:	add	r7, r3, #16
   3f370:	vld1.64	{d16-d17}, [r3], r5
   3f374:	subs	r2, r2, #2
   3f378:	add	r0, r0, #4
   3f37c:	vcvt.f32.f64	s1, d17
   3f380:	vcvt.f32.f64	s0, d16
   3f384:	vst1.32	{d0}, [ip], r6
   3f388:	vld1.64	{d16-d17}, [r7]
   3f38c:	vcvt.f32.f64	s1, d17
   3f390:	vcvt.f32.f64	s0, d16
   3f394:	vstr	d0, [sl, #8]
   3f398:	mov	sl, ip
   3f39c:	bne	3f36c <GetDataSlab+0xf3ec>
   3f3a0:	ldr	r2, [sp, #48]	; 0x30
   3f3a4:	ldr	sl, [sp, #60]	; 0x3c
   3f3a8:	sub	ip, fp, #176	; 0xb0
   3f3ac:	cmp	r2, #0
   3f3b0:	beq	3f3dc <GetDataSlab+0xf45c>
   3f3b4:	ldr	r2, [sp, #88]	; 0x58
   3f3b8:	ldr	r3, [sp, #80]	; 0x50
   3f3bc:	add	r2, r2, r3, lsl #2
   3f3c0:	ldr	r3, [sp, #52]	; 0x34
   3f3c4:	add	r3, r3, r0, lsl #3
   3f3c8:	add	r0, r2, r0, lsl #2
   3f3cc:	vld1.64	{d16-d17}, [r3]
   3f3d0:	vcvt.f32.f64	s1, d17
   3f3d4:	vcvt.f32.f64	s0, d16
   3f3d8:	vstr	d0, [r0]
   3f3dc:	ldr	r0, [sp, #72]	; 0x48
   3f3e0:	ldr	r3, [sp, #44]	; 0x2c
   3f3e4:	cmp	r0, r3
   3f3e8:	beq	3f424 <GetDataSlab+0xf4a4>
   3f3ec:	ldr	r5, [sp, #64]	; 0x40
   3f3f0:	ldr	r0, [sp, #84]	; 0x54
   3f3f4:	ldr	r2, [sp, #72]	; 0x48
   3f3f8:	add	r7, r9, r5, lsl #3
   3f3fc:	add	r0, r0, r3, lsl #2
   3f400:	sub	r2, r2, r3
   3f404:	add	r3, r7, r3, lsl #3
   3f408:	vldr	d16, [r3]
   3f40c:	add	r3, r3, #8
   3f410:	subs	r2, r2, #1
   3f414:	vcvt.f32.f64	s0, d16
   3f418:	vstr	s0, [r0]
   3f41c:	add	r0, r0, #4
   3f420:	bne	3f408 <GetDataSlab+0xf488>
   3f424:	ldr	r0, [fp, #24]
   3f428:	add	r9, r9, sl, lsl #3
   3f42c:	add	r1, r1, sl
   3f430:	cmp	r0, #2
   3f434:	blt	3f2fc <GetDataSlab+0xf37c>
   3f438:	ldr	r2, [sp, #56]	; 0x38
   3f43c:	mov	r0, #0
   3f440:	b	3f470 <GetDataSlab+0xf4f0>
   3f444:	ldr	r5, [sp, #92]	; 0x5c
   3f448:	ldr	r6, [ip, r0]
   3f44c:	sub	r3, r3, r7
   3f450:	ldr	r5, [r5, r0]
   3f454:	mla	r3, r5, r6, r3
   3f458:	add	r1, r3, r1
   3f45c:	add	r9, r9, r3, lsl #3
   3f460:	mov	r6, #16
   3f464:	subs	r2, r2, #1
   3f468:	add	r0, r0, #4
   3f46c:	beq	3f2fc <GetDataSlab+0xf37c>
   3f470:	ldr	r3, [r4, r0]
   3f474:	add	r3, r3, #1
   3f478:	str	r3, [r4, r0]
   3f47c:	ldr	r7, [lr, r0]
   3f480:	sdiv	r6, r3, r7
   3f484:	mls	r3, r6, r7, r3
   3f488:	cmp	r3, #0
   3f48c:	bne	3f2e8 <GetDataSlab+0xf368>
   3f490:	mov	r3, #0
   3f494:	str	r3, [r4, r0]
   3f498:	ldr	r3, [r8, r0]
   3f49c:	sdiv	r7, r1, r3
   3f4a0:	mls	r7, r7, r3, r1
   3f4a4:	cmp	r7, #0
   3f4a8:	bne	3f444 <GetDataSlab+0xf4c4>
   3f4ac:	ldr	r3, [sp, #92]	; 0x5c
   3f4b0:	ldr	r3, [r3, r0]
   3f4b4:	cmp	r3, #0
   3f4b8:	beq	3f460 <GetDataSlab+0xf4e0>
   3f4bc:	ldr	r7, [ip, r0]
   3f4c0:	mla	r1, r7, r3, r1
   3f4c4:	mul	r3, r7, r3
   3f4c8:	b	3f45c <GetDataSlab+0xf4dc>
   3f4cc:	ldr	r0, [sp, #80]	; 0x50
   3f4d0:	add	sl, r0, r5, lsl #3
   3f4d4:	ldr	r0, [sp, #20]
   3f4d8:	cmp	r0, #1
   3f4dc:	bne	4b954 <GetDataSlab+0x1b9d4>
   3f4e0:	ldr	r0, [sp, #68]	; 0x44
   3f4e4:	ldr	r2, [sp, #88]	; 0x58
   3f4e8:	ldr	r3, [fp, #12]
   3f4ec:	sub	r7, fp, #96	; 0x60
   3f4f0:	cmp	r0, #1
   3f4f4:	blt	4bba8 <GetDataSlab+0x1bc28>
   3f4f8:	ldr	r8, [sp, #56]	; 0x38
   3f4fc:	mov	r1, #1
   3f500:	ldr	r9, [sp, #28]
   3f504:	str	r2, [sp, #64]	; 0x40
   3f508:	sub	r0, r8, #2
   3f50c:	add	r1, r1, r0, lsr #1
   3f510:	lsr	r0, r0, #1
   3f514:	str	r0, [sp, #12]
   3f518:	mov	r0, #0
   3f51c:	and	r6, r1, #1
   3f520:	str	r0, [sp, #60]	; 0x3c
   3f524:	sub	r1, r1, r6
   3f528:	str	r6, [sp, #20]
   3f52c:	str	r1, [sp, #4]
   3f530:	sub	r1, fp, #136	; 0x88
   3f534:	orr	r4, r1, #4
   3f538:	ldr	r1, [fp, #20]
   3f53c:	str	r4, [sp, #40]	; 0x28
   3f540:	add	lr, r1, #4
   3f544:	orr	r1, ip, #4
   3f548:	str	r1, [sp, #84]	; 0x54
   3f54c:	ldr	r1, [fp, #24]
   3f550:	str	lr, [sp, #36]	; 0x24
   3f554:	sub	r1, r1, #1
   3f558:	str	r1, [sp, #32]
   3f55c:	orr	r1, r7, #4
   3f560:	str	r1, [sp, #8]
   3f564:	lsl	r1, r8, #2
   3f568:	str	r1, [sp, #52]	; 0x34
   3f56c:	bic	r1, r8, #1
   3f570:	str	r1, [sp, #16]
   3f574:	ldr	r1, [r3], #4
   3f578:	str	r3, [sp, #72]	; 0x48
   3f57c:	str	r1, [sp, #48]	; 0x30
   3f580:	cmp	r8, #1
   3f584:	bge	3f5cc <GetDataSlab+0xf64c>
   3f588:	b	3f714 <GetDataSlab+0xf794>
   3f58c:	ldr	r1, [sp, #8]
   3f590:	ldr	r0, [r1, r0]
   3f594:	add	sl, sl, r0, lsl #3
   3f598:	add	r5, r0, r5
   3f59c:	ldr	r0, [sp, #52]	; 0x34
   3f5a0:	ldr	r1, [sp, #64]	; 0x40
   3f5a4:	add	r1, r1, r0
   3f5a8:	ldr	r0, [sp, #68]	; 0x44
   3f5ac:	str	r1, [sp, #64]	; 0x40
   3f5b0:	ldr	r1, [sp, #60]	; 0x3c
   3f5b4:	add	r1, r1, r8
   3f5b8:	cmp	r1, r0
   3f5bc:	str	r1, [sp, #60]	; 0x3c
   3f5c0:	bge	4bba8 <GetDataSlab+0x1bc28>
   3f5c4:	cmp	r8, #1
   3f5c8:	blt	3f714 <GetDataSlab+0xf794>
   3f5cc:	mov	r0, #0
   3f5d0:	beq	3f6e4 <GetDataSlab+0xf764>
   3f5d4:	ldr	r0, [sp, #48]	; 0x30
   3f5d8:	mov	r6, #0
   3f5dc:	str	sl, [sp, #44]	; 0x2c
   3f5e0:	add	r4, sl, r0, lsl #3
   3f5e4:	ldr	r0, [sp, #12]
   3f5e8:	str	r4, [sp, #24]
   3f5ec:	cmp	r0, #0
   3f5f0:	beq	3f67c <GetDataSlab+0xf6fc>
   3f5f4:	ldr	sl, [sp, #64]	; 0x40
   3f5f8:	ldr	r8, [sp, #4]
   3f5fc:	mov	r9, r4
   3f600:	mov	r7, sl
   3f604:	mov	r0, #32
   3f608:	vld1.64	{d8-d9}, [r9], r0
   3f60c:	vmov.32	r0, d9[0]
   3f610:	vmov.32	r1, d9[1]
   3f614:	bl	6b898 <__aeabi_l2f>
   3f618:	vmov.32	r2, d8[0]
   3f61c:	vmov.32	r1, d8[1]
   3f620:	vmov	s17, r0
   3f624:	mov	r0, r2
   3f628:	bl	6b898 <__aeabi_l2f>
   3f62c:	vmov	s16, r0
   3f630:	mov	r0, #16
   3f634:	vst1.32	{d8}, [r7], r0
   3f638:	add	r0, r4, #16
   3f63c:	vld1.64	{d8-d9}, [r0]
   3f640:	vmov.32	r0, d9[0]
   3f644:	vmov.32	r1, d9[1]
   3f648:	bl	6b898 <__aeabi_l2f>
   3f64c:	vmov.32	r2, d8[0]
   3f650:	vmov.32	r1, d8[1]
   3f654:	vmov	s17, r0
   3f658:	mov	r0, r2
   3f65c:	bl	6b898 <__aeabi_l2f>
   3f660:	vmov	s16, r0
   3f664:	subs	r8, r8, #2
   3f668:	add	r6, r6, #4
   3f66c:	mov	r4, r9
   3f670:	vstr	d8, [sl, #8]
   3f674:	mov	sl, r7
   3f678:	bne	3f604 <GetDataSlab+0xf684>
   3f67c:	ldr	r0, [sp, #20]
   3f680:	ldr	r9, [sp, #28]
   3f684:	cmp	r0, #0
   3f688:	ldr	r0, [sp, #88]	; 0x58
   3f68c:	beq	3f6d0 <GetDataSlab+0xf750>
   3f690:	ldr	r1, [sp, #60]	; 0x3c
   3f694:	add	r4, r0, r1, lsl #2
   3f698:	ldr	r0, [sp, #24]
   3f69c:	add	r0, r0, r6, lsl #3
   3f6a0:	vld1.64	{d8-d9}, [r0]
   3f6a4:	vmov.32	r0, d9[0]
   3f6a8:	vmov.32	r1, d9[1]
   3f6ac:	bl	6b898 <__aeabi_l2f>
   3f6b0:	vmov.32	r2, d8[0]
   3f6b4:	vmov.32	r1, d8[1]
   3f6b8:	vmov	s17, r0
   3f6bc:	mov	r0, r2
   3f6c0:	bl	6b898 <__aeabi_l2f>
   3f6c4:	vmov	s16, r0
   3f6c8:	add	r0, r4, r6, lsl #2
   3f6cc:	vstr	d8, [r0]
   3f6d0:	ldr	r8, [sp, #56]	; 0x38
   3f6d4:	ldr	r0, [sp, #16]
   3f6d8:	ldr	sl, [sp, #44]	; 0x2c
   3f6dc:	cmp	r8, r0
   3f6e0:	beq	3f714 <GetDataSlab+0xf794>
   3f6e4:	ldr	r1, [sp, #64]	; 0x40
   3f6e8:	sub	r6, r8, r0
   3f6ec:	add	r4, r1, r0, lsl #2
   3f6f0:	ldr	r1, [sp, #48]	; 0x30
   3f6f4:	add	r1, sl, r1, lsl #3
   3f6f8:	add	r7, r1, r0, lsl #3
   3f6fc:	ldrd	r0, [r7]
   3f700:	bl	6b898 <__aeabi_l2f>
   3f704:	str	r0, [r4], #4
   3f708:	add	r7, r7, #8
   3f70c:	subs	r6, r6, #1
   3f710:	bne	3f6fc <GetDataSlab+0xf77c>
   3f714:	ldr	r0, [fp, #24]
   3f718:	add	sl, sl, r9, lsl #3
   3f71c:	add	r5, r5, r9
   3f720:	cmp	r0, #2
   3f724:	blt	3f59c <GetDataSlab+0xf61c>
   3f728:	sub	r4, fp, #176	; 0xb0
   3f72c:	ldr	r1, [sp, #32]
   3f730:	ldr	lr, [sp, #36]	; 0x24
   3f734:	mov	r0, #0
   3f738:	mov	ip, r4
   3f73c:	ldr	r4, [sp, #40]	; 0x28
   3f740:	b	3f76c <GetDataSlab+0xf7ec>
   3f744:	ldr	r6, [sp, #72]	; 0x48
   3f748:	ldr	r7, [ip, r0]
   3f74c:	sub	r2, r2, r3
   3f750:	ldr	r6, [r6, r0]
   3f754:	mla	r2, r6, r7, r2
   3f758:	add	r5, r2, r5
   3f75c:	add	sl, sl, r2, lsl #3
   3f760:	subs	r1, r1, #1
   3f764:	add	r0, r0, #4
   3f768:	beq	3f59c <GetDataSlab+0xf61c>
   3f76c:	ldr	r2, [r4, r0]
   3f770:	add	r2, r2, #1
   3f774:	str	r2, [r4, r0]
   3f778:	ldr	r3, [lr, r0]
   3f77c:	sdiv	r7, r2, r3
   3f780:	mls	r2, r7, r3, r2
   3f784:	cmp	r2, #0
   3f788:	bne	3f58c <GetDataSlab+0xf60c>
   3f78c:	mov	r2, #0
   3f790:	str	r2, [r4, r0]
   3f794:	ldr	r2, [sp, #84]	; 0x54
   3f798:	ldr	r2, [r2, r0]
   3f79c:	sdiv	r3, r5, r2
   3f7a0:	mls	r3, r3, r2, r5
   3f7a4:	cmp	r3, #0
   3f7a8:	bne	3f744 <GetDataSlab+0xf7c4>
   3f7ac:	ldr	r2, [sp, #72]	; 0x48
   3f7b0:	ldr	r2, [r2, r0]
   3f7b4:	cmp	r2, #0
   3f7b8:	beq	3f760 <GetDataSlab+0xf7e0>
   3f7bc:	ldr	r3, [ip, r0]
   3f7c0:	mla	r5, r3, r2, r5
   3f7c4:	mul	r2, r3, r2
   3f7c8:	b	3f75c <GetDataSlab+0xf7dc>
   3f7cc:	ldr	r0, [sp, #80]	; 0x50
   3f7d0:	cmp	r5, #1
   3f7d4:	add	r8, r0, r7
   3f7d8:	bne	4c070 <GetDataSlab+0x1c0f0>
   3f7dc:	ldr	r0, [sp, #76]	; 0x4c
   3f7e0:	ldr	r3, [fp, #20]
   3f7e4:	sub	r2, fp, #176	; 0xb0
   3f7e8:	cmp	r0, #1
   3f7ec:	blt	56468 <GetDataSlab+0x264e8>
   3f7f0:	orr	r2, r2, #4
   3f7f4:	ldr	lr, [fp, #12]
   3f7f8:	sub	r0, fp, #136	; 0x88
   3f7fc:	add	r3, r3, #4
   3f800:	mov	ip, #0
   3f804:	str	r2, [sp, #80]	; 0x50
   3f808:	ldr	r2, [fp, #24]
   3f80c:	orr	r0, r0, #4
   3f810:	str	r3, [sp, #84]	; 0x54
   3f814:	sub	r2, r2, #1
   3f818:	str	r2, [sp, #64]	; 0x40
   3f81c:	sub	r2, fp, #96	; 0x60
   3f820:	orr	r2, r2, #4
   3f824:	str	r2, [sp, #60]	; 0x3c
   3f828:	ldr	r2, [lr], #4
   3f82c:	str	r2, [sp, #68]	; 0x44
   3f830:	b	3f858 <GetDataSlab+0xf8d8>
   3f834:	ldr	r3, [sp, #60]	; 0x3c
   3f838:	ldr	r2, [r3, r2]
   3f83c:	add	r8, r8, r2
   3f840:	add	r7, r2, r7
   3f844:	ldr	r2, [sp, #76]	; 0x4c
   3f848:	add	ip, r1, ip
   3f84c:	cmp	ip, r2
   3f850:	mov	r2, #0
   3f854:	bge	56c1c <GetDataSlab+0x26c9c>
   3f858:	ldr	r4, [sp, #68]	; 0x44
   3f85c:	ldr	r5, [fp, #20]
   3f860:	ldr	r2, [sp, #72]	; 0x48
   3f864:	cmp	r1, #1
   3f868:	add	r3, r4, r7
   3f86c:	add	r7, r8, r4
   3f870:	blt	3f8a8 <GetDataSlab+0xf928>
   3f874:	ldr	r1, [sp, #88]	; 0x58
   3f878:	mov	r2, #0
   3f87c:	add	r4, r1, ip
   3f880:	ldrb	r1, [r7, r2]
   3f884:	strb	r1, [r4, r2]
   3f888:	add	r2, r2, #1
   3f88c:	ldr	r1, [r5]
   3f890:	cmp	r2, r1
   3f894:	blt	3f880 <GetDataSlab+0xf900>
   3f898:	ldr	r2, [fp, #12]
   3f89c:	ldr	r4, [r2]
   3f8a0:	ldr	r2, [fp, #8]
   3f8a4:	ldr	r2, [r2]
   3f8a8:	str	r2, [sp, #72]	; 0x48
   3f8ac:	sub	r2, r2, r4
   3f8b0:	str	r4, [sp, #68]	; 0x44
   3f8b4:	add	r8, r7, r2
   3f8b8:	add	r7, r3, r2
   3f8bc:	ldr	r2, [fp, #24]
   3f8c0:	cmp	r2, #2
   3f8c4:	blt	3f844 <GetDataSlab+0xf8c4>
   3f8c8:	ldr	r9, [sp, #64]	; 0x40
   3f8cc:	mov	r2, #0
   3f8d0:	b	3f8fc <GetDataSlab+0xf97c>
   3f8d4:	sub	r4, fp, #176	; 0xb0
   3f8d8:	ldr	sl, [lr, r2]
   3f8dc:	sub	r3, r3, r5
   3f8e0:	ldr	r6, [r4, r2]
   3f8e4:	mla	r3, sl, r6, r3
   3f8e8:	add	r7, r3, r7
   3f8ec:	add	r8, r8, r3
   3f8f0:	subs	r9, r9, #1
   3f8f4:	add	r2, r2, #4
   3f8f8:	beq	3f844 <GetDataSlab+0xf8c4>
   3f8fc:	ldr	r3, [r0, r2]
   3f900:	ldr	r4, [sp, #84]	; 0x54
   3f904:	add	r3, r3, #1
   3f908:	str	r3, [r0, r2]
   3f90c:	ldr	r5, [r4, r2]
   3f910:	sdiv	r6, r3, r5
   3f914:	mls	r3, r6, r5, r3
   3f918:	cmp	r3, #0
   3f91c:	bne	3f834 <GetDataSlab+0xf8b4>
   3f920:	mov	r3, #0
   3f924:	str	r3, [r0, r2]
   3f928:	ldr	r3, [sp, #80]	; 0x50
   3f92c:	ldr	r3, [r3, r2]
   3f930:	sdiv	r5, r7, r3
   3f934:	mls	r5, r5, r3, r7
   3f938:	cmp	r5, #0
   3f93c:	bne	3f8d4 <GetDataSlab+0xf954>
   3f940:	ldr	r3, [lr, r2]
   3f944:	cmp	r3, #0
   3f948:	beq	3f8f0 <GetDataSlab+0xf970>
   3f94c:	sub	r4, fp, #176	; 0xb0
   3f950:	ldr	r5, [r4, r2]
   3f954:	mla	r7, r5, r3, r7
   3f958:	mla	r8, r5, r3, r8
   3f95c:	b	3f8f0 <GetDataSlab+0xf970>
   3f960:	ldr	r0, [sp, #80]	; 0x50
   3f964:	cmp	r5, #1
   3f968:	add	sl, r0, r7, lsl #1
   3f96c:	bne	4c21c <GetDataSlab+0x1c29c>
   3f970:	ldr	r0, [sp, #76]	; 0x4c
   3f974:	ldr	r3, [fp, #20]
   3f978:	sub	r2, fp, #176	; 0xb0
   3f97c:	cmp	r0, #1
   3f980:	blt	56468 <GetDataSlab+0x264e8>
   3f984:	orr	r2, r2, #4
   3f988:	ldr	lr, [fp, #12]
   3f98c:	sub	r0, fp, #136	; 0x88
   3f990:	add	r4, r3, #4
   3f994:	str	r2, [sp, #84]	; 0x54
   3f998:	ldr	r2, [fp, #24]
   3f99c:	orr	r0, r0, #4
   3f9a0:	sub	r2, r2, #1
   3f9a4:	str	r2, [sp, #68]	; 0x44
   3f9a8:	orr	r2, r8, #4
   3f9ac:	mov	r8, #0
   3f9b0:	str	r2, [sp, #64]	; 0x40
   3f9b4:	ldr	r2, [lr], #4
   3f9b8:	str	r2, [sp, #80]	; 0x50
   3f9bc:	b	3f9e4 <GetDataSlab+0xfa64>
   3f9c0:	ldr	r3, [sp, #64]	; 0x40
   3f9c4:	ldr	r2, [r3, r2]
   3f9c8:	add	sl, sl, r2, lsl #1
   3f9cc:	add	r7, r2, r7
   3f9d0:	ldr	r2, [sp, #76]	; 0x4c
   3f9d4:	add	r8, r1, r8
   3f9d8:	cmp	r8, r2
   3f9dc:	mov	r2, #0
   3f9e0:	bge	56c1c <GetDataSlab+0x26c9c>
   3f9e4:	ldr	r5, [sp, #80]	; 0x50
   3f9e8:	ldr	r2, [sp, #72]	; 0x48
   3f9ec:	cmp	r1, #1
   3f9f0:	sub	ip, fp, #176	; 0xb0
   3f9f4:	add	r9, sl, r5, lsl #1
   3f9f8:	add	r3, r5, r7
   3f9fc:	blt	3fa44 <GetDataSlab+0xfac4>
   3fa00:	ldr	r1, [sp, #88]	; 0x58
   3fa04:	ldr	r5, [fp, #20]
   3fa08:	mov	r6, r4
   3fa0c:	mov	r2, #0
   3fa10:	mov	r7, r9
   3fa14:	add	r4, r1, r8
   3fa18:	ldrb	r1, [r7], #2
   3fa1c:	strb	r1, [r4, r2]
   3fa20:	add	r2, r2, #1
   3fa24:	ldr	r1, [r5]
   3fa28:	cmp	r2, r1
   3fa2c:	blt	3fa18 <GetDataSlab+0xfa98>
   3fa30:	ldr	r2, [fp, #12]
   3fa34:	mov	r4, r6
   3fa38:	ldr	r5, [r2]
   3fa3c:	ldr	r2, [fp, #8]
   3fa40:	ldr	r2, [r2]
   3fa44:	str	r2, [sp, #72]	; 0x48
   3fa48:	sub	r2, r2, r5
   3fa4c:	str	r5, [sp, #80]	; 0x50
   3fa50:	add	sl, r9, r2, lsl #1
   3fa54:	add	r7, r3, r2
   3fa58:	ldr	r2, [fp, #24]
   3fa5c:	cmp	r2, #2
   3fa60:	blt	3f9d0 <GetDataSlab+0xfa50>
   3fa64:	ldr	r9, [sp, #68]	; 0x44
   3fa68:	mov	r2, #0
   3fa6c:	b	3fa98 <GetDataSlab+0xfb18>
   3fa70:	ldr	r6, [ip, r2]
   3fa74:	ldr	ip, [lr, r2]
   3fa78:	sub	r3, r3, r5
   3fa7c:	mla	r3, ip, r6, r3
   3fa80:	sub	ip, fp, #176	; 0xb0
   3fa84:	add	r7, r3, r7
   3fa88:	add	sl, sl, r3, lsl #1
   3fa8c:	subs	r9, r9, #1
   3fa90:	add	r2, r2, #4
   3fa94:	beq	3f9d0 <GetDataSlab+0xfa50>
   3fa98:	ldr	r3, [r0, r2]
   3fa9c:	add	r3, r3, #1
   3faa0:	str	r3, [r0, r2]
   3faa4:	ldr	r5, [r4, r2]
   3faa8:	sdiv	r6, r3, r5
   3faac:	mls	r3, r6, r5, r3
   3fab0:	cmp	r3, #0
   3fab4:	bne	3f9c0 <GetDataSlab+0xfa40>
   3fab8:	mov	r3, #0
   3fabc:	str	r3, [r0, r2]
   3fac0:	ldr	r3, [sp, #84]	; 0x54
   3fac4:	ldr	r3, [r3, r2]
   3fac8:	sdiv	r5, r7, r3
   3facc:	mls	r5, r5, r3, r7
   3fad0:	cmp	r5, #0
   3fad4:	bne	3fa70 <GetDataSlab+0xfaf0>
   3fad8:	ldr	r3, [lr, r2]
   3fadc:	cmp	r3, #0
   3fae0:	beq	3fa8c <GetDataSlab+0xfb0c>
   3fae4:	ldr	r6, [ip, r2]
   3fae8:	mla	r7, r6, r3, r7
   3faec:	mul	r3, r6, r3
   3faf0:	b	3fa88 <GetDataSlab+0xfb08>
   3faf4:	ldr	r0, [sp, #80]	; 0x50
   3faf8:	cmp	r5, #1
   3fafc:	add	sl, r0, r7, lsl #1
   3fb00:	bne	4c3c8 <GetDataSlab+0x1c448>
   3fb04:	ldr	r0, [sp, #76]	; 0x4c
   3fb08:	ldr	r3, [fp, #20]
   3fb0c:	sub	r2, fp, #176	; 0xb0
   3fb10:	cmp	r0, #1
   3fb14:	blt	56468 <GetDataSlab+0x264e8>
   3fb18:	orr	r2, r2, #4
   3fb1c:	ldr	lr, [fp, #12]
   3fb20:	sub	r0, fp, #136	; 0x88
   3fb24:	add	r4, r3, #4
   3fb28:	str	r2, [sp, #84]	; 0x54
   3fb2c:	ldr	r2, [fp, #24]
   3fb30:	orr	r0, r0, #4
   3fb34:	sub	r2, r2, #1
   3fb38:	str	r2, [sp, #68]	; 0x44
   3fb3c:	orr	r2, r8, #4
   3fb40:	mov	r8, #0
   3fb44:	str	r2, [sp, #64]	; 0x40
   3fb48:	ldr	r2, [lr], #4
   3fb4c:	str	r2, [sp, #80]	; 0x50
   3fb50:	b	3fb78 <GetDataSlab+0xfbf8>
   3fb54:	ldr	r3, [sp, #64]	; 0x40
   3fb58:	ldr	r2, [r3, r2]
   3fb5c:	add	sl, sl, r2, lsl #1
   3fb60:	add	r7, r2, r7
   3fb64:	ldr	r2, [sp, #76]	; 0x4c
   3fb68:	add	r8, r1, r8
   3fb6c:	cmp	r8, r2
   3fb70:	mov	r2, #0
   3fb74:	bge	56c1c <GetDataSlab+0x26c9c>
   3fb78:	ldr	r5, [sp, #80]	; 0x50
   3fb7c:	ldr	r2, [sp, #72]	; 0x48
   3fb80:	cmp	r1, #1
   3fb84:	sub	ip, fp, #176	; 0xb0
   3fb88:	add	r9, sl, r5, lsl #1
   3fb8c:	add	r3, r5, r7
   3fb90:	blt	3fbd8 <GetDataSlab+0xfc58>
   3fb94:	ldr	r1, [sp, #88]	; 0x58
   3fb98:	ldr	r5, [fp, #20]
   3fb9c:	mov	r6, r4
   3fba0:	mov	r2, #0
   3fba4:	mov	r7, r9
   3fba8:	add	r4, r1, r8
   3fbac:	ldrb	r1, [r7], #2
   3fbb0:	strb	r1, [r4, r2]
   3fbb4:	add	r2, r2, #1
   3fbb8:	ldr	r1, [r5]
   3fbbc:	cmp	r2, r1
   3fbc0:	blt	3fbac <GetDataSlab+0xfc2c>
   3fbc4:	ldr	r2, [fp, #12]
   3fbc8:	mov	r4, r6
   3fbcc:	ldr	r5, [r2]
   3fbd0:	ldr	r2, [fp, #8]
   3fbd4:	ldr	r2, [r2]
   3fbd8:	str	r2, [sp, #72]	; 0x48
   3fbdc:	sub	r2, r2, r5
   3fbe0:	str	r5, [sp, #80]	; 0x50
   3fbe4:	add	sl, r9, r2, lsl #1
   3fbe8:	add	r7, r3, r2
   3fbec:	ldr	r2, [fp, #24]
   3fbf0:	cmp	r2, #2
   3fbf4:	blt	3fb64 <GetDataSlab+0xfbe4>
   3fbf8:	ldr	r9, [sp, #68]	; 0x44
   3fbfc:	mov	r2, #0
   3fc00:	b	3fc2c <GetDataSlab+0xfcac>
   3fc04:	ldr	r6, [ip, r2]
   3fc08:	ldr	ip, [lr, r2]
   3fc0c:	sub	r3, r3, r5
   3fc10:	mla	r3, ip, r6, r3
   3fc14:	sub	ip, fp, #176	; 0xb0
   3fc18:	add	r7, r3, r7
   3fc1c:	add	sl, sl, r3, lsl #1
   3fc20:	subs	r9, r9, #1
   3fc24:	add	r2, r2, #4
   3fc28:	beq	3fb64 <GetDataSlab+0xfbe4>
   3fc2c:	ldr	r3, [r0, r2]
   3fc30:	add	r3, r3, #1
   3fc34:	str	r3, [r0, r2]
   3fc38:	ldr	r5, [r4, r2]
   3fc3c:	sdiv	r6, r3, r5
   3fc40:	mls	r3, r6, r5, r3
   3fc44:	cmp	r3, #0
   3fc48:	bne	3fb54 <GetDataSlab+0xfbd4>
   3fc4c:	mov	r3, #0
   3fc50:	str	r3, [r0, r2]
   3fc54:	ldr	r3, [sp, #84]	; 0x54
   3fc58:	ldr	r3, [r3, r2]
   3fc5c:	sdiv	r5, r7, r3
   3fc60:	mls	r5, r5, r3, r7
   3fc64:	cmp	r5, #0
   3fc68:	bne	3fc04 <GetDataSlab+0xfc84>
   3fc6c:	ldr	r3, [lr, r2]
   3fc70:	cmp	r3, #0
   3fc74:	beq	3fc20 <GetDataSlab+0xfca0>
   3fc78:	ldr	r6, [ip, r2]
   3fc7c:	mla	r7, r6, r3, r7
   3fc80:	mul	r3, r6, r3
   3fc84:	b	3fc1c <GetDataSlab+0xfc9c>
   3fc88:	ldr	r0, [sp, #80]	; 0x50
   3fc8c:	cmp	r5, #1
   3fc90:	add	r8, r0, r7, lsl #2
   3fc94:	bne	4c574 <GetDataSlab+0x1c5f4>
   3fc98:	ldr	r0, [sp, #76]	; 0x4c
   3fc9c:	ldr	r3, [fp, #20]
   3fca0:	sub	r2, fp, #176	; 0xb0
   3fca4:	cmp	r0, #1
   3fca8:	blt	56468 <GetDataSlab+0x264e8>
   3fcac:	orr	r2, r2, #4
   3fcb0:	ldr	lr, [fp, #12]
   3fcb4:	sub	r0, fp, #136	; 0x88
   3fcb8:	add	r3, r3, #4
   3fcbc:	mov	ip, #0
   3fcc0:	str	r2, [sp, #80]	; 0x50
   3fcc4:	ldr	r2, [fp, #24]
   3fcc8:	orr	r0, r0, #4
   3fccc:	str	r3, [sp, #84]	; 0x54
   3fcd0:	sub	r2, r2, #1
   3fcd4:	str	r2, [sp, #64]	; 0x40
   3fcd8:	sub	r2, fp, #96	; 0x60
   3fcdc:	orr	r2, r2, #4
   3fce0:	str	r2, [sp, #60]	; 0x3c
   3fce4:	ldr	r2, [lr], #4
   3fce8:	str	r2, [sp, #68]	; 0x44
   3fcec:	b	3fd14 <GetDataSlab+0xfd94>
   3fcf0:	ldr	r3, [sp, #60]	; 0x3c
   3fcf4:	ldr	r2, [r3, r2]
   3fcf8:	add	r8, r8, r2, lsl #2
   3fcfc:	add	r7, r2, r7
   3fd00:	ldr	r2, [sp, #76]	; 0x4c
   3fd04:	add	ip, r1, ip
   3fd08:	cmp	ip, r2
   3fd0c:	mov	r2, #0
   3fd10:	bge	56c1c <GetDataSlab+0x26c9c>
   3fd14:	ldr	r4, [sp, #68]	; 0x44
   3fd18:	ldr	r5, [fp, #20]
   3fd1c:	ldr	r2, [sp, #72]	; 0x48
   3fd20:	cmp	r1, #1
   3fd24:	add	r3, r4, r7
   3fd28:	add	r7, r8, r4, lsl #2
   3fd2c:	blt	3fd64 <GetDataSlab+0xfde4>
   3fd30:	ldr	r1, [sp, #88]	; 0x58
   3fd34:	mov	r2, #0
   3fd38:	add	r4, r1, ip
   3fd3c:	ldr	r1, [r7, r2, lsl #2]
   3fd40:	strb	r1, [r4, r2]
   3fd44:	add	r2, r2, #1
   3fd48:	ldr	r1, [r5]
   3fd4c:	cmp	r2, r1
   3fd50:	blt	3fd3c <GetDataSlab+0xfdbc>
   3fd54:	ldr	r2, [fp, #12]
   3fd58:	ldr	r4, [r2]
   3fd5c:	ldr	r2, [fp, #8]
   3fd60:	ldr	r2, [r2]
   3fd64:	str	r2, [sp, #72]	; 0x48
   3fd68:	sub	r2, r2, r4
   3fd6c:	str	r4, [sp, #68]	; 0x44
   3fd70:	add	r8, r7, r2, lsl #2
   3fd74:	add	r7, r3, r2
   3fd78:	ldr	r2, [fp, #24]
   3fd7c:	cmp	r2, #2
   3fd80:	blt	3fd00 <GetDataSlab+0xfd80>
   3fd84:	ldr	r9, [sp, #64]	; 0x40
   3fd88:	mov	r2, #0
   3fd8c:	b	3fdb8 <GetDataSlab+0xfe38>
   3fd90:	sub	r4, fp, #176	; 0xb0
   3fd94:	ldr	sl, [lr, r2]
   3fd98:	sub	r3, r3, r5
   3fd9c:	ldr	r6, [r4, r2]
   3fda0:	mla	r3, sl, r6, r3
   3fda4:	add	r7, r3, r7
   3fda8:	add	r8, r8, r3, lsl #2
   3fdac:	subs	r9, r9, #1
   3fdb0:	add	r2, r2, #4
   3fdb4:	beq	3fd00 <GetDataSlab+0xfd80>
   3fdb8:	ldr	r3, [r0, r2]
   3fdbc:	ldr	r4, [sp, #84]	; 0x54
   3fdc0:	add	r3, r3, #1
   3fdc4:	str	r3, [r0, r2]
   3fdc8:	ldr	r5, [r4, r2]
   3fdcc:	sdiv	r6, r3, r5
   3fdd0:	mls	r3, r6, r5, r3
   3fdd4:	cmp	r3, #0
   3fdd8:	bne	3fcf0 <GetDataSlab+0xfd70>
   3fddc:	mov	r3, #0
   3fde0:	str	r3, [r0, r2]
   3fde4:	ldr	r3, [sp, #80]	; 0x50
   3fde8:	ldr	r3, [r3, r2]
   3fdec:	sdiv	r5, r7, r3
   3fdf0:	mls	r5, r5, r3, r7
   3fdf4:	cmp	r5, #0
   3fdf8:	bne	3fd90 <GetDataSlab+0xfe10>
   3fdfc:	ldr	r3, [lr, r2]
   3fe00:	cmp	r3, #0
   3fe04:	beq	3fdac <GetDataSlab+0xfe2c>
   3fe08:	sub	r4, fp, #176	; 0xb0
   3fe0c:	ldr	r5, [r4, r2]
   3fe10:	mla	r7, r5, r3, r7
   3fe14:	mul	r3, r5, r3
   3fe18:	b	3fda8 <GetDataSlab+0xfe28>
   3fe1c:	ldr	r0, [sp, #80]	; 0x50
   3fe20:	cmp	r5, #1
   3fe24:	add	r8, r0, r7, lsl #2
   3fe28:	bne	4c720 <GetDataSlab+0x1c7a0>
   3fe2c:	ldr	r0, [sp, #76]	; 0x4c
   3fe30:	ldr	r3, [fp, #20]
   3fe34:	sub	r2, fp, #176	; 0xb0
   3fe38:	cmp	r0, #1
   3fe3c:	blt	56468 <GetDataSlab+0x264e8>
   3fe40:	orr	r2, r2, #4
   3fe44:	ldr	lr, [fp, #12]
   3fe48:	sub	r0, fp, #136	; 0x88
   3fe4c:	add	r3, r3, #4
   3fe50:	mov	ip, #0
   3fe54:	str	r2, [sp, #80]	; 0x50
   3fe58:	ldr	r2, [fp, #24]
   3fe5c:	orr	r0, r0, #4
   3fe60:	str	r3, [sp, #84]	; 0x54
   3fe64:	sub	r2, r2, #1
   3fe68:	str	r2, [sp, #64]	; 0x40
   3fe6c:	sub	r2, fp, #96	; 0x60
   3fe70:	orr	r2, r2, #4
   3fe74:	str	r2, [sp, #60]	; 0x3c
   3fe78:	ldr	r2, [lr], #4
   3fe7c:	str	r2, [sp, #68]	; 0x44
   3fe80:	b	3fea8 <GetDataSlab+0xff28>
   3fe84:	ldr	r3, [sp, #60]	; 0x3c
   3fe88:	ldr	r2, [r3, r2]
   3fe8c:	add	r8, r8, r2, lsl #2
   3fe90:	add	r7, r2, r7
   3fe94:	ldr	r2, [sp, #76]	; 0x4c
   3fe98:	add	ip, r1, ip
   3fe9c:	cmp	ip, r2
   3fea0:	mov	r2, #0
   3fea4:	bge	56c1c <GetDataSlab+0x26c9c>
   3fea8:	ldr	r4, [sp, #68]	; 0x44
   3feac:	ldr	r5, [fp, #20]
   3feb0:	ldr	r2, [sp, #72]	; 0x48
   3feb4:	cmp	r1, #1
   3feb8:	add	r3, r4, r7
   3febc:	add	r7, r8, r4, lsl #2
   3fec0:	blt	3fef8 <GetDataSlab+0xff78>
   3fec4:	ldr	r1, [sp, #88]	; 0x58
   3fec8:	mov	r2, #0
   3fecc:	add	r4, r1, ip
   3fed0:	ldr	r1, [r7, r2, lsl #2]
   3fed4:	strb	r1, [r4, r2]
   3fed8:	add	r2, r2, #1
   3fedc:	ldr	r1, [r5]
   3fee0:	cmp	r2, r1
   3fee4:	blt	3fed0 <GetDataSlab+0xff50>
   3fee8:	ldr	r2, [fp, #12]
   3feec:	ldr	r4, [r2]
   3fef0:	ldr	r2, [fp, #8]
   3fef4:	ldr	r2, [r2]
   3fef8:	str	r2, [sp, #72]	; 0x48
   3fefc:	sub	r2, r2, r4
   3ff00:	str	r4, [sp, #68]	; 0x44
   3ff04:	add	r8, r7, r2, lsl #2
   3ff08:	add	r7, r3, r2
   3ff0c:	ldr	r2, [fp, #24]
   3ff10:	cmp	r2, #2
   3ff14:	blt	3fe94 <GetDataSlab+0xff14>
   3ff18:	ldr	r9, [sp, #64]	; 0x40
   3ff1c:	mov	r2, #0
   3ff20:	b	3ff4c <GetDataSlab+0xffcc>
   3ff24:	sub	r4, fp, #176	; 0xb0
   3ff28:	ldr	sl, [lr, r2]
   3ff2c:	sub	r3, r3, r5
   3ff30:	ldr	r6, [r4, r2]
   3ff34:	mla	r3, sl, r6, r3
   3ff38:	add	r7, r3, r7
   3ff3c:	add	r8, r8, r3, lsl #2
   3ff40:	subs	r9, r9, #1
   3ff44:	add	r2, r2, #4
   3ff48:	beq	3fe94 <GetDataSlab+0xff14>
   3ff4c:	ldr	r3, [r0, r2]
   3ff50:	ldr	r4, [sp, #84]	; 0x54
   3ff54:	add	r3, r3, #1
   3ff58:	str	r3, [r0, r2]
   3ff5c:	ldr	r5, [r4, r2]
   3ff60:	sdiv	r6, r3, r5
   3ff64:	mls	r3, r6, r5, r3
   3ff68:	cmp	r3, #0
   3ff6c:	bne	3fe84 <GetDataSlab+0xff04>
   3ff70:	mov	r3, #0
   3ff74:	str	r3, [r0, r2]
   3ff78:	ldr	r3, [sp, #80]	; 0x50
   3ff7c:	ldr	r3, [r3, r2]
   3ff80:	sdiv	r5, r7, r3
   3ff84:	mls	r5, r5, r3, r7
   3ff88:	cmp	r5, #0
   3ff8c:	bne	3ff24 <GetDataSlab+0xffa4>
   3ff90:	ldr	r3, [lr, r2]
   3ff94:	cmp	r3, #0
   3ff98:	beq	3ff40 <GetDataSlab+0xffc0>
   3ff9c:	sub	r4, fp, #176	; 0xb0
   3ffa0:	ldr	r5, [r4, r2]
   3ffa4:	mla	r7, r5, r3, r7
   3ffa8:	mul	r3, r5, r3
   3ffac:	b	3ff3c <GetDataSlab+0xffbc>
   3ffb0:	ldr	r0, [sp, #80]	; 0x50
   3ffb4:	cmp	r5, #1
   3ffb8:	add	sl, r0, r7, lsl #2
   3ffbc:	bne	4c8cc <GetDataSlab+0x1c94c>
   3ffc0:	ldr	r0, [sp, #76]	; 0x4c
   3ffc4:	ldr	r3, [fp, #20]
   3ffc8:	sub	r2, fp, #176	; 0xb0
   3ffcc:	cmp	r0, #1
   3ffd0:	blt	56468 <GetDataSlab+0x264e8>
   3ffd4:	orr	r2, r2, #4
   3ffd8:	ldr	lr, [fp, #12]
   3ffdc:	sub	r0, fp, #136	; 0x88
   3ffe0:	add	r4, r3, #4
   3ffe4:	str	r2, [sp, #84]	; 0x54
   3ffe8:	ldr	r2, [fp, #24]
   3ffec:	orr	r0, r0, #4
   3fff0:	sub	r2, r2, #1
   3fff4:	str	r2, [sp, #68]	; 0x44
   3fff8:	orr	r2, r8, #4
   3fffc:	mov	r8, #0
   40000:	str	r2, [sp, #64]	; 0x40
   40004:	ldr	r2, [lr], #4
   40008:	str	r2, [sp, #80]	; 0x50
   4000c:	b	40034 <GetDataSlab+0x100b4>
   40010:	ldr	r3, [sp, #64]	; 0x40
   40014:	ldr	r2, [r3, r2]
   40018:	add	sl, sl, r2, lsl #2
   4001c:	add	r7, r2, r7
   40020:	ldr	r2, [sp, #76]	; 0x4c
   40024:	add	r8, r1, r8
   40028:	cmp	r8, r2
   4002c:	mov	r2, #0
   40030:	bge	56c1c <GetDataSlab+0x26c9c>
   40034:	ldr	r5, [sp, #80]	; 0x50
   40038:	ldr	r2, [sp, #72]	; 0x48
   4003c:	cmp	r1, #1
   40040:	sub	ip, fp, #176	; 0xb0
   40044:	add	r9, sl, r5, lsl #2
   40048:	add	r3, r5, r7
   4004c:	blt	400a0 <GetDataSlab+0x10120>
   40050:	ldr	r1, [sp, #88]	; 0x58
   40054:	ldr	r5, [fp, #20]
   40058:	mov	r6, r4
   4005c:	mov	r2, #0
   40060:	mov	r7, r9
   40064:	add	r4, r1, r8
   40068:	vldr	s0, [r7]
   4006c:	add	r7, r7, #4
   40070:	vcvt.s32.f32	s0, s0
   40074:	vmov	r1, s0
   40078:	strb	r1, [r4, r2]
   4007c:	add	r2, r2, #1
   40080:	ldr	r1, [r5]
   40084:	cmp	r2, r1
   40088:	blt	40068 <GetDataSlab+0x100e8>
   4008c:	ldr	r2, [fp, #12]
   40090:	mov	r4, r6
   40094:	ldr	r5, [r2]
   40098:	ldr	r2, [fp, #8]
   4009c:	ldr	r2, [r2]
   400a0:	str	r2, [sp, #72]	; 0x48
   400a4:	sub	r2, r2, r5
   400a8:	str	r5, [sp, #80]	; 0x50
   400ac:	add	sl, r9, r2, lsl #2
   400b0:	add	r7, r3, r2
   400b4:	ldr	r2, [fp, #24]
   400b8:	cmp	r2, #2
   400bc:	blt	40020 <GetDataSlab+0x100a0>
   400c0:	ldr	r9, [sp, #68]	; 0x44
   400c4:	mov	r2, #0
   400c8:	b	400f4 <GetDataSlab+0x10174>
   400cc:	ldr	r6, [ip, r2]
   400d0:	ldr	ip, [lr, r2]
   400d4:	sub	r3, r3, r5
   400d8:	mla	r3, ip, r6, r3
   400dc:	sub	ip, fp, #176	; 0xb0
   400e0:	add	r7, r3, r7
   400e4:	add	sl, sl, r3, lsl #2
   400e8:	subs	r9, r9, #1
   400ec:	add	r2, r2, #4
   400f0:	beq	40020 <GetDataSlab+0x100a0>
   400f4:	ldr	r3, [r0, r2]
   400f8:	add	r3, r3, #1
   400fc:	str	r3, [r0, r2]
   40100:	ldr	r5, [r4, r2]
   40104:	sdiv	r6, r3, r5
   40108:	mls	r3, r6, r5, r3
   4010c:	cmp	r3, #0
   40110:	bne	40010 <GetDataSlab+0x10090>
   40114:	mov	r3, #0
   40118:	str	r3, [r0, r2]
   4011c:	ldr	r3, [sp, #84]	; 0x54
   40120:	ldr	r3, [r3, r2]
   40124:	sdiv	r5, r7, r3
   40128:	mls	r5, r5, r3, r7
   4012c:	cmp	r5, #0
   40130:	bne	400cc <GetDataSlab+0x1014c>
   40134:	ldr	r3, [lr, r2]
   40138:	cmp	r3, #0
   4013c:	beq	400e8 <GetDataSlab+0x10168>
   40140:	ldr	r6, [ip, r2]
   40144:	mla	r7, r6, r3, r7
   40148:	mul	r3, r6, r3
   4014c:	b	400e4 <GetDataSlab+0x10164>
   40150:	ldr	r0, [sp, #80]	; 0x50
   40154:	cmp	r5, #1
   40158:	add	sl, r0, r7, lsl #3
   4015c:	bne	4ca80 <GetDataSlab+0x1cb00>
   40160:	ldr	r0, [sp, #76]	; 0x4c
   40164:	ldr	r3, [fp, #20]
   40168:	sub	r2, fp, #176	; 0xb0
   4016c:	cmp	r0, #1
   40170:	blt	56468 <GetDataSlab+0x264e8>
   40174:	orr	r2, r2, #4
   40178:	ldr	lr, [fp, #12]
   4017c:	sub	r0, fp, #136	; 0x88
   40180:	add	r4, r3, #4
   40184:	str	r2, [sp, #84]	; 0x54
   40188:	ldr	r2, [fp, #24]
   4018c:	orr	r0, r0, #4
   40190:	sub	r2, r2, #1
   40194:	str	r2, [sp, #68]	; 0x44
   40198:	orr	r2, r8, #4
   4019c:	mov	r8, #0
   401a0:	str	r2, [sp, #64]	; 0x40
   401a4:	ldr	r2, [lr], #4
   401a8:	str	r2, [sp, #80]	; 0x50
   401ac:	b	401d4 <GetDataSlab+0x10254>
   401b0:	ldr	r3, [sp, #64]	; 0x40
   401b4:	ldr	r2, [r3, r2]
   401b8:	add	sl, sl, r2, lsl #3
   401bc:	add	r7, r2, r7
   401c0:	ldr	r2, [sp, #76]	; 0x4c
   401c4:	add	r8, r1, r8
   401c8:	cmp	r8, r2
   401cc:	mov	r2, #0
   401d0:	bge	56c1c <GetDataSlab+0x26c9c>
   401d4:	ldr	r5, [sp, #80]	; 0x50
   401d8:	ldr	r2, [sp, #72]	; 0x48
   401dc:	cmp	r1, #1
   401e0:	sub	ip, fp, #176	; 0xb0
   401e4:	add	r9, sl, r5, lsl #3
   401e8:	add	r3, r5, r7
   401ec:	blt	40240 <GetDataSlab+0x102c0>
   401f0:	ldr	r1, [sp, #88]	; 0x58
   401f4:	ldr	r5, [fp, #20]
   401f8:	mov	r6, r4
   401fc:	mov	r2, #0
   40200:	mov	r7, r9
   40204:	add	r4, r1, r8
   40208:	vldr	d16, [r7]
   4020c:	add	r7, r7, #8
   40210:	vcvt.s32.f64	s0, d16
   40214:	vmov	r1, s0
   40218:	strb	r1, [r4, r2]
   4021c:	add	r2, r2, #1
   40220:	ldr	r1, [r5]
   40224:	cmp	r2, r1
   40228:	blt	40208 <GetDataSlab+0x10288>
   4022c:	ldr	r2, [fp, #12]
   40230:	mov	r4, r6
   40234:	ldr	r5, [r2]
   40238:	ldr	r2, [fp, #8]
   4023c:	ldr	r2, [r2]
   40240:	str	r2, [sp, #72]	; 0x48
   40244:	sub	r2, r2, r5
   40248:	str	r5, [sp, #80]	; 0x50
   4024c:	add	sl, r9, r2, lsl #3
   40250:	add	r7, r3, r2
   40254:	ldr	r2, [fp, #24]
   40258:	cmp	r2, #2
   4025c:	blt	401c0 <GetDataSlab+0x10240>
   40260:	ldr	r9, [sp, #68]	; 0x44
   40264:	mov	r2, #0
   40268:	b	40294 <GetDataSlab+0x10314>
   4026c:	ldr	r6, [ip, r2]
   40270:	ldr	ip, [lr, r2]
   40274:	sub	r3, r3, r5
   40278:	mla	r3, ip, r6, r3
   4027c:	sub	ip, fp, #176	; 0xb0
   40280:	add	r7, r3, r7
   40284:	add	sl, sl, r3, lsl #3
   40288:	subs	r9, r9, #1
   4028c:	add	r2, r2, #4
   40290:	beq	401c0 <GetDataSlab+0x10240>
   40294:	ldr	r3, [r0, r2]
   40298:	add	r3, r3, #1
   4029c:	str	r3, [r0, r2]
   402a0:	ldr	r5, [r4, r2]
   402a4:	sdiv	r6, r3, r5
   402a8:	mls	r3, r6, r5, r3
   402ac:	cmp	r3, #0
   402b0:	bne	401b0 <GetDataSlab+0x10230>
   402b4:	mov	r3, #0
   402b8:	str	r3, [r0, r2]
   402bc:	ldr	r3, [sp, #84]	; 0x54
   402c0:	ldr	r3, [r3, r2]
   402c4:	sdiv	r5, r7, r3
   402c8:	mls	r5, r5, r3, r7
   402cc:	cmp	r5, #0
   402d0:	bne	4026c <GetDataSlab+0x102ec>
   402d4:	ldr	r3, [lr, r2]
   402d8:	cmp	r3, #0
   402dc:	beq	40288 <GetDataSlab+0x10308>
   402e0:	ldr	r6, [ip, r2]
   402e4:	mla	r7, r6, r3, r7
   402e8:	mul	r3, r6, r3
   402ec:	b	40284 <GetDataSlab+0x10304>
   402f0:	ldr	r0, [sp, #80]	; 0x50
   402f4:	cmp	r7, #1
   402f8:	add	r9, r0, r3, lsl #3
   402fc:	bne	4cc34 <GetDataSlab+0x1ccb4>
   40300:	ldr	r0, [sp, #68]	; 0x44
   40304:	sub	ip, fp, #176	; 0xb0
   40308:	cmp	r0, #1
   4030c:	blt	4cdd4 <GetDataSlab+0x1ce54>
   40310:	ldr	r2, [fp, #20]
   40314:	ldr	sl, [fp, #12]
   40318:	sub	r0, fp, #136	; 0x88
   4031c:	mov	lr, #0
   40320:	orr	r0, r0, #4
   40324:	add	r5, r2, #4
   40328:	orr	r2, ip, #4
   4032c:	ldr	r7, [sl], #4
   40330:	str	r2, [sp, #84]	; 0x54
   40334:	ldr	r2, [fp, #24]
   40338:	sub	r2, r2, #1
   4033c:	str	r2, [sp, #60]	; 0x3c
   40340:	orr	r2, r8, #4
   40344:	str	r2, [sp, #56]	; 0x38
   40348:	b	40370 <GetDataSlab+0x103f0>
   4034c:	ldr	r2, [sp, #56]	; 0x38
   40350:	ldr	r2, [r2, r7]
   40354:	add	r9, r9, r2, lsl #3
   40358:	add	r3, r2, r3
   4035c:	ldr	r2, [sp, #68]	; 0x44
   40360:	ldr	r7, [sp, #72]	; 0x48
   40364:	add	lr, r1, lr
   40368:	cmp	lr, r2
   4036c:	bge	4cdd4 <GetDataSlab+0x1ce54>
   40370:	ldr	r2, [sp, #64]	; 0x40
   40374:	add	r4, r9, r7, lsl #3
   40378:	add	r8, r7, r3
   4037c:	cmp	r1, #1
   40380:	blt	403c8 <GetDataSlab+0x10448>
   40384:	ldr	r1, [sp, #88]	; 0x58
   40388:	ldr	r2, [fp, #20]
   4038c:	mov	r6, r5
   40390:	mov	r3, #0
   40394:	mov	r5, r4
   40398:	add	r7, r1, lr
   4039c:	ldrb	r1, [r5], #8
   403a0:	strb	r1, [r7, r3]
   403a4:	add	r3, r3, #1
   403a8:	ldr	r1, [r2]
   403ac:	cmp	r3, r1
   403b0:	blt	4039c <GetDataSlab+0x1041c>
   403b4:	ldr	r2, [fp, #12]
   403b8:	mov	r5, r6
   403bc:	ldr	r7, [r2]
   403c0:	ldr	r2, [fp, #8]
   403c4:	ldr	r2, [r2]
   403c8:	str	r2, [sp, #64]	; 0x40
   403cc:	sub	r2, r2, r7
   403d0:	str	r7, [sp, #72]	; 0x48
   403d4:	add	r9, r4, r2, lsl #3
   403d8:	add	r3, r8, r2
   403dc:	ldr	r2, [fp, #24]
   403e0:	cmp	r2, #2
   403e4:	blt	4035c <GetDataSlab+0x103dc>
   403e8:	ldr	r8, [sp, #60]	; 0x3c
   403ec:	mov	r7, #0
   403f0:	b	4041c <GetDataSlab+0x1049c>
   403f4:	ldr	r4, [ip, r7]
   403f8:	ldr	ip, [sl, r7]
   403fc:	sub	r2, r2, r6
   40400:	mla	r2, ip, r4, r2
   40404:	sub	ip, fp, #176	; 0xb0
   40408:	add	r3, r2, r3
   4040c:	add	r9, r9, r2, lsl #3
   40410:	subs	r8, r8, #1
   40414:	add	r7, r7, #4
   40418:	beq	4035c <GetDataSlab+0x103dc>
   4041c:	ldr	r2, [r0, r7]
   40420:	add	r2, r2, #1
   40424:	str	r2, [r0, r7]
   40428:	ldr	r6, [r5, r7]
   4042c:	sdiv	r4, r2, r6
   40430:	mls	r2, r4, r6, r2
   40434:	cmp	r2, #0
   40438:	bne	4034c <GetDataSlab+0x103cc>
   4043c:	mov	r2, #0
   40440:	str	r2, [r0, r7]
   40444:	ldr	r2, [sp, #84]	; 0x54
   40448:	ldr	r2, [r2, r7]
   4044c:	sdiv	r4, r3, r2
   40450:	mls	r6, r4, r2, r3
   40454:	cmp	r6, #0
   40458:	bne	403f4 <GetDataSlab+0x10474>
   4045c:	ldr	r2, [sl, r7]
   40460:	cmp	r2, #0
   40464:	beq	40410 <GetDataSlab+0x10490>
   40468:	ldr	r6, [ip, r7]
   4046c:	mla	r3, r6, r2, r3
   40470:	mul	r2, r6, r2
   40474:	b	4040c <GetDataSlab+0x1048c>
   40478:	ldr	r0, [sp, #80]	; 0x50
   4047c:	cmp	r5, #1
   40480:	add	r8, r0, r7
   40484:	bne	4d130 <GetDataSlab+0x1d1b0>
   40488:	ldr	r0, [sp, #76]	; 0x4c
   4048c:	ldr	r3, [fp, #20]
   40490:	sub	r2, fp, #176	; 0xb0
   40494:	cmp	r0, #1
   40498:	blt	56468 <GetDataSlab+0x264e8>
   4049c:	orr	r2, r2, #4
   404a0:	ldr	lr, [fp, #12]
   404a4:	sub	r0, fp, #136	; 0x88
   404a8:	add	r3, r3, #4
   404ac:	mov	ip, #0
   404b0:	str	r2, [sp, #80]	; 0x50
   404b4:	ldr	r2, [fp, #24]
   404b8:	orr	r0, r0, #4
   404bc:	str	r3, [sp, #84]	; 0x54
   404c0:	sub	r2, r2, #1
   404c4:	str	r2, [sp, #64]	; 0x40
   404c8:	sub	r2, fp, #96	; 0x60
   404cc:	orr	r2, r2, #4
   404d0:	str	r2, [sp, #60]	; 0x3c
   404d4:	ldr	r2, [lr], #4
   404d8:	str	r2, [sp, #68]	; 0x44
   404dc:	b	40504 <GetDataSlab+0x10584>
   404e0:	ldr	r3, [sp, #60]	; 0x3c
   404e4:	ldr	r2, [r3, r2]
   404e8:	add	r8, r8, r2
   404ec:	add	r7, r2, r7
   404f0:	ldr	r2, [sp, #76]	; 0x4c
   404f4:	add	ip, r1, ip
   404f8:	cmp	ip, r2
   404fc:	mov	r2, #0
   40500:	bge	56c1c <GetDataSlab+0x26c9c>
   40504:	ldr	r4, [sp, #68]	; 0x44
   40508:	ldr	r5, [fp, #20]
   4050c:	ldr	r2, [sp, #72]	; 0x48
   40510:	cmp	r1, #1
   40514:	add	r3, r4, r7
   40518:	add	r7, r8, r4
   4051c:	blt	40554 <GetDataSlab+0x105d4>
   40520:	ldr	r1, [sp, #88]	; 0x58
   40524:	mov	r2, #0
   40528:	add	r4, r1, ip
   4052c:	ldrb	r1, [r7, r2]
   40530:	strb	r1, [r4, r2]
   40534:	add	r2, r2, #1
   40538:	ldr	r1, [r5]
   4053c:	cmp	r2, r1
   40540:	blt	4052c <GetDataSlab+0x105ac>
   40544:	ldr	r2, [fp, #12]
   40548:	ldr	r4, [r2]
   4054c:	ldr	r2, [fp, #8]
   40550:	ldr	r2, [r2]
   40554:	str	r2, [sp, #72]	; 0x48
   40558:	sub	r2, r2, r4
   4055c:	str	r4, [sp, #68]	; 0x44
   40560:	add	r8, r7, r2
   40564:	add	r7, r3, r2
   40568:	ldr	r2, [fp, #24]
   4056c:	cmp	r2, #2
   40570:	blt	404f0 <GetDataSlab+0x10570>
   40574:	ldr	r9, [sp, #64]	; 0x40
   40578:	mov	r2, #0
   4057c:	b	405a8 <GetDataSlab+0x10628>
   40580:	sub	r4, fp, #176	; 0xb0
   40584:	ldr	sl, [lr, r2]
   40588:	sub	r3, r3, r5
   4058c:	ldr	r6, [r4, r2]
   40590:	mla	r3, sl, r6, r3
   40594:	add	r7, r3, r7
   40598:	add	r8, r8, r3
   4059c:	subs	r9, r9, #1
   405a0:	add	r2, r2, #4
   405a4:	beq	404f0 <GetDataSlab+0x10570>
   405a8:	ldr	r3, [r0, r2]
   405ac:	ldr	r4, [sp, #84]	; 0x54
   405b0:	add	r3, r3, #1
   405b4:	str	r3, [r0, r2]
   405b8:	ldr	r5, [r4, r2]
   405bc:	sdiv	r6, r3, r5
   405c0:	mls	r3, r6, r5, r3
   405c4:	cmp	r3, #0
   405c8:	bne	404e0 <GetDataSlab+0x10560>
   405cc:	mov	r3, #0
   405d0:	str	r3, [r0, r2]
   405d4:	ldr	r3, [sp, #80]	; 0x50
   405d8:	ldr	r3, [r3, r2]
   405dc:	sdiv	r5, r7, r3
   405e0:	mls	r5, r5, r3, r7
   405e4:	cmp	r5, #0
   405e8:	bne	40580 <GetDataSlab+0x10600>
   405ec:	ldr	r3, [lr, r2]
   405f0:	cmp	r3, #0
   405f4:	beq	4059c <GetDataSlab+0x1061c>
   405f8:	sub	r4, fp, #176	; 0xb0
   405fc:	ldr	r5, [r4, r2]
   40600:	mla	r7, r5, r3, r7
   40604:	mla	r8, r5, r3, r8
   40608:	b	4059c <GetDataSlab+0x1061c>
   4060c:	ldr	r0, [sp, #80]	; 0x50
   40610:	cmp	r5, #1
   40614:	add	sl, r0, r7, lsl #1
   40618:	bne	4d2dc <GetDataSlab+0x1d35c>
   4061c:	ldr	r0, [sp, #76]	; 0x4c
   40620:	ldr	r3, [fp, #20]
   40624:	sub	r2, fp, #176	; 0xb0
   40628:	cmp	r0, #1
   4062c:	blt	56468 <GetDataSlab+0x264e8>
   40630:	orr	r2, r2, #4
   40634:	ldr	lr, [fp, #12]
   40638:	sub	r0, fp, #136	; 0x88
   4063c:	add	r4, r3, #4
   40640:	str	r2, [sp, #84]	; 0x54
   40644:	ldr	r2, [fp, #24]
   40648:	orr	r0, r0, #4
   4064c:	sub	r2, r2, #1
   40650:	str	r2, [sp, #68]	; 0x44
   40654:	orr	r2, r8, #4
   40658:	mov	r8, #0
   4065c:	str	r2, [sp, #64]	; 0x40
   40660:	ldr	r2, [lr], #4
   40664:	str	r2, [sp, #80]	; 0x50
   40668:	b	40690 <GetDataSlab+0x10710>
   4066c:	ldr	r3, [sp, #64]	; 0x40
   40670:	ldr	r2, [r3, r2]
   40674:	add	sl, sl, r2, lsl #1
   40678:	add	r7, r2, r7
   4067c:	ldr	r2, [sp, #76]	; 0x4c
   40680:	add	r8, r1, r8
   40684:	cmp	r8, r2
   40688:	mov	r2, #0
   4068c:	bge	56c1c <GetDataSlab+0x26c9c>
   40690:	ldr	r5, [sp, #80]	; 0x50
   40694:	ldr	r2, [sp, #72]	; 0x48
   40698:	cmp	r1, #1
   4069c:	sub	ip, fp, #176	; 0xb0
   406a0:	add	r9, sl, r5, lsl #1
   406a4:	add	r3, r5, r7
   406a8:	blt	406f0 <GetDataSlab+0x10770>
   406ac:	ldr	r1, [sp, #88]	; 0x58
   406b0:	ldr	r5, [fp, #20]
   406b4:	mov	r6, r4
   406b8:	mov	r2, #0
   406bc:	mov	r7, r9
   406c0:	add	r4, r1, r8
   406c4:	ldrb	r1, [r7], #2
   406c8:	strb	r1, [r4, r2]
   406cc:	add	r2, r2, #1
   406d0:	ldr	r1, [r5]
   406d4:	cmp	r2, r1
   406d8:	blt	406c4 <GetDataSlab+0x10744>
   406dc:	ldr	r2, [fp, #12]
   406e0:	mov	r4, r6
   406e4:	ldr	r5, [r2]
   406e8:	ldr	r2, [fp, #8]
   406ec:	ldr	r2, [r2]
   406f0:	str	r2, [sp, #72]	; 0x48
   406f4:	sub	r2, r2, r5
   406f8:	str	r5, [sp, #80]	; 0x50
   406fc:	add	sl, r9, r2, lsl #1
   40700:	add	r7, r3, r2
   40704:	ldr	r2, [fp, #24]
   40708:	cmp	r2, #2
   4070c:	blt	4067c <GetDataSlab+0x106fc>
   40710:	ldr	r9, [sp, #68]	; 0x44
   40714:	mov	r2, #0
   40718:	b	40744 <GetDataSlab+0x107c4>
   4071c:	ldr	r6, [ip, r2]
   40720:	ldr	ip, [lr, r2]
   40724:	sub	r3, r3, r5
   40728:	mla	r3, ip, r6, r3
   4072c:	sub	ip, fp, #176	; 0xb0
   40730:	add	r7, r3, r7
   40734:	add	sl, sl, r3, lsl #1
   40738:	subs	r9, r9, #1
   4073c:	add	r2, r2, #4
   40740:	beq	4067c <GetDataSlab+0x106fc>
   40744:	ldr	r3, [r0, r2]
   40748:	add	r3, r3, #1
   4074c:	str	r3, [r0, r2]
   40750:	ldr	r5, [r4, r2]
   40754:	sdiv	r6, r3, r5
   40758:	mls	r3, r6, r5, r3
   4075c:	cmp	r3, #0
   40760:	bne	4066c <GetDataSlab+0x106ec>
   40764:	mov	r3, #0
   40768:	str	r3, [r0, r2]
   4076c:	ldr	r3, [sp, #84]	; 0x54
   40770:	ldr	r3, [r3, r2]
   40774:	sdiv	r5, r7, r3
   40778:	mls	r5, r5, r3, r7
   4077c:	cmp	r5, #0
   40780:	bne	4071c <GetDataSlab+0x1079c>
   40784:	ldr	r3, [lr, r2]
   40788:	cmp	r3, #0
   4078c:	beq	40738 <GetDataSlab+0x107b8>
   40790:	ldr	r6, [ip, r2]
   40794:	mla	r7, r6, r3, r7
   40798:	mul	r3, r6, r3
   4079c:	b	40734 <GetDataSlab+0x107b4>
   407a0:	ldr	r0, [sp, #80]	; 0x50
   407a4:	cmp	r5, #1
   407a8:	add	sl, r0, r7, lsl #1
   407ac:	bne	4d488 <GetDataSlab+0x1d508>
   407b0:	ldr	r0, [sp, #76]	; 0x4c
   407b4:	ldr	r3, [fp, #20]
   407b8:	sub	r2, fp, #176	; 0xb0
   407bc:	cmp	r0, #1
   407c0:	blt	56468 <GetDataSlab+0x264e8>
   407c4:	orr	r2, r2, #4
   407c8:	ldr	lr, [fp, #12]
   407cc:	sub	r0, fp, #136	; 0x88
   407d0:	add	r4, r3, #4
   407d4:	str	r2, [sp, #84]	; 0x54
   407d8:	ldr	r2, [fp, #24]
   407dc:	orr	r0, r0, #4
   407e0:	sub	r2, r2, #1
   407e4:	str	r2, [sp, #68]	; 0x44
   407e8:	orr	r2, r8, #4
   407ec:	mov	r8, #0
   407f0:	str	r2, [sp, #64]	; 0x40
   407f4:	ldr	r2, [lr], #4
   407f8:	str	r2, [sp, #80]	; 0x50
   407fc:	b	40824 <GetDataSlab+0x108a4>
   40800:	ldr	r3, [sp, #64]	; 0x40
   40804:	ldr	r2, [r3, r2]
   40808:	add	sl, sl, r2, lsl #1
   4080c:	add	r7, r2, r7
   40810:	ldr	r2, [sp, #76]	; 0x4c
   40814:	add	r8, r1, r8
   40818:	cmp	r8, r2
   4081c:	mov	r2, #0
   40820:	bge	56c1c <GetDataSlab+0x26c9c>
   40824:	ldr	r5, [sp, #80]	; 0x50
   40828:	ldr	r2, [sp, #72]	; 0x48
   4082c:	cmp	r1, #1
   40830:	sub	ip, fp, #176	; 0xb0
   40834:	add	r9, sl, r5, lsl #1
   40838:	add	r3, r5, r7
   4083c:	blt	40884 <GetDataSlab+0x10904>
   40840:	ldr	r1, [sp, #88]	; 0x58
   40844:	ldr	r5, [fp, #20]
   40848:	mov	r6, r4
   4084c:	mov	r2, #0
   40850:	mov	r7, r9
   40854:	add	r4, r1, r8
   40858:	ldrb	r1, [r7], #2
   4085c:	strb	r1, [r4, r2]
   40860:	add	r2, r2, #1
   40864:	ldr	r1, [r5]
   40868:	cmp	r2, r1
   4086c:	blt	40858 <GetDataSlab+0x108d8>
   40870:	ldr	r2, [fp, #12]
   40874:	mov	r4, r6
   40878:	ldr	r5, [r2]
   4087c:	ldr	r2, [fp, #8]
   40880:	ldr	r2, [r2]
   40884:	str	r2, [sp, #72]	; 0x48
   40888:	sub	r2, r2, r5
   4088c:	str	r5, [sp, #80]	; 0x50
   40890:	add	sl, r9, r2, lsl #1
   40894:	add	r7, r3, r2
   40898:	ldr	r2, [fp, #24]
   4089c:	cmp	r2, #2
   408a0:	blt	40810 <GetDataSlab+0x10890>
   408a4:	ldr	r9, [sp, #68]	; 0x44
   408a8:	mov	r2, #0
   408ac:	b	408d8 <GetDataSlab+0x10958>
   408b0:	ldr	r6, [ip, r2]
   408b4:	ldr	ip, [lr, r2]
   408b8:	sub	r3, r3, r5
   408bc:	mla	r3, ip, r6, r3
   408c0:	sub	ip, fp, #176	; 0xb0
   408c4:	add	r7, r3, r7
   408c8:	add	sl, sl, r3, lsl #1
   408cc:	subs	r9, r9, #1
   408d0:	add	r2, r2, #4
   408d4:	beq	40810 <GetDataSlab+0x10890>
   408d8:	ldr	r3, [r0, r2]
   408dc:	add	r3, r3, #1
   408e0:	str	r3, [r0, r2]
   408e4:	ldr	r5, [r4, r2]
   408e8:	sdiv	r6, r3, r5
   408ec:	mls	r3, r6, r5, r3
   408f0:	cmp	r3, #0
   408f4:	bne	40800 <GetDataSlab+0x10880>
   408f8:	mov	r3, #0
   408fc:	str	r3, [r0, r2]
   40900:	ldr	r3, [sp, #84]	; 0x54
   40904:	ldr	r3, [r3, r2]
   40908:	sdiv	r5, r7, r3
   4090c:	mls	r5, r5, r3, r7
   40910:	cmp	r5, #0
   40914:	bne	408b0 <GetDataSlab+0x10930>
   40918:	ldr	r3, [lr, r2]
   4091c:	cmp	r3, #0
   40920:	beq	408cc <GetDataSlab+0x1094c>
   40924:	ldr	r6, [ip, r2]
   40928:	mla	r7, r6, r3, r7
   4092c:	mul	r3, r6, r3
   40930:	b	408c8 <GetDataSlab+0x10948>
   40934:	ldr	r0, [sp, #80]	; 0x50
   40938:	cmp	r5, #1
   4093c:	add	r8, r0, r7, lsl #2
   40940:	bne	4d634 <GetDataSlab+0x1d6b4>
   40944:	ldr	r0, [sp, #76]	; 0x4c
   40948:	ldr	r3, [fp, #20]
   4094c:	sub	r2, fp, #176	; 0xb0
   40950:	cmp	r0, #1
   40954:	blt	56468 <GetDataSlab+0x264e8>
   40958:	orr	r2, r2, #4
   4095c:	ldr	lr, [fp, #12]
   40960:	sub	r0, fp, #136	; 0x88
   40964:	add	r3, r3, #4
   40968:	mov	ip, #0
   4096c:	str	r2, [sp, #80]	; 0x50
   40970:	ldr	r2, [fp, #24]
   40974:	orr	r0, r0, #4
   40978:	str	r3, [sp, #84]	; 0x54
   4097c:	sub	r2, r2, #1
   40980:	str	r2, [sp, #64]	; 0x40
   40984:	sub	r2, fp, #96	; 0x60
   40988:	orr	r2, r2, #4
   4098c:	str	r2, [sp, #60]	; 0x3c
   40990:	ldr	r2, [lr], #4
   40994:	str	r2, [sp, #68]	; 0x44
   40998:	b	409c0 <GetDataSlab+0x10a40>
   4099c:	ldr	r3, [sp, #60]	; 0x3c
   409a0:	ldr	r2, [r3, r2]
   409a4:	add	r8, r8, r2, lsl #2
   409a8:	add	r7, r2, r7
   409ac:	ldr	r2, [sp, #76]	; 0x4c
   409b0:	add	ip, r1, ip
   409b4:	cmp	ip, r2
   409b8:	mov	r2, #0
   409bc:	bge	56c1c <GetDataSlab+0x26c9c>
   409c0:	ldr	r4, [sp, #68]	; 0x44
   409c4:	ldr	r5, [fp, #20]
   409c8:	ldr	r2, [sp, #72]	; 0x48
   409cc:	cmp	r1, #1
   409d0:	add	r3, r4, r7
   409d4:	add	r7, r8, r4, lsl #2
   409d8:	blt	40a10 <GetDataSlab+0x10a90>
   409dc:	ldr	r1, [sp, #88]	; 0x58
   409e0:	mov	r2, #0
   409e4:	add	r4, r1, ip
   409e8:	ldr	r1, [r7, r2, lsl #2]
   409ec:	strb	r1, [r4, r2]
   409f0:	add	r2, r2, #1
   409f4:	ldr	r1, [r5]
   409f8:	cmp	r2, r1
   409fc:	blt	409e8 <GetDataSlab+0x10a68>
   40a00:	ldr	r2, [fp, #12]
   40a04:	ldr	r4, [r2]
   40a08:	ldr	r2, [fp, #8]
   40a0c:	ldr	r2, [r2]
   40a10:	str	r2, [sp, #72]	; 0x48
   40a14:	sub	r2, r2, r4
   40a18:	str	r4, [sp, #68]	; 0x44
   40a1c:	add	r8, r7, r2, lsl #2
   40a20:	add	r7, r3, r2
   40a24:	ldr	r2, [fp, #24]
   40a28:	cmp	r2, #2
   40a2c:	blt	409ac <GetDataSlab+0x10a2c>
   40a30:	ldr	r9, [sp, #64]	; 0x40
   40a34:	mov	r2, #0
   40a38:	b	40a64 <GetDataSlab+0x10ae4>
   40a3c:	sub	r4, fp, #176	; 0xb0
   40a40:	ldr	sl, [lr, r2]
   40a44:	sub	r3, r3, r5
   40a48:	ldr	r6, [r4, r2]
   40a4c:	mla	r3, sl, r6, r3
   40a50:	add	r7, r3, r7
   40a54:	add	r8, r8, r3, lsl #2
   40a58:	subs	r9, r9, #1
   40a5c:	add	r2, r2, #4
   40a60:	beq	409ac <GetDataSlab+0x10a2c>
   40a64:	ldr	r3, [r0, r2]
   40a68:	ldr	r4, [sp, #84]	; 0x54
   40a6c:	add	r3, r3, #1
   40a70:	str	r3, [r0, r2]
   40a74:	ldr	r5, [r4, r2]
   40a78:	sdiv	r6, r3, r5
   40a7c:	mls	r3, r6, r5, r3
   40a80:	cmp	r3, #0
   40a84:	bne	4099c <GetDataSlab+0x10a1c>
   40a88:	mov	r3, #0
   40a8c:	str	r3, [r0, r2]
   40a90:	ldr	r3, [sp, #80]	; 0x50
   40a94:	ldr	r3, [r3, r2]
   40a98:	sdiv	r5, r7, r3
   40a9c:	mls	r5, r5, r3, r7
   40aa0:	cmp	r5, #0
   40aa4:	bne	40a3c <GetDataSlab+0x10abc>
   40aa8:	ldr	r3, [lr, r2]
   40aac:	cmp	r3, #0
   40ab0:	beq	40a58 <GetDataSlab+0x10ad8>
   40ab4:	sub	r4, fp, #176	; 0xb0
   40ab8:	ldr	r5, [r4, r2]
   40abc:	mla	r7, r5, r3, r7
   40ac0:	mul	r3, r5, r3
   40ac4:	b	40a54 <GetDataSlab+0x10ad4>
   40ac8:	ldr	r0, [sp, #80]	; 0x50
   40acc:	cmp	r5, #1
   40ad0:	add	r8, r0, r7, lsl #2
   40ad4:	bne	4d7e0 <GetDataSlab+0x1d860>
   40ad8:	ldr	r0, [sp, #76]	; 0x4c
   40adc:	ldr	r3, [fp, #20]
   40ae0:	sub	r2, fp, #176	; 0xb0
   40ae4:	cmp	r0, #1
   40ae8:	blt	56468 <GetDataSlab+0x264e8>
   40aec:	orr	r2, r2, #4
   40af0:	ldr	lr, [fp, #12]
   40af4:	sub	r0, fp, #136	; 0x88
   40af8:	add	r3, r3, #4
   40afc:	mov	ip, #0
   40b00:	str	r2, [sp, #80]	; 0x50
   40b04:	ldr	r2, [fp, #24]
   40b08:	orr	r0, r0, #4
   40b0c:	str	r3, [sp, #84]	; 0x54
   40b10:	sub	r2, r2, #1
   40b14:	str	r2, [sp, #64]	; 0x40
   40b18:	sub	r2, fp, #96	; 0x60
   40b1c:	orr	r2, r2, #4
   40b20:	str	r2, [sp, #60]	; 0x3c
   40b24:	ldr	r2, [lr], #4
   40b28:	str	r2, [sp, #68]	; 0x44
   40b2c:	b	40b54 <GetDataSlab+0x10bd4>
   40b30:	ldr	r3, [sp, #60]	; 0x3c
   40b34:	ldr	r2, [r3, r2]
   40b38:	add	r8, r8, r2, lsl #2
   40b3c:	add	r7, r2, r7
   40b40:	ldr	r2, [sp, #76]	; 0x4c
   40b44:	add	ip, r1, ip
   40b48:	cmp	ip, r2
   40b4c:	mov	r2, #0
   40b50:	bge	56c1c <GetDataSlab+0x26c9c>
   40b54:	ldr	r4, [sp, #68]	; 0x44
   40b58:	ldr	r5, [fp, #20]
   40b5c:	ldr	r2, [sp, #72]	; 0x48
   40b60:	cmp	r1, #1
   40b64:	add	r3, r4, r7
   40b68:	add	r7, r8, r4, lsl #2
   40b6c:	blt	40ba4 <GetDataSlab+0x10c24>
   40b70:	ldr	r1, [sp, #88]	; 0x58
   40b74:	mov	r2, #0
   40b78:	add	r4, r1, ip
   40b7c:	ldr	r1, [r7, r2, lsl #2]
   40b80:	strb	r1, [r4, r2]
   40b84:	add	r2, r2, #1
   40b88:	ldr	r1, [r5]
   40b8c:	cmp	r2, r1
   40b90:	blt	40b7c <GetDataSlab+0x10bfc>
   40b94:	ldr	r2, [fp, #12]
   40b98:	ldr	r4, [r2]
   40b9c:	ldr	r2, [fp, #8]
   40ba0:	ldr	r2, [r2]
   40ba4:	str	r2, [sp, #72]	; 0x48
   40ba8:	sub	r2, r2, r4
   40bac:	str	r4, [sp, #68]	; 0x44
   40bb0:	add	r8, r7, r2, lsl #2
   40bb4:	add	r7, r3, r2
   40bb8:	ldr	r2, [fp, #24]
   40bbc:	cmp	r2, #2
   40bc0:	blt	40b40 <GetDataSlab+0x10bc0>
   40bc4:	ldr	r9, [sp, #64]	; 0x40
   40bc8:	mov	r2, #0
   40bcc:	b	40bf8 <GetDataSlab+0x10c78>
   40bd0:	sub	r4, fp, #176	; 0xb0
   40bd4:	ldr	sl, [lr, r2]
   40bd8:	sub	r3, r3, r5
   40bdc:	ldr	r6, [r4, r2]
   40be0:	mla	r3, sl, r6, r3
   40be4:	add	r7, r3, r7
   40be8:	add	r8, r8, r3, lsl #2
   40bec:	subs	r9, r9, #1
   40bf0:	add	r2, r2, #4
   40bf4:	beq	40b40 <GetDataSlab+0x10bc0>
   40bf8:	ldr	r3, [r0, r2]
   40bfc:	ldr	r4, [sp, #84]	; 0x54
   40c00:	add	r3, r3, #1
   40c04:	str	r3, [r0, r2]
   40c08:	ldr	r5, [r4, r2]
   40c0c:	sdiv	r6, r3, r5
   40c10:	mls	r3, r6, r5, r3
   40c14:	cmp	r3, #0
   40c18:	bne	40b30 <GetDataSlab+0x10bb0>
   40c1c:	mov	r3, #0
   40c20:	str	r3, [r0, r2]
   40c24:	ldr	r3, [sp, #80]	; 0x50
   40c28:	ldr	r3, [r3, r2]
   40c2c:	sdiv	r5, r7, r3
   40c30:	mls	r5, r5, r3, r7
   40c34:	cmp	r5, #0
   40c38:	bne	40bd0 <GetDataSlab+0x10c50>
   40c3c:	ldr	r3, [lr, r2]
   40c40:	cmp	r3, #0
   40c44:	beq	40bec <GetDataSlab+0x10c6c>
   40c48:	sub	r4, fp, #176	; 0xb0
   40c4c:	ldr	r5, [r4, r2]
   40c50:	mla	r7, r5, r3, r7
   40c54:	mul	r3, r5, r3
   40c58:	b	40be8 <GetDataSlab+0x10c68>
   40c5c:	ldr	r0, [sp, #80]	; 0x50
   40c60:	cmp	r5, #1
   40c64:	add	sl, r0, r7, lsl #2
   40c68:	bne	4d98c <GetDataSlab+0x1da0c>
   40c6c:	ldr	r0, [sp, #76]	; 0x4c
   40c70:	ldr	r3, [fp, #20]
   40c74:	sub	r2, fp, #176	; 0xb0
   40c78:	cmp	r0, #1
   40c7c:	blt	56468 <GetDataSlab+0x264e8>
   40c80:	orr	r2, r2, #4
   40c84:	ldr	lr, [fp, #12]
   40c88:	sub	r0, fp, #136	; 0x88
   40c8c:	add	r4, r3, #4
   40c90:	str	r2, [sp, #84]	; 0x54
   40c94:	ldr	r2, [fp, #24]
   40c98:	orr	r0, r0, #4
   40c9c:	sub	r2, r2, #1
   40ca0:	str	r2, [sp, #68]	; 0x44
   40ca4:	orr	r2, r8, #4
   40ca8:	mov	r8, #0
   40cac:	str	r2, [sp, #64]	; 0x40
   40cb0:	ldr	r2, [lr], #4
   40cb4:	str	r2, [sp, #80]	; 0x50
   40cb8:	b	40ce0 <GetDataSlab+0x10d60>
   40cbc:	ldr	r3, [sp, #64]	; 0x40
   40cc0:	ldr	r2, [r3, r2]
   40cc4:	add	sl, sl, r2, lsl #2
   40cc8:	add	r7, r2, r7
   40ccc:	ldr	r2, [sp, #76]	; 0x4c
   40cd0:	add	r8, r1, r8
   40cd4:	cmp	r8, r2
   40cd8:	mov	r2, #0
   40cdc:	bge	56c1c <GetDataSlab+0x26c9c>
   40ce0:	ldr	r5, [sp, #80]	; 0x50
   40ce4:	ldr	r2, [sp, #72]	; 0x48
   40ce8:	cmp	r1, #1
   40cec:	sub	ip, fp, #176	; 0xb0
   40cf0:	add	r9, sl, r5, lsl #2
   40cf4:	add	r3, r5, r7
   40cf8:	blt	40d4c <GetDataSlab+0x10dcc>
   40cfc:	ldr	r1, [sp, #88]	; 0x58
   40d00:	ldr	r5, [fp, #20]
   40d04:	mov	r6, r4
   40d08:	mov	r2, #0
   40d0c:	mov	r7, r9
   40d10:	add	r4, r1, r8
   40d14:	vldr	s0, [r7]
   40d18:	add	r7, r7, #4
   40d1c:	vcvt.u32.f32	s0, s0
   40d20:	vmov	r1, s0
   40d24:	strb	r1, [r4, r2]
   40d28:	add	r2, r2, #1
   40d2c:	ldr	r1, [r5]
   40d30:	cmp	r2, r1
   40d34:	blt	40d14 <GetDataSlab+0x10d94>
   40d38:	ldr	r2, [fp, #12]
   40d3c:	mov	r4, r6
   40d40:	ldr	r5, [r2]
   40d44:	ldr	r2, [fp, #8]
   40d48:	ldr	r2, [r2]
   40d4c:	str	r2, [sp, #72]	; 0x48
   40d50:	sub	r2, r2, r5
   40d54:	str	r5, [sp, #80]	; 0x50
   40d58:	add	sl, r9, r2, lsl #2
   40d5c:	add	r7, r3, r2
   40d60:	ldr	r2, [fp, #24]
   40d64:	cmp	r2, #2
   40d68:	blt	40ccc <GetDataSlab+0x10d4c>
   40d6c:	ldr	r9, [sp, #68]	; 0x44
   40d70:	mov	r2, #0
   40d74:	b	40da0 <GetDataSlab+0x10e20>
   40d78:	ldr	r6, [ip, r2]
   40d7c:	ldr	ip, [lr, r2]
   40d80:	sub	r3, r3, r5
   40d84:	mla	r3, ip, r6, r3
   40d88:	sub	ip, fp, #176	; 0xb0
   40d8c:	add	r7, r3, r7
   40d90:	add	sl, sl, r3, lsl #2
   40d94:	subs	r9, r9, #1
   40d98:	add	r2, r2, #4
   40d9c:	beq	40ccc <GetDataSlab+0x10d4c>
   40da0:	ldr	r3, [r0, r2]
   40da4:	add	r3, r3, #1
   40da8:	str	r3, [r0, r2]
   40dac:	ldr	r5, [r4, r2]
   40db0:	sdiv	r6, r3, r5
   40db4:	mls	r3, r6, r5, r3
   40db8:	cmp	r3, #0
   40dbc:	bne	40cbc <GetDataSlab+0x10d3c>
   40dc0:	mov	r3, #0
   40dc4:	str	r3, [r0, r2]
   40dc8:	ldr	r3, [sp, #84]	; 0x54
   40dcc:	ldr	r3, [r3, r2]
   40dd0:	sdiv	r5, r7, r3
   40dd4:	mls	r5, r5, r3, r7
   40dd8:	cmp	r5, #0
   40ddc:	bne	40d78 <GetDataSlab+0x10df8>
   40de0:	ldr	r3, [lr, r2]
   40de4:	cmp	r3, #0
   40de8:	beq	40d94 <GetDataSlab+0x10e14>
   40dec:	ldr	r6, [ip, r2]
   40df0:	mla	r7, r6, r3, r7
   40df4:	mul	r3, r6, r3
   40df8:	b	40d90 <GetDataSlab+0x10e10>
   40dfc:	ldr	r0, [sp, #80]	; 0x50
   40e00:	cmp	r5, #1
   40e04:	add	sl, r0, r7, lsl #3
   40e08:	bne	4db40 <GetDataSlab+0x1dbc0>
   40e0c:	ldr	r0, [sp, #76]	; 0x4c
   40e10:	ldr	r3, [fp, #20]
   40e14:	sub	r2, fp, #176	; 0xb0
   40e18:	cmp	r0, #1
   40e1c:	blt	56468 <GetDataSlab+0x264e8>
   40e20:	orr	r2, r2, #4
   40e24:	ldr	lr, [fp, #12]
   40e28:	sub	r0, fp, #136	; 0x88
   40e2c:	add	r4, r3, #4
   40e30:	str	r2, [sp, #84]	; 0x54
   40e34:	ldr	r2, [fp, #24]
   40e38:	orr	r0, r0, #4
   40e3c:	sub	r2, r2, #1
   40e40:	str	r2, [sp, #68]	; 0x44
   40e44:	orr	r2, r8, #4
   40e48:	mov	r8, #0
   40e4c:	str	r2, [sp, #64]	; 0x40
   40e50:	ldr	r2, [lr], #4
   40e54:	str	r2, [sp, #80]	; 0x50
   40e58:	b	40e80 <GetDataSlab+0x10f00>
   40e5c:	ldr	r3, [sp, #64]	; 0x40
   40e60:	ldr	r2, [r3, r2]
   40e64:	add	sl, sl, r2, lsl #3
   40e68:	add	r7, r2, r7
   40e6c:	ldr	r2, [sp, #76]	; 0x4c
   40e70:	add	r8, r1, r8
   40e74:	cmp	r8, r2
   40e78:	mov	r2, #0
   40e7c:	bge	56c1c <GetDataSlab+0x26c9c>
   40e80:	ldr	r5, [sp, #80]	; 0x50
   40e84:	ldr	r2, [sp, #72]	; 0x48
   40e88:	cmp	r1, #1
   40e8c:	sub	ip, fp, #176	; 0xb0
   40e90:	add	r9, sl, r5, lsl #3
   40e94:	add	r3, r5, r7
   40e98:	blt	40eec <GetDataSlab+0x10f6c>
   40e9c:	ldr	r1, [sp, #88]	; 0x58
   40ea0:	ldr	r5, [fp, #20]
   40ea4:	mov	r6, r4
   40ea8:	mov	r2, #0
   40eac:	mov	r7, r9
   40eb0:	add	r4, r1, r8
   40eb4:	vldr	d16, [r7]
   40eb8:	add	r7, r7, #8
   40ebc:	vcvt.u32.f64	s0, d16
   40ec0:	vmov	r1, s0
   40ec4:	strb	r1, [r4, r2]
   40ec8:	add	r2, r2, #1
   40ecc:	ldr	r1, [r5]
   40ed0:	cmp	r2, r1
   40ed4:	blt	40eb4 <GetDataSlab+0x10f34>
   40ed8:	ldr	r2, [fp, #12]
   40edc:	mov	r4, r6
   40ee0:	ldr	r5, [r2]
   40ee4:	ldr	r2, [fp, #8]
   40ee8:	ldr	r2, [r2]
   40eec:	str	r2, [sp, #72]	; 0x48
   40ef0:	sub	r2, r2, r5
   40ef4:	str	r5, [sp, #80]	; 0x50
   40ef8:	add	sl, r9, r2, lsl #3
   40efc:	add	r7, r3, r2
   40f00:	ldr	r2, [fp, #24]
   40f04:	cmp	r2, #2
   40f08:	blt	40e6c <GetDataSlab+0x10eec>
   40f0c:	ldr	r9, [sp, #68]	; 0x44
   40f10:	mov	r2, #0
   40f14:	b	40f40 <GetDataSlab+0x10fc0>
   40f18:	ldr	r6, [ip, r2]
   40f1c:	ldr	ip, [lr, r2]
   40f20:	sub	r3, r3, r5
   40f24:	mla	r3, ip, r6, r3
   40f28:	sub	ip, fp, #176	; 0xb0
   40f2c:	add	r7, r3, r7
   40f30:	add	sl, sl, r3, lsl #3
   40f34:	subs	r9, r9, #1
   40f38:	add	r2, r2, #4
   40f3c:	beq	40e6c <GetDataSlab+0x10eec>
   40f40:	ldr	r3, [r0, r2]
   40f44:	add	r3, r3, #1
   40f48:	str	r3, [r0, r2]
   40f4c:	ldr	r5, [r4, r2]
   40f50:	sdiv	r6, r3, r5
   40f54:	mls	r3, r6, r5, r3
   40f58:	cmp	r3, #0
   40f5c:	bne	40e5c <GetDataSlab+0x10edc>
   40f60:	mov	r3, #0
   40f64:	str	r3, [r0, r2]
   40f68:	ldr	r3, [sp, #84]	; 0x54
   40f6c:	ldr	r3, [r3, r2]
   40f70:	sdiv	r5, r7, r3
   40f74:	mls	r5, r5, r3, r7
   40f78:	cmp	r5, #0
   40f7c:	bne	40f18 <GetDataSlab+0x10f98>
   40f80:	ldr	r3, [lr, r2]
   40f84:	cmp	r3, #0
   40f88:	beq	40f34 <GetDataSlab+0x10fb4>
   40f8c:	ldr	r6, [ip, r2]
   40f90:	mla	r7, r6, r3, r7
   40f94:	mul	r3, r6, r3
   40f98:	b	40f30 <GetDataSlab+0x10fb0>
   40f9c:	ldr	r0, [sp, #80]	; 0x50
   40fa0:	cmp	r7, #1
   40fa4:	add	r9, r0, r3, lsl #3
   40fa8:	bne	4dcf4 <GetDataSlab+0x1dd74>
   40fac:	ldr	r0, [sp, #68]	; 0x44
   40fb0:	sub	ip, fp, #176	; 0xb0
   40fb4:	cmp	r0, #1
   40fb8:	blt	4de94 <GetDataSlab+0x1df14>
   40fbc:	ldr	r2, [fp, #20]
   40fc0:	ldr	sl, [fp, #12]
   40fc4:	sub	r0, fp, #136	; 0x88
   40fc8:	mov	lr, #0
   40fcc:	orr	r0, r0, #4
   40fd0:	add	r5, r2, #4
   40fd4:	orr	r2, ip, #4
   40fd8:	ldr	r7, [sl], #4
   40fdc:	str	r2, [sp, #84]	; 0x54
   40fe0:	ldr	r2, [fp, #24]
   40fe4:	sub	r2, r2, #1
   40fe8:	str	r2, [sp, #60]	; 0x3c
   40fec:	orr	r2, r8, #4
   40ff0:	str	r2, [sp, #56]	; 0x38
   40ff4:	b	4101c <GetDataSlab+0x1109c>
   40ff8:	ldr	r2, [sp, #56]	; 0x38
   40ffc:	ldr	r2, [r2, r7]
   41000:	add	r9, r9, r2, lsl #3
   41004:	add	r3, r2, r3
   41008:	ldr	r2, [sp, #68]	; 0x44
   4100c:	ldr	r7, [sp, #72]	; 0x48
   41010:	add	lr, r1, lr
   41014:	cmp	lr, r2
   41018:	bge	4de94 <GetDataSlab+0x1df14>
   4101c:	ldr	r2, [sp, #64]	; 0x40
   41020:	add	r4, r9, r7, lsl #3
   41024:	add	r8, r7, r3
   41028:	cmp	r1, #1
   4102c:	blt	41074 <GetDataSlab+0x110f4>
   41030:	ldr	r1, [sp, #88]	; 0x58
   41034:	ldr	r2, [fp, #20]
   41038:	mov	r6, r5
   4103c:	mov	r3, #0
   41040:	mov	r5, r4
   41044:	add	r7, r1, lr
   41048:	ldrb	r1, [r5], #8
   4104c:	strb	r1, [r7, r3]
   41050:	add	r3, r3, #1
   41054:	ldr	r1, [r2]
   41058:	cmp	r3, r1
   4105c:	blt	41048 <GetDataSlab+0x110c8>
   41060:	ldr	r2, [fp, #12]
   41064:	mov	r5, r6
   41068:	ldr	r7, [r2]
   4106c:	ldr	r2, [fp, #8]
   41070:	ldr	r2, [r2]
   41074:	str	r2, [sp, #64]	; 0x40
   41078:	sub	r2, r2, r7
   4107c:	str	r7, [sp, #72]	; 0x48
   41080:	add	r9, r4, r2, lsl #3
   41084:	add	r3, r8, r2
   41088:	ldr	r2, [fp, #24]
   4108c:	cmp	r2, #2
   41090:	blt	41008 <GetDataSlab+0x11088>
   41094:	ldr	r8, [sp, #60]	; 0x3c
   41098:	mov	r7, #0
   4109c:	b	410c8 <GetDataSlab+0x11148>
   410a0:	ldr	r4, [ip, r7]
   410a4:	ldr	ip, [sl, r7]
   410a8:	sub	r2, r2, r6
   410ac:	mla	r2, ip, r4, r2
   410b0:	sub	ip, fp, #176	; 0xb0
   410b4:	add	r3, r2, r3
   410b8:	add	r9, r9, r2, lsl #3
   410bc:	subs	r8, r8, #1
   410c0:	add	r7, r7, #4
   410c4:	beq	41008 <GetDataSlab+0x11088>
   410c8:	ldr	r2, [r0, r7]
   410cc:	add	r2, r2, #1
   410d0:	str	r2, [r0, r7]
   410d4:	ldr	r6, [r5, r7]
   410d8:	sdiv	r4, r2, r6
   410dc:	mls	r2, r4, r6, r2
   410e0:	cmp	r2, #0
   410e4:	bne	40ff8 <GetDataSlab+0x11078>
   410e8:	mov	r2, #0
   410ec:	str	r2, [r0, r7]
   410f0:	ldr	r2, [sp, #84]	; 0x54
   410f4:	ldr	r2, [r2, r7]
   410f8:	sdiv	r4, r3, r2
   410fc:	mls	r6, r4, r2, r3
   41100:	cmp	r6, #0
   41104:	bne	410a0 <GetDataSlab+0x11120>
   41108:	ldr	r2, [sl, r7]
   4110c:	cmp	r2, #0
   41110:	beq	410bc <GetDataSlab+0x1113c>
   41114:	ldr	r6, [ip, r7]
   41118:	mla	r3, r6, r2, r3
   4111c:	mul	r2, r6, r2
   41120:	b	410b8 <GetDataSlab+0x11138>
   41124:	ldr	r0, [sp, #80]	; 0x50
   41128:	cmp	sl, #1
   4112c:	add	ip, r0, r3
   41130:	bne	4e1f0 <GetDataSlab+0x1e270>
   41134:	ldr	r0, [sp, #76]	; 0x4c
   41138:	ldr	r2, [fp, #12]
   4113c:	sub	r7, fp, #96	; 0x60
   41140:	cmp	r0, #1
   41144:	blt	56c18 <GetDataSlab+0x26c98>
   41148:	ldr	lr, [sp, #56]	; 0x38
   4114c:	mov	r1, #1
   41150:	ldr	r8, [sp, #88]	; 0x58
   41154:	sub	r6, fp, #240	; 0xf0
   41158:	sub	r0, lr, #8
   4115c:	add	r1, r1, r0, lsr #3
   41160:	lsr	r0, r0, #3
   41164:	str	r0, [sp, #20]
   41168:	mov	r0, #0
   4116c:	and	r4, r1, #1
   41170:	str	r0, [sp, #72]	; 0x48
   41174:	sub	r1, r1, r4
   41178:	str	r4, [sp, #28]
   4117c:	str	r1, [sp, #12]
   41180:	sub	r1, fp, #136	; 0x88
   41184:	orr	r4, r1, #4
   41188:	ldr	r1, [fp, #20]
   4118c:	add	sl, r1, #4
   41190:	sub	r1, fp, #176	; 0xb0
   41194:	orr	r1, r1, #4
   41198:	str	sl, [sp, #16]
   4119c:	str	r1, [sp, #84]	; 0x54
   411a0:	add	r1, r2, #4
   411a4:	str	r1, [sp, #80]	; 0x50
   411a8:	ldr	r1, [fp, #24]
   411ac:	sub	r1, r1, #1
   411b0:	str	r1, [sp, #40]	; 0x28
   411b4:	orr	r1, r7, #4
   411b8:	str	r1, [sp, #32]
   411bc:	lsl	r1, lr, #1
   411c0:	str	r1, [sp, #64]	; 0x40
   411c4:	and	r1, lr, #1
   411c8:	str	r1, [sp, #44]	; 0x2c
   411cc:	bic	r1, lr, #7
   411d0:	str	r1, [sp, #24]
   411d4:	mov	r1, #0
   411d8:	b	4121c <GetDataSlab+0x1129c>
   411dc:	ldr	r0, [sp, #32]
   411e0:	mov	r6, r9
   411e4:	ldr	r0, [r0, r1]
   411e8:	add	ip, ip, r0
   411ec:	add	r3, r0, r3
   411f0:	ldr	r0, [sp, #64]	; 0x40
   411f4:	ldr	r2, [sp, #72]	; 0x48
   411f8:	ldr	r1, [sp, #68]	; 0x44
   411fc:	add	r8, r8, r0
   41200:	ldr	r0, [sp, #76]	; 0x4c
   41204:	add	r2, r2, lr
   41208:	add	r1, r1, #1
   4120c:	str	r2, [sp, #72]	; 0x48
   41210:	cmp	r2, r0
   41214:	mov	r2, #0
   41218:	bge	56c1c <GetDataSlab+0x26c9c>
   4121c:	cmp	lr, #1
   41220:	str	r1, [sp, #68]	; 0x44
   41224:	blt	413d0 <GetDataSlab+0x11450>
   41228:	ldr	r0, [fp, #12]
   4122c:	str	r8, [sp, #60]	; 0x3c
   41230:	mov	r8, lr
   41234:	ldr	r5, [sp, #72]	; 0x48
   41238:	mov	r9, #0
   4123c:	cmp	r8, #8
   41240:	ldr	lr, [r0]
   41244:	ldr	r0, [sp, #88]	; 0x58
   41248:	add	r5, r0, r5, lsl #1
   4124c:	add	r2, ip, lr
   41250:	str	r5, [sp, #48]	; 0x30
   41254:	bcs	41268 <GetDataSlab+0x112e8>
   41258:	mov	r5, lr
   4125c:	mov	lr, r8
   41260:	ldr	r8, [sp, #60]	; 0x3c
   41264:	b	4136c <GetDataSlab+0x113ec>
   41268:	ldr	r5, [sp, #64]	; 0x40
   4126c:	add	r7, ip, r8
   41270:	add	r7, r7, lr
   41274:	mla	r0, r5, r1, r0
   41278:	mov	r5, lr
   4127c:	mov	lr, r8
   41280:	ldr	r8, [sp, #60]	; 0x3c
   41284:	cmp	r0, r7
   41288:	bcs	412a4 <GetDataSlab+0x11324>
   4128c:	ldr	r0, [sp, #64]	; 0x40
   41290:	ldr	r7, [sp, #88]	; 0x58
   41294:	mla	r0, r0, r1, r0
   41298:	add	r0, r7, r0
   4129c:	cmp	r2, r0
   412a0:	bcc	4136c <GetDataSlab+0x113ec>
   412a4:	ldr	r0, [sp, #20]
   412a8:	mov	r1, #0
   412ac:	str	r5, [sp, #36]	; 0x24
   412b0:	cmp	r0, #0
   412b4:	beq	41314 <GetDataSlab+0x11394>
   412b8:	ldr	sl, [sp, #12]
   412bc:	mov	lr, r8
   412c0:	mov	r5, #32
   412c4:	sub	r8, fp, #232	; 0xe8
   412c8:	mov	r0, r2
   412cc:	subs	sl, sl, #2
   412d0:	ldr	r7, [r0, r1]!
   412d4:	add	r1, r1, #16
   412d8:	str	r7, [fp, #-240]	; 0xffffff10
   412dc:	ldr	r7, [r0, #4]
   412e0:	str	r7, [fp, #-236]	; 0xffffff14
   412e4:	add	r7, lr, #16
   412e8:	vld1.8	{d16}, [r6 :64]
   412ec:	vmovl.u8	q8, d16
   412f0:	vst1.16	{d16-d17}, [lr], r5
   412f4:	ldr	r9, [r0, #8]
   412f8:	ldr	r0, [r0, #12]
   412fc:	str	r0, [fp, #-228]	; 0xffffff1c
   41300:	str	r9, [fp, #-232]	; 0xffffff18
   41304:	vld1.8	{d16}, [r8 :64]
   41308:	vmovl.u8	q8, d16
   4130c:	vst1.16	{d16-d17}, [r7]
   41310:	bne	412c8 <GetDataSlab+0x11348>
   41314:	ldr	r0, [sp, #28]
   41318:	ldr	sl, [sp, #16]
   4131c:	ldr	r5, [sp, #36]	; 0x24
   41320:	cmp	r0, #0
   41324:	beq	41354 <GetDataSlab+0x113d4>
   41328:	mov	r0, r2
   4132c:	ldr	r7, [r0, r1]!
   41330:	str	r7, [fp, #-248]	; 0xffffff08
   41334:	ldr	r0, [r0, #4]
   41338:	str	r0, [fp, #-244]	; 0xffffff0c
   4133c:	sub	r0, fp, #248	; 0xf8
   41340:	vld1.8	{d16}, [r0 :64]
   41344:	ldr	r0, [sp, #48]	; 0x30
   41348:	add	r0, r0, r1, lsl #1
   4134c:	vmovl.u8	q8, d16
   41350:	vst1.16	{d16-d17}, [r0]
   41354:	ldr	r1, [sp, #24]
   41358:	ldr	lr, [sp, #56]	; 0x38
   4135c:	ldr	r8, [sp, #60]	; 0x3c
   41360:	cmp	lr, r1
   41364:	mov	r9, r1
   41368:	beq	413d0 <GetDataSlab+0x11450>
   4136c:	ldr	r0, [sp, #44]	; 0x2c
   41370:	mov	r7, r9
   41374:	cmp	r0, #0
   41378:	beq	41390 <GetDataSlab+0x11410>
   4137c:	ldr	r1, [sp, #48]	; 0x30
   41380:	ldrb	r0, [r2, r9]
   41384:	orr	r7, r9, #1
   41388:	add	r2, r1, r9, lsl #1
   4138c:	strh	r0, [r2]
   41390:	orr	r0, r9, #1
   41394:	cmp	lr, r0
   41398:	beq	413d0 <GetDataSlab+0x11450>
   4139c:	add	r0, r7, r5
   413a0:	add	r1, r8, r7, lsl #1
   413a4:	sub	r2, lr, r7
   413a8:	add	r0, ip, r0
   413ac:	add	r7, r0, #1
   413b0:	ldrb	r0, [r7, #-1]
   413b4:	subs	r2, r2, #2
   413b8:	strh	r0, [r1]
   413bc:	ldrb	r0, [r7]
   413c0:	add	r7, r7, #2
   413c4:	strh	r0, [r1, #2]
   413c8:	add	r1, r1, #4
   413cc:	bne	413b0 <GetDataSlab+0x11430>
   413d0:	ldr	r0, [sp, #52]	; 0x34
   413d4:	add	ip, ip, r0
   413d8:	add	r3, r3, r0
   413dc:	ldr	r0, [fp, #24]
   413e0:	cmp	r0, #2
   413e4:	blt	411f0 <GetDataSlab+0x11270>
   413e8:	ldr	r2, [sp, #40]	; 0x28
   413ec:	mov	r1, #0
   413f0:	b	41424 <GetDataSlab+0x114a4>
   413f4:	ldr	r5, [sp, #80]	; 0x50
   413f8:	sub	r6, fp, #176	; 0xb0
   413fc:	sub	r0, r7, r0
   41400:	ldr	r6, [r6, r1]
   41404:	ldr	r5, [r5, r1]
   41408:	mla	r0, r5, r6, r0
   4140c:	add	r3, r0, r3
   41410:	add	ip, ip, r0
   41414:	mov	r6, r9
   41418:	subs	r2, r2, #1
   4141c:	add	r1, r1, #4
   41420:	beq	411f0 <GetDataSlab+0x11270>
   41424:	ldr	r0, [r4, r1]
   41428:	mov	r9, r6
   4142c:	add	r0, r0, #1
   41430:	str	r0, [r4, r1]
   41434:	ldr	r7, [sl, r1]
   41438:	sdiv	r6, r0, r7
   4143c:	mls	r0, r6, r7, r0
   41440:	cmp	r0, #0
   41444:	bne	411dc <GetDataSlab+0x1125c>
   41448:	mov	r0, #0
   4144c:	str	r0, [r4, r1]
   41450:	ldr	r0, [sp, #84]	; 0x54
   41454:	ldr	r7, [r0, r1]
   41458:	sdiv	r0, r3, r7
   4145c:	mls	r0, r0, r7, r3
   41460:	cmp	r0, #0
   41464:	bne	413f4 <GetDataSlab+0x11474>
   41468:	ldr	r0, [sp, #80]	; 0x50
   4146c:	ldr	r0, [r0, r1]
   41470:	cmp	r0, #0
   41474:	beq	41414 <GetDataSlab+0x11494>
   41478:	sub	r7, fp, #176	; 0xb0
   4147c:	ldr	r7, [r7, r1]
   41480:	mla	r3, r7, r0, r3
   41484:	mla	ip, r7, r0, ip
   41488:	b	41414 <GetDataSlab+0x11494>
   4148c:	ldr	r0, [sp, #80]	; 0x50
   41490:	ldr	r7, [sp, #68]	; 0x44
   41494:	add	lr, r0, r1, lsl #1
   41498:	cmp	r7, #1
   4149c:	bne	4e404 <GetDataSlab+0x1e484>
   414a0:	ldr	r0, [sp, #76]	; 0x4c
   414a4:	ldr	r3, [fp, #12]
   414a8:	ldr	r5, [fp, #20]
   414ac:	ldr	r7, [sp, #64]	; 0x40
   414b0:	sub	r6, fp, #96	; 0x60
   414b4:	cmp	r0, #1
   414b8:	blt	56c18 <GetDataSlab+0x26c98>
   414bc:	sub	r0, r7, #8
   414c0:	mov	r2, #1
   414c4:	ldr	sl, [sp, #88]	; 0x58
   414c8:	mov	r9, #0
   414cc:	mov	r8, r7
   414d0:	add	r2, r2, r0, lsr #3
   414d4:	lsr	r0, r0, #3
   414d8:	str	r0, [sp, #20]
   414dc:	and	r4, r2, #1
   414e0:	sub	r2, r2, r4
   414e4:	str	r4, [sp, #28]
   414e8:	str	r2, [sp, #16]
   414ec:	sub	r2, fp, #136	; 0x88
   414f0:	orr	r4, r2, #4
   414f4:	add	r2, r5, #4
   414f8:	str	r2, [sp, #84]	; 0x54
   414fc:	orr	r2, ip, #4
   41500:	str	r2, [sp, #80]	; 0x50
   41504:	ldr	r2, [fp, #24]
   41508:	sub	r2, r2, #1
   4150c:	str	r2, [sp, #48]	; 0x30
   41510:	orr	r2, r6, #4
   41514:	str	r2, [sp, #32]
   41518:	ldr	r2, [r3], #4
   4151c:	str	r3, [sp, #92]	; 0x5c
   41520:	add	r3, r7, r2
   41524:	add	r0, r2, #1
   41528:	str	r2, [sp, #56]	; 0x38
   4152c:	str	r3, [sp, #44]	; 0x2c
   41530:	and	r3, r7, #1
   41534:	str	r0, [sp, #36]	; 0x24
   41538:	mov	r0, #0
   4153c:	str	r3, [sp, #52]	; 0x34
   41540:	bic	r3, r7, #7
   41544:	str	r0, [sp, #72]	; 0x48
   41548:	str	r3, [sp, #24]
   4154c:	lsl	r3, r7, #1
   41550:	str	r3, [sp, #68]	; 0x44
   41554:	b	41590 <GetDataSlab+0x11610>
   41558:	ldr	r2, [sp, #32]
   4155c:	ldr	r0, [r2, r0]
   41560:	add	lr, lr, r0, lsl #1
   41564:	add	r1, r0, r1
   41568:	ldr	r0, [sp, #68]	; 0x44
   4156c:	add	r9, r9, r8
   41570:	mov	r2, #0
   41574:	add	sl, sl, r0
   41578:	ldr	r0, [sp, #72]	; 0x48
   4157c:	add	r0, r0, #1
   41580:	str	r0, [sp, #72]	; 0x48
   41584:	ldr	r0, [sp, #76]	; 0x4c
   41588:	cmp	r9, r0
   4158c:	bge	56c1c <GetDataSlab+0x26c9c>
   41590:	ldr	r7, [sp, #88]	; 0x58
   41594:	ldr	ip, [sp, #92]	; 0x5c
   41598:	cmp	r8, #1
   4159c:	blt	416cc <GetDataSlab+0x1174c>
   415a0:	ldr	r0, [sp, #56]	; 0x38
   415a4:	add	r5, r7, r9, lsl #1
   415a8:	mov	r3, #0
   415ac:	cmp	r8, #8
   415b0:	add	r6, lr, r0, lsl #1
   415b4:	bcc	41668 <GetDataSlab+0x116e8>
   415b8:	ldr	r0, [sp, #68]	; 0x44
   415bc:	ldr	r2, [sp, #72]	; 0x48
   415c0:	mla	r0, r0, r2, r7
   415c4:	ldr	r2, [sp, #44]	; 0x2c
   415c8:	add	r2, lr, r2, lsl #1
   415cc:	cmp	r0, r2
   415d0:	bcs	415ec <GetDataSlab+0x1166c>
   415d4:	ldr	r0, [sp, #68]	; 0x44
   415d8:	ldr	r2, [sp, #72]	; 0x48
   415dc:	mla	r0, r0, r2, r0
   415e0:	add	r0, r7, r0
   415e4:	cmp	r0, r6
   415e8:	bhi	41668 <GetDataSlab+0x116e8>
   415ec:	ldr	r0, [sp, #20]
   415f0:	mov	r3, #0
   415f4:	str	r5, [sp, #40]	; 0x28
   415f8:	cmp	r0, #0
   415fc:	beq	41634 <GetDataSlab+0x116b4>
   41600:	ldr	r2, [sp, #16]
   41604:	mov	ip, sl
   41608:	mov	r0, r6
   4160c:	mov	r5, #32
   41610:	add	r7, r0, #16
   41614:	vld1.16	{d16-d17}, [r0], r5
   41618:	add	r8, ip, #16
   4161c:	subs	r2, r2, #2
   41620:	add	r3, r3, #16
   41624:	vst1.16	{d16-d17}, [ip], r5
   41628:	vld1.16	{d16-d17}, [r7]
   4162c:	vst1.16	{d16-d17}, [r8]
   41630:	bne	41610 <GetDataSlab+0x11690>
   41634:	ldr	r0, [sp, #28]
   41638:	ldr	r5, [sp, #40]	; 0x28
   4163c:	cmp	r0, #0
   41640:	beq	41654 <GetDataSlab+0x116d4>
   41644:	add	r0, r6, r3, lsl #1
   41648:	vld1.16	{d16-d17}, [r0]
   4164c:	add	r0, r5, r3, lsl #1
   41650:	vst1.16	{d16-d17}, [r0]
   41654:	ldr	r8, [sp, #64]	; 0x40
   41658:	ldr	r3, [sp, #24]
   4165c:	ldr	ip, [sp, #92]	; 0x5c
   41660:	cmp	r8, r3
   41664:	beq	416cc <GetDataSlab+0x1174c>
   41668:	ldr	r0, [sp, #52]	; 0x34
   4166c:	mov	r7, r3
   41670:	cmp	r0, #0
   41674:	beq	4168c <GetDataSlab+0x1170c>
   41678:	add	r2, r6, r3, lsl #1
   4167c:	add	r0, r5, r3, lsl #1
   41680:	orr	r7, r3, #1
   41684:	ldrh	r2, [r2]
   41688:	strh	r2, [r0]
   4168c:	orr	r0, r3, #1
   41690:	cmp	r8, r0
   41694:	beq	416cc <GetDataSlab+0x1174c>
   41698:	ldr	r0, [sp, #36]	; 0x24
   4169c:	sub	r2, r8, r7
   416a0:	lsl	r3, r7, #1
   416a4:	add	r0, lr, r0, lsl #1
   416a8:	add	r7, r0, r3
   416ac:	mov	r5, sl
   416b0:	subs	r2, r2, #2
   416b4:	ldrh	r6, [r7, #-2]
   416b8:	strh	r6, [r5, r3]!
   416bc:	ldrh	r7, [r7]
   416c0:	add	r3, r3, #4
   416c4:	strh	r7, [r5, #2]
   416c8:	bne	416a8 <GetDataSlab+0x11728>
   416cc:	ldr	r0, [sp, #60]	; 0x3c
   416d0:	add	lr, lr, r0, lsl #1
   416d4:	add	r1, r1, r0
   416d8:	ldr	r0, [fp, #24]
   416dc:	cmp	r0, #2
   416e0:	blt	41568 <GetDataSlab+0x115e8>
   416e4:	ldr	r2, [sp, #48]	; 0x30
   416e8:	mov	r0, #0
   416ec:	b	41718 <GetDataSlab+0x11798>
   416f0:	sub	r5, fp, #176	; 0xb0
   416f4:	sub	r3, r3, r7
   416f8:	ldr	r6, [r5, r0]
   416fc:	ldr	r5, [ip, r0]
   41700:	mla	r3, r5, r6, r3
   41704:	add	r1, r3, r1
   41708:	add	lr, lr, r3, lsl #1
   4170c:	subs	r2, r2, #1
   41710:	add	r0, r0, #4
   41714:	beq	41568 <GetDataSlab+0x115e8>
   41718:	ldr	r3, [r4, r0]
   4171c:	ldr	r5, [sp, #84]	; 0x54
   41720:	add	r3, r3, #1
   41724:	str	r3, [r4, r0]
   41728:	ldr	r7, [r5, r0]
   4172c:	sdiv	r6, r3, r7
   41730:	mls	r3, r6, r7, r3
   41734:	cmp	r3, #0
   41738:	bne	41558 <GetDataSlab+0x115d8>
   4173c:	mov	r3, #0
   41740:	str	r3, [r4, r0]
   41744:	ldr	r3, [sp, #80]	; 0x50
   41748:	ldr	r3, [r3, r0]
   4174c:	sdiv	r7, r1, r3
   41750:	mls	r7, r7, r3, r1
   41754:	cmp	r7, #0
   41758:	bne	416f0 <GetDataSlab+0x11770>
   4175c:	ldr	r3, [ip, r0]
   41760:	cmp	r3, #0
   41764:	beq	4170c <GetDataSlab+0x1178c>
   41768:	sub	r5, fp, #176	; 0xb0
   4176c:	ldr	r7, [r5, r0]
   41770:	mla	r1, r7, r3, r1
   41774:	mul	r3, r7, r3
   41778:	b	41708 <GetDataSlab+0x11788>
   4177c:	ldr	r0, [sp, #80]	; 0x50
   41780:	ldr	r7, [sp, #68]	; 0x44
   41784:	add	lr, r0, r1, lsl #1
   41788:	cmp	r7, #1
   4178c:	bne	4e618 <GetDataSlab+0x1e698>
   41790:	ldr	r0, [sp, #76]	; 0x4c
   41794:	ldr	r3, [fp, #12]
   41798:	ldr	r5, [fp, #20]
   4179c:	ldr	r7, [sp, #64]	; 0x40
   417a0:	sub	r6, fp, #96	; 0x60
   417a4:	cmp	r0, #1
   417a8:	blt	56c18 <GetDataSlab+0x26c98>
   417ac:	sub	r0, r7, #8
   417b0:	mov	r2, #1
   417b4:	ldr	sl, [sp, #88]	; 0x58
   417b8:	mov	r9, #0
   417bc:	mov	r8, r7
   417c0:	add	r2, r2, r0, lsr #3
   417c4:	lsr	r0, r0, #3
   417c8:	str	r0, [sp, #20]
   417cc:	and	r4, r2, #1
   417d0:	sub	r2, r2, r4
   417d4:	str	r4, [sp, #28]
   417d8:	str	r2, [sp, #16]
   417dc:	sub	r2, fp, #136	; 0x88
   417e0:	orr	r4, r2, #4
   417e4:	add	r2, r5, #4
   417e8:	str	r2, [sp, #84]	; 0x54
   417ec:	orr	r2, ip, #4
   417f0:	str	r2, [sp, #80]	; 0x50
   417f4:	ldr	r2, [fp, #24]
   417f8:	sub	r2, r2, #1
   417fc:	str	r2, [sp, #48]	; 0x30
   41800:	orr	r2, r6, #4
   41804:	str	r2, [sp, #32]
   41808:	ldr	r2, [r3], #4
   4180c:	str	r3, [sp, #92]	; 0x5c
   41810:	add	r3, r7, r2
   41814:	add	r0, r2, #1
   41818:	str	r2, [sp, #56]	; 0x38
   4181c:	str	r3, [sp, #44]	; 0x2c
   41820:	and	r3, r7, #1
   41824:	str	r0, [sp, #36]	; 0x24
   41828:	mov	r0, #0
   4182c:	str	r3, [sp, #52]	; 0x34
   41830:	bic	r3, r7, #7
   41834:	str	r0, [sp, #72]	; 0x48
   41838:	str	r3, [sp, #24]
   4183c:	lsl	r3, r7, #1
   41840:	str	r3, [sp, #68]	; 0x44
   41844:	b	41880 <GetDataSlab+0x11900>
   41848:	ldr	r2, [sp, #32]
   4184c:	ldr	r0, [r2, r0]
   41850:	add	lr, lr, r0, lsl #1
   41854:	add	r1, r0, r1
   41858:	ldr	r0, [sp, #68]	; 0x44
   4185c:	add	r9, r9, r8
   41860:	mov	r2, #0
   41864:	add	sl, sl, r0
   41868:	ldr	r0, [sp, #72]	; 0x48
   4186c:	add	r0, r0, #1
   41870:	str	r0, [sp, #72]	; 0x48
   41874:	ldr	r0, [sp, #76]	; 0x4c
   41878:	cmp	r9, r0
   4187c:	bge	56c1c <GetDataSlab+0x26c9c>
   41880:	ldr	r7, [sp, #88]	; 0x58
   41884:	ldr	ip, [sp, #92]	; 0x5c
   41888:	cmp	r8, #1
   4188c:	blt	419bc <GetDataSlab+0x11a3c>
   41890:	ldr	r0, [sp, #56]	; 0x38
   41894:	add	r5, r7, r9, lsl #1
   41898:	mov	r3, #0
   4189c:	cmp	r8, #8
   418a0:	add	r6, lr, r0, lsl #1
   418a4:	bcc	41958 <GetDataSlab+0x119d8>
   418a8:	ldr	r0, [sp, #68]	; 0x44
   418ac:	ldr	r2, [sp, #72]	; 0x48
   418b0:	mla	r0, r0, r2, r7
   418b4:	ldr	r2, [sp, #44]	; 0x2c
   418b8:	add	r2, lr, r2, lsl #1
   418bc:	cmp	r0, r2
   418c0:	bcs	418dc <GetDataSlab+0x1195c>
   418c4:	ldr	r0, [sp, #68]	; 0x44
   418c8:	ldr	r2, [sp, #72]	; 0x48
   418cc:	mla	r0, r0, r2, r0
   418d0:	add	r0, r7, r0
   418d4:	cmp	r0, r6
   418d8:	bhi	41958 <GetDataSlab+0x119d8>
   418dc:	ldr	r0, [sp, #20]
   418e0:	mov	r3, #0
   418e4:	str	r5, [sp, #40]	; 0x28
   418e8:	cmp	r0, #0
   418ec:	beq	41924 <GetDataSlab+0x119a4>
   418f0:	ldr	r2, [sp, #16]
   418f4:	mov	ip, sl
   418f8:	mov	r0, r6
   418fc:	mov	r5, #32
   41900:	add	r7, r0, #16
   41904:	vld1.16	{d16-d17}, [r0], r5
   41908:	add	r8, ip, #16
   4190c:	subs	r2, r2, #2
   41910:	add	r3, r3, #16
   41914:	vst1.16	{d16-d17}, [ip], r5
   41918:	vld1.16	{d16-d17}, [r7]
   4191c:	vst1.16	{d16-d17}, [r8]
   41920:	bne	41900 <GetDataSlab+0x11980>
   41924:	ldr	r0, [sp, #28]
   41928:	ldr	r5, [sp, #40]	; 0x28
   4192c:	cmp	r0, #0
   41930:	beq	41944 <GetDataSlab+0x119c4>
   41934:	add	r0, r6, r3, lsl #1
   41938:	vld1.16	{d16-d17}, [r0]
   4193c:	add	r0, r5, r3, lsl #1
   41940:	vst1.16	{d16-d17}, [r0]
   41944:	ldr	r8, [sp, #64]	; 0x40
   41948:	ldr	r3, [sp, #24]
   4194c:	ldr	ip, [sp, #92]	; 0x5c
   41950:	cmp	r8, r3
   41954:	beq	419bc <GetDataSlab+0x11a3c>
   41958:	ldr	r0, [sp, #52]	; 0x34
   4195c:	mov	r7, r3
   41960:	cmp	r0, #0
   41964:	beq	4197c <GetDataSlab+0x119fc>
   41968:	add	r2, r6, r3, lsl #1
   4196c:	add	r0, r5, r3, lsl #1
   41970:	orr	r7, r3, #1
   41974:	ldrh	r2, [r2]
   41978:	strh	r2, [r0]
   4197c:	orr	r0, r3, #1
   41980:	cmp	r8, r0
   41984:	beq	419bc <GetDataSlab+0x11a3c>
   41988:	ldr	r0, [sp, #36]	; 0x24
   4198c:	sub	r2, r8, r7
   41990:	lsl	r3, r7, #1
   41994:	add	r0, lr, r0, lsl #1
   41998:	add	r7, r0, r3
   4199c:	mov	r5, sl
   419a0:	subs	r2, r2, #2
   419a4:	ldrh	r6, [r7, #-2]
   419a8:	strh	r6, [r5, r3]!
   419ac:	ldrh	r7, [r7]
   419b0:	add	r3, r3, #4
   419b4:	strh	r7, [r5, #2]
   419b8:	bne	41998 <GetDataSlab+0x11a18>
   419bc:	ldr	r0, [sp, #60]	; 0x3c
   419c0:	add	lr, lr, r0, lsl #1
   419c4:	add	r1, r1, r0
   419c8:	ldr	r0, [fp, #24]
   419cc:	cmp	r0, #2
   419d0:	blt	41858 <GetDataSlab+0x118d8>
   419d4:	ldr	r2, [sp, #48]	; 0x30
   419d8:	mov	r0, #0
   419dc:	b	41a08 <GetDataSlab+0x11a88>
   419e0:	sub	r5, fp, #176	; 0xb0
   419e4:	sub	r3, r3, r7
   419e8:	ldr	r6, [r5, r0]
   419ec:	ldr	r5, [ip, r0]
   419f0:	mla	r3, r5, r6, r3
   419f4:	add	r1, r3, r1
   419f8:	add	lr, lr, r3, lsl #1
   419fc:	subs	r2, r2, #1
   41a00:	add	r0, r0, #4
   41a04:	beq	41858 <GetDataSlab+0x118d8>
   41a08:	ldr	r3, [r4, r0]
   41a0c:	ldr	r5, [sp, #84]	; 0x54
   41a10:	add	r3, r3, #1
   41a14:	str	r3, [r4, r0]
   41a18:	ldr	r7, [r5, r0]
   41a1c:	sdiv	r6, r3, r7
   41a20:	mls	r3, r6, r7, r3
   41a24:	cmp	r3, #0
   41a28:	bne	41848 <GetDataSlab+0x118c8>
   41a2c:	mov	r3, #0
   41a30:	str	r3, [r4, r0]
   41a34:	ldr	r3, [sp, #80]	; 0x50
   41a38:	ldr	r3, [r3, r0]
   41a3c:	sdiv	r7, r1, r3
   41a40:	mls	r7, r7, r3, r1
   41a44:	cmp	r7, #0
   41a48:	bne	419e0 <GetDataSlab+0x11a60>
   41a4c:	ldr	r3, [ip, r0]
   41a50:	cmp	r3, #0
   41a54:	beq	419fc <GetDataSlab+0x11a7c>
   41a58:	sub	r5, fp, #176	; 0xb0
   41a5c:	ldr	r7, [r5, r0]
   41a60:	mla	r1, r7, r3, r1
   41a64:	mul	r3, r7, r3
   41a68:	b	419f8 <GetDataSlab+0x11a78>
   41a6c:	ldr	r0, [sp, #80]	; 0x50
   41a70:	ldr	r5, [sp, #56]	; 0x38
   41a74:	add	r4, r0, r3, lsl #2
   41a78:	cmp	r5, #1
   41a7c:	bne	4e82c <GetDataSlab+0x1e8ac>
   41a80:	ldr	r0, [sp, #76]	; 0x4c
   41a84:	ldr	r2, [fp, #20]
   41a88:	ldr	sl, [sp, #60]	; 0x3c
   41a8c:	cmp	r0, #1
   41a90:	ldr	r0, [sp, #72]	; 0x48
   41a94:	blt	56c18 <GetDataSlab+0x26c98>
   41a98:	sub	r0, r0, #4
   41a9c:	mov	r1, #1
   41aa0:	mov	r6, r4
   41aa4:	add	r1, r1, r0, lsr #2
   41aa8:	lsr	r0, r0, #2
   41aac:	str	r0, [sp, #40]	; 0x28
   41ab0:	mov	r0, #0
   41ab4:	and	r7, r1, #1
   41ab8:	str	r0, [sp, #68]	; 0x44
   41abc:	sub	r1, r1, r7
   41ac0:	str	r7, [sp, #48]	; 0x30
   41ac4:	mov	r7, #16
   41ac8:	str	r1, [sp, #32]
   41acc:	sub	r1, fp, #136	; 0x88
   41ad0:	orr	r9, r1, #4
   41ad4:	add	r1, r2, #4
   41ad8:	str	r1, [sp, #56]	; 0x38
   41adc:	orr	r1, ip, #4
   41ae0:	str	r1, [sp, #84]	; 0x54
   41ae4:	ldr	r1, [fp, #12]
   41ae8:	add	r1, r1, #4
   41aec:	str	r1, [sp, #80]	; 0x50
   41af0:	ldr	r1, [fp, #24]
   41af4:	sub	r1, r1, #1
   41af8:	str	r1, [sp, #52]	; 0x34
   41afc:	sub	r1, fp, #96	; 0x60
   41b00:	orr	r1, r1, #4
   41b04:	str	r1, [sp, #36]	; 0x24
   41b08:	ldr	r1, [sp, #72]	; 0x48
   41b0c:	lsl	r2, r1, #1
   41b10:	str	r2, [sp, #64]	; 0x40
   41b14:	bic	r2, r1, #3
   41b18:	str	r2, [sp, #44]	; 0x2c
   41b1c:	b	41b5c <GetDataSlab+0x11bdc>
   41b20:	ldr	r0, [sp, #36]	; 0x24
   41b24:	ldr	r0, [r0, r2]
   41b28:	add	r4, r4, r0, lsl #2
   41b2c:	add	r3, r0, r3
   41b30:	ldr	r0, [sp, #64]	; 0x40
   41b34:	ldr	r1, [sp, #72]	; 0x48
   41b38:	ldr	r2, [sp, #68]	; 0x44
   41b3c:	mov	r6, r4
   41b40:	add	r8, r8, r0
   41b44:	ldr	r0, [sp, #76]	; 0x4c
   41b48:	add	r2, r2, r1
   41b4c:	str	r2, [sp, #68]	; 0x44
   41b50:	cmp	r2, r0
   41b54:	mov	r2, #0
   41b58:	bge	56c1c <GetDataSlab+0x26c9c>
   41b5c:	cmp	r1, #1
   41b60:	sub	ip, fp, #176	; 0xb0
   41b64:	blt	41c38 <GetDataSlab+0x11cb8>
   41b68:	ldr	r0, [fp, #12]
   41b6c:	mov	r2, #0
   41b70:	ldr	r0, [r0]
   41b74:	add	lr, r6, r0, lsl #2
   41b78:	ldr	r0, [sp, #72]	; 0x48
   41b7c:	cmp	r0, #4
   41b80:	bcc	41c14 <GetDataSlab+0x11c94>
   41b84:	ldr	r0, [sp, #40]	; 0x28
   41b88:	mov	r1, #0
   41b8c:	cmp	r0, #0
   41b90:	beq	41bd0 <GetDataSlab+0x11c50>
   41b94:	ldr	sl, [sp, #32]
   41b98:	mov	ip, r8
   41b9c:	mov	r2, lr
   41ba0:	mov	r4, #32
   41ba4:	add	r0, r2, #16
   41ba8:	vld1.32	{d16-d17}, [r2], r4
   41bac:	add	r5, ip, #8
   41bb0:	subs	sl, sl, #2
   41bb4:	add	r1, r1, #8
   41bb8:	vmovn.i32	d16, q8
   41bbc:	vst1.16	{d16}, [ip], r7
   41bc0:	vld1.32	{d16-d17}, [r0]
   41bc4:	vmovn.i32	d16, q8
   41bc8:	vst1.16	{d16}, [r5]
   41bcc:	bne	41ba4 <GetDataSlab+0x11c24>
   41bd0:	ldr	r0, [sp, #48]	; 0x30
   41bd4:	ldr	sl, [sp, #60]	; 0x3c
   41bd8:	sub	ip, fp, #176	; 0xb0
   41bdc:	cmp	r0, #0
   41be0:	beq	41c04 <GetDataSlab+0x11c84>
   41be4:	ldr	r0, [sp, #88]	; 0x58
   41be8:	ldr	r2, [sp, #68]	; 0x44
   41bec:	add	r0, r0, r2, lsl #1
   41bf0:	add	r2, lr, r1, lsl #2
   41bf4:	vld1.32	{d16-d17}, [r2]
   41bf8:	add	r0, r0, r1, lsl #1
   41bfc:	vmovn.i32	d16, q8
   41c00:	vst1.16	{d16}, [r0]
   41c04:	ldr	r0, [sp, #72]	; 0x48
   41c08:	ldr	r2, [sp, #44]	; 0x2c
   41c0c:	cmp	r0, r2
   41c10:	beq	41c38 <GetDataSlab+0x11cb8>
   41c14:	mov	r0, #0
   41c18:	sub	r1, r0, r2, lsl #1
   41c1c:	ldr	r0, [sp, #72]	; 0x48
   41c20:	sub	r2, r0, r2
   41c24:	ldr	r0, [lr, -r1, lsl #1]
   41c28:	subs	r2, r2, #1
   41c2c:	strh	r0, [r8, -r1]
   41c30:	sub	r1, r1, #2
   41c34:	bne	41c24 <GetDataSlab+0x11ca4>
   41c38:	ldr	r0, [fp, #24]
   41c3c:	mov	r4, r6
   41c40:	add	r4, r6, sl, lsl #2
   41c44:	add	r3, r3, sl
   41c48:	cmp	r0, #2
   41c4c:	blt	41b30 <GetDataSlab+0x11bb0>
   41c50:	ldr	r1, [sp, #52]	; 0x34
   41c54:	ldr	lr, [sp, #56]	; 0x38
   41c58:	mov	r2, #0
   41c5c:	b	41c8c <GetDataSlab+0x11d0c>
   41c60:	ldr	r7, [sp, #80]	; 0x50
   41c64:	ldr	r6, [ip, r2]
   41c68:	sub	r0, r5, r0
   41c6c:	ldr	r7, [r7, r2]
   41c70:	mla	r0, r7, r6, r0
   41c74:	mov	r7, #16
   41c78:	add	r3, r0, r3
   41c7c:	add	r4, r4, r0, lsl #2
   41c80:	subs	r1, r1, #1
   41c84:	add	r2, r2, #4
   41c88:	beq	41b30 <GetDataSlab+0x11bb0>
   41c8c:	ldr	r0, [r9, r2]
   41c90:	add	r0, r0, #1
   41c94:	str	r0, [r9, r2]
   41c98:	ldr	r5, [lr, r2]
   41c9c:	sdiv	r6, r0, r5
   41ca0:	mls	r0, r6, r5, r0
   41ca4:	cmp	r0, #0
   41ca8:	bne	41b20 <GetDataSlab+0x11ba0>
   41cac:	mov	r0, #0
   41cb0:	str	r0, [r9, r2]
   41cb4:	ldr	r0, [sp, #84]	; 0x54
   41cb8:	ldr	r5, [r0, r2]
   41cbc:	sdiv	r0, r3, r5
   41cc0:	mls	r0, r0, r5, r3
   41cc4:	cmp	r0, #0
   41cc8:	bne	41c60 <GetDataSlab+0x11ce0>
   41ccc:	ldr	r0, [sp, #80]	; 0x50
   41cd0:	ldr	r0, [r0, r2]
   41cd4:	cmp	r0, #0
   41cd8:	beq	41c80 <GetDataSlab+0x11d00>
   41cdc:	ldr	r7, [ip, r2]
   41ce0:	mla	r3, r7, r0, r3
   41ce4:	mul	r0, r7, r0
   41ce8:	mov	r7, #16
   41cec:	b	41c7c <GetDataSlab+0x11cfc>
   41cf0:	ldr	r0, [sp, #80]	; 0x50
   41cf4:	ldr	r5, [sp, #56]	; 0x38
   41cf8:	add	r4, r0, r3, lsl #2
   41cfc:	cmp	r5, #1
   41d00:	bne	4ea34 <GetDataSlab+0x1eab4>
   41d04:	ldr	r0, [sp, #76]	; 0x4c
   41d08:	ldr	r2, [fp, #20]
   41d0c:	ldr	sl, [sp, #60]	; 0x3c
   41d10:	cmp	r0, #1
   41d14:	ldr	r0, [sp, #72]	; 0x48
   41d18:	blt	56c18 <GetDataSlab+0x26c98>
   41d1c:	sub	r0, r0, #4
   41d20:	mov	r1, #1
   41d24:	mov	r6, r4
   41d28:	add	r1, r1, r0, lsr #2
   41d2c:	lsr	r0, r0, #2
   41d30:	str	r0, [sp, #40]	; 0x28
   41d34:	mov	r0, #0
   41d38:	and	r7, r1, #1
   41d3c:	str	r0, [sp, #68]	; 0x44
   41d40:	sub	r1, r1, r7
   41d44:	str	r7, [sp, #48]	; 0x30
   41d48:	mov	r7, #16
   41d4c:	str	r1, [sp, #32]
   41d50:	sub	r1, fp, #136	; 0x88
   41d54:	orr	r9, r1, #4
   41d58:	add	r1, r2, #4
   41d5c:	str	r1, [sp, #56]	; 0x38
   41d60:	orr	r1, ip, #4
   41d64:	str	r1, [sp, #84]	; 0x54
   41d68:	ldr	r1, [fp, #12]
   41d6c:	add	r1, r1, #4
   41d70:	str	r1, [sp, #80]	; 0x50
   41d74:	ldr	r1, [fp, #24]
   41d78:	sub	r1, r1, #1
   41d7c:	str	r1, [sp, #52]	; 0x34
   41d80:	sub	r1, fp, #96	; 0x60
   41d84:	orr	r1, r1, #4
   41d88:	str	r1, [sp, #36]	; 0x24
   41d8c:	ldr	r1, [sp, #72]	; 0x48
   41d90:	lsl	r2, r1, #1
   41d94:	str	r2, [sp, #64]	; 0x40
   41d98:	bic	r2, r1, #3
   41d9c:	str	r2, [sp, #44]	; 0x2c
   41da0:	b	41de0 <GetDataSlab+0x11e60>
   41da4:	ldr	r0, [sp, #36]	; 0x24
   41da8:	ldr	r0, [r0, r2]
   41dac:	add	r4, r4, r0, lsl #2
   41db0:	add	r3, r0, r3
   41db4:	ldr	r0, [sp, #64]	; 0x40
   41db8:	ldr	r1, [sp, #72]	; 0x48
   41dbc:	ldr	r2, [sp, #68]	; 0x44
   41dc0:	mov	r6, r4
   41dc4:	add	r8, r8, r0
   41dc8:	ldr	r0, [sp, #76]	; 0x4c
   41dcc:	add	r2, r2, r1
   41dd0:	str	r2, [sp, #68]	; 0x44
   41dd4:	cmp	r2, r0
   41dd8:	mov	r2, #0
   41ddc:	bge	56c1c <GetDataSlab+0x26c9c>
   41de0:	cmp	r1, #1
   41de4:	sub	ip, fp, #176	; 0xb0
   41de8:	blt	41ebc <GetDataSlab+0x11f3c>
   41dec:	ldr	r0, [fp, #12]
   41df0:	mov	r2, #0
   41df4:	ldr	r0, [r0]
   41df8:	add	lr, r6, r0, lsl #2
   41dfc:	ldr	r0, [sp, #72]	; 0x48
   41e00:	cmp	r0, #4
   41e04:	bcc	41e98 <GetDataSlab+0x11f18>
   41e08:	ldr	r0, [sp, #40]	; 0x28
   41e0c:	mov	r1, #0
   41e10:	cmp	r0, #0
   41e14:	beq	41e54 <GetDataSlab+0x11ed4>
   41e18:	ldr	sl, [sp, #32]
   41e1c:	mov	ip, r8
   41e20:	mov	r2, lr
   41e24:	mov	r4, #32
   41e28:	add	r0, r2, #16
   41e2c:	vld1.32	{d16-d17}, [r2], r4
   41e30:	add	r5, ip, #8
   41e34:	subs	sl, sl, #2
   41e38:	add	r1, r1, #8
   41e3c:	vmovn.i32	d16, q8
   41e40:	vst1.16	{d16}, [ip], r7
   41e44:	vld1.32	{d16-d17}, [r0]
   41e48:	vmovn.i32	d16, q8
   41e4c:	vst1.16	{d16}, [r5]
   41e50:	bne	41e28 <GetDataSlab+0x11ea8>
   41e54:	ldr	r0, [sp, #48]	; 0x30
   41e58:	ldr	sl, [sp, #60]	; 0x3c
   41e5c:	sub	ip, fp, #176	; 0xb0
   41e60:	cmp	r0, #0
   41e64:	beq	41e88 <GetDataSlab+0x11f08>
   41e68:	ldr	r0, [sp, #88]	; 0x58
   41e6c:	ldr	r2, [sp, #68]	; 0x44
   41e70:	add	r0, r0, r2, lsl #1
   41e74:	add	r2, lr, r1, lsl #2
   41e78:	vld1.32	{d16-d17}, [r2]
   41e7c:	add	r0, r0, r1, lsl #1
   41e80:	vmovn.i32	d16, q8
   41e84:	vst1.16	{d16}, [r0]
   41e88:	ldr	r0, [sp, #72]	; 0x48
   41e8c:	ldr	r2, [sp, #44]	; 0x2c
   41e90:	cmp	r0, r2
   41e94:	beq	41ebc <GetDataSlab+0x11f3c>
   41e98:	mov	r0, #0
   41e9c:	sub	r1, r0, r2, lsl #1
   41ea0:	ldr	r0, [sp, #72]	; 0x48
   41ea4:	sub	r2, r0, r2
   41ea8:	ldr	r0, [lr, -r1, lsl #1]
   41eac:	subs	r2, r2, #1
   41eb0:	strh	r0, [r8, -r1]
   41eb4:	sub	r1, r1, #2
   41eb8:	bne	41ea8 <GetDataSlab+0x11f28>
   41ebc:	ldr	r0, [fp, #24]
   41ec0:	mov	r4, r6
   41ec4:	add	r4, r6, sl, lsl #2
   41ec8:	add	r3, r3, sl
   41ecc:	cmp	r0, #2
   41ed0:	blt	41db4 <GetDataSlab+0x11e34>
   41ed4:	ldr	r1, [sp, #52]	; 0x34
   41ed8:	ldr	lr, [sp, #56]	; 0x38
   41edc:	mov	r2, #0
   41ee0:	b	41f10 <GetDataSlab+0x11f90>
   41ee4:	ldr	r7, [sp, #80]	; 0x50
   41ee8:	ldr	r6, [ip, r2]
   41eec:	sub	r0, r5, r0
   41ef0:	ldr	r7, [r7, r2]
   41ef4:	mla	r0, r7, r6, r0
   41ef8:	mov	r7, #16
   41efc:	add	r3, r0, r3
   41f00:	add	r4, r4, r0, lsl #2
   41f04:	subs	r1, r1, #1
   41f08:	add	r2, r2, #4
   41f0c:	beq	41db4 <GetDataSlab+0x11e34>
   41f10:	ldr	r0, [r9, r2]
   41f14:	add	r0, r0, #1
   41f18:	str	r0, [r9, r2]
   41f1c:	ldr	r5, [lr, r2]
   41f20:	sdiv	r6, r0, r5
   41f24:	mls	r0, r6, r5, r0
   41f28:	cmp	r0, #0
   41f2c:	bne	41da4 <GetDataSlab+0x11e24>
   41f30:	mov	r0, #0
   41f34:	str	r0, [r9, r2]
   41f38:	ldr	r0, [sp, #84]	; 0x54
   41f3c:	ldr	r5, [r0, r2]
   41f40:	sdiv	r0, r3, r5
   41f44:	mls	r0, r0, r5, r3
   41f48:	cmp	r0, #0
   41f4c:	bne	41ee4 <GetDataSlab+0x11f64>
   41f50:	ldr	r0, [sp, #80]	; 0x50
   41f54:	ldr	r0, [r0, r2]
   41f58:	cmp	r0, #0
   41f5c:	beq	41f04 <GetDataSlab+0x11f84>
   41f60:	ldr	r7, [ip, r2]
   41f64:	mla	r3, r7, r0, r3
   41f68:	mul	r0, r7, r0
   41f6c:	mov	r7, #16
   41f70:	b	41f00 <GetDataSlab+0x11f80>
   41f74:	ldr	r0, [sp, #80]	; 0x50
   41f78:	add	lr, r0, r1, lsl #2
   41f7c:	ldr	r0, [sp, #40]	; 0x28
   41f80:	cmp	r0, #1
   41f84:	bne	4ec3c <GetDataSlab+0x1ecbc>
   41f88:	ldr	r0, [sp, #76]	; 0x4c
   41f8c:	ldr	sl, [sp, #60]	; 0x3c
   41f90:	cmp	r0, #1
   41f94:	blt	56c18 <GetDataSlab+0x26c98>
   41f98:	ldr	r3, [sp, #64]	; 0x40
   41f9c:	mov	r2, #1
   41fa0:	mov	r6, #16
   41fa4:	sub	r0, r3, #4
   41fa8:	add	r2, r2, r0, lsr #2
   41fac:	lsr	r0, r0, #2
   41fb0:	str	r0, [sp, #40]	; 0x28
   41fb4:	mov	r0, #0
   41fb8:	and	r4, r2, #1
   41fbc:	str	r0, [sp, #80]	; 0x50
   41fc0:	sub	r2, r2, r4
   41fc4:	str	r4, [sp, #48]	; 0x30
   41fc8:	str	r2, [sp, #32]
   41fcc:	sub	r2, fp, #136	; 0x88
   41fd0:	orr	r4, r2, #4
   41fd4:	ldr	r2, [fp, #20]
   41fd8:	add	r8, r2, #4
   41fdc:	orr	r2, ip, #4
   41fe0:	ldr	ip, [sp, #88]	; 0x58
   41fe4:	str	r2, [sp, #84]	; 0x54
   41fe8:	ldr	r2, [fp, #24]
   41fec:	sub	r2, r2, #1
   41ff0:	str	r2, [sp, #56]	; 0x38
   41ff4:	sub	r2, fp, #96	; 0x60
   41ff8:	orr	r2, r2, #4
   41ffc:	str	r2, [sp, #36]	; 0x24
   42000:	lsl	r2, r3, #1
   42004:	str	r2, [sp, #72]	; 0x48
   42008:	bic	r2, r3, #3
   4200c:	str	r2, [sp, #44]	; 0x2c
   42010:	ldr	r2, [sp, #92]	; 0x5c
   42014:	ldr	r7, [r2], #4
   42018:	str	r2, [sp, #92]	; 0x5c
   4201c:	str	r7, [sp, #68]	; 0x44
   42020:	b	42060 <GetDataSlab+0x120e0>
   42024:	ldr	r2, [sp, #36]	; 0x24
   42028:	mov	r6, #16
   4202c:	ldr	r0, [r2, r0]
   42030:	add	lr, lr, r0, lsl #2
   42034:	add	r1, r0, r1
   42038:	ldr	r0, [sp, #72]	; 0x48
   4203c:	ldr	r2, [sp, #80]	; 0x50
   42040:	mov	r3, r9
   42044:	add	ip, ip, r0
   42048:	ldr	r0, [sp, #76]	; 0x4c
   4204c:	add	r2, r2, r9
   42050:	str	r2, [sp, #80]	; 0x50
   42054:	cmp	r2, r0
   42058:	mov	r2, #0
   4205c:	bge	56c1c <GetDataSlab+0x26c9c>
   42060:	cmp	r3, #1
   42064:	mov	r9, r3
   42068:	blt	42158 <GetDataSlab+0x121d8>
   4206c:	mov	r3, #0
   42070:	cmp	r9, #4
   42074:	bcc	42120 <GetDataSlab+0x121a0>
   42078:	ldr	r0, [sp, #68]	; 0x44
   4207c:	mov	r2, #0
   42080:	add	r5, lr, r0, lsl #2
   42084:	ldr	r0, [sp, #40]	; 0x28
   42088:	str	r5, [sp, #52]	; 0x34
   4208c:	cmp	r0, #0
   42090:	beq	420d8 <GetDataSlab+0x12158>
   42094:	ldr	sl, [sp, #32]
   42098:	mov	r0, r5
   4209c:	mov	r3, ip
   420a0:	mov	r5, #32
   420a4:	add	r7, r0, #16
   420a8:	vld1.32	{d16-d17}, [r0], r5
   420ac:	add	r9, r3, #8
   420b0:	subs	sl, sl, #2
   420b4:	add	r2, r2, #8
   420b8:	vcvt.s32.f32	q8, q8
   420bc:	vmovn.i32	d16, q8
   420c0:	vst1.16	{d16}, [r3], r6
   420c4:	vld1.32	{d16-d17}, [r7]
   420c8:	vcvt.s32.f32	q8, q8
   420cc:	vmovn.i32	d16, q8
   420d0:	vst1.16	{d16}, [r9]
   420d4:	bne	420a4 <GetDataSlab+0x12124>
   420d8:	ldr	r0, [sp, #48]	; 0x30
   420dc:	ldr	sl, [sp, #60]	; 0x3c
   420e0:	cmp	r0, #0
   420e4:	beq	42110 <GetDataSlab+0x12190>
   420e8:	ldr	r0, [sp, #88]	; 0x58
   420ec:	ldr	r3, [sp, #80]	; 0x50
   420f0:	add	r0, r0, r3, lsl #1
   420f4:	ldr	r3, [sp, #52]	; 0x34
   420f8:	add	r0, r0, r2, lsl #1
   420fc:	add	r3, r3, r2, lsl #2
   42100:	vld1.32	{d16-d17}, [r3]
   42104:	vcvt.s32.f32	q8, q8
   42108:	vmovn.i32	d16, q8
   4210c:	vst1.16	{d16}, [r0]
   42110:	ldr	r9, [sp, #64]	; 0x40
   42114:	ldr	r3, [sp, #44]	; 0x2c
   42118:	cmp	r9, r3
   4211c:	beq	42158 <GetDataSlab+0x121d8>
   42120:	ldr	r5, [sp, #68]	; 0x44
   42124:	mov	r0, #0
   42128:	sub	r2, r9, r3
   4212c:	sub	r0, r0, r3, lsl #1
   42130:	add	r7, lr, r5, lsl #2
   42134:	add	r3, r7, r3, lsl #2
   42138:	vldr	s0, [r3]
   4213c:	add	r3, r3, #4
   42140:	subs	r2, r2, #1
   42144:	vcvt.s32.f32	s0, s0
   42148:	vmov	r7, s0
   4214c:	strh	r7, [ip, -r0]
   42150:	sub	r0, r0, #2
   42154:	bne	42138 <GetDataSlab+0x121b8>
   42158:	ldr	r0, [fp, #24]
   4215c:	add	lr, lr, sl, lsl #2
   42160:	add	r1, r1, sl
   42164:	cmp	r0, #2
   42168:	blt	42038 <GetDataSlab+0x120b8>
   4216c:	ldr	r2, [sp, #56]	; 0x38
   42170:	mov	r0, #0
   42174:	b	421a8 <GetDataSlab+0x12228>
   42178:	sub	r5, fp, #176	; 0xb0
   4217c:	sub	r3, r3, r7
   42180:	ldr	r6, [r5, r0]
   42184:	ldr	r5, [sp, #92]	; 0x5c
   42188:	ldr	r5, [r5, r0]
   4218c:	mla	r3, r5, r6, r3
   42190:	add	r1, r3, r1
   42194:	add	lr, lr, r3, lsl #2
   42198:	mov	r6, #16
   4219c:	subs	r2, r2, #1
   421a0:	add	r0, r0, #4
   421a4:	beq	42038 <GetDataSlab+0x120b8>
   421a8:	ldr	r3, [r4, r0]
   421ac:	add	r3, r3, #1
   421b0:	str	r3, [r4, r0]
   421b4:	ldr	r7, [r8, r0]
   421b8:	sdiv	r6, r3, r7
   421bc:	mls	r3, r6, r7, r3
   421c0:	cmp	r3, #0
   421c4:	bne	42024 <GetDataSlab+0x120a4>
   421c8:	mov	r3, #0
   421cc:	str	r3, [r4, r0]
   421d0:	ldr	r3, [sp, #84]	; 0x54
   421d4:	ldr	r3, [r3, r0]
   421d8:	sdiv	r6, r1, r3
   421dc:	mls	r7, r6, r3, r1
   421e0:	cmp	r7, #0
   421e4:	bne	42178 <GetDataSlab+0x121f8>
   421e8:	ldr	r3, [sp, #92]	; 0x5c
   421ec:	ldr	r3, [r3, r0]
   421f0:	cmp	r3, #0
   421f4:	beq	42198 <GetDataSlab+0x12218>
   421f8:	sub	r5, fp, #176	; 0xb0
   421fc:	ldr	r5, [r5, r0]
   42200:	mla	r1, r5, r3, r1
   42204:	mul	r3, r5, r3
   42208:	b	42194 <GetDataSlab+0x12214>
   4220c:	ldr	r0, [sp, #80]	; 0x50
   42210:	add	r9, r0, r1, lsl #3
   42214:	ldr	r0, [sp, #40]	; 0x28
   42218:	cmp	r0, #1
   4221c:	bne	4ee6c <GetDataSlab+0x1eeec>
   42220:	ldr	r0, [sp, #76]	; 0x4c
   42224:	ldr	r2, [sp, #88]	; 0x58
   42228:	ldr	r4, [fp, #12]
   4222c:	sub	r6, fp, #96	; 0x60
   42230:	cmp	r0, #1
   42234:	blt	56c18 <GetDataSlab+0x26c98>
   42238:	mov	r3, ip
   4223c:	ldr	r7, [fp, #20]
   42240:	add	r2, r2, #2
   42244:	sub	r0, fp, #136	; 0x88
   42248:	mov	r8, #0
   4224c:	orr	r3, r3, #4
   42250:	str	r2, [sp, #84]	; 0x54
   42254:	ldr	r2, [r4], #4
   42258:	orr	r0, r0, #4
   4225c:	str	r3, [sp, #92]	; 0x5c
   42260:	ldr	r3, [fp, #24]
   42264:	add	ip, r7, #4
   42268:	str	r2, [sp, #56]	; 0x38
   4226c:	add	r2, r2, #1
   42270:	sub	r3, r3, #1
   42274:	str	r2, [sp, #52]	; 0x34
   42278:	str	r3, [sp, #60]	; 0x3c
   4227c:	orr	r3, r6, #4
   42280:	str	r3, [sp, #48]	; 0x30
   42284:	ldr	r3, [sp, #64]	; 0x40
   42288:	and	r7, r3, #1
   4228c:	lsl	r5, r3, #1
   42290:	sub	lr, r3, r7
   42294:	str	r7, [sp, #68]	; 0x44
   42298:	str	r5, [sp, #80]	; 0x50
   4229c:	cmp	r3, #1
   422a0:	bge	422e8 <GetDataSlab+0x12368>
   422a4:	b	42368 <GetDataSlab+0x123e8>
   422a8:	ldr	r3, [sp, #48]	; 0x30
   422ac:	ldr	r2, [r3, r2]
   422b0:	add	r9, r9, r2, lsl #3
   422b4:	add	r1, r2, r1
   422b8:	ldr	r2, [sp, #80]	; 0x50
   422bc:	ldr	r3, [sp, #84]	; 0x54
   422c0:	add	r3, r3, r2
   422c4:	ldr	r2, [sp, #76]	; 0x4c
   422c8:	str	r3, [sp, #84]	; 0x54
   422cc:	ldr	r3, [sp, #64]	; 0x40
   422d0:	add	r8, r8, r3
   422d4:	cmp	r8, r2
   422d8:	mov	r2, #0
   422dc:	bge	56c1c <GetDataSlab+0x26c9c>
   422e0:	cmp	r3, #1
   422e4:	blt	42368 <GetDataSlab+0x123e8>
   422e8:	mov	r2, #0
   422ec:	beq	42334 <GetDataSlab+0x123b4>
   422f0:	ldr	r2, [sp, #52]	; 0x34
   422f4:	ldr	r6, [sp, #84]	; 0x54
   422f8:	add	r3, r9, r2, lsl #3
   422fc:	mov	r2, #0
   42300:	vldr	d16, [r3, #-8]
   42304:	add	r2, r2, #2
   42308:	cmp	lr, r2
   4230c:	vcvt.s32.f64	s0, d16
   42310:	vmov	r7, s0
   42314:	strh	r7, [r6, #-2]
   42318:	vldr	d16, [r3]
   4231c:	add	r3, r3, #16
   42320:	vcvt.s32.f64	s0, d16
   42324:	vmov	r7, s0
   42328:	strh	r7, [r6]
   4232c:	add	r6, r6, #4
   42330:	bne	42300 <GetDataSlab+0x12380>
   42334:	ldr	r3, [sp, #68]	; 0x44
   42338:	cmp	r3, #0
   4233c:	beq	42368 <GetDataSlab+0x123e8>
   42340:	ldr	r3, [sp, #56]	; 0x38
   42344:	ldr	r5, [sp, #88]	; 0x58
   42348:	add	r3, r9, r3, lsl #3
   4234c:	add	r6, r5, r8, lsl #1
   42350:	add	r3, r3, r2, lsl #3
   42354:	add	r2, r6, r2, lsl #1
   42358:	vldr	d16, [r3]
   4235c:	vcvt.s32.f64	s0, d16
   42360:	vmov	r3, s0
   42364:	strh	r3, [r2]
   42368:	ldr	r2, [sp, #72]	; 0x48
   4236c:	add	r9, r9, r2, lsl #3
   42370:	add	r1, r1, r2
   42374:	ldr	r2, [fp, #24]
   42378:	cmp	r2, #2
   4237c:	blt	422b8 <GetDataSlab+0x12338>
   42380:	ldr	r3, [sp, #60]	; 0x3c
   42384:	mov	r2, #0
   42388:	b	423b4 <GetDataSlab+0x12434>
   4238c:	sub	r5, fp, #176	; 0xb0
   42390:	ldr	r7, [r4, r2]
   42394:	sub	r6, r6, sl
   42398:	ldr	r5, [r5, r2]
   4239c:	mla	r5, r7, r5, r6
   423a0:	add	r1, r5, r1
   423a4:	add	r9, r9, r5, lsl #3
   423a8:	subs	r3, r3, #1
   423ac:	add	r2, r2, #4
   423b0:	beq	422b8 <GetDataSlab+0x12338>
   423b4:	ldr	r6, [r0, r2]
   423b8:	add	r6, r6, #1
   423bc:	str	r6, [r0, r2]
   423c0:	ldr	r7, [ip, r2]
   423c4:	sdiv	r5, r6, r7
   423c8:	mls	r5, r5, r7, r6
   423cc:	cmp	r5, #0
   423d0:	bne	422a8 <GetDataSlab+0x12328>
   423d4:	mov	r5, #0
   423d8:	str	r5, [r0, r2]
   423dc:	ldr	r5, [sp, #92]	; 0x5c
   423e0:	ldr	r6, [r5, r2]
   423e4:	sdiv	r5, r1, r6
   423e8:	mls	sl, r5, r6, r1
   423ec:	cmp	sl, #0
   423f0:	bne	4238c <GetDataSlab+0x1240c>
   423f4:	ldr	r6, [r4, r2]
   423f8:	cmp	r6, #0
   423fc:	beq	423a8 <GetDataSlab+0x12428>
   42400:	sub	r5, fp, #176	; 0xb0
   42404:	ldr	r5, [r5, r2]
   42408:	mla	r1, r5, r6, r1
   4240c:	mul	r5, r5, r6
   42410:	b	423a4 <GetDataSlab+0x12424>
   42414:	ldr	r0, [sp, #80]	; 0x50
   42418:	ldr	r7, [sp, #60]	; 0x3c
   4241c:	add	lr, r0, r1, lsl #3
   42420:	cmp	r7, #1
   42424:	bne	4f0a0 <GetDataSlab+0x1f120>
   42428:	ldr	r0, [sp, #68]	; 0x44
   4242c:	ldr	r3, [fp, #20]
   42430:	ldr	r9, [sp, #56]	; 0x38
   42434:	cmp	r0, #1
   42438:	blt	4f2a8 <GetDataSlab+0x1f328>
   4243c:	sub	r0, r9, #2
   42440:	mov	r2, #1
   42444:	ldr	sl, [sp, #44]	; 0x2c
   42448:	add	r2, r2, r0, lsr #1
   4244c:	lsr	r0, r0, #1
   42450:	str	r0, [sp, #32]
   42454:	mov	r0, #0
   42458:	and	r4, r2, #1
   4245c:	str	r0, [sp, #64]	; 0x40
   42460:	sub	r2, r2, r4
   42464:	str	r4, [sp, #40]	; 0x28
   42468:	str	r2, [sp, #24]
   4246c:	sub	r2, fp, #136	; 0x88
   42470:	orr	r4, r2, #4
   42474:	add	r2, r3, #4
   42478:	mov	r3, #32
   4247c:	str	r2, [sp, #84]	; 0x54
   42480:	orr	r2, ip, #4
   42484:	mov	ip, r8
   42488:	ldr	r8, [fp, #12]
   4248c:	str	r2, [sp, #72]	; 0x48
   42490:	ldr	r2, [fp, #24]
   42494:	sub	r2, r2, #1
   42498:	str	r2, [sp, #48]	; 0x30
   4249c:	sub	r2, fp, #96	; 0x60
   424a0:	orr	r2, r2, #4
   424a4:	str	r2, [sp, #28]
   424a8:	lsl	r2, r9, #1
   424ac:	str	r2, [sp, #60]	; 0x3c
   424b0:	bic	r2, r9, #1
   424b4:	str	r2, [sp, #36]	; 0x24
   424b8:	ldr	r2, [r8], #4
   424bc:	str	r2, [sp, #52]	; 0x34
   424c0:	cmp	r9, #1
   424c4:	bge	42508 <GetDataSlab+0x12588>
   424c8:	b	425e4 <GetDataSlab+0x12664>
   424cc:	ldr	r2, [sp, #28]
   424d0:	ldr	r0, [r2, r0]
   424d4:	add	lr, lr, r0, lsl #3
   424d8:	add	r1, r0, r1
   424dc:	ldr	r0, [sp, #60]	; 0x3c
   424e0:	ldr	r2, [sp, #64]	; 0x40
   424e4:	mov	r3, #32
   424e8:	add	ip, ip, r0
   424ec:	ldr	r0, [sp, #68]	; 0x44
   424f0:	add	r2, r2, r9
   424f4:	str	r2, [sp, #64]	; 0x40
   424f8:	cmp	r2, r0
   424fc:	bge	4f2a8 <GetDataSlab+0x1f328>
   42500:	cmp	r9, #1
   42504:	blt	425e4 <GetDataSlab+0x12664>
   42508:	mov	r6, #0
   4250c:	beq	425b8 <GetDataSlab+0x12638>
   42510:	ldr	r0, [sp, #52]	; 0x34
   42514:	mov	r2, #0
   42518:	add	r7, lr, r0, lsl #3
   4251c:	ldr	r0, [sp, #32]
   42520:	cmp	r0, #0
   42524:	beq	42574 <GetDataSlab+0x125f4>
   42528:	ldr	r0, [sp, #24]
   4252c:	mov	r6, ip
   42530:	mov	sl, r7
   42534:	mov	r9, r7
   42538:	vld1.64	{d16-d17}, [r9], r3
   4253c:	add	r5, sl, #16
   42540:	subs	r0, r0, #2
   42544:	add	r2, r2, #4
   42548:	mov	sl, r9
   4254c:	vmovn.i64	d16, q8
   42550:	vuzp.16	d16, d17
   42554:	vst1.32	{d16[0]}, [r6]
   42558:	vld1.64	{d16-d17}, [r5]
   4255c:	add	r5, r6, #4
   42560:	add	r6, r6, #8
   42564:	vmovn.i64	d16, q8
   42568:	vuzp.16	d16, d17
   4256c:	vst1.32	{d16[0]}, [r5]
   42570:	bne	42538 <GetDataSlab+0x125b8>
   42574:	ldr	r0, [sp, #40]	; 0x28
   42578:	ldr	sl, [sp, #44]	; 0x2c
   4257c:	cmp	r0, #0
   42580:	beq	425a8 <GetDataSlab+0x12628>
   42584:	add	r5, r7, r2, lsl #3
   42588:	ldr	r0, [sp, #88]	; 0x58
   4258c:	ldr	r3, [sp, #64]	; 0x40
   42590:	vld1.64	{d16-d17}, [r5]
   42594:	add	r0, r0, r3, lsl #1
   42598:	add	r0, r0, r2, lsl #1
   4259c:	vmovn.i64	d16, q8
   425a0:	vuzp.16	d16, d17
   425a4:	vst1.32	{d16[0]}, [r0]
   425a8:	ldr	r9, [sp, #56]	; 0x38
   425ac:	ldr	r6, [sp, #36]	; 0x24
   425b0:	cmp	r9, r6
   425b4:	beq	425e4 <GetDataSlab+0x12664>
   425b8:	ldr	r3, [sp, #52]	; 0x34
   425bc:	mov	r0, #0
   425c0:	sub	r2, r9, r6
   425c4:	sub	r0, r0, r6, lsl #1
   425c8:	add	r5, lr, r3, lsl #3
   425cc:	add	r6, r5, r6, lsl #3
   425d0:	ldrh	r5, [r6], #8
   425d4:	subs	r2, r2, #1
   425d8:	strh	r5, [ip, -r0]
   425dc:	sub	r0, r0, #2
   425e0:	bne	425d0 <GetDataSlab+0x12650>
   425e4:	ldr	r0, [fp, #24]
   425e8:	add	lr, lr, sl, lsl #3
   425ec:	add	r1, r1, sl
   425f0:	cmp	r0, #2
   425f4:	blt	424dc <GetDataSlab+0x1255c>
   425f8:	ldr	r2, [sp, #48]	; 0x30
   425fc:	mov	r0, #0
   42600:	b	4262c <GetDataSlab+0x126ac>
   42604:	sub	r3, fp, #176	; 0xb0
   42608:	sub	r5, r6, r5
   4260c:	ldr	r7, [r3, r0]
   42610:	ldr	r3, [r8, r0]
   42614:	mla	r3, r3, r7, r5
   42618:	add	r1, r3, r1
   4261c:	add	lr, lr, r3, lsl #3
   42620:	subs	r2, r2, #1
   42624:	add	r0, r0, #4
   42628:	beq	424dc <GetDataSlab+0x1255c>
   4262c:	ldr	r5, [r4, r0]
   42630:	ldr	r3, [sp, #84]	; 0x54
   42634:	add	r5, r5, #1
   42638:	str	r5, [r4, r0]
   4263c:	ldr	r6, [r3, r0]
   42640:	sdiv	r7, r5, r6
   42644:	mls	r5, r7, r6, r5
   42648:	cmp	r5, #0
   4264c:	bne	424cc <GetDataSlab+0x1254c>
   42650:	mov	r3, #0
   42654:	str	r3, [r4, r0]
   42658:	ldr	r3, [sp, #72]	; 0x48
   4265c:	ldr	r6, [r3, r0]
   42660:	sdiv	r5, r1, r6
   42664:	mls	r5, r5, r6, r1
   42668:	cmp	r5, #0
   4266c:	bne	42604 <GetDataSlab+0x12684>
   42670:	ldr	r5, [r8, r0]
   42674:	cmp	r5, #0
   42678:	beq	42620 <GetDataSlab+0x126a0>
   4267c:	sub	r3, fp, #176	; 0xb0
   42680:	ldr	r3, [r3, r0]
   42684:	mla	r1, r3, r5, r1
   42688:	mul	r3, r3, r5
   4268c:	b	4261c <GetDataSlab+0x1269c>
   42690:	ldr	r0, [sp, #80]	; 0x50
   42694:	cmp	sl, #1
   42698:	add	ip, r0, r3
   4269c:	bne	4f6e4 <GetDataSlab+0x1f764>
   426a0:	ldr	r0, [sp, #76]	; 0x4c
   426a4:	ldr	r2, [fp, #12]
   426a8:	sub	r7, fp, #96	; 0x60
   426ac:	cmp	r0, #1
   426b0:	blt	56468 <GetDataSlab+0x264e8>
   426b4:	ldr	lr, [sp, #56]	; 0x38
   426b8:	mov	r1, #1
   426bc:	ldr	r8, [sp, #88]	; 0x58
   426c0:	sub	r6, fp, #192	; 0xc0
   426c4:	sub	r0, lr, #8
   426c8:	add	r1, r1, r0, lsr #3
   426cc:	lsr	r0, r0, #3
   426d0:	str	r0, [sp, #20]
   426d4:	mov	r0, #0
   426d8:	and	r4, r1, #1
   426dc:	str	r0, [sp, #72]	; 0x48
   426e0:	sub	r1, r1, r4
   426e4:	str	r4, [sp, #28]
   426e8:	str	r1, [sp, #12]
   426ec:	sub	r1, fp, #136	; 0x88
   426f0:	orr	r4, r1, #4
   426f4:	ldr	r1, [fp, #20]
   426f8:	add	sl, r1, #4
   426fc:	sub	r1, fp, #176	; 0xb0
   42700:	orr	r1, r1, #4
   42704:	str	sl, [sp, #16]
   42708:	str	r1, [sp, #84]	; 0x54
   4270c:	add	r1, r2, #4
   42710:	str	r1, [sp, #80]	; 0x50
   42714:	ldr	r1, [fp, #24]
   42718:	sub	r1, r1, #1
   4271c:	str	r1, [sp, #40]	; 0x28
   42720:	orr	r1, r7, #4
   42724:	str	r1, [sp, #32]
   42728:	lsl	r1, lr, #1
   4272c:	str	r1, [sp, #64]	; 0x40
   42730:	and	r1, lr, #1
   42734:	str	r1, [sp, #44]	; 0x2c
   42738:	bic	r1, lr, #7
   4273c:	str	r1, [sp, #24]
   42740:	mov	r1, #0
   42744:	b	42788 <GetDataSlab+0x12808>
   42748:	ldr	r0, [sp, #32]
   4274c:	mov	r6, r9
   42750:	ldr	r0, [r0, r1]
   42754:	add	ip, ip, r0
   42758:	add	r3, r0, r3
   4275c:	ldr	r0, [sp, #64]	; 0x40
   42760:	ldr	r2, [sp, #72]	; 0x48
   42764:	ldr	r1, [sp, #68]	; 0x44
   42768:	add	r8, r8, r0
   4276c:	ldr	r0, [sp, #76]	; 0x4c
   42770:	add	r2, r2, lr
   42774:	add	r1, r1, #1
   42778:	str	r2, [sp, #72]	; 0x48
   4277c:	cmp	r2, r0
   42780:	mov	r2, #0
   42784:	bge	56c1c <GetDataSlab+0x26c9c>
   42788:	cmp	lr, #1
   4278c:	str	r1, [sp, #68]	; 0x44
   42790:	blt	4293c <GetDataSlab+0x129bc>
   42794:	ldr	r0, [fp, #12]
   42798:	str	r8, [sp, #60]	; 0x3c
   4279c:	mov	r8, lr
   427a0:	ldr	r5, [sp, #72]	; 0x48
   427a4:	mov	r9, #0
   427a8:	cmp	r8, #8
   427ac:	ldr	lr, [r0]
   427b0:	ldr	r0, [sp, #88]	; 0x58
   427b4:	add	r5, r0, r5, lsl #1
   427b8:	add	r2, ip, lr
   427bc:	str	r5, [sp, #48]	; 0x30
   427c0:	bcs	427d4 <GetDataSlab+0x12854>
   427c4:	mov	r5, lr
   427c8:	mov	lr, r8
   427cc:	ldr	r8, [sp, #60]	; 0x3c
   427d0:	b	428d8 <GetDataSlab+0x12958>
   427d4:	ldr	r5, [sp, #64]	; 0x40
   427d8:	add	r7, ip, r8
   427dc:	add	r7, r7, lr
   427e0:	mla	r0, r5, r1, r0
   427e4:	mov	r5, lr
   427e8:	mov	lr, r8
   427ec:	ldr	r8, [sp, #60]	; 0x3c
   427f0:	cmp	r0, r7
   427f4:	bcs	42810 <GetDataSlab+0x12890>
   427f8:	ldr	r0, [sp, #64]	; 0x40
   427fc:	ldr	r7, [sp, #88]	; 0x58
   42800:	mla	r0, r0, r1, r0
   42804:	add	r0, r7, r0
   42808:	cmp	r2, r0
   4280c:	bcc	428d8 <GetDataSlab+0x12958>
   42810:	ldr	r0, [sp, #20]
   42814:	mov	r1, #0
   42818:	str	r5, [sp, #36]	; 0x24
   4281c:	cmp	r0, #0
   42820:	beq	42880 <GetDataSlab+0x12900>
   42824:	ldr	sl, [sp, #12]
   42828:	mov	lr, r8
   4282c:	mov	r5, #32
   42830:	sub	r8, fp, #184	; 0xb8
   42834:	mov	r0, r2
   42838:	subs	sl, sl, #2
   4283c:	ldr	r7, [r0, r1]!
   42840:	add	r1, r1, #16
   42844:	str	r7, [fp, #-192]	; 0xffffff40
   42848:	ldr	r7, [r0, #4]
   4284c:	str	r7, [fp, #-188]	; 0xffffff44
   42850:	add	r7, lr, #16
   42854:	vld1.8	{d16}, [r6 :64]
   42858:	vmovl.u8	q8, d16
   4285c:	vst1.16	{d16-d17}, [lr], r5
   42860:	ldr	r9, [r0, #8]
   42864:	ldr	r0, [r0, #12]
   42868:	str	r0, [fp, #-180]	; 0xffffff4c
   4286c:	str	r9, [fp, #-184]	; 0xffffff48
   42870:	vld1.8	{d16}, [r8 :64]
   42874:	vmovl.u8	q8, d16
   42878:	vst1.16	{d16-d17}, [r7]
   4287c:	bne	42834 <GetDataSlab+0x128b4>
   42880:	ldr	r0, [sp, #28]
   42884:	ldr	sl, [sp, #16]
   42888:	ldr	r5, [sp, #36]	; 0x24
   4288c:	cmp	r0, #0
   42890:	beq	428c0 <GetDataSlab+0x12940>
   42894:	mov	r0, r2
   42898:	ldr	r7, [r0, r1]!
   4289c:	str	r7, [fp, #-200]	; 0xffffff38
   428a0:	ldr	r0, [r0, #4]
   428a4:	str	r0, [fp, #-196]	; 0xffffff3c
   428a8:	sub	r0, fp, #200	; 0xc8
   428ac:	vld1.8	{d16}, [r0 :64]
   428b0:	ldr	r0, [sp, #48]	; 0x30
   428b4:	add	r0, r0, r1, lsl #1
   428b8:	vmovl.u8	q8, d16
   428bc:	vst1.16	{d16-d17}, [r0]
   428c0:	ldr	r1, [sp, #24]
   428c4:	ldr	lr, [sp, #56]	; 0x38
   428c8:	ldr	r8, [sp, #60]	; 0x3c
   428cc:	cmp	lr, r1
   428d0:	mov	r9, r1
   428d4:	beq	4293c <GetDataSlab+0x129bc>
   428d8:	ldr	r0, [sp, #44]	; 0x2c
   428dc:	mov	r7, r9
   428e0:	cmp	r0, #0
   428e4:	beq	428fc <GetDataSlab+0x1297c>
   428e8:	ldr	r1, [sp, #48]	; 0x30
   428ec:	ldrb	r0, [r2, r9]
   428f0:	orr	r7, r9, #1
   428f4:	add	r2, r1, r9, lsl #1
   428f8:	strh	r0, [r2]
   428fc:	orr	r0, r9, #1
   42900:	cmp	lr, r0
   42904:	beq	4293c <GetDataSlab+0x129bc>
   42908:	add	r0, r7, r5
   4290c:	add	r1, r8, r7, lsl #1
   42910:	sub	r2, lr, r7
   42914:	add	r0, ip, r0
   42918:	add	r7, r0, #1
   4291c:	ldrb	r0, [r7, #-1]
   42920:	subs	r2, r2, #2
   42924:	strh	r0, [r1]
   42928:	ldrb	r0, [r7]
   4292c:	add	r7, r7, #2
   42930:	strh	r0, [r1, #2]
   42934:	add	r1, r1, #4
   42938:	bne	4291c <GetDataSlab+0x1299c>
   4293c:	ldr	r0, [sp, #52]	; 0x34
   42940:	add	ip, ip, r0
   42944:	add	r3, r3, r0
   42948:	ldr	r0, [fp, #24]
   4294c:	cmp	r0, #2
   42950:	blt	4275c <GetDataSlab+0x127dc>
   42954:	ldr	r2, [sp, #40]	; 0x28
   42958:	mov	r1, #0
   4295c:	b	42990 <GetDataSlab+0x12a10>
   42960:	ldr	r5, [sp, #80]	; 0x50
   42964:	sub	r6, fp, #176	; 0xb0
   42968:	sub	r0, r7, r0
   4296c:	ldr	r6, [r6, r1]
   42970:	ldr	r5, [r5, r1]
   42974:	mla	r0, r5, r6, r0
   42978:	add	r3, r0, r3
   4297c:	add	ip, ip, r0
   42980:	mov	r6, r9
   42984:	subs	r2, r2, #1
   42988:	add	r1, r1, #4
   4298c:	beq	4275c <GetDataSlab+0x127dc>
   42990:	ldr	r0, [r4, r1]
   42994:	mov	r9, r6
   42998:	add	r0, r0, #1
   4299c:	str	r0, [r4, r1]
   429a0:	ldr	r7, [sl, r1]
   429a4:	sdiv	r6, r0, r7
   429a8:	mls	r0, r6, r7, r0
   429ac:	cmp	r0, #0
   429b0:	bne	42748 <GetDataSlab+0x127c8>
   429b4:	mov	r0, #0
   429b8:	str	r0, [r4, r1]
   429bc:	ldr	r0, [sp, #84]	; 0x54
   429c0:	ldr	r7, [r0, r1]
   429c4:	sdiv	r0, r3, r7
   429c8:	mls	r0, r0, r7, r3
   429cc:	cmp	r0, #0
   429d0:	bne	42960 <GetDataSlab+0x129e0>
   429d4:	ldr	r0, [sp, #80]	; 0x50
   429d8:	ldr	r0, [r0, r1]
   429dc:	cmp	r0, #0
   429e0:	beq	42980 <GetDataSlab+0x12a00>
   429e4:	sub	r7, fp, #176	; 0xb0
   429e8:	ldr	r7, [r7, r1]
   429ec:	mla	r3, r7, r0, r3
   429f0:	mla	ip, r7, r0, ip
   429f4:	b	42980 <GetDataSlab+0x12a00>
   429f8:	ldr	r0, [sp, #80]	; 0x50
   429fc:	ldr	r7, [sp, #68]	; 0x44
   42a00:	add	lr, r0, r1, lsl #1
   42a04:	cmp	r7, #1
   42a08:	bne	4f8f8 <GetDataSlab+0x1f978>
   42a0c:	ldr	r0, [sp, #76]	; 0x4c
   42a10:	ldr	r3, [fp, #12]
   42a14:	ldr	r5, [fp, #20]
   42a18:	ldr	r7, [sp, #64]	; 0x40
   42a1c:	sub	r6, fp, #96	; 0x60
   42a20:	cmp	r0, #1
   42a24:	blt	56c18 <GetDataSlab+0x26c98>
   42a28:	sub	r0, r7, #8
   42a2c:	mov	r2, #1
   42a30:	ldr	sl, [sp, #88]	; 0x58
   42a34:	mov	r9, #0
   42a38:	mov	r8, r7
   42a3c:	add	r2, r2, r0, lsr #3
   42a40:	lsr	r0, r0, #3
   42a44:	str	r0, [sp, #20]
   42a48:	and	r4, r2, #1
   42a4c:	sub	r2, r2, r4
   42a50:	str	r4, [sp, #28]
   42a54:	str	r2, [sp, #16]
   42a58:	sub	r2, fp, #136	; 0x88
   42a5c:	orr	r4, r2, #4
   42a60:	add	r2, r5, #4
   42a64:	str	r2, [sp, #84]	; 0x54
   42a68:	orr	r2, ip, #4
   42a6c:	str	r2, [sp, #80]	; 0x50
   42a70:	ldr	r2, [fp, #24]
   42a74:	sub	r2, r2, #1
   42a78:	str	r2, [sp, #48]	; 0x30
   42a7c:	orr	r2, r6, #4
   42a80:	str	r2, [sp, #32]
   42a84:	ldr	r2, [r3], #4
   42a88:	str	r3, [sp, #92]	; 0x5c
   42a8c:	add	r3, r7, r2
   42a90:	add	r0, r2, #1
   42a94:	str	r2, [sp, #56]	; 0x38
   42a98:	str	r3, [sp, #44]	; 0x2c
   42a9c:	and	r3, r7, #1
   42aa0:	str	r0, [sp, #36]	; 0x24
   42aa4:	mov	r0, #0
   42aa8:	str	r3, [sp, #52]	; 0x34
   42aac:	bic	r3, r7, #7
   42ab0:	str	r0, [sp, #72]	; 0x48
   42ab4:	str	r3, [sp, #24]
   42ab8:	lsl	r3, r7, #1
   42abc:	str	r3, [sp, #68]	; 0x44
   42ac0:	b	42afc <GetDataSlab+0x12b7c>
   42ac4:	ldr	r2, [sp, #32]
   42ac8:	ldr	r0, [r2, r0]
   42acc:	add	lr, lr, r0, lsl #1
   42ad0:	add	r1, r0, r1
   42ad4:	ldr	r0, [sp, #68]	; 0x44
   42ad8:	add	r9, r9, r8
   42adc:	mov	r2, #0
   42ae0:	add	sl, sl, r0
   42ae4:	ldr	r0, [sp, #72]	; 0x48
   42ae8:	add	r0, r0, #1
   42aec:	str	r0, [sp, #72]	; 0x48
   42af0:	ldr	r0, [sp, #76]	; 0x4c
   42af4:	cmp	r9, r0
   42af8:	bge	56c1c <GetDataSlab+0x26c9c>
   42afc:	ldr	r7, [sp, #88]	; 0x58
   42b00:	ldr	ip, [sp, #92]	; 0x5c
   42b04:	cmp	r8, #1
   42b08:	blt	42c38 <GetDataSlab+0x12cb8>
   42b0c:	ldr	r0, [sp, #56]	; 0x38
   42b10:	add	r5, r7, r9, lsl #1
   42b14:	mov	r3, #0
   42b18:	cmp	r8, #8
   42b1c:	add	r6, lr, r0, lsl #1
   42b20:	bcc	42bd4 <GetDataSlab+0x12c54>
   42b24:	ldr	r0, [sp, #68]	; 0x44
   42b28:	ldr	r2, [sp, #72]	; 0x48
   42b2c:	mla	r0, r0, r2, r7
   42b30:	ldr	r2, [sp, #44]	; 0x2c
   42b34:	add	r2, lr, r2, lsl #1
   42b38:	cmp	r0, r2
   42b3c:	bcs	42b58 <GetDataSlab+0x12bd8>
   42b40:	ldr	r0, [sp, #68]	; 0x44
   42b44:	ldr	r2, [sp, #72]	; 0x48
   42b48:	mla	r0, r0, r2, r0
   42b4c:	add	r0, r7, r0
   42b50:	cmp	r0, r6
   42b54:	bhi	42bd4 <GetDataSlab+0x12c54>
   42b58:	ldr	r0, [sp, #20]
   42b5c:	mov	r3, #0
   42b60:	str	r5, [sp, #40]	; 0x28
   42b64:	cmp	r0, #0
   42b68:	beq	42ba0 <GetDataSlab+0x12c20>
   42b6c:	ldr	r2, [sp, #16]
   42b70:	mov	ip, sl
   42b74:	mov	r0, r6
   42b78:	mov	r5, #32
   42b7c:	add	r7, r0, #16
   42b80:	vld1.16	{d16-d17}, [r0], r5
   42b84:	add	r8, ip, #16
   42b88:	subs	r2, r2, #2
   42b8c:	add	r3, r3, #16
   42b90:	vst1.16	{d16-d17}, [ip], r5
   42b94:	vld1.16	{d16-d17}, [r7]
   42b98:	vst1.16	{d16-d17}, [r8]
   42b9c:	bne	42b7c <GetDataSlab+0x12bfc>
   42ba0:	ldr	r0, [sp, #28]
   42ba4:	ldr	r5, [sp, #40]	; 0x28
   42ba8:	cmp	r0, #0
   42bac:	beq	42bc0 <GetDataSlab+0x12c40>
   42bb0:	add	r0, r6, r3, lsl #1
   42bb4:	vld1.16	{d16-d17}, [r0]
   42bb8:	add	r0, r5, r3, lsl #1
   42bbc:	vst1.16	{d16-d17}, [r0]
   42bc0:	ldr	r8, [sp, #64]	; 0x40
   42bc4:	ldr	r3, [sp, #24]
   42bc8:	ldr	ip, [sp, #92]	; 0x5c
   42bcc:	cmp	r8, r3
   42bd0:	beq	42c38 <GetDataSlab+0x12cb8>
   42bd4:	ldr	r0, [sp, #52]	; 0x34
   42bd8:	mov	r7, r3
   42bdc:	cmp	r0, #0
   42be0:	beq	42bf8 <GetDataSlab+0x12c78>
   42be4:	add	r2, r6, r3, lsl #1
   42be8:	add	r0, r5, r3, lsl #1
   42bec:	orr	r7, r3, #1
   42bf0:	ldrh	r2, [r2]
   42bf4:	strh	r2, [r0]
   42bf8:	orr	r0, r3, #1
   42bfc:	cmp	r8, r0
   42c00:	beq	42c38 <GetDataSlab+0x12cb8>
   42c04:	ldr	r0, [sp, #36]	; 0x24
   42c08:	sub	r2, r8, r7
   42c0c:	lsl	r3, r7, #1
   42c10:	add	r0, lr, r0, lsl #1
   42c14:	add	r7, r0, r3
   42c18:	mov	r5, sl
   42c1c:	subs	r2, r2, #2
   42c20:	ldrh	r6, [r7, #-2]
   42c24:	strh	r6, [r5, r3]!
   42c28:	ldrh	r7, [r7]
   42c2c:	add	r3, r3, #4
   42c30:	strh	r7, [r5, #2]
   42c34:	bne	42c14 <GetDataSlab+0x12c94>
   42c38:	ldr	r0, [sp, #60]	; 0x3c
   42c3c:	add	lr, lr, r0, lsl #1
   42c40:	add	r1, r1, r0
   42c44:	ldr	r0, [fp, #24]
   42c48:	cmp	r0, #2
   42c4c:	blt	42ad4 <GetDataSlab+0x12b54>
   42c50:	ldr	r2, [sp, #48]	; 0x30
   42c54:	mov	r0, #0
   42c58:	b	42c84 <GetDataSlab+0x12d04>
   42c5c:	sub	r5, fp, #176	; 0xb0
   42c60:	sub	r3, r3, r7
   42c64:	ldr	r6, [r5, r0]
   42c68:	ldr	r5, [ip, r0]
   42c6c:	mla	r3, r5, r6, r3
   42c70:	add	r1, r3, r1
   42c74:	add	lr, lr, r3, lsl #1
   42c78:	subs	r2, r2, #1
   42c7c:	add	r0, r0, #4
   42c80:	beq	42ad4 <GetDataSlab+0x12b54>
   42c84:	ldr	r3, [r4, r0]
   42c88:	ldr	r5, [sp, #84]	; 0x54
   42c8c:	add	r3, r3, #1
   42c90:	str	r3, [r4, r0]
   42c94:	ldr	r7, [r5, r0]
   42c98:	sdiv	r6, r3, r7
   42c9c:	mls	r3, r6, r7, r3
   42ca0:	cmp	r3, #0
   42ca4:	bne	42ac4 <GetDataSlab+0x12b44>
   42ca8:	mov	r3, #0
   42cac:	str	r3, [r4, r0]
   42cb0:	ldr	r3, [sp, #80]	; 0x50
   42cb4:	ldr	r3, [r3, r0]
   42cb8:	sdiv	r7, r1, r3
   42cbc:	mls	r7, r7, r3, r1
   42cc0:	cmp	r7, #0
   42cc4:	bne	42c5c <GetDataSlab+0x12cdc>
   42cc8:	ldr	r3, [ip, r0]
   42ccc:	cmp	r3, #0
   42cd0:	beq	42c78 <GetDataSlab+0x12cf8>
   42cd4:	sub	r5, fp, #176	; 0xb0
   42cd8:	ldr	r7, [r5, r0]
   42cdc:	mla	r1, r7, r3, r1
   42ce0:	mul	r3, r7, r3
   42ce4:	b	42c74 <GetDataSlab+0x12cf4>
   42ce8:	ldr	r0, [sp, #80]	; 0x50
   42cec:	ldr	r7, [sp, #68]	; 0x44
   42cf0:	add	lr, r0, r1, lsl #1
   42cf4:	cmp	r7, #1
   42cf8:	bne	4fb0c <GetDataSlab+0x1fb8c>
   42cfc:	ldr	r0, [sp, #76]	; 0x4c
   42d00:	ldr	r3, [fp, #12]
   42d04:	ldr	r5, [fp, #20]
   42d08:	ldr	r7, [sp, #64]	; 0x40
   42d0c:	sub	r6, fp, #96	; 0x60
   42d10:	cmp	r0, #1
   42d14:	blt	56c18 <GetDataSlab+0x26c98>
   42d18:	sub	r0, r7, #8
   42d1c:	mov	r2, #1
   42d20:	ldr	sl, [sp, #88]	; 0x58
   42d24:	mov	r9, #0
   42d28:	mov	r8, r7
   42d2c:	add	r2, r2, r0, lsr #3
   42d30:	lsr	r0, r0, #3
   42d34:	str	r0, [sp, #20]
   42d38:	and	r4, r2, #1
   42d3c:	sub	r2, r2, r4
   42d40:	str	r4, [sp, #28]
   42d44:	str	r2, [sp, #16]
   42d48:	sub	r2, fp, #136	; 0x88
   42d4c:	orr	r4, r2, #4
   42d50:	add	r2, r5, #4
   42d54:	str	r2, [sp, #84]	; 0x54
   42d58:	orr	r2, ip, #4
   42d5c:	str	r2, [sp, #80]	; 0x50
   42d60:	ldr	r2, [fp, #24]
   42d64:	sub	r2, r2, #1
   42d68:	str	r2, [sp, #48]	; 0x30
   42d6c:	orr	r2, r6, #4
   42d70:	str	r2, [sp, #32]
   42d74:	ldr	r2, [r3], #4
   42d78:	str	r3, [sp, #92]	; 0x5c
   42d7c:	add	r3, r7, r2
   42d80:	add	r0, r2, #1
   42d84:	str	r2, [sp, #56]	; 0x38
   42d88:	str	r3, [sp, #44]	; 0x2c
   42d8c:	and	r3, r7, #1
   42d90:	str	r0, [sp, #36]	; 0x24
   42d94:	mov	r0, #0
   42d98:	str	r3, [sp, #52]	; 0x34
   42d9c:	bic	r3, r7, #7
   42da0:	str	r0, [sp, #72]	; 0x48
   42da4:	str	r3, [sp, #24]
   42da8:	lsl	r3, r7, #1
   42dac:	str	r3, [sp, #68]	; 0x44
   42db0:	b	42dec <GetDataSlab+0x12e6c>
   42db4:	ldr	r2, [sp, #32]
   42db8:	ldr	r0, [r2, r0]
   42dbc:	add	lr, lr, r0, lsl #1
   42dc0:	add	r1, r0, r1
   42dc4:	ldr	r0, [sp, #68]	; 0x44
   42dc8:	add	r9, r9, r8
   42dcc:	mov	r2, #0
   42dd0:	add	sl, sl, r0
   42dd4:	ldr	r0, [sp, #72]	; 0x48
   42dd8:	add	r0, r0, #1
   42ddc:	str	r0, [sp, #72]	; 0x48
   42de0:	ldr	r0, [sp, #76]	; 0x4c
   42de4:	cmp	r9, r0
   42de8:	bge	56c1c <GetDataSlab+0x26c9c>
   42dec:	ldr	r7, [sp, #88]	; 0x58
   42df0:	ldr	ip, [sp, #92]	; 0x5c
   42df4:	cmp	r8, #1
   42df8:	blt	42f28 <GetDataSlab+0x12fa8>
   42dfc:	ldr	r0, [sp, #56]	; 0x38
   42e00:	add	r5, r7, r9, lsl #1
   42e04:	mov	r3, #0
   42e08:	cmp	r8, #8
   42e0c:	add	r6, lr, r0, lsl #1
   42e10:	bcc	42ec4 <GetDataSlab+0x12f44>
   42e14:	ldr	r0, [sp, #68]	; 0x44
   42e18:	ldr	r2, [sp, #72]	; 0x48
   42e1c:	mla	r0, r0, r2, r7
   42e20:	ldr	r2, [sp, #44]	; 0x2c
   42e24:	add	r2, lr, r2, lsl #1
   42e28:	cmp	r0, r2
   42e2c:	bcs	42e48 <GetDataSlab+0x12ec8>
   42e30:	ldr	r0, [sp, #68]	; 0x44
   42e34:	ldr	r2, [sp, #72]	; 0x48
   42e38:	mla	r0, r0, r2, r0
   42e3c:	add	r0, r7, r0
   42e40:	cmp	r0, r6
   42e44:	bhi	42ec4 <GetDataSlab+0x12f44>
   42e48:	ldr	r0, [sp, #20]
   42e4c:	mov	r3, #0
   42e50:	str	r5, [sp, #40]	; 0x28
   42e54:	cmp	r0, #0
   42e58:	beq	42e90 <GetDataSlab+0x12f10>
   42e5c:	ldr	r2, [sp, #16]
   42e60:	mov	ip, sl
   42e64:	mov	r0, r6
   42e68:	mov	r5, #32
   42e6c:	add	r7, r0, #16
   42e70:	vld1.16	{d16-d17}, [r0], r5
   42e74:	add	r8, ip, #16
   42e78:	subs	r2, r2, #2
   42e7c:	add	r3, r3, #16
   42e80:	vst1.16	{d16-d17}, [ip], r5
   42e84:	vld1.16	{d16-d17}, [r7]
   42e88:	vst1.16	{d16-d17}, [r8]
   42e8c:	bne	42e6c <GetDataSlab+0x12eec>
   42e90:	ldr	r0, [sp, #28]
   42e94:	ldr	r5, [sp, #40]	; 0x28
   42e98:	cmp	r0, #0
   42e9c:	beq	42eb0 <GetDataSlab+0x12f30>
   42ea0:	add	r0, r6, r3, lsl #1
   42ea4:	vld1.16	{d16-d17}, [r0]
   42ea8:	add	r0, r5, r3, lsl #1
   42eac:	vst1.16	{d16-d17}, [r0]
   42eb0:	ldr	r8, [sp, #64]	; 0x40
   42eb4:	ldr	r3, [sp, #24]
   42eb8:	ldr	ip, [sp, #92]	; 0x5c
   42ebc:	cmp	r8, r3
   42ec0:	beq	42f28 <GetDataSlab+0x12fa8>
   42ec4:	ldr	r0, [sp, #52]	; 0x34
   42ec8:	mov	r7, r3
   42ecc:	cmp	r0, #0
   42ed0:	beq	42ee8 <GetDataSlab+0x12f68>
   42ed4:	add	r2, r6, r3, lsl #1
   42ed8:	add	r0, r5, r3, lsl #1
   42edc:	orr	r7, r3, #1
   42ee0:	ldrh	r2, [r2]
   42ee4:	strh	r2, [r0]
   42ee8:	orr	r0, r3, #1
   42eec:	cmp	r8, r0
   42ef0:	beq	42f28 <GetDataSlab+0x12fa8>
   42ef4:	ldr	r0, [sp, #36]	; 0x24
   42ef8:	sub	r2, r8, r7
   42efc:	lsl	r3, r7, #1
   42f00:	add	r0, lr, r0, lsl #1
   42f04:	add	r7, r0, r3
   42f08:	mov	r5, sl
   42f0c:	subs	r2, r2, #2
   42f10:	ldrh	r6, [r7, #-2]
   42f14:	strh	r6, [r5, r3]!
   42f18:	ldrh	r7, [r7]
   42f1c:	add	r3, r3, #4
   42f20:	strh	r7, [r5, #2]
   42f24:	bne	42f04 <GetDataSlab+0x12f84>
   42f28:	ldr	r0, [sp, #60]	; 0x3c
   42f2c:	add	lr, lr, r0, lsl #1
   42f30:	add	r1, r1, r0
   42f34:	ldr	r0, [fp, #24]
   42f38:	cmp	r0, #2
   42f3c:	blt	42dc4 <GetDataSlab+0x12e44>
   42f40:	ldr	r2, [sp, #48]	; 0x30
   42f44:	mov	r0, #0
   42f48:	b	42f74 <GetDataSlab+0x12ff4>
   42f4c:	sub	r5, fp, #176	; 0xb0
   42f50:	sub	r3, r3, r7
   42f54:	ldr	r6, [r5, r0]
   42f58:	ldr	r5, [ip, r0]
   42f5c:	mla	r3, r5, r6, r3
   42f60:	add	r1, r3, r1
   42f64:	add	lr, lr, r3, lsl #1
   42f68:	subs	r2, r2, #1
   42f6c:	add	r0, r0, #4
   42f70:	beq	42dc4 <GetDataSlab+0x12e44>
   42f74:	ldr	r3, [r4, r0]
   42f78:	ldr	r5, [sp, #84]	; 0x54
   42f7c:	add	r3, r3, #1
   42f80:	str	r3, [r4, r0]
   42f84:	ldr	r7, [r5, r0]
   42f88:	sdiv	r6, r3, r7
   42f8c:	mls	r3, r6, r7, r3
   42f90:	cmp	r3, #0
   42f94:	bne	42db4 <GetDataSlab+0x12e34>
   42f98:	mov	r3, #0
   42f9c:	str	r3, [r4, r0]
   42fa0:	ldr	r3, [sp, #80]	; 0x50
   42fa4:	ldr	r3, [r3, r0]
   42fa8:	sdiv	r7, r1, r3
   42fac:	mls	r7, r7, r3, r1
   42fb0:	cmp	r7, #0
   42fb4:	bne	42f4c <GetDataSlab+0x12fcc>
   42fb8:	ldr	r3, [ip, r0]
   42fbc:	cmp	r3, #0
   42fc0:	beq	42f68 <GetDataSlab+0x12fe8>
   42fc4:	sub	r5, fp, #176	; 0xb0
   42fc8:	ldr	r7, [r5, r0]
   42fcc:	mla	r1, r7, r3, r1
   42fd0:	mul	r3, r7, r3
   42fd4:	b	42f64 <GetDataSlab+0x12fe4>
   42fd8:	ldr	r0, [sp, #80]	; 0x50
   42fdc:	ldr	r5, [sp, #56]	; 0x38
   42fe0:	add	r4, r0, r3, lsl #2
   42fe4:	cmp	r5, #1
   42fe8:	bne	4fd20 <GetDataSlab+0x1fda0>
   42fec:	ldr	r0, [sp, #76]	; 0x4c
   42ff0:	ldr	r2, [fp, #20]
   42ff4:	ldr	sl, [sp, #60]	; 0x3c
   42ff8:	cmp	r0, #1
   42ffc:	ldr	r0, [sp, #72]	; 0x48
   43000:	blt	56c18 <GetDataSlab+0x26c98>
   43004:	sub	r0, r0, #4
   43008:	mov	r1, #1
   4300c:	mov	r6, r4
   43010:	add	r1, r1, r0, lsr #2
   43014:	lsr	r0, r0, #2
   43018:	str	r0, [sp, #40]	; 0x28
   4301c:	mov	r0, #0
   43020:	and	r7, r1, #1
   43024:	str	r0, [sp, #68]	; 0x44
   43028:	sub	r1, r1, r7
   4302c:	str	r7, [sp, #48]	; 0x30
   43030:	mov	r7, #16
   43034:	str	r1, [sp, #32]
   43038:	sub	r1, fp, #136	; 0x88
   4303c:	orr	r9, r1, #4
   43040:	add	r1, r2, #4
   43044:	str	r1, [sp, #56]	; 0x38
   43048:	orr	r1, ip, #4
   4304c:	str	r1, [sp, #84]	; 0x54
   43050:	ldr	r1, [fp, #12]
   43054:	add	r1, r1, #4
   43058:	str	r1, [sp, #80]	; 0x50
   4305c:	ldr	r1, [fp, #24]
   43060:	sub	r1, r1, #1
   43064:	str	r1, [sp, #52]	; 0x34
   43068:	sub	r1, fp, #96	; 0x60
   4306c:	orr	r1, r1, #4
   43070:	str	r1, [sp, #36]	; 0x24
   43074:	ldr	r1, [sp, #72]	; 0x48
   43078:	lsl	r2, r1, #1
   4307c:	str	r2, [sp, #64]	; 0x40
   43080:	bic	r2, r1, #3
   43084:	str	r2, [sp, #44]	; 0x2c
   43088:	b	430c8 <GetDataSlab+0x13148>
   4308c:	ldr	r0, [sp, #36]	; 0x24
   43090:	ldr	r0, [r0, r2]
   43094:	add	r4, r4, r0, lsl #2
   43098:	add	r3, r0, r3
   4309c:	ldr	r0, [sp, #64]	; 0x40
   430a0:	ldr	r1, [sp, #72]	; 0x48
   430a4:	ldr	r2, [sp, #68]	; 0x44
   430a8:	mov	r6, r4
   430ac:	add	r8, r8, r0
   430b0:	ldr	r0, [sp, #76]	; 0x4c
   430b4:	add	r2, r2, r1
   430b8:	str	r2, [sp, #68]	; 0x44
   430bc:	cmp	r2, r0
   430c0:	mov	r2, #0
   430c4:	bge	56c1c <GetDataSlab+0x26c9c>
   430c8:	cmp	r1, #1
   430cc:	sub	ip, fp, #176	; 0xb0
   430d0:	blt	431a4 <GetDataSlab+0x13224>
   430d4:	ldr	r0, [fp, #12]
   430d8:	mov	r2, #0
   430dc:	ldr	r0, [r0]
   430e0:	add	lr, r6, r0, lsl #2
   430e4:	ldr	r0, [sp, #72]	; 0x48
   430e8:	cmp	r0, #4
   430ec:	bcc	43180 <GetDataSlab+0x13200>
   430f0:	ldr	r0, [sp, #40]	; 0x28
   430f4:	mov	r1, #0
   430f8:	cmp	r0, #0
   430fc:	beq	4313c <GetDataSlab+0x131bc>
   43100:	ldr	sl, [sp, #32]
   43104:	mov	ip, r8
   43108:	mov	r2, lr
   4310c:	mov	r4, #32
   43110:	add	r0, r2, #16
   43114:	vld1.32	{d16-d17}, [r2], r4
   43118:	add	r5, ip, #8
   4311c:	subs	sl, sl, #2
   43120:	add	r1, r1, #8
   43124:	vmovn.i32	d16, q8
   43128:	vst1.16	{d16}, [ip], r7
   4312c:	vld1.32	{d16-d17}, [r0]
   43130:	vmovn.i32	d16, q8
   43134:	vst1.16	{d16}, [r5]
   43138:	bne	43110 <GetDataSlab+0x13190>
   4313c:	ldr	r0, [sp, #48]	; 0x30
   43140:	ldr	sl, [sp, #60]	; 0x3c
   43144:	sub	ip, fp, #176	; 0xb0
   43148:	cmp	r0, #0
   4314c:	beq	43170 <GetDataSlab+0x131f0>
   43150:	ldr	r0, [sp, #88]	; 0x58
   43154:	ldr	r2, [sp, #68]	; 0x44
   43158:	add	r0, r0, r2, lsl #1
   4315c:	add	r2, lr, r1, lsl #2
   43160:	vld1.32	{d16-d17}, [r2]
   43164:	add	r0, r0, r1, lsl #1
   43168:	vmovn.i32	d16, q8
   4316c:	vst1.16	{d16}, [r0]
   43170:	ldr	r0, [sp, #72]	; 0x48
   43174:	ldr	r2, [sp, #44]	; 0x2c
   43178:	cmp	r0, r2
   4317c:	beq	431a4 <GetDataSlab+0x13224>
   43180:	mov	r0, #0
   43184:	sub	r1, r0, r2, lsl #1
   43188:	ldr	r0, [sp, #72]	; 0x48
   4318c:	sub	r2, r0, r2
   43190:	ldr	r0, [lr, -r1, lsl #1]
   43194:	subs	r2, r2, #1
   43198:	strh	r0, [r8, -r1]
   4319c:	sub	r1, r1, #2
   431a0:	bne	43190 <GetDataSlab+0x13210>
   431a4:	ldr	r0, [fp, #24]
   431a8:	mov	r4, r6
   431ac:	add	r4, r6, sl, lsl #2
   431b0:	add	r3, r3, sl
   431b4:	cmp	r0, #2
   431b8:	blt	4309c <GetDataSlab+0x1311c>
   431bc:	ldr	r1, [sp, #52]	; 0x34
   431c0:	ldr	lr, [sp, #56]	; 0x38
   431c4:	mov	r2, #0
   431c8:	b	431f8 <GetDataSlab+0x13278>
   431cc:	ldr	r7, [sp, #80]	; 0x50
   431d0:	ldr	r6, [ip, r2]
   431d4:	sub	r0, r5, r0
   431d8:	ldr	r7, [r7, r2]
   431dc:	mla	r0, r7, r6, r0
   431e0:	mov	r7, #16
   431e4:	add	r3, r0, r3
   431e8:	add	r4, r4, r0, lsl #2
   431ec:	subs	r1, r1, #1
   431f0:	add	r2, r2, #4
   431f4:	beq	4309c <GetDataSlab+0x1311c>
   431f8:	ldr	r0, [r9, r2]
   431fc:	add	r0, r0, #1
   43200:	str	r0, [r9, r2]
   43204:	ldr	r5, [lr, r2]
   43208:	sdiv	r6, r0, r5
   4320c:	mls	r0, r6, r5, r0
   43210:	cmp	r0, #0
   43214:	bne	4308c <GetDataSlab+0x1310c>
   43218:	mov	r0, #0
   4321c:	str	r0, [r9, r2]
   43220:	ldr	r0, [sp, #84]	; 0x54
   43224:	ldr	r5, [r0, r2]
   43228:	sdiv	r0, r3, r5
   4322c:	mls	r0, r0, r5, r3
   43230:	cmp	r0, #0
   43234:	bne	431cc <GetDataSlab+0x1324c>
   43238:	ldr	r0, [sp, #80]	; 0x50
   4323c:	ldr	r0, [r0, r2]
   43240:	cmp	r0, #0
   43244:	beq	431ec <GetDataSlab+0x1326c>
   43248:	ldr	r7, [ip, r2]
   4324c:	mla	r3, r7, r0, r3
   43250:	mul	r0, r7, r0
   43254:	mov	r7, #16
   43258:	b	431e8 <GetDataSlab+0x13268>
   4325c:	ldr	r0, [sp, #80]	; 0x50
   43260:	ldr	r5, [sp, #56]	; 0x38
   43264:	add	r4, r0, r3, lsl #2
   43268:	cmp	r5, #1
   4326c:	bne	4ff28 <GetDataSlab+0x1ffa8>
   43270:	ldr	r0, [sp, #76]	; 0x4c
   43274:	ldr	r2, [fp, #20]
   43278:	ldr	sl, [sp, #60]	; 0x3c
   4327c:	cmp	r0, #1
   43280:	ldr	r0, [sp, #72]	; 0x48
   43284:	blt	56c18 <GetDataSlab+0x26c98>
   43288:	sub	r0, r0, #4
   4328c:	mov	r1, #1
   43290:	mov	r6, r4
   43294:	add	r1, r1, r0, lsr #2
   43298:	lsr	r0, r0, #2
   4329c:	str	r0, [sp, #40]	; 0x28
   432a0:	mov	r0, #0
   432a4:	and	r7, r1, #1
   432a8:	str	r0, [sp, #68]	; 0x44
   432ac:	sub	r1, r1, r7
   432b0:	str	r7, [sp, #48]	; 0x30
   432b4:	mov	r7, #16
   432b8:	str	r1, [sp, #32]
   432bc:	sub	r1, fp, #136	; 0x88
   432c0:	orr	r9, r1, #4
   432c4:	add	r1, r2, #4
   432c8:	str	r1, [sp, #56]	; 0x38
   432cc:	orr	r1, ip, #4
   432d0:	str	r1, [sp, #84]	; 0x54
   432d4:	ldr	r1, [fp, #12]
   432d8:	add	r1, r1, #4
   432dc:	str	r1, [sp, #80]	; 0x50
   432e0:	ldr	r1, [fp, #24]
   432e4:	sub	r1, r1, #1
   432e8:	str	r1, [sp, #52]	; 0x34
   432ec:	sub	r1, fp, #96	; 0x60
   432f0:	orr	r1, r1, #4
   432f4:	str	r1, [sp, #36]	; 0x24
   432f8:	ldr	r1, [sp, #72]	; 0x48
   432fc:	lsl	r2, r1, #1
   43300:	str	r2, [sp, #64]	; 0x40
   43304:	bic	r2, r1, #3
   43308:	str	r2, [sp, #44]	; 0x2c
   4330c:	b	4334c <GetDataSlab+0x133cc>
   43310:	ldr	r0, [sp, #36]	; 0x24
   43314:	ldr	r0, [r0, r2]
   43318:	add	r4, r4, r0, lsl #2
   4331c:	add	r3, r0, r3
   43320:	ldr	r0, [sp, #64]	; 0x40
   43324:	ldr	r1, [sp, #72]	; 0x48
   43328:	ldr	r2, [sp, #68]	; 0x44
   4332c:	mov	r6, r4
   43330:	add	r8, r8, r0
   43334:	ldr	r0, [sp, #76]	; 0x4c
   43338:	add	r2, r2, r1
   4333c:	str	r2, [sp, #68]	; 0x44
   43340:	cmp	r2, r0
   43344:	mov	r2, #0
   43348:	bge	56c1c <GetDataSlab+0x26c9c>
   4334c:	cmp	r1, #1
   43350:	sub	ip, fp, #176	; 0xb0
   43354:	blt	43428 <GetDataSlab+0x134a8>
   43358:	ldr	r0, [fp, #12]
   4335c:	mov	r2, #0
   43360:	ldr	r0, [r0]
   43364:	add	lr, r6, r0, lsl #2
   43368:	ldr	r0, [sp, #72]	; 0x48
   4336c:	cmp	r0, #4
   43370:	bcc	43404 <GetDataSlab+0x13484>
   43374:	ldr	r0, [sp, #40]	; 0x28
   43378:	mov	r1, #0
   4337c:	cmp	r0, #0
   43380:	beq	433c0 <GetDataSlab+0x13440>
   43384:	ldr	sl, [sp, #32]
   43388:	mov	ip, r8
   4338c:	mov	r2, lr
   43390:	mov	r4, #32
   43394:	add	r0, r2, #16
   43398:	vld1.32	{d16-d17}, [r2], r4
   4339c:	add	r5, ip, #8
   433a0:	subs	sl, sl, #2
   433a4:	add	r1, r1, #8
   433a8:	vmovn.i32	d16, q8
   433ac:	vst1.16	{d16}, [ip], r7
   433b0:	vld1.32	{d16-d17}, [r0]
   433b4:	vmovn.i32	d16, q8
   433b8:	vst1.16	{d16}, [r5]
   433bc:	bne	43394 <GetDataSlab+0x13414>
   433c0:	ldr	r0, [sp, #48]	; 0x30
   433c4:	ldr	sl, [sp, #60]	; 0x3c
   433c8:	sub	ip, fp, #176	; 0xb0
   433cc:	cmp	r0, #0
   433d0:	beq	433f4 <GetDataSlab+0x13474>
   433d4:	ldr	r0, [sp, #88]	; 0x58
   433d8:	ldr	r2, [sp, #68]	; 0x44
   433dc:	add	r0, r0, r2, lsl #1
   433e0:	add	r2, lr, r1, lsl #2
   433e4:	vld1.32	{d16-d17}, [r2]
   433e8:	add	r0, r0, r1, lsl #1
   433ec:	vmovn.i32	d16, q8
   433f0:	vst1.16	{d16}, [r0]
   433f4:	ldr	r0, [sp, #72]	; 0x48
   433f8:	ldr	r2, [sp, #44]	; 0x2c
   433fc:	cmp	r0, r2
   43400:	beq	43428 <GetDataSlab+0x134a8>
   43404:	mov	r0, #0
   43408:	sub	r1, r0, r2, lsl #1
   4340c:	ldr	r0, [sp, #72]	; 0x48
   43410:	sub	r2, r0, r2
   43414:	ldr	r0, [lr, -r1, lsl #1]
   43418:	subs	r2, r2, #1
   4341c:	strh	r0, [r8, -r1]
   43420:	sub	r1, r1, #2
   43424:	bne	43414 <GetDataSlab+0x13494>
   43428:	ldr	r0, [fp, #24]
   4342c:	mov	r4, r6
   43430:	add	r4, r6, sl, lsl #2
   43434:	add	r3, r3, sl
   43438:	cmp	r0, #2
   4343c:	blt	43320 <GetDataSlab+0x133a0>
   43440:	ldr	r1, [sp, #52]	; 0x34
   43444:	ldr	lr, [sp, #56]	; 0x38
   43448:	mov	r2, #0
   4344c:	b	4347c <GetDataSlab+0x134fc>
   43450:	ldr	r7, [sp, #80]	; 0x50
   43454:	ldr	r6, [ip, r2]
   43458:	sub	r0, r5, r0
   4345c:	ldr	r7, [r7, r2]
   43460:	mla	r0, r7, r6, r0
   43464:	mov	r7, #16
   43468:	add	r3, r0, r3
   4346c:	add	r4, r4, r0, lsl #2
   43470:	subs	r1, r1, #1
   43474:	add	r2, r2, #4
   43478:	beq	43320 <GetDataSlab+0x133a0>
   4347c:	ldr	r0, [r9, r2]
   43480:	add	r0, r0, #1
   43484:	str	r0, [r9, r2]
   43488:	ldr	r5, [lr, r2]
   4348c:	sdiv	r6, r0, r5
   43490:	mls	r0, r6, r5, r0
   43494:	cmp	r0, #0
   43498:	bne	43310 <GetDataSlab+0x13390>
   4349c:	mov	r0, #0
   434a0:	str	r0, [r9, r2]
   434a4:	ldr	r0, [sp, #84]	; 0x54
   434a8:	ldr	r5, [r0, r2]
   434ac:	sdiv	r0, r3, r5
   434b0:	mls	r0, r0, r5, r3
   434b4:	cmp	r0, #0
   434b8:	bne	43450 <GetDataSlab+0x134d0>
   434bc:	ldr	r0, [sp, #80]	; 0x50
   434c0:	ldr	r0, [r0, r2]
   434c4:	cmp	r0, #0
   434c8:	beq	43470 <GetDataSlab+0x134f0>
   434cc:	ldr	r7, [ip, r2]
   434d0:	mla	r3, r7, r0, r3
   434d4:	mul	r0, r7, r0
   434d8:	mov	r7, #16
   434dc:	b	4346c <GetDataSlab+0x134ec>
   434e0:	ldr	r0, [sp, #80]	; 0x50
   434e4:	add	lr, r0, r1, lsl #2
   434e8:	ldr	r0, [sp, #40]	; 0x28
   434ec:	cmp	r0, #1
   434f0:	bne	50130 <GetDataSlab+0x201b0>
   434f4:	ldr	r0, [sp, #76]	; 0x4c
   434f8:	ldr	sl, [sp, #60]	; 0x3c
   434fc:	cmp	r0, #1
   43500:	blt	56c18 <GetDataSlab+0x26c98>
   43504:	ldr	r3, [sp, #64]	; 0x40
   43508:	mov	r2, #1
   4350c:	mov	r6, #16
   43510:	sub	r0, r3, #4
   43514:	add	r2, r2, r0, lsr #2
   43518:	lsr	r0, r0, #2
   4351c:	str	r0, [sp, #40]	; 0x28
   43520:	mov	r0, #0
   43524:	and	r4, r2, #1
   43528:	str	r0, [sp, #80]	; 0x50
   4352c:	sub	r2, r2, r4
   43530:	str	r4, [sp, #48]	; 0x30
   43534:	str	r2, [sp, #32]
   43538:	sub	r2, fp, #136	; 0x88
   4353c:	orr	r4, r2, #4
   43540:	ldr	r2, [fp, #20]
   43544:	add	r8, r2, #4
   43548:	orr	r2, ip, #4
   4354c:	ldr	ip, [sp, #88]	; 0x58
   43550:	str	r2, [sp, #84]	; 0x54
   43554:	ldr	r2, [fp, #24]
   43558:	sub	r2, r2, #1
   4355c:	str	r2, [sp, #56]	; 0x38
   43560:	sub	r2, fp, #96	; 0x60
   43564:	orr	r2, r2, #4
   43568:	str	r2, [sp, #36]	; 0x24
   4356c:	lsl	r2, r3, #1
   43570:	str	r2, [sp, #72]	; 0x48
   43574:	bic	r2, r3, #3
   43578:	str	r2, [sp, #44]	; 0x2c
   4357c:	ldr	r2, [sp, #92]	; 0x5c
   43580:	ldr	r7, [r2], #4
   43584:	str	r2, [sp, #92]	; 0x5c
   43588:	str	r7, [sp, #68]	; 0x44
   4358c:	b	435cc <GetDataSlab+0x1364c>
   43590:	ldr	r2, [sp, #36]	; 0x24
   43594:	mov	r6, #16
   43598:	ldr	r0, [r2, r0]
   4359c:	add	lr, lr, r0, lsl #2
   435a0:	add	r1, r0, r1
   435a4:	ldr	r0, [sp, #72]	; 0x48
   435a8:	ldr	r2, [sp, #80]	; 0x50
   435ac:	mov	r3, r9
   435b0:	add	ip, ip, r0
   435b4:	ldr	r0, [sp, #76]	; 0x4c
   435b8:	add	r2, r2, r9
   435bc:	str	r2, [sp, #80]	; 0x50
   435c0:	cmp	r2, r0
   435c4:	mov	r2, #0
   435c8:	bge	56c1c <GetDataSlab+0x26c9c>
   435cc:	cmp	r3, #1
   435d0:	mov	r9, r3
   435d4:	blt	436c4 <GetDataSlab+0x13744>
   435d8:	mov	r3, #0
   435dc:	cmp	r9, #4
   435e0:	bcc	4368c <GetDataSlab+0x1370c>
   435e4:	ldr	r0, [sp, #68]	; 0x44
   435e8:	mov	r2, #0
   435ec:	add	r5, lr, r0, lsl #2
   435f0:	ldr	r0, [sp, #40]	; 0x28
   435f4:	str	r5, [sp, #52]	; 0x34
   435f8:	cmp	r0, #0
   435fc:	beq	43644 <GetDataSlab+0x136c4>
   43600:	ldr	sl, [sp, #32]
   43604:	mov	r0, r5
   43608:	mov	r3, ip
   4360c:	mov	r5, #32
   43610:	add	r7, r0, #16
   43614:	vld1.32	{d16-d17}, [r0], r5
   43618:	add	r9, r3, #8
   4361c:	subs	sl, sl, #2
   43620:	add	r2, r2, #8
   43624:	vcvt.u32.f32	q8, q8
   43628:	vmovn.i32	d16, q8
   4362c:	vst1.16	{d16}, [r3], r6
   43630:	vld1.32	{d16-d17}, [r7]
   43634:	vcvt.u32.f32	q8, q8
   43638:	vmovn.i32	d16, q8
   4363c:	vst1.16	{d16}, [r9]
   43640:	bne	43610 <GetDataSlab+0x13690>
   43644:	ldr	r0, [sp, #48]	; 0x30
   43648:	ldr	sl, [sp, #60]	; 0x3c
   4364c:	cmp	r0, #0
   43650:	beq	4367c <GetDataSlab+0x136fc>
   43654:	ldr	r0, [sp, #88]	; 0x58
   43658:	ldr	r3, [sp, #80]	; 0x50
   4365c:	add	r0, r0, r3, lsl #1
   43660:	ldr	r3, [sp, #52]	; 0x34
   43664:	add	r0, r0, r2, lsl #1
   43668:	add	r3, r3, r2, lsl #2
   4366c:	vld1.32	{d16-d17}, [r3]
   43670:	vcvt.u32.f32	q8, q8
   43674:	vmovn.i32	d16, q8
   43678:	vst1.16	{d16}, [r0]
   4367c:	ldr	r9, [sp, #64]	; 0x40
   43680:	ldr	r3, [sp, #44]	; 0x2c
   43684:	cmp	r9, r3
   43688:	beq	436c4 <GetDataSlab+0x13744>
   4368c:	ldr	r5, [sp, #68]	; 0x44
   43690:	mov	r0, #0
   43694:	sub	r2, r9, r3
   43698:	sub	r0, r0, r3, lsl #1
   4369c:	add	r7, lr, r5, lsl #2
   436a0:	add	r3, r7, r3, lsl #2
   436a4:	vldr	s0, [r3]
   436a8:	add	r3, r3, #4
   436ac:	subs	r2, r2, #1
   436b0:	vcvt.u32.f32	s0, s0
   436b4:	vmov	r7, s0
   436b8:	strh	r7, [ip, -r0]
   436bc:	sub	r0, r0, #2
   436c0:	bne	436a4 <GetDataSlab+0x13724>
   436c4:	ldr	r0, [fp, #24]
   436c8:	add	lr, lr, sl, lsl #2
   436cc:	add	r1, r1, sl
   436d0:	cmp	r0, #2
   436d4:	blt	435a4 <GetDataSlab+0x13624>
   436d8:	ldr	r2, [sp, #56]	; 0x38
   436dc:	mov	r0, #0
   436e0:	b	43714 <GetDataSlab+0x13794>
   436e4:	sub	r5, fp, #176	; 0xb0
   436e8:	sub	r3, r3, r7
   436ec:	ldr	r6, [r5, r0]
   436f0:	ldr	r5, [sp, #92]	; 0x5c
   436f4:	ldr	r5, [r5, r0]
   436f8:	mla	r3, r5, r6, r3
   436fc:	add	r1, r3, r1
   43700:	add	lr, lr, r3, lsl #2
   43704:	mov	r6, #16
   43708:	subs	r2, r2, #1
   4370c:	add	r0, r0, #4
   43710:	beq	435a4 <GetDataSlab+0x13624>
   43714:	ldr	r3, [r4, r0]
   43718:	add	r3, r3, #1
   4371c:	str	r3, [r4, r0]
   43720:	ldr	r7, [r8, r0]
   43724:	sdiv	r6, r3, r7
   43728:	mls	r3, r6, r7, r3
   4372c:	cmp	r3, #0
   43730:	bne	43590 <GetDataSlab+0x13610>
   43734:	mov	r3, #0
   43738:	str	r3, [r4, r0]
   4373c:	ldr	r3, [sp, #84]	; 0x54
   43740:	ldr	r3, [r3, r0]
   43744:	sdiv	r6, r1, r3
   43748:	mls	r7, r6, r3, r1
   4374c:	cmp	r7, #0
   43750:	bne	436e4 <GetDataSlab+0x13764>
   43754:	ldr	r3, [sp, #92]	; 0x5c
   43758:	ldr	r3, [r3, r0]
   4375c:	cmp	r3, #0
   43760:	beq	43704 <GetDataSlab+0x13784>
   43764:	sub	r5, fp, #176	; 0xb0
   43768:	ldr	r5, [r5, r0]
   4376c:	mla	r1, r5, r3, r1
   43770:	mul	r3, r5, r3
   43774:	b	43700 <GetDataSlab+0x13780>
   43778:	ldr	r0, [sp, #80]	; 0x50
   4377c:	add	r9, r0, r1, lsl #3
   43780:	ldr	r0, [sp, #40]	; 0x28
   43784:	cmp	r0, #1
   43788:	bne	50360 <GetDataSlab+0x203e0>
   4378c:	ldr	r0, [sp, #76]	; 0x4c
   43790:	ldr	r2, [sp, #88]	; 0x58
   43794:	ldr	r4, [fp, #12]
   43798:	sub	r6, fp, #96	; 0x60
   4379c:	cmp	r0, #1
   437a0:	blt	56c18 <GetDataSlab+0x26c98>
   437a4:	mov	r3, ip
   437a8:	ldr	r7, [fp, #20]
   437ac:	add	r2, r2, #2
   437b0:	sub	r0, fp, #136	; 0x88
   437b4:	mov	r8, #0
   437b8:	orr	r3, r3, #4
   437bc:	str	r2, [sp, #84]	; 0x54
   437c0:	ldr	r2, [r4], #4
   437c4:	orr	r0, r0, #4
   437c8:	str	r3, [sp, #92]	; 0x5c
   437cc:	ldr	r3, [fp, #24]
   437d0:	add	ip, r7, #4
   437d4:	str	r2, [sp, #56]	; 0x38
   437d8:	add	r2, r2, #1
   437dc:	sub	r3, r3, #1
   437e0:	str	r2, [sp, #52]	; 0x34
   437e4:	str	r3, [sp, #60]	; 0x3c
   437e8:	orr	r3, r6, #4
   437ec:	str	r3, [sp, #48]	; 0x30
   437f0:	ldr	r3, [sp, #64]	; 0x40
   437f4:	and	r7, r3, #1
   437f8:	lsl	r5, r3, #1
   437fc:	sub	lr, r3, r7
   43800:	str	r7, [sp, #68]	; 0x44
   43804:	str	r5, [sp, #80]	; 0x50
   43808:	cmp	r3, #1
   4380c:	bge	43854 <GetDataSlab+0x138d4>
   43810:	b	438d4 <GetDataSlab+0x13954>
   43814:	ldr	r3, [sp, #48]	; 0x30
   43818:	ldr	r2, [r3, r2]
   4381c:	add	r9, r9, r2, lsl #3
   43820:	add	r1, r2, r1
   43824:	ldr	r2, [sp, #80]	; 0x50
   43828:	ldr	r3, [sp, #84]	; 0x54
   4382c:	add	r3, r3, r2
   43830:	ldr	r2, [sp, #76]	; 0x4c
   43834:	str	r3, [sp, #84]	; 0x54
   43838:	ldr	r3, [sp, #64]	; 0x40
   4383c:	add	r8, r8, r3
   43840:	cmp	r8, r2
   43844:	mov	r2, #0
   43848:	bge	56c1c <GetDataSlab+0x26c9c>
   4384c:	cmp	r3, #1
   43850:	blt	438d4 <GetDataSlab+0x13954>
   43854:	mov	r2, #0
   43858:	beq	438a0 <GetDataSlab+0x13920>
   4385c:	ldr	r2, [sp, #52]	; 0x34
   43860:	ldr	r6, [sp, #84]	; 0x54
   43864:	add	r3, r9, r2, lsl #3
   43868:	mov	r2, #0
   4386c:	vldr	d16, [r3, #-8]
   43870:	add	r2, r2, #2
   43874:	cmp	lr, r2
   43878:	vcvt.u32.f64	s0, d16
   4387c:	vmov	r7, s0
   43880:	strh	r7, [r6, #-2]
   43884:	vldr	d16, [r3]
   43888:	add	r3, r3, #16
   4388c:	vcvt.u32.f64	s0, d16
   43890:	vmov	r7, s0
   43894:	strh	r7, [r6]
   43898:	add	r6, r6, #4
   4389c:	bne	4386c <GetDataSlab+0x138ec>
   438a0:	ldr	r3, [sp, #68]	; 0x44
   438a4:	cmp	r3, #0
   438a8:	beq	438d4 <GetDataSlab+0x13954>
   438ac:	ldr	r3, [sp, #56]	; 0x38
   438b0:	ldr	r5, [sp, #88]	; 0x58
   438b4:	add	r3, r9, r3, lsl #3
   438b8:	add	r6, r5, r8, lsl #1
   438bc:	add	r3, r3, r2, lsl #3
   438c0:	add	r2, r6, r2, lsl #1
   438c4:	vldr	d16, [r3]
   438c8:	vcvt.u32.f64	s0, d16
   438cc:	vmov	r3, s0
   438d0:	strh	r3, [r2]
   438d4:	ldr	r2, [sp, #72]	; 0x48
   438d8:	add	r9, r9, r2, lsl #3
   438dc:	add	r1, r1, r2
   438e0:	ldr	r2, [fp, #24]
   438e4:	cmp	r2, #2
   438e8:	blt	43824 <GetDataSlab+0x138a4>
   438ec:	ldr	r3, [sp, #60]	; 0x3c
   438f0:	mov	r2, #0
   438f4:	b	43920 <GetDataSlab+0x139a0>
   438f8:	sub	r5, fp, #176	; 0xb0
   438fc:	ldr	r7, [r4, r2]
   43900:	sub	r6, r6, sl
   43904:	ldr	r5, [r5, r2]
   43908:	mla	r5, r7, r5, r6
   4390c:	add	r1, r5, r1
   43910:	add	r9, r9, r5, lsl #3
   43914:	subs	r3, r3, #1
   43918:	add	r2, r2, #4
   4391c:	beq	43824 <GetDataSlab+0x138a4>
   43920:	ldr	r6, [r0, r2]
   43924:	add	r6, r6, #1
   43928:	str	r6, [r0, r2]
   4392c:	ldr	r7, [ip, r2]
   43930:	sdiv	r5, r6, r7
   43934:	mls	r5, r5, r7, r6
   43938:	cmp	r5, #0
   4393c:	bne	43814 <GetDataSlab+0x13894>
   43940:	mov	r5, #0
   43944:	str	r5, [r0, r2]
   43948:	ldr	r5, [sp, #92]	; 0x5c
   4394c:	ldr	r6, [r5, r2]
   43950:	sdiv	r5, r1, r6
   43954:	mls	sl, r5, r6, r1
   43958:	cmp	sl, #0
   4395c:	bne	438f8 <GetDataSlab+0x13978>
   43960:	ldr	r6, [r4, r2]
   43964:	cmp	r6, #0
   43968:	beq	43914 <GetDataSlab+0x13994>
   4396c:	sub	r5, fp, #176	; 0xb0
   43970:	ldr	r5, [r5, r2]
   43974:	mla	r1, r5, r6, r1
   43978:	mul	r5, r5, r6
   4397c:	b	43910 <GetDataSlab+0x13990>
   43980:	ldr	r0, [sp, #80]	; 0x50
   43984:	ldr	r7, [sp, #60]	; 0x3c
   43988:	add	lr, r0, r1, lsl #3
   4398c:	cmp	r7, #1
   43990:	bne	50594 <GetDataSlab+0x20614>
   43994:	ldr	r0, [sp, #68]	; 0x44
   43998:	ldr	r3, [fp, #20]
   4399c:	ldr	r9, [sp, #56]	; 0x38
   439a0:	cmp	r0, #1
   439a4:	blt	5079c <GetDataSlab+0x2081c>
   439a8:	sub	r0, r9, #2
   439ac:	mov	r2, #1
   439b0:	ldr	sl, [sp, #44]	; 0x2c
   439b4:	add	r2, r2, r0, lsr #1
   439b8:	lsr	r0, r0, #1
   439bc:	str	r0, [sp, #32]
   439c0:	mov	r0, #0
   439c4:	and	r4, r2, #1
   439c8:	str	r0, [sp, #64]	; 0x40
   439cc:	sub	r2, r2, r4
   439d0:	str	r4, [sp, #40]	; 0x28
   439d4:	str	r2, [sp, #24]
   439d8:	sub	r2, fp, #136	; 0x88
   439dc:	orr	r4, r2, #4
   439e0:	add	r2, r3, #4
   439e4:	mov	r3, #32
   439e8:	str	r2, [sp, #84]	; 0x54
   439ec:	orr	r2, ip, #4
   439f0:	mov	ip, r8
   439f4:	ldr	r8, [fp, #12]
   439f8:	str	r2, [sp, #72]	; 0x48
   439fc:	ldr	r2, [fp, #24]
   43a00:	sub	r2, r2, #1
   43a04:	str	r2, [sp, #48]	; 0x30
   43a08:	sub	r2, fp, #96	; 0x60
   43a0c:	orr	r2, r2, #4
   43a10:	str	r2, [sp, #28]
   43a14:	lsl	r2, r9, #1
   43a18:	str	r2, [sp, #60]	; 0x3c
   43a1c:	bic	r2, r9, #1
   43a20:	str	r2, [sp, #36]	; 0x24
   43a24:	ldr	r2, [r8], #4
   43a28:	str	r2, [sp, #52]	; 0x34
   43a2c:	cmp	r9, #1
   43a30:	bge	43a74 <GetDataSlab+0x13af4>
   43a34:	b	43b50 <GetDataSlab+0x13bd0>
   43a38:	ldr	r2, [sp, #28]
   43a3c:	ldr	r0, [r2, r0]
   43a40:	add	lr, lr, r0, lsl #3
   43a44:	add	r1, r0, r1
   43a48:	ldr	r0, [sp, #60]	; 0x3c
   43a4c:	ldr	r2, [sp, #64]	; 0x40
   43a50:	mov	r3, #32
   43a54:	add	ip, ip, r0
   43a58:	ldr	r0, [sp, #68]	; 0x44
   43a5c:	add	r2, r2, r9
   43a60:	str	r2, [sp, #64]	; 0x40
   43a64:	cmp	r2, r0
   43a68:	bge	5079c <GetDataSlab+0x2081c>
   43a6c:	cmp	r9, #1
   43a70:	blt	43b50 <GetDataSlab+0x13bd0>
   43a74:	mov	r6, #0
   43a78:	beq	43b24 <GetDataSlab+0x13ba4>
   43a7c:	ldr	r0, [sp, #52]	; 0x34
   43a80:	mov	r2, #0
   43a84:	add	r7, lr, r0, lsl #3
   43a88:	ldr	r0, [sp, #32]
   43a8c:	cmp	r0, #0
   43a90:	beq	43ae0 <GetDataSlab+0x13b60>
   43a94:	ldr	r0, [sp, #24]
   43a98:	mov	r6, ip
   43a9c:	mov	sl, r7
   43aa0:	mov	r9, r7
   43aa4:	vld1.64	{d16-d17}, [r9], r3
   43aa8:	add	r5, sl, #16
   43aac:	subs	r0, r0, #2
   43ab0:	add	r2, r2, #4
   43ab4:	mov	sl, r9
   43ab8:	vmovn.i64	d16, q8
   43abc:	vuzp.16	d16, d17
   43ac0:	vst1.32	{d16[0]}, [r6]
   43ac4:	vld1.64	{d16-d17}, [r5]
   43ac8:	add	r5, r6, #4
   43acc:	add	r6, r6, #8
   43ad0:	vmovn.i64	d16, q8
   43ad4:	vuzp.16	d16, d17
   43ad8:	vst1.32	{d16[0]}, [r5]
   43adc:	bne	43aa4 <GetDataSlab+0x13b24>
   43ae0:	ldr	r0, [sp, #40]	; 0x28
   43ae4:	ldr	sl, [sp, #44]	; 0x2c
   43ae8:	cmp	r0, #0
   43aec:	beq	43b14 <GetDataSlab+0x13b94>
   43af0:	add	r5, r7, r2, lsl #3
   43af4:	ldr	r0, [sp, #88]	; 0x58
   43af8:	ldr	r3, [sp, #64]	; 0x40
   43afc:	vld1.64	{d16-d17}, [r5]
   43b00:	add	r0, r0, r3, lsl #1
   43b04:	add	r0, r0, r2, lsl #1
   43b08:	vmovn.i64	d16, q8
   43b0c:	vuzp.16	d16, d17
   43b10:	vst1.32	{d16[0]}, [r0]
   43b14:	ldr	r9, [sp, #56]	; 0x38
   43b18:	ldr	r6, [sp, #36]	; 0x24
   43b1c:	cmp	r9, r6
   43b20:	beq	43b50 <GetDataSlab+0x13bd0>
   43b24:	ldr	r3, [sp, #52]	; 0x34
   43b28:	mov	r0, #0
   43b2c:	sub	r2, r9, r6
   43b30:	sub	r0, r0, r6, lsl #1
   43b34:	add	r5, lr, r3, lsl #3
   43b38:	add	r6, r5, r6, lsl #3
   43b3c:	ldrh	r5, [r6], #8
   43b40:	subs	r2, r2, #1
   43b44:	strh	r5, [ip, -r0]
   43b48:	sub	r0, r0, #2
   43b4c:	bne	43b3c <GetDataSlab+0x13bbc>
   43b50:	ldr	r0, [fp, #24]
   43b54:	add	lr, lr, sl, lsl #3
   43b58:	add	r1, r1, sl
   43b5c:	cmp	r0, #2
   43b60:	blt	43a48 <GetDataSlab+0x13ac8>
   43b64:	ldr	r2, [sp, #48]	; 0x30
   43b68:	mov	r0, #0
   43b6c:	b	43b98 <GetDataSlab+0x13c18>
   43b70:	sub	r3, fp, #176	; 0xb0
   43b74:	sub	r5, r6, r5
   43b78:	ldr	r7, [r3, r0]
   43b7c:	ldr	r3, [r8, r0]
   43b80:	mla	r3, r3, r7, r5
   43b84:	add	r1, r3, r1
   43b88:	add	lr, lr, r3, lsl #3
   43b8c:	subs	r2, r2, #1
   43b90:	add	r0, r0, #4
   43b94:	beq	43a48 <GetDataSlab+0x13ac8>
   43b98:	ldr	r5, [r4, r0]
   43b9c:	ldr	r3, [sp, #84]	; 0x54
   43ba0:	add	r5, r5, #1
   43ba4:	str	r5, [r4, r0]
   43ba8:	ldr	r6, [r3, r0]
   43bac:	sdiv	r7, r5, r6
   43bb0:	mls	r5, r7, r6, r5
   43bb4:	cmp	r5, #0
   43bb8:	bne	43a38 <GetDataSlab+0x13ab8>
   43bbc:	mov	r3, #0
   43bc0:	str	r3, [r4, r0]
   43bc4:	ldr	r3, [sp, #72]	; 0x48
   43bc8:	ldr	r6, [r3, r0]
   43bcc:	sdiv	r5, r1, r6
   43bd0:	mls	r5, r5, r6, r1
   43bd4:	cmp	r5, #0
   43bd8:	bne	43b70 <GetDataSlab+0x13bf0>
   43bdc:	ldr	r5, [r8, r0]
   43be0:	cmp	r5, #0
   43be4:	beq	43b8c <GetDataSlab+0x13c0c>
   43be8:	sub	r3, fp, #176	; 0xb0
   43bec:	ldr	r3, [r3, r0]
   43bf0:	mla	r1, r3, r5, r1
   43bf4:	mul	r3, r3, r5
   43bf8:	b	43b88 <GetDataSlab+0x13c08>
   43bfc:	ldr	r0, [sp, #80]	; 0x50
   43c00:	cmp	r5, #1
   43c04:	add	r8, r0, r7
   43c08:	bne	50bd8 <GetDataSlab+0x20c58>
   43c0c:	ldr	r0, [sp, #76]	; 0x4c
   43c10:	ldr	r3, [fp, #20]
   43c14:	sub	r2, fp, #176	; 0xb0
   43c18:	cmp	r0, #1
   43c1c:	blt	56c18 <GetDataSlab+0x26c98>
   43c20:	orr	r2, r2, #4
   43c24:	ldr	lr, [fp, #12]
   43c28:	sub	r0, fp, #136	; 0x88
   43c2c:	add	r3, r3, #4
   43c30:	mov	ip, #0
   43c34:	str	r2, [sp, #80]	; 0x50
   43c38:	ldr	r2, [fp, #24]
   43c3c:	orr	r0, r0, #4
   43c40:	str	r3, [sp, #84]	; 0x54
   43c44:	sub	r2, r2, #1
   43c48:	str	r2, [sp, #64]	; 0x40
   43c4c:	sub	r2, fp, #96	; 0x60
   43c50:	orr	r2, r2, #4
   43c54:	str	r2, [sp, #60]	; 0x3c
   43c58:	ldr	r2, [lr], #4
   43c5c:	str	r2, [sp, #68]	; 0x44
   43c60:	b	43c88 <GetDataSlab+0x13d08>
   43c64:	ldr	r3, [sp, #60]	; 0x3c
   43c68:	ldr	r2, [r3, r2]
   43c6c:	add	r8, r8, r2
   43c70:	add	r7, r2, r7
   43c74:	ldr	r3, [sp, #76]	; 0x4c
   43c78:	add	ip, r1, ip
   43c7c:	mov	r2, #0
   43c80:	cmp	ip, r3
   43c84:	bge	56c1c <GetDataSlab+0x26c9c>
   43c88:	ldr	r4, [sp, #68]	; 0x44
   43c8c:	ldr	r5, [fp, #20]
   43c90:	ldr	r2, [sp, #72]	; 0x48
   43c94:	cmp	r1, #1
   43c98:	add	r3, r4, r7
   43c9c:	add	r7, r8, r4
   43ca0:	blt	43cd8 <GetDataSlab+0x13d58>
   43ca4:	ldr	r1, [sp, #88]	; 0x58
   43ca8:	mov	r2, #0
   43cac:	add	r4, r1, ip, lsl #2
   43cb0:	ldrb	r1, [r7, r2]
   43cb4:	str	r1, [r4, r2, lsl #2]
   43cb8:	add	r2, r2, #1
   43cbc:	ldr	r1, [r5]
   43cc0:	cmp	r2, r1
   43cc4:	blt	43cb0 <GetDataSlab+0x13d30>
   43cc8:	ldr	r2, [fp, #12]
   43ccc:	ldr	r4, [r2]
   43cd0:	ldr	r2, [fp, #8]
   43cd4:	ldr	r2, [r2]
   43cd8:	str	r2, [sp, #72]	; 0x48
   43cdc:	sub	r2, r2, r4
   43ce0:	str	r4, [sp, #68]	; 0x44
   43ce4:	add	r8, r7, r2
   43ce8:	add	r7, r3, r2
   43cec:	ldr	r2, [fp, #24]
   43cf0:	cmp	r2, #2
   43cf4:	blt	43c74 <GetDataSlab+0x13cf4>
   43cf8:	ldr	r9, [sp, #64]	; 0x40
   43cfc:	mov	r2, #0
   43d00:	b	43d2c <GetDataSlab+0x13dac>
   43d04:	sub	r4, fp, #176	; 0xb0
   43d08:	ldr	sl, [lr, r2]
   43d0c:	sub	r3, r3, r5
   43d10:	ldr	r6, [r4, r2]
   43d14:	mla	r3, sl, r6, r3
   43d18:	add	r7, r3, r7
   43d1c:	add	r8, r8, r3
   43d20:	subs	r9, r9, #1
   43d24:	add	r2, r2, #4
   43d28:	beq	43c74 <GetDataSlab+0x13cf4>
   43d2c:	ldr	r3, [r0, r2]
   43d30:	ldr	r4, [sp, #84]	; 0x54
   43d34:	add	r3, r3, #1
   43d38:	str	r3, [r0, r2]
   43d3c:	ldr	r5, [r4, r2]
   43d40:	sdiv	r6, r3, r5
   43d44:	mls	r3, r6, r5, r3
   43d48:	cmp	r3, #0
   43d4c:	bne	43c64 <GetDataSlab+0x13ce4>
   43d50:	mov	r3, #0
   43d54:	str	r3, [r0, r2]
   43d58:	ldr	r3, [sp, #80]	; 0x50
   43d5c:	ldr	r3, [r3, r2]
   43d60:	sdiv	r5, r7, r3
   43d64:	mls	r5, r5, r3, r7
   43d68:	cmp	r5, #0
   43d6c:	bne	43d04 <GetDataSlab+0x13d84>
   43d70:	ldr	r3, [lr, r2]
   43d74:	cmp	r3, #0
   43d78:	beq	43d20 <GetDataSlab+0x13da0>
   43d7c:	sub	r4, fp, #176	; 0xb0
   43d80:	ldr	r5, [r4, r2]
   43d84:	mla	r7, r5, r3, r7
   43d88:	mla	r8, r5, r3, r8
   43d8c:	b	43d20 <GetDataSlab+0x13da0>
   43d90:	ldr	r0, [sp, #80]	; 0x50
   43d94:	cmp	r5, #1
   43d98:	add	sl, r0, r7, lsl #1
   43d9c:	bne	50d84 <GetDataSlab+0x20e04>
   43da0:	ldr	r0, [sp, #76]	; 0x4c
   43da4:	ldr	r3, [fp, #20]
   43da8:	sub	r2, fp, #176	; 0xb0
   43dac:	cmp	r0, #1
   43db0:	blt	56c18 <GetDataSlab+0x26c98>
   43db4:	orr	r2, r2, #4
   43db8:	ldr	lr, [fp, #12]
   43dbc:	sub	r0, fp, #136	; 0x88
   43dc0:	add	r4, r3, #4
   43dc4:	str	r2, [sp, #84]	; 0x54
   43dc8:	ldr	r2, [fp, #24]
   43dcc:	orr	r0, r0, #4
   43dd0:	sub	r2, r2, #1
   43dd4:	str	r2, [sp, #68]	; 0x44
   43dd8:	orr	r2, r8, #4
   43ddc:	mov	r8, #0
   43de0:	str	r2, [sp, #64]	; 0x40
   43de4:	ldr	r2, [lr], #4
   43de8:	str	r2, [sp, #80]	; 0x50
   43dec:	b	43e14 <GetDataSlab+0x13e94>
   43df0:	ldr	r3, [sp, #64]	; 0x40
   43df4:	ldr	r2, [r3, r2]
   43df8:	add	sl, sl, r2, lsl #1
   43dfc:	add	r7, r2, r7
   43e00:	ldr	r3, [sp, #76]	; 0x4c
   43e04:	add	r8, r1, r8
   43e08:	mov	r2, #0
   43e0c:	cmp	r8, r3
   43e10:	bge	56c1c <GetDataSlab+0x26c9c>
   43e14:	ldr	r5, [sp, #80]	; 0x50
   43e18:	ldr	r2, [sp, #72]	; 0x48
   43e1c:	cmp	r1, #1
   43e20:	sub	ip, fp, #176	; 0xb0
   43e24:	add	r9, sl, r5, lsl #1
   43e28:	add	r3, r5, r7
   43e2c:	blt	43e74 <GetDataSlab+0x13ef4>
   43e30:	ldr	r1, [sp, #88]	; 0x58
   43e34:	ldr	r5, [fp, #20]
   43e38:	mov	r6, r4
   43e3c:	mov	r2, #0
   43e40:	mov	r7, r9
   43e44:	add	r4, r1, r8, lsl #2
   43e48:	ldrsh	r1, [r7], #2
   43e4c:	str	r1, [r4, r2, lsl #2]
   43e50:	add	r2, r2, #1
   43e54:	ldr	r1, [r5]
   43e58:	cmp	r2, r1
   43e5c:	blt	43e48 <GetDataSlab+0x13ec8>
   43e60:	ldr	r2, [fp, #12]
   43e64:	mov	r4, r6
   43e68:	ldr	r5, [r2]
   43e6c:	ldr	r2, [fp, #8]
   43e70:	ldr	r2, [r2]
   43e74:	str	r2, [sp, #72]	; 0x48
   43e78:	sub	r2, r2, r5
   43e7c:	str	r5, [sp, #80]	; 0x50
   43e80:	add	sl, r9, r2, lsl #1
   43e84:	add	r7, r3, r2
   43e88:	ldr	r2, [fp, #24]
   43e8c:	cmp	r2, #2
   43e90:	blt	43e00 <GetDataSlab+0x13e80>
   43e94:	ldr	r9, [sp, #68]	; 0x44
   43e98:	mov	r2, #0
   43e9c:	b	43ec8 <GetDataSlab+0x13f48>
   43ea0:	ldr	r6, [ip, r2]
   43ea4:	ldr	ip, [lr, r2]
   43ea8:	sub	r3, r3, r5
   43eac:	mla	r3, ip, r6, r3
   43eb0:	sub	ip, fp, #176	; 0xb0
   43eb4:	add	r7, r3, r7
   43eb8:	add	sl, sl, r3, lsl #1
   43ebc:	subs	r9, r9, #1
   43ec0:	add	r2, r2, #4
   43ec4:	beq	43e00 <GetDataSlab+0x13e80>
   43ec8:	ldr	r3, [r0, r2]
   43ecc:	add	r3, r3, #1
   43ed0:	str	r3, [r0, r2]
   43ed4:	ldr	r5, [r4, r2]
   43ed8:	sdiv	r6, r3, r5
   43edc:	mls	r3, r6, r5, r3
   43ee0:	cmp	r3, #0
   43ee4:	bne	43df0 <GetDataSlab+0x13e70>
   43ee8:	mov	r3, #0
   43eec:	str	r3, [r0, r2]
   43ef0:	ldr	r3, [sp, #84]	; 0x54
   43ef4:	ldr	r3, [r3, r2]
   43ef8:	sdiv	r5, r7, r3
   43efc:	mls	r5, r5, r3, r7
   43f00:	cmp	r5, #0
   43f04:	bne	43ea0 <GetDataSlab+0x13f20>
   43f08:	ldr	r3, [lr, r2]
   43f0c:	cmp	r3, #0
   43f10:	beq	43ebc <GetDataSlab+0x13f3c>
   43f14:	ldr	r6, [ip, r2]
   43f18:	mla	r7, r6, r3, r7
   43f1c:	mul	r3, r6, r3
   43f20:	b	43eb8 <GetDataSlab+0x13f38>
   43f24:	ldr	r0, [sp, #80]	; 0x50
   43f28:	cmp	r5, #1
   43f2c:	add	sl, r0, r7, lsl #1
   43f30:	bne	50f30 <GetDataSlab+0x20fb0>
   43f34:	ldr	r0, [sp, #76]	; 0x4c
   43f38:	ldr	r3, [fp, #20]
   43f3c:	sub	r2, fp, #176	; 0xb0
   43f40:	cmp	r0, #1
   43f44:	blt	56c18 <GetDataSlab+0x26c98>
   43f48:	orr	r2, r2, #4
   43f4c:	ldr	lr, [fp, #12]
   43f50:	sub	r0, fp, #136	; 0x88
   43f54:	add	r4, r3, #4
   43f58:	str	r2, [sp, #84]	; 0x54
   43f5c:	ldr	r2, [fp, #24]
   43f60:	orr	r0, r0, #4
   43f64:	sub	r2, r2, #1
   43f68:	str	r2, [sp, #68]	; 0x44
   43f6c:	orr	r2, r8, #4
   43f70:	mov	r8, #0
   43f74:	str	r2, [sp, #64]	; 0x40
   43f78:	ldr	r2, [lr], #4
   43f7c:	str	r2, [sp, #80]	; 0x50
   43f80:	b	43fa8 <GetDataSlab+0x14028>
   43f84:	ldr	r3, [sp, #64]	; 0x40
   43f88:	ldr	r2, [r3, r2]
   43f8c:	add	sl, sl, r2, lsl #1
   43f90:	add	r7, r2, r7
   43f94:	ldr	r3, [sp, #76]	; 0x4c
   43f98:	add	r8, r1, r8
   43f9c:	mov	r2, #0
   43fa0:	cmp	r8, r3
   43fa4:	bge	56c1c <GetDataSlab+0x26c9c>
   43fa8:	ldr	r5, [sp, #80]	; 0x50
   43fac:	ldr	r2, [sp, #72]	; 0x48
   43fb0:	cmp	r1, #1
   43fb4:	sub	ip, fp, #176	; 0xb0
   43fb8:	add	r9, sl, r5, lsl #1
   43fbc:	add	r3, r5, r7
   43fc0:	blt	44008 <GetDataSlab+0x14088>
   43fc4:	ldr	r1, [sp, #88]	; 0x58
   43fc8:	ldr	r5, [fp, #20]
   43fcc:	mov	r6, r4
   43fd0:	mov	r2, #0
   43fd4:	mov	r7, r9
   43fd8:	add	r4, r1, r8, lsl #2
   43fdc:	ldrh	r1, [r7], #2
   43fe0:	str	r1, [r4, r2, lsl #2]
   43fe4:	add	r2, r2, #1
   43fe8:	ldr	r1, [r5]
   43fec:	cmp	r2, r1
   43ff0:	blt	43fdc <GetDataSlab+0x1405c>
   43ff4:	ldr	r2, [fp, #12]
   43ff8:	mov	r4, r6
   43ffc:	ldr	r5, [r2]
   44000:	ldr	r2, [fp, #8]
   44004:	ldr	r2, [r2]
   44008:	str	r2, [sp, #72]	; 0x48
   4400c:	sub	r2, r2, r5
   44010:	str	r5, [sp, #80]	; 0x50
   44014:	add	sl, r9, r2, lsl #1
   44018:	add	r7, r3, r2
   4401c:	ldr	r2, [fp, #24]
   44020:	cmp	r2, #2
   44024:	blt	43f94 <GetDataSlab+0x14014>
   44028:	ldr	r9, [sp, #68]	; 0x44
   4402c:	mov	r2, #0
   44030:	b	4405c <GetDataSlab+0x140dc>
   44034:	ldr	r6, [ip, r2]
   44038:	ldr	ip, [lr, r2]
   4403c:	sub	r3, r3, r5
   44040:	mla	r3, ip, r6, r3
   44044:	sub	ip, fp, #176	; 0xb0
   44048:	add	r7, r3, r7
   4404c:	add	sl, sl, r3, lsl #1
   44050:	subs	r9, r9, #1
   44054:	add	r2, r2, #4
   44058:	beq	43f94 <GetDataSlab+0x14014>
   4405c:	ldr	r3, [r0, r2]
   44060:	add	r3, r3, #1
   44064:	str	r3, [r0, r2]
   44068:	ldr	r5, [r4, r2]
   4406c:	sdiv	r6, r3, r5
   44070:	mls	r3, r6, r5, r3
   44074:	cmp	r3, #0
   44078:	bne	43f84 <GetDataSlab+0x14004>
   4407c:	mov	r3, #0
   44080:	str	r3, [r0, r2]
   44084:	ldr	r3, [sp, #84]	; 0x54
   44088:	ldr	r3, [r3, r2]
   4408c:	sdiv	r5, r7, r3
   44090:	mls	r5, r5, r3, r7
   44094:	cmp	r5, #0
   44098:	bne	44034 <GetDataSlab+0x140b4>
   4409c:	ldr	r3, [lr, r2]
   440a0:	cmp	r3, #0
   440a4:	beq	44050 <GetDataSlab+0x140d0>
   440a8:	ldr	r6, [ip, r2]
   440ac:	mla	r7, r6, r3, r7
   440b0:	mul	r3, r6, r3
   440b4:	b	4404c <GetDataSlab+0x140cc>
   440b8:	ldr	r0, [sp, #80]	; 0x50
   440bc:	cmp	r5, #1
   440c0:	add	r8, r0, r7, lsl #2
   440c4:	bne	510dc <GetDataSlab+0x2115c>
   440c8:	ldr	r0, [sp, #76]	; 0x4c
   440cc:	ldr	r3, [fp, #20]
   440d0:	sub	r2, fp, #176	; 0xb0
   440d4:	cmp	r0, #1
   440d8:	blt	56c18 <GetDataSlab+0x26c98>
   440dc:	orr	r2, r2, #4
   440e0:	ldr	lr, [fp, #12]
   440e4:	sub	r0, fp, #136	; 0x88
   440e8:	add	r3, r3, #4
   440ec:	mov	ip, #0
   440f0:	str	r2, [sp, #80]	; 0x50
   440f4:	ldr	r2, [fp, #24]
   440f8:	orr	r0, r0, #4
   440fc:	str	r3, [sp, #84]	; 0x54
   44100:	sub	r2, r2, #1
   44104:	str	r2, [sp, #64]	; 0x40
   44108:	sub	r2, fp, #96	; 0x60
   4410c:	orr	r2, r2, #4
   44110:	str	r2, [sp, #60]	; 0x3c
   44114:	ldr	r2, [lr], #4
   44118:	str	r2, [sp, #68]	; 0x44
   4411c:	b	44144 <GetDataSlab+0x141c4>
   44120:	ldr	r3, [sp, #60]	; 0x3c
   44124:	ldr	r2, [r3, r2]
   44128:	add	r8, r8, r2, lsl #2
   4412c:	add	r7, r2, r7
   44130:	ldr	r3, [sp, #76]	; 0x4c
   44134:	add	ip, r1, ip
   44138:	mov	r2, #0
   4413c:	cmp	ip, r3
   44140:	bge	56c1c <GetDataSlab+0x26c9c>
   44144:	ldr	r4, [sp, #68]	; 0x44
   44148:	ldr	r5, [fp, #20]
   4414c:	ldr	r2, [sp, #72]	; 0x48
   44150:	cmp	r1, #1
   44154:	add	r3, r4, r7
   44158:	add	r7, r8, r4, lsl #2
   4415c:	blt	44194 <GetDataSlab+0x14214>
   44160:	ldr	r1, [sp, #88]	; 0x58
   44164:	mov	r2, #0
   44168:	add	r4, r1, ip, lsl #2
   4416c:	ldr	r1, [r7, r2, lsl #2]
   44170:	str	r1, [r4, r2, lsl #2]
   44174:	add	r2, r2, #1
   44178:	ldr	r1, [r5]
   4417c:	cmp	r2, r1
   44180:	blt	4416c <GetDataSlab+0x141ec>
   44184:	ldr	r2, [fp, #12]
   44188:	ldr	r4, [r2]
   4418c:	ldr	r2, [fp, #8]
   44190:	ldr	r2, [r2]
   44194:	str	r2, [sp, #72]	; 0x48
   44198:	sub	r2, r2, r4
   4419c:	str	r4, [sp, #68]	; 0x44
   441a0:	add	r8, r7, r2, lsl #2
   441a4:	add	r7, r3, r2
   441a8:	ldr	r2, [fp, #24]
   441ac:	cmp	r2, #2
   441b0:	blt	44130 <GetDataSlab+0x141b0>
   441b4:	ldr	r9, [sp, #64]	; 0x40
   441b8:	mov	r2, #0
   441bc:	b	441e8 <GetDataSlab+0x14268>
   441c0:	sub	r4, fp, #176	; 0xb0
   441c4:	ldr	sl, [lr, r2]
   441c8:	sub	r3, r3, r5
   441cc:	ldr	r6, [r4, r2]
   441d0:	mla	r3, sl, r6, r3
   441d4:	add	r7, r3, r7
   441d8:	add	r8, r8, r3, lsl #2
   441dc:	subs	r9, r9, #1
   441e0:	add	r2, r2, #4
   441e4:	beq	44130 <GetDataSlab+0x141b0>
   441e8:	ldr	r3, [r0, r2]
   441ec:	ldr	r4, [sp, #84]	; 0x54
   441f0:	add	r3, r3, #1
   441f4:	str	r3, [r0, r2]
   441f8:	ldr	r5, [r4, r2]
   441fc:	sdiv	r6, r3, r5
   44200:	mls	r3, r6, r5, r3
   44204:	cmp	r3, #0
   44208:	bne	44120 <GetDataSlab+0x141a0>
   4420c:	mov	r3, #0
   44210:	str	r3, [r0, r2]
   44214:	ldr	r3, [sp, #80]	; 0x50
   44218:	ldr	r3, [r3, r2]
   4421c:	sdiv	r5, r7, r3
   44220:	mls	r5, r5, r3, r7
   44224:	cmp	r5, #0
   44228:	bne	441c0 <GetDataSlab+0x14240>
   4422c:	ldr	r3, [lr, r2]
   44230:	cmp	r3, #0
   44234:	beq	441dc <GetDataSlab+0x1425c>
   44238:	sub	r4, fp, #176	; 0xb0
   4423c:	ldr	r5, [r4, r2]
   44240:	mla	r7, r5, r3, r7
   44244:	mul	r3, r5, r3
   44248:	b	441d8 <GetDataSlab+0x14258>
   4424c:	ldr	r0, [sp, #80]	; 0x50
   44250:	cmp	r5, #1
   44254:	add	r8, r0, r7, lsl #2
   44258:	bne	51288 <GetDataSlab+0x21308>
   4425c:	ldr	r0, [sp, #76]	; 0x4c
   44260:	ldr	r3, [fp, #20]
   44264:	sub	r2, fp, #176	; 0xb0
   44268:	cmp	r0, #1
   4426c:	blt	56c18 <GetDataSlab+0x26c98>
   44270:	orr	r2, r2, #4
   44274:	ldr	lr, [fp, #12]
   44278:	sub	r0, fp, #136	; 0x88
   4427c:	add	r3, r3, #4
   44280:	mov	ip, #0
   44284:	str	r2, [sp, #80]	; 0x50
   44288:	ldr	r2, [fp, #24]
   4428c:	orr	r0, r0, #4
   44290:	str	r3, [sp, #84]	; 0x54
   44294:	sub	r2, r2, #1
   44298:	str	r2, [sp, #64]	; 0x40
   4429c:	sub	r2, fp, #96	; 0x60
   442a0:	orr	r2, r2, #4
   442a4:	str	r2, [sp, #60]	; 0x3c
   442a8:	ldr	r2, [lr], #4
   442ac:	str	r2, [sp, #68]	; 0x44
   442b0:	b	442d8 <GetDataSlab+0x14358>
   442b4:	ldr	r3, [sp, #60]	; 0x3c
   442b8:	ldr	r2, [r3, r2]
   442bc:	add	r8, r8, r2, lsl #2
   442c0:	add	r7, r2, r7
   442c4:	ldr	r3, [sp, #76]	; 0x4c
   442c8:	add	ip, r1, ip
   442cc:	mov	r2, #0
   442d0:	cmp	ip, r3
   442d4:	bge	56c1c <GetDataSlab+0x26c9c>
   442d8:	ldr	r4, [sp, #68]	; 0x44
   442dc:	ldr	r5, [fp, #20]
   442e0:	ldr	r2, [sp, #72]	; 0x48
   442e4:	cmp	r1, #1
   442e8:	add	r3, r4, r7
   442ec:	add	r7, r8, r4, lsl #2
   442f0:	blt	44328 <GetDataSlab+0x143a8>
   442f4:	ldr	r1, [sp, #88]	; 0x58
   442f8:	mov	r2, #0
   442fc:	add	r4, r1, ip, lsl #2
   44300:	ldr	r1, [r7, r2, lsl #2]
   44304:	str	r1, [r4, r2, lsl #2]
   44308:	add	r2, r2, #1
   4430c:	ldr	r1, [r5]
   44310:	cmp	r2, r1
   44314:	blt	44300 <GetDataSlab+0x14380>
   44318:	ldr	r2, [fp, #12]
   4431c:	ldr	r4, [r2]
   44320:	ldr	r2, [fp, #8]
   44324:	ldr	r2, [r2]
   44328:	str	r2, [sp, #72]	; 0x48
   4432c:	sub	r2, r2, r4
   44330:	str	r4, [sp, #68]	; 0x44
   44334:	add	r8, r7, r2, lsl #2
   44338:	add	r7, r3, r2
   4433c:	ldr	r2, [fp, #24]
   44340:	cmp	r2, #2
   44344:	blt	442c4 <GetDataSlab+0x14344>
   44348:	ldr	r9, [sp, #64]	; 0x40
   4434c:	mov	r2, #0
   44350:	b	4437c <GetDataSlab+0x143fc>
   44354:	sub	r4, fp, #176	; 0xb0
   44358:	ldr	sl, [lr, r2]
   4435c:	sub	r3, r3, r5
   44360:	ldr	r6, [r4, r2]
   44364:	mla	r3, sl, r6, r3
   44368:	add	r7, r3, r7
   4436c:	add	r8, r8, r3, lsl #2
   44370:	subs	r9, r9, #1
   44374:	add	r2, r2, #4
   44378:	beq	442c4 <GetDataSlab+0x14344>
   4437c:	ldr	r3, [r0, r2]
   44380:	ldr	r4, [sp, #84]	; 0x54
   44384:	add	r3, r3, #1
   44388:	str	r3, [r0, r2]
   4438c:	ldr	r5, [r4, r2]
   44390:	sdiv	r6, r3, r5
   44394:	mls	r3, r6, r5, r3
   44398:	cmp	r3, #0
   4439c:	bne	442b4 <GetDataSlab+0x14334>
   443a0:	mov	r3, #0
   443a4:	str	r3, [r0, r2]
   443a8:	ldr	r3, [sp, #80]	; 0x50
   443ac:	ldr	r3, [r3, r2]
   443b0:	sdiv	r5, r7, r3
   443b4:	mls	r5, r5, r3, r7
   443b8:	cmp	r5, #0
   443bc:	bne	44354 <GetDataSlab+0x143d4>
   443c0:	ldr	r3, [lr, r2]
   443c4:	cmp	r3, #0
   443c8:	beq	44370 <GetDataSlab+0x143f0>
   443cc:	sub	r4, fp, #176	; 0xb0
   443d0:	ldr	r5, [r4, r2]
   443d4:	mla	r7, r5, r3, r7
   443d8:	mul	r3, r5, r3
   443dc:	b	4436c <GetDataSlab+0x143ec>
   443e0:	ldr	r0, [sp, #80]	; 0x50
   443e4:	cmp	r5, #1
   443e8:	add	sl, r0, r7, lsl #2
   443ec:	bne	51434 <GetDataSlab+0x214b4>
   443f0:	ldr	r0, [sp, #76]	; 0x4c
   443f4:	ldr	r3, [fp, #20]
   443f8:	sub	r2, fp, #176	; 0xb0
   443fc:	cmp	r0, #1
   44400:	blt	56c18 <GetDataSlab+0x26c98>
   44404:	orr	r2, r2, #4
   44408:	ldr	lr, [fp, #12]
   4440c:	sub	r0, fp, #136	; 0x88
   44410:	add	r4, r3, #4
   44414:	str	r2, [sp, #84]	; 0x54
   44418:	ldr	r2, [fp, #24]
   4441c:	orr	r0, r0, #4
   44420:	sub	r2, r2, #1
   44424:	str	r2, [sp, #68]	; 0x44
   44428:	orr	r2, r8, #4
   4442c:	mov	r8, #0
   44430:	str	r2, [sp, #64]	; 0x40
   44434:	ldr	r2, [lr], #4
   44438:	str	r2, [sp, #80]	; 0x50
   4443c:	b	44464 <GetDataSlab+0x144e4>
   44440:	ldr	r3, [sp, #64]	; 0x40
   44444:	ldr	r2, [r3, r2]
   44448:	add	sl, sl, r2, lsl #2
   4444c:	add	r7, r2, r7
   44450:	ldr	r3, [sp, #76]	; 0x4c
   44454:	add	r8, r1, r8
   44458:	mov	r2, #0
   4445c:	cmp	r8, r3
   44460:	bge	56c1c <GetDataSlab+0x26c9c>
   44464:	ldr	r5, [sp, #80]	; 0x50
   44468:	ldr	r2, [sp, #72]	; 0x48
   4446c:	cmp	r1, #1
   44470:	sub	ip, fp, #176	; 0xb0
   44474:	add	r9, sl, r5, lsl #2
   44478:	add	r3, r5, r7
   4447c:	blt	444d0 <GetDataSlab+0x14550>
   44480:	ldr	r1, [sp, #88]	; 0x58
   44484:	ldr	r5, [fp, #20]
   44488:	mov	r6, r4
   4448c:	mov	r2, #0
   44490:	mov	r7, r9
   44494:	add	r4, r1, r8, lsl #2
   44498:	vldr	s0, [r7]
   4449c:	add	r7, r7, #4
   444a0:	vcvt.s32.f32	s0, s0
   444a4:	vmov	r1, s0
   444a8:	str	r1, [r4, r2, lsl #2]
   444ac:	add	r2, r2, #1
   444b0:	ldr	r1, [r5]
   444b4:	cmp	r2, r1
   444b8:	blt	44498 <GetDataSlab+0x14518>
   444bc:	ldr	r2, [fp, #12]
   444c0:	mov	r4, r6
   444c4:	ldr	r5, [r2]
   444c8:	ldr	r2, [fp, #8]
   444cc:	ldr	r2, [r2]
   444d0:	str	r2, [sp, #72]	; 0x48
   444d4:	sub	r2, r2, r5
   444d8:	str	r5, [sp, #80]	; 0x50
   444dc:	add	sl, r9, r2, lsl #2
   444e0:	add	r7, r3, r2
   444e4:	ldr	r2, [fp, #24]
   444e8:	cmp	r2, #2
   444ec:	blt	44450 <GetDataSlab+0x144d0>
   444f0:	ldr	r9, [sp, #68]	; 0x44
   444f4:	mov	r2, #0
   444f8:	b	44524 <GetDataSlab+0x145a4>
   444fc:	ldr	r6, [ip, r2]
   44500:	ldr	ip, [lr, r2]
   44504:	sub	r3, r3, r5
   44508:	mla	r3, ip, r6, r3
   4450c:	sub	ip, fp, #176	; 0xb0
   44510:	add	r7, r3, r7
   44514:	add	sl, sl, r3, lsl #2
   44518:	subs	r9, r9, #1
   4451c:	add	r2, r2, #4
   44520:	beq	44450 <GetDataSlab+0x144d0>
   44524:	ldr	r3, [r0, r2]
   44528:	add	r3, r3, #1
   4452c:	str	r3, [r0, r2]
   44530:	ldr	r5, [r4, r2]
   44534:	sdiv	r6, r3, r5
   44538:	mls	r3, r6, r5, r3
   4453c:	cmp	r3, #0
   44540:	bne	44440 <GetDataSlab+0x144c0>
   44544:	mov	r3, #0
   44548:	str	r3, [r0, r2]
   4454c:	ldr	r3, [sp, #84]	; 0x54
   44550:	ldr	r3, [r3, r2]
   44554:	sdiv	r5, r7, r3
   44558:	mls	r5, r5, r3, r7
   4455c:	cmp	r5, #0
   44560:	bne	444fc <GetDataSlab+0x1457c>
   44564:	ldr	r3, [lr, r2]
   44568:	cmp	r3, #0
   4456c:	beq	44518 <GetDataSlab+0x14598>
   44570:	ldr	r6, [ip, r2]
   44574:	mla	r7, r6, r3, r7
   44578:	mul	r3, r6, r3
   4457c:	b	44514 <GetDataSlab+0x14594>
   44580:	ldr	r0, [sp, #80]	; 0x50
   44584:	cmp	r5, #1
   44588:	add	sl, r0, r7, lsl #3
   4458c:	bne	515e8 <GetDataSlab+0x21668>
   44590:	ldr	r0, [sp, #76]	; 0x4c
   44594:	ldr	r3, [fp, #20]
   44598:	sub	r2, fp, #176	; 0xb0
   4459c:	cmp	r0, #1
   445a0:	blt	56c18 <GetDataSlab+0x26c98>
   445a4:	orr	r2, r2, #4
   445a8:	ldr	lr, [fp, #12]
   445ac:	sub	r0, fp, #136	; 0x88
   445b0:	add	r4, r3, #4
   445b4:	str	r2, [sp, #84]	; 0x54
   445b8:	ldr	r2, [fp, #24]
   445bc:	orr	r0, r0, #4
   445c0:	sub	r2, r2, #1
   445c4:	str	r2, [sp, #68]	; 0x44
   445c8:	orr	r2, r8, #4
   445cc:	mov	r8, #0
   445d0:	str	r2, [sp, #64]	; 0x40
   445d4:	ldr	r2, [lr], #4
   445d8:	str	r2, [sp, #80]	; 0x50
   445dc:	b	44604 <GetDataSlab+0x14684>
   445e0:	ldr	r3, [sp, #64]	; 0x40
   445e4:	ldr	r2, [r3, r2]
   445e8:	add	sl, sl, r2, lsl #3
   445ec:	add	r7, r2, r7
   445f0:	ldr	r3, [sp, #76]	; 0x4c
   445f4:	add	r8, r1, r8
   445f8:	mov	r2, #0
   445fc:	cmp	r8, r3
   44600:	bge	56c1c <GetDataSlab+0x26c9c>
   44604:	ldr	r5, [sp, #80]	; 0x50
   44608:	ldr	r2, [sp, #72]	; 0x48
   4460c:	cmp	r1, #1
   44610:	sub	ip, fp, #176	; 0xb0
   44614:	add	r9, sl, r5, lsl #3
   44618:	add	r3, r5, r7
   4461c:	blt	44670 <GetDataSlab+0x146f0>
   44620:	ldr	r1, [sp, #88]	; 0x58
   44624:	ldr	r5, [fp, #20]
   44628:	mov	r6, r4
   4462c:	mov	r2, #0
   44630:	mov	r7, r9
   44634:	add	r4, r1, r8, lsl #2
   44638:	vldr	d16, [r7]
   4463c:	add	r7, r7, #8
   44640:	vcvt.s32.f64	s0, d16
   44644:	vmov	r1, s0
   44648:	str	r1, [r4, r2, lsl #2]
   4464c:	add	r2, r2, #1
   44650:	ldr	r1, [r5]
   44654:	cmp	r2, r1
   44658:	blt	44638 <GetDataSlab+0x146b8>
   4465c:	ldr	r2, [fp, #12]
   44660:	mov	r4, r6
   44664:	ldr	r5, [r2]
   44668:	ldr	r2, [fp, #8]
   4466c:	ldr	r2, [r2]
   44670:	str	r2, [sp, #72]	; 0x48
   44674:	sub	r2, r2, r5
   44678:	str	r5, [sp, #80]	; 0x50
   4467c:	add	sl, r9, r2, lsl #3
   44680:	add	r7, r3, r2
   44684:	ldr	r2, [fp, #24]
   44688:	cmp	r2, #2
   4468c:	blt	445f0 <GetDataSlab+0x14670>
   44690:	ldr	r9, [sp, #68]	; 0x44
   44694:	mov	r2, #0
   44698:	b	446c4 <GetDataSlab+0x14744>
   4469c:	ldr	r6, [ip, r2]
   446a0:	ldr	ip, [lr, r2]
   446a4:	sub	r3, r3, r5
   446a8:	mla	r3, ip, r6, r3
   446ac:	sub	ip, fp, #176	; 0xb0
   446b0:	add	r7, r3, r7
   446b4:	add	sl, sl, r3, lsl #3
   446b8:	subs	r9, r9, #1
   446bc:	add	r2, r2, #4
   446c0:	beq	445f0 <GetDataSlab+0x14670>
   446c4:	ldr	r3, [r0, r2]
   446c8:	add	r3, r3, #1
   446cc:	str	r3, [r0, r2]
   446d0:	ldr	r5, [r4, r2]
   446d4:	sdiv	r6, r3, r5
   446d8:	mls	r3, r6, r5, r3
   446dc:	cmp	r3, #0
   446e0:	bne	445e0 <GetDataSlab+0x14660>
   446e4:	mov	r3, #0
   446e8:	str	r3, [r0, r2]
   446ec:	ldr	r3, [sp, #84]	; 0x54
   446f0:	ldr	r3, [r3, r2]
   446f4:	sdiv	r5, r7, r3
   446f8:	mls	r5, r5, r3, r7
   446fc:	cmp	r5, #0
   44700:	bne	4469c <GetDataSlab+0x1471c>
   44704:	ldr	r3, [lr, r2]
   44708:	cmp	r3, #0
   4470c:	beq	446b8 <GetDataSlab+0x14738>
   44710:	ldr	r6, [ip, r2]
   44714:	mla	r7, r6, r3, r7
   44718:	mul	r3, r6, r3
   4471c:	b	446b4 <GetDataSlab+0x14734>
   44720:	ldr	r0, [sp, #80]	; 0x50
   44724:	cmp	r7, #1
   44728:	add	r9, r0, r3, lsl #3
   4472c:	bne	5179c <GetDataSlab+0x2181c>
   44730:	ldr	r0, [sp, #68]	; 0x44
   44734:	sub	ip, fp, #176	; 0xb0
   44738:	cmp	r0, #1
   4473c:	blt	5193c <GetDataSlab+0x219bc>
   44740:	ldr	r2, [fp, #20]
   44744:	ldr	sl, [fp, #12]
   44748:	sub	r0, fp, #136	; 0x88
   4474c:	mov	lr, #0
   44750:	orr	r0, r0, #4
   44754:	add	r5, r2, #4
   44758:	orr	r2, ip, #4
   4475c:	ldr	r7, [sl], #4
   44760:	str	r2, [sp, #84]	; 0x54
   44764:	ldr	r2, [fp, #24]
   44768:	sub	r2, r2, #1
   4476c:	str	r2, [sp, #60]	; 0x3c
   44770:	orr	r2, r8, #4
   44774:	str	r2, [sp, #56]	; 0x38
   44778:	b	447a0 <GetDataSlab+0x14820>
   4477c:	ldr	r2, [sp, #56]	; 0x38
   44780:	ldr	r2, [r2, r7]
   44784:	add	r9, r9, r2, lsl #3
   44788:	add	r3, r2, r3
   4478c:	ldr	r2, [sp, #68]	; 0x44
   44790:	ldr	r7, [sp, #72]	; 0x48
   44794:	add	lr, r1, lr
   44798:	cmp	lr, r2
   4479c:	bge	5193c <GetDataSlab+0x219bc>
   447a0:	ldr	r2, [sp, #64]	; 0x40
   447a4:	add	r4, r9, r7, lsl #3
   447a8:	add	r8, r7, r3
   447ac:	cmp	r1, #1
   447b0:	blt	447f8 <GetDataSlab+0x14878>
   447b4:	ldr	r1, [sp, #88]	; 0x58
   447b8:	ldr	r2, [fp, #20]
   447bc:	mov	r6, r5
   447c0:	mov	r3, #0
   447c4:	mov	r5, r4
   447c8:	add	r7, r1, lr, lsl #2
   447cc:	ldr	r1, [r5], #8
   447d0:	str	r1, [r7, r3, lsl #2]
   447d4:	add	r3, r3, #1
   447d8:	ldr	r1, [r2]
   447dc:	cmp	r3, r1
   447e0:	blt	447cc <GetDataSlab+0x1484c>
   447e4:	ldr	r2, [fp, #12]
   447e8:	mov	r5, r6
   447ec:	ldr	r7, [r2]
   447f0:	ldr	r2, [fp, #8]
   447f4:	ldr	r2, [r2]
   447f8:	str	r2, [sp, #64]	; 0x40
   447fc:	sub	r2, r2, r7
   44800:	str	r7, [sp, #72]	; 0x48
   44804:	add	r9, r4, r2, lsl #3
   44808:	add	r3, r8, r2
   4480c:	ldr	r2, [fp, #24]
   44810:	cmp	r2, #2
   44814:	blt	4478c <GetDataSlab+0x1480c>
   44818:	ldr	r8, [sp, #60]	; 0x3c
   4481c:	mov	r7, #0
   44820:	b	4484c <GetDataSlab+0x148cc>
   44824:	ldr	r4, [ip, r7]
   44828:	ldr	ip, [sl, r7]
   4482c:	sub	r2, r2, r6
   44830:	mla	r2, ip, r4, r2
   44834:	sub	ip, fp, #176	; 0xb0
   44838:	add	r3, r2, r3
   4483c:	add	r9, r9, r2, lsl #3
   44840:	subs	r8, r8, #1
   44844:	add	r7, r7, #4
   44848:	beq	4478c <GetDataSlab+0x1480c>
   4484c:	ldr	r2, [r0, r7]
   44850:	add	r2, r2, #1
   44854:	str	r2, [r0, r7]
   44858:	ldr	r6, [r5, r7]
   4485c:	sdiv	r4, r2, r6
   44860:	mls	r2, r4, r6, r2
   44864:	cmp	r2, #0
   44868:	bne	4477c <GetDataSlab+0x147fc>
   4486c:	mov	r2, #0
   44870:	str	r2, [r0, r7]
   44874:	ldr	r2, [sp, #84]	; 0x54
   44878:	ldr	r2, [r2, r7]
   4487c:	sdiv	r4, r3, r2
   44880:	mls	r6, r4, r2, r3
   44884:	cmp	r6, #0
   44888:	bne	44824 <GetDataSlab+0x148a4>
   4488c:	ldr	r2, [sl, r7]
   44890:	cmp	r2, #0
   44894:	beq	44840 <GetDataSlab+0x148c0>
   44898:	ldr	r6, [ip, r7]
   4489c:	mla	r3, r6, r2, r3
   448a0:	mul	r2, r6, r2
   448a4:	b	4483c <GetDataSlab+0x148bc>
   448a8:	ldr	r0, [sp, #80]	; 0x50
   448ac:	cmp	r5, #1
   448b0:	add	r8, r0, r7
   448b4:	bne	51c98 <GetDataSlab+0x21d18>
   448b8:	ldr	r0, [sp, #76]	; 0x4c
   448bc:	ldr	r3, [fp, #20]
   448c0:	sub	r2, fp, #176	; 0xb0
   448c4:	cmp	r0, #1
   448c8:	blt	56c18 <GetDataSlab+0x26c98>
   448cc:	orr	r2, r2, #4
   448d0:	ldr	lr, [fp, #12]
   448d4:	sub	r0, fp, #136	; 0x88
   448d8:	add	r3, r3, #4
   448dc:	mov	ip, #0
   448e0:	str	r2, [sp, #80]	; 0x50
   448e4:	ldr	r2, [fp, #24]
   448e8:	orr	r0, r0, #4
   448ec:	str	r3, [sp, #84]	; 0x54
   448f0:	sub	r2, r2, #1
   448f4:	str	r2, [sp, #64]	; 0x40
   448f8:	sub	r2, fp, #96	; 0x60
   448fc:	orr	r2, r2, #4
   44900:	str	r2, [sp, #60]	; 0x3c
   44904:	ldr	r2, [lr], #4
   44908:	str	r2, [sp, #68]	; 0x44
   4490c:	b	44934 <GetDataSlab+0x149b4>
   44910:	ldr	r3, [sp, #60]	; 0x3c
   44914:	ldr	r2, [r3, r2]
   44918:	add	r8, r8, r2
   4491c:	add	r7, r2, r7
   44920:	ldr	r2, [sp, #76]	; 0x4c
   44924:	add	ip, r1, ip
   44928:	cmp	ip, r2
   4492c:	mov	r2, #0
   44930:	bge	56c1c <GetDataSlab+0x26c9c>
   44934:	ldr	r4, [sp, #68]	; 0x44
   44938:	ldr	r5, [fp, #20]
   4493c:	ldr	r2, [sp, #72]	; 0x48
   44940:	cmp	r1, #1
   44944:	add	r3, r4, r7
   44948:	add	r7, r8, r4
   4494c:	blt	44984 <GetDataSlab+0x14a04>
   44950:	ldr	r1, [sp, #88]	; 0x58
   44954:	mov	r2, #0
   44958:	add	r4, r1, ip, lsl #2
   4495c:	ldrb	r1, [r7, r2]
   44960:	str	r1, [r4, r2, lsl #2]
   44964:	add	r2, r2, #1
   44968:	ldr	r1, [r5]
   4496c:	cmp	r2, r1
   44970:	blt	4495c <GetDataSlab+0x149dc>
   44974:	ldr	r2, [fp, #12]
   44978:	ldr	r4, [r2]
   4497c:	ldr	r2, [fp, #8]
   44980:	ldr	r2, [r2]
   44984:	str	r2, [sp, #72]	; 0x48
   44988:	sub	r2, r2, r4
   4498c:	str	r4, [sp, #68]	; 0x44
   44990:	add	r8, r7, r2
   44994:	add	r7, r3, r2
   44998:	ldr	r2, [fp, #24]
   4499c:	cmp	r2, #2
   449a0:	blt	44920 <GetDataSlab+0x149a0>
   449a4:	ldr	r9, [sp, #64]	; 0x40
   449a8:	mov	r2, #0
   449ac:	b	449d8 <GetDataSlab+0x14a58>
   449b0:	sub	r4, fp, #176	; 0xb0
   449b4:	ldr	sl, [lr, r2]
   449b8:	sub	r3, r3, r5
   449bc:	ldr	r6, [r4, r2]
   449c0:	mla	r3, sl, r6, r3
   449c4:	add	r7, r3, r7
   449c8:	add	r8, r8, r3
   449cc:	subs	r9, r9, #1
   449d0:	add	r2, r2, #4
   449d4:	beq	44920 <GetDataSlab+0x149a0>
   449d8:	ldr	r3, [r0, r2]
   449dc:	ldr	r4, [sp, #84]	; 0x54
   449e0:	add	r3, r3, #1
   449e4:	str	r3, [r0, r2]
   449e8:	ldr	r5, [r4, r2]
   449ec:	sdiv	r6, r3, r5
   449f0:	mls	r3, r6, r5, r3
   449f4:	cmp	r3, #0
   449f8:	bne	44910 <GetDataSlab+0x14990>
   449fc:	mov	r3, #0
   44a00:	str	r3, [r0, r2]
   44a04:	ldr	r3, [sp, #80]	; 0x50
   44a08:	ldr	r3, [r3, r2]
   44a0c:	sdiv	r5, r7, r3
   44a10:	mls	r5, r5, r3, r7
   44a14:	cmp	r5, #0
   44a18:	bne	449b0 <GetDataSlab+0x14a30>
   44a1c:	ldr	r3, [lr, r2]
   44a20:	cmp	r3, #0
   44a24:	beq	449cc <GetDataSlab+0x14a4c>
   44a28:	sub	r4, fp, #176	; 0xb0
   44a2c:	ldr	r5, [r4, r2]
   44a30:	mla	r7, r5, r3, r7
   44a34:	mla	r8, r5, r3, r8
   44a38:	b	449cc <GetDataSlab+0x14a4c>
   44a3c:	ldr	r0, [sp, #80]	; 0x50
   44a40:	cmp	r5, #1
   44a44:	add	sl, r0, r7, lsl #1
   44a48:	bne	51e44 <GetDataSlab+0x21ec4>
   44a4c:	ldr	r0, [sp, #76]	; 0x4c
   44a50:	ldr	r3, [fp, #20]
   44a54:	sub	r2, fp, #176	; 0xb0
   44a58:	cmp	r0, #1
   44a5c:	blt	56c18 <GetDataSlab+0x26c98>
   44a60:	orr	r2, r2, #4
   44a64:	ldr	lr, [fp, #12]
   44a68:	sub	r0, fp, #136	; 0x88
   44a6c:	add	r4, r3, #4
   44a70:	str	r2, [sp, #84]	; 0x54
   44a74:	ldr	r2, [fp, #24]
   44a78:	orr	r0, r0, #4
   44a7c:	sub	r2, r2, #1
   44a80:	str	r2, [sp, #68]	; 0x44
   44a84:	orr	r2, r8, #4
   44a88:	mov	r8, #0
   44a8c:	str	r2, [sp, #64]	; 0x40
   44a90:	ldr	r2, [lr], #4
   44a94:	str	r2, [sp, #80]	; 0x50
   44a98:	b	44ac0 <GetDataSlab+0x14b40>
   44a9c:	ldr	r3, [sp, #64]	; 0x40
   44aa0:	ldr	r2, [r3, r2]
   44aa4:	add	sl, sl, r2, lsl #1
   44aa8:	add	r7, r2, r7
   44aac:	ldr	r3, [sp, #76]	; 0x4c
   44ab0:	add	r8, r1, r8
   44ab4:	mov	r2, #0
   44ab8:	cmp	r8, r3
   44abc:	bge	56c1c <GetDataSlab+0x26c9c>
   44ac0:	ldr	r5, [sp, #80]	; 0x50
   44ac4:	ldr	r2, [sp, #72]	; 0x48
   44ac8:	cmp	r1, #1
   44acc:	sub	ip, fp, #176	; 0xb0
   44ad0:	add	r9, sl, r5, lsl #1
   44ad4:	add	r3, r5, r7
   44ad8:	blt	44b20 <GetDataSlab+0x14ba0>
   44adc:	ldr	r1, [sp, #88]	; 0x58
   44ae0:	ldr	r5, [fp, #20]
   44ae4:	mov	r6, r4
   44ae8:	mov	r2, #0
   44aec:	mov	r7, r9
   44af0:	add	r4, r1, r8, lsl #2
   44af4:	ldrsh	r1, [r7], #2
   44af8:	str	r1, [r4, r2, lsl #2]
   44afc:	add	r2, r2, #1
   44b00:	ldr	r1, [r5]
   44b04:	cmp	r2, r1
   44b08:	blt	44af4 <GetDataSlab+0x14b74>
   44b0c:	ldr	r2, [fp, #12]
   44b10:	mov	r4, r6
   44b14:	ldr	r5, [r2]
   44b18:	ldr	r2, [fp, #8]
   44b1c:	ldr	r2, [r2]
   44b20:	str	r2, [sp, #72]	; 0x48
   44b24:	sub	r2, r2, r5
   44b28:	str	r5, [sp, #80]	; 0x50
   44b2c:	add	sl, r9, r2, lsl #1
   44b30:	add	r7, r3, r2
   44b34:	ldr	r2, [fp, #24]
   44b38:	cmp	r2, #2
   44b3c:	blt	44aac <GetDataSlab+0x14b2c>
   44b40:	ldr	r9, [sp, #68]	; 0x44
   44b44:	mov	r2, #0
   44b48:	b	44b74 <GetDataSlab+0x14bf4>
   44b4c:	ldr	r6, [ip, r2]
   44b50:	ldr	ip, [lr, r2]
   44b54:	sub	r3, r3, r5
   44b58:	mla	r3, ip, r6, r3
   44b5c:	sub	ip, fp, #176	; 0xb0
   44b60:	add	r7, r3, r7
   44b64:	add	sl, sl, r3, lsl #1
   44b68:	subs	r9, r9, #1
   44b6c:	add	r2, r2, #4
   44b70:	beq	44aac <GetDataSlab+0x14b2c>
   44b74:	ldr	r3, [r0, r2]
   44b78:	add	r3, r3, #1
   44b7c:	str	r3, [r0, r2]
   44b80:	ldr	r5, [r4, r2]
   44b84:	sdiv	r6, r3, r5
   44b88:	mls	r3, r6, r5, r3
   44b8c:	cmp	r3, #0
   44b90:	bne	44a9c <GetDataSlab+0x14b1c>
   44b94:	mov	r3, #0
   44b98:	str	r3, [r0, r2]
   44b9c:	ldr	r3, [sp, #84]	; 0x54
   44ba0:	ldr	r3, [r3, r2]
   44ba4:	sdiv	r5, r7, r3
   44ba8:	mls	r5, r5, r3, r7
   44bac:	cmp	r5, #0
   44bb0:	bne	44b4c <GetDataSlab+0x14bcc>
   44bb4:	ldr	r3, [lr, r2]
   44bb8:	cmp	r3, #0
   44bbc:	beq	44b68 <GetDataSlab+0x14be8>
   44bc0:	ldr	r6, [ip, r2]
   44bc4:	mla	r7, r6, r3, r7
   44bc8:	mul	r3, r6, r3
   44bcc:	b	44b64 <GetDataSlab+0x14be4>
   44bd0:	ldr	r0, [sp, #80]	; 0x50
   44bd4:	cmp	r5, #1
   44bd8:	add	sl, r0, r7, lsl #1
   44bdc:	bne	51ff0 <GetDataSlab+0x22070>
   44be0:	ldr	r0, [sp, #76]	; 0x4c
   44be4:	ldr	r3, [fp, #20]
   44be8:	sub	r2, fp, #176	; 0xb0
   44bec:	cmp	r0, #1
   44bf0:	blt	56c18 <GetDataSlab+0x26c98>
   44bf4:	orr	r2, r2, #4
   44bf8:	ldr	lr, [fp, #12]
   44bfc:	sub	r0, fp, #136	; 0x88
   44c00:	add	r4, r3, #4
   44c04:	str	r2, [sp, #84]	; 0x54
   44c08:	ldr	r2, [fp, #24]
   44c0c:	orr	r0, r0, #4
   44c10:	sub	r2, r2, #1
   44c14:	str	r2, [sp, #68]	; 0x44
   44c18:	orr	r2, r8, #4
   44c1c:	mov	r8, #0
   44c20:	str	r2, [sp, #64]	; 0x40
   44c24:	ldr	r2, [lr], #4
   44c28:	str	r2, [sp, #80]	; 0x50
   44c2c:	b	44c54 <GetDataSlab+0x14cd4>
   44c30:	ldr	r3, [sp, #64]	; 0x40
   44c34:	ldr	r2, [r3, r2]
   44c38:	add	sl, sl, r2, lsl #1
   44c3c:	add	r7, r2, r7
   44c40:	ldr	r2, [sp, #76]	; 0x4c
   44c44:	add	r8, r1, r8
   44c48:	cmp	r8, r2
   44c4c:	mov	r2, #0
   44c50:	bge	56c1c <GetDataSlab+0x26c9c>
   44c54:	ldr	r5, [sp, #80]	; 0x50
   44c58:	ldr	r2, [sp, #72]	; 0x48
   44c5c:	cmp	r1, #1
   44c60:	sub	ip, fp, #176	; 0xb0
   44c64:	add	r9, sl, r5, lsl #1
   44c68:	add	r3, r5, r7
   44c6c:	blt	44cb4 <GetDataSlab+0x14d34>
   44c70:	ldr	r1, [sp, #88]	; 0x58
   44c74:	ldr	r5, [fp, #20]
   44c78:	mov	r6, r4
   44c7c:	mov	r2, #0
   44c80:	mov	r7, r9
   44c84:	add	r4, r1, r8, lsl #2
   44c88:	ldrh	r1, [r7], #2
   44c8c:	str	r1, [r4, r2, lsl #2]
   44c90:	add	r2, r2, #1
   44c94:	ldr	r1, [r5]
   44c98:	cmp	r2, r1
   44c9c:	blt	44c88 <GetDataSlab+0x14d08>
   44ca0:	ldr	r2, [fp, #12]
   44ca4:	mov	r4, r6
   44ca8:	ldr	r5, [r2]
   44cac:	ldr	r2, [fp, #8]
   44cb0:	ldr	r2, [r2]
   44cb4:	str	r2, [sp, #72]	; 0x48
   44cb8:	sub	r2, r2, r5
   44cbc:	str	r5, [sp, #80]	; 0x50
   44cc0:	add	sl, r9, r2, lsl #1
   44cc4:	add	r7, r3, r2
   44cc8:	ldr	r2, [fp, #24]
   44ccc:	cmp	r2, #2
   44cd0:	blt	44c40 <GetDataSlab+0x14cc0>
   44cd4:	ldr	r9, [sp, #68]	; 0x44
   44cd8:	mov	r2, #0
   44cdc:	b	44d08 <GetDataSlab+0x14d88>
   44ce0:	ldr	r6, [ip, r2]
   44ce4:	ldr	ip, [lr, r2]
   44ce8:	sub	r3, r3, r5
   44cec:	mla	r3, ip, r6, r3
   44cf0:	sub	ip, fp, #176	; 0xb0
   44cf4:	add	r7, r3, r7
   44cf8:	add	sl, sl, r3, lsl #1
   44cfc:	subs	r9, r9, #1
   44d00:	add	r2, r2, #4
   44d04:	beq	44c40 <GetDataSlab+0x14cc0>
   44d08:	ldr	r3, [r0, r2]
   44d0c:	add	r3, r3, #1
   44d10:	str	r3, [r0, r2]
   44d14:	ldr	r5, [r4, r2]
   44d18:	sdiv	r6, r3, r5
   44d1c:	mls	r3, r6, r5, r3
   44d20:	cmp	r3, #0
   44d24:	bne	44c30 <GetDataSlab+0x14cb0>
   44d28:	mov	r3, #0
   44d2c:	str	r3, [r0, r2]
   44d30:	ldr	r3, [sp, #84]	; 0x54
   44d34:	ldr	r3, [r3, r2]
   44d38:	sdiv	r5, r7, r3
   44d3c:	mls	r5, r5, r3, r7
   44d40:	cmp	r5, #0
   44d44:	bne	44ce0 <GetDataSlab+0x14d60>
   44d48:	ldr	r3, [lr, r2]
   44d4c:	cmp	r3, #0
   44d50:	beq	44cfc <GetDataSlab+0x14d7c>
   44d54:	ldr	r6, [ip, r2]
   44d58:	mla	r7, r6, r3, r7
   44d5c:	mul	r3, r6, r3
   44d60:	b	44cf8 <GetDataSlab+0x14d78>
   44d64:	ldr	r0, [sp, #80]	; 0x50
   44d68:	cmp	r5, #1
   44d6c:	add	r8, r0, r7, lsl #2
   44d70:	bne	5219c <GetDataSlab+0x2221c>
   44d74:	ldr	r0, [sp, #76]	; 0x4c
   44d78:	ldr	r3, [fp, #20]
   44d7c:	sub	r2, fp, #176	; 0xb0
   44d80:	cmp	r0, #1
   44d84:	blt	56c18 <GetDataSlab+0x26c98>
   44d88:	orr	r2, r2, #4
   44d8c:	ldr	lr, [fp, #12]
   44d90:	sub	r0, fp, #136	; 0x88
   44d94:	add	r3, r3, #4
   44d98:	mov	ip, #0
   44d9c:	str	r2, [sp, #80]	; 0x50
   44da0:	ldr	r2, [fp, #24]
   44da4:	orr	r0, r0, #4
   44da8:	str	r3, [sp, #84]	; 0x54
   44dac:	sub	r2, r2, #1
   44db0:	str	r2, [sp, #64]	; 0x40
   44db4:	sub	r2, fp, #96	; 0x60
   44db8:	orr	r2, r2, #4
   44dbc:	str	r2, [sp, #60]	; 0x3c
   44dc0:	ldr	r2, [lr], #4
   44dc4:	str	r2, [sp, #68]	; 0x44
   44dc8:	b	44df0 <GetDataSlab+0x14e70>
   44dcc:	ldr	r3, [sp, #60]	; 0x3c
   44dd0:	ldr	r2, [r3, r2]
   44dd4:	add	r8, r8, r2, lsl #2
   44dd8:	add	r7, r2, r7
   44ddc:	ldr	r3, [sp, #76]	; 0x4c
   44de0:	add	ip, r1, ip
   44de4:	mov	r2, #0
   44de8:	cmp	ip, r3
   44dec:	bge	56c1c <GetDataSlab+0x26c9c>
   44df0:	ldr	r4, [sp, #68]	; 0x44
   44df4:	ldr	r5, [fp, #20]
   44df8:	ldr	r2, [sp, #72]	; 0x48
   44dfc:	cmp	r1, #1
   44e00:	add	r3, r4, r7
   44e04:	add	r7, r8, r4, lsl #2
   44e08:	blt	44e40 <GetDataSlab+0x14ec0>
   44e0c:	ldr	r1, [sp, #88]	; 0x58
   44e10:	mov	r2, #0
   44e14:	add	r4, r1, ip, lsl #2
   44e18:	ldr	r1, [r7, r2, lsl #2]
   44e1c:	str	r1, [r4, r2, lsl #2]
   44e20:	add	r2, r2, #1
   44e24:	ldr	r1, [r5]
   44e28:	cmp	r2, r1
   44e2c:	blt	44e18 <GetDataSlab+0x14e98>
   44e30:	ldr	r2, [fp, #12]
   44e34:	ldr	r4, [r2]
   44e38:	ldr	r2, [fp, #8]
   44e3c:	ldr	r2, [r2]
   44e40:	str	r2, [sp, #72]	; 0x48
   44e44:	sub	r2, r2, r4
   44e48:	str	r4, [sp, #68]	; 0x44
   44e4c:	add	r8, r7, r2, lsl #2
   44e50:	add	r7, r3, r2
   44e54:	ldr	r2, [fp, #24]
   44e58:	cmp	r2, #2
   44e5c:	blt	44ddc <GetDataSlab+0x14e5c>
   44e60:	ldr	r9, [sp, #64]	; 0x40
   44e64:	mov	r2, #0
   44e68:	b	44e94 <GetDataSlab+0x14f14>
   44e6c:	sub	r4, fp, #176	; 0xb0
   44e70:	ldr	sl, [lr, r2]
   44e74:	sub	r3, r3, r5
   44e78:	ldr	r6, [r4, r2]
   44e7c:	mla	r3, sl, r6, r3
   44e80:	add	r7, r3, r7
   44e84:	add	r8, r8, r3, lsl #2
   44e88:	subs	r9, r9, #1
   44e8c:	add	r2, r2, #4
   44e90:	beq	44ddc <GetDataSlab+0x14e5c>
   44e94:	ldr	r3, [r0, r2]
   44e98:	ldr	r4, [sp, #84]	; 0x54
   44e9c:	add	r3, r3, #1
   44ea0:	str	r3, [r0, r2]
   44ea4:	ldr	r5, [r4, r2]
   44ea8:	sdiv	r6, r3, r5
   44eac:	mls	r3, r6, r5, r3
   44eb0:	cmp	r3, #0
   44eb4:	bne	44dcc <GetDataSlab+0x14e4c>
   44eb8:	mov	r3, #0
   44ebc:	str	r3, [r0, r2]
   44ec0:	ldr	r3, [sp, #80]	; 0x50
   44ec4:	ldr	r3, [r3, r2]
   44ec8:	sdiv	r5, r7, r3
   44ecc:	mls	r5, r5, r3, r7
   44ed0:	cmp	r5, #0
   44ed4:	bne	44e6c <GetDataSlab+0x14eec>
   44ed8:	ldr	r3, [lr, r2]
   44edc:	cmp	r3, #0
   44ee0:	beq	44e88 <GetDataSlab+0x14f08>
   44ee4:	sub	r4, fp, #176	; 0xb0
   44ee8:	ldr	r5, [r4, r2]
   44eec:	mla	r7, r5, r3, r7
   44ef0:	mul	r3, r5, r3
   44ef4:	b	44e84 <GetDataSlab+0x14f04>
   44ef8:	ldr	r0, [sp, #80]	; 0x50
   44efc:	cmp	r5, #1
   44f00:	add	r8, r0, r7, lsl #2
   44f04:	bne	52348 <GetDataSlab+0x223c8>
   44f08:	ldr	r0, [sp, #76]	; 0x4c
   44f0c:	ldr	r3, [fp, #20]
   44f10:	sub	r2, fp, #176	; 0xb0
   44f14:	cmp	r0, #1
   44f18:	blt	56c18 <GetDataSlab+0x26c98>
   44f1c:	orr	r2, r2, #4
   44f20:	ldr	lr, [fp, #12]
   44f24:	sub	r0, fp, #136	; 0x88
   44f28:	add	r3, r3, #4
   44f2c:	mov	ip, #0
   44f30:	str	r2, [sp, #80]	; 0x50
   44f34:	ldr	r2, [fp, #24]
   44f38:	orr	r0, r0, #4
   44f3c:	str	r3, [sp, #84]	; 0x54
   44f40:	sub	r2, r2, #1
   44f44:	str	r2, [sp, #64]	; 0x40
   44f48:	sub	r2, fp, #96	; 0x60
   44f4c:	orr	r2, r2, #4
   44f50:	str	r2, [sp, #60]	; 0x3c
   44f54:	ldr	r2, [lr], #4
   44f58:	str	r2, [sp, #68]	; 0x44
   44f5c:	b	44f84 <GetDataSlab+0x15004>
   44f60:	ldr	r3, [sp, #60]	; 0x3c
   44f64:	ldr	r2, [r3, r2]
   44f68:	add	r8, r8, r2, lsl #2
   44f6c:	add	r7, r2, r7
   44f70:	ldr	r3, [sp, #76]	; 0x4c
   44f74:	add	ip, r1, ip
   44f78:	mov	r2, #0
   44f7c:	cmp	ip, r3
   44f80:	bge	56c1c <GetDataSlab+0x26c9c>
   44f84:	ldr	r4, [sp, #68]	; 0x44
   44f88:	ldr	r5, [fp, #20]
   44f8c:	ldr	r2, [sp, #72]	; 0x48
   44f90:	cmp	r1, #1
   44f94:	add	r3, r4, r7
   44f98:	add	r7, r8, r4, lsl #2
   44f9c:	blt	44fd4 <GetDataSlab+0x15054>
   44fa0:	ldr	r1, [sp, #88]	; 0x58
   44fa4:	mov	r2, #0
   44fa8:	add	r4, r1, ip, lsl #2
   44fac:	ldr	r1, [r7, r2, lsl #2]
   44fb0:	str	r1, [r4, r2, lsl #2]
   44fb4:	add	r2, r2, #1
   44fb8:	ldr	r1, [r5]
   44fbc:	cmp	r2, r1
   44fc0:	blt	44fac <GetDataSlab+0x1502c>
   44fc4:	ldr	r2, [fp, #12]
   44fc8:	ldr	r4, [r2]
   44fcc:	ldr	r2, [fp, #8]
   44fd0:	ldr	r2, [r2]
   44fd4:	str	r2, [sp, #72]	; 0x48
   44fd8:	sub	r2, r2, r4
   44fdc:	str	r4, [sp, #68]	; 0x44
   44fe0:	add	r8, r7, r2, lsl #2
   44fe4:	add	r7, r3, r2
   44fe8:	ldr	r2, [fp, #24]
   44fec:	cmp	r2, #2
   44ff0:	blt	44f70 <GetDataSlab+0x14ff0>
   44ff4:	ldr	r9, [sp, #64]	; 0x40
   44ff8:	mov	r2, #0
   44ffc:	b	45028 <GetDataSlab+0x150a8>
   45000:	sub	r4, fp, #176	; 0xb0
   45004:	ldr	sl, [lr, r2]
   45008:	sub	r3, r3, r5
   4500c:	ldr	r6, [r4, r2]
   45010:	mla	r3, sl, r6, r3
   45014:	add	r7, r3, r7
   45018:	add	r8, r8, r3, lsl #2
   4501c:	subs	r9, r9, #1
   45020:	add	r2, r2, #4
   45024:	beq	44f70 <GetDataSlab+0x14ff0>
   45028:	ldr	r3, [r0, r2]
   4502c:	ldr	r4, [sp, #84]	; 0x54
   45030:	add	r3, r3, #1
   45034:	str	r3, [r0, r2]
   45038:	ldr	r5, [r4, r2]
   4503c:	sdiv	r6, r3, r5
   45040:	mls	r3, r6, r5, r3
   45044:	cmp	r3, #0
   45048:	bne	44f60 <GetDataSlab+0x14fe0>
   4504c:	mov	r3, #0
   45050:	str	r3, [r0, r2]
   45054:	ldr	r3, [sp, #80]	; 0x50
   45058:	ldr	r3, [r3, r2]
   4505c:	sdiv	r5, r7, r3
   45060:	mls	r5, r5, r3, r7
   45064:	cmp	r5, #0
   45068:	bne	45000 <GetDataSlab+0x15080>
   4506c:	ldr	r3, [lr, r2]
   45070:	cmp	r3, #0
   45074:	beq	4501c <GetDataSlab+0x1509c>
   45078:	sub	r4, fp, #176	; 0xb0
   4507c:	ldr	r5, [r4, r2]
   45080:	mla	r7, r5, r3, r7
   45084:	mul	r3, r5, r3
   45088:	b	45018 <GetDataSlab+0x15098>
   4508c:	ldr	r0, [sp, #80]	; 0x50
   45090:	cmp	r5, #1
   45094:	add	sl, r0, r7, lsl #2
   45098:	bne	524f4 <GetDataSlab+0x22574>
   4509c:	ldr	r0, [sp, #76]	; 0x4c
   450a0:	ldr	r3, [fp, #20]
   450a4:	sub	r2, fp, #176	; 0xb0
   450a8:	cmp	r0, #1
   450ac:	blt	56c18 <GetDataSlab+0x26c98>
   450b0:	orr	r2, r2, #4
   450b4:	ldr	lr, [fp, #12]
   450b8:	sub	r0, fp, #136	; 0x88
   450bc:	add	r4, r3, #4
   450c0:	str	r2, [sp, #84]	; 0x54
   450c4:	ldr	r2, [fp, #24]
   450c8:	orr	r0, r0, #4
   450cc:	sub	r2, r2, #1
   450d0:	str	r2, [sp, #68]	; 0x44
   450d4:	orr	r2, r8, #4
   450d8:	mov	r8, #0
   450dc:	str	r2, [sp, #64]	; 0x40
   450e0:	ldr	r2, [lr], #4
   450e4:	str	r2, [sp, #80]	; 0x50
   450e8:	b	45110 <GetDataSlab+0x15190>
   450ec:	ldr	r3, [sp, #64]	; 0x40
   450f0:	ldr	r2, [r3, r2]
   450f4:	add	sl, sl, r2, lsl #2
   450f8:	add	r7, r2, r7
   450fc:	ldr	r3, [sp, #76]	; 0x4c
   45100:	add	r8, r1, r8
   45104:	mov	r2, #0
   45108:	cmp	r8, r3
   4510c:	bge	56c1c <GetDataSlab+0x26c9c>
   45110:	ldr	r5, [sp, #80]	; 0x50
   45114:	ldr	r2, [sp, #72]	; 0x48
   45118:	cmp	r1, #1
   4511c:	sub	ip, fp, #176	; 0xb0
   45120:	add	r9, sl, r5, lsl #2
   45124:	add	r3, r5, r7
   45128:	blt	4517c <GetDataSlab+0x151fc>
   4512c:	ldr	r1, [sp, #88]	; 0x58
   45130:	ldr	r5, [fp, #20]
   45134:	mov	r6, r4
   45138:	mov	r2, #0
   4513c:	mov	r7, r9
   45140:	add	r4, r1, r8, lsl #2
   45144:	vldr	s0, [r7]
   45148:	add	r7, r7, #4
   4514c:	vcvt.u32.f32	s0, s0
   45150:	vmov	r1, s0
   45154:	str	r1, [r4, r2, lsl #2]
   45158:	add	r2, r2, #1
   4515c:	ldr	r1, [r5]
   45160:	cmp	r2, r1
   45164:	blt	45144 <GetDataSlab+0x151c4>
   45168:	ldr	r2, [fp, #12]
   4516c:	mov	r4, r6
   45170:	ldr	r5, [r2]
   45174:	ldr	r2, [fp, #8]
   45178:	ldr	r2, [r2]
   4517c:	str	r2, [sp, #72]	; 0x48
   45180:	sub	r2, r2, r5
   45184:	str	r5, [sp, #80]	; 0x50
   45188:	add	sl, r9, r2, lsl #2
   4518c:	add	r7, r3, r2
   45190:	ldr	r2, [fp, #24]
   45194:	cmp	r2, #2
   45198:	blt	450fc <GetDataSlab+0x1517c>
   4519c:	ldr	r9, [sp, #68]	; 0x44
   451a0:	mov	r2, #0
   451a4:	b	451d0 <GetDataSlab+0x15250>
   451a8:	ldr	r6, [ip, r2]
   451ac:	ldr	ip, [lr, r2]
   451b0:	sub	r3, r3, r5
   451b4:	mla	r3, ip, r6, r3
   451b8:	sub	ip, fp, #176	; 0xb0
   451bc:	add	r7, r3, r7
   451c0:	add	sl, sl, r3, lsl #2
   451c4:	subs	r9, r9, #1
   451c8:	add	r2, r2, #4
   451cc:	beq	450fc <GetDataSlab+0x1517c>
   451d0:	ldr	r3, [r0, r2]
   451d4:	add	r3, r3, #1
   451d8:	str	r3, [r0, r2]
   451dc:	ldr	r5, [r4, r2]
   451e0:	sdiv	r6, r3, r5
   451e4:	mls	r3, r6, r5, r3
   451e8:	cmp	r3, #0
   451ec:	bne	450ec <GetDataSlab+0x1516c>
   451f0:	mov	r3, #0
   451f4:	str	r3, [r0, r2]
   451f8:	ldr	r3, [sp, #84]	; 0x54
   451fc:	ldr	r3, [r3, r2]
   45200:	sdiv	r5, r7, r3
   45204:	mls	r5, r5, r3, r7
   45208:	cmp	r5, #0
   4520c:	bne	451a8 <GetDataSlab+0x15228>
   45210:	ldr	r3, [lr, r2]
   45214:	cmp	r3, #0
   45218:	beq	451c4 <GetDataSlab+0x15244>
   4521c:	ldr	r6, [ip, r2]
   45220:	mla	r7, r6, r3, r7
   45224:	mul	r3, r6, r3
   45228:	b	451c0 <GetDataSlab+0x15240>
   4522c:	ldr	r0, [sp, #80]	; 0x50
   45230:	cmp	r5, #1
   45234:	add	sl, r0, r7, lsl #3
   45238:	bne	526a8 <GetDataSlab+0x22728>
   4523c:	ldr	r0, [sp, #76]	; 0x4c
   45240:	ldr	r3, [fp, #20]
   45244:	sub	r2, fp, #176	; 0xb0
   45248:	cmp	r0, #1
   4524c:	blt	56c18 <GetDataSlab+0x26c98>
   45250:	orr	r2, r2, #4
   45254:	ldr	lr, [fp, #12]
   45258:	sub	r0, fp, #136	; 0x88
   4525c:	add	r4, r3, #4
   45260:	str	r2, [sp, #84]	; 0x54
   45264:	ldr	r2, [fp, #24]
   45268:	orr	r0, r0, #4
   4526c:	sub	r2, r2, #1
   45270:	str	r2, [sp, #68]	; 0x44
   45274:	orr	r2, r8, #4
   45278:	mov	r8, #0
   4527c:	str	r2, [sp, #64]	; 0x40
   45280:	ldr	r2, [lr], #4
   45284:	str	r2, [sp, #80]	; 0x50
   45288:	b	452b0 <GetDataSlab+0x15330>
   4528c:	ldr	r3, [sp, #64]	; 0x40
   45290:	ldr	r2, [r3, r2]
   45294:	add	sl, sl, r2, lsl #3
   45298:	add	r7, r2, r7
   4529c:	ldr	r3, [sp, #76]	; 0x4c
   452a0:	add	r8, r1, r8
   452a4:	mov	r2, #0
   452a8:	cmp	r8, r3
   452ac:	bge	56c1c <GetDataSlab+0x26c9c>
   452b0:	ldr	r5, [sp, #80]	; 0x50
   452b4:	ldr	r2, [sp, #72]	; 0x48
   452b8:	cmp	r1, #1
   452bc:	sub	ip, fp, #176	; 0xb0
   452c0:	add	r9, sl, r5, lsl #3
   452c4:	add	r3, r5, r7
   452c8:	blt	4531c <GetDataSlab+0x1539c>
   452cc:	ldr	r1, [sp, #88]	; 0x58
   452d0:	ldr	r5, [fp, #20]
   452d4:	mov	r6, r4
   452d8:	mov	r2, #0
   452dc:	mov	r7, r9
   452e0:	add	r4, r1, r8, lsl #2
   452e4:	vldr	d16, [r7]
   452e8:	add	r7, r7, #8
   452ec:	vcvt.u32.f64	s0, d16
   452f0:	vmov	r1, s0
   452f4:	str	r1, [r4, r2, lsl #2]
   452f8:	add	r2, r2, #1
   452fc:	ldr	r1, [r5]
   45300:	cmp	r2, r1
   45304:	blt	452e4 <GetDataSlab+0x15364>
   45308:	ldr	r2, [fp, #12]
   4530c:	mov	r4, r6
   45310:	ldr	r5, [r2]
   45314:	ldr	r2, [fp, #8]
   45318:	ldr	r2, [r2]
   4531c:	str	r2, [sp, #72]	; 0x48
   45320:	sub	r2, r2, r5
   45324:	str	r5, [sp, #80]	; 0x50
   45328:	add	sl, r9, r2, lsl #3
   4532c:	add	r7, r3, r2
   45330:	ldr	r2, [fp, #24]
   45334:	cmp	r2, #2
   45338:	blt	4529c <GetDataSlab+0x1531c>
   4533c:	ldr	r9, [sp, #68]	; 0x44
   45340:	mov	r2, #0
   45344:	b	45370 <GetDataSlab+0x153f0>
   45348:	ldr	r6, [ip, r2]
   4534c:	ldr	ip, [lr, r2]
   45350:	sub	r3, r3, r5
   45354:	mla	r3, ip, r6, r3
   45358:	sub	ip, fp, #176	; 0xb0
   4535c:	add	r7, r3, r7
   45360:	add	sl, sl, r3, lsl #3
   45364:	subs	r9, r9, #1
   45368:	add	r2, r2, #4
   4536c:	beq	4529c <GetDataSlab+0x1531c>
   45370:	ldr	r3, [r0, r2]
   45374:	add	r3, r3, #1
   45378:	str	r3, [r0, r2]
   4537c:	ldr	r5, [r4, r2]
   45380:	sdiv	r6, r3, r5
   45384:	mls	r3, r6, r5, r3
   45388:	cmp	r3, #0
   4538c:	bne	4528c <GetDataSlab+0x1530c>
   45390:	mov	r3, #0
   45394:	str	r3, [r0, r2]
   45398:	ldr	r3, [sp, #84]	; 0x54
   4539c:	ldr	r3, [r3, r2]
   453a0:	sdiv	r5, r7, r3
   453a4:	mls	r5, r5, r3, r7
   453a8:	cmp	r5, #0
   453ac:	bne	45348 <GetDataSlab+0x153c8>
   453b0:	ldr	r3, [lr, r2]
   453b4:	cmp	r3, #0
   453b8:	beq	45364 <GetDataSlab+0x153e4>
   453bc:	ldr	r6, [ip, r2]
   453c0:	mla	r7, r6, r3, r7
   453c4:	mul	r3, r6, r3
   453c8:	b	45360 <GetDataSlab+0x153e0>
   453cc:	ldr	r0, [sp, #80]	; 0x50
   453d0:	cmp	r7, #1
   453d4:	add	r9, r0, r3, lsl #3
   453d8:	bne	5285c <GetDataSlab+0x228dc>
   453dc:	ldr	r0, [sp, #68]	; 0x44
   453e0:	sub	ip, fp, #176	; 0xb0
   453e4:	cmp	r0, #1
   453e8:	blt	529fc <GetDataSlab+0x22a7c>
   453ec:	ldr	r2, [fp, #20]
   453f0:	ldr	sl, [fp, #12]
   453f4:	sub	r0, fp, #136	; 0x88
   453f8:	mov	lr, #0
   453fc:	orr	r0, r0, #4
   45400:	add	r5, r2, #4
   45404:	orr	r2, ip, #4
   45408:	ldr	r7, [sl], #4
   4540c:	str	r2, [sp, #84]	; 0x54
   45410:	ldr	r2, [fp, #24]
   45414:	sub	r2, r2, #1
   45418:	str	r2, [sp, #60]	; 0x3c
   4541c:	orr	r2, r8, #4
   45420:	str	r2, [sp, #56]	; 0x38
   45424:	b	4544c <GetDataSlab+0x154cc>
   45428:	ldr	r2, [sp, #56]	; 0x38
   4542c:	ldr	r2, [r2, r7]
   45430:	add	r9, r9, r2, lsl #3
   45434:	add	r3, r2, r3
   45438:	ldr	r2, [sp, #68]	; 0x44
   4543c:	ldr	r7, [sp, #72]	; 0x48
   45440:	add	lr, r1, lr
   45444:	cmp	lr, r2
   45448:	bge	529fc <GetDataSlab+0x22a7c>
   4544c:	ldr	r2, [sp, #64]	; 0x40
   45450:	add	r4, r9, r7, lsl #3
   45454:	add	r8, r7, r3
   45458:	cmp	r1, #1
   4545c:	blt	454a4 <GetDataSlab+0x15524>
   45460:	ldr	r1, [sp, #88]	; 0x58
   45464:	ldr	r2, [fp, #20]
   45468:	mov	r6, r5
   4546c:	mov	r3, #0
   45470:	mov	r5, r4
   45474:	add	r7, r1, lr, lsl #2
   45478:	ldr	r1, [r5], #8
   4547c:	str	r1, [r7, r3, lsl #2]
   45480:	add	r3, r3, #1
   45484:	ldr	r1, [r2]
   45488:	cmp	r3, r1
   4548c:	blt	45478 <GetDataSlab+0x154f8>
   45490:	ldr	r2, [fp, #12]
   45494:	mov	r5, r6
   45498:	ldr	r7, [r2]
   4549c:	ldr	r2, [fp, #8]
   454a0:	ldr	r2, [r2]
   454a4:	str	r2, [sp, #64]	; 0x40
   454a8:	sub	r2, r2, r7
   454ac:	str	r7, [sp, #72]	; 0x48
   454b0:	add	r9, r4, r2, lsl #3
   454b4:	add	r3, r8, r2
   454b8:	ldr	r2, [fp, #24]
   454bc:	cmp	r2, #2
   454c0:	blt	45438 <GetDataSlab+0x154b8>
   454c4:	ldr	r8, [sp, #60]	; 0x3c
   454c8:	mov	r7, #0
   454cc:	b	454f8 <GetDataSlab+0x15578>
   454d0:	ldr	r4, [ip, r7]
   454d4:	ldr	ip, [sl, r7]
   454d8:	sub	r2, r2, r6
   454dc:	mla	r2, ip, r4, r2
   454e0:	sub	ip, fp, #176	; 0xb0
   454e4:	add	r3, r2, r3
   454e8:	add	r9, r9, r2, lsl #3
   454ec:	subs	r8, r8, #1
   454f0:	add	r7, r7, #4
   454f4:	beq	45438 <GetDataSlab+0x154b8>
   454f8:	ldr	r2, [r0, r7]
   454fc:	add	r2, r2, #1
   45500:	str	r2, [r0, r7]
   45504:	ldr	r6, [r5, r7]
   45508:	sdiv	r4, r2, r6
   4550c:	mls	r2, r4, r6, r2
   45510:	cmp	r2, #0
   45514:	bne	45428 <GetDataSlab+0x154a8>
   45518:	mov	r2, #0
   4551c:	str	r2, [r0, r7]
   45520:	ldr	r2, [sp, #84]	; 0x54
   45524:	ldr	r2, [r2, r7]
   45528:	sdiv	r4, r3, r2
   4552c:	mls	r6, r4, r2, r3
   45530:	cmp	r6, #0
   45534:	bne	454d0 <GetDataSlab+0x15550>
   45538:	ldr	r2, [sl, r7]
   4553c:	cmp	r2, #0
   45540:	beq	454ec <GetDataSlab+0x1556c>
   45544:	ldr	r6, [ip, r7]
   45548:	mla	r3, r6, r2, r3
   4554c:	mul	r2, r6, r2
   45550:	b	454e8 <GetDataSlab+0x15568>
   45554:	ldr	r0, [sp, #80]	; 0x50
   45558:	cmp	lr, #1
   4555c:	add	r9, r0, r7
   45560:	bne	52d58 <GetDataSlab+0x22dd8>
   45564:	ldr	r0, [sp, #72]	; 0x48
   45568:	ldr	r8, [sp, #88]	; 0x58
   4556c:	sub	r2, fp, #176	; 0xb0
   45570:	cmp	r0, #1
   45574:	blt	56c18 <GetDataSlab+0x26c98>
   45578:	ldr	r3, [sp, #68]	; 0x44
   4557c:	mov	r1, #1
   45580:	ldr	lr, [sp, #40]	; 0x28
   45584:	mov	sl, #0
   45588:	sub	r0, r3, #2
   4558c:	add	r1, r1, r0, lsr #1
   45590:	lsr	r0, r0, #1
   45594:	str	r0, [sp, #20]
   45598:	mov	r0, #0
   4559c:	and	r6, r1, #1
   455a0:	str	r0, [sp, #60]	; 0x3c
   455a4:	mov	r0, #0
   455a8:	sub	r1, r1, r6
   455ac:	str	r6, [sp, #28]
   455b0:	str	r0, [sp, #64]	; 0x40
   455b4:	str	r1, [sp, #16]
   455b8:	sub	r1, fp, #136	; 0x88
   455bc:	orr	r4, r1, #4
   455c0:	ldr	r1, [fp, #20]
   455c4:	add	r1, r1, #4
   455c8:	str	r1, [sp, #84]	; 0x54
   455cc:	orr	r1, r2, #4
   455d0:	lsl	r2, r3, #3
   455d4:	str	r1, [sp, #80]	; 0x50
   455d8:	ldr	r1, [fp, #12]
   455dc:	str	r2, [sp, #56]	; 0x38
   455e0:	and	r2, r3, #1
   455e4:	str	r2, [sp, #48]	; 0x30
   455e8:	bic	r2, r3, #1
   455ec:	str	r2, [sp, #24]
   455f0:	add	r1, r1, #4
   455f4:	str	r1, [sp, #76]	; 0x4c
   455f8:	ldr	r1, [fp, #24]
   455fc:	sub	r1, r1, #1
   45600:	str	r1, [sp, #44]	; 0x2c
   45604:	sub	r1, fp, #96	; 0x60
   45608:	orr	r1, r1, #4
   4560c:	str	r1, [sp, #32]
   45610:	mov	r1, r3
   45614:	b	4565c <GetDataSlab+0x156dc>
   45618:	ldr	r0, [sp, #32]
   4561c:	ldr	r0, [r0, r2]
   45620:	add	r9, r9, r0
   45624:	add	r7, r0, r7
   45628:	ldr	r0, [sp, #56]	; 0x38
   4562c:	ldr	r1, [sp, #68]	; 0x44
   45630:	ldr	r3, [sp, #64]	; 0x40
   45634:	mov	r2, #0
   45638:	add	r8, r8, r0
   4563c:	ldr	r0, [sp, #60]	; 0x3c
   45640:	add	r3, r3, r1
   45644:	str	r3, [sp, #64]	; 0x40
   45648:	add	r0, r0, #1
   4564c:	str	r0, [sp, #60]	; 0x3c
   45650:	ldr	r0, [sp, #72]	; 0x48
   45654:	cmp	r3, r0
   45658:	bge	56c1c <GetDataSlab+0x26c9c>
   4565c:	cmp	r1, #1
   45660:	sub	ip, fp, #176	; 0xb0
   45664:	blt	45814 <GetDataSlab+0x15894>
   45668:	ldr	r0, [fp, #12]
   4566c:	ldr	r1, [sp, #64]	; 0x40
   45670:	mov	r2, #0
   45674:	ldr	r6, [r0]
   45678:	ldr	r0, [sp, #88]	; 0x58
   4567c:	add	r1, r0, r1, lsl #3
   45680:	add	r3, r9, r6
   45684:	str	r1, [sp, #52]	; 0x34
   45688:	beq	4579c <GetDataSlab+0x1581c>
   4568c:	ldr	r1, [sp, #56]	; 0x38
   45690:	ldr	r5, [sp, #60]	; 0x3c
   45694:	mla	r0, r1, r5, r0
   45698:	ldr	r1, [sp, #68]	; 0x44
   4569c:	add	r1, r9, r1
   456a0:	add	r1, r1, r6
   456a4:	cmp	r0, r1
   456a8:	bcs	456c8 <GetDataSlab+0x15748>
   456ac:	ldr	r0, [sp, #56]	; 0x38
   456b0:	ldr	r1, [sp, #60]	; 0x3c
   456b4:	mla	r0, r0, r1, r0
   456b8:	ldr	r1, [sp, #88]	; 0x58
   456bc:	add	r0, r1, r0
   456c0:	cmp	r3, r0
   456c4:	bcc	4579c <GetDataSlab+0x1581c>
   456c8:	ldr	r0, [sp, #20]
   456cc:	mov	r2, #0
   456d0:	str	r6, [sp, #36]	; 0x24
   456d4:	cmp	r0, #0
   456d8:	beq	45744 <GetDataSlab+0x157c4>
   456dc:	ldr	ip, [sp, #16]
   456e0:	mov	lr, r8
   456e4:	add	r5, sp, #528	; 0x210
   456e8:	mov	r0, r3
   456ec:	mov	r6, #32
   456f0:	subs	ip, ip, #2
   456f4:	ldrh	r1, [r0, r2]!
   456f8:	add	r2, r2, #4
   456fc:	strh	r1, [r5, #152]	; 0x98
   45700:	sub	r1, fp, #376	; 0x178
   45704:	vld1.16	{d16[0]}, [r1 :16]
   45708:	add	r1, lr, #16
   4570c:	vmovl.u8	q8, d16
   45710:	vmovl.u16	q8, d16
   45714:	vmovl.u32	q8, d16
   45718:	vst1.64	{d16-d17}, [lr], r6
   4571c:	ldrh	r0, [r0, #2]
   45720:	strh	r0, [r5, #156]	; 0x9c
   45724:	sub	r0, fp, #372	; 0x174
   45728:	vld1.16	{d16[0]}, [r0 :16]
   4572c:	vmovl.u8	q8, d16
   45730:	vmovl.u16	q8, d16
   45734:	vmovl.u32	q8, d16
   45738:	vst1.64	{d16-d17}, [r1]
   4573c:	bne	456e8 <GetDataSlab+0x15768>
   45740:	b	45748 <GetDataSlab+0x157c8>
   45744:	add	r5, sp, #528	; 0x210
   45748:	ldr	r0, [sp, #28]
   4574c:	ldr	lr, [sp, #40]	; 0x28
   45750:	ldr	r6, [sp, #36]	; 0x24
   45754:	sub	ip, fp, #176	; 0xb0
   45758:	cmp	r0, #0
   4575c:	beq	4578c <GetDataSlab+0x1580c>
   45760:	add	r0, r3, r2
   45764:	ldrh	r0, [r0]
   45768:	strh	r0, [r5, #148]	; 0x94
   4576c:	sub	r0, fp, #380	; 0x17c
   45770:	vld1.16	{d16[0]}, [r0 :16]
   45774:	ldr	r0, [sp, #52]	; 0x34
   45778:	add	r0, r0, r2, lsl #3
   4577c:	vmovl.u8	q8, d16
   45780:	vmovl.u16	q8, d16
   45784:	vmovl.u32	q8, d16
   45788:	vst1.64	{d16-d17}, [r0]
   4578c:	ldr	r0, [sp, #68]	; 0x44
   45790:	ldr	r2, [sp, #24]
   45794:	cmp	r0, r2
   45798:	beq	45814 <GetDataSlab+0x15894>
   4579c:	ldr	r0, [sp, #48]	; 0x30
   457a0:	cmp	r0, #0
   457a4:	mov	r0, r2
   457a8:	beq	457c0 <GetDataSlab+0x15840>
   457ac:	ldrb	r0, [r3, r2]
   457b0:	ldr	r1, [sp, #52]	; 0x34
   457b4:	str	r0, [r1, r2, lsl #3]!
   457b8:	orr	r0, r2, #1
   457bc:	str	sl, [r1, #4]
   457c0:	orr	r1, r2, #1
   457c4:	ldr	r2, [sp, #68]	; 0x44
   457c8:	cmp	r2, r1
   457cc:	beq	45814 <GetDataSlab+0x15894>
   457d0:	ldr	r1, [sp, #68]	; 0x44
   457d4:	sub	r2, r1, r0
   457d8:	add	r1, r0, r6
   457dc:	lsl	r0, r0, #3
   457e0:	add	r1, r9, r1
   457e4:	add	r3, r1, #1
   457e8:	ldrb	r1, [r3, #-1]
   457ec:	mov	r6, r8
   457f0:	subs	r2, r2, #2
   457f4:	str	r1, [r6, r0]!
   457f8:	add	r0, r0, #16
   457fc:	str	sl, [r6, #4]
   45800:	ldrb	r1, [r3]
   45804:	add	r3, r3, #2
   45808:	str	sl, [r6, #12]
   4580c:	str	r1, [r6, #8]
   45810:	bne	457e8 <GetDataSlab+0x15868>
   45814:	ldr	r0, [fp, #24]
   45818:	add	r9, r9, lr
   4581c:	add	r7, r7, lr
   45820:	cmp	r0, #2
   45824:	blt	45628 <GetDataSlab+0x156a8>
   45828:	ldr	r3, [sp, #44]	; 0x2c
   4582c:	mov	r2, #0
   45830:	b	4585c <GetDataSlab+0x158dc>
   45834:	ldr	r5, [sp, #76]	; 0x4c
   45838:	ldr	r6, [ip, r2]
   4583c:	sub	r0, r0, r1
   45840:	ldr	r5, [r5, r2]
   45844:	mla	r0, r5, r6, r0
   45848:	add	r7, r0, r7
   4584c:	add	r9, r9, r0
   45850:	subs	r3, r3, #1
   45854:	add	r2, r2, #4
   45858:	beq	45628 <GetDataSlab+0x156a8>
   4585c:	ldr	r0, [r4, r2]
   45860:	ldr	r1, [sp, #84]	; 0x54
   45864:	add	r0, r0, #1
   45868:	str	r0, [r4, r2]
   4586c:	ldr	r1, [r1, r2]
   45870:	sdiv	r6, r0, r1
   45874:	mls	r0, r6, r1, r0
   45878:	cmp	r0, #0
   4587c:	bne	45618 <GetDataSlab+0x15698>
   45880:	ldr	r0, [sp, #80]	; 0x50
   45884:	str	sl, [r4, r2]
   45888:	ldr	r0, [r0, r2]
   4588c:	sdiv	r1, r7, r0
   45890:	mls	r1, r1, r0, r7
   45894:	cmp	r1, #0
   45898:	bne	45834 <GetDataSlab+0x158b4>
   4589c:	ldr	r0, [sp, #76]	; 0x4c
   458a0:	ldr	r0, [r0, r2]
   458a4:	cmp	r0, #0
   458a8:	beq	45850 <GetDataSlab+0x158d0>
   458ac:	ldr	r1, [ip, r2]
   458b0:	mla	r7, r1, r0, r7
   458b4:	mla	r9, r1, r0, r9
   458b8:	b	45850 <GetDataSlab+0x158d0>
   458bc:	ldr	r0, [sp, #80]	; 0x50
   458c0:	ldr	r7, [sp, #68]	; 0x44
   458c4:	add	r5, r0, r1, lsl #1
   458c8:	cmp	r7, #1
   458cc:	bne	52f68 <GetDataSlab+0x22fe8>
   458d0:	ldr	r0, [sp, #76]	; 0x4c
   458d4:	ldr	ip, [fp, #12]
   458d8:	ldr	r3, [fp, #20]
   458dc:	ldr	lr, [sp, #60]	; 0x3c
   458e0:	cmp	r0, #1
   458e4:	blt	56c18 <GetDataSlab+0x26c98>
   458e8:	mov	r7, ip
   458ec:	mov	ip, r3
   458f0:	ldr	r3, [sp, #72]	; 0x48
   458f4:	mov	r2, #1
   458f8:	ldr	r8, [sp, #88]	; 0x58
   458fc:	add	r9, ip, #4
   45900:	mov	ip, #0
   45904:	str	r9, [sp, #36]	; 0x24
   45908:	sub	r0, r3, #2
   4590c:	add	r2, r2, r0, lsr #1
   45910:	lsr	r0, r0, #1
   45914:	str	r0, [sp, #40]	; 0x28
   45918:	and	r4, r2, #1
   4591c:	sub	r2, r2, r4
   45920:	str	r4, [sp, #48]	; 0x30
   45924:	str	r2, [sp, #28]
   45928:	sub	r2, fp, #136	; 0x88
   4592c:	orr	r4, r2, #4
   45930:	sub	r2, fp, #176	; 0xb0
   45934:	orr	r2, r2, #4
   45938:	str	r2, [sp, #84]	; 0x54
   4593c:	ldr	r2, [fp, #24]
   45940:	sub	r2, r2, #1
   45944:	str	r2, [sp, #56]	; 0x38
   45948:	orr	r2, r6, #4
   4594c:	str	r2, [sp, #32]
   45950:	lsl	r2, r3, #3
   45954:	str	r2, [sp, #80]	; 0x50
   45958:	bic	r2, r3, #1
   4595c:	str	r2, [sp, #44]	; 0x2c
   45960:	ldr	r2, [r7], #4
   45964:	str	r7, [sp, #92]	; 0x5c
   45968:	str	r2, [sp, #68]	; 0x44
   4596c:	cmp	r3, #1
   45970:	bge	459b0 <GetDataSlab+0x15a30>
   45974:	b	45ac4 <GetDataSlab+0x15b44>
   45978:	ldr	r0, [sp, #32]
   4597c:	ldr	r0, [r0, r2]
   45980:	add	r5, r5, r0, lsl #1
   45984:	add	r1, r0, r1
   45988:	ldr	r0, [sp, #80]	; 0x50
   4598c:	ldr	r3, [sp, #72]	; 0x48
   45990:	mov	r2, #0
   45994:	add	r8, r8, r0
   45998:	ldr	r0, [sp, #76]	; 0x4c
   4599c:	add	ip, ip, r3
   459a0:	cmp	ip, r0
   459a4:	bge	56c1c <GetDataSlab+0x26c9c>
   459a8:	cmp	r3, #1
   459ac:	blt	45ac4 <GetDataSlab+0x15b44>
   459b0:	mov	r0, #0
   459b4:	beq	45a88 <GetDataSlab+0x15b08>
   459b8:	ldr	r0, [sp, #68]	; 0x44
   459bc:	mov	r2, #0
   459c0:	str	ip, [sp, #64]	; 0x40
   459c4:	add	sl, r5, r0, lsl #1
   459c8:	ldr	r0, [sp, #40]	; 0x28
   459cc:	str	sl, [sp, #52]	; 0x34
   459d0:	cmp	r0, #0
   459d4:	beq	45a30 <GetDataSlab+0x15ab0>
   459d8:	ldr	lr, [sp, #28]
   459dc:	mov	r3, r8
   459e0:	sub	r7, fp, #412	; 0x19c
   459e4:	mov	ip, #32
   459e8:	sub	r6, fp, #408	; 0x198
   459ec:	ldr	r0, [sl]
   459f0:	subs	lr, lr, #2
   459f4:	add	r2, r2, #4
   459f8:	str	r0, [fp, #-412]	; 0xfffffe64
   459fc:	add	r0, r3, #16
   45a00:	vld1.32	{d16[0]}, [r7 :32]
   45a04:	vmovl.s16	q8, d16
   45a08:	vmovl.s32	q8, d16
   45a0c:	vst1.64	{d16-d17}, [r3], ip
   45a10:	ldr	r9, [sl, #4]
   45a14:	add	sl, sl, #8
   45a18:	str	r9, [fp, #-408]	; 0xfffffe68
   45a1c:	vld1.32	{d16[0]}, [r6 :32]
   45a20:	vmovl.s16	q8, d16
   45a24:	vmovl.s32	q8, d16
   45a28:	vst1.64	{d16-d17}, [r0]
   45a2c:	bne	459ec <GetDataSlab+0x15a6c>
   45a30:	ldr	r0, [sp, #48]	; 0x30
   45a34:	ldr	ip, [sp, #64]	; 0x40
   45a38:	cmp	r0, #0
   45a3c:	beq	45a6c <GetDataSlab+0x15aec>
   45a40:	ldr	r3, [sp, #52]	; 0x34
   45a44:	ldr	r0, [sp, #88]	; 0x58
   45a48:	ldr	r3, [r3, r2, lsl #1]
   45a4c:	add	r0, r0, ip, lsl #3
   45a50:	add	r0, r0, r2, lsl #3
   45a54:	str	r3, [fp, #-416]	; 0xfffffe60
   45a58:	sub	r3, fp, #416	; 0x1a0
   45a5c:	vld1.32	{d16[0]}, [r3 :32]
   45a60:	vmovl.s16	q8, d16
   45a64:	vmovl.s32	q8, d16
   45a68:	vst1.64	{d16-d17}, [r0]
   45a6c:	ldr	r0, [sp, #72]	; 0x48
   45a70:	ldr	r2, [sp, #44]	; 0x2c
   45a74:	ldr	lr, [sp, #60]	; 0x3c
   45a78:	ldr	r9, [sp, #36]	; 0x24
   45a7c:	cmp	r0, r2
   45a80:	mov	r0, r2
   45a84:	beq	45ac4 <GetDataSlab+0x15b44>
   45a88:	ldr	r6, [sp, #68]	; 0x44
   45a8c:	ldr	r3, [sp, #72]	; 0x48
   45a90:	mov	r2, #0
   45a94:	sub	r2, r2, r0, lsl #3
   45a98:	add	r7, r5, r6, lsl #1
   45a9c:	sub	r3, r3, r0
   45aa0:	add	r0, r7, r0, lsl #1
   45aa4:	ldrsh	r7, [r0], #2
   45aa8:	mov	r6, r8
   45aac:	subs	r3, r3, #1
   45ab0:	str	r7, [r6, -r2]!
   45ab4:	asr	r7, r7, #31
   45ab8:	sub	r2, r2, #8
   45abc:	str	r7, [r6, #4]
   45ac0:	bne	45aa4 <GetDataSlab+0x15b24>
   45ac4:	ldr	r0, [fp, #24]
   45ac8:	add	r5, r5, lr, lsl #1
   45acc:	add	r1, r1, lr
   45ad0:	cmp	r0, #2
   45ad4:	blt	45988 <GetDataSlab+0x15a08>
   45ad8:	ldr	sl, [sp, #56]	; 0x38
   45adc:	mov	r2, #0
   45ae0:	b	45b10 <GetDataSlab+0x15b90>
   45ae4:	ldr	r6, [sp, #92]	; 0x5c
   45ae8:	sub	r7, fp, #176	; 0xb0
   45aec:	sub	r0, r0, r3
   45af0:	ldr	r7, [r7, r2]
   45af4:	ldr	r6, [r6, r2]
   45af8:	mla	r0, r6, r7, r0
   45afc:	add	r1, r0, r1
   45b00:	add	r5, r5, r0, lsl #1
   45b04:	subs	sl, sl, #1
   45b08:	add	r2, r2, #4
   45b0c:	beq	45988 <GetDataSlab+0x15a08>
   45b10:	ldr	r0, [r4, r2]
   45b14:	add	r0, r0, #1
   45b18:	str	r0, [r4, r2]
   45b1c:	ldr	r3, [r9, r2]
   45b20:	sdiv	r7, r0, r3
   45b24:	mls	r0, r7, r3, r0
   45b28:	cmp	r0, #0
   45b2c:	bne	45978 <GetDataSlab+0x159f8>
   45b30:	mov	r0, #0
   45b34:	str	r0, [r4, r2]
   45b38:	ldr	r0, [sp, #84]	; 0x54
   45b3c:	ldr	r0, [r0, r2]
   45b40:	sdiv	r3, r1, r0
   45b44:	mls	r3, r3, r0, r1
   45b48:	cmp	r3, #0
   45b4c:	bne	45ae4 <GetDataSlab+0x15b64>
   45b50:	ldr	r0, [sp, #92]	; 0x5c
   45b54:	ldr	r0, [r0, r2]
   45b58:	cmp	r0, #0
   45b5c:	beq	45b04 <GetDataSlab+0x15b84>
   45b60:	sub	r3, fp, #176	; 0xb0
   45b64:	ldr	r3, [r3, r2]
   45b68:	mla	r1, r3, r0, r1
   45b6c:	mul	r0, r3, r0
   45b70:	b	45b00 <GetDataSlab+0x15b80>
   45b74:	ldr	r0, [sp, #80]	; 0x50
   45b78:	ldr	r6, [sp, #68]	; 0x44
   45b7c:	add	r0, r0, r1, lsl #1
   45b80:	cmp	r6, #1
   45b84:	str	r0, [sp, #44]	; 0x2c
   45b88:	bne	53184 <GetDataSlab+0x23204>
   45b8c:	ldr	r0, [sp, #76]	; 0x4c
   45b90:	ldr	r3, [fp, #12]
   45b94:	ldr	r8, [sp, #56]	; 0x38
   45b98:	sub	r7, fp, #96	; 0x60
   45b9c:	cmp	r0, #1
   45ba0:	blt	56c18 <GetDataSlab+0x26c98>
   45ba4:	mov	r6, r3
   45ba8:	ldr	r3, [sp, #72]	; 0x48
   45bac:	mov	r2, #1
   45bb0:	ldr	sl, [sp, #88]	; 0x58
   45bb4:	mov	r4, #0
   45bb8:	sub	r0, r3, #2
   45bbc:	add	r2, r2, r0, lsr #1
   45bc0:	lsr	r0, r0, #1
   45bc4:	str	r0, [sp, #32]
   45bc8:	mov	r0, #0
   45bcc:	and	r5, r2, #1
   45bd0:	str	r0, [sp, #68]	; 0x44
   45bd4:	sub	r2, r2, r5
   45bd8:	str	r5, [sp, #40]	; 0x28
   45bdc:	str	r2, [sp, #24]
   45be0:	sub	r2, fp, #136	; 0x88
   45be4:	orr	r9, r2, #4
   45be8:	ldr	r2, [fp, #20]
   45bec:	add	r2, r2, #4
   45bf0:	str	r2, [sp, #84]	; 0x54
   45bf4:	orr	r2, ip, #4
   45bf8:	ldr	ip, [sp, #44]	; 0x2c
   45bfc:	str	r2, [sp, #80]	; 0x50
   45c00:	ldr	r2, [fp, #24]
   45c04:	sub	r2, r2, #1
   45c08:	str	r2, [sp, #52]	; 0x34
   45c0c:	orr	r2, r7, #4
   45c10:	str	r2, [sp, #28]
   45c14:	lsl	r2, r3, #3
   45c18:	str	r2, [sp, #64]	; 0x40
   45c1c:	bic	r2, r3, #1
   45c20:	str	r2, [sp, #36]	; 0x24
   45c24:	ldr	r2, [r6], #4
   45c28:	str	r6, [sp, #92]	; 0x5c
   45c2c:	str	r2, [sp, #60]	; 0x3c
   45c30:	b	45c6c <GetDataSlab+0x15cec>
   45c34:	ldr	r0, [sp, #28]
   45c38:	ldr	r0, [r0, r2]
   45c3c:	add	ip, ip, r0, lsl #1
   45c40:	add	r1, r0, r1
   45c44:	ldr	r0, [sp, #64]	; 0x40
   45c48:	ldr	r3, [sp, #72]	; 0x48
   45c4c:	ldr	r7, [sp, #68]	; 0x44
   45c50:	mov	r2, #0
   45c54:	add	sl, sl, r0
   45c58:	ldr	r0, [sp, #76]	; 0x4c
   45c5c:	add	r7, r7, r3
   45c60:	str	r7, [sp, #68]	; 0x44
   45c64:	cmp	r7, r0
   45c68:	bge	56c1c <GetDataSlab+0x26c9c>
   45c6c:	ldr	lr, [sp, #92]	; 0x5c
   45c70:	cmp	r3, #1
   45c74:	blt	45d8c <GetDataSlab+0x15e0c>
   45c78:	mov	r0, #0
   45c7c:	beq	45d58 <GetDataSlab+0x15dd8>
   45c80:	ldr	r0, [sp, #60]	; 0x3c
   45c84:	mov	r3, #0
   45c88:	str	ip, [sp, #44]	; 0x2c
   45c8c:	add	r2, ip, r0, lsl #1
   45c90:	ldr	r0, [sp, #32]
   45c94:	str	r2, [sp, #48]	; 0x30
   45c98:	cmp	r0, #0
   45c9c:	beq	45cf8 <GetDataSlab+0x15d78>
   45ca0:	ldr	lr, [sp, #24]
   45ca4:	mov	r8, sl
   45ca8:	sub	r5, fp, #400	; 0x190
   45cac:	mov	r6, #32
   45cb0:	sub	ip, fp, #396	; 0x18c
   45cb4:	ldr	r0, [r2]
   45cb8:	subs	lr, lr, #2
   45cbc:	add	r3, r3, #4
   45cc0:	str	r0, [fp, #-400]	; 0xfffffe70
   45cc4:	add	r0, r8, #16
   45cc8:	vld1.32	{d16[0]}, [r5 :32]
   45ccc:	vmovl.u16	q8, d16
   45cd0:	vmovl.u32	q8, d16
   45cd4:	vst1.64	{d16-d17}, [r8], r6
   45cd8:	ldr	r7, [r2, #4]
   45cdc:	add	r2, r2, #8
   45ce0:	str	r7, [fp, #-396]	; 0xfffffe74
   45ce4:	vld1.32	{d16[0]}, [ip :32]
   45ce8:	vmovl.u16	q8, d16
   45cec:	vmovl.u32	q8, d16
   45cf0:	vst1.64	{d16-d17}, [r0]
   45cf4:	bne	45cb4 <GetDataSlab+0x15d34>
   45cf8:	ldr	r0, [sp, #40]	; 0x28
   45cfc:	ldr	lr, [sp, #92]	; 0x5c
   45d00:	ldr	r8, [sp, #56]	; 0x38
   45d04:	mov	r4, #0
   45d08:	cmp	r0, #0
   45d0c:	ldr	r0, [sp, #88]	; 0x58
   45d10:	beq	45d40 <GetDataSlab+0x15dc0>
   45d14:	ldr	r2, [sp, #68]	; 0x44
   45d18:	add	r0, r0, r2, lsl #3
   45d1c:	ldr	r2, [sp, #48]	; 0x30
   45d20:	add	r0, r0, r3, lsl #3
   45d24:	ldr	r2, [r2, r3, lsl #1]
   45d28:	str	r2, [fp, #-404]	; 0xfffffe6c
   45d2c:	sub	r2, fp, #404	; 0x194
   45d30:	vld1.32	{d16[0]}, [r2 :32]
   45d34:	vmovl.u16	q8, d16
   45d38:	vmovl.u32	q8, d16
   45d3c:	vst1.64	{d16-d17}, [r0]
   45d40:	ldr	r0, [sp, #72]	; 0x48
   45d44:	ldr	r2, [sp, #36]	; 0x24
   45d48:	ldr	ip, [sp, #44]	; 0x2c
   45d4c:	cmp	r0, r2
   45d50:	mov	r0, r2
   45d54:	beq	45d8c <GetDataSlab+0x15e0c>
   45d58:	ldr	r5, [sp, #60]	; 0x3c
   45d5c:	ldr	r3, [sp, #72]	; 0x48
   45d60:	sub	r2, r4, r0, lsl #3
   45d64:	add	r7, ip, r5, lsl #1
   45d68:	sub	r3, r3, r0
   45d6c:	add	r0, r7, r0, lsl #1
   45d70:	ldrh	r7, [r0], #2
   45d74:	mov	r6, sl
   45d78:	subs	r3, r3, #1
   45d7c:	str	r7, [r6, -r2]!
   45d80:	sub	r2, r2, #8
   45d84:	str	r4, [r6, #4]
   45d88:	bne	45d70 <GetDataSlab+0x15df0>
   45d8c:	ldr	r0, [fp, #24]
   45d90:	add	ip, ip, r8, lsl #1
   45d94:	add	r1, r1, r8
   45d98:	cmp	r0, #2
   45d9c:	blt	45c44 <GetDataSlab+0x15cc4>
   45da0:	ldr	r3, [sp, #52]	; 0x34
   45da4:	mov	r2, #0
   45da8:	b	45dd4 <GetDataSlab+0x15e54>
   45dac:	sub	r5, fp, #176	; 0xb0
   45db0:	sub	r0, r0, r7
   45db4:	ldr	r6, [r5, r2]
   45db8:	ldr	r5, [lr, r2]
   45dbc:	mla	r0, r5, r6, r0
   45dc0:	add	r1, r0, r1
   45dc4:	add	ip, ip, r0, lsl #1
   45dc8:	subs	r3, r3, #1
   45dcc:	add	r2, r2, #4
   45dd0:	beq	45c44 <GetDataSlab+0x15cc4>
   45dd4:	ldr	r0, [r9, r2]
   45dd8:	ldr	r5, [sp, #84]	; 0x54
   45ddc:	add	r0, r0, #1
   45de0:	str	r0, [r9, r2]
   45de4:	ldr	r7, [r5, r2]
   45de8:	sdiv	r6, r0, r7
   45dec:	mls	r0, r6, r7, r0
   45df0:	cmp	r0, #0
   45df4:	bne	45c34 <GetDataSlab+0x15cb4>
   45df8:	ldr	r0, [sp, #80]	; 0x50
   45dfc:	str	r4, [r9, r2]
   45e00:	ldr	r0, [r0, r2]
   45e04:	sdiv	r7, r1, r0
   45e08:	mls	r7, r7, r0, r1
   45e0c:	cmp	r7, #0
   45e10:	bne	45dac <GetDataSlab+0x15e2c>
   45e14:	ldr	r0, [lr, r2]
   45e18:	cmp	r0, #0
   45e1c:	beq	45dc8 <GetDataSlab+0x15e48>
   45e20:	sub	r5, fp, #176	; 0xb0
   45e24:	ldr	r7, [r5, r2]
   45e28:	mla	r1, r7, r0, r1
   45e2c:	mul	r0, r7, r0
   45e30:	b	45dc4 <GetDataSlab+0x15e44>
   45e34:	ldr	r0, [sp, #80]	; 0x50
   45e38:	ldr	r4, [sp, #56]	; 0x38
   45e3c:	mov	r2, lr
   45e40:	add	r8, r0, r3, lsl #2
   45e44:	cmp	r4, #1
   45e48:	bne	53398 <GetDataSlab+0x23418>
   45e4c:	ldr	r0, [sp, #76]	; 0x4c
   45e50:	ldr	r7, [fp, #20]
   45e54:	ldr	r9, [sp, #52]	; 0x34
   45e58:	cmp	r0, #1
   45e5c:	ldr	r0, [sp, #72]	; 0x48
   45e60:	blt	56c18 <GetDataSlab+0x26c98>
   45e64:	sub	r0, r0, #2
   45e68:	mov	r1, #1
   45e6c:	ldr	lr, [sp, #88]	; 0x58
   45e70:	add	sl, r7, #4
   45e74:	sub	r7, fp, #456	; 0x1c8
   45e78:	add	r1, r1, r0, lsr #1
   45e7c:	lsr	r0, r0, #1
   45e80:	str	sl, [sp, #32]
   45e84:	str	r0, [sp, #36]	; 0x24
   45e88:	mov	r0, #0
   45e8c:	and	r6, r1, #1
   45e90:	str	r0, [sp, #68]	; 0x44
   45e94:	sub	r1, r1, r6
   45e98:	str	r6, [sp, #44]	; 0x2c
   45e9c:	str	r1, [sp, #24]
   45ea0:	sub	r1, fp, #136	; 0x88
   45ea4:	orr	r4, r1, #4
   45ea8:	orr	r1, r2, #4
   45eac:	str	r1, [sp, #84]	; 0x54
   45eb0:	ldr	r1, [fp, #12]
   45eb4:	add	r1, r1, #4
   45eb8:	str	r1, [sp, #80]	; 0x50
   45ebc:	ldr	r1, [fp, #24]
   45ec0:	sub	r1, r1, #1
   45ec4:	str	r1, [sp, #56]	; 0x38
   45ec8:	sub	r1, fp, #96	; 0x60
   45ecc:	orr	r1, r1, #4
   45ed0:	str	r1, [sp, #28]
   45ed4:	ldr	r1, [sp, #72]	; 0x48
   45ed8:	lsl	r2, r1, #3
   45edc:	str	r2, [sp, #64]	; 0x40
   45ee0:	bic	r2, r1, #1
   45ee4:	str	r2, [sp, #40]	; 0x28
   45ee8:	b	45f24 <GetDataSlab+0x15fa4>
   45eec:	ldr	r0, [sp, #28]
   45ef0:	ldr	r0, [r0, r2]
   45ef4:	add	r8, r8, r0, lsl #2
   45ef8:	add	r3, r0, r3
   45efc:	ldr	r0, [sp, #64]	; 0x40
   45f00:	ldr	r1, [sp, #72]	; 0x48
   45f04:	ldr	r6, [sp, #68]	; 0x44
   45f08:	mov	r2, #0
   45f0c:	add	lr, lr, r0
   45f10:	ldr	r0, [sp, #76]	; 0x4c
   45f14:	add	r6, r6, r1
   45f18:	str	r6, [sp, #68]	; 0x44
   45f1c:	cmp	r6, r0
   45f20:	bge	56c1c <GetDataSlab+0x26c9c>
   45f24:	cmp	r1, #1
   45f28:	sub	ip, fp, #176	; 0xb0
   45f2c:	blt	4604c <GetDataSlab+0x160cc>
   45f30:	ldr	r0, [fp, #12]
   45f34:	mov	r5, #0
   45f38:	ldr	r6, [r0]
   45f3c:	beq	46014 <GetDataSlab+0x16094>
   45f40:	ldr	r0, [sp, #36]	; 0x24
   45f44:	add	ip, r8, r6, lsl #2
   45f48:	mov	r1, #0
   45f4c:	str	r6, [sp, #60]	; 0x3c
   45f50:	str	ip, [sp, #48]	; 0x30
   45f54:	cmp	r0, #0
   45f58:	beq	45fb4 <GetDataSlab+0x16034>
   45f5c:	ldr	r2, [sp, #24]
   45f60:	mov	r9, lr
   45f64:	sub	r6, fp, #448	; 0x1c0
   45f68:	ldm	ip, {r0, r5}
   45f6c:	str	r5, [fp, #-452]	; 0xfffffe3c
   45f70:	mov	r5, #32
   45f74:	subs	r2, r2, #2
   45f78:	add	r1, r1, #4
   45f7c:	str	r0, [fp, #-456]	; 0xfffffe38
   45f80:	add	r0, r9, #16
   45f84:	vld1.32	{d16}, [r7 :64]
   45f88:	vmovl.s32	q8, d16
   45f8c:	vst1.64	{d16-d17}, [r9], r5
   45f90:	ldr	r5, [ip, #8]
   45f94:	ldr	sl, [ip, #12]
   45f98:	add	ip, ip, #16
   45f9c:	str	sl, [fp, #-444]	; 0xfffffe44
   45fa0:	str	r5, [fp, #-448]	; 0xfffffe40
   45fa4:	vld1.32	{d16}, [r6 :64]
   45fa8:	vmovl.s32	q8, d16
   45fac:	vst1.64	{d16-d17}, [r0]
   45fb0:	bne	45f68 <GetDataSlab+0x15fe8>
   45fb4:	ldr	r0, [sp, #44]	; 0x2c
   45fb8:	sub	ip, fp, #176	; 0xb0
   45fbc:	cmp	r0, #0
   45fc0:	beq	45ff8 <GetDataSlab+0x16078>
   45fc4:	ldr	r0, [sp, #88]	; 0x58
   45fc8:	ldr	r2, [sp, #68]	; 0x44
   45fcc:	ldr	r5, [sp, #48]	; 0x30
   45fd0:	add	r0, r0, r2, lsl #3
   45fd4:	ldr	r2, [r5, r1, lsl #2]!
   45fd8:	add	r0, r0, r1, lsl #3
   45fdc:	str	r2, [fp, #-464]	; 0xfffffe30
   45fe0:	ldr	r2, [r5, #4]
   45fe4:	str	r2, [fp, #-460]	; 0xfffffe34
   45fe8:	sub	r2, fp, #464	; 0x1d0
   45fec:	vld1.32	{d16}, [r2 :64]
   45ff0:	vmovl.s32	q8, d16
   45ff4:	vst1.64	{d16-d17}, [r0]
   45ff8:	ldr	r0, [sp, #72]	; 0x48
   45ffc:	ldr	r5, [sp, #40]	; 0x28
   46000:	ldr	r9, [sp, #52]	; 0x34
   46004:	ldr	sl, [sp, #32]
   46008:	ldr	r6, [sp, #60]	; 0x3c
   4600c:	cmp	r0, r5
   46010:	beq	4604c <GetDataSlab+0x160cc>
   46014:	mov	r0, #0
   46018:	sub	r1, r0, r5, lsl #3
   4601c:	ldr	r0, [sp, #72]	; 0x48
   46020:	sub	r2, r0, r5
   46024:	add	r0, r5, r6
   46028:	add	r5, r8, r0, lsl #2
   4602c:	ldr	r0, [r5], #4
   46030:	mov	r6, lr
   46034:	subs	r2, r2, #1
   46038:	str	r0, [r6, -r1]!
   4603c:	asr	r0, r0, #31
   46040:	sub	r1, r1, #8
   46044:	str	r0, [r6, #4]
   46048:	bne	4602c <GetDataSlab+0x160ac>
   4604c:	ldr	r0, [fp, #24]
   46050:	add	r8, r8, r9, lsl #2
   46054:	add	r3, r3, r9
   46058:	cmp	r0, #2
   4605c:	blt	45efc <GetDataSlab+0x15f7c>
   46060:	ldr	r1, [sp, #56]	; 0x38
   46064:	mov	r2, #0
   46068:	b	46098 <GetDataSlab+0x16118>
   4606c:	ldr	r7, [sp, #80]	; 0x50
   46070:	ldr	r6, [ip, r2]
   46074:	sub	r0, r5, r0
   46078:	ldr	r7, [r7, r2]
   4607c:	mla	r0, r7, r6, r0
   46080:	sub	r7, fp, #456	; 0x1c8
   46084:	add	r3, r0, r3
   46088:	add	r8, r8, r0, lsl #2
   4608c:	subs	r1, r1, #1
   46090:	add	r2, r2, #4
   46094:	beq	45efc <GetDataSlab+0x15f7c>
   46098:	ldr	r0, [r4, r2]
   4609c:	add	r0, r0, #1
   460a0:	str	r0, [r4, r2]
   460a4:	ldr	r6, [sl, r2]
   460a8:	sdiv	r5, r0, r6
   460ac:	mls	r0, r5, r6, r0
   460b0:	cmp	r0, #0
   460b4:	bne	45eec <GetDataSlab+0x15f6c>
   460b8:	mov	r0, #0
   460bc:	str	r0, [r4, r2]
   460c0:	ldr	r0, [sp, #84]	; 0x54
   460c4:	ldr	r5, [r0, r2]
   460c8:	sdiv	r0, r3, r5
   460cc:	mls	r0, r0, r5, r3
   460d0:	cmp	r0, #0
   460d4:	bne	4606c <GetDataSlab+0x160ec>
   460d8:	ldr	r0, [sp, #80]	; 0x50
   460dc:	ldr	r0, [r0, r2]
   460e0:	cmp	r0, #0
   460e4:	beq	4608c <GetDataSlab+0x1610c>
   460e8:	ldr	r7, [ip, r2]
   460ec:	mla	r3, r7, r0, r3
   460f0:	mul	r0, r7, r0
   460f4:	sub	r7, fp, #456	; 0x1c8
   460f8:	b	46088 <GetDataSlab+0x16108>
   460fc:	ldr	r0, [sp, #80]	; 0x50
   46100:	mov	r7, r2
   46104:	add	sl, r0, r3, lsl #2
   46108:	ldr	r0, [sp, #48]	; 0x30
   4610c:	cmp	r0, #1
   46110:	bne	535c8 <GetDataSlab+0x23648>
   46114:	ldr	r0, [sp, #72]	; 0x48
   46118:	ldr	r2, [fp, #12]
   4611c:	sub	r6, fp, #96	; 0x60
   46120:	cmp	r0, #1
   46124:	blt	56c18 <GetDataSlab+0x26c98>
   46128:	ldr	r5, [sp, #68]	; 0x44
   4612c:	mov	r1, #1
   46130:	ldr	lr, [sp, #88]	; 0x58
   46134:	ldr	r8, [sp, #52]	; 0x34
   46138:	sub	r0, r5, #2
   4613c:	add	r1, r1, r0, lsr #1
   46140:	lsr	r0, r0, #1
   46144:	str	r0, [sp, #36]	; 0x24
   46148:	mov	r0, #0
   4614c:	and	r4, r1, #1
   46150:	str	r0, [sp, #76]	; 0x4c
   46154:	sub	r1, r1, r4
   46158:	str	r4, [sp, #44]	; 0x2c
   4615c:	str	r1, [sp, #24]
   46160:	sub	r1, fp, #136	; 0x88
   46164:	orr	r4, r1, #4
   46168:	ldr	r1, [fp, #20]
   4616c:	add	r9, r1, #4
   46170:	orr	r1, r7, #4
   46174:	mov	r7, #0
   46178:	str	r1, [sp, #84]	; 0x54
   4617c:	add	r1, r2, #4
   46180:	orr	r2, r6, #4
   46184:	str	r9, [sp, #32]
   46188:	str	r1, [sp, #80]	; 0x50
   4618c:	ldr	r1, [fp, #24]
   46190:	str	r2, [sp, #28]
   46194:	lsl	r2, r5, #3
   46198:	str	r2, [sp, #64]	; 0x40
   4619c:	bic	r2, r5, #1
   461a0:	str	r2, [sp, #40]	; 0x28
   461a4:	sub	r1, r1, #1
   461a8:	str	r1, [sp, #56]	; 0x38
   461ac:	mov	r1, r5
   461b0:	b	461ec <GetDataSlab+0x1626c>
   461b4:	ldr	r0, [sp, #28]
   461b8:	ldr	r0, [r0, r2]
   461bc:	add	sl, sl, r0, lsl #2
   461c0:	add	r3, r0, r3
   461c4:	ldr	r0, [sp, #64]	; 0x40
   461c8:	ldr	r1, [sp, #68]	; 0x44
   461cc:	ldr	r6, [sp, #76]	; 0x4c
   461d0:	mov	r2, #0
   461d4:	add	lr, lr, r0
   461d8:	ldr	r0, [sp, #72]	; 0x48
   461dc:	add	r6, r6, r1
   461e0:	str	r6, [sp, #76]	; 0x4c
   461e4:	cmp	r6, r0
   461e8:	bge	56c1c <GetDataSlab+0x26c9c>
   461ec:	ldr	r0, [fp, #12]
   461f0:	cmp	r1, #1
   461f4:	sub	ip, fp, #176	; 0xb0
   461f8:	blt	46310 <GetDataSlab+0x16390>
   461fc:	ldr	r6, [r0]
   46200:	mov	r5, #0
   46204:	beq	462e0 <GetDataSlab+0x16360>
   46208:	ldr	r0, [sp, #36]	; 0x24
   4620c:	add	ip, sl, r6, lsl #2
   46210:	mov	r1, #0
   46214:	str	r6, [sp, #60]	; 0x3c
   46218:	str	ip, [sp, #48]	; 0x30
   4621c:	cmp	r0, #0
   46220:	beq	46280 <GetDataSlab+0x16300>
   46224:	ldr	r2, [sp, #24]
   46228:	mov	r9, lr
   4622c:	sub	r6, fp, #424	; 0x1a8
   46230:	ldm	ip, {r0, r5}
   46234:	str	r5, [fp, #-428]	; 0xfffffe54
   46238:	mov	r5, #32
   4623c:	subs	r2, r2, #2
   46240:	add	r1, r1, #4
   46244:	str	r0, [fp, #-432]	; 0xfffffe50
   46248:	sub	r0, fp, #432	; 0x1b0
   4624c:	vld1.32	{d16}, [r0 :64]
   46250:	add	r0, r9, #16
   46254:	vmovl.u32	q8, d16
   46258:	vst1.64	{d16-d17}, [r9], r5
   4625c:	ldr	r5, [ip, #8]
   46260:	ldr	r8, [ip, #12]
   46264:	add	ip, ip, #16
   46268:	str	r8, [fp, #-420]	; 0xfffffe5c
   4626c:	str	r5, [fp, #-424]	; 0xfffffe58
   46270:	vld1.32	{d16}, [r6 :64]
   46274:	vmovl.u32	q8, d16
   46278:	vst1.64	{d16-d17}, [r0]
   4627c:	bne	46230 <GetDataSlab+0x162b0>
   46280:	ldr	r0, [sp, #44]	; 0x2c
   46284:	ldr	r8, [sp, #52]	; 0x34
   46288:	ldr	r9, [sp, #32]
   4628c:	sub	ip, fp, #176	; 0xb0
   46290:	cmp	r0, #0
   46294:	ldr	r0, [sp, #88]	; 0x58
   46298:	beq	462cc <GetDataSlab+0x1634c>
   4629c:	ldr	r2, [sp, #76]	; 0x4c
   462a0:	ldr	r5, [sp, #48]	; 0x30
   462a4:	add	r0, r0, r2, lsl #3
   462a8:	ldr	r2, [r5, r1, lsl #2]!
   462ac:	add	r0, r0, r1, lsl #3
   462b0:	str	r2, [fp, #-440]	; 0xfffffe48
   462b4:	ldr	r2, [r5, #4]
   462b8:	str	r2, [fp, #-436]	; 0xfffffe4c
   462bc:	sub	r2, fp, #440	; 0x1b8
   462c0:	vld1.32	{d16}, [r2 :64]
   462c4:	vmovl.u32	q8, d16
   462c8:	vst1.64	{d16-d17}, [r0]
   462cc:	ldr	r0, [sp, #68]	; 0x44
   462d0:	ldr	r5, [sp, #40]	; 0x28
   462d4:	ldr	r6, [sp, #60]	; 0x3c
   462d8:	cmp	r0, r5
   462dc:	beq	46310 <GetDataSlab+0x16390>
   462e0:	ldr	r0, [sp, #68]	; 0x44
   462e4:	sub	r1, r7, r5, lsl #3
   462e8:	sub	r2, r0, r5
   462ec:	add	r0, r5, r6
   462f0:	add	r5, sl, r0, lsl #2
   462f4:	ldr	r0, [r5], #4
   462f8:	mov	r6, lr
   462fc:	subs	r2, r2, #1
   46300:	str	r0, [r6, -r1]!
   46304:	sub	r1, r1, #8
   46308:	str	r7, [r6, #4]
   4630c:	bne	462f4 <GetDataSlab+0x16374>
   46310:	ldr	r0, [fp, #24]
   46314:	add	sl, sl, r8, lsl #2
   46318:	add	r3, r3, r8
   4631c:	cmp	r0, #2
   46320:	blt	461c4 <GetDataSlab+0x16244>
   46324:	ldr	r1, [sp, #56]	; 0x38
   46328:	mov	r2, #0
   4632c:	b	4635c <GetDataSlab+0x163dc>
   46330:	ldr	r7, [sp, #80]	; 0x50
   46334:	ldr	r6, [ip, r2]
   46338:	sub	r0, r5, r0
   4633c:	ldr	r7, [r7, r2]
   46340:	mla	r0, r7, r6, r0
   46344:	mov	r7, #0
   46348:	add	r3, r0, r3
   4634c:	add	sl, sl, r0, lsl #2
   46350:	subs	r1, r1, #1
   46354:	add	r2, r2, #4
   46358:	beq	461c4 <GetDataSlab+0x16244>
   4635c:	ldr	r0, [r4, r2]
   46360:	add	r0, r0, #1
   46364:	str	r0, [r4, r2]
   46368:	ldr	r6, [r9, r2]
   4636c:	sdiv	r5, r0, r6
   46370:	mls	r0, r5, r6, r0
   46374:	cmp	r0, #0
   46378:	bne	461b4 <GetDataSlab+0x16234>
   4637c:	ldr	r0, [sp, #84]	; 0x54
   46380:	str	r7, [r4, r2]
   46384:	ldr	r5, [r0, r2]
   46388:	sdiv	r0, r3, r5
   4638c:	mls	r0, r0, r5, r3
   46390:	cmp	r0, #0
   46394:	bne	46330 <GetDataSlab+0x163b0>
   46398:	ldr	r0, [sp, #80]	; 0x50
   4639c:	ldr	r0, [r0, r2]
   463a0:	cmp	r0, #0
   463a4:	beq	46350 <GetDataSlab+0x163d0>
   463a8:	ldr	r7, [ip, r2]
   463ac:	mla	r3, r7, r0, r3
   463b0:	mul	r0, r7, r0
   463b4:	mov	r7, #0
   463b8:	b	4634c <GetDataSlab+0x163cc>
   463bc:	ldr	r0, [sp, #80]	; 0x50
   463c0:	add	r5, r0, r8, lsl #2
   463c4:	ldr	r0, [sp, #36]	; 0x24
   463c8:	cmp	r0, #1
   463cc:	bne	537ec <GetDataSlab+0x2386c>
   463d0:	ldr	r0, [sp, #76]	; 0x4c
   463d4:	ldr	lr, [sp, #68]	; 0x44
   463d8:	sub	r3, fp, #96	; 0x60
   463dc:	cmp	r0, #1
   463e0:	ldr	r0, [fp, #12]
   463e4:	blt	56c18 <GetDataSlab+0x26c98>
   463e8:	sub	r1, fp, #136	; 0x88
   463ec:	orr	r9, r1, #4
   463f0:	ldr	r1, [fp, #20]
   463f4:	add	r1, r1, #4
   463f8:	str	r1, [sp, #48]	; 0x30
   463fc:	orr	r1, r2, #4
   46400:	str	r1, [sp, #52]	; 0x34
   46404:	ldr	r1, [fp, #24]
   46408:	sub	r1, r1, #1
   4640c:	str	r1, [sp, #44]	; 0x2c
   46410:	orr	r1, r3, #4
   46414:	str	r1, [sp, #32]
   46418:	and	r1, lr, #1
   4641c:	str	r1, [sp, #56]	; 0x38
   46420:	sub	r1, lr, r1
   46424:	str	r1, [sp, #64]	; 0x40
   46428:	lsl	r1, lr, #3
   4642c:	str	r1, [sp, #60]	; 0x3c
   46430:	ldr	r1, [r0], #4
   46434:	str	r0, [sp, #92]	; 0x5c
   46438:	add	r0, r1, #1
   4643c:	str	r1, [sp, #40]	; 0x28
   46440:	str	r0, [sp, #36]	; 0x24
   46444:	ldr	r0, [sp, #88]	; 0x58
   46448:	str	r0, [sp, #84]	; 0x54
   4644c:	mov	r0, #0
   46450:	str	r0, [sp, #80]	; 0x50
   46454:	b	46494 <GetDataSlab+0x16514>
   46458:	ldr	r1, [sp, #32]
   4645c:	ldr	r0, [r1, r0]
   46460:	add	r5, r5, r0, lsl #2
   46464:	add	r8, r0, r8
   46468:	ldr	r0, [sp, #60]	; 0x3c
   4646c:	ldr	r1, [sp, #84]	; 0x54
   46470:	mov	r2, #0
   46474:	add	r1, r1, r0
   46478:	ldr	r0, [sp, #76]	; 0x4c
   4647c:	str	r1, [sp, #84]	; 0x54
   46480:	ldr	r1, [sp, #80]	; 0x50
   46484:	add	r1, r1, lr
   46488:	cmp	r1, r0
   4648c:	str	r1, [sp, #80]	; 0x50
   46490:	bge	56c1c <GetDataSlab+0x26c9c>
   46494:	ldr	r7, [sp, #64]	; 0x40
   46498:	cmp	lr, #1
   4649c:	blt	46524 <GetDataSlab+0x165a4>
   464a0:	mov	r4, r8
   464a4:	mov	sl, #0
   464a8:	beq	464e8 <GetDataSlab+0x16568>
   464ac:	ldr	r0, [sp, #36]	; 0x24
   464b0:	ldr	r6, [sp, #84]	; 0x54
   464b4:	mov	sl, #0
   464b8:	add	r8, r5, r0, lsl #2
   464bc:	ldr	r0, [r8, #-4]
   464c0:	bl	6b914 <__aeabi_f2lz>
   464c4:	strd	r0, [r6]
   464c8:	ldr	r0, [r8]
   464cc:	bl	6b914 <__aeabi_f2lz>
   464d0:	add	sl, sl, #2
   464d4:	strd	r0, [r6, #8]
   464d8:	add	r6, r6, #16
   464dc:	add	r8, r8, #8
   464e0:	cmp	r7, sl
   464e4:	bne	464bc <GetDataSlab+0x1653c>
   464e8:	ldr	r0, [sp, #56]	; 0x38
   464ec:	ldr	lr, [sp, #68]	; 0x44
   464f0:	mov	r8, r4
   464f4:	cmp	r0, #0
   464f8:	beq	46524 <GetDataSlab+0x165a4>
   464fc:	ldr	r0, [sp, #40]	; 0x28
   46500:	ldr	r1, [sp, #88]	; 0x58
   46504:	ldr	r2, [sp, #80]	; 0x50
   46508:	add	r0, r5, r0, lsl #2
   4650c:	add	r6, r1, r2, lsl #3
   46510:	ldr	r0, [r0, sl, lsl #2]
   46514:	bl	6b914 <__aeabi_f2lz>
   46518:	ldr	lr, [sp, #68]	; 0x44
   4651c:	str	r0, [r6, sl, lsl #3]!
   46520:	str	r1, [r6, #4]
   46524:	ldr	r0, [sp, #72]	; 0x48
   46528:	add	r5, r5, r0, lsl #2
   4652c:	add	r8, r8, r0
   46530:	ldr	r0, [fp, #24]
   46534:	cmp	r0, #2
   46538:	blt	46468 <GetDataSlab+0x164e8>
   4653c:	add	sl, sp, #44	; 0x2c
   46540:	ldr	ip, [sp, #92]	; 0x5c
   46544:	mov	r0, #0
   46548:	ldm	sl, {r1, r7, sl}
   4654c:	b	46578 <GetDataSlab+0x165f8>
   46550:	sub	r6, fp, #176	; 0xb0
   46554:	ldr	r4, [ip, r0]
   46558:	sub	r2, r2, r3
   4655c:	ldr	r6, [r6, r0]
   46560:	mla	r2, r4, r6, r2
   46564:	add	r8, r2, r8
   46568:	add	r5, r5, r2, lsl #2
   4656c:	subs	r1, r1, #1
   46570:	add	r0, r0, #4
   46574:	beq	46468 <GetDataSlab+0x164e8>
   46578:	ldr	r2, [r9, r0]
   4657c:	add	r2, r2, #1
   46580:	str	r2, [r9, r0]
   46584:	ldr	r3, [r7, r0]
   46588:	sdiv	r6, r2, r3
   4658c:	mls	r2, r6, r3, r2
   46590:	cmp	r2, #0
   46594:	bne	46458 <GetDataSlab+0x164d8>
   46598:	mov	r2, #0
   4659c:	str	r2, [r9, r0]
   465a0:	ldr	r2, [sl, r0]
   465a4:	sdiv	r3, r8, r2
   465a8:	mls	r3, r3, r2, r8
   465ac:	cmp	r3, #0
   465b0:	bne	46550 <GetDataSlab+0x165d0>
   465b4:	ldr	r2, [ip, r0]
   465b8:	cmp	r2, #0
   465bc:	beq	4656c <GetDataSlab+0x165ec>
   465c0:	sub	r3, fp, #176	; 0xb0
   465c4:	ldr	r3, [r3, r0]
   465c8:	mla	r8, r3, r2, r8
   465cc:	mul	r2, r3, r2
   465d0:	b	46568 <GetDataSlab+0x165e8>
   465d4:	ldr	r0, [sp, #80]	; 0x50
   465d8:	add	r5, r0, r8, lsl #3
   465dc:	ldr	r0, [sp, #36]	; 0x24
   465e0:	cmp	r0, #1
   465e4:	bne	53a38 <GetDataSlab+0x23ab8>
   465e8:	ldr	r0, [sp, #76]	; 0x4c
   465ec:	ldr	lr, [sp, #72]	; 0x48
   465f0:	sub	r3, fp, #96	; 0x60
   465f4:	cmp	r0, #1
   465f8:	ldr	r0, [fp, #12]
   465fc:	blt	56c18 <GetDataSlab+0x26c98>
   46600:	sub	r1, fp, #136	; 0x88
   46604:	orr	r9, r1, #4
   46608:	ldr	r1, [fp, #20]
   4660c:	add	r1, r1, #4
   46610:	str	r1, [sp, #48]	; 0x30
   46614:	orr	r1, r2, #4
   46618:	str	r1, [sp, #52]	; 0x34
   4661c:	ldr	r1, [fp, #24]
   46620:	sub	r1, r1, #1
   46624:	str	r1, [sp, #44]	; 0x2c
   46628:	orr	r1, r3, #4
   4662c:	str	r1, [sp, #32]
   46630:	and	r1, lr, #1
   46634:	str	r1, [sp, #56]	; 0x38
   46638:	sub	r1, lr, r1
   4663c:	str	r1, [sp, #64]	; 0x40
   46640:	lsl	r1, lr, #3
   46644:	str	r1, [sp, #60]	; 0x3c
   46648:	ldr	r1, [r0], #4
   4664c:	str	r0, [sp, #92]	; 0x5c
   46650:	add	r0, r1, #1
   46654:	str	r1, [sp, #40]	; 0x28
   46658:	str	r0, [sp, #36]	; 0x24
   4665c:	ldr	r0, [sp, #88]	; 0x58
   46660:	str	r0, [sp, #84]	; 0x54
   46664:	mov	r0, #0
   46668:	str	r0, [sp, #80]	; 0x50
   4666c:	b	466b0 <GetDataSlab+0x16730>
   46670:	ldr	r1, [sp, #32]
   46674:	ldr	r0, [r1, r0]
   46678:	add	r4, r4, r0, lsl #3
   4667c:	add	r8, r0, r8
   46680:	ldr	r0, [sp, #60]	; 0x3c
   46684:	ldr	r1, [sp, #84]	; 0x54
   46688:	mov	r5, r4
   4668c:	mov	r2, #0
   46690:	add	r1, r1, r0
   46694:	ldr	r0, [sp, #76]	; 0x4c
   46698:	str	r1, [sp, #84]	; 0x54
   4669c:	ldr	r1, [sp, #80]	; 0x50
   466a0:	add	r1, r1, lr
   466a4:	cmp	r1, r0
   466a8:	str	r1, [sp, #80]	; 0x50
   466ac:	bge	56c1c <GetDataSlab+0x26c9c>
   466b0:	ldr	r7, [sp, #64]	; 0x40
   466b4:	cmp	lr, #1
   466b8:	blt	46750 <GetDataSlab+0x167d0>
   466bc:	mov	r4, r8
   466c0:	mov	sl, #0
   466c4:	beq	4670c <GetDataSlab+0x1678c>
   466c8:	ldr	r0, [sp, #36]	; 0x24
   466cc:	ldr	r6, [sp, #84]	; 0x54
   466d0:	mov	sl, #0
   466d4:	add	r8, r5, r0, lsl #3
   466d8:	vldr	d16, [r8, #-8]
   466dc:	vmov	r0, r1, d16
   466e0:	bl	6b940 <__aeabi_d2lz>
   466e4:	strd	r0, [r6]
   466e8:	vldr	d16, [r8]
   466ec:	vmov	r0, r1, d16
   466f0:	bl	6b940 <__aeabi_d2lz>
   466f4:	add	sl, sl, #2
   466f8:	strd	r0, [r6, #8]
   466fc:	add	r6, r6, #16
   46700:	add	r8, r8, #16
   46704:	cmp	r7, sl
   46708:	bne	466d8 <GetDataSlab+0x16758>
   4670c:	ldr	r0, [sp, #56]	; 0x38
   46710:	ldr	lr, [sp, #72]	; 0x48
   46714:	mov	r8, r4
   46718:	cmp	r0, #0
   4671c:	beq	46750 <GetDataSlab+0x167d0>
   46720:	ldr	r0, [sp, #40]	; 0x28
   46724:	ldr	r1, [sp, #88]	; 0x58
   46728:	ldr	r2, [sp, #80]	; 0x50
   4672c:	add	r0, r5, r0, lsl #3
   46730:	add	r6, r1, r2, lsl #3
   46734:	add	r0, r0, sl, lsl #3
   46738:	vldr	d16, [r0]
   4673c:	vmov	r0, r1, d16
   46740:	bl	6b940 <__aeabi_d2lz>
   46744:	ldr	lr, [sp, #72]	; 0x48
   46748:	str	r0, [r6, sl, lsl #3]!
   4674c:	str	r1, [r6, #4]
   46750:	ldr	r0, [sp, #68]	; 0x44
   46754:	mov	r4, r5
   46758:	add	r4, r5, r0, lsl #3
   4675c:	add	r8, r8, r0
   46760:	ldr	r0, [fp, #24]
   46764:	cmp	r0, #2
   46768:	blt	46680 <GetDataSlab+0x16700>
   4676c:	add	sl, sp, #44	; 0x2c
   46770:	ldr	ip, [sp, #92]	; 0x5c
   46774:	mov	r0, #0
   46778:	ldm	sl, {r1, r7, sl}
   4677c:	b	467a8 <GetDataSlab+0x16828>
   46780:	sub	r6, fp, #176	; 0xb0
   46784:	ldr	r5, [ip, r0]
   46788:	sub	r2, r2, r3
   4678c:	ldr	r6, [r6, r0]
   46790:	mla	r2, r5, r6, r2
   46794:	add	r8, r2, r8
   46798:	add	r4, r4, r2, lsl #3
   4679c:	subs	r1, r1, #1
   467a0:	add	r0, r0, #4
   467a4:	beq	46680 <GetDataSlab+0x16700>
   467a8:	ldr	r2, [r9, r0]
   467ac:	add	r2, r2, #1
   467b0:	str	r2, [r9, r0]
   467b4:	ldr	r3, [r7, r0]
   467b8:	sdiv	r6, r2, r3
   467bc:	mls	r2, r6, r3, r2
   467c0:	cmp	r2, #0
   467c4:	bne	46670 <GetDataSlab+0x166f0>
   467c8:	mov	r2, #0
   467cc:	str	r2, [r9, r0]
   467d0:	ldr	r2, [sl, r0]
   467d4:	sdiv	r3, r8, r2
   467d8:	mls	r3, r3, r2, r8
   467dc:	cmp	r3, #0
   467e0:	bne	46780 <GetDataSlab+0x16800>
   467e4:	ldr	r2, [ip, r0]
   467e8:	cmp	r2, #0
   467ec:	beq	4679c <GetDataSlab+0x1681c>
   467f0:	sub	r3, fp, #176	; 0xb0
   467f4:	ldr	r3, [r3, r0]
   467f8:	mla	r8, r3, r2, r8
   467fc:	mul	r2, r3, r2
   46800:	b	46798 <GetDataSlab+0x16818>
   46804:	ldr	r0, [sp, #80]	; 0x50
   46808:	add	r7, r0, ip, lsl #3
   4680c:	ldr	r0, [sp, #32]
   46810:	cmp	r0, #1
   46814:	bne	53c8c <GetDataSlab+0x23d0c>
   46818:	ldr	r0, [sp, #68]	; 0x44
   4681c:	ldr	r8, [sp, #88]	; 0x58
   46820:	ldr	lr, [sp, #44]	; 0x2c
   46824:	cmp	r0, #1
   46828:	blt	53ec4 <GetDataSlab+0x23f44>
   4682c:	sub	r0, lr, #2
   46830:	mov	r2, #1
   46834:	ldr	sl, [sp, #24]
   46838:	str	r8, [sp, #52]	; 0x34
   4683c:	add	r2, r2, r0, lsr #1
   46840:	lsr	r0, r0, #1
   46844:	str	r0, [sp, #4]
   46848:	mov	r0, #0
   4684c:	and	r1, r2, #1
   46850:	str	r0, [sp, #56]	; 0x38
   46854:	mov	r0, #0
   46858:	str	r1, [sp, #12]
   4685c:	sub	r1, r2, r1
   46860:	sub	r2, fp, #136	; 0x88
   46864:	str	r0, [sp, #64]	; 0x40
   46868:	str	r1, [sp]
   4686c:	ldr	r1, [fp, #20]
   46870:	orr	r9, r2, #4
   46874:	add	r4, r1, #4
   46878:	sub	r1, fp, #176	; 0xb0
   4687c:	orr	r1, r1, #4
   46880:	str	r4, [sp, #32]
   46884:	str	r1, [sp, #84]	; 0x54
   46888:	ldr	r1, [fp, #24]
   4688c:	sub	r1, r1, #1
   46890:	str	r1, [sp, #28]
   46894:	sub	r1, fp, #96	; 0x60
   46898:	orr	r1, r1, #4
   4689c:	str	r1, [sp, #16]
   468a0:	ldr	r1, [fp, #12]
   468a4:	ldr	r2, [r1], #4
   468a8:	str	r1, [sp, #72]	; 0x48
   468ac:	add	r1, lr, r2
   468b0:	str	r2, [sp, #40]	; 0x28
   468b4:	str	r1, [sp, #20]
   468b8:	and	r1, lr, #1
   468bc:	str	r1, [sp, #36]	; 0x24
   468c0:	lsl	r1, lr, #3
   468c4:	str	r1, [sp, #48]	; 0x30
   468c8:	bic	r1, lr, #1
   468cc:	str	r1, [sp, #8]
   468d0:	b	46918 <GetDataSlab+0x16998>
   468d4:	ldr	r0, [sp, #16]
   468d8:	ldr	r0, [r0, r2]
   468dc:	add	r7, r7, r0, lsl #3
   468e0:	add	ip, r0, ip
   468e4:	ldr	r0, [sp, #48]	; 0x30
   468e8:	ldr	r1, [sp, #52]	; 0x34
   468ec:	add	r1, r1, r0
   468f0:	ldr	r0, [sp, #56]	; 0x38
   468f4:	str	r1, [sp, #52]	; 0x34
   468f8:	ldr	r1, [sp, #64]	; 0x40
   468fc:	add	r0, r0, #1
   46900:	str	r0, [sp, #56]	; 0x38
   46904:	ldr	r0, [sp, #68]	; 0x44
   46908:	add	r1, r1, lr
   4690c:	str	r1, [sp, #64]	; 0x40
   46910:	cmp	r1, r0
   46914:	bge	53ec4 <GetDataSlab+0x23f44>
   46918:	cmp	lr, #1
   4691c:	str	r7, [sp, #60]	; 0x3c
   46920:	blt	46a64 <GetDataSlab+0x16ae4>
   46924:	ldr	r0, [sp, #60]	; 0x3c
   46928:	ldr	r1, [sp, #40]	; 0x28
   4692c:	mov	r6, #0
   46930:	add	r2, r0, r1, lsl #3
   46934:	ldr	r1, [sp, #64]	; 0x40
   46938:	add	r4, r8, r1, lsl #3
   4693c:	beq	469ec <GetDataSlab+0x16a6c>
   46940:	ldr	r1, [sp, #48]	; 0x30
   46944:	ldr	r3, [sp, #56]	; 0x38
   46948:	mla	r3, r1, r3, r8
   4694c:	ldr	r1, [sp, #20]
   46950:	add	r5, r0, r1, lsl #3
   46954:	cmp	r3, r5
   46958:	bcs	46974 <GetDataSlab+0x169f4>
   4695c:	ldr	r0, [sp, #48]	; 0x30
   46960:	ldr	r1, [sp, #56]	; 0x38
   46964:	mla	r3, r0, r1, r0
   46968:	add	r3, r8, r3
   4696c:	cmp	r3, r2
   46970:	bhi	469ec <GetDataSlab+0x16a6c>
   46974:	ldr	r0, [sp, #4]
   46978:	mov	lr, #0
   4697c:	cmp	r0, #0
   46980:	beq	469b8 <GetDataSlab+0x16a38>
   46984:	ldr	r3, [sp, #52]	; 0x34
   46988:	ldr	r8, [sp]
   4698c:	mov	r6, r2
   46990:	mov	r0, #32
   46994:	add	r5, r6, #16
   46998:	vld1.64	{d16-d17}, [r6], r0
   4699c:	add	sl, r3, #16
   469a0:	subs	r8, r8, #2
   469a4:	add	lr, lr, #4
   469a8:	vst1.64	{d16-d17}, [r3], r0
   469ac:	vld1.64	{d16-d17}, [r5]
   469b0:	vst1.64	{d16-d17}, [sl]
   469b4:	bne	46994 <GetDataSlab+0x16a14>
   469b8:	ldr	r0, [sp, #12]
   469bc:	ldr	r8, [sp, #88]	; 0x58
   469c0:	cmp	r0, #0
   469c4:	beq	469d8 <GetDataSlab+0x16a58>
   469c8:	add	r3, r2, lr, lsl #3
   469cc:	vld1.64	{d16-d17}, [r3]
   469d0:	add	r3, r4, lr, lsl #3
   469d4:	vst1.64	{d16-d17}, [r3]
   469d8:	ldr	lr, [sp, #44]	; 0x2c
   469dc:	ldr	r6, [sp, #8]
   469e0:	ldr	sl, [sp, #24]
   469e4:	cmp	lr, r6
   469e8:	beq	46a64 <GetDataSlab+0x16ae4>
   469ec:	ldr	r0, [sp, #36]	; 0x24
   469f0:	mov	r3, r6
   469f4:	cmp	r0, #0
   469f8:	beq	46a14 <GetDataSlab+0x16a94>
   469fc:	mov	r3, r2
   46a00:	ldr	r5, [r3, r6, lsl #3]!
   46a04:	ldr	r3, [r3, #4]
   46a08:	str	r5, [r4, r6, lsl #3]!
   46a0c:	str	r3, [r4, #4]
   46a10:	orr	r3, r6, #1
   46a14:	orr	r6, r6, #1
   46a18:	cmp	lr, r6
   46a1c:	beq	46a64 <GetDataSlab+0x16ae4>
   46a20:	ldr	r5, [sp, #52]	; 0x34
   46a24:	sub	r6, lr, r3
   46a28:	lsl	r3, r3, #3
   46a2c:	add	r0, r2, #16
   46a30:	ldr	r7, [r2, r3]!
   46a34:	add	r1, r5, #16
   46a38:	subs	r6, r6, #2
   46a3c:	ldr	r4, [r2, #4]
   46a40:	str	r7, [r5, r3]!
   46a44:	str	r4, [r5, #4]
   46a48:	ldr	r7, [r2, #8]
   46a4c:	ldr	r2, [r2, #12]
   46a50:	str	r2, [r5, #12]
   46a54:	str	r7, [r5, #8]
   46a58:	mov	r2, r0
   46a5c:	mov	r5, r1
   46a60:	bne	46a2c <GetDataSlab+0x16aac>
   46a64:	ldr	r7, [sp, #60]	; 0x3c
   46a68:	ldr	r0, [fp, #24]
   46a6c:	add	ip, ip, sl
   46a70:	add	r7, r7, sl, lsl #3
   46a74:	cmp	r0, #2
   46a78:	blt	468e4 <GetDataSlab+0x16964>
   46a7c:	ldr	r6, [sp, #28]
   46a80:	ldr	r4, [sp, #32]
   46a84:	mov	r2, #0
   46a88:	b	46ab8 <GetDataSlab+0x16b38>
   46a8c:	ldr	r1, [sp, #72]	; 0x48
   46a90:	sub	r0, fp, #176	; 0xb0
   46a94:	sub	r3, r3, r5
   46a98:	ldr	r0, [r0, r2]
   46a9c:	ldr	r1, [r1, r2]
   46aa0:	mla	r0, r1, r0, r3
   46aa4:	add	ip, r0, ip
   46aa8:	add	r7, r7, r0, lsl #3
   46aac:	subs	r6, r6, #1
   46ab0:	add	r2, r2, #4
   46ab4:	beq	468e4 <GetDataSlab+0x16964>
   46ab8:	ldr	r0, [r9, r2]
   46abc:	add	r0, r0, #1
   46ac0:	str	r0, [r9, r2]
   46ac4:	ldr	r1, [r4, r2]
   46ac8:	sdiv	r3, r0, r1
   46acc:	mls	r0, r3, r1, r0
   46ad0:	cmp	r0, #0
   46ad4:	bne	468d4 <GetDataSlab+0x16954>
   46ad8:	mov	r0, #0
   46adc:	str	r0, [r9, r2]
   46ae0:	ldr	r0, [sp, #84]	; 0x54
   46ae4:	ldr	r3, [r0, r2]
   46ae8:	sdiv	r0, ip, r3
   46aec:	mls	r5, r0, r3, ip
   46af0:	cmp	r5, #0
   46af4:	bne	46a8c <GetDataSlab+0x16b0c>
   46af8:	ldr	r0, [sp, #72]	; 0x48
   46afc:	ldr	r3, [r0, r2]
   46b00:	cmp	r3, #0
   46b04:	beq	46aac <GetDataSlab+0x16b2c>
   46b08:	sub	r0, fp, #176	; 0xb0
   46b0c:	ldr	r0, [r0, r2]
   46b10:	mla	ip, r0, r3, ip
   46b14:	mul	r0, r0, r3
   46b18:	b	46aa8 <GetDataSlab+0x16b28>
   46b1c:	ldr	r0, [sp, #80]	; 0x50
   46b20:	cmp	lr, #1
   46b24:	add	r9, r0, r7
   46b28:	bne	5438c <GetDataSlab+0x2440c>
   46b2c:	ldr	r0, [sp, #72]	; 0x48
   46b30:	ldr	r8, [sp, #88]	; 0x58
   46b34:	sub	r2, fp, #176	; 0xb0
   46b38:	cmp	r0, #1
   46b3c:	blt	56c18 <GetDataSlab+0x26c98>
   46b40:	ldr	r3, [sp, #68]	; 0x44
   46b44:	mov	r1, #1
   46b48:	ldr	lr, [sp, #40]	; 0x28
   46b4c:	mov	sl, #0
   46b50:	sub	r0, r3, #2
   46b54:	add	r1, r1, r0, lsr #1
   46b58:	lsr	r0, r0, #1
   46b5c:	str	r0, [sp, #20]
   46b60:	mov	r0, #0
   46b64:	and	r6, r1, #1
   46b68:	str	r0, [sp, #60]	; 0x3c
   46b6c:	mov	r0, #0
   46b70:	sub	r1, r1, r6
   46b74:	str	r6, [sp, #28]
   46b78:	str	r0, [sp, #64]	; 0x40
   46b7c:	str	r1, [sp, #16]
   46b80:	sub	r1, fp, #136	; 0x88
   46b84:	orr	r4, r1, #4
   46b88:	ldr	r1, [fp, #20]
   46b8c:	add	r1, r1, #4
   46b90:	str	r1, [sp, #84]	; 0x54
   46b94:	orr	r1, r2, #4
   46b98:	lsl	r2, r3, #3
   46b9c:	str	r1, [sp, #80]	; 0x50
   46ba0:	ldr	r1, [fp, #12]
   46ba4:	str	r2, [sp, #56]	; 0x38
   46ba8:	and	r2, r3, #1
   46bac:	str	r2, [sp, #48]	; 0x30
   46bb0:	bic	r2, r3, #1
   46bb4:	str	r2, [sp, #24]
   46bb8:	add	r1, r1, #4
   46bbc:	str	r1, [sp, #76]	; 0x4c
   46bc0:	ldr	r1, [fp, #24]
   46bc4:	sub	r1, r1, #1
   46bc8:	str	r1, [sp, #44]	; 0x2c
   46bcc:	sub	r1, fp, #96	; 0x60
   46bd0:	orr	r1, r1, #4
   46bd4:	str	r1, [sp, #32]
   46bd8:	mov	r1, r3
   46bdc:	b	46c24 <GetDataSlab+0x16ca4>
   46be0:	ldr	r0, [sp, #32]
   46be4:	ldr	r0, [r0, r2]
   46be8:	add	r9, r9, r0
   46bec:	add	r7, r0, r7
   46bf0:	ldr	r0, [sp, #56]	; 0x38
   46bf4:	ldr	r1, [sp, #68]	; 0x44
   46bf8:	ldr	r3, [sp, #64]	; 0x40
   46bfc:	mov	r2, #0
   46c00:	add	r8, r8, r0
   46c04:	ldr	r0, [sp, #60]	; 0x3c
   46c08:	add	r3, r3, r1
   46c0c:	str	r3, [sp, #64]	; 0x40
   46c10:	add	r0, r0, #1
   46c14:	str	r0, [sp, #60]	; 0x3c
   46c18:	ldr	r0, [sp, #72]	; 0x48
   46c1c:	cmp	r3, r0
   46c20:	bge	56c1c <GetDataSlab+0x26c9c>
   46c24:	cmp	r1, #1
   46c28:	sub	ip, fp, #176	; 0xb0
   46c2c:	blt	46ddc <GetDataSlab+0x16e5c>
   46c30:	ldr	r0, [fp, #12]
   46c34:	ldr	r1, [sp, #64]	; 0x40
   46c38:	mov	r2, #0
   46c3c:	ldr	r6, [r0]
   46c40:	ldr	r0, [sp, #88]	; 0x58
   46c44:	add	r1, r0, r1, lsl #3
   46c48:	add	r3, r9, r6
   46c4c:	str	r1, [sp, #52]	; 0x34
   46c50:	beq	46d64 <GetDataSlab+0x16de4>
   46c54:	ldr	r1, [sp, #56]	; 0x38
   46c58:	ldr	r5, [sp, #60]	; 0x3c
   46c5c:	mla	r0, r1, r5, r0
   46c60:	ldr	r1, [sp, #68]	; 0x44
   46c64:	add	r1, r9, r1
   46c68:	add	r1, r1, r6
   46c6c:	cmp	r0, r1
   46c70:	bcs	46c90 <GetDataSlab+0x16d10>
   46c74:	ldr	r0, [sp, #56]	; 0x38
   46c78:	ldr	r1, [sp, #60]	; 0x3c
   46c7c:	mla	r0, r0, r1, r0
   46c80:	ldr	r1, [sp, #88]	; 0x58
   46c84:	add	r0, r1, r0
   46c88:	cmp	r3, r0
   46c8c:	bcc	46d64 <GetDataSlab+0x16de4>
   46c90:	ldr	r0, [sp, #20]
   46c94:	mov	r2, #0
   46c98:	str	r6, [sp, #36]	; 0x24
   46c9c:	cmp	r0, #0
   46ca0:	beq	46d0c <GetDataSlab+0x16d8c>
   46ca4:	ldr	ip, [sp, #16]
   46ca8:	mov	lr, r8
   46cac:	add	r5, sp, #528	; 0x210
   46cb0:	mov	r0, r3
   46cb4:	mov	r6, #32
   46cb8:	subs	ip, ip, #2
   46cbc:	ldrh	r1, [r0, r2]!
   46cc0:	add	r2, r2, #4
   46cc4:	strh	r1, [r5, #248]	; 0xf8
   46cc8:	sub	r1, fp, #280	; 0x118
   46ccc:	vld1.16	{d16[0]}, [r1 :16]
   46cd0:	add	r1, lr, #16
   46cd4:	vmovl.u8	q8, d16
   46cd8:	vmovl.u16	q8, d16
   46cdc:	vmovl.u32	q8, d16
   46ce0:	vst1.64	{d16-d17}, [lr], r6
   46ce4:	ldrh	r0, [r0, #2]
   46ce8:	strh	r0, [r5, #252]	; 0xfc
   46cec:	sub	r0, fp, #276	; 0x114
   46cf0:	vld1.16	{d16[0]}, [r0 :16]
   46cf4:	vmovl.u8	q8, d16
   46cf8:	vmovl.u16	q8, d16
   46cfc:	vmovl.u32	q8, d16
   46d00:	vst1.64	{d16-d17}, [r1]
   46d04:	bne	46cb0 <GetDataSlab+0x16d30>
   46d08:	b	46d10 <GetDataSlab+0x16d90>
   46d0c:	add	r5, sp, #528	; 0x210
   46d10:	ldr	r0, [sp, #28]
   46d14:	ldr	lr, [sp, #40]	; 0x28
   46d18:	ldr	r6, [sp, #36]	; 0x24
   46d1c:	sub	ip, fp, #176	; 0xb0
   46d20:	cmp	r0, #0
   46d24:	beq	46d54 <GetDataSlab+0x16dd4>
   46d28:	add	r0, r3, r2
   46d2c:	ldrh	r0, [r0]
   46d30:	strh	r0, [r5, #244]	; 0xf4
   46d34:	sub	r0, fp, #284	; 0x11c
   46d38:	vld1.16	{d16[0]}, [r0 :16]
   46d3c:	ldr	r0, [sp, #52]	; 0x34
   46d40:	add	r0, r0, r2, lsl #3
   46d44:	vmovl.u8	q8, d16
   46d48:	vmovl.u16	q8, d16
   46d4c:	vmovl.u32	q8, d16
   46d50:	vst1.64	{d16-d17}, [r0]
   46d54:	ldr	r0, [sp, #68]	; 0x44
   46d58:	ldr	r2, [sp, #24]
   46d5c:	cmp	r0, r2
   46d60:	beq	46ddc <GetDataSlab+0x16e5c>
   46d64:	ldr	r0, [sp, #48]	; 0x30
   46d68:	cmp	r0, #0
   46d6c:	mov	r0, r2
   46d70:	beq	46d88 <GetDataSlab+0x16e08>
   46d74:	ldrb	r0, [r3, r2]
   46d78:	ldr	r1, [sp, #52]	; 0x34
   46d7c:	str	r0, [r1, r2, lsl #3]!
   46d80:	orr	r0, r2, #1
   46d84:	str	sl, [r1, #4]
   46d88:	orr	r1, r2, #1
   46d8c:	ldr	r2, [sp, #68]	; 0x44
   46d90:	cmp	r2, r1
   46d94:	beq	46ddc <GetDataSlab+0x16e5c>
   46d98:	ldr	r1, [sp, #68]	; 0x44
   46d9c:	sub	r2, r1, r0
   46da0:	add	r1, r0, r6
   46da4:	lsl	r0, r0, #3
   46da8:	add	r1, r9, r1
   46dac:	add	r3, r1, #1
   46db0:	ldrb	r1, [r3, #-1]
   46db4:	mov	r6, r8
   46db8:	subs	r2, r2, #2
   46dbc:	str	r1, [r6, r0]!
   46dc0:	add	r0, r0, #16
   46dc4:	str	sl, [r6, #4]
   46dc8:	ldrb	r1, [r3]
   46dcc:	add	r3, r3, #2
   46dd0:	str	sl, [r6, #12]
   46dd4:	str	r1, [r6, #8]
   46dd8:	bne	46db0 <GetDataSlab+0x16e30>
   46ddc:	ldr	r0, [fp, #24]
   46de0:	add	r9, r9, lr
   46de4:	add	r7, r7, lr
   46de8:	cmp	r0, #2
   46dec:	blt	46bf0 <GetDataSlab+0x16c70>
   46df0:	ldr	r3, [sp, #44]	; 0x2c
   46df4:	mov	r2, #0
   46df8:	b	46e24 <GetDataSlab+0x16ea4>
   46dfc:	ldr	r5, [sp, #76]	; 0x4c
   46e00:	ldr	r6, [ip, r2]
   46e04:	sub	r0, r0, r1
   46e08:	ldr	r5, [r5, r2]
   46e0c:	mla	r0, r5, r6, r0
   46e10:	add	r7, r0, r7
   46e14:	add	r9, r9, r0
   46e18:	subs	r3, r3, #1
   46e1c:	add	r2, r2, #4
   46e20:	beq	46bf0 <GetDataSlab+0x16c70>
   46e24:	ldr	r0, [r4, r2]
   46e28:	ldr	r1, [sp, #84]	; 0x54
   46e2c:	add	r0, r0, #1
   46e30:	str	r0, [r4, r2]
   46e34:	ldr	r1, [r1, r2]
   46e38:	sdiv	r6, r0, r1
   46e3c:	mls	r0, r6, r1, r0
   46e40:	cmp	r0, #0
   46e44:	bne	46be0 <GetDataSlab+0x16c60>
   46e48:	ldr	r0, [sp, #80]	; 0x50
   46e4c:	str	sl, [r4, r2]
   46e50:	ldr	r0, [r0, r2]
   46e54:	sdiv	r1, r7, r0
   46e58:	mls	r1, r1, r0, r7
   46e5c:	cmp	r1, #0
   46e60:	bne	46dfc <GetDataSlab+0x16e7c>
   46e64:	ldr	r0, [sp, #76]	; 0x4c
   46e68:	ldr	r0, [r0, r2]
   46e6c:	cmp	r0, #0
   46e70:	beq	46e18 <GetDataSlab+0x16e98>
   46e74:	ldr	r1, [ip, r2]
   46e78:	mla	r7, r1, r0, r7
   46e7c:	mla	r9, r1, r0, r9
   46e80:	b	46e18 <GetDataSlab+0x16e98>
   46e84:	ldr	r0, [sp, #80]	; 0x50
   46e88:	ldr	r7, [sp, #68]	; 0x44
   46e8c:	add	r5, r0, r1, lsl #1
   46e90:	cmp	r7, #1
   46e94:	bne	5459c <GetDataSlab+0x2461c>
   46e98:	ldr	r0, [sp, #76]	; 0x4c
   46e9c:	ldr	ip, [fp, #12]
   46ea0:	ldr	r3, [fp, #20]
   46ea4:	ldr	lr, [sp, #60]	; 0x3c
   46ea8:	cmp	r0, #1
   46eac:	blt	56c18 <GetDataSlab+0x26c98>
   46eb0:	mov	r7, ip
   46eb4:	mov	ip, r3
   46eb8:	ldr	r3, [sp, #72]	; 0x48
   46ebc:	mov	r2, #1
   46ec0:	ldr	r8, [sp, #88]	; 0x58
   46ec4:	add	r9, ip, #4
   46ec8:	mov	ip, #0
   46ecc:	str	r9, [sp, #36]	; 0x24
   46ed0:	sub	r0, r3, #2
   46ed4:	add	r2, r2, r0, lsr #1
   46ed8:	lsr	r0, r0, #1
   46edc:	str	r0, [sp, #40]	; 0x28
   46ee0:	and	r4, r2, #1
   46ee4:	sub	r2, r2, r4
   46ee8:	str	r4, [sp, #48]	; 0x30
   46eec:	str	r2, [sp, #28]
   46ef0:	sub	r2, fp, #136	; 0x88
   46ef4:	orr	r4, r2, #4
   46ef8:	sub	r2, fp, #176	; 0xb0
   46efc:	orr	r2, r2, #4
   46f00:	str	r2, [sp, #84]	; 0x54
   46f04:	ldr	r2, [fp, #24]
   46f08:	sub	r2, r2, #1
   46f0c:	str	r2, [sp, #56]	; 0x38
   46f10:	orr	r2, r6, #4
   46f14:	str	r2, [sp, #32]
   46f18:	lsl	r2, r3, #3
   46f1c:	str	r2, [sp, #80]	; 0x50
   46f20:	bic	r2, r3, #1
   46f24:	str	r2, [sp, #44]	; 0x2c
   46f28:	ldr	r2, [r7], #4
   46f2c:	str	r7, [sp, #92]	; 0x5c
   46f30:	str	r2, [sp, #68]	; 0x44
   46f34:	cmp	r3, #1
   46f38:	bge	46f78 <GetDataSlab+0x16ff8>
   46f3c:	b	4708c <GetDataSlab+0x1710c>
   46f40:	ldr	r0, [sp, #32]
   46f44:	ldr	r0, [r0, r2]
   46f48:	add	r5, r5, r0, lsl #1
   46f4c:	add	r1, r0, r1
   46f50:	ldr	r0, [sp, #80]	; 0x50
   46f54:	ldr	r3, [sp, #72]	; 0x48
   46f58:	mov	r2, #0
   46f5c:	add	r8, r8, r0
   46f60:	ldr	r0, [sp, #76]	; 0x4c
   46f64:	add	ip, ip, r3
   46f68:	cmp	ip, r0
   46f6c:	bge	56c1c <GetDataSlab+0x26c9c>
   46f70:	cmp	r3, #1
   46f74:	blt	4708c <GetDataSlab+0x1710c>
   46f78:	mov	r0, #0
   46f7c:	beq	47050 <GetDataSlab+0x170d0>
   46f80:	ldr	r0, [sp, #68]	; 0x44
   46f84:	mov	r2, #0
   46f88:	str	ip, [sp, #64]	; 0x40
   46f8c:	add	sl, r5, r0, lsl #1
   46f90:	ldr	r0, [sp, #40]	; 0x28
   46f94:	str	sl, [sp, #52]	; 0x34
   46f98:	cmp	r0, #0
   46f9c:	beq	46ff8 <GetDataSlab+0x17078>
   46fa0:	ldr	lr, [sp, #28]
   46fa4:	mov	r3, r8
   46fa8:	sub	r7, fp, #316	; 0x13c
   46fac:	mov	ip, #32
   46fb0:	sub	r6, fp, #312	; 0x138
   46fb4:	ldr	r0, [sl]
   46fb8:	subs	lr, lr, #2
   46fbc:	add	r2, r2, #4
   46fc0:	str	r0, [fp, #-316]	; 0xfffffec4
   46fc4:	add	r0, r3, #16
   46fc8:	vld1.32	{d16[0]}, [r7 :32]
   46fcc:	vmovl.s16	q8, d16
   46fd0:	vmovl.s32	q8, d16
   46fd4:	vst1.64	{d16-d17}, [r3], ip
   46fd8:	ldr	r9, [sl, #4]
   46fdc:	add	sl, sl, #8
   46fe0:	str	r9, [fp, #-312]	; 0xfffffec8
   46fe4:	vld1.32	{d16[0]}, [r6 :32]
   46fe8:	vmovl.s16	q8, d16
   46fec:	vmovl.s32	q8, d16
   46ff0:	vst1.64	{d16-d17}, [r0]
   46ff4:	bne	46fb4 <GetDataSlab+0x17034>
   46ff8:	ldr	r0, [sp, #48]	; 0x30
   46ffc:	ldr	ip, [sp, #64]	; 0x40
   47000:	cmp	r0, #0
   47004:	beq	47034 <GetDataSlab+0x170b4>
   47008:	ldr	r3, [sp, #52]	; 0x34
   4700c:	ldr	r0, [sp, #88]	; 0x58
   47010:	ldr	r3, [r3, r2, lsl #1]
   47014:	add	r0, r0, ip, lsl #3
   47018:	add	r0, r0, r2, lsl #3
   4701c:	str	r3, [fp, #-320]	; 0xfffffec0
   47020:	sub	r3, fp, #320	; 0x140
   47024:	vld1.32	{d16[0]}, [r3 :32]
   47028:	vmovl.s16	q8, d16
   4702c:	vmovl.s32	q8, d16
   47030:	vst1.64	{d16-d17}, [r0]
   47034:	ldr	r0, [sp, #72]	; 0x48
   47038:	ldr	r2, [sp, #44]	; 0x2c
   4703c:	ldr	lr, [sp, #60]	; 0x3c
   47040:	ldr	r9, [sp, #36]	; 0x24
   47044:	cmp	r0, r2
   47048:	mov	r0, r2
   4704c:	beq	4708c <GetDataSlab+0x1710c>
   47050:	ldr	r6, [sp, #68]	; 0x44
   47054:	ldr	r3, [sp, #72]	; 0x48
   47058:	mov	r2, #0
   4705c:	sub	r2, r2, r0, lsl #3
   47060:	add	r7, r5, r6, lsl #1
   47064:	sub	r3, r3, r0
   47068:	add	r0, r7, r0, lsl #1
   4706c:	ldrsh	r7, [r0], #2
   47070:	mov	r6, r8
   47074:	subs	r3, r3, #1
   47078:	str	r7, [r6, -r2]!
   4707c:	asr	r7, r7, #31
   47080:	sub	r2, r2, #8
   47084:	str	r7, [r6, #4]
   47088:	bne	4706c <GetDataSlab+0x170ec>
   4708c:	ldr	r0, [fp, #24]
   47090:	add	r5, r5, lr, lsl #1
   47094:	add	r1, r1, lr
   47098:	cmp	r0, #2
   4709c:	blt	46f50 <GetDataSlab+0x16fd0>
   470a0:	ldr	sl, [sp, #56]	; 0x38
   470a4:	mov	r2, #0
   470a8:	b	470d8 <GetDataSlab+0x17158>
   470ac:	ldr	r6, [sp, #92]	; 0x5c
   470b0:	sub	r7, fp, #176	; 0xb0
   470b4:	sub	r0, r0, r3
   470b8:	ldr	r7, [r7, r2]
   470bc:	ldr	r6, [r6, r2]
   470c0:	mla	r0, r6, r7, r0
   470c4:	add	r1, r0, r1
   470c8:	add	r5, r5, r0, lsl #1
   470cc:	subs	sl, sl, #1
   470d0:	add	r2, r2, #4
   470d4:	beq	46f50 <GetDataSlab+0x16fd0>
   470d8:	ldr	r0, [r4, r2]
   470dc:	add	r0, r0, #1
   470e0:	str	r0, [r4, r2]
   470e4:	ldr	r3, [r9, r2]
   470e8:	sdiv	r7, r0, r3
   470ec:	mls	r0, r7, r3, r0
   470f0:	cmp	r0, #0
   470f4:	bne	46f40 <GetDataSlab+0x16fc0>
   470f8:	mov	r0, #0
   470fc:	str	r0, [r4, r2]
   47100:	ldr	r0, [sp, #84]	; 0x54
   47104:	ldr	r0, [r0, r2]
   47108:	sdiv	r3, r1, r0
   4710c:	mls	r3, r3, r0, r1
   47110:	cmp	r3, #0
   47114:	bne	470ac <GetDataSlab+0x1712c>
   47118:	ldr	r0, [sp, #92]	; 0x5c
   4711c:	ldr	r0, [r0, r2]
   47120:	cmp	r0, #0
   47124:	beq	470cc <GetDataSlab+0x1714c>
   47128:	sub	r3, fp, #176	; 0xb0
   4712c:	ldr	r3, [r3, r2]
   47130:	mla	r1, r3, r0, r1
   47134:	mul	r0, r3, r0
   47138:	b	470c8 <GetDataSlab+0x17148>
   4713c:	ldr	r0, [sp, #80]	; 0x50
   47140:	ldr	r6, [sp, #68]	; 0x44
   47144:	add	r0, r0, r1, lsl #1
   47148:	cmp	r6, #1
   4714c:	str	r0, [sp, #44]	; 0x2c
   47150:	bne	547b8 <GetDataSlab+0x24838>
   47154:	ldr	r0, [sp, #76]	; 0x4c
   47158:	ldr	r3, [fp, #12]
   4715c:	ldr	r8, [sp, #56]	; 0x38
   47160:	sub	r7, fp, #96	; 0x60
   47164:	cmp	r0, #1
   47168:	blt	56c18 <GetDataSlab+0x26c98>
   4716c:	mov	r6, r3
   47170:	ldr	r3, [sp, #72]	; 0x48
   47174:	mov	r2, #1
   47178:	ldr	sl, [sp, #88]	; 0x58
   4717c:	mov	r4, #0
   47180:	sub	r0, r3, #2
   47184:	add	r2, r2, r0, lsr #1
   47188:	lsr	r0, r0, #1
   4718c:	str	r0, [sp, #32]
   47190:	mov	r0, #0
   47194:	and	r5, r2, #1
   47198:	str	r0, [sp, #68]	; 0x44
   4719c:	sub	r2, r2, r5
   471a0:	str	r5, [sp, #40]	; 0x28
   471a4:	str	r2, [sp, #24]
   471a8:	sub	r2, fp, #136	; 0x88
   471ac:	orr	r9, r2, #4
   471b0:	ldr	r2, [fp, #20]
   471b4:	add	r2, r2, #4
   471b8:	str	r2, [sp, #84]	; 0x54
   471bc:	orr	r2, ip, #4
   471c0:	ldr	ip, [sp, #44]	; 0x2c
   471c4:	str	r2, [sp, #80]	; 0x50
   471c8:	ldr	r2, [fp, #24]
   471cc:	sub	r2, r2, #1
   471d0:	str	r2, [sp, #52]	; 0x34
   471d4:	orr	r2, r7, #4
   471d8:	str	r2, [sp, #28]
   471dc:	lsl	r2, r3, #3
   471e0:	str	r2, [sp, #64]	; 0x40
   471e4:	bic	r2, r3, #1
   471e8:	str	r2, [sp, #36]	; 0x24
   471ec:	ldr	r2, [r6], #4
   471f0:	str	r6, [sp, #92]	; 0x5c
   471f4:	str	r2, [sp, #60]	; 0x3c
   471f8:	b	47234 <GetDataSlab+0x172b4>
   471fc:	ldr	r0, [sp, #28]
   47200:	ldr	r0, [r0, r2]
   47204:	add	ip, ip, r0, lsl #1
   47208:	add	r1, r0, r1
   4720c:	ldr	r0, [sp, #64]	; 0x40
   47210:	ldr	r3, [sp, #72]	; 0x48
   47214:	ldr	r7, [sp, #68]	; 0x44
   47218:	mov	r2, #0
   4721c:	add	sl, sl, r0
   47220:	ldr	r0, [sp, #76]	; 0x4c
   47224:	add	r7, r7, r3
   47228:	str	r7, [sp, #68]	; 0x44
   4722c:	cmp	r7, r0
   47230:	bge	56c1c <GetDataSlab+0x26c9c>
   47234:	ldr	lr, [sp, #92]	; 0x5c
   47238:	cmp	r3, #1
   4723c:	blt	47354 <GetDataSlab+0x173d4>
   47240:	mov	r0, #0
   47244:	beq	47320 <GetDataSlab+0x173a0>
   47248:	ldr	r0, [sp, #60]	; 0x3c
   4724c:	mov	r3, #0
   47250:	str	ip, [sp, #44]	; 0x2c
   47254:	add	r2, ip, r0, lsl #1
   47258:	ldr	r0, [sp, #32]
   4725c:	str	r2, [sp, #48]	; 0x30
   47260:	cmp	r0, #0
   47264:	beq	472c0 <GetDataSlab+0x17340>
   47268:	ldr	lr, [sp, #24]
   4726c:	mov	r8, sl
   47270:	sub	r5, fp, #304	; 0x130
   47274:	mov	r6, #32
   47278:	sub	ip, fp, #300	; 0x12c
   4727c:	ldr	r0, [r2]
   47280:	subs	lr, lr, #2
   47284:	add	r3, r3, #4
   47288:	str	r0, [fp, #-304]	; 0xfffffed0
   4728c:	add	r0, r8, #16
   47290:	vld1.32	{d16[0]}, [r5 :32]
   47294:	vmovl.u16	q8, d16
   47298:	vmovl.u32	q8, d16
   4729c:	vst1.64	{d16-d17}, [r8], r6
   472a0:	ldr	r7, [r2, #4]
   472a4:	add	r2, r2, #8
   472a8:	str	r7, [fp, #-300]	; 0xfffffed4
   472ac:	vld1.32	{d16[0]}, [ip :32]
   472b0:	vmovl.u16	q8, d16
   472b4:	vmovl.u32	q8, d16
   472b8:	vst1.64	{d16-d17}, [r0]
   472bc:	bne	4727c <GetDataSlab+0x172fc>
   472c0:	ldr	r0, [sp, #40]	; 0x28
   472c4:	ldr	lr, [sp, #92]	; 0x5c
   472c8:	ldr	r8, [sp, #56]	; 0x38
   472cc:	mov	r4, #0
   472d0:	cmp	r0, #0
   472d4:	ldr	r0, [sp, #88]	; 0x58
   472d8:	beq	47308 <GetDataSlab+0x17388>
   472dc:	ldr	r2, [sp, #68]	; 0x44
   472e0:	add	r0, r0, r2, lsl #3
   472e4:	ldr	r2, [sp, #48]	; 0x30
   472e8:	add	r0, r0, r3, lsl #3
   472ec:	ldr	r2, [r2, r3, lsl #1]
   472f0:	str	r2, [fp, #-308]	; 0xfffffecc
   472f4:	sub	r2, fp, #308	; 0x134
   472f8:	vld1.32	{d16[0]}, [r2 :32]
   472fc:	vmovl.u16	q8, d16
   47300:	vmovl.u32	q8, d16
   47304:	vst1.64	{d16-d17}, [r0]
   47308:	ldr	r0, [sp, #72]	; 0x48
   4730c:	ldr	r2, [sp, #36]	; 0x24
   47310:	ldr	ip, [sp, #44]	; 0x2c
   47314:	cmp	r0, r2
   47318:	mov	r0, r2
   4731c:	beq	47354 <GetDataSlab+0x173d4>
   47320:	ldr	r5, [sp, #60]	; 0x3c
   47324:	ldr	r3, [sp, #72]	; 0x48
   47328:	sub	r2, r4, r0, lsl #3
   4732c:	add	r7, ip, r5, lsl #1
   47330:	sub	r3, r3, r0
   47334:	add	r0, r7, r0, lsl #1
   47338:	ldrh	r7, [r0], #2
   4733c:	mov	r6, sl
   47340:	subs	r3, r3, #1
   47344:	str	r7, [r6, -r2]!
   47348:	sub	r2, r2, #8
   4734c:	str	r4, [r6, #4]
   47350:	bne	47338 <GetDataSlab+0x173b8>
   47354:	ldr	r0, [fp, #24]
   47358:	add	ip, ip, r8, lsl #1
   4735c:	add	r1, r1, r8
   47360:	cmp	r0, #2
   47364:	blt	4720c <GetDataSlab+0x1728c>
   47368:	ldr	r3, [sp, #52]	; 0x34
   4736c:	mov	r2, #0
   47370:	b	4739c <GetDataSlab+0x1741c>
   47374:	sub	r5, fp, #176	; 0xb0
   47378:	sub	r0, r0, r7
   4737c:	ldr	r6, [r5, r2]
   47380:	ldr	r5, [lr, r2]
   47384:	mla	r0, r5, r6, r0
   47388:	add	r1, r0, r1
   4738c:	add	ip, ip, r0, lsl #1
   47390:	subs	r3, r3, #1
   47394:	add	r2, r2, #4
   47398:	beq	4720c <GetDataSlab+0x1728c>
   4739c:	ldr	r0, [r9, r2]
   473a0:	ldr	r5, [sp, #84]	; 0x54
   473a4:	add	r0, r0, #1
   473a8:	str	r0, [r9, r2]
   473ac:	ldr	r7, [r5, r2]
   473b0:	sdiv	r6, r0, r7
   473b4:	mls	r0, r6, r7, r0
   473b8:	cmp	r0, #0
   473bc:	bne	471fc <GetDataSlab+0x1727c>
   473c0:	ldr	r0, [sp, #80]	; 0x50
   473c4:	str	r4, [r9, r2]
   473c8:	ldr	r0, [r0, r2]
   473cc:	sdiv	r7, r1, r0
   473d0:	mls	r7, r7, r0, r1
   473d4:	cmp	r7, #0
   473d8:	bne	47374 <GetDataSlab+0x173f4>
   473dc:	ldr	r0, [lr, r2]
   473e0:	cmp	r0, #0
   473e4:	beq	47390 <GetDataSlab+0x17410>
   473e8:	sub	r5, fp, #176	; 0xb0
   473ec:	ldr	r7, [r5, r2]
   473f0:	mla	r1, r7, r0, r1
   473f4:	mul	r0, r7, r0
   473f8:	b	4738c <GetDataSlab+0x1740c>
   473fc:	ldr	r0, [sp, #80]	; 0x50
   47400:	ldr	r4, [sp, #56]	; 0x38
   47404:	mov	r2, lr
   47408:	add	r8, r0, r3, lsl #2
   4740c:	cmp	r4, #1
   47410:	bne	549cc <GetDataSlab+0x24a4c>
   47414:	ldr	r0, [sp, #76]	; 0x4c
   47418:	ldr	r7, [fp, #20]
   4741c:	ldr	r9, [sp, #52]	; 0x34
   47420:	cmp	r0, #1
   47424:	ldr	r0, [sp, #72]	; 0x48
   47428:	blt	56c18 <GetDataSlab+0x26c98>
   4742c:	sub	r0, r0, #2
   47430:	mov	r1, #1
   47434:	ldr	lr, [sp, #88]	; 0x58
   47438:	add	sl, r7, #4
   4743c:	sub	r7, fp, #360	; 0x168
   47440:	add	r1, r1, r0, lsr #1
   47444:	lsr	r0, r0, #1
   47448:	str	sl, [sp, #32]
   4744c:	str	r0, [sp, #36]	; 0x24
   47450:	mov	r0, #0
   47454:	and	r6, r1, #1
   47458:	str	r0, [sp, #68]	; 0x44
   4745c:	sub	r1, r1, r6
   47460:	str	r6, [sp, #44]	; 0x2c
   47464:	str	r1, [sp, #24]
   47468:	sub	r1, fp, #136	; 0x88
   4746c:	orr	r4, r1, #4
   47470:	orr	r1, r2, #4
   47474:	str	r1, [sp, #84]	; 0x54
   47478:	ldr	r1, [fp, #12]
   4747c:	add	r1, r1, #4
   47480:	str	r1, [sp, #80]	; 0x50
   47484:	ldr	r1, [fp, #24]
   47488:	sub	r1, r1, #1
   4748c:	str	r1, [sp, #56]	; 0x38
   47490:	sub	r1, fp, #96	; 0x60
   47494:	orr	r1, r1, #4
   47498:	str	r1, [sp, #28]
   4749c:	ldr	r1, [sp, #72]	; 0x48
   474a0:	lsl	r2, r1, #3
   474a4:	str	r2, [sp, #64]	; 0x40
   474a8:	bic	r2, r1, #1
   474ac:	str	r2, [sp, #40]	; 0x28
   474b0:	b	474ec <GetDataSlab+0x1756c>
   474b4:	ldr	r0, [sp, #28]
   474b8:	ldr	r0, [r0, r2]
   474bc:	add	r8, r8, r0, lsl #2
   474c0:	add	r3, r0, r3
   474c4:	ldr	r0, [sp, #64]	; 0x40
   474c8:	ldr	r1, [sp, #72]	; 0x48
   474cc:	ldr	r6, [sp, #68]	; 0x44
   474d0:	mov	r2, #0
   474d4:	add	lr, lr, r0
   474d8:	ldr	r0, [sp, #76]	; 0x4c
   474dc:	add	r6, r6, r1
   474e0:	str	r6, [sp, #68]	; 0x44
   474e4:	cmp	r6, r0
   474e8:	bge	56c1c <GetDataSlab+0x26c9c>
   474ec:	cmp	r1, #1
   474f0:	sub	ip, fp, #176	; 0xb0
   474f4:	blt	47614 <GetDataSlab+0x17694>
   474f8:	ldr	r0, [fp, #12]
   474fc:	mov	r5, #0
   47500:	ldr	r6, [r0]
   47504:	beq	475dc <GetDataSlab+0x1765c>
   47508:	ldr	r0, [sp, #36]	; 0x24
   4750c:	add	ip, r8, r6, lsl #2
   47510:	mov	r1, #0
   47514:	str	r6, [sp, #60]	; 0x3c
   47518:	str	ip, [sp, #48]	; 0x30
   4751c:	cmp	r0, #0
   47520:	beq	4757c <GetDataSlab+0x175fc>
   47524:	ldr	r2, [sp, #24]
   47528:	mov	r9, lr
   4752c:	sub	r6, fp, #352	; 0x160
   47530:	ldm	ip, {r0, r5}
   47534:	str	r5, [fp, #-356]	; 0xfffffe9c
   47538:	mov	r5, #32
   4753c:	subs	r2, r2, #2
   47540:	add	r1, r1, #4
   47544:	str	r0, [fp, #-360]	; 0xfffffe98
   47548:	add	r0, r9, #16
   4754c:	vld1.32	{d16}, [r7 :64]
   47550:	vmovl.s32	q8, d16
   47554:	vst1.64	{d16-d17}, [r9], r5
   47558:	ldr	r5, [ip, #8]
   4755c:	ldr	sl, [ip, #12]
   47560:	add	ip, ip, #16
   47564:	str	sl, [fp, #-348]	; 0xfffffea4
   47568:	str	r5, [fp, #-352]	; 0xfffffea0
   4756c:	vld1.32	{d16}, [r6 :64]
   47570:	vmovl.s32	q8, d16
   47574:	vst1.64	{d16-d17}, [r0]
   47578:	bne	47530 <GetDataSlab+0x175b0>
   4757c:	ldr	r0, [sp, #44]	; 0x2c
   47580:	sub	ip, fp, #176	; 0xb0
   47584:	cmp	r0, #0
   47588:	beq	475c0 <GetDataSlab+0x17640>
   4758c:	ldr	r0, [sp, #88]	; 0x58
   47590:	ldr	r2, [sp, #68]	; 0x44
   47594:	ldr	r5, [sp, #48]	; 0x30
   47598:	add	r0, r0, r2, lsl #3
   4759c:	ldr	r2, [r5, r1, lsl #2]!
   475a0:	add	r0, r0, r1, lsl #3
   475a4:	str	r2, [fp, #-368]	; 0xfffffe90
   475a8:	ldr	r2, [r5, #4]
   475ac:	str	r2, [fp, #-364]	; 0xfffffe94
   475b0:	sub	r2, fp, #368	; 0x170
   475b4:	vld1.32	{d16}, [r2 :64]
   475b8:	vmovl.s32	q8, d16
   475bc:	vst1.64	{d16-d17}, [r0]
   475c0:	ldr	r0, [sp, #72]	; 0x48
   475c4:	ldr	r5, [sp, #40]	; 0x28
   475c8:	ldr	r9, [sp, #52]	; 0x34
   475cc:	ldr	sl, [sp, #32]
   475d0:	ldr	r6, [sp, #60]	; 0x3c
   475d4:	cmp	r0, r5
   475d8:	beq	47614 <GetDataSlab+0x17694>
   475dc:	mov	r0, #0
   475e0:	sub	r1, r0, r5, lsl #3
   475e4:	ldr	r0, [sp, #72]	; 0x48
   475e8:	sub	r2, r0, r5
   475ec:	add	r0, r5, r6
   475f0:	add	r5, r8, r0, lsl #2
   475f4:	ldr	r0, [r5], #4
   475f8:	mov	r6, lr
   475fc:	subs	r2, r2, #1
   47600:	str	r0, [r6, -r1]!
   47604:	asr	r0, r0, #31
   47608:	sub	r1, r1, #8
   4760c:	str	r0, [r6, #4]
   47610:	bne	475f4 <GetDataSlab+0x17674>
   47614:	ldr	r0, [fp, #24]
   47618:	add	r8, r8, r9, lsl #2
   4761c:	add	r3, r3, r9
   47620:	cmp	r0, #2
   47624:	blt	474c4 <GetDataSlab+0x17544>
   47628:	ldr	r1, [sp, #56]	; 0x38
   4762c:	mov	r2, #0
   47630:	b	47660 <GetDataSlab+0x176e0>
   47634:	ldr	r7, [sp, #80]	; 0x50
   47638:	ldr	r6, [ip, r2]
   4763c:	sub	r0, r5, r0
   47640:	ldr	r7, [r7, r2]
   47644:	mla	r0, r7, r6, r0
   47648:	sub	r7, fp, #360	; 0x168
   4764c:	add	r3, r0, r3
   47650:	add	r8, r8, r0, lsl #2
   47654:	subs	r1, r1, #1
   47658:	add	r2, r2, #4
   4765c:	beq	474c4 <GetDataSlab+0x17544>
   47660:	ldr	r0, [r4, r2]
   47664:	add	r0, r0, #1
   47668:	str	r0, [r4, r2]
   4766c:	ldr	r6, [sl, r2]
   47670:	sdiv	r5, r0, r6
   47674:	mls	r0, r5, r6, r0
   47678:	cmp	r0, #0
   4767c:	bne	474b4 <GetDataSlab+0x17534>
   47680:	mov	r0, #0
   47684:	str	r0, [r4, r2]
   47688:	ldr	r0, [sp, #84]	; 0x54
   4768c:	ldr	r5, [r0, r2]
   47690:	sdiv	r0, r3, r5
   47694:	mls	r0, r0, r5, r3
   47698:	cmp	r0, #0
   4769c:	bne	47634 <GetDataSlab+0x176b4>
   476a0:	ldr	r0, [sp, #80]	; 0x50
   476a4:	ldr	r0, [r0, r2]
   476a8:	cmp	r0, #0
   476ac:	beq	47654 <GetDataSlab+0x176d4>
   476b0:	ldr	r7, [ip, r2]
   476b4:	mla	r3, r7, r0, r3
   476b8:	mul	r0, r7, r0
   476bc:	sub	r7, fp, #360	; 0x168
   476c0:	b	47650 <GetDataSlab+0x176d0>
   476c4:	ldr	r0, [sp, #80]	; 0x50
   476c8:	mov	r7, r2
   476cc:	add	sl, r0, r3, lsl #2
   476d0:	ldr	r0, [sp, #48]	; 0x30
   476d4:	cmp	r0, #1
   476d8:	bne	54bfc <GetDataSlab+0x24c7c>
   476dc:	ldr	r0, [sp, #72]	; 0x48
   476e0:	ldr	r2, [fp, #12]
   476e4:	sub	r6, fp, #96	; 0x60
   476e8:	cmp	r0, #1
   476ec:	blt	56c18 <GetDataSlab+0x26c98>
   476f0:	ldr	r5, [sp, #68]	; 0x44
   476f4:	mov	r1, #1
   476f8:	ldr	lr, [sp, #88]	; 0x58
   476fc:	ldr	r8, [sp, #52]	; 0x34
   47700:	sub	r0, r5, #2
   47704:	add	r1, r1, r0, lsr #1
   47708:	lsr	r0, r0, #1
   4770c:	str	r0, [sp, #36]	; 0x24
   47710:	mov	r0, #0
   47714:	and	r4, r1, #1
   47718:	str	r0, [sp, #76]	; 0x4c
   4771c:	sub	r1, r1, r4
   47720:	str	r4, [sp, #44]	; 0x2c
   47724:	str	r1, [sp, #24]
   47728:	sub	r1, fp, #136	; 0x88
   4772c:	orr	r4, r1, #4
   47730:	ldr	r1, [fp, #20]
   47734:	add	r9, r1, #4
   47738:	orr	r1, r7, #4
   4773c:	mov	r7, #0
   47740:	str	r1, [sp, #84]	; 0x54
   47744:	add	r1, r2, #4
   47748:	orr	r2, r6, #4
   4774c:	str	r9, [sp, #32]
   47750:	str	r1, [sp, #80]	; 0x50
   47754:	ldr	r1, [fp, #24]
   47758:	str	r2, [sp, #28]
   4775c:	lsl	r2, r5, #3
   47760:	str	r2, [sp, #64]	; 0x40
   47764:	bic	r2, r5, #1
   47768:	str	r2, [sp, #40]	; 0x28
   4776c:	sub	r1, r1, #1
   47770:	str	r1, [sp, #56]	; 0x38
   47774:	mov	r1, r5
   47778:	b	477b4 <GetDataSlab+0x17834>
   4777c:	ldr	r0, [sp, #28]
   47780:	ldr	r0, [r0, r2]
   47784:	add	sl, sl, r0, lsl #2
   47788:	add	r3, r0, r3
   4778c:	ldr	r0, [sp, #64]	; 0x40
   47790:	ldr	r1, [sp, #68]	; 0x44
   47794:	ldr	r6, [sp, #76]	; 0x4c
   47798:	mov	r2, #0
   4779c:	add	lr, lr, r0
   477a0:	ldr	r0, [sp, #72]	; 0x48
   477a4:	add	r6, r6, r1
   477a8:	str	r6, [sp, #76]	; 0x4c
   477ac:	cmp	r6, r0
   477b0:	bge	56c1c <GetDataSlab+0x26c9c>
   477b4:	ldr	r0, [fp, #12]
   477b8:	cmp	r1, #1
   477bc:	sub	ip, fp, #176	; 0xb0
   477c0:	blt	478d8 <GetDataSlab+0x17958>
   477c4:	ldr	r6, [r0]
   477c8:	mov	r5, #0
   477cc:	beq	478a8 <GetDataSlab+0x17928>
   477d0:	ldr	r0, [sp, #36]	; 0x24
   477d4:	add	ip, sl, r6, lsl #2
   477d8:	mov	r1, #0
   477dc:	str	r6, [sp, #60]	; 0x3c
   477e0:	str	ip, [sp, #48]	; 0x30
   477e4:	cmp	r0, #0
   477e8:	beq	47848 <GetDataSlab+0x178c8>
   477ec:	ldr	r2, [sp, #24]
   477f0:	mov	r9, lr
   477f4:	sub	r6, fp, #328	; 0x148
   477f8:	ldm	ip, {r0, r5}
   477fc:	str	r5, [fp, #-332]	; 0xfffffeb4
   47800:	mov	r5, #32
   47804:	subs	r2, r2, #2
   47808:	add	r1, r1, #4
   4780c:	str	r0, [fp, #-336]	; 0xfffffeb0
   47810:	sub	r0, fp, #336	; 0x150
   47814:	vld1.32	{d16}, [r0 :64]
   47818:	add	r0, r9, #16
   4781c:	vmovl.u32	q8, d16
   47820:	vst1.64	{d16-d17}, [r9], r5
   47824:	ldr	r5, [ip, #8]
   47828:	ldr	r8, [ip, #12]
   4782c:	add	ip, ip, #16
   47830:	str	r8, [fp, #-324]	; 0xfffffebc
   47834:	str	r5, [fp, #-328]	; 0xfffffeb8
   47838:	vld1.32	{d16}, [r6 :64]
   4783c:	vmovl.u32	q8, d16
   47840:	vst1.64	{d16-d17}, [r0]
   47844:	bne	477f8 <GetDataSlab+0x17878>
   47848:	ldr	r0, [sp, #44]	; 0x2c
   4784c:	ldr	r8, [sp, #52]	; 0x34
   47850:	ldr	r9, [sp, #32]
   47854:	sub	ip, fp, #176	; 0xb0
   47858:	cmp	r0, #0
   4785c:	ldr	r0, [sp, #88]	; 0x58
   47860:	beq	47894 <GetDataSlab+0x17914>
   47864:	ldr	r2, [sp, #76]	; 0x4c
   47868:	ldr	r5, [sp, #48]	; 0x30
   4786c:	add	r0, r0, r2, lsl #3
   47870:	ldr	r2, [r5, r1, lsl #2]!
   47874:	add	r0, r0, r1, lsl #3
   47878:	str	r2, [fp, #-344]	; 0xfffffea8
   4787c:	ldr	r2, [r5, #4]
   47880:	str	r2, [fp, #-340]	; 0xfffffeac
   47884:	sub	r2, fp, #344	; 0x158
   47888:	vld1.32	{d16}, [r2 :64]
   4788c:	vmovl.u32	q8, d16
   47890:	vst1.64	{d16-d17}, [r0]
   47894:	ldr	r0, [sp, #68]	; 0x44
   47898:	ldr	r5, [sp, #40]	; 0x28
   4789c:	ldr	r6, [sp, #60]	; 0x3c
   478a0:	cmp	r0, r5
   478a4:	beq	478d8 <GetDataSlab+0x17958>
   478a8:	ldr	r0, [sp, #68]	; 0x44
   478ac:	sub	r1, r7, r5, lsl #3
   478b0:	sub	r2, r0, r5
   478b4:	add	r0, r5, r6
   478b8:	add	r5, sl, r0, lsl #2
   478bc:	ldr	r0, [r5], #4
   478c0:	mov	r6, lr
   478c4:	subs	r2, r2, #1
   478c8:	str	r0, [r6, -r1]!
   478cc:	sub	r1, r1, #8
   478d0:	str	r7, [r6, #4]
   478d4:	bne	478bc <GetDataSlab+0x1793c>
   478d8:	ldr	r0, [fp, #24]
   478dc:	add	sl, sl, r8, lsl #2
   478e0:	add	r3, r3, r8
   478e4:	cmp	r0, #2
   478e8:	blt	4778c <GetDataSlab+0x1780c>
   478ec:	ldr	r1, [sp, #56]	; 0x38
   478f0:	mov	r2, #0
   478f4:	b	47924 <GetDataSlab+0x179a4>
   478f8:	ldr	r7, [sp, #80]	; 0x50
   478fc:	ldr	r6, [ip, r2]
   47900:	sub	r0, r5, r0
   47904:	ldr	r7, [r7, r2]
   47908:	mla	r0, r7, r6, r0
   4790c:	mov	r7, #0
   47910:	add	r3, r0, r3
   47914:	add	sl, sl, r0, lsl #2
   47918:	subs	r1, r1, #1
   4791c:	add	r2, r2, #4
   47920:	beq	4778c <GetDataSlab+0x1780c>
   47924:	ldr	r0, [r4, r2]
   47928:	add	r0, r0, #1
   4792c:	str	r0, [r4, r2]
   47930:	ldr	r6, [r9, r2]
   47934:	sdiv	r5, r0, r6
   47938:	mls	r0, r5, r6, r0
   4793c:	cmp	r0, #0
   47940:	bne	4777c <GetDataSlab+0x177fc>
   47944:	ldr	r0, [sp, #84]	; 0x54
   47948:	str	r7, [r4, r2]
   4794c:	ldr	r5, [r0, r2]
   47950:	sdiv	r0, r3, r5
   47954:	mls	r0, r0, r5, r3
   47958:	cmp	r0, #0
   4795c:	bne	478f8 <GetDataSlab+0x17978>
   47960:	ldr	r0, [sp, #80]	; 0x50
   47964:	ldr	r0, [r0, r2]
   47968:	cmp	r0, #0
   4796c:	beq	47918 <GetDataSlab+0x17998>
   47970:	ldr	r7, [ip, r2]
   47974:	mla	r3, r7, r0, r3
   47978:	mul	r0, r7, r0
   4797c:	mov	r7, #0
   47980:	b	47914 <GetDataSlab+0x17994>
   47984:	ldr	r0, [sp, #80]	; 0x50
   47988:	add	r5, r0, r8, lsl #2
   4798c:	ldr	r0, [sp, #36]	; 0x24
   47990:	cmp	r0, #1
   47994:	bne	54e20 <GetDataSlab+0x24ea0>
   47998:	ldr	r0, [sp, #76]	; 0x4c
   4799c:	ldr	lr, [sp, #68]	; 0x44
   479a0:	sub	r3, fp, #96	; 0x60
   479a4:	cmp	r0, #1
   479a8:	ldr	r0, [fp, #12]
   479ac:	blt	56c18 <GetDataSlab+0x26c98>
   479b0:	sub	r1, fp, #136	; 0x88
   479b4:	orr	r9, r1, #4
   479b8:	ldr	r1, [fp, #20]
   479bc:	add	r1, r1, #4
   479c0:	str	r1, [sp, #48]	; 0x30
   479c4:	orr	r1, r2, #4
   479c8:	str	r1, [sp, #52]	; 0x34
   479cc:	ldr	r1, [fp, #24]
   479d0:	sub	r1, r1, #1
   479d4:	str	r1, [sp, #44]	; 0x2c
   479d8:	orr	r1, r3, #4
   479dc:	str	r1, [sp, #32]
   479e0:	and	r1, lr, #1
   479e4:	str	r1, [sp, #56]	; 0x38
   479e8:	sub	r1, lr, r1
   479ec:	str	r1, [sp, #64]	; 0x40
   479f0:	lsl	r1, lr, #3
   479f4:	str	r1, [sp, #60]	; 0x3c
   479f8:	ldr	r1, [r0], #4
   479fc:	str	r0, [sp, #92]	; 0x5c
   47a00:	add	r0, r1, #1
   47a04:	str	r1, [sp, #40]	; 0x28
   47a08:	str	r0, [sp, #36]	; 0x24
   47a0c:	ldr	r0, [sp, #88]	; 0x58
   47a10:	str	r0, [sp, #84]	; 0x54
   47a14:	mov	r0, #0
   47a18:	str	r0, [sp, #80]	; 0x50
   47a1c:	b	47a5c <GetDataSlab+0x17adc>
   47a20:	ldr	r1, [sp, #32]
   47a24:	ldr	r0, [r1, r0]
   47a28:	add	r5, r5, r0, lsl #2
   47a2c:	add	r8, r0, r8
   47a30:	ldr	r0, [sp, #60]	; 0x3c
   47a34:	ldr	r1, [sp, #84]	; 0x54
   47a38:	mov	r2, #0
   47a3c:	add	r1, r1, r0
   47a40:	ldr	r0, [sp, #76]	; 0x4c
   47a44:	str	r1, [sp, #84]	; 0x54
   47a48:	ldr	r1, [sp, #80]	; 0x50
   47a4c:	add	r1, r1, lr
   47a50:	cmp	r1, r0
   47a54:	str	r1, [sp, #80]	; 0x50
   47a58:	bge	56c1c <GetDataSlab+0x26c9c>
   47a5c:	ldr	r7, [sp, #64]	; 0x40
   47a60:	cmp	lr, #1
   47a64:	blt	47aec <GetDataSlab+0x17b6c>
   47a68:	mov	r4, r8
   47a6c:	mov	sl, #0
   47a70:	beq	47ab0 <GetDataSlab+0x17b30>
   47a74:	ldr	r0, [sp, #36]	; 0x24
   47a78:	ldr	r6, [sp, #84]	; 0x54
   47a7c:	mov	sl, #0
   47a80:	add	r8, r5, r0, lsl #2
   47a84:	ldr	r0, [r8, #-4]
   47a88:	bl	6b970 <__aeabi_f2ulz>
   47a8c:	strd	r0, [r6]
   47a90:	ldr	r0, [r8]
   47a94:	bl	6b970 <__aeabi_f2ulz>
   47a98:	add	sl, sl, #2
   47a9c:	strd	r0, [r6, #8]
   47aa0:	add	r6, r6, #16
   47aa4:	add	r8, r8, #8
   47aa8:	cmp	r7, sl
   47aac:	bne	47a84 <GetDataSlab+0x17b04>
   47ab0:	ldr	r0, [sp, #56]	; 0x38
   47ab4:	ldr	lr, [sp, #68]	; 0x44
   47ab8:	mov	r8, r4
   47abc:	cmp	r0, #0
   47ac0:	beq	47aec <GetDataSlab+0x17b6c>
   47ac4:	ldr	r0, [sp, #40]	; 0x28
   47ac8:	ldr	r1, [sp, #88]	; 0x58
   47acc:	ldr	r2, [sp, #80]	; 0x50
   47ad0:	add	r0, r5, r0, lsl #2
   47ad4:	add	r6, r1, r2, lsl #3
   47ad8:	ldr	r0, [r0, sl, lsl #2]
   47adc:	bl	6b970 <__aeabi_f2ulz>
   47ae0:	ldr	lr, [sp, #68]	; 0x44
   47ae4:	str	r0, [r6, sl, lsl #3]!
   47ae8:	str	r1, [r6, #4]
   47aec:	ldr	r0, [sp, #72]	; 0x48
   47af0:	add	r5, r5, r0, lsl #2
   47af4:	add	r8, r8, r0
   47af8:	ldr	r0, [fp, #24]
   47afc:	cmp	r0, #2
   47b00:	blt	47a30 <GetDataSlab+0x17ab0>
   47b04:	add	sl, sp, #44	; 0x2c
   47b08:	ldr	ip, [sp, #92]	; 0x5c
   47b0c:	mov	r0, #0
   47b10:	ldm	sl, {r1, r7, sl}
   47b14:	b	47b40 <GetDataSlab+0x17bc0>
   47b18:	sub	r6, fp, #176	; 0xb0
   47b1c:	ldr	r4, [ip, r0]
   47b20:	sub	r2, r2, r3
   47b24:	ldr	r6, [r6, r0]
   47b28:	mla	r2, r4, r6, r2
   47b2c:	add	r8, r2, r8
   47b30:	add	r5, r5, r2, lsl #2
   47b34:	subs	r1, r1, #1
   47b38:	add	r0, r0, #4
   47b3c:	beq	47a30 <GetDataSlab+0x17ab0>
   47b40:	ldr	r2, [r9, r0]
   47b44:	add	r2, r2, #1
   47b48:	str	r2, [r9, r0]
   47b4c:	ldr	r3, [r7, r0]
   47b50:	sdiv	r6, r2, r3
   47b54:	mls	r2, r6, r3, r2
   47b58:	cmp	r2, #0
   47b5c:	bne	47a20 <GetDataSlab+0x17aa0>
   47b60:	mov	r2, #0
   47b64:	str	r2, [r9, r0]
   47b68:	ldr	r2, [sl, r0]
   47b6c:	sdiv	r3, r8, r2
   47b70:	mls	r3, r3, r2, r8
   47b74:	cmp	r3, #0
   47b78:	bne	47b18 <GetDataSlab+0x17b98>
   47b7c:	ldr	r2, [ip, r0]
   47b80:	cmp	r2, #0
   47b84:	beq	47b34 <GetDataSlab+0x17bb4>
   47b88:	sub	r3, fp, #176	; 0xb0
   47b8c:	ldr	r3, [r3, r0]
   47b90:	mla	r8, r3, r2, r8
   47b94:	mul	r2, r3, r2
   47b98:	b	47b30 <GetDataSlab+0x17bb0>
   47b9c:	ldr	r0, [sp, #80]	; 0x50
   47ba0:	add	r5, r0, r8, lsl #3
   47ba4:	ldr	r0, [sp, #36]	; 0x24
   47ba8:	cmp	r0, #1
   47bac:	bne	5506c <GetDataSlab+0x250ec>
   47bb0:	ldr	r0, [sp, #76]	; 0x4c
   47bb4:	ldr	lr, [sp, #72]	; 0x48
   47bb8:	sub	r3, fp, #96	; 0x60
   47bbc:	cmp	r0, #1
   47bc0:	ldr	r0, [fp, #12]
   47bc4:	blt	56c18 <GetDataSlab+0x26c98>
   47bc8:	sub	r1, fp, #136	; 0x88
   47bcc:	orr	r9, r1, #4
   47bd0:	ldr	r1, [fp, #20]
   47bd4:	add	r1, r1, #4
   47bd8:	str	r1, [sp, #48]	; 0x30
   47bdc:	orr	r1, r2, #4
   47be0:	str	r1, [sp, #52]	; 0x34
   47be4:	ldr	r1, [fp, #24]
   47be8:	sub	r1, r1, #1
   47bec:	str	r1, [sp, #44]	; 0x2c
   47bf0:	orr	r1, r3, #4
   47bf4:	str	r1, [sp, #32]
   47bf8:	and	r1, lr, #1
   47bfc:	str	r1, [sp, #56]	; 0x38
   47c00:	sub	r1, lr, r1
   47c04:	str	r1, [sp, #64]	; 0x40
   47c08:	lsl	r1, lr, #3
   47c0c:	str	r1, [sp, #60]	; 0x3c
   47c10:	ldr	r1, [r0], #4
   47c14:	str	r0, [sp, #92]	; 0x5c
   47c18:	add	r0, r1, #1
   47c1c:	str	r1, [sp, #40]	; 0x28
   47c20:	str	r0, [sp, #36]	; 0x24
   47c24:	ldr	r0, [sp, #88]	; 0x58
   47c28:	str	r0, [sp, #84]	; 0x54
   47c2c:	mov	r0, #0
   47c30:	str	r0, [sp, #80]	; 0x50
   47c34:	b	47c78 <GetDataSlab+0x17cf8>
   47c38:	ldr	r1, [sp, #32]
   47c3c:	ldr	r0, [r1, r0]
   47c40:	add	r4, r4, r0, lsl #3
   47c44:	add	r8, r0, r8
   47c48:	ldr	r0, [sp, #60]	; 0x3c
   47c4c:	ldr	r1, [sp, #84]	; 0x54
   47c50:	mov	r5, r4
   47c54:	mov	r2, #0
   47c58:	add	r1, r1, r0
   47c5c:	ldr	r0, [sp, #76]	; 0x4c
   47c60:	str	r1, [sp, #84]	; 0x54
   47c64:	ldr	r1, [sp, #80]	; 0x50
   47c68:	add	r1, r1, lr
   47c6c:	cmp	r1, r0
   47c70:	str	r1, [sp, #80]	; 0x50
   47c74:	bge	56c1c <GetDataSlab+0x26c9c>
   47c78:	ldr	r7, [sp, #64]	; 0x40
   47c7c:	cmp	lr, #1
   47c80:	blt	47d18 <GetDataSlab+0x17d98>
   47c84:	mov	r4, r8
   47c88:	mov	sl, #0
   47c8c:	beq	47cd4 <GetDataSlab+0x17d54>
   47c90:	ldr	r0, [sp, #36]	; 0x24
   47c94:	ldr	r6, [sp, #84]	; 0x54
   47c98:	mov	sl, #0
   47c9c:	add	r8, r5, r0, lsl #3
   47ca0:	vldr	d16, [r8, #-8]
   47ca4:	vmov	r0, r1, d16
   47ca8:	bl	6b9b0 <__aeabi_d2ulz>
   47cac:	strd	r0, [r6]
   47cb0:	vldr	d16, [r8]
   47cb4:	vmov	r0, r1, d16
   47cb8:	bl	6b9b0 <__aeabi_d2ulz>
   47cbc:	add	sl, sl, #2
   47cc0:	strd	r0, [r6, #8]
   47cc4:	add	r6, r6, #16
   47cc8:	add	r8, r8, #16
   47ccc:	cmp	r7, sl
   47cd0:	bne	47ca0 <GetDataSlab+0x17d20>
   47cd4:	ldr	r0, [sp, #56]	; 0x38
   47cd8:	ldr	lr, [sp, #72]	; 0x48
   47cdc:	mov	r8, r4
   47ce0:	cmp	r0, #0
   47ce4:	beq	47d18 <GetDataSlab+0x17d98>
   47ce8:	ldr	r0, [sp, #40]	; 0x28
   47cec:	ldr	r1, [sp, #88]	; 0x58
   47cf0:	ldr	r2, [sp, #80]	; 0x50
   47cf4:	add	r0, r5, r0, lsl #3
   47cf8:	add	r6, r1, r2, lsl #3
   47cfc:	add	r0, r0, sl, lsl #3
   47d00:	vldr	d16, [r0]
   47d04:	vmov	r0, r1, d16
   47d08:	bl	6b9b0 <__aeabi_d2ulz>
   47d0c:	ldr	lr, [sp, #72]	; 0x48
   47d10:	str	r0, [r6, sl, lsl #3]!
   47d14:	str	r1, [r6, #4]
   47d18:	ldr	r0, [sp, #68]	; 0x44
   47d1c:	mov	r4, r5
   47d20:	add	r4, r5, r0, lsl #3
   47d24:	add	r8, r8, r0
   47d28:	ldr	r0, [fp, #24]
   47d2c:	cmp	r0, #2
   47d30:	blt	47c48 <GetDataSlab+0x17cc8>
   47d34:	add	sl, sp, #44	; 0x2c
   47d38:	ldr	ip, [sp, #92]	; 0x5c
   47d3c:	mov	r0, #0
   47d40:	ldm	sl, {r1, r7, sl}
   47d44:	b	47d70 <GetDataSlab+0x17df0>
   47d48:	sub	r6, fp, #176	; 0xb0
   47d4c:	ldr	r5, [ip, r0]
   47d50:	sub	r2, r2, r3
   47d54:	ldr	r6, [r6, r0]
   47d58:	mla	r2, r5, r6, r2
   47d5c:	add	r8, r2, r8
   47d60:	add	r4, r4, r2, lsl #3
   47d64:	subs	r1, r1, #1
   47d68:	add	r0, r0, #4
   47d6c:	beq	47c48 <GetDataSlab+0x17cc8>
   47d70:	ldr	r2, [r9, r0]
   47d74:	add	r2, r2, #1
   47d78:	str	r2, [r9, r0]
   47d7c:	ldr	r3, [r7, r0]
   47d80:	sdiv	r6, r2, r3
   47d84:	mls	r2, r6, r3, r2
   47d88:	cmp	r2, #0
   47d8c:	bne	47c38 <GetDataSlab+0x17cb8>
   47d90:	mov	r2, #0
   47d94:	str	r2, [r9, r0]
   47d98:	ldr	r2, [sl, r0]
   47d9c:	sdiv	r3, r8, r2
   47da0:	mls	r3, r3, r2, r8
   47da4:	cmp	r3, #0
   47da8:	bne	47d48 <GetDataSlab+0x17dc8>
   47dac:	ldr	r2, [ip, r0]
   47db0:	cmp	r2, #0
   47db4:	beq	47d64 <GetDataSlab+0x17de4>
   47db8:	sub	r3, fp, #176	; 0xb0
   47dbc:	ldr	r3, [r3, r0]
   47dc0:	mla	r8, r3, r2, r8
   47dc4:	mul	r2, r3, r2
   47dc8:	b	47d60 <GetDataSlab+0x17de0>
   47dcc:	ldr	r0, [sp, #80]	; 0x50
   47dd0:	add	r7, r0, ip, lsl #3
   47dd4:	ldr	r0, [sp, #32]
   47dd8:	cmp	r0, #1
   47ddc:	bne	552c0 <GetDataSlab+0x25340>
   47de0:	ldr	r0, [sp, #68]	; 0x44
   47de4:	ldr	r8, [sp, #88]	; 0x58
   47de8:	ldr	lr, [sp, #44]	; 0x2c
   47dec:	cmp	r0, #1
   47df0:	blt	554f8 <GetDataSlab+0x25578>
   47df4:	sub	r0, lr, #2
   47df8:	mov	r2, #1
   47dfc:	ldr	sl, [sp, #24]
   47e00:	str	r8, [sp, #52]	; 0x34
   47e04:	add	r2, r2, r0, lsr #1
   47e08:	lsr	r0, r0, #1
   47e0c:	str	r0, [sp, #4]
   47e10:	mov	r0, #0
   47e14:	and	r1, r2, #1
   47e18:	str	r0, [sp, #56]	; 0x38
   47e1c:	mov	r0, #0
   47e20:	str	r1, [sp, #12]
   47e24:	sub	r1, r2, r1
   47e28:	sub	r2, fp, #136	; 0x88
   47e2c:	str	r0, [sp, #64]	; 0x40
   47e30:	str	r1, [sp]
   47e34:	ldr	r1, [fp, #20]
   47e38:	orr	r9, r2, #4
   47e3c:	add	r4, r1, #4
   47e40:	sub	r1, fp, #176	; 0xb0
   47e44:	orr	r1, r1, #4
   47e48:	str	r4, [sp, #32]
   47e4c:	str	r1, [sp, #84]	; 0x54
   47e50:	ldr	r1, [fp, #24]
   47e54:	sub	r1, r1, #1
   47e58:	str	r1, [sp, #28]
   47e5c:	sub	r1, fp, #96	; 0x60
   47e60:	orr	r1, r1, #4
   47e64:	str	r1, [sp, #16]
   47e68:	ldr	r1, [fp, #12]
   47e6c:	ldr	r2, [r1], #4
   47e70:	str	r1, [sp, #72]	; 0x48
   47e74:	add	r1, lr, r2
   47e78:	str	r2, [sp, #40]	; 0x28
   47e7c:	str	r1, [sp, #20]
   47e80:	and	r1, lr, #1
   47e84:	str	r1, [sp, #36]	; 0x24
   47e88:	lsl	r1, lr, #3
   47e8c:	str	r1, [sp, #48]	; 0x30
   47e90:	bic	r1, lr, #1
   47e94:	str	r1, [sp, #8]
   47e98:	b	47ee0 <GetDataSlab+0x17f60>
   47e9c:	ldr	r0, [sp, #16]
   47ea0:	ldr	r0, [r0, r2]
   47ea4:	add	r7, r7, r0, lsl #3
   47ea8:	add	ip, r0, ip
   47eac:	ldr	r0, [sp, #48]	; 0x30
   47eb0:	ldr	r1, [sp, #52]	; 0x34
   47eb4:	add	r1, r1, r0
   47eb8:	ldr	r0, [sp, #56]	; 0x38
   47ebc:	str	r1, [sp, #52]	; 0x34
   47ec0:	ldr	r1, [sp, #64]	; 0x40
   47ec4:	add	r0, r0, #1
   47ec8:	str	r0, [sp, #56]	; 0x38
   47ecc:	ldr	r0, [sp, #68]	; 0x44
   47ed0:	add	r1, r1, lr
   47ed4:	str	r1, [sp, #64]	; 0x40
   47ed8:	cmp	r1, r0
   47edc:	bge	554f8 <GetDataSlab+0x25578>
   47ee0:	cmp	lr, #1
   47ee4:	str	r7, [sp, #60]	; 0x3c
   47ee8:	blt	4802c <GetDataSlab+0x180ac>
   47eec:	ldr	r0, [sp, #60]	; 0x3c
   47ef0:	ldr	r1, [sp, #40]	; 0x28
   47ef4:	mov	r6, #0
   47ef8:	add	r2, r0, r1, lsl #3
   47efc:	ldr	r1, [sp, #64]	; 0x40
   47f00:	add	r4, r8, r1, lsl #3
   47f04:	beq	47fb4 <GetDataSlab+0x18034>
   47f08:	ldr	r1, [sp, #48]	; 0x30
   47f0c:	ldr	r3, [sp, #56]	; 0x38
   47f10:	mla	r3, r1, r3, r8
   47f14:	ldr	r1, [sp, #20]
   47f18:	add	r5, r0, r1, lsl #3
   47f1c:	cmp	r3, r5
   47f20:	bcs	47f3c <GetDataSlab+0x17fbc>
   47f24:	ldr	r0, [sp, #48]	; 0x30
   47f28:	ldr	r1, [sp, #56]	; 0x38
   47f2c:	mla	r3, r0, r1, r0
   47f30:	add	r3, r8, r3
   47f34:	cmp	r3, r2
   47f38:	bhi	47fb4 <GetDataSlab+0x18034>
   47f3c:	ldr	r0, [sp, #4]
   47f40:	mov	lr, #0
   47f44:	cmp	r0, #0
   47f48:	beq	47f80 <GetDataSlab+0x18000>
   47f4c:	ldr	r3, [sp, #52]	; 0x34
   47f50:	ldr	r8, [sp]
   47f54:	mov	r6, r2
   47f58:	mov	r0, #32
   47f5c:	add	r5, r6, #16
   47f60:	vld1.64	{d16-d17}, [r6], r0
   47f64:	add	sl, r3, #16
   47f68:	subs	r8, r8, #2
   47f6c:	add	lr, lr, #4
   47f70:	vst1.64	{d16-d17}, [r3], r0
   47f74:	vld1.64	{d16-d17}, [r5]
   47f78:	vst1.64	{d16-d17}, [sl]
   47f7c:	bne	47f5c <GetDataSlab+0x17fdc>
   47f80:	ldr	r0, [sp, #12]
   47f84:	ldr	r8, [sp, #88]	; 0x58
   47f88:	cmp	r0, #0
   47f8c:	beq	47fa0 <GetDataSlab+0x18020>
   47f90:	add	r3, r2, lr, lsl #3
   47f94:	vld1.64	{d16-d17}, [r3]
   47f98:	add	r3, r4, lr, lsl #3
   47f9c:	vst1.64	{d16-d17}, [r3]
   47fa0:	ldr	lr, [sp, #44]	; 0x2c
   47fa4:	ldr	r6, [sp, #8]
   47fa8:	ldr	sl, [sp, #24]
   47fac:	cmp	lr, r6
   47fb0:	beq	4802c <GetDataSlab+0x180ac>
   47fb4:	ldr	r0, [sp, #36]	; 0x24
   47fb8:	mov	r3, r6
   47fbc:	cmp	r0, #0
   47fc0:	beq	47fdc <GetDataSlab+0x1805c>
   47fc4:	mov	r3, r2
   47fc8:	ldr	r5, [r3, r6, lsl #3]!
   47fcc:	ldr	r3, [r3, #4]
   47fd0:	str	r5, [r4, r6, lsl #3]!
   47fd4:	str	r3, [r4, #4]
   47fd8:	orr	r3, r6, #1
   47fdc:	orr	r6, r6, #1
   47fe0:	cmp	lr, r6
   47fe4:	beq	4802c <GetDataSlab+0x180ac>
   47fe8:	ldr	r5, [sp, #52]	; 0x34
   47fec:	sub	r6, lr, r3
   47ff0:	lsl	r3, r3, #3
   47ff4:	add	r0, r2, #16
   47ff8:	ldr	r7, [r2, r3]!
   47ffc:	add	r1, r5, #16
   48000:	subs	r6, r6, #2
   48004:	ldr	r4, [r2, #4]
   48008:	str	r7, [r5, r3]!
   4800c:	str	r4, [r5, #4]
   48010:	ldr	r7, [r2, #8]
   48014:	ldr	r2, [r2, #12]
   48018:	str	r2, [r5, #12]
   4801c:	str	r7, [r5, #8]
   48020:	mov	r2, r0
   48024:	mov	r5, r1
   48028:	bne	47ff4 <GetDataSlab+0x18074>
   4802c:	ldr	r7, [sp, #60]	; 0x3c
   48030:	ldr	r0, [fp, #24]
   48034:	add	ip, ip, sl
   48038:	add	r7, r7, sl, lsl #3
   4803c:	cmp	r0, #2
   48040:	blt	47eac <GetDataSlab+0x17f2c>
   48044:	ldr	r6, [sp, #28]
   48048:	ldr	r4, [sp, #32]
   4804c:	mov	r2, #0
   48050:	b	48080 <GetDataSlab+0x18100>
   48054:	ldr	r1, [sp, #72]	; 0x48
   48058:	sub	r0, fp, #176	; 0xb0
   4805c:	sub	r3, r3, r5
   48060:	ldr	r0, [r0, r2]
   48064:	ldr	r1, [r1, r2]
   48068:	mla	r0, r1, r0, r3
   4806c:	add	ip, r0, ip
   48070:	add	r7, r7, r0, lsl #3
   48074:	subs	r6, r6, #1
   48078:	add	r2, r2, #4
   4807c:	beq	47eac <GetDataSlab+0x17f2c>
   48080:	ldr	r0, [r9, r2]
   48084:	add	r0, r0, #1
   48088:	str	r0, [r9, r2]
   4808c:	ldr	r1, [r4, r2]
   48090:	sdiv	r3, r0, r1
   48094:	mls	r0, r3, r1, r0
   48098:	cmp	r0, #0
   4809c:	bne	47e9c <GetDataSlab+0x17f1c>
   480a0:	mov	r0, #0
   480a4:	str	r0, [r9, r2]
   480a8:	ldr	r0, [sp, #84]	; 0x54
   480ac:	ldr	r3, [r0, r2]
   480b0:	sdiv	r0, ip, r3
   480b4:	mls	r5, r0, r3, ip
   480b8:	cmp	r5, #0
   480bc:	bne	48054 <GetDataSlab+0x180d4>
   480c0:	ldr	r0, [sp, #72]	; 0x48
   480c4:	ldr	r3, [r0, r2]
   480c8:	cmp	r3, #0
   480cc:	beq	48074 <GetDataSlab+0x180f4>
   480d0:	sub	r0, fp, #176	; 0xb0
   480d4:	ldr	r0, [r0, r2]
   480d8:	mla	ip, r0, r3, ip
   480dc:	mul	r0, r0, r3
   480e0:	b	48070 <GetDataSlab+0x180f0>
   480e4:	ldr	r0, [sp, #76]	; 0x4c
   480e8:	sub	r2, fp, #96	; 0x60
   480ec:	cmp	r0, #1
   480f0:	ldr	r0, [fp, #12]
   480f4:	blt	56c18 <GetDataSlab+0x26c98>
   480f8:	ldr	lr, [sp, #60]	; 0x3c
   480fc:	ldr	r1, [sp, #40]	; 0x28
   48100:	add	r0, r0, #4
   48104:	mov	r6, #0
   48108:	str	r0, [sp, #84]	; 0x54
   4810c:	ldr	r0, [fp, #24]
   48110:	mls	r1, lr, sl, r1
   48114:	sub	r0, r0, #1
   48118:	str	r0, [sp, #40]	; 0x28
   4811c:	orr	r0, r2, #4
   48120:	str	r1, [sp, #68]	; 0x44
   48124:	mul	r1, lr, sl
   48128:	str	r0, [sp, #32]
   4812c:	and	r0, lr, #1
   48130:	str	r0, [sp, #44]	; 0x2c
   48134:	sub	r0, lr, r0
   48138:	str	r0, [sp, #36]	; 0x24
   4813c:	lsl	r0, lr, #2
   48140:	str	r1, [sp, #48]	; 0x30
   48144:	sub	r1, fp, #136	; 0x88
   48148:	str	r0, [sp, #64]	; 0x40
   4814c:	ldr	r0, [sp, #88]	; 0x58
   48150:	orr	r4, r1, #4
   48154:	ldr	r1, [fp, #20]
   48158:	add	r1, r1, #4
   4815c:	str	r1, [sp, #52]	; 0x34
   48160:	sub	r1, fp, #176	; 0xb0
   48164:	orr	r1, r1, #4
   48168:	str	r1, [sp, #56]	; 0x38
   4816c:	add	r1, r0, #4
   48170:	b	481ac <GetDataSlab+0x1822c>
   48174:	ldr	r0, [sp, #32]
   48178:	ldr	r0, [r0, r2]
   4817c:	add	ip, ip, r0
   48180:	add	r3, r0, r3
   48184:	ldr	r0, [sp, #64]	; 0x40
   48188:	ldr	r1, [sp, #80]	; 0x50
   4818c:	ldr	lr, [sp, #60]	; 0x3c
   48190:	ldr	r6, [sp, #72]	; 0x48
   48194:	mov	r2, #0
   48198:	add	r1, r1, r0
   4819c:	ldr	r0, [sp, #76]	; 0x4c
   481a0:	add	r6, r6, lr
   481a4:	cmp	r6, r0
   481a8:	bge	56c1c <GetDataSlab+0x26c9c>
   481ac:	ldr	r0, [fp, #12]
   481b0:	cmp	lr, #1
   481b4:	str	r1, [sp, #80]	; 0x50
   481b8:	ldr	r9, [r0]
   481bc:	add	r5, ip, r9
   481c0:	blt	48250 <GetDataSlab+0x182d0>
   481c4:	mov	r7, #0
   481c8:	cmp	lr, #1
   481cc:	beq	48210 <GetDataSlab+0x18290>
   481d0:	ldr	r2, [sp, #36]	; 0x24
   481d4:	mov	r7, #0
   481d8:	mov	r0, r1
   481dc:	ldrsb	r1, [r5]
   481e0:	add	r7, r7, #2
   481e4:	cmp	r2, r7
   481e8:	vmov	s0, r1
   481ec:	vcvt.f32.s32	s0, s0
   481f0:	vstr	s0, [r0, #-4]
   481f4:	ldrsb	r1, [r5, sl]!
   481f8:	add	r5, r5, sl
   481fc:	vmov	s0, r1
   48200:	vcvt.f32.s32	s0, s0
   48204:	vstr	s0, [r0]
   48208:	add	r0, r0, #8
   4820c:	bne	481dc <GetDataSlab+0x1825c>
   48210:	ldr	r0, [sp, #48]	; 0x30
   48214:	ldr	r1, [sp, #44]	; 0x2c
   48218:	ldr	lr, [sp, #56]	; 0x38
   4821c:	ldr	r8, [sp, #52]	; 0x34
   48220:	add	r0, r0, r3
   48224:	cmp	r1, #0
   48228:	beq	48248 <GetDataSlab+0x182c8>
   4822c:	ldrsb	r3, [r5], sl
   48230:	ldr	r1, [sp, #88]	; 0x58
   48234:	vmov	s0, r3
   48238:	add	r1, r1, r6, lsl #2
   4823c:	add	r1, r1, r7, lsl #2
   48240:	vcvt.f32.s32	s0, s0
   48244:	vstr	s0, [r1]
   48248:	add	r0, r0, r9
   4824c:	b	4825c <GetDataSlab+0x182dc>
   48250:	ldr	lr, [sp, #56]	; 0x38
   48254:	ldr	r8, [sp, #52]	; 0x34
   48258:	add	r0, r9, r3
   4825c:	ldr	r1, [sp, #68]	; 0x44
   48260:	str	r6, [sp, #72]	; 0x48
   48264:	sub	r1, r1, r9
   48268:	add	r3, r0, r1
   4826c:	ldr	r0, [fp, #24]
   48270:	add	ip, r5, r1
   48274:	cmp	r0, #2
   48278:	blt	48184 <GetDataSlab+0x18204>
   4827c:	ldr	r9, [sp, #40]	; 0x28
   48280:	mov	r2, #0
   48284:	b	482b4 <GetDataSlab+0x18334>
   48288:	ldr	r5, [sp, #84]	; 0x54
   4828c:	sub	r1, fp, #176	; 0xb0
   48290:	sub	r0, r0, r7
   48294:	ldr	r1, [r1, r2]
   48298:	ldr	r5, [r5, r2]
   4829c:	mla	r0, r5, r1, r0
   482a0:	add	r3, r0, r3
   482a4:	add	ip, ip, r0
   482a8:	subs	r9, r9, #1
   482ac:	add	r2, r2, #4
   482b0:	beq	48184 <GetDataSlab+0x18204>
   482b4:	ldr	r0, [r4, r2]
   482b8:	add	r0, r0, #1
   482bc:	str	r0, [r4, r2]
   482c0:	ldr	r1, [r8, r2]
   482c4:	sdiv	r5, r0, r1
   482c8:	mls	r0, r5, r1, r0
   482cc:	cmp	r0, #0
   482d0:	bne	48174 <GetDataSlab+0x181f4>
   482d4:	mov	r0, #0
   482d8:	str	r0, [r4, r2]
   482dc:	ldr	r0, [lr, r2]
   482e0:	sdiv	r1, r3, r0
   482e4:	mls	r7, r1, r0, r3
   482e8:	cmp	r7, #0
   482ec:	bne	48288 <GetDataSlab+0x18308>
   482f0:	ldr	r0, [sp, #84]	; 0x54
   482f4:	ldr	r0, [r0, r2]
   482f8:	cmp	r0, #0
   482fc:	beq	482a8 <GetDataSlab+0x18328>
   48300:	sub	r1, fp, #176	; 0xb0
   48304:	ldr	r1, [r1, r2]
   48308:	mla	r3, r1, r0, r3
   4830c:	mla	ip, r1, r0, ip
   48310:	b	482a8 <GetDataSlab+0x18328>
   48314:	ldr	r0, [sp, #76]	; 0x4c
   48318:	sub	r2, fp, #96	; 0x60
   4831c:	cmp	r0, #1
   48320:	ldr	r0, [fp, #12]
   48324:	blt	56c18 <GetDataSlab+0x26c98>
   48328:	ldr	r6, [sp, #56]	; 0x38
   4832c:	ldr	r1, [sp, #52]	; 0x34
   48330:	add	r0, r0, #4
   48334:	str	r0, [sp, #84]	; 0x54
   48338:	ldr	r0, [fp, #24]
   4833c:	mls	r1, r6, sl, r1
   48340:	mov	lr, r6
   48344:	sub	r0, r0, #1
   48348:	str	r0, [sp, #44]	; 0x2c
   4834c:	orr	r0, r2, #4
   48350:	str	r1, [sp, #68]	; 0x44
   48354:	mul	r1, r6, sl
   48358:	str	r0, [sp, #36]	; 0x24
   4835c:	and	r0, r6, #1
   48360:	str	r0, [sp, #48]	; 0x30
   48364:	sub	r8, r6, r0
   48368:	lsl	r0, r6, #1
   4836c:	mov	r6, #0
   48370:	str	r0, [sp, #64]	; 0x40
   48374:	ldr	r0, [sp, #88]	; 0x58
   48378:	str	r1, [sp, #52]	; 0x34
   4837c:	sub	r1, fp, #136	; 0x88
   48380:	orr	r4, r1, #4
   48384:	ldr	r1, [fp, #20]
   48388:	add	r0, r0, #2
   4838c:	str	r0, [sp, #80]	; 0x50
   48390:	add	r1, r1, #4
   48394:	str	r1, [sp, #40]	; 0x28
   48398:	sub	r1, fp, #176	; 0xb0
   4839c:	orr	r1, r1, #4
   483a0:	str	r1, [sp, #60]	; 0x3c
   483a4:	b	483e4 <GetDataSlab+0x18464>
   483a8:	ldr	r0, [sp, #36]	; 0x24
   483ac:	ldr	r0, [r0, r2]
   483b0:	add	ip, ip, r0
   483b4:	add	r3, r0, r3
   483b8:	ldr	r0, [sp, #64]	; 0x40
   483bc:	ldr	r1, [sp, #80]	; 0x50
   483c0:	ldr	lr, [sp, #56]	; 0x38
   483c4:	ldr	r6, [sp, #72]	; 0x48
   483c8:	mov	r2, #0
   483cc:	add	r1, r1, r0
   483d0:	ldr	r0, [sp, #76]	; 0x4c
   483d4:	add	r6, r6, lr
   483d8:	str	r1, [sp, #80]	; 0x50
   483dc:	cmp	r6, r0
   483e0:	bge	56c1c <GetDataSlab+0x26c9c>
   483e4:	ldr	r0, [fp, #12]
   483e8:	cmp	lr, #1
   483ec:	ldr	r2, [r0]
   483f0:	add	r5, ip, r2
   483f4:	blt	48464 <GetDataSlab+0x184e4>
   483f8:	mov	r7, #0
   483fc:	cmp	lr, #1
   48400:	beq	48430 <GetDataSlab+0x184b0>
   48404:	ldr	r0, [sp, #80]	; 0x50
   48408:	mov	r7, #0
   4840c:	ldrsb	r1, [r5]
   48410:	add	r7, r7, #2
   48414:	cmp	r8, r7
   48418:	strh	r1, [r0, #-2]
   4841c:	ldrsb	r1, [r5, sl]!
   48420:	add	r5, r5, sl
   48424:	strh	r1, [r0]
   48428:	add	r0, r0, #4
   4842c:	bne	4840c <GetDataSlab+0x1848c>
   48430:	ldr	r0, [sp, #52]	; 0x34
   48434:	ldr	r1, [sp, #48]	; 0x30
   48438:	ldr	lr, [sp, #60]	; 0x3c
   4843c:	add	r0, r0, r3
   48440:	cmp	r1, #0
   48444:	beq	4845c <GetDataSlab+0x184dc>
   48448:	ldr	r1, [sp, #88]	; 0x58
   4844c:	ldrsb	r3, [r5], sl
   48450:	add	r1, r1, r6, lsl #1
   48454:	add	r1, r1, r7, lsl #1
   48458:	strh	r3, [r1]
   4845c:	add	r0, r0, r2
   48460:	b	4846c <GetDataSlab+0x184ec>
   48464:	ldr	lr, [sp, #60]	; 0x3c
   48468:	add	r0, r2, r3
   4846c:	ldr	r1, [sp, #68]	; 0x44
   48470:	str	r6, [sp, #72]	; 0x48
   48474:	sub	r1, r1, r2
   48478:	add	r3, r0, r1
   4847c:	ldr	r0, [fp, #24]
   48480:	add	ip, r5, r1
   48484:	cmp	r0, #2
   48488:	blt	483b8 <GetDataSlab+0x18438>
   4848c:	ldr	r9, [sp, #44]	; 0x2c
   48490:	ldr	r6, [sp, #40]	; 0x28
   48494:	mov	r2, #0
   48498:	b	484c8 <GetDataSlab+0x18548>
   4849c:	ldr	r5, [sp, #84]	; 0x54
   484a0:	sub	r1, fp, #176	; 0xb0
   484a4:	sub	r0, r0, r7
   484a8:	ldr	r1, [r1, r2]
   484ac:	ldr	r5, [r5, r2]
   484b0:	mla	r0, r5, r1, r0
   484b4:	add	r3, r0, r3
   484b8:	add	ip, ip, r0
   484bc:	subs	r9, r9, #1
   484c0:	add	r2, r2, #4
   484c4:	beq	483b8 <GetDataSlab+0x18438>
   484c8:	ldr	r0, [r4, r2]
   484cc:	add	r0, r0, #1
   484d0:	str	r0, [r4, r2]
   484d4:	ldr	r1, [r6, r2]
   484d8:	sdiv	r5, r0, r1
   484dc:	mls	r0, r5, r1, r0
   484e0:	cmp	r0, #0
   484e4:	bne	483a8 <GetDataSlab+0x18428>
   484e8:	mov	r0, #0
   484ec:	str	r0, [r4, r2]
   484f0:	ldr	r0, [lr, r2]
   484f4:	sdiv	r1, r3, r0
   484f8:	mls	r7, r1, r0, r3
   484fc:	cmp	r7, #0
   48500:	bne	4849c <GetDataSlab+0x1851c>
   48504:	ldr	r0, [sp, #84]	; 0x54
   48508:	ldr	r0, [r0, r2]
   4850c:	cmp	r0, #0
   48510:	beq	484bc <GetDataSlab+0x1853c>
   48514:	sub	r1, fp, #176	; 0xb0
   48518:	ldr	r1, [r1, r2]
   4851c:	mla	r3, r1, r0, r3
   48520:	mla	ip, r1, r0, ip
   48524:	b	484bc <GetDataSlab+0x1853c>
   48528:	ldr	r0, [sp, #76]	; 0x4c
   4852c:	sub	r2, fp, #96	; 0x60
   48530:	cmp	r0, #1
   48534:	ldr	r0, [fp, #12]
   48538:	blt	56c18 <GetDataSlab+0x26c98>
   4853c:	ldr	r6, [sp, #56]	; 0x38
   48540:	ldr	r1, [sp, #52]	; 0x34
   48544:	add	r0, r0, #4
   48548:	str	r0, [sp, #84]	; 0x54
   4854c:	ldr	r0, [fp, #24]
   48550:	mls	r1, r6, sl, r1
   48554:	mov	lr, r6
   48558:	sub	r0, r0, #1
   4855c:	str	r0, [sp, #44]	; 0x2c
   48560:	orr	r0, r2, #4
   48564:	str	r1, [sp, #68]	; 0x44
   48568:	mul	r1, r6, sl
   4856c:	str	r0, [sp, #36]	; 0x24
   48570:	and	r0, r6, #1
   48574:	str	r0, [sp, #48]	; 0x30
   48578:	sub	r8, r6, r0
   4857c:	lsl	r0, r6, #1
   48580:	mov	r6, #0
   48584:	str	r0, [sp, #64]	; 0x40
   48588:	ldr	r0, [sp, #88]	; 0x58
   4858c:	str	r1, [sp, #52]	; 0x34
   48590:	sub	r1, fp, #136	; 0x88
   48594:	orr	r4, r1, #4
   48598:	ldr	r1, [fp, #20]
   4859c:	add	r0, r0, #2
   485a0:	str	r0, [sp, #80]	; 0x50
   485a4:	add	r1, r1, #4
   485a8:	str	r1, [sp, #40]	; 0x28
   485ac:	sub	r1, fp, #176	; 0xb0
   485b0:	orr	r1, r1, #4
   485b4:	str	r1, [sp, #60]	; 0x3c
   485b8:	b	485f8 <GetDataSlab+0x18678>
   485bc:	ldr	r0, [sp, #36]	; 0x24
   485c0:	ldr	r0, [r0, r2]
   485c4:	add	ip, ip, r0
   485c8:	add	r3, r0, r3
   485cc:	ldr	r0, [sp, #64]	; 0x40
   485d0:	ldr	r1, [sp, #80]	; 0x50
   485d4:	ldr	lr, [sp, #56]	; 0x38
   485d8:	ldr	r6, [sp, #72]	; 0x48
   485dc:	mov	r2, #0
   485e0:	add	r1, r1, r0
   485e4:	ldr	r0, [sp, #76]	; 0x4c
   485e8:	add	r6, r6, lr
   485ec:	str	r1, [sp, #80]	; 0x50
   485f0:	cmp	r6, r0
   485f4:	bge	56c1c <GetDataSlab+0x26c9c>
   485f8:	ldr	r0, [fp, #12]
   485fc:	cmp	lr, #1
   48600:	ldr	r2, [r0]
   48604:	add	r5, ip, r2
   48608:	blt	48678 <GetDataSlab+0x186f8>
   4860c:	mov	r7, #0
   48610:	cmp	lr, #1
   48614:	beq	48644 <GetDataSlab+0x186c4>
   48618:	ldr	r0, [sp, #80]	; 0x50
   4861c:	mov	r7, #0
   48620:	ldrsb	r1, [r5]
   48624:	add	r7, r7, #2
   48628:	cmp	r8, r7
   4862c:	strh	r1, [r0, #-2]
   48630:	ldrsb	r1, [r5, sl]!
   48634:	add	r5, r5, sl
   48638:	strh	r1, [r0]
   4863c:	add	r0, r0, #4
   48640:	bne	48620 <GetDataSlab+0x186a0>
   48644:	ldr	r0, [sp, #52]	; 0x34
   48648:	ldr	r1, [sp, #48]	; 0x30
   4864c:	ldr	lr, [sp, #60]	; 0x3c
   48650:	add	r0, r0, r3
   48654:	cmp	r1, #0
   48658:	beq	48670 <GetDataSlab+0x186f0>
   4865c:	ldr	r1, [sp, #88]	; 0x58
   48660:	ldrsb	r3, [r5], sl
   48664:	add	r1, r1, r6, lsl #1
   48668:	add	r1, r1, r7, lsl #1
   4866c:	strh	r3, [r1]
   48670:	add	r0, r0, r2
   48674:	b	48680 <GetDataSlab+0x18700>
   48678:	ldr	lr, [sp, #60]	; 0x3c
   4867c:	add	r0, r2, r3
   48680:	ldr	r1, [sp, #68]	; 0x44
   48684:	str	r6, [sp, #72]	; 0x48
   48688:	sub	r1, r1, r2
   4868c:	add	r3, r0, r1
   48690:	ldr	r0, [fp, #24]
   48694:	add	ip, r5, r1
   48698:	cmp	r0, #2
   4869c:	blt	485cc <GetDataSlab+0x1864c>
   486a0:	ldr	r9, [sp, #44]	; 0x2c
   486a4:	ldr	r6, [sp, #40]	; 0x28
   486a8:	mov	r2, #0
   486ac:	b	486dc <GetDataSlab+0x1875c>
   486b0:	ldr	r5, [sp, #84]	; 0x54
   486b4:	sub	r1, fp, #176	; 0xb0
   486b8:	sub	r0, r0, r7
   486bc:	ldr	r1, [r1, r2]
   486c0:	ldr	r5, [r5, r2]
   486c4:	mla	r0, r5, r1, r0
   486c8:	add	r3, r0, r3
   486cc:	add	ip, ip, r0
   486d0:	subs	r9, r9, #1
   486d4:	add	r2, r2, #4
   486d8:	beq	485cc <GetDataSlab+0x1864c>
   486dc:	ldr	r0, [r4, r2]
   486e0:	add	r0, r0, #1
   486e4:	str	r0, [r4, r2]
   486e8:	ldr	r1, [r6, r2]
   486ec:	sdiv	r5, r0, r1
   486f0:	mls	r0, r5, r1, r0
   486f4:	cmp	r0, #0
   486f8:	bne	485bc <GetDataSlab+0x1863c>
   486fc:	mov	r0, #0
   48700:	str	r0, [r4, r2]
   48704:	ldr	r0, [lr, r2]
   48708:	sdiv	r1, r3, r0
   4870c:	mls	r7, r1, r0, r3
   48710:	cmp	r7, #0
   48714:	bne	486b0 <GetDataSlab+0x18730>
   48718:	ldr	r0, [sp, #84]	; 0x54
   4871c:	ldr	r0, [r0, r2]
   48720:	cmp	r0, #0
   48724:	beq	486d0 <GetDataSlab+0x18750>
   48728:	sub	r1, fp, #176	; 0xb0
   4872c:	ldr	r1, [r1, r2]
   48730:	mla	r3, r1, r0, r3
   48734:	mla	ip, r1, r0, ip
   48738:	b	486d0 <GetDataSlab+0x18750>
   4873c:	ldr	r0, [sp, #76]	; 0x4c
   48740:	ldr	r1, [fp, #20]
   48744:	ldr	r2, [sp, #44]	; 0x2c
   48748:	cmp	r0, #1
   4874c:	ldr	r0, [fp, #12]
   48750:	blt	56c18 <GetDataSlab+0x26c98>
   48754:	add	r0, r0, #4
   48758:	ldr	r3, [sp, #72]	; 0x48
   4875c:	add	r8, r1, #4
   48760:	orr	r1, ip, #4
   48764:	mov	r6, #0
   48768:	str	r0, [sp, #44]	; 0x2c
   4876c:	ldr	r0, [fp, #24]
   48770:	str	r1, [sp, #84]	; 0x54
   48774:	mls	r2, r3, sl, r2
   48778:	mov	r1, r3
   4877c:	sub	r0, r0, #1
   48780:	str	r0, [sp, #48]	; 0x30
   48784:	sub	r0, fp, #96	; 0x60
   48788:	orr	r0, r0, #4
   4878c:	str	r2, [sp, #64]	; 0x40
   48790:	mul	r2, r3, sl
   48794:	str	r0, [sp, #40]	; 0x28
   48798:	and	r0, r3, #1
   4879c:	str	r0, [sp, #52]	; 0x34
   487a0:	sub	r9, r3, r0
   487a4:	lsl	r0, r3, #3
   487a8:	str	r0, [sp, #60]	; 0x3c
   487ac:	ldr	r0, [sp, #88]	; 0x58
   487b0:	str	r2, [sp, #56]	; 0x38
   487b4:	sub	r2, fp, #136	; 0x88
   487b8:	orr	r4, r2, #4
   487bc:	add	r0, r0, #8
   487c0:	str	r0, [sp, #80]	; 0x50
   487c4:	b	48804 <GetDataSlab+0x18884>
   487c8:	ldr	r0, [sp, #40]	; 0x28
   487cc:	ldr	r0, [r0, r2]
   487d0:	add	lr, lr, r0
   487d4:	add	r7, r0, r7
   487d8:	ldr	r0, [sp, #60]	; 0x3c
   487dc:	ldr	r1, [sp, #80]	; 0x50
   487e0:	ldr	r6, [sp, #68]	; 0x44
   487e4:	mov	r2, #0
   487e8:	add	r1, r1, r0
   487ec:	ldr	r0, [sp, #76]	; 0x4c
   487f0:	str	r1, [sp, #80]	; 0x50
   487f4:	ldr	r1, [sp, #72]	; 0x48
   487f8:	add	r6, r6, r1
   487fc:	cmp	r6, r0
   48800:	bge	56c1c <GetDataSlab+0x26c9c>
   48804:	ldr	r0, [fp, #12]
   48808:	cmp	r1, #1
   4880c:	ldr	r2, [r0]
   48810:	add	r5, lr, r2
   48814:	blt	48898 <GetDataSlab+0x18918>
   48818:	mov	r0, #0
   4881c:	cmp	r1, #1
   48820:	beq	48860 <GetDataSlab+0x188e0>
   48824:	ldr	r1, [sp, #80]	; 0x50
   48828:	mov	r0, #0
   4882c:	ldrsb	r3, [r5]
   48830:	add	r0, r0, #2
   48834:	cmp	r9, r0
   48838:	vmov	s0, r3
   4883c:	vcvt.f64.s32	d16, s0
   48840:	vstr	d16, [r1, #-8]
   48844:	ldrsb	r3, [r5, sl]!
   48848:	add	r5, r5, sl
   4884c:	vmov	s0, r3
   48850:	vcvt.f64.s32	d16, s0
   48854:	vstr	d16, [r1]
   48858:	add	r1, r1, #16
   4885c:	bne	4882c <GetDataSlab+0x188ac>
   48860:	ldr	r1, [sp, #56]	; 0x38
   48864:	ldr	r3, [sp, #52]	; 0x34
   48868:	add	r1, r1, r7
   4886c:	cmp	r3, #0
   48870:	beq	48890 <GetDataSlab+0x18910>
   48874:	ldr	r3, [sp, #88]	; 0x58
   48878:	add	r3, r3, r6, lsl #3
   4887c:	add	r0, r3, r0, lsl #3
   48880:	ldrsb	r3, [r5], sl
   48884:	vmov	s0, r3
   48888:	vcvt.f64.s32	d16, s0
   4888c:	vstr	d16, [r0]
   48890:	add	r0, r1, r2
   48894:	b	4889c <GetDataSlab+0x1891c>
   48898:	add	r0, r2, r7
   4889c:	ldr	r1, [sp, #64]	; 0x40
   488a0:	str	r6, [sp, #68]	; 0x44
   488a4:	sub	r1, r1, r2
   488a8:	add	r7, r0, r1
   488ac:	ldr	r0, [fp, #24]
   488b0:	add	lr, r5, r1
   488b4:	cmp	r0, #2
   488b8:	blt	487d8 <GetDataSlab+0x18858>
   488bc:	ldr	ip, [sp, #48]	; 0x30
   488c0:	ldr	r6, [sp, #44]	; 0x2c
   488c4:	mov	r2, #0
   488c8:	b	488f4 <GetDataSlab+0x18974>
   488cc:	sub	r3, fp, #176	; 0xb0
   488d0:	ldr	r5, [r6, r2]
   488d4:	sub	r0, r0, r1
   488d8:	ldr	r3, [r3, r2]
   488dc:	mla	r0, r5, r3, r0
   488e0:	add	r7, r0, r7
   488e4:	add	lr, lr, r0
   488e8:	subs	ip, ip, #1
   488ec:	add	r2, r2, #4
   488f0:	beq	487d8 <GetDataSlab+0x18858>
   488f4:	ldr	r0, [r4, r2]
   488f8:	add	r0, r0, #1
   488fc:	str	r0, [r4, r2]
   48900:	ldr	r1, [r8, r2]
   48904:	sdiv	r3, r0, r1
   48908:	mls	r0, r3, r1, r0
   4890c:	cmp	r0, #0
   48910:	bne	487c8 <GetDataSlab+0x18848>
   48914:	mov	r0, #0
   48918:	str	r0, [r4, r2]
   4891c:	ldr	r0, [sp, #84]	; 0x54
   48920:	ldr	r0, [r0, r2]
   48924:	sdiv	r1, r7, r0
   48928:	mls	r1, r1, r0, r7
   4892c:	cmp	r1, #0
   48930:	bne	488cc <GetDataSlab+0x1894c>
   48934:	ldr	r0, [r6, r2]
   48938:	cmp	r0, #0
   4893c:	beq	488e8 <GetDataSlab+0x18968>
   48940:	sub	r1, fp, #176	; 0xb0
   48944:	ldr	r1, [r1, r2]
   48948:	mla	r7, r1, r0, r7
   4894c:	mla	lr, r1, r0, lr
   48950:	b	488e8 <GetDataSlab+0x18968>
   48954:	ldr	r0, [sp, #76]	; 0x4c
   48958:	ldr	r2, [fp, #20]
   4895c:	cmp	r0, #1
   48960:	sub	r0, fp, #176	; 0xb0
   48964:	blt	56468 <GetDataSlab+0x264e8>
   48968:	orr	r0, r0, #4
   4896c:	ldr	sl, [fp, #12]
   48970:	sub	r3, fp, #136	; 0x88
   48974:	add	r2, r2, #4
   48978:	str	r0, [sp, #80]	; 0x50
   4897c:	ldr	r0, [fp, #24]
   48980:	orr	lr, r3, #4
   48984:	str	r2, [sp, #84]	; 0x54
   48988:	sub	r0, r0, #1
   4898c:	str	r0, [sp, #60]	; 0x3c
   48990:	sub	r0, fp, #96	; 0x60
   48994:	orr	r0, r0, #4
   48998:	str	r0, [sp, #56]	; 0x38
   4899c:	ldr	r0, [sl], #4
   489a0:	str	r0, [sp, #64]	; 0x40
   489a4:	mov	r0, #0
   489a8:	str	r0, [sp, #68]	; 0x44
   489ac:	b	489e0 <GetDataSlab+0x18a60>
   489b0:	ldr	r0, [sp, #56]	; 0x38
   489b4:	ldr	r0, [r0, r2]
   489b8:	add	r8, r8, r0
   489bc:	add	r7, r0, r7
   489c0:	ldr	r2, [sp, #68]	; 0x44
   489c4:	ldr	r0, [sp, #76]	; 0x4c
   489c8:	str	r6, [sp, #72]	; 0x48
   489cc:	add	r2, r1, r2
   489d0:	str	r2, [sp, #68]	; 0x44
   489d4:	cmp	r2, r0
   489d8:	mov	r2, #0
   489dc:	bge	56c1c <GetDataSlab+0x26c9c>
   489e0:	ldr	r0, [sp, #64]	; 0x40
   489e4:	cmp	r1, #1
   489e8:	add	r2, r0, r7
   489ec:	add	r7, r8, r0
   489f0:	blt	48a44 <GetDataSlab+0x18ac4>
   489f4:	ldr	r0, [sp, #88]	; 0x58
   489f8:	ldr	r1, [sp, #68]	; 0x44
   489fc:	ldr	ip, [fp, #8]
   48a00:	ldr	r6, [fp, #16]
   48a04:	mov	r3, #0
   48a08:	add	r4, r0, r1
   48a0c:	ldr	r0, [fp, #20]
   48a10:	ldrb	r1, [r7]
   48a14:	strb	r1, [r4, r3]
   48a18:	add	r3, r3, #1
   48a1c:	ldr	r5, [r6]
   48a20:	ldr	r1, [r0]
   48a24:	add	r2, r5, r2
   48a28:	add	r7, r7, r5
   48a2c:	cmp	r3, r1
   48a30:	blt	48a10 <GetDataSlab+0x18a90>
   48a34:	ldr	r0, [fp, #12]
   48a38:	ldr	r6, [ip]
   48a3c:	ldr	r0, [r0]
   48a40:	b	48a48 <GetDataSlab+0x18ac8>
   48a44:	ldr	r6, [sp, #72]	; 0x48
   48a48:	mls	r3, r5, r1, r6
   48a4c:	str	r0, [sp, #64]	; 0x40
   48a50:	sub	r3, r3, r0
   48a54:	ldr	r0, [fp, #24]
   48a58:	add	r8, r7, r3
   48a5c:	add	r7, r3, r2
   48a60:	cmp	r0, #2
   48a64:	blt	489c0 <GetDataSlab+0x18a40>
   48a68:	ldr	r9, [sp, #60]	; 0x3c
   48a6c:	mov	r2, #0
   48a70:	b	48a9c <GetDataSlab+0x18b1c>
   48a74:	sub	r0, fp, #176	; 0xb0
   48a78:	ldr	r4, [sl, r2]
   48a7c:	sub	r3, r3, ip
   48a80:	ldr	r0, [r0, r2]
   48a84:	mla	r0, r4, r0, r3
   48a88:	add	r7, r0, r7
   48a8c:	add	r8, r8, r0
   48a90:	subs	r9, r9, #1
   48a94:	add	r2, r2, #4
   48a98:	beq	489c0 <GetDataSlab+0x18a40>
   48a9c:	ldr	r3, [lr, r2]
   48aa0:	ldr	r0, [sp, #84]	; 0x54
   48aa4:	add	r3, r3, #1
   48aa8:	str	r3, [lr, r2]
   48aac:	ldr	r0, [r0, r2]
   48ab0:	sdiv	r4, r3, r0
   48ab4:	mls	r0, r4, r0, r3
   48ab8:	cmp	r0, #0
   48abc:	bne	489b0 <GetDataSlab+0x18a30>
   48ac0:	mov	r0, #0
   48ac4:	str	r0, [lr, r2]
   48ac8:	ldr	r0, [sp, #80]	; 0x50
   48acc:	ldr	r3, [r0, r2]
   48ad0:	sdiv	r0, r7, r3
   48ad4:	mls	ip, r0, r3, r7
   48ad8:	cmp	ip, #0
   48adc:	bne	48a74 <GetDataSlab+0x18af4>
   48ae0:	ldr	r3, [sl, r2]
   48ae4:	cmp	r3, #0
   48ae8:	beq	48a90 <GetDataSlab+0x18b10>
   48aec:	sub	r0, fp, #176	; 0xb0
   48af0:	ldr	r0, [r0, r2]
   48af4:	mla	r7, r0, r3, r7
   48af8:	mla	r8, r0, r3, r8
   48afc:	b	48a90 <GetDataSlab+0x18b10>
   48b00:	ldr	r0, [sp, #76]	; 0x4c
   48b04:	ldr	r2, [fp, #20]
   48b08:	cmp	r0, #1
   48b0c:	sub	r0, fp, #176	; 0xb0
   48b10:	blt	56468 <GetDataSlab+0x264e8>
   48b14:	orr	r0, r0, #4
   48b18:	ldr	sl, [fp, #12]
   48b1c:	sub	r3, fp, #136	; 0x88
   48b20:	add	r2, r2, #4
   48b24:	str	r0, [sp, #80]	; 0x50
   48b28:	ldr	r0, [fp, #24]
   48b2c:	orr	lr, r3, #4
   48b30:	str	r2, [sp, #84]	; 0x54
   48b34:	sub	r0, r0, #1
   48b38:	str	r0, [sp, #60]	; 0x3c
   48b3c:	sub	r0, fp, #96	; 0x60
   48b40:	orr	r0, r0, #4
   48b44:	str	r0, [sp, #56]	; 0x38
   48b48:	ldr	r0, [sl], #4
   48b4c:	str	r0, [sp, #64]	; 0x40
   48b50:	mov	r0, #0
   48b54:	str	r0, [sp, #68]	; 0x44
   48b58:	b	48b8c <GetDataSlab+0x18c0c>
   48b5c:	ldr	r0, [sp, #56]	; 0x38
   48b60:	ldr	r0, [r0, r2]
   48b64:	add	r8, r8, r0
   48b68:	add	r7, r0, r7
   48b6c:	ldr	r2, [sp, #68]	; 0x44
   48b70:	ldr	r0, [sp, #76]	; 0x4c
   48b74:	str	r6, [sp, #72]	; 0x48
   48b78:	add	r2, r1, r2
   48b7c:	str	r2, [sp, #68]	; 0x44
   48b80:	cmp	r2, r0
   48b84:	mov	r2, #0
   48b88:	bge	56c1c <GetDataSlab+0x26c9c>
   48b8c:	ldr	r0, [sp, #64]	; 0x40
   48b90:	cmp	r1, #1
   48b94:	add	r2, r0, r7
   48b98:	add	r7, r8, r0
   48b9c:	blt	48bf0 <GetDataSlab+0x18c70>
   48ba0:	ldr	r0, [sp, #88]	; 0x58
   48ba4:	ldr	r1, [sp, #68]	; 0x44
   48ba8:	ldr	ip, [fp, #8]
   48bac:	ldr	r6, [fp, #16]
   48bb0:	mov	r3, #0
   48bb4:	add	r4, r0, r1
   48bb8:	ldr	r0, [fp, #20]
   48bbc:	ldrb	r1, [r7]
   48bc0:	strb	r1, [r4, r3]
   48bc4:	add	r3, r3, #1
   48bc8:	ldr	r5, [r6]
   48bcc:	ldr	r1, [r0]
   48bd0:	add	r2, r5, r2
   48bd4:	add	r7, r7, r5
   48bd8:	cmp	r3, r1
   48bdc:	blt	48bbc <GetDataSlab+0x18c3c>
   48be0:	ldr	r0, [fp, #12]
   48be4:	ldr	r6, [ip]
   48be8:	ldr	r0, [r0]
   48bec:	b	48bf4 <GetDataSlab+0x18c74>
   48bf0:	ldr	r6, [sp, #72]	; 0x48
   48bf4:	mls	r3, r5, r1, r6
   48bf8:	str	r0, [sp, #64]	; 0x40
   48bfc:	sub	r3, r3, r0
   48c00:	ldr	r0, [fp, #24]
   48c04:	add	r8, r7, r3
   48c08:	add	r7, r3, r2
   48c0c:	cmp	r0, #2
   48c10:	blt	48b6c <GetDataSlab+0x18bec>
   48c14:	ldr	r9, [sp, #60]	; 0x3c
   48c18:	mov	r2, #0
   48c1c:	b	48c48 <GetDataSlab+0x18cc8>
   48c20:	sub	r0, fp, #176	; 0xb0
   48c24:	ldr	r4, [sl, r2]
   48c28:	sub	r3, r3, ip
   48c2c:	ldr	r0, [r0, r2]
   48c30:	mla	r0, r4, r0, r3
   48c34:	add	r7, r0, r7
   48c38:	add	r8, r8, r0
   48c3c:	subs	r9, r9, #1
   48c40:	add	r2, r2, #4
   48c44:	beq	48b6c <GetDataSlab+0x18bec>
   48c48:	ldr	r3, [lr, r2]
   48c4c:	ldr	r0, [sp, #84]	; 0x54
   48c50:	add	r3, r3, #1
   48c54:	str	r3, [lr, r2]
   48c58:	ldr	r0, [r0, r2]
   48c5c:	sdiv	r4, r3, r0
   48c60:	mls	r0, r4, r0, r3
   48c64:	cmp	r0, #0
   48c68:	bne	48b5c <GetDataSlab+0x18bdc>
   48c6c:	mov	r0, #0
   48c70:	str	r0, [lr, r2]
   48c74:	ldr	r0, [sp, #80]	; 0x50
   48c78:	ldr	r3, [r0, r2]
   48c7c:	sdiv	r0, r7, r3
   48c80:	mls	ip, r0, r3, r7
   48c84:	cmp	ip, #0
   48c88:	bne	48c20 <GetDataSlab+0x18ca0>
   48c8c:	ldr	r3, [sl, r2]
   48c90:	cmp	r3, #0
   48c94:	beq	48c3c <GetDataSlab+0x18cbc>
   48c98:	sub	r0, fp, #176	; 0xb0
   48c9c:	ldr	r0, [r0, r2]
   48ca0:	mla	r7, r0, r3, r7
   48ca4:	mla	r8, r0, r3, r8
   48ca8:	b	48c3c <GetDataSlab+0x18cbc>
   48cac:	ldr	r0, [sp, #76]	; 0x4c
   48cb0:	ldr	r2, [fp, #20]
   48cb4:	cmp	r0, #1
   48cb8:	sub	r0, fp, #176	; 0xb0
   48cbc:	blt	56c18 <GetDataSlab+0x26c98>
   48cc0:	orr	r0, r0, #4
   48cc4:	ldr	lr, [fp, #12]
   48cc8:	mov	r3, r8
   48ccc:	sub	r6, fp, #136	; 0x88
   48cd0:	add	r2, r2, #4
   48cd4:	str	r0, [sp, #80]	; 0x50
   48cd8:	ldr	r0, [fp, #24]
   48cdc:	orr	r8, r6, #4
   48ce0:	str	r2, [sp, #84]	; 0x54
   48ce4:	sub	r0, r0, #1
   48ce8:	str	r0, [sp, #60]	; 0x3c
   48cec:	orr	r0, r3, #4
   48cf0:	str	r0, [sp, #56]	; 0x38
   48cf4:	ldr	r0, [lr], #4
   48cf8:	str	r0, [sp, #64]	; 0x40
   48cfc:	mov	r0, #0
   48d00:	str	r0, [sp, #68]	; 0x44
   48d04:	b	48d38 <GetDataSlab+0x18db8>
   48d08:	ldr	r0, [sp, #56]	; 0x38
   48d0c:	ldr	r0, [r0, r2]
   48d10:	add	sl, sl, r0
   48d14:	add	r7, r0, r7
   48d18:	ldr	r3, [sp, #68]	; 0x44
   48d1c:	ldr	r0, [sp, #76]	; 0x4c
   48d20:	mov	r2, #0
   48d24:	str	r6, [sp, #72]	; 0x48
   48d28:	add	r3, r1, r3
   48d2c:	cmp	r3, r0
   48d30:	str	r3, [sp, #68]	; 0x44
   48d34:	bge	56c1c <GetDataSlab+0x26c9c>
   48d38:	ldr	r0, [sp, #64]	; 0x40
   48d3c:	cmp	r1, #1
   48d40:	add	r2, r0, r7
   48d44:	add	r7, sl, r0
   48d48:	blt	48d9c <GetDataSlab+0x18e1c>
   48d4c:	ldr	r0, [sp, #88]	; 0x58
   48d50:	ldr	r1, [sp, #68]	; 0x44
   48d54:	ldr	ip, [fp, #8]
   48d58:	ldr	r6, [fp, #16]
   48d5c:	mov	r3, #0
   48d60:	add	r4, r0, r1, lsl #2
   48d64:	ldr	r0, [fp, #20]
   48d68:	ldrsb	r1, [r7]
   48d6c:	str	r1, [r4, r3, lsl #2]
   48d70:	add	r3, r3, #1
   48d74:	ldr	r5, [r6]
   48d78:	ldr	r1, [r0]
   48d7c:	add	r2, r5, r2
   48d80:	add	r7, r7, r5
   48d84:	cmp	r3, r1
   48d88:	blt	48d68 <GetDataSlab+0x18de8>
   48d8c:	ldr	r0, [fp, #12]
   48d90:	ldr	r6, [ip]
   48d94:	ldr	r0, [r0]
   48d98:	b	48da0 <GetDataSlab+0x18e20>
   48d9c:	ldr	r6, [sp, #72]	; 0x48
   48da0:	mls	r3, r5, r1, r6
   48da4:	str	r0, [sp, #64]	; 0x40
   48da8:	sub	r3, r3, r0
   48dac:	ldr	r0, [fp, #24]
   48db0:	add	sl, r7, r3
   48db4:	add	r7, r3, r2
   48db8:	cmp	r0, #2
   48dbc:	blt	48d18 <GetDataSlab+0x18d98>
   48dc0:	ldr	r9, [sp, #60]	; 0x3c
   48dc4:	mov	r2, #0
   48dc8:	b	48df4 <GetDataSlab+0x18e74>
   48dcc:	sub	r0, fp, #176	; 0xb0
   48dd0:	ldr	r4, [lr, r2]
   48dd4:	sub	r3, r3, ip
   48dd8:	ldr	r0, [r0, r2]
   48ddc:	mla	r0, r4, r0, r3
   48de0:	add	r7, r0, r7
   48de4:	add	sl, sl, r0
   48de8:	subs	r9, r9, #1
   48dec:	add	r2, r2, #4
   48df0:	beq	48d18 <GetDataSlab+0x18d98>
   48df4:	ldr	r3, [r8, r2]
   48df8:	ldr	r0, [sp, #84]	; 0x54
   48dfc:	add	r3, r3, #1
   48e00:	str	r3, [r8, r2]
   48e04:	ldr	r0, [r0, r2]
   48e08:	sdiv	r4, r3, r0
   48e0c:	mls	r0, r4, r0, r3
   48e10:	cmp	r0, #0
   48e14:	bne	48d08 <GetDataSlab+0x18d88>
   48e18:	mov	r0, #0
   48e1c:	str	r0, [r8, r2]
   48e20:	ldr	r0, [sp, #80]	; 0x50
   48e24:	ldr	r3, [r0, r2]
   48e28:	sdiv	r0, r7, r3
   48e2c:	mls	ip, r0, r3, r7
   48e30:	cmp	ip, #0
   48e34:	bne	48dcc <GetDataSlab+0x18e4c>
   48e38:	ldr	r3, [lr, r2]
   48e3c:	cmp	r3, #0
   48e40:	beq	48de8 <GetDataSlab+0x18e68>
   48e44:	sub	r0, fp, #176	; 0xb0
   48e48:	ldr	r0, [r0, r2]
   48e4c:	mla	r7, r0, r3, r7
   48e50:	mla	sl, r0, r3, sl
   48e54:	b	48de8 <GetDataSlab+0x18e68>
   48e58:	ldr	r0, [sp, #76]	; 0x4c
   48e5c:	ldr	r2, [fp, #20]
   48e60:	cmp	r0, #1
   48e64:	sub	r0, fp, #176	; 0xb0
   48e68:	blt	56c18 <GetDataSlab+0x26c98>
   48e6c:	orr	r0, r0, #4
   48e70:	ldr	lr, [fp, #12]
   48e74:	mov	r3, r8
   48e78:	sub	r6, fp, #136	; 0x88
   48e7c:	add	r2, r2, #4
   48e80:	str	r0, [sp, #80]	; 0x50
   48e84:	ldr	r0, [fp, #24]
   48e88:	orr	r8, r6, #4
   48e8c:	str	r2, [sp, #84]	; 0x54
   48e90:	sub	r0, r0, #1
   48e94:	str	r0, [sp, #60]	; 0x3c
   48e98:	orr	r0, r3, #4
   48e9c:	str	r0, [sp, #56]	; 0x38
   48ea0:	ldr	r0, [lr], #4
   48ea4:	str	r0, [sp, #64]	; 0x40
   48ea8:	mov	r0, #0
   48eac:	str	r0, [sp, #68]	; 0x44
   48eb0:	b	48ee4 <GetDataSlab+0x18f64>
   48eb4:	ldr	r0, [sp, #56]	; 0x38
   48eb8:	ldr	r0, [r0, r2]
   48ebc:	add	sl, sl, r0
   48ec0:	add	r7, r0, r7
   48ec4:	ldr	r2, [sp, #68]	; 0x44
   48ec8:	ldr	r0, [sp, #76]	; 0x4c
   48ecc:	str	r6, [sp, #72]	; 0x48
   48ed0:	add	r2, r1, r2
   48ed4:	str	r2, [sp, #68]	; 0x44
   48ed8:	cmp	r2, r0
   48edc:	mov	r2, #0
   48ee0:	bge	56c1c <GetDataSlab+0x26c9c>
   48ee4:	ldr	r0, [sp, #64]	; 0x40
   48ee8:	cmp	r1, #1
   48eec:	add	r2, r0, r7
   48ef0:	add	r7, sl, r0
   48ef4:	blt	48f48 <GetDataSlab+0x18fc8>
   48ef8:	ldr	r0, [sp, #88]	; 0x58
   48efc:	ldr	r1, [sp, #68]	; 0x44
   48f00:	ldr	ip, [fp, #8]
   48f04:	ldr	r6, [fp, #16]
   48f08:	mov	r3, #0
   48f0c:	add	r4, r0, r1, lsl #2
   48f10:	ldr	r0, [fp, #20]
   48f14:	ldrsb	r1, [r7]
   48f18:	str	r1, [r4, r3, lsl #2]
   48f1c:	add	r3, r3, #1
   48f20:	ldr	r5, [r6]
   48f24:	ldr	r1, [r0]
   48f28:	add	r2, r5, r2
   48f2c:	add	r7, r7, r5
   48f30:	cmp	r3, r1
   48f34:	blt	48f14 <GetDataSlab+0x18f94>
   48f38:	ldr	r0, [fp, #12]
   48f3c:	ldr	r6, [ip]
   48f40:	ldr	r0, [r0]
   48f44:	b	48f4c <GetDataSlab+0x18fcc>
   48f48:	ldr	r6, [sp, #72]	; 0x48
   48f4c:	mls	r3, r5, r1, r6
   48f50:	str	r0, [sp, #64]	; 0x40
   48f54:	sub	r3, r3, r0
   48f58:	ldr	r0, [fp, #24]
   48f5c:	add	sl, r7, r3
   48f60:	add	r7, r3, r2
   48f64:	cmp	r0, #2
   48f68:	blt	48ec4 <GetDataSlab+0x18f44>
   48f6c:	ldr	r9, [sp, #60]	; 0x3c
   48f70:	mov	r2, #0
   48f74:	b	48fa0 <GetDataSlab+0x19020>
   48f78:	sub	r0, fp, #176	; 0xb0
   48f7c:	ldr	r4, [lr, r2]
   48f80:	sub	r3, r3, ip
   48f84:	ldr	r0, [r0, r2]
   48f88:	mla	r0, r4, r0, r3
   48f8c:	add	r7, r0, r7
   48f90:	add	sl, sl, r0
   48f94:	subs	r9, r9, #1
   48f98:	add	r2, r2, #4
   48f9c:	beq	48ec4 <GetDataSlab+0x18f44>
   48fa0:	ldr	r3, [r8, r2]
   48fa4:	ldr	r0, [sp, #84]	; 0x54
   48fa8:	add	r3, r3, #1
   48fac:	str	r3, [r8, r2]
   48fb0:	ldr	r0, [r0, r2]
   48fb4:	sdiv	r4, r3, r0
   48fb8:	mls	r0, r4, r0, r3
   48fbc:	cmp	r0, #0
   48fc0:	bne	48eb4 <GetDataSlab+0x18f34>
   48fc4:	mov	r0, #0
   48fc8:	str	r0, [r8, r2]
   48fcc:	ldr	r0, [sp, #80]	; 0x50
   48fd0:	ldr	r3, [r0, r2]
   48fd4:	sdiv	r0, r7, r3
   48fd8:	mls	ip, r0, r3, r7
   48fdc:	cmp	ip, #0
   48fe0:	bne	48f78 <GetDataSlab+0x18ff8>
   48fe4:	ldr	r3, [lr, r2]
   48fe8:	cmp	r3, #0
   48fec:	beq	48f94 <GetDataSlab+0x19014>
   48ff0:	sub	r0, fp, #176	; 0xb0
   48ff4:	ldr	r0, [r0, r2]
   48ff8:	mla	r7, r0, r3, r7
   48ffc:	mla	sl, r0, r3, sl
   49000:	b	48f94 <GetDataSlab+0x19014>
   49004:	ldr	r0, [sp, #76]	; 0x4c
   49008:	ldr	r1, [sp, #72]	; 0x48
   4900c:	ldr	r3, [sp, #48]	; 0x30
   49010:	sub	r2, fp, #96	; 0x60
   49014:	cmp	r0, #1
   49018:	ldr	r0, [fp, #12]
   4901c:	blt	56c18 <GetDataSlab+0x26c98>
   49020:	mls	r3, r1, r9, r3
   49024:	mul	r1, r1, r9
   49028:	add	r0, r0, #4
   4902c:	mov	r6, #0
   49030:	str	r0, [sp, #44]	; 0x2c
   49034:	ldr	r0, [fp, #24]
   49038:	str	r1, [sp, #56]	; 0x38
   4903c:	sub	r1, fp, #136	; 0x88
   49040:	str	r3, [sp, #64]	; 0x40
   49044:	orr	r4, r1, #4
   49048:	ldr	r1, [fp, #20]
   4904c:	sub	r0, r0, #1
   49050:	str	r0, [sp, #48]	; 0x30
   49054:	orr	r0, r2, #4
   49058:	str	r0, [sp, #40]	; 0x28
   4905c:	add	lr, r1, #4
   49060:	sub	r1, fp, #176	; 0xb0
   49064:	orr	r1, r1, #4
   49068:	str	r1, [sp, #84]	; 0x54
   4906c:	ldr	r1, [sp, #72]	; 0x48
   49070:	and	r0, r1, #1
   49074:	sub	r8, r1, r0
   49078:	str	r0, [sp, #52]	; 0x34
   4907c:	lsl	r0, r1, #3
   49080:	str	r0, [sp, #60]	; 0x3c
   49084:	ldr	r0, [sp, #88]	; 0x58
   49088:	str	r0, [sp, #80]	; 0x50
   4908c:	b	490cc <GetDataSlab+0x1914c>
   49090:	ldr	r0, [sp, #40]	; 0x28
   49094:	ldr	r0, [r0, r2]
   49098:	add	ip, ip, r0
   4909c:	add	r7, r0, r7
   490a0:	ldr	r0, [sp, #60]	; 0x3c
   490a4:	ldr	r1, [sp, #80]	; 0x50
   490a8:	ldr	r6, [sp, #68]	; 0x44
   490ac:	mov	r2, #0
   490b0:	add	r1, r1, r0
   490b4:	ldr	r0, [sp, #76]	; 0x4c
   490b8:	str	r1, [sp, #80]	; 0x50
   490bc:	ldr	r1, [sp, #72]	; 0x48
   490c0:	add	r6, r6, r1
   490c4:	cmp	r6, r0
   490c8:	bge	56c1c <GetDataSlab+0x26c9c>
   490cc:	ldr	r0, [fp, #12]
   490d0:	cmp	r1, #1
   490d4:	ldr	r2, [r0]
   490d8:	add	r5, ip, r2
   490dc:	blt	4915c <GetDataSlab+0x191dc>
   490e0:	mov	r0, #0
   490e4:	cmp	r1, #1
   490e8:	beq	49128 <GetDataSlab+0x191a8>
   490ec:	ldr	r1, [sp, #80]	; 0x50
   490f0:	mov	r0, #0
   490f4:	ldrsb	r3, [r5]
   490f8:	add	r0, r0, #2
   490fc:	cmp	r8, r0
   49100:	str	r3, [r1]
   49104:	asr	r3, r3, #31
   49108:	str	r3, [r1, #4]
   4910c:	ldrsb	r3, [r5, r9]!
   49110:	add	r5, r5, r9
   49114:	str	r3, [r1, #8]
   49118:	asr	r3, r3, #31
   4911c:	str	r3, [r1, #12]
   49120:	add	r1, r1, #16
   49124:	bne	490f4 <GetDataSlab+0x19174>
   49128:	ldr	r1, [sp, #56]	; 0x38
   4912c:	ldr	r3, [sp, #52]	; 0x34
   49130:	add	r1, r1, r7
   49134:	cmp	r3, #0
   49138:	beq	49154 <GetDataSlab+0x191d4>
   4913c:	ldr	r3, [sp, #88]	; 0x58
   49140:	ldrsb	r7, [r5], r9
   49144:	add	r3, r3, r6, lsl #3
   49148:	str	r7, [r3, r0, lsl #3]!
   4914c:	asr	r0, r7, #31
   49150:	str	r0, [r3, #4]
   49154:	add	r0, r1, r2
   49158:	b	49160 <GetDataSlab+0x191e0>
   4915c:	add	r0, r2, r7
   49160:	ldr	r1, [sp, #64]	; 0x40
   49164:	str	r6, [sp, #68]	; 0x44
   49168:	sub	r1, r1, r2
   4916c:	add	r7, r0, r1
   49170:	ldr	r0, [fp, #24]
   49174:	add	ip, r5, r1
   49178:	cmp	r0, #2
   4917c:	blt	490a0 <GetDataSlab+0x19120>
   49180:	ldr	sl, [sp, #48]	; 0x30
   49184:	ldr	r6, [sp, #44]	; 0x2c
   49188:	mov	r2, #0
   4918c:	b	491b8 <GetDataSlab+0x19238>
   49190:	sub	r3, fp, #176	; 0xb0
   49194:	ldr	r5, [r6, r2]
   49198:	sub	r0, r0, r1
   4919c:	ldr	r3, [r3, r2]
   491a0:	mla	r0, r5, r3, r0
   491a4:	add	r7, r0, r7
   491a8:	add	ip, ip, r0
   491ac:	subs	sl, sl, #1
   491b0:	add	r2, r2, #4
   491b4:	beq	490a0 <GetDataSlab+0x19120>
   491b8:	ldr	r0, [r4, r2]
   491bc:	add	r0, r0, #1
   491c0:	str	r0, [r4, r2]
   491c4:	ldr	r1, [lr, r2]
   491c8:	sdiv	r3, r0, r1
   491cc:	mls	r0, r3, r1, r0
   491d0:	cmp	r0, #0
   491d4:	bne	49090 <GetDataSlab+0x19110>
   491d8:	mov	r0, #0
   491dc:	str	r0, [r4, r2]
   491e0:	ldr	r0, [sp, #84]	; 0x54
   491e4:	ldr	r0, [r0, r2]
   491e8:	sdiv	r1, r7, r0
   491ec:	mls	r1, r1, r0, r7
   491f0:	cmp	r1, #0
   491f4:	bne	49190 <GetDataSlab+0x19210>
   491f8:	ldr	r0, [r6, r2]
   491fc:	cmp	r0, #0
   49200:	beq	491ac <GetDataSlab+0x1922c>
   49204:	sub	r1, fp, #176	; 0xb0
   49208:	ldr	r1, [r1, r2]
   4920c:	mla	r7, r1, r0, r7
   49210:	mla	ip, r1, r0, ip
   49214:	b	491ac <GetDataSlab+0x1922c>
   49218:	ldr	r0, [sp, #76]	; 0x4c
   4921c:	ldr	r1, [sp, #72]	; 0x48
   49220:	ldr	r3, [sp, #48]	; 0x30
   49224:	sub	r2, fp, #96	; 0x60
   49228:	cmp	r0, #1
   4922c:	ldr	r0, [fp, #12]
   49230:	blt	56c18 <GetDataSlab+0x26c98>
   49234:	mls	r3, r1, r9, r3
   49238:	mul	r1, r1, r9
   4923c:	add	r0, r0, #4
   49240:	mov	r6, #0
   49244:	str	r0, [sp, #44]	; 0x2c
   49248:	ldr	r0, [fp, #24]
   4924c:	str	r1, [sp, #56]	; 0x38
   49250:	sub	r1, fp, #136	; 0x88
   49254:	str	r3, [sp, #64]	; 0x40
   49258:	orr	r4, r1, #4
   4925c:	ldr	r1, [fp, #20]
   49260:	sub	r0, r0, #1
   49264:	str	r0, [sp, #48]	; 0x30
   49268:	orr	r0, r2, #4
   4926c:	str	r0, [sp, #40]	; 0x28
   49270:	add	lr, r1, #4
   49274:	sub	r1, fp, #176	; 0xb0
   49278:	orr	r1, r1, #4
   4927c:	str	r1, [sp, #84]	; 0x54
   49280:	ldr	r1, [sp, #72]	; 0x48
   49284:	and	r0, r1, #1
   49288:	sub	r8, r1, r0
   4928c:	str	r0, [sp, #52]	; 0x34
   49290:	lsl	r0, r1, #3
   49294:	str	r0, [sp, #60]	; 0x3c
   49298:	ldr	r0, [sp, #88]	; 0x58
   4929c:	str	r0, [sp, #80]	; 0x50
   492a0:	b	492e0 <GetDataSlab+0x19360>
   492a4:	ldr	r0, [sp, #40]	; 0x28
   492a8:	ldr	r0, [r0, r2]
   492ac:	add	ip, ip, r0
   492b0:	add	r7, r0, r7
   492b4:	ldr	r0, [sp, #60]	; 0x3c
   492b8:	ldr	r1, [sp, #80]	; 0x50
   492bc:	ldr	r6, [sp, #68]	; 0x44
   492c0:	mov	r2, #0
   492c4:	add	r1, r1, r0
   492c8:	ldr	r0, [sp, #76]	; 0x4c
   492cc:	str	r1, [sp, #80]	; 0x50
   492d0:	ldr	r1, [sp, #72]	; 0x48
   492d4:	add	r6, r6, r1
   492d8:	cmp	r6, r0
   492dc:	bge	56c1c <GetDataSlab+0x26c9c>
   492e0:	ldr	r0, [fp, #12]
   492e4:	cmp	r1, #1
   492e8:	ldr	r2, [r0]
   492ec:	add	r5, ip, r2
   492f0:	blt	49370 <GetDataSlab+0x193f0>
   492f4:	mov	r0, #0
   492f8:	cmp	r1, #1
   492fc:	beq	4933c <GetDataSlab+0x193bc>
   49300:	ldr	r1, [sp, #80]	; 0x50
   49304:	mov	r0, #0
   49308:	ldrsb	r3, [r5]
   4930c:	add	r0, r0, #2
   49310:	cmp	r8, r0
   49314:	str	r3, [r1]
   49318:	asr	r3, r3, #31
   4931c:	str	r3, [r1, #4]
   49320:	ldrsb	r3, [r5, r9]!
   49324:	add	r5, r5, r9
   49328:	str	r3, [r1, #8]
   4932c:	asr	r3, r3, #31
   49330:	str	r3, [r1, #12]
   49334:	add	r1, r1, #16
   49338:	bne	49308 <GetDataSlab+0x19388>
   4933c:	ldr	r1, [sp, #56]	; 0x38
   49340:	ldr	r3, [sp, #52]	; 0x34
   49344:	add	r1, r1, r7
   49348:	cmp	r3, #0
   4934c:	beq	49368 <GetDataSlab+0x193e8>
   49350:	ldr	r3, [sp, #88]	; 0x58
   49354:	ldrsb	r7, [r5], r9
   49358:	add	r3, r3, r6, lsl #3
   4935c:	str	r7, [r3, r0, lsl #3]!
   49360:	asr	r0, r7, #31
   49364:	str	r0, [r3, #4]
   49368:	add	r0, r1, r2
   4936c:	b	49374 <GetDataSlab+0x193f4>
   49370:	add	r0, r2, r7
   49374:	ldr	r1, [sp, #64]	; 0x40
   49378:	str	r6, [sp, #68]	; 0x44
   4937c:	sub	r1, r1, r2
   49380:	add	r7, r0, r1
   49384:	ldr	r0, [fp, #24]
   49388:	add	ip, r5, r1
   4938c:	cmp	r0, #2
   49390:	blt	492b4 <GetDataSlab+0x19334>
   49394:	ldr	sl, [sp, #48]	; 0x30
   49398:	ldr	r6, [sp, #44]	; 0x2c
   4939c:	mov	r2, #0
   493a0:	b	493cc <GetDataSlab+0x1944c>
   493a4:	sub	r3, fp, #176	; 0xb0
   493a8:	ldr	r5, [r6, r2]
   493ac:	sub	r0, r0, r1
   493b0:	ldr	r3, [r3, r2]
   493b4:	mla	r0, r5, r3, r0
   493b8:	add	r7, r0, r7
   493bc:	add	ip, ip, r0
   493c0:	subs	sl, sl, #1
   493c4:	add	r2, r2, #4
   493c8:	beq	492b4 <GetDataSlab+0x19334>
   493cc:	ldr	r0, [r4, r2]
   493d0:	add	r0, r0, #1
   493d4:	str	r0, [r4, r2]
   493d8:	ldr	r1, [lr, r2]
   493dc:	sdiv	r3, r0, r1
   493e0:	mls	r0, r3, r1, r0
   493e4:	cmp	r0, #0
   493e8:	bne	492a4 <GetDataSlab+0x19324>
   493ec:	mov	r0, #0
   493f0:	str	r0, [r4, r2]
   493f4:	ldr	r0, [sp, #84]	; 0x54
   493f8:	ldr	r0, [r0, r2]
   493fc:	sdiv	r1, r7, r0
   49400:	mls	r1, r1, r0, r7
   49404:	cmp	r1, #0
   49408:	bne	493a4 <GetDataSlab+0x19424>
   4940c:	ldr	r0, [r6, r2]
   49410:	cmp	r0, #0
   49414:	beq	493c0 <GetDataSlab+0x19440>
   49418:	sub	r1, fp, #176	; 0xb0
   4941c:	ldr	r1, [r1, r2]
   49420:	mla	r7, r1, r0, r7
   49424:	mla	ip, r1, r0, ip
   49428:	b	493c0 <GetDataSlab+0x19440>
   4942c:	ldr	r0, [sp, #76]	; 0x4c
   49430:	cmp	r0, #1
   49434:	ldr	r0, [fp, #20]
   49438:	blt	56c18 <GetDataSlab+0x26c98>
   4943c:	add	r6, r0, #4
   49440:	orr	r0, ip, #4
   49444:	ldr	r2, [sp, #72]	; 0x48
   49448:	ldr	r1, [sp, #40]	; 0x28
   4944c:	str	r0, [sp, #84]	; 0x54
   49450:	ldr	r0, [fp, #12]
   49454:	mls	r1, r2, sl, r1
   49458:	add	lr, r0, #4
   4945c:	ldr	r0, [fp, #24]
   49460:	str	r1, [sp, #64]	; 0x40
   49464:	mul	r1, r2, sl
   49468:	sub	r0, r0, #1
   4946c:	str	r0, [sp, #48]	; 0x30
   49470:	sub	r0, fp, #96	; 0x60
   49474:	str	r1, [sp, #56]	; 0x38
   49478:	sub	r1, fp, #136	; 0x88
   4947c:	orr	r0, r0, #4
   49480:	orr	r4, r1, #4
   49484:	mov	r1, r2
   49488:	str	r0, [sp, #44]	; 0x2c
   4948c:	and	r0, r2, #1
   49490:	sub	r9, r2, r0
   49494:	str	r0, [sp, #52]	; 0x34
   49498:	lsl	r0, r2, #3
   4949c:	str	r0, [sp, #60]	; 0x3c
   494a0:	ldr	r0, [sp, #88]	; 0x58
   494a4:	add	r0, r0, #8
   494a8:	str	r0, [sp, #80]	; 0x50
   494ac:	mov	r0, #0
   494b0:	str	r0, [sp, #68]	; 0x44
   494b4:	b	494f8 <GetDataSlab+0x19578>
   494b8:	ldr	r0, [sp, #44]	; 0x2c
   494bc:	ldr	r0, [r0, r2]
   494c0:	add	r8, r8, r0
   494c4:	add	r5, r0, r5
   494c8:	ldr	r0, [sp, #60]	; 0x3c
   494cc:	ldr	r1, [sp, #80]	; 0x50
   494d0:	ldr	r3, [sp, #68]	; 0x44
   494d4:	mov	r2, #0
   494d8:	add	r1, r1, r0
   494dc:	ldr	r0, [sp, #76]	; 0x4c
   494e0:	str	r1, [sp, #80]	; 0x50
   494e4:	ldr	r1, [sp, #72]	; 0x48
   494e8:	add	r3, r3, r1
   494ec:	cmp	r3, r0
   494f0:	str	r3, [sp, #68]	; 0x44
   494f4:	bge	56c1c <GetDataSlab+0x26c9c>
   494f8:	ldr	r0, [fp, #12]
   494fc:	cmp	r1, #1
   49500:	ldr	r2, [r0]
   49504:	add	r7, r8, r2
   49508:	blt	49520 <GetDataSlab+0x195a0>
   4950c:	mov	r0, #0
   49510:	cmp	r1, #1
   49514:	bne	49528 <GetDataSlab+0x195a8>
   49518:	ldr	ip, [sp, #88]	; 0x58
   4951c:	b	49568 <GetDataSlab+0x195e8>
   49520:	add	r0, r2, r5
   49524:	b	4959c <GetDataSlab+0x1961c>
   49528:	ldr	r1, [sp, #80]	; 0x50
   4952c:	ldr	ip, [sp, #88]	; 0x58
   49530:	mov	r0, #0
   49534:	ldrb	r3, [r7]
   49538:	add	r0, r0, #2
   4953c:	cmp	r9, r0
   49540:	vmov	s0, r3
   49544:	vcvt.f64.u32	d16, s0
   49548:	vstr	d16, [r1, #-8]
   4954c:	ldrb	r3, [r7, sl]!
   49550:	add	r7, r7, sl
   49554:	vmov	s0, r3
   49558:	vcvt.f64.u32	d16, s0
   4955c:	vstr	d16, [r1]
   49560:	add	r1, r1, #16
   49564:	bne	49534 <GetDataSlab+0x195b4>
   49568:	ldr	r1, [sp, #56]	; 0x38
   4956c:	ldr	r3, [sp, #52]	; 0x34
   49570:	add	r1, r1, r5
   49574:	cmp	r3, #0
   49578:	beq	49598 <GetDataSlab+0x19618>
   4957c:	ldr	r3, [sp, #68]	; 0x44
   49580:	add	r3, ip, r3, lsl #3
   49584:	add	r0, r3, r0, lsl #3
   49588:	ldrb	r3, [r7], sl
   4958c:	vmov	s0, r3
   49590:	vcvt.f64.u32	d16, s0
   49594:	vstr	d16, [r0]
   49598:	add	r0, r1, r2
   4959c:	ldr	r1, [sp, #64]	; 0x40
   495a0:	sub	r1, r1, r2
   495a4:	add	r5, r0, r1
   495a8:	ldr	r0, [fp, #24]
   495ac:	add	r8, r7, r1
   495b0:	cmp	r0, #2
   495b4:	blt	494c8 <GetDataSlab+0x19548>
   495b8:	ldr	ip, [sp, #48]	; 0x30
   495bc:	mov	r2, #0
   495c0:	b	495ec <GetDataSlab+0x1966c>
   495c4:	sub	r3, fp, #176	; 0xb0
   495c8:	ldr	r7, [lr, r2]
   495cc:	sub	r0, r0, r1
   495d0:	ldr	r3, [r3, r2]
   495d4:	mla	r0, r7, r3, r0
   495d8:	add	r5, r0, r5
   495dc:	add	r8, r8, r0
   495e0:	subs	ip, ip, #1
   495e4:	add	r2, r2, #4
   495e8:	beq	494c8 <GetDataSlab+0x19548>
   495ec:	ldr	r0, [r4, r2]
   495f0:	add	r0, r0, #1
   495f4:	str	r0, [r4, r2]
   495f8:	ldr	r1, [r6, r2]
   495fc:	sdiv	r3, r0, r1
   49600:	mls	r0, r3, r1, r0
   49604:	cmp	r0, #0
   49608:	bne	494b8 <GetDataSlab+0x19538>
   4960c:	mov	r0, #0
   49610:	str	r0, [r4, r2]
   49614:	ldr	r0, [sp, #84]	; 0x54
   49618:	ldr	r0, [r0, r2]
   4961c:	sdiv	r1, r5, r0
   49620:	mls	r1, r1, r0, r5
   49624:	cmp	r1, #0
   49628:	bne	495c4 <GetDataSlab+0x19644>
   4962c:	ldr	r0, [lr, r2]
   49630:	cmp	r0, #0
   49634:	beq	495e0 <GetDataSlab+0x19660>
   49638:	sub	r1, fp, #176	; 0xb0
   4963c:	ldr	r1, [r1, r2]
   49640:	mla	r5, r1, r0, r5
   49644:	mla	r8, r1, r0, r8
   49648:	b	495e0 <GetDataSlab+0x19660>
   4964c:	ldr	r0, [sp, #76]	; 0x4c
   49650:	ldr	r2, [fp, #12]
   49654:	sub	r3, fp, #96	; 0x60
   49658:	cmp	r0, #1
   4965c:	ldr	r0, [sp, #60]	; 0x3c
   49660:	blt	56c18 <GetDataSlab+0x26c98>
   49664:	mov	r7, r3
   49668:	ldr	r3, [sp, #72]	; 0x48
   4966c:	ldr	r5, [r2], #4
   49670:	lsl	sl, r6, #1
   49674:	lsl	lr, r6, #2
   49678:	str	r2, [sp, #92]	; 0x5c
   4967c:	mls	r0, r3, r6, r0
   49680:	str	r5, [sp, #60]	; 0x3c
   49684:	sub	r0, r0, r5
   49688:	str	r0, [sp, #56]	; 0x38
   4968c:	sub	r0, fp, #136	; 0x88
   49690:	orr	r4, r0, #4
   49694:	ldr	r0, [fp, #20]
   49698:	add	r0, r0, #4
   4969c:	str	r0, [sp, #84]	; 0x54
   496a0:	orr	r0, ip, #4
   496a4:	str	r0, [sp, #80]	; 0x50
   496a8:	ldr	r0, [fp, #24]
   496ac:	sub	r0, r0, #1
   496b0:	str	r0, [sp, #40]	; 0x28
   496b4:	orr	r0, r7, #4
   496b8:	str	r0, [sp, #36]	; 0x24
   496bc:	mla	r0, r3, r6, r5
   496c0:	str	r0, [sp, #48]	; 0x30
   496c4:	and	r0, r3, #1
   496c8:	str	r0, [sp, #44]	; 0x2c
   496cc:	sub	r8, r3, r0
   496d0:	lsl	r0, r3, #3
   496d4:	str	r0, [sp, #52]	; 0x34
   496d8:	ldr	r0, [sp, #88]	; 0x58
   496dc:	add	r5, r0, #8
   496e0:	mov	r0, #0
   496e4:	str	r0, [sp, #68]	; 0x44
   496e8:	b	49728 <GetDataSlab+0x197a8>
   496ec:	ldr	r0, [sp, #36]	; 0x24
   496f0:	ldr	r0, [r0, r2]
   496f4:	add	r9, r9, r0, lsl #1
   496f8:	add	r1, r0, r1
   496fc:	ldr	r0, [sp, #52]	; 0x34
   49700:	ldr	r5, [sp, #64]	; 0x40
   49704:	ldr	r3, [sp, #72]	; 0x48
   49708:	ldr	r7, [sp, #68]	; 0x44
   4970c:	mov	r2, #0
   49710:	add	r5, r5, r0
   49714:	ldr	r0, [sp, #76]	; 0x4c
   49718:	add	r7, r7, r3
   4971c:	str	r7, [sp, #68]	; 0x44
   49720:	cmp	r7, r0
   49724:	bge	56c1c <GetDataSlab+0x26c9c>
   49728:	ldr	ip, [sp, #60]	; 0x3c
   4972c:	cmp	r3, #1
   49730:	str	r5, [sp, #64]	; 0x40
   49734:	add	r2, r9, ip, lsl #1
   49738:	blt	497b4 <GetDataSlab+0x19834>
   4973c:	mov	r3, #0
   49740:	beq	49780 <GetDataSlab+0x19800>
   49744:	mov	r3, #0
   49748:	ldrsh	r7, [r2]
   4974c:	add	r3, r3, #2
   49750:	cmp	r8, r3
   49754:	vmov	s0, r7
   49758:	add	r7, r2, sl
   4975c:	add	r2, r2, lr
   49760:	vcvt.f64.s32	d16, s0
   49764:	vstr	d16, [r5, #-8]
   49768:	ldrsh	r7, [r7]
   4976c:	vmov	s0, r7
   49770:	vcvt.f64.s32	d16, s0
   49774:	vstr	d16, [r5]
   49778:	add	r5, r5, #16
   4977c:	bne	49748 <GetDataSlab+0x197c8>
   49780:	ldr	r0, [sp, #44]	; 0x2c
   49784:	ldr	ip, [sp, #48]	; 0x30
   49788:	cmp	r0, #0
   4978c:	beq	497b4 <GetDataSlab+0x19834>
   49790:	ldr	r0, [sp, #88]	; 0x58
   49794:	ldr	r7, [sp, #68]	; 0x44
   49798:	add	r7, r0, r7, lsl #3
   4979c:	add	r3, r7, r3, lsl #3
   497a0:	ldrsh	r7, [r2], sl
   497a4:	vmov	s0, r7
   497a8:	vcvt.f64.s32	d16, s0
   497ac:	ldr	ip, [sp, #48]	; 0x30
   497b0:	vstr	d16, [r3]
   497b4:	ldr	r0, [sp, #56]	; 0x38
   497b8:	add	r1, ip, r1
   497bc:	add	r9, r2, r0, lsl #1
   497c0:	add	r1, r1, r0
   497c4:	ldr	r0, [fp, #24]
   497c8:	cmp	r0, #2
   497cc:	blt	496fc <GetDataSlab+0x1977c>
   497d0:	ldr	r3, [sp, #40]	; 0x28
   497d4:	mov	r2, #0
   497d8:	sub	ip, fp, #176	; 0xb0
   497dc:	b	49808 <GetDataSlab+0x19888>
   497e0:	ldr	r0, [sp, #92]	; 0x5c
   497e4:	ldr	r5, [ip, r2]
   497e8:	sub	r7, r6, r7
   497ec:	ldr	r0, [r0, r2]
   497f0:	mla	r0, r0, r5, r7
   497f4:	add	r1, r0, r1
   497f8:	add	r9, r9, r0, lsl #1
   497fc:	subs	r3, r3, #1
   49800:	add	r2, r2, #4
   49804:	beq	496fc <GetDataSlab+0x1977c>
   49808:	ldr	r7, [r4, r2]
   4980c:	ldr	r0, [sp, #84]	; 0x54
   49810:	add	r7, r7, #1
   49814:	str	r7, [r4, r2]
   49818:	ldr	r6, [r0, r2]
   4981c:	sdiv	r5, r7, r6
   49820:	mls	r7, r5, r6, r7
   49824:	cmp	r7, #0
   49828:	bne	496ec <GetDataSlab+0x1976c>
   4982c:	mov	r0, #0
   49830:	str	r0, [r4, r2]
   49834:	ldr	r0, [sp, #80]	; 0x50
   49838:	ldr	r6, [r0, r2]
   4983c:	sdiv	r7, r1, r6
   49840:	mls	r7, r7, r6, r1
   49844:	cmp	r7, #0
   49848:	bne	497e0 <GetDataSlab+0x19860>
   4984c:	ldr	r0, [sp, #92]	; 0x5c
   49850:	ldr	r7, [r0, r2]
   49854:	cmp	r7, #0
   49858:	beq	497fc <GetDataSlab+0x1987c>
   4985c:	ldr	r0, [ip, r2]
   49860:	mla	r1, r0, r7, r1
   49864:	mul	r0, r0, r7
   49868:	b	497f8 <GetDataSlab+0x19878>
   4986c:	ldr	r0, [sp, #76]	; 0x4c
   49870:	ldr	r2, [fp, #12]
   49874:	sub	r3, fp, #96	; 0x60
   49878:	cmp	r0, #1
   4987c:	ldr	r0, [sp, #60]	; 0x3c
   49880:	blt	56c18 <GetDataSlab+0x26c98>
   49884:	mov	r7, r3
   49888:	ldr	r3, [sp, #72]	; 0x48
   4988c:	ldr	r5, [r2], #4
   49890:	lsl	sl, r6, #1
   49894:	lsl	lr, r6, #2
   49898:	str	r2, [sp, #92]	; 0x5c
   4989c:	mls	r0, r3, r6, r0
   498a0:	str	r5, [sp, #60]	; 0x3c
   498a4:	sub	r0, r0, r5
   498a8:	str	r0, [sp, #56]	; 0x38
   498ac:	sub	r0, fp, #136	; 0x88
   498b0:	orr	r4, r0, #4
   498b4:	ldr	r0, [fp, #20]
   498b8:	add	r0, r0, #4
   498bc:	str	r0, [sp, #84]	; 0x54
   498c0:	orr	r0, ip, #4
   498c4:	str	r0, [sp, #80]	; 0x50
   498c8:	ldr	r0, [fp, #24]
   498cc:	sub	r0, r0, #1
   498d0:	str	r0, [sp, #40]	; 0x28
   498d4:	orr	r0, r7, #4
   498d8:	str	r0, [sp, #36]	; 0x24
   498dc:	mla	r0, r3, r6, r5
   498e0:	str	r0, [sp, #48]	; 0x30
   498e4:	and	r0, r3, #1
   498e8:	str	r0, [sp, #44]	; 0x2c
   498ec:	sub	r8, r3, r0
   498f0:	lsl	r0, r3, #3
   498f4:	str	r0, [sp, #52]	; 0x34
   498f8:	ldr	r0, [sp, #88]	; 0x58
   498fc:	add	r5, r0, #8
   49900:	mov	r0, #0
   49904:	str	r0, [sp, #68]	; 0x44
   49908:	b	49948 <GetDataSlab+0x199c8>
   4990c:	ldr	r0, [sp, #36]	; 0x24
   49910:	ldr	r0, [r0, r2]
   49914:	add	r9, r9, r0, lsl #1
   49918:	add	r1, r0, r1
   4991c:	ldr	r0, [sp, #52]	; 0x34
   49920:	ldr	r5, [sp, #64]	; 0x40
   49924:	ldr	r3, [sp, #72]	; 0x48
   49928:	ldr	r7, [sp, #68]	; 0x44
   4992c:	mov	r2, #0
   49930:	add	r5, r5, r0
   49934:	ldr	r0, [sp, #76]	; 0x4c
   49938:	add	r7, r7, r3
   4993c:	str	r7, [sp, #68]	; 0x44
   49940:	cmp	r7, r0
   49944:	bge	56c1c <GetDataSlab+0x26c9c>
   49948:	ldr	ip, [sp, #60]	; 0x3c
   4994c:	cmp	r3, #1
   49950:	str	r5, [sp, #64]	; 0x40
   49954:	add	r2, r9, ip, lsl #1
   49958:	blt	499d4 <GetDataSlab+0x19a54>
   4995c:	mov	r3, #0
   49960:	beq	499a0 <GetDataSlab+0x19a20>
   49964:	mov	r3, #0
   49968:	ldrh	r7, [r2]
   4996c:	add	r3, r3, #2
   49970:	cmp	r8, r3
   49974:	vmov	s0, r7
   49978:	add	r7, r2, sl
   4997c:	add	r2, r2, lr
   49980:	vcvt.f64.u32	d16, s0
   49984:	vstr	d16, [r5, #-8]
   49988:	ldrh	r7, [r7]
   4998c:	vmov	s0, r7
   49990:	vcvt.f64.u32	d16, s0
   49994:	vstr	d16, [r5]
   49998:	add	r5, r5, #16
   4999c:	bne	49968 <GetDataSlab+0x199e8>
   499a0:	ldr	r0, [sp, #44]	; 0x2c
   499a4:	ldr	ip, [sp, #48]	; 0x30
   499a8:	cmp	r0, #0
   499ac:	beq	499d4 <GetDataSlab+0x19a54>
   499b0:	ldr	r0, [sp, #88]	; 0x58
   499b4:	ldr	r7, [sp, #68]	; 0x44
   499b8:	add	r7, r0, r7, lsl #3
   499bc:	add	r3, r7, r3, lsl #3
   499c0:	ldrh	r7, [r2], sl
   499c4:	vmov	s0, r7
   499c8:	vcvt.f64.u32	d16, s0
   499cc:	ldr	ip, [sp, #48]	; 0x30
   499d0:	vstr	d16, [r3]
   499d4:	ldr	r0, [sp, #56]	; 0x38
   499d8:	add	r1, ip, r1
   499dc:	add	r9, r2, r0, lsl #1
   499e0:	add	r1, r1, r0
   499e4:	ldr	r0, [fp, #24]
   499e8:	cmp	r0, #2
   499ec:	blt	4991c <GetDataSlab+0x1999c>
   499f0:	ldr	r3, [sp, #40]	; 0x28
   499f4:	mov	r2, #0
   499f8:	sub	ip, fp, #176	; 0xb0
   499fc:	b	49a28 <GetDataSlab+0x19aa8>
   49a00:	ldr	r0, [sp, #92]	; 0x5c
   49a04:	ldr	r5, [ip, r2]
   49a08:	sub	r7, r6, r7
   49a0c:	ldr	r0, [r0, r2]
   49a10:	mla	r0, r0, r5, r7
   49a14:	add	r1, r0, r1
   49a18:	add	r9, r9, r0, lsl #1
   49a1c:	subs	r3, r3, #1
   49a20:	add	r2, r2, #4
   49a24:	beq	4991c <GetDataSlab+0x1999c>
   49a28:	ldr	r7, [r4, r2]
   49a2c:	ldr	r0, [sp, #84]	; 0x54
   49a30:	add	r7, r7, #1
   49a34:	str	r7, [r4, r2]
   49a38:	ldr	r6, [r0, r2]
   49a3c:	sdiv	r5, r7, r6
   49a40:	mls	r7, r5, r6, r7
   49a44:	cmp	r7, #0
   49a48:	bne	4990c <GetDataSlab+0x1998c>
   49a4c:	mov	r0, #0
   49a50:	str	r0, [r4, r2]
   49a54:	ldr	r0, [sp, #80]	; 0x50
   49a58:	ldr	r6, [r0, r2]
   49a5c:	sdiv	r7, r1, r6
   49a60:	mls	r7, r7, r6, r1
   49a64:	cmp	r7, #0
   49a68:	bne	49a00 <GetDataSlab+0x19a80>
   49a6c:	ldr	r0, [sp, #92]	; 0x5c
   49a70:	ldr	r7, [r0, r2]
   49a74:	cmp	r7, #0
   49a78:	beq	49a1c <GetDataSlab+0x19a9c>
   49a7c:	ldr	r0, [ip, r2]
   49a80:	mla	r1, r0, r7, r1
   49a84:	mul	r0, r0, r7
   49a88:	b	49a18 <GetDataSlab+0x19a98>
   49a8c:	ldr	r0, [sp, #76]	; 0x4c
   49a90:	ldr	r1, [sp, #68]	; 0x44
   49a94:	cmp	r0, #1
   49a98:	ldr	r0, [fp, #20]
   49a9c:	blt	56c18 <GetDataSlab+0x26c98>
   49aa0:	ldr	r2, [sp, #52]	; 0x34
   49aa4:	add	sl, r0, #4
   49aa8:	mov	r0, r8
   49aac:	add	r0, r0, #8
   49ab0:	str	r0, [sp, #80]	; 0x50
   49ab4:	mov	r0, #0
   49ab8:	str	r0, [sp, #72]	; 0x48
   49abc:	mls	r1, r1, r5, r2
   49ac0:	str	r1, [sp, #64]	; 0x40
   49ac4:	sub	r1, fp, #136	; 0x88
   49ac8:	orr	r6, r1, #4
   49acc:	orr	r1, ip, #4
   49ad0:	lsl	ip, r5, #3
   49ad4:	str	r1, [sp, #84]	; 0x54
   49ad8:	ldr	r1, [fp, #12]
   49adc:	add	r8, r1, #4
   49ae0:	ldr	r1, [fp, #24]
   49ae4:	sub	r1, r1, #1
   49ae8:	str	r1, [sp, #44]	; 0x2c
   49aec:	sub	r1, fp, #96	; 0x60
   49af0:	orr	r1, r1, #4
   49af4:	str	r1, [sp, #40]	; 0x28
   49af8:	ldr	r1, [sp, #68]	; 0x44
   49afc:	mul	r2, r1, r5
   49b00:	str	r2, [sp, #52]	; 0x34
   49b04:	and	r2, r1, #1
   49b08:	sub	lr, r1, r2
   49b0c:	str	r2, [sp, #48]	; 0x30
   49b10:	lsl	r2, r1, #3
   49b14:	str	r2, [sp, #60]	; 0x3c
   49b18:	b	49b5c <GetDataSlab+0x19bdc>
   49b1c:	ldr	r0, [sp, #40]	; 0x28
   49b20:	ldr	r0, [r0, r2]
   49b24:	add	r4, r4, r0, lsl #2
   49b28:	add	r3, r0, r3
   49b2c:	ldr	r0, [sp, #60]	; 0x3c
   49b30:	ldr	r1, [sp, #80]	; 0x50
   49b34:	ldr	r5, [sp, #72]	; 0x48
   49b38:	mov	r2, #0
   49b3c:	add	r1, r1, r0
   49b40:	ldr	r0, [sp, #76]	; 0x4c
   49b44:	str	r1, [sp, #80]	; 0x50
   49b48:	ldr	r1, [sp, #68]	; 0x44
   49b4c:	add	r5, r5, r1
   49b50:	cmp	r5, r0
   49b54:	str	r5, [sp, #72]	; 0x48
   49b58:	bge	56c1c <GetDataSlab+0x26c9c>
   49b5c:	ldr	r0, [fp, #12]
   49b60:	cmp	r1, #1
   49b64:	ldr	r2, [r0]
   49b68:	add	r5, r4, r2, lsl #2
   49b6c:	blt	49bf4 <GetDataSlab+0x19c74>
   49b70:	ldr	r4, [sp, #56]	; 0x38
   49b74:	mov	r7, #0
   49b78:	cmp	r1, #1
   49b7c:	beq	49bb8 <GetDataSlab+0x19c38>
   49b80:	ldr	r0, [sp, #80]	; 0x50
   49b84:	mov	r7, #0
   49b88:	vldr	s0, [r5]
   49b8c:	add	r1, r5, r4, lsl #2
   49b90:	add	r7, r7, #2
   49b94:	add	r5, r5, ip
   49b98:	cmp	lr, r7
   49b9c:	vcvt.f64.s32	d16, s0
   49ba0:	vstr	d16, [r0, #-8]
   49ba4:	vldr	s0, [r1]
   49ba8:	vcvt.f64.s32	d16, s0
   49bac:	vstr	d16, [r0]
   49bb0:	add	r0, r0, #16
   49bb4:	bne	49b88 <GetDataSlab+0x19c08>
   49bb8:	ldr	r0, [sp, #52]	; 0x34
   49bbc:	ldr	r1, [sp, #48]	; 0x30
   49bc0:	add	r0, r0, r3
   49bc4:	cmp	r1, #0
   49bc8:	beq	49bec <GetDataSlab+0x19c6c>
   49bcc:	ldr	r1, [sp, #88]	; 0x58
   49bd0:	ldr	r3, [sp, #72]	; 0x48
   49bd4:	add	r1, r1, r3, lsl #3
   49bd8:	ldr	r3, [r5], r4, lsl #2
   49bdc:	add	r1, r1, r7, lsl #3
   49be0:	vmov	s0, r3
   49be4:	vcvt.f64.s32	d16, s0
   49be8:	vstr	d16, [r1]
   49bec:	add	r0, r0, r2
   49bf0:	b	49bf8 <GetDataSlab+0x19c78>
   49bf4:	add	r0, r2, r3
   49bf8:	ldr	r1, [sp, #64]	; 0x40
   49bfc:	sub	r1, r1, r2
   49c00:	add	r3, r0, r1
   49c04:	ldr	r0, [fp, #24]
   49c08:	add	r4, r5, r1, lsl #2
   49c0c:	cmp	r0, #2
   49c10:	blt	49b2c <GetDataSlab+0x19bac>
   49c14:	ldr	r5, [sp, #44]	; 0x2c
   49c18:	mov	r2, #0
   49c1c:	b	49c48 <GetDataSlab+0x19cc8>
   49c20:	sub	r1, fp, #176	; 0xb0
   49c24:	ldr	r7, [r8, r2]
   49c28:	sub	r0, r0, r9
   49c2c:	ldr	r1, [r1, r2]
   49c30:	mla	r0, r7, r1, r0
   49c34:	add	r3, r0, r3
   49c38:	add	r4, r4, r0, lsl #2
   49c3c:	subs	r5, r5, #1
   49c40:	add	r2, r2, #4
   49c44:	beq	49b2c <GetDataSlab+0x19bac>
   49c48:	ldr	r0, [r6, r2]
   49c4c:	add	r0, r0, #1
   49c50:	str	r0, [r6, r2]
   49c54:	ldr	r1, [sl, r2]
   49c58:	sdiv	r7, r0, r1
   49c5c:	mls	r0, r7, r1, r0
   49c60:	cmp	r0, #0
   49c64:	bne	49b1c <GetDataSlab+0x19b9c>
   49c68:	mov	r0, #0
   49c6c:	str	r0, [r6, r2]
   49c70:	ldr	r0, [sp, #84]	; 0x54
   49c74:	ldr	r0, [r0, r2]
   49c78:	sdiv	r1, r3, r0
   49c7c:	mls	r9, r1, r0, r3
   49c80:	cmp	r9, #0
   49c84:	bne	49c20 <GetDataSlab+0x19ca0>
   49c88:	ldr	r0, [r8, r2]
   49c8c:	cmp	r0, #0
   49c90:	beq	49c3c <GetDataSlab+0x19cbc>
   49c94:	sub	r1, fp, #176	; 0xb0
   49c98:	ldr	r1, [r1, r2]
   49c9c:	mla	r3, r1, r0, r3
   49ca0:	mul	r0, r1, r0
   49ca4:	b	49c38 <GetDataSlab+0x19cb8>
   49ca8:	ldr	r0, [sp, #76]	; 0x4c
   49cac:	ldr	r1, [sp, #68]	; 0x44
   49cb0:	cmp	r0, #1
   49cb4:	ldr	r0, [fp, #20]
   49cb8:	blt	56c18 <GetDataSlab+0x26c98>
   49cbc:	ldr	r2, [sp, #52]	; 0x34
   49cc0:	add	sl, r0, #4
   49cc4:	mov	r0, r8
   49cc8:	add	r0, r0, #8
   49ccc:	str	r0, [sp, #80]	; 0x50
   49cd0:	mov	r0, #0
   49cd4:	str	r0, [sp, #72]	; 0x48
   49cd8:	mls	r1, r1, r5, r2
   49cdc:	str	r1, [sp, #64]	; 0x40
   49ce0:	sub	r1, fp, #136	; 0x88
   49ce4:	orr	r6, r1, #4
   49ce8:	orr	r1, ip, #4
   49cec:	lsl	ip, r5, #3
   49cf0:	str	r1, [sp, #84]	; 0x54
   49cf4:	ldr	r1, [fp, #12]
   49cf8:	add	r8, r1, #4
   49cfc:	ldr	r1, [fp, #24]
   49d00:	sub	r1, r1, #1
   49d04:	str	r1, [sp, #44]	; 0x2c
   49d08:	sub	r1, fp, #96	; 0x60
   49d0c:	orr	r1, r1, #4
   49d10:	str	r1, [sp, #40]	; 0x28
   49d14:	ldr	r1, [sp, #68]	; 0x44
   49d18:	mul	r2, r1, r5
   49d1c:	str	r2, [sp, #52]	; 0x34
   49d20:	and	r2, r1, #1
   49d24:	sub	lr, r1, r2
   49d28:	str	r2, [sp, #48]	; 0x30
   49d2c:	lsl	r2, r1, #3
   49d30:	str	r2, [sp, #60]	; 0x3c
   49d34:	b	49d78 <GetDataSlab+0x19df8>
   49d38:	ldr	r0, [sp, #40]	; 0x28
   49d3c:	ldr	r0, [r0, r2]
   49d40:	add	r4, r4, r0, lsl #2
   49d44:	add	r3, r0, r3
   49d48:	ldr	r0, [sp, #60]	; 0x3c
   49d4c:	ldr	r1, [sp, #80]	; 0x50
   49d50:	ldr	r5, [sp, #72]	; 0x48
   49d54:	mov	r2, #0
   49d58:	add	r1, r1, r0
   49d5c:	ldr	r0, [sp, #76]	; 0x4c
   49d60:	str	r1, [sp, #80]	; 0x50
   49d64:	ldr	r1, [sp, #68]	; 0x44
   49d68:	add	r5, r5, r1
   49d6c:	cmp	r5, r0
   49d70:	str	r5, [sp, #72]	; 0x48
   49d74:	bge	56c1c <GetDataSlab+0x26c9c>
   49d78:	ldr	r0, [fp, #12]
   49d7c:	cmp	r1, #1
   49d80:	ldr	r2, [r0]
   49d84:	add	r5, r4, r2, lsl #2
   49d88:	blt	49e10 <GetDataSlab+0x19e90>
   49d8c:	ldr	r4, [sp, #56]	; 0x38
   49d90:	mov	r7, #0
   49d94:	cmp	r1, #1
   49d98:	beq	49dd4 <GetDataSlab+0x19e54>
   49d9c:	ldr	r0, [sp, #80]	; 0x50
   49da0:	mov	r7, #0
   49da4:	vldr	s0, [r5]
   49da8:	add	r1, r5, r4, lsl #2
   49dac:	add	r7, r7, #2
   49db0:	add	r5, r5, ip
   49db4:	cmp	lr, r7
   49db8:	vcvt.f64.u32	d16, s0
   49dbc:	vstr	d16, [r0, #-8]
   49dc0:	vldr	s0, [r1]
   49dc4:	vcvt.f64.u32	d16, s0
   49dc8:	vstr	d16, [r0]
   49dcc:	add	r0, r0, #16
   49dd0:	bne	49da4 <GetDataSlab+0x19e24>
   49dd4:	ldr	r0, [sp, #52]	; 0x34
   49dd8:	ldr	r1, [sp, #48]	; 0x30
   49ddc:	add	r0, r0, r3
   49de0:	cmp	r1, #0
   49de4:	beq	49e08 <GetDataSlab+0x19e88>
   49de8:	ldr	r1, [sp, #88]	; 0x58
   49dec:	ldr	r3, [sp, #72]	; 0x48
   49df0:	add	r1, r1, r3, lsl #3
   49df4:	ldr	r3, [r5], r4, lsl #2
   49df8:	add	r1, r1, r7, lsl #3
   49dfc:	vmov	s0, r3
   49e00:	vcvt.f64.u32	d16, s0
   49e04:	vstr	d16, [r1]
   49e08:	add	r0, r0, r2
   49e0c:	b	49e14 <GetDataSlab+0x19e94>
   49e10:	add	r0, r2, r3
   49e14:	ldr	r1, [sp, #64]	; 0x40
   49e18:	sub	r1, r1, r2
   49e1c:	add	r3, r0, r1
   49e20:	ldr	r0, [fp, #24]
   49e24:	add	r4, r5, r1, lsl #2
   49e28:	cmp	r0, #2
   49e2c:	blt	49d48 <GetDataSlab+0x19dc8>
   49e30:	ldr	r5, [sp, #44]	; 0x2c
   49e34:	mov	r2, #0
   49e38:	b	49e64 <GetDataSlab+0x19ee4>
   49e3c:	sub	r1, fp, #176	; 0xb0
   49e40:	ldr	r7, [r8, r2]
   49e44:	sub	r0, r0, r9
   49e48:	ldr	r1, [r1, r2]
   49e4c:	mla	r0, r7, r1, r0
   49e50:	add	r3, r0, r3
   49e54:	add	r4, r4, r0, lsl #2
   49e58:	subs	r5, r5, #1
   49e5c:	add	r2, r2, #4
   49e60:	beq	49d48 <GetDataSlab+0x19dc8>
   49e64:	ldr	r0, [r6, r2]
   49e68:	add	r0, r0, #1
   49e6c:	str	r0, [r6, r2]
   49e70:	ldr	r1, [sl, r2]
   49e74:	sdiv	r7, r0, r1
   49e78:	mls	r0, r7, r1, r0
   49e7c:	cmp	r0, #0
   49e80:	bne	49d38 <GetDataSlab+0x19db8>
   49e84:	mov	r0, #0
   49e88:	str	r0, [r6, r2]
   49e8c:	ldr	r0, [sp, #84]	; 0x54
   49e90:	ldr	r0, [r0, r2]
   49e94:	sdiv	r1, r3, r0
   49e98:	mls	r9, r1, r0, r3
   49e9c:	cmp	r9, #0
   49ea0:	bne	49e3c <GetDataSlab+0x19ebc>
   49ea4:	ldr	r0, [r8, r2]
   49ea8:	cmp	r0, #0
   49eac:	beq	49e58 <GetDataSlab+0x19ed8>
   49eb0:	sub	r1, fp, #176	; 0xb0
   49eb4:	ldr	r1, [r1, r2]
   49eb8:	mla	r3, r1, r0, r3
   49ebc:	mul	r0, r1, r0
   49ec0:	b	49e54 <GetDataSlab+0x19ed4>
   49ec4:	ldr	r0, [sp, #76]	; 0x4c
   49ec8:	ldr	lr, [sp, #64]	; 0x40
   49ecc:	cmp	r0, #1
   49ed0:	ldr	r0, [sp, #60]	; 0x3c
   49ed4:	blt	56c18 <GetDataSlab+0x26c98>
   49ed8:	ldr	r2, [sp, #92]	; 0x5c
   49edc:	ldr	r3, [sp, #40]	; 0x28
   49ee0:	ldr	r5, [r2], #4
   49ee4:	mls	r0, lr, r3, r0
   49ee8:	lsl	sl, r3, #2
   49eec:	lsl	r8, r3, #3
   49ef0:	str	r2, [sp, #92]	; 0x5c
   49ef4:	sub	r0, r0, r5
   49ef8:	str	r5, [sp, #60]	; 0x3c
   49efc:	str	r0, [sp, #56]	; 0x38
   49f00:	sub	r0, fp, #136	; 0x88
   49f04:	orr	r4, r0, #4
   49f08:	ldr	r0, [fp, #20]
   49f0c:	add	r0, r0, #4
   49f10:	str	r0, [sp, #84]	; 0x54
   49f14:	orr	r0, ip, #4
   49f18:	str	r0, [sp, #80]	; 0x50
   49f1c:	ldr	r0, [fp, #24]
   49f20:	sub	r0, r0, #1
   49f24:	str	r0, [sp, #36]	; 0x24
   49f28:	sub	r0, fp, #96	; 0x60
   49f2c:	orr	r0, r0, #4
   49f30:	str	r0, [sp, #32]
   49f34:	mla	r0, lr, r3, r5
   49f38:	str	r0, [sp, #48]	; 0x30
   49f3c:	and	r0, lr, #1
   49f40:	sub	ip, lr, r0
   49f44:	str	r0, [sp, #44]	; 0x2c
   49f48:	lsl	r0, lr, #3
   49f4c:	str	r0, [sp, #52]	; 0x34
   49f50:	ldr	r0, [sp, #88]	; 0x58
   49f54:	add	r0, r0, #8
   49f58:	str	r0, [sp, #72]	; 0x48
   49f5c:	mov	r0, #0
   49f60:	str	r0, [sp, #68]	; 0x44
   49f64:	b	49f98 <GetDataSlab+0x1a018>
   49f68:	ldr	lr, [sp, #64]	; 0x40
   49f6c:	ldr	r0, [sp, #52]	; 0x34
   49f70:	ldr	r2, [sp, #72]	; 0x48
   49f74:	ldr	r3, [sp, #68]	; 0x44
   49f78:	add	r2, r2, r0
   49f7c:	ldr	r0, [sp, #76]	; 0x4c
   49f80:	add	r3, r3, lr
   49f84:	str	r2, [sp, #72]	; 0x48
   49f88:	mov	r2, #0
   49f8c:	str	r3, [sp, #68]	; 0x44
   49f90:	cmp	r3, r0
   49f94:	bge	56c1c <GetDataSlab+0x26c9c>
   49f98:	ldr	r0, [sp, #60]	; 0x3c
   49f9c:	cmp	lr, #1
   49fa0:	add	r2, r9, r0, lsl #2
   49fa4:	blt	4a024 <GetDataSlab+0x1a0a4>
   49fa8:	mov	r3, #0
   49fac:	beq	49fe8 <GetDataSlab+0x1a068>
   49fb0:	ldr	r5, [sp, #72]	; 0x48
   49fb4:	mov	r3, #0
   49fb8:	vldr	s0, [r2]
   49fbc:	add	r0, r2, sl
   49fc0:	add	r3, r3, #2
   49fc4:	add	r2, r2, r8
   49fc8:	cmp	ip, r3
   49fcc:	vcvt.f64.f32	d16, s0
   49fd0:	vstr	d16, [r5, #-8]
   49fd4:	vldr	s0, [r0]
   49fd8:	vcvt.f64.f32	d16, s0
   49fdc:	vstr	d16, [r5]
   49fe0:	add	r5, r5, #16
   49fe4:	bne	49fb8 <GetDataSlab+0x1a038>
   49fe8:	ldr	r0, [sp, #44]	; 0x2c
   49fec:	ldr	lr, [sp, #48]	; 0x30
   49ff0:	cmp	r0, #0
   49ff4:	beq	4a028 <GetDataSlab+0x1a0a8>
   49ff8:	vldr	s0, [r2]
   49ffc:	ldr	r0, [sp, #88]	; 0x58
   4a000:	ldr	r7, [sp, #68]	; 0x44
   4a004:	ldr	lr, [sp, #48]	; 0x30
   4a008:	add	r0, r0, r7, lsl #3
   4a00c:	vcvt.f64.f32	d16, s0
   4a010:	add	r0, r0, r3, lsl #3
   4a014:	vstr	d16, [r0]
   4a018:	ldr	r0, [sp, #40]	; 0x28
   4a01c:	add	r2, r2, r0, lsl #2
   4a020:	b	4a028 <GetDataSlab+0x1a0a8>
   4a024:	mov	lr, r0
   4a028:	ldr	r3, [sp, #56]	; 0x38
   4a02c:	add	r0, lr, r1
   4a030:	add	r1, r0, r3
   4a034:	ldr	r0, [fp, #24]
   4a038:	add	r9, r2, r3, lsl #2
   4a03c:	cmp	r0, #2
   4a040:	blt	49f68 <GetDataSlab+0x19fe8>
   4a044:	ldr	r3, [sp, #36]	; 0x24
   4a048:	ldr	lr, [sp, #64]	; 0x40
   4a04c:	mov	r2, #0
   4a050:	b	4a080 <GetDataSlab+0x1a100>
   4a054:	sub	r7, fp, #176	; 0xb0
   4a058:	sub	r0, r0, r6
   4a05c:	ldr	r5, [r7, r2]
   4a060:	ldr	r7, [sp, #92]	; 0x5c
   4a064:	ldr	r7, [r7, r2]
   4a068:	mla	r0, r7, r5, r0
   4a06c:	add	r1, r0, r1
   4a070:	add	r9, r9, r0, lsl #2
   4a074:	subs	r3, r3, #1
   4a078:	add	r2, r2, #4
   4a07c:	beq	49f6c <GetDataSlab+0x19fec>
   4a080:	ldr	r0, [r4, r2]
   4a084:	ldr	r5, [sp, #84]	; 0x54
   4a088:	add	r0, r0, #1
   4a08c:	str	r0, [r4, r2]
   4a090:	ldr	r6, [r5, r2]
   4a094:	sdiv	r5, r0, r6
   4a098:	mls	r0, r5, r6, r0
   4a09c:	cmp	r0, #0
   4a0a0:	bne	4a0e8 <GetDataSlab+0x1a168>
   4a0a4:	mov	r0, #0
   4a0a8:	str	r0, [r4, r2]
   4a0ac:	ldr	r0, [sp, #80]	; 0x50
   4a0b0:	ldr	r0, [r0, r2]
   4a0b4:	sdiv	r6, r1, r0
   4a0b8:	mls	r6, r6, r0, r1
   4a0bc:	cmp	r6, #0
   4a0c0:	bne	4a054 <GetDataSlab+0x1a0d4>
   4a0c4:	ldr	r0, [sp, #92]	; 0x5c
   4a0c8:	ldr	r0, [r0, r2]
   4a0cc:	cmp	r0, #0
   4a0d0:	beq	4a074 <GetDataSlab+0x1a0f4>
   4a0d4:	sub	r7, fp, #176	; 0xb0
   4a0d8:	ldr	r7, [r7, r2]
   4a0dc:	mla	r1, r7, r0, r1
   4a0e0:	mul	r0, r7, r0
   4a0e4:	b	4a070 <GetDataSlab+0x1a0f0>
   4a0e8:	ldr	r0, [sp, #32]
   4a0ec:	ldr	r0, [r0, r2]
   4a0f0:	add	r9, r9, r0, lsl #2
   4a0f4:	add	r1, r0, r1
   4a0f8:	b	49f6c <GetDataSlab+0x19fec>
   4a0fc:	ldr	r0, [sp, #76]	; 0x4c
   4a100:	ldr	r2, [sp, #88]	; 0x58
   4a104:	ldr	r3, [fp, #12]
   4a108:	sub	r7, fp, #96	; 0x60
   4a10c:	cmp	r0, #1
   4a110:	ldr	r0, [sp, #40]	; 0x28
   4a114:	blt	56c18 <GetDataSlab+0x26c98>
   4a118:	ldr	r5, [sp, #44]	; 0x2c
   4a11c:	ldr	r6, [sp, #72]	; 0x48
   4a120:	mov	lr, r7
   4a124:	ldr	r7, [r3], #4
   4a128:	str	r3, [sp, #92]	; 0x5c
   4a12c:	mls	r0, r6, r5, r0
   4a130:	mov	r3, r6
   4a134:	lsl	sl, r5, #3
   4a138:	lsl	r8, r5, #4
   4a13c:	str	r7, [sp, #64]	; 0x40
   4a140:	sub	r0, r0, r7
   4a144:	str	r0, [sp, #60]	; 0x3c
   4a148:	sub	r0, fp, #136	; 0x88
   4a14c:	orr	r4, r0, #4
   4a150:	ldr	r0, [fp, #20]
   4a154:	add	r0, r0, #4
   4a158:	str	r0, [sp, #40]	; 0x28
   4a15c:	orr	r0, ip, #4
   4a160:	str	r0, [sp, #84]	; 0x54
   4a164:	ldr	r0, [fp, #24]
   4a168:	sub	r0, r0, #1
   4a16c:	str	r0, [sp, #36]	; 0x24
   4a170:	orr	r0, lr, #4
   4a174:	str	r0, [sp, #32]
   4a178:	mla	r0, r6, r5, r7
   4a17c:	str	r0, [sp, #52]	; 0x34
   4a180:	and	r0, r6, #1
   4a184:	sub	ip, r6, r0
   4a188:	str	r0, [sp, #48]	; 0x30
   4a18c:	lsl	r0, r6, #3
   4a190:	str	r0, [sp, #56]	; 0x38
   4a194:	add	r0, r2, #8
   4a198:	str	r0, [sp, #80]	; 0x50
   4a19c:	mov	r0, #0
   4a1a0:	str	r0, [sp, #68]	; 0x44
   4a1a4:	b	4a1e8 <GetDataSlab+0x1a268>
   4a1a8:	ldr	r0, [sp, #32]
   4a1ac:	ldr	r0, [r0, r2]
   4a1b0:	add	r9, r9, r0, lsl #3
   4a1b4:	add	r1, r0, r1
   4a1b8:	ldr	r0, [sp, #56]	; 0x38
   4a1bc:	ldr	r2, [sp, #80]	; 0x50
   4a1c0:	ldr	r3, [sp, #72]	; 0x48
   4a1c4:	ldr	r7, [sp, #68]	; 0x44
   4a1c8:	add	r2, r2, r0
   4a1cc:	ldr	r0, [sp, #76]	; 0x4c
   4a1d0:	add	r7, r7, r3
   4a1d4:	str	r2, [sp, #80]	; 0x50
   4a1d8:	mov	r2, #0
   4a1dc:	str	r7, [sp, #68]	; 0x44
   4a1e0:	cmp	r7, r0
   4a1e4:	bge	56c1c <GetDataSlab+0x26c9c>
   4a1e8:	ldr	lr, [sp, #64]	; 0x40
   4a1ec:	cmp	r3, #1
   4a1f0:	add	r2, r9, lr, lsl #3
   4a1f4:	blt	4a264 <GetDataSlab+0x1a2e4>
   4a1f8:	mov	r3, #0
   4a1fc:	beq	4a230 <GetDataSlab+0x1a2b0>
   4a200:	ldr	r5, [sp, #80]	; 0x50
   4a204:	mov	r3, #0
   4a208:	vldr	d16, [r2]
   4a20c:	add	r0, r2, sl
   4a210:	add	r3, r3, #2
   4a214:	add	r2, r2, r8
   4a218:	cmp	ip, r3
   4a21c:	vstr	d16, [r5, #-8]
   4a220:	vldr	d16, [r0]
   4a224:	vstr	d16, [r5]
   4a228:	add	r5, r5, #16
   4a22c:	bne	4a208 <GetDataSlab+0x1a288>
   4a230:	ldr	r0, [sp, #48]	; 0x30
   4a234:	ldr	lr, [sp, #52]	; 0x34
   4a238:	cmp	r0, #0
   4a23c:	beq	4a264 <GetDataSlab+0x1a2e4>
   4a240:	ldr	r0, [sp, #88]	; 0x58
   4a244:	ldr	r7, [sp, #68]	; 0x44
   4a248:	vldr	d16, [r2]
   4a24c:	ldr	lr, [sp, #52]	; 0x34
   4a250:	add	r0, r0, r7, lsl #3
   4a254:	add	r0, r0, r3, lsl #3
   4a258:	vstr	d16, [r0]
   4a25c:	ldr	r0, [sp, #44]	; 0x2c
   4a260:	add	r2, r2, r0, lsl #3
   4a264:	ldr	r3, [sp, #60]	; 0x3c
   4a268:	add	r0, lr, r1
   4a26c:	add	r1, r0, r3
   4a270:	ldr	r0, [fp, #24]
   4a274:	add	r9, r2, r3, lsl #3
   4a278:	cmp	r0, #2
   4a27c:	blt	4a1b8 <GetDataSlab+0x1a238>
   4a280:	ldr	r3, [sp, #36]	; 0x24
   4a284:	ldr	lr, [sp, #40]	; 0x28
   4a288:	mov	r2, #0
   4a28c:	b	4a2bc <GetDataSlab+0x1a33c>
   4a290:	sub	r7, fp, #176	; 0xb0
   4a294:	sub	r0, r0, r6
   4a298:	ldr	r5, [r7, r2]
   4a29c:	ldr	r7, [sp, #92]	; 0x5c
   4a2a0:	ldr	r7, [r7, r2]
   4a2a4:	mla	r0, r7, r5, r0
   4a2a8:	add	r1, r0, r1
   4a2ac:	add	r9, r9, r0, lsl #3
   4a2b0:	subs	r3, r3, #1
   4a2b4:	add	r2, r2, #4
   4a2b8:	beq	4a1b8 <GetDataSlab+0x1a238>
   4a2bc:	ldr	r0, [r4, r2]
   4a2c0:	add	r0, r0, #1
   4a2c4:	str	r0, [r4, r2]
   4a2c8:	ldr	r6, [lr, r2]
   4a2cc:	sdiv	r5, r0, r6
   4a2d0:	mls	r0, r5, r6, r0
   4a2d4:	cmp	r0, #0
   4a2d8:	bne	4a1a8 <GetDataSlab+0x1a228>
   4a2dc:	mov	r0, #0
   4a2e0:	str	r0, [r4, r2]
   4a2e4:	ldr	r0, [sp, #84]	; 0x54
   4a2e8:	ldr	r0, [r0, r2]
   4a2ec:	sdiv	r6, r1, r0
   4a2f0:	mls	r6, r6, r0, r1
   4a2f4:	cmp	r6, #0
   4a2f8:	bne	4a290 <GetDataSlab+0x1a310>
   4a2fc:	ldr	r0, [sp, #92]	; 0x5c
   4a300:	ldr	r0, [r0, r2]
   4a304:	cmp	r0, #0
   4a308:	beq	4a2b0 <GetDataSlab+0x1a330>
   4a30c:	sub	r7, fp, #176	; 0xb0
   4a310:	ldr	r7, [r7, r2]
   4a314:	mla	r1, r7, r0, r1
   4a318:	mul	r0, r7, r0
   4a31c:	b	4a2ac <GetDataSlab+0x1a32c>
   4a320:	ldr	r0, [sp, #60]	; 0x3c
   4a324:	ldr	r1, [sp, #88]	; 0x58
   4a328:	ldr	r2, [fp, #12]
   4a32c:	sub	r3, fp, #96	; 0x60
   4a330:	cmp	r0, #1
   4a334:	blt	4a578 <GetDataSlab+0x1a5f8>
   4a338:	ldr	r4, [sp, #20]
   4a33c:	ldr	lr, [sp, #52]	; 0x34
   4a340:	ldr	r0, [sp, #16]
   4a344:	mov	r9, r2
   4a348:	add	r1, r1, #8
   4a34c:	ldr	r2, [r9], #4
   4a350:	str	r9, [sp, #32]
   4a354:	mls	r0, lr, r4, r0
   4a358:	lsl	r8, r4, #4
   4a35c:	str	r2, [sp, #56]	; 0x38
   4a360:	sub	r0, r0, r2
   4a364:	str	r0, [sp, #48]	; 0x30
   4a368:	sub	r0, fp, #136	; 0x88
   4a36c:	orr	r5, r0, #4
   4a370:	ldr	r0, [fp, #20]
   4a374:	str	r5, [sp, #24]
   4a378:	add	r0, r0, #4
   4a37c:	str	r0, [sp, #84]	; 0x54
   4a380:	orr	r0, ip, #4
   4a384:	str	r0, [sp, #72]	; 0x48
   4a388:	ldr	r0, [fp, #24]
   4a38c:	sub	r0, r0, #1
   4a390:	str	r0, [sp, #16]
   4a394:	orr	r0, r3, #4
   4a398:	lsl	r3, lr, #3
   4a39c:	str	r0, [sp, #8]
   4a3a0:	mla	r0, lr, r4, r2
   4a3a4:	str	r3, [sp, #40]	; 0x28
   4a3a8:	lsl	r3, r4, #3
   4a3ac:	str	r3, [sp, #12]
   4a3b0:	mov	r3, #0
   4a3b4:	str	r3, [sp, #68]	; 0x44
   4a3b8:	str	r0, [sp, #36]	; 0x24
   4a3bc:	and	r0, lr, #1
   4a3c0:	str	r0, [sp, #28]
   4a3c4:	sub	r0, lr, r0
   4a3c8:	str	r0, [sp, #44]	; 0x2c
   4a3cc:	b	4a40c <GetDataSlab+0x1a48c>
   4a3d0:	ldr	r1, [sp, #8]
   4a3d4:	ldr	r0, [r1, r0]
   4a3d8:	add	sl, sl, r0, lsl #3
   4a3dc:	add	r7, r0, r7
   4a3e0:	ldr	r0, [sp, #40]	; 0x28
   4a3e4:	ldr	r1, [sp, #64]	; 0x40
   4a3e8:	ldr	r2, [sp, #68]	; 0x44
   4a3ec:	add	r1, r1, r0
   4a3f0:	ldr	r0, [sp, #60]	; 0x3c
   4a3f4:	add	r2, r2, lr
   4a3f8:	str	r2, [sp, #68]	; 0x44
   4a3fc:	cmp	r2, r0
   4a400:	ldr	r2, [sp, #56]	; 0x38
   4a404:	ldr	r0, [sp, #44]	; 0x2c
   4a408:	bge	4a578 <GetDataSlab+0x1a5f8>
   4a40c:	add	r6, sl, r2, lsl #3
   4a410:	cmp	lr, #1
   4a414:	str	r1, [sp, #64]	; 0x40
   4a418:	blt	4a4c8 <GetDataSlab+0x1a548>
   4a41c:	mov	r5, r8
   4a420:	mov	r4, #0
   4a424:	beq	4a46c <GetDataSlab+0x1a4ec>
   4a428:	ldr	r8, [sp, #12]
   4a42c:	mov	r4, #0
   4a430:	mov	r9, r1
   4a434:	mov	sl, r0
   4a438:	ldrd	r0, [r6]
   4a43c:	bl	6b664 <__aeabi_l2d>
   4a440:	strd	r0, [r9, #-8]
   4a444:	mov	r1, r6
   4a448:	ldr	r0, [r1, r8]!
   4a44c:	ldr	r1, [r1, #4]
   4a450:	bl	6b664 <__aeabi_l2d>
   4a454:	add	r4, r4, #2
   4a458:	strd	r0, [r9]
   4a45c:	add	r6, r6, r5
   4a460:	add	r9, r9, #16
   4a464:	cmp	sl, r4
   4a468:	bne	4a438 <GetDataSlab+0x1a4b8>
   4a46c:	ldr	r0, [sp, #28]
   4a470:	mov	r8, r5
   4a474:	ldr	lr, [sp, #52]	; 0x34
   4a478:	ldr	r9, [sp, #32]
   4a47c:	ldr	r5, [sp, #24]
   4a480:	sub	ip, fp, #176	; 0xb0
   4a484:	cmp	r0, #0
   4a488:	ldr	r0, [sp, #36]	; 0x24
   4a48c:	beq	4a4cc <GetDataSlab+0x1a54c>
   4a490:	ldr	r0, [sp, #88]	; 0x58
   4a494:	ldr	r1, [sp, #68]	; 0x44
   4a498:	add	r9, r0, r1, lsl #3
   4a49c:	ldrd	r0, [r6]
   4a4a0:	bl	6b664 <__aeabi_l2d>
   4a4a4:	str	r0, [r9, r4, lsl #3]!
   4a4a8:	sub	ip, fp, #176	; 0xb0
   4a4ac:	ldr	r0, [sp, #20]
   4a4b0:	ldr	lr, [sp, #52]	; 0x34
   4a4b4:	str	r1, [r9, #4]
   4a4b8:	ldr	r9, [sp, #32]
   4a4bc:	add	r6, r6, r0, lsl #3
   4a4c0:	ldr	r0, [sp, #36]	; 0x24
   4a4c4:	b	4a4cc <GetDataSlab+0x1a54c>
   4a4c8:	mov	r0, r2
   4a4cc:	ldr	r1, [sp, #48]	; 0x30
   4a4d0:	add	r0, r0, r7
   4a4d4:	add	r7, r0, r1
   4a4d8:	ldr	r0, [fp, #24]
   4a4dc:	add	sl, r6, r1, lsl #3
   4a4e0:	cmp	r0, #2
   4a4e4:	blt	4a3e0 <GetDataSlab+0x1a460>
   4a4e8:	ldr	r1, [sp, #16]
   4a4ec:	mov	r0, #0
   4a4f0:	b	4a518 <GetDataSlab+0x1a598>
   4a4f4:	ldr	r6, [ip, r0]
   4a4f8:	ldr	r4, [r9, r0]
   4a4fc:	sub	r2, r2, r3
   4a500:	mla	r2, r4, r6, r2
   4a504:	add	r7, r2, r7
   4a508:	add	sl, sl, r2, lsl #3
   4a50c:	subs	r1, r1, #1
   4a510:	add	r0, r0, #4
   4a514:	beq	4a3e0 <GetDataSlab+0x1a460>
   4a518:	ldr	r2, [r5, r0]
   4a51c:	ldr	r3, [sp, #84]	; 0x54
   4a520:	add	r2, r2, #1
   4a524:	str	r2, [r5, r0]
   4a528:	ldr	r3, [r3, r0]
   4a52c:	sdiv	r6, r2, r3
   4a530:	mls	r2, r6, r3, r2
   4a534:	cmp	r2, #0
   4a538:	bne	4a3d0 <GetDataSlab+0x1a450>
   4a53c:	mov	r2, #0
   4a540:	str	r2, [r5, r0]
   4a544:	ldr	r2, [sp, #72]	; 0x48
   4a548:	ldr	r2, [r2, r0]
   4a54c:	sdiv	r3, r7, r2
   4a550:	mls	r3, r3, r2, r7
   4a554:	cmp	r3, #0
   4a558:	bne	4a4f4 <GetDataSlab+0x1a574>
   4a55c:	ldr	r2, [r9, r0]
   4a560:	cmp	r2, #0
   4a564:	beq	4a50c <GetDataSlab+0x1a58c>
   4a568:	ldr	r3, [ip, r0]
   4a56c:	mla	r7, r3, r2, r7
   4a570:	mul	r2, r3, r2
   4a574:	b	4a508 <GetDataSlab+0x1a588>
   4a578:	mov	r2, #0
   4a57c:	ldr	r0, [sp, #76]	; 0x4c
   4a580:	cmp	r0, #13
   4a584:	bne	56c1c <GetDataSlab+0x26c9c>
   4a588:	ldr	r0, [fp, #16]
   4a58c:	ldr	r1, [fp, #8]
   4a590:	ldr	r9, [fp, #20]
   4a594:	mov	r8, #0
   4a598:	sub	r6, fp, #176	; 0xb0
   4a59c:	ldr	r0, [r0]
   4a5a0:	str	r0, [sp, #36]	; 0x24
   4a5a4:	sub	r0, r0, #1
   4a5a8:	str	r0, [fp, #-96]	; 0xffffffa0
   4a5ac:	ldr	r0, [r1]
   4a5b0:	str	r0, [fp, #-176]	; 0xffffff50
   4a5b4:	str	r0, [sp, #44]	; 0x2c
   4a5b8:	ldr	r0, [fp, #24]
   4a5bc:	ldr	r2, [r9]
   4a5c0:	sub	r9, fp, #96	; 0x60
   4a5c4:	cmp	r0, #2
   4a5c8:	str	r2, [sp, #64]	; 0x40
   4a5cc:	str	r2, [sp, #76]	; 0x4c
   4a5d0:	blt	4a71c <GetDataSlab+0x1a79c>
   4a5d4:	ldr	r5, [sp, #44]	; 0x2c
   4a5d8:	ldr	r2, [sp, #64]	; 0x40
   4a5dc:	sub	r0, r1, #4
   4a5e0:	sub	ip, r1, #12
   4a5e4:	mov	r4, #1
   4a5e8:	mov	lr, #0
   4a5ec:	mvn	r7, #15
   4a5f0:	mov	r8, #0
   4a5f4:	mov	sl, r5
   4a5f8:	str	r2, [sp, #76]	; 0x4c
   4a5fc:	b	4a650 <GetDataSlab+0x1a6d0>
   4a600:	ldr	r2, [fp, #12]
   4a604:	sub	r6, fp, #176	; 0xb0
   4a608:	sub	r9, fp, #96	; 0x60
   4a60c:	add	ip, ip, #4
   4a610:	str	r3, [r9, r4, lsl #2]
   4a614:	str	r5, [r6, r4, lsl #2]
   4a618:	ldr	r3, [sp, #76]	; 0x4c
   4a61c:	ldr	r2, [r2, r4, lsl #2]
   4a620:	mla	r8, r2, sl, r8
   4a624:	ldr	r2, [fp, #20]
   4a628:	mov	sl, r5
   4a62c:	mov	r5, r1
   4a630:	ldr	r1, [fp, #8]
   4a634:	ldr	r2, [r2, r4, lsl #2]
   4a638:	add	r4, r4, #1
   4a63c:	mul	r3, r2, r3
   4a640:	ldr	r2, [fp, #24]
   4a644:	str	r3, [sp, #76]	; 0x4c
   4a648:	cmp	r4, r2
   4a64c:	beq	4a71c <GetDataSlab+0x1a79c>
   4a650:	ldr	r2, [fp, #16]
   4a654:	add	lr, lr, #1
   4a658:	cmp	lr, #4
   4a65c:	ldr	r2, [r2, r4, lsl #2]
   4a660:	str	r5, [r6, r4, lsl #2]
   4a664:	sub	r3, r2, #1
   4a668:	str	r3, [r9, r4, lsl #2]
   4a66c:	ldr	r1, [r1, r4, lsl #2]
   4a670:	bcs	4a680 <GetDataSlab+0x1a700>
   4a674:	mov	r6, r1
   4a678:	mov	r2, r4
   4a67c:	b	4a704 <GetDataSlab+0x1a784>
   4a680:	vmov.i32	q9, #1	; 0x00000001
   4a684:	vmov.i32	q10, #1	; 0x00000001
   4a688:	vmov.32	d23[1], r1
   4a68c:	vmov.i32	q8, #1	; 0x00000001
   4a690:	bic	r9, lr, #3
   4a694:	bic	r6, r4, #3
   4a698:	sub	r2, r4, r9
   4a69c:	vmov.32	d18[0], r5
   4a6a0:	vmov.32	d20[0], r3
   4a6a4:	mov	r3, ip
   4a6a8:	vorr	d16, d18, d18
   4a6ac:	vmov.i32	q9, #1	; 0x00000001
   4a6b0:	vorr	d18, d20, d20
   4a6b4:	vld1.32	{d20-d21}, [r3], r7
   4a6b8:	subs	r6, r6, #4
   4a6bc:	vrev64.32	q12, q10
   4a6c0:	vext.8	q12, q12, q12, #8
   4a6c4:	vext.8	q11, q11, q12, #12
   4a6c8:	vmul.i32	q9, q9, q12
   4a6cc:	vmul.i32	q8, q11, q8
   4a6d0:	vorr	q11, q12, q12
   4a6d4:	bne	4a6b4 <GetDataSlab+0x1a734>
   4a6d8:	vext.8	q11, q9, q8, #8
   4a6dc:	vext.8	q12, q8, q8, #8
   4a6e0:	cmp	lr, r9
   4a6e4:	vmul.i32	q0, q9, q11
   4a6e8:	vmul.i32	q1, q8, q12
   4a6ec:	vmul.i32	q8, q0, d0[1]
   4a6f0:	vmul.i32	q9, q1, d2[1]
   4a6f4:	vmov.32	r3, d16[0]
   4a6f8:	vmov.32	r5, d18[0]
   4a6fc:	beq	4a600 <GetDataSlab+0x1a680>
   4a700:	vmov.32	r6, d20[0]
   4a704:	mul	r5, r6, r5
   4a708:	ldr	r6, [r0, r2, lsl #2]
   4a70c:	subs	r2, r2, #1
   4a710:	mul	r3, r3, r6
   4a714:	bne	4a704 <GetDataSlab+0x1a784>
   4a718:	b	4a600 <GetDataSlab+0x1a680>
   4a71c:	ldr	r0, [sp, #80]	; 0x50
   4a720:	add	r5, r0, r8, lsl #3
   4a724:	ldr	r0, [sp, #36]	; 0x24
   4a728:	cmp	r0, #1
   4a72c:	bne	559c0 <GetDataSlab+0x25a40>
   4a730:	ldr	r0, [sp, #76]	; 0x4c
   4a734:	ldr	r9, [sp, #64]	; 0x40
   4a738:	ldr	sl, [sp, #44]	; 0x2c
   4a73c:	cmp	r0, #1
   4a740:	blt	56c18 <GetDataSlab+0x26c98>
   4a744:	sub	r0, r9, #2
   4a748:	mov	r1, #1
   4a74c:	str	r5, [sp, #72]	; 0x48
   4a750:	add	r1, r1, r0, lsr #1
   4a754:	lsr	r0, r0, #1
   4a758:	str	r0, [sp, #20]
   4a75c:	mov	r0, #0
   4a760:	and	r2, r1, #1
   4a764:	str	r0, [sp, #68]	; 0x44
   4a768:	sub	r1, r1, r2
   4a76c:	str	r2, [sp, #28]
   4a770:	str	r1, [sp, #12]
   4a774:	sub	r1, fp, #136	; 0x88
   4a778:	orr	r1, r1, #4
   4a77c:	str	r1, [sp, #40]	; 0x28
   4a780:	ldr	r1, [fp, #20]
   4a784:	add	r1, r1, #4
   4a788:	str	r1, [sp, #36]	; 0x24
   4a78c:	orr	r1, r6, #4
   4a790:	ldr	r6, [sp, #88]	; 0x58
   4a794:	str	r1, [sp, #84]	; 0x54
   4a798:	ldr	r1, [fp, #24]
   4a79c:	sub	r1, r1, #1
   4a7a0:	str	r1, [sp, #32]
   4a7a4:	sub	r1, fp, #96	; 0x60
   4a7a8:	orr	r1, r1, #4
   4a7ac:	str	r1, [sp, #16]
   4a7b0:	lsl	r1, r9, #3
   4a7b4:	str	r1, [sp, #60]	; 0x3c
   4a7b8:	bic	r1, r9, #1
   4a7bc:	str	r1, [sp, #24]
   4a7c0:	ldr	r1, [sp, #92]	; 0x5c
   4a7c4:	ldr	r2, [r1], #4
   4a7c8:	str	r1, [sp, #92]	; 0x5c
   4a7cc:	str	r2, [sp, #56]	; 0x38
   4a7d0:	b	4a80c <GetDataSlab+0x1a88c>
   4a7d4:	ldr	r1, [sp, #16]
   4a7d8:	ldr	r0, [r1, r0]
   4a7dc:	add	r4, r4, r0, lsl #3
   4a7e0:	add	r8, r0, r8
   4a7e4:	ldr	r0, [sp, #60]	; 0x3c
   4a7e8:	ldr	r1, [sp, #68]	; 0x44
   4a7ec:	mov	r2, #0
   4a7f0:	str	r4, [sp, #72]	; 0x48
   4a7f4:	add	r6, r6, r0
   4a7f8:	ldr	r0, [sp, #76]	; 0x4c
   4a7fc:	add	r1, r1, r9
   4a800:	str	r1, [sp, #68]	; 0x44
   4a804:	cmp	r1, r0
   4a808:	bge	56c1c <GetDataSlab+0x26c9c>
   4a80c:	cmp	r9, #1
   4a810:	str	r6, [sp, #80]	; 0x50
   4a814:	blt	4a974 <GetDataSlab+0x1a9f4>
   4a818:	ldr	r0, [sp, #72]	; 0x48
   4a81c:	ldr	r1, [sp, #56]	; 0x38
   4a820:	add	r7, r0, r1, lsl #3
   4a824:	mov	r0, #0
   4a828:	beq	4a944 <GetDataSlab+0x1a9c4>
   4a82c:	ldr	r0, [sp, #20]
   4a830:	mov	r4, #0
   4a834:	str	r8, [sp, #48]	; 0x30
   4a838:	str	r7, [sp, #52]	; 0x34
   4a83c:	cmp	r0, #0
   4a840:	beq	4a8d4 <GetDataSlab+0x1a954>
   4a844:	mov	r9, r6
   4a848:	ldr	r6, [sp, #12]
   4a84c:	mov	r5, r7
   4a850:	mov	sl, r9
   4a854:	mov	r8, #32
   4a858:	vld1.64	{d8-d9}, [r7], r8
   4a85c:	vmov.32	r0, d9[0]
   4a860:	vmov.32	r1, d9[1]
   4a864:	bl	6b650 <__aeabi_ul2d>
   4a868:	vmov.32	r2, d8[0]
   4a86c:	vmov.32	r3, d8[1]
   4a870:	vmov	d9, r0, r1
   4a874:	mov	r0, r2
   4a878:	mov	r1, r3
   4a87c:	bl	6b650 <__aeabi_ul2d>
   4a880:	vmov	d8, r0, r1
   4a884:	add	r0, r5, #16
   4a888:	vst1.64	{d8-d9}, [sl], r8
   4a88c:	vld1.64	{d8-d9}, [r0]
   4a890:	vmov.32	r0, d9[0]
   4a894:	vmov.32	r1, d9[1]
   4a898:	bl	6b650 <__aeabi_ul2d>
   4a89c:	vmov.32	r2, d8[0]
   4a8a0:	vmov.32	r3, d8[1]
   4a8a4:	vmov	d9, r0, r1
   4a8a8:	mov	r0, r2
   4a8ac:	mov	r1, r3
   4a8b0:	bl	6b650 <__aeabi_ul2d>
   4a8b4:	vmov	d8, r0, r1
   4a8b8:	add	r0, r9, #16
   4a8bc:	subs	r6, r6, #2
   4a8c0:	add	r4, r4, #4
   4a8c4:	mov	r9, sl
   4a8c8:	mov	r5, r7
   4a8cc:	vst1.64	{d8-d9}, [r0]
   4a8d0:	bne	4a854 <GetDataSlab+0x1a8d4>
   4a8d4:	ldr	r0, [sp, #28]
   4a8d8:	ldr	sl, [sp, #44]	; 0x2c
   4a8dc:	ldr	r7, [sp, #52]	; 0x34
   4a8e0:	cmp	r0, #0
   4a8e4:	beq	4a92c <GetDataSlab+0x1a9ac>
   4a8e8:	ldr	r0, [sp, #88]	; 0x58
   4a8ec:	ldr	r1, [sp, #68]	; 0x44
   4a8f0:	add	r5, r0, r1, lsl #3
   4a8f4:	add	r0, r7, r4, lsl #3
   4a8f8:	vld1.64	{d8-d9}, [r0]
   4a8fc:	vmov.32	r0, d9[0]
   4a900:	vmov.32	r1, d9[1]
   4a904:	bl	6b650 <__aeabi_ul2d>
   4a908:	vmov.32	r2, d8[0]
   4a90c:	vmov.32	r3, d8[1]
   4a910:	vmov	d9, r0, r1
   4a914:	mov	r0, r2
   4a918:	mov	r1, r3
   4a91c:	bl	6b650 <__aeabi_ul2d>
   4a920:	vmov	d8, r0, r1
   4a924:	add	r0, r5, r4, lsl #3
   4a928:	vst1.64	{d8-d9}, [r0]
   4a92c:	ldr	r9, [sp, #64]	; 0x40
   4a930:	ldr	r0, [sp, #24]
   4a934:	ldr	r6, [sp, #80]	; 0x50
   4a938:	ldr	r8, [sp, #48]	; 0x30
   4a93c:	cmp	r9, r0
   4a940:	beq	4a974 <GetDataSlab+0x1a9f4>
   4a944:	sub	r4, r9, r0
   4a948:	lsl	r5, r0, #3
   4a94c:	mov	r1, r7
   4a950:	ldr	r0, [r1, r5]!
   4a954:	ldr	r1, [r1, #4]
   4a958:	bl	6b650 <__aeabi_ul2d>
   4a95c:	mov	r2, r6
   4a960:	subs	r4, r4, #1
   4a964:	str	r0, [r2, r5]!
   4a968:	add	r5, r5, #8
   4a96c:	str	r1, [r2, #4]
   4a970:	bne	4a94c <GetDataSlab+0x1a9cc>
   4a974:	ldr	r4, [sp, #72]	; 0x48
   4a978:	ldr	r0, [fp, #24]
   4a97c:	add	r8, r8, sl
   4a980:	add	r4, r4, sl, lsl #3
   4a984:	cmp	r0, #2
   4a988:	blt	4a7e4 <GetDataSlab+0x1a864>
   4a98c:	sub	r5, fp, #176	; 0xb0
   4a990:	ldr	r1, [sp, #32]
   4a994:	ldr	lr, [sp, #36]	; 0x24
   4a998:	mov	r0, #0
   4a99c:	mov	ip, r5
   4a9a0:	ldr	r5, [sp, #40]	; 0x28
   4a9a4:	b	4a9d4 <GetDataSlab+0x1aa54>
   4a9a8:	ldr	r6, [sp, #92]	; 0x5c
   4a9ac:	ldr	r7, [ip, r0]
   4a9b0:	sub	r2, r2, r3
   4a9b4:	ldr	r6, [r6, r0]
   4a9b8:	mla	r2, r6, r7, r2
   4a9bc:	ldr	r6, [sp, #80]	; 0x50
   4a9c0:	add	r8, r2, r8
   4a9c4:	add	r4, r4, r2, lsl #3
   4a9c8:	subs	r1, r1, #1
   4a9cc:	add	r0, r0, #4
   4a9d0:	beq	4a7e4 <GetDataSlab+0x1a864>
   4a9d4:	ldr	r2, [r5, r0]
   4a9d8:	add	r2, r2, #1
   4a9dc:	str	r2, [r5, r0]
   4a9e0:	ldr	r3, [lr, r0]
   4a9e4:	sdiv	r7, r2, r3
   4a9e8:	mls	r2, r7, r3, r2
   4a9ec:	cmp	r2, #0
   4a9f0:	bne	4a7d4 <GetDataSlab+0x1a854>
   4a9f4:	mov	r2, #0
   4a9f8:	str	r2, [r5, r0]
   4a9fc:	ldr	r2, [sp, #84]	; 0x54
   4aa00:	ldr	r2, [r2, r0]
   4aa04:	sdiv	r3, r8, r2
   4aa08:	mls	r3, r3, r2, r8
   4aa0c:	cmp	r3, #0
   4aa10:	bne	4a9a8 <GetDataSlab+0x1aa28>
   4aa14:	ldr	r2, [sp, #92]	; 0x5c
   4aa18:	ldr	r2, [r2, r0]
   4aa1c:	cmp	r2, #0
   4aa20:	beq	4a9c8 <GetDataSlab+0x1aa48>
   4aa24:	ldr	r3, [ip, r0]
   4aa28:	mla	r8, r3, r2, r8
   4aa2c:	mul	r2, r3, r2
   4aa30:	b	4a9c4 <GetDataSlab+0x1aa44>
   4aa34:	ldr	r0, [sp, #76]	; 0x4c
   4aa38:	sub	r2, fp, #96	; 0x60
   4aa3c:	cmp	r0, #1
   4aa40:	ldr	r0, [fp, #12]
   4aa44:	blt	56c18 <GetDataSlab+0x26c98>
   4aa48:	ldr	lr, [sp, #60]	; 0x3c
   4aa4c:	ldr	r1, [sp, #40]	; 0x28
   4aa50:	add	r0, r0, #4
   4aa54:	mov	r6, #0
   4aa58:	str	r0, [sp, #84]	; 0x54
   4aa5c:	ldr	r0, [fp, #24]
   4aa60:	mls	r1, lr, sl, r1
   4aa64:	sub	r0, r0, #1
   4aa68:	str	r0, [sp, #40]	; 0x28
   4aa6c:	orr	r0, r2, #4
   4aa70:	str	r1, [sp, #68]	; 0x44
   4aa74:	mul	r1, lr, sl
   4aa78:	str	r0, [sp, #32]
   4aa7c:	and	r0, lr, #1
   4aa80:	str	r0, [sp, #44]	; 0x2c
   4aa84:	sub	r0, lr, r0
   4aa88:	str	r0, [sp, #36]	; 0x24
   4aa8c:	lsl	r0, lr, #2
   4aa90:	str	r1, [sp, #48]	; 0x30
   4aa94:	sub	r1, fp, #136	; 0x88
   4aa98:	str	r0, [sp, #64]	; 0x40
   4aa9c:	ldr	r0, [sp, #88]	; 0x58
   4aaa0:	orr	r4, r1, #4
   4aaa4:	ldr	r1, [fp, #20]
   4aaa8:	add	r1, r1, #4
   4aaac:	str	r1, [sp, #52]	; 0x34
   4aab0:	sub	r1, fp, #176	; 0xb0
   4aab4:	orr	r1, r1, #4
   4aab8:	str	r1, [sp, #56]	; 0x38
   4aabc:	add	r1, r0, #4
   4aac0:	b	4aafc <GetDataSlab+0x1ab7c>
   4aac4:	ldr	r0, [sp, #32]
   4aac8:	ldr	r0, [r0, r2]
   4aacc:	add	ip, ip, r0
   4aad0:	add	r3, r0, r3
   4aad4:	ldr	r0, [sp, #64]	; 0x40
   4aad8:	ldr	r1, [sp, #80]	; 0x50
   4aadc:	ldr	lr, [sp, #60]	; 0x3c
   4aae0:	ldr	r6, [sp, #72]	; 0x48
   4aae4:	mov	r2, #0
   4aae8:	add	r1, r1, r0
   4aaec:	ldr	r0, [sp, #76]	; 0x4c
   4aaf0:	add	r6, r6, lr
   4aaf4:	cmp	r6, r0
   4aaf8:	bge	56c1c <GetDataSlab+0x26c9c>
   4aafc:	ldr	r0, [fp, #12]
   4ab00:	cmp	lr, #1
   4ab04:	str	r1, [sp, #80]	; 0x50
   4ab08:	ldr	r9, [r0]
   4ab0c:	add	r5, ip, r9
   4ab10:	blt	4aba0 <GetDataSlab+0x1ac20>
   4ab14:	mov	r7, #0
   4ab18:	cmp	lr, #1
   4ab1c:	beq	4ab60 <GetDataSlab+0x1abe0>
   4ab20:	ldr	r2, [sp, #36]	; 0x24
   4ab24:	mov	r7, #0
   4ab28:	mov	r0, r1
   4ab2c:	ldrb	r1, [r5]
   4ab30:	add	r7, r7, #2
   4ab34:	cmp	r2, r7
   4ab38:	vmov	s0, r1
   4ab3c:	vcvt.f32.u32	s0, s0
   4ab40:	vstr	s0, [r0, #-4]
   4ab44:	ldrb	r1, [r5, sl]!
   4ab48:	add	r5, r5, sl
   4ab4c:	vmov	s0, r1
   4ab50:	vcvt.f32.u32	s0, s0
   4ab54:	vstr	s0, [r0]
   4ab58:	add	r0, r0, #8
   4ab5c:	bne	4ab2c <GetDataSlab+0x1abac>
   4ab60:	ldr	r0, [sp, #48]	; 0x30
   4ab64:	ldr	r1, [sp, #44]	; 0x2c
   4ab68:	ldr	lr, [sp, #56]	; 0x38
   4ab6c:	ldr	r8, [sp, #52]	; 0x34
   4ab70:	add	r0, r0, r3
   4ab74:	cmp	r1, #0
   4ab78:	beq	4ab98 <GetDataSlab+0x1ac18>
   4ab7c:	ldrb	r3, [r5], sl
   4ab80:	ldr	r1, [sp, #88]	; 0x58
   4ab84:	vmov	s0, r3
   4ab88:	add	r1, r1, r6, lsl #2
   4ab8c:	add	r1, r1, r7, lsl #2
   4ab90:	vcvt.f32.u32	s0, s0
   4ab94:	vstr	s0, [r1]
   4ab98:	add	r0, r0, r9
   4ab9c:	b	4abac <GetDataSlab+0x1ac2c>
   4aba0:	ldr	lr, [sp, #56]	; 0x38
   4aba4:	ldr	r8, [sp, #52]	; 0x34
   4aba8:	add	r0, r9, r3
   4abac:	ldr	r1, [sp, #68]	; 0x44
   4abb0:	str	r6, [sp, #72]	; 0x48
   4abb4:	sub	r1, r1, r9
   4abb8:	add	r3, r0, r1
   4abbc:	ldr	r0, [fp, #24]
   4abc0:	add	ip, r5, r1
   4abc4:	cmp	r0, #2
   4abc8:	blt	4aad4 <GetDataSlab+0x1ab54>
   4abcc:	ldr	r9, [sp, #40]	; 0x28
   4abd0:	mov	r2, #0
   4abd4:	b	4ac04 <GetDataSlab+0x1ac84>
   4abd8:	ldr	r5, [sp, #84]	; 0x54
   4abdc:	sub	r1, fp, #176	; 0xb0
   4abe0:	sub	r0, r0, r7
   4abe4:	ldr	r1, [r1, r2]
   4abe8:	ldr	r5, [r5, r2]
   4abec:	mla	r0, r5, r1, r0
   4abf0:	add	r3, r0, r3
   4abf4:	add	ip, ip, r0
   4abf8:	subs	r9, r9, #1
   4abfc:	add	r2, r2, #4
   4ac00:	beq	4aad4 <GetDataSlab+0x1ab54>
   4ac04:	ldr	r0, [r4, r2]
   4ac08:	add	r0, r0, #1
   4ac0c:	str	r0, [r4, r2]
   4ac10:	ldr	r1, [r8, r2]
   4ac14:	sdiv	r5, r0, r1
   4ac18:	mls	r0, r5, r1, r0
   4ac1c:	cmp	r0, #0
   4ac20:	bne	4aac4 <GetDataSlab+0x1ab44>
   4ac24:	mov	r0, #0
   4ac28:	str	r0, [r4, r2]
   4ac2c:	ldr	r0, [lr, r2]
   4ac30:	sdiv	r1, r3, r0
   4ac34:	mls	r7, r1, r0, r3
   4ac38:	cmp	r7, #0
   4ac3c:	bne	4abd8 <GetDataSlab+0x1ac58>
   4ac40:	ldr	r0, [sp, #84]	; 0x54
   4ac44:	ldr	r0, [r0, r2]
   4ac48:	cmp	r0, #0
   4ac4c:	beq	4abf8 <GetDataSlab+0x1ac78>
   4ac50:	sub	r1, fp, #176	; 0xb0
   4ac54:	ldr	r1, [r1, r2]
   4ac58:	mla	r3, r1, r0, r3
   4ac5c:	mla	ip, r1, r0, ip
   4ac60:	b	4abf8 <GetDataSlab+0x1ac78>
   4ac64:	ldr	r0, [sp, #76]	; 0x4c
   4ac68:	ldr	r2, [fp, #12]
   4ac6c:	ldr	r3, [sp, #64]	; 0x40
   4ac70:	cmp	r0, #1
   4ac74:	blt	56c18 <GetDataSlab+0x26c98>
   4ac78:	ldr	r0, [sp, #48]	; 0x30
   4ac7c:	ldr	r5, [r2], #4
   4ac80:	lsl	lr, r7, #2
   4ac84:	str	r2, [sp, #92]	; 0x5c
   4ac88:	mov	r2, #0
   4ac8c:	str	r2, [sp, #68]	; 0x44
   4ac90:	mls	r0, r3, r7, r0
   4ac94:	str	r5, [sp, #60]	; 0x3c
   4ac98:	sub	r0, r0, r5
   4ac9c:	str	r0, [sp, #56]	; 0x38
   4aca0:	sub	r0, fp, #136	; 0x88
   4aca4:	orr	r4, r0, #4
   4aca8:	ldr	r0, [fp, #20]
   4acac:	add	r0, r0, #4
   4acb0:	str	r0, [sp, #84]	; 0x54
   4acb4:	orr	r0, ip, #4
   4acb8:	lsl	ip, r7, #1
   4acbc:	str	r0, [sp, #80]	; 0x50
   4acc0:	ldr	r0, [fp, #24]
   4acc4:	sub	r0, r0, #1
   4acc8:	str	r0, [sp, #40]	; 0x28
   4accc:	orr	r0, r6, #4
   4acd0:	str	r0, [sp, #36]	; 0x24
   4acd4:	mla	r0, r3, r7, r5
   4acd8:	str	r0, [sp, #48]	; 0x30
   4acdc:	and	r0, r3, #1
   4ace0:	str	r0, [sp, #44]	; 0x2c
   4ace4:	sub	r8, r3, r0
   4ace8:	lsl	r0, r3, #2
   4acec:	str	r0, [sp, #52]	; 0x34
   4acf0:	ldr	r0, [sp, #88]	; 0x58
   4acf4:	add	r0, r0, #4
   4acf8:	str	r0, [sp, #72]	; 0x48
   4acfc:	mov	r0, r3
   4ad00:	b	4ad44 <GetDataSlab+0x1adc4>
   4ad04:	ldr	r0, [sp, #36]	; 0x24
   4ad08:	ldr	r0, [r0, r2]
   4ad0c:	add	r9, r9, r0, lsl #1
   4ad10:	add	r1, r0, r1
   4ad14:	ldr	r0, [sp, #52]	; 0x34
   4ad18:	ldr	r2, [sp, #72]	; 0x48
   4ad1c:	ldr	r5, [sp, #68]	; 0x44
   4ad20:	ldr	r3, [sp, #76]	; 0x4c
   4ad24:	add	r2, r2, r0
   4ad28:	ldr	r0, [sp, #64]	; 0x40
   4ad2c:	str	r2, [sp, #72]	; 0x48
   4ad30:	mov	r2, #0
   4ad34:	add	r5, r5, r0
   4ad38:	cmp	r5, r3
   4ad3c:	str	r5, [sp, #68]	; 0x44
   4ad40:	bge	56c1c <GetDataSlab+0x26c9c>
   4ad44:	ldr	r6, [sp, #60]	; 0x3c
   4ad48:	cmp	r0, #1
   4ad4c:	add	r2, r9, r6, lsl #1
   4ad50:	blt	4add0 <GetDataSlab+0x1ae50>
   4ad54:	mov	r3, #0
   4ad58:	beq	4ad9c <GetDataSlab+0x1ae1c>
   4ad5c:	ldr	r5, [sp, #72]	; 0x48
   4ad60:	mov	r3, #0
   4ad64:	ldrsh	r6, [r2]
   4ad68:	add	r3, r3, #2
   4ad6c:	cmp	r8, r3
   4ad70:	vmov	s0, r6
   4ad74:	add	r6, r2, ip
   4ad78:	add	r2, r2, lr
   4ad7c:	vcvt.f32.s32	s0, s0
   4ad80:	vstr	s0, [r5, #-4]
   4ad84:	ldrsh	r6, [r6]
   4ad88:	vmov	s0, r6
   4ad8c:	vcvt.f32.s32	s0, s0
   4ad90:	vstr	s0, [r5]
   4ad94:	add	r5, r5, #8
   4ad98:	bne	4ad64 <GetDataSlab+0x1ade4>
   4ad9c:	ldr	r0, [sp, #44]	; 0x2c
   4ada0:	ldr	r6, [sp, #48]	; 0x30
   4ada4:	cmp	r0, #0
   4ada8:	beq	4add0 <GetDataSlab+0x1ae50>
   4adac:	ldr	r0, [sp, #88]	; 0x58
   4adb0:	ldr	r5, [sp, #68]	; 0x44
   4adb4:	add	r5, r0, r5, lsl #2
   4adb8:	add	r3, r5, r3, lsl #2
   4adbc:	ldrsh	r5, [r2], ip
   4adc0:	vmov	s0, r5
   4adc4:	vcvt.f32.s32	s0, s0
   4adc8:	ldr	r6, [sp, #48]	; 0x30
   4adcc:	vstr	s0, [r3]
   4add0:	ldr	r0, [sp, #56]	; 0x38
   4add4:	add	r1, r6, r1
   4add8:	add	r9, r2, r0, lsl #1
   4addc:	add	r1, r1, r0
   4ade0:	ldr	r0, [fp, #24]
   4ade4:	cmp	r0, #2
   4ade8:	blt	4ad14 <GetDataSlab+0x1ad94>
   4adec:	ldr	r3, [sp, #40]	; 0x28
   4adf0:	mov	r2, #0
   4adf4:	b	4ae24 <GetDataSlab+0x1aea4>
   4adf8:	ldr	r5, [sp, #92]	; 0x5c
   4adfc:	sub	r0, fp, #176	; 0xb0
   4ae00:	sub	r6, r6, sl
   4ae04:	ldr	r0, [r0, r2]
   4ae08:	ldr	r7, [r5, r2]
   4ae0c:	mla	r0, r7, r0, r6
   4ae10:	add	r1, r0, r1
   4ae14:	add	r9, r9, r0, lsl #1
   4ae18:	subs	r3, r3, #1
   4ae1c:	add	r2, r2, #4
   4ae20:	beq	4ad14 <GetDataSlab+0x1ad94>
   4ae24:	ldr	r6, [r4, r2]
   4ae28:	ldr	r0, [sp, #84]	; 0x54
   4ae2c:	add	r6, r6, #1
   4ae30:	str	r6, [r4, r2]
   4ae34:	ldr	r7, [r0, r2]
   4ae38:	sdiv	r0, r6, r7
   4ae3c:	mls	r0, r0, r7, r6
   4ae40:	cmp	r0, #0
   4ae44:	bne	4ad04 <GetDataSlab+0x1ad84>
   4ae48:	mov	r0, #0
   4ae4c:	str	r0, [r4, r2]
   4ae50:	ldr	r0, [sp, #80]	; 0x50
   4ae54:	ldr	r6, [r0, r2]
   4ae58:	sdiv	r0, r1, r6
   4ae5c:	mls	sl, r0, r6, r1
   4ae60:	cmp	sl, #0
   4ae64:	bne	4adf8 <GetDataSlab+0x1ae78>
   4ae68:	ldr	r0, [sp, #92]	; 0x5c
   4ae6c:	ldr	r6, [r0, r2]
   4ae70:	cmp	r6, #0
   4ae74:	beq	4ae18 <GetDataSlab+0x1ae98>
   4ae78:	sub	r0, fp, #176	; 0xb0
   4ae7c:	ldr	r0, [r0, r2]
   4ae80:	mla	r1, r0, r6, r1
   4ae84:	mul	r0, r0, r6
   4ae88:	b	4ae14 <GetDataSlab+0x1ae94>
   4ae8c:	ldr	r0, [sp, #76]	; 0x4c
   4ae90:	ldr	r2, [fp, #12]
   4ae94:	ldr	r3, [sp, #64]	; 0x40
   4ae98:	cmp	r0, #1
   4ae9c:	blt	56c18 <GetDataSlab+0x26c98>
   4aea0:	ldr	r0, [sp, #48]	; 0x30
   4aea4:	ldr	r5, [r2], #4
   4aea8:	lsl	lr, r7, #2
   4aeac:	str	r2, [sp, #92]	; 0x5c
   4aeb0:	mov	r2, #0
   4aeb4:	str	r2, [sp, #68]	; 0x44
   4aeb8:	mls	r0, r3, r7, r0
   4aebc:	str	r5, [sp, #60]	; 0x3c
   4aec0:	sub	r0, r0, r5
   4aec4:	str	r0, [sp, #56]	; 0x38
   4aec8:	sub	r0, fp, #136	; 0x88
   4aecc:	orr	r4, r0, #4
   4aed0:	ldr	r0, [fp, #20]
   4aed4:	add	r0, r0, #4
   4aed8:	str	r0, [sp, #84]	; 0x54
   4aedc:	orr	r0, ip, #4
   4aee0:	lsl	ip, r7, #1
   4aee4:	str	r0, [sp, #80]	; 0x50
   4aee8:	ldr	r0, [fp, #24]
   4aeec:	sub	r0, r0, #1
   4aef0:	str	r0, [sp, #40]	; 0x28
   4aef4:	orr	r0, r6, #4
   4aef8:	str	r0, [sp, #36]	; 0x24
   4aefc:	mla	r0, r3, r7, r5
   4af00:	str	r0, [sp, #48]	; 0x30
   4af04:	and	r0, r3, #1
   4af08:	str	r0, [sp, #44]	; 0x2c
   4af0c:	sub	r8, r3, r0
   4af10:	lsl	r0, r3, #2
   4af14:	str	r0, [sp, #52]	; 0x34
   4af18:	ldr	r0, [sp, #88]	; 0x58
   4af1c:	add	r0, r0, #4
   4af20:	str	r0, [sp, #72]	; 0x48
   4af24:	mov	r0, r3
   4af28:	b	4af6c <GetDataSlab+0x1afec>
   4af2c:	ldr	r0, [sp, #36]	; 0x24
   4af30:	ldr	r0, [r0, r2]
   4af34:	add	r9, r9, r0, lsl #1
   4af38:	add	r1, r0, r1
   4af3c:	ldr	r0, [sp, #52]	; 0x34
   4af40:	ldr	r2, [sp, #72]	; 0x48
   4af44:	ldr	r5, [sp, #68]	; 0x44
   4af48:	ldr	r3, [sp, #76]	; 0x4c
   4af4c:	add	r2, r2, r0
   4af50:	ldr	r0, [sp, #64]	; 0x40
   4af54:	str	r2, [sp, #72]	; 0x48
   4af58:	mov	r2, #0
   4af5c:	add	r5, r5, r0
   4af60:	cmp	r5, r3
   4af64:	str	r5, [sp, #68]	; 0x44
   4af68:	bge	56c1c <GetDataSlab+0x26c9c>
   4af6c:	ldr	r6, [sp, #60]	; 0x3c
   4af70:	cmp	r0, #1
   4af74:	add	r2, r9, r6, lsl #1
   4af78:	blt	4aff8 <GetDataSlab+0x1b078>
   4af7c:	mov	r3, #0
   4af80:	beq	4afc4 <GetDataSlab+0x1b044>
   4af84:	ldr	r5, [sp, #72]	; 0x48
   4af88:	mov	r3, #0
   4af8c:	ldrh	r6, [r2]
   4af90:	add	r3, r3, #2
   4af94:	cmp	r8, r3
   4af98:	vmov	s0, r6
   4af9c:	add	r6, r2, ip
   4afa0:	add	r2, r2, lr
   4afa4:	vcvt.f32.u32	s0, s0
   4afa8:	vstr	s0, [r5, #-4]
   4afac:	ldrh	r6, [r6]
   4afb0:	vmov	s0, r6
   4afb4:	vcvt.f32.u32	s0, s0
   4afb8:	vstr	s0, [r5]
   4afbc:	add	r5, r5, #8
   4afc0:	bne	4af8c <GetDataSlab+0x1b00c>
   4afc4:	ldr	r0, [sp, #44]	; 0x2c
   4afc8:	ldr	r6, [sp, #48]	; 0x30
   4afcc:	cmp	r0, #0
   4afd0:	beq	4aff8 <GetDataSlab+0x1b078>
   4afd4:	ldr	r0, [sp, #88]	; 0x58
   4afd8:	ldr	r5, [sp, #68]	; 0x44
   4afdc:	add	r5, r0, r5, lsl #2
   4afe0:	add	r3, r5, r3, lsl #2
   4afe4:	ldrh	r5, [r2], ip
   4afe8:	vmov	s0, r5
   4afec:	vcvt.f32.u32	s0, s0
   4aff0:	ldr	r6, [sp, #48]	; 0x30
   4aff4:	vstr	s0, [r3]
   4aff8:	ldr	r0, [sp, #56]	; 0x38
   4affc:	add	r1, r6, r1
   4b000:	add	r9, r2, r0, lsl #1
   4b004:	add	r1, r1, r0
   4b008:	ldr	r0, [fp, #24]
   4b00c:	cmp	r0, #2
   4b010:	blt	4af3c <GetDataSlab+0x1afbc>
   4b014:	ldr	r3, [sp, #40]	; 0x28
   4b018:	mov	r2, #0
   4b01c:	b	4b04c <GetDataSlab+0x1b0cc>
   4b020:	ldr	r5, [sp, #92]	; 0x5c
   4b024:	sub	r0, fp, #176	; 0xb0
   4b028:	sub	r6, r6, sl
   4b02c:	ldr	r0, [r0, r2]
   4b030:	ldr	r7, [r5, r2]
   4b034:	mla	r0, r7, r0, r6
   4b038:	add	r1, r0, r1
   4b03c:	add	r9, r9, r0, lsl #1
   4b040:	subs	r3, r3, #1
   4b044:	add	r2, r2, #4
   4b048:	beq	4af3c <GetDataSlab+0x1afbc>
   4b04c:	ldr	r6, [r4, r2]
   4b050:	ldr	r0, [sp, #84]	; 0x54
   4b054:	add	r6, r6, #1
   4b058:	str	r6, [r4, r2]
   4b05c:	ldr	r7, [r0, r2]
   4b060:	sdiv	r0, r6, r7
   4b064:	mls	r0, r0, r7, r6
   4b068:	cmp	r0, #0
   4b06c:	bne	4af2c <GetDataSlab+0x1afac>
   4b070:	mov	r0, #0
   4b074:	str	r0, [r4, r2]
   4b078:	ldr	r0, [sp, #80]	; 0x50
   4b07c:	ldr	r6, [r0, r2]
   4b080:	sdiv	r0, r1, r6
   4b084:	mls	sl, r0, r6, r1
   4b088:	cmp	sl, #0
   4b08c:	bne	4b020 <GetDataSlab+0x1b0a0>
   4b090:	ldr	r0, [sp, #92]	; 0x5c
   4b094:	ldr	r6, [r0, r2]
   4b098:	cmp	r6, #0
   4b09c:	beq	4b040 <GetDataSlab+0x1b0c0>
   4b0a0:	sub	r0, fp, #176	; 0xb0
   4b0a4:	ldr	r0, [r0, r2]
   4b0a8:	mla	r1, r0, r6, r1
   4b0ac:	mul	r0, r0, r6
   4b0b0:	b	4b03c <GetDataSlab+0x1b0bc>
   4b0b4:	ldr	r0, [sp, #76]	; 0x4c
   4b0b8:	ldr	r1, [fp, #12]
   4b0bc:	sub	r7, fp, #96	; 0x60
   4b0c0:	cmp	r0, #1
   4b0c4:	ldr	r0, [sp, #88]	; 0x58
   4b0c8:	blt	56c18 <GetDataSlab+0x26c98>
   4b0cc:	ldr	r4, [sp, #52]	; 0x34
   4b0d0:	ldr	r5, [sp, #72]	; 0x48
   4b0d4:	ldr	r2, [sp, #56]	; 0x38
   4b0d8:	add	r1, r1, #4
   4b0dc:	add	r0, r0, #4
   4b0e0:	str	r1, [sp, #84]	; 0x54
   4b0e4:	ldr	r1, [fp, #24]
   4b0e8:	mls	r2, r5, r4, r2
   4b0ec:	lsl	r8, r4, #3
   4b0f0:	sub	r1, r1, #1
   4b0f4:	str	r1, [sp, #40]	; 0x28
   4b0f8:	mov	r1, r5
   4b0fc:	str	r2, [sp, #64]	; 0x40
   4b100:	sub	r2, fp, #136	; 0x88
   4b104:	orr	r6, r2, #4
   4b108:	ldr	r2, [fp, #20]
   4b10c:	add	r9, r2, #4
   4b110:	sub	r2, fp, #176	; 0xb0
   4b114:	orr	r2, r2, #4
   4b118:	str	r2, [sp, #56]	; 0x38
   4b11c:	orr	r2, r7, #4
   4b120:	str	r2, [sp, #36]	; 0x24
   4b124:	mul	r2, r5, r4
   4b128:	mov	r4, r0
   4b12c:	mov	r0, #0
   4b130:	str	r0, [sp, #80]	; 0x50
   4b134:	str	r2, [sp, #48]	; 0x30
   4b138:	and	r2, r5, #1
   4b13c:	sub	sl, r5, r2
   4b140:	str	r2, [sp, #44]	; 0x2c
   4b144:	lsl	r2, r5, #2
   4b148:	str	r2, [sp, #60]	; 0x3c
   4b14c:	b	4b18c <GetDataSlab+0x1b20c>
   4b150:	ldr	r0, [sp, #36]	; 0x24
   4b154:	ldr	r0, [r0, r2]
   4b158:	add	ip, ip, r0, lsl #2
   4b15c:	add	r3, r0, r3
   4b160:	ldr	r0, [sp, #60]	; 0x3c
   4b164:	ldr	r4, [sp, #68]	; 0x44
   4b168:	ldr	r1, [sp, #72]	; 0x48
   4b16c:	ldr	r7, [sp, #80]	; 0x50
   4b170:	mov	r2, #0
   4b174:	add	r4, r4, r0
   4b178:	ldr	r0, [sp, #76]	; 0x4c
   4b17c:	add	r7, r7, r1
   4b180:	str	r7, [sp, #80]	; 0x50
   4b184:	cmp	r7, r0
   4b188:	bge	56c1c <GetDataSlab+0x26c9c>
   4b18c:	ldr	r0, [fp, #12]
   4b190:	cmp	r1, #1
   4b194:	str	r4, [sp, #68]	; 0x44
   4b198:	ldr	r2, [r0]
   4b19c:	add	r5, ip, r2, lsl #2
   4b1a0:	blt	4b1b8 <GetDataSlab+0x1b238>
   4b1a4:	mov	r7, #0
   4b1a8:	cmp	r1, #1
   4b1ac:	bne	4b1c0 <GetDataSlab+0x1b240>
   4b1b0:	ldr	r4, [sp, #52]	; 0x34
   4b1b4:	b	4b1fc <GetDataSlab+0x1b27c>
   4b1b8:	add	r0, r2, r3
   4b1bc:	b	4b234 <GetDataSlab+0x1b2b4>
   4b1c0:	mov	r0, r4
   4b1c4:	ldr	r4, [sp, #52]	; 0x34
   4b1c8:	mov	r7, #0
   4b1cc:	vldr	s0, [r5]
   4b1d0:	add	r1, r5, r4, lsl #2
   4b1d4:	add	r7, r7, #2
   4b1d8:	add	r5, r5, r8
   4b1dc:	cmp	sl, r7
   4b1e0:	vcvt.f32.s32	s0, s0
   4b1e4:	vstr	s0, [r0, #-4]
   4b1e8:	vldr	s0, [r1]
   4b1ec:	vcvt.f32.s32	s0, s0
   4b1f0:	vstr	s0, [r0]
   4b1f4:	add	r0, r0, #8
   4b1f8:	bne	4b1cc <GetDataSlab+0x1b24c>
   4b1fc:	ldr	r0, [sp, #48]	; 0x30
   4b200:	ldr	r1, [sp, #44]	; 0x2c
   4b204:	add	r0, r0, r3
   4b208:	cmp	r1, #0
   4b20c:	beq	4b230 <GetDataSlab+0x1b2b0>
   4b210:	ldr	r1, [sp, #88]	; 0x58
   4b214:	ldr	r3, [sp, #80]	; 0x50
   4b218:	add	r1, r1, r3, lsl #2
   4b21c:	ldr	r3, [r5], r4, lsl #2
   4b220:	add	r1, r1, r7, lsl #2
   4b224:	vmov	s0, r3
   4b228:	vcvt.f32.s32	s0, s0
   4b22c:	vstr	s0, [r1]
   4b230:	add	r0, r0, r2
   4b234:	ldr	r1, [sp, #64]	; 0x40
   4b238:	ldr	r4, [sp, #56]	; 0x38
   4b23c:	sub	r1, r1, r2
   4b240:	add	r3, r0, r1
   4b244:	ldr	r0, [fp, #24]
   4b248:	add	ip, r5, r1, lsl #2
   4b24c:	cmp	r0, #2
   4b250:	blt	4b160 <GetDataSlab+0x1b1e0>
   4b254:	ldr	r5, [sp, #40]	; 0x28
   4b258:	mov	r2, #0
   4b25c:	b	4b28c <GetDataSlab+0x1b30c>
   4b260:	ldr	r7, [sp, #84]	; 0x54
   4b264:	sub	r1, fp, #176	; 0xb0
   4b268:	sub	r0, r0, lr
   4b26c:	ldr	r1, [r1, r2]
   4b270:	ldr	r7, [r7, r2]
   4b274:	mla	r0, r7, r1, r0
   4b278:	add	r3, r0, r3
   4b27c:	add	ip, ip, r0, lsl #2
   4b280:	subs	r5, r5, #1
   4b284:	add	r2, r2, #4
   4b288:	beq	4b160 <GetDataSlab+0x1b1e0>
   4b28c:	ldr	r0, [r6, r2]
   4b290:	add	r0, r0, #1
   4b294:	str	r0, [r6, r2]
   4b298:	ldr	r1, [r9, r2]
   4b29c:	sdiv	r7, r0, r1
   4b2a0:	mls	r0, r7, r1, r0
   4b2a4:	cmp	r0, #0
   4b2a8:	bne	4b150 <GetDataSlab+0x1b1d0>
   4b2ac:	mov	r0, #0
   4b2b0:	str	r0, [r6, r2]
   4b2b4:	ldr	r0, [r4, r2]
   4b2b8:	sdiv	r1, r3, r0
   4b2bc:	mls	lr, r1, r0, r3
   4b2c0:	cmp	lr, #0
   4b2c4:	bne	4b260 <GetDataSlab+0x1b2e0>
   4b2c8:	ldr	r0, [sp, #84]	; 0x54
   4b2cc:	ldr	r0, [r0, r2]
   4b2d0:	cmp	r0, #0
   4b2d4:	beq	4b280 <GetDataSlab+0x1b300>
   4b2d8:	sub	r1, fp, #176	; 0xb0
   4b2dc:	ldr	r1, [r1, r2]
   4b2e0:	mla	r3, r1, r0, r3
   4b2e4:	mul	r0, r1, r0
   4b2e8:	b	4b27c <GetDataSlab+0x1b2fc>
   4b2ec:	ldr	r0, [sp, #76]	; 0x4c
   4b2f0:	ldr	r1, [fp, #12]
   4b2f4:	sub	r7, fp, #96	; 0x60
   4b2f8:	cmp	r0, #1
   4b2fc:	ldr	r0, [sp, #88]	; 0x58
   4b300:	blt	56c18 <GetDataSlab+0x26c98>
   4b304:	ldr	r4, [sp, #52]	; 0x34
   4b308:	ldr	r5, [sp, #72]	; 0x48
   4b30c:	ldr	r2, [sp, #56]	; 0x38
   4b310:	add	r1, r1, #4
   4b314:	add	r0, r0, #4
   4b318:	str	r1, [sp, #84]	; 0x54
   4b31c:	ldr	r1, [fp, #24]
   4b320:	mls	r2, r5, r4, r2
   4b324:	lsl	r8, r4, #3
   4b328:	sub	r1, r1, #1
   4b32c:	str	r1, [sp, #40]	; 0x28
   4b330:	mov	r1, r5
   4b334:	str	r2, [sp, #64]	; 0x40
   4b338:	sub	r2, fp, #136	; 0x88
   4b33c:	orr	r6, r2, #4
   4b340:	ldr	r2, [fp, #20]
   4b344:	add	r9, r2, #4
   4b348:	sub	r2, fp, #176	; 0xb0
   4b34c:	orr	r2, r2, #4
   4b350:	str	r2, [sp, #56]	; 0x38
   4b354:	orr	r2, r7, #4
   4b358:	str	r2, [sp, #36]	; 0x24
   4b35c:	mul	r2, r5, r4
   4b360:	mov	r4, r0
   4b364:	mov	r0, #0
   4b368:	str	r0, [sp, #80]	; 0x50
   4b36c:	str	r2, [sp, #48]	; 0x30
   4b370:	and	r2, r5, #1
   4b374:	sub	sl, r5, r2
   4b378:	str	r2, [sp, #44]	; 0x2c
   4b37c:	lsl	r2, r5, #2
   4b380:	str	r2, [sp, #60]	; 0x3c
   4b384:	b	4b3c4 <GetDataSlab+0x1b444>
   4b388:	ldr	r0, [sp, #36]	; 0x24
   4b38c:	ldr	r0, [r0, r2]
   4b390:	add	ip, ip, r0, lsl #2
   4b394:	add	r3, r0, r3
   4b398:	ldr	r0, [sp, #60]	; 0x3c
   4b39c:	ldr	r4, [sp, #68]	; 0x44
   4b3a0:	ldr	r1, [sp, #72]	; 0x48
   4b3a4:	ldr	r7, [sp, #80]	; 0x50
   4b3a8:	mov	r2, #0
   4b3ac:	add	r4, r4, r0
   4b3b0:	ldr	r0, [sp, #76]	; 0x4c
   4b3b4:	add	r7, r7, r1
   4b3b8:	str	r7, [sp, #80]	; 0x50
   4b3bc:	cmp	r7, r0
   4b3c0:	bge	56c1c <GetDataSlab+0x26c9c>
   4b3c4:	ldr	r0, [fp, #12]
   4b3c8:	cmp	r1, #1
   4b3cc:	str	r4, [sp, #68]	; 0x44
   4b3d0:	ldr	r2, [r0]
   4b3d4:	add	r5, ip, r2, lsl #2
   4b3d8:	blt	4b3f0 <GetDataSlab+0x1b470>
   4b3dc:	mov	r7, #0
   4b3e0:	cmp	r1, #1
   4b3e4:	bne	4b3f8 <GetDataSlab+0x1b478>
   4b3e8:	ldr	r4, [sp, #52]	; 0x34
   4b3ec:	b	4b434 <GetDataSlab+0x1b4b4>
   4b3f0:	add	r0, r2, r3
   4b3f4:	b	4b46c <GetDataSlab+0x1b4ec>
   4b3f8:	mov	r0, r4
   4b3fc:	ldr	r4, [sp, #52]	; 0x34
   4b400:	mov	r7, #0
   4b404:	vldr	s0, [r5]
   4b408:	add	r1, r5, r4, lsl #2
   4b40c:	add	r7, r7, #2
   4b410:	add	r5, r5, r8
   4b414:	cmp	sl, r7
   4b418:	vcvt.f32.u32	s0, s0
   4b41c:	vstr	s0, [r0, #-4]
   4b420:	vldr	s0, [r1]
   4b424:	vcvt.f32.u32	s0, s0
   4b428:	vstr	s0, [r0]
   4b42c:	add	r0, r0, #8
   4b430:	bne	4b404 <GetDataSlab+0x1b484>
   4b434:	ldr	r0, [sp, #48]	; 0x30
   4b438:	ldr	r1, [sp, #44]	; 0x2c
   4b43c:	add	r0, r0, r3
   4b440:	cmp	r1, #0
   4b444:	beq	4b468 <GetDataSlab+0x1b4e8>
   4b448:	ldr	r1, [sp, #88]	; 0x58
   4b44c:	ldr	r3, [sp, #80]	; 0x50
   4b450:	add	r1, r1, r3, lsl #2
   4b454:	ldr	r3, [r5], r4, lsl #2
   4b458:	add	r1, r1, r7, lsl #2
   4b45c:	vmov	s0, r3
   4b460:	vcvt.f32.u32	s0, s0
   4b464:	vstr	s0, [r1]
   4b468:	add	r0, r0, r2
   4b46c:	ldr	r1, [sp, #64]	; 0x40
   4b470:	ldr	r4, [sp, #56]	; 0x38
   4b474:	sub	r1, r1, r2
   4b478:	add	r3, r0, r1
   4b47c:	ldr	r0, [fp, #24]
   4b480:	add	ip, r5, r1, lsl #2
   4b484:	cmp	r0, #2
   4b488:	blt	4b398 <GetDataSlab+0x1b418>
   4b48c:	ldr	r5, [sp, #40]	; 0x28
   4b490:	mov	r2, #0
   4b494:	b	4b4c4 <GetDataSlab+0x1b544>
   4b498:	ldr	r7, [sp, #84]	; 0x54
   4b49c:	sub	r1, fp, #176	; 0xb0
   4b4a0:	sub	r0, r0, lr
   4b4a4:	ldr	r1, [r1, r2]
   4b4a8:	ldr	r7, [r7, r2]
   4b4ac:	mla	r0, r7, r1, r0
   4b4b0:	add	r3, r0, r3
   4b4b4:	add	ip, ip, r0, lsl #2
   4b4b8:	subs	r5, r5, #1
   4b4bc:	add	r2, r2, #4
   4b4c0:	beq	4b398 <GetDataSlab+0x1b418>
   4b4c4:	ldr	r0, [r6, r2]
   4b4c8:	add	r0, r0, #1
   4b4cc:	str	r0, [r6, r2]
   4b4d0:	ldr	r1, [r9, r2]
   4b4d4:	sdiv	r7, r0, r1
   4b4d8:	mls	r0, r7, r1, r0
   4b4dc:	cmp	r0, #0
   4b4e0:	bne	4b388 <GetDataSlab+0x1b408>
   4b4e4:	mov	r0, #0
   4b4e8:	str	r0, [r6, r2]
   4b4ec:	ldr	r0, [r4, r2]
   4b4f0:	sdiv	r1, r3, r0
   4b4f4:	mls	lr, r1, r0, r3
   4b4f8:	cmp	lr, #0
   4b4fc:	bne	4b498 <GetDataSlab+0x1b518>
   4b500:	ldr	r0, [sp, #84]	; 0x54
   4b504:	ldr	r0, [r0, r2]
   4b508:	cmp	r0, #0
   4b50c:	beq	4b4b8 <GetDataSlab+0x1b538>
   4b510:	sub	r1, fp, #176	; 0xb0
   4b514:	ldr	r1, [r1, r2]
   4b518:	mla	r3, r1, r0, r3
   4b51c:	mul	r0, r1, r0
   4b520:	b	4b4b4 <GetDataSlab+0x1b534>
   4b524:	ldr	r3, [fp, #20]
   4b528:	ldr	r0, [sp, #76]	; 0x4c
   4b52c:	mov	r7, r3
   4b530:	ldr	r3, [sp, #64]	; 0x40
   4b534:	cmp	r0, #1
   4b538:	blt	56c18 <GetDataSlab+0x26c98>
   4b53c:	ldr	r2, [sp, #92]	; 0x5c
   4b540:	ldr	r4, [sp, #52]	; 0x34
   4b544:	ldr	r0, [sp, #60]	; 0x3c
   4b548:	orr	lr, ip, #4
   4b54c:	ldr	r5, [r2], #4
   4b550:	mls	r0, r3, r4, r0
   4b554:	lsl	r9, r4, #3
   4b558:	str	r2, [sp, #92]	; 0x5c
   4b55c:	ldr	r2, [fp, #24]
   4b560:	sub	r0, r0, r5
   4b564:	str	r5, [sp, #72]	; 0x48
   4b568:	sub	r2, r2, #1
   4b56c:	str	r0, [sp, #68]	; 0x44
   4b570:	sub	r0, fp, #136	; 0x88
   4b574:	str	r2, [sp, #44]	; 0x2c
   4b578:	sub	r2, fp, #96	; 0x60
   4b57c:	orr	r6, r0, #4
   4b580:	add	r0, r7, #4
   4b584:	orr	r2, r2, #4
   4b588:	str	r2, [sp, #40]	; 0x28
   4b58c:	mla	r2, r3, r4, r5
   4b590:	str	r2, [sp, #56]	; 0x38
   4b594:	and	r2, r3, #1
   4b598:	sub	sl, r3, r2
   4b59c:	str	r2, [sp, #48]	; 0x30
   4b5a0:	lsl	r2, r3, #2
   4b5a4:	str	r2, [sp, #60]	; 0x3c
   4b5a8:	ldr	r2, [sp, #88]	; 0x58
   4b5ac:	add	r2, r2, #4
   4b5b0:	str	r2, [sp, #84]	; 0x54
   4b5b4:	mov	r2, #0
   4b5b8:	str	r2, [sp, #80]	; 0x50
   4b5bc:	b	4b600 <GetDataSlab+0x1b680>
   4b5c0:	ldr	r3, [sp, #40]	; 0x28
   4b5c4:	ldr	r2, [r3, r2]
   4b5c8:	add	r8, r8, r2, lsl #2
   4b5cc:	add	r1, r2, r1
   4b5d0:	ldr	r2, [sp, #60]	; 0x3c
   4b5d4:	ldr	r3, [sp, #84]	; 0x54
   4b5d8:	ldr	r5, [sp, #80]	; 0x50
   4b5dc:	ldr	r7, [sp, #76]	; 0x4c
   4b5e0:	add	r3, r3, r2
   4b5e4:	mov	r2, #0
   4b5e8:	str	r3, [sp, #84]	; 0x54
   4b5ec:	ldr	r3, [sp, #64]	; 0x40
   4b5f0:	add	r5, r5, r3
   4b5f4:	cmp	r5, r7
   4b5f8:	str	r5, [sp, #80]	; 0x50
   4b5fc:	bge	56c1c <GetDataSlab+0x26c9c>
   4b600:	ldr	r7, [sp, #72]	; 0x48
   4b604:	cmp	r3, #1
   4b608:	add	r2, r8, r7, lsl #2
   4b60c:	blt	4b674 <GetDataSlab+0x1b6f4>
   4b610:	ldr	ip, [sp, #88]	; 0x58
   4b614:	ldr	r4, [sp, #52]	; 0x34
   4b618:	mov	r7, #0
   4b61c:	beq	4b64c <GetDataSlab+0x1b6cc>
   4b620:	ldr	r5, [sp, #84]	; 0x54
   4b624:	mov	r7, #0
   4b628:	ldr	r3, [r2]
   4b62c:	add	r7, r7, #2
   4b630:	cmp	sl, r7
   4b634:	str	r3, [r5, #-4]
   4b638:	ldr	r3, [r2, r4, lsl #2]
   4b63c:	add	r2, r2, r9
   4b640:	str	r3, [r5]
   4b644:	add	r5, r5, #8
   4b648:	bne	4b628 <GetDataSlab+0x1b6a8>
   4b64c:	ldr	r3, [sp, #48]	; 0x30
   4b650:	cmp	r3, #0
   4b654:	ldr	r3, [sp, #56]	; 0x38
   4b658:	beq	4b678 <GetDataSlab+0x1b6f8>
   4b65c:	ldr	r3, [sp, #80]	; 0x50
   4b660:	ldr	r5, [r2], r4, lsl #2
   4b664:	add	r3, ip, r3, lsl #2
   4b668:	str	r5, [r3, r7, lsl #2]
   4b66c:	ldr	r3, [sp, #56]	; 0x38
   4b670:	b	4b678 <GetDataSlab+0x1b6f8>
   4b674:	mov	r3, r7
   4b678:	ldr	r7, [sp, #68]	; 0x44
   4b67c:	add	r1, r3, r1
   4b680:	add	r8, r2, r7, lsl #2
   4b684:	ldr	r2, [fp, #24]
   4b688:	add	r1, r1, r7
   4b68c:	cmp	r2, #2
   4b690:	blt	4b5d0 <GetDataSlab+0x1b650>
   4b694:	ldr	r7, [sp, #44]	; 0x2c
   4b698:	mov	r2, #0
   4b69c:	b	4b6cc <GetDataSlab+0x1b74c>
   4b6a0:	ldr	r5, [sp, #92]	; 0x5c
   4b6a4:	sub	r4, fp, #176	; 0xb0
   4b6a8:	sub	r3, r3, ip
   4b6ac:	ldr	r4, [r4, r2]
   4b6b0:	ldr	r5, [r5, r2]
   4b6b4:	mla	r3, r5, r4, r3
   4b6b8:	add	r1, r3, r1
   4b6bc:	add	r8, r8, r3, lsl #2
   4b6c0:	subs	r7, r7, #1
   4b6c4:	add	r2, r2, #4
   4b6c8:	beq	4b5d0 <GetDataSlab+0x1b650>
   4b6cc:	ldr	r3, [r6, r2]
   4b6d0:	add	r3, r3, #1
   4b6d4:	str	r3, [r6, r2]
   4b6d8:	ldr	r5, [r0, r2]
   4b6dc:	sdiv	r4, r3, r5
   4b6e0:	mls	r3, r4, r5, r3
   4b6e4:	cmp	r3, #0
   4b6e8:	bne	4b5c0 <GetDataSlab+0x1b640>
   4b6ec:	mov	r3, #0
   4b6f0:	str	r3, [r6, r2]
   4b6f4:	ldr	r3, [lr, r2]
   4b6f8:	sdiv	r5, r1, r3
   4b6fc:	mls	ip, r5, r3, r1
   4b700:	cmp	ip, #0
   4b704:	bne	4b6a0 <GetDataSlab+0x1b720>
   4b708:	ldr	r3, [sp, #92]	; 0x5c
   4b70c:	ldr	r3, [r3, r2]
   4b710:	cmp	r3, #0
   4b714:	beq	4b6c0 <GetDataSlab+0x1b740>
   4b718:	sub	r5, fp, #176	; 0xb0
   4b71c:	ldr	r5, [r5, r2]
   4b720:	mla	r1, r5, r3, r1
   4b724:	mul	r3, r5, r3
   4b728:	b	4b6bc <GetDataSlab+0x1b73c>
   4b72c:	ldr	r0, [sp, #76]	; 0x4c
   4b730:	ldr	r3, [sp, #72]	; 0x48
   4b734:	cmp	r0, #1
   4b738:	ldr	r0, [sp, #60]	; 0x3c
   4b73c:	blt	56c18 <GetDataSlab+0x26c98>
   4b740:	ldr	r2, [sp, #92]	; 0x5c
   4b744:	ldr	r7, [sp, #44]	; 0x2c
   4b748:	ldr	r6, [r2], #4
   4b74c:	mls	r0, r3, r7, r0
   4b750:	lsl	sl, r7, #3
   4b754:	lsl	r8, r7, #4
   4b758:	str	r2, [sp, #92]	; 0x5c
   4b75c:	sub	r0, r0, r6
   4b760:	str	r6, [sp, #64]	; 0x40
   4b764:	str	r0, [sp, #60]	; 0x3c
   4b768:	sub	r0, fp, #136	; 0x88
   4b76c:	orr	r4, r0, #4
   4b770:	ldr	r0, [fp, #20]
   4b774:	add	r0, r0, #4
   4b778:	str	r0, [sp, #40]	; 0x28
   4b77c:	orr	r0, ip, #4
   4b780:	str	r0, [sp, #84]	; 0x54
   4b784:	ldr	r0, [fp, #24]
   4b788:	sub	r0, r0, #1
   4b78c:	str	r0, [sp, #36]	; 0x24
   4b790:	sub	r0, fp, #96	; 0x60
   4b794:	orr	r0, r0, #4
   4b798:	str	r0, [sp, #32]
   4b79c:	mla	r0, r3, r7, r6
   4b7a0:	str	r0, [sp, #52]	; 0x34
   4b7a4:	and	r0, r3, #1
   4b7a8:	sub	ip, r3, r0
   4b7ac:	str	r0, [sp, #48]	; 0x30
   4b7b0:	lsl	r0, r3, #2
   4b7b4:	str	r0, [sp, #56]	; 0x38
   4b7b8:	ldr	r0, [sp, #88]	; 0x58
   4b7bc:	add	r0, r0, #4
   4b7c0:	str	r0, [sp, #80]	; 0x50
   4b7c4:	mov	r0, #0
   4b7c8:	str	r0, [sp, #68]	; 0x44
   4b7cc:	b	4b810 <GetDataSlab+0x1b890>
   4b7d0:	ldr	r0, [sp, #32]
   4b7d4:	ldr	r0, [r0, r2]
   4b7d8:	add	r9, r9, r0, lsl #3
   4b7dc:	add	r1, r0, r1
   4b7e0:	ldr	r0, [sp, #56]	; 0x38
   4b7e4:	ldr	r2, [sp, #80]	; 0x50
   4b7e8:	ldr	r3, [sp, #72]	; 0x48
   4b7ec:	ldr	r7, [sp, #68]	; 0x44
   4b7f0:	add	r2, r2, r0
   4b7f4:	ldr	r0, [sp, #76]	; 0x4c
   4b7f8:	add	r7, r7, r3
   4b7fc:	str	r2, [sp, #80]	; 0x50
   4b800:	mov	r2, #0
   4b804:	str	r7, [sp, #68]	; 0x44
   4b808:	cmp	r7, r0
   4b80c:	bge	56c1c <GetDataSlab+0x26c9c>
   4b810:	ldr	lr, [sp, #64]	; 0x40
   4b814:	cmp	r3, #1
   4b818:	add	r2, r9, lr, lsl #3
   4b81c:	blt	4b898 <GetDataSlab+0x1b918>
   4b820:	mov	r3, #0
   4b824:	beq	4b860 <GetDataSlab+0x1b8e0>
   4b828:	ldr	r5, [sp, #80]	; 0x50
   4b82c:	mov	r3, #0
   4b830:	vldr	d16, [r2]
   4b834:	add	r0, r2, sl
   4b838:	add	r3, r3, #2
   4b83c:	add	r2, r2, r8
   4b840:	cmp	ip, r3
   4b844:	vcvt.f32.f64	s0, d16
   4b848:	vstr	s0, [r5, #-4]
   4b84c:	vldr	d16, [r0]
   4b850:	vcvt.f32.f64	s0, d16
   4b854:	vstr	s0, [r5]
   4b858:	add	r5, r5, #8
   4b85c:	bne	4b830 <GetDataSlab+0x1b8b0>
   4b860:	ldr	r0, [sp, #48]	; 0x30
   4b864:	ldr	lr, [sp, #52]	; 0x34
   4b868:	cmp	r0, #0
   4b86c:	beq	4b898 <GetDataSlab+0x1b918>
   4b870:	vldr	d16, [r2]
   4b874:	ldr	r0, [sp, #88]	; 0x58
   4b878:	ldr	r7, [sp, #68]	; 0x44
   4b87c:	ldr	lr, [sp, #52]	; 0x34
   4b880:	add	r0, r0, r7, lsl #2
   4b884:	vcvt.f32.f64	s0, d16
   4b888:	add	r0, r0, r3, lsl #2
   4b88c:	vstr	s0, [r0]
   4b890:	ldr	r0, [sp, #44]	; 0x2c
   4b894:	add	r2, r2, r0, lsl #3
   4b898:	ldr	r3, [sp, #60]	; 0x3c
   4b89c:	add	r0, lr, r1
   4b8a0:	add	r1, r0, r3
   4b8a4:	ldr	r0, [fp, #24]
   4b8a8:	add	r9, r2, r3, lsl #3
   4b8ac:	cmp	r0, #2
   4b8b0:	blt	4b7e0 <GetDataSlab+0x1b860>
   4b8b4:	ldr	r3, [sp, #36]	; 0x24
   4b8b8:	ldr	lr, [sp, #40]	; 0x28
   4b8bc:	mov	r2, #0
   4b8c0:	b	4b8f0 <GetDataSlab+0x1b970>
   4b8c4:	sub	r7, fp, #176	; 0xb0
   4b8c8:	sub	r0, r0, r6
   4b8cc:	ldr	r5, [r7, r2]
   4b8d0:	ldr	r7, [sp, #92]	; 0x5c
   4b8d4:	ldr	r7, [r7, r2]
   4b8d8:	mla	r0, r7, r5, r0
   4b8dc:	add	r1, r0, r1
   4b8e0:	add	r9, r9, r0, lsl #3
   4b8e4:	subs	r3, r3, #1
   4b8e8:	add	r2, r2, #4
   4b8ec:	beq	4b7e0 <GetDataSlab+0x1b860>
   4b8f0:	ldr	r0, [r4, r2]
   4b8f4:	add	r0, r0, #1
   4b8f8:	str	r0, [r4, r2]
   4b8fc:	ldr	r6, [lr, r2]
   4b900:	sdiv	r5, r0, r6
   4b904:	mls	r0, r5, r6, r0
   4b908:	cmp	r0, #0
   4b90c:	bne	4b7d0 <GetDataSlab+0x1b850>
   4b910:	mov	r0, #0
   4b914:	str	r0, [r4, r2]
   4b918:	ldr	r0, [sp, #84]	; 0x54
   4b91c:	ldr	r0, [r0, r2]
   4b920:	sdiv	r6, r1, r0
   4b924:	mls	r6, r6, r0, r1
   4b928:	cmp	r6, #0
   4b92c:	bne	4b8c4 <GetDataSlab+0x1b944>
   4b930:	ldr	r0, [sp, #92]	; 0x5c
   4b934:	ldr	r0, [r0, r2]
   4b938:	cmp	r0, #0
   4b93c:	beq	4b8e4 <GetDataSlab+0x1b964>
   4b940:	sub	r7, fp, #176	; 0xb0
   4b944:	ldr	r7, [r7, r2]
   4b948:	mla	r1, r7, r0, r1
   4b94c:	mul	r0, r7, r0
   4b950:	b	4b8e0 <GetDataSlab+0x1b960>
   4b954:	ldr	r0, [sp, #68]	; 0x44
   4b958:	ldr	r1, [sp, #88]	; 0x58
   4b95c:	ldr	r2, [fp, #12]
   4b960:	sub	r3, fp, #96	; 0x60
   4b964:	cmp	r0, #1
   4b968:	blt	4bba8 <GetDataSlab+0x1bc28>
   4b96c:	ldr	r4, [sp, #20]
   4b970:	ldr	lr, [sp, #56]	; 0x38
   4b974:	ldr	r0, [sp, #28]
   4b978:	mov	r9, r2
   4b97c:	add	r1, r1, #4
   4b980:	ldr	r2, [r9], #4
   4b984:	str	r9, [sp, #32]
   4b988:	mls	r0, lr, r4, r0
   4b98c:	lsl	r8, r4, #4
   4b990:	str	r2, [sp, #52]	; 0x34
   4b994:	sub	r0, r0, r2
   4b998:	str	r0, [sp, #48]	; 0x30
   4b99c:	sub	r0, fp, #136	; 0x88
   4b9a0:	orr	r7, r0, #4
   4b9a4:	ldr	r0, [fp, #20]
   4b9a8:	str	r7, [sp, #24]
   4b9ac:	add	r0, r0, #4
   4b9b0:	str	r0, [sp, #84]	; 0x54
   4b9b4:	orr	r0, ip, #4
   4b9b8:	str	r0, [sp, #72]	; 0x48
   4b9bc:	ldr	r0, [fp, #24]
   4b9c0:	sub	r0, r0, #1
   4b9c4:	str	r0, [sp, #16]
   4b9c8:	orr	r0, r3, #4
   4b9cc:	lsl	r3, lr, #2
   4b9d0:	str	r0, [sp, #8]
   4b9d4:	mla	r0, lr, r4, r2
   4b9d8:	str	r3, [sp, #40]	; 0x28
   4b9dc:	lsl	r3, r4, #3
   4b9e0:	str	r3, [sp, #12]
   4b9e4:	mov	r3, #0
   4b9e8:	str	r3, [sp, #64]	; 0x40
   4b9ec:	str	r0, [sp, #36]	; 0x24
   4b9f0:	and	r0, lr, #1
   4b9f4:	str	r0, [sp, #28]
   4b9f8:	sub	r0, lr, r0
   4b9fc:	str	r0, [sp, #44]	; 0x2c
   4ba00:	b	4ba40 <GetDataSlab+0x1bac0>
   4ba04:	ldr	r1, [sp, #8]
   4ba08:	ldr	r0, [r1, r0]
   4ba0c:	add	sl, sl, r0, lsl #3
   4ba10:	add	r5, r0, r5
   4ba14:	ldr	r0, [sp, #40]	; 0x28
   4ba18:	ldr	r1, [sp, #60]	; 0x3c
   4ba1c:	ldr	r2, [sp, #64]	; 0x40
   4ba20:	add	r1, r1, r0
   4ba24:	ldr	r0, [sp, #68]	; 0x44
   4ba28:	add	r2, r2, lr
   4ba2c:	str	r2, [sp, #64]	; 0x40
   4ba30:	cmp	r2, r0
   4ba34:	ldr	r2, [sp, #52]	; 0x34
   4ba38:	ldr	r0, [sp, #44]	; 0x2c
   4ba3c:	bge	4bba8 <GetDataSlab+0x1bc28>
   4ba40:	add	r4, sl, r2, lsl #3
   4ba44:	cmp	lr, #1
   4ba48:	str	r1, [sp, #60]	; 0x3c
   4ba4c:	blt	4baf8 <GetDataSlab+0x1bb78>
   4ba50:	mov	r7, r8
   4ba54:	mov	r6, #0
   4ba58:	beq	4baa0 <GetDataSlab+0x1bb20>
   4ba5c:	ldr	r8, [sp, #12]
   4ba60:	mov	r6, #0
   4ba64:	mov	r9, r1
   4ba68:	mov	sl, r0
   4ba6c:	ldrd	r0, [r4]
   4ba70:	bl	6b898 <__aeabi_l2f>
   4ba74:	str	r0, [r9, #-4]
   4ba78:	mov	r1, r4
   4ba7c:	ldr	r0, [r1, r8]!
   4ba80:	ldr	r1, [r1, #4]
   4ba84:	bl	6b898 <__aeabi_l2f>
   4ba88:	add	r6, r6, #2
   4ba8c:	str	r0, [r9]
   4ba90:	add	r4, r4, r7
   4ba94:	add	r9, r9, #8
   4ba98:	cmp	sl, r6
   4ba9c:	bne	4ba6c <GetDataSlab+0x1baec>
   4baa0:	ldr	r0, [sp, #28]
   4baa4:	mov	r8, r7
   4baa8:	ldr	lr, [sp, #56]	; 0x38
   4baac:	ldr	r9, [sp, #32]
   4bab0:	ldr	r7, [sp, #24]
   4bab4:	sub	ip, fp, #176	; 0xb0
   4bab8:	cmp	r0, #0
   4babc:	ldr	r0, [sp, #36]	; 0x24
   4bac0:	beq	4bafc <GetDataSlab+0x1bb7c>
   4bac4:	ldr	r0, [sp, #88]	; 0x58
   4bac8:	ldr	r1, [sp, #64]	; 0x40
   4bacc:	add	r9, r0, r1, lsl #2
   4bad0:	ldrd	r0, [r4]
   4bad4:	bl	6b898 <__aeabi_l2f>
   4bad8:	str	r0, [r9, r6, lsl #2]
   4badc:	ldr	r0, [sp, #20]
   4bae0:	ldr	r9, [sp, #32]
   4bae4:	ldr	lr, [sp, #56]	; 0x38
   4bae8:	sub	ip, fp, #176	; 0xb0
   4baec:	add	r4, r4, r0, lsl #3
   4baf0:	ldr	r0, [sp, #36]	; 0x24
   4baf4:	b	4bafc <GetDataSlab+0x1bb7c>
   4baf8:	mov	r0, r2
   4bafc:	ldr	r1, [sp, #48]	; 0x30
   4bb00:	add	r0, r0, r5
   4bb04:	add	r5, r0, r1
   4bb08:	ldr	r0, [fp, #24]
   4bb0c:	add	sl, r4, r1, lsl #3
   4bb10:	cmp	r0, #2
   4bb14:	blt	4ba14 <GetDataSlab+0x1ba94>
   4bb18:	ldr	r1, [sp, #16]
   4bb1c:	mov	r0, #0
   4bb20:	b	4bb48 <GetDataSlab+0x1bbc8>
   4bb24:	ldr	r6, [ip, r0]
   4bb28:	ldr	r4, [r9, r0]
   4bb2c:	sub	r2, r2, r3
   4bb30:	mla	r2, r4, r6, r2
   4bb34:	add	r5, r2, r5
   4bb38:	add	sl, sl, r2, lsl #3
   4bb3c:	subs	r1, r1, #1
   4bb40:	add	r0, r0, #4
   4bb44:	beq	4ba14 <GetDataSlab+0x1ba94>
   4bb48:	ldr	r2, [r7, r0]
   4bb4c:	ldr	r3, [sp, #84]	; 0x54
   4bb50:	add	r2, r2, #1
   4bb54:	str	r2, [r7, r0]
   4bb58:	ldr	r3, [r3, r0]
   4bb5c:	sdiv	r6, r2, r3
   4bb60:	mls	r2, r6, r3, r2
   4bb64:	cmp	r2, #0
   4bb68:	bne	4ba04 <GetDataSlab+0x1ba84>
   4bb6c:	mov	r2, #0
   4bb70:	str	r2, [r7, r0]
   4bb74:	ldr	r2, [sp, #72]	; 0x48
   4bb78:	ldr	r2, [r2, r0]
   4bb7c:	sdiv	r3, r5, r2
   4bb80:	mls	r3, r3, r2, r5
   4bb84:	cmp	r3, #0
   4bb88:	bne	4bb24 <GetDataSlab+0x1bba4>
   4bb8c:	ldr	r2, [r9, r0]
   4bb90:	cmp	r2, #0
   4bb94:	beq	4bb3c <GetDataSlab+0x1bbbc>
   4bb98:	ldr	r3, [ip, r0]
   4bb9c:	mla	r5, r3, r2, r5
   4bba0:	mul	r2, r3, r2
   4bba4:	b	4bb38 <GetDataSlab+0x1bbb8>
   4bba8:	mov	r2, #0
   4bbac:	ldr	r0, [sp, #76]	; 0x4c
   4bbb0:	cmp	r0, #13
   4bbb4:	bne	56c1c <GetDataSlab+0x26c9c>
   4bbb8:	ldr	r0, [fp, #16]
   4bbbc:	ldr	r7, [fp, #8]
   4bbc0:	ldr	r9, [fp, #20]
   4bbc4:	sub	r2, fp, #176	; 0xb0
   4bbc8:	ldr	r0, [r0]
   4bbcc:	str	r0, [sp, #36]	; 0x24
   4bbd0:	sub	r0, r0, #1
   4bbd4:	str	r0, [fp, #-96]	; 0xffffffa0
   4bbd8:	ldr	r0, [r7]
   4bbdc:	str	r0, [fp, #-176]	; 0xffffff50
   4bbe0:	str	r0, [sp, #44]	; 0x2c
   4bbe4:	mov	r0, #0
   4bbe8:	str	r0, [sp, #76]	; 0x4c
   4bbec:	ldr	r0, [fp, #24]
   4bbf0:	ldr	r1, [r9]
   4bbf4:	sub	r9, fp, #96	; 0x60
   4bbf8:	cmp	r0, #2
   4bbfc:	str	r1, [sp, #56]	; 0x38
   4bc00:	str	r1, [sp, #72]	; 0x48
   4bc04:	blt	4bd5c <GetDataSlab+0x1bddc>
   4bc08:	ldr	r4, [sp, #44]	; 0x2c
   4bc0c:	mov	r1, #0
   4bc10:	sub	r0, r7, #4
   4bc14:	sub	sl, r7, #12
   4bc18:	mov	r3, #1
   4bc1c:	mov	lr, #0
   4bc20:	mvn	ip, #15
   4bc24:	str	r1, [sp, #76]	; 0x4c
   4bc28:	ldr	r1, [sp, #56]	; 0x38
   4bc2c:	mov	r8, r4
   4bc30:	str	r1, [sp, #72]	; 0x48
   4bc34:	b	4bc90 <GetDataSlab+0x1bd10>
   4bc38:	ldr	r1, [fp, #12]
   4bc3c:	sub	r2, fp, #176	; 0xb0
   4bc40:	sub	r9, fp, #96	; 0x60
   4bc44:	ldr	r5, [sp, #76]	; 0x4c
   4bc48:	add	sl, sl, #4
   4bc4c:	str	r6, [r9, r3, lsl #2]
   4bc50:	str	r4, [r2, r3, lsl #2]
   4bc54:	ldr	r6, [sp, #72]	; 0x48
   4bc58:	ldr	r1, [r1, r3, lsl #2]
   4bc5c:	mla	r5, r1, r8, r5
   4bc60:	ldr	r1, [fp, #20]
   4bc64:	mov	r8, r4
   4bc68:	mov	r4, r7
   4bc6c:	ldr	r7, [fp, #8]
   4bc70:	str	r5, [sp, #76]	; 0x4c
   4bc74:	ldr	r1, [r1, r3, lsl #2]
   4bc78:	add	r3, r3, #1
   4bc7c:	mul	r6, r1, r6
   4bc80:	ldr	r1, [fp, #24]
   4bc84:	str	r6, [sp, #72]	; 0x48
   4bc88:	cmp	r3, r1
   4bc8c:	beq	4bd5c <GetDataSlab+0x1bddc>
   4bc90:	ldr	r1, [fp, #16]
   4bc94:	add	lr, lr, #1
   4bc98:	cmp	lr, #4
   4bc9c:	ldr	r1, [r1, r3, lsl #2]
   4bca0:	str	r4, [r2, r3, lsl #2]
   4bca4:	sub	r6, r1, #1
   4bca8:	str	r6, [r9, r3, lsl #2]
   4bcac:	ldr	r7, [r7, r3, lsl #2]
   4bcb0:	bcs	4bcc0 <GetDataSlab+0x1bd40>
   4bcb4:	mov	r1, r7
   4bcb8:	mov	r2, r3
   4bcbc:	b	4bd44 <GetDataSlab+0x1bdc4>
   4bcc0:	vmov.i32	q9, #1	; 0x00000001
   4bcc4:	vmov.i32	q10, #1	; 0x00000001
   4bcc8:	vmov.32	d23[1], r7
   4bccc:	vmov.i32	q8, #1	; 0x00000001
   4bcd0:	bic	r9, lr, #3
   4bcd4:	bic	r1, r3, #3
   4bcd8:	sub	r2, r3, r9
   4bcdc:	vmov.32	d18[0], r4
   4bce0:	vmov.32	d20[0], r6
   4bce4:	mov	r4, sl
   4bce8:	vorr	d16, d18, d18
   4bcec:	vmov.i32	q9, #1	; 0x00000001
   4bcf0:	vorr	d18, d20, d20
   4bcf4:	vld1.32	{d20-d21}, [r4], ip
   4bcf8:	subs	r1, r1, #4
   4bcfc:	vrev64.32	q12, q10
   4bd00:	vext.8	q12, q12, q12, #8
   4bd04:	vext.8	q11, q11, q12, #12
   4bd08:	vmul.i32	q9, q9, q12
   4bd0c:	vmul.i32	q8, q11, q8
   4bd10:	vorr	q11, q12, q12
   4bd14:	bne	4bcf4 <GetDataSlab+0x1bd74>
   4bd18:	vext.8	q11, q9, q8, #8
   4bd1c:	vext.8	q12, q8, q8, #8
   4bd20:	cmp	lr, r9
   4bd24:	vmul.i32	q0, q9, q11
   4bd28:	vmul.i32	q1, q8, q12
   4bd2c:	vmul.i32	q8, q0, d0[1]
   4bd30:	vmul.i32	q9, q1, d2[1]
   4bd34:	vmov.32	r6, d16[0]
   4bd38:	vmov.32	r4, d18[0]
   4bd3c:	beq	4bc38 <GetDataSlab+0x1bcb8>
   4bd40:	vmov.32	r1, d20[0]
   4bd44:	mul	r4, r1, r4
   4bd48:	ldr	r1, [r0, r2, lsl #2]
   4bd4c:	subs	r2, r2, #1
   4bd50:	mul	r6, r6, r1
   4bd54:	bne	4bd44 <GetDataSlab+0x1bdc4>
   4bd58:	b	4bc38 <GetDataSlab+0x1bcb8>
   4bd5c:	ldr	r0, [sp, #80]	; 0x50
   4bd60:	ldr	r1, [sp, #76]	; 0x4c
   4bd64:	mov	r7, r2
   4bd68:	add	r4, r0, r1, lsl #3
   4bd6c:	ldr	r0, [sp, #36]	; 0x24
   4bd70:	cmp	r0, #1
   4bd74:	bne	55c14 <GetDataSlab+0x25c94>
   4bd78:	ldr	r0, [sp, #72]	; 0x48
   4bd7c:	ldr	r2, [sp, #88]	; 0x58
   4bd80:	ldr	r3, [fp, #12]
   4bd84:	ldr	r8, [sp, #56]	; 0x38
   4bd88:	ldr	r9, [sp, #44]	; 0x2c
   4bd8c:	sub	r6, fp, #96	; 0x60
   4bd90:	cmp	r0, #1
   4bd94:	blt	56c18 <GetDataSlab+0x26c98>
   4bd98:	sub	r0, r8, #2
   4bd9c:	mov	r1, #1
   4bda0:	str	r4, [sp, #64]	; 0x40
   4bda4:	str	r2, [sp, #68]	; 0x44
   4bda8:	add	r1, r1, r0, lsr #1
   4bdac:	lsr	r0, r0, #1
   4bdb0:	str	r0, [sp, #20]
   4bdb4:	mov	r0, #0
   4bdb8:	and	r5, r1, #1
   4bdbc:	str	r0, [sp, #60]	; 0x3c
   4bdc0:	sub	r1, r1, r5
   4bdc4:	str	r5, [sp, #32]
   4bdc8:	str	r1, [sp, #12]
   4bdcc:	sub	r1, fp, #136	; 0x88
   4bdd0:	orr	sl, r1, #4
   4bdd4:	ldr	r1, [fp, #20]
   4bdd8:	str	sl, [sp, #28]
   4bddc:	add	r1, r1, #4
   4bde0:	str	r1, [sp, #84]	; 0x54
   4bde4:	orr	r1, r7, #4
   4bde8:	str	r1, [sp, #80]	; 0x50
   4bdec:	ldr	r1, [fp, #24]
   4bdf0:	sub	r1, r1, #1
   4bdf4:	str	r1, [sp, #40]	; 0x28
   4bdf8:	orr	r1, r6, #4
   4bdfc:	str	r1, [sp, #16]
   4be00:	lsl	r1, r8, #2
   4be04:	str	r1, [sp, #52]	; 0x34
   4be08:	bic	r1, r8, #1
   4be0c:	str	r1, [sp, #24]
   4be10:	ldr	r1, [r3], #4
   4be14:	str	r3, [sp, #92]	; 0x5c
   4be18:	str	r1, [sp, #48]	; 0x30
   4be1c:	b	4be64 <GetDataSlab+0x1bee4>
   4be20:	ldr	r1, [sp, #16]
   4be24:	ldr	r0, [r1, r0]
   4be28:	add	r5, r5, r0, lsl #3
   4be2c:	add	r6, r0, r6
   4be30:	ldr	r0, [sp, #52]	; 0x34
   4be34:	ldr	r1, [sp, #68]	; 0x44
   4be38:	mov	r2, #0
   4be3c:	str	r6, [sp, #76]	; 0x4c
   4be40:	str	r5, [sp, #64]	; 0x40
   4be44:	add	r1, r1, r0
   4be48:	ldr	r0, [sp, #72]	; 0x48
   4be4c:	str	r1, [sp, #68]	; 0x44
   4be50:	ldr	r1, [sp, #60]	; 0x3c
   4be54:	add	r1, r1, r8
   4be58:	cmp	r1, r0
   4be5c:	str	r1, [sp, #60]	; 0x3c
   4be60:	bge	56c1c <GetDataSlab+0x26c9c>
   4be64:	ldr	r5, [sp, #64]	; 0x40
   4be68:	cmp	r8, #1
   4be6c:	blt	4bfb8 <GetDataSlab+0x1c038>
   4be70:	mov	r0, #0
   4be74:	beq	4bf88 <GetDataSlab+0x1c008>
   4be78:	ldr	r0, [sp, #48]	; 0x30
   4be7c:	mov	r8, #0
   4be80:	add	r9, r5, r0, lsl #3
   4be84:	ldr	r0, [sp, #20]
   4be88:	str	r9, [sp, #36]	; 0x24
   4be8c:	cmp	r0, #0
   4be90:	beq	4bf1c <GetDataSlab+0x1bf9c>
   4be94:	ldr	r7, [sp, #68]	; 0x44
   4be98:	ldr	r4, [sp, #12]
   4be9c:	mov	r6, r9
   4bea0:	mov	r5, #16
   4bea4:	mov	sl, r7
   4bea8:	mov	r0, #32
   4beac:	vld1.64	{d8-d9}, [r6], r0
   4beb0:	vmov.32	r0, d9[0]
   4beb4:	vmov.32	r1, d9[1]
   4beb8:	bl	6b888 <__aeabi_ul2f>
   4bebc:	vmov.32	r2, d8[0]
   4bec0:	vmov.32	r1, d8[1]
   4bec4:	vmov	s17, r0
   4bec8:	mov	r0, r2
   4becc:	bl	6b888 <__aeabi_ul2f>
   4bed0:	vmov	s16, r0
   4bed4:	add	r0, r9, #16
   4bed8:	vst1.32	{d8}, [sl], r5
   4bedc:	vld1.64	{d8-d9}, [r0]
   4bee0:	vmov.32	r0, d9[0]
   4bee4:	vmov.32	r1, d9[1]
   4bee8:	bl	6b888 <__aeabi_ul2f>
   4beec:	vmov.32	r2, d8[0]
   4bef0:	vmov.32	r1, d8[1]
   4bef4:	vmov	s17, r0
   4bef8:	mov	r0, r2
   4befc:	bl	6b888 <__aeabi_ul2f>
   4bf00:	vmov	s16, r0
   4bf04:	subs	r4, r4, #2
   4bf08:	add	r8, r8, #4
   4bf0c:	mov	r9, r6
   4bf10:	vstr	d8, [r7, #8]
   4bf14:	mov	r7, sl
   4bf18:	bne	4bea8 <GetDataSlab+0x1bf28>
   4bf1c:	ldr	r0, [sp, #32]
   4bf20:	ldr	r9, [sp, #44]	; 0x2c
   4bf24:	ldr	sl, [sp, #28]
   4bf28:	cmp	r0, #0
   4bf2c:	beq	4bf74 <GetDataSlab+0x1bff4>
   4bf30:	ldr	r0, [sp, #88]	; 0x58
   4bf34:	ldr	r1, [sp, #60]	; 0x3c
   4bf38:	add	r4, r0, r1, lsl #2
   4bf3c:	ldr	r0, [sp, #36]	; 0x24
   4bf40:	add	r0, r0, r8, lsl #3
   4bf44:	vld1.64	{d8-d9}, [r0]
   4bf48:	vmov.32	r0, d9[0]
   4bf4c:	vmov.32	r1, d9[1]
   4bf50:	bl	6b888 <__aeabi_ul2f>
   4bf54:	vmov.32	r2, d8[0]
   4bf58:	vmov.32	r1, d8[1]
   4bf5c:	vmov	s17, r0
   4bf60:	mov	r0, r2
   4bf64:	bl	6b888 <__aeabi_ul2f>
   4bf68:	vmov	s16, r0
   4bf6c:	add	r0, r4, r8, lsl #2
   4bf70:	vstr	d8, [r0]
   4bf74:	ldr	r8, [sp, #56]	; 0x38
   4bf78:	ldr	r0, [sp, #24]
   4bf7c:	ldr	r5, [sp, #64]	; 0x40
   4bf80:	cmp	r8, r0
   4bf84:	beq	4bfb8 <GetDataSlab+0x1c038>
   4bf88:	ldr	r1, [sp, #68]	; 0x44
   4bf8c:	sub	r6, r8, r0
   4bf90:	add	r4, r1, r0, lsl #2
   4bf94:	ldr	r1, [sp, #48]	; 0x30
   4bf98:	add	r1, r5, r1, lsl #3
   4bf9c:	add	r7, r1, r0, lsl #3
   4bfa0:	ldrd	r0, [r7]
   4bfa4:	bl	6b888 <__aeabi_ul2f>
   4bfa8:	str	r0, [r4], #4
   4bfac:	add	r7, r7, #8
   4bfb0:	subs	r6, r6, #1
   4bfb4:	bne	4bfa0 <GetDataSlab+0x1c020>
   4bfb8:	ldr	r6, [sp, #76]	; 0x4c
   4bfbc:	ldr	r0, [fp, #24]
   4bfc0:	add	r5, r5, r9, lsl #3
   4bfc4:	add	r6, r6, r9
   4bfc8:	cmp	r0, #2
   4bfcc:	blt	4be30 <GetDataSlab+0x1beb0>
   4bfd0:	ldr	r1, [sp, #40]	; 0x28
   4bfd4:	ldr	lr, [sp, #92]	; 0x5c
   4bfd8:	mov	r0, #0
   4bfdc:	sub	ip, fp, #176	; 0xb0
   4bfe0:	b	4c010 <GetDataSlab+0x1c090>
   4bfe4:	mov	r4, r6
   4bfe8:	ldr	r7, [ip, r0]
   4bfec:	ldr	r6, [lr, r0]
   4bff0:	sub	r2, r2, r3
   4bff4:	mla	r2, r6, r7, r2
   4bff8:	mov	r6, r4
   4bffc:	add	r6, r2, r4
   4c000:	add	r5, r5, r2, lsl #3
   4c004:	subs	r1, r1, #1
   4c008:	add	r0, r0, #4
   4c00c:	beq	4be30 <GetDataSlab+0x1beb0>
   4c010:	ldr	r2, [sl, r0]
   4c014:	ldr	r3, [sp, #84]	; 0x54
   4c018:	add	r2, r2, #1
   4c01c:	str	r2, [sl, r0]
   4c020:	ldr	r3, [r3, r0]
   4c024:	sdiv	r7, r2, r3
   4c028:	mls	r2, r7, r3, r2
   4c02c:	cmp	r2, #0
   4c030:	bne	4be20 <GetDataSlab+0x1bea0>
   4c034:	mov	r2, #0
   4c038:	str	r2, [sl, r0]
   4c03c:	ldr	r2, [sp, #80]	; 0x50
   4c040:	ldr	r2, [r2, r0]
   4c044:	sdiv	r3, r6, r2
   4c048:	mls	r3, r3, r2, r6
   4c04c:	cmp	r3, #0
   4c050:	bne	4bfe4 <GetDataSlab+0x1c064>
   4c054:	ldr	r2, [lr, r0]
   4c058:	cmp	r2, #0
   4c05c:	beq	4c004 <GetDataSlab+0x1c084>
   4c060:	ldr	r3, [ip, r0]
   4c064:	mla	r6, r3, r2, r6
   4c068:	mul	r2, r3, r2
   4c06c:	b	4c000 <GetDataSlab+0x1c080>
   4c070:	ldr	r0, [sp, #76]	; 0x4c
   4c074:	ldr	r2, [fp, #20]
   4c078:	cmp	r0, #1
   4c07c:	sub	r0, fp, #176	; 0xb0
   4c080:	blt	56468 <GetDataSlab+0x264e8>
   4c084:	orr	r0, r0, #4
   4c088:	ldr	sl, [fp, #12]
   4c08c:	sub	r3, fp, #136	; 0x88
   4c090:	add	r2, r2, #4
   4c094:	str	r0, [sp, #80]	; 0x50
   4c098:	ldr	r0, [fp, #24]
   4c09c:	orr	lr, r3, #4
   4c0a0:	str	r2, [sp, #84]	; 0x54
   4c0a4:	sub	r0, r0, #1
   4c0a8:	str	r0, [sp, #60]	; 0x3c
   4c0ac:	sub	r0, fp, #96	; 0x60
   4c0b0:	orr	r0, r0, #4
   4c0b4:	str	r0, [sp, #56]	; 0x38
   4c0b8:	ldr	r0, [sl], #4
   4c0bc:	str	r0, [sp, #64]	; 0x40
   4c0c0:	mov	r0, #0
   4c0c4:	str	r0, [sp, #68]	; 0x44
   4c0c8:	b	4c0fc <GetDataSlab+0x1c17c>
   4c0cc:	ldr	r0, [sp, #56]	; 0x38
   4c0d0:	ldr	r0, [r0, r2]
   4c0d4:	add	r8, r8, r0
   4c0d8:	add	r7, r0, r7
   4c0dc:	ldr	r2, [sp, #68]	; 0x44
   4c0e0:	ldr	r0, [sp, #76]	; 0x4c
   4c0e4:	str	r6, [sp, #72]	; 0x48
   4c0e8:	add	r2, r1, r2
   4c0ec:	str	r2, [sp, #68]	; 0x44
   4c0f0:	cmp	r2, r0
   4c0f4:	mov	r2, #0
   4c0f8:	bge	56c1c <GetDataSlab+0x26c9c>
   4c0fc:	ldr	r0, [sp, #64]	; 0x40
   4c100:	cmp	r1, #1
   4c104:	add	r2, r0, r7
   4c108:	add	r7, r8, r0
   4c10c:	blt	4c160 <GetDataSlab+0x1c1e0>
   4c110:	ldr	r0, [sp, #88]	; 0x58
   4c114:	ldr	r1, [sp, #68]	; 0x44
   4c118:	ldr	ip, [fp, #8]
   4c11c:	ldr	r6, [fp, #16]
   4c120:	mov	r3, #0
   4c124:	add	r4, r0, r1
   4c128:	ldr	r0, [fp, #20]
   4c12c:	ldrb	r1, [r7]
   4c130:	strb	r1, [r4, r3]
   4c134:	add	r3, r3, #1
   4c138:	ldr	r5, [r6]
   4c13c:	ldr	r1, [r0]
   4c140:	add	r2, r5, r2
   4c144:	add	r7, r7, r5
   4c148:	cmp	r3, r1
   4c14c:	blt	4c12c <GetDataSlab+0x1c1ac>
   4c150:	ldr	r0, [fp, #12]
   4c154:	ldr	r6, [ip]
   4c158:	ldr	r0, [r0]
   4c15c:	b	4c164 <GetDataSlab+0x1c1e4>
   4c160:	ldr	r6, [sp, #72]	; 0x48
   4c164:	mls	r3, r5, r1, r6
   4c168:	str	r0, [sp, #64]	; 0x40
   4c16c:	sub	r3, r3, r0
   4c170:	ldr	r0, [fp, #24]
   4c174:	add	r8, r7, r3
   4c178:	add	r7, r3, r2
   4c17c:	cmp	r0, #2
   4c180:	blt	4c0dc <GetDataSlab+0x1c15c>
   4c184:	ldr	r9, [sp, #60]	; 0x3c
   4c188:	mov	r2, #0
   4c18c:	b	4c1b8 <GetDataSlab+0x1c238>
   4c190:	sub	r0, fp, #176	; 0xb0
   4c194:	ldr	r4, [sl, r2]
   4c198:	sub	r3, r3, ip
   4c19c:	ldr	r0, [r0, r2]
   4c1a0:	mla	r0, r4, r0, r3
   4c1a4:	add	r7, r0, r7
   4c1a8:	add	r8, r8, r0
   4c1ac:	subs	r9, r9, #1
   4c1b0:	add	r2, r2, #4
   4c1b4:	beq	4c0dc <GetDataSlab+0x1c15c>
   4c1b8:	ldr	r3, [lr, r2]
   4c1bc:	ldr	r0, [sp, #84]	; 0x54
   4c1c0:	add	r3, r3, #1
   4c1c4:	str	r3, [lr, r2]
   4c1c8:	ldr	r0, [r0, r2]
   4c1cc:	sdiv	r4, r3, r0
   4c1d0:	mls	r0, r4, r0, r3
   4c1d4:	cmp	r0, #0
   4c1d8:	bne	4c0cc <GetDataSlab+0x1c14c>
   4c1dc:	mov	r0, #0
   4c1e0:	str	r0, [lr, r2]
   4c1e4:	ldr	r0, [sp, #80]	; 0x50
   4c1e8:	ldr	r3, [r0, r2]
   4c1ec:	sdiv	r0, r7, r3
   4c1f0:	mls	ip, r0, r3, r7
   4c1f4:	cmp	ip, #0
   4c1f8:	bne	4c190 <GetDataSlab+0x1c210>
   4c1fc:	ldr	r3, [sl, r2]
   4c200:	cmp	r3, #0
   4c204:	beq	4c1ac <GetDataSlab+0x1c22c>
   4c208:	sub	r0, fp, #176	; 0xb0
   4c20c:	ldr	r0, [r0, r2]
   4c210:	mla	r7, r0, r3, r7
   4c214:	mla	r8, r0, r3, r8
   4c218:	b	4c1ac <GetDataSlab+0x1c22c>
   4c21c:	ldr	r0, [sp, #76]	; 0x4c
   4c220:	ldr	r2, [fp, #20]
   4c224:	cmp	r0, #1
   4c228:	sub	r0, fp, #176	; 0xb0
   4c22c:	blt	56468 <GetDataSlab+0x264e8>
   4c230:	orr	r0, r0, #4
   4c234:	ldr	lr, [fp, #12]
   4c238:	mov	r3, r8
   4c23c:	sub	r6, fp, #136	; 0x88
   4c240:	add	r2, r2, #4
   4c244:	str	r0, [sp, #80]	; 0x50
   4c248:	ldr	r0, [fp, #24]
   4c24c:	orr	r8, r6, #4
   4c250:	str	r2, [sp, #84]	; 0x54
   4c254:	sub	r0, r0, #1
   4c258:	str	r0, [sp, #60]	; 0x3c
   4c25c:	orr	r0, r3, #4
   4c260:	str	r0, [sp, #56]	; 0x38
   4c264:	ldr	r0, [lr], #4
   4c268:	str	r0, [sp, #64]	; 0x40
   4c26c:	mov	r0, #0
   4c270:	str	r0, [sp, #68]	; 0x44
   4c274:	b	4c2a8 <GetDataSlab+0x1c328>
   4c278:	ldr	r0, [sp, #56]	; 0x38
   4c27c:	ldr	r0, [r0, r2]
   4c280:	add	sl, sl, r0, lsl #1
   4c284:	add	r7, r0, r7
   4c288:	ldr	r2, [sp, #68]	; 0x44
   4c28c:	ldr	r0, [sp, #76]	; 0x4c
   4c290:	str	r6, [sp, #72]	; 0x48
   4c294:	add	r2, r1, r2
   4c298:	str	r2, [sp, #68]	; 0x44
   4c29c:	cmp	r2, r0
   4c2a0:	mov	r2, #0
   4c2a4:	bge	56c1c <GetDataSlab+0x26c9c>
   4c2a8:	ldr	r0, [sp, #64]	; 0x40
   4c2ac:	cmp	r1, #1
   4c2b0:	add	r2, r0, r7
   4c2b4:	add	r7, sl, r0, lsl #1
   4c2b8:	blt	4c30c <GetDataSlab+0x1c38c>
   4c2bc:	ldr	r0, [sp, #88]	; 0x58
   4c2c0:	ldr	r1, [sp, #68]	; 0x44
   4c2c4:	ldr	ip, [fp, #8]
   4c2c8:	ldr	r6, [fp, #16]
   4c2cc:	mov	r3, #0
   4c2d0:	add	r4, r0, r1
   4c2d4:	ldr	r0, [fp, #20]
   4c2d8:	ldrb	r1, [r7]
   4c2dc:	strb	r1, [r4, r3]
   4c2e0:	add	r3, r3, #1
   4c2e4:	ldr	r5, [r6]
   4c2e8:	ldr	r1, [r0]
   4c2ec:	add	r7, r7, r5, lsl #1
   4c2f0:	add	r2, r5, r2
   4c2f4:	cmp	r3, r1
   4c2f8:	blt	4c2d8 <GetDataSlab+0x1c358>
   4c2fc:	ldr	r0, [fp, #12]
   4c300:	ldr	r6, [ip]
   4c304:	ldr	r0, [r0]
   4c308:	b	4c310 <GetDataSlab+0x1c390>
   4c30c:	ldr	r6, [sp, #72]	; 0x48
   4c310:	mls	r3, r5, r1, r6
   4c314:	str	r0, [sp, #64]	; 0x40
   4c318:	sub	r3, r3, r0
   4c31c:	ldr	r0, [fp, #24]
   4c320:	add	sl, r7, r3, lsl #1
   4c324:	add	r7, r3, r2
   4c328:	cmp	r0, #2
   4c32c:	blt	4c288 <GetDataSlab+0x1c308>
   4c330:	ldr	r9, [sp, #60]	; 0x3c
   4c334:	mov	r2, #0
   4c338:	b	4c364 <GetDataSlab+0x1c3e4>
   4c33c:	sub	r0, fp, #176	; 0xb0
   4c340:	ldr	r4, [lr, r2]
   4c344:	sub	r3, r3, ip
   4c348:	ldr	r0, [r0, r2]
   4c34c:	mla	r0, r4, r0, r3
   4c350:	add	r7, r0, r7
   4c354:	add	sl, sl, r0, lsl #1
   4c358:	subs	r9, r9, #1
   4c35c:	add	r2, r2, #4
   4c360:	beq	4c288 <GetDataSlab+0x1c308>
   4c364:	ldr	r3, [r8, r2]
   4c368:	ldr	r0, [sp, #84]	; 0x54
   4c36c:	add	r3, r3, #1
   4c370:	str	r3, [r8, r2]
   4c374:	ldr	r0, [r0, r2]
   4c378:	sdiv	r4, r3, r0
   4c37c:	mls	r0, r4, r0, r3
   4c380:	cmp	r0, #0
   4c384:	bne	4c278 <GetDataSlab+0x1c2f8>
   4c388:	mov	r0, #0
   4c38c:	str	r0, [r8, r2]
   4c390:	ldr	r0, [sp, #80]	; 0x50
   4c394:	ldr	r3, [r0, r2]
   4c398:	sdiv	r0, r7, r3
   4c39c:	mls	ip, r0, r3, r7
   4c3a0:	cmp	ip, #0
   4c3a4:	bne	4c33c <GetDataSlab+0x1c3bc>
   4c3a8:	ldr	r3, [lr, r2]
   4c3ac:	cmp	r3, #0
   4c3b0:	beq	4c358 <GetDataSlab+0x1c3d8>
   4c3b4:	sub	r0, fp, #176	; 0xb0
   4c3b8:	ldr	r0, [r0, r2]
   4c3bc:	mla	r7, r0, r3, r7
   4c3c0:	mul	r0, r0, r3
   4c3c4:	b	4c354 <GetDataSlab+0x1c3d4>
   4c3c8:	ldr	r0, [sp, #76]	; 0x4c
   4c3cc:	ldr	r2, [fp, #20]
   4c3d0:	cmp	r0, #1
   4c3d4:	sub	r0, fp, #176	; 0xb0
   4c3d8:	blt	56468 <GetDataSlab+0x264e8>
   4c3dc:	orr	r0, r0, #4
   4c3e0:	ldr	lr, [fp, #12]
   4c3e4:	mov	r3, r8
   4c3e8:	sub	r6, fp, #136	; 0x88
   4c3ec:	add	r2, r2, #4
   4c3f0:	str	r0, [sp, #80]	; 0x50
   4c3f4:	ldr	r0, [fp, #24]
   4c3f8:	orr	r8, r6, #4
   4c3fc:	str	r2, [sp, #84]	; 0x54
   4c400:	sub	r0, r0, #1
   4c404:	str	r0, [sp, #60]	; 0x3c
   4c408:	orr	r0, r3, #4
   4c40c:	str	r0, [sp, #56]	; 0x38
   4c410:	ldr	r0, [lr], #4
   4c414:	str	r0, [sp, #64]	; 0x40
   4c418:	mov	r0, #0
   4c41c:	str	r0, [sp, #68]	; 0x44
   4c420:	b	4c454 <GetDataSlab+0x1c4d4>
   4c424:	ldr	r0, [sp, #56]	; 0x38
   4c428:	ldr	r0, [r0, r2]
   4c42c:	add	sl, sl, r0, lsl #1
   4c430:	add	r7, r0, r7
   4c434:	ldr	r2, [sp, #68]	; 0x44
   4c438:	ldr	r0, [sp, #76]	; 0x4c
   4c43c:	str	r6, [sp, #72]	; 0x48
   4c440:	add	r2, r1, r2
   4c444:	str	r2, [sp, #68]	; 0x44
   4c448:	cmp	r2, r0
   4c44c:	mov	r2, #0
   4c450:	bge	56c1c <GetDataSlab+0x26c9c>
   4c454:	ldr	r0, [sp, #64]	; 0x40
   4c458:	cmp	r1, #1
   4c45c:	add	r2, r0, r7
   4c460:	add	r7, sl, r0, lsl #1
   4c464:	blt	4c4b8 <GetDataSlab+0x1c538>
   4c468:	ldr	r0, [sp, #88]	; 0x58
   4c46c:	ldr	r1, [sp, #68]	; 0x44
   4c470:	ldr	ip, [fp, #8]
   4c474:	ldr	r6, [fp, #16]
   4c478:	mov	r3, #0
   4c47c:	add	r4, r0, r1
   4c480:	ldr	r0, [fp, #20]
   4c484:	ldrb	r1, [r7]
   4c488:	strb	r1, [r4, r3]
   4c48c:	add	r3, r3, #1
   4c490:	ldr	r5, [r6]
   4c494:	ldr	r1, [r0]
   4c498:	add	r7, r7, r5, lsl #1
   4c49c:	add	r2, r5, r2
   4c4a0:	cmp	r3, r1
   4c4a4:	blt	4c484 <GetDataSlab+0x1c504>
   4c4a8:	ldr	r0, [fp, #12]
   4c4ac:	ldr	r6, [ip]
   4c4b0:	ldr	r0, [r0]
   4c4b4:	b	4c4bc <GetDataSlab+0x1c53c>
   4c4b8:	ldr	r6, [sp, #72]	; 0x48
   4c4bc:	mls	r3, r5, r1, r6
   4c4c0:	str	r0, [sp, #64]	; 0x40
   4c4c4:	sub	r3, r3, r0
   4c4c8:	ldr	r0, [fp, #24]
   4c4cc:	add	sl, r7, r3, lsl #1
   4c4d0:	add	r7, r3, r2
   4c4d4:	cmp	r0, #2
   4c4d8:	blt	4c434 <GetDataSlab+0x1c4b4>
   4c4dc:	ldr	r9, [sp, #60]	; 0x3c
   4c4e0:	mov	r2, #0
   4c4e4:	b	4c510 <GetDataSlab+0x1c590>
   4c4e8:	sub	r0, fp, #176	; 0xb0
   4c4ec:	ldr	r4, [lr, r2]
   4c4f0:	sub	r3, r3, ip
   4c4f4:	ldr	r0, [r0, r2]
   4c4f8:	mla	r0, r4, r0, r3
   4c4fc:	add	r7, r0, r7
   4c500:	add	sl, sl, r0, lsl #1
   4c504:	subs	r9, r9, #1
   4c508:	add	r2, r2, #4
   4c50c:	beq	4c434 <GetDataSlab+0x1c4b4>
   4c510:	ldr	r3, [r8, r2]
   4c514:	ldr	r0, [sp, #84]	; 0x54
   4c518:	add	r3, r3, #1
   4c51c:	str	r3, [r8, r2]
   4c520:	ldr	r0, [r0, r2]
   4c524:	sdiv	r4, r3, r0
   4c528:	mls	r0, r4, r0, r3
   4c52c:	cmp	r0, #0
   4c530:	bne	4c424 <GetDataSlab+0x1c4a4>
   4c534:	mov	r0, #0
   4c538:	str	r0, [r8, r2]
   4c53c:	ldr	r0, [sp, #80]	; 0x50
   4c540:	ldr	r3, [r0, r2]
   4c544:	sdiv	r0, r7, r3
   4c548:	mls	ip, r0, r3, r7
   4c54c:	cmp	ip, #0
   4c550:	bne	4c4e8 <GetDataSlab+0x1c568>
   4c554:	ldr	r3, [lr, r2]
   4c558:	cmp	r3, #0
   4c55c:	beq	4c504 <GetDataSlab+0x1c584>
   4c560:	sub	r0, fp, #176	; 0xb0
   4c564:	ldr	r0, [r0, r2]
   4c568:	mla	r7, r0, r3, r7
   4c56c:	mul	r0, r0, r3
   4c570:	b	4c500 <GetDataSlab+0x1c580>
   4c574:	ldr	r0, [sp, #76]	; 0x4c
   4c578:	ldr	r2, [fp, #20]
   4c57c:	cmp	r0, #1
   4c580:	sub	r0, fp, #176	; 0xb0
   4c584:	blt	56468 <GetDataSlab+0x264e8>
   4c588:	orr	r0, r0, #4
   4c58c:	ldr	sl, [fp, #12]
   4c590:	sub	r3, fp, #136	; 0x88
   4c594:	add	r2, r2, #4
   4c598:	str	r0, [sp, #80]	; 0x50
   4c59c:	ldr	r0, [fp, #24]
   4c5a0:	orr	lr, r3, #4
   4c5a4:	str	r2, [sp, #84]	; 0x54
   4c5a8:	sub	r0, r0, #1
   4c5ac:	str	r0, [sp, #60]	; 0x3c
   4c5b0:	sub	r0, fp, #96	; 0x60
   4c5b4:	orr	r0, r0, #4
   4c5b8:	str	r0, [sp, #56]	; 0x38
   4c5bc:	ldr	r0, [sl], #4
   4c5c0:	str	r0, [sp, #64]	; 0x40
   4c5c4:	mov	r0, #0
   4c5c8:	str	r0, [sp, #68]	; 0x44
   4c5cc:	b	4c600 <GetDataSlab+0x1c680>
   4c5d0:	ldr	r0, [sp, #56]	; 0x38
   4c5d4:	ldr	r0, [r0, r2]
   4c5d8:	add	r8, r8, r0, lsl #2
   4c5dc:	add	r7, r0, r7
   4c5e0:	ldr	r2, [sp, #68]	; 0x44
   4c5e4:	ldr	r0, [sp, #76]	; 0x4c
   4c5e8:	str	r6, [sp, #72]	; 0x48
   4c5ec:	add	r2, r1, r2
   4c5f0:	str	r2, [sp, #68]	; 0x44
   4c5f4:	cmp	r2, r0
   4c5f8:	mov	r2, #0
   4c5fc:	bge	56c1c <GetDataSlab+0x26c9c>
   4c600:	ldr	r0, [sp, #64]	; 0x40
   4c604:	cmp	r1, #1
   4c608:	add	r2, r0, r7
   4c60c:	add	r7, r8, r0, lsl #2
   4c610:	blt	4c664 <GetDataSlab+0x1c6e4>
   4c614:	ldr	r0, [sp, #88]	; 0x58
   4c618:	ldr	r1, [sp, #68]	; 0x44
   4c61c:	ldr	ip, [fp, #8]
   4c620:	ldr	r6, [fp, #16]
   4c624:	mov	r3, #0
   4c628:	add	r4, r0, r1
   4c62c:	ldr	r0, [fp, #20]
   4c630:	ldr	r1, [r7]
   4c634:	strb	r1, [r4, r3]
   4c638:	add	r3, r3, #1
   4c63c:	ldr	r5, [r6]
   4c640:	ldr	r1, [r0]
   4c644:	add	r7, r7, r5, lsl #2
   4c648:	add	r2, r5, r2
   4c64c:	cmp	r3, r1
   4c650:	blt	4c630 <GetDataSlab+0x1c6b0>
   4c654:	ldr	r0, [fp, #12]
   4c658:	ldr	r6, [ip]
   4c65c:	ldr	r0, [r0]
   4c660:	b	4c668 <GetDataSlab+0x1c6e8>
   4c664:	ldr	r6, [sp, #72]	; 0x48
   4c668:	mls	r3, r5, r1, r6
   4c66c:	str	r0, [sp, #64]	; 0x40
   4c670:	sub	r3, r3, r0
   4c674:	ldr	r0, [fp, #24]
   4c678:	add	r8, r7, r3, lsl #2
   4c67c:	add	r7, r3, r2
   4c680:	cmp	r0, #2
   4c684:	blt	4c5e0 <GetDataSlab+0x1c660>
   4c688:	ldr	r9, [sp, #60]	; 0x3c
   4c68c:	mov	r2, #0
   4c690:	b	4c6bc <GetDataSlab+0x1c73c>
   4c694:	sub	r0, fp, #176	; 0xb0
   4c698:	ldr	r4, [sl, r2]
   4c69c:	sub	r3, r3, ip
   4c6a0:	ldr	r0, [r0, r2]
   4c6a4:	mla	r0, r4, r0, r3
   4c6a8:	add	r7, r0, r7
   4c6ac:	add	r8, r8, r0, lsl #2
   4c6b0:	subs	r9, r9, #1
   4c6b4:	add	r2, r2, #4
   4c6b8:	beq	4c5e0 <GetDataSlab+0x1c660>
   4c6bc:	ldr	r3, [lr, r2]
   4c6c0:	ldr	r0, [sp, #84]	; 0x54
   4c6c4:	add	r3, r3, #1
   4c6c8:	str	r3, [lr, r2]
   4c6cc:	ldr	r0, [r0, r2]
   4c6d0:	sdiv	r4, r3, r0
   4c6d4:	mls	r0, r4, r0, r3
   4c6d8:	cmp	r0, #0
   4c6dc:	bne	4c5d0 <GetDataSlab+0x1c650>
   4c6e0:	mov	r0, #0
   4c6e4:	str	r0, [lr, r2]
   4c6e8:	ldr	r0, [sp, #80]	; 0x50
   4c6ec:	ldr	r3, [r0, r2]
   4c6f0:	sdiv	r0, r7, r3
   4c6f4:	mls	ip, r0, r3, r7
   4c6f8:	cmp	ip, #0
   4c6fc:	bne	4c694 <GetDataSlab+0x1c714>
   4c700:	ldr	r3, [sl, r2]
   4c704:	cmp	r3, #0
   4c708:	beq	4c6b0 <GetDataSlab+0x1c730>
   4c70c:	sub	r0, fp, #176	; 0xb0
   4c710:	ldr	r0, [r0, r2]
   4c714:	mla	r7, r0, r3, r7
   4c718:	mul	r0, r0, r3
   4c71c:	b	4c6ac <GetDataSlab+0x1c72c>
   4c720:	ldr	r0, [sp, #76]	; 0x4c
   4c724:	ldr	r2, [fp, #20]
   4c728:	cmp	r0, #1
   4c72c:	sub	r0, fp, #176	; 0xb0
   4c730:	blt	56468 <GetDataSlab+0x264e8>
   4c734:	orr	r0, r0, #4
   4c738:	ldr	sl, [fp, #12]
   4c73c:	sub	r3, fp, #136	; 0x88
   4c740:	add	r2, r2, #4
   4c744:	str	r0, [sp, #80]	; 0x50
   4c748:	ldr	r0, [fp, #24]
   4c74c:	orr	lr, r3, #4
   4c750:	str	r2, [sp, #84]	; 0x54
   4c754:	sub	r0, r0, #1
   4c758:	str	r0, [sp, #60]	; 0x3c
   4c75c:	sub	r0, fp, #96	; 0x60
   4c760:	orr	r0, r0, #4
   4c764:	str	r0, [sp, #56]	; 0x38
   4c768:	ldr	r0, [sl], #4
   4c76c:	str	r0, [sp, #64]	; 0x40
   4c770:	mov	r0, #0
   4c774:	str	r0, [sp, #68]	; 0x44
   4c778:	b	4c7ac <GetDataSlab+0x1c82c>
   4c77c:	ldr	r0, [sp, #56]	; 0x38
   4c780:	ldr	r0, [r0, r2]
   4c784:	add	r8, r8, r0, lsl #2
   4c788:	add	r7, r0, r7
   4c78c:	ldr	r2, [sp, #68]	; 0x44
   4c790:	ldr	r0, [sp, #76]	; 0x4c
   4c794:	str	r6, [sp, #72]	; 0x48
   4c798:	add	r2, r1, r2
   4c79c:	str	r2, [sp, #68]	; 0x44
   4c7a0:	cmp	r2, r0
   4c7a4:	mov	r2, #0
   4c7a8:	bge	56c1c <GetDataSlab+0x26c9c>
   4c7ac:	ldr	r0, [sp, #64]	; 0x40
   4c7b0:	cmp	r1, #1
   4c7b4:	add	r2, r0, r7
   4c7b8:	add	r7, r8, r0, lsl #2
   4c7bc:	blt	4c810 <GetDataSlab+0x1c890>
   4c7c0:	ldr	r0, [sp, #88]	; 0x58
   4c7c4:	ldr	r1, [sp, #68]	; 0x44
   4c7c8:	ldr	ip, [fp, #8]
   4c7cc:	ldr	r6, [fp, #16]
   4c7d0:	mov	r3, #0
   4c7d4:	add	r4, r0, r1
   4c7d8:	ldr	r0, [fp, #20]
   4c7dc:	ldr	r1, [r7]
   4c7e0:	strb	r1, [r4, r3]
   4c7e4:	add	r3, r3, #1
   4c7e8:	ldr	r5, [r6]
   4c7ec:	ldr	r1, [r0]
   4c7f0:	add	r7, r7, r5, lsl #2
   4c7f4:	add	r2, r5, r2
   4c7f8:	cmp	r3, r1
   4c7fc:	blt	4c7dc <GetDataSlab+0x1c85c>
   4c800:	ldr	r0, [fp, #12]
   4c804:	ldr	r6, [ip]
   4c808:	ldr	r0, [r0]
   4c80c:	b	4c814 <GetDataSlab+0x1c894>
   4c810:	ldr	r6, [sp, #72]	; 0x48
   4c814:	mls	r3, r5, r1, r6
   4c818:	str	r0, [sp, #64]	; 0x40
   4c81c:	sub	r3, r3, r0
   4c820:	ldr	r0, [fp, #24]
   4c824:	add	r8, r7, r3, lsl #2
   4c828:	add	r7, r3, r2
   4c82c:	cmp	r0, #2
   4c830:	blt	4c78c <GetDataSlab+0x1c80c>
   4c834:	ldr	r9, [sp, #60]	; 0x3c
   4c838:	mov	r2, #0
   4c83c:	b	4c868 <GetDataSlab+0x1c8e8>
   4c840:	sub	r0, fp, #176	; 0xb0
   4c844:	ldr	r4, [sl, r2]
   4c848:	sub	r3, r3, ip
   4c84c:	ldr	r0, [r0, r2]
   4c850:	mla	r0, r4, r0, r3
   4c854:	add	r7, r0, r7
   4c858:	add	r8, r8, r0, lsl #2
   4c85c:	subs	r9, r9, #1
   4c860:	add	r2, r2, #4
   4c864:	beq	4c78c <GetDataSlab+0x1c80c>
   4c868:	ldr	r3, [lr, r2]
   4c86c:	ldr	r0, [sp, #84]	; 0x54
   4c870:	add	r3, r3, #1
   4c874:	str	r3, [lr, r2]
   4c878:	ldr	r0, [r0, r2]
   4c87c:	sdiv	r4, r3, r0
   4c880:	mls	r0, r4, r0, r3
   4c884:	cmp	r0, #0
   4c888:	bne	4c77c <GetDataSlab+0x1c7fc>
   4c88c:	mov	r0, #0
   4c890:	str	r0, [lr, r2]
   4c894:	ldr	r0, [sp, #80]	; 0x50
   4c898:	ldr	r3, [r0, r2]
   4c89c:	sdiv	r0, r7, r3
   4c8a0:	mls	ip, r0, r3, r7
   4c8a4:	cmp	ip, #0
   4c8a8:	bne	4c840 <GetDataSlab+0x1c8c0>
   4c8ac:	ldr	r3, [sl, r2]
   4c8b0:	cmp	r3, #0
   4c8b4:	beq	4c85c <GetDataSlab+0x1c8dc>
   4c8b8:	sub	r0, fp, #176	; 0xb0
   4c8bc:	ldr	r0, [r0, r2]
   4c8c0:	mla	r7, r0, r3, r7
   4c8c4:	mul	r0, r0, r3
   4c8c8:	b	4c858 <GetDataSlab+0x1c8d8>
   4c8cc:	ldr	r0, [sp, #76]	; 0x4c
   4c8d0:	ldr	r2, [fp, #20]
   4c8d4:	cmp	r0, #1
   4c8d8:	sub	r0, fp, #176	; 0xb0
   4c8dc:	blt	56468 <GetDataSlab+0x264e8>
   4c8e0:	orr	r0, r0, #4
   4c8e4:	ldr	lr, [fp, #12]
   4c8e8:	mov	r3, r8
   4c8ec:	sub	r6, fp, #136	; 0x88
   4c8f0:	add	r2, r2, #4
   4c8f4:	str	r0, [sp, #80]	; 0x50
   4c8f8:	ldr	r0, [fp, #24]
   4c8fc:	orr	r8, r6, #4
   4c900:	str	r2, [sp, #84]	; 0x54
   4c904:	sub	r0, r0, #1
   4c908:	str	r0, [sp, #60]	; 0x3c
   4c90c:	orr	r0, r3, #4
   4c910:	str	r0, [sp, #56]	; 0x38
   4c914:	ldr	r0, [lr], #4
   4c918:	str	r0, [sp, #64]	; 0x40
   4c91c:	mov	r0, #0
   4c920:	str	r0, [sp, #68]	; 0x44
   4c924:	b	4c958 <GetDataSlab+0x1c9d8>
   4c928:	ldr	r0, [sp, #56]	; 0x38
   4c92c:	ldr	r0, [r0, r2]
   4c930:	add	sl, sl, r0, lsl #2
   4c934:	add	r7, r0, r7
   4c938:	ldr	r2, [sp, #68]	; 0x44
   4c93c:	ldr	r0, [sp, #76]	; 0x4c
   4c940:	str	r6, [sp, #72]	; 0x48
   4c944:	add	r2, r1, r2
   4c948:	str	r2, [sp, #68]	; 0x44
   4c94c:	cmp	r2, r0
   4c950:	mov	r2, #0
   4c954:	bge	56c1c <GetDataSlab+0x26c9c>
   4c958:	ldr	r0, [sp, #64]	; 0x40
   4c95c:	cmp	r1, #1
   4c960:	add	r2, r0, r7
   4c964:	add	r7, sl, r0, lsl #2
   4c968:	blt	4c9c4 <GetDataSlab+0x1ca44>
   4c96c:	ldr	r0, [sp, #88]	; 0x58
   4c970:	ldr	r1, [sp, #68]	; 0x44
   4c974:	ldr	ip, [fp, #8]
   4c978:	ldr	r6, [fp, #16]
   4c97c:	mov	r3, #0
   4c980:	add	r4, r0, r1
   4c984:	ldr	r0, [fp, #20]
   4c988:	vldr	s0, [r7]
   4c98c:	vcvt.s32.f32	s0, s0
   4c990:	vmov	r1, s0
   4c994:	strb	r1, [r4, r3]
   4c998:	add	r3, r3, #1
   4c99c:	ldr	r5, [r6]
   4c9a0:	ldr	r1, [r0]
   4c9a4:	add	r7, r7, r5, lsl #2
   4c9a8:	add	r2, r5, r2
   4c9ac:	cmp	r3, r1
   4c9b0:	blt	4c988 <GetDataSlab+0x1ca08>
   4c9b4:	ldr	r0, [fp, #12]
   4c9b8:	ldr	r6, [ip]
   4c9bc:	ldr	r0, [r0]
   4c9c0:	b	4c9c8 <GetDataSlab+0x1ca48>
   4c9c4:	ldr	r6, [sp, #72]	; 0x48
   4c9c8:	mls	r3, r5, r1, r6
   4c9cc:	str	r0, [sp, #64]	; 0x40
   4c9d0:	sub	r3, r3, r0
   4c9d4:	ldr	r0, [fp, #24]
   4c9d8:	add	sl, r7, r3, lsl #2
   4c9dc:	add	r7, r3, r2
   4c9e0:	cmp	r0, #2
   4c9e4:	blt	4c938 <GetDataSlab+0x1c9b8>
   4c9e8:	ldr	r9, [sp, #60]	; 0x3c
   4c9ec:	mov	r2, #0
   4c9f0:	b	4ca1c <GetDataSlab+0x1ca9c>
   4c9f4:	sub	r0, fp, #176	; 0xb0
   4c9f8:	ldr	r4, [lr, r2]
   4c9fc:	sub	r3, r3, ip
   4ca00:	ldr	r0, [r0, r2]
   4ca04:	mla	r0, r4, r0, r3
   4ca08:	add	r7, r0, r7
   4ca0c:	add	sl, sl, r0, lsl #2
   4ca10:	subs	r9, r9, #1
   4ca14:	add	r2, r2, #4
   4ca18:	beq	4c938 <GetDataSlab+0x1c9b8>
   4ca1c:	ldr	r3, [r8, r2]
   4ca20:	ldr	r0, [sp, #84]	; 0x54
   4ca24:	add	r3, r3, #1
   4ca28:	str	r3, [r8, r2]
   4ca2c:	ldr	r0, [r0, r2]
   4ca30:	sdiv	r4, r3, r0
   4ca34:	mls	r0, r4, r0, r3
   4ca38:	cmp	r0, #0
   4ca3c:	bne	4c928 <GetDataSlab+0x1c9a8>
   4ca40:	mov	r0, #0
   4ca44:	str	r0, [r8, r2]
   4ca48:	ldr	r0, [sp, #80]	; 0x50
   4ca4c:	ldr	r3, [r0, r2]
   4ca50:	sdiv	r0, r7, r3
   4ca54:	mls	ip, r0, r3, r7
   4ca58:	cmp	ip, #0
   4ca5c:	bne	4c9f4 <GetDataSlab+0x1ca74>
   4ca60:	ldr	r3, [lr, r2]
   4ca64:	cmp	r3, #0
   4ca68:	beq	4ca10 <GetDataSlab+0x1ca90>
   4ca6c:	sub	r0, fp, #176	; 0xb0
   4ca70:	ldr	r0, [r0, r2]
   4ca74:	mla	r7, r0, r3, r7
   4ca78:	mul	r0, r0, r3
   4ca7c:	b	4ca0c <GetDataSlab+0x1ca8c>
   4ca80:	ldr	r0, [sp, #76]	; 0x4c
   4ca84:	ldr	r2, [fp, #20]
   4ca88:	cmp	r0, #1
   4ca8c:	sub	r0, fp, #176	; 0xb0
   4ca90:	blt	56468 <GetDataSlab+0x264e8>
   4ca94:	orr	r0, r0, #4
   4ca98:	ldr	lr, [fp, #12]
   4ca9c:	mov	r3, r8
   4caa0:	sub	r6, fp, #136	; 0x88
   4caa4:	add	r2, r2, #4
   4caa8:	str	r0, [sp, #80]	; 0x50
   4caac:	ldr	r0, [fp, #24]
   4cab0:	orr	r8, r6, #4
   4cab4:	str	r2, [sp, #84]	; 0x54
   4cab8:	sub	r0, r0, #1
   4cabc:	str	r0, [sp, #60]	; 0x3c
   4cac0:	orr	r0, r3, #4
   4cac4:	str	r0, [sp, #56]	; 0x38
   4cac8:	ldr	r0, [lr], #4
   4cacc:	str	r0, [sp, #64]	; 0x40
   4cad0:	mov	r0, #0
   4cad4:	str	r0, [sp, #68]	; 0x44
   4cad8:	b	4cb0c <GetDataSlab+0x1cb8c>
   4cadc:	ldr	r0, [sp, #56]	; 0x38
   4cae0:	ldr	r0, [r0, r2]
   4cae4:	add	sl, sl, r0, lsl #3
   4cae8:	add	r7, r0, r7
   4caec:	ldr	r2, [sp, #68]	; 0x44
   4caf0:	ldr	r0, [sp, #76]	; 0x4c
   4caf4:	str	r6, [sp, #72]	; 0x48
   4caf8:	add	r2, r1, r2
   4cafc:	str	r2, [sp, #68]	; 0x44
   4cb00:	cmp	r2, r0
   4cb04:	mov	r2, #0
   4cb08:	bge	56c1c <GetDataSlab+0x26c9c>
   4cb0c:	ldr	r0, [sp, #64]	; 0x40
   4cb10:	cmp	r1, #1
   4cb14:	add	r2, r0, r7
   4cb18:	add	r7, sl, r0, lsl #3
   4cb1c:	blt	4cb78 <GetDataSlab+0x1cbf8>
   4cb20:	ldr	r0, [sp, #88]	; 0x58
   4cb24:	ldr	r1, [sp, #68]	; 0x44
   4cb28:	ldr	ip, [fp, #8]
   4cb2c:	ldr	r6, [fp, #16]
   4cb30:	mov	r3, #0
   4cb34:	add	r4, r0, r1
   4cb38:	ldr	r0, [fp, #20]
   4cb3c:	vldr	d16, [r7]
   4cb40:	vcvt.s32.f64	s0, d16
   4cb44:	vmov	r1, s0
   4cb48:	strb	r1, [r4, r3]
   4cb4c:	add	r3, r3, #1
   4cb50:	ldr	r5, [r6]
   4cb54:	ldr	r1, [r0]
   4cb58:	add	r7, r7, r5, lsl #3
   4cb5c:	add	r2, r5, r2
   4cb60:	cmp	r3, r1
   4cb64:	blt	4cb3c <GetDataSlab+0x1cbbc>
   4cb68:	ldr	r0, [fp, #12]
   4cb6c:	ldr	r6, [ip]
   4cb70:	ldr	r0, [r0]
   4cb74:	b	4cb7c <GetDataSlab+0x1cbfc>
   4cb78:	ldr	r6, [sp, #72]	; 0x48
   4cb7c:	mls	r3, r5, r1, r6
   4cb80:	str	r0, [sp, #64]	; 0x40
   4cb84:	sub	r3, r3, r0
   4cb88:	ldr	r0, [fp, #24]
   4cb8c:	add	sl, r7, r3, lsl #3
   4cb90:	add	r7, r3, r2
   4cb94:	cmp	r0, #2
   4cb98:	blt	4caec <GetDataSlab+0x1cb6c>
   4cb9c:	ldr	r9, [sp, #60]	; 0x3c
   4cba0:	mov	r2, #0
   4cba4:	b	4cbd0 <GetDataSlab+0x1cc50>
   4cba8:	sub	r0, fp, #176	; 0xb0
   4cbac:	ldr	r4, [lr, r2]
   4cbb0:	sub	r3, r3, ip
   4cbb4:	ldr	r0, [r0, r2]
   4cbb8:	mla	r0, r4, r0, r3
   4cbbc:	add	r7, r0, r7
   4cbc0:	add	sl, sl, r0, lsl #3
   4cbc4:	subs	r9, r9, #1
   4cbc8:	add	r2, r2, #4
   4cbcc:	beq	4caec <GetDataSlab+0x1cb6c>
   4cbd0:	ldr	r3, [r8, r2]
   4cbd4:	ldr	r0, [sp, #84]	; 0x54
   4cbd8:	add	r3, r3, #1
   4cbdc:	str	r3, [r8, r2]
   4cbe0:	ldr	r0, [r0, r2]
   4cbe4:	sdiv	r4, r3, r0
   4cbe8:	mls	r0, r4, r0, r3
   4cbec:	cmp	r0, #0
   4cbf0:	bne	4cadc <GetDataSlab+0x1cb5c>
   4cbf4:	mov	r0, #0
   4cbf8:	str	r0, [r8, r2]
   4cbfc:	ldr	r0, [sp, #80]	; 0x50
   4cc00:	ldr	r3, [r0, r2]
   4cc04:	sdiv	r0, r7, r3
   4cc08:	mls	ip, r0, r3, r7
   4cc0c:	cmp	ip, #0
   4cc10:	bne	4cba8 <GetDataSlab+0x1cc28>
   4cc14:	ldr	r3, [lr, r2]
   4cc18:	cmp	r3, #0
   4cc1c:	beq	4cbc4 <GetDataSlab+0x1cc44>
   4cc20:	sub	r0, fp, #176	; 0xb0
   4cc24:	ldr	r0, [r0, r2]
   4cc28:	mla	r7, r0, r3, r7
   4cc2c:	mul	r0, r0, r3
   4cc30:	b	4cbc0 <GetDataSlab+0x1cc40>
   4cc34:	ldr	r0, [sp, #68]	; 0x44
   4cc38:	ldr	r6, [fp, #16]
   4cc3c:	cmp	r0, #1
   4cc40:	sub	r0, fp, #176	; 0xb0
   4cc44:	blt	4cdd4 <GetDataSlab+0x1ce54>
   4cc48:	ldr	ip, [fp, #12]
   4cc4c:	orr	r0, r0, #4
   4cc50:	sub	r2, fp, #136	; 0x88
   4cc54:	mov	r5, #0
   4cc58:	str	r0, [sp, #72]	; 0x48
   4cc5c:	ldr	r0, [fp, #24]
   4cc60:	orr	r8, r2, #4
   4cc64:	ldr	r2, [fp, #20]
   4cc68:	ldr	r4, [ip], #4
   4cc6c:	sub	r0, r0, #1
   4cc70:	add	r2, r2, #4
   4cc74:	str	r0, [sp, #52]	; 0x34
   4cc78:	sub	r0, fp, #96	; 0x60
   4cc7c:	str	r2, [sp, #84]	; 0x54
   4cc80:	orr	r0, r0, #4
   4cc84:	str	r0, [sp, #48]	; 0x30
   4cc88:	b	4ccbc <GetDataSlab+0x1cd3c>
   4cc8c:	ldr	r0, [sp, #48]	; 0x30
   4cc90:	ldr	r0, [r0, r2]
   4cc94:	add	r9, r9, r0, lsl #3
   4cc98:	add	r3, r0, r3
   4cc9c:	ldr	r5, [sp, #60]	; 0x3c
   4cca0:	ldr	r0, [sp, #68]	; 0x44
   4cca4:	str	r6, [sp, #64]	; 0x40
   4cca8:	ldr	r6, [fp, #16]
   4ccac:	ldr	r4, [sp, #56]	; 0x38
   4ccb0:	add	r5, r1, r5
   4ccb4:	cmp	r5, r0
   4ccb8:	bge	4cdd4 <GetDataSlab+0x1ce54>
   4ccbc:	add	r2, r4, r3
   4ccc0:	add	r3, r9, r4, lsl #3
   4ccc4:	cmp	r1, #1
   4ccc8:	str	r5, [sp, #60]	; 0x3c
   4cccc:	blt	4cd18 <GetDataSlab+0x1cd98>
   4ccd0:	ldr	r0, [sp, #88]	; 0x58
   4ccd4:	mov	r4, #0
   4ccd8:	add	r5, r0, r5
   4ccdc:	ldr	r0, [fp, #20]
   4cce0:	ldrb	r1, [r3]
   4cce4:	strb	r1, [r5, r4]
   4cce8:	add	r4, r4, #1
   4ccec:	ldr	r7, [r6]
   4ccf0:	ldr	r1, [r0]
   4ccf4:	add	r3, r3, r7, lsl #3
   4ccf8:	add	r2, r7, r2
   4ccfc:	cmp	r4, r1
   4cd00:	blt	4cce0 <GetDataSlab+0x1cd60>
   4cd04:	ldr	r0, [fp, #12]
   4cd08:	ldr	r4, [r0]
   4cd0c:	ldr	r0, [fp, #8]
   4cd10:	ldr	r6, [r0]
   4cd14:	b	4cd1c <GetDataSlab+0x1cd9c>
   4cd18:	ldr	r6, [sp, #64]	; 0x40
   4cd1c:	mls	r5, r7, r1, r6
   4cd20:	ldr	r0, [fp, #24]
   4cd24:	str	r4, [sp, #56]	; 0x38
   4cd28:	sub	r4, r5, r4
   4cd2c:	add	r9, r3, r4, lsl #3
   4cd30:	add	r3, r4, r2
   4cd34:	cmp	r0, #2
   4cd38:	blt	4cc9c <GetDataSlab+0x1cd1c>
   4cd3c:	ldr	sl, [sp, #52]	; 0x34
   4cd40:	mov	r2, #0
   4cd44:	b	4cd70 <GetDataSlab+0x1cdf0>
   4cd48:	sub	r0, fp, #176	; 0xb0
   4cd4c:	ldr	r5, [ip, r2]
   4cd50:	sub	r4, r4, lr
   4cd54:	ldr	r0, [r0, r2]
   4cd58:	mla	r0, r5, r0, r4
   4cd5c:	add	r3, r0, r3
   4cd60:	add	r9, r9, r0, lsl #3
   4cd64:	subs	sl, sl, #1
   4cd68:	add	r2, r2, #4
   4cd6c:	beq	4cc9c <GetDataSlab+0x1cd1c>
   4cd70:	ldr	r4, [r8, r2]
   4cd74:	ldr	r0, [sp, #84]	; 0x54
   4cd78:	add	r4, r4, #1
   4cd7c:	str	r4, [r8, r2]
   4cd80:	ldr	r0, [r0, r2]
   4cd84:	sdiv	r5, r4, r0
   4cd88:	mls	r0, r5, r0, r4
   4cd8c:	cmp	r0, #0
   4cd90:	bne	4cc8c <GetDataSlab+0x1cd0c>
   4cd94:	mov	r0, #0
   4cd98:	str	r0, [r8, r2]
   4cd9c:	ldr	r0, [sp, #72]	; 0x48
   4cda0:	ldr	r4, [r0, r2]
   4cda4:	sdiv	r0, r3, r4
   4cda8:	mls	lr, r0, r4, r3
   4cdac:	cmp	lr, #0
   4cdb0:	bne	4cd48 <GetDataSlab+0x1cdc8>
   4cdb4:	ldr	r4, [ip, r2]
   4cdb8:	cmp	r4, #0
   4cdbc:	beq	4cd64 <GetDataSlab+0x1cde4>
   4cdc0:	sub	r0, fp, #176	; 0xb0
   4cdc4:	ldr	r0, [r0, r2]
   4cdc8:	mla	r3, r0, r4, r3
   4cdcc:	mul	r0, r0, r4
   4cdd0:	b	4cd60 <GetDataSlab+0x1cde0>
   4cdd4:	ldr	r7, [sp, #76]	; 0x4c
   4cdd8:	mov	r2, #0
   4cddc:	cmp	r7, #13
   4cde0:	bne	56c1c <GetDataSlab+0x26c9c>
   4cde4:	ldr	r0, [fp, #16]
   4cde8:	mov	r7, #0
   4cdec:	sub	r9, fp, #176	; 0xb0
   4cdf0:	sub	r8, fp, #96	; 0x60
   4cdf4:	ldr	r5, [r0]
   4cdf8:	sub	r0, r5, #1
   4cdfc:	str	r0, [fp, #-96]	; 0xffffffa0
   4ce00:	ldr	r0, [fp, #8]
   4ce04:	ldr	r0, [r0]
   4ce08:	str	r0, [sp, #72]	; 0x48
   4ce0c:	str	r0, [fp, #-176]	; 0xffffff50
   4ce10:	ldr	r0, [fp, #20]
   4ce14:	ldr	r1, [r0]
   4ce18:	ldr	r0, [fp, #24]
   4ce1c:	cmp	r0, #2
   4ce20:	mov	r0, r1
   4ce24:	str	r1, [sp, #76]	; 0x4c
   4ce28:	blt	4cf9c <GetDataSlab+0x1d01c>
   4ce2c:	ldr	r0, [fp, #8]
   4ce30:	ldr	r4, [sp, #72]	; 0x48
   4ce34:	mov	r3, #0
   4ce38:	mvn	ip, #15
   4ce3c:	mov	r7, #0
   4ce40:	str	r1, [sp, #76]	; 0x4c
   4ce44:	str	r3, [sp, #84]	; 0x54
   4ce48:	mov	r3, r1
   4ce4c:	mov	r2, r0
   4ce50:	sub	r0, r0, #4
   4ce54:	mov	r6, r4
   4ce58:	sub	sl, r2, #12
   4ce5c:	mov	r2, #1
   4ce60:	b	4ceb4 <GetDataSlab+0x1cf34>
   4ce64:	sub	r8, fp, #96	; 0x60
   4ce68:	ldr	r3, [fp, #12]
   4ce6c:	sub	r9, fp, #176	; 0xb0
   4ce70:	str	lr, [r8, r2, lsl #2]
   4ce74:	ldr	r6, [sp, #68]	; 0x44
   4ce78:	add	sl, sl, #4
   4ce7c:	str	r4, [r9, r2, lsl #2]
   4ce80:	ldr	r3, [r3, r2, lsl #2]
   4ce84:	mla	r7, r3, r6, r7
   4ce88:	ldr	r3, [fp, #20]
   4ce8c:	ldr	r6, [sp, #76]	; 0x4c
   4ce90:	ldr	r3, [r3, r2, lsl #2]
   4ce94:	add	r2, r2, #1
   4ce98:	mul	r6, r3, r6
   4ce9c:	ldr	r3, [fp, #24]
   4cea0:	str	r6, [sp, #76]	; 0x4c
   4cea4:	mov	r6, r4
   4cea8:	ldr	r4, [sp, #64]	; 0x40
   4ceac:	cmp	r2, r3
   4ceb0:	beq	4cf9c <GetDataSlab+0x1d01c>
   4ceb4:	ldr	r3, [fp, #16]
   4ceb8:	str	r6, [sp, #68]	; 0x44
   4cebc:	ldr	r3, [r3, r2, lsl #2]
   4cec0:	str	r4, [r9, r2, lsl #2]
   4cec4:	ldr	r9, [sp, #84]	; 0x54
   4cec8:	sub	lr, r3, #1
   4cecc:	ldr	r3, [fp, #8]
   4ced0:	add	r9, r9, #1
   4ced4:	str	lr, [r8, r2, lsl #2]
   4ced8:	cmp	r9, #4
   4cedc:	str	r9, [sp, #84]	; 0x54
   4cee0:	ldr	r6, [r3, r2, lsl #2]
   4cee4:	str	r6, [sp, #64]	; 0x40
   4cee8:	bcs	4cef4 <GetDataSlab+0x1cf74>
   4ceec:	mov	r3, r2
   4cef0:	b	4cf84 <GetDataSlab+0x1d004>
   4cef4:	vmov.i32	q9, #1	; 0x00000001
   4cef8:	vmov.i32	q10, #1	; 0x00000001
   4cefc:	vmov.32	d23[1], r6
   4cf00:	vmov.i32	q8, #1	; 0x00000001
   4cf04:	bic	r3, r9, #3
   4cf08:	bic	r8, r2, #3
   4cf0c:	mov	r6, sl
   4cf10:	str	r3, [sp, #60]	; 0x3c
   4cf14:	sub	r3, r2, r3
   4cf18:	vmov.32	d18[0], r4
   4cf1c:	vmov.32	d20[0], lr
   4cf20:	vorr	d16, d18, d18
   4cf24:	vmov.i32	q9, #1	; 0x00000001
   4cf28:	vorr	d18, d20, d20
   4cf2c:	vld1.32	{d20-d21}, [r6], ip
   4cf30:	subs	r8, r8, #4
   4cf34:	vrev64.32	q12, q10
   4cf38:	vext.8	q12, q12, q12, #8
   4cf3c:	vext.8	q11, q11, q12, #12
   4cf40:	vmul.i32	q9, q9, q12
   4cf44:	vmul.i32	q8, q11, q8
   4cf48:	vorr	q11, q12, q12
   4cf4c:	bne	4cf2c <GetDataSlab+0x1cfac>
   4cf50:	vext.8	q11, q9, q8, #8
   4cf54:	vext.8	q12, q8, q8, #8
   4cf58:	ldr	r6, [sp, #60]	; 0x3c
   4cf5c:	vmul.i32	q0, q9, q11
   4cf60:	vmul.i32	q1, q8, q12
   4cf64:	cmp	r9, r6
   4cf68:	vmul.i32	q8, q0, d0[1]
   4cf6c:	vmul.i32	q9, q1, d2[1]
   4cf70:	vmov.32	lr, d16[0]
   4cf74:	vmov.32	r4, d18[0]
   4cf78:	beq	4ce64 <GetDataSlab+0x1cee4>
   4cf7c:	vmov.32	r6, d20[0]
   4cf80:	sub	r8, fp, #96	; 0x60
   4cf84:	mul	r4, r6, r4
   4cf88:	ldr	r6, [r0, r3, lsl #2]
   4cf8c:	subs	r3, r3, #1
   4cf90:	mul	lr, lr, r6
   4cf94:	bne	4cf84 <GetDataSlab+0x1d004>
   4cf98:	b	4ce68 <GetDataSlab+0x1cee8>
   4cf9c:	ldr	r0, [sp, #80]	; 0x50
   4cfa0:	cmp	r5, #1
   4cfa4:	add	sl, r0, r7, lsl #3
   4cfa8:	bne	55e5c <GetDataSlab+0x25edc>
   4cfac:	ldr	r0, [sp, #76]	; 0x4c
   4cfb0:	ldr	r3, [fp, #20]
   4cfb4:	sub	r2, fp, #176	; 0xb0
   4cfb8:	cmp	r0, #1
   4cfbc:	blt	56468 <GetDataSlab+0x264e8>
   4cfc0:	orr	r2, r2, #4
   4cfc4:	ldr	lr, [fp, #12]
   4cfc8:	sub	r0, fp, #136	; 0x88
   4cfcc:	add	r4, r3, #4
   4cfd0:	str	r2, [sp, #84]	; 0x54
   4cfd4:	ldr	r2, [fp, #24]
   4cfd8:	orr	r0, r0, #4
   4cfdc:	sub	r2, r2, #1
   4cfe0:	str	r2, [sp, #68]	; 0x44
   4cfe4:	orr	r2, r8, #4
   4cfe8:	mov	r8, #0
   4cfec:	str	r2, [sp, #64]	; 0x40
   4cff0:	ldr	r2, [lr], #4
   4cff4:	str	r2, [sp, #80]	; 0x50
   4cff8:	b	4d020 <GetDataSlab+0x1d0a0>
   4cffc:	ldr	r3, [sp, #64]	; 0x40
   4d000:	ldr	r2, [r3, r2]
   4d004:	add	sl, sl, r2, lsl #3
   4d008:	add	r7, r2, r7
   4d00c:	ldr	r2, [sp, #76]	; 0x4c
   4d010:	add	r8, r1, r8
   4d014:	cmp	r8, r2
   4d018:	mov	r2, #0
   4d01c:	bge	56c1c <GetDataSlab+0x26c9c>
   4d020:	ldr	r5, [sp, #80]	; 0x50
   4d024:	ldr	r2, [sp, #72]	; 0x48
   4d028:	cmp	r1, #1
   4d02c:	sub	ip, fp, #176	; 0xb0
   4d030:	add	r9, sl, r5, lsl #3
   4d034:	add	r3, r5, r7
   4d038:	blt	4d080 <GetDataSlab+0x1d100>
   4d03c:	ldr	r1, [sp, #88]	; 0x58
   4d040:	ldr	r5, [fp, #20]
   4d044:	mov	r6, r4
   4d048:	mov	r2, #0
   4d04c:	mov	r7, r9
   4d050:	add	r4, r1, r8
   4d054:	ldrb	r1, [r7], #8
   4d058:	strb	r1, [r4, r2]
   4d05c:	add	r2, r2, #1
   4d060:	ldr	r1, [r5]
   4d064:	cmp	r2, r1
   4d068:	blt	4d054 <GetDataSlab+0x1d0d4>
   4d06c:	ldr	r2, [fp, #12]
   4d070:	mov	r4, r6
   4d074:	ldr	r5, [r2]
   4d078:	ldr	r2, [fp, #8]
   4d07c:	ldr	r2, [r2]
   4d080:	str	r2, [sp, #72]	; 0x48
   4d084:	sub	r2, r2, r5
   4d088:	str	r5, [sp, #80]	; 0x50
   4d08c:	add	sl, r9, r2, lsl #3
   4d090:	add	r7, r3, r2
   4d094:	ldr	r2, [fp, #24]
   4d098:	cmp	r2, #2
   4d09c:	blt	4d00c <GetDataSlab+0x1d08c>
   4d0a0:	ldr	r9, [sp, #68]	; 0x44
   4d0a4:	mov	r2, #0
   4d0a8:	b	4d0d4 <GetDataSlab+0x1d154>
   4d0ac:	ldr	r6, [ip, r2]
   4d0b0:	ldr	ip, [lr, r2]
   4d0b4:	sub	r3, r3, r5
   4d0b8:	mla	r3, ip, r6, r3
   4d0bc:	sub	ip, fp, #176	; 0xb0
   4d0c0:	add	r7, r3, r7
   4d0c4:	add	sl, sl, r3, lsl #3
   4d0c8:	subs	r9, r9, #1
   4d0cc:	add	r2, r2, #4
   4d0d0:	beq	4d00c <GetDataSlab+0x1d08c>
   4d0d4:	ldr	r3, [r0, r2]
   4d0d8:	add	r3, r3, #1
   4d0dc:	str	r3, [r0, r2]
   4d0e0:	ldr	r5, [r4, r2]
   4d0e4:	sdiv	r6, r3, r5
   4d0e8:	mls	r3, r6, r5, r3
   4d0ec:	cmp	r3, #0
   4d0f0:	bne	4cffc <GetDataSlab+0x1d07c>
   4d0f4:	mov	r3, #0
   4d0f8:	str	r3, [r0, r2]
   4d0fc:	ldr	r3, [sp, #84]	; 0x54
   4d100:	ldr	r3, [r3, r2]
   4d104:	sdiv	r5, r7, r3
   4d108:	mls	r5, r5, r3, r7
   4d10c:	cmp	r5, #0
   4d110:	bne	4d0ac <GetDataSlab+0x1d12c>
   4d114:	ldr	r3, [lr, r2]
   4d118:	cmp	r3, #0
   4d11c:	beq	4d0c8 <GetDataSlab+0x1d148>
   4d120:	ldr	r6, [ip, r2]
   4d124:	mla	r7, r6, r3, r7
   4d128:	mul	r3, r6, r3
   4d12c:	b	4d0c4 <GetDataSlab+0x1d144>
   4d130:	ldr	r0, [sp, #76]	; 0x4c
   4d134:	ldr	r2, [fp, #20]
   4d138:	cmp	r0, #1
   4d13c:	sub	r0, fp, #176	; 0xb0
   4d140:	blt	56468 <GetDataSlab+0x264e8>
   4d144:	orr	r0, r0, #4
   4d148:	ldr	sl, [fp, #12]
   4d14c:	sub	r3, fp, #136	; 0x88
   4d150:	add	r2, r2, #4
   4d154:	str	r0, [sp, #80]	; 0x50
   4d158:	ldr	r0, [fp, #24]
   4d15c:	orr	lr, r3, #4
   4d160:	str	r2, [sp, #84]	; 0x54
   4d164:	sub	r0, r0, #1
   4d168:	str	r0, [sp, #60]	; 0x3c
   4d16c:	sub	r0, fp, #96	; 0x60
   4d170:	orr	r0, r0, #4
   4d174:	str	r0, [sp, #56]	; 0x38
   4d178:	ldr	r0, [sl], #4
   4d17c:	str	r0, [sp, #64]	; 0x40
   4d180:	mov	r0, #0
   4d184:	str	r0, [sp, #68]	; 0x44
   4d188:	b	4d1bc <GetDataSlab+0x1d23c>
   4d18c:	ldr	r0, [sp, #56]	; 0x38
   4d190:	ldr	r0, [r0, r2]
   4d194:	add	r8, r8, r0
   4d198:	add	r7, r0, r7
   4d19c:	ldr	r2, [sp, #68]	; 0x44
   4d1a0:	ldr	r0, [sp, #76]	; 0x4c
   4d1a4:	str	r6, [sp, #72]	; 0x48
   4d1a8:	add	r2, r1, r2
   4d1ac:	str	r2, [sp, #68]	; 0x44
   4d1b0:	cmp	r2, r0
   4d1b4:	mov	r2, #0
   4d1b8:	bge	56c1c <GetDataSlab+0x26c9c>
   4d1bc:	ldr	r0, [sp, #64]	; 0x40
   4d1c0:	cmp	r1, #1
   4d1c4:	add	r2, r0, r7
   4d1c8:	add	r7, r8, r0
   4d1cc:	blt	4d220 <GetDataSlab+0x1d2a0>
   4d1d0:	ldr	r0, [sp, #88]	; 0x58
   4d1d4:	ldr	r1, [sp, #68]	; 0x44
   4d1d8:	ldr	ip, [fp, #8]
   4d1dc:	ldr	r6, [fp, #16]
   4d1e0:	mov	r3, #0
   4d1e4:	add	r4, r0, r1
   4d1e8:	ldr	r0, [fp, #20]
   4d1ec:	ldrb	r1, [r7]
   4d1f0:	strb	r1, [r4, r3]
   4d1f4:	add	r3, r3, #1
   4d1f8:	ldr	r5, [r6]
   4d1fc:	ldr	r1, [r0]
   4d200:	add	r2, r5, r2
   4d204:	add	r7, r7, r5
   4d208:	cmp	r3, r1
   4d20c:	blt	4d1ec <GetDataSlab+0x1d26c>
   4d210:	ldr	r0, [fp, #12]
   4d214:	ldr	r6, [ip]
   4d218:	ldr	r0, [r0]
   4d21c:	b	4d224 <GetDataSlab+0x1d2a4>
   4d220:	ldr	r6, [sp, #72]	; 0x48
   4d224:	mls	r3, r5, r1, r6
   4d228:	str	r0, [sp, #64]	; 0x40
   4d22c:	sub	r3, r3, r0
   4d230:	ldr	r0, [fp, #24]
   4d234:	add	r8, r7, r3
   4d238:	add	r7, r3, r2
   4d23c:	cmp	r0, #2
   4d240:	blt	4d19c <GetDataSlab+0x1d21c>
   4d244:	ldr	r9, [sp, #60]	; 0x3c
   4d248:	mov	r2, #0
   4d24c:	b	4d278 <GetDataSlab+0x1d2f8>
   4d250:	sub	r0, fp, #176	; 0xb0
   4d254:	ldr	r4, [sl, r2]
   4d258:	sub	r3, r3, ip
   4d25c:	ldr	r0, [r0, r2]
   4d260:	mla	r0, r4, r0, r3
   4d264:	add	r7, r0, r7
   4d268:	add	r8, r8, r0
   4d26c:	subs	r9, r9, #1
   4d270:	add	r2, r2, #4
   4d274:	beq	4d19c <GetDataSlab+0x1d21c>
   4d278:	ldr	r3, [lr, r2]
   4d27c:	ldr	r0, [sp, #84]	; 0x54
   4d280:	add	r3, r3, #1
   4d284:	str	r3, [lr, r2]
   4d288:	ldr	r0, [r0, r2]
   4d28c:	sdiv	r4, r3, r0
   4d290:	mls	r0, r4, r0, r3
   4d294:	cmp	r0, #0
   4d298:	bne	4d18c <GetDataSlab+0x1d20c>
   4d29c:	mov	r0, #0
   4d2a0:	str	r0, [lr, r2]
   4d2a4:	ldr	r0, [sp, #80]	; 0x50
   4d2a8:	ldr	r3, [r0, r2]
   4d2ac:	sdiv	r0, r7, r3
   4d2b0:	mls	ip, r0, r3, r7
   4d2b4:	cmp	ip, #0
   4d2b8:	bne	4d250 <GetDataSlab+0x1d2d0>
   4d2bc:	ldr	r3, [sl, r2]
   4d2c0:	cmp	r3, #0
   4d2c4:	beq	4d26c <GetDataSlab+0x1d2ec>
   4d2c8:	sub	r0, fp, #176	; 0xb0
   4d2cc:	ldr	r0, [r0, r2]
   4d2d0:	mla	r7, r0, r3, r7
   4d2d4:	mla	r8, r0, r3, r8
   4d2d8:	b	4d26c <GetDataSlab+0x1d2ec>
   4d2dc:	ldr	r0, [sp, #76]	; 0x4c
   4d2e0:	ldr	r2, [fp, #20]
   4d2e4:	cmp	r0, #1
   4d2e8:	sub	r0, fp, #176	; 0xb0
   4d2ec:	blt	56468 <GetDataSlab+0x264e8>
   4d2f0:	orr	r0, r0, #4
   4d2f4:	ldr	lr, [fp, #12]
   4d2f8:	mov	r3, r8
   4d2fc:	sub	r6, fp, #136	; 0x88
   4d300:	add	r2, r2, #4
   4d304:	str	r0, [sp, #80]	; 0x50
   4d308:	ldr	r0, [fp, #24]
   4d30c:	orr	r8, r6, #4
   4d310:	str	r2, [sp, #84]	; 0x54
   4d314:	sub	r0, r0, #1
   4d318:	str	r0, [sp, #60]	; 0x3c
   4d31c:	orr	r0, r3, #4
   4d320:	str	r0, [sp, #56]	; 0x38
   4d324:	ldr	r0, [lr], #4
   4d328:	str	r0, [sp, #64]	; 0x40
   4d32c:	mov	r0, #0
   4d330:	str	r0, [sp, #68]	; 0x44
   4d334:	b	4d368 <GetDataSlab+0x1d3e8>
   4d338:	ldr	r0, [sp, #56]	; 0x38
   4d33c:	ldr	r0, [r0, r2]
   4d340:	add	sl, sl, r0, lsl #1
   4d344:	add	r7, r0, r7
   4d348:	ldr	r2, [sp, #68]	; 0x44
   4d34c:	ldr	r0, [sp, #76]	; 0x4c
   4d350:	str	r6, [sp, #72]	; 0x48
   4d354:	add	r2, r1, r2
   4d358:	str	r2, [sp, #68]	; 0x44
   4d35c:	cmp	r2, r0
   4d360:	mov	r2, #0
   4d364:	bge	56c1c <GetDataSlab+0x26c9c>
   4d368:	ldr	r0, [sp, #64]	; 0x40
   4d36c:	cmp	r1, #1
   4d370:	add	r2, r0, r7
   4d374:	add	r7, sl, r0, lsl #1
   4d378:	blt	4d3cc <GetDataSlab+0x1d44c>
   4d37c:	ldr	r0, [sp, #88]	; 0x58
   4d380:	ldr	r1, [sp, #68]	; 0x44
   4d384:	ldr	ip, [fp, #8]
   4d388:	ldr	r6, [fp, #16]
   4d38c:	mov	r3, #0
   4d390:	add	r4, r0, r1
   4d394:	ldr	r0, [fp, #20]
   4d398:	ldrb	r1, [r7]
   4d39c:	strb	r1, [r4, r3]
   4d3a0:	add	r3, r3, #1
   4d3a4:	ldr	r5, [r6]
   4d3a8:	ldr	r1, [r0]
   4d3ac:	add	r7, r7, r5, lsl #1
   4d3b0:	add	r2, r5, r2
   4d3b4:	cmp	r3, r1
   4d3b8:	blt	4d398 <GetDataSlab+0x1d418>
   4d3bc:	ldr	r0, [fp, #12]
   4d3c0:	ldr	r6, [ip]
   4d3c4:	ldr	r0, [r0]
   4d3c8:	b	4d3d0 <GetDataSlab+0x1d450>
   4d3cc:	ldr	r6, [sp, #72]	; 0x48
   4d3d0:	mls	r3, r5, r1, r6
   4d3d4:	str	r0, [sp, #64]	; 0x40
   4d3d8:	sub	r3, r3, r0
   4d3dc:	ldr	r0, [fp, #24]
   4d3e0:	add	sl, r7, r3, lsl #1
   4d3e4:	add	r7, r3, r2
   4d3e8:	cmp	r0, #2
   4d3ec:	blt	4d348 <GetDataSlab+0x1d3c8>
   4d3f0:	ldr	r9, [sp, #60]	; 0x3c
   4d3f4:	mov	r2, #0
   4d3f8:	b	4d424 <GetDataSlab+0x1d4a4>
   4d3fc:	sub	r0, fp, #176	; 0xb0
   4d400:	ldr	r4, [lr, r2]
   4d404:	sub	r3, r3, ip
   4d408:	ldr	r0, [r0, r2]
   4d40c:	mla	r0, r4, r0, r3
   4d410:	add	r7, r0, r7
   4d414:	add	sl, sl, r0, lsl #1
   4d418:	subs	r9, r9, #1
   4d41c:	add	r2, r2, #4
   4d420:	beq	4d348 <GetDataSlab+0x1d3c8>
   4d424:	ldr	r3, [r8, r2]
   4d428:	ldr	r0, [sp, #84]	; 0x54
   4d42c:	add	r3, r3, #1
   4d430:	str	r3, [r8, r2]
   4d434:	ldr	r0, [r0, r2]
   4d438:	sdiv	r4, r3, r0
   4d43c:	mls	r0, r4, r0, r3
   4d440:	cmp	r0, #0
   4d444:	bne	4d338 <GetDataSlab+0x1d3b8>
   4d448:	mov	r0, #0
   4d44c:	str	r0, [r8, r2]
   4d450:	ldr	r0, [sp, #80]	; 0x50
   4d454:	ldr	r3, [r0, r2]
   4d458:	sdiv	r0, r7, r3
   4d45c:	mls	ip, r0, r3, r7
   4d460:	cmp	ip, #0
   4d464:	bne	4d3fc <GetDataSlab+0x1d47c>
   4d468:	ldr	r3, [lr, r2]
   4d46c:	cmp	r3, #0
   4d470:	beq	4d418 <GetDataSlab+0x1d498>
   4d474:	sub	r0, fp, #176	; 0xb0
   4d478:	ldr	r0, [r0, r2]
   4d47c:	mla	r7, r0, r3, r7
   4d480:	mul	r0, r0, r3
   4d484:	b	4d414 <GetDataSlab+0x1d494>
   4d488:	ldr	r0, [sp, #76]	; 0x4c
   4d48c:	ldr	r2, [fp, #20]
   4d490:	cmp	r0, #1
   4d494:	sub	r0, fp, #176	; 0xb0
   4d498:	blt	56468 <GetDataSlab+0x264e8>
   4d49c:	orr	r0, r0, #4
   4d4a0:	ldr	lr, [fp, #12]
   4d4a4:	mov	r3, r8
   4d4a8:	sub	r6, fp, #136	; 0x88
   4d4ac:	add	r2, r2, #4
   4d4b0:	str	r0, [sp, #80]	; 0x50
   4d4b4:	ldr	r0, [fp, #24]
   4d4b8:	orr	r8, r6, #4
   4d4bc:	str	r2, [sp, #84]	; 0x54
   4d4c0:	sub	r0, r0, #1
   4d4c4:	str	r0, [sp, #60]	; 0x3c
   4d4c8:	orr	r0, r3, #4
   4d4cc:	str	r0, [sp, #56]	; 0x38
   4d4d0:	ldr	r0, [lr], #4
   4d4d4:	str	r0, [sp, #64]	; 0x40
   4d4d8:	mov	r0, #0
   4d4dc:	str	r0, [sp, #68]	; 0x44
   4d4e0:	b	4d514 <GetDataSlab+0x1d594>
   4d4e4:	ldr	r0, [sp, #56]	; 0x38
   4d4e8:	ldr	r0, [r0, r2]
   4d4ec:	add	sl, sl, r0, lsl #1
   4d4f0:	add	r7, r0, r7
   4d4f4:	ldr	r2, [sp, #68]	; 0x44
   4d4f8:	ldr	r0, [sp, #76]	; 0x4c
   4d4fc:	str	r6, [sp, #72]	; 0x48
   4d500:	add	r2, r1, r2
   4d504:	str	r2, [sp, #68]	; 0x44
   4d508:	cmp	r2, r0
   4d50c:	mov	r2, #0
   4d510:	bge	56c1c <GetDataSlab+0x26c9c>
   4d514:	ldr	r0, [sp, #64]	; 0x40
   4d518:	cmp	r1, #1
   4d51c:	add	r2, r0, r7
   4d520:	add	r7, sl, r0, lsl #1
   4d524:	blt	4d578 <GetDataSlab+0x1d5f8>
   4d528:	ldr	r0, [sp, #88]	; 0x58
   4d52c:	ldr	r1, [sp, #68]	; 0x44
   4d530:	ldr	ip, [fp, #8]
   4d534:	ldr	r6, [fp, #16]
   4d538:	mov	r3, #0
   4d53c:	add	r4, r0, r1
   4d540:	ldr	r0, [fp, #20]
   4d544:	ldrb	r1, [r7]
   4d548:	strb	r1, [r4, r3]
   4d54c:	add	r3, r3, #1
   4d550:	ldr	r5, [r6]
   4d554:	ldr	r1, [r0]
   4d558:	add	r7, r7, r5, lsl #1
   4d55c:	add	r2, r5, r2
   4d560:	cmp	r3, r1
   4d564:	blt	4d544 <GetDataSlab+0x1d5c4>
   4d568:	ldr	r0, [fp, #12]
   4d56c:	ldr	r6, [ip]
   4d570:	ldr	r0, [r0]
   4d574:	b	4d57c <GetDataSlab+0x1d5fc>
   4d578:	ldr	r6, [sp, #72]	; 0x48
   4d57c:	mls	r3, r5, r1, r6
   4d580:	str	r0, [sp, #64]	; 0x40
   4d584:	sub	r3, r3, r0
   4d588:	ldr	r0, [fp, #24]
   4d58c:	add	sl, r7, r3, lsl #1
   4d590:	add	r7, r3, r2
   4d594:	cmp	r0, #2
   4d598:	blt	4d4f4 <GetDataSlab+0x1d574>
   4d59c:	ldr	r9, [sp, #60]	; 0x3c
   4d5a0:	mov	r2, #0
   4d5a4:	b	4d5d0 <GetDataSlab+0x1d650>
   4d5a8:	sub	r0, fp, #176	; 0xb0
   4d5ac:	ldr	r4, [lr, r2]
   4d5b0:	sub	r3, r3, ip
   4d5b4:	ldr	r0, [r0, r2]
   4d5b8:	mla	r0, r4, r0, r3
   4d5bc:	add	r7, r0, r7
   4d5c0:	add	sl, sl, r0, lsl #1
   4d5c4:	subs	r9, r9, #1
   4d5c8:	add	r2, r2, #4
   4d5cc:	beq	4d4f4 <GetDataSlab+0x1d574>
   4d5d0:	ldr	r3, [r8, r2]
   4d5d4:	ldr	r0, [sp, #84]	; 0x54
   4d5d8:	add	r3, r3, #1
   4d5dc:	str	r3, [r8, r2]
   4d5e0:	ldr	r0, [r0, r2]
   4d5e4:	sdiv	r4, r3, r0
   4d5e8:	mls	r0, r4, r0, r3
   4d5ec:	cmp	r0, #0
   4d5f0:	bne	4d4e4 <GetDataSlab+0x1d564>
   4d5f4:	mov	r0, #0
   4d5f8:	str	r0, [r8, r2]
   4d5fc:	ldr	r0, [sp, #80]	; 0x50
   4d600:	ldr	r3, [r0, r2]
   4d604:	sdiv	r0, r7, r3
   4d608:	mls	ip, r0, r3, r7
   4d60c:	cmp	ip, #0
   4d610:	bne	4d5a8 <GetDataSlab+0x1d628>
   4d614:	ldr	r3, [lr, r2]
   4d618:	cmp	r3, #0
   4d61c:	beq	4d5c4 <GetDataSlab+0x1d644>
   4d620:	sub	r0, fp, #176	; 0xb0
   4d624:	ldr	r0, [r0, r2]
   4d628:	mla	r7, r0, r3, r7
   4d62c:	mul	r0, r0, r3
   4d630:	b	4d5c0 <GetDataSlab+0x1d640>
   4d634:	ldr	r0, [sp, #76]	; 0x4c
   4d638:	ldr	r2, [fp, #20]
   4d63c:	cmp	r0, #1
   4d640:	sub	r0, fp, #176	; 0xb0
   4d644:	blt	56468 <GetDataSlab+0x264e8>
   4d648:	orr	r0, r0, #4
   4d64c:	ldr	sl, [fp, #12]
   4d650:	sub	r3, fp, #136	; 0x88
   4d654:	add	r2, r2, #4
   4d658:	str	r0, [sp, #80]	; 0x50
   4d65c:	ldr	r0, [fp, #24]
   4d660:	orr	lr, r3, #4
   4d664:	str	r2, [sp, #84]	; 0x54
   4d668:	sub	r0, r0, #1
   4d66c:	str	r0, [sp, #60]	; 0x3c
   4d670:	sub	r0, fp, #96	; 0x60
   4d674:	orr	r0, r0, #4
   4d678:	str	r0, [sp, #56]	; 0x38
   4d67c:	ldr	r0, [sl], #4
   4d680:	str	r0, [sp, #64]	; 0x40
   4d684:	mov	r0, #0
   4d688:	str	r0, [sp, #68]	; 0x44
   4d68c:	b	4d6c0 <GetDataSlab+0x1d740>
   4d690:	ldr	r0, [sp, #56]	; 0x38
   4d694:	ldr	r0, [r0, r2]
   4d698:	add	r8, r8, r0, lsl #2
   4d69c:	add	r7, r0, r7
   4d6a0:	ldr	r2, [sp, #68]	; 0x44
   4d6a4:	ldr	r0, [sp, #76]	; 0x4c
   4d6a8:	str	r6, [sp, #72]	; 0x48
   4d6ac:	add	r2, r1, r2
   4d6b0:	str	r2, [sp, #68]	; 0x44
   4d6b4:	cmp	r2, r0
   4d6b8:	mov	r2, #0
   4d6bc:	bge	56c1c <GetDataSlab+0x26c9c>
   4d6c0:	ldr	r0, [sp, #64]	; 0x40
   4d6c4:	cmp	r1, #1
   4d6c8:	add	r2, r0, r7
   4d6cc:	add	r7, r8, r0, lsl #2
   4d6d0:	blt	4d724 <GetDataSlab+0x1d7a4>
   4d6d4:	ldr	r0, [sp, #88]	; 0x58
   4d6d8:	ldr	r1, [sp, #68]	; 0x44
   4d6dc:	ldr	ip, [fp, #8]
   4d6e0:	ldr	r6, [fp, #16]
   4d6e4:	mov	r3, #0
   4d6e8:	add	r4, r0, r1
   4d6ec:	ldr	r0, [fp, #20]
   4d6f0:	ldr	r1, [r7]
   4d6f4:	strb	r1, [r4, r3]
   4d6f8:	add	r3, r3, #1
   4d6fc:	ldr	r5, [r6]
   4d700:	ldr	r1, [r0]
   4d704:	add	r7, r7, r5, lsl #2
   4d708:	add	r2, r5, r2
   4d70c:	cmp	r3, r1
   4d710:	blt	4d6f0 <GetDataSlab+0x1d770>
   4d714:	ldr	r0, [fp, #12]
   4d718:	ldr	r6, [ip]
   4d71c:	ldr	r0, [r0]
   4d720:	b	4d728 <GetDataSlab+0x1d7a8>
   4d724:	ldr	r6, [sp, #72]	; 0x48
   4d728:	mls	r3, r5, r1, r6
   4d72c:	str	r0, [sp, #64]	; 0x40
   4d730:	sub	r3, r3, r0
   4d734:	ldr	r0, [fp, #24]
   4d738:	add	r8, r7, r3, lsl #2
   4d73c:	add	r7, r3, r2
   4d740:	cmp	r0, #2
   4d744:	blt	4d6a0 <GetDataSlab+0x1d720>
   4d748:	ldr	r9, [sp, #60]	; 0x3c
   4d74c:	mov	r2, #0
   4d750:	b	4d77c <GetDataSlab+0x1d7fc>
   4d754:	sub	r0, fp, #176	; 0xb0
   4d758:	ldr	r4, [sl, r2]
   4d75c:	sub	r3, r3, ip
   4d760:	ldr	r0, [r0, r2]
   4d764:	mla	r0, r4, r0, r3
   4d768:	add	r7, r0, r7
   4d76c:	add	r8, r8, r0, lsl #2
   4d770:	subs	r9, r9, #1
   4d774:	add	r2, r2, #4
   4d778:	beq	4d6a0 <GetDataSlab+0x1d720>
   4d77c:	ldr	r3, [lr, r2]
   4d780:	ldr	r0, [sp, #84]	; 0x54
   4d784:	add	r3, r3, #1
   4d788:	str	r3, [lr, r2]
   4d78c:	ldr	r0, [r0, r2]
   4d790:	sdiv	r4, r3, r0
   4d794:	mls	r0, r4, r0, r3
   4d798:	cmp	r0, #0
   4d79c:	bne	4d690 <GetDataSlab+0x1d710>
   4d7a0:	mov	r0, #0
   4d7a4:	str	r0, [lr, r2]
   4d7a8:	ldr	r0, [sp, #80]	; 0x50
   4d7ac:	ldr	r3, [r0, r2]
   4d7b0:	sdiv	r0, r7, r3
   4d7b4:	mls	ip, r0, r3, r7
   4d7b8:	cmp	ip, #0
   4d7bc:	bne	4d754 <GetDataSlab+0x1d7d4>
   4d7c0:	ldr	r3, [sl, r2]
   4d7c4:	cmp	r3, #0
   4d7c8:	beq	4d770 <GetDataSlab+0x1d7f0>
   4d7cc:	sub	r0, fp, #176	; 0xb0
   4d7d0:	ldr	r0, [r0, r2]
   4d7d4:	mla	r7, r0, r3, r7
   4d7d8:	mul	r0, r0, r3
   4d7dc:	b	4d76c <GetDataSlab+0x1d7ec>
   4d7e0:	ldr	r0, [sp, #76]	; 0x4c
   4d7e4:	ldr	r2, [fp, #20]
   4d7e8:	cmp	r0, #1
   4d7ec:	sub	r0, fp, #176	; 0xb0
   4d7f0:	blt	56468 <GetDataSlab+0x264e8>
   4d7f4:	orr	r0, r0, #4
   4d7f8:	ldr	sl, [fp, #12]
   4d7fc:	sub	r3, fp, #136	; 0x88
   4d800:	add	r2, r2, #4
   4d804:	str	r0, [sp, #80]	; 0x50
   4d808:	ldr	r0, [fp, #24]
   4d80c:	orr	lr, r3, #4
   4d810:	str	r2, [sp, #84]	; 0x54
   4d814:	sub	r0, r0, #1
   4d818:	str	r0, [sp, #60]	; 0x3c
   4d81c:	sub	r0, fp, #96	; 0x60
   4d820:	orr	r0, r0, #4
   4d824:	str	r0, [sp, #56]	; 0x38
   4d828:	ldr	r0, [sl], #4
   4d82c:	str	r0, [sp, #64]	; 0x40
   4d830:	mov	r0, #0
   4d834:	str	r0, [sp, #68]	; 0x44
   4d838:	b	4d86c <GetDataSlab+0x1d8ec>
   4d83c:	ldr	r0, [sp, #56]	; 0x38
   4d840:	ldr	r0, [r0, r2]
   4d844:	add	r8, r8, r0, lsl #2
   4d848:	add	r7, r0, r7
   4d84c:	ldr	r2, [sp, #68]	; 0x44
   4d850:	ldr	r0, [sp, #76]	; 0x4c
   4d854:	str	r6, [sp, #72]	; 0x48
   4d858:	add	r2, r1, r2
   4d85c:	str	r2, [sp, #68]	; 0x44
   4d860:	cmp	r2, r0
   4d864:	mov	r2, #0
   4d868:	bge	56c1c <GetDataSlab+0x26c9c>
   4d86c:	ldr	r0, [sp, #64]	; 0x40
   4d870:	cmp	r1, #1
   4d874:	add	r2, r0, r7
   4d878:	add	r7, r8, r0, lsl #2
   4d87c:	blt	4d8d0 <GetDataSlab+0x1d950>
   4d880:	ldr	r0, [sp, #88]	; 0x58
   4d884:	ldr	r1, [sp, #68]	; 0x44
   4d888:	ldr	ip, [fp, #8]
   4d88c:	ldr	r6, [fp, #16]
   4d890:	mov	r3, #0
   4d894:	add	r4, r0, r1
   4d898:	ldr	r0, [fp, #20]
   4d89c:	ldr	r1, [r7]
   4d8a0:	strb	r1, [r4, r3]
   4d8a4:	add	r3, r3, #1
   4d8a8:	ldr	r5, [r6]
   4d8ac:	ldr	r1, [r0]
   4d8b0:	add	r7, r7, r5, lsl #2
   4d8b4:	add	r2, r5, r2
   4d8b8:	cmp	r3, r1
   4d8bc:	blt	4d89c <GetDataSlab+0x1d91c>
   4d8c0:	ldr	r0, [fp, #12]
   4d8c4:	ldr	r6, [ip]
   4d8c8:	ldr	r0, [r0]
   4d8cc:	b	4d8d4 <GetDataSlab+0x1d954>
   4d8d0:	ldr	r6, [sp, #72]	; 0x48
   4d8d4:	mls	r3, r5, r1, r6
   4d8d8:	str	r0, [sp, #64]	; 0x40
   4d8dc:	sub	r3, r3, r0
   4d8e0:	ldr	r0, [fp, #24]
   4d8e4:	add	r8, r7, r3, lsl #2
   4d8e8:	add	r7, r3, r2
   4d8ec:	cmp	r0, #2
   4d8f0:	blt	4d84c <GetDataSlab+0x1d8cc>
   4d8f4:	ldr	r9, [sp, #60]	; 0x3c
   4d8f8:	mov	r2, #0
   4d8fc:	b	4d928 <GetDataSlab+0x1d9a8>
   4d900:	sub	r0, fp, #176	; 0xb0
   4d904:	ldr	r4, [sl, r2]
   4d908:	sub	r3, r3, ip
   4d90c:	ldr	r0, [r0, r2]
   4d910:	mla	r0, r4, r0, r3
   4d914:	add	r7, r0, r7
   4d918:	add	r8, r8, r0, lsl #2
   4d91c:	subs	r9, r9, #1
   4d920:	add	r2, r2, #4
   4d924:	beq	4d84c <GetDataSlab+0x1d8cc>
   4d928:	ldr	r3, [lr, r2]
   4d92c:	ldr	r0, [sp, #84]	; 0x54
   4d930:	add	r3, r3, #1
   4d934:	str	r3, [lr, r2]
   4d938:	ldr	r0, [r0, r2]
   4d93c:	sdiv	r4, r3, r0
   4d940:	mls	r0, r4, r0, r3
   4d944:	cmp	r0, #0
   4d948:	bne	4d83c <GetDataSlab+0x1d8bc>
   4d94c:	mov	r0, #0
   4d950:	str	r0, [lr, r2]
   4d954:	ldr	r0, [sp, #80]	; 0x50
   4d958:	ldr	r3, [r0, r2]
   4d95c:	sdiv	r0, r7, r3
   4d960:	mls	ip, r0, r3, r7
   4d964:	cmp	ip, #0
   4d968:	bne	4d900 <GetDataSlab+0x1d980>
   4d96c:	ldr	r3, [sl, r2]
   4d970:	cmp	r3, #0
   4d974:	beq	4d91c <GetDataSlab+0x1d99c>
   4d978:	sub	r0, fp, #176	; 0xb0
   4d97c:	ldr	r0, [r0, r2]
   4d980:	mla	r7, r0, r3, r7
   4d984:	mul	r0, r0, r3
   4d988:	b	4d918 <GetDataSlab+0x1d998>
   4d98c:	ldr	r0, [sp, #76]	; 0x4c
   4d990:	ldr	r2, [fp, #20]
   4d994:	cmp	r0, #1
   4d998:	sub	r0, fp, #176	; 0xb0
   4d99c:	blt	56468 <GetDataSlab+0x264e8>
   4d9a0:	orr	r0, r0, #4
   4d9a4:	ldr	lr, [fp, #12]
   4d9a8:	mov	r3, r8
   4d9ac:	sub	r6, fp, #136	; 0x88
   4d9b0:	add	r2, r2, #4
   4d9b4:	str	r0, [sp, #80]	; 0x50
   4d9b8:	ldr	r0, [fp, #24]
   4d9bc:	orr	r8, r6, #4
   4d9c0:	str	r2, [sp, #84]	; 0x54
   4d9c4:	sub	r0, r0, #1
   4d9c8:	str	r0, [sp, #60]	; 0x3c
   4d9cc:	orr	r0, r3, #4
   4d9d0:	str	r0, [sp, #56]	; 0x38
   4d9d4:	ldr	r0, [lr], #4
   4d9d8:	str	r0, [sp, #64]	; 0x40
   4d9dc:	mov	r0, #0
   4d9e0:	str	r0, [sp, #68]	; 0x44
   4d9e4:	b	4da18 <GetDataSlab+0x1da98>
   4d9e8:	ldr	r0, [sp, #56]	; 0x38
   4d9ec:	ldr	r0, [r0, r2]
   4d9f0:	add	sl, sl, r0, lsl #2
   4d9f4:	add	r7, r0, r7
   4d9f8:	ldr	r2, [sp, #68]	; 0x44
   4d9fc:	ldr	r0, [sp, #76]	; 0x4c
   4da00:	str	r6, [sp, #72]	; 0x48
   4da04:	add	r2, r1, r2
   4da08:	str	r2, [sp, #68]	; 0x44
   4da0c:	cmp	r2, r0
   4da10:	mov	r2, #0
   4da14:	bge	56c1c <GetDataSlab+0x26c9c>
   4da18:	ldr	r0, [sp, #64]	; 0x40
   4da1c:	cmp	r1, #1
   4da20:	add	r2, r0, r7
   4da24:	add	r7, sl, r0, lsl #2
   4da28:	blt	4da84 <GetDataSlab+0x1db04>
   4da2c:	ldr	r0, [sp, #88]	; 0x58
   4da30:	ldr	r1, [sp, #68]	; 0x44
   4da34:	ldr	ip, [fp, #8]
   4da38:	ldr	r6, [fp, #16]
   4da3c:	mov	r3, #0
   4da40:	add	r4, r0, r1
   4da44:	ldr	r0, [fp, #20]
   4da48:	vldr	s0, [r7]
   4da4c:	vcvt.u32.f32	s0, s0
   4da50:	vmov	r1, s0
   4da54:	strb	r1, [r4, r3]
   4da58:	add	r3, r3, #1
   4da5c:	ldr	r5, [r6]
   4da60:	ldr	r1, [r0]
   4da64:	add	r7, r7, r5, lsl #2
   4da68:	add	r2, r5, r2
   4da6c:	cmp	r3, r1
   4da70:	blt	4da48 <GetDataSlab+0x1dac8>
   4da74:	ldr	r0, [fp, #12]
   4da78:	ldr	r6, [ip]
   4da7c:	ldr	r0, [r0]
   4da80:	b	4da88 <GetDataSlab+0x1db08>
   4da84:	ldr	r6, [sp, #72]	; 0x48
   4da88:	mls	r3, r5, r1, r6
   4da8c:	str	r0, [sp, #64]	; 0x40
   4da90:	sub	r3, r3, r0
   4da94:	ldr	r0, [fp, #24]
   4da98:	add	sl, r7, r3, lsl #2
   4da9c:	add	r7, r3, r2
   4daa0:	cmp	r0, #2
   4daa4:	blt	4d9f8 <GetDataSlab+0x1da78>
   4daa8:	ldr	r9, [sp, #60]	; 0x3c
   4daac:	mov	r2, #0
   4dab0:	b	4dadc <GetDataSlab+0x1db5c>
   4dab4:	sub	r0, fp, #176	; 0xb0
   4dab8:	ldr	r4, [lr, r2]
   4dabc:	sub	r3, r3, ip
   4dac0:	ldr	r0, [r0, r2]
   4dac4:	mla	r0, r4, r0, r3
   4dac8:	add	r7, r0, r7
   4dacc:	add	sl, sl, r0, lsl #2
   4dad0:	subs	r9, r9, #1
   4dad4:	add	r2, r2, #4
   4dad8:	beq	4d9f8 <GetDataSlab+0x1da78>
   4dadc:	ldr	r3, [r8, r2]
   4dae0:	ldr	r0, [sp, #84]	; 0x54
   4dae4:	add	r3, r3, #1
   4dae8:	str	r3, [r8, r2]
   4daec:	ldr	r0, [r0, r2]
   4daf0:	sdiv	r4, r3, r0
   4daf4:	mls	r0, r4, r0, r3
   4daf8:	cmp	r0, #0
   4dafc:	bne	4d9e8 <GetDataSlab+0x1da68>
   4db00:	mov	r0, #0
   4db04:	str	r0, [r8, r2]
   4db08:	ldr	r0, [sp, #80]	; 0x50
   4db0c:	ldr	r3, [r0, r2]
   4db10:	sdiv	r0, r7, r3
   4db14:	mls	ip, r0, r3, r7
   4db18:	cmp	ip, #0
   4db1c:	bne	4dab4 <GetDataSlab+0x1db34>
   4db20:	ldr	r3, [lr, r2]
   4db24:	cmp	r3, #0
   4db28:	beq	4dad0 <GetDataSlab+0x1db50>
   4db2c:	sub	r0, fp, #176	; 0xb0
   4db30:	ldr	r0, [r0, r2]
   4db34:	mla	r7, r0, r3, r7
   4db38:	mul	r0, r0, r3
   4db3c:	b	4dacc <GetDataSlab+0x1db4c>
   4db40:	ldr	r0, [sp, #76]	; 0x4c
   4db44:	ldr	r2, [fp, #20]
   4db48:	cmp	r0, #1
   4db4c:	sub	r0, fp, #176	; 0xb0
   4db50:	blt	56468 <GetDataSlab+0x264e8>
   4db54:	orr	r0, r0, #4
   4db58:	ldr	lr, [fp, #12]
   4db5c:	mov	r3, r8
   4db60:	sub	r6, fp, #136	; 0x88
   4db64:	add	r2, r2, #4
   4db68:	str	r0, [sp, #80]	; 0x50
   4db6c:	ldr	r0, [fp, #24]
   4db70:	orr	r8, r6, #4
   4db74:	str	r2, [sp, #84]	; 0x54
   4db78:	sub	r0, r0, #1
   4db7c:	str	r0, [sp, #60]	; 0x3c
   4db80:	orr	r0, r3, #4
   4db84:	str	r0, [sp, #56]	; 0x38
   4db88:	ldr	r0, [lr], #4
   4db8c:	str	r0, [sp, #64]	; 0x40
   4db90:	mov	r0, #0
   4db94:	str	r0, [sp, #68]	; 0x44
   4db98:	b	4dbcc <GetDataSlab+0x1dc4c>
   4db9c:	ldr	r0, [sp, #56]	; 0x38
   4dba0:	ldr	r0, [r0, r2]
   4dba4:	add	sl, sl, r0, lsl #3
   4dba8:	add	r7, r0, r7
   4dbac:	ldr	r2, [sp, #68]	; 0x44
   4dbb0:	ldr	r0, [sp, #76]	; 0x4c
   4dbb4:	str	r6, [sp, #72]	; 0x48
   4dbb8:	add	r2, r1, r2
   4dbbc:	str	r2, [sp, #68]	; 0x44
   4dbc0:	cmp	r2, r0
   4dbc4:	mov	r2, #0
   4dbc8:	bge	56c1c <GetDataSlab+0x26c9c>
   4dbcc:	ldr	r0, [sp, #64]	; 0x40
   4dbd0:	cmp	r1, #1
   4dbd4:	add	r2, r0, r7
   4dbd8:	add	r7, sl, r0, lsl #3
   4dbdc:	blt	4dc38 <GetDataSlab+0x1dcb8>
   4dbe0:	ldr	r0, [sp, #88]	; 0x58
   4dbe4:	ldr	r1, [sp, #68]	; 0x44
   4dbe8:	ldr	ip, [fp, #8]
   4dbec:	ldr	r6, [fp, #16]
   4dbf0:	mov	r3, #0
   4dbf4:	add	r4, r0, r1
   4dbf8:	ldr	r0, [fp, #20]
   4dbfc:	vldr	d16, [r7]
   4dc00:	vcvt.u32.f64	s0, d16
   4dc04:	vmov	r1, s0
   4dc08:	strb	r1, [r4, r3]
   4dc0c:	add	r3, r3, #1
   4dc10:	ldr	r5, [r6]
   4dc14:	ldr	r1, [r0]
   4dc18:	add	r7, r7, r5, lsl #3
   4dc1c:	add	r2, r5, r2
   4dc20:	cmp	r3, r1
   4dc24:	blt	4dbfc <GetDataSlab+0x1dc7c>
   4dc28:	ldr	r0, [fp, #12]
   4dc2c:	ldr	r6, [ip]
   4dc30:	ldr	r0, [r0]
   4dc34:	b	4dc3c <GetDataSlab+0x1dcbc>
   4dc38:	ldr	r6, [sp, #72]	; 0x48
   4dc3c:	mls	r3, r5, r1, r6
   4dc40:	str	r0, [sp, #64]	; 0x40
   4dc44:	sub	r3, r3, r0
   4dc48:	ldr	r0, [fp, #24]
   4dc4c:	add	sl, r7, r3, lsl #3
   4dc50:	add	r7, r3, r2
   4dc54:	cmp	r0, #2
   4dc58:	blt	4dbac <GetDataSlab+0x1dc2c>
   4dc5c:	ldr	r9, [sp, #60]	; 0x3c
   4dc60:	mov	r2, #0
   4dc64:	b	4dc90 <GetDataSlab+0x1dd10>
   4dc68:	sub	r0, fp, #176	; 0xb0
   4dc6c:	ldr	r4, [lr, r2]
   4dc70:	sub	r3, r3, ip
   4dc74:	ldr	r0, [r0, r2]
   4dc78:	mla	r0, r4, r0, r3
   4dc7c:	add	r7, r0, r7
   4dc80:	add	sl, sl, r0, lsl #3
   4dc84:	subs	r9, r9, #1
   4dc88:	add	r2, r2, #4
   4dc8c:	beq	4dbac <GetDataSlab+0x1dc2c>
   4dc90:	ldr	r3, [r8, r2]
   4dc94:	ldr	r0, [sp, #84]	; 0x54
   4dc98:	add	r3, r3, #1
   4dc9c:	str	r3, [r8, r2]
   4dca0:	ldr	r0, [r0, r2]
   4dca4:	sdiv	r4, r3, r0
   4dca8:	mls	r0, r4, r0, r3
   4dcac:	cmp	r0, #0
   4dcb0:	bne	4db9c <GetDataSlab+0x1dc1c>
   4dcb4:	mov	r0, #0
   4dcb8:	str	r0, [r8, r2]
   4dcbc:	ldr	r0, [sp, #80]	; 0x50
   4dcc0:	ldr	r3, [r0, r2]
   4dcc4:	sdiv	r0, r7, r3
   4dcc8:	mls	ip, r0, r3, r7
   4dccc:	cmp	ip, #0
   4dcd0:	bne	4dc68 <GetDataSlab+0x1dce8>
   4dcd4:	ldr	r3, [lr, r2]
   4dcd8:	cmp	r3, #0
   4dcdc:	beq	4dc84 <GetDataSlab+0x1dd04>
   4dce0:	sub	r0, fp, #176	; 0xb0
   4dce4:	ldr	r0, [r0, r2]
   4dce8:	mla	r7, r0, r3, r7
   4dcec:	mul	r0, r0, r3
   4dcf0:	b	4dc80 <GetDataSlab+0x1dd00>
   4dcf4:	ldr	r0, [sp, #68]	; 0x44
   4dcf8:	ldr	r6, [fp, #16]
   4dcfc:	cmp	r0, #1
   4dd00:	sub	r0, fp, #176	; 0xb0
   4dd04:	blt	4de94 <GetDataSlab+0x1df14>
   4dd08:	ldr	ip, [fp, #12]
   4dd0c:	orr	r0, r0, #4
   4dd10:	sub	r2, fp, #136	; 0x88
   4dd14:	mov	r5, #0
   4dd18:	str	r0, [sp, #72]	; 0x48
   4dd1c:	ldr	r0, [fp, #24]
   4dd20:	orr	r8, r2, #4
   4dd24:	ldr	r2, [fp, #20]
   4dd28:	ldr	r4, [ip], #4
   4dd2c:	sub	r0, r0, #1
   4dd30:	add	r2, r2, #4
   4dd34:	str	r0, [sp, #52]	; 0x34
   4dd38:	sub	r0, fp, #96	; 0x60
   4dd3c:	str	r2, [sp, #84]	; 0x54
   4dd40:	orr	r0, r0, #4
   4dd44:	str	r0, [sp, #48]	; 0x30
   4dd48:	b	4dd7c <GetDataSlab+0x1ddfc>
   4dd4c:	ldr	r0, [sp, #48]	; 0x30
   4dd50:	ldr	r0, [r0, r2]
   4dd54:	add	r9, r9, r0, lsl #3
   4dd58:	add	r3, r0, r3
   4dd5c:	ldr	r5, [sp, #60]	; 0x3c
   4dd60:	ldr	r0, [sp, #68]	; 0x44
   4dd64:	str	r6, [sp, #64]	; 0x40
   4dd68:	ldr	r6, [fp, #16]
   4dd6c:	ldr	r4, [sp, #56]	; 0x38
   4dd70:	add	r5, r1, r5
   4dd74:	cmp	r5, r0
   4dd78:	bge	4de94 <GetDataSlab+0x1df14>
   4dd7c:	add	r2, r4, r3
   4dd80:	add	r3, r9, r4, lsl #3
   4dd84:	cmp	r1, #1
   4dd88:	str	r5, [sp, #60]	; 0x3c
   4dd8c:	blt	4ddd8 <GetDataSlab+0x1de58>
   4dd90:	ldr	r0, [sp, #88]	; 0x58
   4dd94:	mov	r4, #0
   4dd98:	add	r5, r0, r5
   4dd9c:	ldr	r0, [fp, #20]
   4dda0:	ldrb	r1, [r3]
   4dda4:	strb	r1, [r5, r4]
   4dda8:	add	r4, r4, #1
   4ddac:	ldr	r7, [r6]
   4ddb0:	ldr	r1, [r0]
   4ddb4:	add	r3, r3, r7, lsl #3
   4ddb8:	add	r2, r7, r2
   4ddbc:	cmp	r4, r1
   4ddc0:	blt	4dda0 <GetDataSlab+0x1de20>
   4ddc4:	ldr	r0, [fp, #12]
   4ddc8:	ldr	r4, [r0]
   4ddcc:	ldr	r0, [fp, #8]
   4ddd0:	ldr	r6, [r0]
   4ddd4:	b	4dddc <GetDataSlab+0x1de5c>
   4ddd8:	ldr	r6, [sp, #64]	; 0x40
   4dddc:	mls	r5, r7, r1, r6
   4dde0:	ldr	r0, [fp, #24]
   4dde4:	str	r4, [sp, #56]	; 0x38
   4dde8:	sub	r4, r5, r4
   4ddec:	add	r9, r3, r4, lsl #3
   4ddf0:	add	r3, r4, r2
   4ddf4:	cmp	r0, #2
   4ddf8:	blt	4dd5c <GetDataSlab+0x1dddc>
   4ddfc:	ldr	sl, [sp, #52]	; 0x34
   4de00:	mov	r2, #0
   4de04:	b	4de30 <GetDataSlab+0x1deb0>
   4de08:	sub	r0, fp, #176	; 0xb0
   4de0c:	ldr	r5, [ip, r2]
   4de10:	sub	r4, r4, lr
   4de14:	ldr	r0, [r0, r2]
   4de18:	mla	r0, r5, r0, r4
   4de1c:	add	r3, r0, r3
   4de20:	add	r9, r9, r0, lsl #3
   4de24:	subs	sl, sl, #1
   4de28:	add	r2, r2, #4
   4de2c:	beq	4dd5c <GetDataSlab+0x1dddc>
   4de30:	ldr	r4, [r8, r2]
   4de34:	ldr	r0, [sp, #84]	; 0x54
   4de38:	add	r4, r4, #1
   4de3c:	str	r4, [r8, r2]
   4de40:	ldr	r0, [r0, r2]
   4de44:	sdiv	r5, r4, r0
   4de48:	mls	r0, r5, r0, r4
   4de4c:	cmp	r0, #0
   4de50:	bne	4dd4c <GetDataSlab+0x1ddcc>
   4de54:	mov	r0, #0
   4de58:	str	r0, [r8, r2]
   4de5c:	ldr	r0, [sp, #72]	; 0x48
   4de60:	ldr	r4, [r0, r2]
   4de64:	sdiv	r0, r3, r4
   4de68:	mls	lr, r0, r4, r3
   4de6c:	cmp	lr, #0
   4de70:	bne	4de08 <GetDataSlab+0x1de88>
   4de74:	ldr	r4, [ip, r2]
   4de78:	cmp	r4, #0
   4de7c:	beq	4de24 <GetDataSlab+0x1dea4>
   4de80:	sub	r0, fp, #176	; 0xb0
   4de84:	ldr	r0, [r0, r2]
   4de88:	mla	r3, r0, r4, r3
   4de8c:	mul	r0, r0, r4
   4de90:	b	4de20 <GetDataSlab+0x1dea0>
   4de94:	ldr	r7, [sp, #76]	; 0x4c
   4de98:	mov	r2, #0
   4de9c:	cmp	r7, #13
   4dea0:	bne	56c1c <GetDataSlab+0x26c9c>
   4dea4:	ldr	r0, [fp, #16]
   4dea8:	mov	r7, #0
   4deac:	sub	r9, fp, #176	; 0xb0
   4deb0:	sub	r8, fp, #96	; 0x60
   4deb4:	ldr	r5, [r0]
   4deb8:	sub	r0, r5, #1
   4debc:	str	r0, [fp, #-96]	; 0xffffffa0
   4dec0:	ldr	r0, [fp, #8]
   4dec4:	ldr	r0, [r0]
   4dec8:	str	r0, [sp, #72]	; 0x48
   4decc:	str	r0, [fp, #-176]	; 0xffffff50
   4ded0:	ldr	r0, [fp, #20]
   4ded4:	ldr	r1, [r0]
   4ded8:	ldr	r0, [fp, #24]
   4dedc:	cmp	r0, #2
   4dee0:	mov	r0, r1
   4dee4:	str	r1, [sp, #76]	; 0x4c
   4dee8:	blt	4e05c <GetDataSlab+0x1e0dc>
   4deec:	ldr	r0, [fp, #8]
   4def0:	ldr	r4, [sp, #72]	; 0x48
   4def4:	mov	r3, #0
   4def8:	mvn	ip, #15
   4defc:	mov	r7, #0
   4df00:	str	r1, [sp, #76]	; 0x4c
   4df04:	str	r3, [sp, #84]	; 0x54
   4df08:	mov	r3, r1
   4df0c:	mov	r2, r0
   4df10:	sub	r0, r0, #4
   4df14:	mov	r6, r4
   4df18:	sub	sl, r2, #12
   4df1c:	mov	r2, #1
   4df20:	b	4df74 <GetDataSlab+0x1dff4>
   4df24:	sub	r8, fp, #96	; 0x60
   4df28:	ldr	r3, [fp, #12]
   4df2c:	sub	r9, fp, #176	; 0xb0
   4df30:	str	lr, [r8, r2, lsl #2]
   4df34:	ldr	r6, [sp, #68]	; 0x44
   4df38:	add	sl, sl, #4
   4df3c:	str	r4, [r9, r2, lsl #2]
   4df40:	ldr	r3, [r3, r2, lsl #2]
   4df44:	mla	r7, r3, r6, r7
   4df48:	ldr	r3, [fp, #20]
   4df4c:	ldr	r6, [sp, #76]	; 0x4c
   4df50:	ldr	r3, [r3, r2, lsl #2]
   4df54:	add	r2, r2, #1
   4df58:	mul	r6, r3, r6
   4df5c:	ldr	r3, [fp, #24]
   4df60:	str	r6, [sp, #76]	; 0x4c
   4df64:	mov	r6, r4
   4df68:	ldr	r4, [sp, #64]	; 0x40
   4df6c:	cmp	r2, r3
   4df70:	beq	4e05c <GetDataSlab+0x1e0dc>
   4df74:	ldr	r3, [fp, #16]
   4df78:	str	r6, [sp, #68]	; 0x44
   4df7c:	ldr	r3, [r3, r2, lsl #2]
   4df80:	str	r4, [r9, r2, lsl #2]
   4df84:	ldr	r9, [sp, #84]	; 0x54
   4df88:	sub	lr, r3, #1
   4df8c:	ldr	r3, [fp, #8]
   4df90:	add	r9, r9, #1
   4df94:	str	lr, [r8, r2, lsl #2]
   4df98:	cmp	r9, #4
   4df9c:	str	r9, [sp, #84]	; 0x54
   4dfa0:	ldr	r6, [r3, r2, lsl #2]
   4dfa4:	str	r6, [sp, #64]	; 0x40
   4dfa8:	bcs	4dfb4 <GetDataSlab+0x1e034>
   4dfac:	mov	r3, r2
   4dfb0:	b	4e044 <GetDataSlab+0x1e0c4>
   4dfb4:	vmov.i32	q9, #1	; 0x00000001
   4dfb8:	vmov.i32	q10, #1	; 0x00000001
   4dfbc:	vmov.32	d23[1], r6
   4dfc0:	vmov.i32	q8, #1	; 0x00000001
   4dfc4:	bic	r3, r9, #3
   4dfc8:	bic	r8, r2, #3
   4dfcc:	mov	r6, sl
   4dfd0:	str	r3, [sp, #60]	; 0x3c
   4dfd4:	sub	r3, r2, r3
   4dfd8:	vmov.32	d18[0], r4
   4dfdc:	vmov.32	d20[0], lr
   4dfe0:	vorr	d16, d18, d18
   4dfe4:	vmov.i32	q9, #1	; 0x00000001
   4dfe8:	vorr	d18, d20, d20
   4dfec:	vld1.32	{d20-d21}, [r6], ip
   4dff0:	subs	r8, r8, #4
   4dff4:	vrev64.32	q12, q10
   4dff8:	vext.8	q12, q12, q12, #8
   4dffc:	vext.8	q11, q11, q12, #12
   4e000:	vmul.i32	q9, q9, q12
   4e004:	vmul.i32	q8, q11, q8
   4e008:	vorr	q11, q12, q12
   4e00c:	bne	4dfec <GetDataSlab+0x1e06c>
   4e010:	vext.8	q11, q9, q8, #8
   4e014:	vext.8	q12, q8, q8, #8
   4e018:	ldr	r6, [sp, #60]	; 0x3c
   4e01c:	vmul.i32	q0, q9, q11
   4e020:	vmul.i32	q1, q8, q12
   4e024:	cmp	r9, r6
   4e028:	vmul.i32	q8, q0, d0[1]
   4e02c:	vmul.i32	q9, q1, d2[1]
   4e030:	vmov.32	lr, d16[0]
   4e034:	vmov.32	r4, d18[0]
   4e038:	beq	4df24 <GetDataSlab+0x1dfa4>
   4e03c:	vmov.32	r6, d20[0]
   4e040:	sub	r8, fp, #96	; 0x60
   4e044:	mul	r4, r6, r4
   4e048:	ldr	r6, [r0, r3, lsl #2]
   4e04c:	subs	r3, r3, #1
   4e050:	mul	lr, lr, r6
   4e054:	bne	4e044 <GetDataSlab+0x1e0c4>
   4e058:	b	4df28 <GetDataSlab+0x1dfa8>
   4e05c:	ldr	r0, [sp, #80]	; 0x50
   4e060:	cmp	r5, #1
   4e064:	add	sl, r0, r7, lsl #3
   4e068:	bne	56008 <GetDataSlab+0x26088>
   4e06c:	ldr	r0, [sp, #76]	; 0x4c
   4e070:	ldr	r3, [fp, #20]
   4e074:	sub	r2, fp, #176	; 0xb0
   4e078:	cmp	r0, #1
   4e07c:	blt	56468 <GetDataSlab+0x264e8>
   4e080:	orr	r2, r2, #4
   4e084:	ldr	lr, [fp, #12]
   4e088:	sub	r0, fp, #136	; 0x88
   4e08c:	add	r4, r3, #4
   4e090:	str	r2, [sp, #84]	; 0x54
   4e094:	ldr	r2, [fp, #24]
   4e098:	orr	r0, r0, #4
   4e09c:	sub	r2, r2, #1
   4e0a0:	str	r2, [sp, #68]	; 0x44
   4e0a4:	orr	r2, r8, #4
   4e0a8:	mov	r8, #0
   4e0ac:	str	r2, [sp, #64]	; 0x40
   4e0b0:	ldr	r2, [lr], #4
   4e0b4:	str	r2, [sp, #80]	; 0x50
   4e0b8:	b	4e0e0 <GetDataSlab+0x1e160>
   4e0bc:	ldr	r3, [sp, #64]	; 0x40
   4e0c0:	ldr	r2, [r3, r2]
   4e0c4:	add	sl, sl, r2, lsl #3
   4e0c8:	add	r7, r2, r7
   4e0cc:	ldr	r2, [sp, #76]	; 0x4c
   4e0d0:	add	r8, r1, r8
   4e0d4:	cmp	r8, r2
   4e0d8:	mov	r2, #0
   4e0dc:	bge	56c1c <GetDataSlab+0x26c9c>
   4e0e0:	ldr	r5, [sp, #80]	; 0x50
   4e0e4:	ldr	r2, [sp, #72]	; 0x48
   4e0e8:	cmp	r1, #1
   4e0ec:	sub	ip, fp, #176	; 0xb0
   4e0f0:	add	r9, sl, r5, lsl #3
   4e0f4:	add	r3, r5, r7
   4e0f8:	blt	4e140 <GetDataSlab+0x1e1c0>
   4e0fc:	ldr	r1, [sp, #88]	; 0x58
   4e100:	ldr	r5, [fp, #20]
   4e104:	mov	r6, r4
   4e108:	mov	r2, #0
   4e10c:	mov	r7, r9
   4e110:	add	r4, r1, r8
   4e114:	ldrb	r1, [r7], #8
   4e118:	strb	r1, [r4, r2]
   4e11c:	add	r2, r2, #1
   4e120:	ldr	r1, [r5]
   4e124:	cmp	r2, r1
   4e128:	blt	4e114 <GetDataSlab+0x1e194>
   4e12c:	ldr	r2, [fp, #12]
   4e130:	mov	r4, r6
   4e134:	ldr	r5, [r2]
   4e138:	ldr	r2, [fp, #8]
   4e13c:	ldr	r2, [r2]
   4e140:	str	r2, [sp, #72]	; 0x48
   4e144:	sub	r2, r2, r5
   4e148:	str	r5, [sp, #80]	; 0x50
   4e14c:	add	sl, r9, r2, lsl #3
   4e150:	add	r7, r3, r2
   4e154:	ldr	r2, [fp, #24]
   4e158:	cmp	r2, #2
   4e15c:	blt	4e0cc <GetDataSlab+0x1e14c>
   4e160:	ldr	r9, [sp, #68]	; 0x44
   4e164:	mov	r2, #0
   4e168:	b	4e194 <GetDataSlab+0x1e214>
   4e16c:	ldr	r6, [ip, r2]
   4e170:	ldr	ip, [lr, r2]
   4e174:	sub	r3, r3, r5
   4e178:	mla	r3, ip, r6, r3
   4e17c:	sub	ip, fp, #176	; 0xb0
   4e180:	add	r7, r3, r7
   4e184:	add	sl, sl, r3, lsl #3
   4e188:	subs	r9, r9, #1
   4e18c:	add	r2, r2, #4
   4e190:	beq	4e0cc <GetDataSlab+0x1e14c>
   4e194:	ldr	r3, [r0, r2]
   4e198:	add	r3, r3, #1
   4e19c:	str	r3, [r0, r2]
   4e1a0:	ldr	r5, [r4, r2]
   4e1a4:	sdiv	r6, r3, r5
   4e1a8:	mls	r3, r6, r5, r3
   4e1ac:	cmp	r3, #0
   4e1b0:	bne	4e0bc <GetDataSlab+0x1e13c>
   4e1b4:	mov	r3, #0
   4e1b8:	str	r3, [r0, r2]
   4e1bc:	ldr	r3, [sp, #84]	; 0x54
   4e1c0:	ldr	r3, [r3, r2]
   4e1c4:	sdiv	r5, r7, r3
   4e1c8:	mls	r5, r5, r3, r7
   4e1cc:	cmp	r5, #0
   4e1d0:	bne	4e16c <GetDataSlab+0x1e1ec>
   4e1d4:	ldr	r3, [lr, r2]
   4e1d8:	cmp	r3, #0
   4e1dc:	beq	4e188 <GetDataSlab+0x1e208>
   4e1e0:	ldr	r6, [ip, r2]
   4e1e4:	mla	r7, r6, r3, r7
   4e1e8:	mul	r3, r6, r3
   4e1ec:	b	4e184 <GetDataSlab+0x1e204>
   4e1f0:	ldr	r0, [sp, #76]	; 0x4c
   4e1f4:	sub	r2, fp, #96	; 0x60
   4e1f8:	cmp	r0, #1
   4e1fc:	ldr	r0, [fp, #12]
   4e200:	blt	56c18 <GetDataSlab+0x26c98>
   4e204:	ldr	r6, [sp, #56]	; 0x38
   4e208:	ldr	r1, [sp, #52]	; 0x34
   4e20c:	add	r0, r0, #4
   4e210:	str	r0, [sp, #84]	; 0x54
   4e214:	ldr	r0, [fp, #24]
   4e218:	mls	r1, r6, sl, r1
   4e21c:	mov	lr, r6
   4e220:	sub	r0, r0, #1
   4e224:	str	r0, [sp, #44]	; 0x2c
   4e228:	orr	r0, r2, #4
   4e22c:	str	r1, [sp, #68]	; 0x44
   4e230:	mul	r1, r6, sl
   4e234:	str	r0, [sp, #36]	; 0x24
   4e238:	and	r0, r6, #1
   4e23c:	str	r0, [sp, #48]	; 0x30
   4e240:	sub	r8, r6, r0
   4e244:	lsl	r0, r6, #1
   4e248:	mov	r6, #0
   4e24c:	str	r0, [sp, #64]	; 0x40
   4e250:	ldr	r0, [sp, #88]	; 0x58
   4e254:	str	r1, [sp, #52]	; 0x34
   4e258:	sub	r1, fp, #136	; 0x88
   4e25c:	orr	r4, r1, #4
   4e260:	ldr	r1, [fp, #20]
   4e264:	add	r0, r0, #2
   4e268:	str	r0, [sp, #80]	; 0x50
   4e26c:	add	r1, r1, #4
   4e270:	str	r1, [sp, #40]	; 0x28
   4e274:	sub	r1, fp, #176	; 0xb0
   4e278:	orr	r1, r1, #4
   4e27c:	str	r1, [sp, #60]	; 0x3c
   4e280:	b	4e2c0 <GetDataSlab+0x1e340>
   4e284:	ldr	r0, [sp, #36]	; 0x24
   4e288:	ldr	r0, [r0, r2]
   4e28c:	add	ip, ip, r0
   4e290:	add	r3, r0, r3
   4e294:	ldr	r0, [sp, #64]	; 0x40
   4e298:	ldr	r1, [sp, #80]	; 0x50
   4e29c:	ldr	lr, [sp, #56]	; 0x38
   4e2a0:	ldr	r6, [sp, #72]	; 0x48
   4e2a4:	mov	r2, #0
   4e2a8:	add	r1, r1, r0
   4e2ac:	ldr	r0, [sp, #76]	; 0x4c
   4e2b0:	add	r6, r6, lr
   4e2b4:	str	r1, [sp, #80]	; 0x50
   4e2b8:	cmp	r6, r0
   4e2bc:	bge	56c1c <GetDataSlab+0x26c9c>
   4e2c0:	ldr	r0, [fp, #12]
   4e2c4:	cmp	lr, #1
   4e2c8:	ldr	r2, [r0]
   4e2cc:	add	r5, ip, r2
   4e2d0:	blt	4e340 <GetDataSlab+0x1e3c0>
   4e2d4:	mov	r7, #0
   4e2d8:	cmp	lr, #1
   4e2dc:	beq	4e30c <GetDataSlab+0x1e38c>
   4e2e0:	ldr	r0, [sp, #80]	; 0x50
   4e2e4:	mov	r7, #0
   4e2e8:	ldrb	r1, [r5]
   4e2ec:	add	r7, r7, #2
   4e2f0:	cmp	r8, r7
   4e2f4:	strh	r1, [r0, #-2]
   4e2f8:	ldrb	r1, [r5, sl]!
   4e2fc:	add	r5, r5, sl
   4e300:	strh	r1, [r0]
   4e304:	add	r0, r0, #4
   4e308:	bne	4e2e8 <GetDataSlab+0x1e368>
   4e30c:	ldr	r0, [sp, #52]	; 0x34
   4e310:	ldr	r1, [sp, #48]	; 0x30
   4e314:	ldr	lr, [sp, #60]	; 0x3c
   4e318:	add	r0, r0, r3
   4e31c:	cmp	r1, #0
   4e320:	beq	4e338 <GetDataSlab+0x1e3b8>
   4e324:	ldr	r1, [sp, #88]	; 0x58
   4e328:	ldrb	r3, [r5], sl
   4e32c:	add	r1, r1, r6, lsl #1
   4e330:	add	r1, r1, r7, lsl #1
   4e334:	strh	r3, [r1]
   4e338:	add	r0, r0, r2
   4e33c:	b	4e348 <GetDataSlab+0x1e3c8>
   4e340:	ldr	lr, [sp, #60]	; 0x3c
   4e344:	add	r0, r2, r3
   4e348:	ldr	r1, [sp, #68]	; 0x44
   4e34c:	str	r6, [sp, #72]	; 0x48
   4e350:	sub	r1, r1, r2
   4e354:	add	r3, r0, r1
   4e358:	ldr	r0, [fp, #24]
   4e35c:	add	ip, r5, r1
   4e360:	cmp	r0, #2
   4e364:	blt	4e294 <GetDataSlab+0x1e314>
   4e368:	ldr	r9, [sp, #44]	; 0x2c
   4e36c:	ldr	r6, [sp, #40]	; 0x28
   4e370:	mov	r2, #0
   4e374:	b	4e3a4 <GetDataSlab+0x1e424>
   4e378:	ldr	r5, [sp, #84]	; 0x54
   4e37c:	sub	r1, fp, #176	; 0xb0
   4e380:	sub	r0, r0, r7
   4e384:	ldr	r1, [r1, r2]
   4e388:	ldr	r5, [r5, r2]
   4e38c:	mla	r0, r5, r1, r0
   4e390:	add	r3, r0, r3
   4e394:	add	ip, ip, r0
   4e398:	subs	r9, r9, #1
   4e39c:	add	r2, r2, #4
   4e3a0:	beq	4e294 <GetDataSlab+0x1e314>
   4e3a4:	ldr	r0, [r4, r2]
   4e3a8:	add	r0, r0, #1
   4e3ac:	str	r0, [r4, r2]
   4e3b0:	ldr	r1, [r6, r2]
   4e3b4:	sdiv	r5, r0, r1
   4e3b8:	mls	r0, r5, r1, r0
   4e3bc:	cmp	r0, #0
   4e3c0:	bne	4e284 <GetDataSlab+0x1e304>
   4e3c4:	mov	r0, #0
   4e3c8:	str	r0, [r4, r2]
   4e3cc:	ldr	r0, [lr, r2]
   4e3d0:	sdiv	r1, r3, r0
   4e3d4:	mls	r7, r1, r0, r3
   4e3d8:	cmp	r7, #0
   4e3dc:	bne	4e378 <GetDataSlab+0x1e3f8>
   4e3e0:	ldr	r0, [sp, #84]	; 0x54
   4e3e4:	ldr	r0, [r0, r2]
   4e3e8:	cmp	r0, #0
   4e3ec:	beq	4e398 <GetDataSlab+0x1e418>
   4e3f0:	sub	r1, fp, #176	; 0xb0
   4e3f4:	ldr	r1, [r1, r2]
   4e3f8:	mla	r3, r1, r0, r3
   4e3fc:	mla	ip, r1, r0, ip
   4e400:	b	4e398 <GetDataSlab+0x1e418>
   4e404:	ldr	r0, [sp, #76]	; 0x4c
   4e408:	ldr	r2, [fp, #12]
   4e40c:	ldr	r3, [fp, #20]
   4e410:	ldr	r6, [sp, #64]	; 0x40
   4e414:	sub	r5, fp, #96	; 0x60
   4e418:	cmp	r0, #1
   4e41c:	blt	56c18 <GetDataSlab+0x26c98>
   4e420:	ldr	r0, [sp, #60]	; 0x3c
   4e424:	mov	r8, r5
   4e428:	ldr	r5, [r2], #4
   4e42c:	lsl	r9, r7, #1
   4e430:	lsl	sl, r7, #2
   4e434:	str	r2, [sp, #92]	; 0x5c
   4e438:	mls	r0, r6, r7, r0
   4e43c:	str	r5, [sp, #60]	; 0x3c
   4e440:	sub	r0, r0, r5
   4e444:	str	r0, [sp, #56]	; 0x38
   4e448:	sub	r0, fp, #136	; 0x88
   4e44c:	orr	r4, r0, #4
   4e450:	add	r0, r3, #4
   4e454:	mov	r3, r6
   4e458:	str	r0, [sp, #84]	; 0x54
   4e45c:	orr	r0, ip, #4
   4e460:	str	r0, [sp, #80]	; 0x50
   4e464:	ldr	r0, [fp, #24]
   4e468:	sub	r0, r0, #1
   4e46c:	str	r0, [sp, #40]	; 0x28
   4e470:	orr	r0, r8, #4
   4e474:	str	r0, [sp, #36]	; 0x24
   4e478:	mla	r0, r6, r7, r5
   4e47c:	str	r0, [sp, #48]	; 0x30
   4e480:	and	r0, r6, #1
   4e484:	sub	r8, r6, r0
   4e488:	str	r0, [sp, #44]	; 0x2c
   4e48c:	lsl	r0, r6, #1
   4e490:	str	r0, [sp, #52]	; 0x34
   4e494:	ldr	r0, [sp, #88]	; 0x58
   4e498:	add	r0, r0, #2
   4e49c:	str	r0, [sp, #72]	; 0x48
   4e4a0:	mov	r0, #0
   4e4a4:	str	r0, [sp, #68]	; 0x44
   4e4a8:	b	4e4ec <GetDataSlab+0x1e56c>
   4e4ac:	ldr	r0, [sp, #36]	; 0x24
   4e4b0:	ldr	r0, [r0, r2]
   4e4b4:	add	lr, lr, r0, lsl #1
   4e4b8:	add	r1, r0, r1
   4e4bc:	ldr	r0, [sp, #52]	; 0x34
   4e4c0:	ldr	r2, [sp, #72]	; 0x48
   4e4c4:	ldr	r3, [sp, #64]	; 0x40
   4e4c8:	add	r2, r2, r0
   4e4cc:	ldr	r0, [sp, #76]	; 0x4c
   4e4d0:	str	r2, [sp, #72]	; 0x48
   4e4d4:	ldr	r2, [sp, #68]	; 0x44
   4e4d8:	add	r2, r2, r3
   4e4dc:	str	r2, [sp, #68]	; 0x44
   4e4e0:	cmp	r2, r0
   4e4e4:	mov	r2, #0
   4e4e8:	bge	56c1c <GetDataSlab+0x26c9c>
   4e4ec:	ldr	ip, [sp, #60]	; 0x3c
   4e4f0:	cmp	r3, #1
   4e4f4:	add	r2, lr, ip, lsl #1
   4e4f8:	blt	4e560 <GetDataSlab+0x1e5e0>
   4e4fc:	mov	r3, #0
   4e500:	beq	4e534 <GetDataSlab+0x1e5b4>
   4e504:	ldr	r5, [sp, #72]	; 0x48
   4e508:	mov	r3, #0
   4e50c:	ldrh	r0, [r2]
   4e510:	add	r3, r3, #2
   4e514:	cmp	r8, r3
   4e518:	strh	r0, [r5, #-2]
   4e51c:	add	r0, r2, r9
   4e520:	add	r2, r2, sl
   4e524:	ldrh	r0, [r0]
   4e528:	strh	r0, [r5]
   4e52c:	add	r5, r5, #4
   4e530:	bne	4e50c <GetDataSlab+0x1e58c>
   4e534:	ldr	r0, [sp, #44]	; 0x2c
   4e538:	ldr	ip, [sp, #48]	; 0x30
   4e53c:	cmp	r0, #0
   4e540:	beq	4e560 <GetDataSlab+0x1e5e0>
   4e544:	ldr	r0, [sp, #88]	; 0x58
   4e548:	ldr	r7, [sp, #68]	; 0x44
   4e54c:	ldrh	r6, [r2], r9
   4e550:	ldr	ip, [sp, #48]	; 0x30
   4e554:	add	r0, r0, r7, lsl #1
   4e558:	add	r0, r0, r3, lsl #1
   4e55c:	strh	r6, [r0]
   4e560:	ldr	r3, [sp, #56]	; 0x38
   4e564:	add	r0, ip, r1
   4e568:	add	r1, r0, r3
   4e56c:	ldr	r0, [fp, #24]
   4e570:	add	lr, r2, r3, lsl #1
   4e574:	cmp	r0, #2
   4e578:	blt	4e4bc <GetDataSlab+0x1e53c>
   4e57c:	ldr	r3, [sp, #40]	; 0x28
   4e580:	mov	r2, #0
   4e584:	sub	ip, fp, #176	; 0xb0
   4e588:	b	4e5b4 <GetDataSlab+0x1e634>
   4e58c:	ldr	r7, [sp, #92]	; 0x5c
   4e590:	ldr	r5, [ip, r2]
   4e594:	sub	r0, r0, r6
   4e598:	ldr	r7, [r7, r2]
   4e59c:	mla	r0, r7, r5, r0
   4e5a0:	add	r1, r0, r1
   4e5a4:	add	lr, lr, r0, lsl #1
   4e5a8:	subs	r3, r3, #1
   4e5ac:	add	r2, r2, #4
   4e5b0:	beq	4e4bc <GetDataSlab+0x1e53c>
   4e5b4:	ldr	r0, [r4, r2]
   4e5b8:	ldr	r5, [sp, #84]	; 0x54
   4e5bc:	add	r0, r0, #1
   4e5c0:	str	r0, [r4, r2]
   4e5c4:	ldr	r6, [r5, r2]
   4e5c8:	sdiv	r5, r0, r6
   4e5cc:	mls	r0, r5, r6, r0
   4e5d0:	cmp	r0, #0
   4e5d4:	bne	4e4ac <GetDataSlab+0x1e52c>
   4e5d8:	mov	r0, #0
   4e5dc:	str	r0, [r4, r2]
   4e5e0:	ldr	r0, [sp, #80]	; 0x50
   4e5e4:	ldr	r0, [r0, r2]
   4e5e8:	sdiv	r6, r1, r0
   4e5ec:	mls	r6, r6, r0, r1
   4e5f0:	cmp	r6, #0
   4e5f4:	bne	4e58c <GetDataSlab+0x1e60c>
   4e5f8:	ldr	r0, [sp, #92]	; 0x5c
   4e5fc:	ldr	r0, [r0, r2]
   4e600:	cmp	r0, #0
   4e604:	beq	4e5a8 <GetDataSlab+0x1e628>
   4e608:	ldr	r7, [ip, r2]
   4e60c:	mla	r1, r7, r0, r1
   4e610:	mul	r0, r7, r0
   4e614:	b	4e5a4 <GetDataSlab+0x1e624>
   4e618:	ldr	r0, [sp, #76]	; 0x4c
   4e61c:	ldr	r2, [fp, #12]
   4e620:	ldr	r3, [fp, #20]
   4e624:	ldr	r6, [sp, #64]	; 0x40
   4e628:	sub	r5, fp, #96	; 0x60
   4e62c:	cmp	r0, #1
   4e630:	blt	56c18 <GetDataSlab+0x26c98>
   4e634:	ldr	r0, [sp, #60]	; 0x3c
   4e638:	mov	r8, r5
   4e63c:	ldr	r5, [r2], #4
   4e640:	lsl	r9, r7, #1
   4e644:	lsl	sl, r7, #2
   4e648:	str	r2, [sp, #92]	; 0x5c
   4e64c:	mls	r0, r6, r7, r0
   4e650:	str	r5, [sp, #60]	; 0x3c
   4e654:	sub	r0, r0, r5
   4e658:	str	r0, [sp, #56]	; 0x38
   4e65c:	sub	r0, fp, #136	; 0x88
   4e660:	orr	r4, r0, #4
   4e664:	add	r0, r3, #4
   4e668:	mov	r3, r6
   4e66c:	str	r0, [sp, #84]	; 0x54
   4e670:	orr	r0, ip, #4
   4e674:	str	r0, [sp, #80]	; 0x50
   4e678:	ldr	r0, [fp, #24]
   4e67c:	sub	r0, r0, #1
   4e680:	str	r0, [sp, #40]	; 0x28
   4e684:	orr	r0, r8, #4
   4e688:	str	r0, [sp, #36]	; 0x24
   4e68c:	mla	r0, r6, r7, r5
   4e690:	str	r0, [sp, #48]	; 0x30
   4e694:	and	r0, r6, #1
   4e698:	sub	r8, r6, r0
   4e69c:	str	r0, [sp, #44]	; 0x2c
   4e6a0:	lsl	r0, r6, #1
   4e6a4:	str	r0, [sp, #52]	; 0x34
   4e6a8:	ldr	r0, [sp, #88]	; 0x58
   4e6ac:	add	r0, r0, #2
   4e6b0:	str	r0, [sp, #72]	; 0x48
   4e6b4:	mov	r0, #0
   4e6b8:	str	r0, [sp, #68]	; 0x44
   4e6bc:	b	4e700 <GetDataSlab+0x1e780>
   4e6c0:	ldr	r0, [sp, #36]	; 0x24
   4e6c4:	ldr	r0, [r0, r2]
   4e6c8:	add	lr, lr, r0, lsl #1
   4e6cc:	add	r1, r0, r1
   4e6d0:	ldr	r0, [sp, #52]	; 0x34
   4e6d4:	ldr	r2, [sp, #72]	; 0x48
   4e6d8:	ldr	r3, [sp, #64]	; 0x40
   4e6dc:	add	r2, r2, r0
   4e6e0:	ldr	r0, [sp, #76]	; 0x4c
   4e6e4:	str	r2, [sp, #72]	; 0x48
   4e6e8:	ldr	r2, [sp, #68]	; 0x44
   4e6ec:	add	r2, r2, r3
   4e6f0:	str	r2, [sp, #68]	; 0x44
   4e6f4:	cmp	r2, r0
   4e6f8:	mov	r2, #0
   4e6fc:	bge	56c1c <GetDataSlab+0x26c9c>
   4e700:	ldr	ip, [sp, #60]	; 0x3c
   4e704:	cmp	r3, #1
   4e708:	add	r2, lr, ip, lsl #1
   4e70c:	blt	4e774 <GetDataSlab+0x1e7f4>
   4e710:	mov	r3, #0
   4e714:	beq	4e748 <GetDataSlab+0x1e7c8>
   4e718:	ldr	r5, [sp, #72]	; 0x48
   4e71c:	mov	r3, #0
   4e720:	ldrh	r0, [r2]
   4e724:	add	r3, r3, #2
   4e728:	cmp	r8, r3
   4e72c:	strh	r0, [r5, #-2]
   4e730:	add	r0, r2, r9
   4e734:	add	r2, r2, sl
   4e738:	ldrh	r0, [r0]
   4e73c:	strh	r0, [r5]
   4e740:	add	r5, r5, #4
   4e744:	bne	4e720 <GetDataSlab+0x1e7a0>
   4e748:	ldr	r0, [sp, #44]	; 0x2c
   4e74c:	ldr	ip, [sp, #48]	; 0x30
   4e750:	cmp	r0, #0
   4e754:	beq	4e774 <GetDataSlab+0x1e7f4>
   4e758:	ldr	r0, [sp, #88]	; 0x58
   4e75c:	ldr	r7, [sp, #68]	; 0x44
   4e760:	ldrh	r6, [r2], r9
   4e764:	ldr	ip, [sp, #48]	; 0x30
   4e768:	add	r0, r0, r7, lsl #1
   4e76c:	add	r0, r0, r3, lsl #1
   4e770:	strh	r6, [r0]
   4e774:	ldr	r3, [sp, #56]	; 0x38
   4e778:	add	r0, ip, r1
   4e77c:	add	r1, r0, r3
   4e780:	ldr	r0, [fp, #24]
   4e784:	add	lr, r2, r3, lsl #1
   4e788:	cmp	r0, #2
   4e78c:	blt	4e6d0 <GetDataSlab+0x1e750>
   4e790:	ldr	r3, [sp, #40]	; 0x28
   4e794:	mov	r2, #0
   4e798:	sub	ip, fp, #176	; 0xb0
   4e79c:	b	4e7c8 <GetDataSlab+0x1e848>
   4e7a0:	ldr	r7, [sp, #92]	; 0x5c
   4e7a4:	ldr	r5, [ip, r2]
   4e7a8:	sub	r0, r0, r6
   4e7ac:	ldr	r7, [r7, r2]
   4e7b0:	mla	r0, r7, r5, r0
   4e7b4:	add	r1, r0, r1
   4e7b8:	add	lr, lr, r0, lsl #1
   4e7bc:	subs	r3, r3, #1
   4e7c0:	add	r2, r2, #4
   4e7c4:	beq	4e6d0 <GetDataSlab+0x1e750>
   4e7c8:	ldr	r0, [r4, r2]
   4e7cc:	ldr	r5, [sp, #84]	; 0x54
   4e7d0:	add	r0, r0, #1
   4e7d4:	str	r0, [r4, r2]
   4e7d8:	ldr	r6, [r5, r2]
   4e7dc:	sdiv	r5, r0, r6
   4e7e0:	mls	r0, r5, r6, r0
   4e7e4:	cmp	r0, #0
   4e7e8:	bne	4e6c0 <GetDataSlab+0x1e740>
   4e7ec:	mov	r0, #0
   4e7f0:	str	r0, [r4, r2]
   4e7f4:	ldr	r0, [sp, #80]	; 0x50
   4e7f8:	ldr	r0, [r0, r2]
   4e7fc:	sdiv	r6, r1, r0
   4e800:	mls	r6, r6, r0, r1
   4e804:	cmp	r6, #0
   4e808:	bne	4e7a0 <GetDataSlab+0x1e820>
   4e80c:	ldr	r0, [sp, #92]	; 0x5c
   4e810:	ldr	r0, [r0, r2]
   4e814:	cmp	r0, #0
   4e818:	beq	4e7bc <GetDataSlab+0x1e83c>
   4e81c:	ldr	r7, [ip, r2]
   4e820:	mla	r1, r7, r0, r1
   4e824:	mul	r0, r7, r0
   4e828:	b	4e7b8 <GetDataSlab+0x1e838>
   4e82c:	ldr	r0, [sp, #76]	; 0x4c
   4e830:	ldr	r1, [sp, #72]	; 0x48
   4e834:	ldr	r2, [sp, #60]	; 0x3c
   4e838:	cmp	r0, #1
   4e83c:	ldr	r0, [fp, #20]
   4e840:	blt	56c18 <GetDataSlab+0x26c98>
   4e844:	mls	r1, r1, r5, r2
   4e848:	add	sl, r0, #4
   4e84c:	mov	r0, r8
   4e850:	add	r0, r0, #2
   4e854:	str	r0, [sp, #80]	; 0x50
   4e858:	mov	r0, #0
   4e85c:	str	r1, [sp, #64]	; 0x40
   4e860:	sub	r1, fp, #136	; 0x88
   4e864:	str	r0, [sp, #68]	; 0x44
   4e868:	orr	r6, r1, #4
   4e86c:	orr	r1, ip, #4
   4e870:	lsl	ip, r5, #3
   4e874:	str	r1, [sp, #84]	; 0x54
   4e878:	ldr	r1, [fp, #12]
   4e87c:	add	r8, r1, #4
   4e880:	ldr	r1, [fp, #24]
   4e884:	sub	r1, r1, #1
   4e888:	str	r1, [sp, #44]	; 0x2c
   4e88c:	sub	r1, fp, #96	; 0x60
   4e890:	orr	r1, r1, #4
   4e894:	str	r1, [sp, #40]	; 0x28
   4e898:	ldr	r1, [sp, #72]	; 0x48
   4e89c:	mul	r2, r1, r5
   4e8a0:	str	r2, [sp, #52]	; 0x34
   4e8a4:	and	r2, r1, #1
   4e8a8:	sub	lr, r1, r2
   4e8ac:	str	r2, [sp, #48]	; 0x30
   4e8b0:	lsl	r2, r1, #1
   4e8b4:	str	r2, [sp, #60]	; 0x3c
   4e8b8:	b	4e8fc <GetDataSlab+0x1e97c>
   4e8bc:	ldr	r0, [sp, #40]	; 0x28
   4e8c0:	ldr	r0, [r0, r2]
   4e8c4:	add	r4, r4, r0, lsl #2
   4e8c8:	add	r3, r0, r3
   4e8cc:	ldr	r0, [sp, #60]	; 0x3c
   4e8d0:	ldr	r1, [sp, #80]	; 0x50
   4e8d4:	ldr	r2, [sp, #68]	; 0x44
   4e8d8:	add	r1, r1, r0
   4e8dc:	ldr	r0, [sp, #76]	; 0x4c
   4e8e0:	str	r1, [sp, #80]	; 0x50
   4e8e4:	ldr	r1, [sp, #72]	; 0x48
   4e8e8:	add	r2, r2, r1
   4e8ec:	str	r2, [sp, #68]	; 0x44
   4e8f0:	cmp	r2, r0
   4e8f4:	mov	r2, #0
   4e8f8:	bge	56c1c <GetDataSlab+0x26c9c>
   4e8fc:	ldr	r0, [fp, #12]
   4e900:	cmp	r1, #1
   4e904:	ldr	r2, [r0]
   4e908:	add	r5, r4, r2, lsl #2
   4e90c:	blt	4e980 <GetDataSlab+0x1ea00>
   4e910:	ldr	r4, [sp, #56]	; 0x38
   4e914:	mov	r7, #0
   4e918:	cmp	r1, #1
   4e91c:	beq	4e94c <GetDataSlab+0x1e9cc>
   4e920:	ldr	r0, [sp, #80]	; 0x50
   4e924:	mov	r7, #0
   4e928:	ldr	r1, [r5]
   4e92c:	add	r7, r7, #2
   4e930:	cmp	lr, r7
   4e934:	strh	r1, [r0, #-2]
   4e938:	ldr	r1, [r5, r4, lsl #2]
   4e93c:	add	r5, r5, ip
   4e940:	strh	r1, [r0]
   4e944:	add	r0, r0, #4
   4e948:	bne	4e928 <GetDataSlab+0x1e9a8>
   4e94c:	ldr	r0, [sp, #52]	; 0x34
   4e950:	ldr	r1, [sp, #48]	; 0x30
   4e954:	add	r0, r0, r3
   4e958:	cmp	r1, #0
   4e95c:	beq	4e978 <GetDataSlab+0x1e9f8>
   4e960:	ldr	r1, [sp, #88]	; 0x58
   4e964:	ldr	r3, [sp, #68]	; 0x44
   4e968:	add	r1, r1, r3, lsl #1
   4e96c:	ldr	r3, [r5], r4, lsl #2
   4e970:	add	r1, r1, r7, lsl #1
   4e974:	strh	r3, [r1]
   4e978:	add	r0, r0, r2
   4e97c:	b	4e984 <GetDataSlab+0x1ea04>
   4e980:	add	r0, r2, r3
   4e984:	ldr	r1, [sp, #64]	; 0x40
   4e988:	sub	r1, r1, r2
   4e98c:	add	r3, r0, r1
   4e990:	ldr	r0, [fp, #24]
   4e994:	add	r4, r5, r1, lsl #2
   4e998:	cmp	r0, #2
   4e99c:	blt	4e8cc <GetDataSlab+0x1e94c>
   4e9a0:	ldr	r5, [sp, #44]	; 0x2c
   4e9a4:	mov	r2, #0
   4e9a8:	b	4e9d4 <GetDataSlab+0x1ea54>
   4e9ac:	sub	r1, fp, #176	; 0xb0
   4e9b0:	ldr	r7, [r8, r2]
   4e9b4:	sub	r0, r0, r9
   4e9b8:	ldr	r1, [r1, r2]
   4e9bc:	mla	r0, r7, r1, r0
   4e9c0:	add	r3, r0, r3
   4e9c4:	add	r4, r4, r0, lsl #2
   4e9c8:	subs	r5, r5, #1
   4e9cc:	add	r2, r2, #4
   4e9d0:	beq	4e8cc <GetDataSlab+0x1e94c>
   4e9d4:	ldr	r0, [r6, r2]
   4e9d8:	add	r0, r0, #1
   4e9dc:	str	r0, [r6, r2]
   4e9e0:	ldr	r1, [sl, r2]
   4e9e4:	sdiv	r7, r0, r1
   4e9e8:	mls	r0, r7, r1, r0
   4e9ec:	cmp	r0, #0
   4e9f0:	bne	4e8bc <GetDataSlab+0x1e93c>
   4e9f4:	mov	r0, #0
   4e9f8:	str	r0, [r6, r2]
   4e9fc:	ldr	r0, [sp, #84]	; 0x54
   4ea00:	ldr	r0, [r0, r2]
   4ea04:	sdiv	r1, r3, r0
   4ea08:	mls	r9, r1, r0, r3
   4ea0c:	cmp	r9, #0
   4ea10:	bne	4e9ac <GetDataSlab+0x1ea2c>
   4ea14:	ldr	r0, [r8, r2]
   4ea18:	cmp	r0, #0
   4ea1c:	beq	4e9c8 <GetDataSlab+0x1ea48>
   4ea20:	sub	r1, fp, #176	; 0xb0
   4ea24:	ldr	r1, [r1, r2]
   4ea28:	mla	r3, r1, r0, r3
   4ea2c:	mul	r0, r1, r0
   4ea30:	b	4e9c4 <GetDataSlab+0x1ea44>
   4ea34:	ldr	r0, [sp, #76]	; 0x4c
   4ea38:	ldr	r1, [sp, #72]	; 0x48
   4ea3c:	ldr	r2, [sp, #60]	; 0x3c
   4ea40:	cmp	r0, #1
   4ea44:	ldr	r0, [fp, #20]
   4ea48:	blt	56c18 <GetDataSlab+0x26c98>
   4ea4c:	mls	r1, r1, r5, r2
   4ea50:	add	sl, r0, #4
   4ea54:	mov	r0, r8
   4ea58:	add	r0, r0, #2
   4ea5c:	str	r0, [sp, #80]	; 0x50
   4ea60:	mov	r0, #0
   4ea64:	str	r1, [sp, #64]	; 0x40
   4ea68:	sub	r1, fp, #136	; 0x88
   4ea6c:	str	r0, [sp, #68]	; 0x44
   4ea70:	orr	r6, r1, #4
   4ea74:	orr	r1, ip, #4
   4ea78:	lsl	ip, r5, #3
   4ea7c:	str	r1, [sp, #84]	; 0x54
   4ea80:	ldr	r1, [fp, #12]
   4ea84:	add	r8, r1, #4
   4ea88:	ldr	r1, [fp, #24]
   4ea8c:	sub	r1, r1, #1
   4ea90:	str	r1, [sp, #44]	; 0x2c
   4ea94:	sub	r1, fp, #96	; 0x60
   4ea98:	orr	r1, r1, #4
   4ea9c:	str	r1, [sp, #40]	; 0x28
   4eaa0:	ldr	r1, [sp, #72]	; 0x48
   4eaa4:	mul	r2, r1, r5
   4eaa8:	str	r2, [sp, #52]	; 0x34
   4eaac:	and	r2, r1, #1
   4eab0:	sub	lr, r1, r2
   4eab4:	str	r2, [sp, #48]	; 0x30
   4eab8:	lsl	r2, r1, #1
   4eabc:	str	r2, [sp, #60]	; 0x3c
   4eac0:	b	4eb04 <GetDataSlab+0x1eb84>
   4eac4:	ldr	r0, [sp, #40]	; 0x28
   4eac8:	ldr	r0, [r0, r2]
   4eacc:	add	r4, r4, r0, lsl #2
   4ead0:	add	r3, r0, r3
   4ead4:	ldr	r0, [sp, #60]	; 0x3c
   4ead8:	ldr	r1, [sp, #80]	; 0x50
   4eadc:	ldr	r2, [sp, #68]	; 0x44
   4eae0:	add	r1, r1, r0
   4eae4:	ldr	r0, [sp, #76]	; 0x4c
   4eae8:	str	r1, [sp, #80]	; 0x50
   4eaec:	ldr	r1, [sp, #72]	; 0x48
   4eaf0:	add	r2, r2, r1
   4eaf4:	str	r2, [sp, #68]	; 0x44
   4eaf8:	cmp	r2, r0
   4eafc:	mov	r2, #0
   4eb00:	bge	56c1c <GetDataSlab+0x26c9c>
   4eb04:	ldr	r0, [fp, #12]
   4eb08:	cmp	r1, #1
   4eb0c:	ldr	r2, [r0]
   4eb10:	add	r5, r4, r2, lsl #2
   4eb14:	blt	4eb88 <GetDataSlab+0x1ec08>
   4eb18:	ldr	r4, [sp, #56]	; 0x38
   4eb1c:	mov	r7, #0
   4eb20:	cmp	r1, #1
   4eb24:	beq	4eb54 <GetDataSlab+0x1ebd4>
   4eb28:	ldr	r0, [sp, #80]	; 0x50
   4eb2c:	mov	r7, #0
   4eb30:	ldr	r1, [r5]
   4eb34:	add	r7, r7, #2
   4eb38:	cmp	lr, r7
   4eb3c:	strh	r1, [r0, #-2]
   4eb40:	ldr	r1, [r5, r4, lsl #2]
   4eb44:	add	r5, r5, ip
   4eb48:	strh	r1, [r0]
   4eb4c:	add	r0, r0, #4
   4eb50:	bne	4eb30 <GetDataSlab+0x1ebb0>
   4eb54:	ldr	r0, [sp, #52]	; 0x34
   4eb58:	ldr	r1, [sp, #48]	; 0x30
   4eb5c:	add	r0, r0, r3
   4eb60:	cmp	r1, #0
   4eb64:	beq	4eb80 <GetDataSlab+0x1ec00>
   4eb68:	ldr	r1, [sp, #88]	; 0x58
   4eb6c:	ldr	r3, [sp, #68]	; 0x44
   4eb70:	add	r1, r1, r3, lsl #1
   4eb74:	ldr	r3, [r5], r4, lsl #2
   4eb78:	add	r1, r1, r7, lsl #1
   4eb7c:	strh	r3, [r1]
   4eb80:	add	r0, r0, r2
   4eb84:	b	4eb8c <GetDataSlab+0x1ec0c>
   4eb88:	add	r0, r2, r3
   4eb8c:	ldr	r1, [sp, #64]	; 0x40
   4eb90:	sub	r1, r1, r2
   4eb94:	add	r3, r0, r1
   4eb98:	ldr	r0, [fp, #24]
   4eb9c:	add	r4, r5, r1, lsl #2
   4eba0:	cmp	r0, #2
   4eba4:	blt	4ead4 <GetDataSlab+0x1eb54>
   4eba8:	ldr	r5, [sp, #44]	; 0x2c
   4ebac:	mov	r2, #0
   4ebb0:	b	4ebdc <GetDataSlab+0x1ec5c>
   4ebb4:	sub	r1, fp, #176	; 0xb0
   4ebb8:	ldr	r7, [r8, r2]
   4ebbc:	sub	r0, r0, r9
   4ebc0:	ldr	r1, [r1, r2]
   4ebc4:	mla	r0, r7, r1, r0
   4ebc8:	add	r3, r0, r3
   4ebcc:	add	r4, r4, r0, lsl #2
   4ebd0:	subs	r5, r5, #1
   4ebd4:	add	r2, r2, #4
   4ebd8:	beq	4ead4 <GetDataSlab+0x1eb54>
   4ebdc:	ldr	r0, [r6, r2]
   4ebe0:	add	r0, r0, #1
   4ebe4:	str	r0, [r6, r2]
   4ebe8:	ldr	r1, [sl, r2]
   4ebec:	sdiv	r7, r0, r1
   4ebf0:	mls	r0, r7, r1, r0
   4ebf4:	cmp	r0, #0
   4ebf8:	bne	4eac4 <GetDataSlab+0x1eb44>
   4ebfc:	mov	r0, #0
   4ec00:	str	r0, [r6, r2]
   4ec04:	ldr	r0, [sp, #84]	; 0x54
   4ec08:	ldr	r0, [r0, r2]
   4ec0c:	sdiv	r1, r3, r0
   4ec10:	mls	r9, r1, r0, r3
   4ec14:	cmp	r9, #0
   4ec18:	bne	4ebb4 <GetDataSlab+0x1ec34>
   4ec1c:	ldr	r0, [r8, r2]
   4ec20:	cmp	r0, #0
   4ec24:	beq	4ebd0 <GetDataSlab+0x1ec50>
   4ec28:	sub	r1, fp, #176	; 0xb0
   4ec2c:	ldr	r1, [r1, r2]
   4ec30:	mla	r3, r1, r0, r3
   4ec34:	mul	r0, r1, r0
   4ec38:	b	4ebcc <GetDataSlab+0x1ec4c>
   4ec3c:	ldr	r0, [sp, #76]	; 0x4c
   4ec40:	cmp	r0, #1
   4ec44:	ldr	r0, [sp, #60]	; 0x3c
   4ec48:	blt	56c18 <GetDataSlab+0x26c98>
   4ec4c:	ldr	r2, [sp, #92]	; 0x5c
   4ec50:	ldr	r5, [sp, #40]	; 0x28
   4ec54:	ldr	r3, [sp, #64]	; 0x40
   4ec58:	ldr	r6, [r2], #4
   4ec5c:	mls	r0, r3, r5, r0
   4ec60:	lsl	sl, r5, #3
   4ec64:	str	r2, [sp, #92]	; 0x5c
   4ec68:	sub	r0, r0, r6
   4ec6c:	str	r6, [sp, #60]	; 0x3c
   4ec70:	str	r0, [sp, #56]	; 0x38
   4ec74:	sub	r0, fp, #136	; 0x88
   4ec78:	orr	r4, r0, #4
   4ec7c:	ldr	r0, [fp, #20]
   4ec80:	add	r0, r0, #4
   4ec84:	str	r0, [sp, #84]	; 0x54
   4ec88:	orr	r0, ip, #4
   4ec8c:	lsl	ip, r5, #2
   4ec90:	str	r0, [sp, #80]	; 0x50
   4ec94:	ldr	r0, [fp, #24]
   4ec98:	sub	r0, r0, #1
   4ec9c:	str	r0, [sp, #36]	; 0x24
   4eca0:	sub	r0, fp, #96	; 0x60
   4eca4:	orr	r0, r0, #4
   4eca8:	str	r0, [sp, #32]
   4ecac:	mla	r0, r3, r5, r6
   4ecb0:	str	r0, [sp, #48]	; 0x30
   4ecb4:	and	r0, r3, #1
   4ecb8:	sub	r9, r3, r0
   4ecbc:	str	r0, [sp, #44]	; 0x2c
   4ecc0:	lsl	r0, r3, #1
   4ecc4:	str	r0, [sp, #52]	; 0x34
   4ecc8:	ldr	r0, [sp, #88]	; 0x58
   4eccc:	add	r0, r0, #2
   4ecd0:	str	r0, [sp, #72]	; 0x48
   4ecd4:	mov	r0, #0
   4ecd8:	str	r0, [sp, #68]	; 0x44
   4ecdc:	b	4ed20 <GetDataSlab+0x1eda0>
   4ece0:	ldr	r0, [sp, #32]
   4ece4:	ldr	r0, [r0, r2]
   4ece8:	add	lr, lr, r0, lsl #2
   4ecec:	add	r1, r0, r1
   4ecf0:	ldr	r0, [sp, #52]	; 0x34
   4ecf4:	ldr	r2, [sp, #72]	; 0x48
   4ecf8:	ldr	r3, [sp, #64]	; 0x40
   4ecfc:	add	r2, r2, r0
   4ed00:	ldr	r0, [sp, #76]	; 0x4c
   4ed04:	str	r2, [sp, #72]	; 0x48
   4ed08:	ldr	r2, [sp, #68]	; 0x44
   4ed0c:	add	r2, r2, r3
   4ed10:	str	r2, [sp, #68]	; 0x44
   4ed14:	cmp	r2, r0
   4ed18:	mov	r2, #0
   4ed1c:	bge	56c1c <GetDataSlab+0x26c9c>
   4ed20:	ldr	r8, [sp, #60]	; 0x3c
   4ed24:	cmp	r3, #1
   4ed28:	add	r2, lr, r8, lsl #2
   4ed2c:	blt	4edb4 <GetDataSlab+0x1ee34>
   4ed30:	mov	r3, #0
   4ed34:	beq	4ed78 <GetDataSlab+0x1edf8>
   4ed38:	ldr	r5, [sp, #72]	; 0x48
   4ed3c:	mov	r3, #0
   4ed40:	vldr	s0, [r2]
   4ed44:	add	r3, r3, #2
   4ed48:	cmp	r9, r3
   4ed4c:	vcvt.s32.f32	s0, s0
   4ed50:	vmov	r0, s0
   4ed54:	strh	r0, [r5, #-2]
   4ed58:	add	r0, r2, ip
   4ed5c:	add	r2, r2, sl
   4ed60:	vldr	s0, [r0]
   4ed64:	vcvt.s32.f32	s0, s0
   4ed68:	vmov	r0, s0
   4ed6c:	strh	r0, [r5]
   4ed70:	add	r5, r5, #4
   4ed74:	bne	4ed40 <GetDataSlab+0x1edc0>
   4ed78:	ldr	r0, [sp, #44]	; 0x2c
   4ed7c:	ldr	r8, [sp, #48]	; 0x30
   4ed80:	cmp	r0, #0
   4ed84:	beq	4edb4 <GetDataSlab+0x1ee34>
   4ed88:	vldr	s0, [r2]
   4ed8c:	ldr	r0, [sp, #88]	; 0x58
   4ed90:	ldr	r7, [sp, #68]	; 0x44
   4ed94:	add	r0, r0, r7, lsl #1
   4ed98:	vcvt.s32.f32	s0, s0
   4ed9c:	ldr	r8, [sp, #48]	; 0x30
   4eda0:	add	r0, r0, r3, lsl #1
   4eda4:	vmov	r3, s0
   4eda8:	strh	r3, [r0]
   4edac:	ldr	r0, [sp, #40]	; 0x28
   4edb0:	add	r2, r2, r0, lsl #2
   4edb4:	ldr	r3, [sp, #56]	; 0x38
   4edb8:	add	r0, r8, r1
   4edbc:	add	r1, r0, r3
   4edc0:	ldr	r0, [fp, #24]
   4edc4:	add	lr, r2, r3, lsl #2
   4edc8:	cmp	r0, #2
   4edcc:	blt	4ecf0 <GetDataSlab+0x1ed70>
   4edd0:	ldr	r3, [sp, #36]	; 0x24
   4edd4:	ldr	r8, [sp, #92]	; 0x5c
   4edd8:	mov	r2, #0
   4eddc:	b	4ee08 <GetDataSlab+0x1ee88>
   4ede0:	sub	r5, fp, #176	; 0xb0
   4ede4:	ldr	r7, [r8, r2]
   4ede8:	sub	r0, r0, r6
   4edec:	ldr	r5, [r5, r2]
   4edf0:	mla	r0, r7, r5, r0
   4edf4:	add	r1, r0, r1
   4edf8:	add	lr, lr, r0, lsl #2
   4edfc:	subs	r3, r3, #1
   4ee00:	add	r2, r2, #4
   4ee04:	beq	4ecf0 <GetDataSlab+0x1ed70>
   4ee08:	ldr	r0, [r4, r2]
   4ee0c:	ldr	r5, [sp, #84]	; 0x54
   4ee10:	add	r0, r0, #1
   4ee14:	str	r0, [r4, r2]
   4ee18:	ldr	r5, [r5, r2]
   4ee1c:	sdiv	r6, r0, r5
   4ee20:	mls	r0, r6, r5, r0
   4ee24:	cmp	r0, #0
   4ee28:	bne	4ece0 <GetDataSlab+0x1ed60>
   4ee2c:	mov	r0, #0
   4ee30:	str	r0, [r4, r2]
   4ee34:	ldr	r0, [sp, #80]	; 0x50
   4ee38:	ldr	r0, [r0, r2]
   4ee3c:	sdiv	r5, r1, r0
   4ee40:	mls	r6, r5, r0, r1
   4ee44:	cmp	r6, #0
   4ee48:	bne	4ede0 <GetDataSlab+0x1ee60>
   4ee4c:	ldr	r0, [r8, r2]
   4ee50:	cmp	r0, #0
   4ee54:	beq	4edfc <GetDataSlab+0x1ee7c>
   4ee58:	sub	r5, fp, #176	; 0xb0
   4ee5c:	ldr	r5, [r5, r2]
   4ee60:	mla	r1, r5, r0, r1
   4ee64:	mul	r0, r5, r0
   4ee68:	b	4edf8 <GetDataSlab+0x1ee78>
   4ee6c:	ldr	r0, [sp, #76]	; 0x4c
   4ee70:	ldr	r2, [sp, #88]	; 0x58
   4ee74:	ldr	r3, [fp, #12]
   4ee78:	sub	r6, fp, #96	; 0x60
   4ee7c:	cmp	r0, #1
   4ee80:	blt	56c18 <GetDataSlab+0x26c98>
   4ee84:	ldr	r5, [sp, #40]	; 0x28
   4ee88:	ldr	r7, [sp, #64]	; 0x40
   4ee8c:	ldr	r0, [sp, #72]	; 0x48
   4ee90:	ldr	r4, [r3], #4
   4ee94:	str	r3, [sp, #92]	; 0x5c
   4ee98:	mls	r0, r7, r5, r0
   4ee9c:	mov	r3, r7
   4eea0:	lsl	lr, r5, #4
   4eea4:	str	r4, [sp, #60]	; 0x3c
   4eea8:	sub	r0, r0, r4
   4eeac:	str	r0, [sp, #56]	; 0x38
   4eeb0:	sub	r0, fp, #136	; 0x88
   4eeb4:	orr	r7, r0, #4
   4eeb8:	ldr	r0, [fp, #20]
   4eebc:	add	r0, r0, #4
   4eec0:	str	r0, [sp, #84]	; 0x54
   4eec4:	orr	r0, ip, #4
   4eec8:	lsl	ip, r5, #3
   4eecc:	str	r0, [sp, #80]	; 0x50
   4eed0:	ldr	r0, [fp, #24]
   4eed4:	sub	r0, r0, #1
   4eed8:	str	r0, [sp, #36]	; 0x24
   4eedc:	orr	r0, r6, #4
   4eee0:	str	r0, [sp, #32]
   4eee4:	mla	r0, r3, r5, r4
   4eee8:	str	r0, [sp, #48]	; 0x30
   4eeec:	and	r0, r3, #1
   4eef0:	sub	sl, r3, r0
   4eef4:	str	r0, [sp, #44]	; 0x2c
   4eef8:	lsl	r0, r3, #1
   4eefc:	str	r0, [sp, #52]	; 0x34
   4ef00:	add	r0, r2, #2
   4ef04:	str	r0, [sp, #72]	; 0x48
   4ef08:	mov	r0, #0
   4ef0c:	str	r0, [sp, #68]	; 0x44
   4ef10:	b	4ef54 <GetDataSlab+0x1efd4>
   4ef14:	ldr	r0, [sp, #32]
   4ef18:	ldr	r0, [r0, r2]
   4ef1c:	add	r9, r9, r0, lsl #3
   4ef20:	add	r1, r0, r1
   4ef24:	ldr	r0, [sp, #52]	; 0x34
   4ef28:	ldr	r2, [sp, #72]	; 0x48
   4ef2c:	ldr	r3, [sp, #64]	; 0x40
   4ef30:	add	r2, r2, r0
   4ef34:	ldr	r0, [sp, #76]	; 0x4c
   4ef38:	str	r2, [sp, #72]	; 0x48
   4ef3c:	ldr	r2, [sp, #68]	; 0x44
   4ef40:	add	r2, r2, r3
   4ef44:	str	r2, [sp, #68]	; 0x44
   4ef48:	cmp	r2, r0
   4ef4c:	mov	r2, #0
   4ef50:	bge	56c1c <GetDataSlab+0x26c9c>
   4ef54:	ldr	r8, [sp, #60]	; 0x3c
   4ef58:	cmp	r3, #1
   4ef5c:	add	r2, r9, r8, lsl #3
   4ef60:	blt	4efe8 <GetDataSlab+0x1f068>
   4ef64:	mov	r3, #0
   4ef68:	beq	4efac <GetDataSlab+0x1f02c>
   4ef6c:	ldr	r4, [sp, #72]	; 0x48
   4ef70:	mov	r3, #0
   4ef74:	vldr	d16, [r2]
   4ef78:	add	r3, r3, #2
   4ef7c:	cmp	sl, r3
   4ef80:	vcvt.s32.f64	s0, d16
   4ef84:	vmov	r0, s0
   4ef88:	strh	r0, [r4, #-2]
   4ef8c:	add	r0, r2, ip
   4ef90:	add	r2, r2, lr
   4ef94:	vldr	d16, [r0]
   4ef98:	vcvt.s32.f64	s0, d16
   4ef9c:	vmov	r0, s0
   4efa0:	strh	r0, [r4]
   4efa4:	add	r4, r4, #4
   4efa8:	bne	4ef74 <GetDataSlab+0x1eff4>
   4efac:	ldr	r0, [sp, #44]	; 0x2c
   4efb0:	ldr	r8, [sp, #48]	; 0x30
   4efb4:	cmp	r0, #0
   4efb8:	beq	4efe8 <GetDataSlab+0x1f068>
   4efbc:	vldr	d16, [r2]
   4efc0:	ldr	r0, [sp, #88]	; 0x58
   4efc4:	ldr	r4, [sp, #68]	; 0x44
   4efc8:	add	r0, r0, r4, lsl #1
   4efcc:	vcvt.s32.f64	s0, d16
   4efd0:	ldr	r8, [sp, #48]	; 0x30
   4efd4:	add	r0, r0, r3, lsl #1
   4efd8:	vmov	r3, s0
   4efdc:	strh	r3, [r0]
   4efe0:	ldr	r0, [sp, #40]	; 0x28
   4efe4:	add	r2, r2, r0, lsl #3
   4efe8:	ldr	r3, [sp, #56]	; 0x38
   4efec:	add	r0, r8, r1
   4eff0:	add	r1, r0, r3
   4eff4:	ldr	r0, [fp, #24]
   4eff8:	add	r9, r2, r3, lsl #3
   4effc:	cmp	r0, #2
   4f000:	blt	4ef24 <GetDataSlab+0x1efa4>
   4f004:	ldr	r3, [sp, #36]	; 0x24
   4f008:	ldr	r8, [sp, #92]	; 0x5c
   4f00c:	mov	r2, #0
   4f010:	b	4f03c <GetDataSlab+0x1f0bc>
   4f014:	sub	r4, fp, #176	; 0xb0
   4f018:	sub	r0, r5, r0
   4f01c:	ldr	r6, [r4, r2]
   4f020:	ldr	r4, [r8, r2]
   4f024:	mla	r0, r4, r6, r0
   4f028:	add	r1, r0, r1
   4f02c:	add	r9, r9, r0, lsl #3
   4f030:	subs	r3, r3, #1
   4f034:	add	r2, r2, #4
   4f038:	beq	4ef24 <GetDataSlab+0x1efa4>
   4f03c:	ldr	r0, [r7, r2]
   4f040:	ldr	r4, [sp, #84]	; 0x54
   4f044:	add	r0, r0, #1
   4f048:	str	r0, [r7, r2]
   4f04c:	ldr	r5, [r4, r2]
   4f050:	sdiv	r6, r0, r5
   4f054:	mls	r0, r6, r5, r0
   4f058:	cmp	r0, #0
   4f05c:	bne	4ef14 <GetDataSlab+0x1ef94>
   4f060:	mov	r0, #0
   4f064:	str	r0, [r7, r2]
   4f068:	ldr	r0, [sp, #80]	; 0x50
   4f06c:	ldr	r5, [r0, r2]
   4f070:	sdiv	r0, r1, r5
   4f074:	mls	r0, r0, r5, r1
   4f078:	cmp	r0, #0
   4f07c:	bne	4f014 <GetDataSlab+0x1f094>
   4f080:	ldr	r0, [r8, r2]
   4f084:	cmp	r0, #0
   4f088:	beq	4f030 <GetDataSlab+0x1f0b0>
   4f08c:	sub	r4, fp, #176	; 0xb0
   4f090:	ldr	r4, [r4, r2]
   4f094:	mla	r1, r4, r0, r1
   4f098:	mul	r0, r4, r0
   4f09c:	b	4f02c <GetDataSlab+0x1f0ac>
   4f0a0:	ldr	r0, [sp, #68]	; 0x44
   4f0a4:	ldr	r4, [fp, #20]
   4f0a8:	ldr	r6, [sp, #56]	; 0x38
   4f0ac:	cmp	r0, #1
   4f0b0:	blt	4f2a8 <GetDataSlab+0x1f328>
   4f0b4:	ldr	r2, [fp, #12]
   4f0b8:	ldr	r0, [sp, #44]	; 0x2c
   4f0bc:	mov	r5, r4
   4f0c0:	add	r5, r5, #4
   4f0c4:	ldr	r4, [r2], #4
   4f0c8:	mls	r0, r6, r7, r0
   4f0cc:	str	r2, [sp, #84]	; 0x54
   4f0d0:	mov	r2, #0
   4f0d4:	str	r2, [sp, #60]	; 0x3c
   4f0d8:	sub	r0, r0, r4
   4f0dc:	str	r4, [sp, #52]	; 0x34
   4f0e0:	str	r0, [sp, #48]	; 0x30
   4f0e4:	sub	r0, fp, #136	; 0x88
   4f0e8:	orr	r3, r0, #4
   4f0ec:	orr	r0, ip, #4
   4f0f0:	lsl	ip, r7, #3
   4f0f4:	str	r0, [sp, #72]	; 0x48
   4f0f8:	ldr	r0, [fp, #24]
   4f0fc:	sub	r0, r0, #1
   4f100:	str	r0, [sp, #32]
   4f104:	sub	r0, fp, #96	; 0x60
   4f108:	orr	r0, r0, #4
   4f10c:	str	r0, [sp, #28]
   4f110:	mla	r0, r6, r7, r4
   4f114:	mov	r4, r6
   4f118:	str	r0, [sp, #40]	; 0x28
   4f11c:	and	r0, r6, #1
   4f120:	str	r0, [sp, #36]	; 0x24
   4f124:	sub	r9, r6, r0
   4f128:	lsl	r0, r6, #1
   4f12c:	str	r0, [sp, #44]	; 0x2c
   4f130:	add	r0, r8, #2
   4f134:	str	r0, [sp, #64]	; 0x40
   4f138:	lsl	r0, r7, #4
   4f13c:	b	4f180 <GetDataSlab+0x1f200>
   4f140:	ldr	r4, [sp, #28]
   4f144:	ldr	r2, [r4, r2]
   4f148:	add	lr, lr, r2, lsl #3
   4f14c:	add	r1, r2, r1
   4f150:	ldr	r2, [sp, #44]	; 0x2c
   4f154:	ldr	r4, [sp, #64]	; 0x40
   4f158:	ldr	r6, [sp, #60]	; 0x3c
   4f15c:	ldr	r8, [sp, #88]	; 0x58
   4f160:	add	r4, r4, r2
   4f164:	ldr	r2, [sp, #68]	; 0x44
   4f168:	str	r4, [sp, #64]	; 0x40
   4f16c:	ldr	r4, [sp, #56]	; 0x38
   4f170:	add	r6, r6, r4
   4f174:	cmp	r6, r2
   4f178:	str	r6, [sp, #60]	; 0x3c
   4f17c:	bge	4f2a8 <GetDataSlab+0x1f328>
   4f180:	ldr	r6, [sp, #52]	; 0x34
   4f184:	cmp	r4, #1
   4f188:	add	r2, lr, r6, lsl #3
   4f18c:	blt	4f1f0 <GetDataSlab+0x1f270>
   4f190:	mov	r7, #0
   4f194:	beq	4f1c8 <GetDataSlab+0x1f248>
   4f198:	ldr	r6, [sp, #64]	; 0x40
   4f19c:	mov	r7, #0
   4f1a0:	ldrh	r4, [r2]
   4f1a4:	add	r7, r7, #2
   4f1a8:	cmp	r9, r7
   4f1ac:	strh	r4, [r6, #-2]
   4f1b0:	add	r4, r2, ip
   4f1b4:	add	r2, r2, r0
   4f1b8:	ldrh	r4, [r4]
   4f1bc:	strh	r4, [r6]
   4f1c0:	add	r6, r6, #4
   4f1c4:	bne	4f1a0 <GetDataSlab+0x1f220>
   4f1c8:	ldr	r6, [sp, #36]	; 0x24
   4f1cc:	cmp	r6, #0
   4f1d0:	ldr	r6, [sp, #40]	; 0x28
   4f1d4:	beq	4f1f0 <GetDataSlab+0x1f270>
   4f1d8:	ldr	r6, [sp, #60]	; 0x3c
   4f1dc:	ldrh	r4, [r2], ip
   4f1e0:	add	r6, r8, r6, lsl #1
   4f1e4:	add	r7, r6, r7, lsl #1
   4f1e8:	ldr	r6, [sp, #40]	; 0x28
   4f1ec:	strh	r4, [r7]
   4f1f0:	ldr	r4, [sp, #48]	; 0x30
   4f1f4:	add	r1, r6, r1
   4f1f8:	add	lr, r2, r4, lsl #3
   4f1fc:	ldr	r2, [fp, #24]
   4f200:	add	r1, r1, r4
   4f204:	cmp	r2, #2
   4f208:	blt	4f150 <GetDataSlab+0x1f1d0>
   4f20c:	ldr	r8, [sp, #32]
   4f210:	mov	r2, #0
   4f214:	b	4f244 <GetDataSlab+0x1f2c4>
   4f218:	ldr	r7, [sp, #84]	; 0x54
   4f21c:	sub	r4, fp, #176	; 0xb0
   4f220:	sub	r6, r6, sl
   4f224:	ldr	r4, [r4, r2]
   4f228:	ldr	r7, [r7, r2]
   4f22c:	mla	r4, r7, r4, r6
   4f230:	add	r1, r4, r1
   4f234:	add	lr, lr, r4, lsl #3
   4f238:	subs	r8, r8, #1
   4f23c:	add	r2, r2, #4
   4f240:	beq	4f150 <GetDataSlab+0x1f1d0>
   4f244:	ldr	r4, [r3, r2]
   4f248:	add	r4, r4, #1
   4f24c:	str	r4, [r3, r2]
   4f250:	ldr	r6, [r5, r2]
   4f254:	sdiv	r7, r4, r6
   4f258:	mls	r4, r7, r6, r4
   4f25c:	cmp	r4, #0
   4f260:	bne	4f140 <GetDataSlab+0x1f1c0>
   4f264:	mov	r4, #0
   4f268:	str	r4, [r3, r2]
   4f26c:	ldr	r4, [sp, #72]	; 0x48
   4f270:	ldr	r6, [r4, r2]
   4f274:	sdiv	r4, r1, r6
   4f278:	mls	sl, r4, r6, r1
   4f27c:	cmp	sl, #0
   4f280:	bne	4f218 <GetDataSlab+0x1f298>
   4f284:	ldr	r4, [sp, #84]	; 0x54
   4f288:	ldr	r6, [r4, r2]
   4f28c:	cmp	r6, #0
   4f290:	beq	4f238 <GetDataSlab+0x1f2b8>
   4f294:	sub	r4, fp, #176	; 0xb0
   4f298:	ldr	r4, [r4, r2]
   4f29c:	mla	r1, r4, r6, r1
   4f2a0:	mul	r4, r4, r6
   4f2a4:	b	4f234 <GetDataSlab+0x1f2b4>
   4f2a8:	mov	r2, #0
   4f2ac:	ldr	r0, [sp, #76]	; 0x4c
   4f2b0:	cmp	r0, #13
   4f2b4:	bne	56c1c <GetDataSlab+0x26c9c>
   4f2b8:	ldr	r0, [fp, #16]
   4f2bc:	ldr	r8, [sp, #88]	; 0x58
   4f2c0:	mov	r1, #0
   4f2c4:	sub	r5, fp, #176	; 0xb0
   4f2c8:	sub	r6, fp, #96	; 0x60
   4f2cc:	ldr	r0, [r0]
   4f2d0:	str	r0, [sp, #64]	; 0x40
   4f2d4:	sub	r0, r0, #1
   4f2d8:	str	r0, [fp, #-96]	; 0xffffffa0
   4f2dc:	ldr	r0, [fp, #8]
   4f2e0:	ldr	r0, [r0]
   4f2e4:	str	r0, [sp, #60]	; 0x3c
   4f2e8:	str	r0, [fp, #-176]	; 0xffffff50
   4f2ec:	ldr	r0, [fp, #20]
   4f2f0:	ldr	r2, [r0]
   4f2f4:	ldr	r0, [fp, #24]
   4f2f8:	cmp	r0, #2
   4f2fc:	str	r2, [sp, #72]	; 0x48
   4f300:	str	r2, [sp, #76]	; 0x4c
   4f304:	blt	4f45c <GetDataSlab+0x1f4dc>
   4f308:	ldr	r0, [fp, #8]
   4f30c:	ldr	r3, [sp, #60]	; 0x3c
   4f310:	mov	r4, #1
   4f314:	mov	r9, #0
   4f318:	mvn	lr, #15
   4f31c:	mov	r1, #0
   4f320:	sub	r7, r0, #4
   4f324:	sub	ip, r0, #12
   4f328:	ldr	r0, [sp, #72]	; 0x48
   4f32c:	mov	sl, r3
   4f330:	str	r0, [sp, #76]	; 0x4c
   4f334:	b	4f388 <GetDataSlab+0x1f408>
   4f338:	ldr	r8, [sp, #88]	; 0x58
   4f33c:	sub	r6, fp, #96	; 0x60
   4f340:	sub	r5, fp, #176	; 0xb0
   4f344:	ldr	r2, [sp, #76]	; 0x4c
   4f348:	add	ip, ip, #4
   4f34c:	str	r0, [r6, r4, lsl #2]
   4f350:	ldr	r0, [fp, #12]
   4f354:	str	r3, [r5, r4, lsl #2]
   4f358:	ldr	r0, [r0, r4, lsl #2]
   4f35c:	mla	r1, r0, sl, r1
   4f360:	ldr	r0, [fp, #20]
   4f364:	mov	sl, r3
   4f368:	ldr	r3, [sp, #84]	; 0x54
   4f36c:	ldr	r0, [r0, r4, lsl #2]
   4f370:	add	r4, r4, #1
   4f374:	mul	r2, r0, r2
   4f378:	ldr	r0, [fp, #24]
   4f37c:	str	r2, [sp, #76]	; 0x4c
   4f380:	cmp	r4, r0
   4f384:	beq	4f45c <GetDataSlab+0x1f4dc>
   4f388:	ldr	r0, [fp, #16]
   4f38c:	add	r9, r9, #1
   4f390:	cmp	r9, #4
   4f394:	ldr	r0, [r0, r4, lsl #2]
   4f398:	str	r3, [r5, r4, lsl #2]
   4f39c:	sub	r0, r0, #1
   4f3a0:	str	r0, [r6, r4, lsl #2]
   4f3a4:	ldr	r6, [fp, #8]
   4f3a8:	ldr	r6, [r6, r4, lsl #2]
   4f3ac:	str	r6, [sp, #84]	; 0x54
   4f3b0:	bcs	4f3bc <GetDataSlab+0x1f43c>
   4f3b4:	mov	r5, r4
   4f3b8:	b	4f444 <GetDataSlab+0x1f4c4>
   4f3bc:	vmov.i32	q9, #1	; 0x00000001
   4f3c0:	vmov.i32	q10, #1	; 0x00000001
   4f3c4:	vmov.32	d23[1], r6
   4f3c8:	vmov.i32	q8, #1	; 0x00000001
   4f3cc:	bic	r6, r9, #3
   4f3d0:	bic	r8, r4, #3
   4f3d4:	sub	r5, r4, r6
   4f3d8:	vmov.32	d18[0], r3
   4f3dc:	vmov.32	d20[0], r0
   4f3e0:	mov	r0, ip
   4f3e4:	vorr	d16, d18, d18
   4f3e8:	vmov.i32	q9, #1	; 0x00000001
   4f3ec:	vorr	d18, d20, d20
   4f3f0:	vld1.32	{d20-d21}, [r0], lr
   4f3f4:	subs	r8, r8, #4
   4f3f8:	vrev64.32	q12, q10
   4f3fc:	vext.8	q12, q12, q12, #8
   4f400:	vext.8	q11, q11, q12, #12
   4f404:	vmul.i32	q9, q9, q12
   4f408:	vmul.i32	q8, q11, q8
   4f40c:	vorr	q11, q12, q12
   4f410:	bne	4f3f0 <GetDataSlab+0x1f470>
   4f414:	vext.8	q11, q9, q8, #8
   4f418:	vext.8	q12, q8, q8, #8
   4f41c:	cmp	r9, r6
   4f420:	vmul.i32	q0, q9, q11
   4f424:	vmul.i32	q1, q8, q12
   4f428:	vmul.i32	q8, q0, d0[1]
   4f42c:	vmul.i32	q9, q1, d2[1]
   4f430:	vmov.32	r0, d16[0]
   4f434:	vmov.32	r3, d18[0]
   4f438:	beq	4f338 <GetDataSlab+0x1f3b8>
   4f43c:	vmov.32	r6, d20[0]
   4f440:	ldr	r8, [sp, #88]	; 0x58
   4f444:	mul	r3, r6, r3
   4f448:	ldr	r6, [r7, r5, lsl #2]
   4f44c:	subs	r5, r5, #1
   4f450:	mul	r0, r0, r6
   4f454:	bne	4f444 <GetDataSlab+0x1f4c4>
   4f458:	b	4f33c <GetDataSlab+0x1f3bc>
   4f45c:	ldr	r0, [sp, #80]	; 0x50
   4f460:	ldr	r5, [sp, #64]	; 0x40
   4f464:	add	ip, r0, r1, lsl #3
   4f468:	cmp	r5, #1
   4f46c:	bne	561b4 <GetDataSlab+0x26234>
   4f470:	ldr	r0, [sp, #76]	; 0x4c
   4f474:	ldr	r3, [fp, #20]
   4f478:	ldr	sl, [sp, #60]	; 0x3c
   4f47c:	cmp	r0, #1
   4f480:	blt	56c18 <GetDataSlab+0x26c98>
   4f484:	mov	r7, r3
   4f488:	ldr	r3, [sp, #72]	; 0x48
   4f48c:	mov	r2, #1
   4f490:	mov	lr, r8
   4f494:	add	r9, r7, #4
   4f498:	sub	r0, r3, #2
   4f49c:	add	r2, r2, r0, lsr #1
   4f4a0:	lsr	r0, r0, #1
   4f4a4:	str	r0, [sp, #44]	; 0x2c
   4f4a8:	mov	r0, #0
   4f4ac:	and	r6, r2, #1
   4f4b0:	str	r0, [sp, #80]	; 0x50
   4f4b4:	sub	r2, r2, r6
   4f4b8:	str	r6, [sp, #52]	; 0x34
   4f4bc:	str	r2, [sp, #36]	; 0x24
   4f4c0:	sub	r2, fp, #136	; 0x88
   4f4c4:	orr	r4, r2, #4
   4f4c8:	sub	r2, fp, #176	; 0xb0
   4f4cc:	orr	r2, r2, #4
   4f4d0:	str	r2, [sp, #84]	; 0x54
   4f4d4:	ldr	r2, [fp, #24]
   4f4d8:	sub	r2, r2, #1
   4f4dc:	str	r2, [sp, #56]	; 0x38
   4f4e0:	sub	r2, fp, #96	; 0x60
   4f4e4:	orr	r2, r2, #4
   4f4e8:	str	r2, [sp, #40]	; 0x28
   4f4ec:	lsl	r2, r3, #1
   4f4f0:	str	r2, [sp, #68]	; 0x44
   4f4f4:	bic	r2, r3, #1
   4f4f8:	str	r2, [sp, #48]	; 0x30
   4f4fc:	ldr	r2, [sp, #92]	; 0x5c
   4f500:	ldr	r7, [r2], #4
   4f504:	str	r2, [sp, #92]	; 0x5c
   4f508:	str	r7, [sp, #64]	; 0x40
   4f50c:	b	4f548 <GetDataSlab+0x1f5c8>
   4f510:	ldr	r2, [sp, #40]	; 0x28
   4f514:	ldr	r0, [r2, r0]
   4f518:	add	ip, ip, r0, lsl #3
   4f51c:	add	r1, r0, r1
   4f520:	ldr	r0, [sp, #68]	; 0x44
   4f524:	ldr	r3, [sp, #72]	; 0x48
   4f528:	ldr	r2, [sp, #80]	; 0x50
   4f52c:	add	lr, lr, r0
   4f530:	ldr	r0, [sp, #76]	; 0x4c
   4f534:	add	r2, r2, r3
   4f538:	str	r2, [sp, #80]	; 0x50
   4f53c:	cmp	r2, r0
   4f540:	mov	r2, #0
   4f544:	bge	56c1c <GetDataSlab+0x26c9c>
   4f548:	ldr	r8, [sp, #92]	; 0x5c
   4f54c:	cmp	r3, #1
   4f550:	blt	4f63c <GetDataSlab+0x1f6bc>
   4f554:	mov	r3, #0
   4f558:	beq	4f60c <GetDataSlab+0x1f68c>
   4f55c:	ldr	r0, [sp, #64]	; 0x40
   4f560:	mov	r2, #0
   4f564:	add	r6, ip, r0, lsl #3
   4f568:	ldr	r0, [sp, #44]	; 0x2c
   4f56c:	cmp	r0, #0
   4f570:	beq	4f5c4 <GetDataSlab+0x1f644>
   4f574:	ldr	r0, [sp, #36]	; 0x24
   4f578:	mov	r3, lr
   4f57c:	mov	sl, r6
   4f580:	mov	r8, r6
   4f584:	mov	r5, #32
   4f588:	vld1.64	{d16-d17}, [r8], r5
   4f58c:	add	r7, sl, #16
   4f590:	subs	r0, r0, #2
   4f594:	add	r2, r2, #4
   4f598:	mov	sl, r8
   4f59c:	vmovn.i64	d16, q8
   4f5a0:	vuzp.16	d16, d17
   4f5a4:	vst1.32	{d16[0]}, [r3]
   4f5a8:	vld1.64	{d16-d17}, [r7]
   4f5ac:	add	r7, r3, #4
   4f5b0:	add	r3, r3, #8
   4f5b4:	vmovn.i64	d16, q8
   4f5b8:	vuzp.16	d16, d17
   4f5bc:	vst1.32	{d16[0]}, [r7]
   4f5c0:	bne	4f588 <GetDataSlab+0x1f608>
   4f5c4:	ldr	r0, [sp, #52]	; 0x34
   4f5c8:	ldr	r8, [sp, #92]	; 0x5c
   4f5cc:	ldr	sl, [sp, #60]	; 0x3c
   4f5d0:	cmp	r0, #0
   4f5d4:	ldr	r0, [sp, #88]	; 0x58
   4f5d8:	beq	4f5fc <GetDataSlab+0x1f67c>
   4f5dc:	ldr	r3, [sp, #80]	; 0x50
   4f5e0:	add	r0, r0, r3, lsl #1
   4f5e4:	add	r3, r6, r2, lsl #3
   4f5e8:	vld1.64	{d16-d17}, [r3]
   4f5ec:	add	r0, r0, r2, lsl #1
   4f5f0:	vmovn.i64	d16, q8
   4f5f4:	vuzp.16	d16, d17
   4f5f8:	vst1.32	{d16[0]}, [r0]
   4f5fc:	ldr	r0, [sp, #72]	; 0x48
   4f600:	ldr	r3, [sp, #48]	; 0x30
   4f604:	cmp	r0, r3
   4f608:	beq	4f63c <GetDataSlab+0x1f6bc>
   4f60c:	ldr	r5, [sp, #64]	; 0x40
   4f610:	ldr	r2, [sp, #72]	; 0x48
   4f614:	mov	r0, #0
   4f618:	sub	r0, r0, r3, lsl #1
   4f61c:	add	r7, ip, r5, lsl #3
   4f620:	sub	r2, r2, r3
   4f624:	add	r3, r7, r3, lsl #3
   4f628:	ldrh	r7, [r3], #8
   4f62c:	subs	r2, r2, #1
   4f630:	strh	r7, [lr, -r0]
   4f634:	sub	r0, r0, #2
   4f638:	bne	4f628 <GetDataSlab+0x1f6a8>
   4f63c:	ldr	r0, [fp, #24]
   4f640:	add	ip, ip, sl, lsl #3
   4f644:	add	r1, r1, sl
   4f648:	cmp	r0, #2
   4f64c:	blt	4f520 <GetDataSlab+0x1f5a0>
   4f650:	ldr	r2, [sp, #56]	; 0x38
   4f654:	mov	r0, #0
   4f658:	b	4f684 <GetDataSlab+0x1f704>
   4f65c:	sub	r5, fp, #176	; 0xb0
   4f660:	sub	r3, r3, r7
   4f664:	ldr	r6, [r5, r0]
   4f668:	ldr	r5, [r8, r0]
   4f66c:	mla	r3, r5, r6, r3
   4f670:	add	r1, r3, r1
   4f674:	add	ip, ip, r3, lsl #3
   4f678:	subs	r2, r2, #1
   4f67c:	add	r0, r0, #4
   4f680:	beq	4f520 <GetDataSlab+0x1f5a0>
   4f684:	ldr	r3, [r4, r0]
   4f688:	add	r3, r3, #1
   4f68c:	str	r3, [r4, r0]
   4f690:	ldr	r7, [r9, r0]
   4f694:	sdiv	r6, r3, r7
   4f698:	mls	r3, r6, r7, r3
   4f69c:	cmp	r3, #0
   4f6a0:	bne	4f510 <GetDataSlab+0x1f590>
   4f6a4:	mov	r3, #0
   4f6a8:	str	r3, [r4, r0]
   4f6ac:	ldr	r3, [sp, #84]	; 0x54
   4f6b0:	ldr	r3, [r3, r0]
   4f6b4:	sdiv	r6, r1, r3
   4f6b8:	mls	r7, r6, r3, r1
   4f6bc:	cmp	r7, #0
   4f6c0:	bne	4f65c <GetDataSlab+0x1f6dc>
   4f6c4:	ldr	r3, [r8, r0]
   4f6c8:	cmp	r3, #0
   4f6cc:	beq	4f678 <GetDataSlab+0x1f6f8>
   4f6d0:	sub	r5, fp, #176	; 0xb0
   4f6d4:	ldr	r5, [r5, r0]
   4f6d8:	mla	r1, r5, r3, r1
   4f6dc:	mul	r3, r5, r3
   4f6e0:	b	4f674 <GetDataSlab+0x1f6f4>
   4f6e4:	ldr	r0, [sp, #76]	; 0x4c
   4f6e8:	sub	r2, fp, #96	; 0x60
   4f6ec:	cmp	r0, #1
   4f6f0:	ldr	r0, [fp, #12]
   4f6f4:	blt	56468 <GetDataSlab+0x264e8>
   4f6f8:	ldr	r6, [sp, #56]	; 0x38
   4f6fc:	ldr	r1, [sp, #52]	; 0x34
   4f700:	add	r0, r0, #4
   4f704:	str	r0, [sp, #84]	; 0x54
   4f708:	ldr	r0, [fp, #24]
   4f70c:	mls	r1, r6, sl, r1
   4f710:	mov	lr, r6
   4f714:	sub	r0, r0, #1
   4f718:	str	r0, [sp, #44]	; 0x2c
   4f71c:	orr	r0, r2, #4
   4f720:	str	r1, [sp, #68]	; 0x44
   4f724:	mul	r1, r6, sl
   4f728:	str	r0, [sp, #36]	; 0x24
   4f72c:	and	r0, r6, #1
   4f730:	str	r0, [sp, #48]	; 0x30
   4f734:	sub	r8, r6, r0
   4f738:	lsl	r0, r6, #1
   4f73c:	mov	r6, #0
   4f740:	str	r0, [sp, #64]	; 0x40
   4f744:	ldr	r0, [sp, #88]	; 0x58
   4f748:	str	r1, [sp, #52]	; 0x34
   4f74c:	sub	r1, fp, #136	; 0x88
   4f750:	orr	r4, r1, #4
   4f754:	ldr	r1, [fp, #20]
   4f758:	add	r0, r0, #2
   4f75c:	str	r0, [sp, #80]	; 0x50
   4f760:	add	r1, r1, #4
   4f764:	str	r1, [sp, #40]	; 0x28
   4f768:	sub	r1, fp, #176	; 0xb0
   4f76c:	orr	r1, r1, #4
   4f770:	str	r1, [sp, #60]	; 0x3c
   4f774:	b	4f7b4 <GetDataSlab+0x1f834>
   4f778:	ldr	r0, [sp, #36]	; 0x24
   4f77c:	ldr	r0, [r0, r2]
   4f780:	add	ip, ip, r0
   4f784:	add	r3, r0, r3
   4f788:	ldr	r0, [sp, #64]	; 0x40
   4f78c:	ldr	r1, [sp, #80]	; 0x50
   4f790:	ldr	lr, [sp, #56]	; 0x38
   4f794:	ldr	r6, [sp, #72]	; 0x48
   4f798:	mov	r2, #0
   4f79c:	add	r1, r1, r0
   4f7a0:	ldr	r0, [sp, #76]	; 0x4c
   4f7a4:	add	r6, r6, lr
   4f7a8:	str	r1, [sp, #80]	; 0x50
   4f7ac:	cmp	r6, r0
   4f7b0:	bge	56c1c <GetDataSlab+0x26c9c>
   4f7b4:	ldr	r0, [fp, #12]
   4f7b8:	cmp	lr, #1
   4f7bc:	ldr	r2, [r0]
   4f7c0:	add	r5, ip, r2
   4f7c4:	blt	4f834 <GetDataSlab+0x1f8b4>
   4f7c8:	mov	r7, #0
   4f7cc:	cmp	lr, #1
   4f7d0:	beq	4f800 <GetDataSlab+0x1f880>
   4f7d4:	ldr	r0, [sp, #80]	; 0x50
   4f7d8:	mov	r7, #0
   4f7dc:	ldrb	r1, [r5]
   4f7e0:	add	r7, r7, #2
   4f7e4:	cmp	r8, r7
   4f7e8:	strh	r1, [r0, #-2]
   4f7ec:	ldrb	r1, [r5, sl]!
   4f7f0:	add	r5, r5, sl
   4f7f4:	strh	r1, [r0]
   4f7f8:	add	r0, r0, #4
   4f7fc:	bne	4f7dc <GetDataSlab+0x1f85c>
   4f800:	ldr	r0, [sp, #52]	; 0x34
   4f804:	ldr	r1, [sp, #48]	; 0x30
   4f808:	ldr	lr, [sp, #60]	; 0x3c
   4f80c:	add	r0, r0, r3
   4f810:	cmp	r1, #0
   4f814:	beq	4f82c <GetDataSlab+0x1f8ac>
   4f818:	ldr	r1, [sp, #88]	; 0x58
   4f81c:	ldrb	r3, [r5], sl
   4f820:	add	r1, r1, r6, lsl #1
   4f824:	add	r1, r1, r7, lsl #1
   4f828:	strh	r3, [r1]
   4f82c:	add	r0, r0, r2
   4f830:	b	4f83c <GetDataSlab+0x1f8bc>
   4f834:	ldr	lr, [sp, #60]	; 0x3c
   4f838:	add	r0, r2, r3
   4f83c:	ldr	r1, [sp, #68]	; 0x44
   4f840:	str	r6, [sp, #72]	; 0x48
   4f844:	sub	r1, r1, r2
   4f848:	add	r3, r0, r1
   4f84c:	ldr	r0, [fp, #24]
   4f850:	add	ip, r5, r1
   4f854:	cmp	r0, #2
   4f858:	blt	4f788 <GetDataSlab+0x1f808>
   4f85c:	ldr	r9, [sp, #44]	; 0x2c
   4f860:	ldr	r6, [sp, #40]	; 0x28
   4f864:	mov	r2, #0
   4f868:	b	4f898 <GetDataSlab+0x1f918>
   4f86c:	ldr	r5, [sp, #84]	; 0x54
   4f870:	sub	r1, fp, #176	; 0xb0
   4f874:	sub	r0, r0, r7
   4f878:	ldr	r1, [r1, r2]
   4f87c:	ldr	r5, [r5, r2]
   4f880:	mla	r0, r5, r1, r0
   4f884:	add	r3, r0, r3
   4f888:	add	ip, ip, r0
   4f88c:	subs	r9, r9, #1
   4f890:	add	r2, r2, #4
   4f894:	beq	4f788 <GetDataSlab+0x1f808>
   4f898:	ldr	r0, [r4, r2]
   4f89c:	add	r0, r0, #1
   4f8a0:	str	r0, [r4, r2]
   4f8a4:	ldr	r1, [r6, r2]
   4f8a8:	sdiv	r5, r0, r1
   4f8ac:	mls	r0, r5, r1, r0
   4f8b0:	cmp	r0, #0
   4f8b4:	bne	4f778 <GetDataSlab+0x1f7f8>
   4f8b8:	mov	r0, #0
   4f8bc:	str	r0, [r4, r2]
   4f8c0:	ldr	r0, [lr, r2]
   4f8c4:	sdiv	r1, r3, r0
   4f8c8:	mls	r7, r1, r0, r3
   4f8cc:	cmp	r7, #0
   4f8d0:	bne	4f86c <GetDataSlab+0x1f8ec>
   4f8d4:	ldr	r0, [sp, #84]	; 0x54
   4f8d8:	ldr	r0, [r0, r2]
   4f8dc:	cmp	r0, #0
   4f8e0:	beq	4f88c <GetDataSlab+0x1f90c>
   4f8e4:	sub	r1, fp, #176	; 0xb0
   4f8e8:	ldr	r1, [r1, r2]
   4f8ec:	mla	r3, r1, r0, r3
   4f8f0:	mla	ip, r1, r0, ip
   4f8f4:	b	4f88c <GetDataSlab+0x1f90c>
   4f8f8:	ldr	r0, [sp, #76]	; 0x4c
   4f8fc:	ldr	r2, [fp, #12]
   4f900:	ldr	r3, [fp, #20]
   4f904:	ldr	r6, [sp, #64]	; 0x40
   4f908:	sub	r5, fp, #96	; 0x60
   4f90c:	cmp	r0, #1
   4f910:	blt	56c18 <GetDataSlab+0x26c98>
   4f914:	ldr	r0, [sp, #60]	; 0x3c
   4f918:	mov	r8, r5
   4f91c:	ldr	r5, [r2], #4
   4f920:	lsl	r9, r7, #1
   4f924:	lsl	sl, r7, #2
   4f928:	str	r2, [sp, #92]	; 0x5c
   4f92c:	mls	r0, r6, r7, r0
   4f930:	str	r5, [sp, #60]	; 0x3c
   4f934:	sub	r0, r0, r5
   4f938:	str	r0, [sp, #56]	; 0x38
   4f93c:	sub	r0, fp, #136	; 0x88
   4f940:	orr	r4, r0, #4
   4f944:	add	r0, r3, #4
   4f948:	mov	r3, r6
   4f94c:	str	r0, [sp, #84]	; 0x54
   4f950:	orr	r0, ip, #4
   4f954:	str	r0, [sp, #80]	; 0x50
   4f958:	ldr	r0, [fp, #24]
   4f95c:	sub	r0, r0, #1
   4f960:	str	r0, [sp, #40]	; 0x28
   4f964:	orr	r0, r8, #4
   4f968:	str	r0, [sp, #36]	; 0x24
   4f96c:	mla	r0, r6, r7, r5
   4f970:	str	r0, [sp, #48]	; 0x30
   4f974:	and	r0, r6, #1
   4f978:	sub	r8, r6, r0
   4f97c:	str	r0, [sp, #44]	; 0x2c
   4f980:	lsl	r0, r6, #1
   4f984:	str	r0, [sp, #52]	; 0x34
   4f988:	ldr	r0, [sp, #88]	; 0x58
   4f98c:	add	r0, r0, #2
   4f990:	str	r0, [sp, #72]	; 0x48
   4f994:	mov	r0, #0
   4f998:	str	r0, [sp, #68]	; 0x44
   4f99c:	b	4f9e0 <GetDataSlab+0x1fa60>
   4f9a0:	ldr	r0, [sp, #36]	; 0x24
   4f9a4:	ldr	r0, [r0, r2]
   4f9a8:	add	lr, lr, r0, lsl #1
   4f9ac:	add	r1, r0, r1
   4f9b0:	ldr	r0, [sp, #52]	; 0x34
   4f9b4:	ldr	r2, [sp, #72]	; 0x48
   4f9b8:	ldr	r3, [sp, #64]	; 0x40
   4f9bc:	add	r2, r2, r0
   4f9c0:	ldr	r0, [sp, #76]	; 0x4c
   4f9c4:	str	r2, [sp, #72]	; 0x48
   4f9c8:	ldr	r2, [sp, #68]	; 0x44
   4f9cc:	add	r2, r2, r3
   4f9d0:	str	r2, [sp, #68]	; 0x44
   4f9d4:	cmp	r2, r0
   4f9d8:	mov	r2, #0
   4f9dc:	bge	56c1c <GetDataSlab+0x26c9c>
   4f9e0:	ldr	ip, [sp, #60]	; 0x3c
   4f9e4:	cmp	r3, #1
   4f9e8:	add	r2, lr, ip, lsl #1
   4f9ec:	blt	4fa54 <GetDataSlab+0x1fad4>
   4f9f0:	mov	r3, #0
   4f9f4:	beq	4fa28 <GetDataSlab+0x1faa8>
   4f9f8:	ldr	r5, [sp, #72]	; 0x48
   4f9fc:	mov	r3, #0
   4fa00:	ldrh	r0, [r2]
   4fa04:	add	r3, r3, #2
   4fa08:	cmp	r8, r3
   4fa0c:	strh	r0, [r5, #-2]
   4fa10:	add	r0, r2, r9
   4fa14:	add	r2, r2, sl
   4fa18:	ldrh	r0, [r0]
   4fa1c:	strh	r0, [r5]
   4fa20:	add	r5, r5, #4
   4fa24:	bne	4fa00 <GetDataSlab+0x1fa80>
   4fa28:	ldr	r0, [sp, #44]	; 0x2c
   4fa2c:	ldr	ip, [sp, #48]	; 0x30
   4fa30:	cmp	r0, #0
   4fa34:	beq	4fa54 <GetDataSlab+0x1fad4>
   4fa38:	ldr	r0, [sp, #88]	; 0x58
   4fa3c:	ldr	r7, [sp, #68]	; 0x44
   4fa40:	ldrh	r6, [r2], r9
   4fa44:	ldr	ip, [sp, #48]	; 0x30
   4fa48:	add	r0, r0, r7, lsl #1
   4fa4c:	add	r0, r0, r3, lsl #1
   4fa50:	strh	r6, [r0]
   4fa54:	ldr	r3, [sp, #56]	; 0x38
   4fa58:	add	r0, ip, r1
   4fa5c:	add	r1, r0, r3
   4fa60:	ldr	r0, [fp, #24]
   4fa64:	add	lr, r2, r3, lsl #1
   4fa68:	cmp	r0, #2
   4fa6c:	blt	4f9b0 <GetDataSlab+0x1fa30>
   4fa70:	ldr	r3, [sp, #40]	; 0x28
   4fa74:	mov	r2, #0
   4fa78:	sub	ip, fp, #176	; 0xb0
   4fa7c:	b	4faa8 <GetDataSlab+0x1fb28>
   4fa80:	ldr	r7, [sp, #92]	; 0x5c
   4fa84:	ldr	r5, [ip, r2]
   4fa88:	sub	r0, r0, r6
   4fa8c:	ldr	r7, [r7, r2]
   4fa90:	mla	r0, r7, r5, r0
   4fa94:	add	r1, r0, r1
   4fa98:	add	lr, lr, r0, lsl #1
   4fa9c:	subs	r3, r3, #1
   4faa0:	add	r2, r2, #4
   4faa4:	beq	4f9b0 <GetDataSlab+0x1fa30>
   4faa8:	ldr	r0, [r4, r2]
   4faac:	ldr	r5, [sp, #84]	; 0x54
   4fab0:	add	r0, r0, #1
   4fab4:	str	r0, [r4, r2]
   4fab8:	ldr	r6, [r5, r2]
   4fabc:	sdiv	r5, r0, r6
   4fac0:	mls	r0, r5, r6, r0
   4fac4:	cmp	r0, #0
   4fac8:	bne	4f9a0 <GetDataSlab+0x1fa20>
   4facc:	mov	r0, #0
   4fad0:	str	r0, [r4, r2]
   4fad4:	ldr	r0, [sp, #80]	; 0x50
   4fad8:	ldr	r0, [r0, r2]
   4fadc:	sdiv	r6, r1, r0
   4fae0:	mls	r6, r6, r0, r1
   4fae4:	cmp	r6, #0
   4fae8:	bne	4fa80 <GetDataSlab+0x1fb00>
   4faec:	ldr	r0, [sp, #92]	; 0x5c
   4faf0:	ldr	r0, [r0, r2]
   4faf4:	cmp	r0, #0
   4faf8:	beq	4fa9c <GetDataSlab+0x1fb1c>
   4fafc:	ldr	r7, [ip, r2]
   4fb00:	mla	r1, r7, r0, r1
   4fb04:	mul	r0, r7, r0
   4fb08:	b	4fa98 <GetDataSlab+0x1fb18>
   4fb0c:	ldr	r0, [sp, #76]	; 0x4c
   4fb10:	ldr	r2, [fp, #12]
   4fb14:	ldr	r3, [fp, #20]
   4fb18:	ldr	r6, [sp, #64]	; 0x40
   4fb1c:	sub	r5, fp, #96	; 0x60
   4fb20:	cmp	r0, #1
   4fb24:	blt	56c18 <GetDataSlab+0x26c98>
   4fb28:	ldr	r0, [sp, #60]	; 0x3c
   4fb2c:	mov	r8, r5
   4fb30:	ldr	r5, [r2], #4
   4fb34:	lsl	r9, r7, #1
   4fb38:	lsl	sl, r7, #2
   4fb3c:	str	r2, [sp, #92]	; 0x5c
   4fb40:	mls	r0, r6, r7, r0
   4fb44:	str	r5, [sp, #60]	; 0x3c
   4fb48:	sub	r0, r0, r5
   4fb4c:	str	r0, [sp, #56]	; 0x38
   4fb50:	sub	r0, fp, #136	; 0x88
   4fb54:	orr	r4, r0, #4
   4fb58:	add	r0, r3, #4
   4fb5c:	mov	r3, r6
   4fb60:	str	r0, [sp, #84]	; 0x54
   4fb64:	orr	r0, ip, #4
   4fb68:	str	r0, [sp, #80]	; 0x50
   4fb6c:	ldr	r0, [fp, #24]
   4fb70:	sub	r0, r0, #1
   4fb74:	str	r0, [sp, #40]	; 0x28
   4fb78:	orr	r0, r8, #4
   4fb7c:	str	r0, [sp, #36]	; 0x24
   4fb80:	mla	r0, r6, r7, r5
   4fb84:	str	r0, [sp, #48]	; 0x30
   4fb88:	and	r0, r6, #1
   4fb8c:	sub	r8, r6, r0
   4fb90:	str	r0, [sp, #44]	; 0x2c
   4fb94:	lsl	r0, r6, #1
   4fb98:	str	r0, [sp, #52]	; 0x34
   4fb9c:	ldr	r0, [sp, #88]	; 0x58
   4fba0:	add	r0, r0, #2
   4fba4:	str	r0, [sp, #72]	; 0x48
   4fba8:	mov	r0, #0
   4fbac:	str	r0, [sp, #68]	; 0x44
   4fbb0:	b	4fbf4 <GetDataSlab+0x1fc74>
   4fbb4:	ldr	r0, [sp, #36]	; 0x24
   4fbb8:	ldr	r0, [r0, r2]
   4fbbc:	add	lr, lr, r0, lsl #1
   4fbc0:	add	r1, r0, r1
   4fbc4:	ldr	r0, [sp, #52]	; 0x34
   4fbc8:	ldr	r2, [sp, #72]	; 0x48
   4fbcc:	ldr	r3, [sp, #64]	; 0x40
   4fbd0:	add	r2, r2, r0
   4fbd4:	ldr	r0, [sp, #76]	; 0x4c
   4fbd8:	str	r2, [sp, #72]	; 0x48
   4fbdc:	ldr	r2, [sp, #68]	; 0x44
   4fbe0:	add	r2, r2, r3
   4fbe4:	str	r2, [sp, #68]	; 0x44
   4fbe8:	cmp	r2, r0
   4fbec:	mov	r2, #0
   4fbf0:	bge	56c1c <GetDataSlab+0x26c9c>
   4fbf4:	ldr	ip, [sp, #60]	; 0x3c
   4fbf8:	cmp	r3, #1
   4fbfc:	add	r2, lr, ip, lsl #1
   4fc00:	blt	4fc68 <GetDataSlab+0x1fce8>
   4fc04:	mov	r3, #0
   4fc08:	beq	4fc3c <GetDataSlab+0x1fcbc>
   4fc0c:	ldr	r5, [sp, #72]	; 0x48
   4fc10:	mov	r3, #0
   4fc14:	ldrh	r0, [r2]
   4fc18:	add	r3, r3, #2
   4fc1c:	cmp	r8, r3
   4fc20:	strh	r0, [r5, #-2]
   4fc24:	add	r0, r2, r9
   4fc28:	add	r2, r2, sl
   4fc2c:	ldrh	r0, [r0]
   4fc30:	strh	r0, [r5]
   4fc34:	add	r5, r5, #4
   4fc38:	bne	4fc14 <GetDataSlab+0x1fc94>
   4fc3c:	ldr	r0, [sp, #44]	; 0x2c
   4fc40:	ldr	ip, [sp, #48]	; 0x30
   4fc44:	cmp	r0, #0
   4fc48:	beq	4fc68 <GetDataSlab+0x1fce8>
   4fc4c:	ldr	r0, [sp, #88]	; 0x58
   4fc50:	ldr	r7, [sp, #68]	; 0x44
   4fc54:	ldrh	r6, [r2], r9
   4fc58:	ldr	ip, [sp, #48]	; 0x30
   4fc5c:	add	r0, r0, r7, lsl #1
   4fc60:	add	r0, r0, r3, lsl #1
   4fc64:	strh	r6, [r0]
   4fc68:	ldr	r3, [sp, #56]	; 0x38
   4fc6c:	add	r0, ip, r1
   4fc70:	add	r1, r0, r3
   4fc74:	ldr	r0, [fp, #24]
   4fc78:	add	lr, r2, r3, lsl #1
   4fc7c:	cmp	r0, #2
   4fc80:	blt	4fbc4 <GetDataSlab+0x1fc44>
   4fc84:	ldr	r3, [sp, #40]	; 0x28
   4fc88:	mov	r2, #0
   4fc8c:	sub	ip, fp, #176	; 0xb0
   4fc90:	b	4fcbc <GetDataSlab+0x1fd3c>
   4fc94:	ldr	r7, [sp, #92]	; 0x5c
   4fc98:	ldr	r5, [ip, r2]
   4fc9c:	sub	r0, r0, r6
   4fca0:	ldr	r7, [r7, r2]
   4fca4:	mla	r0, r7, r5, r0
   4fca8:	add	r1, r0, r1
   4fcac:	add	lr, lr, r0, lsl #1
   4fcb0:	subs	r3, r3, #1
   4fcb4:	add	r2, r2, #4
   4fcb8:	beq	4fbc4 <GetDataSlab+0x1fc44>
   4fcbc:	ldr	r0, [r4, r2]
   4fcc0:	ldr	r5, [sp, #84]	; 0x54
   4fcc4:	add	r0, r0, #1
   4fcc8:	str	r0, [r4, r2]
   4fccc:	ldr	r6, [r5, r2]
   4fcd0:	sdiv	r5, r0, r6
   4fcd4:	mls	r0, r5, r6, r0
   4fcd8:	cmp	r0, #0
   4fcdc:	bne	4fbb4 <GetDataSlab+0x1fc34>
   4fce0:	mov	r0, #0
   4fce4:	str	r0, [r4, r2]
   4fce8:	ldr	r0, [sp, #80]	; 0x50
   4fcec:	ldr	r0, [r0, r2]
   4fcf0:	sdiv	r6, r1, r0
   4fcf4:	mls	r6, r6, r0, r1
   4fcf8:	cmp	r6, #0
   4fcfc:	bne	4fc94 <GetDataSlab+0x1fd14>
   4fd00:	ldr	r0, [sp, #92]	; 0x5c
   4fd04:	ldr	r0, [r0, r2]
   4fd08:	cmp	r0, #0
   4fd0c:	beq	4fcb0 <GetDataSlab+0x1fd30>
   4fd10:	ldr	r7, [ip, r2]
   4fd14:	mla	r1, r7, r0, r1
   4fd18:	mul	r0, r7, r0
   4fd1c:	b	4fcac <GetDataSlab+0x1fd2c>
   4fd20:	ldr	r0, [sp, #76]	; 0x4c
   4fd24:	ldr	r1, [sp, #72]	; 0x48
   4fd28:	ldr	r2, [sp, #60]	; 0x3c
   4fd2c:	cmp	r0, #1
   4fd30:	ldr	r0, [fp, #20]
   4fd34:	blt	56c18 <GetDataSlab+0x26c98>
   4fd38:	mls	r1, r1, r5, r2
   4fd3c:	add	sl, r0, #4
   4fd40:	mov	r0, r8
   4fd44:	add	r0, r0, #2
   4fd48:	str	r0, [sp, #80]	; 0x50
   4fd4c:	mov	r0, #0
   4fd50:	str	r1, [sp, #64]	; 0x40
   4fd54:	sub	r1, fp, #136	; 0x88
   4fd58:	str	r0, [sp, #68]	; 0x44
   4fd5c:	orr	r6, r1, #4
   4fd60:	orr	r1, ip, #4
   4fd64:	lsl	ip, r5, #3
   4fd68:	str	r1, [sp, #84]	; 0x54
   4fd6c:	ldr	r1, [fp, #12]
   4fd70:	add	r8, r1, #4
   4fd74:	ldr	r1, [fp, #24]
   4fd78:	sub	r1, r1, #1
   4fd7c:	str	r1, [sp, #44]	; 0x2c
   4fd80:	sub	r1, fp, #96	; 0x60
   4fd84:	orr	r1, r1, #4
   4fd88:	str	r1, [sp, #40]	; 0x28
   4fd8c:	ldr	r1, [sp, #72]	; 0x48
   4fd90:	mul	r2, r1, r5
   4fd94:	str	r2, [sp, #52]	; 0x34
   4fd98:	and	r2, r1, #1
   4fd9c:	sub	lr, r1, r2
   4fda0:	str	r2, [sp, #48]	; 0x30
   4fda4:	lsl	r2, r1, #1
   4fda8:	str	r2, [sp, #60]	; 0x3c
   4fdac:	b	4fdf0 <GetDataSlab+0x1fe70>
   4fdb0:	ldr	r0, [sp, #40]	; 0x28
   4fdb4:	ldr	r0, [r0, r2]
   4fdb8:	add	r4, r4, r0, lsl #2
   4fdbc:	add	r3, r0, r3
   4fdc0:	ldr	r0, [sp, #60]	; 0x3c
   4fdc4:	ldr	r1, [sp, #80]	; 0x50
   4fdc8:	ldr	r2, [sp, #68]	; 0x44
   4fdcc:	add	r1, r1, r0
   4fdd0:	ldr	r0, [sp, #76]	; 0x4c
   4fdd4:	str	r1, [sp, #80]	; 0x50
   4fdd8:	ldr	r1, [sp, #72]	; 0x48
   4fddc:	add	r2, r2, r1
   4fde0:	str	r2, [sp, #68]	; 0x44
   4fde4:	cmp	r2, r0
   4fde8:	mov	r2, #0
   4fdec:	bge	56c1c <GetDataSlab+0x26c9c>
   4fdf0:	ldr	r0, [fp, #12]
   4fdf4:	cmp	r1, #1
   4fdf8:	ldr	r2, [r0]
   4fdfc:	add	r5, r4, r2, lsl #2
   4fe00:	blt	4fe74 <GetDataSlab+0x1fef4>
   4fe04:	ldr	r4, [sp, #56]	; 0x38
   4fe08:	mov	r7, #0
   4fe0c:	cmp	r1, #1
   4fe10:	beq	4fe40 <GetDataSlab+0x1fec0>
   4fe14:	ldr	r0, [sp, #80]	; 0x50
   4fe18:	mov	r7, #0
   4fe1c:	ldr	r1, [r5]
   4fe20:	add	r7, r7, #2
   4fe24:	cmp	lr, r7
   4fe28:	strh	r1, [r0, #-2]
   4fe2c:	ldr	r1, [r5, r4, lsl #2]
   4fe30:	add	r5, r5, ip
   4fe34:	strh	r1, [r0]
   4fe38:	add	r0, r0, #4
   4fe3c:	bne	4fe1c <GetDataSlab+0x1fe9c>
   4fe40:	ldr	r0, [sp, #52]	; 0x34
   4fe44:	ldr	r1, [sp, #48]	; 0x30
   4fe48:	add	r0, r0, r3
   4fe4c:	cmp	r1, #0
   4fe50:	beq	4fe6c <GetDataSlab+0x1feec>
   4fe54:	ldr	r1, [sp, #88]	; 0x58
   4fe58:	ldr	r3, [sp, #68]	; 0x44
   4fe5c:	add	r1, r1, r3, lsl #1
   4fe60:	ldr	r3, [r5], r4, lsl #2
   4fe64:	add	r1, r1, r7, lsl #1
   4fe68:	strh	r3, [r1]
   4fe6c:	add	r0, r0, r2
   4fe70:	b	4fe78 <GetDataSlab+0x1fef8>
   4fe74:	add	r0, r2, r3
   4fe78:	ldr	r1, [sp, #64]	; 0x40
   4fe7c:	sub	r1, r1, r2
   4fe80:	add	r3, r0, r1
   4fe84:	ldr	r0, [fp, #24]
   4fe88:	add	r4, r5, r1, lsl #2
   4fe8c:	cmp	r0, #2
   4fe90:	blt	4fdc0 <GetDataSlab+0x1fe40>
   4fe94:	ldr	r5, [sp, #44]	; 0x2c
   4fe98:	mov	r2, #0
   4fe9c:	b	4fec8 <GetDataSlab+0x1ff48>
   4fea0:	sub	r1, fp, #176	; 0xb0
   4fea4:	ldr	r7, [r8, r2]
   4fea8:	sub	r0, r0, r9
   4feac:	ldr	r1, [r1, r2]
   4feb0:	mla	r0, r7, r1, r0
   4feb4:	add	r3, r0, r3
   4feb8:	add	r4, r4, r0, lsl #2
   4febc:	subs	r5, r5, #1
   4fec0:	add	r2, r2, #4
   4fec4:	beq	4fdc0 <GetDataSlab+0x1fe40>
   4fec8:	ldr	r0, [r6, r2]
   4fecc:	add	r0, r0, #1
   4fed0:	str	r0, [r6, r2]
   4fed4:	ldr	r1, [sl, r2]
   4fed8:	sdiv	r7, r0, r1
   4fedc:	mls	r0, r7, r1, r0
   4fee0:	cmp	r0, #0
   4fee4:	bne	4fdb0 <GetDataSlab+0x1fe30>
   4fee8:	mov	r0, #0
   4feec:	str	r0, [r6, r2]
   4fef0:	ldr	r0, [sp, #84]	; 0x54
   4fef4:	ldr	r0, [r0, r2]
   4fef8:	sdiv	r1, r3, r0
   4fefc:	mls	r9, r1, r0, r3
   4ff00:	cmp	r9, #0
   4ff04:	bne	4fea0 <GetDataSlab+0x1ff20>
   4ff08:	ldr	r0, [r8, r2]
   4ff0c:	cmp	r0, #0
   4ff10:	beq	4febc <GetDataSlab+0x1ff3c>
   4ff14:	sub	r1, fp, #176	; 0xb0
   4ff18:	ldr	r1, [r1, r2]
   4ff1c:	mla	r3, r1, r0, r3
   4ff20:	mul	r0, r1, r0
   4ff24:	b	4feb8 <GetDataSlab+0x1ff38>
   4ff28:	ldr	r0, [sp, #76]	; 0x4c
   4ff2c:	ldr	r1, [sp, #72]	; 0x48
   4ff30:	ldr	r2, [sp, #60]	; 0x3c
   4ff34:	cmp	r0, #1
   4ff38:	ldr	r0, [fp, #20]
   4ff3c:	blt	56c18 <GetDataSlab+0x26c98>
   4ff40:	mls	r1, r1, r5, r2
   4ff44:	add	sl, r0, #4
   4ff48:	mov	r0, r8
   4ff4c:	add	r0, r0, #2
   4ff50:	str	r0, [sp, #80]	; 0x50
   4ff54:	mov	r0, #0
   4ff58:	str	r1, [sp, #64]	; 0x40
   4ff5c:	sub	r1, fp, #136	; 0x88
   4ff60:	str	r0, [sp, #68]	; 0x44
   4ff64:	orr	r6, r1, #4
   4ff68:	orr	r1, ip, #4
   4ff6c:	lsl	ip, r5, #3
   4ff70:	str	r1, [sp, #84]	; 0x54
   4ff74:	ldr	r1, [fp, #12]
   4ff78:	add	r8, r1, #4
   4ff7c:	ldr	r1, [fp, #24]
   4ff80:	sub	r1, r1, #1
   4ff84:	str	r1, [sp, #44]	; 0x2c
   4ff88:	sub	r1, fp, #96	; 0x60
   4ff8c:	orr	r1, r1, #4
   4ff90:	str	r1, [sp, #40]	; 0x28
   4ff94:	ldr	r1, [sp, #72]	; 0x48
   4ff98:	mul	r2, r1, r5
   4ff9c:	str	r2, [sp, #52]	; 0x34
   4ffa0:	and	r2, r1, #1
   4ffa4:	sub	lr, r1, r2
   4ffa8:	str	r2, [sp, #48]	; 0x30
   4ffac:	lsl	r2, r1, #1
   4ffb0:	str	r2, [sp, #60]	; 0x3c
   4ffb4:	b	4fff8 <GetDataSlab+0x20078>
   4ffb8:	ldr	r0, [sp, #40]	; 0x28
   4ffbc:	ldr	r0, [r0, r2]
   4ffc0:	add	r4, r4, r0, lsl #2
   4ffc4:	add	r3, r0, r3
   4ffc8:	ldr	r0, [sp, #60]	; 0x3c
   4ffcc:	ldr	r1, [sp, #80]	; 0x50
   4ffd0:	ldr	r2, [sp, #68]	; 0x44
   4ffd4:	add	r1, r1, r0
   4ffd8:	ldr	r0, [sp, #76]	; 0x4c
   4ffdc:	str	r1, [sp, #80]	; 0x50
   4ffe0:	ldr	r1, [sp, #72]	; 0x48
   4ffe4:	add	r2, r2, r1
   4ffe8:	str	r2, [sp, #68]	; 0x44
   4ffec:	cmp	r2, r0
   4fff0:	mov	r2, #0
   4fff4:	bge	56c1c <GetDataSlab+0x26c9c>
   4fff8:	ldr	r0, [fp, #12]
   4fffc:	cmp	r1, #1
   50000:	ldr	r2, [r0]
   50004:	add	r5, r4, r2, lsl #2
   50008:	blt	5007c <GetDataSlab+0x200fc>
   5000c:	ldr	r4, [sp, #56]	; 0x38
   50010:	mov	r7, #0
   50014:	cmp	r1, #1
   50018:	beq	50048 <GetDataSlab+0x200c8>
   5001c:	ldr	r0, [sp, #80]	; 0x50
   50020:	mov	r7, #0
   50024:	ldr	r1, [r5]
   50028:	add	r7, r7, #2
   5002c:	cmp	lr, r7
   50030:	strh	r1, [r0, #-2]
   50034:	ldr	r1, [r5, r4, lsl #2]
   50038:	add	r5, r5, ip
   5003c:	strh	r1, [r0]
   50040:	add	r0, r0, #4
   50044:	bne	50024 <GetDataSlab+0x200a4>
   50048:	ldr	r0, [sp, #52]	; 0x34
   5004c:	ldr	r1, [sp, #48]	; 0x30
   50050:	add	r0, r0, r3
   50054:	cmp	r1, #0
   50058:	beq	50074 <GetDataSlab+0x200f4>
   5005c:	ldr	r1, [sp, #88]	; 0x58
   50060:	ldr	r3, [sp, #68]	; 0x44
   50064:	add	r1, r1, r3, lsl #1
   50068:	ldr	r3, [r5], r4, lsl #2
   5006c:	add	r1, r1, r7, lsl #1
   50070:	strh	r3, [r1]
   50074:	add	r0, r0, r2
   50078:	b	50080 <GetDataSlab+0x20100>
   5007c:	add	r0, r2, r3
   50080:	ldr	r1, [sp, #64]	; 0x40
   50084:	sub	r1, r1, r2
   50088:	add	r3, r0, r1
   5008c:	ldr	r0, [fp, #24]
   50090:	add	r4, r5, r1, lsl #2
   50094:	cmp	r0, #2
   50098:	blt	4ffc8 <GetDataSlab+0x20048>
   5009c:	ldr	r5, [sp, #44]	; 0x2c
   500a0:	mov	r2, #0
   500a4:	b	500d0 <GetDataSlab+0x20150>
   500a8:	sub	r1, fp, #176	; 0xb0
   500ac:	ldr	r7, [r8, r2]
   500b0:	sub	r0, r0, r9
   500b4:	ldr	r1, [r1, r2]
   500b8:	mla	r0, r7, r1, r0
   500bc:	add	r3, r0, r3
   500c0:	add	r4, r4, r0, lsl #2
   500c4:	subs	r5, r5, #1
   500c8:	add	r2, r2, #4
   500cc:	beq	4ffc8 <GetDataSlab+0x20048>
   500d0:	ldr	r0, [r6, r2]
   500d4:	add	r0, r0, #1
   500d8:	str	r0, [r6, r2]
   500dc:	ldr	r1, [sl, r2]
   500e0:	sdiv	r7, r0, r1
   500e4:	mls	r0, r7, r1, r0
   500e8:	cmp	r0, #0
   500ec:	bne	4ffb8 <GetDataSlab+0x20038>
   500f0:	mov	r0, #0
   500f4:	str	r0, [r6, r2]
   500f8:	ldr	r0, [sp, #84]	; 0x54
   500fc:	ldr	r0, [r0, r2]
   50100:	sdiv	r1, r3, r0
   50104:	mls	r9, r1, r0, r3
   50108:	cmp	r9, #0
   5010c:	bne	500a8 <GetDataSlab+0x20128>
   50110:	ldr	r0, [r8, r2]
   50114:	cmp	r0, #0
   50118:	beq	500c4 <GetDataSlab+0x20144>
   5011c:	sub	r1, fp, #176	; 0xb0
   50120:	ldr	r1, [r1, r2]
   50124:	mla	r3, r1, r0, r3
   50128:	mul	r0, r1, r0
   5012c:	b	500c0 <GetDataSlab+0x20140>
   50130:	ldr	r0, [sp, #76]	; 0x4c
   50134:	cmp	r0, #1
   50138:	ldr	r0, [sp, #60]	; 0x3c
   5013c:	blt	56c18 <GetDataSlab+0x26c98>
   50140:	ldr	r2, [sp, #92]	; 0x5c
   50144:	ldr	r5, [sp, #40]	; 0x28
   50148:	ldr	r3, [sp, #64]	; 0x40
   5014c:	ldr	r6, [r2], #4
   50150:	mls	r0, r3, r5, r0
   50154:	lsl	sl, r5, #3
   50158:	str	r2, [sp, #92]	; 0x5c
   5015c:	sub	r0, r0, r6
   50160:	str	r6, [sp, #60]	; 0x3c
   50164:	str	r0, [sp, #56]	; 0x38
   50168:	sub	r0, fp, #136	; 0x88
   5016c:	orr	r4, r0, #4
   50170:	ldr	r0, [fp, #20]
   50174:	add	r0, r0, #4
   50178:	str	r0, [sp, #84]	; 0x54
   5017c:	orr	r0, ip, #4
   50180:	lsl	ip, r5, #2
   50184:	str	r0, [sp, #80]	; 0x50
   50188:	ldr	r0, [fp, #24]
   5018c:	sub	r0, r0, #1
   50190:	str	r0, [sp, #36]	; 0x24
   50194:	sub	r0, fp, #96	; 0x60
   50198:	orr	r0, r0, #4
   5019c:	str	r0, [sp, #32]
   501a0:	mla	r0, r3, r5, r6
   501a4:	str	r0, [sp, #48]	; 0x30
   501a8:	and	r0, r3, #1
   501ac:	sub	r9, r3, r0
   501b0:	str	r0, [sp, #44]	; 0x2c
   501b4:	lsl	r0, r3, #1
   501b8:	str	r0, [sp, #52]	; 0x34
   501bc:	ldr	r0, [sp, #88]	; 0x58
   501c0:	add	r0, r0, #2
   501c4:	str	r0, [sp, #72]	; 0x48
   501c8:	mov	r0, #0
   501cc:	str	r0, [sp, #68]	; 0x44
   501d0:	b	50214 <GetDataSlab+0x20294>
   501d4:	ldr	r0, [sp, #32]
   501d8:	ldr	r0, [r0, r2]
   501dc:	add	lr, lr, r0, lsl #2
   501e0:	add	r1, r0, r1
   501e4:	ldr	r0, [sp, #52]	; 0x34
   501e8:	ldr	r2, [sp, #72]	; 0x48
   501ec:	ldr	r3, [sp, #64]	; 0x40
   501f0:	add	r2, r2, r0
   501f4:	ldr	r0, [sp, #76]	; 0x4c
   501f8:	str	r2, [sp, #72]	; 0x48
   501fc:	ldr	r2, [sp, #68]	; 0x44
   50200:	add	r2, r2, r3
   50204:	str	r2, [sp, #68]	; 0x44
   50208:	cmp	r2, r0
   5020c:	mov	r2, #0
   50210:	bge	56c1c <GetDataSlab+0x26c9c>
   50214:	ldr	r8, [sp, #60]	; 0x3c
   50218:	cmp	r3, #1
   5021c:	add	r2, lr, r8, lsl #2
   50220:	blt	502a8 <GetDataSlab+0x20328>
   50224:	mov	r3, #0
   50228:	beq	5026c <GetDataSlab+0x202ec>
   5022c:	ldr	r5, [sp, #72]	; 0x48
   50230:	mov	r3, #0
   50234:	vldr	s0, [r2]
   50238:	add	r3, r3, #2
   5023c:	cmp	r9, r3
   50240:	vcvt.u32.f32	s0, s0
   50244:	vmov	r0, s0
   50248:	strh	r0, [r5, #-2]
   5024c:	add	r0, r2, ip
   50250:	add	r2, r2, sl
   50254:	vldr	s0, [r0]
   50258:	vcvt.u32.f32	s0, s0
   5025c:	vmov	r0, s0
   50260:	strh	r0, [r5]
   50264:	add	r5, r5, #4
   50268:	bne	50234 <GetDataSlab+0x202b4>
   5026c:	ldr	r0, [sp, #44]	; 0x2c
   50270:	ldr	r8, [sp, #48]	; 0x30
   50274:	cmp	r0, #0
   50278:	beq	502a8 <GetDataSlab+0x20328>
   5027c:	vldr	s0, [r2]
   50280:	ldr	r0, [sp, #88]	; 0x58
   50284:	ldr	r7, [sp, #68]	; 0x44
   50288:	add	r0, r0, r7, lsl #1
   5028c:	vcvt.u32.f32	s0, s0
   50290:	ldr	r8, [sp, #48]	; 0x30
   50294:	add	r0, r0, r3, lsl #1
   50298:	vmov	r3, s0
   5029c:	strh	r3, [r0]
   502a0:	ldr	r0, [sp, #40]	; 0x28
   502a4:	add	r2, r2, r0, lsl #2
   502a8:	ldr	r3, [sp, #56]	; 0x38
   502ac:	add	r0, r8, r1
   502b0:	add	r1, r0, r3
   502b4:	ldr	r0, [fp, #24]
   502b8:	add	lr, r2, r3, lsl #2
   502bc:	cmp	r0, #2
   502c0:	blt	501e4 <GetDataSlab+0x20264>
   502c4:	ldr	r3, [sp, #36]	; 0x24
   502c8:	ldr	r8, [sp, #92]	; 0x5c
   502cc:	mov	r2, #0
   502d0:	b	502fc <GetDataSlab+0x2037c>
   502d4:	sub	r5, fp, #176	; 0xb0
   502d8:	ldr	r7, [r8, r2]
   502dc:	sub	r0, r0, r6
   502e0:	ldr	r5, [r5, r2]
   502e4:	mla	r0, r7, r5, r0
   502e8:	add	r1, r0, r1
   502ec:	add	lr, lr, r0, lsl #2
   502f0:	subs	r3, r3, #1
   502f4:	add	r2, r2, #4
   502f8:	beq	501e4 <GetDataSlab+0x20264>
   502fc:	ldr	r0, [r4, r2]
   50300:	ldr	r5, [sp, #84]	; 0x54
   50304:	add	r0, r0, #1
   50308:	str	r0, [r4, r2]
   5030c:	ldr	r5, [r5, r2]
   50310:	sdiv	r6, r0, r5
   50314:	mls	r0, r6, r5, r0
   50318:	cmp	r0, #0
   5031c:	bne	501d4 <GetDataSlab+0x20254>
   50320:	mov	r0, #0
   50324:	str	r0, [r4, r2]
   50328:	ldr	r0, [sp, #80]	; 0x50
   5032c:	ldr	r0, [r0, r2]
   50330:	sdiv	r5, r1, r0
   50334:	mls	r6, r5, r0, r1
   50338:	cmp	r6, #0
   5033c:	bne	502d4 <GetDataSlab+0x20354>
   50340:	ldr	r0, [r8, r2]
   50344:	cmp	r0, #0
   50348:	beq	502f0 <GetDataSlab+0x20370>
   5034c:	sub	r5, fp, #176	; 0xb0
   50350:	ldr	r5, [r5, r2]
   50354:	mla	r1, r5, r0, r1
   50358:	mul	r0, r5, r0
   5035c:	b	502ec <GetDataSlab+0x2036c>
   50360:	ldr	r0, [sp, #76]	; 0x4c
   50364:	ldr	r2, [sp, #88]	; 0x58
   50368:	ldr	r3, [fp, #12]
   5036c:	sub	r6, fp, #96	; 0x60
   50370:	cmp	r0, #1
   50374:	blt	56c18 <GetDataSlab+0x26c98>
   50378:	ldr	r5, [sp, #40]	; 0x28
   5037c:	ldr	r7, [sp, #64]	; 0x40
   50380:	ldr	r0, [sp, #72]	; 0x48
   50384:	ldr	r4, [r3], #4
   50388:	str	r3, [sp, #92]	; 0x5c
   5038c:	mls	r0, r7, r5, r0
   50390:	mov	r3, r7
   50394:	lsl	lr, r5, #4
   50398:	str	r4, [sp, #60]	; 0x3c
   5039c:	sub	r0, r0, r4
   503a0:	str	r0, [sp, #56]	; 0x38
   503a4:	sub	r0, fp, #136	; 0x88
   503a8:	orr	r7, r0, #4
   503ac:	ldr	r0, [fp, #20]
   503b0:	add	r0, r0, #4
   503b4:	str	r0, [sp, #84]	; 0x54
   503b8:	orr	r0, ip, #4
   503bc:	lsl	ip, r5, #3
   503c0:	str	r0, [sp, #80]	; 0x50
   503c4:	ldr	r0, [fp, #24]
   503c8:	sub	r0, r0, #1
   503cc:	str	r0, [sp, #36]	; 0x24
   503d0:	orr	r0, r6, #4
   503d4:	str	r0, [sp, #32]
   503d8:	mla	r0, r3, r5, r4
   503dc:	str	r0, [sp, #48]	; 0x30
   503e0:	and	r0, r3, #1
   503e4:	sub	sl, r3, r0
   503e8:	str	r0, [sp, #44]	; 0x2c
   503ec:	lsl	r0, r3, #1
   503f0:	str	r0, [sp, #52]	; 0x34
   503f4:	add	r0, r2, #2
   503f8:	str	r0, [sp, #72]	; 0x48
   503fc:	mov	r0, #0
   50400:	str	r0, [sp, #68]	; 0x44
   50404:	b	50448 <GetDataSlab+0x204c8>
   50408:	ldr	r0, [sp, #32]
   5040c:	ldr	r0, [r0, r2]
   50410:	add	r9, r9, r0, lsl #3
   50414:	add	r1, r0, r1
   50418:	ldr	r0, [sp, #52]	; 0x34
   5041c:	ldr	r2, [sp, #72]	; 0x48
   50420:	ldr	r3, [sp, #64]	; 0x40
   50424:	add	r2, r2, r0
   50428:	ldr	r0, [sp, #76]	; 0x4c
   5042c:	str	r2, [sp, #72]	; 0x48
   50430:	ldr	r2, [sp, #68]	; 0x44
   50434:	add	r2, r2, r3
   50438:	str	r2, [sp, #68]	; 0x44
   5043c:	cmp	r2, r0
   50440:	mov	r2, #0
   50444:	bge	56c1c <GetDataSlab+0x26c9c>
   50448:	ldr	r8, [sp, #60]	; 0x3c
   5044c:	cmp	r3, #1
   50450:	add	r2, r9, r8, lsl #3
   50454:	blt	504dc <GetDataSlab+0x2055c>
   50458:	mov	r3, #0
   5045c:	beq	504a0 <GetDataSlab+0x20520>
   50460:	ldr	r4, [sp, #72]	; 0x48
   50464:	mov	r3, #0
   50468:	vldr	d16, [r2]
   5046c:	add	r3, r3, #2
   50470:	cmp	sl, r3
   50474:	vcvt.u32.f64	s0, d16
   50478:	vmov	r0, s0
   5047c:	strh	r0, [r4, #-2]
   50480:	add	r0, r2, ip
   50484:	add	r2, r2, lr
   50488:	vldr	d16, [r0]
   5048c:	vcvt.u32.f64	s0, d16
   50490:	vmov	r0, s0
   50494:	strh	r0, [r4]
   50498:	add	r4, r4, #4
   5049c:	bne	50468 <GetDataSlab+0x204e8>
   504a0:	ldr	r0, [sp, #44]	; 0x2c
   504a4:	ldr	r8, [sp, #48]	; 0x30
   504a8:	cmp	r0, #0
   504ac:	beq	504dc <GetDataSlab+0x2055c>
   504b0:	vldr	d16, [r2]
   504b4:	ldr	r0, [sp, #88]	; 0x58
   504b8:	ldr	r4, [sp, #68]	; 0x44
   504bc:	add	r0, r0, r4, lsl #1
   504c0:	vcvt.u32.f64	s0, d16
   504c4:	ldr	r8, [sp, #48]	; 0x30
   504c8:	add	r0, r0, r3, lsl #1
   504cc:	vmov	r3, s0
   504d0:	strh	r3, [r0]
   504d4:	ldr	r0, [sp, #40]	; 0x28
   504d8:	add	r2, r2, r0, lsl #3
   504dc:	ldr	r3, [sp, #56]	; 0x38
   504e0:	add	r0, r8, r1
   504e4:	add	r1, r0, r3
   504e8:	ldr	r0, [fp, #24]
   504ec:	add	r9, r2, r3, lsl #3
   504f0:	cmp	r0, #2
   504f4:	blt	50418 <GetDataSlab+0x20498>
   504f8:	ldr	r3, [sp, #36]	; 0x24
   504fc:	ldr	r8, [sp, #92]	; 0x5c
   50500:	mov	r2, #0
   50504:	b	50530 <GetDataSlab+0x205b0>
   50508:	sub	r4, fp, #176	; 0xb0
   5050c:	sub	r0, r5, r0
   50510:	ldr	r6, [r4, r2]
   50514:	ldr	r4, [r8, r2]
   50518:	mla	r0, r4, r6, r0
   5051c:	add	r1, r0, r1
   50520:	add	r9, r9, r0, lsl #3
   50524:	subs	r3, r3, #1
   50528:	add	r2, r2, #4
   5052c:	beq	50418 <GetDataSlab+0x20498>
   50530:	ldr	r0, [r7, r2]
   50534:	ldr	r4, [sp, #84]	; 0x54
   50538:	add	r0, r0, #1
   5053c:	str	r0, [r7, r2]
   50540:	ldr	r5, [r4, r2]
   50544:	sdiv	r6, r0, r5
   50548:	mls	r0, r6, r5, r0
   5054c:	cmp	r0, #0
   50550:	bne	50408 <GetDataSlab+0x20488>
   50554:	mov	r0, #0
   50558:	str	r0, [r7, r2]
   5055c:	ldr	r0, [sp, #80]	; 0x50
   50560:	ldr	r5, [r0, r2]
   50564:	sdiv	r0, r1, r5
   50568:	mls	r0, r0, r5, r1
   5056c:	cmp	r0, #0
   50570:	bne	50508 <GetDataSlab+0x20588>
   50574:	ldr	r0, [r8, r2]
   50578:	cmp	r0, #0
   5057c:	beq	50524 <GetDataSlab+0x205a4>
   50580:	sub	r4, fp, #176	; 0xb0
   50584:	ldr	r4, [r4, r2]
   50588:	mla	r1, r4, r0, r1
   5058c:	mul	r0, r4, r0
   50590:	b	50520 <GetDataSlab+0x205a0>
   50594:	ldr	r0, [sp, #68]	; 0x44
   50598:	ldr	r4, [fp, #20]
   5059c:	ldr	r6, [sp, #56]	; 0x38
   505a0:	cmp	r0, #1
   505a4:	blt	5079c <GetDataSlab+0x2081c>
   505a8:	ldr	r2, [fp, #12]
   505ac:	ldr	r0, [sp, #44]	; 0x2c
   505b0:	mov	r5, r4
   505b4:	add	r5, r5, #4
   505b8:	ldr	r4, [r2], #4
   505bc:	mls	r0, r6, r7, r0
   505c0:	str	r2, [sp, #84]	; 0x54
   505c4:	mov	r2, #0
   505c8:	str	r2, [sp, #60]	; 0x3c
   505cc:	sub	r0, r0, r4
   505d0:	str	r4, [sp, #52]	; 0x34
   505d4:	str	r0, [sp, #48]	; 0x30
   505d8:	sub	r0, fp, #136	; 0x88
   505dc:	orr	r3, r0, #4
   505e0:	orr	r0, ip, #4
   505e4:	lsl	ip, r7, #3
   505e8:	str	r0, [sp, #72]	; 0x48
   505ec:	ldr	r0, [fp, #24]
   505f0:	sub	r0, r0, #1
   505f4:	str	r0, [sp, #32]
   505f8:	sub	r0, fp, #96	; 0x60
   505fc:	orr	r0, r0, #4
   50600:	str	r0, [sp, #28]
   50604:	mla	r0, r6, r7, r4
   50608:	mov	r4, r6
   5060c:	str	r0, [sp, #40]	; 0x28
   50610:	and	r0, r6, #1
   50614:	str	r0, [sp, #36]	; 0x24
   50618:	sub	r9, r6, r0
   5061c:	lsl	r0, r6, #1
   50620:	str	r0, [sp, #44]	; 0x2c
   50624:	add	r0, r8, #2
   50628:	str	r0, [sp, #64]	; 0x40
   5062c:	lsl	r0, r7, #4
   50630:	b	50674 <GetDataSlab+0x206f4>
   50634:	ldr	r4, [sp, #28]
   50638:	ldr	r2, [r4, r2]
   5063c:	add	lr, lr, r2, lsl #3
   50640:	add	r1, r2, r1
   50644:	ldr	r2, [sp, #44]	; 0x2c
   50648:	ldr	r4, [sp, #64]	; 0x40
   5064c:	ldr	r6, [sp, #60]	; 0x3c
   50650:	ldr	r8, [sp, #88]	; 0x58
   50654:	add	r4, r4, r2
   50658:	ldr	r2, [sp, #68]	; 0x44
   5065c:	str	r4, [sp, #64]	; 0x40
   50660:	ldr	r4, [sp, #56]	; 0x38
   50664:	add	r6, r6, r4
   50668:	cmp	r6, r2
   5066c:	str	r6, [sp, #60]	; 0x3c
   50670:	bge	5079c <GetDataSlab+0x2081c>
   50674:	ldr	r6, [sp, #52]	; 0x34
   50678:	cmp	r4, #1
   5067c:	add	r2, lr, r6, lsl #3
   50680:	blt	506e4 <GetDataSlab+0x20764>
   50684:	mov	r7, #0
   50688:	beq	506bc <GetDataSlab+0x2073c>
   5068c:	ldr	r6, [sp, #64]	; 0x40
   50690:	mov	r7, #0
   50694:	ldrh	r4, [r2]
   50698:	add	r7, r7, #2
   5069c:	cmp	r9, r7
   506a0:	strh	r4, [r6, #-2]
   506a4:	add	r4, r2, ip
   506a8:	add	r2, r2, r0
   506ac:	ldrh	r4, [r4]
   506b0:	strh	r4, [r6]
   506b4:	add	r6, r6, #4
   506b8:	bne	50694 <GetDataSlab+0x20714>
   506bc:	ldr	r6, [sp, #36]	; 0x24
   506c0:	cmp	r6, #0
   506c4:	ldr	r6, [sp, #40]	; 0x28
   506c8:	beq	506e4 <GetDataSlab+0x20764>
   506cc:	ldr	r6, [sp, #60]	; 0x3c
   506d0:	ldrh	r4, [r2], ip
   506d4:	add	r6, r8, r6, lsl #1
   506d8:	add	r7, r6, r7, lsl #1
   506dc:	ldr	r6, [sp, #40]	; 0x28
   506e0:	strh	r4, [r7]
   506e4:	ldr	r4, [sp, #48]	; 0x30
   506e8:	add	r1, r6, r1
   506ec:	add	lr, r2, r4, lsl #3
   506f0:	ldr	r2, [fp, #24]
   506f4:	add	r1, r1, r4
   506f8:	cmp	r2, #2
   506fc:	blt	50644 <GetDataSlab+0x206c4>
   50700:	ldr	r8, [sp, #32]
   50704:	mov	r2, #0
   50708:	b	50738 <GetDataSlab+0x207b8>
   5070c:	ldr	r7, [sp, #84]	; 0x54
   50710:	sub	r4, fp, #176	; 0xb0
   50714:	sub	r6, r6, sl
   50718:	ldr	r4, [r4, r2]
   5071c:	ldr	r7, [r7, r2]
   50720:	mla	r4, r7, r4, r6
   50724:	add	r1, r4, r1
   50728:	add	lr, lr, r4, lsl #3
   5072c:	subs	r8, r8, #1
   50730:	add	r2, r2, #4
   50734:	beq	50644 <GetDataSlab+0x206c4>
   50738:	ldr	r4, [r3, r2]
   5073c:	add	r4, r4, #1
   50740:	str	r4, [r3, r2]
   50744:	ldr	r6, [r5, r2]
   50748:	sdiv	r7, r4, r6
   5074c:	mls	r4, r7, r6, r4
   50750:	cmp	r4, #0
   50754:	bne	50634 <GetDataSlab+0x206b4>
   50758:	mov	r4, #0
   5075c:	str	r4, [r3, r2]
   50760:	ldr	r4, [sp, #72]	; 0x48
   50764:	ldr	r6, [r4, r2]
   50768:	sdiv	r4, r1, r6
   5076c:	mls	sl, r4, r6, r1
   50770:	cmp	sl, #0
   50774:	bne	5070c <GetDataSlab+0x2078c>
   50778:	ldr	r4, [sp, #84]	; 0x54
   5077c:	ldr	r6, [r4, r2]
   50780:	cmp	r6, #0
   50784:	beq	5072c <GetDataSlab+0x207ac>
   50788:	sub	r4, fp, #176	; 0xb0
   5078c:	ldr	r4, [r4, r2]
   50790:	mla	r1, r4, r6, r1
   50794:	mul	r4, r4, r6
   50798:	b	50728 <GetDataSlab+0x207a8>
   5079c:	mov	r2, #0
   507a0:	ldr	r0, [sp, #76]	; 0x4c
   507a4:	cmp	r0, #13
   507a8:	bne	56c1c <GetDataSlab+0x26c9c>
   507ac:	ldr	r0, [fp, #16]
   507b0:	ldr	r8, [sp, #88]	; 0x58
   507b4:	mov	r1, #0
   507b8:	sub	r5, fp, #176	; 0xb0
   507bc:	sub	r6, fp, #96	; 0x60
   507c0:	ldr	r0, [r0]
   507c4:	str	r0, [sp, #64]	; 0x40
   507c8:	sub	r0, r0, #1
   507cc:	str	r0, [fp, #-96]	; 0xffffffa0
   507d0:	ldr	r0, [fp, #8]
   507d4:	ldr	r0, [r0]
   507d8:	str	r0, [sp, #60]	; 0x3c
   507dc:	str	r0, [fp, #-176]	; 0xffffff50
   507e0:	ldr	r0, [fp, #20]
   507e4:	ldr	r2, [r0]
   507e8:	ldr	r0, [fp, #24]
   507ec:	cmp	r0, #2
   507f0:	str	r2, [sp, #72]	; 0x48
   507f4:	str	r2, [sp, #76]	; 0x4c
   507f8:	blt	50950 <GetDataSlab+0x209d0>
   507fc:	ldr	r0, [fp, #8]
   50800:	ldr	r3, [sp, #60]	; 0x3c
   50804:	mov	r4, #1
   50808:	mov	r9, #0
   5080c:	mvn	lr, #15
   50810:	mov	r1, #0
   50814:	sub	r7, r0, #4
   50818:	sub	ip, r0, #12
   5081c:	ldr	r0, [sp, #72]	; 0x48
   50820:	mov	sl, r3
   50824:	str	r0, [sp, #76]	; 0x4c
   50828:	b	5087c <GetDataSlab+0x208fc>
   5082c:	ldr	r8, [sp, #88]	; 0x58
   50830:	sub	r6, fp, #96	; 0x60
   50834:	sub	r5, fp, #176	; 0xb0
   50838:	ldr	r2, [sp, #76]	; 0x4c
   5083c:	add	ip, ip, #4
   50840:	str	r0, [r6, r4, lsl #2]
   50844:	ldr	r0, [fp, #12]
   50848:	str	r3, [r5, r4, lsl #2]
   5084c:	ldr	r0, [r0, r4, lsl #2]
   50850:	mla	r1, r0, sl, r1
   50854:	ldr	r0, [fp, #20]
   50858:	mov	sl, r3
   5085c:	ldr	r3, [sp, #84]	; 0x54
   50860:	ldr	r0, [r0, r4, lsl #2]
   50864:	add	r4, r4, #1
   50868:	mul	r2, r0, r2
   5086c:	ldr	r0, [fp, #24]
   50870:	str	r2, [sp, #76]	; 0x4c
   50874:	cmp	r4, r0
   50878:	beq	50950 <GetDataSlab+0x209d0>
   5087c:	ldr	r0, [fp, #16]
   50880:	add	r9, r9, #1
   50884:	cmp	r9, #4
   50888:	ldr	r0, [r0, r4, lsl #2]
   5088c:	str	r3, [r5, r4, lsl #2]
   50890:	sub	r0, r0, #1
   50894:	str	r0, [r6, r4, lsl #2]
   50898:	ldr	r6, [fp, #8]
   5089c:	ldr	r6, [r6, r4, lsl #2]
   508a0:	str	r6, [sp, #84]	; 0x54
   508a4:	bcs	508b0 <GetDataSlab+0x20930>
   508a8:	mov	r5, r4
   508ac:	b	50938 <GetDataSlab+0x209b8>
   508b0:	vmov.i32	q9, #1	; 0x00000001
   508b4:	vmov.i32	q10, #1	; 0x00000001
   508b8:	vmov.32	d23[1], r6
   508bc:	vmov.i32	q8, #1	; 0x00000001
   508c0:	bic	r6, r9, #3
   508c4:	bic	r8, r4, #3
   508c8:	sub	r5, r4, r6
   508cc:	vmov.32	d18[0], r3
   508d0:	vmov.32	d20[0], r0
   508d4:	mov	r0, ip
   508d8:	vorr	d16, d18, d18
   508dc:	vmov.i32	q9, #1	; 0x00000001
   508e0:	vorr	d18, d20, d20
   508e4:	vld1.32	{d20-d21}, [r0], lr
   508e8:	subs	r8, r8, #4
   508ec:	vrev64.32	q12, q10
   508f0:	vext.8	q12, q12, q12, #8
   508f4:	vext.8	q11, q11, q12, #12
   508f8:	vmul.i32	q9, q9, q12
   508fc:	vmul.i32	q8, q11, q8
   50900:	vorr	q11, q12, q12
   50904:	bne	508e4 <GetDataSlab+0x20964>
   50908:	vext.8	q11, q9, q8, #8
   5090c:	vext.8	q12, q8, q8, #8
   50910:	cmp	r9, r6
   50914:	vmul.i32	q0, q9, q11
   50918:	vmul.i32	q1, q8, q12
   5091c:	vmul.i32	q8, q0, d0[1]
   50920:	vmul.i32	q9, q1, d2[1]
   50924:	vmov.32	r0, d16[0]
   50928:	vmov.32	r3, d18[0]
   5092c:	beq	5082c <GetDataSlab+0x208ac>
   50930:	vmov.32	r6, d20[0]
   50934:	ldr	r8, [sp, #88]	; 0x58
   50938:	mul	r3, r6, r3
   5093c:	ldr	r6, [r7, r5, lsl #2]
   50940:	subs	r5, r5, #1
   50944:	mul	r0, r0, r6
   50948:	bne	50938 <GetDataSlab+0x209b8>
   5094c:	b	50830 <GetDataSlab+0x208b0>
   50950:	ldr	r0, [sp, #80]	; 0x50
   50954:	ldr	r5, [sp, #64]	; 0x40
   50958:	add	ip, r0, r1, lsl #3
   5095c:	cmp	r5, #1
   50960:	bne	563c4 <GetDataSlab+0x26444>
   50964:	ldr	r0, [sp, #76]	; 0x4c
   50968:	ldr	r3, [fp, #20]
   5096c:	ldr	sl, [sp, #60]	; 0x3c
   50970:	cmp	r0, #1
   50974:	blt	56468 <GetDataSlab+0x264e8>
   50978:	mov	r7, r3
   5097c:	ldr	r3, [sp, #72]	; 0x48
   50980:	mov	r2, #1
   50984:	mov	lr, r8
   50988:	add	r9, r7, #4
   5098c:	sub	r0, r3, #2
   50990:	add	r2, r2, r0, lsr #1
   50994:	lsr	r0, r0, #1
   50998:	str	r0, [sp, #44]	; 0x2c
   5099c:	mov	r0, #0
   509a0:	and	r6, r2, #1
   509a4:	str	r0, [sp, #80]	; 0x50
   509a8:	sub	r2, r2, r6
   509ac:	str	r6, [sp, #52]	; 0x34
   509b0:	str	r2, [sp, #36]	; 0x24
   509b4:	sub	r2, fp, #136	; 0x88
   509b8:	orr	r4, r2, #4
   509bc:	sub	r2, fp, #176	; 0xb0
   509c0:	orr	r2, r2, #4
   509c4:	str	r2, [sp, #84]	; 0x54
   509c8:	ldr	r2, [fp, #24]
   509cc:	sub	r2, r2, #1
   509d0:	str	r2, [sp, #56]	; 0x38
   509d4:	sub	r2, fp, #96	; 0x60
   509d8:	orr	r2, r2, #4
   509dc:	str	r2, [sp, #40]	; 0x28
   509e0:	lsl	r2, r3, #1
   509e4:	str	r2, [sp, #68]	; 0x44
   509e8:	bic	r2, r3, #1
   509ec:	str	r2, [sp, #48]	; 0x30
   509f0:	ldr	r2, [sp, #92]	; 0x5c
   509f4:	ldr	r7, [r2], #4
   509f8:	str	r2, [sp, #92]	; 0x5c
   509fc:	str	r7, [sp, #64]	; 0x40
   50a00:	b	50a3c <GetDataSlab+0x20abc>
   50a04:	ldr	r2, [sp, #40]	; 0x28
   50a08:	ldr	r0, [r2, r0]
   50a0c:	add	ip, ip, r0, lsl #3
   50a10:	add	r1, r0, r1
   50a14:	ldr	r0, [sp, #68]	; 0x44
   50a18:	ldr	r3, [sp, #72]	; 0x48
   50a1c:	ldr	r2, [sp, #80]	; 0x50
   50a20:	add	lr, lr, r0
   50a24:	ldr	r0, [sp, #76]	; 0x4c
   50a28:	add	r2, r2, r3
   50a2c:	str	r2, [sp, #80]	; 0x50
   50a30:	cmp	r2, r0
   50a34:	mov	r2, #0
   50a38:	bge	56c1c <GetDataSlab+0x26c9c>
   50a3c:	ldr	r8, [sp, #92]	; 0x5c
   50a40:	cmp	r3, #1
   50a44:	blt	50b30 <GetDataSlab+0x20bb0>
   50a48:	mov	r3, #0
   50a4c:	beq	50b00 <GetDataSlab+0x20b80>
   50a50:	ldr	r0, [sp, #64]	; 0x40
   50a54:	mov	r2, #0
   50a58:	add	r6, ip, r0, lsl #3
   50a5c:	ldr	r0, [sp, #44]	; 0x2c
   50a60:	cmp	r0, #0
   50a64:	beq	50ab8 <GetDataSlab+0x20b38>
   50a68:	ldr	r0, [sp, #36]	; 0x24
   50a6c:	mov	r3, lr
   50a70:	mov	sl, r6
   50a74:	mov	r8, r6
   50a78:	mov	r5, #32
   50a7c:	vld1.64	{d16-d17}, [r8], r5
   50a80:	add	r7, sl, #16
   50a84:	subs	r0, r0, #2
   50a88:	add	r2, r2, #4
   50a8c:	mov	sl, r8
   50a90:	vmovn.i64	d16, q8
   50a94:	vuzp.16	d16, d17
   50a98:	vst1.32	{d16[0]}, [r3]
   50a9c:	vld1.64	{d16-d17}, [r7]
   50aa0:	add	r7, r3, #4
   50aa4:	add	r3, r3, #8
   50aa8:	vmovn.i64	d16, q8
   50aac:	vuzp.16	d16, d17
   50ab0:	vst1.32	{d16[0]}, [r7]
   50ab4:	bne	50a7c <GetDataSlab+0x20afc>
   50ab8:	ldr	r0, [sp, #52]	; 0x34
   50abc:	ldr	r8, [sp, #92]	; 0x5c
   50ac0:	ldr	sl, [sp, #60]	; 0x3c
   50ac4:	cmp	r0, #0
   50ac8:	ldr	r0, [sp, #88]	; 0x58
   50acc:	beq	50af0 <GetDataSlab+0x20b70>
   50ad0:	ldr	r3, [sp, #80]	; 0x50
   50ad4:	add	r0, r0, r3, lsl #1
   50ad8:	add	r3, r6, r2, lsl #3
   50adc:	vld1.64	{d16-d17}, [r3]
   50ae0:	add	r0, r0, r2, lsl #1
   50ae4:	vmovn.i64	d16, q8
   50ae8:	vuzp.16	d16, d17
   50aec:	vst1.32	{d16[0]}, [r0]
   50af0:	ldr	r0, [sp, #72]	; 0x48
   50af4:	ldr	r3, [sp, #48]	; 0x30
   50af8:	cmp	r0, r3
   50afc:	beq	50b30 <GetDataSlab+0x20bb0>
   50b00:	ldr	r5, [sp, #64]	; 0x40
   50b04:	ldr	r2, [sp, #72]	; 0x48
   50b08:	mov	r0, #0
   50b0c:	sub	r0, r0, r3, lsl #1
   50b10:	add	r7, ip, r5, lsl #3
   50b14:	sub	r2, r2, r3
   50b18:	add	r3, r7, r3, lsl #3
   50b1c:	ldrh	r7, [r3], #8
   50b20:	subs	r2, r2, #1
   50b24:	strh	r7, [lr, -r0]
   50b28:	sub	r0, r0, #2
   50b2c:	bne	50b1c <GetDataSlab+0x20b9c>
   50b30:	ldr	r0, [fp, #24]
   50b34:	add	ip, ip, sl, lsl #3
   50b38:	add	r1, r1, sl
   50b3c:	cmp	r0, #2
   50b40:	blt	50a14 <GetDataSlab+0x20a94>
   50b44:	ldr	r2, [sp, #56]	; 0x38
   50b48:	mov	r0, #0
   50b4c:	b	50b78 <GetDataSlab+0x20bf8>
   50b50:	sub	r5, fp, #176	; 0xb0
   50b54:	sub	r3, r3, r7
   50b58:	ldr	r6, [r5, r0]
   50b5c:	ldr	r5, [r8, r0]
   50b60:	mla	r3, r5, r6, r3
   50b64:	add	r1, r3, r1
   50b68:	add	ip, ip, r3, lsl #3
   50b6c:	subs	r2, r2, #1
   50b70:	add	r0, r0, #4
   50b74:	beq	50a14 <GetDataSlab+0x20a94>
   50b78:	ldr	r3, [r4, r0]
   50b7c:	add	r3, r3, #1
   50b80:	str	r3, [r4, r0]
   50b84:	ldr	r7, [r9, r0]
   50b88:	sdiv	r6, r3, r7
   50b8c:	mls	r3, r6, r7, r3
   50b90:	cmp	r3, #0
   50b94:	bne	50a04 <GetDataSlab+0x20a84>
   50b98:	mov	r3, #0
   50b9c:	str	r3, [r4, r0]
   50ba0:	ldr	r3, [sp, #84]	; 0x54
   50ba4:	ldr	r3, [r3, r0]
   50ba8:	sdiv	r6, r1, r3
   50bac:	mls	r7, r6, r3, r1
   50bb0:	cmp	r7, #0
   50bb4:	bne	50b50 <GetDataSlab+0x20bd0>
   50bb8:	ldr	r3, [r8, r0]
   50bbc:	cmp	r3, #0
   50bc0:	beq	50b6c <GetDataSlab+0x20bec>
   50bc4:	sub	r5, fp, #176	; 0xb0
   50bc8:	ldr	r5, [r5, r0]
   50bcc:	mla	r1, r5, r3, r1
   50bd0:	mul	r3, r5, r3
   50bd4:	b	50b68 <GetDataSlab+0x20be8>
   50bd8:	ldr	r0, [sp, #76]	; 0x4c
   50bdc:	ldr	r2, [fp, #20]
   50be0:	cmp	r0, #1
   50be4:	sub	r0, fp, #176	; 0xb0
   50be8:	blt	56c18 <GetDataSlab+0x26c98>
   50bec:	orr	r0, r0, #4
   50bf0:	ldr	sl, [fp, #12]
   50bf4:	sub	r3, fp, #136	; 0x88
   50bf8:	add	r2, r2, #4
   50bfc:	str	r0, [sp, #80]	; 0x50
   50c00:	ldr	r0, [fp, #24]
   50c04:	orr	lr, r3, #4
   50c08:	str	r2, [sp, #84]	; 0x54
   50c0c:	sub	r0, r0, #1
   50c10:	str	r0, [sp, #60]	; 0x3c
   50c14:	sub	r0, fp, #96	; 0x60
   50c18:	orr	r0, r0, #4
   50c1c:	str	r0, [sp, #56]	; 0x38
   50c20:	ldr	r0, [sl], #4
   50c24:	str	r0, [sp, #64]	; 0x40
   50c28:	mov	r0, #0
   50c2c:	str	r0, [sp, #68]	; 0x44
   50c30:	b	50c64 <GetDataSlab+0x20ce4>
   50c34:	ldr	r0, [sp, #56]	; 0x38
   50c38:	ldr	r0, [r0, r2]
   50c3c:	add	r8, r8, r0
   50c40:	add	r7, r0, r7
   50c44:	ldr	r3, [sp, #68]	; 0x44
   50c48:	ldr	r0, [sp, #76]	; 0x4c
   50c4c:	mov	r2, #0
   50c50:	str	r6, [sp, #72]	; 0x48
   50c54:	add	r3, r1, r3
   50c58:	cmp	r3, r0
   50c5c:	str	r3, [sp, #68]	; 0x44
   50c60:	bge	56c1c <GetDataSlab+0x26c9c>
   50c64:	ldr	r0, [sp, #64]	; 0x40
   50c68:	cmp	r1, #1
   50c6c:	add	r2, r0, r7
   50c70:	add	r7, r8, r0
   50c74:	blt	50cc8 <GetDataSlab+0x20d48>
   50c78:	ldr	r0, [sp, #88]	; 0x58
   50c7c:	ldr	r1, [sp, #68]	; 0x44
   50c80:	ldr	ip, [fp, #8]
   50c84:	ldr	r6, [fp, #16]
   50c88:	mov	r3, #0
   50c8c:	add	r4, r0, r1, lsl #2
   50c90:	ldr	r0, [fp, #20]
   50c94:	ldrb	r1, [r7]
   50c98:	str	r1, [r4, r3, lsl #2]
   50c9c:	add	r3, r3, #1
   50ca0:	ldr	r5, [r6]
   50ca4:	ldr	r1, [r0]
   50ca8:	add	r2, r5, r2
   50cac:	add	r7, r7, r5
   50cb0:	cmp	r3, r1
   50cb4:	blt	50c94 <GetDataSlab+0x20d14>
   50cb8:	ldr	r0, [fp, #12]
   50cbc:	ldr	r6, [ip]
   50cc0:	ldr	r0, [r0]
   50cc4:	b	50ccc <GetDataSlab+0x20d4c>
   50cc8:	ldr	r6, [sp, #72]	; 0x48
   50ccc:	mls	r3, r5, r1, r6
   50cd0:	str	r0, [sp, #64]	; 0x40
   50cd4:	sub	r3, r3, r0
   50cd8:	ldr	r0, [fp, #24]
   50cdc:	add	r8, r7, r3
   50ce0:	add	r7, r3, r2
   50ce4:	cmp	r0, #2
   50ce8:	blt	50c44 <GetDataSlab+0x20cc4>
   50cec:	ldr	r9, [sp, #60]	; 0x3c
   50cf0:	mov	r2, #0
   50cf4:	b	50d20 <GetDataSlab+0x20da0>
   50cf8:	sub	r0, fp, #176	; 0xb0
   50cfc:	ldr	r4, [sl, r2]
   50d00:	sub	r3, r3, ip
   50d04:	ldr	r0, [r0, r2]
   50d08:	mla	r0, r4, r0, r3
   50d0c:	add	r7, r0, r7
   50d10:	add	r8, r8, r0
   50d14:	subs	r9, r9, #1
   50d18:	add	r2, r2, #4
   50d1c:	beq	50c44 <GetDataSlab+0x20cc4>
   50d20:	ldr	r3, [lr, r2]
   50d24:	ldr	r0, [sp, #84]	; 0x54
   50d28:	add	r3, r3, #1
   50d2c:	str	r3, [lr, r2]
   50d30:	ldr	r0, [r0, r2]
   50d34:	sdiv	r4, r3, r0
   50d38:	mls	r0, r4, r0, r3
   50d3c:	cmp	r0, #0
   50d40:	bne	50c34 <GetDataSlab+0x20cb4>
   50d44:	mov	r0, #0
   50d48:	str	r0, [lr, r2]
   50d4c:	ldr	r0, [sp, #80]	; 0x50
   50d50:	ldr	r3, [r0, r2]
   50d54:	sdiv	r0, r7, r3
   50d58:	mls	ip, r0, r3, r7
   50d5c:	cmp	ip, #0
   50d60:	bne	50cf8 <GetDataSlab+0x20d78>
   50d64:	ldr	r3, [sl, r2]
   50d68:	cmp	r3, #0
   50d6c:	beq	50d14 <GetDataSlab+0x20d94>
   50d70:	sub	r0, fp, #176	; 0xb0
   50d74:	ldr	r0, [r0, r2]
   50d78:	mla	r7, r0, r3, r7
   50d7c:	mla	r8, r0, r3, r8
   50d80:	b	50d14 <GetDataSlab+0x20d94>
   50d84:	ldr	r0, [sp, #76]	; 0x4c
   50d88:	ldr	r2, [fp, #20]
   50d8c:	cmp	r0, #1
   50d90:	sub	r0, fp, #176	; 0xb0
   50d94:	blt	56c18 <GetDataSlab+0x26c98>
   50d98:	orr	r0, r0, #4
   50d9c:	ldr	lr, [fp, #12]
   50da0:	mov	r3, r8
   50da4:	sub	r6, fp, #136	; 0x88
   50da8:	add	r2, r2, #4
   50dac:	str	r0, [sp, #80]	; 0x50
   50db0:	ldr	r0, [fp, #24]
   50db4:	orr	r8, r6, #4
   50db8:	str	r2, [sp, #84]	; 0x54
   50dbc:	sub	r0, r0, #1
   50dc0:	str	r0, [sp, #60]	; 0x3c
   50dc4:	orr	r0, r3, #4
   50dc8:	str	r0, [sp, #56]	; 0x38
   50dcc:	ldr	r0, [lr], #4
   50dd0:	str	r0, [sp, #64]	; 0x40
   50dd4:	mov	r0, #0
   50dd8:	str	r0, [sp, #68]	; 0x44
   50ddc:	b	50e10 <GetDataSlab+0x20e90>
   50de0:	ldr	r0, [sp, #56]	; 0x38
   50de4:	ldr	r0, [r0, r2]
   50de8:	add	sl, sl, r0, lsl #1
   50dec:	add	r7, r0, r7
   50df0:	ldr	r3, [sp, #68]	; 0x44
   50df4:	ldr	r0, [sp, #76]	; 0x4c
   50df8:	mov	r2, #0
   50dfc:	str	r6, [sp, #72]	; 0x48
   50e00:	add	r3, r1, r3
   50e04:	cmp	r3, r0
   50e08:	str	r3, [sp, #68]	; 0x44
   50e0c:	bge	56c1c <GetDataSlab+0x26c9c>
   50e10:	ldr	r0, [sp, #64]	; 0x40
   50e14:	cmp	r1, #1
   50e18:	add	r2, r0, r7
   50e1c:	add	r7, sl, r0, lsl #1
   50e20:	blt	50e74 <GetDataSlab+0x20ef4>
   50e24:	ldr	r0, [sp, #88]	; 0x58
   50e28:	ldr	r1, [sp, #68]	; 0x44
   50e2c:	ldr	ip, [fp, #8]
   50e30:	ldr	r6, [fp, #16]
   50e34:	mov	r3, #0
   50e38:	add	r4, r0, r1, lsl #2
   50e3c:	ldr	r0, [fp, #20]
   50e40:	ldrsh	r1, [r7]
   50e44:	str	r1, [r4, r3, lsl #2]
   50e48:	add	r3, r3, #1
   50e4c:	ldr	r5, [r6]
   50e50:	ldr	r1, [r0]
   50e54:	add	r7, r7, r5, lsl #1
   50e58:	add	r2, r5, r2
   50e5c:	cmp	r3, r1
   50e60:	blt	50e40 <GetDataSlab+0x20ec0>
   50e64:	ldr	r0, [fp, #12]
   50e68:	ldr	r6, [ip]
   50e6c:	ldr	r0, [r0]
   50e70:	b	50e78 <GetDataSlab+0x20ef8>
   50e74:	ldr	r6, [sp, #72]	; 0x48
   50e78:	mls	r3, r5, r1, r6
   50e7c:	str	r0, [sp, #64]	; 0x40
   50e80:	sub	r3, r3, r0
   50e84:	ldr	r0, [fp, #24]
   50e88:	add	sl, r7, r3, lsl #1
   50e8c:	add	r7, r3, r2
   50e90:	cmp	r0, #2
   50e94:	blt	50df0 <GetDataSlab+0x20e70>
   50e98:	ldr	r9, [sp, #60]	; 0x3c
   50e9c:	mov	r2, #0
   50ea0:	b	50ecc <GetDataSlab+0x20f4c>
   50ea4:	sub	r0, fp, #176	; 0xb0
   50ea8:	ldr	r4, [lr, r2]
   50eac:	sub	r3, r3, ip
   50eb0:	ldr	r0, [r0, r2]
   50eb4:	mla	r0, r4, r0, r3
   50eb8:	add	r7, r0, r7
   50ebc:	add	sl, sl, r0, lsl #1
   50ec0:	subs	r9, r9, #1
   50ec4:	add	r2, r2, #4
   50ec8:	beq	50df0 <GetDataSlab+0x20e70>
   50ecc:	ldr	r3, [r8, r2]
   50ed0:	ldr	r0, [sp, #84]	; 0x54
   50ed4:	add	r3, r3, #1
   50ed8:	str	r3, [r8, r2]
   50edc:	ldr	r0, [r0, r2]
   50ee0:	sdiv	r4, r3, r0
   50ee4:	mls	r0, r4, r0, r3
   50ee8:	cmp	r0, #0
   50eec:	bne	50de0 <GetDataSlab+0x20e60>
   50ef0:	mov	r0, #0
   50ef4:	str	r0, [r8, r2]
   50ef8:	ldr	r0, [sp, #80]	; 0x50
   50efc:	ldr	r3, [r0, r2]
   50f00:	sdiv	r0, r7, r3
   50f04:	mls	ip, r0, r3, r7
   50f08:	cmp	ip, #0
   50f0c:	bne	50ea4 <GetDataSlab+0x20f24>
   50f10:	ldr	r3, [lr, r2]
   50f14:	cmp	r3, #0
   50f18:	beq	50ec0 <GetDataSlab+0x20f40>
   50f1c:	sub	r0, fp, #176	; 0xb0
   50f20:	ldr	r0, [r0, r2]
   50f24:	mla	r7, r0, r3, r7
   50f28:	mul	r0, r0, r3
   50f2c:	b	50ebc <GetDataSlab+0x20f3c>
   50f30:	ldr	r0, [sp, #76]	; 0x4c
   50f34:	ldr	r2, [fp, #20]
   50f38:	cmp	r0, #1
   50f3c:	sub	r0, fp, #176	; 0xb0
   50f40:	blt	56c18 <GetDataSlab+0x26c98>
   50f44:	orr	r0, r0, #4
   50f48:	ldr	lr, [fp, #12]
   50f4c:	mov	r3, r8
   50f50:	sub	r6, fp, #136	; 0x88
   50f54:	add	r2, r2, #4
   50f58:	str	r0, [sp, #80]	; 0x50
   50f5c:	ldr	r0, [fp, #24]
   50f60:	orr	r8, r6, #4
   50f64:	str	r2, [sp, #84]	; 0x54
   50f68:	sub	r0, r0, #1
   50f6c:	str	r0, [sp, #60]	; 0x3c
   50f70:	orr	r0, r3, #4
   50f74:	str	r0, [sp, #56]	; 0x38
   50f78:	ldr	r0, [lr], #4
   50f7c:	str	r0, [sp, #64]	; 0x40
   50f80:	mov	r0, #0
   50f84:	str	r0, [sp, #68]	; 0x44
   50f88:	b	50fbc <GetDataSlab+0x2103c>
   50f8c:	ldr	r0, [sp, #56]	; 0x38
   50f90:	ldr	r0, [r0, r2]
   50f94:	add	sl, sl, r0, lsl #1
   50f98:	add	r7, r0, r7
   50f9c:	ldr	r3, [sp, #68]	; 0x44
   50fa0:	ldr	r0, [sp, #76]	; 0x4c
   50fa4:	mov	r2, #0
   50fa8:	str	r6, [sp, #72]	; 0x48
   50fac:	add	r3, r1, r3
   50fb0:	cmp	r3, r0
   50fb4:	str	r3, [sp, #68]	; 0x44
   50fb8:	bge	56c1c <GetDataSlab+0x26c9c>
   50fbc:	ldr	r0, [sp, #64]	; 0x40
   50fc0:	cmp	r1, #1
   50fc4:	add	r2, r0, r7
   50fc8:	add	r7, sl, r0, lsl #1
   50fcc:	blt	51020 <GetDataSlab+0x210a0>
   50fd0:	ldr	r0, [sp, #88]	; 0x58
   50fd4:	ldr	r1, [sp, #68]	; 0x44
   50fd8:	ldr	ip, [fp, #8]
   50fdc:	ldr	r6, [fp, #16]
   50fe0:	mov	r3, #0
   50fe4:	add	r4, r0, r1, lsl #2
   50fe8:	ldr	r0, [fp, #20]
   50fec:	ldrh	r1, [r7]
   50ff0:	str	r1, [r4, r3, lsl #2]
   50ff4:	add	r3, r3, #1
   50ff8:	ldr	r5, [r6]
   50ffc:	ldr	r1, [r0]
   51000:	add	r7, r7, r5, lsl #1
   51004:	add	r2, r5, r2
   51008:	cmp	r3, r1
   5100c:	blt	50fec <GetDataSlab+0x2106c>
   51010:	ldr	r0, [fp, #12]
   51014:	ldr	r6, [ip]
   51018:	ldr	r0, [r0]
   5101c:	b	51024 <GetDataSlab+0x210a4>
   51020:	ldr	r6, [sp, #72]	; 0x48
   51024:	mls	r3, r5, r1, r6
   51028:	str	r0, [sp, #64]	; 0x40
   5102c:	sub	r3, r3, r0
   51030:	ldr	r0, [fp, #24]
   51034:	add	sl, r7, r3, lsl #1
   51038:	add	r7, r3, r2
   5103c:	cmp	r0, #2
   51040:	blt	50f9c <GetDataSlab+0x2101c>
   51044:	ldr	r9, [sp, #60]	; 0x3c
   51048:	mov	r2, #0
   5104c:	b	51078 <GetDataSlab+0x210f8>
   51050:	sub	r0, fp, #176	; 0xb0
   51054:	ldr	r4, [lr, r2]
   51058:	sub	r3, r3, ip
   5105c:	ldr	r0, [r0, r2]
   51060:	mla	r0, r4, r0, r3
   51064:	add	r7, r0, r7
   51068:	add	sl, sl, r0, lsl #1
   5106c:	subs	r9, r9, #1
   51070:	add	r2, r2, #4
   51074:	beq	50f9c <GetDataSlab+0x2101c>
   51078:	ldr	r3, [r8, r2]
   5107c:	ldr	r0, [sp, #84]	; 0x54
   51080:	add	r3, r3, #1
   51084:	str	r3, [r8, r2]
   51088:	ldr	r0, [r0, r2]
   5108c:	sdiv	r4, r3, r0
   51090:	mls	r0, r4, r0, r3
   51094:	cmp	r0, #0
   51098:	bne	50f8c <GetDataSlab+0x2100c>
   5109c:	mov	r0, #0
   510a0:	str	r0, [r8, r2]
   510a4:	ldr	r0, [sp, #80]	; 0x50
   510a8:	ldr	r3, [r0, r2]
   510ac:	sdiv	r0, r7, r3
   510b0:	mls	ip, r0, r3, r7
   510b4:	cmp	ip, #0
   510b8:	bne	51050 <GetDataSlab+0x210d0>
   510bc:	ldr	r3, [lr, r2]
   510c0:	cmp	r3, #0
   510c4:	beq	5106c <GetDataSlab+0x210ec>
   510c8:	sub	r0, fp, #176	; 0xb0
   510cc:	ldr	r0, [r0, r2]
   510d0:	mla	r7, r0, r3, r7
   510d4:	mul	r0, r0, r3
   510d8:	b	51068 <GetDataSlab+0x210e8>
   510dc:	ldr	r0, [sp, #76]	; 0x4c
   510e0:	ldr	r2, [fp, #20]
   510e4:	cmp	r0, #1
   510e8:	sub	r0, fp, #176	; 0xb0
   510ec:	blt	56c18 <GetDataSlab+0x26c98>
   510f0:	orr	r0, r0, #4
   510f4:	ldr	sl, [fp, #12]
   510f8:	sub	r3, fp, #136	; 0x88
   510fc:	add	r2, r2, #4
   51100:	str	r0, [sp, #80]	; 0x50
   51104:	ldr	r0, [fp, #24]
   51108:	orr	lr, r3, #4
   5110c:	str	r2, [sp, #84]	; 0x54
   51110:	sub	r0, r0, #1
   51114:	str	r0, [sp, #60]	; 0x3c
   51118:	sub	r0, fp, #96	; 0x60
   5111c:	orr	r0, r0, #4
   51120:	str	r0, [sp, #56]	; 0x38
   51124:	ldr	r0, [sl], #4
   51128:	str	r0, [sp, #64]	; 0x40
   5112c:	mov	r0, #0
   51130:	str	r0, [sp, #68]	; 0x44
   51134:	b	51168 <GetDataSlab+0x211e8>
   51138:	ldr	r0, [sp, #56]	; 0x38
   5113c:	ldr	r0, [r0, r2]
   51140:	add	r8, r8, r0, lsl #2
   51144:	add	r7, r0, r7
   51148:	ldr	r3, [sp, #68]	; 0x44
   5114c:	ldr	r0, [sp, #76]	; 0x4c
   51150:	mov	r2, #0
   51154:	str	r6, [sp, #72]	; 0x48
   51158:	add	r3, r1, r3
   5115c:	cmp	r3, r0
   51160:	str	r3, [sp, #68]	; 0x44
   51164:	bge	56c1c <GetDataSlab+0x26c9c>
   51168:	ldr	r0, [sp, #64]	; 0x40
   5116c:	cmp	r1, #1
   51170:	add	r2, r0, r7
   51174:	add	r7, r8, r0, lsl #2
   51178:	blt	511cc <GetDataSlab+0x2124c>
   5117c:	ldr	r0, [sp, #88]	; 0x58
   51180:	ldr	r1, [sp, #68]	; 0x44
   51184:	ldr	ip, [fp, #8]
   51188:	ldr	r6, [fp, #16]
   5118c:	mov	r3, #0
   51190:	add	r4, r0, r1, lsl #2
   51194:	ldr	r0, [fp, #20]
   51198:	ldr	r1, [r7]
   5119c:	str	r1, [r4, r3, lsl #2]
   511a0:	add	r3, r3, #1
   511a4:	ldr	r5, [r6]
   511a8:	ldr	r1, [r0]
   511ac:	add	r7, r7, r5, lsl #2
   511b0:	add	r2, r5, r2
   511b4:	cmp	r3, r1
   511b8:	blt	51198 <GetDataSlab+0x21218>
   511bc:	ldr	r0, [fp, #12]
   511c0:	ldr	r6, [ip]
   511c4:	ldr	r0, [r0]
   511c8:	b	511d0 <GetDataSlab+0x21250>
   511cc:	ldr	r6, [sp, #72]	; 0x48
   511d0:	mls	r3, r5, r1, r6
   511d4:	str	r0, [sp, #64]	; 0x40
   511d8:	sub	r3, r3, r0
   511dc:	ldr	r0, [fp, #24]
   511e0:	add	r8, r7, r3, lsl #2
   511e4:	add	r7, r3, r2
   511e8:	cmp	r0, #2
   511ec:	blt	51148 <GetDataSlab+0x211c8>
   511f0:	ldr	r9, [sp, #60]	; 0x3c
   511f4:	mov	r2, #0
   511f8:	b	51224 <GetDataSlab+0x212a4>
   511fc:	sub	r0, fp, #176	; 0xb0
   51200:	ldr	r4, [sl, r2]
   51204:	sub	r3, r3, ip
   51208:	ldr	r0, [r0, r2]
   5120c:	mla	r0, r4, r0, r3
   51210:	add	r7, r0, r7
   51214:	add	r8, r8, r0, lsl #2
   51218:	subs	r9, r9, #1
   5121c:	add	r2, r2, #4
   51220:	beq	51148 <GetDataSlab+0x211c8>
   51224:	ldr	r3, [lr, r2]
   51228:	ldr	r0, [sp, #84]	; 0x54
   5122c:	add	r3, r3, #1
   51230:	str	r3, [lr, r2]
   51234:	ldr	r0, [r0, r2]
   51238:	sdiv	r4, r3, r0
   5123c:	mls	r0, r4, r0, r3
   51240:	cmp	r0, #0
   51244:	bne	51138 <GetDataSlab+0x211b8>
   51248:	mov	r0, #0
   5124c:	str	r0, [lr, r2]
   51250:	ldr	r0, [sp, #80]	; 0x50
   51254:	ldr	r3, [r0, r2]
   51258:	sdiv	r0, r7, r3
   5125c:	mls	ip, r0, r3, r7
   51260:	cmp	ip, #0
   51264:	bne	511fc <GetDataSlab+0x2127c>
   51268:	ldr	r3, [sl, r2]
   5126c:	cmp	r3, #0
   51270:	beq	51218 <GetDataSlab+0x21298>
   51274:	sub	r0, fp, #176	; 0xb0
   51278:	ldr	r0, [r0, r2]
   5127c:	mla	r7, r0, r3, r7
   51280:	mul	r0, r0, r3
   51284:	b	51214 <GetDataSlab+0x21294>
   51288:	ldr	r0, [sp, #76]	; 0x4c
   5128c:	ldr	r2, [fp, #20]
   51290:	cmp	r0, #1
   51294:	sub	r0, fp, #176	; 0xb0
   51298:	blt	56c18 <GetDataSlab+0x26c98>
   5129c:	orr	r0, r0, #4
   512a0:	ldr	sl, [fp, #12]
   512a4:	sub	r3, fp, #136	; 0x88
   512a8:	add	r2, r2, #4
   512ac:	str	r0, [sp, #80]	; 0x50
   512b0:	ldr	r0, [fp, #24]
   512b4:	orr	lr, r3, #4
   512b8:	str	r2, [sp, #84]	; 0x54
   512bc:	sub	r0, r0, #1
   512c0:	str	r0, [sp, #60]	; 0x3c
   512c4:	sub	r0, fp, #96	; 0x60
   512c8:	orr	r0, r0, #4
   512cc:	str	r0, [sp, #56]	; 0x38
   512d0:	ldr	r0, [sl], #4
   512d4:	str	r0, [sp, #64]	; 0x40
   512d8:	mov	r0, #0
   512dc:	str	r0, [sp, #68]	; 0x44
   512e0:	b	51314 <GetDataSlab+0x21394>
   512e4:	ldr	r0, [sp, #56]	; 0x38
   512e8:	ldr	r0, [r0, r2]
   512ec:	add	r8, r8, r0, lsl #2
   512f0:	add	r7, r0, r7
   512f4:	ldr	r3, [sp, #68]	; 0x44
   512f8:	ldr	r0, [sp, #76]	; 0x4c
   512fc:	mov	r2, #0
   51300:	str	r6, [sp, #72]	; 0x48
   51304:	add	r3, r1, r3
   51308:	cmp	r3, r0
   5130c:	str	r3, [sp, #68]	; 0x44
   51310:	bge	56c1c <GetDataSlab+0x26c9c>
   51314:	ldr	r0, [sp, #64]	; 0x40
   51318:	cmp	r1, #1
   5131c:	add	r2, r0, r7
   51320:	add	r7, r8, r0, lsl #2
   51324:	blt	51378 <GetDataSlab+0x213f8>
   51328:	ldr	r0, [sp, #88]	; 0x58
   5132c:	ldr	r1, [sp, #68]	; 0x44
   51330:	ldr	ip, [fp, #8]
   51334:	ldr	r6, [fp, #16]
   51338:	mov	r3, #0
   5133c:	add	r4, r0, r1, lsl #2
   51340:	ldr	r0, [fp, #20]
   51344:	ldr	r1, [r7]
   51348:	str	r1, [r4, r3, lsl #2]
   5134c:	add	r3, r3, #1
   51350:	ldr	r5, [r6]
   51354:	ldr	r1, [r0]
   51358:	add	r7, r7, r5, lsl #2
   5135c:	add	r2, r5, r2
   51360:	cmp	r3, r1
   51364:	blt	51344 <GetDataSlab+0x213c4>
   51368:	ldr	r0, [fp, #12]
   5136c:	ldr	r6, [ip]
   51370:	ldr	r0, [r0]
   51374:	b	5137c <GetDataSlab+0x213fc>
   51378:	ldr	r6, [sp, #72]	; 0x48
   5137c:	mls	r3, r5, r1, r6
   51380:	str	r0, [sp, #64]	; 0x40
   51384:	sub	r3, r3, r0
   51388:	ldr	r0, [fp, #24]
   5138c:	add	r8, r7, r3, lsl #2
   51390:	add	r7, r3, r2
   51394:	cmp	r0, #2
   51398:	blt	512f4 <GetDataSlab+0x21374>
   5139c:	ldr	r9, [sp, #60]	; 0x3c
   513a0:	mov	r2, #0
   513a4:	b	513d0 <GetDataSlab+0x21450>
   513a8:	sub	r0, fp, #176	; 0xb0
   513ac:	ldr	r4, [sl, r2]
   513b0:	sub	r3, r3, ip
   513b4:	ldr	r0, [r0, r2]
   513b8:	mla	r0, r4, r0, r3
   513bc:	add	r7, r0, r7
   513c0:	add	r8, r8, r0, lsl #2
   513c4:	subs	r9, r9, #1
   513c8:	add	r2, r2, #4
   513cc:	beq	512f4 <GetDataSlab+0x21374>
   513d0:	ldr	r3, [lr, r2]
   513d4:	ldr	r0, [sp, #84]	; 0x54
   513d8:	add	r3, r3, #1
   513dc:	str	r3, [lr, r2]
   513e0:	ldr	r0, [r0, r2]
   513e4:	sdiv	r4, r3, r0
   513e8:	mls	r0, r4, r0, r3
   513ec:	cmp	r0, #0
   513f0:	bne	512e4 <GetDataSlab+0x21364>
   513f4:	mov	r0, #0
   513f8:	str	r0, [lr, r2]
   513fc:	ldr	r0, [sp, #80]	; 0x50
   51400:	ldr	r3, [r0, r2]
   51404:	sdiv	r0, r7, r3
   51408:	mls	ip, r0, r3, r7
   5140c:	cmp	ip, #0
   51410:	bne	513a8 <GetDataSlab+0x21428>
   51414:	ldr	r3, [sl, r2]
   51418:	cmp	r3, #0
   5141c:	beq	513c4 <GetDataSlab+0x21444>
   51420:	sub	r0, fp, #176	; 0xb0
   51424:	ldr	r0, [r0, r2]
   51428:	mla	r7, r0, r3, r7
   5142c:	mul	r0, r0, r3
   51430:	b	513c0 <GetDataSlab+0x21440>
   51434:	ldr	r0, [sp, #76]	; 0x4c
   51438:	ldr	r2, [fp, #20]
   5143c:	cmp	r0, #1
   51440:	sub	r0, fp, #176	; 0xb0
   51444:	blt	56c18 <GetDataSlab+0x26c98>
   51448:	orr	r0, r0, #4
   5144c:	ldr	lr, [fp, #12]
   51450:	mov	r3, r8
   51454:	sub	r6, fp, #136	; 0x88
   51458:	add	r2, r2, #4
   5145c:	str	r0, [sp, #80]	; 0x50
   51460:	ldr	r0, [fp, #24]
   51464:	orr	r8, r6, #4
   51468:	str	r2, [sp, #84]	; 0x54
   5146c:	sub	r0, r0, #1
   51470:	str	r0, [sp, #60]	; 0x3c
   51474:	orr	r0, r3, #4
   51478:	str	r0, [sp, #56]	; 0x38
   5147c:	ldr	r0, [lr], #4
   51480:	str	r0, [sp, #64]	; 0x40
   51484:	mov	r0, #0
   51488:	str	r0, [sp, #68]	; 0x44
   5148c:	b	514c0 <GetDataSlab+0x21540>
   51490:	ldr	r0, [sp, #56]	; 0x38
   51494:	ldr	r0, [r0, r2]
   51498:	add	sl, sl, r0, lsl #2
   5149c:	add	r7, r0, r7
   514a0:	ldr	r3, [sp, #68]	; 0x44
   514a4:	ldr	r0, [sp, #76]	; 0x4c
   514a8:	mov	r2, #0
   514ac:	str	r6, [sp, #72]	; 0x48
   514b0:	add	r3, r1, r3
   514b4:	cmp	r3, r0
   514b8:	str	r3, [sp, #68]	; 0x44
   514bc:	bge	56c1c <GetDataSlab+0x26c9c>
   514c0:	ldr	r0, [sp, #64]	; 0x40
   514c4:	cmp	r1, #1
   514c8:	add	r2, r0, r7
   514cc:	add	r7, sl, r0, lsl #2
   514d0:	blt	5152c <GetDataSlab+0x215ac>
   514d4:	ldr	r0, [sp, #88]	; 0x58
   514d8:	ldr	r1, [sp, #68]	; 0x44
   514dc:	ldr	ip, [fp, #8]
   514e0:	ldr	r6, [fp, #16]
   514e4:	mov	r3, #0
   514e8:	add	r4, r0, r1, lsl #2
   514ec:	ldr	r0, [fp, #20]
   514f0:	vldr	s0, [r7]
   514f4:	vcvt.s32.f32	s0, s0
   514f8:	vmov	r1, s0
   514fc:	str	r1, [r4, r3, lsl #2]
   51500:	add	r3, r3, #1
   51504:	ldr	r5, [r6]
   51508:	ldr	r1, [r0]
   5150c:	add	r7, r7, r5, lsl #2
   51510:	add	r2, r5, r2
   51514:	cmp	r3, r1
   51518:	blt	514f0 <GetDataSlab+0x21570>
   5151c:	ldr	r0, [fp, #12]
   51520:	ldr	r6, [ip]
   51524:	ldr	r0, [r0]
   51528:	b	51530 <GetDataSlab+0x215b0>
   5152c:	ldr	r6, [sp, #72]	; 0x48
   51530:	mls	r3, r5, r1, r6
   51534:	str	r0, [sp, #64]	; 0x40
   51538:	sub	r3, r3, r0
   5153c:	ldr	r0, [fp, #24]
   51540:	add	sl, r7, r3, lsl #2
   51544:	add	r7, r3, r2
   51548:	cmp	r0, #2
   5154c:	blt	514a0 <GetDataSlab+0x21520>
   51550:	ldr	r9, [sp, #60]	; 0x3c
   51554:	mov	r2, #0
   51558:	b	51584 <GetDataSlab+0x21604>
   5155c:	sub	r0, fp, #176	; 0xb0
   51560:	ldr	r4, [lr, r2]
   51564:	sub	r3, r3, ip
   51568:	ldr	r0, [r0, r2]
   5156c:	mla	r0, r4, r0, r3
   51570:	add	r7, r0, r7
   51574:	add	sl, sl, r0, lsl #2
   51578:	subs	r9, r9, #1
   5157c:	add	r2, r2, #4
   51580:	beq	514a0 <GetDataSlab+0x21520>
   51584:	ldr	r3, [r8, r2]
   51588:	ldr	r0, [sp, #84]	; 0x54
   5158c:	add	r3, r3, #1
   51590:	str	r3, [r8, r2]
   51594:	ldr	r0, [r0, r2]
   51598:	sdiv	r4, r3, r0
   5159c:	mls	r0, r4, r0, r3
   515a0:	cmp	r0, #0
   515a4:	bne	51490 <GetDataSlab+0x21510>
   515a8:	mov	r0, #0
   515ac:	str	r0, [r8, r2]
   515b0:	ldr	r0, [sp, #80]	; 0x50
   515b4:	ldr	r3, [r0, r2]
   515b8:	sdiv	r0, r7, r3
   515bc:	mls	ip, r0, r3, r7
   515c0:	cmp	ip, #0
   515c4:	bne	5155c <GetDataSlab+0x215dc>
   515c8:	ldr	r3, [lr, r2]
   515cc:	cmp	r3, #0
   515d0:	beq	51578 <GetDataSlab+0x215f8>
   515d4:	sub	r0, fp, #176	; 0xb0
   515d8:	ldr	r0, [r0, r2]
   515dc:	mla	r7, r0, r3, r7
   515e0:	mul	r0, r0, r3
   515e4:	b	51574 <GetDataSlab+0x215f4>
   515e8:	ldr	r0, [sp, #76]	; 0x4c
   515ec:	ldr	r2, [fp, #20]
   515f0:	cmp	r0, #1
   515f4:	sub	r0, fp, #176	; 0xb0
   515f8:	blt	56c18 <GetDataSlab+0x26c98>
   515fc:	orr	r0, r0, #4
   51600:	ldr	lr, [fp, #12]
   51604:	mov	r3, r8
   51608:	sub	r6, fp, #136	; 0x88
   5160c:	add	r2, r2, #4
   51610:	str	r0, [sp, #80]	; 0x50
   51614:	ldr	r0, [fp, #24]
   51618:	orr	r8, r6, #4
   5161c:	str	r2, [sp, #84]	; 0x54
   51620:	sub	r0, r0, #1
   51624:	str	r0, [sp, #60]	; 0x3c
   51628:	orr	r0, r3, #4
   5162c:	str	r0, [sp, #56]	; 0x38
   51630:	ldr	r0, [lr], #4
   51634:	str	r0, [sp, #64]	; 0x40
   51638:	mov	r0, #0
   5163c:	str	r0, [sp, #68]	; 0x44
   51640:	b	51674 <GetDataSlab+0x216f4>
   51644:	ldr	r0, [sp, #56]	; 0x38
   51648:	ldr	r0, [r0, r2]
   5164c:	add	sl, sl, r0, lsl #3
   51650:	add	r7, r0, r7
   51654:	ldr	r3, [sp, #68]	; 0x44
   51658:	ldr	r0, [sp, #76]	; 0x4c
   5165c:	mov	r2, #0
   51660:	str	r6, [sp, #72]	; 0x48
   51664:	add	r3, r1, r3
   51668:	cmp	r3, r0
   5166c:	str	r3, [sp, #68]	; 0x44
   51670:	bge	56c1c <GetDataSlab+0x26c9c>
   51674:	ldr	r0, [sp, #64]	; 0x40
   51678:	cmp	r1, #1
   5167c:	add	r2, r0, r7
   51680:	add	r7, sl, r0, lsl #3
   51684:	blt	516e0 <GetDataSlab+0x21760>
   51688:	ldr	r0, [sp, #88]	; 0x58
   5168c:	ldr	r1, [sp, #68]	; 0x44
   51690:	ldr	ip, [fp, #8]
   51694:	ldr	r6, [fp, #16]
   51698:	mov	r3, #0
   5169c:	add	r4, r0, r1, lsl #2
   516a0:	ldr	r0, [fp, #20]
   516a4:	vldr	d16, [r7]
   516a8:	vcvt.s32.f64	s0, d16
   516ac:	vmov	r1, s0
   516b0:	str	r1, [r4, r3, lsl #2]
   516b4:	add	r3, r3, #1
   516b8:	ldr	r5, [r6]
   516bc:	ldr	r1, [r0]
   516c0:	add	r7, r7, r5, lsl #3
   516c4:	add	r2, r5, r2
   516c8:	cmp	r3, r1
   516cc:	blt	516a4 <GetDataSlab+0x21724>
   516d0:	ldr	r0, [fp, #12]
   516d4:	ldr	r6, [ip]
   516d8:	ldr	r0, [r0]
   516dc:	b	516e4 <GetDataSlab+0x21764>
   516e0:	ldr	r6, [sp, #72]	; 0x48
   516e4:	mls	r3, r5, r1, r6
   516e8:	str	r0, [sp, #64]	; 0x40
   516ec:	sub	r3, r3, r0
   516f0:	ldr	r0, [fp, #24]
   516f4:	add	sl, r7, r3, lsl #3
   516f8:	add	r7, r3, r2
   516fc:	cmp	r0, #2
   51700:	blt	51654 <GetDataSlab+0x216d4>
   51704:	ldr	r9, [sp, #60]	; 0x3c
   51708:	mov	r2, #0
   5170c:	b	51738 <GetDataSlab+0x217b8>
   51710:	sub	r0, fp, #176	; 0xb0
   51714:	ldr	r4, [lr, r2]
   51718:	sub	r3, r3, ip
   5171c:	ldr	r0, [r0, r2]
   51720:	mla	r0, r4, r0, r3
   51724:	add	r7, r0, r7
   51728:	add	sl, sl, r0, lsl #3
   5172c:	subs	r9, r9, #1
   51730:	add	r2, r2, #4
   51734:	beq	51654 <GetDataSlab+0x216d4>
   51738:	ldr	r3, [r8, r2]
   5173c:	ldr	r0, [sp, #84]	; 0x54
   51740:	add	r3, r3, #1
   51744:	str	r3, [r8, r2]
   51748:	ldr	r0, [r0, r2]
   5174c:	sdiv	r4, r3, r0
   51750:	mls	r0, r4, r0, r3
   51754:	cmp	r0, #0
   51758:	bne	51644 <GetDataSlab+0x216c4>
   5175c:	mov	r0, #0
   51760:	str	r0, [r8, r2]
   51764:	ldr	r0, [sp, #80]	; 0x50
   51768:	ldr	r3, [r0, r2]
   5176c:	sdiv	r0, r7, r3
   51770:	mls	ip, r0, r3, r7
   51774:	cmp	ip, #0
   51778:	bne	51710 <GetDataSlab+0x21790>
   5177c:	ldr	r3, [lr, r2]
   51780:	cmp	r3, #0
   51784:	beq	5172c <GetDataSlab+0x217ac>
   51788:	sub	r0, fp, #176	; 0xb0
   5178c:	ldr	r0, [r0, r2]
   51790:	mla	r7, r0, r3, r7
   51794:	mul	r0, r0, r3
   51798:	b	51728 <GetDataSlab+0x217a8>
   5179c:	ldr	r0, [sp, #68]	; 0x44
   517a0:	ldr	r6, [fp, #16]
   517a4:	cmp	r0, #1
   517a8:	sub	r0, fp, #176	; 0xb0
   517ac:	blt	5193c <GetDataSlab+0x219bc>
   517b0:	ldr	ip, [fp, #12]
   517b4:	orr	r0, r0, #4
   517b8:	sub	r2, fp, #136	; 0x88
   517bc:	mov	r5, #0
   517c0:	str	r0, [sp, #72]	; 0x48
   517c4:	ldr	r0, [fp, #24]
   517c8:	orr	r8, r2, #4
   517cc:	ldr	r2, [fp, #20]
   517d0:	ldr	r4, [ip], #4
   517d4:	sub	r0, r0, #1
   517d8:	add	r2, r2, #4
   517dc:	str	r0, [sp, #52]	; 0x34
   517e0:	sub	r0, fp, #96	; 0x60
   517e4:	str	r2, [sp, #84]	; 0x54
   517e8:	orr	r0, r0, #4
   517ec:	str	r0, [sp, #48]	; 0x30
   517f0:	b	51824 <GetDataSlab+0x218a4>
   517f4:	ldr	r0, [sp, #48]	; 0x30
   517f8:	ldr	r0, [r0, r2]
   517fc:	add	r9, r9, r0, lsl #3
   51800:	add	r3, r0, r3
   51804:	ldr	r5, [sp, #60]	; 0x3c
   51808:	ldr	r0, [sp, #68]	; 0x44
   5180c:	str	r6, [sp, #64]	; 0x40
   51810:	ldr	r6, [fp, #16]
   51814:	ldr	r4, [sp, #56]	; 0x38
   51818:	add	r5, r1, r5
   5181c:	cmp	r5, r0
   51820:	bge	5193c <GetDataSlab+0x219bc>
   51824:	add	r2, r4, r3
   51828:	add	r3, r9, r4, lsl #3
   5182c:	cmp	r1, #1
   51830:	str	r5, [sp, #60]	; 0x3c
   51834:	blt	51880 <GetDataSlab+0x21900>
   51838:	ldr	r0, [sp, #88]	; 0x58
   5183c:	mov	r4, #0
   51840:	add	r5, r0, r5, lsl #2
   51844:	ldr	r0, [fp, #20]
   51848:	ldr	r1, [r3]
   5184c:	str	r1, [r5, r4, lsl #2]
   51850:	add	r4, r4, #1
   51854:	ldr	r7, [r6]
   51858:	ldr	r1, [r0]
   5185c:	add	r3, r3, r7, lsl #3
   51860:	add	r2, r7, r2
   51864:	cmp	r4, r1
   51868:	blt	51848 <GetDataSlab+0x218c8>
   5186c:	ldr	r0, [fp, #12]
   51870:	ldr	r4, [r0]
   51874:	ldr	r0, [fp, #8]
   51878:	ldr	r6, [r0]
   5187c:	b	51884 <GetDataSlab+0x21904>
   51880:	ldr	r6, [sp, #64]	; 0x40
   51884:	mls	r5, r7, r1, r6
   51888:	ldr	r0, [fp, #24]
   5188c:	str	r4, [sp, #56]	; 0x38
   51890:	sub	r4, r5, r4
   51894:	add	r9, r3, r4, lsl #3
   51898:	add	r3, r4, r2
   5189c:	cmp	r0, #2
   518a0:	blt	51804 <GetDataSlab+0x21884>
   518a4:	ldr	sl, [sp, #52]	; 0x34
   518a8:	mov	r2, #0
   518ac:	b	518d8 <GetDataSlab+0x21958>
   518b0:	sub	r0, fp, #176	; 0xb0
   518b4:	ldr	r5, [ip, r2]
   518b8:	sub	r4, r4, lr
   518bc:	ldr	r0, [r0, r2]
   518c0:	mla	r0, r5, r0, r4
   518c4:	add	r3, r0, r3
   518c8:	add	r9, r9, r0, lsl #3
   518cc:	subs	sl, sl, #1
   518d0:	add	r2, r2, #4
   518d4:	beq	51804 <GetDataSlab+0x21884>
   518d8:	ldr	r4, [r8, r2]
   518dc:	ldr	r0, [sp, #84]	; 0x54
   518e0:	add	r4, r4, #1
   518e4:	str	r4, [r8, r2]
   518e8:	ldr	r0, [r0, r2]
   518ec:	sdiv	r5, r4, r0
   518f0:	mls	r0, r5, r0, r4
   518f4:	cmp	r0, #0
   518f8:	bne	517f4 <GetDataSlab+0x21874>
   518fc:	mov	r0, #0
   51900:	str	r0, [r8, r2]
   51904:	ldr	r0, [sp, #72]	; 0x48
   51908:	ldr	r4, [r0, r2]
   5190c:	sdiv	r0, r3, r4
   51910:	mls	lr, r0, r4, r3
   51914:	cmp	lr, #0
   51918:	bne	518b0 <GetDataSlab+0x21930>
   5191c:	ldr	r4, [ip, r2]
   51920:	cmp	r4, #0
   51924:	beq	518cc <GetDataSlab+0x2194c>
   51928:	sub	r0, fp, #176	; 0xb0
   5192c:	ldr	r0, [r0, r2]
   51930:	mla	r3, r0, r4, r3
   51934:	mul	r0, r0, r4
   51938:	b	518c8 <GetDataSlab+0x21948>
   5193c:	ldr	r7, [sp, #76]	; 0x4c
   51940:	mov	r2, #0
   51944:	cmp	r7, #13
   51948:	bne	56c1c <GetDataSlab+0x26c9c>
   5194c:	ldr	r0, [fp, #16]
   51950:	mov	r7, #0
   51954:	sub	r9, fp, #176	; 0xb0
   51958:	sub	r8, fp, #96	; 0x60
   5195c:	ldr	r5, [r0]
   51960:	sub	r0, r5, #1
   51964:	str	r0, [fp, #-96]	; 0xffffffa0
   51968:	ldr	r0, [fp, #8]
   5196c:	ldr	r0, [r0]
   51970:	str	r0, [sp, #72]	; 0x48
   51974:	str	r0, [fp, #-176]	; 0xffffff50
   51978:	ldr	r0, [fp, #20]
   5197c:	ldr	r1, [r0]
   51980:	ldr	r0, [fp, #24]
   51984:	cmp	r0, #2
   51988:	mov	r0, r1
   5198c:	str	r1, [sp, #76]	; 0x4c
   51990:	blt	51b04 <GetDataSlab+0x21b84>
   51994:	ldr	r0, [fp, #8]
   51998:	ldr	r4, [sp, #72]	; 0x48
   5199c:	mov	r3, #0
   519a0:	mvn	ip, #15
   519a4:	mov	r7, #0
   519a8:	str	r1, [sp, #76]	; 0x4c
   519ac:	str	r3, [sp, #84]	; 0x54
   519b0:	mov	r3, r1
   519b4:	mov	r2, r0
   519b8:	sub	r0, r0, #4
   519bc:	mov	r6, r4
   519c0:	sub	sl, r2, #12
   519c4:	mov	r2, #1
   519c8:	b	51a1c <GetDataSlab+0x21a9c>
   519cc:	sub	r8, fp, #96	; 0x60
   519d0:	ldr	r3, [fp, #12]
   519d4:	sub	r9, fp, #176	; 0xb0
   519d8:	str	lr, [r8, r2, lsl #2]
   519dc:	ldr	r6, [sp, #68]	; 0x44
   519e0:	add	sl, sl, #4
   519e4:	str	r4, [r9, r2, lsl #2]
   519e8:	ldr	r3, [r3, r2, lsl #2]
   519ec:	mla	r7, r3, r6, r7
   519f0:	ldr	r3, [fp, #20]
   519f4:	ldr	r6, [sp, #76]	; 0x4c
   519f8:	ldr	r3, [r3, r2, lsl #2]
   519fc:	add	r2, r2, #1
   51a00:	mul	r6, r3, r6
   51a04:	ldr	r3, [fp, #24]
   51a08:	str	r6, [sp, #76]	; 0x4c
   51a0c:	mov	r6, r4
   51a10:	ldr	r4, [sp, #64]	; 0x40
   51a14:	cmp	r2, r3
   51a18:	beq	51b04 <GetDataSlab+0x21b84>
   51a1c:	ldr	r3, [fp, #16]
   51a20:	str	r6, [sp, #68]	; 0x44
   51a24:	ldr	r3, [r3, r2, lsl #2]
   51a28:	str	r4, [r9, r2, lsl #2]
   51a2c:	ldr	r9, [sp, #84]	; 0x54
   51a30:	sub	lr, r3, #1
   51a34:	ldr	r3, [fp, #8]
   51a38:	add	r9, r9, #1
   51a3c:	str	lr, [r8, r2, lsl #2]
   51a40:	cmp	r9, #4
   51a44:	str	r9, [sp, #84]	; 0x54
   51a48:	ldr	r6, [r3, r2, lsl #2]
   51a4c:	str	r6, [sp, #64]	; 0x40
   51a50:	bcs	51a5c <GetDataSlab+0x21adc>
   51a54:	mov	r3, r2
   51a58:	b	51aec <GetDataSlab+0x21b6c>
   51a5c:	vmov.i32	q9, #1	; 0x00000001
   51a60:	vmov.i32	q10, #1	; 0x00000001
   51a64:	vmov.32	d23[1], r6
   51a68:	vmov.i32	q8, #1	; 0x00000001
   51a6c:	bic	r3, r9, #3
   51a70:	bic	r8, r2, #3
   51a74:	mov	r6, sl
   51a78:	str	r3, [sp, #60]	; 0x3c
   51a7c:	sub	r3, r2, r3
   51a80:	vmov.32	d18[0], r4
   51a84:	vmov.32	d20[0], lr
   51a88:	vorr	d16, d18, d18
   51a8c:	vmov.i32	q9, #1	; 0x00000001
   51a90:	vorr	d18, d20, d20
   51a94:	vld1.32	{d20-d21}, [r6], ip
   51a98:	subs	r8, r8, #4
   51a9c:	vrev64.32	q12, q10
   51aa0:	vext.8	q12, q12, q12, #8
   51aa4:	vext.8	q11, q11, q12, #12
   51aa8:	vmul.i32	q9, q9, q12
   51aac:	vmul.i32	q8, q11, q8
   51ab0:	vorr	q11, q12, q12
   51ab4:	bne	51a94 <GetDataSlab+0x21b14>
   51ab8:	vext.8	q11, q9, q8, #8
   51abc:	vext.8	q12, q8, q8, #8
   51ac0:	ldr	r6, [sp, #60]	; 0x3c
   51ac4:	vmul.i32	q0, q9, q11
   51ac8:	vmul.i32	q1, q8, q12
   51acc:	cmp	r9, r6
   51ad0:	vmul.i32	q8, q0, d0[1]
   51ad4:	vmul.i32	q9, q1, d2[1]
   51ad8:	vmov.32	lr, d16[0]
   51adc:	vmov.32	r4, d18[0]
   51ae0:	beq	519cc <GetDataSlab+0x21a4c>
   51ae4:	vmov.32	r6, d20[0]
   51ae8:	sub	r8, fp, #96	; 0x60
   51aec:	mul	r4, r6, r4
   51af0:	ldr	r6, [r0, r3, lsl #2]
   51af4:	subs	r3, r3, #1
   51af8:	mul	lr, lr, r6
   51afc:	bne	51aec <GetDataSlab+0x21b6c>
   51b00:	b	519d0 <GetDataSlab+0x21a50>
   51b04:	ldr	r0, [sp, #80]	; 0x50
   51b08:	cmp	r5, #1
   51b0c:	add	sl, r0, r7, lsl #3
   51b10:	bne	565dc <GetDataSlab+0x2665c>
   51b14:	ldr	r0, [sp, #76]	; 0x4c
   51b18:	ldr	r3, [fp, #20]
   51b1c:	sub	r2, fp, #176	; 0xb0
   51b20:	cmp	r0, #1
   51b24:	blt	56c18 <GetDataSlab+0x26c98>
   51b28:	orr	r2, r2, #4
   51b2c:	ldr	lr, [fp, #12]
   51b30:	sub	r0, fp, #136	; 0x88
   51b34:	add	r4, r3, #4
   51b38:	str	r2, [sp, #84]	; 0x54
   51b3c:	ldr	r2, [fp, #24]
   51b40:	orr	r0, r0, #4
   51b44:	sub	r2, r2, #1
   51b48:	str	r2, [sp, #68]	; 0x44
   51b4c:	orr	r2, r8, #4
   51b50:	mov	r8, #0
   51b54:	str	r2, [sp, #64]	; 0x40
   51b58:	ldr	r2, [lr], #4
   51b5c:	str	r2, [sp, #80]	; 0x50
   51b60:	b	51b88 <GetDataSlab+0x21c08>
   51b64:	ldr	r3, [sp, #64]	; 0x40
   51b68:	ldr	r2, [r3, r2]
   51b6c:	add	sl, sl, r2, lsl #3
   51b70:	add	r7, r2, r7
   51b74:	ldr	r3, [sp, #76]	; 0x4c
   51b78:	add	r8, r1, r8
   51b7c:	mov	r2, #0
   51b80:	cmp	r8, r3
   51b84:	bge	56c1c <GetDataSlab+0x26c9c>
   51b88:	ldr	r5, [sp, #80]	; 0x50
   51b8c:	ldr	r2, [sp, #72]	; 0x48
   51b90:	cmp	r1, #1
   51b94:	sub	ip, fp, #176	; 0xb0
   51b98:	add	r9, sl, r5, lsl #3
   51b9c:	add	r3, r5, r7
   51ba0:	blt	51be8 <GetDataSlab+0x21c68>
   51ba4:	ldr	r1, [sp, #88]	; 0x58
   51ba8:	ldr	r5, [fp, #20]
   51bac:	mov	r6, r4
   51bb0:	mov	r2, #0
   51bb4:	mov	r7, r9
   51bb8:	add	r4, r1, r8, lsl #2
   51bbc:	ldr	r1, [r7], #8
   51bc0:	str	r1, [r4, r2, lsl #2]
   51bc4:	add	r2, r2, #1
   51bc8:	ldr	r1, [r5]
   51bcc:	cmp	r2, r1
   51bd0:	blt	51bbc <GetDataSlab+0x21c3c>
   51bd4:	ldr	r2, [fp, #12]
   51bd8:	mov	r4, r6
   51bdc:	ldr	r5, [r2]
   51be0:	ldr	r2, [fp, #8]
   51be4:	ldr	r2, [r2]
   51be8:	str	r2, [sp, #72]	; 0x48
   51bec:	sub	r2, r2, r5
   51bf0:	str	r5, [sp, #80]	; 0x50
   51bf4:	add	sl, r9, r2, lsl #3
   51bf8:	add	r7, r3, r2
   51bfc:	ldr	r2, [fp, #24]
   51c00:	cmp	r2, #2
   51c04:	blt	51b74 <GetDataSlab+0x21bf4>
   51c08:	ldr	r9, [sp, #68]	; 0x44
   51c0c:	mov	r2, #0
   51c10:	b	51c3c <GetDataSlab+0x21cbc>
   51c14:	ldr	r6, [ip, r2]
   51c18:	ldr	ip, [lr, r2]
   51c1c:	sub	r3, r3, r5
   51c20:	mla	r3, ip, r6, r3
   51c24:	sub	ip, fp, #176	; 0xb0
   51c28:	add	r7, r3, r7
   51c2c:	add	sl, sl, r3, lsl #3
   51c30:	subs	r9, r9, #1
   51c34:	add	r2, r2, #4
   51c38:	beq	51b74 <GetDataSlab+0x21bf4>
   51c3c:	ldr	r3, [r0, r2]
   51c40:	add	r3, r3, #1
   51c44:	str	r3, [r0, r2]
   51c48:	ldr	r5, [r4, r2]
   51c4c:	sdiv	r6, r3, r5
   51c50:	mls	r3, r6, r5, r3
   51c54:	cmp	r3, #0
   51c58:	bne	51b64 <GetDataSlab+0x21be4>
   51c5c:	mov	r3, #0
   51c60:	str	r3, [r0, r2]
   51c64:	ldr	r3, [sp, #84]	; 0x54
   51c68:	ldr	r3, [r3, r2]
   51c6c:	sdiv	r5, r7, r3
   51c70:	mls	r5, r5, r3, r7
   51c74:	cmp	r5, #0
   51c78:	bne	51c14 <GetDataSlab+0x21c94>
   51c7c:	ldr	r3, [lr, r2]
   51c80:	cmp	r3, #0
   51c84:	beq	51c30 <GetDataSlab+0x21cb0>
   51c88:	ldr	r6, [ip, r2]
   51c8c:	mla	r7, r6, r3, r7
   51c90:	mul	r3, r6, r3
   51c94:	b	51c2c <GetDataSlab+0x21cac>
   51c98:	ldr	r0, [sp, #76]	; 0x4c
   51c9c:	ldr	r2, [fp, #20]
   51ca0:	cmp	r0, #1
   51ca4:	sub	r0, fp, #176	; 0xb0
   51ca8:	blt	56c18 <GetDataSlab+0x26c98>
   51cac:	orr	r0, r0, #4
   51cb0:	ldr	sl, [fp, #12]
   51cb4:	sub	r3, fp, #136	; 0x88
   51cb8:	add	r2, r2, #4
   51cbc:	str	r0, [sp, #80]	; 0x50
   51cc0:	ldr	r0, [fp, #24]
   51cc4:	orr	lr, r3, #4
   51cc8:	str	r2, [sp, #84]	; 0x54
   51ccc:	sub	r0, r0, #1
   51cd0:	str	r0, [sp, #60]	; 0x3c
   51cd4:	sub	r0, fp, #96	; 0x60
   51cd8:	orr	r0, r0, #4
   51cdc:	str	r0, [sp, #56]	; 0x38
   51ce0:	ldr	r0, [sl], #4
   51ce4:	str	r0, [sp, #64]	; 0x40
   51ce8:	mov	r0, #0
   51cec:	str	r0, [sp, #68]	; 0x44
   51cf0:	b	51d24 <GetDataSlab+0x21da4>
   51cf4:	ldr	r0, [sp, #56]	; 0x38
   51cf8:	ldr	r0, [r0, r2]
   51cfc:	add	r8, r8, r0
   51d00:	add	r7, r0, r7
   51d04:	ldr	r2, [sp, #68]	; 0x44
   51d08:	ldr	r0, [sp, #76]	; 0x4c
   51d0c:	str	r6, [sp, #72]	; 0x48
   51d10:	add	r2, r1, r2
   51d14:	str	r2, [sp, #68]	; 0x44
   51d18:	cmp	r2, r0
   51d1c:	mov	r2, #0
   51d20:	bge	56c1c <GetDataSlab+0x26c9c>
   51d24:	ldr	r0, [sp, #64]	; 0x40
   51d28:	cmp	r1, #1
   51d2c:	add	r2, r0, r7
   51d30:	add	r7, r8, r0
   51d34:	blt	51d88 <GetDataSlab+0x21e08>
   51d38:	ldr	r0, [sp, #88]	; 0x58
   51d3c:	ldr	r1, [sp, #68]	; 0x44
   51d40:	ldr	ip, [fp, #8]
   51d44:	ldr	r6, [fp, #16]
   51d48:	mov	r3, #0
   51d4c:	add	r4, r0, r1, lsl #2
   51d50:	ldr	r0, [fp, #20]
   51d54:	ldrb	r1, [r7]
   51d58:	str	r1, [r4, r3, lsl #2]
   51d5c:	add	r3, r3, #1
   51d60:	ldr	r5, [r6]
   51d64:	ldr	r1, [r0]
   51d68:	add	r2, r5, r2
   51d6c:	add	r7, r7, r5
   51d70:	cmp	r3, r1
   51d74:	blt	51d54 <GetDataSlab+0x21dd4>
   51d78:	ldr	r0, [fp, #12]
   51d7c:	ldr	r6, [ip]
   51d80:	ldr	r0, [r0]
   51d84:	b	51d8c <GetDataSlab+0x21e0c>
   51d88:	ldr	r6, [sp, #72]	; 0x48
   51d8c:	mls	r3, r5, r1, r6
   51d90:	str	r0, [sp, #64]	; 0x40
   51d94:	sub	r3, r3, r0
   51d98:	ldr	r0, [fp, #24]
   51d9c:	add	r8, r7, r3
   51da0:	add	r7, r3, r2
   51da4:	cmp	r0, #2
   51da8:	blt	51d04 <GetDataSlab+0x21d84>
   51dac:	ldr	r9, [sp, #60]	; 0x3c
   51db0:	mov	r2, #0
   51db4:	b	51de0 <GetDataSlab+0x21e60>
   51db8:	sub	r0, fp, #176	; 0xb0
   51dbc:	ldr	r4, [sl, r2]
   51dc0:	sub	r3, r3, ip
   51dc4:	ldr	r0, [r0, r2]
   51dc8:	mla	r0, r4, r0, r3
   51dcc:	add	r7, r0, r7
   51dd0:	add	r8, r8, r0
   51dd4:	subs	r9, r9, #1
   51dd8:	add	r2, r2, #4
   51ddc:	beq	51d04 <GetDataSlab+0x21d84>
   51de0:	ldr	r3, [lr, r2]
   51de4:	ldr	r0, [sp, #84]	; 0x54
   51de8:	add	r3, r3, #1
   51dec:	str	r3, [lr, r2]
   51df0:	ldr	r0, [r0, r2]
   51df4:	sdiv	r4, r3, r0
   51df8:	mls	r0, r4, r0, r3
   51dfc:	cmp	r0, #0
   51e00:	bne	51cf4 <GetDataSlab+0x21d74>
   51e04:	mov	r0, #0
   51e08:	str	r0, [lr, r2]
   51e0c:	ldr	r0, [sp, #80]	; 0x50
   51e10:	ldr	r3, [r0, r2]
   51e14:	sdiv	r0, r7, r3
   51e18:	mls	ip, r0, r3, r7
   51e1c:	cmp	ip, #0
   51e20:	bne	51db8 <GetDataSlab+0x21e38>
   51e24:	ldr	r3, [sl, r2]
   51e28:	cmp	r3, #0
   51e2c:	beq	51dd4 <GetDataSlab+0x21e54>
   51e30:	sub	r0, fp, #176	; 0xb0
   51e34:	ldr	r0, [r0, r2]
   51e38:	mla	r7, r0, r3, r7
   51e3c:	mla	r8, r0, r3, r8
   51e40:	b	51dd4 <GetDataSlab+0x21e54>
   51e44:	ldr	r0, [sp, #76]	; 0x4c
   51e48:	ldr	r2, [fp, #20]
   51e4c:	cmp	r0, #1
   51e50:	sub	r0, fp, #176	; 0xb0
   51e54:	blt	56c18 <GetDataSlab+0x26c98>
   51e58:	orr	r0, r0, #4
   51e5c:	ldr	lr, [fp, #12]
   51e60:	mov	r3, r8
   51e64:	sub	r6, fp, #136	; 0x88
   51e68:	add	r2, r2, #4
   51e6c:	str	r0, [sp, #80]	; 0x50
   51e70:	ldr	r0, [fp, #24]
   51e74:	orr	r8, r6, #4
   51e78:	str	r2, [sp, #84]	; 0x54
   51e7c:	sub	r0, r0, #1
   51e80:	str	r0, [sp, #60]	; 0x3c
   51e84:	orr	r0, r3, #4
   51e88:	str	r0, [sp, #56]	; 0x38
   51e8c:	ldr	r0, [lr], #4
   51e90:	str	r0, [sp, #64]	; 0x40
   51e94:	mov	r0, #0
   51e98:	str	r0, [sp, #68]	; 0x44
   51e9c:	b	51ed0 <GetDataSlab+0x21f50>
   51ea0:	ldr	r0, [sp, #56]	; 0x38
   51ea4:	ldr	r0, [r0, r2]
   51ea8:	add	sl, sl, r0, lsl #1
   51eac:	add	r7, r0, r7
   51eb0:	ldr	r3, [sp, #68]	; 0x44
   51eb4:	ldr	r0, [sp, #76]	; 0x4c
   51eb8:	mov	r2, #0
   51ebc:	str	r6, [sp, #72]	; 0x48
   51ec0:	add	r3, r1, r3
   51ec4:	cmp	r3, r0
   51ec8:	str	r3, [sp, #68]	; 0x44
   51ecc:	bge	56c1c <GetDataSlab+0x26c9c>
   51ed0:	ldr	r0, [sp, #64]	; 0x40
   51ed4:	cmp	r1, #1
   51ed8:	add	r2, r0, r7
   51edc:	add	r7, sl, r0, lsl #1
   51ee0:	blt	51f34 <GetDataSlab+0x21fb4>
   51ee4:	ldr	r0, [sp, #88]	; 0x58
   51ee8:	ldr	r1, [sp, #68]	; 0x44
   51eec:	ldr	ip, [fp, #8]
   51ef0:	ldr	r6, [fp, #16]
   51ef4:	mov	r3, #0
   51ef8:	add	r4, r0, r1, lsl #2
   51efc:	ldr	r0, [fp, #20]
   51f00:	ldrsh	r1, [r7]
   51f04:	str	r1, [r4, r3, lsl #2]
   51f08:	add	r3, r3, #1
   51f0c:	ldr	r5, [r6]
   51f10:	ldr	r1, [r0]
   51f14:	add	r7, r7, r5, lsl #1
   51f18:	add	r2, r5, r2
   51f1c:	cmp	r3, r1
   51f20:	blt	51f00 <GetDataSlab+0x21f80>
   51f24:	ldr	r0, [fp, #12]
   51f28:	ldr	r6, [ip]
   51f2c:	ldr	r0, [r0]
   51f30:	b	51f38 <GetDataSlab+0x21fb8>
   51f34:	ldr	r6, [sp, #72]	; 0x48
   51f38:	mls	r3, r5, r1, r6
   51f3c:	str	r0, [sp, #64]	; 0x40
   51f40:	sub	r3, r3, r0
   51f44:	ldr	r0, [fp, #24]
   51f48:	add	sl, r7, r3, lsl #1
   51f4c:	add	r7, r3, r2
   51f50:	cmp	r0, #2
   51f54:	blt	51eb0 <GetDataSlab+0x21f30>
   51f58:	ldr	r9, [sp, #60]	; 0x3c
   51f5c:	mov	r2, #0
   51f60:	b	51f8c <GetDataSlab+0x2200c>
   51f64:	sub	r0, fp, #176	; 0xb0
   51f68:	ldr	r4, [lr, r2]
   51f6c:	sub	r3, r3, ip
   51f70:	ldr	r0, [r0, r2]
   51f74:	mla	r0, r4, r0, r3
   51f78:	add	r7, r0, r7
   51f7c:	add	sl, sl, r0, lsl #1
   51f80:	subs	r9, r9, #1
   51f84:	add	r2, r2, #4
   51f88:	beq	51eb0 <GetDataSlab+0x21f30>
   51f8c:	ldr	r3, [r8, r2]
   51f90:	ldr	r0, [sp, #84]	; 0x54
   51f94:	add	r3, r3, #1
   51f98:	str	r3, [r8, r2]
   51f9c:	ldr	r0, [r0, r2]
   51fa0:	sdiv	r4, r3, r0
   51fa4:	mls	r0, r4, r0, r3
   51fa8:	cmp	r0, #0
   51fac:	bne	51ea0 <GetDataSlab+0x21f20>
   51fb0:	mov	r0, #0
   51fb4:	str	r0, [r8, r2]
   51fb8:	ldr	r0, [sp, #80]	; 0x50
   51fbc:	ldr	r3, [r0, r2]
   51fc0:	sdiv	r0, r7, r3
   51fc4:	mls	ip, r0, r3, r7
   51fc8:	cmp	ip, #0
   51fcc:	bne	51f64 <GetDataSlab+0x21fe4>
   51fd0:	ldr	r3, [lr, r2]
   51fd4:	cmp	r3, #0
   51fd8:	beq	51f80 <GetDataSlab+0x22000>
   51fdc:	sub	r0, fp, #176	; 0xb0
   51fe0:	ldr	r0, [r0, r2]
   51fe4:	mla	r7, r0, r3, r7
   51fe8:	mul	r0, r0, r3
   51fec:	b	51f7c <GetDataSlab+0x21ffc>
   51ff0:	ldr	r0, [sp, #76]	; 0x4c
   51ff4:	ldr	r2, [fp, #20]
   51ff8:	cmp	r0, #1
   51ffc:	sub	r0, fp, #176	; 0xb0
   52000:	blt	56c18 <GetDataSlab+0x26c98>
   52004:	orr	r0, r0, #4
   52008:	ldr	lr, [fp, #12]
   5200c:	mov	r3, r8
   52010:	sub	r6, fp, #136	; 0x88
   52014:	add	r2, r2, #4
   52018:	str	r0, [sp, #80]	; 0x50
   5201c:	ldr	r0, [fp, #24]
   52020:	orr	r8, r6, #4
   52024:	str	r2, [sp, #84]	; 0x54
   52028:	sub	r0, r0, #1
   5202c:	str	r0, [sp, #60]	; 0x3c
   52030:	orr	r0, r3, #4
   52034:	str	r0, [sp, #56]	; 0x38
   52038:	ldr	r0, [lr], #4
   5203c:	str	r0, [sp, #64]	; 0x40
   52040:	mov	r0, #0
   52044:	str	r0, [sp, #68]	; 0x44
   52048:	b	5207c <GetDataSlab+0x220fc>
   5204c:	ldr	r0, [sp, #56]	; 0x38
   52050:	ldr	r0, [r0, r2]
   52054:	add	sl, sl, r0, lsl #1
   52058:	add	r7, r0, r7
   5205c:	ldr	r2, [sp, #68]	; 0x44
   52060:	ldr	r0, [sp, #76]	; 0x4c
   52064:	str	r6, [sp, #72]	; 0x48
   52068:	add	r2, r1, r2
   5206c:	str	r2, [sp, #68]	; 0x44
   52070:	cmp	r2, r0
   52074:	mov	r2, #0
   52078:	bge	56c1c <GetDataSlab+0x26c9c>
   5207c:	ldr	r0, [sp, #64]	; 0x40
   52080:	cmp	r1, #1
   52084:	add	r2, r0, r7
   52088:	add	r7, sl, r0, lsl #1
   5208c:	blt	520e0 <GetDataSlab+0x22160>
   52090:	ldr	r0, [sp, #88]	; 0x58
   52094:	ldr	r1, [sp, #68]	; 0x44
   52098:	ldr	ip, [fp, #8]
   5209c:	ldr	r6, [fp, #16]
   520a0:	mov	r3, #0
   520a4:	add	r4, r0, r1, lsl #2
   520a8:	ldr	r0, [fp, #20]
   520ac:	ldrh	r1, [r7]
   520b0:	str	r1, [r4, r3, lsl #2]
   520b4:	add	r3, r3, #1
   520b8:	ldr	r5, [r6]
   520bc:	ldr	r1, [r0]
   520c0:	add	r7, r7, r5, lsl #1
   520c4:	add	r2, r5, r2
   520c8:	cmp	r3, r1
   520cc:	blt	520ac <GetDataSlab+0x2212c>
   520d0:	ldr	r0, [fp, #12]
   520d4:	ldr	r6, [ip]
   520d8:	ldr	r0, [r0]
   520dc:	b	520e4 <GetDataSlab+0x22164>
   520e0:	ldr	r6, [sp, #72]	; 0x48
   520e4:	mls	r3, r5, r1, r6
   520e8:	str	r0, [sp, #64]	; 0x40
   520ec:	sub	r3, r3, r0
   520f0:	ldr	r0, [fp, #24]
   520f4:	add	sl, r7, r3, lsl #1
   520f8:	add	r7, r3, r2
   520fc:	cmp	r0, #2
   52100:	blt	5205c <GetDataSlab+0x220dc>
   52104:	ldr	r9, [sp, #60]	; 0x3c
   52108:	mov	r2, #0
   5210c:	b	52138 <GetDataSlab+0x221b8>
   52110:	sub	r0, fp, #176	; 0xb0
   52114:	ldr	r4, [lr, r2]
   52118:	sub	r3, r3, ip
   5211c:	ldr	r0, [r0, r2]
   52120:	mla	r0, r4, r0, r3
   52124:	add	r7, r0, r7
   52128:	add	sl, sl, r0, lsl #1
   5212c:	subs	r9, r9, #1
   52130:	add	r2, r2, #4
   52134:	beq	5205c <GetDataSlab+0x220dc>
   52138:	ldr	r3, [r8, r2]
   5213c:	ldr	r0, [sp, #84]	; 0x54
   52140:	add	r3, r3, #1
   52144:	str	r3, [r8, r2]
   52148:	ldr	r0, [r0, r2]
   5214c:	sdiv	r4, r3, r0
   52150:	mls	r0, r4, r0, r3
   52154:	cmp	r0, #0
   52158:	bne	5204c <GetDataSlab+0x220cc>
   5215c:	mov	r0, #0
   52160:	str	r0, [r8, r2]
   52164:	ldr	r0, [sp, #80]	; 0x50
   52168:	ldr	r3, [r0, r2]
   5216c:	sdiv	r0, r7, r3
   52170:	mls	ip, r0, r3, r7
   52174:	cmp	ip, #0
   52178:	bne	52110 <GetDataSlab+0x22190>
   5217c:	ldr	r3, [lr, r2]
   52180:	cmp	r3, #0
   52184:	beq	5212c <GetDataSlab+0x221ac>
   52188:	sub	r0, fp, #176	; 0xb0
   5218c:	ldr	r0, [r0, r2]
   52190:	mla	r7, r0, r3, r7
   52194:	mul	r0, r0, r3
   52198:	b	52128 <GetDataSlab+0x221a8>
   5219c:	ldr	r0, [sp, #76]	; 0x4c
   521a0:	ldr	r2, [fp, #20]
   521a4:	cmp	r0, #1
   521a8:	sub	r0, fp, #176	; 0xb0
   521ac:	blt	56c18 <GetDataSlab+0x26c98>
   521b0:	orr	r0, r0, #4
   521b4:	ldr	sl, [fp, #12]
   521b8:	sub	r3, fp, #136	; 0x88
   521bc:	add	r2, r2, #4
   521c0:	str	r0, [sp, #80]	; 0x50
   521c4:	ldr	r0, [fp, #24]
   521c8:	orr	lr, r3, #4
   521cc:	str	r2, [sp, #84]	; 0x54
   521d0:	sub	r0, r0, #1
   521d4:	str	r0, [sp, #60]	; 0x3c
   521d8:	sub	r0, fp, #96	; 0x60
   521dc:	orr	r0, r0, #4
   521e0:	str	r0, [sp, #56]	; 0x38
   521e4:	ldr	r0, [sl], #4
   521e8:	str	r0, [sp, #64]	; 0x40
   521ec:	mov	r0, #0
   521f0:	str	r0, [sp, #68]	; 0x44
   521f4:	b	52228 <GetDataSlab+0x222a8>
   521f8:	ldr	r0, [sp, #56]	; 0x38
   521fc:	ldr	r0, [r0, r2]
   52200:	add	r8, r8, r0, lsl #2
   52204:	add	r7, r0, r7
   52208:	ldr	r3, [sp, #68]	; 0x44
   5220c:	ldr	r0, [sp, #76]	; 0x4c
   52210:	mov	r2, #0
   52214:	str	r6, [sp, #72]	; 0x48
   52218:	add	r3, r1, r3
   5221c:	cmp	r3, r0
   52220:	str	r3, [sp, #68]	; 0x44
   52224:	bge	56c1c <GetDataSlab+0x26c9c>
   52228:	ldr	r0, [sp, #64]	; 0x40
   5222c:	cmp	r1, #1
   52230:	add	r2, r0, r7
   52234:	add	r7, r8, r0, lsl #2
   52238:	blt	5228c <GetDataSlab+0x2230c>
   5223c:	ldr	r0, [sp, #88]	; 0x58
   52240:	ldr	r1, [sp, #68]	; 0x44
   52244:	ldr	ip, [fp, #8]
   52248:	ldr	r6, [fp, #16]
   5224c:	mov	r3, #0
   52250:	add	r4, r0, r1, lsl #2
   52254:	ldr	r0, [fp, #20]
   52258:	ldr	r1, [r7]
   5225c:	str	r1, [r4, r3, lsl #2]
   52260:	add	r3, r3, #1
   52264:	ldr	r5, [r6]
   52268:	ldr	r1, [r0]
   5226c:	add	r7, r7, r5, lsl #2
   52270:	add	r2, r5, r2
   52274:	cmp	r3, r1
   52278:	blt	52258 <GetDataSlab+0x222d8>
   5227c:	ldr	r0, [fp, #12]
   52280:	ldr	r6, [ip]
   52284:	ldr	r0, [r0]
   52288:	b	52290 <GetDataSlab+0x22310>
   5228c:	ldr	r6, [sp, #72]	; 0x48
   52290:	mls	r3, r5, r1, r6
   52294:	str	r0, [sp, #64]	; 0x40
   52298:	sub	r3, r3, r0
   5229c:	ldr	r0, [fp, #24]
   522a0:	add	r8, r7, r3, lsl #2
   522a4:	add	r7, r3, r2
   522a8:	cmp	r0, #2
   522ac:	blt	52208 <GetDataSlab+0x22288>
   522b0:	ldr	r9, [sp, #60]	; 0x3c
   522b4:	mov	r2, #0
   522b8:	b	522e4 <GetDataSlab+0x22364>
   522bc:	sub	r0, fp, #176	; 0xb0
   522c0:	ldr	r4, [sl, r2]
   522c4:	sub	r3, r3, ip
   522c8:	ldr	r0, [r0, r2]
   522cc:	mla	r0, r4, r0, r3
   522d0:	add	r7, r0, r7
   522d4:	add	r8, r8, r0, lsl #2
   522d8:	subs	r9, r9, #1
   522dc:	add	r2, r2, #4
   522e0:	beq	52208 <GetDataSlab+0x22288>
   522e4:	ldr	r3, [lr, r2]
   522e8:	ldr	r0, [sp, #84]	; 0x54
   522ec:	add	r3, r3, #1
   522f0:	str	r3, [lr, r2]
   522f4:	ldr	r0, [r0, r2]
   522f8:	sdiv	r4, r3, r0
   522fc:	mls	r0, r4, r0, r3
   52300:	cmp	r0, #0
   52304:	bne	521f8 <GetDataSlab+0x22278>
   52308:	mov	r0, #0
   5230c:	str	r0, [lr, r2]
   52310:	ldr	r0, [sp, #80]	; 0x50
   52314:	ldr	r3, [r0, r2]
   52318:	sdiv	r0, r7, r3
   5231c:	mls	ip, r0, r3, r7
   52320:	cmp	ip, #0
   52324:	bne	522bc <GetDataSlab+0x2233c>
   52328:	ldr	r3, [sl, r2]
   5232c:	cmp	r3, #0
   52330:	beq	522d8 <GetDataSlab+0x22358>
   52334:	sub	r0, fp, #176	; 0xb0
   52338:	ldr	r0, [r0, r2]
   5233c:	mla	r7, r0, r3, r7
   52340:	mul	r0, r0, r3
   52344:	b	522d4 <GetDataSlab+0x22354>
   52348:	ldr	r0, [sp, #76]	; 0x4c
   5234c:	ldr	r2, [fp, #20]
   52350:	cmp	r0, #1
   52354:	sub	r0, fp, #176	; 0xb0
   52358:	blt	56c18 <GetDataSlab+0x26c98>
   5235c:	orr	r0, r0, #4
   52360:	ldr	sl, [fp, #12]
   52364:	sub	r3, fp, #136	; 0x88
   52368:	add	r2, r2, #4
   5236c:	str	r0, [sp, #80]	; 0x50
   52370:	ldr	r0, [fp, #24]
   52374:	orr	lr, r3, #4
   52378:	str	r2, [sp, #84]	; 0x54
   5237c:	sub	r0, r0, #1
   52380:	str	r0, [sp, #60]	; 0x3c
   52384:	sub	r0, fp, #96	; 0x60
   52388:	orr	r0, r0, #4
   5238c:	str	r0, [sp, #56]	; 0x38
   52390:	ldr	r0, [sl], #4
   52394:	str	r0, [sp, #64]	; 0x40
   52398:	mov	r0, #0
   5239c:	str	r0, [sp, #68]	; 0x44
   523a0:	b	523d4 <GetDataSlab+0x22454>
   523a4:	ldr	r0, [sp, #56]	; 0x38
   523a8:	ldr	r0, [r0, r2]
   523ac:	add	r8, r8, r0, lsl #2
   523b0:	add	r7, r0, r7
   523b4:	ldr	r3, [sp, #68]	; 0x44
   523b8:	ldr	r0, [sp, #76]	; 0x4c
   523bc:	mov	r2, #0
   523c0:	str	r6, [sp, #72]	; 0x48
   523c4:	add	r3, r1, r3
   523c8:	cmp	r3, r0
   523cc:	str	r3, [sp, #68]	; 0x44
   523d0:	bge	56c1c <GetDataSlab+0x26c9c>
   523d4:	ldr	r0, [sp, #64]	; 0x40
   523d8:	cmp	r1, #1
   523dc:	add	r2, r0, r7
   523e0:	add	r7, r8, r0, lsl #2
   523e4:	blt	52438 <GetDataSlab+0x224b8>
   523e8:	ldr	r0, [sp, #88]	; 0x58
   523ec:	ldr	r1, [sp, #68]	; 0x44
   523f0:	ldr	ip, [fp, #8]
   523f4:	ldr	r6, [fp, #16]
   523f8:	mov	r3, #0
   523fc:	add	r4, r0, r1, lsl #2
   52400:	ldr	r0, [fp, #20]
   52404:	ldr	r1, [r7]
   52408:	str	r1, [r4, r3, lsl #2]
   5240c:	add	r3, r3, #1
   52410:	ldr	r5, [r6]
   52414:	ldr	r1, [r0]
   52418:	add	r7, r7, r5, lsl #2
   5241c:	add	r2, r5, r2
   52420:	cmp	r3, r1
   52424:	blt	52404 <GetDataSlab+0x22484>
   52428:	ldr	r0, [fp, #12]
   5242c:	ldr	r6, [ip]
   52430:	ldr	r0, [r0]
   52434:	b	5243c <GetDataSlab+0x224bc>
   52438:	ldr	r6, [sp, #72]	; 0x48
   5243c:	mls	r3, r5, r1, r6
   52440:	str	r0, [sp, #64]	; 0x40
   52444:	sub	r3, r3, r0
   52448:	ldr	r0, [fp, #24]
   5244c:	add	r8, r7, r3, lsl #2
   52450:	add	r7, r3, r2
   52454:	cmp	r0, #2
   52458:	blt	523b4 <GetDataSlab+0x22434>
   5245c:	ldr	r9, [sp, #60]	; 0x3c
   52460:	mov	r2, #0
   52464:	b	52490 <GetDataSlab+0x22510>
   52468:	sub	r0, fp, #176	; 0xb0
   5246c:	ldr	r4, [sl, r2]
   52470:	sub	r3, r3, ip
   52474:	ldr	r0, [r0, r2]
   52478:	mla	r0, r4, r0, r3
   5247c:	add	r7, r0, r7
   52480:	add	r8, r8, r0, lsl #2
   52484:	subs	r9, r9, #1
   52488:	add	r2, r2, #4
   5248c:	beq	523b4 <GetDataSlab+0x22434>
   52490:	ldr	r3, [lr, r2]
   52494:	ldr	r0, [sp, #84]	; 0x54
   52498:	add	r3, r3, #1
   5249c:	str	r3, [lr, r2]
   524a0:	ldr	r0, [r0, r2]
   524a4:	sdiv	r4, r3, r0
   524a8:	mls	r0, r4, r0, r3
   524ac:	cmp	r0, #0
   524b0:	bne	523a4 <GetDataSlab+0x22424>
   524b4:	mov	r0, #0
   524b8:	str	r0, [lr, r2]
   524bc:	ldr	r0, [sp, #80]	; 0x50
   524c0:	ldr	r3, [r0, r2]
   524c4:	sdiv	r0, r7, r3
   524c8:	mls	ip, r0, r3, r7
   524cc:	cmp	ip, #0
   524d0:	bne	52468 <GetDataSlab+0x224e8>
   524d4:	ldr	r3, [sl, r2]
   524d8:	cmp	r3, #0
   524dc:	beq	52484 <GetDataSlab+0x22504>
   524e0:	sub	r0, fp, #176	; 0xb0
   524e4:	ldr	r0, [r0, r2]
   524e8:	mla	r7, r0, r3, r7
   524ec:	mul	r0, r0, r3
   524f0:	b	52480 <GetDataSlab+0x22500>
   524f4:	ldr	r0, [sp, #76]	; 0x4c
   524f8:	ldr	r2, [fp, #20]
   524fc:	cmp	r0, #1
   52500:	sub	r0, fp, #176	; 0xb0
   52504:	blt	56c18 <GetDataSlab+0x26c98>
   52508:	orr	r0, r0, #4
   5250c:	ldr	lr, [fp, #12]
   52510:	mov	r3, r8
   52514:	sub	r6, fp, #136	; 0x88
   52518:	add	r2, r2, #4
   5251c:	str	r0, [sp, #80]	; 0x50
   52520:	ldr	r0, [fp, #24]
   52524:	orr	r8, r6, #4
   52528:	str	r2, [sp, #84]	; 0x54
   5252c:	sub	r0, r0, #1
   52530:	str	r0, [sp, #60]	; 0x3c
   52534:	orr	r0, r3, #4
   52538:	str	r0, [sp, #56]	; 0x38
   5253c:	ldr	r0, [lr], #4
   52540:	str	r0, [sp, #64]	; 0x40
   52544:	mov	r0, #0
   52548:	str	r0, [sp, #68]	; 0x44
   5254c:	b	52580 <GetDataSlab+0x22600>
   52550:	ldr	r0, [sp, #56]	; 0x38
   52554:	ldr	r0, [r0, r2]
   52558:	add	sl, sl, r0, lsl #2
   5255c:	add	r7, r0, r7
   52560:	ldr	r3, [sp, #68]	; 0x44
   52564:	ldr	r0, [sp, #76]	; 0x4c
   52568:	mov	r2, #0
   5256c:	str	r6, [sp, #72]	; 0x48
   52570:	add	r3, r1, r3
   52574:	cmp	r3, r0
   52578:	str	r3, [sp, #68]	; 0x44
   5257c:	bge	56c1c <GetDataSlab+0x26c9c>
   52580:	ldr	r0, [sp, #64]	; 0x40
   52584:	cmp	r1, #1
   52588:	add	r2, r0, r7
   5258c:	add	r7, sl, r0, lsl #2
   52590:	blt	525ec <GetDataSlab+0x2266c>
   52594:	ldr	r0, [sp, #88]	; 0x58
   52598:	ldr	r1, [sp, #68]	; 0x44
   5259c:	ldr	ip, [fp, #8]
   525a0:	ldr	r6, [fp, #16]
   525a4:	mov	r3, #0
   525a8:	add	r4, r0, r1, lsl #2
   525ac:	ldr	r0, [fp, #20]
   525b0:	vldr	s0, [r7]
   525b4:	vcvt.u32.f32	s0, s0
   525b8:	vmov	r1, s0
   525bc:	str	r1, [r4, r3, lsl #2]
   525c0:	add	r3, r3, #1
   525c4:	ldr	r5, [r6]
   525c8:	ldr	r1, [r0]
   525cc:	add	r7, r7, r5, lsl #2
   525d0:	add	r2, r5, r2
   525d4:	cmp	r3, r1
   525d8:	blt	525b0 <GetDataSlab+0x22630>
   525dc:	ldr	r0, [fp, #12]
   525e0:	ldr	r6, [ip]
   525e4:	ldr	r0, [r0]
   525e8:	b	525f0 <GetDataSlab+0x22670>
   525ec:	ldr	r6, [sp, #72]	; 0x48
   525f0:	mls	r3, r5, r1, r6
   525f4:	str	r0, [sp, #64]	; 0x40
   525f8:	sub	r3, r3, r0
   525fc:	ldr	r0, [fp, #24]
   52600:	add	sl, r7, r3, lsl #2
   52604:	add	r7, r3, r2
   52608:	cmp	r0, #2
   5260c:	blt	52560 <GetDataSlab+0x225e0>
   52610:	ldr	r9, [sp, #60]	; 0x3c
   52614:	mov	r2, #0
   52618:	b	52644 <GetDataSlab+0x226c4>
   5261c:	sub	r0, fp, #176	; 0xb0
   52620:	ldr	r4, [lr, r2]
   52624:	sub	r3, r3, ip
   52628:	ldr	r0, [r0, r2]
   5262c:	mla	r0, r4, r0, r3
   52630:	add	r7, r0, r7
   52634:	add	sl, sl, r0, lsl #2
   52638:	subs	r9, r9, #1
   5263c:	add	r2, r2, #4
   52640:	beq	52560 <GetDataSlab+0x225e0>
   52644:	ldr	r3, [r8, r2]
   52648:	ldr	r0, [sp, #84]	; 0x54
   5264c:	add	r3, r3, #1
   52650:	str	r3, [r8, r2]
   52654:	ldr	r0, [r0, r2]
   52658:	sdiv	r4, r3, r0
   5265c:	mls	r0, r4, r0, r3
   52660:	cmp	r0, #0
   52664:	bne	52550 <GetDataSlab+0x225d0>
   52668:	mov	r0, #0
   5266c:	str	r0, [r8, r2]
   52670:	ldr	r0, [sp, #80]	; 0x50
   52674:	ldr	r3, [r0, r2]
   52678:	sdiv	r0, r7, r3
   5267c:	mls	ip, r0, r3, r7
   52680:	cmp	ip, #0
   52684:	bne	5261c <GetDataSlab+0x2269c>
   52688:	ldr	r3, [lr, r2]
   5268c:	cmp	r3, #0
   52690:	beq	52638 <GetDataSlab+0x226b8>
   52694:	sub	r0, fp, #176	; 0xb0
   52698:	ldr	r0, [r0, r2]
   5269c:	mla	r7, r0, r3, r7
   526a0:	mul	r0, r0, r3
   526a4:	b	52634 <GetDataSlab+0x226b4>
   526a8:	ldr	r0, [sp, #76]	; 0x4c
   526ac:	ldr	r2, [fp, #20]
   526b0:	cmp	r0, #1
   526b4:	sub	r0, fp, #176	; 0xb0
   526b8:	blt	56c18 <GetDataSlab+0x26c98>
   526bc:	orr	r0, r0, #4
   526c0:	ldr	lr, [fp, #12]
   526c4:	mov	r3, r8
   526c8:	sub	r6, fp, #136	; 0x88
   526cc:	add	r2, r2, #4
   526d0:	str	r0, [sp, #80]	; 0x50
   526d4:	ldr	r0, [fp, #24]
   526d8:	orr	r8, r6, #4
   526dc:	str	r2, [sp, #84]	; 0x54
   526e0:	sub	r0, r0, #1
   526e4:	str	r0, [sp, #60]	; 0x3c
   526e8:	orr	r0, r3, #4
   526ec:	str	r0, [sp, #56]	; 0x38
   526f0:	ldr	r0, [lr], #4
   526f4:	str	r0, [sp, #64]	; 0x40
   526f8:	mov	r0, #0
   526fc:	str	r0, [sp, #68]	; 0x44
   52700:	b	52734 <GetDataSlab+0x227b4>
   52704:	ldr	r0, [sp, #56]	; 0x38
   52708:	ldr	r0, [r0, r2]
   5270c:	add	sl, sl, r0, lsl #3
   52710:	add	r7, r0, r7
   52714:	ldr	r3, [sp, #68]	; 0x44
   52718:	ldr	r0, [sp, #76]	; 0x4c
   5271c:	mov	r2, #0
   52720:	str	r6, [sp, #72]	; 0x48
   52724:	add	r3, r1, r3
   52728:	cmp	r3, r0
   5272c:	str	r3, [sp, #68]	; 0x44
   52730:	bge	56c1c <GetDataSlab+0x26c9c>
   52734:	ldr	r0, [sp, #64]	; 0x40
   52738:	cmp	r1, #1
   5273c:	add	r2, r0, r7
   52740:	add	r7, sl, r0, lsl #3
   52744:	blt	527a0 <GetDataSlab+0x22820>
   52748:	ldr	r0, [sp, #88]	; 0x58
   5274c:	ldr	r1, [sp, #68]	; 0x44
   52750:	ldr	ip, [fp, #8]
   52754:	ldr	r6, [fp, #16]
   52758:	mov	r3, #0
   5275c:	add	r4, r0, r1, lsl #2
   52760:	ldr	r0, [fp, #20]
   52764:	vldr	d16, [r7]
   52768:	vcvt.u32.f64	s0, d16
   5276c:	vmov	r1, s0
   52770:	str	r1, [r4, r3, lsl #2]
   52774:	add	r3, r3, #1
   52778:	ldr	r5, [r6]
   5277c:	ldr	r1, [r0]
   52780:	add	r7, r7, r5, lsl #3
   52784:	add	r2, r5, r2
   52788:	cmp	r3, r1
   5278c:	blt	52764 <GetDataSlab+0x227e4>
   52790:	ldr	r0, [fp, #12]
   52794:	ldr	r6, [ip]
   52798:	ldr	r0, [r0]
   5279c:	b	527a4 <GetDataSlab+0x22824>
   527a0:	ldr	r6, [sp, #72]	; 0x48
   527a4:	mls	r3, r5, r1, r6
   527a8:	str	r0, [sp, #64]	; 0x40
   527ac:	sub	r3, r3, r0
   527b0:	ldr	r0, [fp, #24]
   527b4:	add	sl, r7, r3, lsl #3
   527b8:	add	r7, r3, r2
   527bc:	cmp	r0, #2
   527c0:	blt	52714 <GetDataSlab+0x22794>
   527c4:	ldr	r9, [sp, #60]	; 0x3c
   527c8:	mov	r2, #0
   527cc:	b	527f8 <GetDataSlab+0x22878>
   527d0:	sub	r0, fp, #176	; 0xb0
   527d4:	ldr	r4, [lr, r2]
   527d8:	sub	r3, r3, ip
   527dc:	ldr	r0, [r0, r2]
   527e0:	mla	r0, r4, r0, r3
   527e4:	add	r7, r0, r7
   527e8:	add	sl, sl, r0, lsl #3
   527ec:	subs	r9, r9, #1
   527f0:	add	r2, r2, #4
   527f4:	beq	52714 <GetDataSlab+0x22794>
   527f8:	ldr	r3, [r8, r2]
   527fc:	ldr	r0, [sp, #84]	; 0x54
   52800:	add	r3, r3, #1
   52804:	str	r3, [r8, r2]
   52808:	ldr	r0, [r0, r2]
   5280c:	sdiv	r4, r3, r0
   52810:	mls	r0, r4, r0, r3
   52814:	cmp	r0, #0
   52818:	bne	52704 <GetDataSlab+0x22784>
   5281c:	mov	r0, #0
   52820:	str	r0, [r8, r2]
   52824:	ldr	r0, [sp, #80]	; 0x50
   52828:	ldr	r3, [r0, r2]
   5282c:	sdiv	r0, r7, r3
   52830:	mls	ip, r0, r3, r7
   52834:	cmp	ip, #0
   52838:	bne	527d0 <GetDataSlab+0x22850>
   5283c:	ldr	r3, [lr, r2]
   52840:	cmp	r3, #0
   52844:	beq	527ec <GetDataSlab+0x2286c>
   52848:	sub	r0, fp, #176	; 0xb0
   5284c:	ldr	r0, [r0, r2]
   52850:	mla	r7, r0, r3, r7
   52854:	mul	r0, r0, r3
   52858:	b	527e8 <GetDataSlab+0x22868>
   5285c:	ldr	r0, [sp, #68]	; 0x44
   52860:	ldr	r6, [fp, #16]
   52864:	cmp	r0, #1
   52868:	sub	r0, fp, #176	; 0xb0
   5286c:	blt	529fc <GetDataSlab+0x22a7c>
   52870:	ldr	ip, [fp, #12]
   52874:	orr	r0, r0, #4
   52878:	sub	r2, fp, #136	; 0x88
   5287c:	mov	r5, #0
   52880:	str	r0, [sp, #72]	; 0x48
   52884:	ldr	r0, [fp, #24]
   52888:	orr	r8, r2, #4
   5288c:	ldr	r2, [fp, #20]
   52890:	ldr	r4, [ip], #4
   52894:	sub	r0, r0, #1
   52898:	add	r2, r2, #4
   5289c:	str	r0, [sp, #52]	; 0x34
   528a0:	sub	r0, fp, #96	; 0x60
   528a4:	str	r2, [sp, #84]	; 0x54
   528a8:	orr	r0, r0, #4
   528ac:	str	r0, [sp, #48]	; 0x30
   528b0:	b	528e4 <GetDataSlab+0x22964>
   528b4:	ldr	r0, [sp, #48]	; 0x30
   528b8:	ldr	r0, [r0, r2]
   528bc:	add	r9, r9, r0, lsl #3
   528c0:	add	r3, r0, r3
   528c4:	ldr	r5, [sp, #60]	; 0x3c
   528c8:	ldr	r0, [sp, #68]	; 0x44
   528cc:	str	r6, [sp, #64]	; 0x40
   528d0:	ldr	r6, [fp, #16]
   528d4:	ldr	r4, [sp, #56]	; 0x38
   528d8:	add	r5, r1, r5
   528dc:	cmp	r5, r0
   528e0:	bge	529fc <GetDataSlab+0x22a7c>
   528e4:	add	r2, r4, r3
   528e8:	add	r3, r9, r4, lsl #3
   528ec:	cmp	r1, #1
   528f0:	str	r5, [sp, #60]	; 0x3c
   528f4:	blt	52940 <GetDataSlab+0x229c0>
   528f8:	ldr	r0, [sp, #88]	; 0x58
   528fc:	mov	r4, #0
   52900:	add	r5, r0, r5, lsl #2
   52904:	ldr	r0, [fp, #20]
   52908:	ldr	r1, [r3]
   5290c:	str	r1, [r5, r4, lsl #2]
   52910:	add	r4, r4, #1
   52914:	ldr	r7, [r6]
   52918:	ldr	r1, [r0]
   5291c:	add	r3, r3, r7, lsl #3
   52920:	add	r2, r7, r2
   52924:	cmp	r4, r1
   52928:	blt	52908 <GetDataSlab+0x22988>
   5292c:	ldr	r0, [fp, #12]
   52930:	ldr	r4, [r0]
   52934:	ldr	r0, [fp, #8]
   52938:	ldr	r6, [r0]
   5293c:	b	52944 <GetDataSlab+0x229c4>
   52940:	ldr	r6, [sp, #64]	; 0x40
   52944:	mls	r5, r7, r1, r6
   52948:	ldr	r0, [fp, #24]
   5294c:	str	r4, [sp, #56]	; 0x38
   52950:	sub	r4, r5, r4
   52954:	add	r9, r3, r4, lsl #3
   52958:	add	r3, r4, r2
   5295c:	cmp	r0, #2
   52960:	blt	528c4 <GetDataSlab+0x22944>
   52964:	ldr	sl, [sp, #52]	; 0x34
   52968:	mov	r2, #0
   5296c:	b	52998 <GetDataSlab+0x22a18>
   52970:	sub	r0, fp, #176	; 0xb0
   52974:	ldr	r5, [ip, r2]
   52978:	sub	r4, r4, lr
   5297c:	ldr	r0, [r0, r2]
   52980:	mla	r0, r5, r0, r4
   52984:	add	r3, r0, r3
   52988:	add	r9, r9, r0, lsl #3
   5298c:	subs	sl, sl, #1
   52990:	add	r2, r2, #4
   52994:	beq	528c4 <GetDataSlab+0x22944>
   52998:	ldr	r4, [r8, r2]
   5299c:	ldr	r0, [sp, #84]	; 0x54
   529a0:	add	r4, r4, #1
   529a4:	str	r4, [r8, r2]
   529a8:	ldr	r0, [r0, r2]
   529ac:	sdiv	r5, r4, r0
   529b0:	mls	r0, r5, r0, r4
   529b4:	cmp	r0, #0
   529b8:	bne	528b4 <GetDataSlab+0x22934>
   529bc:	mov	r0, #0
   529c0:	str	r0, [r8, r2]
   529c4:	ldr	r0, [sp, #72]	; 0x48
   529c8:	ldr	r4, [r0, r2]
   529cc:	sdiv	r0, r3, r4
   529d0:	mls	lr, r0, r4, r3
   529d4:	cmp	lr, #0
   529d8:	bne	52970 <GetDataSlab+0x229f0>
   529dc:	ldr	r4, [ip, r2]
   529e0:	cmp	r4, #0
   529e4:	beq	5298c <GetDataSlab+0x22a0c>
   529e8:	sub	r0, fp, #176	; 0xb0
   529ec:	ldr	r0, [r0, r2]
   529f0:	mla	r3, r0, r4, r3
   529f4:	mul	r0, r0, r4
   529f8:	b	52988 <GetDataSlab+0x22a08>
   529fc:	ldr	r7, [sp, #76]	; 0x4c
   52a00:	mov	r2, #0
   52a04:	cmp	r7, #13
   52a08:	bne	56c1c <GetDataSlab+0x26c9c>
   52a0c:	ldr	r0, [fp, #16]
   52a10:	mov	r7, #0
   52a14:	sub	r9, fp, #176	; 0xb0
   52a18:	sub	r8, fp, #96	; 0x60
   52a1c:	ldr	r5, [r0]
   52a20:	sub	r0, r5, #1
   52a24:	str	r0, [fp, #-96]	; 0xffffffa0
   52a28:	ldr	r0, [fp, #8]
   52a2c:	ldr	r0, [r0]
   52a30:	str	r0, [sp, #72]	; 0x48
   52a34:	str	r0, [fp, #-176]	; 0xffffff50
   52a38:	ldr	r0, [fp, #20]
   52a3c:	ldr	r1, [r0]
   52a40:	ldr	r0, [fp, #24]
   52a44:	cmp	r0, #2
   52a48:	mov	r0, r1
   52a4c:	str	r1, [sp, #76]	; 0x4c
   52a50:	blt	52bc4 <GetDataSlab+0x22c44>
   52a54:	ldr	r0, [fp, #8]
   52a58:	ldr	r4, [sp, #72]	; 0x48
   52a5c:	mov	r3, #0
   52a60:	mvn	ip, #15
   52a64:	mov	r7, #0
   52a68:	str	r1, [sp, #76]	; 0x4c
   52a6c:	str	r3, [sp, #84]	; 0x54
   52a70:	mov	r3, r1
   52a74:	mov	r2, r0
   52a78:	sub	r0, r0, #4
   52a7c:	mov	r6, r4
   52a80:	sub	sl, r2, #12
   52a84:	mov	r2, #1
   52a88:	b	52adc <GetDataSlab+0x22b5c>
   52a8c:	sub	r8, fp, #96	; 0x60
   52a90:	ldr	r3, [fp, #12]
   52a94:	sub	r9, fp, #176	; 0xb0
   52a98:	str	lr, [r8, r2, lsl #2]
   52a9c:	ldr	r6, [sp, #68]	; 0x44
   52aa0:	add	sl, sl, #4
   52aa4:	str	r4, [r9, r2, lsl #2]
   52aa8:	ldr	r3, [r3, r2, lsl #2]
   52aac:	mla	r7, r3, r6, r7
   52ab0:	ldr	r3, [fp, #20]
   52ab4:	ldr	r6, [sp, #76]	; 0x4c
   52ab8:	ldr	r3, [r3, r2, lsl #2]
   52abc:	add	r2, r2, #1
   52ac0:	mul	r6, r3, r6
   52ac4:	ldr	r3, [fp, #24]
   52ac8:	str	r6, [sp, #76]	; 0x4c
   52acc:	mov	r6, r4
   52ad0:	ldr	r4, [sp, #64]	; 0x40
   52ad4:	cmp	r2, r3
   52ad8:	beq	52bc4 <GetDataSlab+0x22c44>
   52adc:	ldr	r3, [fp, #16]
   52ae0:	str	r6, [sp, #68]	; 0x44
   52ae4:	ldr	r3, [r3, r2, lsl #2]
   52ae8:	str	r4, [r9, r2, lsl #2]
   52aec:	ldr	r9, [sp, #84]	; 0x54
   52af0:	sub	lr, r3, #1
   52af4:	ldr	r3, [fp, #8]
   52af8:	add	r9, r9, #1
   52afc:	str	lr, [r8, r2, lsl #2]
   52b00:	cmp	r9, #4
   52b04:	str	r9, [sp, #84]	; 0x54
   52b08:	ldr	r6, [r3, r2, lsl #2]
   52b0c:	str	r6, [sp, #64]	; 0x40
   52b10:	bcs	52b1c <GetDataSlab+0x22b9c>
   52b14:	mov	r3, r2
   52b18:	b	52bac <GetDataSlab+0x22c2c>
   52b1c:	vmov.i32	q9, #1	; 0x00000001
   52b20:	vmov.i32	q10, #1	; 0x00000001
   52b24:	vmov.32	d23[1], r6
   52b28:	vmov.i32	q8, #1	; 0x00000001
   52b2c:	bic	r3, r9, #3
   52b30:	bic	r8, r2, #3
   52b34:	mov	r6, sl
   52b38:	str	r3, [sp, #60]	; 0x3c
   52b3c:	sub	r3, r2, r3
   52b40:	vmov.32	d18[0], r4
   52b44:	vmov.32	d20[0], lr
   52b48:	vorr	d16, d18, d18
   52b4c:	vmov.i32	q9, #1	; 0x00000001
   52b50:	vorr	d18, d20, d20
   52b54:	vld1.32	{d20-d21}, [r6], ip
   52b58:	subs	r8, r8, #4
   52b5c:	vrev64.32	q12, q10
   52b60:	vext.8	q12, q12, q12, #8
   52b64:	vext.8	q11, q11, q12, #12
   52b68:	vmul.i32	q9, q9, q12
   52b6c:	vmul.i32	q8, q11, q8
   52b70:	vorr	q11, q12, q12
   52b74:	bne	52b54 <GetDataSlab+0x22bd4>
   52b78:	vext.8	q11, q9, q8, #8
   52b7c:	vext.8	q12, q8, q8, #8
   52b80:	ldr	r6, [sp, #60]	; 0x3c
   52b84:	vmul.i32	q0, q9, q11
   52b88:	vmul.i32	q1, q8, q12
   52b8c:	cmp	r9, r6
   52b90:	vmul.i32	q8, q0, d0[1]
   52b94:	vmul.i32	q9, q1, d2[1]
   52b98:	vmov.32	lr, d16[0]
   52b9c:	vmov.32	r4, d18[0]
   52ba0:	beq	52a8c <GetDataSlab+0x22b0c>
   52ba4:	vmov.32	r6, d20[0]
   52ba8:	sub	r8, fp, #96	; 0x60
   52bac:	mul	r4, r6, r4
   52bb0:	ldr	r6, [r0, r3, lsl #2]
   52bb4:	subs	r3, r3, #1
   52bb8:	mul	lr, lr, r6
   52bbc:	bne	52bac <GetDataSlab+0x22c2c>
   52bc0:	b	52a90 <GetDataSlab+0x22b10>
   52bc4:	ldr	r0, [sp, #80]	; 0x50
   52bc8:	cmp	r5, #1
   52bcc:	add	sl, r0, r7, lsl #3
   52bd0:	bne	56788 <GetDataSlab+0x26808>
   52bd4:	ldr	r0, [sp, #76]	; 0x4c
   52bd8:	ldr	r3, [fp, #20]
   52bdc:	sub	r2, fp, #176	; 0xb0
   52be0:	cmp	r0, #1
   52be4:	blt	56c18 <GetDataSlab+0x26c98>
   52be8:	orr	r2, r2, #4
   52bec:	ldr	lr, [fp, #12]
   52bf0:	sub	r0, fp, #136	; 0x88
   52bf4:	add	r4, r3, #4
   52bf8:	str	r2, [sp, #84]	; 0x54
   52bfc:	ldr	r2, [fp, #24]
   52c00:	orr	r0, r0, #4
   52c04:	sub	r2, r2, #1
   52c08:	str	r2, [sp, #68]	; 0x44
   52c0c:	orr	r2, r8, #4
   52c10:	mov	r8, #0
   52c14:	str	r2, [sp, #64]	; 0x40
   52c18:	ldr	r2, [lr], #4
   52c1c:	str	r2, [sp, #80]	; 0x50
   52c20:	b	52c48 <GetDataSlab+0x22cc8>
   52c24:	ldr	r3, [sp, #64]	; 0x40
   52c28:	ldr	r2, [r3, r2]
   52c2c:	add	sl, sl, r2, lsl #3
   52c30:	add	r7, r2, r7
   52c34:	ldr	r2, [sp, #76]	; 0x4c
   52c38:	add	r8, r1, r8
   52c3c:	cmp	r8, r2
   52c40:	mov	r2, #0
   52c44:	bge	56c1c <GetDataSlab+0x26c9c>
   52c48:	ldr	r5, [sp, #80]	; 0x50
   52c4c:	ldr	r2, [sp, #72]	; 0x48
   52c50:	cmp	r1, #1
   52c54:	sub	ip, fp, #176	; 0xb0
   52c58:	add	r9, sl, r5, lsl #3
   52c5c:	add	r3, r5, r7
   52c60:	blt	52ca8 <GetDataSlab+0x22d28>
   52c64:	ldr	r1, [sp, #88]	; 0x58
   52c68:	ldr	r5, [fp, #20]
   52c6c:	mov	r6, r4
   52c70:	mov	r2, #0
   52c74:	mov	r7, r9
   52c78:	add	r4, r1, r8, lsl #2
   52c7c:	ldr	r1, [r7], #8
   52c80:	str	r1, [r4, r2, lsl #2]
   52c84:	add	r2, r2, #1
   52c88:	ldr	r1, [r5]
   52c8c:	cmp	r2, r1
   52c90:	blt	52c7c <GetDataSlab+0x22cfc>
   52c94:	ldr	r2, [fp, #12]
   52c98:	mov	r4, r6
   52c9c:	ldr	r5, [r2]
   52ca0:	ldr	r2, [fp, #8]
   52ca4:	ldr	r2, [r2]
   52ca8:	str	r2, [sp, #72]	; 0x48
   52cac:	sub	r2, r2, r5
   52cb0:	str	r5, [sp, #80]	; 0x50
   52cb4:	add	sl, r9, r2, lsl #3
   52cb8:	add	r7, r3, r2
   52cbc:	ldr	r2, [fp, #24]
   52cc0:	cmp	r2, #2
   52cc4:	blt	52c34 <GetDataSlab+0x22cb4>
   52cc8:	ldr	r9, [sp, #68]	; 0x44
   52ccc:	mov	r2, #0
   52cd0:	b	52cfc <GetDataSlab+0x22d7c>
   52cd4:	ldr	r6, [ip, r2]
   52cd8:	ldr	ip, [lr, r2]
   52cdc:	sub	r3, r3, r5
   52ce0:	mla	r3, ip, r6, r3
   52ce4:	sub	ip, fp, #176	; 0xb0
   52ce8:	add	r7, r3, r7
   52cec:	add	sl, sl, r3, lsl #3
   52cf0:	subs	r9, r9, #1
   52cf4:	add	r2, r2, #4
   52cf8:	beq	52c34 <GetDataSlab+0x22cb4>
   52cfc:	ldr	r3, [r0, r2]
   52d00:	add	r3, r3, #1
   52d04:	str	r3, [r0, r2]
   52d08:	ldr	r5, [r4, r2]
   52d0c:	sdiv	r6, r3, r5
   52d10:	mls	r3, r6, r5, r3
   52d14:	cmp	r3, #0
   52d18:	bne	52c24 <GetDataSlab+0x22ca4>
   52d1c:	mov	r3, #0
   52d20:	str	r3, [r0, r2]
   52d24:	ldr	r3, [sp, #84]	; 0x54
   52d28:	ldr	r3, [r3, r2]
   52d2c:	sdiv	r5, r7, r3
   52d30:	mls	r5, r5, r3, r7
   52d34:	cmp	r5, #0
   52d38:	bne	52cd4 <GetDataSlab+0x22d54>
   52d3c:	ldr	r3, [lr, r2]
   52d40:	cmp	r3, #0
   52d44:	beq	52cf0 <GetDataSlab+0x22d70>
   52d48:	ldr	r6, [ip, r2]
   52d4c:	mla	r7, r6, r3, r7
   52d50:	mul	r3, r6, r3
   52d54:	b	52cec <GetDataSlab+0x22d6c>
   52d58:	ldr	r0, [sp, #72]	; 0x48
   52d5c:	sub	r1, fp, #176	; 0xb0
   52d60:	cmp	r0, #1
   52d64:	ldr	r0, [sp, #88]	; 0x58
   52d68:	blt	56c18 <GetDataSlab+0x26c98>
   52d6c:	ldr	r3, [sp, #68]	; 0x44
   52d70:	ldr	r2, [sp, #40]	; 0x28
   52d74:	orr	r1, r1, #4
   52d78:	str	r0, [sp, #76]	; 0x4c
   52d7c:	mov	r0, #0
   52d80:	mov	sl, #0
   52d84:	str	r1, [sp, #84]	; 0x54
   52d88:	ldr	r1, [fp, #12]
   52d8c:	str	r0, [sp, #64]	; 0x40
   52d90:	mls	r2, r3, lr, r2
   52d94:	add	r1, r1, #4
   52d98:	str	r1, [sp, #80]	; 0x50
   52d9c:	ldr	r1, [fp, #24]
   52da0:	str	r2, [sp, #60]	; 0x3c
   52da4:	mul	r2, r3, lr
   52da8:	str	r2, [sp, #52]	; 0x34
   52dac:	sub	r2, fp, #136	; 0x88
   52db0:	sub	r1, r1, #1
   52db4:	orr	r4, r2, #4
   52db8:	ldr	r2, [fp, #20]
   52dbc:	str	r1, [sp, #44]	; 0x2c
   52dc0:	sub	r1, fp, #96	; 0x60
   52dc4:	orr	r1, r1, #4
   52dc8:	str	r1, [sp, #40]	; 0x28
   52dcc:	mov	r1, r3
   52dd0:	add	r6, r2, #4
   52dd4:	and	r2, r3, #1
   52dd8:	sub	ip, r3, r2
   52ddc:	str	r2, [sp, #48]	; 0x30
   52de0:	lsl	r2, r3, #3
   52de4:	str	r2, [sp, #56]	; 0x38
   52de8:	b	52e2c <GetDataSlab+0x22eac>
   52dec:	ldr	r0, [sp, #40]	; 0x28
   52df0:	ldr	r0, [r0, r2]
   52df4:	add	r9, r9, r0
   52df8:	add	r7, r0, r7
   52dfc:	ldr	r0, [sp, #56]	; 0x38
   52e00:	ldr	r1, [sp, #76]	; 0x4c
   52e04:	ldr	r3, [sp, #64]	; 0x40
   52e08:	mov	r2, #0
   52e0c:	add	r1, r1, r0
   52e10:	ldr	r0, [sp, #72]	; 0x48
   52e14:	str	r1, [sp, #76]	; 0x4c
   52e18:	ldr	r1, [sp, #68]	; 0x44
   52e1c:	add	r3, r3, r1
   52e20:	cmp	r3, r0
   52e24:	str	r3, [sp, #64]	; 0x40
   52e28:	bge	56c1c <GetDataSlab+0x26c9c>
   52e2c:	ldr	r0, [fp, #12]
   52e30:	cmp	r1, #1
   52e34:	ldr	r2, [r0]
   52e38:	add	r5, r9, r2
   52e3c:	blt	52eb0 <GetDataSlab+0x22f30>
   52e40:	ldr	r8, [sp, #88]	; 0x58
   52e44:	mov	r0, #0
   52e48:	cmp	r1, #1
   52e4c:	beq	52e80 <GetDataSlab+0x22f00>
   52e50:	ldr	r1, [sp, #76]	; 0x4c
   52e54:	mov	r0, #0
   52e58:	ldrb	r3, [r5]
   52e5c:	add	r0, r0, #2
   52e60:	cmp	ip, r0
   52e64:	stm	r1, {r3, sl}
   52e68:	ldrb	r3, [r5, lr]!
   52e6c:	str	sl, [r1, #12]
   52e70:	add	r5, r5, lr
   52e74:	str	r3, [r1, #8]
   52e78:	add	r1, r1, #16
   52e7c:	bne	52e58 <GetDataSlab+0x22ed8>
   52e80:	ldr	r1, [sp, #52]	; 0x34
   52e84:	ldr	r3, [sp, #48]	; 0x30
   52e88:	add	r1, r1, r7
   52e8c:	cmp	r3, #0
   52e90:	beq	52ea8 <GetDataSlab+0x22f28>
   52e94:	ldr	r3, [sp, #64]	; 0x40
   52e98:	ldrb	r7, [r5], lr
   52e9c:	add	r3, r8, r3, lsl #3
   52ea0:	str	r7, [r3, r0, lsl #3]!
   52ea4:	str	sl, [r3, #4]
   52ea8:	add	r0, r1, r2
   52eac:	b	52eb4 <GetDataSlab+0x22f34>
   52eb0:	add	r0, r2, r7
   52eb4:	ldr	r1, [sp, #60]	; 0x3c
   52eb8:	sub	r1, r1, r2
   52ebc:	add	r7, r0, r1
   52ec0:	ldr	r0, [fp, #24]
   52ec4:	add	r9, r5, r1
   52ec8:	cmp	r0, #2
   52ecc:	blt	52dfc <GetDataSlab+0x22e7c>
   52ed0:	ldr	r8, [sp, #44]	; 0x2c
   52ed4:	mov	r2, #0
   52ed8:	b	52f08 <GetDataSlab+0x22f88>
   52edc:	ldr	r5, [sp, #80]	; 0x50
   52ee0:	sub	r3, fp, #176	; 0xb0
   52ee4:	sub	r0, r0, r1
   52ee8:	ldr	r3, [r3, r2]
   52eec:	ldr	r5, [r5, r2]
   52ef0:	mla	r0, r5, r3, r0
   52ef4:	add	r7, r0, r7
   52ef8:	add	r9, r9, r0
   52efc:	subs	r8, r8, #1
   52f00:	add	r2, r2, #4
   52f04:	beq	52dfc <GetDataSlab+0x22e7c>
   52f08:	ldr	r0, [r4, r2]
   52f0c:	add	r0, r0, #1
   52f10:	str	r0, [r4, r2]
   52f14:	ldr	r1, [r6, r2]
   52f18:	sdiv	r3, r0, r1
   52f1c:	mls	r0, r3, r1, r0
   52f20:	cmp	r0, #0
   52f24:	bne	52dec <GetDataSlab+0x22e6c>
   52f28:	ldr	r0, [sp, #84]	; 0x54
   52f2c:	str	sl, [r4, r2]
   52f30:	ldr	r0, [r0, r2]
   52f34:	sdiv	r1, r7, r0
   52f38:	mls	r1, r1, r0, r7
   52f3c:	cmp	r1, #0
   52f40:	bne	52edc <GetDataSlab+0x22f5c>
   52f44:	ldr	r0, [sp, #80]	; 0x50
   52f48:	ldr	r0, [r0, r2]
   52f4c:	cmp	r0, #0
   52f50:	beq	52efc <GetDataSlab+0x22f7c>
   52f54:	sub	r1, fp, #176	; 0xb0
   52f58:	ldr	r1, [r1, r2]
   52f5c:	mla	r7, r1, r0, r7
   52f60:	mla	r9, r1, r0, r9
   52f64:	b	52efc <GetDataSlab+0x22f7c>
   52f68:	ldr	r0, [sp, #76]	; 0x4c
   52f6c:	ldr	r2, [fp, #12]
   52f70:	ldr	r3, [fp, #20]
   52f74:	cmp	r0, #1
   52f78:	ldr	r0, [sp, #60]	; 0x3c
   52f7c:	blt	56c18 <GetDataSlab+0x26c98>
   52f80:	mov	ip, r3
   52f84:	ldr	r3, [sp, #72]	; 0x48
   52f88:	ldr	r8, [r2], #4
   52f8c:	lsl	sl, r7, #1
   52f90:	lsl	r9, r7, #2
   52f94:	add	lr, ip, #4
   52f98:	str	r2, [sp, #92]	; 0x5c
   52f9c:	mls	r0, r3, r7, r0
   52fa0:	str	r8, [sp, #64]	; 0x40
   52fa4:	sub	r0, r0, r8
   52fa8:	str	r0, [sp, #60]	; 0x3c
   52fac:	sub	r0, fp, #136	; 0x88
   52fb0:	orr	r4, r0, #4
   52fb4:	sub	r0, fp, #176	; 0xb0
   52fb8:	orr	r0, r0, #4
   52fbc:	str	r0, [sp, #84]	; 0x54
   52fc0:	ldr	r0, [fp, #24]
   52fc4:	sub	r0, r0, #1
   52fc8:	str	r0, [sp, #44]	; 0x2c
   52fcc:	orr	r0, r6, #4
   52fd0:	str	r0, [sp, #40]	; 0x28
   52fd4:	mla	r0, r3, r7, r8
   52fd8:	str	r0, [sp, #52]	; 0x34
   52fdc:	and	r0, r3, #1
   52fe0:	sub	r8, r3, r0
   52fe4:	str	r0, [sp, #48]	; 0x30
   52fe8:	lsl	r0, r3, #3
   52fec:	str	r0, [sp, #56]	; 0x38
   52ff0:	ldr	r0, [sp, #88]	; 0x58
   52ff4:	str	r0, [sp, #80]	; 0x50
   52ff8:	mov	r0, #0
   52ffc:	str	r0, [sp, #68]	; 0x44
   53000:	b	53044 <GetDataSlab+0x230c4>
   53004:	ldr	r0, [sp, #40]	; 0x28
   53008:	ldr	r0, [r0, r2]
   5300c:	add	r5, r5, r0, lsl #1
   53010:	add	r1, r0, r1
   53014:	ldr	r0, [sp, #56]	; 0x38
   53018:	ldr	r2, [sp, #80]	; 0x50
   5301c:	ldr	r3, [sp, #72]	; 0x48
   53020:	ldr	r7, [sp, #68]	; 0x44
   53024:	add	r2, r2, r0
   53028:	ldr	r0, [sp, #76]	; 0x4c
   5302c:	add	r7, r7, r3
   53030:	str	r2, [sp, #80]	; 0x50
   53034:	mov	r2, #0
   53038:	str	r7, [sp, #68]	; 0x44
   5303c:	cmp	r7, r0
   53040:	bge	56c1c <GetDataSlab+0x26c9c>
   53044:	ldr	r6, [sp, #64]	; 0x40
   53048:	cmp	r3, #1
   5304c:	add	r2, r5, r6, lsl #1
   53050:	blt	530cc <GetDataSlab+0x2314c>
   53054:	mov	r3, #0
   53058:	beq	5309c <GetDataSlab+0x2311c>
   5305c:	ldr	r5, [sp, #80]	; 0x50
   53060:	mov	r3, #0
   53064:	ldrsh	r6, [r2]
   53068:	add	r3, r3, #2
   5306c:	cmp	r8, r3
   53070:	str	r6, [r5]
   53074:	asr	r6, r6, #31
   53078:	str	r6, [r5, #4]
   5307c:	add	r6, r2, sl
   53080:	add	r2, r2, r9
   53084:	ldrsh	r6, [r6]
   53088:	str	r6, [r5, #8]
   5308c:	asr	r6, r6, #31
   53090:	str	r6, [r5, #12]
   53094:	add	r5, r5, #16
   53098:	bne	53064 <GetDataSlab+0x230e4>
   5309c:	ldr	r0, [sp, #48]	; 0x30
   530a0:	ldr	r6, [sp, #52]	; 0x34
   530a4:	cmp	r0, #0
   530a8:	beq	530cc <GetDataSlab+0x2314c>
   530ac:	ldr	r0, [sp, #88]	; 0x58
   530b0:	ldr	r7, [sp, #68]	; 0x44
   530b4:	ldrsh	r5, [r2], sl
   530b8:	add	r6, r0, r7, lsl #3
   530bc:	str	r5, [r6, r3, lsl #3]!
   530c0:	asr	r3, r5, #31
   530c4:	str	r3, [r6, #4]
   530c8:	ldr	r6, [sp, #52]	; 0x34
   530cc:	ldr	r0, [sp, #60]	; 0x3c
   530d0:	add	r1, r6, r1
   530d4:	add	r5, r2, r0, lsl #1
   530d8:	add	r1, r1, r0
   530dc:	ldr	r0, [fp, #24]
   530e0:	cmp	r0, #2
   530e4:	blt	53014 <GetDataSlab+0x23094>
   530e8:	ldr	r3, [sp, #44]	; 0x2c
   530ec:	mov	r2, #0
   530f0:	b	53120 <GetDataSlab+0x231a0>
   530f4:	ldr	r7, [sp, #92]	; 0x5c
   530f8:	sub	r0, fp, #176	; 0xb0
   530fc:	sub	r6, r6, ip
   53100:	ldr	r0, [r0, r2]
   53104:	ldr	r7, [r7, r2]
   53108:	mla	r0, r7, r0, r6
   5310c:	add	r1, r0, r1
   53110:	add	r5, r5, r0, lsl #1
   53114:	subs	r3, r3, #1
   53118:	add	r2, r2, #4
   5311c:	beq	53014 <GetDataSlab+0x23094>
   53120:	ldr	r6, [r4, r2]
   53124:	add	r6, r6, #1
   53128:	str	r6, [r4, r2]
   5312c:	ldr	r7, [lr, r2]
   53130:	sdiv	r0, r6, r7
   53134:	mls	r0, r0, r7, r6
   53138:	cmp	r0, #0
   5313c:	bne	53004 <GetDataSlab+0x23084>
   53140:	mov	r0, #0
   53144:	str	r0, [r4, r2]
   53148:	ldr	r0, [sp, #84]	; 0x54
   5314c:	ldr	r6, [r0, r2]
   53150:	sdiv	r0, r1, r6
   53154:	mls	ip, r0, r6, r1
   53158:	cmp	ip, #0
   5315c:	bne	530f4 <GetDataSlab+0x23174>
   53160:	ldr	r0, [sp, #92]	; 0x5c
   53164:	ldr	r6, [r0, r2]
   53168:	cmp	r6, #0
   5316c:	beq	53114 <GetDataSlab+0x23194>
   53170:	sub	r0, fp, #176	; 0xb0
   53174:	ldr	r0, [r0, r2]
   53178:	mla	r1, r0, r6, r1
   5317c:	mul	r0, r0, r6
   53180:	b	53110 <GetDataSlab+0x23190>
   53184:	ldr	r0, [sp, #76]	; 0x4c
   53188:	ldr	r2, [fp, #12]
   5318c:	sub	r3, fp, #96	; 0x60
   53190:	cmp	r0, #1
   53194:	ldr	r0, [sp, #56]	; 0x38
   53198:	blt	56c18 <GetDataSlab+0x26c98>
   5319c:	ldr	r7, [sp, #72]	; 0x48
   531a0:	ldr	r5, [r2], #4
   531a4:	ldr	r4, [sp, #44]	; 0x2c
   531a8:	lsl	sl, r6, #1
   531ac:	lsl	r8, r6, #2
   531b0:	mov	lr, #0
   531b4:	str	r2, [sp, #92]	; 0x5c
   531b8:	mls	r0, r7, r6, r0
   531bc:	mla	r2, r7, r6, r5
   531c0:	str	r5, [sp, #60]	; 0x3c
   531c4:	sub	r0, r0, r5
   531c8:	str	r2, [sp, #48]	; 0x30
   531cc:	and	r2, r7, #1
   531d0:	ldr	r5, [sp, #88]	; 0x58
   531d4:	str	r0, [sp, #56]	; 0x38
   531d8:	sub	r0, fp, #136	; 0x88
   531dc:	str	r2, [sp, #40]	; 0x28
   531e0:	sub	r2, r7, r2
   531e4:	orr	r9, r0, #4
   531e8:	ldr	r0, [fp, #20]
   531ec:	str	r2, [sp, #32]
   531f0:	lsl	r2, r7, #3
   531f4:	str	r2, [sp, #52]	; 0x34
   531f8:	mov	r2, #0
   531fc:	str	r2, [sp, #68]	; 0x44
   53200:	add	r0, r0, #4
   53204:	str	r0, [sp, #84]	; 0x54
   53208:	orr	r0, ip, #4
   5320c:	str	r0, [sp, #80]	; 0x50
   53210:	ldr	r0, [fp, #24]
   53214:	sub	r0, r0, #1
   53218:	str	r0, [sp, #36]	; 0x24
   5321c:	orr	r0, r3, #4
   53220:	str	r0, [sp, #28]
   53224:	mov	r0, r7
   53228:	b	53268 <GetDataSlab+0x232e8>
   5322c:	ldr	r0, [sp, #28]
   53230:	ldr	r0, [r0, r2]
   53234:	add	r4, r4, r0, lsl #1
   53238:	add	r1, r0, r1
   5323c:	ldr	r0, [sp, #52]	; 0x34
   53240:	ldr	r5, [sp, #64]	; 0x40
   53244:	ldr	r7, [sp, #68]	; 0x44
   53248:	ldr	r3, [sp, #76]	; 0x4c
   5324c:	mov	r2, #0
   53250:	add	r5, r5, r0
   53254:	ldr	r0, [sp, #72]	; 0x48
   53258:	add	r7, r7, r0
   5325c:	cmp	r7, r3
   53260:	str	r7, [sp, #68]	; 0x44
   53264:	bge	56c1c <GetDataSlab+0x26c9c>
   53268:	ldr	ip, [sp, #60]	; 0x3c
   5326c:	cmp	r0, #1
   53270:	str	r5, [sp, #64]	; 0x40
   53274:	add	r2, r4, ip, lsl #1
   53278:	blt	532e4 <GetDataSlab+0x23364>
   5327c:	mov	r3, #0
   53280:	beq	532b8 <GetDataSlab+0x23338>
   53284:	ldr	r0, [sp, #32]
   53288:	mov	r3, #0
   5328c:	ldrh	r7, [r2]
   53290:	add	r3, r3, #2
   53294:	cmp	r0, r3
   53298:	stm	r5, {r7, lr}
   5329c:	add	r7, r2, sl
   532a0:	add	r2, r2, r8
   532a4:	ldrh	r7, [r7]
   532a8:	str	lr, [r5, #12]
   532ac:	str	r7, [r5, #8]
   532b0:	add	r5, r5, #16
   532b4:	bne	5328c <GetDataSlab+0x2330c>
   532b8:	ldr	r0, [sp, #40]	; 0x28
   532bc:	ldr	ip, [sp, #48]	; 0x30
   532c0:	cmp	r0, #0
   532c4:	beq	532e4 <GetDataSlab+0x23364>
   532c8:	ldr	r0, [sp, #88]	; 0x58
   532cc:	ldr	r7, [sp, #68]	; 0x44
   532d0:	ldrh	r6, [r2], sl
   532d4:	add	r7, r0, r7, lsl #3
   532d8:	str	r6, [r7, r3, lsl #3]!
   532dc:	ldr	ip, [sp, #48]	; 0x30
   532e0:	str	lr, [r7, #4]
   532e4:	ldr	r0, [sp, #56]	; 0x38
   532e8:	add	r1, ip, r1
   532ec:	add	r4, r2, r0, lsl #1
   532f0:	add	r1, r1, r0
   532f4:	ldr	r0, [fp, #24]
   532f8:	cmp	r0, #2
   532fc:	blt	5323c <GetDataSlab+0x232bc>
   53300:	ldr	r3, [sp, #36]	; 0x24
   53304:	mov	r2, #0
   53308:	sub	ip, fp, #176	; 0xb0
   5330c:	b	53338 <GetDataSlab+0x233b8>
   53310:	ldr	r0, [sp, #92]	; 0x5c
   53314:	ldr	r5, [ip, r2]
   53318:	sub	r7, r6, r7
   5331c:	ldr	r0, [r0, r2]
   53320:	mla	r0, r0, r5, r7
   53324:	add	r1, r0, r1
   53328:	add	r4, r4, r0, lsl #1
   5332c:	subs	r3, r3, #1
   53330:	add	r2, r2, #4
   53334:	beq	5323c <GetDataSlab+0x232bc>
   53338:	ldr	r7, [r9, r2]
   5333c:	ldr	r0, [sp, #84]	; 0x54
   53340:	add	r7, r7, #1
   53344:	str	r7, [r9, r2]
   53348:	ldr	r6, [r0, r2]
   5334c:	sdiv	r5, r7, r6
   53350:	mls	r7, r5, r6, r7
   53354:	cmp	r7, #0
   53358:	bne	5322c <GetDataSlab+0x232ac>
   5335c:	ldr	r0, [sp, #80]	; 0x50
   53360:	str	lr, [r9, r2]
   53364:	ldr	r6, [r0, r2]
   53368:	sdiv	r7, r1, r6
   5336c:	mls	r7, r7, r6, r1
   53370:	cmp	r7, #0
   53374:	bne	53310 <GetDataSlab+0x23390>
   53378:	ldr	r0, [sp, #92]	; 0x5c
   5337c:	ldr	r7, [r0, r2]
   53380:	cmp	r7, #0
   53384:	beq	5332c <GetDataSlab+0x233ac>
   53388:	ldr	r0, [ip, r2]
   5338c:	mla	r1, r0, r7, r1
   53390:	mul	r0, r0, r7
   53394:	b	53328 <GetDataSlab+0x233a8>
   53398:	ldr	r0, [sp, #76]	; 0x4c
   5339c:	ldr	r1, [sp, #72]	; 0x48
   533a0:	ldr	r7, [sp, #52]	; 0x34
   533a4:	cmp	r0, #1
   533a8:	ldr	r0, [fp, #20]
   533ac:	blt	56c18 <GetDataSlab+0x26c98>
   533b0:	add	lr, r0, #4
   533b4:	ldr	r0, [fp, #12]
   533b8:	mls	r1, r1, r4, r7
   533bc:	orr	r2, r2, #4
   533c0:	lsl	r9, r4, #3
   533c4:	str	r1, [sp, #64]	; 0x40
   533c8:	sub	r1, fp, #136	; 0x88
   533cc:	add	r0, r0, #4
   533d0:	orr	r6, r1, #4
   533d4:	ldr	r1, [sp, #72]	; 0x48
   533d8:	str	r0, [sp, #84]	; 0x54
   533dc:	ldr	r0, [fp, #24]
   533e0:	sub	r0, r0, #1
   533e4:	str	r0, [sp, #44]	; 0x2c
   533e8:	sub	r0, fp, #96	; 0x60
   533ec:	orr	r0, r0, #4
   533f0:	str	r0, [sp, #40]	; 0x28
   533f4:	mul	r0, r1, r4
   533f8:	mov	r4, r2
   533fc:	str	r0, [sp, #52]	; 0x34
   53400:	and	r0, r1, #1
   53404:	sub	ip, r1, r0
   53408:	str	r0, [sp, #48]	; 0x30
   5340c:	lsl	r0, r1, #3
   53410:	str	r0, [sp, #60]	; 0x3c
   53414:	ldr	r0, [sp, #88]	; 0x58
   53418:	str	r0, [sp, #80]	; 0x50
   5341c:	mov	r0, #0
   53420:	str	r0, [sp, #68]	; 0x44
   53424:	b	53468 <GetDataSlab+0x234e8>
   53428:	ldr	r0, [sp, #40]	; 0x28
   5342c:	ldr	r0, [r0, r2]
   53430:	add	r8, r8, r0, lsl #2
   53434:	add	r3, r0, r3
   53438:	ldr	r0, [sp, #60]	; 0x3c
   5343c:	ldr	r1, [sp, #80]	; 0x50
   53440:	ldr	r5, [sp, #68]	; 0x44
   53444:	mov	r2, #0
   53448:	add	r1, r1, r0
   5344c:	ldr	r0, [sp, #76]	; 0x4c
   53450:	str	r1, [sp, #80]	; 0x50
   53454:	ldr	r1, [sp, #72]	; 0x48
   53458:	add	r5, r5, r1
   5345c:	cmp	r5, r0
   53460:	str	r5, [sp, #68]	; 0x44
   53464:	bge	56c1c <GetDataSlab+0x26c9c>
   53468:	ldr	r0, [fp, #12]
   5346c:	cmp	r1, #1
   53470:	ldr	r2, [r0]
   53474:	add	r5, r8, r2, lsl #2
   53478:	blt	53498 <GetDataSlab+0x23518>
   5347c:	mov	sl, r4
   53480:	ldr	r4, [sp, #56]	; 0x38
   53484:	mov	r7, #0
   53488:	cmp	r1, #1
   5348c:	bne	534a0 <GetDataSlab+0x23520>
   53490:	ldr	r8, [sp, #88]	; 0x58
   53494:	b	534e0 <GetDataSlab+0x23560>
   53498:	add	r0, r2, r3
   5349c:	b	53514 <GetDataSlab+0x23594>
   534a0:	ldr	r0, [sp, #80]	; 0x50
   534a4:	ldr	r8, [sp, #88]	; 0x58
   534a8:	mov	r7, #0
   534ac:	ldr	r1, [r5]
   534b0:	add	r7, r7, #2
   534b4:	cmp	ip, r7
   534b8:	str	r1, [r0]
   534bc:	asr	r1, r1, #31
   534c0:	str	r1, [r0, #4]
   534c4:	ldr	r1, [r5, r4, lsl #2]
   534c8:	add	r5, r5, r9
   534cc:	str	r1, [r0, #8]
   534d0:	asr	r1, r1, #31
   534d4:	str	r1, [r0, #12]
   534d8:	add	r0, r0, #16
   534dc:	bne	534ac <GetDataSlab+0x2352c>
   534e0:	ldr	r0, [sp, #52]	; 0x34
   534e4:	ldr	r1, [sp, #48]	; 0x30
   534e8:	add	r0, r0, r3
   534ec:	cmp	r1, #0
   534f0:	beq	5350c <GetDataSlab+0x2358c>
   534f4:	ldr	r1, [sp, #68]	; 0x44
   534f8:	ldr	r3, [r5], r4, lsl #2
   534fc:	add	r1, r8, r1, lsl #3
   53500:	str	r3, [r1, r7, lsl #3]!
   53504:	asr	r3, r3, #31
   53508:	str	r3, [r1, #4]
   5350c:	add	r0, r0, r2
   53510:	mov	r4, sl
   53514:	ldr	r1, [sp, #64]	; 0x40
   53518:	sub	r1, r1, r2
   5351c:	add	r3, r0, r1
   53520:	ldr	r0, [fp, #24]
   53524:	add	r8, r5, r1, lsl #2
   53528:	cmp	r0, #2
   5352c:	blt	53438 <GetDataSlab+0x234b8>
   53530:	ldr	r5, [sp, #44]	; 0x2c
   53534:	mov	r2, #0
   53538:	b	53568 <GetDataSlab+0x235e8>
   5353c:	ldr	r7, [sp, #84]	; 0x54
   53540:	sub	r1, fp, #176	; 0xb0
   53544:	sub	r0, r0, sl
   53548:	ldr	r1, [r1, r2]
   5354c:	ldr	r7, [r7, r2]
   53550:	mla	r0, r7, r1, r0
   53554:	add	r3, r0, r3
   53558:	add	r8, r8, r0, lsl #2
   5355c:	subs	r5, r5, #1
   53560:	add	r2, r2, #4
   53564:	beq	53438 <GetDataSlab+0x234b8>
   53568:	ldr	r0, [r6, r2]
   5356c:	add	r0, r0, #1
   53570:	str	r0, [r6, r2]
   53574:	ldr	r1, [lr, r2]
   53578:	sdiv	r7, r0, r1
   5357c:	mls	r0, r7, r1, r0
   53580:	cmp	r0, #0
   53584:	bne	53428 <GetDataSlab+0x234a8>
   53588:	mov	r0, #0
   5358c:	str	r0, [r6, r2]
   53590:	ldr	r0, [r4, r2]
   53594:	sdiv	r1, r3, r0
   53598:	mls	sl, r1, r0, r3
   5359c:	cmp	sl, #0
   535a0:	bne	5353c <GetDataSlab+0x235bc>
   535a4:	ldr	r0, [sp, #84]	; 0x54
   535a8:	ldr	r0, [r0, r2]
   535ac:	cmp	r0, #0
   535b0:	beq	5355c <GetDataSlab+0x235dc>
   535b4:	sub	r1, fp, #176	; 0xb0
   535b8:	ldr	r1, [r1, r2]
   535bc:	mla	r3, r1, r0, r3
   535c0:	mul	r0, r1, r0
   535c4:	b	53558 <GetDataSlab+0x235d8>
   535c8:	ldr	r0, [sp, #72]	; 0x48
   535cc:	sub	r1, fp, #96	; 0x60
   535d0:	cmp	r0, #1
   535d4:	ldr	r0, [fp, #12]
   535d8:	blt	56c18 <GetDataSlab+0x26c98>
   535dc:	add	r0, r0, #4
   535e0:	mov	ip, r1
   535e4:	ldr	r5, [sp, #48]	; 0x30
   535e8:	ldr	r1, [sp, #68]	; 0x44
   535ec:	ldr	r2, [sp, #52]	; 0x34
   535f0:	str	r0, [sp, #76]	; 0x4c
   535f4:	ldr	r0, [fp, #24]
   535f8:	ldr	r4, [sp, #76]	; 0x4c
   535fc:	mls	r2, r1, r5, r2
   53600:	lsl	r9, r5, #3
   53604:	sub	r0, r0, #1
   53608:	str	r0, [sp, #36]	; 0x24
   5360c:	orr	r0, ip, #4
   53610:	mov	ip, #0
   53614:	str	r0, [sp, #32]
   53618:	mul	r0, r1, r5
   5361c:	str	r2, [sp, #56]	; 0x38
   53620:	sub	r2, fp, #136	; 0x88
   53624:	orr	r6, r2, #4
   53628:	ldr	r2, [fp, #20]
   5362c:	str	r0, [sp, #44]	; 0x2c
   53630:	and	r0, r1, #1
   53634:	sub	r8, r1, r0
   53638:	str	r0, [sp, #40]	; 0x28
   5363c:	lsl	r0, r1, #3
   53640:	str	r0, [sp, #52]	; 0x34
   53644:	ldr	r0, [sp, #88]	; 0x58
   53648:	add	r2, r2, #4
   5364c:	str	r2, [sp, #84]	; 0x54
   53650:	orr	r2, r7, #4
   53654:	str	r2, [sp, #80]	; 0x50
   53658:	str	r0, [sp, #64]	; 0x40
   5365c:	mov	r0, #0
   53660:	str	r0, [sp, #60]	; 0x3c
   53664:	b	536a8 <GetDataSlab+0x23728>
   53668:	ldr	r0, [sp, #32]
   5366c:	ldr	r0, [r0, r2]
   53670:	add	sl, sl, r0, lsl #2
   53674:	add	r3, r0, r3
   53678:	ldr	r0, [sp, #52]	; 0x34
   5367c:	ldr	r1, [sp, #64]	; 0x40
   53680:	ldr	r7, [sp, #60]	; 0x3c
   53684:	mov	r2, #0
   53688:	add	r1, r1, r0
   5368c:	ldr	r0, [sp, #72]	; 0x48
   53690:	str	r1, [sp, #64]	; 0x40
   53694:	ldr	r1, [sp, #68]	; 0x44
   53698:	add	r7, r7, r1
   5369c:	cmp	r7, r0
   536a0:	str	r7, [sp, #60]	; 0x3c
   536a4:	bge	56c1c <GetDataSlab+0x26c9c>
   536a8:	ldr	r0, [fp, #12]
   536ac:	cmp	r1, #1
   536b0:	ldr	r2, [r0]
   536b4:	add	r5, sl, r2, lsl #2
   536b8:	blt	53734 <GetDataSlab+0x237b4>
   536bc:	mov	r7, #0
   536c0:	cmp	r1, #1
   536c4:	beq	536fc <GetDataSlab+0x2377c>
   536c8:	ldr	sl, [sp, #64]	; 0x40
   536cc:	ldr	r1, [sp, #48]	; 0x30
   536d0:	mov	r7, #0
   536d4:	ldr	r0, [r5]
   536d8:	add	r7, r7, #2
   536dc:	cmp	r8, r7
   536e0:	stm	sl, {r0, ip}
   536e4:	ldr	r0, [r5, r1, lsl #2]
   536e8:	str	ip, [sl, #12]
   536ec:	add	r5, r5, r9
   536f0:	str	r0, [sl, #8]
   536f4:	add	sl, sl, #16
   536f8:	bne	536d4 <GetDataSlab+0x23754>
   536fc:	ldr	r0, [sp, #44]	; 0x2c
   53700:	add	r3, r0, r3
   53704:	ldr	r0, [sp, #40]	; 0x28
   53708:	cmp	r0, #0
   5370c:	beq	5372c <GetDataSlab+0x237ac>
   53710:	ldr	r0, [sp, #88]	; 0x58
   53714:	ldr	r1, [sp, #60]	; 0x3c
   53718:	add	r0, r0, r1, lsl #3
   5371c:	ldr	r1, [sp, #48]	; 0x30
   53720:	ldr	r1, [r5], r1, lsl #2
   53724:	str	r1, [r0, r7, lsl #3]!
   53728:	str	ip, [r0, #4]
   5372c:	add	r3, r3, r2
   53730:	b	53738 <GetDataSlab+0x237b8>
   53734:	add	r3, r2, r3
   53738:	ldr	r0, [sp, #56]	; 0x38
   5373c:	sub	r0, r0, r2
   53740:	add	sl, r5, r0, lsl #2
   53744:	add	r3, r3, r0
   53748:	ldr	r0, [fp, #24]
   5374c:	cmp	r0, #2
   53750:	blt	53678 <GetDataSlab+0x236f8>
   53754:	ldr	r5, [sp, #36]	; 0x24
   53758:	mov	r2, #0
   5375c:	b	53788 <GetDataSlab+0x23808>
   53760:	sub	r7, fp, #176	; 0xb0
   53764:	ldr	lr, [r4, r2]
   53768:	sub	r0, r0, r1
   5376c:	ldr	r7, [r7, r2]
   53770:	mla	r0, lr, r7, r0
   53774:	add	r3, r0, r3
   53778:	add	sl, sl, r0, lsl #2
   5377c:	subs	r5, r5, #1
   53780:	add	r2, r2, #4
   53784:	beq	53678 <GetDataSlab+0x236f8>
   53788:	ldr	r0, [r6, r2]
   5378c:	ldr	r1, [sp, #84]	; 0x54
   53790:	add	r0, r0, #1
   53794:	str	r0, [r6, r2]
   53798:	ldr	r1, [r1, r2]
   5379c:	sdiv	r7, r0, r1
   537a0:	mls	r0, r7, r1, r0
   537a4:	cmp	r0, #0
   537a8:	bne	53668 <GetDataSlab+0x236e8>
   537ac:	ldr	r0, [sp, #80]	; 0x50
   537b0:	str	ip, [r6, r2]
   537b4:	ldr	r0, [r0, r2]
   537b8:	sdiv	r1, r3, r0
   537bc:	mls	r1, r1, r0, r3
   537c0:	cmp	r1, #0
   537c4:	bne	53760 <GetDataSlab+0x237e0>
   537c8:	ldr	r0, [sp, #76]	; 0x4c
   537cc:	ldr	r0, [r0, r2]
   537d0:	cmp	r0, #0
   537d4:	beq	5377c <GetDataSlab+0x237fc>
   537d8:	sub	r1, fp, #176	; 0xb0
   537dc:	ldr	r1, [r1, r2]
   537e0:	mla	r3, r1, r0, r3
   537e4:	mul	r0, r1, r0
   537e8:	b	53778 <GetDataSlab+0x237f8>
   537ec:	ldr	r0, [sp, #76]	; 0x4c
   537f0:	ldr	r1, [fp, #12]
   537f4:	ldr	lr, [sp, #68]	; 0x44
   537f8:	sub	r3, fp, #96	; 0x60
   537fc:	cmp	r0, #1
   53800:	blt	56c18 <GetDataSlab+0x26c98>
   53804:	ldr	r6, [sp, #36]	; 0x24
   53808:	ldr	r0, [sp, #72]	; 0x48
   5380c:	ldr	sl, [r1], #4
   53810:	str	r1, [sp, #92]	; 0x5c
   53814:	sub	r1, fp, #136	; 0x88
   53818:	mls	r0, lr, r6, r0
   5381c:	str	sl, [sp, #44]	; 0x2c
   53820:	sub	r0, r0, sl
   53824:	str	r0, [sp, #60]	; 0x3c
   53828:	orr	r0, r1, #4
   5382c:	ldr	r1, [sp, #88]	; 0x58
   53830:	str	r0, [sp, #52]	; 0x34
   53834:	ldr	r0, [fp, #20]
   53838:	add	r0, r0, #4
   5383c:	str	r0, [sp, #84]	; 0x54
   53840:	orr	r0, r2, #4
   53844:	str	r0, [sp, #80]	; 0x50
   53848:	ldr	r0, [fp, #24]
   5384c:	sub	r0, r0, #1
   53850:	str	r0, [sp, #32]
   53854:	orr	r0, r3, #4
   53858:	str	r0, [sp, #16]
   5385c:	mla	r0, lr, r6, sl
   53860:	str	r0, [sp, #48]	; 0x30
   53864:	and	r0, lr, #1
   53868:	str	r0, [sp, #40]	; 0x28
   5386c:	sub	r0, lr, r0
   53870:	str	r0, [sp, #28]
   53874:	lsl	r0, lr, #3
   53878:	str	r0, [sp, #56]	; 0x38
   5387c:	lsl	r0, r6, #2
   53880:	str	r0, [sp, #24]
   53884:	lsl	r0, r6, #3
   53888:	str	r0, [sp, #20]
   5388c:	mov	r0, #0
   53890:	str	r0, [sp, #72]	; 0x48
   53894:	b	538d0 <GetDataSlab+0x23950>
   53898:	ldr	r1, [sp, #16]
   5389c:	ldr	r0, [r1, r0]
   538a0:	add	r5, r5, r0, lsl #2
   538a4:	add	r8, r0, r8
   538a8:	ldr	r0, [sp, #56]	; 0x38
   538ac:	ldr	r1, [sp, #64]	; 0x40
   538b0:	ldr	r3, [sp, #72]	; 0x48
   538b4:	mov	r2, #0
   538b8:	add	r1, r1, r0
   538bc:	ldr	r0, [sp, #76]	; 0x4c
   538c0:	add	r3, r3, lr
   538c4:	str	r3, [sp, #72]	; 0x48
   538c8:	cmp	r3, r0
   538cc:	bge	56c1c <GetDataSlab+0x26c9c>
   538d0:	add	r4, r5, sl, lsl #2
   538d4:	cmp	lr, #1
   538d8:	str	r1, [sp, #64]	; 0x40
   538dc:	blt	53978 <GetDataSlab+0x239f8>
   538e0:	mov	r7, r8
   538e4:	mov	r6, #0
   538e8:	beq	5392c <GetDataSlab+0x239ac>
   538ec:	ldr	r5, [sp, #28]
   538f0:	ldr	r8, [sp, #24]
   538f4:	ldr	r9, [sp, #20]
   538f8:	mov	r6, #0
   538fc:	mov	sl, r1
   53900:	ldr	r0, [r4]
   53904:	bl	6b914 <__aeabi_f2lz>
   53908:	strd	r0, [sl]
   5390c:	ldr	r0, [r4, r8]
   53910:	bl	6b914 <__aeabi_f2lz>
   53914:	add	r6, r6, #2
   53918:	strd	r0, [sl, #8]
   5391c:	add	r4, r4, r9
   53920:	add	sl, sl, #16
   53924:	cmp	r5, r6
   53928:	bne	53900 <GetDataSlab+0x23980>
   5392c:	ldr	r0, [sp, #40]	; 0x28
   53930:	ldr	lr, [sp, #68]	; 0x44
   53934:	ldr	sl, [sp, #44]	; 0x2c
   53938:	mov	r8, r7
   5393c:	cmp	r0, #0
   53940:	ldr	r0, [sp, #48]	; 0x30
   53944:	beq	5397c <GetDataSlab+0x239fc>
   53948:	ldr	r0, [sp, #88]	; 0x58
   5394c:	ldr	r1, [sp, #72]	; 0x48
   53950:	add	sl, r0, r1, lsl #3
   53954:	ldr	r0, [sp, #36]	; 0x24
   53958:	ldr	r0, [r4], r0, lsl #2
   5395c:	bl	6b914 <__aeabi_f2lz>
   53960:	ldr	lr, [sp, #68]	; 0x44
   53964:	str	r0, [sl, r6, lsl #3]!
   53968:	ldr	r0, [sp, #48]	; 0x30
   5396c:	str	r1, [sl, #4]
   53970:	ldr	sl, [sp, #44]	; 0x2c
   53974:	b	5397c <GetDataSlab+0x239fc>
   53978:	mov	r0, sl
   5397c:	ldr	r1, [sp, #60]	; 0x3c
   53980:	add	r0, r0, r8
   53984:	ldr	r7, [sp, #52]	; 0x34
   53988:	mov	r9, #0
   5398c:	add	r8, r0, r1
   53990:	ldr	r0, [fp, #24]
   53994:	add	r5, r4, r1, lsl #2
   53998:	cmp	r0, #2
   5399c:	blt	538a8 <GetDataSlab+0x23928>
   539a0:	ldr	r1, [sp, #32]
   539a4:	mov	r0, #0
   539a8:	sub	ip, fp, #176	; 0xb0
   539ac:	b	539d8 <GetDataSlab+0x23a58>
   539b0:	ldr	r4, [sp, #92]	; 0x5c
   539b4:	ldr	r6, [ip, r0]
   539b8:	sub	r2, r2, r3
   539bc:	ldr	r4, [r4, r0]
   539c0:	mla	r2, r4, r6, r2
   539c4:	add	r8, r2, r8
   539c8:	add	r5, r5, r2, lsl #2
   539cc:	subs	r1, r1, #1
   539d0:	add	r0, r0, #4
   539d4:	beq	538a8 <GetDataSlab+0x23928>
   539d8:	ldr	r2, [r7, r0]
   539dc:	ldr	r3, [sp, #84]	; 0x54
   539e0:	add	r2, r2, #1
   539e4:	str	r2, [r7, r0]
   539e8:	ldr	r3, [r3, r0]
   539ec:	sdiv	r6, r2, r3
   539f0:	mls	r2, r6, r3, r2
   539f4:	cmp	r2, #0
   539f8:	bne	53898 <GetDataSlab+0x23918>
   539fc:	ldr	r2, [sp, #80]	; 0x50
   53a00:	str	r9, [r7, r0]
   53a04:	ldr	r2, [r2, r0]
   53a08:	sdiv	r3, r8, r2
   53a0c:	mls	r3, r3, r2, r8
   53a10:	cmp	r3, #0
   53a14:	bne	539b0 <GetDataSlab+0x23a30>
   53a18:	ldr	r2, [sp, #92]	; 0x5c
   53a1c:	ldr	r2, [r2, r0]
   53a20:	cmp	r2, #0
   53a24:	beq	539cc <GetDataSlab+0x23a4c>
   53a28:	ldr	r3, [ip, r0]
   53a2c:	mla	r8, r3, r2, r8
   53a30:	mul	r2, r3, r2
   53a34:	b	539c8 <GetDataSlab+0x23a48>
   53a38:	ldr	r0, [sp, #76]	; 0x4c
   53a3c:	ldr	r1, [fp, #12]
   53a40:	ldr	ip, [sp, #72]	; 0x48
   53a44:	sub	r3, fp, #96	; 0x60
   53a48:	cmp	r0, #1
   53a4c:	blt	56c18 <GetDataSlab+0x26c98>
   53a50:	ldr	r6, [sp, #36]	; 0x24
   53a54:	ldr	r0, [sp, #68]	; 0x44
   53a58:	ldr	r4, [r1], #4
   53a5c:	mov	lr, r5
   53a60:	mov	r7, #0
   53a64:	str	r1, [sp, #92]	; 0x5c
   53a68:	sub	r1, fp, #136	; 0x88
   53a6c:	mls	r0, ip, r6, r0
   53a70:	str	r4, [sp, #60]	; 0x3c
   53a74:	sub	r0, r0, r4
   53a78:	str	r0, [sp, #56]	; 0x38
   53a7c:	orr	r0, r1, #4
   53a80:	str	r0, [sp, #48]	; 0x30
   53a84:	ldr	r0, [fp, #20]
   53a88:	add	r0, r0, #4
   53a8c:	str	r0, [sp, #84]	; 0x54
   53a90:	orr	r0, r2, #4
   53a94:	str	r0, [sp, #80]	; 0x50
   53a98:	ldr	r0, [fp, #24]
   53a9c:	sub	r0, r0, #1
   53aa0:	str	r0, [sp, #32]
   53aa4:	orr	r0, r3, #4
   53aa8:	str	r0, [sp, #16]
   53aac:	mla	r0, ip, r6, r4
   53ab0:	ldr	r4, [sp, #88]	; 0x58
   53ab4:	str	r0, [sp, #44]	; 0x2c
   53ab8:	and	r0, ip, #1
   53abc:	str	r0, [sp, #40]	; 0x28
   53ac0:	sub	r0, ip, r0
   53ac4:	str	r0, [sp, #28]
   53ac8:	lsl	r0, ip, #3
   53acc:	str	r0, [sp, #52]	; 0x34
   53ad0:	lsl	r0, r6, #3
   53ad4:	str	r0, [sp, #24]
   53ad8:	lsl	r0, r6, #4
   53adc:	str	r0, [sp, #20]
   53ae0:	b	53b18 <GetDataSlab+0x23b98>
   53ae4:	ldr	r1, [sp, #16]
   53ae8:	ldr	r0, [r1, r0]
   53aec:	add	lr, lr, r0, lsl #3
   53af0:	add	r8, r0, r8
   53af4:	ldr	r0, [sp, #52]	; 0x34
   53af8:	ldr	r4, [sp, #68]	; 0x44
   53afc:	add	sl, sl, ip
   53b00:	mov	r2, #0
   53b04:	mov	r7, sl
   53b08:	add	r4, r4, r0
   53b0c:	ldr	r0, [sp, #76]	; 0x4c
   53b10:	cmp	sl, r0
   53b14:	bge	56c1c <GetDataSlab+0x26c9c>
   53b18:	ldr	r0, [sp, #60]	; 0x3c
   53b1c:	cmp	ip, #1
   53b20:	str	r4, [sp, #68]	; 0x44
   53b24:	add	r5, lr, r0, lsl #3
   53b28:	blt	53bcc <GetDataSlab+0x23c4c>
   53b2c:	mov	r6, #0
   53b30:	str	r8, [sp, #64]	; 0x40
   53b34:	beq	53b80 <GetDataSlab+0x23c00>
   53b38:	ldr	r8, [sp, #28]
   53b3c:	ldr	sl, [sp, #24]
   53b40:	ldr	r9, [sp, #20]
   53b44:	mov	r6, #0
   53b48:	vldr	d16, [r5]
   53b4c:	vmov	r0, r1, d16
   53b50:	bl	6b940 <__aeabi_d2lz>
   53b54:	strd	r0, [r4]
   53b58:	add	r0, r5, sl
   53b5c:	vldr	d16, [r0]
   53b60:	vmov	r0, r1, d16
   53b64:	bl	6b940 <__aeabi_d2lz>
   53b68:	add	r6, r6, #2
   53b6c:	strd	r0, [r4, #8]
   53b70:	add	r5, r5, r9
   53b74:	add	r4, r4, #16
   53b78:	cmp	r8, r6
   53b7c:	bne	53b48 <GetDataSlab+0x23bc8>
   53b80:	ldr	r0, [sp, #40]	; 0x28
   53b84:	ldr	ip, [sp, #72]	; 0x48
   53b88:	ldr	r8, [sp, #64]	; 0x40
   53b8c:	mov	sl, r7
   53b90:	cmp	r0, #0
   53b94:	ldr	r0, [sp, #44]	; 0x2c
   53b98:	beq	53bd0 <GetDataSlab+0x23c50>
   53b9c:	vldr	d16, [r5]
   53ba0:	ldr	r0, [sp, #88]	; 0x58
   53ba4:	add	r4, r0, sl, lsl #3
   53ba8:	vmov	r0, r1, d16
   53bac:	bl	6b940 <__aeabi_d2lz>
   53bb0:	ldr	ip, [sp, #72]	; 0x48
   53bb4:	str	r0, [r4, r6, lsl #3]!
   53bb8:	ldr	r0, [sp, #36]	; 0x24
   53bbc:	str	r1, [r4, #4]
   53bc0:	add	r5, r5, r0, lsl #3
   53bc4:	ldr	r0, [sp, #44]	; 0x2c
   53bc8:	b	53bd0 <GetDataSlab+0x23c50>
   53bcc:	mov	sl, r7
   53bd0:	ldr	r1, [sp, #56]	; 0x38
   53bd4:	add	r0, r0, r8
   53bd8:	ldr	r7, [sp, #48]	; 0x30
   53bdc:	mov	r9, #0
   53be0:	add	r8, r0, r1
   53be4:	ldr	r0, [fp, #24]
   53be8:	add	lr, r5, r1, lsl #3
   53bec:	cmp	r0, #2
   53bf0:	blt	53af4 <GetDataSlab+0x23b74>
   53bf4:	ldr	r1, [sp, #32]
   53bf8:	mov	r0, #0
   53bfc:	sub	r4, fp, #176	; 0xb0
   53c00:	b	53c2c <GetDataSlab+0x23cac>
   53c04:	ldr	r5, [sp, #92]	; 0x5c
   53c08:	ldr	r6, [r4, r0]
   53c0c:	sub	r2, r2, r3
   53c10:	ldr	r5, [r5, r0]
   53c14:	mla	r2, r5, r6, r2
   53c18:	add	r8, r2, r8
   53c1c:	add	lr, lr, r2, lsl #3
   53c20:	subs	r1, r1, #1
   53c24:	add	r0, r0, #4
   53c28:	beq	53af4 <GetDataSlab+0x23b74>
   53c2c:	ldr	r2, [r7, r0]
   53c30:	ldr	r3, [sp, #84]	; 0x54
   53c34:	add	r2, r2, #1
   53c38:	str	r2, [r7, r0]
   53c3c:	ldr	r3, [r3, r0]
   53c40:	sdiv	r6, r2, r3
   53c44:	mls	r2, r6, r3, r2
   53c48:	cmp	r2, #0
   53c4c:	bne	53ae4 <GetDataSlab+0x23b64>
   53c50:	ldr	r2, [sp, #80]	; 0x50
   53c54:	str	r9, [r7, r0]
   53c58:	ldr	r2, [r2, r0]
   53c5c:	sdiv	r3, r8, r2
   53c60:	mls	r3, r3, r2, r8
   53c64:	cmp	r3, #0
   53c68:	bne	53c04 <GetDataSlab+0x23c84>
   53c6c:	ldr	r2, [sp, #92]	; 0x5c
   53c70:	ldr	r2, [r2, r0]
   53c74:	cmp	r2, #0
   53c78:	beq	53c20 <GetDataSlab+0x23ca0>
   53c7c:	ldr	r3, [r4, r0]
   53c80:	mla	r8, r3, r2, r8
   53c84:	mul	r2, r3, r2
   53c88:	b	53c1c <GetDataSlab+0x23c9c>
   53c8c:	ldr	r0, [sp, #68]	; 0x44
   53c90:	ldr	r8, [sp, #88]	; 0x58
   53c94:	ldr	r2, [sp, #44]	; 0x2c
   53c98:	cmp	r0, #1
   53c9c:	blt	53ec4 <GetDataSlab+0x23f44>
   53ca0:	ldr	r1, [fp, #12]
   53ca4:	ldr	r3, [sp, #32]
   53ca8:	ldr	r0, [sp, #24]
   53cac:	str	r8, [sp, #64]	; 0x40
   53cb0:	ldr	r6, [r1], #4
   53cb4:	mls	r0, r2, r3, r0
   53cb8:	lsl	r9, r3, #3
   53cbc:	lsl	sl, r3, #4
   53cc0:	str	r1, [sp, #84]	; 0x54
   53cc4:	mov	r1, #0
   53cc8:	str	r1, [sp, #60]	; 0x3c
   53ccc:	sub	r0, r0, r6
   53cd0:	str	r6, [sp, #56]	; 0x38
   53cd4:	str	r0, [sp, #52]	; 0x34
   53cd8:	sub	r0, fp, #136	; 0x88
   53cdc:	orr	r4, r0, #4
   53ce0:	ldr	r0, [fp, #20]
   53ce4:	add	r5, r0, #4
   53ce8:	sub	r0, fp, #176	; 0xb0
   53cec:	orr	r0, r0, #4
   53cf0:	str	r0, [sp, #72]	; 0x48
   53cf4:	ldr	r0, [fp, #24]
   53cf8:	sub	r0, r0, #1
   53cfc:	str	r0, [sp, #28]
   53d00:	sub	r0, fp, #96	; 0x60
   53d04:	orr	r0, r0, #4
   53d08:	str	r0, [sp, #24]
   53d0c:	mla	r0, r2, r3, r6
   53d10:	str	r0, [sp, #40]	; 0x28
   53d14:	and	r0, r2, #1
   53d18:	str	r0, [sp, #36]	; 0x24
   53d1c:	sub	lr, r2, r0
   53d20:	lsl	r0, r2, #3
   53d24:	str	r0, [sp, #48]	; 0x30
   53d28:	mov	r0, r2
   53d2c:	b	53d70 <GetDataSlab+0x23df0>
   53d30:	ldr	r0, [sp, #24]
   53d34:	ldr	r0, [r0, r2]
   53d38:	add	r7, r7, r0, lsl #3
   53d3c:	add	ip, r0, ip
   53d40:	ldr	r0, [sp, #48]	; 0x30
   53d44:	ldr	r1, [sp, #64]	; 0x40
   53d48:	ldr	r2, [sp, #60]	; 0x3c
   53d4c:	ldr	r8, [sp, #88]	; 0x58
   53d50:	add	r1, r1, r0
   53d54:	ldr	r0, [sp, #44]	; 0x2c
   53d58:	str	r1, [sp, #64]	; 0x40
   53d5c:	ldr	r1, [sp, #68]	; 0x44
   53d60:	add	r2, r2, r0
   53d64:	cmp	r2, r1
   53d68:	str	r2, [sp, #60]	; 0x3c
   53d6c:	bge	53ec4 <GetDataSlab+0x23f44>
   53d70:	ldr	r6, [sp, #56]	; 0x38
   53d74:	cmp	r0, #1
   53d78:	add	r7, r7, r6, lsl #3
   53d7c:	blt	53d90 <GetDataSlab+0x23e10>
   53d80:	mov	r2, #0
   53d84:	bne	53d98 <GetDataSlab+0x23e18>
   53d88:	mov	r0, r7
   53d8c:	b	53dd0 <GetDataSlab+0x23e50>
   53d90:	mov	r0, r7
   53d94:	b	53e00 <GetDataSlab+0x23e80>
   53d98:	ldr	r6, [sp, #64]	; 0x40
   53d9c:	mov	r2, #0
   53da0:	ldrd	r0, [r7]
   53da4:	add	r2, r2, #2
   53da8:	cmp	lr, r2
   53dac:	stm	r6, {r0, r1}
   53db0:	add	r0, r7, sl
   53db4:	ldr	r1, [r7, r9]!
   53db8:	ldr	r7, [r7, #4]
   53dbc:	str	r1, [r6, #8]
   53dc0:	str	r7, [r6, #12]
   53dc4:	add	r6, r6, #16
   53dc8:	mov	r7, r0
   53dcc:	bne	53da0 <GetDataSlab+0x23e20>
   53dd0:	ldr	r1, [sp, #36]	; 0x24
   53dd4:	ldr	r6, [sp, #40]	; 0x28
   53dd8:	cmp	r1, #0
   53ddc:	beq	53e00 <GetDataSlab+0x23e80>
   53de0:	ldr	r1, [sp, #60]	; 0x3c
   53de4:	ldrd	r6, [r0]
   53de8:	add	r1, r8, r1, lsl #3
   53dec:	str	r6, [r1, r2, lsl #3]!
   53df0:	ldr	r6, [sp, #40]	; 0x28
   53df4:	str	r7, [r1, #4]
   53df8:	ldr	r1, [sp, #32]
   53dfc:	add	r0, r0, r1, lsl #3
   53e00:	ldr	r1, [sp, #52]	; 0x34
   53e04:	add	r7, r0, r1, lsl #3
   53e08:	add	r0, r6, ip
   53e0c:	add	ip, r0, r1
   53e10:	ldr	r0, [fp, #24]
   53e14:	cmp	r0, #2
   53e18:	blt	53d40 <GetDataSlab+0x23dc0>
   53e1c:	ldr	r8, [sp, #28]
   53e20:	mov	r2, #0
   53e24:	b	53e5c <GetDataSlab+0x23edc>
   53e28:	mov	r3, r7
   53e2c:	ldr	r7, [sp, #84]	; 0x54
   53e30:	sub	r1, fp, #176	; 0xb0
   53e34:	sub	r0, r0, r6
   53e38:	ldr	r1, [r1, r2]
   53e3c:	ldr	r7, [r7, r2]
   53e40:	mla	r0, r7, r1, r0
   53e44:	mov	r7, r3
   53e48:	add	ip, r0, ip
   53e4c:	add	r7, r3, r0, lsl #3
   53e50:	subs	r8, r8, #1
   53e54:	add	r2, r2, #4
   53e58:	beq	53d40 <GetDataSlab+0x23dc0>
   53e5c:	ldr	r0, [r4, r2]
   53e60:	add	r0, r0, #1
   53e64:	str	r0, [r4, r2]
   53e68:	ldr	r1, [r5, r2]
   53e6c:	sdiv	r6, r0, r1
   53e70:	mls	r0, r6, r1, r0
   53e74:	cmp	r0, #0
   53e78:	bne	53d30 <GetDataSlab+0x23db0>
   53e7c:	mov	r0, #0
   53e80:	str	r0, [r4, r2]
   53e84:	ldr	r0, [sp, #72]	; 0x48
   53e88:	ldr	r0, [r0, r2]
   53e8c:	sdiv	r1, ip, r0
   53e90:	mls	r6, r1, r0, ip
   53e94:	cmp	r6, #0
   53e98:	bne	53e28 <GetDataSlab+0x23ea8>
   53e9c:	ldr	r0, [sp, #84]	; 0x54
   53ea0:	ldr	r0, [r0, r2]
   53ea4:	cmp	r0, #0
   53ea8:	beq	53e50 <GetDataSlab+0x23ed0>
   53eac:	sub	r1, fp, #176	; 0xb0
   53eb0:	ldr	r1, [r1, r2]
   53eb4:	mla	ip, r1, r0, ip
   53eb8:	mul	r0, r1, r0
   53ebc:	add	r7, r7, r0, lsl #3
   53ec0:	b	53e50 <GetDataSlab+0x23ed0>
   53ec4:	ldr	r3, [sp, #76]	; 0x4c
   53ec8:	mov	r2, #0
   53ecc:	cmp	r3, #13
   53ed0:	bne	56c1c <GetDataSlab+0x26c9c>
   53ed4:	ldr	r0, [fp, #16]
   53ed8:	ldr	r1, [fp, #8]
   53edc:	ldr	r9, [fp, #20]
   53ee0:	mov	sl, #0
   53ee4:	sub	r7, fp, #176	; 0xb0
   53ee8:	ldr	r0, [r0]
   53eec:	str	r0, [sp, #44]	; 0x2c
   53ef0:	sub	r0, r0, #1
   53ef4:	str	r0, [fp, #-96]	; 0xffffffa0
   53ef8:	ldr	r0, [r1]
   53efc:	str	r0, [fp, #-176]	; 0xffffff50
   53f00:	str	r0, [sp, #40]	; 0x28
   53f04:	ldr	r0, [fp, #24]
   53f08:	ldr	r2, [r9]
   53f0c:	sub	r9, fp, #96	; 0x60
   53f10:	cmp	r0, #2
   53f14:	str	r2, [sp, #72]	; 0x48
   53f18:	str	r2, [sp, #76]	; 0x4c
   53f1c:	blt	54068 <GetDataSlab+0x240e8>
   53f20:	ldr	r3, [sp, #40]	; 0x28
   53f24:	ldr	r2, [sp, #72]	; 0x48
   53f28:	sub	r0, r1, #4
   53f2c:	sub	ip, r1, #12
   53f30:	mov	r6, #1
   53f34:	mov	lr, #0
   53f38:	mvn	r5, #15
   53f3c:	mov	sl, #0
   53f40:	mov	r8, r3
   53f44:	str	r2, [sp, #76]	; 0x4c
   53f48:	b	53f9c <GetDataSlab+0x2401c>
   53f4c:	ldr	r2, [fp, #12]
   53f50:	sub	r7, fp, #176	; 0xb0
   53f54:	sub	r9, fp, #96	; 0x60
   53f58:	add	ip, ip, #4
   53f5c:	str	r4, [r9, r6, lsl #2]
   53f60:	str	r3, [r7, r6, lsl #2]
   53f64:	ldr	r4, [sp, #76]	; 0x4c
   53f68:	ldr	r2, [r2, r6, lsl #2]
   53f6c:	mla	sl, r2, r8, sl
   53f70:	ldr	r2, [fp, #20]
   53f74:	mov	r8, r3
   53f78:	mov	r3, r1
   53f7c:	ldr	r1, [fp, #8]
   53f80:	ldr	r2, [r2, r6, lsl #2]
   53f84:	add	r6, r6, #1
   53f88:	mul	r4, r2, r4
   53f8c:	ldr	r2, [fp, #24]
   53f90:	str	r4, [sp, #76]	; 0x4c
   53f94:	cmp	r6, r2
   53f98:	beq	54068 <GetDataSlab+0x240e8>
   53f9c:	ldr	r2, [fp, #16]
   53fa0:	add	lr, lr, #1
   53fa4:	cmp	lr, #4
   53fa8:	ldr	r2, [r2, r6, lsl #2]
   53fac:	str	r3, [r7, r6, lsl #2]
   53fb0:	sub	r4, r2, #1
   53fb4:	str	r4, [r9, r6, lsl #2]
   53fb8:	ldr	r1, [r1, r6, lsl #2]
   53fbc:	bcs	53fcc <GetDataSlab+0x2404c>
   53fc0:	mov	r2, r1
   53fc4:	mov	r7, r6
   53fc8:	b	54050 <GetDataSlab+0x240d0>
   53fcc:	vmov.i32	q9, #1	; 0x00000001
   53fd0:	vmov.i32	q10, #1	; 0x00000001
   53fd4:	vmov.32	d23[1], r1
   53fd8:	vmov.i32	q8, #1	; 0x00000001
   53fdc:	bic	r9, lr, #3
   53fe0:	bic	r2, r6, #3
   53fe4:	sub	r7, r6, r9
   53fe8:	vmov.32	d18[0], r3
   53fec:	vmov.32	d20[0], r4
   53ff0:	mov	r3, ip
   53ff4:	vorr	d16, d18, d18
   53ff8:	vmov.i32	q9, #1	; 0x00000001
   53ffc:	vorr	d18, d20, d20
   54000:	vld1.32	{d20-d21}, [r3], r5
   54004:	subs	r2, r2, #4
   54008:	vrev64.32	q12, q10
   5400c:	vext.8	q12, q12, q12, #8
   54010:	vext.8	q11, q11, q12, #12
   54014:	vmul.i32	q9, q9, q12
   54018:	vmul.i32	q8, q11, q8
   5401c:	vorr	q11, q12, q12
   54020:	bne	54000 <GetDataSlab+0x24080>
   54024:	vext.8	q11, q9, q8, #8
   54028:	vext.8	q12, q8, q8, #8
   5402c:	cmp	lr, r9
   54030:	vmul.i32	q0, q9, q11
   54034:	vmul.i32	q1, q8, q12
   54038:	vmul.i32	q8, q0, d0[1]
   5403c:	vmul.i32	q9, q1, d2[1]
   54040:	vmov.32	r4, d16[0]
   54044:	vmov.32	r3, d18[0]
   54048:	beq	53f4c <GetDataSlab+0x23fcc>
   5404c:	vmov.32	r2, d20[0]
   54050:	mul	r3, r2, r3
   54054:	ldr	r2, [r0, r7, lsl #2]
   54058:	subs	r7, r7, #1
   5405c:	mul	r4, r4, r2
   54060:	bne	54050 <GetDataSlab+0x240d0>
   54064:	b	53f4c <GetDataSlab+0x23fcc>
   54068:	ldr	r0, [sp, #80]	; 0x50
   5406c:	add	r4, r0, sl, lsl #3
   54070:	ldr	r0, [sp, #44]	; 0x2c
   54074:	cmp	r0, #1
   54078:	bne	56934 <GetDataSlab+0x269b4>
   5407c:	ldr	r0, [sp, #76]	; 0x4c
   54080:	ldr	r1, [fp, #12]
   54084:	ldr	r3, [sp, #72]	; 0x48
   54088:	ldr	r8, [sp, #40]	; 0x28
   5408c:	cmp	r0, #1
   54090:	blt	56c18 <GetDataSlab+0x26c98>
   54094:	sub	r0, r3, #2
   54098:	mov	r2, #1
   5409c:	add	r2, r2, r0, lsr #1
   540a0:	lsr	r0, r0, #1
   540a4:	str	r0, [sp, #20]
   540a8:	ldr	r0, [sp, #88]	; 0x58
   540ac:	and	r6, r2, #1
   540b0:	sub	r2, r2, r6
   540b4:	str	r6, [sp, #28]
   540b8:	str	r2, [sp, #16]
   540bc:	sub	r2, fp, #136	; 0x88
   540c0:	orr	lr, r2, #4
   540c4:	ldr	r2, [fp, #20]
   540c8:	str	r0, [sp, #68]	; 0x44
   540cc:	mov	r0, #0
   540d0:	str	r0, [sp, #80]	; 0x50
   540d4:	mov	r0, #0
   540d8:	str	r0, [sp, #84]	; 0x54
   540dc:	add	r2, r2, #4
   540e0:	str	r2, [sp, #52]	; 0x34
   540e4:	orr	r2, r7, #4
   540e8:	str	r2, [sp, #48]	; 0x30
   540ec:	ldr	r2, [fp, #24]
   540f0:	sub	r2, r2, #1
   540f4:	str	r2, [sp, #44]	; 0x2c
   540f8:	sub	r2, fp, #96	; 0x60
   540fc:	orr	r2, r2, #4
   54100:	str	r2, [sp, #32]
   54104:	ldr	r2, [r1], #4
   54108:	str	r1, [sp, #92]	; 0x5c
   5410c:	add	r1, r3, r2
   54110:	str	r2, [sp, #60]	; 0x3c
   54114:	str	r1, [sp, #36]	; 0x24
   54118:	and	r1, r3, #1
   5411c:	str	r1, [sp, #56]	; 0x38
   54120:	lsl	r1, r3, #3
   54124:	str	r1, [sp, #64]	; 0x40
   54128:	bic	r1, r3, #1
   5412c:	str	r1, [sp, #24]
   54130:	b	54184 <GetDataSlab+0x24204>
   54134:	ldr	r1, [sp, #32]
   54138:	ldr	r0, [r1, r0]
   5413c:	add	r9, r9, r0, lsl #3
   54140:	add	sl, r0, sl
   54144:	ldr	r0, [sp, #64]	; 0x40
   54148:	ldr	r1, [sp, #68]	; 0x44
   5414c:	ldr	r3, [sp, #72]	; 0x48
   54150:	mov	r4, r9
   54154:	mov	r2, #0
   54158:	add	r1, r1, r0
   5415c:	ldr	r0, [sp, #80]	; 0x50
   54160:	str	r1, [sp, #68]	; 0x44
   54164:	ldr	r1, [sp, #84]	; 0x54
   54168:	add	r0, r0, #1
   5416c:	str	r0, [sp, #80]	; 0x50
   54170:	ldr	r0, [sp, #76]	; 0x4c
   54174:	add	r1, r1, r3
   54178:	str	r1, [sp, #84]	; 0x54
   5417c:	cmp	r1, r0
   54180:	bge	56c1c <GetDataSlab+0x26c9c>
   54184:	ldr	r1, [sp, #88]	; 0x58
   54188:	ldr	ip, [sp, #92]	; 0x5c
   5418c:	cmp	r3, #1
   54190:	mov	r9, r4
   54194:	blt	542e0 <GetDataSlab+0x24360>
   54198:	ldr	r0, [sp, #60]	; 0x3c
   5419c:	ldr	r2, [sp, #84]	; 0x54
   541a0:	mov	r3, #0
   541a4:	add	r0, r9, r0, lsl #3
   541a8:	add	r6, r1, r2, lsl #3
   541ac:	beq	54260 <GetDataSlab+0x242e0>
   541b0:	ldr	r2, [sp, #64]	; 0x40
   541b4:	ldr	r5, [sp, #80]	; 0x50
   541b8:	mla	r2, r2, r5, r1
   541bc:	ldr	r5, [sp, #36]	; 0x24
   541c0:	add	r7, r9, r5, lsl #3
   541c4:	cmp	r2, r7
   541c8:	bcs	541e4 <GetDataSlab+0x24264>
   541cc:	ldr	r2, [sp, #64]	; 0x40
   541d0:	ldr	r5, [sp, #80]	; 0x50
   541d4:	mla	r2, r2, r5, r2
   541d8:	add	r2, r1, r2
   541dc:	cmp	r2, r0
   541e0:	bhi	54260 <GetDataSlab+0x242e0>
   541e4:	ldr	r1, [sp, #20]
   541e8:	mov	r3, #0
   541ec:	cmp	r1, #0
   541f0:	beq	54228 <GetDataSlab+0x242a8>
   541f4:	ldr	ip, [sp, #68]	; 0x44
   541f8:	ldr	r9, [sp, #16]
   541fc:	mov	r2, r0
   54200:	mov	r1, #32
   54204:	add	r7, r2, #16
   54208:	vld1.64	{d16-d17}, [r2], r1
   5420c:	add	r8, ip, #16
   54210:	subs	r9, r9, #2
   54214:	add	r3, r3, #4
   54218:	vst1.64	{d16-d17}, [ip], r1
   5421c:	vld1.64	{d16-d17}, [r7]
   54220:	vst1.64	{d16-d17}, [r8]
   54224:	bne	54204 <GetDataSlab+0x24284>
   54228:	ldr	r1, [sp, #28]
   5422c:	ldr	r8, [sp, #40]	; 0x28
   54230:	mov	r9, r4
   54234:	cmp	r1, #0
   54238:	beq	5424c <GetDataSlab+0x242cc>
   5423c:	add	r2, r0, r3, lsl #3
   54240:	vld1.64	{d16-d17}, [r2]
   54244:	add	r2, r6, r3, lsl #3
   54248:	vst1.64	{d16-d17}, [r2]
   5424c:	ldr	r1, [sp, #72]	; 0x48
   54250:	ldr	r3, [sp, #24]
   54254:	ldr	ip, [sp, #92]	; 0x5c
   54258:	cmp	r1, r3
   5425c:	beq	542e0 <GetDataSlab+0x24360>
   54260:	ldr	r1, [sp, #56]	; 0x38
   54264:	mov	r7, r3
   54268:	cmp	r1, #0
   5426c:	beq	54288 <GetDataSlab+0x24308>
   54270:	mov	r2, r0
   54274:	ldr	r7, [r2, r3, lsl #3]!
   54278:	ldr	r2, [r2, #4]
   5427c:	str	r7, [r6, r3, lsl #3]!
   54280:	orr	r7, r3, #1
   54284:	str	r2, [r6, #4]
   54288:	ldr	r1, [sp, #72]	; 0x48
   5428c:	orr	r2, r3, #1
   54290:	cmp	r1, r2
   54294:	beq	542e0 <GetDataSlab+0x24360>
   54298:	ldr	r1, [sp, #72]	; 0x48
   5429c:	lsl	r3, r7, #3
   542a0:	sub	r2, r1, r7
   542a4:	ldr	r7, [sp, #68]	; 0x44
   542a8:	add	r6, r0, #16
   542ac:	ldr	r5, [r0, r3]!
   542b0:	add	r1, r7, #16
   542b4:	subs	r2, r2, #2
   542b8:	ldr	r4, [r0, #4]
   542bc:	str	r5, [r7, r3]!
   542c0:	str	r4, [r7, #4]
   542c4:	ldr	r5, [r0, #8]
   542c8:	ldr	r0, [r0, #12]
   542cc:	str	r0, [r7, #12]
   542d0:	str	r5, [r7, #8]
   542d4:	mov	r0, r6
   542d8:	mov	r7, r1
   542dc:	bne	542a8 <GetDataSlab+0x24328>
   542e0:	ldr	r0, [fp, #24]
   542e4:	add	r9, r9, r8, lsl #3
   542e8:	add	sl, sl, r8
   542ec:	cmp	r0, #2
   542f0:	blt	54144 <GetDataSlab+0x241c4>
   542f4:	ldr	r2, [sp, #44]	; 0x2c
   542f8:	ldr	r4, [sp, #52]	; 0x34
   542fc:	ldr	r5, [sp, #48]	; 0x30
   54300:	mov	r0, #0
   54304:	b	54330 <GetDataSlab+0x243b0>
   54308:	sub	r1, fp, #176	; 0xb0
   5430c:	ldr	r6, [ip, r0]
   54310:	sub	r3, r3, r7
   54314:	ldr	r1, [r1, r0]
   54318:	mla	r1, r6, r1, r3
   5431c:	add	sl, r1, sl
   54320:	add	r9, r9, r1, lsl #3
   54324:	subs	r2, r2, #1
   54328:	add	r0, r0, #4
   5432c:	beq	54144 <GetDataSlab+0x241c4>
   54330:	ldr	r1, [lr, r0]
   54334:	add	r1, r1, #1
   54338:	str	r1, [lr, r0]
   5433c:	ldr	r3, [r4, r0]
   54340:	sdiv	r7, r1, r3
   54344:	mls	r1, r7, r3, r1
   54348:	cmp	r1, #0
   5434c:	bne	54134 <GetDataSlab+0x241b4>
   54350:	ldr	r3, [r5, r0]
   54354:	mov	r1, #0
   54358:	str	r1, [lr, r0]
   5435c:	sdiv	r1, sl, r3
   54360:	mls	r7, r1, r3, sl
   54364:	cmp	r7, #0
   54368:	bne	54308 <GetDataSlab+0x24388>
   5436c:	ldr	r3, [ip, r0]
   54370:	cmp	r3, #0
   54374:	beq	54324 <GetDataSlab+0x243a4>
   54378:	sub	r1, fp, #176	; 0xb0
   5437c:	ldr	r1, [r1, r0]
   54380:	mla	sl, r1, r3, sl
   54384:	mul	r1, r1, r3
   54388:	b	54320 <GetDataSlab+0x243a0>
   5438c:	ldr	r0, [sp, #72]	; 0x48
   54390:	sub	r1, fp, #176	; 0xb0
   54394:	cmp	r0, #1
   54398:	ldr	r0, [sp, #88]	; 0x58
   5439c:	blt	56c18 <GetDataSlab+0x26c98>
   543a0:	ldr	r3, [sp, #68]	; 0x44
   543a4:	ldr	r2, [sp, #40]	; 0x28
   543a8:	orr	r1, r1, #4
   543ac:	str	r0, [sp, #76]	; 0x4c
   543b0:	mov	r0, #0
   543b4:	mov	sl, #0
   543b8:	str	r1, [sp, #84]	; 0x54
   543bc:	ldr	r1, [fp, #12]
   543c0:	str	r0, [sp, #64]	; 0x40
   543c4:	mls	r2, r3, lr, r2
   543c8:	add	r1, r1, #4
   543cc:	str	r1, [sp, #80]	; 0x50
   543d0:	ldr	r1, [fp, #24]
   543d4:	str	r2, [sp, #60]	; 0x3c
   543d8:	mul	r2, r3, lr
   543dc:	str	r2, [sp, #52]	; 0x34
   543e0:	sub	r2, fp, #136	; 0x88
   543e4:	sub	r1, r1, #1
   543e8:	orr	r4, r2, #4
   543ec:	ldr	r2, [fp, #20]
   543f0:	str	r1, [sp, #44]	; 0x2c
   543f4:	sub	r1, fp, #96	; 0x60
   543f8:	orr	r1, r1, #4
   543fc:	str	r1, [sp, #40]	; 0x28
   54400:	mov	r1, r3
   54404:	add	r6, r2, #4
   54408:	and	r2, r3, #1
   5440c:	sub	ip, r3, r2
   54410:	str	r2, [sp, #48]	; 0x30
   54414:	lsl	r2, r3, #3
   54418:	str	r2, [sp, #56]	; 0x38
   5441c:	b	54460 <GetDataSlab+0x244e0>
   54420:	ldr	r0, [sp, #40]	; 0x28
   54424:	ldr	r0, [r0, r2]
   54428:	add	r9, r9, r0
   5442c:	add	r7, r0, r7
   54430:	ldr	r0, [sp, #56]	; 0x38
   54434:	ldr	r1, [sp, #76]	; 0x4c
   54438:	ldr	r3, [sp, #64]	; 0x40
   5443c:	mov	r2, #0
   54440:	add	r1, r1, r0
   54444:	ldr	r0, [sp, #72]	; 0x48
   54448:	str	r1, [sp, #76]	; 0x4c
   5444c:	ldr	r1, [sp, #68]	; 0x44
   54450:	add	r3, r3, r1
   54454:	cmp	r3, r0
   54458:	str	r3, [sp, #64]	; 0x40
   5445c:	bge	56c1c <GetDataSlab+0x26c9c>
   54460:	ldr	r0, [fp, #12]
   54464:	cmp	r1, #1
   54468:	ldr	r2, [r0]
   5446c:	add	r5, r9, r2
   54470:	blt	544e4 <GetDataSlab+0x24564>
   54474:	ldr	r8, [sp, #88]	; 0x58
   54478:	mov	r0, #0
   5447c:	cmp	r1, #1
   54480:	beq	544b4 <GetDataSlab+0x24534>
   54484:	ldr	r1, [sp, #76]	; 0x4c
   54488:	mov	r0, #0
   5448c:	ldrb	r3, [r5]
   54490:	add	r0, r0, #2
   54494:	cmp	ip, r0
   54498:	stm	r1, {r3, sl}
   5449c:	ldrb	r3, [r5, lr]!
   544a0:	str	sl, [r1, #12]
   544a4:	add	r5, r5, lr
   544a8:	str	r3, [r1, #8]
   544ac:	add	r1, r1, #16
   544b0:	bne	5448c <GetDataSlab+0x2450c>
   544b4:	ldr	r1, [sp, #52]	; 0x34
   544b8:	ldr	r3, [sp, #48]	; 0x30
   544bc:	add	r1, r1, r7
   544c0:	cmp	r3, #0
   544c4:	beq	544dc <GetDataSlab+0x2455c>
   544c8:	ldr	r3, [sp, #64]	; 0x40
   544cc:	ldrb	r7, [r5], lr
   544d0:	add	r3, r8, r3, lsl #3
   544d4:	str	r7, [r3, r0, lsl #3]!
   544d8:	str	sl, [r3, #4]
   544dc:	add	r0, r1, r2
   544e0:	b	544e8 <GetDataSlab+0x24568>
   544e4:	add	r0, r2, r7
   544e8:	ldr	r1, [sp, #60]	; 0x3c
   544ec:	sub	r1, r1, r2
   544f0:	add	r7, r0, r1
   544f4:	ldr	r0, [fp, #24]
   544f8:	add	r9, r5, r1
   544fc:	cmp	r0, #2
   54500:	blt	54430 <GetDataSlab+0x244b0>
   54504:	ldr	r8, [sp, #44]	; 0x2c
   54508:	mov	r2, #0
   5450c:	b	5453c <GetDataSlab+0x245bc>
   54510:	ldr	r5, [sp, #80]	; 0x50
   54514:	sub	r3, fp, #176	; 0xb0
   54518:	sub	r0, r0, r1
   5451c:	ldr	r3, [r3, r2]
   54520:	ldr	r5, [r5, r2]
   54524:	mla	r0, r5, r3, r0
   54528:	add	r7, r0, r7
   5452c:	add	r9, r9, r0
   54530:	subs	r8, r8, #1
   54534:	add	r2, r2, #4
   54538:	beq	54430 <GetDataSlab+0x244b0>
   5453c:	ldr	r0, [r4, r2]
   54540:	add	r0, r0, #1
   54544:	str	r0, [r4, r2]
   54548:	ldr	r1, [r6, r2]
   5454c:	sdiv	r3, r0, r1
   54550:	mls	r0, r3, r1, r0
   54554:	cmp	r0, #0
   54558:	bne	54420 <GetDataSlab+0x244a0>
   5455c:	ldr	r0, [sp, #84]	; 0x54
   54560:	str	sl, [r4, r2]
   54564:	ldr	r0, [r0, r2]
   54568:	sdiv	r1, r7, r0
   5456c:	mls	r1, r1, r0, r7
   54570:	cmp	r1, #0
   54574:	bne	54510 <GetDataSlab+0x24590>
   54578:	ldr	r0, [sp, #80]	; 0x50
   5457c:	ldr	r0, [r0, r2]
   54580:	cmp	r0, #0
   54584:	beq	54530 <GetDataSlab+0x245b0>
   54588:	sub	r1, fp, #176	; 0xb0
   5458c:	ldr	r1, [r1, r2]
   54590:	mla	r7, r1, r0, r7
   54594:	mla	r9, r1, r0, r9
   54598:	b	54530 <GetDataSlab+0x245b0>
   5459c:	ldr	r0, [sp, #76]	; 0x4c
   545a0:	ldr	r2, [fp, #12]
   545a4:	ldr	r3, [fp, #20]
   545a8:	cmp	r0, #1
   545ac:	ldr	r0, [sp, #60]	; 0x3c
   545b0:	blt	56c18 <GetDataSlab+0x26c98>
   545b4:	mov	ip, r3
   545b8:	ldr	r3, [sp, #72]	; 0x48
   545bc:	ldr	r8, [r2], #4
   545c0:	lsl	sl, r7, #1
   545c4:	lsl	r9, r7, #2
   545c8:	add	lr, ip, #4
   545cc:	str	r2, [sp, #92]	; 0x5c
   545d0:	mls	r0, r3, r7, r0
   545d4:	str	r8, [sp, #64]	; 0x40
   545d8:	sub	r0, r0, r8
   545dc:	str	r0, [sp, #60]	; 0x3c
   545e0:	sub	r0, fp, #136	; 0x88
   545e4:	orr	r4, r0, #4
   545e8:	sub	r0, fp, #176	; 0xb0
   545ec:	orr	r0, r0, #4
   545f0:	str	r0, [sp, #84]	; 0x54
   545f4:	ldr	r0, [fp, #24]
   545f8:	sub	r0, r0, #1
   545fc:	str	r0, [sp, #44]	; 0x2c
   54600:	orr	r0, r6, #4
   54604:	str	r0, [sp, #40]	; 0x28
   54608:	mla	r0, r3, r7, r8
   5460c:	str	r0, [sp, #52]	; 0x34
   54610:	and	r0, r3, #1
   54614:	sub	r8, r3, r0
   54618:	str	r0, [sp, #48]	; 0x30
   5461c:	lsl	r0, r3, #3
   54620:	str	r0, [sp, #56]	; 0x38
   54624:	ldr	r0, [sp, #88]	; 0x58
   54628:	str	r0, [sp, #80]	; 0x50
   5462c:	mov	r0, #0
   54630:	str	r0, [sp, #68]	; 0x44
   54634:	b	54678 <GetDataSlab+0x246f8>
   54638:	ldr	r0, [sp, #40]	; 0x28
   5463c:	ldr	r0, [r0, r2]
   54640:	add	r5, r5, r0, lsl #1
   54644:	add	r1, r0, r1
   54648:	ldr	r0, [sp, #56]	; 0x38
   5464c:	ldr	r2, [sp, #80]	; 0x50
   54650:	ldr	r3, [sp, #72]	; 0x48
   54654:	ldr	r7, [sp, #68]	; 0x44
   54658:	add	r2, r2, r0
   5465c:	ldr	r0, [sp, #76]	; 0x4c
   54660:	add	r7, r7, r3
   54664:	str	r2, [sp, #80]	; 0x50
   54668:	mov	r2, #0
   5466c:	str	r7, [sp, #68]	; 0x44
   54670:	cmp	r7, r0
   54674:	bge	56c1c <GetDataSlab+0x26c9c>
   54678:	ldr	r6, [sp, #64]	; 0x40
   5467c:	cmp	r3, #1
   54680:	add	r2, r5, r6, lsl #1
   54684:	blt	54700 <GetDataSlab+0x24780>
   54688:	mov	r3, #0
   5468c:	beq	546d0 <GetDataSlab+0x24750>
   54690:	ldr	r5, [sp, #80]	; 0x50
   54694:	mov	r3, #0
   54698:	ldrsh	r6, [r2]
   5469c:	add	r3, r3, #2
   546a0:	cmp	r8, r3
   546a4:	str	r6, [r5]
   546a8:	asr	r6, r6, #31
   546ac:	str	r6, [r5, #4]
   546b0:	add	r6, r2, sl
   546b4:	add	r2, r2, r9
   546b8:	ldrsh	r6, [r6]
   546bc:	str	r6, [r5, #8]
   546c0:	asr	r6, r6, #31
   546c4:	str	r6, [r5, #12]
   546c8:	add	r5, r5, #16
   546cc:	bne	54698 <GetDataSlab+0x24718>
   546d0:	ldr	r0, [sp, #48]	; 0x30
   546d4:	ldr	r6, [sp, #52]	; 0x34
   546d8:	cmp	r0, #0
   546dc:	beq	54700 <GetDataSlab+0x24780>
   546e0:	ldr	r0, [sp, #88]	; 0x58
   546e4:	ldr	r7, [sp, #68]	; 0x44
   546e8:	ldrsh	r5, [r2], sl
   546ec:	add	r6, r0, r7, lsl #3
   546f0:	str	r5, [r6, r3, lsl #3]!
   546f4:	asr	r3, r5, #31
   546f8:	str	r3, [r6, #4]
   546fc:	ldr	r6, [sp, #52]	; 0x34
   54700:	ldr	r0, [sp, #60]	; 0x3c
   54704:	add	r1, r6, r1
   54708:	add	r5, r2, r0, lsl #1
   5470c:	add	r1, r1, r0
   54710:	ldr	r0, [fp, #24]
   54714:	cmp	r0, #2
   54718:	blt	54648 <GetDataSlab+0x246c8>
   5471c:	ldr	r3, [sp, #44]	; 0x2c
   54720:	mov	r2, #0
   54724:	b	54754 <GetDataSlab+0x247d4>
   54728:	ldr	r7, [sp, #92]	; 0x5c
   5472c:	sub	r0, fp, #176	; 0xb0
   54730:	sub	r6, r6, ip
   54734:	ldr	r0, [r0, r2]
   54738:	ldr	r7, [r7, r2]
   5473c:	mla	r0, r7, r0, r6
   54740:	add	r1, r0, r1
   54744:	add	r5, r5, r0, lsl #1
   54748:	subs	r3, r3, #1
   5474c:	add	r2, r2, #4
   54750:	beq	54648 <GetDataSlab+0x246c8>
   54754:	ldr	r6, [r4, r2]
   54758:	add	r6, r6, #1
   5475c:	str	r6, [r4, r2]
   54760:	ldr	r7, [lr, r2]
   54764:	sdiv	r0, r6, r7
   54768:	mls	r0, r0, r7, r6
   5476c:	cmp	r0, #0
   54770:	bne	54638 <GetDataSlab+0x246b8>
   54774:	mov	r0, #0
   54778:	str	r0, [r4, r2]
   5477c:	ldr	r0, [sp, #84]	; 0x54
   54780:	ldr	r6, [r0, r2]
   54784:	sdiv	r0, r1, r6
   54788:	mls	ip, r0, r6, r1
   5478c:	cmp	ip, #0
   54790:	bne	54728 <GetDataSlab+0x247a8>
   54794:	ldr	r0, [sp, #92]	; 0x5c
   54798:	ldr	r6, [r0, r2]
   5479c:	cmp	r6, #0
   547a0:	beq	54748 <GetDataSlab+0x247c8>
   547a4:	sub	r0, fp, #176	; 0xb0
   547a8:	ldr	r0, [r0, r2]
   547ac:	mla	r1, r0, r6, r1
   547b0:	mul	r0, r0, r6
   547b4:	b	54744 <GetDataSlab+0x247c4>
   547b8:	ldr	r0, [sp, #76]	; 0x4c
   547bc:	ldr	r2, [fp, #12]
   547c0:	sub	r3, fp, #96	; 0x60
   547c4:	cmp	r0, #1
   547c8:	ldr	r0, [sp, #56]	; 0x38
   547cc:	blt	56c18 <GetDataSlab+0x26c98>
   547d0:	ldr	r7, [sp, #72]	; 0x48
   547d4:	ldr	r5, [r2], #4
   547d8:	ldr	r4, [sp, #44]	; 0x2c
   547dc:	lsl	sl, r6, #1
   547e0:	lsl	r8, r6, #2
   547e4:	mov	lr, #0
   547e8:	str	r2, [sp, #92]	; 0x5c
   547ec:	mls	r0, r7, r6, r0
   547f0:	mla	r2, r7, r6, r5
   547f4:	str	r5, [sp, #60]	; 0x3c
   547f8:	sub	r0, r0, r5
   547fc:	str	r2, [sp, #48]	; 0x30
   54800:	and	r2, r7, #1
   54804:	ldr	r5, [sp, #88]	; 0x58
   54808:	str	r0, [sp, #56]	; 0x38
   5480c:	sub	r0, fp, #136	; 0x88
   54810:	str	r2, [sp, #40]	; 0x28
   54814:	sub	r2, r7, r2
   54818:	orr	r9, r0, #4
   5481c:	ldr	r0, [fp, #20]
   54820:	str	r2, [sp, #32]
   54824:	lsl	r2, r7, #3
   54828:	str	r2, [sp, #52]	; 0x34
   5482c:	mov	r2, #0
   54830:	str	r2, [sp, #68]	; 0x44
   54834:	add	r0, r0, #4
   54838:	str	r0, [sp, #84]	; 0x54
   5483c:	orr	r0, ip, #4
   54840:	str	r0, [sp, #80]	; 0x50
   54844:	ldr	r0, [fp, #24]
   54848:	sub	r0, r0, #1
   5484c:	str	r0, [sp, #36]	; 0x24
   54850:	orr	r0, r3, #4
   54854:	str	r0, [sp, #28]
   54858:	mov	r0, r7
   5485c:	b	5489c <GetDataSlab+0x2491c>
   54860:	ldr	r0, [sp, #28]
   54864:	ldr	r0, [r0, r2]
   54868:	add	r4, r4, r0, lsl #1
   5486c:	add	r1, r0, r1
   54870:	ldr	r0, [sp, #52]	; 0x34
   54874:	ldr	r5, [sp, #64]	; 0x40
   54878:	ldr	r7, [sp, #68]	; 0x44
   5487c:	ldr	r3, [sp, #76]	; 0x4c
   54880:	mov	r2, #0
   54884:	add	r5, r5, r0
   54888:	ldr	r0, [sp, #72]	; 0x48
   5488c:	add	r7, r7, r0
   54890:	cmp	r7, r3
   54894:	str	r7, [sp, #68]	; 0x44
   54898:	bge	56c1c <GetDataSlab+0x26c9c>
   5489c:	ldr	ip, [sp, #60]	; 0x3c
   548a0:	cmp	r0, #1
   548a4:	str	r5, [sp, #64]	; 0x40
   548a8:	add	r2, r4, ip, lsl #1
   548ac:	blt	54918 <GetDataSlab+0x24998>
   548b0:	mov	r3, #0
   548b4:	beq	548ec <GetDataSlab+0x2496c>
   548b8:	ldr	r0, [sp, #32]
   548bc:	mov	r3, #0
   548c0:	ldrh	r7, [r2]
   548c4:	add	r3, r3, #2
   548c8:	cmp	r0, r3
   548cc:	stm	r5, {r7, lr}
   548d0:	add	r7, r2, sl
   548d4:	add	r2, r2, r8
   548d8:	ldrh	r7, [r7]
   548dc:	str	lr, [r5, #12]
   548e0:	str	r7, [r5, #8]
   548e4:	add	r5, r5, #16
   548e8:	bne	548c0 <GetDataSlab+0x24940>
   548ec:	ldr	r0, [sp, #40]	; 0x28
   548f0:	ldr	ip, [sp, #48]	; 0x30
   548f4:	cmp	r0, #0
   548f8:	beq	54918 <GetDataSlab+0x24998>
   548fc:	ldr	r0, [sp, #88]	; 0x58
   54900:	ldr	r7, [sp, #68]	; 0x44
   54904:	ldrh	r6, [r2], sl
   54908:	add	r7, r0, r7, lsl #3
   5490c:	str	r6, [r7, r3, lsl #3]!
   54910:	ldr	ip, [sp, #48]	; 0x30
   54914:	str	lr, [r7, #4]
   54918:	ldr	r0, [sp, #56]	; 0x38
   5491c:	add	r1, ip, r1
   54920:	add	r4, r2, r0, lsl #1
   54924:	add	r1, r1, r0
   54928:	ldr	r0, [fp, #24]
   5492c:	cmp	r0, #2
   54930:	blt	54870 <GetDataSlab+0x248f0>
   54934:	ldr	r3, [sp, #36]	; 0x24
   54938:	mov	r2, #0
   5493c:	sub	ip, fp, #176	; 0xb0
   54940:	b	5496c <GetDataSlab+0x249ec>
   54944:	ldr	r0, [sp, #92]	; 0x5c
   54948:	ldr	r5, [ip, r2]
   5494c:	sub	r7, r6, r7
   54950:	ldr	r0, [r0, r2]
   54954:	mla	r0, r0, r5, r7
   54958:	add	r1, r0, r1
   5495c:	add	r4, r4, r0, lsl #1
   54960:	subs	r3, r3, #1
   54964:	add	r2, r2, #4
   54968:	beq	54870 <GetDataSlab+0x248f0>
   5496c:	ldr	r7, [r9, r2]
   54970:	ldr	r0, [sp, #84]	; 0x54
   54974:	add	r7, r7, #1
   54978:	str	r7, [r9, r2]
   5497c:	ldr	r6, [r0, r2]
   54980:	sdiv	r5, r7, r6
   54984:	mls	r7, r5, r6, r7
   54988:	cmp	r7, #0
   5498c:	bne	54860 <GetDataSlab+0x248e0>
   54990:	ldr	r0, [sp, #80]	; 0x50
   54994:	str	lr, [r9, r2]
   54998:	ldr	r6, [r0, r2]
   5499c:	sdiv	r7, r1, r6
   549a0:	mls	r7, r7, r6, r1
   549a4:	cmp	r7, #0
   549a8:	bne	54944 <GetDataSlab+0x249c4>
   549ac:	ldr	r0, [sp, #92]	; 0x5c
   549b0:	ldr	r7, [r0, r2]
   549b4:	cmp	r7, #0
   549b8:	beq	54960 <GetDataSlab+0x249e0>
   549bc:	ldr	r0, [ip, r2]
   549c0:	mla	r1, r0, r7, r1
   549c4:	mul	r0, r0, r7
   549c8:	b	5495c <GetDataSlab+0x249dc>
   549cc:	ldr	r0, [sp, #76]	; 0x4c
   549d0:	ldr	r1, [sp, #72]	; 0x48
   549d4:	ldr	r7, [sp, #52]	; 0x34
   549d8:	cmp	r0, #1
   549dc:	ldr	r0, [fp, #20]
   549e0:	blt	56c18 <GetDataSlab+0x26c98>
   549e4:	add	lr, r0, #4
   549e8:	ldr	r0, [fp, #12]
   549ec:	mls	r1, r1, r4, r7
   549f0:	orr	r2, r2, #4
   549f4:	lsl	r9, r4, #3
   549f8:	str	r1, [sp, #64]	; 0x40
   549fc:	sub	r1, fp, #136	; 0x88
   54a00:	add	r0, r0, #4
   54a04:	orr	r6, r1, #4
   54a08:	ldr	r1, [sp, #72]	; 0x48
   54a0c:	str	r0, [sp, #84]	; 0x54
   54a10:	ldr	r0, [fp, #24]
   54a14:	sub	r0, r0, #1
   54a18:	str	r0, [sp, #44]	; 0x2c
   54a1c:	sub	r0, fp, #96	; 0x60
   54a20:	orr	r0, r0, #4
   54a24:	str	r0, [sp, #40]	; 0x28
   54a28:	mul	r0, r1, r4
   54a2c:	mov	r4, r2
   54a30:	str	r0, [sp, #52]	; 0x34
   54a34:	and	r0, r1, #1
   54a38:	sub	ip, r1, r0
   54a3c:	str	r0, [sp, #48]	; 0x30
   54a40:	lsl	r0, r1, #3
   54a44:	str	r0, [sp, #60]	; 0x3c
   54a48:	ldr	r0, [sp, #88]	; 0x58
   54a4c:	str	r0, [sp, #80]	; 0x50
   54a50:	mov	r0, #0
   54a54:	str	r0, [sp, #68]	; 0x44
   54a58:	b	54a9c <GetDataSlab+0x24b1c>
   54a5c:	ldr	r0, [sp, #40]	; 0x28
   54a60:	ldr	r0, [r0, r2]
   54a64:	add	r8, r8, r0, lsl #2
   54a68:	add	r3, r0, r3
   54a6c:	ldr	r0, [sp, #60]	; 0x3c
   54a70:	ldr	r1, [sp, #80]	; 0x50
   54a74:	ldr	r5, [sp, #68]	; 0x44
   54a78:	mov	r2, #0
   54a7c:	add	r1, r1, r0
   54a80:	ldr	r0, [sp, #76]	; 0x4c
   54a84:	str	r1, [sp, #80]	; 0x50
   54a88:	ldr	r1, [sp, #72]	; 0x48
   54a8c:	add	r5, r5, r1
   54a90:	cmp	r5, r0
   54a94:	str	r5, [sp, #68]	; 0x44
   54a98:	bge	56c1c <GetDataSlab+0x26c9c>
   54a9c:	ldr	r0, [fp, #12]
   54aa0:	cmp	r1, #1
   54aa4:	ldr	r2, [r0]
   54aa8:	add	r5, r8, r2, lsl #2
   54aac:	blt	54acc <GetDataSlab+0x24b4c>
   54ab0:	mov	sl, r4
   54ab4:	ldr	r4, [sp, #56]	; 0x38
   54ab8:	mov	r7, #0
   54abc:	cmp	r1, #1
   54ac0:	bne	54ad4 <GetDataSlab+0x24b54>
   54ac4:	ldr	r8, [sp, #88]	; 0x58
   54ac8:	b	54b14 <GetDataSlab+0x24b94>
   54acc:	add	r0, r2, r3
   54ad0:	b	54b48 <GetDataSlab+0x24bc8>
   54ad4:	ldr	r0, [sp, #80]	; 0x50
   54ad8:	ldr	r8, [sp, #88]	; 0x58
   54adc:	mov	r7, #0
   54ae0:	ldr	r1, [r5]
   54ae4:	add	r7, r7, #2
   54ae8:	cmp	ip, r7
   54aec:	str	r1, [r0]
   54af0:	asr	r1, r1, #31
   54af4:	str	r1, [r0, #4]
   54af8:	ldr	r1, [r5, r4, lsl #2]
   54afc:	add	r5, r5, r9
   54b00:	str	r1, [r0, #8]
   54b04:	asr	r1, r1, #31
   54b08:	str	r1, [r0, #12]
   54b0c:	add	r0, r0, #16
   54b10:	bne	54ae0 <GetDataSlab+0x24b60>
   54b14:	ldr	r0, [sp, #52]	; 0x34
   54b18:	ldr	r1, [sp, #48]	; 0x30
   54b1c:	add	r0, r0, r3
   54b20:	cmp	r1, #0
   54b24:	beq	54b40 <GetDataSlab+0x24bc0>
   54b28:	ldr	r1, [sp, #68]	; 0x44
   54b2c:	ldr	r3, [r5], r4, lsl #2
   54b30:	add	r1, r8, r1, lsl #3
   54b34:	str	r3, [r1, r7, lsl #3]!
   54b38:	asr	r3, r3, #31
   54b3c:	str	r3, [r1, #4]
   54b40:	add	r0, r0, r2
   54b44:	mov	r4, sl
   54b48:	ldr	r1, [sp, #64]	; 0x40
   54b4c:	sub	r1, r1, r2
   54b50:	add	r3, r0, r1
   54b54:	ldr	r0, [fp, #24]
   54b58:	add	r8, r5, r1, lsl #2
   54b5c:	cmp	r0, #2
   54b60:	blt	54a6c <GetDataSlab+0x24aec>
   54b64:	ldr	r5, [sp, #44]	; 0x2c
   54b68:	mov	r2, #0
   54b6c:	b	54b9c <GetDataSlab+0x24c1c>
   54b70:	ldr	r7, [sp, #84]	; 0x54
   54b74:	sub	r1, fp, #176	; 0xb0
   54b78:	sub	r0, r0, sl
   54b7c:	ldr	r1, [r1, r2]
   54b80:	ldr	r7, [r7, r2]
   54b84:	mla	r0, r7, r1, r0
   54b88:	add	r3, r0, r3
   54b8c:	add	r8, r8, r0, lsl #2
   54b90:	subs	r5, r5, #1
   54b94:	add	r2, r2, #4
   54b98:	beq	54a6c <GetDataSlab+0x24aec>
   54b9c:	ldr	r0, [r6, r2]
   54ba0:	add	r0, r0, #1
   54ba4:	str	r0, [r6, r2]
   54ba8:	ldr	r1, [lr, r2]
   54bac:	sdiv	r7, r0, r1
   54bb0:	mls	r0, r7, r1, r0
   54bb4:	cmp	r0, #0
   54bb8:	bne	54a5c <GetDataSlab+0x24adc>
   54bbc:	mov	r0, #0
   54bc0:	str	r0, [r6, r2]
   54bc4:	ldr	r0, [r4, r2]
   54bc8:	sdiv	r1, r3, r0
   54bcc:	mls	sl, r1, r0, r3
   54bd0:	cmp	sl, #0
   54bd4:	bne	54b70 <GetDataSlab+0x24bf0>
   54bd8:	ldr	r0, [sp, #84]	; 0x54
   54bdc:	ldr	r0, [r0, r2]
   54be0:	cmp	r0, #0
   54be4:	beq	54b90 <GetDataSlab+0x24c10>
   54be8:	sub	r1, fp, #176	; 0xb0
   54bec:	ldr	r1, [r1, r2]
   54bf0:	mla	r3, r1, r0, r3
   54bf4:	mul	r0, r1, r0
   54bf8:	b	54b8c <GetDataSlab+0x24c0c>
   54bfc:	ldr	r0, [sp, #72]	; 0x48
   54c00:	sub	r1, fp, #96	; 0x60
   54c04:	cmp	r0, #1
   54c08:	ldr	r0, [fp, #12]
   54c0c:	blt	56c18 <GetDataSlab+0x26c98>
   54c10:	add	r0, r0, #4
   54c14:	mov	ip, r1
   54c18:	ldr	r5, [sp, #48]	; 0x30
   54c1c:	ldr	r1, [sp, #68]	; 0x44
   54c20:	ldr	r2, [sp, #52]	; 0x34
   54c24:	str	r0, [sp, #76]	; 0x4c
   54c28:	ldr	r0, [fp, #24]
   54c2c:	ldr	r4, [sp, #76]	; 0x4c
   54c30:	mls	r2, r1, r5, r2
   54c34:	lsl	r9, r5, #3
   54c38:	sub	r0, r0, #1
   54c3c:	str	r0, [sp, #36]	; 0x24
   54c40:	orr	r0, ip, #4
   54c44:	mov	ip, #0
   54c48:	str	r0, [sp, #32]
   54c4c:	mul	r0, r1, r5
   54c50:	str	r2, [sp, #56]	; 0x38
   54c54:	sub	r2, fp, #136	; 0x88
   54c58:	orr	r6, r2, #4
   54c5c:	ldr	r2, [fp, #20]
   54c60:	str	r0, [sp, #44]	; 0x2c
   54c64:	and	r0, r1, #1
   54c68:	sub	r8, r1, r0
   54c6c:	str	r0, [sp, #40]	; 0x28
   54c70:	lsl	r0, r1, #3
   54c74:	str	r0, [sp, #52]	; 0x34
   54c78:	ldr	r0, [sp, #88]	; 0x58
   54c7c:	add	r2, r2, #4
   54c80:	str	r2, [sp, #84]	; 0x54
   54c84:	orr	r2, r7, #4
   54c88:	str	r2, [sp, #80]	; 0x50
   54c8c:	str	r0, [sp, #64]	; 0x40
   54c90:	mov	r0, #0
   54c94:	str	r0, [sp, #60]	; 0x3c
   54c98:	b	54cdc <GetDataSlab+0x24d5c>
   54c9c:	ldr	r0, [sp, #32]
   54ca0:	ldr	r0, [r0, r2]
   54ca4:	add	sl, sl, r0, lsl #2
   54ca8:	add	r3, r0, r3
   54cac:	ldr	r0, [sp, #52]	; 0x34
   54cb0:	ldr	r1, [sp, #64]	; 0x40
   54cb4:	ldr	r7, [sp, #60]	; 0x3c
   54cb8:	mov	r2, #0
   54cbc:	add	r1, r1, r0
   54cc0:	ldr	r0, [sp, #72]	; 0x48
   54cc4:	str	r1, [sp, #64]	; 0x40
   54cc8:	ldr	r1, [sp, #68]	; 0x44
   54ccc:	add	r7, r7, r1
   54cd0:	cmp	r7, r0
   54cd4:	str	r7, [sp, #60]	; 0x3c
   54cd8:	bge	56c1c <GetDataSlab+0x26c9c>
   54cdc:	ldr	r0, [fp, #12]
   54ce0:	cmp	r1, #1
   54ce4:	ldr	r2, [r0]
   54ce8:	add	r5, sl, r2, lsl #2
   54cec:	blt	54d68 <GetDataSlab+0x24de8>
   54cf0:	mov	r7, #0
   54cf4:	cmp	r1, #1
   54cf8:	beq	54d30 <GetDataSlab+0x24db0>
   54cfc:	ldr	sl, [sp, #64]	; 0x40
   54d00:	ldr	r1, [sp, #48]	; 0x30
   54d04:	mov	r7, #0
   54d08:	ldr	r0, [r5]
   54d0c:	add	r7, r7, #2
   54d10:	cmp	r8, r7
   54d14:	stm	sl, {r0, ip}
   54d18:	ldr	r0, [r5, r1, lsl #2]
   54d1c:	str	ip, [sl, #12]
   54d20:	add	r5, r5, r9
   54d24:	str	r0, [sl, #8]
   54d28:	add	sl, sl, #16
   54d2c:	bne	54d08 <GetDataSlab+0x24d88>
   54d30:	ldr	r0, [sp, #44]	; 0x2c
   54d34:	add	r3, r0, r3
   54d38:	ldr	r0, [sp, #40]	; 0x28
   54d3c:	cmp	r0, #0
   54d40:	beq	54d60 <GetDataSlab+0x24de0>
   54d44:	ldr	r0, [sp, #88]	; 0x58
   54d48:	ldr	r1, [sp, #60]	; 0x3c
   54d4c:	add	r0, r0, r1, lsl #3
   54d50:	ldr	r1, [sp, #48]	; 0x30
   54d54:	ldr	r1, [r5], r1, lsl #2
   54d58:	str	r1, [r0, r7, lsl #3]!
   54d5c:	str	ip, [r0, #4]
   54d60:	add	r3, r3, r2
   54d64:	b	54d6c <GetDataSlab+0x24dec>
   54d68:	add	r3, r2, r3
   54d6c:	ldr	r0, [sp, #56]	; 0x38
   54d70:	sub	r0, r0, r2
   54d74:	add	sl, r5, r0, lsl #2
   54d78:	add	r3, r3, r0
   54d7c:	ldr	r0, [fp, #24]
   54d80:	cmp	r0, #2
   54d84:	blt	54cac <GetDataSlab+0x24d2c>
   54d88:	ldr	r5, [sp, #36]	; 0x24
   54d8c:	mov	r2, #0
   54d90:	b	54dbc <GetDataSlab+0x24e3c>
   54d94:	sub	r7, fp, #176	; 0xb0
   54d98:	ldr	lr, [r4, r2]
   54d9c:	sub	r0, r0, r1
   54da0:	ldr	r7, [r7, r2]
   54da4:	mla	r0, lr, r7, r0
   54da8:	add	r3, r0, r3
   54dac:	add	sl, sl, r0, lsl #2
   54db0:	subs	r5, r5, #1
   54db4:	add	r2, r2, #4
   54db8:	beq	54cac <GetDataSlab+0x24d2c>
   54dbc:	ldr	r0, [r6, r2]
   54dc0:	ldr	r1, [sp, #84]	; 0x54
   54dc4:	add	r0, r0, #1
   54dc8:	str	r0, [r6, r2]
   54dcc:	ldr	r1, [r1, r2]
   54dd0:	sdiv	r7, r0, r1
   54dd4:	mls	r0, r7, r1, r0
   54dd8:	cmp	r0, #0
   54ddc:	bne	54c9c <GetDataSlab+0x24d1c>
   54de0:	ldr	r0, [sp, #80]	; 0x50
   54de4:	str	ip, [r6, r2]
   54de8:	ldr	r0, [r0, r2]
   54dec:	sdiv	r1, r3, r0
   54df0:	mls	r1, r1, r0, r3
   54df4:	cmp	r1, #0
   54df8:	bne	54d94 <GetDataSlab+0x24e14>
   54dfc:	ldr	r0, [sp, #76]	; 0x4c
   54e00:	ldr	r0, [r0, r2]
   54e04:	cmp	r0, #0
   54e08:	beq	54db0 <GetDataSlab+0x24e30>
   54e0c:	sub	r1, fp, #176	; 0xb0
   54e10:	ldr	r1, [r1, r2]
   54e14:	mla	r3, r1, r0, r3
   54e18:	mul	r0, r1, r0
   54e1c:	b	54dac <GetDataSlab+0x24e2c>
   54e20:	ldr	r0, [sp, #76]	; 0x4c
   54e24:	ldr	r1, [fp, #12]
   54e28:	ldr	lr, [sp, #68]	; 0x44
   54e2c:	sub	r3, fp, #96	; 0x60
   54e30:	cmp	r0, #1
   54e34:	blt	56c18 <GetDataSlab+0x26c98>
   54e38:	ldr	r6, [sp, #36]	; 0x24
   54e3c:	ldr	r0, [sp, #72]	; 0x48
   54e40:	ldr	sl, [r1], #4
   54e44:	str	r1, [sp, #92]	; 0x5c
   54e48:	sub	r1, fp, #136	; 0x88
   54e4c:	mls	r0, lr, r6, r0
   54e50:	str	sl, [sp, #44]	; 0x2c
   54e54:	sub	r0, r0, sl
   54e58:	str	r0, [sp, #60]	; 0x3c
   54e5c:	orr	r0, r1, #4
   54e60:	ldr	r1, [sp, #88]	; 0x58
   54e64:	str	r0, [sp, #52]	; 0x34
   54e68:	ldr	r0, [fp, #20]
   54e6c:	add	r0, r0, #4
   54e70:	str	r0, [sp, #84]	; 0x54
   54e74:	orr	r0, r2, #4
   54e78:	str	r0, [sp, #80]	; 0x50
   54e7c:	ldr	r0, [fp, #24]
   54e80:	sub	r0, r0, #1
   54e84:	str	r0, [sp, #32]
   54e88:	orr	r0, r3, #4
   54e8c:	str	r0, [sp, #16]
   54e90:	mla	r0, lr, r6, sl
   54e94:	str	r0, [sp, #48]	; 0x30
   54e98:	and	r0, lr, #1
   54e9c:	str	r0, [sp, #40]	; 0x28
   54ea0:	sub	r0, lr, r0
   54ea4:	str	r0, [sp, #28]
   54ea8:	lsl	r0, lr, #3
   54eac:	str	r0, [sp, #56]	; 0x38
   54eb0:	lsl	r0, r6, #2
   54eb4:	str	r0, [sp, #24]
   54eb8:	lsl	r0, r6, #3
   54ebc:	str	r0, [sp, #20]
   54ec0:	mov	r0, #0
   54ec4:	str	r0, [sp, #72]	; 0x48
   54ec8:	b	54f04 <GetDataSlab+0x24f84>
   54ecc:	ldr	r1, [sp, #16]
   54ed0:	ldr	r0, [r1, r0]
   54ed4:	add	r5, r5, r0, lsl #2
   54ed8:	add	r8, r0, r8
   54edc:	ldr	r0, [sp, #56]	; 0x38
   54ee0:	ldr	r1, [sp, #64]	; 0x40
   54ee4:	ldr	r3, [sp, #72]	; 0x48
   54ee8:	mov	r2, #0
   54eec:	add	r1, r1, r0
   54ef0:	ldr	r0, [sp, #76]	; 0x4c
   54ef4:	add	r3, r3, lr
   54ef8:	str	r3, [sp, #72]	; 0x48
   54efc:	cmp	r3, r0
   54f00:	bge	56c1c <GetDataSlab+0x26c9c>
   54f04:	add	r4, r5, sl, lsl #2
   54f08:	cmp	lr, #1
   54f0c:	str	r1, [sp, #64]	; 0x40
   54f10:	blt	54fac <GetDataSlab+0x2502c>
   54f14:	mov	r7, r8
   54f18:	mov	r6, #0
   54f1c:	beq	54f60 <GetDataSlab+0x24fe0>
   54f20:	ldr	r5, [sp, #28]
   54f24:	ldr	r8, [sp, #24]
   54f28:	ldr	r9, [sp, #20]
   54f2c:	mov	r6, #0
   54f30:	mov	sl, r1
   54f34:	ldr	r0, [r4]
   54f38:	bl	6b970 <__aeabi_f2ulz>
   54f3c:	strd	r0, [sl]
   54f40:	ldr	r0, [r4, r8]
   54f44:	bl	6b970 <__aeabi_f2ulz>
   54f48:	add	r6, r6, #2
   54f4c:	strd	r0, [sl, #8]
   54f50:	add	r4, r4, r9
   54f54:	add	sl, sl, #16
   54f58:	cmp	r5, r6
   54f5c:	bne	54f34 <GetDataSlab+0x24fb4>
   54f60:	ldr	r0, [sp, #40]	; 0x28
   54f64:	ldr	lr, [sp, #68]	; 0x44
   54f68:	ldr	sl, [sp, #44]	; 0x2c
   54f6c:	mov	r8, r7
   54f70:	cmp	r0, #0
   54f74:	ldr	r0, [sp, #48]	; 0x30
   54f78:	beq	54fb0 <GetDataSlab+0x25030>
   54f7c:	ldr	r0, [sp, #88]	; 0x58
   54f80:	ldr	r1, [sp, #72]	; 0x48
   54f84:	add	sl, r0, r1, lsl #3
   54f88:	ldr	r0, [sp, #36]	; 0x24
   54f8c:	ldr	r0, [r4], r0, lsl #2
   54f90:	bl	6b970 <__aeabi_f2ulz>
   54f94:	ldr	lr, [sp, #68]	; 0x44
   54f98:	str	r0, [sl, r6, lsl #3]!
   54f9c:	ldr	r0, [sp, #48]	; 0x30
   54fa0:	str	r1, [sl, #4]
   54fa4:	ldr	sl, [sp, #44]	; 0x2c
   54fa8:	b	54fb0 <GetDataSlab+0x25030>
   54fac:	mov	r0, sl
   54fb0:	ldr	r1, [sp, #60]	; 0x3c
   54fb4:	add	r0, r0, r8
   54fb8:	ldr	r7, [sp, #52]	; 0x34
   54fbc:	mov	r9, #0
   54fc0:	add	r8, r0, r1
   54fc4:	ldr	r0, [fp, #24]
   54fc8:	add	r5, r4, r1, lsl #2
   54fcc:	cmp	r0, #2
   54fd0:	blt	54edc <GetDataSlab+0x24f5c>
   54fd4:	ldr	r1, [sp, #32]
   54fd8:	mov	r0, #0
   54fdc:	sub	ip, fp, #176	; 0xb0
   54fe0:	b	5500c <GetDataSlab+0x2508c>
   54fe4:	ldr	r4, [sp, #92]	; 0x5c
   54fe8:	ldr	r6, [ip, r0]
   54fec:	sub	r2, r2, r3
   54ff0:	ldr	r4, [r4, r0]
   54ff4:	mla	r2, r4, r6, r2
   54ff8:	add	r8, r2, r8
   54ffc:	add	r5, r5, r2, lsl #2
   55000:	subs	r1, r1, #1
   55004:	add	r0, r0, #4
   55008:	beq	54edc <GetDataSlab+0x24f5c>
   5500c:	ldr	r2, [r7, r0]
   55010:	ldr	r3, [sp, #84]	; 0x54
   55014:	add	r2, r2, #1
   55018:	str	r2, [r7, r0]
   5501c:	ldr	r3, [r3, r0]
   55020:	sdiv	r6, r2, r3
   55024:	mls	r2, r6, r3, r2
   55028:	cmp	r2, #0
   5502c:	bne	54ecc <GetDataSlab+0x24f4c>
   55030:	ldr	r2, [sp, #80]	; 0x50
   55034:	str	r9, [r7, r0]
   55038:	ldr	r2, [r2, r0]
   5503c:	sdiv	r3, r8, r2
   55040:	mls	r3, r3, r2, r8
   55044:	cmp	r3, #0
   55048:	bne	54fe4 <GetDataSlab+0x25064>
   5504c:	ldr	r2, [sp, #92]	; 0x5c
   55050:	ldr	r2, [r2, r0]
   55054:	cmp	r2, #0
   55058:	beq	55000 <GetDataSlab+0x25080>
   5505c:	ldr	r3, [ip, r0]
   55060:	mla	r8, r3, r2, r8
   55064:	mul	r2, r3, r2
   55068:	b	54ffc <GetDataSlab+0x2507c>
   5506c:	ldr	r0, [sp, #76]	; 0x4c
   55070:	ldr	r1, [fp, #12]
   55074:	ldr	ip, [sp, #72]	; 0x48
   55078:	sub	r3, fp, #96	; 0x60
   5507c:	cmp	r0, #1
   55080:	blt	56c18 <GetDataSlab+0x26c98>
   55084:	ldr	r6, [sp, #36]	; 0x24
   55088:	ldr	r0, [sp, #68]	; 0x44
   5508c:	ldr	r4, [r1], #4
   55090:	mov	lr, r5
   55094:	mov	r7, #0
   55098:	str	r1, [sp, #92]	; 0x5c
   5509c:	sub	r1, fp, #136	; 0x88
   550a0:	mls	r0, ip, r6, r0
   550a4:	str	r4, [sp, #60]	; 0x3c
   550a8:	sub	r0, r0, r4
   550ac:	str	r0, [sp, #56]	; 0x38
   550b0:	orr	r0, r1, #4
   550b4:	str	r0, [sp, #48]	; 0x30
   550b8:	ldr	r0, [fp, #20]
   550bc:	add	r0, r0, #4
   550c0:	str	r0, [sp, #84]	; 0x54
   550c4:	orr	r0, r2, #4
   550c8:	str	r0, [sp, #80]	; 0x50
   550cc:	ldr	r0, [fp, #24]
   550d0:	sub	r0, r0, #1
   550d4:	str	r0, [sp, #32]
   550d8:	orr	r0, r3, #4
   550dc:	str	r0, [sp, #16]
   550e0:	mla	r0, ip, r6, r4
   550e4:	ldr	r4, [sp, #88]	; 0x58
   550e8:	str	r0, [sp, #44]	; 0x2c
   550ec:	and	r0, ip, #1
   550f0:	str	r0, [sp, #40]	; 0x28
   550f4:	sub	r0, ip, r0
   550f8:	str	r0, [sp, #28]
   550fc:	lsl	r0, ip, #3
   55100:	str	r0, [sp, #52]	; 0x34
   55104:	lsl	r0, r6, #3
   55108:	str	r0, [sp, #24]
   5510c:	lsl	r0, r6, #4
   55110:	str	r0, [sp, #20]
   55114:	b	5514c <GetDataSlab+0x251cc>
   55118:	ldr	r1, [sp, #16]
   5511c:	ldr	r0, [r1, r0]
   55120:	add	lr, lr, r0, lsl #3
   55124:	add	r8, r0, r8
   55128:	ldr	r0, [sp, #52]	; 0x34
   5512c:	ldr	r4, [sp, #68]	; 0x44
   55130:	add	sl, sl, ip
   55134:	mov	r2, #0
   55138:	mov	r7, sl
   5513c:	add	r4, r4, r0
   55140:	ldr	r0, [sp, #76]	; 0x4c
   55144:	cmp	sl, r0
   55148:	bge	56c1c <GetDataSlab+0x26c9c>
   5514c:	ldr	r0, [sp, #60]	; 0x3c
   55150:	cmp	ip, #1
   55154:	str	r4, [sp, #68]	; 0x44
   55158:	add	r5, lr, r0, lsl #3
   5515c:	blt	55200 <GetDataSlab+0x25280>
   55160:	mov	r6, #0
   55164:	str	r8, [sp, #64]	; 0x40
   55168:	beq	551b4 <GetDataSlab+0x25234>
   5516c:	ldr	r8, [sp, #28]
   55170:	ldr	sl, [sp, #24]
   55174:	ldr	r9, [sp, #20]
   55178:	mov	r6, #0
   5517c:	vldr	d16, [r5]
   55180:	vmov	r0, r1, d16
   55184:	bl	6b9b0 <__aeabi_d2ulz>
   55188:	strd	r0, [r4]
   5518c:	add	r0, r5, sl
   55190:	vldr	d16, [r0]
   55194:	vmov	r0, r1, d16
   55198:	bl	6b9b0 <__aeabi_d2ulz>
   5519c:	add	r6, r6, #2
   551a0:	strd	r0, [r4, #8]
   551a4:	add	r5, r5, r9
   551a8:	add	r4, r4, #16
   551ac:	cmp	r8, r6
   551b0:	bne	5517c <GetDataSlab+0x251fc>
   551b4:	ldr	r0, [sp, #40]	; 0x28
   551b8:	ldr	ip, [sp, #72]	; 0x48
   551bc:	ldr	r8, [sp, #64]	; 0x40
   551c0:	mov	sl, r7
   551c4:	cmp	r0, #0
   551c8:	ldr	r0, [sp, #44]	; 0x2c
   551cc:	beq	55204 <GetDataSlab+0x25284>
   551d0:	vldr	d16, [r5]
   551d4:	ldr	r0, [sp, #88]	; 0x58
   551d8:	add	r4, r0, sl, lsl #3
   551dc:	vmov	r0, r1, d16
   551e0:	bl	6b9b0 <__aeabi_d2ulz>
   551e4:	ldr	ip, [sp, #72]	; 0x48
   551e8:	str	r0, [r4, r6, lsl #3]!
   551ec:	ldr	r0, [sp, #36]	; 0x24
   551f0:	str	r1, [r4, #4]
   551f4:	add	r5, r5, r0, lsl #3
   551f8:	ldr	r0, [sp, #44]	; 0x2c
   551fc:	b	55204 <GetDataSlab+0x25284>
   55200:	mov	sl, r7
   55204:	ldr	r1, [sp, #56]	; 0x38
   55208:	add	r0, r0, r8
   5520c:	ldr	r7, [sp, #48]	; 0x30
   55210:	mov	r9, #0
   55214:	add	r8, r0, r1
   55218:	ldr	r0, [fp, #24]
   5521c:	add	lr, r5, r1, lsl #3
   55220:	cmp	r0, #2
   55224:	blt	55128 <GetDataSlab+0x251a8>
   55228:	ldr	r1, [sp, #32]
   5522c:	mov	r0, #0
   55230:	sub	r4, fp, #176	; 0xb0
   55234:	b	55260 <GetDataSlab+0x252e0>
   55238:	ldr	r5, [sp, #92]	; 0x5c
   5523c:	ldr	r6, [r4, r0]
   55240:	sub	r2, r2, r3
   55244:	ldr	r5, [r5, r0]
   55248:	mla	r2, r5, r6, r2
   5524c:	add	r8, r2, r8
   55250:	add	lr, lr, r2, lsl #3
   55254:	subs	r1, r1, #1
   55258:	add	r0, r0, #4
   5525c:	beq	55128 <GetDataSlab+0x251a8>
   55260:	ldr	r2, [r7, r0]
   55264:	ldr	r3, [sp, #84]	; 0x54
   55268:	add	r2, r2, #1
   5526c:	str	r2, [r7, r0]
   55270:	ldr	r3, [r3, r0]
   55274:	sdiv	r6, r2, r3
   55278:	mls	r2, r6, r3, r2
   5527c:	cmp	r2, #0
   55280:	bne	55118 <GetDataSlab+0x25198>
   55284:	ldr	r2, [sp, #80]	; 0x50
   55288:	str	r9, [r7, r0]
   5528c:	ldr	r2, [r2, r0]
   55290:	sdiv	r3, r8, r2
   55294:	mls	r3, r3, r2, r8
   55298:	cmp	r3, #0
   5529c:	bne	55238 <GetDataSlab+0x252b8>
   552a0:	ldr	r2, [sp, #92]	; 0x5c
   552a4:	ldr	r2, [r2, r0]
   552a8:	cmp	r2, #0
   552ac:	beq	55254 <GetDataSlab+0x252d4>
   552b0:	ldr	r3, [r4, r0]
   552b4:	mla	r8, r3, r2, r8
   552b8:	mul	r2, r3, r2
   552bc:	b	55250 <GetDataSlab+0x252d0>
   552c0:	ldr	r0, [sp, #68]	; 0x44
   552c4:	ldr	r8, [sp, #88]	; 0x58
   552c8:	ldr	r2, [sp, #44]	; 0x2c
   552cc:	cmp	r0, #1
   552d0:	blt	554f8 <GetDataSlab+0x25578>
   552d4:	ldr	r1, [fp, #12]
   552d8:	ldr	r3, [sp, #32]
   552dc:	ldr	r0, [sp, #24]
   552e0:	str	r8, [sp, #64]	; 0x40
   552e4:	ldr	r6, [r1], #4
   552e8:	mls	r0, r2, r3, r0
   552ec:	lsl	r9, r3, #3
   552f0:	lsl	sl, r3, #4
   552f4:	str	r1, [sp, #84]	; 0x54
   552f8:	mov	r1, #0
   552fc:	str	r1, [sp, #60]	; 0x3c
   55300:	sub	r0, r0, r6
   55304:	str	r6, [sp, #56]	; 0x38
   55308:	str	r0, [sp, #52]	; 0x34
   5530c:	sub	r0, fp, #136	; 0x88
   55310:	orr	r4, r0, #4
   55314:	ldr	r0, [fp, #20]
   55318:	add	r5, r0, #4
   5531c:	sub	r0, fp, #176	; 0xb0
   55320:	orr	r0, r0, #4
   55324:	str	r0, [sp, #72]	; 0x48
   55328:	ldr	r0, [fp, #24]
   5532c:	sub	r0, r0, #1
   55330:	str	r0, [sp, #28]
   55334:	sub	r0, fp, #96	; 0x60
   55338:	orr	r0, r0, #4
   5533c:	str	r0, [sp, #24]
   55340:	mla	r0, r2, r3, r6
   55344:	str	r0, [sp, #40]	; 0x28
   55348:	and	r0, r2, #1
   5534c:	str	r0, [sp, #36]	; 0x24
   55350:	sub	lr, r2, r0
   55354:	lsl	r0, r2, #3
   55358:	str	r0, [sp, #48]	; 0x30
   5535c:	mov	r0, r2
   55360:	b	553a4 <GetDataSlab+0x25424>
   55364:	ldr	r0, [sp, #24]
   55368:	ldr	r0, [r0, r2]
   5536c:	add	r7, r7, r0, lsl #3
   55370:	add	ip, r0, ip
   55374:	ldr	r0, [sp, #48]	; 0x30
   55378:	ldr	r1, [sp, #64]	; 0x40
   5537c:	ldr	r2, [sp, #60]	; 0x3c
   55380:	ldr	r8, [sp, #88]	; 0x58
   55384:	add	r1, r1, r0
   55388:	ldr	r0, [sp, #44]	; 0x2c
   5538c:	str	r1, [sp, #64]	; 0x40
   55390:	ldr	r1, [sp, #68]	; 0x44
   55394:	add	r2, r2, r0
   55398:	cmp	r2, r1
   5539c:	str	r2, [sp, #60]	; 0x3c
   553a0:	bge	554f8 <GetDataSlab+0x25578>
   553a4:	ldr	r6, [sp, #56]	; 0x38
   553a8:	cmp	r0, #1
   553ac:	add	r7, r7, r6, lsl #3
   553b0:	blt	553c4 <GetDataSlab+0x25444>
   553b4:	mov	r2, #0
   553b8:	bne	553cc <GetDataSlab+0x2544c>
   553bc:	mov	r0, r7
   553c0:	b	55404 <GetDataSlab+0x25484>
   553c4:	mov	r0, r7
   553c8:	b	55434 <GetDataSlab+0x254b4>
   553cc:	ldr	r6, [sp, #64]	; 0x40
   553d0:	mov	r2, #0
   553d4:	ldrd	r0, [r7]
   553d8:	add	r2, r2, #2
   553dc:	cmp	lr, r2
   553e0:	stm	r6, {r0, r1}
   553e4:	add	r0, r7, sl
   553e8:	ldr	r1, [r7, r9]!
   553ec:	ldr	r7, [r7, #4]
   553f0:	str	r1, [r6, #8]
   553f4:	str	r7, [r6, #12]
   553f8:	add	r6, r6, #16
   553fc:	mov	r7, r0
   55400:	bne	553d4 <GetDataSlab+0x25454>
   55404:	ldr	r1, [sp, #36]	; 0x24
   55408:	ldr	r6, [sp, #40]	; 0x28
   5540c:	cmp	r1, #0
   55410:	beq	55434 <GetDataSlab+0x254b4>
   55414:	ldr	r1, [sp, #60]	; 0x3c
   55418:	ldrd	r6, [r0]
   5541c:	add	r1, r8, r1, lsl #3
   55420:	str	r6, [r1, r2, lsl #3]!
   55424:	ldr	r6, [sp, #40]	; 0x28
   55428:	str	r7, [r1, #4]
   5542c:	ldr	r1, [sp, #32]
   55430:	add	r0, r0, r1, lsl #3
   55434:	ldr	r1, [sp, #52]	; 0x34
   55438:	add	r7, r0, r1, lsl #3
   5543c:	add	r0, r6, ip
   55440:	add	ip, r0, r1
   55444:	ldr	r0, [fp, #24]
   55448:	cmp	r0, #2
   5544c:	blt	55374 <GetDataSlab+0x253f4>
   55450:	ldr	r8, [sp, #28]
   55454:	mov	r2, #0
   55458:	b	55490 <GetDataSlab+0x25510>
   5545c:	mov	r3, r7
   55460:	ldr	r7, [sp, #84]	; 0x54
   55464:	sub	r1, fp, #176	; 0xb0
   55468:	sub	r0, r0, r6
   5546c:	ldr	r1, [r1, r2]
   55470:	ldr	r7, [r7, r2]
   55474:	mla	r0, r7, r1, r0
   55478:	mov	r7, r3
   5547c:	add	ip, r0, ip
   55480:	add	r7, r3, r0, lsl #3
   55484:	subs	r8, r8, #1
   55488:	add	r2, r2, #4
   5548c:	beq	55374 <GetDataSlab+0x253f4>
   55490:	ldr	r0, [r4, r2]
   55494:	add	r0, r0, #1
   55498:	str	r0, [r4, r2]
   5549c:	ldr	r1, [r5, r2]
   554a0:	sdiv	r6, r0, r1
   554a4:	mls	r0, r6, r1, r0
   554a8:	cmp	r0, #0
   554ac:	bne	55364 <GetDataSlab+0x253e4>
   554b0:	mov	r0, #0
   554b4:	str	r0, [r4, r2]
   554b8:	ldr	r0, [sp, #72]	; 0x48
   554bc:	ldr	r0, [r0, r2]
   554c0:	sdiv	r1, ip, r0
   554c4:	mls	r6, r1, r0, ip
   554c8:	cmp	r6, #0
   554cc:	bne	5545c <GetDataSlab+0x254dc>
   554d0:	ldr	r0, [sp, #84]	; 0x54
   554d4:	ldr	r0, [r0, r2]
   554d8:	cmp	r0, #0
   554dc:	beq	55484 <GetDataSlab+0x25504>
   554e0:	sub	r1, fp, #176	; 0xb0
   554e4:	ldr	r1, [r1, r2]
   554e8:	mla	ip, r1, r0, ip
   554ec:	mul	r0, r1, r0
   554f0:	add	r7, r7, r0, lsl #3
   554f4:	b	55484 <GetDataSlab+0x25504>
   554f8:	ldr	r3, [sp, #76]	; 0x4c
   554fc:	mov	r2, #0
   55500:	cmp	r3, #13
   55504:	bne	56c1c <GetDataSlab+0x26c9c>
   55508:	ldr	r0, [fp, #16]
   5550c:	ldr	r1, [fp, #8]
   55510:	ldr	r9, [fp, #20]
   55514:	mov	sl, #0
   55518:	sub	r7, fp, #176	; 0xb0
   5551c:	ldr	r0, [r0]
   55520:	str	r0, [sp, #44]	; 0x2c
   55524:	sub	r0, r0, #1
   55528:	str	r0, [fp, #-96]	; 0xffffffa0
   5552c:	ldr	r0, [r1]
   55530:	str	r0, [fp, #-176]	; 0xffffff50
   55534:	str	r0, [sp, #40]	; 0x28
   55538:	ldr	r0, [fp, #24]
   5553c:	ldr	r2, [r9]
   55540:	sub	r9, fp, #96	; 0x60
   55544:	cmp	r0, #2
   55548:	str	r2, [sp, #72]	; 0x48
   5554c:	str	r2, [sp, #76]	; 0x4c
   55550:	blt	5569c <GetDataSlab+0x2571c>
   55554:	ldr	r3, [sp, #40]	; 0x28
   55558:	ldr	r2, [sp, #72]	; 0x48
   5555c:	sub	r0, r1, #4
   55560:	sub	ip, r1, #12
   55564:	mov	r6, #1
   55568:	mov	lr, #0
   5556c:	mvn	r5, #15
   55570:	mov	sl, #0
   55574:	mov	r8, r3
   55578:	str	r2, [sp, #76]	; 0x4c
   5557c:	b	555d0 <GetDataSlab+0x25650>
   55580:	ldr	r2, [fp, #12]
   55584:	sub	r7, fp, #176	; 0xb0
   55588:	sub	r9, fp, #96	; 0x60
   5558c:	add	ip, ip, #4
   55590:	str	r4, [r9, r6, lsl #2]
   55594:	str	r3, [r7, r6, lsl #2]
   55598:	ldr	r4, [sp, #76]	; 0x4c
   5559c:	ldr	r2, [r2, r6, lsl #2]
   555a0:	mla	sl, r2, r8, sl
   555a4:	ldr	r2, [fp, #20]
   555a8:	mov	r8, r3
   555ac:	mov	r3, r1
   555b0:	ldr	r1, [fp, #8]
   555b4:	ldr	r2, [r2, r6, lsl #2]
   555b8:	add	r6, r6, #1
   555bc:	mul	r4, r2, r4
   555c0:	ldr	r2, [fp, #24]
   555c4:	str	r4, [sp, #76]	; 0x4c
   555c8:	cmp	r6, r2
   555cc:	beq	5569c <GetDataSlab+0x2571c>
   555d0:	ldr	r2, [fp, #16]
   555d4:	add	lr, lr, #1
   555d8:	cmp	lr, #4
   555dc:	ldr	r2, [r2, r6, lsl #2]
   555e0:	str	r3, [r7, r6, lsl #2]
   555e4:	sub	r4, r2, #1
   555e8:	str	r4, [r9, r6, lsl #2]
   555ec:	ldr	r1, [r1, r6, lsl #2]
   555f0:	bcs	55600 <GetDataSlab+0x25680>
   555f4:	mov	r2, r1
   555f8:	mov	r7, r6
   555fc:	b	55684 <GetDataSlab+0x25704>
   55600:	vmov.i32	q9, #1	; 0x00000001
   55604:	vmov.i32	q10, #1	; 0x00000001
   55608:	vmov.32	d23[1], r1
   5560c:	vmov.i32	q8, #1	; 0x00000001
   55610:	bic	r9, lr, #3
   55614:	bic	r2, r6, #3
   55618:	sub	r7, r6, r9
   5561c:	vmov.32	d18[0], r3
   55620:	vmov.32	d20[0], r4
   55624:	mov	r3, ip
   55628:	vorr	d16, d18, d18
   5562c:	vmov.i32	q9, #1	; 0x00000001
   55630:	vorr	d18, d20, d20
   55634:	vld1.32	{d20-d21}, [r3], r5
   55638:	subs	r2, r2, #4
   5563c:	vrev64.32	q12, q10
   55640:	vext.8	q12, q12, q12, #8
   55644:	vext.8	q11, q11, q12, #12
   55648:	vmul.i32	q9, q9, q12
   5564c:	vmul.i32	q8, q11, q8
   55650:	vorr	q11, q12, q12
   55654:	bne	55634 <GetDataSlab+0x256b4>
   55658:	vext.8	q11, q9, q8, #8
   5565c:	vext.8	q12, q8, q8, #8
   55660:	cmp	lr, r9
   55664:	vmul.i32	q0, q9, q11
   55668:	vmul.i32	q1, q8, q12
   5566c:	vmul.i32	q8, q0, d0[1]
   55670:	vmul.i32	q9, q1, d2[1]
   55674:	vmov.32	r4, d16[0]
   55678:	vmov.32	r3, d18[0]
   5567c:	beq	55580 <GetDataSlab+0x25600>
   55680:	vmov.32	r2, d20[0]
   55684:	mul	r3, r2, r3
   55688:	ldr	r2, [r0, r7, lsl #2]
   5568c:	subs	r7, r7, #1
   55690:	mul	r4, r4, r2
   55694:	bne	55684 <GetDataSlab+0x25704>
   55698:	b	55580 <GetDataSlab+0x25600>
   5569c:	ldr	r0, [sp, #80]	; 0x50
   556a0:	add	r4, r0, sl, lsl #3
   556a4:	ldr	r0, [sp, #44]	; 0x2c
   556a8:	cmp	r0, #1
   556ac:	bne	56b74 <GetDataSlab+0x26bf4>
   556b0:	ldr	r0, [sp, #76]	; 0x4c
   556b4:	ldr	r1, [fp, #12]
   556b8:	ldr	r3, [sp, #72]	; 0x48
   556bc:	ldr	r8, [sp, #40]	; 0x28
   556c0:	cmp	r0, #1
   556c4:	blt	56c18 <GetDataSlab+0x26c98>
   556c8:	sub	r0, r3, #2
   556cc:	mov	r2, #1
   556d0:	add	r2, r2, r0, lsr #1
   556d4:	lsr	r0, r0, #1
   556d8:	str	r0, [sp, #20]
   556dc:	ldr	r0, [sp, #88]	; 0x58
   556e0:	and	r6, r2, #1
   556e4:	sub	r2, r2, r6
   556e8:	str	r6, [sp, #28]
   556ec:	str	r2, [sp, #16]
   556f0:	sub	r2, fp, #136	; 0x88
   556f4:	orr	lr, r2, #4
   556f8:	ldr	r2, [fp, #20]
   556fc:	str	r0, [sp, #68]	; 0x44
   55700:	mov	r0, #0
   55704:	str	r0, [sp, #80]	; 0x50
   55708:	mov	r0, #0
   5570c:	str	r0, [sp, #84]	; 0x54
   55710:	add	r2, r2, #4
   55714:	str	r2, [sp, #52]	; 0x34
   55718:	orr	r2, r7, #4
   5571c:	str	r2, [sp, #48]	; 0x30
   55720:	ldr	r2, [fp, #24]
   55724:	sub	r2, r2, #1
   55728:	str	r2, [sp, #44]	; 0x2c
   5572c:	sub	r2, fp, #96	; 0x60
   55730:	orr	r2, r2, #4
   55734:	str	r2, [sp, #32]
   55738:	ldr	r2, [r1], #4
   5573c:	str	r1, [sp, #92]	; 0x5c
   55740:	add	r1, r3, r2
   55744:	str	r2, [sp, #60]	; 0x3c
   55748:	str	r1, [sp, #36]	; 0x24
   5574c:	and	r1, r3, #1
   55750:	str	r1, [sp, #56]	; 0x38
   55754:	lsl	r1, r3, #3
   55758:	str	r1, [sp, #64]	; 0x40
   5575c:	bic	r1, r3, #1
   55760:	str	r1, [sp, #24]
   55764:	b	557b8 <GetDataSlab+0x25838>
   55768:	ldr	r1, [sp, #32]
   5576c:	ldr	r0, [r1, r0]
   55770:	add	r9, r9, r0, lsl #3
   55774:	add	sl, r0, sl
   55778:	ldr	r0, [sp, #64]	; 0x40
   5577c:	ldr	r1, [sp, #68]	; 0x44
   55780:	ldr	r3, [sp, #72]	; 0x48
   55784:	mov	r4, r9
   55788:	mov	r2, #0
   5578c:	add	r1, r1, r0
   55790:	ldr	r0, [sp, #80]	; 0x50
   55794:	str	r1, [sp, #68]	; 0x44
   55798:	ldr	r1, [sp, #84]	; 0x54
   5579c:	add	r0, r0, #1
   557a0:	str	r0, [sp, #80]	; 0x50
   557a4:	ldr	r0, [sp, #76]	; 0x4c
   557a8:	add	r1, r1, r3
   557ac:	str	r1, [sp, #84]	; 0x54
   557b0:	cmp	r1, r0
   557b4:	bge	56c1c <GetDataSlab+0x26c9c>
   557b8:	ldr	r1, [sp, #88]	; 0x58
   557bc:	ldr	ip, [sp, #92]	; 0x5c
   557c0:	cmp	r3, #1
   557c4:	mov	r9, r4
   557c8:	blt	55914 <GetDataSlab+0x25994>
   557cc:	ldr	r0, [sp, #60]	; 0x3c
   557d0:	ldr	r2, [sp, #84]	; 0x54
   557d4:	mov	r3, #0
   557d8:	add	r0, r9, r0, lsl #3
   557dc:	add	r6, r1, r2, lsl #3
   557e0:	beq	55894 <GetDataSlab+0x25914>
   557e4:	ldr	r2, [sp, #64]	; 0x40
   557e8:	ldr	r5, [sp, #80]	; 0x50
   557ec:	mla	r2, r2, r5, r1
   557f0:	ldr	r5, [sp, #36]	; 0x24
   557f4:	add	r7, r9, r5, lsl #3
   557f8:	cmp	r2, r7
   557fc:	bcs	55818 <GetDataSlab+0x25898>
   55800:	ldr	r2, [sp, #64]	; 0x40
   55804:	ldr	r5, [sp, #80]	; 0x50
   55808:	mla	r2, r2, r5, r2
   5580c:	add	r2, r1, r2
   55810:	cmp	r2, r0
   55814:	bhi	55894 <GetDataSlab+0x25914>
   55818:	ldr	r1, [sp, #20]
   5581c:	mov	r3, #0
   55820:	cmp	r1, #0
   55824:	beq	5585c <GetDataSlab+0x258dc>
   55828:	ldr	ip, [sp, #68]	; 0x44
   5582c:	ldr	r9, [sp, #16]
   55830:	mov	r2, r0
   55834:	mov	r1, #32
   55838:	add	r7, r2, #16
   5583c:	vld1.64	{d16-d17}, [r2], r1
   55840:	add	r8, ip, #16
   55844:	subs	r9, r9, #2
   55848:	add	r3, r3, #4
   5584c:	vst1.64	{d16-d17}, [ip], r1
   55850:	vld1.64	{d16-d17}, [r7]
   55854:	vst1.64	{d16-d17}, [r8]
   55858:	bne	55838 <GetDataSlab+0x258b8>
   5585c:	ldr	r1, [sp, #28]
   55860:	ldr	r8, [sp, #40]	; 0x28
   55864:	mov	r9, r4
   55868:	cmp	r1, #0
   5586c:	beq	55880 <GetDataSlab+0x25900>
   55870:	add	r2, r0, r3, lsl #3
   55874:	vld1.64	{d16-d17}, [r2]
   55878:	add	r2, r6, r3, lsl #3
   5587c:	vst1.64	{d16-d17}, [r2]
   55880:	ldr	r1, [sp, #72]	; 0x48
   55884:	ldr	r3, [sp, #24]
   55888:	ldr	ip, [sp, #92]	; 0x5c
   5588c:	cmp	r1, r3
   55890:	beq	55914 <GetDataSlab+0x25994>
   55894:	ldr	r1, [sp, #56]	; 0x38
   55898:	mov	r7, r3
   5589c:	cmp	r1, #0
   558a0:	beq	558bc <GetDataSlab+0x2593c>
   558a4:	mov	r2, r0
   558a8:	ldr	r7, [r2, r3, lsl #3]!
   558ac:	ldr	r2, [r2, #4]
   558b0:	str	r7, [r6, r3, lsl #3]!
   558b4:	orr	r7, r3, #1
   558b8:	str	r2, [r6, #4]
   558bc:	ldr	r1, [sp, #72]	; 0x48
   558c0:	orr	r2, r3, #1
   558c4:	cmp	r1, r2
   558c8:	beq	55914 <GetDataSlab+0x25994>
   558cc:	ldr	r1, [sp, #72]	; 0x48
   558d0:	lsl	r3, r7, #3
   558d4:	sub	r2, r1, r7
   558d8:	ldr	r7, [sp, #68]	; 0x44
   558dc:	add	r6, r0, #16
   558e0:	ldr	r5, [r0, r3]!
   558e4:	add	r1, r7, #16
   558e8:	subs	r2, r2, #2
   558ec:	ldr	r4, [r0, #4]
   558f0:	str	r5, [r7, r3]!
   558f4:	str	r4, [r7, #4]
   558f8:	ldr	r5, [r0, #8]
   558fc:	ldr	r0, [r0, #12]
   55900:	str	r0, [r7, #12]
   55904:	str	r5, [r7, #8]
   55908:	mov	r0, r6
   5590c:	mov	r7, r1
   55910:	bne	558dc <GetDataSlab+0x2595c>
   55914:	ldr	r0, [fp, #24]
   55918:	add	r9, r9, r8, lsl #3
   5591c:	add	sl, sl, r8
   55920:	cmp	r0, #2
   55924:	blt	55778 <GetDataSlab+0x257f8>
   55928:	ldr	r2, [sp, #44]	; 0x2c
   5592c:	ldr	r4, [sp, #52]	; 0x34
   55930:	ldr	r5, [sp, #48]	; 0x30
   55934:	mov	r0, #0
   55938:	b	55964 <GetDataSlab+0x259e4>
   5593c:	sub	r1, fp, #176	; 0xb0
   55940:	ldr	r6, [ip, r0]
   55944:	sub	r3, r3, r7
   55948:	ldr	r1, [r1, r0]
   5594c:	mla	r1, r6, r1, r3
   55950:	add	sl, r1, sl
   55954:	add	r9, r9, r1, lsl #3
   55958:	subs	r2, r2, #1
   5595c:	add	r0, r0, #4
   55960:	beq	55778 <GetDataSlab+0x257f8>
   55964:	ldr	r1, [lr, r0]
   55968:	add	r1, r1, #1
   5596c:	str	r1, [lr, r0]
   55970:	ldr	r3, [r4, r0]
   55974:	sdiv	r7, r1, r3
   55978:	mls	r1, r7, r3, r1
   5597c:	cmp	r1, #0
   55980:	bne	55768 <GetDataSlab+0x257e8>
   55984:	ldr	r3, [r5, r0]
   55988:	mov	r1, #0
   5598c:	str	r1, [lr, r0]
   55990:	sdiv	r1, sl, r3
   55994:	mls	r7, r1, r3, sl
   55998:	cmp	r7, #0
   5599c:	bne	5593c <GetDataSlab+0x259bc>
   559a0:	ldr	r3, [ip, r0]
   559a4:	cmp	r3, #0
   559a8:	beq	55958 <GetDataSlab+0x259d8>
   559ac:	sub	r1, fp, #176	; 0xb0
   559b0:	ldr	r1, [r1, r0]
   559b4:	mla	sl, r1, r3, sl
   559b8:	mul	r1, r1, r3
   559bc:	b	55954 <GetDataSlab+0x259d4>
   559c0:	ldr	r0, [sp, #76]	; 0x4c
   559c4:	ldr	lr, [sp, #64]	; 0x40
   559c8:	cmp	r0, #1
   559cc:	ldr	r0, [sp, #44]	; 0x2c
   559d0:	blt	56c18 <GetDataSlab+0x26c98>
   559d4:	ldr	r1, [sp, #92]	; 0x5c
   559d8:	ldr	r2, [sp, #36]	; 0x24
   559dc:	ldr	r9, [r1], #4
   559e0:	mls	r0, lr, r2, r0
   559e4:	str	r1, [sp, #92]	; 0x5c
   559e8:	sub	r0, r0, r9
   559ec:	str	r9, [sp, #44]	; 0x2c
   559f0:	str	r0, [sp, #60]	; 0x3c
   559f4:	sub	r0, fp, #136	; 0x88
   559f8:	orr	r0, r0, #4
   559fc:	str	r0, [sp, #52]	; 0x34
   55a00:	ldr	r0, [fp, #20]
   55a04:	add	r0, r0, #4
   55a08:	str	r0, [sp, #84]	; 0x54
   55a0c:	orr	r0, r6, #4
   55a10:	str	r0, [sp, #80]	; 0x50
   55a14:	ldr	r0, [fp, #24]
   55a18:	sub	r0, r0, #1
   55a1c:	str	r0, [sp, #32]
   55a20:	sub	r0, fp, #96	; 0x60
   55a24:	orr	r0, r0, #4
   55a28:	str	r0, [sp, #16]
   55a2c:	mla	r0, lr, r2, r9
   55a30:	str	r0, [sp, #48]	; 0x30
   55a34:	and	r0, lr, #1
   55a38:	str	r0, [sp, #40]	; 0x28
   55a3c:	sub	r0, lr, r0
   55a40:	str	r0, [sp, #28]
   55a44:	lsl	r0, lr, #3
   55a48:	str	r0, [sp, #56]	; 0x38
   55a4c:	ldr	r0, [sp, #88]	; 0x58
   55a50:	add	r1, r0, #8
   55a54:	lsl	r0, r2, #3
   55a58:	str	r0, [sp, #24]
   55a5c:	lsl	r0, r2, #4
   55a60:	str	r0, [sp, #20]
   55a64:	mov	r0, #0
   55a68:	str	r0, [sp, #72]	; 0x48
   55a6c:	b	55aa8 <GetDataSlab+0x25b28>
   55a70:	ldr	r1, [sp, #16]
   55a74:	ldr	r0, [r1, r0]
   55a78:	add	r5, r5, r0, lsl #3
   55a7c:	add	r8, r0, r8
   55a80:	ldr	r0, [sp, #56]	; 0x38
   55a84:	ldr	r1, [sp, #68]	; 0x44
   55a88:	ldr	r3, [sp, #72]	; 0x48
   55a8c:	mov	r2, #0
   55a90:	add	r1, r1, r0
   55a94:	ldr	r0, [sp, #76]	; 0x4c
   55a98:	add	r3, r3, lr
   55a9c:	str	r3, [sp, #72]	; 0x48
   55aa0:	cmp	r3, r0
   55aa4:	bge	56c1c <GetDataSlab+0x26c9c>
   55aa8:	add	r7, r5, r9, lsl #3
   55aac:	cmp	lr, #1
   55ab0:	str	r1, [sp, #68]	; 0x44
   55ab4:	blt	55b54 <GetDataSlab+0x25bd4>
   55ab8:	mov	r6, #0
   55abc:	beq	55b08 <GetDataSlab+0x25b88>
   55ac0:	ldr	r5, [sp, #28]
   55ac4:	ldr	sl, [sp, #24]
   55ac8:	ldr	r4, [sp, #20]
   55acc:	mov	r6, #0
   55ad0:	mov	r9, r1
   55ad4:	ldrd	r0, [r7]
   55ad8:	bl	6b650 <__aeabi_ul2d>
   55adc:	strd	r0, [r9, #-8]
   55ae0:	mov	r1, r7
   55ae4:	ldr	r0, [r1, sl]!
   55ae8:	ldr	r1, [r1, #4]
   55aec:	bl	6b650 <__aeabi_ul2d>
   55af0:	add	r6, r6, #2
   55af4:	strd	r0, [r9]
   55af8:	add	r7, r7, r4
   55afc:	add	r9, r9, #16
   55b00:	cmp	r5, r6
   55b04:	bne	55ad4 <GetDataSlab+0x25b54>
   55b08:	ldr	r0, [sp, #40]	; 0x28
   55b0c:	ldr	lr, [sp, #64]	; 0x40
   55b10:	ldr	r9, [sp, #44]	; 0x2c
   55b14:	cmp	r0, #0
   55b18:	ldr	r0, [sp, #48]	; 0x30
   55b1c:	beq	55b58 <GetDataSlab+0x25bd8>
   55b20:	ldr	r0, [sp, #88]	; 0x58
   55b24:	ldr	r1, [sp, #72]	; 0x48
   55b28:	add	r9, r0, r1, lsl #3
   55b2c:	ldrd	r0, [r7]
   55b30:	bl	6b650 <__aeabi_ul2d>
   55b34:	str	r0, [r9, r6, lsl #3]!
   55b38:	ldr	r0, [sp, #36]	; 0x24
   55b3c:	ldr	lr, [sp, #64]	; 0x40
   55b40:	str	r1, [r9, #4]
   55b44:	ldr	r9, [sp, #44]	; 0x2c
   55b48:	add	r7, r7, r0, lsl #3
   55b4c:	ldr	r0, [sp, #48]	; 0x30
   55b50:	b	55b58 <GetDataSlab+0x25bd8>
   55b54:	mov	r0, r9
   55b58:	ldr	r1, [sp, #60]	; 0x3c
   55b5c:	add	r0, r0, r8
   55b60:	ldr	r4, [sp, #52]	; 0x34
   55b64:	mov	sl, #0
   55b68:	add	r8, r0, r1
   55b6c:	ldr	r0, [fp, #24]
   55b70:	add	r5, r7, r1, lsl #3
   55b74:	cmp	r0, #2
   55b78:	blt	55a80 <GetDataSlab+0x25b00>
   55b7c:	ldr	r1, [sp, #32]
   55b80:	mov	r0, #0
   55b84:	sub	ip, fp, #176	; 0xb0
   55b88:	b	55bb4 <GetDataSlab+0x25c34>
   55b8c:	ldr	r6, [sp, #92]	; 0x5c
   55b90:	ldr	r7, [ip, r0]
   55b94:	sub	r2, r2, r3
   55b98:	ldr	r6, [r6, r0]
   55b9c:	mla	r2, r6, r7, r2
   55ba0:	add	r8, r2, r8
   55ba4:	add	r5, r5, r2, lsl #3
   55ba8:	subs	r1, r1, #1
   55bac:	add	r0, r0, #4
   55bb0:	beq	55a80 <GetDataSlab+0x25b00>
   55bb4:	ldr	r2, [r4, r0]
   55bb8:	ldr	r3, [sp, #84]	; 0x54
   55bbc:	add	r2, r2, #1
   55bc0:	str	r2, [r4, r0]
   55bc4:	ldr	r3, [r3, r0]
   55bc8:	sdiv	r7, r2, r3
   55bcc:	mls	r2, r7, r3, r2
   55bd0:	cmp	r2, #0
   55bd4:	bne	55a70 <GetDataSlab+0x25af0>
   55bd8:	ldr	r2, [sp, #80]	; 0x50
   55bdc:	str	sl, [r4, r0]
   55be0:	ldr	r2, [r2, r0]
   55be4:	sdiv	r3, r8, r2
   55be8:	mls	r3, r3, r2, r8
   55bec:	cmp	r3, #0
   55bf0:	bne	55b8c <GetDataSlab+0x25c0c>
   55bf4:	ldr	r2, [sp, #92]	; 0x5c
   55bf8:	ldr	r2, [r2, r0]
   55bfc:	cmp	r2, #0
   55c00:	beq	55ba8 <GetDataSlab+0x25c28>
   55c04:	ldr	r3, [ip, r0]
   55c08:	mla	r8, r3, r2, r8
   55c0c:	mul	r2, r3, r2
   55c10:	b	55ba4 <GetDataSlab+0x25c24>
   55c14:	ldr	r0, [sp, #72]	; 0x48
   55c18:	ldr	r1, [sp, #88]	; 0x58
   55c1c:	ldr	r2, [fp, #12]
   55c20:	ldr	lr, [sp, #56]	; 0x38
   55c24:	sub	r3, fp, #96	; 0x60
   55c28:	cmp	r0, #1
   55c2c:	ldr	r0, [sp, #44]	; 0x2c
   55c30:	blt	56c18 <GetDataSlab+0x26c98>
   55c34:	ldr	r6, [sp, #36]	; 0x24
   55c38:	ldr	r8, [r2], #4
   55c3c:	add	r1, r1, #4
   55c40:	str	r2, [sp, #92]	; 0x5c
   55c44:	mls	r0, lr, r6, r0
   55c48:	lsl	sl, r6, #4
   55c4c:	str	r8, [sp, #44]	; 0x2c
   55c50:	sub	r0, r0, r8
   55c54:	str	r0, [sp, #60]	; 0x3c
   55c58:	sub	r0, fp, #136	; 0x88
   55c5c:	orr	r9, r0, #4
   55c60:	ldr	r0, [fp, #20]
   55c64:	add	r0, r0, #4
   55c68:	str	r0, [sp, #84]	; 0x54
   55c6c:	orr	r0, r7, #4
   55c70:	str	r0, [sp, #80]	; 0x50
   55c74:	ldr	r0, [fp, #24]
   55c78:	sub	r0, r0, #1
   55c7c:	str	r0, [sp, #32]
   55c80:	orr	r0, r3, #4
   55c84:	str	r0, [sp, #20]
   55c88:	mla	r0, lr, r6, r8
   55c8c:	str	r0, [sp, #48]	; 0x30
   55c90:	and	r0, lr, #1
   55c94:	str	r0, [sp, #40]	; 0x28
   55c98:	sub	r0, lr, r0
   55c9c:	str	r0, [sp, #28]
   55ca0:	lsl	r0, lr, #2
   55ca4:	str	r0, [sp, #52]	; 0x34
   55ca8:	lsl	r0, r6, #3
   55cac:	str	r0, [sp, #24]
   55cb0:	mov	r0, #0
   55cb4:	str	r0, [sp, #68]	; 0x44
   55cb8:	b	55cf8 <GetDataSlab+0x25d78>
   55cbc:	ldr	r1, [sp, #20]
   55cc0:	ldr	r0, [r1, r0]
   55cc4:	add	r4, r4, r0, lsl #3
   55cc8:	add	r5, r0, r5
   55ccc:	ldr	r0, [sp, #52]	; 0x34
   55cd0:	ldr	r1, [sp, #64]	; 0x40
   55cd4:	ldr	r3, [sp, #68]	; 0x44
   55cd8:	mov	r2, #0
   55cdc:	str	r5, [sp, #76]	; 0x4c
   55ce0:	add	r1, r1, r0
   55ce4:	ldr	r0, [sp, #72]	; 0x48
   55ce8:	add	r3, r3, lr
   55cec:	str	r3, [sp, #68]	; 0x44
   55cf0:	cmp	r3, r0
   55cf4:	bge	56c1c <GetDataSlab+0x26c9c>
   55cf8:	add	r7, r4, r8, lsl #3
   55cfc:	cmp	lr, #1
   55d00:	str	r1, [sp, #64]	; 0x40
   55d04:	blt	55d9c <GetDataSlab+0x25e1c>
   55d08:	mov	r6, #0
   55d0c:	beq	55d54 <GetDataSlab+0x25dd4>
   55d10:	ldr	r5, [sp, #28]
   55d14:	ldr	r4, [sp, #24]
   55d18:	mov	r6, #0
   55d1c:	mov	r8, r1
   55d20:	ldrd	r0, [r7]
   55d24:	bl	6b888 <__aeabi_ul2f>
   55d28:	str	r0, [r8, #-4]
   55d2c:	mov	r1, r7
   55d30:	ldr	r0, [r1, r4]!
   55d34:	ldr	r1, [r1, #4]
   55d38:	bl	6b888 <__aeabi_ul2f>
   55d3c:	add	r6, r6, #2
   55d40:	str	r0, [r8]
   55d44:	add	r7, r7, sl
   55d48:	add	r8, r8, #8
   55d4c:	cmp	r5, r6
   55d50:	bne	55d20 <GetDataSlab+0x25da0>
   55d54:	ldr	r0, [sp, #40]	; 0x28
   55d58:	ldr	lr, [sp, #56]	; 0x38
   55d5c:	ldr	r8, [sp, #44]	; 0x2c
   55d60:	cmp	r0, #0
   55d64:	ldr	r0, [sp, #48]	; 0x30
   55d68:	beq	55da0 <GetDataSlab+0x25e20>
   55d6c:	ldr	r0, [sp, #88]	; 0x58
   55d70:	ldr	r1, [sp, #68]	; 0x44
   55d74:	add	r8, r0, r1, lsl #2
   55d78:	ldrd	r0, [r7]
   55d7c:	bl	6b888 <__aeabi_ul2f>
   55d80:	str	r0, [r8, r6, lsl #2]
   55d84:	ldr	r0, [sp, #36]	; 0x24
   55d88:	ldr	r8, [sp, #44]	; 0x2c
   55d8c:	ldr	lr, [sp, #56]	; 0x38
   55d90:	add	r7, r7, r0, lsl #3
   55d94:	ldr	r0, [sp, #48]	; 0x30
   55d98:	b	55da0 <GetDataSlab+0x25e20>
   55d9c:	mov	r0, r8
   55da0:	ldr	r1, [sp, #76]	; 0x4c
   55da4:	ldr	r2, [sp, #60]	; 0x3c
   55da8:	add	r0, r0, r1
   55dac:	add	r4, r7, r2, lsl #3
   55db0:	add	r5, r0, r2
   55db4:	ldr	r0, [fp, #24]
   55db8:	cmp	r0, #2
   55dbc:	blt	55ccc <GetDataSlab+0x25d4c>
   55dc0:	ldr	r1, [sp, #32]
   55dc4:	ldr	ip, [sp, #92]	; 0x5c
   55dc8:	mov	r0, #0
   55dcc:	b	55df8 <GetDataSlab+0x25e78>
   55dd0:	sub	r7, fp, #176	; 0xb0
   55dd4:	ldr	r6, [ip, r0]
   55dd8:	sub	r2, r2, r3
   55ddc:	ldr	r7, [r7, r0]
   55de0:	mla	r2, r6, r7, r2
   55de4:	add	r5, r2, r5
   55de8:	add	r4, r4, r2, lsl #3
   55dec:	subs	r1, r1, #1
   55df0:	add	r0, r0, #4
   55df4:	beq	55ccc <GetDataSlab+0x25d4c>
   55df8:	ldr	r2, [r9, r0]
   55dfc:	ldr	r3, [sp, #84]	; 0x54
   55e00:	add	r2, r2, #1
   55e04:	str	r2, [r9, r0]
   55e08:	ldr	r3, [r3, r0]
   55e0c:	sdiv	r7, r2, r3
   55e10:	mls	r2, r7, r3, r2
   55e14:	cmp	r2, #0
   55e18:	bne	55cbc <GetDataSlab+0x25d3c>
   55e1c:	mov	r2, #0
   55e20:	str	r2, [r9, r0]
   55e24:	ldr	r2, [sp, #80]	; 0x50
   55e28:	ldr	r2, [r2, r0]
   55e2c:	sdiv	r3, r5, r2
   55e30:	mls	r3, r3, r2, r5
   55e34:	cmp	r3, #0
   55e38:	bne	55dd0 <GetDataSlab+0x25e50>
   55e3c:	ldr	r2, [ip, r0]
   55e40:	cmp	r2, #0
   55e44:	beq	55dec <GetDataSlab+0x25e6c>
   55e48:	sub	r3, fp, #176	; 0xb0
   55e4c:	ldr	r3, [r3, r0]
   55e50:	mla	r5, r3, r2, r5
   55e54:	mul	r2, r3, r2
   55e58:	b	55de8 <GetDataSlab+0x25e68>
   55e5c:	ldr	r0, [sp, #76]	; 0x4c
   55e60:	ldr	r2, [fp, #20]
   55e64:	cmp	r0, #1
   55e68:	sub	r0, fp, #176	; 0xb0
   55e6c:	blt	56468 <GetDataSlab+0x264e8>
   55e70:	orr	r0, r0, #4
   55e74:	ldr	lr, [fp, #12]
   55e78:	mov	r3, r8
   55e7c:	sub	r6, fp, #136	; 0x88
   55e80:	add	r2, r2, #4
   55e84:	str	r0, [sp, #80]	; 0x50
   55e88:	ldr	r0, [fp, #24]
   55e8c:	orr	r8, r6, #4
   55e90:	str	r2, [sp, #84]	; 0x54
   55e94:	sub	r0, r0, #1
   55e98:	str	r0, [sp, #60]	; 0x3c
   55e9c:	orr	r0, r3, #4
   55ea0:	str	r0, [sp, #56]	; 0x38
   55ea4:	ldr	r0, [lr], #4
   55ea8:	str	r0, [sp, #64]	; 0x40
   55eac:	mov	r0, #0
   55eb0:	str	r0, [sp, #68]	; 0x44
   55eb4:	b	55ee8 <GetDataSlab+0x25f68>
   55eb8:	ldr	r0, [sp, #56]	; 0x38
   55ebc:	ldr	r0, [r0, r2]
   55ec0:	add	sl, sl, r0, lsl #3
   55ec4:	add	r7, r0, r7
   55ec8:	ldr	r2, [sp, #68]	; 0x44
   55ecc:	ldr	r0, [sp, #76]	; 0x4c
   55ed0:	str	r6, [sp, #72]	; 0x48
   55ed4:	add	r2, r1, r2
   55ed8:	str	r2, [sp, #68]	; 0x44
   55edc:	cmp	r2, r0
   55ee0:	mov	r2, #0
   55ee4:	bge	56c1c <GetDataSlab+0x26c9c>
   55ee8:	ldr	r0, [sp, #64]	; 0x40
   55eec:	cmp	r1, #1
   55ef0:	add	r2, r0, r7
   55ef4:	add	r7, sl, r0, lsl #3
   55ef8:	blt	55f4c <GetDataSlab+0x25fcc>
   55efc:	ldr	r0, [sp, #88]	; 0x58
   55f00:	ldr	r1, [sp, #68]	; 0x44
   55f04:	ldr	ip, [fp, #8]
   55f08:	ldr	r6, [fp, #16]
   55f0c:	mov	r3, #0
   55f10:	add	r4, r0, r1
   55f14:	ldr	r0, [fp, #20]
   55f18:	ldrb	r1, [r7]
   55f1c:	strb	r1, [r4, r3]
   55f20:	add	r3, r3, #1
   55f24:	ldr	r5, [r6]
   55f28:	ldr	r1, [r0]
   55f2c:	add	r7, r7, r5, lsl #3
   55f30:	add	r2, r5, r2
   55f34:	cmp	r3, r1
   55f38:	blt	55f18 <GetDataSlab+0x25f98>
   55f3c:	ldr	r0, [fp, #12]
   55f40:	ldr	r6, [ip]
   55f44:	ldr	r0, [r0]
   55f48:	b	55f50 <GetDataSlab+0x25fd0>
   55f4c:	ldr	r6, [sp, #72]	; 0x48
   55f50:	mls	r3, r5, r1, r6
   55f54:	str	r0, [sp, #64]	; 0x40
   55f58:	sub	r3, r3, r0
   55f5c:	ldr	r0, [fp, #24]
   55f60:	add	sl, r7, r3, lsl #3
   55f64:	add	r7, r3, r2
   55f68:	cmp	r0, #2
   55f6c:	blt	55ec8 <GetDataSlab+0x25f48>
   55f70:	ldr	r9, [sp, #60]	; 0x3c
   55f74:	mov	r2, #0
   55f78:	b	55fa4 <GetDataSlab+0x26024>
   55f7c:	sub	r0, fp, #176	; 0xb0
   55f80:	ldr	r4, [lr, r2]
   55f84:	sub	r3, r3, ip
   55f88:	ldr	r0, [r0, r2]
   55f8c:	mla	r0, r4, r0, r3
   55f90:	add	r7, r0, r7
   55f94:	add	sl, sl, r0, lsl #3
   55f98:	subs	r9, r9, #1
   55f9c:	add	r2, r2, #4
   55fa0:	beq	55ec8 <GetDataSlab+0x25f48>
   55fa4:	ldr	r3, [r8, r2]
   55fa8:	ldr	r0, [sp, #84]	; 0x54
   55fac:	add	r3, r3, #1
   55fb0:	str	r3, [r8, r2]
   55fb4:	ldr	r0, [r0, r2]
   55fb8:	sdiv	r4, r3, r0
   55fbc:	mls	r0, r4, r0, r3
   55fc0:	cmp	r0, #0
   55fc4:	bne	55eb8 <GetDataSlab+0x25f38>
   55fc8:	mov	r0, #0
   55fcc:	str	r0, [r8, r2]
   55fd0:	ldr	r0, [sp, #80]	; 0x50
   55fd4:	ldr	r3, [r0, r2]
   55fd8:	sdiv	r0, r7, r3
   55fdc:	mls	ip, r0, r3, r7
   55fe0:	cmp	ip, #0
   55fe4:	bne	55f7c <GetDataSlab+0x25ffc>
   55fe8:	ldr	r3, [lr, r2]
   55fec:	cmp	r3, #0
   55ff0:	beq	55f98 <GetDataSlab+0x26018>
   55ff4:	sub	r0, fp, #176	; 0xb0
   55ff8:	ldr	r0, [r0, r2]
   55ffc:	mla	r7, r0, r3, r7
   56000:	mul	r0, r0, r3
   56004:	b	55f94 <GetDataSlab+0x26014>
   56008:	ldr	r0, [sp, #76]	; 0x4c
   5600c:	ldr	r2, [fp, #20]
   56010:	cmp	r0, #1
   56014:	sub	r0, fp, #176	; 0xb0
   56018:	blt	56468 <GetDataSlab+0x264e8>
   5601c:	orr	r0, r0, #4
   56020:	ldr	lr, [fp, #12]
   56024:	mov	r3, r8
   56028:	sub	r6, fp, #136	; 0x88
   5602c:	add	r2, r2, #4
   56030:	str	r0, [sp, #80]	; 0x50
   56034:	ldr	r0, [fp, #24]
   56038:	orr	r8, r6, #4
   5603c:	str	r2, [sp, #84]	; 0x54
   56040:	sub	r0, r0, #1
   56044:	str	r0, [sp, #60]	; 0x3c
   56048:	orr	r0, r3, #4
   5604c:	str	r0, [sp, #56]	; 0x38
   56050:	ldr	r0, [lr], #4
   56054:	str	r0, [sp, #64]	; 0x40
   56058:	mov	r0, #0
   5605c:	str	r0, [sp, #68]	; 0x44
   56060:	b	56094 <GetDataSlab+0x26114>
   56064:	ldr	r0, [sp, #56]	; 0x38
   56068:	ldr	r0, [r0, r2]
   5606c:	add	sl, sl, r0, lsl #3
   56070:	add	r7, r0, r7
   56074:	ldr	r2, [sp, #68]	; 0x44
   56078:	ldr	r0, [sp, #76]	; 0x4c
   5607c:	str	r6, [sp, #72]	; 0x48
   56080:	add	r2, r1, r2
   56084:	str	r2, [sp, #68]	; 0x44
   56088:	cmp	r2, r0
   5608c:	mov	r2, #0
   56090:	bge	56c1c <GetDataSlab+0x26c9c>
   56094:	ldr	r0, [sp, #64]	; 0x40
   56098:	cmp	r1, #1
   5609c:	add	r2, r0, r7
   560a0:	add	r7, sl, r0, lsl #3
   560a4:	blt	560f8 <GetDataSlab+0x26178>
   560a8:	ldr	r0, [sp, #88]	; 0x58
   560ac:	ldr	r1, [sp, #68]	; 0x44
   560b0:	ldr	ip, [fp, #8]
   560b4:	ldr	r6, [fp, #16]
   560b8:	mov	r3, #0
   560bc:	add	r4, r0, r1
   560c0:	ldr	r0, [fp, #20]
   560c4:	ldrb	r1, [r7]
   560c8:	strb	r1, [r4, r3]
   560cc:	add	r3, r3, #1
   560d0:	ldr	r5, [r6]
   560d4:	ldr	r1, [r0]
   560d8:	add	r7, r7, r5, lsl #3
   560dc:	add	r2, r5, r2
   560e0:	cmp	r3, r1
   560e4:	blt	560c4 <GetDataSlab+0x26144>
   560e8:	ldr	r0, [fp, #12]
   560ec:	ldr	r6, [ip]
   560f0:	ldr	r0, [r0]
   560f4:	b	560fc <GetDataSlab+0x2617c>
   560f8:	ldr	r6, [sp, #72]	; 0x48
   560fc:	mls	r3, r5, r1, r6
   56100:	str	r0, [sp, #64]	; 0x40
   56104:	sub	r3, r3, r0
   56108:	ldr	r0, [fp, #24]
   5610c:	add	sl, r7, r3, lsl #3
   56110:	add	r7, r3, r2
   56114:	cmp	r0, #2
   56118:	blt	56074 <GetDataSlab+0x260f4>
   5611c:	ldr	r9, [sp, #60]	; 0x3c
   56120:	mov	r2, #0
   56124:	b	56150 <GetDataSlab+0x261d0>
   56128:	sub	r0, fp, #176	; 0xb0
   5612c:	ldr	r4, [lr, r2]
   56130:	sub	r3, r3, ip
   56134:	ldr	r0, [r0, r2]
   56138:	mla	r0, r4, r0, r3
   5613c:	add	r7, r0, r7
   56140:	add	sl, sl, r0, lsl #3
   56144:	subs	r9, r9, #1
   56148:	add	r2, r2, #4
   5614c:	beq	56074 <GetDataSlab+0x260f4>
   56150:	ldr	r3, [r8, r2]
   56154:	ldr	r0, [sp, #84]	; 0x54
   56158:	add	r3, r3, #1
   5615c:	str	r3, [r8, r2]
   56160:	ldr	r0, [r0, r2]
   56164:	sdiv	r4, r3, r0
   56168:	mls	r0, r4, r0, r3
   5616c:	cmp	r0, #0
   56170:	bne	56064 <GetDataSlab+0x260e4>
   56174:	mov	r0, #0
   56178:	str	r0, [r8, r2]
   5617c:	ldr	r0, [sp, #80]	; 0x50
   56180:	ldr	r3, [r0, r2]
   56184:	sdiv	r0, r7, r3
   56188:	mls	ip, r0, r3, r7
   5618c:	cmp	ip, #0
   56190:	bne	56128 <GetDataSlab+0x261a8>
   56194:	ldr	r3, [lr, r2]
   56198:	cmp	r3, #0
   5619c:	beq	56144 <GetDataSlab+0x261c4>
   561a0:	sub	r0, fp, #176	; 0xb0
   561a4:	ldr	r0, [r0, r2]
   561a8:	mla	r7, r0, r3, r7
   561ac:	mul	r0, r0, r3
   561b0:	b	56140 <GetDataSlab+0x261c0>
   561b4:	ldr	r0, [sp, #76]	; 0x4c
   561b8:	ldr	r3, [fp, #20]
   561bc:	cmp	r0, #1
   561c0:	ldr	r0, [sp, #60]	; 0x3c
   561c4:	blt	56c18 <GetDataSlab+0x26c98>
   561c8:	ldr	r2, [sp, #92]	; 0x5c
   561cc:	mov	r7, r3
   561d0:	ldr	r3, [sp, #72]	; 0x48
   561d4:	lsl	r9, r5, #3
   561d8:	lsl	sl, r5, #4
   561dc:	ldr	r6, [r2], #4
   561e0:	mls	r0, r3, r5, r0
   561e4:	str	r2, [sp, #92]	; 0x5c
   561e8:	sub	r0, r0, r6
   561ec:	str	r6, [sp, #60]	; 0x3c
   561f0:	str	r0, [sp, #56]	; 0x38
   561f4:	sub	r0, fp, #136	; 0x88
   561f8:	orr	r4, r0, #4
   561fc:	add	r0, r7, #4
   56200:	str	r0, [sp, #84]	; 0x54
   56204:	sub	r0, fp, #176	; 0xb0
   56208:	orr	r0, r0, #4
   5620c:	str	r0, [sp, #80]	; 0x50
   56210:	ldr	r0, [fp, #24]
   56214:	sub	r0, r0, #1
   56218:	str	r0, [sp, #40]	; 0x28
   5621c:	sub	r0, fp, #96	; 0x60
   56220:	orr	r0, r0, #4
   56224:	str	r0, [sp, #36]	; 0x24
   56228:	mla	r0, r3, r5, r6
   5622c:	str	r0, [sp, #48]	; 0x30
   56230:	and	r0, r3, #1
   56234:	sub	lr, r3, r0
   56238:	str	r0, [sp, #44]	; 0x2c
   5623c:	lsl	r0, r3, #1
   56240:	str	r0, [sp, #52]	; 0x34
   56244:	add	r0, r8, #2
   56248:	str	r0, [sp, #68]	; 0x44
   5624c:	mov	r0, #0
   56250:	str	r0, [sp, #64]	; 0x40
   56254:	b	56298 <GetDataSlab+0x26318>
   56258:	ldr	r0, [sp, #36]	; 0x24
   5625c:	ldr	r0, [r0, r2]
   56260:	add	ip, ip, r0, lsl #3
   56264:	add	r1, r0, r1
   56268:	ldr	r0, [sp, #52]	; 0x34
   5626c:	ldr	r2, [sp, #68]	; 0x44
   56270:	ldr	r3, [sp, #72]	; 0x48
   56274:	add	r2, r2, r0
   56278:	ldr	r0, [sp, #76]	; 0x4c
   5627c:	str	r2, [sp, #68]	; 0x44
   56280:	ldr	r2, [sp, #64]	; 0x40
   56284:	add	r2, r2, r3
   56288:	str	r2, [sp, #64]	; 0x40
   5628c:	cmp	r2, r0
   56290:	mov	r2, #0
   56294:	bge	56c1c <GetDataSlab+0x26c9c>
   56298:	ldr	r8, [sp, #60]	; 0x3c
   5629c:	cmp	r3, #1
   562a0:	add	r2, ip, r8, lsl #3
   562a4:	blt	5630c <GetDataSlab+0x2638c>
   562a8:	mov	r3, #0
   562ac:	beq	562e0 <GetDataSlab+0x26360>
   562b0:	ldr	r5, [sp, #68]	; 0x44
   562b4:	mov	r3, #0
   562b8:	ldrh	r0, [r2]
   562bc:	add	r3, r3, #2
   562c0:	cmp	lr, r3
   562c4:	strh	r0, [r5, #-2]
   562c8:	add	r0, r2, r9
   562cc:	add	r2, r2, sl
   562d0:	ldrh	r0, [r0]
   562d4:	strh	r0, [r5]
   562d8:	add	r5, r5, #4
   562dc:	bne	562b8 <GetDataSlab+0x26338>
   562e0:	ldr	r0, [sp, #44]	; 0x2c
   562e4:	ldr	r8, [sp, #48]	; 0x30
   562e8:	cmp	r0, #0
   562ec:	beq	5630c <GetDataSlab+0x2638c>
   562f0:	ldr	r0, [sp, #88]	; 0x58
   562f4:	ldr	r7, [sp, #64]	; 0x40
   562f8:	ldrh	r6, [r2], r9
   562fc:	ldr	r8, [sp, #48]	; 0x30
   56300:	add	r0, r0, r7, lsl #1
   56304:	add	r0, r0, r3, lsl #1
   56308:	strh	r6, [r0]
   5630c:	ldr	r3, [sp, #56]	; 0x38
   56310:	add	r0, r8, r1
   56314:	add	r1, r0, r3
   56318:	ldr	r0, [fp, #24]
   5631c:	add	ip, r2, r3, lsl #3
   56320:	cmp	r0, #2
   56324:	blt	56268 <GetDataSlab+0x262e8>
   56328:	ldr	r3, [sp, #40]	; 0x28
   5632c:	ldr	r8, [sp, #92]	; 0x5c
   56330:	mov	r2, #0
   56334:	b	56360 <GetDataSlab+0x263e0>
   56338:	sub	r5, fp, #176	; 0xb0
   5633c:	ldr	r7, [r8, r2]
   56340:	sub	r0, r0, r6
   56344:	ldr	r5, [r5, r2]
   56348:	mla	r0, r7, r5, r0
   5634c:	add	r1, r0, r1
   56350:	add	ip, ip, r0, lsl #3
   56354:	subs	r3, r3, #1
   56358:	add	r2, r2, #4
   5635c:	beq	56268 <GetDataSlab+0x262e8>
   56360:	ldr	r0, [r4, r2]
   56364:	ldr	r5, [sp, #84]	; 0x54
   56368:	add	r0, r0, #1
   5636c:	str	r0, [r4, r2]
   56370:	ldr	r5, [r5, r2]
   56374:	sdiv	r6, r0, r5
   56378:	mls	r0, r6, r5, r0
   5637c:	cmp	r0, #0
   56380:	bne	56258 <GetDataSlab+0x262d8>
   56384:	mov	r0, #0
   56388:	str	r0, [r4, r2]
   5638c:	ldr	r0, [sp, #80]	; 0x50
   56390:	ldr	r0, [r0, r2]
   56394:	sdiv	r5, r1, r0
   56398:	mls	r6, r5, r0, r1
   5639c:	cmp	r6, #0
   563a0:	bne	56338 <GetDataSlab+0x263b8>
   563a4:	ldr	r0, [r8, r2]
   563a8:	cmp	r0, #0
   563ac:	beq	56354 <GetDataSlab+0x263d4>
   563b0:	sub	r5, fp, #176	; 0xb0
   563b4:	ldr	r5, [r5, r2]
   563b8:	mla	r1, r5, r0, r1
   563bc:	mul	r0, r5, r0
   563c0:	b	56350 <GetDataSlab+0x263d0>
   563c4:	ldr	r0, [sp, #76]	; 0x4c
   563c8:	ldr	r3, [fp, #20]
   563cc:	cmp	r0, #1
   563d0:	ldr	r0, [sp, #60]	; 0x3c
   563d4:	blt	56468 <GetDataSlab+0x264e8>
   563d8:	ldr	r2, [sp, #92]	; 0x5c
   563dc:	mov	r7, r3
   563e0:	ldr	r3, [sp, #72]	; 0x48
   563e4:	lsl	r9, r5, #3
   563e8:	lsl	sl, r5, #4
   563ec:	ldr	r6, [r2], #4
   563f0:	mls	r0, r3, r5, r0
   563f4:	str	r2, [sp, #92]	; 0x5c
   563f8:	sub	r0, r0, r6
   563fc:	str	r6, [sp, #60]	; 0x3c
   56400:	str	r0, [sp, #56]	; 0x38
   56404:	sub	r0, fp, #136	; 0x88
   56408:	orr	r4, r0, #4
   5640c:	add	r0, r7, #4
   56410:	str	r0, [sp, #84]	; 0x54
   56414:	sub	r0, fp, #176	; 0xb0
   56418:	orr	r0, r0, #4
   5641c:	str	r0, [sp, #80]	; 0x50
   56420:	ldr	r0, [fp, #24]
   56424:	sub	r0, r0, #1
   56428:	str	r0, [sp, #40]	; 0x28
   5642c:	sub	r0, fp, #96	; 0x60
   56430:	orr	r0, r0, #4
   56434:	str	r0, [sp, #36]	; 0x24
   56438:	mla	r0, r3, r5, r6
   5643c:	str	r0, [sp, #48]	; 0x30
   56440:	and	r0, r3, #1
   56444:	sub	lr, r3, r0
   56448:	str	r0, [sp, #44]	; 0x2c
   5644c:	lsl	r0, r3, #1
   56450:	str	r0, [sp, #52]	; 0x34
   56454:	add	r0, r8, #2
   56458:	str	r0, [sp, #68]	; 0x44
   5645c:	mov	r0, #0
   56460:	str	r0, [sp, #64]	; 0x40
   56464:	b	564b0 <GetDataSlab+0x26530>
   56468:	mov	r2, #0
   5646c:	b	56c1c <GetDataSlab+0x26c9c>
   56470:	ldr	r0, [sp, #36]	; 0x24
   56474:	ldr	r0, [r0, r2]
   56478:	add	ip, ip, r0, lsl #3
   5647c:	add	r1, r0, r1
   56480:	ldr	r0, [sp, #52]	; 0x34
   56484:	ldr	r2, [sp, #68]	; 0x44
   56488:	ldr	r3, [sp, #72]	; 0x48
   5648c:	add	r2, r2, r0
   56490:	ldr	r0, [sp, #76]	; 0x4c
   56494:	str	r2, [sp, #68]	; 0x44
   56498:	ldr	r2, [sp, #64]	; 0x40
   5649c:	add	r2, r2, r3
   564a0:	str	r2, [sp, #64]	; 0x40
   564a4:	cmp	r2, r0
   564a8:	mov	r2, #0
   564ac:	bge	56c1c <GetDataSlab+0x26c9c>
   564b0:	ldr	r8, [sp, #60]	; 0x3c
   564b4:	cmp	r3, #1
   564b8:	add	r2, ip, r8, lsl #3
   564bc:	blt	56524 <GetDataSlab+0x265a4>
   564c0:	mov	r3, #0
   564c4:	beq	564f8 <GetDataSlab+0x26578>
   564c8:	ldr	r5, [sp, #68]	; 0x44
   564cc:	mov	r3, #0
   564d0:	ldrh	r0, [r2]
   564d4:	add	r3, r3, #2
   564d8:	cmp	lr, r3
   564dc:	strh	r0, [r5, #-2]
   564e0:	add	r0, r2, r9
   564e4:	add	r2, r2, sl
   564e8:	ldrh	r0, [r0]
   564ec:	strh	r0, [r5]
   564f0:	add	r5, r5, #4
   564f4:	bne	564d0 <GetDataSlab+0x26550>
   564f8:	ldr	r0, [sp, #44]	; 0x2c
   564fc:	ldr	r8, [sp, #48]	; 0x30
   56500:	cmp	r0, #0
   56504:	beq	56524 <GetDataSlab+0x265a4>
   56508:	ldr	r0, [sp, #88]	; 0x58
   5650c:	ldr	r7, [sp, #64]	; 0x40
   56510:	ldrh	r6, [r2], r9
   56514:	ldr	r8, [sp, #48]	; 0x30
   56518:	add	r0, r0, r7, lsl #1
   5651c:	add	r0, r0, r3, lsl #1
   56520:	strh	r6, [r0]
   56524:	ldr	r3, [sp, #56]	; 0x38
   56528:	add	r0, r8, r1
   5652c:	add	r1, r0, r3
   56530:	ldr	r0, [fp, #24]
   56534:	add	ip, r2, r3, lsl #3
   56538:	cmp	r0, #2
   5653c:	blt	56480 <GetDataSlab+0x26500>
   56540:	ldr	r3, [sp, #40]	; 0x28
   56544:	ldr	r8, [sp, #92]	; 0x5c
   56548:	mov	r2, #0
   5654c:	b	56578 <GetDataSlab+0x265f8>
   56550:	sub	r5, fp, #176	; 0xb0
   56554:	ldr	r7, [r8, r2]
   56558:	sub	r0, r0, r6
   5655c:	ldr	r5, [r5, r2]
   56560:	mla	r0, r7, r5, r0
   56564:	add	r1, r0, r1
   56568:	add	ip, ip, r0, lsl #3
   5656c:	subs	r3, r3, #1
   56570:	add	r2, r2, #4
   56574:	beq	56480 <GetDataSlab+0x26500>
   56578:	ldr	r0, [r4, r2]
   5657c:	ldr	r5, [sp, #84]	; 0x54
   56580:	add	r0, r0, #1
   56584:	str	r0, [r4, r2]
   56588:	ldr	r5, [r5, r2]
   5658c:	sdiv	r6, r0, r5
   56590:	mls	r0, r6, r5, r0
   56594:	cmp	r0, #0
   56598:	bne	56470 <GetDataSlab+0x264f0>
   5659c:	mov	r0, #0
   565a0:	str	r0, [r4, r2]
   565a4:	ldr	r0, [sp, #80]	; 0x50
   565a8:	ldr	r0, [r0, r2]
   565ac:	sdiv	r5, r1, r0
   565b0:	mls	r6, r5, r0, r1
   565b4:	cmp	r6, #0
   565b8:	bne	56550 <GetDataSlab+0x265d0>
   565bc:	ldr	r0, [r8, r2]
   565c0:	cmp	r0, #0
   565c4:	beq	5656c <GetDataSlab+0x265ec>
   565c8:	sub	r5, fp, #176	; 0xb0
   565cc:	ldr	r5, [r5, r2]
   565d0:	mla	r1, r5, r0, r1
   565d4:	mul	r0, r5, r0
   565d8:	b	56568 <GetDataSlab+0x265e8>
   565dc:	ldr	r0, [sp, #76]	; 0x4c
   565e0:	ldr	r2, [fp, #20]
   565e4:	cmp	r0, #1
   565e8:	sub	r0, fp, #176	; 0xb0
   565ec:	blt	56c18 <GetDataSlab+0x26c98>
   565f0:	orr	r0, r0, #4
   565f4:	ldr	lr, [fp, #12]
   565f8:	mov	r3, r8
   565fc:	sub	r6, fp, #136	; 0x88
   56600:	add	r2, r2, #4
   56604:	str	r0, [sp, #80]	; 0x50
   56608:	ldr	r0, [fp, #24]
   5660c:	orr	r8, r6, #4
   56610:	str	r2, [sp, #84]	; 0x54
   56614:	sub	r0, r0, #1
   56618:	str	r0, [sp, #60]	; 0x3c
   5661c:	orr	r0, r3, #4
   56620:	str	r0, [sp, #56]	; 0x38
   56624:	ldr	r0, [lr], #4
   56628:	str	r0, [sp, #64]	; 0x40
   5662c:	mov	r0, #0
   56630:	str	r0, [sp, #68]	; 0x44
   56634:	b	56668 <GetDataSlab+0x266e8>
   56638:	ldr	r0, [sp, #56]	; 0x38
   5663c:	ldr	r0, [r0, r2]
   56640:	add	sl, sl, r0, lsl #3
   56644:	add	r7, r0, r7
   56648:	ldr	r3, [sp, #68]	; 0x44
   5664c:	ldr	r0, [sp, #76]	; 0x4c
   56650:	mov	r2, #0
   56654:	str	r6, [sp, #72]	; 0x48
   56658:	add	r3, r1, r3
   5665c:	cmp	r3, r0
   56660:	str	r3, [sp, #68]	; 0x44
   56664:	bge	56c1c <GetDataSlab+0x26c9c>
   56668:	ldr	r0, [sp, #64]	; 0x40
   5666c:	cmp	r1, #1
   56670:	add	r2, r0, r7
   56674:	add	r7, sl, r0, lsl #3
   56678:	blt	566cc <GetDataSlab+0x2674c>
   5667c:	ldr	r0, [sp, #88]	; 0x58
   56680:	ldr	r1, [sp, #68]	; 0x44
   56684:	ldr	ip, [fp, #8]
   56688:	ldr	r6, [fp, #16]
   5668c:	mov	r3, #0
   56690:	add	r4, r0, r1, lsl #2
   56694:	ldr	r0, [fp, #20]
   56698:	ldr	r1, [r7]
   5669c:	str	r1, [r4, r3, lsl #2]
   566a0:	add	r3, r3, #1
   566a4:	ldr	r5, [r6]
   566a8:	ldr	r1, [r0]
   566ac:	add	r7, r7, r5, lsl #3
   566b0:	add	r2, r5, r2
   566b4:	cmp	r3, r1
   566b8:	blt	56698 <GetDataSlab+0x26718>
   566bc:	ldr	r0, [fp, #12]
   566c0:	ldr	r6, [ip]
   566c4:	ldr	r0, [r0]
   566c8:	b	566d0 <GetDataSlab+0x26750>
   566cc:	ldr	r6, [sp, #72]	; 0x48
   566d0:	mls	r3, r5, r1, r6
   566d4:	str	r0, [sp, #64]	; 0x40
   566d8:	sub	r3, r3, r0
   566dc:	ldr	r0, [fp, #24]
   566e0:	add	sl, r7, r3, lsl #3
   566e4:	add	r7, r3, r2
   566e8:	cmp	r0, #2
   566ec:	blt	56648 <GetDataSlab+0x266c8>
   566f0:	ldr	r9, [sp, #60]	; 0x3c
   566f4:	mov	r2, #0
   566f8:	b	56724 <GetDataSlab+0x267a4>
   566fc:	sub	r0, fp, #176	; 0xb0
   56700:	ldr	r4, [lr, r2]
   56704:	sub	r3, r3, ip
   56708:	ldr	r0, [r0, r2]
   5670c:	mla	r0, r4, r0, r3
   56710:	add	r7, r0, r7
   56714:	add	sl, sl, r0, lsl #3
   56718:	subs	r9, r9, #1
   5671c:	add	r2, r2, #4
   56720:	beq	56648 <GetDataSlab+0x266c8>
   56724:	ldr	r3, [r8, r2]
   56728:	ldr	r0, [sp, #84]	; 0x54
   5672c:	add	r3, r3, #1
   56730:	str	r3, [r8, r2]
   56734:	ldr	r0, [r0, r2]
   56738:	sdiv	r4, r3, r0
   5673c:	mls	r0, r4, r0, r3
   56740:	cmp	r0, #0
   56744:	bne	56638 <GetDataSlab+0x266b8>
   56748:	mov	r0, #0
   5674c:	str	r0, [r8, r2]
   56750:	ldr	r0, [sp, #80]	; 0x50
   56754:	ldr	r3, [r0, r2]
   56758:	sdiv	r0, r7, r3
   5675c:	mls	ip, r0, r3, r7
   56760:	cmp	ip, #0
   56764:	bne	566fc <GetDataSlab+0x2677c>
   56768:	ldr	r3, [lr, r2]
   5676c:	cmp	r3, #0
   56770:	beq	56718 <GetDataSlab+0x26798>
   56774:	sub	r0, fp, #176	; 0xb0
   56778:	ldr	r0, [r0, r2]
   5677c:	mla	r7, r0, r3, r7
   56780:	mul	r0, r0, r3
   56784:	b	56714 <GetDataSlab+0x26794>
   56788:	ldr	r0, [sp, #76]	; 0x4c
   5678c:	ldr	r2, [fp, #20]
   56790:	cmp	r0, #1
   56794:	sub	r0, fp, #176	; 0xb0
   56798:	blt	56c18 <GetDataSlab+0x26c98>
   5679c:	orr	r0, r0, #4
   567a0:	ldr	lr, [fp, #12]
   567a4:	mov	r3, r8
   567a8:	sub	r6, fp, #136	; 0x88
   567ac:	add	r2, r2, #4
   567b0:	str	r0, [sp, #80]	; 0x50
   567b4:	ldr	r0, [fp, #24]
   567b8:	orr	r8, r6, #4
   567bc:	str	r2, [sp, #84]	; 0x54
   567c0:	sub	r0, r0, #1
   567c4:	str	r0, [sp, #60]	; 0x3c
   567c8:	orr	r0, r3, #4
   567cc:	str	r0, [sp, #56]	; 0x38
   567d0:	ldr	r0, [lr], #4
   567d4:	str	r0, [sp, #64]	; 0x40
   567d8:	mov	r0, #0
   567dc:	str	r0, [sp, #68]	; 0x44
   567e0:	b	56814 <GetDataSlab+0x26894>
   567e4:	ldr	r0, [sp, #56]	; 0x38
   567e8:	ldr	r0, [r0, r2]
   567ec:	add	sl, sl, r0, lsl #3
   567f0:	add	r7, r0, r7
   567f4:	ldr	r2, [sp, #68]	; 0x44
   567f8:	ldr	r0, [sp, #76]	; 0x4c
   567fc:	str	r6, [sp, #72]	; 0x48
   56800:	add	r2, r1, r2
   56804:	str	r2, [sp, #68]	; 0x44
   56808:	cmp	r2, r0
   5680c:	mov	r2, #0
   56810:	bge	56c1c <GetDataSlab+0x26c9c>
   56814:	ldr	r0, [sp, #64]	; 0x40
   56818:	cmp	r1, #1
   5681c:	add	r2, r0, r7
   56820:	add	r7, sl, r0, lsl #3
   56824:	blt	56878 <GetDataSlab+0x268f8>
   56828:	ldr	r0, [sp, #88]	; 0x58
   5682c:	ldr	r1, [sp, #68]	; 0x44
   56830:	ldr	ip, [fp, #8]
   56834:	ldr	r6, [fp, #16]
   56838:	mov	r3, #0
   5683c:	add	r4, r0, r1, lsl #2
   56840:	ldr	r0, [fp, #20]
   56844:	ldr	r1, [r7]
   56848:	str	r1, [r4, r3, lsl #2]
   5684c:	add	r3, r3, #1
   56850:	ldr	r5, [r6]
   56854:	ldr	r1, [r0]
   56858:	add	r7, r7, r5, lsl #3
   5685c:	add	r2, r5, r2
   56860:	cmp	r3, r1
   56864:	blt	56844 <GetDataSlab+0x268c4>
   56868:	ldr	r0, [fp, #12]
   5686c:	ldr	r6, [ip]
   56870:	ldr	r0, [r0]
   56874:	b	5687c <GetDataSlab+0x268fc>
   56878:	ldr	r6, [sp, #72]	; 0x48
   5687c:	mls	r3, r5, r1, r6
   56880:	str	r0, [sp, #64]	; 0x40
   56884:	sub	r3, r3, r0
   56888:	ldr	r0, [fp, #24]
   5688c:	add	sl, r7, r3, lsl #3
   56890:	add	r7, r3, r2
   56894:	cmp	r0, #2
   56898:	blt	567f4 <GetDataSlab+0x26874>
   5689c:	ldr	r9, [sp, #60]	; 0x3c
   568a0:	mov	r2, #0
   568a4:	b	568d0 <GetDataSlab+0x26950>
   568a8:	sub	r0, fp, #176	; 0xb0
   568ac:	ldr	r4, [lr, r2]
   568b0:	sub	r3, r3, ip
   568b4:	ldr	r0, [r0, r2]
   568b8:	mla	r0, r4, r0, r3
   568bc:	add	r7, r0, r7
   568c0:	add	sl, sl, r0, lsl #3
   568c4:	subs	r9, r9, #1
   568c8:	add	r2, r2, #4
   568cc:	beq	567f4 <GetDataSlab+0x26874>
   568d0:	ldr	r3, [r8, r2]
   568d4:	ldr	r0, [sp, #84]	; 0x54
   568d8:	add	r3, r3, #1
   568dc:	str	r3, [r8, r2]
   568e0:	ldr	r0, [r0, r2]
   568e4:	sdiv	r4, r3, r0
   568e8:	mls	r0, r4, r0, r3
   568ec:	cmp	r0, #0
   568f0:	bne	567e4 <GetDataSlab+0x26864>
   568f4:	mov	r0, #0
   568f8:	str	r0, [r8, r2]
   568fc:	ldr	r0, [sp, #80]	; 0x50
   56900:	ldr	r3, [r0, r2]
   56904:	sdiv	r0, r7, r3
   56908:	mls	ip, r0, r3, r7
   5690c:	cmp	ip, #0
   56910:	bne	568a8 <GetDataSlab+0x26928>
   56914:	ldr	r3, [lr, r2]
   56918:	cmp	r3, #0
   5691c:	beq	568c4 <GetDataSlab+0x26944>
   56920:	sub	r0, fp, #176	; 0xb0
   56924:	ldr	r0, [r0, r2]
   56928:	mla	r7, r0, r3, r7
   5692c:	mul	r0, r0, r3
   56930:	b	568c0 <GetDataSlab+0x26940>
   56934:	ldr	r0, [sp, #76]	; 0x4c
   56938:	ldr	r1, [fp, #12]
   5693c:	ldr	r3, [sp, #72]	; 0x48
   56940:	cmp	r0, #1
   56944:	ldr	r0, [sp, #40]	; 0x28
   56948:	blt	56c18 <GetDataSlab+0x26c98>
   5694c:	ldr	r6, [sp, #44]	; 0x2c
   56950:	mov	r2, r1
   56954:	mov	r1, r4
   56958:	ldr	lr, [r2], #4
   5695c:	str	r2, [sp, #92]	; 0x5c
   56960:	mls	r0, r3, r6, r0
   56964:	lsl	r9, r6, #3
   56968:	lsl	r8, r6, #4
   5696c:	sub	r0, r0, lr
   56970:	str	r0, [sp, #60]	; 0x3c
   56974:	sub	r0, fp, #136	; 0x88
   56978:	orr	r4, r0, #4
   5697c:	ldr	r0, [fp, #20]
   56980:	add	r0, r0, #4
   56984:	str	r0, [sp, #84]	; 0x54
   56988:	orr	r0, r7, #4
   5698c:	str	r0, [sp, #80]	; 0x50
   56990:	ldr	r0, [fp, #24]
   56994:	sub	r0, r0, #1
   56998:	str	r0, [sp, #40]	; 0x28
   5699c:	sub	r0, fp, #96	; 0x60
   569a0:	orr	r0, r0, #4
   569a4:	str	r0, [sp, #36]	; 0x24
   569a8:	mla	r0, r3, r6, lr
   569ac:	str	r0, [sp, #52]	; 0x34
   569b0:	and	r0, r3, #1
   569b4:	sub	ip, r3, r0
   569b8:	str	r0, [sp, #48]	; 0x30
   569bc:	lsl	r0, r3, #3
   569c0:	str	r0, [sp, #56]	; 0x38
   569c4:	ldr	r0, [sp, #88]	; 0x58
   569c8:	str	r0, [sp, #68]	; 0x44
   569cc:	mov	r0, #0
   569d0:	str	r0, [sp, #64]	; 0x40
   569d4:	b	56a18 <GetDataSlab+0x26a98>
   569d8:	ldr	r0, [sp, #36]	; 0x24
   569dc:	ldr	r0, [r0, r2]
   569e0:	add	r1, r1, r0, lsl #3
   569e4:	add	sl, r0, sl
   569e8:	ldr	r0, [sp, #56]	; 0x38
   569ec:	ldr	r2, [sp, #68]	; 0x44
   569f0:	ldr	r3, [sp, #72]	; 0x48
   569f4:	ldr	r5, [sp, #64]	; 0x40
   569f8:	add	r2, r2, r0
   569fc:	ldr	r0, [sp, #76]	; 0x4c
   56a00:	add	r5, r5, r3
   56a04:	str	r2, [sp, #68]	; 0x44
   56a08:	mov	r2, #0
   56a0c:	str	r5, [sp, #64]	; 0x40
   56a10:	cmp	r5, r0
   56a14:	bge	56c1c <GetDataSlab+0x26c9c>
   56a18:	add	r5, r1, lr, lsl #3
   56a1c:	cmp	r3, #1
   56a20:	blt	56a38 <GetDataSlab+0x26ab8>
   56a24:	mov	r1, lr
   56a28:	mov	r2, #0
   56a2c:	bne	56a44 <GetDataSlab+0x26ac4>
   56a30:	mov	r3, r5
   56a34:	b	56a7c <GetDataSlab+0x26afc>
   56a38:	mov	r6, lr
   56a3c:	mov	r3, r5
   56a40:	b	56ab8 <GetDataSlab+0x26b38>
   56a44:	ldr	lr, [sp, #68]	; 0x44
   56a48:	mov	r2, #0
   56a4c:	ldm	r5, {r0, r3}
   56a50:	add	r2, r2, #2
   56a54:	cmp	ip, r2
   56a58:	stm	lr, {r0, r3}
   56a5c:	add	r3, r5, r8
   56a60:	ldr	r0, [r5, r9]!
   56a64:	ldr	r5, [r5, #4]
   56a68:	str	r0, [lr, #8]
   56a6c:	str	r5, [lr, #12]
   56a70:	add	lr, lr, #16
   56a74:	mov	r5, r3
   56a78:	bne	56a4c <GetDataSlab+0x26acc>
   56a7c:	ldr	r0, [sp, #48]	; 0x30
   56a80:	ldr	r6, [sp, #52]	; 0x34
   56a84:	mov	lr, r1
   56a88:	cmp	r0, #0
   56a8c:	beq	56ab8 <GetDataSlab+0x26b38>
   56a90:	ldr	r0, [sp, #88]	; 0x58
   56a94:	ldr	r1, [sp, #64]	; 0x40
   56a98:	ldr	r6, [r3]
   56a9c:	ldr	r5, [r3, #4]
   56aa0:	add	r0, r0, r1, lsl #3
   56aa4:	str	r6, [r0, r2, lsl #3]!
   56aa8:	ldr	r6, [sp, #52]	; 0x34
   56aac:	str	r5, [r0, #4]
   56ab0:	ldr	r0, [sp, #44]	; 0x2c
   56ab4:	add	r3, r3, r0, lsl #3
   56ab8:	ldr	r2, [sp, #60]	; 0x3c
   56abc:	add	r0, r6, sl
   56ac0:	add	sl, r0, r2
   56ac4:	ldr	r0, [fp, #24]
   56ac8:	add	r1, r3, r2, lsl #3
   56acc:	cmp	r0, #2
   56ad0:	blt	569e8 <GetDataSlab+0x26a68>
   56ad4:	ldr	r3, [sp, #40]	; 0x28
   56ad8:	mov	r2, #0
   56adc:	b	56b0c <GetDataSlab+0x26b8c>
   56ae0:	sub	r7, fp, #176	; 0xb0
   56ae4:	sub	r0, r6, r0
   56ae8:	ldr	r5, [r7, r2]
   56aec:	ldr	r7, [sp, #92]	; 0x5c
   56af0:	ldr	r7, [r7, r2]
   56af4:	mla	r0, r7, r5, r0
   56af8:	add	sl, r0, sl
   56afc:	add	r1, r1, r0, lsl #3
   56b00:	subs	r3, r3, #1
   56b04:	add	r2, r2, #4
   56b08:	beq	569e8 <GetDataSlab+0x26a68>
   56b0c:	ldr	r0, [r4, r2]
   56b10:	ldr	r5, [sp, #84]	; 0x54
   56b14:	add	r0, r0, #1
   56b18:	str	r0, [r4, r2]
   56b1c:	ldr	r6, [r5, r2]
   56b20:	sdiv	r5, r0, r6
   56b24:	mls	r0, r5, r6, r0
   56b28:	cmp	r0, #0
   56b2c:	bne	569d8 <GetDataSlab+0x26a58>
   56b30:	mov	r0, #0
   56b34:	str	r0, [r4, r2]
   56b38:	ldr	r0, [sp, #80]	; 0x50
   56b3c:	ldr	r6, [r0, r2]
   56b40:	sdiv	r0, sl, r6
   56b44:	mls	r0, r0, r6, sl
   56b48:	cmp	r0, #0
   56b4c:	bne	56ae0 <GetDataSlab+0x26b60>
   56b50:	ldr	r0, [sp, #92]	; 0x5c
   56b54:	ldr	r0, [r0, r2]
   56b58:	cmp	r0, #0
   56b5c:	beq	56b00 <GetDataSlab+0x26b80>
   56b60:	sub	r7, fp, #176	; 0xb0
   56b64:	ldr	r7, [r7, r2]
   56b68:	mla	sl, r7, r0, sl
   56b6c:	mul	r0, r7, r0
   56b70:	b	56afc <GetDataSlab+0x26b7c>
   56b74:	ldr	r0, [sp, #76]	; 0x4c
   56b78:	ldr	r1, [fp, #12]
   56b7c:	ldr	r3, [sp, #72]	; 0x48
   56b80:	cmp	r0, #1
   56b84:	ldr	r0, [sp, #40]	; 0x28
   56b88:	blt	56c18 <GetDataSlab+0x26c98>
   56b8c:	ldr	r6, [sp, #44]	; 0x2c
   56b90:	mov	r2, r1
   56b94:	mov	r1, r4
   56b98:	ldr	lr, [r2], #4
   56b9c:	str	r2, [sp, #92]	; 0x5c
   56ba0:	mls	r0, r3, r6, r0
   56ba4:	lsl	r9, r6, #3
   56ba8:	lsl	r8, r6, #4
   56bac:	sub	r0, r0, lr
   56bb0:	str	r0, [sp, #60]	; 0x3c
   56bb4:	sub	r0, fp, #136	; 0x88
   56bb8:	orr	r4, r0, #4
   56bbc:	ldr	r0, [fp, #20]
   56bc0:	add	r0, r0, #4
   56bc4:	str	r0, [sp, #84]	; 0x54
   56bc8:	orr	r0, r7, #4
   56bcc:	str	r0, [sp, #80]	; 0x50
   56bd0:	ldr	r0, [fp, #24]
   56bd4:	sub	r0, r0, #1
   56bd8:	str	r0, [sp, #40]	; 0x28
   56bdc:	sub	r0, fp, #96	; 0x60
   56be0:	orr	r0, r0, #4
   56be4:	str	r0, [sp, #36]	; 0x24
   56be8:	mla	r0, r3, r6, lr
   56bec:	str	r0, [sp, #52]	; 0x34
   56bf0:	and	r0, r3, #1
   56bf4:	sub	ip, r3, r0
   56bf8:	str	r0, [sp, #48]	; 0x30
   56bfc:	lsl	r0, r3, #3
   56c00:	str	r0, [sp, #56]	; 0x38
   56c04:	ldr	r0, [sp, #88]	; 0x58
   56c08:	str	r0, [sp, #68]	; 0x44
   56c0c:	mov	r0, #0
   56c10:	str	r0, [sp, #64]	; 0x40
   56c14:	b	56c70 <GetDataSlab+0x26cf0>
   56c18:	mov	r2, #0
   56c1c:	mov	r0, r2
   56c20:	sub	sp, fp, #48	; 0x30
   56c24:	vpop	{d8-d9}
   56c28:	add	sp, sp, #4
   56c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   56c30:	ldr	r0, [sp, #36]	; 0x24
   56c34:	ldr	r0, [r0, r2]
   56c38:	add	r1, r1, r0, lsl #3
   56c3c:	add	sl, r0, sl
   56c40:	ldr	r0, [sp, #56]	; 0x38
   56c44:	ldr	r2, [sp, #68]	; 0x44
   56c48:	ldr	r3, [sp, #72]	; 0x48
   56c4c:	ldr	r5, [sp, #64]	; 0x40
   56c50:	add	r2, r2, r0
   56c54:	ldr	r0, [sp, #76]	; 0x4c
   56c58:	add	r5, r5, r3
   56c5c:	str	r2, [sp, #68]	; 0x44
   56c60:	mov	r2, #0
   56c64:	str	r5, [sp, #64]	; 0x40
   56c68:	cmp	r5, r0
   56c6c:	bge	56c1c <GetDataSlab+0x26c9c>
   56c70:	add	r5, r1, lr, lsl #3
   56c74:	cmp	r3, #1
   56c78:	blt	56c90 <GetDataSlab+0x26d10>
   56c7c:	mov	r1, lr
   56c80:	mov	r2, #0
   56c84:	bne	56c9c <GetDataSlab+0x26d1c>
   56c88:	mov	r3, r5
   56c8c:	b	56cd4 <GetDataSlab+0x26d54>
   56c90:	mov	r6, lr
   56c94:	mov	r3, r5
   56c98:	b	56d10 <GetDataSlab+0x26d90>
   56c9c:	ldr	lr, [sp, #68]	; 0x44
   56ca0:	mov	r2, #0
   56ca4:	ldm	r5, {r0, r3}
   56ca8:	add	r2, r2, #2
   56cac:	cmp	ip, r2
   56cb0:	stm	lr, {r0, r3}
   56cb4:	add	r3, r5, r8
   56cb8:	ldr	r0, [r5, r9]!
   56cbc:	ldr	r5, [r5, #4]
   56cc0:	str	r0, [lr, #8]
   56cc4:	str	r5, [lr, #12]
   56cc8:	add	lr, lr, #16
   56ccc:	mov	r5, r3
   56cd0:	bne	56ca4 <GetDataSlab+0x26d24>
   56cd4:	ldr	r0, [sp, #48]	; 0x30
   56cd8:	ldr	r6, [sp, #52]	; 0x34
   56cdc:	mov	lr, r1
   56ce0:	cmp	r0, #0
   56ce4:	beq	56d10 <GetDataSlab+0x26d90>
   56ce8:	ldr	r0, [sp, #88]	; 0x58
   56cec:	ldr	r1, [sp, #64]	; 0x40
   56cf0:	ldr	r6, [r3]
   56cf4:	ldr	r5, [r3, #4]
   56cf8:	add	r0, r0, r1, lsl #3
   56cfc:	str	r6, [r0, r2, lsl #3]!
   56d00:	ldr	r6, [sp, #52]	; 0x34
   56d04:	str	r5, [r0, #4]
   56d08:	ldr	r0, [sp, #44]	; 0x2c
   56d0c:	add	r3, r3, r0, lsl #3
   56d10:	ldr	r2, [sp, #60]	; 0x3c
   56d14:	add	r0, r6, sl
   56d18:	add	sl, r0, r2
   56d1c:	ldr	r0, [fp, #24]
   56d20:	add	r1, r3, r2, lsl #3
   56d24:	cmp	r0, #2
   56d28:	blt	56c40 <GetDataSlab+0x26cc0>
   56d2c:	ldr	r3, [sp, #40]	; 0x28
   56d30:	mov	r2, #0
   56d34:	b	56d64 <GetDataSlab+0x26de4>
   56d38:	sub	r7, fp, #176	; 0xb0
   56d3c:	sub	r0, r6, r0
   56d40:	ldr	r5, [r7, r2]
   56d44:	ldr	r7, [sp, #92]	; 0x5c
   56d48:	ldr	r7, [r7, r2]
   56d4c:	mla	r0, r7, r5, r0
   56d50:	add	sl, r0, sl
   56d54:	add	r1, r1, r0, lsl #3
   56d58:	subs	r3, r3, #1
   56d5c:	add	r2, r2, #4
   56d60:	beq	56c40 <GetDataSlab+0x26cc0>
   56d64:	ldr	r0, [r4, r2]
   56d68:	ldr	r5, [sp, #84]	; 0x54
   56d6c:	add	r0, r0, #1
   56d70:	str	r0, [r4, r2]
   56d74:	ldr	r6, [r5, r2]
   56d78:	sdiv	r5, r0, r6
   56d7c:	mls	r0, r5, r6, r0
   56d80:	cmp	r0, #0
   56d84:	bne	56c30 <GetDataSlab+0x26cb0>
   56d88:	mov	r0, #0
   56d8c:	str	r0, [r4, r2]
   56d90:	ldr	r0, [sp, #80]	; 0x50
   56d94:	ldr	r6, [r0, r2]
   56d98:	sdiv	r0, sl, r6
   56d9c:	mls	r0, r0, r6, sl
   56da0:	cmp	r0, #0
   56da4:	bne	56d38 <GetDataSlab+0x26db8>
   56da8:	ldr	r0, [sp, #92]	; 0x5c
   56dac:	ldr	r0, [r0, r2]
   56db0:	cmp	r0, #0
   56db4:	beq	56d58 <GetDataSlab+0x26dd8>
   56db8:	sub	r7, fp, #176	; 0xb0
   56dbc:	ldr	r7, [r7, r2]
   56dc0:	mla	sl, r7, r0, sl
   56dc4:	mul	r0, r7, r0
   56dc8:	b	56d54 <GetDataSlab+0x26dd4>
   56dcc:	cmp	r7, #1
   56dd0:	blt	5f88c <GetDataSlab+0x2f90c>
   56dd4:	ldr	r7, [sp, #56]	; 0x38
   56dd8:	mov	r2, r8
   56ddc:	mov	r1, #1
   56de0:	mov	ip, #0
   56de4:	mla	r0, r7, r8, r4
   56de8:	str	r0, [sp, #52]	; 0x34
   56dec:	add	r8, r3, r0
   56df0:	sub	r0, r5, #2
   56df4:	add	r1, r1, r0, lsr #1
   56df8:	lsr	r0, r0, #1
   56dfc:	str	r0, [sp, #56]	; 0x38
   56e00:	and	r3, r1, #1
   56e04:	sub	r1, r1, r3
   56e08:	str	r3, [sp, #48]	; 0x30
   56e0c:	str	r1, [sp, #44]	; 0x2c
   56e10:	add	r1, r5, r4
   56e14:	mla	r1, r7, r2, r1
   56e18:	str	r1, [sp, #60]	; 0x3c
   56e1c:	ldr	r1, [sp, #72]	; 0x48
   56e20:	mul	r1, r1, r2
   56e24:	ldr	r2, [sp, #68]	; 0x44
   56e28:	str	r1, [sp, #92]	; 0x5c
   56e2c:	subs	r1, r5, #1
   56e30:	mov	r3, r2
   56e34:	sub	r2, r2, #1
   56e38:	movwne	r1, #1
   56e3c:	clz	r2, r2
   56e40:	lsr	r2, r2, #5
   56e44:	and	r1, r1, r2
   56e48:	and	r2, r5, #1
   56e4c:	str	r1, [sp, #76]	; 0x4c
   56e50:	lsl	r1, r3, #2
   56e54:	str	r2, [sp, #72]	; 0x48
   56e58:	bic	r2, r5, #1
   56e5c:	str	r1, [sp, #40]	; 0x28
   56e60:	lsl	r1, r3, #1
   56e64:	str	r2, [sp, #64]	; 0x40
   56e68:	ldr	sl, [sp, #40]	; 0x28
   56e6c:	cmp	r5, #1
   56e70:	bge	56e98 <GetDataSlab+0x26f18>
   56e74:	ldr	lr, [sp, #84]	; 0x54
   56e78:	ldr	r6, [sp, #92]	; 0x5c
   56e7c:	add	ip, ip, #1
   56e80:	add	r8, r8, r6
   56e84:	mov	r0, #0
   56e88:	cmp	ip, lr
   56e8c:	beq	56c20 <GetDataSlab+0x26ca0>
   56e90:	cmp	r5, #1
   56e94:	blt	56e74 <GetDataSlab+0x26ef4>
   56e98:	ldr	r2, [sp, #76]	; 0x4c
   56e9c:	ldr	lr, [sp, #84]	; 0x54
   56ea0:	ldr	r6, [sp, #92]	; 0x5c
   56ea4:	mov	r0, #0
   56ea8:	cmp	r2, #0
   56eac:	beq	56fd8 <GetDataSlab+0x27058>
   56eb0:	ldr	r2, [sp, #60]	; 0x3c
   56eb4:	ldr	r7, [sp, #80]	; 0x50
   56eb8:	ldr	r3, [sp, #88]	; 0x58
   56ebc:	mla	r2, r6, ip, r2
   56ec0:	add	r2, r7, r2
   56ec4:	cmp	r2, r3
   56ec8:	bls	56ee4 <GetDataSlab+0x26f64>
   56ecc:	ldr	r2, [sp, #52]	; 0x34
   56ed0:	add	r4, r3, r5, lsl #3
   56ed4:	mla	r2, r6, ip, r2
   56ed8:	add	r2, r7, r2
   56edc:	cmp	r2, r4
   56ee0:	bcc	56fd8 <GetDataSlab+0x27058>
   56ee4:	ldr	r0, [sp, #56]	; 0x38
   56ee8:	cmp	r0, #0
   56eec:	beq	56f70 <GetDataSlab+0x26ff0>
   56ef0:	ldr	r4, [sp, #88]	; 0x58
   56ef4:	ldr	r6, [sp, #44]	; 0x2c
   56ef8:	mov	r0, #0
   56efc:	mov	r2, r8
   56f00:	add	r9, sp, #140	; 0x8c
   56f04:	mov	r7, r4
   56f08:	ldrh	lr, [r2]
   56f0c:	add	r3, sp, #136	; 0x88
   56f10:	subs	r6, r6, #2
   56f14:	add	r0, r0, #4
   56f18:	strh	lr, [sp, #136]	; 0x88
   56f1c:	vld1.16	{d16[0]}, [r3 :16]
   56f20:	mov	r3, #32
   56f24:	vmovl.u8	q8, d16
   56f28:	vmovl.u16	q0, d16
   56f2c:	vcvt.f64.u32	d17, s1
   56f30:	vcvt.f64.u32	d16, s0
   56f34:	vst1.64	{d16-d17}, [r7], r3
   56f38:	add	r3, r2, r1
   56f3c:	add	r2, r2, sl
   56f40:	ldrh	r3, [r3]
   56f44:	strh	r3, [sp, #140]	; 0x8c
   56f48:	add	r3, r4, #16
   56f4c:	mov	r4, r7
   56f50:	vld1.16	{d16[0]}, [r9 :16]
   56f54:	vmovl.u8	q8, d16
   56f58:	vmovl.u16	q0, d16
   56f5c:	vcvt.f64.u32	d17, s1
   56f60:	vcvt.f64.u32	d16, s0
   56f64:	vst1.64	{d16-d17}, [r3]
   56f68:	bne	56f08 <GetDataSlab+0x26f88>
   56f6c:	b	56f74 <GetDataSlab+0x26ff4>
   56f70:	mov	r0, #0
   56f74:	ldr	r2, [sp, #48]	; 0x30
   56f78:	ldr	r6, [sp, #92]	; 0x5c
   56f7c:	cmp	r2, #0
   56f80:	beq	56fb8 <GetDataSlab+0x27038>
   56f84:	ldr	r2, [sp, #68]	; 0x44
   56f88:	mla	r2, r0, r2, r8
   56f8c:	ldrh	r2, [r2]
   56f90:	strh	r2, [sp, #132]	; 0x84
   56f94:	add	r2, sp, #132	; 0x84
   56f98:	vld1.16	{d16[0]}, [r2 :16]
   56f9c:	vmovl.u8	q8, d16
   56fa0:	vmovl.u16	q0, d16
   56fa4:	vcvt.f64.u32	d17, s1
   56fa8:	vcvt.f64.u32	d16, s0
   56fac:	ldr	r2, [sp, #88]	; 0x58
   56fb0:	add	r0, r2, r0, lsl #3
   56fb4:	vst1.64	{d16-d17}, [r0]
   56fb8:	ldr	r2, [sp, #64]	; 0x40
   56fbc:	ldr	r0, [sp, #88]	; 0x58
   56fc0:	ldr	lr, [sp, #84]	; 0x54
   56fc4:	add	r0, r0, r2, lsl #3
   56fc8:	cmp	r5, r2
   56fcc:	str	r0, [sp, #88]	; 0x58
   56fd0:	mov	r0, r2
   56fd4:	beq	56e7c <GetDataSlab+0x26efc>
   56fd8:	ldr	r2, [sp, #72]	; 0x48
   56fdc:	cmp	r2, #0
   56fe0:	bne	56fec <GetDataSlab+0x2706c>
   56fe4:	mov	r4, r0
   56fe8:	b	57014 <GetDataSlab+0x27094>
   56fec:	ldr	r2, [sp, #68]	; 0x44
   56ff0:	orr	r4, r0, #1
   56ff4:	mul	r2, r0, r2
   56ff8:	ldrb	r2, [r8, r2]
   56ffc:	vmov	s0, r2
   57000:	vcvt.f64.u32	d16, s0
   57004:	ldr	r2, [sp, #88]	; 0x58
   57008:	vstr	d16, [r2]
   5700c:	add	r2, r2, #8
   57010:	str	r2, [sp, #88]	; 0x58
   57014:	orr	r0, r0, #1
   57018:	cmp	r5, r0
   5701c:	beq	56e7c <GetDataSlab+0x26efc>
   57020:	ldr	r6, [sp, #68]	; 0x44
   57024:	add	r3, r4, #1
   57028:	ldr	r7, [sp, #88]	; 0x58
   5702c:	sub	r2, r5, r4
   57030:	mul	r0, r6, r4
   57034:	mul	r4, r6, r3
   57038:	mov	r6, r8
   5703c:	ldrb	r3, [r6, r0]
   57040:	subs	r2, r2, #2
   57044:	vmov	s0, r3
   57048:	vcvt.f64.u32	d16, s0
   5704c:	vstr	d16, [r7]
   57050:	ldrb	r3, [r6, r4]
   57054:	add	r6, r6, r1
   57058:	vmov	s0, r3
   5705c:	vcvt.f64.u32	d16, s0
   57060:	vstr	d16, [r7, #8]
   57064:	add	r7, r7, #16
   57068:	bne	5703c <GetDataSlab+0x270bc>
   5706c:	str	r7, [sp, #88]	; 0x58
   57070:	b	56e78 <GetDataSlab+0x26ef8>
   57074:	cmp	r7, #1
   57078:	blt	5f88c <GetDataSlab+0x2f90c>
   5707c:	ldr	r0, [sp, #56]	; 0x38
   57080:	mov	r1, #1
   57084:	mla	r0, r0, r8, r4
   57088:	add	r0, r3, r0, lsl #1
   5708c:	str	r0, [sp, #92]	; 0x5c
   57090:	sub	r0, r5, #2
   57094:	add	r1, r1, r0, lsr #1
   57098:	lsr	r0, r0, #1
   5709c:	str	r0, [sp, #52]	; 0x34
   570a0:	mov	r0, #0
   570a4:	and	r2, r1, #1
   570a8:	str	r0, [sp, #80]	; 0x50
   570ac:	sub	r1, r1, r2
   570b0:	str	r2, [sp, #56]	; 0x38
   570b4:	ldr	r2, [sp, #68]	; 0x44
   570b8:	str	r1, [sp, #44]	; 0x2c
   570bc:	subs	r1, r5, #1
   570c0:	movwne	r1, #1
   570c4:	mov	r3, r2
   570c8:	sub	r2, r2, #1
   570cc:	clz	r2, r2
   570d0:	lsr	r2, r2, #5
   570d4:	and	r1, r1, r2
   570d8:	lsl	r2, r3, #2
   570dc:	str	r1, [sp, #60]	; 0x3c
   570e0:	ldr	r1, [sp, #72]	; 0x48
   570e4:	mul	r1, r1, r8
   570e8:	lsl	r1, r1, #1
   570ec:	str	r1, [sp, #76]	; 0x4c
   570f0:	lsl	r1, r3, #1
   570f4:	str	r1, [sp, #48]	; 0x30
   570f8:	lsl	r1, r3, #3
   570fc:	str	r1, [sp, #40]	; 0x28
   57100:	and	r1, r5, #1
   57104:	ldr	r9, [sp, #40]	; 0x28
   57108:	str	r1, [sp, #72]	; 0x48
   5710c:	bic	r1, r5, #1
   57110:	str	r1, [sp, #64]	; 0x40
   57114:	cmp	r5, #1
   57118:	bge	57150 <GetDataSlab+0x271d0>
   5711c:	ldr	lr, [sp, #92]	; 0x5c
   57120:	ldr	r3, [sp, #80]	; 0x50
   57124:	ldr	r0, [sp, #76]	; 0x4c
   57128:	ldr	r1, [sp, #84]	; 0x54
   5712c:	add	r3, r3, #1
   57130:	add	lr, lr, r0
   57134:	mov	r0, #0
   57138:	cmp	r3, r1
   5713c:	str	lr, [sp, #92]	; 0x5c
   57140:	str	r3, [sp, #80]	; 0x50
   57144:	beq	56c20 <GetDataSlab+0x26ca0>
   57148:	cmp	r5, #1
   5714c:	blt	5711c <GetDataSlab+0x2719c>
   57150:	ldr	r1, [sp, #60]	; 0x3c
   57154:	ldr	lr, [sp, #92]	; 0x5c
   57158:	mov	r0, #0
   5715c:	cmp	r1, #0
   57160:	beq	57244 <GetDataSlab+0x272c4>
   57164:	ldr	r0, [sp, #52]	; 0x34
   57168:	cmp	r0, #0
   5716c:	beq	571e4 <GetDataSlab+0x27264>
   57170:	ldr	r6, [sp, #88]	; 0x58
   57174:	ldr	r7, [sp, #44]	; 0x2c
   57178:	mov	r1, lr
   5717c:	mov	r0, #0
   57180:	add	r8, sp, #100	; 0x64
   57184:	mov	lr, #32
   57188:	add	ip, sp, #104	; 0x68
   5718c:	mov	r4, r6
   57190:	ldr	sl, [r1]
   57194:	subs	r7, r7, #2
   57198:	add	r0, r0, #4
   5719c:	str	sl, [sp, #100]	; 0x64
   571a0:	vld1.32	{d16[0]}, [r8 :32]
   571a4:	vmovl.s16	q0, d16
   571a8:	vcvt.f64.s32	d17, s1
   571ac:	vcvt.f64.s32	d16, s0
   571b0:	vst1.64	{d16-d17}, [r4], lr
   571b4:	ldr	r3, [r1, r2]
   571b8:	add	r1, r1, r9
   571bc:	str	r3, [sp, #104]	; 0x68
   571c0:	add	r3, r6, #16
   571c4:	mov	r6, r4
   571c8:	vld1.32	{d16[0]}, [ip :32]
   571cc:	vmovl.s16	q0, d16
   571d0:	vcvt.f64.s32	d17, s1
   571d4:	vcvt.f64.s32	d16, s0
   571d8:	vst1.64	{d16-d17}, [r3]
   571dc:	bne	57190 <GetDataSlab+0x27210>
   571e0:	b	571e8 <GetDataSlab+0x27268>
   571e4:	mov	r0, #0
   571e8:	ldr	r1, [sp, #56]	; 0x38
   571ec:	ldr	lr, [sp, #92]	; 0x5c
   571f0:	cmp	r1, #0
   571f4:	beq	57228 <GetDataSlab+0x272a8>
   571f8:	ldr	r1, [sp, #68]	; 0x44
   571fc:	mul	r1, r0, r1
   57200:	ldr	r1, [lr, r1, lsl #1]
   57204:	str	r1, [sp, #96]	; 0x60
   57208:	add	r1, sp, #96	; 0x60
   5720c:	vld1.32	{d16[0]}, [r1 :32]
   57210:	vmovl.s16	q0, d16
   57214:	vcvt.f64.s32	d17, s1
   57218:	vcvt.f64.s32	d16, s0
   5721c:	ldr	r1, [sp, #88]	; 0x58
   57220:	add	r0, r1, r0, lsl #3
   57224:	vst1.64	{d16-d17}, [r0]
   57228:	ldr	r1, [sp, #64]	; 0x40
   5722c:	ldr	r0, [sp, #88]	; 0x58
   57230:	add	r0, r0, r1, lsl #3
   57234:	cmp	r5, r1
   57238:	str	r0, [sp, #88]	; 0x58
   5723c:	mov	r0, r1
   57240:	beq	57120 <GetDataSlab+0x271a0>
   57244:	ldr	r1, [sp, #72]	; 0x48
   57248:	cmp	r1, #0
   5724c:	bne	57258 <GetDataSlab+0x272d8>
   57250:	mov	r4, r0
   57254:	b	57284 <GetDataSlab+0x27304>
   57258:	ldr	r1, [sp, #68]	; 0x44
   5725c:	orr	r4, r0, #1
   57260:	mul	r1, r0, r1
   57264:	add	r1, lr, r1, lsl #1
   57268:	ldrsh	r1, [r1]
   5726c:	vmov	s0, r1
   57270:	vcvt.f64.s32	d16, s0
   57274:	ldr	r1, [sp, #88]	; 0x58
   57278:	vstr	d16, [r1]
   5727c:	add	r1, r1, #8
   57280:	str	r1, [sp, #88]	; 0x58
   57284:	orr	r0, r0, #1
   57288:	cmp	r5, r0
   5728c:	beq	57120 <GetDataSlab+0x271a0>
   57290:	ldr	r6, [sp, #48]	; 0x30
   57294:	add	r3, r4, #1
   57298:	ldr	r7, [sp, #88]	; 0x58
   5729c:	sub	r1, r5, r4
   572a0:	mul	r0, r6, r4
   572a4:	mul	r4, r6, r3
   572a8:	mov	r6, lr
   572ac:	add	r3, r6, r0
   572b0:	subs	r1, r1, #2
   572b4:	ldrsh	r3, [r3]
   572b8:	vmov	s0, r3
   572bc:	add	r3, r6, r4
   572c0:	add	r6, r6, r2
   572c4:	vcvt.f64.s32	d16, s0
   572c8:	vstr	d16, [r7]
   572cc:	ldrsh	r3, [r3]
   572d0:	vmov	s0, r3
   572d4:	vcvt.f64.s32	d16, s0
   572d8:	vstr	d16, [r7, #8]
   572dc:	add	r7, r7, #16
   572e0:	bne	572ac <GetDataSlab+0x2732c>
   572e4:	str	r7, [sp, #88]	; 0x58
   572e8:	b	57120 <GetDataSlab+0x271a0>
   572ec:	cmp	r7, #1
   572f0:	blt	5f88c <GetDataSlab+0x2f90c>
   572f4:	ldr	r0, [sp, #56]	; 0x38
   572f8:	mov	r1, #1
   572fc:	mla	r0, r0, r8, r4
   57300:	add	r0, r3, r0, lsl #1
   57304:	str	r0, [sp, #92]	; 0x5c
   57308:	sub	r0, r5, #2
   5730c:	add	r1, r1, r0, lsr #1
   57310:	lsr	r0, r0, #1
   57314:	str	r0, [sp, #52]	; 0x34
   57318:	mov	r0, #0
   5731c:	and	r2, r1, #1
   57320:	str	r0, [sp, #80]	; 0x50
   57324:	sub	r1, r1, r2
   57328:	str	r2, [sp, #56]	; 0x38
   5732c:	ldr	r2, [sp, #68]	; 0x44
   57330:	str	r1, [sp, #44]	; 0x2c
   57334:	subs	r1, r5, #1
   57338:	movwne	r1, #1
   5733c:	mov	r3, r2
   57340:	sub	r2, r2, #1
   57344:	clz	r2, r2
   57348:	lsr	r2, r2, #5
   5734c:	and	r1, r1, r2
   57350:	lsl	r2, r3, #2
   57354:	str	r1, [sp, #60]	; 0x3c
   57358:	ldr	r1, [sp, #72]	; 0x48
   5735c:	mul	r1, r1, r8
   57360:	lsl	r1, r1, #1
   57364:	str	r1, [sp, #76]	; 0x4c
   57368:	lsl	r1, r3, #1
   5736c:	str	r1, [sp, #48]	; 0x30
   57370:	lsl	r1, r3, #3
   57374:	str	r1, [sp, #40]	; 0x28
   57378:	and	r1, r5, #1
   5737c:	ldr	r9, [sp, #40]	; 0x28
   57380:	str	r1, [sp, #72]	; 0x48
   57384:	bic	r1, r5, #1
   57388:	str	r1, [sp, #64]	; 0x40
   5738c:	cmp	r5, #1
   57390:	bge	573c8 <GetDataSlab+0x27448>
   57394:	ldr	lr, [sp, #92]	; 0x5c
   57398:	ldr	r3, [sp, #80]	; 0x50
   5739c:	ldr	r0, [sp, #76]	; 0x4c
   573a0:	ldr	r1, [sp, #84]	; 0x54
   573a4:	add	r3, r3, #1
   573a8:	add	lr, lr, r0
   573ac:	mov	r0, #0
   573b0:	cmp	r3, r1
   573b4:	str	lr, [sp, #92]	; 0x5c
   573b8:	str	r3, [sp, #80]	; 0x50
   573bc:	beq	56c20 <GetDataSlab+0x26ca0>
   573c0:	cmp	r5, #1
   573c4:	blt	57394 <GetDataSlab+0x27414>
   573c8:	ldr	r1, [sp, #60]	; 0x3c
   573cc:	ldr	lr, [sp, #92]	; 0x5c
   573d0:	mov	r0, #0
   573d4:	cmp	r1, #0
   573d8:	beq	574bc <GetDataSlab+0x2753c>
   573dc:	ldr	r0, [sp, #52]	; 0x34
   573e0:	cmp	r0, #0
   573e4:	beq	5745c <GetDataSlab+0x274dc>
   573e8:	ldr	r6, [sp, #88]	; 0x58
   573ec:	ldr	r7, [sp, #44]	; 0x2c
   573f0:	mov	r1, lr
   573f4:	mov	r0, #0
   573f8:	add	r8, sp, #112	; 0x70
   573fc:	mov	lr, #32
   57400:	add	ip, sp, #116	; 0x74
   57404:	mov	r4, r6
   57408:	ldr	sl, [r1]
   5740c:	subs	r7, r7, #2
   57410:	add	r0, r0, #4
   57414:	str	sl, [sp, #112]	; 0x70
   57418:	vld1.32	{d16[0]}, [r8 :32]
   5741c:	vmovl.u16	q0, d16
   57420:	vcvt.f64.u32	d17, s1
   57424:	vcvt.f64.u32	d16, s0
   57428:	vst1.64	{d16-d17}, [r4], lr
   5742c:	ldr	r3, [r1, r2]
   57430:	add	r1, r1, r9
   57434:	str	r3, [sp, #116]	; 0x74
   57438:	add	r3, r6, #16
   5743c:	mov	r6, r4
   57440:	vld1.32	{d16[0]}, [ip :32]
   57444:	vmovl.u16	q0, d16
   57448:	vcvt.f64.u32	d17, s1
   5744c:	vcvt.f64.u32	d16, s0
   57450:	vst1.64	{d16-d17}, [r3]
   57454:	bne	57408 <GetDataSlab+0x27488>
   57458:	b	57460 <GetDataSlab+0x274e0>
   5745c:	mov	r0, #0
   57460:	ldr	r1, [sp, #56]	; 0x38
   57464:	ldr	lr, [sp, #92]	; 0x5c
   57468:	cmp	r1, #0
   5746c:	beq	574a0 <GetDataSlab+0x27520>
   57470:	ldr	r1, [sp, #68]	; 0x44
   57474:	mul	r1, r0, r1
   57478:	ldr	r1, [lr, r1, lsl #1]
   5747c:	str	r1, [sp, #108]	; 0x6c
   57480:	add	r1, sp, #108	; 0x6c
   57484:	vld1.32	{d16[0]}, [r1 :32]
   57488:	vmovl.u16	q0, d16
   5748c:	vcvt.f64.u32	d17, s1
   57490:	vcvt.f64.u32	d16, s0
   57494:	ldr	r1, [sp, #88]	; 0x58
   57498:	add	r0, r1, r0, lsl #3
   5749c:	vst1.64	{d16-d17}, [r0]
   574a0:	ldr	r1, [sp, #64]	; 0x40
   574a4:	ldr	r0, [sp, #88]	; 0x58
   574a8:	add	r0, r0, r1, lsl #3
   574ac:	cmp	r5, r1
   574b0:	str	r0, [sp, #88]	; 0x58
   574b4:	mov	r0, r1
   574b8:	beq	57398 <GetDataSlab+0x27418>
   574bc:	ldr	r1, [sp, #72]	; 0x48
   574c0:	cmp	r1, #0
   574c4:	bne	574d0 <GetDataSlab+0x27550>
   574c8:	mov	r4, r0
   574cc:	b	574fc <GetDataSlab+0x2757c>
   574d0:	ldr	r1, [sp, #68]	; 0x44
   574d4:	orr	r4, r0, #1
   574d8:	mul	r1, r0, r1
   574dc:	add	r1, lr, r1, lsl #1
   574e0:	ldrh	r1, [r1]
   574e4:	vmov	s0, r1
   574e8:	vcvt.f64.u32	d16, s0
   574ec:	ldr	r1, [sp, #88]	; 0x58
   574f0:	vstr	d16, [r1]
   574f4:	add	r1, r1, #8
   574f8:	str	r1, [sp, #88]	; 0x58
   574fc:	orr	r0, r0, #1
   57500:	cmp	r5, r0
   57504:	beq	57398 <GetDataSlab+0x27418>
   57508:	ldr	r6, [sp, #48]	; 0x30
   5750c:	add	r3, r4, #1
   57510:	ldr	r7, [sp, #88]	; 0x58
   57514:	sub	r1, r5, r4
   57518:	mul	r0, r6, r4
   5751c:	mul	r4, r6, r3
   57520:	mov	r6, lr
   57524:	add	r3, r6, r0
   57528:	subs	r1, r1, #2
   5752c:	ldrh	r3, [r3]
   57530:	vmov	s0, r3
   57534:	add	r3, r6, r4
   57538:	add	r6, r6, r2
   5753c:	vcvt.f64.u32	d16, s0
   57540:	vstr	d16, [r7]
   57544:	ldrh	r3, [r3]
   57548:	vmov	s0, r3
   5754c:	vcvt.f64.u32	d16, s0
   57550:	vstr	d16, [r7, #8]
   57554:	add	r7, r7, #16
   57558:	bne	57524 <GetDataSlab+0x275a4>
   5755c:	str	r7, [sp, #88]	; 0x58
   57560:	b	57398 <GetDataSlab+0x27418>
   57564:	cmp	r7, #1
   57568:	blt	5f88c <GetDataSlab+0x2f90c>
   5756c:	ldr	r0, [sp, #56]	; 0x38
   57570:	mov	r1, #1
   57574:	mov	ip, #0
   57578:	mla	r0, r0, r8, r4
   5757c:	add	sl, r3, r0, lsl #2
   57580:	sub	r0, r5, #2
   57584:	add	r1, r1, r0, lsr #1
   57588:	lsr	r0, r0, #1
   5758c:	str	r0, [sp, #64]	; 0x40
   57590:	and	r2, r1, #1
   57594:	sub	r1, r1, r2
   57598:	str	r2, [sp, #60]	; 0x3c
   5759c:	ldr	r2, [sp, #68]	; 0x44
   575a0:	str	r1, [sp, #52]	; 0x34
   575a4:	subs	r1, r5, #1
   575a8:	movwne	r1, #1
   575ac:	mov	r3, r2
   575b0:	sub	r2, r2, #1
   575b4:	clz	r2, r2
   575b8:	lsr	r2, r2, #5
   575bc:	and	r1, r1, r2
   575c0:	lsl	r2, r3, #3
   575c4:	str	r1, [sp, #80]	; 0x50
   575c8:	ldr	r1, [sp, #72]	; 0x48
   575cc:	mul	r1, r1, r8
   575d0:	lsl	r1, r1, #2
   575d4:	str	r1, [sp, #92]	; 0x5c
   575d8:	lsl	r1, r3, #2
   575dc:	str	r1, [sp, #56]	; 0x38
   575e0:	lsl	r1, r3, #4
   575e4:	str	r1, [sp, #48]	; 0x30
   575e8:	and	r1, r5, #1
   575ec:	str	r1, [sp, #76]	; 0x4c
   575f0:	bic	r1, r5, #1
   575f4:	str	r1, [sp, #72]	; 0x48
   575f8:	cmp	r5, #1
   575fc:	bge	5762c <GetDataSlab+0x276ac>
   57600:	ldr	r6, [sp, #88]	; 0x58
   57604:	ldr	lr, [sp, #84]	; 0x54
   57608:	ldr	r0, [sp, #92]	; 0x5c
   5760c:	add	ip, ip, #1
   57610:	str	r6, [sp, #88]	; 0x58
   57614:	cmp	ip, lr
   57618:	add	sl, sl, r0
   5761c:	mov	r0, #0
   57620:	beq	56c20 <GetDataSlab+0x26ca0>
   57624:	cmp	r5, #1
   57628:	blt	57600 <GetDataSlab+0x27680>
   5762c:	ldr	r1, [sp, #80]	; 0x50
   57630:	ldr	r6, [sp, #88]	; 0x58
   57634:	ldr	lr, [sp, #84]	; 0x54
   57638:	mov	r0, #0
   5763c:	cmp	r1, #0
   57640:	beq	576f8 <GetDataSlab+0x27778>
   57644:	ldr	r0, [sp, #64]	; 0x40
   57648:	cmp	r0, #0
   5764c:	beq	576b0 <GetDataSlab+0x27730>
   57650:	ldr	lr, [sp, #52]	; 0x34
   57654:	ldr	r3, [sp, #48]	; 0x30
   57658:	mov	r0, #0
   5765c:	mov	r1, sl
   57660:	mov	r7, r6
   57664:	mov	r8, sl
   57668:	mov	r9, r6
   5766c:	mov	r4, #32
   57670:	vld1.32	{d0}, [r8], r3
   57674:	add	r1, r1, r2
   57678:	subs	lr, lr, #2
   5767c:	add	r0, r0, #4
   57680:	vcvt.f64.s32	d17, s1
   57684:	vcvt.f64.s32	d16, s0
   57688:	vst1.64	{d16-d17}, [r9], r4
   5768c:	vldr	d0, [r1]
   57690:	add	r1, r7, #16
   57694:	mov	r7, r9
   57698:	vcvt.f64.s32	d17, s1
   5769c:	vcvt.f64.s32	d16, s0
   576a0:	vst1.64	{d16-d17}, [r1]
   576a4:	mov	r1, r8
   576a8:	bne	57670 <GetDataSlab+0x276f0>
   576ac:	b	576b4 <GetDataSlab+0x27734>
   576b0:	mov	r0, #0
   576b4:	ldr	r1, [sp, #60]	; 0x3c
   576b8:	ldr	r6, [sp, #88]	; 0x58
   576bc:	cmp	r1, #0
   576c0:	beq	576e4 <GetDataSlab+0x27764>
   576c4:	ldr	r1, [sp, #68]	; 0x44
   576c8:	mul	r1, r0, r1
   576cc:	add	r0, r6, r0, lsl #3
   576d0:	add	r1, sl, r1, lsl #2
   576d4:	vldr	d0, [r1]
   576d8:	vcvt.f64.s32	d17, s1
   576dc:	vcvt.f64.s32	d16, s0
   576e0:	vst1.64	{d16-d17}, [r0]
   576e4:	ldr	r0, [sp, #72]	; 0x48
   576e8:	ldr	lr, [sp, #84]	; 0x54
   576ec:	add	r6, r6, r0, lsl #3
   576f0:	cmp	r5, r0
   576f4:	beq	57608 <GetDataSlab+0x27688>
   576f8:	ldr	r1, [sp, #76]	; 0x4c
   576fc:	cmp	r1, #0
   57700:	bne	5770c <GetDataSlab+0x2778c>
   57704:	mov	r7, r0
   57708:	b	5772c <GetDataSlab+0x277ac>
   5770c:	ldr	r1, [sp, #68]	; 0x44
   57710:	orr	r7, r0, #1
   57714:	mul	r1, r0, r1
   57718:	add	r1, sl, r1, lsl #2
   5771c:	vldr	s0, [r1]
   57720:	vcvt.f64.s32	d16, s0
   57724:	vstr	d16, [r6]
   57728:	add	r6, r6, #8
   5772c:	orr	r0, r0, #1
   57730:	cmp	r5, r0
   57734:	beq	57608 <GetDataSlab+0x27688>
   57738:	ldr	r3, [sp, #56]	; 0x38
   5773c:	sub	r1, r5, r7
   57740:	mov	r4, sl
   57744:	mul	r0, r3, r7
   57748:	add	r7, r7, #1
   5774c:	mul	r7, r3, r7
   57750:	add	r3, r4, r0
   57754:	subs	r1, r1, #2
   57758:	vldr	s0, [r3]
   5775c:	add	r3, r4, r7
   57760:	add	r4, r4, r2
   57764:	vcvt.f64.s32	d16, s0
   57768:	vstr	d16, [r6]
   5776c:	vldr	s0, [r3]
   57770:	vcvt.f64.s32	d16, s0
   57774:	vstr	d16, [r6, #8]
   57778:	add	r6, r6, #16
   5777c:	bne	57750 <GetDataSlab+0x277d0>
   57780:	b	57608 <GetDataSlab+0x27688>
   57784:	cmp	r7, #1
   57788:	blt	5f88c <GetDataSlab+0x2f90c>
   5778c:	ldr	r0, [sp, #56]	; 0x38
   57790:	mov	r1, #1
   57794:	mov	ip, #0
   57798:	mla	r0, r0, r8, r4
   5779c:	add	sl, r3, r0, lsl #2
   577a0:	sub	r0, r5, #2
   577a4:	add	r1, r1, r0, lsr #1
   577a8:	lsr	r0, r0, #1
   577ac:	str	r0, [sp, #64]	; 0x40
   577b0:	and	r2, r1, #1
   577b4:	sub	r1, r1, r2
   577b8:	str	r2, [sp, #60]	; 0x3c
   577bc:	ldr	r2, [sp, #68]	; 0x44
   577c0:	str	r1, [sp, #52]	; 0x34
   577c4:	subs	r1, r5, #1
   577c8:	movwne	r1, #1
   577cc:	mov	r3, r2
   577d0:	sub	r2, r2, #1
   577d4:	clz	r2, r2
   577d8:	lsr	r2, r2, #5
   577dc:	and	r1, r1, r2
   577e0:	lsl	r2, r3, #3
   577e4:	str	r1, [sp, #80]	; 0x50
   577e8:	ldr	r1, [sp, #72]	; 0x48
   577ec:	mul	r1, r1, r8
   577f0:	lsl	r1, r1, #2
   577f4:	str	r1, [sp, #92]	; 0x5c
   577f8:	lsl	r1, r3, #2
   577fc:	str	r1, [sp, #56]	; 0x38
   57800:	lsl	r1, r3, #4
   57804:	str	r1, [sp, #48]	; 0x30
   57808:	and	r1, r5, #1
   5780c:	str	r1, [sp, #76]	; 0x4c
   57810:	bic	r1, r5, #1
   57814:	str	r1, [sp, #72]	; 0x48
   57818:	cmp	r5, #1
   5781c:	bge	5784c <GetDataSlab+0x278cc>
   57820:	ldr	r6, [sp, #88]	; 0x58
   57824:	ldr	lr, [sp, #84]	; 0x54
   57828:	ldr	r0, [sp, #92]	; 0x5c
   5782c:	add	ip, ip, #1
   57830:	str	r6, [sp, #88]	; 0x58
   57834:	cmp	ip, lr
   57838:	add	sl, sl, r0
   5783c:	mov	r0, #0
   57840:	beq	56c20 <GetDataSlab+0x26ca0>
   57844:	cmp	r5, #1
   57848:	blt	57820 <GetDataSlab+0x278a0>
   5784c:	ldr	r1, [sp, #80]	; 0x50
   57850:	ldr	r6, [sp, #88]	; 0x58
   57854:	ldr	lr, [sp, #84]	; 0x54
   57858:	mov	r0, #0
   5785c:	cmp	r1, #0
   57860:	beq	57918 <GetDataSlab+0x27998>
   57864:	ldr	r0, [sp, #64]	; 0x40
   57868:	cmp	r0, #0
   5786c:	beq	578d0 <GetDataSlab+0x27950>
   57870:	ldr	lr, [sp, #52]	; 0x34
   57874:	ldr	r3, [sp, #48]	; 0x30
   57878:	mov	r0, #0
   5787c:	mov	r1, sl
   57880:	mov	r7, r6
   57884:	mov	r8, sl
   57888:	mov	r9, r6
   5788c:	mov	r4, #32
   57890:	vld1.32	{d0}, [r8], r3
   57894:	add	r1, r1, r2
   57898:	subs	lr, lr, #2
   5789c:	add	r0, r0, #4
   578a0:	vcvt.f64.u32	d17, s1
   578a4:	vcvt.f64.u32	d16, s0
   578a8:	vst1.64	{d16-d17}, [r9], r4
   578ac:	vldr	d0, [r1]
   578b0:	add	r1, r7, #16
   578b4:	mov	r7, r9
   578b8:	vcvt.f64.u32	d17, s1
   578bc:	vcvt.f64.u32	d16, s0
   578c0:	vst1.64	{d16-d17}, [r1]
   578c4:	mov	r1, r8
   578c8:	bne	57890 <GetDataSlab+0x27910>
   578cc:	b	578d4 <GetDataSlab+0x27954>
   578d0:	mov	r0, #0
   578d4:	ldr	r1, [sp, #60]	; 0x3c
   578d8:	ldr	r6, [sp, #88]	; 0x58
   578dc:	cmp	r1, #0
   578e0:	beq	57904 <GetDataSlab+0x27984>
   578e4:	ldr	r1, [sp, #68]	; 0x44
   578e8:	mul	r1, r0, r1
   578ec:	add	r0, r6, r0, lsl #3
   578f0:	add	r1, sl, r1, lsl #2
   578f4:	vldr	d0, [r1]
   578f8:	vcvt.f64.u32	d17, s1
   578fc:	vcvt.f64.u32	d16, s0
   57900:	vst1.64	{d16-d17}, [r0]
   57904:	ldr	r0, [sp, #72]	; 0x48
   57908:	ldr	lr, [sp, #84]	; 0x54
   5790c:	add	r6, r6, r0, lsl #3
   57910:	cmp	r5, r0
   57914:	beq	57828 <GetDataSlab+0x278a8>
   57918:	ldr	r1, [sp, #76]	; 0x4c
   5791c:	cmp	r1, #0
   57920:	bne	5792c <GetDataSlab+0x279ac>
   57924:	mov	r7, r0
   57928:	b	5794c <GetDataSlab+0x279cc>
   5792c:	ldr	r1, [sp, #68]	; 0x44
   57930:	orr	r7, r0, #1
   57934:	mul	r1, r0, r1
   57938:	add	r1, sl, r1, lsl #2
   5793c:	vldr	s0, [r1]
   57940:	vcvt.f64.u32	d16, s0
   57944:	vstr	d16, [r6]
   57948:	add	r6, r6, #8
   5794c:	orr	r0, r0, #1
   57950:	cmp	r5, r0
   57954:	beq	57828 <GetDataSlab+0x278a8>
   57958:	ldr	r3, [sp, #56]	; 0x38
   5795c:	sub	r1, r5, r7
   57960:	mov	r4, sl
   57964:	mul	r0, r3, r7
   57968:	add	r7, r7, #1
   5796c:	mul	r7, r3, r7
   57970:	add	r3, r4, r0
   57974:	subs	r1, r1, #2
   57978:	vldr	s0, [r3]
   5797c:	add	r3, r4, r7
   57980:	add	r4, r4, r2
   57984:	vcvt.f64.u32	d16, s0
   57988:	vstr	d16, [r6]
   5798c:	vldr	s0, [r3]
   57990:	vcvt.f64.u32	d16, s0
   57994:	vstr	d16, [r6, #8]
   57998:	add	r6, r6, #16
   5799c:	bne	57970 <GetDataSlab+0x279f0>
   579a0:	b	57828 <GetDataSlab+0x278a8>
   579a4:	cmp	r7, #1
   579a8:	blt	5f88c <GetDataSlab+0x2f90c>
   579ac:	ldr	r0, [sp, #56]	; 0x38
   579b0:	mov	r1, #1
   579b4:	mov	ip, #0
   579b8:	mov	sl, #32
   579bc:	mla	r0, r0, r8, r4
   579c0:	add	lr, r3, r0, lsl #2
   579c4:	sub	r0, r5, #2
   579c8:	add	r1, r1, r0, lsr #1
   579cc:	lsr	r0, r0, #1
   579d0:	str	r0, [sp, #64]	; 0x40
   579d4:	and	r2, r1, #1
   579d8:	sub	r1, r1, r2
   579dc:	str	r2, [sp, #60]	; 0x3c
   579e0:	ldr	r2, [sp, #68]	; 0x44
   579e4:	str	r1, [sp, #52]	; 0x34
   579e8:	subs	r1, r5, #1
   579ec:	movwne	r1, #1
   579f0:	mov	r7, r2
   579f4:	sub	r2, r2, #1
   579f8:	clz	r2, r2
   579fc:	lsl	r3, r7, #4
   57a00:	lsr	r2, r2, #5
   57a04:	and	r1, r1, r2
   57a08:	lsl	r2, r7, #3
   57a0c:	str	r1, [sp, #80]	; 0x50
   57a10:	ldr	r1, [sp, #72]	; 0x48
   57a14:	mul	r1, r1, r8
   57a18:	lsl	r1, r1, #2
   57a1c:	str	r1, [sp, #92]	; 0x5c
   57a20:	lsl	r1, r7, #2
   57a24:	str	r1, [sp, #56]	; 0x38
   57a28:	and	r1, r5, #1
   57a2c:	str	r1, [sp, #76]	; 0x4c
   57a30:	bic	r1, r5, #1
   57a34:	str	r1, [sp, #72]	; 0x48
   57a38:	cmp	r5, #1
   57a3c:	bge	57a6c <GetDataSlab+0x27aec>
   57a40:	ldr	r8, [sp, #88]	; 0x58
   57a44:	ldr	r0, [sp, #92]	; 0x5c
   57a48:	ldr	r1, [sp, #84]	; 0x54
   57a4c:	add	ip, ip, #1
   57a50:	str	r8, [sp, #88]	; 0x58
   57a54:	add	lr, lr, r0
   57a58:	mov	r0, #0
   57a5c:	cmp	ip, r1
   57a60:	beq	56c20 <GetDataSlab+0x26ca0>
   57a64:	cmp	r5, #1
   57a68:	blt	57a40 <GetDataSlab+0x27ac0>
   57a6c:	ldr	r1, [sp, #80]	; 0x50
   57a70:	ldr	r8, [sp, #88]	; 0x58
   57a74:	mov	r0, #0
   57a78:	cmp	r1, #0
   57a7c:	beq	57b14 <GetDataSlab+0x27b94>
   57a80:	ldr	r0, [sp, #64]	; 0x40
   57a84:	cmp	r0, #0
   57a88:	beq	57ad0 <GetDataSlab+0x27b50>
   57a8c:	ldr	r9, [sp, #52]	; 0x34
   57a90:	mov	r0, #0
   57a94:	mov	r1, lr
   57a98:	add	r4, r1, r2
   57a9c:	vld1.32	{d0}, [r1], r3
   57aa0:	add	r7, r8, #16
   57aa4:	subs	r9, r9, #2
   57aa8:	add	r0, r0, #4
   57aac:	vcvt.f64.f32	d17, s1
   57ab0:	vcvt.f64.f32	d16, s0
   57ab4:	vst1.64	{d16-d17}, [r8], sl
   57ab8:	vldr	d0, [r4]
   57abc:	vcvt.f64.f32	d17, s1
   57ac0:	vcvt.f64.f32	d16, s0
   57ac4:	vst1.64	{d16-d17}, [r7]
   57ac8:	bne	57a98 <GetDataSlab+0x27b18>
   57acc:	b	57ad4 <GetDataSlab+0x27b54>
   57ad0:	mov	r0, #0
   57ad4:	ldr	r1, [sp, #60]	; 0x3c
   57ad8:	ldr	r8, [sp, #88]	; 0x58
   57adc:	cmp	r1, #0
   57ae0:	beq	57b04 <GetDataSlab+0x27b84>
   57ae4:	ldr	r1, [sp, #68]	; 0x44
   57ae8:	mul	r1, r0, r1
   57aec:	add	r0, r8, r0, lsl #3
   57af0:	add	r1, lr, r1, lsl #2
   57af4:	vldr	d0, [r1]
   57af8:	vcvt.f64.f32	d17, s1
   57afc:	vcvt.f64.f32	d16, s0
   57b00:	vst1.64	{d16-d17}, [r0]
   57b04:	ldr	r0, [sp, #72]	; 0x48
   57b08:	add	r8, r8, r0, lsl #3
   57b0c:	cmp	r5, r0
   57b10:	beq	57a44 <GetDataSlab+0x27ac4>
   57b14:	ldr	r1, [sp, #76]	; 0x4c
   57b18:	cmp	r1, #0
   57b1c:	bne	57b28 <GetDataSlab+0x27ba8>
   57b20:	mov	r4, r0
   57b24:	b	57b48 <GetDataSlab+0x27bc8>
   57b28:	ldr	r1, [sp, #68]	; 0x44
   57b2c:	orr	r4, r0, #1
   57b30:	mul	r1, r0, r1
   57b34:	add	r1, lr, r1, lsl #2
   57b38:	vldr	s0, [r1]
   57b3c:	vcvt.f64.f32	d16, s0
   57b40:	vstr	d16, [r8]
   57b44:	add	r8, r8, #8
   57b48:	orr	r0, r0, #1
   57b4c:	cmp	r5, r0
   57b50:	beq	57a44 <GetDataSlab+0x27ac4>
   57b54:	ldr	r6, [sp, #56]	; 0x38
   57b58:	sub	r1, r5, r4
   57b5c:	mul	r0, r6, r4
   57b60:	add	r4, r4, #1
   57b64:	mul	r7, r6, r4
   57b68:	mov	r4, lr
   57b6c:	add	r6, r4, r0
   57b70:	subs	r1, r1, #2
   57b74:	vldr	s0, [r6]
   57b78:	add	r6, r4, r7
   57b7c:	add	r4, r4, r2
   57b80:	vcvt.f64.f32	d16, s0
   57b84:	vstr	d16, [r8]
   57b88:	vldr	s0, [r6]
   57b8c:	vcvt.f64.f32	d16, s0
   57b90:	vstr	d16, [r8, #8]
   57b94:	add	r8, r8, #16
   57b98:	bne	57b6c <GetDataSlab+0x27bec>
   57b9c:	b	57a44 <GetDataSlab+0x27ac4>
   57ba0:	cmp	r7, #1
   57ba4:	blt	5f88c <GetDataSlab+0x2f90c>
   57ba8:	ldr	r0, [sp, #56]	; 0x38
   57bac:	lsl	r1, r5, #3
   57bb0:	mov	r2, #1
   57bb4:	mov	lr, #0
   57bb8:	mla	r0, r0, r8, r4
   57bbc:	add	r1, r1, r0, lsl #3
   57bc0:	add	sl, r3, r0, lsl #3
   57bc4:	lsl	r0, r0, #3
   57bc8:	str	r0, [sp, #56]	; 0x38
   57bcc:	subs	r0, r5, #1
   57bd0:	str	r1, [sp, #60]	; 0x3c
   57bd4:	sub	r1, r5, #2
   57bd8:	movwne	r0, #1
   57bdc:	add	r2, r2, r1, lsr #1
   57be0:	and	r3, r2, #1
   57be4:	sub	r2, r2, r3
   57be8:	str	r3, [sp, #52]	; 0x34
   57bec:	str	r2, [sp, #40]	; 0x28
   57bf0:	ldr	r2, [sp, #68]	; 0x44
   57bf4:	mov	r3, r2
   57bf8:	sub	r2, r2, #1
   57bfc:	clz	r2, r2
   57c00:	lsl	r9, r3, #5
   57c04:	lsr	r2, r2, #5
   57c08:	and	r0, r0, r2
   57c0c:	lsl	r2, r3, #4
   57c10:	str	r0, [sp, #76]	; 0x4c
   57c14:	ldr	r0, [sp, #72]	; 0x48
   57c18:	mul	r0, r0, r8
   57c1c:	lsl	r0, r0, #3
   57c20:	str	r0, [sp, #92]	; 0x5c
   57c24:	lsl	r0, r3, #3
   57c28:	str	r0, [sp, #64]	; 0x40
   57c2c:	and	r0, r5, #1
   57c30:	str	r0, [sp, #72]	; 0x48
   57c34:	bic	r0, r5, #1
   57c38:	str	r0, [sp, #48]	; 0x30
   57c3c:	lsr	r0, r1, #1
   57c40:	str	r0, [sp, #44]	; 0x2c
   57c44:	cmp	r5, #1
   57c48:	bge	57c78 <GetDataSlab+0x27cf8>
   57c4c:	ldr	ip, [sp, #88]	; 0x58
   57c50:	ldr	r6, [sp, #92]	; 0x5c
   57c54:	ldr	r1, [sp, #84]	; 0x54
   57c58:	add	lr, lr, #1
   57c5c:	add	sl, sl, r6
   57c60:	mov	r0, #0
   57c64:	str	ip, [sp, #88]	; 0x58
   57c68:	cmp	lr, r1
   57c6c:	beq	56c20 <GetDataSlab+0x26ca0>
   57c70:	cmp	r5, #1
   57c74:	blt	57c4c <GetDataSlab+0x27ccc>
   57c78:	ldr	r1, [sp, #76]	; 0x4c
   57c7c:	ldr	ip, [sp, #88]	; 0x58
   57c80:	ldr	r3, [sp, #80]	; 0x50
   57c84:	ldr	r6, [sp, #92]	; 0x5c
   57c88:	mov	r0, #0
   57c8c:	cmp	r1, #0
   57c90:	beq	57d44 <GetDataSlab+0x27dc4>
   57c94:	ldr	r1, [sp, #60]	; 0x3c
   57c98:	mla	r1, r6, lr, r1
   57c9c:	add	r1, r3, r1
   57ca0:	cmp	r1, ip
   57ca4:	bls	57cc0 <GetDataSlab+0x27d40>
   57ca8:	ldr	r1, [sp, #56]	; 0x38
   57cac:	mla	r1, r6, lr, r1
   57cb0:	add	r1, r3, r1
   57cb4:	add	r3, ip, r5, lsl #3
   57cb8:	cmp	r1, r3
   57cbc:	bcc	57d44 <GetDataSlab+0x27dc4>
   57cc0:	ldr	r0, [sp, #44]	; 0x2c
   57cc4:	cmp	r0, #0
   57cc8:	beq	57d04 <GetDataSlab+0x27d84>
   57ccc:	ldr	r8, [sp, #40]	; 0x28
   57cd0:	mov	r0, #0
   57cd4:	mov	r1, sl
   57cd8:	mov	r6, #32
   57cdc:	add	r3, r1, r2
   57ce0:	vld1.64	{d16-d17}, [r1], r9
   57ce4:	add	r4, ip, #16
   57ce8:	subs	r8, r8, #2
   57cec:	add	r0, r0, #4
   57cf0:	vst1.64	{d16-d17}, [ip], r6
   57cf4:	vld1.64	{d16-d17}, [r3]
   57cf8:	vst1.64	{d16-d17}, [r4]
   57cfc:	bne	57cdc <GetDataSlab+0x27d5c>
   57d00:	b	57d08 <GetDataSlab+0x27d88>
   57d04:	mov	r0, #0
   57d08:	ldr	r1, [sp, #52]	; 0x34
   57d0c:	ldr	ip, [sp, #88]	; 0x58
   57d10:	ldr	r6, [sp, #92]	; 0x5c
   57d14:	cmp	r1, #0
   57d18:	beq	57d34 <GetDataSlab+0x27db4>
   57d1c:	ldr	r1, [sp, #68]	; 0x44
   57d20:	mul	r1, r0, r1
   57d24:	add	r0, ip, r0, lsl #3
   57d28:	add	r1, sl, r1, lsl #3
   57d2c:	vld1.64	{d16-d17}, [r1]
   57d30:	vst1.64	{d16-d17}, [r0]
   57d34:	ldr	r0, [sp, #48]	; 0x30
   57d38:	add	ip, ip, r0, lsl #3
   57d3c:	cmp	r5, r0
   57d40:	beq	57c54 <GetDataSlab+0x27cd4>
   57d44:	ldr	r1, [sp, #72]	; 0x48
   57d48:	cmp	r1, #0
   57d4c:	bne	57d58 <GetDataSlab+0x27dd8>
   57d50:	mov	r3, r0
   57d54:	b	57d74 <GetDataSlab+0x27df4>
   57d58:	ldr	r1, [sp, #68]	; 0x44
   57d5c:	orr	r3, r0, #1
   57d60:	mul	r1, r0, r1
   57d64:	add	r1, sl, r1, lsl #3
   57d68:	vldr	d16, [r1]
   57d6c:	vstr	d16, [ip]
   57d70:	add	ip, ip, #8
   57d74:	orr	r0, r0, #1
   57d78:	cmp	r5, r0
   57d7c:	beq	57c54 <GetDataSlab+0x27cd4>
   57d80:	ldr	r4, [sp, #64]	; 0x40
   57d84:	sub	r1, r5, r3
   57d88:	mul	r0, r4, r3
   57d8c:	add	r3, r3, #1
   57d90:	mul	r3, r4, r3
   57d94:	mov	r4, sl
   57d98:	add	r7, r4, r0
   57d9c:	subs	r1, r1, #2
   57da0:	vldr	d16, [r7]
   57da4:	add	r7, r4, r3
   57da8:	add	r4, r4, r2
   57dac:	vstr	d16, [ip]
   57db0:	vldr	d16, [r7]
   57db4:	vstr	d16, [ip, #8]
   57db8:	add	ip, ip, #16
   57dbc:	bne	57d98 <GetDataSlab+0x27e18>
   57dc0:	b	57c54 <GetDataSlab+0x27cd4>
   57dc4:	cmp	r7, #1
   57dc8:	blt	5f88c <GetDataSlab+0x2f90c>
   57dcc:	ldr	r0, [sp, #56]	; 0x38
   57dd0:	mov	r1, #1
   57dd4:	ldr	sl, [sp, #88]	; 0x58
   57dd8:	mla	r0, r0, r8, r4
   57ddc:	add	r9, r3, r0, lsl #3
   57de0:	sub	r0, r5, #2
   57de4:	add	r1, r1, r0, lsr #1
   57de8:	lsr	r0, r0, #1
   57dec:	str	r0, [sp, #20]
   57df0:	and	r2, r1, #1
   57df4:	sub	r1, r1, r2
   57df8:	str	r2, [sp, #28]
   57dfc:	ldr	r2, [sp, #68]	; 0x44
   57e00:	str	r1, [sp, #12]
   57e04:	subs	r1, r5, #1
   57e08:	movwne	r1, #1
   57e0c:	mov	r3, r2
   57e10:	sub	r2, r2, #1
   57e14:	clz	r2, r2
   57e18:	lsr	r2, r2, #5
   57e1c:	and	r1, r1, r2
   57e20:	lsl	r2, r3, #5
   57e24:	str	r1, [sp, #40]	; 0x28
   57e28:	ldr	r1, [sp, #72]	; 0x48
   57e2c:	str	r2, [sp, #52]	; 0x34
   57e30:	mul	r1, r1, r8
   57e34:	lsl	r1, r1, #3
   57e38:	str	r1, [sp, #44]	; 0x2c
   57e3c:	lsl	r1, r3, #3
   57e40:	str	r1, [sp, #16]
   57e44:	lsl	r1, r3, #4
   57e48:	mov	r3, #0
   57e4c:	str	r1, [sp, #92]	; 0x5c
   57e50:	and	r1, r5, #1
   57e54:	str	r1, [sp, #32]
   57e58:	bic	r1, r5, #1
   57e5c:	str	r1, [sp, #24]
   57e60:	cmp	r5, #1
   57e64:	bge	57e84 <GetDataSlab+0x27f04>
   57e68:	ldr	r0, [sp, #44]	; 0x2c
   57e6c:	add	r3, r3, #1
   57e70:	cmp	r3, r7
   57e74:	add	r9, r9, r0
   57e78:	beq	5e6b8 <GetDataSlab+0x2e738>
   57e7c:	cmp	r5, #1
   57e80:	blt	57e68 <GetDataSlab+0x27ee8>
   57e84:	ldr	r0, [sp, #40]	; 0x28
   57e88:	mov	r4, #0
   57e8c:	cmp	r0, #0
   57e90:	beq	57fbc <GetDataSlab+0x2803c>
   57e94:	ldr	r0, [sp, #20]
   57e98:	mov	r6, #0
   57e9c:	str	r3, [sp, #48]	; 0x30
   57ea0:	str	sl, [sp, #88]	; 0x58
   57ea4:	str	r9, [sp, #36]	; 0x24
   57ea8:	cmp	r0, #0
   57eac:	beq	57f44 <GetDataSlab+0x27fc4>
   57eb0:	ldr	r4, [sp, #12]
   57eb4:	mov	r7, r9
   57eb8:	mov	r8, sl
   57ebc:	vld1.64	{d8-d9}, [r9], r2
   57ec0:	vmov.32	r0, d9[0]
   57ec4:	vmov.32	r1, d9[1]
   57ec8:	bl	6b664 <__aeabi_l2d>
   57ecc:	vmov.32	r2, d8[0]
   57ed0:	vmov.32	r3, d8[1]
   57ed4:	vmov	d9, r0, r1
   57ed8:	mov	r0, r2
   57edc:	mov	r1, r3
   57ee0:	bl	6b664 <__aeabi_l2d>
   57ee4:	vmov	d8, r0, r1
   57ee8:	mov	r0, #32
   57eec:	vst1.64	{d8-d9}, [r8], r0
   57ef0:	ldr	r0, [sp, #92]	; 0x5c
   57ef4:	add	r0, r7, r0
   57ef8:	vld1.64	{d8-d9}, [r0]
   57efc:	vmov.32	r0, d9[0]
   57f00:	vmov.32	r1, d9[1]
   57f04:	bl	6b664 <__aeabi_l2d>
   57f08:	vmov.32	r2, d8[0]
   57f0c:	vmov.32	r3, d8[1]
   57f10:	vmov	d9, r0, r1
   57f14:	mov	r0, r2
   57f18:	mov	r1, r3
   57f1c:	bl	6b664 <__aeabi_l2d>
   57f20:	vmov	d8, r0, r1
   57f24:	ldr	r2, [sp, #52]	; 0x34
   57f28:	add	r0, sl, #16
   57f2c:	subs	r4, r4, #2
   57f30:	add	r6, r6, #4
   57f34:	mov	r7, r9
   57f38:	mov	sl, r8
   57f3c:	vst1.64	{d8-d9}, [r0]
   57f40:	bne	57ebc <GetDataSlab+0x27f3c>
   57f44:	ldr	r0, [sp, #28]
   57f48:	ldr	sl, [sp, #88]	; 0x58
   57f4c:	ldr	r9, [sp, #36]	; 0x24
   57f50:	cmp	r0, #0
   57f54:	beq	57f9c <GetDataSlab+0x2801c>
   57f58:	ldr	r0, [sp, #68]	; 0x44
   57f5c:	mul	r0, r6, r0
   57f60:	add	r0, r9, r0, lsl #3
   57f64:	vld1.64	{d8-d9}, [r0]
   57f68:	vmov.32	r0, d9[0]
   57f6c:	vmov.32	r1, d9[1]
   57f70:	bl	6b664 <__aeabi_l2d>
   57f74:	vmov.32	r2, d8[0]
   57f78:	vmov.32	r3, d8[1]
   57f7c:	vmov	d9, r0, r1
   57f80:	mov	r0, r2
   57f84:	mov	r1, r3
   57f88:	bl	6b664 <__aeabi_l2d>
   57f8c:	vmov	d8, r0, r1
   57f90:	ldr	r2, [sp, #52]	; 0x34
   57f94:	add	r0, sl, r6, lsl #3
   57f98:	vst1.64	{d8-d9}, [r0]
   57f9c:	ldr	r4, [sp, #24]
   57fa0:	ldr	r7, [sp, #84]	; 0x54
   57fa4:	ldr	r6, [sp, #76]	; 0x4c
   57fa8:	ldr	r8, [sp, #64]	; 0x40
   57fac:	ldr	r3, [sp, #48]	; 0x30
   57fb0:	add	sl, sl, r4, lsl #3
   57fb4:	cmp	r5, r4
   57fb8:	beq	57e68 <GetDataSlab+0x27ee8>
   57fbc:	ldr	r0, [sp, #32]
   57fc0:	cmp	r0, #0
   57fc4:	bne	57fd0 <GetDataSlab+0x28050>
   57fc8:	mov	r0, r4
   57fcc:	b	58008 <GetDataSlab+0x28088>
   57fd0:	ldr	r0, [sp, #68]	; 0x44
   57fd4:	mov	r1, r9
   57fd8:	mov	r6, r3
   57fdc:	mul	r0, r4, r0
   57fe0:	ldr	r0, [r1, r0, lsl #3]!
   57fe4:	ldr	r1, [r1, #4]
   57fe8:	bl	6b664 <__aeabi_l2d>
   57fec:	mov	r3, r6
   57ff0:	ldr	r2, [sp, #52]	; 0x34
   57ff4:	ldr	r6, [sp, #76]	; 0x4c
   57ff8:	ldr	r7, [sp, #84]	; 0x54
   57ffc:	strd	r0, [sl]
   58000:	orr	r0, r4, #1
   58004:	add	sl, sl, #8
   58008:	orr	r1, r4, #1
   5800c:	cmp	r5, r1
   58010:	beq	57e68 <GetDataSlab+0x27ee8>
   58014:	ldr	r1, [sp, #16]
   58018:	sub	r6, r5, r0
   5801c:	mov	r4, r9
   58020:	str	r3, [sp, #48]	; 0x30
   58024:	mul	r8, r1, r0
   58028:	add	r0, r0, #1
   5802c:	mul	r7, r1, r0
   58030:	mov	r1, r4
   58034:	ldr	r0, [r1, r8]!
   58038:	ldr	r1, [r1, #4]
   5803c:	bl	6b664 <__aeabi_l2d>
   58040:	strd	r0, [sl]
   58044:	mov	r1, r4
   58048:	ldr	r0, [r1, r7]!
   5804c:	ldr	r1, [r1, #4]
   58050:	bl	6b664 <__aeabi_l2d>
   58054:	strd	r0, [sl, #8]
   58058:	add	sl, sl, #16
   5805c:	subs	r6, r6, #2
   58060:	ldr	r0, [sp, #92]	; 0x5c
   58064:	add	r4, r4, r0
   58068:	bne	58030 <GetDataSlab+0x280b0>
   5806c:	ldr	r7, [sp, #84]	; 0x54
   58070:	ldr	r6, [sp, #76]	; 0x4c
   58074:	ldr	r8, [sp, #64]	; 0x40
   58078:	ldr	r2, [sp, #52]	; 0x34
   5807c:	ldr	r3, [sp, #48]	; 0x30
   58080:	b	57e68 <GetDataSlab+0x27ee8>
   58084:	cmp	r7, #1
   58088:	blt	5f88c <GetDataSlab+0x2f90c>
   5808c:	ldr	r2, [sp, #56]	; 0x38
   58090:	mov	r1, #1
   58094:	cmp	r5, #3
   58098:	mov	r7, #0
   5809c:	mla	r0, r2, r8, r4
   580a0:	str	r0, [sp, #52]	; 0x34
   580a4:	add	ip, r3, r0
   580a8:	sub	r0, r5, #4
   580ac:	add	r1, r1, r0, lsr #2
   580b0:	lsr	r0, r0, #2
   580b4:	str	r0, [sp, #56]	; 0x38
   580b8:	and	r3, r1, #1
   580bc:	sub	r1, r1, r3
   580c0:	str	r3, [sp, #48]	; 0x30
   580c4:	str	r1, [sp, #44]	; 0x2c
   580c8:	add	r1, r5, r4
   580cc:	mla	r1, r2, r8, r1
   580d0:	mov	r2, #0
   580d4:	movwhi	r2, #1
   580d8:	str	r1, [sp, #60]	; 0x3c
   580dc:	ldr	r1, [sp, #72]	; 0x48
   580e0:	mul	r1, r1, r8
   580e4:	str	r1, [sp, #92]	; 0x5c
   580e8:	ldr	r1, [sp, #68]	; 0x44
   580ec:	mov	r3, r1
   580f0:	sub	r1, r1, #1
   580f4:	clz	r1, r1
   580f8:	lsr	r1, r1, #5
   580fc:	and	r1, r2, r1
   58100:	lsl	r2, r3, #3
   58104:	str	r2, [sp, #40]	; 0x28
   58108:	lsl	r2, r3, #2
   5810c:	str	r1, [sp, #76]	; 0x4c
   58110:	lsl	r1, r3, #1
   58114:	str	r2, [sp, #36]	; 0x24
   58118:	ldr	lr, [sp, #40]	; 0x28
   5811c:	and	r2, r5, #1
   58120:	ldr	r9, [sp, #36]	; 0x24
   58124:	str	r2, [sp, #72]	; 0x48
   58128:	bic	r2, r5, #3
   5812c:	str	r2, [sp, #64]	; 0x40
   58130:	cmp	r5, #1
   58134:	bge	58164 <GetDataSlab+0x281e4>
   58138:	ldr	r8, [sp, #88]	; 0x58
   5813c:	ldr	sl, [sp, #92]	; 0x5c
   58140:	ldr	r2, [sp, #84]	; 0x54
   58144:	add	r7, r7, #1
   58148:	add	ip, ip, sl
   5814c:	mov	r0, #0
   58150:	str	r8, [sp, #88]	; 0x58
   58154:	cmp	r7, r2
   58158:	beq	56c20 <GetDataSlab+0x26ca0>
   5815c:	cmp	r5, #1
   58160:	blt	58138 <GetDataSlab+0x281b8>
   58164:	ldr	r2, [sp, #76]	; 0x4c
   58168:	ldr	r8, [sp, #88]	; 0x58
   5816c:	ldr	sl, [sp, #92]	; 0x5c
   58170:	mov	r0, #0
   58174:	cmp	r2, #0
   58178:	beq	58274 <GetDataSlab+0x282f4>
   5817c:	ldr	r2, [sp, #60]	; 0x3c
   58180:	ldr	r3, [sp, #80]	; 0x50
   58184:	mla	r2, sl, r7, r2
   58188:	add	r2, r3, r2
   5818c:	cmp	r2, r8
   58190:	bls	581ac <GetDataSlab+0x2822c>
   58194:	ldr	r2, [sp, #52]	; 0x34
   58198:	add	r4, r8, r5, lsl #2
   5819c:	mla	r2, sl, r7, r2
   581a0:	add	r2, r3, r2
   581a4:	cmp	r2, r4
   581a8:	bcc	58274 <GetDataSlab+0x282f4>
   581ac:	ldr	r0, [sp, #56]	; 0x38
   581b0:	cmp	r0, #0
   581b4:	beq	58220 <GetDataSlab+0x282a0>
   581b8:	ldr	r4, [sp, #44]	; 0x2c
   581bc:	mov	r0, #0
   581c0:	mov	r2, ip
   581c4:	ldr	r6, [r2]
   581c8:	mov	r3, #32
   581cc:	subs	r4, r4, #2
   581d0:	add	r0, r0, #8
   581d4:	str	r6, [sp, #192]	; 0xc0
   581d8:	add	r6, sp, #192	; 0xc0
   581dc:	vld1.32	{d16[0]}, [r6 :32]
   581e0:	add	r6, r8, #16
   581e4:	vmovl.u8	q8, d16
   581e8:	vmovl.u16	q8, d16
   581ec:	vcvt.f32.u32	q8, q8
   581f0:	vst1.32	{d16-d17}, [r8], r3
   581f4:	add	r3, sp, #196	; 0xc4
   581f8:	ldr	sl, [r2, r9]
   581fc:	add	r2, r2, lr
   58200:	str	sl, [sp, #196]	; 0xc4
   58204:	vld1.32	{d16[0]}, [r3 :32]
   58208:	vmovl.u8	q8, d16
   5820c:	vmovl.u16	q8, d16
   58210:	vcvt.f32.u32	q8, q8
   58214:	vst1.32	{d16-d17}, [r6]
   58218:	bne	581c4 <GetDataSlab+0x28244>
   5821c:	b	58224 <GetDataSlab+0x282a4>
   58220:	mov	r0, #0
   58224:	ldr	r2, [sp, #48]	; 0x30
   58228:	ldr	r8, [sp, #88]	; 0x58
   5822c:	cmp	r2, #0
   58230:	beq	58260 <GetDataSlab+0x282e0>
   58234:	ldr	r2, [sp, #68]	; 0x44
   58238:	mul	r2, r0, r2
   5823c:	add	r0, r8, r0, lsl #2
   58240:	ldr	r2, [ip, r2]
   58244:	str	r2, [sp, #188]	; 0xbc
   58248:	add	r2, sp, #188	; 0xbc
   5824c:	vld1.32	{d16[0]}, [r2 :32]
   58250:	vmovl.u8	q8, d16
   58254:	vmovl.u16	q8, d16
   58258:	vcvt.f32.u32	q8, q8
   5825c:	vst1.32	{d16-d17}, [r0]
   58260:	ldr	r0, [sp, #64]	; 0x40
   58264:	ldr	sl, [sp, #92]	; 0x5c
   58268:	add	r8, r8, r0, lsl #2
   5826c:	cmp	r5, r0
   58270:	beq	58140 <GetDataSlab+0x281c0>
   58274:	ldr	r2, [sp, #72]	; 0x48
   58278:	cmp	r2, #0
   5827c:	bne	58288 <GetDataSlab+0x28308>
   58280:	mov	r4, r0
   58284:	b	582a8 <GetDataSlab+0x28328>
   58288:	ldr	r2, [sp, #68]	; 0x44
   5828c:	orr	r4, r0, #1
   58290:	mul	r2, r0, r2
   58294:	ldrb	r2, [ip, r2]
   58298:	vmov	s0, r2
   5829c:	vcvt.f32.u32	s0, s0
   582a0:	vstr	s0, [r8]
   582a4:	add	r8, r8, #4
   582a8:	orr	r0, r0, #1
   582ac:	cmp	r5, r0
   582b0:	beq	58140 <GetDataSlab+0x281c0>
   582b4:	ldr	r3, [sp, #68]	; 0x44
   582b8:	sub	r2, r5, r4
   582bc:	mov	r6, ip
   582c0:	mul	r0, r3, r4
   582c4:	add	r4, r4, #1
   582c8:	mul	r4, r3, r4
   582cc:	ldrb	r3, [r6, r0]
   582d0:	subs	r2, r2, #2
   582d4:	vmov	s0, r3
   582d8:	vcvt.f32.u32	s0, s0
   582dc:	vstr	s0, [r8]
   582e0:	ldrb	r3, [r6, r4]
   582e4:	add	r6, r6, r1
   582e8:	vmov	s0, r3
   582ec:	vcvt.f32.u32	s0, s0
   582f0:	vstr	s0, [r8, #4]
   582f4:	add	r8, r8, #8
   582f8:	bne	582cc <GetDataSlab+0x2834c>
   582fc:	b	58140 <GetDataSlab+0x281c0>
   58300:	cmp	r7, #1
   58304:	blt	5f88c <GetDataSlab+0x2f90c>
   58308:	ldr	r0, [sp, #56]	; 0x38
   5830c:	mov	r1, #1
   58310:	cmp	r5, #3
   58314:	mov	r6, r8
   58318:	mla	r0, r0, r8, r4
   5831c:	add	r0, r3, r0, lsl #1
   58320:	str	r0, [sp, #92]	; 0x5c
   58324:	sub	r0, r5, #4
   58328:	add	r1, r1, r0, lsr #2
   5832c:	lsr	r0, r0, #2
   58330:	str	r0, [sp, #44]	; 0x2c
   58334:	and	r2, r1, #1
   58338:	sub	r1, r1, r2
   5833c:	str	r2, [sp, #52]	; 0x34
   58340:	mov	r2, #0
   58344:	str	r1, [sp, #36]	; 0x24
   58348:	ldr	r1, [sp, #68]	; 0x44
   5834c:	str	r2, [sp, #80]	; 0x50
   58350:	mov	r2, #0
   58354:	movwhi	r2, #1
   58358:	mov	r7, r1
   5835c:	sub	r1, r1, #1
   58360:	clz	r1, r1
   58364:	lsl	lr, r7, #2
   58368:	lsr	r1, r1, #5
   5836c:	and	r1, r2, r1
   58370:	str	r1, [sp, #60]	; 0x3c
   58374:	ldr	r1, [sp, #72]	; 0x48
   58378:	mul	r1, r1, r8
   5837c:	mov	r8, #32
   58380:	lsl	r1, r1, #1
   58384:	str	r1, [sp, #76]	; 0x4c
   58388:	lsl	r1, r7, #1
   5838c:	str	r1, [sp, #40]	; 0x28
   58390:	lsl	r1, r7, #4
   58394:	str	r1, [sp, #72]	; 0x48
   58398:	lsl	r1, r7, #3
   5839c:	str	r1, [sp, #64]	; 0x40
   583a0:	and	r1, r5, #1
   583a4:	str	r1, [sp, #56]	; 0x38
   583a8:	bic	r1, r5, #3
   583ac:	str	r1, [sp, #48]	; 0x30
   583b0:	cmp	r5, #1
   583b4:	bge	583ec <GetDataSlab+0x2846c>
   583b8:	ldr	r3, [sp, #92]	; 0x5c
   583bc:	ldr	r2, [sp, #80]	; 0x50
   583c0:	ldr	r0, [sp, #76]	; 0x4c
   583c4:	ldr	r1, [sp, #84]	; 0x54
   583c8:	add	r2, r2, #1
   583cc:	add	r3, r3, r0
   583d0:	mov	r0, #0
   583d4:	cmp	r2, r1
   583d8:	str	r3, [sp, #92]	; 0x5c
   583dc:	str	r2, [sp, #80]	; 0x50
   583e0:	beq	56c20 <GetDataSlab+0x26ca0>
   583e4:	cmp	r5, #1
   583e8:	blt	583b8 <GetDataSlab+0x28438>
   583ec:	ldr	r1, [sp, #60]	; 0x3c
   583f0:	ldr	r6, [sp, #72]	; 0x48
   583f4:	ldr	r7, [sp, #64]	; 0x40
   583f8:	ldr	r3, [sp, #92]	; 0x5c
   583fc:	mov	r0, #0
   58400:	cmp	r1, #0
   58404:	beq	584dc <GetDataSlab+0x2855c>
   58408:	ldr	r0, [sp, #44]	; 0x2c
   5840c:	cmp	r0, #0
   58410:	beq	58474 <GetDataSlab+0x284f4>
   58414:	ldr	sl, [sp, #88]	; 0x58
   58418:	ldr	r9, [sp, #36]	; 0x24
   5841c:	mov	r0, #0
   58420:	mov	r4, r3
   58424:	mov	ip, r3
   58428:	add	r3, sp, #152	; 0x98
   5842c:	vld1.16	{d16}, [ip], r6
   58430:	add	r1, sl, #16
   58434:	subs	r9, r9, #2
   58438:	add	r0, r0, #8
   5843c:	vmovl.s16	q8, d16
   58440:	vcvt.f32.s32	q8, q8
   58444:	vst1.32	{d16-d17}, [sl], r8
   58448:	ldr	r2, [r4, r7]!
   5844c:	str	r2, [sp, #152]	; 0x98
   58450:	ldr	r2, [r4, #4]
   58454:	mov	r4, ip
   58458:	str	r2, [sp, #156]	; 0x9c
   5845c:	vld1.16	{d16}, [r3 :64]
   58460:	vmovl.s16	q8, d16
   58464:	vcvt.f32.s32	q8, q8
   58468:	vst1.32	{d16-d17}, [r1]
   5846c:	bne	5842c <GetDataSlab+0x284ac>
   58470:	b	58478 <GetDataSlab+0x284f8>
   58474:	mov	r0, #0
   58478:	ldr	r1, [sp, #52]	; 0x34
   5847c:	ldr	r3, [sp, #92]	; 0x5c
   58480:	cmp	r1, #0
   58484:	beq	584c0 <GetDataSlab+0x28540>
   58488:	ldr	r1, [sp, #68]	; 0x44
   5848c:	mov	r2, r3
   58490:	mul	r1, r0, r1
   58494:	ldr	r1, [r2, r1, lsl #1]!
   58498:	str	r1, [sp, #144]	; 0x90
   5849c:	ldr	r1, [r2, #4]
   584a0:	str	r1, [sp, #148]	; 0x94
   584a4:	add	r1, sp, #144	; 0x90
   584a8:	vld1.16	{d16}, [r1 :64]
   584ac:	ldr	r1, [sp, #88]	; 0x58
   584b0:	add	r0, r1, r0, lsl #2
   584b4:	vmovl.s16	q8, d16
   584b8:	vcvt.f32.s32	q8, q8
   584bc:	vst1.32	{d16-d17}, [r0]
   584c0:	ldr	r1, [sp, #48]	; 0x30
   584c4:	ldr	r0, [sp, #88]	; 0x58
   584c8:	add	r0, r0, r1, lsl #2
   584cc:	cmp	r5, r1
   584d0:	str	r0, [sp, #88]	; 0x58
   584d4:	mov	r0, r1
   584d8:	beq	583bc <GetDataSlab+0x2843c>
   584dc:	ldr	r1, [sp, #56]	; 0x38
   584e0:	cmp	r1, #0
   584e4:	bne	584f0 <GetDataSlab+0x28570>
   584e8:	mov	r1, r0
   584ec:	b	5851c <GetDataSlab+0x2859c>
   584f0:	ldr	r1, [sp, #68]	; 0x44
   584f4:	mul	r1, r0, r1
   584f8:	add	r1, r3, r1, lsl #1
   584fc:	ldrsh	r1, [r1]
   58500:	vmov	s0, r1
   58504:	orr	r1, r0, #1
   58508:	vcvt.f32.s32	s0, s0
   5850c:	ldr	r2, [sp, #88]	; 0x58
   58510:	vstr	s0, [r2]
   58514:	add	r2, r2, #4
   58518:	str	r2, [sp, #88]	; 0x58
   5851c:	orr	r0, r0, #1
   58520:	cmp	r5, r0
   58524:	beq	583bc <GetDataSlab+0x2843c>
   58528:	ldr	r2, [sp, #40]	; 0x28
   5852c:	sub	r4, r5, r1
   58530:	ldr	r7, [sp, #88]	; 0x58
   58534:	mul	r0, r2, r1
   58538:	add	r1, r1, #1
   5853c:	mul	r2, r2, r1
   58540:	mov	r1, r3
   58544:	add	r6, r1, r0
   58548:	subs	r4, r4, #2
   5854c:	ldrsh	r6, [r6]
   58550:	vmov	s0, r6
   58554:	add	r6, r1, r2
   58558:	add	r1, r1, lr
   5855c:	vcvt.f32.s32	s0, s0
   58560:	vstr	s0, [r7]
   58564:	ldrsh	r6, [r6]
   58568:	vmov	s0, r6
   5856c:	vcvt.f32.s32	s0, s0
   58570:	vstr	s0, [r7, #4]
   58574:	add	r7, r7, #8
   58578:	bne	58544 <GetDataSlab+0x285c4>
   5857c:	str	r7, [sp, #88]	; 0x58
   58580:	b	583bc <GetDataSlab+0x2843c>
   58584:	cmp	r7, #1
   58588:	blt	5f88c <GetDataSlab+0x2f90c>
   5858c:	ldr	r0, [sp, #56]	; 0x38
   58590:	mov	r1, #1
   58594:	cmp	r5, #3
   58598:	mov	r6, r8
   5859c:	mla	r0, r0, r8, r4
   585a0:	add	r0, r3, r0, lsl #1
   585a4:	str	r0, [sp, #92]	; 0x5c
   585a8:	sub	r0, r5, #4
   585ac:	add	r1, r1, r0, lsr #2
   585b0:	lsr	r0, r0, #2
   585b4:	str	r0, [sp, #44]	; 0x2c
   585b8:	and	r2, r1, #1
   585bc:	sub	r1, r1, r2
   585c0:	str	r2, [sp, #52]	; 0x34
   585c4:	mov	r2, #0
   585c8:	str	r1, [sp, #36]	; 0x24
   585cc:	ldr	r1, [sp, #68]	; 0x44
   585d0:	str	r2, [sp, #80]	; 0x50
   585d4:	mov	r2, #0
   585d8:	movwhi	r2, #1
   585dc:	mov	r7, r1
   585e0:	sub	r1, r1, #1
   585e4:	clz	r1, r1
   585e8:	lsl	lr, r7, #2
   585ec:	lsr	r1, r1, #5
   585f0:	and	r1, r2, r1
   585f4:	str	r1, [sp, #60]	; 0x3c
   585f8:	ldr	r1, [sp, #72]	; 0x48
   585fc:	mul	r1, r1, r8
   58600:	mov	r8, #32
   58604:	lsl	r1, r1, #1
   58608:	str	r1, [sp, #76]	; 0x4c
   5860c:	lsl	r1, r7, #1
   58610:	str	r1, [sp, #40]	; 0x28
   58614:	lsl	r1, r7, #4
   58618:	str	r1, [sp, #72]	; 0x48
   5861c:	lsl	r1, r7, #3
   58620:	str	r1, [sp, #64]	; 0x40
   58624:	and	r1, r5, #1
   58628:	str	r1, [sp, #56]	; 0x38
   5862c:	bic	r1, r5, #3
   58630:	str	r1, [sp, #48]	; 0x30
   58634:	cmp	r5, #1
   58638:	bge	58670 <GetDataSlab+0x286f0>
   5863c:	ldr	r3, [sp, #92]	; 0x5c
   58640:	ldr	r2, [sp, #80]	; 0x50
   58644:	ldr	r0, [sp, #76]	; 0x4c
   58648:	ldr	r1, [sp, #84]	; 0x54
   5864c:	add	r2, r2, #1
   58650:	add	r3, r3, r0
   58654:	mov	r0, #0
   58658:	cmp	r2, r1
   5865c:	str	r3, [sp, #92]	; 0x5c
   58660:	str	r2, [sp, #80]	; 0x50
   58664:	beq	56c20 <GetDataSlab+0x26ca0>
   58668:	cmp	r5, #1
   5866c:	blt	5863c <GetDataSlab+0x286bc>
   58670:	ldr	r1, [sp, #60]	; 0x3c
   58674:	ldr	r6, [sp, #72]	; 0x48
   58678:	ldr	r7, [sp, #64]	; 0x40
   5867c:	ldr	r3, [sp, #92]	; 0x5c
   58680:	mov	r0, #0
   58684:	cmp	r1, #0
   58688:	beq	58760 <GetDataSlab+0x287e0>
   5868c:	ldr	r0, [sp, #44]	; 0x2c
   58690:	cmp	r0, #0
   58694:	beq	586f8 <GetDataSlab+0x28778>
   58698:	ldr	sl, [sp, #88]	; 0x58
   5869c:	ldr	r9, [sp, #36]	; 0x24
   586a0:	mov	r0, #0
   586a4:	mov	r4, r3
   586a8:	mov	ip, r3
   586ac:	add	r3, sp, #168	; 0xa8
   586b0:	vld1.16	{d16}, [ip], r6
   586b4:	add	r1, sl, #16
   586b8:	subs	r9, r9, #2
   586bc:	add	r0, r0, #8
   586c0:	vmovl.u16	q8, d16
   586c4:	vcvt.f32.u32	q8, q8
   586c8:	vst1.32	{d16-d17}, [sl], r8
   586cc:	ldr	r2, [r4, r7]!
   586d0:	str	r2, [sp, #168]	; 0xa8
   586d4:	ldr	r2, [r4, #4]
   586d8:	mov	r4, ip
   586dc:	str	r2, [sp, #172]	; 0xac
   586e0:	vld1.16	{d16}, [r3 :64]
   586e4:	vmovl.u16	q8, d16
   586e8:	vcvt.f32.u32	q8, q8
   586ec:	vst1.32	{d16-d17}, [r1]
   586f0:	bne	586b0 <GetDataSlab+0x28730>
   586f4:	b	586fc <GetDataSlab+0x2877c>
   586f8:	mov	r0, #0
   586fc:	ldr	r1, [sp, #52]	; 0x34
   58700:	ldr	r3, [sp, #92]	; 0x5c
   58704:	cmp	r1, #0
   58708:	beq	58744 <GetDataSlab+0x287c4>
   5870c:	ldr	r1, [sp, #68]	; 0x44
   58710:	mov	r2, r3
   58714:	mul	r1, r0, r1
   58718:	ldr	r1, [r2, r1, lsl #1]!
   5871c:	str	r1, [sp, #160]	; 0xa0
   58720:	ldr	r1, [r2, #4]
   58724:	str	r1, [sp, #164]	; 0xa4
   58728:	add	r1, sp, #160	; 0xa0
   5872c:	vld1.16	{d16}, [r1 :64]
   58730:	ldr	r1, [sp, #88]	; 0x58
   58734:	add	r0, r1, r0, lsl #2
   58738:	vmovl.u16	q8, d16
   5873c:	vcvt.f32.u32	q8, q8
   58740:	vst1.32	{d16-d17}, [r0]
   58744:	ldr	r1, [sp, #48]	; 0x30
   58748:	ldr	r0, [sp, #88]	; 0x58
   5874c:	add	r0, r0, r1, lsl #2
   58750:	cmp	r5, r1
   58754:	str	r0, [sp, #88]	; 0x58
   58758:	mov	r0, r1
   5875c:	beq	58640 <GetDataSlab+0x286c0>
   58760:	ldr	r1, [sp, #56]	; 0x38
   58764:	cmp	r1, #0
   58768:	bne	58774 <GetDataSlab+0x287f4>
   5876c:	mov	r1, r0
   58770:	b	587a0 <GetDataSlab+0x28820>
   58774:	ldr	r1, [sp, #68]	; 0x44
   58778:	mul	r1, r0, r1
   5877c:	add	r1, r3, r1, lsl #1
   58780:	ldrh	r1, [r1]
   58784:	vmov	s0, r1
   58788:	orr	r1, r0, #1
   5878c:	vcvt.f32.u32	s0, s0
   58790:	ldr	r2, [sp, #88]	; 0x58
   58794:	vstr	s0, [r2]
   58798:	add	r2, r2, #4
   5879c:	str	r2, [sp, #88]	; 0x58
   587a0:	orr	r0, r0, #1
   587a4:	cmp	r5, r0
   587a8:	beq	58640 <GetDataSlab+0x286c0>
   587ac:	ldr	r2, [sp, #40]	; 0x28
   587b0:	sub	r4, r5, r1
   587b4:	ldr	r7, [sp, #88]	; 0x58
   587b8:	mul	r0, r2, r1
   587bc:	add	r1, r1, #1
   587c0:	mul	r2, r2, r1
   587c4:	mov	r1, r3
   587c8:	add	r6, r1, r0
   587cc:	subs	r4, r4, #2
   587d0:	ldrh	r6, [r6]
   587d4:	vmov	s0, r6
   587d8:	add	r6, r1, r2
   587dc:	add	r1, r1, lr
   587e0:	vcvt.f32.u32	s0, s0
   587e4:	vstr	s0, [r7]
   587e8:	ldrh	r6, [r6]
   587ec:	vmov	s0, r6
   587f0:	vcvt.f32.u32	s0, s0
   587f4:	vstr	s0, [r7, #4]
   587f8:	add	r7, r7, #8
   587fc:	bne	587c8 <GetDataSlab+0x28848>
   58800:	str	r7, [sp, #88]	; 0x58
   58804:	b	58640 <GetDataSlab+0x286c0>
   58808:	cmp	r7, #1
   5880c:	blt	5f88c <GetDataSlab+0x2f90c>
   58810:	ldr	r0, [sp, #56]	; 0x38
   58814:	mov	r6, r8
   58818:	mov	r1, #1
   5881c:	cmp	r5, #3
   58820:	mov	ip, #0
   58824:	mla	r0, r0, r8, r4
   58828:	add	r8, r3, r0, lsl #2
   5882c:	sub	r0, r5, #4
   58830:	add	r1, r1, r0, lsr #2
   58834:	lsr	r0, r0, #2
   58838:	str	r0, [sp, #56]	; 0x38
   5883c:	and	r2, r1, #1
   58840:	sub	r1, r1, r2
   58844:	str	r2, [sp, #60]	; 0x3c
   58848:	mov	r2, #0
   5884c:	movwhi	r2, #1
   58850:	str	r1, [sp, #48]	; 0x30
   58854:	ldr	r1, [sp, #68]	; 0x44
   58858:	mov	r7, r1
   5885c:	sub	r1, r1, #1
   58860:	clz	r1, r1
   58864:	lsl	r3, r7, #3
   58868:	lsl	lr, r7, #4
   5886c:	lsr	r1, r1, #5
   58870:	and	r1, r2, r1
   58874:	str	r1, [sp, #80]	; 0x50
   58878:	ldr	r1, [sp, #72]	; 0x48
   5887c:	mul	r1, r1, r6
   58880:	lsl	r1, r1, #2
   58884:	str	r1, [sp, #92]	; 0x5c
   58888:	lsl	r1, r7, #2
   5888c:	str	r1, [sp, #52]	; 0x34
   58890:	lsl	r1, r7, #5
   58894:	str	r1, [sp, #76]	; 0x4c
   58898:	and	r1, r5, #1
   5889c:	str	r1, [sp, #72]	; 0x48
   588a0:	bic	r1, r5, #3
   588a4:	str	r1, [sp, #64]	; 0x40
   588a8:	cmp	r5, #1
   588ac:	bge	588d4 <GetDataSlab+0x28954>
   588b0:	ldr	r0, [sp, #92]	; 0x5c
   588b4:	ldr	r1, [sp, #84]	; 0x54
   588b8:	add	ip, ip, #1
   588bc:	add	r8, r8, r0
   588c0:	mov	r0, #0
   588c4:	cmp	ip, r1
   588c8:	beq	56c20 <GetDataSlab+0x26ca0>
   588cc:	cmp	r5, #1
   588d0:	blt	588b0 <GetDataSlab+0x28930>
   588d4:	ldr	r1, [sp, #80]	; 0x50
   588d8:	ldr	r6, [sp, #76]	; 0x4c
   588dc:	mov	r0, #0
   588e0:	mov	r7, #32
   588e4:	cmp	r1, #0
   588e8:	beq	58984 <GetDataSlab+0x28a04>
   588ec:	ldr	r0, [sp, #56]	; 0x38
   588f0:	cmp	r0, #0
   588f4:	beq	58938 <GetDataSlab+0x289b8>
   588f8:	ldr	sl, [sp, #88]	; 0x58
   588fc:	ldr	r9, [sp, #48]	; 0x30
   58900:	mov	r0, #0
   58904:	mov	r1, r8
   58908:	add	r2, r1, lr
   5890c:	vld1.32	{d16-d17}, [r1], r6
   58910:	add	r4, sl, #16
   58914:	subs	r9, r9, #2
   58918:	add	r0, r0, #8
   5891c:	vcvt.f32.s32	q8, q8
   58920:	vst1.32	{d16-d17}, [sl], r7
   58924:	vld1.32	{d16-d17}, [r2]
   58928:	vcvt.f32.s32	q8, q8
   5892c:	vst1.32	{d16-d17}, [r4]
   58930:	bne	58908 <GetDataSlab+0x28988>
   58934:	b	5893c <GetDataSlab+0x289bc>
   58938:	mov	r0, #0
   5893c:	ldr	r1, [sp, #60]	; 0x3c
   58940:	cmp	r1, #0
   58944:	beq	58968 <GetDataSlab+0x289e8>
   58948:	ldr	r1, [sp, #68]	; 0x44
   5894c:	mul	r1, r0, r1
   58950:	add	r1, r8, r1, lsl #2
   58954:	vld1.32	{d16-d17}, [r1]
   58958:	ldr	r1, [sp, #88]	; 0x58
   5895c:	add	r0, r1, r0, lsl #2
   58960:	vcvt.f32.s32	q8, q8
   58964:	vst1.32	{d16-d17}, [r0]
   58968:	ldr	r1, [sp, #64]	; 0x40
   5896c:	ldr	r0, [sp, #88]	; 0x58
   58970:	add	r0, r0, r1, lsl #2
   58974:	cmp	r5, r1
   58978:	str	r0, [sp, #88]	; 0x58
   5897c:	mov	r0, r1
   58980:	beq	588b0 <GetDataSlab+0x28930>
   58984:	ldr	r1, [sp, #72]	; 0x48
   58988:	cmp	r1, #0
   5898c:	bne	58998 <GetDataSlab+0x28a18>
   58990:	mov	r2, r0
   58994:	b	589c0 <GetDataSlab+0x28a40>
   58998:	ldr	r1, [sp, #68]	; 0x44
   5899c:	orr	r2, r0, #1
   589a0:	mul	r1, r0, r1
   589a4:	add	r1, r8, r1, lsl #2
   589a8:	vldr	s0, [r1]
   589ac:	vcvt.f32.s32	s0, s0
   589b0:	ldr	r1, [sp, #88]	; 0x58
   589b4:	vstr	s0, [r1]
   589b8:	add	r1, r1, #4
   589bc:	str	r1, [sp, #88]	; 0x58
   589c0:	orr	r0, r0, #1
   589c4:	cmp	r5, r0
   589c8:	beq	588b0 <GetDataSlab+0x28930>
   589cc:	ldr	r4, [sp, #52]	; 0x34
   589d0:	sub	r1, r5, r2
   589d4:	ldr	r7, [sp, #88]	; 0x58
   589d8:	mul	r0, r4, r2
   589dc:	add	r2, r2, #1
   589e0:	mul	r4, r4, r2
   589e4:	mov	r2, r8
   589e8:	add	r6, r2, r0
   589ec:	subs	r1, r1, #2
   589f0:	vldr	s0, [r6]
   589f4:	add	r6, r2, r4
   589f8:	add	r2, r2, r3
   589fc:	vcvt.f32.s32	s0, s0
   58a00:	vstr	s0, [r7]
   58a04:	vldr	s0, [r6]
   58a08:	vcvt.f32.s32	s0, s0
   58a0c:	vstr	s0, [r7, #4]
   58a10:	add	r7, r7, #8
   58a14:	bne	589e8 <GetDataSlab+0x28a68>
   58a18:	str	r7, [sp, #88]	; 0x58
   58a1c:	b	588b0 <GetDataSlab+0x28930>
   58a20:	cmp	r7, #1
   58a24:	blt	5f88c <GetDataSlab+0x2f90c>
   58a28:	ldr	r0, [sp, #56]	; 0x38
   58a2c:	mov	r6, r8
   58a30:	mov	r1, #1
   58a34:	cmp	r5, #3
   58a38:	mov	ip, #0
   58a3c:	mla	r0, r0, r8, r4
   58a40:	add	r8, r3, r0, lsl #2
   58a44:	sub	r0, r5, #4
   58a48:	add	r1, r1, r0, lsr #2
   58a4c:	lsr	r0, r0, #2
   58a50:	str	r0, [sp, #56]	; 0x38
   58a54:	and	r2, r1, #1
   58a58:	sub	r1, r1, r2
   58a5c:	str	r2, [sp, #60]	; 0x3c
   58a60:	mov	r2, #0
   58a64:	movwhi	r2, #1
   58a68:	str	r1, [sp, #48]	; 0x30
   58a6c:	ldr	r1, [sp, #68]	; 0x44
   58a70:	mov	r7, r1
   58a74:	sub	r1, r1, #1
   58a78:	clz	r1, r1
   58a7c:	lsl	r3, r7, #3
   58a80:	lsl	lr, r7, #4
   58a84:	lsr	r1, r1, #5
   58a88:	and	r1, r2, r1
   58a8c:	str	r1, [sp, #80]	; 0x50
   58a90:	ldr	r1, [sp, #72]	; 0x48
   58a94:	mul	r1, r1, r6
   58a98:	lsl	r1, r1, #2
   58a9c:	str	r1, [sp, #92]	; 0x5c
   58aa0:	lsl	r1, r7, #2
   58aa4:	str	r1, [sp, #52]	; 0x34
   58aa8:	lsl	r1, r7, #5
   58aac:	str	r1, [sp, #76]	; 0x4c
   58ab0:	and	r1, r5, #1
   58ab4:	str	r1, [sp, #72]	; 0x48
   58ab8:	bic	r1, r5, #3
   58abc:	str	r1, [sp, #64]	; 0x40
   58ac0:	cmp	r5, #1
   58ac4:	bge	58aec <GetDataSlab+0x28b6c>
   58ac8:	ldr	r0, [sp, #92]	; 0x5c
   58acc:	ldr	r1, [sp, #84]	; 0x54
   58ad0:	add	ip, ip, #1
   58ad4:	add	r8, r8, r0
   58ad8:	mov	r0, #0
   58adc:	cmp	ip, r1
   58ae0:	beq	56c20 <GetDataSlab+0x26ca0>
   58ae4:	cmp	r5, #1
   58ae8:	blt	58ac8 <GetDataSlab+0x28b48>
   58aec:	ldr	r1, [sp, #80]	; 0x50
   58af0:	ldr	r6, [sp, #76]	; 0x4c
   58af4:	mov	r0, #0
   58af8:	mov	r7, #32
   58afc:	cmp	r1, #0
   58b00:	beq	58b9c <GetDataSlab+0x28c1c>
   58b04:	ldr	r0, [sp, #56]	; 0x38
   58b08:	cmp	r0, #0
   58b0c:	beq	58b50 <GetDataSlab+0x28bd0>
   58b10:	ldr	sl, [sp, #88]	; 0x58
   58b14:	ldr	r9, [sp, #48]	; 0x30
   58b18:	mov	r0, #0
   58b1c:	mov	r1, r8
   58b20:	add	r2, r1, lr
   58b24:	vld1.32	{d16-d17}, [r1], r6
   58b28:	add	r4, sl, #16
   58b2c:	subs	r9, r9, #2
   58b30:	add	r0, r0, #8
   58b34:	vcvt.f32.u32	q8, q8
   58b38:	vst1.32	{d16-d17}, [sl], r7
   58b3c:	vld1.32	{d16-d17}, [r2]
   58b40:	vcvt.f32.u32	q8, q8
   58b44:	vst1.32	{d16-d17}, [r4]
   58b48:	bne	58b20 <GetDataSlab+0x28ba0>
   58b4c:	b	58b54 <GetDataSlab+0x28bd4>
   58b50:	mov	r0, #0
   58b54:	ldr	r1, [sp, #60]	; 0x3c
   58b58:	cmp	r1, #0
   58b5c:	beq	58b80 <GetDataSlab+0x28c00>
   58b60:	ldr	r1, [sp, #68]	; 0x44
   58b64:	mul	r1, r0, r1
   58b68:	add	r1, r8, r1, lsl #2
   58b6c:	vld1.32	{d16-d17}, [r1]
   58b70:	ldr	r1, [sp, #88]	; 0x58
   58b74:	add	r0, r1, r0, lsl #2
   58b78:	vcvt.f32.u32	q8, q8
   58b7c:	vst1.32	{d16-d17}, [r0]
   58b80:	ldr	r1, [sp, #64]	; 0x40
   58b84:	ldr	r0, [sp, #88]	; 0x58
   58b88:	add	r0, r0, r1, lsl #2
   58b8c:	cmp	r5, r1
   58b90:	str	r0, [sp, #88]	; 0x58
   58b94:	mov	r0, r1
   58b98:	beq	58ac8 <GetDataSlab+0x28b48>
   58b9c:	ldr	r1, [sp, #72]	; 0x48
   58ba0:	cmp	r1, #0
   58ba4:	bne	58bb0 <GetDataSlab+0x28c30>
   58ba8:	mov	r2, r0
   58bac:	b	58bd8 <GetDataSlab+0x28c58>
   58bb0:	ldr	r1, [sp, #68]	; 0x44
   58bb4:	orr	r2, r0, #1
   58bb8:	mul	r1, r0, r1
   58bbc:	add	r1, r8, r1, lsl #2
   58bc0:	vldr	s0, [r1]
   58bc4:	vcvt.f32.u32	s0, s0
   58bc8:	ldr	r1, [sp, #88]	; 0x58
   58bcc:	vstr	s0, [r1]
   58bd0:	add	r1, r1, #4
   58bd4:	str	r1, [sp, #88]	; 0x58
   58bd8:	orr	r0, r0, #1
   58bdc:	cmp	r5, r0
   58be0:	beq	58ac8 <GetDataSlab+0x28b48>
   58be4:	ldr	r4, [sp, #52]	; 0x34
   58be8:	sub	r1, r5, r2
   58bec:	ldr	r7, [sp, #88]	; 0x58
   58bf0:	mul	r0, r4, r2
   58bf4:	add	r2, r2, #1
   58bf8:	mul	r4, r4, r2
   58bfc:	mov	r2, r8
   58c00:	add	r6, r2, r0
   58c04:	subs	r1, r1, #2
   58c08:	vldr	s0, [r6]
   58c0c:	add	r6, r2, r4
   58c10:	add	r2, r2, r3
   58c14:	vcvt.f32.u32	s0, s0
   58c18:	vstr	s0, [r7]
   58c1c:	vldr	s0, [r6]
   58c20:	vcvt.f32.u32	s0, s0
   58c24:	vstr	s0, [r7, #4]
   58c28:	add	r7, r7, #8
   58c2c:	bne	58c00 <GetDataSlab+0x28c80>
   58c30:	str	r7, [sp, #88]	; 0x58
   58c34:	b	58ac8 <GetDataSlab+0x28b48>
   58c38:	cmp	r7, #1
   58c3c:	blt	5f88c <GetDataSlab+0x2f90c>
   58c40:	ldr	r2, [sp, #56]	; 0x38
   58c44:	mla	r0, r2, r8, r4
   58c48:	add	r1, r3, r0, lsl #2
   58c4c:	and	r0, r5, #1
   58c50:	str	r0, [sp, #92]	; 0x5c
   58c54:	sub	r9, r5, r0
   58c58:	mul	r0, r2, r8
   58c5c:	ldr	r2, [sp, #68]	; 0x44
   58c60:	lsl	r0, r0, #2
   58c64:	add	r0, r0, r2, lsl #2
   58c68:	lsl	sl, r2, #3
   58c6c:	add	r0, r0, r4, lsl #2
   58c70:	add	r7, r3, r0
   58c74:	ldr	r0, [sp, #72]	; 0x48
   58c78:	mul	r0, r0, r8
   58c7c:	mov	r8, #0
   58c80:	lsl	lr, r0, #2
   58c84:	cmp	r5, #1
   58c88:	bge	58cb0 <GetDataSlab+0x28d30>
   58c8c:	ldr	r2, [sp, #84]	; 0x54
   58c90:	add	r8, r8, #1
   58c94:	add	r7, r7, lr
   58c98:	add	r1, r1, lr
   58c9c:	mov	r0, #0
   58ca0:	cmp	r8, r2
   58ca4:	beq	56c20 <GetDataSlab+0x26ca0>
   58ca8:	cmp	r5, #1
   58cac:	blt	58c8c <GetDataSlab+0x28d0c>
   58cb0:	mov	r0, #0
   58cb4:	beq	58cfc <GetDataSlab+0x28d7c>
   58cb8:	ldr	ip, [sp, #88]	; 0x58
   58cbc:	mov	r6, #0
   58cc0:	mov	r0, #0
   58cc4:	mov	r2, ip
   58cc8:	mov	r3, r2
   58ccc:	ldr	r2, [r1, -r6]
   58cd0:	mov	r4, ip
   58cd4:	str	r2, [r4, r0, lsl #2]!
   58cd8:	add	r0, r0, #2
   58cdc:	ldr	r2, [r7, -r6]
   58ce0:	sub	r6, r6, sl
   58ce4:	cmp	r9, r0
   58ce8:	str	r2, [r4, #4]
   58cec:	add	r2, r4, #8
   58cf0:	bne	58cc8 <GetDataSlab+0x28d48>
   58cf4:	add	r2, r3, #8
   58cf8:	str	r2, [sp, #88]	; 0x58
   58cfc:	ldr	r2, [sp, #92]	; 0x5c
   58d00:	cmp	r2, #0
   58d04:	beq	58c8c <GetDataSlab+0x28d0c>
   58d08:	ldr	r2, [sp, #68]	; 0x44
   58d0c:	mul	r0, r0, r2
   58d10:	ldr	r2, [sp, #88]	; 0x58
   58d14:	ldr	r0, [r1, r0, lsl #2]
   58d18:	str	r0, [r2], #4
   58d1c:	str	r2, [sp, #88]	; 0x58
   58d20:	b	58c8c <GetDataSlab+0x28d0c>
   58d24:	cmp	r7, #1
   58d28:	blt	5f88c <GetDataSlab+0x2f90c>
   58d2c:	ldr	r0, [sp, #56]	; 0x38
   58d30:	mov	r1, #1
   58d34:	mov	ip, #0
   58d38:	mla	r0, r0, r8, r4
   58d3c:	add	lr, r3, r0, lsl #3
   58d40:	sub	r0, r5, #2
   58d44:	add	r1, r1, r0, lsr #1
   58d48:	lsr	r0, r0, #1
   58d4c:	str	r0, [sp, #64]	; 0x40
   58d50:	and	r2, r1, #1
   58d54:	sub	r1, r1, r2
   58d58:	str	r2, [sp, #60]	; 0x3c
   58d5c:	ldr	r2, [sp, #68]	; 0x44
   58d60:	str	r1, [sp, #52]	; 0x34
   58d64:	subs	r1, r5, #1
   58d68:	movwne	r1, #1
   58d6c:	mov	r3, r2
   58d70:	sub	r2, r2, #1
   58d74:	clz	r2, r2
   58d78:	lsl	sl, r3, #5
   58d7c:	lsr	r2, r2, #5
   58d80:	and	r1, r1, r2
   58d84:	lsl	r2, r3, #4
   58d88:	str	r1, [sp, #80]	; 0x50
   58d8c:	ldr	r1, [sp, #72]	; 0x48
   58d90:	mul	r1, r1, r8
   58d94:	lsl	r1, r1, #3
   58d98:	str	r1, [sp, #92]	; 0x5c
   58d9c:	lsl	r1, r3, #3
   58da0:	str	r1, [sp, #56]	; 0x38
   58da4:	and	r1, r5, #1
   58da8:	str	r1, [sp, #76]	; 0x4c
   58dac:	bic	r1, r5, #1
   58db0:	str	r1, [sp, #72]	; 0x48
   58db4:	cmp	r5, #1
   58db8:	bge	58de8 <GetDataSlab+0x28e68>
   58dbc:	ldr	r7, [sp, #88]	; 0x58
   58dc0:	ldr	r0, [sp, #92]	; 0x5c
   58dc4:	ldr	r1, [sp, #84]	; 0x54
   58dc8:	add	ip, ip, #1
   58dcc:	str	r7, [sp, #88]	; 0x58
   58dd0:	add	lr, lr, r0
   58dd4:	mov	r0, #0
   58dd8:	cmp	ip, r1
   58ddc:	beq	56c20 <GetDataSlab+0x26ca0>
   58de0:	cmp	r5, #1
   58de4:	blt	58dbc <GetDataSlab+0x28e3c>
   58de8:	ldr	r1, [sp, #80]	; 0x50
   58dec:	ldr	r7, [sp, #88]	; 0x58
   58df0:	mov	r0, #0
   58df4:	mov	r3, #16
   58df8:	cmp	r1, #0
   58dfc:	beq	58e98 <GetDataSlab+0x28f18>
   58e00:	ldr	r0, [sp, #64]	; 0x40
   58e04:	cmp	r0, #0
   58e08:	beq	58e54 <GetDataSlab+0x28ed4>
   58e0c:	ldr	r8, [sp, #52]	; 0x34
   58e10:	mov	r0, #0
   58e14:	mov	r1, lr
   58e18:	mov	r9, r7
   58e1c:	add	r4, r1, r2
   58e20:	vld1.64	{d16-d17}, [r1], sl
   58e24:	subs	r8, r8, #2
   58e28:	add	r0, r0, #4
   58e2c:	vcvt.f32.f64	s1, d17
   58e30:	vcvt.f32.f64	s0, d16
   58e34:	vst1.32	{d0}, [r9], r3
   58e38:	vld1.64	{d16-d17}, [r4]
   58e3c:	vcvt.f32.f64	s1, d17
   58e40:	vcvt.f32.f64	s0, d16
   58e44:	vstr	d0, [r7, #8]
   58e48:	mov	r7, r9
   58e4c:	bne	58e1c <GetDataSlab+0x28e9c>
   58e50:	b	58e58 <GetDataSlab+0x28ed8>
   58e54:	mov	r0, #0
   58e58:	ldr	r1, [sp, #60]	; 0x3c
   58e5c:	ldr	r7, [sp, #88]	; 0x58
   58e60:	cmp	r1, #0
   58e64:	beq	58e88 <GetDataSlab+0x28f08>
   58e68:	ldr	r1, [sp, #68]	; 0x44
   58e6c:	mul	r1, r0, r1
   58e70:	add	r0, r7, r0, lsl #2
   58e74:	add	r1, lr, r1, lsl #3
   58e78:	vld1.64	{d16-d17}, [r1]
   58e7c:	vcvt.f32.f64	s1, d17
   58e80:	vcvt.f32.f64	s0, d16
   58e84:	vstr	d0, [r0]
   58e88:	ldr	r0, [sp, #72]	; 0x48
   58e8c:	add	r7, r7, r0, lsl #2
   58e90:	cmp	r5, r0
   58e94:	beq	58dc0 <GetDataSlab+0x28e40>
   58e98:	ldr	r1, [sp, #76]	; 0x4c
   58e9c:	cmp	r1, #0
   58ea0:	bne	58eac <GetDataSlab+0x28f2c>
   58ea4:	mov	r4, r0
   58ea8:	b	58ecc <GetDataSlab+0x28f4c>
   58eac:	ldr	r1, [sp, #68]	; 0x44
   58eb0:	orr	r4, r0, #1
   58eb4:	mul	r1, r0, r1
   58eb8:	add	r1, lr, r1, lsl #3
   58ebc:	vldr	d16, [r1]
   58ec0:	vcvt.f32.f64	s0, d16
   58ec4:	vstr	s0, [r7]
   58ec8:	add	r7, r7, #4
   58ecc:	orr	r0, r0, #1
   58ed0:	cmp	r5, r0
   58ed4:	beq	58dc0 <GetDataSlab+0x28e40>
   58ed8:	ldr	r3, [sp, #56]	; 0x38
   58edc:	sub	r1, r5, r4
   58ee0:	mul	r0, r3, r4
   58ee4:	add	r4, r4, #1
   58ee8:	mul	r3, r3, r4
   58eec:	mov	r4, lr
   58ef0:	add	r6, r4, r0
   58ef4:	subs	r1, r1, #2
   58ef8:	vldr	d16, [r6]
   58efc:	add	r6, r4, r3
   58f00:	add	r4, r4, r2
   58f04:	vcvt.f32.f64	s0, d16
   58f08:	vstr	s0, [r7]
   58f0c:	vldr	d16, [r6]
   58f10:	vcvt.f32.f64	s0, d16
   58f14:	vstr	s0, [r7, #4]
   58f18:	add	r7, r7, #8
   58f1c:	bne	58ef0 <GetDataSlab+0x28f70>
   58f20:	b	58dc0 <GetDataSlab+0x28e40>
   58f24:	cmp	r7, #1
   58f28:	blt	5f88c <GetDataSlab+0x2f90c>
   58f2c:	ldr	r0, [sp, #56]	; 0x38
   58f30:	mov	r1, #1
   58f34:	ldr	r9, [sp, #88]	; 0x58
   58f38:	mla	r0, r0, r8, r4
   58f3c:	add	sl, r3, r0, lsl #3
   58f40:	sub	r0, r5, #2
   58f44:	add	r1, r1, r0, lsr #1
   58f48:	lsr	r0, r0, #1
   58f4c:	str	r0, [sp, #20]
   58f50:	and	r2, r1, #1
   58f54:	sub	r1, r1, r2
   58f58:	str	r2, [sp, #28]
   58f5c:	ldr	r2, [sp, #68]	; 0x44
   58f60:	str	r1, [sp, #12]
   58f64:	subs	r1, r5, #1
   58f68:	movwne	r1, #1
   58f6c:	mov	r3, r2
   58f70:	sub	r2, r2, #1
   58f74:	clz	r2, r2
   58f78:	lsr	r2, r2, #5
   58f7c:	and	r1, r1, r2
   58f80:	lsl	r2, r3, #5
   58f84:	str	r1, [sp, #40]	; 0x28
   58f88:	ldr	r1, [sp, #72]	; 0x48
   58f8c:	str	r2, [sp, #52]	; 0x34
   58f90:	mul	r1, r1, r8
   58f94:	lsl	r1, r1, #3
   58f98:	str	r1, [sp, #44]	; 0x2c
   58f9c:	lsl	r1, r3, #3
   58fa0:	str	r1, [sp, #16]
   58fa4:	lsl	r1, r3, #4
   58fa8:	mov	r3, #0
   58fac:	str	r1, [sp, #92]	; 0x5c
   58fb0:	and	r1, r5, #1
   58fb4:	str	r1, [sp, #32]
   58fb8:	bic	r1, r5, #1
   58fbc:	str	r1, [sp, #24]
   58fc0:	cmp	r5, #1
   58fc4:	bge	58fe4 <GetDataSlab+0x29064>
   58fc8:	ldr	r0, [sp, #44]	; 0x2c
   58fcc:	add	r3, r3, #1
   58fd0:	cmp	r3, r7
   58fd4:	add	sl, sl, r0
   58fd8:	beq	5e984 <GetDataSlab+0x2ea04>
   58fdc:	cmp	r5, #1
   58fe0:	blt	58fc8 <GetDataSlab+0x29048>
   58fe4:	ldr	r0, [sp, #40]	; 0x28
   58fe8:	mov	r4, #0
   58fec:	cmp	r0, #0
   58ff0:	beq	5910c <GetDataSlab+0x2918c>
   58ff4:	ldr	r0, [sp, #20]
   58ff8:	mov	r6, #0
   58ffc:	str	r3, [sp, #48]	; 0x30
   59000:	str	r9, [sp, #88]	; 0x58
   59004:	str	sl, [sp, #36]	; 0x24
   59008:	cmp	r0, #0
   5900c:	beq	59098 <GetDataSlab+0x29118>
   59010:	ldr	r4, [sp, #12]
   59014:	mov	r7, sl
   59018:	mov	r8, r9
   5901c:	vld1.64	{d8-d9}, [r7], r2
   59020:	vmov.32	r0, d9[0]
   59024:	vmov.32	r1, d9[1]
   59028:	bl	6b898 <__aeabi_l2f>
   5902c:	vmov.32	r2, d8[0]
   59030:	vmov.32	r1, d8[1]
   59034:	vmov	s17, r0
   59038:	mov	r0, r2
   5903c:	bl	6b898 <__aeabi_l2f>
   59040:	vmov	s16, r0
   59044:	mov	r0, #16
   59048:	vst1.32	{d8}, [r8], r0
   5904c:	ldr	r0, [sp, #92]	; 0x5c
   59050:	add	r0, sl, r0
   59054:	vld1.64	{d8-d9}, [r0]
   59058:	vmov.32	r0, d9[0]
   5905c:	vmov.32	r1, d9[1]
   59060:	bl	6b898 <__aeabi_l2f>
   59064:	vmov.32	r2, d8[0]
   59068:	vmov.32	r1, d8[1]
   5906c:	vmov	s17, r0
   59070:	mov	r0, r2
   59074:	bl	6b898 <__aeabi_l2f>
   59078:	vmov	s16, r0
   5907c:	ldr	r2, [sp, #52]	; 0x34
   59080:	subs	r4, r4, #2
   59084:	add	r6, r6, #4
   59088:	mov	sl, r7
   5908c:	vstr	d8, [r9, #8]
   59090:	mov	r9, r8
   59094:	bne	5901c <GetDataSlab+0x2909c>
   59098:	ldr	r0, [sp, #28]
   5909c:	ldr	r9, [sp, #88]	; 0x58
   590a0:	ldr	sl, [sp, #36]	; 0x24
   590a4:	cmp	r0, #0
   590a8:	beq	590ec <GetDataSlab+0x2916c>
   590ac:	ldr	r0, [sp, #68]	; 0x44
   590b0:	mul	r0, r6, r0
   590b4:	add	r0, sl, r0, lsl #3
   590b8:	vld1.64	{d8-d9}, [r0]
   590bc:	vmov.32	r0, d9[0]
   590c0:	vmov.32	r1, d9[1]
   590c4:	bl	6b898 <__aeabi_l2f>
   590c8:	vmov.32	r2, d8[0]
   590cc:	vmov.32	r1, d8[1]
   590d0:	vmov	s17, r0
   590d4:	mov	r0, r2
   590d8:	bl	6b898 <__aeabi_l2f>
   590dc:	vmov	s16, r0
   590e0:	ldr	r2, [sp, #52]	; 0x34
   590e4:	add	r0, r9, r6, lsl #2
   590e8:	vstr	d8, [r0]
   590ec:	ldr	r4, [sp, #24]
   590f0:	ldr	r7, [sp, #84]	; 0x54
   590f4:	ldr	r6, [sp, #76]	; 0x4c
   590f8:	ldr	r8, [sp, #64]	; 0x40
   590fc:	ldr	r3, [sp, #48]	; 0x30
   59100:	add	r9, r9, r4, lsl #2
   59104:	cmp	r5, r4
   59108:	beq	58fc8 <GetDataSlab+0x29048>
   5910c:	ldr	r0, [sp, #32]
   59110:	cmp	r0, #0
   59114:	bne	59120 <GetDataSlab+0x291a0>
   59118:	mov	r0, r4
   5911c:	b	59154 <GetDataSlab+0x291d4>
   59120:	ldr	r0, [sp, #68]	; 0x44
   59124:	mov	r1, sl
   59128:	mov	r6, r3
   5912c:	mul	r0, r4, r0
   59130:	ldr	r0, [r1, r0, lsl #3]!
   59134:	ldr	r1, [r1, #4]
   59138:	bl	6b898 <__aeabi_l2f>
   5913c:	mov	r3, r6
   59140:	ldr	r2, [sp, #52]	; 0x34
   59144:	ldr	r6, [sp, #76]	; 0x4c
   59148:	ldr	r7, [sp, #84]	; 0x54
   5914c:	str	r0, [r9], #4
   59150:	orr	r0, r4, #1
   59154:	orr	r1, r4, #1
   59158:	cmp	r5, r1
   5915c:	beq	58fc8 <GetDataSlab+0x29048>
   59160:	ldr	r1, [sp, #16]
   59164:	sub	r6, r5, r0
   59168:	mov	r4, sl
   5916c:	str	r3, [sp, #48]	; 0x30
   59170:	mul	r8, r1, r0
   59174:	add	r0, r0, #1
   59178:	mul	r7, r1, r0
   5917c:	mov	r1, r4
   59180:	ldr	r0, [r1, r8]!
   59184:	ldr	r1, [r1, #4]
   59188:	bl	6b898 <__aeabi_l2f>
   5918c:	str	r0, [r9]
   59190:	mov	r1, r4
   59194:	ldr	r0, [r1, r7]!
   59198:	ldr	r1, [r1, #4]
   5919c:	bl	6b898 <__aeabi_l2f>
   591a0:	str	r0, [r9, #4]
   591a4:	ldr	r0, [sp, #92]	; 0x5c
   591a8:	add	r9, r9, #8
   591ac:	subs	r6, r6, #2
   591b0:	add	r4, r4, r0
   591b4:	bne	5917c <GetDataSlab+0x291fc>
   591b8:	ldr	r7, [sp, #84]	; 0x54
   591bc:	ldr	r6, [sp, #76]	; 0x4c
   591c0:	ldr	r8, [sp, #64]	; 0x40
   591c4:	ldr	r2, [sp, #52]	; 0x34
   591c8:	ldr	r3, [sp, #48]	; 0x30
   591cc:	b	58fc8 <GetDataSlab+0x29048>
   591d0:	cmp	r4, #1
   591d4:	blt	5f88c <GetDataSlab+0x2f90c>
   591d8:	ldr	r0, [sp, #60]	; 0x3c
   591dc:	ldr	r2, [sp, #56]	; 0x38
   591e0:	mov	r7, #0
   591e4:	mla	r0, r2, r8, r0
   591e8:	add	r2, r6, r0
   591ec:	mov	r6, r1
   591f0:	cmp	r5, #1
   591f4:	bge	59224 <GetDataSlab+0x292a4>
   591f8:	ldr	r1, [sp, #84]	; 0x54
   591fc:	ldr	r0, [sp, #72]	; 0x48
   59200:	mla	r2, r8, r0, r2
   59204:	add	r7, r7, #1
   59208:	str	r0, [sp, #72]	; 0x48
   5920c:	mov	r0, #0
   59210:	str	r1, [sp, #84]	; 0x54
   59214:	cmp	r7, r1
   59218:	bge	56c20 <GetDataSlab+0x26ca0>
   5921c:	cmp	r5, #1
   59220:	blt	591f8 <GetDataSlab+0x29278>
   59224:	mov	r0, #0
   59228:	ldr	r5, [sl]
   5922c:	mul	r5, r5, r0
   59230:	ldrb	r5, [r2, r5]
   59234:	strb	r5, [r6, r0]
   59238:	add	r0, r0, #1
   5923c:	ldr	r5, [r9]
   59240:	cmp	r0, r5
   59244:	blt	59228 <GetDataSlab+0x292a8>
   59248:	add	r6, r6, r0
   5924c:	ldr	r1, [r3]
   59250:	ldr	r8, [lr]
   59254:	ldr	r0, [ip]
   59258:	b	59200 <GetDataSlab+0x29280>
   5925c:	cmp	r4, #1
   59260:	blt	5f88c <GetDataSlab+0x2f90c>
   59264:	ldr	r0, [sp, #60]	; 0x3c
   59268:	ldr	r2, [sp, #56]	; 0x38
   5926c:	mov	r7, #0
   59270:	mla	r0, r2, r8, r0
   59274:	add	r2, r6, r0, lsl #1
   59278:	mov	r6, r1
   5927c:	cmp	r5, #1
   59280:	bge	592b8 <GetDataSlab+0x29338>
   59284:	ldr	r1, [sp, #84]	; 0x54
   59288:	ldr	r0, [sp, #72]	; 0x48
   5928c:	mov	r4, r0
   59290:	str	r0, [sp, #72]	; 0x48
   59294:	mul	r0, r8, r0
   59298:	add	r7, r7, #1
   5929c:	str	r1, [sp, #84]	; 0x54
   592a0:	cmp	r7, r1
   592a4:	add	r2, r2, r0, lsl #1
   592a8:	mov	r0, #0
   592ac:	bge	56c20 <GetDataSlab+0x26ca0>
   592b0:	cmp	r5, #1
   592b4:	blt	59284 <GetDataSlab+0x29304>
   592b8:	mov	r0, #0
   592bc:	ldr	r5, [sl]
   592c0:	mul	r5, r5, r0
   592c4:	ldrb	r5, [r2, r5, lsl #1]
   592c8:	strb	r5, [r6, r0]
   592cc:	add	r0, r0, #1
   592d0:	ldr	r5, [r9]
   592d4:	cmp	r0, r5
   592d8:	blt	592bc <GetDataSlab+0x2933c>
   592dc:	add	r6, r6, r0
   592e0:	ldr	r1, [r3]
   592e4:	ldr	r8, [lr]
   592e8:	ldr	r0, [ip]
   592ec:	b	5928c <GetDataSlab+0x2930c>
   592f0:	cmp	r4, #1
   592f4:	blt	5f88c <GetDataSlab+0x2f90c>
   592f8:	ldr	r0, [sp, #60]	; 0x3c
   592fc:	ldr	r2, [sp, #56]	; 0x38
   59300:	mov	r7, #0
   59304:	mla	r0, r2, r8, r0
   59308:	add	r2, r6, r0, lsl #1
   5930c:	mov	r6, r1
   59310:	cmp	r5, #1
   59314:	bge	5934c <GetDataSlab+0x293cc>
   59318:	ldr	r1, [sp, #84]	; 0x54
   5931c:	ldr	r0, [sp, #72]	; 0x48
   59320:	mov	r4, r0
   59324:	str	r0, [sp, #72]	; 0x48
   59328:	mul	r0, r8, r0
   5932c:	add	r7, r7, #1
   59330:	str	r1, [sp, #84]	; 0x54
   59334:	cmp	r7, r1
   59338:	add	r2, r2, r0, lsl #1
   5933c:	mov	r0, #0
   59340:	bge	56c20 <GetDataSlab+0x26ca0>
   59344:	cmp	r5, #1
   59348:	blt	59318 <GetDataSlab+0x29398>
   5934c:	mov	r0, #0
   59350:	ldr	r5, [sl]
   59354:	mul	r5, r5, r0
   59358:	ldrb	r5, [r2, r5, lsl #1]
   5935c:	strb	r5, [r6, r0]
   59360:	add	r0, r0, #1
   59364:	ldr	r5, [r9]
   59368:	cmp	r0, r5
   5936c:	blt	59350 <GetDataSlab+0x293d0>
   59370:	add	r6, r6, r0
   59374:	ldr	r1, [r3]
   59378:	ldr	r8, [lr]
   5937c:	ldr	r0, [ip]
   59380:	b	59320 <GetDataSlab+0x293a0>
   59384:	cmp	r4, #1
   59388:	blt	5f88c <GetDataSlab+0x2f90c>
   5938c:	ldr	r0, [sp, #60]	; 0x3c
   59390:	ldr	r2, [sp, #56]	; 0x38
   59394:	mov	r7, #0
   59398:	mla	r0, r2, r8, r0
   5939c:	add	r2, r6, r0, lsl #2
   593a0:	mov	r6, r1
   593a4:	cmp	r5, #1
   593a8:	bge	593e0 <GetDataSlab+0x29460>
   593ac:	ldr	r1, [sp, #84]	; 0x54
   593b0:	ldr	r0, [sp, #72]	; 0x48
   593b4:	mov	r4, r0
   593b8:	str	r0, [sp, #72]	; 0x48
   593bc:	mul	r0, r8, r0
   593c0:	add	r7, r7, #1
   593c4:	str	r1, [sp, #84]	; 0x54
   593c8:	cmp	r7, r1
   593cc:	add	r2, r2, r0, lsl #2
   593d0:	mov	r0, #0
   593d4:	bge	56c20 <GetDataSlab+0x26ca0>
   593d8:	cmp	r5, #1
   593dc:	blt	593ac <GetDataSlab+0x2942c>
   593e0:	mov	r0, #0
   593e4:	ldr	r5, [sl]
   593e8:	mul	r5, r5, r0
   593ec:	ldr	r5, [r2, r5, lsl #2]
   593f0:	strb	r5, [r6, r0]
   593f4:	add	r0, r0, #1
   593f8:	ldr	r5, [r9]
   593fc:	cmp	r0, r5
   59400:	blt	593e4 <GetDataSlab+0x29464>
   59404:	add	r6, r6, r0
   59408:	ldr	r1, [r3]
   5940c:	ldr	r8, [lr]
   59410:	ldr	r0, [ip]
   59414:	b	593b4 <GetDataSlab+0x29434>
   59418:	cmp	r4, #1
   5941c:	blt	5f88c <GetDataSlab+0x2f90c>
   59420:	ldr	r0, [sp, #60]	; 0x3c
   59424:	ldr	r2, [sp, #56]	; 0x38
   59428:	mov	r7, #0
   5942c:	mla	r0, r2, r8, r0
   59430:	add	r2, r6, r0, lsl #2
   59434:	mov	r6, r1
   59438:	cmp	r5, #1
   5943c:	bge	59474 <GetDataSlab+0x294f4>
   59440:	ldr	r1, [sp, #84]	; 0x54
   59444:	ldr	r0, [sp, #72]	; 0x48
   59448:	mov	r4, r0
   5944c:	str	r0, [sp, #72]	; 0x48
   59450:	mul	r0, r8, r0
   59454:	add	r7, r7, #1
   59458:	str	r1, [sp, #84]	; 0x54
   5945c:	cmp	r7, r1
   59460:	add	r2, r2, r0, lsl #2
   59464:	mov	r0, #0
   59468:	bge	56c20 <GetDataSlab+0x26ca0>
   5946c:	cmp	r5, #1
   59470:	blt	59440 <GetDataSlab+0x294c0>
   59474:	mov	r0, #0
   59478:	ldr	r5, [sl]
   5947c:	mul	r5, r5, r0
   59480:	ldr	r5, [r2, r5, lsl #2]
   59484:	strb	r5, [r6, r0]
   59488:	add	r0, r0, #1
   5948c:	ldr	r5, [r9]
   59490:	cmp	r0, r5
   59494:	blt	59478 <GetDataSlab+0x294f8>
   59498:	add	r6, r6, r0
   5949c:	ldr	r1, [r3]
   594a0:	ldr	r8, [lr]
   594a4:	ldr	r0, [ip]
   594a8:	b	59448 <GetDataSlab+0x294c8>
   594ac:	cmp	r4, #1
   594b0:	blt	5f88c <GetDataSlab+0x2f90c>
   594b4:	ldr	r0, [sp, #60]	; 0x3c
   594b8:	ldr	r2, [sp, #56]	; 0x38
   594bc:	mov	r7, #0
   594c0:	mla	r0, r2, r8, r0
   594c4:	add	r2, r6, r0, lsl #2
   594c8:	mov	r6, r1
   594cc:	cmp	r5, #1
   594d0:	bge	59508 <GetDataSlab+0x29588>
   594d4:	ldr	r1, [sp, #84]	; 0x54
   594d8:	ldr	r0, [sp, #72]	; 0x48
   594dc:	mov	r4, r0
   594e0:	str	r0, [sp, #72]	; 0x48
   594e4:	mul	r0, r8, r0
   594e8:	add	r7, r7, #1
   594ec:	str	r1, [sp, #84]	; 0x54
   594f0:	cmp	r7, r1
   594f4:	add	r2, r2, r0, lsl #2
   594f8:	mov	r0, #0
   594fc:	bge	56c20 <GetDataSlab+0x26ca0>
   59500:	cmp	r5, #1
   59504:	blt	594d4 <GetDataSlab+0x29554>
   59508:	mov	r0, #0
   5950c:	ldr	r5, [sl]
   59510:	mul	r5, r5, r0
   59514:	add	r5, r2, r5, lsl #2
   59518:	vldr	s0, [r5]
   5951c:	vcvt.s32.f32	s0, s0
   59520:	vmov	r5, s0
   59524:	strb	r5, [r6, r0]
   59528:	add	r0, r0, #1
   5952c:	ldr	r5, [r9]
   59530:	cmp	r0, r5
   59534:	blt	5950c <GetDataSlab+0x2958c>
   59538:	add	r6, r6, r0
   5953c:	ldr	r1, [r3]
   59540:	ldr	r8, [lr]
   59544:	ldr	r0, [ip]
   59548:	b	594dc <GetDataSlab+0x2955c>
   5954c:	cmp	r4, #1
   59550:	blt	5f88c <GetDataSlab+0x2f90c>
   59554:	ldr	r0, [sp, #60]	; 0x3c
   59558:	ldr	r2, [sp, #56]	; 0x38
   5955c:	mov	r7, #0
   59560:	mla	r0, r2, r8, r0
   59564:	add	r2, r6, r0, lsl #3
   59568:	mov	r6, r1
   5956c:	cmp	r5, #1
   59570:	bge	595a8 <GetDataSlab+0x29628>
   59574:	ldr	r1, [sp, #84]	; 0x54
   59578:	ldr	r0, [sp, #72]	; 0x48
   5957c:	mov	r4, r0
   59580:	str	r0, [sp, #72]	; 0x48
   59584:	mul	r0, r8, r0
   59588:	add	r7, r7, #1
   5958c:	str	r1, [sp, #84]	; 0x54
   59590:	cmp	r7, r1
   59594:	add	r2, r2, r0, lsl #3
   59598:	mov	r0, #0
   5959c:	bge	56c20 <GetDataSlab+0x26ca0>
   595a0:	cmp	r5, #1
   595a4:	blt	59574 <GetDataSlab+0x295f4>
   595a8:	mov	r0, #0
   595ac:	ldr	r5, [sl]
   595b0:	mul	r5, r5, r0
   595b4:	add	r5, r2, r5, lsl #3
   595b8:	vldr	d16, [r5]
   595bc:	vcvt.s32.f64	s0, d16
   595c0:	vmov	r5, s0
   595c4:	strb	r5, [r6, r0]
   595c8:	add	r0, r0, #1
   595cc:	ldr	r5, [r9]
   595d0:	cmp	r0, r5
   595d4:	blt	595ac <GetDataSlab+0x2962c>
   595d8:	add	r6, r6, r0
   595dc:	ldr	r1, [r3]
   595e0:	ldr	r8, [lr]
   595e4:	ldr	r0, [ip]
   595e8:	b	5957c <GetDataSlab+0x295fc>
   595ec:	cmp	r4, #1
   595f0:	blt	5f88c <GetDataSlab+0x2f90c>
   595f4:	ldr	r0, [sp, #60]	; 0x3c
   595f8:	ldr	r2, [sp, #56]	; 0x38
   595fc:	mov	r7, r1
   59600:	mla	r0, r2, r8, r0
   59604:	mov	r2, #0
   59608:	add	r0, r6, r0, lsl #3
   5960c:	cmp	r5, #1
   59610:	bge	59638 <GetDataSlab+0x296b8>
   59614:	ldr	r1, [sp, #72]	; 0x48
   59618:	mul	r6, r8, r1
   5961c:	add	r2, r2, #1
   59620:	str	r1, [sp, #72]	; 0x48
   59624:	cmp	r2, r4
   59628:	add	r0, r0, r6, lsl #3
   5962c:	bge	5ec3c <GetDataSlab+0x2ecbc>
   59630:	cmp	r5, #1
   59634:	blt	59614 <GetDataSlab+0x29694>
   59638:	mov	r6, #0
   5963c:	ldr	r5, [sl]
   59640:	mul	r5, r5, r6
   59644:	ldrb	r5, [r0, r5, lsl #3]
   59648:	strb	r5, [r7, r6]
   5964c:	add	r6, r6, #1
   59650:	ldr	r5, [r9]
   59654:	cmp	r6, r5
   59658:	blt	5963c <GetDataSlab+0x296bc>
   5965c:	ldr	r4, [r3]
   59660:	ldr	r8, [lr]
   59664:	ldr	r1, [ip]
   59668:	add	r7, r7, r6
   5966c:	b	59618 <GetDataSlab+0x29698>
   59670:	cmp	r4, #1
   59674:	blt	5f88c <GetDataSlab+0x2f90c>
   59678:	ldr	r0, [sp, #60]	; 0x3c
   5967c:	ldr	r2, [sp, #56]	; 0x38
   59680:	mov	r7, #0
   59684:	mla	r0, r2, r8, r0
   59688:	add	r2, r6, r0
   5968c:	mov	r6, r1
   59690:	cmp	r5, #1
   59694:	bge	596c4 <GetDataSlab+0x29744>
   59698:	ldr	r1, [sp, #84]	; 0x54
   5969c:	ldr	r0, [sp, #72]	; 0x48
   596a0:	mla	r2, r8, r0, r2
   596a4:	add	r7, r7, #1
   596a8:	str	r0, [sp, #72]	; 0x48
   596ac:	mov	r0, #0
   596b0:	str	r1, [sp, #84]	; 0x54
   596b4:	cmp	r7, r1
   596b8:	bge	56c20 <GetDataSlab+0x26ca0>
   596bc:	cmp	r5, #1
   596c0:	blt	59698 <GetDataSlab+0x29718>
   596c4:	mov	r0, #0
   596c8:	ldr	r5, [sl]
   596cc:	mul	r5, r5, r0
   596d0:	ldrb	r5, [r2, r5]
   596d4:	strb	r5, [r6, r0]
   596d8:	add	r0, r0, #1
   596dc:	ldr	r5, [r9]
   596e0:	cmp	r0, r5
   596e4:	blt	596c8 <GetDataSlab+0x29748>
   596e8:	add	r6, r6, r0
   596ec:	ldr	r1, [r3]
   596f0:	ldr	r8, [lr]
   596f4:	ldr	r0, [ip]
   596f8:	b	596a0 <GetDataSlab+0x29720>
   596fc:	cmp	r4, #1
   59700:	blt	5f88c <GetDataSlab+0x2f90c>
   59704:	ldr	r0, [sp, #60]	; 0x3c
   59708:	ldr	r2, [sp, #56]	; 0x38
   5970c:	mov	r7, #0
   59710:	mla	r0, r2, r8, r0
   59714:	add	r2, r6, r0, lsl #1
   59718:	mov	r6, r1
   5971c:	cmp	r5, #1
   59720:	bge	59758 <GetDataSlab+0x297d8>
   59724:	ldr	r1, [sp, #84]	; 0x54
   59728:	ldr	r0, [sp, #72]	; 0x48
   5972c:	mov	r4, r0
   59730:	str	r0, [sp, #72]	; 0x48
   59734:	mul	r0, r8, r0
   59738:	add	r7, r7, #1
   5973c:	str	r1, [sp, #84]	; 0x54
   59740:	cmp	r7, r1
   59744:	add	r2, r2, r0, lsl #1
   59748:	mov	r0, #0
   5974c:	bge	56c20 <GetDataSlab+0x26ca0>
   59750:	cmp	r5, #1
   59754:	blt	59724 <GetDataSlab+0x297a4>
   59758:	mov	r0, #0
   5975c:	ldr	r5, [sl]
   59760:	mul	r5, r5, r0
   59764:	ldrb	r5, [r2, r5, lsl #1]
   59768:	strb	r5, [r6, r0]
   5976c:	add	r0, r0, #1
   59770:	ldr	r5, [r9]
   59774:	cmp	r0, r5
   59778:	blt	5975c <GetDataSlab+0x297dc>
   5977c:	add	r6, r6, r0
   59780:	ldr	r1, [r3]
   59784:	ldr	r8, [lr]
   59788:	ldr	r0, [ip]
   5978c:	b	5972c <GetDataSlab+0x297ac>
   59790:	cmp	r4, #1
   59794:	blt	5f88c <GetDataSlab+0x2f90c>
   59798:	ldr	r0, [sp, #60]	; 0x3c
   5979c:	ldr	r2, [sp, #56]	; 0x38
   597a0:	mov	r7, #0
   597a4:	mla	r0, r2, r8, r0
   597a8:	add	r2, r6, r0, lsl #1
   597ac:	mov	r6, r1
   597b0:	cmp	r5, #1
   597b4:	bge	597ec <GetDataSlab+0x2986c>
   597b8:	ldr	r1, [sp, #84]	; 0x54
   597bc:	ldr	r0, [sp, #72]	; 0x48
   597c0:	mov	r4, r0
   597c4:	str	r0, [sp, #72]	; 0x48
   597c8:	mul	r0, r8, r0
   597cc:	add	r7, r7, #1
   597d0:	str	r1, [sp, #84]	; 0x54
   597d4:	cmp	r7, r1
   597d8:	add	r2, r2, r0, lsl #1
   597dc:	mov	r0, #0
   597e0:	bge	56c20 <GetDataSlab+0x26ca0>
   597e4:	cmp	r5, #1
   597e8:	blt	597b8 <GetDataSlab+0x29838>
   597ec:	mov	r0, #0
   597f0:	ldr	r5, [sl]
   597f4:	mul	r5, r5, r0
   597f8:	ldrb	r5, [r2, r5, lsl #1]
   597fc:	strb	r5, [r6, r0]
   59800:	add	r0, r0, #1
   59804:	ldr	r5, [r9]
   59808:	cmp	r0, r5
   5980c:	blt	597f0 <GetDataSlab+0x29870>
   59810:	add	r6, r6, r0
   59814:	ldr	r1, [r3]
   59818:	ldr	r8, [lr]
   5981c:	ldr	r0, [ip]
   59820:	b	597c0 <GetDataSlab+0x29840>
   59824:	cmp	r4, #1
   59828:	blt	5f88c <GetDataSlab+0x2f90c>
   5982c:	ldr	r0, [sp, #60]	; 0x3c
   59830:	ldr	r2, [sp, #56]	; 0x38
   59834:	mov	r7, #0
   59838:	mla	r0, r2, r8, r0
   5983c:	add	r2, r6, r0, lsl #2
   59840:	mov	r6, r1
   59844:	cmp	r5, #1
   59848:	bge	59880 <GetDataSlab+0x29900>
   5984c:	ldr	r1, [sp, #84]	; 0x54
   59850:	ldr	r0, [sp, #72]	; 0x48
   59854:	mov	r4, r0
   59858:	str	r0, [sp, #72]	; 0x48
   5985c:	mul	r0, r8, r0
   59860:	add	r7, r7, #1
   59864:	str	r1, [sp, #84]	; 0x54
   59868:	cmp	r7, r1
   5986c:	add	r2, r2, r0, lsl #2
   59870:	mov	r0, #0
   59874:	bge	56c20 <GetDataSlab+0x26ca0>
   59878:	cmp	r5, #1
   5987c:	blt	5984c <GetDataSlab+0x298cc>
   59880:	mov	r0, #0
   59884:	ldr	r5, [sl]
   59888:	mul	r5, r5, r0
   5988c:	ldr	r5, [r2, r5, lsl #2]
   59890:	strb	r5, [r6, r0]
   59894:	add	r0, r0, #1
   59898:	ldr	r5, [r9]
   5989c:	cmp	r0, r5
   598a0:	blt	59884 <GetDataSlab+0x29904>
   598a4:	add	r6, r6, r0
   598a8:	ldr	r1, [r3]
   598ac:	ldr	r8, [lr]
   598b0:	ldr	r0, [ip]
   598b4:	b	59854 <GetDataSlab+0x298d4>
   598b8:	cmp	r4, #1
   598bc:	blt	5f88c <GetDataSlab+0x2f90c>
   598c0:	ldr	r0, [sp, #60]	; 0x3c
   598c4:	ldr	r2, [sp, #56]	; 0x38
   598c8:	mov	r7, #0
   598cc:	mla	r0, r2, r8, r0
   598d0:	add	r2, r6, r0, lsl #2
   598d4:	mov	r6, r1
   598d8:	cmp	r5, #1
   598dc:	bge	59914 <GetDataSlab+0x29994>
   598e0:	ldr	r1, [sp, #84]	; 0x54
   598e4:	ldr	r0, [sp, #72]	; 0x48
   598e8:	mov	r4, r0
   598ec:	str	r0, [sp, #72]	; 0x48
   598f0:	mul	r0, r8, r0
   598f4:	add	r7, r7, #1
   598f8:	str	r1, [sp, #84]	; 0x54
   598fc:	cmp	r7, r1
   59900:	add	r2, r2, r0, lsl #2
   59904:	mov	r0, #0
   59908:	bge	56c20 <GetDataSlab+0x26ca0>
   5990c:	cmp	r5, #1
   59910:	blt	598e0 <GetDataSlab+0x29960>
   59914:	mov	r0, #0
   59918:	ldr	r5, [sl]
   5991c:	mul	r5, r5, r0
   59920:	ldr	r5, [r2, r5, lsl #2]
   59924:	strb	r5, [r6, r0]
   59928:	add	r0, r0, #1
   5992c:	ldr	r5, [r9]
   59930:	cmp	r0, r5
   59934:	blt	59918 <GetDataSlab+0x29998>
   59938:	add	r6, r6, r0
   5993c:	ldr	r1, [r3]
   59940:	ldr	r8, [lr]
   59944:	ldr	r0, [ip]
   59948:	b	598e8 <GetDataSlab+0x29968>
   5994c:	cmp	r4, #1
   59950:	blt	5f88c <GetDataSlab+0x2f90c>
   59954:	ldr	r0, [sp, #60]	; 0x3c
   59958:	ldr	r2, [sp, #56]	; 0x38
   5995c:	mov	r7, #0
   59960:	mla	r0, r2, r8, r0
   59964:	add	r2, r6, r0, lsl #2
   59968:	mov	r6, r1
   5996c:	cmp	r5, #1
   59970:	bge	599a8 <GetDataSlab+0x29a28>
   59974:	ldr	r1, [sp, #84]	; 0x54
   59978:	ldr	r0, [sp, #72]	; 0x48
   5997c:	mov	r4, r0
   59980:	str	r0, [sp, #72]	; 0x48
   59984:	mul	r0, r8, r0
   59988:	add	r7, r7, #1
   5998c:	str	r1, [sp, #84]	; 0x54
   59990:	cmp	r7, r1
   59994:	add	r2, r2, r0, lsl #2
   59998:	mov	r0, #0
   5999c:	bge	56c20 <GetDataSlab+0x26ca0>
   599a0:	cmp	r5, #1
   599a4:	blt	59974 <GetDataSlab+0x299f4>
   599a8:	mov	r0, #0
   599ac:	ldr	r5, [sl]
   599b0:	mul	r5, r5, r0
   599b4:	add	r5, r2, r5, lsl #2
   599b8:	vldr	s0, [r5]
   599bc:	vcvt.u32.f32	s0, s0
   599c0:	vmov	r5, s0
   599c4:	strb	r5, [r6, r0]
   599c8:	add	r0, r0, #1
   599cc:	ldr	r5, [r9]
   599d0:	cmp	r0, r5
   599d4:	blt	599ac <GetDataSlab+0x29a2c>
   599d8:	add	r6, r6, r0
   599dc:	ldr	r1, [r3]
   599e0:	ldr	r8, [lr]
   599e4:	ldr	r0, [ip]
   599e8:	b	5997c <GetDataSlab+0x299fc>
   599ec:	cmp	r4, #1
   599f0:	blt	5f88c <GetDataSlab+0x2f90c>
   599f4:	ldr	r0, [sp, #60]	; 0x3c
   599f8:	ldr	r2, [sp, #56]	; 0x38
   599fc:	mov	r7, #0
   59a00:	mla	r0, r2, r8, r0
   59a04:	add	r2, r6, r0, lsl #3
   59a08:	mov	r6, r1
   59a0c:	cmp	r5, #1
   59a10:	bge	59a48 <GetDataSlab+0x29ac8>
   59a14:	ldr	r1, [sp, #84]	; 0x54
   59a18:	ldr	r0, [sp, #72]	; 0x48
   59a1c:	mov	r4, r0
   59a20:	str	r0, [sp, #72]	; 0x48
   59a24:	mul	r0, r8, r0
   59a28:	add	r7, r7, #1
   59a2c:	str	r1, [sp, #84]	; 0x54
   59a30:	cmp	r7, r1
   59a34:	add	r2, r2, r0, lsl #3
   59a38:	mov	r0, #0
   59a3c:	bge	56c20 <GetDataSlab+0x26ca0>
   59a40:	cmp	r5, #1
   59a44:	blt	59a14 <GetDataSlab+0x29a94>
   59a48:	mov	r0, #0
   59a4c:	ldr	r5, [sl]
   59a50:	mul	r5, r5, r0
   59a54:	add	r5, r2, r5, lsl #3
   59a58:	vldr	d16, [r5]
   59a5c:	vcvt.u32.f64	s0, d16
   59a60:	vmov	r5, s0
   59a64:	strb	r5, [r6, r0]
   59a68:	add	r0, r0, #1
   59a6c:	ldr	r5, [r9]
   59a70:	cmp	r0, r5
   59a74:	blt	59a4c <GetDataSlab+0x29acc>
   59a78:	add	r6, r6, r0
   59a7c:	ldr	r1, [r3]
   59a80:	ldr	r8, [lr]
   59a84:	ldr	r0, [ip]
   59a88:	b	59a1c <GetDataSlab+0x29a9c>
   59a8c:	cmp	r4, #1
   59a90:	blt	5f88c <GetDataSlab+0x2f90c>
   59a94:	ldr	r0, [sp, #60]	; 0x3c
   59a98:	ldr	r2, [sp, #56]	; 0x38
   59a9c:	mov	r7, r1
   59aa0:	mla	r0, r2, r8, r0
   59aa4:	mov	r2, #0
   59aa8:	add	r0, r6, r0, lsl #3
   59aac:	cmp	r5, #1
   59ab0:	bge	59ad8 <GetDataSlab+0x29b58>
   59ab4:	ldr	r1, [sp, #72]	; 0x48
   59ab8:	mul	r6, r8, r1
   59abc:	add	r2, r2, #1
   59ac0:	str	r1, [sp, #72]	; 0x48
   59ac4:	cmp	r2, r4
   59ac8:	add	r0, r0, r6, lsl #3
   59acc:	bge	5ec48 <GetDataSlab+0x2ecc8>
   59ad0:	cmp	r5, #1
   59ad4:	blt	59ab4 <GetDataSlab+0x29b34>
   59ad8:	mov	r6, #0
   59adc:	ldr	r5, [sl]
   59ae0:	mul	r5, r5, r6
   59ae4:	ldrb	r5, [r0, r5, lsl #3]
   59ae8:	strb	r5, [r7, r6]
   59aec:	add	r6, r6, #1
   59af0:	ldr	r5, [r9]
   59af4:	cmp	r6, r5
   59af8:	blt	59adc <GetDataSlab+0x29b5c>
   59afc:	ldr	r4, [r3]
   59b00:	ldr	r8, [lr]
   59b04:	ldr	r1, [ip]
   59b08:	add	r7, r7, r6
   59b0c:	b	59ab8 <GetDataSlab+0x29b38>
   59b10:	cmp	r7, #1
   59b14:	blt	5f88c <GetDataSlab+0x2f90c>
   59b18:	ldr	r2, [sp, #56]	; 0x38
   59b1c:	mov	r1, #1
   59b20:	cmp	r5, #7
   59b24:	mla	r0, r2, r8, r6
   59b28:	str	r0, [sp, #52]	; 0x34
   59b2c:	add	r0, r3, r0
   59b30:	str	r0, [sp, #92]	; 0x5c
   59b34:	sub	r0, r5, #8
   59b38:	add	r1, r1, r0, lsr #3
   59b3c:	lsr	r0, r0, #3
   59b40:	str	r0, [sp, #40]	; 0x28
   59b44:	and	r3, r1, #1
   59b48:	sub	r1, r1, r3
   59b4c:	str	r3, [sp, #48]	; 0x30
   59b50:	str	r1, [sp, #36]	; 0x24
   59b54:	add	r1, r5, r6
   59b58:	mla	r1, r2, r8, r1
   59b5c:	mov	r2, #0
   59b60:	str	r2, [sp, #76]	; 0x4c
   59b64:	mov	r2, #0
   59b68:	movwhi	r2, #1
   59b6c:	str	r1, [sp, #56]	; 0x38
   59b70:	ldr	r1, [sp, #72]	; 0x48
   59b74:	mul	r1, r1, r8
   59b78:	mov	r8, r9
   59b7c:	str	r1, [sp, #72]	; 0x48
   59b80:	ldr	r1, [sp, #68]	; 0x44
   59b84:	mov	r3, r1
   59b88:	sub	r1, r1, #1
   59b8c:	clz	r1, r1
   59b90:	lsr	r1, r1, #5
   59b94:	and	r1, r2, r1
   59b98:	lsl	r2, r3, #4
   59b9c:	str	r2, [sp, #32]
   59ba0:	lsl	r2, r3, #3
   59ba4:	str	r1, [sp, #64]	; 0x40
   59ba8:	lsl	r1, r3, #1
   59bac:	ldr	sl, [sp, #32]
   59bb0:	str	r2, [sp, #28]
   59bb4:	and	r2, r5, #1
   59bb8:	str	r2, [sp, #60]	; 0x3c
   59bbc:	bic	r2, r5, #7
   59bc0:	str	r2, [sp, #44]	; 0x2c
   59bc4:	cmp	r5, #1
   59bc8:	bge	59c00 <GetDataSlab+0x29c80>
   59bcc:	ldr	ip, [sp, #72]	; 0x48
   59bd0:	ldr	lr, [sp, #92]	; 0x5c
   59bd4:	ldr	r7, [sp, #76]	; 0x4c
   59bd8:	ldr	r2, [sp, #84]	; 0x54
   59bdc:	add	r7, r7, #1
   59be0:	add	lr, lr, ip
   59be4:	mov	r0, #0
   59be8:	str	lr, [sp, #92]	; 0x5c
   59bec:	str	r7, [sp, #76]	; 0x4c
   59bf0:	cmp	r7, r2
   59bf4:	beq	56c20 <GetDataSlab+0x26ca0>
   59bf8:	cmp	r5, #1
   59bfc:	blt	59bcc <GetDataSlab+0x29c4c>
   59c00:	ldr	r2, [sp, #64]	; 0x40
   59c04:	ldr	ip, [sp, #72]	; 0x48
   59c08:	ldr	lr, [sp, #92]	; 0x5c
   59c0c:	ldr	r7, [sp, #76]	; 0x4c
   59c10:	mov	r0, #0
   59c14:	cmp	r2, #0
   59c18:	beq	59d28 <GetDataSlab+0x29da8>
   59c1c:	ldr	r2, [sp, #56]	; 0x38
   59c20:	ldr	r3, [sp, #80]	; 0x50
   59c24:	mla	r2, ip, r7, r2
   59c28:	add	r2, r3, r2
   59c2c:	cmp	r2, r8
   59c30:	bls	59c4c <GetDataSlab+0x29ccc>
   59c34:	ldr	r2, [sp, #52]	; 0x34
   59c38:	add	r4, r8, r5, lsl #1
   59c3c:	mla	r2, ip, r7, r2
   59c40:	add	r2, r3, r2
   59c44:	cmp	r2, r4
   59c48:	bcc	59d28 <GetDataSlab+0x29da8>
   59c4c:	ldr	r0, [sp, #40]	; 0x28
   59c50:	cmp	r0, #0
   59c54:	beq	59ccc <GetDataSlab+0x29d4c>
   59c58:	mov	r2, lr
   59c5c:	ldr	r4, [sp, #36]	; 0x24
   59c60:	ldr	lr, [sp, #28]
   59c64:	mov	r0, #0
   59c68:	mov	r9, r8
   59c6c:	ldr	r6, [r2]
   59c70:	ldr	ip, [r2, #4]
   59c74:	add	r3, sp, #424	; 0x1a8
   59c78:	subs	r4, r4, #2
   59c7c:	add	r0, r0, #16
   59c80:	str	r6, [sp, #424]	; 0x1a8
   59c84:	str	ip, [sp, #428]	; 0x1ac
   59c88:	add	r6, r9, #16
   59c8c:	vld1.8	{d16}, [r3 :64]
   59c90:	mov	r3, #32
   59c94:	vmovl.u8	q8, d16
   59c98:	vst1.16	{d16-d17}, [r9], r3
   59c9c:	add	r3, r2, sl
   59ca0:	ldr	r7, [r2, lr]!
   59ca4:	str	r7, [sp, #432]	; 0x1b0
   59ca8:	ldr	r2, [r2, #4]
   59cac:	str	r2, [sp, #436]	; 0x1b4
   59cb0:	add	r2, sp, #432	; 0x1b0
   59cb4:	vld1.8	{d16}, [r2 :64]
   59cb8:	mov	r2, r3
   59cbc:	vmovl.u8	q8, d16
   59cc0:	vst1.16	{d16-d17}, [r6]
   59cc4:	bne	59c6c <GetDataSlab+0x29cec>
   59cc8:	b	59cd0 <GetDataSlab+0x29d50>
   59ccc:	mov	r0, #0
   59cd0:	ldr	r2, [sp, #48]	; 0x30
   59cd4:	ldr	lr, [sp, #92]	; 0x5c
   59cd8:	ldr	r7, [sp, #76]	; 0x4c
   59cdc:	cmp	r2, #0
   59ce0:	beq	59d14 <GetDataSlab+0x29d94>
   59ce4:	ldr	r2, [sp, #68]	; 0x44
   59ce8:	mov	r3, lr
   59cec:	mul	r2, r0, r2
   59cf0:	add	r0, r8, r0, lsl #1
   59cf4:	ldr	r2, [r3, r2]!
   59cf8:	str	r2, [sp, #416]	; 0x1a0
   59cfc:	ldr	r2, [r3, #4]
   59d00:	str	r2, [sp, #420]	; 0x1a4
   59d04:	add	r2, sp, #416	; 0x1a0
   59d08:	vld1.8	{d16}, [r2 :64]
   59d0c:	vmovl.u8	q8, d16
   59d10:	vst1.16	{d16-d17}, [r0]
   59d14:	ldr	r0, [sp, #44]	; 0x2c
   59d18:	ldr	ip, [sp, #72]	; 0x48
   59d1c:	add	r8, r8, r0, lsl #1
   59d20:	cmp	r5, r0
   59d24:	beq	59bd8 <GetDataSlab+0x29c58>
   59d28:	ldr	r2, [sp, #60]	; 0x3c
   59d2c:	cmp	r2, #0
   59d30:	bne	59d3c <GetDataSlab+0x29dbc>
   59d34:	mov	r4, r0
   59d38:	b	59d50 <GetDataSlab+0x29dd0>
   59d3c:	ldr	r2, [sp, #68]	; 0x44
   59d40:	orr	r4, r0, #1
   59d44:	mul	r2, r0, r2
   59d48:	ldrb	r2, [lr, r2]
   59d4c:	strh	r2, [r8], #2
   59d50:	orr	r0, r0, #1
   59d54:	cmp	r5, r0
   59d58:	beq	59bd8 <GetDataSlab+0x29c58>
   59d5c:	ldr	r6, [sp, #68]	; 0x44
   59d60:	add	r3, r4, #1
   59d64:	sub	r2, r5, r4
   59d68:	mul	r0, r6, r4
   59d6c:	mul	r4, r6, r3
   59d70:	mov	r6, lr
   59d74:	ldrb	r3, [r6, r0]
   59d78:	subs	r2, r2, #2
   59d7c:	strh	r3, [r8]
   59d80:	ldrb	r3, [r6, r4]
   59d84:	add	r6, r6, r1
   59d88:	strh	r3, [r8, #2]
   59d8c:	add	r8, r8, #4
   59d90:	bne	59d74 <GetDataSlab+0x29df4>
   59d94:	b	59bd8 <GetDataSlab+0x29c58>
   59d98:	cmp	r7, #1
   59d9c:	blt	5f88c <GetDataSlab+0x2f90c>
   59da0:	ldr	r0, [sp, #56]	; 0x38
   59da4:	mov	r2, #1
   59da8:	cmp	r5, #7
   59dac:	mov	r7, r8
   59db0:	mov	ip, #0
   59db4:	mov	lr, r9
   59db8:	mla	r0, r0, r8, r6
   59dbc:	add	r1, r3, r0, lsl #1
   59dc0:	str	r1, [sp, #92]	; 0x5c
   59dc4:	lsl	r1, r5, #1
   59dc8:	add	r1, r1, r0, lsl #1
   59dcc:	lsl	r0, r0, #1
   59dd0:	str	r0, [sp, #52]	; 0x34
   59dd4:	ldr	r0, [sp, #68]	; 0x44
   59dd8:	str	r1, [sp, #56]	; 0x38
   59ddc:	sub	r1, r5, #8
   59de0:	add	r2, r2, r1, lsr #3
   59de4:	and	r3, r2, #1
   59de8:	sub	r2, r2, r3
   59dec:	str	r3, [sp, #48]	; 0x30
   59df0:	mov	r3, r0
   59df4:	sub	r0, r0, #1
   59df8:	clz	r0, r0
   59dfc:	str	r2, [sp, #36]	; 0x24
   59e00:	mov	r2, #0
   59e04:	movwhi	r2, #1
   59e08:	lsl	r6, r3, #2
   59e0c:	lsr	r0, r0, #5
   59e10:	and	r0, r2, r0
   59e14:	str	r0, [sp, #60]	; 0x3c
   59e18:	ldr	r0, [sp, #72]	; 0x48
   59e1c:	mul	r0, r0, r8
   59e20:	lsl	r0, r0, #1
   59e24:	str	r0, [sp, #76]	; 0x4c
   59e28:	lsl	r0, r3, #1
   59e2c:	str	r0, [sp, #64]	; 0x40
   59e30:	lsl	r0, r3, #5
   59e34:	str	r0, [sp, #32]
   59e38:	lsl	r0, r3, #4
   59e3c:	str	r0, [sp, #28]
   59e40:	and	r0, r5, #1
   59e44:	ldr	r8, [sp, #28]
   59e48:	str	r0, [sp, #72]	; 0x48
   59e4c:	bic	r0, r5, #7
   59e50:	str	r0, [sp, #44]	; 0x2c
   59e54:	lsr	r0, r1, #3
   59e58:	str	r0, [sp, #40]	; 0x28
   59e5c:	cmp	r5, #1
   59e60:	bge	59e90 <GetDataSlab+0x29f10>
   59e64:	ldr	r9, [sp, #76]	; 0x4c
   59e68:	ldr	r4, [sp, #92]	; 0x5c
   59e6c:	ldr	r1, [sp, #84]	; 0x54
   59e70:	add	ip, ip, #1
   59e74:	add	r4, r4, r9
   59e78:	mov	r0, #0
   59e7c:	str	r4, [sp, #92]	; 0x5c
   59e80:	cmp	ip, r1
   59e84:	beq	56c20 <GetDataSlab+0x26ca0>
   59e88:	cmp	r5, #1
   59e8c:	blt	59e64 <GetDataSlab+0x29ee4>
   59e90:	ldr	r1, [sp, #60]	; 0x3c
   59e94:	ldr	r9, [sp, #76]	; 0x4c
   59e98:	ldr	r4, [sp, #92]	; 0x5c
   59e9c:	mov	r0, #0
   59ea0:	cmp	r1, #0
   59ea4:	beq	59f64 <GetDataSlab+0x29fe4>
   59ea8:	ldr	r1, [sp, #56]	; 0x38
   59eac:	ldr	r2, [sp, #80]	; 0x50
   59eb0:	mla	r1, r9, ip, r1
   59eb4:	add	r1, r2, r1
   59eb8:	cmp	r1, lr
   59ebc:	bls	59ed8 <GetDataSlab+0x29f58>
   59ec0:	ldr	r1, [sp, #52]	; 0x34
   59ec4:	add	r3, lr, r5, lsl #1
   59ec8:	mla	r1, r9, ip, r1
   59ecc:	add	r1, r2, r1
   59ed0:	cmp	r1, r3
   59ed4:	bcc	59f64 <GetDataSlab+0x29fe4>
   59ed8:	ldr	r0, [sp, #40]	; 0x28
   59edc:	cmp	r0, #0
   59ee0:	beq	59f24 <GetDataSlab+0x29fa4>
   59ee4:	ldr	r7, [sp, #36]	; 0x24
   59ee8:	ldr	r2, [sp, #32]
   59eec:	mov	r1, r4
   59ef0:	mov	r0, #0
   59ef4:	mov	sl, lr
   59ef8:	mov	r4, #32
   59efc:	add	r3, r1, r8
   59f00:	vld1.16	{d16-d17}, [r1], r2
   59f04:	add	r9, sl, #16
   59f08:	subs	r7, r7, #2
   59f0c:	add	r0, r0, #16
   59f10:	vst1.16	{d16-d17}, [sl], r4
   59f14:	vld1.16	{d16-d17}, [r3]
   59f18:	vst1.16	{d16-d17}, [r9]
   59f1c:	bne	59efc <GetDataSlab+0x29f7c>
   59f20:	b	59f28 <GetDataSlab+0x29fa8>
   59f24:	mov	r0, #0
   59f28:	ldr	r1, [sp, #48]	; 0x30
   59f2c:	ldr	r4, [sp, #92]	; 0x5c
   59f30:	cmp	r1, #0
   59f34:	beq	59f50 <GetDataSlab+0x29fd0>
   59f38:	ldr	r1, [sp, #68]	; 0x44
   59f3c:	mul	r1, r0, r1
   59f40:	add	r0, lr, r0, lsl #1
   59f44:	add	r1, r4, r1, lsl #1
   59f48:	vld1.16	{d16-d17}, [r1]
   59f4c:	vst1.16	{d16-d17}, [r0]
   59f50:	ldr	r0, [sp, #44]	; 0x2c
   59f54:	ldr	r9, [sp, #76]	; 0x4c
   59f58:	add	lr, lr, r0, lsl #1
   59f5c:	cmp	r5, r0
   59f60:	beq	59e6c <GetDataSlab+0x29eec>
   59f64:	ldr	r1, [sp, #72]	; 0x48
   59f68:	cmp	r1, #0
   59f6c:	bne	59f78 <GetDataSlab+0x29ff8>
   59f70:	mov	r3, r0
   59f74:	b	59f90 <GetDataSlab+0x2a010>
   59f78:	ldr	r1, [sp, #68]	; 0x44
   59f7c:	orr	r3, r0, #1
   59f80:	mul	r1, r0, r1
   59f84:	add	r1, r4, r1, lsl #1
   59f88:	ldrh	r1, [r1]
   59f8c:	strh	r1, [lr], #2
   59f90:	orr	r0, r0, #1
   59f94:	cmp	r5, r0
   59f98:	beq	59e6c <GetDataSlab+0x29eec>
   59f9c:	ldr	r2, [sp, #64]	; 0x40
   59fa0:	sub	r1, r5, r3
   59fa4:	mul	r0, r2, r3
   59fa8:	add	r3, r3, #1
   59fac:	mul	r7, r2, r3
   59fb0:	mov	r3, r4
   59fb4:	add	r2, r3, r0
   59fb8:	subs	r1, r1, #2
   59fbc:	ldrh	r2, [r2]
   59fc0:	strh	r2, [lr]
   59fc4:	add	r2, r3, r7
   59fc8:	add	r3, r3, r6
   59fcc:	ldrh	r2, [r2]
   59fd0:	strh	r2, [lr, #2]
   59fd4:	add	lr, lr, #4
   59fd8:	bne	59fb4 <GetDataSlab+0x2a034>
   59fdc:	b	59e6c <GetDataSlab+0x29eec>
   59fe0:	cmp	r7, #1
   59fe4:	blt	5f88c <GetDataSlab+0x2f90c>
   59fe8:	ldr	r0, [sp, #56]	; 0x38
   59fec:	mov	r2, #1
   59ff0:	cmp	r5, #7
   59ff4:	mov	r7, r8
   59ff8:	mov	ip, #0
   59ffc:	mov	lr, r9
   5a000:	mla	r0, r0, r8, r6
   5a004:	add	r1, r3, r0, lsl #1
   5a008:	str	r1, [sp, #92]	; 0x5c
   5a00c:	lsl	r1, r5, #1
   5a010:	add	r1, r1, r0, lsl #1
   5a014:	lsl	r0, r0, #1
   5a018:	str	r0, [sp, #52]	; 0x34
   5a01c:	ldr	r0, [sp, #68]	; 0x44
   5a020:	str	r1, [sp, #56]	; 0x38
   5a024:	sub	r1, r5, #8
   5a028:	add	r2, r2, r1, lsr #3
   5a02c:	and	r3, r2, #1
   5a030:	sub	r2, r2, r3
   5a034:	str	r3, [sp, #48]	; 0x30
   5a038:	mov	r3, r0
   5a03c:	sub	r0, r0, #1
   5a040:	clz	r0, r0
   5a044:	str	r2, [sp, #36]	; 0x24
   5a048:	mov	r2, #0
   5a04c:	movwhi	r2, #1
   5a050:	lsl	r6, r3, #2
   5a054:	lsr	r0, r0, #5
   5a058:	and	r0, r2, r0
   5a05c:	str	r0, [sp, #60]	; 0x3c
   5a060:	ldr	r0, [sp, #72]	; 0x48
   5a064:	mul	r0, r0, r8
   5a068:	lsl	r0, r0, #1
   5a06c:	str	r0, [sp, #76]	; 0x4c
   5a070:	lsl	r0, r3, #1
   5a074:	str	r0, [sp, #64]	; 0x40
   5a078:	lsl	r0, r3, #5
   5a07c:	str	r0, [sp, #32]
   5a080:	lsl	r0, r3, #4
   5a084:	str	r0, [sp, #28]
   5a088:	and	r0, r5, #1
   5a08c:	ldr	r8, [sp, #28]
   5a090:	str	r0, [sp, #72]	; 0x48
   5a094:	bic	r0, r5, #7
   5a098:	str	r0, [sp, #44]	; 0x2c
   5a09c:	lsr	r0, r1, #3
   5a0a0:	str	r0, [sp, #40]	; 0x28
   5a0a4:	cmp	r5, #1
   5a0a8:	bge	5a0d8 <GetDataSlab+0x2a158>
   5a0ac:	ldr	r9, [sp, #76]	; 0x4c
   5a0b0:	ldr	r4, [sp, #92]	; 0x5c
   5a0b4:	ldr	r1, [sp, #84]	; 0x54
   5a0b8:	add	ip, ip, #1
   5a0bc:	add	r4, r4, r9
   5a0c0:	mov	r0, #0
   5a0c4:	str	r4, [sp, #92]	; 0x5c
   5a0c8:	cmp	ip, r1
   5a0cc:	beq	56c20 <GetDataSlab+0x26ca0>
   5a0d0:	cmp	r5, #1
   5a0d4:	blt	5a0ac <GetDataSlab+0x2a12c>
   5a0d8:	ldr	r1, [sp, #60]	; 0x3c
   5a0dc:	ldr	r9, [sp, #76]	; 0x4c
   5a0e0:	ldr	r4, [sp, #92]	; 0x5c
   5a0e4:	mov	r0, #0
   5a0e8:	cmp	r1, #0
   5a0ec:	beq	5a1ac <GetDataSlab+0x2a22c>
   5a0f0:	ldr	r1, [sp, #56]	; 0x38
   5a0f4:	ldr	r2, [sp, #80]	; 0x50
   5a0f8:	mla	r1, r9, ip, r1
   5a0fc:	add	r1, r2, r1
   5a100:	cmp	r1, lr
   5a104:	bls	5a120 <GetDataSlab+0x2a1a0>
   5a108:	ldr	r1, [sp, #52]	; 0x34
   5a10c:	add	r3, lr, r5, lsl #1
   5a110:	mla	r1, r9, ip, r1
   5a114:	add	r1, r2, r1
   5a118:	cmp	r1, r3
   5a11c:	bcc	5a1ac <GetDataSlab+0x2a22c>
   5a120:	ldr	r0, [sp, #40]	; 0x28
   5a124:	cmp	r0, #0
   5a128:	beq	5a16c <GetDataSlab+0x2a1ec>
   5a12c:	ldr	r7, [sp, #36]	; 0x24
   5a130:	ldr	r2, [sp, #32]
   5a134:	mov	r1, r4
   5a138:	mov	r0, #0
   5a13c:	mov	sl, lr
   5a140:	mov	r4, #32
   5a144:	add	r3, r1, r8
   5a148:	vld1.16	{d16-d17}, [r1], r2
   5a14c:	add	r9, sl, #16
   5a150:	subs	r7, r7, #2
   5a154:	add	r0, r0, #16
   5a158:	vst1.16	{d16-d17}, [sl], r4
   5a15c:	vld1.16	{d16-d17}, [r3]
   5a160:	vst1.16	{d16-d17}, [r9]
   5a164:	bne	5a144 <GetDataSlab+0x2a1c4>
   5a168:	b	5a170 <GetDataSlab+0x2a1f0>
   5a16c:	mov	r0, #0
   5a170:	ldr	r1, [sp, #48]	; 0x30
   5a174:	ldr	r4, [sp, #92]	; 0x5c
   5a178:	cmp	r1, #0
   5a17c:	beq	5a198 <GetDataSlab+0x2a218>
   5a180:	ldr	r1, [sp, #68]	; 0x44
   5a184:	mul	r1, r0, r1
   5a188:	add	r0, lr, r0, lsl #1
   5a18c:	add	r1, r4, r1, lsl #1
   5a190:	vld1.16	{d16-d17}, [r1]
   5a194:	vst1.16	{d16-d17}, [r0]
   5a198:	ldr	r0, [sp, #44]	; 0x2c
   5a19c:	ldr	r9, [sp, #76]	; 0x4c
   5a1a0:	add	lr, lr, r0, lsl #1
   5a1a4:	cmp	r5, r0
   5a1a8:	beq	5a0b4 <GetDataSlab+0x2a134>
   5a1ac:	ldr	r1, [sp, #72]	; 0x48
   5a1b0:	cmp	r1, #0
   5a1b4:	bne	5a1c0 <GetDataSlab+0x2a240>
   5a1b8:	mov	r3, r0
   5a1bc:	b	5a1d8 <GetDataSlab+0x2a258>
   5a1c0:	ldr	r1, [sp, #68]	; 0x44
   5a1c4:	orr	r3, r0, #1
   5a1c8:	mul	r1, r0, r1
   5a1cc:	add	r1, r4, r1, lsl #1
   5a1d0:	ldrh	r1, [r1]
   5a1d4:	strh	r1, [lr], #2
   5a1d8:	orr	r0, r0, #1
   5a1dc:	cmp	r5, r0
   5a1e0:	beq	5a0b4 <GetDataSlab+0x2a134>
   5a1e4:	ldr	r2, [sp, #64]	; 0x40
   5a1e8:	sub	r1, r5, r3
   5a1ec:	mul	r0, r2, r3
   5a1f0:	add	r3, r3, #1
   5a1f4:	mul	r7, r2, r3
   5a1f8:	mov	r3, r4
   5a1fc:	add	r2, r3, r0
   5a200:	subs	r1, r1, #2
   5a204:	ldrh	r2, [r2]
   5a208:	strh	r2, [lr]
   5a20c:	add	r2, r3, r7
   5a210:	add	r3, r3, r6
   5a214:	ldrh	r2, [r2]
   5a218:	strh	r2, [lr, #2]
   5a21c:	add	lr, lr, #4
   5a220:	bne	5a1fc <GetDataSlab+0x2a27c>
   5a224:	b	5a0b4 <GetDataSlab+0x2a134>
   5a228:	cmp	r7, #1
   5a22c:	blt	5f88c <GetDataSlab+0x2f90c>
   5a230:	ldr	r0, [sp, #56]	; 0x38
   5a234:	mov	r1, #1
   5a238:	cmp	r5, #3
   5a23c:	mov	lr, #16
   5a240:	mla	r0, r0, r8, r6
   5a244:	add	r0, r3, r0, lsl #2
   5a248:	str	r0, [sp, #92]	; 0x5c
   5a24c:	sub	r0, r5, #4
   5a250:	add	r1, r1, r0, lsr #2
   5a254:	lsr	r0, r0, #2
   5a258:	str	r0, [sp, #52]	; 0x34
   5a25c:	and	r2, r1, #1
   5a260:	sub	r1, r1, r2
   5a264:	str	r2, [sp, #56]	; 0x38
   5a268:	mov	r2, #0
   5a26c:	str	r1, [sp, #44]	; 0x2c
   5a270:	ldr	r1, [sp, #68]	; 0x44
   5a274:	str	r2, [sp, #80]	; 0x50
   5a278:	mov	r2, #0
   5a27c:	movwhi	r2, #1
   5a280:	mov	r4, r1
   5a284:	sub	r1, r1, #1
   5a288:	clz	r1, r1
   5a28c:	lsl	r3, r4, #3
   5a290:	lsr	r1, r1, #5
   5a294:	and	r1, r2, r1
   5a298:	str	r1, [sp, #60]	; 0x3c
   5a29c:	ldr	r1, [sp, #72]	; 0x48
   5a2a0:	mul	r1, r1, r8
   5a2a4:	lsl	r1, r1, #2
   5a2a8:	str	r1, [sp, #76]	; 0x4c
   5a2ac:	lsl	r1, r4, #2
   5a2b0:	str	r1, [sp, #48]	; 0x30
   5a2b4:	lsl	r1, r4, #5
   5a2b8:	str	r1, [sp, #40]	; 0x28
   5a2bc:	lsl	r1, r4, #4
   5a2c0:	str	r1, [sp, #36]	; 0x24
   5a2c4:	ldr	sl, [sp, #40]	; 0x28
   5a2c8:	and	r1, r5, #1
   5a2cc:	ldr	r7, [sp, #36]	; 0x24
   5a2d0:	str	r1, [sp, #72]	; 0x48
   5a2d4:	bic	r1, r5, #3
   5a2d8:	str	r1, [sp, #64]	; 0x40
   5a2dc:	cmp	r5, #1
   5a2e0:	bge	5a318 <GetDataSlab+0x2a398>
   5a2e4:	ldr	r6, [sp, #92]	; 0x5c
   5a2e8:	ldr	r2, [sp, #80]	; 0x50
   5a2ec:	ldr	r0, [sp, #76]	; 0x4c
   5a2f0:	ldr	r1, [sp, #84]	; 0x54
   5a2f4:	add	r2, r2, #1
   5a2f8:	add	r6, r6, r0
   5a2fc:	mov	r0, #0
   5a300:	cmp	r2, r1
   5a304:	str	r6, [sp, #92]	; 0x5c
   5a308:	str	r2, [sp, #80]	; 0x50
   5a30c:	beq	56c20 <GetDataSlab+0x26ca0>
   5a310:	cmp	r5, #1
   5a314:	blt	5a2e4 <GetDataSlab+0x2a364>
   5a318:	ldr	r1, [sp, #60]	; 0x3c
   5a31c:	ldr	r6, [sp, #92]	; 0x5c
   5a320:	mov	r0, #0
   5a324:	cmp	r1, #0
   5a328:	beq	5a3b4 <GetDataSlab+0x2a434>
   5a32c:	ldr	r0, [sp, #52]	; 0x34
   5a330:	cmp	r0, #0
   5a334:	beq	5a378 <GetDataSlab+0x2a3f8>
   5a338:	ldr	ip, [sp, #44]	; 0x2c
   5a33c:	mov	r0, #0
   5a340:	mov	r1, r6
   5a344:	mov	r8, r9
   5a348:	add	r2, r1, r7
   5a34c:	vld1.32	{d16-d17}, [r1], sl
   5a350:	add	r4, r8, #8
   5a354:	subs	ip, ip, #2
   5a358:	add	r0, r0, #8
   5a35c:	vmovn.i32	d16, q8
   5a360:	vst1.16	{d16}, [r8], lr
   5a364:	vld1.32	{d16-d17}, [r2]
   5a368:	vmovn.i32	d16, q8
   5a36c:	vst1.16	{d16}, [r4]
   5a370:	bne	5a348 <GetDataSlab+0x2a3c8>
   5a374:	b	5a37c <GetDataSlab+0x2a3fc>
   5a378:	mov	r0, #0
   5a37c:	ldr	r1, [sp, #56]	; 0x38
   5a380:	cmp	r1, #0
   5a384:	beq	5a3a4 <GetDataSlab+0x2a424>
   5a388:	ldr	r1, [sp, #68]	; 0x44
   5a38c:	mul	r1, r0, r1
   5a390:	add	r0, r9, r0, lsl #1
   5a394:	add	r1, r6, r1, lsl #2
   5a398:	vld1.32	{d16-d17}, [r1]
   5a39c:	vmovn.i32	d16, q8
   5a3a0:	vst1.16	{d16}, [r0]
   5a3a4:	ldr	r0, [sp, #64]	; 0x40
   5a3a8:	add	r9, r9, r0, lsl #1
   5a3ac:	cmp	r5, r0
   5a3b0:	beq	5a2e8 <GetDataSlab+0x2a368>
   5a3b4:	ldr	r1, [sp, #72]	; 0x48
   5a3b8:	cmp	r1, #0
   5a3bc:	bne	5a3c8 <GetDataSlab+0x2a448>
   5a3c0:	mov	r4, r0
   5a3c4:	b	5a3dc <GetDataSlab+0x2a45c>
   5a3c8:	ldr	r1, [sp, #68]	; 0x44
   5a3cc:	orr	r4, r0, #1
   5a3d0:	mul	r1, r0, r1
   5a3d4:	ldr	r1, [r6, r1, lsl #2]
   5a3d8:	strh	r1, [r9], #2
   5a3dc:	orr	r0, r0, #1
   5a3e0:	cmp	r5, r0
   5a3e4:	beq	5a2e8 <GetDataSlab+0x2a368>
   5a3e8:	ldr	ip, [sp, #48]	; 0x30
   5a3ec:	add	r2, r4, #1
   5a3f0:	sub	r1, r5, r4
   5a3f4:	mul	r0, ip, r4
   5a3f8:	mul	r4, ip, r2
   5a3fc:	mov	r2, r6
   5a400:	ldr	r6, [r2, r0]
   5a404:	subs	r1, r1, #2
   5a408:	strh	r6, [r9]
   5a40c:	ldr	r6, [r2, r4]
   5a410:	add	r2, r2, r3
   5a414:	strh	r6, [r9, #2]
   5a418:	add	r9, r9, #4
   5a41c:	bne	5a400 <GetDataSlab+0x2a480>
   5a420:	b	5a2e4 <GetDataSlab+0x2a364>
   5a424:	cmp	r7, #1
   5a428:	blt	5f88c <GetDataSlab+0x2f90c>
   5a42c:	ldr	r0, [sp, #56]	; 0x38
   5a430:	mov	r1, #1
   5a434:	cmp	r5, #3
   5a438:	mla	r0, r0, r8, r6
   5a43c:	add	r0, r3, r0, lsl #2
   5a440:	str	r0, [sp, #92]	; 0x5c
   5a444:	sub	r0, r5, #4
   5a448:	add	r1, r1, r0, lsr #2
   5a44c:	lsr	r0, r0, #2
   5a450:	str	r0, [sp, #52]	; 0x34
   5a454:	and	r2, r1, #1
   5a458:	sub	r1, r1, r2
   5a45c:	str	r2, [sp, #56]	; 0x38
   5a460:	mov	r2, #0
   5a464:	str	r1, [sp, #44]	; 0x2c
   5a468:	ldr	r1, [sp, #68]	; 0x44
   5a46c:	str	r2, [sp, #80]	; 0x50
   5a470:	mov	r2, #0
   5a474:	movwhi	r2, #1
   5a478:	mov	r6, r1
   5a47c:	sub	r1, r1, #1
   5a480:	clz	r1, r1
   5a484:	lsl	r3, r6, #3
   5a488:	lsr	r1, r1, #5
   5a48c:	and	r1, r2, r1
   5a490:	str	r1, [sp, #60]	; 0x3c
   5a494:	ldr	r1, [sp, #72]	; 0x48
   5a498:	mul	r1, r1, r8
   5a49c:	mov	r8, #16
   5a4a0:	lsl	r1, r1, #2
   5a4a4:	str	r1, [sp, #76]	; 0x4c
   5a4a8:	lsl	r1, r6, #2
   5a4ac:	str	r1, [sp, #48]	; 0x30
   5a4b0:	lsl	r1, r6, #5
   5a4b4:	str	r1, [sp, #40]	; 0x28
   5a4b8:	lsl	r1, r6, #4
   5a4bc:	str	r1, [sp, #36]	; 0x24
   5a4c0:	ldr	sl, [sp, #40]	; 0x28
   5a4c4:	and	r1, r5, #1
   5a4c8:	ldr	r7, [sp, #36]	; 0x24
   5a4cc:	str	r1, [sp, #72]	; 0x48
   5a4d0:	bic	r1, r5, #3
   5a4d4:	str	r1, [sp, #64]	; 0x40
   5a4d8:	cmp	r5, #1
   5a4dc:	bge	5a514 <GetDataSlab+0x2a594>
   5a4e0:	ldr	ip, [sp, #84]	; 0x54
   5a4e4:	ldr	r6, [sp, #92]	; 0x5c
   5a4e8:	ldr	r1, [sp, #80]	; 0x50
   5a4ec:	ldr	r0, [sp, #76]	; 0x4c
   5a4f0:	add	r1, r1, #1
   5a4f4:	add	r6, r6, r0
   5a4f8:	mov	r0, #0
   5a4fc:	cmp	r1, ip
   5a500:	str	r6, [sp, #92]	; 0x5c
   5a504:	str	r1, [sp, #80]	; 0x50
   5a508:	beq	56c20 <GetDataSlab+0x26ca0>
   5a50c:	cmp	r5, #1
   5a510:	blt	5a4e0 <GetDataSlab+0x2a560>
   5a514:	ldr	r1, [sp, #60]	; 0x3c
   5a518:	ldr	ip, [sp, #84]	; 0x54
   5a51c:	ldr	r6, [sp, #92]	; 0x5c
   5a520:	mov	r0, #0
   5a524:	cmp	r1, #0
   5a528:	beq	5a5b8 <GetDataSlab+0x2a638>
   5a52c:	ldr	r0, [sp, #52]	; 0x34
   5a530:	cmp	r0, #0
   5a534:	beq	5a578 <GetDataSlab+0x2a5f8>
   5a538:	ldr	ip, [sp, #44]	; 0x2c
   5a53c:	mov	r0, #0
   5a540:	mov	r1, r6
   5a544:	mov	lr, r9
   5a548:	add	r2, r1, r7
   5a54c:	vld1.32	{d16-d17}, [r1], sl
   5a550:	add	r4, lr, #8
   5a554:	subs	ip, ip, #2
   5a558:	add	r0, r0, #8
   5a55c:	vmovn.i32	d16, q8
   5a560:	vst1.16	{d16}, [lr], r8
   5a564:	vld1.32	{d16-d17}, [r2]
   5a568:	vmovn.i32	d16, q8
   5a56c:	vst1.16	{d16}, [r4]
   5a570:	bne	5a548 <GetDataSlab+0x2a5c8>
   5a574:	b	5a57c <GetDataSlab+0x2a5fc>
   5a578:	mov	r0, #0
   5a57c:	ldr	r1, [sp, #56]	; 0x38
   5a580:	cmp	r1, #0
   5a584:	beq	5a5a4 <GetDataSlab+0x2a624>
   5a588:	ldr	r1, [sp, #68]	; 0x44
   5a58c:	mul	r1, r0, r1
   5a590:	add	r0, r9, r0, lsl #1
   5a594:	add	r1, r6, r1, lsl #2
   5a598:	vld1.32	{d16-d17}, [r1]
   5a59c:	vmovn.i32	d16, q8
   5a5a0:	vst1.16	{d16}, [r0]
   5a5a4:	ldr	r0, [sp, #64]	; 0x40
   5a5a8:	ldr	ip, [sp, #84]	; 0x54
   5a5ac:	add	r9, r9, r0, lsl #1
   5a5b0:	cmp	r5, r0
   5a5b4:	beq	5a4e8 <GetDataSlab+0x2a568>
   5a5b8:	ldr	r1, [sp, #72]	; 0x48
   5a5bc:	cmp	r1, #0
   5a5c0:	bne	5a5cc <GetDataSlab+0x2a64c>
   5a5c4:	mov	r4, r0
   5a5c8:	b	5a5e0 <GetDataSlab+0x2a660>
   5a5cc:	ldr	r1, [sp, #68]	; 0x44
   5a5d0:	orr	r4, r0, #1
   5a5d4:	mul	r1, r0, r1
   5a5d8:	ldr	r1, [r6, r1, lsl #2]
   5a5dc:	strh	r1, [r9], #2
   5a5e0:	orr	r0, r0, #1
   5a5e4:	cmp	r5, r0
   5a5e8:	beq	5a4e8 <GetDataSlab+0x2a568>
   5a5ec:	ldr	lr, [sp, #48]	; 0x30
   5a5f0:	add	r2, r4, #1
   5a5f4:	sub	r1, r5, r4
   5a5f8:	mul	r0, lr, r4
   5a5fc:	mul	r4, lr, r2
   5a600:	mov	r2, r6
   5a604:	ldr	r6, [r2, r0]
   5a608:	subs	r1, r1, #2
   5a60c:	strh	r6, [r9]
   5a610:	ldr	r6, [r2, r4]
   5a614:	add	r2, r2, r3
   5a618:	strh	r6, [r9, #2]
   5a61c:	add	r9, r9, #4
   5a620:	bne	5a604 <GetDataSlab+0x2a684>
   5a624:	b	5a4e4 <GetDataSlab+0x2a564>
   5a628:	cmp	r7, #1
   5a62c:	blt	5f88c <GetDataSlab+0x2f90c>
   5a630:	ldr	r0, [sp, #56]	; 0x38
   5a634:	mov	r1, #1
   5a638:	cmp	r5, #3
   5a63c:	mov	ip, #0
   5a640:	mla	r0, r0, r8, r6
   5a644:	mov	r6, r8
   5a648:	add	r8, r3, r0, lsl #2
   5a64c:	sub	r0, r5, #4
   5a650:	add	r1, r1, r0, lsr #2
   5a654:	lsr	r0, r0, #2
   5a658:	str	r0, [sp, #56]	; 0x38
   5a65c:	and	r2, r1, #1
   5a660:	sub	r1, r1, r2
   5a664:	str	r2, [sp, #60]	; 0x3c
   5a668:	mov	r2, #0
   5a66c:	movwhi	r2, #1
   5a670:	str	r1, [sp, #48]	; 0x30
   5a674:	ldr	r1, [sp, #68]	; 0x44
   5a678:	mov	r7, r1
   5a67c:	sub	r1, r1, #1
   5a680:	clz	r1, r1
   5a684:	lsl	r3, r7, #3
   5a688:	lsl	lr, r7, #4
   5a68c:	lsr	r1, r1, #5
   5a690:	and	r1, r2, r1
   5a694:	str	r1, [sp, #80]	; 0x50
   5a698:	ldr	r1, [sp, #72]	; 0x48
   5a69c:	mul	r1, r1, r6
   5a6a0:	lsl	r1, r1, #2
   5a6a4:	str	r1, [sp, #92]	; 0x5c
   5a6a8:	lsl	r1, r7, #2
   5a6ac:	str	r1, [sp, #52]	; 0x34
   5a6b0:	lsl	r1, r7, #5
   5a6b4:	str	r1, [sp, #76]	; 0x4c
   5a6b8:	and	r1, r5, #1
   5a6bc:	str	r1, [sp, #72]	; 0x48
   5a6c0:	bic	r1, r5, #3
   5a6c4:	str	r1, [sp, #64]	; 0x40
   5a6c8:	cmp	r5, #1
   5a6cc:	bge	5a6f4 <GetDataSlab+0x2a774>
   5a6d0:	ldr	r0, [sp, #92]	; 0x5c
   5a6d4:	ldr	r1, [sp, #84]	; 0x54
   5a6d8:	add	ip, ip, #1
   5a6dc:	add	r8, r8, r0
   5a6e0:	mov	r0, #0
   5a6e4:	cmp	ip, r1
   5a6e8:	beq	56c20 <GetDataSlab+0x26ca0>
   5a6ec:	cmp	r5, #1
   5a6f0:	blt	5a6d0 <GetDataSlab+0x2a750>
   5a6f4:	ldr	r1, [sp, #80]	; 0x50
   5a6f8:	ldr	r6, [sp, #76]	; 0x4c
   5a6fc:	mov	r0, #0
   5a700:	mov	r7, #16
   5a704:	cmp	r1, #0
   5a708:	beq	5a7b0 <GetDataSlab+0x2a830>
   5a70c:	ldr	r0, [sp, #56]	; 0x38
   5a710:	cmp	r0, #0
   5a714:	beq	5a760 <GetDataSlab+0x2a7e0>
   5a718:	ldr	sl, [sp, #88]	; 0x58
   5a71c:	ldr	r9, [sp, #48]	; 0x30
   5a720:	mov	r0, #0
   5a724:	mov	r1, r8
   5a728:	add	r2, r1, lr
   5a72c:	vld1.32	{d16-d17}, [r1], r6
   5a730:	add	r4, sl, #8
   5a734:	subs	r9, r9, #2
   5a738:	add	r0, r0, #8
   5a73c:	vcvt.s32.f32	q8, q8
   5a740:	vmovn.i32	d16, q8
   5a744:	vst1.16	{d16}, [sl], r7
   5a748:	vld1.32	{d16-d17}, [r2]
   5a74c:	vcvt.s32.f32	q8, q8
   5a750:	vmovn.i32	d16, q8
   5a754:	vst1.16	{d16}, [r4]
   5a758:	bne	5a728 <GetDataSlab+0x2a7a8>
   5a75c:	b	5a764 <GetDataSlab+0x2a7e4>
   5a760:	mov	r0, #0
   5a764:	ldr	r1, [sp, #60]	; 0x3c
   5a768:	cmp	r1, #0
   5a76c:	beq	5a794 <GetDataSlab+0x2a814>
   5a770:	ldr	r1, [sp, #68]	; 0x44
   5a774:	mul	r1, r0, r1
   5a778:	add	r1, r8, r1, lsl #2
   5a77c:	vld1.32	{d16-d17}, [r1]
   5a780:	ldr	r1, [sp, #88]	; 0x58
   5a784:	add	r0, r1, r0, lsl #1
   5a788:	vcvt.s32.f32	q8, q8
   5a78c:	vmovn.i32	d16, q8
   5a790:	vst1.16	{d16}, [r0]
   5a794:	ldr	r1, [sp, #64]	; 0x40
   5a798:	ldr	r0, [sp, #88]	; 0x58
   5a79c:	add	r0, r0, r1, lsl #1
   5a7a0:	cmp	r5, r1
   5a7a4:	str	r0, [sp, #88]	; 0x58
   5a7a8:	mov	r0, r1
   5a7ac:	beq	5a6d0 <GetDataSlab+0x2a750>
   5a7b0:	ldr	r1, [sp, #72]	; 0x48
   5a7b4:	cmp	r1, #0
   5a7b8:	bne	5a7c4 <GetDataSlab+0x2a844>
   5a7bc:	mov	r2, r0
   5a7c0:	b	5a7ec <GetDataSlab+0x2a86c>
   5a7c4:	ldr	r1, [sp, #68]	; 0x44
   5a7c8:	mul	r1, r0, r1
   5a7cc:	add	r1, r8, r1, lsl #2
   5a7d0:	vldr	s0, [r1]
   5a7d4:	vcvt.s32.f32	s0, s0
   5a7d8:	ldr	r2, [sp, #88]	; 0x58
   5a7dc:	vmov	r1, s0
   5a7e0:	strh	r1, [r2], #2
   5a7e4:	str	r2, [sp, #88]	; 0x58
   5a7e8:	orr	r2, r0, #1
   5a7ec:	orr	r0, r0, #1
   5a7f0:	cmp	r5, r0
   5a7f4:	beq	5a6d0 <GetDataSlab+0x2a750>
   5a7f8:	ldr	r4, [sp, #52]	; 0x34
   5a7fc:	sub	r1, r5, r2
   5a800:	ldr	r7, [sp, #88]	; 0x58
   5a804:	mul	r0, r4, r2
   5a808:	add	r2, r2, #1
   5a80c:	mul	r4, r4, r2
   5a810:	mov	r2, r8
   5a814:	add	r6, r2, r0
   5a818:	subs	r1, r1, #2
   5a81c:	vldr	s0, [r6]
   5a820:	vcvt.s32.f32	s0, s0
   5a824:	vmov	r6, s0
   5a828:	strh	r6, [r7]
   5a82c:	add	r6, r2, r4
   5a830:	add	r2, r2, r3
   5a834:	vldr	s0, [r6]
   5a838:	vcvt.s32.f32	s0, s0
   5a83c:	vmov	r6, s0
   5a840:	strh	r6, [r7, #2]
   5a844:	add	r7, r7, #4
   5a848:	bne	5a814 <GetDataSlab+0x2a894>
   5a84c:	str	r7, [sp, #88]	; 0x58
   5a850:	b	5a6d0 <GetDataSlab+0x2a750>
   5a854:	cmp	r7, #1
   5a858:	blt	5f88c <GetDataSlab+0x2f90c>
   5a85c:	ldr	r0, [sp, #56]	; 0x38
   5a860:	mov	r1, r8
   5a864:	and	ip, r5, #1
   5a868:	mov	r9, #0
   5a86c:	mla	r0, r0, r8, r6
   5a870:	add	r8, r3, r0, lsl #3
   5a874:	ldr	r0, [sp, #72]	; 0x48
   5a878:	sub	r3, r5, ip
   5a87c:	mul	r0, r0, r1
   5a880:	lsl	lr, r0, #3
   5a884:	ldr	r0, [sp, #68]	; 0x44
   5a888:	lsl	r6, r0, #4
   5a88c:	lsl	r4, r0, #3
   5a890:	cmp	r5, #1
   5a894:	bge	5a8b8 <GetDataSlab+0x2a938>
   5a898:	ldr	r1, [sp, #84]	; 0x54
   5a89c:	add	r9, r9, #1
   5a8a0:	add	r8, r8, lr
   5a8a4:	mov	r0, #0
   5a8a8:	cmp	r9, r1
   5a8ac:	beq	56c20 <GetDataSlab+0x26ca0>
   5a8b0:	cmp	r5, #1
   5a8b4:	blt	5a898 <GetDataSlab+0x2a918>
   5a8b8:	mov	r0, #0
   5a8bc:	beq	5a908 <GetDataSlab+0x2a988>
   5a8c0:	ldr	r2, [sp, #88]	; 0x58
   5a8c4:	mov	r0, #0
   5a8c8:	mov	r1, r8
   5a8cc:	vldr	d16, [r1]
   5a8d0:	add	r0, r0, #2
   5a8d4:	cmp	r3, r0
   5a8d8:	vcvt.s32.f64	s0, d16
   5a8dc:	vmov	r7, s0
   5a8e0:	strh	r7, [r2]
   5a8e4:	add	r7, r1, r4
   5a8e8:	add	r1, r1, r6
   5a8ec:	vldr	d16, [r7]
   5a8f0:	vcvt.s32.f64	s0, d16
   5a8f4:	vmov	r7, s0
   5a8f8:	strh	r7, [r2, #2]
   5a8fc:	add	r2, r2, #4
   5a900:	bne	5a8cc <GetDataSlab+0x2a94c>
   5a904:	str	r2, [sp, #88]	; 0x58
   5a908:	cmp	ip, #0
   5a90c:	beq	5a898 <GetDataSlab+0x2a918>
   5a910:	ldr	r1, [sp, #68]	; 0x44
   5a914:	mul	r0, r0, r1
   5a918:	add	r0, r8, r0, lsl #3
   5a91c:	vldr	d16, [r0]
   5a920:	vcvt.s32.f64	s0, d16
   5a924:	ldr	r1, [sp, #88]	; 0x58
   5a928:	vmov	r0, s0
   5a92c:	strh	r0, [r1], #2
   5a930:	str	r1, [sp, #88]	; 0x58
   5a934:	b	5a898 <GetDataSlab+0x2a918>
   5a938:	cmp	r7, #1
   5a93c:	blt	5f88c <GetDataSlab+0x2f90c>
   5a940:	ldr	r0, [sp, #56]	; 0x38
   5a944:	mov	r1, #1
   5a948:	mov	lr, #0
   5a94c:	mov	ip, r9
   5a950:	mla	r0, r0, r8, r6
   5a954:	add	sl, r3, r0, lsl #3
   5a958:	sub	r0, r5, #2
   5a95c:	add	r1, r1, r0, lsr #1
   5a960:	lsr	r0, r0, #1
   5a964:	str	r0, [sp, #44]	; 0x2c
   5a968:	and	r2, r1, #1
   5a96c:	sub	r1, r1, r2
   5a970:	str	r2, [sp, #52]	; 0x34
   5a974:	ldr	r2, [sp, #68]	; 0x44
   5a978:	str	r1, [sp, #32]
   5a97c:	subs	r1, r5, #1
   5a980:	movwne	r1, #1
   5a984:	mov	r3, r2
   5a988:	sub	r2, r2, #1
   5a98c:	clz	r2, r2
   5a990:	lsl	r4, r3, #5
   5a994:	lsr	r2, r2, #5
   5a998:	and	r6, r1, r2
   5a99c:	ldr	r1, [sp, #72]	; 0x48
   5a9a0:	lsl	r2, r3, #4
   5a9a4:	mul	r1, r1, r8
   5a9a8:	lsl	r7, r1, #3
   5a9ac:	lsl	r1, r3, #3
   5a9b0:	str	r1, [sp, #36]	; 0x24
   5a9b4:	and	r1, r5, #1
   5a9b8:	str	r7, [sp, #40]	; 0x28
   5a9bc:	str	r1, [sp, #92]	; 0x5c
   5a9c0:	bic	r1, r5, #1
   5a9c4:	str	r1, [sp, #48]	; 0x30
   5a9c8:	cmp	r5, #1
   5a9cc:	bge	5a9ec <GetDataSlab+0x2aa6c>
   5a9d0:	ldr	r0, [sp, #84]	; 0x54
   5a9d4:	add	lr, lr, #1
   5a9d8:	add	sl, sl, r7
   5a9dc:	cmp	lr, r0
   5a9e0:	beq	5ec54 <GetDataSlab+0x2ecd4>
   5a9e4:	cmp	r5, #1
   5a9e8:	blt	5a9d0 <GetDataSlab+0x2aa50>
   5a9ec:	mov	r1, #0
   5a9f0:	cmp	r6, #0
   5a9f4:	beq	5aa94 <GetDataSlab+0x2ab14>
   5a9f8:	ldr	r0, [sp, #44]	; 0x2c
   5a9fc:	mov	r1, #0
   5aa00:	cmp	r0, #0
   5aa04:	beq	5aa54 <GetDataSlab+0x2aad4>
   5aa08:	ldr	r9, [sp, #32]
   5aa0c:	mov	r0, sl
   5aa10:	mov	r3, ip
   5aa14:	mov	r8, sl
   5aa18:	vld1.64	{d16-d17}, [r8], r4
   5aa1c:	add	r0, r0, r2
   5aa20:	subs	r9, r9, #2
   5aa24:	add	r1, r1, #4
   5aa28:	vmovn.i64	d16, q8
   5aa2c:	vuzp.16	d16, d17
   5aa30:	vst1.32	{d16[0]}, [r3]
   5aa34:	vld1.64	{d16-d17}, [r0]
   5aa38:	add	r0, r3, #4
   5aa3c:	add	r3, r3, #8
   5aa40:	vmovn.i64	d16, q8
   5aa44:	vuzp.16	d16, d17
   5aa48:	vst1.32	{d16[0]}, [r0]
   5aa4c:	mov	r0, r8
   5aa50:	bne	5aa18 <GetDataSlab+0x2aa98>
   5aa54:	ldr	r0, [sp, #52]	; 0x34
   5aa58:	cmp	r0, #0
   5aa5c:	beq	5aa80 <GetDataSlab+0x2ab00>
   5aa60:	ldr	r0, [sp, #68]	; 0x44
   5aa64:	mul	r0, r1, r0
   5aa68:	add	r0, sl, r0, lsl #3
   5aa6c:	vld1.64	{d16-d17}, [r0]
   5aa70:	add	r0, ip, r1, lsl #1
   5aa74:	vmovn.i64	d16, q8
   5aa78:	vuzp.16	d16, d17
   5aa7c:	vst1.32	{d16[0]}, [r0]
   5aa80:	ldr	r1, [sp, #48]	; 0x30
   5aa84:	ldr	r8, [sp, #64]	; 0x40
   5aa88:	add	ip, ip, r1, lsl #1
   5aa8c:	cmp	r5, r1
   5aa90:	beq	5a9d0 <GetDataSlab+0x2aa50>
   5aa94:	ldr	r0, [sp, #92]	; 0x5c
   5aa98:	cmp	r0, #0
   5aa9c:	bne	5aaa8 <GetDataSlab+0x2ab28>
   5aaa0:	mov	r0, r1
   5aaa4:	b	5aac0 <GetDataSlab+0x2ab40>
   5aaa8:	ldr	r0, [sp, #68]	; 0x44
   5aaac:	mul	r0, r1, r0
   5aab0:	add	r0, sl, r0, lsl #3
   5aab4:	ldrh	r0, [r0]
   5aab8:	strh	r0, [ip], #2
   5aabc:	orr	r0, r1, #1
   5aac0:	orr	r1, r1, #1
   5aac4:	cmp	r5, r1
   5aac8:	beq	5a9d0 <GetDataSlab+0x2aa50>
   5aacc:	mov	r9, r6
   5aad0:	ldr	r6, [sp, #36]	; 0x24
   5aad4:	sub	r3, r5, r0
   5aad8:	mul	r1, r6, r0
   5aadc:	add	r0, r0, #1
   5aae0:	mul	r0, r6, r0
   5aae4:	mov	r6, sl
   5aae8:	add	r7, r6, r1
   5aaec:	subs	r3, r3, #2
   5aaf0:	ldrh	r7, [r7]
   5aaf4:	strh	r7, [ip]
   5aaf8:	add	r7, r6, r0
   5aafc:	add	r6, r6, r2
   5ab00:	ldrh	r7, [r7]
   5ab04:	strh	r7, [ip, #2]
   5ab08:	add	ip, ip, #4
   5ab0c:	bne	5aae8 <GetDataSlab+0x2ab68>
   5ab10:	ldr	r7, [sp, #40]	; 0x28
   5ab14:	mov	r6, r9
   5ab18:	b	5a9d0 <GetDataSlab+0x2aa50>
   5ab1c:	cmp	r7, #1
   5ab20:	blt	5f88c <GetDataSlab+0x2f90c>
   5ab24:	ldr	r2, [sp, #56]	; 0x38
   5ab28:	mov	r1, #1
   5ab2c:	cmp	r5, #7
   5ab30:	mla	r0, r2, r8, r6
   5ab34:	str	r0, [sp, #52]	; 0x34
   5ab38:	add	r0, r3, r0
   5ab3c:	str	r0, [sp, #92]	; 0x5c
   5ab40:	sub	r0, r5, #8
   5ab44:	add	r1, r1, r0, lsr #3
   5ab48:	lsr	r0, r0, #3
   5ab4c:	str	r0, [sp, #40]	; 0x28
   5ab50:	and	r3, r1, #1
   5ab54:	sub	r1, r1, r3
   5ab58:	str	r3, [sp, #48]	; 0x30
   5ab5c:	str	r1, [sp, #36]	; 0x24
   5ab60:	add	r1, r5, r6
   5ab64:	mla	r1, r2, r8, r1
   5ab68:	mov	r2, #0
   5ab6c:	str	r2, [sp, #76]	; 0x4c
   5ab70:	mov	r2, #0
   5ab74:	movwhi	r2, #1
   5ab78:	str	r1, [sp, #56]	; 0x38
   5ab7c:	ldr	r1, [sp, #72]	; 0x48
   5ab80:	mul	r1, r1, r8
   5ab84:	mov	r8, r9
   5ab88:	str	r1, [sp, #72]	; 0x48
   5ab8c:	ldr	r1, [sp, #68]	; 0x44
   5ab90:	mov	r3, r1
   5ab94:	sub	r1, r1, #1
   5ab98:	clz	r1, r1
   5ab9c:	lsr	r1, r1, #5
   5aba0:	and	r1, r2, r1
   5aba4:	lsl	r2, r3, #4
   5aba8:	str	r2, [sp, #32]
   5abac:	lsl	r2, r3, #3
   5abb0:	str	r1, [sp, #64]	; 0x40
   5abb4:	lsl	r1, r3, #1
   5abb8:	ldr	sl, [sp, #32]
   5abbc:	str	r2, [sp, #28]
   5abc0:	and	r2, r5, #1
   5abc4:	str	r2, [sp, #60]	; 0x3c
   5abc8:	bic	r2, r5, #7
   5abcc:	str	r2, [sp, #44]	; 0x2c
   5abd0:	cmp	r5, #1
   5abd4:	bge	5ac0c <GetDataSlab+0x2ac8c>
   5abd8:	ldr	ip, [sp, #72]	; 0x48
   5abdc:	ldr	lr, [sp, #92]	; 0x5c
   5abe0:	ldr	r7, [sp, #76]	; 0x4c
   5abe4:	ldr	r2, [sp, #84]	; 0x54
   5abe8:	add	r7, r7, #1
   5abec:	add	lr, lr, ip
   5abf0:	mov	r0, #0
   5abf4:	str	lr, [sp, #92]	; 0x5c
   5abf8:	str	r7, [sp, #76]	; 0x4c
   5abfc:	cmp	r7, r2
   5ac00:	beq	56c20 <GetDataSlab+0x26ca0>
   5ac04:	cmp	r5, #1
   5ac08:	blt	5abd8 <GetDataSlab+0x2ac58>
   5ac0c:	ldr	r2, [sp, #64]	; 0x40
   5ac10:	ldr	ip, [sp, #72]	; 0x48
   5ac14:	ldr	lr, [sp, #92]	; 0x5c
   5ac18:	ldr	r7, [sp, #76]	; 0x4c
   5ac1c:	mov	r0, #0
   5ac20:	cmp	r2, #0
   5ac24:	beq	5ad34 <GetDataSlab+0x2adb4>
   5ac28:	ldr	r2, [sp, #56]	; 0x38
   5ac2c:	ldr	r3, [sp, #80]	; 0x50
   5ac30:	mla	r2, ip, r7, r2
   5ac34:	add	r2, r3, r2
   5ac38:	cmp	r2, r8
   5ac3c:	bls	5ac58 <GetDataSlab+0x2acd8>
   5ac40:	ldr	r2, [sp, #52]	; 0x34
   5ac44:	add	r4, r8, r5, lsl #1
   5ac48:	mla	r2, ip, r7, r2
   5ac4c:	add	r2, r3, r2
   5ac50:	cmp	r2, r4
   5ac54:	bcc	5ad34 <GetDataSlab+0x2adb4>
   5ac58:	ldr	r0, [sp, #40]	; 0x28
   5ac5c:	cmp	r0, #0
   5ac60:	beq	5acd8 <GetDataSlab+0x2ad58>
   5ac64:	mov	r2, lr
   5ac68:	ldr	r4, [sp, #36]	; 0x24
   5ac6c:	ldr	lr, [sp, #28]
   5ac70:	mov	r0, #0
   5ac74:	mov	r9, r8
   5ac78:	ldr	r6, [r2]
   5ac7c:	ldr	ip, [r2, #4]
   5ac80:	add	r3, sp, #472	; 0x1d8
   5ac84:	subs	r4, r4, #2
   5ac88:	add	r0, r0, #16
   5ac8c:	str	r6, [sp, #472]	; 0x1d8
   5ac90:	str	ip, [sp, #476]	; 0x1dc
   5ac94:	add	r6, r9, #16
   5ac98:	vld1.8	{d16}, [r3 :64]
   5ac9c:	mov	r3, #32
   5aca0:	vmovl.u8	q8, d16
   5aca4:	vst1.16	{d16-d17}, [r9], r3
   5aca8:	add	r3, r2, sl
   5acac:	ldr	r7, [r2, lr]!
   5acb0:	str	r7, [sp, #480]	; 0x1e0
   5acb4:	ldr	r2, [r2, #4]
   5acb8:	str	r2, [sp, #484]	; 0x1e4
   5acbc:	add	r2, sp, #480	; 0x1e0
   5acc0:	vld1.8	{d16}, [r2 :64]
   5acc4:	mov	r2, r3
   5acc8:	vmovl.u8	q8, d16
   5accc:	vst1.16	{d16-d17}, [r6]
   5acd0:	bne	5ac78 <GetDataSlab+0x2acf8>
   5acd4:	b	5acdc <GetDataSlab+0x2ad5c>
   5acd8:	mov	r0, #0
   5acdc:	ldr	r2, [sp, #48]	; 0x30
   5ace0:	ldr	lr, [sp, #92]	; 0x5c
   5ace4:	ldr	r7, [sp, #76]	; 0x4c
   5ace8:	cmp	r2, #0
   5acec:	beq	5ad20 <GetDataSlab+0x2ada0>
   5acf0:	ldr	r2, [sp, #68]	; 0x44
   5acf4:	mov	r3, lr
   5acf8:	mul	r2, r0, r2
   5acfc:	add	r0, r8, r0, lsl #1
   5ad00:	ldr	r2, [r3, r2]!
   5ad04:	str	r2, [sp, #464]	; 0x1d0
   5ad08:	ldr	r2, [r3, #4]
   5ad0c:	str	r2, [sp, #468]	; 0x1d4
   5ad10:	add	r2, sp, #464	; 0x1d0
   5ad14:	vld1.8	{d16}, [r2 :64]
   5ad18:	vmovl.u8	q8, d16
   5ad1c:	vst1.16	{d16-d17}, [r0]
   5ad20:	ldr	r0, [sp, #44]	; 0x2c
   5ad24:	ldr	ip, [sp, #72]	; 0x48
   5ad28:	add	r8, r8, r0, lsl #1
   5ad2c:	cmp	r5, r0
   5ad30:	beq	5abe4 <GetDataSlab+0x2ac64>
   5ad34:	ldr	r2, [sp, #60]	; 0x3c
   5ad38:	cmp	r2, #0
   5ad3c:	bne	5ad48 <GetDataSlab+0x2adc8>
   5ad40:	mov	r4, r0
   5ad44:	b	5ad5c <GetDataSlab+0x2addc>
   5ad48:	ldr	r2, [sp, #68]	; 0x44
   5ad4c:	orr	r4, r0, #1
   5ad50:	mul	r2, r0, r2
   5ad54:	ldrb	r2, [lr, r2]
   5ad58:	strh	r2, [r8], #2
   5ad5c:	orr	r0, r0, #1
   5ad60:	cmp	r5, r0
   5ad64:	beq	5abe4 <GetDataSlab+0x2ac64>
   5ad68:	ldr	r6, [sp, #68]	; 0x44
   5ad6c:	add	r3, r4, #1
   5ad70:	sub	r2, r5, r4
   5ad74:	mul	r0, r6, r4
   5ad78:	mul	r4, r6, r3
   5ad7c:	mov	r6, lr
   5ad80:	ldrb	r3, [r6, r0]
   5ad84:	subs	r2, r2, #2
   5ad88:	strh	r3, [r8]
   5ad8c:	ldrb	r3, [r6, r4]
   5ad90:	add	r6, r6, r1
   5ad94:	strh	r3, [r8, #2]
   5ad98:	add	r8, r8, #4
   5ad9c:	bne	5ad80 <GetDataSlab+0x2ae00>
   5ada0:	b	5abe4 <GetDataSlab+0x2ac64>
   5ada4:	cmp	r7, #1
   5ada8:	blt	5f88c <GetDataSlab+0x2f90c>
   5adac:	ldr	r0, [sp, #56]	; 0x38
   5adb0:	mov	r2, #1
   5adb4:	cmp	r5, #7
   5adb8:	mov	r7, r8
   5adbc:	mov	ip, #0
   5adc0:	mov	lr, r9
   5adc4:	mla	r0, r0, r8, r6
   5adc8:	add	r1, r3, r0, lsl #1
   5adcc:	str	r1, [sp, #92]	; 0x5c
   5add0:	lsl	r1, r5, #1
   5add4:	add	r1, r1, r0, lsl #1
   5add8:	lsl	r0, r0, #1
   5addc:	str	r0, [sp, #52]	; 0x34
   5ade0:	ldr	r0, [sp, #68]	; 0x44
   5ade4:	str	r1, [sp, #56]	; 0x38
   5ade8:	sub	r1, r5, #8
   5adec:	add	r2, r2, r1, lsr #3
   5adf0:	and	r3, r2, #1
   5adf4:	sub	r2, r2, r3
   5adf8:	str	r3, [sp, #48]	; 0x30
   5adfc:	mov	r3, r0
   5ae00:	sub	r0, r0, #1
   5ae04:	clz	r0, r0
   5ae08:	str	r2, [sp, #36]	; 0x24
   5ae0c:	mov	r2, #0
   5ae10:	movwhi	r2, #1
   5ae14:	lsl	r6, r3, #2
   5ae18:	lsr	r0, r0, #5
   5ae1c:	and	r0, r2, r0
   5ae20:	str	r0, [sp, #60]	; 0x3c
   5ae24:	ldr	r0, [sp, #72]	; 0x48
   5ae28:	mul	r0, r0, r8
   5ae2c:	lsl	r0, r0, #1
   5ae30:	str	r0, [sp, #76]	; 0x4c
   5ae34:	lsl	r0, r3, #1
   5ae38:	str	r0, [sp, #64]	; 0x40
   5ae3c:	lsl	r0, r3, #5
   5ae40:	str	r0, [sp, #32]
   5ae44:	lsl	r0, r3, #4
   5ae48:	str	r0, [sp, #28]
   5ae4c:	and	r0, r5, #1
   5ae50:	ldr	r8, [sp, #28]
   5ae54:	str	r0, [sp, #72]	; 0x48
   5ae58:	bic	r0, r5, #7
   5ae5c:	str	r0, [sp, #44]	; 0x2c
   5ae60:	lsr	r0, r1, #3
   5ae64:	str	r0, [sp, #40]	; 0x28
   5ae68:	cmp	r5, #1
   5ae6c:	bge	5ae9c <GetDataSlab+0x2af1c>
   5ae70:	ldr	r9, [sp, #76]	; 0x4c
   5ae74:	ldr	r4, [sp, #92]	; 0x5c
   5ae78:	ldr	r1, [sp, #84]	; 0x54
   5ae7c:	add	ip, ip, #1
   5ae80:	add	r4, r4, r9
   5ae84:	mov	r0, #0
   5ae88:	str	r4, [sp, #92]	; 0x5c
   5ae8c:	cmp	ip, r1
   5ae90:	beq	56c20 <GetDataSlab+0x26ca0>
   5ae94:	cmp	r5, #1
   5ae98:	blt	5ae70 <GetDataSlab+0x2aef0>
   5ae9c:	ldr	r1, [sp, #60]	; 0x3c
   5aea0:	ldr	r9, [sp, #76]	; 0x4c
   5aea4:	ldr	r4, [sp, #92]	; 0x5c
   5aea8:	mov	r0, #0
   5aeac:	cmp	r1, #0
   5aeb0:	beq	5af70 <GetDataSlab+0x2aff0>
   5aeb4:	ldr	r1, [sp, #56]	; 0x38
   5aeb8:	ldr	r2, [sp, #80]	; 0x50
   5aebc:	mla	r1, r9, ip, r1
   5aec0:	add	r1, r2, r1
   5aec4:	cmp	r1, lr
   5aec8:	bls	5aee4 <GetDataSlab+0x2af64>
   5aecc:	ldr	r1, [sp, #52]	; 0x34
   5aed0:	add	r3, lr, r5, lsl #1
   5aed4:	mla	r1, r9, ip, r1
   5aed8:	add	r1, r2, r1
   5aedc:	cmp	r1, r3
   5aee0:	bcc	5af70 <GetDataSlab+0x2aff0>
   5aee4:	ldr	r0, [sp, #40]	; 0x28
   5aee8:	cmp	r0, #0
   5aeec:	beq	5af30 <GetDataSlab+0x2afb0>
   5aef0:	ldr	r7, [sp, #36]	; 0x24
   5aef4:	ldr	r2, [sp, #32]
   5aef8:	mov	r1, r4
   5aefc:	mov	r0, #0
   5af00:	mov	sl, lr
   5af04:	mov	r4, #32
   5af08:	add	r3, r1, r8
   5af0c:	vld1.16	{d16-d17}, [r1], r2
   5af10:	add	r9, sl, #16
   5af14:	subs	r7, r7, #2
   5af18:	add	r0, r0, #16
   5af1c:	vst1.16	{d16-d17}, [sl], r4
   5af20:	vld1.16	{d16-d17}, [r3]
   5af24:	vst1.16	{d16-d17}, [r9]
   5af28:	bne	5af08 <GetDataSlab+0x2af88>
   5af2c:	b	5af34 <GetDataSlab+0x2afb4>
   5af30:	mov	r0, #0
   5af34:	ldr	r1, [sp, #48]	; 0x30
   5af38:	ldr	r4, [sp, #92]	; 0x5c
   5af3c:	cmp	r1, #0
   5af40:	beq	5af5c <GetDataSlab+0x2afdc>
   5af44:	ldr	r1, [sp, #68]	; 0x44
   5af48:	mul	r1, r0, r1
   5af4c:	add	r0, lr, r0, lsl #1
   5af50:	add	r1, r4, r1, lsl #1
   5af54:	vld1.16	{d16-d17}, [r1]
   5af58:	vst1.16	{d16-d17}, [r0]
   5af5c:	ldr	r0, [sp, #44]	; 0x2c
   5af60:	ldr	r9, [sp, #76]	; 0x4c
   5af64:	add	lr, lr, r0, lsl #1
   5af68:	cmp	r5, r0
   5af6c:	beq	5ae78 <GetDataSlab+0x2aef8>
   5af70:	ldr	r1, [sp, #72]	; 0x48
   5af74:	cmp	r1, #0
   5af78:	bne	5af84 <GetDataSlab+0x2b004>
   5af7c:	mov	r3, r0
   5af80:	b	5af9c <GetDataSlab+0x2b01c>
   5af84:	ldr	r1, [sp, #68]	; 0x44
   5af88:	orr	r3, r0, #1
   5af8c:	mul	r1, r0, r1
   5af90:	add	r1, r4, r1, lsl #1
   5af94:	ldrh	r1, [r1]
   5af98:	strh	r1, [lr], #2
   5af9c:	orr	r0, r0, #1
   5afa0:	cmp	r5, r0
   5afa4:	beq	5ae78 <GetDataSlab+0x2aef8>
   5afa8:	ldr	r2, [sp, #64]	; 0x40
   5afac:	sub	r1, r5, r3
   5afb0:	mul	r0, r2, r3
   5afb4:	add	r3, r3, #1
   5afb8:	mul	r7, r2, r3
   5afbc:	mov	r3, r4
   5afc0:	add	r2, r3, r0
   5afc4:	subs	r1, r1, #2
   5afc8:	ldrh	r2, [r2]
   5afcc:	strh	r2, [lr]
   5afd0:	add	r2, r3, r7
   5afd4:	add	r3, r3, r6
   5afd8:	ldrh	r2, [r2]
   5afdc:	strh	r2, [lr, #2]
   5afe0:	add	lr, lr, #4
   5afe4:	bne	5afc0 <GetDataSlab+0x2b040>
   5afe8:	b	5ae78 <GetDataSlab+0x2aef8>
   5afec:	cmp	r7, #1
   5aff0:	blt	5f88c <GetDataSlab+0x2f90c>
   5aff4:	ldr	r0, [sp, #56]	; 0x38
   5aff8:	mov	r2, #1
   5affc:	cmp	r5, #7
   5b000:	mov	r7, r8
   5b004:	mov	ip, #0
   5b008:	mov	lr, r9
   5b00c:	mla	r0, r0, r8, r6
   5b010:	add	r1, r3, r0, lsl #1
   5b014:	str	r1, [sp, #92]	; 0x5c
   5b018:	lsl	r1, r5, #1
   5b01c:	add	r1, r1, r0, lsl #1
   5b020:	lsl	r0, r0, #1
   5b024:	str	r0, [sp, #52]	; 0x34
   5b028:	ldr	r0, [sp, #68]	; 0x44
   5b02c:	str	r1, [sp, #56]	; 0x38
   5b030:	sub	r1, r5, #8
   5b034:	add	r2, r2, r1, lsr #3
   5b038:	and	r3, r2, #1
   5b03c:	sub	r2, r2, r3
   5b040:	str	r3, [sp, #48]	; 0x30
   5b044:	mov	r3, r0
   5b048:	sub	r0, r0, #1
   5b04c:	clz	r0, r0
   5b050:	str	r2, [sp, #36]	; 0x24
   5b054:	mov	r2, #0
   5b058:	movwhi	r2, #1
   5b05c:	lsl	r6, r3, #2
   5b060:	lsr	r0, r0, #5
   5b064:	and	r0, r2, r0
   5b068:	str	r0, [sp, #60]	; 0x3c
   5b06c:	ldr	r0, [sp, #72]	; 0x48
   5b070:	mul	r0, r0, r8
   5b074:	lsl	r0, r0, #1
   5b078:	str	r0, [sp, #76]	; 0x4c
   5b07c:	lsl	r0, r3, #1
   5b080:	str	r0, [sp, #64]	; 0x40
   5b084:	lsl	r0, r3, #5
   5b088:	str	r0, [sp, #32]
   5b08c:	lsl	r0, r3, #4
   5b090:	str	r0, [sp, #28]
   5b094:	and	r0, r5, #1
   5b098:	ldr	r8, [sp, #28]
   5b09c:	str	r0, [sp, #72]	; 0x48
   5b0a0:	bic	r0, r5, #7
   5b0a4:	str	r0, [sp, #44]	; 0x2c
   5b0a8:	lsr	r0, r1, #3
   5b0ac:	str	r0, [sp, #40]	; 0x28
   5b0b0:	cmp	r5, #1
   5b0b4:	bge	5b0e4 <GetDataSlab+0x2b164>
   5b0b8:	ldr	r9, [sp, #76]	; 0x4c
   5b0bc:	ldr	r4, [sp, #92]	; 0x5c
   5b0c0:	ldr	r1, [sp, #84]	; 0x54
   5b0c4:	add	ip, ip, #1
   5b0c8:	add	r4, r4, r9
   5b0cc:	mov	r0, #0
   5b0d0:	str	r4, [sp, #92]	; 0x5c
   5b0d4:	cmp	ip, r1
   5b0d8:	beq	56c20 <GetDataSlab+0x26ca0>
   5b0dc:	cmp	r5, #1
   5b0e0:	blt	5b0b8 <GetDataSlab+0x2b138>
   5b0e4:	ldr	r1, [sp, #60]	; 0x3c
   5b0e8:	ldr	r9, [sp, #76]	; 0x4c
   5b0ec:	ldr	r4, [sp, #92]	; 0x5c
   5b0f0:	mov	r0, #0
   5b0f4:	cmp	r1, #0
   5b0f8:	beq	5b1b8 <GetDataSlab+0x2b238>
   5b0fc:	ldr	r1, [sp, #56]	; 0x38
   5b100:	ldr	r2, [sp, #80]	; 0x50
   5b104:	mla	r1, r9, ip, r1
   5b108:	add	r1, r2, r1
   5b10c:	cmp	r1, lr
   5b110:	bls	5b12c <GetDataSlab+0x2b1ac>
   5b114:	ldr	r1, [sp, #52]	; 0x34
   5b118:	add	r3, lr, r5, lsl #1
   5b11c:	mla	r1, r9, ip, r1
   5b120:	add	r1, r2, r1
   5b124:	cmp	r1, r3
   5b128:	bcc	5b1b8 <GetDataSlab+0x2b238>
   5b12c:	ldr	r0, [sp, #40]	; 0x28
   5b130:	cmp	r0, #0
   5b134:	beq	5b178 <GetDataSlab+0x2b1f8>
   5b138:	ldr	r7, [sp, #36]	; 0x24
   5b13c:	ldr	r2, [sp, #32]
   5b140:	mov	r1, r4
   5b144:	mov	r0, #0
   5b148:	mov	sl, lr
   5b14c:	mov	r4, #32
   5b150:	add	r3, r1, r8
   5b154:	vld1.16	{d16-d17}, [r1], r2
   5b158:	add	r9, sl, #16
   5b15c:	subs	r7, r7, #2
   5b160:	add	r0, r0, #16
   5b164:	vst1.16	{d16-d17}, [sl], r4
   5b168:	vld1.16	{d16-d17}, [r3]
   5b16c:	vst1.16	{d16-d17}, [r9]
   5b170:	bne	5b150 <GetDataSlab+0x2b1d0>
   5b174:	b	5b17c <GetDataSlab+0x2b1fc>
   5b178:	mov	r0, #0
   5b17c:	ldr	r1, [sp, #48]	; 0x30
   5b180:	ldr	r4, [sp, #92]	; 0x5c
   5b184:	cmp	r1, #0
   5b188:	beq	5b1a4 <GetDataSlab+0x2b224>
   5b18c:	ldr	r1, [sp, #68]	; 0x44
   5b190:	mul	r1, r0, r1
   5b194:	add	r0, lr, r0, lsl #1
   5b198:	add	r1, r4, r1, lsl #1
   5b19c:	vld1.16	{d16-d17}, [r1]
   5b1a0:	vst1.16	{d16-d17}, [r0]
   5b1a4:	ldr	r0, [sp, #44]	; 0x2c
   5b1a8:	ldr	r9, [sp, #76]	; 0x4c
   5b1ac:	add	lr, lr, r0, lsl #1
   5b1b0:	cmp	r5, r0
   5b1b4:	beq	5b0c0 <GetDataSlab+0x2b140>
   5b1b8:	ldr	r1, [sp, #72]	; 0x48
   5b1bc:	cmp	r1, #0
   5b1c0:	bne	5b1cc <GetDataSlab+0x2b24c>
   5b1c4:	mov	r3, r0
   5b1c8:	b	5b1e4 <GetDataSlab+0x2b264>
   5b1cc:	ldr	r1, [sp, #68]	; 0x44
   5b1d0:	orr	r3, r0, #1
   5b1d4:	mul	r1, r0, r1
   5b1d8:	add	r1, r4, r1, lsl #1
   5b1dc:	ldrh	r1, [r1]
   5b1e0:	strh	r1, [lr], #2
   5b1e4:	orr	r0, r0, #1
   5b1e8:	cmp	r5, r0
   5b1ec:	beq	5b0c0 <GetDataSlab+0x2b140>
   5b1f0:	ldr	r2, [sp, #64]	; 0x40
   5b1f4:	sub	r1, r5, r3
   5b1f8:	mul	r0, r2, r3
   5b1fc:	add	r3, r3, #1
   5b200:	mul	r7, r2, r3
   5b204:	mov	r3, r4
   5b208:	add	r2, r3, r0
   5b20c:	subs	r1, r1, #2
   5b210:	ldrh	r2, [r2]
   5b214:	strh	r2, [lr]
   5b218:	add	r2, r3, r7
   5b21c:	add	r3, r3, r6
   5b220:	ldrh	r2, [r2]
   5b224:	strh	r2, [lr, #2]
   5b228:	add	lr, lr, #4
   5b22c:	bne	5b208 <GetDataSlab+0x2b288>
   5b230:	b	5b0c0 <GetDataSlab+0x2b140>
   5b234:	cmp	r7, #1
   5b238:	blt	5f88c <GetDataSlab+0x2f90c>
   5b23c:	ldr	r0, [sp, #56]	; 0x38
   5b240:	mov	r1, #1
   5b244:	cmp	r5, #3
   5b248:	mla	r0, r0, r8, r6
   5b24c:	add	r0, r3, r0, lsl #2
   5b250:	str	r0, [sp, #92]	; 0x5c
   5b254:	sub	r0, r5, #4
   5b258:	add	r1, r1, r0, lsr #2
   5b25c:	lsr	r0, r0, #2
   5b260:	str	r0, [sp, #52]	; 0x34
   5b264:	and	r2, r1, #1
   5b268:	sub	r1, r1, r2
   5b26c:	str	r2, [sp, #56]	; 0x38
   5b270:	mov	r2, #0
   5b274:	str	r1, [sp, #44]	; 0x2c
   5b278:	ldr	r1, [sp, #68]	; 0x44
   5b27c:	str	r2, [sp, #80]	; 0x50
   5b280:	mov	r2, #0
   5b284:	movwhi	r2, #1
   5b288:	mov	r6, r1
   5b28c:	sub	r1, r1, #1
   5b290:	clz	r1, r1
   5b294:	lsl	r3, r6, #3
   5b298:	lsr	r1, r1, #5
   5b29c:	and	r1, r2, r1
   5b2a0:	str	r1, [sp, #60]	; 0x3c
   5b2a4:	ldr	r1, [sp, #72]	; 0x48
   5b2a8:	mul	r1, r1, r8
   5b2ac:	mov	r8, #16
   5b2b0:	lsl	r1, r1, #2
   5b2b4:	str	r1, [sp, #76]	; 0x4c
   5b2b8:	lsl	r1, r6, #2
   5b2bc:	str	r1, [sp, #48]	; 0x30
   5b2c0:	lsl	r1, r6, #5
   5b2c4:	str	r1, [sp, #40]	; 0x28
   5b2c8:	lsl	r1, r6, #4
   5b2cc:	str	r1, [sp, #36]	; 0x24
   5b2d0:	ldr	sl, [sp, #40]	; 0x28
   5b2d4:	and	r1, r5, #1
   5b2d8:	ldr	r7, [sp, #36]	; 0x24
   5b2dc:	str	r1, [sp, #72]	; 0x48
   5b2e0:	bic	r1, r5, #3
   5b2e4:	str	r1, [sp, #64]	; 0x40
   5b2e8:	cmp	r5, #1
   5b2ec:	bge	5b324 <GetDataSlab+0x2b3a4>
   5b2f0:	ldr	ip, [sp, #84]	; 0x54
   5b2f4:	ldr	r6, [sp, #92]	; 0x5c
   5b2f8:	ldr	r1, [sp, #80]	; 0x50
   5b2fc:	ldr	r0, [sp, #76]	; 0x4c
   5b300:	add	r1, r1, #1
   5b304:	add	r6, r6, r0
   5b308:	mov	r0, #0
   5b30c:	cmp	r1, ip
   5b310:	str	r6, [sp, #92]	; 0x5c
   5b314:	str	r1, [sp, #80]	; 0x50
   5b318:	beq	56c20 <GetDataSlab+0x26ca0>
   5b31c:	cmp	r5, #1
   5b320:	blt	5b2f0 <GetDataSlab+0x2b370>
   5b324:	ldr	r1, [sp, #60]	; 0x3c
   5b328:	ldr	ip, [sp, #84]	; 0x54
   5b32c:	ldr	r6, [sp, #92]	; 0x5c
   5b330:	mov	r0, #0
   5b334:	cmp	r1, #0
   5b338:	beq	5b3c8 <GetDataSlab+0x2b448>
   5b33c:	ldr	r0, [sp, #52]	; 0x34
   5b340:	cmp	r0, #0
   5b344:	beq	5b388 <GetDataSlab+0x2b408>
   5b348:	ldr	ip, [sp, #44]	; 0x2c
   5b34c:	mov	r0, #0
   5b350:	mov	r1, r6
   5b354:	mov	lr, r9
   5b358:	add	r2, r1, r7
   5b35c:	vld1.32	{d16-d17}, [r1], sl
   5b360:	add	r4, lr, #8
   5b364:	subs	ip, ip, #2
   5b368:	add	r0, r0, #8
   5b36c:	vmovn.i32	d16, q8
   5b370:	vst1.16	{d16}, [lr], r8
   5b374:	vld1.32	{d16-d17}, [r2]
   5b378:	vmovn.i32	d16, q8
   5b37c:	vst1.16	{d16}, [r4]
   5b380:	bne	5b358 <GetDataSlab+0x2b3d8>
   5b384:	b	5b38c <GetDataSlab+0x2b40c>
   5b388:	mov	r0, #0
   5b38c:	ldr	r1, [sp, #56]	; 0x38
   5b390:	cmp	r1, #0
   5b394:	beq	5b3b4 <GetDataSlab+0x2b434>
   5b398:	ldr	r1, [sp, #68]	; 0x44
   5b39c:	mul	r1, r0, r1
   5b3a0:	add	r0, r9, r0, lsl #1
   5b3a4:	add	r1, r6, r1, lsl #2
   5b3a8:	vld1.32	{d16-d17}, [r1]
   5b3ac:	vmovn.i32	d16, q8
   5b3b0:	vst1.16	{d16}, [r0]
   5b3b4:	ldr	r0, [sp, #64]	; 0x40
   5b3b8:	ldr	ip, [sp, #84]	; 0x54
   5b3bc:	add	r9, r9, r0, lsl #1
   5b3c0:	cmp	r5, r0
   5b3c4:	beq	5b2f8 <GetDataSlab+0x2b378>
   5b3c8:	ldr	r1, [sp, #72]	; 0x48
   5b3cc:	cmp	r1, #0
   5b3d0:	bne	5b3dc <GetDataSlab+0x2b45c>
   5b3d4:	mov	r4, r0
   5b3d8:	b	5b3f0 <GetDataSlab+0x2b470>
   5b3dc:	ldr	r1, [sp, #68]	; 0x44
   5b3e0:	orr	r4, r0, #1
   5b3e4:	mul	r1, r0, r1
   5b3e8:	ldr	r1, [r6, r1, lsl #2]
   5b3ec:	strh	r1, [r9], #2
   5b3f0:	orr	r0, r0, #1
   5b3f4:	cmp	r5, r0
   5b3f8:	beq	5b2f8 <GetDataSlab+0x2b378>
   5b3fc:	ldr	lr, [sp, #48]	; 0x30
   5b400:	add	r2, r4, #1
   5b404:	sub	r1, r5, r4
   5b408:	mul	r0, lr, r4
   5b40c:	mul	r4, lr, r2
   5b410:	mov	r2, r6
   5b414:	ldr	r6, [r2, r0]
   5b418:	subs	r1, r1, #2
   5b41c:	strh	r6, [r9]
   5b420:	ldr	r6, [r2, r4]
   5b424:	add	r2, r2, r3
   5b428:	strh	r6, [r9, #2]
   5b42c:	add	r9, r9, #4
   5b430:	bne	5b414 <GetDataSlab+0x2b494>
   5b434:	b	5b2f4 <GetDataSlab+0x2b374>
   5b438:	cmp	r7, #1
   5b43c:	blt	5f88c <GetDataSlab+0x2f90c>
   5b440:	ldr	r0, [sp, #56]	; 0x38
   5b444:	mov	r1, #1
   5b448:	cmp	r5, #3
   5b44c:	mla	r0, r0, r8, r6
   5b450:	add	r0, r3, r0, lsl #2
   5b454:	str	r0, [sp, #92]	; 0x5c
   5b458:	sub	r0, r5, #4
   5b45c:	add	r1, r1, r0, lsr #2
   5b460:	lsr	r0, r0, #2
   5b464:	str	r0, [sp, #52]	; 0x34
   5b468:	and	r2, r1, #1
   5b46c:	sub	r1, r1, r2
   5b470:	str	r2, [sp, #56]	; 0x38
   5b474:	mov	r2, #0
   5b478:	str	r1, [sp, #44]	; 0x2c
   5b47c:	ldr	r1, [sp, #68]	; 0x44
   5b480:	str	r2, [sp, #80]	; 0x50
   5b484:	mov	r2, #0
   5b488:	movwhi	r2, #1
   5b48c:	mov	r6, r1
   5b490:	sub	r1, r1, #1
   5b494:	clz	r1, r1
   5b498:	lsl	r3, r6, #3
   5b49c:	lsr	r1, r1, #5
   5b4a0:	and	r1, r2, r1
   5b4a4:	str	r1, [sp, #60]	; 0x3c
   5b4a8:	ldr	r1, [sp, #72]	; 0x48
   5b4ac:	mul	r1, r1, r8
   5b4b0:	mov	r8, #16
   5b4b4:	lsl	r1, r1, #2
   5b4b8:	str	r1, [sp, #76]	; 0x4c
   5b4bc:	lsl	r1, r6, #2
   5b4c0:	str	r1, [sp, #48]	; 0x30
   5b4c4:	lsl	r1, r6, #5
   5b4c8:	str	r1, [sp, #40]	; 0x28
   5b4cc:	lsl	r1, r6, #4
   5b4d0:	str	r1, [sp, #36]	; 0x24
   5b4d4:	ldr	sl, [sp, #40]	; 0x28
   5b4d8:	and	r1, r5, #1
   5b4dc:	ldr	r7, [sp, #36]	; 0x24
   5b4e0:	str	r1, [sp, #72]	; 0x48
   5b4e4:	bic	r1, r5, #3
   5b4e8:	str	r1, [sp, #64]	; 0x40
   5b4ec:	cmp	r5, #1
   5b4f0:	bge	5b528 <GetDataSlab+0x2b5a8>
   5b4f4:	ldr	ip, [sp, #84]	; 0x54
   5b4f8:	ldr	r6, [sp, #92]	; 0x5c
   5b4fc:	ldr	r1, [sp, #80]	; 0x50
   5b500:	ldr	r0, [sp, #76]	; 0x4c
   5b504:	add	r1, r1, #1
   5b508:	add	r6, r6, r0
   5b50c:	mov	r0, #0
   5b510:	cmp	r1, ip
   5b514:	str	r6, [sp, #92]	; 0x5c
   5b518:	str	r1, [sp, #80]	; 0x50
   5b51c:	beq	56c20 <GetDataSlab+0x26ca0>
   5b520:	cmp	r5, #1
   5b524:	blt	5b4f4 <GetDataSlab+0x2b574>
   5b528:	ldr	r1, [sp, #60]	; 0x3c
   5b52c:	ldr	ip, [sp, #84]	; 0x54
   5b530:	ldr	r6, [sp, #92]	; 0x5c
   5b534:	mov	r0, #0
   5b538:	cmp	r1, #0
   5b53c:	beq	5b5cc <GetDataSlab+0x2b64c>
   5b540:	ldr	r0, [sp, #52]	; 0x34
   5b544:	cmp	r0, #0
   5b548:	beq	5b58c <GetDataSlab+0x2b60c>
   5b54c:	ldr	ip, [sp, #44]	; 0x2c
   5b550:	mov	r0, #0
   5b554:	mov	r1, r6
   5b558:	mov	lr, r9
   5b55c:	add	r2, r1, r7
   5b560:	vld1.32	{d16-d17}, [r1], sl
   5b564:	add	r4, lr, #8
   5b568:	subs	ip, ip, #2
   5b56c:	add	r0, r0, #8
   5b570:	vmovn.i32	d16, q8
   5b574:	vst1.16	{d16}, [lr], r8
   5b578:	vld1.32	{d16-d17}, [r2]
   5b57c:	vmovn.i32	d16, q8
   5b580:	vst1.16	{d16}, [r4]
   5b584:	bne	5b55c <GetDataSlab+0x2b5dc>
   5b588:	b	5b590 <GetDataSlab+0x2b610>
   5b58c:	mov	r0, #0
   5b590:	ldr	r1, [sp, #56]	; 0x38
   5b594:	cmp	r1, #0
   5b598:	beq	5b5b8 <GetDataSlab+0x2b638>
   5b59c:	ldr	r1, [sp, #68]	; 0x44
   5b5a0:	mul	r1, r0, r1
   5b5a4:	add	r0, r9, r0, lsl #1
   5b5a8:	add	r1, r6, r1, lsl #2
   5b5ac:	vld1.32	{d16-d17}, [r1]
   5b5b0:	vmovn.i32	d16, q8
   5b5b4:	vst1.16	{d16}, [r0]
   5b5b8:	ldr	r0, [sp, #64]	; 0x40
   5b5bc:	ldr	ip, [sp, #84]	; 0x54
   5b5c0:	add	r9, r9, r0, lsl #1
   5b5c4:	cmp	r5, r0
   5b5c8:	beq	5b4fc <GetDataSlab+0x2b57c>
   5b5cc:	ldr	r1, [sp, #72]	; 0x48
   5b5d0:	cmp	r1, #0
   5b5d4:	bne	5b5e0 <GetDataSlab+0x2b660>
   5b5d8:	mov	r4, r0
   5b5dc:	b	5b5f4 <GetDataSlab+0x2b674>
   5b5e0:	ldr	r1, [sp, #68]	; 0x44
   5b5e4:	orr	r4, r0, #1
   5b5e8:	mul	r1, r0, r1
   5b5ec:	ldr	r1, [r6, r1, lsl #2]
   5b5f0:	strh	r1, [r9], #2
   5b5f4:	orr	r0, r0, #1
   5b5f8:	cmp	r5, r0
   5b5fc:	beq	5b4fc <GetDataSlab+0x2b57c>
   5b600:	ldr	lr, [sp, #48]	; 0x30
   5b604:	add	r2, r4, #1
   5b608:	sub	r1, r5, r4
   5b60c:	mul	r0, lr, r4
   5b610:	mul	r4, lr, r2
   5b614:	mov	r2, r6
   5b618:	ldr	r6, [r2, r0]
   5b61c:	subs	r1, r1, #2
   5b620:	strh	r6, [r9]
   5b624:	ldr	r6, [r2, r4]
   5b628:	add	r2, r2, r3
   5b62c:	strh	r6, [r9, #2]
   5b630:	add	r9, r9, #4
   5b634:	bne	5b618 <GetDataSlab+0x2b698>
   5b638:	b	5b4f8 <GetDataSlab+0x2b578>
   5b63c:	cmp	r7, #1
   5b640:	blt	5f88c <GetDataSlab+0x2f90c>
   5b644:	ldr	r0, [sp, #56]	; 0x38
   5b648:	mov	r7, r8
   5b64c:	mov	r1, #1
   5b650:	cmp	r5, #3
   5b654:	mov	sl, #16
   5b658:	mla	r0, r0, r8, r6
   5b65c:	add	r8, r3, r0, lsl #2
   5b660:	sub	r0, r5, #4
   5b664:	add	r1, r1, r0, lsr #2
   5b668:	lsr	r0, r0, #2
   5b66c:	str	r0, [sp, #52]	; 0x34
   5b670:	and	r2, r1, #1
   5b674:	sub	r1, r1, r2
   5b678:	str	r2, [sp, #60]	; 0x3c
   5b67c:	mov	r2, #0
   5b680:	str	r1, [sp, #44]	; 0x2c
   5b684:	ldr	r1, [sp, #68]	; 0x44
   5b688:	str	r2, [sp, #92]	; 0x5c
   5b68c:	mov	r2, #0
   5b690:	movwhi	r2, #1
   5b694:	mov	r6, r1
   5b698:	sub	r1, r1, #1
   5b69c:	clz	r1, r1
   5b6a0:	lsl	r3, r6, #3
   5b6a4:	lsr	r1, r1, #5
   5b6a8:	and	r1, r2, r1
   5b6ac:	str	r1, [sp, #76]	; 0x4c
   5b6b0:	ldr	r1, [sp, #72]	; 0x48
   5b6b4:	mul	r1, r1, r7
   5b6b8:	lsl	r1, r1, #2
   5b6bc:	str	r1, [sp, #80]	; 0x50
   5b6c0:	lsl	r1, r6, #2
   5b6c4:	str	r1, [sp, #48]	; 0x30
   5b6c8:	lsl	r1, r6, #5
   5b6cc:	str	r1, [sp, #72]	; 0x48
   5b6d0:	lsl	r1, r6, #4
   5b6d4:	str	r1, [sp, #40]	; 0x28
   5b6d8:	and	r1, r5, #1
   5b6dc:	str	r1, [sp, #64]	; 0x40
   5b6e0:	bic	r1, r5, #3
   5b6e4:	str	r1, [sp, #56]	; 0x38
   5b6e8:	cmp	r5, #1
   5b6ec:	bge	5b724 <GetDataSlab+0x2b7a4>
   5b6f0:	ldr	ip, [sp, #84]	; 0x54
   5b6f4:	mov	r7, r8
   5b6f8:	ldr	r1, [sp, #92]	; 0x5c
   5b6fc:	ldr	r0, [sp, #80]	; 0x50
   5b700:	add	r7, r7, r0
   5b704:	add	r1, r1, #1
   5b708:	mov	r0, #0
   5b70c:	mov	r8, r7
   5b710:	cmp	r1, ip
   5b714:	str	r1, [sp, #92]	; 0x5c
   5b718:	beq	56c20 <GetDataSlab+0x26ca0>
   5b71c:	cmp	r5, #1
   5b720:	blt	5b6f0 <GetDataSlab+0x2b770>
   5b724:	ldr	r1, [sp, #76]	; 0x4c
   5b728:	ldr	ip, [sp, #84]	; 0x54
   5b72c:	ldr	r6, [sp, #72]	; 0x48
   5b730:	mov	r0, #0
   5b734:	mov	r7, r8
   5b738:	cmp	r1, #0
   5b73c:	beq	5b7e0 <GetDataSlab+0x2b860>
   5b740:	ldr	r0, [sp, #52]	; 0x34
   5b744:	cmp	r0, #0
   5b748:	beq	5b798 <GetDataSlab+0x2b818>
   5b74c:	mov	r1, r7
   5b750:	ldr	ip, [sp, #44]	; 0x2c
   5b754:	ldr	r7, [sp, #40]	; 0x28
   5b758:	mov	r0, #0
   5b75c:	mov	lr, r9
   5b760:	add	r2, r1, r7
   5b764:	vld1.32	{d16-d17}, [r1], r6
   5b768:	add	r4, lr, #8
   5b76c:	subs	ip, ip, #2
   5b770:	add	r0, r0, #8
   5b774:	vcvt.u32.f32	q8, q8
   5b778:	vmovn.i32	d16, q8
   5b77c:	vst1.16	{d16}, [lr], sl
   5b780:	vld1.32	{d16-d17}, [r2]
   5b784:	vcvt.u32.f32	q8, q8
   5b788:	vmovn.i32	d16, q8
   5b78c:	vst1.16	{d16}, [r4]
   5b790:	bne	5b760 <GetDataSlab+0x2b7e0>
   5b794:	b	5b79c <GetDataSlab+0x2b81c>
   5b798:	mov	r0, #0
   5b79c:	ldr	r1, [sp, #60]	; 0x3c
   5b7a0:	mov	r7, r8
   5b7a4:	cmp	r1, #0
   5b7a8:	beq	5b7cc <GetDataSlab+0x2b84c>
   5b7ac:	ldr	r1, [sp, #68]	; 0x44
   5b7b0:	mul	r1, r0, r1
   5b7b4:	add	r0, r9, r0, lsl #1
   5b7b8:	add	r1, r7, r1, lsl #2
   5b7bc:	vld1.32	{d16-d17}, [r1]
   5b7c0:	vcvt.u32.f32	q8, q8
   5b7c4:	vmovn.i32	d16, q8
   5b7c8:	vst1.16	{d16}, [r0]
   5b7cc:	ldr	r0, [sp, #56]	; 0x38
   5b7d0:	ldr	ip, [sp, #84]	; 0x54
   5b7d4:	add	r9, r9, r0, lsl #1
   5b7d8:	cmp	r5, r0
   5b7dc:	beq	5b6f8 <GetDataSlab+0x2b778>
   5b7e0:	ldr	r1, [sp, #64]	; 0x40
   5b7e4:	cmp	r1, #0
   5b7e8:	bne	5b7f4 <GetDataSlab+0x2b874>
   5b7ec:	mov	r2, r0
   5b7f0:	b	5b814 <GetDataSlab+0x2b894>
   5b7f4:	ldr	r1, [sp, #68]	; 0x44
   5b7f8:	orr	r2, r0, #1
   5b7fc:	mul	r1, r0, r1
   5b800:	add	r1, r7, r1, lsl #2
   5b804:	vldr	s0, [r1]
   5b808:	vcvt.u32.f32	s0, s0
   5b80c:	vmov	r1, s0
   5b810:	strh	r1, [r9], #2
   5b814:	orr	r0, r0, #1
   5b818:	cmp	r5, r0
   5b81c:	beq	5b6f8 <GetDataSlab+0x2b778>
   5b820:	ldr	r6, [sp, #48]	; 0x30
   5b824:	sub	r1, r5, r2
   5b828:	mul	r0, r6, r2
   5b82c:	add	r2, r2, #1
   5b830:	mul	r4, r6, r2
   5b834:	mov	r2, r7
   5b838:	add	r6, r2, r0
   5b83c:	subs	r1, r1, #2
   5b840:	vldr	s0, [r6]
   5b844:	vcvt.u32.f32	s0, s0
   5b848:	vmov	r6, s0
   5b84c:	strh	r6, [r9]
   5b850:	add	r6, r2, r4
   5b854:	add	r2, r2, r3
   5b858:	vldr	s0, [r6]
   5b85c:	vcvt.u32.f32	s0, s0
   5b860:	vmov	r6, s0
   5b864:	strh	r6, [r9, #2]
   5b868:	add	r9, r9, #4
   5b86c:	bne	5b838 <GetDataSlab+0x2b8b8>
   5b870:	b	5b6f8 <GetDataSlab+0x2b778>
   5b874:	cmp	r7, #1
   5b878:	blt	5f88c <GetDataSlab+0x2f90c>
   5b87c:	ldr	r0, [sp, #56]	; 0x38
   5b880:	mov	r1, r8
   5b884:	and	ip, r5, #1
   5b888:	mov	r7, r9
   5b88c:	mov	r9, #0
   5b890:	mla	r0, r0, r8, r6
   5b894:	add	r8, r3, r0, lsl #3
   5b898:	ldr	r0, [sp, #72]	; 0x48
   5b89c:	sub	r3, r5, ip
   5b8a0:	mul	r0, r0, r1
   5b8a4:	lsl	lr, r0, #3
   5b8a8:	ldr	r0, [sp, #68]	; 0x44
   5b8ac:	lsl	r6, r0, #4
   5b8b0:	lsl	r4, r0, #3
   5b8b4:	cmp	r5, #1
   5b8b8:	bge	5b8dc <GetDataSlab+0x2b95c>
   5b8bc:	ldr	r1, [sp, #84]	; 0x54
   5b8c0:	add	r9, r9, #1
   5b8c4:	add	r8, r8, lr
   5b8c8:	mov	r0, #0
   5b8cc:	cmp	r9, r1
   5b8d0:	beq	56c20 <GetDataSlab+0x26ca0>
   5b8d4:	cmp	r5, #1
   5b8d8:	blt	5b8bc <GetDataSlab+0x2b93c>
   5b8dc:	mov	r0, #0
   5b8e0:	beq	5b924 <GetDataSlab+0x2b9a4>
   5b8e4:	mov	r0, #0
   5b8e8:	mov	r1, r8
   5b8ec:	vldr	d16, [r1]
   5b8f0:	add	r0, r0, #2
   5b8f4:	cmp	r3, r0
   5b8f8:	vcvt.u32.f64	s0, d16
   5b8fc:	vmov	r2, s0
   5b900:	strh	r2, [r7]
   5b904:	add	r2, r1, r4
   5b908:	add	r1, r1, r6
   5b90c:	vldr	d16, [r2]
   5b910:	vcvt.u32.f64	s0, d16
   5b914:	vmov	r2, s0
   5b918:	strh	r2, [r7, #2]
   5b91c:	add	r7, r7, #4
   5b920:	bne	5b8ec <GetDataSlab+0x2b96c>
   5b924:	cmp	ip, #0
   5b928:	beq	5b8bc <GetDataSlab+0x2b93c>
   5b92c:	ldr	r1, [sp, #68]	; 0x44
   5b930:	mul	r0, r0, r1
   5b934:	add	r0, r8, r0, lsl #3
   5b938:	vldr	d16, [r0]
   5b93c:	vcvt.u32.f64	s0, d16
   5b940:	vmov	r0, s0
   5b944:	strh	r0, [r7], #2
   5b948:	b	5b8bc <GetDataSlab+0x2b93c>
   5b94c:	cmp	r7, #1
   5b950:	blt	5f88c <GetDataSlab+0x2f90c>
   5b954:	ldr	r0, [sp, #56]	; 0x38
   5b958:	mov	r1, #1
   5b95c:	mov	lr, #0
   5b960:	mov	ip, r9
   5b964:	mla	r0, r0, r8, r6
   5b968:	add	sl, r3, r0, lsl #3
   5b96c:	sub	r0, r5, #2
   5b970:	add	r1, r1, r0, lsr #1
   5b974:	lsr	r0, r0, #1
   5b978:	str	r0, [sp, #44]	; 0x2c
   5b97c:	and	r2, r1, #1
   5b980:	sub	r1, r1, r2
   5b984:	str	r2, [sp, #52]	; 0x34
   5b988:	ldr	r2, [sp, #68]	; 0x44
   5b98c:	str	r1, [sp, #32]
   5b990:	subs	r1, r5, #1
   5b994:	movwne	r1, #1
   5b998:	mov	r3, r2
   5b99c:	sub	r2, r2, #1
   5b9a0:	clz	r2, r2
   5b9a4:	lsl	r4, r3, #5
   5b9a8:	lsr	r2, r2, #5
   5b9ac:	and	r6, r1, r2
   5b9b0:	ldr	r1, [sp, #72]	; 0x48
   5b9b4:	lsl	r2, r3, #4
   5b9b8:	mul	r1, r1, r8
   5b9bc:	lsl	r7, r1, #3
   5b9c0:	lsl	r1, r3, #3
   5b9c4:	str	r1, [sp, #36]	; 0x24
   5b9c8:	and	r1, r5, #1
   5b9cc:	str	r7, [sp, #40]	; 0x28
   5b9d0:	str	r1, [sp, #92]	; 0x5c
   5b9d4:	bic	r1, r5, #1
   5b9d8:	str	r1, [sp, #48]	; 0x30
   5b9dc:	cmp	r5, #1
   5b9e0:	bge	5ba00 <GetDataSlab+0x2ba80>
   5b9e4:	ldr	r0, [sp, #84]	; 0x54
   5b9e8:	add	lr, lr, #1
   5b9ec:	add	sl, sl, r7
   5b9f0:	cmp	lr, r0
   5b9f4:	beq	5ec60 <GetDataSlab+0x2ece0>
   5b9f8:	cmp	r5, #1
   5b9fc:	blt	5b9e4 <GetDataSlab+0x2ba64>
   5ba00:	mov	r1, #0
   5ba04:	cmp	r6, #0
   5ba08:	beq	5baa8 <GetDataSlab+0x2bb28>
   5ba0c:	ldr	r0, [sp, #44]	; 0x2c
   5ba10:	mov	r1, #0
   5ba14:	cmp	r0, #0
   5ba18:	beq	5ba68 <GetDataSlab+0x2bae8>
   5ba1c:	ldr	r9, [sp, #32]
   5ba20:	mov	r0, sl
   5ba24:	mov	r3, ip
   5ba28:	mov	r8, sl
   5ba2c:	vld1.64	{d16-d17}, [r8], r4
   5ba30:	add	r0, r0, r2
   5ba34:	subs	r9, r9, #2
   5ba38:	add	r1, r1, #4
   5ba3c:	vmovn.i64	d16, q8
   5ba40:	vuzp.16	d16, d17
   5ba44:	vst1.32	{d16[0]}, [r3]
   5ba48:	vld1.64	{d16-d17}, [r0]
   5ba4c:	add	r0, r3, #4
   5ba50:	add	r3, r3, #8
   5ba54:	vmovn.i64	d16, q8
   5ba58:	vuzp.16	d16, d17
   5ba5c:	vst1.32	{d16[0]}, [r0]
   5ba60:	mov	r0, r8
   5ba64:	bne	5ba2c <GetDataSlab+0x2baac>
   5ba68:	ldr	r0, [sp, #52]	; 0x34
   5ba6c:	cmp	r0, #0
   5ba70:	beq	5ba94 <GetDataSlab+0x2bb14>
   5ba74:	ldr	r0, [sp, #68]	; 0x44
   5ba78:	mul	r0, r1, r0
   5ba7c:	add	r0, sl, r0, lsl #3
   5ba80:	vld1.64	{d16-d17}, [r0]
   5ba84:	add	r0, ip, r1, lsl #1
   5ba88:	vmovn.i64	d16, q8
   5ba8c:	vuzp.16	d16, d17
   5ba90:	vst1.32	{d16[0]}, [r0]
   5ba94:	ldr	r1, [sp, #48]	; 0x30
   5ba98:	ldr	r8, [sp, #64]	; 0x40
   5ba9c:	add	ip, ip, r1, lsl #1
   5baa0:	cmp	r5, r1
   5baa4:	beq	5b9e4 <GetDataSlab+0x2ba64>
   5baa8:	ldr	r0, [sp, #92]	; 0x5c
   5baac:	cmp	r0, #0
   5bab0:	bne	5babc <GetDataSlab+0x2bb3c>
   5bab4:	mov	r0, r1
   5bab8:	b	5bad4 <GetDataSlab+0x2bb54>
   5babc:	ldr	r0, [sp, #68]	; 0x44
   5bac0:	mul	r0, r1, r0
   5bac4:	add	r0, sl, r0, lsl #3
   5bac8:	ldrh	r0, [r0]
   5bacc:	strh	r0, [ip], #2
   5bad0:	orr	r0, r1, #1
   5bad4:	orr	r1, r1, #1
   5bad8:	cmp	r5, r1
   5badc:	beq	5b9e4 <GetDataSlab+0x2ba64>
   5bae0:	mov	r9, r6
   5bae4:	ldr	r6, [sp, #36]	; 0x24
   5bae8:	sub	r3, r5, r0
   5baec:	mul	r1, r6, r0
   5baf0:	add	r0, r0, #1
   5baf4:	mul	r0, r6, r0
   5baf8:	mov	r6, sl
   5bafc:	add	r7, r6, r1
   5bb00:	subs	r3, r3, #2
   5bb04:	ldrh	r7, [r7]
   5bb08:	strh	r7, [ip]
   5bb0c:	add	r7, r6, r0
   5bb10:	add	r6, r6, r2
   5bb14:	ldrh	r7, [r7]
   5bb18:	strh	r7, [ip, #2]
   5bb1c:	add	ip, ip, #4
   5bb20:	bne	5bafc <GetDataSlab+0x2bb7c>
   5bb24:	ldr	r7, [sp, #40]	; 0x28
   5bb28:	mov	r6, r9
   5bb2c:	b	5b9e4 <GetDataSlab+0x2ba64>
   5bb30:	cmp	r6, #1
   5bb34:	blt	5f88c <GetDataSlab+0x2f90c>
   5bb38:	ldr	r0, [sp, #60]	; 0x3c
   5bb3c:	ldr	r1, [sp, #56]	; 0x38
   5bb40:	mov	r7, #0
   5bb44:	mla	r0, r1, r8, r0
   5bb48:	add	r2, r4, r0
   5bb4c:	cmp	r5, #1
   5bb50:	bge	5bb80 <GetDataSlab+0x2bc00>
   5bb54:	ldr	r1, [sp, #84]	; 0x54
   5bb58:	ldr	r0, [sp, #72]	; 0x48
   5bb5c:	mla	r2, r8, r0, r2
   5bb60:	add	r7, r7, #1
   5bb64:	str	r0, [sp, #72]	; 0x48
   5bb68:	mov	r0, #0
   5bb6c:	str	r1, [sp, #84]	; 0x54
   5bb70:	cmp	r7, r1
   5bb74:	bge	56c20 <GetDataSlab+0x26ca0>
   5bb78:	cmp	r5, #1
   5bb7c:	blt	5bb54 <GetDataSlab+0x2bbd4>
   5bb80:	ldr	r4, [sp, #88]	; 0x58
   5bb84:	mov	r0, #0
   5bb88:	mov	r6, #0
   5bb8c:	ldr	r5, [sl]
   5bb90:	add	r0, r0, #4
   5bb94:	mul	r5, r5, r6
   5bb98:	ldrb	r5, [r2, r5]
   5bb9c:	str	r5, [r4, r6, lsl #2]
   5bba0:	add	r6, r6, #1
   5bba4:	ldr	r5, [r9]
   5bba8:	cmp	r6, r5
   5bbac:	blt	5bb8c <GetDataSlab+0x2bc0c>
   5bbb0:	add	r4, r4, r0
   5bbb4:	ldr	r1, [r3]
   5bbb8:	ldr	r8, [lr]
   5bbbc:	ldr	r0, [ip]
   5bbc0:	str	r4, [sp, #88]	; 0x58
   5bbc4:	b	5bb5c <GetDataSlab+0x2bbdc>
   5bbc8:	cmp	r6, #1
   5bbcc:	blt	5f88c <GetDataSlab+0x2f90c>
   5bbd0:	ldr	r0, [sp, #60]	; 0x3c
   5bbd4:	ldr	r1, [sp, #56]	; 0x38
   5bbd8:	mov	r7, #0
   5bbdc:	mla	r0, r1, r8, r0
   5bbe0:	add	r2, r4, r0, lsl #1
   5bbe4:	cmp	r5, #1
   5bbe8:	bge	5bc20 <GetDataSlab+0x2bca0>
   5bbec:	ldr	r1, [sp, #84]	; 0x54
   5bbf0:	ldr	r0, [sp, #72]	; 0x48
   5bbf4:	mov	r4, r0
   5bbf8:	str	r0, [sp, #72]	; 0x48
   5bbfc:	mul	r0, r8, r0
   5bc00:	add	r7, r7, #1
   5bc04:	str	r1, [sp, #84]	; 0x54
   5bc08:	cmp	r7, r1
   5bc0c:	add	r2, r2, r0, lsl #1
   5bc10:	mov	r0, #0
   5bc14:	bge	56c20 <GetDataSlab+0x26ca0>
   5bc18:	cmp	r5, #1
   5bc1c:	blt	5bbec <GetDataSlab+0x2bc6c>
   5bc20:	ldr	r4, [sp, #88]	; 0x58
   5bc24:	mov	r0, #0
   5bc28:	mov	r6, #0
   5bc2c:	ldr	r5, [sl]
   5bc30:	add	r0, r0, #4
   5bc34:	mul	r5, r5, r6
   5bc38:	add	r5, r2, r5, lsl #1
   5bc3c:	ldrsh	r5, [r5]
   5bc40:	str	r5, [r4, r6, lsl #2]
   5bc44:	add	r6, r6, #1
   5bc48:	ldr	r5, [r9]
   5bc4c:	cmp	r6, r5
   5bc50:	blt	5bc2c <GetDataSlab+0x2bcac>
   5bc54:	add	r4, r4, r0
   5bc58:	ldr	r1, [r3]
   5bc5c:	ldr	r8, [lr]
   5bc60:	ldr	r0, [ip]
   5bc64:	str	r4, [sp, #88]	; 0x58
   5bc68:	b	5bbf4 <GetDataSlab+0x2bc74>
   5bc6c:	cmp	r6, #1
   5bc70:	blt	5f88c <GetDataSlab+0x2f90c>
   5bc74:	ldr	r0, [sp, #60]	; 0x3c
   5bc78:	ldr	r1, [sp, #56]	; 0x38
   5bc7c:	mov	r7, #0
   5bc80:	mla	r0, r1, r8, r0
   5bc84:	add	r2, r4, r0, lsl #1
   5bc88:	cmp	r5, #1
   5bc8c:	bge	5bcc4 <GetDataSlab+0x2bd44>
   5bc90:	ldr	r1, [sp, #84]	; 0x54
   5bc94:	ldr	r0, [sp, #72]	; 0x48
   5bc98:	mov	r4, r0
   5bc9c:	str	r0, [sp, #72]	; 0x48
   5bca0:	mul	r0, r8, r0
   5bca4:	add	r7, r7, #1
   5bca8:	str	r1, [sp, #84]	; 0x54
   5bcac:	cmp	r7, r1
   5bcb0:	add	r2, r2, r0, lsl #1
   5bcb4:	mov	r0, #0
   5bcb8:	bge	56c20 <GetDataSlab+0x26ca0>
   5bcbc:	cmp	r5, #1
   5bcc0:	blt	5bc90 <GetDataSlab+0x2bd10>
   5bcc4:	ldr	r4, [sp, #88]	; 0x58
   5bcc8:	mov	r0, #0
   5bccc:	mov	r6, #0
   5bcd0:	ldr	r5, [sl]
   5bcd4:	add	r0, r0, #4
   5bcd8:	mul	r5, r5, r6
   5bcdc:	add	r5, r2, r5, lsl #1
   5bce0:	ldrh	r5, [r5]
   5bce4:	str	r5, [r4, r6, lsl #2]
   5bce8:	add	r6, r6, #1
   5bcec:	ldr	r5, [r9]
   5bcf0:	cmp	r6, r5
   5bcf4:	blt	5bcd0 <GetDataSlab+0x2bd50>
   5bcf8:	add	r4, r4, r0
   5bcfc:	ldr	r1, [r3]
   5bd00:	ldr	r8, [lr]
   5bd04:	ldr	r0, [ip]
   5bd08:	str	r4, [sp, #88]	; 0x58
   5bd0c:	b	5bc98 <GetDataSlab+0x2bd18>
   5bd10:	cmp	r6, #1
   5bd14:	blt	5f88c <GetDataSlab+0x2f90c>
   5bd18:	ldr	r0, [sp, #60]	; 0x3c
   5bd1c:	ldr	r1, [sp, #56]	; 0x38
   5bd20:	mov	r7, #0
   5bd24:	mla	r0, r1, r8, r0
   5bd28:	add	r2, r4, r0, lsl #2
   5bd2c:	cmp	r5, #1
   5bd30:	bge	5bd68 <GetDataSlab+0x2bde8>
   5bd34:	ldr	r1, [sp, #84]	; 0x54
   5bd38:	ldr	r0, [sp, #72]	; 0x48
   5bd3c:	mov	r4, r0
   5bd40:	str	r0, [sp, #72]	; 0x48
   5bd44:	mul	r0, r8, r0
   5bd48:	add	r7, r7, #1
   5bd4c:	str	r1, [sp, #84]	; 0x54
   5bd50:	cmp	r7, r1
   5bd54:	add	r2, r2, r0, lsl #2
   5bd58:	mov	r0, #0
   5bd5c:	bge	56c20 <GetDataSlab+0x26ca0>
   5bd60:	cmp	r5, #1
   5bd64:	blt	5bd34 <GetDataSlab+0x2bdb4>
   5bd68:	ldr	r4, [sp, #88]	; 0x58
   5bd6c:	mov	r0, #0
   5bd70:	mov	r6, #0
   5bd74:	ldr	r5, [sl]
   5bd78:	add	r0, r0, #4
   5bd7c:	mul	r5, r5, r6
   5bd80:	ldr	r5, [r2, r5, lsl #2]
   5bd84:	str	r5, [r4, r6, lsl #2]
   5bd88:	add	r6, r6, #1
   5bd8c:	ldr	r5, [r9]
   5bd90:	cmp	r6, r5
   5bd94:	blt	5bd74 <GetDataSlab+0x2bdf4>
   5bd98:	add	r4, r4, r0
   5bd9c:	ldr	r1, [r3]
   5bda0:	ldr	r8, [lr]
   5bda4:	ldr	r0, [ip]
   5bda8:	str	r4, [sp, #88]	; 0x58
   5bdac:	b	5bd3c <GetDataSlab+0x2bdbc>
   5bdb0:	cmp	r6, #1
   5bdb4:	blt	5f88c <GetDataSlab+0x2f90c>
   5bdb8:	ldr	r0, [sp, #60]	; 0x3c
   5bdbc:	ldr	r1, [sp, #56]	; 0x38
   5bdc0:	mov	r7, #0
   5bdc4:	mla	r0, r1, r8, r0
   5bdc8:	add	r2, r4, r0, lsl #2
   5bdcc:	cmp	r5, #1
   5bdd0:	bge	5be08 <GetDataSlab+0x2be88>
   5bdd4:	ldr	r1, [sp, #84]	; 0x54
   5bdd8:	ldr	r0, [sp, #72]	; 0x48
   5bddc:	mov	r4, r0
   5bde0:	str	r0, [sp, #72]	; 0x48
   5bde4:	mul	r0, r8, r0
   5bde8:	add	r7, r7, #1
   5bdec:	str	r1, [sp, #84]	; 0x54
   5bdf0:	cmp	r7, r1
   5bdf4:	add	r2, r2, r0, lsl #2
   5bdf8:	mov	r0, #0
   5bdfc:	bge	56c20 <GetDataSlab+0x26ca0>
   5be00:	cmp	r5, #1
   5be04:	blt	5bdd4 <GetDataSlab+0x2be54>
   5be08:	ldr	r4, [sp, #88]	; 0x58
   5be0c:	mov	r0, #0
   5be10:	mov	r6, #0
   5be14:	ldr	r5, [sl]
   5be18:	add	r0, r0, #4
   5be1c:	mul	r5, r5, r6
   5be20:	ldr	r5, [r2, r5, lsl #2]
   5be24:	str	r5, [r4, r6, lsl #2]
   5be28:	add	r6, r6, #1
   5be2c:	ldr	r5, [r9]
   5be30:	cmp	r6, r5
   5be34:	blt	5be14 <GetDataSlab+0x2be94>
   5be38:	add	r4, r4, r0
   5be3c:	ldr	r1, [r3]
   5be40:	ldr	r8, [lr]
   5be44:	ldr	r0, [ip]
   5be48:	str	r4, [sp, #88]	; 0x58
   5be4c:	b	5bddc <GetDataSlab+0x2be5c>
   5be50:	cmp	r6, #1
   5be54:	blt	5f88c <GetDataSlab+0x2f90c>
   5be58:	ldr	r0, [sp, #60]	; 0x3c
   5be5c:	ldr	r1, [sp, #56]	; 0x38
   5be60:	mov	r7, #0
   5be64:	mla	r0, r1, r8, r0
   5be68:	add	r2, r4, r0, lsl #2
   5be6c:	cmp	r5, #1
   5be70:	bge	5bea8 <GetDataSlab+0x2bf28>
   5be74:	ldr	r1, [sp, #84]	; 0x54
   5be78:	ldr	r0, [sp, #72]	; 0x48
   5be7c:	mov	r4, r0
   5be80:	str	r0, [sp, #72]	; 0x48
   5be84:	mul	r0, r8, r0
   5be88:	add	r7, r7, #1
   5be8c:	str	r1, [sp, #84]	; 0x54
   5be90:	cmp	r7, r1
   5be94:	add	r2, r2, r0, lsl #2
   5be98:	mov	r0, #0
   5be9c:	bge	56c20 <GetDataSlab+0x26ca0>
   5bea0:	cmp	r5, #1
   5bea4:	blt	5be74 <GetDataSlab+0x2bef4>
   5bea8:	ldr	r4, [sp, #88]	; 0x58
   5beac:	mov	r0, #0
   5beb0:	mov	r6, #0
   5beb4:	ldr	r5, [sl]
   5beb8:	add	r0, r0, #4
   5bebc:	mul	r5, r5, r6
   5bec0:	add	r5, r2, r5, lsl #2
   5bec4:	vldr	s0, [r5]
   5bec8:	vcvt.s32.f32	s0, s0
   5becc:	vmov	r5, s0
   5bed0:	str	r5, [r4, r6, lsl #2]
   5bed4:	add	r6, r6, #1
   5bed8:	ldr	r5, [r9]
   5bedc:	cmp	r6, r5
   5bee0:	blt	5beb4 <GetDataSlab+0x2bf34>
   5bee4:	add	r4, r4, r0
   5bee8:	ldr	r1, [r3]
   5beec:	ldr	r8, [lr]
   5bef0:	ldr	r0, [ip]
   5bef4:	str	r4, [sp, #88]	; 0x58
   5bef8:	b	5be7c <GetDataSlab+0x2befc>
   5befc:	cmp	r6, #1
   5bf00:	blt	5f88c <GetDataSlab+0x2f90c>
   5bf04:	ldr	r0, [sp, #60]	; 0x3c
   5bf08:	ldr	r1, [sp, #56]	; 0x38
   5bf0c:	mov	r7, #0
   5bf10:	mla	r0, r1, r8, r0
   5bf14:	add	r2, r4, r0, lsl #3
   5bf18:	cmp	r5, #1
   5bf1c:	bge	5bf54 <GetDataSlab+0x2bfd4>
   5bf20:	ldr	r1, [sp, #84]	; 0x54
   5bf24:	ldr	r0, [sp, #72]	; 0x48
   5bf28:	mov	r4, r0
   5bf2c:	str	r0, [sp, #72]	; 0x48
   5bf30:	mul	r0, r8, r0
   5bf34:	add	r7, r7, #1
   5bf38:	str	r1, [sp, #84]	; 0x54
   5bf3c:	cmp	r7, r1
   5bf40:	add	r2, r2, r0, lsl #3
   5bf44:	mov	r0, #0
   5bf48:	bge	56c20 <GetDataSlab+0x26ca0>
   5bf4c:	cmp	r5, #1
   5bf50:	blt	5bf20 <GetDataSlab+0x2bfa0>
   5bf54:	ldr	r4, [sp, #88]	; 0x58
   5bf58:	mov	r0, #0
   5bf5c:	mov	r6, #0
   5bf60:	ldr	r5, [sl]
   5bf64:	add	r0, r0, #4
   5bf68:	mul	r5, r5, r6
   5bf6c:	add	r5, r2, r5, lsl #3
   5bf70:	vldr	d16, [r5]
   5bf74:	vcvt.s32.f64	s0, d16
   5bf78:	vmov	r5, s0
   5bf7c:	str	r5, [r4, r6, lsl #2]
   5bf80:	add	r6, r6, #1
   5bf84:	ldr	r5, [r9]
   5bf88:	cmp	r6, r5
   5bf8c:	blt	5bf60 <GetDataSlab+0x2bfe0>
   5bf90:	add	r4, r4, r0
   5bf94:	ldr	r1, [r3]
   5bf98:	ldr	r8, [lr]
   5bf9c:	ldr	r0, [ip]
   5bfa0:	str	r4, [sp, #88]	; 0x58
   5bfa4:	b	5bf28 <GetDataSlab+0x2bfa8>
   5bfa8:	cmp	r6, #1
   5bfac:	blt	5f88c <GetDataSlab+0x2f90c>
   5bfb0:	ldr	r0, [sp, #60]	; 0x3c
   5bfb4:	ldr	r1, [sp, #56]	; 0x38
   5bfb8:	mov	r2, #0
   5bfbc:	mla	r0, r1, r8, r0
   5bfc0:	add	r0, r4, r0, lsl #3
   5bfc4:	ldr	r4, [sp, #88]	; 0x58
   5bfc8:	cmp	r5, #1
   5bfcc:	bge	5bff4 <GetDataSlab+0x2c074>
   5bfd0:	ldr	r1, [sp, #72]	; 0x48
   5bfd4:	mul	r7, r8, r1
   5bfd8:	add	r2, r2, #1
   5bfdc:	str	r1, [sp, #72]	; 0x48
   5bfe0:	cmp	r2, r6
   5bfe4:	add	r0, r0, r7, lsl #3
   5bfe8:	bge	5ec6c <GetDataSlab+0x2ecec>
   5bfec:	cmp	r5, #1
   5bff0:	blt	5bfd0 <GetDataSlab+0x2c050>
   5bff4:	mov	r7, #0
   5bff8:	mov	r6, #0
   5bffc:	ldr	r5, [sl]
   5c000:	add	r7, r7, #4
   5c004:	mul	r5, r5, r6
   5c008:	ldr	r5, [r0, r5, lsl #3]
   5c00c:	str	r5, [r4, r6, lsl #2]
   5c010:	add	r6, r6, #1
   5c014:	ldr	r5, [r9]
   5c018:	cmp	r6, r5
   5c01c:	blt	5bffc <GetDataSlab+0x2c07c>
   5c020:	ldr	r6, [r3]
   5c024:	ldr	r8, [lr]
   5c028:	ldr	r1, [ip]
   5c02c:	add	r4, r4, r7
   5c030:	b	5bfd4 <GetDataSlab+0x2c054>
   5c034:	cmp	r6, #1
   5c038:	blt	5f88c <GetDataSlab+0x2f90c>
   5c03c:	ldr	r0, [sp, #60]	; 0x3c
   5c040:	ldr	r1, [sp, #56]	; 0x38
   5c044:	mov	r7, #0
   5c048:	mla	r0, r1, r8, r0
   5c04c:	add	r2, r4, r0
   5c050:	cmp	r5, #1
   5c054:	bge	5c084 <GetDataSlab+0x2c104>
   5c058:	ldr	r1, [sp, #84]	; 0x54
   5c05c:	ldr	r0, [sp, #72]	; 0x48
   5c060:	mla	r2, r8, r0, r2
   5c064:	add	r7, r7, #1
   5c068:	str	r0, [sp, #72]	; 0x48
   5c06c:	mov	r0, #0
   5c070:	str	r1, [sp, #84]	; 0x54
   5c074:	cmp	r7, r1
   5c078:	bge	56c20 <GetDataSlab+0x26ca0>
   5c07c:	cmp	r5, #1
   5c080:	blt	5c058 <GetDataSlab+0x2c0d8>
   5c084:	ldr	r4, [sp, #88]	; 0x58
   5c088:	mov	r0, #0
   5c08c:	mov	r6, #0
   5c090:	ldr	r5, [sl]
   5c094:	add	r0, r0, #4
   5c098:	mul	r5, r5, r6
   5c09c:	ldrb	r5, [r2, r5]
   5c0a0:	str	r5, [r4, r6, lsl #2]
   5c0a4:	add	r6, r6, #1
   5c0a8:	ldr	r5, [r9]
   5c0ac:	cmp	r6, r5
   5c0b0:	blt	5c090 <GetDataSlab+0x2c110>
   5c0b4:	add	r4, r4, r0
   5c0b8:	ldr	r1, [r3]
   5c0bc:	ldr	r8, [lr]
   5c0c0:	ldr	r0, [ip]
   5c0c4:	str	r4, [sp, #88]	; 0x58
   5c0c8:	b	5c060 <GetDataSlab+0x2c0e0>
   5c0cc:	cmp	r6, #1
   5c0d0:	blt	5f88c <GetDataSlab+0x2f90c>
   5c0d4:	ldr	r0, [sp, #60]	; 0x3c
   5c0d8:	ldr	r1, [sp, #56]	; 0x38
   5c0dc:	mov	r7, #0
   5c0e0:	mla	r0, r1, r8, r0
   5c0e4:	add	r2, r4, r0, lsl #1
   5c0e8:	cmp	r5, #1
   5c0ec:	bge	5c124 <GetDataSlab+0x2c1a4>
   5c0f0:	ldr	r1, [sp, #84]	; 0x54
   5c0f4:	ldr	r0, [sp, #72]	; 0x48
   5c0f8:	mov	r4, r0
   5c0fc:	str	r0, [sp, #72]	; 0x48
   5c100:	mul	r0, r8, r0
   5c104:	add	r7, r7, #1
   5c108:	str	r1, [sp, #84]	; 0x54
   5c10c:	cmp	r7, r1
   5c110:	add	r2, r2, r0, lsl #1
   5c114:	mov	r0, #0
   5c118:	bge	56c20 <GetDataSlab+0x26ca0>
   5c11c:	cmp	r5, #1
   5c120:	blt	5c0f0 <GetDataSlab+0x2c170>
   5c124:	ldr	r4, [sp, #88]	; 0x58
   5c128:	mov	r0, #0
   5c12c:	mov	r6, #0
   5c130:	ldr	r5, [sl]
   5c134:	add	r0, r0, #4
   5c138:	mul	r5, r5, r6
   5c13c:	add	r5, r2, r5, lsl #1
   5c140:	ldrsh	r5, [r5]
   5c144:	str	r5, [r4, r6, lsl #2]
   5c148:	add	r6, r6, #1
   5c14c:	ldr	r5, [r9]
   5c150:	cmp	r6, r5
   5c154:	blt	5c130 <GetDataSlab+0x2c1b0>
   5c158:	add	r4, r4, r0
   5c15c:	ldr	r1, [r3]
   5c160:	ldr	r8, [lr]
   5c164:	ldr	r0, [ip]
   5c168:	str	r4, [sp, #88]	; 0x58
   5c16c:	b	5c0f8 <GetDataSlab+0x2c178>
   5c170:	cmp	r6, #1
   5c174:	blt	5f88c <GetDataSlab+0x2f90c>
   5c178:	ldr	r0, [sp, #60]	; 0x3c
   5c17c:	ldr	r1, [sp, #56]	; 0x38
   5c180:	mov	r7, #0
   5c184:	mla	r0, r1, r8, r0
   5c188:	add	r2, r4, r0, lsl #1
   5c18c:	cmp	r5, #1
   5c190:	bge	5c1c8 <GetDataSlab+0x2c248>
   5c194:	ldr	r1, [sp, #84]	; 0x54
   5c198:	ldr	r0, [sp, #72]	; 0x48
   5c19c:	mov	r4, r0
   5c1a0:	str	r0, [sp, #72]	; 0x48
   5c1a4:	mul	r0, r8, r0
   5c1a8:	add	r7, r7, #1
   5c1ac:	str	r1, [sp, #84]	; 0x54
   5c1b0:	cmp	r7, r1
   5c1b4:	add	r2, r2, r0, lsl #1
   5c1b8:	mov	r0, #0
   5c1bc:	bge	56c20 <GetDataSlab+0x26ca0>
   5c1c0:	cmp	r5, #1
   5c1c4:	blt	5c194 <GetDataSlab+0x2c214>
   5c1c8:	ldr	r4, [sp, #88]	; 0x58
   5c1cc:	mov	r0, #0
   5c1d0:	mov	r6, #0
   5c1d4:	ldr	r5, [sl]
   5c1d8:	add	r0, r0, #4
   5c1dc:	mul	r5, r5, r6
   5c1e0:	add	r5, r2, r5, lsl #1
   5c1e4:	ldrh	r5, [r5]
   5c1e8:	str	r5, [r4, r6, lsl #2]
   5c1ec:	add	r6, r6, #1
   5c1f0:	ldr	r5, [r9]
   5c1f4:	cmp	r6, r5
   5c1f8:	blt	5c1d4 <GetDataSlab+0x2c254>
   5c1fc:	add	r4, r4, r0
   5c200:	ldr	r1, [r3]
   5c204:	ldr	r8, [lr]
   5c208:	ldr	r0, [ip]
   5c20c:	str	r4, [sp, #88]	; 0x58
   5c210:	b	5c19c <GetDataSlab+0x2c21c>
   5c214:	cmp	r6, #1
   5c218:	blt	5f88c <GetDataSlab+0x2f90c>
   5c21c:	ldr	r0, [sp, #60]	; 0x3c
   5c220:	ldr	r1, [sp, #56]	; 0x38
   5c224:	mov	r7, #0
   5c228:	mla	r0, r1, r8, r0
   5c22c:	add	r2, r4, r0, lsl #2
   5c230:	cmp	r5, #1
   5c234:	bge	5c26c <GetDataSlab+0x2c2ec>
   5c238:	ldr	r1, [sp, #84]	; 0x54
   5c23c:	ldr	r0, [sp, #72]	; 0x48
   5c240:	mov	r4, r0
   5c244:	str	r0, [sp, #72]	; 0x48
   5c248:	mul	r0, r8, r0
   5c24c:	add	r7, r7, #1
   5c250:	str	r1, [sp, #84]	; 0x54
   5c254:	cmp	r7, r1
   5c258:	add	r2, r2, r0, lsl #2
   5c25c:	mov	r0, #0
   5c260:	bge	56c20 <GetDataSlab+0x26ca0>
   5c264:	cmp	r5, #1
   5c268:	blt	5c238 <GetDataSlab+0x2c2b8>
   5c26c:	ldr	r4, [sp, #88]	; 0x58
   5c270:	mov	r0, #0
   5c274:	mov	r6, #0
   5c278:	ldr	r5, [sl]
   5c27c:	add	r0, r0, #4
   5c280:	mul	r5, r5, r6
   5c284:	ldr	r5, [r2, r5, lsl #2]
   5c288:	str	r5, [r4, r6, lsl #2]
   5c28c:	add	r6, r6, #1
   5c290:	ldr	r5, [r9]
   5c294:	cmp	r6, r5
   5c298:	blt	5c278 <GetDataSlab+0x2c2f8>
   5c29c:	add	r4, r4, r0
   5c2a0:	ldr	r1, [r3]
   5c2a4:	ldr	r8, [lr]
   5c2a8:	ldr	r0, [ip]
   5c2ac:	str	r4, [sp, #88]	; 0x58
   5c2b0:	b	5c240 <GetDataSlab+0x2c2c0>
   5c2b4:	cmp	r6, #1
   5c2b8:	blt	5f88c <GetDataSlab+0x2f90c>
   5c2bc:	ldr	r0, [sp, #60]	; 0x3c
   5c2c0:	ldr	r1, [sp, #56]	; 0x38
   5c2c4:	mov	r7, #0
   5c2c8:	mla	r0, r1, r8, r0
   5c2cc:	add	r2, r4, r0, lsl #2
   5c2d0:	cmp	r5, #1
   5c2d4:	bge	5c30c <GetDataSlab+0x2c38c>
   5c2d8:	ldr	r1, [sp, #84]	; 0x54
   5c2dc:	ldr	r0, [sp, #72]	; 0x48
   5c2e0:	mov	r4, r0
   5c2e4:	str	r0, [sp, #72]	; 0x48
   5c2e8:	mul	r0, r8, r0
   5c2ec:	add	r7, r7, #1
   5c2f0:	str	r1, [sp, #84]	; 0x54
   5c2f4:	cmp	r7, r1
   5c2f8:	add	r2, r2, r0, lsl #2
   5c2fc:	mov	r0, #0
   5c300:	bge	56c20 <GetDataSlab+0x26ca0>
   5c304:	cmp	r5, #1
   5c308:	blt	5c2d8 <GetDataSlab+0x2c358>
   5c30c:	ldr	r4, [sp, #88]	; 0x58
   5c310:	mov	r0, #0
   5c314:	mov	r6, #0
   5c318:	ldr	r5, [sl]
   5c31c:	add	r0, r0, #4
   5c320:	mul	r5, r5, r6
   5c324:	ldr	r5, [r2, r5, lsl #2]
   5c328:	str	r5, [r4, r6, lsl #2]
   5c32c:	add	r6, r6, #1
   5c330:	ldr	r5, [r9]
   5c334:	cmp	r6, r5
   5c338:	blt	5c318 <GetDataSlab+0x2c398>
   5c33c:	add	r4, r4, r0
   5c340:	ldr	r1, [r3]
   5c344:	ldr	r8, [lr]
   5c348:	ldr	r0, [ip]
   5c34c:	str	r4, [sp, #88]	; 0x58
   5c350:	b	5c2e0 <GetDataSlab+0x2c360>
   5c354:	cmp	r6, #1
   5c358:	blt	5f88c <GetDataSlab+0x2f90c>
   5c35c:	ldr	r0, [sp, #60]	; 0x3c
   5c360:	ldr	r1, [sp, #56]	; 0x38
   5c364:	mov	r7, #0
   5c368:	mla	r0, r1, r8, r0
   5c36c:	add	r2, r4, r0, lsl #2
   5c370:	cmp	r5, #1
   5c374:	bge	5c3ac <GetDataSlab+0x2c42c>
   5c378:	ldr	r1, [sp, #84]	; 0x54
   5c37c:	ldr	r0, [sp, #72]	; 0x48
   5c380:	mov	r4, r0
   5c384:	str	r0, [sp, #72]	; 0x48
   5c388:	mul	r0, r8, r0
   5c38c:	add	r7, r7, #1
   5c390:	str	r1, [sp, #84]	; 0x54
   5c394:	cmp	r7, r1
   5c398:	add	r2, r2, r0, lsl #2
   5c39c:	mov	r0, #0
   5c3a0:	bge	56c20 <GetDataSlab+0x26ca0>
   5c3a4:	cmp	r5, #1
   5c3a8:	blt	5c378 <GetDataSlab+0x2c3f8>
   5c3ac:	ldr	r4, [sp, #88]	; 0x58
   5c3b0:	mov	r0, #0
   5c3b4:	mov	r6, #0
   5c3b8:	ldr	r5, [sl]
   5c3bc:	add	r0, r0, #4
   5c3c0:	mul	r5, r5, r6
   5c3c4:	add	r5, r2, r5, lsl #2
   5c3c8:	vldr	s0, [r5]
   5c3cc:	vcvt.u32.f32	s0, s0
   5c3d0:	vmov	r5, s0
   5c3d4:	str	r5, [r4, r6, lsl #2]
   5c3d8:	add	r6, r6, #1
   5c3dc:	ldr	r5, [r9]
   5c3e0:	cmp	r6, r5
   5c3e4:	blt	5c3b8 <GetDataSlab+0x2c438>
   5c3e8:	add	r4, r4, r0
   5c3ec:	ldr	r1, [r3]
   5c3f0:	ldr	r8, [lr]
   5c3f4:	ldr	r0, [ip]
   5c3f8:	str	r4, [sp, #88]	; 0x58
   5c3fc:	b	5c380 <GetDataSlab+0x2c400>
   5c400:	cmp	r6, #1
   5c404:	blt	5f88c <GetDataSlab+0x2f90c>
   5c408:	ldr	r0, [sp, #60]	; 0x3c
   5c40c:	ldr	r1, [sp, #56]	; 0x38
   5c410:	mov	r7, #0
   5c414:	mla	r0, r1, r8, r0
   5c418:	add	r2, r4, r0, lsl #3
   5c41c:	cmp	r5, #1
   5c420:	bge	5c458 <GetDataSlab+0x2c4d8>
   5c424:	ldr	r1, [sp, #84]	; 0x54
   5c428:	ldr	r0, [sp, #72]	; 0x48
   5c42c:	mov	r4, r0
   5c430:	str	r0, [sp, #72]	; 0x48
   5c434:	mul	r0, r8, r0
   5c438:	add	r7, r7, #1
   5c43c:	str	r1, [sp, #84]	; 0x54
   5c440:	cmp	r7, r1
   5c444:	add	r2, r2, r0, lsl #3
   5c448:	mov	r0, #0
   5c44c:	bge	56c20 <GetDataSlab+0x26ca0>
   5c450:	cmp	r5, #1
   5c454:	blt	5c424 <GetDataSlab+0x2c4a4>
   5c458:	ldr	r4, [sp, #88]	; 0x58
   5c45c:	mov	r0, #0
   5c460:	mov	r6, #0
   5c464:	ldr	r5, [sl]
   5c468:	add	r0, r0, #4
   5c46c:	mul	r5, r5, r6
   5c470:	add	r5, r2, r5, lsl #3
   5c474:	vldr	d16, [r5]
   5c478:	vcvt.u32.f64	s0, d16
   5c47c:	vmov	r5, s0
   5c480:	str	r5, [r4, r6, lsl #2]
   5c484:	add	r6, r6, #1
   5c488:	ldr	r5, [r9]
   5c48c:	cmp	r6, r5
   5c490:	blt	5c464 <GetDataSlab+0x2c4e4>
   5c494:	add	r4, r4, r0
   5c498:	ldr	r1, [r3]
   5c49c:	ldr	r8, [lr]
   5c4a0:	ldr	r0, [ip]
   5c4a4:	str	r4, [sp, #88]	; 0x58
   5c4a8:	b	5c42c <GetDataSlab+0x2c4ac>
   5c4ac:	cmp	r6, #1
   5c4b0:	blt	5f88c <GetDataSlab+0x2f90c>
   5c4b4:	ldr	r0, [sp, #60]	; 0x3c
   5c4b8:	ldr	r1, [sp, #56]	; 0x38
   5c4bc:	mov	r2, #0
   5c4c0:	mla	r0, r1, r8, r0
   5c4c4:	add	r0, r4, r0, lsl #3
   5c4c8:	ldr	r4, [sp, #88]	; 0x58
   5c4cc:	cmp	r5, #1
   5c4d0:	bge	5c4f8 <GetDataSlab+0x2c578>
   5c4d4:	ldr	r1, [sp, #72]	; 0x48
   5c4d8:	mul	r7, r8, r1
   5c4dc:	add	r2, r2, #1
   5c4e0:	str	r1, [sp, #72]	; 0x48
   5c4e4:	cmp	r2, r6
   5c4e8:	add	r0, r0, r7, lsl #3
   5c4ec:	bge	5ec78 <GetDataSlab+0x2ecf8>
   5c4f0:	cmp	r5, #1
   5c4f4:	blt	5c4d4 <GetDataSlab+0x2c554>
   5c4f8:	mov	r7, #0
   5c4fc:	mov	r6, #0
   5c500:	ldr	r5, [sl]
   5c504:	add	r7, r7, #4
   5c508:	mul	r5, r5, r6
   5c50c:	ldr	r5, [r0, r5, lsl #3]
   5c510:	str	r5, [r4, r6, lsl #2]
   5c514:	add	r6, r6, #1
   5c518:	ldr	r5, [r9]
   5c51c:	cmp	r6, r5
   5c520:	blt	5c500 <GetDataSlab+0x2c580>
   5c524:	ldr	r6, [r3]
   5c528:	ldr	r8, [lr]
   5c52c:	ldr	r1, [ip]
   5c530:	add	r4, r4, r7
   5c534:	b	5c4d8 <GetDataSlab+0x2c558>
   5c538:	cmp	lr, #1
   5c53c:	blt	5f88c <GetDataSlab+0x2f90c>
   5c540:	ldr	r2, [sp, #60]	; 0x3c
   5c544:	ldr	r3, [sp, #56]	; 0x38
   5c548:	mov	r1, #1
   5c54c:	mov	ip, #0
   5c550:	mla	r0, r3, r8, r2
   5c554:	str	r0, [sp, #52]	; 0x34
   5c558:	add	r0, r4, r0
   5c55c:	str	r0, [sp, #92]	; 0x5c
   5c560:	sub	r0, r5, #2
   5c564:	add	r1, r1, r0, lsr #1
   5c568:	lsr	r0, r0, #1
   5c56c:	str	r0, [sp, #44]	; 0x2c
   5c570:	and	r7, r1, #1
   5c574:	sub	r1, r1, r7
   5c578:	str	r7, [sp, #48]	; 0x30
   5c57c:	str	r1, [sp, #40]	; 0x28
   5c580:	add	r1, r5, r2
   5c584:	ldr	r2, [sp, #68]	; 0x44
   5c588:	mla	r1, r3, r8, r1
   5c58c:	str	r1, [sp, #60]	; 0x3c
   5c590:	ldr	r1, [sp, #72]	; 0x48
   5c594:	mov	r3, r2
   5c598:	sub	r2, r2, #1
   5c59c:	clz	r2, r2
   5c5a0:	lsr	r2, r2, #5
   5c5a4:	mul	r1, r1, r8
   5c5a8:	mov	r8, #0
   5c5ac:	str	r1, [sp, #76]	; 0x4c
   5c5b0:	subs	r1, r5, #1
   5c5b4:	movwne	r1, #1
   5c5b8:	and	r1, r1, r2
   5c5bc:	and	r2, r5, #1
   5c5c0:	str	r1, [sp, #72]	; 0x48
   5c5c4:	lsl	r1, r3, #2
   5c5c8:	str	r2, [sp, #64]	; 0x40
   5c5cc:	bic	r2, r5, #1
   5c5d0:	str	r1, [sp, #36]	; 0x24
   5c5d4:	lsl	r1, r3, #1
   5c5d8:	str	r2, [sp, #56]	; 0x38
   5c5dc:	cmp	r5, #1
   5c5e0:	bge	5c610 <GetDataSlab+0x2c690>
   5c5e4:	ldr	r9, [sp, #76]	; 0x4c
   5c5e8:	ldr	lr, [sp, #92]	; 0x5c
   5c5ec:	ldr	r2, [sp, #84]	; 0x54
   5c5f0:	add	r8, r8, #1
   5c5f4:	add	lr, lr, r9
   5c5f8:	mov	r0, #0
   5c5fc:	str	lr, [sp, #92]	; 0x5c
   5c600:	cmp	r8, r2
   5c604:	beq	56c20 <GetDataSlab+0x26ca0>
   5c608:	cmp	r5, #1
   5c60c:	blt	5c5e4 <GetDataSlab+0x2c664>
   5c610:	ldr	r2, [sp, #72]	; 0x48
   5c614:	ldr	r9, [sp, #76]	; 0x4c
   5c618:	ldr	lr, [sp, #92]	; 0x5c
   5c61c:	mov	r0, #0
   5c620:	cmp	r2, #0
   5c624:	beq	5c748 <GetDataSlab+0x2c7c8>
   5c628:	ldr	r2, [sp, #60]	; 0x3c
   5c62c:	ldr	r4, [sp, #80]	; 0x50
   5c630:	ldr	r3, [sp, #88]	; 0x58
   5c634:	mla	r2, r9, r8, r2
   5c638:	add	r2, r4, r2
   5c63c:	cmp	r2, r3
   5c640:	bls	5c65c <GetDataSlab+0x2c6dc>
   5c644:	ldr	r2, [sp, #52]	; 0x34
   5c648:	mla	r2, r9, r8, r2
   5c64c:	add	r2, r4, r2
   5c650:	add	r4, r3, r5, lsl #3
   5c654:	cmp	r2, r4
   5c658:	bcc	5c748 <GetDataSlab+0x2c7c8>
   5c65c:	ldr	r0, [sp, #44]	; 0x2c
   5c660:	cmp	r0, #0
   5c664:	beq	5c6e0 <GetDataSlab+0x2c760>
   5c668:	mov	r2, lr
   5c66c:	ldr	r7, [sp, #88]	; 0x58
   5c670:	ldr	r4, [sp, #40]	; 0x28
   5c674:	ldr	lr, [sp, #36]	; 0x24
   5c678:	mov	r0, #0
   5c67c:	add	sl, sp, #272	; 0x110
   5c680:	ldrh	r9, [r2]
   5c684:	add	r3, sp, #288	; 0x120
   5c688:	add	r6, r7, #16
   5c68c:	subs	r4, r4, #2
   5c690:	add	r0, r0, #4
   5c694:	strh	r9, [sl, #16]
   5c698:	vld1.16	{d16[0]}, [r3 :16]
   5c69c:	mov	r3, #32
   5c6a0:	vmovl.u8	q8, d16
   5c6a4:	vmovl.u16	q8, d16
   5c6a8:	vmovl.u32	q8, d16
   5c6ac:	vst1.64	{d16-d17}, [r7], r3
   5c6b0:	add	r3, r2, r1
   5c6b4:	add	r2, r2, lr
   5c6b8:	ldrh	r3, [r3]
   5c6bc:	strh	r3, [sl, #20]
   5c6c0:	add	r3, sp, #292	; 0x124
   5c6c4:	vld1.16	{d16[0]}, [r3 :16]
   5c6c8:	vmovl.u8	q8, d16
   5c6cc:	vmovl.u16	q8, d16
   5c6d0:	vmovl.u32	q8, d16
   5c6d4:	vst1.64	{d16-d17}, [r6]
   5c6d8:	bne	5c680 <GetDataSlab+0x2c700>
   5c6dc:	b	5c6e4 <GetDataSlab+0x2c764>
   5c6e0:	mov	r0, #0
   5c6e4:	ldr	r2, [sp, #48]	; 0x30
   5c6e8:	ldr	lr, [sp, #92]	; 0x5c
   5c6ec:	cmp	r2, #0
   5c6f0:	beq	5c728 <GetDataSlab+0x2c7a8>
   5c6f4:	ldr	r2, [sp, #68]	; 0x44
   5c6f8:	add	r3, sp, #272	; 0x110
   5c6fc:	mla	r2, r0, r2, lr
   5c700:	ldrh	r2, [r2]
   5c704:	strh	r2, [r3, #12]
   5c708:	add	r2, sp, #284	; 0x11c
   5c70c:	vld1.16	{d16[0]}, [r2 :16]
   5c710:	ldr	r2, [sp, #88]	; 0x58
   5c714:	add	r0, r2, r0, lsl #3
   5c718:	vmovl.u8	q8, d16
   5c71c:	vmovl.u16	q8, d16
   5c720:	vmovl.u32	q8, d16
   5c724:	vst1.64	{d16-d17}, [r0]
   5c728:	ldr	r2, [sp, #56]	; 0x38
   5c72c:	ldr	r0, [sp, #88]	; 0x58
   5c730:	ldr	r9, [sp, #76]	; 0x4c
   5c734:	add	r0, r0, r2, lsl #3
   5c738:	cmp	r5, r2
   5c73c:	str	r0, [sp, #88]	; 0x58
   5c740:	mov	r0, r2
   5c744:	beq	5c5ec <GetDataSlab+0x2c66c>
   5c748:	ldr	r2, [sp, #64]	; 0x40
   5c74c:	cmp	r2, #0
   5c750:	bne	5c75c <GetDataSlab+0x2c7dc>
   5c754:	mov	r4, r0
   5c758:	b	5c77c <GetDataSlab+0x2c7fc>
   5c75c:	ldr	r2, [sp, #68]	; 0x44
   5c760:	ldr	r3, [sp, #88]	; 0x58
   5c764:	orr	r4, r0, #1
   5c768:	mul	r2, r0, r2
   5c76c:	ldrb	r2, [lr, r2]
   5c770:	stm	r3, {r2, ip}
   5c774:	add	r3, r3, #8
   5c778:	str	r3, [sp, #88]	; 0x58
   5c77c:	orr	r0, r0, #1
   5c780:	cmp	r5, r0
   5c784:	beq	5c5ec <GetDataSlab+0x2c66c>
   5c788:	ldr	r6, [sp, #68]	; 0x44
   5c78c:	add	r3, r4, #1
   5c790:	sub	r2, r5, r4
   5c794:	mov	r7, lr
   5c798:	mul	r0, r6, r4
   5c79c:	mul	r4, r6, r3
   5c7a0:	ldr	r6, [sp, #88]	; 0x58
   5c7a4:	ldrb	r3, [r7, r0]
   5c7a8:	subs	r2, r2, #2
   5c7ac:	stm	r6, {r3, ip}
   5c7b0:	ldrb	r3, [r7, r4]
   5c7b4:	str	ip, [r6, #12]
   5c7b8:	add	r7, r7, r1
   5c7bc:	str	r3, [r6, #8]
   5c7c0:	add	r6, r6, #16
   5c7c4:	bne	5c7a4 <GetDataSlab+0x2c824>
   5c7c8:	str	r6, [sp, #88]	; 0x58
   5c7cc:	b	5c5ec <GetDataSlab+0x2c66c>
   5c7d0:	cmp	lr, #1
   5c7d4:	blt	5f88c <GetDataSlab+0x2f90c>
   5c7d8:	ldr	r0, [sp, #60]	; 0x3c
   5c7dc:	ldr	r1, [sp, #56]	; 0x38
   5c7e0:	mov	ip, #0
   5c7e4:	mla	r0, r1, r8, r0
   5c7e8:	mov	r1, #1
   5c7ec:	add	r0, r4, r0, lsl #1
   5c7f0:	str	r0, [sp, #92]	; 0x5c
   5c7f4:	sub	r0, r5, #2
   5c7f8:	add	r1, r1, r0, lsr #1
   5c7fc:	lsr	r0, r0, #1
   5c800:	str	r0, [sp, #56]	; 0x38
   5c804:	and	r2, r1, #1
   5c808:	sub	r1, r1, r2
   5c80c:	str	r2, [sp, #60]	; 0x3c
   5c810:	ldr	r2, [sp, #68]	; 0x44
   5c814:	str	r1, [sp, #48]	; 0x30
   5c818:	subs	r1, r5, #1
   5c81c:	movwne	r1, #1
   5c820:	mov	r3, r2
   5c824:	sub	r2, r2, #1
   5c828:	clz	r2, r2
   5c82c:	lsr	r2, r2, #5
   5c830:	and	r1, r1, r2
   5c834:	lsl	r2, r3, #2
   5c838:	str	r1, [sp, #76]	; 0x4c
   5c83c:	ldr	r1, [sp, #72]	; 0x48
   5c840:	mul	r1, r1, r8
   5c844:	mov	r8, #32
   5c848:	lsl	r1, r1, #1
   5c84c:	str	r1, [sp, #80]	; 0x50
   5c850:	lsl	r1, r3, #1
   5c854:	str	r1, [sp, #52]	; 0x34
   5c858:	lsl	r1, r3, #3
   5c85c:	str	r1, [sp, #44]	; 0x2c
   5c860:	and	r1, r5, #1
   5c864:	ldr	r9, [sp, #44]	; 0x2c
   5c868:	str	r1, [sp, #72]	; 0x48
   5c86c:	bic	r1, r5, #1
   5c870:	str	r1, [sp, #64]	; 0x40
   5c874:	cmp	r5, #1
   5c878:	bge	5c8a8 <GetDataSlab+0x2c928>
   5c87c:	ldr	lr, [sp, #92]	; 0x5c
   5c880:	ldr	r0, [sp, #80]	; 0x50
   5c884:	ldr	r1, [sp, #84]	; 0x54
   5c888:	add	ip, ip, #1
   5c88c:	add	lr, lr, r0
   5c890:	mov	r0, #0
   5c894:	cmp	ip, r1
   5c898:	str	lr, [sp, #92]	; 0x5c
   5c89c:	beq	56c20 <GetDataSlab+0x26ca0>
   5c8a0:	cmp	r5, #1
   5c8a4:	blt	5c87c <GetDataSlab+0x2c8fc>
   5c8a8:	ldr	r1, [sp, #76]	; 0x4c
   5c8ac:	ldr	lr, [sp, #92]	; 0x5c
   5c8b0:	mov	r0, #0
   5c8b4:	add	r3, sp, #252	; 0xfc
   5c8b8:	cmp	r1, #0
   5c8bc:	beq	5c984 <GetDataSlab+0x2ca04>
   5c8c0:	ldr	r0, [sp, #56]	; 0x38
   5c8c4:	cmp	r0, #0
   5c8c8:	beq	5c928 <GetDataSlab+0x2c9a8>
   5c8cc:	ldr	r7, [sp, #88]	; 0x58
   5c8d0:	ldr	r4, [sp, #48]	; 0x30
   5c8d4:	mov	r1, lr
   5c8d8:	mov	r0, #0
   5c8dc:	add	lr, sp, #256	; 0x100
   5c8e0:	ldr	r6, [r1]
   5c8e4:	subs	r4, r4, #2
   5c8e8:	add	r0, r0, #4
   5c8ec:	str	r6, [sp, #252]	; 0xfc
   5c8f0:	add	r6, r7, #16
   5c8f4:	vld1.32	{d16[0]}, [r3 :32]
   5c8f8:	vmovl.s16	q8, d16
   5c8fc:	vmovl.s32	q8, d16
   5c900:	vst1.64	{d16-d17}, [r7], r8
   5c904:	ldr	sl, [r1, r2]
   5c908:	add	r1, r1, r9
   5c90c:	str	sl, [sp, #256]	; 0x100
   5c910:	vld1.32	{d16[0]}, [lr :32]
   5c914:	vmovl.s16	q8, d16
   5c918:	vmovl.s32	q8, d16
   5c91c:	vst1.64	{d16-d17}, [r6]
   5c920:	bne	5c8e0 <GetDataSlab+0x2c960>
   5c924:	b	5c92c <GetDataSlab+0x2c9ac>
   5c928:	mov	r0, #0
   5c92c:	ldr	r1, [sp, #60]	; 0x3c
   5c930:	ldr	lr, [sp, #92]	; 0x5c
   5c934:	cmp	r1, #0
   5c938:	beq	5c968 <GetDataSlab+0x2c9e8>
   5c93c:	ldr	r1, [sp, #68]	; 0x44
   5c940:	mul	r1, r0, r1
   5c944:	ldr	r1, [lr, r1, lsl #1]
   5c948:	str	r1, [sp, #248]	; 0xf8
   5c94c:	add	r1, sp, #248	; 0xf8
   5c950:	vld1.32	{d16[0]}, [r1 :32]
   5c954:	ldr	r1, [sp, #88]	; 0x58
   5c958:	add	r0, r1, r0, lsl #3
   5c95c:	vmovl.s16	q8, d16
   5c960:	vmovl.s32	q8, d16
   5c964:	vst1.64	{d16-d17}, [r0]
   5c968:	ldr	r1, [sp, #64]	; 0x40
   5c96c:	ldr	r0, [sp, #88]	; 0x58
   5c970:	add	r0, r0, r1, lsl #3
   5c974:	cmp	r5, r1
   5c978:	str	r0, [sp, #88]	; 0x58
   5c97c:	mov	r0, r1
   5c980:	beq	5c880 <GetDataSlab+0x2c900>
   5c984:	ldr	r1, [sp, #72]	; 0x48
   5c988:	cmp	r1, #0
   5c98c:	bne	5c998 <GetDataSlab+0x2ca18>
   5c990:	mov	r4, r0
   5c994:	b	5c9c4 <GetDataSlab+0x2ca44>
   5c998:	ldr	r1, [sp, #68]	; 0x44
   5c99c:	ldr	r3, [sp, #88]	; 0x58
   5c9a0:	mul	r1, r0, r1
   5c9a4:	add	r1, lr, r1, lsl #1
   5c9a8:	ldrsh	r4, [r1]
   5c9ac:	asr	r1, r4, #31
   5c9b0:	str	r4, [r3]
   5c9b4:	orr	r4, r0, #1
   5c9b8:	str	r1, [r3, #4]
   5c9bc:	add	r3, r3, #8
   5c9c0:	str	r3, [sp, #88]	; 0x58
   5c9c4:	orr	r0, r0, #1
   5c9c8:	cmp	r5, r0
   5c9cc:	beq	5c880 <GetDataSlab+0x2c900>
   5c9d0:	ldr	r3, [sp, #52]	; 0x34
   5c9d4:	sub	r1, r5, r4
   5c9d8:	mov	r7, lr
   5c9dc:	mul	r0, r3, r4
   5c9e0:	add	r4, r4, #1
   5c9e4:	mul	r4, r3, r4
   5c9e8:	ldr	r3, [sp, #88]	; 0x58
   5c9ec:	add	r6, r7, r0
   5c9f0:	subs	r1, r1, #2
   5c9f4:	ldrsh	r6, [r6]
   5c9f8:	str	r6, [r3]
   5c9fc:	asr	r6, r6, #31
   5ca00:	str	r6, [r3, #4]
   5ca04:	add	r6, r7, r4
   5ca08:	add	r7, r7, r2
   5ca0c:	ldrsh	r6, [r6]
   5ca10:	str	r6, [r3, #8]
   5ca14:	asr	r6, r6, #31
   5ca18:	str	r6, [r3, #12]
   5ca1c:	add	r3, r3, #16
   5ca20:	bne	5c9ec <GetDataSlab+0x2ca6c>
   5ca24:	str	r3, [sp, #88]	; 0x58
   5ca28:	b	5c880 <GetDataSlab+0x2c900>
   5ca2c:	cmp	lr, #1
   5ca30:	blt	5f88c <GetDataSlab+0x2f90c>
   5ca34:	ldr	r0, [sp, #60]	; 0x3c
   5ca38:	ldr	r1, [sp, #56]	; 0x38
   5ca3c:	mov	r9, #0
   5ca40:	mov	sl, #32
   5ca44:	mla	r0, r1, r8, r0
   5ca48:	mov	r1, #1
   5ca4c:	add	r0, r4, r0, lsl #1
   5ca50:	str	r0, [sp, #92]	; 0x5c
   5ca54:	sub	r0, r5, #2
   5ca58:	add	r1, r1, r0, lsr #1
   5ca5c:	lsr	r0, r0, #1
   5ca60:	str	r0, [sp, #48]	; 0x30
   5ca64:	mov	r0, #0
   5ca68:	and	r2, r1, #1
   5ca6c:	str	r0, [sp, #80]	; 0x50
   5ca70:	sub	r1, r1, r2
   5ca74:	str	r2, [sp, #56]	; 0x38
   5ca78:	ldr	r2, [sp, #68]	; 0x44
   5ca7c:	str	r1, [sp, #40]	; 0x28
   5ca80:	subs	r1, r5, #1
   5ca84:	movwne	r1, #1
   5ca88:	mov	r3, r2
   5ca8c:	sub	r2, r2, #1
   5ca90:	clz	r2, r2
   5ca94:	lsr	r2, r2, #5
   5ca98:	and	r1, r1, r2
   5ca9c:	lsl	r2, r3, #2
   5caa0:	str	r1, [sp, #60]	; 0x3c
   5caa4:	ldr	r1, [sp, #72]	; 0x48
   5caa8:	mul	r1, r1, r8
   5caac:	lsl	r1, r1, #1
   5cab0:	str	r1, [sp, #76]	; 0x4c
   5cab4:	lsl	r1, r3, #1
   5cab8:	str	r1, [sp, #44]	; 0x2c
   5cabc:	lsl	r1, r3, #3
   5cac0:	str	r1, [sp, #64]	; 0x40
   5cac4:	and	r1, r5, #1
   5cac8:	str	r1, [sp, #72]	; 0x48
   5cacc:	bic	r1, r5, #1
   5cad0:	str	r1, [sp, #52]	; 0x34
   5cad4:	cmp	r5, #1
   5cad8:	bge	5cb10 <GetDataSlab+0x2cb90>
   5cadc:	ldr	ip, [sp, #84]	; 0x54
   5cae0:	ldr	lr, [sp, #92]	; 0x5c
   5cae4:	ldr	r1, [sp, #80]	; 0x50
   5cae8:	ldr	r0, [sp, #76]	; 0x4c
   5caec:	add	r1, r1, #1
   5caf0:	add	lr, lr, r0
   5caf4:	mov	r0, #0
   5caf8:	cmp	r1, ip
   5cafc:	str	lr, [sp, #92]	; 0x5c
   5cb00:	str	r1, [sp, #80]	; 0x50
   5cb04:	beq	56c20 <GetDataSlab+0x26ca0>
   5cb08:	cmp	r5, #1
   5cb0c:	blt	5cadc <GetDataSlab+0x2cb5c>
   5cb10:	ldr	r1, [sp, #60]	; 0x3c
   5cb14:	ldr	ip, [sp, #84]	; 0x54
   5cb18:	ldr	lr, [sp, #92]	; 0x5c
   5cb1c:	mov	r0, #0
   5cb20:	add	r3, sp, #264	; 0x108
   5cb24:	cmp	r1, #0
   5cb28:	beq	5cbf0 <GetDataSlab+0x2cc70>
   5cb2c:	ldr	r0, [sp, #48]	; 0x30
   5cb30:	ldr	r1, [sp, #64]	; 0x40
   5cb34:	cmp	r0, #0
   5cb38:	mov	r0, #0
   5cb3c:	beq	5cb94 <GetDataSlab+0x2cc14>
   5cb40:	ldr	r4, [sp, #88]	; 0x58
   5cb44:	ldr	r6, [sp, #40]	; 0x28
   5cb48:	mov	ip, lr
   5cb4c:	add	r8, sp, #268	; 0x10c
   5cb50:	ldr	r7, [ip]
   5cb54:	subs	r6, r6, #2
   5cb58:	add	r0, r0, #4
   5cb5c:	str	r7, [sp, #264]	; 0x108
   5cb60:	add	r7, r4, #16
   5cb64:	vld1.32	{d16[0]}, [r3 :32]
   5cb68:	vmovl.u16	q8, d16
   5cb6c:	vmovl.u32	q8, d16
   5cb70:	vst1.64	{d16-d17}, [r4], sl
   5cb74:	ldr	lr, [ip, r2]
   5cb78:	add	ip, ip, r1
   5cb7c:	str	lr, [sp, #268]	; 0x10c
   5cb80:	vld1.32	{d16[0]}, [r8 :32]
   5cb84:	vmovl.u16	q8, d16
   5cb88:	vmovl.u32	q8, d16
   5cb8c:	vst1.64	{d16-d17}, [r7]
   5cb90:	bne	5cb50 <GetDataSlab+0x2cbd0>
   5cb94:	ldr	r1, [sp, #56]	; 0x38
   5cb98:	ldr	lr, [sp, #92]	; 0x5c
   5cb9c:	cmp	r1, #0
   5cba0:	beq	5cbd0 <GetDataSlab+0x2cc50>
   5cba4:	ldr	r1, [sp, #68]	; 0x44
   5cba8:	mul	r7, r0, r1
   5cbac:	add	r1, sp, #260	; 0x104
   5cbb0:	ldr	r7, [lr, r7, lsl #1]
   5cbb4:	str	r7, [sp, #260]	; 0x104
   5cbb8:	vld1.32	{d16[0]}, [r1 :32]
   5cbbc:	ldr	r1, [sp, #88]	; 0x58
   5cbc0:	add	r0, r1, r0, lsl #3
   5cbc4:	vmovl.u16	q8, d16
   5cbc8:	vmovl.u32	q8, d16
   5cbcc:	vst1.64	{d16-d17}, [r0]
   5cbd0:	ldr	r1, [sp, #52]	; 0x34
   5cbd4:	ldr	r0, [sp, #88]	; 0x58
   5cbd8:	ldr	ip, [sp, #84]	; 0x54
   5cbdc:	add	r0, r0, r1, lsl #3
   5cbe0:	cmp	r5, r1
   5cbe4:	str	r0, [sp, #88]	; 0x58
   5cbe8:	mov	r0, r1
   5cbec:	beq	5cae4 <GetDataSlab+0x2cb64>
   5cbf0:	ldr	r1, [sp, #72]	; 0x48
   5cbf4:	cmp	r1, #0
   5cbf8:	bne	5cc04 <GetDataSlab+0x2cc84>
   5cbfc:	mov	r7, r0
   5cc00:	b	5cc28 <GetDataSlab+0x2cca8>
   5cc04:	ldr	r1, [sp, #68]	; 0x44
   5cc08:	mul	r7, r0, r1
   5cc0c:	ldr	r1, [sp, #88]	; 0x58
   5cc10:	add	r7, lr, r7, lsl #1
   5cc14:	ldrh	r4, [r7]
   5cc18:	orr	r7, r0, #1
   5cc1c:	stm	r1, {r4, r9}
   5cc20:	add	r1, r1, #8
   5cc24:	str	r1, [sp, #88]	; 0x58
   5cc28:	orr	r0, r0, #1
   5cc2c:	cmp	r5, r0
   5cc30:	beq	5cae4 <GetDataSlab+0x2cb64>
   5cc34:	ldr	r1, [sp, #44]	; 0x2c
   5cc38:	sub	r6, r5, r7
   5cc3c:	mul	r0, r1, r7
   5cc40:	add	r7, r7, #1
   5cc44:	mul	r4, r1, r7
   5cc48:	ldr	r1, [sp, #88]	; 0x58
   5cc4c:	mov	r7, lr
   5cc50:	add	r3, r7, r0
   5cc54:	subs	r6, r6, #2
   5cc58:	ldrh	r3, [r3]
   5cc5c:	stm	r1, {r3, r9}
   5cc60:	add	r3, r7, r4
   5cc64:	add	r7, r7, r2
   5cc68:	ldrh	r3, [r3]
   5cc6c:	str	r9, [r1, #12]
   5cc70:	str	r3, [r1, #8]
   5cc74:	add	r1, r1, #16
   5cc78:	bne	5cc50 <GetDataSlab+0x2ccd0>
   5cc7c:	str	r1, [sp, #88]	; 0x58
   5cc80:	b	5cae4 <GetDataSlab+0x2cb64>
   5cc84:	cmp	lr, #1
   5cc88:	blt	5f88c <GetDataSlab+0x2f90c>
   5cc8c:	ldr	r0, [sp, #60]	; 0x3c
   5cc90:	ldr	r1, [sp, #56]	; 0x38
   5cc94:	mov	r7, r8
   5cc98:	mov	ip, #32
   5cc9c:	mla	r0, r1, r8, r0
   5cca0:	mov	r1, #1
   5cca4:	add	r0, r4, r0, lsl #2
   5cca8:	str	r0, [sp, #92]	; 0x5c
   5ccac:	sub	r0, r5, #2
   5ccb0:	add	r1, r1, r0, lsr #1
   5ccb4:	lsr	r0, r0, #1
   5ccb8:	str	r0, [sp, #52]	; 0x34
   5ccbc:	mov	r0, #0
   5ccc0:	and	r2, r1, #1
   5ccc4:	str	r0, [sp, #80]	; 0x50
   5ccc8:	sub	r1, r1, r2
   5cccc:	str	r2, [sp, #56]	; 0x38
   5ccd0:	ldr	r2, [sp, #68]	; 0x44
   5ccd4:	str	r1, [sp, #44]	; 0x2c
   5ccd8:	subs	r1, r5, #1
   5ccdc:	movwne	r1, #1
   5cce0:	mov	r3, r2
   5cce4:	sub	r2, r2, #1
   5cce8:	clz	r2, r2
   5ccec:	lsr	r2, r2, #5
   5ccf0:	and	r1, r1, r2
   5ccf4:	lsl	r2, r3, #3
   5ccf8:	str	r1, [sp, #60]	; 0x3c
   5ccfc:	ldr	r1, [sp, #72]	; 0x48
   5cd00:	mul	r1, r1, r8
   5cd04:	lsl	r1, r1, #2
   5cd08:	str	r1, [sp, #76]	; 0x4c
   5cd0c:	lsl	r1, r3, #2
   5cd10:	str	r1, [sp, #48]	; 0x30
   5cd14:	lsl	r1, r3, #4
   5cd18:	str	r1, [sp, #40]	; 0x28
   5cd1c:	and	r1, r5, #1
   5cd20:	ldr	r8, [sp, #40]	; 0x28
   5cd24:	str	r1, [sp, #72]	; 0x48
   5cd28:	bic	r1, r5, #1
   5cd2c:	str	r1, [sp, #64]	; 0x40
   5cd30:	cmp	r5, #1
   5cd34:	bge	5cd6c <GetDataSlab+0x2cdec>
   5cd38:	ldr	lr, [sp, #92]	; 0x5c
   5cd3c:	ldr	r3, [sp, #80]	; 0x50
   5cd40:	ldr	r0, [sp, #76]	; 0x4c
   5cd44:	ldr	r1, [sp, #84]	; 0x54
   5cd48:	add	r3, r3, #1
   5cd4c:	add	lr, lr, r0
   5cd50:	mov	r0, #0
   5cd54:	cmp	r3, r1
   5cd58:	str	lr, [sp, #92]	; 0x5c
   5cd5c:	str	r3, [sp, #80]	; 0x50
   5cd60:	beq	56c20 <GetDataSlab+0x26ca0>
   5cd64:	cmp	r5, #1
   5cd68:	blt	5cd38 <GetDataSlab+0x2cdb8>
   5cd6c:	ldr	r1, [sp, #60]	; 0x3c
   5cd70:	ldr	lr, [sp, #92]	; 0x5c
   5cd74:	mov	r0, #0
   5cd78:	cmp	r1, #0
   5cd7c:	beq	5ce58 <GetDataSlab+0x2ced8>
   5cd80:	ldr	r0, [sp, #52]	; 0x34
   5cd84:	cmp	r0, #0
   5cd88:	beq	5cdf4 <GetDataSlab+0x2ce74>
   5cd8c:	ldr	r9, [sp, #88]	; 0x58
   5cd90:	ldr	r7, [sp, #44]	; 0x2c
   5cd94:	mov	r1, lr
   5cd98:	mov	r0, #0
   5cd9c:	add	lr, sp, #216	; 0xd8
   5cda0:	ldm	r1, {r4, sl}
   5cda4:	str	sl, [sp, #212]	; 0xd4
   5cda8:	add	r3, sp, #208	; 0xd0
   5cdac:	subs	r7, r7, #2
   5cdb0:	add	r0, r0, #4
   5cdb4:	str	r4, [sp, #208]	; 0xd0
   5cdb8:	add	r4, r9, #16
   5cdbc:	vld1.32	{d16}, [r3 :64]
   5cdc0:	add	r3, r1, r8
   5cdc4:	vmovl.s32	q8, d16
   5cdc8:	vst1.64	{d16-d17}, [r9], ip
   5cdcc:	ldr	r6, [r1, r2]!
   5cdd0:	str	r6, [sp, #216]	; 0xd8
   5cdd4:	ldr	r1, [r1, #4]
   5cdd8:	str	r1, [sp, #220]	; 0xdc
   5cddc:	mov	r1, r3
   5cde0:	vld1.32	{d16}, [lr :64]
   5cde4:	vmovl.s32	q8, d16
   5cde8:	vst1.64	{d16-d17}, [r4]
   5cdec:	bne	5cda0 <GetDataSlab+0x2ce20>
   5cdf0:	b	5cdf8 <GetDataSlab+0x2ce78>
   5cdf4:	mov	r0, #0
   5cdf8:	ldr	r1, [sp, #56]	; 0x38
   5cdfc:	ldr	lr, [sp, #92]	; 0x5c
   5ce00:	cmp	r1, #0
   5ce04:	beq	5ce3c <GetDataSlab+0x2cebc>
   5ce08:	ldr	r1, [sp, #68]	; 0x44
   5ce0c:	mov	r3, lr
   5ce10:	mul	r1, r0, r1
   5ce14:	ldr	r1, [r3, r1, lsl #2]!
   5ce18:	str	r1, [sp, #200]	; 0xc8
   5ce1c:	ldr	r1, [r3, #4]
   5ce20:	str	r1, [sp, #204]	; 0xcc
   5ce24:	add	r1, sp, #200	; 0xc8
   5ce28:	vld1.32	{d16}, [r1 :64]
   5ce2c:	ldr	r1, [sp, #88]	; 0x58
   5ce30:	add	r0, r1, r0, lsl #3
   5ce34:	vmovl.s32	q8, d16
   5ce38:	vst1.64	{d16-d17}, [r0]
   5ce3c:	ldr	r1, [sp, #64]	; 0x40
   5ce40:	ldr	r0, [sp, #88]	; 0x58
   5ce44:	add	r0, r0, r1, lsl #3
   5ce48:	cmp	r5, r1
   5ce4c:	str	r0, [sp, #88]	; 0x58
   5ce50:	mov	r0, r1
   5ce54:	beq	5cd3c <GetDataSlab+0x2cdbc>
   5ce58:	ldr	r1, [sp, #72]	; 0x48
   5ce5c:	cmp	r1, #0
   5ce60:	bne	5ce6c <GetDataSlab+0x2ceec>
   5ce64:	mov	r4, r0
   5ce68:	b	5ce94 <GetDataSlab+0x2cf14>
   5ce6c:	ldr	r1, [sp, #68]	; 0x44
   5ce70:	ldr	r3, [sp, #88]	; 0x58
   5ce74:	mul	r1, r0, r1
   5ce78:	ldr	r4, [lr, r1, lsl #2]
   5ce7c:	asr	r1, r4, #31
   5ce80:	str	r4, [r3]
   5ce84:	orr	r4, r0, #1
   5ce88:	str	r1, [r3, #4]
   5ce8c:	add	r3, r3, #8
   5ce90:	str	r3, [sp, #88]	; 0x58
   5ce94:	orr	r0, r0, #1
   5ce98:	cmp	r5, r0
   5ce9c:	beq	5cd3c <GetDataSlab+0x2cdbc>
   5cea0:	ldr	r6, [sp, #48]	; 0x30
   5cea4:	add	r3, r4, #1
   5cea8:	sub	r1, r5, r4
   5ceac:	mul	r0, r6, r4
   5ceb0:	mul	r7, r6, r3
   5ceb4:	ldr	r6, [sp, #88]	; 0x58
   5ceb8:	mov	r4, lr
   5cebc:	ldr	r3, [r4, r0]
   5cec0:	subs	r1, r1, #2
   5cec4:	str	r3, [r6]
   5cec8:	asr	r3, r3, #31
   5cecc:	str	r3, [r6, #4]
   5ced0:	ldr	r3, [r4, r7]
   5ced4:	add	r4, r4, r2
   5ced8:	str	r3, [r6, #8]
   5cedc:	asr	r3, r3, #31
   5cee0:	str	r3, [r6, #12]
   5cee4:	add	r6, r6, #16
   5cee8:	bne	5cebc <GetDataSlab+0x2cf3c>
   5ceec:	str	r6, [sp, #88]	; 0x58
   5cef0:	b	5cd3c <GetDataSlab+0x2cdbc>
   5cef4:	cmp	lr, #1
   5cef8:	blt	5f88c <GetDataSlab+0x2f90c>
   5cefc:	ldr	r0, [sp, #60]	; 0x3c
   5cf00:	ldr	r1, [sp, #56]	; 0x38
   5cf04:	mla	r0, r1, r8, r0
   5cf08:	mov	r1, #1
   5cf0c:	add	r0, r4, r0, lsl #2
   5cf10:	str	r0, [sp, #92]	; 0x5c
   5cf14:	sub	r0, r5, #2
   5cf18:	add	r1, r1, r0, lsr #1
   5cf1c:	lsr	r0, r0, #1
   5cf20:	str	r0, [sp, #52]	; 0x34
   5cf24:	mov	r0, #0
   5cf28:	and	r2, r1, #1
   5cf2c:	str	r0, [sp, #80]	; 0x50
   5cf30:	sub	r1, r1, r2
   5cf34:	str	r2, [sp, #56]	; 0x38
   5cf38:	ldr	r2, [sp, #68]	; 0x44
   5cf3c:	str	r1, [sp, #44]	; 0x2c
   5cf40:	subs	r1, r5, #1
   5cf44:	movwne	r1, #1
   5cf48:	mov	r3, r2
   5cf4c:	sub	r2, r2, #1
   5cf50:	clz	r2, r2
   5cf54:	lsl	r9, r3, #3
   5cf58:	lsr	r2, r2, #5
   5cf5c:	and	r1, r1, r2
   5cf60:	str	r1, [sp, #60]	; 0x3c
   5cf64:	ldr	r1, [sp, #72]	; 0x48
   5cf68:	mul	r1, r1, r8
   5cf6c:	lsl	r1, r1, #2
   5cf70:	str	r1, [sp, #76]	; 0x4c
   5cf74:	lsl	r1, r3, #2
   5cf78:	str	r1, [sp, #48]	; 0x30
   5cf7c:	lsl	r1, r3, #4
   5cf80:	str	r1, [sp, #40]	; 0x28
   5cf84:	and	r1, r5, #1
   5cf88:	ldr	sl, [sp, #40]	; 0x28
   5cf8c:	str	r1, [sp, #72]	; 0x48
   5cf90:	bic	r1, r5, #1
   5cf94:	str	r1, [sp, #64]	; 0x40
   5cf98:	cmp	r5, #1
   5cf9c:	bge	5cfd4 <GetDataSlab+0x2d054>
   5cfa0:	ldr	ip, [sp, #84]	; 0x54
   5cfa4:	ldr	lr, [sp, #92]	; 0x5c
   5cfa8:	ldr	r1, [sp, #80]	; 0x50
   5cfac:	ldr	r0, [sp, #76]	; 0x4c
   5cfb0:	add	r1, r1, #1
   5cfb4:	add	lr, lr, r0
   5cfb8:	mov	r0, #0
   5cfbc:	cmp	r1, ip
   5cfc0:	str	lr, [sp, #92]	; 0x5c
   5cfc4:	str	r1, [sp, #80]	; 0x50
   5cfc8:	beq	56c20 <GetDataSlab+0x26ca0>
   5cfcc:	cmp	r5, #1
   5cfd0:	blt	5cfa0 <GetDataSlab+0x2d020>
   5cfd4:	ldr	r1, [sp, #60]	; 0x3c
   5cfd8:	ldr	ip, [sp, #84]	; 0x54
   5cfdc:	ldr	lr, [sp, #92]	; 0x5c
   5cfe0:	mov	r0, #0
   5cfe4:	mov	r2, #0
   5cfe8:	cmp	r1, #0
   5cfec:	beq	5d0d4 <GetDataSlab+0x2d154>
   5cff0:	ldr	r0, [sp, #52]	; 0x34
   5cff4:	cmp	r0, #0
   5cff8:	beq	5d068 <GetDataSlab+0x2d0e8>
   5cffc:	ldr	r7, [sp, #88]	; 0x58
   5d000:	ldr	r4, [sp, #44]	; 0x2c
   5d004:	mov	r0, #0
   5d008:	mov	ip, lr
   5d00c:	mov	r2, #32
   5d010:	add	r8, sp, #240	; 0xf0
   5d014:	ldm	ip, {r6, lr}
   5d018:	str	lr, [sp, #236]	; 0xec
   5d01c:	add	r1, sp, #232	; 0xe8
   5d020:	add	r3, ip, sl
   5d024:	subs	r4, r4, #2
   5d028:	add	r0, r0, #4
   5d02c:	str	r6, [sp, #232]	; 0xe8
   5d030:	add	r6, r7, #16
   5d034:	vld1.32	{d16}, [r1 :64]
   5d038:	vmovl.u32	q8, d16
   5d03c:	vst1.64	{d16-d17}, [r7], r2
   5d040:	ldr	r1, [ip, r9]!
   5d044:	str	r1, [sp, #240]	; 0xf0
   5d048:	ldr	r1, [ip, #4]
   5d04c:	mov	ip, r3
   5d050:	str	r1, [sp, #244]	; 0xf4
   5d054:	vld1.32	{d16}, [r8 :64]
   5d058:	vmovl.u32	q8, d16
   5d05c:	vst1.64	{d16-d17}, [r6]
   5d060:	bne	5d014 <GetDataSlab+0x2d094>
   5d064:	b	5d06c <GetDataSlab+0x2d0ec>
   5d068:	mov	r0, #0
   5d06c:	ldr	r1, [sp, #56]	; 0x38
   5d070:	ldr	lr, [sp, #92]	; 0x5c
   5d074:	cmp	r1, #0
   5d078:	beq	5d0b0 <GetDataSlab+0x2d130>
   5d07c:	ldr	r1, [sp, #68]	; 0x44
   5d080:	mov	r3, lr
   5d084:	mul	r1, r0, r1
   5d088:	ldr	r1, [r3, r1, lsl #2]!
   5d08c:	str	r1, [sp, #224]	; 0xe0
   5d090:	ldr	r1, [r3, #4]
   5d094:	str	r1, [sp, #228]	; 0xe4
   5d098:	add	r1, sp, #224	; 0xe0
   5d09c:	vld1.32	{d16}, [r1 :64]
   5d0a0:	ldr	r1, [sp, #88]	; 0x58
   5d0a4:	add	r0, r1, r0, lsl #3
   5d0a8:	vmovl.u32	q8, d16
   5d0ac:	vst1.64	{d16-d17}, [r0]
   5d0b0:	ldr	r1, [sp, #64]	; 0x40
   5d0b4:	ldr	r0, [sp, #88]	; 0x58
   5d0b8:	ldr	ip, [sp, #84]	; 0x54
   5d0bc:	mov	r2, #0
   5d0c0:	add	r0, r0, r1, lsl #3
   5d0c4:	cmp	r5, r1
   5d0c8:	str	r0, [sp, #88]	; 0x58
   5d0cc:	mov	r0, r1
   5d0d0:	beq	5cfa8 <GetDataSlab+0x2d028>
   5d0d4:	ldr	r1, [sp, #72]	; 0x48
   5d0d8:	cmp	r1, #0
   5d0dc:	bne	5d0e8 <GetDataSlab+0x2d168>
   5d0e0:	mov	r4, r0
   5d0e4:	b	5d10c <GetDataSlab+0x2d18c>
   5d0e8:	ldr	r1, [sp, #68]	; 0x44
   5d0ec:	mul	r1, r0, r1
   5d0f0:	ldr	r4, [lr, r1, lsl #2]
   5d0f4:	ldr	r1, [sp, #88]	; 0x58
   5d0f8:	str	r4, [r1]
   5d0fc:	str	r2, [r1, #4]
   5d100:	orr	r4, r0, #1
   5d104:	add	r1, r1, #8
   5d108:	str	r1, [sp, #88]	; 0x58
   5d10c:	orr	r0, r0, #1
   5d110:	cmp	r5, r0
   5d114:	beq	5cfa8 <GetDataSlab+0x2d028>
   5d118:	ldr	r3, [sp, #48]	; 0x30
   5d11c:	add	r1, r4, #1
   5d120:	sub	r7, r5, r4
   5d124:	mov	r6, lr
   5d128:	mul	r0, r3, r4
   5d12c:	mul	r4, r3, r1
   5d130:	ldr	r3, [sp, #88]	; 0x58
   5d134:	ldr	r1, [r6, r0]
   5d138:	subs	r7, r7, #2
   5d13c:	stm	r3, {r1, r2}
   5d140:	ldr	r1, [r6, r4]
   5d144:	str	r2, [r3, #12]
   5d148:	add	r6, r6, r9
   5d14c:	str	r1, [r3, #8]
   5d150:	add	r3, r3, #16
   5d154:	bne	5d134 <GetDataSlab+0x2d1b4>
   5d158:	str	r3, [sp, #88]	; 0x58
   5d15c:	b	5cfa8 <GetDataSlab+0x2d028>
   5d160:	cmp	lr, #1
   5d164:	blt	5f88c <GetDataSlab+0x2f90c>
   5d168:	ldr	r0, [sp, #60]	; 0x3c
   5d16c:	ldr	r1, [sp, #56]	; 0x38
   5d170:	mla	r0, r1, r8, r0
   5d174:	add	r0, r4, r0, lsl #2
   5d178:	str	r0, [sp, #92]	; 0x5c
   5d17c:	and	r0, r5, #1
   5d180:	str	r0, [sp, #60]	; 0x3c
   5d184:	sub	r0, r5, r0
   5d188:	str	r0, [sp, #56]	; 0x38
   5d18c:	ldr	r0, [sp, #72]	; 0x48
   5d190:	mul	r0, r0, r8
   5d194:	lsl	r0, r0, #2
   5d198:	str	r0, [sp, #76]	; 0x4c
   5d19c:	ldr	r0, [sp, #68]	; 0x44
   5d1a0:	lsl	r6, r0, #3
   5d1a4:	lsl	r4, r0, #2
   5d1a8:	mov	r0, #0
   5d1ac:	str	r0, [sp, #80]	; 0x50
   5d1b0:	cmp	r5, #1
   5d1b4:	bge	5d1ec <GetDataSlab+0x2d26c>
   5d1b8:	ldr	r3, [sp, #84]	; 0x54
   5d1bc:	ldr	sl, [sp, #92]	; 0x5c
   5d1c0:	ldr	r7, [sp, #80]	; 0x50
   5d1c4:	ldr	r0, [sp, #76]	; 0x4c
   5d1c8:	add	r7, r7, #1
   5d1cc:	cmp	r7, r3
   5d1d0:	str	r7, [sp, #80]	; 0x50
   5d1d4:	add	sl, sl, r0
   5d1d8:	mov	r0, #0
   5d1dc:	str	sl, [sp, #92]	; 0x5c
   5d1e0:	beq	56c20 <GetDataSlab+0x26ca0>
   5d1e4:	cmp	r5, #1
   5d1e8:	blt	5d1b8 <GetDataSlab+0x2d238>
   5d1ec:	ldr	sl, [sp, #92]	; 0x5c
   5d1f0:	mov	r8, #0
   5d1f4:	bne	5d200 <GetDataSlab+0x2d280>
   5d1f8:	ldr	r3, [sp, #84]	; 0x54
   5d1fc:	b	5d244 <GetDataSlab+0x2d2c4>
   5d200:	ldr	r9, [sp, #88]	; 0x58
   5d204:	ldr	r7, [sp, #56]	; 0x38
   5d208:	mov	r8, #0
   5d20c:	ldr	r0, [sl]
   5d210:	bl	6b914 <__aeabi_f2lz>
   5d214:	strd	r0, [r9]
   5d218:	ldr	r0, [sl, r4]
   5d21c:	bl	6b914 <__aeabi_f2lz>
   5d220:	add	r8, r8, #2
   5d224:	strd	r0, [r9, #8]
   5d228:	add	sl, sl, r6
   5d22c:	add	r9, r9, #16
   5d230:	cmp	r7, r8
   5d234:	bne	5d20c <GetDataSlab+0x2d28c>
   5d238:	ldr	r3, [sp, #84]	; 0x54
   5d23c:	ldr	sl, [sp, #92]	; 0x5c
   5d240:	str	r9, [sp, #88]	; 0x58
   5d244:	ldr	r0, [sp, #60]	; 0x3c
   5d248:	ldr	r7, [sp, #80]	; 0x50
   5d24c:	cmp	r0, #0
   5d250:	beq	5d1c4 <GetDataSlab+0x2d244>
   5d254:	ldr	r0, [sp, #68]	; 0x44
   5d258:	mul	r0, r8, r0
   5d25c:	ldr	r0, [sl, r0, lsl #2]
   5d260:	bl	6b914 <__aeabi_f2lz>
   5d264:	ldr	r2, [sp, #88]	; 0x58
   5d268:	ldr	r3, [sp, #84]	; 0x54
   5d26c:	strd	r0, [r2]
   5d270:	add	r2, r2, #8
   5d274:	str	r2, [sp, #88]	; 0x58
   5d278:	b	5d1c4 <GetDataSlab+0x2d244>
   5d27c:	cmp	lr, #1
   5d280:	blt	5f88c <GetDataSlab+0x2f90c>
   5d284:	ldr	r0, [sp, #60]	; 0x3c
   5d288:	ldr	r1, [sp, #56]	; 0x38
   5d28c:	mla	r0, r1, r8, r0
   5d290:	add	r0, r4, r0, lsl #3
   5d294:	str	r0, [sp, #92]	; 0x5c
   5d298:	and	r0, r5, #1
   5d29c:	str	r0, [sp, #60]	; 0x3c
   5d2a0:	sub	r0, r5, r0
   5d2a4:	str	r0, [sp, #56]	; 0x38
   5d2a8:	ldr	r0, [sp, #72]	; 0x48
   5d2ac:	mul	r0, r0, r8
   5d2b0:	lsl	r0, r0, #3
   5d2b4:	str	r0, [sp, #76]	; 0x4c
   5d2b8:	ldr	r0, [sp, #68]	; 0x44
   5d2bc:	lsl	r6, r0, #4
   5d2c0:	lsl	r4, r0, #3
   5d2c4:	mov	r0, #0
   5d2c8:	str	r0, [sp, #80]	; 0x50
   5d2cc:	cmp	r5, #1
   5d2d0:	bge	5d308 <GetDataSlab+0x2d388>
   5d2d4:	ldr	r3, [sp, #84]	; 0x54
   5d2d8:	ldr	sl, [sp, #92]	; 0x5c
   5d2dc:	ldr	r7, [sp, #80]	; 0x50
   5d2e0:	ldr	r0, [sp, #76]	; 0x4c
   5d2e4:	add	r7, r7, #1
   5d2e8:	cmp	r7, r3
   5d2ec:	str	r7, [sp, #80]	; 0x50
   5d2f0:	add	sl, sl, r0
   5d2f4:	mov	r0, #0
   5d2f8:	str	sl, [sp, #92]	; 0x5c
   5d2fc:	beq	56c20 <GetDataSlab+0x26ca0>
   5d300:	cmp	r5, #1
   5d304:	blt	5d2d4 <GetDataSlab+0x2d354>
   5d308:	ldr	sl, [sp, #92]	; 0x5c
   5d30c:	mov	r8, #0
   5d310:	bne	5d31c <GetDataSlab+0x2d39c>
   5d314:	ldr	r3, [sp, #84]	; 0x54
   5d318:	b	5d36c <GetDataSlab+0x2d3ec>
   5d31c:	ldr	r9, [sp, #88]	; 0x58
   5d320:	ldr	r7, [sp, #56]	; 0x38
   5d324:	mov	r8, #0
   5d328:	vldr	d16, [sl]
   5d32c:	vmov	r0, r1, d16
   5d330:	bl	6b940 <__aeabi_d2lz>
   5d334:	strd	r0, [r9]
   5d338:	add	r0, sl, r4
   5d33c:	vldr	d16, [r0]
   5d340:	vmov	r0, r1, d16
   5d344:	bl	6b940 <__aeabi_d2lz>
   5d348:	add	r8, r8, #2
   5d34c:	strd	r0, [r9, #8]
   5d350:	add	sl, sl, r6
   5d354:	add	r9, r9, #16
   5d358:	cmp	r7, r8
   5d35c:	bne	5d328 <GetDataSlab+0x2d3a8>
   5d360:	ldr	r3, [sp, #84]	; 0x54
   5d364:	ldr	sl, [sp, #92]	; 0x5c
   5d368:	str	r9, [sp, #88]	; 0x58
   5d36c:	ldr	r0, [sp, #60]	; 0x3c
   5d370:	ldr	r7, [sp, #80]	; 0x50
   5d374:	cmp	r0, #0
   5d378:	beq	5d2e0 <GetDataSlab+0x2d360>
   5d37c:	ldr	r0, [sp, #68]	; 0x44
   5d380:	mul	r0, r8, r0
   5d384:	add	r0, sl, r0, lsl #3
   5d388:	vldr	d16, [r0]
   5d38c:	vmov	r0, r1, d16
   5d390:	bl	6b940 <__aeabi_d2lz>
   5d394:	ldr	r2, [sp, #88]	; 0x58
   5d398:	ldr	r3, [sp, #84]	; 0x54
   5d39c:	strd	r0, [r2]
   5d3a0:	add	r2, r2, #8
   5d3a4:	str	r2, [sp, #88]	; 0x58
   5d3a8:	b	5d2e0 <GetDataSlab+0x2d360>
   5d3ac:	cmp	lr, #1
   5d3b0:	blt	5f88c <GetDataSlab+0x2f90c>
   5d3b4:	ldr	r0, [sp, #60]	; 0x3c
   5d3b8:	ldr	r1, [sp, #56]	; 0x38
   5d3bc:	mov	r2, #1
   5d3c0:	mov	r7, r8
   5d3c4:	mov	r9, #0
   5d3c8:	mov	sl, #32
   5d3cc:	mla	r0, r1, r8, r0
   5d3d0:	lsl	r1, r5, #3
   5d3d4:	add	r1, r1, r0, lsl #3
   5d3d8:	add	r8, r4, r0, lsl #3
   5d3dc:	lsl	r0, r0, #3
   5d3e0:	str	r0, [sp, #36]	; 0x24
   5d3e4:	subs	r0, r5, #1
   5d3e8:	str	r1, [sp, #44]	; 0x2c
   5d3ec:	sub	r1, r5, #2
   5d3f0:	movwne	r0, #1
   5d3f4:	add	r2, r2, r1, lsr #1
   5d3f8:	and	r3, r2, #1
   5d3fc:	sub	r2, r2, r3
   5d400:	str	r3, [sp, #32]
   5d404:	str	r2, [sp, #20]
   5d408:	ldr	r2, [sp, #68]	; 0x44
   5d40c:	mov	r3, r2
   5d410:	sub	r2, r2, #1
   5d414:	clz	r2, r2
   5d418:	lsl	ip, r3, #5
   5d41c:	lsr	r2, r2, #5
   5d420:	and	r0, r0, r2
   5d424:	str	r0, [sp, #52]	; 0x34
   5d428:	ldr	r0, [sp, #72]	; 0x48
   5d42c:	mul	r0, r0, r7
   5d430:	lsl	r7, r3, #4
   5d434:	lsl	r6, r0, #3
   5d438:	lsl	r0, r3, #3
   5d43c:	str	r0, [sp, #40]	; 0x28
   5d440:	and	r0, r5, #1
   5d444:	str	r6, [sp, #92]	; 0x5c
   5d448:	str	r0, [sp, #48]	; 0x30
   5d44c:	bic	r0, r5, #1
   5d450:	str	r0, [sp, #28]
   5d454:	lsr	r0, r1, #1
   5d458:	str	r0, [sp, #24]
   5d45c:	cmp	r5, #1
   5d460:	bge	5d47c <GetDataSlab+0x2d4fc>
   5d464:	add	r9, r9, #1
   5d468:	add	r8, r8, r6
   5d46c:	cmp	r9, lr
   5d470:	beq	5ec84 <GetDataSlab+0x2ed04>
   5d474:	cmp	r5, #1
   5d478:	blt	5d464 <GetDataSlab+0x2d4e4>
   5d47c:	ldr	r0, [sp, #52]	; 0x34
   5d480:	mov	r3, #0
   5d484:	cmp	r0, #0
   5d488:	beq	5d548 <GetDataSlab+0x2d5c8>
   5d48c:	ldr	r0, [sp, #44]	; 0x2c
   5d490:	ldr	r1, [sp, #88]	; 0x58
   5d494:	mla	r0, r6, r9, r0
   5d498:	add	r0, r4, r0
   5d49c:	cmp	r0, r1
   5d4a0:	bls	5d4c0 <GetDataSlab+0x2d540>
   5d4a4:	ldr	r0, [sp, #36]	; 0x24
   5d4a8:	mla	r0, r6, r9, r0
   5d4ac:	add	r6, r1, r5, lsl #3
   5d4b0:	add	r0, r4, r0
   5d4b4:	cmp	r0, r6
   5d4b8:	ldr	r6, [sp, #92]	; 0x5c
   5d4bc:	bcc	5d548 <GetDataSlab+0x2d5c8>
   5d4c0:	ldr	r0, [sp, #24]
   5d4c4:	mov	r3, #0
   5d4c8:	cmp	r0, #0
   5d4cc:	beq	5d500 <GetDataSlab+0x2d580>
   5d4d0:	ldr	r6, [sp, #88]	; 0x58
   5d4d4:	ldr	r4, [sp, #20]
   5d4d8:	mov	r0, r8
   5d4dc:	add	r1, r0, r7
   5d4e0:	vld1.64	{d16-d17}, [r0], ip
   5d4e4:	add	r2, r6, #16
   5d4e8:	subs	r4, r4, #2
   5d4ec:	add	r3, r3, #4
   5d4f0:	vst1.64	{d16-d17}, [r6], sl
   5d4f4:	vld1.64	{d16-d17}, [r1]
   5d4f8:	vst1.64	{d16-d17}, [r2]
   5d4fc:	bne	5d4dc <GetDataSlab+0x2d55c>
   5d500:	ldr	r0, [sp, #32]
   5d504:	ldr	r6, [sp, #92]	; 0x5c
   5d508:	cmp	r0, #0
   5d50c:	beq	5d52c <GetDataSlab+0x2d5ac>
   5d510:	ldr	r0, [sp, #68]	; 0x44
   5d514:	mul	r0, r3, r0
   5d518:	add	r0, r8, r0, lsl #3
   5d51c:	vld1.64	{d16-d17}, [r0]
   5d520:	ldr	r0, [sp, #88]	; 0x58
   5d524:	add	r0, r0, r3, lsl #3
   5d528:	vst1.64	{d16-d17}, [r0]
   5d52c:	ldr	r3, [sp, #28]
   5d530:	ldr	r0, [sp, #88]	; 0x58
   5d534:	ldr	r4, [sp, #80]	; 0x50
   5d538:	add	r0, r0, r3, lsl #3
   5d53c:	cmp	r5, r3
   5d540:	str	r0, [sp, #88]	; 0x58
   5d544:	beq	5d464 <GetDataSlab+0x2d4e4>
   5d548:	ldr	r0, [sp, #48]	; 0x30
   5d54c:	cmp	r0, #0
   5d550:	bne	5d55c <GetDataSlab+0x2d5dc>
   5d554:	mov	r0, r3
   5d558:	b	5d584 <GetDataSlab+0x2d604>
   5d55c:	ldr	r0, [sp, #68]	; 0x44
   5d560:	mov	r1, r8
   5d564:	ldr	r2, [sp, #88]	; 0x58
   5d568:	mul	r0, r3, r0
   5d56c:	ldr	r0, [r1, r0, lsl #3]!
   5d570:	ldr	r1, [r1, #4]
   5d574:	strd	r0, [r2]
   5d578:	orr	r0, r3, #1
   5d57c:	add	r2, r2, #8
   5d580:	str	r2, [sp, #88]	; 0x58
   5d584:	orr	r1, r3, #1
   5d588:	cmp	r5, r1
   5d58c:	beq	5d464 <GetDataSlab+0x2d4e4>
   5d590:	ldr	r1, [sp, #40]	; 0x28
   5d594:	sub	r6, r5, r0
   5d598:	ldr	r4, [sp, #88]	; 0x58
   5d59c:	mul	r3, r1, r0
   5d5a0:	add	r0, r0, #1
   5d5a4:	mul	lr, r1, r0
   5d5a8:	mov	r0, r8
   5d5ac:	mov	r1, r0
   5d5b0:	subs	r6, r6, #2
   5d5b4:	ldr	r2, [r1, r3]!
   5d5b8:	ldr	r1, [r1, #4]
   5d5bc:	str	r2, [r4]
   5d5c0:	str	r1, [r4, #4]
   5d5c4:	add	r1, r0, r7
   5d5c8:	ldr	r2, [r0, lr]!
   5d5cc:	ldr	r0, [r0, #4]
   5d5d0:	str	r2, [r4, #8]
   5d5d4:	str	r0, [r4, #12]
   5d5d8:	add	r4, r4, #16
   5d5dc:	mov	r0, r1
   5d5e0:	bne	5d5ac <GetDataSlab+0x2d62c>
   5d5e4:	str	r4, [sp, #88]	; 0x58
   5d5e8:	ldr	r4, [sp, #80]	; 0x50
   5d5ec:	ldr	lr, [sp, #84]	; 0x54
   5d5f0:	ldr	r6, [sp, #92]	; 0x5c
   5d5f4:	b	5d464 <GetDataSlab+0x2d4e4>
   5d5f8:	cmp	lr, #1
   5d5fc:	blt	5f88c <GetDataSlab+0x2f90c>
   5d600:	ldr	r2, [sp, #60]	; 0x3c
   5d604:	ldr	r3, [sp, #56]	; 0x38
   5d608:	mov	r1, #1
   5d60c:	mov	ip, #0
   5d610:	mla	r0, r3, r8, r2
   5d614:	str	r0, [sp, #52]	; 0x34
   5d618:	add	r0, r4, r0
   5d61c:	str	r0, [sp, #92]	; 0x5c
   5d620:	sub	r0, r5, #2
   5d624:	add	r1, r1, r0, lsr #1
   5d628:	lsr	r0, r0, #1
   5d62c:	str	r0, [sp, #44]	; 0x2c
   5d630:	and	r7, r1, #1
   5d634:	sub	r1, r1, r7
   5d638:	str	r7, [sp, #48]	; 0x30
   5d63c:	str	r1, [sp, #40]	; 0x28
   5d640:	add	r1, r5, r2
   5d644:	ldr	r2, [sp, #68]	; 0x44
   5d648:	mla	r1, r3, r8, r1
   5d64c:	str	r1, [sp, #60]	; 0x3c
   5d650:	ldr	r1, [sp, #72]	; 0x48
   5d654:	mov	r3, r2
   5d658:	sub	r2, r2, #1
   5d65c:	clz	r2, r2
   5d660:	lsr	r2, r2, #5
   5d664:	mul	r1, r1, r8
   5d668:	mov	r8, #0
   5d66c:	str	r1, [sp, #76]	; 0x4c
   5d670:	subs	r1, r5, #1
   5d674:	movwne	r1, #1
   5d678:	and	r1, r1, r2
   5d67c:	and	r2, r5, #1
   5d680:	str	r1, [sp, #72]	; 0x48
   5d684:	lsl	r1, r3, #2
   5d688:	str	r2, [sp, #64]	; 0x40
   5d68c:	bic	r2, r5, #1
   5d690:	str	r1, [sp, #36]	; 0x24
   5d694:	lsl	r1, r3, #1
   5d698:	str	r2, [sp, #56]	; 0x38
   5d69c:	cmp	r5, #1
   5d6a0:	bge	5d6d0 <GetDataSlab+0x2d750>
   5d6a4:	ldr	r9, [sp, #76]	; 0x4c
   5d6a8:	ldr	lr, [sp, #92]	; 0x5c
   5d6ac:	ldr	r2, [sp, #84]	; 0x54
   5d6b0:	add	r8, r8, #1
   5d6b4:	add	lr, lr, r9
   5d6b8:	mov	r0, #0
   5d6bc:	str	lr, [sp, #92]	; 0x5c
   5d6c0:	cmp	r8, r2
   5d6c4:	beq	56c20 <GetDataSlab+0x26ca0>
   5d6c8:	cmp	r5, #1
   5d6cc:	blt	5d6a4 <GetDataSlab+0x2d724>
   5d6d0:	ldr	r2, [sp, #72]	; 0x48
   5d6d4:	ldr	r9, [sp, #76]	; 0x4c
   5d6d8:	ldr	lr, [sp, #92]	; 0x5c
   5d6dc:	mov	r0, #0
   5d6e0:	cmp	r2, #0
   5d6e4:	beq	5d808 <GetDataSlab+0x2d888>
   5d6e8:	ldr	r2, [sp, #60]	; 0x3c
   5d6ec:	ldr	r4, [sp, #80]	; 0x50
   5d6f0:	ldr	r3, [sp, #88]	; 0x58
   5d6f4:	mla	r2, r9, r8, r2
   5d6f8:	add	r2, r4, r2
   5d6fc:	cmp	r2, r3
   5d700:	bls	5d71c <GetDataSlab+0x2d79c>
   5d704:	ldr	r2, [sp, #52]	; 0x34
   5d708:	mla	r2, r9, r8, r2
   5d70c:	add	r2, r4, r2
   5d710:	add	r4, r3, r5, lsl #3
   5d714:	cmp	r2, r4
   5d718:	bcc	5d808 <GetDataSlab+0x2d888>
   5d71c:	ldr	r0, [sp, #44]	; 0x2c
   5d720:	cmp	r0, #0
   5d724:	beq	5d7a0 <GetDataSlab+0x2d820>
   5d728:	mov	r2, lr
   5d72c:	ldr	r7, [sp, #88]	; 0x58
   5d730:	ldr	r4, [sp, #40]	; 0x28
   5d734:	ldr	lr, [sp, #36]	; 0x24
   5d738:	mov	r0, #0
   5d73c:	add	sl, sp, #272	; 0x110
   5d740:	ldrh	r9, [r2]
   5d744:	add	r3, sp, #384	; 0x180
   5d748:	add	r6, r7, #16
   5d74c:	subs	r4, r4, #2
   5d750:	add	r0, r0, #4
   5d754:	strh	r9, [sl, #112]	; 0x70
   5d758:	vld1.16	{d16[0]}, [r3 :16]
   5d75c:	mov	r3, #32
   5d760:	vmovl.u8	q8, d16
   5d764:	vmovl.u16	q8, d16
   5d768:	vmovl.u32	q8, d16
   5d76c:	vst1.64	{d16-d17}, [r7], r3
   5d770:	add	r3, r2, r1
   5d774:	add	r2, r2, lr
   5d778:	ldrh	r3, [r3]
   5d77c:	strh	r3, [sl, #116]	; 0x74
   5d780:	add	r3, sp, #388	; 0x184
   5d784:	vld1.16	{d16[0]}, [r3 :16]
   5d788:	vmovl.u8	q8, d16
   5d78c:	vmovl.u16	q8, d16
   5d790:	vmovl.u32	q8, d16
   5d794:	vst1.64	{d16-d17}, [r6]
   5d798:	bne	5d740 <GetDataSlab+0x2d7c0>
   5d79c:	b	5d7a4 <GetDataSlab+0x2d824>
   5d7a0:	mov	r0, #0
   5d7a4:	ldr	r2, [sp, #48]	; 0x30
   5d7a8:	ldr	lr, [sp, #92]	; 0x5c
   5d7ac:	cmp	r2, #0
   5d7b0:	beq	5d7e8 <GetDataSlab+0x2d868>
   5d7b4:	ldr	r2, [sp, #68]	; 0x44
   5d7b8:	add	r3, sp, #272	; 0x110
   5d7bc:	mla	r2, r0, r2, lr
   5d7c0:	ldrh	r2, [r2]
   5d7c4:	strh	r2, [r3, #108]	; 0x6c
   5d7c8:	add	r2, sp, #380	; 0x17c
   5d7cc:	vld1.16	{d16[0]}, [r2 :16]
   5d7d0:	ldr	r2, [sp, #88]	; 0x58
   5d7d4:	add	r0, r2, r0, lsl #3
   5d7d8:	vmovl.u8	q8, d16
   5d7dc:	vmovl.u16	q8, d16
   5d7e0:	vmovl.u32	q8, d16
   5d7e4:	vst1.64	{d16-d17}, [r0]
   5d7e8:	ldr	r2, [sp, #56]	; 0x38
   5d7ec:	ldr	r0, [sp, #88]	; 0x58
   5d7f0:	ldr	r9, [sp, #76]	; 0x4c
   5d7f4:	add	r0, r0, r2, lsl #3
   5d7f8:	cmp	r5, r2
   5d7fc:	str	r0, [sp, #88]	; 0x58
   5d800:	mov	r0, r2
   5d804:	beq	5d6ac <GetDataSlab+0x2d72c>
   5d808:	ldr	r2, [sp, #64]	; 0x40
   5d80c:	cmp	r2, #0
   5d810:	bne	5d81c <GetDataSlab+0x2d89c>
   5d814:	mov	r4, r0
   5d818:	b	5d83c <GetDataSlab+0x2d8bc>
   5d81c:	ldr	r2, [sp, #68]	; 0x44
   5d820:	ldr	r3, [sp, #88]	; 0x58
   5d824:	orr	r4, r0, #1
   5d828:	mul	r2, r0, r2
   5d82c:	ldrb	r2, [lr, r2]
   5d830:	stm	r3, {r2, ip}
   5d834:	add	r3, r3, #8
   5d838:	str	r3, [sp, #88]	; 0x58
   5d83c:	orr	r0, r0, #1
   5d840:	cmp	r5, r0
   5d844:	beq	5d6ac <GetDataSlab+0x2d72c>
   5d848:	ldr	r6, [sp, #68]	; 0x44
   5d84c:	add	r3, r4, #1
   5d850:	sub	r2, r5, r4
   5d854:	mov	r7, lr
   5d858:	mul	r0, r6, r4
   5d85c:	mul	r4, r6, r3
   5d860:	ldr	r6, [sp, #88]	; 0x58
   5d864:	ldrb	r3, [r7, r0]
   5d868:	subs	r2, r2, #2
   5d86c:	stm	r6, {r3, ip}
   5d870:	ldrb	r3, [r7, r4]
   5d874:	str	ip, [r6, #12]
   5d878:	add	r7, r7, r1
   5d87c:	str	r3, [r6, #8]
   5d880:	add	r6, r6, #16
   5d884:	bne	5d864 <GetDataSlab+0x2d8e4>
   5d888:	str	r6, [sp, #88]	; 0x58
   5d88c:	b	5d6ac <GetDataSlab+0x2d72c>
   5d890:	cmp	lr, #1
   5d894:	blt	5f88c <GetDataSlab+0x2f90c>
   5d898:	ldr	r0, [sp, #60]	; 0x3c
   5d89c:	ldr	r1, [sp, #56]	; 0x38
   5d8a0:	mov	ip, #0
   5d8a4:	mla	r0, r1, r8, r0
   5d8a8:	mov	r1, #1
   5d8ac:	add	r0, r4, r0, lsl #1
   5d8b0:	str	r0, [sp, #92]	; 0x5c
   5d8b4:	sub	r0, r5, #2
   5d8b8:	add	r1, r1, r0, lsr #1
   5d8bc:	lsr	r0, r0, #1
   5d8c0:	str	r0, [sp, #56]	; 0x38
   5d8c4:	and	r2, r1, #1
   5d8c8:	sub	r1, r1, r2
   5d8cc:	str	r2, [sp, #60]	; 0x3c
   5d8d0:	ldr	r2, [sp, #68]	; 0x44
   5d8d4:	str	r1, [sp, #48]	; 0x30
   5d8d8:	subs	r1, r5, #1
   5d8dc:	movwne	r1, #1
   5d8e0:	mov	r3, r2
   5d8e4:	sub	r2, r2, #1
   5d8e8:	clz	r2, r2
   5d8ec:	lsr	r2, r2, #5
   5d8f0:	and	r1, r1, r2
   5d8f4:	lsl	r2, r3, #2
   5d8f8:	str	r1, [sp, #76]	; 0x4c
   5d8fc:	ldr	r1, [sp, #72]	; 0x48
   5d900:	mul	r1, r1, r8
   5d904:	mov	r8, #32
   5d908:	lsl	r1, r1, #1
   5d90c:	str	r1, [sp, #80]	; 0x50
   5d910:	lsl	r1, r3, #1
   5d914:	str	r1, [sp, #52]	; 0x34
   5d918:	lsl	r1, r3, #3
   5d91c:	str	r1, [sp, #44]	; 0x2c
   5d920:	and	r1, r5, #1
   5d924:	ldr	r9, [sp, #44]	; 0x2c
   5d928:	str	r1, [sp, #72]	; 0x48
   5d92c:	bic	r1, r5, #1
   5d930:	str	r1, [sp, #64]	; 0x40
   5d934:	cmp	r5, #1
   5d938:	bge	5d968 <GetDataSlab+0x2d9e8>
   5d93c:	ldr	lr, [sp, #92]	; 0x5c
   5d940:	ldr	r0, [sp, #80]	; 0x50
   5d944:	ldr	r1, [sp, #84]	; 0x54
   5d948:	add	ip, ip, #1
   5d94c:	add	lr, lr, r0
   5d950:	mov	r0, #0
   5d954:	cmp	ip, r1
   5d958:	str	lr, [sp, #92]	; 0x5c
   5d95c:	beq	56c20 <GetDataSlab+0x26ca0>
   5d960:	cmp	r5, #1
   5d964:	blt	5d93c <GetDataSlab+0x2d9bc>
   5d968:	ldr	r1, [sp, #76]	; 0x4c
   5d96c:	ldr	lr, [sp, #92]	; 0x5c
   5d970:	mov	r0, #0
   5d974:	add	r3, sp, #348	; 0x15c
   5d978:	cmp	r1, #0
   5d97c:	beq	5da44 <GetDataSlab+0x2dac4>
   5d980:	ldr	r0, [sp, #56]	; 0x38
   5d984:	cmp	r0, #0
   5d988:	beq	5d9e8 <GetDataSlab+0x2da68>
   5d98c:	ldr	r7, [sp, #88]	; 0x58
   5d990:	ldr	r4, [sp, #48]	; 0x30
   5d994:	mov	r1, lr
   5d998:	mov	r0, #0
   5d99c:	add	lr, sp, #352	; 0x160
   5d9a0:	ldr	r6, [r1]
   5d9a4:	subs	r4, r4, #2
   5d9a8:	add	r0, r0, #4
   5d9ac:	str	r6, [sp, #348]	; 0x15c
   5d9b0:	add	r6, r7, #16
   5d9b4:	vld1.32	{d16[0]}, [r3 :32]
   5d9b8:	vmovl.s16	q8, d16
   5d9bc:	vmovl.s32	q8, d16
   5d9c0:	vst1.64	{d16-d17}, [r7], r8
   5d9c4:	ldr	sl, [r1, r2]
   5d9c8:	add	r1, r1, r9
   5d9cc:	str	sl, [sp, #352]	; 0x160
   5d9d0:	vld1.32	{d16[0]}, [lr :32]
   5d9d4:	vmovl.s16	q8, d16
   5d9d8:	vmovl.s32	q8, d16
   5d9dc:	vst1.64	{d16-d17}, [r6]
   5d9e0:	bne	5d9a0 <GetDataSlab+0x2da20>
   5d9e4:	b	5d9ec <GetDataSlab+0x2da6c>
   5d9e8:	mov	r0, #0
   5d9ec:	ldr	r1, [sp, #60]	; 0x3c
   5d9f0:	ldr	lr, [sp, #92]	; 0x5c
   5d9f4:	cmp	r1, #0
   5d9f8:	beq	5da28 <GetDataSlab+0x2daa8>
   5d9fc:	ldr	r1, [sp, #68]	; 0x44
   5da00:	mul	r1, r0, r1
   5da04:	ldr	r1, [lr, r1, lsl #1]
   5da08:	str	r1, [sp, #344]	; 0x158
   5da0c:	add	r1, sp, #344	; 0x158
   5da10:	vld1.32	{d16[0]}, [r1 :32]
   5da14:	ldr	r1, [sp, #88]	; 0x58
   5da18:	add	r0, r1, r0, lsl #3
   5da1c:	vmovl.s16	q8, d16
   5da20:	vmovl.s32	q8, d16
   5da24:	vst1.64	{d16-d17}, [r0]
   5da28:	ldr	r1, [sp, #64]	; 0x40
   5da2c:	ldr	r0, [sp, #88]	; 0x58
   5da30:	add	r0, r0, r1, lsl #3
   5da34:	cmp	r5, r1
   5da38:	str	r0, [sp, #88]	; 0x58
   5da3c:	mov	r0, r1
   5da40:	beq	5d940 <GetDataSlab+0x2d9c0>
   5da44:	ldr	r1, [sp, #72]	; 0x48
   5da48:	cmp	r1, #0
   5da4c:	bne	5da58 <GetDataSlab+0x2dad8>
   5da50:	mov	r4, r0
   5da54:	b	5da84 <GetDataSlab+0x2db04>
   5da58:	ldr	r1, [sp, #68]	; 0x44
   5da5c:	ldr	r3, [sp, #88]	; 0x58
   5da60:	mul	r1, r0, r1
   5da64:	add	r1, lr, r1, lsl #1
   5da68:	ldrsh	r4, [r1]
   5da6c:	asr	r1, r4, #31
   5da70:	str	r4, [r3]
   5da74:	orr	r4, r0, #1
   5da78:	str	r1, [r3, #4]
   5da7c:	add	r3, r3, #8
   5da80:	str	r3, [sp, #88]	; 0x58
   5da84:	orr	r0, r0, #1
   5da88:	cmp	r5, r0
   5da8c:	beq	5d940 <GetDataSlab+0x2d9c0>
   5da90:	ldr	r3, [sp, #52]	; 0x34
   5da94:	sub	r1, r5, r4
   5da98:	mov	r7, lr
   5da9c:	mul	r0, r3, r4
   5daa0:	add	r4, r4, #1
   5daa4:	mul	r4, r3, r4
   5daa8:	ldr	r3, [sp, #88]	; 0x58
   5daac:	add	r6, r7, r0
   5dab0:	subs	r1, r1, #2
   5dab4:	ldrsh	r6, [r6]
   5dab8:	str	r6, [r3]
   5dabc:	asr	r6, r6, #31
   5dac0:	str	r6, [r3, #4]
   5dac4:	add	r6, r7, r4
   5dac8:	add	r7, r7, r2
   5dacc:	ldrsh	r6, [r6]
   5dad0:	str	r6, [r3, #8]
   5dad4:	asr	r6, r6, #31
   5dad8:	str	r6, [r3, #12]
   5dadc:	add	r3, r3, #16
   5dae0:	bne	5daac <GetDataSlab+0x2db2c>
   5dae4:	str	r3, [sp, #88]	; 0x58
   5dae8:	b	5d940 <GetDataSlab+0x2d9c0>
   5daec:	cmp	lr, #1
   5daf0:	blt	5f88c <GetDataSlab+0x2f90c>
   5daf4:	ldr	r0, [sp, #60]	; 0x3c
   5daf8:	ldr	r1, [sp, #56]	; 0x38
   5dafc:	mov	r9, #0
   5db00:	mov	sl, #32
   5db04:	mla	r0, r1, r8, r0
   5db08:	mov	r1, #1
   5db0c:	add	r0, r4, r0, lsl #1
   5db10:	str	r0, [sp, #92]	; 0x5c
   5db14:	sub	r0, r5, #2
   5db18:	add	r1, r1, r0, lsr #1
   5db1c:	lsr	r0, r0, #1
   5db20:	str	r0, [sp, #48]	; 0x30
   5db24:	mov	r0, #0
   5db28:	and	r2, r1, #1
   5db2c:	str	r0, [sp, #80]	; 0x50
   5db30:	sub	r1, r1, r2
   5db34:	str	r2, [sp, #56]	; 0x38
   5db38:	ldr	r2, [sp, #68]	; 0x44
   5db3c:	str	r1, [sp, #40]	; 0x28
   5db40:	subs	r1, r5, #1
   5db44:	movwne	r1, #1
   5db48:	mov	r3, r2
   5db4c:	sub	r2, r2, #1
   5db50:	clz	r2, r2
   5db54:	lsr	r2, r2, #5
   5db58:	and	r1, r1, r2
   5db5c:	lsl	r2, r3, #2
   5db60:	str	r1, [sp, #60]	; 0x3c
   5db64:	ldr	r1, [sp, #72]	; 0x48
   5db68:	mul	r1, r1, r8
   5db6c:	lsl	r1, r1, #1
   5db70:	str	r1, [sp, #76]	; 0x4c
   5db74:	lsl	r1, r3, #1
   5db78:	str	r1, [sp, #44]	; 0x2c
   5db7c:	lsl	r1, r3, #3
   5db80:	str	r1, [sp, #64]	; 0x40
   5db84:	and	r1, r5, #1
   5db88:	str	r1, [sp, #72]	; 0x48
   5db8c:	bic	r1, r5, #1
   5db90:	str	r1, [sp, #52]	; 0x34
   5db94:	cmp	r5, #1
   5db98:	bge	5dbd0 <GetDataSlab+0x2dc50>
   5db9c:	ldr	ip, [sp, #84]	; 0x54
   5dba0:	ldr	lr, [sp, #92]	; 0x5c
   5dba4:	ldr	r1, [sp, #80]	; 0x50
   5dba8:	ldr	r0, [sp, #76]	; 0x4c
   5dbac:	add	r1, r1, #1
   5dbb0:	add	lr, lr, r0
   5dbb4:	mov	r0, #0
   5dbb8:	cmp	r1, ip
   5dbbc:	str	lr, [sp, #92]	; 0x5c
   5dbc0:	str	r1, [sp, #80]	; 0x50
   5dbc4:	beq	56c20 <GetDataSlab+0x26ca0>
   5dbc8:	cmp	r5, #1
   5dbcc:	blt	5db9c <GetDataSlab+0x2dc1c>
   5dbd0:	ldr	r1, [sp, #60]	; 0x3c
   5dbd4:	ldr	ip, [sp, #84]	; 0x54
   5dbd8:	ldr	lr, [sp, #92]	; 0x5c
   5dbdc:	mov	r0, #0
   5dbe0:	add	r3, sp, #360	; 0x168
   5dbe4:	cmp	r1, #0
   5dbe8:	beq	5dcb0 <GetDataSlab+0x2dd30>
   5dbec:	ldr	r0, [sp, #48]	; 0x30
   5dbf0:	ldr	r1, [sp, #64]	; 0x40
   5dbf4:	cmp	r0, #0
   5dbf8:	mov	r0, #0
   5dbfc:	beq	5dc54 <GetDataSlab+0x2dcd4>
   5dc00:	ldr	r4, [sp, #88]	; 0x58
   5dc04:	ldr	r6, [sp, #40]	; 0x28
   5dc08:	mov	ip, lr
   5dc0c:	add	r8, sp, #364	; 0x16c
   5dc10:	ldr	r7, [ip]
   5dc14:	subs	r6, r6, #2
   5dc18:	add	r0, r0, #4
   5dc1c:	str	r7, [sp, #360]	; 0x168
   5dc20:	add	r7, r4, #16
   5dc24:	vld1.32	{d16[0]}, [r3 :32]
   5dc28:	vmovl.u16	q8, d16
   5dc2c:	vmovl.u32	q8, d16
   5dc30:	vst1.64	{d16-d17}, [r4], sl
   5dc34:	ldr	lr, [ip, r2]
   5dc38:	add	ip, ip, r1
   5dc3c:	str	lr, [sp, #364]	; 0x16c
   5dc40:	vld1.32	{d16[0]}, [r8 :32]
   5dc44:	vmovl.u16	q8, d16
   5dc48:	vmovl.u32	q8, d16
   5dc4c:	vst1.64	{d16-d17}, [r7]
   5dc50:	bne	5dc10 <GetDataSlab+0x2dc90>
   5dc54:	ldr	r1, [sp, #56]	; 0x38
   5dc58:	ldr	lr, [sp, #92]	; 0x5c
   5dc5c:	cmp	r1, #0
   5dc60:	beq	5dc90 <GetDataSlab+0x2dd10>
   5dc64:	ldr	r1, [sp, #68]	; 0x44
   5dc68:	mul	r7, r0, r1
   5dc6c:	add	r1, sp, #356	; 0x164
   5dc70:	ldr	r7, [lr, r7, lsl #1]
   5dc74:	str	r7, [sp, #356]	; 0x164
   5dc78:	vld1.32	{d16[0]}, [r1 :32]
   5dc7c:	ldr	r1, [sp, #88]	; 0x58
   5dc80:	add	r0, r1, r0, lsl #3
   5dc84:	vmovl.u16	q8, d16
   5dc88:	vmovl.u32	q8, d16
   5dc8c:	vst1.64	{d16-d17}, [r0]
   5dc90:	ldr	r1, [sp, #52]	; 0x34
   5dc94:	ldr	r0, [sp, #88]	; 0x58
   5dc98:	ldr	ip, [sp, #84]	; 0x54
   5dc9c:	add	r0, r0, r1, lsl #3
   5dca0:	cmp	r5, r1
   5dca4:	str	r0, [sp, #88]	; 0x58
   5dca8:	mov	r0, r1
   5dcac:	beq	5dba4 <GetDataSlab+0x2dc24>
   5dcb0:	ldr	r1, [sp, #72]	; 0x48
   5dcb4:	cmp	r1, #0
   5dcb8:	bne	5dcc4 <GetDataSlab+0x2dd44>
   5dcbc:	mov	r7, r0
   5dcc0:	b	5dce8 <GetDataSlab+0x2dd68>
   5dcc4:	ldr	r1, [sp, #68]	; 0x44
   5dcc8:	mul	r7, r0, r1
   5dccc:	ldr	r1, [sp, #88]	; 0x58
   5dcd0:	add	r7, lr, r7, lsl #1
   5dcd4:	ldrh	r4, [r7]
   5dcd8:	orr	r7, r0, #1
   5dcdc:	stm	r1, {r4, r9}
   5dce0:	add	r1, r1, #8
   5dce4:	str	r1, [sp, #88]	; 0x58
   5dce8:	orr	r0, r0, #1
   5dcec:	cmp	r5, r0
   5dcf0:	beq	5dba4 <GetDataSlab+0x2dc24>
   5dcf4:	ldr	r1, [sp, #44]	; 0x2c
   5dcf8:	sub	r6, r5, r7
   5dcfc:	mul	r0, r1, r7
   5dd00:	add	r7, r7, #1
   5dd04:	mul	r4, r1, r7
   5dd08:	ldr	r1, [sp, #88]	; 0x58
   5dd0c:	mov	r7, lr
   5dd10:	add	r3, r7, r0
   5dd14:	subs	r6, r6, #2
   5dd18:	ldrh	r3, [r3]
   5dd1c:	stm	r1, {r3, r9}
   5dd20:	add	r3, r7, r4
   5dd24:	add	r7, r7, r2
   5dd28:	ldrh	r3, [r3]
   5dd2c:	str	r9, [r1, #12]
   5dd30:	str	r3, [r1, #8]
   5dd34:	add	r1, r1, #16
   5dd38:	bne	5dd10 <GetDataSlab+0x2dd90>
   5dd3c:	str	r1, [sp, #88]	; 0x58
   5dd40:	b	5dba4 <GetDataSlab+0x2dc24>
   5dd44:	cmp	lr, #1
   5dd48:	blt	5f88c <GetDataSlab+0x2f90c>
   5dd4c:	ldr	r0, [sp, #60]	; 0x3c
   5dd50:	ldr	r1, [sp, #56]	; 0x38
   5dd54:	mov	r7, r8
   5dd58:	mov	ip, #32
   5dd5c:	mla	r0, r1, r8, r0
   5dd60:	mov	r1, #1
   5dd64:	add	r0, r4, r0, lsl #2
   5dd68:	str	r0, [sp, #92]	; 0x5c
   5dd6c:	sub	r0, r5, #2
   5dd70:	add	r1, r1, r0, lsr #1
   5dd74:	lsr	r0, r0, #1
   5dd78:	str	r0, [sp, #52]	; 0x34
   5dd7c:	mov	r0, #0
   5dd80:	and	r2, r1, #1
   5dd84:	str	r0, [sp, #80]	; 0x50
   5dd88:	sub	r1, r1, r2
   5dd8c:	str	r2, [sp, #56]	; 0x38
   5dd90:	ldr	r2, [sp, #68]	; 0x44
   5dd94:	str	r1, [sp, #44]	; 0x2c
   5dd98:	subs	r1, r5, #1
   5dd9c:	movwne	r1, #1
   5dda0:	mov	r3, r2
   5dda4:	sub	r2, r2, #1
   5dda8:	clz	r2, r2
   5ddac:	lsr	r2, r2, #5
   5ddb0:	and	r1, r1, r2
   5ddb4:	lsl	r2, r3, #3
   5ddb8:	str	r1, [sp, #60]	; 0x3c
   5ddbc:	ldr	r1, [sp, #72]	; 0x48
   5ddc0:	mul	r1, r1, r8
   5ddc4:	lsl	r1, r1, #2
   5ddc8:	str	r1, [sp, #76]	; 0x4c
   5ddcc:	lsl	r1, r3, #2
   5ddd0:	str	r1, [sp, #48]	; 0x30
   5ddd4:	lsl	r1, r3, #4
   5ddd8:	str	r1, [sp, #40]	; 0x28
   5dddc:	and	r1, r5, #1
   5dde0:	ldr	r8, [sp, #40]	; 0x28
   5dde4:	str	r1, [sp, #72]	; 0x48
   5dde8:	bic	r1, r5, #1
   5ddec:	str	r1, [sp, #64]	; 0x40
   5ddf0:	cmp	r5, #1
   5ddf4:	bge	5de2c <GetDataSlab+0x2deac>
   5ddf8:	ldr	lr, [sp, #92]	; 0x5c
   5ddfc:	ldr	r3, [sp, #80]	; 0x50
   5de00:	ldr	r0, [sp, #76]	; 0x4c
   5de04:	ldr	r1, [sp, #84]	; 0x54
   5de08:	add	r3, r3, #1
   5de0c:	add	lr, lr, r0
   5de10:	mov	r0, #0
   5de14:	cmp	r3, r1
   5de18:	str	lr, [sp, #92]	; 0x5c
   5de1c:	str	r3, [sp, #80]	; 0x50
   5de20:	beq	56c20 <GetDataSlab+0x26ca0>
   5de24:	cmp	r5, #1
   5de28:	blt	5ddf8 <GetDataSlab+0x2de78>
   5de2c:	ldr	r1, [sp, #60]	; 0x3c
   5de30:	ldr	lr, [sp, #92]	; 0x5c
   5de34:	mov	r0, #0
   5de38:	cmp	r1, #0
   5de3c:	beq	5df18 <GetDataSlab+0x2df98>
   5de40:	ldr	r0, [sp, #52]	; 0x34
   5de44:	cmp	r0, #0
   5de48:	beq	5deb4 <GetDataSlab+0x2df34>
   5de4c:	ldr	r9, [sp, #88]	; 0x58
   5de50:	ldr	r7, [sp, #44]	; 0x2c
   5de54:	mov	r1, lr
   5de58:	mov	r0, #0
   5de5c:	add	lr, sp, #312	; 0x138
   5de60:	ldm	r1, {r4, sl}
   5de64:	str	sl, [sp, #308]	; 0x134
   5de68:	add	r3, sp, #304	; 0x130
   5de6c:	subs	r7, r7, #2
   5de70:	add	r0, r0, #4
   5de74:	str	r4, [sp, #304]	; 0x130
   5de78:	add	r4, r9, #16
   5de7c:	vld1.32	{d16}, [r3 :64]
   5de80:	add	r3, r1, r8
   5de84:	vmovl.s32	q8, d16
   5de88:	vst1.64	{d16-d17}, [r9], ip
   5de8c:	ldr	r6, [r1, r2]!
   5de90:	str	r6, [sp, #312]	; 0x138
   5de94:	ldr	r1, [r1, #4]
   5de98:	str	r1, [sp, #316]	; 0x13c
   5de9c:	mov	r1, r3
   5dea0:	vld1.32	{d16}, [lr :64]
   5dea4:	vmovl.s32	q8, d16
   5dea8:	vst1.64	{d16-d17}, [r4]
   5deac:	bne	5de60 <GetDataSlab+0x2dee0>
   5deb0:	b	5deb8 <GetDataSlab+0x2df38>
   5deb4:	mov	r0, #0
   5deb8:	ldr	r1, [sp, #56]	; 0x38
   5debc:	ldr	lr, [sp, #92]	; 0x5c
   5dec0:	cmp	r1, #0
   5dec4:	beq	5defc <GetDataSlab+0x2df7c>
   5dec8:	ldr	r1, [sp, #68]	; 0x44
   5decc:	mov	r3, lr
   5ded0:	mul	r1, r0, r1
   5ded4:	ldr	r1, [r3, r1, lsl #2]!
   5ded8:	str	r1, [sp, #296]	; 0x128
   5dedc:	ldr	r1, [r3, #4]
   5dee0:	str	r1, [sp, #300]	; 0x12c
   5dee4:	add	r1, sp, #296	; 0x128
   5dee8:	vld1.32	{d16}, [r1 :64]
   5deec:	ldr	r1, [sp, #88]	; 0x58
   5def0:	add	r0, r1, r0, lsl #3
   5def4:	vmovl.s32	q8, d16
   5def8:	vst1.64	{d16-d17}, [r0]
   5defc:	ldr	r1, [sp, #64]	; 0x40
   5df00:	ldr	r0, [sp, #88]	; 0x58
   5df04:	add	r0, r0, r1, lsl #3
   5df08:	cmp	r5, r1
   5df0c:	str	r0, [sp, #88]	; 0x58
   5df10:	mov	r0, r1
   5df14:	beq	5ddfc <GetDataSlab+0x2de7c>
   5df18:	ldr	r1, [sp, #72]	; 0x48
   5df1c:	cmp	r1, #0
   5df20:	bne	5df2c <GetDataSlab+0x2dfac>
   5df24:	mov	r4, r0
   5df28:	b	5df54 <GetDataSlab+0x2dfd4>
   5df2c:	ldr	r1, [sp, #68]	; 0x44
   5df30:	ldr	r3, [sp, #88]	; 0x58
   5df34:	mul	r1, r0, r1
   5df38:	ldr	r4, [lr, r1, lsl #2]
   5df3c:	asr	r1, r4, #31
   5df40:	str	r4, [r3]
   5df44:	orr	r4, r0, #1
   5df48:	str	r1, [r3, #4]
   5df4c:	add	r3, r3, #8
   5df50:	str	r3, [sp, #88]	; 0x58
   5df54:	orr	r0, r0, #1
   5df58:	cmp	r5, r0
   5df5c:	beq	5ddfc <GetDataSlab+0x2de7c>
   5df60:	ldr	r6, [sp, #48]	; 0x30
   5df64:	add	r3, r4, #1
   5df68:	sub	r1, r5, r4
   5df6c:	mul	r0, r6, r4
   5df70:	mul	r7, r6, r3
   5df74:	ldr	r6, [sp, #88]	; 0x58
   5df78:	mov	r4, lr
   5df7c:	ldr	r3, [r4, r0]
   5df80:	subs	r1, r1, #2
   5df84:	str	r3, [r6]
   5df88:	asr	r3, r3, #31
   5df8c:	str	r3, [r6, #4]
   5df90:	ldr	r3, [r4, r7]
   5df94:	add	r4, r4, r2
   5df98:	str	r3, [r6, #8]
   5df9c:	asr	r3, r3, #31
   5dfa0:	str	r3, [r6, #12]
   5dfa4:	add	r6, r6, #16
   5dfa8:	bne	5df7c <GetDataSlab+0x2dffc>
   5dfac:	str	r6, [sp, #88]	; 0x58
   5dfb0:	b	5ddfc <GetDataSlab+0x2de7c>
   5dfb4:	cmp	lr, #1
   5dfb8:	blt	5f88c <GetDataSlab+0x2f90c>
   5dfbc:	ldr	r0, [sp, #60]	; 0x3c
   5dfc0:	ldr	r1, [sp, #56]	; 0x38
   5dfc4:	mla	r0, r1, r8, r0
   5dfc8:	mov	r1, #1
   5dfcc:	add	r0, r4, r0, lsl #2
   5dfd0:	str	r0, [sp, #92]	; 0x5c
   5dfd4:	sub	r0, r5, #2
   5dfd8:	add	r1, r1, r0, lsr #1
   5dfdc:	lsr	r0, r0, #1
   5dfe0:	str	r0, [sp, #52]	; 0x34
   5dfe4:	mov	r0, #0
   5dfe8:	and	r2, r1, #1
   5dfec:	str	r0, [sp, #80]	; 0x50
   5dff0:	sub	r1, r1, r2
   5dff4:	str	r2, [sp, #56]	; 0x38
   5dff8:	ldr	r2, [sp, #68]	; 0x44
   5dffc:	str	r1, [sp, #44]	; 0x2c
   5e000:	subs	r1, r5, #1
   5e004:	movwne	r1, #1
   5e008:	mov	r3, r2
   5e00c:	sub	r2, r2, #1
   5e010:	clz	r2, r2
   5e014:	lsl	r9, r3, #3
   5e018:	lsr	r2, r2, #5
   5e01c:	and	r1, r1, r2
   5e020:	str	r1, [sp, #60]	; 0x3c
   5e024:	ldr	r1, [sp, #72]	; 0x48
   5e028:	mul	r1, r1, r8
   5e02c:	lsl	r1, r1, #2
   5e030:	str	r1, [sp, #76]	; 0x4c
   5e034:	lsl	r1, r3, #2
   5e038:	str	r1, [sp, #48]	; 0x30
   5e03c:	lsl	r1, r3, #4
   5e040:	str	r1, [sp, #40]	; 0x28
   5e044:	and	r1, r5, #1
   5e048:	ldr	sl, [sp, #40]	; 0x28
   5e04c:	str	r1, [sp, #72]	; 0x48
   5e050:	bic	r1, r5, #1
   5e054:	str	r1, [sp, #64]	; 0x40
   5e058:	cmp	r5, #1
   5e05c:	bge	5e094 <GetDataSlab+0x2e114>
   5e060:	ldr	ip, [sp, #84]	; 0x54
   5e064:	ldr	lr, [sp, #92]	; 0x5c
   5e068:	ldr	r1, [sp, #80]	; 0x50
   5e06c:	ldr	r0, [sp, #76]	; 0x4c
   5e070:	add	r1, r1, #1
   5e074:	add	lr, lr, r0
   5e078:	mov	r0, #0
   5e07c:	cmp	r1, ip
   5e080:	str	lr, [sp, #92]	; 0x5c
   5e084:	str	r1, [sp, #80]	; 0x50
   5e088:	beq	56c20 <GetDataSlab+0x26ca0>
   5e08c:	cmp	r5, #1
   5e090:	blt	5e060 <GetDataSlab+0x2e0e0>
   5e094:	ldr	r1, [sp, #60]	; 0x3c
   5e098:	ldr	ip, [sp, #84]	; 0x54
   5e09c:	ldr	lr, [sp, #92]	; 0x5c
   5e0a0:	mov	r0, #0
   5e0a4:	mov	r2, #0
   5e0a8:	cmp	r1, #0
   5e0ac:	beq	5e194 <GetDataSlab+0x2e214>
   5e0b0:	ldr	r0, [sp, #52]	; 0x34
   5e0b4:	cmp	r0, #0
   5e0b8:	beq	5e128 <GetDataSlab+0x2e1a8>
   5e0bc:	ldr	r7, [sp, #88]	; 0x58
   5e0c0:	ldr	r4, [sp, #44]	; 0x2c
   5e0c4:	mov	r0, #0
   5e0c8:	mov	ip, lr
   5e0cc:	mov	r2, #32
   5e0d0:	add	r8, sp, #336	; 0x150
   5e0d4:	ldm	ip, {r6, lr}
   5e0d8:	str	lr, [sp, #332]	; 0x14c
   5e0dc:	add	r1, sp, #328	; 0x148
   5e0e0:	add	r3, ip, sl
   5e0e4:	subs	r4, r4, #2
   5e0e8:	add	r0, r0, #4
   5e0ec:	str	r6, [sp, #328]	; 0x148
   5e0f0:	add	r6, r7, #16
   5e0f4:	vld1.32	{d16}, [r1 :64]
   5e0f8:	vmovl.u32	q8, d16
   5e0fc:	vst1.64	{d16-d17}, [r7], r2
   5e100:	ldr	r1, [ip, r9]!
   5e104:	str	r1, [sp, #336]	; 0x150
   5e108:	ldr	r1, [ip, #4]
   5e10c:	mov	ip, r3
   5e110:	str	r1, [sp, #340]	; 0x154
   5e114:	vld1.32	{d16}, [r8 :64]
   5e118:	vmovl.u32	q8, d16
   5e11c:	vst1.64	{d16-d17}, [r6]
   5e120:	bne	5e0d4 <GetDataSlab+0x2e154>
   5e124:	b	5e12c <GetDataSlab+0x2e1ac>
   5e128:	mov	r0, #0
   5e12c:	ldr	r1, [sp, #56]	; 0x38
   5e130:	ldr	lr, [sp, #92]	; 0x5c
   5e134:	cmp	r1, #0
   5e138:	beq	5e170 <GetDataSlab+0x2e1f0>
   5e13c:	ldr	r1, [sp, #68]	; 0x44
   5e140:	mov	r3, lr
   5e144:	mul	r1, r0, r1
   5e148:	ldr	r1, [r3, r1, lsl #2]!
   5e14c:	str	r1, [sp, #320]	; 0x140
   5e150:	ldr	r1, [r3, #4]
   5e154:	str	r1, [sp, #324]	; 0x144
   5e158:	add	r1, sp, #320	; 0x140
   5e15c:	vld1.32	{d16}, [r1 :64]
   5e160:	ldr	r1, [sp, #88]	; 0x58
   5e164:	add	r0, r1, r0, lsl #3
   5e168:	vmovl.u32	q8, d16
   5e16c:	vst1.64	{d16-d17}, [r0]
   5e170:	ldr	r1, [sp, #64]	; 0x40
   5e174:	ldr	r0, [sp, #88]	; 0x58
   5e178:	ldr	ip, [sp, #84]	; 0x54
   5e17c:	mov	r2, #0
   5e180:	add	r0, r0, r1, lsl #3
   5e184:	cmp	r5, r1
   5e188:	str	r0, [sp, #88]	; 0x58
   5e18c:	mov	r0, r1
   5e190:	beq	5e068 <GetDataSlab+0x2e0e8>
   5e194:	ldr	r1, [sp, #72]	; 0x48
   5e198:	cmp	r1, #0
   5e19c:	bne	5e1a8 <GetDataSlab+0x2e228>
   5e1a0:	mov	r4, r0
   5e1a4:	b	5e1cc <GetDataSlab+0x2e24c>
   5e1a8:	ldr	r1, [sp, #68]	; 0x44
   5e1ac:	mul	r1, r0, r1
   5e1b0:	ldr	r4, [lr, r1, lsl #2]
   5e1b4:	ldr	r1, [sp, #88]	; 0x58
   5e1b8:	str	r4, [r1]
   5e1bc:	str	r2, [r1, #4]
   5e1c0:	orr	r4, r0, #1
   5e1c4:	add	r1, r1, #8
   5e1c8:	str	r1, [sp, #88]	; 0x58
   5e1cc:	orr	r0, r0, #1
   5e1d0:	cmp	r5, r0
   5e1d4:	beq	5e068 <GetDataSlab+0x2e0e8>
   5e1d8:	ldr	r3, [sp, #48]	; 0x30
   5e1dc:	add	r1, r4, #1
   5e1e0:	sub	r7, r5, r4
   5e1e4:	mov	r6, lr
   5e1e8:	mul	r0, r3, r4
   5e1ec:	mul	r4, r3, r1
   5e1f0:	ldr	r3, [sp, #88]	; 0x58
   5e1f4:	ldr	r1, [r6, r0]
   5e1f8:	subs	r7, r7, #2
   5e1fc:	stm	r3, {r1, r2}
   5e200:	ldr	r1, [r6, r4]
   5e204:	str	r2, [r3, #12]
   5e208:	add	r6, r6, r9
   5e20c:	str	r1, [r3, #8]
   5e210:	add	r3, r3, #16
   5e214:	bne	5e1f4 <GetDataSlab+0x2e274>
   5e218:	str	r3, [sp, #88]	; 0x58
   5e21c:	b	5e068 <GetDataSlab+0x2e0e8>
   5e220:	cmp	lr, #1
   5e224:	blt	5f88c <GetDataSlab+0x2f90c>
   5e228:	ldr	r0, [sp, #60]	; 0x3c
   5e22c:	ldr	r1, [sp, #56]	; 0x38
   5e230:	mla	r0, r1, r8, r0
   5e234:	add	r0, r4, r0, lsl #2
   5e238:	str	r0, [sp, #92]	; 0x5c
   5e23c:	and	r0, r5, #1
   5e240:	str	r0, [sp, #60]	; 0x3c
   5e244:	sub	r0, r5, r0
   5e248:	str	r0, [sp, #56]	; 0x38
   5e24c:	ldr	r0, [sp, #72]	; 0x48
   5e250:	mul	r0, r0, r8
   5e254:	lsl	r0, r0, #2
   5e258:	str	r0, [sp, #76]	; 0x4c
   5e25c:	ldr	r0, [sp, #68]	; 0x44
   5e260:	lsl	r6, r0, #3
   5e264:	lsl	r4, r0, #2
   5e268:	mov	r0, #0
   5e26c:	str	r0, [sp, #80]	; 0x50
   5e270:	cmp	r5, #1
   5e274:	bge	5e2ac <GetDataSlab+0x2e32c>
   5e278:	ldr	r3, [sp, #84]	; 0x54
   5e27c:	ldr	sl, [sp, #92]	; 0x5c
   5e280:	ldr	r7, [sp, #80]	; 0x50
   5e284:	ldr	r0, [sp, #76]	; 0x4c
   5e288:	add	r7, r7, #1
   5e28c:	cmp	r7, r3
   5e290:	str	r7, [sp, #80]	; 0x50
   5e294:	add	sl, sl, r0
   5e298:	mov	r0, #0
   5e29c:	str	sl, [sp, #92]	; 0x5c
   5e2a0:	beq	56c20 <GetDataSlab+0x26ca0>
   5e2a4:	cmp	r5, #1
   5e2a8:	blt	5e278 <GetDataSlab+0x2e2f8>
   5e2ac:	ldr	sl, [sp, #92]	; 0x5c
   5e2b0:	mov	r8, #0
   5e2b4:	bne	5e2c0 <GetDataSlab+0x2e340>
   5e2b8:	ldr	r3, [sp, #84]	; 0x54
   5e2bc:	b	5e304 <GetDataSlab+0x2e384>
   5e2c0:	ldr	r9, [sp, #88]	; 0x58
   5e2c4:	ldr	r7, [sp, #56]	; 0x38
   5e2c8:	mov	r8, #0
   5e2cc:	ldr	r0, [sl]
   5e2d0:	bl	6b970 <__aeabi_f2ulz>
   5e2d4:	strd	r0, [r9]
   5e2d8:	ldr	r0, [sl, r4]
   5e2dc:	bl	6b970 <__aeabi_f2ulz>
   5e2e0:	add	r8, r8, #2
   5e2e4:	strd	r0, [r9, #8]
   5e2e8:	add	sl, sl, r6
   5e2ec:	add	r9, r9, #16
   5e2f0:	cmp	r7, r8
   5e2f4:	bne	5e2cc <GetDataSlab+0x2e34c>
   5e2f8:	ldr	r3, [sp, #84]	; 0x54
   5e2fc:	ldr	sl, [sp, #92]	; 0x5c
   5e300:	str	r9, [sp, #88]	; 0x58
   5e304:	ldr	r0, [sp, #60]	; 0x3c
   5e308:	ldr	r7, [sp, #80]	; 0x50
   5e30c:	cmp	r0, #0
   5e310:	beq	5e284 <GetDataSlab+0x2e304>
   5e314:	ldr	r0, [sp, #68]	; 0x44
   5e318:	mul	r0, r8, r0
   5e31c:	ldr	r0, [sl, r0, lsl #2]
   5e320:	bl	6b970 <__aeabi_f2ulz>
   5e324:	ldr	r2, [sp, #88]	; 0x58
   5e328:	ldr	r3, [sp, #84]	; 0x54
   5e32c:	strd	r0, [r2]
   5e330:	add	r2, r2, #8
   5e334:	str	r2, [sp, #88]	; 0x58
   5e338:	b	5e284 <GetDataSlab+0x2e304>
   5e33c:	cmp	lr, #1
   5e340:	blt	5f88c <GetDataSlab+0x2f90c>
   5e344:	ldr	r0, [sp, #60]	; 0x3c
   5e348:	ldr	r1, [sp, #56]	; 0x38
   5e34c:	mla	r0, r1, r8, r0
   5e350:	add	r0, r4, r0, lsl #3
   5e354:	str	r0, [sp, #92]	; 0x5c
   5e358:	and	r0, r5, #1
   5e35c:	str	r0, [sp, #60]	; 0x3c
   5e360:	sub	r0, r5, r0
   5e364:	str	r0, [sp, #56]	; 0x38
   5e368:	ldr	r0, [sp, #72]	; 0x48
   5e36c:	mul	r0, r0, r8
   5e370:	lsl	r0, r0, #3
   5e374:	str	r0, [sp, #76]	; 0x4c
   5e378:	ldr	r0, [sp, #68]	; 0x44
   5e37c:	lsl	r6, r0, #4
   5e380:	lsl	r4, r0, #3
   5e384:	mov	r0, #0
   5e388:	str	r0, [sp, #80]	; 0x50
   5e38c:	cmp	r5, #1
   5e390:	bge	5e3c8 <GetDataSlab+0x2e448>
   5e394:	ldr	r3, [sp, #84]	; 0x54
   5e398:	ldr	sl, [sp, #92]	; 0x5c
   5e39c:	ldr	r7, [sp, #80]	; 0x50
   5e3a0:	ldr	r0, [sp, #76]	; 0x4c
   5e3a4:	add	r7, r7, #1
   5e3a8:	cmp	r7, r3
   5e3ac:	str	r7, [sp, #80]	; 0x50
   5e3b0:	add	sl, sl, r0
   5e3b4:	mov	r0, #0
   5e3b8:	str	sl, [sp, #92]	; 0x5c
   5e3bc:	beq	56c20 <GetDataSlab+0x26ca0>
   5e3c0:	cmp	r5, #1
   5e3c4:	blt	5e394 <GetDataSlab+0x2e414>
   5e3c8:	ldr	sl, [sp, #92]	; 0x5c
   5e3cc:	mov	r8, #0
   5e3d0:	bne	5e3dc <GetDataSlab+0x2e45c>
   5e3d4:	ldr	r3, [sp, #84]	; 0x54
   5e3d8:	b	5e42c <GetDataSlab+0x2e4ac>
   5e3dc:	ldr	r9, [sp, #88]	; 0x58
   5e3e0:	ldr	r7, [sp, #56]	; 0x38
   5e3e4:	mov	r8, #0
   5e3e8:	vldr	d16, [sl]
   5e3ec:	vmov	r0, r1, d16
   5e3f0:	bl	6b9b0 <__aeabi_d2ulz>
   5e3f4:	strd	r0, [r9]
   5e3f8:	add	r0, sl, r4
   5e3fc:	vldr	d16, [r0]
   5e400:	vmov	r0, r1, d16
   5e404:	bl	6b9b0 <__aeabi_d2ulz>
   5e408:	add	r8, r8, #2
   5e40c:	strd	r0, [r9, #8]
   5e410:	add	sl, sl, r6
   5e414:	add	r9, r9, #16
   5e418:	cmp	r7, r8
   5e41c:	bne	5e3e8 <GetDataSlab+0x2e468>
   5e420:	ldr	r3, [sp, #84]	; 0x54
   5e424:	ldr	sl, [sp, #92]	; 0x5c
   5e428:	str	r9, [sp, #88]	; 0x58
   5e42c:	ldr	r0, [sp, #60]	; 0x3c
   5e430:	ldr	r7, [sp, #80]	; 0x50
   5e434:	cmp	r0, #0
   5e438:	beq	5e3a0 <GetDataSlab+0x2e420>
   5e43c:	ldr	r0, [sp, #68]	; 0x44
   5e440:	mul	r0, r8, r0
   5e444:	add	r0, sl, r0, lsl #3
   5e448:	vldr	d16, [r0]
   5e44c:	vmov	r0, r1, d16
   5e450:	bl	6b9b0 <__aeabi_d2ulz>
   5e454:	ldr	r2, [sp, #88]	; 0x58
   5e458:	ldr	r3, [sp, #84]	; 0x54
   5e45c:	strd	r0, [r2]
   5e460:	add	r2, r2, #8
   5e464:	str	r2, [sp, #88]	; 0x58
   5e468:	b	5e3a0 <GetDataSlab+0x2e420>
   5e46c:	cmp	lr, #1
   5e470:	blt	5f88c <GetDataSlab+0x2f90c>
   5e474:	ldr	r0, [sp, #60]	; 0x3c
   5e478:	ldr	r1, [sp, #56]	; 0x38
   5e47c:	mov	r2, #1
   5e480:	mov	r7, r8
   5e484:	mov	r9, #0
   5e488:	mov	sl, #32
   5e48c:	mla	r0, r1, r8, r0
   5e490:	lsl	r1, r5, #3
   5e494:	add	r1, r1, r0, lsl #3
   5e498:	add	r8, r4, r0, lsl #3
   5e49c:	lsl	r0, r0, #3
   5e4a0:	str	r0, [sp, #36]	; 0x24
   5e4a4:	subs	r0, r5, #1
   5e4a8:	str	r1, [sp, #44]	; 0x2c
   5e4ac:	sub	r1, r5, #2
   5e4b0:	movwne	r0, #1
   5e4b4:	add	r2, r2, r1, lsr #1
   5e4b8:	and	r3, r2, #1
   5e4bc:	sub	r2, r2, r3
   5e4c0:	str	r3, [sp, #32]
   5e4c4:	str	r2, [sp, #20]
   5e4c8:	ldr	r2, [sp, #68]	; 0x44
   5e4cc:	mov	r3, r2
   5e4d0:	sub	r2, r2, #1
   5e4d4:	clz	r2, r2
   5e4d8:	lsl	ip, r3, #5
   5e4dc:	lsr	r2, r2, #5
   5e4e0:	and	r0, r0, r2
   5e4e4:	str	r0, [sp, #52]	; 0x34
   5e4e8:	ldr	r0, [sp, #72]	; 0x48
   5e4ec:	mul	r0, r0, r7
   5e4f0:	lsl	r7, r3, #4
   5e4f4:	lsl	r6, r0, #3
   5e4f8:	lsl	r0, r3, #3
   5e4fc:	str	r0, [sp, #40]	; 0x28
   5e500:	and	r0, r5, #1
   5e504:	str	r6, [sp, #92]	; 0x5c
   5e508:	str	r0, [sp, #48]	; 0x30
   5e50c:	bic	r0, r5, #1
   5e510:	str	r0, [sp, #28]
   5e514:	lsr	r0, r1, #1
   5e518:	str	r0, [sp, #24]
   5e51c:	cmp	r5, #1
   5e520:	bge	5e53c <GetDataSlab+0x2e5bc>
   5e524:	add	r9, r9, #1
   5e528:	add	r8, r8, r6
   5e52c:	cmp	r9, lr
   5e530:	beq	5eef8 <GetDataSlab+0x2ef78>
   5e534:	cmp	r5, #1
   5e538:	blt	5e524 <GetDataSlab+0x2e5a4>
   5e53c:	ldr	r0, [sp, #52]	; 0x34
   5e540:	mov	r3, #0
   5e544:	cmp	r0, #0
   5e548:	beq	5e608 <GetDataSlab+0x2e688>
   5e54c:	ldr	r0, [sp, #44]	; 0x2c
   5e550:	ldr	r1, [sp, #88]	; 0x58
   5e554:	mla	r0, r6, r9, r0
   5e558:	add	r0, r4, r0
   5e55c:	cmp	r0, r1
   5e560:	bls	5e580 <GetDataSlab+0x2e600>
   5e564:	ldr	r0, [sp, #36]	; 0x24
   5e568:	mla	r0, r6, r9, r0
   5e56c:	add	r6, r1, r5, lsl #3
   5e570:	add	r0, r4, r0
   5e574:	cmp	r0, r6
   5e578:	ldr	r6, [sp, #92]	; 0x5c
   5e57c:	bcc	5e608 <GetDataSlab+0x2e688>
   5e580:	ldr	r0, [sp, #24]
   5e584:	mov	r3, #0
   5e588:	cmp	r0, #0
   5e58c:	beq	5e5c0 <GetDataSlab+0x2e640>
   5e590:	ldr	r6, [sp, #88]	; 0x58
   5e594:	ldr	r4, [sp, #20]
   5e598:	mov	r0, r8
   5e59c:	add	r1, r0, r7
   5e5a0:	vld1.64	{d16-d17}, [r0], ip
   5e5a4:	add	r2, r6, #16
   5e5a8:	subs	r4, r4, #2
   5e5ac:	add	r3, r3, #4
   5e5b0:	vst1.64	{d16-d17}, [r6], sl
   5e5b4:	vld1.64	{d16-d17}, [r1]
   5e5b8:	vst1.64	{d16-d17}, [r2]
   5e5bc:	bne	5e59c <GetDataSlab+0x2e61c>
   5e5c0:	ldr	r0, [sp, #32]
   5e5c4:	ldr	r6, [sp, #92]	; 0x5c
   5e5c8:	cmp	r0, #0
   5e5cc:	beq	5e5ec <GetDataSlab+0x2e66c>
   5e5d0:	ldr	r0, [sp, #68]	; 0x44
   5e5d4:	mul	r0, r3, r0
   5e5d8:	add	r0, r8, r0, lsl #3
   5e5dc:	vld1.64	{d16-d17}, [r0]
   5e5e0:	ldr	r0, [sp, #88]	; 0x58
   5e5e4:	add	r0, r0, r3, lsl #3
   5e5e8:	vst1.64	{d16-d17}, [r0]
   5e5ec:	ldr	r3, [sp, #28]
   5e5f0:	ldr	r0, [sp, #88]	; 0x58
   5e5f4:	ldr	r4, [sp, #80]	; 0x50
   5e5f8:	add	r0, r0, r3, lsl #3
   5e5fc:	cmp	r5, r3
   5e600:	str	r0, [sp, #88]	; 0x58
   5e604:	beq	5e524 <GetDataSlab+0x2e5a4>
   5e608:	ldr	r0, [sp, #48]	; 0x30
   5e60c:	cmp	r0, #0
   5e610:	bne	5e61c <GetDataSlab+0x2e69c>
   5e614:	mov	r0, r3
   5e618:	b	5e644 <GetDataSlab+0x2e6c4>
   5e61c:	ldr	r0, [sp, #68]	; 0x44
   5e620:	mov	r1, r8
   5e624:	ldr	r2, [sp, #88]	; 0x58
   5e628:	mul	r0, r3, r0
   5e62c:	ldr	r0, [r1, r0, lsl #3]!
   5e630:	ldr	r1, [r1, #4]
   5e634:	strd	r0, [r2]
   5e638:	orr	r0, r3, #1
   5e63c:	add	r2, r2, #8
   5e640:	str	r2, [sp, #88]	; 0x58
   5e644:	orr	r1, r3, #1
   5e648:	cmp	r5, r1
   5e64c:	beq	5e524 <GetDataSlab+0x2e5a4>
   5e650:	ldr	r1, [sp, #40]	; 0x28
   5e654:	sub	r6, r5, r0
   5e658:	ldr	r4, [sp, #88]	; 0x58
   5e65c:	mul	r3, r1, r0
   5e660:	add	r0, r0, #1
   5e664:	mul	lr, r1, r0
   5e668:	mov	r0, r8
   5e66c:	mov	r1, r0
   5e670:	subs	r6, r6, #2
   5e674:	ldr	r2, [r1, r3]!
   5e678:	ldr	r1, [r1, #4]
   5e67c:	str	r2, [r4]
   5e680:	str	r1, [r4, #4]
   5e684:	add	r1, r0, r7
   5e688:	ldr	r2, [r0, lr]!
   5e68c:	ldr	r0, [r0, #4]
   5e690:	str	r2, [r4, #8]
   5e694:	str	r0, [r4, #12]
   5e698:	add	r4, r4, #16
   5e69c:	mov	r0, r1
   5e6a0:	bne	5e66c <GetDataSlab+0x2e6ec>
   5e6a4:	str	r4, [sp, #88]	; 0x58
   5e6a8:	ldr	r4, [sp, #80]	; 0x50
   5e6ac:	ldr	lr, [sp, #84]	; 0x54
   5e6b0:	ldr	r6, [sp, #92]	; 0x5c
   5e6b4:	b	5e524 <GetDataSlab+0x2e5a4>
   5e6b8:	mov	r0, #0
   5e6bc:	str	sl, [sp, #88]	; 0x58
   5e6c0:	cmp	r6, #13
   5e6c4:	bne	56c20 <GetDataSlab+0x26ca0>
   5e6c8:	ldr	r0, [sp, #84]	; 0x54
   5e6cc:	cmp	r0, #1
   5e6d0:	blt	5f88c <GetDataSlab+0x2f90c>
   5e6d4:	ldr	r0, [sp, #60]	; 0x3c
   5e6d8:	ldr	r1, [sp, #56]	; 0x38
   5e6dc:	mla	r0, r1, r8, r0
   5e6e0:	ldr	r1, [sp, #80]	; 0x50
   5e6e4:	add	r0, r1, r0, lsl #3
   5e6e8:	mov	r1, #1
   5e6ec:	str	r0, [sp, #76]	; 0x4c
   5e6f0:	sub	r0, r5, #2
   5e6f4:	add	r1, r1, r0, lsr #1
   5e6f8:	lsr	r0, r0, #1
   5e6fc:	str	r0, [sp, #44]	; 0x2c
   5e700:	mov	r0, #0
   5e704:	and	r2, r1, #1
   5e708:	sub	r1, r1, r2
   5e70c:	str	r2, [sp, #52]	; 0x34
   5e710:	ldr	r2, [sp, #68]	; 0x44
   5e714:	str	r1, [sp, #36]	; 0x24
   5e718:	subs	r1, r5, #1
   5e71c:	movwne	r1, #1
   5e720:	mov	r3, r2
   5e724:	sub	r2, r2, #1
   5e728:	clz	r2, r2
   5e72c:	lsr	r2, r2, #5
   5e730:	and	r1, r1, r2
   5e734:	str	r1, [sp, #60]	; 0x3c
   5e738:	ldr	r1, [sp, #72]	; 0x48
   5e73c:	str	r0, [sp, #72]	; 0x48
   5e740:	mul	r1, r1, r8
   5e744:	lsl	r1, r1, #3
   5e748:	str	r1, [sp, #64]	; 0x40
   5e74c:	lsl	r1, r3, #3
   5e750:	str	r1, [sp, #40]	; 0x28
   5e754:	lsl	r1, r3, #5
   5e758:	str	r1, [sp, #80]	; 0x50
   5e75c:	lsl	r1, r3, #4
   5e760:	str	r1, [sp, #92]	; 0x5c
   5e764:	and	r1, r5, #1
   5e768:	str	r1, [sp, #56]	; 0x38
   5e76c:	bic	r1, r5, #1
   5e770:	str	r1, [sp, #48]	; 0x30
   5e774:	cmp	r5, #1
   5e778:	bge	5e7b8 <GetDataSlab+0x2e838>
   5e77c:	ldr	r7, [sp, #88]	; 0x58
   5e780:	ldr	r2, [sp, #84]	; 0x54
   5e784:	ldr	sl, [sp, #76]	; 0x4c
   5e788:	ldr	r1, [sp, #72]	; 0x48
   5e78c:	ldr	r0, [sp, #64]	; 0x40
   5e790:	str	r7, [sp, #88]	; 0x58
   5e794:	add	r1, r1, #1
   5e798:	add	sl, sl, r0
   5e79c:	mov	r0, #0
   5e7a0:	cmp	r1, r2
   5e7a4:	str	sl, [sp, #76]	; 0x4c
   5e7a8:	str	r1, [sp, #72]	; 0x48
   5e7ac:	beq	56c20 <GetDataSlab+0x26ca0>
   5e7b0:	cmp	r5, #1
   5e7b4:	blt	5e77c <GetDataSlab+0x2e7fc>
   5e7b8:	ldr	r0, [sp, #60]	; 0x3c
   5e7bc:	ldr	r7, [sp, #88]	; 0x58
   5e7c0:	ldr	r2, [sp, #84]	; 0x54
   5e7c4:	ldr	sl, [sp, #76]	; 0x4c
   5e7c8:	mov	r4, #0
   5e7cc:	cmp	r0, #0
   5e7d0:	beq	5e8e0 <GetDataSlab+0x2e960>
   5e7d4:	ldr	r0, [sp, #44]	; 0x2c
   5e7d8:	mov	r6, #0
   5e7dc:	cmp	r0, #0
   5e7e0:	beq	5e878 <GetDataSlab+0x2e8f8>
   5e7e4:	ldr	r8, [sp, #36]	; 0x24
   5e7e8:	mov	r9, sl
   5e7ec:	mov	r4, r7
   5e7f0:	ldr	r0, [sp, #80]	; 0x50
   5e7f4:	vld1.64	{d8-d9}, [r9], r0
   5e7f8:	vmov.32	r0, d9[0]
   5e7fc:	vmov.32	r1, d9[1]
   5e800:	bl	6b650 <__aeabi_ul2d>
   5e804:	vmov.32	r2, d8[0]
   5e808:	vmov.32	r3, d8[1]
   5e80c:	vmov	d9, r0, r1
   5e810:	mov	r0, r2
   5e814:	mov	r1, r3
   5e818:	bl	6b650 <__aeabi_ul2d>
   5e81c:	vmov	d8, r0, r1
   5e820:	mov	r0, #32
   5e824:	vst1.64	{d8-d9}, [r4], r0
   5e828:	ldr	r0, [sp, #92]	; 0x5c
   5e82c:	add	r0, sl, r0
   5e830:	vld1.64	{d8-d9}, [r0]
   5e834:	vmov.32	r0, d9[0]
   5e838:	vmov.32	r1, d9[1]
   5e83c:	bl	6b650 <__aeabi_ul2d>
   5e840:	vmov.32	r2, d8[0]
   5e844:	vmov.32	r3, d8[1]
   5e848:	vmov	d9, r0, r1
   5e84c:	mov	r0, r2
   5e850:	mov	r1, r3
   5e854:	bl	6b650 <__aeabi_ul2d>
   5e858:	vmov	d8, r0, r1
   5e85c:	add	r0, r7, #16
   5e860:	subs	r8, r8, #2
   5e864:	add	r6, r6, #4
   5e868:	mov	sl, r9
   5e86c:	mov	r7, r4
   5e870:	vst1.64	{d8-d9}, [r0]
   5e874:	bne	5e7f0 <GetDataSlab+0x2e870>
   5e878:	ldr	r0, [sp, #52]	; 0x34
   5e87c:	ldr	r7, [sp, #88]	; 0x58
   5e880:	ldr	sl, [sp, #76]	; 0x4c
   5e884:	cmp	r0, #0
   5e888:	beq	5e8cc <GetDataSlab+0x2e94c>
   5e88c:	ldr	r0, [sp, #68]	; 0x44
   5e890:	mul	r0, r6, r0
   5e894:	add	r0, sl, r0, lsl #3
   5e898:	vld1.64	{d8-d9}, [r0]
   5e89c:	vmov.32	r0, d9[0]
   5e8a0:	vmov.32	r1, d9[1]
   5e8a4:	bl	6b650 <__aeabi_ul2d>
   5e8a8:	vmov.32	r2, d8[0]
   5e8ac:	vmov.32	r3, d8[1]
   5e8b0:	vmov	d9, r0, r1
   5e8b4:	mov	r0, r2
   5e8b8:	mov	r1, r3
   5e8bc:	bl	6b650 <__aeabi_ul2d>
   5e8c0:	vmov	d8, r0, r1
   5e8c4:	add	r0, r7, r6, lsl #3
   5e8c8:	vst1.64	{d8-d9}, [r0]
   5e8cc:	ldr	r4, [sp, #48]	; 0x30
   5e8d0:	ldr	r2, [sp, #84]	; 0x54
   5e8d4:	add	r7, r7, r4, lsl #3
   5e8d8:	cmp	r5, r4
   5e8dc:	beq	5e788 <GetDataSlab+0x2e808>
   5e8e0:	ldr	r0, [sp, #56]	; 0x38
   5e8e4:	cmp	r0, #0
   5e8e8:	bne	5e8f4 <GetDataSlab+0x2e974>
   5e8ec:	mov	r0, r4
   5e8f0:	b	5e91c <GetDataSlab+0x2e99c>
   5e8f4:	ldr	r0, [sp, #68]	; 0x44
   5e8f8:	mov	r1, sl
   5e8fc:	mul	r0, r4, r0
   5e900:	ldr	r0, [r1, r0, lsl #3]!
   5e904:	ldr	r1, [r1, #4]
   5e908:	bl	6b650 <__aeabi_ul2d>
   5e90c:	ldr	r2, [sp, #84]	; 0x54
   5e910:	strd	r0, [r7]
   5e914:	orr	r0, r4, #1
   5e918:	add	r7, r7, #8
   5e91c:	orr	r1, r4, #1
   5e920:	cmp	r5, r1
   5e924:	beq	5e788 <GetDataSlab+0x2e808>
   5e928:	ldr	r1, [sp, #40]	; 0x28
   5e92c:	sub	r6, r5, r0
   5e930:	str	sl, [sp, #76]	; 0x4c
   5e934:	mov	r4, sl
   5e938:	ldr	sl, [sp, #92]	; 0x5c
   5e93c:	mul	r8, r1, r0
   5e940:	add	r0, r0, #1
   5e944:	mul	r9, r1, r0
   5e948:	mov	r1, r4
   5e94c:	ldr	r0, [r1, r8]!
   5e950:	ldr	r1, [r1, #4]
   5e954:	bl	6b650 <__aeabi_ul2d>
   5e958:	strd	r0, [r7]
   5e95c:	mov	r1, r4
   5e960:	ldr	r0, [r1, r9]!
   5e964:	ldr	r1, [r1, #4]
   5e968:	bl	6b650 <__aeabi_ul2d>
   5e96c:	strd	r0, [r7, #8]
   5e970:	add	r4, r4, sl
   5e974:	add	r7, r7, #16
   5e978:	subs	r6, r6, #2
   5e97c:	bne	5e948 <GetDataSlab+0x2e9c8>
   5e980:	b	5e780 <GetDataSlab+0x2e800>
   5e984:	mov	r0, #0
   5e988:	str	r9, [sp, #88]	; 0x58
   5e98c:	cmp	r6, #13
   5e990:	bne	56c20 <GetDataSlab+0x26ca0>
   5e994:	ldr	r0, [sp, #84]	; 0x54
   5e998:	cmp	r0, #1
   5e99c:	blt	5f88c <GetDataSlab+0x2f90c>
   5e9a0:	ldr	r0, [sp, #60]	; 0x3c
   5e9a4:	ldr	r1, [sp, #56]	; 0x38
   5e9a8:	mla	r0, r1, r8, r0
   5e9ac:	ldr	r1, [sp, #80]	; 0x50
   5e9b0:	add	r0, r1, r0, lsl #3
   5e9b4:	mov	r1, #1
   5e9b8:	str	r0, [sp, #76]	; 0x4c
   5e9bc:	sub	r0, r5, #2
   5e9c0:	add	r1, r1, r0, lsr #1
   5e9c4:	lsr	r0, r0, #1
   5e9c8:	str	r0, [sp, #44]	; 0x2c
   5e9cc:	mov	r0, #0
   5e9d0:	and	r2, r1, #1
   5e9d4:	sub	r1, r1, r2
   5e9d8:	str	r2, [sp, #52]	; 0x34
   5e9dc:	ldr	r2, [sp, #68]	; 0x44
   5e9e0:	str	r1, [sp, #36]	; 0x24
   5e9e4:	subs	r1, r5, #1
   5e9e8:	movwne	r1, #1
   5e9ec:	mov	r3, r2
   5e9f0:	sub	r2, r2, #1
   5e9f4:	clz	r2, r2
   5e9f8:	lsr	r2, r2, #5
   5e9fc:	and	r1, r1, r2
   5ea00:	str	r1, [sp, #60]	; 0x3c
   5ea04:	ldr	r1, [sp, #72]	; 0x48
   5ea08:	str	r0, [sp, #72]	; 0x48
   5ea0c:	mul	r1, r1, r8
   5ea10:	lsl	r1, r1, #3
   5ea14:	str	r1, [sp, #64]	; 0x40
   5ea18:	lsl	r1, r3, #3
   5ea1c:	str	r1, [sp, #40]	; 0x28
   5ea20:	lsl	r1, r3, #5
   5ea24:	str	r1, [sp, #80]	; 0x50
   5ea28:	lsl	r1, r3, #4
   5ea2c:	str	r1, [sp, #92]	; 0x5c
   5ea30:	and	r1, r5, #1
   5ea34:	str	r1, [sp, #56]	; 0x38
   5ea38:	bic	r1, r5, #1
   5ea3c:	str	r1, [sp, #48]	; 0x30
   5ea40:	cmp	r5, #1
   5ea44:	bge	5ea84 <GetDataSlab+0x2eb04>
   5ea48:	ldr	r7, [sp, #88]	; 0x58
   5ea4c:	ldr	r2, [sp, #84]	; 0x54
   5ea50:	ldr	sl, [sp, #76]	; 0x4c
   5ea54:	ldr	r1, [sp, #72]	; 0x48
   5ea58:	ldr	r0, [sp, #64]	; 0x40
   5ea5c:	str	r7, [sp, #88]	; 0x58
   5ea60:	add	r1, r1, #1
   5ea64:	add	sl, sl, r0
   5ea68:	mov	r0, #0
   5ea6c:	cmp	r1, r2
   5ea70:	str	sl, [sp, #76]	; 0x4c
   5ea74:	str	r1, [sp, #72]	; 0x48
   5ea78:	beq	56c20 <GetDataSlab+0x26ca0>
   5ea7c:	cmp	r5, #1
   5ea80:	blt	5ea48 <GetDataSlab+0x2eac8>
   5ea84:	ldr	r0, [sp, #60]	; 0x3c
   5ea88:	ldr	r7, [sp, #88]	; 0x58
   5ea8c:	ldr	r2, [sp, #84]	; 0x54
   5ea90:	ldr	sl, [sp, #76]	; 0x4c
   5ea94:	mov	r4, #0
   5ea98:	cmp	r0, #0
   5ea9c:	beq	5eb9c <GetDataSlab+0x2ec1c>
   5eaa0:	ldr	r0, [sp, #44]	; 0x2c
   5eaa4:	mov	r6, #0
   5eaa8:	cmp	r0, #0
   5eaac:	beq	5eb38 <GetDataSlab+0x2ebb8>
   5eab0:	ldr	r8, [sp, #36]	; 0x24
   5eab4:	mov	r9, sl
   5eab8:	mov	r4, r7
   5eabc:	ldr	r0, [sp, #80]	; 0x50
   5eac0:	vld1.64	{d8-d9}, [r9], r0
   5eac4:	vmov.32	r0, d9[0]
   5eac8:	vmov.32	r1, d9[1]
   5eacc:	bl	6b888 <__aeabi_ul2f>
   5ead0:	vmov.32	r2, d8[0]
   5ead4:	vmov.32	r1, d8[1]
   5ead8:	vmov	s17, r0
   5eadc:	mov	r0, r2
   5eae0:	bl	6b888 <__aeabi_ul2f>
   5eae4:	vmov	s16, r0
   5eae8:	mov	r0, #16
   5eaec:	vst1.32	{d8}, [r4], r0
   5eaf0:	ldr	r0, [sp, #92]	; 0x5c
   5eaf4:	add	r0, sl, r0
   5eaf8:	vld1.64	{d8-d9}, [r0]
   5eafc:	vmov.32	r0, d9[0]
   5eb00:	vmov.32	r1, d9[1]
   5eb04:	bl	6b888 <__aeabi_ul2f>
   5eb08:	vmov.32	r2, d8[0]
   5eb0c:	vmov.32	r1, d8[1]
   5eb10:	vmov	s17, r0
   5eb14:	mov	r0, r2
   5eb18:	bl	6b888 <__aeabi_ul2f>
   5eb1c:	vmov	s16, r0
   5eb20:	subs	r8, r8, #2
   5eb24:	add	r6, r6, #4
   5eb28:	mov	sl, r9
   5eb2c:	vstr	d8, [r7, #8]
   5eb30:	mov	r7, r4
   5eb34:	bne	5eabc <GetDataSlab+0x2eb3c>
   5eb38:	ldr	r0, [sp, #52]	; 0x34
   5eb3c:	ldr	r7, [sp, #88]	; 0x58
   5eb40:	ldr	sl, [sp, #76]	; 0x4c
   5eb44:	cmp	r0, #0
   5eb48:	beq	5eb88 <GetDataSlab+0x2ec08>
   5eb4c:	ldr	r0, [sp, #68]	; 0x44
   5eb50:	mul	r0, r6, r0
   5eb54:	add	r0, sl, r0, lsl #3
   5eb58:	vld1.64	{d8-d9}, [r0]
   5eb5c:	vmov.32	r0, d9[0]
   5eb60:	vmov.32	r1, d9[1]
   5eb64:	bl	6b888 <__aeabi_ul2f>
   5eb68:	vmov.32	r2, d8[0]
   5eb6c:	vmov.32	r1, d8[1]
   5eb70:	vmov	s17, r0
   5eb74:	mov	r0, r2
   5eb78:	bl	6b888 <__aeabi_ul2f>
   5eb7c:	vmov	s16, r0
   5eb80:	add	r0, r7, r6, lsl #2
   5eb84:	vstr	d8, [r0]
   5eb88:	ldr	r4, [sp, #48]	; 0x30
   5eb8c:	ldr	r2, [sp, #84]	; 0x54
   5eb90:	add	r7, r7, r4, lsl #2
   5eb94:	cmp	r5, r4
   5eb98:	beq	5ea54 <GetDataSlab+0x2ead4>
   5eb9c:	ldr	r0, [sp, #56]	; 0x38
   5eba0:	cmp	r0, #0
   5eba4:	bne	5ebb0 <GetDataSlab+0x2ec30>
   5eba8:	mov	r0, r4
   5ebac:	b	5ebd4 <GetDataSlab+0x2ec54>
   5ebb0:	ldr	r0, [sp, #68]	; 0x44
   5ebb4:	mov	r1, sl
   5ebb8:	mul	r0, r4, r0
   5ebbc:	ldr	r0, [r1, r0, lsl #3]!
   5ebc0:	ldr	r1, [r1, #4]
   5ebc4:	bl	6b888 <__aeabi_ul2f>
   5ebc8:	ldr	r2, [sp, #84]	; 0x54
   5ebcc:	str	r0, [r7], #4
   5ebd0:	orr	r0, r4, #1
   5ebd4:	orr	r1, r4, #1
   5ebd8:	cmp	r5, r1
   5ebdc:	beq	5ea54 <GetDataSlab+0x2ead4>
   5ebe0:	ldr	r1, [sp, #40]	; 0x28
   5ebe4:	sub	r6, r5, r0
   5ebe8:	str	sl, [sp, #76]	; 0x4c
   5ebec:	mov	r4, sl
   5ebf0:	ldr	sl, [sp, #92]	; 0x5c
   5ebf4:	mul	r8, r1, r0
   5ebf8:	add	r0, r0, #1
   5ebfc:	mul	r9, r1, r0
   5ec00:	mov	r1, r4
   5ec04:	ldr	r0, [r1, r8]!
   5ec08:	ldr	r1, [r1, #4]
   5ec0c:	bl	6b888 <__aeabi_ul2f>
   5ec10:	str	r0, [r7]
   5ec14:	mov	r1, r4
   5ec18:	ldr	r0, [r1, r9]!
   5ec1c:	ldr	r1, [r1, #4]
   5ec20:	bl	6b888 <__aeabi_ul2f>
   5ec24:	str	r0, [r7, #4]
   5ec28:	add	r4, r4, sl
   5ec2c:	add	r7, r7, #8
   5ec30:	subs	r6, r6, #2
   5ec34:	bne	5ec00 <GetDataSlab+0x2ec80>
   5ec38:	b	5ea4c <GetDataSlab+0x2eacc>
   5ec3c:	mov	r0, #0
   5ec40:	mov	r1, r7
   5ec44:	b	5f174 <GetDataSlab+0x2f1f4>
   5ec48:	mov	r0, #0
   5ec4c:	mov	r1, r7
   5ec50:	b	5f22c <GetDataSlab+0x2f2ac>
   5ec54:	mov	r9, ip
   5ec58:	mov	r0, #0
   5ec5c:	b	5f2e0 <GetDataSlab+0x2f360>
   5ec60:	mov	r0, #0
   5ec64:	mov	r9, ip
   5ec68:	b	5f4f8 <GetDataSlab+0x2f578>
   5ec6c:	mov	r0, #0
   5ec70:	str	r4, [sp, #88]	; 0x58
   5ec74:	b	5f710 <GetDataSlab+0x2f790>
   5ec78:	mov	r0, #0
   5ec7c:	str	r4, [sp, #88]	; 0x58
   5ec80:	b	5f7d0 <GetDataSlab+0x2f850>
   5ec84:	ldr	r3, [sp, #76]	; 0x4c
   5ec88:	ldr	r8, [sp, #64]	; 0x40
   5ec8c:	mov	r0, #0
   5ec90:	cmp	r3, #13
   5ec94:	bne	56c20 <GetDataSlab+0x26ca0>
   5ec98:	ldr	r0, [sp, #84]	; 0x54
   5ec9c:	cmp	r0, #1
   5eca0:	blt	5f88c <GetDataSlab+0x2f90c>
   5eca4:	ldr	r0, [sp, #60]	; 0x3c
   5eca8:	ldr	r1, [sp, #56]	; 0x38
   5ecac:	mov	r7, r8
   5ecb0:	mov	r2, #1
   5ecb4:	mov	lr, #0
   5ecb8:	mla	r0, r1, r8, r0
   5ecbc:	ldr	r1, [sp, #80]	; 0x50
   5ecc0:	add	r8, r1, r0, lsl #3
   5ecc4:	lsl	r1, r5, #3
   5ecc8:	add	r1, r1, r0, lsl #3
   5eccc:	lsl	r0, r0, #3
   5ecd0:	str	r0, [sp, #56]	; 0x38
   5ecd4:	subs	r0, r5, #1
   5ecd8:	str	r1, [sp, #64]	; 0x40
   5ecdc:	sub	r1, r5, #2
   5ece0:	movwne	r0, #1
   5ece4:	add	r2, r2, r1, lsr #1
   5ece8:	and	r3, r2, #1
   5ecec:	sub	r2, r2, r3
   5ecf0:	str	r3, [sp, #52]	; 0x34
   5ecf4:	str	r2, [sp, #40]	; 0x28
   5ecf8:	ldr	r2, [sp, #68]	; 0x44
   5ecfc:	mov	r3, r2
   5ed00:	sub	r2, r2, #1
   5ed04:	clz	r2, r2
   5ed08:	lsl	r9, r3, #5
   5ed0c:	lsr	r2, r2, #5
   5ed10:	and	r0, r0, r2
   5ed14:	lsl	r2, r3, #4
   5ed18:	str	r0, [sp, #76]	; 0x4c
   5ed1c:	ldr	r0, [sp, #72]	; 0x48
   5ed20:	mul	r0, r0, r7
   5ed24:	lsl	r0, r0, #3
   5ed28:	str	r0, [sp, #92]	; 0x5c
   5ed2c:	lsl	r0, r3, #3
   5ed30:	str	r0, [sp, #60]	; 0x3c
   5ed34:	and	r0, r5, #1
   5ed38:	str	r0, [sp, #72]	; 0x48
   5ed3c:	bic	r0, r5, #1
   5ed40:	str	r0, [sp, #48]	; 0x30
   5ed44:	lsr	r0, r1, #1
   5ed48:	str	r0, [sp, #44]	; 0x2c
   5ed4c:	cmp	r5, #1
   5ed50:	bge	5ed78 <GetDataSlab+0x2edf8>
   5ed54:	ldr	ip, [sp, #92]	; 0x5c
   5ed58:	ldr	r1, [sp, #84]	; 0x54
   5ed5c:	add	lr, lr, #1
   5ed60:	add	r8, r8, ip
   5ed64:	mov	r0, #0
   5ed68:	cmp	lr, r1
   5ed6c:	beq	56c20 <GetDataSlab+0x26ca0>
   5ed70:	cmp	r5, #1
   5ed74:	blt	5ed54 <GetDataSlab+0x2edd4>
   5ed78:	ldr	r1, [sp, #76]	; 0x4c
   5ed7c:	ldr	r7, [sp, #80]	; 0x50
   5ed80:	ldr	ip, [sp, #92]	; 0x5c
   5ed84:	mov	r0, #0
   5ed88:	mov	sl, #32
   5ed8c:	cmp	r1, #0
   5ed90:	beq	5ee50 <GetDataSlab+0x2eed0>
   5ed94:	ldr	r1, [sp, #64]	; 0x40
   5ed98:	ldr	r3, [sp, #88]	; 0x58
   5ed9c:	mla	r1, ip, lr, r1
   5eda0:	add	r1, r7, r1
   5eda4:	cmp	r1, r3
   5eda8:	bls	5edc4 <GetDataSlab+0x2ee44>
   5edac:	ldr	r1, [sp, #56]	; 0x38
   5edb0:	add	r3, r3, r5, lsl #3
   5edb4:	mla	r1, ip, lr, r1
   5edb8:	add	r1, r7, r1
   5edbc:	cmp	r1, r3
   5edc0:	bcc	5ee50 <GetDataSlab+0x2eed0>
   5edc4:	ldr	r0, [sp, #44]	; 0x2c
   5edc8:	cmp	r0, #0
   5edcc:	beq	5ee08 <GetDataSlab+0x2ee88>
   5edd0:	ldr	r3, [sp, #88]	; 0x58
   5edd4:	ldr	r4, [sp, #40]	; 0x28
   5edd8:	mov	r0, #0
   5eddc:	mov	r1, r8
   5ede0:	add	r7, r1, r2
   5ede4:	vld1.64	{d16-d17}, [r1], r9
   5ede8:	add	r6, r3, #16
   5edec:	subs	r4, r4, #2
   5edf0:	add	r0, r0, #4
   5edf4:	vst1.64	{d16-d17}, [r3], sl
   5edf8:	vld1.64	{d16-d17}, [r7]
   5edfc:	vst1.64	{d16-d17}, [r6]
   5ee00:	bne	5ede0 <GetDataSlab+0x2ee60>
   5ee04:	b	5ee0c <GetDataSlab+0x2ee8c>
   5ee08:	mov	r0, #0
   5ee0c:	ldr	r1, [sp, #52]	; 0x34
   5ee10:	cmp	r1, #0
   5ee14:	beq	5ee34 <GetDataSlab+0x2eeb4>
   5ee18:	ldr	r1, [sp, #68]	; 0x44
   5ee1c:	mul	r1, r0, r1
   5ee20:	add	r1, r8, r1, lsl #3
   5ee24:	vld1.64	{d16-d17}, [r1]
   5ee28:	ldr	r1, [sp, #88]	; 0x58
   5ee2c:	add	r0, r1, r0, lsl #3
   5ee30:	vst1.64	{d16-d17}, [r0]
   5ee34:	ldr	r1, [sp, #48]	; 0x30
   5ee38:	ldr	r0, [sp, #88]	; 0x58
   5ee3c:	add	r0, r0, r1, lsl #3
   5ee40:	cmp	r5, r1
   5ee44:	str	r0, [sp, #88]	; 0x58
   5ee48:	mov	r0, r1
   5ee4c:	beq	5ed58 <GetDataSlab+0x2edd8>
   5ee50:	ldr	r1, [sp, #72]	; 0x48
   5ee54:	cmp	r1, #0
   5ee58:	bne	5ee64 <GetDataSlab+0x2eee4>
   5ee5c:	mov	r1, r0
   5ee60:	b	5ee90 <GetDataSlab+0x2ef10>
   5ee64:	ldr	r1, [sp, #68]	; 0x44
   5ee68:	mov	r3, r8
   5ee6c:	mul	r1, r0, r1
   5ee70:	ldr	r4, [r3, r1, lsl #3]!
   5ee74:	ldr	r1, [r3, #4]
   5ee78:	ldr	r3, [sp, #88]	; 0x58
   5ee7c:	str	r4, [r3]
   5ee80:	str	r1, [r3, #4]
   5ee84:	orr	r1, r0, #1
   5ee88:	add	r3, r3, #8
   5ee8c:	str	r3, [sp, #88]	; 0x58
   5ee90:	orr	r0, r0, #1
   5ee94:	cmp	r5, r0
   5ee98:	beq	5ed58 <GetDataSlab+0x2edd8>
   5ee9c:	ldr	r3, [sp, #60]	; 0x3c
   5eea0:	sub	sl, r5, r1
   5eea4:	ldr	r6, [sp, #88]	; 0x58
   5eea8:	mul	r0, r3, r1
   5eeac:	add	r1, r1, #1
   5eeb0:	mul	ip, r3, r1
   5eeb4:	mov	r1, r8
   5eeb8:	mov	r3, r1
   5eebc:	subs	sl, sl, #2
   5eec0:	ldr	r4, [r3, r0]!
   5eec4:	ldr	r3, [r3, #4]
   5eec8:	str	r4, [r6]
   5eecc:	str	r3, [r6, #4]
   5eed0:	add	r3, r1, r2
   5eed4:	ldr	r4, [r1, ip]!
   5eed8:	ldr	r1, [r1, #4]
   5eedc:	str	r4, [r6, #8]
   5eee0:	str	r1, [r6, #12]
   5eee4:	add	r6, r6, #16
   5eee8:	mov	r1, r3
   5eeec:	bne	5eeb8 <GetDataSlab+0x2ef38>
   5eef0:	str	r6, [sp, #88]	; 0x58
   5eef4:	b	5ed54 <GetDataSlab+0x2edd4>
   5eef8:	ldr	r3, [sp, #76]	; 0x4c
   5eefc:	ldr	r8, [sp, #64]	; 0x40
   5ef00:	mov	r0, #0
   5ef04:	cmp	r3, #13
   5ef08:	bne	56c20 <GetDataSlab+0x26ca0>
   5ef0c:	ldr	r0, [sp, #84]	; 0x54
   5ef10:	cmp	r0, #1
   5ef14:	blt	5f88c <GetDataSlab+0x2f90c>
   5ef18:	ldr	r0, [sp, #60]	; 0x3c
   5ef1c:	ldr	r1, [sp, #56]	; 0x38
   5ef20:	mov	r7, r8
   5ef24:	mov	r2, #1
   5ef28:	mov	lr, #0
   5ef2c:	mla	r0, r1, r8, r0
   5ef30:	ldr	r1, [sp, #80]	; 0x50
   5ef34:	add	r8, r1, r0, lsl #3
   5ef38:	lsl	r1, r5, #3
   5ef3c:	add	r1, r1, r0, lsl #3
   5ef40:	lsl	r0, r0, #3
   5ef44:	str	r0, [sp, #56]	; 0x38
   5ef48:	subs	r0, r5, #1
   5ef4c:	str	r1, [sp, #64]	; 0x40
   5ef50:	sub	r1, r5, #2
   5ef54:	movwne	r0, #1
   5ef58:	add	r2, r2, r1, lsr #1
   5ef5c:	and	r3, r2, #1
   5ef60:	sub	r2, r2, r3
   5ef64:	str	r3, [sp, #52]	; 0x34
   5ef68:	str	r2, [sp, #40]	; 0x28
   5ef6c:	ldr	r2, [sp, #68]	; 0x44
   5ef70:	mov	r3, r2
   5ef74:	sub	r2, r2, #1
   5ef78:	clz	r2, r2
   5ef7c:	lsl	r9, r3, #5
   5ef80:	lsr	r2, r2, #5
   5ef84:	and	r0, r0, r2
   5ef88:	lsl	r2, r3, #4
   5ef8c:	str	r0, [sp, #76]	; 0x4c
   5ef90:	ldr	r0, [sp, #72]	; 0x48
   5ef94:	mul	r0, r0, r7
   5ef98:	lsl	r0, r0, #3
   5ef9c:	str	r0, [sp, #92]	; 0x5c
   5efa0:	lsl	r0, r3, #3
   5efa4:	str	r0, [sp, #60]	; 0x3c
   5efa8:	and	r0, r5, #1
   5efac:	str	r0, [sp, #72]	; 0x48
   5efb0:	bic	r0, r5, #1
   5efb4:	str	r0, [sp, #48]	; 0x30
   5efb8:	lsr	r0, r1, #1
   5efbc:	str	r0, [sp, #44]	; 0x2c
   5efc0:	cmp	r5, #1
   5efc4:	bge	5efec <GetDataSlab+0x2f06c>
   5efc8:	ldr	ip, [sp, #92]	; 0x5c
   5efcc:	ldr	r1, [sp, #84]	; 0x54
   5efd0:	add	lr, lr, #1
   5efd4:	add	r8, r8, ip
   5efd8:	mov	r0, #0
   5efdc:	cmp	lr, r1
   5efe0:	beq	56c20 <GetDataSlab+0x26ca0>
   5efe4:	cmp	r5, #1
   5efe8:	blt	5efc8 <GetDataSlab+0x2f048>
   5efec:	ldr	r1, [sp, #76]	; 0x4c
   5eff0:	ldr	r7, [sp, #80]	; 0x50
   5eff4:	ldr	ip, [sp, #92]	; 0x5c
   5eff8:	mov	r0, #0
   5effc:	mov	sl, #32
   5f000:	cmp	r1, #0
   5f004:	beq	5f0c4 <GetDataSlab+0x2f144>
   5f008:	ldr	r1, [sp, #64]	; 0x40
   5f00c:	ldr	r3, [sp, #88]	; 0x58
   5f010:	mla	r1, ip, lr, r1
   5f014:	add	r1, r7, r1
   5f018:	cmp	r1, r3
   5f01c:	bls	5f038 <GetDataSlab+0x2f0b8>
   5f020:	ldr	r1, [sp, #56]	; 0x38
   5f024:	add	r3, r3, r5, lsl #3
   5f028:	mla	r1, ip, lr, r1
   5f02c:	add	r1, r7, r1
   5f030:	cmp	r1, r3
   5f034:	bcc	5f0c4 <GetDataSlab+0x2f144>
   5f038:	ldr	r0, [sp, #44]	; 0x2c
   5f03c:	cmp	r0, #0
   5f040:	beq	5f07c <GetDataSlab+0x2f0fc>
   5f044:	ldr	r3, [sp, #88]	; 0x58
   5f048:	ldr	r4, [sp, #40]	; 0x28
   5f04c:	mov	r0, #0
   5f050:	mov	r1, r8
   5f054:	add	r7, r1, r2
   5f058:	vld1.64	{d16-d17}, [r1], r9
   5f05c:	add	r6, r3, #16
   5f060:	subs	r4, r4, #2
   5f064:	add	r0, r0, #4
   5f068:	vst1.64	{d16-d17}, [r3], sl
   5f06c:	vld1.64	{d16-d17}, [r7]
   5f070:	vst1.64	{d16-d17}, [r6]
   5f074:	bne	5f054 <GetDataSlab+0x2f0d4>
   5f078:	b	5f080 <GetDataSlab+0x2f100>
   5f07c:	mov	r0, #0
   5f080:	ldr	r1, [sp, #52]	; 0x34
   5f084:	cmp	r1, #0
   5f088:	beq	5f0a8 <GetDataSlab+0x2f128>
   5f08c:	ldr	r1, [sp, #68]	; 0x44
   5f090:	mul	r1, r0, r1
   5f094:	add	r1, r8, r1, lsl #3
   5f098:	vld1.64	{d16-d17}, [r1]
   5f09c:	ldr	r1, [sp, #88]	; 0x58
   5f0a0:	add	r0, r1, r0, lsl #3
   5f0a4:	vst1.64	{d16-d17}, [r0]
   5f0a8:	ldr	r1, [sp, #48]	; 0x30
   5f0ac:	ldr	r0, [sp, #88]	; 0x58
   5f0b0:	add	r0, r0, r1, lsl #3
   5f0b4:	cmp	r5, r1
   5f0b8:	str	r0, [sp, #88]	; 0x58
   5f0bc:	mov	r0, r1
   5f0c0:	beq	5efcc <GetDataSlab+0x2f04c>
   5f0c4:	ldr	r1, [sp, #72]	; 0x48
   5f0c8:	cmp	r1, #0
   5f0cc:	bne	5f0d8 <GetDataSlab+0x2f158>
   5f0d0:	mov	r1, r0
   5f0d4:	b	5f104 <GetDataSlab+0x2f184>
   5f0d8:	ldr	r1, [sp, #68]	; 0x44
   5f0dc:	mov	r3, r8
   5f0e0:	mul	r1, r0, r1
   5f0e4:	ldr	r4, [r3, r1, lsl #3]!
   5f0e8:	ldr	r1, [r3, #4]
   5f0ec:	ldr	r3, [sp, #88]	; 0x58
   5f0f0:	str	r4, [r3]
   5f0f4:	str	r1, [r3, #4]
   5f0f8:	orr	r1, r0, #1
   5f0fc:	add	r3, r3, #8
   5f100:	str	r3, [sp, #88]	; 0x58
   5f104:	orr	r0, r0, #1
   5f108:	cmp	r5, r0
   5f10c:	beq	5efcc <GetDataSlab+0x2f04c>
   5f110:	ldr	r3, [sp, #60]	; 0x3c
   5f114:	sub	sl, r5, r1
   5f118:	ldr	r6, [sp, #88]	; 0x58
   5f11c:	mul	r0, r3, r1
   5f120:	add	r1, r1, #1
   5f124:	mul	ip, r3, r1
   5f128:	mov	r1, r8
   5f12c:	mov	r3, r1
   5f130:	subs	sl, sl, #2
   5f134:	ldr	r4, [r3, r0]!
   5f138:	ldr	r3, [r3, #4]
   5f13c:	str	r4, [r6]
   5f140:	str	r3, [r6, #4]
   5f144:	add	r3, r1, r2
   5f148:	ldr	r4, [r1, ip]!
   5f14c:	ldr	r1, [r1, #4]
   5f150:	str	r4, [r6, #8]
   5f154:	str	r1, [r6, #12]
   5f158:	add	r6, r6, #16
   5f15c:	mov	r1, r3
   5f160:	bne	5f12c <GetDataSlab+0x2f1ac>
   5f164:	str	r6, [sp, #88]	; 0x58
   5f168:	b	5efc8 <GetDataSlab+0x2f048>
   5f16c:	ldr	r1, [sp, #88]	; 0x58
   5f170:	ldr	r4, [sp, #84]	; 0x54
   5f174:	mov	r6, r1
   5f178:	ldr	r1, [sp, #76]	; 0x4c
   5f17c:	cmp	r1, #13
   5f180:	bne	56c20 <GetDataSlab+0x26ca0>
   5f184:	cmp	r4, #1
   5f188:	mov	r0, r4
   5f18c:	blt	5f88c <GetDataSlab+0x2f90c>
   5f190:	ldr	r0, [fp, #12]
   5f194:	mov	r7, #0
   5f198:	mov	r2, r0
   5f19c:	ldr	r0, [r0]
   5f1a0:	ldr	r2, [r2, #4]
   5f1a4:	mla	r0, r8, r2, r0
   5f1a8:	ldr	r2, [sp, #80]	; 0x50
   5f1ac:	add	r2, r2, r0, lsl #3
   5f1b0:	cmp	r5, #1
   5f1b4:	bge	5f1ec <GetDataSlab+0x2f26c>
   5f1b8:	ldr	r0, [sp, #72]	; 0x48
   5f1bc:	mov	r1, r4
   5f1c0:	mov	r4, r0
   5f1c4:	str	r0, [sp, #72]	; 0x48
   5f1c8:	mul	r0, r8, r0
   5f1cc:	add	r7, r7, #1
   5f1d0:	mov	r4, r1
   5f1d4:	cmp	r7, r1
   5f1d8:	add	r2, r2, r0, lsl #3
   5f1dc:	mov	r0, #0
   5f1e0:	bge	56c20 <GetDataSlab+0x26ca0>
   5f1e4:	cmp	r5, #1
   5f1e8:	blt	5f1b8 <GetDataSlab+0x2f238>
   5f1ec:	mov	r0, #0
   5f1f0:	ldr	r5, [sl]
   5f1f4:	mul	r5, r5, r0
   5f1f8:	ldrb	r5, [r2, r5, lsl #3]
   5f1fc:	strb	r5, [r6, r0]
   5f200:	add	r0, r0, #1
   5f204:	ldr	r5, [r9]
   5f208:	cmp	r0, r5
   5f20c:	blt	5f1f0 <GetDataSlab+0x2f270>
   5f210:	add	r6, r6, r0
   5f214:	ldr	r1, [r3]
   5f218:	ldr	r8, [lr]
   5f21c:	ldr	r0, [ip]
   5f220:	b	5f1c0 <GetDataSlab+0x2f240>
   5f224:	ldr	r1, [sp, #88]	; 0x58
   5f228:	ldr	r4, [sp, #84]	; 0x54
   5f22c:	mov	r6, r1
   5f230:	ldr	r1, [sp, #76]	; 0x4c
   5f234:	cmp	r1, #13
   5f238:	bne	56c20 <GetDataSlab+0x26ca0>
   5f23c:	cmp	r4, #1
   5f240:	mov	r0, r4
   5f244:	blt	5f88c <GetDataSlab+0x2f90c>
   5f248:	ldr	r0, [fp, #12]
   5f24c:	mov	r7, #0
   5f250:	mov	r2, r0
   5f254:	ldr	r0, [r0]
   5f258:	ldr	r2, [r2, #4]
   5f25c:	mla	r0, r8, r2, r0
   5f260:	ldr	r2, [sp, #80]	; 0x50
   5f264:	add	r2, r2, r0, lsl #3
   5f268:	cmp	r5, #1
   5f26c:	bge	5f2a4 <GetDataSlab+0x2f324>
   5f270:	ldr	r0, [sp, #72]	; 0x48
   5f274:	mov	r1, r4
   5f278:	mov	r4, r0
   5f27c:	str	r0, [sp, #72]	; 0x48
   5f280:	mul	r0, r8, r0
   5f284:	add	r7, r7, #1
   5f288:	mov	r4, r1
   5f28c:	cmp	r7, r1
   5f290:	add	r2, r2, r0, lsl #3
   5f294:	mov	r0, #0
   5f298:	bge	56c20 <GetDataSlab+0x26ca0>
   5f29c:	cmp	r5, #1
   5f2a0:	blt	5f270 <GetDataSlab+0x2f2f0>
   5f2a4:	mov	r0, #0
   5f2a8:	ldr	r5, [sl]
   5f2ac:	mul	r5, r5, r0
   5f2b0:	ldrb	r5, [r2, r5, lsl #3]
   5f2b4:	strb	r5, [r6, r0]
   5f2b8:	add	r0, r0, #1
   5f2bc:	ldr	r5, [r9]
   5f2c0:	cmp	r0, r5
   5f2c4:	blt	5f2a8 <GetDataSlab+0x2f328>
   5f2c8:	add	r6, r6, r0
   5f2cc:	ldr	r1, [r3]
   5f2d0:	ldr	r8, [lr]
   5f2d4:	ldr	r0, [ip]
   5f2d8:	b	5f278 <GetDataSlab+0x2f2f8>
   5f2dc:	ldr	r9, [sp, #88]	; 0x58
   5f2e0:	ldr	r1, [sp, #76]	; 0x4c
   5f2e4:	cmp	r1, #13
   5f2e8:	bne	56c20 <GetDataSlab+0x26ca0>
   5f2ec:	ldr	r0, [sp, #84]	; 0x54
   5f2f0:	cmp	r0, #1
   5f2f4:	blt	5f88c <GetDataSlab+0x2f90c>
   5f2f8:	ldr	r0, [sp, #60]	; 0x3c
   5f2fc:	ldr	r1, [sp, #56]	; 0x38
   5f300:	mov	ip, #0
   5f304:	mov	sl, r9
   5f308:	mla	r0, r1, r8, r0
   5f30c:	ldr	r1, [sp, #80]	; 0x50
   5f310:	add	r6, r1, r0, lsl #3
   5f314:	sub	r0, r5, #2
   5f318:	mov	r1, #1
   5f31c:	add	r1, r1, r0, lsr #1
   5f320:	lsr	r0, r0, #1
   5f324:	str	r0, [sp, #60]	; 0x3c
   5f328:	and	r2, r1, #1
   5f32c:	sub	r1, r1, r2
   5f330:	str	r2, [sp, #64]	; 0x40
   5f334:	ldr	r2, [sp, #68]	; 0x44
   5f338:	str	r1, [sp, #52]	; 0x34
   5f33c:	subs	r1, r5, #1
   5f340:	movwne	r1, #1
   5f344:	mov	r3, r2
   5f348:	sub	r2, r2, #1
   5f34c:	clz	r2, r2
   5f350:	lsr	r2, r2, #5
   5f354:	and	r1, r1, r2
   5f358:	lsl	r2, r3, #4
   5f35c:	str	r1, [sp, #88]	; 0x58
   5f360:	ldr	r1, [sp, #72]	; 0x48
   5f364:	mul	r1, r1, r8
   5f368:	lsl	r1, r1, #3
   5f36c:	str	r1, [sp, #92]	; 0x5c
   5f370:	lsl	r1, r3, #3
   5f374:	str	r1, [sp, #56]	; 0x38
   5f378:	lsl	r1, r3, #5
   5f37c:	str	r1, [sp, #80]	; 0x50
   5f380:	and	r1, r5, #1
   5f384:	str	r1, [sp, #76]	; 0x4c
   5f388:	bic	r1, r5, #1
   5f38c:	str	r1, [sp, #72]	; 0x48
   5f390:	cmp	r5, #1
   5f394:	bge	5f3bc <GetDataSlab+0x2f43c>
   5f398:	ldr	lr, [sp, #84]	; 0x54
   5f39c:	ldr	r0, [sp, #92]	; 0x5c
   5f3a0:	add	ip, ip, #1
   5f3a4:	cmp	ip, lr
   5f3a8:	add	r6, r6, r0
   5f3ac:	mov	r0, #0
   5f3b0:	beq	56c20 <GetDataSlab+0x26ca0>
   5f3b4:	cmp	r5, #1
   5f3b8:	blt	5f398 <GetDataSlab+0x2f418>
   5f3bc:	ldr	r1, [sp, #88]	; 0x58
   5f3c0:	ldr	lr, [sp, #84]	; 0x54
   5f3c4:	ldr	r3, [sp, #80]	; 0x50
   5f3c8:	mov	r0, #0
   5f3cc:	cmp	r1, #0
   5f3d0:	beq	5f478 <GetDataSlab+0x2f4f8>
   5f3d4:	ldr	r0, [sp, #60]	; 0x3c
   5f3d8:	cmp	r0, #0
   5f3dc:	beq	5f434 <GetDataSlab+0x2f4b4>
   5f3e0:	ldr	r8, [sp, #52]	; 0x34
   5f3e4:	mov	r0, #0
   5f3e8:	mov	r7, r6
   5f3ec:	mov	lr, sl
   5f3f0:	mov	r9, r6
   5f3f4:	vld1.64	{d16-d17}, [r9], r3
   5f3f8:	add	r1, r7, r2
   5f3fc:	subs	r8, r8, #2
   5f400:	add	r0, r0, #4
   5f404:	mov	r7, r9
   5f408:	vmovn.i64	d16, q8
   5f40c:	vuzp.16	d16, d17
   5f410:	vst1.32	{d16[0]}, [lr]
   5f414:	vld1.64	{d16-d17}, [r1]
   5f418:	add	r1, lr, #4
   5f41c:	add	lr, lr, #8
   5f420:	vmovn.i64	d16, q8
   5f424:	vuzp.16	d16, d17
   5f428:	vst1.32	{d16[0]}, [r1]
   5f42c:	bne	5f3f4 <GetDataSlab+0x2f474>
   5f430:	b	5f438 <GetDataSlab+0x2f4b8>
   5f434:	mov	r0, #0
   5f438:	ldr	r1, [sp, #64]	; 0x40
   5f43c:	cmp	r1, #0
   5f440:	beq	5f464 <GetDataSlab+0x2f4e4>
   5f444:	ldr	r1, [sp, #68]	; 0x44
   5f448:	mul	r1, r0, r1
   5f44c:	add	r0, sl, r0, lsl #1
   5f450:	add	r1, r6, r1, lsl #3
   5f454:	vld1.64	{d16-d17}, [r1]
   5f458:	vmovn.i64	d16, q8
   5f45c:	vuzp.16	d16, d17
   5f460:	vst1.32	{d16[0]}, [r0]
   5f464:	ldr	r0, [sp, #72]	; 0x48
   5f468:	ldr	lr, [sp, #84]	; 0x54
   5f46c:	add	sl, sl, r0, lsl #1
   5f470:	cmp	r5, r0
   5f474:	beq	5f39c <GetDataSlab+0x2f41c>
   5f478:	ldr	r1, [sp, #76]	; 0x4c
   5f47c:	cmp	r1, #0
   5f480:	bne	5f48c <GetDataSlab+0x2f50c>
   5f484:	mov	r1, r0
   5f488:	b	5f4a4 <GetDataSlab+0x2f524>
   5f48c:	ldr	r1, [sp, #68]	; 0x44
   5f490:	mul	r1, r0, r1
   5f494:	add	r1, r6, r1, lsl #3
   5f498:	ldrh	r1, [r1]
   5f49c:	strh	r1, [sl], #2
   5f4a0:	orr	r1, r0, #1
   5f4a4:	orr	r0, r0, #1
   5f4a8:	cmp	r5, r0
   5f4ac:	beq	5f39c <GetDataSlab+0x2f41c>
   5f4b0:	ldr	r3, [sp, #56]	; 0x38
   5f4b4:	sub	r7, r5, r1
   5f4b8:	mul	r0, r3, r1
   5f4bc:	add	r1, r1, #1
   5f4c0:	mul	r4, r3, r1
   5f4c4:	mov	r1, r6
   5f4c8:	add	r3, r1, r0
   5f4cc:	subs	r7, r7, #2
   5f4d0:	ldrh	r3, [r3]
   5f4d4:	strh	r3, [sl]
   5f4d8:	add	r3, r1, r4
   5f4dc:	add	r1, r1, r2
   5f4e0:	ldrh	r3, [r3]
   5f4e4:	strh	r3, [sl, #2]
   5f4e8:	add	sl, sl, #4
   5f4ec:	bne	5f4c8 <GetDataSlab+0x2f548>
   5f4f0:	b	5f39c <GetDataSlab+0x2f41c>
   5f4f4:	ldr	r9, [sp, #88]	; 0x58
   5f4f8:	ldr	r1, [sp, #76]	; 0x4c
   5f4fc:	cmp	r1, #13
   5f500:	bne	56c20 <GetDataSlab+0x26ca0>
   5f504:	ldr	r0, [sp, #84]	; 0x54
   5f508:	cmp	r0, #1
   5f50c:	blt	5f88c <GetDataSlab+0x2f90c>
   5f510:	ldr	r0, [sp, #60]	; 0x3c
   5f514:	ldr	r1, [sp, #56]	; 0x38
   5f518:	mov	ip, #0
   5f51c:	mov	sl, r9
   5f520:	mla	r0, r1, r8, r0
   5f524:	ldr	r1, [sp, #80]	; 0x50
   5f528:	add	r6, r1, r0, lsl #3
   5f52c:	sub	r0, r5, #2
   5f530:	mov	r1, #1
   5f534:	add	r1, r1, r0, lsr #1
   5f538:	lsr	r0, r0, #1
   5f53c:	str	r0, [sp, #60]	; 0x3c
   5f540:	and	r2, r1, #1
   5f544:	sub	r1, r1, r2
   5f548:	str	r2, [sp, #64]	; 0x40
   5f54c:	ldr	r2, [sp, #68]	; 0x44
   5f550:	str	r1, [sp, #52]	; 0x34
   5f554:	subs	r1, r5, #1
   5f558:	movwne	r1, #1
   5f55c:	mov	r3, r2
   5f560:	sub	r2, r2, #1
   5f564:	clz	r2, r2
   5f568:	lsr	r2, r2, #5
   5f56c:	and	r1, r1, r2
   5f570:	lsl	r2, r3, #4
   5f574:	str	r1, [sp, #88]	; 0x58
   5f578:	ldr	r1, [sp, #72]	; 0x48
   5f57c:	mul	r1, r1, r8
   5f580:	lsl	r1, r1, #3
   5f584:	str	r1, [sp, #92]	; 0x5c
   5f588:	lsl	r1, r3, #3
   5f58c:	str	r1, [sp, #56]	; 0x38
   5f590:	lsl	r1, r3, #5
   5f594:	str	r1, [sp, #80]	; 0x50
   5f598:	and	r1, r5, #1
   5f59c:	str	r1, [sp, #76]	; 0x4c
   5f5a0:	bic	r1, r5, #1
   5f5a4:	str	r1, [sp, #72]	; 0x48
   5f5a8:	cmp	r5, #1
   5f5ac:	bge	5f5d4 <GetDataSlab+0x2f654>
   5f5b0:	ldr	lr, [sp, #84]	; 0x54
   5f5b4:	ldr	r0, [sp, #92]	; 0x5c
   5f5b8:	add	ip, ip, #1
   5f5bc:	cmp	ip, lr
   5f5c0:	add	r6, r6, r0
   5f5c4:	mov	r0, #0
   5f5c8:	beq	56c20 <GetDataSlab+0x26ca0>
   5f5cc:	cmp	r5, #1
   5f5d0:	blt	5f5b0 <GetDataSlab+0x2f630>
   5f5d4:	ldr	r1, [sp, #88]	; 0x58
   5f5d8:	ldr	lr, [sp, #84]	; 0x54
   5f5dc:	ldr	r3, [sp, #80]	; 0x50
   5f5e0:	mov	r0, #0
   5f5e4:	cmp	r1, #0
   5f5e8:	beq	5f690 <GetDataSlab+0x2f710>
   5f5ec:	ldr	r0, [sp, #60]	; 0x3c
   5f5f0:	cmp	r0, #0
   5f5f4:	beq	5f64c <GetDataSlab+0x2f6cc>
   5f5f8:	ldr	r8, [sp, #52]	; 0x34
   5f5fc:	mov	r0, #0
   5f600:	mov	r7, r6
   5f604:	mov	lr, sl
   5f608:	mov	r9, r6
   5f60c:	vld1.64	{d16-d17}, [r9], r3
   5f610:	add	r1, r7, r2
   5f614:	subs	r8, r8, #2
   5f618:	add	r0, r0, #4
   5f61c:	mov	r7, r9
   5f620:	vmovn.i64	d16, q8
   5f624:	vuzp.16	d16, d17
   5f628:	vst1.32	{d16[0]}, [lr]
   5f62c:	vld1.64	{d16-d17}, [r1]
   5f630:	add	r1, lr, #4
   5f634:	add	lr, lr, #8
   5f638:	vmovn.i64	d16, q8
   5f63c:	vuzp.16	d16, d17
   5f640:	vst1.32	{d16[0]}, [r1]
   5f644:	bne	5f60c <GetDataSlab+0x2f68c>
   5f648:	b	5f650 <GetDataSlab+0x2f6d0>
   5f64c:	mov	r0, #0
   5f650:	ldr	r1, [sp, #64]	; 0x40
   5f654:	cmp	r1, #0
   5f658:	beq	5f67c <GetDataSlab+0x2f6fc>
   5f65c:	ldr	r1, [sp, #68]	; 0x44
   5f660:	mul	r1, r0, r1
   5f664:	add	r0, sl, r0, lsl #1
   5f668:	add	r1, r6, r1, lsl #3
   5f66c:	vld1.64	{d16-d17}, [r1]
   5f670:	vmovn.i64	d16, q8
   5f674:	vuzp.16	d16, d17
   5f678:	vst1.32	{d16[0]}, [r0]
   5f67c:	ldr	r0, [sp, #72]	; 0x48
   5f680:	ldr	lr, [sp, #84]	; 0x54
   5f684:	add	sl, sl, r0, lsl #1
   5f688:	cmp	r5, r0
   5f68c:	beq	5f5b4 <GetDataSlab+0x2f634>
   5f690:	ldr	r1, [sp, #76]	; 0x4c
   5f694:	cmp	r1, #0
   5f698:	bne	5f6a4 <GetDataSlab+0x2f724>
   5f69c:	mov	r1, r0
   5f6a0:	b	5f6bc <GetDataSlab+0x2f73c>
   5f6a4:	ldr	r1, [sp, #68]	; 0x44
   5f6a8:	mul	r1, r0, r1
   5f6ac:	add	r1, r6, r1, lsl #3
   5f6b0:	ldrh	r1, [r1]
   5f6b4:	strh	r1, [sl], #2
   5f6b8:	orr	r1, r0, #1
   5f6bc:	orr	r0, r0, #1
   5f6c0:	cmp	r5, r0
   5f6c4:	beq	5f5b4 <GetDataSlab+0x2f634>
   5f6c8:	ldr	r3, [sp, #56]	; 0x38
   5f6cc:	sub	r7, r5, r1
   5f6d0:	mul	r0, r3, r1
   5f6d4:	add	r1, r1, #1
   5f6d8:	mul	r4, r3, r1
   5f6dc:	mov	r1, r6
   5f6e0:	add	r3, r1, r0
   5f6e4:	subs	r7, r7, #2
   5f6e8:	ldrh	r3, [r3]
   5f6ec:	strh	r3, [sl]
   5f6f0:	add	r3, r1, r4
   5f6f4:	add	r1, r1, r2
   5f6f8:	ldrh	r3, [r3]
   5f6fc:	strh	r3, [sl, #2]
   5f700:	add	sl, sl, #4
   5f704:	bne	5f6e0 <GetDataSlab+0x2f760>
   5f708:	b	5f5b4 <GetDataSlab+0x2f634>
   5f70c:	ldr	r6, [sp, #84]	; 0x54
   5f710:	ldr	r1, [sp, #76]	; 0x4c
   5f714:	cmp	r1, #13
   5f718:	bne	56c20 <GetDataSlab+0x26ca0>
   5f71c:	cmp	r6, #1
   5f720:	mov	r0, r6
   5f724:	blt	5f88c <GetDataSlab+0x2f90c>
   5f728:	ldr	r0, [fp, #12]
   5f72c:	mov	r7, #0
   5f730:	mov	r2, r0
   5f734:	ldr	r0, [r0]
   5f738:	ldr	r2, [r2, #4]
   5f73c:	mla	r0, r8, r2, r0
   5f740:	ldr	r2, [sp, #80]	; 0x50
   5f744:	add	r2, r2, r0, lsl #3
   5f748:	cmp	r5, #1
   5f74c:	bge	5f784 <GetDataSlab+0x2f804>
   5f750:	ldr	r0, [sp, #72]	; 0x48
   5f754:	mov	r1, r6
   5f758:	mov	r4, r0
   5f75c:	str	r0, [sp, #72]	; 0x48
   5f760:	mul	r0, r8, r0
   5f764:	add	r7, r7, #1
   5f768:	mov	r6, r1
   5f76c:	cmp	r7, r1
   5f770:	add	r2, r2, r0, lsl #3
   5f774:	mov	r0, #0
   5f778:	bge	56c20 <GetDataSlab+0x26ca0>
   5f77c:	cmp	r5, #1
   5f780:	blt	5f750 <GetDataSlab+0x2f7d0>
   5f784:	ldr	r4, [sp, #88]	; 0x58
   5f788:	mov	r0, #0
   5f78c:	mov	r6, #0
   5f790:	ldr	r5, [sl]
   5f794:	add	r0, r0, #4
   5f798:	mul	r5, r5, r6
   5f79c:	ldr	r5, [r2, r5, lsl #3]
   5f7a0:	str	r5, [r4, r6, lsl #2]
   5f7a4:	add	r6, r6, #1
   5f7a8:	ldr	r5, [r9]
   5f7ac:	cmp	r6, r5
   5f7b0:	blt	5f790 <GetDataSlab+0x2f810>
   5f7b4:	add	r4, r4, r0
   5f7b8:	ldr	r1, [r3]
   5f7bc:	ldr	r8, [lr]
   5f7c0:	ldr	r0, [ip]
   5f7c4:	str	r4, [sp, #88]	; 0x58
   5f7c8:	b	5f758 <GetDataSlab+0x2f7d8>
   5f7cc:	ldr	r6, [sp, #84]	; 0x54
   5f7d0:	ldr	r1, [sp, #76]	; 0x4c
   5f7d4:	cmp	r1, #13
   5f7d8:	bne	56c20 <GetDataSlab+0x26ca0>
   5f7dc:	cmp	r6, #1
   5f7e0:	mov	r0, r6
   5f7e4:	blt	5f88c <GetDataSlab+0x2f90c>
   5f7e8:	ldr	r0, [fp, #12]
   5f7ec:	mov	r7, #0
   5f7f0:	mov	r2, r0
   5f7f4:	ldr	r0, [r0]
   5f7f8:	ldr	r2, [r2, #4]
   5f7fc:	mla	r0, r8, r2, r0
   5f800:	ldr	r2, [sp, #80]	; 0x50
   5f804:	add	r2, r2, r0, lsl #3
   5f808:	cmp	r5, #1
   5f80c:	bge	5f844 <GetDataSlab+0x2f8c4>
   5f810:	ldr	r0, [sp, #72]	; 0x48
   5f814:	mov	r1, r6
   5f818:	mov	r4, r0
   5f81c:	str	r0, [sp, #72]	; 0x48
   5f820:	mul	r0, r8, r0
   5f824:	add	r7, r7, #1
   5f828:	mov	r6, r1
   5f82c:	cmp	r7, r1
   5f830:	add	r2, r2, r0, lsl #3
   5f834:	mov	r0, #0
   5f838:	bge	56c20 <GetDataSlab+0x26ca0>
   5f83c:	cmp	r5, #1
   5f840:	blt	5f810 <GetDataSlab+0x2f890>
   5f844:	ldr	r4, [sp, #88]	; 0x58
   5f848:	mov	r0, #0
   5f84c:	mov	r6, #0
   5f850:	ldr	r5, [sl]
   5f854:	add	r0, r0, #4
   5f858:	mul	r5, r5, r6
   5f85c:	ldr	r5, [r2, r5, lsl #3]
   5f860:	str	r5, [r4, r6, lsl #2]
   5f864:	add	r6, r6, #1
   5f868:	ldr	r5, [r9]
   5f86c:	cmp	r6, r5
   5f870:	blt	5f850 <GetDataSlab+0x2f8d0>
   5f874:	add	r4, r4, r0
   5f878:	ldr	r1, [r3]
   5f87c:	ldr	r8, [lr]
   5f880:	ldr	r0, [ip]
   5f884:	str	r4, [sp, #88]	; 0x58
   5f888:	b	5f818 <GetDataSlab+0x2f898>
   5f88c:	mov	r0, #0
   5f890:	b	56c20 <GetDataSlab+0x26ca0>

0005f894 <Mat_VarReadDataLinear5>:
   5f894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5f898:	add	fp, sp, #28
   5f89c:	sub	sp, sp, #84	; 0x54
   5f8a0:	mov	r7, r0
   5f8a4:	mov	r0, #1
   5f8a8:	mvn	r5, #0
   5f8ac:	str	r0, [sp, #16]
   5f8b0:	ldr	r0, [r7, #16]
   5f8b4:	cmp	r0, #16
   5f8b8:	beq	5fd5c <Mat_VarReadDataLinear5+0x4c8>
   5f8bc:	mov	r4, r1
   5f8c0:	ldr	r1, [r1, #52]	; 0x34
   5f8c4:	ldr	r0, [r7]
   5f8c8:	mov	r8, r2
   5f8cc:	mov	r2, #0
   5f8d0:	mov	r9, r3
   5f8d4:	mov	r6, #0
   5f8d8:	ldr	r1, [r1]
   5f8dc:	bl	1a2c <fseek@plt>
   5f8e0:	ldr	r0, [r4, #48]	; 0x30
   5f8e4:	cmp	r0, #1
   5f8e8:	beq	5f95c <Mat_VarReadDataLinear5+0xc8>
   5f8ec:	cmp	r0, #0
   5f8f0:	bne	5faa4 <Mat_VarReadDataLinear5+0x210>
   5f8f4:	ldr	r3, [r7]
   5f8f8:	sub	r5, fp, #36	; 0x24
   5f8fc:	mov	r1, #4
   5f900:	mov	r2, #2
   5f904:	mov	r0, r5
   5f908:	bl	18b8 <fread@plt>
   5f90c:	ldr	r0, [r7, #20]
   5f910:	cmp	r0, #0
   5f914:	beq	5f928 <Mat_VarReadDataLinear5+0x94>
   5f918:	mov	r0, r5
   5f91c:	bl	1bf8 <Mat_int32Swap>
   5f920:	add	r0, r5, #4
   5f924:	bl	1bf8 <Mat_int32Swap>
   5f928:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f92c:	uxtb	r1, r0
   5f930:	cmp	r0, #65536	; 0x10000
   5f934:	str	r1, [r4, #8]
   5f938:	bcc	5fa9c <Mat_VarReadDataLinear5+0x208>
   5f93c:	ldr	r0, [r7]
   5f940:	mvn	r1, #3
   5f944:	mov	r2, #1
   5f948:	bl	1a2c <fseek@plt>
   5f94c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5f950:	mov	r1, #4
   5f954:	add	r6, r1, r0, asr #16
   5f958:	b	5faa4 <Mat_VarReadDataLinear5+0x210>
   5f95c:	ldr	r0, [r4, #52]	; 0x34
   5f960:	ldr	r6, [r0, #16]
   5f964:	cmp	r6, #0
   5f968:	beq	5f9c8 <Mat_VarReadDataLinear5+0x134>
   5f96c:	ldr	r0, [r4, #20]
   5f970:	cmp	r0, #0
   5f974:	beq	5f9fc <Mat_VarReadDataLinear5+0x168>
   5f978:	ldr	r3, [r4, #8]
   5f97c:	ldr	r2, [r4, #16]
   5f980:	ldr	r1, [r8]
   5f984:	ldr	r0, [r6]
   5f988:	ldr	sl, [fp, #8]
   5f98c:	ldr	r7, [fp, #12]
   5f990:	str	r9, [sp]
   5f994:	str	sl, [sp, #4]
   5f998:	str	r7, [sp, #8]
   5f99c:	bl	5fd74 <GetDataLinear>
   5f9a0:	mov	r5, r0
   5f9a4:	cmp	r0, #0
   5f9a8:	bne	5fd5c <Mat_VarReadDataLinear5+0x4c8>
   5f9ac:	ldr	r3, [r4, #8]
   5f9b0:	ldr	r2, [r4, #16]
   5f9b4:	ldr	r1, [r8, #4]
   5f9b8:	ldr	r0, [r6, #4]
   5f9bc:	stm	sp, {r9, sl}
   5f9c0:	str	r7, [sp, #8]
   5f9c4:	b	5fa20 <Mat_VarReadDataLinear5+0x18c>
   5f9c8:	ldr	r1, [r0, #12]
   5f9cc:	mov	r0, #0
   5f9d0:	str	r0, [r1, #4]
   5f9d4:	add	r0, sp, #20
   5f9d8:	bl	1948 <inflateCopy@plt>
   5f9dc:	cmp	r0, #0
   5f9e0:	beq	5fa2c <Mat_VarReadDataLinear5+0x198>
   5f9e4:	bl	1888 <zError@plt>
   5f9e8:	mov	r1, r0
   5f9ec:	ldr	r0, [pc, #884]	; 5fd68 <Mat_VarReadDataLinear5+0x4d4>
   5f9f0:	add	r0, pc, r0
   5f9f4:	bl	19b4 <Mat_Critical@plt>
   5f9f8:	b	5fd5c <Mat_VarReadDataLinear5+0x4c8>
   5f9fc:	ldr	r0, [fp, #8]
   5fa00:	ldr	r3, [r4, #8]
   5fa04:	ldr	r2, [r4, #16]
   5fa08:	str	r9, [sp]
   5fa0c:	mov	r1, r8
   5fa10:	str	r0, [sp, #4]
   5fa14:	ldr	r0, [fp, #12]
   5fa18:	str	r0, [sp, #8]
   5fa1c:	mov	r0, r6
   5fa20:	bl	5fd74 <GetDataLinear>
   5fa24:	mov	r5, r0
   5fa28:	b	5fd5c <Mat_VarReadDataLinear5+0x4c8>
   5fa2c:	sub	r5, fp, #36	; 0x24
   5fa30:	add	r1, sp, #20
   5fa34:	mov	r0, r7
   5fa38:	mov	r2, r5
   5fa3c:	bl	3108 <InflateDataType>
   5fa40:	ldr	r0, [r7, #20]
   5fa44:	cmp	r0, #0
   5fa48:	beq	5fa5c <Mat_VarReadDataLinear5+0x1c8>
   5fa4c:	mov	r0, r5
   5fa50:	bl	1bf8 <Mat_int32Swap>
   5fa54:	add	r0, r5, #4
   5fa58:	bl	1bf8 <Mat_int32Swap>
   5fa5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fa60:	uxtb	r1, r0
   5fa64:	str	r1, [r4, #8]
   5fa68:	mov	r1, #0
   5fa6c:	cmp	r1, r0, lsr #16
   5fa70:	bne	5f950 <Mat_VarReadDataLinear5+0xbc>
   5fa74:	add	r5, r5, #4
   5fa78:	add	r1, sp, #20
   5fa7c:	mov	r0, r7
   5fa80:	mov	r2, r5
   5fa84:	bl	3108 <InflateDataType>
   5fa88:	ldr	r0, [r7, #20]
   5fa8c:	cmp	r0, #0
   5fa90:	beq	5fa9c <Mat_VarReadDataLinear5+0x208>
   5fa94:	mov	r0, r5
   5fa98:	bl	1bf8 <Mat_int32Swap>
   5fa9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   5faa0:	add	r6, r0, #8
   5faa4:	asr	r0, r6, #31
   5faa8:	add	r0, r6, r0, lsr #29
   5faac:	bic	r0, r0, #7
   5fab0:	subs	r1, r6, r0
   5fab4:	add	r1, sp, #16
   5fab8:	addne	r6, r0, #8
   5fabc:	mov	r0, r4
   5fac0:	bl	665f0 <SafeMulDims>
   5fac4:	mov	sl, r0
   5fac8:	cmp	r0, #0
   5facc:	beq	5fadc <Mat_VarReadDataLinear5+0x248>
   5fad0:	ldr	r0, [pc, #660]	; 5fd6c <Mat_VarReadDataLinear5+0x4d8>
   5fad4:	add	r0, pc, r0
   5fad8:	bl	19b4 <Mat_Critical@plt>
   5fadc:	ldr	ip, [fp, #12]
   5fae0:	ldr	lr, [fp, #8]
   5fae4:	ldr	r1, [sp, #16]
   5fae8:	mov	r5, #1
   5faec:	sub	r0, ip, #1
   5faf0:	mla	r0, r0, lr, r9
   5faf4:	add	r0, r0, #1
   5faf8:	cmp	r0, r1
   5fafc:	bhi	5fd44 <Mat_VarReadDataLinear5+0x4b0>
   5fb00:	ldr	r0, [r4, #48]	; 0x30
   5fb04:	cmp	r0, #1
   5fb08:	beq	5fbd4 <Mat_VarReadDataLinear5+0x340>
   5fb0c:	cmp	r0, #0
   5fb10:	bne	5fcec <Mat_VarReadDataLinear5+0x458>
   5fb14:	ldr	r0, [r4, #20]
   5fb18:	cmp	r0, #0
   5fb1c:	beq	5fcf4 <Mat_VarReadDataLinear5+0x460>
   5fb20:	ldr	r3, [r4, #8]
   5fb24:	ldr	r2, [r4, #16]
   5fb28:	ldr	r1, [r8]
   5fb2c:	mov	r0, r7
   5fb30:	stm	sp, {r9, lr}
   5fb34:	str	ip, [sp, #8]
   5fb38:	bl	2a2e0 <ReadDataSlab1>
   5fb3c:	ldr	r0, [r4, #52]	; 0x34
   5fb40:	mov	r2, #0
   5fb44:	ldr	r0, [r0]
   5fb48:	add	r1, r0, r6
   5fb4c:	ldr	r0, [r7]
   5fb50:	bl	1a2c <fseek@plt>
   5fb54:	ldr	r3, [r7]
   5fb58:	sub	r5, fp, #36	; 0x24
   5fb5c:	mov	r1, #4
   5fb60:	mov	r2, #2
   5fb64:	mov	r0, r5
   5fb68:	bl	18b8 <fread@plt>
   5fb6c:	ldr	r0, [r7, #20]
   5fb70:	cmp	r0, #0
   5fb74:	beq	5fb88 <Mat_VarReadDataLinear5+0x2f4>
   5fb78:	mov	r0, r5
   5fb7c:	bl	1bf8 <Mat_int32Swap>
   5fb80:	add	r0, r5, #4
   5fb84:	bl	1bf8 <Mat_int32Swap>
   5fb88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   5fb8c:	uxtb	r3, r0
   5fb90:	cmp	r0, #65536	; 0x10000
   5fb94:	str	r3, [r4, #8]
   5fb98:	bcc	5fbb0 <Mat_VarReadDataLinear5+0x31c>
   5fb9c:	ldr	r0, [r7]
   5fba0:	mvn	r1, #3
   5fba4:	mov	r2, #1
   5fba8:	bl	1a2c <fseek@plt>
   5fbac:	ldr	r3, [r4, #8]
   5fbb0:	ldr	r0, [fp, #8]
   5fbb4:	ldr	r2, [r4, #16]
   5fbb8:	ldr	r1, [r8, #4]
   5fbbc:	str	r9, [sp]
   5fbc0:	str	r0, [sp, #4]
   5fbc4:	ldr	r0, [fp, #12]
   5fbc8:	str	r0, [sp, #8]
   5fbcc:	mov	r0, r7
   5fbd0:	b	5fd0c <Mat_VarReadDataLinear5+0x478>
   5fbd4:	ldr	r0, [r4, #20]
   5fbd8:	cmp	r0, #0
   5fbdc:	beq	5fd18 <Mat_VarReadDataLinear5+0x484>
   5fbe0:	ldr	r0, [r4, #8]
   5fbe4:	ldr	r2, [r8]
   5fbe8:	ldr	r3, [r4, #16]
   5fbec:	add	r5, sp, #20
   5fbf0:	mov	r1, r5
   5fbf4:	stm	sp, {r0, r9, lr}
   5fbf8:	mov	r0, r7
   5fbfc:	str	ip, [sp, #12]
   5fc00:	bl	2b7a4 <ReadCompressedDataSlab1>
   5fc04:	ldr	r1, [r4, #52]	; 0x34
   5fc08:	ldr	r0, [r7]
   5fc0c:	mov	r2, #0
   5fc10:	ldr	r1, [r1]
   5fc14:	bl	1a2c <fseek@plt>
   5fc18:	mov	r0, r5
   5fc1c:	bl	193c <inflateEnd@plt>
   5fc20:	ldr	r0, [r4, #52]	; 0x34
   5fc24:	ldr	r1, [r0, #12]
   5fc28:	mov	r0, r5
   5fc2c:	bl	1948 <inflateCopy@plt>
   5fc30:	mov	r5, r0
   5fc34:	cmp	r0, #0
   5fc38:	beq	5fc54 <Mat_VarReadDataLinear5+0x3c0>
   5fc3c:	mov	r0, r5
   5fc40:	bl	1888 <zError@plt>
   5fc44:	mov	r1, r0
   5fc48:	ldr	r0, [pc, #288]	; 5fd70 <Mat_VarReadDataLinear5+0x4dc>
   5fc4c:	add	r0, pc, r0
   5fc50:	bl	19b4 <Mat_Critical@plt>
   5fc54:	add	sl, sp, #20
   5fc58:	mov	r0, r7
   5fc5c:	mov	r2, r6
   5fc60:	mov	r1, sl
   5fc64:	bl	2394 <InflateSkip>
   5fc68:	mov	r0, #0
   5fc6c:	sub	r2, fp, #36	; 0x24
   5fc70:	mov	r1, sl
   5fc74:	str	r0, [sp, #24]
   5fc78:	mov	r0, r7
   5fc7c:	bl	3108 <InflateDataType>
   5fc80:	ldr	r0, [r7, #20]
   5fc84:	cmp	r0, #0
   5fc88:	beq	5fc94 <Mat_VarReadDataLinear5+0x400>
   5fc8c:	sub	r0, fp, #36	; 0x24
   5fc90:	bl	1bf8 <Mat_int32Swap>
   5fc94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   5fc98:	mov	r2, #0
   5fc9c:	uxtb	r0, r1
   5fca0:	cmp	r2, r1, lsr #16
   5fca4:	str	r0, [r4, #8]
   5fca8:	bne	5fcc0 <Mat_VarReadDataLinear5+0x42c>
   5fcac:	add	r1, sp, #20
   5fcb0:	mov	r0, r7
   5fcb4:	mov	r2, #4
   5fcb8:	bl	2394 <InflateSkip>
   5fcbc:	ldr	r0, [r4, #8]
   5fcc0:	ldr	r3, [r4, #16]
   5fcc4:	ldr	r2, [r8, #4]
   5fcc8:	stm	sp, {r0, r9}
   5fccc:	ldr	r0, [fp, #8]
   5fcd0:	add	r1, sp, #20
   5fcd4:	str	r0, [sp, #8]
   5fcd8:	ldr	r0, [fp, #12]
   5fcdc:	str	r0, [sp, #12]
   5fce0:	mov	r0, r7
   5fce4:	bl	2b7a4 <ReadCompressedDataSlab1>
   5fce8:	b	5fd3c <Mat_VarReadDataLinear5+0x4a8>
   5fcec:	mov	r5, sl
   5fcf0:	b	5fd44 <Mat_VarReadDataLinear5+0x4b0>
   5fcf4:	ldr	r3, [r4, #8]
   5fcf8:	ldr	r2, [r4, #16]
   5fcfc:	mov	r0, r7
   5fd00:	mov	r1, r8
   5fd04:	stm	sp, {r9, lr}
   5fd08:	str	ip, [sp, #8]
   5fd0c:	bl	2a2e0 <ReadDataSlab1>
   5fd10:	mov	r5, sl
   5fd14:	b	5fd44 <Mat_VarReadDataLinear5+0x4b0>
   5fd18:	ldr	r0, [r4, #8]
   5fd1c:	ldr	r3, [r4, #16]
   5fd20:	add	r1, sp, #20
   5fd24:	mov	r2, r8
   5fd28:	stm	sp, {r0, r9, lr}
   5fd2c:	mov	r0, r7
   5fd30:	str	ip, [sp, #12]
   5fd34:	bl	2b7a4 <ReadCompressedDataSlab1>
   5fd38:	mov	r5, sl
   5fd3c:	add	r0, sp, #20
   5fd40:	bl	193c <inflateEnd@plt>
   5fd44:	ldr	r0, [r4, #16]
   5fd48:	bl	665cc <ClassType2DataType>
   5fd4c:	str	r0, [r4, #8]
   5fd50:	ldr	r0, [r4, #16]
   5fd54:	bl	1a08 <Mat_SizeOfClass@plt>
   5fd58:	str	r0, [r4, #12]
   5fd5c:	mov	r0, r5
   5fd60:	sub	sp, fp, #28
   5fd64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   5fd68:	.word	0x0000c5d3
   5fd6c:	.word	0x0000c344
   5fd70:	.word	0x0000c377

0005fd74 <GetDataLinear>:
   5fd74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   5fd78:	add	fp, sp, #28
   5fd7c:	sub	sp, sp, #12
   5fd80:	mov	r4, r0
   5fd84:	mov	r0, r3
   5fd88:	mov	r7, r2
   5fd8c:	mov	r5, r1
   5fd90:	bl	1924 <Mat_SizeOf@plt>
   5fd94:	sub	r1, r7, #6
   5fd98:	cmp	r1, #9
   5fd9c:	bhi	5fe78 <GetDataLinear+0x104>
   5fda0:	add	r2, pc, #16
   5fda4:	add	r8, fp, #8
   5fda8:	mov	r9, r0
   5fdac:	ldm	r8, {r0, r3, r8}
   5fdb0:	ldr	r1, [r2, r1, lsl #2]
   5fdb4:	add	pc, r2, r1
   5fdb8:	.word	0x00000028
   5fdbc:	.word	0x000000c8
   5fdc0:	.word	0x00000144
   5fdc4:	.word	0x000001b8
   5fdc8:	.word	0x000001e8
   5fdcc:	.word	0x00000264
   5fdd0:	.word	0x000002fc
   5fdd4:	.word	0x00000378
   5fdd8:	.word	0x0000042c
   5fddc:	.word	0x0000046c
   5fde0:	add	r1, r4, r0, lsl #3
   5fde4:	cmp	r3, #0
   5fde8:	beq	601c8 <GetDataLinear+0x454>
   5fdec:	cmp	r8, #1
   5fdf0:	blt	601dc <GetDataLinear+0x468>
   5fdf4:	and	r0, r8, #1
   5fdf8:	mov	r6, #0
   5fdfc:	cmp	r8, #1
   5fe00:	mov	r4, #0
   5fe04:	beq	5fe64 <GetDataLinear+0xf0>
   5fe08:	sub	r8, r8, r0
   5fe0c:	lsl	r6, r3, #4
   5fe10:	lsl	sl, r3, #3
   5fe14:	mov	r4, #0
   5fe18:	mov	r7, r1
   5fe1c:	str	r0, [sp, #4]
   5fe20:	str	r1, [sp, #8]
   5fe24:	mov	r0, r5
   5fe28:	mov	r1, r7
   5fe2c:	mov	r2, r9
   5fe30:	bl	181c <memcpy@plt>
   5fe34:	add	r1, r7, sl
   5fe38:	add	r0, r5, #8
   5fe3c:	mov	r2, r9
   5fe40:	bl	181c <memcpy@plt>
   5fe44:	add	r4, r4, #2
   5fe48:	add	r7, r7, r6
   5fe4c:	add	r5, r5, #16
   5fe50:	cmp	r8, r4
   5fe54:	bne	5fe24 <GetDataLinear+0xb0>
   5fe58:	ldr	r3, [fp, #12]
   5fe5c:	ldmib	sp, {r0, r1}
   5fe60:	mov	r6, #0
   5fe64:	cmp	r0, #0
   5fe68:	beq	602f4 <GetDataLinear+0x580>
   5fe6c:	mul	r0, r4, r3
   5fe70:	add	r1, r1, r0, lsl #3
   5fe74:	b	602e8 <GetDataLinear+0x574>
   5fe78:	mov	r6, #1
   5fe7c:	b	602f4 <GetDataLinear+0x580>
   5fe80:	add	r1, r4, r0, lsl #2
   5fe84:	cmp	r3, #0
   5fe88:	beq	601c8 <GetDataLinear+0x454>
   5fe8c:	cmp	r8, #1
   5fe90:	blt	601dc <GetDataLinear+0x468>
   5fe94:	and	r0, r8, #1
   5fe98:	mov	r6, #0
   5fe9c:	cmp	r8, #1
   5fea0:	mov	r4, #0
   5fea4:	beq	601b4 <GetDataLinear+0x440>
   5fea8:	sub	r8, r8, r0
   5feac:	lsl	r6, r3, #3
   5feb0:	lsl	sl, r3, #2
   5feb4:	mov	r4, #0
   5feb8:	mov	r7, r1
   5febc:	str	r0, [sp, #4]
   5fec0:	str	r1, [sp, #8]
   5fec4:	mov	r0, r5
   5fec8:	mov	r1, r7
   5fecc:	mov	r2, r9
   5fed0:	bl	181c <memcpy@plt>
   5fed4:	add	r1, r7, sl
   5fed8:	add	r0, r5, #4
   5fedc:	mov	r2, r9
   5fee0:	bl	181c <memcpy@plt>
   5fee4:	add	r4, r4, #2
   5fee8:	add	r7, r7, r6
   5feec:	add	r5, r5, #8
   5fef0:	cmp	r8, r4
   5fef4:	bne	5fec4 <GetDataLinear+0x150>
   5fef8:	b	601a8 <GetDataLinear+0x434>
   5fefc:	add	r1, r4, r0
   5ff00:	cmp	r3, #0
   5ff04:	beq	601c8 <GetDataLinear+0x454>
   5ff08:	cmp	r8, #1
   5ff0c:	blt	601dc <GetDataLinear+0x468>
   5ff10:	and	r2, r8, #1
   5ff14:	mov	r6, #0
   5ff18:	beq	5ff90 <GetDataLinear+0x21c>
   5ff1c:	sub	r8, r2, r8
   5ff20:	lsl	sl, r3, #1
   5ff24:	mov	r6, #0
   5ff28:	mov	r7, r1
   5ff2c:	str	r2, [sp, #4]
   5ff30:	str	r1, [sp, #8]
   5ff34:	sub	r4, r5, r6
   5ff38:	mov	r1, r7
   5ff3c:	mov	r2, r9
   5ff40:	mov	r0, r4
   5ff44:	bl	181c <memcpy@plt>
   5ff48:	ldr	r0, [fp, #12]
   5ff4c:	mov	r2, r9
   5ff50:	add	r1, r7, r0
   5ff54:	add	r0, r4, #1
   5ff58:	bl	181c <memcpy@plt>
   5ff5c:	sub	r6, r6, #2
   5ff60:	add	r7, r7, sl
   5ff64:	cmp	r8, r6
   5ff68:	bne	5ff34 <GetDataLinear+0x1c0>
   5ff6c:	b	602c4 <GetDataLinear+0x550>
   5ff70:	add	r1, r4, r0
   5ff74:	cmp	r3, #0
   5ff78:	beq	601c8 <GetDataLinear+0x454>
   5ff7c:	cmp	r8, #1
   5ff80:	blt	601dc <GetDataLinear+0x468>
   5ff84:	and	r2, r8, #1
   5ff88:	mov	r6, #0
   5ff8c:	bne	60274 <GetDataLinear+0x500>
   5ff90:	mov	r0, #0
   5ff94:	cmp	r2, #0
   5ff98:	bne	602e4 <GetDataLinear+0x570>
   5ff9c:	b	602f4 <GetDataLinear+0x580>
   5ffa0:	add	r1, r4, r0, lsl #1
   5ffa4:	cmp	r3, #0
   5ffa8:	beq	601c8 <GetDataLinear+0x454>
   5ffac:	cmp	r8, #1
   5ffb0:	blt	601dc <GetDataLinear+0x468>
   5ffb4:	and	r0, r8, #1
   5ffb8:	mov	r6, #0
   5ffbc:	cmp	r8, #1
   5ffc0:	mov	r4, #0
   5ffc4:	beq	600a0 <GetDataLinear+0x32c>
   5ffc8:	sub	r8, r8, r0
   5ffcc:	lsl	r6, r3, #2
   5ffd0:	lsl	sl, r3, #1
   5ffd4:	mov	r4, #0
   5ffd8:	mov	r7, r1
   5ffdc:	str	r0, [sp, #4]
   5ffe0:	str	r1, [sp, #8]
   5ffe4:	mov	r0, r5
   5ffe8:	mov	r1, r7
   5ffec:	mov	r2, r9
   5fff0:	bl	181c <memcpy@plt>
   5fff4:	add	r1, r7, sl
   5fff8:	add	r0, r5, #2
   5fffc:	mov	r2, r9
   60000:	bl	181c <memcpy@plt>
   60004:	add	r4, r4, #2
   60008:	add	r7, r7, r6
   6000c:	add	r5, r5, #4
   60010:	cmp	r8, r4
   60014:	bne	5ffe4 <GetDataLinear+0x270>
   60018:	b	60094 <GetDataLinear+0x320>
   6001c:	add	r1, r4, r0, lsl #1
   60020:	cmp	r3, #0
   60024:	beq	601c8 <GetDataLinear+0x454>
   60028:	cmp	r8, #1
   6002c:	blt	601dc <GetDataLinear+0x468>
   60030:	and	r0, r8, #1
   60034:	mov	r6, #0
   60038:	cmp	r8, #1
   6003c:	mov	r4, #0
   60040:	beq	600a0 <GetDataLinear+0x32c>
   60044:	sub	r8, r8, r0
   60048:	lsl	r6, r3, #2
   6004c:	lsl	sl, r3, #1
   60050:	mov	r4, #0
   60054:	mov	r7, r1
   60058:	str	r0, [sp, #4]
   6005c:	str	r1, [sp, #8]
   60060:	mov	r0, r5
   60064:	mov	r1, r7
   60068:	mov	r2, r9
   6006c:	bl	181c <memcpy@plt>
   60070:	add	r1, r7, sl
   60074:	add	r0, r5, #2
   60078:	mov	r2, r9
   6007c:	bl	181c <memcpy@plt>
   60080:	add	r4, r4, #2
   60084:	add	r7, r7, r6
   60088:	add	r5, r5, #4
   6008c:	cmp	r8, r4
   60090:	bne	60060 <GetDataLinear+0x2ec>
   60094:	ldr	r3, [fp, #12]
   60098:	ldmib	sp, {r0, r1}
   6009c:	mov	r6, #0
   600a0:	cmp	r0, #0
   600a4:	beq	602f4 <GetDataLinear+0x580>
   600a8:	mul	r0, r4, r3
   600ac:	add	r1, r1, r0, lsl #1
   600b0:	b	602e8 <GetDataLinear+0x574>
   600b4:	add	r1, r4, r0, lsl #2
   600b8:	cmp	r3, #0
   600bc:	beq	601c8 <GetDataLinear+0x454>
   600c0:	cmp	r8, #1
   600c4:	blt	601dc <GetDataLinear+0x468>
   600c8:	and	r0, r8, #1
   600cc:	mov	r6, #0
   600d0:	cmp	r8, #1
   600d4:	mov	r4, #0
   600d8:	beq	601b4 <GetDataLinear+0x440>
   600dc:	sub	r8, r8, r0
   600e0:	lsl	r6, r3, #3
   600e4:	lsl	sl, r3, #2
   600e8:	mov	r4, #0
   600ec:	mov	r7, r1
   600f0:	str	r0, [sp, #4]
   600f4:	str	r1, [sp, #8]
   600f8:	mov	r0, r5
   600fc:	mov	r1, r7
   60100:	mov	r2, r9
   60104:	bl	181c <memcpy@plt>
   60108:	add	r1, r7, sl
   6010c:	add	r0, r5, #4
   60110:	mov	r2, r9
   60114:	bl	181c <memcpy@plt>
   60118:	add	r4, r4, #2
   6011c:	add	r7, r7, r6
   60120:	add	r5, r5, #8
   60124:	cmp	r8, r4
   60128:	bne	600f8 <GetDataLinear+0x384>
   6012c:	b	601a8 <GetDataLinear+0x434>
   60130:	add	r1, r4, r0, lsl #2
   60134:	cmp	r3, #0
   60138:	beq	601c8 <GetDataLinear+0x454>
   6013c:	cmp	r8, #1
   60140:	blt	601dc <GetDataLinear+0x468>
   60144:	and	r0, r8, #1
   60148:	mov	r6, #0
   6014c:	cmp	r8, #1
   60150:	mov	r4, #0
   60154:	beq	601b4 <GetDataLinear+0x440>
   60158:	sub	r8, r8, r0
   6015c:	lsl	r6, r3, #3
   60160:	lsl	sl, r3, #2
   60164:	mov	r4, #0
   60168:	mov	r7, r1
   6016c:	str	r0, [sp, #4]
   60170:	str	r1, [sp, #8]
   60174:	mov	r0, r5
   60178:	mov	r1, r7
   6017c:	mov	r2, r9
   60180:	bl	181c <memcpy@plt>
   60184:	add	r1, r7, sl
   60188:	add	r0, r5, #4
   6018c:	mov	r2, r9
   60190:	bl	181c <memcpy@plt>
   60194:	add	r4, r4, #2
   60198:	add	r7, r7, r6
   6019c:	add	r5, r5, #8
   601a0:	cmp	r8, r4
   601a4:	bne	60174 <GetDataLinear+0x400>
   601a8:	ldr	r3, [fp, #12]
   601ac:	ldmib	sp, {r0, r1}
   601b0:	mov	r6, #0
   601b4:	cmp	r0, #0
   601b8:	beq	602f4 <GetDataLinear+0x580>
   601bc:	mul	r0, r4, r3
   601c0:	add	r1, r1, r0, lsl #2
   601c4:	b	602e8 <GetDataLinear+0x574>
   601c8:	mul	r2, r9, r8
   601cc:	mov	r0, r5
   601d0:	bl	181c <memcpy@plt>
   601d4:	mov	r6, #0
   601d8:	b	602f4 <GetDataLinear+0x580>
   601dc:	mov	r6, #0
   601e0:	b	602f4 <GetDataLinear+0x580>
   601e4:	add	r7, r4, r0, lsl #3
   601e8:	cmp	r3, #0
   601ec:	beq	60264 <GetDataLinear+0x4f0>
   601f0:	mov	r6, #0
   601f4:	cmp	r8, #1
   601f8:	blt	602f4 <GetDataLinear+0x580>
   601fc:	lsl	r4, r3, #3
   60200:	mov	r0, r5
   60204:	mov	r1, r7
   60208:	mov	r2, r9
   6020c:	bl	181c <memcpy@plt>
   60210:	add	r7, r7, r4
   60214:	subs	r8, r8, #1
   60218:	add	r5, r5, #8
   6021c:	bne	60200 <GetDataLinear+0x48c>
   60220:	b	602f4 <GetDataLinear+0x580>
   60224:	add	r7, r4, r0, lsl #3
   60228:	cmp	r3, #0
   6022c:	beq	60264 <GetDataLinear+0x4f0>
   60230:	mov	r6, #0
   60234:	cmp	r8, #1
   60238:	blt	602f4 <GetDataLinear+0x580>
   6023c:	lsl	r4, r3, #3
   60240:	mov	r0, r5
   60244:	mov	r1, r7
   60248:	mov	r2, r9
   6024c:	bl	181c <memcpy@plt>
   60250:	add	r7, r7, r4
   60254:	subs	r8, r8, #1
   60258:	add	r5, r5, #8
   6025c:	bne	60240 <GetDataLinear+0x4cc>
   60260:	b	602f4 <GetDataLinear+0x580>
   60264:	mul	r2, r9, r8
   60268:	mov	r0, r5
   6026c:	mov	r1, r7
   60270:	b	601d0 <GetDataLinear+0x45c>
   60274:	sub	r8, r2, r8
   60278:	lsl	sl, r3, #1
   6027c:	mov	r6, #0
   60280:	mov	r7, r1
   60284:	str	r2, [sp, #4]
   60288:	str	r1, [sp, #8]
   6028c:	sub	r4, r5, r6
   60290:	mov	r1, r7
   60294:	mov	r2, r9
   60298:	mov	r0, r4
   6029c:	bl	181c <memcpy@plt>
   602a0:	ldr	r0, [fp, #12]
   602a4:	mov	r2, r9
   602a8:	add	r1, r7, r0
   602ac:	add	r0, r4, #1
   602b0:	bl	181c <memcpy@plt>
   602b4:	sub	r6, r6, #2
   602b8:	add	r7, r7, sl
   602bc:	cmp	r8, r6
   602c0:	bne	6028c <GetDataLinear+0x518>
   602c4:	ldr	r3, [fp, #12]
   602c8:	ldr	r1, [sp, #8]
   602cc:	ldr	r2, [sp, #4]
   602d0:	sub	r5, r5, r6
   602d4:	rsb	r0, r6, #0
   602d8:	mov	r6, #0
   602dc:	cmp	r2, #0
   602e0:	beq	602f4 <GetDataLinear+0x580>
   602e4:	mla	r1, r0, r3, r1
   602e8:	mov	r0, r5
   602ec:	mov	r2, r9
   602f0:	bl	181c <memcpy@plt>
   602f4:	mov	r0, r6
   602f8:	sub	sp, fp, #28
   602fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00060300 <Mat_VarWrite5>:
   60300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   60304:	add	fp, sp, #28
   60308:	sub	sp, sp, #52	; 0x34
   6030c:	sub	sp, sp, #4096	; 0x1000
   60310:	mov	r4, r0
   60314:	mov	r0, #6
   60318:	mov	r5, r1
   6031c:	mov	r1, #14
   60320:	mvn	r6, #0
   60324:	str	r0, [fp, #-40]	; 0xffffffd8
   60328:	mov	r0, #5
   6032c:	cmp	r4, #0
   60330:	str	r1, [fp, #-56]	; 0xffffffc8
   60334:	str	r0, [fp, #-44]	; 0xffffffd4
   60338:	mov	r0, #8
   6033c:	str	r0, [fp, #-48]	; 0xffffffd0
   60340:	mov	r0, #0
   60344:	str	r0, [fp, #-52]	; 0xffffffcc
   60348:	str	r0, [fp, #-64]	; 0xffffffc0
   6034c:	beq	60700 <Mat_VarWrite5+0x400>
   60350:	ldr	r0, [r4]
   60354:	mov	r7, r2
   60358:	mov	r1, #0
   6035c:	mov	r2, #2
   60360:	bl	1a2c <fseek@plt>
   60364:	cmp	r5, #0
   60368:	beq	60700 <Mat_VarWrite5+0x400>
   6036c:	ldr	r0, [r5, #36]	; 0x24
   60370:	cmp	r0, #0
   60374:	beq	60700 <Mat_VarWrite5+0x400>
   60378:	cmp	r7, #1
   6037c:	beq	60560 <Mat_VarWrite5+0x260>
   60380:	mov	r8, #0
   60384:	cmp	r7, #0
   60388:	bne	60690 <Mat_VarWrite5+0x390>
   6038c:	ldr	r3, [r4]
   60390:	sub	r0, fp, #56	; 0x38
   60394:	mov	r1, #4
   60398:	mov	r2, #1
   6039c:	bl	18ac <fwrite@plt>
   603a0:	ldr	r3, [r4]
   603a4:	sub	r0, fp, #52	; 0x34
   603a8:	mov	r1, #4
   603ac:	mov	r2, #1
   603b0:	bl	18ac <fwrite@plt>
   603b4:	ldr	r0, [r4]
   603b8:	bl	1840 <ftell@plt>
   603bc:	mov	r8, r0
   603c0:	ldr	r0, [r5, #16]
   603c4:	ldr	r2, [r5, #20]
   603c8:	uxtb	r1, r0
   603cc:	cmp	r2, #0
   603d0:	str	r1, [fp, #-36]	; 0xffffffdc
   603d4:	orrne	r1, r1, #2048	; 0x800
   603d8:	strne	r1, [fp, #-36]	; 0xffffffdc
   603dc:	ldr	r2, [r5, #24]
   603e0:	cmp	r2, #0
   603e4:	orrne	r1, r1, #1024	; 0x400
   603e8:	strne	r1, [fp, #-36]	; 0xffffffdc
   603ec:	ldr	r2, [r5, #28]
   603f0:	cmp	r2, #0
   603f4:	orrne	r1, r1, #512	; 0x200
   603f8:	strne	r1, [fp, #-36]	; 0xffffffdc
   603fc:	cmp	r0, #5
   60400:	bne	60410 <Mat_VarWrite5+0x110>
   60404:	ldr	r0, [r5, #40]	; 0x28
   60408:	ldr	r0, [r0]
   6040c:	str	r0, [fp, #-64]	; 0xffffffc0
   60410:	ldr	r3, [r4]
   60414:	sub	r0, fp, #40	; 0x28
   60418:	mov	r1, #4
   6041c:	mov	r2, #1
   60420:	bl	18ac <fwrite@plt>
   60424:	ldr	r3, [r4]
   60428:	sub	r0, fp, #48	; 0x30
   6042c:	mov	r1, #4
   60430:	mov	r2, #1
   60434:	bl	18ac <fwrite@plt>
   60438:	ldr	r3, [r4]
   6043c:	sub	r0, fp, #36	; 0x24
   60440:	mov	r1, #4
   60444:	mov	r2, #1
   60448:	bl	18ac <fwrite@plt>
   6044c:	ldr	r3, [r4]
   60450:	sub	r0, fp, #64	; 0x40
   60454:	mov	r1, #4
   60458:	mov	r2, #1
   6045c:	bl	18ac <fwrite@plt>
   60460:	ldr	r0, [r5, #4]
   60464:	mov	r1, #4
   60468:	mov	r2, #1
   6046c:	lsl	r0, r0, #2
   60470:	str	r0, [fp, #-60]	; 0xffffffc4
   60474:	sub	r0, fp, #44	; 0x2c
   60478:	ldr	r3, [r4]
   6047c:	bl	18ac <fwrite@plt>
   60480:	ldr	r3, [r4]
   60484:	sub	r0, fp, #60	; 0x3c
   60488:	mov	r1, #4
   6048c:	mov	r2, #1
   60490:	bl	18ac <fwrite@plt>
   60494:	ldr	r0, [r5, #4]
   60498:	cmp	r0, #1
   6049c:	blt	604d8 <Mat_VarWrite5+0x1d8>
   604a0:	mov	r7, #0
   604a4:	add	r6, sp, #2064	; 0x810
   604a8:	ldr	r0, [r5, #32]
   604ac:	mov	r1, #4
   604b0:	mov	r2, #1
   604b4:	ldr	r0, [r0, r7, lsl #2]
   604b8:	str	r0, [sp, #2064]	; 0x810
   604bc:	mov	r0, r6
   604c0:	ldr	r3, [r4]
   604c4:	bl	18ac <fwrite@plt>
   604c8:	ldr	r0, [r5, #4]
   604cc:	add	r7, r7, #1
   604d0:	cmp	r7, r0
   604d4:	blt	604a8 <Mat_VarWrite5+0x1a8>
   604d8:	tst	r0, #1
   604dc:	beq	604f4 <Mat_VarWrite5+0x1f4>
   604e0:	ldr	r3, [r4]
   604e4:	sub	r0, fp, #52	; 0x34
   604e8:	mov	r1, #4
   604ec:	mov	r2, #1
   604f0:	bl	18ac <fwrite@plt>
   604f4:	ldr	r0, [r5, #36]	; 0x24
   604f8:	bl	1954 <strlen@plt>
   604fc:	mov	r6, r0
   60500:	cmp	r0, #4
   60504:	bhi	605d0 <Mat_VarWrite5+0x2d0>
   60508:	mov	r0, #1
   6050c:	mov	r1, #4
   60510:	mov	r2, #1
   60514:	orr	r0, r0, r6, lsl #16
   60518:	str	r0, [sp, #2064]	; 0x810
   6051c:	add	r0, sp, #2064	; 0x810
   60520:	ldr	r3, [r4]
   60524:	bl	18ac <fwrite@plt>
   60528:	ldr	r0, [r5, #36]	; 0x24
   6052c:	ldr	r3, [r4]
   60530:	mov	r1, #1
   60534:	mov	r2, r6
   60538:	bl	18ac <fwrite@plt>
   6053c:	cmp	r6, #4
   60540:	beq	60648 <Mat_VarWrite5+0x348>
   60544:	ldr	r1, [r4]
   60548:	mov	r0, #0
   6054c:	bl	19e4 <fputc@plt>
   60550:	add	r6, r6, #1
   60554:	cmp	r6, #4
   60558:	blt	60544 <Mat_VarWrite5+0x244>
   6055c:	b	60648 <Mat_VarWrite5+0x348>
   60560:	add	r9, sp, #16
   60564:	mov	r1, #0
   60568:	mov	r2, #2048	; 0x800
   6056c:	mov	r0, r9
   60570:	bl	1990 <memset@plt>
   60574:	mov	r0, #1
   60578:	mov	r1, #56	; 0x38
   6057c:	bl	1798 <calloc@plt>
   60580:	cmp	r0, #0
   60584:	beq	60700 <Mat_VarWrite5+0x400>
   60588:	ldr	r2, [pc, #1620]	; 60be4 <Mat_VarWrite5+0x8e4>
   6058c:	mvn	r1, #0
   60590:	mov	r3, #56	; 0x38
   60594:	mov	r7, r0
   60598:	add	r2, pc, r2
   6059c:	bl	18dc <deflateInit_@plt>
   605a0:	cmp	r0, #0
   605a4:	beq	6070c <Mat_VarWrite5+0x40c>
   605a8:	mov	r8, r0
   605ac:	mov	r0, r7
   605b0:	bl	1804 <free@plt>
   605b4:	mov	r0, r8
   605b8:	bl	1888 <zError@plt>
   605bc:	mov	r1, r0
   605c0:	ldr	r0, [pc, #1568]	; 60be8 <Mat_VarWrite5+0x8e8>
   605c4:	add	r0, pc, r0
   605c8:	bl	19b4 <Mat_Critical@plt>
   605cc:	b	60700 <Mat_VarWrite5+0x400>
   605d0:	mov	r0, #1
   605d4:	str	r6, [sp, #16]
   605d8:	mov	r1, #4
   605dc:	mov	r2, #1
   605e0:	str	r0, [sp, #2064]	; 0x810
   605e4:	add	r0, sp, #2064	; 0x810
   605e8:	ldr	r3, [r4]
   605ec:	bl	18ac <fwrite@plt>
   605f0:	ldr	r3, [r4]
   605f4:	add	r0, sp, #16
   605f8:	mov	r1, #4
   605fc:	mov	r2, #1
   60600:	bl	18ac <fwrite@plt>
   60604:	ldr	r6, [sp, #16]
   60608:	ldr	r0, [r5, #36]	; 0x24
   6060c:	ldr	r3, [r4]
   60610:	mov	r1, #1
   60614:	mov	r2, r6
   60618:	bl	18ac <fwrite@plt>
   6061c:	asr	r0, r6, #31
   60620:	add	r0, r6, r0, lsr #29
   60624:	bic	r0, r0, #7
   60628:	subs	r0, r6, r0
   6062c:	beq	60648 <Mat_VarWrite5+0x348>
   60630:	sub	r6, r0, #8
   60634:	ldr	r1, [r4]
   60638:	mov	r0, #0
   6063c:	bl	19e4 <fputc@plt>
   60640:	adds	r6, r6, #1
   60644:	bcc	60634 <Mat_VarWrite5+0x334>
   60648:	ldr	r0, [r5, #52]	; 0x34
   6064c:	cmp	r0, #0
   60650:	beq	6067c <Mat_VarWrite5+0x37c>
   60654:	ldr	r0, [r4]
   60658:	bl	1840 <ftell@plt>
   6065c:	ldr	r1, [r5, #52]	; 0x34
   60660:	cmn	r0, #1
   60664:	str	r0, [r1]
   60668:	bne	60684 <Mat_VarWrite5+0x384>
   6066c:	ldr	r0, [pc, #1388]	; 60be0 <Mat_VarWrite5+0x8e0>
   60670:	add	r0, pc, r0
   60674:	bl	19b4 <Mat_Critical@plt>
   60678:	b	60684 <Mat_VarWrite5+0x384>
   6067c:	mov	r0, #0
   60680:	str	r0, [r5, #16]
   60684:	mov	r0, r4
   60688:	mov	r1, r5
   6068c:	bl	60bf4 <WriteType>
   60690:	ldr	r0, [r4]
   60694:	bl	1840 <ftell@plt>
   60698:	cmn	r8, #1
   6069c:	movne	r5, r0
   606a0:	cmnne	r0, #1
   606a4:	bne	606bc <Mat_VarWrite5+0x3bc>
   606a8:	ldr	r0, [pc, #1344]	; 60bf0 <Mat_VarWrite5+0x8f0>
   606ac:	add	r0, pc, r0
   606b0:	bl	19b4 <Mat_Critical@plt>
   606b4:	mov	r6, #0
   606b8:	b	60700 <Mat_VarWrite5+0x400>
   606bc:	sub	r0, r5, r8
   606c0:	mvn	r1, #3
   606c4:	mov	r2, #1
   606c8:	str	r0, [fp, #-60]	; 0xffffffc4
   606cc:	sub	r1, r1, r0
   606d0:	ldr	r0, [r4]
   606d4:	bl	1a2c <fseek@plt>
   606d8:	ldr	r3, [r4]
   606dc:	sub	r0, fp, #60	; 0x3c
   606e0:	mov	r1, #4
   606e4:	mov	r2, #1
   606e8:	bl	18ac <fwrite@plt>
   606ec:	ldr	r0, [r4]
   606f0:	mov	r1, r5
   606f4:	mov	r2, #0
   606f8:	mov	r6, #0
   606fc:	bl	1a2c <fseek@plt>
   60700:	mov	r0, r6
   60704:	sub	sp, fp, #28
   60708:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6070c:	mov	r0, #15
   60710:	mov	r1, #4
   60714:	mov	r2, #1
   60718:	str	r0, [fp, #-56]	; 0xffffffc8
   6071c:	sub	r0, fp, #56	; 0x38
   60720:	ldr	r3, [r4]
   60724:	bl	18ac <fwrite@plt>
   60728:	ldr	r3, [r4]
   6072c:	sub	r0, fp, #52	; 0x34
   60730:	mov	r1, #4
   60734:	mov	r2, #1
   60738:	bl	18ac <fwrite@plt>
   6073c:	ldr	r0, [r4]
   60740:	bl	1840 <ftell@plt>
   60744:	str	r0, [sp, #12]
   60748:	ldr	r0, [r5, #16]
   6074c:	ldr	r1, [r5, #20]
   60750:	uxtb	r8, r0
   60754:	cmp	r1, #0
   60758:	str	r8, [fp, #-36]	; 0xffffffdc
   6075c:	orrne	r8, r8, #2048	; 0x800
   60760:	strne	r8, [fp, #-36]	; 0xffffffdc
   60764:	ldr	r1, [r5, #24]
   60768:	cmp	r1, #0
   6076c:	orrne	r8, r8, #1024	; 0x400
   60770:	strne	r8, [fp, #-36]	; 0xffffffdc
   60774:	ldr	r1, [r5, #28]
   60778:	cmp	r1, #0
   6077c:	mov	r1, #0
   60780:	orrne	r8, r8, #512	; 0x200
   60784:	strne	r8, [fp, #-36]	; 0xffffffdc
   60788:	cmp	r0, #5
   6078c:	bne	6079c <Mat_VarWrite5+0x49c>
   60790:	ldr	r0, [r5, #40]	; 0x28
   60794:	ldr	r1, [r0]
   60798:	str	r1, [fp, #-64]	; 0xffffffc0
   6079c:	mov	r0, #14
   607a0:	mov	r6, #24
   607a4:	str	r1, [sp, #8]
   607a8:	str	r0, [sp, #16]
   607ac:	ldr	r0, [r5, #36]	; 0x24
   607b0:	cmp	r0, #0
   607b4:	beq	607d4 <Mat_VarWrite5+0x4d4>
   607b8:	bl	1954 <strlen@plt>
   607bc:	cmp	r0, #5
   607c0:	bcc	607d4 <Mat_VarWrite5+0x4d4>
   607c4:	ands	r1, r0, #7
   607c8:	sub	r1, r0, r1
   607cc:	addne	r0, r1, #8
   607d0:	add	r6, r0, #24
   607d4:	mov	r0, r5
   607d8:	bl	64850 <GetTypeBufSize>
   607dc:	add	r0, r0, r6
   607e0:	str	r9, [r7]
   607e4:	mov	sl, #2048	; 0x800
   607e8:	str	r0, [sp, #20]
   607ec:	mov	r0, #8
   607f0:	str	r0, [r7, #4]
   607f4:	orr	r0, r9, #4
   607f8:	add	r9, sp, #2064	; 0x810
   607fc:	str	r0, [sp, #4]
   60800:	mov	r0, r7
   60804:	mov	r1, #0
   60808:	str	r9, [r7, #12]
   6080c:	str	sl, [r7, #16]
   60810:	bl	1894 <deflate@plt>
   60814:	ldr	r0, [r7, #16]
   60818:	ldr	r3, [r4]
   6081c:	mov	r1, #1
   60820:	rsb	r2, r0, #2048	; 0x800
   60824:	mov	r0, r9
   60828:	bl	18ac <fwrite@plt>
   6082c:	ldr	r0, [r7, #16]
   60830:	cmp	r0, #0
   60834:	beq	60800 <Mat_VarWrite5+0x500>
   60838:	ldr	r0, [sp, #8]
   6083c:	mov	r1, #5
   60840:	str	r0, [sp, #28]
   60844:	mov	r0, #8
   60848:	str	r8, [sp, #24]
   6084c:	str	r0, [sp, #20]
   60850:	mov	r0, #6
   60854:	str	r0, [sp, #16]
   60858:	ldr	r0, [r5, #4]
   6085c:	str	r1, [sp, #32]
   60860:	lsl	r1, r0, #2
   60864:	cmp	r0, #1
   60868:	str	r1, [sp, #36]	; 0x24
   6086c:	str	r1, [fp, #-60]	; 0xffffffc4
   60870:	blt	608f8 <Mat_VarWrite5+0x5f8>
   60874:	ldr	r6, [r5, #32]
   60878:	mov	r8, #0
   6087c:	cmp	r0, #4
   60880:	add	ip, sp, #16
   60884:	bcc	60944 <Mat_VarWrite5+0x644>
   60888:	add	r1, r6, r0, lsl #2
   6088c:	add	r3, ip, #24
   60890:	cmp	r3, r1
   60894:	addcc	r1, ip, r0, lsl #2
   60898:	addcc	r1, r1, #24
   6089c:	cmpcc	r6, r1
   608a0:	bcc	60944 <Mat_VarWrite5+0x644>
   608a4:	bic	r8, r0, #3
   608a8:	mov	r2, #1
   608ac:	str	r6, [sp, #8]
   608b0:	subs	r1, r8, #4
   608b4:	add	r1, r2, r1, lsr #2
   608b8:	and	r2, r1, #1
   608bc:	str	r2, [sp]
   608c0:	beq	6090c <Mat_VarWrite5+0x60c>
   608c4:	sub	r2, r1, r2
   608c8:	mov	r1, #0
   608cc:	mov	sl, #32
   608d0:	add	lr, r6, #16
   608d4:	vld1.32	{d16-d17}, [r6], sl
   608d8:	add	ip, r3, #16
   608dc:	subs	r2, r2, #2
   608e0:	add	r1, r1, #8
   608e4:	vst1.32	{d16-d17}, [r3], sl
   608e8:	vld1.32	{d16-d17}, [lr]
   608ec:	vst1.64	{d16-d17}, [ip]
   608f0:	bne	608d0 <Mat_VarWrite5+0x5d0>
   608f4:	b	60910 <Mat_VarWrite5+0x610>
   608f8:	mov	r2, #0
   608fc:	add	ip, sp, #16
   60900:	tst	r0, #1
   60904:	bne	609a8 <Mat_VarWrite5+0x6a8>
   60908:	b	609b8 <Mat_VarWrite5+0x6b8>
   6090c:	mov	r1, #0
   60910:	ldr	r2, [sp]
   60914:	ldr	r6, [sp, #8]
   60918:	add	ip, sp, #16
   6091c:	cmp	r2, #0
   60920:	beq	60938 <Mat_VarWrite5+0x638>
   60924:	add	r2, r6, r1, lsl #2
   60928:	add	r1, ip, r1, lsl #2
   6092c:	vld1.32	{d16-d17}, [r2]
   60930:	add	r1, r1, #24
   60934:	vst1.64	{d16-d17}, [r1]
   60938:	cmp	r0, r8
   6093c:	mov	r2, r0
   60940:	beq	609a0 <Mat_VarWrite5+0x6a0>
   60944:	tst	r0, #1
   60948:	mov	r1, r8
   6094c:	beq	60960 <Mat_VarWrite5+0x660>
   60950:	ldr	r1, [r6, r8, lsl #2]
   60954:	add	r2, ip, r8, lsl #2
   60958:	str	r1, [r2, #24]
   6095c:	orr	r1, r8, #1
   60960:	orr	r2, r8, #1
   60964:	cmp	r0, r2
   60968:	mov	r2, r0
   6096c:	beq	609a0 <Mat_VarWrite5+0x6a0>
   60970:	add	r2, r6, r1, lsl #2
   60974:	add	r2, r2, #4
   60978:	ldr	r6, [r2, #-4]
   6097c:	add	r3, ip, r1, lsl #2
   60980:	add	r1, r1, #2
   60984:	cmp	r0, r1
   60988:	str	r6, [r3, #24]
   6098c:	ldr	r6, [r2]
   60990:	add	r2, r2, #8
   60994:	str	r6, [r3, #28]
   60998:	bne	60978 <Mat_VarWrite5+0x678>
   6099c:	mov	r2, r0
   609a0:	tst	r0, #1
   609a4:	beq	609b8 <Mat_VarWrite5+0x6b8>
   609a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   609ac:	add	r0, ip, r2, lsl #2
   609b0:	add	r2, r2, #1
   609b4:	str	r1, [r0, #24]
   609b8:	add	r0, ip, #8
   609bc:	mov	r6, #2048	; 0x800
   609c0:	str	ip, [r7]
   609c4:	str	r0, [sp, #8]
   609c8:	mov	r0, #24
   609cc:	add	r0, r0, r2, lsl #2
   609d0:	str	r0, [r7, #4]
   609d4:	mov	r0, r7
   609d8:	mov	r1, #0
   609dc:	str	r9, [r7, #12]
   609e0:	str	r6, [r7, #16]
   609e4:	bl	1894 <deflate@plt>
   609e8:	ldr	r0, [r7, #16]
   609ec:	ldr	r3, [r4]
   609f0:	mov	r1, #1
   609f4:	rsb	r2, r0, #2048	; 0x800
   609f8:	mov	r0, r9
   609fc:	bl	18ac <fwrite@plt>
   60a00:	ldr	r0, [r7, #16]
   60a04:	cmp	r0, #0
   60a08:	beq	609d4 <Mat_VarWrite5+0x6d4>
   60a0c:	ldr	r8, [r5, #36]	; 0x24
   60a10:	mov	r0, r8
   60a14:	bl	1954 <strlen@plt>
   60a18:	mov	sl, r0
   60a1c:	cmp	r0, #4
   60a20:	bhi	60a98 <Mat_VarWrite5+0x798>
   60a24:	mov	r0, #0
   60a28:	sxth	r2, sl
   60a2c:	mov	r1, r8
   60a30:	str	r0, [sp, #20]
   60a34:	mov	r0, #1
   60a38:	orr	r0, r0, sl, lsl #16
   60a3c:	str	r0, [sp, #16]
   60a40:	ldr	r0, [sp, #4]
   60a44:	bl	181c <memcpy@plt>
   60a48:	add	r1, sp, #16
   60a4c:	mov	r6, #2048	; 0x800
   60a50:	mov	r0, #8
   60a54:	str	r1, [r7]
   60a58:	str	r0, [r7, #4]
   60a5c:	mov	r0, r7
   60a60:	mov	r1, #0
   60a64:	str	r9, [r7, #12]
   60a68:	str	r6, [r7, #16]
   60a6c:	bl	1894 <deflate@plt>
   60a70:	ldr	r0, [r7, #16]
   60a74:	ldr	r3, [r4]
   60a78:	mov	r1, #1
   60a7c:	rsb	r2, r0, #2048	; 0x800
   60a80:	mov	r0, r9
   60a84:	bl	18ac <fwrite@plt>
   60a88:	ldr	r0, [r7, #16]
   60a8c:	cmp	r0, #0
   60a90:	beq	60a5c <Mat_VarWrite5+0x75c>
   60a94:	b	60b28 <Mat_VarWrite5+0x828>
   60a98:	ldr	r6, [sp, #8]
   60a9c:	mov	r1, #0
   60aa0:	movw	r2, #2040	; 0x7f8
   60aa4:	mov	r0, r6
   60aa8:	bl	1990 <memset@plt>
   60aac:	mov	r0, #1
   60ab0:	str	sl, [sp, #20]
   60ab4:	mov	r1, r8
   60ab8:	mov	r2, sl
   60abc:	str	r0, [sp, #16]
   60ac0:	mov	r0, r6
   60ac4:	bl	181c <memcpy@plt>
   60ac8:	asr	r0, sl, #31
   60acc:	mov	r6, #2048	; 0x800
   60ad0:	add	r0, sl, r0, lsr #29
   60ad4:	bic	r0, r0, #7
   60ad8:	subs	r1, sl, r0
   60adc:	add	r1, sp, #16
   60ae0:	addne	sl, r0, #8
   60ae4:	str	r1, [r7]
   60ae8:	add	r0, sl, #8
   60aec:	str	r0, [r7, #4]
   60af0:	mov	r0, r7
   60af4:	mov	r1, #0
   60af8:	str	r9, [r7, #12]
   60afc:	str	r6, [r7, #16]
   60b00:	bl	1894 <deflate@plt>
   60b04:	ldr	r0, [r7, #16]
   60b08:	ldr	r3, [r4]
   60b0c:	mov	r1, #1
   60b10:	rsb	r2, r0, #2048	; 0x800
   60b14:	mov	r0, r9
   60b18:	bl	18ac <fwrite@plt>
   60b1c:	ldr	r0, [r7, #16]
   60b20:	cmp	r0, #0
   60b24:	beq	60af0 <Mat_VarWrite5+0x7f0>
   60b28:	ldr	r0, [r5, #52]	; 0x34
   60b2c:	cmp	r0, #0
   60b30:	beq	60b5c <Mat_VarWrite5+0x85c>
   60b34:	ldr	r0, [r4]
   60b38:	bl	1840 <ftell@plt>
   60b3c:	ldr	r1, [r5, #52]	; 0x34
   60b40:	cmn	r0, #1
   60b44:	str	r0, [r1]
   60b48:	bne	60b64 <Mat_VarWrite5+0x864>
   60b4c:	ldr	r0, [pc, #152]	; 60bec <Mat_VarWrite5+0x8ec>
   60b50:	add	r0, pc, r0
   60b54:	bl	19b4 <Mat_Critical@plt>
   60b58:	b	60b64 <Mat_VarWrite5+0x864>
   60b5c:	mov	r0, #0
   60b60:	str	r0, [r5, #16]
   60b64:	mov	r0, r4
   60b68:	mov	r1, r5
   60b6c:	mov	r2, r7
   60b70:	bl	61c20 <WriteCompressedType>
   60b74:	mov	r0, #0
   60b78:	mov	r8, #2048	; 0x800
   60b7c:	str	r0, [r7]
   60b80:	str	r0, [r7, #4]
   60b84:	mov	r0, r7
   60b88:	mov	r1, #4
   60b8c:	str	r9, [r7, #12]
   60b90:	str	r8, [r7, #16]
   60b94:	bl	1894 <deflate@plt>
   60b98:	mov	r5, r0
   60b9c:	ldr	r0, [r7, #16]
   60ba0:	ldr	r3, [r4]
   60ba4:	mov	r1, #1
   60ba8:	rsb	r2, r0, #2048	; 0x800
   60bac:	mov	r0, r9
   60bb0:	bl	18ac <fwrite@plt>
   60bb4:	cmp	r5, #1
   60bb8:	beq	60bc8 <Mat_VarWrite5+0x8c8>
   60bbc:	ldr	r0, [r7, #16]
   60bc0:	cmp	r0, #0
   60bc4:	beq	60b84 <Mat_VarWrite5+0x884>
   60bc8:	mov	r0, r7
   60bcc:	bl	19c0 <deflateEnd@plt>
   60bd0:	mov	r0, r7
   60bd4:	bl	1804 <free@plt>
   60bd8:	ldr	r8, [sp, #12]
   60bdc:	b	60690 <Mat_VarWrite5+0x390>
   60be0:	.word	0x0000b71c
   60be4:	.word	0x0000ba49
   60be8:	.word	0x0000ba24
   60bec:	.word	0x0000b23c
   60bf0:	.word	0x0000b6e0

00060bf4 <WriteType>:
   60bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   60bf8:	add	fp, sp, #28
   60bfc:	sub	sp, sp, #108	; 0x6c
   60c00:	mov	r6, r1
   60c04:	mov	r4, r0
   60c08:	mov	r0, #1
   60c0c:	add	r1, sp, #28
   60c10:	strh	r0, [sp, #38]	; 0x26
   60c14:	str	r0, [sp, #28]
   60c18:	mov	r0, r6
   60c1c:	bl	665f0 <SafeMulDims>
   60c20:	ldr	r0, [r6, #16]
   60c24:	sub	r1, r0, #6
   60c28:	cmp	r1, #10
   60c2c:	bcs	60ce0 <WriteType+0xec>
   60c30:	ldr	r0, [r6, #20]
   60c34:	ldr	r1, [r6, #40]	; 0x28
   60c38:	cmp	r0, #0
   60c3c:	beq	60d50 <WriteType+0x15c>
   60c40:	ldr	r5, [pc, #4040]	; 61c10 <WriteType+0x101c>
   60c44:	cmp	r1, #0
   60c48:	ldr	r3, [r6, #8]
   60c4c:	ldr	r2, [sp, #28]
   60c50:	mov	r0, r4
   60c54:	mov	r7, r6
   60c58:	add	r5, pc, r5
   60c5c:	movne	r5, r1
   60c60:	ldr	r1, [r5]
   60c64:	bl	647ac <WriteData>
   60c68:	asr	r1, r0, #31
   60c6c:	str	r0, [sp, #32]
   60c70:	add	r1, r0, r1, lsr #29
   60c74:	bic	r1, r1, #7
   60c78:	subs	r0, r0, r1
   60c7c:	beq	60c98 <WriteType+0xa4>
   60c80:	sub	r6, r0, #8
   60c84:	ldr	r1, [r4]
   60c88:	mov	r0, #0
   60c8c:	bl	19e4 <fputc@plt>
   60c90:	adds	r6, r6, #1
   60c94:	bcc	60c84 <WriteType+0x90>
   60c98:	ldr	r3, [r7, #8]
   60c9c:	ldr	r1, [r5, #4]
   60ca0:	ldr	r2, [sp, #28]
   60ca4:	mov	r0, r4
   60ca8:	bl	647ac <WriteData>
   60cac:	asr	r1, r0, #31
   60cb0:	str	r0, [sp, #32]
   60cb4:	add	r1, r0, r1, lsr #29
   60cb8:	bic	r1, r1, #7
   60cbc:	subs	r0, r0, r1
   60cc0:	beq	60d90 <WriteType+0x19c>
   60cc4:	sub	r5, r0, #8
   60cc8:	ldr	r1, [r4]
   60ccc:	mov	r0, #0
   60cd0:	bl	19e4 <fputc@plt>
   60cd4:	adds	r5, r5, #1
   60cd8:	bcc	60cc8 <WriteType+0xd4>
   60cdc:	b	60d90 <WriteType+0x19c>
   60ce0:	sub	r0, r0, #1
   60ce4:	cmp	r0, #4
   60ce8:	bhi	60d90 <WriteType+0x19c>
   60cec:	add	r1, pc, #4
   60cf0:	ldr	r0, [r1, r0, lsl #2]
   60cf4:	add	pc, r1, r0
   60cf8:	.word	0x00000014
   60cfc:	.word	0x000001b4
   60d00:	.word	0x00000098
   60d04:	.word	0x000000a0
   60d08:	.word	0x00000824
   60d0c:	ldr	r0, [r6]
   60d10:	cmp	r0, #0
   60d14:	beq	60d90 <WriteType+0x19c>
   60d18:	ldr	r9, [r6, #40]	; 0x28
   60d1c:	cmp	r9, #0
   60d20:	ldrne	r1, [r6, #12]
   60d24:	cmpne	r1, #0
   60d28:	beq	60d90 <WriteType+0x19c>
   60d2c:	udiv	r2, r0, r1
   60d30:	cmp	r1, r0
   60d34:	str	r2, [sp, #28]
   60d38:	bhi	60d90 <WriteType+0x19c>
   60d3c:	mov	r5, #0
   60d40:	mov	r7, #1
   60d44:	sub	sl, fp, #64	; 0x40
   60d48:	mov	r6, #0
   60d4c:	b	61774 <WriteType+0xb80>
   60d50:	ldr	r3, [r6, #8]
   60d54:	ldr	r2, [sp, #28]
   60d58:	mov	r0, r4
   60d5c:	bl	647ac <WriteData>
   60d60:	asr	r1, r0, #31
   60d64:	str	r0, [sp, #32]
   60d68:	add	r1, r0, r1, lsr #29
   60d6c:	bic	r1, r1, #7
   60d70:	subs	r0, r0, r1
   60d74:	beq	60d90 <WriteType+0x19c>
   60d78:	sub	r5, r0, #8
   60d7c:	ldr	r1, [r4]
   60d80:	mov	r0, #0
   60d84:	bl	19e4 <fputc@plt>
   60d88:	adds	r5, r5, #1
   60d8c:	bcc	60d7c <WriteType+0x188>
   60d90:	sub	sp, fp, #28
   60d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   60d98:	ldr	r0, [r6, #8]
   60d9c:	ldr	r5, [r6, #40]	; 0x28
   60da0:	ldr	r6, [sp, #28]
   60da4:	mov	r1, #0
   60da8:	str	r1, [fp, #-36]	; 0xffffffdc
   60dac:	cmp	r0, #16
   60db0:	str	r0, [fp, #-32]	; 0xffffffe0
   60db4:	bhi	61c00 <WriteType+0x100c>
   60db8:	add	r1, pc, #4
   60dbc:	ldr	r0, [r1, r0, lsl #2]
   60dc0:	add	pc, r1, r0
   60dc4:	.word	0x00000cf8
   60dc8:	.word	0x00000044
   60dcc:	.word	0x00000044
   60dd0:	.word	0x00000e3c
   60dd4:	.word	0x00000d34
   60dd8:	.word	0x00000e3c
   60ddc:	.word	0x00000e3c
   60de0:	.word	0x00000e3c
   60de4:	.word	0x00000e3c
   60de8:	.word	0x00000e3c
   60dec:	.word	0x00000e3c
   60df0:	.word	0x00000e3c
   60df4:	.word	0x00000e3c
   60df8:	.word	0x00000e3c
   60dfc:	.word	0x00000e3c
   60e00:	.word	0x00000e3c
   60e04:	.word	0x00000dbc
   60e08:	mov	r0, #4
   60e0c:	mov	r1, #4
   60e10:	mov	r2, #1
   60e14:	str	r0, [fp, #-32]	; 0xffffffe0
   60e18:	lsl	r0, r6, #1
   60e1c:	str	r0, [fp, #-36]	; 0xffffffdc
   60e20:	sub	r0, fp, #32
   60e24:	ldr	r3, [r4]
   60e28:	bl	18ac <fwrite@plt>
   60e2c:	ldr	r3, [r4]
   60e30:	sub	r0, fp, #36	; 0x24
   60e34:	mov	r1, #4
   60e38:	mov	r2, #1
   60e3c:	bl	18ac <fwrite@plt>
   60e40:	cmp	r5, #0
   60e44:	beq	61c00 <WriteType+0x100c>
   60e48:	cmp	r6, #1
   60e4c:	blt	60e78 <WriteType+0x284>
   60e50:	sub	r7, fp, #40	; 0x28
   60e54:	ldrb	r0, [r5], #1
   60e58:	mov	r1, #2
   60e5c:	mov	r2, #1
   60e60:	strh	r0, [fp, #-40]	; 0xffffffd8
   60e64:	mov	r0, r7
   60e68:	ldr	r3, [r4]
   60e6c:	bl	18ac <fwrite@plt>
   60e70:	subs	r6, r6, #1
   60e74:	bne	60e54 <WriteType+0x260>
   60e78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   60e7c:	asr	r1, r0, #31
   60e80:	add	r1, r0, r1, lsr #29
   60e84:	bic	r1, r1, #7
   60e88:	subs	r0, r0, r1
   60e8c:	beq	61c00 <WriteType+0x100c>
   60e90:	sub	r5, r0, #8
   60e94:	ldr	r1, [r4]
   60e98:	mov	r0, #0
   60e9c:	bl	19e4 <fputc@plt>
   60ea0:	adds	r5, r5, #1
   60ea4:	bcc	60e94 <WriteType+0x2a0>
   60ea8:	b	61c00 <WriteType+0x100c>
   60eac:	ldr	r0, [r6, #52]	; 0x34
   60eb0:	ldr	r9, [r0, #4]
   60eb4:	cmp	r9, #0
   60eb8:	beq	61648 <WriteType+0xa54>
   60ebc:	ldr	sl, [r6, #40]	; 0x28
   60ec0:	ldr	r8, [r0, #8]
   60ec4:	mov	r5, #0
   60ec8:	mov	r7, #0
   60ecc:	str	r6, [sp, #4]
   60ed0:	ldr	r0, [r8, r7, lsl #2]
   60ed4:	mov	r6, r5
   60ed8:	bl	1954 <strlen@plt>
   60edc:	cmp	r0, r5
   60ee0:	add	r7, r7, #1
   60ee4:	movhi	r5, r0
   60ee8:	cmp	r9, r7
   60eec:	bne	60ed0 <WriteType+0x2dc>
   60ef0:	cmp	r0, r6
   60ef4:	str	sl, [sp, #8]
   60ef8:	movhi	r6, r0
   60efc:	add	r0, r6, #1
   60f00:	mul	r0, r9, r0
   60f04:	add	r1, r0, r9
   60f08:	tst	r0, #7
   60f0c:	add	r5, r5, #1
   60f10:	mov	r0, r1
   60f14:	bne	60f04 <WriteType+0x310>
   60f18:	movw	r0, #5
   60f1c:	str	r5, [sp, #24]
   60f20:	mov	r1, #4
   60f24:	mov	r2, #1
   60f28:	movt	r0, #4
   60f2c:	str	r0, [sp, #16]
   60f30:	add	r0, sp, #16
   60f34:	ldr	r3, [r4]
   60f38:	bl	18ac <fwrite@plt>
   60f3c:	ldr	r3, [r4]
   60f40:	add	r0, sp, #24
   60f44:	mov	r1, #4
   60f48:	mov	r2, #1
   60f4c:	bl	18ac <fwrite@plt>
   60f50:	ldr	r3, [r4]
   60f54:	add	r0, sp, #38	; 0x26
   60f58:	mov	r1, #2
   60f5c:	mov	r2, #1
   60f60:	bl	18ac <fwrite@plt>
   60f64:	ldr	r1, [r4]
   60f68:	mov	r0, #0
   60f6c:	mov	r8, #0
   60f70:	bl	19e4 <fputc@plt>
   60f74:	ldr	r1, [r4]
   60f78:	mov	r0, #0
   60f7c:	bl	19e4 <fputc@plt>
   60f80:	ldr	r5, [sp, #24]
   60f84:	mov	r1, #4
   60f88:	mov	r2, #1
   60f8c:	mul	r0, r5, r9
   60f90:	str	r0, [sp, #32]
   60f94:	add	r0, sp, #32
   60f98:	ldr	r3, [r4]
   60f9c:	bl	18ac <fwrite@plt>
   60fa0:	mov	r0, r5
   60fa4:	mov	r1, #1
   60fa8:	str	r5, [sp, #12]
   60fac:	bl	1798 <calloc@plt>
   60fb0:	ldr	r6, [sp, #4]
   60fb4:	mov	sl, r0
   60fb8:	ldr	r0, [r6, #52]	; 0x34
   60fbc:	ldr	r0, [r0, #8]
   60fc0:	ldr	r5, [r0, r8, lsl #2]
   60fc4:	mov	r0, r5
   60fc8:	bl	1954 <strlen@plt>
   60fcc:	ldr	r3, [r4]
   60fd0:	mov	r7, r0
   60fd4:	mov	r0, r5
   60fd8:	mov	r1, #1
   60fdc:	mov	r2, r7
   60fe0:	bl	18ac <fwrite@plt>
   60fe4:	ldr	r0, [sp, #12]
   60fe8:	ldr	r3, [r4]
   60fec:	mov	r1, #1
   60ff0:	sub	r2, r0, r7
   60ff4:	mov	r0, sl
   60ff8:	bl	18ac <fwrite@plt>
   60ffc:	add	r8, r8, #1
   61000:	cmp	r9, r8
   61004:	bne	60fb8 <WriteType+0x3c4>
   61008:	mov	r0, sl
   6100c:	bl	1804 <free@plt>
   61010:	ldr	r1, [sp, #28]
   61014:	add	r0, sp, #20
   61018:	mov	r2, r9
   6101c:	bl	6664c <SafeMul>
   61020:	ldr	r0, [sp, #20]
   61024:	ldr	r7, [sp, #8]
   61028:	cmp	r0, #0
   6102c:	beq	60d90 <WriteType+0x19c>
   61030:	mov	r8, #0
   61034:	mov	r6, #1
   61038:	mov	r0, #6
   6103c:	mov	r1, #5
   61040:	mov	r2, #8
   61044:	mov	r3, #14
   61048:	mov	r9, #0
   6104c:	b	610b4 <WriteType+0x4c0>
   61050:	sub	r0, r5, sl
   61054:	mvn	r1, #3
   61058:	mov	r2, #1
   6105c:	str	r0, [fp, #-36]	; 0xffffffdc
   61060:	sub	r1, r1, r0
   61064:	ldr	r0, [r4]
   61068:	bl	1a2c <fseek@plt>
   6106c:	ldr	r3, [r4]
   61070:	sub	r0, fp, #36	; 0x24
   61074:	mov	r1, #4
   61078:	mov	r2, #1
   6107c:	bl	18ac <fwrite@plt>
   61080:	ldr	r0, [r4]
   61084:	mov	r1, r5
   61088:	mov	r2, #0
   6108c:	bl	1a2c <fseek@plt>
   61090:	ldr	r7, [sp, #8]
   61094:	ldr	r0, [sp, #20]
   61098:	add	r9, r9, #1
   6109c:	mov	r1, #5
   610a0:	mov	r2, #8
   610a4:	mov	r3, #14
   610a8:	cmp	r9, r0
   610ac:	mov	r0, #6
   610b0:	bcs	60d90 <WriteType+0x19c>
   610b4:	ldr	r5, [r7, r9, lsl #2]
   610b8:	str	r6, [sp, #64]	; 0x40
   610bc:	str	r0, [sp, #60]	; 0x3c
   610c0:	str	r1, [sp, #56]	; 0x38
   610c4:	str	r2, [sp, #52]	; 0x34
   610c8:	str	r8, [sp, #48]	; 0x30
   610cc:	str	r3, [sp, #44]	; 0x2c
   610d0:	str	r8, [sp, #40]	; 0x28
   610d4:	cmp	r5, #0
   610d8:	beq	612cc <WriteType+0x6d8>
   610dc:	ldr	r3, [r4]
   610e0:	add	r0, sp, #44	; 0x2c
   610e4:	mov	r1, #4
   610e8:	mov	r2, #1
   610ec:	bl	18ac <fwrite@plt>
   610f0:	ldr	r3, [r4]
   610f4:	add	r0, sp, #48	; 0x30
   610f8:	mov	r1, #4
   610fc:	mov	r2, #1
   61100:	bl	18ac <fwrite@plt>
   61104:	ldr	r0, [r5, #16]
   61108:	cmp	r0, #0
   6110c:	beq	61094 <WriteType+0x4a0>
   61110:	ldr	r0, [r4]
   61114:	bl	1840 <ftell@plt>
   61118:	mov	sl, r0
   6111c:	ldr	r0, [r5, #16]
   61120:	ldr	r2, [r5, #20]
   61124:	sub	r6, fp, #32
   61128:	sub	r7, fp, #40	; 0x28
   6112c:	uxtb	r1, r0
   61130:	cmp	r2, #0
   61134:	str	r1, [fp, #-32]	; 0xffffffe0
   61138:	orrne	r1, r1, #2048	; 0x800
   6113c:	strne	r1, [fp, #-32]	; 0xffffffe0
   61140:	ldr	r2, [r5, #24]
   61144:	cmp	r2, #0
   61148:	orrne	r1, r1, #1024	; 0x400
   6114c:	strne	r1, [fp, #-32]	; 0xffffffe0
   61150:	ldr	r2, [r5, #28]
   61154:	cmp	r2, #0
   61158:	orrne	r1, r1, #512	; 0x200
   6115c:	strne	r1, [fp, #-32]	; 0xffffffe0
   61160:	cmp	r0, #5
   61164:	bne	61174 <WriteType+0x580>
   61168:	ldr	r0, [r5, #40]	; 0x28
   6116c:	ldr	r0, [r0]
   61170:	str	r0, [sp, #40]	; 0x28
   61174:	ldr	r0, [r4, #20]
   61178:	cmp	r0, #0
   6117c:	beq	6118c <WriteType+0x598>
   61180:	mov	r0, r6
   61184:	bl	1bf8 <Mat_int32Swap>
   61188:	str	r0, [fp, #-32]	; 0xffffffe0
   6118c:	ldr	r3, [r4]
   61190:	add	r0, sp, #60	; 0x3c
   61194:	mov	r1, #4
   61198:	mov	r2, #1
   6119c:	bl	18ac <fwrite@plt>
   611a0:	ldr	r3, [r4]
   611a4:	add	r0, sp, #52	; 0x34
   611a8:	mov	r1, #4
   611ac:	mov	r2, #1
   611b0:	bl	18ac <fwrite@plt>
   611b4:	ldr	r3, [r4]
   611b8:	mov	r0, r6
   611bc:	mov	r1, #4
   611c0:	mov	r2, #1
   611c4:	bl	18ac <fwrite@plt>
   611c8:	ldr	r3, [r4]
   611cc:	add	r0, sp, #40	; 0x28
   611d0:	mov	r1, #4
   611d4:	mov	r2, #1
   611d8:	bl	18ac <fwrite@plt>
   611dc:	ldr	r0, [r5, #4]
   611e0:	mov	r1, #4
   611e4:	mov	r2, #1
   611e8:	lsl	r0, r0, #2
   611ec:	str	r0, [fp, #-36]	; 0xffffffdc
   611f0:	add	r0, sp, #56	; 0x38
   611f4:	ldr	r3, [r4]
   611f8:	bl	18ac <fwrite@plt>
   611fc:	ldr	r3, [r4]
   61200:	sub	r0, fp, #36	; 0x24
   61204:	mov	r1, #4
   61208:	mov	r2, #1
   6120c:	bl	18ac <fwrite@plt>
   61210:	ldr	r0, [r5, #4]
   61214:	cmp	r0, #1
   61218:	blt	61250 <WriteType+0x65c>
   6121c:	mov	r6, #0
   61220:	ldr	r0, [r5, #32]
   61224:	mov	r1, #4
   61228:	mov	r2, #1
   6122c:	ldr	r0, [r0, r6, lsl #2]
   61230:	str	r0, [fp, #-40]	; 0xffffffd8
   61234:	mov	r0, r7
   61238:	ldr	r3, [r4]
   6123c:	bl	18ac <fwrite@plt>
   61240:	ldr	r0, [r5, #4]
   61244:	add	r6, r6, #1
   61248:	cmp	r6, r0
   6124c:	blt	61220 <WriteType+0x62c>
   61250:	tst	r0, #1
   61254:	beq	6126c <WriteType+0x678>
   61258:	ldr	r3, [r4]
   6125c:	add	r0, sp, #48	; 0x30
   61260:	mov	r1, #4
   61264:	mov	r2, #1
   61268:	bl	18ac <fwrite@plt>
   6126c:	ldr	r3, [r4]
   61270:	add	r0, sp, #64	; 0x40
   61274:	mov	r1, #4
   61278:	mov	r2, #1
   6127c:	bl	18ac <fwrite@plt>
   61280:	ldr	r3, [r4]
   61284:	add	r0, sp, #48	; 0x30
   61288:	mov	r1, #4
   6128c:	mov	r2, #1
   61290:	bl	18ac <fwrite@plt>
   61294:	mov	r0, r4
   61298:	mov	r1, r5
   6129c:	bl	60bf4 <WriteType>
   612a0:	ldr	r0, [r4]
   612a4:	bl	1840 <ftell@plt>
   612a8:	cmn	sl, #1
   612ac:	mov	r6, #1
   612b0:	movne	r5, r0
   612b4:	cmnne	r0, #1
   612b8:	bne	61050 <WriteType+0x45c>
   612bc:	ldr	r0, [pc, #2392]	; 61c1c <WriteType+0x1028>
   612c0:	add	r0, pc, r0
   612c4:	bl	19b4 <Mat_Critical@plt>
   612c8:	b	61090 <WriteType+0x49c>
   612cc:	sub	ip, fp, #52	; 0x34
   612d0:	str	r1, [fp, #-56]	; 0xffffffc8
   612d4:	str	r2, [fp, #-60]	; 0xffffffc4
   612d8:	mov	r1, #4
   612dc:	mov	r2, #1
   612e0:	stm	ip, {r0, r3, r6}
   612e4:	mov	r0, #0
   612e8:	mov	r6, #6
   612ec:	str	r0, [fp, #-64]	; 0xffffffc0
   612f0:	sub	r0, fp, #48	; 0x30
   612f4:	ldr	r3, [r4]
   612f8:	bl	18ac <fwrite@plt>
   612fc:	ldr	r3, [r4]
   61300:	sub	r0, fp, #64	; 0x40
   61304:	mov	r1, #4
   61308:	mov	r2, #1
   6130c:	bl	18ac <fwrite@plt>
   61310:	ldr	r0, [r4]
   61314:	bl	1840 <ftell@plt>
   61318:	str	r6, [fp, #-40]	; 0xffffffd8
   6131c:	mov	r5, r0
   61320:	sub	r6, fp, #40	; 0x28
   61324:	ldr	r0, [r4, #20]
   61328:	cmp	r0, #0
   6132c:	beq	6133c <WriteType+0x748>
   61330:	mov	r0, r6
   61334:	bl	1bf8 <Mat_int32Swap>
   61338:	str	r0, [fp, #-40]	; 0xffffffd8
   6133c:	ldr	r3, [r4]
   61340:	sub	r0, fp, #52	; 0x34
   61344:	mov	r1, #4
   61348:	mov	r2, #1
   6134c:	bl	18ac <fwrite@plt>
   61350:	ldr	r3, [r4]
   61354:	sub	r0, fp, #60	; 0x3c
   61358:	mov	r1, #4
   6135c:	mov	r2, #1
   61360:	bl	18ac <fwrite@plt>
   61364:	ldr	r3, [r4]
   61368:	mov	r0, r6
   6136c:	mov	r1, #4
   61370:	mov	r2, #1
   61374:	bl	18ac <fwrite@plt>
   61378:	ldr	r3, [r4]
   6137c:	sub	r8, fp, #64	; 0x40
   61380:	mov	r1, #4
   61384:	mov	r2, #1
   61388:	mov	r0, r8
   6138c:	bl	18ac <fwrite@plt>
   61390:	mov	r0, #8
   61394:	mov	r1, #4
   61398:	mov	r2, #1
   6139c:	str	r0, [sp, #68]	; 0x44
   613a0:	sub	r0, fp, #56	; 0x38
   613a4:	ldr	r3, [r4]
   613a8:	bl	18ac <fwrite@plt>
   613ac:	ldr	r3, [r4]
   613b0:	add	r0, sp, #68	; 0x44
   613b4:	mov	r1, #4
   613b8:	mov	r2, #1
   613bc:	bl	18ac <fwrite@plt>
   613c0:	mov	r6, #0
   613c4:	sub	sl, fp, #32
   613c8:	mov	r1, #4
   613cc:	mov	r2, #1
   613d0:	str	r6, [fp, #-32]	; 0xffffffe0
   613d4:	mov	r0, sl
   613d8:	ldr	r3, [r4]
   613dc:	bl	18ac <fwrite@plt>
   613e0:	str	r6, [fp, #-32]	; 0xffffffe0
   613e4:	mov	r0, sl
   613e8:	mov	r1, #4
   613ec:	mov	r2, #1
   613f0:	ldr	r3, [r4]
   613f4:	bl	18ac <fwrite@plt>
   613f8:	ldr	r3, [r4]
   613fc:	sub	r0, fp, #44	; 0x2c
   61400:	mov	r1, #4
   61404:	mov	r2, #1
   61408:	bl	18ac <fwrite@plt>
   6140c:	ldr	r3, [r4]
   61410:	mov	r0, r8
   61414:	mov	r1, #4
   61418:	mov	r2, #1
   6141c:	bl	18ac <fwrite@plt>
   61420:	mov	r0, #9
   61424:	str	r6, [fp, #-36]	; 0xffffffdc
   61428:	mov	r8, #0
   6142c:	str	r0, [fp, #-32]	; 0xffffffe0
   61430:	ldr	r0, [r4]
   61434:	cmp	r0, #0
   61438:	beq	61474 <WriteType+0x880>
   6143c:	mov	r0, #9
   61440:	bl	1924 <Mat_SizeOf@plt>
   61444:	str	r8, [fp, #-36]	; 0xffffffdc
   61448:	mov	r0, sl
   6144c:	mov	r1, #4
   61450:	mov	r2, #1
   61454:	ldr	r3, [r4]
   61458:	bl	18ac <fwrite@plt>
   6145c:	ldr	r3, [r4]
   61460:	sub	r0, fp, #36	; 0x24
   61464:	mov	r1, #4
   61468:	mov	r2, #1
   6146c:	bl	18ac <fwrite@plt>
   61470:	ldr	r6, [fp, #-36]	; 0xffffffdc
   61474:	asr	r0, r6, #31
   61478:	str	r6, [sp, #68]	; 0x44
   6147c:	add	r0, r6, r0, lsr #29
   61480:	bic	r0, r0, #7
   61484:	subs	r0, r6, r0
   61488:	beq	614a4 <WriteType+0x8b0>
   6148c:	sub	r6, r0, #8
   61490:	ldr	r1, [r4]
   61494:	mov	r0, #0
   61498:	bl	19e4 <fputc@plt>
   6149c:	adds	r6, r6, #1
   614a0:	bcc	61490 <WriteType+0x89c>
   614a4:	ldr	r0, [r4]
   614a8:	bl	1840 <ftell@plt>
   614ac:	ldr	r7, [sp, #8]
   614b0:	cmn	r5, #1
   614b4:	movne	r6, r0
   614b8:	cmnne	r0, #1
   614bc:	bne	614d4 <WriteType+0x8e0>
   614c0:	ldr	r0, [pc, #1872]	; 61c18 <WriteType+0x1024>
   614c4:	add	r0, pc, r0
   614c8:	bl	19b4 <Mat_Critical@plt>
   614cc:	mov	r6, #1
   614d0:	b	61094 <WriteType+0x4a0>
   614d4:	sub	r0, r6, r5
   614d8:	mvn	r1, #3
   614dc:	mov	r2, #1
   614e0:	str	r0, [sp, #68]	; 0x44
   614e4:	sub	r1, r1, r0
   614e8:	ldr	r0, [r4]
   614ec:	bl	1a2c <fseek@plt>
   614f0:	ldr	r3, [r4]
   614f4:	add	r0, sp, #68	; 0x44
   614f8:	mov	r1, #4
   614fc:	mov	r2, #1
   61500:	bl	18ac <fwrite@plt>
   61504:	ldr	r0, [r4]
   61508:	mov	r1, r6
   6150c:	mov	r2, #0
   61510:	bl	1a2c <fseek@plt>
   61514:	mov	r6, #1
   61518:	b	61094 <WriteType+0x4a0>
   6151c:	ldr	r5, [r6, #40]	; 0x28
   61520:	mov	r0, r4
   61524:	mov	r3, #5
   61528:	mov	r8, r6
   6152c:	ldmib	r5, {r1, r2}
   61530:	bl	647ac <WriteData>
   61534:	asr	r1, r0, #31
   61538:	str	r0, [sp, #32]
   6153c:	add	r1, r0, r1, lsr #29
   61540:	bic	r1, r1, #7
   61544:	subs	r0, r0, r1
   61548:	beq	61564 <WriteType+0x970>
   6154c:	sub	r6, r0, #8
   61550:	ldr	r1, [r4]
   61554:	mov	r0, #0
   61558:	bl	19e4 <fputc@plt>
   6155c:	adds	r6, r6, #1
   61560:	bcc	61550 <WriteType+0x95c>
   61564:	ldr	r1, [r5, #12]
   61568:	ldr	r2, [r5, #16]
   6156c:	mov	r0, r4
   61570:	mov	r3, #5
   61574:	bl	647ac <WriteData>
   61578:	asr	r1, r0, #31
   6157c:	str	r0, [sp, #32]
   61580:	add	r1, r0, r1, lsr #29
   61584:	bic	r1, r1, #7
   61588:	subs	r0, r0, r1
   6158c:	beq	615a8 <WriteType+0x9b4>
   61590:	sub	r6, r0, #8
   61594:	ldr	r1, [r4]
   61598:	mov	r0, #0
   6159c:	bl	19e4 <fputc@plt>
   615a0:	adds	r6, r6, #1
   615a4:	bcc	61594 <WriteType+0x9a0>
   615a8:	ldr	r0, [r8, #20]
   615ac:	mov	r1, r8
   615b0:	cmp	r0, #0
   615b4:	beq	616d4 <WriteType+0xae0>
   615b8:	ldr	r6, [r5, #24]
   615bc:	ldr	r3, [r1, #8]
   615c0:	ldr	r2, [r5, #20]
   615c4:	mov	r0, r4
   615c8:	ldr	r1, [r6]
   615cc:	bl	647ac <WriteData>
   615d0:	asr	r1, r0, #31
   615d4:	str	r0, [sp, #32]
   615d8:	add	r1, r0, r1, lsr #29
   615dc:	bic	r1, r1, #7
   615e0:	subs	r0, r0, r1
   615e4:	beq	61600 <WriteType+0xa0c>
   615e8:	sub	r7, r0, #8
   615ec:	ldr	r1, [r4]
   615f0:	mov	r0, #0
   615f4:	bl	19e4 <fputc@plt>
   615f8:	adds	r7, r7, #1
   615fc:	bcc	615ec <WriteType+0x9f8>
   61600:	ldr	r3, [r8, #8]
   61604:	ldr	r2, [r5, #20]
   61608:	ldr	r1, [r6, #4]
   6160c:	mov	r0, r4
   61610:	bl	647ac <WriteData>
   61614:	asr	r1, r0, #31
   61618:	str	r0, [sp, #32]
   6161c:	add	r1, r0, r1, lsr #29
   61620:	bic	r1, r1, #7
   61624:	subs	r0, r0, r1
   61628:	beq	60d90 <WriteType+0x19c>
   6162c:	sub	r5, r0, #8
   61630:	ldr	r1, [r4]
   61634:	mov	r0, #0
   61638:	bl	19e4 <fputc@plt>
   6163c:	adds	r5, r5, #1
   61640:	bcc	61630 <WriteType+0xa3c>
   61644:	b	60d90 <WriteType+0x19c>
   61648:	movw	r0, #5
   6164c:	mov	r1, #4
   61650:	mov	r2, #1
   61654:	mov	r5, #1
   61658:	movt	r0, #4
   6165c:	str	r0, [sp, #16]
   61660:	add	r0, sp, #16
   61664:	ldr	r3, [r4]
   61668:	bl	18ac <fwrite@plt>
   6166c:	str	r5, [sp, #24]
   61670:	add	r0, sp, #24
   61674:	mov	r1, #4
   61678:	mov	r2, #1
   6167c:	ldr	r3, [r4]
   61680:	bl	18ac <fwrite@plt>
   61684:	ldr	r3, [r4]
   61688:	add	r0, sp, #38	; 0x26
   6168c:	mov	r1, #2
   61690:	mov	r2, #1
   61694:	bl	18ac <fwrite@plt>
   61698:	ldr	r1, [r4]
   6169c:	mov	r0, #0
   616a0:	mov	r5, #0
   616a4:	bl	19e4 <fputc@plt>
   616a8:	ldr	r1, [r4]
   616ac:	mov	r0, #0
   616b0:	bl	19e4 <fputc@plt>
   616b4:	str	r5, [sp, #32]
   616b8:	add	r0, sp, #32
   616bc:	mov	r1, #4
   616c0:	mov	r2, #1
   616c4:	ldr	r3, [r4]
   616c8:	bl	18ac <fwrite@plt>
   616cc:	sub	sp, fp, #28
   616d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   616d4:	ldr	r3, [r1, #8]
   616d8:	ldr	r2, [r5, #20]
   616dc:	ldr	r1, [r5, #24]
   616e0:	mov	r0, r4
   616e4:	bl	647ac <WriteData>
   616e8:	asr	r1, r0, #31
   616ec:	str	r0, [sp, #32]
   616f0:	add	r1, r0, r1, lsr #29
   616f4:	bic	r1, r1, #7
   616f8:	subs	r0, r0, r1
   616fc:	beq	60d90 <WriteType+0x19c>
   61700:	sub	r5, r0, #8
   61704:	ldr	r1, [r4]
   61708:	mov	r0, #0
   6170c:	bl	19e4 <fputc@plt>
   61710:	adds	r5, r5, #1
   61714:	bcc	61704 <WriteType+0xb10>
   61718:	b	60d90 <WriteType+0x19c>
   6171c:	sub	r0, r5, r7
   61720:	mvn	r1, #3
   61724:	mov	r2, #1
   61728:	str	r0, [fp, #-56]	; 0xffffffc8
   6172c:	sub	r1, r1, r0
   61730:	ldr	r0, [r4]
   61734:	bl	1a2c <fseek@plt>
   61738:	ldr	r3, [r4]
   6173c:	sub	r0, fp, #56	; 0x38
   61740:	mov	r1, #4
   61744:	mov	r2, #1
   61748:	bl	18ac <fwrite@plt>
   6174c:	ldr	r0, [r4]
   61750:	mov	r1, r5
   61754:	mov	r2, #0
   61758:	bl	1a2c <fseek@plt>
   6175c:	mov	r5, #0
   61760:	mov	r7, #1
   61764:	ldr	r0, [sp, #28]
   61768:	add	r6, r6, #1
   6176c:	cmp	r6, r0
   61770:	bcs	60d90 <WriteType+0x19c>
   61774:	ldr	r8, [r9, r6, lsl #2]
   61778:	mov	r0, #6
   6177c:	cmp	r4, #0
   61780:	strh	r7, [sp, #68]	; 0x44
   61784:	str	r5, [fp, #-48]	; 0xffffffd0
   61788:	str	r5, [fp, #-60]	; 0xffffffc4
   6178c:	str	r0, [fp, #-36]	; 0xffffffdc
   61790:	mov	r0, #5
   61794:	str	r0, [fp, #-40]	; 0xffffffd8
   61798:	mov	r0, #8
   6179c:	str	r0, [fp, #-44]	; 0xffffffd4
   617a0:	mov	r0, #14
   617a4:	cmpne	r8, #0
   617a8:	str	r0, [fp, #-52]	; 0xffffffcc
   617ac:	beq	61764 <WriteType+0xb70>
   617b0:	ldr	r3, [r4]
   617b4:	sub	r0, fp, #52	; 0x34
   617b8:	mov	r1, #4
   617bc:	mov	r2, #1
   617c0:	bl	18ac <fwrite@plt>
   617c4:	ldr	r3, [r4]
   617c8:	sub	r0, fp, #48	; 0x30
   617cc:	mov	r1, #4
   617d0:	mov	r2, #1
   617d4:	bl	18ac <fwrite@plt>
   617d8:	ldr	r0, [r8, #16]
   617dc:	cmp	r0, #0
   617e0:	beq	61764 <WriteType+0xb70>
   617e4:	ldr	r0, [r4]
   617e8:	bl	1840 <ftell@plt>
   617ec:	mov	r7, r0
   617f0:	ldr	r0, [r8, #16]
   617f4:	ldr	r2, [r8, #20]
   617f8:	sub	r5, fp, #32
   617fc:	uxtb	r1, r0
   61800:	cmp	r2, #0
   61804:	str	r1, [fp, #-32]	; 0xffffffe0
   61808:	orrne	r1, r1, #2048	; 0x800
   6180c:	strne	r1, [fp, #-32]	; 0xffffffe0
   61810:	ldr	r2, [r8, #24]
   61814:	cmp	r2, #0
   61818:	orrne	r1, r1, #1024	; 0x400
   6181c:	strne	r1, [fp, #-32]	; 0xffffffe0
   61820:	ldr	r2, [r8, #28]
   61824:	cmp	r2, #0
   61828:	orrne	r1, r1, #512	; 0x200
   6182c:	strne	r1, [fp, #-32]	; 0xffffffe0
   61830:	cmp	r0, #5
   61834:	bne	61844 <WriteType+0xc50>
   61838:	ldr	r0, [r8, #40]	; 0x28
   6183c:	ldr	r0, [r0]
   61840:	str	r0, [fp, #-60]	; 0xffffffc4
   61844:	ldr	r0, [r4, #20]
   61848:	cmp	r0, #0
   6184c:	beq	6185c <WriteType+0xc68>
   61850:	mov	r0, r5
   61854:	bl	1bf8 <Mat_int32Swap>
   61858:	str	r0, [fp, #-32]	; 0xffffffe0
   6185c:	ldr	r3, [r4]
   61860:	sub	r0, fp, #36	; 0x24
   61864:	mov	r1, #4
   61868:	mov	r2, #1
   6186c:	bl	18ac <fwrite@plt>
   61870:	ldr	r3, [r4]
   61874:	sub	r0, fp, #44	; 0x2c
   61878:	mov	r1, #4
   6187c:	mov	r2, #1
   61880:	bl	18ac <fwrite@plt>
   61884:	ldr	r3, [r4]
   61888:	mov	r0, r5
   6188c:	mov	r1, #4
   61890:	mov	r2, #1
   61894:	bl	18ac <fwrite@plt>
   61898:	ldr	r3, [r4]
   6189c:	sub	r0, fp, #60	; 0x3c
   618a0:	mov	r1, #4
   618a4:	mov	r2, #1
   618a8:	bl	18ac <fwrite@plt>
   618ac:	ldr	r0, [r8, #4]
   618b0:	mov	r1, #4
   618b4:	mov	r2, #1
   618b8:	lsl	r0, r0, #2
   618bc:	str	r0, [fp, #-56]	; 0xffffffc8
   618c0:	sub	r0, fp, #40	; 0x28
   618c4:	ldr	r3, [r4]
   618c8:	bl	18ac <fwrite@plt>
   618cc:	ldr	r3, [r4]
   618d0:	sub	r0, fp, #56	; 0x38
   618d4:	mov	r1, #4
   618d8:	mov	r2, #1
   618dc:	bl	18ac <fwrite@plt>
   618e0:	ldr	r0, [r8, #4]
   618e4:	cmp	r0, #1
   618e8:	blt	61920 <WriteType+0xd2c>
   618ec:	mov	r5, #0
   618f0:	ldr	r0, [r8, #32]
   618f4:	mov	r1, #4
   618f8:	mov	r2, #1
   618fc:	ldr	r0, [r0, r5, lsl #2]
   61900:	str	r0, [fp, #-64]	; 0xffffffc0
   61904:	mov	r0, sl
   61908:	ldr	r3, [r4]
   6190c:	bl	18ac <fwrite@plt>
   61910:	ldr	r0, [r8, #4]
   61914:	add	r5, r5, #1
   61918:	cmp	r5, r0
   6191c:	blt	618f0 <WriteType+0xcfc>
   61920:	tst	r0, #1
   61924:	beq	6193c <WriteType+0xd48>
   61928:	ldr	r3, [r4]
   6192c:	sub	r0, fp, #48	; 0x30
   61930:	mov	r1, #4
   61934:	mov	r2, #1
   61938:	bl	18ac <fwrite@plt>
   6193c:	ldr	r0, [r8, #36]	; 0x24
   61940:	cmp	r0, #0
   61944:	beq	619bc <WriteType+0xdc8>
   61948:	bl	1954 <strlen@plt>
   6194c:	cmp	r0, #4
   61950:	bhi	61a00 <WriteType+0xe0c>
   61954:	strh	r0, [fp, #-64]	; 0xffffffc0
   61958:	add	r0, sp, #68	; 0x44
   6195c:	mov	r1, #2
   61960:	mov	r2, #1
   61964:	ldr	r3, [r4]
   61968:	bl	18ac <fwrite@plt>
   6196c:	ldr	r3, [r4]
   61970:	mov	r0, sl
   61974:	mov	r1, #2
   61978:	mov	r2, #1
   6197c:	bl	18ac <fwrite@plt>
   61980:	ldrsh	r5, [fp, #-64]	; 0xffffffc0
   61984:	ldr	r0, [r8, #36]	; 0x24
   61988:	ldr	r3, [r4]
   6198c:	mov	r1, #1
   61990:	mov	r2, r5
   61994:	bl	18ac <fwrite@plt>
   61998:	cmp	r5, #3
   6199c:	bgt	61a88 <WriteType+0xe94>
   619a0:	sub	r5, r5, #4
   619a4:	ldr	r1, [r4]
   619a8:	mov	r0, #0
   619ac:	bl	19e4 <fputc@plt>
   619b0:	adds	r5, r5, #1
   619b4:	bcc	619a4 <WriteType+0xdb0>
   619b8:	b	61a88 <WriteType+0xe94>
   619bc:	ldr	r3, [r4]
   619c0:	add	r0, sp, #68	; 0x44
   619c4:	mov	r1, #2
   619c8:	mov	r2, #1
   619cc:	bl	18ac <fwrite@plt>
   619d0:	ldr	r1, [r4]
   619d4:	mov	r0, #0
   619d8:	bl	19e4 <fputc@plt>
   619dc:	ldr	r1, [r4]
   619e0:	mov	r0, #0
   619e4:	bl	19e4 <fputc@plt>
   619e8:	ldr	r3, [r4]
   619ec:	sub	r0, fp, #48	; 0x30
   619f0:	mov	r1, #4
   619f4:	mov	r2, #1
   619f8:	bl	18ac <fwrite@plt>
   619fc:	b	61a88 <WriteType+0xe94>
   61a00:	str	r0, [fp, #-64]	; 0xffffffc0
   61a04:	add	r0, sp, #68	; 0x44
   61a08:	mov	r1, #2
   61a0c:	mov	r2, #1
   61a10:	ldr	r3, [r4]
   61a14:	bl	18ac <fwrite@plt>
   61a18:	ldr	r1, [r4]
   61a1c:	mov	r0, #0
   61a20:	bl	19e4 <fputc@plt>
   61a24:	ldr	r1, [r4]
   61a28:	mov	r0, #0
   61a2c:	bl	19e4 <fputc@plt>
   61a30:	ldr	r3, [r4]
   61a34:	mov	r0, sl
   61a38:	mov	r1, #4
   61a3c:	mov	r2, #1
   61a40:	bl	18ac <fwrite@plt>
   61a44:	ldr	r5, [fp, #-64]	; 0xffffffc0
   61a48:	ldr	r0, [r8, #36]	; 0x24
   61a4c:	ldr	r3, [r4]
   61a50:	mov	r1, #1
   61a54:	mov	r2, r5
   61a58:	bl	18ac <fwrite@plt>
   61a5c:	asr	r0, r5, #31
   61a60:	add	r0, r5, r0, lsr #29
   61a64:	bic	r0, r0, #7
   61a68:	subs	r0, r5, r0
   61a6c:	beq	61a88 <WriteType+0xe94>
   61a70:	sub	r5, r0, #8
   61a74:	ldr	r1, [r4]
   61a78:	mov	r0, #0
   61a7c:	bl	19e4 <fputc@plt>
   61a80:	adds	r5, r5, #1
   61a84:	bcc	61a74 <WriteType+0xe80>
   61a88:	mov	r0, r4
   61a8c:	mov	r1, r8
   61a90:	bl	60bf4 <WriteType>
   61a94:	ldr	r0, [r4]
   61a98:	bl	1840 <ftell@plt>
   61a9c:	cmn	r7, #1
   61aa0:	movne	r5, r0
   61aa4:	cmnne	r0, #1
   61aa8:	bne	6171c <WriteType+0xb28>
   61aac:	ldr	r0, [pc, #352]	; 61c14 <WriteType+0x1020>
   61ab0:	add	r0, pc, r0
   61ab4:	bl	19b4 <Mat_Critical@plt>
   61ab8:	b	6175c <WriteType+0xb68>
   61abc:	mov	r0, #4
   61ac0:	mov	r1, #4
   61ac4:	mov	r2, #1
   61ac8:	str	r0, [fp, #-32]	; 0xffffffe0
   61acc:	lsl	r0, r6, #1
   61ad0:	str	r0, [fp, #-36]	; 0xffffffdc
   61ad4:	sub	r0, fp, #32
   61ad8:	ldr	r3, [r4]
   61adc:	bl	18ac <fwrite@plt>
   61ae0:	ldr	r3, [r4]
   61ae4:	sub	r0, fp, #36	; 0x24
   61ae8:	mov	r1, #4
   61aec:	mov	r2, #1
   61af0:	bl	18ac <fwrite@plt>
   61af4:	b	61c00 <WriteType+0x100c>
   61af8:	lsl	r0, r6, #1
   61afc:	mov	r1, #4
   61b00:	mov	r2, #1
   61b04:	str	r0, [fp, #-36]	; 0xffffffdc
   61b08:	sub	r0, fp, #32
   61b0c:	ldr	r3, [r4]
   61b10:	bl	18ac <fwrite@plt>
   61b14:	ldr	r3, [r4]
   61b18:	sub	r0, fp, #36	; 0x24
   61b1c:	mov	r1, #4
   61b20:	mov	r2, #1
   61b24:	bl	18ac <fwrite@plt>
   61b28:	cmp	r5, #0
   61b2c:	beq	61b4c <WriteType+0xf58>
   61b30:	cmp	r6, #1
   61b34:	blt	61b4c <WriteType+0xf58>
   61b38:	ldr	r3, [r4]
   61b3c:	mov	r0, r5
   61b40:	mov	r1, #2
   61b44:	mov	r2, r6
   61b48:	bl	18ac <fwrite@plt>
   61b4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   61b50:	asr	r1, r0, #31
   61b54:	add	r1, r0, r1, lsr #29
   61b58:	bic	r1, r1, #7
   61b5c:	subs	r0, r0, r1
   61b60:	beq	61c00 <WriteType+0x100c>
   61b64:	sub	r5, r0, #8
   61b68:	ldr	r1, [r4]
   61b6c:	mov	r0, #0
   61b70:	bl	19e4 <fputc@plt>
   61b74:	adds	r5, r5, #1
   61b78:	bcc	61b68 <WriteType+0xf74>
   61b7c:	b	61c00 <WriteType+0x100c>
   61b80:	str	r6, [fp, #-36]	; 0xffffffdc
   61b84:	sub	r0, fp, #32
   61b88:	mov	r1, #4
   61b8c:	mov	r2, #1
   61b90:	ldr	r3, [r4]
   61b94:	bl	18ac <fwrite@plt>
   61b98:	ldr	r3, [r4]
   61b9c:	sub	r0, fp, #36	; 0x24
   61ba0:	mov	r1, #4
   61ba4:	mov	r2, #1
   61ba8:	bl	18ac <fwrite@plt>
   61bac:	ldr	r6, [fp, #-36]	; 0xffffffdc
   61bb0:	cmp	r5, #0
   61bb4:	beq	61bd4 <WriteType+0xfe0>
   61bb8:	cmp	r6, #1
   61bbc:	blt	61bd4 <WriteType+0xfe0>
   61bc0:	ldr	r3, [r4]
   61bc4:	mov	r0, r5
   61bc8:	mov	r1, #1
   61bcc:	mov	r2, r6
   61bd0:	bl	18ac <fwrite@plt>
   61bd4:	asr	r0, r6, #31
   61bd8:	add	r0, r6, r0, lsr #29
   61bdc:	bic	r0, r0, #7
   61be0:	subs	r0, r6, r0
   61be4:	beq	61c00 <WriteType+0x100c>
   61be8:	sub	r5, r0, #8
   61bec:	ldr	r1, [r4]
   61bf0:	mov	r0, #0
   61bf4:	bl	19e4 <fputc@plt>
   61bf8:	adds	r5, r5, #1
   61bfc:	bcc	61bec <WriteType+0xff8>
   61c00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   61c04:	str	r0, [sp, #32]
   61c08:	sub	sp, fp, #28
   61c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61c10:	.word	0x0000b57c
   61c14:	.word	0x0000a2dc
   61c18:	.word	0x0000a8c8
   61c1c:	.word	0x0000aacc

00061c20 <WriteCompressedType>:
   61c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   61c24:	add	fp, sp, #28
   61c28:	sub	sp, sp, #52	; 0x34
   61c2c:	sub	sp, sp, #11264	; 0x2c00
   61c30:	add	r5, sp, #40	; 0x28
   61c34:	mov	r4, r2
   61c38:	mov	r7, r1
   61c3c:	mov	sl, r0
   61c40:	mov	r1, #0
   61c44:	mov	r2, #2048	; 0x800
   61c48:	mov	r6, #0
   61c4c:	mov	r0, r5
   61c50:	bl	1990 <memset@plt>
   61c54:	mov	r0, #1
   61c58:	str	r0, [sp, #36]	; 0x24
   61c5c:	ldr	r0, [r7, #16]
   61c60:	cmp	r0, #0
   61c64:	beq	61d74 <WriteCompressedType+0x154>
   61c68:	add	r1, sp, #36	; 0x24
   61c6c:	mov	r0, r7
   61c70:	bl	665f0 <SafeMulDims>
   61c74:	ldr	r0, [r7, #16]
   61c78:	sub	r1, r0, #6
   61c7c:	cmp	r1, #10
   61c80:	bcs	61ce8 <WriteCompressedType+0xc8>
   61c84:	ldr	r0, [r7, #20]
   61c88:	ldr	r2, [r7, #40]	; 0x28
   61c8c:	cmp	r0, #0
   61c90:	beq	61d58 <WriteCompressedType+0x138>
   61c94:	ldr	r5, [pc, #2580]	; 626b0 <WriteCompressedType+0xa90>
   61c98:	cmp	r2, #0
   61c9c:	ldr	r0, [r7, #8]
   61ca0:	ldr	r3, [sp, #36]	; 0x24
   61ca4:	mov	r1, r4
   61ca8:	add	r5, pc, r5
   61cac:	movne	r5, r2
   61cb0:	ldr	r2, [r5]
   61cb4:	str	r0, [sp]
   61cb8:	mov	r0, sl
   61cbc:	bl	64b14 <WriteCompressedData>
   61cc0:	mov	r6, r0
   61cc4:	ldr	r0, [r7, #8]
   61cc8:	ldr	r2, [r5, #4]
   61ccc:	ldr	r3, [sp, #36]	; 0x24
   61cd0:	mov	r1, r4
   61cd4:	str	r0, [sp]
   61cd8:	mov	r0, sl
   61cdc:	bl	64b14 <WriteCompressedData>
   61ce0:	add	r6, r0, r6
   61ce4:	b	61d74 <WriteCompressedType+0x154>
   61ce8:	sub	r0, r0, #1
   61cec:	cmp	r0, #4
   61cf0:	bhi	61d74 <WriteCompressedType+0x154>
   61cf4:	add	r1, pc, #4
   61cf8:	ldr	r0, [r1, r0, lsl #2]
   61cfc:	add	pc, r1, r0
   61d00:	.word	0x00000014
   61d04:	.word	0x00000160
   61d08:	.word	0x00000074
   61d0c:	.word	0x0000064c
   61d10:	.word	0x000007e4
   61d14:	ldr	r0, [r7]
   61d18:	cmp	r0, #0
   61d1c:	beq	61d74 <WriteCompressedType+0x154>
   61d20:	ldr	r1, [r7, #40]	; 0x28
   61d24:	cmp	r1, #0
   61d28:	str	r1, [sp, #28]
   61d2c:	ldrne	r1, [r7, #12]
   61d30:	cmpne	r1, #0
   61d34:	beq	61d74 <WriteCompressedType+0x154>
   61d38:	udiv	r9, r0, r1
   61d3c:	cmp	r1, r0
   61d40:	str	r9, [sp, #36]	; 0x24
   61d44:	bhi	61d74 <WriteCompressedType+0x154>
   61d48:	mov	r5, #0
   61d4c:	mov	r8, #2048	; 0x800
   61d50:	sub	r7, fp, #2080	; 0x820
   61d54:	b	61d90 <WriteCompressedType+0x170>
   61d58:	ldr	r0, [r7, #8]
   61d5c:	ldr	r3, [sp, #36]	; 0x24
   61d60:	mov	r1, r4
   61d64:	str	r0, [sp]
   61d68:	mov	r0, sl
   61d6c:	bl	64b14 <WriteCompressedData>
   61d70:	mov	r6, r0
   61d74:	mov	r0, r6
   61d78:	sub	sp, fp, #28
   61d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   61d80:	add	r5, r5, #1
   61d84:	mov	r6, #0
   61d88:	cmp	r5, r9
   61d8c:	bcs	61d74 <WriteCompressedType+0x154>
   61d90:	ldr	r0, [sp, #28]
   61d94:	sub	lr, fp, #4096	; 0x1000
   61d98:	mov	r1, #0
   61d9c:	mov	r2, #2048	; 0x800
   61da0:	ldr	r6, [r0, r5, lsl #2]
   61da4:	sub	r0, lr, #32
   61da8:	bl	1990 <memset@plt>
   61dac:	cmp	r4, #0
   61db0:	beq	61d80 <WriteCompressedType+0x160>
   61db4:	cmp	sl, #0
   61db8:	cmpne	r6, #0
   61dbc:	beq	61d80 <WriteCompressedType+0x160>
   61dc0:	add	lr, sp, #5120	; 0x1400
   61dc4:	mov	r1, #14
   61dc8:	add	r0, lr, #40	; 0x28
   61dcc:	str	r1, [r0, #2056]	; 0x808
   61dd0:	ldr	r0, [r6, #16]
   61dd4:	cmp	r0, #0
   61dd8:	beq	61dec <WriteCompressedType+0x1cc>
   61ddc:	mov	r0, r6
   61de0:	bl	64850 <GetTypeBufSize>
   61de4:	add	r0, r0, #24
   61de8:	b	61df0 <WriteCompressedType+0x1d0>
   61dec:	mov	r0, #0
   61df0:	add	lr, sp, #5120	; 0x1400
   61df4:	add	r1, lr, #40	; 0x28
   61df8:	sub	lr, fp, #4096	; 0x1000
   61dfc:	str	r0, [r1, #2060]	; 0x80c
   61e00:	sub	r0, lr, #32
   61e04:	str	r0, [r4]
   61e08:	mov	r0, #8
   61e0c:	str	r0, [r4, #4]
   61e10:	mov	r0, r4
   61e14:	mov	r1, #0
   61e18:	str	r7, [r4, #12]
   61e1c:	str	r8, [r4, #16]
   61e20:	bl	1894 <deflate@plt>
   61e24:	ldr	r0, [r4, #16]
   61e28:	ldr	r3, [sl]
   61e2c:	mov	r1, #1
   61e30:	rsb	r2, r0, #2048	; 0x800
   61e34:	mov	r0, r7
   61e38:	bl	18ac <fwrite@plt>
   61e3c:	ldr	r0, [r4, #16]
   61e40:	cmp	r0, #0
   61e44:	beq	61e10 <WriteCompressedType+0x1f0>
   61e48:	mov	r0, sl
   61e4c:	mov	r1, r6
   61e50:	mov	r2, r4
   61e54:	bl	64c90 <WriteCompressedTypeArrayFlags>
   61e58:	ldr	r9, [sp, #36]	; 0x24
   61e5c:	b	61d80 <WriteCompressedType+0x160>
   61e60:	ldr	r0, [r7, #52]	; 0x34
   61e64:	ldr	r9, [r0, #4]
   61e68:	cmp	r9, #0
   61e6c:	beq	62590 <WriteCompressedType+0x970>
   61e70:	ldr	r1, [r7, #40]	; 0x28
   61e74:	ldr	r8, [r0, #8]
   61e78:	str	r7, [sp, #8]
   61e7c:	mov	r7, #0
   61e80:	mov	r6, #0
   61e84:	str	r1, [sp, #4]
   61e88:	ldr	r0, [r8, r6, lsl #2]
   61e8c:	mov	r5, r7
   61e90:	bl	1954 <strlen@plt>
   61e94:	cmp	r0, r7
   61e98:	add	r6, r6, #1
   61e9c:	movhi	r7, r0
   61ea0:	cmp	r9, r6
   61ea4:	bne	61e88 <WriteCompressedType+0x268>
   61ea8:	cmp	r0, r5
   61eac:	mov	r1, r5
   61eb0:	mov	r3, #0
   61eb4:	movhi	r1, r0
   61eb8:	add	r1, r1, #1
   61ebc:	mul	r2, r9, r1
   61ec0:	add	r1, r3, r9
   61ec4:	add	r3, r2, r3
   61ec8:	add	r7, r7, #1
   61ecc:	tst	r3, #7
   61ed0:	mov	r3, r1
   61ed4:	bne	61ec0 <WriteCompressedType+0x2a0>
   61ed8:	cmp	r0, r5
   61edc:	mov	r2, #1
   61ee0:	str	r9, [sp, #16]
   61ee4:	str	r7, [sp, #28]
   61ee8:	movhi	r5, r0
   61eec:	str	r2, [sp, #48]	; 0x30
   61ef0:	movw	r2, #5
   61ef4:	str	r7, [sp, #44]	; 0x2c
   61ef8:	mla	r0, r9, r5, r1
   61efc:	movt	r2, #4
   61f00:	mov	r1, #1
   61f04:	str	r2, [sp, #40]	; 0x28
   61f08:	str	r0, [sp, #52]	; 0x34
   61f0c:	mov	r0, r7
   61f10:	bl	1798 <calloc@plt>
   61f14:	add	lr, sp, #2048	; 0x800
   61f18:	str	r0, [sp, #12]
   61f1c:	add	r1, sp, #40	; 0x28
   61f20:	mov	r0, #16
   61f24:	mov	r6, #0
   61f28:	mov	r5, #2048	; 0x800
   61f2c:	add	r8, lr, #40	; 0x28
   61f30:	str	r1, [r4]
   61f34:	str	r0, [r4, #4]
   61f38:	mov	r0, r4
   61f3c:	mov	r1, #0
   61f40:	str	r8, [r4, #12]
   61f44:	str	r5, [r4, #16]
   61f48:	bl	1894 <deflate@plt>
   61f4c:	ldr	r0, [r4, #16]
   61f50:	ldr	r3, [sl]
   61f54:	mov	r1, #1
   61f58:	rsb	r2, r0, #2048	; 0x800
   61f5c:	mov	r0, r8
   61f60:	bl	18ac <fwrite@plt>
   61f64:	add	r6, r0, r6
   61f68:	ldr	r0, [r4, #16]
   61f6c:	cmp	r0, #0
   61f70:	beq	61f38 <WriteCompressedType+0x318>
   61f74:	ldr	r7, [sp, #12]
   61f78:	mov	r5, #0
   61f7c:	mov	r9, #2048	; 0x800
   61f80:	ldr	r0, [sp, #8]
   61f84:	ldr	r0, [r0, #52]	; 0x34
   61f88:	str	r0, [sp, #24]
   61f8c:	ldr	r0, [r0, #8]
   61f90:	ldr	r0, [r0, r5, lsl #2]
   61f94:	bl	1954 <strlen@plt>
   61f98:	ldr	r2, [sp, #28]
   61f9c:	str	r0, [sp, #20]
   61fa0:	mov	r0, r7
   61fa4:	mov	r1, #0
   61fa8:	bl	1990 <memset@plt>
   61fac:	ldr	r0, [sp, #24]
   61fb0:	ldr	r2, [sp, #20]
   61fb4:	ldr	r0, [r0, #8]
   61fb8:	ldr	r1, [r0, r5, lsl #2]
   61fbc:	mov	r0, r7
   61fc0:	bl	181c <memcpy@plt>
   61fc4:	ldr	r0, [sp, #28]
   61fc8:	str	r7, [r4]
   61fcc:	str	r0, [r4, #4]
   61fd0:	mov	r0, r4
   61fd4:	mov	r1, #0
   61fd8:	str	r8, [r4, #12]
   61fdc:	str	r9, [r4, #16]
   61fe0:	bl	1894 <deflate@plt>
   61fe4:	ldr	r0, [r4, #16]
   61fe8:	ldr	r3, [sl]
   61fec:	mov	r1, #1
   61ff0:	rsb	r2, r0, #2048	; 0x800
   61ff4:	mov	r0, r8
   61ff8:	bl	18ac <fwrite@plt>
   61ffc:	add	r6, r0, r6
   62000:	ldr	r0, [r4, #16]
   62004:	cmp	r0, #0
   62008:	beq	61fd0 <WriteCompressedType+0x3b0>
   6200c:	ldr	r0, [sp, #16]
   62010:	add	r5, r5, #1
   62014:	cmp	r5, r0
   62018:	bne	61f80 <WriteCompressedType+0x360>
   6201c:	ldr	r0, [sp, #12]
   62020:	bl	1804 <free@plt>
   62024:	ldr	r1, [sp, #36]	; 0x24
   62028:	ldr	r2, [sp, #16]
   6202c:	add	r0, sp, #32
   62030:	bl	6664c <SafeMul>
   62034:	ldr	r0, [sp, #32]
   62038:	cmp	r0, #0
   6203c:	beq	61d74 <WriteCompressedType+0x154>
   62040:	sub	lr, fp, #4096	; 0x1000
   62044:	mov	r7, #2048	; 0x800
   62048:	sub	r8, fp, #2080	; 0x820
   6204c:	mov	r5, #0
   62050:	sub	r0, lr, #32
   62054:	add	r1, r0, #8
   62058:	add	r0, r0, #24
   6205c:	str	r1, [sp, #24]
   62060:	str	r0, [sp, #20]
   62064:	b	6208c <WriteCompressedType+0x46c>
   62068:	mov	r7, #0
   6206c:	add	r0, r7, r5
   62070:	mov	r7, #2048	; 0x800
   62074:	ldr	r5, [sp, #28]
   62078:	add	r6, r0, r6
   6207c:	ldr	r0, [sp, #32]
   62080:	add	r5, r5, #1
   62084:	cmp	r5, r0
   62088:	bcs	61d74 <WriteCompressedType+0x154>
   6208c:	ldr	r0, [sp, #4]
   62090:	add	lr, sp, #4096	; 0x1000
   62094:	mov	r1, #0
   62098:	mov	r2, #2048	; 0x800
   6209c:	ldr	r9, [r0, r5, lsl #2]
   620a0:	add	r0, lr, #1072	; 0x430
   620a4:	bl	1990 <memset@plt>
   620a8:	cmp	r9, #0
   620ac:	str	r5, [sp, #28]
   620b0:	beq	62158 <WriteCompressedType+0x538>
   620b4:	add	lr, sp, #5120	; 0x1400
   620b8:	mov	r1, #14
   620bc:	mov	r5, #0
   620c0:	add	r0, lr, #40	; 0x28
   620c4:	str	r1, [r0, #8]
   620c8:	ldr	r0, [r9, #16]
   620cc:	cmp	r0, #0
   620d0:	mov	r0, #0
   620d4:	beq	620e4 <WriteCompressedType+0x4c4>
   620d8:	mov	r0, r9
   620dc:	bl	64850 <GetTypeBufSize>
   620e0:	add	r0, r0, #24
   620e4:	add	lr, sp, #5120	; 0x1400
   620e8:	add	r1, lr, #40	; 0x28
   620ec:	add	lr, sp, #4096	; 0x1000
   620f0:	str	r0, [r1, #12]
   620f4:	add	r0, lr, #1072	; 0x430
   620f8:	str	r0, [r4]
   620fc:	mov	r0, #8
   62100:	str	r0, [r4, #4]
   62104:	mov	r0, r4
   62108:	mov	r1, #0
   6210c:	str	r8, [r4, #12]
   62110:	str	r7, [r4, #16]
   62114:	bl	1894 <deflate@plt>
   62118:	ldr	r0, [r4, #16]
   6211c:	ldr	r3, [sl]
   62120:	mov	r1, #1
   62124:	rsb	r2, r0, #2048	; 0x800
   62128:	mov	r0, r8
   6212c:	bl	18ac <fwrite@plt>
   62130:	add	r5, r0, r5
   62134:	ldr	r0, [r4, #16]
   62138:	cmp	r0, #0
   6213c:	beq	62104 <WriteCompressedType+0x4e4>
   62140:	mov	r0, sl
   62144:	mov	r1, r9
   62148:	mov	r2, r4
   6214c:	bl	64c90 <WriteCompressedTypeArrayFlags>
   62150:	add	r0, r0, r5
   62154:	b	62074 <WriteCompressedType+0x454>
   62158:	ldr	r0, [sp, #24]
   6215c:	mov	r1, #0
   62160:	movw	r2, #2040	; 0x7f8
   62164:	mov	r5, #0
   62168:	bl	1990 <memset@plt>
   6216c:	add	lr, sp, #5120	; 0x1400
   62170:	mov	r1, #14
   62174:	add	r0, lr, #40	; 0x28
   62178:	sub	lr, fp, #4096	; 0x1000
   6217c:	str	r1, [r0, #2056]	; 0x808
   62180:	mov	r1, #48	; 0x30
   62184:	str	r1, [r0, #2060]	; 0x80c
   62188:	sub	r0, lr, #32
   6218c:	str	r0, [r4]
   62190:	mov	r0, #8
   62194:	str	r0, [r4, #4]
   62198:	mov	r0, r4
   6219c:	mov	r1, #0
   621a0:	str	r8, [r4, #12]
   621a4:	str	r7, [r4, #16]
   621a8:	bl	1894 <deflate@plt>
   621ac:	ldr	r0, [r4, #16]
   621b0:	ldr	r3, [sl]
   621b4:	mov	r1, #1
   621b8:	rsb	r2, r0, #2048	; 0x800
   621bc:	mov	r0, r8
   621c0:	bl	18ac <fwrite@plt>
   621c4:	add	r5, r0, r5
   621c8:	ldr	r0, [r4, #16]
   621cc:	cmp	r0, #0
   621d0:	beq	62198 <WriteCompressedType+0x578>
   621d4:	add	r0, pc, #932	; 0x3a4
   621d8:	sub	lr, fp, #4096	; 0x1000
   621dc:	mov	r2, #20
   621e0:	mov	r9, #0
   621e4:	vld1.64	{d16-d17}, [r0 :128]
   621e8:	sub	r1, lr, #32
   621ec:	add	lr, sp, #5120	; 0x1400
   621f0:	mov	r0, r1
   621f4:	vst1.32	{d16-d17}, [r0], r2
   621f8:	mov	r2, #8
   621fc:	str	r2, [r0]
   62200:	add	r0, lr, #40	; 0x28
   62204:	mov	r2, #5
   62208:	str	r2, [r0, #2072]	; 0x818
   6220c:	ldr	r0, [sp, #20]
   62210:	mov	r2, #0
   62214:	str	r2, [r0]
   62218:	str	r2, [r0, #4]
   6221c:	mov	r0, #32
   62220:	str	r1, [r4]
   62224:	str	r0, [r4, #4]
   62228:	mov	r0, r4
   6222c:	mov	r1, #0
   62230:	str	r8, [r4, #12]
   62234:	str	r7, [r4, #16]
   62238:	bl	1894 <deflate@plt>
   6223c:	ldr	r0, [r4, #16]
   62240:	ldr	r3, [sl]
   62244:	mov	r1, #1
   62248:	rsb	r2, r0, #2048	; 0x800
   6224c:	mov	r0, r8
   62250:	bl	18ac <fwrite@plt>
   62254:	add	r5, r0, r5
   62258:	ldr	r0, [r4, #16]
   6225c:	cmp	r0, #0
   62260:	beq	62228 <WriteCompressedType+0x608>
   62264:	add	lr, sp, #5120	; 0x1400
   62268:	mov	r1, #1
   6226c:	add	r0, lr, #40	; 0x28
   62270:	sub	lr, fp, #4096	; 0x1000
   62274:	str	r1, [r0, #2056]	; 0x808
   62278:	str	r9, [r0, #2060]	; 0x80c
   6227c:	sub	r0, lr, #32
   62280:	str	r0, [r4]
   62284:	mov	r0, #8
   62288:	str	r0, [r4, #4]
   6228c:	mov	r0, r4
   62290:	mov	r1, #0
   62294:	str	r8, [r4, #12]
   62298:	str	r7, [r4, #16]
   6229c:	bl	1894 <deflate@plt>
   622a0:	ldr	r0, [r4, #16]
   622a4:	ldr	r3, [sl]
   622a8:	mov	r1, #1
   622ac:	rsb	r2, r0, #2048	; 0x800
   622b0:	mov	r0, r8
   622b4:	bl	18ac <fwrite@plt>
   622b8:	add	r5, r0, r5
   622bc:	ldr	r0, [r4, #16]
   622c0:	cmp	r0, #0
   622c4:	beq	6228c <WriteCompressedType+0x66c>
   622c8:	ldr	r0, [sl]
   622cc:	cmp	r0, #0
   622d0:	beq	62068 <WriteCompressedType+0x448>
   622d4:	mov	r0, #9
   622d8:	bl	1924 <Mat_SizeOf@plt>
   622dc:	add	lr, sp, #5120	; 0x1400
   622e0:	mov	r1, #9
   622e4:	mov	r7, #0
   622e8:	add	r0, lr, #40	; 0x28
   622ec:	add	lr, sp, #4096	; 0x1000
   622f0:	stm	r0, {r1, r7}
   622f4:	str	r0, [r4]
   622f8:	mov	r0, #8
   622fc:	mov	r1, #1024	; 0x400
   62300:	add	r9, lr, #40	; 0x28
   62304:	str	r0, [r4, #4]
   62308:	str	r9, [r4, #12]
   6230c:	str	r1, [r4, #16]
   62310:	mov	r0, r4
   62314:	mov	r1, #0
   62318:	bl	1894 <deflate@plt>
   6231c:	ldr	r0, [r4, #16]
   62320:	ldr	r3, [sl]
   62324:	mov	r1, #1
   62328:	rsb	r2, r0, #1024	; 0x400
   6232c:	mov	r0, r9
   62330:	bl	18ac <fwrite@plt>
   62334:	add	r7, r0, r7
   62338:	ldr	r0, [r4, #16]
   6233c:	mov	r1, #1024	; 0x400
   62340:	cmp	r0, #0
   62344:	beq	62308 <WriteCompressedType+0x6e8>
   62348:	b	6206c <WriteCompressedType+0x44c>
   6234c:	ldr	r5, [r7, #8]
   62350:	ldr	r2, [r7, #40]	; 0x28
   62354:	ldr	r9, [sp, #36]	; 0x24
   62358:	mov	r6, #0
   6235c:	cmp	sl, #0
   62360:	str	r6, [fp, #-2076]	; 0xfffff7e4
   62364:	str	r6, [fp, #-2080]	; 0xfffff7e0
   62368:	beq	61d74 <WriteCompressedType+0x154>
   6236c:	ldr	r0, [sl]
   62370:	cmp	r0, #0
   62374:	beq	61d74 <WriteCompressedType+0x154>
   62378:	cmp	r5, #17
   6237c:	bhi	61d74 <WriteCompressedType+0x154>
   62380:	movw	r1, #20
   62384:	mov	r0, #1
   62388:	movt	r1, #3
   6238c:	tst	r1, r0, lsl r5
   62390:	beq	6261c <WriteCompressedType+0x9fc>
   62394:	mov	r0, r5
   62398:	str	r2, [sp, #28]
   6239c:	bl	1924 <Mat_SizeOf@plt>
   623a0:	mul	r2, r0, r9
   623a4:	cmp	r5, #2
   623a8:	add	lr, sp, #5120	; 0x1400
   623ac:	mov	r6, #0
   623b0:	mov	r8, #1024	; 0x400
   623b4:	add	r0, lr, #40	; 0x28
   623b8:	movweq	r5, #16
   623bc:	add	lr, sp, #4096	; 0x1000
   623c0:	str	r5, [r0]
   623c4:	mov	r1, r0
   623c8:	add	r7, lr, #40	; 0x28
   623cc:	str	r2, [r0, #4]
   623d0:	mov	r5, r2
   623d4:	mov	r0, #8
   623d8:	str	r1, [r4]
   623dc:	str	r0, [r4, #4]
   623e0:	mov	r0, r4
   623e4:	mov	r1, #0
   623e8:	str	r7, [r4, #12]
   623ec:	str	r8, [r4, #16]
   623f0:	bl	1894 <deflate@plt>
   623f4:	ldr	r0, [r4, #16]
   623f8:	ldr	r3, [sl]
   623fc:	mov	r1, #1
   62400:	rsb	r2, r0, #1024	; 0x400
   62404:	mov	r0, r7
   62408:	bl	18ac <fwrite@plt>
   6240c:	add	r6, r0, r6
   62410:	ldr	r0, [r4, #16]
   62414:	cmp	r0, #0
   62418:	beq	623e0 <WriteCompressedType+0x7c0>
   6241c:	ldr	r0, [sp, #28]
   62420:	cmp	r0, #0
   62424:	beq	61d74 <WriteCompressedType+0x154>
   62428:	cmp	r9, #1
   6242c:	blt	61d74 <WriteCompressedType+0x154>
   62430:	str	r0, [r4]
   62434:	mov	r8, r5
   62438:	str	r5, [r4, #4]
   6243c:	mov	r5, #1024	; 0x400
   62440:	mov	r0, r4
   62444:	mov	r1, #0
   62448:	str	r7, [r4, #12]
   6244c:	str	r5, [r4, #16]
   62450:	bl	1894 <deflate@plt>
   62454:	ldr	r0, [r4, #16]
   62458:	ldr	r3, [sl]
   6245c:	mov	r1, #1
   62460:	rsb	r2, r0, #1024	; 0x400
   62464:	mov	r0, r7
   62468:	bl	18ac <fwrite@plt>
   6246c:	add	r6, r0, r6
   62470:	ldr	r0, [r4, #16]
   62474:	cmp	r0, #0
   62478:	beq	62440 <WriteCompressedType+0x820>
   6247c:	asr	r0, r8, #31
   62480:	add	r0, r8, r0, lsr #29
   62484:	bic	r0, r0, #7
   62488:	subs	r0, r8, r0
   6248c:	beq	61d74 <WriteCompressedType+0x154>
   62490:	sub	r1, fp, #2080	; 0x820
   62494:	mov	r5, #1024	; 0x400
   62498:	rsb	r0, r0, #8
   6249c:	str	r1, [r4]
   624a0:	str	r0, [r4, #4]
   624a4:	mov	r0, r4
   624a8:	mov	r1, #0
   624ac:	str	r7, [r4, #12]
   624b0:	str	r5, [r4, #16]
   624b4:	bl	1894 <deflate@plt>
   624b8:	ldr	r0, [r4, #16]
   624bc:	ldr	r3, [sl]
   624c0:	mov	r1, #1
   624c4:	rsb	r2, r0, #1024	; 0x400
   624c8:	mov	r0, r7
   624cc:	bl	18ac <fwrite@plt>
   624d0:	add	r6, r0, r6
   624d4:	ldr	r0, [r4, #16]
   624d8:	cmp	r0, #0
   624dc:	beq	624a4 <WriteCompressedType+0x884>
   624e0:	b	61d74 <WriteCompressedType+0x154>
   624e4:	ldr	r5, [r7, #40]	; 0x28
   624e8:	mov	r8, #5
   624ec:	mov	r0, sl
   624f0:	mov	r1, r4
   624f4:	ldmib	r5, {r2, r3}
   624f8:	str	r8, [sp]
   624fc:	bl	64b14 <WriteCompressedData>
   62500:	ldr	r2, [r5, #12]
   62504:	ldr	r3, [r5, #16]
   62508:	mov	r6, r0
   6250c:	mov	r0, sl
   62510:	mov	r1, r4
   62514:	str	r8, [sp]
   62518:	bl	64b14 <WriteCompressedData>
   6251c:	add	r8, r0, r6
   62520:	ldr	r0, [r7, #20]
   62524:	cmp	r0, #0
   62528:	beq	625f8 <WriteCompressedType+0x9d8>
   6252c:	ldr	r6, [r5, #24]
   62530:	ldr	r0, [r7, #8]
   62534:	ldr	r3, [r5, #20]
   62538:	mov	r1, r4
   6253c:	ldr	r2, [r6]
   62540:	str	r0, [sp]
   62544:	mov	r0, sl
   62548:	bl	64b14 <WriteCompressedData>
   6254c:	ldr	r1, [r7, #8]
   62550:	ldr	r3, [r5, #20]
   62554:	ldr	r2, [r6, #4]
   62558:	add	r5, r0, r8
   6255c:	mov	r0, sl
   62560:	str	r1, [sp]
   62564:	mov	r1, r4
   62568:	bl	64b14 <WriteCompressedData>
   6256c:	add	r6, r5, r0
   62570:	b	61d74 <WriteCompressedType+0x154>
   62574:	nop	{0}
   62578:	nop	{0}
   6257c:	nop	{0}
   62580:	.word	0x00000006
   62584:	.word	0x00000008
   62588:	.word	0x00000006
   6258c:	.word	0x00000000
   62590:	add	r0, pc, #264	; 0x108
   62594:	add	lr, sp, #2048	; 0x800
   62598:	mov	r6, #0
   6259c:	vld1.64	{d16-d17}, [r0 :128]
   625a0:	mov	r0, #16
   625a4:	add	r7, lr, #40	; 0x28
   625a8:	vst1.64	{d16-d17}, [r5]
   625ac:	str	r5, [r4]
   625b0:	mov	r5, #2048	; 0x800
   625b4:	str	r0, [r4, #4]
   625b8:	mov	r0, r4
   625bc:	mov	r1, #0
   625c0:	str	r7, [r4, #12]
   625c4:	str	r5, [r4, #16]
   625c8:	bl	1894 <deflate@plt>
   625cc:	ldr	r0, [r4, #16]
   625d0:	ldr	r3, [sl]
   625d4:	mov	r1, #1
   625d8:	rsb	r2, r0, #2048	; 0x800
   625dc:	mov	r0, r7
   625e0:	bl	18ac <fwrite@plt>
   625e4:	add	r6, r0, r6
   625e8:	ldr	r0, [r4, #16]
   625ec:	cmp	r0, #0
   625f0:	beq	625b8 <WriteCompressedType+0x998>
   625f4:	b	61d74 <WriteCompressedType+0x154>
   625f8:	ldr	r0, [r7, #8]
   625fc:	ldr	r3, [r5, #20]
   62600:	ldr	r2, [r5, #24]
   62604:	mov	r1, r4
   62608:	str	r0, [sp]
   6260c:	mov	r0, sl
   62610:	bl	64b14 <WriteCompressedData>
   62614:	add	r6, r0, r8
   62618:	b	61d74 <WriteCompressedType+0x154>
   6261c:	cmp	r5, #0
   62620:	bne	61d74 <WriteCompressedType+0x154>
   62624:	add	lr, sp, #5120	; 0x1400
   62628:	mov	r0, #4
   6262c:	lsl	r1, r9, #1
   62630:	mov	r6, #0
   62634:	mov	r5, #1024	; 0x400
   62638:	add	r2, lr, #40	; 0x28
   6263c:	add	lr, sp, #4096	; 0x1000
   62640:	stm	r2, {r0, r1}
   62644:	add	r7, lr, #40	; 0x28
   62648:	mov	r0, #8
   6264c:	str	r2, [r4]
   62650:	str	r0, [r4, #4]
   62654:	mov	r0, r4
   62658:	mov	r1, #0
   6265c:	str	r7, [r4, #12]
   62660:	str	r5, [r4, #16]
   62664:	bl	1894 <deflate@plt>
   62668:	ldr	r0, [r4, #16]
   6266c:	ldr	r3, [sl]
   62670:	mov	r1, #1
   62674:	rsb	r2, r0, #1024	; 0x400
   62678:	mov	r0, r7
   6267c:	bl	18ac <fwrite@plt>
   62680:	add	r6, r0, r6
   62684:	ldr	r0, [r4, #16]
   62688:	cmp	r0, #0
   6268c:	beq	62654 <WriteCompressedType+0xa34>
   62690:	b	61d74 <WriteCompressedType+0x154>
   62694:	nop	{0}
   62698:	nop	{0}
   6269c:	nop	{0}
   626a0:	.word	0x00040005
   626a4:	.word	0x00000001
   626a8:	.word	0x00000001
   626ac:	.word	0x00000000
   626b0:	.word	0x0000a52c

000626b4 <Mat_VarReadNextInfo5>:
   626b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   626b8:	add	fp, sp, #28
   626bc:	sub	sp, sp, #84	; 0x54
   626c0:	mov	r4, #0
   626c4:	cmp	r0, #0
   626c8:	beq	62de4 <Mat_VarReadNextInfo5+0x730>
   626cc:	mov	r5, r0
   626d0:	ldr	r0, [r0]
   626d4:	bl	1840 <ftell@plt>
   626d8:	cmn	r0, #1
   626dc:	beq	627d4 <Mat_VarReadNextInfo5+0x120>
   626e0:	ldr	r3, [r5]
   626e4:	mov	r9, r0
   626e8:	sub	r0, fp, #36	; 0x24
   626ec:	mov	r1, #4
   626f0:	mov	r2, #1
   626f4:	bl	18b8 <fread@plt>
   626f8:	cmp	r0, #0
   626fc:	beq	62de4 <Mat_VarReadNextInfo5+0x730>
   62700:	ldr	r3, [r5]
   62704:	sub	r0, fp, #40	; 0x28
   62708:	mov	r1, #4
   6270c:	mov	r2, #1
   62710:	bl	18b8 <fread@plt>
   62714:	ldr	r0, [r5, #20]
   62718:	cmp	r0, #0
   6271c:	beq	62730 <Mat_VarReadNextInfo5+0x7c>
   62720:	sub	r0, fp, #36	; 0x24
   62724:	bl	1bf8 <Mat_int32Swap>
   62728:	sub	r0, fp, #40	; 0x28
   6272c:	bl	1bf8 <Mat_int32Swap>
   62730:	ldr	r1, [fp, #-36]	; 0xffffffdc
   62734:	cmp	r1, #14
   62738:	beq	627e8 <Mat_VarReadNextInfo5+0x134>
   6273c:	cmp	r1, #15
   62740:	bne	628f0 <Mat_VarReadNextInfo5+0x23c>
   62744:	vmov.i32	q8, #0	; 0x00000000
   62748:	add	r1, sp, #8
   6274c:	mov	r0, #48	; 0x30
   62750:	mov	r2, r1
   62754:	vst1.64	{d16-d17}, [r2], r0
   62758:	add	r0, r1, #32
   6275c:	vst1.64	{d16-d17}, [r0]
   62760:	add	r0, r1, #16
   62764:	vst1.64	{d16-d17}, [r2]
   62768:	vst1.64	{d16-d17}, [r0]
   6276c:	bl	18a0 <Mat_VarCalloc@plt>
   62770:	mov	r4, r0
   62774:	mov	r0, #1
   62778:	mov	r1, #56	; 0x38
   6277c:	str	r0, [r4, #48]	; 0x30
   62780:	mov	r0, #1
   62784:	bl	1798 <calloc@plt>
   62788:	ldr	r1, [r4, #52]	; 0x34
   6278c:	mov	r2, #56	; 0x38
   62790:	str	r0, [r1, #12]
   62794:	ldr	r1, [pc, #1624]	; 62df4 <Mat_VarReadNextInfo5+0x740>
   62798:	add	r1, pc, r1
   6279c:	bl	19d8 <inflateInit_@plt>
   627a0:	cmp	r0, #0
   627a4:	beq	62950 <Mat_VarReadNextInfo5+0x29c>
   627a8:	mov	r6, r0
   627ac:	mov	r0, r4
   627b0:	bl	1918 <Mat_VarFree@plt>
   627b4:	mov	r0, r6
   627b8:	bl	1888 <zError@plt>
   627bc:	mov	r1, r0
   627c0:	ldr	r0, [pc, #1584]	; 62df8 <Mat_VarReadNextInfo5+0x744>
   627c4:	add	r0, pc, r0
   627c8:	bl	19b4 <Mat_Critical@plt>
   627cc:	mov	r4, #0
   627d0:	b	62de4 <Mat_VarReadNextInfo5+0x730>
   627d4:	ldr	r0, [pc, #1556]	; 62df0 <Mat_VarReadNextInfo5+0x73c>
   627d8:	add	r0, pc, r0
   627dc:	bl	19b4 <Mat_Critical@plt>
   627e0:	mov	r4, #0
   627e4:	b	62de4 <Mat_VarReadNextInfo5+0x730>
   627e8:	bl	18a0 <Mat_VarCalloc@plt>
   627ec:	ldr	r3, [r5]
   627f0:	add	r7, sp, #8
   627f4:	mov	r4, r0
   627f8:	mov	r1, #4
   627fc:	mov	r2, #6
   62800:	mov	r0, r7
   62804:	bl	18b8 <fread@plt>
   62808:	ldr	r0, [r5, #20]
   6280c:	cmp	r0, #0
   62810:	beq	62844 <Mat_VarReadNextInfo5+0x190>
   62814:	mov	r0, r7
   62818:	bl	1c0c <Mat_uint32Swap>
   6281c:	add	r0, r7, #4
   62820:	bl	1c0c <Mat_uint32Swap>
   62824:	add	r0, r7, #8
   62828:	bl	1c0c <Mat_uint32Swap>
   6282c:	add	r0, r7, #12
   62830:	bl	1c0c <Mat_uint32Swap>
   62834:	add	r0, r7, #16
   62838:	bl	1c0c <Mat_uint32Swap>
   6283c:	add	r0, r7, #20
   62840:	bl	1c0c <Mat_uint32Swap>
   62844:	ldr	r0, [sp, #8]
   62848:	cmp	r0, #6
   6284c:	bne	62888 <Mat_VarReadNextInfo5+0x1d4>
   62850:	ldr	r0, [sp, #16]
   62854:	and	r1, r0, #512	; 0x200
   62858:	and	r2, r0, #1024	; 0x400
   6285c:	and	r3, r0, #2048	; 0x800
   62860:	uxtb	r0, r0
   62864:	cmp	r0, #18
   62868:	movcs	r0, #0
   6286c:	str	r0, [r4, #16]
   62870:	str	r3, [r4, #20]
   62874:	str	r2, [r4, #24]
   62878:	str	r1, [r4, #28]
   6287c:	cmp	r0, #5
   62880:	ldreq	r0, [sp, #20]
   62884:	streq	r0, [r4]
   62888:	ldr	r2, [sp, #24]
   6288c:	ldr	r3, [sp, #28]
   62890:	mov	r0, r5
   62894:	mov	r1, r4
   62898:	bl	6466c <ReadRankDims>
   6289c:	ldr	r3, [r5]
   628a0:	add	r8, sp, #8
   628a4:	mov	r1, #4
   628a8:	mov	r2, #2
   628ac:	mov	r0, r8
   628b0:	bl	18b8 <fread@plt>
   628b4:	ldr	r0, [r5, #20]
   628b8:	cmp	r0, #0
   628bc:	beq	628c8 <Mat_VarReadNextInfo5+0x214>
   628c0:	add	r0, sp, #8
   628c4:	bl	1c0c <Mat_uint32Swap>
   628c8:	ldr	r0, [sp, #8]
   628cc:	cmp	r0, #1
   628d0:	bne	62900 <Mat_VarReadNextInfo5+0x24c>
   628d4:	ldr	r0, [r5, #20]
   628d8:	cmp	r0, #0
   628dc:	beq	62a14 <Mat_VarReadNextInfo5+0x360>
   628e0:	add	r0, r8, #4
   628e4:	bl	1c0c <Mat_uint32Swap>
   628e8:	mov	r6, r0
   628ec:	b	62a18 <Mat_VarReadNextInfo5+0x364>
   628f0:	ldr	r0, [pc, #1296]	; 62e08 <Mat_VarReadNextInfo5+0x754>
   628f4:	add	r0, pc, r0
   628f8:	bl	19b4 <Mat_Critical@plt>
   628fc:	b	62de4 <Mat_VarReadNextInfo5+0x730>
   62900:	lsr	r7, r0, #16
   62904:	cmp	r7, #4
   62908:	bhi	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   6290c:	uxth	r0, r0
   62910:	cmp	r0, #1
   62914:	bne	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   62918:	cmp	r7, #0
   6291c:	beq	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   62920:	add	r0, r7, #1
   62924:	bl	18d0 <malloc@plt>
   62928:	cmp	r0, #0
   6292c:	str	r0, [r4, #36]	; 0x24
   62930:	beq	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   62934:	add	r1, r8, #4
   62938:	mov	r2, r7
   6293c:	bl	181c <memcpy@plt>
   62940:	ldr	r0, [r4, #36]	; 0x24
   62944:	mov	r1, #0
   62948:	strb	r1, [r0, r7]
   6294c:	b	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   62950:	add	r7, sp, #8
   62954:	mov	r0, r5
   62958:	mov	r1, r4
   6295c:	mov	r2, r7
   62960:	bl	275c <InflateVarTag>
   62964:	mov	r6, r0
   62968:	ldr	r0, [r5, #20]
   6296c:	cmp	r0, #0
   62970:	beq	62984 <Mat_VarReadNextInfo5+0x2d0>
   62974:	mov	r0, r7
   62978:	bl	1c0c <Mat_uint32Swap>
   6297c:	orr	r0, r7, #4
   62980:	bl	1c0c <Mat_uint32Swap>
   62984:	ldr	r0, [sp, #8]
   62988:	cmp	r0, #14
   6298c:	bne	62a68 <Mat_VarReadNextInfo5+0x3b4>
   62990:	add	r6, sp, #8
   62994:	mov	r0, r5
   62998:	mov	r1, r4
   6299c:	mov	r2, r6
   629a0:	bl	28b0 <InflateArrayFlags>
   629a4:	ldr	r0, [r5, #20]
   629a8:	cmp	r0, #0
   629ac:	beq	629c8 <Mat_VarReadNextInfo5+0x314>
   629b0:	mov	r0, r6
   629b4:	bl	1c0c <Mat_uint32Swap>
   629b8:	add	r0, r6, #8
   629bc:	bl	1c0c <Mat_uint32Swap>
   629c0:	add	r0, r6, #12
   629c4:	bl	1c0c <Mat_uint32Swap>
   629c8:	ldr	r0, [sp, #8]
   629cc:	cmp	r0, #6
   629d0:	bne	62b58 <Mat_VarReadNextInfo5+0x4a4>
   629d4:	ldr	r0, [sp, #16]
   629d8:	and	r1, r0, #512	; 0x200
   629dc:	and	r2, r0, #1024	; 0x400
   629e0:	and	r3, r0, #2048	; 0x800
   629e4:	uxtb	r0, r0
   629e8:	cmp	r0, #18
   629ec:	movcs	r0, #0
   629f0:	cmp	r0, #5
   629f4:	str	r0, [r4, #16]
   629f8:	str	r3, [r4, #20]
   629fc:	str	r2, [r4, #24]
   62a00:	str	r1, [r4, #28]
   62a04:	bne	62b5c <Mat_VarReadNextInfo5+0x4a8>
   62a08:	ldr	r0, [sp, #20]
   62a0c:	str	r0, [r4]
   62a10:	b	62b64 <Mat_VarReadNextInfo5+0x4b0>
   62a14:	ldr	r6, [sp, #12]
   62a18:	ands	r0, r6, #7
   62a1c:	mov	r7, r6
   62a20:	sub	r0, r6, r0
   62a24:	addne	r7, r0, #8
   62a28:	add	r0, r7, #1
   62a2c:	bl	18d0 <malloc@plt>
   62a30:	cmp	r0, #0
   62a34:	str	r0, [r4, #36]	; 0x24
   62a38:	beq	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   62a3c:	ldr	r3, [r5]
   62a40:	mov	r1, #1
   62a44:	mov	r2, r7
   62a48:	bl	18b8 <fread@plt>
   62a4c:	mov	r1, r0
   62a50:	ldr	r0, [r4, #36]	; 0x24
   62a54:	cmp	r1, r7
   62a58:	bne	62a90 <Mat_VarReadNextInfo5+0x3dc>
   62a5c:	mov	r1, #0
   62a60:	strb	r1, [r0, r6]
   62a64:	b	62aa8 <Mat_VarReadNextInfo5+0x3f4>
   62a68:	ldr	r0, [fp, #-40]	; 0xffffffd8
   62a6c:	mov	r2, #1
   62a70:	sub	r1, r0, r6
   62a74:	ldr	r0, [r5]
   62a78:	bl	1a2c <fseek@plt>
   62a7c:	mov	r0, r4
   62a80:	bl	1918 <Mat_VarFree@plt>
   62a84:	ldr	r0, [pc, #880]	; 62dfc <Mat_VarReadNextInfo5+0x748>
   62a88:	add	r0, pc, r0
   62a8c:	b	627dc <Mat_VarReadNextInfo5+0x128>
   62a90:	bl	1804 <free@plt>
   62a94:	mov	r0, #0
   62a98:	str	r0, [r4, #36]	; 0x24
   62a9c:	ldr	r0, [pc, #864]	; 62e04 <Mat_VarReadNextInfo5+0x750>
   62aa0:	add	r0, pc, r0
   62aa4:	bl	19b4 <Mat_Critical@plt>
   62aa8:	ldr	r0, [r4, #16]
   62aac:	cmp	r0, #1
   62ab0:	beq	62ad4 <Mat_VarReadNextInfo5+0x420>
   62ab4:	cmp	r0, #16
   62ab8:	beq	62ae4 <Mat_VarReadNextInfo5+0x430>
   62abc:	cmp	r0, #2
   62ac0:	bne	62da8 <Mat_VarReadNextInfo5+0x6f4>
   62ac4:	mov	r0, r5
   62ac8:	mov	r1, r4
   62acc:	bl	62e0c <ReadNextStructField>
   62ad0:	b	62da8 <Mat_VarReadNextInfo5+0x6f4>
   62ad4:	mov	r0, r5
   62ad8:	mov	r1, r4
   62adc:	bl	63c1c <ReadNextCell>
   62ae0:	b	62da8 <Mat_VarReadNextInfo5+0x6f4>
   62ae4:	mov	r0, #1
   62ae8:	sub	r1, fp, #32
   62aec:	str	r0, [fp, #-32]	; 0xffffffe0
   62af0:	mov	r0, r4
   62af4:	bl	665f0 <SafeMulDims>
   62af8:	mov	r0, #4
   62afc:	mov	r2, #4
   62b00:	str	r0, [r4, #12]
   62b04:	mov	r0, r4
   62b08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   62b0c:	bl	6664c <SafeMul>
   62b10:	ldr	r0, [r4]
   62b14:	bl	18d0 <malloc@plt>
   62b18:	cmp	r0, #0
   62b1c:	str	r0, [r4, #40]	; 0x28
   62b20:	beq	62c3c <Mat_VarReadNextInfo5+0x588>
   62b24:	mov	r7, r0
   62b28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   62b2c:	cmp	r0, #0
   62b30:	beq	62da8 <Mat_VarReadNextInfo5+0x6f4>
   62b34:	mov	r6, #0
   62b38:	mov	r0, r5
   62b3c:	bl	1a50 <Mat_VarReadNextInfo@plt>
   62b40:	str	r0, [r7, r6, lsl #2]
   62b44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   62b48:	add	r6, r6, #1
   62b4c:	cmp	r6, r0
   62b50:	bcc	62b38 <Mat_VarReadNextInfo5+0x484>
   62b54:	b	62da8 <Mat_VarReadNextInfo5+0x6f4>
   62b58:	ldr	r0, [r4, #16]
   62b5c:	cmp	r0, #17
   62b60:	beq	62dcc <Mat_VarReadNextInfo5+0x718>
   62b64:	mov	r0, #0
   62b68:	add	r6, sp, #8
   62b6c:	mov	r1, r4
   62b70:	mov	r3, #64	; 0x40
   62b74:	str	r0, [fp, #-32]	; 0xffffffe0
   62b78:	sub	r0, fp, #32
   62b7c:	mov	r2, r6
   62b80:	str	r0, [sp]
   62b84:	mov	r0, r5
   62b88:	bl	2a04 <InflateRankDims>
   62b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   62b90:	mov	sl, #1
   62b94:	orr	r8, r7, #4
   62b98:	cmp	r0, #0
   62b9c:	addeq	r0, r6, #8
   62ba0:	moveq	sl, #0
   62ba4:	streq	r0, [fp, #-32]	; 0xffffffe0
   62ba8:	ldr	r0, [r5, #20]
   62bac:	cmp	r0, #0
   62bb0:	beq	62bc4 <Mat_VarReadNextInfo5+0x510>
   62bb4:	add	r0, sp, #8
   62bb8:	bl	1c0c <Mat_uint32Swap>
   62bbc:	mov	r0, r8
   62bc0:	bl	1c0c <Mat_uint32Swap>
   62bc4:	ldr	r0, [sp, #8]
   62bc8:	cmp	r0, #5
   62bcc:	bne	62c74 <Mat_VarReadNextInfo5+0x5c0>
   62bd0:	ldr	r0, [sp, #12]
   62bd4:	asr	r1, r0, #31
   62bd8:	add	r0, r0, r1, lsr #30
   62bdc:	asr	r1, r0, #2
   62be0:	bic	r0, r0, #3
   62be4:	str	r1, [r4, #4]
   62be8:	bl	18d0 <malloc@plt>
   62bec:	str	r0, [r4, #32]
   62bf0:	ldr	r2, [r5, #20]
   62bf4:	ldr	r1, [r4, #4]
   62bf8:	cmp	r2, #0
   62bfc:	beq	62c4c <Mat_VarReadNextInfo5+0x598>
   62c00:	cmp	r1, #1
   62c04:	blt	62c74 <Mat_VarReadNextInfo5+0x5c0>
   62c08:	mov	r6, #0
   62c0c:	mov	r7, #0
   62c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   62c14:	add	r0, r0, r6
   62c18:	bl	1c0c <Mat_uint32Swap>
   62c1c:	ldr	r1, [r4, #32]
   62c20:	add	r6, r6, #4
   62c24:	str	r0, [r1, r7, lsl #2]
   62c28:	add	r7, r7, #1
   62c2c:	ldr	r0, [r4, #4]
   62c30:	cmp	r7, r0
   62c34:	blt	62c10 <Mat_VarReadNextInfo5+0x55c>
   62c38:	b	62c74 <Mat_VarReadNextInfo5+0x5c0>
   62c3c:	mov	r0, #0
   62c40:	str	r0, [r4]
   62c44:	str	r0, [r4, #12]
   62c48:	b	62da8 <Mat_VarReadNextInfo5+0x6f4>
   62c4c:	cmp	r1, #1
   62c50:	blt	62c74 <Mat_VarReadNextInfo5+0x5c0>
   62c54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   62c58:	mov	r1, #0
   62c5c:	ldr	r3, [r2, r1, lsl #2]
   62c60:	str	r3, [r0, r1, lsl #2]
   62c64:	add	r1, r1, #1
   62c68:	ldr	r3, [r4, #4]
   62c6c:	cmp	r1, r3
   62c70:	blt	62c5c <Mat_VarReadNextInfo5+0x5a8>
   62c74:	cmp	sl, #0
   62c78:	beq	62c84 <Mat_VarReadNextInfo5+0x5d0>
   62c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   62c80:	bl	1804 <free@plt>
   62c84:	add	r2, sp, #8
   62c88:	mov	r0, r5
   62c8c:	mov	r1, r4
   62c90:	bl	2cec <InflateVarNameTag>
   62c94:	ldr	r0, [r5, #20]
   62c98:	cmp	r0, #0
   62c9c:	beq	62ca8 <Mat_VarReadNextInfo5+0x5f4>
   62ca0:	add	r0, sp, #8
   62ca4:	bl	1c0c <Mat_uint32Swap>
   62ca8:	ldr	r0, [sp, #8]
   62cac:	cmp	r0, #1
   62cb0:	bne	62cd0 <Mat_VarReadNextInfo5+0x61c>
   62cb4:	ldr	r0, [r5, #20]
   62cb8:	cmp	r0, #0
   62cbc:	beq	62d14 <Mat_VarReadNextInfo5+0x660>
   62cc0:	mov	r0, r8
   62cc4:	bl	1c0c <Mat_uint32Swap>
   62cc8:	mov	r7, r0
   62ccc:	b	62d18 <Mat_VarReadNextInfo5+0x664>
   62cd0:	lsr	r7, r0, #16
   62cd4:	cmp	r7, #4
   62cd8:	bhi	62d5c <Mat_VarReadNextInfo5+0x6a8>
   62cdc:	uxth	r0, r0
   62ce0:	cmp	r0, #1
   62ce4:	bne	62d5c <Mat_VarReadNextInfo5+0x6a8>
   62ce8:	cmp	r7, #0
   62cec:	beq	62d5c <Mat_VarReadNextInfo5+0x6a8>
   62cf0:	add	r0, r7, #1
   62cf4:	bl	18d0 <malloc@plt>
   62cf8:	cmp	r0, #0
   62cfc:	str	r0, [r4, #36]	; 0x24
   62d00:	beq	62d5c <Mat_VarReadNextInfo5+0x6a8>
   62d04:	mov	r1, r8
   62d08:	mov	r2, r7
   62d0c:	bl	181c <memcpy@plt>
   62d10:	b	62d50 <Mat_VarReadNextInfo5+0x69c>
   62d14:	ldr	r7, [sp, #12]
   62d18:	ands	r0, r7, #7
   62d1c:	mov	r6, r7
   62d20:	sub	r0, r7, r0
   62d24:	addne	r6, r0, #8
   62d28:	add	r0, r6, #1
   62d2c:	bl	18d0 <malloc@plt>
   62d30:	cmp	r0, #0
   62d34:	str	r0, [r4, #36]	; 0x24
   62d38:	beq	62d5c <Mat_VarReadNextInfo5+0x6a8>
   62d3c:	mov	r2, r0
   62d40:	mov	r0, r5
   62d44:	mov	r1, r4
   62d48:	mov	r3, r6
   62d4c:	bl	2e40 <InflateVarName>
   62d50:	ldr	r0, [r4, #36]	; 0x24
   62d54:	mov	r1, #0
   62d58:	strb	r1, [r0, r7]
   62d5c:	ldr	r0, [r4, #16]
   62d60:	cmp	r0, #1
   62d64:	beq	62d80 <Mat_VarReadNextInfo5+0x6cc>
   62d68:	cmp	r0, #2
   62d6c:	bne	62d8c <Mat_VarReadNextInfo5+0x6d8>
   62d70:	mov	r0, r5
   62d74:	mov	r1, r4
   62d78:	bl	62e0c <ReadNextStructField>
   62d7c:	b	62d8c <Mat_VarReadNextInfo5+0x6d8>
   62d80:	mov	r0, r5
   62d84:	mov	r1, r4
   62d88:	bl	63c1c <ReadNextCell>
   62d8c:	ldr	r1, [r4, #52]	; 0x34
   62d90:	ldr	r0, [r5]
   62d94:	mov	r2, #1
   62d98:	ldr	r1, [r1, #12]
   62d9c:	ldr	r1, [r1, #4]
   62da0:	rsb	r1, r1, #0
   62da4:	bl	1a2c <fseek@plt>
   62da8:	ldr	r0, [r5]
   62dac:	bl	1840 <ftell@plt>
   62db0:	ldr	r1, [r4, #52]	; 0x34
   62db4:	cmn	r0, #1
   62db8:	str	r0, [r1]
   62dbc:	bne	62dcc <Mat_VarReadNextInfo5+0x718>
   62dc0:	ldr	r0, [pc, #56]	; 62e00 <Mat_VarReadNextInfo5+0x74c>
   62dc4:	add	r0, pc, r0
   62dc8:	bl	19b4 <Mat_Critical@plt>
   62dcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   62dd0:	mov	r2, #0
   62dd4:	add	r0, r9, r0
   62dd8:	add	r1, r0, #8
   62ddc:	ldr	r0, [r5]
   62de0:	bl	1a2c <fseek@plt>
   62de4:	mov	r0, r4
   62de8:	sub	sp, fp, #28
   62dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   62df0:	.word	0x000095b4
   62df4:	.word	0x00009849
   62df8:	.word	0x0000983c
   62dfc:	.word	0x00009617
   62e00:	.word	0x00008fc8
   62e04:	.word	0x00009578
   62e08:	.word	0x0000974e

00062e0c <ReadNextStructField>:
   62e0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   62e10:	add	fp, sp, #28
   62e14:	sub	sp, sp, #124	; 0x7c
   62e18:	mov	r9, r1
   62e1c:	mov	r5, r0
   62e20:	mov	r0, #1
   62e24:	sub	r1, fp, #32
   62e28:	str	r0, [fp, #-32]	; 0xffffffe0
   62e2c:	mov	r0, r9
   62e30:	bl	665f0 <SafeMulDims>
   62e34:	cmp	r0, #0
   62e38:	beq	62e50 <ReadNextStructField+0x44>
   62e3c:	ldr	r0, [pc, #3492]	; 63be8 <ReadNextStructField+0xddc>
   62e40:	add	r0, pc, r0
   62e44:	bl	19b4 <Mat_Critical@plt>
   62e48:	mov	r7, #0
   62e4c:	b	6323c <ReadNextStructField+0x430>
   62e50:	ldr	r0, [r9, #48]	; 0x30
   62e54:	str	r5, [sp, #32]
   62e58:	cmp	r0, #1
   62e5c:	bne	62f3c <ReadNextStructField+0x130>
   62e60:	vmov.i32	q8, #0	; 0x00000000
   62e64:	add	r4, sp, #48	; 0x30
   62e68:	mov	r0, #48	; 0x30
   62e6c:	mov	r1, r4
   62e70:	mov	r2, r4
   62e74:	vst1.64	{d16-d17}, [r1], r0
   62e78:	add	r0, r4, #32
   62e7c:	vst1.64	{d16-d17}, [r0]
   62e80:	add	r0, r4, #16
   62e84:	vst1.64	{d16-d17}, [r1]
   62e88:	mov	r1, r9
   62e8c:	vst1.64	{d16-d17}, [r0]
   62e90:	mov	r0, r5
   62e94:	bl	33d0 <InflateFieldNameLength>
   62e98:	mov	r7, r0
   62e9c:	ldr	r0, [r5, #20]
   62ea0:	cmp	r0, #0
   62ea4:	beq	62eb8 <ReadNextStructField+0xac>
   62ea8:	mov	r0, r4
   62eac:	bl	1c0c <Mat_uint32Swap>
   62eb0:	orr	r0, r4, #4
   62eb4:	bl	1c0c <Mat_uint32Swap>
   62eb8:	ldrh	r0, [sp, #48]	; 0x30
   62ebc:	cmp	r0, #5
   62ec0:	bne	62ff8 <ReadNextStructField+0x1ec>
   62ec4:	ldr	r8, [sp, #52]	; 0x34
   62ec8:	mov	r0, r5
   62ecc:	mov	r1, r9
   62ed0:	mov	r2, r4
   62ed4:	bl	3524 <InflateFieldNamesTag>
   62ed8:	mov	r6, r0
   62edc:	ldr	r0, [r5, #20]
   62ee0:	orr	sl, r4, #4
   62ee4:	cmp	r0, #0
   62ee8:	beq	62efc <ReadNextStructField+0xf0>
   62eec:	add	r0, sp, #48	; 0x30
   62ef0:	bl	1c0c <Mat_uint32Swap>
   62ef4:	mov	r0, sl
   62ef8:	bl	1c0c <Mat_uint32Swap>
   62efc:	ldr	r1, [sp, #52]	; 0x34
   62f00:	add	r7, r6, r7
   62f04:	mov	r0, #4
   62f08:	str	r0, [r9, #12]
   62f0c:	udiv	r6, r1, r8
   62f10:	str	r1, [sp, #28]
   62f14:	mul	r0, r6, r8
   62f18:	ands	r4, r0, #7
   62f1c:	rsbne	r4, r4, #8
   62f20:	cmp	r8, r1
   62f24:	bls	63010 <ReadNextStructField+0x204>
   62f28:	ldr	r0, [r9, #52]	; 0x34
   62f2c:	mov	r1, #0
   62f30:	str	r1, [r0, #4]
   62f34:	str	r1, [r0, #8]
   62f38:	b	631fc <ReadNextStructField+0x3f0>
   62f3c:	ldr	r3, [r5]
   62f40:	add	r6, sp, #48	; 0x30
   62f44:	mov	r1, #4
   62f48:	mov	r2, #2
   62f4c:	mov	r0, r6
   62f50:	bl	18b8 <fread@plt>
   62f54:	mov	r7, r0
   62f58:	ldr	r0, [r5, #20]
   62f5c:	cmp	r0, #0
   62f60:	beq	62f74 <ReadNextStructField+0x168>
   62f64:	mov	r0, r6
   62f68:	bl	1c0c <Mat_uint32Swap>
   62f6c:	add	r0, r6, #4
   62f70:	bl	1c0c <Mat_uint32Swap>
   62f74:	ldrh	r0, [sp, #48]	; 0x30
   62f78:	cmp	r0, #5
   62f7c:	bne	63004 <ReadNextStructField+0x1f8>
   62f80:	ldr	r3, [r5]
   62f84:	ldr	r4, [sp, #52]	; 0x34
   62f88:	mov	r0, r6
   62f8c:	mov	r1, #4
   62f90:	mov	r2, #2
   62f94:	mov	r8, #4
   62f98:	bl	18b8 <fread@plt>
   62f9c:	mov	sl, r0
   62fa0:	ldr	r0, [r5, #20]
   62fa4:	add	r6, r6, #4
   62fa8:	cmp	r0, #0
   62fac:	beq	62fc0 <ReadNextStructField+0x1b4>
   62fb0:	add	r0, sp, #48	; 0x30
   62fb4:	bl	1c0c <Mat_uint32Swap>
   62fb8:	mov	r0, r6
   62fbc:	bl	1c0c <Mat_uint32Swap>
   62fc0:	ldr	r0, [sp, #52]	; 0x34
   62fc4:	add	r7, sl, r7
   62fc8:	str	r8, [r9, #12]
   62fcc:	str	r6, [sp, #24]
   62fd0:	ldr	r5, [r9, #52]	; 0x34
   62fd4:	str	r7, [sp, #40]	; 0x28
   62fd8:	udiv	sl, r0, r4
   62fdc:	cmp	r4, r0
   62fe0:	str	r0, [sp, #28]
   62fe4:	bls	630dc <ReadNextStructField+0x2d0>
   62fe8:	mov	r0, #0
   62fec:	str	r0, [r5, #4]
   62ff0:	str	r0, [r5, #8]
   62ff4:	b	63170 <ReadNextStructField+0x364>
   62ff8:	ldr	r4, [pc, #3052]	; 63bec <ReadNextStructField+0xde0>
   62ffc:	add	r4, pc, r4
   63000:	b	63234 <ReadNextStructField+0x428>
   63004:	ldr	r0, [pc, #3084]	; 63c18 <ReadNextStructField+0xe0c>
   63008:	add	r0, pc, r0
   6300c:	b	63238 <ReadNextStructField+0x42c>
   63010:	add	r0, r4, r0
   63014:	str	sl, [sp, #24]
   63018:	bl	18d0 <malloc@plt>
   6301c:	cmp	r0, #0
   63020:	beq	631f8 <ReadNextStructField+0x3ec>
   63024:	mov	sl, r0
   63028:	mov	r0, r5
   6302c:	mov	r1, r9
   63030:	mov	r3, r6
   63034:	str	r7, [sp, #40]	; 0x28
   63038:	str	r8, [sp]
   6303c:	str	r4, [sp, #4]
   63040:	mov	r2, sl
   63044:	bl	3678 <InflateFieldNames>
   63048:	ldr	r4, [r9, #52]	; 0x34
   6304c:	str	r0, [sp, #36]	; 0x24
   63050:	mov	r0, r6
   63054:	mov	r1, #4
   63058:	str	r6, [r4, #4]
   6305c:	bl	1798 <calloc@plt>
   63060:	cmp	r0, #0
   63064:	mov	r5, sl
   63068:	str	r0, [r4, #8]
   6306c:	beq	631e4 <ReadNextStructField+0x3d8>
   63070:	sub	r4, r8, #1
   63074:	mov	r7, r5
   63078:	mov	sl, #0
   6307c:	b	63090 <ReadNextStructField+0x284>
   63080:	add	sl, sl, #1
   63084:	add	r7, r7, r8
   63088:	cmp	sl, r6
   6308c:	bcs	631e4 <ReadNextStructField+0x3d8>
   63090:	mov	r0, r8
   63094:	bl	18d0 <malloc@plt>
   63098:	ldr	r1, [r9, #52]	; 0x34
   6309c:	ldr	r1, [r1, #8]
   630a0:	str	r0, [r1, sl, lsl #2]
   630a4:	ldr	r0, [r9, #52]	; 0x34
   630a8:	ldr	r0, [r0, #8]
   630ac:	ldr	r0, [r0, sl, lsl #2]
   630b0:	cmp	r0, #0
   630b4:	beq	63080 <ReadNextStructField+0x274>
   630b8:	mov	r1, r7
   630bc:	mov	r2, r8
   630c0:	bl	181c <memcpy@plt>
   630c4:	ldr	r0, [r9, #52]	; 0x34
   630c8:	mov	r1, #0
   630cc:	ldr	r0, [r0, #8]
   630d0:	ldr	r0, [r0, sl, lsl #2]
   630d4:	strb	r1, [r0, r4]
   630d8:	b	63080 <ReadNextStructField+0x274>
   630dc:	mov	r0, sl
   630e0:	mov	r1, #4
   630e4:	str	sl, [r5, #4]
   630e8:	bl	1798 <calloc@plt>
   630ec:	cmp	r0, #0
   630f0:	str	r0, [r5, #8]
   630f4:	beq	63170 <ReadNextStructField+0x364>
   630f8:	ldr	r5, [sp, #32]
   630fc:	sub	r7, r4, #1
   63100:	mov	r6, #0
   63104:	mov	r8, #0
   63108:	b	63118 <ReadNextStructField+0x30c>
   6310c:	add	r8, r8, #1
   63110:	cmp	r8, sl
   63114:	bcs	63174 <ReadNextStructField+0x368>
   63118:	mov	r0, r4
   6311c:	bl	18d0 <malloc@plt>
   63120:	ldr	r1, [r9, #52]	; 0x34
   63124:	ldr	r1, [r1, #8]
   63128:	str	r0, [r1, r8, lsl #2]
   6312c:	ldr	r0, [r9, #52]	; 0x34
   63130:	ldr	r0, [r0, #8]
   63134:	ldr	r0, [r0, r8, lsl #2]
   63138:	cmp	r0, #0
   6313c:	beq	6310c <ReadNextStructField+0x300>
   63140:	ldr	r3, [r5]
   63144:	mov	r1, #1
   63148:	mov	r2, r4
   6314c:	bl	18b8 <fread@plt>
   63150:	ldr	r1, [r9, #52]	; 0x34
   63154:	ldr	r1, [r1, #8]
   63158:	ldr	r1, [r1, r8, lsl #2]
   6315c:	strb	r6, [r1, r7]
   63160:	ldr	r1, [sp, #40]	; 0x28
   63164:	add	r1, r0, r1
   63168:	str	r1, [sp, #40]	; 0x28
   6316c:	b	6310c <ReadNextStructField+0x300>
   63170:	ldr	r5, [sp, #32]
   63174:	mul	r0, sl, r4
   63178:	ands	r1, r0, #7
   6317c:	beq	631a0 <ReadNextStructField+0x394>
   63180:	ldr	r0, [r5]
   63184:	rsb	r7, r1, #8
   63188:	mov	r2, #1
   6318c:	mov	r1, r7
   63190:	bl	1a2c <fseek@plt>
   63194:	ldr	r0, [sp, #40]	; 0x28
   63198:	add	r0, r0, r7
   6319c:	str	r0, [sp, #40]	; 0x28
   631a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   631a4:	sub	r0, fp, #36	; 0x24
   631a8:	mov	r2, sl
   631ac:	bl	6664c <SafeMul>
   631b0:	cmp	r0, #0
   631b4:	bne	631d0 <ReadNextStructField+0x3c4>
   631b8:	ldr	r2, [r9, #12]
   631bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   631c0:	mov	r0, r9
   631c4:	bl	6664c <SafeMul>
   631c8:	cmp	r0, #0
   631cc:	beq	63248 <ReadNextStructField+0x43c>
   631d0:	ldr	r0, [pc, #2612]	; 63c0c <ReadNextStructField+0xe00>
   631d4:	add	r0, pc, r0
   631d8:	bl	19b4 <Mat_Critical@plt>
   631dc:	ldr	r7, [sp, #40]	; 0x28
   631e0:	b	6323c <ReadNextStructField+0x430>
   631e4:	ldr	r7, [sp, #40]	; 0x28
   631e8:	ldr	r0, [sp, #36]	; 0x24
   631ec:	add	r7, r0, r7
   631f0:	mov	r0, r5
   631f4:	bl	1804 <free@plt>
   631f8:	ldr	sl, [sp, #24]
   631fc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63200:	sub	r0, fp, #36	; 0x24
   63204:	mov	r2, r6
   63208:	bl	6664c <SafeMul>
   6320c:	ldr	r4, [pc, #2524]	; 63bf0 <ReadNextStructField+0xde4>
   63210:	cmp	r0, #0
   63214:	add	r4, pc, r4
   63218:	bne	63234 <ReadNextStructField+0x428>
   6321c:	ldr	r2, [r9, #12]
   63220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   63224:	mov	r0, r9
   63228:	bl	6664c <SafeMul>
   6322c:	cmp	r0, #0
   63230:	beq	632c8 <ReadNextStructField+0x4bc>
   63234:	mov	r0, r4
   63238:	bl	19b4 <Mat_Critical@plt>
   6323c:	mov	r0, r7
   63240:	sub	sp, fp, #28
   63244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   63248:	ldr	r0, [r9]
   6324c:	cmp	r0, #0
   63250:	beq	63bac <ReadNextStructField+0xda0>
   63254:	bl	18d0 <malloc@plt>
   63258:	cmp	r0, #0
   6325c:	str	r0, [r9, #40]	; 0x28
   63260:	beq	63bac <ReadNextStructField+0xda0>
   63264:	str	r0, [sp, #36]	; 0x24
   63268:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6326c:	cmp	r0, #0
   63270:	beq	633d4 <ReadNextStructField+0x5c8>
   63274:	mov	r6, #0
   63278:	str	r4, [sp, #20]
   6327c:	b	6328c <ReadNextStructField+0x480>
   63280:	add	r6, r6, #1
   63284:	cmp	r6, r0
   63288:	bcs	63358 <ReadNextStructField+0x54c>
   6328c:	ldr	r1, [sp, #28]
   63290:	cmp	r4, r1
   63294:	bhi	63280 <ReadNextStructField+0x474>
   63298:	ldr	r4, [sp, #36]	; 0x24
   6329c:	mul	r5, r6, sl
   632a0:	mov	r7, #0
   632a4:	add	r8, r7, r5
   632a8:	bl	18a0 <Mat_VarCalloc@plt>
   632ac:	add	r7, r7, #1
   632b0:	str	r0, [r4, r8, lsl #2]
   632b4:	cmp	r7, sl
   632b8:	bcc	632a4 <ReadNextStructField+0x498>
   632bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   632c0:	ldr	r4, [sp, #20]
   632c4:	b	63280 <ReadNextStructField+0x474>
   632c8:	ldr	r0, [r9]
   632cc:	cmp	r0, #0
   632d0:	beq	6323c <ReadNextStructField+0x430>
   632d4:	ldr	r1, [r9, #12]
   632d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   632dc:	bl	1798 <calloc@plt>
   632e0:	cmp	r0, #0
   632e4:	str	r0, [r9, #40]	; 0x28
   632e8:	str	r0, [sp, #36]	; 0x24
   632ec:	beq	63618 <ReadNextStructField+0x80c>
   632f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   632f4:	str	sl, [sp, #24]
   632f8:	str	r7, [sp, #40]	; 0x28
   632fc:	cmp	r0, #0
   63300:	beq	63624 <ReadNextStructField+0x818>
   63304:	mov	r7, #0
   63308:	str	r8, [sp, #20]
   6330c:	b	6331c <ReadNextStructField+0x510>
   63310:	add	r7, r7, #1
   63314:	cmp	r7, r0
   63318:	bcs	63628 <ReadNextStructField+0x81c>
   6331c:	ldr	r1, [sp, #28]
   63320:	cmp	r8, r1
   63324:	bhi	63310 <ReadNextStructField+0x504>
   63328:	ldr	r8, [sp, #36]	; 0x24
   6332c:	mul	r4, r7, r6
   63330:	mov	r5, #0
   63334:	add	sl, r5, r4
   63338:	bl	18a0 <Mat_VarCalloc@plt>
   6333c:	add	r5, r5, #1
   63340:	str	r0, [r8, sl, lsl #2]
   63344:	cmp	r5, r6
   63348:	bcc	63334 <ReadNextStructField+0x528>
   6334c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63350:	ldr	r8, [sp, #20]
   63354:	b	63310 <ReadNextStructField+0x504>
   63358:	ldr	r1, [r9, #52]	; 0x34
   6335c:	ldr	r1, [r1, #8]
   63360:	cmp	r1, #0
   63364:	cmpne	r0, #0
   63368:	beq	633d4 <ReadNextStructField+0x5c8>
   6336c:	mov	r8, #0
   63370:	b	63384 <ReadNextStructField+0x578>
   63374:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63378:	add	r8, r8, #1
   6337c:	cmp	r8, r0
   63380:	bcs	633d4 <ReadNextStructField+0x5c8>
   63384:	ldr	r0, [sp, #28]
   63388:	cmp	r4, r0
   6338c:	bhi	63374 <ReadNextStructField+0x568>
   63390:	mul	r6, r8, sl
   63394:	mov	r5, #0
   63398:	b	633a8 <ReadNextStructField+0x59c>
   6339c:	add	r5, r5, #1
   633a0:	cmp	r5, sl
   633a4:	bcs	63374 <ReadNextStructField+0x568>
   633a8:	ldr	r0, [r9, #52]	; 0x34
   633ac:	ldr	r0, [r0, #8]
   633b0:	ldr	r0, [r0, r5, lsl #2]
   633b4:	cmp	r0, #0
   633b8:	beq	6339c <ReadNextStructField+0x590>
   633bc:	add	r7, r5, r6
   633c0:	bl	1864 <strdup@plt>
   633c4:	ldr	r1, [sp, #36]	; 0x24
   633c8:	ldr	r1, [r1, r7, lsl #2]
   633cc:	str	r0, [r1, #36]	; 0x24
   633d0:	b	6339c <ReadNextStructField+0x590>
   633d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   633d8:	ldr	r7, [sp, #40]	; 0x28
   633dc:	cmp	r0, #0
   633e0:	beq	6323c <ReadNextStructField+0x430>
   633e4:	add	r6, sp, #48	; 0x30
   633e8:	ldr	r5, [sp, #32]
   633ec:	ldr	r8, [sp, #36]	; 0x24
   633f0:	mov	r4, #0
   633f4:	add	r0, r6, #20
   633f8:	str	r0, [sp, #12]
   633fc:	add	r0, r6, #16
   63400:	str	r0, [sp, #28]
   63404:	add	r0, r6, #12
   63408:	str	r0, [sp, #20]
   6340c:	add	r0, r6, #8
   63410:	str	r0, [sp, #16]
   63414:	b	63440 <ReadNextStructField+0x634>
   63418:	ldr	r0, [r8, r4, lsl #2]
   6341c:	ldr	r0, [r0, #52]	; 0x34
   63420:	bl	1804 <free@plt>
   63424:	ldr	r0, [r8, r4, lsl #2]
   63428:	mov	r1, #0
   6342c:	str	r1, [r0, #52]	; 0x34
   63430:	ldr	r0, [fp, #-36]	; 0xffffffdc
   63434:	add	r4, r4, #1
   63438:	cmp	r4, r0
   6343c:	bcs	6323c <ReadNextStructField+0x430>
   63440:	ldr	r3, [r5]
   63444:	mov	r0, r6
   63448:	mov	r1, #4
   6344c:	mov	r2, #2
   63450:	bl	18b8 <fread@plt>
   63454:	mov	r1, r5
   63458:	mov	r5, r0
   6345c:	ldr	r0, [r1, #20]
   63460:	cmp	r0, #0
   63464:	beq	63478 <ReadNextStructField+0x66c>
   63468:	mov	r0, r6
   6346c:	bl	1c0c <Mat_uint32Swap>
   63470:	ldr	r0, [sp, #24]
   63474:	bl	1c0c <Mat_uint32Swap>
   63478:	ldr	r0, [sp, #48]	; 0x30
   6347c:	add	r7, r5, r7
   63480:	cmp	r0, #14
   63484:	bne	63bb4 <ReadNextStructField+0xda8>
   63488:	ldr	r9, [sp, #52]	; 0x34
   6348c:	ldr	r5, [sp, #32]
   63490:	cmp	r9, #0
   63494:	beq	63418 <ReadNextStructField+0x60c>
   63498:	ldr	r3, [r5]
   6349c:	mov	r0, r6
   634a0:	mov	r1, #4
   634a4:	mov	r2, #6
   634a8:	bl	18b8 <fread@plt>
   634ac:	mov	r1, r5
   634b0:	mov	r5, r0
   634b4:	ldr	r0, [r1, #20]
   634b8:	cmp	r0, #0
   634bc:	beq	634f0 <ReadNextStructField+0x6e4>
   634c0:	mov	r0, r6
   634c4:	bl	1c0c <Mat_uint32Swap>
   634c8:	ldr	r0, [sp, #24]
   634cc:	bl	1c0c <Mat_uint32Swap>
   634d0:	ldr	r0, [sp, #16]
   634d4:	bl	1c0c <Mat_uint32Swap>
   634d8:	ldr	r0, [sp, #20]
   634dc:	bl	1c0c <Mat_uint32Swap>
   634e0:	ldr	r0, [sp, #28]
   634e4:	bl	1c0c <Mat_uint32Swap>
   634e8:	ldr	r0, [sp, #12]
   634ec:	bl	1c0c <Mat_uint32Swap>
   634f0:	ldr	r0, [sp, #48]	; 0x30
   634f4:	add	r6, r5, r7
   634f8:	cmp	r0, #6
   634fc:	bne	63548 <ReadNextStructField+0x73c>
   63500:	ldr	r0, [sp, #56]	; 0x38
   63504:	ldr	r1, [r8, r4, lsl #2]
   63508:	mov	r5, #0
   6350c:	and	r2, r0, #512	; 0x200
   63510:	and	r3, r0, #1024	; 0x400
   63514:	and	r7, r0, #2048	; 0x800
   63518:	uxtb	r0, r0
   6351c:	cmp	r0, #18
   63520:	movcs	r0, r5
   63524:	ldr	r5, [sp, #32]
   63528:	str	r0, [r1, #16]
   6352c:	str	r7, [r1, #20]
   63530:	str	r3, [r1, #24]
   63534:	str	r2, [r1, #28]
   63538:	cmp	r0, #5
   6353c:	ldreq	r0, [sp, #60]	; 0x3c
   63540:	streq	r0, [r1]
   63544:	b	63550 <ReadNextStructField+0x744>
   63548:	ldr	r1, [r8, r4, lsl #2]
   6354c:	ldr	r5, [sp, #32]
   63550:	ldr	r2, [sp, #64]	; 0x40
   63554:	ldr	r3, [sp, #68]	; 0x44
   63558:	mov	r0, r5
   6355c:	bl	6466c <ReadRankDims>
   63560:	ldr	r3, [r5]
   63564:	mov	sl, r0
   63568:	add	r0, sp, #48	; 0x30
   6356c:	mov	r1, #1
   63570:	mov	r2, #8
   63574:	bl	18b8 <fread@plt>
   63578:	mov	r1, r5
   6357c:	mov	r5, r0
   63580:	ldr	r0, [r1]
   63584:	bl	1840 <ftell@plt>
   63588:	ldr	r1, [r8, r4, lsl #2]
   6358c:	cmn	r0, #1
   63590:	ldr	r2, [r1, #52]	; 0x34
   63594:	str	r0, [r2]
   63598:	add	r2, r6, sl
   6359c:	add	r7, r2, r5
   635a0:	beq	635c8 <ReadNextStructField+0x7bc>
   635a4:	ldr	r0, [r1, #16]
   635a8:	cmp	r0, #1
   635ac:	beq	635dc <ReadNextStructField+0x7d0>
   635b0:	ldr	r5, [sp, #32]
   635b4:	cmp	r0, #2
   635b8:	bne	635ec <ReadNextStructField+0x7e0>
   635bc:	mov	r0, r5
   635c0:	bl	62e0c <ReadNextStructField>
   635c4:	b	635e8 <ReadNextStructField+0x7dc>
   635c8:	ldr	r0, [pc, #1604]	; 63c14 <ReadNextStructField+0xe08>
   635cc:	add	r0, pc, r0
   635d0:	bl	19b4 <Mat_Critical@plt>
   635d4:	ldr	r5, [sp, #32]
   635d8:	b	63610 <ReadNextStructField+0x804>
   635dc:	ldr	r5, [sp, #32]
   635e0:	mov	r0, r5
   635e4:	bl	63c1c <ReadNextCell>
   635e8:	add	r7, r0, r7
   635ec:	ldr	r1, [r8, r4, lsl #2]
   635f0:	sub	r0, r9, sl
   635f4:	mov	r2, #0
   635f8:	ldr	r1, [r1, #52]	; 0x34
   635fc:	ldr	r1, [r1]
   63600:	add	r0, r0, r1
   63604:	sub	r1, r0, #32
   63608:	ldr	r0, [r5]
   6360c:	bl	1a2c <fseek@plt>
   63610:	add	r6, sp, #48	; 0x30
   63614:	b	63430 <ReadNextStructField+0x624>
   63618:	ldr	r4, [pc, #1492]	; 63bf4 <ReadNextStructField+0xde8>
   6361c:	add	r4, pc, r4
   63620:	b	63234 <ReadNextStructField+0x428>
   63624:	mov	r0, #0
   63628:	ldr	r1, [r9, #52]	; 0x34
   6362c:	ldr	r1, [r1, #8]
   63630:	cmp	r1, #0
   63634:	cmpne	r0, #0
   63638:	beq	636a4 <ReadNextStructField+0x898>
   6363c:	mov	sl, #0
   63640:	b	63654 <ReadNextStructField+0x848>
   63644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63648:	add	sl, sl, #1
   6364c:	cmp	sl, r0
   63650:	bcs	636a4 <ReadNextStructField+0x898>
   63654:	ldr	r0, [sp, #28]
   63658:	cmp	r8, r0
   6365c:	bhi	63644 <ReadNextStructField+0x838>
   63660:	mul	r4, sl, r6
   63664:	mov	r5, #0
   63668:	b	63678 <ReadNextStructField+0x86c>
   6366c:	add	r5, r5, #1
   63670:	cmp	r5, r6
   63674:	bcs	63644 <ReadNextStructField+0x838>
   63678:	ldr	r0, [r9, #52]	; 0x34
   6367c:	ldr	r0, [r0, #8]
   63680:	ldr	r0, [r0, r5, lsl #2]
   63684:	cmp	r0, #0
   63688:	beq	6366c <ReadNextStructField+0x860>
   6368c:	add	r7, r5, r4
   63690:	bl	1864 <strdup@plt>
   63694:	ldr	r1, [sp, #36]	; 0x24
   63698:	ldr	r1, [r1, r7, lsl #2]
   6369c:	str	r0, [r1, #36]	; 0x24
   636a0:	b	6366c <ReadNextStructField+0x860>
   636a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   636a8:	cmp	r0, #0
   636ac:	beq	63bac <ReadNextStructField+0xda0>
   636b0:	ldr	r7, [sp, #40]	; 0x28
   636b4:	ldr	sl, [sp, #24]
   636b8:	add	r5, sp, #48	; 0x30
   636bc:	mov	r8, #0
   636c0:	add	r0, r5, #12
   636c4:	str	r0, [sp, #20]
   636c8:	add	r0, r5, #8
   636cc:	str	r0, [sp, #28]
   636d0:	b	63708 <ReadNextStructField+0x8fc>
   636d4:	ldr	r4, [sp, #36]	; 0x24
   636d8:	ldr	r0, [r4, r8, lsl #2]
   636dc:	bl	1918 <Mat_VarFree@plt>
   636e0:	mov	r0, #0
   636e4:	mov	r1, r8
   636e8:	str	r0, [r4, r8, lsl #2]
   636ec:	ldr	r0, [pc, #1284]	; 63bf8 <ReadNextStructField+0xdec>
   636f0:	add	r0, pc, r0
   636f4:	bl	19b4 <Mat_Critical@plt>
   636f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   636fc:	add	r8, r8, #1
   63700:	cmp	r8, r0
   63704:	bcs	6323c <ReadNextStructField+0x430>
   63708:	ldr	r6, [sp, #32]
   6370c:	mov	r1, r9
   63710:	mov	r2, r5
   63714:	mov	r0, r6
   63718:	bl	275c <InflateVarTag>
   6371c:	mov	r4, r0
   63720:	ldr	r0, [r6, #20]
   63724:	cmp	r0, #0
   63728:	beq	6373c <ReadNextStructField+0x930>
   6372c:	mov	r0, r5
   63730:	bl	1c0c <Mat_uint32Swap>
   63734:	mov	r0, sl
   63738:	bl	1c0c <Mat_uint32Swap>
   6373c:	ldr	r0, [sp, #48]	; 0x30
   63740:	add	r7, r4, r7
   63744:	cmp	r0, #14
   63748:	bne	636d4 <ReadNextStructField+0x8c8>
   6374c:	ldr	r4, [sp, #36]	; 0x24
   63750:	ldr	sl, [sp, #52]	; 0x34
   63754:	ldr	r0, [r4, r8, lsl #2]
   63758:	cmp	sl, #0
   6375c:	beq	63818 <ReadNextStructField+0xa0c>
   63760:	ldr	r6, [sp, #32]
   63764:	mov	r1, #1
   63768:	add	r5, sp, #48	; 0x30
   6376c:	str	r1, [r0, #48]	; 0x30
   63770:	mov	r1, r9
   63774:	mov	r2, r5
   63778:	mov	r0, r6
   6377c:	bl	28b0 <InflateArrayFlags>
   63780:	mov	r4, r0
   63784:	ldr	r0, [r6, #20]
   63788:	cmp	r0, #0
   6378c:	beq	637b0 <ReadNextStructField+0x9a4>
   63790:	mov	r0, r5
   63794:	bl	1c0c <Mat_uint32Swap>
   63798:	ldr	r0, [sp, #24]
   6379c:	bl	1c0c <Mat_uint32Swap>
   637a0:	ldr	r0, [sp, #28]
   637a4:	bl	1c0c <Mat_uint32Swap>
   637a8:	ldr	r0, [sp, #20]
   637ac:	bl	1c0c <Mat_uint32Swap>
   637b0:	ldr	r1, [sp, #48]	; 0x30
   637b4:	add	r7, r4, r7
   637b8:	sub	r4, sl, #16
   637bc:	cmp	r1, #6
   637c0:	bne	63830 <ReadNextStructField+0xa24>
   637c4:	ldr	r0, [sp, #36]	; 0x24
   637c8:	mov	r5, r7
   637cc:	mov	r6, #0
   637d0:	ldr	r1, [r0, r8, lsl #2]
   637d4:	ldr	r0, [sp, #56]	; 0x38
   637d8:	and	r2, r0, #512	; 0x200
   637dc:	and	r3, r0, #1024	; 0x400
   637e0:	and	r7, r0, #2048	; 0x800
   637e4:	uxtb	r0, r0
   637e8:	cmp	r0, #18
   637ec:	movcs	r0, r6
   637f0:	cmp	r0, #5
   637f4:	str	r0, [r1, #16]
   637f8:	str	r7, [r1, #20]
   637fc:	str	r3, [r1, #24]
   63800:	str	r2, [r1, #28]
   63804:	bne	6386c <ReadNextStructField+0xa60>
   63808:	ldr	r0, [sp, #60]	; 0x3c
   6380c:	mov	r7, r5
   63810:	str	r0, [r1]
   63814:	b	63878 <ReadNextStructField+0xa6c>
   63818:	ldr	r0, [r0, #52]	; 0x34
   6381c:	bl	1804 <free@plt>
   63820:	ldr	r0, [r4, r8, lsl #2]
   63824:	mov	r1, #0
   63828:	str	r1, [r0, #52]	; 0x34
   6382c:	b	63ba0 <ReadNextStructField+0xd94>
   63830:	ldr	r0, [pc, #964]	; 63bfc <ReadNextStructField+0xdf0>
   63834:	add	r0, pc, r0
   63838:	bl	19b4 <Mat_Critical@plt>
   6383c:	ldr	r0, [r9, #52]	; 0x34
   63840:	mov	r2, r4
   63844:	ldr	r1, [r0, #12]
   63848:	ldr	r0, [sp, #32]
   6384c:	bl	2394 <InflateSkip>
   63850:	add	r7, r0, r7
   63854:	ldr	r0, [sp, #36]	; 0x24
   63858:	ldr	r0, [r0, r8, lsl #2]
   6385c:	ldr	r0, [r0, #16]
   63860:	cmp	r0, #17
   63864:	bne	63878 <ReadNextStructField+0xa6c>
   63868:	b	63b88 <ReadNextStructField+0xd7c>
   6386c:	mov	r7, r5
   63870:	cmp	r0, #17
   63874:	beq	63b88 <ReadNextStructField+0xd7c>
   63878:	ldr	r4, [sp, #32]
   6387c:	mov	r0, #0
   63880:	mov	r1, r9
   63884:	add	r2, sp, #48	; 0x30
   63888:	mov	r3, #64	; 0x40
   6388c:	str	r0, [sp, #44]	; 0x2c
   63890:	add	r0, sp, #44	; 0x2c
   63894:	str	r0, [sp]
   63898:	mov	r0, r4
   6389c:	bl	2a04 <InflateRankDims>
   638a0:	mov	r5, r0
   638a4:	ldr	r0, [sp, #44]	; 0x2c
   638a8:	mov	r1, #1
   638ac:	cmp	r0, #0
   638b0:	bne	638c0 <ReadNextStructField+0xab4>
   638b4:	ldr	r0, [sp, #28]
   638b8:	mov	r1, #0
   638bc:	str	r0, [sp, #44]	; 0x2c
   638c0:	ldr	r0, [r4, #20]
   638c4:	str	r1, [sp, #40]	; 0x28
   638c8:	cmp	r0, #0
   638cc:	beq	638e0 <ReadNextStructField+0xad4>
   638d0:	add	r0, sp, #48	; 0x30
   638d4:	bl	1c0c <Mat_uint32Swap>
   638d8:	ldr	r0, [sp, #24]
   638dc:	bl	1c0c <Mat_uint32Swap>
   638e0:	ldr	r0, [sp, #48]	; 0x30
   638e4:	sub	r6, sl, #24
   638e8:	cmp	r0, #5
   638ec:	bne	63988 <ReadNextStructField+0xb7c>
   638f0:	str	r5, [sp, #12]
   638f4:	str	r7, [sp, #16]
   638f8:	ldr	r5, [sp, #36]	; 0x24
   638fc:	ldr	r7, [sp, #52]	; 0x34
   63900:	asr	r0, r7, #31
   63904:	ldr	r4, [r5, r8, lsl #2]
   63908:	add	r0, r7, r0, lsr #30
   6390c:	asr	r1, r0, #2
   63910:	bic	r0, r0, #3
   63914:	str	r1, [r4, #4]
   63918:	bl	18d0 <malloc@plt>
   6391c:	str	r0, [r4, #32]
   63920:	ldr	r2, [sp, #32]
   63924:	sub	r6, r6, r7
   63928:	add	sl, sp, #48	; 0x30
   6392c:	ldr	r1, [r5, r8, lsl #2]
   63930:	ldr	r2, [r2, #20]
   63934:	ldr	r0, [r1, #4]
   63938:	cmp	r2, #0
   6393c:	beq	63990 <ReadNextStructField+0xb84>
   63940:	ldr	r5, [sp, #12]
   63944:	cmp	r0, #1
   63948:	blt	639c0 <ReadNextStructField+0xbb4>
   6394c:	mov	r7, #0
   63950:	mov	r4, #0
   63954:	ldr	r0, [sp, #44]	; 0x2c
   63958:	add	r0, r0, r7
   6395c:	bl	1c0c <Mat_uint32Swap>
   63960:	ldr	r1, [sp, #36]	; 0x24
   63964:	add	r7, r7, #4
   63968:	ldr	r1, [r1, r8, lsl #2]
   6396c:	ldr	r2, [r1, #32]
   63970:	str	r0, [r2, r4, lsl #2]
   63974:	add	r4, r4, #1
   63978:	ldr	r0, [r1, #4]
   6397c:	cmp	r4, r0
   63980:	blt	63954 <ReadNextStructField+0xb48>
   63984:	b	639c0 <ReadNextStructField+0xbb4>
   63988:	add	sl, sp, #48	; 0x30
   6398c:	b	639cc <ReadNextStructField+0xbc0>
   63990:	ldr	r5, [sp, #12]
   63994:	cmp	r0, #1
   63998:	blt	639c0 <ReadNextStructField+0xbb4>
   6399c:	ldr	r2, [r1, #32]
   639a0:	ldr	r7, [sp, #44]	; 0x2c
   639a4:	mov	r3, #0
   639a8:	ldr	r0, [r7, r3, lsl #2]
   639ac:	str	r0, [r2, r3, lsl #2]
   639b0:	add	r3, r3, #1
   639b4:	ldr	r0, [r1, #4]
   639b8:	cmp	r3, r0
   639bc:	blt	639a8 <ReadNextStructField+0xb9c>
   639c0:	ldr	r7, [sp, #16]
   639c4:	tst	r0, #1
   639c8:	subne	r6, r6, #4
   639cc:	ldr	r0, [sp, #40]	; 0x28
   639d0:	add	r7, r5, r7
   639d4:	cmp	r0, #0
   639d8:	beq	639e4 <ReadNextStructField+0xbd8>
   639dc:	ldr	r0, [sp, #44]	; 0x2c
   639e0:	bl	1804 <free@plt>
   639e4:	ldr	r0, [sp, #32]
   639e8:	mov	r1, r9
   639ec:	mov	r2, sl
   639f0:	bl	2cec <InflateVarNameTag>
   639f4:	mov	r4, r0
   639f8:	mov	r0, #1
   639fc:	mov	r1, #56	; 0x38
   63a00:	bl	1798 <calloc@plt>
   63a04:	ldr	r5, [sp, #36]	; 0x24
   63a08:	add	r7, r7, r4
   63a0c:	sub	r4, r6, #8
   63a10:	ldr	r1, [r5, r8, lsl #2]
   63a14:	ldr	r1, [r1, #52]	; 0x34
   63a18:	str	r0, [r1, #12]
   63a1c:	ldr	r0, [r5, r8, lsl #2]
   63a20:	ldr	r0, [r0, #52]	; 0x34
   63a24:	ldr	r0, [r0, #12]
   63a28:	cmp	r0, #0
   63a2c:	beq	63a5c <ReadNextStructField+0xc50>
   63a30:	ldr	r1, [r9, #52]	; 0x34
   63a34:	ldr	r1, [r1, #12]
   63a38:	bl	1948 <inflateCopy@plt>
   63a3c:	cmp	r0, #0
   63a40:	beq	63a6c <ReadNextStructField+0xc60>
   63a44:	bl	1888 <zError@plt>
   63a48:	mov	r1, r0
   63a4c:	ldr	r0, [pc, #432]	; 63c04 <ReadNextStructField+0xdf8>
   63a50:	add	r0, pc, r0
   63a54:	bl	19b4 <Mat_Critical@plt>
   63a58:	b	63b88 <ReadNextStructField+0xd7c>
   63a5c:	ldr	r0, [pc, #420]	; 63c08 <ReadNextStructField+0xdfc>
   63a60:	add	r0, pc, r0
   63a64:	bl	19b4 <Mat_Critical@plt>
   63a68:	b	63b88 <ReadNextStructField+0xd7c>
   63a6c:	ldr	r0, [sp, #32]
   63a70:	ldr	r0, [r0]
   63a74:	bl	1840 <ftell@plt>
   63a78:	ldr	r1, [r5, r8, lsl #2]
   63a7c:	cmn	r0, #1
   63a80:	ldr	r2, [r1, #52]	; 0x34
   63a84:	str	r0, [r2]
   63a88:	beq	63ac8 <ReadNextStructField+0xcbc>
   63a8c:	ldr	r3, [r9, #52]	; 0x34
   63a90:	ldr	r3, [r3, #12]
   63a94:	ldr	r3, [r3, #4]
   63a98:	sub	r0, r0, r3
   63a9c:	str	r0, [r2]
   63aa0:	ldr	r0, [r1, #16]
   63aa4:	cmp	r0, #1
   63aa8:	beq	63ad8 <ReadNextStructField+0xccc>
   63aac:	cmp	r0, #2
   63ab0:	bne	63aec <ReadNextStructField+0xce0>
   63ab4:	ldr	r6, [sp, #32]
   63ab8:	mov	r0, r6
   63abc:	bl	62e0c <ReadNextStructField>
   63ac0:	add	r7, r0, r7
   63ac4:	b	63b24 <ReadNextStructField+0xd18>
   63ac8:	ldr	r0, [pc, #304]	; 63c00 <ReadNextStructField+0xdf4>
   63acc:	add	r0, pc, r0
   63ad0:	bl	19b4 <Mat_Critical@plt>
   63ad4:	b	63b3c <ReadNextStructField+0xd30>
   63ad8:	ldr	r6, [sp, #32]
   63adc:	mov	r0, r6
   63ae0:	bl	63c1c <ReadNextCell>
   63ae4:	add	r7, r0, r7
   63ae8:	b	63b24 <ReadNextStructField+0xd18>
   63aec:	cmp	r4, #32768	; 0x8000
   63af0:	bgt	63b20 <ReadNextStructField+0xd14>
   63af4:	ldr	r6, [sp, #32]
   63af8:	mov	r0, r6
   63afc:	bl	2da20 <Mat_VarRead5>
   63b00:	ldr	r0, [r5, r8, lsl #2]
   63b04:	ldr	r1, [r0, #40]	; 0x28
   63b08:	ldr	r0, [r0, #52]	; 0x34
   63b0c:	str	r1, [r0, #16]
   63b10:	mov	r1, #0
   63b14:	ldr	r0, [r5, r8, lsl #2]
   63b18:	str	r1, [r0, #40]	; 0x28
   63b1c:	b	63b24 <ReadNextStructField+0xd18>
   63b20:	ldr	r6, [sp, #32]
   63b24:	ldr	r0, [r5, r8, lsl #2]
   63b28:	mov	r2, #0
   63b2c:	ldr	r0, [r0, #52]	; 0x34
   63b30:	ldr	r1, [r0]
   63b34:	ldr	r0, [r6]
   63b38:	bl	1a2c <fseek@plt>
   63b3c:	ldr	r1, [r5, r8, lsl #2]
   63b40:	ldr	r0, [r1, #52]	; 0x34
   63b44:	ldr	r2, [r0, #16]
   63b48:	cmp	r2, #0
   63b4c:	bne	63b60 <ReadNextStructField+0xd54>
   63b50:	ldr	r1, [r1, #16]
   63b54:	sub	r1, r1, #1
   63b58:	cmp	r1, #1
   63b5c:	bhi	63b88 <ReadNextStructField+0xd7c>
   63b60:	ldr	r0, [r0, #12]
   63b64:	bl	193c <inflateEnd@plt>
   63b68:	ldr	r0, [r5, r8, lsl #2]
   63b6c:	ldr	r0, [r0, #52]	; 0x34
   63b70:	ldr	r0, [r0, #12]
   63b74:	bl	1804 <free@plt>
   63b78:	ldr	r0, [r5, r8, lsl #2]
   63b7c:	mov	r1, #0
   63b80:	ldr	r0, [r0, #52]	; 0x34
   63b84:	str	r1, [r0, #12]
   63b88:	ldr	r0, [r9, #52]	; 0x34
   63b8c:	mov	r2, r4
   63b90:	ldr	r1, [r0, #12]
   63b94:	ldr	r0, [sp, #32]
   63b98:	bl	2394 <InflateSkip>
   63b9c:	add	r7, r0, r7
   63ba0:	ldr	sl, [sp, #24]
   63ba4:	add	r5, sp, #48	; 0x30
   63ba8:	b	636f8 <ReadNextStructField+0x8ec>
   63bac:	ldr	r7, [sp, #40]	; 0x28
   63bb0:	b	6323c <ReadNextStructField+0x430>
   63bb4:	ldr	r0, [r8, r4, lsl #2]
   63bb8:	bl	1918 <Mat_VarFree@plt>
   63bbc:	mov	r0, #0
   63bc0:	str	r0, [r8, r4, lsl #2]
   63bc4:	ldr	r0, [sp, #32]
   63bc8:	ldr	r0, [r0]
   63bcc:	bl	1840 <ftell@plt>
   63bd0:	mov	r2, r0
   63bd4:	ldr	r0, [pc, #52]	; 63c10 <ReadNextStructField+0xe04>
   63bd8:	mov	r1, r4
   63bdc:	add	r0, pc, r0
   63be0:	bl	19b4 <Mat_Critical@plt>
   63be4:	b	6323c <ReadNextStructField+0x430>
   63be8:	.word	0x00008fd8
   63bec:	.word	0x00009079
   63bf0:	.word	0x00008c04
   63bf4:	.word	0x0000881c
   63bf8:	.word	0x000089a2
   63bfc:	.word	0x0000888e
   63c00:	.word	0x000082c0
   63c04:	.word	0x00008573
   63c08:	.word	0x0000868f
   63c0c:	.word	0x00008c44
   63c10:	.word	0x0000852c
   63c14:	.word	0x000087c0
   63c18:	.word	0x0000906d

00063c1c <ReadNextCell>:
   63c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   63c20:	add	fp, sp, #28
   63c24:	sub	sp, sp, #116	; 0x74
   63c28:	mov	r6, r1
   63c2c:	mov	r4, r0
   63c30:	mov	r0, #1
   63c34:	sub	r1, fp, #32
   63c38:	str	r0, [fp, #-32]	; 0xffffffe0
   63c3c:	mov	r0, r6
   63c40:	bl	665f0 <SafeMulDims>
   63c44:	cmp	r0, #0
   63c48:	bne	63c6c <ReadNextCell+0x50>
   63c4c:	mov	r0, #4
   63c50:	mov	r2, #4
   63c54:	str	r0, [r6, #12]
   63c58:	mov	r0, r6
   63c5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   63c60:	bl	6664c <SafeMul>
   63c64:	cmp	r0, #0
   63c68:	beq	63c88 <ReadNextCell+0x6c>
   63c6c:	ldr	r0, [pc, #2508]	; 64640 <ReadNextCell+0xa24>
   63c70:	add	r0, pc, r0
   63c74:	bl	19b4 <Mat_Critical@plt>
   63c78:	mov	r9, #0
   63c7c:	mov	r0, r9
   63c80:	sub	sp, fp, #28
   63c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   63c88:	ldr	r7, [fp, #-32]	; 0xffffffe0
   63c8c:	ldr	r1, [r6, #12]
   63c90:	mov	r0, r7
   63c94:	bl	1798 <calloc@plt>
   63c98:	cmp	r0, #0
   63c9c:	str	r0, [r6, #40]	; 0x28
   63ca0:	str	r0, [sp, #36]	; 0x24
   63ca4:	beq	642fc <ReadNextCell+0x6e0>
   63ca8:	ldr	r0, [r6, #48]	; 0x30
   63cac:	str	r4, [sp, #40]	; 0x28
   63cb0:	cmp	r0, #1
   63cb4:	bne	6431c <ReadNextCell+0x700>
   63cb8:	vmov.i32	q8, #0	; 0x00000000
   63cbc:	add	r2, sp, #48	; 0x30
   63cc0:	mov	r0, #48	; 0x30
   63cc4:	cmp	r7, #0
   63cc8:	mov	r1, r2
   63ccc:	vst1.64	{d16-d17}, [r1], r0
   63cd0:	add	r0, r2, #32
   63cd4:	vst1.64	{d16-d17}, [r0]
   63cd8:	add	r0, r2, #16
   63cdc:	vst1.64	{d16-d17}, [r1]
   63ce0:	vst1.64	{d16-d17}, [r0]
   63ce4:	beq	63c78 <ReadNextCell+0x5c>
   63ce8:	ldr	r5, [sp, #36]	; 0x24
   63cec:	add	r0, r2, #12
   63cf0:	mov	r9, #0
   63cf4:	mov	r8, #0
   63cf8:	str	r6, [sp, #20]
   63cfc:	str	r0, [sp, #12]
   63d00:	add	r0, r2, #8
   63d04:	str	r0, [sp, #16]
   63d08:	orr	r0, r2, #4
   63d0c:	str	r0, [sp, #32]
   63d10:	b	63d4c <ReadNextCell+0x130>
   63d14:	ldr	r0, [pc, #2368]	; 6465c <ReadNextCell+0xa40>
   63d18:	add	r0, pc, r0
   63d1c:	bl	19b4 <Mat_Critical@plt>
   63d20:	ldr	r0, [r6, #52]	; 0x34
   63d24:	mov	r2, r9
   63d28:	ldr	r1, [r0, #12]
   63d2c:	mov	r0, r4
   63d30:	bl	2394 <InflateSkip>
   63d34:	add	r9, r0, r5
   63d38:	ldr	r5, [sp, #36]	; 0x24
   63d3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   63d40:	add	r8, r8, #1
   63d44:	cmp	r8, r0
   63d48:	bcs	63c7c <ReadNextCell+0x60>
   63d4c:	bl	18a0 <Mat_VarCalloc@plt>
   63d50:	mov	sl, r5
   63d54:	cmp	r0, #0
   63d58:	str	r0, [sl, r8, lsl #2]!
   63d5c:	beq	63e84 <ReadNextCell+0x268>
   63d60:	mov	r0, #0
   63d64:	mov	r7, r4
   63d68:	mov	r1, r6
   63d6c:	str	r0, [sp, #52]	; 0x34
   63d70:	str	r0, [sp, #48]	; 0x30
   63d74:	mov	r0, r4
   63d78:	add	r4, sp, #48	; 0x30
   63d7c:	mov	r2, r4
   63d80:	bl	275c <InflateVarTag>
   63d84:	mov	r5, r0
   63d88:	ldr	r0, [r7, #20]
   63d8c:	cmp	r0, #0
   63d90:	beq	63da4 <ReadNextCell+0x188>
   63d94:	mov	r0, r4
   63d98:	bl	1c0c <Mat_uint32Swap>
   63d9c:	ldr	r0, [sp, #32]
   63da0:	bl	1c0c <Mat_uint32Swap>
   63da4:	ldr	r7, [sp, #52]	; 0x34
   63da8:	add	r9, r5, r9
   63dac:	cmp	r7, #0
   63db0:	beq	63e98 <ReadNextCell+0x27c>
   63db4:	ldr	r1, [sp, #48]	; 0x30
   63db8:	ldr	r0, [sl]
   63dbc:	ldr	r2, [sp, #40]	; 0x28
   63dc0:	cmp	r1, #14
   63dc4:	bne	645f0 <ReadNextCell+0x9d4>
   63dc8:	mov	r1, #1
   63dcc:	add	r4, sp, #48	; 0x30
   63dd0:	str	r1, [r0, #48]	; 0x30
   63dd4:	mov	r1, r6
   63dd8:	mov	r0, r2
   63ddc:	mov	r6, r2
   63de0:	mov	r2, r4
   63de4:	bl	28b0 <InflateArrayFlags>
   63de8:	mov	r5, r0
   63dec:	ldr	r0, [r6, #20]
   63df0:	cmp	r0, #0
   63df4:	beq	63e18 <ReadNextCell+0x1fc>
   63df8:	mov	r0, r4
   63dfc:	bl	1c0c <Mat_uint32Swap>
   63e00:	ldr	r0, [sp, #32]
   63e04:	bl	1c0c <Mat_uint32Swap>
   63e08:	ldr	r0, [sp, #16]
   63e0c:	bl	1c0c <Mat_uint32Swap>
   63e10:	ldr	r0, [sp, #12]
   63e14:	bl	1c0c <Mat_uint32Swap>
   63e18:	ldr	r1, [sp, #48]	; 0x30
   63e1c:	add	r5, r5, r9
   63e20:	sub	r9, r7, #16
   63e24:	cmp	r1, #6
   63e28:	bne	63ebc <ReadNextCell+0x2a0>
   63e2c:	ldr	r0, [sp, #56]	; 0x38
   63e30:	mov	ip, r5
   63e34:	mov	r6, #0
   63e38:	ldr	r1, [sl]
   63e3c:	ldr	r4, [sp, #40]	; 0x28
   63e40:	and	r2, r0, #512	; 0x200
   63e44:	and	r3, r0, #1024	; 0x400
   63e48:	and	r5, r0, #2048	; 0x800
   63e4c:	uxtb	r0, r0
   63e50:	cmp	r0, #18
   63e54:	movcs	r0, r6
   63e58:	ldr	r6, [sp, #20]
   63e5c:	cmp	r0, #5
   63e60:	str	r0, [r1, #16]
   63e64:	str	r5, [r1, #20]
   63e68:	str	r3, [r1, #24]
   63e6c:	str	r2, [r1, #28]
   63e70:	bne	63efc <ReadNextCell+0x2e0>
   63e74:	ldr	r0, [sp, #60]	; 0x3c
   63e78:	mov	r5, ip
   63e7c:	str	r0, [r1]
   63e80:	b	63f08 <ReadNextCell+0x2ec>
   63e84:	ldr	r0, [pc, #1980]	; 64648 <ReadNextCell+0xa2c>
   63e88:	mov	r1, r8
   63e8c:	add	r0, pc, r0
   63e90:	bl	19b4 <Mat_Critical@plt>
   63e94:	b	63d3c <ReadNextCell+0x120>
   63e98:	ldr	r0, [sl]
   63e9c:	ldr	r0, [r0, #52]	; 0x34
   63ea0:	bl	1804 <free@plt>
   63ea4:	ldr	r0, [sl]
   63ea8:	ldr	r5, [sp, #36]	; 0x24
   63eac:	ldr	r4, [sp, #40]	; 0x28
   63eb0:	mov	r1, #0
   63eb4:	str	r1, [r0, #52]	; 0x34
   63eb8:	b	63d3c <ReadNextCell+0x120>
   63ebc:	ldr	r0, [pc, #1932]	; 64650 <ReadNextCell+0xa34>
   63ec0:	add	r0, pc, r0
   63ec4:	bl	19b4 <Mat_Critical@plt>
   63ec8:	ldr	r6, [sp, #20]
   63ecc:	ldr	r4, [sp, #40]	; 0x28
   63ed0:	mov	r2, r9
   63ed4:	ldr	r0, [r6, #52]	; 0x34
   63ed8:	ldr	r1, [r0, #12]
   63edc:	mov	r0, r4
   63ee0:	bl	2394 <InflateSkip>
   63ee4:	add	r5, r0, r5
   63ee8:	ldr	r0, [sl]
   63eec:	ldr	r0, [r0, #16]
   63ef0:	cmp	r0, #17
   63ef4:	beq	63d20 <ReadNextCell+0x104>
   63ef8:	b	63f08 <ReadNextCell+0x2ec>
   63efc:	mov	r5, ip
   63f00:	cmp	r0, #17
   63f04:	beq	63d20 <ReadNextCell+0x104>
   63f08:	mov	r0, #0
   63f0c:	str	r5, [sp, #24]
   63f10:	mov	r5, r4
   63f14:	mov	r1, r6
   63f18:	mov	r3, #64	; 0x40
   63f1c:	str	r0, [sp, #44]	; 0x2c
   63f20:	add	r0, sp, #44	; 0x2c
   63f24:	str	r0, [sp]
   63f28:	mov	r0, r4
   63f2c:	add	r4, sp, #48	; 0x30
   63f30:	mov	r2, r4
   63f34:	bl	2a04 <InflateRankDims>
   63f38:	mov	r9, r0
   63f3c:	ldr	r0, [sp, #44]	; 0x2c
   63f40:	mov	r1, #1
   63f44:	cmp	r0, #0
   63f48:	bne	63f58 <ReadNextCell+0x33c>
   63f4c:	ldr	r0, [sp, #16]
   63f50:	mov	r1, #0
   63f54:	str	r0, [sp, #44]	; 0x2c
   63f58:	ldr	r0, [r5, #20]
   63f5c:	cmp	r0, #0
   63f60:	beq	63f7c <ReadNextCell+0x360>
   63f64:	mov	r0, r4
   63f68:	mov	r5, r1
   63f6c:	bl	1c0c <Mat_uint32Swap>
   63f70:	ldr	r0, [sp, #32]
   63f74:	bl	1c0c <Mat_uint32Swap>
   63f78:	mov	r1, r5
   63f7c:	ldr	r0, [sp, #48]	; 0x30
   63f80:	sub	r7, r7, #24
   63f84:	cmp	r0, #5
   63f88:	bne	64014 <ReadNextCell+0x3f8>
   63f8c:	ldr	r4, [sp, #52]	; 0x34
   63f90:	ldr	r5, [sl]
   63f94:	stmib	sp, {r1, r9}
   63f98:	asr	r0, r4, #31
   63f9c:	add	r0, r4, r0, lsr #30
   63fa0:	asr	r1, r0, #2
   63fa4:	bic	r0, r0, #3
   63fa8:	str	r1, [r5, #4]
   63fac:	bl	18d0 <malloc@plt>
   63fb0:	str	r0, [r5, #32]
   63fb4:	ldr	r3, [sp, #40]	; 0x28
   63fb8:	sub	r7, r7, r4
   63fbc:	ldr	r1, [sl]
   63fc0:	mov	r4, r7
   63fc4:	ldr	r2, [r3, #20]
   63fc8:	ldr	r0, [r1, #4]
   63fcc:	cmp	r2, #0
   63fd0:	beq	64028 <ReadNextCell+0x40c>
   63fd4:	cmp	r0, #1
   63fd8:	blt	64054 <ReadNextCell+0x438>
   63fdc:	mov	r5, #0
   63fe0:	mov	r9, #0
   63fe4:	ldr	r0, [sp, #44]	; 0x2c
   63fe8:	add	r0, r0, r5
   63fec:	bl	1c0c <Mat_uint32Swap>
   63ff0:	ldr	r1, [sl]
   63ff4:	add	r5, r5, #4
   63ff8:	ldr	r2, [r1, #32]
   63ffc:	str	r0, [r2, r9, lsl #2]
   64000:	add	r9, r9, #1
   64004:	ldr	r0, [r1, #4]
   64008:	cmp	r9, r0
   6400c:	blt	63fe4 <ReadNextCell+0x3c8>
   64010:	b	64054 <ReadNextCell+0x438>
   64014:	ldr	r5, [sp, #24]
   64018:	str	r7, [sp, #28]
   6401c:	cmp	r1, #0
   64020:	bne	64074 <ReadNextCell+0x458>
   64024:	b	6407c <ReadNextCell+0x460>
   64028:	cmp	r0, #1
   6402c:	blt	64054 <ReadNextCell+0x438>
   64030:	ldr	r2, [r1, #32]
   64034:	ldr	r7, [sp, #44]	; 0x2c
   64038:	mov	r3, #0
   6403c:	ldr	r0, [r7, r3, lsl #2]
   64040:	str	r0, [r2, r3, lsl #2]
   64044:	add	r3, r3, #1
   64048:	ldr	r0, [r1, #4]
   6404c:	cmp	r3, r0
   64050:	blt	6403c <ReadNextCell+0x420>
   64054:	ldr	r5, [sp, #24]
   64058:	tst	r0, #1
   6405c:	ldmib	sp, {r1, r9}
   64060:	subne	r4, r4, #4
   64064:	str	r4, [sp, #28]
   64068:	add	r4, sp, #48	; 0x30
   6406c:	cmp	r1, #0
   64070:	beq	6407c <ReadNextCell+0x460>
   64074:	ldr	r0, [sp, #44]	; 0x2c
   64078:	bl	1804 <free@plt>
   6407c:	ldr	r7, [sp, #40]	; 0x28
   64080:	mov	r1, r6
   64084:	mov	r2, r4
   64088:	add	r9, r9, r5
   6408c:	mov	r0, r7
   64090:	bl	2cec <InflateVarNameTag>
   64094:	mov	r5, r0
   64098:	ldr	r0, [r7, #20]
   6409c:	cmp	r0, #0
   640a0:	beq	640b4 <ReadNextCell+0x498>
   640a4:	mov	r0, r4
   640a8:	bl	1c0c <Mat_uint32Swap>
   640ac:	ldr	r0, [sp, #32]
   640b0:	bl	1c0c <Mat_uint32Swap>
   640b4:	ldr	r7, [sp, #52]	; 0x34
   640b8:	ldr	r0, [sp, #28]
   640bc:	add	r5, r9, r5
   640c0:	sub	r9, r0, #8
   640c4:	cmp	r7, #0
   640c8:	beq	64134 <ReadNextCell+0x518>
   640cc:	ldr	r0, [sp, #48]	; 0x30
   640d0:	cmp	r0, #1
   640d4:	bne	6413c <ReadNextCell+0x520>
   640d8:	ands	r0, r7, #7
   640dc:	sub	r0, r7, r0
   640e0:	addne	r7, r0, #8
   640e4:	add	r0, r7, #1
   640e8:	bl	18d0 <malloc@plt>
   640ec:	ldr	r1, [sl]
   640f0:	ldr	r4, [sp, #40]	; 0x28
   640f4:	sub	r9, r9, r7
   640f8:	str	r0, [r1, #36]	; 0x24
   640fc:	ldr	r0, [sl]
   64100:	ldr	r2, [r0, #36]	; 0x24
   64104:	cmp	r2, #0
   64108:	beq	6419c <ReadNextCell+0x580>
   6410c:	mov	r0, r4
   64110:	mov	r1, r6
   64114:	mov	r3, r7
   64118:	bl	2e40 <InflateVarName>
   6411c:	ldr	r1, [sl]
   64120:	mov	r2, #0
   64124:	add	r5, r0, r5
   64128:	ldr	r1, [r1, #36]	; 0x24
   6412c:	strb	r2, [r1, r7]
   64130:	b	6419c <ReadNextCell+0x580>
   64134:	ldr	r4, [sp, #40]	; 0x28
   64138:	b	6419c <ReadNextCell+0x580>
   6413c:	ldr	r4, [sp, #40]	; 0x28
   64140:	lsr	r7, r0, #16
   64144:	cmp	r7, #4
   64148:	bhi	6419c <ReadNextCell+0x580>
   6414c:	uxth	r0, r0
   64150:	cmp	r0, #1
   64154:	bne	6419c <ReadNextCell+0x580>
   64158:	cmp	r7, #0
   6415c:	beq	6419c <ReadNextCell+0x580>
   64160:	add	r0, r7, #1
   64164:	bl	18d0 <malloc@plt>
   64168:	ldr	r1, [sl]
   6416c:	str	r0, [r1, #36]	; 0x24
   64170:	ldr	r0, [sl]
   64174:	ldr	r0, [r0, #36]	; 0x24
   64178:	cmp	r0, #0
   6417c:	beq	6419c <ReadNextCell+0x580>
   64180:	ldr	r1, [sp, #32]
   64184:	mov	r2, r7
   64188:	bl	181c <memcpy@plt>
   6418c:	ldr	r0, [sl]
   64190:	mov	r1, #0
   64194:	ldr	r0, [r0, #36]	; 0x24
   64198:	strb	r1, [r0, r7]
   6419c:	mov	r0, #1
   641a0:	mov	r1, #56	; 0x38
   641a4:	bl	1798 <calloc@plt>
   641a8:	ldr	r1, [sl]
   641ac:	ldr	r1, [r1, #52]	; 0x34
   641b0:	str	r0, [r1, #12]
   641b4:	ldr	r0, [sl]
   641b8:	ldr	r0, [r0, #52]	; 0x34
   641bc:	ldr	r0, [r0, #12]
   641c0:	cmp	r0, #0
   641c4:	beq	63d14 <ReadNextCell+0xf8>
   641c8:	ldr	r1, [r6, #52]	; 0x34
   641cc:	ldr	r1, [r1, #12]
   641d0:	bl	1948 <inflateCopy@plt>
   641d4:	cmp	r0, #0
   641d8:	beq	641f4 <ReadNextCell+0x5d8>
   641dc:	bl	1888 <zError@plt>
   641e0:	mov	r1, r0
   641e4:	ldr	r0, [pc, #1132]	; 64658 <ReadNextCell+0xa3c>
   641e8:	add	r0, pc, r0
   641ec:	bl	19b4 <Mat_Critical@plt>
   641f0:	b	63d20 <ReadNextCell+0x104>
   641f4:	ldr	r0, [r4]
   641f8:	bl	1840 <ftell@plt>
   641fc:	ldr	r1, [sl]
   64200:	cmn	r0, #1
   64204:	ldr	r2, [r1, #52]	; 0x34
   64208:	str	r0, [r2]
   6420c:	beq	64248 <ReadNextCell+0x62c>
   64210:	ldr	r3, [r6, #52]	; 0x34
   64214:	ldr	r3, [r3, #12]
   64218:	ldr	r3, [r3, #4]
   6421c:	sub	r0, r0, r3
   64220:	str	r0, [r2]
   64224:	ldr	r0, [r1, #16]
   64228:	cmp	r0, #1
   6422c:	beq	64258 <ReadNextCell+0x63c>
   64230:	cmp	r0, #2
   64234:	bne	64268 <ReadNextCell+0x64c>
   64238:	mov	r0, r4
   6423c:	bl	62e0c <ReadNextStructField>
   64240:	add	r5, r0, r5
   64244:	b	64294 <ReadNextCell+0x678>
   64248:	ldr	r0, [pc, #1028]	; 64654 <ReadNextCell+0xa38>
   6424c:	add	r0, pc, r0
   64250:	bl	19b4 <Mat_Critical@plt>
   64254:	b	642ac <ReadNextCell+0x690>
   64258:	mov	r0, r4
   6425c:	bl	63c1c <ReadNextCell>
   64260:	add	r5, r0, r5
   64264:	b	64294 <ReadNextCell+0x678>
   64268:	cmp	r9, #32768	; 0x8000
   6426c:	bgt	64294 <ReadNextCell+0x678>
   64270:	mov	r0, r4
   64274:	bl	2da20 <Mat_VarRead5>
   64278:	ldr	r0, [sl]
   6427c:	ldr	r1, [r0, #40]	; 0x28
   64280:	ldr	r0, [r0, #52]	; 0x34
   64284:	str	r1, [r0, #16]
   64288:	mov	r1, #0
   6428c:	ldr	r0, [sl]
   64290:	str	r1, [r0, #40]	; 0x28
   64294:	ldr	r1, [sl]
   64298:	ldr	r0, [r4]
   6429c:	mov	r2, #0
   642a0:	ldr	r1, [r1, #52]	; 0x34
   642a4:	ldr	r1, [r1]
   642a8:	bl	1a2c <fseek@plt>
   642ac:	ldr	r1, [sl]
   642b0:	ldr	r0, [r1, #52]	; 0x34
   642b4:	ldr	r2, [r0, #16]
   642b8:	cmp	r2, #0
   642bc:	bne	642d0 <ReadNextCell+0x6b4>
   642c0:	ldr	r1, [r1, #16]
   642c4:	sub	r1, r1, #1
   642c8:	cmp	r1, #1
   642cc:	bhi	63d20 <ReadNextCell+0x104>
   642d0:	ldr	r0, [r0, #12]
   642d4:	bl	193c <inflateEnd@plt>
   642d8:	ldr	r0, [sl]
   642dc:	ldr	r0, [r0, #52]	; 0x34
   642e0:	ldr	r0, [r0, #12]
   642e4:	bl	1804 <free@plt>
   642e8:	ldr	r0, [sl]
   642ec:	mov	r1, #0
   642f0:	ldr	r0, [r0, #52]	; 0x34
   642f4:	str	r1, [r0, #12]
   642f8:	b	63d20 <ReadNextCell+0x104>
   642fc:	ldr	r1, [r6, #36]	; 0x24
   64300:	mov	r9, #0
   64304:	cmp	r1, #0
   64308:	beq	63c7c <ReadNextCell+0x60>
   6430c:	ldr	r0, [pc, #816]	; 64644 <ReadNextCell+0xa28>
   64310:	add	r0, pc, r0
   64314:	bl	19b4 <Mat_Critical@plt>
   64318:	b	63c7c <ReadNextCell+0x60>
   6431c:	cmp	r7, #0
   64320:	beq	63c78 <ReadNextCell+0x5c>
   64324:	add	sl, sp, #48	; 0x30
   64328:	ldr	r7, [sp, #36]	; 0x24
   6432c:	mov	r9, #0
   64330:	mov	r6, #0
   64334:	add	r0, sl, #20
   64338:	str	r0, [sp, #28]
   6433c:	add	r0, sl, #16
   64340:	str	r0, [sp, #24]
   64344:	add	r0, sl, #12
   64348:	str	r0, [sp, #20]
   6434c:	add	r0, sl, #8
   64350:	str	r0, [sp, #16]
   64354:	add	r0, sl, #4
   64358:	str	r0, [sp, #32]
   6435c:	b	64380 <ReadNextCell+0x764>
   64360:	ldr	r0, [pc, #760]	; 64660 <ReadNextCell+0xa44>
   64364:	mov	r1, r6
   64368:	add	r0, pc, r0
   6436c:	bl	19b4 <Mat_Critical@plt>
   64370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   64374:	add	r6, r6, #1
   64378:	cmp	r6, r0
   6437c:	bcs	63c7c <ReadNextCell+0x60>
   64380:	bl	18a0 <Mat_VarCalloc@plt>
   64384:	cmp	r0, #0
   64388:	str	r0, [r7, r6, lsl #2]
   6438c:	beq	64360 <ReadNextCell+0x744>
   64390:	ldr	r3, [r4]
   64394:	mov	r0, sl
   64398:	mov	r1, #4
   6439c:	mov	r2, #2
   643a0:	bl	18b8 <fread@plt>
   643a4:	cmp	r0, #0
   643a8:	beq	64370 <ReadNextCell+0x754>
   643ac:	mov	r5, r0
   643b0:	ldr	r0, [r4, #20]
   643b4:	cmp	r0, #0
   643b8:	beq	643cc <ReadNextCell+0x7b0>
   643bc:	mov	r0, sl
   643c0:	bl	1c0c <Mat_uint32Swap>
   643c4:	ldr	r0, [sp, #32]
   643c8:	bl	1c0c <Mat_uint32Swap>
   643cc:	ldr	r8, [sp, #52]	; 0x34
   643d0:	add	r9, r5, r9
   643d4:	cmp	r8, #0
   643d8:	beq	6449c <ReadNextCell+0x880>
   643dc:	ldr	r0, [sp, #48]	; 0x30
   643e0:	cmp	r0, #14
   643e4:	bne	64610 <ReadNextCell+0x9f4>
   643e8:	ldr	r3, [r4]
   643ec:	mov	r0, sl
   643f0:	mov	r1, #4
   643f4:	mov	r2, #6
   643f8:	bl	18b8 <fread@plt>
   643fc:	mov	r2, r0
   64400:	ldr	r0, [r4, #20]
   64404:	mov	r5, sl
   64408:	cmp	r0, #0
   6440c:	beq	64448 <ReadNextCell+0x82c>
   64410:	mov	r0, r5
   64414:	mov	sl, r2
   64418:	bl	1c0c <Mat_uint32Swap>
   6441c:	ldr	r0, [sp, #32]
   64420:	bl	1c0c <Mat_uint32Swap>
   64424:	ldr	r0, [sp, #16]
   64428:	bl	1c0c <Mat_uint32Swap>
   6442c:	ldr	r0, [sp, #20]
   64430:	bl	1c0c <Mat_uint32Swap>
   64434:	ldr	r0, [sp, #24]
   64438:	bl	1c0c <Mat_uint32Swap>
   6443c:	ldr	r0, [sp, #28]
   64440:	bl	1c0c <Mat_uint32Swap>
   64444:	mov	r2, sl
   64448:	ldr	r0, [sp, #48]	; 0x30
   6444c:	mov	sl, r5
   64450:	cmp	r0, #6
   64454:	bne	644b8 <ReadNextCell+0x89c>
   64458:	ldr	r0, [sp, #56]	; 0x38
   6445c:	ldr	r1, [r7, r6, lsl #2]
   64460:	mov	r5, #0
   64464:	and	ip, r0, #512	; 0x200
   64468:	and	r3, r0, #1024	; 0x400
   6446c:	and	r7, r0, #2048	; 0x800
   64470:	uxtb	r0, r0
   64474:	cmp	r0, #18
   64478:	movcs	r0, r5
   6447c:	str	r0, [r1, #16]
   64480:	str	r7, [r1, #20]
   64484:	str	r3, [r1, #24]
   64488:	str	ip, [r1, #28]
   6448c:	cmp	r0, #5
   64490:	ldreq	r0, [sp, #60]	; 0x3c
   64494:	streq	r0, [r1]
   64498:	b	644bc <ReadNextCell+0x8a0>
   6449c:	ldr	r0, [r7, r6, lsl #2]
   644a0:	ldr	r0, [r0, #52]	; 0x34
   644a4:	bl	1804 <free@plt>
   644a8:	ldr	r0, [r7, r6, lsl #2]
   644ac:	mov	r1, #0
   644b0:	str	r1, [r0, #52]	; 0x34
   644b4:	b	64370 <ReadNextCell+0x754>
   644b8:	ldr	r1, [r7, r6, lsl #2]
   644bc:	add	r7, r2, r9
   644c0:	ldr	r2, [sp, #64]	; 0x40
   644c4:	ldr	r3, [sp, #68]	; 0x44
   644c8:	mov	r0, r4
   644cc:	bl	6466c <ReadRankDims>
   644d0:	ldr	r3, [r4]
   644d4:	mov	r5, r0
   644d8:	mov	r0, sl
   644dc:	mov	r1, #1
   644e0:	mov	r2, #8
   644e4:	bl	18b8 <fread@plt>
   644e8:	mov	r9, r0
   644ec:	mov	r0, r4
   644f0:	sub	r4, r8, r5
   644f4:	ldr	r0, [r0, #20]
   644f8:	cmp	r0, #0
   644fc:	beq	64510 <ReadNextCell+0x8f4>
   64500:	mov	r0, sl
   64504:	bl	1c0c <Mat_uint32Swap>
   64508:	ldr	r0, [sp, #32]
   6450c:	bl	1c0c <Mat_uint32Swap>
   64510:	add	r7, r7, r5
   64514:	ldr	r5, [sp, #52]	; 0x34
   64518:	sub	r8, r4, #32
   6451c:	cmp	r5, #0
   64520:	beq	64564 <ReadNextCell+0x948>
   64524:	ldr	r0, [sp, #48]	; 0x30
   64528:	cmp	r0, #1
   6452c:	bne	64564 <ReadNextCell+0x948>
   64530:	asr	r0, r5, #31
   64534:	ldr	r4, [sp, #40]	; 0x28
   64538:	mov	r2, #1
   6453c:	add	r0, r5, r0, lsr #29
   64540:	bic	r0, r0, #7
   64544:	sub	r1, r5, r0
   64548:	cmp	r1, #0
   6454c:	addgt	r5, r0, #8
   64550:	ldr	r0, [r4]
   64554:	mov	r1, r5
   64558:	bl	1a2c <fseek@plt>
   6455c:	sub	r8, r8, r5
   64560:	b	64568 <ReadNextCell+0x94c>
   64564:	ldr	r4, [sp, #40]	; 0x28
   64568:	ldr	r0, [r4]
   6456c:	add	r9, r7, r9
   64570:	bl	1840 <ftell@plt>
   64574:	ldr	r7, [sp, #36]	; 0x24
   64578:	cmn	r0, #1
   6457c:	ldr	r1, [r7, r6, lsl #2]
   64580:	ldr	r2, [r1, #52]	; 0x34
   64584:	str	r0, [r2]
   64588:	beq	645e0 <ReadNextCell+0x9c4>
   6458c:	ldr	r0, [r1, #16]
   64590:	cmp	r0, #2
   64594:	bne	645ac <ReadNextCell+0x990>
   64598:	mov	r0, r4
   6459c:	bl	62e0c <ReadNextStructField>
   645a0:	ldr	r1, [r7, r6, lsl #2]
   645a4:	add	r9, r0, r9
   645a8:	ldr	r0, [r1, #16]
   645ac:	cmp	r0, #1
   645b0:	bne	645c4 <ReadNextCell+0x9a8>
   645b4:	mov	r0, r4
   645b8:	bl	63c1c <ReadNextCell>
   645bc:	ldr	r1, [r7, r6, lsl #2]
   645c0:	add	r9, r0, r9
   645c4:	ldr	r0, [r1, #52]	; 0x34
   645c8:	mov	r2, #0
   645cc:	ldr	r0, [r0]
   645d0:	add	r1, r0, r8
   645d4:	ldr	r0, [r4]
   645d8:	bl	1a2c <fseek@plt>
   645dc:	b	64370 <ReadNextCell+0x754>
   645e0:	ldr	r0, [pc, #128]	; 64668 <ReadNextCell+0xa4c>
   645e4:	add	r0, pc, r0
   645e8:	bl	19b4 <Mat_Critical@plt>
   645ec:	b	64370 <ReadNextCell+0x754>
   645f0:	bl	1918 <Mat_VarFree@plt>
   645f4:	mov	r0, #0
   645f8:	mov	r1, r8
   645fc:	str	r0, [sl]
   64600:	ldr	r0, [pc, #68]	; 6464c <ReadNextCell+0xa30>
   64604:	add	r0, pc, r0
   64608:	bl	19b4 <Mat_Critical@plt>
   6460c:	b	63c7c <ReadNextCell+0x60>
   64610:	ldr	r0, [r7, r6, lsl #2]
   64614:	bl	1918 <Mat_VarFree@plt>
   64618:	mov	r0, #0
   6461c:	str	r0, [r7, r6, lsl #2]
   64620:	ldr	r0, [r4]
   64624:	bl	1840 <ftell@plt>
   64628:	mov	r2, r0
   6462c:	ldr	r0, [pc, #48]	; 64664 <ReadNextCell+0xa48>
   64630:	mov	r1, r6
   64634:	add	r0, pc, r0
   64638:	bl	19b4 <Mat_Critical@plt>
   6463c:	b	63c7c <ReadNextCell+0x60>
   64640:	.word	0x000081a8
   64644:	.word	0x00007e21
   64648:	.word	0x000082cb
   6464c:	.word	0x00007b79
   64650:	.word	0x00008202
   64654:	.word	0x00007b40
   64658:	.word	0x00007ddb
   6465c:	.word	0x000083d7
   64660:	.word	0x00007def
   64664:	.word	0x00007b78
   64668:	.word	0x000077a8

0006466c <ReadRankDims>:
   6466c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   64670:	add	fp, sp, #24
   64674:	sub	sp, sp, #8
   64678:	mov	r7, #0
   6467c:	cmp	r2, #5
   64680:	bne	64788 <ReadRankDims+0x11c>
   64684:	mov	r9, r0
   64688:	lsr	r5, r3, #2
   6468c:	bic	r0, r3, #3
   64690:	mov	r4, r1
   64694:	str	r5, [r1, #4]
   64698:	bl	18d0 <malloc@plt>
   6469c:	cmp	r0, #0
   646a0:	str	r0, [r4, #32]
   646a4:	beq	64718 <ReadRankDims+0xac>
   646a8:	cmp	r5, #0
   646ac:	beq	64730 <ReadRankDims+0xc4>
   646b0:	mov	r6, #0
   646b4:	add	r8, sp, #4
   646b8:	mov	r5, #0
   646bc:	b	646e4 <ReadRankDims+0x78>
   646c0:	ldr	r0, [sp, #4]
   646c4:	ldr	r1, [r4, #32]
   646c8:	add	r7, r6, #4
   646cc:	add	r5, r5, #1
   646d0:	str	r0, [r1, r6]
   646d4:	mov	r6, r7
   646d8:	ldr	r0, [r4, #4]
   646dc:	cmp	r5, r0
   646e0:	bge	64760 <ReadRankDims+0xf4>
   646e4:	ldr	r3, [r9]
   646e8:	mov	r0, r8
   646ec:	mov	r1, #4
   646f0:	mov	r2, #1
   646f4:	bl	18b8 <fread@plt>
   646f8:	cmp	r0, #1
   646fc:	bne	64738 <ReadRankDims+0xcc>
   64700:	ldr	r0, [r9, #20]
   64704:	cmp	r0, #0
   64708:	beq	646c0 <ReadRankDims+0x54>
   6470c:	mov	r0, r8
   64710:	bl	1c0c <Mat_uint32Swap>
   64714:	b	646c4 <ReadRankDims+0x58>
   64718:	mov	r7, #0
   6471c:	str	r7, [r4, #4]
   64720:	ldr	r0, [pc, #128]	; 647a8 <ReadRankDims+0x13c>
   64724:	add	r0, pc, r0
   64728:	bl	19b4 <Mat_Critical@plt>
   6472c:	b	64788 <ReadRankDims+0x11c>
   64730:	mov	r7, #0
   64734:	b	64788 <ReadRankDims+0x11c>
   64738:	ldr	r0, [r4, #32]
   6473c:	bl	1804 <free@plt>
   64740:	mov	r0, #0
   64744:	str	r0, [r4, #4]
   64748:	str	r0, [r4, #32]
   6474c:	ldr	r0, [pc, #80]	; 647a4 <ReadRankDims+0x138>
   64750:	add	r0, pc, r0
   64754:	bl	19b4 <Mat_Critical@plt>
   64758:	mov	r7, r6
   6475c:	b	64788 <ReadRankDims+0x11c>
   64760:	tst	r0, #1
   64764:	beq	64788 <ReadRankDims+0x11c>
   64768:	ldr	r3, [r9]
   6476c:	add	r0, sp, #4
   64770:	mov	r1, #4
   64774:	mov	r2, #1
   64778:	bl	18b8 <fread@plt>
   6477c:	cmp	r0, #1
   64780:	bne	64794 <ReadRankDims+0x128>
   64784:	add	r7, r7, #4
   64788:	mov	r0, r7
   6478c:	sub	sp, fp, #24
   64790:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   64794:	ldr	r0, [pc, #4]	; 647a0 <ReadRankDims+0x134>
   64798:	add	r0, pc, r0
   6479c:	b	64728 <ReadRankDims+0xbc>
   647a0:	.word	0x00007880
   647a4:	.word	0x000078c8
   647a8:	.word	0x0000744d

000647ac <WriteData>:
   647ac:	push	{r4, r5, r6, r7, fp, lr}
   647b0:	add	fp, sp, #16
   647b4:	sub	sp, sp, #8
   647b8:	mov	r6, r0
   647bc:	mov	r0, #0
   647c0:	str	r3, [sp, #4]
   647c4:	cmp	r6, #0
   647c8:	str	r0, [sp]
   647cc:	beq	64848 <WriteData+0x9c>
   647d0:	mov	r5, r1
   647d4:	ldr	r1, [r6]
   647d8:	cmp	r1, #0
   647dc:	beq	64848 <WriteData+0x9c>
   647e0:	mov	r0, r3
   647e4:	mov	r4, r2
   647e8:	bl	1924 <Mat_SizeOf@plt>
   647ec:	mov	r7, r0
   647f0:	mul	r0, r0, r4
   647f4:	mov	r1, #4
   647f8:	mov	r2, #1
   647fc:	str	r0, [sp]
   64800:	add	r0, sp, #4
   64804:	ldr	r3, [r6]
   64808:	bl	18ac <fwrite@plt>
   6480c:	ldr	r3, [r6]
   64810:	mov	r0, sp
   64814:	mov	r1, #4
   64818:	mov	r2, #1
   6481c:	bl	18ac <fwrite@plt>
   64820:	cmp	r5, #0
   64824:	beq	64844 <WriteData+0x98>
   64828:	cmp	r4, #1
   6482c:	blt	64844 <WriteData+0x98>
   64830:	ldr	r3, [r6]
   64834:	mov	r0, r5
   64838:	mov	r1, r7
   6483c:	mov	r2, r4
   64840:	bl	18ac <fwrite@plt>
   64844:	ldr	r0, [sp]
   64848:	sub	sp, fp, #16
   6484c:	pop	{r4, r5, r6, r7, fp, pc}

00064850 <GetTypeBufSize>:
   64850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64854:	add	fp, sp, #28
   64858:	sub	sp, sp, #20
   6485c:	mov	r5, r0
   64860:	mov	r0, #1
   64864:	add	r1, sp, #12
   64868:	str	r0, [sp, #12]
   6486c:	mov	r0, r5
   64870:	bl	665f0 <SafeMulDims>
   64874:	ldr	r9, [r5, #4]
   64878:	ldr	r0, [r5, #16]
   6487c:	mov	sl, #12
   64880:	tst	r9, #1
   64884:	sub	r0, r0, #1
   64888:	movweq	sl, #8
   6488c:	cmp	r0, #4
   64890:	add	r4, sl, r9, lsl #2
   64894:	bhi	64980 <GetTypeBufSize+0x130>
   64898:	add	r1, pc, #4
   6489c:	ldr	r0, [r1, r0, lsl #2]
   648a0:	add	pc, r1, r0
   648a4:	.word	0x00000014
   648a8:	.word	0x00000084
   648ac:	.word	0x000000dc
   648b0:	.word	0x000000e4
   648b4:	.word	0x0000012c
   648b8:	ldr	r0, [r5]
   648bc:	cmp	r0, #0
   648c0:	beq	64aa8 <GetTypeBufSize+0x258>
   648c4:	ldr	r2, [r5, #12]
   648c8:	cmp	r2, #0
   648cc:	beq	64aa8 <GetTypeBufSize+0x258>
   648d0:	udiv	r1, r0, r2
   648d4:	ldr	r5, [r5, #40]	; 0x28
   648d8:	cmp	r5, #0
   648dc:	str	r1, [sp, #12]
   648e0:	beq	64aa8 <GetTypeBufSize+0x258>
   648e4:	cmp	r2, r0
   648e8:	bhi	64aa8 <GetTypeBufSize+0x258>
   648ec:	mov	r6, #0
   648f0:	b	64908 <GetTypeBufSize+0xb8>
   648f4:	add	r0, r4, r2
   648f8:	add	r6, r6, #1
   648fc:	add	r4, r0, #8
   64900:	cmp	r6, r1
   64904:	bcs	64aa8 <GetTypeBufSize+0x258>
   64908:	ldr	r0, [r5, r6, lsl #2]
   6490c:	mov	r2, #0
   64910:	cmp	r0, #0
   64914:	beq	648f4 <GetTypeBufSize+0xa4>
   64918:	bl	64850 <GetTypeBufSize>
   6491c:	ldr	r1, [sp, #12]
   64920:	add	r2, r0, #24
   64924:	b	648f4 <GetTypeBufSize+0xa4>
   64928:	ldr	r0, [r5, #40]	; 0x28
   6492c:	mov	r4, #0
   64930:	mov	r7, #0
   64934:	str	r0, [sp, #4]
   64938:	ldr	r0, [r5, #52]	; 0x34
   6493c:	ldr	r8, [r0, #4]
   64940:	cmp	r8, #0
   64944:	beq	64a70 <GetTypeBufSize+0x220>
   64948:	ldr	r6, [r0, #8]
   6494c:	mov	r7, #0
   64950:	mov	r5, r8
   64954:	b	64964 <GetTypeBufSize+0x114>
   64958:	add	r6, r6, #4
   6495c:	subs	r5, r5, #1
   64960:	beq	64a70 <GetTypeBufSize+0x220>
   64964:	ldr	r0, [r6]
   64968:	cmp	r0, #0
   6496c:	beq	64958 <GetTypeBufSize+0x108>
   64970:	bl	1954 <strlen@plt>
   64974:	cmp	r0, r7
   64978:	movhi	r7, r0
   6497c:	b	64958 <GetTypeBufSize+0x108>
   64980:	ldr	r0, [r5, #8]
   64984:	b	64998 <GetTypeBufSize+0x148>
   64988:	ldr	r0, [r5, #8]
   6498c:	sub	r1, r0, #1
   64990:	cmp	r1, #2
   64994:	movwcc	r0, #4
   64998:	ldr	r6, [sp, #12]
   6499c:	bl	1924 <Mat_SizeOf@plt>
   649a0:	mov	r2, r0
   649a4:	add	r0, sp, #16
   649a8:	mov	r1, r6
   649ac:	bl	6664c <SafeMul>
   649b0:	ldr	r0, [sp, #16]
   649b4:	ands	r1, r0, #7
   649b8:	subne	r0, r0, r1
   649bc:	addne	r0, r0, #8
   649c0:	strne	r0, [sp, #16]
   649c4:	add	r0, r0, #8
   649c8:	add	r4, r0, r4
   649cc:	b	64a60 <GetTypeBufSize+0x210>
   649d0:	ldr	r6, [r5, #40]	; 0x28
   649d4:	add	r0, sp, #16
   649d8:	mov	r2, #4
   649dc:	ldr	r1, [r6, #8]
   649e0:	bl	6664c <SafeMul>
   649e4:	ldr	r8, [sp, #16]
   649e8:	mov	r2, #4
   649ec:	ands	r0, r8, #7
   649f0:	subne	r0, r8, r0
   649f4:	addne	r8, r0, #8
   649f8:	add	r0, sp, #16
   649fc:	strne	r8, [sp, #16]
   64a00:	ldr	r1, [r6, #16]
   64a04:	bl	6664c <SafeMul>
   64a08:	ldr	r7, [sp, #16]
   64a0c:	ands	r0, r7, #7
   64a10:	subne	r0, r7, r0
   64a14:	addne	r7, r0, #8
   64a18:	strne	r7, [sp, #16]
   64a1c:	ldr	r0, [r5, #8]
   64a20:	ldr	r6, [r6, #20]
   64a24:	bl	1924 <Mat_SizeOf@plt>
   64a28:	mov	r2, r0
   64a2c:	add	r0, sp, #16
   64a30:	mov	r1, r6
   64a34:	bl	6664c <SafeMul>
   64a38:	ldr	r0, [sp, #16]
   64a3c:	ands	r1, r0, #7
   64a40:	subne	r0, r0, r1
   64a44:	add	r1, r4, r8
   64a48:	addne	r0, r0, #8
   64a4c:	add	r1, r1, r7
   64a50:	strne	r0, [sp, #16]
   64a54:	add	r0, r0, #8
   64a58:	add	r1, r1, r0
   64a5c:	add	r4, r1, #16
   64a60:	ldr	r1, [r5, #20]
   64a64:	cmp	r1, #0
   64a68:	addne	r4, r4, r0
   64a6c:	b	64aa8 <GetTypeBufSize+0x258>
   64a70:	add	r0, r7, #1
   64a74:	mul	r0, r8, r0
   64a78:	add	r1, r0, r4
   64a7c:	add	r4, r4, r8
   64a80:	tst	r1, #7
   64a84:	bne	64a78 <GetTypeBufSize+0x228>
   64a88:	mla	r0, r7, r8, sl
   64a8c:	ldr	r6, [sp, #4]
   64a90:	add	r0, r0, r9, lsl #2
   64a94:	cmp	r6, #0
   64a98:	add	r0, r0, r4
   64a9c:	cmpne	r8, #0
   64aa0:	add	r4, r0, #16
   64aa4:	bne	64ab4 <GetTypeBufSize+0x264>
   64aa8:	mov	r0, r4
   64aac:	sub	sp, fp, #28
   64ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64ab4:	ldr	r1, [sp, #12]
   64ab8:	mov	r0, #1
   64abc:	mov	r2, r8
   64ac0:	str	r0, [sp, #8]
   64ac4:	add	r0, sp, #8
   64ac8:	bl	6664c <SafeMul>
   64acc:	ldr	r1, [sp, #8]
   64ad0:	cmp	r1, #0
   64ad4:	beq	64aa8 <GetTypeBufSize+0x258>
   64ad8:	mov	r5, #0
   64adc:	b	64b00 <GetTypeBufSize+0x2b0>
   64ae0:	bl	64850 <GetTypeBufSize>
   64ae4:	ldr	r1, [sp, #8]
   64ae8:	add	r0, r0, #24
   64aec:	add	r0, r4, r0
   64af0:	add	r5, r5, #1
   64af4:	add	r4, r0, #8
   64af8:	cmp	r5, r1
   64afc:	bcs	64aa8 <GetTypeBufSize+0x258>
   64b00:	ldr	r0, [r6, r5, lsl #2]
   64b04:	cmp	r0, #0
   64b08:	bne	64ae0 <GetTypeBufSize+0x290>
   64b0c:	mov	r0, #48	; 0x30
   64b10:	b	64aec <GetTypeBufSize+0x29c>

00064b14 <WriteCompressedData>:
   64b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64b18:	add	fp, sp, #28
   64b1c:	sub	sp, sp, #28
   64b20:	sub	sp, sp, #1024	; 0x400
   64b24:	mov	r6, #0
   64b28:	cmp	r0, #0
   64b2c:	str	r6, [sp, #12]
   64b30:	str	r6, [sp, #8]
   64b34:	beq	64c84 <WriteCompressedData+0x170>
   64b38:	mov	r5, r0
   64b3c:	ldr	r0, [r0]
   64b40:	cmp	r0, #0
   64b44:	beq	64c84 <WriteCompressedData+0x170>
   64b48:	ldr	r6, [fp, #8]
   64b4c:	mov	r9, r3
   64b50:	mov	r8, r2
   64b54:	mov	r4, r1
   64b58:	mov	r0, r6
   64b5c:	bl	1924 <Mat_SizeOf@plt>
   64b60:	mul	r0, r0, r9
   64b64:	str	r6, [fp, #-40]	; 0xffffffd8
   64b68:	mov	r6, #0
   64b6c:	mov	sl, #1024	; 0x400
   64b70:	add	r7, sp, #16
   64b74:	mov	r1, #8
   64b78:	str	r0, [sp, #4]
   64b7c:	str	r0, [fp, #-36]	; 0xffffffdc
   64b80:	sub	r0, fp, #40	; 0x28
   64b84:	stm	r4, {r0, r1}
   64b88:	mov	r0, r4
   64b8c:	mov	r1, #0
   64b90:	str	r7, [r4, #12]
   64b94:	str	sl, [r4, #16]
   64b98:	bl	1894 <deflate@plt>
   64b9c:	ldr	r0, [r4, #16]
   64ba0:	ldr	r3, [r5]
   64ba4:	mov	r1, #1
   64ba8:	rsb	r2, r0, #1024	; 0x400
   64bac:	mov	r0, r7
   64bb0:	bl	18ac <fwrite@plt>
   64bb4:	add	r6, r0, r6
   64bb8:	ldr	r0, [r4, #16]
   64bbc:	cmp	r0, #0
   64bc0:	beq	64b88 <WriteCompressedData+0x74>
   64bc4:	cmp	r8, #0
   64bc8:	beq	64c84 <WriteCompressedData+0x170>
   64bcc:	cmp	r9, #1
   64bd0:	blt	64c84 <WriteCompressedData+0x170>
   64bd4:	ldr	r9, [sp, #4]
   64bd8:	str	r8, [r4]
   64bdc:	mov	r8, #1024	; 0x400
   64be0:	str	r9, [r4, #4]
   64be4:	mov	r0, r4
   64be8:	mov	r1, #0
   64bec:	str	r7, [r4, #12]
   64bf0:	str	r8, [r4, #16]
   64bf4:	bl	1894 <deflate@plt>
   64bf8:	ldr	r0, [r4, #16]
   64bfc:	ldr	r3, [r5]
   64c00:	mov	r1, #1
   64c04:	rsb	r2, r0, #1024	; 0x400
   64c08:	mov	r0, r7
   64c0c:	bl	18ac <fwrite@plt>
   64c10:	add	r6, r0, r6
   64c14:	ldr	r0, [r4, #16]
   64c18:	cmp	r0, #0
   64c1c:	beq	64be4 <WriteCompressedData+0xd0>
   64c20:	asr	r0, r9, #31
   64c24:	add	r0, r9, r0, lsr #29
   64c28:	bic	r0, r0, #7
   64c2c:	subs	r0, r9, r0
   64c30:	beq	64c84 <WriteCompressedData+0x170>
   64c34:	add	r1, sp, #8
   64c38:	mov	r8, #1024	; 0x400
   64c3c:	rsb	r0, r0, #8
   64c40:	str	r1, [r4]
   64c44:	str	r0, [r4, #4]
   64c48:	mov	r0, r4
   64c4c:	mov	r1, #0
   64c50:	str	r7, [r4, #12]
   64c54:	str	r8, [r4, #16]
   64c58:	bl	1894 <deflate@plt>
   64c5c:	ldr	r0, [r4, #16]
   64c60:	ldr	r3, [r5]
   64c64:	mov	r1, #1
   64c68:	rsb	r2, r0, #1024	; 0x400
   64c6c:	mov	r0, r7
   64c70:	bl	18ac <fwrite@plt>
   64c74:	add	r6, r0, r6
   64c78:	ldr	r0, [r4, #16]
   64c7c:	cmp	r0, #0
   64c80:	beq	64c48 <WriteCompressedData+0x134>
   64c84:	mov	r0, r6
   64c88:	sub	sp, fp, #28
   64c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00064c90 <WriteCompressedTypeArrayFlags>:
   64c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   64c94:	add	fp, sp, #28
   64c98:	sub	sp, sp, #12
   64c9c:	sub	sp, sp, #4096	; 0x1000
   64ca0:	add	r8, sp, #8
   64ca4:	mov	r4, r2
   64ca8:	mov	r9, r1
   64cac:	mov	sl, r0
   64cb0:	mov	r1, #0
   64cb4:	mov	r2, #2048	; 0x800
   64cb8:	mov	r7, #0
   64cbc:	mov	r0, r8
   64cc0:	bl	1990 <memset@plt>
   64cc4:	ldr	r1, [r9, #16]
   64cc8:	cmp	r1, #0
   64ccc:	beq	64f54 <WriteCompressedTypeArrayFlags+0x2c4>
   64cd0:	add	r7, r9, #20
   64cd4:	uxtb	r0, r1
   64cd8:	ldm	r7, {r2, r3, r7}
   64cdc:	cmp	r2, #0
   64ce0:	orrne	r0, r0, #2048	; 0x800
   64ce4:	cmp	r3, #0
   64ce8:	mov	r3, #0
   64cec:	orrne	r0, r0, #1024	; 0x400
   64cf0:	cmp	r7, #0
   64cf4:	orrne	r0, r0, #512	; 0x200
   64cf8:	cmp	r1, #5
   64cfc:	mov	r1, #0
   64d00:	bne	64d0c <WriteCompressedTypeArrayFlags+0x7c>
   64d04:	ldr	r1, [r9, #40]	; 0x28
   64d08:	ldr	r1, [r1]
   64d0c:	str	r1, [sp, #20]
   64d10:	str	r0, [sp, #16]
   64d14:	mov	r0, #8
   64d18:	mov	r1, #5
   64d1c:	str	r0, [sp, #12]
   64d20:	mov	r0, #6
   64d24:	str	r0, [sp, #8]
   64d28:	ldr	r0, [r9, #4]
   64d2c:	str	r1, [sp, #24]
   64d30:	lsl	r1, r0, #2
   64d34:	cmp	r0, #1
   64d38:	str	r1, [sp, #28]
   64d3c:	blt	64e50 <WriteCompressedTypeArrayFlags+0x1c0>
   64d40:	ldr	ip, [r9, #32]
   64d44:	mov	r5, #0
   64d48:	cmp	r0, #4
   64d4c:	bcc	64df4 <WriteCompressedTypeArrayFlags+0x164>
   64d50:	add	r1, ip, r0, lsl #2
   64d54:	add	r3, r8, #24
   64d58:	cmp	r3, r1
   64d5c:	addcc	r1, r8, r0, lsl #2
   64d60:	addcc	r1, r1, #24
   64d64:	cmpcc	ip, r1
   64d68:	bcc	64df4 <WriteCompressedTypeArrayFlags+0x164>
   64d6c:	bic	r5, r0, #3
   64d70:	mov	r2, #1
   64d74:	subs	r1, r5, #4
   64d78:	add	r1, r2, r1, lsr #2
   64d7c:	and	r2, r1, #1
   64d80:	stm	sp, {r2, ip}
   64d84:	beq	64dc0 <WriteCompressedTypeArrayFlags+0x130>
   64d88:	sub	r6, r1, r2
   64d8c:	mov	r7, #0
   64d90:	mov	r2, #32
   64d94:	mov	r1, ip
   64d98:	add	ip, r1, #16
   64d9c:	vld1.32	{d16-d17}, [r1], r2
   64da0:	add	lr, r3, #16
   64da4:	subs	r6, r6, #2
   64da8:	add	r7, r7, #8
   64dac:	vst1.32	{d16-d17}, [r3], r2
   64db0:	vld1.32	{d16-d17}, [ip]
   64db4:	vst1.32	{d16-d17}, [lr]
   64db8:	bne	64d98 <WriteCompressedTypeArrayFlags+0x108>
   64dbc:	b	64dc4 <WriteCompressedTypeArrayFlags+0x134>
   64dc0:	mov	r7, #0
   64dc4:	ldr	r1, [sp]
   64dc8:	ldr	ip, [sp, #4]
   64dcc:	cmp	r1, #0
   64dd0:	beq	64de8 <WriteCompressedTypeArrayFlags+0x158>
   64dd4:	add	r1, ip, r7, lsl #2
   64dd8:	vld1.32	{d16-d17}, [r1]
   64ddc:	add	r1, r8, r7, lsl #2
   64de0:	add	r1, r1, #24
   64de4:	vst1.32	{d16-d17}, [r1]
   64de8:	cmp	r0, r5
   64dec:	mov	r3, r0
   64df0:	beq	64e50 <WriteCompressedTypeArrayFlags+0x1c0>
   64df4:	tst	r0, #1
   64df8:	mov	r2, r5
   64dfc:	beq	64e10 <WriteCompressedTypeArrayFlags+0x180>
   64e00:	ldr	r1, [ip, r5, lsl #2]
   64e04:	add	r2, r8, r5, lsl #2
   64e08:	str	r1, [r2, #24]
   64e0c:	orr	r2, r5, #1
   64e10:	orr	r1, r5, #1
   64e14:	mov	r3, r0
   64e18:	cmp	r0, r1
   64e1c:	beq	64e50 <WriteCompressedTypeArrayFlags+0x1c0>
   64e20:	add	r1, ip, r2, lsl #2
   64e24:	add	r1, r1, #4
   64e28:	ldr	r7, [r1, #-4]
   64e2c:	add	r3, r8, r2, lsl #2
   64e30:	add	r2, r2, #2
   64e34:	cmp	r0, r2
   64e38:	str	r7, [r3, #24]
   64e3c:	ldr	r7, [r1]
   64e40:	add	r1, r1, #8
   64e44:	str	r7, [r3, #28]
   64e48:	bne	64e28 <WriteCompressedTypeArrayFlags+0x198>
   64e4c:	mov	r3, r0
   64e50:	tst	r0, #1
   64e54:	add	lr, sp, #2048	; 0x800
   64e58:	mov	r5, #0
   64e5c:	mov	r6, #2048	; 0x800
   64e60:	addne	r0, r8, r3, lsl #2
   64e64:	movne	r1, #0
   64e68:	addne	r3, r3, #1
   64e6c:	add	r7, lr, #8
   64e70:	strne	r1, [r0, #24]
   64e74:	mov	r0, #24
   64e78:	str	r8, [r4]
   64e7c:	add	r0, r0, r3, lsl #2
   64e80:	str	r0, [r4, #4]
   64e84:	mov	r0, r4
   64e88:	mov	r1, #0
   64e8c:	str	r7, [r4, #12]
   64e90:	str	r6, [r4, #16]
   64e94:	bl	1894 <deflate@plt>
   64e98:	ldr	r0, [r4, #16]
   64e9c:	ldr	r3, [sl]
   64ea0:	mov	r1, #1
   64ea4:	rsb	r2, r0, #2048	; 0x800
   64ea8:	mov	r0, r7
   64eac:	bl	18ac <fwrite@plt>
   64eb0:	add	r5, r0, r5
   64eb4:	ldr	r0, [r4, #16]
   64eb8:	cmp	r0, #0
   64ebc:	beq	64e84 <WriteCompressedTypeArrayFlags+0x1f4>
   64ec0:	mov	r0, #0
   64ec4:	mov	r6, #2048	; 0x800
   64ec8:	str	r0, [sp, #12]
   64ecc:	mov	r0, #1
   64ed0:	str	r0, [sp, #8]
   64ed4:	mov	r0, #8
   64ed8:	str	r8, [r4]
   64edc:	str	r0, [r4, #4]
   64ee0:	mov	r0, r4
   64ee4:	mov	r1, #0
   64ee8:	str	r7, [r4, #12]
   64eec:	str	r6, [r4, #16]
   64ef0:	bl	1894 <deflate@plt>
   64ef4:	ldr	r0, [r4, #16]
   64ef8:	ldr	r3, [sl]
   64efc:	mov	r1, #1
   64f00:	rsb	r2, r0, #2048	; 0x800
   64f04:	mov	r0, r7
   64f08:	bl	18ac <fwrite@plt>
   64f0c:	add	r5, r0, r5
   64f10:	ldr	r0, [r4, #16]
   64f14:	cmp	r0, #0
   64f18:	beq	64ee0 <WriteCompressedTypeArrayFlags+0x250>
   64f1c:	ldr	r0, [sl]
   64f20:	bl	1840 <ftell@plt>
   64f24:	ldr	r1, [r9, #52]	; 0x34
   64f28:	cmn	r0, #1
   64f2c:	str	r0, [r1]
   64f30:	bne	64f40 <WriteCompressedTypeArrayFlags+0x2b0>
   64f34:	ldr	r0, [pc, #36]	; 64f60 <WriteCompressedTypeArrayFlags+0x2d0>
   64f38:	add	r0, pc, r0
   64f3c:	bl	19b4 <Mat_Critical@plt>
   64f40:	mov	r0, sl
   64f44:	mov	r1, r9
   64f48:	mov	r2, r4
   64f4c:	bl	61c20 <WriteCompressedType>
   64f50:	add	r7, r0, r5
   64f54:	mov	r0, r7
   64f58:	sub	sp, fp, #28
   64f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   64f60:	.word	0x00006e54
   64f64:	.word	0x00000000

00064f68 <Mat_Create4>:
   64f68:	push	{r4, r5, r6, r7, fp, lr}
   64f6c:	add	fp, sp, #16
   64f70:	ldr	r1, [pc, #156]	; 65014 <Mat_Create4+0xac>
   64f74:	mov	r5, r0
   64f78:	add	r1, pc, r1
   64f7c:	bl	17e0 <fopen@plt>
   64f80:	mov	r4, #0
   64f84:	cmp	r0, #0
   64f88:	beq	64ff0 <Mat_Create4+0x88>
   64f8c:	mov	r7, r0
   64f90:	mov	r0, #44	; 0x2c
   64f94:	bl	18d0 <malloc@plt>
   64f98:	cmp	r0, #0
   64f9c:	beq	64ff8 <Mat_Create4+0x90>
   64fa0:	mov	r4, #0
   64fa4:	str	r7, [r0]
   64fa8:	mov	r6, r0
   64fac:	mov	r1, r5
   64fb0:	str	r4, [r0, #4]
   64fb4:	str	r4, [r0, #8]
   64fb8:	ldr	r0, [pc, #92]	; 6501c <Mat_Create4+0xb4>
   64fbc:	add	r0, pc, r0
   64fc0:	bl	1da4 <strdup_printf>
   64fc4:	vmov.i32	q8, #0	; 0x00000000
   64fc8:	add	r1, r6, #20
   64fcc:	vst1.32	{d16-d17}, [r1]
   64fd0:	str	r0, [r6, #12]
   64fd4:	mov	r1, #16
   64fd8:	mov	r0, r6
   64fdc:	str	r1, [r6, #16]
   64fe0:	str	r4, [r6, #36]	; 0x24
   64fe4:	str	r4, [r6, #40]	; 0x28
   64fe8:	bl	1984 <Mat_Rewind@plt>
   64fec:	mov	r4, r6
   64ff0:	mov	r0, r4
   64ff4:	pop	{r4, r5, r6, r7, fp, pc}
   64ff8:	mov	r0, r7
   64ffc:	bl	19cc <fclose@plt>
   65000:	ldr	r0, [pc, #16]	; 65018 <Mat_Create4+0xb0>
   65004:	add	r0, pc, r0
   65008:	bl	19b4 <Mat_Critical@plt>
   6500c:	mov	r0, r4
   65010:	pop	{r4, r5, r6, r7, fp, pc}
   65014:	.word	0x00006e35
   65018:	.word	0x000071d8
   6501c:	.word	0x0000770f

00065020 <Mat_VarWrite4>:
   65020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   65024:	add	fp, sp, #28
   65028:	sub	sp, sp, #4
   6502c:	vpush	{d8}
   65030:	sub	sp, sp, #40	; 0x28
   65034:	cmp	r0, #0
   65038:	mvn	r6, #0
   6503c:	movne	r5, r1
   65040:	cmpne	r1, #0
   65044:	bne	6505c <Mat_VarWrite4+0x3c>
   65048:	mov	r0, r6
   6504c:	sub	sp, fp, #40	; 0x28
   65050:	vpop	{d8}
   65054:	add	sp, sp, #4
   65058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6505c:	mov	r9, r0
   65060:	ldr	r0, [r5, #36]	; 0x24
   65064:	cmp	r0, #0
   65068:	beq	65048 <Mat_VarWrite4+0x28>
   6506c:	ldr	r1, [r5, #4]
   65070:	cmp	r1, #2
   65074:	bne	65048 <Mat_VarWrite4+0x28>
   65078:	ldr	r1, [r5, #8]
   6507c:	mov	r6, #2
   65080:	sub	r1, r1, #2
   65084:	cmp	r1, #7
   65088:	bhi	65048 <Mat_VarWrite4+0x28>
   6508c:	uxtb	r2, r1
   65090:	mov	r3, #175	; 0xaf
   65094:	mov	r7, #1
   65098:	tst	r7, r3, lsr r2
   6509c:	beq	65048 <Mat_VarWrite4+0x28>
   650a0:	ldr	r2, [pc, #1468]	; 65664 <Mat_VarWrite4+0x644>
   650a4:	add	r2, pc, r2
   650a8:	ldr	r8, [r2, r1, lsl #2]
   650ac:	str	r8, [sp, #20]
   650b0:	bl	1954 <strlen@plt>
   650b4:	add	r0, r0, #1
   650b8:	mov	r1, #0
   650bc:	mov	r2, #2
   650c0:	mov	r6, #0
   650c4:	str	r0, [sp, #36]	; 0x24
   650c8:	ldr	r0, [r9]
   650cc:	bl	1a2c <fseek@plt>
   650d0:	ldr	r0, [r5, #16]
   650d4:	cmp	r0, #12
   650d8:	bhi	65048 <Mat_VarWrite4+0x28>
   650dc:	mov	r7, #1
   650e0:	mov	r1, #7872	; 0x1ec0
   650e4:	tst	r1, r7, lsl r0
   650e8:	beq	65110 <Mat_VarWrite4+0xf0>
   650ec:	ldr	r8, [r5, #4]
   650f0:	ldr	sl, [r5, #32]
   650f4:	cmp	r8, #1
   650f8:	blt	65220 <Mat_VarWrite4+0x200>
   650fc:	cmp	r8, #4
   65100:	bcs	65154 <Mat_VarWrite4+0x134>
   65104:	mov	r2, #0
   65108:	mov	r7, #1
   6510c:	b	6520c <Mat_VarWrite4+0x1ec>
   65110:	cmp	r0, #4
   65114:	beq	652b0 <Mat_VarWrite4+0x290>
   65118:	cmp	r0, #5
   6511c:	bne	65048 <Mat_VarWrite4+0x28>
   65120:	ldr	r0, [r5, #8]
   65124:	bl	1924 <Mat_SizeOf@plt>
   65128:	ldr	r7, [r5, #40]	; 0x28
   6512c:	add	r1, r8, #2
   65130:	str	r1, [sp, #20]
   65134:	ldr	r2, [r7, #16]
   65138:	cmp	r2, #1
   6513c:	blt	652bc <Mat_VarWrite4+0x29c>
   65140:	ldr	r1, [r7, #12]
   65144:	add	r1, r1, r2, lsl #2
   65148:	ldr	r1, [r1, #-4]
   6514c:	add	r1, r1, #1
   65150:	b	652c0 <Mat_VarWrite4+0x2a0>
   65154:	bic	r2, r8, #3
   65158:	mov	r0, #1
   6515c:	vmov.i32	q8, #1	; 0x00000001
   65160:	sub	r3, r2, #4
   65164:	add	r0, r0, r3, lsr #2
   65168:	cmp	r3, #12
   6516c:	and	r1, r0, #3
   65170:	str	r1, [sp, #4]
   65174:	bcs	65180 <Mat_VarWrite4+0x160>
   65178:	mov	r7, #0
   6517c:	b	651d0 <Mat_VarWrite4+0x1b0>
   65180:	sub	r4, r0, r1
   65184:	mov	r7, #0
   65188:	mov	lr, #64	; 0x40
   6518c:	mov	r0, sl
   65190:	mov	r3, sl
   65194:	vld1.32	{d18-d19}, [r3], lr
   65198:	add	ip, r0, #16
   6519c:	add	r1, r0, #32
   651a0:	add	r0, r0, #48	; 0x30
   651a4:	subs	r4, r4, #4
   651a8:	add	r7, r7, #16
   651ac:	vld1.32	{d20-d21}, [ip]
   651b0:	vmul.i32	q8, q9, q8
   651b4:	vld1.32	{d18-d19}, [r1]
   651b8:	vmul.i32	q8, q10, q8
   651bc:	vld1.32	{d20-d21}, [r0]
   651c0:	mov	r0, r3
   651c4:	vmul.i32	q8, q9, q8
   651c8:	vmul.i32	q8, q10, q8
   651cc:	bne	65194 <Mat_VarWrite4+0x174>
   651d0:	ldr	r1, [sp, #4]
   651d4:	cmp	r1, #0
   651d8:	beq	651f4 <Mat_VarWrite4+0x1d4>
   651dc:	add	r0, sl, r7, lsl #2
   651e0:	rsb	r3, r1, #0
   651e4:	vld1.32	{d18-d19}, [r0]!
   651e8:	adds	r3, r3, #1
   651ec:	vmul.i32	q8, q9, q8
   651f0:	bcc	651e4 <Mat_VarWrite4+0x1c4>
   651f4:	vext.8	q9, q8, q8, #8
   651f8:	cmp	r8, r2
   651fc:	vmul.i32	q0, q8, q9
   65200:	vmul.i32	q8, q0, d0[1]
   65204:	vmov.32	r7, d16[0]
   65208:	beq	65220 <Mat_VarWrite4+0x200>
   6520c:	ldr	r0, [sl, r2, lsl #2]
   65210:	add	r2, r2, #1
   65214:	cmp	r2, r8
   65218:	mul	r7, r0, r7
   6521c:	blt	6520c <Mat_VarWrite4+0x1ec>
   65220:	ldm	sl, {r0, r1}
   65224:	mov	r2, #1
   65228:	str	r0, [sp, #24]
   6522c:	str	r1, [sp, #28]
   65230:	mov	r1, #20
   65234:	ldr	r0, [r5, #20]
   65238:	cmp	r0, #0
   6523c:	movwne	r0, #1
   65240:	str	r0, [sp, #32]
   65244:	add	r0, sp, #20
   65248:	ldr	r3, [r9]
   6524c:	bl	18ac <fwrite@plt>
   65250:	ldr	r0, [r5, #36]	; 0x24
   65254:	ldr	r3, [r9]
   65258:	ldr	r2, [sp, #36]	; 0x24
   6525c:	mov	r1, #1
   65260:	bl	18ac <fwrite@plt>
   65264:	ldr	r0, [r5, #20]
   65268:	cmp	r0, #0
   6526c:	beq	65298 <Mat_VarWrite4+0x278>
   65270:	ldr	r4, [r5, #40]	; 0x28
   65274:	ldr	r3, [r9]
   65278:	ldr	r1, [r5, #12]
   6527c:	mov	r2, r7
   65280:	ldr	r0, [r4]
   65284:	bl	18ac <fwrite@plt>
   65288:	ldr	r0, [r4, #4]
   6528c:	ldr	r1, [r5, #12]
   65290:	ldr	r3, [r9]
   65294:	b	652a4 <Mat_VarWrite4+0x284>
   65298:	ldr	r3, [r9]
   6529c:	ldr	r1, [r5, #12]
   652a0:	ldr	r0, [r5, #40]	; 0x28
   652a4:	mov	r2, r7
   652a8:	bl	18ac <fwrite@plt>
   652ac:	b	65048 <Mat_VarWrite4+0x28>
   652b0:	orr	r0, r8, #1
   652b4:	str	r0, [sp, #20]
   652b8:	b	650ec <Mat_VarWrite4+0xcc>
   652bc:	mov	r1, #1
   652c0:	str	r1, [sp, #24]
   652c4:	mov	sl, r0
   652c8:	mov	r6, #0
   652cc:	mov	r1, #4
   652d0:	mov	r2, #1
   652d4:	ldr	r0, [r5, #20]
   652d8:	str	r6, [sp, #32]
   652dc:	cmp	r0, #0
   652e0:	add	r0, sp, #20
   652e4:	movweq	r1, #3
   652e8:	str	r1, [sp, #28]
   652ec:	mov	r1, #20
   652f0:	ldr	r3, [r9]
   652f4:	bl	18ac <fwrite@plt>
   652f8:	ldr	r0, [r5, #36]	; 0x24
   652fc:	ldr	r3, [r9]
   65300:	ldr	r2, [sp, #36]	; 0x24
   65304:	mov	r1, #1
   65308:	bl	18ac <fwrite@plt>
   6530c:	ldr	r1, [r7, #16]
   65310:	cmp	r1, #2
   65314:	blt	65398 <Mat_VarWrite4+0x378>
   65318:	ldr	r0, [r7, #12]
   6531c:	add	r8, sp, #8
   65320:	b	65334 <Mat_VarWrite4+0x314>
   65324:	ldr	r1, [r7, #16]
   65328:	sub	r2, r1, #1
   6532c:	cmp	r6, r2
   65330:	bge	65398 <Mat_VarWrite4+0x378>
   65334:	ldr	r4, [r0, r6, lsl #2]
   65338:	add	r6, r6, #1
   6533c:	ldr	r2, [r0, r6, lsl #2]
   65340:	cmp	r4, r2
   65344:	bge	65328 <Mat_VarWrite4+0x308>
   65348:	ldr	r1, [r7, #20]
   6534c:	cmp	r4, r1
   65350:	bge	65324 <Mat_VarWrite4+0x304>
   65354:	ldr	r0, [r7, #4]
   65358:	mov	r1, #8
   6535c:	mov	r2, #1
   65360:	ldr	r0, [r0, r4, lsl #2]
   65364:	add	r0, r0, #1
   65368:	vmov	s0, r0
   6536c:	mov	r0, r8
   65370:	vcvt.f64.s32	d16, s0
   65374:	vstr	d16, [sp, #8]
   65378:	ldr	r3, [r9]
   6537c:	bl	18ac <fwrite@plt>
   65380:	ldr	r0, [r7, #12]
   65384:	add	r4, r4, #1
   65388:	ldr	r1, [r0, r6, lsl #2]
   6538c:	cmp	r4, r1
   65390:	blt	65348 <Mat_VarWrite4+0x328>
   65394:	b	65324 <Mat_VarWrite4+0x304>
   65398:	ldr	r0, [r5, #32]
   6539c:	mov	r1, #8
   653a0:	mov	r2, #1
   653a4:	vldr	s0, [r0]
   653a8:	add	r0, sp, #8
   653ac:	vcvt.f64.u32	d16, s0
   653b0:	vstr	d16, [sp, #8]
   653b4:	ldr	r3, [r9]
   653b8:	bl	18ac <fwrite@plt>
   653bc:	ldr	r1, [r7, #16]
   653c0:	cmp	r1, #2
   653c4:	blt	65440 <Mat_VarWrite4+0x420>
   653c8:	ldr	r0, [r7, #12]
   653cc:	mov	r6, #0
   653d0:	add	r8, sp, #8
   653d4:	b	653e8 <Mat_VarWrite4+0x3c8>
   653d8:	ldr	r1, [r7, #16]
   653dc:	sub	r2, r1, #1
   653e0:	cmp	r6, r2
   653e4:	bge	65440 <Mat_VarWrite4+0x420>
   653e8:	ldr	r4, [r0, r6, lsl #2]
   653ec:	add	r6, r6, #1
   653f0:	ldr	r2, [r0, r6, lsl #2]
   653f4:	cmp	r4, r2
   653f8:	bge	653dc <Mat_VarWrite4+0x3bc>
   653fc:	vmov	s0, r6
   65400:	vcvt.f64.s32	d8, s0
   65404:	ldr	r1, [r7, #20]
   65408:	cmp	r4, r1
   6540c:	bge	653d8 <Mat_VarWrite4+0x3b8>
   65410:	vstr	d8, [sp, #8]
   65414:	mov	r0, r8
   65418:	mov	r1, #8
   6541c:	mov	r2, #1
   65420:	ldr	r3, [r9]
   65424:	bl	18ac <fwrite@plt>
   65428:	ldr	r0, [r7, #12]
   6542c:	add	r4, r4, #1
   65430:	ldr	r1, [r0, r6, lsl #2]
   65434:	cmp	r4, r1
   65438:	blt	65404 <Mat_VarWrite4+0x3e4>
   6543c:	b	653d8 <Mat_VarWrite4+0x3b8>
   65440:	ldr	r0, [r5, #32]
   65444:	mov	r1, #8
   65448:	mov	r2, #1
   6544c:	vldr	s0, [r0, #4]
   65450:	add	r0, sp, #8
   65454:	vcvt.f64.u32	d16, s0
   65458:	vstr	d16, [sp, #8]
   6545c:	ldr	r3, [r9]
   65460:	bl	18ac <fwrite@plt>
   65464:	mov	r0, #0
   65468:	str	r0, [sp, #12]
   6546c:	str	r0, [sp, #8]
   65470:	ldr	r0, [r5, #20]
   65474:	cmp	r0, #0
   65478:	beq	655b8 <Mat_VarWrite4+0x598>
   6547c:	ldr	r0, [r7, #24]
   65480:	ldr	r1, [r7, #16]
   65484:	mov	r4, sl
   65488:	ldr	r2, [r0, #4]
   6548c:	cmp	r1, #2
   65490:	str	r2, [sp, #4]
   65494:	blt	65518 <Mat_VarWrite4+0x4f8>
   65498:	ldr	sl, [r0]
   6549c:	ldr	r0, [r7, #12]
   654a0:	mov	r6, #0
   654a4:	b	654b8 <Mat_VarWrite4+0x498>
   654a8:	ldr	r1, [r7, #16]
   654ac:	sub	r2, r1, #1
   654b0:	cmp	r6, r2
   654b4:	bge	65518 <Mat_VarWrite4+0x4f8>
   654b8:	ldr	r8, [r0, r6, lsl #2]
   654bc:	add	r6, r6, #1
   654c0:	ldr	r2, [r0, r6, lsl #2]
   654c4:	cmp	r8, r2
   654c8:	bge	654ac <Mat_VarWrite4+0x48c>
   654cc:	ldr	r1, [r7, #20]
   654d0:	cmp	r8, r1
   654d4:	bge	654a8 <Mat_VarWrite4+0x488>
   654d8:	mla	r5, r4, r8, sl
   654dc:	ldr	r3, [r9]
   654e0:	mov	r0, r5
   654e4:	mov	r1, r4
   654e8:	mov	r2, #1
   654ec:	bl	18ac <fwrite@plt>
   654f0:	ldr	r0, [r7, #12]
   654f4:	add	r8, r8, #1
   654f8:	ldr	r1, [r0, r6, lsl #2]
   654fc:	cmp	r8, r1
   65500:	bge	654a8 <Mat_VarWrite4+0x488>
   65504:	ldr	r1, [r7, #20]
   65508:	add	r5, r5, r4
   6550c:	cmp	r8, r1
   65510:	blt	654dc <Mat_VarWrite4+0x4bc>
   65514:	b	654a8 <Mat_VarWrite4+0x488>
   65518:	ldr	r3, [r9]
   6551c:	add	r0, sp, #8
   65520:	mov	r1, r4
   65524:	mov	r2, #1
   65528:	bl	18ac <fwrite@plt>
   6552c:	ldr	r1, [r7, #16]
   65530:	ldr	sl, [sp, #4]
   65534:	cmp	r1, #2
   65538:	blt	65648 <Mat_VarWrite4+0x628>
   6553c:	ldr	r0, [r7, #12]
   65540:	mov	r8, #0
   65544:	b	65558 <Mat_VarWrite4+0x538>
   65548:	ldr	r1, [r7, #16]
   6554c:	sub	r2, r1, #1
   65550:	cmp	r8, r2
   65554:	bge	65648 <Mat_VarWrite4+0x628>
   65558:	ldr	r6, [r0, r8, lsl #2]
   6555c:	add	r8, r8, #1
   65560:	ldr	r2, [r0, r8, lsl #2]
   65564:	cmp	r6, r2
   65568:	bge	6554c <Mat_VarWrite4+0x52c>
   6556c:	ldr	r1, [r7, #20]
   65570:	cmp	r6, r1
   65574:	bge	65548 <Mat_VarWrite4+0x528>
   65578:	mla	r5, r4, r6, sl
   6557c:	ldr	r3, [r9]
   65580:	mov	r0, r5
   65584:	mov	r1, r4
   65588:	mov	r2, #1
   6558c:	bl	18ac <fwrite@plt>
   65590:	ldr	r0, [r7, #12]
   65594:	add	r6, r6, #1
   65598:	ldr	r1, [r0, r8, lsl #2]
   6559c:	cmp	r6, r1
   655a0:	bge	65548 <Mat_VarWrite4+0x528>
   655a4:	ldr	r1, [r7, #20]
   655a8:	add	r5, r5, r4
   655ac:	cmp	r6, r1
   655b0:	blt	6557c <Mat_VarWrite4+0x55c>
   655b4:	b	65548 <Mat_VarWrite4+0x528>
   655b8:	ldr	r1, [r7, #16]
   655bc:	mov	r4, sl
   655c0:	cmp	r1, #2
   655c4:	blt	65648 <Mat_VarWrite4+0x628>
   655c8:	ldr	r8, [r7, #24]
   655cc:	ldr	r0, [r7, #12]
   655d0:	mov	sl, #0
   655d4:	b	655e8 <Mat_VarWrite4+0x5c8>
   655d8:	ldr	r1, [r7, #16]
   655dc:	sub	r2, r1, #1
   655e0:	cmp	sl, r2
   655e4:	bge	65648 <Mat_VarWrite4+0x628>
   655e8:	ldr	r6, [r0, sl, lsl #2]
   655ec:	add	sl, sl, #1
   655f0:	ldr	r2, [r0, sl, lsl #2]
   655f4:	cmp	r6, r2
   655f8:	bge	655dc <Mat_VarWrite4+0x5bc>
   655fc:	ldr	r1, [r7, #20]
   65600:	cmp	r6, r1
   65604:	bge	655d8 <Mat_VarWrite4+0x5b8>
   65608:	mla	r5, r4, r6, r8
   6560c:	ldr	r3, [r9]
   65610:	mov	r0, r5
   65614:	mov	r1, r4
   65618:	mov	r2, #1
   6561c:	bl	18ac <fwrite@plt>
   65620:	ldr	r0, [r7, #12]
   65624:	add	r6, r6, #1
   65628:	ldr	r1, [r0, sl, lsl #2]
   6562c:	cmp	r6, r1
   65630:	bge	655d8 <Mat_VarWrite4+0x5b8>
   65634:	ldr	r1, [r7, #20]
   65638:	add	r5, r5, r4
   6563c:	cmp	r6, r1
   65640:	blt	6560c <Mat_VarWrite4+0x5ec>
   65644:	b	655d8 <Mat_VarWrite4+0x5b8>
   65648:	ldr	r3, [r9]
   6564c:	add	r0, sp, #8
   65650:	mov	r1, r4
   65654:	mov	r2, #1
   65658:	bl	18ac <fwrite@plt>
   6565c:	mov	r6, #0
   65660:	b	65048 <Mat_VarWrite4+0x28>
   65664:	.word	0x0000724c

00065668 <Mat_VarRead4>:
   65668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6566c:	add	fp, sp, #28
   65670:	sub	sp, sp, #20
   65674:	mov	r5, r1
   65678:	mov	sl, r0
   6567c:	mov	r4, #1
   65680:	add	r1, sp, #16
   65684:	mov	r0, r5
   65688:	str	r4, [sp, #16]
   6568c:	bl	665f0 <SafeMulDims>
   65690:	ldr	r1, [r5, #52]	; 0x34
   65694:	ldr	r0, [sl]
   65698:	mov	r2, #0
   6569c:	ldr	r1, [r1]
   656a0:	bl	1a2c <fseek@plt>
   656a4:	ldr	r0, [r5, #16]
   656a8:	cmp	r0, #4
   656ac:	beq	65718 <Mat_VarRead4+0xb0>
   656b0:	cmp	r0, #5
   656b4:	beq	65750 <Mat_VarRead4+0xe8>
   656b8:	cmp	r0, #6
   656bc:	bne	658cc <Mat_VarRead4+0x264>
   656c0:	mov	r0, #8
   656c4:	mov	r2, #8
   656c8:	str	r0, [r5, #12]
   656cc:	mov	r0, r5
   656d0:	ldr	r1, [sp, #16]
   656d4:	bl	6664c <SafeMul>
   656d8:	ldr	r1, [r5, #20]
   656dc:	ldr	r0, [r5]
   656e0:	cmp	r1, #0
   656e4:	beq	658d8 <Mat_VarRead4+0x270>
   656e8:	bl	6655c <ComplexMalloc>
   656ec:	cmp	r0, #0
   656f0:	beq	65920 <Mat_VarRead4+0x2b8>
   656f4:	str	r0, [r5, #40]	; 0x28
   656f8:	mov	r6, r0
   656fc:	ldr	r1, [r0]
   65700:	ldr	r2, [r5, #8]
   65704:	ldr	r3, [sp, #16]
   65708:	mov	r0, sl
   6570c:	bl	37d8 <ReadDoubleData>
   65710:	ldr	r1, [r6, #4]
   65714:	b	658ec <Mat_VarRead4+0x284>
   65718:	str	r4, [r5, #12]
   6571c:	ldr	r6, [sp, #16]
   65720:	mov	r0, r6
   65724:	str	r6, [r5]
   65728:	bl	18d0 <malloc@plt>
   6572c:	cmp	r0, #0
   65730:	str	r0, [r5, #40]	; 0x28
   65734:	beq	65900 <Mat_VarRead4+0x298>
   65738:	ldr	r2, [r5, #8]
   6573c:	mov	r1, r0
   65740:	mov	r0, sl
   65744:	mov	r3, r6
   65748:	bl	1ed88 <ReadUInt8Data>
   6574c:	b	6590c <Mat_VarRead4+0x2a4>
   65750:	mov	r0, #28
   65754:	str	r0, [r5, #12]
   65758:	mov	r0, #28
   6575c:	bl	18d0 <malloc@plt>
   65760:	cmp	r0, #0
   65764:	str	r0, [r5, #40]	; 0x28
   65768:	beq	65914 <Mat_VarRead4+0x2ac>
   6576c:	mov	r6, r0
   65770:	ldr	r0, [r5, #32]
   65774:	ldr	r1, [r0, #4]
   65778:	sub	r1, r1, #4
   6577c:	clz	r1, r1
   65780:	lsr	r1, r1, #5
   65784:	str	r1, [r5, #20]
   65788:	ldr	r0, [r0]
   6578c:	sub	r7, r0, #1
   65790:	lsl	r0, r7, #2
   65794:	str	r7, [r6]
   65798:	str	r7, [r6, #8]
   6579c:	bl	18d0 <malloc@plt>
   657a0:	cmp	r0, #0
   657a4:	str	r0, [r6, #4]
   657a8:	beq	6592c <Mat_VarRead4+0x2c4>
   657ac:	mov	r1, r0
   657b0:	mov	r0, sl
   657b4:	mov	r2, #9
   657b8:	mov	r3, r7
   657bc:	bl	11690 <ReadInt32Data>
   657c0:	ldr	r0, [r6, #8]
   657c4:	cmp	r0, #1
   657c8:	blt	657f0 <Mat_VarRead4+0x188>
   657cc:	ldr	r0, [r6, #4]
   657d0:	mov	r1, #0
   657d4:	ldr	r2, [r0, r1, lsl #2]
   657d8:	sub	r2, r2, #1
   657dc:	str	r2, [r0, r1, lsl #2]
   657e0:	add	r1, r1, #1
   657e4:	ldr	r2, [r6, #8]
   657e8:	cmp	r1, r2
   657ec:	blt	657d4 <Mat_VarRead4+0x16c>
   657f0:	add	r1, sp, #8
   657f4:	mov	r0, sl
   657f8:	mov	r2, #9
   657fc:	mov	r3, #1
   65800:	bl	37d8 <ReadDoubleData>
   65804:	vldr	d16, [sp, #8]
   65808:	ldr	r0, [r5, #32]
   6580c:	vcvt.u32.f64	s0, d16
   65810:	vstr	s0, [r0]
   65814:	ldr	r0, [sl]
   65818:	bl	1840 <ftell@plt>
   6581c:	cmn	r0, #1
   65820:	beq	65948 <Mat_VarRead4+0x2e0>
   65824:	ldr	r7, [sl]
   65828:	ldr	r4, [r6, #8]
   6582c:	mov	r8, r0
   65830:	mov	r0, #9
   65834:	bl	1924 <Mat_SizeOf@plt>
   65838:	mul	r1, r0, r4
   6583c:	mov	r0, r7
   65840:	mov	r2, #1
   65844:	bl	1a2c <fseek@plt>
   65848:	add	r1, sp, #8
   6584c:	mov	r0, sl
   65850:	mov	r2, #9
   65854:	mov	r3, #1
   65858:	bl	37d8 <ReadDoubleData>
   6585c:	vldr	d16, [sp, #8]
   65860:	vldr	d17, [pc, #992]	; 65c48 <Mat_VarRead4+0x5e0>
   65864:	vcmpe.f64	d16, d17
   65868:	vmrs	APSR_nzcv, fpscr
   6586c:	bgt	65988 <Mat_VarRead4+0x320>
   65870:	vcmpe.f64	d16, #0.0
   65874:	vmrs	APSR_nzcv, fpscr
   65878:	bmi	65988 <Mat_VarRead4+0x320>
   6587c:	ldr	r0, [r5, #32]
   65880:	vcvt.u32.f64	s0, d16
   65884:	mov	r1, r8
   65888:	mov	r2, #0
   6588c:	mov	r4, #0
   65890:	vstr	s0, [r0, #4]
   65894:	ldr	r0, [sl]
   65898:	bl	1a2c <fseek@plt>
   6589c:	ldr	r0, [r5, #32]
   658a0:	ldr	r0, [r0, #4]
   658a4:	cmn	r0, #-2147483647	; 0x80000001
   658a8:	bcc	659ac <Mat_VarRead4+0x344>
   658ac:	ldr	r0, [r6, #4]
   658b0:	bl	1804 <free@plt>
   658b4:	ldr	r0, [r5, #40]	; 0x28
   658b8:	bl	1804 <free@plt>
   658bc:	str	r4, [r5, #40]	; 0x28
   658c0:	ldr	r0, [pc, #1612]	; 65f14 <Mat_VarRead4+0x8ac>
   658c4:	add	r0, pc, r0
   658c8:	b	65b68 <Mat_VarRead4+0x500>
   658cc:	ldr	r0, [pc, #1624]	; 65f2c <Mat_VarRead4+0x8c4>
   658d0:	add	r0, pc, r0
   658d4:	b	65b68 <Mat_VarRead4+0x500>
   658d8:	bl	18d0 <malloc@plt>
   658dc:	cmp	r0, #0
   658e0:	str	r0, [r5, #40]	; 0x28
   658e4:	beq	6596c <Mat_VarRead4+0x304>
   658e8:	mov	r1, r0
   658ec:	ldr	r2, [r5, #8]
   658f0:	ldr	r3, [sp, #16]
   658f4:	mov	r0, sl
   658f8:	bl	37d8 <ReadDoubleData>
   658fc:	b	65978 <Mat_VarRead4+0x310>
   65900:	ldr	r0, [pc, #1536]	; 65f08 <Mat_VarRead4+0x8a0>
   65904:	add	r0, pc, r0
   65908:	bl	19b4 <Mat_Critical@plt>
   6590c:	mov	r0, #2
   65910:	b	6597c <Mat_VarRead4+0x314>
   65914:	ldr	r0, [pc, #1548]	; 65f28 <Mat_VarRead4+0x8c0>
   65918:	add	r0, pc, r0
   6591c:	b	65b68 <Mat_VarRead4+0x500>
   65920:	ldr	r0, [pc, #1496]	; 65f00 <Mat_VarRead4+0x898>
   65924:	add	r0, pc, r0
   65928:	b	65974 <Mat_VarRead4+0x30c>
   6592c:	mov	r0, r6
   65930:	bl	1804 <free@plt>
   65934:	mov	r0, #0
   65938:	str	r0, [r5, #40]	; 0x28
   6593c:	ldr	r0, [pc, #1516]	; 65f30 <Mat_VarRead4+0x8c8>
   65940:	add	r0, pc, r0
   65944:	b	65b68 <Mat_VarRead4+0x500>
   65948:	ldr	r0, [r6, #4]
   6594c:	bl	1804 <free@plt>
   65950:	ldr	r0, [r5, #40]	; 0x28
   65954:	bl	1804 <free@plt>
   65958:	mov	r0, #0
   6595c:	str	r0, [r5, #40]	; 0x28
   65960:	ldr	r0, [pc, #1444]	; 65f0c <Mat_VarRead4+0x8a4>
   65964:	add	r0, pc, r0
   65968:	b	65b68 <Mat_VarRead4+0x500>
   6596c:	ldr	r0, [pc, #1424]	; 65f04 <Mat_VarRead4+0x89c>
   65970:	add	r0, pc, r0
   65974:	bl	19b4 <Mat_Critical@plt>
   65978:	mov	r0, #9
   6597c:	str	r0, [r5, #8]
   65980:	sub	sp, fp, #28
   65984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65988:	ldr	r0, [r6, #4]
   6598c:	bl	1804 <free@plt>
   65990:	ldr	r0, [r5, #40]	; 0x28
   65994:	bl	1804 <free@plt>
   65998:	mov	r0, #0
   6599c:	str	r0, [r5, #40]	; 0x28
   659a0:	ldr	r0, [pc, #1384]	; 65f10 <Mat_VarRead4+0x8a8>
   659a4:	add	r0, pc, r0
   659a8:	b	65b68 <Mat_VarRead4+0x500>
   659ac:	add	r0, r0, #1
   659b0:	str	r0, [r6, #16]
   659b4:	lsl	r0, r0, #2
   659b8:	bl	18d0 <malloc@plt>
   659bc:	cmp	r0, #0
   659c0:	str	r0, [r6, #12]
   659c4:	beq	65b48 <Mat_VarRead4+0x4e0>
   659c8:	ldr	r9, [r6, #8]
   659cc:	mov	r8, r0
   659d0:	lsl	r0, r9, #2
   659d4:	bl	18d0 <malloc@plt>
   659d8:	cmp	r0, #0
   659dc:	beq	65b40 <Mat_VarRead4+0x4d8>
   659e0:	mov	r7, r0
   659e4:	mov	r4, #0
   659e8:	mov	r0, sl
   659ec:	mov	r2, #9
   659f0:	mov	r3, r9
   659f4:	mov	r1, r7
   659f8:	str	r4, [r8]
   659fc:	bl	11690 <ReadInt32Data>
   65a00:	ldr	r0, [r6, #16]
   65a04:	cmp	r0, #3
   65a08:	blt	65a58 <Mat_VarRead4+0x3f0>
   65a0c:	ldr	r0, [r6, #12]
   65a10:	mov	r1, #1
   65a14:	b	65a30 <Mat_VarRead4+0x3c8>
   65a18:	str	r4, [r0, r1, lsl #2]
   65a1c:	add	r1, r1, #1
   65a20:	ldr	r2, [r6, #16]
   65a24:	sub	r2, r2, #1
   65a28:	cmp	r1, r2
   65a2c:	bge	65a58 <Mat_VarRead4+0x3f0>
   65a30:	ldr	r2, [r6, #8]
   65a34:	cmp	r4, r2
   65a38:	bge	65a18 <Mat_VarRead4+0x3b0>
   65a3c:	ldr	r3, [r7, r4, lsl #2]
   65a40:	cmp	r3, r1
   65a44:	bgt	65a18 <Mat_VarRead4+0x3b0>
   65a48:	add	r4, r4, #1
   65a4c:	cmp	r4, r2
   65a50:	blt	65a3c <Mat_VarRead4+0x3d4>
   65a54:	b	65a18 <Mat_VarRead4+0x3b0>
   65a58:	mov	r0, r7
   65a5c:	bl	1804 <free@plt>
   65a60:	add	r2, r6, #8
   65a64:	mov	r3, #1
   65a68:	ldm	r2, {r0, r1, r2}
   65a6c:	add	r1, r1, r2, lsl #2
   65a70:	mov	r2, #9
   65a74:	str	r0, [r1, #-4]
   65a78:	add	r1, sp, #8
   65a7c:	mov	r0, sl
   65a80:	bl	37d8 <ReadDoubleData>
   65a84:	ldr	r4, [r6, #8]
   65a88:	str	r4, [r6, #20]
   65a8c:	ldr	r9, [r5, #8]
   65a90:	ldr	r7, [r5, #20]
   65a94:	mov	r0, r9
   65a98:	bl	1924 <Mat_SizeOf@plt>
   65a9c:	mul	r0, r0, r4
   65aa0:	cmp	r7, #0
   65aa4:	beq	65b74 <Mat_VarRead4+0x50c>
   65aa8:	bl	6655c <ComplexMalloc>
   65aac:	cmp	r0, #0
   65ab0:	beq	65bec <Mat_VarRead4+0x584>
   65ab4:	mov	r8, r0
   65ab8:	str	r0, [r6, #24]
   65abc:	sub	r0, r9, #2
   65ac0:	cmp	r0, #7
   65ac4:	bhi	65d34 <Mat_VarRead4+0x6cc>
   65ac8:	add	r1, pc, #4
   65acc:	ldr	r0, [r1, r0, lsl #2]
   65ad0:	add	pc, r1, r0
   65ad4:	.word	0x00000020
   65ad8:	.word	0x0000017c
   65adc:	.word	0x000001c8
   65ae0:	.word	0x00000214
   65ae4:	.word	0x00000260
   65ae8:	.word	0x00000278
   65aec:	.word	0x00000260
   65af0:	.word	0x000002c4
   65af4:	ldr	r3, [r6, #20]
   65af8:	ldr	r1, [r8]
   65afc:	mov	r0, sl
   65b00:	mov	r2, #2
   65b04:	bl	1ed88 <ReadUInt8Data>
   65b08:	add	r5, sp, #4
   65b0c:	mov	r0, sl
   65b10:	mov	r2, #2
   65b14:	mov	r3, #1
   65b18:	mov	r1, r5
   65b1c:	bl	1ed88 <ReadUInt8Data>
   65b20:	ldr	r1, [r8, #4]
   65b24:	ldr	r3, [r6, #20]
   65b28:	mov	r0, sl
   65b2c:	mov	r2, #2
   65b30:	bl	1ed88 <ReadUInt8Data>
   65b34:	mov	r0, sl
   65b38:	mov	r1, r5
   65b3c:	b	65bd8 <Mat_VarRead4+0x570>
   65b40:	mov	r0, r8
   65b44:	bl	1804 <free@plt>
   65b48:	ldr	r0, [r6, #4]
   65b4c:	bl	1804 <free@plt>
   65b50:	ldr	r0, [r5, #40]	; 0x28
   65b54:	bl	1804 <free@plt>
   65b58:	mov	r0, #0
   65b5c:	str	r0, [r5, #40]	; 0x28
   65b60:	ldr	r0, [pc, #944]	; 65f18 <Mat_VarRead4+0x8b0>
   65b64:	add	r0, pc, r0
   65b68:	bl	19b4 <Mat_Critical@plt>
   65b6c:	sub	sp, fp, #28
   65b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65b74:	bl	18d0 <malloc@plt>
   65b78:	cmp	r0, #0
   65b7c:	str	r0, [r6, #24]
   65b80:	beq	65c18 <Mat_VarRead4+0x5b0>
   65b84:	mov	r1, r0
   65b88:	sub	r0, r9, #2
   65b8c:	cmp	r0, #7
   65b90:	bhi	65e68 <Mat_VarRead4+0x800>
   65b94:	add	r2, pc, #4
   65b98:	ldr	r0, [r2, r0, lsl #2]
   65b9c:	add	pc, r2, r0
   65ba0:	.word	0x00000020
   65ba4:	.word	0x00000244
   65ba8:	.word	0x00000270
   65bac:	.word	0x0000029c
   65bb0:	.word	0x000002c8
   65bb4:	.word	0x00000308
   65bb8:	.word	0x000002c8
   65bbc:	.word	0x00000334
   65bc0:	ldr	r3, [r6, #20]
   65bc4:	mov	r0, sl
   65bc8:	mov	r2, #2
   65bcc:	bl	1ed88 <ReadUInt8Data>
   65bd0:	add	r1, sp, #4
   65bd4:	mov	r0, sl
   65bd8:	mov	r2, #2
   65bdc:	mov	r3, #1
   65be0:	bl	1ed88 <ReadUInt8Data>
   65be4:	sub	sp, fp, #28
   65be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65bec:	ldr	r0, [r6, #12]
   65bf0:	bl	1804 <free@plt>
   65bf4:	ldr	r0, [r6, #4]
   65bf8:	bl	1804 <free@plt>
   65bfc:	ldr	r0, [r5, #40]	; 0x28
   65c00:	bl	1804 <free@plt>
   65c04:	mov	r0, #0
   65c08:	str	r0, [r5, #40]	; 0x28
   65c0c:	ldr	r0, [pc, #776]	; 65f1c <Mat_VarRead4+0x8b4>
   65c10:	add	r0, pc, r0
   65c14:	b	65b68 <Mat_VarRead4+0x500>
   65c18:	ldr	r0, [r6, #12]
   65c1c:	bl	1804 <free@plt>
   65c20:	ldr	r0, [r6, #4]
   65c24:	bl	1804 <free@plt>
   65c28:	ldr	r0, [r5, #40]	; 0x28
   65c2c:	bl	1804 <free@plt>
   65c30:	mov	r0, #0
   65c34:	str	r0, [r5, #40]	; 0x28
   65c38:	ldr	r0, [pc, #740]	; 65f24 <Mat_VarRead4+0x8bc>
   65c3c:	add	r0, pc, r0
   65c40:	b	65b68 <Mat_VarRead4+0x500>
   65c44:	nop	{0}
   65c48:	.word	0xff800000
   65c4c:	.word	0x41dfffff
   65c50:	ldr	r3, [r6, #20]
   65c54:	ldr	r1, [r8]
   65c58:	mov	r0, sl
   65c5c:	mov	r2, #3
   65c60:	bl	16fe8 <ReadInt16Data>
   65c64:	add	r5, sp, #4
   65c68:	mov	r0, sl
   65c6c:	mov	r2, #3
   65c70:	mov	r3, #1
   65c74:	mov	r1, r5
   65c78:	bl	16fe8 <ReadInt16Data>
   65c7c:	ldr	r1, [r8, #4]
   65c80:	ldr	r3, [r6, #20]
   65c84:	mov	r0, sl
   65c88:	mov	r2, #3
   65c8c:	bl	16fe8 <ReadInt16Data>
   65c90:	mov	r0, sl
   65c94:	mov	r1, r5
   65c98:	b	65dfc <Mat_VarRead4+0x794>
   65c9c:	ldr	r3, [r6, #20]
   65ca0:	ldr	r1, [r8]
   65ca4:	mov	r0, sl
   65ca8:	mov	r2, #4
   65cac:	bl	19a24 <ReadUInt16Data>
   65cb0:	add	r5, sp, #4
   65cb4:	mov	r0, sl
   65cb8:	mov	r2, #4
   65cbc:	mov	r3, #1
   65cc0:	mov	r1, r5
   65cc4:	bl	19a24 <ReadUInt16Data>
   65cc8:	ldr	r1, [r8, #4]
   65ccc:	ldr	r3, [r6, #20]
   65cd0:	mov	r0, sl
   65cd4:	mov	r2, #4
   65cd8:	bl	19a24 <ReadUInt16Data>
   65cdc:	mov	r0, sl
   65ce0:	mov	r1, r5
   65ce4:	b	65e28 <Mat_VarRead4+0x7c0>
   65ce8:	ldr	r3, [r6, #20]
   65cec:	ldr	r1, [r8]
   65cf0:	mov	r0, sl
   65cf4:	mov	r2, #5
   65cf8:	bl	11690 <ReadInt32Data>
   65cfc:	add	r5, sp, #4
   65d00:	mov	r0, sl
   65d04:	mov	r2, #5
   65d08:	mov	r3, #1
   65d0c:	mov	r1, r5
   65d10:	bl	11690 <ReadInt32Data>
   65d14:	ldr	r1, [r8, #4]
   65d18:	ldr	r3, [r6, #20]
   65d1c:	mov	r0, sl
   65d20:	mov	r2, #5
   65d24:	bl	11690 <ReadInt32Data>
   65d28:	mov	r0, sl
   65d2c:	mov	r1, r5
   65d30:	b	65e54 <Mat_VarRead4+0x7ec>
   65d34:	ldr	r0, [r8]
   65d38:	bl	1804 <free@plt>
   65d3c:	ldr	r0, [r8, #4]
   65d40:	bl	1804 <free@plt>
   65d44:	mov	r0, r8
   65d48:	b	65e6c <Mat_VarRead4+0x804>
   65d4c:	ldr	r3, [r6, #20]
   65d50:	ldr	r1, [r8]
   65d54:	mov	r0, sl
   65d58:	mov	r2, #7
   65d5c:	bl	8aa0 <ReadSingleData>
   65d60:	add	r5, sp, #4
   65d64:	mov	r0, sl
   65d68:	mov	r2, #7
   65d6c:	mov	r3, #1
   65d70:	mov	r1, r5
   65d74:	bl	8aa0 <ReadSingleData>
   65d78:	ldr	r1, [r8, #4]
   65d7c:	ldr	r3, [r6, #20]
   65d80:	mov	r0, sl
   65d84:	mov	r2, #7
   65d88:	bl	8aa0 <ReadSingleData>
   65d8c:	mov	r0, sl
   65d90:	mov	r1, r5
   65d94:	b	65ec0 <Mat_VarRead4+0x858>
   65d98:	ldr	r3, [r6, #20]
   65d9c:	ldr	r1, [r8]
   65da0:	mov	r0, sl
   65da4:	mov	r2, #9
   65da8:	bl	37d8 <ReadDoubleData>
   65dac:	add	r5, sp, #8
   65db0:	mov	r0, sl
   65db4:	mov	r2, #9
   65db8:	mov	r3, #1
   65dbc:	mov	r1, r5
   65dc0:	bl	37d8 <ReadDoubleData>
   65dc4:	ldr	r1, [r8, #4]
   65dc8:	ldr	r3, [r6, #20]
   65dcc:	mov	r0, sl
   65dd0:	mov	r2, #9
   65dd4:	bl	37d8 <ReadDoubleData>
   65dd8:	mov	r0, sl
   65ddc:	mov	r1, r5
   65de0:	b	65eec <Mat_VarRead4+0x884>
   65de4:	ldr	r3, [r6, #20]
   65de8:	mov	r0, sl
   65dec:	mov	r2, #3
   65df0:	bl	16fe8 <ReadInt16Data>
   65df4:	add	r1, sp, #4
   65df8:	mov	r0, sl
   65dfc:	mov	r2, #3
   65e00:	mov	r3, #1
   65e04:	bl	16fe8 <ReadInt16Data>
   65e08:	sub	sp, fp, #28
   65e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65e10:	ldr	r3, [r6, #20]
   65e14:	mov	r0, sl
   65e18:	mov	r2, #4
   65e1c:	bl	19a24 <ReadUInt16Data>
   65e20:	add	r1, sp, #4
   65e24:	mov	r0, sl
   65e28:	mov	r2, #4
   65e2c:	mov	r3, #1
   65e30:	bl	19a24 <ReadUInt16Data>
   65e34:	sub	sp, fp, #28
   65e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65e3c:	ldr	r3, [r6, #20]
   65e40:	mov	r0, sl
   65e44:	mov	r2, #5
   65e48:	bl	11690 <ReadInt32Data>
   65e4c:	add	r1, sp, #4
   65e50:	mov	r0, sl
   65e54:	mov	r2, #5
   65e58:	mov	r3, #1
   65e5c:	bl	11690 <ReadInt32Data>
   65e60:	sub	sp, fp, #28
   65e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65e68:	mov	r0, r1
   65e6c:	bl	1804 <free@plt>
   65e70:	ldr	r0, [r6, #12]
   65e74:	bl	1804 <free@plt>
   65e78:	ldr	r0, [r6, #4]
   65e7c:	bl	1804 <free@plt>
   65e80:	ldr	r0, [r5, #40]	; 0x28
   65e84:	bl	1804 <free@plt>
   65e88:	mov	r0, #0
   65e8c:	mov	r1, r9
   65e90:	str	r0, [r5, #40]	; 0x28
   65e94:	ldr	r0, [pc, #132]	; 65f20 <Mat_VarRead4+0x8b8>
   65e98:	add	r0, pc, r0
   65e9c:	bl	19b4 <Mat_Critical@plt>
   65ea0:	sub	sp, fp, #28
   65ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65ea8:	ldr	r3, [r6, #20]
   65eac:	mov	r0, sl
   65eb0:	mov	r2, #7
   65eb4:	bl	8aa0 <ReadSingleData>
   65eb8:	add	r1, sp, #4
   65ebc:	mov	r0, sl
   65ec0:	mov	r2, #7
   65ec4:	mov	r3, #1
   65ec8:	bl	8aa0 <ReadSingleData>
   65ecc:	sub	sp, fp, #28
   65ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65ed4:	ldr	r3, [r6, #20]
   65ed8:	mov	r0, sl
   65edc:	mov	r2, #9
   65ee0:	bl	37d8 <ReadDoubleData>
   65ee4:	add	r1, sp, #8
   65ee8:	mov	r0, sl
   65eec:	mov	r2, #9
   65ef0:	mov	r3, #1
   65ef4:	bl	37d8 <ReadDoubleData>
   65ef8:	sub	sp, fp, #28
   65efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   65f00:	.word	0x00006671
   65f04:	.word	0x000064c8
   65f08:	.word	0x00006534
   65f0c:	.word	0x00006428
   65f10:	.word	0x00006894
   65f14:	.word	0x00006974
   65f18:	.word	0x000066ff
   65f1c:	.word	0x000062f9
   65f20:	.word	0x000063ff
   65f24:	.word	0x00006302
   65f28:	.word	0x00006520
   65f2c:	.word	0x00006a09
   65f30:	.word	0x000068c6

00065f34 <Mat_VarReadData4>:
   65f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   65f38:	add	fp, sp, #28
   65f3c:	sub	sp, sp, #28
   65f40:	mov	r7, r1
   65f44:	ldr	r1, [r1, #52]	; 0x34
   65f48:	mov	r4, r0
   65f4c:	ldr	r0, [r0]
   65f50:	mov	r8, r2
   65f54:	mov	r2, #0
   65f58:	mov	r5, r3
   65f5c:	ldr	r1, [r1]
   65f60:	bl	1a2c <fseek@plt>
   65f64:	ldr	r3, [r7, #8]
   65f68:	mov	r6, #1
   65f6c:	cmp	r3, #9
   65f70:	bhi	6613c <Mat_VarReadData4+0x208>
   65f74:	mov	r0, #1
   65f78:	mov	r1, #700	; 0x2bc
   65f7c:	tst	r1, r0, lsl r3
   65f80:	beq	6613c <Mat_VarReadData4+0x208>
   65f84:	ldr	r0, [r7, #4]
   65f88:	ldr	r9, [fp, #12]
   65f8c:	ldr	sl, [fp, #8]
   65f90:	cmp	r0, #2
   65f94:	bne	66068 <Mat_VarReadData4+0x134>
   65f98:	ldr	r2, [r9]
   65f9c:	ldr	r0, [r5]
   65fa0:	ldr	r1, [sl]
   65fa4:	mov	r6, #1
   65fa8:	sub	r2, r2, #1
   65fac:	mla	r0, r2, r1, r0
   65fb0:	add	r1, r0, #1
   65fb4:	ldr	r0, [r7, #32]
   65fb8:	ldr	r2, [r0]
   65fbc:	cmp	r1, r2
   65fc0:	bhi	65fec <Mat_VarReadData4+0xb8>
   65fc4:	ldr	r6, [r9, #4]
   65fc8:	ldr	r1, [r5, #4]
   65fcc:	ldr	r2, [sl, #4]
   65fd0:	sub	r6, r6, #1
   65fd4:	mla	r1, r6, r2, r1
   65fd8:	ldr	r2, [r0, #4]
   65fdc:	mov	r6, #0
   65fe0:	add	r1, r1, #1
   65fe4:	cmp	r1, r2
   65fe8:	movwhi	r6, #1
   65fec:	ldr	r1, [r7, #20]
   65ff0:	cmp	r1, #0
   65ff4:	beq	66100 <Mat_VarReadData4+0x1cc>
   65ff8:	mov	r0, r3
   65ffc:	bl	1924 <Mat_SizeOf@plt>
   66000:	str	r0, [sp, #24]
   66004:	add	r1, sp, #24
   66008:	mov	r0, r7
   6600c:	bl	665f0 <SafeMulDims>
   66010:	ldr	r0, [r7, #32]
   66014:	ldr	r1, [r8]
   66018:	ldr	r3, [r7, #8]
   6601c:	ldr	r2, [r7, #16]
   66020:	stm	sp, {r0, r5, sl}
   66024:	mov	r0, r4
   66028:	str	r9, [sp, #12]
   6602c:	bl	2a7b0 <ReadDataSlab2>
   66030:	ldr	r0, [r7, #52]	; 0x34
   66034:	ldr	r1, [sp, #24]
   66038:	mov	r2, #0
   6603c:	ldr	r0, [r0]
   66040:	add	r1, r1, r0
   66044:	ldr	r0, [r4]
   66048:	bl	1a2c <fseek@plt>
   6604c:	ldr	r0, [r7, #32]
   66050:	ldr	r1, [r8, #4]
   66054:	ldr	r3, [r7, #8]
   66058:	ldr	r2, [r7, #16]
   6605c:	stm	sp, {r0, r5, sl}
   66060:	mov	r0, r4
   66064:	b	66110 <Mat_VarReadData4+0x1dc>
   66068:	ldr	r1, [r7, #20]
   6606c:	cmp	r1, #0
   66070:	beq	6611c <Mat_VarReadData4+0x1e8>
   66074:	mov	r0, r3
   66078:	bl	1924 <Mat_SizeOf@plt>
   6607c:	str	r0, [sp, #20]
   66080:	add	r1, sp, #20
   66084:	mov	r0, r7
   66088:	bl	665f0 <SafeMulDims>
   6608c:	ldr	r1, [r8]
   66090:	ldmib	r7, {r0, r3}
   66094:	ldr	r2, [r7, #16]
   66098:	ldr	r6, [r7, #32]
   6609c:	stm	sp, {r0, r6}
   660a0:	mov	r0, r4
   660a4:	str	r5, [sp, #8]
   660a8:	str	sl, [sp, #12]
   660ac:	str	r9, [sp, #16]
   660b0:	bl	21938 <ReadDataSlabN>
   660b4:	ldr	r0, [r7, #52]	; 0x34
   660b8:	ldr	r1, [sp, #20]
   660bc:	mov	r2, #0
   660c0:	mov	r6, #0
   660c4:	ldr	r0, [r0]
   660c8:	add	r1, r1, r0
   660cc:	ldr	r0, [r4]
   660d0:	bl	1a2c <fseek@plt>
   660d4:	ldr	r1, [r8, #4]
   660d8:	ldmib	r7, {r0, r3}
   660dc:	ldr	r2, [r7, #16]
   660e0:	ldr	r7, [r7, #32]
   660e4:	stm	sp, {r0, r7}
   660e8:	mov	r0, r4
   660ec:	str	r5, [sp, #8]
   660f0:	str	sl, [sp, #12]
   660f4:	str	r9, [sp, #16]
   660f8:	bl	21938 <ReadDataSlabN>
   660fc:	b	6613c <Mat_VarReadData4+0x208>
   66100:	ldr	r2, [r7, #16]
   66104:	stm	sp, {r0, r5, sl}
   66108:	mov	r0, r4
   6610c:	mov	r1, r8
   66110:	str	r9, [sp, #12]
   66114:	bl	2a7b0 <ReadDataSlab2>
   66118:	b	6613c <Mat_VarReadData4+0x208>
   6611c:	ldr	r2, [r7, #16]
   66120:	ldr	r1, [r7, #32]
   66124:	stm	sp, {r0, r1, r5, sl}
   66128:	mov	r0, r4
   6612c:	mov	r1, r8
   66130:	str	r9, [sp, #16]
   66134:	bl	21938 <ReadDataSlabN>
   66138:	mov	r6, #0
   6613c:	mov	r0, r6
   66140:	sub	sp, fp, #28
   66144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00066148 <Mat_VarReadDataLinear4>:
   66148:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6614c:	add	fp, sp, #28
   66150:	sub	sp, sp, #28
   66154:	mov	r7, r1
   66158:	mov	r9, r0
   6615c:	mov	r4, #1
   66160:	add	r1, sp, #24
   66164:	mov	r5, r3
   66168:	str	r2, [sp, #16]
   6616c:	mov	r0, r7
   66170:	str	r4, [sp, #24]
   66174:	bl	665f0 <SafeMulDims>
   66178:	ldr	r1, [r7, #52]	; 0x34
   6617c:	str	r0, [sp, #20]
   66180:	ldr	r0, [r9]
   66184:	mov	r2, #0
   66188:	ldr	r1, [r1]
   6618c:	bl	1a2c <fseek@plt>
   66190:	ldr	r0, [r7, #8]
   66194:	bl	1924 <Mat_SizeOf@plt>
   66198:	mov	ip, r5
   6619c:	ldr	r5, [fp, #12]
   661a0:	ldr	r6, [fp, #8]
   661a4:	str	r0, [r7, #12]
   661a8:	mov	sl, r0
   661ac:	ldr	r8, [sp, #24]
   661b0:	sub	r0, r5, #1
   661b4:	mla	r0, r0, r6, ip
   661b8:	add	r0, r0, #1
   661bc:	cmp	r0, r8
   661c0:	bhi	66248 <Mat_VarReadDataLinear4+0x100>
   661c4:	ldr	r0, [r7, #20]
   661c8:	cmp	r0, #0
   661cc:	beq	66220 <Mat_VarReadDataLinear4+0xd8>
   661d0:	ldr	r4, [sp, #16]
   661d4:	ldr	r3, [r7, #8]
   661d8:	ldr	r2, [r7, #16]
   661dc:	mov	r0, r9
   661e0:	ldr	r1, [r4]
   661e4:	str	r5, [sp, #8]
   661e8:	str	ip, [sp]
   661ec:	str	r6, [sp, #4]
   661f0:	mov	r5, ip
   661f4:	bl	2a2e0 <ReadDataSlab1>
   661f8:	ldr	r0, [r7, #52]	; 0x34
   661fc:	mov	r2, #0
   66200:	ldr	r0, [r0]
   66204:	mla	r1, r8, sl, r0
   66208:	ldr	r0, [r9]
   6620c:	bl	1a2c <fseek@plt>
   66210:	mov	ip, r5
   66214:	ldr	r5, [fp, #12]
   66218:	ldr	r4, [r4, #4]
   6621c:	b	66224 <Mat_VarReadDataLinear4+0xdc>
   66220:	ldr	r4, [sp, #16]
   66224:	ldr	r3, [r7, #8]
   66228:	ldr	r2, [r7, #16]
   6622c:	mov	r0, r9
   66230:	mov	r1, r4
   66234:	str	ip, [sp]
   66238:	str	r6, [sp, #4]
   6623c:	str	r5, [sp, #8]
   66240:	bl	2a2e0 <ReadDataSlab1>
   66244:	ldr	r4, [sp, #20]
   66248:	mov	r0, r4
   6624c:	sub	sp, fp, #28
   66250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   66254:	nop	{0}

00066258 <Mat_VarReadNextInfo4>:
   66258:	push	{r4, r5, r6, sl, fp, lr}
   6625c:	add	fp, sp, #16
   66260:	sub	sp, sp, #8
   66264:	cmp	r0, #0
   66268:	beq	66518 <Mat_VarReadNextInfo4+0x2c0>
   6626c:	mov	r5, r0
   66270:	ldr	r0, [r0]
   66274:	cmp	r0, #0
   66278:	beq	66518 <Mat_VarReadNextInfo4+0x2c0>
   6627c:	bl	18a0 <Mat_VarCalloc@plt>
   66280:	cmp	r0, #0
   66284:	beq	66518 <Mat_VarReadNextInfo4+0x2c0>
   66288:	ldr	r3, [r5]
   6628c:	mov	r4, r0
   66290:	add	r0, sp, #4
   66294:	mov	r1, #4
   66298:	mov	r2, #1
   6629c:	bl	18b8 <fread@plt>
   662a0:	cmp	r0, #0
   662a4:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   662a8:	ldr	r0, [sp, #4]
   662ac:	movw	r1, #4053	; 0xfd5
   662b0:	cmp	r0, r1
   662b4:	bcc	662d0 <Mat_VarReadNextInfo4+0x78>
   662b8:	add	r0, sp, #4
   662bc:	bl	1bf8 <Mat_int32Swap>
   662c0:	movw	r1, #4052	; 0xfd4
   662c4:	cmp	r0, r1
   662c8:	bgt	66510 <Mat_VarReadNextInfo4+0x2b8>
   662cc:	ldr	r0, [sp, #4]
   662d0:	vmov	s0, r0
   662d4:	vldr	d16, [pc, #612]	; 66540 <Mat_VarReadNextInfo4+0x2e8>
   662d8:	movw	r2, #64536	; 0xfc18
   662dc:	movt	r2, #65535	; 0xffff
   662e0:	vcvt.f64.s32	d17, s0
   662e4:	vdiv.f64	d16, d17, d16
   662e8:	vcvtm.s32.f64	s0, d16
   662ec:	vldr	d16, [pc, #596]	; 66548 <Mat_VarReadNextInfo4+0x2f0>
   662f0:	vmov	r1, s0
   662f4:	mla	r0, r1, r2, r0
   662f8:	mvn	r2, #99	; 0x63
   662fc:	cmp	r1, #2
   66300:	vmov	s0, r0
   66304:	vcvt.f64.s32	d17, s0
   66308:	vdiv.f64	d16, d17, d16
   6630c:	vcvtm.s32.f64	s0, d16
   66310:	vmov.f64	d16, #36	; 0x41200000  10.0
   66314:	vmov	r3, s0
   66318:	mla	r0, r3, r2, r0
   6631c:	vmov	s0, r0
   66320:	vcvt.f64.s32	d17, s0
   66324:	vdiv.f64	d16, d17, d16
   66328:	vcvtm.s32.f64	s0, d16
   6632c:	vmov	r2, s0
   66330:	add	r6, r2, r2, lsl #2
   66334:	rsb	r6, r6, #0
   66338:	add	r0, r0, r6, lsl #1
   6633c:	str	r0, [sp, #4]
   66340:	bcs	66510 <Mat_VarReadNextInfo4+0x2b8>
   66344:	cmp	r3, #0
   66348:	str	r1, [r5, #20]
   6634c:	bne	66510 <Mat_VarReadNextInfo4+0x2b8>
   66350:	cmp	r2, #6
   66354:	bcs	66510 <Mat_VarReadNextInfo4+0x2b8>
   66358:	ldr	r1, [pc, #496]	; 66550 <Mat_VarReadNextInfo4+0x2f8>
   6635c:	cmp	r0, #3
   66360:	add	r1, pc, r1
   66364:	ldr	r1, [r1, r2, lsl #2]
   66368:	str	r1, [r4, #8]
   6636c:	bcs	66510 <Mat_VarReadNextInfo4+0x2b8>
   66370:	mov	r1, #2
   66374:	str	r1, [r4, #4]
   66378:	ldr	r1, [pc, #468]	; 66554 <Mat_VarReadNextInfo4+0x2fc>
   6637c:	add	r1, pc, r1
   66380:	ldr	r0, [r1, r0, lsl #2]
   66384:	str	r0, [r4, #16]
   66388:	mov	r0, #8
   6638c:	bl	18d0 <malloc@plt>
   66390:	cmp	r0, #0
   66394:	str	r0, [r4, #32]
   66398:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   6639c:	ldr	r3, [r5]
   663a0:	add	r0, sp, #4
   663a4:	mov	r1, #4
   663a8:	mov	r2, #1
   663ac:	bl	18b8 <fread@plt>
   663b0:	mov	r6, r0
   663b4:	ldr	r0, [r5, #20]
   663b8:	cmp	r0, #0
   663bc:	beq	663c8 <Mat_VarReadNextInfo4+0x170>
   663c0:	add	r0, sp, #4
   663c4:	bl	1bf8 <Mat_int32Swap>
   663c8:	ldr	r0, [r4, #32]
   663cc:	ldr	r1, [sp, #4]
   663d0:	cmp	r6, #0
   663d4:	str	r1, [r0]
   663d8:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   663dc:	ldr	r3, [r5]
   663e0:	add	r0, sp, #4
   663e4:	mov	r1, #4
   663e8:	mov	r2, #1
   663ec:	bl	18b8 <fread@plt>
   663f0:	mov	r6, r0
   663f4:	ldr	r0, [r5, #20]
   663f8:	cmp	r0, #0
   663fc:	beq	66408 <Mat_VarReadNextInfo4+0x1b0>
   66400:	add	r0, sp, #4
   66404:	bl	1bf8 <Mat_int32Swap>
   66408:	ldr	r0, [r4, #32]
   6640c:	ldr	r1, [sp, #4]
   66410:	cmp	r6, #0
   66414:	str	r1, [r0, #4]
   66418:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   6641c:	ldr	r3, [r5]
   66420:	add	r6, r4, #20
   66424:	mov	r1, #4
   66428:	mov	r2, #1
   6642c:	mov	r0, r6
   66430:	bl	18b8 <fread@plt>
   66434:	cmp	r0, #0
   66438:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   6643c:	ldr	r0, [r6]
   66440:	cmp	r0, #0
   66444:	beq	66454 <Mat_VarReadNextInfo4+0x1fc>
   66448:	ldr	r0, [r4, #16]
   6644c:	cmp	r0, #4
   66450:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   66454:	ldr	r3, [r5]
   66458:	add	r0, sp, #4
   6645c:	mov	r1, #4
   66460:	mov	r2, #1
   66464:	bl	18b8 <fread@plt>
   66468:	cmp	r0, #0
   6646c:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   66470:	ldr	r0, [r5, #20]
   66474:	cmp	r0, #0
   66478:	beq	66484 <Mat_VarReadNextInfo4+0x22c>
   6647c:	add	r0, sp, #4
   66480:	bl	1bf8 <Mat_int32Swap>
   66484:	ldr	r6, [sp, #4]
   66488:	cmp	r6, #0
   6648c:	ble	66510 <Mat_VarReadNextInfo4+0x2b8>
   66490:	mov	r0, r6
   66494:	bl	18d0 <malloc@plt>
   66498:	cmp	r0, #0
   6649c:	str	r0, [r4, #36]	; 0x24
   664a0:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   664a4:	ldr	r3, [r5]
   664a8:	mov	r1, #1
   664ac:	mov	r2, r6
   664b0:	bl	18b8 <fread@plt>
   664b4:	cmp	r0, #0
   664b8:	beq	66510 <Mat_VarReadNextInfo4+0x2b8>
   664bc:	ldr	r0, [r5]
   664c0:	bl	1840 <ftell@plt>
   664c4:	ldr	r1, [r4, #52]	; 0x34
   664c8:	cmn	r0, #1
   664cc:	str	r0, [r1]
   664d0:	beq	66528 <Mat_VarReadNextInfo4+0x2d0>
   664d4:	ldr	r0, [r4, #8]
   664d8:	bl	1924 <Mat_SizeOf@plt>
   664dc:	str	r0, [sp]
   664e0:	ldr	r1, [r4, #20]
   664e4:	cmp	r1, #0
   664e8:	mov	r1, sp
   664ec:	lslne	r0, r0, #1
   664f0:	strne	r0, [sp]
   664f4:	mov	r0, r4
   664f8:	bl	665f0 <SafeMulDims>
   664fc:	ldr	r1, [sp]
   66500:	ldr	r0, [r5]
   66504:	mov	r2, #1
   66508:	bl	1a2c <fseek@plt>
   6650c:	b	6651c <Mat_VarReadNextInfo4+0x2c4>
   66510:	mov	r0, r4
   66514:	bl	1918 <Mat_VarFree@plt>
   66518:	mov	r4, #0
   6651c:	mov	r0, r4
   66520:	sub	sp, fp, #16
   66524:	pop	{r4, r5, r6, sl, fp, pc}
   66528:	mov	r0, r4
   6652c:	bl	1918 <Mat_VarFree@plt>
   66530:	ldr	r0, [pc, #32]	; 66558 <Mat_VarReadNextInfo4+0x300>
   66534:	add	r0, pc, r0
   66538:	bl	19b4 <Mat_Critical@plt>
   6653c:	b	66518 <Mat_VarReadNextInfo4+0x2c0>
   66540:	.word	0x00000000
   66544:	.word	0x408f4000
   66548:	.word	0x00000000
   6654c:	.word	0x40590000
   66550:	.word	0x00005fb0
   66554:	.word	0x00005fac
   66558:	.word	0x00005858

0006655c <ComplexMalloc>:
   6655c:	push	{r4, r5, r6, sl, fp, lr}
   66560:	add	fp, sp, #16
   66564:	mov	r5, r0
   66568:	mov	r0, #8
   6656c:	bl	18d0 <malloc@plt>
   66570:	cmp	r0, #0
   66574:	beq	665c0 <ComplexMalloc+0x64>
   66578:	mov	r4, r0
   6657c:	mov	r0, r5
   66580:	bl	18d0 <malloc@plt>
   66584:	cmp	r0, #0
   66588:	str	r0, [r4]
   6658c:	beq	665b8 <ComplexMalloc+0x5c>
   66590:	mov	r6, r0
   66594:	mov	r0, r5
   66598:	bl	18d0 <malloc@plt>
   6659c:	cmp	r0, #0
   665a0:	str	r0, [r4, #4]
   665a4:	beq	665b0 <ComplexMalloc+0x54>
   665a8:	mov	r0, r4
   665ac:	pop	{r4, r5, r6, sl, fp, pc}
   665b0:	mov	r0, r6
   665b4:	bl	1804 <free@plt>
   665b8:	mov	r0, r4
   665bc:	bl	1804 <free@plt>
   665c0:	mov	r4, #0
   665c4:	mov	r0, r4
   665c8:	pop	{r4, r5, r6, sl, fp, pc}

000665cc <ClassType2DataType>:
   665cc:	sub	r0, r0, #1
   665d0:	cmp	r0, #14
   665d4:	movhi	r0, #0
   665d8:	bxhi	lr
   665dc:	ldr	r1, [pc, #8]	; 665ec <ClassType2DataType+0x20>
   665e0:	add	r1, pc, r1
   665e4:	ldr	r0, [r1, r0, lsl #2]
   665e8:	bx	lr
   665ec:	.word	0x00006470

000665f0 <SafeMulDims>:
   665f0:	push	{fp, lr}
   665f4:	mov	fp, sp
   665f8:	ldr	r2, [r0, #4]
   665fc:	cmp	r2, #1
   66600:	blt	66634 <SafeMulDims+0x44>
   66604:	ldr	lr, [r1]
   66608:	ldr	ip, [r0, #32]
   6660c:	mov	r3, #0
   66610:	ldr	r2, [ip, r3, lsl #2]
   66614:	umull	lr, r2, lr, r2
   66618:	cmp	r2, #0
   6661c:	str	lr, [r1]
   66620:	bne	6663c <SafeMulDims+0x4c>
   66624:	ldr	r2, [r0, #4]
   66628:	add	r3, r3, #1
   6662c:	cmp	r3, r2
   66630:	blt	66610 <SafeMulDims+0x20>
   66634:	mov	r0, #0
   66638:	pop	{fp, pc}
   6663c:	mov	r0, #0
   66640:	str	r0, [r1]
   66644:	mov	r0, #1
   66648:	pop	{fp, pc}

0006664c <SafeMul>:
   6664c:	umull	r2, r1, r1, r2
   66650:	cmp	r1, #0
   66654:	movwne	r1, #1
   66658:	cmp	r1, #0
   6665c:	movwne	r2, #0
   66660:	str	r2, [r0]
   66664:	mov	r0, r1
   66668:	bx	lr

0006666c <Mat_GetLibraryVersion>:
   6666c:	cmp	r0, #0
   66670:	movne	r3, #1
   66674:	strne	r3, [r0]
   66678:	cmp	r1, #0
   6667c:	movne	r0, #5
   66680:	strne	r0, [r1]
   66684:	cmp	r2, #0
   66688:	movne	r0, #15
   6668c:	strne	r0, [r2]
   66690:	bx	lr

00066694 <Mat_CreateVer>:
   66694:	cmp	r2, #256	; 0x100
   66698:	beq	666ac <Mat_CreateVer+0x18>
   6669c:	cmp	r2, #16
   666a0:	movne	r0, #0
   666a4:	bxne	lr
   666a8:	b	64f68 <Mat_Create4>
   666ac:	b	2d850 <Mat_Create5>

000666b0 <Mat_Open>:
   666b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   666b4:	add	fp, sp, #24
   666b8:	sub	sp, sp, #8
   666bc:	mov	r9, r1
   666c0:	mov	r8, r0
   666c4:	tst	r1, #1
   666c8:	bne	666ec <Mat_Open+0x3c>
   666cc:	ldr	r1, [pc, #896]	; 66a54 <Mat_Open+0x3a4>
   666d0:	mov	r0, r8
   666d4:	add	r1, pc, r1
   666d8:	bl	17e0 <fopen@plt>
   666dc:	mov	r7, r0
   666e0:	cmp	r0, #0
   666e4:	bne	66708 <Mat_Open+0x58>
   666e8:	b	66a44 <Mat_Open+0x394>
   666ec:	ldr	r1, [pc, #872]	; 66a5c <Mat_Open+0x3ac>
   666f0:	mov	r0, r8
   666f4:	add	r1, pc, r1
   666f8:	bl	17e0 <fopen@plt>
   666fc:	mov	r7, r0
   66700:	cmp	r0, #0
   66704:	beq	66820 <Mat_Open+0x170>
   66708:	mov	r0, #44	; 0x2c
   6670c:	bl	18d0 <malloc@plt>
   66710:	cmp	r0, #0
   66714:	beq	66808 <Mat_Open+0x158>
   66718:	mov	r5, r0
   6671c:	str	r7, [r0]
   66720:	mov	r0, #128	; 0x80
   66724:	mov	r1, #1
   66728:	bl	1798 <calloc@plt>
   6672c:	cmp	r0, #0
   66730:	str	r0, [r5, #4]
   66734:	beq	66848 <Mat_Open+0x198>
   66738:	mov	r4, r0
   6673c:	mov	r0, #8
   66740:	mov	r1, #1
   66744:	bl	1798 <calloc@plt>
   66748:	cmp	r0, #0
   6674c:	str	r0, [r5, #8]
   66750:	beq	66868 <Mat_Open+0x1b8>
   66754:	mov	r6, #0
   66758:	mov	r0, r4
   6675c:	mov	r1, #1
   66760:	mov	r2, #116	; 0x74
   66764:	mov	r3, r7
   66768:	str	r6, [r5, #36]	; 0x24
   6676c:	str	r6, [r5, #40]	; 0x28
   66770:	str	r6, [r5, #12]
   66774:	str	r6, [r5, #16]
   66778:	str	r6, [r5, #20]
   6677c:	bl	18b8 <fread@plt>
   66780:	mov	r4, r0
   66784:	ldr	r0, [r5, #4]
   66788:	mov	r1, #1
   6678c:	mov	r2, #8
   66790:	mov	r3, r7
   66794:	strb	r6, [r0, #116]	; 0x74
   66798:	ldr	r0, [r5, #8]
   6679c:	bl	18b8 <fread@plt>
   667a0:	add	r4, r0, r4
   667a4:	add	r0, sp, #4
   667a8:	mov	r1, #2
   667ac:	mov	r2, #1
   667b0:	mov	r3, r7
   667b4:	bl	18b8 <fread@plt>
   667b8:	add	r4, r4, r0, lsl #1
   667bc:	add	r0, sp, #6
   667c0:	mov	r1, #1
   667c4:	mov	r2, #2
   667c8:	mov	r3, r7
   667cc:	bl	18b8 <fread@plt>
   667d0:	add	r4, r4, r0
   667d4:	cmp	r4, #128	; 0x80
   667d8:	bne	668f4 <Mat_Open+0x244>
   667dc:	mvn	r0, #0
   667e0:	movw	r1, #18765	; 0x494d
   667e4:	str	r0, [r5, #20]
   667e8:	ldrh	r0, [sp, #6]
   667ec:	cmp	r0, r1
   667f0:	beq	668a4 <Mat_Open+0x1f4>
   667f4:	movw	r1, #19785	; 0x4d49
   667f8:	cmp	r0, r1
   667fc:	moveq	r0, #0
   66800:	streq	r0, [r5, #20]
   66804:	b	668b4 <Mat_Open+0x204>
   66808:	mov	r0, r7
   6680c:	bl	19cc <fclose@plt>
   66810:	ldr	r0, [pc, #576]	; 66a58 <Mat_Open+0x3a8>
   66814:	add	r0, pc, r0
   66818:	bl	19b4 <Mat_Critical@plt>
   6681c:	b	66a44 <Mat_Open+0x394>
   66820:	bic	r0, r9, #1
   66824:	cmp	r0, #256	; 0x100
   66828:	beq	66890 <Mat_Open+0x1e0>
   6682c:	mov	r5, #0
   66830:	cmp	r0, #16
   66834:	bne	66a48 <Mat_Open+0x398>
   66838:	mov	r0, r8
   6683c:	bl	64f68 <Mat_Create4>
   66840:	mov	r5, r0
   66844:	b	66a48 <Mat_Open+0x398>
   66848:	mov	r0, r5
   6684c:	bl	1804 <free@plt>
   66850:	mov	r0, r7
   66854:	bl	19cc <fclose@plt>
   66858:	ldr	r0, [pc, #512]	; 66a60 <Mat_Open+0x3b0>
   6685c:	add	r0, pc, r0
   66860:	bl	19b4 <Mat_Critical@plt>
   66864:	b	66a44 <Mat_Open+0x394>
   66868:	mov	r0, r4
   6686c:	bl	1804 <free@plt>
   66870:	mov	r0, r5
   66874:	bl	1804 <free@plt>
   66878:	mov	r0, r7
   6687c:	bl	19cc <fclose@plt>
   66880:	ldr	r0, [pc, #476]	; 66a64 <Mat_Open+0x3b4>
   66884:	add	r0, pc, r0
   66888:	bl	19b4 <Mat_Critical@plt>
   6688c:	b	66a44 <Mat_Open+0x394>
   66890:	mov	r0, r8
   66894:	mov	r1, #0
   66898:	bl	2d850 <Mat_Create5>
   6689c:	mov	r5, r0
   668a0:	b	66a48 <Mat_Open+0x398>
   668a4:	mov	r0, #1
   668a8:	str	r0, [r5, #20]
   668ac:	add	r0, sp, #4
   668b0:	bl	1c20 <Mat_int16Swap>
   668b4:	ldrh	r0, [sp, #4]
   668b8:	cmp	r0, #512	; 0x200
   668bc:	sxth	r1, r0
   668c0:	cmpne	r0, #256	; 0x100
   668c4:	str	r1, [r5, #16]
   668c8:	bne	66904 <Mat_Open+0x254>
   668cc:	ldr	r0, [r5, #20]
   668d0:	cmn	r0, #1
   668d4:	beq	66904 <Mat_Open+0x254>
   668d8:	ldr	r0, [r5]
   668dc:	bl	1840 <ftell@plt>
   668e0:	cmn	r0, #1
   668e4:	str	r0, [r5, #28]
   668e8:	beq	669ac <Mat_Open+0x2fc>
   668ec:	mov	r0, #0
   668f0:	str	r0, [r5, #32]
   668f4:	ldr	r0, [r5, #16]
   668f8:	cmp	r0, #0
   668fc:	bne	669f8 <Mat_Open+0x348>
   66900:	b	6690c <Mat_Open+0x25c>
   66904:	mov	r0, #0
   66908:	str	r0, [r5, #16]
   6690c:	ldr	r0, [r5, #4]
   66910:	bl	1804 <free@plt>
   66914:	ldr	r0, [r5, #8]
   66918:	bl	1804 <free@plt>
   6691c:	mov	r1, #16
   66920:	mov	r0, #0
   66924:	mov	r2, #0
   66928:	str	r1, [r5, #16]
   6692c:	str	r0, [r5, #20]
   66930:	str	r9, [r5, #24]
   66934:	str	r0, [r5, #28]
   66938:	str	r0, [r5, #32]
   6693c:	str	r7, [r5]
   66940:	str	r0, [r5, #4]
   66944:	str	r0, [r5, #8]
   66948:	mov	r0, r7
   6694c:	mov	r1, #0
   66950:	bl	1a2c <fseek@plt>
   66954:	mov	r0, r5
   66958:	bl	66258 <Mat_VarReadNextInfo4>
   6695c:	cmp	r4, #0
   66960:	beq	66980 <Mat_Open+0x2d0>
   66964:	cmp	r0, #0
   66968:	bne	66980 <Mat_Open+0x2d0>
   6696c:	mov	r0, r5
   66970:	bl	19a8 <Mat_Close@plt>
   66974:	ldr	r0, [pc, #240]	; 66a6c <Mat_Open+0x3bc>
   66978:	add	r0, pc, r0
   6697c:	b	66a3c <Mat_Open+0x38c>
   66980:	bl	1918 <Mat_VarFree@plt>
   66984:	ldr	r0, [r5, #16]
   66988:	cmp	r0, #16
   6698c:	beq	669dc <Mat_Open+0x32c>
   66990:	cmp	r0, #512	; 0x200
   66994:	beq	669f0 <Mat_Open+0x340>
   66998:	cmp	r0, #256	; 0x100
   6699c:	bne	669f8 <Mat_Open+0x348>
   669a0:	ldr	r0, [r5]
   669a4:	mov	r1, #128	; 0x80
   669a8:	b	669e4 <Mat_Open+0x334>
   669ac:	ldr	r0, [r5, #4]
   669b0:	bl	1804 <free@plt>
   669b4:	ldr	r0, [r5, #8]
   669b8:	bl	1804 <free@plt>
   669bc:	mov	r0, r5
   669c0:	bl	1804 <free@plt>
   669c4:	mov	r0, r7
   669c8:	bl	19cc <fclose@plt>
   669cc:	ldr	r0, [pc, #148]	; 66a68 <Mat_Open+0x3b8>
   669d0:	add	r0, pc, r0
   669d4:	bl	19b4 <Mat_Critical@plt>
   669d8:	b	66a44 <Mat_Open+0x394>
   669dc:	ldr	r0, [r5]
   669e0:	mov	r1, #0
   669e4:	mov	r2, #0
   669e8:	bl	1a2c <fseek@plt>
   669ec:	b	669f8 <Mat_Open+0x348>
   669f0:	mov	r0, #0
   669f4:	str	r0, [r5, #32]
   669f8:	ldr	r0, [pc, #112]	; 66a70 <Mat_Open+0x3c0>
   669fc:	mov	r1, r8
   66a00:	add	r0, pc, r0
   66a04:	bl	1da4 <strdup_printf>
   66a08:	str	r9, [r5, #24]
   66a0c:	str	r0, [r5, #12]
   66a10:	ldr	r0, [r5, #16]
   66a14:	cmp	r0, #512	; 0x200
   66a18:	bne	66a48 <Mat_Open+0x398>
   66a1c:	ldr	r0, [r5]
   66a20:	bl	19cc <fclose@plt>
   66a24:	mov	r0, #0
   66a28:	str	r0, [r5]
   66a2c:	mov	r0, r5
   66a30:	bl	19a8 <Mat_Close@plt>
   66a34:	ldr	r0, [pc, #56]	; 66a74 <Mat_Open+0x3c4>
   66a38:	add	r0, pc, r0
   66a3c:	mov	r1, r8
   66a40:	bl	19b4 <Mat_Critical@plt>
   66a44:	mov	r5, #0
   66a48:	mov	r0, r5
   66a4c:	sub	sp, fp, #24
   66a50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   66a54:	.word	0x00005c60
   66a58:	.word	0x000059c8
   66a5c:	.word	0x00005c43
   66a60:	.word	0x00005adf
   66a64:	.word	0x00005ae8
   66a68:	.word	0x000053bc
   66a6c:	.word	0x00005a2c
   66a70:	.word	0x00005ccb
   66a74:	.word	0x00005996

00066a78 <Mat_Rewind>:
   66a78:	push	{r4, sl, fp, lr}
   66a7c:	add	fp, sp, #8
   66a80:	ldr	r1, [r0, #16]
   66a84:	cmp	r1, #16
   66a88:	beq	66ab0 <Mat_Rewind+0x38>
   66a8c:	cmp	r1, #512	; 0x200
   66a90:	beq	66acc <Mat_Rewind+0x54>
   66a94:	mvn	r4, #0
   66a98:	cmp	r1, #256	; 0x100
   66a9c:	bne	66ac4 <Mat_Rewind+0x4c>
   66aa0:	ldr	r0, [r0]
   66aa4:	mov	r4, #0
   66aa8:	mov	r1, #128	; 0x80
   66aac:	b	66abc <Mat_Rewind+0x44>
   66ab0:	ldr	r0, [r0]
   66ab4:	mov	r4, #0
   66ab8:	mov	r1, #0
   66abc:	mov	r2, #0
   66ac0:	bl	1a2c <fseek@plt>
   66ac4:	mov	r0, r4
   66ac8:	pop	{r4, sl, fp, pc}
   66acc:	mov	r4, #0
   66ad0:	str	r4, [r0, #32]
   66ad4:	mov	r0, r4
   66ad8:	pop	{r4, sl, fp, pc}

00066adc <Mat_Close>:
   66adc:	cmp	r0, #0
   66ae0:	beq	66b8c <Mat_Close+0xb0>
   66ae4:	push	{r4, r5, fp, lr}
   66ae8:	add	fp, sp, #8
   66aec:	mov	r4, r0
   66af0:	ldr	r0, [r0]
   66af4:	cmp	r0, #0
   66af8:	beq	66b00 <Mat_Close+0x24>
   66afc:	bl	19cc <fclose@plt>
   66b00:	ldr	r0, [r4, #4]
   66b04:	cmp	r0, #0
   66b08:	beq	66b10 <Mat_Close+0x34>
   66b0c:	bl	1804 <free@plt>
   66b10:	ldr	r0, [r4, #8]
   66b14:	cmp	r0, #0
   66b18:	beq	66b20 <Mat_Close+0x44>
   66b1c:	bl	1804 <free@plt>
   66b20:	ldr	r0, [r4, #12]
   66b24:	cmp	r0, #0
   66b28:	beq	66b30 <Mat_Close+0x54>
   66b2c:	bl	1804 <free@plt>
   66b30:	ldr	r0, [r4, #40]	; 0x28
   66b34:	cmp	r0, #0
   66b38:	beq	66b80 <Mat_Close+0xa4>
   66b3c:	ldr	r2, [r4, #36]	; 0x24
   66b40:	cmp	r2, #0
   66b44:	beq	66b7c <Mat_Close+0xa0>
   66b48:	mov	r5, #0
   66b4c:	b	66b5c <Mat_Close+0x80>
   66b50:	add	r5, r5, #1
   66b54:	cmp	r5, r2
   66b58:	bcs	66b7c <Mat_Close+0xa0>
   66b5c:	ldr	r1, [r0, r5, lsl #2]
   66b60:	cmp	r1, #0
   66b64:	beq	66b50 <Mat_Close+0x74>
   66b68:	mov	r0, r1
   66b6c:	bl	1804 <free@plt>
   66b70:	ldr	r2, [r4, #36]	; 0x24
   66b74:	ldr	r0, [r4, #40]	; 0x28
   66b78:	b	66b50 <Mat_Close+0x74>
   66b7c:	bl	1804 <free@plt>
   66b80:	mov	r0, r4
   66b84:	bl	1804 <free@plt>
   66b88:	pop	{r4, r5, fp, lr}
   66b8c:	mov	r0, #0
   66b90:	bx	lr

00066b94 <Mat_VarFree>:
   66b94:	cmp	r0, #0
   66b98:	bxeq	lr
   66b9c:	push	{r4, r5, r6, sl, fp, lr}
   66ba0:	add	fp, sp, #16
   66ba4:	mov	r4, r0
   66ba8:	ldr	r0, [r0, #32]
   66bac:	cmp	r0, #0
   66bb0:	beq	66be8 <Mat_VarFree+0x54>
   66bb4:	ldr	r1, [r4, #4]
   66bb8:	mov	r6, #1
   66bbc:	cmp	r1, #1
   66bc0:	blt	66bf4 <Mat_VarFree+0x60>
   66bc4:	mov	r2, r0
   66bc8:	ldr	r3, [r2]
   66bcc:	umull	r6, r3, r6, r3
   66bd0:	cmp	r3, #0
   66bd4:	bne	66bf0 <Mat_VarFree+0x5c>
   66bd8:	add	r2, r2, #4
   66bdc:	subs	r1, r1, #1
   66be0:	bne	66bc8 <Mat_VarFree+0x34>
   66be4:	b	66bf4 <Mat_VarFree+0x60>
   66be8:	mov	r6, #0
   66bec:	b	66bf8 <Mat_VarFree+0x64>
   66bf0:	mov	r6, #0
   66bf4:	bl	1804 <free@plt>
   66bf8:	ldr	r5, [r4, #40]	; 0x28
   66bfc:	cmp	r5, #0
   66c00:	beq	66c90 <Mat_VarFree+0xfc>
   66c04:	ldr	r0, [r4, #16]
   66c08:	sub	r0, r0, #1
   66c0c:	cmp	r0, #15
   66c10:	bhi	66c90 <Mat_VarFree+0xfc>
   66c14:	add	r1, pc, #4
   66c18:	ldr	r0, [r1, r0, lsl #2]
   66c1c:	add	pc, r1, r0
   66c20:	.word	0x00000120
   66c24:	.word	0x00000148
   66c28:	.word	0x00000070
   66c2c:	.word	0x00000040
   66c30:	.word	0x00000188
   66c34:	.word	0x00000040
   66c38:	.word	0x00000040
   66c3c:	.word	0x00000040
   66c40:	.word	0x00000040
   66c44:	.word	0x00000040
   66c48:	.word	0x00000040
   66c4c:	.word	0x00000040
   66c50:	.word	0x00000040
   66c54:	.word	0x00000040
   66c58:	.word	0x00000040
   66c5c:	.word	0x000001e0
   66c60:	ldr	r0, [r4, #44]	; 0x2c
   66c64:	cmp	r0, #0
   66c68:	bne	66c90 <Mat_VarFree+0xfc>
   66c6c:	ldr	r0, [r4, #20]
   66c70:	cmp	r0, #0
   66c74:	beq	66c88 <Mat_VarFree+0xf4>
   66c78:	ldr	r0, [r5]
   66c7c:	bl	1804 <free@plt>
   66c80:	ldr	r0, [r5, #4]
   66c84:	bl	1804 <free@plt>
   66c88:	mov	r0, r5
   66c8c:	bl	1804 <free@plt>
   66c90:	ldr	r0, [r4, #52]	; 0x34
   66c94:	cmp	r0, #0
   66c98:	beq	66e94 <Mat_VarFree+0x300>
   66c9c:	ldr	r1, [r4, #48]	; 0x30
   66ca0:	cmp	r1, #1
   66ca4:	bne	66e28 <Mat_VarFree+0x294>
   66ca8:	ldr	r0, [r0, #12]
   66cac:	bl	193c <inflateEnd@plt>
   66cb0:	ldr	r0, [r4, #52]	; 0x34
   66cb4:	ldr	r0, [r0, #12]
   66cb8:	bl	1804 <free@plt>
   66cbc:	ldr	r0, [r4, #52]	; 0x34
   66cc0:	ldr	r5, [r0, #16]
   66cc4:	cmp	r5, #0
   66cc8:	beq	66e28 <Mat_VarFree+0x294>
   66ccc:	ldr	r0, [r4, #16]
   66cd0:	cmp	r0, #5
   66cd4:	bne	66d24 <Mat_VarFree+0x190>
   66cd8:	ldr	r0, [r5, #4]
   66cdc:	cmp	r0, #0
   66ce0:	beq	66ce8 <Mat_VarFree+0x154>
   66ce4:	bl	1804 <free@plt>
   66ce8:	ldr	r0, [r5, #12]
   66cec:	cmp	r0, #0
   66cf0:	beq	66cf8 <Mat_VarFree+0x164>
   66cf4:	bl	1804 <free@plt>
   66cf8:	ldr	r0, [r4, #20]
   66cfc:	ldr	r6, [r5, #24]
   66d00:	cmp	r0, #0
   66d04:	beq	66e10 <Mat_VarFree+0x27c>
   66d08:	cmp	r6, #0
   66d0c:	beq	66e20 <Mat_VarFree+0x28c>
   66d10:	ldr	r0, [r6]
   66d14:	bl	1804 <free@plt>
   66d18:	ldr	r0, [r6, #4]
   66d1c:	bl	1804 <free@plt>
   66d20:	b	66e18 <Mat_VarFree+0x284>
   66d24:	ldr	r0, [r4, #20]
   66d28:	cmp	r0, #0
   66d2c:	beq	66e20 <Mat_VarFree+0x28c>
   66d30:	ldr	r0, [r5]
   66d34:	bl	1804 <free@plt>
   66d38:	ldr	r0, [r5, #4]
   66d3c:	b	66e1c <Mat_VarFree+0x288>
   66d40:	ldr	r0, [r4, #44]	; 0x2c
   66d44:	cmp	r0, #0
   66d48:	bne	66c90 <Mat_VarFree+0xfc>
   66d4c:	cmp	r6, #0
   66d50:	beq	66c88 <Mat_VarFree+0xf4>
   66d54:	ldr	r0, [r5], #4
   66d58:	bl	1918 <Mat_VarFree@plt>
   66d5c:	subs	r6, r6, #1
   66d60:	bne	66d54 <Mat_VarFree+0x1c0>
   66d64:	b	66da0 <Mat_VarFree+0x20c>
   66d68:	ldr	r0, [r4, #44]	; 0x2c
   66d6c:	cmp	r0, #0
   66d70:	bne	66c90 <Mat_VarFree+0xfc>
   66d74:	ldr	r0, [r4, #52]	; 0x34
   66d78:	ldr	r0, [r0, #4]
   66d7c:	umull	r6, r0, r6, r0
   66d80:	cmp	r0, #0
   66d84:	bne	66c88 <Mat_VarFree+0xf4>
   66d88:	cmp	r6, #0
   66d8c:	beq	66c88 <Mat_VarFree+0xf4>
   66d90:	ldr	r0, [r5], #4
   66d94:	bl	1918 <Mat_VarFree@plt>
   66d98:	subs	r6, r6, #1
   66d9c:	bne	66d90 <Mat_VarFree+0x1fc>
   66da0:	ldr	r5, [r4, #40]	; 0x28
   66da4:	b	66c88 <Mat_VarFree+0xf4>
   66da8:	ldr	r0, [r4, #44]	; 0x2c
   66dac:	cmp	r0, #0
   66db0:	bne	66c90 <Mat_VarFree+0xfc>
   66db4:	ldr	r0, [r5, #4]
   66db8:	cmp	r0, #0
   66dbc:	beq	66dc4 <Mat_VarFree+0x230>
   66dc0:	bl	1804 <free@plt>
   66dc4:	ldr	r0, [r5, #12]
   66dc8:	cmp	r0, #0
   66dcc:	beq	66dd4 <Mat_VarFree+0x240>
   66dd0:	bl	1804 <free@plt>
   66dd4:	ldr	r0, [r4, #20]
   66dd8:	ldr	r6, [r5, #24]
   66ddc:	cmp	r0, #0
   66de0:	beq	66eb0 <Mat_VarFree+0x31c>
   66de4:	cmp	r6, #0
   66de8:	beq	66c88 <Mat_VarFree+0xf4>
   66dec:	ldr	r0, [r6]
   66df0:	bl	1804 <free@plt>
   66df4:	ldr	r0, [r6, #4]
   66df8:	bl	1804 <free@plt>
   66dfc:	b	66eb8 <Mat_VarFree+0x324>
   66e00:	ldr	r0, [r4, #44]	; 0x2c
   66e04:	cmp	r0, #0
   66e08:	bne	66c90 <Mat_VarFree+0xfc>
   66e0c:	b	66c88 <Mat_VarFree+0xf4>
   66e10:	cmp	r6, #0
   66e14:	beq	66e20 <Mat_VarFree+0x28c>
   66e18:	mov	r0, r6
   66e1c:	bl	1804 <free@plt>
   66e20:	mov	r0, r5
   66e24:	bl	1804 <free@plt>
   66e28:	ldr	r0, [r4, #52]	; 0x34
   66e2c:	ldr	r1, [r0, #8]
   66e30:	cmp	r1, #0
   66e34:	beq	66e88 <Mat_VarFree+0x2f4>
   66e38:	ldr	r2, [r0, #4]
   66e3c:	cmp	r2, #0
   66e40:	beq	66e88 <Mat_VarFree+0x2f4>
   66e44:	mov	r5, #0
   66e48:	b	66e60 <Mat_VarFree+0x2cc>
   66e4c:	ldr	r2, [r0, #4]
   66e50:	ldr	r1, [r0, #8]
   66e54:	add	r5, r5, #1
   66e58:	cmp	r5, r2
   66e5c:	bcs	66e7c <Mat_VarFree+0x2e8>
   66e60:	ldr	r1, [r1, r5, lsl #2]
   66e64:	cmp	r1, #0
   66e68:	beq	66e4c <Mat_VarFree+0x2b8>
   66e6c:	mov	r0, r1
   66e70:	bl	1804 <free@plt>
   66e74:	ldr	r0, [r4, #52]	; 0x34
   66e78:	b	66e4c <Mat_VarFree+0x2b8>
   66e7c:	mov	r0, r1
   66e80:	bl	1804 <free@plt>
   66e84:	ldr	r0, [r4, #52]	; 0x34
   66e88:	bl	1804 <free@plt>
   66e8c:	mov	r0, #0
   66e90:	str	r0, [r4, #52]	; 0x34
   66e94:	ldr	r0, [r4, #36]	; 0x24
   66e98:	cmp	r0, #0
   66e9c:	beq	66ea4 <Mat_VarFree+0x310>
   66ea0:	bl	1804 <free@plt>
   66ea4:	mov	r0, r4
   66ea8:	pop	{r4, r5, r6, sl, fp, lr}
   66eac:	b	1804 <free@plt>
   66eb0:	cmp	r6, #0
   66eb4:	beq	66c88 <Mat_VarFree+0xf4>
   66eb8:	mov	r0, r6
   66ebc:	b	66c84 <Mat_VarFree+0xf0>

00066ec0 <Mat_GetFilename>:
   66ec0:	cmp	r0, #0
   66ec4:	ldrne	r0, [r0, #12]
   66ec8:	moveq	r0, #0
   66ecc:	bx	lr

00066ed0 <Mat_GetHeader>:
   66ed0:	cmp	r0, #0
   66ed4:	ldrne	r0, [r0, #4]
   66ed8:	moveq	r0, #0
   66edc:	bx	lr

00066ee0 <Mat_GetVersion>:
   66ee0:	cmp	r0, #0
   66ee4:	ldrne	r0, [r0, #16]
   66ee8:	moveq	r0, #0
   66eec:	bx	lr

00066ef0 <Mat_GetDir>:
   66ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   66ef4:	add	fp, sp, #28
   66ef8:	sub	sp, sp, #4
   66efc:	cmp	r1, #0
   66f00:	beq	66f64 <Mat_GetDir+0x74>
   66f04:	mov	r4, r1
   66f08:	mov	r5, r0
   66f0c:	cmp	r0, #0
   66f10:	beq	66fb8 <Mat_GetDir+0xc8>
   66f14:	ldr	r0, [r5, #40]	; 0x28
   66f18:	ldr	r1, [r5, #16]
   66f1c:	cmp	r0, #0
   66f20:	beq	66f6c <Mat_GetDir+0x7c>
   66f24:	cmp	r1, #512	; 0x200
   66f28:	bne	6711c <Mat_GetDir+0x22c>
   66f2c:	mov	r1, #0
   66f30:	str	r1, [r4]
   66f34:	ldr	r2, [r5, #36]	; 0x24
   66f38:	cmp	r2, #0
   66f3c:	beq	67124 <Mat_GetDir+0x234>
   66f40:	ldr	r2, [r0, r1, lsl #2]
   66f44:	cmp	r2, #0
   66f48:	beq	67124 <Mat_GetDir+0x234>
   66f4c:	add	r1, r1, #1
   66f50:	str	r1, [r4]
   66f54:	ldr	r2, [r5, #36]	; 0x24
   66f58:	cmp	r1, r2
   66f5c:	bcc	66f40 <Mat_GetDir+0x50>
   66f60:	b	67124 <Mat_GetDir+0x234>
   66f64:	mov	r5, #0
   66f68:	b	67128 <Mat_GetDir+0x238>
   66f6c:	cmp	r1, #512	; 0x200
   66f70:	bne	66fc4 <Mat_GetDir+0xd4>
   66f74:	ldr	r0, [r5, #36]	; 0x24
   66f78:	cmp	r0, #0
   66f7c:	beq	66fb8 <Mat_GetDir+0xc8>
   66f80:	ldr	r6, [r5, #32]
   66f84:	mov	r1, #4
   66f88:	bl	1798 <calloc@plt>
   66f8c:	cmp	r0, #0
   66f90:	str	r0, [r5, #40]	; 0x28
   66f94:	beq	670e4 <Mat_GetDir+0x1f4>
   66f98:	mov	r7, #0
   66f9c:	str	r7, [r5, #32]
   66fa0:	ldr	r0, [pc, #400]	; 67138 <Mat_GetDir+0x248>
   66fa4:	add	r0, pc, r0
   66fa8:	bl	19b4 <Mat_Critical@plt>
   66fac:	str	r6, [r5, #32]
   66fb0:	str	r7, [r4]
   66fb4:	b	67124 <Mat_GetDir+0x234>
   66fb8:	mov	r5, #0
   66fbc:	str	r5, [r4]
   66fc0:	b	67128 <Mat_GetDir+0x238>
   66fc4:	ldr	r0, [r5]
   66fc8:	bl	1840 <ftell@plt>
   66fcc:	cmn	r0, #1
   66fd0:	beq	670cc <Mat_GetDir+0x1dc>
   66fd4:	mov	r6, r0
   66fd8:	ldr	r0, [r5]
   66fdc:	ldr	r1, [r5, #28]
   66fe0:	mov	r2, #0
   66fe4:	mov	r7, #0
   66fe8:	bl	1a2c <fseek@plt>
   66fec:	str	r7, [r5, #36]	; 0x24
   66ff0:	mov	sl, #4
   66ff4:	ldr	r8, [pc, #320]	; 6713c <Mat_GetDir+0x24c>
   66ff8:	ldr	r9, [pc, #320]	; 67140 <Mat_GetDir+0x250>
   66ffc:	add	r8, pc, r8
   67000:	add	r9, pc, r9
   67004:	b	67028 <Mat_GetDir+0x138>
   67008:	ldr	r0, [r5]
   6700c:	bl	190c <feof@plt>
   67010:	cmp	r0, #0
   67014:	beq	670fc <Mat_GetDir+0x20c>
   67018:	ldr	r0, [r5]
   6701c:	bl	190c <feof@plt>
   67020:	cmp	r0, #0
   67024:	bne	6710c <Mat_GetDir+0x21c>
   67028:	ldr	r0, [r5, #16]
   6702c:	cmp	r0, #16
   67030:	beq	67048 <Mat_GetDir+0x158>
   67034:	cmp	r0, #256	; 0x100
   67038:	bne	67008 <Mat_GetDir+0x118>
   6703c:	mov	r0, r5
   67040:	bl	626b4 <Mat_VarReadNextInfo5>
   67044:	b	67050 <Mat_GetDir+0x160>
   67048:	mov	r0, r5
   6704c:	bl	66258 <Mat_VarReadNextInfo4>
   67050:	mov	r7, r0
   67054:	cmp	r0, #0
   67058:	beq	67008 <Mat_GetDir+0x118>
   6705c:	ldr	r0, [r7, #36]	; 0x24
   67060:	cmp	r0, #0
   67064:	beq	670c0 <Mat_GetDir+0x1d0>
   67068:	ldr	r0, [r5, #40]	; 0x28
   6706c:	cmp	r0, #0
   67070:	beq	6708c <Mat_GetDir+0x19c>
   67074:	ldr	r1, [r5, #36]	; 0x24
   67078:	add	r1, sl, r1, lsl #2
   6707c:	bl	1870 <realloc@plt>
   67080:	cmp	r0, #0
   67084:	bne	6709c <Mat_GetDir+0x1ac>
   67088:	b	67104 <Mat_GetDir+0x214>
   6708c:	mov	r0, #4
   67090:	bl	18d0 <malloc@plt>
   67094:	cmp	r0, #0
   67098:	beq	67104 <Mat_GetDir+0x214>
   6709c:	str	r0, [r5, #40]	; 0x28
   670a0:	mov	r0, r9
   670a4:	ldr	r1, [r7, #36]	; 0x24
   670a8:	bl	1da4 <strdup_printf>
   670ac:	ldr	r1, [r5, #36]	; 0x24
   670b0:	ldr	r2, [r5, #40]	; 0x28
   670b4:	add	r3, r1, #1
   670b8:	str	r3, [r5, #36]	; 0x24
   670bc:	str	r0, [r2, r1, lsl #2]
   670c0:	mov	r0, r7
   670c4:	bl	1918 <Mat_VarFree@plt>
   670c8:	b	67018 <Mat_GetDir+0x128>
   670cc:	mov	r5, #0
   670d0:	str	r5, [r4]
   670d4:	ldr	r0, [pc, #108]	; 67148 <Mat_GetDir+0x258>
   670d8:	add	r0, pc, r0
   670dc:	bl	19b4 <Mat_Critical@plt>
   670e0:	b	67128 <Mat_GetDir+0x238>
   670e4:	mov	r5, #0
   670e8:	str	r5, [r4]
   670ec:	ldr	r0, [pc, #64]	; 67134 <Mat_GetDir+0x244>
   670f0:	add	r0, pc, r0
   670f4:	bl	19b4 <Mat_Critical@plt>
   670f8:	b	67128 <Mat_GetDir+0x238>
   670fc:	ldr	r8, [pc, #64]	; 67144 <Mat_GetDir+0x254>
   67100:	add	r8, pc, r8
   67104:	mov	r0, r8
   67108:	bl	19b4 <Mat_Critical@plt>
   6710c:	ldr	r0, [r5]
   67110:	mov	r1, r6
   67114:	mov	r2, #0
   67118:	bl	1a2c <fseek@plt>
   6711c:	ldr	r0, [r5, #36]	; 0x24
   67120:	str	r0, [r4]
   67124:	ldr	r5, [r5, #40]	; 0x28
   67128:	mov	r0, r5
   6712c:	sub	sp, fp, #28
   67130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67134:	.word	0x0000531f
   67138:	.word	0x00005074
   6713c:	.word	0x00005413
   67140:	.word	0x000056cb
   67144:	.word	0x00004f18
   67148:	.word	0x00004cb4

0006714c <Mat_VarReadNextInfo>:
   6714c:	cmp	r0, #0
   67150:	beq	6716c <Mat_VarReadNextInfo+0x20>
   67154:	ldr	r1, [r0, #16]
   67158:	cmp	r1, #16
   6715c:	beq	67174 <Mat_VarReadNextInfo+0x28>
   67160:	cmp	r1, #256	; 0x100
   67164:	bne	6716c <Mat_VarReadNextInfo+0x20>
   67168:	b	626b4 <Mat_VarReadNextInfo5>
   6716c:	mov	r0, #0
   67170:	bx	lr
   67174:	b	66258 <Mat_VarReadNextInfo4>

00067178 <Mat_SizeOfClass>:
   67178:	sub	r0, r0, #4
   6717c:	cmp	r0, #11
   67180:	movhi	r0, #0
   67184:	bxhi	lr
   67188:	ldr	r1, [pc, #8]	; 67198 <Mat_SizeOfClass+0x20>
   6718c:	add	r1, pc, r1
   67190:	ldr	r0, [r1, r0, lsl #2]
   67194:	bx	lr
   67198:	.word	0x00005900

0006719c <Mat_VarCalloc>:
   6719c:	push	{r4, r5, r6, sl, fp, lr}
   671a0:	add	fp, sp, #16
   671a4:	vpush	{d8-d9}
   671a8:	mov	r0, #56	; 0x38
   671ac:	bl	18d0 <malloc@plt>
   671b0:	cmp	r0, #0
   671b4:	beq	67208 <Mat_VarCalloc+0x6c>
   671b8:	vmov.i32	q4, #0	; 0x00000000
   671bc:	mov	r4, #0
   671c0:	mov	r5, r0
   671c4:	str	r4, [r0, #48]	; 0x30
   671c8:	add	r0, r0, #32
   671cc:	mov	r6, r5
   671d0:	vst1.32	{d8-d9}, [r0]
   671d4:	add	r0, r5, #16
   671d8:	vst1.32	{d8-d9}, [r0]
   671dc:	mov	r0, #52	; 0x34
   671e0:	vst1.32	{d8-d9}, [r6], r0
   671e4:	mov	r0, #20
   671e8:	bl	18d0 <malloc@plt>
   671ec:	cmp	r0, #0
   671f0:	str	r0, [r6]
   671f4:	beq	67210 <Mat_VarCalloc+0x74>
   671f8:	vst1.32	{d8-d9}, [r0]!
   671fc:	str	r4, [r0]
   67200:	mov	r4, r5
   67204:	b	67218 <Mat_VarCalloc+0x7c>
   67208:	mov	r4, #0
   6720c:	b	67218 <Mat_VarCalloc+0x7c>
   67210:	mov	r0, r5
   67214:	bl	1804 <free@plt>
   67218:	mov	r0, r4
   6721c:	vpop	{d8-d9}
   67220:	pop	{r4, r5, r6, sl, fp, pc}

00067224 <Mat_VarCreate>:
   67224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   67228:	add	fp, sp, #28
   6722c:	sub	sp, sp, #4
   67230:	vpush	{d8-d9}
   67234:	sub	sp, sp, #8
   67238:	ldr	sl, [fp, #8]
   6723c:	mov	r8, #0
   67240:	cmp	sl, #0
   67244:	beq	677bc <Mat_VarCreate+0x598>
   67248:	mov	r7, r0
   6724c:	mov	r0, #56	; 0x38
   67250:	mov	r6, r3
   67254:	mov	r9, r2
   67258:	mov	r4, r1
   6725c:	bl	18d0 <malloc@plt>
   67260:	cmp	r0, #0
   67264:	beq	677bc <Mat_VarCreate+0x598>
   67268:	vmov.i32	q4, #0	; 0x00000000
   6726c:	str	r4, [sp, #4]
   67270:	mov	r4, #0
   67274:	mov	r8, r0
   67278:	add	r1, r0, #32
   6727c:	str	r4, [r0, #48]	; 0x30
   67280:	add	r0, r0, #16
   67284:	mov	r5, r8
   67288:	vst1.32	{d8-d9}, [r0]
   6728c:	mov	r0, #52	; 0x34
   67290:	vst1.32	{d8-d9}, [r1]
   67294:	vst1.32	{d8-d9}, [r5], r0
   67298:	mov	r0, #20
   6729c:	bl	18d0 <malloc@plt>
   672a0:	cmp	r0, #0
   672a4:	str	r0, [r5]
   672a8:	beq	67328 <Mat_VarCreate+0x104>
   672ac:	ldr	r2, [fp, #16]
   672b0:	vst1.32	{d8-d9}, [r0]!
   672b4:	cmp	r7, #0
   672b8:	str	r4, [r0]
   672bc:	and	r0, r2, #512	; 0x200
   672c0:	and	r1, r2, #1024	; 0x400
   672c4:	and	r2, r2, #2048	; 0x800
   672c8:	str	r2, [r8, #20]
   672cc:	str	r1, [r8, #24]
   672d0:	str	r0, [r8, #28]
   672d4:	str	r4, [r8, #48]	; 0x30
   672d8:	beq	672f0 <Mat_VarCreate+0xcc>
   672dc:	ldr	r0, [pc, #1260]	; 677d0 <Mat_VarCreate+0x5ac>
   672e0:	mov	r1, r7
   672e4:	add	r0, pc, r0
   672e8:	bl	1da4 <strdup_printf>
   672ec:	str	r0, [r8, #36]	; 0x24
   672f0:	lsl	r0, r6, #2
   672f4:	str	r6, [r8, #4]
   672f8:	bl	18d0 <malloc@plt>
   672fc:	ldr	r3, [sp, #4]
   67300:	mov	r4, #1
   67304:	cmp	r6, #1
   67308:	mov	r7, #1
   6730c:	str	r0, [r8, #32]
   67310:	blt	673f8 <Mat_VarCreate+0x1d4>
   67314:	cmp	r6, #4
   67318:	bcs	67338 <Mat_VarCreate+0x114>
   6731c:	mov	r7, #1
   67320:	mov	r1, #0
   67324:	b	673e0 <Mat_VarCreate+0x1bc>
   67328:	mov	r0, r8
   6732c:	bl	1804 <free@plt>
   67330:	mov	r8, #0
   67334:	b	677bc <Mat_VarCreate+0x598>
   67338:	bic	r1, r6, #3
   6733c:	mov	r3, #1
   67340:	vmov.i32	q8, #1	; 0x00000001
   67344:	subs	r2, r1, #4
   67348:	add	r2, r3, r2, lsr #2
   6734c:	and	r3, r2, #1
   67350:	str	r3, [sp]
   67354:	beq	6739c <Mat_VarCreate+0x178>
   67358:	sub	r7, r2, r3
   6735c:	mov	r3, #0
   67360:	mov	lr, #32
   67364:	mov	r5, r0
   67368:	mov	r4, sl
   6736c:	add	r2, r4, #16
   67370:	vld1.32	{d18-d19}, [r4], lr
   67374:	add	ip, r5, #16
   67378:	subs	r7, r7, #2
   6737c:	add	r3, r3, #8
   67380:	vst1.32	{d18-d19}, [r5], lr
   67384:	vmul.i32	q8, q9, q8
   67388:	vld1.32	{d20-d21}, [r2]
   6738c:	vmul.i32	q8, q10, q8
   67390:	vst1.32	{d20-d21}, [ip]
   67394:	bne	6736c <Mat_VarCreate+0x148>
   67398:	b	673a0 <Mat_VarCreate+0x17c>
   6739c:	mov	r3, #0
   673a0:	ldr	r2, [sp]
   673a4:	cmp	r2, #0
   673a8:	beq	673c0 <Mat_VarCreate+0x19c>
   673ac:	add	r2, sl, r3, lsl #2
   673b0:	vld1.32	{d18-d19}, [r2]
   673b4:	add	r2, r0, r3, lsl #2
   673b8:	vmul.i32	q8, q9, q8
   673bc:	vst1.32	{d18-d19}, [r2]
   673c0:	vext.8	q9, q8, q8, #8
   673c4:	ldr	r3, [sp, #4]
   673c8:	cmp	r1, r6
   673cc:	mov	r4, #1
   673d0:	vmul.i32	q0, q8, q9
   673d4:	vmul.i32	q8, q0, d0[1]
   673d8:	vmov.32	r7, d16[0]
   673dc:	beq	673f8 <Mat_VarCreate+0x1d4>
   673e0:	ldr	r2, [sl, r1, lsl #2]
   673e4:	mul	r7, r2, r7
   673e8:	str	r2, [r0, r1, lsl #2]
   673ec:	add	r1, r1, #1
   673f0:	cmp	r1, r6
   673f4:	blt	673e0 <Mat_VarCreate+0x1bc>
   673f8:	sub	r0, r9, #1
   673fc:	str	r9, [r8, #8]
   67400:	str	r3, [r8, #16]
   67404:	cmp	r0, #21
   67408:	bhi	674f4 <Mat_VarCreate+0x2d0>
   6740c:	add	r1, pc, #8
   67410:	ldr	r5, [fp, #12]
   67414:	ldr	r0, [r1, r0, lsl #2]
   67418:	add	pc, r1, r0
   6741c:	.word	0x00000198
   67420:	.word	0x00000198
   67424:	.word	0x000000ac
   67428:	.word	0x000000ac
   6742c:	.word	0x00000058
   67430:	.word	0x00000058
   67434:	.word	0x00000058
   67438:	.word	0x000000d8
   6743c:	.word	0x000000bc
   67440:	.word	0x000000d8
   67444:	.word	0x000000d8
   67448:	.word	0x000000bc
   6744c:	.word	0x000000bc
   67450:	.word	0x000000d8
   67454:	.word	0x000000d8
   67458:	.word	0x00000198
   6745c:	.word	0x000000ac
   67460:	.word	0x00000058
   67464:	.word	0x000000d8
   67468:	.word	0x000000d8
   6746c:	.word	0x00000058
   67470:	.word	0x000000f4
   67474:	mov	r4, #4
   67478:	cmp	r3, #5
   6747c:	beq	675bc <Mat_VarCreate+0x398>
   67480:	umull	r6, r0, r7, r4
   67484:	str	r4, [r8, #12]
   67488:	cmp	r0, #0
   6748c:	movwne	r0, #1
   67490:	cmp	r0, #0
   67494:	movwne	r6, #0
   67498:	str	r6, [r8]
   6749c:	cmp	r5, #0
   674a0:	bne	675d0 <Mat_VarCreate+0x3ac>
   674a4:	cmp	r3, #1
   674a8:	bne	674e8 <Mat_VarCreate+0x2c4>
   674ac:	cmp	r7, #0
   674b0:	beq	674e8 <Mat_VarCreate+0x2c4>
   674b4:	mov	r0, r7
   674b8:	mov	r1, #4
   674bc:	bl	1798 <calloc@plt>
   674c0:	str	r0, [r8, #40]	; 0x28
   674c4:	b	677bc <Mat_VarCreate+0x598>
   674c8:	mov	r4, #2
   674cc:	cmp	r3, #5
   674d0:	beq	675bc <Mat_VarCreate+0x398>
   674d4:	b	67480 <Mat_VarCreate+0x25c>
   674d8:	mov	r4, #8
   674dc:	cmp	r3, #5
   674e0:	beq	675bc <Mat_VarCreate+0x398>
   674e4:	b	67480 <Mat_VarCreate+0x25c>
   674e8:	mov	r0, #0
   674ec:	str	r0, [r8, #40]	; 0x28
   674f0:	b	677bc <Mat_VarCreate+0x598>
   674f4:	mov	r0, r8
   674f8:	bl	1918 <Mat_VarFree@plt>
   674fc:	ldr	r0, [pc, #720]	; 677d4 <Mat_VarCreate+0x5b0>
   67500:	add	r0, pc, r0
   67504:	bl	19b4 <Mat_Critical@plt>
   67508:	mov	r8, #0
   6750c:	b	677bc <Mat_VarCreate+0x598>
   67510:	mov	r4, #4
   67514:	cmp	r5, #0
   67518:	beq	675b4 <Mat_VarCreate+0x390>
   6751c:	mov	r0, #0
   67520:	ldr	r1, [r5, r0, lsl #2]
   67524:	add	r0, r0, #1
   67528:	cmp	r1, #0
   6752c:	bne	67520 <Mat_VarCreate+0x2fc>
   67530:	sub	r6, r0, #1
   67534:	cmp	r7, #0
   67538:	beq	67540 <Mat_VarCreate+0x31c>
   6753c:	udiv	r6, r6, r7
   67540:	ldr	r9, [r8, #52]	; 0x34
   67544:	cmp	r6, #0
   67548:	str	r6, [r9, #4]
   6754c:	beq	675b0 <Mat_VarCreate+0x38c>
   67550:	mov	r0, r6
   67554:	mov	r1, #4
   67558:	bl	1798 <calloc@plt>
   6755c:	mov	r4, #0
   67560:	str	r0, [r9, #8]
   67564:	ldr	r0, [r5, r4, lsl #2]
   67568:	ldr	r0, [r0, #36]	; 0x24
   6756c:	bl	1864 <strdup@plt>
   67570:	ldr	r1, [r8, #52]	; 0x34
   67574:	ldr	r1, [r1, #8]
   67578:	str	r0, [r1, r4, lsl #2]
   6757c:	add	r4, r4, #1
   67580:	cmp	r6, r4
   67584:	bne	67564 <Mat_VarCreate+0x340>
   67588:	umull	r7, r0, r7, r6
   6758c:	ldr	r3, [r8, #16]
   67590:	mov	r4, #4
   67594:	cmp	r0, #0
   67598:	movwne	r0, #1
   6759c:	cmp	r0, #0
   675a0:	movwne	r7, #0
   675a4:	cmp	r3, #5
   675a8:	beq	675bc <Mat_VarCreate+0x398>
   675ac:	b	67480 <Mat_VarCreate+0x25c>
   675b0:	ldr	r3, [sp, #4]
   675b4:	cmp	r3, #5
   675b8:	bne	67480 <Mat_VarCreate+0x25c>
   675bc:	mov	r6, #28
   675c0:	str	r6, [r8]
   675c4:	str	r6, [r8, #12]
   675c8:	cmp	r5, #0
   675cc:	beq	674a4 <Mat_VarCreate+0x280>
   675d0:	ldr	r0, [fp, #16]
   675d4:	tst	r0, #1
   675d8:	bne	676e0 <Mat_VarCreate+0x4bc>
   675dc:	cmp	r3, #5
   675e0:	bne	676ec <Mat_VarCreate+0x4c8>
   675e4:	mov	r0, #28
   675e8:	mov	sl, r4
   675ec:	bl	18d0 <malloc@plt>
   675f0:	mov	r6, r0
   675f4:	cmp	r0, #0
   675f8:	beq	677b8 <Mat_VarCreate+0x594>
   675fc:	ldr	r0, [r5]
   67600:	str	r0, [r6]
   67604:	ldr	r0, [r5, #8]
   67608:	str	r0, [r6, #8]
   6760c:	lsl	r7, r0, #2
   67610:	ldr	r4, [r5, #16]
   67614:	ldr	r9, [r5, #20]
   67618:	mov	r0, r7
   6761c:	str	r4, [r6, #16]
   67620:	str	r9, [r6, #20]
   67624:	bl	18d0 <malloc@plt>
   67628:	cmp	r0, #0
   6762c:	str	r0, [r6, #4]
   67630:	beq	67640 <Mat_VarCreate+0x41c>
   67634:	ldr	r1, [r5, #4]
   67638:	mov	r2, r7
   6763c:	bl	181c <memcpy@plt>
   67640:	lsl	r7, r4, #2
   67644:	mov	r0, r7
   67648:	bl	18d0 <malloc@plt>
   6764c:	cmp	r0, #0
   67650:	str	r0, [r6, #12]
   67654:	beq	67664 <Mat_VarCreate+0x440>
   67658:	ldr	r1, [r5, #12]
   6765c:	mov	r2, r7
   67660:	bl	181c <memcpy@plt>
   67664:	ldr	r0, [r8, #20]
   67668:	cmp	r0, #0
   6766c:	beq	67794 <Mat_VarCreate+0x570>
   67670:	mov	r0, #8
   67674:	bl	18d0 <malloc@plt>
   67678:	cmp	r0, #0
   6767c:	str	r0, [r6, #24]
   67680:	beq	677b8 <Mat_VarCreate+0x594>
   67684:	mul	r4, r9, sl
   67688:	ldr	sl, [r5, #24]
   6768c:	mov	r7, r0
   67690:	mov	r0, r4
   67694:	bl	18d0 <malloc@plt>
   67698:	mov	r5, r0
   6769c:	str	r0, [r7]
   676a0:	mov	r0, r4
   676a4:	bl	18d0 <malloc@plt>
   676a8:	mov	r9, r0
   676ac:	cmp	r5, #0
   676b0:	str	r0, [r7, #4]
   676b4:	beq	676c8 <Mat_VarCreate+0x4a4>
   676b8:	ldr	r1, [sl]
   676bc:	mov	r0, r5
   676c0:	mov	r2, r4
   676c4:	bl	181c <memcpy@plt>
   676c8:	cmp	r9, #0
   676cc:	beq	677b8 <Mat_VarCreate+0x594>
   676d0:	ldr	r1, [sl, #4]
   676d4:	mov	r0, r9
   676d8:	mov	r2, r4
   676dc:	b	677b4 <Mat_VarCreate+0x590>
   676e0:	mov	r0, #1
   676e4:	str	r5, [r8, #40]	; 0x28
   676e8:	b	6778c <Mat_VarCreate+0x568>
   676ec:	ldr	r0, [r8, #20]
   676f0:	cmp	r0, #0
   676f4:	beq	67760 <Mat_VarCreate+0x53c>
   676f8:	mov	r0, #8
   676fc:	bl	18d0 <malloc@plt>
   67700:	cmp	r0, #0
   67704:	str	r0, [r8, #40]	; 0x28
   67708:	cmpne	r6, #0
   6770c:	beq	67788 <Mat_VarCreate+0x564>
   67710:	mov	r7, r0
   67714:	mov	r0, r6
   67718:	bl	18d0 <malloc@plt>
   6771c:	mov	r9, r0
   67720:	str	r0, [r7]
   67724:	mov	r0, r6
   67728:	bl	18d0 <malloc@plt>
   6772c:	mov	r4, r0
   67730:	cmp	r9, #0
   67734:	str	r0, [r7, #4]
   67738:	beq	6774c <Mat_VarCreate+0x528>
   6773c:	ldr	r1, [r5]
   67740:	mov	r0, r9
   67744:	mov	r2, r6
   67748:	bl	181c <memcpy@plt>
   6774c:	cmp	r4, #0
   67750:	beq	67788 <Mat_VarCreate+0x564>
   67754:	ldr	r1, [r5, #4]
   67758:	mov	r0, r4
   6775c:	b	67780 <Mat_VarCreate+0x55c>
   67760:	cmp	r6, #0
   67764:	beq	67788 <Mat_VarCreate+0x564>
   67768:	mov	r0, r6
   6776c:	bl	18d0 <malloc@plt>
   67770:	cmp	r0, #0
   67774:	str	r0, [r8, #40]	; 0x28
   67778:	beq	67788 <Mat_VarCreate+0x564>
   6777c:	mov	r1, r5
   67780:	mov	r2, r6
   67784:	bl	181c <memcpy@plt>
   67788:	mov	r0, #0
   6778c:	str	r0, [r8, #44]	; 0x2c
   67790:	b	677bc <Mat_VarCreate+0x598>
   67794:	mul	r7, r9, sl
   67798:	mov	r0, r7
   6779c:	bl	18d0 <malloc@plt>
   677a0:	cmp	r0, #0
   677a4:	str	r0, [r6, #24]
   677a8:	beq	677b8 <Mat_VarCreate+0x594>
   677ac:	ldr	r1, [r5, #24]
   677b0:	mov	r2, r7
   677b4:	bl	181c <memcpy@plt>
   677b8:	str	r6, [r8, #40]	; 0x28
   677bc:	mov	r0, r8
   677c0:	sub	sp, fp, #48	; 0x30
   677c4:	vpop	{d8-d9}
   677c8:	add	sp, sp, #4
   677cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   677d0:	.word	0x000053e7
   677d4:	.word	0x00004f3a

000677d8 <Mat_VarDelete>:
   677d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   677dc:	add	fp, sp, #28
   677e0:	sub	sp, sp, #20
   677e4:	sub	sp, sp, #8192	; 0x2000
   677e8:	mov	r9, r0
   677ec:	movw	r0, #22616	; 0x5858
   677f0:	mov	r6, #1
   677f4:	movt	r0, #88	; 0x58
   677f8:	cmp	r9, #0
   677fc:	movne	r7, r1
   67800:	cmpne	r1, #0
   67804:	str	r0, [sp, #11]
   67808:	movw	r0, #22616	; 0x5858
   6780c:	movt	r0, #22616	; 0x5858
   67810:	str	r0, [sp, #8]
   67814:	bne	67824 <Mat_VarDelete+0x4c>
   67818:	mov	r0, r6
   6781c:	sub	sp, fp, #28
   67820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67824:	add	r0, sp, #8
   67828:	bl	18e8 <mktemp@plt>
   6782c:	cmp	r0, #0
   67830:	beq	6786c <Mat_VarDelete+0x94>
   67834:	ldr	r1, [r9, #16]
   67838:	mov	r8, r0
   6783c:	cmp	r1, #512	; 0x200
   67840:	mov	r0, r1
   67844:	movwne	r0, #256	; 0x100
   67848:	cmp	r1, #16
   6784c:	moveq	r0, r1
   67850:	cmp	r0, #256	; 0x100
   67854:	beq	6787c <Mat_VarDelete+0xa4>
   67858:	cmp	r0, #16
   6785c:	bne	67818 <Mat_VarDelete+0x40>
   67860:	mov	r0, r8
   67864:	bl	64f68 <Mat_Create4>
   67868:	b	67888 <Mat_VarDelete+0xb0>
   6786c:	ldr	r0, [pc, #1092]	; 67cb8 <Mat_VarDelete+0x4e0>
   67870:	add	r0, pc, r0
   67874:	bl	19b4 <Mat_Critical@plt>
   67878:	b	67818 <Mat_VarDelete+0x40>
   6787c:	ldr	r1, [r9, #4]
   67880:	mov	r0, r8
   67884:	bl	2d850 <Mat_Create5>
   67888:	mov	r5, r0
   6788c:	cmp	r0, #0
   67890:	beq	67818 <Mat_VarDelete+0x40>
   67894:	ldr	r0, [r9, #16]
   67898:	cmp	r0, #16
   6789c:	beq	678bc <Mat_VarDelete+0xe4>
   678a0:	cmp	r0, #512	; 0x200
   678a4:	beq	678d0 <Mat_VarDelete+0xf8>
   678a8:	cmp	r0, #256	; 0x100
   678ac:	bne	678d8 <Mat_VarDelete+0x100>
   678b0:	ldr	r0, [r9]
   678b4:	mov	r1, #128	; 0x80
   678b8:	b	678c4 <Mat_VarDelete+0xec>
   678bc:	ldr	r0, [r9]
   678c0:	mov	r1, #0
   678c4:	mov	r2, #0
   678c8:	bl	1a2c <fseek@plt>
   678cc:	b	678d8 <Mat_VarDelete+0x100>
   678d0:	mov	r0, #0
   678d4:	str	r0, [r9, #32]
   678d8:	mov	r0, r9
   678dc:	bl	17a4 <Mat_VarReadNext@plt>
   678e0:	cmp	r0, #0
   678e4:	beq	6793c <Mat_VarDelete+0x164>
   678e8:	mov	r6, r0
   678ec:	mov	r4, #1
   678f0:	b	67920 <Mat_VarDelete+0x148>
   678f4:	ldr	r2, [r6, #48]	; 0x30
   678f8:	mov	r0, r5
   678fc:	mov	r1, r6
   67900:	bl	1828 <Mat_VarWrite@plt>
   67904:	mov	r0, r6
   67908:	bl	1918 <Mat_VarFree@plt>
   6790c:	mov	r0, r9
   67910:	bl	17a4 <Mat_VarReadNext@plt>
   67914:	mov	r6, r0
   67918:	cmp	r0, #0
   6791c:	beq	67940 <Mat_VarDelete+0x168>
   67920:	ldr	r0, [r6, #36]	; 0x24
   67924:	mov	r1, r7
   67928:	bl	17b0 <strcmp@plt>
   6792c:	cmp	r0, #0
   67930:	bne	678f4 <Mat_VarDelete+0x11c>
   67934:	mov	r4, #0
   67938:	b	67904 <Mat_VarDelete+0x12c>
   6793c:	mov	r4, #1
   67940:	ldr	sl, [r5, #36]	; 0x24
   67944:	ldr	r6, [r5, #40]	; 0x28
   67948:	mov	r0, #0
   6794c:	str	r0, [r5, #40]	; 0x28
   67950:	mov	r0, r5
   67954:	bl	19a8 <Mat_Close@plt>
   67958:	cmp	r4, #0
   6795c:	beq	6798c <Mat_VarDelete+0x1b4>
   67960:	mov	r0, r8
   67964:	bl	19f0 <remove@plt>
   67968:	mov	r6, r0
   6796c:	cmn	r0, #1
   67970:	bne	67818 <Mat_VarDelete+0x40>
   67974:	ldr	r0, [pc, #824]	; 67cb4 <Mat_VarDelete+0x4dc>
   67978:	mov	r1, r8
   6797c:	add	r0, pc, r0
   67980:	bl	19b4 <Mat_Critical@plt>
   67984:	mvn	r6, #0
   67988:	b	67818 <Mat_VarDelete+0x40>
   6798c:	ldr	r1, [r9, #12]
   67990:	ldr	r0, [pc, #764]	; 67c94 <Mat_VarDelete+0x4bc>
   67994:	add	r0, pc, r0
   67998:	bl	1da4 <strdup_printf>
   6799c:	mov	r7, r0
   679a0:	ldr	r0, [r9]
   679a4:	cmp	r0, #0
   679a8:	beq	679b8 <Mat_VarDelete+0x1e0>
   679ac:	bl	19cc <fclose@plt>
   679b0:	mov	r0, #0
   679b4:	str	r0, [r9]
   679b8:	add	r0, sp, #16
   679bc:	mov	r1, #0
   679c0:	mov	r2, #8192	; 0x2000
   679c4:	bl	1990 <memset@plt>
   679c8:	ldr	r1, [pc, #712]	; 67c98 <Mat_VarDelete+0x4c0>
   679cc:	mov	r0, r8
   679d0:	add	r1, pc, r1
   679d4:	bl	17e0 <fopen@plt>
   679d8:	cmp	r0, #0
   679dc:	beq	67a78 <Mat_VarDelete+0x2a0>
   679e0:	str	r6, [sp, #4]
   679e4:	mov	r5, r0
   679e8:	mov	r0, r7
   679ec:	ldr	r1, [pc, #684]	; 67ca0 <Mat_VarDelete+0x4c8>
   679f0:	add	r1, pc, r1
   679f4:	bl	17e0 <fopen@plt>
   679f8:	cmp	r0, #0
   679fc:	beq	67a94 <Mat_VarDelete+0x2bc>
   67a00:	str	r7, [sp]
   67a04:	mov	r6, r0
   67a08:	mov	r4, r8
   67a0c:	add	r7, sp, #16
   67a10:	mov	r0, r7
   67a14:	mov	r1, #1
   67a18:	mov	r2, #8192	; 0x2000
   67a1c:	mov	r3, r5
   67a20:	bl	1a14 <fread_unlocked@plt>
   67a24:	cmp	r0, #0
   67a28:	beq	67b14 <Mat_VarDelete+0x33c>
   67a2c:	mov	r8, r0
   67a30:	mov	r0, r7
   67a34:	mov	r1, #1
   67a38:	mov	r3, r6
   67a3c:	mov	r2, r8
   67a40:	bl	184c <fwrite_unlocked@plt>
   67a44:	cmp	r8, r0
   67a48:	beq	67a10 <Mat_VarDelete+0x238>
   67a4c:	mov	r0, r5
   67a50:	bl	19cc <fclose@plt>
   67a54:	mov	r0, r6
   67a58:	bl	19cc <fclose@plt>
   67a5c:	ldr	r0, [pc, #576]	; 67ca4 <Mat_VarDelete+0x4cc>
   67a60:	ldr	r7, [sp]
   67a64:	add	r0, pc, r0
   67a68:	mov	r1, r7
   67a6c:	bl	19b4 <Mat_Critical@plt>
   67a70:	mov	r8, r4
   67a74:	b	67aac <Mat_VarDelete+0x2d4>
   67a78:	ldr	r0, [pc, #540]	; 67c9c <Mat_VarDelete+0x4c4>
   67a7c:	mov	r1, r8
   67a80:	add	r0, pc, r0
   67a84:	bl	19b4 <Mat_Critical@plt>
   67a88:	cmp	r6, #0
   67a8c:	bne	67ab8 <Mat_VarDelete+0x2e0>
   67a90:	b	67af0 <Mat_VarDelete+0x318>
   67a94:	mov	r0, r5
   67a98:	bl	19cc <fclose@plt>
   67a9c:	ldr	r0, [pc, #536]	; 67cbc <Mat_VarDelete+0x4e4>
   67aa0:	mov	r1, r7
   67aa4:	add	r0, pc, r0
   67aa8:	bl	19b4 <Mat_Critical@plt>
   67aac:	ldr	r6, [sp, #4]
   67ab0:	cmp	r6, #0
   67ab4:	beq	67af0 <Mat_VarDelete+0x318>
   67ab8:	cmp	sl, #0
   67abc:	beq	67ae8 <Mat_VarDelete+0x310>
   67ac0:	mov	r4, r6
   67ac4:	b	67ad4 <Mat_VarDelete+0x2fc>
   67ac8:	add	r4, r4, #4
   67acc:	subs	sl, sl, #1
   67ad0:	beq	67ae8 <Mat_VarDelete+0x310>
   67ad4:	ldr	r0, [r4]
   67ad8:	cmp	r0, #0
   67adc:	beq	67ac8 <Mat_VarDelete+0x2f0>
   67ae0:	bl	1804 <free@plt>
   67ae4:	b	67ac8 <Mat_VarDelete+0x2f0>
   67ae8:	mov	r0, r6
   67aec:	bl	1804 <free@plt>
   67af0:	ldr	r0, [pc, #432]	; 67ca8 <Mat_VarDelete+0x4d0>
   67af4:	mov	r1, r8
   67af8:	mov	r2, r7
   67afc:	add	r0, pc, r0
   67b00:	bl	19b4 <Mat_Critical@plt>
   67b04:	mvn	r6, #0
   67b08:	mov	r0, r7
   67b0c:	bl	1804 <free@plt>
   67b10:	b	67818 <Mat_VarDelete+0x40>
   67b14:	mov	r0, r5
   67b18:	bl	19cc <fclose@plt>
   67b1c:	mov	r0, r6
   67b20:	bl	19cc <fclose@plt>
   67b24:	mov	r0, r4
   67b28:	mov	r5, r4
   67b2c:	bl	19f0 <remove@plt>
   67b30:	cmn	r0, #1
   67b34:	beq	67bd4 <Mat_VarDelete+0x3fc>
   67b38:	ldr	r7, [sp]
   67b3c:	ldr	r1, [r9, #24]
   67b40:	mov	r6, r0
   67b44:	mov	r0, r7
   67b48:	bl	17c8 <Mat_Open@plt>
   67b4c:	cmp	r0, #0
   67b50:	beq	67c60 <Mat_VarDelete+0x488>
   67b54:	mov	r5, r0
   67b58:	ldr	r0, [r9, #4]
   67b5c:	cmp	r0, #0
   67b60:	beq	67b68 <Mat_VarDelete+0x390>
   67b64:	bl	1804 <free@plt>
   67b68:	ldr	r0, [r9, #8]
   67b6c:	cmp	r0, #0
   67b70:	beq	67b78 <Mat_VarDelete+0x3a0>
   67b74:	bl	1804 <free@plt>
   67b78:	ldr	r0, [r9, #12]
   67b7c:	cmp	r0, #0
   67b80:	beq	67b88 <Mat_VarDelete+0x3b0>
   67b84:	bl	1804 <free@plt>
   67b88:	ldr	r0, [r9, #40]	; 0x28
   67b8c:	cmp	r0, #0
   67b90:	beq	67c14 <Mat_VarDelete+0x43c>
   67b94:	ldr	r2, [r9, #36]	; 0x24
   67b98:	cmp	r2, #0
   67b9c:	beq	67c10 <Mat_VarDelete+0x438>
   67ba0:	mov	r4, #0
   67ba4:	b	67bb4 <Mat_VarDelete+0x3dc>
   67ba8:	add	r4, r4, #1
   67bac:	cmp	r4, r2
   67bb0:	bcs	67c10 <Mat_VarDelete+0x438>
   67bb4:	ldr	r1, [r0, r4, lsl #2]
   67bb8:	cmp	r1, #0
   67bbc:	beq	67ba8 <Mat_VarDelete+0x3d0>
   67bc0:	mov	r0, r1
   67bc4:	bl	1804 <free@plt>
   67bc8:	ldr	r2, [r9, #36]	; 0x24
   67bcc:	ldr	r0, [r9, #40]	; 0x28
   67bd0:	b	67ba8 <Mat_VarDelete+0x3d0>
   67bd4:	ldr	r6, [sp, #4]
   67bd8:	cmp	r6, #0
   67bdc:	beq	67c7c <Mat_VarDelete+0x4a4>
   67be0:	cmp	sl, #0
   67be4:	beq	67c74 <Mat_VarDelete+0x49c>
   67be8:	mov	r4, r6
   67bec:	b	67bfc <Mat_VarDelete+0x424>
   67bf0:	add	r4, r4, #4
   67bf4:	subs	sl, sl, #1
   67bf8:	beq	67c74 <Mat_VarDelete+0x49c>
   67bfc:	ldr	r0, [r4]
   67c00:	cmp	r0, #0
   67c04:	beq	67bf0 <Mat_VarDelete+0x418>
   67c08:	bl	1804 <free@plt>
   67c0c:	b	67bf0 <Mat_VarDelete+0x418>
   67c10:	bl	1804 <free@plt>
   67c14:	mov	r0, #28
   67c18:	mov	r1, r5
   67c1c:	mov	r4, r9
   67c20:	vld1.32	{d16-d17}, [r1], r0
   67c24:	add	r0, r5, #16
   67c28:	vld1.32	{d18-d19}, [r0]
   67c2c:	vld1.32	{d20-d21}, [r1]
   67c30:	add	r0, r9, #16
   67c34:	vst1.32	{d18-d19}, [r0]
   67c38:	add	r0, r9, #28
   67c3c:	vst1.32	{d20-d21}, [r0]
   67c40:	mov	r0, #40	; 0x28
   67c44:	vst1.32	{d16-d17}, [r4], r0
   67c48:	mov	r0, r5
   67c4c:	bl	1804 <free@plt>
   67c50:	ldr	r0, [sp, #4]
   67c54:	str	r0, [r4]
   67c58:	str	sl, [r9, #36]	; 0x24
   67c5c:	b	67b08 <Mat_VarDelete+0x330>
   67c60:	ldr	r0, [pc, #72]	; 67cb0 <Mat_VarDelete+0x4d8>
   67c64:	mov	r1, r7
   67c68:	add	r0, pc, r0
   67c6c:	bl	19b4 <Mat_Critical@plt>
   67c70:	b	67b08 <Mat_VarDelete+0x330>
   67c74:	mov	r0, r6
   67c78:	bl	1804 <free@plt>
   67c7c:	ldr	r0, [pc, #40]	; 67cac <Mat_VarDelete+0x4d4>
   67c80:	mov	r1, r5
   67c84:	add	r0, pc, r0
   67c88:	bl	19b4 <Mat_Critical@plt>
   67c8c:	ldr	r7, [sp]
   67c90:	b	67b04 <Mat_VarDelete+0x32c>
   67c94:	.word	0x00004d37
   67c98:	.word	0x00004964
   67c9c:	.word	0x00004ee8
   67ca0:	.word	0x00004f9b
   67ca4:	.word	0x00004f4d
   67ca8:	.word	0x0000495c
   67cac:	.word	0x000047f8
   67cb0:	.word	0x0000482d
   67cb4:	.word	0x00004b00
   67cb8:	.word	0x00004c3c
   67cbc:	.word	0x00004eea

00067cc0 <Mat_VarReadNext>:
   67cc0:	push	{r4, r5, r6, r7, fp, lr}
   67cc4:	add	fp, sp, #16
   67cc8:	mov	r5, r0
   67ccc:	ldr	r0, [r0, #16]
   67cd0:	mov	r4, #0
   67cd4:	cmp	r0, #512	; 0x200
   67cd8:	beq	67cec <Mat_VarReadNext+0x2c>
   67cdc:	ldr	r0, [r5]
   67ce0:	bl	190c <feof@plt>
   67ce4:	cmp	r0, #0
   67ce8:	beq	67cf4 <Mat_VarReadNext+0x34>
   67cec:	mov	r0, r4
   67cf0:	pop	{r4, r5, r6, r7, fp, pc}
   67cf4:	ldr	r0, [r5]
   67cf8:	bl	1840 <ftell@plt>
   67cfc:	cmn	r0, #1
   67d00:	beq	67d28 <Mat_VarReadNext+0x68>
   67d04:	mov	r6, r0
   67d08:	ldr	r0, [r5, #16]
   67d0c:	cmp	r0, #16
   67d10:	beq	67d3c <Mat_VarReadNext+0x7c>
   67d14:	cmp	r0, #256	; 0x100
   67d18:	bne	67d88 <Mat_VarReadNext+0xc8>
   67d1c:	mov	r0, r5
   67d20:	bl	626b4 <Mat_VarReadNextInfo5>
   67d24:	b	67d44 <Mat_VarReadNext+0x84>
   67d28:	ldr	r0, [pc, #152]	; 67dc8 <Mat_VarReadNext+0x108>
   67d2c:	add	r0, pc, r0
   67d30:	bl	19b4 <Mat_Critical@plt>
   67d34:	mov	r0, r4
   67d38:	pop	{r4, r5, r6, r7, fp, pc}
   67d3c:	mov	r0, r5
   67d40:	bl	66258 <Mat_VarReadNextInfo4>
   67d44:	mov	r7, r0
   67d48:	cmp	r0, #0
   67d4c:	beq	67d84 <Mat_VarReadNext+0xc4>
   67d50:	ldr	r0, [r5]
   67d54:	cmp	r0, #0
   67d58:	beq	67dac <Mat_VarReadNext+0xec>
   67d5c:	ldr	r0, [r5, #16]
   67d60:	cmp	r0, #16
   67d64:	beq	67db4 <Mat_VarReadNext+0xf4>
   67d68:	cmp	r0, #256	; 0x100
   67d6c:	bne	67dac <Mat_VarReadNext+0xec>
   67d70:	mov	r0, r5
   67d74:	mov	r1, r7
   67d78:	bl	2da20 <Mat_VarRead5>
   67d7c:	mov	r0, r7
   67d80:	pop	{r4, r5, r6, r7, fp, pc}
   67d84:	ldr	r0, [r5, #16]
   67d88:	cmp	r0, #512	; 0x200
   67d8c:	beq	67cec <Mat_VarReadNext+0x2c>
   67d90:	ldr	r0, [r5]
   67d94:	mov	r1, r6
   67d98:	mov	r2, #0
   67d9c:	mov	r4, #0
   67da0:	bl	1a2c <fseek@plt>
   67da4:	mov	r0, r4
   67da8:	pop	{r4, r5, r6, r7, fp, pc}
   67dac:	mov	r0, r7
   67db0:	pop	{r4, r5, r6, r7, fp, pc}
   67db4:	mov	r0, r5
   67db8:	mov	r1, r7
   67dbc:	bl	65668 <Mat_VarRead4>
   67dc0:	mov	r0, r7
   67dc4:	pop	{r4, r5, r6, r7, fp, pc}
   67dc8:	.word	0x00004060

00067dcc <Mat_VarWrite>:
   67dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   67dd0:	add	fp, sp, #28
   67dd4:	sub	sp, sp, #4
   67dd8:	mov	r9, r0
   67ddc:	mvn	r0, #0
   67de0:	cmp	r9, #0
   67de4:	movne	sl, r1
   67de8:	cmpne	r1, #0
   67dec:	bne	67df8 <Mat_VarWrite+0x2c>
   67df0:	sub	sp, fp, #28
   67df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67df8:	ldr	r0, [r9, #40]	; 0x28
   67dfc:	mov	r8, r2
   67e00:	cmp	r0, #0
   67e04:	bne	67e1c <Mat_VarWrite+0x50>
   67e08:	mov	r0, #0
   67e0c:	mov	r1, sp
   67e10:	str	r0, [sp]
   67e14:	mov	r0, r9
   67e18:	bl	1930 <Mat_GetDir@plt>
   67e1c:	ldr	r6, [r9, #36]	; 0x24
   67e20:	cmp	r6, #0
   67e24:	beq	67e74 <Mat_VarWrite+0xa8>
   67e28:	ldr	r4, [r9, #40]	; 0x28
   67e2c:	mov	r5, #0
   67e30:	b	67e40 <Mat_VarWrite+0x74>
   67e34:	add	r5, r5, #1
   67e38:	cmp	r5, r6
   67e3c:	bcs	67e74 <Mat_VarWrite+0xa8>
   67e40:	ldr	r0, [r4, r5, lsl #2]
   67e44:	cmp	r0, #0
   67e48:	beq	67e34 <Mat_VarWrite+0x68>
   67e4c:	ldr	r7, [sl, #36]	; 0x24
   67e50:	mov	r1, r7
   67e54:	bl	17b0 <strcmp@plt>
   67e58:	cmp	r0, #0
   67e5c:	bne	67e34 <Mat_VarWrite+0x68>
   67e60:	ldr	r0, [pc, #276]	; 67f7c <Mat_VarWrite+0x1b0>
   67e64:	mov	r1, r7
   67e68:	add	r0, pc, r0
   67e6c:	bl	19b4 <Mat_Critical@plt>
   67e70:	b	67eac <Mat_VarWrite+0xe0>
   67e74:	ldr	r0, [r9, #16]
   67e78:	cmp	r0, #16
   67e7c:	beq	67eb8 <Mat_VarWrite+0xec>
   67e80:	cmp	r0, #512	; 0x200
   67e84:	beq	67eac <Mat_VarWrite+0xe0>
   67e88:	cmp	r0, #256	; 0x100
   67e8c:	bne	67eec <Mat_VarWrite+0x120>
   67e90:	mov	r0, r9
   67e94:	mov	r1, sl
   67e98:	mov	r2, r8
   67e9c:	bl	60300 <Mat_VarWrite5>
   67ea0:	cmp	r0, #0
   67ea4:	bne	67df0 <Mat_VarWrite+0x24>
   67ea8:	b	67ecc <Mat_VarWrite+0x100>
   67eac:	mov	r0, #1
   67eb0:	sub	sp, fp, #28
   67eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67eb8:	mov	r0, r9
   67ebc:	mov	r1, sl
   67ec0:	bl	65020 <Mat_VarWrite4>
   67ec4:	cmp	r0, #0
   67ec8:	bne	67df0 <Mat_VarWrite+0x24>
   67ecc:	ldr	r0, [r9, #40]	; 0x28
   67ed0:	cmp	r0, #0
   67ed4:	beq	67ef8 <Mat_VarWrite+0x12c>
   67ed8:	ldr	r1, [r9, #36]	; 0x24
   67edc:	mov	r2, #4
   67ee0:	add	r1, r2, r1, lsl #2
   67ee4:	bl	1870 <realloc@plt>
   67ee8:	b	67f00 <Mat_VarWrite+0x134>
   67eec:	mov	r0, #2
   67ef0:	sub	sp, fp, #28
   67ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67ef8:	mov	r0, #4
   67efc:	bl	18d0 <malloc@plt>
   67f00:	mov	r2, r0
   67f04:	cmp	r0, #0
   67f08:	beq	67f48 <Mat_VarWrite+0x17c>
   67f0c:	str	r2, [r9, #40]	; 0x28
   67f10:	ldr	r1, [sl, #36]	; 0x24
   67f14:	cmp	r1, #0
   67f18:	beq	67f60 <Mat_VarWrite+0x194>
   67f1c:	ldr	r0, [pc, #92]	; 67f80 <Mat_VarWrite+0x1b4>
   67f20:	add	r0, pc, r0
   67f24:	bl	1da4 <strdup_printf>
   67f28:	ldr	r1, [r9, #36]	; 0x24
   67f2c:	ldr	r2, [r9, #40]	; 0x28
   67f30:	add	r3, r1, #1
   67f34:	str	r3, [r9, #36]	; 0x24
   67f38:	str	r0, [r2, r1, lsl #2]
   67f3c:	mov	r0, #0
   67f40:	sub	sp, fp, #28
   67f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67f48:	ldr	r0, [pc, #52]	; 67f84 <Mat_VarWrite+0x1b8>
   67f4c:	add	r0, pc, r0
   67f50:	bl	19b4 <Mat_Critical@plt>
   67f54:	mov	r0, #3
   67f58:	sub	sp, fp, #28
   67f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67f60:	ldr	r1, [r9, #36]	; 0x24
   67f64:	add	r0, r1, #1
   67f68:	str	r0, [r9, #36]	; 0x24
   67f6c:	mov	r0, #0
   67f70:	str	r0, [r2, r1, lsl #2]
   67f74:	sub	sp, fp, #28
   67f78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   67f7c:	.word	0x00004ae4
   67f80:	.word	0x000047ab
   67f84:	.word	0x000044c3

00067f88 <Mat_VarDuplicate>:
   67f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   67f8c:	add	fp, sp, #28
   67f90:	sub	sp, sp, #4
   67f94:	vpush	{d8-d9}
   67f98:	sub	sp, sp, #16
   67f9c:	mov	sl, r0
   67fa0:	mov	r0, #56	; 0x38
   67fa4:	mov	r4, r1
   67fa8:	bl	18d0 <malloc@plt>
   67fac:	cmp	r0, #0
   67fb0:	beq	68138 <Mat_VarDuplicate+0x1b0>
   67fb4:	vmov.i32	q4, #0	; 0x00000000
   67fb8:	mov	r6, #0
   67fbc:	mov	r9, r0
   67fc0:	mov	r8, r4
   67fc4:	str	r6, [r0, #48]	; 0x30
   67fc8:	add	r0, r0, #32
   67fcc:	mov	r4, r9
   67fd0:	add	r5, r9, #16
   67fd4:	vst1.32	{d8-d9}, [r0]
   67fd8:	mov	r0, #52	; 0x34
   67fdc:	vst1.32	{d8-d9}, [r5]
   67fe0:	vst1.32	{d8-d9}, [r4], r0
   67fe4:	mov	r0, #20
   67fe8:	bl	18d0 <malloc@plt>
   67fec:	cmp	r0, #0
   67ff0:	str	r0, [r4]
   67ff4:	beq	682ec <Mat_VarDuplicate+0x364>
   67ff8:	mov	r7, r0
   67ffc:	vst1.32	{d8-d9}, [r0]!
   68000:	mov	r1, sl
   68004:	mov	r2, r9
   68008:	str	r6, [r0]
   6800c:	mov	r0, #36	; 0x24
   68010:	vld1.32	{d8-d9}, [r1], r0
   68014:	mov	r0, #48	; 0x30
   68018:	vst1.32	{d8-d9}, [r2], r0
   6801c:	add	r0, sl, #16
   68020:	vld1.32	{d16-d17}, [r0]
   68024:	str	r0, [sp, #12]
   68028:	vst1.32	{d16-d17}, [r5]
   6802c:	ldr	r0, [sl, #44]	; 0x2c
   68030:	ldr	r3, [sl, #48]	; 0x30
   68034:	str	r0, [r9, #44]	; 0x2c
   68038:	str	r3, [r2]
   6803c:	ldr	r6, [r1]
   68040:	cmp	r6, #0
   68044:	beq	68074 <Mat_VarDuplicate+0xec>
   68048:	mov	r0, r6
   6804c:	bl	1954 <strlen@plt>
   68050:	add	r5, r0, #1
   68054:	mov	r0, r5
   68058:	bl	18d0 <malloc@plt>
   6805c:	cmp	r0, #0
   68060:	str	r0, [r9, #36]	; 0x24
   68064:	beq	68074 <Mat_VarDuplicate+0xec>
   68068:	mov	r1, r6
   6806c:	mov	r2, r5
   68070:	bl	181c <memcpy@plt>
   68074:	vmov.32	r0, d8[1]
   68078:	lsl	r6, r0, #2
   6807c:	mov	r0, r6
   68080:	bl	18d0 <malloc@plt>
   68084:	cmp	r0, #0
   68088:	mov	r4, r8
   6808c:	str	r0, [r9, #32]
   68090:	beq	680a0 <Mat_VarDuplicate+0x118>
   68094:	ldr	r1, [sl, #32]
   68098:	mov	r2, r6
   6809c:	bl	181c <memcpy@plt>
   680a0:	ldr	r5, [sl, #52]	; 0x34
   680a4:	cmp	r5, #0
   680a8:	beq	682fc <Mat_VarDuplicate+0x374>
   680ac:	ldr	r0, [r5]
   680b0:	mov	r1, #0
   680b4:	str	r1, [r7, #12]
   680b8:	str	r1, [r7, #16]
   680bc:	str	r0, [r7]
   680c0:	ldr	r0, [r5, #4]
   680c4:	str	r0, [r7, #4]
   680c8:	ldr	r0, [r5, #8]
   680cc:	cmp	r0, #0
   680d0:	beq	68140 <Mat_VarDuplicate+0x1b8>
   680d4:	ldr	r0, [r5, #4]
   680d8:	cmp	r0, #0
   680dc:	beq	68140 <Mat_VarDuplicate+0x1b8>
   680e0:	mov	r1, #4
   680e4:	bl	1798 <calloc@plt>
   680e8:	str	r0, [r7, #8]
   680ec:	ldr	r0, [r5, #4]
   680f0:	cmp	r0, #0
   680f4:	beq	68140 <Mat_VarDuplicate+0x1b8>
   680f8:	mov	r6, #0
   680fc:	b	68110 <Mat_VarDuplicate+0x188>
   68100:	ldr	r0, [r5, #4]
   68104:	add	r6, r6, #1
   68108:	cmp	r6, r0
   6810c:	bcs	68140 <Mat_VarDuplicate+0x1b8>
   68110:	ldr	r0, [r5, #8]
   68114:	ldr	r0, [r0, r6, lsl #2]
   68118:	cmp	r0, #0
   6811c:	beq	68100 <Mat_VarDuplicate+0x178>
   68120:	bl	1864 <strdup@plt>
   68124:	ldr	r1, [r9, #52]	; 0x34
   68128:	ldr	r1, [r1, #8]
   6812c:	str	r0, [r1, r6, lsl #2]
   68130:	ldr	r5, [sl, #52]	; 0x34
   68134:	b	68100 <Mat_VarDuplicate+0x178>
   68138:	mov	r9, #0
   6813c:	b	6839c <Mat_VarDuplicate+0x414>
   68140:	ldr	r0, [r5, #12]
   68144:	cmp	r0, #0
   68148:	beq	68170 <Mat_VarDuplicate+0x1e8>
   6814c:	mov	r0, #56	; 0x38
   68150:	bl	18d0 <malloc@plt>
   68154:	ldr	r1, [r9, #52]	; 0x34
   68158:	cmp	r0, #0
   6815c:	str	r0, [r1, #12]
   68160:	beq	68170 <Mat_VarDuplicate+0x1e8>
   68164:	ldr	r1, [r5, #12]
   68168:	bl	1948 <inflateCopy@plt>
   6816c:	ldr	r5, [sl, #52]	; 0x34
   68170:	ldr	r0, [r5, #16]
   68174:	cmp	r0, #0
   68178:	beq	6830c <Mat_VarDuplicate+0x384>
   6817c:	ldr	r0, [sp, #12]
   68180:	ldr	r0, [r0]
   68184:	cmp	r0, #5
   68188:	bne	683b0 <Mat_VarDuplicate+0x428>
   6818c:	mov	r0, #28
   68190:	bl	18d0 <malloc@plt>
   68194:	mov	r7, r0
   68198:	ldr	r0, [r9, #52]	; 0x34
   6819c:	cmp	r7, #0
   681a0:	str	r7, [r0, #16]
   681a4:	beq	6830c <Mat_VarDuplicate+0x384>
   681a8:	ldr	r5, [r5, #16]
   681ac:	ldr	r0, [r5]
   681b0:	str	r0, [r7]
   681b4:	ldr	r0, [r5, #8]
   681b8:	str	r0, [r7, #8]
   681bc:	ldr	r0, [r5, #8]
   681c0:	lsl	r0, r0, #2
   681c4:	bl	18d0 <malloc@plt>
   681c8:	cmp	r0, #0
   681cc:	str	r0, [r7, #4]
   681d0:	beq	681e0 <Mat_VarDuplicate+0x258>
   681d4:	ldmib	r5, {r1, r2}
   681d8:	lsl	r2, r2, #2
   681dc:	bl	181c <memcpy@plt>
   681e0:	ldr	r0, [r5, #16]
   681e4:	str	r0, [r7, #16]
   681e8:	ldr	r0, [r5, #16]
   681ec:	lsl	r0, r0, #2
   681f0:	bl	18d0 <malloc@plt>
   681f4:	cmp	r0, #0
   681f8:	str	r0, [r7, #12]
   681fc:	beq	68210 <Mat_VarDuplicate+0x288>
   68200:	ldr	r2, [r5, #16]
   68204:	ldr	r1, [r5, #12]
   68208:	lsl	r2, r2, #2
   6820c:	bl	181c <memcpy@plt>
   68210:	ldr	r0, [r5, #20]
   68214:	ldr	r1, [r9, #20]
   68218:	str	r0, [r7, #20]
   6821c:	cmp	r1, #0
   68220:	ldr	r0, [r5, #24]
   68224:	beq	6864c <Mat_VarDuplicate+0x6c4>
   68228:	cmp	r0, #0
   6822c:	beq	6830c <Mat_VarDuplicate+0x384>
   68230:	mov	r0, #8
   68234:	bl	18d0 <malloc@plt>
   68238:	cmp	r0, #0
   6823c:	str	r0, [r7, #24]
   68240:	beq	6830c <Mat_VarDuplicate+0x384>
   68244:	mov	r7, r0
   68248:	ldr	r0, [r5, #24]
   6824c:	ldr	r4, [r5, #20]
   68250:	str	r0, [sp, #8]
   68254:	ldr	r0, [sl, #8]
   68258:	bl	1924 <Mat_SizeOf@plt>
   6825c:	mul	r0, r0, r4
   68260:	bl	18d0 <malloc@plt>
   68264:	cmp	r0, #0
   68268:	str	r0, [r7]
   6826c:	beq	682a0 <Mat_VarDuplicate+0x318>
   68270:	mov	r6, r0
   68274:	ldr	r0, [sp, #8]
   68278:	str	r7, [sp, #4]
   6827c:	ldr	r4, [r5, #20]
   68280:	ldr	r7, [r0]
   68284:	ldr	r0, [sl, #8]
   68288:	bl	1924 <Mat_SizeOf@plt>
   6828c:	mul	r2, r0, r4
   68290:	mov	r1, r7
   68294:	ldr	r7, [sp, #4]
   68298:	mov	r0, r6
   6829c:	bl	181c <memcpy@plt>
   682a0:	ldr	r0, [sl, #8]
   682a4:	ldr	r4, [r5, #20]
   682a8:	bl	1924 <Mat_SizeOf@plt>
   682ac:	mul	r0, r0, r4
   682b0:	bl	18d0 <malloc@plt>
   682b4:	cmp	r0, #0
   682b8:	mov	r4, r8
   682bc:	str	r0, [r7, #4]
   682c0:	beq	6830c <Mat_VarDuplicate+0x384>
   682c4:	mov	r6, r0
   682c8:	ldr	r0, [sp, #8]
   682cc:	ldr	r4, [r5, #20]
   682d0:	ldr	r7, [r0, #4]
   682d4:	ldr	r0, [sl, #8]
   682d8:	bl	1924 <Mat_SizeOf@plt>
   682dc:	mul	r2, r0, r4
   682e0:	mov	r0, r6
   682e4:	mov	r1, r7
   682e8:	b	68698 <Mat_VarDuplicate+0x710>
   682ec:	mov	r0, r9
   682f0:	bl	1804 <free@plt>
   682f4:	mov	r9, #0
   682f8:	b	6839c <Mat_VarDuplicate+0x414>
   682fc:	mov	r0, r7
   68300:	bl	1804 <free@plt>
   68304:	mov	r0, #0
   68308:	str	r0, [r9, #52]	; 0x34
   6830c:	ldr	r8, [sl, #40]	; 0x28
   68310:	cmp	r4, #0
   68314:	beq	68398 <Mat_VarDuplicate+0x410>
   68318:	cmp	r8, #0
   6831c:	beq	6839c <Mat_VarDuplicate+0x414>
   68320:	ldr	r0, [sp, #12]
   68324:	ldr	r0, [r0]
   68328:	cmp	r0, #1
   6832c:	beq	6841c <Mat_VarDuplicate+0x494>
   68330:	cmp	r0, #5
   68334:	beq	68474 <Mat_VarDuplicate+0x4ec>
   68338:	cmp	r0, #2
   6833c:	bne	685bc <Mat_VarDuplicate+0x634>
   68340:	ldr	r5, [sl]
   68344:	mov	r0, r5
   68348:	bl	18d0 <malloc@plt>
   6834c:	cmp	r0, #0
   68350:	str	r0, [r9, #40]	; 0x28
   68354:	beq	6839c <Mat_VarDuplicate+0x414>
   68358:	mov	r6, r0
   6835c:	ldr	r0, [sl, #12]
   68360:	cmp	r0, #1
   68364:	blt	6839c <Mat_VarDuplicate+0x414>
   68368:	cmp	r0, r5
   6836c:	bhi	6839c <Mat_VarDuplicate+0x414>
   68370:	udiv	r5, r5, r0
   68374:	mov	r7, #0
   68378:	ldr	r0, [r8, r7, lsl #2]
   6837c:	mov	r1, r4
   68380:	bl	1a44 <Mat_VarDuplicate@plt>
   68384:	str	r0, [r6, r7, lsl #2]
   68388:	add	r7, r7, #1
   6838c:	cmp	r7, r5
   68390:	bcc	68378 <Mat_VarDuplicate+0x3f0>
   68394:	b	6839c <Mat_VarDuplicate+0x414>
   68398:	str	r8, [r9, #40]	; 0x28
   6839c:	mov	r0, r9
   683a0:	sub	sp, fp, #48	; 0x30
   683a4:	vpop	{d8-d9}
   683a8:	add	sp, sp, #4
   683ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   683b0:	ldr	r0, [r9, #20]
   683b4:	cmp	r0, #0
   683b8:	beq	68620 <Mat_VarDuplicate+0x698>
   683bc:	mov	r0, #8
   683c0:	bl	18d0 <malloc@plt>
   683c4:	mov	r7, r0
   683c8:	ldr	r0, [r9, #52]	; 0x34
   683cc:	cmp	r7, #0
   683d0:	str	r7, [r0, #16]
   683d4:	beq	6830c <Mat_VarDuplicate+0x384>
   683d8:	ldr	r6, [r9]
   683dc:	ldr	r5, [r5, #16]
   683e0:	mov	r0, r6
   683e4:	bl	18d0 <malloc@plt>
   683e8:	cmp	r0, #0
   683ec:	str	r0, [r7]
   683f0:	beq	68400 <Mat_VarDuplicate+0x478>
   683f4:	ldr	r1, [r5]
   683f8:	mov	r2, r6
   683fc:	bl	181c <memcpy@plt>
   68400:	mov	r0, r6
   68404:	bl	18d0 <malloc@plt>
   68408:	cmp	r0, #0
   6840c:	str	r0, [r7, #4]
   68410:	beq	6830c <Mat_VarDuplicate+0x384>
   68414:	ldr	r1, [r5, #4]
   68418:	b	68640 <Mat_VarDuplicate+0x6b8>
   6841c:	ldr	r5, [sl]
   68420:	mov	r0, r5
   68424:	bl	18d0 <malloc@plt>
   68428:	cmp	r0, #0
   6842c:	str	r0, [r9, #40]	; 0x28
   68430:	beq	6839c <Mat_VarDuplicate+0x414>
   68434:	mov	r6, r0
   68438:	ldr	r0, [sl, #12]
   6843c:	cmp	r0, #1
   68440:	blt	6839c <Mat_VarDuplicate+0x414>
   68444:	cmp	r0, r5
   68448:	bhi	6839c <Mat_VarDuplicate+0x414>
   6844c:	udiv	r5, r5, r0
   68450:	mov	r7, #0
   68454:	ldr	r0, [r8, r7, lsl #2]
   68458:	mov	r1, r4
   6845c:	bl	1a44 <Mat_VarDuplicate@plt>
   68460:	str	r0, [r6, r7, lsl #2]
   68464:	add	r7, r7, #1
   68468:	cmp	r7, r5
   6846c:	bcc	68454 <Mat_VarDuplicate+0x4cc>
   68470:	b	6839c <Mat_VarDuplicate+0x414>
   68474:	mov	r0, #28
   68478:	bl	18d0 <malloc@plt>
   6847c:	cmp	r0, #0
   68480:	str	r0, [r9, #40]	; 0x28
   68484:	beq	6839c <Mat_VarDuplicate+0x414>
   68488:	mov	r6, r0
   6848c:	ldr	r0, [r8]
   68490:	str	r0, [r6]
   68494:	ldr	r0, [r8, #8]
   68498:	str	r0, [r6, #8]
   6849c:	ldr	r0, [r8, #8]
   684a0:	lsl	r0, r0, #2
   684a4:	bl	18d0 <malloc@plt>
   684a8:	cmp	r0, #0
   684ac:	str	r0, [r6, #4]
   684b0:	beq	684c0 <Mat_VarDuplicate+0x538>
   684b4:	ldmib	r8, {r1, r2}
   684b8:	lsl	r2, r2, #2
   684bc:	bl	181c <memcpy@plt>
   684c0:	ldr	r0, [r8, #16]
   684c4:	str	r0, [r6, #16]
   684c8:	ldr	r0, [r8, #16]
   684cc:	lsl	r0, r0, #2
   684d0:	bl	18d0 <malloc@plt>
   684d4:	cmp	r0, #0
   684d8:	str	r0, [r6, #12]
   684dc:	beq	684f0 <Mat_VarDuplicate+0x568>
   684e0:	ldr	r2, [r8, #16]
   684e4:	ldr	r1, [r8, #12]
   684e8:	lsl	r2, r2, #2
   684ec:	bl	181c <memcpy@plt>
   684f0:	ldr	r0, [r8, #20]
   684f4:	ldr	r1, [r9, #20]
   684f8:	str	r0, [r6, #20]
   684fc:	cmp	r1, #0
   68500:	ldr	r0, [r8, #24]
   68504:	beq	686cc <Mat_VarDuplicate+0x744>
   68508:	cmp	r0, #0
   6850c:	beq	68718 <Mat_VarDuplicate+0x790>
   68510:	mov	r0, #8
   68514:	bl	18d0 <malloc@plt>
   68518:	cmp	r0, #0
   6851c:	str	r0, [r6, #24]
   68520:	beq	6839c <Mat_VarDuplicate+0x414>
   68524:	mov	r7, r0
   68528:	ldr	r0, [sl, #8]
   6852c:	ldr	r5, [r8, #20]
   68530:	ldr	r4, [r8, #24]
   68534:	bl	1924 <Mat_SizeOf@plt>
   68538:	mul	r0, r0, r5
   6853c:	bl	18d0 <malloc@plt>
   68540:	cmp	r0, #0
   68544:	str	r0, [r7]
   68548:	beq	68574 <Mat_VarDuplicate+0x5ec>
   6854c:	mov	r6, r0
   68550:	ldr	r0, [r4]
   68554:	ldr	r5, [r8, #20]
   68558:	str	r0, [sp, #12]
   6855c:	ldr	r0, [sl, #8]
   68560:	bl	1924 <Mat_SizeOf@plt>
   68564:	ldr	r1, [sp, #12]
   68568:	mul	r2, r0, r5
   6856c:	mov	r0, r6
   68570:	bl	181c <memcpy@plt>
   68574:	ldr	r0, [sl, #8]
   68578:	mov	r5, r4
   6857c:	ldr	r4, [r8, #20]
   68580:	bl	1924 <Mat_SizeOf@plt>
   68584:	mul	r0, r0, r4
   68588:	bl	18d0 <malloc@plt>
   6858c:	cmp	r0, #0
   68590:	str	r0, [r7, #4]
   68594:	beq	6839c <Mat_VarDuplicate+0x414>
   68598:	mov	r6, r0
   6859c:	ldr	r0, [sl, #8]
   685a0:	ldr	r5, [r5, #4]
   685a4:	ldr	r4, [r8, #20]
   685a8:	bl	1924 <Mat_SizeOf@plt>
   685ac:	mul	r2, r0, r4
   685b0:	mov	r0, r6
   685b4:	mov	r1, r5
   685b8:	b	686c4 <Mat_VarDuplicate+0x73c>
   685bc:	ldr	r0, [r9, #20]
   685c0:	cmp	r0, #0
   685c4:	beq	686a4 <Mat_VarDuplicate+0x71c>
   685c8:	mov	r0, #8
   685cc:	bl	18d0 <malloc@plt>
   685d0:	cmp	r0, #0
   685d4:	str	r0, [r9, #40]	; 0x28
   685d8:	beq	6839c <Mat_VarDuplicate+0x414>
   685dc:	ldr	r5, [r9]
   685e0:	mov	r6, r0
   685e4:	mov	r0, r5
   685e8:	bl	18d0 <malloc@plt>
   685ec:	cmp	r0, #0
   685f0:	str	r0, [r6]
   685f4:	beq	68604 <Mat_VarDuplicate+0x67c>
   685f8:	ldr	r1, [r8]
   685fc:	mov	r2, r5
   68600:	bl	181c <memcpy@plt>
   68604:	mov	r0, r5
   68608:	bl	18d0 <malloc@plt>
   6860c:	cmp	r0, #0
   68610:	str	r0, [r6, #4]
   68614:	beq	6839c <Mat_VarDuplicate+0x414>
   68618:	ldr	r1, [r8, #4]
   6861c:	b	686c0 <Mat_VarDuplicate+0x738>
   68620:	ldr	r6, [sl]
   68624:	mov	r0, r6
   68628:	bl	18d0 <malloc@plt>
   6862c:	ldr	r1, [r9, #52]	; 0x34
   68630:	cmp	r0, #0
   68634:	str	r0, [r1, #16]
   68638:	beq	6830c <Mat_VarDuplicate+0x384>
   6863c:	ldr	r1, [r5, #16]
   68640:	mov	r2, r6
   68644:	bl	181c <memcpy@plt>
   68648:	b	6830c <Mat_VarDuplicate+0x384>
   6864c:	cmp	r0, #0
   68650:	beq	6830c <Mat_VarDuplicate+0x384>
   68654:	ldr	r0, [sl, #8]
   68658:	ldr	r4, [r5, #20]
   6865c:	bl	1924 <Mat_SizeOf@plt>
   68660:	mul	r0, r0, r4
   68664:	mov	r4, r8
   68668:	bl	18d0 <malloc@plt>
   6866c:	cmp	r0, #0
   68670:	str	r0, [r7, #24]
   68674:	beq	6830c <Mat_VarDuplicate+0x384>
   68678:	mov	r6, r0
   6867c:	ldr	r0, [sl, #8]
   68680:	ldr	r4, [r5, #20]
   68684:	ldr	r5, [r5, #24]
   68688:	bl	1924 <Mat_SizeOf@plt>
   6868c:	mul	r2, r0, r4
   68690:	mov	r0, r6
   68694:	mov	r1, r5
   68698:	mov	r4, r8
   6869c:	bl	181c <memcpy@plt>
   686a0:	b	6830c <Mat_VarDuplicate+0x384>
   686a4:	ldr	r5, [sl]
   686a8:	mov	r0, r5
   686ac:	bl	18d0 <malloc@plt>
   686b0:	cmp	r0, #0
   686b4:	str	r0, [r9, #40]	; 0x28
   686b8:	beq	6839c <Mat_VarDuplicate+0x414>
   686bc:	mov	r1, r8
   686c0:	mov	r2, r5
   686c4:	bl	181c <memcpy@plt>
   686c8:	b	6839c <Mat_VarDuplicate+0x414>
   686cc:	cmp	r0, #0
   686d0:	beq	68718 <Mat_VarDuplicate+0x790>
   686d4:	ldr	r0, [sl, #8]
   686d8:	ldr	r4, [r8, #20]
   686dc:	bl	1924 <Mat_SizeOf@plt>
   686e0:	mul	r0, r0, r4
   686e4:	bl	18d0 <malloc@plt>
   686e8:	cmp	r0, #0
   686ec:	str	r0, [r6, #24]
   686f0:	beq	6839c <Mat_VarDuplicate+0x414>
   686f4:	mov	r7, r0
   686f8:	ldr	r0, [sl, #8]
   686fc:	ldr	r4, [r8, #20]
   68700:	ldr	r5, [r8, #24]
   68704:	bl	1924 <Mat_SizeOf@plt>
   68708:	mul	r2, r0, r4
   6870c:	mov	r0, r7
   68710:	mov	r1, r5
   68714:	b	686c4 <Mat_VarDuplicate+0x73c>
   68718:	mov	r0, #0
   6871c:	str	r0, [r6, #24]
   68720:	b	6839c <Mat_VarDuplicate+0x414>

00068724 <Mat_CalcSingleSubscript>:
   68724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   68728:	add	fp, sp, #28
   6872c:	sub	sp, sp, #12
   68730:	cmp	r0, #1
   68734:	blt	68894 <Mat_CalcSingleSubscript+0x170>
   68738:	mov	lr, #1
   6873c:	sub	r7, r1, #12
   68740:	sub	r3, r1, #4
   68744:	sub	r9, r1, #32
   68748:	mov	sl, #0
   6874c:	mov	ip, #0
   68750:	str	r2, [sp, #8]
   68754:	vdup.32	q8, lr
   68758:	str	r7, [sp, #4]
   6875c:	mvn	r7, #31
   68760:	b	6877c <Mat_CalcSingleSubscript+0x58>
   68764:	ldr	r2, [sp, #8]
   68768:	add	sl, sl, #1
   6876c:	add	ip, r6, ip
   68770:	add	r9, r9, #4
   68774:	cmp	sl, r0
   68778:	beq	688ac <Mat_CalcSingleSubscript+0x188>
   6877c:	ldr	r6, [r2, sl, lsl #2]
   68780:	ldr	r5, [r1, sl, lsl #2]
   68784:	cmp	r6, r5
   68788:	bgt	6889c <Mat_CalcSingleSubscript+0x178>
   6878c:	cmp	r6, #1
   68790:	blt	688a8 <Mat_CalcSingleSubscript+0x184>
   68794:	sub	r6, r6, #1
   68798:	cmp	sl, #0
   6879c:	beq	68768 <Mat_CalcSingleSubscript+0x44>
   687a0:	cmp	sl, #4
   687a4:	bcs	687b0 <Mat_CalcSingleSubscript+0x8c>
   687a8:	mov	r5, sl
   687ac:	b	68870 <Mat_CalcSingleSubscript+0x14c>
   687b0:	vorr	d20, d16, d16
   687b4:	bic	r4, sl, #-2147483645	; 0x80000003
   687b8:	vorr	q9, q8, q8
   687bc:	subs	r5, r4, #4
   687c0:	add	r5, lr, r5, lsr #2
   687c4:	vmov.32	d20[0], r6
   687c8:	and	r2, r5, #1
   687cc:	vorr	d18, d20, d20
   687d0:	beq	68884 <Mat_CalcSingleSubscript+0x160>
   687d4:	bic	r6, sl, #3
   687d8:	sub	r6, r6, #4
   687dc:	add	r5, lr, r6, lsr #2
   687e0:	mvn	r6, r6, lsr #2
   687e4:	mov	lr, r9
   687e8:	and	r5, r5, #1
   687ec:	add	r8, r6, r5
   687f0:	mov	r6, #0
   687f4:	add	r5, lr, #16
   687f8:	vld1.32	{d22-d23}, [lr], r7
   687fc:	adds	r8, r8, #2
   68800:	add	r6, r6, #8
   68804:	vld1.32	{d20-d21}, [r5]
   68808:	vrev64.32	q11, q11
   6880c:	vrev64.32	q10, q10
   68810:	vext.8	q11, q11, q11, #8
   68814:	vext.8	q10, q10, q10, #8
   68818:	vmul.i32	q9, q10, q9
   6881c:	vmul.i32	q9, q11, q9
   68820:	bne	687f4 <Mat_CalcSingleSubscript+0xd0>
   68824:	cmp	r2, #0
   68828:	beq	6884c <Mat_CalcSingleSubscript+0x128>
   6882c:	mvn	r2, r6
   68830:	ldr	r6, [sp, #4]
   68834:	add	r2, sl, r2
   68838:	add	r2, r6, r2, lsl #2
   6883c:	vld1.32	{d20-d21}, [r2]
   68840:	vrev64.32	q10, q10
   68844:	vext.8	q10, q10, q10, #8
   68848:	vmul.i32	q9, q10, q9
   6884c:	vext.8	q10, q9, q8, #8
   68850:	cmp	sl, r4
   68854:	mov	lr, #1
   68858:	vmul.i32	q0, q9, q10
   6885c:	vmul.i32	q9, q0, d0[1]
   68860:	vmov.32	r6, d18[0]
   68864:	beq	68764 <Mat_CalcSingleSubscript+0x40>
   68868:	ldr	r2, [sp, #8]
   6886c:	sub	r5, sl, r4
   68870:	ldr	r4, [r3, r5, lsl #2]
   68874:	subs	r5, r5, #1
   68878:	mul	r6, r4, r6
   6887c:	bne	68870 <Mat_CalcSingleSubscript+0x14c>
   68880:	b	68768 <Mat_CalcSingleSubscript+0x44>
   68884:	mov	r6, #0
   68888:	cmp	r2, #0
   6888c:	bne	6882c <Mat_CalcSingleSubscript+0x108>
   68890:	b	6884c <Mat_CalcSingleSubscript+0x128>
   68894:	mov	ip, #0
   68898:	b	688ac <Mat_CalcSingleSubscript+0x188>
   6889c:	ldr	r0, [pc, #20]	; 688b8 <Mat_CalcSingleSubscript+0x194>
   688a0:	add	r0, pc, r0
   688a4:	bl	19b4 <Mat_Critical@plt>
   688a8:	mvn	ip, #0
   688ac:	mov	r0, ip
   688b0:	sub	sp, fp, #28
   688b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   688b8:	.word	0x00003c2e

000688bc <Mat_CalcSingleSubscript2>:
   688bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   688c0:	add	fp, sp, #28
   688c4:	sub	sp, sp, #12
   688c8:	cmp	r0, #1
   688cc:	blt	68a2c <Mat_CalcSingleSubscript2+0x170>
   688d0:	mov	lr, #1
   688d4:	sub	r7, r1, #12
   688d8:	sub	ip, r1, #4
   688dc:	sub	r9, r1, #32
   688e0:	mov	sl, #0
   688e4:	str	r2, [sp, #8]
   688e8:	vdup.32	q8, lr
   688ec:	str	r7, [sp, #4]
   688f0:	mvn	r7, #31
   688f4:	b	68914 <Mat_CalcSingleSubscript2+0x58>
   688f8:	ldr	r5, [r3]
   688fc:	add	sl, sl, #1
   68900:	add	r9, r9, #4
   68904:	cmp	sl, r0
   68908:	add	r6, r5, r6
   6890c:	str	r6, [r3]
   68910:	beq	68a2c <Mat_CalcSingleSubscript2+0x170>
   68914:	ldr	r6, [r2, sl, lsl #2]
   68918:	ldr	r5, [r1, sl, lsl #2]
   6891c:	cmp	r6, r5
   68920:	bhi	68a38 <Mat_CalcSingleSubscript2+0x17c>
   68924:	cmp	r6, #0
   68928:	beq	68a44 <Mat_CalcSingleSubscript2+0x188>
   6892c:	sub	r6, r6, #1
   68930:	cmp	sl, #0
   68934:	beq	688f8 <Mat_CalcSingleSubscript2+0x3c>
   68938:	cmp	sl, #4
   6893c:	bcs	68948 <Mat_CalcSingleSubscript2+0x8c>
   68940:	mov	r5, sl
   68944:	b	68a08 <Mat_CalcSingleSubscript2+0x14c>
   68948:	vorr	d20, d16, d16
   6894c:	bic	r4, sl, #-2147483645	; 0x80000003
   68950:	vorr	q9, q8, q8
   68954:	subs	r5, r4, #4
   68958:	add	r5, lr, r5, lsr #2
   6895c:	vmov.32	d20[0], r6
   68960:	and	r2, r5, #1
   68964:	vorr	d18, d20, d20
   68968:	beq	68a1c <Mat_CalcSingleSubscript2+0x160>
   6896c:	bic	r6, sl, #3
   68970:	sub	r6, r6, #4
   68974:	add	r5, lr, r6, lsr #2
   68978:	mvn	r6, r6, lsr #2
   6897c:	mov	lr, r9
   68980:	and	r5, r5, #1
   68984:	add	r8, r6, r5
   68988:	mov	r6, #0
   6898c:	add	r5, lr, #16
   68990:	vld1.32	{d22-d23}, [lr], r7
   68994:	adds	r8, r8, #2
   68998:	add	r6, r6, #8
   6899c:	vld1.32	{d20-d21}, [r5]
   689a0:	vrev64.32	q11, q11
   689a4:	vrev64.32	q10, q10
   689a8:	vext.8	q11, q11, q11, #8
   689ac:	vext.8	q10, q10, q10, #8
   689b0:	vmul.i32	q9, q10, q9
   689b4:	vmul.i32	q9, q11, q9
   689b8:	bne	6898c <Mat_CalcSingleSubscript2+0xd0>
   689bc:	cmp	r2, #0
   689c0:	beq	689e4 <Mat_CalcSingleSubscript2+0x128>
   689c4:	mvn	r2, r6
   689c8:	ldr	r6, [sp, #4]
   689cc:	add	r2, sl, r2
   689d0:	add	r2, r6, r2, lsl #2
   689d4:	vld1.32	{d20-d21}, [r2]
   689d8:	vrev64.32	q10, q10
   689dc:	vext.8	q10, q10, q10, #8
   689e0:	vmul.i32	q9, q10, q9
   689e4:	vext.8	q10, q9, q8, #8
   689e8:	ldr	r2, [sp, #8]
   689ec:	cmp	sl, r4
   689f0:	mov	lr, #1
   689f4:	vmul.i32	q0, q9, q10
   689f8:	vmul.i32	q9, q0, d0[1]
   689fc:	vmov.32	r6, d18[0]
   68a00:	beq	688f8 <Mat_CalcSingleSubscript2+0x3c>
   68a04:	sub	r5, sl, r4
   68a08:	ldr	r4, [ip, r5, lsl #2]
   68a0c:	subs	r5, r5, #1
   68a10:	mul	r6, r4, r6
   68a14:	bne	68a08 <Mat_CalcSingleSubscript2+0x14c>
   68a18:	b	688f8 <Mat_CalcSingleSubscript2+0x3c>
   68a1c:	mov	r6, #0
   68a20:	cmp	r2, #0
   68a24:	bne	689c4 <Mat_CalcSingleSubscript2+0x108>
   68a28:	b	689e4 <Mat_CalcSingleSubscript2+0x128>
   68a2c:	mov	r0, #0
   68a30:	sub	sp, fp, #28
   68a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   68a38:	ldr	r0, [pc, #16]	; 68a50 <Mat_CalcSingleSubscript2+0x194>
   68a3c:	add	r0, pc, r0
   68a40:	bl	19b4 <Mat_Critical@plt>
   68a44:	mov	r0, #1
   68a48:	sub	sp, fp, #28
   68a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   68a50:	.word	0x00003abf

00068a54 <Mat_CalcSubscripts>:
   68a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   68a58:	add	fp, sp, #28
   68a5c:	sub	sp, sp, #12
   68a60:	mov	r9, r0
   68a64:	lsl	r0, r0, #2
   68a68:	mov	r6, r2
   68a6c:	mov	r4, r1
   68a70:	bl	18d0 <malloc@plt>
   68a74:	cmp	r9, #0
   68a78:	str	r0, [sp, #8]
   68a7c:	beq	68bf4 <Mat_CalcSubscripts+0x1a0>
   68a80:	vmov	s0, r6
   68a84:	add	r1, r4, r9, lsl #2
   68a88:	sub	r2, r9, #5
   68a8c:	sub	r0, r4, #12
   68a90:	mov	r6, #0
   68a94:	mvn	sl, #31
   68a98:	mov	r5, r9
   68a9c:	sub	r8, r1, #36	; 0x24
   68aa0:	vcvt.f64.s32	d16, s0
   68aa4:	str	r0, [sp]
   68aa8:	str	r9, [sp, #4]
   68aac:	b	68af8 <Mat_CalcSubscripts+0xa4>
   68ab0:	mov	r3, #1
   68ab4:	vmov	s0, r3
   68ab8:	sub	r2, r2, #1
   68abc:	sub	r8, r8, #4
   68ac0:	add	r6, r6, #1
   68ac4:	cmp	r5, #0
   68ac8:	vcvt.f64.s32	d17, s0
   68acc:	vdiv.f64	d17, d16, d17
   68ad0:	vcvtm.s32.f64	s0, d17
   68ad4:	vmov	r0, s0
   68ad8:	mul	r1, r3, r0
   68adc:	add	r0, r0, #1
   68ae0:	vmov	s0, r1
   68ae4:	vcvt.f64.s32	d17, s0
   68ae8:	ldr	r1, [sp, #8]
   68aec:	str	r0, [r1, r5, lsl #2]
   68af0:	vsub.f64	d16, d16, d17
   68af4:	beq	68bf4 <Mat_CalcSubscripts+0x1a0>
   68af8:	mov	r3, r5
   68afc:	mov	ip, #1
   68b00:	subs	r5, r5, #1
   68b04:	beq	68ab0 <Mat_CalcSubscripts+0x5c>
   68b08:	mvn	r7, r6
   68b0c:	sub	lr, r3, #2
   68b10:	mov	r3, #1
   68b14:	add	r7, r7, r9
   68b18:	cmp	r7, #4
   68b1c:	bcc	68bd8 <Mat_CalcSubscripts+0x184>
   68b20:	sub	r3, r7, #4
   68b24:	add	r1, ip, r3, lsr #2
   68b28:	lsr	r3, r3, #2
   68b2c:	cmp	r3, #0
   68b30:	and	r0, r1, #1
   68b34:	beq	68b88 <Mat_CalcSubscripts+0x134>
   68b38:	add	r1, ip, r2, lsr #2
   68b3c:	vmov.i32	q9, #1	; 0x00000001
   68b40:	mvn	r3, r2, lsr #2
   68b44:	and	r1, r1, #1
   68b48:	add	ip, r3, r1
   68b4c:	mov	r3, #0
   68b50:	mov	r1, r8
   68b54:	add	r9, r1, #16
   68b58:	vld1.32	{d22-d23}, [r1], sl
   68b5c:	adds	ip, ip, #2
   68b60:	add	r3, r3, #8
   68b64:	vld1.32	{d20-d21}, [r9]
   68b68:	vrev64.32	q11, q11
   68b6c:	vrev64.32	q10, q10
   68b70:	vext.8	q11, q11, q11, #8
   68b74:	vext.8	q10, q10, q10, #8
   68b78:	vmul.i32	q9, q10, q9
   68b7c:	vmul.i32	q9, q11, q9
   68b80:	bne	68b54 <Mat_CalcSubscripts+0x100>
   68b84:	b	68b90 <Mat_CalcSubscripts+0x13c>
   68b88:	vmov.i32	q9, #1	; 0x00000001
   68b8c:	mov	r3, #0
   68b90:	bic	r1, r7, #3
   68b94:	cmp	r0, #0
   68b98:	beq	68bb8 <Mat_CalcSubscripts+0x164>
   68b9c:	sub	r0, lr, r3
   68ba0:	ldr	r3, [sp]
   68ba4:	add	r0, r3, r0, lsl #2
   68ba8:	vld1.32	{d20-d21}, [r0]
   68bac:	vrev64.32	q10, q10
   68bb0:	vext.8	q10, q10, q10, #8
   68bb4:	vmul.i32	q9, q10, q9
   68bb8:	vext.8	q10, q9, q8, #8
   68bbc:	ldr	r9, [sp, #4]
   68bc0:	cmp	r7, r1
   68bc4:	vmul.i32	q0, q9, q10
   68bc8:	vmul.i32	q9, q0, d0[1]
   68bcc:	vmov.32	r3, d18[0]
   68bd0:	beq	68ab4 <Mat_CalcSubscripts+0x60>
   68bd4:	sub	lr, lr, r1
   68bd8:	rsb	r1, lr, #0
   68bdc:	ldr	r0, [r4, -r1, lsl #2]
   68be0:	add	r1, r1, #1
   68be4:	cmp	r1, #1
   68be8:	mul	r3, r0, r3
   68bec:	bne	68bdc <Mat_CalcSubscripts+0x188>
   68bf0:	b	68ab4 <Mat_CalcSubscripts+0x60>
   68bf4:	ldr	r0, [sp, #8]
   68bf8:	sub	sp, fp, #28
   68bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00068c00 <Mat_CalcSubscripts2>:
   68c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   68c04:	add	fp, sp, #28
   68c08:	sub	sp, sp, #12
   68c0c:	mov	r9, r0
   68c10:	lsl	r0, r0, #2
   68c14:	mov	r6, r2
   68c18:	mov	r4, r1
   68c1c:	bl	18d0 <malloc@plt>
   68c20:	cmp	r9, #0
   68c24:	str	r0, [sp, #8]
   68c28:	beq	68da0 <Mat_CalcSubscripts2+0x1a0>
   68c2c:	vmov	s0, r6
   68c30:	add	r1, r4, r9, lsl #2
   68c34:	sub	r2, r9, #5
   68c38:	sub	r0, r4, #12
   68c3c:	mov	r6, #0
   68c40:	mvn	sl, #31
   68c44:	mov	r5, r9
   68c48:	sub	r8, r1, #36	; 0x24
   68c4c:	vcvt.f64.u32	d16, s0
   68c50:	str	r0, [sp]
   68c54:	str	r9, [sp, #4]
   68c58:	b	68ca4 <Mat_CalcSubscripts2+0xa4>
   68c5c:	mov	r3, #1
   68c60:	vmov	s0, r3
   68c64:	sub	r2, r2, #1
   68c68:	sub	r8, r8, #4
   68c6c:	add	r6, r6, #1
   68c70:	cmp	r5, #0
   68c74:	vcvt.f64.u32	d17, s0
   68c78:	vdiv.f64	d17, d16, d17
   68c7c:	vcvtm.u32.f64	s0, d17
   68c80:	vmov	r0, s0
   68c84:	mul	r1, r3, r0
   68c88:	add	r0, r0, #1
   68c8c:	vmov	s0, r1
   68c90:	vcvt.f64.u32	d17, s0
   68c94:	ldr	r1, [sp, #8]
   68c98:	str	r0, [r1, r5, lsl #2]
   68c9c:	vsub.f64	d16, d16, d17
   68ca0:	beq	68da0 <Mat_CalcSubscripts2+0x1a0>
   68ca4:	mov	r3, r5
   68ca8:	mov	ip, #1
   68cac:	subs	r5, r5, #1
   68cb0:	beq	68c5c <Mat_CalcSubscripts2+0x5c>
   68cb4:	mvn	r7, r6
   68cb8:	sub	lr, r3, #2
   68cbc:	mov	r3, #1
   68cc0:	add	r7, r7, r9
   68cc4:	cmp	r7, #4
   68cc8:	bcc	68d84 <Mat_CalcSubscripts2+0x184>
   68ccc:	sub	r3, r7, #4
   68cd0:	add	r1, ip, r3, lsr #2
   68cd4:	lsr	r3, r3, #2
   68cd8:	cmp	r3, #0
   68cdc:	and	r0, r1, #1
   68ce0:	beq	68d34 <Mat_CalcSubscripts2+0x134>
   68ce4:	add	r1, ip, r2, lsr #2
   68ce8:	vmov.i32	q9, #1	; 0x00000001
   68cec:	mvn	r3, r2, lsr #2
   68cf0:	and	r1, r1, #1
   68cf4:	add	ip, r3, r1
   68cf8:	mov	r3, #0
   68cfc:	mov	r1, r8
   68d00:	add	r9, r1, #16
   68d04:	vld1.32	{d22-d23}, [r1], sl
   68d08:	adds	ip, ip, #2
   68d0c:	add	r3, r3, #8
   68d10:	vld1.32	{d20-d21}, [r9]
   68d14:	vrev64.32	q11, q11
   68d18:	vrev64.32	q10, q10
   68d1c:	vext.8	q11, q11, q11, #8
   68d20:	vext.8	q10, q10, q10, #8
   68d24:	vmul.i32	q9, q10, q9
   68d28:	vmul.i32	q9, q11, q9
   68d2c:	bne	68d00 <Mat_CalcSubscripts2+0x100>
   68d30:	b	68d3c <Mat_CalcSubscripts2+0x13c>
   68d34:	vmov.i32	q9, #1	; 0x00000001
   68d38:	mov	r3, #0
   68d3c:	bic	r1, r7, #3
   68d40:	cmp	r0, #0
   68d44:	beq	68d64 <Mat_CalcSubscripts2+0x164>
   68d48:	sub	r0, lr, r3
   68d4c:	ldr	r3, [sp]
   68d50:	add	r0, r3, r0, lsl #2
   68d54:	vld1.32	{d20-d21}, [r0]
   68d58:	vrev64.32	q10, q10
   68d5c:	vext.8	q10, q10, q10, #8
   68d60:	vmul.i32	q9, q10, q9
   68d64:	vext.8	q10, q9, q8, #8
   68d68:	ldr	r9, [sp, #4]
   68d6c:	cmp	r7, r1
   68d70:	vmul.i32	q0, q9, q10
   68d74:	vmul.i32	q9, q0, d0[1]
   68d78:	vmov.32	r3, d18[0]
   68d7c:	beq	68c60 <Mat_CalcSubscripts2+0x60>
   68d80:	sub	lr, lr, r1
   68d84:	rsb	r1, lr, #0
   68d88:	ldr	r0, [r4, -r1, lsl #2]
   68d8c:	add	r1, r1, #1
   68d90:	cmp	r1, #1
   68d94:	mul	r3, r0, r3
   68d98:	bne	68d88 <Mat_CalcSubscripts2+0x188>
   68d9c:	b	68c60 <Mat_CalcSubscripts2+0x60>
   68da0:	ldr	r0, [sp, #8]
   68da4:	sub	sp, fp, #28
   68da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00068dac <Mat_VarGetSize>:
   68dac:	push	{r4, r5, r6, r7, fp, lr}
   68db0:	add	fp, sp, #16
   68db4:	ldr	r1, [r0, #16]
   68db8:	mov	r4, r0
   68dbc:	cmp	r1, #1
   68dc0:	beq	68e70 <Mat_VarGetSize+0xc4>
   68dc4:	cmp	r1, #5
   68dc8:	beq	68ed4 <Mat_VarGetSize+0x128>
   68dcc:	cmp	r1, #2
   68dd0:	bne	68f38 <Mat_VarGetSize+0x18c>
   68dd4:	ldr	r6, [r4, #40]	; 0x28
   68dd8:	mov	r5, #0
   68ddc:	cmp	r6, #0
   68de0:	beq	68f94 <Mat_VarGetSize+0x1e8>
   68de4:	ldr	r1, [r4, #52]	; 0x34
   68de8:	ldr	r0, [r4, #4]
   68dec:	ldr	r7, [r1, #4]
   68df0:	cmp	r0, #1
   68df4:	blt	68e18 <Mat_VarGetSize+0x6c>
   68df8:	ldr	r1, [r4, #32]
   68dfc:	ldr	r2, [r1]
   68e00:	umull	r7, r2, r7, r2
   68e04:	cmp	r2, #0
   68e08:	bne	68f94 <Mat_VarGetSize+0x1e8>
   68e0c:	add	r1, r1, #4
   68e10:	subs	r0, r0, #1
   68e14:	bne	68dfc <Mat_VarGetSize+0x50>
   68e18:	mov	r0, #60	; 0x3c
   68e1c:	umull	r5, r0, r7, r0
   68e20:	cmp	r0, #0
   68e24:	movwne	r0, #1
   68e28:	cmp	r0, #0
   68e2c:	movwne	r5, #0
   68e30:	cmp	r7, #0
   68e34:	bne	68e4c <Mat_VarGetSize+0xa0>
   68e38:	b	68f94 <Mat_VarGetSize+0x1e8>
   68e3c:	sub	r5, r5, #56	; 0x38
   68e40:	add	r6, r6, #4
   68e44:	subs	r7, r7, #1
   68e48:	beq	68f94 <Mat_VarGetSize+0x1e8>
   68e4c:	ldr	r0, [r6]
   68e50:	cmp	r0, #0
   68e54:	beq	68e40 <Mat_VarGetSize+0x94>
   68e58:	ldr	r1, [r0, #16]
   68e5c:	cmp	r1, #0
   68e60:	beq	68e3c <Mat_VarGetSize+0x90>
   68e64:	bl	1a20 <Mat_VarGetSize@plt>
   68e68:	add	r5, r0, r5
   68e6c:	b	68e40 <Mat_VarGetSize+0x94>
   68e70:	ldr	r6, [r4, #40]	; 0x28
   68e74:	cmp	r6, #0
   68e78:	beq	68f88 <Mat_VarGetSize+0x1dc>
   68e7c:	ldr	r0, [r4]
   68e80:	ldr	r1, [r4, #12]
   68e84:	udiv	r4, r0, r1
   68e88:	cmp	r1, r0
   68e8c:	rsb	r2, r4, r4, lsl #4
   68e90:	lsl	r5, r2, #2
   68e94:	bhi	68fcc <Mat_VarGetSize+0x220>
   68e98:	mov	r7, #0
   68e9c:	b	68eb0 <Mat_VarGetSize+0x104>
   68ea0:	sub	r5, r5, #56	; 0x38
   68ea4:	add	r7, r7, #1
   68ea8:	cmp	r7, r4
   68eac:	bcs	68fcc <Mat_VarGetSize+0x220>
   68eb0:	ldr	r0, [r6, r7, lsl #2]
   68eb4:	cmp	r0, #0
   68eb8:	beq	68ea4 <Mat_VarGetSize+0xf8>
   68ebc:	ldr	r1, [r0, #16]
   68ec0:	cmp	r1, #0
   68ec4:	beq	68ea0 <Mat_VarGetSize+0xf4>
   68ec8:	bl	1a20 <Mat_VarGetSize@plt>
   68ecc:	add	r5, r0, r5
   68ed0:	b	68ea4 <Mat_VarGetSize+0xf8>
   68ed4:	ldr	r6, [r4, #40]	; 0x28
   68ed8:	cmp	r6, #0
   68edc:	beq	68f88 <Mat_VarGetSize+0x1dc>
   68ee0:	ldr	r0, [r4, #8]
   68ee4:	ldr	r5, [r6, #20]
   68ee8:	bl	1924 <Mat_SizeOf@plt>
   68eec:	mul	r1, r0, r5
   68ef0:	ldr	r2, [r4, #20]
   68ef4:	ldr	r0, [r6, #8]
   68ef8:	ldr	r3, [r6, #16]
   68efc:	cmp	r2, #0
   68f00:	add	r7, r3, r0
   68f04:	movwne	r2, #1
   68f08:	lsl	r7, r7, #2
   68f0c:	cmp	r3, #0
   68f10:	add	r5, r7, r1, lsl r2
   68f14:	cmpne	r0, #0
   68f18:	bne	68fc0 <Mat_VarGetSize+0x214>
   68f1c:	ldr	r0, [r4, #28]
   68f20:	mov	r1, #1
   68f24:	cmp	r0, #0
   68f28:	movweq	r1, #8
   68f2c:	add	r5, r1, r5
   68f30:	mov	r0, r5
   68f34:	pop	{r4, r5, r6, r7, fp, pc}
   68f38:	ldr	r0, [r4, #4]
   68f3c:	cmp	r0, #1
   68f40:	blt	68f88 <Mat_VarGetSize+0x1dc>
   68f44:	sub	r3, r1, #4
   68f48:	mov	r2, #0
   68f4c:	mov	r1, #0
   68f50:	cmp	r3, #11
   68f54:	bhi	68f64 <Mat_VarGetSize+0x1b8>
   68f58:	ldr	r1, [pc, #116]	; 68fd4 <Mat_VarGetSize+0x228>
   68f5c:	add	r1, pc, r1
   68f60:	ldr	r1, [r1, r3, lsl #2]
   68f64:	ldr	r3, [r4, #32]
   68f68:	ldr	r7, [r3, r2, lsl #2]
   68f6c:	umull	r1, r7, r1, r7
   68f70:	cmp	r7, #0
   68f74:	bne	68fa8 <Mat_VarGetSize+0x1fc>
   68f78:	add	r2, r2, #1
   68f7c:	cmp	r2, r0
   68f80:	blt	68f68 <Mat_VarGetSize+0x1bc>
   68f84:	b	68fac <Mat_VarGetSize+0x200>
   68f88:	mov	r5, #0
   68f8c:	mov	r0, r5
   68f90:	pop	{r4, r5, r6, r7, fp, pc}
   68f94:	ldr	r0, [r4, #52]	; 0x34
   68f98:	ldr	r0, [r0, #4]
   68f9c:	add	r5, r5, r0, lsl #6
   68fa0:	mov	r0, r5
   68fa4:	pop	{r4, r5, r6, r7, fp, pc}
   68fa8:	mov	r1, #0
   68fac:	ldr	r0, [r4, #20]
   68fb0:	cmp	r0, #0
   68fb4:	movwne	r0, #1
   68fb8:	lsl	r0, r1, r0
   68fbc:	pop	{r4, r5, r6, r7, fp, pc}
   68fc0:	ldr	r0, [r6, #20]
   68fc4:	cmp	r0, #0
   68fc8:	beq	68f1c <Mat_VarGetSize+0x170>
   68fcc:	mov	r0, r5
   68fd0:	pop	{r4, r5, r6, r7, fp, pc}
   68fd4:	.word	0x00003b30

00068fd8 <Mat_VarPrint>:
   68fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   68fdc:	add	fp, sp, #28
   68fe0:	sub	sp, sp, #4
   68fe4:	cmp	r0, #0
   68fe8:	beq	692bc <Mat_VarPrint+0x2e4>
   68fec:	mov	r9, r1
   68ff0:	ldr	r1, [r0, #36]	; 0x24
   68ff4:	mov	sl, r0
   68ff8:	cmp	r1, #0
   68ffc:	beq	6900c <Mat_VarPrint+0x34>
   69000:	ldr	r0, [pc, #2048]	; 69808 <Mat_VarPrint+0x830>
   69004:	add	r0, pc, r0
   69008:	bl	17d4 <printf@plt>
   6900c:	ldr	r1, [sl, #4]
   69010:	ldr	r0, [pc, #2036]	; 6980c <Mat_VarPrint+0x834>
   69014:	add	r0, pc, r0
   69018:	bl	17d4 <printf@plt>
   6901c:	ldr	r0, [sl, #4]
   69020:	cmp	r0, #1
   69024:	blt	692bc <Mat_VarPrint+0x2e4>
   69028:	ldr	r1, [sl, #32]
   6902c:	cmp	r1, #0
   69030:	beq	6905c <Mat_VarPrint+0x84>
   69034:	mov	r7, #1
   69038:	mov	r2, #0
   6903c:	ldr	r3, [r1, r2, lsl #2]
   69040:	umull	r7, r3, r7, r3
   69044:	cmp	r3, #0
   69048:	bne	69064 <Mat_VarPrint+0x8c>
   6904c:	add	r2, r2, #1
   69050:	cmp	r0, r2
   69054:	bne	6903c <Mat_VarPrint+0x64>
   69058:	b	69068 <Mat_VarPrint+0x90>
   6905c:	mov	r7, #0
   69060:	b	690b8 <Mat_VarPrint+0xe0>
   69064:	mov	r7, #0
   69068:	ldr	r1, [r1]
   6906c:	ldr	r0, [pc, #1948]	; 69810 <Mat_VarPrint+0x838>
   69070:	add	r0, pc, r0
   69074:	bl	17d4 <printf@plt>
   69078:	ldr	r0, [sl, #4]
   6907c:	cmp	r0, #2
   69080:	blt	690b0 <Mat_VarPrint+0xd8>
   69084:	ldr	r6, [pc, #1928]	; 69814 <Mat_VarPrint+0x83c>
   69088:	mov	r4, #1
   6908c:	add	r6, pc, r6
   69090:	ldr	r0, [sl, #32]
   69094:	ldr	r1, [r0, r4, lsl #2]
   69098:	mov	r0, r6
   6909c:	bl	17d4 <printf@plt>
   690a0:	ldr	r0, [sl, #4]
   690a4:	add	r4, r4, #1
   690a8:	cmp	r4, r0
   690ac:	blt	69090 <Mat_VarPrint+0xb8>
   690b0:	mov	r0, #10
   690b4:	bl	199c <putchar@plt>
   690b8:	ldr	r0, [sl, #16]
   690bc:	ldr	r1, [pc, #1876]	; 69818 <Mat_VarPrint+0x840>
   690c0:	add	r1, pc, r1
   690c4:	ldr	r1, [r1, r0, lsl #2]
   690c8:	ldr	r0, [pc, #1868]	; 6981c <Mat_VarPrint+0x844>
   690cc:	add	r0, pc, r0
   690d0:	bl	17d4 <printf@plt>
   690d4:	ldr	r0, [sl, #20]
   690d8:	cmp	r0, #0
   690dc:	beq	690ec <Mat_VarPrint+0x114>
   690e0:	ldr	r0, [pc, #1848]	; 69820 <Mat_VarPrint+0x848>
   690e4:	add	r0, pc, r0
   690e8:	b	69100 <Mat_VarPrint+0x128>
   690ec:	ldr	r0, [sl, #28]
   690f0:	cmp	r0, #0
   690f4:	beq	69104 <Mat_VarPrint+0x12c>
   690f8:	ldr	r0, [pc, #1828]	; 69824 <Mat_VarPrint+0x84c>
   690fc:	add	r0, pc, r0
   69100:	bl	17d4 <printf@plt>
   69104:	mov	r0, #10
   69108:	bl	199c <putchar@plt>
   6910c:	ldr	r0, [sl, #8]
   69110:	cmp	r0, #0
   69114:	beq	69130 <Mat_VarPrint+0x158>
   69118:	ldr	r1, [pc, #1800]	; 69828 <Mat_VarPrint+0x850>
   6911c:	add	r1, pc, r1
   69120:	ldr	r1, [r1, r0, lsl #2]
   69124:	ldr	r0, [pc, #1792]	; 6982c <Mat_VarPrint+0x854>
   69128:	add	r0, pc, r0
   6912c:	bl	17d4 <printf@plt>
   69130:	ldr	r0, [sl, #16]
   69134:	cmp	r0, #2
   69138:	bne	691c0 <Mat_VarPrint+0x1e8>
   6913c:	ldr	r0, [sl, #52]	; 0x34
   69140:	ldr	r6, [r0, #4]
   69144:	umull	r7, r0, r7, r6
   69148:	cmp	r0, #0
   6914c:	bne	69230 <Mat_VarPrint+0x258>
   69150:	cmp	r7, #0
   69154:	beq	69230 <Mat_VarPrint+0x258>
   69158:	ldr	r5, [sl, #40]	; 0x28
   6915c:	ldr	r0, [pc, #1740]	; 69830 <Mat_VarPrint+0x858>
   69160:	mov	r1, r7
   69164:	add	r0, pc, r0
   69168:	bl	17d4 <printf@plt>
   6916c:	ldr	r8, [pc, #1728]	; 69834 <Mat_VarPrint+0x85c>
   69170:	mov	r4, #0
   69174:	add	r8, pc, r8
   69178:	b	69190 <Mat_VarPrint+0x1b8>
   6917c:	mov	r1, r9
   69180:	bl	196c <Mat_VarPrint@plt>
   69184:	add	r4, r4, #1
   69188:	cmp	r7, r4
   6918c:	beq	69278 <Mat_VarPrint+0x2a0>
   69190:	ldr	r0, [r5, r4, lsl #2]
   69194:	cmp	r0, #0
   69198:	bne	6917c <Mat_VarPrint+0x1a4>
   6919c:	udiv	r0, r4, r6
   691a0:	ldr	r1, [sl, #52]	; 0x34
   691a4:	mov	r2, #0
   691a8:	ldr	r1, [r1, #8]
   691ac:	mls	r0, r0, r6, r4
   691b0:	ldr	r1, [r1, r0, lsl #2]
   691b4:	mov	r0, r8
   691b8:	bl	17d4 <printf@plt>
   691bc:	b	69184 <Mat_VarPrint+0x1ac>
   691c0:	ldr	r5, [sl, #40]	; 0x28
   691c4:	cmp	r5, #0
   691c8:	beq	6921c <Mat_VarPrint+0x244>
   691cc:	ldr	r4, [sl, #12]
   691d0:	cmp	r4, #0
   691d4:	ble	6921c <Mat_VarPrint+0x244>
   691d8:	cmp	r0, #1
   691dc:	bne	6928c <Mat_VarPrint+0x2b4>
   691e0:	ldr	r6, [sl]
   691e4:	ldr	r0, [pc, #1628]	; 69848 <Mat_VarPrint+0x870>
   691e8:	add	r0, pc, r0
   691ec:	bl	18c4 <puts@plt>
   691f0:	cmp	r4, r6
   691f4:	bhi	69278 <Mat_VarPrint+0x2a0>
   691f8:	udiv	r4, r6, r4
   691fc:	mov	r6, #0
   69200:	ldr	r0, [r5, r6, lsl #2]
   69204:	mov	r1, r9
   69208:	bl	196c <Mat_VarPrint@plt>
   6920c:	add	r6, r6, #1
   69210:	cmp	r6, r4
   69214:	bcc	69200 <Mat_VarPrint+0x228>
   69218:	b	69278 <Mat_VarPrint+0x2a0>
   6921c:	cmp	r9, #0
   69220:	beq	692bc <Mat_VarPrint+0x2e4>
   69224:	ldr	r0, [pc, #1560]	; 69844 <Mat_VarPrint+0x86c>
   69228:	add	r0, pc, r0
   6922c:	b	69280 <Mat_VarPrint+0x2a8>
   69230:	ldr	r0, [pc, #1540]	; 6983c <Mat_VarPrint+0x864>
   69234:	mov	r1, r6
   69238:	add	r0, pc, r0
   6923c:	bl	17d4 <printf@plt>
   69240:	cmp	r6, #0
   69244:	beq	69278 <Mat_VarPrint+0x2a0>
   69248:	ldr	r5, [pc, #1520]	; 69840 <Mat_VarPrint+0x868>
   6924c:	mov	r4, #0
   69250:	add	r5, pc, r5
   69254:	ldr	r0, [sl, #52]	; 0x34
   69258:	mov	r2, #0
   6925c:	ldr	r0, [r0, #8]
   69260:	ldr	r1, [r0, r4, lsl #2]
   69264:	mov	r0, r5
   69268:	bl	17d4 <printf@plt>
   6926c:	add	r4, r4, #1
   69270:	cmp	r6, r4
   69274:	bne	69254 <Mat_VarPrint+0x27c>
   69278:	ldr	r0, [pc, #1464]	; 69838 <Mat_VarPrint+0x860>
   6927c:	add	r0, pc, r0
   69280:	sub	sp, fp, #28
   69284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   69288:	b	18c4 <puts@plt>
   6928c:	cmp	r9, #0
   69290:	beq	692bc <Mat_VarPrint+0x2e4>
   69294:	ldr	r0, [pc, #1456]	; 6984c <Mat_VarPrint+0x874>
   69298:	add	r0, pc, r0
   6929c:	bl	18c4 <puts@plt>
   692a0:	ldr	r0, [sl, #4]
   692a4:	cmp	r0, #3
   692a8:	blt	692c4 <Mat_VarPrint+0x2ec>
   692ac:	ldr	r0, [pc, #1436]	; 69850 <Mat_VarPrint+0x878>
   692b0:	add	r0, pc, r0
   692b4:	bl	18c4 <puts@plt>
   692b8:	b	69278 <Mat_VarPrint+0x2a0>
   692bc:	sub	sp, fp, #28
   692c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   692c4:	cmp	r0, #2
   692c8:	beq	692fc <Mat_VarPrint+0x324>
   692cc:	cmp	r0, #1
   692d0:	bne	69278 <Mat_VarPrint+0x2a0>
   692d4:	ldr	r0, [sl, #32]
   692d8:	cmp	r0, #0
   692dc:	beq	69278 <Mat_VarPrint+0x2a0>
   692e0:	ldr	r0, [r0]
   692e4:	cmp	r0, #16
   692e8:	bcc	69278 <Mat_VarPrint+0x2a0>
   692ec:	ldr	r0, [pc, #1376]	; 69854 <Mat_VarPrint+0x87c>
   692f0:	add	r0, pc, r0
   692f4:	bl	18c4 <puts@plt>
   692f8:	b	69278 <Mat_VarPrint+0x2a0>
   692fc:	ldr	r0, [sl, #32]
   69300:	cmp	r0, #0
   69304:	beq	69278 <Mat_VarPrint+0x2a0>
   69308:	ldr	r1, [sl, #16]
   6930c:	sub	r2, r1, #6
   69310:	cmp	r2, #10
   69314:	bcs	694d4 <Mat_VarPrint+0x4fc>
   69318:	ldr	r0, [sl, #8]
   6931c:	bl	1924 <Mat_SizeOf@plt>
   69320:	mov	r5, r0
   69324:	ldr	r0, [sl, #20]
   69328:	cmp	r0, #0
   6932c:	beq	693fc <Mat_VarPrint+0x424>
   69330:	ldr	r1, [sl, #32]
   69334:	ldr	r0, [r1]
   69338:	cmp	r0, #0
   6933c:	beq	69278 <Mat_VarPrint+0x2a0>
   69340:	ldr	r2, [sl, #40]	; 0x28
   69344:	mov	r7, #0
   69348:	ldm	r2, {r6, r8}
   6934c:	b	69370 <Mat_VarPrint+0x398>
   69350:	mov	r0, #10
   69354:	bl	199c <putchar@plt>
   69358:	ldr	r1, [sl, #32]
   6935c:	add	r7, r7, #1
   69360:	cmp	r7, #14
   69364:	ldr	r0, [r1]
   69368:	cmpls	r7, r0
   6936c:	bcs	693f0 <Mat_VarPrint+0x418>
   69370:	ldr	r1, [r1, #4]
   69374:	cmp	r1, #0
   69378:	beq	69350 <Mat_VarPrint+0x378>
   6937c:	mov	r9, #1
   69380:	b	6938c <Mat_VarPrint+0x3b4>
   69384:	ldr	r0, [r0]
   69388:	add	r9, r9, #1
   6938c:	sub	r1, r9, #1
   69390:	mla	r4, r0, r1, r7
   69394:	ldr	r0, [sl, #8]
   69398:	mla	r1, r4, r5, r6
   6939c:	bl	69884 <Mat_PrintNumber>
   693a0:	ldr	r0, [pc, #1200]	; 69858 <Mat_VarPrint+0x880>
   693a4:	add	r0, pc, r0
   693a8:	bl	17d4 <printf@plt>
   693ac:	ldr	r0, [sl, #8]
   693b0:	mla	r1, r4, r5, r8
   693b4:	bl	69884 <Mat_PrintNumber>
   693b8:	ldr	r0, [pc, #1180]	; 6985c <Mat_VarPrint+0x884>
   693bc:	add	r0, pc, r0
   693c0:	bl	17d4 <printf@plt>
   693c4:	ldr	r0, [sl, #32]
   693c8:	cmp	r9, #14
   693cc:	ldr	r1, [r0, #4]
   693d0:	cmpls	r9, r1
   693d4:	bcc	69384 <Mat_VarPrint+0x3ac>
   693d8:	cmp	r9, r1
   693dc:	bcs	69350 <Mat_VarPrint+0x378>
   693e0:	ldr	r0, [pc, #1144]	; 69860 <Mat_VarPrint+0x888>
   693e4:	add	r0, pc, r0
   693e8:	bl	17d4 <printf@plt>
   693ec:	b	69350 <Mat_VarPrint+0x378>
   693f0:	cmp	r7, r0
   693f4:	bcs	69278 <Mat_VarPrint+0x2a0>
   693f8:	b	695d8 <Mat_VarPrint+0x600>
   693fc:	ldr	r0, [sl, #32]
   69400:	ldr	r1, [r0]
   69404:	cmp	r1, #0
   69408:	beq	69278 <Mat_VarPrint+0x2a0>
   6940c:	ldr	r9, [sl, #40]	; 0x28
   69410:	ldr	r8, [pc, #1104]	; 69868 <Mat_VarPrint+0x890>
   69414:	mov	r7, #0
   69418:	add	r8, pc, r8
   6941c:	b	69440 <Mat_VarPrint+0x468>
   69420:	mov	r0, #10
   69424:	bl	199c <putchar@plt>
   69428:	ldr	r0, [sl, #32]
   6942c:	add	r7, r7, #1
   69430:	cmp	r7, #14
   69434:	ldr	r1, [r0]
   69438:	cmpls	r7, r1
   6943c:	bcs	695d0 <Mat_VarPrint+0x5f8>
   69440:	ldr	r0, [r0, #4]
   69444:	cmp	r0, #0
   69448:	beq	69420 <Mat_VarPrint+0x448>
   6944c:	ldr	r0, [sl, #8]
   69450:	mla	r1, r7, r5, r9
   69454:	bl	69884 <Mat_PrintNumber>
   69458:	mov	r0, #32
   6945c:	bl	199c <putchar@plt>
   69460:	ldr	r0, [sl, #32]
   69464:	mov	r1, #0
   69468:	ldr	r2, [r0, #4]
   6946c:	cmp	r2, #1
   69470:	movwhi	r1, #1
   69474:	cmp	r2, #2
   69478:	bcc	694c0 <Mat_VarPrint+0x4e8>
   6947c:	mov	r6, #1
   69480:	ldr	r0, [r0]
   69484:	mla	r0, r0, r6, r7
   69488:	mla	r1, r0, r5, r9
   6948c:	ldr	r0, [sl, #8]
   69490:	bl	69884 <Mat_PrintNumber>
   69494:	mov	r0, #32
   69498:	bl	199c <putchar@plt>
   6949c:	ldr	r0, [sl, #32]
   694a0:	add	r6, r6, #1
   694a4:	mov	r1, #0
   694a8:	ldr	r2, [r0, #4]
   694ac:	cmp	r6, r2
   694b0:	movwcc	r1, #1
   694b4:	cmp	r6, #14
   694b8:	cmpls	r6, r2
   694bc:	bcc	69480 <Mat_VarPrint+0x4a8>
   694c0:	cmp	r1, #0
   694c4:	beq	69420 <Mat_VarPrint+0x448>
   694c8:	mov	r0, r8
   694cc:	bl	17d4 <printf@plt>
   694d0:	b	69420 <Mat_VarPrint+0x448>
   694d4:	cmp	r1, #4
   694d8:	beq	695e8 <Mat_VarPrint+0x610>
   694dc:	cmp	r1, #5
   694e0:	bne	69278 <Mat_VarPrint+0x2a0>
   694e4:	ldr	r0, [sl, #8]
   694e8:	bl	1924 <Mat_SizeOf@plt>
   694ec:	str	r0, [sp]
   694f0:	ldr	r0, [sl, #20]
   694f4:	ldr	r5, [sl, #40]	; 0x28
   694f8:	cmp	r0, #0
   694fc:	beq	696d0 <Mat_VarPrint+0x6f8>
   69500:	ldr	r1, [r5, #16]
   69504:	cmp	r1, #1
   69508:	beq	69278 <Mat_VarPrint+0x2a0>
   6950c:	ldr	r0, [r5, #24]
   69510:	mov	r6, #0
   69514:	ldm	r0, {r8, r9}
   69518:	ldr	r0, [r5, #12]
   6951c:	b	69530 <Mat_VarPrint+0x558>
   69520:	ldr	r1, [r5, #16]
   69524:	sub	r2, r1, #1
   69528:	cmp	r6, r2
   6952c:	bcs	69278 <Mat_VarPrint+0x2a0>
   69530:	ldr	r7, [r0, r6, lsl #2]
   69534:	add	r6, r6, #1
   69538:	ldr	r2, [r0, r6, lsl #2]
   6953c:	cmp	r7, r2
   69540:	bcs	69524 <Mat_VarPrint+0x54c>
   69544:	ldr	r1, [r5, #20]
   69548:	cmp	r7, r1
   6954c:	bcs	69520 <Mat_VarPrint+0x548>
   69550:	ldr	r0, [sp]
   69554:	mul	r4, r0, r7
   69558:	ldr	r0, [r5, #4]
   6955c:	mov	r2, r6
   69560:	ldr	r0, [r0, r7, lsl #2]
   69564:	add	r1, r0, #1
   69568:	ldr	r0, [pc, #772]	; 69874 <Mat_VarPrint+0x89c>
   6956c:	add	r0, pc, r0
   69570:	bl	17d4 <printf@plt>
   69574:	ldr	r0, [sl, #8]
   69578:	add	r1, r8, r4
   6957c:	bl	69884 <Mat_PrintNumber>
   69580:	ldr	r0, [pc, #752]	; 69878 <Mat_VarPrint+0x8a0>
   69584:	add	r0, pc, r0
   69588:	bl	17d4 <printf@plt>
   6958c:	ldr	r0, [sl, #8]
   69590:	add	r1, r9, r4
   69594:	bl	69884 <Mat_PrintNumber>
   69598:	ldr	r0, [pc, #732]	; 6987c <Mat_VarPrint+0x8a4>
   6959c:	add	r0, pc, r0
   695a0:	bl	18c4 <puts@plt>
   695a4:	ldr	r0, [r5, #12]
   695a8:	add	r7, r7, #1
   695ac:	ldr	r1, [r0, r6, lsl #2]
   695b0:	cmp	r7, r1
   695b4:	bcs	69520 <Mat_VarPrint+0x548>
   695b8:	ldr	r1, [sp]
   695bc:	add	r4, r4, r1
   695c0:	ldr	r1, [r5, #20]
   695c4:	cmp	r7, r1
   695c8:	bcc	69558 <Mat_VarPrint+0x580>
   695cc:	b	69520 <Mat_VarPrint+0x548>
   695d0:	cmp	r7, r1
   695d4:	bcs	69278 <Mat_VarPrint+0x2a0>
   695d8:	ldr	r0, [pc, #644]	; 69864 <Mat_VarPrint+0x88c>
   695dc:	add	r0, pc, r0
   695e0:	bl	18c4 <puts@plt>
   695e4:	b	69278 <Mat_VarPrint+0x2a0>
   695e8:	ldr	r1, [sl, #8]
   695ec:	cmp	r1, #17
   695f0:	cmpne	r1, #4
   695f4:	bne	69784 <Mat_VarPrint+0x7ac>
   695f8:	ldr	r1, [r0]
   695fc:	cmp	r1, #0
   69600:	beq	69278 <Mat_VarPrint+0x2a0>
   69604:	ldr	r7, [sl, #40]	; 0x28
   69608:	ldr	r4, [pc, #604]	; 6986c <Mat_VarPrint+0x894>
   6960c:	mov	r5, #0
   69610:	mov	r6, #2
   69614:	mov	r9, #0
   69618:	add	r4, pc, r4
   6961c:	b	6963c <Mat_VarPrint+0x664>
   69620:	mov	r0, #10
   69624:	bl	199c <putchar@plt>
   69628:	ldr	r0, [sl, #32]
   6962c:	add	r9, r9, #1
   69630:	ldr	r1, [r0]
   69634:	cmp	r9, r1
   69638:	bcs	69278 <Mat_VarPrint+0x2a0>
   6963c:	ldr	r0, [r0, #4]
   69640:	cmp	r0, #0
   69644:	beq	69620 <Mat_VarPrint+0x648>
   69648:	mov	r8, #1
   6964c:	sub	r0, r8, #1
   69650:	mla	r0, r1, r0, r9
   69654:	add	r0, r7, r0, lsl #1
   69658:	ldrh	r3, [r0]
   6965c:	cmp	r3, #127	; 0x7f
   69660:	bhi	69670 <Mat_VarPrint+0x698>
   69664:	mov	r0, r3
   69668:	bl	199c <putchar@plt>
   6966c:	b	696b4 <Mat_VarPrint+0x6dc>
   69670:	cmp	r5, r3, lsr #11
   69674:	bne	69698 <Mat_VarPrint+0x6c0>
   69678:	mov	r0, #192	; 0xc0
   6967c:	orr	r1, r0, r3, lsr #6
   69680:	ldr	r0, [pc, #488]	; 69870 <Mat_VarPrint+0x898>
   69684:	bfi	r3, r6, #6, #26
   69688:	mov	r2, r3
   6968c:	add	r0, pc, r0
   69690:	bl	17d4 <printf@plt>
   69694:	b	696b4 <Mat_VarPrint+0x6dc>
   69698:	lsr	r2, r3, #6
   6969c:	mov	r0, #224	; 0xe0
   696a0:	orr	r1, r0, r3, lsr #12
   696a4:	bfi	r3, r6, #6, #26
   696a8:	bfi	r2, r6, #6, #26
   696ac:	mov	r0, r4
   696b0:	bl	17d4 <printf@plt>
   696b4:	ldr	r0, [sl, #32]
   696b8:	ldr	r1, [r0, #4]
   696bc:	cmp	r8, r1
   696c0:	bcs	69620 <Mat_VarPrint+0x648>
   696c4:	ldr	r1, [r0]
   696c8:	add	r8, r8, #1
   696cc:	b	6964c <Mat_VarPrint+0x674>
   696d0:	ldr	r1, [r5, #16]
   696d4:	cmp	r1, #1
   696d8:	beq	69278 <Mat_VarPrint+0x2a0>
   696dc:	ldr	r9, [r5, #24]
   696e0:	ldr	r0, [r5, #12]
   696e4:	ldr	r8, [pc, #404]	; 69880 <Mat_VarPrint+0x8a8>
   696e8:	mov	r4, #0
   696ec:	add	r8, pc, r8
   696f0:	b	69704 <Mat_VarPrint+0x72c>
   696f4:	ldr	r1, [r5, #16]
   696f8:	sub	r2, r1, #1
   696fc:	cmp	r4, r2
   69700:	bcs	69278 <Mat_VarPrint+0x2a0>
   69704:	ldr	r6, [r0, r4, lsl #2]
   69708:	add	r4, r4, #1
   6970c:	ldr	r2, [r0, r4, lsl #2]
   69710:	cmp	r6, r2
   69714:	bcs	696f8 <Mat_VarPrint+0x720>
   69718:	ldr	r1, [r5, #20]
   6971c:	cmp	r6, r1
   69720:	bcs	696f4 <Mat_VarPrint+0x71c>
   69724:	ldr	r0, [sp]
   69728:	mla	r7, r0, r6, r9
   6972c:	ldr	r0, [r5, #4]
   69730:	mov	r2, r4
   69734:	ldr	r0, [r0, r6, lsl #2]
   69738:	add	r1, r0, #1
   6973c:	mov	r0, r8
   69740:	bl	17d4 <printf@plt>
   69744:	ldr	r0, [sl, #8]
   69748:	mov	r1, r7
   6974c:	bl	69884 <Mat_PrintNumber>
   69750:	mov	r0, #10
   69754:	bl	199c <putchar@plt>
   69758:	ldr	r0, [r5, #12]
   6975c:	add	r6, r6, #1
   69760:	ldr	r1, [r0, r4, lsl #2]
   69764:	cmp	r6, r1
   69768:	bcs	696f4 <Mat_VarPrint+0x71c>
   6976c:	ldr	r1, [sp]
   69770:	add	r7, r7, r1
   69774:	ldr	r1, [r5, #20]
   69778:	cmp	r6, r1
   6977c:	bcc	6972c <Mat_VarPrint+0x754>
   69780:	b	696f4 <Mat_VarPrint+0x71c>
   69784:	ldr	r1, [r0]
   69788:	cmp	r1, #0
   6978c:	beq	69278 <Mat_VarPrint+0x2a0>
   69790:	ldr	r5, [sl, #40]	; 0x28
   69794:	mov	r6, #0
   69798:	b	697b8 <Mat_VarPrint+0x7e0>
   6979c:	mov	r0, #10
   697a0:	bl	199c <putchar@plt>
   697a4:	ldr	r0, [sl, #32]
   697a8:	add	r6, r6, #1
   697ac:	ldr	r1, [r0]
   697b0:	cmp	r6, r1
   697b4:	bcs	69278 <Mat_VarPrint+0x2a0>
   697b8:	ldr	r0, [r0, #4]
   697bc:	cmp	r0, #0
   697c0:	beq	6979c <Mat_VarPrint+0x7c4>
   697c4:	ldrb	r0, [r5, r6]
   697c8:	bl	199c <putchar@plt>
   697cc:	ldr	r0, [sl, #32]
   697d0:	ldr	r1, [r0, #4]
   697d4:	cmp	r1, #2
   697d8:	bcc	6979c <Mat_VarPrint+0x7c4>
   697dc:	mov	r4, #1
   697e0:	ldr	r0, [r0]
   697e4:	mla	r0, r0, r4, r6
   697e8:	ldrb	r0, [r5, r0]
   697ec:	bl	199c <putchar@plt>
   697f0:	ldr	r0, [sl, #32]
   697f4:	add	r4, r4, #1
   697f8:	ldr	r1, [r0, #4]
   697fc:	cmp	r4, r1
   69800:	bcc	697e0 <Mat_VarPrint+0x808>
   69804:	b	6979c <Mat_VarPrint+0x7c4>
   69808:	.word	0x00003694
   6980c:	.word	0x00003896
   69810:	.word	0x00003638
   69814:	.word	0x0000362c
   69818:	.word	0x00013d8c
   6981c:	.word	0x000035f3
   69820:	.word	0x000035ea
   69824:	.word	0x000035dd
   69828:	.word	0x00013d78
   6982c:	.word	0x00003754
   69830:	.word	0x00003728
   69834:	.word	0x00003727
   69838:	.word	0x000037d2
   6983c:	.word	0x00003654
   69840:	.word	0x0000364b
   69844:	.word	0x00003824
   69848:	.word	0x00003862
   6984c:	.word	0x000037b2
   69850:	.word	0x00003775
   69854:	.word	0x00003705
   69858:	.word	0x00003516
   6985c:	.word	0x00003502
   69860:	.word	0x000034dd
   69864:	.word	0x00003413
   69868:	.word	0x000034a9
   6986c:	.word	0x000032ad
   69870:	.word	0x0000323b
   69874:	.word	0x00003360
   69878:	.word	0x00003336
   6987c:	.word	0x00003437
   69880:	.word	0x000031e0

00069884 <Mat_PrintNumber>:
   69884:	sub	r0, r0, #1
   69888:	cmp	r0, #12
   6988c:	bxhi	lr
   69890:	add	r2, pc, #4
   69894:	ldr	r0, [r2, r0, lsl #2]
   69898:	add	pc, r2, r0
   6989c:	.word	0x00000034
   698a0:	.word	0x00000044
   698a4:	.word	0x00000054
   698a8:	.word	0x00000064
   698ac:	.word	0x00000074
   698b0:	.word	0x00000084
   698b4:	.word	0x00000094
   698b8:	.word	0x000000d4
   698bc:	.word	0x000000a0
   698c0:	.word	0x000000d4
   698c4:	.word	0x000000d4
   698c8:	.word	0x000000b4
   698cc:	.word	0x000000c4
   698d0:	ldrsb	r1, [r1]
   698d4:	ldr	r0, [pc, #180]	; 69990 <Mat_PrintNumber+0x10c>
   698d8:	add	r0, pc, r0
   698dc:	b	17d4 <printf@plt>
   698e0:	ldrb	r1, [r1]
   698e4:	ldr	r0, [pc, #168]	; 69994 <Mat_PrintNumber+0x110>
   698e8:	add	r0, pc, r0
   698ec:	b	17d4 <printf@plt>
   698f0:	ldrsh	r1, [r1]
   698f4:	ldr	r0, [pc, #140]	; 69988 <Mat_PrintNumber+0x104>
   698f8:	add	r0, pc, r0
   698fc:	b	17d4 <printf@plt>
   69900:	ldrh	r1, [r1]
   69904:	ldr	r0, [pc, #128]	; 6998c <Mat_PrintNumber+0x108>
   69908:	add	r0, pc, r0
   6990c:	b	17d4 <printf@plt>
   69910:	ldr	r1, [r1]
   69914:	ldr	r0, [pc, #100]	; 69980 <Mat_PrintNumber+0xfc>
   69918:	add	r0, pc, r0
   6991c:	b	17d4 <printf@plt>
   69920:	ldr	r1, [r1]
   69924:	ldr	r0, [pc, #88]	; 69984 <Mat_PrintNumber+0x100>
   69928:	add	r0, pc, r0
   6992c:	b	17d4 <printf@plt>
   69930:	vldr	s0, [r1]
   69934:	vcvt.f64.f32	d16, s0
   69938:	b	69940 <Mat_PrintNumber+0xbc>
   6993c:	vldr	d16, [r1]
   69940:	ldr	r0, [pc, #44]	; 69974 <Mat_PrintNumber+0xf0>
   69944:	vmov	r2, r3, d16
   69948:	add	r0, pc, r0
   6994c:	b	17d4 <printf@plt>
   69950:	ldrd	r2, [r1]
   69954:	ldr	r0, [pc, #28]	; 69978 <Mat_PrintNumber+0xf4>
   69958:	add	r0, pc, r0
   6995c:	b	17d4 <printf@plt>
   69960:	ldrd	r2, [r1]
   69964:	ldr	r0, [pc, #16]	; 6997c <Mat_PrintNumber+0xf8>
   69968:	add	r0, pc, r0
   6996c:	b	17d4 <printf@plt>
   69970:	bx	lr
   69974:	.word	0x00003085
   69978:	.word	0x00003078
   6997c:	.word	0x0000306d
   69980:	.word	0x000027d4
   69984:	.word	0x000030b2
   69988:	.word	0x000030e5
   6998c:	.word	0x000030d9
   69990:	.word	0x0000310d
   69994:	.word	0x00003102

00069998 <Mat_VarReadData>:
   69998:	push	{fp, lr}
   6999c:	mov	fp, sp
   699a0:	ldr	ip, [r1, #16]
   699a4:	sub	lr, ip, #6
   699a8:	mvn	ip, #0
   699ac:	cmp	lr, #9
   699b0:	bhi	699f0 <Mat_VarReadData+0x58>
   699b4:	ldr	ip, [r0, #16]
   699b8:	cmp	ip, #16
   699bc:	beq	699d8 <Mat_VarReadData+0x40>
   699c0:	cmp	ip, #512	; 0x200
   699c4:	beq	699e0 <Mat_VarReadData+0x48>
   699c8:	cmp	ip, #256	; 0x100
   699cc:	bne	699ec <Mat_VarReadData+0x54>
   699d0:	pop	{fp, lr}
   699d4:	b	2f790 <Mat_VarReadData5>
   699d8:	pop	{fp, lr}
   699dc:	b	65f34 <Mat_VarReadData4>
   699e0:	mov	ip, #1
   699e4:	mov	r0, ip
   699e8:	pop	{fp, pc}
   699ec:	mov	ip, #2
   699f0:	mov	r0, ip
   699f4:	pop	{fp, pc}

000699f8 <Mat_VarReadDataAll>:
   699f8:	push	{r4, sl, fp, lr}
   699fc:	add	fp, sp, #8
   69a00:	cmp	r0, #0
   69a04:	mov	r4, #1
   69a08:	cmpne	r1, #0
   69a0c:	bne	69a18 <Mat_VarReadDataAll+0x20>
   69a10:	mov	r0, r4
   69a14:	pop	{r4, sl, fp, pc}
   69a18:	ldr	r2, [r0]
   69a1c:	mov	r4, #0
   69a20:	cmp	r2, #0
   69a24:	beq	69a10 <Mat_VarReadDataAll+0x18>
   69a28:	ldr	r2, [r0, #16]
   69a2c:	cmp	r2, #16
   69a30:	beq	69a48 <Mat_VarReadDataAll+0x50>
   69a34:	cmp	r2, #256	; 0x100
   69a38:	bne	69a10 <Mat_VarReadDataAll+0x18>
   69a3c:	bl	2da20 <Mat_VarRead5>
   69a40:	mov	r0, r4
   69a44:	pop	{r4, sl, fp, pc}
   69a48:	bl	65668 <Mat_VarRead4>
   69a4c:	mov	r0, r4
   69a50:	pop	{r4, sl, fp, pc}

00069a54 <Mat_VarReadDataLinear>:
   69a54:	push	{fp, lr}
   69a58:	mov	fp, sp
   69a5c:	ldr	ip, [r1, #16]
   69a60:	sub	lr, ip, #6
   69a64:	mvn	ip, #0
   69a68:	cmp	lr, #9
   69a6c:	bhi	69aac <Mat_VarReadDataLinear+0x58>
   69a70:	ldr	ip, [r0, #16]
   69a74:	cmp	ip, #16
   69a78:	beq	69a94 <Mat_VarReadDataLinear+0x40>
   69a7c:	cmp	ip, #512	; 0x200
   69a80:	beq	69a9c <Mat_VarReadDataLinear+0x48>
   69a84:	cmp	ip, #256	; 0x100
   69a88:	bne	69aa8 <Mat_VarReadDataLinear+0x54>
   69a8c:	pop	{fp, lr}
   69a90:	b	5f894 <Mat_VarReadDataLinear5>
   69a94:	pop	{fp, lr}
   69a98:	b	66148 <Mat_VarReadDataLinear4>
   69a9c:	mov	ip, #1
   69aa0:	mov	r0, ip
   69aa4:	pop	{fp, pc}
   69aa8:	mov	ip, #2
   69aac:	mov	r0, ip
   69ab0:	pop	{fp, pc}

00069ab4 <Mat_VarReadInfo>:
   69ab4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   69ab8:	add	fp, sp, #24
   69abc:	cmp	r0, #0
   69ac0:	mov	r6, #0
   69ac4:	movne	r5, r1
   69ac8:	cmpne	r1, #0
   69acc:	bne	69ad8 <Mat_VarReadInfo+0x24>
   69ad0:	mov	r0, r6
   69ad4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   69ad8:	mov	r4, r0
   69adc:	ldr	r0, [r0, #16]
   69ae0:	cmp	r0, #512	; 0x200
   69ae4:	bne	69b78 <Mat_VarReadInfo+0xc4>
   69ae8:	ldr	r0, [r4, #36]	; 0x24
   69aec:	ldr	r8, [r4, #32]
   69af0:	mov	r6, #0
   69af4:	str	r6, [r4, #32]
   69af8:	cmp	r0, #0
   69afc:	bne	69b1c <Mat_VarReadInfo+0x68>
   69b00:	b	69c3c <Mat_VarReadInfo+0x188>
   69b04:	mov	r0, r7
   69b08:	bl	1918 <Mat_VarFree@plt>
   69b0c:	ldr	r0, [r4, #32]
   69b10:	ldr	r1, [r4, #36]	; 0x24
   69b14:	cmp	r0, r1
   69b18:	bcs	69c3c <Mat_VarReadInfo+0x188>
   69b1c:	ldr	r0, [r4, #16]
   69b20:	cmp	r0, #16
   69b24:	beq	69b3c <Mat_VarReadInfo+0x88>
   69b28:	cmp	r0, #256	; 0x100
   69b2c:	bne	69c30 <Mat_VarReadInfo+0x17c>
   69b30:	mov	r0, r4
   69b34:	bl	626b4 <Mat_VarReadNextInfo5>
   69b38:	b	69b44 <Mat_VarReadInfo+0x90>
   69b3c:	mov	r0, r4
   69b40:	bl	66258 <Mat_VarReadNextInfo4>
   69b44:	mov	r7, r0
   69b48:	cmp	r0, #0
   69b4c:	beq	69c30 <Mat_VarReadInfo+0x17c>
   69b50:	ldr	r0, [r7, #36]	; 0x24
   69b54:	cmp	r0, #0
   69b58:	beq	69b04 <Mat_VarReadInfo+0x50>
   69b5c:	mov	r1, r5
   69b60:	bl	17b0 <strcmp@plt>
   69b64:	cmp	r0, #0
   69b68:	bne	69b04 <Mat_VarReadInfo+0x50>
   69b6c:	mov	r0, r7
   69b70:	str	r8, [r4, #32]
   69b74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   69b78:	ldr	r0, [r4]
   69b7c:	bl	1840 <ftell@plt>
   69b80:	cmn	r0, #1
   69b84:	beq	69c1c <Mat_VarReadInfo+0x168>
   69b88:	mov	r7, r0
   69b8c:	ldr	r0, [r4]
   69b90:	ldr	r1, [r4, #28]
   69b94:	mov	r2, #0
   69b98:	bl	1a2c <fseek@plt>
   69b9c:	b	69bc0 <Mat_VarReadInfo+0x10c>
   69ba0:	ldr	r0, [r4]
   69ba4:	bl	190c <feof@plt>
   69ba8:	cmp	r0, #0
   69bac:	beq	69c48 <Mat_VarReadInfo+0x194>
   69bb0:	ldr	r0, [r4]
   69bb4:	bl	190c <feof@plt>
   69bb8:	cmp	r0, #0
   69bbc:	bne	69c54 <Mat_VarReadInfo+0x1a0>
   69bc0:	ldr	r0, [r4, #16]
   69bc4:	cmp	r0, #16
   69bc8:	beq	69be0 <Mat_VarReadInfo+0x12c>
   69bcc:	cmp	r0, #256	; 0x100
   69bd0:	bne	69ba0 <Mat_VarReadInfo+0xec>
   69bd4:	mov	r0, r4
   69bd8:	bl	626b4 <Mat_VarReadNextInfo5>
   69bdc:	b	69be8 <Mat_VarReadInfo+0x134>
   69be0:	mov	r0, r4
   69be4:	bl	66258 <Mat_VarReadNextInfo4>
   69be8:	mov	r6, r0
   69bec:	cmp	r0, #0
   69bf0:	beq	69ba0 <Mat_VarReadInfo+0xec>
   69bf4:	ldr	r0, [r6, #36]	; 0x24
   69bf8:	cmp	r0, #0
   69bfc:	beq	69c10 <Mat_VarReadInfo+0x15c>
   69c00:	mov	r1, r5
   69c04:	bl	17b0 <strcmp@plt>
   69c08:	cmp	r0, #0
   69c0c:	beq	69c58 <Mat_VarReadInfo+0x1a4>
   69c10:	mov	r0, r6
   69c14:	bl	1918 <Mat_VarFree@plt>
   69c18:	b	69bb0 <Mat_VarReadInfo+0xfc>
   69c1c:	ldr	r0, [pc, #84]	; 69c78 <Mat_VarReadInfo+0x1c4>
   69c20:	add	r0, pc, r0
   69c24:	bl	19b4 <Mat_Critical@plt>
   69c28:	mov	r0, r6
   69c2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   69c30:	ldr	r0, [pc, #56]	; 69c70 <Mat_VarReadInfo+0x1bc>
   69c34:	add	r0, pc, r0
   69c38:	bl	19b4 <Mat_Critical@plt>
   69c3c:	mov	r0, r6
   69c40:	str	r8, [r4, #32]
   69c44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   69c48:	ldr	r0, [pc, #36]	; 69c74 <Mat_VarReadInfo+0x1c0>
   69c4c:	add	r0, pc, r0
   69c50:	bl	19b4 <Mat_Critical@plt>
   69c54:	mov	r6, #0
   69c58:	ldr	r0, [r4]
   69c5c:	mov	r1, r7
   69c60:	mov	r2, #0
   69c64:	bl	1a2c <fseek@plt>
   69c68:	mov	r0, r6
   69c6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   69c70:	.word	0x000023e4
   69c74:	.word	0x000023cc
   69c78:	.word	0x0000216c

00069c7c <Mat_VarRead>:
   69c7c:	push	{r4, r5, r6, r7, fp, lr}
   69c80:	add	fp, sp, #16
   69c84:	cmp	r0, #0
   69c88:	mov	r4, #0
   69c8c:	movne	r7, r1
   69c90:	cmpne	r1, #0
   69c94:	bne	69ca0 <Mat_VarRead+0x24>
   69c98:	mov	r0, r4
   69c9c:	pop	{r4, r5, r6, r7, fp, pc}
   69ca0:	mov	r5, r0
   69ca4:	ldr	r0, [r0, #16]
   69ca8:	cmp	r0, #512	; 0x200
   69cac:	bne	69d04 <Mat_VarRead+0x88>
   69cb0:	ldr	r6, [r5, #32]
   69cb4:	mov	r0, #0
   69cb8:	mov	r1, r7
   69cbc:	str	r0, [r5, #32]
   69cc0:	mov	r0, r5
   69cc4:	bl	187c <Mat_VarReadInfo@plt>
   69cc8:	mov	r4, r0
   69ccc:	cmp	r0, #0
   69cd0:	beq	69d80 <Mat_VarRead+0x104>
   69cd4:	ldr	r0, [r5]
   69cd8:	cmp	r0, #0
   69cdc:	beq	69d80 <Mat_VarRead+0x104>
   69ce0:	ldr	r0, [r5, #16]
   69ce4:	cmp	r0, #16
   69ce8:	beq	69d74 <Mat_VarRead+0xf8>
   69cec:	cmp	r0, #256	; 0x100
   69cf0:	bne	69d80 <Mat_VarRead+0x104>
   69cf4:	mov	r0, r5
   69cf8:	mov	r1, r4
   69cfc:	bl	2da20 <Mat_VarRead5>
   69d00:	b	69d80 <Mat_VarRead+0x104>
   69d04:	ldr	r0, [r5]
   69d08:	bl	1840 <ftell@plt>
   69d0c:	cmn	r0, #1
   69d10:	beq	69d60 <Mat_VarRead+0xe4>
   69d14:	mov	r6, r0
   69d18:	mov	r0, r5
   69d1c:	mov	r1, r7
   69d20:	bl	187c <Mat_VarReadInfo@plt>
   69d24:	mov	r4, r0
   69d28:	cmp	r0, #0
   69d2c:	beq	69d98 <Mat_VarRead+0x11c>
   69d30:	ldr	r0, [r5]
   69d34:	cmp	r0, #0
   69d38:	beq	69d98 <Mat_VarRead+0x11c>
   69d3c:	ldr	r0, [r5, #16]
   69d40:	cmp	r0, #16
   69d44:	beq	69d8c <Mat_VarRead+0x110>
   69d48:	cmp	r0, #256	; 0x100
   69d4c:	bne	69d98 <Mat_VarRead+0x11c>
   69d50:	mov	r0, r5
   69d54:	mov	r1, r4
   69d58:	bl	2da20 <Mat_VarRead5>
   69d5c:	b	69d98 <Mat_VarRead+0x11c>
   69d60:	ldr	r0, [pc, #72]	; 69db0 <Mat_VarRead+0x134>
   69d64:	add	r0, pc, r0
   69d68:	bl	19b4 <Mat_Critical@plt>
   69d6c:	mov	r0, r4
   69d70:	pop	{r4, r5, r6, r7, fp, pc}
   69d74:	mov	r0, r5
   69d78:	mov	r1, r4
   69d7c:	bl	65668 <Mat_VarRead4>
   69d80:	str	r6, [r5, #32]
   69d84:	mov	r0, r4
   69d88:	pop	{r4, r5, r6, r7, fp, pc}
   69d8c:	mov	r0, r5
   69d90:	mov	r1, r4
   69d94:	bl	65668 <Mat_VarRead4>
   69d98:	ldr	r0, [r5]
   69d9c:	mov	r1, r6
   69da0:	mov	r2, #0
   69da4:	bl	1a2c <fseek@plt>
   69da8:	mov	r0, r4
   69dac:	pop	{r4, r5, r6, r7, fp, pc}
   69db0:	.word	0x00002028

00069db4 <Mat_VarWriteInfo>:
   69db4:	push	{fp, lr}
   69db8:	mov	fp, sp
   69dbc:	ldr	r0, [r0, #16]
   69dc0:	ldr	r2, [pc, #36]	; 69dec <Mat_VarWriteInfo+0x38>
   69dc4:	ldr	r1, [pc, #36]	; 69df0 <Mat_VarWriteInfo+0x3c>
   69dc8:	cmp	r0, #512	; 0x200
   69dcc:	ldr	r0, [pc, #32]	; 69df4 <Mat_VarWriteInfo+0x40>
   69dd0:	add	r2, pc, r2
   69dd4:	add	r1, pc, r1
   69dd8:	moveq	r1, r2
   69ddc:	add	r0, pc, r0
   69de0:	bl	19b4 <Mat_Critical@plt>
   69de4:	mov	r0, #1
   69de8:	pop	{fp, pc}
   69dec:	.word	0x00002b4f
   69df0:	.word	0x00002b6b
   69df4:	.word	0x00002aff

00069df8 <Mat_VarWriteData>:
   69df8:	push	{fp, lr}
   69dfc:	mov	fp, sp
   69e00:	ldr	r0, [r0, #16]
   69e04:	ldr	r2, [pc, #36]	; 69e30 <Mat_VarWriteData+0x38>
   69e08:	ldr	r1, [pc, #36]	; 69e34 <Mat_VarWriteData+0x3c>
   69e0c:	cmp	r0, #512	; 0x200
   69e10:	ldr	r0, [pc, #32]	; 69e38 <Mat_VarWriteData+0x40>
   69e14:	add	r2, pc, r2
   69e18:	add	r1, pc, r1
   69e1c:	moveq	r1, r2
   69e20:	add	r0, pc, r0
   69e24:	bl	19b4 <Mat_Critical@plt>
   69e28:	mov	r0, #1
   69e2c:	pop	{fp, pc}
   69e30:	.word	0x00002b0b
   69e34:	.word	0x00002b27
   69e38:	.word	0x00002abb

00069e3c <Mat_VarWriteAppend>:
   69e3c:	push	{r4, sl, fp, lr}
   69e40:	add	fp, sp, #8
   69e44:	sub	sp, sp, #8
   69e48:	mov	r4, r0
   69e4c:	mvn	r0, #0
   69e50:	cmp	r4, #0
   69e54:	cmpne	r1, #0
   69e58:	bne	69e64 <Mat_VarWriteAppend+0x28>
   69e5c:	sub	sp, fp, #8
   69e60:	pop	{r4, sl, fp, pc}
   69e64:	ldr	r0, [r4, #40]	; 0x28
   69e68:	cmp	r0, #0
   69e6c:	bne	69e84 <Mat_VarWriteAppend+0x48>
   69e70:	mov	r0, #0
   69e74:	add	r1, sp, #4
   69e78:	str	r0, [sp, #4]
   69e7c:	mov	r0, r4
   69e80:	bl	1930 <Mat_GetDir@plt>
   69e84:	ldr	r1, [r4, #16]
   69e88:	mov	r0, #2
   69e8c:	cmp	r1, #512	; 0x200
   69e90:	movweq	r0, #1
   69e94:	sub	sp, fp, #8
   69e98:	pop	{r4, sl, fp, pc}

00069e9c <Mat_VarGetCell>:
   69e9c:	push	{r4, r5, r6, sl, fp, lr}
   69ea0:	add	fp, sp, #16
   69ea4:	sub	sp, sp, #8
   69ea8:	mov	r6, r0
   69eac:	mov	r0, #1
   69eb0:	mov	r4, #0
   69eb4:	cmp	r6, #0
   69eb8:	str	r0, [sp, #4]
   69ebc:	beq	69eec <Mat_VarGetCell+0x50>
   69ec0:	mov	r5, r1
   69ec4:	add	r1, sp, #4
   69ec8:	mov	r0, r6
   69ecc:	bl	665f0 <SafeMulDims>
   69ed0:	cmp	r5, #0
   69ed4:	bmi	69eec <Mat_VarGetCell+0x50>
   69ed8:	ldr	r0, [sp, #4]
   69edc:	cmp	r0, r5
   69ee0:	bls	69eec <Mat_VarGetCell+0x50>
   69ee4:	ldr	r0, [r6, #40]	; 0x28
   69ee8:	ldr	r4, [r0, r5, lsl #2]
   69eec:	mov	r0, r4
   69ef0:	sub	sp, fp, #16
   69ef4:	pop	{r4, r5, r6, sl, fp, pc}

00069ef8 <Mat_VarGetCells>:
   69ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   69efc:	add	fp, sp, #28
   69f00:	sub	sp, sp, #172	; 0xac
   69f04:	vmov.i32	q8, #0	; 0x00000000
   69f08:	sub	r6, fp, #72	; 0x48
   69f0c:	mov	r7, #36	; 0x24
   69f10:	mov	sl, r0
   69f14:	mov	r0, #0
   69f18:	mov	r5, r6
   69f1c:	add	r6, r6, #16
   69f20:	cmp	sl, #0
   69f24:	str	r0, [fp, #-40]	; 0xffffffd8
   69f28:	str	r0, [sp, #120]	; 0x78
   69f2c:	str	r0, [sp, #80]	; 0x50
   69f30:	cmpne	r1, #0
   69f34:	vst1.64	{d16-d17}, [r5], r7
   69f38:	vst1.64	{d16-d17}, [r6]
   69f3c:	add	r6, sp, #88	; 0x58
   69f40:	str	r0, [r5]
   69f44:	add	r5, r6, #16
   69f48:	vst1.64	{d16-d17}, [r6], r7
   69f4c:	str	r0, [r6]
   69f50:	add	r6, sp, #48	; 0x30
   69f54:	vst1.64	{d16-d17}, [r5]
   69f58:	add	r5, r6, #16
   69f5c:	vst1.64	{d16-d17}, [r6], r7
   69f60:	vst1.64	{d16-d17}, [r5]
   69f64:	str	r0, [r6]
   69f68:	beq	69f78 <Mat_VarGetCells+0x80>
   69f6c:	cmp	r2, #0
   69f70:	cmpne	r3, #0
   69f74:	bne	69f80 <Mat_VarGetCells+0x88>
   69f78:	sub	sp, fp, #28
   69f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   69f80:	ldr	r9, [sl, #4]
   69f84:	cmp	r9, #9
   69f88:	bgt	69f78 <Mat_VarGetCells+0x80>
   69f8c:	ldr	r7, [sl, #32]
   69f90:	cmp	r9, #2
   69f94:	str	r2, [sp, #4]
   69f98:	str	r3, [sp, #44]	; 0x2c
   69f9c:	str	r1, [sp, #40]	; 0x28
   69fa0:	ldr	r6, [r7]
   69fa4:	str	r6, [sp, #48]	; 0x30
   69fa8:	ldr	r0, [r3]
   69fac:	ldr	r5, [r1]
   69fb0:	str	r5, [fp, #-72]	; 0xffffffb8
   69fb4:	str	r0, [sp, #28]
   69fb8:	str	r5, [sp, #32]
   69fbc:	blt	6a024 <Mat_VarGetCells+0x12c>
   69fc0:	ldr	r1, [sp, #40]	; 0x28
   69fc4:	mvn	r0, #3
   69fc8:	add	r2, r0, r9, lsl #2
   69fcc:	sub	r0, fp, #72	; 0x48
   69fd0:	orr	r0, r0, #4
   69fd4:	add	r8, r1, #4
   69fd8:	mov	r1, r8
   69fdc:	bl	181c <memcpy@plt>
   69fe0:	ldr	r0, [sp, #44]	; 0x2c
   69fe4:	ldr	r5, [sp, #32]
   69fe8:	add	r1, sp, #48	; 0x30
   69fec:	add	r4, r7, #4
   69ff0:	sub	r3, r9, #1
   69ff4:	orr	r1, r1, #4
   69ff8:	add	r2, r0, #4
   69ffc:	ldr	r0, [sp, #28]
   6a000:	ldr	r7, [r8], #4
   6a004:	subs	r3, r3, #1
   6a008:	mla	r5, r6, r7, r5
   6a00c:	ldr	r7, [r4], #4
   6a010:	mul	r6, r7, r6
   6a014:	str	r6, [r1], #4
   6a018:	ldr	r7, [r2], #4
   6a01c:	mul	r0, r7, r0
   6a020:	bne	6a000 <Mat_VarGetCells+0x108>
   6a024:	str	r0, [sp, #24]
   6a028:	lsl	r0, r0, #2
   6a02c:	bl	18d0 <malloc@plt>
   6a030:	ldr	r1, [sp, #24]
   6a034:	cmp	r1, #1
   6a038:	blt	69f78 <Mat_VarGetCells+0x80>
   6a03c:	ldr	r7, [sp, #28]
   6a040:	mov	r1, r9
   6a044:	str	r0, [sp]
   6a048:	add	r0, r0, #4
   6a04c:	ldr	r6, [sp, #40]	; 0x28
   6a050:	add	r4, sp, #88	; 0x58
   6a054:	str	r0, [sp, #40]	; 0x28
   6a058:	sub	ip, r1, #2
   6a05c:	sub	lr, r1, #1
   6a060:	str	r1, [sp, #20]
   6a064:	and	r2, r7, #1
   6a068:	add	r8, r6, #4
   6a06c:	lsl	r6, r7, #2
   6a070:	str	r2, [sp, #8]
   6a074:	sub	r9, r7, r2
   6a078:	ldr	r2, [sp, #44]	; 0x2c
   6a07c:	str	r6, [sp, #16]
   6a080:	add	r3, r2, #4
   6a084:	ldr	r2, [sp, #4]
   6a088:	add	r0, r2, #8
   6a08c:	str	r0, [sp, #44]	; 0x2c
   6a090:	ldr	r0, [r2, #4]
   6a094:	sub	r2, fp, #72	; 0x48
   6a098:	str	r0, [sp, #12]
   6a09c:	mov	r0, #0
   6a0a0:	str	r0, [sp, #36]	; 0x24
   6a0a4:	cmp	r7, #1
   6a0a8:	bge	6a0e8 <Mat_VarGetCells+0x1f0>
   6a0ac:	b	6a160 <Mat_VarGetCells+0x268>
   6a0b0:	mov	sl, r7
   6a0b4:	ldr	r7, [sp, #28]
   6a0b8:	ldr	r0, [sp, #16]
   6a0bc:	ldr	r1, [sp, #40]	; 0x28
   6a0c0:	add	r1, r1, r0
   6a0c4:	ldr	r0, [sp, #24]
   6a0c8:	str	r1, [sp, #40]	; 0x28
   6a0cc:	ldr	r1, [sp, #36]	; 0x24
   6a0d0:	add	r1, r1, r7
   6a0d4:	cmp	r1, r0
   6a0d8:	str	r1, [sp, #36]	; 0x24
   6a0dc:	bge	6a224 <Mat_VarGetCells+0x32c>
   6a0e0:	cmp	r7, #1
   6a0e4:	blt	6a160 <Mat_VarGetCells+0x268>
   6a0e8:	ldr	r6, [sl, #40]	; 0x28
   6a0ec:	mov	r1, #0
   6a0f0:	cmp	r7, #1
   6a0f4:	beq	6a134 <Mat_VarGetCells+0x23c>
   6a0f8:	ldr	r0, [sp, #4]
   6a0fc:	ldr	r4, [sp, #40]	; 0x28
   6a100:	mov	r1, #0
   6a104:	ldr	r0, [r0]
   6a108:	add	r7, r6, r0, lsl #2
   6a10c:	lsl	r0, r0, #1
   6a110:	ldr	r2, [r6, r5, lsl #2]
   6a114:	add	r1, r1, #2
   6a118:	cmp	r9, r1
   6a11c:	str	r2, [r4, #-4]
   6a120:	ldr	r2, [r7, r5, lsl #2]
   6a124:	add	r5, r5, r0
   6a128:	str	r2, [r4]
   6a12c:	add	r4, r4, #8
   6a130:	bne	6a110 <Mat_VarGetCells+0x218>
   6a134:	ldr	r0, [sp, #8]
   6a138:	ldr	r7, [sp, #28]
   6a13c:	sub	r2, fp, #72	; 0x48
   6a140:	add	r4, sp, #88	; 0x58
   6a144:	cmp	r0, #0
   6a148:	beq	6a160 <Mat_VarGetCells+0x268>
   6a14c:	ldr	r0, [r6, r5, lsl #2]
   6a150:	ldr	r5, [sp, #36]	; 0x24
   6a154:	add	r1, r1, r5
   6a158:	ldr	r5, [sp]
   6a15c:	str	r0, [r5, r1, lsl #2]
   6a160:	ldr	r5, [sp, #32]
   6a164:	ldr	r0, [sp, #92]	; 0x5c
   6a168:	ldr	r6, [sp, #12]
   6a16c:	str	r5, [fp, #-72]	; 0xffffffb8
   6a170:	add	r1, r0, #1
   6a174:	ldr	r0, [fp, #-68]	; 0xffffffbc
   6a178:	str	r1, [sp, #92]	; 0x5c
   6a17c:	add	r0, r0, r6
   6a180:	str	r0, [fp, #-68]	; 0xffffffbc
   6a184:	ldr	r0, [sp, #20]
   6a188:	cmp	r0, #2
   6a18c:	blt	6a0b8 <Mat_VarGetCells+0x1c0>
   6a190:	ldr	r5, [sp, #32]
   6a194:	mov	r7, sl
   6a198:	mov	r6, #0
   6a19c:	ldr	r0, [r3, r6, lsl #2]
   6a1a0:	add	sl, r6, #1
   6a1a4:	cmp	r1, r0
   6a1a8:	bne	6a1f8 <Mat_VarGetCells+0x300>
   6a1ac:	add	r4, r4, r6, lsl #2
   6a1b0:	mov	r0, #0
   6a1b4:	add	r1, r2, r6, lsl #2
   6a1b8:	cmp	sl, lr
   6a1bc:	str	r0, [r4, #4]
   6a1c0:	ldr	r0, [r8, r6, lsl #2]
   6a1c4:	str	r0, [r1, #4]
   6a1c8:	bge	6a1f0 <Mat_VarGetCells+0x2f8>
   6a1cc:	ldr	r2, [r4, #8]
   6a1d0:	add	r2, r2, #1
   6a1d4:	str	r2, [r4, #8]
   6a1d8:	ldr	r2, [sp, #44]	; 0x2c
   6a1dc:	ldr	r4, [r1, #8]
   6a1e0:	ldr	r2, [r2, r6, lsl #2]
   6a1e4:	add	r2, r4, r2
   6a1e8:	str	r2, [r1, #8]
   6a1ec:	sub	r2, fp, #72	; 0x48
   6a1f0:	add	r4, sp, #88	; 0x58
   6a1f4:	b	6a200 <Mat_VarGetCells+0x308>
   6a1f8:	add	r0, r2, r6, lsl #2
   6a1fc:	ldr	r0, [r0, #4]
   6a200:	add	r1, sp, #48	; 0x30
   6a204:	cmp	ip, r6
   6a208:	ldr	r1, [r1, r6, lsl #2]
   6a20c:	mla	r5, r1, r0, r5
   6a210:	beq	6a0b0 <Mat_VarGetCells+0x1b8>
   6a214:	add	r0, r4, r6, lsl #2
   6a218:	mov	r6, sl
   6a21c:	ldr	r1, [r0, #8]
   6a220:	b	6a19c <Mat_VarGetCells+0x2a4>
   6a224:	ldr	r0, [sp]
   6a228:	sub	sp, fp, #28
   6a22c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006a230 <Mat_VarGetCellsLinear>:
   6a230:	push	{r4, r5, r6, r7, fp, lr}
   6a234:	add	fp, sp, #16
   6a238:	cmp	r0, #0
   6a23c:	beq	6a2bc <Mat_VarGetCellsLinear+0x8c>
   6a240:	mov	r7, r0
   6a244:	lsl	r0, r3, #2
   6a248:	mov	r6, r3
   6a24c:	mov	r5, r2
   6a250:	mov	r4, r1
   6a254:	bl	18d0 <malloc@plt>
   6a258:	cmp	r6, #1
   6a25c:	blt	6a2b8 <Mat_VarGetCellsLinear+0x88>
   6a260:	ldr	lr, [r7, #40]	; 0x28
   6a264:	and	ip, r6, #1
   6a268:	mov	r3, #0
   6a26c:	cmp	r6, #1
   6a270:	beq	6a2ac <Mat_VarGetCellsLinear+0x7c>
   6a274:	add	r7, lr, r5, lsl #2
   6a278:	sub	r6, r6, ip
   6a27c:	add	r2, r0, #4
   6a280:	mov	r3, #0
   6a284:	ldr	r1, [lr, r4, lsl #2]
   6a288:	add	r3, r3, #2
   6a28c:	cmp	r6, r3
   6a290:	str	r1, [r2, #-4]
   6a294:	ldr	r1, [r7, r4, lsl #2]
   6a298:	str	r1, [r2]
   6a29c:	add	r1, r4, r5
   6a2a0:	add	r2, r2, #8
   6a2a4:	add	r4, r1, r5
   6a2a8:	bne	6a284 <Mat_VarGetCellsLinear+0x54>
   6a2ac:	cmp	ip, #0
   6a2b0:	ldrne	r1, [lr, r4, lsl #2]
   6a2b4:	strne	r1, [r0, r3, lsl #2]
   6a2b8:	pop	{r4, r5, r6, r7, fp, pc}
   6a2bc:	mov	r0, #0
   6a2c0:	pop	{r4, r5, r6, r7, fp, pc}

0006a2c4 <Mat_VarSetCell>:
   6a2c4:	push	{r4, r5, r6, r7, fp, lr}
   6a2c8:	add	fp, sp, #16
   6a2cc:	sub	sp, sp, #8
   6a2d0:	mov	r7, r0
   6a2d4:	mov	r0, #1
   6a2d8:	mov	r4, #0
   6a2dc:	cmp	r7, #0
   6a2e0:	str	r0, [sp, #4]
   6a2e4:	beq	6a328 <Mat_VarSetCell+0x64>
   6a2e8:	ldr	r0, [r7, #4]
   6a2ec:	cmp	r0, #1
   6a2f0:	blt	6a328 <Mat_VarSetCell+0x64>
   6a2f4:	mov	r6, r1
   6a2f8:	add	r1, sp, #4
   6a2fc:	mov	r0, r7
   6a300:	mov	r5, r2
   6a304:	bl	665f0 <SafeMulDims>
   6a308:	cmp	r6, #0
   6a30c:	bmi	6a328 <Mat_VarSetCell+0x64>
   6a310:	ldr	r0, [sp, #4]
   6a314:	cmp	r0, r6
   6a318:	bls	6a328 <Mat_VarSetCell+0x64>
   6a31c:	ldr	r0, [r7, #40]	; 0x28
   6a320:	ldr	r4, [r0, r6, lsl #2]
   6a324:	str	r5, [r0, r6, lsl #2]
   6a328:	mov	r0, r4
   6a32c:	sub	sp, fp, #16
   6a330:	pop	{r4, r5, r6, r7, fp, pc}

0006a334 <Mat_VarCreateStruct>:
   6a334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a338:	add	fp, sp, #28
   6a33c:	sub	sp, sp, #4
   6a340:	mov	r5, #0
   6a344:	cmp	r2, #0
   6a348:	beq	6a484 <Mat_VarCreateStruct+0x150>
   6a34c:	mov	r9, r3
   6a350:	mov	r6, r2
   6a354:	mov	sl, r1
   6a358:	mov	r7, r0
   6a35c:	bl	18a0 <Mat_VarCalloc@plt>
   6a360:	cmp	r0, #0
   6a364:	beq	6a484 <Mat_VarCreateStruct+0x150>
   6a368:	mov	r4, r0
   6a36c:	mov	r0, #0
   6a370:	cmp	r7, #0
   6a374:	str	r0, [r4, #48]	; 0x30
   6a378:	beq	6a388 <Mat_VarCreateStruct+0x54>
   6a37c:	mov	r0, r7
   6a380:	bl	1864 <strdup@plt>
   6a384:	str	r0, [r4, #36]	; 0x24
   6a388:	ldr	r8, [fp, #8]
   6a38c:	lsl	r0, sl, #2
   6a390:	str	sl, [r4, #4]
   6a394:	bl	18d0 <malloc@plt>
   6a398:	str	r0, [r4, #32]
   6a39c:	mov	r7, #1
   6a3a0:	ldr	r1, [r4, #4]
   6a3a4:	cmp	r1, #1
   6a3a8:	blt	6a3cc <Mat_VarCreateStruct+0x98>
   6a3ac:	mov	r1, #0
   6a3b0:	ldr	r2, [r6, r1, lsl #2]
   6a3b4:	str	r2, [r0, r1, lsl #2]
   6a3b8:	mul	r7, r2, r7
   6a3bc:	add	r1, r1, #1
   6a3c0:	ldr	r2, [r4, #4]
   6a3c4:	cmp	r1, r2
   6a3c8:	blt	6a3b0 <Mat_VarCreateStruct+0x7c>
   6a3cc:	mov	r1, #22
   6a3d0:	cmp	r8, #0
   6a3d4:	mov	r0, #4
   6a3d8:	mov	r2, #2
   6a3dc:	str	r1, [r4, #8]
   6a3e0:	str	r0, [r4, #12]
   6a3e4:	str	r2, [r4, #16]
   6a3e8:	beq	6a470 <Mat_VarCreateStruct+0x13c>
   6a3ec:	ldr	r0, [r4, #52]	; 0x34
   6a3f0:	str	r8, [r0, #4]
   6a3f4:	lsl	r0, r8, #2
   6a3f8:	bl	18d0 <malloc@plt>
   6a3fc:	ldr	r1, [r4, #52]	; 0x34
   6a400:	cmp	r0, #0
   6a404:	str	r0, [r1, #8]
   6a408:	beq	6a478 <Mat_VarCreateStruct+0x144>
   6a40c:	mov	r5, #0
   6a410:	ldr	r0, [r9, r5, lsl #2]
   6a414:	cmp	r0, #0
   6a418:	beq	6a478 <Mat_VarCreateStruct+0x144>
   6a41c:	bl	1864 <strdup@plt>
   6a420:	ldr	r1, [r4, #52]	; 0x34
   6a424:	ldr	r1, [r1, #8]
   6a428:	str	r0, [r1, r5, lsl #2]
   6a42c:	add	r5, r5, #1
   6a430:	cmp	r8, r5
   6a434:	bne	6a410 <Mat_VarCreateStruct+0xdc>
   6a438:	cmp	r7, #0
   6a43c:	beq	6a470 <Mat_VarCreateStruct+0x13c>
   6a440:	mov	r0, sp
   6a444:	mov	r1, r7
   6a448:	mov	r2, r8
   6a44c:	bl	6664c <SafeMul>
   6a450:	ldr	r2, [r4, #12]
   6a454:	ldr	r1, [sp]
   6a458:	mov	r0, r4
   6a45c:	bl	6664c <SafeMul>
   6a460:	ldr	r1, [r4, #12]
   6a464:	ldr	r0, [sp]
   6a468:	bl	1798 <calloc@plt>
   6a46c:	str	r0, [r4, #40]	; 0x28
   6a470:	mov	r5, r4
   6a474:	b	6a484 <Mat_VarCreateStruct+0x150>
   6a478:	mov	r0, r4
   6a47c:	bl	1918 <Mat_VarFree@plt>
   6a480:	mov	r5, #0
   6a484:	mov	r0, r5
   6a488:	sub	sp, fp, #28
   6a48c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006a490 <Mat_VarAddStructField>:
   6a490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a494:	add	fp, sp, #28
   6a498:	sub	sp, sp, #60	; 0x3c
   6a49c:	mov	r6, r0
   6a4a0:	mov	r0, #1
   6a4a4:	mvn	r8, #0
   6a4a8:	cmp	r6, #0
   6a4ac:	str	r0, [fp, #-32]	; 0xffffffe0
   6a4b0:	movne	r5, r1
   6a4b4:	cmpne	r1, #0
   6a4b8:	bne	6a4c8 <Mat_VarAddStructField+0x38>
   6a4bc:	mov	r0, r8
   6a4c0:	sub	sp, fp, #28
   6a4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6a4c8:	sub	r1, fp, #32
   6a4cc:	mov	r0, r6
   6a4d0:	bl	665f0 <SafeMulDims>
   6a4d4:	ldr	r1, [r6, #52]	; 0x34
   6a4d8:	ldr	r4, [r1, #4]
   6a4dc:	ldr	r0, [r1, #8]
   6a4e0:	add	r7, r4, #1
   6a4e4:	str	r7, [r1, #4]
   6a4e8:	lsl	r1, r7, #2
   6a4ec:	bl	1870 <realloc@plt>
   6a4f0:	cmp	r0, #0
   6a4f4:	beq	6a4bc <Mat_VarAddStructField+0x2c>
   6a4f8:	ldr	r1, [r6, #52]	; 0x34
   6a4fc:	str	r0, [r1, #8]
   6a500:	mov	r0, r5
   6a504:	bl	1864 <strdup@plt>
   6a508:	ldr	r1, [r6, #52]	; 0x34
   6a50c:	mov	r2, r7
   6a510:	ldr	r1, [r1, #8]
   6a514:	str	r0, [r1, r4, lsl #2]
   6a518:	sub	r0, fp, #36	; 0x24
   6a51c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   6a520:	bl	6664c <SafeMul>
   6a524:	ldr	r1, [fp, #-36]	; 0xffffffdc
   6a528:	mov	r0, r6
   6a52c:	mov	r2, #4
   6a530:	bl	6664c <SafeMul>
   6a534:	ldr	r0, [r6]
   6a538:	bl	18d0 <malloc@plt>
   6a53c:	cmp	r0, #0
   6a540:	beq	6a73c <Mat_VarAddStructField+0x2ac>
   6a544:	ldr	r8, [fp, #-32]	; 0xffffffe0
   6a548:	mov	r9, r0
   6a54c:	ldr	r0, [r6, #40]	; 0x28
   6a550:	str	r6, [sp, #4]
   6a554:	cmp	r8, #0
   6a558:	beq	6a728 <Mat_VarAddStructField+0x298>
   6a55c:	sub	r2, r4, #4
   6a560:	mov	r1, #1
   6a564:	mov	sl, #32
   6a568:	mov	lr, #0
   6a56c:	mov	ip, r0
   6a570:	mov	r6, #0
   6a574:	mov	r7, #0
   6a578:	str	r9, [sp, #24]
   6a57c:	str	r8, [sp, #40]	; 0x28
   6a580:	add	r1, r1, r2, lsr #2
   6a584:	and	r3, r1, #1
   6a588:	sub	r1, r1, r3
   6a58c:	str	r3, [sp, #20]
   6a590:	str	r1, [sp, #8]
   6a594:	add	r1, r9, r4, lsl #2
   6a598:	str	r1, [sp, #28]
   6a59c:	add	r1, r9, #4
   6a5a0:	str	r1, [sp, #32]
   6a5a4:	lsl	r1, r4, #2
   6a5a8:	str	r1, [fp, #-40]	; 0xffffffd8
   6a5ac:	and	r1, r4, #1
   6a5b0:	str	r1, [sp, #44]	; 0x2c
   6a5b4:	bic	r1, r4, #3
   6a5b8:	str	r1, [sp, #16]
   6a5bc:	lsr	r1, r2, #2
   6a5c0:	str	r1, [sp, #12]
   6a5c4:	cmp	r4, #0
   6a5c8:	bne	6a5f8 <Mat_VarAddStructField+0x168>
   6a5cc:	mov	r1, #0
   6a5d0:	add	r7, r7, #1
   6a5d4:	add	lr, lr, r4
   6a5d8:	str	r1, [r9, r6, lsl #2]
   6a5dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   6a5e0:	add	r6, r6, #1
   6a5e4:	cmp	r7, r8
   6a5e8:	add	ip, ip, r1
   6a5ec:	bcs	6a728 <Mat_VarAddStructField+0x298>
   6a5f0:	cmp	r4, #0
   6a5f4:	beq	6a5cc <Mat_VarAddStructField+0x13c>
   6a5f8:	mul	r5, r4, r7
   6a5fc:	mov	r2, #0
   6a600:	cmp	r4, #4
   6a604:	bcc	6a6b8 <Mat_VarAddStructField+0x228>
   6a608:	mla	r1, r4, r7, r4
   6a60c:	add	r8, r9, r6, lsl #2
   6a610:	add	r1, r0, r1, lsl #2
   6a614:	cmp	r8, r1
   6a618:	bcs	6a638 <Mat_VarAddStructField+0x1a8>
   6a61c:	ldr	r3, [sp, #28]
   6a620:	add	r1, r0, r5, lsl #2
   6a624:	add	r3, r3, r6, lsl #2
   6a628:	cmp	r3, r1
   6a62c:	bls	6a638 <Mat_VarAddStructField+0x1a8>
   6a630:	ldr	r8, [sp, #40]	; 0x28
   6a634:	b	6a6b8 <Mat_VarAddStructField+0x228>
   6a638:	ldr	r1, [sp, #12]
   6a63c:	mov	r2, #0
   6a640:	str	r5, [sp, #36]	; 0x24
   6a644:	cmp	r1, #0
   6a648:	beq	6a678 <Mat_VarAddStructField+0x1e8>
   6a64c:	ldr	r1, [sp, #8]
   6a650:	mov	r3, ip
   6a654:	add	r9, r3, #16
   6a658:	vld1.32	{d16-d17}, [r3], sl
   6a65c:	add	r5, r8, #16
   6a660:	subs	r1, r1, #2
   6a664:	add	r2, r2, #8
   6a668:	vst1.32	{d16-d17}, [r8], sl
   6a66c:	vld1.32	{d16-d17}, [r9]
   6a670:	vst1.32	{d16-d17}, [r5]
   6a674:	bne	6a654 <Mat_VarAddStructField+0x1c4>
   6a678:	ldr	r1, [sp, #20]
   6a67c:	ldr	r9, [sp, #24]
   6a680:	ldr	r5, [sp, #36]	; 0x24
   6a684:	cmp	r1, #0
   6a688:	beq	6a6a4 <Mat_VarAddStructField+0x214>
   6a68c:	add	r1, r2, r5
   6a690:	add	r1, r0, r1, lsl #2
   6a694:	vld1.32	{d16-d17}, [r1]
   6a698:	add	r1, r6, r2
   6a69c:	add	r1, r9, r1, lsl #2
   6a6a0:	vst1.32	{d16-d17}, [r1]
   6a6a4:	ldr	r2, [sp, #16]
   6a6a8:	ldr	r8, [sp, #40]	; 0x28
   6a6ac:	add	r6, r6, r2
   6a6b0:	cmp	r4, r2
   6a6b4:	beq	6a5cc <Mat_VarAddStructField+0x13c>
   6a6b8:	ldr	r1, [sp, #44]	; 0x2c
   6a6bc:	cmp	r1, #0
   6a6c0:	bne	6a6cc <Mat_VarAddStructField+0x23c>
   6a6c4:	mov	r1, r2
   6a6c8:	b	6a6e0 <Mat_VarAddStructField+0x250>
   6a6cc:	add	r1, r2, r5
   6a6d0:	ldr	r1, [r0, r1, lsl #2]
   6a6d4:	str	r1, [r9, r6, lsl #2]
   6a6d8:	orr	r1, r2, #1
   6a6dc:	add	r6, r6, #1
   6a6e0:	orr	r2, r2, #1
   6a6e4:	cmp	r4, r2
   6a6e8:	beq	6a5cc <Mat_VarAddStructField+0x13c>
   6a6ec:	ldr	r2, [sp, #32]
   6a6f0:	sub	r3, r4, r1
   6a6f4:	add	r1, r1, lr
   6a6f8:	add	r1, r0, r1, lsl #2
   6a6fc:	add	r2, r2, r6, lsl #2
   6a700:	ldr	r5, [r1]
   6a704:	subs	r3, r3, #2
   6a708:	add	r6, r6, #2
   6a70c:	str	r5, [r2, #-4]
   6a710:	ldr	r5, [r1, #4]
   6a714:	add	r1, r1, #8
   6a718:	str	r5, [r2]
   6a71c:	add	r2, r2, #8
   6a720:	bne	6a700 <Mat_VarAddStructField+0x270>
   6a724:	b	6a5cc <Mat_VarAddStructField+0x13c>
   6a728:	bl	1804 <free@plt>
   6a72c:	ldr	r0, [sp, #4]
   6a730:	mov	r8, #0
   6a734:	str	r9, [r0, #40]	; 0x28
   6a738:	b	6a4bc <Mat_VarAddStructField+0x2c>
   6a73c:	mov	r0, #0
   6a740:	str	r0, [r6]
   6a744:	b	6a4bc <Mat_VarAddStructField+0x2c>

0006a748 <Mat_VarGetNumberOfFields>:
   6a748:	mov	r1, r0
   6a74c:	mov	r0, #0
   6a750:	cmp	r1, #0
   6a754:	bxeq	lr
   6a758:	ldr	r2, [r1, #16]
   6a75c:	cmp	r2, #2
   6a760:	bne	6a770 <Mat_VarGetNumberOfFields+0x28>
   6a764:	ldr	r1, [r1, #52]	; 0x34
   6a768:	cmp	r1, #0
   6a76c:	ldrne	r0, [r1, #4]
   6a770:	bx	lr

0006a774 <Mat_VarGetStructFieldnames>:
   6a774:	mov	r1, r0
   6a778:	mov	r0, #0
   6a77c:	cmp	r1, #0
   6a780:	bxeq	lr
   6a784:	ldr	r2, [r1, #16]
   6a788:	cmp	r2, #2
   6a78c:	bne	6a79c <Mat_VarGetStructFieldnames+0x28>
   6a790:	ldr	r1, [r1, #52]	; 0x34
   6a794:	cmp	r1, #0
   6a798:	ldrne	r0, [r1, #8]
   6a79c:	bx	lr

0006a7a0 <Mat_VarGetStructFieldByIndex>:
   6a7a0:	push	{r4, r5, r6, r7, fp, lr}
   6a7a4:	add	fp, sp, #16
   6a7a8:	sub	sp, sp, #8
   6a7ac:	mov	r7, r0
   6a7b0:	mov	r0, #1
   6a7b4:	mov	r4, #0
   6a7b8:	cmp	r7, #0
   6a7bc:	str	r0, [sp, #4]
   6a7c0:	beq	6a848 <Mat_VarGetStructFieldByIndex+0xa8>
   6a7c4:	ldr	r0, [r7, #16]
   6a7c8:	cmp	r0, #2
   6a7cc:	bne	6a848 <Mat_VarGetStructFieldByIndex+0xa8>
   6a7d0:	ldr	r0, [r7, #12]
   6a7d4:	cmp	r0, #0
   6a7d8:	beq	6a848 <Mat_VarGetStructFieldByIndex+0xa8>
   6a7dc:	mov	r5, r1
   6a7e0:	add	r1, sp, #4
   6a7e4:	mov	r0, r7
   6a7e8:	mov	r6, r2
   6a7ec:	bl	665f0 <SafeMulDims>
   6a7f0:	ldr	r0, [sp, #4]
   6a7f4:	sub	r0, r0, #1
   6a7f8:	cmp	r0, r6
   6a7fc:	bcs	6a810 <Mat_VarGetStructFieldByIndex+0x70>
   6a800:	ldr	r0, [pc, #76]	; 6a854 <Mat_VarGetStructFieldByIndex+0xb4>
   6a804:	add	r0, pc, r0
   6a808:	bl	19b4 <Mat_Critical@plt>
   6a80c:	b	6a848 <Mat_VarGetStructFieldByIndex+0xa8>
   6a810:	ldr	r0, [r7, #52]	; 0x34
   6a814:	ldr	r0, [r0, #4]
   6a818:	cmp	r0, #0
   6a81c:	beq	6a848 <Mat_VarGetStructFieldByIndex+0xa8>
   6a820:	cmp	r0, r5
   6a824:	bcs	6a838 <Mat_VarGetStructFieldByIndex+0x98>
   6a828:	ldr	r0, [pc, #40]	; 6a858 <Mat_VarGetStructFieldByIndex+0xb8>
   6a82c:	add	r0, pc, r0
   6a830:	bl	19b4 <Mat_Critical@plt>
   6a834:	b	6a848 <Mat_VarGetStructFieldByIndex+0xa8>
   6a838:	ldr	r1, [r7, #40]	; 0x28
   6a83c:	mul	r0, r0, r6
   6a840:	add	r0, r1, r0, lsl #2
   6a844:	ldr	r4, [r0, r5, lsl #2]
   6a848:	mov	r0, r4
   6a84c:	sub	sp, fp, #16
   6a850:	pop	{r4, r5, r6, r7, fp, pc}
   6a854:	.word	0x000022b8
   6a858:	.word	0x000022c5

0006a85c <Mat_VarGetStructFieldByName>:
   6a85c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a860:	add	fp, sp, #28
   6a864:	sub	sp, sp, #4
   6a868:	mov	r6, r0
   6a86c:	mov	r0, #1
   6a870:	mov	sl, #0
   6a874:	cmp	r6, #0
   6a878:	str	r0, [sp]
   6a87c:	beq	6a920 <Mat_VarGetStructFieldByName+0xc4>
   6a880:	ldr	r0, [r6, #16]
   6a884:	cmp	r0, #2
   6a888:	bne	6a920 <Mat_VarGetStructFieldByName+0xc4>
   6a88c:	ldr	r0, [r6, #12]
   6a890:	cmp	r0, #0
   6a894:	beq	6a920 <Mat_VarGetStructFieldByName+0xc4>
   6a898:	mov	r7, r1
   6a89c:	mov	r1, sp
   6a8a0:	mov	r0, r6
   6a8a4:	mov	r9, r2
   6a8a8:	bl	665f0 <SafeMulDims>
   6a8ac:	ldr	r0, [r6, #52]	; 0x34
   6a8b0:	mvn	r4, #0
   6a8b4:	ldr	r5, [r0, #4]
   6a8b8:	cmp	r5, #1
   6a8bc:	blt	6a8ec <Mat_VarGetStructFieldByName+0x90>
   6a8c0:	ldr	r8, [r0, #8]
   6a8c4:	mov	r4, #0
   6a8c8:	ldr	r0, [r8, r4, lsl #2]
   6a8cc:	mov	r1, r7
   6a8d0:	bl	17b0 <strcmp@plt>
   6a8d4:	cmp	r0, #0
   6a8d8:	beq	6a8ec <Mat_VarGetStructFieldByName+0x90>
   6a8dc:	add	r4, r4, #1
   6a8e0:	cmp	r5, r4
   6a8e4:	bne	6a8c8 <Mat_VarGetStructFieldByName+0x6c>
   6a8e8:	mvn	r4, #0
   6a8ec:	ldr	r0, [sp]
   6a8f0:	cmp	r0, r9
   6a8f4:	bls	6a914 <Mat_VarGetStructFieldByName+0xb8>
   6a8f8:	cmp	r4, #0
   6a8fc:	bmi	6a920 <Mat_VarGetStructFieldByName+0xc4>
   6a900:	ldr	r1, [r6, #40]	; 0x28
   6a904:	mul	r0, r5, r9
   6a908:	add	r0, r1, r0, lsl #2
   6a90c:	ldr	sl, [r0, r4, lsl #2]
   6a910:	b	6a920 <Mat_VarGetStructFieldByName+0xc4>
   6a914:	ldr	r0, [pc, #16]	; 6a92c <Mat_VarGetStructFieldByName+0xd0>
   6a918:	add	r0, pc, r0
   6a91c:	bl	19b4 <Mat_Critical@plt>
   6a920:	mov	r0, sl
   6a924:	sub	sp, fp, #28
   6a928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6a92c:	.word	0x000021a4

0006a930 <Mat_VarGetStructField>:
   6a930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6a934:	add	fp, sp, #28
   6a938:	sub	sp, sp, #12
   6a93c:	mov	r6, r0
   6a940:	mov	r0, #1
   6a944:	mov	r7, r1
   6a948:	mov	r1, sp
   6a94c:	mov	r5, r3
   6a950:	mov	r4, r2
   6a954:	str	r0, [sp]
   6a958:	mov	r0, r6
   6a95c:	bl	665f0 <SafeMulDims>
   6a960:	mov	r8, #0
   6a964:	cmp	r5, #0
   6a968:	bmi	6a97c <Mat_VarGetStructField+0x4c>
   6a96c:	ldr	r0, [sp]
   6a970:	sub	r0, r0, #1
   6a974:	cmp	r0, r5
   6a978:	bcs	6a988 <Mat_VarGetStructField+0x58>
   6a97c:	mov	r0, r8
   6a980:	sub	sp, fp, #28
   6a984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6a988:	ldr	r0, [r6, #52]	; 0x34
   6a98c:	cmp	r4, #2
   6a990:	ldr	r0, [r0, #4]
   6a994:	bne	6aa18 <Mat_VarGetStructField+0xe8>
   6a998:	cmp	r0, #1
   6a99c:	blt	6aa18 <Mat_VarGetStructField+0xe8>
   6a9a0:	ldr	r4, [r7]
   6a9a4:	cmp	r4, #0
   6a9a8:	beq	6a97c <Mat_VarGetStructField+0x4c>
   6a9ac:	mov	r0, #1
   6a9b0:	mov	r8, #0
   6a9b4:	str	r0, [sp, #4]
   6a9b8:	ldr	r0, [r6, #16]
   6a9bc:	cmp	r0, #2
   6a9c0:	bne	6a97c <Mat_VarGetStructField+0x4c>
   6a9c4:	ldr	r0, [r6, #12]
   6a9c8:	cmp	r0, #0
   6a9cc:	beq	6a97c <Mat_VarGetStructField+0x4c>
   6a9d0:	add	r1, sp, #4
   6a9d4:	mov	r0, r6
   6a9d8:	bl	665f0 <SafeMulDims>
   6a9dc:	ldr	r0, [sp, #4]
   6a9e0:	sub	r0, r0, #1
   6a9e4:	cmp	r0, r5
   6a9e8:	bcc	6aac0 <Mat_VarGetStructField+0x190>
   6a9ec:	ldr	r0, [r6, #52]	; 0x34
   6a9f0:	ldr	r0, [r0, #4]
   6a9f4:	cmp	r0, #0
   6a9f8:	beq	6a97c <Mat_VarGetStructField+0x4c>
   6a9fc:	sub	r1, r4, #1
   6aa00:	cmp	r0, r1
   6aa04:	bcs	6aad0 <Mat_VarGetStructField+0x1a0>
   6aa08:	ldr	r0, [pc, #216]	; 6aae8 <Mat_VarGetStructField+0x1b8>
   6aa0c:	add	r0, pc, r0
   6aa10:	bl	19b4 <Mat_Critical@plt>
   6aa14:	b	6a97c <Mat_VarGetStructField+0x4c>
   6aa18:	cmp	r4, #1
   6aa1c:	bne	6a97c <Mat_VarGetStructField+0x4c>
   6aa20:	cmp	r0, #1
   6aa24:	blt	6a97c <Mat_VarGetStructField+0x4c>
   6aa28:	mov	r0, #1
   6aa2c:	mov	r8, #0
   6aa30:	str	r0, [sp, #8]
   6aa34:	ldr	r0, [r6, #16]
   6aa38:	cmp	r0, #2
   6aa3c:	bne	6a97c <Mat_VarGetStructField+0x4c>
   6aa40:	ldr	r0, [r6, #12]
   6aa44:	cmp	r0, #0
   6aa48:	beq	6a97c <Mat_VarGetStructField+0x4c>
   6aa4c:	add	r1, sp, #8
   6aa50:	mov	r0, r6
   6aa54:	bl	665f0 <SafeMulDims>
   6aa58:	ldr	r0, [r6, #52]	; 0x34
   6aa5c:	mvn	r4, #0
   6aa60:	ldr	sl, [r0, #4]
   6aa64:	cmp	sl, #1
   6aa68:	blt	6aa98 <Mat_VarGetStructField+0x168>
   6aa6c:	ldr	r9, [r0, #8]
   6aa70:	mov	r4, #0
   6aa74:	ldr	r0, [r9, r4, lsl #2]
   6aa78:	mov	r1, r7
   6aa7c:	bl	17b0 <strcmp@plt>
   6aa80:	cmp	r0, #0
   6aa84:	beq	6aa98 <Mat_VarGetStructField+0x168>
   6aa88:	add	r4, r4, #1
   6aa8c:	cmp	sl, r4
   6aa90:	bne	6aa74 <Mat_VarGetStructField+0x144>
   6aa94:	mvn	r4, #0
   6aa98:	ldr	r0, [sp, #8]
   6aa9c:	cmp	r0, r5
   6aaa0:	bls	6aac0 <Mat_VarGetStructField+0x190>
   6aaa4:	cmp	r4, #0
   6aaa8:	bmi	6a97c <Mat_VarGetStructField+0x4c>
   6aaac:	ldr	r1, [r6, #40]	; 0x28
   6aab0:	mul	r0, sl, r5
   6aab4:	add	r0, r1, r0, lsl #2
   6aab8:	ldr	r8, [r0, r4, lsl #2]
   6aabc:	b	6a97c <Mat_VarGetStructField+0x4c>
   6aac0:	ldr	r0, [pc, #28]	; 6aae4 <Mat_VarGetStructField+0x1b4>
   6aac4:	add	r0, pc, r0
   6aac8:	bl	19b4 <Mat_Critical@plt>
   6aacc:	b	6a97c <Mat_VarGetStructField+0x4c>
   6aad0:	ldr	r2, [r6, #40]	; 0x28
   6aad4:	mul	r0, r0, r5
   6aad8:	add	r0, r2, r0, lsl #2
   6aadc:	ldr	r8, [r0, r1, lsl #2]
   6aae0:	b	6a97c <Mat_VarGetStructField+0x4c>
   6aae4:	.word	0x00001ff8
   6aae8:	.word	0x000020e5

0006aaec <Mat_VarGetStructs>:
   6aaec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6aaf0:	add	fp, sp, #28
   6aaf4:	sub	sp, sp, #172	; 0xac
   6aaf8:	vmov.i32	q8, #0	; 0x00000000
   6aafc:	str	r2, [sp, #44]	; 0x2c
   6ab00:	sub	r2, fp, #72	; 0x48
   6ab04:	mov	r7, r0
   6ab08:	mov	r5, r1
   6ab0c:	mov	r0, #36	; 0x24
   6ab10:	mov	r4, #0
   6ab14:	mov	r1, r2
   6ab18:	cmp	r7, #0
   6ab1c:	str	r4, [fp, #-40]	; 0xffffffd8
   6ab20:	str	r4, [sp, #120]	; 0x78
   6ab24:	str	r4, [sp, #80]	; 0x50
   6ab28:	cmpne	r5, #0
   6ab2c:	vst1.64	{d16-d17}, [r1], r0
   6ab30:	str	r4, [r1]
   6ab34:	add	r1, r2, #16
   6ab38:	add	r2, sp, #88	; 0x58
   6ab3c:	vst1.64	{d16-d17}, [r1]
   6ab40:	add	r1, r2, #16
   6ab44:	vst1.64	{d16-d17}, [r1]
   6ab48:	mov	r1, r2
   6ab4c:	add	r2, sp, #48	; 0x30
   6ab50:	vst1.64	{d16-d17}, [r1], r0
   6ab54:	str	r4, [r1]
   6ab58:	add	r1, r2, #16
   6ab5c:	vst1.64	{d16-d17}, [r1]
   6ab60:	mov	r1, r2
   6ab64:	vst1.64	{d16-d17}, [r1], r0
   6ab68:	str	r4, [r1]
   6ab6c:	beq	6ab84 <Mat_VarGetStructs+0x98>
   6ab70:	ldr	r0, [sp, #44]	; 0x2c
   6ab74:	cmp	r0, #0
   6ab78:	movne	r6, r3
   6ab7c:	cmpne	r3, #0
   6ab80:	bne	6ab90 <Mat_VarGetStructs+0xa4>
   6ab84:	mov	r0, r4
   6ab88:	sub	sp, fp, #28
   6ab8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   6ab90:	ldr	r0, [r7, #4]
   6ab94:	cmp	r0, #9
   6ab98:	bgt	6ab84 <Mat_VarGetStructs+0x98>
   6ab9c:	ldr	r0, [r7, #16]
   6aba0:	cmp	r0, #2
   6aba4:	bne	6ab84 <Mat_VarGetStructs+0x98>
   6aba8:	ldr	sl, [fp, #8]
   6abac:	mov	r0, r7
   6abb0:	mov	r1, #0
   6abb4:	bl	1a44 <Mat_VarDuplicate@plt>
   6abb8:	cmp	sl, #0
   6abbc:	str	r0, [sp]
   6abc0:	str	r6, [sp, #32]
   6abc4:	str	r5, [sp, #12]
   6abc8:	moveq	r1, #1
   6abcc:	streq	r1, [r0, #44]	; 0x2c
   6abd0:	ldr	ip, [r7, #32]
   6abd4:	ldr	r1, [r7, #52]	; 0x34
   6abd8:	ldr	r2, [ip]
   6abdc:	ldr	r1, [r1, #4]
   6abe0:	str	r2, [sp, #48]	; 0x30
   6abe4:	str	r1, [sp, #40]	; 0x28
   6abe8:	ldr	r1, [r0, #32]
   6abec:	ldr	r0, [r6]
   6abf0:	ldr	r8, [r5]
   6abf4:	str	r0, [r1]
   6abf8:	mov	r9, r0
   6abfc:	ldr	r3, [r5]
   6ac00:	str	r3, [fp, #-72]	; 0xffffffb8
   6ac04:	ldr	r3, [r7, #4]
   6ac08:	cmp	r3, #2
   6ac0c:	blt	6ac5c <Mat_VarGetStructs+0x170>
   6ac10:	ldr	r6, [sp, #12]
   6ac14:	ldr	lr, [sp, #32]
   6ac18:	mov	r3, #1
   6ac1c:	ldr	r5, [r6, r3, lsl #2]
   6ac20:	sub	r0, fp, #72	; 0x48
   6ac24:	str	r5, [r0, r3, lsl #2]
   6ac28:	add	r0, sp, #48	; 0x30
   6ac2c:	mla	r8, r2, r5, r8
   6ac30:	ldr	r4, [ip, r3, lsl #2]
   6ac34:	mul	r4, r4, r2
   6ac38:	str	r4, [r0, r3, lsl #2]
   6ac3c:	mov	r2, r4
   6ac40:	ldr	r0, [lr, r3, lsl #2]
   6ac44:	str	r0, [r1, r3, lsl #2]
   6ac48:	mul	r9, r0, r9
   6ac4c:	add	r3, r3, #1
   6ac50:	ldr	r0, [r7, #4]
   6ac54:	cmp	r3, r0
   6ac58:	blt	6ac1c <Mat_VarGetStructs+0x130>
   6ac5c:	ldr	r0, [sp, #40]	; 0x28
   6ac60:	ldr	r4, [sp]
   6ac64:	mul	r0, r0, r9
   6ac68:	lsl	r0, r0, #2
   6ac6c:	str	r0, [r4]
   6ac70:	bl	18d0 <malloc@plt>
   6ac74:	cmp	r0, #0
   6ac78:	str	r0, [r4, #40]	; 0x28
   6ac7c:	mov	r1, r0
   6ac80:	str	r0, [sp, #4]
   6ac84:	beq	6ae70 <Mat_VarGetStructs+0x384>
   6ac88:	cmp	r9, #0
   6ac8c:	beq	6ab84 <Mat_VarGetStructs+0x98>
   6ac90:	ldr	r0, [sp, #44]	; 0x2c
   6ac94:	ldr	r1, [sp, #32]
   6ac98:	ldr	r4, [sp, #40]	; 0x28
   6ac9c:	str	r9, [sp, #8]
   6aca0:	add	r0, r0, #8
   6aca4:	mov	r2, r1
   6aca8:	str	r0, [sp, #20]
   6acac:	ldr	r0, [sp, #12]
   6acb0:	add	r0, r0, #4
   6acb4:	str	r0, [sp, #24]
   6acb8:	lsl	r0, r4, #2
   6acbc:	str	r0, [sp, #36]	; 0x24
   6acc0:	ldr	r0, [r2], #4
   6acc4:	str	r2, [sp, #28]
   6acc8:	mov	r2, #0
   6accc:	str	r2, [sp, #16]
   6acd0:	cmp	r0, #1
   6acd4:	bge	6ad08 <Mat_VarGetStructs+0x21c>
   6acd8:	b	6ad94 <Mat_VarGetStructs+0x2a8>
   6acdc:	ldr	r2, [sp, #16]
   6ace0:	ldr	r9, [sp, #8]
   6ace4:	ldr	r4, [sp, #40]	; 0x28
   6ace8:	mov	r3, r2
   6acec:	add	r3, r0, r2
   6acf0:	cmp	r3, r9
   6acf4:	mov	r2, r3
   6acf8:	str	r3, [sp, #16]
   6acfc:	bcs	6ae80 <Mat_VarGetStructs+0x394>
   6ad00:	cmp	r0, #1
   6ad04:	blt	6ad94 <Mat_VarGetStructs+0x2a8>
   6ad08:	ldr	r0, [sp, #4]
   6ad0c:	ldr	r1, [sp, #36]	; 0x24
   6ad10:	ldr	r2, [sp, #16]
   6ad14:	mul	r6, r8, r4
   6ad18:	mov	r5, #0
   6ad1c:	mla	r9, r1, r2, r0
   6ad20:	cmp	r4, #0
   6ad24:	bne	6ad60 <Mat_VarGetStructs+0x274>
   6ad28:	ldr	r0, [sp, #44]	; 0x2c
   6ad2c:	ldr	r4, [sp, #40]	; 0x28
   6ad30:	add	r5, r5, #1
   6ad34:	ldr	r0, [r0]
   6ad38:	sub	r0, r0, #1
   6ad3c:	mla	r6, r0, r4, r6
   6ad40:	ldr	r0, [sp, #36]	; 0x24
   6ad44:	add	r9, r9, r0
   6ad48:	ldr	r0, [sp, #32]
   6ad4c:	ldr	r0, [r0]
   6ad50:	cmp	r5, r0
   6ad54:	bge	6ad94 <Mat_VarGetStructs+0x2a8>
   6ad58:	cmp	r4, #0
   6ad5c:	beq	6ad28 <Mat_VarGetStructs+0x23c>
   6ad60:	mov	r8, r9
   6ad64:	b	6ad78 <Mat_VarGetStructs+0x28c>
   6ad68:	str	r0, [r8], #4
   6ad6c:	subs	r4, r4, #1
   6ad70:	add	r6, r6, #1
   6ad74:	beq	6ad28 <Mat_VarGetStructs+0x23c>
   6ad78:	ldr	r0, [r7, #40]	; 0x28
   6ad7c:	cmp	sl, #0
   6ad80:	ldr	r0, [r0, r6, lsl #2]
   6ad84:	beq	6ad68 <Mat_VarGetStructs+0x27c>
   6ad88:	mov	r1, #1
   6ad8c:	bl	1a44 <Mat_VarDuplicate@plt>
   6ad90:	b	6ad68 <Mat_VarGetStructs+0x27c>
   6ad94:	ldr	r1, [sp, #12]
   6ad98:	ldr	r8, [r1]
   6ad9c:	ldr	r1, [sp, #92]	; 0x5c
   6ada0:	add	r4, r1, #1
   6ada4:	ldr	r1, [sp, #44]	; 0x2c
   6ada8:	str	r8, [fp, #-72]	; 0xffffffb8
   6adac:	str	r4, [sp, #92]	; 0x5c
   6adb0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   6adb4:	ldr	r1, [r1, #4]
   6adb8:	add	r1, r2, r1
   6adbc:	str	r1, [fp, #-68]	; 0xffffffbc
   6adc0:	ldr	lr, [r7, #4]
   6adc4:	cmp	lr, #2
   6adc8:	blt	6acdc <Mat_VarGetStructs+0x1f0>
   6adcc:	sub	ip, lr, #1
   6add0:	mov	r3, #0
   6add4:	sub	r6, fp, #72	; 0x48
   6add8:	add	r2, sp, #88	; 0x58
   6addc:	ldr	r1, [sp, #28]
   6ade0:	add	r5, r3, #1
   6ade4:	ldr	r1, [r1, r3, lsl #2]
   6ade8:	cmp	r4, r1
   6adec:	bne	6ae40 <Mat_VarGetStructs+0x354>
   6adf0:	add	r1, r2, r3, lsl #2
   6adf4:	mov	r2, #0
   6adf8:	cmp	r5, ip
   6adfc:	str	r2, [r1, #4]
   6ae00:	ldr	r2, [sp, #24]
   6ae04:	ldr	r4, [r2, r3, lsl #2]
   6ae08:	add	r2, r6, r3, lsl #2
   6ae0c:	str	r4, [r2, #4]
   6ae10:	bge	6ae38 <Mat_VarGetStructs+0x34c>
   6ae14:	ldr	r6, [r1, #8]
   6ae18:	add	r6, r6, #1
   6ae1c:	str	r6, [r1, #8]
   6ae20:	ldr	r1, [sp, #20]
   6ae24:	ldr	r6, [r2, #8]
   6ae28:	ldr	r1, [r1, r3, lsl #2]
   6ae2c:	add	r1, r6, r1
   6ae30:	sub	r6, fp, #72	; 0x48
   6ae34:	str	r1, [r2, #8]
   6ae38:	add	r2, sp, #88	; 0x58
   6ae3c:	b	6ae48 <Mat_VarGetStructs+0x35c>
   6ae40:	add	r1, r6, r3, lsl #2
   6ae44:	ldr	r4, [r1, #4]
   6ae48:	add	r1, sp, #48	; 0x30
   6ae4c:	ldr	r1, [r1, r3, lsl #2]
   6ae50:	mla	r8, r1, r4, r8
   6ae54:	add	r1, r3, #2
   6ae58:	cmp	r1, lr
   6ae5c:	bge	6acdc <Mat_VarGetStructs+0x1f0>
   6ae60:	add	r1, r2, r3, lsl #2
   6ae64:	mov	r3, r5
   6ae68:	ldr	r4, [r1, #8]
   6ae6c:	b	6addc <Mat_VarGetStructs+0x2f0>
   6ae70:	mov	r0, r4
   6ae74:	bl	1918 <Mat_VarFree@plt>
   6ae78:	mov	r4, #0
   6ae7c:	b	6ab84 <Mat_VarGetStructs+0x98>
   6ae80:	ldr	r4, [sp]
   6ae84:	b	6ab84 <Mat_VarGetStructs+0x98>

0006ae88 <Mat_VarGetStructsLinear>:
   6ae88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6ae8c:	add	fp, sp, #28
   6ae90:	sub	sp, sp, #52	; 0x34
   6ae94:	mov	r5, #0
   6ae98:	cmp	r0, #0
   6ae9c:	str	r3, [sp, #32]
   6aea0:	beq	6b15c <Mat_VarGetStructsLinear+0x2d4>
   6aea4:	mov	r6, r0
   6aea8:	ldr	r0, [r0, #4]
   6aeac:	cmp	r0, #10
   6aeb0:	bgt	6b15c <Mat_VarGetStructsLinear+0x2d4>
   6aeb4:	ldr	r7, [fp, #8]
   6aeb8:	mov	r4, r1
   6aebc:	mov	r0, r6
   6aec0:	mov	r1, #0
   6aec4:	mov	r8, r2
   6aec8:	bl	1a44 <Mat_VarDuplicate@plt>
   6aecc:	cmp	r7, #0
   6aed0:	mov	r5, r0
   6aed4:	ldr	r7, [sp, #32]
   6aed8:	moveq	r0, #1
   6aedc:	streq	r0, [r5, #44]	; 0x2c
   6aee0:	ldr	r0, [r6, #52]	; 0x34
   6aee4:	ldr	sl, [r0, #4]
   6aee8:	mul	r0, r7, sl
   6aeec:	lsl	r0, r0, #2
   6aef0:	str	r0, [r5]
   6aef4:	bl	18d0 <malloc@plt>
   6aef8:	cmp	r0, #0
   6aefc:	str	r0, [r5, #40]	; 0x28
   6af00:	beq	6b148 <Mat_VarGetStructsLinear+0x2c0>
   6af04:	ldr	r1, [r5, #32]
   6af08:	str	r0, [sp, #28]
   6af0c:	mov	r0, #1
   6af10:	cmp	r7, #1
   6af14:	str	r7, [r1]
   6af18:	str	r0, [r1, #4]
   6af1c:	blt	6b15c <Mat_VarGetStructsLinear+0x2d4>
   6af20:	sub	r1, sl, #4
   6af24:	ldr	r7, [sp, #32]
   6af28:	mul	r4, sl, r4
   6af2c:	lsl	ip, sl, #2
   6af30:	mov	r9, #0
   6af34:	str	r5, [sp]
   6af38:	str	sl, [fp, #-36]	; 0xffffffdc
   6af3c:	add	r0, r0, r1, lsr #2
   6af40:	str	ip, [sp, #36]	; 0x24
   6af44:	and	r2, r0, #1
   6af48:	sub	r0, r0, r2
   6af4c:	str	r2, [sp, #16]
   6af50:	str	r0, [sp, #4]
   6af54:	sub	r0, r8, #1
   6af58:	ldr	r8, [sp, #28]
   6af5c:	mul	r0, sl, r0
   6af60:	str	r0, [sp, #40]	; 0x28
   6af64:	and	r0, sl, #1
   6af68:	str	r0, [sp, #24]
   6af6c:	bic	r0, sl, #3
   6af70:	str	r0, [sp, #12]
   6af74:	lsr	r0, r1, #2
   6af78:	str	r0, [sp, #8]
   6af7c:	mov	r0, #0
   6af80:	str	r0, [fp, #-32]	; 0xffffffe0
   6af84:	b	6afb4 <Mat_VarGetStructsLinear+0x12c>
   6af88:	ldr	sl, [fp, #-36]	; 0xffffffdc
   6af8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6af90:	ldr	ip, [sp, #36]	; 0x24
   6af94:	add	r9, r9, #1
   6af98:	cmp	r9, r7
   6af9c:	add	r0, r0, sl
   6afa0:	add	r8, r8, ip
   6afa4:	str	r0, [fp, #-32]	; 0xffffffe0
   6afa8:	ldr	r0, [sp, #40]	; 0x28
   6afac:	add	r4, r4, r0
   6afb0:	beq	6b158 <Mat_VarGetStructsLinear+0x2d0>
   6afb4:	ldr	r0, [fp, #8]
   6afb8:	cmp	r0, #0
   6afbc:	beq	6aff0 <Mat_VarGetStructsLinear+0x168>
   6afc0:	cmp	sl, #1
   6afc4:	blt	6af88 <Mat_VarGetStructsLinear+0x100>
   6afc8:	mov	r5, r8
   6afcc:	ldr	r0, [r6, #40]	; 0x28
   6afd0:	mov	r1, #1
   6afd4:	ldr	r0, [r0, r4, lsl #2]
   6afd8:	bl	1a44 <Mat_VarDuplicate@plt>
   6afdc:	str	r0, [r5], #4
   6afe0:	subs	sl, sl, #1
   6afe4:	add	r4, r4, #1
   6afe8:	bne	6afcc <Mat_VarGetStructsLinear+0x144>
   6afec:	b	6af88 <Mat_VarGetStructsLinear+0x100>
   6aff0:	cmp	sl, #1
   6aff4:	blt	6af88 <Mat_VarGetStructsLinear+0x100>
   6aff8:	ldr	lr, [r6, #40]	; 0x28
   6affc:	mul	r5, r9, sl
   6b000:	mov	r2, #0
   6b004:	cmp	sl, #3
   6b008:	bls	6b0c4 <Mat_VarGetStructsLinear+0x23c>
   6b00c:	ldr	r0, [sp, #28]
   6b010:	str	r5, [sp, #20]
   6b014:	add	r5, lr, sl, lsl #2
   6b018:	add	r3, lr, r4, lsl #2
   6b01c:	add	r5, r5, r4, lsl #2
   6b020:	mla	r1, ip, r9, r0
   6b024:	cmp	r1, r5
   6b028:	bcs	6b044 <Mat_VarGetStructsLinear+0x1bc>
   6b02c:	mla	r1, ip, r9, ip
   6b030:	add	r1, r0, r1
   6b034:	cmp	r1, r3
   6b038:	bls	6b044 <Mat_VarGetStructsLinear+0x1bc>
   6b03c:	ldr	r5, [sp, #20]
   6b040:	b	6b0c4 <Mat_VarGetStructsLinear+0x23c>
   6b044:	ldr	r0, [sp, #8]
   6b048:	mov	r2, #0
   6b04c:	cmp	r0, #0
   6b050:	beq	6b084 <Mat_VarGetStructsLinear+0x1fc>
   6b054:	ldr	r1, [sp, #4]
   6b058:	mov	r5, r8
   6b05c:	mov	ip, #32
   6b060:	add	r0, r3, #16
   6b064:	vld1.32	{d16-d17}, [r3], ip
   6b068:	add	r7, r5, #16
   6b06c:	subs	r1, r1, #2
   6b070:	add	r2, r2, #8
   6b074:	vst1.32	{d16-d17}, [r5], ip
   6b078:	vld1.32	{d16-d17}, [r0]
   6b07c:	vst1.32	{d16-d17}, [r7]
   6b080:	bne	6b060 <Mat_VarGetStructsLinear+0x1d8>
   6b084:	ldr	r0, [sp, #16]
   6b088:	ldr	r5, [sp, #20]
   6b08c:	cmp	r0, #0
   6b090:	beq	6b0b0 <Mat_VarGetStructsLinear+0x228>
   6b094:	add	r0, r4, r2
   6b098:	ldr	r1, [sp, #28]
   6b09c:	add	r0, lr, r0, lsl #2
   6b0a0:	vld1.32	{d16-d17}, [r0]
   6b0a4:	add	r0, r2, r5
   6b0a8:	add	r0, r1, r0, lsl #2
   6b0ac:	vst1.32	{d16-d17}, [r0]
   6b0b0:	ldr	r2, [sp, #12]
   6b0b4:	ldr	r7, [sp, #32]
   6b0b8:	add	r4, r4, r2
   6b0bc:	cmp	sl, r2
   6b0c0:	beq	6af88 <Mat_VarGetStructsLinear+0x100>
   6b0c4:	ldr	r0, [sp, #24]
   6b0c8:	cmp	r0, #0
   6b0cc:	bne	6b0d8 <Mat_VarGetStructsLinear+0x250>
   6b0d0:	mov	r3, r2
   6b0d4:	b	6b0f0 <Mat_VarGetStructsLinear+0x268>
   6b0d8:	ldr	r1, [lr, r4, lsl #2]
   6b0dc:	ldr	r0, [sp, #28]
   6b0e0:	add	r3, r2, r5
   6b0e4:	add	r4, r4, #1
   6b0e8:	str	r1, [r0, r3, lsl #2]
   6b0ec:	orr	r3, r2, #1
   6b0f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6b0f4:	orr	r1, r2, #1
   6b0f8:	cmp	r0, r1
   6b0fc:	beq	6af88 <Mat_VarGetStructsLinear+0x100>
   6b100:	ldr	r0, [fp, #-36]	; 0xffffffdc
   6b104:	sub	r1, r0, r3
   6b108:	ldr	r0, [fp, #-32]	; 0xffffffe0
   6b10c:	add	r2, r3, r0
   6b110:	ldr	r0, [sp, #28]
   6b114:	add	r2, r0, r2, lsl #2
   6b118:	add	r0, lr, r4, lsl #2
   6b11c:	add	r0, r0, #4
   6b120:	ldr	r3, [r0, #-4]
   6b124:	subs	r1, r1, #2
   6b128:	add	r4, r4, #2
   6b12c:	str	r3, [r2]
   6b130:	ldr	r3, [r0]
   6b134:	add	r0, r0, #8
   6b138:	str	r3, [r2, #4]
   6b13c:	add	r2, r2, #8
   6b140:	bne	6b120 <Mat_VarGetStructsLinear+0x298>
   6b144:	b	6af88 <Mat_VarGetStructsLinear+0x100>
   6b148:	mov	r0, r5
   6b14c:	bl	1918 <Mat_VarFree@plt>
   6b150:	mov	r5, #0
   6b154:	b	6b15c <Mat_VarGetStructsLinear+0x2d4>
   6b158:	ldr	r5, [sp]
   6b15c:	mov	r0, r5
   6b160:	sub	sp, fp, #28
   6b164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006b168 <Mat_VarSetStructFieldByIndex>:
   6b168:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   6b16c:	add	fp, sp, #24
   6b170:	sub	sp, sp, #8
   6b174:	mov	r7, r0
   6b178:	mov	r0, #1
   6b17c:	mov	r4, #0
   6b180:	cmp	r7, #0
   6b184:	str	r0, [sp, #4]
   6b188:	beq	6b208 <Mat_VarSetStructFieldByIndex+0xa0>
   6b18c:	ldr	r0, [r7, #16]
   6b190:	cmp	r0, #2
   6b194:	bne	6b208 <Mat_VarSetStructFieldByIndex+0xa0>
   6b198:	ldr	r0, [r7, #40]	; 0x28
   6b19c:	cmp	r0, #0
   6b1a0:	beq	6b208 <Mat_VarSetStructFieldByIndex+0xa0>
   6b1a4:	mov	r6, r1
   6b1a8:	add	r1, sp, #4
   6b1ac:	mov	r0, r7
   6b1b0:	mov	r8, r3
   6b1b4:	mov	r5, r2
   6b1b8:	bl	665f0 <SafeMulDims>
   6b1bc:	ldr	r0, [r7, #52]	; 0x34
   6b1c0:	ldr	r0, [r0, #4]
   6b1c4:	cmp	r0, r6
   6b1c8:	ldrhi	r1, [sp, #4]
   6b1cc:	cmphi	r1, r5
   6b1d0:	bls	6b208 <Mat_VarSetStructFieldByIndex+0xa0>
   6b1d4:	ldr	r1, [r7, #40]	; 0x28
   6b1d8:	mla	r0, r0, r5, r6
   6b1dc:	ldr	r4, [r1, r0, lsl #2]
   6b1e0:	str	r8, [r1, r0, lsl #2]
   6b1e4:	ldr	r0, [r8, #36]	; 0x24
   6b1e8:	cmp	r0, #0
   6b1ec:	beq	6b1f4 <Mat_VarSetStructFieldByIndex+0x8c>
   6b1f0:	bl	1804 <free@plt>
   6b1f4:	ldr	r0, [r7, #52]	; 0x34
   6b1f8:	ldr	r0, [r0, #8]
   6b1fc:	ldr	r0, [r0, r6, lsl #2]
   6b200:	bl	1864 <strdup@plt>
   6b204:	str	r0, [r8, #36]	; 0x24
   6b208:	mov	r0, r4
   6b20c:	sub	sp, fp, #24
   6b210:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0006b214 <Mat_VarSetStructFieldByName>:
   6b214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   6b218:	add	fp, sp, #28
   6b21c:	sub	sp, sp, #12
   6b220:	mov	r8, r0
   6b224:	mov	r0, #1
   6b228:	mov	sl, #0
   6b22c:	cmp	r8, #0
   6b230:	str	r0, [sp, #8]
   6b234:	beq	6b2f8 <Mat_VarSetStructFieldByName+0xe4>
   6b238:	ldr	r0, [r8, #16]
   6b23c:	cmp	r0, #2
   6b240:	bne	6b2f8 <Mat_VarSetStructFieldByName+0xe4>
   6b244:	ldr	r0, [r8, #40]	; 0x28
   6b248:	cmp	r0, #0
   6b24c:	beq	6b2f8 <Mat_VarSetStructFieldByName+0xe4>
   6b250:	mov	r4, r1
   6b254:	add	r1, sp, #8
   6b258:	mov	r0, r8
   6b25c:	mov	r5, r3
   6b260:	mov	r9, r2
   6b264:	bl	665f0 <SafeMulDims>
   6b268:	ldr	r0, [r8, #52]	; 0x34
   6b26c:	ldr	r6, [r0, #4]
   6b270:	cmp	r6, #1
   6b274:	blt	6b2f8 <Mat_VarSetStructFieldByName+0xe4>
   6b278:	str	r5, [sp, #4]
   6b27c:	ldr	r5, [r0, #8]
   6b280:	mov	r7, #0
   6b284:	ldr	r0, [r5, r7, lsl #2]
   6b288:	mov	r1, r4
   6b28c:	bl	17b0 <strcmp@plt>
   6b290:	cmp	r0, #0
   6b294:	beq	6b2ac <Mat_VarSetStructFieldByName+0x98>
   6b298:	add	r7, r7, #1
   6b29c:	cmp	r6, r7
   6b2a0:	bne	6b284 <Mat_VarSetStructFieldByName+0x70>
   6b2a4:	mov	sl, #0
   6b2a8:	b	6b2f8 <Mat_VarSetStructFieldByName+0xe4>
   6b2ac:	ldr	r0, [sp, #8]
   6b2b0:	ldr	r4, [sp, #4]
   6b2b4:	mov	sl, #0
   6b2b8:	cmp	r0, r9
   6b2bc:	bls	6b2f8 <Mat_VarSetStructFieldByName+0xe4>
   6b2c0:	ldr	r1, [r8, #40]	; 0x28
   6b2c4:	mul	r0, r6, r9
   6b2c8:	add	r0, r1, r0, lsl #2
   6b2cc:	ldr	sl, [r0, r7, lsl #2]
   6b2d0:	str	r4, [r0, r7, lsl #2]
   6b2d4:	ldr	r0, [r4, #36]	; 0x24
   6b2d8:	cmp	r0, #0
   6b2dc:	beq	6b2e4 <Mat_VarSetStructFieldByName+0xd0>
   6b2e0:	bl	1804 <free@plt>
   6b2e4:	ldr	r0, [r8, #52]	; 0x34
   6b2e8:	ldr	r0, [r0, #8]
   6b2ec:	ldr	r0, [r0, r7, lsl #2]
   6b2f0:	bl	1864 <strdup@plt>
   6b2f4:	str	r0, [r4, #36]	; 0x24
   6b2f8:	mov	r0, sl
   6b2fc:	sub	sp, fp, #28
   6b300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0006b304 <__aeabi_drsub>:
   6b304:	eor	r1, r1, #-2147483648	; 0x80000000
   6b308:	b	6b310 <__adddf3>

0006b30c <__aeabi_dsub>:
   6b30c:	eor	r3, r3, #-2147483648	; 0x80000000

0006b310 <__adddf3>:
   6b310:	push	{r4, r5, lr}
   6b314:	lsl	r4, r1, #1
   6b318:	lsl	r5, r3, #1
   6b31c:	teq	r4, r5
   6b320:	teqeq	r0, r2
   6b324:	orrsne	ip, r4, r0
   6b328:	orrsne	ip, r5, r2
   6b32c:	mvnsne	ip, r4, asr #21
   6b330:	mvnsne	ip, r5, asr #21
   6b334:	beq	6b520 <__adddf3+0x210>
   6b338:	lsr	r4, r4, #21
   6b33c:	rsbs	r5, r4, r5, lsr #21
   6b340:	rsblt	r5, r5, #0
   6b344:	ble	6b364 <__adddf3+0x54>
   6b348:	add	r4, r4, r5
   6b34c:	eor	r2, r0, r2
   6b350:	eor	r3, r1, r3
   6b354:	eor	r0, r2, r0
   6b358:	eor	r1, r3, r1
   6b35c:	eor	r2, r0, r2
   6b360:	eor	r3, r1, r3
   6b364:	cmp	r5, #54	; 0x36
   6b368:	pophi	{r4, r5, pc}
   6b36c:	tst	r1, #-2147483648	; 0x80000000
   6b370:	lsl	r1, r1, #12
   6b374:	mov	ip, #1048576	; 0x100000
   6b378:	orr	r1, ip, r1, lsr #12
   6b37c:	beq	6b388 <__adddf3+0x78>
   6b380:	rsbs	r0, r0, #0
   6b384:	rsc	r1, r1, #0
   6b388:	tst	r3, #-2147483648	; 0x80000000
   6b38c:	lsl	r3, r3, #12
   6b390:	orr	r3, ip, r3, lsr #12
   6b394:	beq	6b3a0 <__adddf3+0x90>
   6b398:	rsbs	r2, r2, #0
   6b39c:	rsc	r3, r3, #0
   6b3a0:	teq	r4, r5
   6b3a4:	beq	6b508 <__adddf3+0x1f8>
   6b3a8:	sub	r4, r4, #1
   6b3ac:	rsbs	lr, r5, #32
   6b3b0:	blt	6b3cc <__adddf3+0xbc>
   6b3b4:	lsl	ip, r2, lr
   6b3b8:	adds	r0, r0, r2, lsr r5
   6b3bc:	adc	r1, r1, #0
   6b3c0:	adds	r0, r0, r3, lsl lr
   6b3c4:	adcs	r1, r1, r3, asr r5
   6b3c8:	b	6b3e8 <__adddf3+0xd8>
   6b3cc:	sub	r5, r5, #32
   6b3d0:	add	lr, lr, #32
   6b3d4:	cmp	r2, #1
   6b3d8:	lsl	ip, r3, lr
   6b3dc:	orrcs	ip, ip, #2
   6b3e0:	adds	r0, r0, r3, asr r5
   6b3e4:	adcs	r1, r1, r3, asr #31
   6b3e8:	and	r5, r1, #-2147483648	; 0x80000000
   6b3ec:	bpl	6b3fc <__adddf3+0xec>
   6b3f0:	rsbs	ip, ip, #0
   6b3f4:	rscs	r0, r0, #0
   6b3f8:	rsc	r1, r1, #0
   6b3fc:	cmp	r1, #1048576	; 0x100000
   6b400:	bcc	6b440 <__adddf3+0x130>
   6b404:	cmp	r1, #2097152	; 0x200000
   6b408:	bcc	6b428 <__adddf3+0x118>
   6b40c:	lsrs	r1, r1, #1
   6b410:	rrxs	r0, r0
   6b414:	rrx	ip, ip
   6b418:	add	r4, r4, #1
   6b41c:	lsl	r2, r4, #21
   6b420:	cmn	r2, #4194304	; 0x400000
   6b424:	bcs	6b580 <__adddf3+0x270>
   6b428:	cmp	ip, #-2147483648	; 0x80000000
   6b42c:	lsrseq	ip, r0, #1
   6b430:	adcs	r0, r0, #0
   6b434:	adc	r1, r1, r4, lsl #20
   6b438:	orr	r1, r1, r5
   6b43c:	pop	{r4, r5, pc}
   6b440:	lsls	ip, ip, #1
   6b444:	adcs	r0, r0, r0
   6b448:	adc	r1, r1, r1
   6b44c:	tst	r1, #1048576	; 0x100000
   6b450:	sub	r4, r4, #1
   6b454:	bne	6b428 <__adddf3+0x118>
   6b458:	teq	r1, #0
   6b45c:	moveq	r1, r0
   6b460:	moveq	r0, #0
   6b464:	clz	r3, r1
   6b468:	addeq	r3, r3, #32
   6b46c:	sub	r3, r3, #11
   6b470:	subs	r2, r3, #32
   6b474:	bge	6b498 <__adddf3+0x188>
   6b478:	adds	r2, r2, #12
   6b47c:	ble	6b494 <__adddf3+0x184>
   6b480:	add	ip, r2, #20
   6b484:	rsb	r2, r2, #12
   6b488:	lsl	r0, r1, ip
   6b48c:	lsr	r1, r1, r2
   6b490:	b	6b4a8 <__adddf3+0x198>
   6b494:	add	r2, r2, #20
   6b498:	rsble	ip, r2, #32
   6b49c:	lsl	r1, r1, r2
   6b4a0:	orrle	r1, r1, r0, lsr ip
   6b4a4:	lslle	r0, r0, r2
   6b4a8:	subs	r4, r4, r3
   6b4ac:	addge	r1, r1, r4, lsl #20
   6b4b0:	orrge	r1, r1, r5
   6b4b4:	popge	{r4, r5, pc}
   6b4b8:	mvn	r4, r4
   6b4bc:	subs	r4, r4, #31
   6b4c0:	bge	6b4fc <__adddf3+0x1ec>
   6b4c4:	adds	r4, r4, #12
   6b4c8:	bgt	6b4e4 <__adddf3+0x1d4>
   6b4cc:	add	r4, r4, #20
   6b4d0:	rsb	r2, r4, #32
   6b4d4:	lsr	r0, r0, r4
   6b4d8:	orr	r0, r0, r1, lsl r2
   6b4dc:	orr	r1, r5, r1, lsr r4
   6b4e0:	pop	{r4, r5, pc}
   6b4e4:	rsb	r4, r4, #12
   6b4e8:	rsb	r2, r4, #32
   6b4ec:	lsr	r0, r0, r2
   6b4f0:	orr	r0, r0, r1, lsl r4
   6b4f4:	mov	r1, r5
   6b4f8:	pop	{r4, r5, pc}
   6b4fc:	lsr	r0, r1, r4
   6b500:	mov	r1, r5
   6b504:	pop	{r4, r5, pc}
   6b508:	teq	r4, #0
   6b50c:	eor	r3, r3, #1048576	; 0x100000
   6b510:	eoreq	r1, r1, #1048576	; 0x100000
   6b514:	addeq	r4, r4, #1
   6b518:	subne	r5, r5, #1
   6b51c:	b	6b3a8 <__adddf3+0x98>
   6b520:	mvns	ip, r4, asr #21
   6b524:	mvnsne	ip, r5, asr #21
   6b528:	beq	6b590 <__adddf3+0x280>
   6b52c:	teq	r4, r5
   6b530:	teqeq	r0, r2
   6b534:	beq	6b548 <__adddf3+0x238>
   6b538:	orrs	ip, r4, r0
   6b53c:	moveq	r1, r3
   6b540:	moveq	r0, r2
   6b544:	pop	{r4, r5, pc}
   6b548:	teq	r1, r3
   6b54c:	movne	r1, #0
   6b550:	movne	r0, #0
   6b554:	popne	{r4, r5, pc}
   6b558:	lsrs	ip, r4, #21
   6b55c:	bne	6b570 <__adddf3+0x260>
   6b560:	lsls	r0, r0, #1
   6b564:	adcs	r1, r1, r1
   6b568:	orrcs	r1, r1, #-2147483648	; 0x80000000
   6b56c:	pop	{r4, r5, pc}
   6b570:	adds	r4, r4, #4194304	; 0x400000
   6b574:	addcc	r1, r1, #1048576	; 0x100000
   6b578:	popcc	{r4, r5, pc}
   6b57c:	and	r5, r1, #-2147483648	; 0x80000000
   6b580:	orr	r1, r5, #2130706432	; 0x7f000000
   6b584:	orr	r1, r1, #15728640	; 0xf00000
   6b588:	mov	r0, #0
   6b58c:	pop	{r4, r5, pc}
   6b590:	mvns	ip, r4, asr #21
   6b594:	movne	r1, r3
   6b598:	movne	r0, r2
   6b59c:	mvnseq	ip, r5, asr #21
   6b5a0:	movne	r3, r1
   6b5a4:	movne	r2, r0
   6b5a8:	orrs	r4, r0, r1, lsl #12
   6b5ac:	orrseq	r5, r2, r3, lsl #12
   6b5b0:	teqeq	r1, r3
   6b5b4:	orrne	r1, r1, #524288	; 0x80000
   6b5b8:	pop	{r4, r5, pc}

0006b5bc <__aeabi_ui2d>:
   6b5bc:	teq	r0, #0
   6b5c0:	moveq	r1, #0
   6b5c4:	bxeq	lr
   6b5c8:	push	{r4, r5, lr}
   6b5cc:	mov	r4, #1024	; 0x400
   6b5d0:	add	r4, r4, #50	; 0x32
   6b5d4:	mov	r5, #0
   6b5d8:	mov	r1, #0
   6b5dc:	b	6b458 <__adddf3+0x148>

0006b5e0 <__aeabi_i2d>:
   6b5e0:	teq	r0, #0
   6b5e4:	moveq	r1, #0
   6b5e8:	bxeq	lr
   6b5ec:	push	{r4, r5, lr}
   6b5f0:	mov	r4, #1024	; 0x400
   6b5f4:	add	r4, r4, #50	; 0x32
   6b5f8:	ands	r5, r0, #-2147483648	; 0x80000000
   6b5fc:	rsbmi	r0, r0, #0
   6b600:	mov	r1, #0
   6b604:	b	6b458 <__adddf3+0x148>

0006b608 <__aeabi_f2d>:
   6b608:	lsls	r2, r0, #1
   6b60c:	asr	r1, r2, #3
   6b610:	rrx	r1, r1
   6b614:	lsl	r0, r2, #28
   6b618:	andsne	r3, r2, #-16777216	; 0xff000000
   6b61c:	teqne	r3, #-16777216	; 0xff000000
   6b620:	eorne	r1, r1, #939524096	; 0x38000000
   6b624:	bxne	lr
   6b628:	bics	r2, r2, #-16777216	; 0xff000000
   6b62c:	bxeq	lr
   6b630:	teq	r3, #-16777216	; 0xff000000
   6b634:	orreq	r1, r1, #524288	; 0x80000
   6b638:	bxeq	lr
   6b63c:	push	{r4, r5, lr}
   6b640:	mov	r4, #896	; 0x380
   6b644:	and	r5, r1, #-2147483648	; 0x80000000
   6b648:	bic	r1, r1, #-2147483648	; 0x80000000
   6b64c:	b	6b458 <__adddf3+0x148>

0006b650 <__aeabi_ul2d>:
   6b650:	orrs	r2, r0, r1
   6b654:	bxeq	lr
   6b658:	push	{r4, r5, lr}
   6b65c:	mov	r5, #0
   6b660:	b	6b680 <__aeabi_l2d+0x1c>

0006b664 <__aeabi_l2d>:
   6b664:	orrs	r2, r0, r1
   6b668:	bxeq	lr
   6b66c:	push	{r4, r5, lr}
   6b670:	ands	r5, r1, #-2147483648	; 0x80000000
   6b674:	bpl	6b680 <__aeabi_l2d+0x1c>
   6b678:	rsbs	r0, r0, #0
   6b67c:	rsc	r1, r1, #0
   6b680:	mov	r4, #1024	; 0x400
   6b684:	add	r4, r4, #50	; 0x32
   6b688:	lsrs	ip, r1, #22
   6b68c:	beq	6b3fc <__adddf3+0xec>
   6b690:	mov	r2, #3
   6b694:	lsrs	ip, ip, #3
   6b698:	addne	r2, r2, #3
   6b69c:	lsrs	ip, ip, #3
   6b6a0:	addne	r2, r2, #3
   6b6a4:	add	r2, r2, ip, lsr #3
   6b6a8:	rsb	r3, r2, #32
   6b6ac:	lsl	ip, r0, r3
   6b6b0:	lsr	r0, r0, r2
   6b6b4:	orr	r0, r0, r1, lsl r3
   6b6b8:	lsr	r1, r1, r2
   6b6bc:	add	r4, r4, r2
   6b6c0:	b	6b3fc <__adddf3+0xec>

0006b6c4 <__aeabi_frsub>:
   6b6c4:	eor	r0, r0, #-2147483648	; 0x80000000
   6b6c8:	b	6b6d0 <__addsf3>

0006b6cc <__aeabi_fsub>:
   6b6cc:	eor	r1, r1, #-2147483648	; 0x80000000

0006b6d0 <__addsf3>:
   6b6d0:	lsls	r2, r0, #1
   6b6d4:	lslsne	r3, r1, #1
   6b6d8:	teqne	r2, r3
   6b6dc:	mvnsne	ip, r2, asr #24
   6b6e0:	mvnsne	ip, r3, asr #24
   6b6e4:	beq	6b7dc <__addsf3+0x10c>
   6b6e8:	lsr	r2, r2, #24
   6b6ec:	rsbs	r3, r2, r3, lsr #24
   6b6f0:	addgt	r2, r2, r3
   6b6f4:	eorgt	r1, r0, r1
   6b6f8:	eorgt	r0, r1, r0
   6b6fc:	eorgt	r1, r0, r1
   6b700:	rsblt	r3, r3, #0
   6b704:	cmp	r3, #25
   6b708:	bxhi	lr
   6b70c:	tst	r0, #-2147483648	; 0x80000000
   6b710:	orr	r0, r0, #8388608	; 0x800000
   6b714:	bic	r0, r0, #-16777216	; 0xff000000
   6b718:	rsbne	r0, r0, #0
   6b71c:	tst	r1, #-2147483648	; 0x80000000
   6b720:	orr	r1, r1, #8388608	; 0x800000
   6b724:	bic	r1, r1, #-16777216	; 0xff000000
   6b728:	rsbne	r1, r1, #0
   6b72c:	teq	r2, r3
   6b730:	beq	6b7c4 <__addsf3+0xf4>
   6b734:	sub	r2, r2, #1
   6b738:	adds	r0, r0, r1, asr r3
   6b73c:	rsb	r3, r3, #32
   6b740:	lsl	r1, r1, r3
   6b744:	and	r3, r0, #-2147483648	; 0x80000000
   6b748:	bpl	6b754 <__addsf3+0x84>
   6b74c:	rsbs	r1, r1, #0
   6b750:	rsc	r0, r0, #0
   6b754:	cmp	r0, #8388608	; 0x800000
   6b758:	bcc	6b78c <__addsf3+0xbc>
   6b75c:	cmp	r0, #16777216	; 0x1000000
   6b760:	bcc	6b778 <__addsf3+0xa8>
   6b764:	lsrs	r0, r0, #1
   6b768:	rrx	r1, r1
   6b76c:	add	r2, r2, #1
   6b770:	cmp	r2, #254	; 0xfe
   6b774:	bcs	6b830 <__addsf3+0x160>
   6b778:	cmp	r1, #-2147483648	; 0x80000000
   6b77c:	adc	r0, r0, r2, lsl #23
   6b780:	biceq	r0, r0, #1
   6b784:	orr	r0, r0, r3
   6b788:	bx	lr
   6b78c:	lsls	r1, r1, #1
   6b790:	adc	r0, r0, r0
   6b794:	tst	r0, #8388608	; 0x800000
   6b798:	sub	r2, r2, #1
   6b79c:	bne	6b778 <__addsf3+0xa8>
   6b7a0:	clz	ip, r0
   6b7a4:	sub	ip, ip, #8
   6b7a8:	subs	r2, r2, ip
   6b7ac:	lsl	r0, r0, ip
   6b7b0:	addge	r0, r0, r2, lsl #23
   6b7b4:	rsblt	r2, r2, #0
   6b7b8:	orrge	r0, r0, r3
   6b7bc:	orrlt	r0, r3, r0, lsr r2
   6b7c0:	bx	lr
   6b7c4:	teq	r2, #0
   6b7c8:	eor	r1, r1, #8388608	; 0x800000
   6b7cc:	eoreq	r0, r0, #8388608	; 0x800000
   6b7d0:	addeq	r2, r2, #1
   6b7d4:	subne	r3, r3, #1
   6b7d8:	b	6b734 <__addsf3+0x64>
   6b7dc:	lsl	r3, r1, #1
   6b7e0:	mvns	ip, r2, asr #24
   6b7e4:	mvnsne	ip, r3, asr #24
   6b7e8:	beq	6b83c <__addsf3+0x16c>
   6b7ec:	teq	r2, r3
   6b7f0:	beq	6b800 <__addsf3+0x130>
   6b7f4:	teq	r2, #0
   6b7f8:	moveq	r0, r1
   6b7fc:	bx	lr
   6b800:	teq	r0, r1
   6b804:	movne	r0, #0
   6b808:	bxne	lr
   6b80c:	tst	r2, #-16777216	; 0xff000000
   6b810:	bne	6b820 <__addsf3+0x150>
   6b814:	lsls	r0, r0, #1
   6b818:	orrcs	r0, r0, #-2147483648	; 0x80000000
   6b81c:	bx	lr
   6b820:	adds	r2, r2, #33554432	; 0x2000000
   6b824:	addcc	r0, r0, #8388608	; 0x800000
   6b828:	bxcc	lr
   6b82c:	and	r3, r0, #-2147483648	; 0x80000000
   6b830:	orr	r0, r3, #2130706432	; 0x7f000000
   6b834:	orr	r0, r0, #8388608	; 0x800000
   6b838:	bx	lr
   6b83c:	mvns	r2, r2, asr #24
   6b840:	movne	r0, r1
   6b844:	mvnseq	r3, r3, asr #24
   6b848:	movne	r1, r0
   6b84c:	lsls	r2, r0, #9
   6b850:	lslseq	r3, r1, #9
   6b854:	teqeq	r0, r1
   6b858:	orrne	r0, r0, #4194304	; 0x400000
   6b85c:	bx	lr

0006b860 <__aeabi_ui2f>:
   6b860:	mov	r3, #0
   6b864:	b	6b870 <__aeabi_i2f+0x8>

0006b868 <__aeabi_i2f>:
   6b868:	ands	r3, r0, #-2147483648	; 0x80000000
   6b86c:	rsbmi	r0, r0, #0
   6b870:	movs	ip, r0
   6b874:	bxeq	lr
   6b878:	orr	r3, r3, #1258291200	; 0x4b000000
   6b87c:	mov	r1, r0
   6b880:	mov	r0, #0
   6b884:	b	6b8c8 <__aeabi_l2f+0x30>

0006b888 <__aeabi_ul2f>:
   6b888:	orrs	r2, r0, r1
   6b88c:	bxeq	lr
   6b890:	mov	r3, #0
   6b894:	b	6b8b0 <__aeabi_l2f+0x18>

0006b898 <__aeabi_l2f>:
   6b898:	orrs	r2, r0, r1
   6b89c:	bxeq	lr
   6b8a0:	ands	r3, r1, #-2147483648	; 0x80000000
   6b8a4:	bpl	6b8b0 <__aeabi_l2f+0x18>
   6b8a8:	rsbs	r0, r0, #0
   6b8ac:	rsc	r1, r1, #0
   6b8b0:	movs	ip, r1
   6b8b4:	moveq	ip, r0
   6b8b8:	moveq	r1, r0
   6b8bc:	moveq	r0, #0
   6b8c0:	orr	r3, r3, #1526726656	; 0x5b000000
   6b8c4:	subeq	r3, r3, #268435456	; 0x10000000
   6b8c8:	sub	r3, r3, #8388608	; 0x800000
   6b8cc:	clz	r2, ip
   6b8d0:	subs	r2, r2, #8
   6b8d4:	sub	r3, r3, r2, lsl #23
   6b8d8:	blt	6b8f8 <__aeabi_l2f+0x60>
   6b8dc:	add	r3, r3, r1, lsl r2
   6b8e0:	lsl	ip, r0, r2
   6b8e4:	rsb	r2, r2, #32
   6b8e8:	cmp	ip, #-2147483648	; 0x80000000
   6b8ec:	adc	r0, r3, r0, lsr r2
   6b8f0:	biceq	r0, r0, #1
   6b8f4:	bx	lr
   6b8f8:	add	r2, r2, #32
   6b8fc:	lsl	ip, r1, r2
   6b900:	rsb	r2, r2, #32
   6b904:	orrs	r0, r0, ip, lsl #1
   6b908:	adc	r0, r3, r1, lsr r2
   6b90c:	biceq	r0, r0, ip, lsr #31
   6b910:	bx	lr

0006b914 <__aeabi_f2lz>:
   6b914:	vmov	s15, r0
   6b918:	vcmpe.f32	s15, #0.0
   6b91c:	vmrs	APSR_nzcv, fpscr
   6b920:	bmi	6b928 <__aeabi_f2lz+0x14>
   6b924:	b	6b970 <__aeabi_f2ulz>
   6b928:	push	{r4, lr}
   6b92c:	eor	r0, r0, #-2147483648	; 0x80000000
   6b930:	bl	6b970 <__aeabi_f2ulz>
   6b934:	rsbs	r0, r0, #0
   6b938:	rsc	r1, r1, #0
   6b93c:	pop	{r4, pc}

0006b940 <__aeabi_d2lz>:
   6b940:	vmov	d7, r0, r1
   6b944:	vcmpe.f64	d7, #0.0
   6b948:	vmrs	APSR_nzcv, fpscr
   6b94c:	bmi	6b954 <__aeabi_d2lz+0x14>
   6b950:	b	6b9b0 <__aeabi_d2ulz>
   6b954:	push	{r4, lr}
   6b958:	eor	r1, r1, #-2147483648	; 0x80000000
   6b95c:	bl	6b9b0 <__aeabi_d2ulz>
   6b960:	rsbs	r0, r0, #0
   6b964:	rsc	r1, r1, #0
   6b968:	pop	{r4, pc}
   6b96c:	andeq	r0, r0, r0

0006b970 <__aeabi_f2ulz>:
   6b970:	vmov	s15, r0
   6b974:	vldr	d5, [pc, #36]	; 6b9a0 <__aeabi_f2ulz+0x30>
   6b978:	vcvt.f64.f32	d6, s15
   6b97c:	vldr	d7, [pc, #36]	; 6b9a8 <__aeabi_f2ulz+0x38>
   6b980:	vmul.f64	d7, d6, d7
   6b984:	vcvt.u32.f64	s14, d7
   6b988:	vcvt.f64.u32	d4, s14
   6b98c:	vmov	r1, s14
   6b990:	vmls.f64	d6, d4, d5
   6b994:	vcvt.u32.f64	s15, d6
   6b998:	vmov	r0, s15
   6b99c:	bx	lr
   6b9a0:	.word	0x00000000
   6b9a4:	.word	0x41f00000
   6b9a8:	.word	0x00000000
   6b9ac:	.word	0x3df00000

0006b9b0 <__aeabi_d2ulz>:
   6b9b0:	vmov	d6, r0, r1
   6b9b4:	vldr	d7, [pc, #36]	; 6b9e0 <__aeabi_d2ulz+0x30>
   6b9b8:	vldr	d5, [pc, #40]	; 6b9e8 <__aeabi_d2ulz+0x38>
   6b9bc:	vmul.f64	d7, d6, d7
   6b9c0:	vcvt.u32.f64	s14, d7
   6b9c4:	vcvt.f64.u32	d4, s14
   6b9c8:	vmov	r1, s14
   6b9cc:	vmls.f64	d6, d4, d5
   6b9d0:	vcvt.u32.f64	s15, d6
   6b9d4:	vmov	r0, s15
   6b9d8:	bx	lr
   6b9dc:	nop			; (mov r0, r0)
   6b9e0:	.word	0x00000000
   6b9e4:	.word	0x3df00000
   6b9e8:	.word	0x00000000
   6b9ec:	.word	0x41f00000

Disassembly of section .fini:

0006b9f0 <_fini>:
   6b9f0:	push	{r3, lr}
   6b9f4:	pop	{r3, pc}
