
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00011168 <.init>:
   11168:	push	{r3, lr}
   1116c:	bl	114f4 <dcngettext@plt+0x48>
   11170:	pop	{r3, pc}

Disassembly of section .plt:

00011174 <calloc@plt-0x14>:
   11174:	push	{lr}		; (str lr, [sp, #-4]!)
   11178:	ldr	lr, [pc, #4]	; 11184 <calloc@plt-0x4>
   1117c:	add	lr, pc, lr
   11180:	ldr	pc, [lr, #8]!
   11184:	andeq	r7, r1, ip, ror lr

00011188 <calloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3708]!	; 0xe7c

00011194 <fputs_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3700]!	; 0xe74

000111a0 <gmtime_r@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111ac <strcmp@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3684]!	; 0xe64

000111b8 <mktime@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111c4 <fflush@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3668]!	; 0xe54

000111d0 <utmpxname@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3660]!	; 0xe4c

000111dc <free@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3652]!	; 0xe44

000111e8 <_exit@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3644]!	; 0xe3c

000111f4 <memcpy@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3636]!	; 0xe34

00011200 <mbsinit@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3628]!	; 0xe2c

0001120c <time@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3620]!	; 0xe24

00011218 <memcmp@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3612]!	; 0xe1c

00011224 <dcgettext@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3604]!	; 0xe14

00011230 <setutxent@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3596]!	; 0xe0c

0001123c <realloc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3588]!	; 0xe04

00011248 <localtime_r@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3580]!	; 0xdfc

00011254 <textdomain@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011260 <iswprint@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3564]!	; 0xdec

0001126c <tzset@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3556]!	; 0xde4

00011278 <fwrite@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3548]!	; 0xddc

00011284 <lseek64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011290 <__ctype_get_mb_cur_max@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3532]!	; 0xdcc

0001129c <__fpending@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112a8 <mbrtowc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3516]!	; 0xdbc

000112b4 <error@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c0 <getenv@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3500]!	; 0xdac

000112cc <malloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3492]!	; 0xda4

000112d8 <__libc_start_main@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112e4 <strftime@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3476]!	; 0xd94

000112f0 <__freading@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112fc <localtime@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3460]!	; 0xd84

00011308 <__ctype_tolower_loc@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3452]!	; 0xd7c

00011314 <__ctype_toupper_loc@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3444]!	; 0xd74

00011320 <__gmon_start__@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3436]!	; 0xd6c

0001132c <getopt_long@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3428]!	; 0xd64

00011338 <kill@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3420]!	; 0xd5c

00011344 <__ctype_b_loc@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3412]!	; 0xd54

00011350 <exit@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3404]!	; 0xd4c

0001135c <strlen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3396]!	; 0xd44

00011368 <setenv@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3388]!	; 0xd3c

00011374 <__errno_location@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3380]!	; 0xd34

00011380 <__cxa_atexit@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3372]!	; 0xd2c

0001138c <memset@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3364]!	; 0xd24

00011398 <strncpy@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3356]!	; 0xd1c

000113a4 <__printf_chk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3348]!	; 0xd14

000113b0 <fileno@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3340]!	; 0xd0c

000113bc <__fprintf_chk@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3332]!	; 0xd04

000113c8 <fclose@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113d4 <fseeko64@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e0 <getloadavg@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3308]!	; 0xcec

000113ec <strtod_l@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3300]!	; 0xce4

000113f8 <endutxent@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3292]!	; 0xcdc

00011404 <__overflow@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011410 <setlocale@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3276]!	; 0xccc

0001141c <strrchr@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3268]!	; 0xcc4

00011428 <nl_langinfo@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3260]!	; 0xcbc

00011434 <fputc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #94208	; 0x17000
   1143c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011440 <newlocale@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #94208	; 0x17000
   11448:	ldr	pc, [ip, #3244]!	; 0xcac

0001144c <timegm@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #94208	; 0x17000
   11454:	ldr	pc, [ip, #3236]!	; 0xca4

00011458 <fopen64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #94208	; 0x17000
   11460:	ldr	pc, [ip, #3228]!	; 0xc9c

00011464 <fgets_unlocked@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #94208	; 0x17000
   1146c:	ldr	pc, [ip, #3220]!	; 0xc94

00011470 <bindtextdomain@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #94208	; 0x17000
   11478:	ldr	pc, [ip, #3212]!	; 0xc8c

0001147c <unsetenv@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #94208	; 0x17000
   11484:	ldr	pc, [ip, #3204]!	; 0xc84

00011488 <strncmp@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #94208	; 0x17000
   11490:	ldr	pc, [ip, #3196]!	; 0xc7c

00011494 <abort@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #94208	; 0x17000
   1149c:	ldr	pc, [ip, #3188]!	; 0xc74

000114a0 <getutxent@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #94208	; 0x17000
   114a8:	ldr	pc, [ip, #3180]!	; 0xc6c

000114ac <dcngettext@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #94208	; 0x17000
   114b4:	ldr	pc, [ip, #3172]!	; 0xc64

Disassembly of section .text:

000114b8 <.text>:
   114b8:	mov	fp, #0
   114bc:	mov	lr, #0
   114c0:	pop	{r1}		; (ldr r1, [sp], #4)
   114c4:	mov	r2, sp
   114c8:	push	{r2}		; (str r2, [sp, #-4]!)
   114cc:	push	{r0}		; (str r0, [sp, #-4]!)
   114d0:	ldr	ip, [pc, #16]	; 114e8 <dcngettext@plt+0x3c>
   114d4:	push	{ip}		; (str ip, [sp, #-4]!)
   114d8:	ldr	r0, [pc, #12]	; 114ec <dcngettext@plt+0x40>
   114dc:	ldr	r3, [pc, #12]	; 114f0 <dcngettext@plt+0x44>
   114e0:	bl	112d8 <__libc_start_main@plt>
   114e4:	bl	11494 <abort@plt>
   114e8:	strdeq	r7, [r1], -r8
   114ec:	andeq	r1, r1, r0, asr #16
   114f0:	muleq	r1, r8, r7
   114f4:	ldr	r3, [pc, #20]	; 11510 <dcngettext@plt+0x64>
   114f8:	ldr	r2, [pc, #20]	; 11514 <dcngettext@plt+0x68>
   114fc:	add	r3, pc, r3
   11500:	ldr	r2, [r3, r2]
   11504:	cmp	r2, #0
   11508:	bxeq	lr
   1150c:	b	11320 <__gmon_start__@plt>
   11510:	strdeq	r7, [r1], -ip
   11514:	andeq	r0, r0, ip, lsl r1
   11518:	ldr	r0, [pc, #24]	; 11538 <dcngettext@plt+0x8c>
   1151c:	ldr	r3, [pc, #24]	; 1153c <dcngettext@plt+0x90>
   11520:	cmp	r3, r0
   11524:	bxeq	lr
   11528:	ldr	r3, [pc, #16]	; 11540 <dcngettext@plt+0x94>
   1152c:	cmp	r3, #0
   11530:	bxeq	lr
   11534:	bx	r3
   11538:	andeq	r9, r2, r0, ror r1
   1153c:	andeq	r9, r2, r0, ror r1
   11540:	andeq	r0, r0, r0
   11544:	ldr	r0, [pc, #36]	; 11570 <dcngettext@plt+0xc4>
   11548:	ldr	r1, [pc, #36]	; 11574 <dcngettext@plt+0xc8>
   1154c:	sub	r1, r1, r0
   11550:	asr	r1, r1, #2
   11554:	add	r1, r1, r1, lsr #31
   11558:	asrs	r1, r1, #1
   1155c:	bxeq	lr
   11560:	ldr	r3, [pc, #16]	; 11578 <dcngettext@plt+0xcc>
   11564:	cmp	r3, #0
   11568:	bxeq	lr
   1156c:	bx	r3
   11570:	andeq	r9, r2, r0, ror r1
   11574:	andeq	r9, r2, r0, ror r1
   11578:	andeq	r0, r0, r0
   1157c:	push	{r4, lr}
   11580:	ldr	r4, [pc, #24]	; 115a0 <dcngettext@plt+0xf4>
   11584:	ldrb	r3, [r4]
   11588:	cmp	r3, #0
   1158c:	popne	{r4, pc}
   11590:	bl	11518 <dcngettext@plt+0x6c>
   11594:	mov	r3, #1
   11598:	strb	r3, [r4]
   1159c:	pop	{r4, pc}
   115a0:	andeq	r9, r2, ip, lsl #3
   115a4:	b	11544 <dcngettext@plt+0x98>
   115a8:	push	{fp, lr}
   115ac:	mov	fp, sp
   115b0:	sub	sp, sp, #56	; 0x38
   115b4:	mov	r4, r0
   115b8:	cmp	r0, #0
   115bc:	bne	117fc <dcngettext@plt+0x350>
   115c0:	movw	r1, #30795	; 0x784b
   115c4:	mov	r0, #0
   115c8:	mov	r2, #5
   115cc:	movt	r1, #1
   115d0:	bl	11224 <dcgettext@plt>
   115d4:	mov	r1, r0
   115d8:	movw	r0, #37276	; 0x919c
   115dc:	movt	r0, #2
   115e0:	ldr	r2, [r0]
   115e4:	mov	r0, #1
   115e8:	bl	113a4 <__printf_chk@plt>
   115ec:	movw	r1, #30825	; 0x7869
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	11224 <dcgettext@plt>
   11600:	mov	r1, r0
   11604:	mov	r0, #1
   11608:	bl	113a4 <__printf_chk@plt>
   1160c:	movw	r1, #31010	; 0x7922
   11610:	mov	r0, #0
   11614:	mov	r2, #5
   11618:	movt	r1, #1
   1161c:	bl	11224 <dcgettext@plt>
   11620:	mov	r1, r0
   11624:	mov	r0, #1
   11628:	bl	113a4 <__printf_chk@plt>
   1162c:	movw	r1, #31094	; 0x7976
   11630:	mov	r0, #0
   11634:	mov	r2, #5
   11638:	movt	r1, #1
   1163c:	bl	11224 <dcgettext@plt>
   11640:	movw	r2, #31153	; 0x79b1
   11644:	movw	r3, #31167	; 0x79bf
   11648:	mov	r1, r0
   1164c:	mov	r0, #1
   11650:	movt	r2, #1
   11654:	movt	r3, #1
   11658:	bl	113a4 <__printf_chk@plt>
   1165c:	movw	r1, #31181	; 0x79cd
   11660:	mov	r0, #0
   11664:	mov	r2, #5
   11668:	movt	r1, #1
   1166c:	bl	11224 <dcgettext@plt>
   11670:	movw	r7, #37252	; 0x9184
   11674:	movt	r7, #2
   11678:	ldr	r1, [r7]
   1167c:	bl	11194 <fputs_unlocked@plt>
   11680:	movw	r1, #31226	; 0x79fa
   11684:	mov	r0, #0
   11688:	mov	r2, #5
   1168c:	movt	r1, #1
   11690:	bl	11224 <dcgettext@plt>
   11694:	ldr	r1, [r7]
   11698:	bl	11194 <fputs_unlocked@plt>
   1169c:	movw	r0, #31888	; 0x7c90
   116a0:	mov	r2, #48	; 0x30
   116a4:	mov	r6, sp
   116a8:	movw	r5, #31697	; 0x7bd1
   116ac:	movt	r0, #1
   116b0:	movt	r5, #1
   116b4:	add	r1, r0, #32
   116b8:	add	r3, r0, #16
   116bc:	vld1.64	{d18-d19}, [r0], r2
   116c0:	vld1.64	{d16-d17}, [r1]
   116c4:	vld1.64	{d20-d21}, [r3]
   116c8:	add	r1, r6, #32
   116cc:	vldr	d22, [r0]
   116d0:	add	r0, r6, #16
   116d4:	vst1.64	{d16-d17}, [r1]
   116d8:	movw	r1, #31380	; 0x7a94
   116dc:	vst1.64	{d20-d21}, [r0]
   116e0:	mov	r0, r6
   116e4:	vst1.64	{d18-d19}, [r0], r2
   116e8:	movt	r1, #1
   116ec:	vstr	d22, [r0]
   116f0:	mov	r0, r5
   116f4:	bl	111ac <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	ldrne	r1, [r6, #8]!
   11700:	cmpne	r1, #0
   11704:	bne	116f0 <dcngettext@plt+0x244>
   11708:	ldr	r6, [r6, #4]
   1170c:	movw	r1, #31475	; 0x7af3
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	11224 <dcgettext@plt>
   11720:	movw	r2, #31304	; 0x7a48
   11724:	movw	r3, #31498	; 0x7b0a
   11728:	mov	r1, r0
   1172c:	mov	r0, #1
   11730:	movt	r2, #1
   11734:	movt	r3, #1
   11738:	bl	113a4 <__printf_chk@plt>
   1173c:	cmp	r6, #0
   11740:	mov	r0, #5
   11744:	mov	r1, #0
   11748:	moveq	r6, r5
   1174c:	bl	11410 <setlocale@plt>
   11750:	cmp	r0, #0
   11754:	beq	1178c <dcngettext@plt+0x2e0>
   11758:	movw	r1, #31538	; 0x7b32
   1175c:	mov	r2, #3
   11760:	movt	r1, #1
   11764:	bl	11488 <strncmp@plt>
   11768:	cmp	r0, #0
   1176c:	beq	1178c <dcngettext@plt+0x2e0>
   11770:	movw	r1, #31542	; 0x7b36
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	movt	r1, #1
   11780:	bl	11224 <dcgettext@plt>
   11784:	ldr	r1, [r7]
   11788:	bl	11194 <fputs_unlocked@plt>
   1178c:	movw	r1, #31613	; 0x7b7d
   11790:	mov	r0, #0
   11794:	mov	r2, #5
   11798:	movt	r1, #1
   1179c:	bl	11224 <dcgettext@plt>
   117a0:	movw	r2, #31498	; 0x7b0a
   117a4:	mov	r1, r0
   117a8:	mov	r0, #1
   117ac:	mov	r3, r5
   117b0:	movt	r2, #1
   117b4:	bl	113a4 <__printf_chk@plt>
   117b8:	movw	r1, #31640	; 0x7b98
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #1
   117c8:	bl	11224 <dcgettext@plt>
   117cc:	movw	r3, #31152	; 0x79b0
   117d0:	mov	r1, r0
   117d4:	movw	r0, #31408	; 0x7ab0
   117d8:	cmp	r6, r5
   117dc:	mov	r2, r6
   117e0:	movt	r0, #1
   117e4:	movt	r3, #1
   117e8:	moveq	r3, r0
   117ec:	mov	r0, #1
   117f0:	bl	113a4 <__printf_chk@plt>
   117f4:	mov	r0, r4
   117f8:	bl	11350 <exit@plt>
   117fc:	movw	r0, #37248	; 0x9180
   11800:	movw	r1, #30756	; 0x7824
   11804:	mov	r2, #5
   11808:	movt	r0, #2
   1180c:	movt	r1, #1
   11810:	ldr	r5, [r0]
   11814:	mov	r0, #0
   11818:	bl	11224 <dcgettext@plt>
   1181c:	mov	r2, r0
   11820:	movw	r0, #37276	; 0x919c
   11824:	mov	r1, #1
   11828:	movt	r0, #2
   1182c:	ldr	r3, [r0]
   11830:	mov	r0, r5
   11834:	bl	113bc <__fprintf_chk@plt>
   11838:	mov	r0, r4
   1183c:	bl	11350 <exit@plt>
   11840:	push	{r4, r5, r6, sl, fp, lr}
   11844:	add	fp, sp, #16
   11848:	sub	sp, sp, #32
   1184c:	mov	r5, r0
   11850:	ldr	r0, [r1]
   11854:	mov	r4, r1
   11858:	bl	13c7c <dcngettext@plt+0x27d0>
   1185c:	movw	r1, #31152	; 0x79b0
   11860:	mov	r0, #6
   11864:	movt	r1, #1
   11868:	bl	11410 <setlocale@plt>
   1186c:	movw	r6, #31308	; 0x7a4c
   11870:	movw	r1, #31280	; 0x7a30
   11874:	movt	r6, #1
   11878:	movt	r1, #1
   1187c:	mov	r0, r6
   11880:	bl	11470 <bindtextdomain@plt>
   11884:	mov	r0, r6
   11888:	bl	11254 <textdomain@plt>
   1188c:	movw	r0, #7772	; 0x1e5c
   11890:	movt	r0, #1
   11894:	bl	177fc <dcngettext@plt+0x6350>
   11898:	movw	r0, #37160	; 0x9128
   1189c:	movw	r3, #31335	; 0x7a67
   118a0:	movw	r1, #5544	; 0x15a8
   118a4:	mov	r2, #1
   118a8:	movw	lr, #31351	; 0x7a77
   118ac:	movw	r6, #31318	; 0x7a56
   118b0:	mov	ip, #0
   118b4:	movt	r0, #2
   118b8:	movt	r3, #1
   118bc:	movt	r1, #1
   118c0:	movt	lr, #1
   118c4:	movt	r6, #1
   118c8:	ldr	r0, [r0]
   118cc:	stm	sp, {r0, r2}
   118d0:	movw	r2, #31697	; 0x7bd1
   118d4:	str	r3, [sp, #16]
   118d8:	movw	r3, #31304	; 0x7a48
   118dc:	str	r1, [sp, #8]
   118e0:	mov	r0, r5
   118e4:	mov	r1, r4
   118e8:	str	r6, [sp, #12]
   118ec:	str	lr, [sp, #20]
   118f0:	str	ip, [sp, #24]
   118f4:	movt	r2, #1
   118f8:	movt	r3, #1
   118fc:	bl	13bb4 <dcngettext@plt+0x2708>
   11900:	movw	r6, #37240	; 0x9178
   11904:	movt	r6, #2
   11908:	ldr	r0, [r6]
   1190c:	sub	r1, r5, r0
   11910:	cmp	r1, #1
   11914:	beq	11930 <dcngettext@plt+0x484>
   11918:	cmp	r1, #0
   1191c:	bne	1193c <dcngettext@plt+0x490>
   11920:	movw	r0, #31153	; 0x79b1
   11924:	mov	r1, #1
   11928:	movt	r0, #1
   1192c:	bl	11980 <dcngettext@plt+0x4d4>
   11930:	ldr	r0, [r4, r0, lsl #2]
   11934:	mov	r1, #0
   11938:	bl	11980 <dcngettext@plt+0x4d4>
   1193c:	movw	r1, #31363	; 0x7a83
   11940:	mov	r0, #0
   11944:	mov	r2, #5
   11948:	movt	r1, #1
   1194c:	bl	11224 <dcgettext@plt>
   11950:	mov	r5, r0
   11954:	ldr	r0, [r6]
   11958:	add	r0, r4, r0, lsl #2
   1195c:	ldr	r0, [r0, #4]
   11960:	bl	15bf8 <dcngettext@plt+0x474c>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	mov	r1, #0
   11970:	mov	r2, r5
   11974:	bl	112b4 <error@plt>
   11978:	mov	r0, #1
   1197c:	bl	115a8 <dcngettext@plt+0xfc>
   11980:	push	{fp, lr}
   11984:	mov	fp, sp
   11988:	sub	sp, sp, #8
   1198c:	mov	r4, r0
   11990:	mov	r0, #0
   11994:	mov	r3, r1
   11998:	add	r1, sp, #4
   1199c:	mov	r2, sp
   119a0:	str	r0, [sp]
   119a4:	mov	r0, r4
   119a8:	bl	15c78 <dcngettext@plt+0x47cc>
   119ac:	cmp	r0, #0
   119b0:	bne	119c8 <dcngettext@plt+0x51c>
   119b4:	ldr	r1, [sp]
   119b8:	ldr	r0, [sp, #4]
   119bc:	bl	119f8 <dcngettext@plt+0x54c>
   119c0:	mov	r0, #0
   119c4:	bl	11350 <exit@plt>
   119c8:	bl	11374 <__errno_location@plt>
   119cc:	ldr	r5, [r0]
   119d0:	mov	r0, #0
   119d4:	mov	r1, #3
   119d8:	mov	r2, r4
   119dc:	bl	1594c <dcngettext@plt+0x44a0>
   119e0:	movw	r2, #31977	; 0x7ce9
   119e4:	mov	r3, r0
   119e8:	mov	r0, #1
   119ec:	mov	r1, r5
   119f0:	movt	r2, #1
   119f4:	bl	112b4 <error@plt>
   119f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   119fc:	add	fp, sp, #24
   11a00:	sub	sp, sp, #16
   11a04:	sub	sp, sp, #8192	; 0x2000
   11a08:	mov	r5, r1
   11a0c:	movw	r1, #31842	; 0x7c62
   11a10:	mov	r6, r0
   11a14:	movw	r0, #31691	; 0x7bcb
   11a18:	movt	r0, #1
   11a1c:	movt	r1, #1
   11a20:	bl	11458 <fopen64@plt>
   11a24:	mov	r7, #0
   11a28:	cmp	r0, #0
   11a2c:	mov	r9, #0
   11a30:	beq	11aa8 <dcngettext@plt+0x5fc>
   11a34:	mov	r4, r0
   11a38:	add	r8, sp, #8
   11a3c:	mov	r1, #8192	; 0x2000
   11a40:	mov	r0, r8
   11a44:	mov	r2, r4
   11a48:	bl	11464 <fgets_unlocked@plt>
   11a4c:	mov	r9, #0
   11a50:	cmp	r0, r8
   11a54:	bne	11aa0 <dcngettext@plt+0x5f4>
   11a58:	sub	r1, fp, #32
   11a5c:	mov	r0, r8
   11a60:	bl	11dc8 <dcngettext@plt+0x91c>
   11a64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a68:	cmp	r8, r0
   11a6c:	beq	11a9c <dcngettext@plt+0x5f0>
   11a70:	vldr	d16, [pc, #840]	; 11dc0 <dcngettext@plt+0x914>
   11a74:	vcvt.s32.f64	s2, d0
   11a78:	mvn	r0, #0
   11a7c:	vmov	r9, s2
   11a80:	vcmpe.f64	d0, d16
   11a84:	vmrs	APSR_nzcv, fpscr
   11a88:	vcmpe.f64	d0, #0.0
   11a8c:	movpl	r9, r0
   11a90:	vmrs	APSR_nzcv, fpscr
   11a94:	movlt	r9, r0
   11a98:	b	11aa0 <dcngettext@plt+0x5f4>
   11a9c:	mov	r9, #0
   11aa0:	mov	r0, r4
   11aa4:	bl	11f48 <dcngettext@plt+0xa9c>
   11aa8:	cmp	r6, #0
   11aac:	mov	r4, #0
   11ab0:	beq	11af8 <dcngettext@plt+0x64c>
   11ab4:	mov	r4, #0
   11ab8:	mov	r7, #0
   11abc:	ldrb	r0, [r5, #44]	; 0x2c
   11ac0:	ldrh	r1, [r5]
   11ac4:	sub	r6, r6, #1
   11ac8:	cmp	r0, #0
   11acc:	sub	r2, r1, #7
   11ad0:	movwne	r0, #1
   11ad4:	cmp	r1, #2
   11ad8:	clz	r2, r2
   11adc:	ldreq	r7, [r5, #340]	; 0x154
   11ae0:	lsr	r2, r2, #5
   11ae4:	add	r5, r5, #384	; 0x180
   11ae8:	cmp	r6, #0
   11aec:	and	r0, r2, r0
   11af0:	add	r4, r4, r0
   11af4:	bne	11abc <dcngettext@plt+0x610>
   11af8:	mov	r0, #0
   11afc:	bl	1120c <time@plt>
   11b00:	cmp	r9, #0
   11b04:	str	r0, [fp, #-32]	; 0xffffffe0
   11b08:	beq	11c04 <dcngettext@plt+0x758>
   11b0c:	sub	r0, fp, #32
   11b10:	bl	112fc <localtime@plt>
   11b14:	cmp	r0, #0
   11b18:	beq	11c20 <dcngettext@plt+0x774>
   11b1c:	mov	r5, r0
   11b20:	movw	r0, #37252	; 0x9184
   11b24:	movw	r1, #31727	; 0x7bef
   11b28:	mov	r2, #5
   11b2c:	mov	r7, #0
   11b30:	movt	r0, #2
   11b34:	movt	r1, #1
   11b38:	ldr	r6, [r0]
   11b3c:	mov	r0, #0
   11b40:	bl	11224 <dcgettext@plt>
   11b44:	mov	r1, r0
   11b48:	mov	r0, r6
   11b4c:	mov	r2, r5
   11b50:	mov	r3, #0
   11b54:	str	r7, [sp]
   11b58:	bl	1204c <dcngettext@plt+0xba0>
   11b5c:	cmn	r9, #1
   11b60:	beq	11c48 <dcngettext@plt+0x79c>
   11b64:	movw	r0, #17671	; 0x4507
   11b68:	movt	r0, #49710	; 0xc22e
   11b6c:	smmla	r0, r9, r0, r9
   11b70:	asr	r1, r0, #16
   11b74:	add	r6, r1, r0, lsr #31
   11b78:	movw	r0, #44672	; 0xae80
   11b7c:	movw	r1, #46021	; 0xb3c5
   11b80:	movt	r0, #65534	; 0xfffe
   11b84:	movt	r1, #37282	; 0x91a2
   11b88:	mla	r0, r6, r0, r9
   11b8c:	smmla	r1, r0, r1, r0
   11b90:	asr	r2, r1, #11
   11b94:	add	r5, r2, r1, lsr #31
   11b98:	movw	r1, #61936	; 0xf1f0
   11b9c:	movt	r1, #65535	; 0xffff
   11ba0:	mla	r0, r5, r1, r0
   11ba4:	movw	r1, #34953	; 0x8889
   11ba8:	movt	r1, #34952	; 0x8888
   11bac:	smmla	r0, r0, r1, r0
   11bb0:	asr	r1, r0, #5
   11bb4:	add	r8, r1, r0, lsr #31
   11bb8:	movw	r0, #20864	; 0x5180
   11bbc:	movt	r0, #1
   11bc0:	cmp	r9, r0
   11bc4:	blt	11c6c <dcngettext@plt+0x7c0>
   11bc8:	movw	r1, #31772	; 0x7c1c
   11bcc:	movw	r2, #31795	; 0x7c33
   11bd0:	mov	r0, #5
   11bd4:	mov	r3, r6
   11bd8:	str	r0, [sp]
   11bdc:	movt	r1, #1
   11be0:	movt	r2, #1
   11be4:	mov	r0, #0
   11be8:	bl	114ac <dcngettext@plt>
   11bec:	mov	r1, r0
   11bf0:	str	r8, [sp]
   11bf4:	mov	r0, #1
   11bf8:	mov	r2, r6
   11bfc:	mov	r3, r5
   11c00:	b	11c90 <dcngettext@plt+0x7e4>
   11c04:	cmp	r7, #0
   11c08:	beq	11d94 <dcngettext@plt+0x8e8>
   11c0c:	sub	r9, r0, r7
   11c10:	sub	r0, fp, #32
   11c14:	bl	112fc <localtime@plt>
   11c18:	cmp	r0, #0
   11c1c:	bne	11b1c <dcngettext@plt+0x670>
   11c20:	movw	r1, #31739	; 0x7bfb
   11c24:	mov	r0, #0
   11c28:	mov	r2, #5
   11c2c:	movt	r1, #1
   11c30:	bl	11224 <dcgettext@plt>
   11c34:	mov	r1, r0
   11c38:	mov	r0, #1
   11c3c:	bl	113a4 <__printf_chk@plt>
   11c40:	cmn	r9, #1
   11c44:	bne	11b64 <dcngettext@plt+0x6b8>
   11c48:	movw	r1, #31750	; 0x7c06
   11c4c:	mov	r0, #0
   11c50:	mov	r2, #5
   11c54:	movt	r1, #1
   11c58:	bl	11224 <dcgettext@plt>
   11c5c:	mov	r1, r0
   11c60:	mov	r0, #1
   11c64:	bl	113a4 <__printf_chk@plt>
   11c68:	b	11c94 <dcngettext@plt+0x7e8>
   11c6c:	movw	r1, #31819	; 0x7c4b
   11c70:	mov	r0, #0
   11c74:	mov	r2, #5
   11c78:	movt	r1, #1
   11c7c:	bl	11224 <dcgettext@plt>
   11c80:	mov	r1, r0
   11c84:	mov	r0, #1
   11c88:	mov	r2, r5
   11c8c:	mov	r3, r8
   11c90:	bl	113a4 <__printf_chk@plt>
   11c94:	movw	r1, #31835	; 0x7c5b
   11c98:	movw	r2, #31844	; 0x7c64
   11c9c:	mov	r0, #5
   11ca0:	mov	r3, r4
   11ca4:	str	r0, [sp]
   11ca8:	movt	r1, #1
   11cac:	movt	r2, #1
   11cb0:	mov	r0, #0
   11cb4:	bl	114ac <dcngettext@plt>
   11cb8:	mov	r1, r0
   11cbc:	mov	r0, #1
   11cc0:	mov	r2, r4
   11cc4:	bl	113a4 <__printf_chk@plt>
   11cc8:	add	r0, sp, #8
   11ccc:	mov	r1, #3
   11cd0:	bl	113e0 <getloadavg@plt>
   11cd4:	cmn	r0, #1
   11cd8:	beq	11d50 <dcngettext@plt+0x8a4>
   11cdc:	mov	r4, r0
   11ce0:	cmp	r0, #1
   11ce4:	blt	11d7c <dcngettext@plt+0x8d0>
   11ce8:	movw	r1, #31854	; 0x7c6e
   11cec:	mov	r0, #0
   11cf0:	mov	r2, #5
   11cf4:	movt	r1, #1
   11cf8:	bl	11224 <dcgettext@plt>
   11cfc:	vldr	d16, [sp, #8]
   11d00:	mov	r1, r0
   11d04:	mov	r0, #1
   11d08:	vmov	r2, r3, d16
   11d0c:	bl	113a4 <__printf_chk@plt>
   11d10:	cmp	r4, #1
   11d14:	beq	11d50 <dcngettext@plt+0x8a4>
   11d18:	vldr	d16, [sp, #16]
   11d1c:	movw	r1, #31876	; 0x7c84
   11d20:	mov	r0, #1
   11d24:	movt	r1, #1
   11d28:	vmov	r2, r3, d16
   11d2c:	bl	113a4 <__printf_chk@plt>
   11d30:	cmp	r4, #3
   11d34:	blt	11d50 <dcngettext@plt+0x8a4>
   11d38:	vldr	d16, [sp, #24]
   11d3c:	movw	r1, #31876	; 0x7c84
   11d40:	mov	r0, #1
   11d44:	movt	r1, #1
   11d48:	vmov	r2, r3, d16
   11d4c:	bl	113a4 <__printf_chk@plt>
   11d50:	movw	r0, #37252	; 0x9184
   11d54:	movt	r0, #2
   11d58:	ldr	r0, [r0]
   11d5c:	ldr	r1, [r0, #20]
   11d60:	ldr	r2, [r0, #24]
   11d64:	cmp	r1, r2
   11d68:	bcs	11d84 <dcngettext@plt+0x8d8>
   11d6c:	add	r2, r1, #1
   11d70:	str	r2, [r0, #20]
   11d74:	mov	r0, #10
   11d78:	strb	r0, [r1]
   11d7c:	sub	sp, fp, #24
   11d80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d84:	mov	r1, #10
   11d88:	bl	11404 <__overflow@plt>
   11d8c:	sub	sp, fp, #24
   11d90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d94:	bl	11374 <__errno_location@plt>
   11d98:	ldr	r4, [r0]
   11d9c:	movw	r1, #31704	; 0x7bd8
   11da0:	mov	r0, #0
   11da4:	mov	r2, #5
   11da8:	movt	r1, #1
   11dac:	bl	11224 <dcgettext@plt>
   11db0:	mov	r2, r0
   11db4:	mov	r0, #1
   11db8:	mov	r1, r4
   11dbc:	bl	112b4 <error@plt>
   11dc0:			; <UNDEFINED> instruction: 0xffc00000
   11dc4:	ldrshmi	pc, [pc, #255]	; 11ecb <dcngettext@plt+0xa1f>	; <UNPREDICTABLE>
   11dc8:	push	{r4, r5, r6, sl, fp, lr}
   11dcc:	add	fp, sp, #16
   11dd0:	movw	r6, #37264	; 0x9190
   11dd4:	mov	r5, r0
   11dd8:	mov	r4, r1
   11ddc:	movt	r6, #2
   11de0:	ldr	r0, [r6]
   11de4:	cmp	r0, #0
   11de8:	beq	11e08 <dcngettext@plt+0x95c>
   11dec:	ldr	r2, [r6]
   11df0:	cmp	r2, #0
   11df4:	beq	11e2c <dcngettext@plt+0x980>
   11df8:	mov	r0, r5
   11dfc:	mov	r1, r4
   11e00:	pop	{r4, r5, r6, sl, fp, lr}
   11e04:	b	113ec <strtod_l@plt>
   11e08:	movw	r1, #31959	; 0x7cd7
   11e0c:	movw	r0, #8127	; 0x1fbf
   11e10:	mov	r2, #0
   11e14:	movt	r1, #1
   11e18:	bl	11440 <newlocale@plt>
   11e1c:	str	r0, [r6]
   11e20:	ldr	r2, [r6]
   11e24:	cmp	r2, #0
   11e28:	bne	11df8 <dcngettext@plt+0x94c>
   11e2c:	cmp	r4, #0
   11e30:	vmov.i32	d0, #0	; 0x00000000
   11e34:	strne	r5, [r4]
   11e38:	pop	{r4, r5, r6, sl, fp, pc}
   11e3c:	movw	r1, #37268	; 0x9194
   11e40:	movt	r1, #2
   11e44:	str	r0, [r1, #4]
   11e48:	bx	lr
   11e4c:	movw	r1, #37268	; 0x9194
   11e50:	movt	r1, #2
   11e54:	strb	r0, [r1]
   11e58:	bx	lr
   11e5c:	push	{r4, r5, r6, sl, fp, lr}
   11e60:	add	fp, sp, #16
   11e64:	sub	sp, sp, #8
   11e68:	movw	r0, #37252	; 0x9184
   11e6c:	movt	r0, #2
   11e70:	ldr	r0, [r0]
   11e74:	bl	17510 <dcngettext@plt+0x6064>
   11e78:	cmp	r0, #0
   11e7c:	beq	11ea4 <dcngettext@plt+0x9f8>
   11e80:	movw	r5, #37268	; 0x9194
   11e84:	movt	r5, #2
   11e88:	ldrb	r0, [r5]
   11e8c:	cmp	r0, #0
   11e90:	beq	11ed0 <dcngettext@plt+0xa24>
   11e94:	bl	11374 <__errno_location@plt>
   11e98:	ldr	r0, [r0]
   11e9c:	cmp	r0, #32
   11ea0:	bne	11ed0 <dcngettext@plt+0xa24>
   11ea4:	movw	r0, #37248	; 0x9180
   11ea8:	movt	r0, #2
   11eac:	ldr	r0, [r0]
   11eb0:	bl	17510 <dcngettext@plt+0x6064>
   11eb4:	cmp	r0, #0
   11eb8:	subeq	sp, fp, #16
   11ebc:	popeq	{r4, r5, r6, sl, fp, pc}
   11ec0:	movw	r0, #37164	; 0x912c
   11ec4:	movt	r0, #2
   11ec8:	ldr	r0, [r0]
   11ecc:	bl	111e8 <_exit@plt>
   11ed0:	movw	r1, #31961	; 0x7cd9
   11ed4:	mov	r0, #0
   11ed8:	mov	r2, #5
   11edc:	movt	r1, #1
   11ee0:	bl	11224 <dcgettext@plt>
   11ee4:	ldr	r6, [r5, #4]
   11ee8:	mov	r4, r0
   11eec:	bl	11374 <__errno_location@plt>
   11ef0:	ldr	r5, [r0]
   11ef4:	cmp	r6, #0
   11ef8:	bne	11f14 <dcngettext@plt+0xa68>
   11efc:	movw	r2, #31977	; 0x7ce9
   11f00:	mov	r0, #0
   11f04:	mov	r1, r5
   11f08:	mov	r3, r4
   11f0c:	movt	r2, #1
   11f10:	b	11f34 <dcngettext@plt+0xa88>
   11f14:	mov	r0, r6
   11f18:	bl	15870 <dcngettext@plt+0x43c4>
   11f1c:	movw	r2, #31973	; 0x7ce5
   11f20:	mov	r3, r0
   11f24:	str	r4, [sp]
   11f28:	mov	r0, #0
   11f2c:	mov	r1, r5
   11f30:	movt	r2, #1
   11f34:	bl	112b4 <error@plt>
   11f38:	movw	r0, #37164	; 0x912c
   11f3c:	movt	r0, #2
   11f40:	ldr	r0, [r0]
   11f44:	bl	111e8 <_exit@plt>
   11f48:	push	{r4, r5, r6, sl, fp, lr}
   11f4c:	add	fp, sp, #16
   11f50:	sub	sp, sp, #8
   11f54:	mov	r4, r0
   11f58:	bl	113b0 <fileno@plt>
   11f5c:	cmn	r0, #1
   11f60:	ble	11fd4 <dcngettext@plt+0xb28>
   11f64:	mov	r0, r4
   11f68:	bl	112f0 <__freading@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	11f9c <dcngettext@plt+0xaf0>
   11f74:	mov	r0, r4
   11f78:	bl	113b0 <fileno@plt>
   11f7c:	mov	r1, #1
   11f80:	mov	r2, #0
   11f84:	mov	r3, #0
   11f88:	str	r1, [sp]
   11f8c:	bl	11284 <lseek64@plt>
   11f90:	and	r0, r0, r1
   11f94:	cmn	r0, #1
   11f98:	beq	11fd4 <dcngettext@plt+0xb28>
   11f9c:	mov	r0, r4
   11fa0:	bl	11fe4 <dcngettext@plt+0xb38>
   11fa4:	cmp	r0, #0
   11fa8:	beq	11fd4 <dcngettext@plt+0xb28>
   11fac:	bl	11374 <__errno_location@plt>
   11fb0:	ldr	r6, [r0]
   11fb4:	mov	r5, r0
   11fb8:	mov	r0, r4
   11fbc:	bl	113c8 <fclose@plt>
   11fc0:	cmp	r6, #0
   11fc4:	strne	r6, [r5]
   11fc8:	mvnne	r0, #0
   11fcc:	sub	sp, fp, #16
   11fd0:	pop	{r4, r5, r6, sl, fp, pc}
   11fd4:	mov	r0, r4
   11fd8:	sub	sp, fp, #16
   11fdc:	pop	{r4, r5, r6, sl, fp, lr}
   11fe0:	b	113c8 <fclose@plt>
   11fe4:	push	{r4, sl, fp, lr}
   11fe8:	add	fp, sp, #8
   11fec:	sub	sp, sp, #8
   11ff0:	mov	r4, r0
   11ff4:	cmp	r0, #0
   11ff8:	beq	12014 <dcngettext@plt+0xb68>
   11ffc:	mov	r0, r4
   12000:	bl	112f0 <__freading@plt>
   12004:	cmp	r0, #0
   12008:	ldrbne	r0, [r4, #1]
   1200c:	tstne	r0, #1
   12010:	bne	12024 <dcngettext@plt+0xb78>
   12014:	mov	r0, r4
   12018:	sub	sp, fp, #8
   1201c:	pop	{r4, sl, fp, lr}
   12020:	b	111c4 <fflush@plt>
   12024:	mov	r0, #1
   12028:	mov	r2, #0
   1202c:	mov	r3, #0
   12030:	str	r0, [sp]
   12034:	mov	r0, r4
   12038:	bl	13a60 <dcngettext@plt+0x25b4>
   1203c:	mov	r0, r4
   12040:	sub	sp, fp, #8
   12044:	pop	{r4, sl, fp, lr}
   12048:	b	111c4 <fflush@plt>
   1204c:	push	{fp, lr}
   12050:	mov	fp, sp
   12054:	sub	sp, sp, #16
   12058:	str	r3, [sp, #8]
   1205c:	mvn	r3, #0
   12060:	str	r3, [sp, #4]
   12064:	mov	r3, #0
   12068:	str	r3, [sp]
   1206c:	ldr	r3, [fp, #8]
   12070:	str	r3, [sp, #12]
   12074:	mov	r3, #0
   12078:	bl	12084 <dcngettext@plt+0xbd8>
   1207c:	mov	sp, fp
   12080:	pop	{fp, pc}
   12084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12088:	add	fp, sp, #28
   1208c:	sub	sp, sp, #124	; 0x7c
   12090:	sub	sp, sp, #1024	; 0x400
   12094:	str	r3, [sp, #80]	; 0x50
   12098:	mov	r4, r2
   1209c:	mov	sl, r1
   120a0:	mov	r7, r0
   120a4:	bl	11374 <__errno_location@plt>
   120a8:	mov	r2, r4
   120ac:	movw	r3, #31152	; 0x79b0
   120b0:	str	r0, [sp, #60]	; 0x3c
   120b4:	ldr	r1, [r2, #8]!
   120b8:	movt	r3, #1
   120bc:	cmp	r1, #0
   120c0:	mov	r6, r1
   120c4:	movweq	r6, #12
   120c8:	cmp	r1, #12
   120cc:	subgt	r6, r1, #12
   120d0:	ldr	r1, [r2, #32]
   120d4:	cmp	r1, #0
   120d8:	movne	r3, r1
   120dc:	ldr	r1, [r0]
   120e0:	str	r3, [sp, #48]	; 0x30
   120e4:	ldrb	r3, [sl]
   120e8:	str	r1, [sp, #56]	; 0x38
   120ec:	cmp	r3, #0
   120f0:	beq	13a20 <dcngettext@plt+0x2574>
   120f4:	sub	r0, fp, #46	; 0x2e
   120f8:	mvn	r1, #13
   120fc:	ldr	r8, [fp, #12]
   12100:	str	r2, [sp, #40]	; 0x28
   12104:	str	r4, [sp, #72]	; 0x48
   12108:	str	r6, [sp, #36]	; 0x24
   1210c:	str	r7, [sp, #88]	; 0x58
   12110:	sub	r1, r1, r0
   12114:	str	r1, [sp, #28]
   12118:	add	r1, r0, #13
   1211c:	add	r0, r0, #14
   12120:	str	r1, [sp, #24]
   12124:	add	r1, sp, #96	; 0x60
   12128:	str	r0, [sp, #64]	; 0x40
   1212c:	add	r1, r1, #1
   12130:	str	r1, [sp, #44]	; 0x2c
   12134:	add	r1, r4, #12
   12138:	mov	r4, #0
   1213c:	str	r1, [sp, #32]
   12140:	sub	r1, fp, #51	; 0x33
   12144:	add	r2, r1, #3
   12148:	add	r0, r1, #2
   1214c:	str	r2, [sp, #52]	; 0x34
   12150:	str	r0, [sp, #68]	; 0x44
   12154:	uxtb	r1, r3
   12158:	cmp	r1, #37	; 0x25
   1215c:	bne	12178 <dcngettext@plt+0xccc>
   12160:	ldr	lr, [sp, #80]	; 0x50
   12164:	str	r4, [sp, #92]	; 0x5c
   12168:	mov	r4, #0
   1216c:	mov	r6, #0
   12170:	str	sl, [sp, #84]	; 0x54
   12174:	b	1226c <dcngettext@plt+0xdc0>
   12178:	bic	r1, r8, r8, asr #31
   1217c:	mov	r5, #1
   12180:	mvn	r2, r4
   12184:	cmp	r1, #1
   12188:	movhi	r5, r1
   1218c:	cmp	r5, r2
   12190:	bcs	13a3c <dcngettext@plt+0x2590>
   12194:	cmp	r7, #0
   12198:	beq	121dc <dcngettext@plt+0xd30>
   1219c:	cmp	r1, #2
   121a0:	bcc	121d0 <dcngettext@plt+0xd24>
   121a4:	mov	r9, r4
   121a8:	sub	r4, r1, #1
   121ac:	mov	r6, #0
   121b0:	mov	r0, #32
   121b4:	mov	r1, r7
   121b8:	bl	11434 <fputc@plt>
   121bc:	add	r6, r6, #1
   121c0:	cmp	r6, r4
   121c4:	bcc	121b0 <dcngettext@plt+0xd04>
   121c8:	ldrb	r3, [sl]
   121cc:	mov	r4, r9
   121d0:	uxtb	r0, r3
   121d4:	mov	r1, r7
   121d8:	bl	11434 <fputc@plt>
   121dc:	add	r4, r5, r4
   121e0:	ldrb	r3, [sl, #1]!
   121e4:	mvn	r8, #0
   121e8:	cmp	r3, #0
   121ec:	bne	12154 <dcngettext@plt+0xca8>
   121f0:	b	13a24 <dcngettext@plt+0x2578>
   121f4:	mov	r4, #1
   121f8:	b	1226c <dcngettext@plt+0xdc0>
   121fc:	add	r3, pc, #0
   12200:	ldr	pc, [r3, r2, lsl #2]
   12204:	strdeq	r2, [r1], -r4
   12208:	andeq	r2, r1, r8, lsl #5
   1220c:	andeq	r2, r1, r8, lsl #5
   12210:	andeq	r2, r1, r8, lsl #5
   12214:	andeq	r2, r1, r8, lsl #5
   12218:	andeq	r2, r1, r8, lsl #5
   1221c:	andeq	r2, r1, r8, lsl #5
   12220:	andeq	r2, r1, r8, lsl #5
   12224:	andeq	r2, r1, ip, lsr r2
   12228:	andeq	r2, r1, r8, lsl #5
   1222c:	andeq	r2, r1, ip, lsr r2
   12230:	andeq	r2, r1, r8, lsl #5
   12234:	andeq	r2, r1, r8, lsl #5
   12238:	andeq	r2, r1, ip, lsr r2
   1223c:	add	r1, r1, #1
   12240:	add	sl, sl, #1
   12244:	mov	r6, r9
   12248:	ldrb	r9, [sl]
   1224c:	sub	r2, r9, #35	; 0x23
   12250:	cmp	r2, #13
   12254:	bls	121fc <dcngettext@plt+0xd50>
   12258:	cmp	r9, #95	; 0x5f
   1225c:	beq	1223c <dcngettext@plt+0xd90>
   12260:	cmp	r9, #94	; 0x5e
   12264:	bne	12288 <dcngettext@plt+0xddc>
   12268:	mov	lr, #1
   1226c:	add	r1, sl, #2
   12270:	add	sl, sl, #1
   12274:	ldrb	r9, [sl]
   12278:	sub	r2, r9, #35	; 0x23
   1227c:	cmp	r2, #13
   12280:	bls	121fc <dcngettext@plt+0xd50>
   12284:	b	12258 <dcngettext@plt+0xdac>
   12288:	sub	r2, r9, #48	; 0x30
   1228c:	cmp	r2, #9
   12290:	bhi	1230c <dcngettext@plt+0xe60>
   12294:	movw	r5, #52428	; 0xcccc
   12298:	mov	r8, #0
   1229c:	mov	r7, #-2147483648	; 0x80000000
   122a0:	movt	r5, #3276	; 0xccc
   122a4:	cmn	r8, #1
   122a8:	ble	122b8 <dcngettext@plt+0xe0c>
   122ac:	cmp	r8, r5
   122b0:	bgt	122c8 <dcngettext@plt+0xe1c>
   122b4:	b	122e0 <dcngettext@plt+0xe34>
   122b8:	beq	122e0 <dcngettext@plt+0xe34>
   122bc:	sdiv	r2, r7, r8
   122c0:	cmp	r2, #10
   122c4:	bge	122e0 <dcngettext@plt+0xe34>
   122c8:	mvn	r8, #-2147483648	; 0x80000000
   122cc:	ldrb	r9, [r1], #1
   122d0:	sub	r2, r9, #48	; 0x30
   122d4:	cmp	r2, #10
   122d8:	bcc	122a4 <dcngettext@plt+0xdf8>
   122dc:	b	12308 <dcngettext@plt+0xe5c>
   122e0:	add	r2, r8, r8, lsl #2
   122e4:	lsl	r3, r2, #1
   122e8:	uxtab	r0, r3, r9
   122ec:	sub	r8, r0, #48	; 0x30
   122f0:	cmp	r8, r2, lsl #1
   122f4:	mvnvs	r8, #-2147483648	; 0x80000000
   122f8:	ldrb	r9, [r1], #1
   122fc:	sub	r2, r9, #48	; 0x30
   12300:	cmp	r2, #10
   12304:	bcc	122a4 <dcngettext@plt+0xdf8>
   12308:	sub	sl, r1, #1
   1230c:	cmp	r9, #79	; 0x4f
   12310:	cmpne	r9, #69	; 0x45
   12314:	bne	12328 <dcngettext@plt+0xe7c>
   12318:	ldrb	r1, [sl, #1]!
   1231c:	cmp	r1, #122	; 0x7a
   12320:	bls	12338 <dcngettext@plt+0xe8c>
   12324:	b	12ed0 <dcngettext@plt+0x1a24>
   12328:	mov	r1, r9
   1232c:	mov	r9, #0
   12330:	cmp	r1, #122	; 0x7a
   12334:	bhi	12ed0 <dcngettext@plt+0x1a24>
   12338:	movw	r3, #31998	; 0x7cfe
   1233c:	add	r2, pc, #12
   12340:	mov	r7, #0
   12344:	mvn	r5, #0
   12348:	movt	r3, #1
   1234c:	ldr	pc, [r2, r1, lsl #2]
   12350:	andeq	r2, r1, r8, lsr #13
   12354:	ldrdeq	r2, [r1], -r0
   12358:	ldrdeq	r2, [r1], -r0
   1235c:	ldrdeq	r2, [r1], -r0
   12360:	ldrdeq	r2, [r1], -r0
   12364:	ldrdeq	r2, [r1], -r0
   12368:	ldrdeq	r2, [r1], -r0
   1236c:	ldrdeq	r2, [r1], -r0
   12370:	ldrdeq	r2, [r1], -r0
   12374:	ldrdeq	r2, [r1], -r0
   12378:	ldrdeq	r2, [r1], -r0
   1237c:	ldrdeq	r2, [r1], -r0
   12380:	ldrdeq	r2, [r1], -r0
   12384:	ldrdeq	r2, [r1], -r0
   12388:	ldrdeq	r2, [r1], -r0
   1238c:	ldrdeq	r2, [r1], -r0
   12390:	ldrdeq	r2, [r1], -r0
   12394:	ldrdeq	r2, [r1], -r0
   12398:	ldrdeq	r2, [r1], -r0
   1239c:	ldrdeq	r2, [r1], -r0
   123a0:	ldrdeq	r2, [r1], -r0
   123a4:	ldrdeq	r2, [r1], -r0
   123a8:	ldrdeq	r2, [r1], -r0
   123ac:	ldrdeq	r2, [r1], -r0
   123b0:	ldrdeq	r2, [r1], -r0
   123b4:	ldrdeq	r2, [r1], -r0
   123b8:	ldrdeq	r2, [r1], -r0
   123bc:	ldrdeq	r2, [r1], -r0
   123c0:	ldrdeq	r2, [r1], -r0
   123c4:	ldrdeq	r2, [r1], -r0
   123c8:	ldrdeq	r2, [r1], -r0
   123cc:	ldrdeq	r2, [r1], -r0
   123d0:	ldrdeq	r2, [r1], -r0
   123d4:	ldrdeq	r2, [r1], -r0
   123d8:	ldrdeq	r2, [r1], -r0
   123dc:	ldrdeq	r2, [r1], -r0
   123e0:	ldrdeq	r2, [r1], -r0
   123e4:			; <UNDEFINED> instruction: 0x000126b4
   123e8:	ldrdeq	r2, [r1], -r0
   123ec:	ldrdeq	r2, [r1], -r0
   123f0:	ldrdeq	r2, [r1], -r0
   123f4:	ldrdeq	r2, [r1], -r0
   123f8:	ldrdeq	r2, [r1], -r0
   123fc:	ldrdeq	r2, [r1], -r0
   12400:	ldrdeq	r2, [r1], -r0
   12404:	ldrdeq	r2, [r1], -r0
   12408:	ldrdeq	r2, [r1], -r0
   1240c:	ldrdeq	r2, [r1], -r0
   12410:	ldrdeq	r2, [r1], -r0
   12414:	ldrdeq	r2, [r1], -r0
   12418:	ldrdeq	r2, [r1], -r0
   1241c:	ldrdeq	r2, [r1], -r0
   12420:	ldrdeq	r2, [r1], -r0
   12424:	ldrdeq	r2, [r1], -r0
   12428:	ldrdeq	r2, [r1], -r0
   1242c:	ldrdeq	r2, [r1], -r0
   12430:	ldrdeq	r2, [r1], -r0
   12434:	ldrdeq	r2, [r1], -r0
   12438:	andeq	r2, r1, r0, lsr r7
   1243c:	ldrdeq	r2, [r1], -r0
   12440:	ldrdeq	r2, [r1], -r0
   12444:	ldrdeq	r2, [r1], -r0
   12448:	ldrdeq	r2, [r1], -r0
   1244c:	ldrdeq	r2, [r1], -r0
   12450:	ldrdeq	r2, [r1], -r0
   12454:	andeq	r2, r1, ip, lsr #15
   12458:	andeq	r2, r1, r4, asr #15
   1245c:	ldrdeq	r2, [r1], -ip
   12460:	strdeq	r2, [r1], -r0
   12464:	ldrdeq	r2, [r1], -r0
   12468:	andeq	r2, r1, r4, lsl #16
   1246c:	andeq	r2, r1, ip, lsr r5
   12470:	andeq	r2, r1, r0, lsr r8
   12474:	andeq	r2, r1, r0, asr #16
   12478:	ldrdeq	r2, [r1], -r0
   1247c:	ldrdeq	r2, [r1], -r0
   12480:	ldrdeq	r2, [r1], -r0
   12484:	andeq	r2, r1, r8, asr r8
   12488:	andeq	r2, r1, r0, ror r8
   1248c:	ldrdeq	r2, [r1], -r0
   12490:	andeq	r2, r1, r4, lsr #19
   12494:	ldrdeq	r2, [r1], -r0
   12498:	ldrdeq	r2, [r1], -r4
   1249c:			; <UNDEFINED> instruction: 0x000129bc
   124a0:	andeq	r2, r1, ip, asr #19
   124a4:	andeq	r2, r1, r8, lsl #21
   124a8:	andeq	r2, r1, ip, lsr r5
   124ac:	andeq	r2, r1, r0, asr #21
   124b0:	andeq	r2, r1, r8, lsl fp
   124b4:	andeq	r2, r1, ip, lsr #22
   124b8:	andeq	r2, r1, ip, asr fp
   124bc:	ldrdeq	r2, [r1], -r0
   124c0:	ldrdeq	r2, [r1], -r0
   124c4:	ldrdeq	r2, [r1], -r0
   124c8:	ldrdeq	r2, [r1], -r0
   124cc:	ldrdeq	r2, [r1], -r0
   124d0:	ldrdeq	r2, [r1], -r0
   124d4:	andeq	r2, r1, r4, ror #23
   124d8:	muleq	r1, r4, r6
   124dc:	strdeq	r2, [r1], -ip
   124e0:	andeq	r2, r1, r0, lsl ip
   124e4:	andeq	r2, r1, r8, lsr #24
   124e8:	ldrdeq	r2, [r1], -r0
   124ec:	andeq	r2, r1, ip, lsr r5
   124f0:	muleq	r1, r4, r6
   124f4:	ldrdeq	r2, [r1], -r0
   124f8:	andeq	r2, r1, r8, lsr ip
   124fc:	andeq	r2, r1, r8, ror #24
   12500:	andeq	r2, r1, r0, lsl #25
   12504:	andeq	r2, r1, r4, lsr #25
   12508:	ldrdeq	r2, [r1], -r4
   1250c:	ldrdeq	r2, [r1], -r0
   12510:	andeq	r2, r1, r8, lsr #19
   12514:	andeq	r2, r1, r0, asr #26
   12518:	andeq	r3, r1, r0, lsl r8
   1251c:	andeq	r2, r1, r8, ror #26
   12520:	andeq	r2, r1, r8, lsl #28
   12524:	andeq	r2, r1, r4, ror lr
   12528:	ldrdeq	r2, [r1], -r0
   1252c:	andeq	r2, r1, ip, lsr #29
   12530:	andeq	r2, r1, r8, asr #29
   12534:	strdeq	r2, [r1], -r4
   12538:	andeq	r2, r1, ip, asr r7
   1253c:	cmp	r9, #69	; 0x45
   12540:	beq	12ed0 <dcngettext@plt+0x1a24>
   12544:	ldr	r2, [sp, #72]	; 0x48
   12548:	str	lr, [sp, #76]	; 0x4c
   1254c:	movw	r0, #9363	; 0x2493
   12550:	movt	r0, #37449	; 0x9249
   12554:	ldr	r5, [r2, #28]
   12558:	ldr	lr, [r2, #24]
   1255c:	ldr	ip, [r2, #20]
   12560:	movw	r2, #382	; 0x17e
   12564:	add	r2, r5, r2
   12568:	cmp	ip, #0
   1256c:	sub	r2, r2, lr
   12570:	smmla	r7, r2, r0, r2
   12574:	asr	r4, r7, #2
   12578:	add	r7, r4, r7, lsr #31
   1257c:	rsb	r7, r7, r7, lsl #3
   12580:	sub	r2, r7, r2
   12584:	mvn	r7, #99	; 0x63
   12588:	add	r2, r5, r2
   1258c:	movwlt	r7, #300	; 0x12c
   12590:	add	r2, r2, #3
   12594:	add	r4, r7, ip
   12598:	cmn	r2, #1
   1259c:	ble	13030 <dcngettext@plt+0x1b84>
   125a0:	movw	r7, #365	; 0x16d
   125a4:	tst	r4, #3
   125a8:	bne	125fc <dcngettext@plt+0x1150>
   125ac:	movw	r7, #34079	; 0x851f
   125b0:	mov	r0, ip
   125b4:	mov	ip, #100	; 0x64
   125b8:	movt	r7, #20971	; 0x51eb
   125bc:	smmul	r7, r4, r7
   125c0:	asr	r3, r7, #5
   125c4:	add	r3, r3, r7, lsr #31
   125c8:	mls	ip, r3, ip, r4
   125cc:	asr	r3, r7, #7
   125d0:	add	r3, r3, r7, lsr #31
   125d4:	mov	r7, #400	; 0x190
   125d8:	mls	r3, r3, r7, r4
   125dc:	movw	r7, #365	; 0x16d
   125e0:	cmp	r3, #0
   125e4:	movweq	r7, #366	; 0x16e
   125e8:	cmp	ip, #0
   125ec:	mov	ip, r0
   125f0:	movw	r0, #9363	; 0x2493
   125f4:	movt	r0, #37449	; 0x9249
   125f8:	movwne	r7, #366	; 0x16e
   125fc:	add	r3, lr, r7
   12600:	movw	r7, #382	; 0x17e
   12604:	add	r7, r5, r7
   12608:	sub	r3, r7, r3
   1260c:	smmla	r3, r3, r0, r3
   12610:	asr	r7, r3, #2
   12614:	add	r3, r7, r3, lsr #31
   12618:	movw	r7, #379	; 0x17b
   1261c:	rsb	r3, r3, r3, lsl #3
   12620:	add	r3, r3, lr
   12624:	sub	r3, r3, r7
   12628:	mov	r7, #1
   1262c:	cmn	r3, #1
   12630:	movgt	r2, r3
   12634:	eor	r3, r7, r3, lsr #31
   12638:	cmp	r1, #71	; 0x47
   1263c:	beq	130b4 <dcngettext@plt+0x1c08>
   12640:	cmp	r1, #103	; 0x67
   12644:	bne	130fc <dcngettext@plt+0x1c50>
   12648:	movw	r2, #34079	; 0x851f
   1264c:	mov	r0, ip
   12650:	mov	lr, #0
   12654:	movt	r2, #20971	; 0x51eb
   12658:	smmul	r7, ip, r2
   1265c:	asr	r5, r7, #5
   12660:	add	r7, r5, r7, lsr #31
   12664:	mov	r5, #100	; 0x64
   12668:	mls	r7, r7, r5, ip
   1266c:	mov	ip, #2
   12670:	add	r7, r3, r7
   12674:	smmul	r2, r7, r2
   12678:	asr	r4, r2, #5
   1267c:	add	r2, r4, r2, lsr #31
   12680:	mls	r2, r2, r5, r7
   12684:	cmn	r2, #1
   12688:	ble	13568 <dcngettext@plt+0x20bc>
   1268c:	mov	r3, r2
   12690:	b	135a4 <dcngettext@plt+0x20f8>
   12694:	orr	lr, r4, lr
   12698:	mov	r7, #0
   1269c:	cmp	r9, #69	; 0x45
   126a0:	beq	12ed0 <dcngettext@plt+0x1a24>
   126a4:	b	13810 <dcngettext@plt+0x2364>
   126a8:	ldr	r4, [sp, #92]	; 0x5c
   126ac:	sub	r9, sl, #1
   126b0:	b	12ed8 <dcngettext@plt+0x1a2c>
   126b4:	ldr	r0, [sp, #84]	; 0x54
   126b8:	ldr	r4, [sp, #92]	; 0x5c
   126bc:	sub	r9, sl, #1
   126c0:	cmp	r9, r0
   126c4:	bne	12ed8 <dcngettext@plt+0x1a2c>
   126c8:	subs	r0, r6, #45	; 0x2d
   126cc:	mvn	r1, r4
   126d0:	bicne	r0, r8, r8, asr #31
   126d4:	cmp	r0, #1
   126d8:	mov	r5, r0
   126dc:	movls	r5, #1
   126e0:	cmp	r5, r1
   126e4:	bcs	13a3c <dcngettext@plt+0x2590>
   126e8:	ldr	r1, [sp, #88]	; 0x58
   126ec:	cmp	r1, #0
   126f0:	beq	139fc <dcngettext@plt+0x2550>
   126f4:	ldr	r7, [sp, #88]	; 0x58
   126f8:	cmp	r0, #2
   126fc:	bcc	139f0 <dcngettext@plt+0x2544>
   12700:	uxtb	r1, r6
   12704:	sub	r6, r0, #1
   12708:	cmp	r1, #43	; 0x2b
   1270c:	cmpne	r1, #48	; 0x30
   12710:	bne	139d8 <dcngettext@plt+0x252c>
   12714:	ldr	r7, [sp, #88]	; 0x58
   12718:	mov	r0, #48	; 0x30
   1271c:	mov	r1, r7
   12720:	bl	11434 <fputc@plt>
   12724:	subs	r6, r6, #1
   12728:	bne	12718 <dcngettext@plt+0x126c>
   1272c:	b	139f0 <dcngettext@plt+0x2544>
   12730:	mov	r7, #1
   12734:	ldrb	r2, [sl, r7]
   12738:	cmp	r2, #58	; 0x3a
   1273c:	bne	12750 <dcngettext@plt+0x12a4>
   12740:	add	r7, r7, #1
   12744:	ldrb	r2, [sl, r7]
   12748:	cmp	r2, #58	; 0x3a
   1274c:	beq	12740 <dcngettext@plt+0x1294>
   12750:	cmp	r2, #122	; 0x7a
   12754:	bne	12ed0 <dcngettext@plt+0x1a24>
   12758:	add	sl, sl, r7
   1275c:	ldr	r3, [sp, #72]	; 0x48
   12760:	ldr	r2, [r3, #32]
   12764:	cmp	r2, #0
   12768:	blt	130e0 <dcngettext@plt+0x1c34>
   1276c:	ldr	r2, [r3, #36]	; 0x24
   12770:	str	lr, [sp, #76]	; 0x4c
   12774:	cmp	r2, #0
   12778:	blt	13474 <dcngettext@plt+0x1fc8>
   1277c:	mov	lr, #0
   12780:	bne	13478 <dcngettext@plt+0x1fcc>
   12784:	ldr	r3, [sp, #48]	; 0x30
   12788:	ldrb	r3, [r3]
   1278c:	sub	r3, r3, #45	; 0x2d
   12790:	clz	r3, r3
   12794:	lsr	lr, r3, #5
   12798:	cmp	r7, #3
   1279c:	bls	13480 <dcngettext@plt+0x1fd4>
   127a0:	ldr	r4, [sp, #92]	; 0x5c
   127a4:	ldr	lr, [sp, #76]	; 0x4c
   127a8:	b	12ed4 <dcngettext@plt+0x1a28>
   127ac:	cmp	r9, #0
   127b0:	bne	12ed0 <dcngettext@plt+0x1a24>
   127b4:	orr	lr, r4, lr
   127b8:	mov	r7, #0
   127bc:	mov	r1, #65	; 0x41
   127c0:	b	13810 <dcngettext@plt+0x2364>
   127c4:	cmp	r9, #69	; 0x45
   127c8:	beq	12ed0 <dcngettext@plt+0x1a24>
   127cc:	orr	lr, r4, lr
   127d0:	mov	r7, #0
   127d4:	mov	r1, #66	; 0x42
   127d8:	b	13810 <dcngettext@plt+0x2364>
   127dc:	cmp	r9, #69	; 0x45
   127e0:	bne	13374 <dcngettext@plt+0x1ec8>
   127e4:	mov	r7, #0
   127e8:	mov	r1, #67	; 0x43
   127ec:	b	13810 <dcngettext@plt+0x2364>
   127f0:	cmp	r9, #0
   127f4:	bne	12ed0 <dcngettext@plt+0x1a24>
   127f8:	movw	r3, #31980	; 0x7cec
   127fc:	movt	r3, #1
   12800:	b	129d4 <dcngettext@plt+0x1528>
   12804:	cmp	r9, #0
   12808:	bne	12ed0 <dcngettext@plt+0x1a24>
   1280c:	movw	r3, #31989	; 0x7cf5
   12810:	cmp	r6, #0
   12814:	movt	r3, #1
   12818:	bne	13584 <dcngettext@plt+0x20d8>
   1281c:	cmp	r8, #0
   12820:	bge	13584 <dcngettext@plt+0x20d8>
   12824:	mov	r6, #43	; 0x2b
   12828:	mov	r5, #4
   1282c:	b	129d4 <dcngettext@plt+0x1528>
   12830:	cmp	r9, #69	; 0x45
   12834:	beq	12ed0 <dcngettext@plt+0x1a24>
   12838:	ldr	r2, [sp, #40]	; 0x28
   1283c:	b	12c1c <dcngettext@plt+0x1770>
   12840:	mov	ip, #2
   12844:	cmp	r9, #69	; 0x45
   12848:	beq	12ed0 <dcngettext@plt+0x1a24>
   1284c:	ldr	r3, [sp, #36]	; 0x24
   12850:	str	lr, [sp, #76]	; 0x4c
   12854:	b	13110 <dcngettext@plt+0x1c64>
   12858:	cmp	r9, #69	; 0x45
   1285c:	beq	12ed0 <dcngettext@plt+0x1a24>
   12860:	ldr	r2, [sp, #72]	; 0x48
   12864:	str	lr, [sp, #76]	; 0x4c
   12868:	ldr	r3, [r2, #4]
   1286c:	b	1310c <dcngettext@plt+0x1c60>
   12870:	cmp	r9, #69	; 0x45
   12874:	beq	12ed0 <dcngettext@plt+0x1a24>
   12878:	ldr	r2, [fp, #20]
   1287c:	cmp	r8, #1
   12880:	mov	r7, #0
   12884:	mov	r0, #8
   12888:	movwlt	r8, #9
   1288c:	add	r1, r7, #9
   12890:	cmp	r8, r1
   12894:	bge	128c0 <dcngettext@plt+0x1414>
   12898:	movw	r1, #26215	; 0x6667
   1289c:	sub	r0, r0, #1
   128a0:	sub	r7, r7, #1
   128a4:	movt	r1, #26214	; 0x6666
   128a8:	smmul	r1, r2, r1
   128ac:	asr	r2, r1, #2
   128b0:	add	r2, r2, r1, lsr #31
   128b4:	add	r1, r7, #9
   128b8:	cmp	r8, r1
   128bc:	blt	12898 <dcngettext@plt+0x13ec>
   128c0:	movw	r3, #26215	; 0x6667
   128c4:	cmp	r1, #2
   128c8:	movt	r3, #26214	; 0x6666
   128cc:	blt	128ec <dcngettext@plt+0x1440>
   128d0:	smmul	r5, r2, r3
   128d4:	asr	r4, r5, #2
   128d8:	add	r5, r4, r5, lsr #31
   128dc:	add	r5, r5, r5, lsl #2
   128e0:	sub	r5, r2, r5, lsl #1
   128e4:	cmp	r5, #0
   128e8:	beq	12898 <dcngettext@plt+0x13ec>
   128ec:	cmp	r1, #1
   128f0:	sub	ip, fp, #46	; 0x2e
   128f4:	blt	1292c <dcngettext@plt+0x1480>
   128f8:	smmul	r5, r2, r3
   128fc:	asr	r4, r5, #2
   12900:	add	r5, r4, r5, lsr #31
   12904:	add	r4, r5, r5, lsl #2
   12908:	sub	r2, r2, r4, lsl #1
   1290c:	add	r2, r2, #48	; 0x30
   12910:	strb	r2, [ip, r0]
   12914:	sub	r2, r0, #1
   12918:	add	r0, r0, #1
   1291c:	cmp	r0, #1
   12920:	mov	r0, r2
   12924:	mov	r2, r5
   12928:	bgt	128f8 <dcngettext@plt+0x144c>
   1292c:	ldr	r0, [sp, #92]	; 0x5c
   12930:	cmp	r6, #0
   12934:	movweq	r6, #48	; 0x30
   12938:	mvn	r0, r0
   1293c:	cmp	r1, r0
   12940:	bcs	13a3c <dcngettext@plt+0x2590>
   12944:	ldr	r0, [sp, #88]	; 0x58
   12948:	str	r6, [sp, #84]	; 0x54
   1294c:	cmp	r0, #0
   12950:	beq	1362c <dcngettext@plt+0x2180>
   12954:	tst	lr, #1
   12958:	beq	1361c <dcngettext@plt+0x2170>
   1295c:	ldr	r6, [sp, #88]	; 0x58
   12960:	cmn	r7, #9
   12964:	sub	r0, fp, #46	; 0x2e
   12968:	beq	1362c <dcngettext@plt+0x2180>
   1296c:	mov	r4, #0
   12970:	mov	r9, r0
   12974:	bl	11314 <__ctype_toupper_loc@plt>
   12978:	mov	r5, r0
   1297c:	ldrb	r0, [r9, -r4]
   12980:	ldr	r1, [r5]
   12984:	ldr	r0, [r1, r0, lsl #2]
   12988:	mov	r1, r6
   1298c:	bl	11434 <fputc@plt>
   12990:	sub	r4, r4, #1
   12994:	add	r0, r7, r4
   12998:	cmn	r0, #9
   1299c:	bne	1297c <dcngettext@plt+0x14d0>
   129a0:	b	1362c <dcngettext@plt+0x2180>
   129a4:	mov	r7, #1
   129a8:	eor	r1, r4, #1
   129ac:	orr	r7, r4, r7
   129b0:	and	lr, lr, r1
   129b4:	mov	r1, #112	; 0x70
   129b8:	b	13810 <dcngettext@plt+0x2364>
   129bc:	cmp	r9, #69	; 0x45
   129c0:	beq	12ed0 <dcngettext@plt+0x1a24>
   129c4:	ldr	r2, [sp, #72]	; 0x48
   129c8:	b	12c1c <dcngettext@plt+0x1770>
   129cc:	movw	r3, #32004	; 0x7d04
   129d0:	movt	r3, #1
   129d4:	ldr	r0, [fp, #16]
   129d8:	ldr	r2, [sp, #72]	; 0x48
   129dc:	and	r7, lr, #1
   129e0:	str	r3, [sp, #84]	; 0x54
   129e4:	mov	r1, r3
   129e8:	str	r6, [sp]
   129ec:	str	r5, [sp, #4]
   129f0:	mov	r9, r6
   129f4:	mov	r3, r7
   129f8:	str	r0, [sp, #8]
   129fc:	ldr	r0, [fp, #20]
   12a00:	str	r0, [sp, #12]
   12a04:	mov	r0, #0
   12a08:	bl	12084 <dcngettext@plt+0xbd8>
   12a0c:	subs	r1, r6, #45	; 0x2d
   12a10:	ldr	r4, [sp, #92]	; 0x5c
   12a14:	mov	r3, r6
   12a18:	mov	r6, r0
   12a1c:	movne	r1, r8
   12a20:	cmp	r8, #0
   12a24:	movwlt	r1, #0
   12a28:	cmp	r1, r0
   12a2c:	movhi	r6, r1
   12a30:	mvn	r2, r4
   12a34:	cmp	r6, r2
   12a38:	bcs	13a3c <dcngettext@plt+0x2590>
   12a3c:	ldr	r2, [sp, #88]	; 0x58
   12a40:	cmp	r2, #0
   12a44:	beq	1354c <dcngettext@plt+0x20a0>
   12a48:	cmp	r1, r0
   12a4c:	bls	13008 <dcngettext@plt+0x1b5c>
   12a50:	cmp	r3, #43	; 0x2b
   12a54:	str	r7, [sp, #76]	; 0x4c
   12a58:	sub	r7, r1, r0
   12a5c:	cmpne	r3, #48	; 0x30
   12a60:	bne	13500 <dcngettext@plt+0x2054>
   12a64:	ldr	r8, [sp, #88]	; 0x58
   12a68:	cmp	r7, #0
   12a6c:	beq	13520 <dcngettext@plt+0x2074>
   12a70:	mov	r0, #48	; 0x30
   12a74:	mov	r1, r8
   12a78:	bl	11434 <fputc@plt>
   12a7c:	subs	r7, r7, #1
   12a80:	bne	12a70 <dcngettext@plt+0x15c4>
   12a84:	b	13520 <dcngettext@plt+0x2074>
   12a88:	cmp	r9, #69	; 0x45
   12a8c:	beq	12ed0 <dcngettext@plt+0x1a24>
   12a90:	ldr	r3, [sp, #72]	; 0x48
   12a94:	str	lr, [sp, #76]	; 0x4c
   12a98:	ldr	r2, [r3, #24]
   12a9c:	ldr	r3, [r3, #28]
   12aa0:	add	r3, r3, #7
   12aa4:	sub	r2, r3, r2
   12aa8:	movw	r3, #9363	; 0x2493
   12aac:	movt	r3, #37449	; 0x9249
   12ab0:	smmla	r2, r2, r3, r2
   12ab4:	asr	r3, r2, #2
   12ab8:	add	r3, r3, r2, lsr #31
   12abc:	b	1310c <dcngettext@plt+0x1c60>
   12ac0:	cmp	r9, #69	; 0x45
   12ac4:	beq	12ed0 <dcngettext@plt+0x1a24>
   12ac8:	ldr	r3, [sp, #72]	; 0x48
   12acc:	movw	ip, #9363	; 0x2493
   12ad0:	str	lr, [sp, #76]	; 0x4c
   12ad4:	movt	ip, #37449	; 0x9249
   12ad8:	ldr	r2, [r3, #24]
   12adc:	ldr	r3, [r3, #28]
   12ae0:	add	r2, r2, #6
   12ae4:	smmla	r5, r2, ip, r2
   12ae8:	asr	r4, r5, #2
   12aec:	add	r5, r4, r5, lsr #31
   12af0:	ldr	r4, [sp, #92]	; 0x5c
   12af4:	rsb	r5, r5, r5, lsl #3
   12af8:	sub	r2, r5, r2
   12afc:	add	r2, r3, r2
   12b00:	add	r2, r2, #7
   12b04:	smmla	r2, r2, ip, r2
   12b08:	mov	ip, #2
   12b0c:	asr	r3, r2, #2
   12b10:	add	r3, r3, r2, lsr #31
   12b14:	b	13114 <dcngettext@plt+0x1c68>
   12b18:	cmp	r9, #79	; 0x4f
   12b1c:	beq	12ed0 <dcngettext@plt+0x1a24>
   12b20:	mov	r7, #0
   12b24:	mov	r1, #88	; 0x58
   12b28:	b	13810 <dcngettext@plt+0x2364>
   12b2c:	cmp	r9, #69	; 0x45
   12b30:	beq	134f4 <dcngettext@plt+0x2048>
   12b34:	cmp	r9, #79	; 0x4f
   12b38:	beq	12ed0 <dcngettext@plt+0x1a24>
   12b3c:	ldr	r2, [sp, #72]	; 0x48
   12b40:	movw	r3, #63636	; 0xf894
   12b44:	str	lr, [sp, #76]	; 0x4c
   12b48:	mov	lr, #0
   12b4c:	movt	r3, #65535	; 0xffff
   12b50:	ldr	r2, [r2, #20]
   12b54:	cmp	r2, r3
   12b58:	b	130cc <dcngettext@plt+0x1c20>
   12b5c:	ldr	r0, [sp, #48]	; 0x30
   12b60:	str	r4, [sp, #84]	; 0x54
   12b64:	subs	r4, r6, #45	; 0x2d
   12b68:	str	lr, [sp, #76]	; 0x4c
   12b6c:	mov	r9, r6
   12b70:	bicne	r4, r8, r8, asr #31
   12b74:	bl	1135c <strlen@plt>
   12b78:	mov	r5, r0
   12b7c:	cmp	r4, r0
   12b80:	mov	r8, r0
   12b84:	ldr	r0, [sp, #92]	; 0x5c
   12b88:	movhi	r8, r4
   12b8c:	mvn	r0, r0
   12b90:	cmp	r8, r0
   12b94:	bcs	13a3c <dcngettext@plt+0x2590>
   12b98:	ldr	r7, [sp, #88]	; 0x58
   12b9c:	cmp	r7, #0
   12ba0:	beq	13358 <dcngettext@plt+0x1eac>
   12ba4:	cmp	r4, r5
   12ba8:	bls	13700 <dcngettext@plt+0x2254>
   12bac:	uxtb	r0, r9
   12bb0:	sub	r6, r4, r5
   12bb4:	cmp	r0, #43	; 0x2b
   12bb8:	cmpne	r0, #48	; 0x30
   12bbc:	bne	136e0 <dcngettext@plt+0x2234>
   12bc0:	ldr	r4, [sp, #88]	; 0x58
   12bc4:	cmp	r6, #0
   12bc8:	beq	13700 <dcngettext@plt+0x2254>
   12bcc:	mov	r0, #48	; 0x30
   12bd0:	mov	r1, r4
   12bd4:	bl	11434 <fputc@plt>
   12bd8:	subs	r6, r6, #1
   12bdc:	bne	12bcc <dcngettext@plt+0x1720>
   12be0:	b	13700 <dcngettext@plt+0x2254>
   12be4:	cmp	r9, #0
   12be8:	bne	12ed0 <dcngettext@plt+0x1a24>
   12bec:	orr	lr, r4, lr
   12bf0:	mov	r7, #0
   12bf4:	mov	r1, #97	; 0x61
   12bf8:	b	13810 <dcngettext@plt+0x2364>
   12bfc:	cmp	r9, #79	; 0x4f
   12c00:	beq	12ed0 <dcngettext@plt+0x1a24>
   12c04:	mov	r7, #0
   12c08:	mov	r1, #99	; 0x63
   12c0c:	b	13810 <dcngettext@plt+0x2364>
   12c10:	cmp	r9, #69	; 0x45
   12c14:	beq	12ed0 <dcngettext@plt+0x1a24>
   12c18:	ldr	r2, [sp, #32]
   12c1c:	str	lr, [sp, #76]	; 0x4c
   12c20:	ldr	r3, [r2]
   12c24:	b	1310c <dcngettext@plt+0x1c60>
   12c28:	ldr	r2, [sp, #32]
   12c2c:	cmp	r9, #69	; 0x45
   12c30:	bne	12c74 <dcngettext@plt+0x17c8>
   12c34:	b	12ed0 <dcngettext@plt+0x1a24>
   12c38:	cmp	r9, #69	; 0x45
   12c3c:	beq	12ed0 <dcngettext@plt+0x1a24>
   12c40:	ldr	r2, [sp, #72]	; 0x48
   12c44:	ldr	r4, [sp, #92]	; 0x5c
   12c48:	str	lr, [sp, #76]	; 0x4c
   12c4c:	mov	lr, #0
   12c50:	mov	ip, #3
   12c54:	ldr	r2, [r2, #28]
   12c58:	cmn	r2, #1
   12c5c:	add	r3, r2, #1
   12c60:	movwlt	lr, #1
   12c64:	b	13118 <dcngettext@plt+0x1c6c>
   12c68:	ldr	r2, [sp, #40]	; 0x28
   12c6c:	cmp	r9, #69	; 0x45
   12c70:	beq	12ed0 <dcngettext@plt+0x1a24>
   12c74:	ldr	r3, [r2]
   12c78:	ldr	r4, [sp, #92]	; 0x5c
   12c7c:	b	12c90 <dcngettext@plt+0x17e4>
   12c80:	ldr	r3, [sp, #36]	; 0x24
   12c84:	ldr	r4, [sp, #92]	; 0x5c
   12c88:	cmp	r9, #69	; 0x45
   12c8c:	beq	12ed4 <dcngettext@plt+0x1a28>
   12c90:	cmp	r6, #0
   12c94:	str	lr, [sp, #76]	; 0x4c
   12c98:	mov	ip, #2
   12c9c:	movweq	r6, #95	; 0x5f
   12ca0:	b	13114 <dcngettext@plt+0x1c68>
   12ca4:	cmp	r9, #69	; 0x45
   12ca8:	beq	12ed0 <dcngettext@plt+0x1a24>
   12cac:	ldr	r2, [sp, #72]	; 0x48
   12cb0:	ldr	r4, [sp, #92]	; 0x5c
   12cb4:	str	lr, [sp, #76]	; 0x4c
   12cb8:	mov	lr, #0
   12cbc:	mov	ip, #2
   12cc0:	ldr	r2, [r2, #16]
   12cc4:	cmn	r2, #1
   12cc8:	add	r3, r2, #1
   12ccc:	movwlt	lr, #1
   12cd0:	b	13118 <dcngettext@plt+0x1c6c>
   12cd4:	ldr	r4, [sp, #92]	; 0x5c
   12cd8:	subs	r0, r6, #45	; 0x2d
   12cdc:	bicne	r0, r8, r8, asr #31
   12ce0:	cmp	r0, #1
   12ce4:	mov	r5, r0
   12ce8:	movls	r5, #1
   12cec:	mvn	r1, r4
   12cf0:	cmp	r5, r1
   12cf4:	bcs	13a3c <dcngettext@plt+0x2590>
   12cf8:	ldr	r1, [sp, #88]	; 0x58
   12cfc:	cmp	r1, #0
   12d00:	beq	139fc <dcngettext@plt+0x2550>
   12d04:	ldr	r7, [sp, #88]	; 0x58
   12d08:	cmp	r0, #2
   12d0c:	bcc	137b4 <dcngettext@plt+0x2308>
   12d10:	uxtb	r1, r6
   12d14:	sub	r6, r0, #1
   12d18:	cmp	r1, #43	; 0x2b
   12d1c:	cmpne	r1, #48	; 0x30
   12d20:	bne	1379c <dcngettext@plt+0x22f0>
   12d24:	ldr	r7, [sp, #88]	; 0x58
   12d28:	mov	r0, #48	; 0x30
   12d2c:	mov	r1, r7
   12d30:	bl	11434 <fputc@plt>
   12d34:	subs	r6, r6, #1
   12d38:	bne	12d28 <dcngettext@plt+0x187c>
   12d3c:	b	137b4 <dcngettext@plt+0x2308>
   12d40:	ldr	r2, [sp, #72]	; 0x48
   12d44:	ldr	r4, [sp, #92]	; 0x5c
   12d48:	mov	r3, #11
   12d4c:	mov	ip, #1
   12d50:	str	lr, [sp, #76]	; 0x4c
   12d54:	mov	lr, #0
   12d58:	ldr	r2, [r2, #16]
   12d5c:	mul	r2, r2, r3
   12d60:	add	r3, ip, r2, asr #5
   12d64:	b	13118 <dcngettext@plt+0x1c6c>
   12d68:	ldr	r2, [sp, #72]	; 0x48
   12d6c:	mov	r0, #28
   12d70:	add	r1, sp, #96	; 0x60
   12d74:	ldr	r9, [sp, #92]	; 0x5c
   12d78:	str	lr, [sp, #76]	; 0x4c
   12d7c:	mov	r4, r1
   12d80:	mov	r3, r2
   12d84:	add	r2, r2, #16
   12d88:	vld1.32	{d16-d17}, [r3], r0
   12d8c:	vld1.32	{d18-d19}, [r2]
   12d90:	add	r2, r1, #16
   12d94:	vld1.32	{d20-d21}, [r3]
   12d98:	vst1.64	{d16-d17}, [r4], r0
   12d9c:	mvn	r0, #0
   12da0:	vst1.64	{d18-d19}, [r2]
   12da4:	vst1.32	{d20-d21}, [r4]
   12da8:	str	r0, [r4]
   12dac:	ldr	r0, [fp, #16]
   12db0:	bl	16428 <dcngettext@plt+0x4f7c>
   12db4:	ldr	r1, [r4]
   12db8:	cmp	r1, #0
   12dbc:	blt	13a58 <dcngettext@plt+0x25ac>
   12dc0:	cmp	r0, #0
   12dc4:	blt	13418 <dcngettext@plt+0x1f6c>
   12dc8:	ldr	r1, [sp, #24]
   12dcc:	mov	r2, r0
   12dd0:	movw	r3, #26215	; 0x6667
   12dd4:	movt	r3, #26214	; 0x6666
   12dd8:	smmul	r3, r2, r3
   12ddc:	asr	r7, r3, #2
   12de0:	add	r3, r7, r3, lsr #31
   12de4:	add	r7, r3, r3, lsl #2
   12de8:	sub	r7, r2, r7, lsl #1
   12dec:	add	r2, r2, #9
   12df0:	add	r7, r7, #48	; 0x30
   12df4:	cmp	r2, #18
   12df8:	mov	r2, r3
   12dfc:	strb	r7, [r1], #-1
   12e00:	bhi	12dd0 <dcngettext@plt+0x1924>
   12e04:	b	13454 <dcngettext@plt+0x1fa8>
   12e08:	ldr	r4, [sp, #92]	; 0x5c
   12e0c:	subs	r0, r6, #45	; 0x2d
   12e10:	bicne	r0, r8, r8, asr #31
   12e14:	cmp	r0, #1
   12e18:	mov	r5, r0
   12e1c:	movls	r5, #1
   12e20:	mvn	r1, r4
   12e24:	cmp	r5, r1
   12e28:	bcs	13a3c <dcngettext@plt+0x2590>
   12e2c:	ldr	r1, [sp, #88]	; 0x58
   12e30:	cmp	r1, #0
   12e34:	beq	139fc <dcngettext@plt+0x2550>
   12e38:	ldr	r7, [sp, #88]	; 0x58
   12e3c:	cmp	r0, #2
   12e40:	bcc	137d4 <dcngettext@plt+0x2328>
   12e44:	uxtb	r1, r6
   12e48:	sub	r6, r0, #1
   12e4c:	cmp	r1, #43	; 0x2b
   12e50:	cmpne	r1, #48	; 0x30
   12e54:	bne	137bc <dcngettext@plt+0x2310>
   12e58:	ldr	r7, [sp, #88]	; 0x58
   12e5c:	mov	r0, #48	; 0x30
   12e60:	mov	r1, r7
   12e64:	bl	11434 <fputc@plt>
   12e68:	subs	r6, r6, #1
   12e6c:	bne	12e5c <dcngettext@plt+0x19b0>
   12e70:	b	137d4 <dcngettext@plt+0x2328>
   12e74:	ldr	r2, [sp, #72]	; 0x48
   12e78:	movw	r3, #9363	; 0x2493
   12e7c:	str	lr, [sp, #76]	; 0x4c
   12e80:	mov	ip, #1
   12e84:	movt	r3, #37449	; 0x9249
   12e88:	ldr	r2, [r2, #24]
   12e8c:	add	r2, r2, #6
   12e90:	smmla	r3, r2, r3, r2
   12e94:	asr	r7, r3, #2
   12e98:	add	r3, r7, r3, lsr #31
   12e9c:	rsb	r3, r3, r3, lsl #3
   12ea0:	sub	r2, r2, r3
   12ea4:	add	r3, r2, #1
   12ea8:	b	13110 <dcngettext@plt+0x1c64>
   12eac:	cmp	r9, #69	; 0x45
   12eb0:	beq	12ed0 <dcngettext@plt+0x1a24>
   12eb4:	ldr	r2, [sp, #72]	; 0x48
   12eb8:	str	lr, [sp, #76]	; 0x4c
   12ebc:	mov	ip, #1
   12ec0:	ldr	r3, [r2, #24]
   12ec4:	b	13110 <dcngettext@plt+0x1c64>
   12ec8:	cmp	r9, #79	; 0x4f
   12ecc:	bne	133cc <dcngettext@plt+0x1f20>
   12ed0:	ldr	r4, [sp, #92]	; 0x5c
   12ed4:	mov	r9, sl
   12ed8:	ldr	r1, [sp, #84]	; 0x54
   12edc:	subs	r0, r6, #45	; 0x2d
   12ee0:	bicne	r0, r8, r8, asr #31
   12ee4:	sub	r1, r9, r1
   12ee8:	add	r5, r1, #1
   12eec:	mvn	r1, r4
   12ef0:	cmp	r0, r5
   12ef4:	mov	r8, r5
   12ef8:	movhi	r8, r0
   12efc:	cmp	r8, r1
   12f00:	bcs	13a3c <dcngettext@plt+0x2590>
   12f04:	ldr	r7, [sp, #88]	; 0x58
   12f08:	cmp	r7, #0
   12f0c:	beq	12fd4 <dcngettext@plt+0x1b28>
   12f10:	mov	sl, lr
   12f14:	cmp	r0, r5
   12f18:	bls	12f74 <dcngettext@plt+0x1ac8>
   12f1c:	sub	r7, r0, r5
   12f20:	uxtb	r0, r6
   12f24:	cmp	r0, #43	; 0x2b
   12f28:	cmpne	r0, #48	; 0x30
   12f2c:	bne	12f54 <dcngettext@plt+0x1aa8>
   12f30:	ldr	r4, [sp, #88]	; 0x58
   12f34:	cmp	r7, #0
   12f38:	beq	12f74 <dcngettext@plt+0x1ac8>
   12f3c:	mov	r0, #48	; 0x30
   12f40:	mov	r1, r4
   12f44:	bl	11434 <fputc@plt>
   12f48:	subs	r7, r7, #1
   12f4c:	bne	12f3c <dcngettext@plt+0x1a90>
   12f50:	b	12f74 <dcngettext@plt+0x1ac8>
   12f54:	ldr	r4, [sp, #88]	; 0x58
   12f58:	cmp	r7, #0
   12f5c:	beq	12f74 <dcngettext@plt+0x1ac8>
   12f60:	mov	r0, #32
   12f64:	mov	r1, r4
   12f68:	bl	11434 <fputc@plt>
   12f6c:	subs	r7, r7, #1
   12f70:	bne	12f60 <dcngettext@plt+0x1ab4>
   12f74:	tst	sl, #1
   12f78:	beq	12fbc <dcngettext@plt+0x1b10>
   12f7c:	ldr	r7, [sp, #88]	; 0x58
   12f80:	ldr	r6, [sp, #84]	; 0x54
   12f84:	cmp	r5, #0
   12f88:	beq	12fd4 <dcngettext@plt+0x1b28>
   12f8c:	sub	r0, r6, #1
   12f90:	sub	r4, r0, r9
   12f94:	bl	11314 <__ctype_toupper_loc@plt>
   12f98:	mov	r5, r0
   12f9c:	ldrb	r0, [r6], #1
   12fa0:	ldr	r1, [r5]
   12fa4:	ldr	r0, [r1, r0, lsl #2]
   12fa8:	mov	r1, r7
   12fac:	bl	11434 <fputc@plt>
   12fb0:	adds	r4, r4, #1
   12fb4:	bne	12f9c <dcngettext@plt+0x1af0>
   12fb8:	b	12fd4 <dcngettext@plt+0x1b28>
   12fbc:	ldr	r7, [sp, #88]	; 0x58
   12fc0:	ldr	r0, [sp, #84]	; 0x54
   12fc4:	mov	r1, r5
   12fc8:	mov	r2, #1
   12fcc:	mov	r3, r7
   12fd0:	bl	11278 <fwrite@plt>
   12fd4:	ldr	r4, [sp, #92]	; 0x5c
   12fd8:	mov	sl, r9
   12fdc:	add	r4, r8, r4
   12fe0:	ldrb	r3, [sl, #1]!
   12fe4:	mvn	r8, #0
   12fe8:	cmp	r3, #0
   12fec:	bne	12154 <dcngettext@plt+0xca8>
   12ff0:	b	13a24 <dcngettext@plt+0x2578>
   12ff4:	cmp	r9, #69	; 0x45
   12ff8:	bne	133d8 <dcngettext@plt+0x1f2c>
   12ffc:	mov	r7, #0
   13000:	mov	r1, #121	; 0x79
   13004:	b	13810 <dcngettext@plt+0x2364>
   13008:	ldr	r0, [fp, #16]
   1300c:	stm	sp, {r3, r5}
   13010:	mov	r3, r7
   13014:	ldr	r1, [sp, #84]	; 0x54
   13018:	ldr	r2, [sp, #72]	; 0x48
   1301c:	str	r0, [sp, #8]
   13020:	ldr	r0, [fp, #20]
   13024:	str	r0, [sp, #12]
   13028:	ldr	r0, [sp, #88]	; 0x58
   1302c:	b	13548 <dcngettext@plt+0x209c>
   13030:	sub	r2, r4, #1
   13034:	movw	r4, #365	; 0x16d
   13038:	tst	r2, #3
   1303c:	bne	13080 <dcngettext@plt+0x1bd4>
   13040:	movw	r7, #34079	; 0x851f
   13044:	movt	r7, #20971	; 0x51eb
   13048:	smmul	r7, r2, r7
   1304c:	asr	r4, r7, #5
   13050:	add	r3, r4, r7, lsr #31
   13054:	mov	r4, #100	; 0x64
   13058:	mls	r3, r3, r4, r2
   1305c:	asr	r4, r7, #7
   13060:	add	r4, r4, r7, lsr #31
   13064:	mov	r7, #400	; 0x190
   13068:	mls	r2, r4, r7, r2
   1306c:	movw	r4, #365	; 0x16d
   13070:	cmp	r2, #0
   13074:	movweq	r4, #366	; 0x16e
   13078:	cmp	r3, #0
   1307c:	movwne	r4, #366	; 0x16e
   13080:	movw	r7, #382	; 0x17e
   13084:	add	r2, r4, r5
   13088:	sub	r3, r7, lr
   1308c:	add	r2, r3, r2
   13090:	smmla	r2, r2, r0, r2
   13094:	asr	r7, r2, #2
   13098:	add	r2, r7, r2, lsr #31
   1309c:	rsb	r2, r2, r2, lsl #3
   130a0:	sub	r2, r2, r3
   130a4:	mvn	r3, #0
   130a8:	add	r2, r2, #3
   130ac:	cmp	r1, #71	; 0x47
   130b0:	bne	12640 <dcngettext@plt+0x1194>
   130b4:	movw	r2, #63636	; 0xf894
   130b8:	mov	lr, #0
   130bc:	movt	r2, #65535	; 0xffff
   130c0:	sub	r2, r2, r3
   130c4:	cmp	ip, r2
   130c8:	add	r2, ip, r3
   130cc:	movwlt	lr, #1
   130d0:	movw	r3, #1900	; 0x76c
   130d4:	mov	ip, #4
   130d8:	add	r3, r2, r3
   130dc:	b	135a4 <dcngettext@plt+0x20f8>
   130e0:	ldr	r7, [sp, #88]	; 0x58
   130e4:	ldr	r4, [sp, #92]	; 0x5c
   130e8:	ldrb	r3, [sl, #1]!
   130ec:	mvn	r8, #0
   130f0:	cmp	r3, #0
   130f4:	bne	12154 <dcngettext@plt+0xca8>
   130f8:	b	13a24 <dcngettext@plt+0x2578>
   130fc:	smmla	r2, r2, r0, r2
   13100:	asr	r3, r2, #2
   13104:	add	r2, r3, r2, lsr #31
   13108:	add	r3, r2, #1
   1310c:	mov	ip, #2
   13110:	ldr	r4, [sp, #92]	; 0x5c
   13114:	lsr	lr, r3, #31
   13118:	cmp	lr, #0
   1311c:	mov	r2, #0
   13120:	mov	r0, #0
   13124:	movwne	lr, #1
   13128:	cmp	r9, #79	; 0x4f
   1312c:	moveq	r7, #0
   13130:	cmpeq	lr, #0
   13134:	beq	1380c <dcngettext@plt+0x2360>
   13138:	ldr	r5, [sp, #64]	; 0x40
   1313c:	cmp	lr, #0
   13140:	rsbne	r3, r3, #0
   13144:	tst	r2, #1
   13148:	asr	r2, r2, #1
   1314c:	movne	r1, #58	; 0x3a
   13150:	strbne	r1, [r5, #-1]!
   13154:	movw	r1, #52429	; 0xcccd
   13158:	cmp	r3, #9
   1315c:	movt	r1, #52428	; 0xcccc
   13160:	umull	r7, r1, r3, r1
   13164:	lsr	r7, r1, #3
   13168:	add	r1, r7, r7, lsl #2
   1316c:	sub	r1, r3, r1, lsl #1
   13170:	mov	r3, r7
   13174:	orr	r1, r1, #48	; 0x30
   13178:	strb	r1, [r5, #-1]!
   1317c:	bhi	13144 <dcngettext@plt+0x1c98>
   13180:	cmp	r2, #0
   13184:	mov	r3, r7
   13188:	bne	13144 <dcngettext@plt+0x1c98>
   1318c:	cmp	r8, #0
   13190:	mov	r3, r6
   13194:	movlt	r8, ip
   13198:	cmp	r0, #0
   1319c:	movwne	r0, #43	; 0x2b
   131a0:	cmp	r6, #0
   131a4:	movweq	r3, #48	; 0x30
   131a8:	ldr	r1, [sp, #64]	; 0x40
   131ac:	cmp	lr, #0
   131b0:	mov	r2, r8
   131b4:	movwne	r0, #45	; 0x2d
   131b8:	cmp	r0, #0
   131bc:	subne	r2, r2, #1
   131c0:	sub	r9, r1, r5
   131c4:	sub	r7, r2, r9
   131c8:	cmp	r7, #1
   131cc:	movwlt	r7, #0
   131d0:	subs	r6, r3, #45	; 0x2d
   131d4:	moveq	r7, r6
   131d8:	cmp	r0, #0
   131dc:	beq	1325c <dcngettext@plt+0x1db0>
   131e0:	cmp	r3, #95	; 0x5f
   131e4:	str	r9, [sp, #84]	; 0x54
   131e8:	bne	132c8 <dcngettext@plt+0x1e1c>
   131ec:	str	r6, [sp, #16]
   131f0:	ldr	r6, [sp, #88]	; 0x58
   131f4:	mov	r9, r3
   131f8:	str	r0, [sp, #20]
   131fc:	cmp	r6, #0
   13200:	cmpne	r7, #0
   13204:	beq	13220 <dcngettext@plt+0x1d74>
   13208:	mov	r4, r7
   1320c:	mov	r0, #32
   13210:	mov	r1, r6
   13214:	bl	11434 <fputc@plt>
   13218:	subs	r4, r4, #1
   1321c:	bne	1320c <dcngettext@plt+0x1d60>
   13220:	ldr	r4, [sp, #92]	; 0x5c
   13224:	ldr	r0, [sp, #20]
   13228:	ldr	r6, [sp, #16]
   1322c:	sub	r8, r8, r7
   13230:	add	r4, r7, r4
   13234:	cmn	r4, #3
   13238:	bhi	13a3c <dcngettext@plt+0x2590>
   1323c:	ldr	r1, [sp, #88]	; 0x58
   13240:	cmp	r1, #0
   13244:	beq	1324c <dcngettext@plt+0x1da0>
   13248:	bl	11434 <fputc@plt>
   1324c:	mov	r3, r9
   13250:	ldr	r9, [sp, #84]	; 0x54
   13254:	sub	r8, r8, #1
   13258:	add	r4, r4, #1
   1325c:	cmp	r3, #45	; 0x2d
   13260:	mvn	r0, r4
   13264:	bicne	r6, r8, r8, asr #31
   13268:	mov	r8, r9
   1326c:	cmp	r6, r9
   13270:	movhi	r8, r6
   13274:	cmp	r8, r0
   13278:	bcs	13a3c <dcngettext@plt+0x2590>
   1327c:	ldr	r7, [sp, #88]	; 0x58
   13280:	str	r4, [sp, #92]	; 0x5c
   13284:	cmp	r7, #0
   13288:	beq	13358 <dcngettext@plt+0x1eac>
   1328c:	cmp	r6, r9
   13290:	bls	132f8 <dcngettext@plt+0x1e4c>
   13294:	cmp	r3, #43	; 0x2b
   13298:	sub	r6, r6, r9
   1329c:	cmpne	r3, #48	; 0x30
   132a0:	bne	132d8 <dcngettext@plt+0x1e2c>
   132a4:	ldr	r4, [sp, #88]	; 0x58
   132a8:	cmp	r6, #0
   132ac:	beq	132f8 <dcngettext@plt+0x1e4c>
   132b0:	mov	r0, #48	; 0x30
   132b4:	mov	r1, r4
   132b8:	bl	11434 <fputc@plt>
   132bc:	subs	r6, r6, #1
   132c0:	bne	132b0 <dcngettext@plt+0x1e04>
   132c4:	b	132f8 <dcngettext@plt+0x1e4c>
   132c8:	mov	r9, r3
   132cc:	cmn	r4, #3
   132d0:	bls	1323c <dcngettext@plt+0x1d90>
   132d4:	b	13a3c <dcngettext@plt+0x2590>
   132d8:	ldr	r4, [sp, #88]	; 0x58
   132dc:	cmp	r6, #0
   132e0:	beq	132f8 <dcngettext@plt+0x1e4c>
   132e4:	mov	r0, #32
   132e8:	mov	r1, r4
   132ec:	bl	11434 <fputc@plt>
   132f0:	subs	r6, r6, #1
   132f4:	bne	132e4 <dcngettext@plt+0x1e38>
   132f8:	ldr	r0, [sp, #76]	; 0x4c
   132fc:	tst	r0, #1
   13300:	beq	13340 <dcngettext@plt+0x1e94>
   13304:	ldr	r7, [sp, #88]	; 0x58
   13308:	cmp	r9, #0
   1330c:	beq	13358 <dcngettext@plt+0x1eac>
   13310:	ldr	r0, [sp, #28]
   13314:	add	r4, r0, r5
   13318:	bl	11314 <__ctype_toupper_loc@plt>
   1331c:	mov	r6, r0
   13320:	ldrb	r0, [r5], #1
   13324:	ldr	r1, [r6]
   13328:	ldr	r0, [r1, r0, lsl #2]
   1332c:	mov	r1, r7
   13330:	bl	11434 <fputc@plt>
   13334:	adds	r4, r4, #1
   13338:	bne	13320 <dcngettext@plt+0x1e74>
   1333c:	b	13358 <dcngettext@plt+0x1eac>
   13340:	mov	r0, r5
   13344:	mov	r1, r9
   13348:	ldr	r7, [sp, #88]	; 0x58
   1334c:	mov	r2, #1
   13350:	mov	r3, r7
   13354:	bl	11278 <fwrite@plt>
   13358:	ldr	r4, [sp, #92]	; 0x5c
   1335c:	add	r4, r8, r4
   13360:	ldrb	r3, [sl, #1]!
   13364:	mvn	r8, #0
   13368:	cmp	r3, #0
   1336c:	bne	12154 <dcngettext@plt+0xca8>
   13370:	b	13a24 <dcngettext@plt+0x2578>
   13374:	ldr	r2, [sp, #72]	; 0x48
   13378:	movw	r7, #63636	; 0xf894
   1337c:	mov	r3, #0
   13380:	mvn	r5, #98	; 0x62
   13384:	str	lr, [sp, #76]	; 0x4c
   13388:	mov	lr, #0
   1338c:	mov	ip, #2
   13390:	movt	r7, #65535	; 0xffff
   13394:	ldr	r2, [r2, #20]
   13398:	cmp	r2, r7
   1339c:	movwge	r3, #1
   133a0:	cmp	r2, r7
   133a4:	and	r3, r3, r2, lsr #31
   133a8:	movwlt	lr, #1
   133ac:	smlabb	r3, r3, r5, r2
   133b0:	movw	r5, #34079	; 0x851f
   133b4:	movt	r5, #20971	; 0x51eb
   133b8:	smmul	r3, r3, r5
   133bc:	asr	r5, r3, #5
   133c0:	add	r3, r5, r3, lsr #31
   133c4:	add	r3, r3, #19
   133c8:	b	135a4 <dcngettext@plt+0x20f8>
   133cc:	mov	r7, #0
   133d0:	mov	r1, #120	; 0x78
   133d4:	b	13810 <dcngettext@plt+0x2364>
   133d8:	ldr	r2, [sp, #72]	; 0x48
   133dc:	movw	r3, #34079	; 0x851f
   133e0:	str	lr, [sp, #76]	; 0x4c
   133e4:	mov	ip, #2
   133e8:	mov	lr, #0
   133ec:	movt	r3, #20971	; 0x51eb
   133f0:	ldr	r2, [r2, #20]
   133f4:	smmul	r3, r2, r3
   133f8:	asr	r7, r3, #5
   133fc:	add	r3, r7, r3, lsr #31
   13400:	mov	r7, #100	; 0x64
   13404:	mls	r4, r3, r7, r2
   13408:	cmn	r4, #1
   1340c:	ble	13590 <dcngettext@plt+0x20e4>
   13410:	mov	r3, r4
   13414:	b	135a4 <dcngettext@plt+0x20f8>
   13418:	ldr	r1, [sp, #24]
   1341c:	mov	r2, r0
   13420:	movw	r3, #26215	; 0x6667
   13424:	movt	r3, #26214	; 0x6666
   13428:	smmul	r3, r2, r3
   1342c:	asr	r7, r3, #2
   13430:	add	r3, r7, r3, lsr #31
   13434:	add	r7, r3, r3, lsl #2
   13438:	rsb	r7, r2, r7, lsl #1
   1343c:	add	r2, r2, #9
   13440:	add	r7, r7, #48	; 0x30
   13444:	cmp	r2, #18
   13448:	mov	r2, r3
   1344c:	strb	r7, [r1], #-1
   13450:	bhi	13420 <dcngettext@plt+0x1f74>
   13454:	cmp	r8, #0
   13458:	mov	r3, r6
   1345c:	lsr	lr, r0, #31
   13460:	add	r5, r1, #1
   13464:	mov	r4, r9
   13468:	mov	r0, #0
   1346c:	movwlt	r8, #1
   13470:	b	131a0 <dcngettext@plt+0x1cf4>
   13474:	mov	lr, #1
   13478:	cmp	r7, #3
   1347c:	bhi	127a0 <dcngettext@plt+0x12f4>
   13480:	movw	r3, #34953	; 0x8889
   13484:	movt	r3, #34952	; 0x8888
   13488:	smmla	r5, r2, r3, r2
   1348c:	asr	r4, r5, #5
   13490:	add	r4, r4, r5, lsr #31
   13494:	smmla	r3, r4, r3, r4
   13498:	asr	r5, r3, #5
   1349c:	add	r3, r5, r3, lsr #31
   134a0:	rsb	r3, r3, r3, lsl #4
   134a4:	sub	ip, r4, r3, lsl #2
   134a8:	movw	r3, #46021	; 0xb3c5
   134ac:	rsb	r4, r4, r4, lsl #4
   134b0:	movt	r3, #37282	; 0x91a2
   134b4:	smmla	r3, r2, r3, r2
   134b8:	sub	r2, r2, r4, lsl #2
   134bc:	add	r4, pc, #8
   134c0:	asr	r5, r3, #11
   134c4:	add	r3, r5, r3, lsr #31
   134c8:	ldr	pc, [r4, r7, lsl #2]
   134cc:	ldrdeq	r3, [r1], -ip
   134d0:	andeq	r3, r1, r4, ror #15
   134d4:	strdeq	r3, [r1], -ip
   134d8:	strdeq	r3, [r1], -r4
   134dc:	mov	r2, #100	; 0x64
   134e0:	mla	r3, r3, r2, ip
   134e4:	mov	ip, #5
   134e8:	mov	r0, #1
   134ec:	mov	r2, #0
   134f0:	b	137f8 <dcngettext@plt+0x234c>
   134f4:	mov	r7, #0
   134f8:	mov	r1, #89	; 0x59
   134fc:	b	13810 <dcngettext@plt+0x2364>
   13500:	ldr	r8, [sp, #88]	; 0x58
   13504:	cmp	r7, #0
   13508:	beq	13520 <dcngettext@plt+0x2074>
   1350c:	mov	r0, #32
   13510:	mov	r1, r8
   13514:	bl	11434 <fputc@plt>
   13518:	subs	r7, r7, #1
   1351c:	bne	1350c <dcngettext@plt+0x2060>
   13520:	ldr	r0, [fp, #16]
   13524:	ldr	r1, [sp, #84]	; 0x54
   13528:	ldr	r2, [sp, #72]	; 0x48
   1352c:	ldr	r3, [sp, #76]	; 0x4c
   13530:	str	r9, [sp]
   13534:	str	r5, [sp, #4]
   13538:	str	r0, [sp, #8]
   1353c:	ldr	r0, [fp, #20]
   13540:	str	r0, [sp, #12]
   13544:	mov	r0, r8
   13548:	bl	12084 <dcngettext@plt+0xbd8>
   1354c:	ldr	r7, [sp, #88]	; 0x58
   13550:	add	r4, r6, r4
   13554:	ldrb	r3, [sl, #1]!
   13558:	mvn	r8, #0
   1355c:	cmp	r3, #0
   13560:	bne	12154 <dcngettext@plt+0xca8>
   13564:	b	13a24 <dcngettext@plt+0x2578>
   13568:	movw	r4, #63636	; 0xf894
   1356c:	movt	r4, #65535	; 0xffff
   13570:	sub	r4, r4, r3
   13574:	add	r3, r2, #100	; 0x64
   13578:	cmp	r0, r4
   1357c:	rsblt	r3, r2, #0
   13580:	b	135a4 <dcngettext@plt+0x20f8>
   13584:	sub	r0, r8, #6
   13588:	bic	r5, r0, r0, asr #31
   1358c:	b	129d4 <dcngettext@plt+0x1528>
   13590:	movw	r5, #63636	; 0xf894
   13594:	add	r3, r4, #100	; 0x64
   13598:	movt	r5, #65535	; 0xffff
   1359c:	cmp	r2, r5
   135a0:	rsblt	r3, r4, #0
   135a4:	ldr	r2, [fp, #8]
   135a8:	mov	r0, r6
   135ac:	cmp	r6, #0
   135b0:	moveq	r0, r2
   135b4:	mov	r2, #0
   135b8:	mov	r6, r0
   135bc:	cmp	r0, #43	; 0x2b
   135c0:	mov	r0, #0
   135c4:	bne	137f8 <dcngettext@plt+0x234c>
   135c8:	cmp	ip, r8
   135cc:	mov	r5, #0
   135d0:	movw	r7, #9999	; 0x270f
   135d4:	mov	r4, #0
   135d8:	movwlt	r5, #1
   135dc:	cmp	ip, #2
   135e0:	movweq	r7, #99	; 0x63
   135e4:	cmp	r7, r3
   135e8:	movwcc	r4, #1
   135ec:	orr	r0, r5, r4
   135f0:	b	137f8 <dcngettext@plt+0x234c>
   135f4:	cmp	r2, #0
   135f8:	beq	137dc <dcngettext@plt+0x2330>
   135fc:	movw	r4, #10000	; 0x2710
   13600:	mov	r0, #1
   13604:	mla	r2, r3, r4, r2
   13608:	mov	r3, #100	; 0x64
   1360c:	mla	r3, ip, r3, r2
   13610:	mov	ip, #9
   13614:	mov	r2, #20
   13618:	b	137f8 <dcngettext@plt+0x234c>
   1361c:	ldr	r3, [sp, #88]	; 0x58
   13620:	sub	r0, fp, #46	; 0x2e
   13624:	mov	r2, #1
   13628:	bl	11278 <fwrite@plt>
   1362c:	ldr	r9, [sp, #84]	; 0x54
   13630:	ldr	r1, [sp, #92]	; 0x5c
   13634:	mov	r5, #0
   13638:	cmp	r9, #45	; 0x2d
   1363c:	subne	r0, r8, #9
   13640:	subne	r0, r0, r7
   13644:	bicne	r5, r0, r0, asr #31
   13648:	mvn	r0, #9
   1364c:	sub	r0, r0, r1
   13650:	sub	r0, r0, r7
   13654:	cmp	r5, r0
   13658:	bcs	13a3c <dcngettext@plt+0x2590>
   1365c:	ldr	r6, [sp, #88]	; 0x58
   13660:	cmp	r6, #0
   13664:	cmpne	r5, #0
   13668:	bne	13694 <dcngettext@plt+0x21e8>
   1366c:	ldr	r0, [sp, #92]	; 0x5c
   13670:	add	r0, r5, r0
   13674:	add	r0, r0, r7
   13678:	mov	r7, r6
   1367c:	add	r4, r0, #9
   13680:	ldrb	r3, [sl, #1]!
   13684:	mvn	r8, #0
   13688:	cmp	r3, #0
   1368c:	bne	12154 <dcngettext@plt+0xca8>
   13690:	b	13a24 <dcngettext@plt+0x2578>
   13694:	uxtb	r0, r9
   13698:	cmp	r0, #43	; 0x2b
   1369c:	beq	136ac <dcngettext@plt+0x2200>
   136a0:	cmp	r0, #48	; 0x30
   136a4:	mov	r4, r5
   136a8:	bne	136c8 <dcngettext@plt+0x221c>
   136ac:	mov	r4, r5
   136b0:	mov	r0, #48	; 0x30
   136b4:	mov	r1, r6
   136b8:	bl	11434 <fputc@plt>
   136bc:	subs	r4, r4, #1
   136c0:	bne	136b0 <dcngettext@plt+0x2204>
   136c4:	b	1366c <dcngettext@plt+0x21c0>
   136c8:	mov	r0, #32
   136cc:	mov	r1, r6
   136d0:	bl	11434 <fputc@plt>
   136d4:	subs	r4, r4, #1
   136d8:	bne	136c8 <dcngettext@plt+0x221c>
   136dc:	b	1366c <dcngettext@plt+0x21c0>
   136e0:	ldr	r4, [sp, #88]	; 0x58
   136e4:	cmp	r6, #0
   136e8:	beq	13700 <dcngettext@plt+0x2254>
   136ec:	mov	r0, #32
   136f0:	mov	r1, r4
   136f4:	bl	11434 <fputc@plt>
   136f8:	subs	r6, r6, #1
   136fc:	bne	136ec <dcngettext@plt+0x2240>
   13700:	ldr	r0, [sp, #84]	; 0x54
   13704:	tst	r0, #1
   13708:	beq	13744 <dcngettext@plt+0x2298>
   1370c:	ldr	r7, [sp, #88]	; 0x58
   13710:	cmp	r5, #0
   13714:	beq	13358 <dcngettext@plt+0x1eac>
   13718:	bl	11308 <__ctype_tolower_loc@plt>
   1371c:	ldr	r4, [sp, #48]	; 0x30
   13720:	mov	r6, r0
   13724:	ldrb	r0, [r4], #1
   13728:	ldr	r1, [r6]
   1372c:	ldr	r0, [r1, r0, lsl #2]
   13730:	mov	r1, r7
   13734:	bl	11434 <fputc@plt>
   13738:	subs	r5, r5, #1
   1373c:	bne	13724 <dcngettext@plt+0x2278>
   13740:	b	13358 <dcngettext@plt+0x1eac>
   13744:	ldr	r1, [sp, #76]	; 0x4c
   13748:	eor	r0, r0, #1
   1374c:	and	r0, r1, r0
   13750:	tst	r0, #1
   13754:	beq	13790 <dcngettext@plt+0x22e4>
   13758:	ldr	r7, [sp, #88]	; 0x58
   1375c:	cmp	r5, #0
   13760:	beq	13358 <dcngettext@plt+0x1eac>
   13764:	bl	11314 <__ctype_toupper_loc@plt>
   13768:	ldr	r4, [sp, #48]	; 0x30
   1376c:	mov	r6, r0
   13770:	ldrb	r0, [r4], #1
   13774:	ldr	r1, [r6]
   13778:	ldr	r0, [r1, r0, lsl #2]
   1377c:	mov	r1, r7
   13780:	bl	11434 <fputc@plt>
   13784:	subs	r5, r5, #1
   13788:	bne	13770 <dcngettext@plt+0x22c4>
   1378c:	b	13358 <dcngettext@plt+0x1eac>
   13790:	ldr	r0, [sp, #48]	; 0x30
   13794:	mov	r1, r5
   13798:	b	13348 <dcngettext@plt+0x1e9c>
   1379c:	ldr	r7, [sp, #88]	; 0x58
   137a0:	mov	r0, #32
   137a4:	mov	r1, r7
   137a8:	bl	11434 <fputc@plt>
   137ac:	subs	r6, r6, #1
   137b0:	bne	137a0 <dcngettext@plt+0x22f4>
   137b4:	mov	r0, #10
   137b8:	b	139f4 <dcngettext@plt+0x2548>
   137bc:	ldr	r7, [sp, #88]	; 0x58
   137c0:	mov	r0, #32
   137c4:	mov	r1, r7
   137c8:	bl	11434 <fputc@plt>
   137cc:	subs	r6, r6, #1
   137d0:	bne	137c0 <dcngettext@plt+0x2314>
   137d4:	mov	r0, #9
   137d8:	b	139f4 <dcngettext@plt+0x2548>
   137dc:	cmp	ip, #0
   137e0:	beq	13a18 <dcngettext@plt+0x256c>
   137e4:	mov	r2, #100	; 0x64
   137e8:	mov	r0, #1
   137ec:	mla	r3, r3, r2, ip
   137f0:	mov	ip, #6
   137f4:	mov	r2, #4
   137f8:	ldr	r4, [sp, #92]	; 0x5c
   137fc:	cmp	r9, #79	; 0x4f
   13800:	moveq	r7, #0
   13804:	cmpeq	lr, #0
   13808:	bne	13138 <dcngettext@plt+0x1c8c>
   1380c:	ldr	lr, [sp, #76]	; 0x4c
   13810:	movw	r2, #9504	; 0x2520
   13814:	cmp	r9, #0
   13818:	ldr	r3, [sp, #72]	; 0x48
   1381c:	mov	r0, #0
   13820:	str	lr, [sp, #76]	; 0x4c
   13824:	strh	r2, [fp, #-51]	; 0xffffffcd
   13828:	ldr	r2, [sp, #68]	; 0x44
   1382c:	strbne	r9, [fp, #-49]	; 0xffffffcf
   13830:	ldrne	r2, [sp, #52]	; 0x34
   13834:	strb	r0, [r2, #1]
   13838:	strb	r1, [r2]
   1383c:	add	r0, sp, #96	; 0x60
   13840:	sub	r2, fp, #51	; 0x33
   13844:	mov	r1, #1024	; 0x400
   13848:	bl	112e4 <strftime@plt>
   1384c:	ldr	r4, [sp, #92]	; 0x5c
   13850:	cmp	r0, #0
   13854:	beq	138d4 <dcngettext@plt+0x2428>
   13858:	subs	r3, r6, #45	; 0x2d
   1385c:	sub	r5, r0, #1
   13860:	mvn	r1, r4
   13864:	movne	r3, r8
   13868:	cmp	r8, #0
   1386c:	mov	r9, r5
   13870:	movwlt	r3, #0
   13874:	cmp	r3, r5
   13878:	movhi	r9, r3
   1387c:	cmp	r9, r1
   13880:	bcs	13a3c <dcngettext@plt+0x2590>
   13884:	mov	r2, r6
   13888:	ldr	r6, [sp, #88]	; 0x58
   1388c:	cmp	r6, #0
   13890:	beq	139b8 <dcngettext@plt+0x250c>
   13894:	cmp	r3, r5
   13898:	str	r0, [sp, #84]	; 0x54
   1389c:	bls	1390c <dcngettext@plt+0x2460>
   138a0:	cmp	r2, #43	; 0x2b
   138a4:	sub	r8, r3, r5
   138a8:	cmpne	r2, #48	; 0x30
   138ac:	bne	138ec <dcngettext@plt+0x2440>
   138b0:	ldr	r4, [sp, #88]	; 0x58
   138b4:	cmp	r8, #0
   138b8:	beq	1390c <dcngettext@plt+0x2460>
   138bc:	mov	r0, #48	; 0x30
   138c0:	mov	r1, r4
   138c4:	bl	11434 <fputc@plt>
   138c8:	subs	r8, r8, #1
   138cc:	bne	138bc <dcngettext@plt+0x2410>
   138d0:	b	1390c <dcngettext@plt+0x2460>
   138d4:	ldr	r7, [sp, #88]	; 0x58
   138d8:	ldrb	r3, [sl, #1]!
   138dc:	mvn	r8, #0
   138e0:	cmp	r3, #0
   138e4:	bne	12154 <dcngettext@plt+0xca8>
   138e8:	b	13a24 <dcngettext@plt+0x2578>
   138ec:	ldr	r4, [sp, #88]	; 0x58
   138f0:	cmp	r8, #0
   138f4:	beq	1390c <dcngettext@plt+0x2460>
   138f8:	mov	r0, #32
   138fc:	mov	r1, r4
   13900:	bl	11434 <fputc@plt>
   13904:	subs	r8, r8, #1
   13908:	bne	138f8 <dcngettext@plt+0x244c>
   1390c:	tst	r7, #1
   13910:	beq	13954 <dcngettext@plt+0x24a8>
   13914:	ldr	r6, [sp, #88]	; 0x58
   13918:	ldr	r0, [sp, #84]	; 0x54
   1391c:	cmp	r5, #0
   13920:	beq	139b8 <dcngettext@plt+0x250c>
   13924:	rsb	r4, r0, #1
   13928:	bl	11308 <__ctype_tolower_loc@plt>
   1392c:	ldr	r7, [sp, #44]	; 0x2c
   13930:	mov	r5, r0
   13934:	ldrb	r0, [r7], #1
   13938:	ldr	r1, [r5]
   1393c:	ldr	r0, [r1, r0, lsl #2]
   13940:	mov	r1, r6
   13944:	bl	11434 <fputc@plt>
   13948:	adds	r4, r4, #1
   1394c:	bne	13934 <dcngettext@plt+0x2488>
   13950:	b	139b8 <dcngettext@plt+0x250c>
   13954:	ldr	r0, [sp, #76]	; 0x4c
   13958:	tst	r0, #1
   1395c:	ldr	r0, [sp, #84]	; 0x54
   13960:	beq	139a0 <dcngettext@plt+0x24f4>
   13964:	ldr	r6, [sp, #88]	; 0x58
   13968:	cmp	r5, #0
   1396c:	beq	139b8 <dcngettext@plt+0x250c>
   13970:	rsb	r4, r0, #1
   13974:	bl	11314 <__ctype_toupper_loc@plt>
   13978:	ldr	r7, [sp, #44]	; 0x2c
   1397c:	mov	r5, r0
   13980:	ldrb	r0, [r7], #1
   13984:	ldr	r1, [r5]
   13988:	ldr	r0, [r1, r0, lsl #2]
   1398c:	mov	r1, r6
   13990:	bl	11434 <fputc@plt>
   13994:	adds	r4, r4, #1
   13998:	bne	13980 <dcngettext@plt+0x24d4>
   1399c:	b	139b8 <dcngettext@plt+0x250c>
   139a0:	ldr	r6, [sp, #88]	; 0x58
   139a4:	ldr	r0, [sp, #44]	; 0x2c
   139a8:	mov	r1, r5
   139ac:	mov	r2, #1
   139b0:	mov	r3, r6
   139b4:	bl	11278 <fwrite@plt>
   139b8:	ldr	r4, [sp, #92]	; 0x5c
   139bc:	mov	r7, r6
   139c0:	add	r4, r9, r4
   139c4:	ldrb	r3, [sl, #1]!
   139c8:	mvn	r8, #0
   139cc:	cmp	r3, #0
   139d0:	bne	12154 <dcngettext@plt+0xca8>
   139d4:	b	13a24 <dcngettext@plt+0x2578>
   139d8:	ldr	r7, [sp, #88]	; 0x58
   139dc:	mov	r0, #32
   139e0:	mov	r1, r7
   139e4:	bl	11434 <fputc@plt>
   139e8:	subs	r6, r6, #1
   139ec:	bne	139dc <dcngettext@plt+0x2530>
   139f0:	ldrb	r0, [sl]
   139f4:	mov	r1, r7
   139f8:	bl	11434 <fputc@plt>
   139fc:	ldr	r7, [sp, #88]	; 0x58
   13a00:	add	r4, r5, r4
   13a04:	ldrb	r3, [sl, #1]!
   13a08:	mvn	r8, #0
   13a0c:	cmp	r3, #0
   13a10:	bne	12154 <dcngettext@plt+0xca8>
   13a14:	b	13a24 <dcngettext@plt+0x2578>
   13a18:	mov	ip, #3
   13a1c:	b	134e8 <dcngettext@plt+0x203c>
   13a20:	mov	r4, #0
   13a24:	ldr	r0, [sp, #60]	; 0x3c
   13a28:	ldr	r1, [sp, #56]	; 0x38
   13a2c:	str	r1, [r0]
   13a30:	mov	r0, r4
   13a34:	sub	sp, fp, #28
   13a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a3c:	mov	r0, #34	; 0x22
   13a40:	ldr	r1, [sp, #60]	; 0x3c
   13a44:	mov	r4, #0
   13a48:	str	r0, [r1]
   13a4c:	mov	r0, r4
   13a50:	sub	sp, fp, #28
   13a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a58:	mov	r0, #75	; 0x4b
   13a5c:	b	13a40 <dcngettext@plt+0x2594>
   13a60:	push	{r4, r5, r6, r7, fp, lr}
   13a64:	add	fp, sp, #16
   13a68:	sub	sp, sp, #8
   13a6c:	mov	r4, r0
   13a70:	ldr	r0, [r0, #4]
   13a74:	mov	r5, r3
   13a78:	mov	r6, r2
   13a7c:	ldr	r1, [r4, #8]
   13a80:	cmp	r1, r0
   13a84:	bne	13aa0 <dcngettext@plt+0x25f4>
   13a88:	ldrd	r0, [r4, #16]
   13a8c:	cmp	r1, r0
   13a90:	bne	13aa0 <dcngettext@plt+0x25f4>
   13a94:	ldr	r0, [r4, #36]	; 0x24
   13a98:	cmp	r0, #0
   13a9c:	beq	13ab8 <dcngettext@plt+0x260c>
   13aa0:	mov	r0, r4
   13aa4:	mov	r2, r6
   13aa8:	mov	r3, r5
   13aac:	sub	sp, fp, #16
   13ab0:	pop	{r4, r5, r6, r7, fp, lr}
   13ab4:	b	113d4 <fseeko64@plt>
   13ab8:	ldr	r7, [fp, #8]
   13abc:	mov	r0, r4
   13ac0:	bl	113b0 <fileno@plt>
   13ac4:	mov	r2, r6
   13ac8:	mov	r3, r5
   13acc:	str	r7, [sp]
   13ad0:	bl	11284 <lseek64@plt>
   13ad4:	and	r2, r0, r1
   13ad8:	cmn	r2, #1
   13adc:	mvneq	r0, #0
   13ae0:	subeq	sp, fp, #16
   13ae4:	popeq	{r4, r5, r6, r7, fp, pc}
   13ae8:	strd	r0, [r4, #80]	; 0x50
   13aec:	ldr	r0, [r4]
   13af0:	bic	r0, r0, #16
   13af4:	str	r0, [r4]
   13af8:	mov	r0, #0
   13afc:	sub	sp, fp, #16
   13b00:	pop	{r4, r5, r6, r7, fp, pc}
   13b04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b08:	add	fp, sp, #24
   13b0c:	sub	sp, sp, #8
   13b10:	movw	r6, #37256	; 0x9188
   13b14:	mov	r4, #0
   13b18:	cmp	r0, #2
   13b1c:	movt	r6, #2
   13b20:	ldr	r7, [r6]
   13b24:	str	r4, [r6]
   13b28:	bne	13b9c <dcngettext@plt+0x26f0>
   13b2c:	mov	r8, r3
   13b30:	movw	r3, #32028	; 0x7d1c
   13b34:	mov	r5, r2
   13b38:	movw	r2, #32013	; 0x7d0d
   13b3c:	mov	r0, #2
   13b40:	str	r4, [sp]
   13b44:	movt	r2, #1
   13b48:	movt	r3, #1
   13b4c:	bl	1132c <getopt_long@plt>
   13b50:	cmp	r0, #104	; 0x68
   13b54:	beq	13b90 <dcngettext@plt+0x26e4>
   13b58:	cmp	r0, #118	; 0x76
   13b5c:	bne	13b9c <dcngettext@plt+0x26f0>
   13b60:	movw	r0, #37252	; 0x9184
   13b64:	ldr	r3, [fp, #8]
   13b68:	add	r1, fp, #16
   13b6c:	mov	r2, r8
   13b70:	movt	r0, #2
   13b74:	str	r1, [sp, #4]
   13b78:	str	r1, [sp]
   13b7c:	mov	r1, r5
   13b80:	ldr	r0, [r0]
   13b84:	bl	16b4c <dcngettext@plt+0x56a0>
   13b88:	mov	r0, #0
   13b8c:	bl	11350 <exit@plt>
   13b90:	ldr	r1, [fp, #12]
   13b94:	mov	r0, #0
   13b98:	blx	r1
   13b9c:	movw	r0, #37240	; 0x9178
   13ba0:	str	r7, [r6]
   13ba4:	movt	r0, #2
   13ba8:	str	r4, [r0]
   13bac:	sub	sp, fp, #24
   13bb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13bb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13bb8:	add	fp, sp, #24
   13bbc:	sub	sp, sp, #8
   13bc0:	movw	r6, #37256	; 0x9188
   13bc4:	mov	r8, r3
   13bc8:	ldr	r3, [fp, #12]
   13bcc:	mov	r5, r2
   13bd0:	mov	r2, #1
   13bd4:	movw	r4, #31152	; 0x79b0
   13bd8:	movt	r6, #2
   13bdc:	movt	r4, #1
   13be0:	ldr	r7, [r6]
   13be4:	str	r2, [r6]
   13be8:	mov	r2, #0
   13bec:	str	r2, [sp]
   13bf0:	movw	r2, #32013	; 0x7d0d
   13bf4:	cmp	r3, #0
   13bf8:	movt	r2, #1
   13bfc:	movw	r3, #32028	; 0x7d1c
   13c00:	movne	r2, r4
   13c04:	movt	r3, #1
   13c08:	bl	1132c <getopt_long@plt>
   13c0c:	cmn	r0, #1
   13c10:	beq	13c40 <dcngettext@plt+0x2794>
   13c14:	ldr	r1, [fp, #16]
   13c18:	cmp	r0, #104	; 0x68
   13c1c:	beq	13c38 <dcngettext@plt+0x278c>
   13c20:	cmp	r0, #118	; 0x76
   13c24:	beq	13c4c <dcngettext@plt+0x27a0>
   13c28:	movw	r0, #37164	; 0x912c
   13c2c:	movt	r0, #2
   13c30:	ldr	r0, [r0]
   13c34:	b	13c3c <dcngettext@plt+0x2790>
   13c38:	mov	r0, #0
   13c3c:	blx	r1
   13c40:	str	r7, [r6]
   13c44:	sub	sp, fp, #24
   13c48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c4c:	movw	r0, #37252	; 0x9184
   13c50:	ldr	r3, [fp, #8]
   13c54:	add	r1, fp, #20
   13c58:	mov	r2, r8
   13c5c:	movt	r0, #2
   13c60:	str	r1, [sp, #4]
   13c64:	str	r1, [sp]
   13c68:	mov	r1, r5
   13c6c:	ldr	r0, [r0]
   13c70:	bl	16b4c <dcngettext@plt+0x56a0>
   13c74:	mov	r0, #0
   13c78:	bl	11350 <exit@plt>
   13c7c:	push	{r4, r5, fp, lr}
   13c80:	add	fp, sp, #8
   13c84:	cmp	r0, #0
   13c88:	beq	13d1c <dcngettext@plt+0x2870>
   13c8c:	mov	r1, #47	; 0x2f
   13c90:	mov	r4, r0
   13c94:	bl	1141c <strrchr@plt>
   13c98:	cmp	r0, #0
   13c9c:	mov	r5, r4
   13ca0:	addne	r5, r0, #1
   13ca4:	sub	r0, r5, r4
   13ca8:	cmp	r0, #7
   13cac:	blt	13d00 <dcngettext@plt+0x2854>
   13cb0:	movw	r1, #32132	; 0x7d84
   13cb4:	sub	r0, r5, #7
   13cb8:	mov	r2, #7
   13cbc:	movt	r1, #1
   13cc0:	bl	11488 <strncmp@plt>
   13cc4:	cmp	r0, #0
   13cc8:	bne	13d00 <dcngettext@plt+0x2854>
   13ccc:	movw	r1, #32140	; 0x7d8c
   13cd0:	mov	r0, r5
   13cd4:	mov	r2, #3
   13cd8:	movt	r1, #1
   13cdc:	bl	11488 <strncmp@plt>
   13ce0:	cmp	r0, #0
   13ce4:	beq	13cf0 <dcngettext@plt+0x2844>
   13ce8:	mov	r4, r5
   13cec:	b	13d00 <dcngettext@plt+0x2854>
   13cf0:	movw	r0, #37232	; 0x9170
   13cf4:	add	r4, r5, #3
   13cf8:	movt	r0, #2
   13cfc:	str	r4, [r0]
   13d00:	movw	r0, #37236	; 0x9174
   13d04:	movt	r0, #2
   13d08:	str	r4, [r0]
   13d0c:	movw	r0, #37276	; 0x919c
   13d10:	movt	r0, #2
   13d14:	str	r4, [r0]
   13d18:	pop	{r4, r5, fp, pc}
   13d1c:	movw	r0, #37248	; 0x9180
   13d20:	mov	r1, #55	; 0x37
   13d24:	mov	r2, #1
   13d28:	movt	r0, #2
   13d2c:	ldr	r3, [r0]
   13d30:	movw	r0, #32076	; 0x7d4c
   13d34:	movt	r0, #1
   13d38:	bl	11278 <fwrite@plt>
   13d3c:	bl	11494 <abort@plt>
   13d40:	push	{r4, r5, r6, sl, fp, lr}
   13d44:	add	fp, sp, #16
   13d48:	mov	r4, r0
   13d4c:	movw	r0, #37280	; 0x91a0
   13d50:	movt	r0, #2
   13d54:	cmp	r4, #0
   13d58:	moveq	r4, r0
   13d5c:	bl	11374 <__errno_location@plt>
   13d60:	ldr	r6, [r0]
   13d64:	mov	r5, r0
   13d68:	mov	r0, r4
   13d6c:	mov	r1, #48	; 0x30
   13d70:	bl	172f4 <dcngettext@plt+0x5e48>
   13d74:	str	r6, [r5]
   13d78:	pop	{r4, r5, r6, sl, fp, pc}
   13d7c:	movw	r1, #37280	; 0x91a0
   13d80:	cmp	r0, #0
   13d84:	movt	r1, #2
   13d88:	movne	r1, r0
   13d8c:	ldr	r0, [r1]
   13d90:	bx	lr
   13d94:	movw	r2, #37280	; 0x91a0
   13d98:	cmp	r0, #0
   13d9c:	movt	r2, #2
   13da0:	movne	r2, r0
   13da4:	str	r1, [r2]
   13da8:	bx	lr
   13dac:	movw	r3, #37280	; 0x91a0
   13db0:	cmp	r0, #0
   13db4:	movt	r3, #2
   13db8:	movne	r3, r0
   13dbc:	ubfx	r0, r1, #5, #3
   13dc0:	and	r1, r1, #31
   13dc4:	add	r0, r3, r0, lsl #2
   13dc8:	ldr	r3, [r0, #8]
   13dcc:	eor	r2, r2, r3, lsr r1
   13dd0:	and	r2, r2, #1
   13dd4:	eor	r2, r3, r2, lsl r1
   13dd8:	str	r2, [r0, #8]
   13ddc:	mov	r0, #1
   13de0:	and	r0, r0, r3, lsr r1
   13de4:	bx	lr
   13de8:	movw	r2, #37280	; 0x91a0
   13dec:	cmp	r0, #0
   13df0:	movt	r2, #2
   13df4:	movne	r2, r0
   13df8:	ldr	r0, [r2, #4]
   13dfc:	str	r1, [r2, #4]
   13e00:	bx	lr
   13e04:	movw	r3, #37280	; 0x91a0
   13e08:	cmp	r0, #0
   13e0c:	movt	r3, #2
   13e10:	movne	r3, r0
   13e14:	cmp	r1, #0
   13e18:	mov	r0, #10
   13e1c:	cmpne	r2, #0
   13e20:	str	r0, [r3]
   13e24:	bne	13e34 <dcngettext@plt+0x2988>
   13e28:	push	{fp, lr}
   13e2c:	mov	fp, sp
   13e30:	bl	11494 <abort@plt>
   13e34:	str	r1, [r3, #40]	; 0x28
   13e38:	str	r2, [r3, #44]	; 0x2c
   13e3c:	bx	lr
   13e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e44:	add	fp, sp, #28
   13e48:	sub	sp, sp, #20
   13e4c:	mov	r7, r0
   13e50:	ldr	r0, [fp, #8]
   13e54:	movw	r5, #37280	; 0x91a0
   13e58:	mov	r8, r3
   13e5c:	mov	r9, r2
   13e60:	mov	sl, r1
   13e64:	movt	r5, #2
   13e68:	cmp	r0, #0
   13e6c:	movne	r5, r0
   13e70:	bl	11374 <__errno_location@plt>
   13e74:	mov	r4, r0
   13e78:	ldm	r5, {r0, r1}
   13e7c:	ldr	r2, [r5, #40]	; 0x28
   13e80:	ldr	r3, [r5, #44]	; 0x2c
   13e84:	add	r5, r5, #8
   13e88:	ldr	r6, [r4]
   13e8c:	stm	sp, {r0, r1, r5}
   13e90:	str	r2, [sp, #12]
   13e94:	str	r3, [sp, #16]
   13e98:	mov	r0, r7
   13e9c:	mov	r1, sl
   13ea0:	mov	r2, r9
   13ea4:	mov	r3, r8
   13ea8:	bl	13eb8 <dcngettext@plt+0x2a0c>
   13eac:	str	r6, [r4]
   13eb0:	sub	sp, fp, #28
   13eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ebc:	add	fp, sp, #28
   13ec0:	sub	sp, sp, #156	; 0x9c
   13ec4:	str	r0, [sp, #76]	; 0x4c
   13ec8:	ldr	r0, [fp, #12]
   13ecc:	mov	r6, r1
   13ed0:	str	r3, [sp, #84]	; 0x54
   13ed4:	str	r2, [fp, #-84]	; 0xffffffac
   13ed8:	and	r1, r0, #4
   13edc:	str	r1, [sp, #24]
   13ee0:	and	r1, r0, #1
   13ee4:	str	r1, [sp, #28]
   13ee8:	ubfx	r8, r0, #1, #1
   13eec:	bl	11290 <__ctype_get_mb_cur_max@plt>
   13ef0:	str	r0, [sp, #32]
   13ef4:	ldr	r0, [fp, #24]
   13ef8:	ldr	r7, [fp, #8]
   13efc:	mov	r1, #0
   13f00:	mov	r2, #0
   13f04:	mov	r4, #1
   13f08:	str	r1, [sp, #52]	; 0x34
   13f0c:	str	r0, [sp, #72]	; 0x48
   13f10:	ldr	r0, [fp, #20]
   13f14:	str	r0, [sp, #68]	; 0x44
   13f18:	mov	r0, #0
   13f1c:	str	r0, [sp, #48]	; 0x30
   13f20:	mov	r0, #0
   13f24:	str	r0, [sp, #92]	; 0x5c
   13f28:	mov	r0, #0
   13f2c:	str	r0, [fp, #-76]	; 0xffffffb4
   13f30:	mov	r0, #0
   13f34:	cmp	r7, #10
   13f38:	bhi	15220 <dcngettext@plt+0x3d74>
   13f3c:	add	r1, pc, #28
   13f40:	mov	sl, r6
   13f44:	ldr	r6, [sp, #76]	; 0x4c
   13f48:	ldr	ip, [fp, #-84]	; 0xffffffac
   13f4c:	ldr	lr, [sp, #84]	; 0x54
   13f50:	mov	r9, #0
   13f54:	mov	r3, #1
   13f58:	mov	r5, #0
   13f5c:	ldr	pc, [r1, r7, lsl #2]
   13f60:	andeq	r4, r1, r0, lsr r0
   13f64:	andeq	r4, r1, ip, rrx
   13f68:	andeq	r4, r1, r0, asr #32
   13f6c:	andeq	r4, r1, r8, lsr #32
   13f70:	andeq	r4, r1, r0, rrx
   13f74:	muleq	r1, r4, r0
   13f78:	andeq	r4, r1, r0, asr r0
   13f7c:	andeq	r4, r1, r0, lsr #5
   13f80:	andeq	r3, r1, ip, lsl #31
   13f84:	andeq	r3, r1, ip, lsl #31
   13f88:	andeq	r4, r1, r4, lsr r2
   13f8c:	mov	r9, r4
   13f90:	movw	r4, #32224	; 0x7de0
   13f94:	mov	r5, r8
   13f98:	mov	r8, r2
   13f9c:	mov	r0, #0
   13fa0:	mov	r2, #5
   13fa4:	movt	r4, #1
   13fa8:	mov	r1, r4
   13fac:	bl	11224 <dcgettext@plt>
   13fb0:	cmp	r0, r4
   13fb4:	str	r0, [sp, #68]	; 0x44
   13fb8:	bne	14148 <dcngettext@plt+0x2c9c>
   13fbc:	bl	175bc <dcngettext@plt+0x6110>
   13fc0:	ldrb	r1, [r0]
   13fc4:	and	r1, r1, #223	; 0xdf
   13fc8:	cmp	r1, #71	; 0x47
   13fcc:	beq	14114 <dcngettext@plt+0x2c68>
   13fd0:	cmp	r1, #85	; 0x55
   13fd4:	bne	1412c <dcngettext@plt+0x2c80>
   13fd8:	ldrb	r1, [r0, #1]
   13fdc:	and	r1, r1, #223	; 0xdf
   13fe0:	cmp	r1, #84	; 0x54
   13fe4:	bne	1412c <dcngettext@plt+0x2c80>
   13fe8:	ldrb	r1, [r0, #2]
   13fec:	and	r1, r1, #223	; 0xdf
   13ff0:	cmp	r1, #70	; 0x46
   13ff4:	bne	1412c <dcngettext@plt+0x2c80>
   13ff8:	ldrb	r1, [r0, #3]
   13ffc:	cmp	r1, #45	; 0x2d
   14000:	ldrbeq	r1, [r0, #4]
   14004:	cmpeq	r1, #56	; 0x38
   14008:	bne	1412c <dcngettext@plt+0x2c80>
   1400c:	ldrb	r0, [r0, #5]
   14010:	cmp	r0, #0
   14014:	movw	r0, #32228	; 0x7de4
   14018:	movt	r0, #1
   1401c:	str	r0, [sp, #68]	; 0x44
   14020:	bne	1412c <dcngettext@plt+0x2c80>
   14024:	b	14148 <dcngettext@plt+0x2c9c>
   14028:	mov	r0, #1
   1402c:	b	1406c <dcngettext@plt+0x2bc0>
   14030:	mov	r7, #0
   14034:	mov	r9, #0
   14038:	mov	r3, r0
   1403c:	b	1410c <dcngettext@plt+0x2c60>
   14040:	tst	r8, #1
   14044:	bne	1406c <dcngettext@plt+0x2bc0>
   14048:	mov	r3, r0
   1404c:	b	140c4 <dcngettext@plt+0x2c18>
   14050:	mov	r0, #1
   14054:	mov	r9, #0
   14058:	mov	r7, #5
   1405c:	b	140a8 <dcngettext@plt+0x2bfc>
   14060:	mov	r3, #1
   14064:	tst	r8, #1
   14068:	beq	140c4 <dcngettext@plt+0x2c18>
   1406c:	mov	r1, #1
   14070:	mov	r9, #0
   14074:	mov	r7, #2
   14078:	mov	r3, r0
   1407c:	mov	r5, #1
   14080:	str	r1, [fp, #-76]	; 0xffffffb4
   14084:	movw	r1, #32226	; 0x7de2
   14088:	movt	r1, #1
   1408c:	str	r1, [sp, #92]	; 0x5c
   14090:	b	142a0 <dcngettext@plt+0x2df4>
   14094:	mov	r7, #5
   14098:	tst	r8, #1
   1409c:	beq	140e4 <dcngettext@plt+0x2c38>
   140a0:	mov	r0, #1
   140a4:	mov	r9, #0
   140a8:	str	r0, [fp, #-76]	; 0xffffffb4
   140ac:	movw	r0, #32222	; 0x7dde
   140b0:	mov	r3, #1
   140b4:	mov	r5, #1
   140b8:	movt	r0, #1
   140bc:	str	r0, [sp, #92]	; 0x5c
   140c0:	b	142a0 <dcngettext@plt+0x2df4>
   140c4:	cmp	sl, #0
   140c8:	mov	r9, #1
   140cc:	mov	r7, #2
   140d0:	movne	r0, #39	; 0x27
   140d4:	strbne	r0, [r6]
   140d8:	movw	r0, #32226	; 0x7de2
   140dc:	movt	r0, #1
   140e0:	b	14100 <dcngettext@plt+0x2c54>
   140e4:	cmp	sl, #0
   140e8:	mov	r9, #1
   140ec:	mov	r3, #1
   140f0:	movne	r0, #34	; 0x22
   140f4:	strbne	r0, [r6]
   140f8:	movw	r0, #32222	; 0x7dde
   140fc:	movt	r0, #1
   14100:	str	r0, [sp, #92]	; 0x5c
   14104:	mov	r0, #1
   14108:	str	r0, [fp, #-76]	; 0xffffffb4
   1410c:	mov	r5, #0
   14110:	b	142a0 <dcngettext@plt+0x2df4>
   14114:	ldrb	r1, [r0, #1]
   14118:	and	r1, r1, #223	; 0xdf
   1411c:	cmp	r1, #66	; 0x42
   14120:	ldrbeq	r1, [r0, #2]
   14124:	cmpeq	r1, #49	; 0x31
   14128:	beq	15048 <dcngettext@plt+0x3b9c>
   1412c:	movw	r0, #32226	; 0x7de2
   14130:	movw	r1, #32222	; 0x7dde
   14134:	cmp	r7, #9
   14138:	movt	r0, #1
   1413c:	movt	r1, #1
   14140:	moveq	r0, r1
   14144:	str	r0, [sp, #68]	; 0x44
   14148:	movw	r4, #32226	; 0x7de2
   1414c:	mov	r0, #0
   14150:	mov	r2, #5
   14154:	movt	r4, #1
   14158:	mov	r1, r4
   1415c:	bl	11224 <dcgettext@plt>
   14160:	cmp	r0, r4
   14164:	str	r0, [sp, #72]	; 0x48
   14168:	beq	14178 <dcngettext@plt+0x2ccc>
   1416c:	mov	r4, r9
   14170:	mov	r2, r8
   14174:	b	14230 <dcngettext@plt+0x2d84>
   14178:	bl	175bc <dcngettext@plt+0x6110>
   1417c:	ldrb	r1, [r0]
   14180:	mov	r4, r9
   14184:	and	r1, r1, #223	; 0xdf
   14188:	cmp	r1, #71	; 0x47
   1418c:	beq	141e8 <dcngettext@plt+0x2d3c>
   14190:	cmp	r1, #85	; 0x55
   14194:	mov	r2, r8
   14198:	bne	14210 <dcngettext@plt+0x2d64>
   1419c:	ldrb	r1, [r0, #1]
   141a0:	and	r1, r1, #223	; 0xdf
   141a4:	cmp	r1, #84	; 0x54
   141a8:	bne	14210 <dcngettext@plt+0x2d64>
   141ac:	ldrb	r1, [r0, #2]
   141b0:	and	r1, r1, #223	; 0xdf
   141b4:	cmp	r1, #70	; 0x46
   141b8:	ldrbeq	r1, [r0, #3]
   141bc:	cmpeq	r1, #45	; 0x2d
   141c0:	bne	14210 <dcngettext@plt+0x2d64>
   141c4:	ldrb	r1, [r0, #4]
   141c8:	cmp	r1, #56	; 0x38
   141cc:	ldrbeq	r0, [r0, #5]
   141d0:	cmpeq	r0, #0
   141d4:	bne	14210 <dcngettext@plt+0x2d64>
   141d8:	movw	r0, #32232	; 0x7de8
   141dc:	movt	r0, #1
   141e0:	str	r0, [sp, #72]	; 0x48
   141e4:	b	14230 <dcngettext@plt+0x2d84>
   141e8:	ldrb	r1, [r0, #1]
   141ec:	mov	r2, r8
   141f0:	and	r1, r1, #223	; 0xdf
   141f4:	cmp	r1, #66	; 0x42
   141f8:	bne	14210 <dcngettext@plt+0x2d64>
   141fc:	ldrb	r1, [r0, #2]
   14200:	cmp	r1, #49	; 0x31
   14204:	ldrbeq	r1, [r0, #3]
   14208:	cmpeq	r1, #56	; 0x38
   1420c:	beq	1508c <dcngettext@plt+0x3be0>
   14210:	movw	r0, #32226	; 0x7de2
   14214:	cmp	r7, #9
   14218:	movt	r0, #1
   1421c:	mov	r1, r0
   14220:	movw	r0, #32222	; 0x7dde
   14224:	movt	r0, #1
   14228:	moveq	r1, r0
   1422c:	str	r1, [sp, #72]	; 0x48
   14230:	mov	r8, r5
   14234:	mov	r9, #0
   14238:	tst	r8, #1
   1423c:	mov	r5, r8
   14240:	str	r2, [fp, #-48]	; 0xffffffd0
   14244:	bne	1427c <dcngettext@plt+0x2dd0>
   14248:	ldr	r0, [sp, #68]	; 0x44
   1424c:	ldrb	r0, [r0]
   14250:	cmp	r0, #0
   14254:	beq	1427c <dcngettext@plt+0x2dd0>
   14258:	ldr	r1, [sp, #68]	; 0x44
   1425c:	mov	r9, #0
   14260:	add	r1, r1, #1
   14264:	cmp	r9, sl
   14268:	strbcc	r0, [r6, r9]
   1426c:	ldrb	r0, [r1, r9]
   14270:	add	r9, r9, #1
   14274:	cmp	r0, #0
   14278:	bne	14264 <dcngettext@plt+0x2db8>
   1427c:	ldr	r8, [sp, #72]	; 0x48
   14280:	mov	r0, r8
   14284:	bl	1135c <strlen@plt>
   14288:	ldr	ip, [fp, #-84]	; 0xffffffac
   1428c:	ldr	lr, [sp, #84]	; 0x54
   14290:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14294:	str	r0, [fp, #-76]	; 0xffffffb4
   14298:	str	r8, [sp, #92]	; 0x5c
   1429c:	mov	r3, #1
   142a0:	ldr	r0, [fp, #16]
   142a4:	str	r7, [fp, #-64]	; 0xffffffc0
   142a8:	str	r5, [fp, #-72]	; 0xffffffb8
   142ac:	str	r3, [sp, #80]	; 0x50
   142b0:	cmp	r0, #0
   142b4:	movwne	r0, #1
   142b8:	and	r0, r0, r5
   142bc:	str	r0, [fp, #-88]	; 0xffffffa8
   142c0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   142c4:	cmp	r0, #0
   142c8:	movwne	r0, #1
   142cc:	subs	r7, r7, #2
   142d0:	and	r1, r0, r5
   142d4:	str	r7, [fp, #-80]	; 0xffffffb0
   142d8:	and	r1, r3, r1
   142dc:	str	r1, [sp, #40]	; 0x28
   142e0:	clz	r1, r7
   142e4:	lsr	r1, r1, #5
   142e8:	and	r1, r1, r5
   142ec:	eor	r5, r5, #1
   142f0:	str	r1, [sp, #36]	; 0x24
   142f4:	mov	r1, r7
   142f8:	str	r5, [sp, #88]	; 0x58
   142fc:	mov	r7, #0
   14300:	movwne	r1, #1
   14304:	orr	r5, r1, r5
   14308:	and	r1, r1, r3
   1430c:	and	r0, r0, r1
   14310:	str	r5, [sp, #60]	; 0x3c
   14314:	str	r1, [fp, #-68]	; 0xffffffbc
   14318:	str	r0, [fp, #-60]	; 0xffffffc4
   1431c:	eor	r0, r3, #1
   14320:	str	r0, [sp, #44]	; 0x2c
   14324:	cmn	lr, #1
   14328:	beq	14338 <dcngettext@plt+0x2e8c>
   1432c:	cmp	r7, lr
   14330:	bne	14344 <dcngettext@plt+0x2e98>
   14334:	b	14fbc <dcngettext@plt+0x3b10>
   14338:	ldrb	r0, [ip, r7]
   1433c:	cmp	r0, #0
   14340:	beq	14fc4 <dcngettext@plt+0x3b18>
   14344:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14348:	mov	r8, #0
   1434c:	str	r4, [fp, #-52]	; 0xffffffcc
   14350:	str	r2, [fp, #-48]	; 0xffffffd0
   14354:	cmp	r0, #0
   14358:	beq	1438c <dcngettext@plt+0x2ee0>
   1435c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14360:	add	r4, r7, r0
   14364:	cmp	r0, #2
   14368:	bcc	14384 <dcngettext@plt+0x2ed8>
   1436c:	cmn	lr, #1
   14370:	bne	14384 <dcngettext@plt+0x2ed8>
   14374:	mov	r0, ip
   14378:	bl	1135c <strlen@plt>
   1437c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14380:	mov	lr, r0
   14384:	cmp	r4, lr
   14388:	bls	143a4 <dcngettext@plt+0x2ef8>
   1438c:	mov	r0, #0
   14390:	str	r0, [fp, #-56]	; 0xffffffc8
   14394:	ldrb	r5, [ip, r7]
   14398:	cmp	r5, #126	; 0x7e
   1439c:	bls	143f4 <dcngettext@plt+0x2f48>
   143a0:	b	147fc <dcngettext@plt+0x3350>
   143a4:	ldr	r1, [sp, #92]	; 0x5c
   143a8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   143ac:	add	r0, ip, r7
   143b0:	mov	r4, lr
   143b4:	bl	11218 <memcmp@plt>
   143b8:	ldr	r2, [sp, #88]	; 0x58
   143bc:	cmp	r0, #0
   143c0:	mov	r1, r0
   143c4:	movwne	r1, #1
   143c8:	orr	r1, r1, r2
   143cc:	tst	r1, #1
   143d0:	beq	150d0 <dcngettext@plt+0x3c24>
   143d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   143d8:	clz	r0, r0
   143dc:	mov	lr, r4
   143e0:	lsr	r0, r0, #5
   143e4:	str	r0, [fp, #-56]	; 0xffffffc8
   143e8:	ldrb	r5, [ip, r7]
   143ec:	cmp	r5, #126	; 0x7e
   143f0:	bhi	147fc <dcngettext@plt+0x3350>
   143f4:	add	r3, pc, #16
   143f8:	mov	r4, #1
   143fc:	mov	r2, #110	; 0x6e
   14400:	mov	r0, #97	; 0x61
   14404:	mov	r1, #0
   14408:	ldr	pc, [r3, r5, lsl #2]
   1440c:	ldrdeq	r4, [r1], -ip
   14410:	strdeq	r4, [r1], -ip
   14414:	strdeq	r4, [r1], -ip
   14418:	strdeq	r4, [r1], -ip
   1441c:	strdeq	r4, [r1], -ip
   14420:	strdeq	r4, [r1], -ip
   14424:	strdeq	r4, [r1], -ip
   14428:	ldrdeq	r4, [r1], -r8
   1442c:			; <UNDEFINED> instruction: 0x000146bc
   14430:	andeq	r4, r1, r4, lsr #13
   14434:	andeq	r4, r1, r8, asr #13
   14438:	andeq	r4, r1, r8, asr r7
   1443c:	muleq	r1, ip, r6
   14440:	andeq	r4, r1, r4, asr #13
   14444:	strdeq	r4, [r1], -ip
   14448:	strdeq	r4, [r1], -ip
   1444c:	strdeq	r4, [r1], -ip
   14450:	strdeq	r4, [r1], -ip
   14454:	strdeq	r4, [r1], -ip
   14458:	strdeq	r4, [r1], -ip
   1445c:	strdeq	r4, [r1], -ip
   14460:	strdeq	r4, [r1], -ip
   14464:	strdeq	r4, [r1], -ip
   14468:	strdeq	r4, [r1], -ip
   1446c:	strdeq	r4, [r1], -ip
   14470:	strdeq	r4, [r1], -ip
   14474:	strdeq	r4, [r1], -ip
   14478:	strdeq	r4, [r1], -ip
   1447c:	strdeq	r4, [r1], -ip
   14480:	strdeq	r4, [r1], -ip
   14484:	strdeq	r4, [r1], -ip
   14488:	strdeq	r4, [r1], -ip
   1448c:	andeq	r4, r1, r4, asr r8
   14490:	andeq	r4, r1, r8, asr r8
   14494:	andeq	r4, r1, r8, asr r8
   14498:	andeq	r4, r1, r8, lsr #12
   1449c:	andeq	r4, r1, r8, asr r8
   144a0:	andeq	r4, r1, r8, lsl #12
   144a4:	andeq	r4, r1, r8, asr r8
   144a8:	andeq	r4, r1, r0, ror #14
   144ac:	andeq	r4, r1, r8, asr r8
   144b0:	andeq	r4, r1, r8, asr r8
   144b4:	andeq	r4, r1, r8, asr r8
   144b8:	andeq	r4, r1, r8, lsl #12
   144bc:	andeq	r4, r1, r8, lsl #12
   144c0:	andeq	r4, r1, r8, lsl #12
   144c4:	andeq	r4, r1, r8, lsl #12
   144c8:	andeq	r4, r1, r8, lsl #12
   144cc:	andeq	r4, r1, r8, lsl #12
   144d0:	andeq	r4, r1, r8, lsl #12
   144d4:	andeq	r4, r1, r8, lsl #12
   144d8:	andeq	r4, r1, r8, lsl #12
   144dc:	andeq	r4, r1, r8, lsl #12
   144e0:	andeq	r4, r1, r8, lsl #12
   144e4:	andeq	r4, r1, r8, lsl #12
   144e8:	andeq	r4, r1, r8, lsl #12
   144ec:	andeq	r4, r1, r8, lsl #12
   144f0:	andeq	r4, r1, r8, lsl #12
   144f4:	andeq	r4, r1, r8, lsl #12
   144f8:	andeq	r4, r1, r8, asr r8
   144fc:	andeq	r4, r1, r8, asr r8
   14500:	andeq	r4, r1, r8, asr r8
   14504:	andeq	r4, r1, r8, asr r8
   14508:	andeq	r4, r1, ip, lsl r7
   1450c:	strdeq	r4, [r1], -ip
   14510:	andeq	r4, r1, r8, lsl #12
   14514:	andeq	r4, r1, r8, lsl #12
   14518:	andeq	r4, r1, r8, lsl #12
   1451c:	andeq	r4, r1, r8, lsl #12
   14520:	andeq	r4, r1, r8, lsl #12
   14524:	andeq	r4, r1, r8, lsl #12
   14528:	andeq	r4, r1, r8, lsl #12
   1452c:	andeq	r4, r1, r8, lsl #12
   14530:	andeq	r4, r1, r8, lsl #12
   14534:	andeq	r4, r1, r8, lsl #12
   14538:	andeq	r4, r1, r8, lsl #12
   1453c:	andeq	r4, r1, r8, lsl #12
   14540:	andeq	r4, r1, r8, lsl #12
   14544:	andeq	r4, r1, r8, lsl #12
   14548:	andeq	r4, r1, r8, lsl #12
   1454c:	andeq	r4, r1, r8, lsl #12
   14550:	andeq	r4, r1, r8, lsl #12
   14554:	andeq	r4, r1, r8, lsl #12
   14558:	andeq	r4, r1, r8, lsl #12
   1455c:	andeq	r4, r1, r8, lsl #12
   14560:	andeq	r4, r1, r8, lsl #12
   14564:	andeq	r4, r1, r8, lsl #12
   14568:	andeq	r4, r1, r8, lsl #12
   1456c:	andeq	r4, r1, r8, lsl #12
   14570:	andeq	r4, r1, r8, lsl #12
   14574:	andeq	r4, r1, r8, lsl #12
   14578:	andeq	r4, r1, r8, asr r8
   1457c:	andeq	r4, r1, r8, ror #12
   14580:	andeq	r4, r1, r8, lsl #12
   14584:	andeq	r4, r1, r8, asr r8
   14588:	andeq	r4, r1, r8, lsl #12
   1458c:	andeq	r4, r1, r8, asr r8
   14590:	andeq	r4, r1, r8, lsl #12
   14594:	andeq	r4, r1, r8, lsl #12
   14598:	andeq	r4, r1, r8, lsl #12
   1459c:	andeq	r4, r1, r8, lsl #12
   145a0:	andeq	r4, r1, r8, lsl #12
   145a4:	andeq	r4, r1, r8, lsl #12
   145a8:	andeq	r4, r1, r8, lsl #12
   145ac:	andeq	r4, r1, r8, lsl #12
   145b0:	andeq	r4, r1, r8, lsl #12
   145b4:	andeq	r4, r1, r8, lsl #12
   145b8:	andeq	r4, r1, r8, lsl #12
   145bc:	andeq	r4, r1, r8, lsl #12
   145c0:	andeq	r4, r1, r8, lsl #12
   145c4:	andeq	r4, r1, r8, lsl #12
   145c8:	andeq	r4, r1, r8, lsl #12
   145cc:	andeq	r4, r1, r8, lsl #12
   145d0:	andeq	r4, r1, r8, lsl #12
   145d4:	andeq	r4, r1, r8, lsl #12
   145d8:	andeq	r4, r1, r8, lsl #12
   145dc:	andeq	r4, r1, r8, lsl #12
   145e0:	andeq	r4, r1, r8, lsl #12
   145e4:	andeq	r4, r1, r8, lsl #12
   145e8:	andeq	r4, r1, r8, lsl #12
   145ec:	andeq	r4, r1, r8, lsl #12
   145f0:	andeq	r4, r1, r8, lsl #12
   145f4:	andeq	r4, r1, r8, lsl #12
   145f8:	andeq	r4, r1, r8, asr #12
   145fc:	andeq	r4, r1, r8, asr r8
   14600:	andeq	r4, r1, r8, asr #12
   14604:	andeq	r4, r1, r8, lsr #12
   14608:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1460c:	cmp	r0, #0
   14610:	beq	148ec <dcngettext@plt+0x3440>
   14614:	ldr	r0, [fp, #16]
   14618:	cmp	r0, #0
   1461c:	mov	r0, r5
   14620:	bne	148fc <dcngettext@plt+0x3450>
   14624:	b	1491c <dcngettext@plt+0x3470>
   14628:	mov	r4, #0
   1462c:	cmp	r7, #0
   14630:	beq	14854 <dcngettext@plt+0x33a8>
   14634:	mov	r8, #0
   14638:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1463c:	cmp	r0, #0
   14640:	bne	14614 <dcngettext@plt+0x3168>
   14644:	b	148ec <dcngettext@plt+0x3440>
   14648:	mov	r4, #0
   1464c:	cmn	lr, #1
   14650:	beq	1482c <dcngettext@plt+0x3380>
   14654:	cmp	r7, #0
   14658:	bne	14634 <dcngettext@plt+0x3188>
   1465c:	cmp	lr, #1
   14660:	beq	14854 <dcngettext@plt+0x33a8>
   14664:	b	14634 <dcngettext@plt+0x3188>
   14668:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1466c:	cmp	r0, #2
   14670:	bne	14884 <dcngettext@plt+0x33d8>
   14674:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14678:	tst	r0, #1
   1467c:	bne	150e4 <dcngettext@plt+0x3c38>
   14680:	mov	r8, #0
   14684:	mov	r0, #92	; 0x5c
   14688:	mov	r4, #0
   1468c:	cmp	r8, #0
   14690:	beq	148a4 <dcngettext@plt+0x33f8>
   14694:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14698:	b	14998 <dcngettext@plt+0x34ec>
   1469c:	mov	r0, #102	; 0x66
   146a0:	b	148d8 <dcngettext@plt+0x342c>
   146a4:	mov	r2, #116	; 0x74
   146a8:	ldr	r0, [sp, #60]	; 0x3c
   146ac:	tst	r0, #1
   146b0:	mov	r0, r2
   146b4:	bne	148d8 <dcngettext@plt+0x342c>
   146b8:	b	150e4 <dcngettext@plt+0x3c38>
   146bc:	mov	r0, #98	; 0x62
   146c0:	b	148d8 <dcngettext@plt+0x342c>
   146c4:	mov	r2, #114	; 0x72
   146c8:	ldr	r0, [sp, #60]	; 0x3c
   146cc:	tst	r0, #1
   146d0:	mov	r0, r2
   146d4:	bne	148d8 <dcngettext@plt+0x342c>
   146d8:	b	150e4 <dcngettext@plt+0x3c38>
   146dc:	ldr	r0, [sp, #80]	; 0x50
   146e0:	tst	r0, #1
   146e4:	beq	149c0 <dcngettext@plt+0x3514>
   146e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   146ec:	tst	r0, #1
   146f0:	bne	1520c <dcngettext@plt+0x3d60>
   146f4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   146f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   146fc:	cmp	r0, #2
   14700:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14704:	movwne	r0, #1
   14708:	orr	r0, r0, r2
   1470c:	tst	r0, #1
   14710:	beq	14cb8 <dcngettext@plt+0x380c>
   14714:	mov	r0, r9
   14718:	b	14cec <dcngettext@plt+0x3840>
   1471c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14720:	mov	r8, #0
   14724:	mov	r5, #63	; 0x3f
   14728:	cmp	r0, #5
   1472c:	beq	14b74 <dcngettext@plt+0x36c8>
   14730:	cmp	r0, #2
   14734:	bne	14c24 <dcngettext@plt+0x3778>
   14738:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1473c:	tst	r0, #1
   14740:	bne	150e4 <dcngettext@plt+0x3c38>
   14744:	mov	r4, #0
   14748:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1474c:	cmp	r0, #0
   14750:	bne	14614 <dcngettext@plt+0x3168>
   14754:	b	148ec <dcngettext@plt+0x3440>
   14758:	mov	r0, #118	; 0x76
   1475c:	b	148d8 <dcngettext@plt+0x342c>
   14760:	mov	r0, #1
   14764:	mov	r5, #39	; 0x27
   14768:	str	r0, [sp, #52]	; 0x34
   1476c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14770:	cmp	r0, #2
   14774:	bne	147e8 <dcngettext@plt+0x333c>
   14778:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1477c:	tst	r0, #1
   14780:	bne	150e4 <dcngettext@plt+0x3c38>
   14784:	ldr	r2, [sp, #48]	; 0x30
   14788:	clz	r1, sl
   1478c:	mov	r8, #0
   14790:	lsr	r1, r1, #5
   14794:	cmp	r2, #0
   14798:	mov	r0, r2
   1479c:	movwne	r0, #1
   147a0:	orrs	r0, r0, r1
   147a4:	moveq	r2, sl
   147a8:	moveq	sl, r0
   147ac:	cmp	r9, sl
   147b0:	str	r2, [sp, #48]	; 0x30
   147b4:	movcc	r0, #39	; 0x27
   147b8:	strbcc	r0, [r6, r9]
   147bc:	add	r0, r9, #1
   147c0:	cmp	r0, sl
   147c4:	movcc	r1, #92	; 0x5c
   147c8:	strbcc	r1, [r6, r0]
   147cc:	add	r0, r9, #2
   147d0:	add	r9, r9, #3
   147d4:	cmp	r0, sl
   147d8:	movcc	r1, #39	; 0x27
   147dc:	strbcc	r1, [r6, r0]
   147e0:	mov	r0, #0
   147e4:	str	r0, [fp, #-48]	; 0xffffffd0
   147e8:	mov	r4, #1
   147ec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   147f0:	cmp	r0, #0
   147f4:	bne	14614 <dcngettext@plt+0x3168>
   147f8:	b	148ec <dcngettext@plt+0x3440>
   147fc:	ldr	r0, [sp, #32]
   14800:	cmp	r0, #1
   14804:	bne	149f0 <dcngettext@plt+0x3544>
   14808:	str	lr, [sp, #84]	; 0x54
   1480c:	bl	11344 <__ctype_b_loc@plt>
   14810:	ldr	r0, [r0]
   14814:	ldr	ip, [fp, #-84]	; 0xffffffac
   14818:	mov	r1, #1
   1481c:	add	r0, r0, r5, lsl #1
   14820:	ldrb	r0, [r0, #1]
   14824:	ubfx	r4, r0, #6, #1
   14828:	b	14de8 <dcngettext@plt+0x393c>
   1482c:	cmp	r7, #0
   14830:	ldrbeq	r0, [ip, #1]
   14834:	cmpeq	r0, #0
   14838:	beq	14854 <dcngettext@plt+0x33a8>
   1483c:	mvn	lr, #0
   14840:	mov	r8, #0
   14844:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14848:	cmp	r0, #0
   1484c:	bne	14614 <dcngettext@plt+0x3168>
   14850:	b	148ec <dcngettext@plt+0x3440>
   14854:	mov	r1, #1
   14858:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1485c:	cmp	r0, #2
   14860:	bne	14870 <dcngettext@plt+0x33c4>
   14864:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14868:	tst	r0, #1
   1486c:	bne	150e4 <dcngettext@plt+0x3c38>
   14870:	mov	r4, r1
   14874:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14878:	cmp	r0, #0
   1487c:	bne	14614 <dcngettext@plt+0x3168>
   14880:	b	148ec <dcngettext@plt+0x3440>
   14884:	ldr	r1, [sp, #40]	; 0x28
   14888:	mov	r8, #0
   1488c:	mov	r0, #92	; 0x5c
   14890:	cmp	r1, #0
   14894:	beq	148d8 <dcngettext@plt+0x342c>
   14898:	mov	r4, #0
   1489c:	cmp	r8, #0
   148a0:	bne	14694 <dcngettext@plt+0x31e8>
   148a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   148a8:	tst	r2, #1
   148ac:	beq	14998 <dcngettext@plt+0x34ec>
   148b0:	cmp	r9, sl
   148b4:	movcc	r1, #39	; 0x27
   148b8:	strbcc	r1, [r6, r9]
   148bc:	add	r1, r9, #1
   148c0:	add	r9, r9, #2
   148c4:	cmp	r1, sl
   148c8:	movcc	r2, #39	; 0x27
   148cc:	strbcc	r2, [r6, r1]
   148d0:	mov	r2, #0
   148d4:	b	14998 <dcngettext@plt+0x34ec>
   148d8:	ldr	r1, [sp, #80]	; 0x50
   148dc:	mov	r4, #0
   148e0:	mov	r8, #0
   148e4:	tst	r1, #1
   148e8:	bne	14928 <dcngettext@plt+0x347c>
   148ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   148f0:	cmp	r0, #0
   148f4:	mov	r0, r5
   148f8:	beq	1491c <dcngettext@plt+0x3470>
   148fc:	ldr	r1, [fp, #16]
   14900:	ubfx	r0, r5, #5, #3
   14904:	mov	r2, #1
   14908:	ldr	r0, [r1, r0, lsl #2]
   1490c:	and	r1, r5, #31
   14910:	tst	r0, r2, lsl r1
   14914:	mov	r0, r5
   14918:	bne	14928 <dcngettext@plt+0x347c>
   1491c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14920:	cmp	r1, #0
   14924:	beq	14d80 <dcngettext@plt+0x38d4>
   14928:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1492c:	tst	r1, #1
   14930:	bne	150c4 <dcngettext@plt+0x3c18>
   14934:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14938:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1493c:	cmp	r1, #2
   14940:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14944:	movwne	r1, #1
   14948:	orr	r1, r1, r2
   1494c:	tst	r1, #1
   14950:	bne	14988 <dcngettext@plt+0x34dc>
   14954:	cmp	r9, sl
   14958:	movcc	r1, #39	; 0x27
   1495c:	strbcc	r1, [r6, r9]
   14960:	add	r1, r9, #1
   14964:	cmp	r1, sl
   14968:	movcc	r2, #36	; 0x24
   1496c:	strbcc	r2, [r6, r1]
   14970:	add	r1, r9, #2
   14974:	add	r9, r9, #3
   14978:	cmp	r1, sl
   1497c:	movcc	r2, #39	; 0x27
   14980:	strbcc	r2, [r6, r1]
   14984:	mov	r2, #1
   14988:	cmp	r9, sl
   1498c:	movcc	r1, #92	; 0x5c
   14990:	strbcc	r1, [r6, r9]
   14994:	add	r9, r9, #1
   14998:	cmp	r9, sl
   1499c:	add	r7, r7, #1
   149a0:	strbcc	r0, [r6, r9]
   149a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   149a8:	add	r9, r9, #1
   149ac:	and	r0, r0, r4
   149b0:	mov	r4, r0
   149b4:	cmn	lr, #1
   149b8:	bne	1432c <dcngettext@plt+0x2e80>
   149bc:	b	14338 <dcngettext@plt+0x2e8c>
   149c0:	ldr	r0, [sp, #28]
   149c4:	mov	r4, #0
   149c8:	mov	r8, #0
   149cc:	mov	r5, #0
   149d0:	cmp	r0, #0
   149d4:	beq	148ec <dcngettext@plt+0x3440>
   149d8:	ldr	r4, [fp, #-52]	; 0xffffffcc
   149dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   149e0:	add	r7, r7, #1
   149e4:	cmn	lr, #1
   149e8:	bne	1432c <dcngettext@plt+0x2e80>
   149ec:	b	14338 <dcngettext@plt+0x2e8c>
   149f0:	mov	r0, #0
   149f4:	cmn	lr, #1
   149f8:	str	r0, [fp, #-36]	; 0xffffffdc
   149fc:	str	r0, [fp, #-40]	; 0xffffffd8
   14a00:	bne	14a14 <dcngettext@plt+0x3568>
   14a04:	mov	r0, ip
   14a08:	bl	1135c <strlen@plt>
   14a0c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14a10:	mov	lr, r0
   14a14:	ldr	r0, [sp, #36]	; 0x24
   14a18:	str	sl, [sp, #56]	; 0x38
   14a1c:	str	lr, [sp, #84]	; 0x54
   14a20:	cmp	r0, #0
   14a24:	beq	14c3c <dcngettext@plt+0x3790>
   14a28:	add	r0, ip, r7
   14a2c:	mov	r4, #1
   14a30:	mov	r6, #0
   14a34:	sub	sl, fp, #40	; 0x28
   14a38:	str	r0, [sp, #20]
   14a3c:	str	r6, [sp, #64]	; 0x40
   14a40:	add	r6, r6, r7
   14a44:	sub	r0, fp, #44	; 0x2c
   14a48:	mov	r3, sl
   14a4c:	add	r1, ip, r6
   14a50:	sub	r2, lr, r6
   14a54:	bl	175f4 <dcngettext@plt+0x6148>
   14a58:	cmn	r0, #2
   14a5c:	beq	14d98 <dcngettext@plt+0x38ec>
   14a60:	ldr	sl, [sp, #56]	; 0x38
   14a64:	cmn	r0, #1
   14a68:	beq	14d8c <dcngettext@plt+0x38e0>
   14a6c:	cmp	r0, #0
   14a70:	beq	14d90 <dcngettext@plt+0x38e4>
   14a74:	cmp	r0, #2
   14a78:	bcc	14b38 <dcngettext@plt+0x368c>
   14a7c:	ldr	r1, [sp, #64]	; 0x40
   14a80:	ldr	r2, [sp, #20]
   14a84:	add	r1, r2, r1
   14a88:	mov	r2, #1
   14a8c:	ldrb	r3, [r1, r2]
   14a90:	sub	r3, r3, #91	; 0x5b
   14a94:	cmp	r3, #33	; 0x21
   14a98:	bhi	14b2c <dcngettext@plt+0x3680>
   14a9c:	add	r6, pc, #0
   14aa0:	ldr	pc, [r6, r3, lsl #2]
   14aa4:	strdeq	r5, [r1], -r0
   14aa8:	strdeq	r5, [r1], -r0
   14aac:	andeq	r4, r1, ip, lsr #22
   14ab0:	strdeq	r5, [r1], -r0
   14ab4:	andeq	r4, r1, ip, lsr #22
   14ab8:	strdeq	r5, [r1], -r0
   14abc:	andeq	r4, r1, ip, lsr #22
   14ac0:	andeq	r4, r1, ip, lsr #22
   14ac4:	andeq	r4, r1, ip, lsr #22
   14ac8:	andeq	r4, r1, ip, lsr #22
   14acc:	andeq	r4, r1, ip, lsr #22
   14ad0:	andeq	r4, r1, ip, lsr #22
   14ad4:	andeq	r4, r1, ip, lsr #22
   14ad8:	andeq	r4, r1, ip, lsr #22
   14adc:	andeq	r4, r1, ip, lsr #22
   14ae0:	andeq	r4, r1, ip, lsr #22
   14ae4:	andeq	r4, r1, ip, lsr #22
   14ae8:	andeq	r4, r1, ip, lsr #22
   14aec:	andeq	r4, r1, ip, lsr #22
   14af0:	andeq	r4, r1, ip, lsr #22
   14af4:	andeq	r4, r1, ip, lsr #22
   14af8:	andeq	r4, r1, ip, lsr #22
   14afc:	andeq	r4, r1, ip, lsr #22
   14b00:	andeq	r4, r1, ip, lsr #22
   14b04:	andeq	r4, r1, ip, lsr #22
   14b08:	andeq	r4, r1, ip, lsr #22
   14b0c:	andeq	r4, r1, ip, lsr #22
   14b10:	andeq	r4, r1, ip, lsr #22
   14b14:	andeq	r4, r1, ip, lsr #22
   14b18:	andeq	r4, r1, ip, lsr #22
   14b1c:	andeq	r4, r1, ip, lsr #22
   14b20:	andeq	r4, r1, ip, lsr #22
   14b24:	andeq	r4, r1, ip, lsr #22
   14b28:	strdeq	r5, [r1], -r0
   14b2c:	add	r2, r2, #1
   14b30:	cmp	r2, r0
   14b34:	bcc	14a8c <dcngettext@plt+0x35e0>
   14b38:	ldr	r6, [sp, #64]	; 0x40
   14b3c:	add	r6, r0, r6
   14b40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b44:	bl	11260 <iswprint@plt>
   14b48:	cmp	r0, #0
   14b4c:	sub	sl, fp, #40	; 0x28
   14b50:	movwne	r0, #1
   14b54:	and	r4, r4, r0
   14b58:	mov	r0, sl
   14b5c:	bl	11200 <mbsinit@plt>
   14b60:	ldr	ip, [fp, #-84]	; 0xffffffac
   14b64:	ldr	lr, [sp, #84]	; 0x54
   14b68:	cmp	r0, #0
   14b6c:	beq	14a3c <dcngettext@plt+0x3590>
   14b70:	b	14ddc <dcngettext@plt+0x3930>
   14b74:	ldr	r0, [sp, #24]
   14b78:	cmp	r0, #0
   14b7c:	beq	14c24 <dcngettext@plt+0x3778>
   14b80:	add	r0, r7, #2
   14b84:	cmp	r0, lr
   14b88:	bcs	14c24 <dcngettext@plt+0x3778>
   14b8c:	add	r1, ip, r7
   14b90:	ldrb	r1, [r1, #1]
   14b94:	cmp	r1, #63	; 0x3f
   14b98:	bne	14c24 <dcngettext@plt+0x3778>
   14b9c:	ldrb	r5, [ip, r0]
   14ba0:	sub	r1, r5, #33	; 0x21
   14ba4:	cmp	r1, #29
   14ba8:	bhi	14c24 <dcngettext@plt+0x3778>
   14bac:	movw	r3, #20929	; 0x51c1
   14bb0:	mov	r2, #1
   14bb4:	movt	r3, #14336	; 0x3800
   14bb8:	tst	r3, r2, lsl r1
   14bbc:	beq	14c24 <dcngettext@plt+0x3778>
   14bc0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14bc4:	tst	r1, #1
   14bc8:	bne	15214 <dcngettext@plt+0x3d68>
   14bcc:	cmp	r9, sl
   14bd0:	mov	r7, r0
   14bd4:	mov	r4, #0
   14bd8:	movcc	r1, #63	; 0x3f
   14bdc:	strbcc	r1, [r6, r9]
   14be0:	add	r1, r9, #1
   14be4:	cmp	r1, sl
   14be8:	movcc	r2, #34	; 0x22
   14bec:	strbcc	r2, [r6, r1]
   14bf0:	add	r1, r9, #2
   14bf4:	cmp	r1, sl
   14bf8:	movcc	r2, #34	; 0x22
   14bfc:	strbcc	r2, [r6, r1]
   14c00:	add	r1, r9, #3
   14c04:	add	r9, r9, #4
   14c08:	cmp	r1, sl
   14c0c:	movcc	r2, #63	; 0x3f
   14c10:	strbcc	r2, [r6, r1]
   14c14:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14c18:	cmp	r0, #0
   14c1c:	bne	14614 <dcngettext@plt+0x3168>
   14c20:	b	148ec <dcngettext@plt+0x3440>
   14c24:	mov	r5, #63	; 0x3f
   14c28:	mov	r4, #0
   14c2c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14c30:	cmp	r0, #0
   14c34:	bne	14614 <dcngettext@plt+0x3168>
   14c38:	b	148ec <dcngettext@plt+0x3440>
   14c3c:	mov	r4, #1
   14c40:	mov	r6, #0
   14c44:	sub	sl, fp, #40	; 0x28
   14c48:	str	r6, [sp, #64]	; 0x40
   14c4c:	add	r6, r6, r7
   14c50:	sub	r0, fp, #44	; 0x2c
   14c54:	mov	r3, sl
   14c58:	add	r1, ip, r6
   14c5c:	sub	r2, lr, r6
   14c60:	bl	175f4 <dcngettext@plt+0x6148>
   14c64:	cmn	r0, #2
   14c68:	beq	14d98 <dcngettext@plt+0x38ec>
   14c6c:	cmn	r0, #1
   14c70:	beq	14d8c <dcngettext@plt+0x38e0>
   14c74:	ldr	r6, [sp, #64]	; 0x40
   14c78:	cmp	r0, #0
   14c7c:	beq	14dd8 <dcngettext@plt+0x392c>
   14c80:	add	r6, r0, r6
   14c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c88:	bl	11260 <iswprint@plt>
   14c8c:	cmp	r0, #0
   14c90:	sub	sl, fp, #40	; 0x28
   14c94:	movwne	r0, #1
   14c98:	and	r4, r4, r0
   14c9c:	mov	r0, sl
   14ca0:	bl	11200 <mbsinit@plt>
   14ca4:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ca8:	ldr	lr, [sp, #84]	; 0x54
   14cac:	cmp	r0, #0
   14cb0:	beq	14c48 <dcngettext@plt+0x379c>
   14cb4:	b	14ddc <dcngettext@plt+0x3930>
   14cb8:	cmp	r9, sl
   14cbc:	mov	r2, #1
   14cc0:	movcc	r0, #39	; 0x27
   14cc4:	strbcc	r0, [r6, r9]
   14cc8:	add	r0, r9, #1
   14ccc:	cmp	r0, sl
   14cd0:	movcc	r1, #36	; 0x24
   14cd4:	strbcc	r1, [r6, r0]
   14cd8:	add	r0, r9, #2
   14cdc:	cmp	r0, sl
   14ce0:	movcc	r1, #39	; 0x27
   14ce4:	strbcc	r1, [r6, r0]
   14ce8:	add	r0, r9, #3
   14cec:	cmp	r0, sl
   14cf0:	add	r9, r0, #1
   14cf4:	str	r2, [fp, #-48]	; 0xffffffd0
   14cf8:	movcc	r1, #92	; 0x5c
   14cfc:	strbcc	r1, [r6, r0]
   14d00:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14d04:	cmp	r1, #2
   14d08:	beq	14d68 <dcngettext@plt+0x38bc>
   14d0c:	add	r1, r7, #1
   14d10:	mov	r4, #0
   14d14:	mov	r8, #1
   14d18:	mov	r5, #48	; 0x30
   14d1c:	cmp	r1, lr
   14d20:	bcs	14608 <dcngettext@plt+0x315c>
   14d24:	ldrb	r1, [ip, r1]
   14d28:	sub	r1, r1, #48	; 0x30
   14d2c:	uxtb	r1, r1
   14d30:	cmp	r1, #9
   14d34:	bhi	14608 <dcngettext@plt+0x315c>
   14d38:	cmp	r9, sl
   14d3c:	movcc	r1, #48	; 0x30
   14d40:	strbcc	r1, [r6, r9]
   14d44:	add	r1, r0, #2
   14d48:	add	r9, r0, #3
   14d4c:	cmp	r1, sl
   14d50:	movcc	r2, #48	; 0x30
   14d54:	strbcc	r2, [r6, r1]
   14d58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14d5c:	cmp	r0, #0
   14d60:	bne	14614 <dcngettext@plt+0x3168>
   14d64:	b	148ec <dcngettext@plt+0x3440>
   14d68:	mov	r0, #48	; 0x30
   14d6c:	mov	r8, #1
   14d70:	mov	r4, #0
   14d74:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14d78:	cmp	r1, #0
   14d7c:	bne	14928 <dcngettext@plt+0x347c>
   14d80:	cmp	r8, #0
   14d84:	beq	148a4 <dcngettext@plt+0x33f8>
   14d88:	b	14694 <dcngettext@plt+0x31e8>
   14d8c:	mov	r4, #0
   14d90:	ldr	ip, [fp, #-84]	; 0xffffffac
   14d94:	b	14dd0 <dcngettext@plt+0x3924>
   14d98:	ldr	r1, [sp, #84]	; 0x54
   14d9c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14da0:	mov	r4, #0
   14da4:	cmp	r6, r1
   14da8:	bcs	14dd0 <dcngettext@plt+0x3924>
   14dac:	ldrb	r0, [ip, r6]
   14db0:	cmp	r0, #0
   14db4:	beq	14dd0 <dcngettext@plt+0x3924>
   14db8:	ldr	r0, [sp, #64]	; 0x40
   14dbc:	add	r0, r0, #1
   14dc0:	add	r6, r0, r7
   14dc4:	str	r0, [sp, #64]	; 0x40
   14dc8:	cmp	r6, r1
   14dcc:	bcc	14dac <dcngettext@plt+0x3900>
   14dd0:	ldr	r6, [sp, #64]	; 0x40
   14dd4:	b	14ddc <dcngettext@plt+0x3930>
   14dd8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14ddc:	mov	r1, r6
   14de0:	ldr	r6, [sp, #76]	; 0x4c
   14de4:	ldr	sl, [sp, #56]	; 0x38
   14de8:	ldr	r0, [sp, #44]	; 0x2c
   14dec:	cmp	r1, #1
   14df0:	orr	r2, r4, r0
   14df4:	mov	r0, r1
   14df8:	bhi	14e18 <dcngettext@plt+0x396c>
   14dfc:	tst	r2, #1
   14e00:	beq	14e18 <dcngettext@plt+0x396c>
   14e04:	ldr	lr, [sp, #84]	; 0x54
   14e08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14e0c:	cmp	r0, #0
   14e10:	bne	14614 <dcngettext@plt+0x3168>
   14e14:	b	148ec <dcngettext@plt+0x3440>
   14e18:	str	r2, [sp, #64]	; 0x40
   14e1c:	add	r0, r0, r7
   14e20:	add	r1, r7, #1
   14e24:	ldr	lr, [sp, #84]	; 0x54
   14e28:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14e2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14e30:	mov	r3, #0
   14e34:	str	r0, [sp, #56]	; 0x38
   14e38:	ldr	r0, [sp, #64]	; 0x40
   14e3c:	tst	r0, #1
   14e40:	bne	14f28 <dcngettext@plt+0x3a7c>
   14e44:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14e48:	tst	r0, #1
   14e4c:	bne	150c8 <dcngettext@plt+0x3c1c>
   14e50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14e54:	cmp	r7, #2
   14e58:	movwne	r3, #1
   14e5c:	orr	r3, r3, r2
   14e60:	tst	r3, #1
   14e64:	bne	14e9c <dcngettext@plt+0x39f0>
   14e68:	cmp	r9, sl
   14e6c:	add	r3, r9, #1
   14e70:	movcc	r2, #39	; 0x27
   14e74:	strbcc	r2, [r6, r9]
   14e78:	cmp	r3, sl
   14e7c:	movcc	r2, #36	; 0x24
   14e80:	strbcc	r2, [r6, r3]
   14e84:	add	r3, r9, #2
   14e88:	add	r9, r9, #3
   14e8c:	cmp	r3, sl
   14e90:	movcc	r2, #39	; 0x27
   14e94:	strbcc	r2, [r6, r3]
   14e98:	mov	r2, #1
   14e9c:	cmp	r9, sl
   14ea0:	mov	r0, r2
   14ea4:	movcc	r3, #92	; 0x5c
   14ea8:	strbcc	r3, [r6, r9]
   14eac:	add	r3, r9, #1
   14eb0:	cmp	r3, sl
   14eb4:	andcc	r7, r5, #192	; 0xc0
   14eb8:	movcc	r2, #48	; 0x30
   14ebc:	orrcc	r7, r2, r7, lsr #6
   14ec0:	strbcc	r7, [r6, r3]
   14ec4:	add	r3, r9, #2
   14ec8:	add	r9, r9, #3
   14ecc:	cmp	r3, sl
   14ed0:	lsrcc	r7, r5, #3
   14ed4:	movcc	r2, #6
   14ed8:	bficc	r7, r2, #3, #29
   14edc:	mov	r2, #6
   14ee0:	strbcc	r7, [r6, r3]
   14ee4:	bfi	r5, r2, #3, #29
   14ee8:	mov	r3, #1
   14eec:	mov	r2, r0
   14ef0:	ldr	r0, [sp, #56]	; 0x38
   14ef4:	and	r8, r3, #1
   14ef8:	cmp	r0, r1
   14efc:	bhi	14f5c <dcngettext@plt+0x3ab0>
   14f00:	b	14f9c <dcngettext@plt+0x3af0>
   14f04:	cmp	r9, sl
   14f08:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14f0c:	strbcc	r5, [r6, r9]
   14f10:	add	r9, r9, #1
   14f14:	ldrb	r5, [ip, r1]
   14f18:	add	r1, r1, #1
   14f1c:	ldr	r0, [sp, #64]	; 0x40
   14f20:	tst	r0, #1
   14f24:	beq	14e44 <dcngettext@plt+0x3998>
   14f28:	ldr	r7, [fp, #-56]	; 0xffffffc8
   14f2c:	tst	r7, #1
   14f30:	beq	14f44 <dcngettext@plt+0x3a98>
   14f34:	cmp	r9, sl
   14f38:	movcc	r7, #92	; 0x5c
   14f3c:	strbcc	r7, [r6, r9]
   14f40:	add	r9, r9, #1
   14f44:	mov	r7, #0
   14f48:	str	r7, [fp, #-56]	; 0xffffffc8
   14f4c:	ldr	r0, [sp, #56]	; 0x38
   14f50:	and	r8, r3, #1
   14f54:	cmp	r0, r1
   14f58:	bls	14f9c <dcngettext@plt+0x3af0>
   14f5c:	cmp	r8, #0
   14f60:	mvn	r7, r2
   14f64:	movwne	r8, #1
   14f68:	orr	r7, r7, r8
   14f6c:	tst	r7, #1
   14f70:	bne	14f04 <dcngettext@plt+0x3a58>
   14f74:	cmp	r9, sl
   14f78:	movcc	r7, #39	; 0x27
   14f7c:	strbcc	r7, [r6, r9]
   14f80:	add	r7, r9, #1
   14f84:	add	r9, r9, #2
   14f88:	cmp	r7, sl
   14f8c:	movcc	r2, #39	; 0x27
   14f90:	strbcc	r2, [r6, r7]
   14f94:	mov	r2, #0
   14f98:	b	14f04 <dcngettext@plt+0x3a58>
   14f9c:	cmp	r8, #0
   14fa0:	sub	r7, r1, #1
   14fa4:	mov	r0, r5
   14fa8:	str	r2, [fp, #-48]	; 0xffffffd0
   14fac:	movwne	r8, #1
   14fb0:	cmp	r8, #0
   14fb4:	beq	148a4 <dcngettext@plt+0x33f8>
   14fb8:	b	14694 <dcngettext@plt+0x31e8>
   14fbc:	mov	lr, r7
   14fc0:	b	14fc8 <dcngettext@plt+0x3b1c>
   14fc4:	mvn	lr, #0
   14fc8:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14fcc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14fd0:	eor	r0, r7, #2
   14fd4:	orr	r0, r0, r9
   14fd8:	clz	r0, r0
   14fdc:	lsr	r0, r0, #5
   14fe0:	tst	r1, r0
   14fe4:	bne	150e4 <dcngettext@plt+0x3c38>
   14fe8:	mov	r0, r1
   14fec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14ff0:	cmp	r7, #2
   14ff4:	movwne	r1, #1
   14ff8:	orr	r0, r0, r1
   14ffc:	tst	r0, #1
   15000:	ldreq	r0, [sp, #52]	; 0x34
   15004:	streq	lr, [sp, #84]	; 0x54
   15008:	eoreq	r0, r0, #1
   1500c:	tsteq	r0, #1
   15010:	bne	151a8 <dcngettext@plt+0x3cfc>
   15014:	tst	r4, #1
   15018:	bne	15164 <dcngettext@plt+0x3cb8>
   1501c:	ldr	r6, [sp, #48]	; 0x30
   15020:	mov	r8, #0
   15024:	cmp	r6, #0
   15028:	beq	151a0 <dcngettext@plt+0x3cf4>
   1502c:	ldr	r0, [sp, #80]	; 0x50
   15030:	mov	r1, #0
   15034:	cmp	sl, #0
   15038:	mov	r4, #0
   1503c:	str	r1, [fp, #-72]	; 0xffffffb8
   15040:	beq	13f34 <dcngettext@plt+0x2a88>
   15044:	b	151a8 <dcngettext@plt+0x3cfc>
   15048:	ldrb	r1, [r0, #3]
   1504c:	cmp	r1, #56	; 0x38
   15050:	ldrbeq	r1, [r0, #4]
   15054:	cmpeq	r1, #48	; 0x30
   15058:	bne	1412c <dcngettext@plt+0x2c80>
   1505c:	ldrb	r1, [r0, #5]
   15060:	cmp	r1, #51	; 0x33
   15064:	ldrbeq	r1, [r0, #6]
   15068:	cmpeq	r1, #48	; 0x30
   1506c:	bne	1412c <dcngettext@plt+0x2c80>
   15070:	ldrb	r0, [r0, #7]
   15074:	cmp	r0, #0
   15078:	movw	r0, #32236	; 0x7dec
   1507c:	movt	r0, #1
   15080:	str	r0, [sp, #68]	; 0x44
   15084:	bne	1412c <dcngettext@plt+0x2c80>
   15088:	b	14148 <dcngettext@plt+0x2c9c>
   1508c:	ldrb	r1, [r0, #4]
   15090:	cmp	r1, #48	; 0x30
   15094:	ldrbeq	r1, [r0, #5]
   15098:	cmpeq	r1, #51	; 0x33
   1509c:	bne	14210 <dcngettext@plt+0x2d64>
   150a0:	ldrb	r1, [r0, #6]
   150a4:	cmp	r1, #48	; 0x30
   150a8:	ldrbeq	r0, [r0, #7]
   150ac:	cmpeq	r0, #0
   150b0:	bne	14210 <dcngettext@plt+0x2d64>
   150b4:	movw	r0, #32240	; 0x7df0
   150b8:	movt	r0, #1
   150bc:	str	r0, [sp, #72]	; 0x48
   150c0:	b	14230 <dcngettext@plt+0x2d84>
   150c4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   150c8:	ldr	r2, [sp, #80]	; 0x50
   150cc:	b	15104 <dcngettext@plt+0x3c58>
   150d0:	ldr	ip, [fp, #-84]	; 0xffffffac
   150d4:	mov	r2, #1
   150d8:	mov	lr, r4
   150dc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   150e0:	b	15104 <dcngettext@plt+0x3c58>
   150e4:	ldr	r2, [sp, #80]	; 0x50
   150e8:	mov	r7, #2
   150ec:	b	15104 <dcngettext@plt+0x3c58>
   150f0:	ldr	r6, [sp, #76]	; 0x4c
   150f4:	ldr	ip, [fp, #-84]	; 0xffffffac
   150f8:	ldr	lr, [sp, #84]	; 0x54
   150fc:	ldr	r2, [sp, #80]	; 0x50
   15100:	mov	r7, #2
   15104:	mov	r0, #0
   15108:	ldr	r1, [fp, #12]
   1510c:	tst	r2, #1
   15110:	mov	r2, r7
   15114:	mov	r3, lr
   15118:	str	r0, [sp, #8]
   1511c:	ldr	r0, [sp, #68]	; 0x44
   15120:	movwne	r2, #4
   15124:	cmp	r7, #2
   15128:	movne	r2, r7
   1512c:	str	r2, [sp]
   15130:	mov	r2, ip
   15134:	bic	r1, r1, #2
   15138:	str	r0, [sp, #12]
   1513c:	ldr	r0, [sp, #72]	; 0x48
   15140:	str	r1, [sp, #4]
   15144:	mov	r1, sl
   15148:	str	r0, [sp, #16]
   1514c:	mov	r0, r6
   15150:	bl	13eb8 <dcngettext@plt+0x2a0c>
   15154:	mov	r9, r0
   15158:	mov	r0, r9
   1515c:	sub	sp, fp, #28
   15160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15164:	mov	r0, #5
   15168:	ldr	r1, [sp, #48]	; 0x30
   1516c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15170:	ldr	r3, [sp, #84]	; 0x54
   15174:	str	r0, [sp]
   15178:	ldr	r0, [fp, #12]
   1517c:	str	r0, [sp, #4]
   15180:	ldr	r0, [fp, #16]
   15184:	str	r0, [sp, #8]
   15188:	ldr	r0, [sp, #68]	; 0x44
   1518c:	str	r0, [sp, #12]
   15190:	ldr	r0, [sp, #72]	; 0x48
   15194:	str	r0, [sp, #16]
   15198:	ldr	r0, [sp, #76]	; 0x4c
   1519c:	b	15150 <dcngettext@plt+0x3ca4>
   151a0:	mov	r0, #0
   151a4:	str	r0, [fp, #-72]	; 0xffffffb8
   151a8:	ldr	r1, [sp, #92]	; 0x5c
   151ac:	cmp	r1, #0
   151b0:	beq	151f0 <dcngettext@plt+0x3d44>
   151b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   151b8:	ldr	r2, [sp, #76]	; 0x4c
   151bc:	tst	r0, #1
   151c0:	bne	151f4 <dcngettext@plt+0x3d48>
   151c4:	ldrb	r0, [r1]
   151c8:	cmp	r0, #0
   151cc:	beq	151f4 <dcngettext@plt+0x3d48>
   151d0:	add	r1, r1, #1
   151d4:	cmp	r9, sl
   151d8:	strbcc	r0, [r2, r9]
   151dc:	add	r9, r9, #1
   151e0:	ldrb	r0, [r1], #1
   151e4:	cmp	r0, #0
   151e8:	bne	151d4 <dcngettext@plt+0x3d28>
   151ec:	b	151f4 <dcngettext@plt+0x3d48>
   151f0:	ldr	r2, [sp, #76]	; 0x4c
   151f4:	cmp	r9, sl
   151f8:	movcc	r0, #0
   151fc:	strbcc	r0, [r2, r9]
   15200:	mov	r0, r9
   15204:	sub	sp, fp, #28
   15208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1520c:	mov	r2, #1
   15210:	b	150dc <dcngettext@plt+0x3c30>
   15214:	ldr	r2, [sp, #80]	; 0x50
   15218:	mov	r7, #5
   1521c:	b	15104 <dcngettext@plt+0x3c58>
   15220:	bl	11494 <abort@plt>
   15224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15228:	add	fp, sp, #28
   1522c:	sub	sp, sp, #28
   15230:	movw	r5, #37280	; 0x91a0
   15234:	cmp	r2, #0
   15238:	mov	r4, r1
   1523c:	mov	r7, r0
   15240:	str	r0, [sp, #20]
   15244:	movt	r5, #2
   15248:	movne	r5, r2
   1524c:	bl	11374 <__errno_location@plt>
   15250:	mov	sl, r0
   15254:	ldm	r5, {r0, r1}
   15258:	ldr	r2, [r5, #40]	; 0x28
   1525c:	ldr	r3, [r5, #44]	; 0x2c
   15260:	add	r9, r5, #8
   15264:	ldr	r6, [sl]
   15268:	orr	r8, r1, #1
   1526c:	mov	r1, #0
   15270:	str	r6, [sp, #24]
   15274:	stm	sp, {r0, r8, r9}
   15278:	str	r2, [sp, #12]
   1527c:	str	r3, [sp, #16]
   15280:	mov	r0, #0
   15284:	mov	r2, r7
   15288:	mov	r3, r4
   1528c:	mov	r6, r4
   15290:	bl	13eb8 <dcngettext@plt+0x2a0c>
   15294:	add	r7, r0, #1
   15298:	mov	r0, r7
   1529c:	bl	16ec4 <dcngettext@plt+0x5a18>
   152a0:	mov	r4, r0
   152a4:	ldr	r0, [r5]
   152a8:	ldr	r2, [r5, #44]	; 0x2c
   152ac:	ldr	r1, [r5, #40]	; 0x28
   152b0:	mov	r3, r6
   152b4:	stm	sp, {r0, r8, r9}
   152b8:	str	r2, [sp, #16]
   152bc:	str	r1, [sp, #12]
   152c0:	mov	r0, r4
   152c4:	mov	r1, r7
   152c8:	ldr	r2, [sp, #20]
   152cc:	bl	13eb8 <dcngettext@plt+0x2a0c>
   152d0:	ldr	r0, [sp, #24]
   152d4:	str	r0, [sl]
   152d8:	mov	r0, r4
   152dc:	sub	sp, fp, #28
   152e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152e8:	add	fp, sp, #28
   152ec:	sub	sp, sp, #36	; 0x24
   152f0:	movw	r8, #37280	; 0x91a0
   152f4:	cmp	r3, #0
   152f8:	mov	r4, r2
   152fc:	str	r2, [sp, #24]
   15300:	mov	r5, r1
   15304:	mov	r6, r0
   15308:	str	r0, [sp, #20]
   1530c:	movt	r8, #2
   15310:	movne	r8, r3
   15314:	bl	11374 <__errno_location@plt>
   15318:	str	r0, [sp, #28]
   1531c:	cmp	r4, #0
   15320:	add	sl, r8, #8
   15324:	ldm	r8, {r3, r9}
   15328:	ldr	r7, [r0]
   1532c:	ldr	r1, [r8, #40]	; 0x28
   15330:	ldr	r2, [r8, #44]	; 0x2c
   15334:	mov	r0, #0
   15338:	orreq	r9, r9, #1
   1533c:	str	r7, [sp, #32]
   15340:	mov	r7, r5
   15344:	stm	sp, {r3, r9, sl}
   15348:	str	r1, [sp, #12]
   1534c:	str	r2, [sp, #16]
   15350:	mov	r1, #0
   15354:	mov	r2, r6
   15358:	mov	r3, r5
   1535c:	bl	13eb8 <dcngettext@plt+0x2a0c>
   15360:	add	r4, r0, #1
   15364:	mov	r5, r0
   15368:	mov	r0, r4
   1536c:	bl	16ec4 <dcngettext@plt+0x5a18>
   15370:	mov	r6, r0
   15374:	ldr	r0, [r8]
   15378:	ldr	r2, [r8, #44]	; 0x2c
   1537c:	ldr	r1, [r8, #40]	; 0x28
   15380:	mov	r3, r7
   15384:	stm	sp, {r0, r9, sl}
   15388:	str	r2, [sp, #16]
   1538c:	str	r1, [sp, #12]
   15390:	mov	r0, r6
   15394:	mov	r1, r4
   15398:	ldr	r2, [sp, #20]
   1539c:	bl	13eb8 <dcngettext@plt+0x2a0c>
   153a0:	ldr	r0, [sp, #24]
   153a4:	ldr	r1, [sp, #32]
   153a8:	ldr	r2, [sp, #28]
   153ac:	cmp	r0, #0
   153b0:	str	r1, [r2]
   153b4:	strne	r5, [r0]
   153b8:	mov	r0, r6
   153bc:	sub	sp, fp, #28
   153c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153c4:	push	{r4, r5, r6, r7, fp, lr}
   153c8:	add	fp, sp, #16
   153cc:	movw	r4, #37216	; 0x9160
   153d0:	movt	r4, #2
   153d4:	ldrd	r6, [r4]
   153d8:	cmp	r7, #2
   153dc:	blt	15408 <dcngettext@plt+0x3f5c>
   153e0:	add	r5, r6, #12
   153e4:	mov	r7, #0
   153e8:	ldr	r0, [r5, r7, lsl #3]
   153ec:	bl	17594 <dcngettext@plt+0x60e8>
   153f0:	ldr	r1, [r4, #4]
   153f4:	add	r2, r7, #2
   153f8:	add	r0, r7, #1
   153fc:	mov	r7, r0
   15400:	cmp	r2, r1
   15404:	blt	153e8 <dcngettext@plt+0x3f3c>
   15408:	ldr	r0, [r6, #4]
   1540c:	movw	r5, #37328	; 0x91d0
   15410:	movt	r5, #2
   15414:	cmp	r0, r5
   15418:	beq	1542c <dcngettext@plt+0x3f80>
   1541c:	bl	17594 <dcngettext@plt+0x60e8>
   15420:	mov	r0, #256	; 0x100
   15424:	str	r0, [r4, #8]
   15428:	str	r5, [r4, #12]
   1542c:	add	r5, r4, #8
   15430:	cmp	r6, r5
   15434:	beq	15444 <dcngettext@plt+0x3f98>
   15438:	mov	r0, r6
   1543c:	bl	17594 <dcngettext@plt+0x60e8>
   15440:	str	r5, [r4]
   15444:	mov	r0, #1
   15448:	str	r0, [r4, #4]
   1544c:	pop	{r4, r5, r6, r7, fp, pc}
   15450:	movw	r3, #37280	; 0x91a0
   15454:	mvn	r2, #0
   15458:	movt	r3, #2
   1545c:	b	15460 <dcngettext@plt+0x3fb4>
   15460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15464:	add	fp, sp, #28
   15468:	sub	sp, sp, #44	; 0x2c
   1546c:	mov	r7, r3
   15470:	str	r2, [sp, #36]	; 0x24
   15474:	str	r1, [sp, #32]
   15478:	mov	r5, r0
   1547c:	bl	11374 <__errno_location@plt>
   15480:	cmp	r5, #0
   15484:	blt	155e8 <dcngettext@plt+0x413c>
   15488:	cmn	r5, #-2147483647	; 0x80000001
   1548c:	beq	155e8 <dcngettext@plt+0x413c>
   15490:	movw	r8, #37216	; 0x9160
   15494:	mov	r4, r0
   15498:	movt	r8, #2
   1549c:	ldr	r6, [r8]
   154a0:	ldr	r1, [r8, #4]
   154a4:	ldr	r0, [r0]
   154a8:	str	r4, [sp, #28]
   154ac:	cmp	r1, r5
   154b0:	str	r0, [sp, #24]
   154b4:	ble	154c0 <dcngettext@plt+0x4014>
   154b8:	mov	sl, r6
   154bc:	b	15524 <dcngettext@plt+0x4078>
   154c0:	mov	r0, #8
   154c4:	add	r9, r8, #8
   154c8:	add	r2, r5, #1
   154cc:	str	r1, [fp, #-32]	; 0xffffffe0
   154d0:	mvn	r3, #-2147483648	; 0x80000000
   154d4:	str	r0, [sp]
   154d8:	subs	r0, r6, r9
   154dc:	sub	r2, r2, r1
   154e0:	sub	r1, fp, #32
   154e4:	movne	r0, r6
   154e8:	bl	170c4 <dcngettext@plt+0x5c18>
   154ec:	str	r0, [r8]
   154f0:	cmp	r6, r9
   154f4:	mov	sl, r0
   154f8:	ldrdeq	r0, [r8, #8]
   154fc:	stmeq	sl, {r0, r1}
   15500:	ldr	r1, [r8, #4]
   15504:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15508:	add	r0, sl, r1, lsl #3
   1550c:	sub	r1, r2, r1
   15510:	lsl	r2, r1, #3
   15514:	mov	r1, #0
   15518:	bl	1138c <memset@plt>
   1551c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15520:	str	r0, [r8, #4]
   15524:	mov	r9, sl
   15528:	ldr	r6, [r9, r5, lsl #3]!
   1552c:	ldr	r4, [r9, #4]!
   15530:	ldm	r7, {r0, r1}
   15534:	ldr	r2, [r7, #40]	; 0x28
   15538:	ldr	r3, [r7, #44]	; 0x2c
   1553c:	orr	r8, r1, #1
   15540:	add	r1, r7, #8
   15544:	stm	sp, {r0, r8}
   15548:	add	r0, sp, #8
   1554c:	str	r1, [sp, #20]
   15550:	stm	r0, {r1, r2, r3}
   15554:	mov	r0, r4
   15558:	mov	r1, r6
   1555c:	ldr	r2, [sp, #32]
   15560:	ldr	r3, [sp, #36]	; 0x24
   15564:	bl	13eb8 <dcngettext@plt+0x2a0c>
   15568:	cmp	r6, r0
   1556c:	bhi	155d0 <dcngettext@plt+0x4124>
   15570:	add	r6, r0, #1
   15574:	movw	r0, #37328	; 0x91d0
   15578:	movt	r0, #2
   1557c:	str	r6, [sl, r5, lsl #3]
   15580:	cmp	r4, r0
   15584:	beq	15590 <dcngettext@plt+0x40e4>
   15588:	mov	r0, r4
   1558c:	bl	17594 <dcngettext@plt+0x60e8>
   15590:	mov	r0, r6
   15594:	bl	16ec4 <dcngettext@plt+0x5a18>
   15598:	str	r0, [r9]
   1559c:	mov	r4, r0
   155a0:	add	r3, sp, #8
   155a4:	ldr	r0, [r7]
   155a8:	ldr	r1, [r7, #40]	; 0x28
   155ac:	ldr	r2, [r7, #44]	; 0x2c
   155b0:	stm	sp, {r0, r8}
   155b4:	ldr	r0, [sp, #20]
   155b8:	stm	r3, {r0, r1, r2}
   155bc:	mov	r0, r4
   155c0:	mov	r1, r6
   155c4:	ldr	r2, [sp, #32]
   155c8:	ldr	r3, [sp, #36]	; 0x24
   155cc:	bl	13eb8 <dcngettext@plt+0x2a0c>
   155d0:	ldr	r1, [sp, #24]
   155d4:	ldr	r0, [sp, #28]
   155d8:	str	r1, [r0]
   155dc:	mov	r0, r4
   155e0:	sub	sp, fp, #28
   155e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155e8:	bl	11494 <abort@plt>
   155ec:	movw	r3, #37280	; 0x91a0
   155f0:	movt	r3, #2
   155f4:	b	15460 <dcngettext@plt+0x3fb4>
   155f8:	movw	r3, #37280	; 0x91a0
   155fc:	mov	r1, r0
   15600:	mov	r0, #0
   15604:	mvn	r2, #0
   15608:	movt	r3, #2
   1560c:	b	15460 <dcngettext@plt+0x3fb4>
   15610:	movw	r3, #37280	; 0x91a0
   15614:	mov	r2, r1
   15618:	mov	r1, r0
   1561c:	mov	r0, #0
   15620:	movt	r3, #2
   15624:	b	15460 <dcngettext@plt+0x3fb4>
   15628:	push	{fp, lr}
   1562c:	mov	fp, sp
   15630:	sub	sp, sp, #48	; 0x30
   15634:	vmov.i32	q8, #0	; 0x00000000
   15638:	mov	ip, #32
   1563c:	mov	r3, sp
   15640:	mov	lr, r2
   15644:	cmp	r1, #10
   15648:	add	r2, r3, #16
   1564c:	vst1.64	{d16-d17}, [r3], ip
   15650:	vst1.64	{d16-d17}, [r3]
   15654:	vst1.64	{d16-d17}, [r2]
   15658:	beq	15678 <dcngettext@plt+0x41cc>
   1565c:	str	r1, [sp]
   15660:	mov	r3, sp
   15664:	mov	r1, lr
   15668:	mvn	r2, #0
   1566c:	bl	15460 <dcngettext@plt+0x3fb4>
   15670:	mov	sp, fp
   15674:	pop	{fp, pc}
   15678:	bl	11494 <abort@plt>
   1567c:	push	{r4, sl, fp, lr}
   15680:	add	fp, sp, #8
   15684:	sub	sp, sp, #48	; 0x30
   15688:	mov	ip, r3
   1568c:	mov	r3, sp
   15690:	vmov.i32	q8, #0	; 0x00000000
   15694:	mov	lr, #32
   15698:	cmp	r1, #10
   1569c:	add	r4, r3, #16
   156a0:	vst1.64	{d16-d17}, [r3], lr
   156a4:	vst1.64	{d16-d17}, [r3]
   156a8:	vst1.64	{d16-d17}, [r4]
   156ac:	beq	156cc <dcngettext@plt+0x4220>
   156b0:	str	r1, [sp]
   156b4:	mov	r1, r2
   156b8:	mov	r3, sp
   156bc:	mov	r2, ip
   156c0:	bl	15460 <dcngettext@plt+0x3fb4>
   156c4:	sub	sp, fp, #8
   156c8:	pop	{r4, sl, fp, pc}
   156cc:	bl	11494 <abort@plt>
   156d0:	push	{fp, lr}
   156d4:	mov	fp, sp
   156d8:	sub	sp, sp, #48	; 0x30
   156dc:	mov	r3, sp
   156e0:	vmov.i32	q8, #0	; 0x00000000
   156e4:	mov	ip, #32
   156e8:	cmp	r0, #10
   156ec:	add	r2, r3, #16
   156f0:	vst1.64	{d16-d17}, [r3], ip
   156f4:	vst1.64	{d16-d17}, [r3]
   156f8:	vst1.64	{d16-d17}, [r2]
   156fc:	beq	1571c <dcngettext@plt+0x4270>
   15700:	str	r0, [sp]
   15704:	mov	r3, sp
   15708:	mov	r0, #0
   1570c:	mvn	r2, #0
   15710:	bl	15460 <dcngettext@plt+0x3fb4>
   15714:	mov	sp, fp
   15718:	pop	{fp, pc}
   1571c:	bl	11494 <abort@plt>
   15720:	push	{fp, lr}
   15724:	mov	fp, sp
   15728:	sub	sp, sp, #48	; 0x30
   1572c:	mov	r3, sp
   15730:	vmov.i32	q8, #0	; 0x00000000
   15734:	mov	ip, #32
   15738:	cmp	r0, #10
   1573c:	add	lr, r3, #16
   15740:	vst1.64	{d16-d17}, [r3], ip
   15744:	vst1.64	{d16-d17}, [r3]
   15748:	vst1.64	{d16-d17}, [lr]
   1574c:	beq	15768 <dcngettext@plt+0x42bc>
   15750:	str	r0, [sp]
   15754:	mov	r3, sp
   15758:	mov	r0, #0
   1575c:	bl	15460 <dcngettext@plt+0x3fb4>
   15760:	mov	sp, fp
   15764:	pop	{fp, pc}
   15768:	bl	11494 <abort@plt>
   1576c:	push	{r4, sl, fp, lr}
   15770:	add	fp, sp, #8
   15774:	sub	sp, sp, #48	; 0x30
   15778:	mov	lr, r0
   1577c:	movw	r0, #37280	; 0x91a0
   15780:	mov	r3, #32
   15784:	mov	ip, r1
   15788:	mov	r4, #1
   1578c:	movt	r0, #2
   15790:	add	r1, r0, #16
   15794:	vld1.64	{d16-d17}, [r0], r3
   15798:	mov	r3, sp
   1579c:	vld1.64	{d18-d19}, [r1]
   157a0:	add	r1, r3, #16
   157a4:	vld1.64	{d20-d21}, [r0]
   157a8:	add	r0, r3, #32
   157ac:	vst1.64	{d18-d19}, [r1]
   157b0:	mov	r1, r3
   157b4:	vst1.64	{d20-d21}, [r0]
   157b8:	mov	r0, #28
   157bc:	and	r0, r0, r2, lsr #3
   157c0:	and	r2, r2, #31
   157c4:	vst1.64	{d16-d17}, [r1], r0
   157c8:	ldr	r0, [r1, #8]
   157cc:	bic	r4, r4, r0, lsr r2
   157d0:	eor	r0, r0, r4, lsl r2
   157d4:	mov	r2, ip
   157d8:	str	r0, [r1, #8]
   157dc:	mov	r0, #0
   157e0:	mov	r1, lr
   157e4:	bl	15460 <dcngettext@plt+0x3fb4>
   157e8:	sub	sp, fp, #8
   157ec:	pop	{r4, sl, fp, pc}
   157f0:	push	{fp, lr}
   157f4:	mov	fp, sp
   157f8:	sub	sp, sp, #48	; 0x30
   157fc:	mov	ip, r0
   15800:	movw	r0, #37280	; 0x91a0
   15804:	mov	r3, #32
   15808:	movt	r0, #2
   1580c:	add	r2, r0, #16
   15810:	vld1.64	{d16-d17}, [r0], r3
   15814:	mov	r3, sp
   15818:	vld1.64	{d18-d19}, [r2]
   1581c:	add	r2, r3, #16
   15820:	vld1.64	{d20-d21}, [r0]
   15824:	add	r0, r3, #32
   15828:	vst1.64	{d18-d19}, [r2]
   1582c:	mov	r2, r3
   15830:	vst1.64	{d20-d21}, [r0]
   15834:	mov	r0, #28
   15838:	and	r0, r0, r1, lsr #3
   1583c:	and	r1, r1, #31
   15840:	vst1.64	{d16-d17}, [r2], r0
   15844:	mov	r0, #1
   15848:	ldr	lr, [r2, #8]
   1584c:	bic	r0, r0, lr, lsr r1
   15850:	eor	r0, lr, r0, lsl r1
   15854:	mov	r1, ip
   15858:	str	r0, [r2, #8]
   1585c:	mov	r0, #0
   15860:	mvn	r2, #0
   15864:	bl	15460 <dcngettext@plt+0x3fb4>
   15868:	mov	sp, fp
   1586c:	pop	{fp, pc}
   15870:	push	{fp, lr}
   15874:	mov	fp, sp
   15878:	sub	sp, sp, #48	; 0x30
   1587c:	movw	r2, #37280	; 0x91a0
   15880:	mov	r3, #32
   15884:	mov	r1, r0
   15888:	movt	r2, #2
   1588c:	add	r0, r2, #16
   15890:	vld1.64	{d16-d17}, [r2], r3
   15894:	mov	r3, sp
   15898:	vld1.64	{d18-d19}, [r0]
   1589c:	add	r0, r3, #16
   158a0:	vld1.64	{d20-d21}, [r2]
   158a4:	mov	r2, r3
   158a8:	vst1.64	{d18-d19}, [r0]
   158ac:	add	r0, r3, #32
   158b0:	vst1.64	{d20-d21}, [r0]
   158b4:	mov	r0, #12
   158b8:	vst1.64	{d16-d17}, [r2], r0
   158bc:	ldr	r0, [r2]
   158c0:	orr	r0, r0, #67108864	; 0x4000000
   158c4:	str	r0, [r2]
   158c8:	mov	r0, #0
   158cc:	mvn	r2, #0
   158d0:	bl	15460 <dcngettext@plt+0x3fb4>
   158d4:	mov	sp, fp
   158d8:	pop	{fp, pc}
   158dc:	push	{fp, lr}
   158e0:	mov	fp, sp
   158e4:	sub	sp, sp, #48	; 0x30
   158e8:	mov	ip, r1
   158ec:	mov	r1, r0
   158f0:	movw	r0, #37280	; 0x91a0
   158f4:	mov	r3, #32
   158f8:	movt	r0, #2
   158fc:	add	r2, r0, #16
   15900:	vld1.64	{d16-d17}, [r0], r3
   15904:	mov	r3, sp
   15908:	vld1.64	{d18-d19}, [r2]
   1590c:	add	r2, r3, #16
   15910:	vld1.64	{d20-d21}, [r0]
   15914:	add	r0, r3, #32
   15918:	vst1.64	{d18-d19}, [r2]
   1591c:	mov	r2, r3
   15920:	vst1.64	{d20-d21}, [r0]
   15924:	mov	r0, #12
   15928:	vst1.64	{d16-d17}, [r2], r0
   1592c:	ldr	r0, [r2]
   15930:	orr	r0, r0, #67108864	; 0x4000000
   15934:	str	r0, [r2]
   15938:	mov	r0, #0
   1593c:	mov	r2, ip
   15940:	bl	15460 <dcngettext@plt+0x3fb4>
   15944:	mov	sp, fp
   15948:	pop	{fp, pc}
   1594c:	push	{r4, sl, fp, lr}
   15950:	add	fp, sp, #8
   15954:	sub	sp, sp, #96	; 0x60
   15958:	mov	ip, r2
   1595c:	mov	r2, sp
   15960:	vmov.i32	q8, #0	; 0x00000000
   15964:	mov	r4, #28
   15968:	cmp	r1, #10
   1596c:	mov	r3, r2
   15970:	add	lr, r2, #16
   15974:	vst1.64	{d16-d17}, [r3], r4
   15978:	vst1.64	{d16-d17}, [lr]
   1597c:	vst1.32	{d16-d17}, [r3]
   15980:	beq	159d0 <dcngettext@plt+0x4524>
   15984:	vld1.64	{d16-d17}, [r2], r4
   15988:	vld1.64	{d18-d19}, [lr]
   1598c:	add	r3, sp, #48	; 0x30
   15990:	add	r4, r3, #4
   15994:	vld1.32	{d20-d21}, [r2]
   15998:	add	r2, r3, #20
   1599c:	vst1.32	{d16-d17}, [r4]
   159a0:	vst1.32	{d18-d19}, [r2]
   159a4:	add	r2, r3, #32
   159a8:	vst1.32	{d20-d21}, [r2]
   159ac:	str	r1, [sp, #48]	; 0x30
   159b0:	mvn	r2, #0
   159b4:	ldr	r1, [sp, #60]	; 0x3c
   159b8:	orr	r1, r1, #67108864	; 0x4000000
   159bc:	str	r1, [sp, #60]	; 0x3c
   159c0:	mov	r1, ip
   159c4:	bl	15460 <dcngettext@plt+0x3fb4>
   159c8:	sub	sp, fp, #8
   159cc:	pop	{r4, sl, fp, pc}
   159d0:	bl	11494 <abort@plt>
   159d4:	push	{r4, r5, fp, lr}
   159d8:	add	fp, sp, #8
   159dc:	sub	sp, sp, #48	; 0x30
   159e0:	mov	ip, r3
   159e4:	movw	r3, #37280	; 0x91a0
   159e8:	mov	lr, #32
   159ec:	cmp	r1, #0
   159f0:	mov	r5, sp
   159f4:	movt	r3, #2
   159f8:	cmpne	r2, #0
   159fc:	add	r4, r3, #16
   15a00:	vld1.64	{d16-d17}, [r3], lr
   15a04:	vld1.64	{d18-d19}, [r4]
   15a08:	add	r4, r5, #16
   15a0c:	vld1.64	{d20-d21}, [r3]
   15a10:	vst1.64	{d16-d17}, [r5], lr
   15a14:	mov	r3, #10
   15a18:	vst1.64	{d18-d19}, [r4]
   15a1c:	vst1.64	{d20-d21}, [r5]
   15a20:	str	r3, [sp]
   15a24:	bne	15a2c <dcngettext@plt+0x4580>
   15a28:	bl	11494 <abort@plt>
   15a2c:	str	r2, [sp, #44]	; 0x2c
   15a30:	str	r1, [sp, #40]	; 0x28
   15a34:	mov	r3, sp
   15a38:	mov	r1, ip
   15a3c:	mvn	r2, #0
   15a40:	bl	15460 <dcngettext@plt+0x3fb4>
   15a44:	sub	sp, fp, #8
   15a48:	pop	{r4, r5, fp, pc}
   15a4c:	push	{r4, r5, fp, lr}
   15a50:	add	fp, sp, #8
   15a54:	sub	sp, sp, #48	; 0x30
   15a58:	mov	lr, r3
   15a5c:	movw	r3, #37280	; 0x91a0
   15a60:	mov	ip, #32
   15a64:	cmp	r1, #0
   15a68:	mov	r5, sp
   15a6c:	movt	r3, #2
   15a70:	cmpne	r2, #0
   15a74:	add	r4, r3, #16
   15a78:	vld1.64	{d16-d17}, [r3], ip
   15a7c:	vld1.64	{d18-d19}, [r4]
   15a80:	add	r4, r5, #16
   15a84:	vld1.64	{d20-d21}, [r3]
   15a88:	vst1.64	{d16-d17}, [r5], ip
   15a8c:	mov	r3, #10
   15a90:	vst1.64	{d18-d19}, [r4]
   15a94:	vst1.64	{d20-d21}, [r5]
   15a98:	str	r3, [sp]
   15a9c:	bne	15aa4 <dcngettext@plt+0x45f8>
   15aa0:	bl	11494 <abort@plt>
   15aa4:	ldr	ip, [fp, #8]
   15aa8:	str	r2, [sp, #44]	; 0x2c
   15aac:	str	r1, [sp, #40]	; 0x28
   15ab0:	mov	r3, sp
   15ab4:	mov	r1, lr
   15ab8:	mov	r2, ip
   15abc:	bl	15460 <dcngettext@plt+0x3fb4>
   15ac0:	sub	sp, fp, #8
   15ac4:	pop	{r4, r5, fp, pc}
   15ac8:	push	{r4, sl, fp, lr}
   15acc:	add	fp, sp, #8
   15ad0:	sub	sp, sp, #48	; 0x30
   15ad4:	mov	ip, r2
   15ad8:	movw	r2, #37280	; 0x91a0
   15adc:	mov	lr, #32
   15ae0:	cmp	r0, #0
   15ae4:	mov	r4, sp
   15ae8:	movt	r2, #2
   15aec:	cmpne	r1, #0
   15af0:	add	r3, r2, #16
   15af4:	vld1.64	{d16-d17}, [r2], lr
   15af8:	vld1.64	{d18-d19}, [r3]
   15afc:	add	r3, r4, #16
   15b00:	vld1.64	{d20-d21}, [r2]
   15b04:	vst1.64	{d16-d17}, [r4], lr
   15b08:	mov	r2, #10
   15b0c:	vst1.64	{d18-d19}, [r3]
   15b10:	vst1.64	{d20-d21}, [r4]
   15b14:	str	r2, [sp]
   15b18:	bne	15b20 <dcngettext@plt+0x4674>
   15b1c:	bl	11494 <abort@plt>
   15b20:	str	r1, [sp, #44]	; 0x2c
   15b24:	str	r0, [sp, #40]	; 0x28
   15b28:	mov	r3, sp
   15b2c:	mov	r0, #0
   15b30:	mov	r1, ip
   15b34:	mvn	r2, #0
   15b38:	bl	15460 <dcngettext@plt+0x3fb4>
   15b3c:	sub	sp, fp, #8
   15b40:	pop	{r4, sl, fp, pc}
   15b44:	push	{r4, r5, fp, lr}
   15b48:	add	fp, sp, #8
   15b4c:	sub	sp, sp, #48	; 0x30
   15b50:	mov	lr, r2
   15b54:	movw	r2, #37280	; 0x91a0
   15b58:	mov	ip, r3
   15b5c:	mov	r3, #32
   15b60:	cmp	r0, #0
   15b64:	mov	r5, sp
   15b68:	movt	r2, #2
   15b6c:	cmpne	r1, #0
   15b70:	add	r4, r2, #16
   15b74:	vld1.64	{d16-d17}, [r2], r3
   15b78:	vld1.64	{d18-d19}, [r4]
   15b7c:	add	r4, r5, #16
   15b80:	vld1.64	{d20-d21}, [r2]
   15b84:	vst1.64	{d16-d17}, [r5], r3
   15b88:	mov	r2, #10
   15b8c:	vst1.64	{d18-d19}, [r4]
   15b90:	vst1.64	{d20-d21}, [r5]
   15b94:	str	r2, [sp]
   15b98:	bne	15ba0 <dcngettext@plt+0x46f4>
   15b9c:	bl	11494 <abort@plt>
   15ba0:	str	r1, [sp, #44]	; 0x2c
   15ba4:	str	r0, [sp, #40]	; 0x28
   15ba8:	mov	r3, sp
   15bac:	mov	r0, #0
   15bb0:	mov	r1, lr
   15bb4:	mov	r2, ip
   15bb8:	bl	15460 <dcngettext@plt+0x3fb4>
   15bbc:	sub	sp, fp, #8
   15bc0:	pop	{r4, r5, fp, pc}
   15bc4:	movw	r3, #37168	; 0x9130
   15bc8:	movt	r3, #2
   15bcc:	b	15460 <dcngettext@plt+0x3fb4>
   15bd0:	movw	r3, #37168	; 0x9130
   15bd4:	mov	r2, r1
   15bd8:	mov	r1, r0
   15bdc:	mov	r0, #0
   15be0:	movt	r3, #2
   15be4:	b	15460 <dcngettext@plt+0x3fb4>
   15be8:	movw	r3, #37168	; 0x9130
   15bec:	mvn	r2, #0
   15bf0:	movt	r3, #2
   15bf4:	b	15460 <dcngettext@plt+0x3fb4>
   15bf8:	movw	r3, #37168	; 0x9130
   15bfc:	mov	r1, r0
   15c00:	mov	r0, #0
   15c04:	mvn	r2, #0
   15c08:	movt	r3, #2
   15c0c:	b	15460 <dcngettext@plt+0x3fb4>
   15c10:	push	{r4, r5, fp, lr}
   15c14:	add	fp, sp, #8
   15c18:	mov	r5, r0
   15c1c:	mov	r0, #33	; 0x21
   15c20:	bl	16e94 <dcngettext@plt+0x59e8>
   15c24:	add	r1, r5, #44	; 0x2c
   15c28:	mov	r2, #32
   15c2c:	mov	r4, r0
   15c30:	bl	11398 <strncpy@plt>
   15c34:	mov	r5, #0
   15c38:	mov	r0, r4
   15c3c:	strb	r5, [r4, #32]
   15c40:	bl	1135c <strlen@plt>
   15c44:	cmp	r0, #1
   15c48:	blt	15c70 <dcngettext@plt+0x47c4>
   15c4c:	add	r1, r4, r0
   15c50:	mov	r0, r1
   15c54:	ldrb	r2, [r0, #-1]!
   15c58:	cmp	r2, #32
   15c5c:	bne	15c70 <dcngettext@plt+0x47c4>
   15c60:	strb	r5, [r1, #-1]
   15c64:	cmp	r4, r0
   15c68:	mov	r1, r0
   15c6c:	bcc	15c54 <dcngettext@plt+0x47a8>
   15c70:	mov	r0, r4
   15c74:	pop	{r4, r5, fp, pc}
   15c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c7c:	add	fp, sp, #28
   15c80:	sub	sp, sp, #12
   15c84:	mov	r6, #0
   15c88:	mov	r5, r3
   15c8c:	str	r2, [sp, #4]
   15c90:	mov	sl, r1
   15c94:	str	r6, [sp, #8]
   15c98:	bl	111d0 <utmpxname@plt>
   15c9c:	bl	11230 <setutxent@plt>
   15ca0:	bl	114a0 <getutxent@plt>
   15ca4:	cmp	r0, #0
   15ca8:	beq	15d70 <dcngettext@plt+0x48c4>
   15cac:	mov	r7, r0
   15cb0:	and	r4, r5, #1
   15cb4:	tst	r5, #2
   15cb8:	bne	15d78 <dcngettext@plt+0x48cc>
   15cbc:	mov	r5, #0
   15cc0:	mov	r9, #384	; 0x180
   15cc4:	add	r8, sp, #8
   15cc8:	mov	r6, #0
   15ccc:	b	15d0c <dcngettext@plt+0x4860>
   15cd0:	ldrh	r0, [r7]
   15cd4:	cmp	r0, #7
   15cd8:	bne	15d1c <dcngettext@plt+0x4870>
   15cdc:	ldr	r0, [r7, #4]
   15ce0:	cmp	r0, #1
   15ce4:	blt	15d1c <dcngettext@plt+0x4870>
   15ce8:	mov	r1, #0
   15cec:	bl	11338 <kill@plt>
   15cf0:	cmn	r0, #1
   15cf4:	bgt	15d1c <dcngettext@plt+0x4870>
   15cf8:	bl	11374 <__errno_location@plt>
   15cfc:	ldr	r0, [r0]
   15d00:	cmp	r0, #3
   15d04:	bne	15d1c <dcngettext@plt+0x4870>
   15d08:	b	15d5c <dcngettext@plt+0x48b0>
   15d0c:	ldrb	r0, [r7, #44]	; 0x2c
   15d10:	cmp	r0, #0
   15d14:	cmpne	r4, #0
   15d18:	bne	15cd0 <dcngettext@plt+0x4824>
   15d1c:	ldr	r0, [sp, #8]
   15d20:	cmp	r5, r0
   15d24:	bne	15d44 <dcngettext@plt+0x4898>
   15d28:	mov	r0, r6
   15d2c:	mov	r1, r8
   15d30:	mov	r2, #1
   15d34:	mvn	r3, #0
   15d38:	str	r9, [sp]
   15d3c:	bl	170c4 <dcngettext@plt+0x5c18>
   15d40:	mov	r6, r0
   15d44:	add	r0, r5, r5, lsl #1
   15d48:	mov	r1, r7
   15d4c:	mov	r2, #384	; 0x180
   15d50:	add	r0, r6, r0, lsl #7
   15d54:	bl	111f4 <memcpy@plt>
   15d58:	add	r5, r5, #1
   15d5c:	bl	114a0 <getutxent@plt>
   15d60:	mov	r7, r0
   15d64:	cmp	r0, #0
   15d68:	bne	15d0c <dcngettext@plt+0x4860>
   15d6c:	b	15e9c <dcngettext@plt+0x49f0>
   15d70:	mov	r5, #0
   15d74:	b	15e9c <dcngettext@plt+0x49f0>
   15d78:	mov	r5, #0
   15d7c:	cmp	r4, #0
   15d80:	bne	15dfc <dcngettext@plt+0x4950>
   15d84:	mov	r8, #384	; 0x180
   15d88:	add	r4, sp, #8
   15d8c:	mov	r6, #0
   15d90:	ldrb	r0, [r7, #44]	; 0x2c
   15d94:	cmp	r0, #0
   15d98:	beq	15de8 <dcngettext@plt+0x493c>
   15d9c:	ldrh	r0, [r7]
   15da0:	cmp	r0, #7
   15da4:	bne	15de8 <dcngettext@plt+0x493c>
   15da8:	ldr	r0, [sp, #8]
   15dac:	cmp	r5, r0
   15db0:	bne	15dd0 <dcngettext@plt+0x4924>
   15db4:	mov	r0, r6
   15db8:	mov	r1, r4
   15dbc:	mov	r2, #1
   15dc0:	mvn	r3, #0
   15dc4:	str	r8, [sp]
   15dc8:	bl	170c4 <dcngettext@plt+0x5c18>
   15dcc:	mov	r6, r0
   15dd0:	add	r0, r5, r5, lsl #1
   15dd4:	mov	r1, r7
   15dd8:	mov	r2, #384	; 0x180
   15ddc:	add	r0, r6, r0, lsl #7
   15de0:	bl	111f4 <memcpy@plt>
   15de4:	add	r5, r5, #1
   15de8:	bl	114a0 <getutxent@plt>
   15dec:	mov	r7, r0
   15df0:	cmp	r0, #0
   15df4:	bne	15d90 <dcngettext@plt+0x48e4>
   15df8:	b	15e9c <dcngettext@plt+0x49f0>
   15dfc:	mov	r4, #384	; 0x180
   15e00:	add	r8, sp, #8
   15e04:	mov	r6, #0
   15e08:	ldrb	r0, [r7, #44]	; 0x2c
   15e0c:	cmp	r0, #0
   15e10:	beq	15e8c <dcngettext@plt+0x49e0>
   15e14:	ldrh	r0, [r7]
   15e18:	cmp	r0, #7
   15e1c:	bne	15e8c <dcngettext@plt+0x49e0>
   15e20:	ldr	r0, [r7, #4]
   15e24:	cmp	r0, #1
   15e28:	blt	15e4c <dcngettext@plt+0x49a0>
   15e2c:	mov	r1, #0
   15e30:	bl	11338 <kill@plt>
   15e34:	cmn	r0, #1
   15e38:	bgt	15e4c <dcngettext@plt+0x49a0>
   15e3c:	bl	11374 <__errno_location@plt>
   15e40:	ldr	r0, [r0]
   15e44:	cmp	r0, #3
   15e48:	beq	15e8c <dcngettext@plt+0x49e0>
   15e4c:	ldr	r0, [sp, #8]
   15e50:	cmp	r5, r0
   15e54:	bne	15e74 <dcngettext@plt+0x49c8>
   15e58:	mov	r0, r6
   15e5c:	mov	r1, r8
   15e60:	mov	r2, #1
   15e64:	mvn	r3, #0
   15e68:	str	r4, [sp]
   15e6c:	bl	170c4 <dcngettext@plt+0x5c18>
   15e70:	mov	r6, r0
   15e74:	add	r0, r5, r5, lsl #1
   15e78:	mov	r1, r7
   15e7c:	mov	r2, #384	; 0x180
   15e80:	add	r0, r6, r0, lsl #7
   15e84:	bl	111f4 <memcpy@plt>
   15e88:	add	r5, r5, #1
   15e8c:	bl	114a0 <getutxent@plt>
   15e90:	mov	r7, r0
   15e94:	cmp	r0, #0
   15e98:	bne	15e08 <dcngettext@plt+0x495c>
   15e9c:	bl	113f8 <endutxent@plt>
   15ea0:	ldr	r0, [sp, #4]
   15ea4:	str	r5, [sl]
   15ea8:	str	r6, [r0]
   15eac:	mov	r0, #0
   15eb0:	sub	sp, fp, #28
   15eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15eb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ebc:	add	fp, sp, #24
   15ec0:	mov	r4, r0
   15ec4:	cmp	r0, #0
   15ec8:	beq	15efc <dcngettext@plt+0x4a50>
   15ecc:	mov	r0, r4
   15ed0:	bl	1135c <strlen@plt>
   15ed4:	add	r5, r0, #1
   15ed8:	cmp	r5, #58	; 0x3a
   15edc:	bls	15f00 <dcngettext@plt+0x4a54>
   15ee0:	add	r0, r0, #10
   15ee4:	bic	r0, r0, #3
   15ee8:	bl	1748c <dcngettext@plt+0x5fe0>
   15eec:	mov	r6, r0
   15ef0:	cmp	r0, #0
   15ef4:	bne	15f14 <dcngettext@plt+0x4a68>
   15ef8:	b	15f4c <dcngettext@plt+0x4aa0>
   15efc:	mov	r5, #0
   15f00:	mov	r0, #64	; 0x40
   15f04:	bl	1748c <dcngettext@plt+0x5fe0>
   15f08:	mov	r6, r0
   15f0c:	cmp	r0, #0
   15f10:	beq	15f4c <dcngettext@plt+0x4aa0>
   15f14:	cmp	r4, #0
   15f18:	mov	r0, r4
   15f1c:	mov	r8, #0
   15f20:	mov	r7, r6
   15f24:	movwne	r0, #1
   15f28:	str	r8, [r6]
   15f2c:	strb	r0, [r6, #4]
   15f30:	strb	r8, [r7, #5]!
   15f34:	beq	15f4c <dcngettext@plt+0x4aa0>
   15f38:	mov	r0, r7
   15f3c:	mov	r1, r4
   15f40:	mov	r2, r5
   15f44:	bl	111f4 <memcpy@plt>
   15f48:	strb	r8, [r7, r5]
   15f4c:	mov	r0, r6
   15f50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15f54:	push	{r4, sl, fp, lr}
   15f58:	add	fp, sp, #8
   15f5c:	cmp	r0, #2
   15f60:	popcc	{r4, sl, fp, pc}
   15f64:	ldr	r4, [r0]
   15f68:	bl	17594 <dcngettext@plt+0x60e8>
   15f6c:	cmp	r4, #0
   15f70:	mov	r0, r4
   15f74:	bne	15f64 <dcngettext@plt+0x4ab8>
   15f78:	pop	{r4, sl, fp, pc}
   15f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f80:	add	fp, sp, #28
   15f84:	sub	sp, sp, #4
   15f88:	mov	r9, r2
   15f8c:	mov	r7, r1
   15f90:	cmp	r0, #0
   15f94:	beq	1600c <dcngettext@plt+0x4b60>
   15f98:	mov	r6, r0
   15f9c:	movw	r0, #32328	; 0x7e48
   15fa0:	movt	r0, #1
   15fa4:	bl	112c0 <getenv@plt>
   15fa8:	mov	r4, r0
   15fac:	ldrb	r0, [r6, #4]
   15fb0:	cmp	r4, #0
   15fb4:	beq	16020 <dcngettext@plt+0x4b74>
   15fb8:	cmp	r0, #0
   15fbc:	beq	15fd4 <dcngettext@plt+0x4b28>
   15fc0:	add	r0, r6, #5
   15fc4:	mov	r1, r4
   15fc8:	bl	111ac <strcmp@plt>
   15fcc:	cmp	r0, #0
   15fd0:	beq	160e4 <dcngettext@plt+0x4c38>
   15fd4:	mov	r0, r4
   15fd8:	bl	1135c <strlen@plt>
   15fdc:	add	sl, r0, #1
   15fe0:	mov	r8, #1
   15fe4:	cmp	sl, #58	; 0x3a
   15fe8:	bls	16030 <dcngettext@plt+0x4b84>
   15fec:	add	r0, r0, #10
   15ff0:	bic	r0, r0, #3
   15ff4:	bl	1748c <dcngettext@plt+0x5fe0>
   15ff8:	cmp	r0, #0
   15ffc:	bne	16040 <dcngettext@plt+0x4b94>
   16000:	mov	r0, #0
   16004:	sub	sp, fp, #28
   16008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1600c:	mov	r0, r7
   16010:	mov	r1, r9
   16014:	sub	sp, fp, #28
   16018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1601c:	b	111a0 <gmtime_r@plt>
   16020:	mov	r8, #0
   16024:	cmp	r0, #0
   16028:	mov	sl, #0
   1602c:	beq	160e4 <dcngettext@plt+0x4c38>
   16030:	mov	r0, #64	; 0x40
   16034:	bl	1748c <dcngettext@plt+0x5fe0>
   16038:	cmp	r0, #0
   1603c:	beq	16000 <dcngettext@plt+0x4b54>
   16040:	mov	r5, r0
   16044:	str	r7, [sp]
   16048:	strb	r8, [r0, #4]
   1604c:	mov	r0, #0
   16050:	cmp	r8, #0
   16054:	mov	r7, r5
   16058:	str	r0, [r5]
   1605c:	strb	r0, [r7, #5]!
   16060:	beq	1607c <dcngettext@plt+0x4bd0>
   16064:	mov	r0, r7
   16068:	mov	r1, r4
   1606c:	mov	r2, sl
   16070:	mov	r8, #0
   16074:	bl	111f4 <memcpy@plt>
   16078:	strb	r8, [r7, sl]
   1607c:	ldrb	r0, [r6, #4]
   16080:	cmp	r0, #0
   16084:	beq	160ec <dcngettext@plt+0x4c40>
   16088:	movw	r0, #32328	; 0x7e48
   1608c:	add	r1, r6, #5
   16090:	mov	r2, #1
   16094:	movt	r0, #1
   16098:	bl	11368 <setenv@plt>
   1609c:	ldr	r7, [sp]
   160a0:	cmp	r0, #0
   160a4:	beq	16104 <dcngettext@plt+0x4c58>
   160a8:	bl	11374 <__errno_location@plt>
   160ac:	ldr	r6, [r0]
   160b0:	mov	r4, r0
   160b4:	cmp	r5, #2
   160b8:	bcc	160d4 <dcngettext@plt+0x4c28>
   160bc:	ldr	r7, [r5]
   160c0:	mov	r0, r5
   160c4:	bl	17594 <dcngettext@plt+0x60e8>
   160c8:	cmp	r7, #0
   160cc:	mov	r5, r7
   160d0:	bne	160bc <dcngettext@plt+0x4c10>
   160d4:	str	r6, [r4]
   160d8:	mov	r0, #0
   160dc:	sub	sp, fp, #28
   160e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160e4:	mov	r5, #1
   160e8:	b	16108 <dcngettext@plt+0x4c5c>
   160ec:	movw	r0, #32328	; 0x7e48
   160f0:	movt	r0, #1
   160f4:	bl	1147c <unsetenv@plt>
   160f8:	ldr	r7, [sp]
   160fc:	cmp	r0, #0
   16100:	bne	160a8 <dcngettext@plt+0x4bfc>
   16104:	bl	1126c <tzset@plt>
   16108:	mov	r0, r7
   1610c:	mov	r1, r9
   16110:	bl	11248 <localtime_r@plt>
   16114:	cmp	r0, #0
   16118:	beq	16194 <dcngettext@plt+0x4ce8>
   1611c:	mov	r0, r6
   16120:	mov	r1, r9
   16124:	bl	162a4 <dcngettext@plt+0x4df8>
   16128:	mov	r6, r0
   1612c:	cmp	r5, #1
   16130:	beq	16200 <dcngettext@plt+0x4d54>
   16134:	bl	11374 <__errno_location@plt>
   16138:	mov	r8, r0
   1613c:	ldr	sl, [r0]
   16140:	ldrb	r0, [r5, #4]
   16144:	cmp	r0, #0
   16148:	beq	16208 <dcngettext@plt+0x4d5c>
   1614c:	movw	r0, #32328	; 0x7e48
   16150:	add	r1, r5, #5
   16154:	mov	r2, #1
   16158:	movt	r0, #1
   1615c:	bl	11368 <setenv@plt>
   16160:	cmp	r0, #0
   16164:	beq	1621c <dcngettext@plt+0x4d70>
   16168:	ldr	sl, [r8]
   1616c:	mov	r4, #0
   16170:	cmp	r5, #2
   16174:	bcc	16284 <dcngettext@plt+0x4dd8>
   16178:	ldr	r7, [r5]
   1617c:	mov	r0, r5
   16180:	bl	17594 <dcngettext@plt+0x60e8>
   16184:	cmp	r7, #0
   16188:	mov	r5, r7
   1618c:	bne	16178 <dcngettext@plt+0x4ccc>
   16190:	b	16284 <dcngettext@plt+0x4dd8>
   16194:	mov	r6, #0
   16198:	cmp	r5, #1
   1619c:	beq	16200 <dcngettext@plt+0x4d54>
   161a0:	bl	11374 <__errno_location@plt>
   161a4:	mov	r8, r0
   161a8:	ldr	sl, [r0]
   161ac:	ldrb	r0, [r5, #4]
   161b0:	cmp	r0, #0
   161b4:	beq	16248 <dcngettext@plt+0x4d9c>
   161b8:	movw	r0, #32328	; 0x7e48
   161bc:	add	r1, r5, #5
   161c0:	mov	r2, #1
   161c4:	movt	r0, #1
   161c8:	bl	11368 <setenv@plt>
   161cc:	cmp	r0, #0
   161d0:	beq	1625c <dcngettext@plt+0x4db0>
   161d4:	ldr	sl, [r8]
   161d8:	mov	r4, #0
   161dc:	cmp	r5, #2
   161e0:	bcc	16284 <dcngettext@plt+0x4dd8>
   161e4:	ldr	r7, [r5]
   161e8:	mov	r0, r5
   161ec:	bl	17594 <dcngettext@plt+0x60e8>
   161f0:	cmp	r7, #0
   161f4:	mov	r5, r7
   161f8:	bne	161e4 <dcngettext@plt+0x4d38>
   161fc:	b	16284 <dcngettext@plt+0x4dd8>
   16200:	mov	r4, #1
   16204:	b	16288 <dcngettext@plt+0x4ddc>
   16208:	movw	r0, #32328	; 0x7e48
   1620c:	movt	r0, #1
   16210:	bl	1147c <unsetenv@plt>
   16214:	cmp	r0, #0
   16218:	bne	16168 <dcngettext@plt+0x4cbc>
   1621c:	bl	1126c <tzset@plt>
   16220:	mov	r4, #1
   16224:	cmp	r5, #2
   16228:	bcc	16284 <dcngettext@plt+0x4dd8>
   1622c:	ldr	r7, [r5]
   16230:	mov	r0, r5
   16234:	bl	17594 <dcngettext@plt+0x60e8>
   16238:	cmp	r7, #0
   1623c:	mov	r5, r7
   16240:	bne	1622c <dcngettext@plt+0x4d80>
   16244:	b	16284 <dcngettext@plt+0x4dd8>
   16248:	movw	r0, #32328	; 0x7e48
   1624c:	movt	r0, #1
   16250:	bl	1147c <unsetenv@plt>
   16254:	cmp	r0, #0
   16258:	bne	161d4 <dcngettext@plt+0x4d28>
   1625c:	bl	1126c <tzset@plt>
   16260:	mov	r4, #1
   16264:	cmp	r5, #2
   16268:	bcc	16284 <dcngettext@plt+0x4dd8>
   1626c:	ldr	r7, [r5]
   16270:	mov	r0, r5
   16274:	bl	17594 <dcngettext@plt+0x60e8>
   16278:	cmp	r7, #0
   1627c:	mov	r5, r7
   16280:	bne	1626c <dcngettext@plt+0x4dc0>
   16284:	str	sl, [r8]
   16288:	cmp	r6, #0
   1628c:	moveq	r9, r6
   16290:	cmp	r4, #0
   16294:	moveq	r9, r4
   16298:	mov	r0, r9
   1629c:	sub	sp, fp, #28
   162a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162a8:	add	fp, sp, #28
   162ac:	sub	sp, sp, #4
   162b0:	ldr	r7, [r1, #40]	; 0x28
   162b4:	mov	r8, #1
   162b8:	cmp	r7, #0
   162bc:	beq	16360 <dcngettext@plt+0x4eb4>
   162c0:	mov	r5, r1
   162c4:	mov	r6, r0
   162c8:	cmp	r7, r1
   162cc:	bcc	162dc <dcngettext@plt+0x4e30>
   162d0:	add	r0, r5, #44	; 0x2c
   162d4:	cmp	r7, r0
   162d8:	bcc	16360 <dcngettext@plt+0x4eb4>
   162dc:	ldrb	r0, [r7]
   162e0:	cmp	r0, #0
   162e4:	beq	16354 <dcngettext@plt+0x4ea8>
   162e8:	add	r4, r6, #5
   162ec:	b	16300 <dcngettext@plt+0x4e54>
   162f0:	ldr	r0, [r6]
   162f4:	cmp	r0, #0
   162f8:	addne	r4, r0, #5
   162fc:	movne	r6, r0
   16300:	mov	r0, r4
   16304:	mov	r1, r7
   16308:	bl	111ac <strcmp@plt>
   1630c:	cmp	r0, #0
   16310:	beq	16404 <dcngettext@plt+0x4f58>
   16314:	ldrb	r0, [r4]
   16318:	cmp	r0, #0
   1631c:	bne	16338 <dcngettext@plt+0x4e8c>
   16320:	add	r0, r6, #5
   16324:	cmp	r4, r0
   16328:	bne	1636c <dcngettext@plt+0x4ec0>
   1632c:	ldrb	r0, [r6, #4]
   16330:	cmp	r0, #0
   16334:	beq	1636c <dcngettext@plt+0x4ec0>
   16338:	mov	r0, r4
   1633c:	bl	1135c <strlen@plt>
   16340:	add	r4, r4, r0
   16344:	ldrb	r0, [r4, #1]!
   16348:	cmp	r0, #0
   1634c:	bne	16300 <dcngettext@plt+0x4e54>
   16350:	b	162f0 <dcngettext@plt+0x4e44>
   16354:	movw	r4, #31152	; 0x79b0
   16358:	movt	r4, #1
   1635c:	str	r4, [r5, #40]	; 0x28
   16360:	mov	r0, r8
   16364:	sub	sp, fp, #28
   16368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1636c:	add	r0, r6, #64	; 0x40
   16370:	sub	sl, r0, r4
   16374:	mov	r0, r7
   16378:	bl	1135c <strlen@plt>
   1637c:	add	r9, r0, #1
   16380:	cmp	r9, sl
   16384:	bge	163b0 <dcngettext@plt+0x4f04>
   16388:	mov	r0, r4
   1638c:	mov	r1, r7
   16390:	mov	r2, r9
   16394:	bl	111f4 <memcpy@plt>
   16398:	mov	r0, #0
   1639c:	strb	r0, [r4, r9]
   163a0:	str	r4, [r5, #40]	; 0x28
   163a4:	mov	r0, r8
   163a8:	sub	sp, fp, #28
   163ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163b0:	add	r0, r0, #10
   163b4:	cmp	r9, #59	; 0x3b
   163b8:	bic	r0, r0, #3
   163bc:	movwcc	r0, #64	; 0x40
   163c0:	bl	1748c <dcngettext@plt+0x5fe0>
   163c4:	cmp	r0, #0
   163c8:	beq	16414 <dcngettext@plt+0x4f68>
   163cc:	mov	sl, r0
   163d0:	mov	r0, #0
   163d4:	mov	r1, r7
   163d8:	mov	r2, r9
   163dc:	str	r0, [sl]
   163e0:	mov	r0, #1
   163e4:	add	r4, sl, #5
   163e8:	strh	r0, [sl, #4]
   163ec:	mov	r0, r4
   163f0:	bl	111f4 <memcpy@plt>
   163f4:	mov	r0, #0
   163f8:	strb	r0, [r4, r9]
   163fc:	str	sl, [r6]
   16400:	strb	r0, [sl, #4]
   16404:	str	r4, [r5, #40]	; 0x28
   16408:	mov	r0, r8
   1640c:	sub	sp, fp, #28
   16410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16414:	mov	r8, #0
   16418:	str	r8, [r6]
   1641c:	mov	r0, r8
   16420:	sub	sp, fp, #28
   16424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1642c:	add	fp, sp, #28
   16430:	sub	sp, sp, #52	; 0x34
   16434:	mov	r9, r1
   16438:	cmp	r0, #0
   1643c:	beq	164b8 <dcngettext@plt+0x500c>
   16440:	mov	r7, r0
   16444:	movw	r0, #32328	; 0x7e48
   16448:	movt	r0, #1
   1644c:	bl	112c0 <getenv@plt>
   16450:	mov	r6, r0
   16454:	ldrb	r0, [r7, #4]
   16458:	cmp	r6, #0
   1645c:	beq	164c8 <dcngettext@plt+0x501c>
   16460:	cmp	r0, #0
   16464:	beq	1647c <dcngettext@plt+0x4fd0>
   16468:	add	r0, r7, #5
   1646c:	mov	r1, r6
   16470:	bl	111ac <strcmp@plt>
   16474:	cmp	r0, #0
   16478:	beq	1658c <dcngettext@plt+0x50e0>
   1647c:	mov	r0, r6
   16480:	bl	1135c <strlen@plt>
   16484:	add	r8, r0, #1
   16488:	mov	sl, #1
   1648c:	cmp	r8, #58	; 0x3a
   16490:	bls	164d8 <dcngettext@plt+0x502c>
   16494:	add	r0, r0, #10
   16498:	bic	r0, r0, #3
   1649c:	bl	1748c <dcngettext@plt+0x5fe0>
   164a0:	mvn	r4, #0
   164a4:	cmp	r0, #0
   164a8:	bne	164ec <dcngettext@plt+0x5040>
   164ac:	mov	r0, r4
   164b0:	sub	sp, fp, #28
   164b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164b8:	mov	r0, r9
   164bc:	sub	sp, fp, #28
   164c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164c4:	b	1144c <timegm@plt>
   164c8:	mov	sl, #0
   164cc:	cmp	r0, #0
   164d0:	mov	r8, #0
   164d4:	beq	1658c <dcngettext@plt+0x50e0>
   164d8:	mov	r0, #64	; 0x40
   164dc:	bl	1748c <dcngettext@plt+0x5fe0>
   164e0:	mvn	r4, #0
   164e4:	cmp	r0, #0
   164e8:	beq	164ac <dcngettext@plt+0x5000>
   164ec:	mov	r5, r0
   164f0:	strb	sl, [r0, #4]
   164f4:	mov	r0, #0
   164f8:	cmp	sl, #0
   164fc:	mov	r4, r5
   16500:	str	r0, [r5]
   16504:	strb	r0, [r4, #5]!
   16508:	beq	16524 <dcngettext@plt+0x5078>
   1650c:	mov	r0, r4
   16510:	mov	r1, r6
   16514:	mov	r2, r8
   16518:	mov	sl, #0
   1651c:	bl	111f4 <memcpy@plt>
   16520:	strb	sl, [r4, r8]
   16524:	ldrb	r0, [r7, #4]
   16528:	cmp	r0, #0
   1652c:	beq	16594 <dcngettext@plt+0x50e8>
   16530:	movw	r0, #32328	; 0x7e48
   16534:	add	r1, r7, #5
   16538:	mov	r2, #1
   1653c:	movt	r0, #1
   16540:	bl	11368 <setenv@plt>
   16544:	mvn	r4, #0
   16548:	cmp	r0, #0
   1654c:	beq	165ac <dcngettext@plt+0x5100>
   16550:	bl	11374 <__errno_location@plt>
   16554:	ldr	r8, [r0]
   16558:	mov	r6, r0
   1655c:	cmp	r5, #2
   16560:	bcc	1657c <dcngettext@plt+0x50d0>
   16564:	ldr	r7, [r5]
   16568:	mov	r0, r5
   1656c:	bl	17594 <dcngettext@plt+0x60e8>
   16570:	cmp	r7, #0
   16574:	mov	r5, r7
   16578:	bne	16564 <dcngettext@plt+0x50b8>
   1657c:	str	r8, [r6]
   16580:	mov	r0, r4
   16584:	sub	sp, fp, #28
   16588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1658c:	mov	r5, #1
   16590:	b	165b0 <dcngettext@plt+0x5104>
   16594:	movw	r0, #32328	; 0x7e48
   16598:	movt	r0, #1
   1659c:	bl	1147c <unsetenv@plt>
   165a0:	mvn	r4, #0
   165a4:	cmp	r0, #0
   165a8:	bne	16550 <dcngettext@plt+0x50a4>
   165ac:	bl	1126c <tzset@plt>
   165b0:	mov	r1, #32
   165b4:	mov	r2, r9
   165b8:	add	r0, sp, #8
   165bc:	vld1.32	{d16-d17}, [r2], r1
   165c0:	mov	r3, r0
   165c4:	vst1.32	{d16-d17}, [r3], r1
   165c8:	ldr	r1, [r9, #16]
   165cc:	ldr	r6, [r9, #20]
   165d0:	str	r1, [sp, #24]
   165d4:	mvn	r1, #0
   165d8:	str	r1, [sp, #36]	; 0x24
   165dc:	str	r6, [sp, #28]
   165e0:	ldr	r1, [r2]
   165e4:	str	r1, [r3]
   165e8:	bl	111b8 <mktime@plt>
   165ec:	ldr	r1, [sp, #36]	; 0x24
   165f0:	cmn	r1, #1
   165f4:	ble	1667c <dcngettext@plt+0x51d0>
   165f8:	add	r8, sp, #8
   165fc:	str	r0, [sp, #4]
   16600:	mov	r0, r7
   16604:	mov	r1, r8
   16608:	bl	162a4 <dcngettext@plt+0x4df8>
   1660c:	mov	sl, r0
   16610:	cmp	r5, #1
   16614:	beq	166e0 <dcngettext@plt+0x5234>
   16618:	bl	11374 <__errno_location@plt>
   1661c:	mov	r7, r0
   16620:	ldr	r4, [r0]
   16624:	ldrb	r0, [r5, #4]
   16628:	cmp	r0, #0
   1662c:	beq	16700 <dcngettext@plt+0x5254>
   16630:	movw	r0, #32328	; 0x7e48
   16634:	add	r1, r5, #5
   16638:	mov	r2, #1
   1663c:	movt	r0, #1
   16640:	bl	11368 <setenv@plt>
   16644:	cmp	r0, #0
   16648:	beq	16714 <dcngettext@plt+0x5268>
   1664c:	ldr	r4, [r7]
   16650:	mov	r6, #0
   16654:	cmp	r5, #2
   16658:	bcc	16744 <dcngettext@plt+0x5298>
   1665c:	str	r4, [sp]
   16660:	ldr	r4, [r5]
   16664:	mov	r0, r5
   16668:	bl	17594 <dcngettext@plt+0x60e8>
   1666c:	cmp	r4, #0
   16670:	mov	r5, r4
   16674:	bne	16660 <dcngettext@plt+0x51b4>
   16678:	b	16740 <dcngettext@plt+0x5294>
   1667c:	cmp	r5, #1
   16680:	beq	166f0 <dcngettext@plt+0x5244>
   16684:	bl	11374 <__errno_location@plt>
   16688:	mov	r4, r0
   1668c:	ldr	r6, [r0]
   16690:	ldrb	r0, [r5, #4]
   16694:	cmp	r0, #0
   16698:	beq	16788 <dcngettext@plt+0x52dc>
   1669c:	movw	r0, #32328	; 0x7e48
   166a0:	add	r1, r5, #5
   166a4:	mov	r2, #1
   166a8:	movt	r0, #1
   166ac:	bl	11368 <setenv@plt>
   166b0:	cmp	r0, #0
   166b4:	beq	1679c <dcngettext@plt+0x52f0>
   166b8:	ldr	r6, [r4]
   166bc:	cmp	r5, #2
   166c0:	bcc	167c0 <dcngettext@plt+0x5314>
   166c4:	ldr	r7, [r5]
   166c8:	mov	r0, r5
   166cc:	bl	17594 <dcngettext@plt+0x60e8>
   166d0:	cmp	r7, #0
   166d4:	mov	r5, r7
   166d8:	bne	166c4 <dcngettext@plt+0x5218>
   166dc:	b	167c0 <dcngettext@plt+0x5314>
   166e0:	mov	r6, #1
   166e4:	and	r0, sl, r6
   166e8:	cmp	r0, #1
   166ec:	beq	16754 <dcngettext@plt+0x52a8>
   166f0:	mvn	r4, #0
   166f4:	mov	r0, r4
   166f8:	sub	sp, fp, #28
   166fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16700:	movw	r0, #32328	; 0x7e48
   16704:	movt	r0, #1
   16708:	bl	1147c <unsetenv@plt>
   1670c:	cmp	r0, #0
   16710:	bne	1664c <dcngettext@plt+0x51a0>
   16714:	bl	1126c <tzset@plt>
   16718:	mov	r6, #1
   1671c:	cmp	r5, #2
   16720:	bcc	16744 <dcngettext@plt+0x5298>
   16724:	str	r4, [sp]
   16728:	ldr	r4, [r5]
   1672c:	mov	r0, r5
   16730:	bl	17594 <dcngettext@plt+0x60e8>
   16734:	cmp	r4, #0
   16738:	mov	r5, r4
   1673c:	bne	16728 <dcngettext@plt+0x527c>
   16740:	ldr	r4, [sp]
   16744:	str	r4, [r7]
   16748:	and	r0, sl, r6
   1674c:	cmp	r0, #1
   16750:	bne	166f0 <dcngettext@plt+0x5244>
   16754:	mov	r0, #28
   16758:	add	r1, r8, #16
   1675c:	ldr	r4, [sp, #4]
   16760:	vld1.32	{d16-d17}, [r8], r0
   16764:	vld1.64	{d18-d19}, [r1]
   16768:	add	r1, r9, #16
   1676c:	vld1.32	{d20-d21}, [r8]
   16770:	vst1.32	{d16-d17}, [r9], r0
   16774:	vst1.32	{d18-d19}, [r1]
   16778:	vst1.32	{d20-d21}, [r9]
   1677c:	mov	r0, r4
   16780:	sub	sp, fp, #28
   16784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16788:	movw	r0, #32328	; 0x7e48
   1678c:	movt	r0, #1
   16790:	bl	1147c <unsetenv@plt>
   16794:	cmp	r0, #0
   16798:	bne	166b8 <dcngettext@plt+0x520c>
   1679c:	bl	1126c <tzset@plt>
   167a0:	cmp	r5, #2
   167a4:	bcc	167c0 <dcngettext@plt+0x5314>
   167a8:	ldr	r7, [r5]
   167ac:	mov	r0, r5
   167b0:	bl	17594 <dcngettext@plt+0x60e8>
   167b4:	cmp	r7, #0
   167b8:	mov	r5, r7
   167bc:	bne	167a8 <dcngettext@plt+0x52fc>
   167c0:	str	r6, [r4]
   167c4:	mvn	r4, #0
   167c8:	mov	r0, r4
   167cc:	sub	sp, fp, #28
   167d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   167d8:	add	fp, sp, #24
   167dc:	sub	sp, sp, #32
   167e0:	ldr	r6, [fp, #12]
   167e4:	ldr	r7, [fp, #8]
   167e8:	mov	r4, r2
   167ec:	mov	r8, r0
   167f0:	cmp	r1, #0
   167f4:	beq	1681c <dcngettext@plt+0x5370>
   167f8:	movw	r2, #32331	; 0x7e4b
   167fc:	mov	r5, r1
   16800:	str	r3, [sp, #4]
   16804:	str	r4, [sp]
   16808:	mov	r0, r8
   1680c:	mov	r1, #1
   16810:	movt	r2, #1
   16814:	mov	r3, r5
   16818:	b	16834 <dcngettext@plt+0x5388>
   1681c:	movw	r2, #32343	; 0x7e57
   16820:	str	r3, [sp]
   16824:	mov	r0, r8
   16828:	mov	r1, #1
   1682c:	mov	r3, r4
   16830:	movt	r2, #1
   16834:	bl	113bc <__fprintf_chk@plt>
   16838:	movw	r1, #32350	; 0x7e5e
   1683c:	mov	r0, #0
   16840:	mov	r2, #5
   16844:	movt	r1, #1
   16848:	bl	11224 <dcgettext@plt>
   1684c:	movw	r2, #33068	; 0x812c
   16850:	mov	r3, r0
   16854:	movw	r0, #2022	; 0x7e6
   16858:	mov	r1, #1
   1685c:	str	r0, [sp]
   16860:	movt	r2, #1
   16864:	mov	r0, r8
   16868:	bl	113bc <__fprintf_chk@plt>
   1686c:	movw	r4, #31151	; 0x79af
   16870:	mov	r1, r8
   16874:	movt	r4, #1
   16878:	mov	r0, r4
   1687c:	bl	11194 <fputs_unlocked@plt>
   16880:	movw	r1, #32354	; 0x7e62
   16884:	mov	r0, #0
   16888:	mov	r2, #5
   1688c:	movt	r1, #1
   16890:	bl	11224 <dcgettext@plt>
   16894:	movw	r3, #32525	; 0x7f0d
   16898:	mov	r2, r0
   1689c:	mov	r0, r8
   168a0:	mov	r1, #1
   168a4:	movt	r3, #1
   168a8:	bl	113bc <__fprintf_chk@plt>
   168ac:	mov	r0, r4
   168b0:	mov	r1, r8
   168b4:	bl	11194 <fputs_unlocked@plt>
   168b8:	cmp	r6, #9
   168bc:	bhi	168f8 <dcngettext@plt+0x544c>
   168c0:	add	r0, pc, #0
   168c4:	ldr	pc, [r0, r6, lsl #2]
   168c8:	strdeq	r6, [r1], -r0
   168cc:	andeq	r6, r1, r4, lsl #18
   168d0:	andeq	r6, r1, r4, lsr r9
   168d4:	andeq	r6, r1, ip, asr r9
   168d8:	andeq	r6, r1, r4, lsl #19
   168dc:	andeq	r6, r1, ip, lsr #19
   168e0:	ldrdeq	r6, [r1], -r4
   168e4:	andeq	r6, r1, ip, lsl #20
   168e8:			; <UNDEFINED> instruction: 0x00016ab4
   168ec:	andeq	r6, r1, ip, asr sl
   168f0:	sub	sp, fp, #24
   168f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   168f8:	movw	r1, #32878	; 0x806e
   168fc:	movt	r1, #1
   16900:	b	16a64 <dcngettext@plt+0x55b8>
   16904:	movw	r1, #32559	; 0x7f2f
   16908:	mov	r0, #0
   1690c:	mov	r2, #5
   16910:	movt	r1, #1
   16914:	bl	11224 <dcgettext@plt>
   16918:	ldr	r3, [r7]
   1691c:	mov	r2, r0
   16920:	mov	r0, r8
   16924:	mov	r1, #1
   16928:	sub	sp, fp, #24
   1692c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16930:	b	113bc <__fprintf_chk@plt>
   16934:	movw	r1, #32575	; 0x7f3f
   16938:	mov	r0, #0
   1693c:	mov	r2, #5
   16940:	movt	r1, #1
   16944:	bl	11224 <dcgettext@plt>
   16948:	mov	r2, r0
   1694c:	ldr	r3, [r7]
   16950:	ldr	r0, [r7, #4]
   16954:	str	r0, [sp]
   16958:	b	16a48 <dcngettext@plt+0x559c>
   1695c:	movw	r1, #32598	; 0x7f56
   16960:	mov	r0, #0
   16964:	mov	r2, #5
   16968:	movt	r1, #1
   1696c:	bl	11224 <dcgettext@plt>
   16970:	ldr	r3, [r7]
   16974:	mov	r2, r0
   16978:	ldmib	r7, {r0, r1}
   1697c:	stm	sp, {r0, r1}
   16980:	b	16a48 <dcngettext@plt+0x559c>
   16984:	movw	r1, #32626	; 0x7f72
   16988:	mov	r0, #0
   1698c:	mov	r2, #5
   16990:	movt	r1, #1
   16994:	bl	11224 <dcgettext@plt>
   16998:	ldr	r3, [r7]
   1699c:	mov	r2, r0
   169a0:	ldmib	r7, {r0, r1, r7}
   169a4:	stm	sp, {r0, r1, r7}
   169a8:	b	16a48 <dcngettext@plt+0x559c>
   169ac:	movw	r1, #32658	; 0x7f92
   169b0:	mov	r0, #0
   169b4:	mov	r2, #5
   169b8:	movt	r1, #1
   169bc:	bl	11224 <dcgettext@plt>
   169c0:	ldr	r3, [r7]
   169c4:	mov	r2, r0
   169c8:	ldmib	r7, {r0, r1, r6, r7}
   169cc:	stm	sp, {r0, r1, r6, r7}
   169d0:	b	16a48 <dcngettext@plt+0x559c>
   169d4:	movw	r1, #32694	; 0x7fb6
   169d8:	mov	r0, #0
   169dc:	mov	r2, #5
   169e0:	movt	r1, #1
   169e4:	bl	11224 <dcgettext@plt>
   169e8:	ldr	r3, [r7]
   169ec:	mov	r2, r0
   169f0:	ldmib	r7, {r0, r1, r6}
   169f4:	ldr	r5, [r7, #16]
   169f8:	ldr	r7, [r7, #20]
   169fc:	stm	sp, {r0, r1, r6}
   16a00:	str	r5, [sp, #12]
   16a04:	str	r7, [sp, #16]
   16a08:	b	16a48 <dcngettext@plt+0x559c>
   16a0c:	movw	r1, #32734	; 0x7fde
   16a10:	mov	r0, #0
   16a14:	mov	r2, #5
   16a18:	movt	r1, #1
   16a1c:	bl	11224 <dcgettext@plt>
   16a20:	ldr	r3, [r7]
   16a24:	mov	r2, r0
   16a28:	ldmib	r7, {r0, r1, r6}
   16a2c:	ldr	r5, [r7, #16]
   16a30:	ldr	r4, [r7, #20]
   16a34:	ldr	r7, [r7, #24]
   16a38:	stm	sp, {r0, r1, r6}
   16a3c:	str	r5, [sp, #12]
   16a40:	str	r4, [sp, #16]
   16a44:	str	r7, [sp, #20]
   16a48:	mov	r0, r8
   16a4c:	mov	r1, #1
   16a50:	bl	113bc <__fprintf_chk@plt>
   16a54:	sub	sp, fp, #24
   16a58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16a5c:	movw	r1, #32826	; 0x803a
   16a60:	movt	r1, #1
   16a64:	mov	r0, #0
   16a68:	mov	r2, #5
   16a6c:	bl	11224 <dcgettext@plt>
   16a70:	mov	ip, r0
   16a74:	ldr	r3, [r7]
   16a78:	ldr	r0, [r7, #4]
   16a7c:	ldr	r1, [r7, #8]
   16a80:	ldr	r6, [r7, #12]
   16a84:	ldr	r5, [r7, #16]
   16a88:	ldr	r4, [r7, #20]
   16a8c:	ldr	r2, [r7, #24]
   16a90:	ldr	lr, [r7, #28]
   16a94:	ldr	r7, [r7, #32]
   16a98:	stm	sp, {r0, r1, r6}
   16a9c:	str	r5, [sp, #12]
   16aa0:	str	r4, [sp, #16]
   16aa4:	str	r2, [sp, #20]
   16aa8:	str	lr, [sp, #24]
   16aac:	str	r7, [sp, #28]
   16ab0:	b	16af8 <dcngettext@plt+0x564c>
   16ab4:	movw	r1, #32778	; 0x800a
   16ab8:	mov	r0, #0
   16abc:	mov	r2, #5
   16ac0:	movt	r1, #1
   16ac4:	bl	11224 <dcgettext@plt>
   16ac8:	mov	ip, r0
   16acc:	ldr	r3, [r7]
   16ad0:	ldmib	r7, {r0, r1, r6}
   16ad4:	ldr	r5, [r7, #16]
   16ad8:	ldr	r4, [r7, #20]
   16adc:	ldr	r2, [r7, #24]
   16ae0:	ldr	r7, [r7, #28]
   16ae4:	stm	sp, {r0, r1, r6}
   16ae8:	str	r5, [sp, #12]
   16aec:	str	r4, [sp, #16]
   16af0:	str	r2, [sp, #20]
   16af4:	str	r7, [sp, #24]
   16af8:	mov	r0, r8
   16afc:	mov	r1, #1
   16b00:	mov	r2, ip
   16b04:	bl	113bc <__fprintf_chk@plt>
   16b08:	sub	sp, fp, #24
   16b0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16b10:	push	{r4, sl, fp, lr}
   16b14:	add	fp, sp, #8
   16b18:	sub	sp, sp, #8
   16b1c:	ldr	ip, [fp, #8]
   16b20:	mov	lr, #0
   16b24:	ldr	r4, [ip, lr, lsl #2]
   16b28:	add	lr, lr, #1
   16b2c:	cmp	r4, #0
   16b30:	bne	16b24 <dcngettext@plt+0x5678>
   16b34:	sub	r4, lr, #1
   16b38:	str	ip, [sp]
   16b3c:	str	r4, [sp, #4]
   16b40:	bl	167d4 <dcngettext@plt+0x5328>
   16b44:	sub	sp, fp, #8
   16b48:	pop	{r4, sl, fp, pc}
   16b4c:	push	{fp, lr}
   16b50:	mov	fp, sp
   16b54:	sub	sp, sp, #48	; 0x30
   16b58:	ldr	ip, [fp, #8]
   16b5c:	ldr	lr, [ip]
   16b60:	cmp	lr, #0
   16b64:	str	lr, [sp, #8]
   16b68:	beq	16c04 <dcngettext@plt+0x5758>
   16b6c:	ldr	lr, [ip, #4]
   16b70:	cmp	lr, #0
   16b74:	str	lr, [sp, #12]
   16b78:	beq	16c0c <dcngettext@plt+0x5760>
   16b7c:	ldr	lr, [ip, #8]
   16b80:	cmp	lr, #0
   16b84:	str	lr, [sp, #16]
   16b88:	beq	16c14 <dcngettext@plt+0x5768>
   16b8c:	ldr	lr, [ip, #12]
   16b90:	cmp	lr, #0
   16b94:	str	lr, [sp, #20]
   16b98:	beq	16c1c <dcngettext@plt+0x5770>
   16b9c:	ldr	lr, [ip, #16]
   16ba0:	cmp	lr, #0
   16ba4:	str	lr, [sp, #24]
   16ba8:	beq	16c24 <dcngettext@plt+0x5778>
   16bac:	ldr	lr, [ip, #20]
   16bb0:	cmp	lr, #0
   16bb4:	str	lr, [sp, #28]
   16bb8:	beq	16c2c <dcngettext@plt+0x5780>
   16bbc:	ldr	lr, [ip, #24]
   16bc0:	cmp	lr, #0
   16bc4:	str	lr, [sp, #32]
   16bc8:	beq	16c34 <dcngettext@plt+0x5788>
   16bcc:	ldr	lr, [ip, #28]
   16bd0:	cmp	lr, #0
   16bd4:	str	lr, [sp, #36]	; 0x24
   16bd8:	beq	16c3c <dcngettext@plt+0x5790>
   16bdc:	ldr	lr, [ip, #32]
   16be0:	cmp	lr, #0
   16be4:	str	lr, [sp, #40]	; 0x28
   16be8:	beq	16c44 <dcngettext@plt+0x5798>
   16bec:	ldr	lr, [ip, #36]	; 0x24
   16bf0:	mov	ip, #10
   16bf4:	cmp	lr, #0
   16bf8:	str	lr, [sp, #44]	; 0x2c
   16bfc:	movweq	ip, #9
   16c00:	b	16c48 <dcngettext@plt+0x579c>
   16c04:	mov	ip, #0
   16c08:	b	16c48 <dcngettext@plt+0x579c>
   16c0c:	mov	ip, #1
   16c10:	b	16c48 <dcngettext@plt+0x579c>
   16c14:	mov	ip, #2
   16c18:	b	16c48 <dcngettext@plt+0x579c>
   16c1c:	mov	ip, #3
   16c20:	b	16c48 <dcngettext@plt+0x579c>
   16c24:	mov	ip, #4
   16c28:	b	16c48 <dcngettext@plt+0x579c>
   16c2c:	mov	ip, #5
   16c30:	b	16c48 <dcngettext@plt+0x579c>
   16c34:	mov	ip, #6
   16c38:	b	16c48 <dcngettext@plt+0x579c>
   16c3c:	mov	ip, #7
   16c40:	b	16c48 <dcngettext@plt+0x579c>
   16c44:	mov	ip, #8
   16c48:	add	lr, sp, #8
   16c4c:	str	ip, [sp, #4]
   16c50:	str	lr, [sp]
   16c54:	bl	167d4 <dcngettext@plt+0x5328>
   16c58:	mov	sp, fp
   16c5c:	pop	{fp, pc}
   16c60:	push	{fp, lr}
   16c64:	mov	fp, sp
   16c68:	sub	sp, sp, #56	; 0x38
   16c6c:	add	ip, fp, #8
   16c70:	str	ip, [sp, #12]
   16c74:	ldr	lr, [fp, #8]
   16c78:	cmp	lr, #0
   16c7c:	str	lr, [sp, #16]
   16c80:	beq	16d1c <dcngettext@plt+0x5870>
   16c84:	ldr	lr, [ip, #4]
   16c88:	cmp	lr, #0
   16c8c:	str	lr, [sp, #20]
   16c90:	beq	16d24 <dcngettext@plt+0x5878>
   16c94:	ldr	lr, [ip, #8]
   16c98:	cmp	lr, #0
   16c9c:	str	lr, [sp, #24]
   16ca0:	beq	16d2c <dcngettext@plt+0x5880>
   16ca4:	ldr	lr, [ip, #12]
   16ca8:	cmp	lr, #0
   16cac:	str	lr, [sp, #28]
   16cb0:	beq	16d34 <dcngettext@plt+0x5888>
   16cb4:	ldr	lr, [ip, #16]
   16cb8:	cmp	lr, #0
   16cbc:	str	lr, [sp, #32]
   16cc0:	beq	16d3c <dcngettext@plt+0x5890>
   16cc4:	ldr	lr, [ip, #20]
   16cc8:	cmp	lr, #0
   16ccc:	str	lr, [sp, #36]	; 0x24
   16cd0:	beq	16d44 <dcngettext@plt+0x5898>
   16cd4:	ldr	lr, [ip, #24]
   16cd8:	cmp	lr, #0
   16cdc:	str	lr, [sp, #40]	; 0x28
   16ce0:	beq	16d4c <dcngettext@plt+0x58a0>
   16ce4:	ldr	lr, [ip, #28]
   16ce8:	cmp	lr, #0
   16cec:	str	lr, [sp, #44]	; 0x2c
   16cf0:	beq	16d54 <dcngettext@plt+0x58a8>
   16cf4:	ldr	lr, [ip, #32]
   16cf8:	cmp	lr, #0
   16cfc:	str	lr, [sp, #48]	; 0x30
   16d00:	beq	16d5c <dcngettext@plt+0x58b0>
   16d04:	ldr	lr, [ip, #36]	; 0x24
   16d08:	mov	ip, #10
   16d0c:	cmp	lr, #0
   16d10:	str	lr, [sp, #52]	; 0x34
   16d14:	movweq	ip, #9
   16d18:	b	16d60 <dcngettext@plt+0x58b4>
   16d1c:	mov	ip, #0
   16d20:	b	16d60 <dcngettext@plt+0x58b4>
   16d24:	mov	ip, #1
   16d28:	b	16d60 <dcngettext@plt+0x58b4>
   16d2c:	mov	ip, #2
   16d30:	b	16d60 <dcngettext@plt+0x58b4>
   16d34:	mov	ip, #3
   16d38:	b	16d60 <dcngettext@plt+0x58b4>
   16d3c:	mov	ip, #4
   16d40:	b	16d60 <dcngettext@plt+0x58b4>
   16d44:	mov	ip, #5
   16d48:	b	16d60 <dcngettext@plt+0x58b4>
   16d4c:	mov	ip, #6
   16d50:	b	16d60 <dcngettext@plt+0x58b4>
   16d54:	mov	ip, #7
   16d58:	b	16d60 <dcngettext@plt+0x58b4>
   16d5c:	mov	ip, #8
   16d60:	add	lr, sp, #16
   16d64:	str	ip, [sp, #4]
   16d68:	str	lr, [sp]
   16d6c:	bl	167d4 <dcngettext@plt+0x5328>
   16d70:	mov	sp, fp
   16d74:	pop	{fp, pc}
   16d78:	push	{fp, lr}
   16d7c:	mov	fp, sp
   16d80:	movw	r0, #37252	; 0x9184
   16d84:	movt	r0, #2
   16d88:	ldr	r1, [r0]
   16d8c:	movw	r0, #31151	; 0x79af
   16d90:	movt	r0, #1
   16d94:	bl	11194 <fputs_unlocked@plt>
   16d98:	movw	r1, #32938	; 0x80aa
   16d9c:	mov	r0, #0
   16da0:	mov	r2, #5
   16da4:	movt	r1, #1
   16da8:	bl	11224 <dcgettext@plt>
   16dac:	movw	r2, #32958	; 0x80be
   16db0:	mov	r1, r0
   16db4:	mov	r0, #1
   16db8:	movt	r2, #1
   16dbc:	bl	113a4 <__printf_chk@plt>
   16dc0:	movw	r1, #32980	; 0x80d4
   16dc4:	mov	r0, #0
   16dc8:	mov	r2, #5
   16dcc:	movt	r1, #1
   16dd0:	bl	11224 <dcgettext@plt>
   16dd4:	movw	r2, #31304	; 0x7a48
   16dd8:	movw	r3, #31498	; 0x7b0a
   16ddc:	mov	r1, r0
   16de0:	mov	r0, #1
   16de4:	movt	r2, #1
   16de8:	movt	r3, #1
   16dec:	bl	113a4 <__printf_chk@plt>
   16df0:	movw	r1, #33000	; 0x80e8
   16df4:	mov	r0, #0
   16df8:	mov	r2, #5
   16dfc:	movt	r1, #1
   16e00:	bl	11224 <dcgettext@plt>
   16e04:	movw	r2, #33039	; 0x810f
   16e08:	mov	r1, r0
   16e0c:	mov	r0, #1
   16e10:	movt	r2, #1
   16e14:	pop	{fp, lr}
   16e18:	b	113a4 <__printf_chk@plt>
   16e1c:	push	{r4, r5, r6, sl, fp, lr}
   16e20:	add	fp, sp, #16
   16e24:	mov	r4, r2
   16e28:	mov	r5, r1
   16e2c:	mov	r6, r0
   16e30:	bl	17654 <dcngettext@plt+0x61a8>
   16e34:	cmp	r0, #0
   16e38:	popne	{r4, r5, r6, sl, fp, pc}
   16e3c:	cmp	r6, #0
   16e40:	beq	16e54 <dcngettext@plt+0x59a8>
   16e44:	cmp	r5, #0
   16e48:	cmpne	r4, #0
   16e4c:	bne	16e54 <dcngettext@plt+0x59a8>
   16e50:	pop	{r4, r5, r6, sl, fp, pc}
   16e54:	bl	173f4 <dcngettext@plt+0x5f48>
   16e58:	push	{r4, r5, r6, sl, fp, lr}
   16e5c:	add	fp, sp, #16
   16e60:	mov	r4, r2
   16e64:	mov	r5, r1
   16e68:	mov	r6, r0
   16e6c:	bl	17654 <dcngettext@plt+0x61a8>
   16e70:	cmp	r0, #0
   16e74:	popne	{r4, r5, r6, sl, fp, pc}
   16e78:	cmp	r6, #0
   16e7c:	beq	16e90 <dcngettext@plt+0x59e4>
   16e80:	cmp	r5, #0
   16e84:	cmpne	r4, #0
   16e88:	bne	16e90 <dcngettext@plt+0x59e4>
   16e8c:	pop	{r4, r5, r6, sl, fp, pc}
   16e90:	bl	173f4 <dcngettext@plt+0x5f48>
   16e94:	push	{fp, lr}
   16e98:	mov	fp, sp
   16e9c:	bl	1748c <dcngettext@plt+0x5fe0>
   16ea0:	cmp	r0, #0
   16ea4:	popne	{fp, pc}
   16ea8:	bl	173f4 <dcngettext@plt+0x5f48>
   16eac:	push	{fp, lr}
   16eb0:	mov	fp, sp
   16eb4:	bl	1748c <dcngettext@plt+0x5fe0>
   16eb8:	cmp	r0, #0
   16ebc:	popne	{fp, pc}
   16ec0:	bl	173f4 <dcngettext@plt+0x5f48>
   16ec4:	push	{fp, lr}
   16ec8:	mov	fp, sp
   16ecc:	bl	1748c <dcngettext@plt+0x5fe0>
   16ed0:	cmp	r0, #0
   16ed4:	popne	{fp, pc}
   16ed8:	bl	173f4 <dcngettext@plt+0x5f48>
   16edc:	push	{r4, r5, fp, lr}
   16ee0:	add	fp, sp, #8
   16ee4:	mov	r4, r1
   16ee8:	mov	r5, r0
   16eec:	bl	174bc <dcngettext@plt+0x6010>
   16ef0:	cmp	r0, #0
   16ef4:	popne	{r4, r5, fp, pc}
   16ef8:	cmp	r5, #0
   16efc:	beq	16f0c <dcngettext@plt+0x5a60>
   16f00:	cmp	r4, #0
   16f04:	bne	16f0c <dcngettext@plt+0x5a60>
   16f08:	pop	{r4, r5, fp, pc}
   16f0c:	bl	173f4 <dcngettext@plt+0x5f48>
   16f10:	push	{fp, lr}
   16f14:	mov	fp, sp
   16f18:	cmp	r1, #0
   16f1c:	orreq	r1, r1, #1
   16f20:	bl	174bc <dcngettext@plt+0x6010>
   16f24:	cmp	r0, #0
   16f28:	popne	{fp, pc}
   16f2c:	bl	173f4 <dcngettext@plt+0x5f48>
   16f30:	push	{fp, lr}
   16f34:	mov	fp, sp
   16f38:	clz	r3, r2
   16f3c:	lsr	ip, r3, #5
   16f40:	clz	r3, r1
   16f44:	lsr	r3, r3, #5
   16f48:	orrs	r3, r3, ip
   16f4c:	movwne	r1, #1
   16f50:	movwne	r2, #1
   16f54:	bl	17654 <dcngettext@plt+0x61a8>
   16f58:	cmp	r0, #0
   16f5c:	popne	{fp, pc}
   16f60:	bl	173f4 <dcngettext@plt+0x5f48>
   16f64:	push	{fp, lr}
   16f68:	mov	fp, sp
   16f6c:	mov	r2, r1
   16f70:	mov	r1, r0
   16f74:	mov	r0, #0
   16f78:	bl	17654 <dcngettext@plt+0x61a8>
   16f7c:	cmp	r0, #0
   16f80:	popne	{fp, pc}
   16f84:	bl	173f4 <dcngettext@plt+0x5f48>
   16f88:	push	{fp, lr}
   16f8c:	mov	fp, sp
   16f90:	mov	r2, r1
   16f94:	mov	r1, r0
   16f98:	clz	r0, r2
   16f9c:	clz	r3, r1
   16fa0:	lsr	r0, r0, #5
   16fa4:	lsr	r3, r3, #5
   16fa8:	orrs	r0, r3, r0
   16fac:	movwne	r1, #1
   16fb0:	movwne	r2, #1
   16fb4:	mov	r0, #0
   16fb8:	bl	17654 <dcngettext@plt+0x61a8>
   16fbc:	cmp	r0, #0
   16fc0:	popne	{fp, pc}
   16fc4:	bl	173f4 <dcngettext@plt+0x5f48>
   16fc8:	push	{r4, r5, r6, sl, fp, lr}
   16fcc:	add	fp, sp, #16
   16fd0:	ldr	r5, [r1]
   16fd4:	mov	r4, r1
   16fd8:	mov	r6, r0
   16fdc:	cmp	r0, #0
   16fe0:	beq	16ff8 <dcngettext@plt+0x5b4c>
   16fe4:	mov	r0, #1
   16fe8:	add	r0, r0, r5, lsr #1
   16fec:	adds	r5, r5, r0
   16ff0:	bcc	17000 <dcngettext@plt+0x5b54>
   16ff4:	b	1703c <dcngettext@plt+0x5b90>
   16ff8:	cmp	r5, #0
   16ffc:	movweq	r5, #64	; 0x40
   17000:	mov	r0, r6
   17004:	mov	r1, r5
   17008:	mov	r2, #1
   1700c:	bl	17654 <dcngettext@plt+0x61a8>
   17010:	cmp	r5, #0
   17014:	mov	r1, r5
   17018:	movwne	r1, #1
   1701c:	cmp	r0, #0
   17020:	bne	17034 <dcngettext@plt+0x5b88>
   17024:	clz	r2, r6
   17028:	lsr	r2, r2, #5
   1702c:	orrs	r1, r2, r1
   17030:	bne	1703c <dcngettext@plt+0x5b90>
   17034:	str	r5, [r4]
   17038:	pop	{r4, r5, r6, sl, fp, pc}
   1703c:	bl	173f4 <dcngettext@plt+0x5f48>
   17040:	push	{r4, r5, r6, r7, fp, lr}
   17044:	add	fp, sp, #16
   17048:	ldr	r5, [r1]
   1704c:	mov	r6, r2
   17050:	mov	r4, r1
   17054:	mov	r7, r0
   17058:	cmp	r0, #0
   1705c:	beq	17074 <dcngettext@plt+0x5bc8>
   17060:	mov	r0, #1
   17064:	add	r0, r0, r5, lsr #1
   17068:	adds	r5, r5, r0
   1706c:	bcc	1708c <dcngettext@plt+0x5be0>
   17070:	b	170c0 <dcngettext@plt+0x5c14>
   17074:	cmp	r5, #0
   17078:	bne	1708c <dcngettext@plt+0x5be0>
   1707c:	mov	r0, #64	; 0x40
   17080:	cmp	r6, #64	; 0x40
   17084:	udiv	r5, r0, r6
   17088:	addhi	r5, r5, #1
   1708c:	mov	r0, r7
   17090:	mov	r1, r5
   17094:	mov	r2, r6
   17098:	bl	17654 <dcngettext@plt+0x61a8>
   1709c:	cmp	r0, #0
   170a0:	bne	170b8 <dcngettext@plt+0x5c0c>
   170a4:	cmp	r7, #0
   170a8:	beq	170c0 <dcngettext@plt+0x5c14>
   170ac:	cmp	r6, #0
   170b0:	cmpne	r5, #0
   170b4:	bne	170c0 <dcngettext@plt+0x5c14>
   170b8:	str	r5, [r4]
   170bc:	pop	{r4, r5, r6, r7, fp, pc}
   170c0:	bl	173f4 <dcngettext@plt+0x5f48>
   170c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   170c8:	add	fp, sp, #24
   170cc:	mov	r8, r1
   170d0:	ldr	r1, [r1]
   170d4:	mov	r5, r0
   170d8:	add	r0, r1, r1, asr #1
   170dc:	cmp	r0, r1
   170e0:	mvnvs	r0, #-2147483648	; 0x80000000
   170e4:	cmp	r0, r3
   170e8:	mov	r7, r0
   170ec:	movgt	r7, r3
   170f0:	cmn	r3, #1
   170f4:	movle	r7, r0
   170f8:	ldr	r0, [fp, #8]
   170fc:	cmn	r0, #1
   17100:	ble	17128 <dcngettext@plt+0x5c7c>
   17104:	cmp	r0, #0
   17108:	beq	1717c <dcngettext@plt+0x5cd0>
   1710c:	cmn	r7, #1
   17110:	ble	17150 <dcngettext@plt+0x5ca4>
   17114:	mvn	r4, #-2147483648	; 0x80000000
   17118:	udiv	r6, r4, r0
   1711c:	cmp	r6, r7
   17120:	bge	1717c <dcngettext@plt+0x5cd0>
   17124:	b	1718c <dcngettext@plt+0x5ce0>
   17128:	cmn	r7, #1
   1712c:	ble	1716c <dcngettext@plt+0x5cc0>
   17130:	cmn	r0, #1
   17134:	beq	1717c <dcngettext@plt+0x5cd0>
   17138:	mov	r6, #-2147483648	; 0x80000000
   1713c:	mvn	r4, #-2147483648	; 0x80000000
   17140:	sdiv	r6, r6, r0
   17144:	cmp	r6, r7
   17148:	bge	1717c <dcngettext@plt+0x5cd0>
   1714c:	b	1718c <dcngettext@plt+0x5ce0>
   17150:	beq	1717c <dcngettext@plt+0x5cd0>
   17154:	mov	r6, #-2147483648	; 0x80000000
   17158:	mvn	r4, #-2147483648	; 0x80000000
   1715c:	sdiv	r6, r6, r7
   17160:	cmp	r6, r0
   17164:	bge	1717c <dcngettext@plt+0x5cd0>
   17168:	b	1718c <dcngettext@plt+0x5ce0>
   1716c:	mvn	r4, #-2147483648	; 0x80000000
   17170:	sdiv	r6, r4, r0
   17174:	cmp	r7, r6
   17178:	blt	1718c <dcngettext@plt+0x5ce0>
   1717c:	mul	r6, r7, r0
   17180:	mov	r4, #64	; 0x40
   17184:	cmp	r6, #63	; 0x3f
   17188:	bgt	17194 <dcngettext@plt+0x5ce8>
   1718c:	sdiv	r7, r4, r0
   17190:	mul	r6, r7, r0
   17194:	cmp	r5, #0
   17198:	moveq	r4, #0
   1719c:	streq	r4, [r8]
   171a0:	sub	r4, r7, r1
   171a4:	cmp	r4, r2
   171a8:	bge	17254 <dcngettext@plt+0x5da8>
   171ac:	add	r7, r1, r2
   171b0:	mov	r6, #0
   171b4:	mov	r2, #0
   171b8:	cmp	r7, r3
   171bc:	movwgt	r6, #1
   171c0:	cmn	r3, #1
   171c4:	movwgt	r2, #1
   171c8:	cmp	r7, r1
   171cc:	bvs	17288 <dcngettext@plt+0x5ddc>
   171d0:	ands	r1, r2, r6
   171d4:	bne	17288 <dcngettext@plt+0x5ddc>
   171d8:	cmn	r0, #1
   171dc:	ble	17204 <dcngettext@plt+0x5d58>
   171e0:	cmp	r0, #0
   171e4:	beq	17250 <dcngettext@plt+0x5da4>
   171e8:	cmn	r7, #1
   171ec:	ble	17228 <dcngettext@plt+0x5d7c>
   171f0:	mvn	r1, #-2147483648	; 0x80000000
   171f4:	udiv	r1, r1, r0
   171f8:	cmp	r1, r7
   171fc:	bge	17250 <dcngettext@plt+0x5da4>
   17200:	b	17288 <dcngettext@plt+0x5ddc>
   17204:	cmn	r7, #1
   17208:	ble	17240 <dcngettext@plt+0x5d94>
   1720c:	cmn	r0, #1
   17210:	beq	17250 <dcngettext@plt+0x5da4>
   17214:	mov	r1, #-2147483648	; 0x80000000
   17218:	sdiv	r1, r1, r0
   1721c:	cmp	r1, r7
   17220:	bge	17250 <dcngettext@plt+0x5da4>
   17224:	b	17288 <dcngettext@plt+0x5ddc>
   17228:	beq	17250 <dcngettext@plt+0x5da4>
   1722c:	mov	r1, #-2147483648	; 0x80000000
   17230:	sdiv	r1, r1, r7
   17234:	cmp	r1, r0
   17238:	bge	17250 <dcngettext@plt+0x5da4>
   1723c:	b	17288 <dcngettext@plt+0x5ddc>
   17240:	mvn	r1, #-2147483648	; 0x80000000
   17244:	sdiv	r1, r1, r0
   17248:	cmp	r7, r1
   1724c:	blt	17288 <dcngettext@plt+0x5ddc>
   17250:	mul	r6, r7, r0
   17254:	mov	r0, r5
   17258:	mov	r1, r6
   1725c:	bl	174bc <dcngettext@plt+0x6010>
   17260:	cmp	r6, #0
   17264:	movwne	r6, #1
   17268:	cmp	r0, #0
   1726c:	bne	17280 <dcngettext@plt+0x5dd4>
   17270:	clz	r1, r5
   17274:	lsr	r1, r1, #5
   17278:	orrs	r1, r1, r6
   1727c:	bne	17288 <dcngettext@plt+0x5ddc>
   17280:	str	r7, [r8]
   17284:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17288:	bl	173f4 <dcngettext@plt+0x5f48>
   1728c:	push	{fp, lr}
   17290:	mov	fp, sp
   17294:	mov	r1, #1
   17298:	bl	17438 <dcngettext@plt+0x5f8c>
   1729c:	cmp	r0, #0
   172a0:	popne	{fp, pc}
   172a4:	bl	173f4 <dcngettext@plt+0x5f48>
   172a8:	push	{fp, lr}
   172ac:	mov	fp, sp
   172b0:	bl	17438 <dcngettext@plt+0x5f8c>
   172b4:	cmp	r0, #0
   172b8:	popne	{fp, pc}
   172bc:	bl	173f4 <dcngettext@plt+0x5f48>
   172c0:	push	{fp, lr}
   172c4:	mov	fp, sp
   172c8:	mov	r1, #1
   172cc:	bl	17438 <dcngettext@plt+0x5f8c>
   172d0:	cmp	r0, #0
   172d4:	popne	{fp, pc}
   172d8:	bl	173f4 <dcngettext@plt+0x5f48>
   172dc:	push	{fp, lr}
   172e0:	mov	fp, sp
   172e4:	bl	17438 <dcngettext@plt+0x5f8c>
   172e8:	cmp	r0, #0
   172ec:	popne	{fp, pc}
   172f0:	bl	173f4 <dcngettext@plt+0x5f48>
   172f4:	push	{r4, r5, r6, sl, fp, lr}
   172f8:	add	fp, sp, #16
   172fc:	mov	r5, r0
   17300:	mov	r0, r1
   17304:	mov	r4, r1
   17308:	bl	1748c <dcngettext@plt+0x5fe0>
   1730c:	cmp	r0, #0
   17310:	beq	1732c <dcngettext@plt+0x5e80>
   17314:	mov	r1, r5
   17318:	mov	r2, r4
   1731c:	mov	r6, r0
   17320:	bl	111f4 <memcpy@plt>
   17324:	mov	r0, r6
   17328:	pop	{r4, r5, r6, sl, fp, pc}
   1732c:	bl	173f4 <dcngettext@plt+0x5f48>
   17330:	push	{r4, r5, r6, sl, fp, lr}
   17334:	add	fp, sp, #16
   17338:	mov	r5, r0
   1733c:	mov	r0, r1
   17340:	mov	r4, r1
   17344:	bl	1748c <dcngettext@plt+0x5fe0>
   17348:	cmp	r0, #0
   1734c:	beq	17368 <dcngettext@plt+0x5ebc>
   17350:	mov	r1, r5
   17354:	mov	r2, r4
   17358:	mov	r6, r0
   1735c:	bl	111f4 <memcpy@plt>
   17360:	mov	r0, r6
   17364:	pop	{r4, r5, r6, sl, fp, pc}
   17368:	bl	173f4 <dcngettext@plt+0x5f48>
   1736c:	push	{r4, r5, r6, sl, fp, lr}
   17370:	add	fp, sp, #16
   17374:	mov	r5, r0
   17378:	add	r0, r1, #1
   1737c:	mov	r4, r1
   17380:	bl	1748c <dcngettext@plt+0x5fe0>
   17384:	cmp	r0, #0
   17388:	beq	173b0 <dcngettext@plt+0x5f04>
   1738c:	mov	r6, r0
   17390:	mov	r0, #0
   17394:	mov	r1, r5
   17398:	mov	r2, r4
   1739c:	strb	r0, [r6, r4]
   173a0:	mov	r0, r6
   173a4:	bl	111f4 <memcpy@plt>
   173a8:	mov	r0, r6
   173ac:	pop	{r4, r5, r6, sl, fp, pc}
   173b0:	bl	173f4 <dcngettext@plt+0x5f48>
   173b4:	push	{r4, r5, r6, sl, fp, lr}
   173b8:	add	fp, sp, #16
   173bc:	mov	r4, r0
   173c0:	bl	1135c <strlen@plt>
   173c4:	add	r5, r0, #1
   173c8:	mov	r0, r5
   173cc:	bl	1748c <dcngettext@plt+0x5fe0>
   173d0:	cmp	r0, #0
   173d4:	beq	173f0 <dcngettext@plt+0x5f44>
   173d8:	mov	r1, r4
   173dc:	mov	r2, r5
   173e0:	mov	r6, r0
   173e4:	bl	111f4 <memcpy@plt>
   173e8:	mov	r0, r6
   173ec:	pop	{r4, r5, r6, sl, fp, pc}
   173f0:	bl	173f4 <dcngettext@plt+0x5f48>
   173f4:	push	{fp, lr}
   173f8:	mov	fp, sp
   173fc:	movw	r0, #37164	; 0x912c
   17400:	movw	r1, #33115	; 0x815b
   17404:	mov	r2, #5
   17408:	movt	r0, #2
   1740c:	movt	r1, #1
   17410:	ldr	r4, [r0]
   17414:	mov	r0, #0
   17418:	bl	11224 <dcgettext@plt>
   1741c:	movw	r2, #31977	; 0x7ce9
   17420:	mov	r3, r0
   17424:	mov	r0, r4
   17428:	mov	r1, #0
   1742c:	movt	r2, #1
   17430:	bl	112b4 <error@plt>
   17434:	bl	11494 <abort@plt>
   17438:	clz	r2, r1
   1743c:	clz	r3, r0
   17440:	lsr	r2, r2, #5
   17444:	lsr	r3, r3, #5
   17448:	orrs	r2, r3, r2
   1744c:	movwne	r1, #1
   17450:	movwne	r0, #1
   17454:	cmp	r1, #0
   17458:	beq	17488 <dcngettext@plt+0x5fdc>
   1745c:	mvn	r2, #-2147483648	; 0x80000000
   17460:	udiv	r2, r2, r1
   17464:	cmp	r2, r0
   17468:	bcs	17488 <dcngettext@plt+0x5fdc>
   1746c:	push	{fp, lr}
   17470:	mov	fp, sp
   17474:	bl	11374 <__errno_location@plt>
   17478:	mov	r1, #12
   1747c:	str	r1, [r0]
   17480:	mov	r0, #0
   17484:	pop	{fp, pc}
   17488:	b	11188 <calloc@plt>
   1748c:	cmp	r0, #0
   17490:	movweq	r0, #1
   17494:	cmn	r0, #1
   17498:	ble	174a0 <dcngettext@plt+0x5ff4>
   1749c:	b	112cc <malloc@plt>
   174a0:	push	{fp, lr}
   174a4:	mov	fp, sp
   174a8:	bl	11374 <__errno_location@plt>
   174ac:	mov	r1, #12
   174b0:	str	r1, [r0]
   174b4:	mov	r0, #0
   174b8:	pop	{fp, pc}
   174bc:	push	{fp, lr}
   174c0:	mov	fp, sp
   174c4:	cmp	r0, #0
   174c8:	beq	174e4 <dcngettext@plt+0x6038>
   174cc:	cmp	r1, #0
   174d0:	beq	174f0 <dcngettext@plt+0x6044>
   174d4:	cmn	r1, #1
   174d8:	ble	174fc <dcngettext@plt+0x6050>
   174dc:	pop	{fp, lr}
   174e0:	b	1123c <realloc@plt>
   174e4:	mov	r0, r1
   174e8:	pop	{fp, lr}
   174ec:	b	1748c <dcngettext@plt+0x5fe0>
   174f0:	bl	17594 <dcngettext@plt+0x60e8>
   174f4:	mov	r0, #0
   174f8:	pop	{fp, pc}
   174fc:	bl	11374 <__errno_location@plt>
   17500:	mov	r1, #12
   17504:	str	r1, [r0]
   17508:	mov	r0, #0
   1750c:	pop	{fp, pc}
   17510:	push	{r4, r5, r6, sl, fp, lr}
   17514:	add	fp, sp, #16
   17518:	mov	r4, r0
   1751c:	bl	1129c <__fpending@plt>
   17520:	ldr	r6, [r4]
   17524:	mov	r5, r0
   17528:	mov	r0, r4
   1752c:	bl	11f48 <dcngettext@plt+0xa9c>
   17530:	tst	r6, #32
   17534:	bne	1756c <dcngettext@plt+0x60c0>
   17538:	cmp	r0, #0
   1753c:	mov	r4, r0
   17540:	mvnne	r4, #0
   17544:	cmp	r5, #0
   17548:	bne	17578 <dcngettext@plt+0x60cc>
   1754c:	cmp	r0, #0
   17550:	beq	17578 <dcngettext@plt+0x60cc>
   17554:	bl	11374 <__errno_location@plt>
   17558:	ldr	r0, [r0]
   1755c:	subs	r4, r0, #9
   17560:	mvnne	r4, #0
   17564:	mov	r0, r4
   17568:	pop	{r4, r5, r6, sl, fp, pc}
   1756c:	mvn	r4, #0
   17570:	cmp	r0, #0
   17574:	beq	17580 <dcngettext@plt+0x60d4>
   17578:	mov	r0, r4
   1757c:	pop	{r4, r5, r6, sl, fp, pc}
   17580:	bl	11374 <__errno_location@plt>
   17584:	mov	r1, #0
   17588:	str	r1, [r0]
   1758c:	mov	r0, r4
   17590:	pop	{r4, r5, r6, sl, fp, pc}
   17594:	push	{r4, r5, r6, sl, fp, lr}
   17598:	add	fp, sp, #16
   1759c:	mov	r4, r0
   175a0:	bl	11374 <__errno_location@plt>
   175a4:	ldr	r6, [r0]
   175a8:	mov	r5, r0
   175ac:	mov	r0, r4
   175b0:	bl	111dc <free@plt>
   175b4:	str	r6, [r5]
   175b8:	pop	{r4, r5, r6, sl, fp, pc}
   175bc:	push	{fp, lr}
   175c0:	mov	fp, sp
   175c4:	mov	r0, #14
   175c8:	bl	11428 <nl_langinfo@plt>
   175cc:	movw	r1, #31152	; 0x79b0
   175d0:	cmp	r0, #0
   175d4:	movt	r1, #1
   175d8:	movne	r1, r0
   175dc:	movw	r0, #33132	; 0x816c
   175e0:	ldrb	r2, [r1]
   175e4:	movt	r0, #1
   175e8:	cmp	r2, #0
   175ec:	movne	r0, r1
   175f0:	pop	{fp, pc}
   175f4:	push	{r4, r5, r6, r7, fp, lr}
   175f8:	add	fp, sp, #16
   175fc:	sub	sp, sp, #8
   17600:	add	r5, sp, #4
   17604:	cmp	r0, #0
   17608:	mov	r7, r2
   1760c:	mov	r4, r1
   17610:	movne	r5, r0
   17614:	mov	r0, r5
   17618:	bl	112a8 <mbrtowc@plt>
   1761c:	mov	r6, r0
   17620:	cmp	r7, #0
   17624:	beq	17648 <dcngettext@plt+0x619c>
   17628:	cmn	r6, #2
   1762c:	bcc	17648 <dcngettext@plt+0x619c>
   17630:	mov	r0, #0
   17634:	bl	17690 <dcngettext@plt+0x61e4>
   17638:	cmp	r0, #0
   1763c:	ldrbeq	r0, [r4]
   17640:	moveq	r6, #1
   17644:	streq	r0, [r5]
   17648:	mov	r0, r6
   1764c:	sub	sp, fp, #16
   17650:	pop	{r4, r5, r6, r7, fp, pc}
   17654:	cmp	r2, #0
   17658:	beq	17688 <dcngettext@plt+0x61dc>
   1765c:	mvn	r3, #0
   17660:	udiv	r3, r3, r2
   17664:	cmp	r3, r1
   17668:	bcs	17688 <dcngettext@plt+0x61dc>
   1766c:	push	{fp, lr}
   17670:	mov	fp, sp
   17674:	bl	11374 <__errno_location@plt>
   17678:	mov	r1, #12
   1767c:	str	r1, [r0]
   17680:	mov	r0, #0
   17684:	pop	{fp, pc}
   17688:	mul	r1, r2, r1
   1768c:	b	174bc <dcngettext@plt+0x6010>
   17690:	push	{r4, sl, fp, lr}
   17694:	add	fp, sp, #8
   17698:	sub	sp, sp, #264	; 0x108
   1769c:	add	r1, sp, #7
   176a0:	movw	r2, #257	; 0x101
   176a4:	bl	176f4 <dcngettext@plt+0x6248>
   176a8:	mov	r4, #0
   176ac:	cmp	r0, #0
   176b0:	bne	176e8 <dcngettext@plt+0x623c>
   176b4:	movw	r1, #31959	; 0x7cd7
   176b8:	add	r0, sp, #7
   176bc:	movt	r1, #1
   176c0:	bl	111ac <strcmp@plt>
   176c4:	cmp	r0, #0
   176c8:	beq	176e8 <dcngettext@plt+0x623c>
   176cc:	movw	r1, #33138	; 0x8172
   176d0:	add	r0, sp, #7
   176d4:	movt	r1, #1
   176d8:	bl	111ac <strcmp@plt>
   176dc:	mov	r4, r0
   176e0:	cmp	r0, #0
   176e4:	movwne	r4, #1
   176e8:	mov	r0, r4
   176ec:	sub	sp, fp, #8
   176f0:	pop	{r4, sl, fp, pc}
   176f4:	push	{r4, r5, r6, r7, fp, lr}
   176f8:	add	fp, sp, #16
   176fc:	mov	r4, r1
   17700:	mov	r1, #0
   17704:	mov	r6, r2
   17708:	bl	11410 <setlocale@plt>
   1770c:	cmp	r0, #0
   17710:	beq	17740 <dcngettext@plt+0x6294>
   17714:	mov	r7, r0
   17718:	bl	1135c <strlen@plt>
   1771c:	cmp	r0, r6
   17720:	bcs	17760 <dcngettext@plt+0x62b4>
   17724:	add	r2, r0, #1
   17728:	mov	r0, r4
   1772c:	mov	r1, r7
   17730:	bl	111f4 <memcpy@plt>
   17734:	mov	r5, #0
   17738:	mov	r0, r5
   1773c:	pop	{r4, r5, r6, r7, fp, pc}
   17740:	cmp	r6, #0
   17744:	mov	r5, #22
   17748:	movne	r0, #0
   1774c:	strbne	r0, [r4]
   17750:	movne	r0, r5
   17754:	popne	{r4, r5, r6, r7, fp, pc}
   17758:	mov	r0, r5
   1775c:	pop	{r4, r5, r6, r7, fp, pc}
   17760:	mov	r5, #34	; 0x22
   17764:	cmp	r6, #0
   17768:	beq	17788 <dcngettext@plt+0x62dc>
   1776c:	sub	r6, r6, #1
   17770:	mov	r0, r4
   17774:	mov	r1, r7
   17778:	mov	r2, r6
   1777c:	bl	111f4 <memcpy@plt>
   17780:	mov	r0, #0
   17784:	strb	r0, [r4, r6]
   17788:	mov	r0, r5
   1778c:	pop	{r4, r5, r6, r7, fp, pc}
   17790:	mov	r1, #0
   17794:	b	11410 <setlocale@plt>
   17798:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1779c:	mov	r7, r0
   177a0:	ldr	r6, [pc, #72]	; 177f0 <dcngettext@plt+0x6344>
   177a4:	ldr	r5, [pc, #72]	; 177f4 <dcngettext@plt+0x6348>
   177a8:	add	r6, pc, r6
   177ac:	add	r5, pc, r5
   177b0:	sub	r6, r6, r5
   177b4:	mov	r8, r1
   177b8:	mov	r9, r2
   177bc:	bl	11168 <calloc@plt-0x20>
   177c0:	asrs	r6, r6, #2
   177c4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   177c8:	mov	r4, #0
   177cc:	add	r4, r4, #1
   177d0:	ldr	r3, [r5], #4
   177d4:	mov	r2, r9
   177d8:	mov	r1, r8
   177dc:	mov	r0, r7
   177e0:	blx	r3
   177e4:	cmp	r6, r4
   177e8:	bne	177cc <dcngettext@plt+0x6320>
   177ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   177f0:	andeq	r1, r1, ip, asr r7
   177f4:	andeq	r1, r1, r4, asr r7
   177f8:	bx	lr
   177fc:	ldr	r3, [pc, #12]	; 17810 <dcngettext@plt+0x6364>
   17800:	mov	r1, #0
   17804:	add	r3, pc, r3
   17808:	ldr	r2, [r3]
   1780c:	b	11380 <__cxa_atexit@plt>
   17810:	andeq	r1, r1, r8, lsl r9

Disassembly of section .fini:

00017814 <.fini>:
   17814:	push	{r3, lr}
   17818:	pop	{r3, pc}
