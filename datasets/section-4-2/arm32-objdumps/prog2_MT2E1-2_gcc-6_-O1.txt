
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e74 <.init>:
   10e74:	push	{r3, lr}
   10e78:	bl	10fc0 <_start@@Base+0x3c>
   10e7c:	pop	{r3, pc}

Disassembly of section .plt:

00010e80 <calloc@plt-0x14>:
   10e80:	push	{lr}		; (str lr, [sp, #-4]!)
   10e84:	ldr	lr, [pc, #4]	; 10e90 <calloc@plt-0x4>
   10e88:	add	lr, pc, lr
   10e8c:	ldr	pc, [lr, #8]!
   10e90:	andeq	r2, r1, r0, ror r1

00010e94 <calloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #368]!	; 0x170

00010ea0 <raise@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #360]!	; 0x168

00010eac <strcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #352]!	; 0x160

00010eb8 <strtol@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #344]!	; 0x158

00010ec4 <printf@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #336]!	; 0x150

00010ed0 <__isoc99_fscanf@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #328]!	; 0x148

00010edc <fopen@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #320]!	; 0x140

00010ee8 <free@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #312]!	; 0x138

00010ef4 <realloc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #304]!	; 0x130

00010f00 <strcpy@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #296]!	; 0x128

00010f0c <puts@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #288]!	; 0x120

00010f18 <malloc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #280]!	; 0x118

00010f24 <__libc_start_main@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #272]!	; 0x110

00010f30 <__gmon_start__@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #264]!	; 0x108

00010f3c <strlen@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #256]!	; 0x100

00010f48 <setvbuf@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #248]!	; 0xf8

00010f54 <putchar@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #240]!	; 0xf0

00010f60 <fclose@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #232]!	; 0xe8

00010f6c <getline@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #224]!	; 0xe0

00010f78 <abort@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #216]!	; 0xd8

Disassembly of section .text:

00010f84 <_start@@Base>:
   10f84:	mov	fp, #0
   10f88:	mov	lr, #0
   10f8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f90:	mov	r2, sp
   10f94:	push	{r2}		; (str r2, [sp, #-4]!)
   10f98:	push	{r0}		; (str r0, [sp, #-4]!)
   10f9c:	ldr	ip, [pc, #16]	; 10fb4 <_start@@Base+0x30>
   10fa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa4:	ldr	r0, [pc, #12]	; 10fb8 <_start@@Base+0x34>
   10fa8:	ldr	r3, [pc, #12]	; 10fbc <_start@@Base+0x38>
   10fac:	bl	10f24 <__libc_start_main@plt>
   10fb0:	bl	10f78 <abort@plt>
   10fb4:	andeq	r2, r1, r4, ror #23
   10fb8:	andeq	r1, r1, r4, lsl #7
   10fbc:	andeq	r2, r1, r4, lsl #23
   10fc0:	ldr	r3, [pc, #20]	; 10fdc <_start@@Base+0x58>
   10fc4:	ldr	r2, [pc, #20]	; 10fe0 <_start@@Base+0x5c>
   10fc8:	add	r3, pc, r3
   10fcc:	ldr	r2, [r3, r2]
   10fd0:	cmp	r2, #0
   10fd4:	bxeq	lr
   10fd8:	b	10f30 <__gmon_start__@plt>
   10fdc:	andeq	r2, r1, r0, lsr r0
   10fe0:	andeq	r0, r0, ip, asr r0
   10fe4:	ldr	r3, [pc, #28]	; 11008 <_start@@Base+0x84>
   10fe8:	ldr	r0, [pc, #28]	; 1100c <_start@@Base+0x88>
   10fec:	sub	r3, r3, r0
   10ff0:	cmp	r3, #6
   10ff4:	bxls	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <_start@@Base+0x8c>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	andeq	r3, r2, fp, rrx
   1100c:	andeq	r3, r2, r8, rrx
   11010:	andeq	r0, r0, r0
   11014:	ldr	r1, [pc, #36]	; 11040 <_start@@Base+0xbc>
   11018:	ldr	r0, [pc, #36]	; 11044 <_start@@Base+0xc0>
   1101c:	sub	r1, r1, r0
   11020:	asr	r1, r1, #2
   11024:	add	r1, r1, r1, lsr #31
   11028:	asrs	r1, r1, #1
   1102c:	bxeq	lr
   11030:	ldr	r3, [pc, #16]	; 11048 <_start@@Base+0xc4>
   11034:	cmp	r3, #0
   11038:	bxeq	lr
   1103c:	bx	r3
   11040:	andeq	r3, r2, r8, rrx
   11044:	andeq	r3, r2, r8, rrx
   11048:	andeq	r0, r0, r0
   1104c:	push	{r4, lr}
   11050:	ldr	r4, [pc, #24]	; 11070 <_start@@Base+0xec>
   11054:	ldrb	r3, [r4]
   11058:	cmp	r3, #0
   1105c:	popne	{r4, pc}
   11060:	bl	10fe4 <_start@@Base+0x60>
   11064:	mov	r3, #1
   11068:	strb	r3, [r4]
   1106c:	pop	{r4, pc}
   11070:	andeq	r3, r2, ip, rrx
   11074:	ldr	r0, [pc, #40]	; 110a4 <_start@@Base+0x120>
   11078:	ldr	r3, [r0]
   1107c:	cmp	r3, #0
   11080:	bne	11088 <_start@@Base+0x104>
   11084:	b	11014 <_start@@Base+0x90>
   11088:	ldr	r3, [pc, #24]	; 110a8 <_start@@Base+0x124>
   1108c:	cmp	r3, #0
   11090:	beq	11084 <_start@@Base+0x100>
   11094:	push	{r4, lr}
   11098:	blx	r3
   1109c:	pop	{r4, lr}
   110a0:	b	11014 <_start@@Base+0x90>
   110a4:	andeq	r2, r2, r4, lsl pc
   110a8:	andeq	r0, r0, r0

000110ac <proximas_n_chegadas@@Base>:
   110ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110b0:	sub	sp, sp, #12
   110b4:	mov	r8, r0
   110b8:	mov	r7, r1
   110bc:	mov	fp, r2
   110c0:	mov	sl, r3
   110c4:	ldr	r4, [r2]
   110c8:	ldr	r0, [r2, #8]
   110cc:	lsl	r0, r0, #2
   110d0:	bl	10f18 <malloc@plt>
   110d4:	mov	r9, r0
   110d8:	cmp	r4, #0
   110dc:	beq	11108 <proximas_n_chegadas@@Base+0x5c>
   110e0:	sub	r5, r0, #4
   110e4:	mov	r6, #200	; 0xc8
   110e8:	mov	r0, r6
   110ec:	bl	10f18 <malloc@plt>
   110f0:	str	r0, [r5, #4]!
   110f4:	ldr	r1, [r4]
   110f8:	bl	10f00 <strcpy@plt>
   110fc:	ldr	r4, [r4, #4]
   11100:	cmp	r4, #0
   11104:	bne	110e8 <proximas_n_chegadas@@Base+0x3c>
   11108:	ldr	r0, [r8, #8]
   1110c:	bl	11e08 <heap_nova@@Base>
   11110:	str	r0, [sp, #4]
   11114:	ldr	r4, [r8]
   11118:	ldr	r5, [r7]
   1111c:	cmp	r4, #0
   11120:	beq	11170 <proximas_n_chegadas@@Base+0xc4>
   11124:	mov	r7, #10
   11128:	mov	r6, #0
   1112c:	mov	r2, r7
   11130:	mov	r1, r6
   11134:	ldr	r0, [r5]
   11138:	bl	10eb8 <strtol@plt>
   1113c:	ldr	r8, [r9, r0, lsl #2]
   11140:	mov	r2, r7
   11144:	mov	r1, r6
   11148:	ldr	r0, [r4]
   1114c:	bl	10eb8 <strtol@plt>
   11150:	mov	r2, r0
   11154:	mov	r1, r8
   11158:	ldr	r0, [sp, #4]
   1115c:	bl	12044 <heap_insere@@Base>
   11160:	ldr	r4, [r4, #4]
   11164:	ldr	r5, [r5, #4]
   11168:	cmp	r4, #0
   1116c:	bne	1112c <proximas_n_chegadas@@Base+0x80>
   11170:	ldr	r7, [fp, #8]
   11174:	cmp	r7, #0
   11178:	ble	11198 <proximas_n_chegadas@@Base+0xec>
   1117c:	sub	r5, r9, #4
   11180:	mov	r4, #0
   11184:	ldr	r0, [r5, #4]!
   11188:	bl	10ee8 <free@plt>
   1118c:	add	r4, r4, #1
   11190:	cmp	r4, r7
   11194:	bne	11184 <proximas_n_chegadas@@Base+0xd8>
   11198:	mov	r0, r9
   1119c:	bl	10ee8 <free@plt>
   111a0:	cmp	sl, #0
   111a4:	ble	111e0 <proximas_n_chegadas@@Base+0x134>
   111a8:	mov	r4, #0
   111ac:	ldr	r7, [pc, #64]	; 111f4 <proximas_n_chegadas@@Base+0x148>
   111b0:	add	r4, r4, #1
   111b4:	ldr	r0, [sp, #4]
   111b8:	bl	120f8 <heap_remove@@Base>
   111bc:	mov	r5, r0
   111c0:	mov	r2, r0
   111c4:	mov	r1, r4
   111c8:	mov	r0, r7
   111cc:	bl	10ec4 <printf@plt>
   111d0:	mov	r0, r5
   111d4:	bl	10ee8 <free@plt>
   111d8:	cmp	sl, r4
   111dc:	bne	111b0 <proximas_n_chegadas@@Base+0x104>
   111e0:	ldr	r0, [sp, #4]
   111e4:	bl	11e5c <heap_apaga@@Base>
   111e8:	mov	r0, #1
   111ec:	add	sp, sp, #12
   111f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111f4:	strdeq	r2, [r1], -r4

000111f8 <pesquisa_destinos@@Base>:
   111f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111fc:	mov	r7, r0
   11200:	mov	r9, r1
   11204:	mov	r6, r2
   11208:	bl	1224c <lista_nova@@Base>
   1120c:	mov	r8, r0
   11210:	ldr	r4, [r9]
   11214:	cmp	r4, #0
   11218:	moveq	r5, #0
   1121c:	beq	11248 <pesquisa_destinos@@Base+0x50>
   11220:	mov	r5, #0
   11224:	mov	r1, r6
   11228:	ldr	r0, [r4]
   1122c:	bl	10eac <strcmp@plt>
   11230:	cmp	r0, #0
   11234:	beq	11248 <pesquisa_destinos@@Base+0x50>
   11238:	add	r5, r5, #1
   1123c:	ldr	r4, [r4, #4]
   11240:	cmp	r4, #0
   11244:	bne	11224 <pesquisa_destinos@@Base+0x2c>
   11248:	mov	r1, r5
   1124c:	mov	r0, r7
   11250:	bl	1196c <v_sucessores@@Base>
   11254:	mov	r7, r0
   11258:	ldr	r3, [r0]
   1125c:	cmp	r3, #0
   11260:	ble	112b8 <pesquisa_destinos@@Base+0xc0>
   11264:	mov	r6, #0
   11268:	mov	sl, r6
   1126c:	b	112ac <pesquisa_destinos@@Base+0xb4>
   11270:	ldr	r5, [r5, #4]
   11274:	add	r4, r4, #1
   11278:	mov	r1, r6
   1127c:	mov	r0, r7
   11280:	bl	12670 <vetor_elemento@@Base>
   11284:	cmp	r4, r0
   11288:	blt	11270 <pesquisa_destinos@@Base+0x78>
   1128c:	mov	r2, sl
   11290:	ldr	r1, [r5]
   11294:	mov	r0, r8
   11298:	bl	122e8 <lista_insere@@Base>
   1129c:	add	r6, r6, #1
   112a0:	ldr	r3, [r7]
   112a4:	cmp	r3, r6
   112a8:	ble	112b8 <pesquisa_destinos@@Base+0xc0>
   112ac:	ldr	r5, [r9]
   112b0:	mov	r4, #0
   112b4:	b	11278 <pesquisa_destinos@@Base+0x80>
   112b8:	mov	r0, r7
   112bc:	bl	12600 <vetor_apaga@@Base>
   112c0:	mov	r0, r8
   112c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000112c8 <carrega_rotas@@Base>:
   112c8:	push	{r4, r5, r6, lr}
   112cc:	sub	sp, sp, #8
   112d0:	subs	r5, r1, #0
   112d4:	beq	1136c <carrega_rotas@@Base+0xa4>
   112d8:	mov	r6, r0
   112dc:	ldr	r1, [pc, #144]	; 11374 <carrega_rotas@@Base+0xac>
   112e0:	mov	r0, r5
   112e4:	bl	10edc <fopen@plt>
   112e8:	subs	r4, r0, #0
   112ec:	beq	11318 <carrega_rotas@@Base+0x50>
   112f0:	mov	r0, r6
   112f4:	bl	122b8 <lista_tamanho@@Base>
   112f8:	mov	r1, #0
   112fc:	bl	115bc <grafo_novo@@Base>
   11300:	subs	r5, r0, #0
   11304:	ldrne	r6, [pc, #108]	; 11378 <carrega_rotas@@Base+0xb0>
   11308:	bne	1133c <carrega_rotas@@Base+0x74>
   1130c:	ldr	r0, [pc, #104]	; 1137c <carrega_rotas@@Base+0xb4>
   11310:	bl	10f0c <puts@plt>
   11314:	b	11360 <carrega_rotas@@Base+0x98>
   11318:	mov	r1, r5
   1131c:	ldr	r0, [pc, #92]	; 11380 <carrega_rotas@@Base+0xb8>
   11320:	bl	10ec4 <printf@plt>
   11324:	mov	r5, #0
   11328:	b	11360 <carrega_rotas@@Base+0x98>
   1132c:	ldr	r2, [sp]
   11330:	ldr	r1, [sp, #4]
   11334:	mov	r0, r5
   11338:	bl	11820 <grafo_adiciona@@Base>
   1133c:	mov	r3, sp
   11340:	add	r2, sp, #4
   11344:	mov	r1, r6
   11348:	mov	r0, r4
   1134c:	bl	10ed0 <__isoc99_fscanf@plt>
   11350:	cmp	r0, #2
   11354:	beq	1132c <carrega_rotas@@Base+0x64>
   11358:	mov	r0, r4
   1135c:	bl	10f60 <fclose@plt>
   11360:	mov	r0, r5
   11364:	add	sp, sp, #8
   11368:	pop	{r4, r5, r6, pc}
   1136c:	mov	r5, #0
   11370:	b	11360 <carrega_rotas@@Base+0x98>
   11374:	andeq	r2, r1, r0, lsl #24
   11378:	andeq	r2, r1, r4, asr #24
   1137c:	andeq	r2, r1, r8, lsr #24
   11380:	andeq	r2, r1, r4, lsl #24

00011384 <main@@Base>:
   11384:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11388:	sub	sp, sp, #32
   1138c:	mov	r3, #0
   11390:	mov	r2, #2
   11394:	mov	r1, r3
   11398:	ldr	r0, [pc, #456]	; 11568 <main@@Base+0x1e4>
   1139c:	ldr	r0, [r0]
   113a0:	bl	10f48 <setvbuf@plt>
   113a4:	ldr	r1, [pc, #448]	; 1156c <main@@Base+0x1e8>
   113a8:	ldr	r0, [pc, #448]	; 11570 <main@@Base+0x1ec>
   113ac:	bl	10edc <fopen@plt>
   113b0:	mov	r8, r0
   113b4:	bl	1224c <lista_nova@@Base>
   113b8:	mov	r6, r0
   113bc:	mov	r3, #0
   113c0:	str	r3, [sp, #28]
   113c4:	add	r7, sp, #32
   113c8:	str	r3, [r7, #-8]!
   113cc:	mov	r5, r3
   113d0:	b	113f8 <main@@Base+0x74>
   113d4:	ldr	r4, [sp, #28]
   113d8:	mov	r0, r4
   113dc:	bl	10f3c <strlen@plt>
   113e0:	add	r0, r4, r0
   113e4:	strb	r5, [r0, #-1]
   113e8:	mov	r2, r5
   113ec:	ldr	r1, [sp, #28]
   113f0:	mov	r0, r6
   113f4:	bl	122e8 <lista_insere@@Base>
   113f8:	mov	r2, r8
   113fc:	mov	r1, r7
   11400:	add	r0, sp, #28
   11404:	bl	10f6c <getline@plt>
   11408:	cmn	r0, #1
   1140c:	bne	113d4 <main@@Base+0x50>
   11410:	ldr	r0, [sp, #28]
   11414:	bl	10ee8 <free@plt>
   11418:	mov	r0, r8
   1141c:	bl	10f60 <fclose@plt>
   11420:	ldr	r1, [pc, #332]	; 11574 <main@@Base+0x1f0>
   11424:	mov	r0, r6
   11428:	bl	112c8 <carrega_rotas@@Base>
   1142c:	mov	sl, r0
   11430:	ldr	r0, [pc, #320]	; 11578 <main@@Base+0x1f4>
   11434:	bl	10f0c <puts@plt>
   11438:	ldr	r1, [pc, #300]	; 1156c <main@@Base+0x1e8>
   1143c:	ldr	r0, [pc, #312]	; 1157c <main@@Base+0x1f8>
   11440:	bl	10edc <fopen@plt>
   11444:	mov	r5, r0
   11448:	bl	1224c <lista_nova@@Base>
   1144c:	mov	r8, r0
   11450:	bl	1224c <lista_nova@@Base>
   11454:	mov	r7, r0
   11458:	ldr	r9, [pc, #288]	; 11580 <main@@Base+0x1fc>
   1145c:	mov	r4, #0
   11460:	b	11484 <main@@Base+0x100>
   11464:	mov	r2, r4
   11468:	add	r1, sp, #4
   1146c:	mov	r0, r8
   11470:	bl	122e8 <lista_insere@@Base>
   11474:	mov	r2, r4
   11478:	add	r1, sp, #12
   1147c:	mov	r0, r7
   11480:	bl	122e8 <lista_insere@@Base>
   11484:	add	r3, sp, #12
   11488:	add	r2, sp, #4
   1148c:	mov	r1, r9
   11490:	mov	r0, r5
   11494:	bl	10ed0 <__isoc99_fscanf@plt>
   11498:	cmp	r0, #2
   1149c:	beq	11464 <main@@Base+0xe0>
   114a0:	mov	r3, #5
   114a4:	mov	r2, r6
   114a8:	mov	r1, r7
   114ac:	mov	r0, r8
   114b0:	bl	110ac <proximas_n_chegadas@@Base>
   114b4:	cmp	r0, #1
   114b8:	beq	114c4 <main@@Base+0x140>
   114bc:	ldr	r0, [pc, #192]	; 11584 <main@@Base+0x200>
   114c0:	bl	10f0c <puts@plt>
   114c4:	mov	r0, r8
   114c8:	bl	12270 <lista_apaga@@Base>
   114cc:	mov	r0, r7
   114d0:	bl	12270 <lista_apaga@@Base>
   114d4:	mov	r0, r5
   114d8:	bl	10f60 <fclose@plt>
   114dc:	ldr	r0, [pc, #164]	; 11588 <main@@Base+0x204>
   114e0:	bl	10f0c <puts@plt>
   114e4:	ldr	r2, [pc, #160]	; 1158c <main@@Base+0x208>
   114e8:	mov	r1, r6
   114ec:	mov	r0, sl
   114f0:	bl	111f8 <pesquisa_destinos@@Base>
   114f4:	subs	r5, r0, #0
   114f8:	beq	11558 <main@@Base+0x1d4>
   114fc:	mov	r0, r5
   11500:	bl	122b8 <lista_tamanho@@Base>
   11504:	mov	r2, r0
   11508:	ldr	r1, [pc, #124]	; 1158c <main@@Base+0x208>
   1150c:	ldr	r0, [pc, #124]	; 11590 <main@@Base+0x20c>
   11510:	bl	10ec4 <printf@plt>
   11514:	ldr	r4, [r5]
   11518:	cmp	r4, #0
   1151c:	beq	11534 <main@@Base+0x1b0>
   11520:	ldr	r0, [r4]
   11524:	bl	10f0c <puts@plt>
   11528:	ldr	r4, [r4, #4]
   1152c:	cmp	r4, #0
   11530:	bne	11520 <main@@Base+0x19c>
   11534:	mov	r0, r5
   11538:	bl	12270 <lista_apaga@@Base>
   1153c:	mov	r0, sl
   11540:	bl	11610 <grafo_apaga@@Base>
   11544:	mov	r0, r6
   11548:	bl	12270 <lista_apaga@@Base>
   1154c:	mov	r0, #0
   11550:	add	sp, sp, #32
   11554:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11558:	ldr	r1, [pc, #44]	; 1158c <main@@Base+0x208>
   1155c:	ldr	r0, [pc, #48]	; 11594 <main@@Base+0x210>
   11560:	bl	10ec4 <printf@plt>
   11564:	b	1153c <main@@Base+0x1b8>
   11568:	andeq	r3, r2, r8, rrx
   1156c:	andeq	r2, r1, r0, lsl #24
   11570:	andeq	r2, r1, ip, asr #24
   11574:	andeq	r2, r1, ip, asr ip
   11578:	andeq	r2, r1, r8, ror #24
   1157c:	andeq	r2, r1, ip, ror ip
   11580:	andeq	r2, r1, ip, lsl #25
   11584:	muleq	r1, r4, ip
   11588:			; <UNDEFINED> instruction: 0x00012cb0
   1158c:	andeq	r2, r1, r4, asr #25
   11590:	strdeq	r2, [r1], -r8
   11594:	ldrdeq	r2, [r1], -r0

00011598 <cria_no@@Base>:
   11598:	push	{r4, lr}
   1159c:	mov	r4, r0
   115a0:	mov	r0, #8
   115a4:	bl	10f18 <malloc@plt>
   115a8:	cmp	r0, #0
   115ac:	strne	r4, [r0]
   115b0:	movne	r3, #0
   115b4:	strne	r3, [r0, #4]
   115b8:	pop	{r4, pc}

000115bc <grafo_novo@@Base>:
   115bc:	push	{r4, r5, r6, lr}
   115c0:	mov	r5, r0
   115c4:	mov	r6, r1
   115c8:	mov	r0, #12
   115cc:	bl	10f18 <malloc@plt>
   115d0:	subs	r4, r0, #0
   115d4:	beq	115f8 <grafo_novo@@Base+0x3c>
   115d8:	str	r5, [r4, #4]
   115dc:	str	r6, [r4]
   115e0:	mov	r1, #8
   115e4:	mov	r0, r5
   115e8:	bl	10e94 <calloc@plt>
   115ec:	str	r0, [r4, #8]
   115f0:	cmp	r0, #0
   115f4:	beq	11600 <grafo_novo@@Base+0x44>
   115f8:	mov	r0, r4
   115fc:	pop	{r4, r5, r6, pc}
   11600:	mov	r0, r4
   11604:	bl	10ee8 <free@plt>
   11608:	mov	r4, #0
   1160c:	b	115f8 <grafo_novo@@Base+0x3c>

00011610 <grafo_apaga@@Base>:
   11610:	push	{r4, r5, r6, lr}
   11614:	subs	r4, r0, #0
   11618:	popeq	{r4, r5, r6, pc}
   1161c:	ldr	r3, [r4, #8]
   11620:	cmp	r3, #0
   11624:	beq	11640 <grafo_apaga@@Base+0x30>
   11628:	ldr	r3, [r4, #4]
   1162c:	cmp	r3, #0
   11630:	movgt	r6, #0
   11634:	bgt	1167c <grafo_apaga@@Base+0x6c>
   11638:	ldr	r0, [r4, #8]
   1163c:	bl	10ee8 <free@plt>
   11640:	mov	r0, r4
   11644:	bl	10ee8 <free@plt>
   11648:	pop	{r4, r5, r6, pc}
   1164c:	ldr	r2, [r0, #4]
   11650:	str	r2, [r3, #4]
   11654:	bl	10ee8 <free@plt>
   11658:	ldr	r3, [r4, #8]
   1165c:	add	r3, r3, r5
   11660:	ldr	r0, [r3, #4]
   11664:	cmp	r0, #0
   11668:	bne	1164c <grafo_apaga@@Base+0x3c>
   1166c:	add	r6, r6, #1
   11670:	ldr	r3, [r4, #4]
   11674:	cmp	r3, r6
   11678:	ble	11638 <grafo_apaga@@Base+0x28>
   1167c:	lsl	r5, r6, #3
   11680:	ldr	r3, [r4, #8]
   11684:	add	r3, r3, r5
   11688:	ldr	r0, [r3, #4]
   1168c:	cmp	r0, #0
   11690:	bne	1164c <grafo_apaga@@Base+0x3c>
   11694:	b	1166c <grafo_apaga@@Base+0x5c>

00011698 <grafo_remove@@Base>:
   11698:	push	{r4, r5, r6, lr}
   1169c:	subs	r6, r0, #0
   116a0:	popeq	{r4, r5, r6, pc}
   116a4:	ldr	r3, [r6, #8]
   116a8:	add	r3, r3, r1, lsl #3
   116ac:	ldr	ip, [r3, #4]
   116b0:	cmp	ip, #0
   116b4:	popeq	{r4, r5, r6, pc}
   116b8:	mov	r4, r2
   116bc:	mov	r5, r1
   116c0:	ldr	r2, [ip]
   116c4:	cmp	r2, r4
   116c8:	beq	11704 <grafo_remove@@Base+0x6c>
   116cc:	ldr	r3, [ip, #4]
   116d0:	cmp	r3, #0
   116d4:	beq	1172c <grafo_remove@@Base+0x94>
   116d8:	ldr	r2, [r3]
   116dc:	cmp	r4, r2
   116e0:	beq	11718 <grafo_remove@@Base+0x80>
   116e4:	ldr	r0, [r3, #4]
   116e8:	cmp	r0, #0
   116ec:	beq	1172c <grafo_remove@@Base+0x94>
   116f0:	ldr	ip, [r0]
   116f4:	cmp	r4, ip
   116f8:	beq	11720 <grafo_remove@@Base+0x88>
   116fc:	mov	r3, r0
   11700:	b	116e4 <grafo_remove@@Base+0x4c>
   11704:	ldr	r2, [ip, #4]
   11708:	str	r2, [r3, #4]
   1170c:	mov	r0, ip
   11710:	bl	10ee8 <free@plt>
   11714:	b	1172c <grafo_remove@@Base+0x94>
   11718:	mov	r0, r3
   1171c:	mov	r3, ip
   11720:	ldr	r2, [r0, #4]
   11724:	str	r2, [r3, #4]
   11728:	bl	10ee8 <free@plt>
   1172c:	ldr	r3, [r6]
   11730:	cmp	r3, #0
   11734:	popne	{r4, r5, r6, pc}
   11738:	ldr	r3, [r6, #8]
   1173c:	add	r4, r3, r4, lsl #3
   11740:	ldr	r2, [r4, #4]
   11744:	ldr	r3, [r2]
   11748:	cmp	r5, r3
   1174c:	beq	11788 <grafo_remove@@Base+0xf0>
   11750:	ldr	r3, [r2, #4]
   11754:	cmp	r3, #0
   11758:	popeq	{r4, r5, r6, pc}
   1175c:	ldr	r1, [r3]
   11760:	cmp	r5, r1
   11764:	beq	1179c <grafo_remove@@Base+0x104>
   11768:	ldr	r0, [r3, #4]
   1176c:	cmp	r0, #0
   11770:	beq	117b4 <grafo_remove@@Base+0x11c>
   11774:	ldr	r2, [r0]
   11778:	cmp	r5, r2
   1177c:	beq	117a4 <grafo_remove@@Base+0x10c>
   11780:	mov	r3, r0
   11784:	b	11768 <grafo_remove@@Base+0xd0>
   11788:	ldr	r3, [r2, #4]
   1178c:	str	r3, [r4, #4]
   11790:	mov	r0, r2
   11794:	bl	10ee8 <free@plt>
   11798:	pop	{r4, r5, r6, pc}
   1179c:	mov	r0, r3
   117a0:	mov	r3, r2
   117a4:	ldr	r2, [r0, #4]
   117a8:	str	r2, [r3, #4]
   117ac:	bl	10ee8 <free@plt>
   117b0:	pop	{r4, r5, r6, pc}
   117b4:	pop	{r4, r5, r6, pc}

000117b8 <grafo_aresta@@Base>:
   117b8:	cmp	r0, #0
   117bc:	beq	11808 <grafo_aresta@@Base+0x50>
   117c0:	ldr	r3, [r0, #8]
   117c4:	add	r1, r3, r1, lsl #3
   117c8:	ldr	r3, [r1, #4]
   117cc:	cmp	r3, #0
   117d0:	beq	11810 <grafo_aresta@@Base+0x58>
   117d4:	ldr	r1, [r3]
   117d8:	cmp	r2, r1
   117dc:	beq	11818 <grafo_aresta@@Base+0x60>
   117e0:	ldr	r3, [r3, #4]
   117e4:	cmp	r3, #0
   117e8:	beq	11800 <grafo_aresta@@Base+0x48>
   117ec:	ldr	r1, [r3]
   117f0:	cmp	r1, r2
   117f4:	bne	117e0 <grafo_aresta@@Base+0x28>
   117f8:	mov	r0, #1
   117fc:	bx	lr
   11800:	mov	r0, #0
   11804:	bx	lr
   11808:	mov	r0, #0
   1180c:	bx	lr
   11810:	mov	r0, #0
   11814:	bx	lr
   11818:	mov	r0, #1
   1181c:	bx	lr

00011820 <grafo_adiciona@@Base>:
   11820:	push	{r4, r5, r6, lr}
   11824:	subs	r4, r0, #0
   11828:	popeq	{r4, r5, r6, pc}
   1182c:	mov	r6, r2
   11830:	mov	r5, r1
   11834:	mov	r0, r4
   11838:	bl	117b8 <grafo_aresta@@Base>
   1183c:	cmp	r0, #0
   11840:	popne	{r4, r5, r6, pc}
   11844:	mov	r0, r6
   11848:	bl	11598 <cria_no@@Base>
   1184c:	lsl	r3, r5, #3
   11850:	ldr	r2, [r4, #8]
   11854:	add	r2, r2, r3
   11858:	ldr	r2, [r2, #4]
   1185c:	str	r2, [r0, #4]
   11860:	ldr	r2, [r4, #8]
   11864:	add	r3, r2, r3
   11868:	str	r0, [r3, #4]
   1186c:	ldr	r2, [r4, #8]
   11870:	ldr	r3, [r2, r5, lsl #3]
   11874:	add	r3, r3, #1
   11878:	str	r3, [r2, r5, lsl #3]
   1187c:	ldr	r3, [r4]
   11880:	cmp	r3, #0
   11884:	popne	{r4, r5, r6, pc}
   11888:	mov	r0, r5
   1188c:	bl	11598 <cria_no@@Base>
   11890:	lsl	r1, r6, #3
   11894:	ldr	r2, [r4, #8]
   11898:	add	r2, r2, r1
   1189c:	ldr	r3, [r2, #4]
   118a0:	str	r3, [r0, #4]
   118a4:	ldr	r3, [r4, #8]
   118a8:	add	r3, r3, r1
   118ac:	str	r0, [r3, #4]
   118b0:	ldr	r2, [r4, #8]
   118b4:	ldr	r3, [r2, r6, lsl #3]
   118b8:	add	r3, r3, #1
   118bc:	str	r3, [r2, r6, lsl #3]
   118c0:	pop	{r4, r5, r6, pc}

000118c4 <grafo_imprime@@Base>:
   118c4:	ldr	r3, [r0, #4]
   118c8:	cmp	r3, #0
   118cc:	bxle	lr
   118d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118d4:	mov	r7, r0
   118d8:	mov	r6, #0
   118dc:	ldr	r9, [pc, #124]	; 11960 <grafo_imprime@@Base+0x9c>
   118e0:	ldr	sl, [pc, #124]	; 11964 <grafo_imprime@@Base+0xa0>
   118e4:	ldr	r5, [pc, #124]	; 11968 <grafo_imprime@@Base+0xa4>
   118e8:	mov	r8, #10
   118ec:	b	11908 <grafo_imprime@@Base+0x44>
   118f0:	mov	r0, r8
   118f4:	bl	10f54 <putchar@plt>
   118f8:	add	r6, r6, #1
   118fc:	ldr	r3, [r7, #4]
   11900:	cmp	r3, r6
   11904:	ble	1195c <grafo_imprime@@Base+0x98>
   11908:	ldr	r3, [r7, #8]
   1190c:	add	r3, r3, r6, lsl #3
   11910:	ldr	r4, [r3, #4]
   11914:	mov	r1, r6
   11918:	mov	r0, r9
   1191c:	bl	10ec4 <printf@plt>
   11920:	cmp	r4, #0
   11924:	beq	118f0 <grafo_imprime@@Base+0x2c>
   11928:	ldr	r1, [r4]
   1192c:	mov	r0, sl
   11930:	bl	10ec4 <printf@plt>
   11934:	ldr	r4, [r4, #4]
   11938:	cmp	r4, #0
   1193c:	beq	118f0 <grafo_imprime@@Base+0x2c>
   11940:	ldr	r1, [r4]
   11944:	mov	r0, r5
   11948:	bl	10ec4 <printf@plt>
   1194c:	ldr	r4, [r4, #4]
   11950:	cmp	r4, #0
   11954:	bne	11940 <grafo_imprime@@Base+0x7c>
   11958:	b	118f0 <grafo_imprime@@Base+0x2c>
   1195c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11960:	andeq	r2, r1, r0, lsr #26
   11964:	andeq	r2, r1, r8, lsr #26
   11968:	andeq	r2, r1, ip, lsr #26

0001196c <v_sucessores@@Base>:
   1196c:	push	{r4, r5, r6, r7, r8, lr}
   11970:	mov	r5, r0
   11974:	clz	r0, r0
   11978:	lsr	r0, r0, #5
   1197c:	orrs	r3, r0, r1, lsr #31
   11980:	bne	119f4 <v_sucessores@@Base+0x88>
   11984:	ldr	r3, [r5, #4]
   11988:	cmp	r1, r3
   1198c:	movge	r7, #0
   11990:	bge	119f8 <v_sucessores@@Base+0x8c>
   11994:	mov	r6, r1
   11998:	bl	125dc <vetor_novo@@Base>
   1199c:	mov	r7, r0
   119a0:	ldr	r3, [r5, #4]
   119a4:	cmp	r3, #0
   119a8:	ble	119f8 <v_sucessores@@Base+0x8c>
   119ac:	mov	r4, #0
   119b0:	mvn	r8, #0
   119b4:	b	119c8 <v_sucessores@@Base+0x5c>
   119b8:	add	r4, r4, #1
   119bc:	ldr	r3, [r5, #4]
   119c0:	cmp	r3, r4
   119c4:	ble	119f8 <v_sucessores@@Base+0x8c>
   119c8:	mov	r2, r4
   119cc:	mov	r1, r6
   119d0:	mov	r0, r5
   119d4:	bl	117b8 <grafo_aresta@@Base>
   119d8:	cmp	r0, #0
   119dc:	beq	119b8 <v_sucessores@@Base+0x4c>
   119e0:	mov	r2, r8
   119e4:	mov	r1, r4
   119e8:	mov	r0, r7
   119ec:	bl	126ac <vetor_insere@@Base>
   119f0:	b	119b8 <v_sucessores@@Base+0x4c>
   119f4:	mov	r7, #0
   119f8:	mov	r0, r7
   119fc:	pop	{r4, r5, r6, r7, r8, pc}

00011a00 <v_antecessores@@Base>:
   11a00:	push	{r4, r5, r6, r7, r8, lr}
   11a04:	mov	r5, r0
   11a08:	clz	r0, r0
   11a0c:	lsr	r0, r0, #5
   11a10:	orrs	r3, r0, r1, lsr #31
   11a14:	bne	11a88 <v_antecessores@@Base+0x88>
   11a18:	ldr	r3, [r5, #4]
   11a1c:	cmp	r1, r3
   11a20:	movge	r7, #0
   11a24:	bge	11a8c <v_antecessores@@Base+0x8c>
   11a28:	mov	r6, r1
   11a2c:	bl	125dc <vetor_novo@@Base>
   11a30:	mov	r7, r0
   11a34:	ldr	r3, [r5, #4]
   11a38:	cmp	r3, #0
   11a3c:	ble	11a8c <v_antecessores@@Base+0x8c>
   11a40:	mov	r4, #0
   11a44:	mvn	r8, #0
   11a48:	b	11a5c <v_antecessores@@Base+0x5c>
   11a4c:	add	r4, r4, #1
   11a50:	ldr	r3, [r5, #4]
   11a54:	cmp	r3, r4
   11a58:	ble	11a8c <v_antecessores@@Base+0x8c>
   11a5c:	mov	r2, r6
   11a60:	mov	r1, r4
   11a64:	mov	r0, r5
   11a68:	bl	117b8 <grafo_aresta@@Base>
   11a6c:	cmp	r0, #0
   11a70:	beq	11a4c <v_antecessores@@Base+0x4c>
   11a74:	mov	r2, r8
   11a78:	mov	r1, r4
   11a7c:	mov	r0, r7
   11a80:	bl	126ac <vetor_insere@@Base>
   11a84:	b	11a4c <v_antecessores@@Base+0x4c>
   11a88:	mov	r7, #0
   11a8c:	mov	r0, r7
   11a90:	pop	{r4, r5, r6, r7, r8, pc}

00011a94 <dfs_helper@@Base>:
   11a94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a98:	sub	sp, sp, #8
   11a9c:	ldr	r8, [sp, #40]	; 0x28
   11aa0:	ldr	sl, [r8, r1, lsl #2]
   11aa4:	cmp	sl, #0
   11aa8:	movne	sl, #0
   11aac:	bne	11b3c <dfs_helper@@Base+0xa8>
   11ab0:	str	r3, [r8, r1, lsl #2]
   11ab4:	cmp	r1, r2
   11ab8:	moveq	sl, r3
   11abc:	beq	11b3c <dfs_helper@@Base+0xa8>
   11ac0:	mov	r9, r2
   11ac4:	mov	r6, r1
   11ac8:	mov	r5, r0
   11acc:	ldr	r2, [r0, #4]
   11ad0:	cmp	r2, #0
   11ad4:	ble	11b34 <dfs_helper@@Base+0xa0>
   11ad8:	mov	r4, sl
   11adc:	add	r7, r3, #1
   11ae0:	b	11af4 <dfs_helper@@Base+0x60>
   11ae4:	add	r4, r4, #1
   11ae8:	ldr	r3, [r5, #4]
   11aec:	cmp	r3, r4
   11af0:	ble	11b34 <dfs_helper@@Base+0xa0>
   11af4:	mov	r2, r4
   11af8:	mov	r1, r6
   11afc:	mov	r0, r5
   11b00:	bl	117b8 <grafo_aresta@@Base>
   11b04:	cmp	r0, #0
   11b08:	beq	11ae4 <dfs_helper@@Base+0x50>
   11b0c:	str	r8, [sp]
   11b10:	mov	r3, r7
   11b14:	mov	r2, r9
   11b18:	mov	r1, r4
   11b1c:	mov	r0, r5
   11b20:	bl	11a94 <dfs_helper@@Base>
   11b24:	cmp	r0, #0
   11b28:	beq	11ae4 <dfs_helper@@Base+0x50>
   11b2c:	mov	sl, r0
   11b30:	b	11b3c <dfs_helper@@Base+0xa8>
   11b34:	mov	r3, #0
   11b38:	str	r3, [r8, r6, lsl #2]
   11b3c:	mov	r0, sl
   11b40:	add	sp, sp, #8
   11b44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011b48 <grafo_dfs@@Base>:
   11b48:	push	{r4, r5, r6, r7, r8, r9, lr}
   11b4c:	sub	sp, sp, #12
   11b50:	subs	r8, r0, #0
   11b54:	beq	11c40 <grafo_dfs@@Base+0xf8>
   11b58:	mov	r6, r3
   11b5c:	mov	r7, r2
   11b60:	mov	r5, r1
   11b64:	mov	r1, #4
   11b68:	ldr	r0, [r8, #4]
   11b6c:	bl	10e94 <calloc@plt>
   11b70:	mov	r4, r0
   11b74:	str	r0, [sp]
   11b78:	mov	r3, #1
   11b7c:	mov	r2, r7
   11b80:	mov	r1, r5
   11b84:	mov	r0, r8
   11b88:	bl	11a94 <dfs_helper@@Base>
   11b8c:	subs	r5, r0, #0
   11b90:	beq	11bc0 <grafo_dfs@@Base+0x78>
   11b94:	mov	r1, #4
   11b98:	mov	r0, r5
   11b9c:	bl	10e94 <calloc@plt>
   11ba0:	mov	r7, r0
   11ba4:	cmp	r5, #0
   11ba8:	ble	11c28 <grafo_dfs@@Base+0xe0>
   11bac:	ldr	ip, [r8, #4]
   11bb0:	mov	r8, r0
   11bb4:	add	r9, r5, #1
   11bb8:	mov	lr, #1
   11bbc:	b	11bec <grafo_dfs@@Base+0xa4>
   11bc0:	mov	r0, r4
   11bc4:	bl	10ee8 <free@plt>
   11bc8:	mov	r7, #0
   11bcc:	str	r7, [r6]
   11bd0:	b	11c34 <grafo_dfs@@Base+0xec>
   11bd4:	mov	r2, #0
   11bd8:	str	r2, [r8]
   11bdc:	add	lr, lr, #1
   11be0:	add	r8, r8, #4
   11be4:	cmp	lr, r9
   11be8:	beq	11c28 <grafo_dfs@@Base+0xe0>
   11bec:	cmp	ip, #0
   11bf0:	ble	11bdc <grafo_dfs@@Base+0x94>
   11bf4:	mov	r3, lr
   11bf8:	ldr	r2, [r4]
   11bfc:	cmp	r2, lr
   11c00:	beq	11bd4 <grafo_dfs@@Base+0x8c>
   11c04:	mov	r1, r4
   11c08:	mov	r2, #0
   11c0c:	add	r2, r2, #1
   11c10:	cmp	r2, ip
   11c14:	beq	11bdc <grafo_dfs@@Base+0x94>
   11c18:	ldr	r0, [r1, #4]!
   11c1c:	cmp	r0, r3
   11c20:	bne	11c0c <grafo_dfs@@Base+0xc4>
   11c24:	b	11bd8 <grafo_dfs@@Base+0x90>
   11c28:	str	r5, [r6]
   11c2c:	mov	r0, r4
   11c30:	bl	10ee8 <free@plt>
   11c34:	mov	r0, r7
   11c38:	add	sp, sp, #12
   11c3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11c40:	mov	r7, #0
   11c44:	b	11c34 <grafo_dfs@@Base+0xec>

00011c48 <grafo_bfs@@Base>:
   11c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c4c:	sub	sp, sp, #20
   11c50:	str	r3, [sp, #8]
   11c54:	subs	r3, r0, #0
   11c58:	beq	11de8 <grafo_bfs@@Base+0x1a0>
   11c5c:	mov	r4, r1
   11c60:	mov	r8, r2
   11c64:	mov	r7, r3
   11c68:	ldr	r6, [r3, #4]
   11c6c:	mov	r1, #4
   11c70:	mov	r0, r6
   11c74:	bl	10e94 <calloc@plt>
   11c78:	mov	r5, r0
   11c7c:	str	r0, [sp]
   11c80:	mov	r1, #4
   11c84:	mov	r0, r6
   11c88:	bl	10e94 <calloc@plt>
   11c8c:	mov	fp, r0
   11c90:	cmp	r6, #0
   11c94:	ble	11cb0 <grafo_bfs@@Base+0x68>
   11c98:	mov	r3, r5
   11c9c:	add	r1, r5, r6, lsl #2
   11ca0:	mvn	r2, #0
   11ca4:	str	r2, [r3], #4
   11ca8:	cmp	r3, r1
   11cac:	bne	11ca4 <grafo_bfs@@Base+0x5c>
   11cb0:	ldr	r3, [sp]
   11cb4:	str	r4, [r3, r4, lsl #2]
   11cb8:	str	r4, [fp]
   11cbc:	mov	r9, #1
   11cc0:	mov	sl, #0
   11cc4:	str	r8, [sp, #12]
   11cc8:	mov	r8, r7
   11ccc:	b	11d28 <grafo_bfs@@Base+0xe0>
   11cd0:	add	r4, r4, #1
   11cd4:	add	r5, r5, #4
   11cd8:	cmp	r6, r4
   11cdc:	beq	11d20 <grafo_bfs@@Base+0xd8>
   11ce0:	mov	r2, r4
   11ce4:	mov	r1, r7
   11ce8:	mov	r0, r8
   11cec:	bl	117b8 <grafo_aresta@@Base>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11cd0 <grafo_bfs@@Base+0x88>
   11cf8:	ldr	r3, [r5]
   11cfc:	cmn	r3, #1
   11d00:	bne	11cd0 <grafo_bfs@@Base+0x88>
   11d04:	str	r7, [r5]
   11d08:	str	r4, [fp, r9, lsl #2]
   11d0c:	mov	r1, r6
   11d10:	add	r0, r9, #1
   11d14:	bl	12b54 <vetor_ordena@@Base+0x2d4>
   11d18:	mov	r9, r1
   11d1c:	b	11cd0 <grafo_bfs@@Base+0x88>
   11d20:	cmp	sl, r9
   11d24:	beq	11d50 <grafo_bfs@@Base+0x108>
   11d28:	ldr	r7, [fp, sl, lsl #2]
   11d2c:	mov	r1, r6
   11d30:	add	r0, sl, #1
   11d34:	bl	12b54 <vetor_ordena@@Base+0x2d4>
   11d38:	mov	sl, r1
   11d3c:	cmp	r6, #0
   11d40:	ble	11d20 <grafo_bfs@@Base+0xd8>
   11d44:	ldr	r5, [sp]
   11d48:	mov	r4, #0
   11d4c:	b	11ce0 <grafo_bfs@@Base+0x98>
   11d50:	ldr	r8, [sp, #12]
   11d54:	ldr	r1, [sp]
   11d58:	ldr	r3, [r1, r8, lsl #2]
   11d5c:	cmp	r3, #0
   11d60:	movlt	r4, #0
   11d64:	blt	11dc4 <grafo_bfs@@Base+0x17c>
   11d68:	cmp	r8, r3
   11d6c:	beq	11df4 <grafo_bfs@@Base+0x1ac>
   11d70:	mov	r4, #1
   11d74:	b	11d7c <grafo_bfs@@Base+0x134>
   11d78:	mov	r3, r2
   11d7c:	add	r4, r4, #1
   11d80:	ldr	r2, [r1, r3, lsl #2]
   11d84:	cmp	r2, r3
   11d88:	bne	11d78 <grafo_bfs@@Base+0x130>
   11d8c:	lsl	r0, r4, #2
   11d90:	bl	10f18 <malloc@plt>
   11d94:	str	r0, [sp, #4]
   11d98:	cmp	r4, #0
   11d9c:	ble	11dc4 <grafo_bfs@@Base+0x17c>
   11da0:	ldr	r3, [sp, #4]
   11da4:	add	r2, r3, r4, lsl #2
   11da8:	mov	r3, #0
   11dac:	ldr	r1, [sp]
   11db0:	str	r8, [r2, #-4]!
   11db4:	ldr	r8, [r1, r8, lsl #2]
   11db8:	add	r3, r3, #1
   11dbc:	cmp	r3, r4
   11dc0:	blt	11db0 <grafo_bfs@@Base+0x168>
   11dc4:	mov	r0, fp
   11dc8:	bl	10ee8 <free@plt>
   11dcc:	ldr	r0, [sp]
   11dd0:	bl	10ee8 <free@plt>
   11dd4:	ldr	r3, [sp, #8]
   11dd8:	str	r4, [r3]
   11ddc:	ldr	r0, [sp, #4]
   11de0:	add	sp, sp, #20
   11de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11de8:	mov	r3, #0
   11dec:	str	r3, [sp, #4]
   11df0:	b	11ddc <grafo_bfs@@Base+0x194>
   11df4:	mov	r0, #4
   11df8:	bl	10f18 <malloc@plt>
   11dfc:	str	r0, [sp, #4]
   11e00:	mov	r4, #1
   11e04:	b	11da0 <grafo_bfs@@Base+0x158>

00011e08 <heap_nova@@Base>:
   11e08:	push	{r4, r5, r6, lr}
   11e0c:	mov	r5, r0
   11e10:	mov	r0, #12
   11e14:	bl	10f18 <malloc@plt>
   11e18:	subs	r4, r0, #0
   11e1c:	beq	11e44 <heap_nova@@Base+0x3c>
   11e20:	mov	r3, #0
   11e24:	str	r3, [r4]
   11e28:	str	r5, [r4, #4]
   11e2c:	mov	r1, #4
   11e30:	mov	r0, r5
   11e34:	bl	10e94 <calloc@plt>
   11e38:	str	r0, [r4, #8]
   11e3c:	cmp	r0, #0
   11e40:	beq	11e4c <heap_nova@@Base+0x44>
   11e44:	mov	r0, r4
   11e48:	pop	{r4, r5, r6, pc}
   11e4c:	mov	r0, r4
   11e50:	bl	10ee8 <free@plt>
   11e54:	mov	r4, #0
   11e58:	b	11e44 <heap_nova@@Base+0x3c>

00011e5c <heap_apaga@@Base>:
   11e5c:	push	{r4, r5, r6, lr}
   11e60:	subs	r5, r0, #0
   11e64:	popeq	{r4, r5, r6, pc}
   11e68:	ldr	r3, [r5]
   11e6c:	cmp	r3, #0
   11e70:	ble	11eb0 <heap_apaga@@Base+0x54>
   11e74:	mov	r4, #0
   11e78:	mov	r6, r4
   11e7c:	ldr	r3, [r5, #8]
   11e80:	ldr	r3, [r3, r4, lsl #2]
   11e84:	ldr	r0, [r3, #4]
   11e88:	bl	10ee8 <free@plt>
   11e8c:	ldr	r3, [r5, #8]
   11e90:	ldr	r0, [r3, r4, lsl #2]
   11e94:	bl	10ee8 <free@plt>
   11e98:	ldr	r3, [r5, #8]
   11e9c:	str	r6, [r3, r4, lsl #2]
   11ea0:	add	r4, r4, #1
   11ea4:	ldr	r3, [r5]
   11ea8:	cmp	r3, r4
   11eac:	bgt	11e7c <heap_apaga@@Base+0x20>
   11eb0:	ldr	r0, [r5, #8]
   11eb4:	bl	10ee8 <free@plt>
   11eb8:	mov	r0, r5
   11ebc:	bl	10ee8 <free@plt>
   11ec0:	pop	{r4, r5, r6, pc}

00011ec4 <elemento_cria@@Base>:
   11ec4:	push	{r4, r5, r6, lr}
   11ec8:	mov	r6, r0
   11ecc:	mov	r5, r1
   11ed0:	mov	r0, #8
   11ed4:	bl	10f18 <malloc@plt>
   11ed8:	subs	r4, r0, #0
   11edc:	beq	11f0c <elemento_cria@@Base+0x48>
   11ee0:	mov	r0, r5
   11ee4:	bl	10f3c <strlen@plt>
   11ee8:	mov	r1, #1
   11eec:	add	r0, r0, r1
   11ef0:	bl	10e94 <calloc@plt>
   11ef4:	str	r0, [r4, #4]
   11ef8:	cmp	r0, #0
   11efc:	beq	11f14 <elemento_cria@@Base+0x50>
   11f00:	mov	r1, r5
   11f04:	bl	10f00 <strcpy@plt>
   11f08:	str	r6, [r4]
   11f0c:	mov	r0, r4
   11f10:	pop	{r4, r5, r6, pc}
   11f14:	mov	r0, r4
   11f18:	bl	10ee8 <free@plt>
   11f1c:	mov	r4, #0
   11f20:	b	11f0c <elemento_cria@@Base+0x48>

00011f24 <mostraHeap@@Base>:
   11f24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f28:	ldr	r3, [r0]
   11f2c:	cmp	r3, r1
   11f30:	ble	12004 <mostraHeap@@Base+0xe0>
   11f34:	mov	r8, r0
   11f38:	mov	r7, r1
   11f3c:	cmp	r1, #0
   11f40:	ble	11fd0 <mostraHeap@@Base+0xac>
   11f44:	mov	r3, r1
   11f48:	mov	r5, #0
   11f4c:	sub	r3, r3, #1
   11f50:	add	r3, r3, r3, lsr #31
   11f54:	asr	r3, r3, #1
   11f58:	add	r5, r5, #1
   11f5c:	cmp	r3, #0
   11f60:	bgt	11f4c <mostraHeap@@Base+0x28>
   11f64:	lsl	r1, r7, #1
   11f68:	add	r1, r1, #1
   11f6c:	mov	r0, r8
   11f70:	bl	11f24 <mostraHeap@@Base>
   11f74:	add	r6, r5, r5, lsl #1
   11f78:	cmp	r6, #0
   11f7c:	ble	11f9c <mostraHeap@@Base+0x78>
   11f80:	mov	r4, #0
   11f84:	ldr	r9, [pc, #132]	; 12010 <mostraHeap@@Base+0xec>
   11f88:	mov	r0, r9
   11f8c:	bl	10ec4 <printf@plt>
   11f90:	add	r4, r4, #1
   11f94:	cmp	r4, r6
   11f98:	bne	11f88 <mostraHeap@@Base+0x64>
   11f9c:	ldr	r3, [r8, #8]
   11fa0:	ldr	r3, [r3, r7, lsl #2]
   11fa4:	ldr	r2, [r3]
   11fa8:	ldr	r1, [r3, #4]
   11fac:	ldr	r0, [pc, #96]	; 12014 <mostraHeap@@Base+0xf0>
   11fb0:	bl	10ec4 <printf@plt>
   11fb4:	add	r1, r7, #1
   11fb8:	lsl	r1, r1, #1
   11fbc:	mov	r0, r8
   11fc0:	bl	11f24 <mostraHeap@@Base>
   11fc4:	cmp	r5, #0
   11fc8:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fcc:	b	12004 <mostraHeap@@Base+0xe0>
   11fd0:	lsl	r1, r1, #1
   11fd4:	add	r1, r1, #1
   11fd8:	bl	11f24 <mostraHeap@@Base>
   11fdc:	ldr	r3, [r8, #8]
   11fe0:	ldr	r3, [r3, r7, lsl #2]
   11fe4:	ldr	r2, [r3]
   11fe8:	ldr	r1, [r3, #4]
   11fec:	ldr	r0, [pc, #32]	; 12014 <mostraHeap@@Base+0xf0>
   11ff0:	bl	10ec4 <printf@plt>
   11ff4:	add	r1, r7, #1
   11ff8:	lsl	r1, r1, #1
   11ffc:	mov	r0, r8
   12000:	bl	11f24 <mostraHeap@@Base>
   12004:	mov	r0, #10
   12008:	bl	10f54 <putchar@plt>
   1200c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12010:	andeq	r2, r1, r4, lsr sp
   12014:	andeq	r2, r1, ip, lsr sp

00012018 <menor_que@@Base>:
   12018:	cmp	r1, #0
   1201c:	cmpne	r0, #0
   12020:	beq	1203c <menor_que@@Base+0x24>
   12024:	ldr	r0, [r0]
   12028:	ldr	r3, [r1]
   1202c:	cmp	r0, r3
   12030:	movge	r0, #0
   12034:	movlt	r0, #1
   12038:	bx	lr
   1203c:	mov	r0, #0
   12040:	bx	lr

00012044 <heap_insere@@Base>:
   12044:	ldr	ip, [r0]
   12048:	ldr	r3, [r0, #4]
   1204c:	cmp	ip, r3
   12050:	blt	1205c <heap_insere@@Base+0x18>
   12054:	mov	r0, #0
   12058:	bx	lr
   1205c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12060:	mov	r6, r0
   12064:	mov	r0, r2
   12068:	bl	11ec4 <elemento_cria@@Base>
   1206c:	cmp	r0, #0
   12070:	beq	120f0 <heap_insere@@Base+0xac>
   12074:	ldr	r4, [r6]
   12078:	ldr	r3, [r6, #8]
   1207c:	str	r0, [r3, r4, lsl #2]
   12080:	ldr	r3, [r6]
   12084:	add	r3, r3, #1
   12088:	str	r3, [r6]
   1208c:	cmp	r4, #0
   12090:	beq	120e0 <heap_insere@@Base+0x9c>
   12094:	ldr	r5, [r6, #8]
   12098:	lsl	r9, r4, #2
   1209c:	ldr	r7, [r5, r4, lsl #2]
   120a0:	sub	r4, r4, #1
   120a4:	add	r4, r4, r4, lsr #31
   120a8:	asr	r4, r4, #1
   120ac:	ldr	r8, [r5, r4, lsl #2]
   120b0:	mov	r1, r8
   120b4:	mov	r0, r7
   120b8:	bl	12018 <menor_que@@Base>
   120bc:	cmp	r0, #0
   120c0:	beq	120e8 <heap_insere@@Base+0xa4>
   120c4:	str	r7, [r5, r4, lsl #2]
   120c8:	ldr	r3, [r6, #8]
   120cc:	str	r8, [r3, r9]
   120d0:	cmp	r4, #0
   120d4:	bne	12094 <heap_insere@@Base+0x50>
   120d8:	mov	r0, #1
   120dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120e0:	mov	r0, #1
   120e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120e8:	mov	r0, #1
   120ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120f0:	mov	r0, #0
   120f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000120f8 <heap_remove@@Base>:
   120f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120fc:	subs	r7, r0, #0
   12100:	beq	121d8 <heap_remove@@Base+0xe0>
   12104:	ldr	r3, [r7]
   12108:	cmp	r3, #0
   1210c:	ble	121e0 <heap_remove@@Base+0xe8>
   12110:	ldr	r3, [r7, #8]
   12114:	ldr	r0, [r3]
   12118:	ldr	r9, [r0, #4]
   1211c:	bl	10ee8 <free@plt>
   12120:	ldr	r3, [r7]
   12124:	sub	r3, r3, #1
   12128:	str	r3, [r7]
   1212c:	ldr	r2, [r7, #8]
   12130:	ldr	r3, [r2, r3, lsl #2]
   12134:	str	r3, [r2]
   12138:	ldr	r2, [r7]
   1213c:	ldr	r3, [r7, #8]
   12140:	mov	r1, #0
   12144:	str	r1, [r3, r2, lsl #2]
   12148:	ldr	r3, [r7]
   1214c:	cmp	r3, #1
   12150:	ble	121e4 <heap_remove@@Base+0xec>
   12154:	mov	r5, #1
   12158:	mov	r6, r1
   1215c:	b	121a4 <heap_remove@@Base+0xac>
   12160:	ldr	r5, [r7, #8]
   12164:	ldr	r8, [r5, r4, lsl #2]
   12168:	ldr	sl, [r5, r6, lsl #2]
   1216c:	mov	r1, sl
   12170:	mov	r0, r8
   12174:	bl	12018 <menor_que@@Base>
   12178:	cmp	r0, #0
   1217c:	beq	121e4 <heap_remove@@Base+0xec>
   12180:	str	sl, [r5, r4, lsl #2]
   12184:	ldr	r3, [r7, #8]
   12188:	str	r8, [r3, r6, lsl #2]
   1218c:	lsl	r5, r4, #1
   12190:	add	r5, r5, #1
   12194:	ldr	r3, [r7]
   12198:	mov	r6, r4
   1219c:	cmp	r5, r3
   121a0:	bge	121e4 <heap_remove@@Base+0xec>
   121a4:	add	r4, r6, #1
   121a8:	lsl	r4, r4, #1
   121ac:	cmp	r4, r3
   121b0:	movge	r4, r5
   121b4:	bge	12160 <heap_remove@@Base+0x68>
   121b8:	ldr	r3, [r7, #8]
   121bc:	add	r3, r3, r6, lsl #3
   121c0:	ldr	r1, [r3, #4]
   121c4:	ldr	r0, [r3, #8]
   121c8:	bl	12018 <menor_que@@Base>
   121cc:	cmp	r0, #0
   121d0:	moveq	r4, r5
   121d4:	b	12160 <heap_remove@@Base+0x68>
   121d8:	mov	r9, #0
   121dc:	b	121e4 <heap_remove@@Base+0xec>
   121e0:	mov	r9, #0
   121e4:	mov	r0, r9
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000121ec <novo_str@@Base>:
   121ec:	push	{r4, r5, r6, lr}
   121f0:	mov	r5, r0
   121f4:	mov	r0, #12
   121f8:	bl	10f18 <malloc@plt>
   121fc:	subs	r4, r0, #0
   12200:	beq	12234 <novo_str@@Base+0x48>
   12204:	mov	r0, r5
   12208:	bl	10f3c <strlen@plt>
   1220c:	add	r0, r0, #1
   12210:	bl	10f18 <malloc@plt>
   12214:	str	r0, [r4]
   12218:	cmp	r0, #0
   1221c:	beq	1223c <novo_str@@Base+0x50>
   12220:	mov	r1, r5
   12224:	bl	10f00 <strcpy@plt>
   12228:	mov	r3, #0
   1222c:	str	r3, [r4, #4]
   12230:	str	r3, [r4, #8]
   12234:	mov	r0, r4
   12238:	pop	{r4, r5, r6, pc}
   1223c:	mov	r0, r4
   12240:	bl	10ee8 <free@plt>
   12244:	mov	r4, #0
   12248:	b	12234 <novo_str@@Base+0x48>

0001224c <lista_nova@@Base>:
   1224c:	push	{r4, lr}
   12250:	mov	r0, #12
   12254:	bl	10f18 <malloc@plt>
   12258:	cmp	r0, #0
   1225c:	movne	r3, #0
   12260:	strne	r3, [r0]
   12264:	strne	r3, [r0, #4]
   12268:	strne	r3, [r0, #8]
   1226c:	pop	{r4, pc}

00012270 <lista_apaga@@Base>:
   12270:	push	{r4, r5, r6, lr}
   12274:	subs	r5, r0, #0
   12278:	popeq	{r4, r5, r6, pc}
   1227c:	ldr	r4, [r5]
   12280:	cmp	r4, #0
   12284:	beq	122ac <lista_apaga@@Base+0x3c>
   12288:	ldr	r3, [r4, #4]
   1228c:	str	r3, [r5]
   12290:	ldr	r0, [r4]
   12294:	bl	10ee8 <free@plt>
   12298:	mov	r0, r4
   1229c:	bl	10ee8 <free@plt>
   122a0:	ldr	r4, [r5]
   122a4:	cmp	r4, #0
   122a8:	bne	12288 <lista_apaga@@Base+0x18>
   122ac:	mov	r0, r5
   122b0:	bl	10ee8 <free@plt>
   122b4:	pop	{r4, r5, r6, pc}

000122b8 <lista_tamanho@@Base>:
   122b8:	cmp	r0, #0
   122bc:	ldrne	r0, [r0, #8]
   122c0:	mvneq	r0, #0
   122c4:	bx	lr

000122c8 <lista_inicio@@Base>:
   122c8:	cmp	r0, #0
   122cc:	ldrne	r0, [r0]
   122d0:	moveq	r0, #0
   122d4:	bx	lr

000122d8 <lista_fim@@Base>:
   122d8:	cmp	r0, #0
   122dc:	ldrne	r0, [r0, #4]
   122e0:	moveq	r0, #0
   122e4:	bx	lr

000122e8 <lista_insere@@Base>:
   122e8:	cmp	r1, #0
   122ec:	cmpne	r0, #0
   122f0:	beq	12380 <lista_insere@@Base+0x98>
   122f4:	push	{r4, r5, r6, lr}
   122f8:	mov	r5, r0
   122fc:	mov	r0, r1
   12300:	mov	r4, r2
   12304:	bl	121ec <novo_str@@Base>
   12308:	cmp	r0, #0
   1230c:	popeq	{r4, r5, r6, pc}
   12310:	ldr	r3, [r5, #8]
   12314:	add	r3, r3, #1
   12318:	str	r3, [r5, #8]
   1231c:	cmp	r4, #0
   12320:	beq	12358 <lista_insere@@Base+0x70>
   12324:	ldr	r3, [r5]
   12328:	cmp	r4, r3
   1232c:	streq	r4, [r0, #4]
   12330:	ldreq	r3, [r5]
   12334:	streq	r0, [r3, #8]
   12338:	streq	r0, [r5]
   1233c:	ldrne	r3, [r4, #8]
   12340:	strne	r3, [r0, #8]
   12344:	strne	r4, [r0, #4]
   12348:	ldrne	r3, [r4, #8]
   1234c:	strne	r0, [r3, #4]
   12350:	strne	r0, [r4, #8]
   12354:	pop	{r4, r5, r6, pc}
   12358:	ldr	r3, [r5]
   1235c:	cmp	r3, #0
   12360:	streq	r0, [r5, #4]
   12364:	streq	r0, [r5]
   12368:	ldrne	r3, [r5, #4]
   1236c:	strne	r3, [r0, #8]
   12370:	ldrne	r3, [r5, #4]
   12374:	strne	r0, [r3, #4]
   12378:	strne	r0, [r5, #4]
   1237c:	pop	{r4, r5, r6, pc}
   12380:	mov	r0, #0
   12384:	bx	lr

00012388 <lista_remove@@Base>:
   12388:	push	{r4, r5, r6, lr}
   1238c:	cmp	r1, #0
   12390:	cmpne	r0, #0
   12394:	beq	123f4 <lista_remove@@Base+0x6c>
   12398:	mov	r4, r1
   1239c:	ldr	r2, [r0, #8]
   123a0:	sub	r2, r2, #1
   123a4:	str	r2, [r0, #8]
   123a8:	ldr	r2, [r1, #8]
   123ac:	cmp	r2, #0
   123b0:	ldrne	r1, [r1, #4]
   123b4:	strne	r1, [r2, #4]
   123b8:	ldreq	r2, [r4, #4]
   123bc:	streq	r2, [r0]
   123c0:	ldr	r2, [r4, #4]
   123c4:	cmp	r2, #0
   123c8:	ldrne	r1, [r4, #8]
   123cc:	strne	r1, [r2, #8]
   123d0:	ldreq	r2, [r4, #8]
   123d4:	streq	r2, [r0, #4]
   123d8:	ldr	r5, [r4, #4]
   123dc:	ldr	r0, [r4]
   123e0:	bl	10ee8 <free@plt>
   123e4:	mov	r0, r4
   123e8:	bl	10ee8 <free@plt>
   123ec:	mov	r0, r5
   123f0:	pop	{r4, r5, r6, pc}
   123f4:	mov	r5, #0
   123f8:	b	123ec <lista_remove@@Base+0x64>

000123fc <lista_pesquisa@@Base>:
   123fc:	push	{r4, r5, r6, lr}
   12400:	cmp	r1, #0
   12404:	cmpne	r0, #0
   12408:	beq	12488 <lista_pesquisa@@Base+0x8c>
   1240c:	mov	r5, r1
   12410:	cmp	r2, #1
   12414:	movhi	r4, #0
   12418:	bhi	12450 <lista_pesquisa@@Base+0x54>
   1241c:	cmp	r2, #0
   12420:	bne	12458 <lista_pesquisa@@Base+0x5c>
   12424:	ldr	r4, [r0]
   12428:	cmp	r4, #0
   1242c:	beq	12450 <lista_pesquisa@@Base+0x54>
   12430:	mov	r1, r5
   12434:	ldr	r0, [r4]
   12438:	bl	10eac <strcmp@plt>
   1243c:	cmp	r0, #0
   12440:	beq	12450 <lista_pesquisa@@Base+0x54>
   12444:	ldr	r4, [r4, #4]
   12448:	cmp	r4, #0
   1244c:	bne	12430 <lista_pesquisa@@Base+0x34>
   12450:	mov	r0, r4
   12454:	pop	{r4, r5, r6, pc}
   12458:	ldr	r4, [r0, #4]
   1245c:	cmp	r4, #0
   12460:	beq	12450 <lista_pesquisa@@Base+0x54>
   12464:	mov	r1, r5
   12468:	ldr	r0, [r4]
   1246c:	bl	10eac <strcmp@plt>
   12470:	cmp	r0, #0
   12474:	beq	12450 <lista_pesquisa@@Base+0x54>
   12478:	ldr	r4, [r4, #8]
   1247c:	cmp	r4, #0
   12480:	bne	12464 <lista_pesquisa@@Base+0x68>
   12484:	b	12450 <lista_pesquisa@@Base+0x54>
   12488:	mov	r4, #0
   1248c:	b	12450 <lista_pesquisa@@Base+0x54>

00012490 <lista_ordena@@Base>:
   12490:	subs	r3, r0, #0
   12494:	beq	12518 <lista_ordena@@Base+0x88>
   12498:	ldr	r0, [r3, #8]
   1249c:	cmp	r0, #0
   124a0:	bxeq	lr
   124a4:	push	{r4, r5, r6, lr}
   124a8:	ldr	r5, [r3]
   124ac:	ldr	r4, [r5, #4]
   124b0:	cmp	r4, #0
   124b4:	movne	r6, r5
   124b8:	bne	1250c <lista_ordena@@Base+0x7c>
   124bc:	mov	r0, #0
   124c0:	pop	{r4, r5, r6, pc}
   124c4:	ldr	r1, [r5]
   124c8:	ldr	r0, [r4]
   124cc:	bl	10eac <strcmp@plt>
   124d0:	cmp	r0, #0
   124d4:	movlt	r5, r4
   124d8:	ldr	r4, [r4, #4]
   124dc:	cmp	r4, #0
   124e0:	bne	124c4 <lista_ordena@@Base+0x34>
   124e4:	cmp	r5, r6
   124e8:	ldrne	r3, [r6]
   124ec:	ldrne	r2, [r5]
   124f0:	strne	r2, [r6]
   124f4:	strne	r3, [r5]
   124f8:	ldr	r6, [r6, #4]
   124fc:	ldr	r4, [r6, #4]
   12500:	mov	r5, r6
   12504:	cmp	r4, #0
   12508:	beq	12520 <lista_ordena@@Base+0x90>
   1250c:	cmp	r4, #0
   12510:	bne	124c4 <lista_ordena@@Base+0x34>
   12514:	b	124f8 <lista_ordena@@Base+0x68>
   12518:	mvn	r0, #0
   1251c:	bx	lr
   12520:	mov	r0, #0
   12524:	pop	{r4, r5, r6, pc}

00012528 <lista_inverte@@Base>:
   12528:	subs	r2, r0, #0
   1252c:	beq	125cc <lista_inverte@@Base+0xa4>
   12530:	ldr	r1, [r2, #8]
   12534:	cmp	r1, #1
   12538:	ble	125d4 <lista_inverte@@Base+0xac>
   1253c:	ldr	r3, [r2]
   12540:	ldr	r3, [r3, #4]
   12544:	sub	r1, r1, #2
   12548:	cmp	r1, #0
   1254c:	ble	1259c <lista_inverte@@Base+0x74>
   12550:	mov	r0, #0
   12554:	ldr	r1, [r3, #8]
   12558:	ldr	ip, [r3, #4]
   1255c:	str	ip, [r1, #4]
   12560:	ldr	r1, [r3, #4]
   12564:	ldr	ip, [r3, #8]
   12568:	str	ip, [r1, #8]
   1256c:	ldr	r1, [r3, #4]
   12570:	ldr	ip, [r2]
   12574:	str	ip, [r3, #4]
   12578:	ldr	ip, [r2]
   1257c:	str	r3, [ip, #8]
   12580:	str	r3, [r2]
   12584:	add	r0, r0, #1
   12588:	mov	r3, r1
   1258c:	ldr	r1, [r2, #8]
   12590:	sub	r1, r1, #2
   12594:	cmp	r1, r0
   12598:	bgt	12554 <lista_inverte@@Base+0x2c>
   1259c:	ldr	r3, [r2, #4]
   125a0:	ldr	r1, [r3, #8]
   125a4:	str	r1, [r2, #4]
   125a8:	mov	r0, #0
   125ac:	str	r0, [r1, #4]
   125b0:	str	r0, [r3, #8]
   125b4:	ldr	r1, [r2]
   125b8:	str	r1, [r3, #4]
   125bc:	ldr	r1, [r2]
   125c0:	str	r3, [r1, #8]
   125c4:	str	r3, [r2]
   125c8:	bx	lr
   125cc:	mvn	r0, #0
   125d0:	bx	lr
   125d4:	mov	r0, #0
   125d8:	bx	lr

000125dc <vetor_novo@@Base>:
   125dc:	push	{r4, lr}
   125e0:	mov	r0, #12
   125e4:	bl	10f18 <malloc@plt>
   125e8:	cmp	r0, #0
   125ec:	movne	r3, #0
   125f0:	strne	r3, [r0]
   125f4:	strne	r3, [r0, #4]
   125f8:	strne	r3, [r0, #8]
   125fc:	pop	{r4, pc}

00012600 <vetor_apaga@@Base>:
   12600:	push	{r4, lr}
   12604:	subs	r4, r0, #0
   12608:	popeq	{r4, pc}
   1260c:	ldr	r0, [r4, #8]
   12610:	bl	10ee8 <free@plt>
   12614:	mov	r0, r4
   12618:	bl	10ee8 <free@plt>
   1261c:	pop	{r4, pc}

00012620 <vetor_atribui@@Base>:
   12620:	mov	r3, r0
   12624:	clz	r0, r0
   12628:	lsr	r0, r0, #5
   1262c:	orrs	r0, r0, r1, lsr #31
   12630:	bne	12650 <vetor_atribui@@Base+0x30>
   12634:	ldr	r0, [r3]
   12638:	cmp	r1, r0
   1263c:	bge	12658 <vetor_atribui@@Base+0x38>
   12640:	ldr	r3, [r3, #8]
   12644:	str	r2, [r3, r1, lsl #2]
   12648:	mov	r0, r1
   1264c:	bx	lr
   12650:	mvn	r0, #0
   12654:	bx	lr
   12658:	mvn	r0, #0
   1265c:	bx	lr

00012660 <vetor_tamanho@@Base>:
   12660:	cmp	r0, #0
   12664:	ldrne	r0, [r0]
   12668:	mvneq	r0, #0
   1266c:	bx	lr

00012670 <vetor_elemento@@Base>:
   12670:	mov	r3, r0
   12674:	clz	r0, r0
   12678:	lsr	r0, r0, #5
   1267c:	orrs	r2, r0, r1, lsr #31
   12680:	bne	1269c <vetor_elemento@@Base+0x2c>
   12684:	ldr	r2, [r3]
   12688:	cmp	r1, r2
   1268c:	bge	126a4 <vetor_elemento@@Base+0x34>
   12690:	ldr	r3, [r3, #8]
   12694:	ldr	r0, [r3, r1, lsl #2]
   12698:	bx	lr
   1269c:	mov	r0, #-2147483648	; 0x80000000
   126a0:	bx	lr
   126a4:	mov	r0, #-2147483648	; 0x80000000
   126a8:	bx	lr

000126ac <vetor_insere@@Base>:
   126ac:	push	{r4, r5, r6, lr}
   126b0:	mov	r5, r0
   126b4:	cmn	r2, #1
   126b8:	movge	r3, #0
   126bc:	movlt	r3, #1
   126c0:	cmp	r0, #0
   126c4:	movne	r0, r3
   126c8:	orreq	r0, r3, #1
   126cc:	cmp	r0, #0
   126d0:	bne	12780 <vetor_insere@@Base+0xd4>
   126d4:	mov	r6, r1
   126d8:	mov	r4, r2
   126dc:	ldr	r3, [r5]
   126e0:	cmp	r2, r3
   126e4:	bgt	12788 <vetor_insere@@Base+0xdc>
   126e8:	cmn	r2, #1
   126ec:	moveq	r4, r3
   126f0:	ldr	r2, [r5, #4]
   126f4:	cmp	r3, r2
   126f8:	beq	1274c <vetor_insere@@Base+0xa0>
   126fc:	ldr	r3, [r5]
   12700:	sub	r2, r3, #1
   12704:	cmp	r4, r2
   12708:	bgt	12730 <vetor_insere@@Base+0x84>
   1270c:	lsl	r3, r3, #2
   12710:	ldr	r1, [r5, #8]
   12714:	add	r0, r1, r3
   12718:	ldr	r0, [r0, #-4]
   1271c:	str	r0, [r1, r3]
   12720:	sub	r2, r2, #1
   12724:	sub	r3, r3, #4
   12728:	cmp	r4, r2
   1272c:	ble	12710 <vetor_insere@@Base+0x64>
   12730:	ldr	r3, [r5, #8]
   12734:	str	r6, [r3, r4, lsl #2]
   12738:	ldr	r3, [r5]
   1273c:	add	r3, r3, #1
   12740:	str	r3, [r5]
   12744:	mov	r0, r4
   12748:	pop	{r4, r5, r6, pc}
   1274c:	cmp	r3, #0
   12750:	moveq	r3, #1
   12754:	lslne	r3, r3, #1
   12758:	str	r3, [r5, #4]
   1275c:	ldr	r1, [r5, #4]
   12760:	lsl	r1, r1, #2
   12764:	ldr	r0, [r5, #8]
   12768:	bl	10ef4 <realloc@plt>
   1276c:	str	r0, [r5, #8]
   12770:	cmp	r0, #0
   12774:	bne	126fc <vetor_insere@@Base+0x50>
   12778:	mvn	r0, #0
   1277c:	pop	{r4, r5, r6, pc}
   12780:	mvn	r0, #0
   12784:	pop	{r4, r5, r6, pc}
   12788:	mvn	r0, #0
   1278c:	pop	{r4, r5, r6, pc}

00012790 <vetor_remove@@Base>:
   12790:	mov	ip, r0
   12794:	clz	r0, r0
   12798:	lsr	r0, r0, #5
   1279c:	orrs	r3, r0, r1, lsr #31
   127a0:	bne	127f8 <vetor_remove@@Base+0x68>
   127a4:	ldr	r0, [ip]
   127a8:	cmp	r1, r0
   127ac:	bge	12800 <vetor_remove@@Base+0x70>
   127b0:	add	r3, r1, #1
   127b4:	cmp	r0, r3
   127b8:	ble	12808 <vetor_remove@@Base+0x78>
   127bc:	push	{lr}		; (str lr, [sp, #-4]!)
   127c0:	lsl	r1, r1, #2
   127c4:	ldr	r0, [ip, #8]
   127c8:	add	r2, r1, #4
   127cc:	ldr	lr, [r0, r2]
   127d0:	str	lr, [r0, r1]
   127d4:	add	r3, r3, #1
   127d8:	ldr	r0, [ip]
   127dc:	mov	r1, r2
   127e0:	cmp	r0, r3
   127e4:	bgt	127c4 <vetor_remove@@Base+0x34>
   127e8:	sub	r0, r0, #1
   127ec:	str	r0, [ip]
   127f0:	mov	r0, #0
   127f4:	pop	{pc}		; (ldr pc, [sp], #4)
   127f8:	mvn	r0, #0
   127fc:	bx	lr
   12800:	mvn	r0, #0
   12804:	bx	lr
   12808:	sub	r0, r0, #1
   1280c:	str	r0, [ip]
   12810:	mov	r0, #0
   12814:	bx	lr

00012818 <vetor_pesquisa@@Base>:
   12818:	cmp	r0, #0
   1281c:	beq	12868 <vetor_pesquisa@@Base+0x50>
   12820:	ldr	ip, [r0]
   12824:	cmp	ip, #0
   12828:	ble	12870 <vetor_pesquisa@@Base+0x58>
   1282c:	ldr	r3, [r0, #8]
   12830:	ldr	r2, [r3]
   12834:	cmp	r1, r2
   12838:	beq	12878 <vetor_pesquisa@@Base+0x60>
   1283c:	add	r3, r3, #4
   12840:	mov	r0, #0
   12844:	add	r0, r0, #1
   12848:	cmp	r0, ip
   1284c:	beq	12860 <vetor_pesquisa@@Base+0x48>
   12850:	ldr	r2, [r3], #4
   12854:	cmp	r2, r1
   12858:	bne	12844 <vetor_pesquisa@@Base+0x2c>
   1285c:	bx	lr
   12860:	mvn	r0, #0
   12864:	bx	lr
   12868:	mvn	r0, #0
   1286c:	bx	lr
   12870:	mvn	r0, #0
   12874:	bx	lr
   12878:	mov	r0, #0
   1287c:	bx	lr

00012880 <vetor_ordena@@Base>:
   12880:	cmp	r0, #0
   12884:	beq	12924 <vetor_ordena@@Base+0xa4>
   12888:	ldr	r3, [r0]
   1288c:	cmp	r3, #1
   12890:	ble	1292c <vetor_ordena@@Base+0xac>
   12894:	push	{r4, r5, lr}
   12898:	mov	r5, #4
   1289c:	mov	r4, #1
   128a0:	b	128c4 <vetor_ordena@@Base+0x44>
   128a4:	mov	r1, r4
   128a8:	ldr	r3, [r0, #8]
   128ac:	str	lr, [r3, r1, lsl #2]
   128b0:	add	r4, r4, #1
   128b4:	add	r5, r5, #4
   128b8:	ldr	r3, [r0]
   128bc:	cmp	r3, r4
   128c0:	ble	1291c <vetor_ordena@@Base+0x9c>
   128c4:	ldr	r2, [r0, #8]
   128c8:	ldr	lr, [r2, r5]
   128cc:	cmp	r4, #0
   128d0:	ble	128a4 <vetor_ordena@@Base+0x24>
   128d4:	add	r3, r2, r5
   128d8:	ldr	ip, [r3, #-4]
   128dc:	cmp	lr, ip
   128e0:	bge	12914 <vetor_ordena@@Base+0x94>
   128e4:	mov	r3, r5
   128e8:	mov	r1, r4
   128ec:	str	ip, [r2, r3]
   128f0:	subs	r1, r1, #1
   128f4:	beq	128a8 <vetor_ordena@@Base+0x28>
   128f8:	ldr	r2, [r0, #8]
   128fc:	add	ip, r2, r3
   12900:	ldr	ip, [ip, #-8]
   12904:	sub	r3, r3, #4
   12908:	cmp	lr, ip
   1290c:	blt	128ec <vetor_ordena@@Base+0x6c>
   12910:	b	128a8 <vetor_ordena@@Base+0x28>
   12914:	mov	r1, r4
   12918:	b	128a8 <vetor_ordena@@Base+0x28>
   1291c:	mov	r0, #0
   12920:	pop	{r4, r5, pc}
   12924:	mvn	r0, #0
   12928:	bx	lr
   1292c:	mov	r0, #0
   12930:	bx	lr
   12934:	cmp	r1, #0
   12938:	beq	12b44 <vetor_ordena@@Base+0x2c4>
   1293c:	eor	ip, r0, r1
   12940:	rsbmi	r1, r1, #0
   12944:	subs	r2, r1, #1
   12948:	beq	12b10 <vetor_ordena@@Base+0x290>
   1294c:	movs	r3, r0
   12950:	rsbmi	r3, r0, #0
   12954:	cmp	r3, r1
   12958:	bls	12b1c <vetor_ordena@@Base+0x29c>
   1295c:	tst	r1, r2
   12960:	beq	12b2c <vetor_ordena@@Base+0x2ac>
   12964:	clz	r2, r3
   12968:	clz	r0, r1
   1296c:	sub	r2, r0, r2
   12970:	rsbs	r2, r2, #31
   12974:	addne	r2, r2, r2, lsl #1
   12978:	mov	r0, #0
   1297c:	addne	pc, pc, r2, lsl #2
   12980:	nop			; (mov r0, r0)
   12984:	cmp	r3, r1, lsl #31
   12988:	adc	r0, r0, r0
   1298c:	subcs	r3, r3, r1, lsl #31
   12990:	cmp	r3, r1, lsl #30
   12994:	adc	r0, r0, r0
   12998:	subcs	r3, r3, r1, lsl #30
   1299c:	cmp	r3, r1, lsl #29
   129a0:	adc	r0, r0, r0
   129a4:	subcs	r3, r3, r1, lsl #29
   129a8:	cmp	r3, r1, lsl #28
   129ac:	adc	r0, r0, r0
   129b0:	subcs	r3, r3, r1, lsl #28
   129b4:	cmp	r3, r1, lsl #27
   129b8:	adc	r0, r0, r0
   129bc:	subcs	r3, r3, r1, lsl #27
   129c0:	cmp	r3, r1, lsl #26
   129c4:	adc	r0, r0, r0
   129c8:	subcs	r3, r3, r1, lsl #26
   129cc:	cmp	r3, r1, lsl #25
   129d0:	adc	r0, r0, r0
   129d4:	subcs	r3, r3, r1, lsl #25
   129d8:	cmp	r3, r1, lsl #24
   129dc:	adc	r0, r0, r0
   129e0:	subcs	r3, r3, r1, lsl #24
   129e4:	cmp	r3, r1, lsl #23
   129e8:	adc	r0, r0, r0
   129ec:	subcs	r3, r3, r1, lsl #23
   129f0:	cmp	r3, r1, lsl #22
   129f4:	adc	r0, r0, r0
   129f8:	subcs	r3, r3, r1, lsl #22
   129fc:	cmp	r3, r1, lsl #21
   12a00:	adc	r0, r0, r0
   12a04:	subcs	r3, r3, r1, lsl #21
   12a08:	cmp	r3, r1, lsl #20
   12a0c:	adc	r0, r0, r0
   12a10:	subcs	r3, r3, r1, lsl #20
   12a14:	cmp	r3, r1, lsl #19
   12a18:	adc	r0, r0, r0
   12a1c:	subcs	r3, r3, r1, lsl #19
   12a20:	cmp	r3, r1, lsl #18
   12a24:	adc	r0, r0, r0
   12a28:	subcs	r3, r3, r1, lsl #18
   12a2c:	cmp	r3, r1, lsl #17
   12a30:	adc	r0, r0, r0
   12a34:	subcs	r3, r3, r1, lsl #17
   12a38:	cmp	r3, r1, lsl #16
   12a3c:	adc	r0, r0, r0
   12a40:	subcs	r3, r3, r1, lsl #16
   12a44:	cmp	r3, r1, lsl #15
   12a48:	adc	r0, r0, r0
   12a4c:	subcs	r3, r3, r1, lsl #15
   12a50:	cmp	r3, r1, lsl #14
   12a54:	adc	r0, r0, r0
   12a58:	subcs	r3, r3, r1, lsl #14
   12a5c:	cmp	r3, r1, lsl #13
   12a60:	adc	r0, r0, r0
   12a64:	subcs	r3, r3, r1, lsl #13
   12a68:	cmp	r3, r1, lsl #12
   12a6c:	adc	r0, r0, r0
   12a70:	subcs	r3, r3, r1, lsl #12
   12a74:	cmp	r3, r1, lsl #11
   12a78:	adc	r0, r0, r0
   12a7c:	subcs	r3, r3, r1, lsl #11
   12a80:	cmp	r3, r1, lsl #10
   12a84:	adc	r0, r0, r0
   12a88:	subcs	r3, r3, r1, lsl #10
   12a8c:	cmp	r3, r1, lsl #9
   12a90:	adc	r0, r0, r0
   12a94:	subcs	r3, r3, r1, lsl #9
   12a98:	cmp	r3, r1, lsl #8
   12a9c:	adc	r0, r0, r0
   12aa0:	subcs	r3, r3, r1, lsl #8
   12aa4:	cmp	r3, r1, lsl #7
   12aa8:	adc	r0, r0, r0
   12aac:	subcs	r3, r3, r1, lsl #7
   12ab0:	cmp	r3, r1, lsl #6
   12ab4:	adc	r0, r0, r0
   12ab8:	subcs	r3, r3, r1, lsl #6
   12abc:	cmp	r3, r1, lsl #5
   12ac0:	adc	r0, r0, r0
   12ac4:	subcs	r3, r3, r1, lsl #5
   12ac8:	cmp	r3, r1, lsl #4
   12acc:	adc	r0, r0, r0
   12ad0:	subcs	r3, r3, r1, lsl #4
   12ad4:	cmp	r3, r1, lsl #3
   12ad8:	adc	r0, r0, r0
   12adc:	subcs	r3, r3, r1, lsl #3
   12ae0:	cmp	r3, r1, lsl #2
   12ae4:	adc	r0, r0, r0
   12ae8:	subcs	r3, r3, r1, lsl #2
   12aec:	cmp	r3, r1, lsl #1
   12af0:	adc	r0, r0, r0
   12af4:	subcs	r3, r3, r1, lsl #1
   12af8:	cmp	r3, r1
   12afc:	adc	r0, r0, r0
   12b00:	subcs	r3, r3, r1
   12b04:	cmp	ip, #0
   12b08:	rsbmi	r0, r0, #0
   12b0c:	bx	lr
   12b10:	teq	ip, r0
   12b14:	rsbmi	r0, r0, #0
   12b18:	bx	lr
   12b1c:	movcc	r0, #0
   12b20:	asreq	r0, ip, #31
   12b24:	orreq	r0, r0, #1
   12b28:	bx	lr
   12b2c:	clz	r2, r1
   12b30:	rsb	r2, r2, #31
   12b34:	cmp	ip, #0
   12b38:	lsr	r0, r3, r2
   12b3c:	rsbmi	r0, r0, #0
   12b40:	bx	lr
   12b44:	cmp	r0, #0
   12b48:	mvngt	r0, #-2147483648	; 0x80000000
   12b4c:	movlt	r0, #-2147483648	; 0x80000000
   12b50:	b	12b74 <vetor_ordena@@Base+0x2f4>
   12b54:	cmp	r1, #0
   12b58:	beq	12b44 <vetor_ordena@@Base+0x2c4>
   12b5c:	push	{r0, r1, lr}
   12b60:	bl	1293c <vetor_ordena@@Base+0xbc>
   12b64:	pop	{r1, r2, lr}
   12b68:	mul	r3, r2, r0
   12b6c:	sub	r1, r1, r3
   12b70:	bx	lr
   12b74:	push	{r1, lr}
   12b78:	mov	r0, #8
   12b7c:	bl	10ea0 <raise@plt>
   12b80:	pop	{r1, pc}

00012b84 <__libc_csu_init@@Base>:
   12b84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b88:	mov	r7, r0
   12b8c:	ldr	r6, [pc, #72]	; 12bdc <__libc_csu_init@@Base+0x58>
   12b90:	ldr	r5, [pc, #72]	; 12be0 <__libc_csu_init@@Base+0x5c>
   12b94:	add	r6, pc, r6
   12b98:	add	r5, pc, r5
   12b9c:	sub	r6, r6, r5
   12ba0:	mov	r8, r1
   12ba4:	mov	r9, r2
   12ba8:	bl	10e74 <calloc@plt-0x20>
   12bac:	asrs	r6, r6, #2
   12bb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bb4:	mov	r4, #0
   12bb8:	add	r4, r4, #1
   12bbc:	ldr	r3, [r5], #4
   12bc0:	mov	r2, r9
   12bc4:	mov	r1, r8
   12bc8:	mov	r0, r7
   12bcc:	blx	r3
   12bd0:	cmp	r6, r4
   12bd4:	bne	12bb8 <__libc_csu_init@@Base+0x34>
   12bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bdc:	andeq	r0, r1, r4, ror r3
   12be0:	andeq	r0, r1, ip, ror #6

00012be4 <__libc_csu_fini@@Base>:
   12be4:	bx	lr

Disassembly of section .fini:

00012be8 <.fini>:
   12be8:	push	{r3, lr}
   12bec:	pop	{r3, pc}
