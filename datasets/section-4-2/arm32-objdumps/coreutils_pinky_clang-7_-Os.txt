
../repos/coreutils/src/pinky:     file format elf32-littlearm


Disassembly of section .init:

00011100 <.init>:
   11100:	push	{r3, lr}
   11104:	bl	11474 <putchar_unlocked@plt+0x48>
   11108:	pop	{r3, pc}

Disassembly of section .plt:

0001110c <calloc@plt-0x14>:
   1110c:	push	{lr}		; (str lr, [sp, #-4]!)
   11110:	ldr	lr, [pc, #4]	; 1111c <calloc@plt-0x4>
   11114:	add	lr, pc, lr
   11118:	ldr	pc, [lr, #8]!
   1111c:	andeq	r5, r1, r4, ror #29

00011120 <calloc@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #3812]!	; 0xee4

0001112c <fputs_unlocked@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #3804]!	; 0xedc

00011138 <raise@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #3796]!	; 0xed4

00011144 <getpwnam@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3788]!	; 0xecc

00011150 <strcmp@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3780]!	; 0xec4

0001115c <fflush@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #86016	; 0x15000
   11164:	ldr	pc, [ip, #3772]!	; 0xebc

00011168 <utmpxname@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #86016	; 0x15000
   11170:	ldr	pc, [ip, #3764]!	; 0xeb4

00011174 <free@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #86016	; 0x15000
   1117c:	ldr	pc, [ip, #3756]!	; 0xeac

00011180 <gai_strerror@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #86016	; 0x15000
   11188:	ldr	pc, [ip, #3748]!	; 0xea4

0001118c <_exit@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #86016	; 0x15000
   11194:	ldr	pc, [ip, #3740]!	; 0xe9c

00011198 <memcpy@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #86016	; 0x15000
   111a0:	ldr	pc, [ip, #3732]!	; 0xe94

000111a4 <mbsinit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #86016	; 0x15000
   111ac:	ldr	pc, [ip, #3724]!	; 0xe8c

000111b0 <time@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #86016	; 0x15000
   111b8:	ldr	pc, [ip, #3716]!	; 0xe84

000111bc <fwrite_unlocked@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #86016	; 0x15000
   111c4:	ldr	pc, [ip, #3708]!	; 0xe7c

000111c8 <memcmp@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #86016	; 0x15000
   111d0:	ldr	pc, [ip, #3700]!	; 0xe74

000111d4 <stpcpy@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #86016	; 0x15000
   111dc:	ldr	pc, [ip, #3692]!	; 0xe6c

000111e0 <dcgettext@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #86016	; 0x15000
   111e8:	ldr	pc, [ip, #3684]!	; 0xe64

000111ec <strdup@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #86016	; 0x15000
   111f4:	ldr	pc, [ip, #3676]!	; 0xe5c

000111f8 <setutxent@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #86016	; 0x15000
   11200:	ldr	pc, [ip, #3668]!	; 0xe54

00011204 <realloc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #86016	; 0x15000
   1120c:	ldr	pc, [ip, #3660]!	; 0xe4c

00011210 <textdomain@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #86016	; 0x15000
   11218:	ldr	pc, [ip, #3652]!	; 0xe44

0001121c <iswprint@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #86016	; 0x15000
   11224:	ldr	pc, [ip, #3644]!	; 0xe3c

00011228 <lseek64@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #86016	; 0x15000
   11230:	ldr	pc, [ip, #3636]!	; 0xe34

00011234 <__ctype_get_mb_cur_max@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #86016	; 0x15000
   1123c:	ldr	pc, [ip, #3628]!	; 0xe2c

00011240 <__fpending@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #86016	; 0x15000
   11248:	ldr	pc, [ip, #3620]!	; 0xe24

0001124c <ferror_unlocked@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #86016	; 0x15000
   11254:	ldr	pc, [ip, #3612]!	; 0xe1c

00011258 <mbrtowc@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #86016	; 0x15000
   11260:	ldr	pc, [ip, #3604]!	; 0xe14

00011264 <error@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #86016	; 0x15000
   1126c:	ldr	pc, [ip, #3596]!	; 0xe0c

00011270 <malloc@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #86016	; 0x15000
   11278:	ldr	pc, [ip, #3588]!	; 0xe04

0001127c <__libc_start_main@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #86016	; 0x15000
   11284:	ldr	pc, [ip, #3580]!	; 0xdfc

00011288 <strftime@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #86016	; 0x15000
   11290:	ldr	pc, [ip, #3572]!	; 0xdf4

00011294 <__freading@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #86016	; 0x15000
   1129c:	ldr	pc, [ip, #3564]!	; 0xdec

000112a0 <localtime@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #86016	; 0x15000
   112a8:	ldr	pc, [ip, #3556]!	; 0xde4

000112ac <__ctype_toupper_loc@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #86016	; 0x15000
   112b4:	ldr	pc, [ip, #3548]!	; 0xddc

000112b8 <__gmon_start__@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #86016	; 0x15000
   112c0:	ldr	pc, [ip, #3540]!	; 0xdd4

000112c4 <getopt_long@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #86016	; 0x15000
   112cc:	ldr	pc, [ip, #3532]!	; 0xdcc

000112d0 <kill@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #86016	; 0x15000
   112d8:	ldr	pc, [ip, #3524]!	; 0xdc4

000112dc <__ctype_b_loc@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #86016	; 0x15000
   112e4:	ldr	pc, [ip, #3516]!	; 0xdbc

000112e8 <exit@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #86016	; 0x15000
   112f0:	ldr	pc, [ip, #3508]!	; 0xdb4

000112f4 <strlen@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #86016	; 0x15000
   112fc:	ldr	pc, [ip, #3500]!	; 0xdac

00011300 <strchr@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #86016	; 0x15000
   11308:	ldr	pc, [ip, #3492]!	; 0xda4

0001130c <__errno_location@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #86016	; 0x15000
   11314:	ldr	pc, [ip, #3484]!	; 0xd9c

00011318 <__sprintf_chk@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #86016	; 0x15000
   11320:	ldr	pc, [ip, #3476]!	; 0xd94

00011324 <__cxa_atexit@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #86016	; 0x15000
   1132c:	ldr	pc, [ip, #3468]!	; 0xd8c

00011330 <memset@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #86016	; 0x15000
   11338:	ldr	pc, [ip, #3460]!	; 0xd84

0001133c <strncpy@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #86016	; 0x15000
   11344:	ldr	pc, [ip, #3452]!	; 0xd7c

00011348 <__printf_chk@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #86016	; 0x15000
   11350:	ldr	pc, [ip, #3444]!	; 0xd74

00011354 <fileno@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #86016	; 0x15000
   1135c:	ldr	pc, [ip, #3436]!	; 0xd6c

00011360 <__fprintf_chk@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #86016	; 0x15000
   11368:	ldr	pc, [ip, #3428]!	; 0xd64

0001136c <fclose@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #86016	; 0x15000
   11374:	ldr	pc, [ip, #3420]!	; 0xd5c

00011378 <fseeko64@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #86016	; 0x15000
   11380:	ldr	pc, [ip, #3412]!	; 0xd54

00011384 <endutxent@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #86016	; 0x15000
   1138c:	ldr	pc, [ip, #3404]!	; 0xd4c

00011390 <setlocale@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #86016	; 0x15000
   11398:	ldr	pc, [ip, #3396]!	; 0xd44

0001139c <strrchr@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #86016	; 0x15000
   113a4:	ldr	pc, [ip, #3388]!	; 0xd3c

000113a8 <nl_langinfo@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #86016	; 0x15000
   113b0:	ldr	pc, [ip, #3380]!	; 0xd34

000113b4 <fopen64@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #86016	; 0x15000
   113bc:	ldr	pc, [ip, #3372]!	; 0xd2c

000113c0 <freeaddrinfo@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #86016	; 0x15000
   113c8:	ldr	pc, [ip, #3364]!	; 0xd24

000113cc <getaddrinfo@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #86016	; 0x15000
   113d4:	ldr	pc, [ip, #3356]!	; 0xd1c

000113d8 <bindtextdomain@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #86016	; 0x15000
   113e0:	ldr	pc, [ip, #3348]!	; 0xd14

000113e4 <fread_unlocked@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #86016	; 0x15000
   113ec:	ldr	pc, [ip, #3340]!	; 0xd0c

000113f0 <__xstat64@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #86016	; 0x15000
   113f8:	ldr	pc, [ip, #3332]!	; 0xd04

000113fc <fputs@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #86016	; 0x15000
   11404:	ldr	pc, [ip, #3324]!	; 0xcfc

00011408 <strncmp@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #86016	; 0x15000
   11410:	ldr	pc, [ip, #3316]!	; 0xcf4

00011414 <abort@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #86016	; 0x15000
   1141c:	ldr	pc, [ip, #3308]!	; 0xcec

00011420 <getutxent@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #86016	; 0x15000
   11428:	ldr	pc, [ip, #3300]!	; 0xce4

0001142c <putchar_unlocked@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #86016	; 0x15000
   11434:	ldr	pc, [ip, #3292]!	; 0xcdc

Disassembly of section .text:

00011438 <.text>:
   11438:	mov	fp, #0
   1143c:	mov	lr, #0
   11440:	pop	{r1}		; (ldr r1, [sp], #4)
   11444:	mov	r2, sp
   11448:	push	{r2}		; (str r2, [sp, #-4]!)
   1144c:	push	{r0}		; (str r0, [sp, #-4]!)
   11450:	ldr	ip, [pc, #16]	; 11468 <putchar_unlocked@plt+0x3c>
   11454:	push	{ip}		; (str ip, [sp, #-4]!)
   11458:	ldr	r0, [pc, #12]	; 1146c <putchar_unlocked@plt+0x40>
   1145c:	ldr	r3, [pc, #12]	; 11470 <putchar_unlocked@plt+0x44>
   11460:	bl	1127c <__libc_start_main@plt>
   11464:	bl	11414 <abort@plt>
   11468:	andeq	r5, r1, r8, asr r5
   1146c:	muleq	r1, r0, r7
   11470:	strdeq	r5, [r1], -r8
   11474:	ldr	r3, [pc, #20]	; 11490 <putchar_unlocked@plt+0x64>
   11478:	ldr	r2, [pc, #20]	; 11494 <putchar_unlocked@plt+0x68>
   1147c:	add	r3, pc, r3
   11480:	ldr	r2, [r3, r2]
   11484:	cmp	r2, #0
   11488:	bxeq	lr
   1148c:	b	112b8 <__gmon_start__@plt>
   11490:	andeq	r5, r1, ip, ror fp
   11494:	andeq	r0, r0, r4, lsl r1
   11498:	ldr	r0, [pc, #24]	; 114b8 <putchar_unlocked@plt+0x8c>
   1149c:	ldr	r3, [pc, #24]	; 114bc <putchar_unlocked@plt+0x90>
   114a0:	cmp	r3, r0
   114a4:	bxeq	lr
   114a8:	ldr	r3, [pc, #16]	; 114c0 <putchar_unlocked@plt+0x94>
   114ac:	cmp	r3, #0
   114b0:	bxeq	lr
   114b4:	bx	r3
   114b8:	andeq	r7, r2, r8, ror #2
   114bc:	andeq	r7, r2, r8, ror #2
   114c0:	andeq	r0, r0, r0
   114c4:	ldr	r0, [pc, #36]	; 114f0 <putchar_unlocked@plt+0xc4>
   114c8:	ldr	r1, [pc, #36]	; 114f4 <putchar_unlocked@plt+0xc8>
   114cc:	sub	r1, r1, r0
   114d0:	asr	r1, r1, #2
   114d4:	add	r1, r1, r1, lsr #31
   114d8:	asrs	r1, r1, #1
   114dc:	bxeq	lr
   114e0:	ldr	r3, [pc, #16]	; 114f8 <putchar_unlocked@plt+0xcc>
   114e4:	cmp	r3, #0
   114e8:	bxeq	lr
   114ec:	bx	r3
   114f0:	andeq	r7, r2, r8, ror #2
   114f4:	andeq	r7, r2, r8, ror #2
   114f8:	andeq	r0, r0, r0
   114fc:	push	{r4, lr}
   11500:	ldr	r4, [pc, #24]	; 11520 <putchar_unlocked@plt+0xf4>
   11504:	ldrb	r3, [r4]
   11508:	cmp	r3, #0
   1150c:	popne	{r4, pc}
   11510:	bl	11498 <putchar_unlocked@plt+0x6c>
   11514:	mov	r3, #1
   11518:	strb	r3, [r4]
   1151c:	pop	{r4, pc}
   11520:	andeq	r7, r2, r0, lsl #3
   11524:	b	114c4 <putchar_unlocked@plt+0x98>
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #56	; 0x38
   11534:	mov	r8, r0
   11538:	cmp	r0, #0
   1153c:	bne	11750 <putchar_unlocked@plt+0x324>
   11540:	movw	r1, #21947	; 0x55bb
   11544:	mov	r0, #0
   11548:	mov	r2, #5
   1154c:	movt	r1, #1
   11550:	bl	111e0 <dcgettext@plt>
   11554:	mov	r1, r0
   11558:	movw	r0, #29172	; 0x71f4
   1155c:	movt	r0, #2
   11560:	ldr	r2, [r0]
   11564:	mov	r0, #1
   11568:	bl	11348 <__printf_chk@plt>
   1156c:	movw	r1, #21980	; 0x55dc
   11570:	mov	r0, #0
   11574:	mov	r2, #5
   11578:	movt	r1, #1
   1157c:	bl	111e0 <dcgettext@plt>
   11580:	movw	r9, #29052	; 0x717c
   11584:	movt	r9, #2
   11588:	ldr	r1, [r9]
   1158c:	bl	1112c <fputs_unlocked@plt>
   11590:	movw	r1, #22308	; 0x5724
   11594:	mov	r0, #0
   11598:	mov	r2, #5
   1159c:	movt	r1, #1
   115a0:	bl	111e0 <dcgettext@plt>
   115a4:	ldr	r1, [r9]
   115a8:	bl	1112c <fputs_unlocked@plt>
   115ac:	movw	r1, #22617	; 0x5859
   115b0:	mov	r0, #0
   115b4:	mov	r2, #5
   115b8:	movt	r1, #1
   115bc:	bl	111e0 <dcgettext@plt>
   115c0:	ldr	r1, [r9]
   115c4:	bl	1112c <fputs_unlocked@plt>
   115c8:	movw	r1, #22662	; 0x5886
   115cc:	mov	r0, #0
   115d0:	mov	r2, #5
   115d4:	movt	r1, #1
   115d8:	bl	111e0 <dcgettext@plt>
   115dc:	ldr	r1, [r9]
   115e0:	bl	1112c <fputs_unlocked@plt>
   115e4:	movw	r1, #22716	; 0x58bc
   115e8:	mov	r0, #0
   115ec:	mov	r2, #5
   115f0:	movt	r1, #1
   115f4:	bl	111e0 <dcgettext@plt>
   115f8:	movw	r2, #22801	; 0x5911
   115fc:	mov	r1, r0
   11600:	mov	r0, #1
   11604:	movt	r2, #1
   11608:	bl	11348 <__printf_chk@plt>
   1160c:	movw	r0, #23616	; 0x5c40
   11610:	mov	r6, sp
   11614:	movt	r0, #1
   11618:	mov	r1, r6
   1161c:	ldm	r0!, {r2, r3, r4, r5}
   11620:	stmia	r1!, {r2, r3, r4, r5}
   11624:	ldm	r0!, {r2, r3, r4, r5, r7}
   11628:	stmia	r1!, {r2, r3, r4, r5, r7}
   1162c:	ldm	r0, {r2, r3, r4, r5, r7}
   11630:	stm	r1, {r2, r3, r4, r5, r7}
   11634:	movw	r1, #22982	; 0x59c6
   11638:	movw	r5, #22815	; 0x591f
   1163c:	movt	r1, #1
   11640:	movt	r5, #1
   11644:	mov	r0, r5
   11648:	bl	11150 <strcmp@plt>
   1164c:	cmp	r0, #0
   11650:	ldrne	r1, [r6, #8]!
   11654:	cmpne	r1, #0
   11658:	bne	11644 <putchar_unlocked@plt+0x218>
   1165c:	ldr	r6, [r6, #4]
   11660:	movw	r1, #23077	; 0x5a25
   11664:	mov	r0, #0
   11668:	mov	r2, #5
   1166c:	movt	r1, #1
   11670:	bl	111e0 <dcgettext@plt>
   11674:	movw	r2, #22855	; 0x5947
   11678:	movw	r3, #23100	; 0x5a3c
   1167c:	mov	r1, r0
   11680:	mov	r0, #1
   11684:	movt	r2, #1
   11688:	movt	r3, #1
   1168c:	bl	11348 <__printf_chk@plt>
   11690:	cmp	r6, #0
   11694:	mov	r0, #5
   11698:	mov	r1, #0
   1169c:	moveq	r6, r5
   116a0:	bl	11390 <setlocale@plt>
   116a4:	cmp	r0, #0
   116a8:	beq	116e0 <putchar_unlocked@plt+0x2b4>
   116ac:	movw	r1, #23140	; 0x5a64
   116b0:	mov	r2, #3
   116b4:	movt	r1, #1
   116b8:	bl	11408 <strncmp@plt>
   116bc:	cmp	r0, #0
   116c0:	beq	116e0 <putchar_unlocked@plt+0x2b4>
   116c4:	movw	r1, #23144	; 0x5a68
   116c8:	mov	r0, #0
   116cc:	mov	r2, #5
   116d0:	movt	r1, #1
   116d4:	bl	111e0 <dcgettext@plt>
   116d8:	ldr	r1, [r9]
   116dc:	bl	1112c <fputs_unlocked@plt>
   116e0:	movw	r1, #23215	; 0x5aaf
   116e4:	mov	r0, #0
   116e8:	mov	r2, #5
   116ec:	movt	r1, #1
   116f0:	bl	111e0 <dcgettext@plt>
   116f4:	movw	r2, #23100	; 0x5a3c
   116f8:	mov	r1, r0
   116fc:	mov	r0, #1
   11700:	mov	r3, r5
   11704:	movt	r2, #1
   11708:	bl	11348 <__printf_chk@plt>
   1170c:	movw	r1, #23242	; 0x5aca
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	111e0 <dcgettext@plt>
   11720:	movw	r3, #23292	; 0x5afc
   11724:	mov	r1, r0
   11728:	movw	r0, #23010	; 0x59e2
   1172c:	cmp	r6, r5
   11730:	mov	r2, r6
   11734:	movt	r0, #1
   11738:	movt	r3, #1
   1173c:	moveq	r3, r0
   11740:	mov	r0, #1
   11744:	bl	11348 <__printf_chk@plt>
   11748:	mov	r0, r8
   1174c:	bl	112e8 <exit@plt>
   11750:	movw	r0, #29048	; 0x7178
   11754:	movw	r1, #21908	; 0x5594
   11758:	mov	r2, #5
   1175c:	movt	r0, #2
   11760:	movt	r1, #1
   11764:	ldr	r5, [r0]
   11768:	mov	r0, #0
   1176c:	bl	111e0 <dcgettext@plt>
   11770:	mov	r2, r0
   11774:	movw	r0, #29172	; 0x71f4
   11778:	mov	r1, #1
   1177c:	movt	r0, #2
   11780:	ldr	r3, [r0]
   11784:	mov	r0, r5
   11788:	bl	11360 <__fprintf_chk@plt>
   1178c:	b	11748 <putchar_unlocked@plt+0x31c>
   11790:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11794:	add	fp, sp, #28
   11798:	sub	sp, sp, #28
   1179c:	sub	sp, sp, #1024	; 0x400
   117a0:	mov	r4, r0
   117a4:	ldr	r0, [r1]
   117a8:	mov	r5, r1
   117ac:	bl	12a0c <putchar_unlocked@plt+0x15e0>
   117b0:	movw	r1, #23292	; 0x5afc
   117b4:	mov	r0, #6
   117b8:	movt	r1, #1
   117bc:	bl	11390 <setlocale@plt>
   117c0:	movw	r6, #22859	; 0x594b
   117c4:	movw	r1, #22821	; 0x5925
   117c8:	movt	r6, #1
   117cc:	movt	r1, #1
   117d0:	mov	r0, r6
   117d4:	bl	113d8 <bindtextdomain@plt>
   117d8:	mov	r0, r6
   117dc:	bl	11210 <textdomain@plt>
   117e0:	movw	r0, #9792	; 0x2640
   117e4:	movt	r0, #1
   117e8:	bl	1555c <putchar_unlocked@plt+0x4130>
   117ec:	movw	r8, #22845	; 0x593d
   117f0:	movw	sl, #23568	; 0x5c10
   117f4:	movw	r9, #29062	; 0x7186
   117f8:	mov	r6, #0
   117fc:	mov	r7, #1
   11800:	movt	r8, #1
   11804:	movt	sl, #1
   11808:	movt	r9, #2
   1180c:	b	1190c <putchar_unlocked@plt+0x4e0>
   11810:	sub	r0, r0, #98	; 0x62
   11814:	cmp	r0, #21
   11818:	bhi	11d84 <putchar_unlocked@plt+0x958>
   1181c:	add	r1, pc, #0
   11820:	ldr	pc, [r1, r0, lsl #2]
   11824:	andeq	r1, r1, ip, ror r8
   11828:	andeq	r1, r1, r4, lsl #27
   1182c:	andeq	r1, r1, r4, lsl #27
   11830:	andeq	r1, r1, r4, lsl #27
   11834:			; <UNDEFINED> instruction: 0x000118bc
   11838:	andeq	r1, r1, r4, lsl #27
   1183c:	andeq	r1, r1, ip, lsl #17
   11840:	andeq	r1, r1, ip, ror #17
   11844:	andeq	r1, r1, r4, lsl #27
   11848:	andeq	r1, r1, r4, lsl #27
   1184c:	andeq	r1, r1, ip, asr #17
   11850:	andeq	r1, r1, r4, lsl #27
   11854:	andeq	r1, r1, r4, lsl #27
   11858:	andeq	r1, r1, r4, lsl #27
   1185c:	ldrdeq	r1, [r1], -ip
   11860:	muleq	r1, ip, r8
   11864:	andeq	r1, r1, r4, lsl #27
   11868:	andeq	r1, r1, r0, lsl #18
   1186c:	andeq	r1, r1, r4, lsl #27
   11870:	andeq	r1, r1, r4, lsl #27
   11874:	andeq	r1, r1, r4, lsl #27
   11878:	strdeq	r1, [r1], -r8
   1187c:	movw	r0, #29067	; 0x718b
   11880:	movt	r0, #2
   11884:	strb	r7, [r0]
   11888:	b	1190c <putchar_unlocked@plt+0x4e0>
   1188c:	movw	r0, #29065	; 0x7189
   11890:	movt	r0, #2
   11894:	strb	r7, [r0]
   11898:	b	1190c <putchar_unlocked@plt+0x4e0>
   1189c:	movw	r0, #29063	; 0x7187
   118a0:	strb	r7, [r9]
   118a4:	movt	r0, #2
   118a8:	strb	r7, [r0]
   118ac:	movw	r0, #29064	; 0x7188
   118b0:	movt	r0, #2
   118b4:	strb	r7, [r0]
   118b8:	b	1190c <putchar_unlocked@plt+0x4e0>
   118bc:	movw	r0, #29061	; 0x7185
   118c0:	movt	r0, #2
   118c4:	strb	r7, [r0]
   118c8:	b	1190c <putchar_unlocked@plt+0x4e0>
   118cc:	movw	r0, #29060	; 0x7184
   118d0:	movt	r0, #2
   118d4:	strb	r7, [r0]
   118d8:	b	1190c <putchar_unlocked@plt+0x4e0>
   118dc:	movw	r0, #29066	; 0x718a
   118e0:	movt	r0, #2
   118e4:	strb	r7, [r0]
   118e8:	b	1190c <putchar_unlocked@plt+0x4e0>
   118ec:	movw	r0, #29063	; 0x7187
   118f0:	movt	r0, #2
   118f4:	strb	r7, [r0]
   118f8:	strb	r7, [r9]
   118fc:	b	1190c <putchar_unlocked@plt+0x4e0>
   11900:	movw	r0, #29060	; 0x7184
   11904:	movt	r0, #2
   11908:	strb	r6, [r0]
   1190c:	mov	r0, r4
   11910:	mov	r1, r5
   11914:	mov	r2, r8
   11918:	mov	r3, sl
   1191c:	str	r6, [sp]
   11920:	bl	112c4 <getopt_long@plt>
   11924:	cmp	r0, #97	; 0x61
   11928:	bgt	11810 <putchar_unlocked@plt+0x3e4>
   1192c:	cmn	r0, #1
   11930:	bne	11cec <putchar_unlocked@plt+0x8c0>
   11934:	movw	r0, #29040	; 0x7170
   11938:	movw	r1, #29060	; 0x7184
   1193c:	movt	r0, #2
   11940:	movt	r1, #2
   11944:	ldr	r0, [r0]
   11948:	ldrb	r1, [r1]
   1194c:	sub	sl, r4, r0
   11950:	cmp	r1, #1
   11954:	cmpeq	sl, #0
   11958:	beq	11d60 <putchar_unlocked@plt+0x934>
   1195c:	add	r0, r5, r0, lsl #2
   11960:	cmp	r1, #0
   11964:	str	r0, [sp, #20]
   11968:	beq	11d8c <putchar_unlocked@plt+0x960>
   1196c:	cmp	sl, #1
   11970:	blt	11ce0 <putchar_unlocked@plt+0x8b4>
   11974:	movw	r7, #23718	; 0x5ca6
   11978:	movw	r5, #29052	; 0x717c
   1197c:	add	r9, sp, #24
   11980:	mov	r4, #0
   11984:	str	sl, [sp, #16]
   11988:	movt	r7, #1
   1198c:	movt	r5, #2
   11990:	ldr	r0, [sp, #20]
   11994:	ldr	r6, [r0, r4, lsl #2]
   11998:	mov	r0, r6
   1199c:	bl	11144 <getpwnam@plt>
   119a0:	movw	r1, #23473	; 0x5bb1
   119a4:	mov	r8, r0
   119a8:	mov	r0, #0
   119ac:	mov	r2, #5
   119b0:	movt	r1, #1
   119b4:	bl	111e0 <dcgettext@plt>
   119b8:	mov	r1, r0
   119bc:	mov	r0, #1
   119c0:	bl	11348 <__printf_chk@plt>
   119c4:	movw	r1, #23486	; 0x5bbe
   119c8:	mov	r0, #1
   119cc:	mov	r2, r6
   119d0:	movt	r1, #1
   119d4:	bl	11348 <__printf_chk@plt>
   119d8:	movw	r1, #23492	; 0x5bc4
   119dc:	mov	r0, #0
   119e0:	mov	r2, #5
   119e4:	movt	r1, #1
   119e8:	bl	111e0 <dcgettext@plt>
   119ec:	mov	r1, r0
   119f0:	mov	r0, #1
   119f4:	bl	11348 <__printf_chk@plt>
   119f8:	cmp	r8, #0
   119fc:	beq	11cb0 <putchar_unlocked@plt+0x884>
   11a00:	ldr	r6, [r8, #16]
   11a04:	mov	r1, #44	; 0x2c
   11a08:	mov	r0, r6
   11a0c:	bl	11300 <strchr@plt>
   11a10:	cmp	r0, #0
   11a14:	movne	r1, #0
   11a18:	strbne	r1, [r0]
   11a1c:	ldrne	r6, [r8, #16]
   11a20:	ldr	r1, [r8]
   11a24:	mov	r0, r6
   11a28:	bl	12464 <putchar_unlocked@plt+0x1038>
   11a2c:	mov	r6, r0
   11a30:	mov	r0, #1
   11a34:	mov	r1, r7
   11a38:	mov	r2, r6
   11a3c:	bl	11348 <__printf_chk@plt>
   11a40:	mov	r0, r6
   11a44:	bl	12820 <putchar_unlocked@plt+0x13f4>
   11a48:	mov	r0, #10
   11a4c:	bl	1142c <putchar_unlocked@plt>
   11a50:	movw	r0, #29067	; 0x718b
   11a54:	movt	r0, #2
   11a58:	ldrb	r0, [r0]
   11a5c:	cmp	r0, #0
   11a60:	bne	11ad0 <putchar_unlocked@plt+0x6a4>
   11a64:	movw	r1, #23512	; 0x5bd8
   11a68:	mov	r0, #0
   11a6c:	mov	r2, #5
   11a70:	movt	r1, #1
   11a74:	bl	111e0 <dcgettext@plt>
   11a78:	mov	r1, r0
   11a7c:	mov	r0, #1
   11a80:	bl	11348 <__printf_chk@plt>
   11a84:	ldr	r2, [r8, #20]
   11a88:	movw	r1, #23524	; 0x5be4
   11a8c:	mov	r0, #1
   11a90:	movt	r1, #1
   11a94:	bl	11348 <__printf_chk@plt>
   11a98:	movw	r1, #23530	; 0x5bea
   11a9c:	mov	r0, #0
   11aa0:	mov	r2, #5
   11aa4:	movt	r1, #1
   11aa8:	bl	111e0 <dcgettext@plt>
   11aac:	mov	r1, r0
   11ab0:	mov	r0, #1
   11ab4:	bl	11348 <__printf_chk@plt>
   11ab8:	ldr	r2, [r8, #24]
   11abc:	mov	r0, #1
   11ac0:	mov	r1, r7
   11ac4:	bl	11348 <__printf_chk@plt>
   11ac8:	mov	r0, #10
   11acc:	bl	1142c <putchar_unlocked@plt>
   11ad0:	movw	r0, #29065	; 0x7189
   11ad4:	movt	r0, #2
   11ad8:	ldrb	r0, [r0]
   11adc:	cmp	r0, #0
   11ae0:	bne	11bbc <putchar_unlocked@plt+0x790>
   11ae4:	ldr	r0, [r8, #20]
   11ae8:	bl	112f4 <strlen@plt>
   11aec:	add	r0, r0, #10
   11af0:	bl	14c30 <putchar_unlocked@plt+0x3804>
   11af4:	ldr	r1, [r8, #20]
   11af8:	mov	r6, r0
   11afc:	bl	111d4 <stpcpy@plt>
   11b00:	movw	r1, #23672	; 0x5c78
   11b04:	movt	r1, #1
   11b08:	vldr	d16, [r1]
   11b0c:	mov	r1, #116	; 0x74
   11b10:	strh	r1, [r0, #8]
   11b14:	movw	r1, #23713	; 0x5ca1
   11b18:	movt	r1, #1
   11b1c:	vst1.8	{d16}, [r0]
   11b20:	mov	r0, r6
   11b24:	bl	113b4 <fopen64@plt>
   11b28:	cmp	r0, #0
   11b2c:	beq	11bac <putchar_unlocked@plt+0x780>
   11b30:	movw	r1, #23538	; 0x5bf2
   11b34:	mov	r7, r0
   11b38:	mov	r0, #0
   11b3c:	mov	r2, #5
   11b40:	movt	r1, #1
   11b44:	bl	111e0 <dcgettext@plt>
   11b48:	mov	r1, r0
   11b4c:	mov	r0, #1
   11b50:	bl	11348 <__printf_chk@plt>
   11b54:	mov	r0, r9
   11b58:	mov	r1, #1
   11b5c:	mov	r2, #1024	; 0x400
   11b60:	mov	r3, r7
   11b64:	bl	113e4 <fread_unlocked@plt>
   11b68:	cmp	r0, #0
   11b6c:	beq	11ba4 <putchar_unlocked@plt+0x778>
   11b70:	mov	r2, r0
   11b74:	ldr	r3, [r5]
   11b78:	mov	r0, r9
   11b7c:	mov	r1, #1
   11b80:	bl	111bc <fwrite_unlocked@plt>
   11b84:	mov	r0, r9
   11b88:	mov	r1, #1
   11b8c:	mov	r2, #1024	; 0x400
   11b90:	mov	r3, r7
   11b94:	bl	113e4 <fread_unlocked@plt>
   11b98:	mov	r2, r0
   11b9c:	cmp	r0, #0
   11ba0:	bne	11b74 <putchar_unlocked@plt+0x748>
   11ba4:	mov	r0, r7
   11ba8:	bl	12728 <putchar_unlocked@plt+0x12fc>
   11bac:	mov	r0, r6
   11bb0:	bl	12820 <putchar_unlocked@plt+0x13f4>
   11bb4:	movw	r7, #23718	; 0x5ca6
   11bb8:	movt	r7, #1
   11bbc:	movw	r0, #29066	; 0x718a
   11bc0:	movt	r0, #2
   11bc4:	ldrb	r0, [r0]
   11bc8:	cmp	r0, #0
   11bcc:	bne	11ca4 <putchar_unlocked@plt+0x878>
   11bd0:	ldr	r0, [r8, #20]
   11bd4:	bl	112f4 <strlen@plt>
   11bd8:	add	r0, r0, #7
   11bdc:	bl	14c30 <putchar_unlocked@plt+0x3804>
   11be0:	ldr	r1, [r8, #20]
   11be4:	mov	sl, r0
   11be8:	bl	111d4 <stpcpy@plt>
   11bec:	movw	r1, #23548	; 0x5bfc
   11bf0:	mov	r2, #7
   11bf4:	movt	r1, #1
   11bf8:	bl	11198 <memcpy@plt>
   11bfc:	movw	r1, #23713	; 0x5ca1
   11c00:	mov	r0, sl
   11c04:	movt	r1, #1
   11c08:	bl	113b4 <fopen64@plt>
   11c0c:	cmp	r0, #0
   11c10:	beq	11c90 <putchar_unlocked@plt+0x864>
   11c14:	movw	r1, #23555	; 0x5c03
   11c18:	mov	r6, r0
   11c1c:	mov	r0, #0
   11c20:	mov	r2, #5
   11c24:	movt	r1, #1
   11c28:	bl	111e0 <dcgettext@plt>
   11c2c:	mov	r1, r0
   11c30:	mov	r0, #1
   11c34:	bl	11348 <__printf_chk@plt>
   11c38:	mov	r0, r9
   11c3c:	mov	r1, #1
   11c40:	mov	r2, #1024	; 0x400
   11c44:	mov	r3, r6
   11c48:	bl	113e4 <fread_unlocked@plt>
   11c4c:	cmp	r0, #0
   11c50:	beq	11c88 <putchar_unlocked@plt+0x85c>
   11c54:	mov	r2, r0
   11c58:	ldr	r3, [r5]
   11c5c:	mov	r0, r9
   11c60:	mov	r1, #1
   11c64:	bl	111bc <fwrite_unlocked@plt>
   11c68:	mov	r0, r9
   11c6c:	mov	r1, #1
   11c70:	mov	r2, #1024	; 0x400
   11c74:	mov	r3, r6
   11c78:	bl	113e4 <fread_unlocked@plt>
   11c7c:	mov	r2, r0
   11c80:	cmp	r0, #0
   11c84:	bne	11c58 <putchar_unlocked@plt+0x82c>
   11c88:	mov	r0, r6
   11c8c:	bl	12728 <putchar_unlocked@plt+0x12fc>
   11c90:	mov	r0, sl
   11c94:	bl	12820 <putchar_unlocked@plt+0x13f4>
   11c98:	ldr	sl, [sp, #16]
   11c9c:	movw	r7, #23718	; 0x5ca6
   11ca0:	movt	r7, #1
   11ca4:	mov	r0, #10
   11ca8:	bl	1142c <putchar_unlocked@plt>
   11cac:	b	11cd4 <putchar_unlocked@plt+0x8a8>
   11cb0:	movw	r1, #23507	; 0x5bd3
   11cb4:	mov	r0, #0
   11cb8:	mov	r2, #5
   11cbc:	movt	r1, #1
   11cc0:	bl	111e0 <dcgettext@plt>
   11cc4:	mov	r2, r0
   11cc8:	mov	r0, #1
   11ccc:	mov	r1, r7
   11cd0:	bl	11348 <__printf_chk@plt>
   11cd4:	add	r4, r4, #1
   11cd8:	cmp	r4, sl
   11cdc:	bne	11990 <putchar_unlocked@plt+0x564>
   11ce0:	mov	r0, #0
   11ce4:	sub	sp, fp, #28
   11ce8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cec:	cmn	r0, #3
   11cf0:	bne	11d50 <putchar_unlocked@plt+0x924>
   11cf4:	movw	r0, #28960	; 0x7120
   11cf8:	movw	r2, #22902	; 0x5976
   11cfc:	movw	r7, #22886	; 0x5966
   11d00:	movw	r6, #22869	; 0x5955
   11d04:	mov	r1, #0
   11d08:	movt	r0, #2
   11d0c:	movt	r2, #1
   11d10:	movt	r7, #1
   11d14:	movt	r6, #1
   11d18:	ldr	r3, [r0]
   11d1c:	movw	r0, #29052	; 0x717c
   11d20:	movt	r0, #2
   11d24:	ldr	r0, [r0]
   11d28:	stm	sp, {r6, r7}
   11d2c:	str	r2, [sp, #8]
   11d30:	movw	r2, #22855	; 0x5947
   11d34:	str	r1, [sp, #12]
   11d38:	movw	r1, #22815	; 0x591f
   11d3c:	movt	r1, #1
   11d40:	movt	r2, #1
   11d44:	bl	14b28 <putchar_unlocked@plt+0x36fc>
   11d48:	mov	r0, #0
   11d4c:	bl	112e8 <exit@plt>
   11d50:	cmn	r0, #2
   11d54:	bne	11d84 <putchar_unlocked@plt+0x958>
   11d58:	mov	r0, #0
   11d5c:	bl	11528 <putchar_unlocked@plt+0xfc>
   11d60:	movw	r1, #22914	; 0x5982
   11d64:	mov	r0, #0
   11d68:	mov	r2, #5
   11d6c:	movt	r1, #1
   11d70:	bl	111e0 <dcgettext@plt>
   11d74:	mov	r2, r0
   11d78:	mov	r0, #0
   11d7c:	mov	r1, #0
   11d80:	bl	11264 <error@plt>
   11d84:	mov	r0, #1
   11d88:	bl	11528 <putchar_unlocked@plt+0xfc>
   11d8c:	ldr	r1, [sp, #20]
   11d90:	mov	r0, sl
   11d94:	bl	11d98 <putchar_unlocked@plt+0x96c>
   11d98:	push	{fp, lr}
   11d9c:	mov	fp, sp
   11da0:	sub	sp, sp, #8
   11da4:	mov	r5, r0
   11da8:	mov	r0, #0
   11dac:	mov	r4, r1
   11db0:	add	r1, sp, #4
   11db4:	mov	r2, sp
   11db8:	mov	r3, #0
   11dbc:	str	r0, [sp]
   11dc0:	movw	r0, #22801	; 0x5911
   11dc4:	movt	r0, #1
   11dc8:	bl	145b0 <putchar_unlocked@plt+0x3184>
   11dcc:	cmp	r0, #0
   11dd0:	bne	11df0 <putchar_unlocked@plt+0x9c4>
   11dd4:	ldr	r1, [sp]
   11dd8:	ldr	r0, [sp, #4]
   11ddc:	mov	r2, r5
   11de0:	mov	r3, r4
   11de4:	bl	11e24 <putchar_unlocked@plt+0x9f8>
   11de8:	mov	r0, #0
   11dec:	bl	112e8 <exit@plt>
   11df0:	bl	1130c <__errno_location@plt>
   11df4:	ldr	r4, [r0]
   11df8:	movw	r2, #22801	; 0x5911
   11dfc:	mov	r0, #0
   11e00:	mov	r1, #3
   11e04:	movt	r2, #1
   11e08:	bl	1427c <putchar_unlocked@plt+0x2e50>
   11e0c:	movw	r2, #23719	; 0x5ca7
   11e10:	mov	r3, r0
   11e14:	mov	r0, #1
   11e18:	mov	r1, r4
   11e1c:	movt	r2, #1
   11e20:	bl	11264 <error@plt>
   11e24:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11e28:	add	fp, sp, #24
   11e2c:	mov	r7, r0
   11e30:	mov	r0, #2
   11e34:	mov	r8, r3
   11e38:	mov	r9, r2
   11e3c:	mov	r4, r1
   11e40:	bl	128ec <putchar_unlocked@plt+0x14c0>
   11e44:	movw	r1, #23306	; 0x5b0a
   11e48:	movw	r2, #23321	; 0x5b19
   11e4c:	cmp	r0, #0
   11e50:	movw	r0, #29068	; 0x718c
   11e54:	movw	r6, #29072	; 0x7190
   11e58:	movt	r1, #1
   11e5c:	movt	r2, #1
   11e60:	movt	r0, #2
   11e64:	movt	r6, #2
   11e68:	movne	r2, r1
   11e6c:	str	r2, [r0]
   11e70:	mov	r0, #12
   11e74:	movwne	r0, #16
   11e78:	str	r0, [r6]
   11e7c:	movw	r0, #29061	; 0x7185
   11e80:	movt	r0, #2
   11e84:	ldrb	r0, [r0]
   11e88:	cmp	r0, #0
   11e8c:	bne	11fcc <putchar_unlocked@plt+0xba0>
   11e90:	movw	r1, #23338	; 0x5b2a
   11e94:	mov	r0, #0
   11e98:	mov	r2, #5
   11e9c:	movt	r1, #1
   11ea0:	bl	111e0 <dcgettext@plt>
   11ea4:	movw	r1, #23333	; 0x5b25
   11ea8:	mov	r2, r0
   11eac:	mov	r0, #1
   11eb0:	movt	r1, #1
   11eb4:	bl	11348 <__printf_chk@plt>
   11eb8:	movw	r0, #29062	; 0x7186
   11ebc:	movt	r0, #2
   11ec0:	ldrb	r0, [r0]
   11ec4:	cmp	r0, #0
   11ec8:	bne	11ef4 <putchar_unlocked@plt+0xac8>
   11ecc:	movw	r1, #23351	; 0x5b37
   11ed0:	mov	r0, #0
   11ed4:	mov	r2, #5
   11ed8:	movt	r1, #1
   11edc:	bl	111e0 <dcgettext@plt>
   11ee0:	movw	r1, #23344	; 0x5b30
   11ee4:	mov	r2, r0
   11ee8:	mov	r0, #1
   11eec:	movt	r1, #1
   11ef0:	bl	11348 <__printf_chk@plt>
   11ef4:	movw	r1, #23362	; 0x5b42
   11ef8:	mov	r0, #0
   11efc:	mov	r2, #5
   11f00:	movt	r1, #1
   11f04:	bl	111e0 <dcgettext@plt>
   11f08:	movw	r1, #23356	; 0x5b3c
   11f0c:	mov	r2, r0
   11f10:	mov	r0, #1
   11f14:	movt	r1, #1
   11f18:	bl	11348 <__printf_chk@plt>
   11f1c:	movw	r0, #29064	; 0x7188
   11f20:	movt	r0, #2
   11f24:	ldrb	r0, [r0]
   11f28:	cmp	r0, #0
   11f2c:	bne	11f58 <putchar_unlocked@plt+0xb2c>
   11f30:	movw	r1, #23373	; 0x5b4d
   11f34:	mov	r0, #0
   11f38:	mov	r2, #5
   11f3c:	movt	r1, #1
   11f40:	bl	111e0 <dcgettext@plt>
   11f44:	movw	r1, #23367	; 0x5b47
   11f48:	mov	r2, r0
   11f4c:	mov	r0, #1
   11f50:	movt	r1, #1
   11f54:	bl	11348 <__printf_chk@plt>
   11f58:	ldr	r6, [r6]
   11f5c:	movw	r1, #23384	; 0x5b58
   11f60:	mov	r0, #0
   11f64:	mov	r2, #5
   11f68:	movt	r1, #1
   11f6c:	bl	111e0 <dcgettext@plt>
   11f70:	movw	r1, #23378	; 0x5b52
   11f74:	mov	r3, r0
   11f78:	mov	r0, #1
   11f7c:	mov	r2, r6
   11f80:	movt	r1, #1
   11f84:	bl	11348 <__printf_chk@plt>
   11f88:	movw	r0, #29063	; 0x7187
   11f8c:	movt	r0, #2
   11f90:	ldrb	r0, [r0]
   11f94:	cmp	r0, #0
   11f98:	bne	11fc4 <putchar_unlocked@plt+0xb98>
   11f9c:	movw	r1, #23389	; 0x5b5d
   11fa0:	mov	r0, #0
   11fa4:	mov	r2, #5
   11fa8:	movt	r1, #1
   11fac:	bl	111e0 <dcgettext@plt>
   11fb0:	movw	r1, #23718	; 0x5ca6
   11fb4:	mov	r2, r0
   11fb8:	mov	r0, #1
   11fbc:	movt	r1, #1
   11fc0:	bl	11348 <__printf_chk@plt>
   11fc4:	mov	r0, #10
   11fc8:	bl	1142c <putchar_unlocked@plt>
   11fcc:	cmp	r7, #0
   11fd0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11fd4:	mov	r6, r4
   11fd8:	sub	r7, r7, #1
   11fdc:	ldrb	r0, [r6, #44]!	; 0x2c
   11fe0:	cmp	r0, #0
   11fe4:	beq	12038 <putchar_unlocked@plt+0xc0c>
   11fe8:	ldrh	r0, [r4]
   11fec:	cmp	r0, #7
   11ff0:	bne	12038 <putchar_unlocked@plt+0xc0c>
   11ff4:	cmp	r9, #0
   11ff8:	beq	12030 <putchar_unlocked@plt+0xc04>
   11ffc:	cmp	r9, #1
   12000:	blt	12038 <putchar_unlocked@plt+0xc0c>
   12004:	mov	r5, #0
   12008:	ldr	r1, [r8, r5, lsl #2]
   1200c:	mov	r0, r6
   12010:	mov	r2, #32
   12014:	bl	11408 <strncmp@plt>
   12018:	cmp	r0, #0
   1201c:	beq	12030 <putchar_unlocked@plt+0xc04>
   12020:	add	r5, r5, #1
   12024:	cmp	r5, r9
   12028:	blt	12008 <putchar_unlocked@plt+0xbdc>
   1202c:	b	12038 <putchar_unlocked@plt+0xc0c>
   12030:	mov	r0, r4
   12034:	bl	12040 <putchar_unlocked@plt+0xc14>
   12038:	add	r4, r4, #384	; 0x180
   1203c:	b	11fcc <putchar_unlocked@plt+0xba0>
   12040:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12044:	add	fp, sp, #24
   12048:	sub	sp, sp, #424	; 0x1a8
   1204c:	mov	r4, r0
   12050:	mov	r8, r0
   12054:	ldrb	r0, [r4, #8]!
   12058:	cmp	r0, #47	; 0x2f
   1205c:	bne	12068 <putchar_unlocked@plt+0xc3c>
   12060:	sub	r7, fp, #176	; 0xb0
   12064:	b	12084 <putchar_unlocked@plt+0xc58>
   12068:	mov	r1, #47	; 0x2f
   1206c:	strh	r1, [fp, #-172]	; 0xffffff54
   12070:	movw	r1, #25647	; 0x642f
   12074:	movt	r1, #30309	; 0x7665
   12078:	str	r1, [fp, #-176]	; 0xffffff50
   1207c:	sub	r1, fp, #176	; 0xb0
   12080:	orr	r7, r1, #5
   12084:	cmp	r0, #0
   12088:	beq	120b8 <putchar_unlocked@plt+0xc8c>
   1208c:	add	r2, r8, #40	; 0x28
   12090:	add	r1, r7, #1
   12094:	add	r3, r8, #9
   12098:	mov	r7, r1
   1209c:	cmp	r3, r2
   120a0:	strb	r0, [r1, #-1]
   120a4:	bcs	120b8 <putchar_unlocked@plt+0xc8c>
   120a8:	ldrb	r0, [r3], #1
   120ac:	add	r1, r7, #1
   120b0:	cmp	r0, #0
   120b4:	bne	12098 <putchar_unlocked@plt+0xc6c>
   120b8:	mov	r9, #0
   120bc:	sub	r0, fp, #176	; 0xb0
   120c0:	sub	r1, fp, #136	; 0x88
   120c4:	strb	r9, [r7]
   120c8:	bl	15574 <putchar_unlocked@plt+0x4148>
   120cc:	mov	r5, #63	; 0x3f
   120d0:	cmp	r0, #0
   120d4:	bne	120ec <putchar_unlocked@plt+0xcc0>
   120d8:	ldrb	r0, [fp, #-120]	; 0xffffff88
   120dc:	ldr	r9, [fp, #-64]	; 0xffffffc0
   120e0:	mov	r5, #32
   120e4:	tst	r0, #16
   120e8:	movweq	r5, #42	; 0x2a
   120ec:	movw	r1, #23432	; 0x5b88
   120f0:	add	r6, r8, #44	; 0x2c
   120f4:	mov	r0, #1
   120f8:	mov	r2, #32
   120fc:	movt	r1, #1
   12100:	mov	r3, r6
   12104:	bl	11348 <__printf_chk@plt>
   12108:	movw	r0, #29062	; 0x7186
   1210c:	movt	r0, #2
   12110:	ldrb	r0, [r0]
   12114:	cmp	r0, #0
   12118:	bne	121d4 <putchar_unlocked@plt+0xda8>
   1211c:	add	r1, r8, #76	; 0x4c
   12120:	add	r0, sp, #12
   12124:	ldrb	r2, [r6]
   12128:	cmp	r2, #0
   1212c:	beq	12140 <putchar_unlocked@plt+0xd14>
   12130:	add	r6, r6, #1
   12134:	strb	r2, [r0], #1
   12138:	cmp	r6, r1
   1213c:	bcc	12124 <putchar_unlocked@plt+0xcf8>
   12140:	mov	r1, #0
   12144:	strb	r1, [r0]
   12148:	add	r0, sp, #12
   1214c:	bl	11144 <getpwnam@plt>
   12150:	cmp	r0, #0
   12154:	beq	121ac <putchar_unlocked@plt+0xd80>
   12158:	ldr	r7, [r0, #16]
   1215c:	mov	r6, r0
   12160:	mov	r1, #44	; 0x2c
   12164:	mov	r0, r7
   12168:	bl	11300 <strchr@plt>
   1216c:	cmp	r0, #0
   12170:	movne	r1, #0
   12174:	strbne	r1, [r0]
   12178:	ldrne	r7, [r6, #16]
   1217c:	ldr	r1, [r6]
   12180:	mov	r0, r7
   12184:	bl	12464 <putchar_unlocked@plt+0x1038>
   12188:	mov	r6, r0
   1218c:	movw	r1, #23419	; 0x5b7b
   12190:	mov	r0, #1
   12194:	movt	r1, #1
   12198:	mov	r2, r6
   1219c:	bl	11348 <__printf_chk@plt>
   121a0:	mov	r0, r6
   121a4:	bl	12820 <putchar_unlocked@plt+0x13f4>
   121a8:	b	121d4 <putchar_unlocked@plt+0xda8>
   121ac:	movw	r1, #23407	; 0x5b6f
   121b0:	mov	r0, #0
   121b4:	mov	r2, #5
   121b8:	movt	r1, #1
   121bc:	bl	111e0 <dcgettext@plt>
   121c0:	movw	r1, #23401	; 0x5b69
   121c4:	mov	r2, r0
   121c8:	mov	r0, #1
   121cc:	movt	r1, #1
   121d0:	bl	11348 <__printf_chk@plt>
   121d4:	movw	r1, #23429	; 0x5b85
   121d8:	mov	r0, #1
   121dc:	mov	r2, r5
   121e0:	mov	r3, #32
   121e4:	str	r4, [sp]
   121e8:	movt	r1, #1
   121ec:	bl	11348 <__printf_chk@plt>
   121f0:	movw	r0, #29064	; 0x7188
   121f4:	movt	r0, #2
   121f8:	ldrb	r0, [r0]
   121fc:	cmp	r0, #0
   12200:	bne	12304 <putchar_unlocked@plt+0xed8>
   12204:	cmp	r9, #0
   12208:	beq	12244 <putchar_unlocked@plt+0xe18>
   1220c:	movw	r5, #29076	; 0x7194
   12210:	movt	r5, #2
   12214:	ldr	r0, [r5]
   12218:	cmp	r0, #0
   1221c:	bne	1222c <putchar_unlocked@plt+0xe00>
   12220:	mov	r0, r5
   12224:	bl	111b0 <time@plt>
   12228:	ldr	r0, [r5]
   1222c:	sub	r0, r0, r9
   12230:	cmp	r0, #60	; 0x3c
   12234:	bge	12268 <putchar_unlocked@plt+0xe3c>
   12238:	movw	r5, #23452	; 0x5b9c
   1223c:	movt	r5, #1
   12240:	b	122f0 <putchar_unlocked@plt+0xec4>
   12244:	movw	r1, #23439	; 0x5b8f
   12248:	mov	r0, #0
   1224c:	mov	r2, #5
   12250:	movt	r1, #1
   12254:	bl	111e0 <dcgettext@plt>
   12258:	movw	r1, #23367	; 0x5b47
   1225c:	mov	r2, r0
   12260:	mov	r0, #1
   12264:	b	122fc <putchar_unlocked@plt+0xed0>
   12268:	movw	r1, #20863	; 0x517f
   1226c:	movt	r1, #1
   12270:	cmp	r0, r1
   12274:	bgt	122bc <putchar_unlocked@plt+0xe90>
   12278:	movw	r1, #46021	; 0xb3c5
   1227c:	movw	r5, #29080	; 0x7198
   12280:	movw	r3, #23458	; 0x5ba2
   12284:	movt	r1, #37282	; 0x91a2
   12288:	movt	r5, #2
   1228c:	movt	r3, #1
   12290:	umull	r1, r2, r0, r1
   12294:	lsr	r1, r2, #11
   12298:	mov	r2, #3600	; 0xe10
   1229c:	mls	r0, r1, r2, r0
   122a0:	movw	r2, #34953	; 0x8889
   122a4:	str	r1, [sp]
   122a8:	movt	r2, #34952	; 0x8888
   122ac:	umull	r0, r2, r0, r2
   122b0:	lsr	r0, r2, #5
   122b4:	str	r0, [sp, #4]
   122b8:	b	122e0 <putchar_unlocked@plt+0xeb4>
   122bc:	movw	r1, #17671	; 0x4507
   122c0:	movw	r5, #29080	; 0x7198
   122c4:	movw	r3, #23468	; 0x5bac
   122c8:	movt	r1, #49710	; 0xc22e
   122cc:	movt	r5, #2
   122d0:	movt	r3, #1
   122d4:	umull	r0, r1, r0, r1
   122d8:	lsr	r0, r1, #16
   122dc:	str	r0, [sp]
   122e0:	mov	r0, r5
   122e4:	mov	r1, #1
   122e8:	mov	r2, #13
   122ec:	bl	11318 <__sprintf_chk@plt>
   122f0:	movw	r1, #23367	; 0x5b47
   122f4:	mov	r0, #1
   122f8:	mov	r2, r5
   122fc:	movt	r1, #1
   12300:	bl	11348 <__printf_chk@plt>
   12304:	ldr	r0, [r8, #340]	; 0x154
   12308:	add	r5, sp, #12
   1230c:	str	r0, [sp, #12]
   12310:	mov	r0, r5
   12314:	bl	112a0 <localtime@plt>
   12318:	cmp	r0, #0
   1231c:	beq	12348 <putchar_unlocked@plt+0xf1c>
   12320:	mov	r3, r0
   12324:	movw	r0, #29068	; 0x718c
   12328:	movw	r6, #29093	; 0x71a5
   1232c:	mov	r1, #33	; 0x21
   12330:	movt	r0, #2
   12334:	movt	r6, #2
   12338:	ldr	r2, [r0]
   1233c:	mov	r0, r6
   12340:	bl	11288 <strftime@plt>
   12344:	b	12360 <putchar_unlocked@plt+0xf34>
   12348:	ldr	r0, [sp, #12]
   1234c:	movw	r2, #29093	; 0x71a5
   12350:	movt	r2, #2
   12354:	asr	r1, r0, #31
   12358:	bl	12950 <putchar_unlocked@plt+0x1524>
   1235c:	mov	r6, r0
   12360:	movw	r1, #23718	; 0x5ca6
   12364:	mov	r0, #1
   12368:	mov	r2, r6
   1236c:	movt	r1, #1
   12370:	bl	11348 <__printf_chk@plt>
   12374:	movw	r0, #29063	; 0x7187
   12378:	movt	r0, #2
   1237c:	ldrb	r0, [r0]
   12380:	cmp	r0, #0
   12384:	bne	12454 <putchar_unlocked@plt+0x1028>
   12388:	ldrb	r1, [r8, #76]	; 0x4c
   1238c:	cmp	r1, #0
   12390:	beq	12454 <putchar_unlocked@plt+0x1028>
   12394:	add	r7, r5, #1
   12398:	add	r0, r8, #77	; 0x4d
   1239c:	add	r2, r8, #332	; 0x14c
   123a0:	mov	r3, r7
   123a4:	cmp	r0, r2
   123a8:	strb	r1, [r7, #-1]
   123ac:	bcs	123c0 <putchar_unlocked@plt+0xf94>
   123b0:	ldrb	r1, [r0], #1
   123b4:	add	r7, r3, #1
   123b8:	cmp	r1, #0
   123bc:	bne	123a0 <putchar_unlocked@plt+0xf74>
   123c0:	add	r4, sp, #12
   123c4:	mov	r5, #0
   123c8:	mov	r1, #58	; 0x3a
   123cc:	mov	r0, r4
   123d0:	strb	r5, [r3]
   123d4:	bl	11300 <strchr@plt>
   123d8:	cmp	r0, #0
   123dc:	mov	r6, #0
   123e0:	movne	r1, #0
   123e4:	strbne	r1, [r0], #1
   123e8:	movne	r6, r0
   123ec:	ldrb	r0, [sp, #12]
   123f0:	cmp	r0, #0
   123f4:	beq	12404 <putchar_unlocked@plt+0xfd8>
   123f8:	add	r0, sp, #12
   123fc:	bl	12570 <putchar_unlocked@plt+0x1144>
   12400:	mov	r5, r0
   12404:	cmp	r5, #0
   12408:	movne	r4, r5
   1240c:	cmp	r6, #0
   12410:	beq	12430 <putchar_unlocked@plt+0x1004>
   12414:	movw	r1, #23445	; 0x5b95
   12418:	mov	r0, #1
   1241c:	mov	r2, r4
   12420:	mov	r3, r6
   12424:	movt	r1, #1
   12428:	bl	11348 <__printf_chk@plt>
   1242c:	b	12444 <putchar_unlocked@plt+0x1018>
   12430:	movw	r1, #23718	; 0x5ca6
   12434:	mov	r0, #1
   12438:	mov	r2, r4
   1243c:	movt	r1, #1
   12440:	bl	11348 <__printf_chk@plt>
   12444:	cmp	r5, #0
   12448:	beq	12454 <putchar_unlocked@plt+0x1028>
   1244c:	mov	r0, r4
   12450:	bl	12820 <putchar_unlocked@plt+0x13f4>
   12454:	mov	r0, #10
   12458:	bl	1142c <putchar_unlocked@plt>
   1245c:	sub	sp, fp, #24
   12460:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12464:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12468:	add	fp, sp, #24
   1246c:	mov	r4, r1
   12470:	mov	r5, r0
   12474:	bl	112f4 <strlen@plt>
   12478:	mov	r7, #0
   1247c:	mov	r1, r5
   12480:	ldrb	r2, [r1], #1
   12484:	cmp	r2, #38	; 0x26
   12488:	addeq	r7, r7, #1
   1248c:	cmp	r2, #0
   12490:	bne	12480 <putchar_unlocked@plt+0x1054>
   12494:	add	r6, r0, #1
   12498:	cmp	r7, #0
   1249c:	beq	124cc <putchar_unlocked@plt+0x10a0>
   124a0:	mov	r0, r4
   124a4:	bl	112f4 <strlen@plt>
   124a8:	subs	r1, r7, #1
   124ac:	beq	124c0 <putchar_unlocked@plt+0x1094>
   124b0:	mvn	r2, #0
   124b4:	udiv	r2, r2, r1
   124b8:	cmp	r2, r0
   124bc:	bcc	1256c <putchar_unlocked@plt+0x1140>
   124c0:	mul	r0, r0, r1
   124c4:	adds	r6, r6, r0
   124c8:	bcs	1256c <putchar_unlocked@plt+0x1140>
   124cc:	mov	r0, r6
   124d0:	bl	14c30 <putchar_unlocked@plt+0x3804>
   124d4:	mov	r8, r0
   124d8:	add	r9, r4, #1
   124dc:	mov	r7, r0
   124e0:	b	12548 <putchar_unlocked@plt+0x111c>
   124e4:	strb	r0, [r7], #1
   124e8:	b	12544 <putchar_unlocked@plt+0x1118>
   124ec:	bl	112dc <__ctype_b_loc@plt>
   124f0:	ldrb	r6, [r4]
   124f4:	ldr	r0, [r0]
   124f8:	add	r0, r0, r6, lsl #1
   124fc:	ldrb	r0, [r0, #1]
   12500:	tst	r0, #2
   12504:	bne	12510 <putchar_unlocked@plt+0x10e4>
   12508:	mov	r0, r4
   1250c:	b	12528 <putchar_unlocked@plt+0x10fc>
   12510:	bl	112ac <__ctype_toupper_loc@plt>
   12514:	ldr	r0, [r0]
   12518:	ldr	r0, [r0, r6, lsl #2]
   1251c:	strb	r0, [r7], #1
   12520:	mov	r0, r9
   12524:	ldrb	r6, [r9]
   12528:	cmp	r6, #0
   1252c:	beq	12544 <putchar_unlocked@plt+0x1118>
   12530:	add	r0, r0, #1
   12534:	strb	r6, [r7], #1
   12538:	ldrb	r6, [r0], #1
   1253c:	cmp	r6, #0
   12540:	bne	12534 <putchar_unlocked@plt+0x1108>
   12544:	add	r5, r5, #1
   12548:	ldrb	r0, [r5]
   1254c:	cmp	r0, #38	; 0x26
   12550:	beq	124ec <putchar_unlocked@plt+0x10c0>
   12554:	cmp	r0, #0
   12558:	bne	124e4 <putchar_unlocked@plt+0x10b8>
   1255c:	mov	r0, #0
   12560:	strb	r0, [r7]
   12564:	mov	r0, r8
   12568:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1256c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   12570:	movw	r1, #29128	; 0x71c8
   12574:	movt	r1, #2
   12578:	b	1257c <putchar_unlocked@plt+0x1150>
   1257c:	push	{r4, r5, r6, sl, fp, lr}
   12580:	add	fp, sp, #16
   12584:	sub	sp, sp, #8
   12588:	movw	r2, #29132	; 0x71cc
   1258c:	mov	r6, r0
   12590:	mov	r0, #2
   12594:	mov	r5, r1
   12598:	mov	r4, #0
   1259c:	add	r3, sp, #4
   125a0:	mov	r1, #0
   125a4:	movt	r2, #2
   125a8:	str	r4, [sp, #4]
   125ac:	str	r0, [r2]
   125b0:	mov	r0, r6
   125b4:	bl	113cc <getaddrinfo@plt>
   125b8:	cmp	r0, #0
   125bc:	beq	125cc <putchar_unlocked@plt+0x11a0>
   125c0:	cmp	r5, #0
   125c4:	strne	r0, [r5]
   125c8:	b	12604 <putchar_unlocked@plt+0x11d8>
   125cc:	ldr	r0, [sp, #4]
   125d0:	ldr	r0, [r0, #24]
   125d4:	cmp	r0, #0
   125d8:	movne	r6, r0
   125dc:	mov	r0, r6
   125e0:	bl	111ec <strdup@plt>
   125e4:	mov	r4, r0
   125e8:	cmp	r5, #0
   125ec:	beq	125fc <putchar_unlocked@plt+0x11d0>
   125f0:	cmp	r4, #0
   125f4:	mvneq	r0, #9
   125f8:	streq	r0, [r5]
   125fc:	ldr	r0, [sp, #4]
   12600:	bl	113c0 <freeaddrinfo@plt>
   12604:	mov	r0, r4
   12608:	sub	sp, fp, #16
   1260c:	pop	{r4, r5, r6, sl, fp, pc}
   12610:	movw	r0, #29128	; 0x71c8
   12614:	movt	r0, #2
   12618:	ldr	r0, [r0]
   1261c:	b	11180 <gai_strerror@plt>
   12620:	movw	r1, #29164	; 0x71ec
   12624:	movt	r1, #2
   12628:	str	r0, [r1]
   1262c:	bx	lr
   12630:	movw	r1, #29168	; 0x71f0
   12634:	movt	r1, #2
   12638:	strb	r0, [r1]
   1263c:	bx	lr
   12640:	push	{r4, r5, r6, sl, fp, lr}
   12644:	add	fp, sp, #16
   12648:	sub	sp, sp, #8
   1264c:	movw	r0, #29052	; 0x717c
   12650:	movt	r0, #2
   12654:	ldr	r0, [r0]
   12658:	bl	15198 <putchar_unlocked@plt+0x3d6c>
   1265c:	cmp	r0, #0
   12660:	beq	12688 <putchar_unlocked@plt+0x125c>
   12664:	movw	r0, #29168	; 0x71f0
   12668:	movt	r0, #2
   1266c:	ldrb	r0, [r0]
   12670:	cmp	r0, #0
   12674:	beq	126a8 <putchar_unlocked@plt+0x127c>
   12678:	bl	1130c <__errno_location@plt>
   1267c:	ldr	r0, [r0]
   12680:	cmp	r0, #32
   12684:	bne	126a8 <putchar_unlocked@plt+0x127c>
   12688:	movw	r0, #29048	; 0x7178
   1268c:	movt	r0, #2
   12690:	ldr	r0, [r0]
   12694:	bl	15198 <putchar_unlocked@plt+0x3d6c>
   12698:	cmp	r0, #0
   1269c:	subeq	sp, fp, #16
   126a0:	popeq	{r4, r5, r6, sl, fp, pc}
   126a4:	b	12718 <putchar_unlocked@plt+0x12ec>
   126a8:	movw	r1, #23703	; 0x5c97
   126ac:	mov	r0, #0
   126b0:	mov	r2, #5
   126b4:	movt	r1, #1
   126b8:	bl	111e0 <dcgettext@plt>
   126bc:	mov	r4, r0
   126c0:	movw	r0, #29164	; 0x71ec
   126c4:	movt	r0, #2
   126c8:	ldr	r6, [r0]
   126cc:	bl	1130c <__errno_location@plt>
   126d0:	ldr	r5, [r0]
   126d4:	cmp	r6, #0
   126d8:	bne	126f4 <putchar_unlocked@plt+0x12c8>
   126dc:	movw	r2, #23719	; 0x5ca7
   126e0:	mov	r0, #0
   126e4:	mov	r1, r5
   126e8:	mov	r3, r4
   126ec:	movt	r2, #1
   126f0:	b	12714 <putchar_unlocked@plt+0x12e8>
   126f4:	mov	r0, r6
   126f8:	bl	141d0 <putchar_unlocked@plt+0x2da4>
   126fc:	movw	r2, #23715	; 0x5ca3
   12700:	mov	r3, r0
   12704:	str	r4, [sp]
   12708:	mov	r0, #0
   1270c:	mov	r1, r5
   12710:	movt	r2, #1
   12714:	bl	11264 <error@plt>
   12718:	movw	r0, #28964	; 0x7124
   1271c:	movt	r0, #2
   12720:	ldr	r0, [r0]
   12724:	bl	1118c <_exit@plt>
   12728:	push	{r4, r5, r6, sl, fp, lr}
   1272c:	add	fp, sp, #16
   12730:	sub	sp, sp, #8
   12734:	mov	r4, r0
   12738:	bl	11354 <fileno@plt>
   1273c:	cmn	r0, #1
   12740:	ble	127b4 <putchar_unlocked@plt+0x1388>
   12744:	mov	r0, r4
   12748:	bl	11294 <__freading@plt>
   1274c:	cmp	r0, #0
   12750:	beq	1277c <putchar_unlocked@plt+0x1350>
   12754:	mov	r0, r4
   12758:	bl	11354 <fileno@plt>
   1275c:	mov	r1, #1
   12760:	mov	r2, #0
   12764:	mov	r3, #0
   12768:	str	r1, [sp]
   1276c:	bl	11228 <lseek64@plt>
   12770:	and	r0, r0, r1
   12774:	cmn	r0, #1
   12778:	beq	127b4 <putchar_unlocked@plt+0x1388>
   1277c:	mov	r0, r4
   12780:	bl	127c4 <putchar_unlocked@plt+0x1398>
   12784:	cmp	r0, #0
   12788:	beq	127b4 <putchar_unlocked@plt+0x1388>
   1278c:	bl	1130c <__errno_location@plt>
   12790:	ldr	r6, [r0]
   12794:	mov	r5, r0
   12798:	mov	r0, r4
   1279c:	bl	1136c <fclose@plt>
   127a0:	cmp	r6, #0
   127a4:	strne	r6, [r5]
   127a8:	mvnne	r0, #0
   127ac:	sub	sp, fp, #16
   127b0:	pop	{r4, r5, r6, sl, fp, pc}
   127b4:	mov	r0, r4
   127b8:	sub	sp, fp, #16
   127bc:	pop	{r4, r5, r6, sl, fp, lr}
   127c0:	b	1136c <fclose@plt>
   127c4:	push	{r4, sl, fp, lr}
   127c8:	add	fp, sp, #8
   127cc:	sub	sp, sp, #8
   127d0:	mov	r4, r0
   127d4:	cmp	r0, #0
   127d8:	beq	127f4 <putchar_unlocked@plt+0x13c8>
   127dc:	mov	r0, r4
   127e0:	bl	11294 <__freading@plt>
   127e4:	cmp	r0, #0
   127e8:	ldrbne	r0, [r4, #1]
   127ec:	tstne	r0, #1
   127f0:	bne	12804 <putchar_unlocked@plt+0x13d8>
   127f4:	mov	r0, r4
   127f8:	sub	sp, fp, #8
   127fc:	pop	{r4, sl, fp, lr}
   12800:	b	1115c <fflush@plt>
   12804:	mov	r0, #1
   12808:	mov	r2, #0
   1280c:	mov	r3, #0
   12810:	str	r0, [sp]
   12814:	mov	r0, r4
   12818:	bl	12848 <putchar_unlocked@plt+0x141c>
   1281c:	b	127f4 <putchar_unlocked@plt+0x13c8>
   12820:	push	{r4, r5, r6, sl, fp, lr}
   12824:	add	fp, sp, #16
   12828:	mov	r4, r0
   1282c:	bl	1130c <__errno_location@plt>
   12830:	ldr	r6, [r0]
   12834:	mov	r5, r0
   12838:	mov	r0, r4
   1283c:	bl	11174 <free@plt>
   12840:	str	r6, [r5]
   12844:	pop	{r4, r5, r6, sl, fp, pc}
   12848:	push	{r4, r5, r6, r7, fp, lr}
   1284c:	add	fp, sp, #16
   12850:	sub	sp, sp, #8
   12854:	mov	r4, r0
   12858:	ldr	r0, [r0, #4]
   1285c:	mov	r5, r3
   12860:	mov	r6, r2
   12864:	ldr	r1, [r4, #8]
   12868:	cmp	r1, r0
   1286c:	bne	12888 <putchar_unlocked@plt+0x145c>
   12870:	ldrd	r0, [r4, #16]
   12874:	cmp	r1, r0
   12878:	bne	12888 <putchar_unlocked@plt+0x145c>
   1287c:	ldr	r0, [r4, #36]	; 0x24
   12880:	cmp	r0, #0
   12884:	beq	128a0 <putchar_unlocked@plt+0x1474>
   12888:	mov	r0, r4
   1288c:	mov	r2, r6
   12890:	mov	r3, r5
   12894:	sub	sp, fp, #16
   12898:	pop	{r4, r5, r6, r7, fp, lr}
   1289c:	b	11378 <fseeko64@plt>
   128a0:	ldr	r7, [fp, #8]
   128a4:	mov	r0, r4
   128a8:	bl	11354 <fileno@plt>
   128ac:	mov	r2, r6
   128b0:	mov	r3, r5
   128b4:	str	r7, [sp]
   128b8:	bl	11228 <lseek64@plt>
   128bc:	and	r2, r0, r1
   128c0:	cmn	r2, #1
   128c4:	beq	128e0 <putchar_unlocked@plt+0x14b4>
   128c8:	strd	r0, [r4, #80]	; 0x50
   128cc:	ldr	r0, [r4]
   128d0:	bic	r0, r0, #16
   128d4:	str	r0, [r4]
   128d8:	mov	r0, #0
   128dc:	b	128e4 <putchar_unlocked@plt+0x14b8>
   128e0:	mvn	r0, #0
   128e4:	sub	sp, fp, #16
   128e8:	pop	{r4, r5, r6, r7, fp, pc}
   128ec:	push	{r4, sl, fp, lr}
   128f0:	add	fp, sp, #8
   128f4:	sub	sp, sp, #264	; 0x108
   128f8:	add	r1, sp, #7
   128fc:	movw	r2, #257	; 0x101
   12900:	bl	146e0 <putchar_unlocked@plt+0x32b4>
   12904:	mov	r4, #0
   12908:	cmp	r0, #0
   1290c:	bne	12944 <putchar_unlocked@plt+0x1518>
   12910:	movw	r1, #23722	; 0x5caa
   12914:	add	r0, sp, #7
   12918:	movt	r1, #1
   1291c:	bl	11150 <strcmp@plt>
   12920:	cmp	r0, #0
   12924:	beq	12944 <putchar_unlocked@plt+0x1518>
   12928:	movw	r1, #23724	; 0x5cac
   1292c:	add	r0, sp, #7
   12930:	movt	r1, #1
   12934:	bl	11150 <strcmp@plt>
   12938:	mov	r4, r0
   1293c:	cmp	r0, #0
   12940:	movwne	r4, #1
   12944:	mov	r0, r4
   12948:	sub	sp, fp, #8
   1294c:	pop	{r4, sl, fp, pc}
   12950:	push	{r4, r5, r6, sl, fp, lr}
   12954:	add	fp, sp, #16
   12958:	mov	r5, r0
   1295c:	mov	r0, #0
   12960:	mov	r4, r1
   12964:	add	r6, r2, #19
   12968:	cmp	r1, #0
   1296c:	strb	r0, [r2, #20]
   12970:	blt	129bc <putchar_unlocked@plt+0x1590>
   12974:	mov	r0, r5
   12978:	mov	r1, r4
   1297c:	mov	r2, #10
   12980:	mov	r3, #0
   12984:	bl	152ec <putchar_unlocked@plt+0x3ec0>
   12988:	add	r2, r0, r0, lsl #2
   1298c:	sub	r2, r5, r2, lsl #1
   12990:	add	r2, r2, #48	; 0x30
   12994:	strb	r2, [r6], #-1
   12998:	adds	r2, r5, #9
   1299c:	mov	r5, r0
   129a0:	adc	r3, r4, #0
   129a4:	rsbs	r2, r2, #18
   129a8:	mov	r4, r1
   129ac:	rscs	r2, r3, #0
   129b0:	bcc	12974 <putchar_unlocked@plt+0x1548>
   129b4:	add	r6, r6, #1
   129b8:	b	12a04 <putchar_unlocked@plt+0x15d8>
   129bc:	mov	r0, r5
   129c0:	mov	r1, r4
   129c4:	mov	r2, #10
   129c8:	mov	r3, #0
   129cc:	bl	152ec <putchar_unlocked@plt+0x3ec0>
   129d0:	add	r2, r0, r0, lsl #2
   129d4:	rsb	r2, r5, r2, lsl #1
   129d8:	add	r2, r2, #48	; 0x30
   129dc:	strb	r2, [r6], #-1
   129e0:	adds	r2, r5, #9
   129e4:	mov	r5, r0
   129e8:	adc	r3, r4, #0
   129ec:	rsbs	r2, r2, #18
   129f0:	mov	r4, r1
   129f4:	rscs	r2, r3, #0
   129f8:	bcc	129bc <putchar_unlocked@plt+0x1590>
   129fc:	mov	r0, #45	; 0x2d
   12a00:	strb	r0, [r6]
   12a04:	mov	r0, r6
   12a08:	pop	{r4, r5, r6, sl, fp, pc}
   12a0c:	push	{r4, r5, fp, lr}
   12a10:	add	fp, sp, #8
   12a14:	cmp	r0, #0
   12a18:	beq	12aac <putchar_unlocked@plt+0x1680>
   12a1c:	mov	r1, #47	; 0x2f
   12a20:	mov	r4, r0
   12a24:	bl	1139c <strrchr@plt>
   12a28:	cmp	r0, #0
   12a2c:	mov	r5, r4
   12a30:	addne	r5, r0, #1
   12a34:	sub	r0, r5, r4
   12a38:	cmp	r0, #7
   12a3c:	blt	12a90 <putchar_unlocked@plt+0x1664>
   12a40:	movw	r1, #23786	; 0x5cea
   12a44:	sub	r0, r5, #7
   12a48:	mov	r2, #7
   12a4c:	movt	r1, #1
   12a50:	bl	11408 <strncmp@plt>
   12a54:	cmp	r0, #0
   12a58:	bne	12a90 <putchar_unlocked@plt+0x1664>
   12a5c:	movw	r1, #23794	; 0x5cf2
   12a60:	mov	r0, r5
   12a64:	mov	r2, #3
   12a68:	movt	r1, #1
   12a6c:	bl	11408 <strncmp@plt>
   12a70:	cmp	r0, #0
   12a74:	beq	12a80 <putchar_unlocked@plt+0x1654>
   12a78:	mov	r4, r5
   12a7c:	b	12a90 <putchar_unlocked@plt+0x1664>
   12a80:	movw	r0, #29032	; 0x7168
   12a84:	add	r4, r5, #3
   12a88:	movt	r0, #2
   12a8c:	str	r4, [r0]
   12a90:	movw	r0, #29036	; 0x716c
   12a94:	movt	r0, #2
   12a98:	str	r4, [r0]
   12a9c:	movw	r0, #29172	; 0x71f4
   12aa0:	movt	r0, #2
   12aa4:	str	r4, [r0]
   12aa8:	pop	{r4, r5, fp, pc}
   12aac:	movw	r0, #29048	; 0x7178
   12ab0:	movt	r0, #2
   12ab4:	ldr	r1, [r0]
   12ab8:	movw	r0, #23730	; 0x5cb2
   12abc:	movt	r0, #1
   12ac0:	bl	113fc <fputs@plt>
   12ac4:	bl	11414 <abort@plt>
   12ac8:	push	{r4, r5, r6, sl, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	mov	r4, r0
   12ad4:	movw	r0, #29176	; 0x71f8
   12ad8:	movt	r0, #2
   12adc:	cmp	r4, #0
   12ae0:	moveq	r4, r0
   12ae4:	bl	1130c <__errno_location@plt>
   12ae8:	ldr	r6, [r0]
   12aec:	mov	r5, r0
   12af0:	mov	r0, r4
   12af4:	mov	r1, #48	; 0x30
   12af8:	bl	14f80 <putchar_unlocked@plt+0x3b54>
   12afc:	str	r6, [r5]
   12b00:	pop	{r4, r5, r6, sl, fp, pc}
   12b04:	movw	r1, #29176	; 0x71f8
   12b08:	cmp	r0, #0
   12b0c:	movt	r1, #2
   12b10:	movne	r1, r0
   12b14:	ldr	r0, [r1]
   12b18:	bx	lr
   12b1c:	movw	r2, #29176	; 0x71f8
   12b20:	cmp	r0, #0
   12b24:	movt	r2, #2
   12b28:	movne	r2, r0
   12b2c:	str	r1, [r2]
   12b30:	bx	lr
   12b34:	movw	r3, #29176	; 0x71f8
   12b38:	cmp	r0, #0
   12b3c:	movt	r3, #2
   12b40:	movne	r3, r0
   12b44:	ubfx	r0, r1, #5, #3
   12b48:	and	r1, r1, #31
   12b4c:	add	r0, r3, r0, lsl #2
   12b50:	ldr	r3, [r0, #8]
   12b54:	eor	r2, r2, r3, lsr r1
   12b58:	and	r2, r2, #1
   12b5c:	eor	r2, r3, r2, lsl r1
   12b60:	str	r2, [r0, #8]
   12b64:	mov	r0, #1
   12b68:	and	r0, r0, r3, lsr r1
   12b6c:	bx	lr
   12b70:	movw	r2, #29176	; 0x71f8
   12b74:	cmp	r0, #0
   12b78:	movt	r2, #2
   12b7c:	movne	r2, r0
   12b80:	ldr	r0, [r2, #4]
   12b84:	str	r1, [r2, #4]
   12b88:	bx	lr
   12b8c:	movw	r3, #29176	; 0x71f8
   12b90:	cmp	r0, #0
   12b94:	movt	r3, #2
   12b98:	movne	r3, r0
   12b9c:	cmp	r1, #0
   12ba0:	mov	r0, #10
   12ba4:	cmpne	r2, #0
   12ba8:	str	r0, [r3]
   12bac:	bne	12bbc <putchar_unlocked@plt+0x1790>
   12bb0:	push	{fp, lr}
   12bb4:	mov	fp, sp
   12bb8:	bl	11414 <abort@plt>
   12bbc:	str	r1, [r3, #40]	; 0x28
   12bc0:	str	r2, [r3, #44]	; 0x2c
   12bc4:	bx	lr
   12bc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bcc:	add	fp, sp, #28
   12bd0:	sub	sp, sp, #20
   12bd4:	mov	r7, r0
   12bd8:	ldr	r0, [fp, #8]
   12bdc:	movw	r5, #29176	; 0x71f8
   12be0:	mov	r8, r3
   12be4:	mov	r9, r2
   12be8:	mov	sl, r1
   12bec:	movt	r5, #2
   12bf0:	cmp	r0, #0
   12bf4:	movne	r5, r0
   12bf8:	bl	1130c <__errno_location@plt>
   12bfc:	mov	r4, r0
   12c00:	ldm	r5, {r0, r1}
   12c04:	ldr	r2, [r5, #40]	; 0x28
   12c08:	ldr	r3, [r5, #44]	; 0x2c
   12c0c:	add	r5, r5, #8
   12c10:	ldr	r6, [r4]
   12c14:	stm	sp, {r0, r1, r5}
   12c18:	str	r2, [sp, #12]
   12c1c:	str	r3, [sp, #16]
   12c20:	mov	r0, r7
   12c24:	mov	r1, sl
   12c28:	mov	r2, r9
   12c2c:	mov	r3, r8
   12c30:	bl	12c40 <putchar_unlocked@plt+0x1814>
   12c34:	str	r6, [r4]
   12c38:	sub	sp, fp, #28
   12c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c44:	add	fp, sp, #28
   12c48:	sub	sp, sp, #156	; 0x9c
   12c4c:	str	r0, [fp, #-56]	; 0xffffffc8
   12c50:	ldr	r0, [fp, #12]
   12c54:	mov	r4, r1
   12c58:	str	r3, [sp, #80]	; 0x50
   12c5c:	str	r2, [fp, #-84]	; 0xffffffac
   12c60:	and	r1, r0, #4
   12c64:	str	r1, [sp, #24]
   12c68:	and	r1, r0, #1
   12c6c:	str	r1, [sp, #28]
   12c70:	ubfx	r7, r0, #1, #1
   12c74:	bl	11234 <__ctype_get_mb_cur_max@plt>
   12c78:	str	r0, [sp, #32]
   12c7c:	ldr	r0, [fp, #24]
   12c80:	ldr	r9, [fp, #8]
   12c84:	mov	r2, #0
   12c88:	mov	r1, #0
   12c8c:	mov	r5, #0
   12c90:	str	r2, [sp, #52]	; 0x34
   12c94:	mov	r2, #1
   12c98:	str	r0, [sp, #72]	; 0x48
   12c9c:	ldr	r0, [fp, #20]
   12ca0:	str	r0, [sp, #64]	; 0x40
   12ca4:	mov	r0, #0
   12ca8:	str	r0, [sp, #92]	; 0x5c
   12cac:	mov	r0, #0
   12cb0:	str	r0, [fp, #-76]	; 0xffffffb4
   12cb4:	mov	r0, #0
   12cb8:	cmp	r9, #10
   12cbc:	str	r1, [sp, #68]	; 0x44
   12cc0:	bhi	13cc0 <putchar_unlocked@plt+0x2894>
   12cc4:	add	r1, pc, #28
   12cc8:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ccc:	ldr	lr, [sp, #80]	; 0x50
   12cd0:	mov	r6, r4
   12cd4:	mov	r8, #0
   12cd8:	mov	r3, #1
   12cdc:	mov	sl, #0
   12ce0:	mov	r4, r2
   12ce4:	ldr	pc, [r1, r9, lsl #2]
   12ce8:			; <UNDEFINED> instruction: 0x00012db8
   12cec:	strdeq	r2, [r1], -r4
   12cf0:	andeq	r2, r1, r8, asr #27
   12cf4:			; <UNDEFINED> instruction: 0x00012db0
   12cf8:	andeq	r2, r1, r8, ror #27
   12cfc:	andeq	r2, r1, r0, asr #28
   12d00:	ldrdeq	r2, [r1], -r8
   12d04:	andeq	r2, r1, r0, lsr #29
   12d08:	andeq	r2, r1, r4, lsl sp
   12d0c:	andeq	r2, r1, r4, lsl sp
   12d10:	andeq	r2, r1, ip, lsr sp
   12d14:	movw	r0, #23878	; 0x5d46
   12d18:	mov	r1, r9
   12d1c:	movt	r0, #1
   12d20:	bl	14428 <putchar_unlocked@plt+0x2ffc>
   12d24:	str	r0, [sp, #64]	; 0x40
   12d28:	movw	r0, #23880	; 0x5d48
   12d2c:	mov	r1, r9
   12d30:	movt	r0, #1
   12d34:	bl	14428 <putchar_unlocked@plt+0x2ffc>
   12d38:	str	r0, [sp, #72]	; 0x48
   12d3c:	mov	r8, #0
   12d40:	mov	sl, r7
   12d44:	tst	r7, #1
   12d48:	str	r5, [fp, #-48]	; 0xffffffd0
   12d4c:	bne	12d88 <putchar_unlocked@plt+0x195c>
   12d50:	ldr	r0, [sp, #64]	; 0x40
   12d54:	ldrb	r0, [r0]
   12d58:	cmp	r0, #0
   12d5c:	beq	12d88 <putchar_unlocked@plt+0x195c>
   12d60:	ldr	r1, [sp, #64]	; 0x40
   12d64:	mov	r8, #0
   12d68:	add	r1, r1, #1
   12d6c:	cmp	r8, r6
   12d70:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   12d74:	strbcc	r0, [r2, r8]
   12d78:	ldrb	r0, [r1, r8]
   12d7c:	add	r8, r8, #1
   12d80:	cmp	r0, #0
   12d84:	bne	12d6c <putchar_unlocked@plt+0x1940>
   12d88:	ldr	r7, [sp, #72]	; 0x48
   12d8c:	mov	r0, r7
   12d90:	bl	112f4 <strlen@plt>
   12d94:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d98:	ldr	lr, [sp, #80]	; 0x50
   12d9c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12da0:	str	r0, [fp, #-76]	; 0xffffffb4
   12da4:	str	r7, [sp, #92]	; 0x5c
   12da8:	mov	r3, #1
   12dac:	b	12ea0 <putchar_unlocked@plt+0x1a74>
   12db0:	mov	r0, #1
   12db4:	b	12df4 <putchar_unlocked@plt+0x19c8>
   12db8:	mov	r9, #0
   12dbc:	mov	r8, #0
   12dc0:	mov	r3, r0
   12dc4:	b	12e9c <putchar_unlocked@plt+0x1a70>
   12dc8:	tst	r7, #1
   12dcc:	bne	12df4 <putchar_unlocked@plt+0x19c8>
   12dd0:	mov	r3, r0
   12dd4:	b	12e1c <putchar_unlocked@plt+0x19f0>
   12dd8:	mov	r0, #1
   12ddc:	mov	r8, #0
   12de0:	mov	r9, #5
   12de4:	b	12e54 <putchar_unlocked@plt+0x1a28>
   12de8:	mov	r3, #1
   12dec:	tst	r7, #1
   12df0:	beq	12e1c <putchar_unlocked@plt+0x19f0>
   12df4:	mov	r1, #1
   12df8:	mov	r8, #0
   12dfc:	mov	r9, #2
   12e00:	mov	r3, r0
   12e04:	mov	sl, #1
   12e08:	str	r1, [fp, #-76]	; 0xffffffb4
   12e0c:	movw	r1, #23880	; 0x5d48
   12e10:	movt	r1, #1
   12e14:	str	r1, [sp, #92]	; 0x5c
   12e18:	b	12ea0 <putchar_unlocked@plt+0x1a74>
   12e1c:	cmp	r6, #0
   12e20:	mov	r8, #1
   12e24:	mov	r9, #2
   12e28:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12e2c:	movne	r0, #39	; 0x27
   12e30:	strbne	r0, [r1]
   12e34:	movw	r0, #23880	; 0x5d48
   12e38:	movt	r0, #1
   12e3c:	b	12e90 <putchar_unlocked@plt+0x1a64>
   12e40:	mov	r9, #5
   12e44:	tst	r7, #1
   12e48:	beq	12e70 <putchar_unlocked@plt+0x1a44>
   12e4c:	mov	r0, #1
   12e50:	mov	r8, #0
   12e54:	str	r0, [fp, #-76]	; 0xffffffb4
   12e58:	movw	r0, #23876	; 0x5d44
   12e5c:	mov	r3, #1
   12e60:	mov	sl, #1
   12e64:	movt	r0, #1
   12e68:	str	r0, [sp, #92]	; 0x5c
   12e6c:	b	12ea0 <putchar_unlocked@plt+0x1a74>
   12e70:	cmp	r6, #0
   12e74:	mov	r8, #1
   12e78:	mov	r3, #1
   12e7c:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   12e80:	movne	r0, #34	; 0x22
   12e84:	strbne	r0, [r1]
   12e88:	movw	r0, #23876	; 0x5d44
   12e8c:	movt	r0, #1
   12e90:	str	r0, [sp, #92]	; 0x5c
   12e94:	mov	r0, #1
   12e98:	str	r0, [fp, #-76]	; 0xffffffb4
   12e9c:	mov	sl, #0
   12ea0:	ldr	r0, [fp, #16]
   12ea4:	mov	r7, #0
   12ea8:	str	r9, [fp, #-64]	; 0xffffffc0
   12eac:	str	sl, [fp, #-72]	; 0xffffffb8
   12eb0:	str	r3, [sp, #84]	; 0x54
   12eb4:	cmp	r0, #0
   12eb8:	movwne	r0, #1
   12ebc:	and	r0, r0, sl
   12ec0:	str	r0, [fp, #-88]	; 0xffffffa8
   12ec4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12ec8:	cmp	r0, #0
   12ecc:	movwne	r0, #1
   12ed0:	subs	r2, r9, #2
   12ed4:	and	r1, r0, sl
   12ed8:	str	r2, [fp, #-80]	; 0xffffffb0
   12edc:	and	r1, r3, r1
   12ee0:	str	r1, [sp, #44]	; 0x2c
   12ee4:	clz	r1, r2
   12ee8:	lsr	r1, r1, #5
   12eec:	and	r1, r1, sl
   12ef0:	str	r1, [sp, #56]	; 0x38
   12ef4:	mov	r1, r2
   12ef8:	eor	r2, sl, #1
   12efc:	movwne	r1, #1
   12f00:	str	r2, [sp, #88]	; 0x58
   12f04:	orr	r2, r1, r2
   12f08:	and	r1, r1, r3
   12f0c:	and	r0, r0, r1
   12f10:	str	r2, [sp, #60]	; 0x3c
   12f14:	str	r1, [fp, #-68]	; 0xffffffbc
   12f18:	str	r0, [fp, #-60]	; 0xffffffc4
   12f1c:	eor	r0, r3, #1
   12f20:	str	r0, [sp, #48]	; 0x30
   12f24:	cmn	lr, #1
   12f28:	beq	12f38 <putchar_unlocked@plt+0x1b0c>
   12f2c:	cmp	r7, lr
   12f30:	bne	12f44 <putchar_unlocked@plt+0x1b18>
   12f34:	b	13af0 <putchar_unlocked@plt+0x26c4>
   12f38:	ldrb	r0, [ip, r7]
   12f3c:	cmp	r0, #0
   12f40:	beq	13af8 <putchar_unlocked@plt+0x26cc>
   12f44:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f48:	mov	r9, #0
   12f4c:	str	r5, [fp, #-48]	; 0xffffffd0
   12f50:	str	r6, [fp, #-52]	; 0xffffffcc
   12f54:	cmp	r0, #0
   12f58:	beq	12f98 <putchar_unlocked@plt+0x1b6c>
   12f5c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f60:	mov	r5, r4
   12f64:	add	r4, r7, r0
   12f68:	cmp	r0, #2
   12f6c:	bcc	12f88 <putchar_unlocked@plt+0x1b5c>
   12f70:	cmn	lr, #1
   12f74:	bne	12f88 <putchar_unlocked@plt+0x1b5c>
   12f78:	mov	r0, ip
   12f7c:	bl	112f4 <strlen@plt>
   12f80:	ldr	ip, [fp, #-84]	; 0xffffffac
   12f84:	mov	lr, r0
   12f88:	cmp	r4, lr
   12f8c:	bls	12fa0 <putchar_unlocked@plt+0x1b74>
   12f90:	mov	r6, #0
   12f94:	b	12fe0 <putchar_unlocked@plt+0x1bb4>
   12f98:	mov	r6, #0
   12f9c:	b	12fe4 <putchar_unlocked@plt+0x1bb8>
   12fa0:	ldr	r1, [sp, #92]	; 0x5c
   12fa4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12fa8:	add	r0, ip, r7
   12fac:	mov	r4, lr
   12fb0:	bl	111c8 <memcmp@plt>
   12fb4:	ldr	r2, [sp, #88]	; 0x58
   12fb8:	cmp	r0, #0
   12fbc:	mov	r1, r0
   12fc0:	movwne	r1, #1
   12fc4:	orr	r1, r1, r2
   12fc8:	tst	r1, #1
   12fcc:	beq	13b8c <putchar_unlocked@plt+0x2760>
   12fd0:	ldr	ip, [fp, #-84]	; 0xffffffac
   12fd4:	clz	r0, r0
   12fd8:	mov	lr, r4
   12fdc:	lsr	r6, r0, #5
   12fe0:	mov	r4, r5
   12fe4:	ldrb	r5, [ip, r7]
   12fe8:	cmp	r5, #126	; 0x7e
   12fec:	bhi	133b4 <putchar_unlocked@plt+0x1f88>
   12ff0:	add	r3, pc, #16
   12ff4:	mov	sl, #1
   12ff8:	mov	r2, #110	; 0x6e
   12ffc:	mov	r0, #97	; 0x61
   13000:	mov	r1, #0
   13004:	ldr	pc, [r3, r5, lsl #2]
   13008:	muleq	r1, r8, r2
   1300c:			; <UNDEFINED> instruction: 0x000133b4
   13010:			; <UNDEFINED> instruction: 0x000133b4
   13014:			; <UNDEFINED> instruction: 0x000133b4
   13018:			; <UNDEFINED> instruction: 0x000133b4
   1301c:			; <UNDEFINED> instruction: 0x000133b4
   13020:			; <UNDEFINED> instruction: 0x000133b4
   13024:	andeq	r3, r1, r8, asr r4
   13028:	andeq	r3, r1, r8, ror r2
   1302c:	andeq	r3, r1, r0, ror r2
   13030:	andeq	r3, r1, r4, lsl #5
   13034:	andeq	r3, r1, r8, lsl #6
   13038:	andeq	r3, r1, r8, ror #4
   1303c:	andeq	r3, r1, r0, lsl #5
   13040:			; <UNDEFINED> instruction: 0x000133b4
   13044:			; <UNDEFINED> instruction: 0x000133b4
   13048:			; <UNDEFINED> instruction: 0x000133b4
   1304c:			; <UNDEFINED> instruction: 0x000133b4
   13050:			; <UNDEFINED> instruction: 0x000133b4
   13054:			; <UNDEFINED> instruction: 0x000133b4
   13058:			; <UNDEFINED> instruction: 0x000133b4
   1305c:			; <UNDEFINED> instruction: 0x000133b4
   13060:			; <UNDEFINED> instruction: 0x000133b4
   13064:			; <UNDEFINED> instruction: 0x000133b4
   13068:			; <UNDEFINED> instruction: 0x000133b4
   1306c:			; <UNDEFINED> instruction: 0x000133b4
   13070:			; <UNDEFINED> instruction: 0x000133b4
   13074:			; <UNDEFINED> instruction: 0x000133b4
   13078:			; <UNDEFINED> instruction: 0x000133b4
   1307c:			; <UNDEFINED> instruction: 0x000133b4
   13080:			; <UNDEFINED> instruction: 0x000133b4
   13084:			; <UNDEFINED> instruction: 0x000133b4
   13088:	andeq	r3, r1, r8, lsl r4
   1308c:	andeq	r3, r1, ip, lsl r4
   13090:	andeq	r3, r1, ip, lsl r4
   13094:	andeq	r3, r1, r8, lsl r2
   13098:	andeq	r3, r1, ip, lsl r4
   1309c:	andeq	r3, r1, r4, lsl #4
   130a0:	andeq	r3, r1, ip, lsl r4
   130a4:	andeq	r3, r1, r0, lsl r3
   130a8:	andeq	r3, r1, ip, lsl r4
   130ac:	andeq	r3, r1, ip, lsl r4
   130b0:	andeq	r3, r1, ip, lsl r4
   130b4:	andeq	r3, r1, r4, lsl #4
   130b8:	andeq	r3, r1, r4, lsl #4
   130bc:	andeq	r3, r1, r4, lsl #4
   130c0:	andeq	r3, r1, r4, lsl #4
   130c4:	andeq	r3, r1, r4, lsl #4
   130c8:	andeq	r3, r1, r4, lsl #4
   130cc:	andeq	r3, r1, r4, lsl #4
   130d0:	andeq	r3, r1, r4, lsl #4
   130d4:	andeq	r3, r1, r4, lsl #4
   130d8:	andeq	r3, r1, r4, lsl #4
   130dc:	andeq	r3, r1, r4, lsl #4
   130e0:	andeq	r3, r1, r4, lsl #4
   130e4:	andeq	r3, r1, r4, lsl #4
   130e8:	andeq	r3, r1, r4, lsl #4
   130ec:	andeq	r3, r1, r4, lsl #4
   130f0:	andeq	r3, r1, r4, lsl #4
   130f4:	andeq	r3, r1, ip, lsl r4
   130f8:	andeq	r3, r1, ip, lsl r4
   130fc:	andeq	r3, r1, ip, lsl r4
   13100:	andeq	r3, r1, ip, lsl r4
   13104:	ldrdeq	r3, [r1], -ip
   13108:			; <UNDEFINED> instruction: 0x000133b4
   1310c:	andeq	r3, r1, r4, lsl #4
   13110:	andeq	r3, r1, r4, lsl #4
   13114:	andeq	r3, r1, r4, lsl #4
   13118:	andeq	r3, r1, r4, lsl #4
   1311c:	andeq	r3, r1, r4, lsl #4
   13120:	andeq	r3, r1, r4, lsl #4
   13124:	andeq	r3, r1, r4, lsl #4
   13128:	andeq	r3, r1, r4, lsl #4
   1312c:	andeq	r3, r1, r4, lsl #4
   13130:	andeq	r3, r1, r4, lsl #4
   13134:	andeq	r3, r1, r4, lsl #4
   13138:	andeq	r3, r1, r4, lsl #4
   1313c:	andeq	r3, r1, r4, lsl #4
   13140:	andeq	r3, r1, r4, lsl #4
   13144:	andeq	r3, r1, r4, lsl #4
   13148:	andeq	r3, r1, r4, lsl #4
   1314c:	andeq	r3, r1, r4, lsl #4
   13150:	andeq	r3, r1, r4, lsl #4
   13154:	andeq	r3, r1, r4, lsl #4
   13158:	andeq	r3, r1, r4, lsl #4
   1315c:	andeq	r3, r1, r4, lsl #4
   13160:	andeq	r3, r1, r4, lsl #4
   13164:	andeq	r3, r1, r4, lsl #4
   13168:	andeq	r3, r1, r4, lsl #4
   1316c:	andeq	r3, r1, r4, lsl #4
   13170:	andeq	r3, r1, r4, lsl #4
   13174:	andeq	r3, r1, ip, lsl r4
   13178:	andeq	r3, r1, r4, asr #4
   1317c:	andeq	r3, r1, r4, lsl #4
   13180:	andeq	r3, r1, ip, lsl r4
   13184:	andeq	r3, r1, r4, lsl #4
   13188:	andeq	r3, r1, ip, lsl r4
   1318c:	andeq	r3, r1, r4, lsl #4
   13190:	andeq	r3, r1, r4, lsl #4
   13194:	andeq	r3, r1, r4, lsl #4
   13198:	andeq	r3, r1, r4, lsl #4
   1319c:	andeq	r3, r1, r4, lsl #4
   131a0:	andeq	r3, r1, r4, lsl #4
   131a4:	andeq	r3, r1, r4, lsl #4
   131a8:	andeq	r3, r1, r4, lsl #4
   131ac:	andeq	r3, r1, r4, lsl #4
   131b0:	andeq	r3, r1, r4, lsl #4
   131b4:	andeq	r3, r1, r4, lsl #4
   131b8:	andeq	r3, r1, r4, lsl #4
   131bc:	andeq	r3, r1, r4, lsl #4
   131c0:	andeq	r3, r1, r4, lsl #4
   131c4:	andeq	r3, r1, r4, lsl #4
   131c8:	andeq	r3, r1, r4, lsl #4
   131cc:	andeq	r3, r1, r4, lsl #4
   131d0:	andeq	r3, r1, r4, lsl #4
   131d4:	andeq	r3, r1, r4, lsl #4
   131d8:	andeq	r3, r1, r4, lsl #4
   131dc:	andeq	r3, r1, r4, lsl #4
   131e0:	andeq	r3, r1, r4, lsl #4
   131e4:	andeq	r3, r1, r4, lsl #4
   131e8:	andeq	r3, r1, r4, lsl #4
   131ec:	andeq	r3, r1, r4, lsl #4
   131f0:	andeq	r3, r1, r4, lsl #4
   131f4:	andeq	r3, r1, r8, lsr #4
   131f8:	andeq	r3, r1, ip, lsl r4
   131fc:	andeq	r3, r1, r8, lsr #4
   13200:	andeq	r3, r1, r8, lsl r2
   13204:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13208:	cmp	r0, #0
   1320c:	beq	1346c <putchar_unlocked@plt+0x2040>
   13210:	ldr	r0, [fp, #16]
   13214:	b	13470 <putchar_unlocked@plt+0x2044>
   13218:	mov	sl, #0
   1321c:	cmp	r7, #0
   13220:	bne	13688 <putchar_unlocked@plt+0x225c>
   13224:	b	13418 <putchar_unlocked@plt+0x1fec>
   13228:	mov	sl, #0
   1322c:	cmn	lr, #1
   13230:	beq	13404 <putchar_unlocked@plt+0x1fd8>
   13234:	cmp	r7, #0
   13238:	cmpeq	lr, #1
   1323c:	bne	13688 <putchar_unlocked@plt+0x225c>
   13240:	b	13418 <putchar_unlocked@plt+0x1fec>
   13244:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13248:	cmp	r0, #2
   1324c:	bne	1343c <putchar_unlocked@plt+0x2010>
   13250:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13254:	tst	r0, #1
   13258:	bne	13ba8 <putchar_unlocked@plt+0x277c>
   1325c:	mov	r9, #0
   13260:	mov	r0, #92	; 0x5c
   13264:	b	13450 <putchar_unlocked@plt+0x2024>
   13268:	mov	r0, #102	; 0x66
   1326c:	b	13458 <putchar_unlocked@plt+0x202c>
   13270:	mov	r2, #116	; 0x74
   13274:	b	13284 <putchar_unlocked@plt+0x1e58>
   13278:	mov	r0, #98	; 0x62
   1327c:	b	13458 <putchar_unlocked@plt+0x202c>
   13280:	mov	r2, #114	; 0x72
   13284:	ldr	r0, [sp, #60]	; 0x3c
   13288:	tst	r0, #1
   1328c:	mov	r0, r2
   13290:	bne	13458 <putchar_unlocked@plt+0x202c>
   13294:	b	13ba8 <putchar_unlocked@plt+0x277c>
   13298:	ldr	r0, [sp, #84]	; 0x54
   1329c:	tst	r0, #1
   132a0:	beq	13544 <putchar_unlocked@plt+0x2118>
   132a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132a8:	tst	r0, #1
   132ac:	bne	13cb0 <putchar_unlocked@plt+0x2884>
   132b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   132b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   132bc:	cmp	r0, #2
   132c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   132c4:	movwne	r0, #1
   132c8:	orr	r0, r0, r3
   132cc:	tst	r0, #1
   132d0:	beq	139c4 <putchar_unlocked@plt+0x2598>
   132d4:	mov	r0, r8
   132d8:	b	13a04 <putchar_unlocked@plt+0x25d8>
   132dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132e0:	mov	r9, #0
   132e4:	mov	r5, #63	; 0x3f
   132e8:	cmp	r0, #5
   132ec:	beq	13690 <putchar_unlocked@plt+0x2264>
   132f0:	cmp	r0, #2
   132f4:	bne	13750 <putchar_unlocked@plt+0x2324>
   132f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132fc:	tst	r0, #1
   13300:	beq	13754 <putchar_unlocked@plt+0x2328>
   13304:	b	13ba8 <putchar_unlocked@plt+0x277c>
   13308:	mov	r0, #118	; 0x76
   1330c:	b	13458 <putchar_unlocked@plt+0x202c>
   13310:	mov	r0, #1
   13314:	mov	r5, #39	; 0x27
   13318:	str	r0, [sp, #52]	; 0x34
   1331c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13320:	cmp	r0, #2
   13324:	bne	133ac <putchar_unlocked@plt+0x1f80>
   13328:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1332c:	tst	r0, #1
   13330:	bne	13ba8 <putchar_unlocked@plt+0x277c>
   13334:	ldr	r3, [sp, #68]	; 0x44
   13338:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1333c:	mov	r9, #0
   13340:	clz	r1, r2
   13344:	cmp	r3, #0
   13348:	mov	r0, r3
   1334c:	movwne	r0, #1
   13350:	lsr	r1, r1, #5
   13354:	orrs	r0, r0, r1
   13358:	moveq	r3, r2
   1335c:	moveq	r2, r0
   13360:	cmp	r8, r2
   13364:	str	r3, [sp, #68]	; 0x44
   13368:	str	r2, [fp, #-52]	; 0xffffffcc
   1336c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13370:	movcc	r0, #39	; 0x27
   13374:	strbcc	r0, [r1, r8]
   13378:	add	r0, r8, #1
   1337c:	cmp	r0, r2
   13380:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13384:	movcc	r1, #92	; 0x5c
   13388:	strbcc	r1, [r3, r0]
   1338c:	add	r0, r8, #2
   13390:	add	r8, r8, #3
   13394:	cmp	r0, r2
   13398:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1339c:	movcc	r1, #39	; 0x27
   133a0:	strbcc	r1, [r2, r0]
   133a4:	mov	r0, #0
   133a8:	str	r0, [fp, #-48]	; 0xffffffd0
   133ac:	mov	sl, #1
   133b0:	b	13204 <putchar_unlocked@plt+0x1dd8>
   133b4:	ldr	r0, [sp, #32]
   133b8:	cmp	r0, #1
   133bc:	bne	13568 <putchar_unlocked@plt+0x213c>
   133c0:	str	lr, [sp, #80]	; 0x50
   133c4:	bl	112dc <__ctype_b_loc@plt>
   133c8:	ldr	r0, [r0]
   133cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   133d0:	mov	r1, #1
   133d4:	add	r0, r0, r5, lsl #1
   133d8:	ldrb	r0, [r0, #1]
   133dc:	ubfx	sl, r0, #6, #1
   133e0:	ldr	r0, [sp, #48]	; 0x30
   133e4:	mov	r2, r1
   133e8:	cmp	r1, #1
   133ec:	orr	r0, sl, r0
   133f0:	bhi	1375c <putchar_unlocked@plt+0x2330>
   133f4:	tst	r0, #1
   133f8:	beq	1375c <putchar_unlocked@plt+0x2330>
   133fc:	ldr	lr, [sp, #80]	; 0x50
   13400:	b	13204 <putchar_unlocked@plt+0x1dd8>
   13404:	cmp	r7, #0
   13408:	bne	13684 <putchar_unlocked@plt+0x2258>
   1340c:	ldrb	r0, [ip, #1]
   13410:	cmp	r0, #0
   13414:	bne	13684 <putchar_unlocked@plt+0x2258>
   13418:	mov	r1, #1
   1341c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13420:	cmp	r0, #2
   13424:	bne	13434 <putchar_unlocked@plt+0x2008>
   13428:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1342c:	tst	r0, #1
   13430:	bne	13ba8 <putchar_unlocked@plt+0x277c>
   13434:	mov	sl, r1
   13438:	b	13204 <putchar_unlocked@plt+0x1dd8>
   1343c:	ldr	r1, [sp, #44]	; 0x2c
   13440:	mov	r9, #0
   13444:	mov	r0, #92	; 0x5c
   13448:	cmp	r1, #0
   1344c:	beq	13458 <putchar_unlocked@plt+0x202c>
   13450:	mov	sl, #0
   13454:	b	13970 <putchar_unlocked@plt+0x2544>
   13458:	ldr	r1, [sp, #84]	; 0x54
   1345c:	mov	sl, #0
   13460:	mov	r9, #0
   13464:	tst	r1, #1
   13468:	bne	134a4 <putchar_unlocked@plt+0x2078>
   1346c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13470:	cmp	r0, #0
   13474:	mov	r0, r5
   13478:	beq	1349c <putchar_unlocked@plt+0x2070>
   1347c:	ldr	r1, [fp, #16]
   13480:	ubfx	r0, r5, #5, #3
   13484:	mov	r2, #1
   13488:	ldr	r0, [r1, r0, lsl #2]
   1348c:	and	r1, r5, #31
   13490:	tst	r0, r2, lsl r1
   13494:	mov	r0, r5
   13498:	bne	134a4 <putchar_unlocked@plt+0x2078>
   1349c:	cmp	r6, #0
   134a0:	beq	13970 <putchar_unlocked@plt+0x2544>
   134a4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   134a8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   134ac:	tst	r1, #1
   134b0:	bne	13b84 <putchar_unlocked@plt+0x2758>
   134b4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   134b8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   134bc:	cmp	r1, #2
   134c0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   134c4:	movwne	r1, #1
   134c8:	orr	r1, r1, r5
   134cc:	tst	r1, #1
   134d0:	bne	13514 <putchar_unlocked@plt+0x20e8>
   134d4:	cmp	r8, r6
   134d8:	mov	r5, #1
   134dc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   134e0:	movcc	r1, #39	; 0x27
   134e4:	strbcc	r1, [r2, r8]
   134e8:	add	r1, r8, #1
   134ec:	cmp	r1, r6
   134f0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   134f4:	movcc	r2, #36	; 0x24
   134f8:	strbcc	r2, [r3, r1]
   134fc:	add	r1, r8, #2
   13500:	add	r8, r8, #3
   13504:	cmp	r1, r6
   13508:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1350c:	movcc	r2, #39	; 0x27
   13510:	strbcc	r2, [r3, r1]
   13514:	cmp	r8, r6
   13518:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   1351c:	movcc	r1, #92	; 0x5c
   13520:	strbcc	r1, [r2, r8]
   13524:	add	r8, r8, #1
   13528:	cmp	r8, r6
   1352c:	and	r4, r4, sl
   13530:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   13534:	strbcc	r0, [r1, r8]
   13538:	add	r8, r8, #1
   1353c:	add	r7, r7, #1
   13540:	b	12f24 <putchar_unlocked@plt+0x1af8>
   13544:	ldr	r0, [sp, #28]
   13548:	mov	sl, #0
   1354c:	mov	r9, #0
   13550:	mov	r5, #0
   13554:	cmp	r0, #0
   13558:	beq	1346c <putchar_unlocked@plt+0x2040>
   1355c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13560:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13564:	b	1353c <putchar_unlocked@plt+0x2110>
   13568:	mov	r0, #0
   1356c:	cmn	lr, #1
   13570:	str	r6, [sp, #76]	; 0x4c
   13574:	str	r4, [sp, #20]
   13578:	str	r0, [fp, #-36]	; 0xffffffdc
   1357c:	str	r0, [fp, #-40]	; 0xffffffd8
   13580:	bne	13594 <putchar_unlocked@plt+0x2168>
   13584:	mov	r0, ip
   13588:	bl	112f4 <strlen@plt>
   1358c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13590:	mov	lr, r0
   13594:	add	r0, ip, r7
   13598:	mov	sl, #1
   1359c:	mov	r6, #0
   135a0:	sub	r4, fp, #40	; 0x28
   135a4:	str	lr, [sp, #80]	; 0x50
   135a8:	str	r0, [sp, #36]	; 0x24
   135ac:	str	r6, [sp, #40]	; 0x28
   135b0:	add	r6, r6, r7
   135b4:	sub	r0, fp, #44	; 0x2c
   135b8:	mov	r3, r4
   135bc:	add	r1, ip, r6
   135c0:	sub	r2, lr, r6
   135c4:	bl	15250 <putchar_unlocked@plt+0x3e24>
   135c8:	cmp	r0, #0
   135cc:	beq	13ad8 <putchar_unlocked@plt+0x26ac>
   135d0:	cmn	r0, #1
   135d4:	beq	13a98 <putchar_unlocked@plt+0x266c>
   135d8:	ldr	lr, [sp, #80]	; 0x50
   135dc:	cmn	r0, #2
   135e0:	beq	13aa0 <putchar_unlocked@plt+0x2674>
   135e4:	ldr	r2, [sp, #56]	; 0x38
   135e8:	cmp	r0, #2
   135ec:	mov	r1, #0
   135f0:	movwcc	r1, #1
   135f4:	eor	r2, r2, #1
   135f8:	orrs	r1, r2, r1
   135fc:	bne	13648 <putchar_unlocked@plt+0x221c>
   13600:	ldr	r1, [sp, #40]	; 0x28
   13604:	ldr	r2, [sp, #36]	; 0x24
   13608:	add	ip, r2, r1
   1360c:	mov	r2, #1
   13610:	ldrb	r3, [ip, r2]
   13614:	sub	r6, r3, #94	; 0x5e
   13618:	cmp	r6, #30
   1361c:	bhi	13630 <putchar_unlocked@plt+0x2204>
   13620:	mov	r4, #1
   13624:	mov	r1, #1073741829	; 0x40000005
   13628:	tst	r1, r4, lsl r6
   1362c:	bne	13ba4 <putchar_unlocked@plt+0x2778>
   13630:	sub	r3, r3, #91	; 0x5b
   13634:	cmp	r3, #2
   13638:	bcc	13ba4 <putchar_unlocked@plt+0x2778>
   1363c:	add	r2, r2, #1
   13640:	cmp	r2, r0
   13644:	bcc	13610 <putchar_unlocked@plt+0x21e4>
   13648:	ldr	r6, [sp, #40]	; 0x28
   1364c:	add	r6, r0, r6
   13650:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13654:	bl	1121c <iswprint@plt>
   13658:	cmp	r0, #0
   1365c:	sub	r4, fp, #40	; 0x28
   13660:	movwne	r0, #1
   13664:	and	sl, sl, r0
   13668:	mov	r0, r4
   1366c:	bl	111a4 <mbsinit@plt>
   13670:	ldr	lr, [sp, #80]	; 0x50
   13674:	ldr	ip, [fp, #-84]	; 0xffffffac
   13678:	cmp	r0, #0
   1367c:	beq	135ac <putchar_unlocked@plt+0x2180>
   13680:	b	13ae0 <putchar_unlocked@plt+0x26b4>
   13684:	mvn	lr, #0
   13688:	mov	r9, #0
   1368c:	b	13204 <putchar_unlocked@plt+0x1dd8>
   13690:	ldr	r0, [sp, #24]
   13694:	cmp	r0, #0
   13698:	beq	13750 <putchar_unlocked@plt+0x2324>
   1369c:	add	r0, r7, #2
   136a0:	cmp	r0, lr
   136a4:	bcs	13750 <putchar_unlocked@plt+0x2324>
   136a8:	add	r1, ip, r7
   136ac:	ldrb	r1, [r1, #1]
   136b0:	cmp	r1, #63	; 0x3f
   136b4:	bne	13750 <putchar_unlocked@plt+0x2324>
   136b8:	ldrb	r5, [ip, r0]
   136bc:	sub	r1, r5, #33	; 0x21
   136c0:	cmp	r1, #29
   136c4:	bhi	13750 <putchar_unlocked@plt+0x2324>
   136c8:	movw	r3, #20929	; 0x51c1
   136cc:	mov	r2, #1
   136d0:	movt	r3, #14336	; 0x3800
   136d4:	tst	r3, r2, lsl r1
   136d8:	beq	13750 <putchar_unlocked@plt+0x2324>
   136dc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   136e0:	tst	r1, #1
   136e4:	bne	13cb8 <putchar_unlocked@plt+0x288c>
   136e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   136ec:	mov	r7, r0
   136f0:	cmp	r8, r1
   136f4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   136f8:	movcc	r1, #63	; 0x3f
   136fc:	strbcc	r1, [r2, r8]
   13700:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13704:	add	r1, r8, #1
   13708:	cmp	r1, r2
   1370c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13710:	movcc	r2, #34	; 0x22
   13714:	strbcc	r2, [r3, r1]
   13718:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1371c:	add	r1, r8, #2
   13720:	cmp	r1, r2
   13724:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13728:	movcc	r2, #34	; 0x22
   1372c:	strbcc	r2, [r3, r1]
   13730:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13734:	add	r1, r8, #3
   13738:	add	r8, r8, #4
   1373c:	cmp	r1, r2
   13740:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13744:	movcc	r2, #63	; 0x3f
   13748:	strbcc	r2, [r3, r1]
   1374c:	b	13754 <putchar_unlocked@plt+0x2328>
   13750:	mov	r5, #63	; 0x3f
   13754:	mov	sl, #0
   13758:	b	13204 <putchar_unlocked@plt+0x1dd8>
   1375c:	str	r0, [sp, #40]	; 0x28
   13760:	add	r0, r2, r7
   13764:	str	r6, [sp, #76]	; 0x4c
   13768:	add	r1, r7, #1
   1376c:	ldr	lr, [sp, #80]	; 0x50
   13770:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13774:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13778:	mov	r3, #0
   1377c:	str	r0, [sp, #36]	; 0x24
   13780:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13784:	b	13818 <putchar_unlocked@plt+0x23ec>
   13788:	str	r0, [sp, #76]	; 0x4c
   1378c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13790:	cmp	r9, #0
   13794:	movwne	r9, #1
   13798:	mvn	r7, r0
   1379c:	orr	r7, r7, r9
   137a0:	tst	r7, #1
   137a4:	bne	137f4 <putchar_unlocked@plt+0x23c8>
   137a8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   137ac:	cmp	r8, r6
   137b0:	bcs	137c8 <putchar_unlocked@plt+0x239c>
   137b4:	ldr	r7, [fp, #-56]	; 0xffffffc8
   137b8:	mov	r2, r4
   137bc:	mov	r4, #39	; 0x27
   137c0:	strb	r4, [r7, r8]
   137c4:	mov	r4, r2
   137c8:	add	r7, r8, #1
   137cc:	cmp	r7, r6
   137d0:	bcs	137e8 <putchar_unlocked@plt+0x23bc>
   137d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   137d8:	mov	r2, r4
   137dc:	mov	r4, #39	; 0x27
   137e0:	strb	r4, [r0, r7]
   137e4:	mov	r4, r2
   137e8:	add	r8, r8, #2
   137ec:	mov	r0, #0
   137f0:	b	137fc <putchar_unlocked@plt+0x23d0>
   137f4:	ldr	r6, [fp, #-52]	; 0xffffffcc
   137f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   137fc:	cmp	r8, r6
   13800:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13804:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13808:	strbcc	r5, [r2, r8]
   1380c:	add	r8, r8, #1
   13810:	ldrb	r5, [ip, r1]
   13814:	add	r1, r1, #1
   13818:	ldr	r2, [sp, #40]	; 0x28
   1381c:	tst	r2, #1
   13820:	beq	1385c <putchar_unlocked@plt+0x2430>
   13824:	ldr	r2, [sp, #76]	; 0x4c
   13828:	str	r0, [fp, #-48]	; 0xffffffd0
   1382c:	tst	r2, #1
   13830:	beq	13854 <putchar_unlocked@plt+0x2428>
   13834:	cmp	r8, r6
   13838:	bcs	13850 <putchar_unlocked@plt+0x2424>
   1383c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13840:	mov	r2, r4
   13844:	mov	r4, #92	; 0x5c
   13848:	strb	r4, [r6, r8]
   1384c:	mov	r4, r2
   13850:	add	r8, r8, #1
   13854:	mov	r0, #0
   13858:	b	13950 <putchar_unlocked@plt+0x2524>
   1385c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13860:	tst	r2, #1
   13864:	bne	13bb0 <putchar_unlocked@plt+0x2784>
   13868:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1386c:	cmp	r7, #2
   13870:	movwne	r3, #1
   13874:	orr	r3, r3, r0
   13878:	tst	r3, #1
   1387c:	bne	138d8 <putchar_unlocked@plt+0x24ac>
   13880:	cmp	r8, r6
   13884:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13888:	movcc	r3, #39	; 0x27
   1388c:	strbcc	r3, [r2, r8]
   13890:	add	r3, r8, #1
   13894:	cmp	r3, r6
   13898:	bcs	138b0 <putchar_unlocked@plt+0x2484>
   1389c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138a0:	mov	r7, r4
   138a4:	mov	r4, #36	; 0x24
   138a8:	strb	r4, [r2, r3]
   138ac:	mov	r4, r7
   138b0:	add	r3, r8, #2
   138b4:	cmp	r3, r6
   138b8:	bcs	138d0 <putchar_unlocked@plt+0x24a4>
   138bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   138c0:	mov	r7, r4
   138c4:	mov	r4, #39	; 0x27
   138c8:	strb	r4, [r2, r3]
   138cc:	mov	r4, r7
   138d0:	add	r8, r8, #3
   138d4:	mov	r0, #1
   138d8:	cmp	r8, r6
   138dc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   138e0:	movcc	r3, #92	; 0x5c
   138e4:	strbcc	r3, [r2, r8]
   138e8:	add	r3, r8, #1
   138ec:	cmp	r3, r6
   138f0:	bcs	13910 <putchar_unlocked@plt+0x24e4>
   138f4:	mov	r2, r4
   138f8:	and	r7, r5, #192	; 0xc0
   138fc:	mov	r4, #48	; 0x30
   13900:	orr	r7, r4, r7, lsr #6
   13904:	mov	r4, r2
   13908:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1390c:	strb	r7, [r2, r3]
   13910:	add	r3, r8, #2
   13914:	cmp	r3, r6
   13918:	bcs	13938 <putchar_unlocked@plt+0x250c>
   1391c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13920:	mov	r6, r4
   13924:	lsr	r7, r5, #3
   13928:	mov	r4, #6
   1392c:	bfi	r7, r4, #3, #29
   13930:	mov	r4, r6
   13934:	strb	r7, [r2, r3]
   13938:	str	r0, [fp, #-48]	; 0xffffffd0
   1393c:	ldr	r0, [sp, #76]	; 0x4c
   13940:	mov	r3, #6
   13944:	add	r8, r8, #3
   13948:	bfi	r5, r3, #3, #29
   1394c:	mov	r3, #1
   13950:	ldr	r2, [sp, #36]	; 0x24
   13954:	and	r9, r3, #1
   13958:	cmp	r2, r1
   1395c:	bhi	13788 <putchar_unlocked@plt+0x235c>
   13960:	cmp	r9, #0
   13964:	sub	r7, r1, #1
   13968:	mov	r0, r5
   1396c:	movwne	r9, #1
   13970:	cmp	r9, #0
   13974:	bne	139b8 <putchar_unlocked@plt+0x258c>
   13978:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1397c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13980:	tst	r5, #1
   13984:	beq	13528 <putchar_unlocked@plt+0x20fc>
   13988:	cmp	r8, r6
   1398c:	mov	r5, #0
   13990:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13994:	movcc	r1, #39	; 0x27
   13998:	strbcc	r1, [r2, r8]
   1399c:	add	r1, r8, #1
   139a0:	add	r8, r8, #2
   139a4:	cmp	r1, r6
   139a8:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   139ac:	movcc	r2, #39	; 0x27
   139b0:	strbcc	r2, [r3, r1]
   139b4:	b	13528 <putchar_unlocked@plt+0x20fc>
   139b8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   139bc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   139c0:	b	13528 <putchar_unlocked@plt+0x20fc>
   139c4:	cmp	r8, r1
   139c8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   139cc:	movcc	r0, #39	; 0x27
   139d0:	strbcc	r0, [r2, r8]
   139d4:	add	r0, r8, #1
   139d8:	cmp	r0, r1
   139dc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   139e0:	movcc	r2, #36	; 0x24
   139e4:	strbcc	r2, [r3, r0]
   139e8:	add	r0, r8, #2
   139ec:	cmp	r0, r1
   139f0:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   139f4:	movcc	r2, #39	; 0x27
   139f8:	strbcc	r2, [r3, r0]
   139fc:	add	r0, r8, #3
   13a00:	mov	r3, #1
   13a04:	cmp	r0, r1
   13a08:	add	r8, r0, #1
   13a0c:	str	r3, [fp, #-48]	; 0xffffffd0
   13a10:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a14:	movcc	r1, #92	; 0x5c
   13a18:	strbcc	r1, [r2, r0]
   13a1c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13a20:	cmp	r1, #2
   13a24:	beq	13a88 <putchar_unlocked@plt+0x265c>
   13a28:	add	r1, r7, #1
   13a2c:	mov	sl, #0
   13a30:	mov	r9, #1
   13a34:	mov	r5, #48	; 0x30
   13a38:	cmp	r1, lr
   13a3c:	bcs	13204 <putchar_unlocked@plt+0x1dd8>
   13a40:	ldrb	r1, [ip, r1]
   13a44:	sub	r1, r1, #48	; 0x30
   13a48:	uxtb	r1, r1
   13a4c:	cmp	r1, #9
   13a50:	bhi	13204 <putchar_unlocked@plt+0x1dd8>
   13a54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a58:	cmp	r8, r1
   13a5c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   13a60:	movcc	r1, #48	; 0x30
   13a64:	strbcc	r1, [r2, r8]
   13a68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   13a6c:	add	r1, r0, #2
   13a70:	add	r8, r0, #3
   13a74:	cmp	r1, r2
   13a78:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   13a7c:	movcc	r2, #48	; 0x30
   13a80:	strbcc	r2, [r3, r1]
   13a84:	b	13204 <putchar_unlocked@plt+0x1dd8>
   13a88:	mov	r0, #48	; 0x30
   13a8c:	mov	r9, #1
   13a90:	mov	sl, #0
   13a94:	b	1349c <putchar_unlocked@plt+0x2070>
   13a98:	mov	sl, #0
   13a9c:	b	13ad8 <putchar_unlocked@plt+0x26ac>
   13aa0:	mov	sl, #0
   13aa4:	cmp	lr, r6
   13aa8:	bls	13ad8 <putchar_unlocked@plt+0x26ac>
   13aac:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ab0:	ldr	r6, [sp, #40]	; 0x28
   13ab4:	ldr	r0, [sp, #36]	; 0x24
   13ab8:	ldrb	r0, [r0, r6]
   13abc:	cmp	r0, #0
   13ac0:	beq	13ae0 <putchar_unlocked@plt+0x26b4>
   13ac4:	add	r6, r6, #1
   13ac8:	add	r0, r7, r6
   13acc:	cmp	r0, lr
   13ad0:	bcc	13ab4 <putchar_unlocked@plt+0x2688>
   13ad4:	b	13ae0 <putchar_unlocked@plt+0x26b4>
   13ad8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13adc:	ldr	r6, [sp, #40]	; 0x28
   13ae0:	mov	r1, r6
   13ae4:	ldr	r4, [sp, #20]
   13ae8:	ldr	r6, [sp, #76]	; 0x4c
   13aec:	b	133e0 <putchar_unlocked@plt+0x1fb4>
   13af0:	mov	lr, r7
   13af4:	b	13afc <putchar_unlocked@plt+0x26d0>
   13af8:	mvn	lr, #0
   13afc:	ldr	r9, [fp, #-64]	; 0xffffffc0
   13b00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13b04:	eor	r0, r9, #2
   13b08:	orr	r0, r0, r8
   13b0c:	clz	r0, r0
   13b10:	lsr	r0, r0, #5
   13b14:	tst	r1, r0
   13b18:	bne	13c14 <putchar_unlocked@plt+0x27e8>
   13b1c:	mov	r0, r1
   13b20:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13b24:	cmp	r9, #2
   13b28:	movwne	r1, #1
   13b2c:	orr	r0, r0, r1
   13b30:	tst	r0, #1
   13b34:	bne	13c54 <putchar_unlocked@plt+0x2828>
   13b38:	ldr	r0, [sp, #52]	; 0x34
   13b3c:	ldr	r1, [sp, #68]	; 0x44
   13b40:	str	lr, [sp, #80]	; 0x50
   13b44:	eor	r0, r0, #1
   13b48:	tst	r0, #1
   13b4c:	bne	13c54 <putchar_unlocked@plt+0x2828>
   13b50:	tst	r4, #1
   13b54:	bne	13c1c <putchar_unlocked@plt+0x27f0>
   13b58:	mov	r7, #0
   13b5c:	cmp	r1, #0
   13b60:	beq	13c4c <putchar_unlocked@plt+0x2820>
   13b64:	ldr	r0, [sp, #84]	; 0x54
   13b68:	mov	r3, #0
   13b6c:	cmp	r6, #0
   13b70:	mov	r2, #0
   13b74:	mov	r4, r1
   13b78:	str	r3, [fp, #-72]	; 0xffffffb8
   13b7c:	beq	12cb8 <putchar_unlocked@plt+0x188c>
   13b80:	b	13c54 <putchar_unlocked@plt+0x2828>
   13b84:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13b88:	b	13bb0 <putchar_unlocked@plt+0x2784>
   13b8c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13b90:	mov	r2, #1
   13b94:	mov	lr, r4
   13b98:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13b9c:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13ba0:	b	13bb4 <putchar_unlocked@plt+0x2788>
   13ba4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ba8:	mov	r7, #2
   13bac:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13bb0:	ldr	r2, [sp, #84]	; 0x54
   13bb4:	mov	r0, #0
   13bb8:	ldr	r1, [fp, #12]
   13bbc:	tst	r2, #1
   13bc0:	mov	r2, r7
   13bc4:	mov	r3, lr
   13bc8:	str	r0, [sp, #8]
   13bcc:	ldr	r0, [sp, #64]	; 0x40
   13bd0:	movwne	r2, #4
   13bd4:	cmp	r7, #2
   13bd8:	movne	r2, r7
   13bdc:	str	r2, [sp]
   13be0:	mov	r2, ip
   13be4:	bic	r1, r1, #2
   13be8:	str	r0, [sp, #12]
   13bec:	ldr	r0, [sp, #72]	; 0x48
   13bf0:	str	r1, [sp, #4]
   13bf4:	mov	r1, r6
   13bf8:	str	r0, [sp, #16]
   13bfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13c00:	bl	12c40 <putchar_unlocked@plt+0x1814>
   13c04:	mov	r8, r0
   13c08:	mov	r0, r8
   13c0c:	sub	sp, fp, #28
   13c10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c14:	mov	r7, #2
   13c18:	b	13bb0 <putchar_unlocked@plt+0x2784>
   13c1c:	mov	r0, #5
   13c20:	ldr	r2, [fp, #-84]	; 0xffffffac
   13c24:	ldr	r3, [sp, #80]	; 0x50
   13c28:	str	r0, [sp]
   13c2c:	ldr	r0, [fp, #12]
   13c30:	str	r0, [sp, #4]
   13c34:	ldr	r0, [fp, #16]
   13c38:	str	r0, [sp, #8]
   13c3c:	ldr	r0, [sp, #64]	; 0x40
   13c40:	str	r0, [sp, #12]
   13c44:	ldr	r0, [sp, #72]	; 0x48
   13c48:	b	13bf8 <putchar_unlocked@plt+0x27cc>
   13c4c:	mov	r0, #0
   13c50:	str	r0, [fp, #-72]	; 0xffffffb8
   13c54:	ldr	r1, [sp, #92]	; 0x5c
   13c58:	cmp	r1, #0
   13c5c:	beq	13c9c <putchar_unlocked@plt+0x2870>
   13c60:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13c64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13c68:	tst	r0, #1
   13c6c:	bne	13ca0 <putchar_unlocked@plt+0x2874>
   13c70:	ldrb	r0, [r1]
   13c74:	cmp	r0, #0
   13c78:	beq	13ca0 <putchar_unlocked@plt+0x2874>
   13c7c:	add	r1, r1, #1
   13c80:	cmp	r8, r6
   13c84:	strbcc	r0, [r2, r8]
   13c88:	add	r8, r8, #1
   13c8c:	ldrb	r0, [r1], #1
   13c90:	cmp	r0, #0
   13c94:	bne	13c80 <putchar_unlocked@plt+0x2854>
   13c98:	b	13ca0 <putchar_unlocked@plt+0x2874>
   13c9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13ca0:	cmp	r8, r6
   13ca4:	movcc	r0, #0
   13ca8:	strbcc	r0, [r2, r8]
   13cac:	b	13c08 <putchar_unlocked@plt+0x27dc>
   13cb0:	mov	r2, #1
   13cb4:	b	13b98 <putchar_unlocked@plt+0x276c>
   13cb8:	mov	r7, #5
   13cbc:	b	13bac <putchar_unlocked@plt+0x2780>
   13cc0:	bl	11414 <abort@plt>
   13cc4:	mov	r3, r2
   13cc8:	mov	r2, #0
   13ccc:	b	13cd0 <putchar_unlocked@plt+0x28a4>
   13cd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cd4:	add	fp, sp, #28
   13cd8:	sub	sp, sp, #36	; 0x24
   13cdc:	movw	r8, #29176	; 0x71f8
   13ce0:	cmp	r3, #0
   13ce4:	mov	r4, r2
   13ce8:	str	r2, [sp, #24]
   13cec:	mov	r5, r1
   13cf0:	mov	r6, r0
   13cf4:	str	r0, [sp, #20]
   13cf8:	movt	r8, #2
   13cfc:	movne	r8, r3
   13d00:	bl	1130c <__errno_location@plt>
   13d04:	str	r0, [sp, #28]
   13d08:	cmp	r4, #0
   13d0c:	add	sl, r8, #8
   13d10:	ldm	r8, {r3, r9}
   13d14:	ldr	r7, [r0]
   13d18:	ldr	r1, [r8, #40]	; 0x28
   13d1c:	ldr	r2, [r8, #44]	; 0x2c
   13d20:	mov	r0, #0
   13d24:	orreq	r9, r9, #1
   13d28:	str	r7, [sp, #32]
   13d2c:	mov	r7, r5
   13d30:	stm	sp, {r3, r9, sl}
   13d34:	str	r1, [sp, #12]
   13d38:	str	r2, [sp, #16]
   13d3c:	mov	r1, #0
   13d40:	mov	r2, r6
   13d44:	mov	r3, r5
   13d48:	bl	12c40 <putchar_unlocked@plt+0x1814>
   13d4c:	add	r4, r0, #1
   13d50:	mov	r5, r0
   13d54:	mov	r0, r4
   13d58:	bl	14c60 <putchar_unlocked@plt+0x3834>
   13d5c:	mov	r6, r0
   13d60:	ldr	r0, [r8]
   13d64:	ldr	r2, [r8, #44]	; 0x2c
   13d68:	ldr	r1, [r8, #40]	; 0x28
   13d6c:	mov	r3, r7
   13d70:	stm	sp, {r0, r9, sl}
   13d74:	str	r2, [sp, #16]
   13d78:	str	r1, [sp, #12]
   13d7c:	mov	r0, r6
   13d80:	mov	r1, r4
   13d84:	ldr	r2, [sp, #20]
   13d88:	bl	12c40 <putchar_unlocked@plt+0x1814>
   13d8c:	ldr	r0, [sp, #24]
   13d90:	ldr	r1, [sp, #32]
   13d94:	ldr	r2, [sp, #28]
   13d98:	cmp	r0, #0
   13d9c:	str	r1, [r2]
   13da0:	strne	r5, [r0]
   13da4:	mov	r0, r6
   13da8:	sub	sp, fp, #28
   13dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13db0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13db4:	add	fp, sp, #24
   13db8:	movw	r5, #28972	; 0x712c
   13dbc:	movw	r8, #28968	; 0x7128
   13dc0:	movt	r5, #2
   13dc4:	movt	r8, #2
   13dc8:	ldr	r0, [r5]
   13dcc:	ldr	r4, [r8]
   13dd0:	cmp	r0, #2
   13dd4:	blt	13e00 <putchar_unlocked@plt+0x29d4>
   13dd8:	add	r7, r4, #12
   13ddc:	mov	r6, #0
   13de0:	ldr	r0, [r7, r6, lsl #3]
   13de4:	bl	12820 <putchar_unlocked@plt+0x13f4>
   13de8:	ldr	r1, [r5]
   13dec:	add	r2, r6, #2
   13df0:	add	r0, r6, #1
   13df4:	mov	r6, r0
   13df8:	cmp	r2, r1
   13dfc:	blt	13de0 <putchar_unlocked@plt+0x29b4>
   13e00:	ldr	r0, [r4, #4]
   13e04:	movw	r7, #29224	; 0x7228
   13e08:	movt	r7, #2
   13e0c:	cmp	r0, r7
   13e10:	beq	13e28 <putchar_unlocked@plt+0x29fc>
   13e14:	bl	12820 <putchar_unlocked@plt+0x13f4>
   13e18:	movw	r0, #28976	; 0x7130
   13e1c:	mov	r6, #256	; 0x100
   13e20:	movt	r0, #2
   13e24:	strd	r6, [r0]
   13e28:	movw	r6, #28976	; 0x7130
   13e2c:	movt	r6, #2
   13e30:	cmp	r4, r6
   13e34:	beq	13e44 <putchar_unlocked@plt+0x2a18>
   13e38:	mov	r0, r4
   13e3c:	bl	12820 <putchar_unlocked@plt+0x13f4>
   13e40:	str	r6, [r8]
   13e44:	mov	r0, #1
   13e48:	str	r0, [r5]
   13e4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e50:	movw	r3, #29176	; 0x71f8
   13e54:	mvn	r2, #0
   13e58:	movt	r3, #2
   13e5c:	b	13e60 <putchar_unlocked@plt+0x2a34>
   13e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e64:	add	fp, sp, #28
   13e68:	sub	sp, sp, #44	; 0x2c
   13e6c:	mov	r7, r3
   13e70:	str	r2, [sp, #36]	; 0x24
   13e74:	str	r1, [sp, #32]
   13e78:	mov	r5, r0
   13e7c:	bl	1130c <__errno_location@plt>
   13e80:	cmp	r5, #0
   13e84:	blt	13ff0 <putchar_unlocked@plt+0x2bc4>
   13e88:	cmn	r5, #-2147483647	; 0x80000001
   13e8c:	beq	13ff0 <putchar_unlocked@plt+0x2bc4>
   13e90:	movw	r8, #28972	; 0x712c
   13e94:	movw	r4, #28968	; 0x7128
   13e98:	str	r0, [sp, #28]
   13e9c:	ldr	r0, [r0]
   13ea0:	movt	r8, #2
   13ea4:	movt	r4, #2
   13ea8:	ldr	r1, [r8]
   13eac:	ldr	r6, [r4]
   13eb0:	str	r0, [sp, #24]
   13eb4:	cmp	r1, r5
   13eb8:	ble	13ec4 <putchar_unlocked@plt+0x2a98>
   13ebc:	mov	sl, r6
   13ec0:	b	13f2c <putchar_unlocked@plt+0x2b00>
   13ec4:	movw	r9, #28976	; 0x7130
   13ec8:	mov	r0, #8
   13ecc:	add	r2, r5, #1
   13ed0:	str	r1, [fp, #-32]	; 0xffffffe0
   13ed4:	mvn	r3, #-2147483648	; 0x80000000
   13ed8:	movt	r9, #2
   13edc:	str	r0, [sp]
   13ee0:	sub	r2, r2, r1
   13ee4:	sub	r1, fp, #32
   13ee8:	subs	r0, r6, r9
   13eec:	movne	r0, r6
   13ef0:	bl	14d90 <putchar_unlocked@plt+0x3964>
   13ef4:	cmp	r6, r9
   13ef8:	mov	sl, r0
   13efc:	str	r0, [r4]
   13f00:	ldrdeq	r0, [r9]
   13f04:	stmeq	sl, {r0, r1}
   13f08:	ldr	r1, [r8]
   13f0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13f10:	add	r0, sl, r1, lsl #3
   13f14:	sub	r1, r2, r1
   13f18:	lsl	r2, r1, #3
   13f1c:	mov	r1, #0
   13f20:	bl	11330 <memset@plt>
   13f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f28:	str	r0, [r8]
   13f2c:	mov	r9, sl
   13f30:	ldr	r6, [r9, r5, lsl #3]!
   13f34:	ldr	r4, [r9, #4]!
   13f38:	ldm	r7, {r0, r1}
   13f3c:	ldr	r2, [r7, #40]	; 0x28
   13f40:	ldr	r3, [r7, #44]	; 0x2c
   13f44:	orr	r8, r1, #1
   13f48:	add	r1, r7, #8
   13f4c:	stm	sp, {r0, r8}
   13f50:	add	r0, sp, #8
   13f54:	str	r1, [sp, #20]
   13f58:	stm	r0, {r1, r2, r3}
   13f5c:	mov	r0, r4
   13f60:	mov	r1, r6
   13f64:	ldr	r2, [sp, #32]
   13f68:	ldr	r3, [sp, #36]	; 0x24
   13f6c:	bl	12c40 <putchar_unlocked@plt+0x1814>
   13f70:	cmp	r6, r0
   13f74:	bhi	13fd8 <putchar_unlocked@plt+0x2bac>
   13f78:	add	r6, r0, #1
   13f7c:	movw	r0, #29224	; 0x7228
   13f80:	movt	r0, #2
   13f84:	str	r6, [sl, r5, lsl #3]
   13f88:	cmp	r4, r0
   13f8c:	beq	13f98 <putchar_unlocked@plt+0x2b6c>
   13f90:	mov	r0, r4
   13f94:	bl	12820 <putchar_unlocked@plt+0x13f4>
   13f98:	mov	r0, r6
   13f9c:	bl	14c60 <putchar_unlocked@plt+0x3834>
   13fa0:	str	r0, [r9]
   13fa4:	mov	r4, r0
   13fa8:	add	r3, sp, #8
   13fac:	ldr	r0, [r7]
   13fb0:	ldr	r1, [r7, #40]	; 0x28
   13fb4:	ldr	r2, [r7, #44]	; 0x2c
   13fb8:	stm	sp, {r0, r8}
   13fbc:	ldr	r0, [sp, #20]
   13fc0:	stm	r3, {r0, r1, r2}
   13fc4:	mov	r0, r4
   13fc8:	mov	r1, r6
   13fcc:	ldr	r2, [sp, #32]
   13fd0:	ldr	r3, [sp, #36]	; 0x24
   13fd4:	bl	12c40 <putchar_unlocked@plt+0x1814>
   13fd8:	ldr	r0, [sp, #28]
   13fdc:	ldr	r1, [sp, #24]
   13fe0:	str	r1, [r0]
   13fe4:	mov	r0, r4
   13fe8:	sub	sp, fp, #28
   13fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ff0:	bl	11414 <abort@plt>
   13ff4:	movw	r3, #29176	; 0x71f8
   13ff8:	movt	r3, #2
   13ffc:	b	13e60 <putchar_unlocked@plt+0x2a34>
   14000:	movw	r3, #29176	; 0x71f8
   14004:	mov	r1, r0
   14008:	mov	r0, #0
   1400c:	mvn	r2, #0
   14010:	movt	r3, #2
   14014:	b	13e60 <putchar_unlocked@plt+0x2a34>
   14018:	movw	r3, #29176	; 0x71f8
   1401c:	mov	r2, r1
   14020:	mov	r1, r0
   14024:	mov	r0, #0
   14028:	movt	r3, #2
   1402c:	b	13e60 <putchar_unlocked@plt+0x2a34>
   14030:	push	{fp, lr}
   14034:	mov	fp, sp
   14038:	sub	sp, sp, #48	; 0x30
   1403c:	vmov.i32	q8, #0	; 0x00000000
   14040:	mov	ip, #32
   14044:	mov	r3, sp
   14048:	mov	lr, r2
   1404c:	cmp	r1, #10
   14050:	add	r2, r3, #16
   14054:	vst1.64	{d16-d17}, [r3], ip
   14058:	vst1.64	{d16-d17}, [r3]
   1405c:	vst1.64	{d16-d17}, [r2]
   14060:	beq	14080 <putchar_unlocked@plt+0x2c54>
   14064:	str	r1, [sp]
   14068:	mov	r3, sp
   1406c:	mov	r1, lr
   14070:	mvn	r2, #0
   14074:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   14078:	mov	sp, fp
   1407c:	pop	{fp, pc}
   14080:	bl	11414 <abort@plt>
   14084:	push	{r4, sl, fp, lr}
   14088:	add	fp, sp, #8
   1408c:	sub	sp, sp, #48	; 0x30
   14090:	mov	ip, r3
   14094:	mov	r3, sp
   14098:	vmov.i32	q8, #0	; 0x00000000
   1409c:	mov	lr, #32
   140a0:	cmp	r1, #10
   140a4:	add	r4, r3, #16
   140a8:	vst1.64	{d16-d17}, [r3], lr
   140ac:	vst1.64	{d16-d17}, [r3]
   140b0:	vst1.64	{d16-d17}, [r4]
   140b4:	beq	140d4 <putchar_unlocked@plt+0x2ca8>
   140b8:	str	r1, [sp]
   140bc:	mov	r1, r2
   140c0:	mov	r3, sp
   140c4:	mov	r2, ip
   140c8:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   140cc:	sub	sp, fp, #8
   140d0:	pop	{r4, sl, fp, pc}
   140d4:	bl	11414 <abort@plt>
   140d8:	mov	r2, r1
   140dc:	mov	r1, r0
   140e0:	mov	r0, #0
   140e4:	b	14030 <putchar_unlocked@plt+0x2c04>
   140e8:	mov	r3, r2
   140ec:	mov	r2, r1
   140f0:	mov	r1, r0
   140f4:	mov	r0, #0
   140f8:	b	14084 <putchar_unlocked@plt+0x2c58>
   140fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14100:	add	fp, sp, #24
   14104:	sub	sp, sp, #48	; 0x30
   14108:	movw	r8, #29176	; 0x71f8
   1410c:	mov	lr, r0
   14110:	mov	r3, sp
   14114:	mov	ip, r1
   14118:	movt	r8, #2
   1411c:	mov	r1, r3
   14120:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   14124:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   14128:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   1412c:	stm	r1, {r0, r4, r5, r6, r7, r9}
   14130:	ubfx	r0, r2, #5, #3
   14134:	and	r2, r2, #31
   14138:	mov	r4, #1
   1413c:	add	r0, r3, r0, lsl #2
   14140:	ldr	r1, [r0, #8]
   14144:	bic	r4, r4, r1, lsr r2
   14148:	eor	r1, r1, r4, lsl r2
   1414c:	mov	r2, ip
   14150:	str	r1, [r0, #8]
   14154:	mov	r0, #0
   14158:	mov	r1, lr
   1415c:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   14160:	sub	sp, fp, #24
   14164:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14168:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1416c:	add	fp, sp, #24
   14170:	sub	sp, sp, #48	; 0x30
   14174:	movw	lr, #29176	; 0x71f8
   14178:	mov	ip, r0
   1417c:	mov	r3, sp
   14180:	movt	lr, #2
   14184:	mov	r2, r3
   14188:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   1418c:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   14190:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   14194:	stm	r2, {r0, r4, r5, r6, r7, r8}
   14198:	ubfx	r0, r1, #5, #3
   1419c:	and	r1, r1, #31
   141a0:	mov	r7, #1
   141a4:	add	r0, r3, r0, lsl #2
   141a8:	ldr	r2, [r0, #8]
   141ac:	bic	r7, r7, r2, lsr r1
   141b0:	eor	r1, r2, r7, lsl r1
   141b4:	mvn	r2, #0
   141b8:	str	r1, [r0, #8]
   141bc:	mov	r0, #0
   141c0:	mov	r1, ip
   141c4:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   141c8:	sub	sp, fp, #24
   141cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   141d0:	push	{r4, r5, r6, r7, fp, lr}
   141d4:	add	fp, sp, #16
   141d8:	sub	sp, sp, #48	; 0x30
   141dc:	movw	lr, #29176	; 0x71f8
   141e0:	mov	ip, r0
   141e4:	mov	r3, sp
   141e8:	movt	lr, #2
   141ec:	mov	r2, r3
   141f0:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   141f4:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   141f8:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   141fc:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14200:	mov	r1, ip
   14204:	mvn	r2, #0
   14208:	ldr	r0, [sp, #12]
   1420c:	orr	r0, r0, #67108864	; 0x4000000
   14210:	str	r0, [sp, #12]
   14214:	mov	r0, #0
   14218:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   1421c:	sub	sp, fp, #16
   14220:	pop	{r4, r5, r6, r7, fp, pc}
   14224:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14228:	add	fp, sp, #24
   1422c:	sub	sp, sp, #48	; 0x30
   14230:	movw	r8, #29176	; 0x71f8
   14234:	mov	ip, r1
   14238:	mov	lr, r0
   1423c:	mov	r3, sp
   14240:	movt	r8, #2
   14244:	mov	r2, r3
   14248:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   1424c:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14250:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   14254:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14258:	mov	r1, lr
   1425c:	mov	r2, ip
   14260:	ldr	r0, [sp, #12]
   14264:	orr	r0, r0, #67108864	; 0x4000000
   14268:	str	r0, [sp, #12]
   1426c:	mov	r0, #0
   14270:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   14274:	sub	sp, fp, #24
   14278:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1427c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14280:	add	fp, sp, #24
   14284:	sub	sp, sp, #96	; 0x60
   14288:	mov	lr, sp
   1428c:	vmov.i32	q8, #0	; 0x00000000
   14290:	mov	ip, r2
   14294:	cmp	r1, #10
   14298:	add	r3, lr, #16
   1429c:	mov	r2, lr
   142a0:	vst1.64	{d16-d17}, [r3]
   142a4:	mov	r3, #28
   142a8:	vst1.64	{d16-d17}, [r2], r3
   142ac:	vst1.32	{d16-d17}, [r2]
   142b0:	beq	142f0 <putchar_unlocked@plt+0x2ec4>
   142b4:	str	r1, [sp, #48]	; 0x30
   142b8:	add	r3, sp, #48	; 0x30
   142bc:	ldm	lr!, {r2, r4, r5, r6, r7}
   142c0:	add	r1, r3, #4
   142c4:	stmia	r1!, {r2, r4, r5, r6, r7}
   142c8:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   142cc:	stm	r1, {r2, r4, r5, r6, r7, r8}
   142d0:	mvn	r2, #0
   142d4:	ldr	r1, [sp, #60]	; 0x3c
   142d8:	orr	r1, r1, #67108864	; 0x4000000
   142dc:	str	r1, [sp, #60]	; 0x3c
   142e0:	mov	r1, ip
   142e4:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   142e8:	sub	sp, fp, #24
   142ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   142f0:	bl	11414 <abort@plt>
   142f4:	push	{fp, lr}
   142f8:	mov	fp, sp
   142fc:	sub	sp, sp, #8
   14300:	mvn	ip, #0
   14304:	str	ip, [sp]
   14308:	bl	14314 <putchar_unlocked@plt+0x2ee8>
   1430c:	mov	sp, fp
   14310:	pop	{fp, pc}
   14314:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14318:	add	fp, sp, #24
   1431c:	sub	sp, sp, #48	; 0x30
   14320:	movw	ip, #29176	; 0x71f8
   14324:	mov	lr, r3
   14328:	mov	r3, sp
   1432c:	cmp	r1, #0
   14330:	movt	ip, #2
   14334:	cmpne	r2, #0
   14338:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   1433c:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   14340:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14344:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14348:	mov	r3, #10
   1434c:	str	r3, [sp]
   14350:	bne	14358 <putchar_unlocked@plt+0x2f2c>
   14354:	bl	11414 <abort@plt>
   14358:	ldr	ip, [fp, #8]
   1435c:	str	r2, [sp, #44]	; 0x2c
   14360:	str	r1, [sp, #40]	; 0x28
   14364:	mov	r3, sp
   14368:	mov	r1, lr
   1436c:	mov	r2, ip
   14370:	bl	13e60 <putchar_unlocked@plt+0x2a34>
   14374:	sub	sp, fp, #24
   14378:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1437c:	push	{fp, lr}
   14380:	mov	fp, sp
   14384:	sub	sp, sp, #8
   14388:	mov	r3, r2
   1438c:	mov	r2, r1
   14390:	mov	r1, r0
   14394:	mvn	r0, #0
   14398:	str	r0, [sp]
   1439c:	mov	r0, #0
   143a0:	bl	14314 <putchar_unlocked@plt+0x2ee8>
   143a4:	mov	sp, fp
   143a8:	pop	{fp, pc}
   143ac:	push	{fp, lr}
   143b0:	mov	fp, sp
   143b4:	sub	sp, sp, #8
   143b8:	mov	ip, r2
   143bc:	mov	r2, r1
   143c0:	mov	r1, r0
   143c4:	str	r3, [sp]
   143c8:	mov	r0, #0
   143cc:	mov	r3, ip
   143d0:	bl	14314 <putchar_unlocked@plt+0x2ee8>
   143d4:	mov	sp, fp
   143d8:	pop	{fp, pc}
   143dc:	movw	r3, #28984	; 0x7138
   143e0:	movt	r3, #2
   143e4:	b	13e60 <putchar_unlocked@plt+0x2a34>
   143e8:	movw	r3, #28984	; 0x7138
   143ec:	mov	r2, r1
   143f0:	mov	r1, r0
   143f4:	mov	r0, #0
   143f8:	movt	r3, #2
   143fc:	b	13e60 <putchar_unlocked@plt+0x2a34>
   14400:	movw	r3, #28984	; 0x7138
   14404:	mvn	r2, #0
   14408:	movt	r3, #2
   1440c:	b	13e60 <putchar_unlocked@plt+0x2a34>
   14410:	movw	r3, #28984	; 0x7138
   14414:	mov	r1, r0
   14418:	mov	r0, #0
   1441c:	mvn	r2, #0
   14420:	movt	r3, #2
   14424:	b	13e60 <putchar_unlocked@plt+0x2a34>
   14428:	push	{r4, r5, fp, lr}
   1442c:	add	fp, sp, #8
   14430:	mov	r5, r0
   14434:	mov	r4, r1
   14438:	mov	r0, #0
   1443c:	mov	r2, #5
   14440:	mov	r1, r5
   14444:	bl	111e0 <dcgettext@plt>
   14448:	cmp	r0, r5
   1444c:	popne	{r4, r5, fp, pc}
   14450:	bl	15218 <putchar_unlocked@plt+0x3dec>
   14454:	ldrb	r1, [r0]
   14458:	and	r1, r1, #223	; 0xdf
   1445c:	cmp	r1, #71	; 0x47
   14460:	beq	144c8 <putchar_unlocked@plt+0x309c>
   14464:	cmp	r1, #85	; 0x55
   14468:	bne	144ec <putchar_unlocked@plt+0x30c0>
   1446c:	ldrb	r1, [r0, #1]
   14470:	and	r1, r1, #223	; 0xdf
   14474:	cmp	r1, #84	; 0x54
   14478:	bne	144ec <putchar_unlocked@plt+0x30c0>
   1447c:	ldrb	r1, [r0, #2]
   14480:	and	r1, r1, #223	; 0xdf
   14484:	cmp	r1, #70	; 0x46
   14488:	ldrbeq	r1, [r0, #3]
   1448c:	cmpeq	r1, #45	; 0x2d
   14490:	bne	144ec <putchar_unlocked@plt+0x30c0>
   14494:	ldrb	r1, [r0, #4]
   14498:	cmp	r1, #56	; 0x38
   1449c:	ldrbeq	r0, [r0, #5]
   144a0:	cmpeq	r0, #0
   144a4:	bne	144ec <putchar_unlocked@plt+0x30c0>
   144a8:	ldrb	r1, [r5]
   144ac:	movw	r2, #23882	; 0x5d4a
   144b0:	movw	r0, #23886	; 0x5d4e
   144b4:	movt	r2, #1
   144b8:	movt	r0, #1
   144bc:	cmp	r1, #96	; 0x60
   144c0:	moveq	r0, r2
   144c4:	pop	{r4, r5, fp, pc}
   144c8:	ldrb	r1, [r0, #1]
   144cc:	and	r1, r1, #223	; 0xdf
   144d0:	cmp	r1, #66	; 0x42
   144d4:	bne	144ec <putchar_unlocked@plt+0x30c0>
   144d8:	ldrb	r1, [r0, #2]
   144dc:	cmp	r1, #49	; 0x31
   144e0:	ldrbeq	r1, [r0, #3]
   144e4:	cmpeq	r1, #56	; 0x38
   144e8:	beq	14508 <putchar_unlocked@plt+0x30dc>
   144ec:	movw	r1, #23876	; 0x5d44
   144f0:	movw	r0, #23880	; 0x5d48
   144f4:	cmp	r4, #9
   144f8:	movt	r1, #1
   144fc:	movt	r0, #1
   14500:	moveq	r0, r1
   14504:	pop	{r4, r5, fp, pc}
   14508:	ldrb	r1, [r0, #4]
   1450c:	cmp	r1, #48	; 0x30
   14510:	ldrbeq	r1, [r0, #5]
   14514:	cmpeq	r1, #51	; 0x33
   14518:	bne	144ec <putchar_unlocked@plt+0x30c0>
   1451c:	ldrb	r1, [r0, #6]
   14520:	cmp	r1, #48	; 0x30
   14524:	ldrbeq	r0, [r0, #7]
   14528:	cmpeq	r0, #0
   1452c:	bne	144ec <putchar_unlocked@plt+0x30c0>
   14530:	ldrb	r1, [r5]
   14534:	movw	r2, #23890	; 0x5d52
   14538:	movw	r0, #23894	; 0x5d56
   1453c:	movt	r2, #1
   14540:	movt	r0, #1
   14544:	b	144bc <putchar_unlocked@plt+0x3090>
   14548:	push	{r4, r5, fp, lr}
   1454c:	add	fp, sp, #8
   14550:	mov	r5, r0
   14554:	mov	r0, #33	; 0x21
   14558:	bl	14c30 <putchar_unlocked@plt+0x3804>
   1455c:	add	r1, r5, #44	; 0x2c
   14560:	mov	r2, #32
   14564:	mov	r4, r0
   14568:	bl	1133c <strncpy@plt>
   1456c:	mov	r5, #0
   14570:	mov	r0, r4
   14574:	strb	r5, [r4, #32]
   14578:	bl	112f4 <strlen@plt>
   1457c:	cmp	r0, #1
   14580:	blt	145a8 <putchar_unlocked@plt+0x317c>
   14584:	add	r1, r4, r0
   14588:	mov	r0, r1
   1458c:	ldrb	r2, [r0, #-1]!
   14590:	cmp	r2, #32
   14594:	bne	145a8 <putchar_unlocked@plt+0x317c>
   14598:	strb	r5, [r1, #-1]
   1459c:	cmp	r4, r0
   145a0:	mov	r1, r0
   145a4:	bcc	1458c <putchar_unlocked@plt+0x3160>
   145a8:	mov	r0, r4
   145ac:	pop	{r4, r5, fp, pc}
   145b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145b4:	add	fp, sp, #28
   145b8:	sub	sp, sp, #20
   145bc:	mov	r6, #0
   145c0:	mov	r5, r3
   145c4:	str	r2, [sp, #12]
   145c8:	str	r1, [sp, #8]
   145cc:	str	r6, [sp, #16]
   145d0:	bl	11168 <utmpxname@plt>
   145d4:	bl	111f8 <setutxent@plt>
   145d8:	bl	11420 <getutxent@plt>
   145dc:	cmp	r0, #0
   145e0:	beq	146bc <putchar_unlocked@plt+0x3290>
   145e4:	mov	r4, r0
   145e8:	and	r7, r5, #1
   145ec:	and	r8, r5, #2
   145f0:	mov	r5, #0
   145f4:	mov	r9, #384	; 0x180
   145f8:	add	sl, sp, #16
   145fc:	mov	r6, #0
   14600:	ldrb	r0, [r4, #44]	; 0x2c
   14604:	cmp	r0, #0
   14608:	mov	r0, #0
   1460c:	ldrhne	r0, [r4]
   14610:	subne	r0, r0, #7
   14614:	clzne	r0, r0
   14618:	lsrne	r0, r0, #5
   1461c:	cmp	r8, #0
   14620:	beq	1462c <putchar_unlocked@plt+0x3200>
   14624:	cmp	r0, #0
   14628:	beq	146a8 <putchar_unlocked@plt+0x327c>
   1462c:	cmp	r7, #0
   14630:	beq	14668 <putchar_unlocked@plt+0x323c>
   14634:	eors	r0, r0, #1
   14638:	bne	14668 <putchar_unlocked@plt+0x323c>
   1463c:	ldr	r0, [r4, #4]
   14640:	cmp	r0, #1
   14644:	blt	14668 <putchar_unlocked@plt+0x323c>
   14648:	mov	r1, #0
   1464c:	bl	112d0 <kill@plt>
   14650:	cmn	r0, #1
   14654:	bgt	14668 <putchar_unlocked@plt+0x323c>
   14658:	bl	1130c <__errno_location@plt>
   1465c:	ldr	r0, [r0]
   14660:	cmp	r0, #3
   14664:	beq	146a8 <putchar_unlocked@plt+0x327c>
   14668:	ldr	r0, [sp, #16]
   1466c:	cmp	r5, r0
   14670:	bne	14690 <putchar_unlocked@plt+0x3264>
   14674:	mov	r0, r6
   14678:	mov	r1, sl
   1467c:	mov	r2, #1
   14680:	mvn	r3, #0
   14684:	str	r9, [sp]
   14688:	bl	14d90 <putchar_unlocked@plt+0x3964>
   1468c:	mov	r6, r0
   14690:	add	r0, r5, r5, lsl #1
   14694:	mov	r1, r4
   14698:	mov	r2, #384	; 0x180
   1469c:	add	r0, r6, r0, lsl #7
   146a0:	bl	11198 <memcpy@plt>
   146a4:	add	r5, r5, #1
   146a8:	bl	11420 <getutxent@plt>
   146ac:	mov	r4, r0
   146b0:	cmp	r0, #0
   146b4:	bne	14600 <putchar_unlocked@plt+0x31d4>
   146b8:	b	146c0 <putchar_unlocked@plt+0x3294>
   146bc:	mov	r5, #0
   146c0:	bl	11384 <endutxent@plt>
   146c4:	ldr	r0, [sp, #8]
   146c8:	str	r5, [r0]
   146cc:	ldr	r0, [sp, #12]
   146d0:	str	r6, [r0]
   146d4:	mov	r0, #0
   146d8:	sub	sp, fp, #28
   146dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146e0:	push	{r4, r5, r6, r7, fp, lr}
   146e4:	add	fp, sp, #16
   146e8:	mov	r4, r1
   146ec:	mov	r1, #0
   146f0:	mov	r6, r2
   146f4:	bl	11390 <setlocale@plt>
   146f8:	cmp	r0, #0
   146fc:	beq	14728 <putchar_unlocked@plt+0x32fc>
   14700:	mov	r7, r0
   14704:	bl	112f4 <strlen@plt>
   14708:	cmp	r0, r6
   1470c:	bcs	1473c <putchar_unlocked@plt+0x3310>
   14710:	add	r2, r0, #1
   14714:	mov	r0, r4
   14718:	mov	r1, r7
   1471c:	bl	11198 <memcpy@plt>
   14720:	mov	r5, #0
   14724:	b	14764 <putchar_unlocked@plt+0x3338>
   14728:	cmp	r6, #0
   1472c:	mov	r5, #22
   14730:	movne	r0, #0
   14734:	strbne	r0, [r4]
   14738:	b	14764 <putchar_unlocked@plt+0x3338>
   1473c:	mov	r5, #34	; 0x22
   14740:	cmp	r6, #0
   14744:	beq	14764 <putchar_unlocked@plt+0x3338>
   14748:	sub	r6, r6, #1
   1474c:	mov	r0, r4
   14750:	mov	r1, r7
   14754:	mov	r2, r6
   14758:	bl	11198 <memcpy@plt>
   1475c:	mov	r0, #0
   14760:	strb	r0, [r4, r6]
   14764:	mov	r0, r5
   14768:	pop	{r4, r5, r6, r7, fp, pc}
   1476c:	mov	r1, #0
   14770:	b	11390 <setlocale@plt>
   14774:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14778:	add	fp, sp, #24
   1477c:	sub	sp, sp, #32
   14780:	ldr	r6, [fp, #12]
   14784:	ldr	r7, [fp, #8]
   14788:	mov	r4, r2
   1478c:	mov	r8, r0
   14790:	cmp	r1, #0
   14794:	beq	147bc <putchar_unlocked@plt+0x3390>
   14798:	movw	r2, #23984	; 0x5db0
   1479c:	mov	r5, r1
   147a0:	str	r3, [sp, #4]
   147a4:	str	r4, [sp]
   147a8:	mov	r0, r8
   147ac:	mov	r1, #1
   147b0:	movt	r2, #1
   147b4:	mov	r3, r5
   147b8:	b	147d4 <putchar_unlocked@plt+0x33a8>
   147bc:	movw	r2, #23996	; 0x5dbc
   147c0:	str	r3, [sp]
   147c4:	mov	r0, r8
   147c8:	mov	r1, #1
   147cc:	mov	r3, r4
   147d0:	movt	r2, #1
   147d4:	bl	11360 <__fprintf_chk@plt>
   147d8:	movw	r1, #24003	; 0x5dc3
   147dc:	mov	r0, #0
   147e0:	mov	r2, #5
   147e4:	movt	r1, #1
   147e8:	bl	111e0 <dcgettext@plt>
   147ec:	movw	r2, #24721	; 0x6091
   147f0:	mov	r3, r0
   147f4:	movw	r0, #2022	; 0x7e6
   147f8:	mov	r1, #1
   147fc:	str	r0, [sp]
   14800:	movt	r2, #1
   14804:	mov	r0, r8
   14808:	bl	11360 <__fprintf_chk@plt>
   1480c:	movw	r4, #23291	; 0x5afb
   14810:	mov	r1, r8
   14814:	movt	r4, #1
   14818:	mov	r0, r4
   1481c:	bl	1112c <fputs_unlocked@plt>
   14820:	movw	r1, #24007	; 0x5dc7
   14824:	mov	r0, #0
   14828:	mov	r2, #5
   1482c:	movt	r1, #1
   14830:	bl	111e0 <dcgettext@plt>
   14834:	movw	r3, #24178	; 0x5e72
   14838:	mov	r2, r0
   1483c:	mov	r0, r8
   14840:	mov	r1, #1
   14844:	movt	r3, #1
   14848:	bl	11360 <__fprintf_chk@plt>
   1484c:	mov	r0, r4
   14850:	mov	r1, r8
   14854:	bl	1112c <fputs_unlocked@plt>
   14858:	cmp	r6, #9
   1485c:	bhi	148c0 <putchar_unlocked@plt+0x3494>
   14860:	add	r0, pc, #0
   14864:	ldr	pc, [r0, r6, lsl #2]
   14868:	muleq	r1, r8, sl
   1486c:	muleq	r1, r0, r8
   14870:	andeq	r4, r1, ip, asr #17
   14874:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14878:	andeq	r4, r1, ip, lsl r9
   1487c:	andeq	r4, r1, r4, asr #18
   14880:	andeq	r4, r1, ip, ror #18
   14884:	andeq	r4, r1, r4, lsr #19
   14888:	andeq	r4, r1, r4, asr #20
   1488c:	andeq	r4, r1, ip, ror #19
   14890:	movw	r1, #24212	; 0x5e94
   14894:	mov	r0, #0
   14898:	mov	r2, #5
   1489c:	movt	r1, #1
   148a0:	bl	111e0 <dcgettext@plt>
   148a4:	ldr	r3, [r7]
   148a8:	mov	r2, r0
   148ac:	mov	r0, r8
   148b0:	mov	r1, #1
   148b4:	sub	sp, fp, #24
   148b8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   148bc:	b	11360 <__fprintf_chk@plt>
   148c0:	movw	r1, #24531	; 0x5fd3
   148c4:	movt	r1, #1
   148c8:	b	149f4 <putchar_unlocked@plt+0x35c8>
   148cc:	movw	r1, #24228	; 0x5ea4
   148d0:	mov	r0, #0
   148d4:	mov	r2, #5
   148d8:	movt	r1, #1
   148dc:	bl	111e0 <dcgettext@plt>
   148e0:	mov	r2, r0
   148e4:	ldr	r3, [r7]
   148e8:	ldr	r0, [r7, #4]
   148ec:	str	r0, [sp]
   148f0:	b	149e0 <putchar_unlocked@plt+0x35b4>
   148f4:	movw	r1, #24251	; 0x5ebb
   148f8:	mov	r0, #0
   148fc:	mov	r2, #5
   14900:	movt	r1, #1
   14904:	bl	111e0 <dcgettext@plt>
   14908:	ldr	r3, [r7]
   1490c:	mov	r2, r0
   14910:	ldmib	r7, {r0, r1}
   14914:	stm	sp, {r0, r1}
   14918:	b	149e0 <putchar_unlocked@plt+0x35b4>
   1491c:	movw	r1, #24279	; 0x5ed7
   14920:	mov	r0, #0
   14924:	mov	r2, #5
   14928:	movt	r1, #1
   1492c:	bl	111e0 <dcgettext@plt>
   14930:	ldr	r3, [r7]
   14934:	mov	r2, r0
   14938:	ldmib	r7, {r0, r1, r7}
   1493c:	stm	sp, {r0, r1, r7}
   14940:	b	149e0 <putchar_unlocked@plt+0x35b4>
   14944:	movw	r1, #24311	; 0x5ef7
   14948:	mov	r0, #0
   1494c:	mov	r2, #5
   14950:	movt	r1, #1
   14954:	bl	111e0 <dcgettext@plt>
   14958:	ldr	r3, [r7]
   1495c:	mov	r2, r0
   14960:	ldmib	r7, {r0, r1, r6, r7}
   14964:	stm	sp, {r0, r1, r6, r7}
   14968:	b	149e0 <putchar_unlocked@plt+0x35b4>
   1496c:	movw	r1, #24347	; 0x5f1b
   14970:	mov	r0, #0
   14974:	mov	r2, #5
   14978:	movt	r1, #1
   1497c:	bl	111e0 <dcgettext@plt>
   14980:	ldr	r3, [r7]
   14984:	mov	r2, r0
   14988:	ldmib	r7, {r0, r1, r6}
   1498c:	ldr	r5, [r7, #16]
   14990:	ldr	r7, [r7, #20]
   14994:	stm	sp, {r0, r1, r6}
   14998:	str	r5, [sp, #12]
   1499c:	str	r7, [sp, #16]
   149a0:	b	149e0 <putchar_unlocked@plt+0x35b4>
   149a4:	movw	r1, #24387	; 0x5f43
   149a8:	mov	r0, #0
   149ac:	mov	r2, #5
   149b0:	movt	r1, #1
   149b4:	bl	111e0 <dcgettext@plt>
   149b8:	ldr	r3, [r7]
   149bc:	mov	r2, r0
   149c0:	ldmib	r7, {r0, r1, r6}
   149c4:	ldr	r5, [r7, #16]
   149c8:	ldr	r4, [r7, #20]
   149cc:	ldr	r7, [r7, #24]
   149d0:	stm	sp, {r0, r1, r6}
   149d4:	str	r5, [sp, #12]
   149d8:	str	r4, [sp, #16]
   149dc:	str	r7, [sp, #20]
   149e0:	mov	r0, r8
   149e4:	mov	r1, #1
   149e8:	b	14a94 <putchar_unlocked@plt+0x3668>
   149ec:	movw	r1, #24479	; 0x5f9f
   149f0:	movt	r1, #1
   149f4:	mov	r0, #0
   149f8:	mov	r2, #5
   149fc:	bl	111e0 <dcgettext@plt>
   14a00:	mov	ip, r0
   14a04:	ldr	r3, [r7]
   14a08:	ldr	r0, [r7, #4]
   14a0c:	ldr	r1, [r7, #8]
   14a10:	ldr	r6, [r7, #12]
   14a14:	ldr	r5, [r7, #16]
   14a18:	ldr	r4, [r7, #20]
   14a1c:	ldr	r2, [r7, #24]
   14a20:	ldr	lr, [r7, #28]
   14a24:	ldr	r7, [r7, #32]
   14a28:	stm	sp, {r0, r1, r6}
   14a2c:	str	r5, [sp, #12]
   14a30:	str	r4, [sp, #16]
   14a34:	str	r2, [sp, #20]
   14a38:	str	lr, [sp, #24]
   14a3c:	str	r7, [sp, #28]
   14a40:	b	14a88 <putchar_unlocked@plt+0x365c>
   14a44:	movw	r1, #24431	; 0x5f6f
   14a48:	mov	r0, #0
   14a4c:	mov	r2, #5
   14a50:	movt	r1, #1
   14a54:	bl	111e0 <dcgettext@plt>
   14a58:	mov	ip, r0
   14a5c:	ldr	r3, [r7]
   14a60:	ldmib	r7, {r0, r1, r6}
   14a64:	ldr	r5, [r7, #16]
   14a68:	ldr	r4, [r7, #20]
   14a6c:	ldr	r2, [r7, #24]
   14a70:	ldr	r7, [r7, #28]
   14a74:	stm	sp, {r0, r1, r6}
   14a78:	str	r5, [sp, #12]
   14a7c:	str	r4, [sp, #16]
   14a80:	str	r2, [sp, #20]
   14a84:	str	r7, [sp, #24]
   14a88:	mov	r0, r8
   14a8c:	mov	r1, #1
   14a90:	mov	r2, ip
   14a94:	bl	11360 <__fprintf_chk@plt>
   14a98:	sub	sp, fp, #24
   14a9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14aa0:	push	{r4, sl, fp, lr}
   14aa4:	add	fp, sp, #8
   14aa8:	sub	sp, sp, #8
   14aac:	ldr	ip, [fp, #8]
   14ab0:	mov	lr, #0
   14ab4:	ldr	r4, [ip, lr, lsl #2]
   14ab8:	add	lr, lr, #1
   14abc:	cmp	r4, #0
   14ac0:	bne	14ab4 <putchar_unlocked@plt+0x3688>
   14ac4:	sub	r4, lr, #1
   14ac8:	str	ip, [sp]
   14acc:	str	r4, [sp, #4]
   14ad0:	bl	14774 <putchar_unlocked@plt+0x3348>
   14ad4:	sub	sp, fp, #8
   14ad8:	pop	{r4, sl, fp, pc}
   14adc:	push	{r4, r5, fp, lr}
   14ae0:	add	fp, sp, #8
   14ae4:	sub	sp, sp, #48	; 0x30
   14ae8:	ldr	r4, [fp, #8]
   14aec:	mov	ip, #0
   14af0:	add	lr, sp, #8
   14af4:	ldr	r5, [r4]
   14af8:	cmp	r5, #0
   14afc:	str	r5, [lr, ip, lsl #2]
   14b00:	beq	14b14 <putchar_unlocked@plt+0x36e8>
   14b04:	add	ip, ip, #1
   14b08:	add	r4, r4, #4
   14b0c:	cmp	ip, #10
   14b10:	bcc	14af4 <putchar_unlocked@plt+0x36c8>
   14b14:	str	lr, [sp]
   14b18:	str	ip, [sp, #4]
   14b1c:	bl	14774 <putchar_unlocked@plt+0x3348>
   14b20:	sub	sp, fp, #8
   14b24:	pop	{r4, r5, fp, pc}
   14b28:	push	{fp, lr}
   14b2c:	mov	fp, sp
   14b30:	sub	sp, sp, #8
   14b34:	add	ip, fp, #8
   14b38:	str	ip, [sp, #4]
   14b3c:	str	ip, [sp]
   14b40:	bl	14adc <putchar_unlocked@plt+0x36b0>
   14b44:	mov	sp, fp
   14b48:	pop	{fp, pc}
   14b4c:	push	{fp, lr}
   14b50:	mov	fp, sp
   14b54:	movw	r0, #29052	; 0x717c
   14b58:	movt	r0, #2
   14b5c:	ldr	r1, [r0]
   14b60:	movw	r0, #23291	; 0x5afb
   14b64:	movt	r0, #1
   14b68:	bl	1112c <fputs_unlocked@plt>
   14b6c:	movw	r1, #24591	; 0x600f
   14b70:	mov	r0, #0
   14b74:	mov	r2, #5
   14b78:	movt	r1, #1
   14b7c:	bl	111e0 <dcgettext@plt>
   14b80:	movw	r2, #24611	; 0x6023
   14b84:	mov	r1, r0
   14b88:	mov	r0, #1
   14b8c:	movt	r2, #1
   14b90:	bl	11348 <__printf_chk@plt>
   14b94:	movw	r1, #24633	; 0x6039
   14b98:	mov	r0, #0
   14b9c:	mov	r2, #5
   14ba0:	movt	r1, #1
   14ba4:	bl	111e0 <dcgettext@plt>
   14ba8:	movw	r2, #22855	; 0x5947
   14bac:	movw	r3, #23100	; 0x5a3c
   14bb0:	mov	r1, r0
   14bb4:	mov	r0, #1
   14bb8:	movt	r2, #1
   14bbc:	movt	r3, #1
   14bc0:	bl	11348 <__printf_chk@plt>
   14bc4:	movw	r1, #24653	; 0x604d
   14bc8:	mov	r0, #0
   14bcc:	mov	r2, #5
   14bd0:	movt	r1, #1
   14bd4:	bl	111e0 <dcgettext@plt>
   14bd8:	movw	r2, #24692	; 0x6074
   14bdc:	mov	r1, r0
   14be0:	mov	r0, #1
   14be4:	movt	r2, #1
   14be8:	pop	{fp, lr}
   14bec:	b	11348 <__printf_chk@plt>
   14bf0:	b	14bf4 <putchar_unlocked@plt+0x37c8>
   14bf4:	push	{r4, r5, r6, sl, fp, lr}
   14bf8:	add	fp, sp, #16
   14bfc:	mov	r4, r2
   14c00:	mov	r5, r1
   14c04:	mov	r6, r0
   14c08:	bl	152b0 <putchar_unlocked@plt+0x3e84>
   14c0c:	cmp	r0, #0
   14c10:	popne	{r4, r5, r6, sl, fp, pc}
   14c14:	cmp	r6, #0
   14c18:	beq	14c2c <putchar_unlocked@plt+0x3800>
   14c1c:	cmp	r5, #0
   14c20:	cmpne	r4, #0
   14c24:	bne	14c2c <putchar_unlocked@plt+0x3800>
   14c28:	pop	{r4, r5, r6, sl, fp, pc}
   14c2c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c30:	push	{fp, lr}
   14c34:	mov	fp, sp
   14c38:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14c3c:	cmp	r0, #0
   14c40:	popne	{fp, pc}
   14c44:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c48:	push	{fp, lr}
   14c4c:	mov	fp, sp
   14c50:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14c54:	cmp	r0, #0
   14c58:	popne	{fp, pc}
   14c5c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c60:	push	{fp, lr}
   14c64:	mov	fp, sp
   14c68:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14c6c:	cmp	r0, #0
   14c70:	popne	{fp, pc}
   14c74:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14c78:	push	{r4, r5, fp, lr}
   14c7c:	add	fp, sp, #8
   14c80:	mov	r4, r1
   14c84:	mov	r5, r0
   14c88:	bl	15148 <putchar_unlocked@plt+0x3d1c>
   14c8c:	cmp	r0, #0
   14c90:	popne	{r4, r5, fp, pc}
   14c94:	cmp	r5, #0
   14c98:	beq	14ca8 <putchar_unlocked@plt+0x387c>
   14c9c:	cmp	r4, #0
   14ca0:	bne	14ca8 <putchar_unlocked@plt+0x387c>
   14ca4:	pop	{r4, r5, fp, pc}
   14ca8:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14cac:	push	{fp, lr}
   14cb0:	mov	fp, sp
   14cb4:	cmp	r1, #0
   14cb8:	orreq	r1, r1, #1
   14cbc:	bl	15148 <putchar_unlocked@plt+0x3d1c>
   14cc0:	cmp	r0, #0
   14cc4:	popne	{fp, pc}
   14cc8:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14ccc:	push	{fp, lr}
   14cd0:	mov	fp, sp
   14cd4:	clz	r3, r2
   14cd8:	lsr	ip, r3, #5
   14cdc:	clz	r3, r1
   14ce0:	lsr	r3, r3, #5
   14ce4:	orrs	r3, r3, ip
   14ce8:	movwne	r1, #1
   14cec:	movwne	r2, #1
   14cf0:	bl	152b0 <putchar_unlocked@plt+0x3e84>
   14cf4:	cmp	r0, #0
   14cf8:	popne	{fp, pc}
   14cfc:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14d00:	push	{fp, lr}
   14d04:	mov	fp, sp
   14d08:	mov	r2, r1
   14d0c:	mov	r1, r0
   14d10:	mov	r0, #0
   14d14:	bl	152b0 <putchar_unlocked@plt+0x3e84>
   14d18:	cmp	r0, #0
   14d1c:	popne	{fp, pc}
   14d20:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14d24:	mov	r2, r1
   14d28:	mov	r1, r0
   14d2c:	mov	r0, #0
   14d30:	b	14ccc <putchar_unlocked@plt+0x38a0>
   14d34:	mov	r2, #1
   14d38:	b	14d3c <putchar_unlocked@plt+0x3910>
   14d3c:	push	{r4, r5, fp, lr}
   14d40:	add	fp, sp, #8
   14d44:	ldr	r5, [r1]
   14d48:	mov	r4, r1
   14d4c:	cmp	r0, #0
   14d50:	beq	14d68 <putchar_unlocked@plt+0x393c>
   14d54:	mov	r1, #1
   14d58:	add	r1, r1, r5, lsr #1
   14d5c:	adds	r5, r5, r1
   14d60:	bcc	14d80 <putchar_unlocked@plt+0x3954>
   14d64:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14d68:	cmp	r5, #0
   14d6c:	bne	14d80 <putchar_unlocked@plt+0x3954>
   14d70:	mov	r1, #64	; 0x40
   14d74:	cmp	r2, #64	; 0x40
   14d78:	udiv	r5, r1, r2
   14d7c:	addhi	r5, r5, #1
   14d80:	mov	r1, r5
   14d84:	bl	14bf4 <putchar_unlocked@plt+0x37c8>
   14d88:	str	r5, [r4]
   14d8c:	pop	{r4, r5, fp, pc}
   14d90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d94:	add	fp, sp, #24
   14d98:	ldr	r6, [r1]
   14d9c:	mov	r8, r1
   14da0:	ldr	r4, [fp, #8]
   14da4:	add	r1, r6, r6, asr #1
   14da8:	cmp	r1, r6
   14dac:	mvnvs	r1, #-2147483648	; 0x80000000
   14db0:	cmp	r1, r3
   14db4:	mov	r5, r1
   14db8:	movgt	r5, r3
   14dbc:	cmn	r3, #1
   14dc0:	movle	r5, r1
   14dc4:	cmn	r4, #1
   14dc8:	ble	14de8 <putchar_unlocked@plt+0x39bc>
   14dcc:	cmp	r4, #0
   14dd0:	beq	14e3c <putchar_unlocked@plt+0x3a10>
   14dd4:	cmn	r5, #1
   14dd8:	ble	14e10 <putchar_unlocked@plt+0x39e4>
   14ddc:	mvn	r7, #-2147483648	; 0x80000000
   14de0:	udiv	r1, r7, r4
   14de4:	b	14e04 <putchar_unlocked@plt+0x39d8>
   14de8:	cmn	r5, #1
   14dec:	ble	14e2c <putchar_unlocked@plt+0x3a00>
   14df0:	cmn	r4, #1
   14df4:	beq	14e3c <putchar_unlocked@plt+0x3a10>
   14df8:	mov	r1, #-2147483648	; 0x80000000
   14dfc:	mvn	r7, #-2147483648	; 0x80000000
   14e00:	sdiv	r1, r1, r4
   14e04:	cmp	r1, r5
   14e08:	bge	14e3c <putchar_unlocked@plt+0x3a10>
   14e0c:	b	14e4c <putchar_unlocked@plt+0x3a20>
   14e10:	beq	14e3c <putchar_unlocked@plt+0x3a10>
   14e14:	mov	r1, #-2147483648	; 0x80000000
   14e18:	mvn	r7, #-2147483648	; 0x80000000
   14e1c:	sdiv	r1, r1, r5
   14e20:	cmp	r1, r4
   14e24:	bge	14e3c <putchar_unlocked@plt+0x3a10>
   14e28:	b	14e4c <putchar_unlocked@plt+0x3a20>
   14e2c:	mvn	r7, #-2147483648	; 0x80000000
   14e30:	sdiv	r1, r7, r4
   14e34:	cmp	r5, r1
   14e38:	blt	14e4c <putchar_unlocked@plt+0x3a20>
   14e3c:	mul	r1, r5, r4
   14e40:	mov	r7, #64	; 0x40
   14e44:	cmp	r1, #63	; 0x3f
   14e48:	bgt	14e54 <putchar_unlocked@plt+0x3a28>
   14e4c:	sdiv	r5, r7, r4
   14e50:	mul	r1, r5, r4
   14e54:	cmp	r0, #0
   14e58:	moveq	r7, #0
   14e5c:	streq	r7, [r8]
   14e60:	sub	r7, r5, r6
   14e64:	cmp	r7, r2
   14e68:	bge	14f0c <putchar_unlocked@plt+0x3ae0>
   14e6c:	add	r5, r6, r2
   14e70:	mov	r2, #0
   14e74:	mov	r1, #0
   14e78:	cmp	r5, r3
   14e7c:	movwgt	r2, #1
   14e80:	cmn	r3, #1
   14e84:	movwgt	r1, #1
   14e88:	cmp	r5, r6
   14e8c:	bvs	14ef4 <putchar_unlocked@plt+0x3ac8>
   14e90:	ands	r1, r1, r2
   14e94:	bne	14ef4 <putchar_unlocked@plt+0x3ac8>
   14e98:	cmn	r4, #1
   14e9c:	ble	14ebc <putchar_unlocked@plt+0x3a90>
   14ea0:	cmp	r4, #0
   14ea4:	beq	14f08 <putchar_unlocked@plt+0x3adc>
   14ea8:	cmn	r5, #1
   14eac:	ble	14ee0 <putchar_unlocked@plt+0x3ab4>
   14eb0:	mvn	r1, #-2147483648	; 0x80000000
   14eb4:	udiv	r1, r1, r4
   14eb8:	b	14ed4 <putchar_unlocked@plt+0x3aa8>
   14ebc:	cmn	r5, #1
   14ec0:	ble	14ef8 <putchar_unlocked@plt+0x3acc>
   14ec4:	cmn	r4, #1
   14ec8:	beq	14f08 <putchar_unlocked@plt+0x3adc>
   14ecc:	mov	r1, #-2147483648	; 0x80000000
   14ed0:	sdiv	r1, r1, r4
   14ed4:	cmp	r1, r5
   14ed8:	bge	14f08 <putchar_unlocked@plt+0x3adc>
   14edc:	b	14ef4 <putchar_unlocked@plt+0x3ac8>
   14ee0:	beq	14f08 <putchar_unlocked@plt+0x3adc>
   14ee4:	mov	r1, #-2147483648	; 0x80000000
   14ee8:	sdiv	r1, r1, r5
   14eec:	cmp	r1, r4
   14ef0:	bge	14f08 <putchar_unlocked@plt+0x3adc>
   14ef4:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14ef8:	mvn	r1, #-2147483648	; 0x80000000
   14efc:	sdiv	r1, r1, r4
   14f00:	cmp	r5, r1
   14f04:	blt	14ef4 <putchar_unlocked@plt+0x3ac8>
   14f08:	mul	r1, r5, r4
   14f0c:	bl	14c78 <putchar_unlocked@plt+0x384c>
   14f10:	str	r5, [r8]
   14f14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f18:	push	{fp, lr}
   14f1c:	mov	fp, sp
   14f20:	mov	r1, #1
   14f24:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f28:	cmp	r0, #0
   14f2c:	popne	{fp, pc}
   14f30:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f34:	push	{fp, lr}
   14f38:	mov	fp, sp
   14f3c:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f40:	cmp	r0, #0
   14f44:	popne	{fp, pc}
   14f48:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f4c:	push	{fp, lr}
   14f50:	mov	fp, sp
   14f54:	mov	r1, #1
   14f58:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f5c:	cmp	r0, #0
   14f60:	popne	{fp, pc}
   14f64:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f68:	push	{fp, lr}
   14f6c:	mov	fp, sp
   14f70:	bl	150c4 <putchar_unlocked@plt+0x3c98>
   14f74:	cmp	r0, #0
   14f78:	popne	{fp, pc}
   14f7c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14f80:	push	{r4, r5, r6, sl, fp, lr}
   14f84:	add	fp, sp, #16
   14f88:	mov	r5, r0
   14f8c:	mov	r0, r1
   14f90:	mov	r4, r1
   14f94:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14f98:	cmp	r0, #0
   14f9c:	beq	14fb8 <putchar_unlocked@plt+0x3b8c>
   14fa0:	mov	r1, r5
   14fa4:	mov	r2, r4
   14fa8:	mov	r6, r0
   14fac:	bl	11198 <memcpy@plt>
   14fb0:	mov	r0, r6
   14fb4:	pop	{r4, r5, r6, sl, fp, pc}
   14fb8:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14fbc:	push	{r4, r5, r6, sl, fp, lr}
   14fc0:	add	fp, sp, #16
   14fc4:	mov	r5, r0
   14fc8:	mov	r0, r1
   14fcc:	mov	r4, r1
   14fd0:	bl	15118 <putchar_unlocked@plt+0x3cec>
   14fd4:	cmp	r0, #0
   14fd8:	beq	14ff4 <putchar_unlocked@plt+0x3bc8>
   14fdc:	mov	r1, r5
   14fe0:	mov	r2, r4
   14fe4:	mov	r6, r0
   14fe8:	bl	11198 <memcpy@plt>
   14fec:	mov	r0, r6
   14ff0:	pop	{r4, r5, r6, sl, fp, pc}
   14ff4:	bl	15080 <putchar_unlocked@plt+0x3c54>
   14ff8:	push	{r4, r5, r6, sl, fp, lr}
   14ffc:	add	fp, sp, #16
   15000:	mov	r5, r0
   15004:	add	r0, r1, #1
   15008:	mov	r4, r1
   1500c:	bl	15118 <putchar_unlocked@plt+0x3cec>
   15010:	cmp	r0, #0
   15014:	beq	1503c <putchar_unlocked@plt+0x3c10>
   15018:	mov	r6, r0
   1501c:	mov	r0, #0
   15020:	mov	r1, r5
   15024:	mov	r2, r4
   15028:	strb	r0, [r6, r4]
   1502c:	mov	r0, r6
   15030:	bl	11198 <memcpy@plt>
   15034:	mov	r0, r6
   15038:	pop	{r4, r5, r6, sl, fp, pc}
   1503c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   15040:	push	{r4, r5, r6, sl, fp, lr}
   15044:	add	fp, sp, #16
   15048:	mov	r4, r0
   1504c:	bl	112f4 <strlen@plt>
   15050:	add	r5, r0, #1
   15054:	mov	r0, r5
   15058:	bl	15118 <putchar_unlocked@plt+0x3cec>
   1505c:	cmp	r0, #0
   15060:	beq	1507c <putchar_unlocked@plt+0x3c50>
   15064:	mov	r1, r4
   15068:	mov	r2, r5
   1506c:	mov	r6, r0
   15070:	bl	11198 <memcpy@plt>
   15074:	mov	r0, r6
   15078:	pop	{r4, r5, r6, sl, fp, pc}
   1507c:	bl	15080 <putchar_unlocked@plt+0x3c54>
   15080:	push	{fp, lr}
   15084:	mov	fp, sp
   15088:	movw	r0, #28964	; 0x7124
   1508c:	movw	r1, #24768	; 0x60c0
   15090:	mov	r2, #5
   15094:	movt	r0, #2
   15098:	movt	r1, #1
   1509c:	ldr	r4, [r0]
   150a0:	mov	r0, #0
   150a4:	bl	111e0 <dcgettext@plt>
   150a8:	movw	r2, #23719	; 0x5ca7
   150ac:	mov	r3, r0
   150b0:	mov	r0, r4
   150b4:	mov	r1, #0
   150b8:	movt	r2, #1
   150bc:	bl	11264 <error@plt>
   150c0:	bl	11414 <abort@plt>
   150c4:	clz	r2, r1
   150c8:	clz	r3, r0
   150cc:	lsr	r2, r2, #5
   150d0:	lsr	r3, r3, #5
   150d4:	orrs	r2, r3, r2
   150d8:	movwne	r1, #1
   150dc:	movwne	r0, #1
   150e0:	cmp	r1, #0
   150e4:	beq	15114 <putchar_unlocked@plt+0x3ce8>
   150e8:	mvn	r2, #-2147483648	; 0x80000000
   150ec:	udiv	r2, r2, r1
   150f0:	cmp	r2, r0
   150f4:	bcs	15114 <putchar_unlocked@plt+0x3ce8>
   150f8:	push	{fp, lr}
   150fc:	mov	fp, sp
   15100:	bl	1130c <__errno_location@plt>
   15104:	mov	r1, #12
   15108:	str	r1, [r0]
   1510c:	mov	r0, #0
   15110:	pop	{fp, pc}
   15114:	b	11120 <calloc@plt>
   15118:	cmp	r0, #0
   1511c:	movweq	r0, #1
   15120:	cmn	r0, #1
   15124:	ble	1512c <putchar_unlocked@plt+0x3d00>
   15128:	b	11270 <malloc@plt>
   1512c:	push	{fp, lr}
   15130:	mov	fp, sp
   15134:	bl	1130c <__errno_location@plt>
   15138:	mov	r1, #12
   1513c:	str	r1, [r0]
   15140:	mov	r0, #0
   15144:	pop	{fp, pc}
   15148:	push	{fp, lr}
   1514c:	mov	fp, sp
   15150:	cmp	r0, #0
   15154:	beq	15170 <putchar_unlocked@plt+0x3d44>
   15158:	cmp	r1, #0
   1515c:	beq	1517c <putchar_unlocked@plt+0x3d50>
   15160:	cmn	r1, #1
   15164:	ble	15184 <putchar_unlocked@plt+0x3d58>
   15168:	pop	{fp, lr}
   1516c:	b	11204 <realloc@plt>
   15170:	mov	r0, r1
   15174:	pop	{fp, lr}
   15178:	b	15118 <putchar_unlocked@plt+0x3cec>
   1517c:	bl	12820 <putchar_unlocked@plt+0x13f4>
   15180:	b	15190 <putchar_unlocked@plt+0x3d64>
   15184:	bl	1130c <__errno_location@plt>
   15188:	mov	r1, #12
   1518c:	str	r1, [r0]
   15190:	mov	r0, #0
   15194:	pop	{fp, pc}
   15198:	push	{r4, r5, r6, sl, fp, lr}
   1519c:	add	fp, sp, #16
   151a0:	mov	r4, r0
   151a4:	bl	11240 <__fpending@plt>
   151a8:	mov	r5, r0
   151ac:	mov	r0, r4
   151b0:	bl	1124c <ferror_unlocked@plt>
   151b4:	mov	r6, r0
   151b8:	mov	r0, r4
   151bc:	bl	12728 <putchar_unlocked@plt+0x12fc>
   151c0:	cmp	r6, #0
   151c4:	beq	151e4 <putchar_unlocked@plt+0x3db8>
   151c8:	mvn	r4, #0
   151cc:	cmp	r0, #0
   151d0:	bne	15210 <putchar_unlocked@plt+0x3de4>
   151d4:	bl	1130c <__errno_location@plt>
   151d8:	mov	r1, #0
   151dc:	str	r1, [r0]
   151e0:	b	15210 <putchar_unlocked@plt+0x3de4>
   151e4:	cmp	r0, #0
   151e8:	mov	r4, r0
   151ec:	mvnne	r4, #0
   151f0:	cmp	r5, #0
   151f4:	bne	15210 <putchar_unlocked@plt+0x3de4>
   151f8:	cmp	r0, #0
   151fc:	beq	15210 <putchar_unlocked@plt+0x3de4>
   15200:	bl	1130c <__errno_location@plt>
   15204:	ldr	r0, [r0]
   15208:	subs	r4, r0, #9
   1520c:	mvnne	r4, #0
   15210:	mov	r0, r4
   15214:	pop	{r4, r5, r6, sl, fp, pc}
   15218:	push	{fp, lr}
   1521c:	mov	fp, sp
   15220:	mov	r0, #14
   15224:	bl	113a8 <nl_langinfo@plt>
   15228:	movw	r1, #23292	; 0x5afc
   1522c:	cmp	r0, #0
   15230:	movt	r1, #1
   15234:	movne	r1, r0
   15238:	movw	r0, #24785	; 0x60d1
   1523c:	ldrb	r2, [r1]
   15240:	movt	r0, #1
   15244:	cmp	r2, #0
   15248:	movne	r0, r1
   1524c:	pop	{fp, pc}
   15250:	push	{r4, r5, r6, r7, fp, lr}
   15254:	add	fp, sp, #16
   15258:	sub	sp, sp, #8
   1525c:	add	r5, sp, #4
   15260:	cmp	r0, #0
   15264:	mov	r7, r2
   15268:	mov	r4, r1
   1526c:	movne	r5, r0
   15270:	mov	r0, r5
   15274:	bl	11258 <mbrtowc@plt>
   15278:	mov	r6, r0
   1527c:	cmp	r7, #0
   15280:	beq	152a4 <putchar_unlocked@plt+0x3e78>
   15284:	cmn	r6, #2
   15288:	bcc	152a4 <putchar_unlocked@plt+0x3e78>
   1528c:	mov	r0, #0
   15290:	bl	128ec <putchar_unlocked@plt+0x14c0>
   15294:	cmp	r0, #0
   15298:	ldrbeq	r0, [r4]
   1529c:	moveq	r6, #1
   152a0:	streq	r0, [r5]
   152a4:	mov	r0, r6
   152a8:	sub	sp, fp, #16
   152ac:	pop	{r4, r5, r6, r7, fp, pc}
   152b0:	cmp	r2, #0
   152b4:	beq	152e4 <putchar_unlocked@plt+0x3eb8>
   152b8:	mvn	r3, #0
   152bc:	udiv	r3, r3, r2
   152c0:	cmp	r3, r1
   152c4:	bcs	152e4 <putchar_unlocked@plt+0x3eb8>
   152c8:	push	{fp, lr}
   152cc:	mov	fp, sp
   152d0:	bl	1130c <__errno_location@plt>
   152d4:	mov	r1, #12
   152d8:	str	r1, [r0]
   152dc:	mov	r0, #0
   152e0:	pop	{fp, pc}
   152e4:	mul	r1, r2, r1
   152e8:	b	15148 <putchar_unlocked@plt+0x3d1c>
   152ec:	cmp	r3, #0
   152f0:	cmpeq	r2, #0
   152f4:	bne	15318 <putchar_unlocked@plt+0x3eec>
   152f8:	cmp	r1, #0
   152fc:	movlt	r1, #-2147483648	; 0x80000000
   15300:	movlt	r0, #0
   15304:	blt	15314 <putchar_unlocked@plt+0x3ee8>
   15308:	cmpeq	r0, #0
   1530c:	mvnne	r1, #-2147483648	; 0x80000000
   15310:	mvnne	r0, #0
   15314:	b	153c0 <putchar_unlocked@plt+0x3f94>
   15318:	sub	sp, sp, #8
   1531c:	push	{sp, lr}
   15320:	cmp	r1, #0
   15324:	blt	15344 <putchar_unlocked@plt+0x3f18>
   15328:	cmp	r3, #0
   1532c:	blt	15378 <putchar_unlocked@plt+0x3f4c>
   15330:	bl	153d0 <putchar_unlocked@plt+0x3fa4>
   15334:	ldr	lr, [sp, #4]
   15338:	add	sp, sp, #8
   1533c:	pop	{r2, r3}
   15340:	bx	lr
   15344:	rsbs	r0, r0, #0
   15348:	sbc	r1, r1, r1, lsl #1
   1534c:	cmp	r3, #0
   15350:	blt	1539c <putchar_unlocked@plt+0x3f70>
   15354:	bl	153d0 <putchar_unlocked@plt+0x3fa4>
   15358:	ldr	lr, [sp, #4]
   1535c:	add	sp, sp, #8
   15360:	pop	{r2, r3}
   15364:	rsbs	r0, r0, #0
   15368:	sbc	r1, r1, r1, lsl #1
   1536c:	rsbs	r2, r2, #0
   15370:	sbc	r3, r3, r3, lsl #1
   15374:	bx	lr
   15378:	rsbs	r2, r2, #0
   1537c:	sbc	r3, r3, r3, lsl #1
   15380:	bl	153d0 <putchar_unlocked@plt+0x3fa4>
   15384:	ldr	lr, [sp, #4]
   15388:	add	sp, sp, #8
   1538c:	pop	{r2, r3}
   15390:	rsbs	r0, r0, #0
   15394:	sbc	r1, r1, r1, lsl #1
   15398:	bx	lr
   1539c:	rsbs	r2, r2, #0
   153a0:	sbc	r3, r3, r3, lsl #1
   153a4:	bl	153d0 <putchar_unlocked@plt+0x3fa4>
   153a8:	ldr	lr, [sp, #4]
   153ac:	add	sp, sp, #8
   153b0:	pop	{r2, r3}
   153b4:	rsbs	r2, r2, #0
   153b8:	sbc	r3, r3, r3, lsl #1
   153bc:	bx	lr
   153c0:	push	{r1, lr}
   153c4:	mov	r0, #8
   153c8:	bl	11138 <raise@plt>
   153cc:	pop	{r1, pc}
   153d0:	cmp	r1, r3
   153d4:	cmpeq	r0, r2
   153d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153dc:	mov	r4, r0
   153e0:	movcc	r0, #0
   153e4:	mov	r5, r1
   153e8:	ldr	lr, [sp, #36]	; 0x24
   153ec:	movcc	r1, r0
   153f0:	bcc	154ec <putchar_unlocked@plt+0x40c0>
   153f4:	cmp	r3, #0
   153f8:	clzeq	ip, r2
   153fc:	clzne	ip, r3
   15400:	addeq	ip, ip, #32
   15404:	cmp	r5, #0
   15408:	clzeq	r1, r4
   1540c:	addeq	r1, r1, #32
   15410:	clzne	r1, r5
   15414:	sub	ip, ip, r1
   15418:	sub	sl, ip, #32
   1541c:	lsl	r9, r3, ip
   15420:	rsb	fp, ip, #32
   15424:	orr	r9, r9, r2, lsl sl
   15428:	orr	r9, r9, r2, lsr fp
   1542c:	lsl	r8, r2, ip
   15430:	cmp	r5, r9
   15434:	cmpeq	r4, r8
   15438:	movcc	r0, #0
   1543c:	movcc	r1, r0
   15440:	bcc	1545c <putchar_unlocked@plt+0x4030>
   15444:	mov	r0, #1
   15448:	subs	r4, r4, r8
   1544c:	lsl	r1, r0, sl
   15450:	orr	r1, r1, r0, lsr fp
   15454:	lsl	r0, r0, ip
   15458:	sbc	r5, r5, r9
   1545c:	cmp	ip, #0
   15460:	beq	154ec <putchar_unlocked@plt+0x40c0>
   15464:	lsr	r6, r8, #1
   15468:	orr	r6, r6, r9, lsl #31
   1546c:	lsr	r7, r9, #1
   15470:	mov	r2, ip
   15474:	b	15498 <putchar_unlocked@plt+0x406c>
   15478:	subs	r3, r4, r6
   1547c:	sbc	r8, r5, r7
   15480:	adds	r3, r3, r3
   15484:	adc	r8, r8, r8
   15488:	adds	r4, r3, #1
   1548c:	adc	r5, r8, #0
   15490:	subs	r2, r2, #1
   15494:	beq	154b4 <putchar_unlocked@plt+0x4088>
   15498:	cmp	r5, r7
   1549c:	cmpeq	r4, r6
   154a0:	bcs	15478 <putchar_unlocked@plt+0x404c>
   154a4:	adds	r4, r4, r4
   154a8:	adc	r5, r5, r5
   154ac:	subs	r2, r2, #1
   154b0:	bne	15498 <putchar_unlocked@plt+0x406c>
   154b4:	lsr	r3, r4, ip
   154b8:	orr	r3, r3, r5, lsl fp
   154bc:	lsr	r2, r5, ip
   154c0:	orr	r3, r3, r5, lsr sl
   154c4:	adds	r0, r0, r4
   154c8:	mov	r4, r3
   154cc:	lsl	r3, r2, ip
   154d0:	orr	r3, r3, r4, lsl sl
   154d4:	lsl	ip, r4, ip
   154d8:	orr	r3, r3, r4, lsr fp
   154dc:	adc	r1, r1, r5
   154e0:	subs	r0, r0, ip
   154e4:	mov	r5, r2
   154e8:	sbc	r1, r1, r3
   154ec:	cmp	lr, #0
   154f0:	strdne	r4, [lr]
   154f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   154fc:	mov	r7, r0
   15500:	ldr	r6, [pc, #72]	; 15550 <putchar_unlocked@plt+0x4124>
   15504:	ldr	r5, [pc, #72]	; 15554 <putchar_unlocked@plt+0x4128>
   15508:	add	r6, pc, r6
   1550c:	add	r5, pc, r5
   15510:	sub	r6, r6, r5
   15514:	mov	r8, r1
   15518:	mov	r9, r2
   1551c:	bl	11100 <calloc@plt-0x20>
   15520:	asrs	r6, r6, #2
   15524:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15528:	mov	r4, #0
   1552c:	add	r4, r4, #1
   15530:	ldr	r3, [r5], #4
   15534:	mov	r2, r9
   15538:	mov	r1, r8
   1553c:	mov	r0, r7
   15540:	blx	r3
   15544:	cmp	r6, r4
   15548:	bne	1552c <putchar_unlocked@plt+0x4100>
   1554c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15550:	strdeq	r1, [r1], -ip
   15554:	strdeq	r1, [r1], -r4
   15558:	bx	lr
   1555c:	ldr	r3, [pc, #12]	; 15570 <putchar_unlocked@plt+0x4144>
   15560:	mov	r1, #0
   15564:	add	r3, pc, r3
   15568:	ldr	r2, [r3]
   1556c:	b	11324 <__cxa_atexit@plt>
   15570:			; <UNDEFINED> instruction: 0x00011bb0
   15574:	mov	r2, r1
   15578:	mov	r1, r0
   1557c:	mov	r0, #3
   15580:	b	113f0 <__xstat64@plt>

Disassembly of section .fini:

00015584 <.fini>:
   15584:	push	{r3, lr}
   15588:	pop	{r3, pc}
