
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a78 <.init>:
   12a78:	push	{r3, lr}
   12a7c:	bl	12c0c <_start@@Base+0x3c>
   12a80:	pop	{r3, pc}

Disassembly of section .plt:

00012a84 <fopen@plt-0x14>:
   12a84:	push	{lr}		; (str lr, [sp, #-4]!)
   12a88:	ldr	lr, [pc, #4]	; 12a94 <fopen@plt-0x4>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	pc, [lr, #8]!
   12a94:	andeq	r5, r3, ip, ror #10

00012a98 <fopen@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #217088	; 0x35000
   12aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa4 <free@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #217088	; 0x35000
   12aac:	ldr	pc, [ip, #1380]!	; 0x564

00012ab0 <memcpy@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #217088	; 0x35000
   12ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00012abc <ftell@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #217088	; 0x35000
   12ac4:	ldr	pc, [ip, #1364]!	; 0x554

00012ac8 <rewind@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #217088	; 0x35000
   12ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad4 <__isinff@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #217088	; 0x35000
   12adc:	ldr	pc, [ip, #1348]!	; 0x544

00012ae0 <__isinf@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #217088	; 0x35000
   12ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00012aec <realloc@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #217088	; 0x35000
   12af4:	ldr	pc, [ip, #1332]!	; 0x534

00012af8 <fwrite@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #217088	; 0x35000
   12b00:	ldr	pc, [ip, #1324]!	; 0x52c

00012b04 <malloc@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #217088	; 0x35000
   12b0c:	ldr	pc, [ip, #1316]!	; 0x524

00012b10 <__libc_start_main@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #217088	; 0x35000
   12b18:	ldr	pc, [ip, #1308]!	; 0x51c

00012b1c <__gmon_start__@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #217088	; 0x35000
   12b24:	ldr	pc, [ip, #1300]!	; 0x514

00012b28 <exit@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #217088	; 0x35000
   12b30:	ldr	pc, [ip, #1292]!	; 0x50c

00012b34 <bcmp@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #217088	; 0x35000
   12b3c:	ldr	pc, [ip, #1284]!	; 0x504

00012b40 <strlen@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #217088	; 0x35000
   12b48:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b4c <fprintf@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #217088	; 0x35000
   12b54:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b58 <posix_memalign@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #217088	; 0x35000
   12b60:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b64 <memset@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #217088	; 0x35000
   12b6c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b70 <strtod@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #217088	; 0x35000
   12b78:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b7c <memchr@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #217088	; 0x35000
   12b84:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b88 <fclose@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #217088	; 0x35000
   12b90:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b94 <fputc@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #217088	; 0x35000
   12b9c:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba0 <fread_unlocked@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #217088	; 0x35000
   12ba8:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bac <fseek@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #217088	; 0x35000
   12bb4:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bb8 <abort@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #217088	; 0x35000
   12bc0:	ldr	pc, [ip, #1196]!	; 0x4ac

00012bc4 <__assert_fail@plt>:
   12bc4:	add	ip, pc, #0, 12
   12bc8:	add	ip, ip, #217088	; 0x35000
   12bcc:	ldr	pc, [ip, #1188]!	; 0x4a4

Disassembly of section .text:

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12b10 <__libc_start_main@plt>
   12bfc:	bl	12bb8 <abort@plt>
   12c00:	andeq	r4, r3, r8, asr #20
   12c04:	strdeq	r3, [r1], -r8
   12c08:	andeq	r4, r3, r8, ror #19
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12b1c <__gmon_start__@plt>
   12c28:	andeq	r5, r3, r4, ror #7
   12c2c:	andeq	r0, r0, r4, ror r0
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r8, r4, r0, asr r3
   12c54:	andeq	r8, r4, r0, asr r3
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r8, r4, r0, asr r3
   12c8c:	andeq	r8, r4, r0, asr r3
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r8, r4, r8, asr r3
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <verify_parse@@Base>:
   12cc0:	push	{fp, lr}
   12cc4:	mov	fp, sp
   12cc8:	cmp	r0, #0
   12ccc:	beq	12da4 <verify_parse@@Base+0xe4>
   12cd0:	ldr	r1, [r0, #4]
   12cd4:	movw	r2, #20301	; 0x4f4d
   12cd8:	movt	r2, #21326	; 0x534e
   12cdc:	cmp	r1, r2
   12ce0:	bne	12da4 <verify_parse@@Base+0xe4>
   12ce4:	ldr	r1, [r0]
   12ce8:	ldr	r2, [r0, r1]!
   12cec:	mov	r1, r0
   12cf0:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   12cf4:	cmp	r2, #5
   12cf8:	bls	12dc4 <verify_parse@@Base+0x104>
   12cfc:	ldrh	r1, [r1, #4]
   12d00:	cmp	r1, #0
   12d04:	beq	12dc4 <verify_parse@@Base+0x104>
   12d08:	add	r0, r0, r1
   12d0c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12d10:	vldr	s0, [r0]
   12d14:	vcmp.f32	s0, s2
   12d18:	vmrs	APSR_nzcv, fpscr
   12d1c:	bne	12de4 <verify_parse@@Base+0x124>
   12d20:	vldr	s0, [r0, #4]
   12d24:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d28:	vcmp.f32	s0, s2
   12d2c:	vmrs	APSR_nzcv, fpscr
   12d30:	bne	12e04 <verify_parse@@Base+0x144>
   12d34:	vldr	s0, [r0, #8]
   12d38:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d3c:	vcmp.f32	s0, s2
   12d40:	vmrs	APSR_nzcv, fpscr
   12d44:	bne	12e24 <verify_parse@@Base+0x164>
   12d48:	vldr	d16, [r0, #16]
   12d4c:	vmov.f64	d17, #8	; 0x40400000  3.0
   12d50:	vcmp.f64	d16, d17
   12d54:	vmrs	APSR_nzcv, fpscr
   12d58:	bne	12e44 <verify_parse@@Base+0x184>
   12d5c:	ldrb	r1, [r0, #24]
   12d60:	cmp	r1, #2
   12d64:	bne	12e64 <verify_parse@@Base+0x1a4>
   12d68:	ldrh	r1, [r0, #26]
   12d6c:	cmp	r1, #5
   12d70:	bne	12e84 <verify_parse@@Base+0x1c4>
   12d74:	ldrb	r0, [r0, #28]
   12d78:	cmp	r0, #6
   12d7c:	moveq	r0, #0
   12d80:	popeq	{fp, pc}
   12d84:	movw	r0, #24788	; 0x60d4
   12d88:	movw	r1, #19041	; 0x4a61
   12d8c:	movw	r3, #19123	; 0x4ab3
   12d90:	mov	r2, #54	; 0x36
   12d94:	movt	r0, #3
   12d98:	movt	r1, #3
   12d9c:	movt	r3, #3
   12da0:	bl	12bc4 <__assert_fail@plt>
   12da4:	movw	r0, #19379	; 0x4bb3
   12da8:	movw	r1, #19417	; 0x4bd9
   12dac:	movw	r3, #19512	; 0x4c38
   12db0:	mov	r2, #696	; 0x2b8
   12db4:	movt	r0, #3
   12db8:	movt	r1, #3
   12dbc:	movt	r3, #3
   12dc0:	bl	12bc4 <__assert_fail@plt>
   12dc4:	movw	r0, #24788	; 0x60d4
   12dc8:	movw	r1, #19041	; 0x4a61
   12dcc:	movw	r3, #19123	; 0x4ab3
   12dd0:	mov	r2, #45	; 0x2d
   12dd4:	movt	r0, #3
   12dd8:	movt	r1, #3
   12ddc:	movt	r3, #3
   12de0:	bl	12bc4 <__assert_fail@plt>
   12de4:	movw	r0, #24788	; 0x60d4
   12de8:	movw	r1, #19041	; 0x4a61
   12dec:	movw	r3, #19123	; 0x4ab3
   12df0:	mov	r2, #46	; 0x2e
   12df4:	movt	r0, #3
   12df8:	movt	r1, #3
   12dfc:	movt	r3, #3
   12e00:	bl	12bc4 <__assert_fail@plt>
   12e04:	movw	r0, #24788	; 0x60d4
   12e08:	movw	r1, #19041	; 0x4a61
   12e0c:	movw	r3, #19123	; 0x4ab3
   12e10:	mov	r2, #47	; 0x2f
   12e14:	movt	r0, #3
   12e18:	movt	r1, #3
   12e1c:	movt	r3, #3
   12e20:	bl	12bc4 <__assert_fail@plt>
   12e24:	movw	r0, #24788	; 0x60d4
   12e28:	movw	r1, #19041	; 0x4a61
   12e2c:	movw	r3, #19123	; 0x4ab3
   12e30:	mov	r2, #48	; 0x30
   12e34:	movt	r0, #3
   12e38:	movt	r1, #3
   12e3c:	movt	r3, #3
   12e40:	bl	12bc4 <__assert_fail@plt>
   12e44:	movw	r0, #24788	; 0x60d4
   12e48:	movw	r1, #19041	; 0x4a61
   12e4c:	movw	r3, #19123	; 0x4ab3
   12e50:	mov	r2, #49	; 0x31
   12e54:	movt	r0, #3
   12e58:	movt	r1, #3
   12e5c:	movt	r3, #3
   12e60:	bl	12bc4 <__assert_fail@plt>
   12e64:	movw	r0, #24788	; 0x60d4
   12e68:	movw	r1, #19041	; 0x4a61
   12e6c:	movw	r3, #19123	; 0x4ab3
   12e70:	mov	r2, #50	; 0x32
   12e74:	movt	r0, #3
   12e78:	movt	r1, #3
   12e7c:	movt	r3, #3
   12e80:	bl	12bc4 <__assert_fail@plt>
   12e84:	movw	r0, #24788	; 0x60d4
   12e88:	movw	r1, #19041	; 0x4a61
   12e8c:	movw	r3, #19123	; 0x4ab3
   12e90:	mov	r2, #53	; 0x35
   12e94:	movt	r0, #3
   12e98:	movt	r1, #3
   12e9c:	movt	r3, #3
   12ea0:	bl	12bc4 <__assert_fail@plt>

00012ea4 <test_parse@@Base>:
   12ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ea8:	add	fp, sp, #28
   12eac:	sub	sp, sp, #316	; 0x13c
   12eb0:	add	r8, sp, #12
   12eb4:	mov	r0, r8
   12eb8:	bl	2a878 <flatcc_builder_init@@Base>
   12ebc:	movw	r9, #32896	; 0x8080
   12ec0:	movw	r1, #19600	; 0x4c90
   12ec4:	movt	r9, #4
   12ec8:	movt	r1, #3
   12ecc:	ldr	r0, [r9]
   12ed0:	bl	12a98 <fopen@plt>
   12ed4:	cmp	r0, #0
   12ed8:	beq	13074 <test_parse@@Base+0x1d0>
   12edc:	mov	r1, #0
   12ee0:	mov	r2, #2
   12ee4:	mov	r7, r0
   12ee8:	bl	12bac <fseek@plt>
   12eec:	mov	r0, r7
   12ef0:	bl	12abc <ftell@plt>
   12ef4:	cmp	r0, #10240	; 0x2800
   12ef8:	bhi	1306c <test_parse@@Base+0x1c8>
   12efc:	mov	r5, r0
   12f00:	mov	r0, r7
   12f04:	bl	12ac8 <rewind@plt>
   12f08:	cmp	r5, #0
   12f0c:	mov	r0, r5
   12f10:	movweq	r0, #1
   12f14:	bl	12b04 <malloc@plt>
   12f18:	cmp	r0, #0
   12f1c:	beq	1306c <test_parse@@Base+0x1c8>
   12f20:	mov	r4, r0
   12f24:	mov	r1, #0
   12f28:	mov	r6, r1
   12f2c:	add	r0, r4, r1
   12f30:	sub	r2, r5, r1
   12f34:	mov	r1, #1
   12f38:	mov	r3, r7
   12f3c:	bl	12ba0 <fread_unlocked@plt>
   12f40:	add	r1, r0, r6
   12f44:	cmp	r0, #0
   12f48:	bne	12f28 <test_parse@@Base+0x84>
   12f4c:	mov	r0, r7
   12f50:	bl	12b88 <fclose@plt>
   12f54:	cmp	r5, r6
   12f58:	bne	13060 <test_parse@@Base+0x1bc>
   12f5c:	vmov.i32	q8, #0	; 0x00000000
   12f60:	sub	r0, fp, #100	; 0x64
   12f64:	mov	r7, #0
   12f68:	add	r6, r4, r5
   12f6c:	mov	r2, #0
   12f70:	mov	r3, #0
   12f74:	add	r1, r0, #12
   12f78:	add	r0, r0, #28
   12f7c:	vst1.32	{d16-d17}, [r1]
   12f80:	movw	r1, #19036	; 0x4a5c
   12f84:	vst1.32	{d16-d17}, [r0]
   12f88:	mov	r0, #1
   12f8c:	str	r4, [fp, #-96]	; 0xffffffa0
   12f90:	str	r8, [fp, #-100]	; 0xffffff9c
   12f94:	str	r7, [fp, #-92]	; 0xffffffa4
   12f98:	movt	r1, #3
   12f9c:	str	r0, [fp, #-84]	; 0xffffffac
   12fa0:	mov	r0, r8
   12fa4:	str	r4, [fp, #-64]	; 0xffffffc0
   12fa8:	str	r6, [fp, #-68]	; 0xffffffbc
   12fac:	str	r4, [fp, #-72]	; 0xffffffb8
   12fb0:	bl	2b790 <flatcc_builder_start_buffer@@Base>
   12fb4:	cmp	r0, #0
   12fb8:	bne	12ff4 <test_parse@@Base+0x150>
   12fbc:	sub	r0, fp, #100	; 0x64
   12fc0:	sub	r3, fp, #52	; 0x34
   12fc4:	mov	r1, r4
   12fc8:	mov	r2, r6
   12fcc:	bl	13374 <main@@Base+0x7c>
   12fd0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12fd4:	cmp	r7, #0
   12fd8:	bne	12ff4 <test_parse@@Base+0x150>
   12fdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12fe0:	add	r0, sp, #12
   12fe4:	bl	2b980 <flatcc_builder_end_buffer@@Base>
   12fe8:	cmp	r0, #0
   12fec:	bne	130a0 <test_parse@@Base+0x1fc>
   12ff0:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12ff4:	movw	r0, #33616	; 0x8350
   12ff8:	ldr	r8, [r9]
   12ffc:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13000:	ldr	r9, [fp, #-84]	; 0xffffffac
   13004:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13008:	movt	r0, #4
   1300c:	ldr	sl, [r0]
   13010:	mov	r0, r7
   13014:	bl	2febc <flatcc_json_parser_error_string@@Base>
   13018:	sub	r1, r6, r5
   1301c:	str	r0, [sp, #4]
   13020:	mov	r0, sl
   13024:	mov	r2, r8
   13028:	mov	r3, r9
   1302c:	add	r1, r1, #1
   13030:	str	r1, [sp]
   13034:	movw	r1, #19284	; 0x4b54
   13038:	movt	r1, #3
   1303c:	bl	12b4c <fprintf@plt>
   13040:	mvn	r5, #0
   13044:	mov	r0, r4
   13048:	bl	12aa4 <free@plt>
   1304c:	add	r0, sp, #12
   13050:	bl	2ae20 <flatcc_builder_clear@@Base>
   13054:	mov	r0, r5
   13058:	sub	sp, fp, #28
   1305c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13060:	mov	r0, r4
   13064:	bl	12aa4 <free@plt>
   13068:	b	13074 <test_parse@@Base+0x1d0>
   1306c:	mov	r0, r7
   13070:	bl	12b88 <fclose@plt>
   13074:	movw	r0, #33616	; 0x8350
   13078:	ldr	r2, [r9]
   1307c:	movw	r1, #19148	; 0x4acc
   13080:	movt	r0, #4
   13084:	movt	r1, #3
   13088:	ldr	r0, [r0]
   1308c:	bl	12b4c <fprintf@plt>
   13090:	mvn	r5, #0
   13094:	mov	r0, r5
   13098:	sub	sp, fp, #28
   1309c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130a0:	movw	r0, #33616	; 0x8350
   130a4:	str	r4, [fp, #-60]	; 0xffffffc4
   130a8:	ldr	r2, [r9]
   130ac:	movw	r1, #19184	; 0x4af0
   130b0:	movt	r0, #4
   130b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   130b8:	movt	r1, #3
   130bc:	ldr	r0, [r0]
   130c0:	bl	12b4c <fprintf@plt>
   130c4:	add	r0, sp, #12
   130c8:	sub	r1, fp, #56	; 0x38
   130cc:	bl	2f318 <flatcc_builder_finalize_aligned_buffer@@Base>
   130d0:	movw	r9, #33620	; 0x8354
   130d4:	movw	r1, #19614	; 0x4c9e
   130d8:	movw	r2, #19218	; 0x4b12
   130dc:	ldr	r6, [fp, #-56]	; 0xffffffc8
   130e0:	mov	sl, r0
   130e4:	movt	r9, #4
   130e8:	movt	r1, #3
   130ec:	movt	r2, #3
   130f0:	ldr	r7, [r9]
   130f4:	mov	r0, r7
   130f8:	bl	12b4c <fprintf@plt>
   130fc:	cmp	r6, #0
   13100:	beq	131f0 <test_parse@@Base+0x34c>
   13104:	mov	r9, #0
   13108:	ands	r8, r9, #15
   1310c:	bne	13178 <test_parse@@Base+0x2d4>
   13110:	b	13190 <test_parse@@Base+0x2ec>
   13114:	movw	r1, #19625	; 0x4ca9
   13118:	mov	r0, r7
   1311c:	mov	r2, r9
   13120:	movt	r1, #3
   13124:	bl	12b4c <fprintf@plt>
   13128:	ldrb	r2, [sl, r9]
   1312c:	movw	r1, #19633	; 0x4cb1
   13130:	mov	r0, r7
   13134:	movt	r1, #3
   13138:	bl	12b4c <fprintf@plt>
   1313c:	ldrb	r0, [sl, r9]
   13140:	add	r9, r9, #1
   13144:	sub	r1, r0, #32
   13148:	uxtb	r1, r1
   1314c:	cmp	r1, #94	; 0x5e
   13150:	sub	r1, fp, #52	; 0x34
   13154:	movwhi	r0, #46	; 0x2e
   13158:	cmp	r6, r9
   1315c:	strb	r0, [r1, r8]
   13160:	add	r0, r1, r8
   13164:	mov	r1, #0
   13168:	strb	r1, [r0, #1]
   1316c:	beq	131b0 <test_parse@@Base+0x30c>
   13170:	ands	r8, r9, #15
   13174:	beq	13190 <test_parse@@Base+0x2ec>
   13178:	tst	r9, #7
   1317c:	bne	13128 <test_parse@@Base+0x284>
   13180:	mov	r0, #32
   13184:	mov	r1, r7
   13188:	bl	12b94 <fputc@plt>
   1318c:	b	13128 <test_parse@@Base+0x284>
   13190:	cmp	r9, #0
   13194:	beq	13114 <test_parse@@Base+0x270>
   13198:	movw	r1, #19619	; 0x4ca3
   1319c:	mov	r0, r7
   131a0:	sub	r2, fp, #52	; 0x34
   131a4:	movt	r1, #3
   131a8:	bl	12b4c <fprintf@plt>
   131ac:	b	13114 <test_parse@@Base+0x270>
   131b0:	movw	r9, #33620	; 0x8354
   131b4:	tst	r6, #15
   131b8:	movt	r9, #4
   131bc:	beq	131f0 <test_parse@@Base+0x34c>
   131c0:	movw	r8, #19669	; 0x4cd5
   131c4:	add	r6, r6, #1
   131c8:	movt	r8, #3
   131cc:	mov	r0, r8
   131d0:	mov	r1, #3
   131d4:	mov	r2, #1
   131d8:	mov	r3, r7
   131dc:	bl	12af8 <fwrite@plt>
   131e0:	add	r0, r6, #1
   131e4:	tst	r6, #15
   131e8:	mov	r6, r0
   131ec:	bne	131cc <test_parse@@Base+0x328>
   131f0:	movw	r1, #19619	; 0x4ca3
   131f4:	sub	r2, fp, #52	; 0x34
   131f8:	mov	r0, r7
   131fc:	movt	r1, #3
   13200:	bl	12b4c <fprintf@plt>
   13204:	movw	r0, #33616	; 0x8350
   13208:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1320c:	movw	r1, #19249	; 0x4b31
   13210:	mov	r2, r5
   13214:	movt	r0, #4
   13218:	movt	r1, #3
   1321c:	ldr	r0, [r0]
   13220:	bl	12b4c <fprintf@plt>
   13224:	mov	r0, sl
   13228:	bl	12cc0 <verify_parse@@Base>
   1322c:	ldr	r5, [r9]
   13230:	movw	r1, #19639	; 0x4cb7
   13234:	movw	r2, #19242	; 0x4b2a
   13238:	ldr	r7, [fp, #-56]	; 0xffffffc8
   1323c:	movt	r1, #3
   13240:	movt	r2, #3
   13244:	mov	r0, r5
   13248:	bl	12b4c <fprintf@plt>
   1324c:	cmp	r7, #0
   13250:	beq	132c0 <test_parse@@Base+0x41c>
   13254:	movw	r8, #19668	; 0x4cd4
   13258:	movw	r6, #19673	; 0x4cd9
   1325c:	mov	r9, #0
   13260:	movt	r8, #3
   13264:	movt	r6, #3
   13268:	tst	r9, #15
   1326c:	bne	132a8 <test_parse@@Base+0x404>
   13270:	mov	r0, r8
   13274:	mov	r1, #4
   13278:	mov	r2, #1
   1327c:	mov	r3, r5
   13280:	bl	12af8 <fwrite@plt>
   13284:	ldrb	r2, [sl, r9]
   13288:	mov	r0, r5
   1328c:	mov	r1, r6
   13290:	bl	12b4c <fprintf@plt>
   13294:	add	r9, r9, #1
   13298:	cmp	r7, r9
   1329c:	beq	132c0 <test_parse@@Base+0x41c>
   132a0:	tst	r9, #15
   132a4:	beq	13270 <test_parse@@Base+0x3cc>
   132a8:	tst	r9, #7
   132ac:	bne	13284 <test_parse@@Base+0x3e0>
   132b0:	movw	r0, #19669	; 0x4cd5
   132b4:	mov	r1, #3
   132b8:	movt	r0, #3
   132bc:	b	13278 <test_parse@@Base+0x3d4>
   132c0:	movw	r0, #19682	; 0x4ce2
   132c4:	mov	r1, #4
   132c8:	mov	r2, #1
   132cc:	mov	r3, r5
   132d0:	movt	r0, #3
   132d4:	bl	12af8 <fwrite@plt>
   132d8:	add	r0, sp, #12
   132dc:	bl	2ae14 <flatcc_builder_reset@@Base>
   132e0:	mov	r5, #0
   132e4:	cmp	sl, #0
   132e8:	beq	13044 <test_parse@@Base+0x1a0>
   132ec:	mov	r0, sl
   132f0:	bl	2f458 <flatcc_builder_aligned_free@@Base>
   132f4:	b	13044 <test_parse@@Base+0x1a0>

000132f8 <main@@Base>:
   132f8:	push	{r4, r5, r6, sl, fp, lr}
   132fc:	add	fp, sp, #16
   13300:	movw	r6, #33616	; 0x8350
   13304:	mov	r5, r0
   13308:	movw	r0, #19298	; 0x4b62
   1330c:	mov	r4, r1
   13310:	mov	r1, #16
   13314:	mov	r2, #1
   13318:	movt	r6, #4
   1331c:	movt	r0, #3
   13320:	ldr	r3, [r6]
   13324:	bl	12af8 <fwrite@plt>
   13328:	sub	r0, r5, #1
   1332c:	cmp	r0, #2
   13330:	bcs	13354 <main@@Base+0x5c>
   13334:	cmp	r5, #2
   13338:	bne	1334c <main@@Base+0x54>
   1333c:	ldr	r0, [r4, #4]
   13340:	movw	r1, #32896	; 0x8080
   13344:	movt	r1, #4
   13348:	str	r0, [r1]
   1334c:	pop	{r4, r5, r6, sl, fp, lr}
   13350:	b	12ea4 <test_parse@@Base>
   13354:	ldr	r3, [r6]
   13358:	movw	r0, #19315	; 0x4b73
   1335c:	mov	r1, #63	; 0x3f
   13360:	mov	r2, #1
   13364:	movt	r0, #3
   13368:	bl	12af8 <fwrite@plt>
   1336c:	mov	r0, #1
   13370:	bl	12b28 <exit@plt>
   13374:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13378:	add	fp, sp, #28
   1337c:	sub	sp, sp, #4
   13380:	vpush	{d8-d9}
   13384:	sub	sp, sp, #80	; 0x50
   13388:	mov	sl, r0
   1338c:	mov	r0, #0
   13390:	mov	r4, r1
   13394:	mov	r1, #36	; 0x24
   13398:	mov	r5, r3
   1339c:	mov	r6, r2
   133a0:	str	r0, [r3]
   133a4:	ldr	r0, [sl]
   133a8:	bl	2cd8c <flatcc_builder_start_table@@Base>
   133ac:	cmp	r0, #0
   133b0:	beq	133e0 <main@@Base+0xe8>
   133b4:	mov	r0, sl
   133b8:	mov	r1, r4
   133bc:	mov	r2, r6
   133c0:	mov	r3, #33	; 0x21
   133c4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   133c8:	mov	r7, r0
   133cc:	mov	r0, r7
   133d0:	sub	sp, fp, #48	; 0x30
   133d4:	vpop	{d8-d9}
   133d8:	add	sp, sp, #4
   133dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133e0:	add	r0, sp, #48	; 0x30
   133e4:	mov	r1, r4
   133e8:	mov	r2, r6
   133ec:	mov	r3, #1
   133f0:	str	r0, [sp]
   133f4:	mov	r0, sl
   133f8:	bl	32ce0 <flatcc_json_parser_prepare_unions@@Base>
   133fc:	cmp	r0, r6
   13400:	beq	133b4 <main@@Base+0xbc>
   13404:	cmp	r4, r6
   13408:	beq	13448 <main@@Base+0x150>
   1340c:	ldrb	r0, [r4]
   13410:	cmp	r0, #123	; 0x7b
   13414:	bne	13448 <main@@Base+0x150>
   13418:	add	r1, r4, #1
   1341c:	sub	r0, r6, r1
   13420:	cmp	r0, #2
   13424:	blt	134e0 <main@@Base+0x1e8>
   13428:	ldrb	r0, [r1]
   1342c:	cmp	r0, #32
   13430:	bls	134d0 <main@@Base+0x1d8>
   13434:	mov	r4, r1
   13438:	cmp	r4, r6
   1343c:	mov	r2, r6
   13440:	bne	134fc <main@@Base+0x204>
   13444:	b	1353c <main@@Base+0x244>
   13448:	mov	r0, sl
   1344c:	mov	r1, r4
   13450:	mov	r2, r6
   13454:	mov	r3, #21
   13458:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1345c:	mov	r4, r0
   13460:	ldr	r0, [sl, #24]
   13464:	cmp	r0, #0
   13468:	bne	133b4 <main@@Base+0xbc>
   1346c:	ldr	r0, [sl]
   13470:	mov	r1, #3
   13474:	bl	2d5b8 <flatcc_builder_check_required_field@@Base>
   13478:	cmp	r0, #0
   1347c:	beq	134b4 <main@@Base+0x1bc>
   13480:	ldr	r3, [sp, #48]	; 0x30
   13484:	mov	r0, sl
   13488:	mov	r1, r4
   1348c:	mov	r2, r6
   13490:	bl	32d70 <flatcc_json_parser_finalize_unions@@Base>
   13494:	mov	r7, r0
   13498:	ldr	r0, [sl]
   1349c:	bl	2d734 <flatcc_builder_end_table@@Base>
   134a0:	cmp	r0, #0
   134a4:	mov	r4, r7
   134a8:	str	r0, [r5]
   134ac:	bne	133cc <main@@Base+0xd4>
   134b0:	b	133b4 <main@@Base+0xbc>
   134b4:	mov	r0, sl
   134b8:	mov	r1, r4
   134bc:	mov	r2, r6
   134c0:	mov	r3, #29
   134c4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   134c8:	mov	r4, r0
   134cc:	b	133b4 <main@@Base+0xbc>
   134d0:	bne	134e0 <main@@Base+0x1e8>
   134d4:	ldrb	r0, [r4, #2]!
   134d8:	cmp	r0, #32
   134dc:	bhi	134f0 <main@@Base+0x1f8>
   134e0:	mov	r0, sl
   134e4:	mov	r2, r6
   134e8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   134ec:	mov	r4, r0
   134f0:	cmp	r4, r6
   134f4:	mov	r2, r6
   134f8:	beq	1353c <main@@Base+0x244>
   134fc:	ldrb	r0, [r4]
   13500:	cmp	r0, #125	; 0x7d
   13504:	bne	13538 <main@@Base+0x240>
   13508:	add	r1, r4, #1
   1350c:	sub	r0, r6, r1
   13510:	cmp	r0, #2
   13514:	blt	1dc54 <main@@Base+0xa95c>
   13518:	ldrb	r0, [r1]
   1351c:	cmp	r0, #32
   13520:	bhi	1dc0c <main@@Base+0xa914>
   13524:	bne	1dc54 <main@@Base+0xa95c>
   13528:	ldrb	r0, [r4, #2]!
   1352c:	cmp	r0, #32
   13530:	bhi	13460 <main@@Base+0x168>
   13534:	b	1dc54 <main@@Base+0xa95c>
   13538:	mov	r2, r4
   1353c:	add	r0, sl, #12
   13540:	vldr	s18, [pc, #944]	; 138f8 <main@@Base+0x600>
   13544:	vmov.f32	s16, #8	; 0x40400000  3.0
   13548:	str	r6, [sp, #44]	; 0x2c
   1354c:	str	sl, [sp, #36]	; 0x24
   13550:	str	r5, [sp, #40]	; 0x28
   13554:	str	r0, [sp, #32]
   13558:	movw	r0, #33392	; 0x8270
   1355c:	movt	r0, #4
   13560:	add	r0, r0, #48	; 0x30
   13564:	str	r0, [sp, #24]
   13568:	movw	r0, #13407	; 0x345f
   1356c:	movt	r0, #29494	; 0x7336
   13570:	sub	r0, r0, #512	; 0x200
   13574:	sub	r0, r0, #196608	; 0x30000
   13578:	str	r0, [sp, #28]
   1357c:	cmp	r2, r6
   13580:	mov	r8, r6
   13584:	beq	135d8 <main@@Base+0x2e0>
   13588:	ldrb	r0, [r2]
   1358c:	cmp	r0, #46	; 0x2e
   13590:	beq	135ac <main@@Base+0x2b4>
   13594:	cmp	r0, #34	; 0x22
   13598:	bne	135c8 <main@@Base+0x2d0>
   1359c:	ldr	r0, [sp, #32]
   135a0:	mov	r1, #0
   135a4:	add	r8, r2, #1
   135a8:	b	135d4 <main@@Base+0x2dc>
   135ac:	mov	r1, r2
   135b0:	mov	r0, sl
   135b4:	mov	r2, r6
   135b8:	mov	r3, #5
   135bc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   135c0:	mov	r8, r0
   135c4:	b	135d8 <main@@Base+0x2e0>
   135c8:	ldr	r0, [sp, #32]
   135cc:	mov	r1, #1
   135d0:	mov	r8, r2
   135d4:	str	r1, [r0]
   135d8:	sub	r9, r6, r8
   135dc:	mov	r0, #8
   135e0:	cmp	r9, #8
   135e4:	movcc	r0, r9
   135e8:	sub	r2, r0, #1
   135ec:	cmp	r2, #7
   135f0:	bhi	1685c <main@@Base+0x3564>
   135f4:	add	r0, pc, #32
   135f8:	mov	sl, #0
   135fc:	mov	ip, #0
   13600:	mov	r4, #0
   13604:	mov	r1, #0
   13608:	mov	r3, #0
   1360c:	mov	r6, #0
   13610:	mov	r7, #0
   13614:	mov	r5, #0
   13618:	ldr	pc, [r0, r2, lsl #2]
   1361c:	andeq	r3, r1, r0, lsl #13
   13620:	andeq	r3, r1, r8, ror r6
   13624:	andeq	r3, r1, r0, ror r6
   13628:	andeq	r3, r1, r8, ror #12
   1362c:	andeq	r3, r1, ip, asr r6
   13630:	andeq	r3, r1, r0, asr r6
   13634:	andeq	r3, r1, r0, asr #12
   13638:	andeq	r3, r1, ip, lsr r6
   1363c:	ldrb	ip, [r8, #7]
   13640:	ldrb	r0, [r8, #6]
   13644:	mov	r4, sl
   13648:	orr	r0, ip, r0, lsl #8
   1364c:	mov	sl, r0
   13650:	ldrb	r0, [r8, #5]
   13654:	mov	r1, r4
   13658:	orr	sl, sl, r0, lsl #16
   1365c:	ldrb	r0, [r8, #4]
   13660:	mov	r3, r1
   13664:	orr	sl, sl, r0, lsl #24
   13668:	ldrb	r0, [r8, #3]
   1366c:	orr	r6, r0, r3
   13670:	ldrb	r0, [r8, #2]
   13674:	orr	r7, r6, r0, lsl #8
   13678:	ldrb	r0, [r8, #1]
   1367c:	orr	r5, r7, r0, lsl #16
   13680:	ldrb	r0, [r8]
   13684:	movw	r1, #29281	; 0x7261
   13688:	movw	r7, #29556	; 0x7374
   1368c:	movt	r1, #24946	; 0x6172
   13690:	movt	r7, #29797	; 0x7465
   13694:	subs	r1, sl, r1
   13698:	orr	r0, r5, r0, lsl #24
   1369c:	sbcs	r1, r0, r7
   136a0:	bcs	1376c <main@@Base+0x474>
   136a4:	movw	r1, #28004	; 0x6d64
   136a8:	movw	r3, #28530	; 0x6f72
   136ac:	movw	r2, #29285	; 0x7265
   136b0:	movw	r6, #24430	; 0x5f6e
   136b4:	movt	r1, #28257	; 0x6e61
   136b8:	movt	r3, #28276	; 0x6e74
   136bc:	movt	r2, #28769	; 0x7061
   136c0:	movt	r6, #28276	; 0x6e74
   136c4:	cmp	r0, r1
   136c8:	bhi	138fc <main@@Base+0x604>
   136cc:	movw	r1, #25975	; 0x6577
   136d0:	ldr	r6, [sp, #44]	; 0x2c
   136d4:	movt	r1, #26220	; 0x666c
   136d8:	cmp	r0, r1
   136dc:	bhi	13a0c <main@@Base+0x714>
   136e0:	movw	r1, #27759	; 0x6c6f
   136e4:	movt	r1, #25455	; 0x636f
   136e8:	eor	r2, r0, r1
   136ec:	and	r1, sl, #-16777216	; 0xff000000
   136f0:	eor	r3, r1, #1912602624	; 0x72000000
   136f4:	orrs	r2, r3, r2
   136f8:	beq	14314 <main@@Base+0x101c>
   136fc:	movw	r2, #25965	; 0x656d
   13700:	ldr	sl, [sp, #36]	; 0x24
   13704:	eor	r1, r1, #2030043136	; 0x79000000
   13708:	movt	r2, #25966	; 0x656e
   1370c:	eor	r0, r0, r2
   13710:	orrs	r0, r1, r0
   13714:	bne	1685c <main@@Base+0x3564>
   13718:	cmp	r9, #6
   1371c:	mov	r1, r8
   13720:	blt	15c20 <main@@Base+0x2928>
   13724:	ldr	r1, [sp, #32]
   13728:	mov	r2, r8
   1372c:	ldrb	r0, [r2, #5]!
   13730:	ldr	r1, [r1]
   13734:	cmp	r1, #0
   13738:	beq	14af4 <main@@Base+0x17fc>
   1373c:	cmp	r0, #33	; 0x21
   13740:	bcc	13750 <main@@Base+0x458>
   13744:	cmp	r0, #58	; 0x3a
   13748:	mov	r1, r8
   1374c:	bne	15c20 <main@@Base+0x2928>
   13750:	ldr	r0, [sp, #32]
   13754:	mov	r1, #0
   13758:	str	r1, [r0]
   1375c:	sub	r0, r6, r2
   13760:	cmp	r0, #2
   13764:	bge	14b10 <main@@Base+0x1818>
   13768:	b	14f98 <main@@Base+0x1ca0>
   1376c:	movw	r1, #0
   13770:	movw	r2, #29544	; 0x7368
   13774:	movt	r1, #26163	; 0x6633
   13778:	movt	r2, #26721	; 0x6861
   1377c:	subs	r1, sl, r1
   13780:	sbcs	r1, r0, r7
   13784:	bcs	13988 <main@@Base+0x690>
   13788:	movw	r1, #29281	; 0x7261
   1378c:	ldr	r6, [sp, #44]	; 0x2c
   13790:	movt	r1, #24946	; 0x6172
   13794:	eor	r2, sl, r1
   13798:	eor	r1, r0, r7
   1379c:	orrs	r2, r2, r1
   137a0:	bne	13a8c <main@@Base+0x794>
   137a4:	add	r9, r8, #8
   137a8:	mov	r0, #8
   137ac:	mov	r5, r6
   137b0:	sub	ip, r6, r9
   137b4:	cmp	ip, #8
   137b8:	movcc	r0, ip
   137bc:	sub	r6, r0, #1
   137c0:	cmp	r6, #7
   137c4:	bhi	158cc <main@@Base+0x25d4>
   137c8:	add	r7, pc, #32
   137cc:	mov	r1, #0
   137d0:	mov	lr, #0
   137d4:	mov	sl, #0
   137d8:	mov	r4, #0
   137dc:	mov	r3, #0
   137e0:	mov	r5, #0
   137e4:	mov	r0, #0
   137e8:	mov	r2, #0
   137ec:	ldr	pc, [r7, r6, lsl #2]
   137f0:	andeq	r3, r1, r4, asr r8
   137f4:	andeq	r3, r1, ip, asr #16
   137f8:	andeq	r3, r1, r4, asr #16
   137fc:	andeq	r3, r1, ip, lsr r8
   13800:	andeq	r3, r1, r0, lsr r8
   13804:	andeq	r3, r1, r4, lsr #16
   13808:	andeq	r3, r1, r4, lsl r8
   1380c:	andeq	r3, r1, r0, lsl r8
   13810:	ldrb	lr, [r8, #15]
   13814:	ldrb	r0, [r8, #14]
   13818:	mov	sl, r1
   1381c:	orr	r0, lr, r0, lsl #8
   13820:	mov	r1, r0
   13824:	ldrb	r0, [r8, #13]
   13828:	mov	r4, sl
   1382c:	orr	r1, r1, r0, lsl #16
   13830:	ldrb	r0, [r8, #12]
   13834:	mov	r3, r4
   13838:	orr	r1, r1, r0, lsl #24
   1383c:	ldrb	r0, [r8, #11]
   13840:	orr	r5, r0, r3
   13844:	ldrb	r0, [r8, #10]
   13848:	orr	r0, r5, r0, lsl #8
   1384c:	ldrb	r2, [r8, #9]
   13850:	orr	r2, r0, r2, lsl #16
   13854:	ldrb	r0, [r9]
   13858:	movw	r7, #26227	; 0x6673
   1385c:	movt	r7, #31087	; 0x796f
   13860:	orr	r2, r2, r0, lsl #24
   13864:	movw	r0, #26989	; 0x696d
   13868:	movt	r0, #29810	; 0x7472
   1386c:	subs	r0, r0, r1
   13870:	sbcs	r0, r7, r2
   13874:	bcc	14240 <main@@Base+0xf48>
   13878:	movw	r0, #29797	; 0x7465
   1387c:	ldr	r6, [sp, #44]	; 0x2c
   13880:	eor	r3, r2, r7
   13884:	movt	r0, #28530	; 0x6f72
   13888:	eor	r0, r1, r0
   1388c:	orrs	r0, r0, r3
   13890:	beq	1474c <main@@Base+0x1454>
   13894:	movw	r0, #27763	; 0x6c73
   13898:	mov	r5, r6
   1389c:	movt	r0, #28527	; 0x6f6f
   138a0:	eor	r0, r1, r0
   138a4:	movw	r1, #26210	; 0x6662
   138a8:	movt	r1, #31087	; 0x796f
   138ac:	eor	r1, r2, r1
   138b0:	orrs	r0, r0, r1
   138b4:	bne	158cc <main@@Base+0x25d4>
   138b8:	cmp	ip, #9
   138bc:	blt	158cc <main@@Base+0x25d4>
   138c0:	ldr	r2, [sp, #32]
   138c4:	mov	r1, r8
   138c8:	ldrb	r0, [r1, #16]!
   138cc:	ldr	r2, [r2]
   138d0:	cmp	r2, #0
   138d4:	beq	14e68 <main@@Base+0x1b70>
   138d8:	cmp	r0, #33	; 0x21
   138dc:	bcc	138e8 <main@@Base+0x5f0>
   138e0:	cmp	r0, #58	; 0x3a
   138e4:	bne	158cc <main@@Base+0x25d4>
   138e8:	ldr	r0, [sp, #32]
   138ec:	mov	r2, #0
   138f0:	str	r2, [r0]
   138f4:	b	14e74 <main@@Base+0x1b7c>
   138f8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   138fc:	movw	r1, #29555	; 0x7373
   13900:	ldr	r5, [sp, #44]	; 0x2c
   13904:	movt	r1, #29797	; 0x7465
   13908:	cmp	r0, r1
   1390c:	bhi	13b60 <main@@Base+0x868>
   13910:	subs	r1, sl, r6
   13914:	sbcs	r1, r0, r2
   13918:	bcs	13d14 <main@@Base+0xa1c>
   1391c:	movw	r1, #28005	; 0x6d65
   13920:	movt	r1, #28257	; 0x6e61
   13924:	teq	r0, r1
   13928:	bne	1436c <main@@Base+0x1074>
   1392c:	ldr	sl, [sp, #36]	; 0x24
   13930:	cmp	r9, #5
   13934:	mov	r1, r8
   13938:	mov	r6, r5
   1393c:	blt	15ef0 <main@@Base+0x2bf8>
   13940:	ldr	r1, [sp, #32]
   13944:	mov	r2, r8
   13948:	ldrb	r0, [r2, #4]!
   1394c:	ldr	r1, [r1]
   13950:	cmp	r1, #0
   13954:	beq	14be4 <main@@Base+0x18ec>
   13958:	cmp	r0, #33	; 0x21
   1395c:	bcc	1396c <main@@Base+0x674>
   13960:	cmp	r0, #58	; 0x3a
   13964:	mov	r1, r8
   13968:	bne	15ef0 <main@@Base+0x2bf8>
   1396c:	ldr	r0, [sp, #32]
   13970:	mov	r1, #0
   13974:	str	r1, [r0]
   13978:	sub	r0, r6, r2
   1397c:	cmp	r0, #2
   13980:	bge	14c00 <main@@Base+0x1908>
   13984:	b	15090 <main@@Base+0x1d98>
   13988:	ldr	r6, [sp, #44]	; 0x2c
   1398c:	subs	r1, sl, r2
   13990:	sbcs	r1, r0, r7
   13994:	bcs	13bcc <main@@Base+0x8d4>
   13998:	movw	r1, #0
   1399c:	bfc	sl, #0, #16
   139a0:	eor	r0, r0, r7
   139a4:	movt	r1, #26163	; 0x6633
   139a8:	eor	r1, sl, r1
   139ac:	orrs	r0, r1, r0
   139b0:	bne	16858 <main@@Base+0x3560>
   139b4:	ldr	sl, [sp, #36]	; 0x24
   139b8:	cmp	r9, #7
   139bc:	mov	r7, r8
   139c0:	blt	154e4 <main@@Base+0x21ec>
   139c4:	ldr	r2, [sp, #32]
   139c8:	mov	r1, r8
   139cc:	ldrb	r0, [r1, #6]!
   139d0:	ldr	r2, [r2]
   139d4:	cmp	r2, #0
   139d8:	beq	14a2c <main@@Base+0x1734>
   139dc:	cmp	r0, #33	; 0x21
   139e0:	bcc	139f0 <main@@Base+0x6f8>
   139e4:	cmp	r0, #58	; 0x3a
   139e8:	mov	r7, r8
   139ec:	bne	154e4 <main@@Base+0x21ec>
   139f0:	ldr	r0, [sp, #32]
   139f4:	mov	r2, #0
   139f8:	str	r2, [r0]
   139fc:	sub	r0, r6, r1
   13a00:	cmp	r0, #2
   13a04:	bge	14a48 <main@@Base+0x1750>
   13a08:	b	14d84 <main@@Base+0x1a8c>
   13a0c:	movw	r1, #65535	; 0xffff
   13a10:	movw	r2, #30309	; 0x7665
   13a14:	movt	r1, #26735	; 0x686f
   13a18:	movt	r2, #26990	; 0x696e
   13a1c:	cmp	r0, r1
   13a20:	bhi	13ef8 <main@@Base+0xc00>
   13a24:	movw	r1, #25976	; 0x6578
   13a28:	movt	r1, #26220	; 0x666c
   13a2c:	teq	r0, r1
   13a30:	bne	16858 <main@@Base+0x3560>
   13a34:	ldr	sl, [sp, #36]	; 0x24
   13a38:	cmp	r9, #5
   13a3c:	mov	r4, r8
   13a40:	blt	15f58 <main@@Base+0x2c60>
   13a44:	ldr	r2, [sp, #32]
   13a48:	mov	r1, r8
   13a4c:	ldrb	r0, [r1, #4]!
   13a50:	ldr	r2, [r2]
   13a54:	cmp	r2, #0
   13a58:	beq	14c1c <main@@Base+0x1924>
   13a5c:	cmp	r0, #33	; 0x21
   13a60:	bcc	13a70 <main@@Base+0x778>
   13a64:	cmp	r0, #58	; 0x3a
   13a68:	mov	r4, r8
   13a6c:	bne	15f58 <main@@Base+0x2c60>
   13a70:	ldr	r0, [sp, #32]
   13a74:	mov	r2, #0
   13a78:	str	r2, [r0]
   13a7c:	sub	r0, r6, r1
   13a80:	cmp	r0, #2
   13a84:	bge	14c38 <main@@Base+0x1940>
   13a88:	b	1510c <main@@Base+0x1e14>
   13a8c:	movw	r2, #28788	; 0x7074
   13a90:	movt	r2, #25965	; 0x656d
   13a94:	subs	r2, sl, r2
   13a98:	sbcs	r2, r0, r7
   13a9c:	bcs	13f70 <main@@Base+0xc78>
   13aa0:	movw	r0, #28524	; 0x6f6c
   13aa4:	movt	r0, #25199	; 0x626f
   13aa8:	eor	r0, sl, r0
   13aac:	orrs	r0, r0, r1
   13ab0:	beq	146ec <main@@Base+0x13f4>
   13ab4:	movw	r0, #29541	; 0x7365
   13ab8:	movt	r0, #25185	; 0x6261
   13abc:	eor	r0, sl, r0
   13ac0:	orrs	r0, r0, r1
   13ac4:	bne	16858 <main@@Base+0x3560>
   13ac8:	add	r7, r8, #8
   13acc:	ldr	sl, [sp, #36]	; 0x24
   13ad0:	mov	r2, #8
   13ad4:	sub	r0, r6, r7
   13ad8:	cmp	r0, #8
   13adc:	movcc	r2, r0
   13ae0:	sub	r1, r2, #2
   13ae4:	cmp	r1, #7
   13ae8:	bcs	14cc4 <main@@Base+0x19cc>
   13aec:	ldrb	r1, [r8, #9]
   13af0:	lsl	r2, r1, #16
   13af4:	mov	r1, #0
   13af8:	ldrb	r3, [r7]
   13afc:	orr	r2, r2, r3, lsl #24
   13b00:	movw	r3, #0
   13b04:	movt	r3, #13876	; 0x3634
   13b08:	eor	r2, r2, r3
   13b0c:	orrs	r1, r1, r2
   13b10:	bne	1beac <main@@Base+0x8bb4>
   13b14:	cmp	r0, #3
   13b18:	blt	1beac <main@@Base+0x8bb4>
   13b1c:	ldr	r2, [sp, #32]
   13b20:	mov	r1, r8
   13b24:	ldrb	r0, [r1, #10]!
   13b28:	ldr	r2, [r2]
   13b2c:	cmp	r2, #0
   13b30:	beq	1528c <main@@Base+0x1f94>
   13b34:	cmp	r0, #33	; 0x21
   13b38:	bcc	13b44 <main@@Base+0x84c>
   13b3c:	cmp	r0, #58	; 0x3a
   13b40:	bne	1beac <main@@Base+0x8bb4>
   13b44:	ldr	r0, [sp, #32]
   13b48:	mov	r2, #0
   13b4c:	str	r2, [r0]
   13b50:	sub	r0, r6, r1
   13b54:	cmp	r0, #2
   13b58:	bge	152a4 <main@@Base+0x1fac>
   13b5c:	b	163c0 <main@@Base+0x30c8>
   13b60:	and	r6, sl, #-16777216	; 0xff000000
   13b64:	eor	r4, r0, r7
   13b68:	eor	r1, r6, #872415232	; 0x34000000
   13b6c:	orrs	r1, r1, r4
   13b70:	bne	14010 <main@@Base+0xd18>
   13b74:	cmp	r9, #6
   13b78:	mov	r7, r8
   13b7c:	mov	r6, r5
   13b80:	blt	155bc <main@@Base+0x22c4>
   13b84:	ldr	r2, [sp, #32]
   13b88:	mov	r1, r8
   13b8c:	ldrb	r0, [r1, #5]!
   13b90:	ldr	r2, [r2]
   13b94:	cmp	r2, #0
   13b98:	beq	14a64 <main@@Base+0x176c>
   13b9c:	cmp	r0, #33	; 0x21
   13ba0:	bcc	13bb0 <main@@Base+0x8b8>
   13ba4:	cmp	r0, #58	; 0x3a
   13ba8:	mov	r7, r8
   13bac:	bne	155bc <main@@Base+0x22c4>
   13bb0:	ldr	r0, [sp, #32]
   13bb4:	mov	r2, #0
   13bb8:	str	r2, [r0]
   13bbc:	sub	r0, r6, r1
   13bc0:	cmp	r0, #2
   13bc4:	bge	14a80 <main@@Base+0x1788>
   13bc8:	b	14e00 <main@@Base+0x1b08>
   13bcc:	eor	r2, sl, r2
   13bd0:	eor	r1, r0, r7
   13bd4:	orrs	r2, r2, r1
   13bd8:	bne	14070 <main@@Base+0xd78>
   13bdc:	add	r9, r8, #8
   13be0:	mov	r0, #8
   13be4:	sub	ip, r6, r9
   13be8:	cmp	ip, #8
   13bec:	movcc	r0, ip
   13bf0:	sub	r7, r0, #1
   13bf4:	cmp	r7, #7
   13bf8:	bhi	14744 <main@@Base+0x144c>
   13bfc:	add	r4, pc, #32
   13c00:	mov	r1, #0
   13c04:	mov	lr, #0
   13c08:	mov	sl, #0
   13c0c:	mov	r6, #0
   13c10:	mov	r3, #0
   13c14:	mov	r5, #0
   13c18:	mov	r0, #0
   13c1c:	mov	r2, #0
   13c20:	ldr	pc, [r4, r7, lsl #2]
   13c24:	andeq	r3, r1, r8, lsl #25
   13c28:	andeq	r3, r1, r0, lsl #25
   13c2c:	andeq	r3, r1, r8, ror ip
   13c30:	andeq	r3, r1, r0, ror ip
   13c34:	andeq	r3, r1, r4, ror #24
   13c38:	andeq	r3, r1, r8, asr ip
   13c3c:	andeq	r3, r1, r8, asr #24
   13c40:	andeq	r3, r1, r4, asr #24
   13c44:	ldrb	lr, [r8, #15]
   13c48:	ldrb	r0, [r8, #14]
   13c4c:	mov	sl, r1
   13c50:	orr	r0, lr, r0, lsl #8
   13c54:	mov	r1, r0
   13c58:	ldrb	r0, [r8, #13]
   13c5c:	mov	r6, sl
   13c60:	orr	r1, r1, r0, lsl #16
   13c64:	ldrb	r0, [r8, #12]
   13c68:	mov	r3, r6
   13c6c:	orr	r1, r1, r0, lsl #24
   13c70:	ldrb	r0, [r8, #11]
   13c74:	orr	r5, r0, r3
   13c78:	ldrb	r0, [r8, #10]
   13c7c:	orr	r0, r5, r0, lsl #8
   13c80:	ldrb	r2, [r8, #9]
   13c84:	orr	r2, r0, r2, lsl #16
   13c88:	ldrb	r0, [r9]
   13c8c:	movw	r3, #30257	; 0x7631
   13c90:	movt	r3, #26222	; 0x666e
   13c94:	orr	r2, r2, r0, lsl #24
   13c98:	subs	r0, r1, r3
   13c9c:	movw	r0, #13407	; 0x345f
   13ca0:	movt	r0, #29494	; 0x7336
   13ca4:	sbcs	r0, r2, r0
   13ca8:	bcs	1465c <main@@Base+0x1364>
   13cac:	eor	r0, r1, r3
   13cb0:	ldr	r1, [sp, #28]
   13cb4:	ldr	r6, [sp, #44]	; 0x2c
   13cb8:	eor	r1, r2, r1
   13cbc:	orrs	r0, r0, r1
   13cc0:	bne	14744 <main@@Base+0x144c>
   13cc4:	ldr	sl, [sp, #36]	; 0x24
   13cc8:	cmp	ip, #9
   13ccc:	blt	15b6c <main@@Base+0x2874>
   13cd0:	ldr	r2, [sp, #32]
   13cd4:	mov	r1, r8
   13cd8:	ldrb	r0, [r1, #16]!
   13cdc:	ldr	r2, [r2]
   13ce0:	cmp	r2, #0
   13ce4:	beq	14f50 <main@@Base+0x1c58>
   13ce8:	cmp	r0, #33	; 0x21
   13cec:	bcc	13cf8 <main@@Base+0xa00>
   13cf0:	cmp	r0, #58	; 0x3a
   13cf4:	bne	15b6c <main@@Base+0x2874>
   13cf8:	ldr	r0, [sp, #32]
   13cfc:	mov	r2, #0
   13d00:	str	r2, [r0]
   13d04:	sub	r0, r6, r1
   13d08:	cmp	r0, #2
   13d0c:	bge	14f68 <main@@Base+0x1c70>
   13d10:	b	15b20 <main@@Base+0x2828>
   13d14:	eor	r1, sl, r6
   13d18:	eor	r2, r0, r2
   13d1c:	orrs	r1, r1, r2
   13d20:	bne	14378 <main@@Base+0x1080>
   13d24:	add	r1, r8, #8
   13d28:	mov	r2, #8
   13d2c:	ldr	sl, [sp, #36]	; 0x24
   13d30:	mov	r6, r5
   13d34:	sub	r0, r5, r1
   13d38:	cmp	r0, #8
   13d3c:	movcs	r0, r2
   13d40:	sub	r7, r0, #1
   13d44:	cmp	r7, #7
   13d48:	bhi	146e4 <main@@Base+0x13ec>
   13d4c:	add	r0, pc, #32
   13d50:	mov	r9, #0
   13d54:	mov	ip, #0
   13d58:	mov	lr, #0
   13d5c:	mov	r6, #0
   13d60:	mov	r3, #0
   13d64:	mov	r4, #0
   13d68:	mov	r2, #0
   13d6c:	mov	r5, #0
   13d70:	ldr	pc, [r0, r7, lsl #2]
   13d74:	ldrdeq	r3, [r1], -r8
   13d78:	ldrdeq	r3, [r1], -r0
   13d7c:	andeq	r3, r1, r8, asr #27
   13d80:	andeq	r3, r1, r0, asr #27
   13d84:			; <UNDEFINED> instruction: 0x00013db4
   13d88:	andeq	r3, r1, r8, lsr #27
   13d8c:	muleq	r1, r8, sp
   13d90:	muleq	r1, r4, sp
   13d94:	ldrb	ip, [r8, #15]
   13d98:	ldrb	r0, [r8, #14]
   13d9c:	mov	lr, r9
   13da0:	orr	r0, ip, r0, lsl #8
   13da4:	mov	r9, r0
   13da8:	ldrb	r0, [r8, #13]
   13dac:	mov	r6, lr
   13db0:	orr	r9, r9, r0, lsl #16
   13db4:	ldrb	r0, [r8, #12]
   13db8:	mov	r3, r6
   13dbc:	orr	r9, r9, r0, lsl #24
   13dc0:	ldrb	r0, [r8, #11]
   13dc4:	orr	r4, r0, r3
   13dc8:	ldrb	r0, [r8, #10]
   13dcc:	orr	r2, r4, r0, lsl #8
   13dd0:	ldrb	r0, [r8, #9]
   13dd4:	orr	r5, r2, r0, lsl #16
   13dd8:	ldrb	r2, [r1]
   13ddc:	movw	r0, #25445	; 0x6365
   13de0:	movw	r3, #25971	; 0x6573
   13de4:	ldr	r6, [sp, #44]	; 0x2c
   13de8:	movt	r0, #28769	; 0x7061
   13dec:	movt	r3, #24941	; 0x616d
   13df0:	eor	r0, r9, r0
   13df4:	orr	r2, r5, r2, lsl #24
   13df8:	eor	r2, r2, r3
   13dfc:	orrs	r0, r0, r2
   13e00:	bne	146e4 <main@@Base+0x13ec>
   13e04:	add	r9, r8, #16
   13e08:	mov	r1, #8
   13e0c:	sub	r0, r6, r9
   13e10:	cmp	r0, #8
   13e14:	movcc	r1, r0
   13e18:	sub	r3, r1, #1
   13e1c:	cmp	r3, #7
   13e20:	bhi	1a870 <main@@Base+0x7578>
   13e24:	add	r7, pc, #20
   13e28:	mov	r1, #0
   13e2c:	mov	r2, #0
   13e30:	mov	r6, #0
   13e34:	mov	r5, #0
   13e38:	mov	r4, #0
   13e3c:	ldr	pc, [r7, r3, lsl #2]
   13e40:	andeq	r3, r1, r4, lsl #29
   13e44:	andeq	r3, r1, ip, ror lr
   13e48:	andeq	r3, r1, r4, ror lr
   13e4c:	andeq	r3, r1, r8, ror #28
   13e50:	andeq	r3, r1, r0, ror #28
   13e54:	andeq	r3, r1, r0, ror #28
   13e58:	andeq	r3, r1, r0, ror #28
   13e5c:	andeq	r3, r1, r0, ror #28
   13e60:	ldrb	r2, [r8, #20]
   13e64:	lsl	r2, r2, #24
   13e68:	ldrb	r3, [r8, #19]
   13e6c:	orr	r6, r3, r1
   13e70:	mov	r1, r2
   13e74:	ldrb	r2, [r8, #18]
   13e78:	orr	r5, r6, r2, lsl #8
   13e7c:	ldrb	r2, [r8, #17]
   13e80:	orr	r4, r5, r2, lsl #16
   13e84:	ldrb	r2, [r9]
   13e88:	movw	r3, #25971	; 0x6573
   13e8c:	ldr	r6, [sp, #44]	; 0x2c
   13e90:	and	r1, r1, #-16777216	; 0xff000000
   13e94:	movt	r3, #24436	; 0x5f74
   13e98:	eor	r1, r1, #1946157056	; 0x74000000
   13e9c:	orr	r2, r4, r2, lsl #24
   13ea0:	eor	r2, r2, r3
   13ea4:	orrs	r1, r1, r2
   13ea8:	bne	1a870 <main@@Base+0x7578>
   13eac:	cmp	r0, #6
   13eb0:	blt	1a870 <main@@Base+0x7578>
   13eb4:	ldr	r2, [sp, #32]
   13eb8:	mov	r1, r8
   13ebc:	ldrb	r0, [r1, #21]!
   13ec0:	ldr	r2, [r2]
   13ec4:	cmp	r2, #0
   13ec8:	beq	15834 <main@@Base+0x253c>
   13ecc:	cmp	r0, #33	; 0x21
   13ed0:	bcc	13edc <main@@Base+0xbe4>
   13ed4:	cmp	r0, #58	; 0x3a
   13ed8:	bne	1a870 <main@@Base+0x7578>
   13edc:	ldr	r0, [sp, #32]
   13ee0:	mov	r2, #0
   13ee4:	str	r2, [r0]
   13ee8:	sub	r0, r6, r1
   13eec:	cmp	r0, #2
   13ef0:	bge	1584c <main@@Base+0x2554>
   13ef4:	b	16e30 <main@@Base+0x3b38>
   13ef8:	subs	r1, sl, r3
   13efc:	sbcs	r1, r0, r2
   13f00:	bcs	143e8 <main@@Base+0x10f0>
   13f04:	movw	r1, #0
   13f08:	bfc	r0, #0, #16
   13f0c:	movt	r1, #26736	; 0x6870
   13f10:	teq	r0, r1
   13f14:	bne	16858 <main@@Base+0x3560>
   13f18:	ldr	sl, [sp, #36]	; 0x24
   13f1c:	cmp	r9, #3
   13f20:	mov	r7, r8
   13f24:	blt	16fd8 <main@@Base+0x3ce0>
   13f28:	ldr	r2, [sp, #32]
   13f2c:	mov	r1, r8
   13f30:	ldrb	r0, [r1, #2]!
   13f34:	ldr	r2, [r2]
   13f38:	cmp	r2, #0
   13f3c:	beq	14ea8 <main@@Base+0x1bb0>
   13f40:	cmp	r0, #33	; 0x21
   13f44:	bcc	13f54 <main@@Base+0xc5c>
   13f48:	cmp	r0, #58	; 0x3a
   13f4c:	mov	r7, r8
   13f50:	bne	16fd8 <main@@Base+0x3ce0>
   13f54:	ldr	r0, [sp, #32]
   13f58:	mov	r2, #0
   13f5c:	str	r2, [r0]
   13f60:	sub	r0, r6, r1
   13f64:	cmp	r0, #2
   13f68:	bge	14ec4 <main@@Base+0x1bcc>
   13f6c:	b	15910 <main@@Base+0x2618>
   13f70:	mvn	r2, #-1711276032	; 0x9a000000
   13f74:	subs	r2, r2, sl
   13f78:	sbcs	r2, r7, r0
   13f7c:	bcc	14474 <main@@Base+0x117c>
   13f80:	movw	r0, #28788	; 0x7074
   13f84:	movt	r0, #25965	; 0x656d
   13f88:	eor	r0, sl, r0
   13f8c:	orrs	r0, r0, r1
   13f90:	bne	16858 <main@@Base+0x3560>
   13f94:	add	r7, r8, #8
   13f98:	ldr	sl, [sp, #36]	; 0x24
   13f9c:	mov	r1, #8
   13fa0:	sub	r0, r6, r7
   13fa4:	cmp	r0, #8
   13fa8:	movcc	r1, r0
   13fac:	sub	r1, r1, #1
   13fb0:	cmp	r1, #7
   13fb4:	bhi	1beac <main@@Base+0x8bb4>
   13fb8:	ldrb	r1, [r7]
   13fbc:	cmp	r1, #121	; 0x79
   13fc0:	bne	1beac <main@@Base+0x8bb4>
   13fc4:	cmp	r0, #2
   13fc8:	blt	1beac <main@@Base+0x8bb4>
   13fcc:	ldr	r2, [sp, #32]
   13fd0:	mov	r1, r8
   13fd4:	ldrb	r0, [r1, #9]!
   13fd8:	ldr	r2, [r2]
   13fdc:	cmp	r2, #0
   13fe0:	beq	15e30 <main@@Base+0x2b38>
   13fe4:	cmp	r0, #33	; 0x21
   13fe8:	bcc	13ff4 <main@@Base+0xcfc>
   13fec:	cmp	r0, #58	; 0x3a
   13ff0:	bne	1beac <main@@Base+0x8bb4>
   13ff4:	ldr	r0, [sp, #32]
   13ff8:	mov	r2, #0
   13ffc:	str	r2, [r0]
   14000:	sub	r0, r6, r1
   14004:	cmp	r0, #2
   14008:	bge	15e48 <main@@Base+0x2b50>
   1400c:	b	185f0 <main@@Base+0x52f8>
   14010:	teq	r0, r7
   14014:	bne	151dc <main@@Base+0x1ee4>
   14018:	cmp	r9, #5
   1401c:	mov	r1, r8
   14020:	blt	16314 <main@@Base+0x301c>
   14024:	ldr	r1, [sp, #32]
   14028:	mov	r2, r8
   1402c:	ldrb	r0, [r2, #4]!
   14030:	ldr	r1, [r1]
   14034:	cmp	r1, #0
   14038:	beq	14c54 <main@@Base+0x195c>
   1403c:	cmp	r0, #33	; 0x21
   14040:	bcc	14050 <main@@Base+0xd58>
   14044:	cmp	r0, #58	; 0x3a
   14048:	mov	r1, r8
   1404c:	bne	16314 <main@@Base+0x301c>
   14050:	ldr	r0, [sp, #32]
   14054:	mov	r1, #0
   14058:	str	r1, [r0]
   1405c:	sub	r0, r5, r2
   14060:	mov	r7, r5
   14064:	cmp	r0, #2
   14068:	bge	14c74 <main@@Base+0x197c>
   1406c:	b	1518c <main@@Base+0x1e94>
   14070:	movw	r7, #24431	; 0x5f6f
   14074:	movw	r3, #25460	; 0x6374
   14078:	movt	r7, #28530	; 0x6f72
   1407c:	movt	r3, #30309	; 0x7665
   14080:	subs	r2, sl, r7
   14084:	sbcs	r2, r0, r3
   14088:	bcs	144f4 <main@@Base+0x11fc>
   1408c:	movw	r0, #29556	; 0x7374
   14090:	movt	r0, #28261	; 0x6e65
   14094:	eor	r0, sl, r0
   14098:	orrs	r0, r0, r1
   1409c:	bne	16858 <main@@Base+0x3560>
   140a0:	add	r1, r8, #8
   140a4:	mov	r2, #8
   140a8:	ldr	sl, [sp, #36]	; 0x24
   140ac:	sub	r0, r6, r1
   140b0:	cmp	r0, #8
   140b4:	movcs	r0, r2
   140b8:	sub	r7, r0, #1
   140bc:	cmp	r7, #7
   140c0:	bhi	146e4 <main@@Base+0x13ec>
   140c4:	add	r0, pc, #32
   140c8:	mov	r9, #0
   140cc:	mov	ip, #0
   140d0:	mov	lr, #0
   140d4:	mov	r6, #0
   140d8:	mov	r3, #0
   140dc:	mov	r5, #0
   140e0:	mov	r2, #0
   140e4:	mov	r4, #0
   140e8:	ldr	pc, [r0, r7, lsl #2]
   140ec:	andeq	r4, r1, r0, asr r1
   140f0:	andeq	r4, r1, r8, asr #2
   140f4:	andeq	r4, r1, r0, asr #2
   140f8:	andeq	r4, r1, r8, lsr r1
   140fc:	andeq	r4, r1, ip, lsr #2
   14100:	andeq	r4, r1, r0, lsr #2
   14104:	andeq	r4, r1, r0, lsl r1
   14108:	andeq	r4, r1, ip, lsl #2
   1410c:	ldrb	ip, [r8, #15]
   14110:	ldrb	r0, [r8, #14]
   14114:	mov	lr, r9
   14118:	orr	r0, ip, r0, lsl #8
   1411c:	mov	r9, r0
   14120:	ldrb	r0, [r8, #13]
   14124:	mov	r6, lr
   14128:	orr	r9, r9, r0, lsl #16
   1412c:	ldrb	r0, [r8, #12]
   14130:	mov	r3, r6
   14134:	orr	r9, r9, r0, lsl #24
   14138:	ldrb	r0, [r8, #11]
   1413c:	orr	r5, r0, r3
   14140:	ldrb	r0, [r8, #10]
   14144:	orr	r2, r5, r0, lsl #8
   14148:	ldrb	r0, [r8, #9]
   1414c:	orr	r4, r2, r0, lsl #16
   14150:	ldrb	r2, [r1]
   14154:	movw	r0, #25205	; 0x6275
   14158:	movw	r3, #26220	; 0x666c
   1415c:	ldr	r6, [sp, #44]	; 0x2c
   14160:	movt	r0, #24948	; 0x6174
   14164:	movt	r3, #25956	; 0x6564
   14168:	eor	r0, r9, r0
   1416c:	orr	r2, r4, r2, lsl #24
   14170:	eor	r2, r2, r3
   14174:	orrs	r0, r0, r2
   14178:	bne	146e4 <main@@Base+0x13ec>
   1417c:	add	r7, r8, #16
   14180:	mov	r1, #8
   14184:	sub	r0, r6, r7
   14188:	cmp	r0, #8
   1418c:	movcc	r1, r0
   14190:	sub	r2, r1, #1
   14194:	cmp	r2, #7
   14198:	bhi	1beac <main@@Base+0x8bb4>
   1419c:	add	r3, pc, #4
   141a0:	mov	r1, #0
   141a4:	ldr	pc, [r3, r2, lsl #2]
   141a8:	ldrdeq	r4, [r1], -ip
   141ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141b0:	andeq	r4, r1, ip, asr #3
   141b4:	andeq	r4, r1, r8, asr #3
   141b8:	andeq	r4, r1, r8, asr #3
   141bc:	andeq	r4, r1, r8, asr #3
   141c0:	andeq	r4, r1, r8, asr #3
   141c4:	andeq	r4, r1, r8, asr #3
   141c8:	ldrb	r1, [r8, #19]
   141cc:	ldrb	r2, [r8, #18]
   141d0:	orr	r1, r1, r2, lsl #8
   141d4:	ldrb	r2, [r8, #17]
   141d8:	orr	r1, r1, r2, lsl #16
   141dc:	ldrb	r2, [r7]
   141e0:	orr	r1, r1, r2, lsl #24
   141e4:	movw	r2, #25970	; 0x6572
   141e8:	movt	r2, #26214	; 0x6666
   141ec:	teq	r1, r2
   141f0:	bne	1beac <main@@Base+0x8bb4>
   141f4:	cmp	r0, #5
   141f8:	blt	1beac <main@@Base+0x8bb4>
   141fc:	ldr	r2, [sp, #32]
   14200:	mov	r1, r8
   14204:	ldrb	r0, [r1, #20]!
   14208:	ldr	r2, [r2]
   1420c:	cmp	r2, #0
   14210:	beq	16378 <main@@Base+0x3080>
   14214:	cmp	r0, #33	; 0x21
   14218:	bcc	14224 <main@@Base+0xf2c>
   1421c:	cmp	r0, #58	; 0x3a
   14220:	bne	1beac <main@@Base+0x8bb4>
   14224:	ldr	r0, [sp, #32]
   14228:	mov	r2, #0
   1422c:	str	r2, [r0]
   14230:	sub	r0, r6, r1
   14234:	cmp	r0, #2
   14238:	bge	16390 <main@@Base+0x3098>
   1423c:	b	18a58 <main@@Base+0x5760>
   14240:	movw	r0, #27749	; 0x6c65
   14244:	movw	r3, #26228	; 0x6674
   14248:	ldr	r6, [sp, #44]	; 0x2c
   1424c:	ldr	sl, [sp, #36]	; 0x24
   14250:	movt	r0, #24930	; 0x6162
   14254:	movt	r3, #31087	; 0x796f
   14258:	eor	r0, r1, r0
   1425c:	eor	r3, r2, r3
   14260:	orrs	r0, r0, r3
   14264:	beq	1486c <main@@Base+0x1574>
   14268:	movw	r0, #26990	; 0x696e
   1426c:	movt	r0, #29810	; 0x7472
   14270:	eor	r0, r1, r0
   14274:	eor	r1, r2, r7
   14278:	orrs	r0, r0, r1
   1427c:	bne	1a870 <main@@Base+0x7578>
   14280:	add	r7, r8, #16
   14284:	mov	r2, #8
   14288:	sub	r0, r6, r7
   1428c:	cmp	r0, #8
   14290:	movcc	r2, r0
   14294:	sub	r1, r2, #2
   14298:	cmp	r1, #7
   1429c:	bcs	14d24 <main@@Base+0x1a2c>
   142a0:	ldrb	r1, [r8, #17]
   142a4:	lsl	r2, r1, #16
   142a8:	mov	r1, #0
   142ac:	ldrb	r3, [r7]
   142b0:	orr	r2, r2, r3, lsl #24
   142b4:	movw	r3, #0
   142b8:	movt	r3, #26418	; 0x6732
   142bc:	eor	r3, r2, r3
   142c0:	orrs	r1, r1, r3
   142c4:	bne	14a9c <main@@Base+0x17a4>
   142c8:	cmp	r0, #3
   142cc:	blt	1beac <main@@Base+0x8bb4>
   142d0:	ldr	r2, [sp, #32]
   142d4:	mov	r1, r8
   142d8:	ldrb	r0, [r1, #18]!
   142dc:	ldr	r2, [r2]
   142e0:	cmp	r2, #0
   142e4:	beq	152c0 <main@@Base+0x1fc8>
   142e8:	cmp	r0, #33	; 0x21
   142ec:	bcc	142f8 <main@@Base+0x1000>
   142f0:	cmp	r0, #58	; 0x3a
   142f4:	bne	1beac <main@@Base+0x8bb4>
   142f8:	ldr	r0, [sp, #32]
   142fc:	mov	r2, #0
   14300:	str	r2, [r0]
   14304:	sub	r0, r6, r1
   14308:	cmp	r0, #2
   1430c:	bge	152d8 <main@@Base+0x1fe0>
   14310:	b	16470 <main@@Base+0x3178>
   14314:	ldr	sl, [sp, #36]	; 0x24
   14318:	cmp	r9, #6
   1431c:	mov	r7, r8
   14320:	blt	15c80 <main@@Base+0x2988>
   14324:	ldr	r2, [sp, #32]
   14328:	mov	r1, r8
   1432c:	ldrb	r0, [r1, #5]!
   14330:	ldr	r2, [r2]
   14334:	cmp	r2, #0
   14338:	beq	14b2c <main@@Base+0x1834>
   1433c:	cmp	r0, #33	; 0x21
   14340:	bcc	14350 <main@@Base+0x1058>
   14344:	cmp	r0, #58	; 0x3a
   14348:	mov	r7, r8
   1434c:	bne	15c80 <main@@Base+0x2988>
   14350:	ldr	r0, [sp, #32]
   14354:	mov	r2, #0
   14358:	str	r2, [r0]
   1435c:	sub	r0, r6, r1
   14360:	cmp	r0, #2
   14364:	bge	14b48 <main@@Base+0x1850>
   14368:	b	15014 <main@@Base+0x1d1c>
   1436c:	ldr	sl, [sp, #36]	; 0x24
   14370:	mov	r1, r8
   14374:	b	158d4 <main@@Base+0x25dc>
   14378:	movw	r1, #29440	; 0x7300
   1437c:	ldr	sl, [sp, #36]	; 0x24
   14380:	bic	r0, r0, #255	; 0xff
   14384:	mov	r6, r5
   14388:	movt	r1, #28783	; 0x706f
   1438c:	teq	r0, r1
   14390:	bne	1685c <main@@Base+0x3564>
   14394:	cmp	r9, #4
   14398:	mov	r4, r8
   1439c:	blt	1717c <main@@Base+0x3e84>
   143a0:	ldr	r2, [sp, #32]
   143a4:	mov	r1, r8
   143a8:	ldrb	r0, [r1, #3]!
   143ac:	ldr	r2, [r2]
   143b0:	cmp	r2, #0
   143b4:	beq	14ee0 <main@@Base+0x1be8>
   143b8:	cmp	r0, #33	; 0x21
   143bc:	bcc	143cc <main@@Base+0x10d4>
   143c0:	cmp	r0, #58	; 0x3a
   143c4:	mov	r4, r8
   143c8:	bne	1717c <main@@Base+0x3e84>
   143cc:	ldr	r0, [sp, #32]
   143d0:	mov	r2, #0
   143d4:	str	r2, [r0]
   143d8:	sub	r0, r6, r1
   143dc:	cmp	r0, #2
   143e0:	bge	14efc <main@@Base+0x1c04>
   143e4:	b	1598c <main@@Base+0x2694>
   143e8:	eor	r1, sl, r3
   143ec:	eor	r2, r0, r2
   143f0:	orrs	r1, r1, r2
   143f4:	bne	148e4 <main@@Base+0x15ec>
   143f8:	add	r7, r8, #8
   143fc:	ldr	sl, [sp, #36]	; 0x24
   14400:	mov	r1, #8
   14404:	sub	r0, r6, r7
   14408:	cmp	r0, #8
   1440c:	movcc	r1, r0
   14410:	sub	r1, r1, #1
   14414:	cmp	r1, #7
   14418:	bhi	1beac <main@@Base+0x8bb4>
   1441c:	ldrb	r1, [r7]
   14420:	cmp	r1, #121	; 0x79
   14424:	bne	1beac <main@@Base+0x8bb4>
   14428:	cmp	r0, #2
   1442c:	blt	1beac <main@@Base+0x8bb4>
   14430:	ldr	r2, [sp, #32]
   14434:	mov	r1, r8
   14438:	ldrb	r0, [r1, #9]!
   1443c:	ldr	r2, [r2]
   14440:	cmp	r2, #0
   14444:	beq	15e64 <main@@Base+0x2b6c>
   14448:	cmp	r0, #33	; 0x21
   1444c:	bcc	14458 <main@@Base+0x1160>
   14450:	cmp	r0, #58	; 0x3a
   14454:	bne	1beac <main@@Base+0x8bb4>
   14458:	ldr	r0, [sp, #32]
   1445c:	mov	r2, #0
   14460:	str	r2, [r0]
   14464:	sub	r0, r6, r1
   14468:	cmp	r0, #2
   1446c:	bge	15e7c <main@@Base+0x2b84>
   14470:	b	18674 <main@@Base+0x537c>
   14474:	movw	r3, #0
   14478:	mov	r2, sl
   1447c:	movt	r3, #26163	; 0x6633
   14480:	bfc	r2, #0, #16
   14484:	subs	r3, r3, #65536	; 0x10000
   14488:	eor	r2, r2, r3
   1448c:	sbc	r3, r7, #0
   14490:	eor	r0, r0, r3
   14494:	orrs	r0, r2, r0
   14498:	bne	1494c <main@@Base+0x1654>
   1449c:	ldr	sl, [sp, #36]	; 0x24
   144a0:	cmp	r9, #7
   144a4:	mov	r7, r8
   144a8:	blt	180f4 <main@@Base+0x4dfc>
   144ac:	ldr	r2, [sp, #32]
   144b0:	mov	r1, r8
   144b4:	ldrb	r0, [r1, #6]!
   144b8:	ldr	r2, [r2]
   144bc:	cmp	r2, #0
   144c0:	beq	14f18 <main@@Base+0x1c20>
   144c4:	cmp	r0, #33	; 0x21
   144c8:	bcc	144d8 <main@@Base+0x11e0>
   144cc:	cmp	r0, #58	; 0x3a
   144d0:	mov	r7, r8
   144d4:	bne	180f4 <main@@Base+0x4dfc>
   144d8:	ldr	r0, [sp, #32]
   144dc:	mov	r2, #0
   144e0:	str	r2, [r0]
   144e4:	sub	r0, r6, r1
   144e8:	cmp	r0, #2
   144ec:	bge	14f34 <main@@Base+0x1c3c>
   144f0:	b	15a08 <main@@Base+0x2710>
   144f4:	eor	r1, sl, r7
   144f8:	eor	r0, r0, r3
   144fc:	orrs	r0, r1, r0
   14500:	bne	16858 <main@@Base+0x3560>
   14504:	add	r9, r8, #8
   14508:	mov	r0, #8
   1450c:	mov	r7, r6
   14510:	sub	lr, r6, r9
   14514:	cmp	lr, #8
   14518:	movcc	r0, lr
   1451c:	sub	r6, r0, #1
   14520:	cmp	r6, #7
   14524:	bhi	14c94 <main@@Base+0x199c>
   14528:	add	r7, pc, #32
   1452c:	mov	r1, #0
   14530:	mov	ip, #0
   14534:	mov	sl, #0
   14538:	mov	r4, #0
   1453c:	mov	r3, #0
   14540:	mov	r5, #0
   14544:	mov	r2, #0
   14548:	mov	r0, #0
   1454c:	ldr	pc, [r7, r6, lsl #2]
   14550:			; <UNDEFINED> instruction: 0x000145b4
   14554:	andeq	r4, r1, ip, lsr #11
   14558:	andeq	r4, r1, r4, lsr #11
   1455c:	muleq	r1, ip, r5
   14560:	muleq	r1, r0, r5
   14564:	andeq	r4, r1, r4, lsl #11
   14568:	andeq	r4, r1, r4, ror r5
   1456c:	andeq	r4, r1, r0, ror r5
   14570:	ldrb	ip, [r8, #15]
   14574:	ldrb	r0, [r8, #14]
   14578:	mov	sl, r1
   1457c:	orr	r0, ip, r0, lsl #8
   14580:	mov	r1, r0
   14584:	ldrb	r0, [r8, #13]
   14588:	mov	r4, sl
   1458c:	orr	r1, r1, r0, lsl #16
   14590:	ldrb	r0, [r8, #12]
   14594:	mov	r3, r4
   14598:	orr	r1, r1, r0, lsl #24
   1459c:	ldrb	r0, [r8, #11]
   145a0:	orr	r5, r0, r3
   145a4:	ldrb	r0, [r8, #10]
   145a8:	orr	r2, r5, r0, lsl #8
   145ac:	ldrb	r0, [r8, #9]
   145b0:	orr	r0, r2, r0, lsl #16
   145b4:	ldrb	r3, [r9]
   145b8:	movw	r2, #27749	; 0x6c65
   145bc:	movt	r2, #30050	; 0x7562
   145c0:	eor	r2, r1, r2
   145c4:	orr	r0, r0, r3, lsl #24
   145c8:	movw	r3, #25711	; 0x646f
   145cc:	movt	r3, #26207	; 0x665f
   145d0:	eor	r3, r0, r3
   145d4:	orrs	r2, r2, r3
   145d8:	bne	14b64 <main@@Base+0x186c>
   145dc:	ldr	r6, [sp, #44]	; 0x2c
   145e0:	add	r7, r8, #16
   145e4:	ldr	sl, [sp, #36]	; 0x24
   145e8:	mov	r1, #8
   145ec:	sub	r0, r6, r7
   145f0:	cmp	r0, #8
   145f4:	movcc	r1, r0
   145f8:	sub	r1, r1, #1
   145fc:	cmp	r1, #7
   14600:	bhi	1beac <main@@Base+0x8bb4>
   14604:	ldrb	r1, [r7]
   14608:	cmp	r1, #115	; 0x73
   1460c:	bne	1beac <main@@Base+0x8bb4>
   14610:	cmp	r0, #2
   14614:	blt	1beac <main@@Base+0x8bb4>
   14618:	ldr	r2, [sp, #32]
   1461c:	mov	r1, r8
   14620:	ldrb	r0, [r1, #17]!
   14624:	ldr	r2, [r2]
   14628:	cmp	r2, #0
   1462c:	beq	16f84 <main@@Base+0x3c8c>
   14630:	cmp	r0, #33	; 0x21
   14634:	bcc	14640 <main@@Base+0x1348>
   14638:	cmp	r0, #58	; 0x3a
   1463c:	bne	1beac <main@@Base+0x8bb4>
   14640:	ldr	r0, [sp, #32]
   14644:	mov	r2, #0
   14648:	str	r2, [r0]
   1464c:	sub	r0, r6, r1
   14650:	cmp	r0, #2
   14654:	bge	16f9c <main@@Base+0x3ca4>
   14658:	b	19488 <main@@Base+0x6190>
   1465c:	movw	r0, #30256	; 0x7630
   14660:	ldr	r6, [sp, #44]	; 0x2c
   14664:	movt	r0, #26222	; 0x666e
   14668:	subs	r0, r0, r1
   1466c:	movw	r0, #12895	; 0x325f
   14670:	movt	r0, #30003	; 0x7533
   14674:	sbcs	r0, r0, r2
   14678:	eor	r0, r1, r3
   1467c:	bcc	149b4 <main@@Base+0x16bc>
   14680:	movw	r1, #13407	; 0x345f
   14684:	ldr	sl, [sp, #36]	; 0x24
   14688:	movt	r1, #29494	; 0x7336
   1468c:	eor	r1, r2, r1
   14690:	orrs	r0, r0, r1
   14694:	bne	1a870 <main@@Base+0x7578>
   14698:	cmp	ip, #9
   1469c:	blt	166ac <main@@Base+0x33b4>
   146a0:	ldr	r2, [sp, #32]
   146a4:	mov	r1, r8
   146a8:	ldrb	r0, [r1, #16]!
   146ac:	ldr	r2, [r2]
   146b0:	cmp	r2, #0
   146b4:	beq	15414 <main@@Base+0x211c>
   146b8:	cmp	r0, #33	; 0x21
   146bc:	bcc	146c8 <main@@Base+0x13d0>
   146c0:	cmp	r0, #58	; 0x3a
   146c4:	bne	166ac <main@@Base+0x33b4>
   146c8:	ldr	r0, [sp, #32]
   146cc:	mov	r2, #0
   146d0:	str	r2, [r0]
   146d4:	sub	r0, r6, r1
   146d8:	cmp	r0, #2
   146dc:	bge	1542c <main@@Base+0x2134>
   146e0:	b	16660 <main@@Base+0x3368>
   146e4:	mov	r0, sl
   146e8:	b	16864 <main@@Base+0x356c>
   146ec:	ldr	sl, [sp, #36]	; 0x24
   146f0:	cmp	r9, #9
   146f4:	mov	r7, r8
   146f8:	blt	16c38 <main@@Base+0x3940>
   146fc:	ldr	r2, [sp, #32]
   14700:	mov	r1, r8
   14704:	ldrb	r0, [r1, #8]!
   14708:	ldr	r2, [r2]
   1470c:	cmp	r2, #0
   14710:	beq	14d38 <main@@Base+0x1a40>
   14714:	cmp	r0, #33	; 0x21
   14718:	bcc	14728 <main@@Base+0x1430>
   1471c:	cmp	r0, #58	; 0x3a
   14720:	mov	r7, r8
   14724:	bne	16c38 <main@@Base+0x3940>
   14728:	ldr	r0, [sp, #32]
   1472c:	mov	r2, #0
   14730:	str	r2, [r0]
   14734:	sub	r0, r6, r1
   14738:	cmp	r0, #2
   1473c:	bge	14d54 <main@@Base+0x1a5c>
   14740:	b	1545c <main@@Base+0x2164>
   14744:	ldr	sl, [sp, #36]	; 0x24
   14748:	b	1a870 <main@@Base+0x7578>
   1474c:	add	r9, r8, #16
   14750:	ldr	sl, [sp, #36]	; 0x24
   14754:	mov	r1, #8
   14758:	sub	lr, r6, r9
   1475c:	cmp	lr, #8
   14760:	movcc	r1, lr
   14764:	sub	r7, r1, #1
   14768:	cmp	r7, #7
   1476c:	bhi	1a870 <main@@Base+0x7578>
   14770:	add	r0, pc, #28
   14774:	mov	r1, #0
   14778:	mov	ip, #0
   1477c:	mov	r5, #0
   14780:	mov	r3, #0
   14784:	mov	r6, #0
   14788:	mov	r4, #0
   1478c:	mov	r2, #0
   14790:	ldr	pc, [r0, r7, lsl #2]
   14794:	strdeq	r4, [r1], -r0
   14798:	andeq	r4, r1, r8, ror #15
   1479c:	andeq	r4, r1, r0, ror #15
   147a0:	ldrdeq	r4, [r1], -r8
   147a4:	andeq	r4, r1, ip, asr #15
   147a8:			; <UNDEFINED> instruction: 0x000147bc
   147ac:			; <UNDEFINED> instruction: 0x000147b4
   147b0:			; <UNDEFINED> instruction: 0x000147b4
   147b4:	ldrb	r0, [r8, #22]
   147b8:	lsl	ip, r0, #8
   147bc:	ldrb	r0, [r8, #21]
   147c0:	mov	r5, r1
   147c4:	orr	r0, ip, r0, lsl #16
   147c8:	mov	r1, r0
   147cc:	ldrb	r0, [r8, #20]
   147d0:	mov	r3, r5
   147d4:	orr	r1, r1, r0, lsl #24
   147d8:	ldrb	r0, [r8, #19]
   147dc:	orr	r6, r0, r3
   147e0:	ldrb	r0, [r8, #18]
   147e4:	orr	r4, r6, r0, lsl #8
   147e8:	ldrb	r0, [r8, #17]
   147ec:	orr	r2, r4, r0, lsl #16
   147f0:	bic	r0, r1, #255	; 0xff
   147f4:	movw	r1, #29696	; 0x7400
   147f8:	ldr	r6, [sp, #44]	; 0x2c
   147fc:	movt	r1, #30051	; 0x7563
   14800:	eor	r0, r0, r1
   14804:	ldrb	r1, [r9]
   14808:	orr	r1, r2, r1, lsl #24
   1480c:	movw	r2, #29810	; 0x7472
   14810:	movt	r2, #25715	; 0x6473
   14814:	eor	r1, r1, r2
   14818:	orrs	r0, r0, r1
   1481c:	bne	1a870 <main@@Base+0x7578>
   14820:	cmp	lr, #8
   14824:	blt	1a870 <main@@Base+0x7578>
   14828:	ldr	r2, [sp, #32]
   1482c:	mov	r1, r8
   14830:	ldrb	r0, [r1, #23]!
   14834:	ldr	r2, [r2]
   14838:	cmp	r2, #0
   1483c:	beq	152f4 <main@@Base+0x1ffc>
   14840:	cmp	r0, #33	; 0x21
   14844:	bcc	14850 <main@@Base+0x1558>
   14848:	cmp	r0, #58	; 0x3a
   1484c:	bne	1a870 <main@@Base+0x7578>
   14850:	ldr	r0, [sp, #32]
   14854:	mov	r2, #0
   14858:	str	r2, [r0]
   1485c:	sub	r0, r6, r1
   14860:	cmp	r0, #2
   14864:	bge	1530c <main@@Base+0x2014>
   14868:	b	164ec <main@@Base+0x31f4>
   1486c:	add	r7, r8, #16
   14870:	mov	r1, #8
   14874:	sub	r0, r6, r7
   14878:	cmp	r0, #8
   1487c:	movcc	r1, r0
   14880:	sub	r1, r1, #1
   14884:	cmp	r1, #7
   14888:	bhi	1beac <main@@Base+0x8bb4>
   1488c:	ldrb	r1, [r7]
   14890:	cmp	r1, #115	; 0x73
   14894:	bne	1beac <main@@Base+0x8bb4>
   14898:	cmp	r0, #2
   1489c:	blt	1beac <main@@Base+0x8bb4>
   148a0:	ldr	r2, [sp, #32]
   148a4:	mov	r1, r8
   148a8:	ldrb	r0, [r1, #17]!
   148ac:	ldr	r2, [r2]
   148b0:	cmp	r2, #0
   148b4:	beq	15a70 <main@@Base+0x2778>
   148b8:	cmp	r0, #33	; 0x21
   148bc:	bcc	148c8 <main@@Base+0x15d0>
   148c0:	cmp	r0, #58	; 0x3a
   148c4:	bne	1beac <main@@Base+0x8bb4>
   148c8:	ldr	r0, [sp, #32]
   148cc:	mov	r2, #0
   148d0:	str	r2, [r0]
   148d4:	sub	r0, r6, r1
   148d8:	cmp	r0, #2
   148dc:	bge	15a88 <main@@Base+0x2790>
   148e0:	b	18198 <main@@Base+0x4ea0>
   148e4:	movw	r1, #28257	; 0x6e61
   148e8:	ldr	sl, [sp, #36]	; 0x24
   148ec:	movt	r1, #28001	; 0x6d61
   148f0:	teq	r0, r1
   148f4:	bne	1685c <main@@Base+0x3564>
   148f8:	cmp	r9, #5
   148fc:	mov	r7, r8
   14900:	blt	18ee0 <main@@Base+0x5be8>
   14904:	ldr	r2, [sp, #32]
   14908:	mov	r1, r8
   1490c:	ldrb	r0, [r1, #4]!
   14910:	ldr	r2, [r2]
   14914:	cmp	r2, #0
   14918:	beq	15328 <main@@Base+0x2030>
   1491c:	cmp	r0, #33	; 0x21
   14920:	bcc	14930 <main@@Base+0x1638>
   14924:	cmp	r0, #58	; 0x3a
   14928:	mov	r7, r8
   1492c:	bne	18ee0 <main@@Base+0x5be8>
   14930:	ldr	r0, [sp, #32]
   14934:	mov	r2, #0
   14938:	str	r2, [r0]
   1493c:	sub	r0, r6, r1
   14940:	cmp	r0, #2
   14944:	bge	15344 <main@@Base+0x204c>
   14948:	b	16568 <main@@Base+0x3270>
   1494c:	and	r0, sl, #-16777216	; 0xff000000
   14950:	eor	r0, r0, #1711276032	; 0x66000000
   14954:	orrs	r0, r0, r1
   14958:	bne	16858 <main@@Base+0x3560>
   1495c:	ldr	sl, [sp, #36]	; 0x24
   14960:	cmp	r9, #6
   14964:	mov	r7, r8
   14968:	blt	190b0 <main@@Base+0x5db8>
   1496c:	ldr	r2, [sp, #32]
   14970:	mov	r1, r8
   14974:	ldrb	r0, [r1, #5]!
   14978:	ldr	r2, [r2]
   1497c:	cmp	r2, #0
   14980:	beq	15360 <main@@Base+0x2068>
   14984:	cmp	r0, #33	; 0x21
   14988:	bcc	14998 <main@@Base+0x16a0>
   1498c:	cmp	r0, #58	; 0x3a
   14990:	mov	r7, r8
   14994:	bne	190b0 <main@@Base+0x5db8>
   14998:	ldr	r0, [sp, #32]
   1499c:	mov	r2, #0
   149a0:	str	r2, [r0]
   149a4:	sub	r0, r6, r1
   149a8:	cmp	r0, #2
   149ac:	bge	1537c <main@@Base+0x2084>
   149b0:	b	165e4 <main@@Base+0x32ec>
   149b4:	movw	r1, #13407	; 0x345f
   149b8:	ldr	sl, [sp, #36]	; 0x24
   149bc:	movt	r1, #30006	; 0x7536
   149c0:	eor	r1, r2, r1
   149c4:	orrs	r1, r0, r1
   149c8:	beq	14cd8 <main@@Base+0x19e0>
   149cc:	movw	r1, #12895	; 0x325f
   149d0:	movt	r1, #30003	; 0x7533
   149d4:	eor	r1, r2, r1
   149d8:	orrs	r0, r0, r1
   149dc:	bne	1a870 <main@@Base+0x7578>
   149e0:	cmp	ip, #9
   149e4:	blt	18270 <main@@Base+0x4f78>
   149e8:	ldr	r2, [sp, #32]
   149ec:	mov	r1, r8
   149f0:	ldrb	r0, [r1, #16]!
   149f4:	ldr	r2, [r2]
   149f8:	cmp	r2, #0
   149fc:	beq	15aa4 <main@@Base+0x27ac>
   14a00:	cmp	r0, #33	; 0x21
   14a04:	bcc	14a10 <main@@Base+0x1718>
   14a08:	cmp	r0, #58	; 0x3a
   14a0c:	bne	18270 <main@@Base+0x4f78>
   14a10:	ldr	r0, [sp, #32]
   14a14:	mov	r2, #0
   14a18:	str	r2, [r0]
   14a1c:	sub	r0, r6, r1
   14a20:	cmp	r0, #2
   14a24:	bge	15abc <main@@Base+0x27c4>
   14a28:	b	1821c <main@@Base+0x4f24>
   14a2c:	cmp	r0, #34	; 0x22
   14a30:	mov	r7, r8
   14a34:	bne	154e4 <main@@Base+0x21ec>
   14a38:	add	r1, r8, #7
   14a3c:	sub	r0, r6, r1
   14a40:	cmp	r0, #2
   14a44:	blt	14d84 <main@@Base+0x1a8c>
   14a48:	ldrb	r0, [r1]
   14a4c:	cmp	r0, #32
   14a50:	bls	14d70 <main@@Base+0x1a78>
   14a54:	mov	r7, r1
   14a58:	cmp	r7, r6
   14a5c:	bne	14d9c <main@@Base+0x1aa4>
   14a60:	b	14dd4 <main@@Base+0x1adc>
   14a64:	cmp	r0, #34	; 0x22
   14a68:	mov	r7, r8
   14a6c:	bne	155bc <main@@Base+0x22c4>
   14a70:	add	r1, r8, #6
   14a74:	sub	r0, r6, r1
   14a78:	cmp	r0, #2
   14a7c:	blt	14e00 <main@@Base+0x1b08>
   14a80:	ldrb	r0, [r1]
   14a84:	cmp	r0, #32
   14a88:	bls	14dec <main@@Base+0x1af4>
   14a8c:	mov	r7, r1
   14a90:	cmp	r7, r6
   14a94:	bne	14e18 <main@@Base+0x1b20>
   14a98:	b	14e50 <main@@Base+0x1b58>
   14a9c:	and	r1, r2, #-16777216	; 0xff000000
   14aa0:	teq	r1, #1728053248	; 0x67000000
   14aa4:	bne	1beac <main@@Base+0x8bb4>
   14aa8:	cmp	r0, #2
   14aac:	blt	1beac <main@@Base+0x8bb4>
   14ab0:	ldr	r2, [sp, #32]
   14ab4:	mov	r1, r8
   14ab8:	ldrb	r0, [r1, #17]!
   14abc:	ldr	r2, [r2]
   14ac0:	cmp	r2, #0
   14ac4:	beq	15dfc <main@@Base+0x2b04>
   14ac8:	cmp	r0, #33	; 0x21
   14acc:	bcc	14ad8 <main@@Base+0x17e0>
   14ad0:	cmp	r0, #58	; 0x3a
   14ad4:	bne	1beac <main@@Base+0x8bb4>
   14ad8:	ldr	r0, [sp, #32]
   14adc:	mov	r2, #0
   14ae0:	str	r2, [r0]
   14ae4:	sub	r0, r6, r1
   14ae8:	cmp	r0, #2
   14aec:	bge	15e14 <main@@Base+0x2b1c>
   14af0:	b	1856c <main@@Base+0x5274>
   14af4:	cmp	r0, #34	; 0x22
   14af8:	mov	r1, r8
   14afc:	bne	15c20 <main@@Base+0x2928>
   14b00:	add	r2, r8, #6
   14b04:	sub	r0, r6, r2
   14b08:	cmp	r0, #2
   14b0c:	blt	14f98 <main@@Base+0x1ca0>
   14b10:	ldrb	r0, [r2]
   14b14:	cmp	r0, #32
   14b18:	bls	14f84 <main@@Base+0x1c8c>
   14b1c:	mov	r1, r2
   14b20:	cmp	r1, r6
   14b24:	bne	14fb4 <main@@Base+0x1cbc>
   14b28:	b	14fec <main@@Base+0x1cf4>
   14b2c:	cmp	r0, #34	; 0x22
   14b30:	mov	r7, r8
   14b34:	bne	15c80 <main@@Base+0x2988>
   14b38:	add	r1, r8, #6
   14b3c:	sub	r0, r6, r1
   14b40:	cmp	r0, #2
   14b44:	blt	15014 <main@@Base+0x1d1c>
   14b48:	ldrb	r0, [r1]
   14b4c:	cmp	r0, #32
   14b50:	bls	15000 <main@@Base+0x1d08>
   14b54:	mov	r7, r1
   14b58:	cmp	r7, r6
   14b5c:	bne	1502c <main@@Base+0x1d34>
   14b60:	b	15064 <main@@Base+0x1d6c>
   14b64:	movw	r2, #24428	; 0x5f6c
   14b68:	lsr	r1, r1, #8
   14b6c:	ldr	r7, [sp, #44]	; 0x2c
   14b70:	movt	r2, #102	; 0x66
   14b74:	eor	r2, r2, r0, lsr #8
   14b78:	orr	r0, r1, r0, lsl #24
   14b7c:	movw	r1, #26483	; 0x6773
   14b80:	movt	r1, #28526	; 0x6f6e
   14b84:	eor	r0, r0, r1
   14b88:	orrs	r0, r0, r2
   14b8c:	bne	14c94 <main@@Base+0x199c>
   14b90:	ldr	sl, [sp, #36]	; 0x24
   14b94:	cmp	lr, #8
   14b98:	mov	r6, r7
   14b9c:	blt	1a870 <main@@Base+0x7578>
   14ba0:	ldr	r2, [sp, #32]
   14ba4:	mov	r1, r8
   14ba8:	ldrb	r0, [r1, #15]!
   14bac:	ldr	r2, [r2]
   14bb0:	cmp	r2, #0
   14bb4:	beq	15e98 <main@@Base+0x2ba0>
   14bb8:	cmp	r0, #33	; 0x21
   14bbc:	bcc	14bc8 <main@@Base+0x18d0>
   14bc0:	cmp	r0, #58	; 0x3a
   14bc4:	bne	1a870 <main@@Base+0x7578>
   14bc8:	ldr	r0, [sp, #32]
   14bcc:	mov	r2, #0
   14bd0:	str	r2, [r0]
   14bd4:	sub	r0, r6, r1
   14bd8:	cmp	r0, #2
   14bdc:	bge	15eb0 <main@@Base+0x2bb8>
   14be0:	b	189d4 <main@@Base+0x56dc>
   14be4:	cmp	r0, #34	; 0x22
   14be8:	mov	r1, r8
   14bec:	bne	15ef0 <main@@Base+0x2bf8>
   14bf0:	add	r2, r8, #5
   14bf4:	sub	r0, r6, r2
   14bf8:	cmp	r0, #2
   14bfc:	blt	15090 <main@@Base+0x1d98>
   14c00:	ldrb	r0, [r2]
   14c04:	cmp	r0, #32
   14c08:	bls	1507c <main@@Base+0x1d84>
   14c0c:	mov	r1, r2
   14c10:	cmp	r1, r6
   14c14:	bne	150ac <main@@Base+0x1db4>
   14c18:	b	150e4 <main@@Base+0x1dec>
   14c1c:	cmp	r0, #34	; 0x22
   14c20:	mov	r4, r8
   14c24:	bne	15f58 <main@@Base+0x2c60>
   14c28:	add	r1, r8, #5
   14c2c:	sub	r0, r6, r1
   14c30:	cmp	r0, #2
   14c34:	blt	1510c <main@@Base+0x1e14>
   14c38:	ldrb	r0, [r1]
   14c3c:	cmp	r0, #32
   14c40:	bls	150f8 <main@@Base+0x1e00>
   14c44:	mov	r4, r1
   14c48:	cmp	r4, r6
   14c4c:	bne	15124 <main@@Base+0x1e2c>
   14c50:	b	1515c <main@@Base+0x1e64>
   14c54:	cmp	r0, #34	; 0x22
   14c58:	mov	r1, r8
   14c5c:	bne	16314 <main@@Base+0x301c>
   14c60:	add	r2, r8, #5
   14c64:	sub	r0, r5, r2
   14c68:	mov	r7, r5
   14c6c:	cmp	r0, #2
   14c70:	blt	1518c <main@@Base+0x1e94>
   14c74:	ldrb	r0, [r2]
   14c78:	cmp	r0, #32
   14c7c:	bls	15174 <main@@Base+0x1e7c>
   14c80:	mov	r1, r2
   14c84:	mov	r7, r5
   14c88:	cmp	r1, r7
   14c8c:	bne	151a8 <main@@Base+0x1eb0>
   14c90:	b	15240 <main@@Base+0x1f48>
   14c94:	ldr	sl, [sp, #36]	; 0x24
   14c98:	mov	r1, r9
   14c9c:	mov	r2, r7
   14ca0:	mov	r0, sl
   14ca4:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   14ca8:	ldr	r5, [sp, #40]	; 0x28
   14cac:	mov	r4, r0
   14cb0:	mov	r6, r7
   14cb4:	sub	r0, r6, r4
   14cb8:	cmp	r0, #2
   14cbc:	bge	16880 <main@@Base+0x3588>
   14cc0:	b	19070 <main@@Base+0x5d78>
   14cc4:	cmp	r2, #1
   14cc8:	mov	r1, #0
   14ccc:	mov	r2, #0
   14cd0:	beq	13af8 <main@@Base+0x800>
   14cd4:	b	1beac <main@@Base+0x8bb4>
   14cd8:	cmp	ip, #9
   14cdc:	blt	18368 <main@@Base+0x5070>
   14ce0:	ldr	r2, [sp, #32]
   14ce4:	mov	r1, r8
   14ce8:	ldrb	r0, [r1, #16]!
   14cec:	ldr	r2, [r2]
   14cf0:	cmp	r2, #0
   14cf4:	beq	15ad8 <main@@Base+0x27e0>
   14cf8:	cmp	r0, #33	; 0x21
   14cfc:	bcc	14d08 <main@@Base+0x1a10>
   14d00:	cmp	r0, #58	; 0x3a
   14d04:	bne	18368 <main@@Base+0x5070>
   14d08:	ldr	r0, [sp, #32]
   14d0c:	mov	r2, #0
   14d10:	str	r2, [r0]
   14d14:	sub	r0, r6, r1
   14d18:	cmp	r0, #2
   14d1c:	bge	15af0 <main@@Base+0x27f8>
   14d20:	b	18314 <main@@Base+0x501c>
   14d24:	cmp	r2, #1
   14d28:	mov	r1, #0
   14d2c:	mov	r2, #0
   14d30:	beq	142ac <main@@Base+0xfb4>
   14d34:	b	1beac <main@@Base+0x8bb4>
   14d38:	cmp	r0, #34	; 0x22
   14d3c:	mov	r7, r8
   14d40:	bne	16c38 <main@@Base+0x3940>
   14d44:	add	r1, r8, #9
   14d48:	sub	r0, r6, r1
   14d4c:	cmp	r0, #2
   14d50:	blt	1545c <main@@Base+0x2164>
   14d54:	ldrb	r0, [r1]
   14d58:	cmp	r0, #32
   14d5c:	bls	15448 <main@@Base+0x2150>
   14d60:	mov	r7, r1
   14d64:	cmp	r7, r6
   14d68:	bne	15474 <main@@Base+0x217c>
   14d6c:	b	154ac <main@@Base+0x21b4>
   14d70:	bne	14d84 <main@@Base+0x1a8c>
   14d74:	mov	r7, r1
   14d78:	ldrb	r0, [r7, #1]!
   14d7c:	cmp	r0, #32
   14d80:	bhi	14d94 <main@@Base+0x1a9c>
   14d84:	mov	r0, sl
   14d88:	mov	r2, r6
   14d8c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   14d90:	mov	r7, r0
   14d94:	cmp	r7, r6
   14d98:	beq	14dd4 <main@@Base+0x1adc>
   14d9c:	ldrb	r0, [r7]
   14da0:	cmp	r0, #58	; 0x3a
   14da4:	bne	14dd4 <main@@Base+0x1adc>
   14da8:	add	r1, r7, #1
   14dac:	sub	r0, r6, r1
   14db0:	cmp	r0, #2
   14db4:	blt	154d4 <main@@Base+0x21dc>
   14db8:	ldrb	r0, [r1]
   14dbc:	cmp	r0, #32
   14dc0:	bls	154c4 <main@@Base+0x21cc>
   14dc4:	mov	r7, r1
   14dc8:	cmp	r8, r7
   14dcc:	bne	154ec <main@@Base+0x21f4>
   14dd0:	b	1685c <main@@Base+0x3564>
   14dd4:	mov	r0, sl
   14dd8:	mov	r1, r7
   14ddc:	mov	r2, r6
   14de0:	mov	r3, #4
   14de4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   14de8:	b	154e0 <main@@Base+0x21e8>
   14dec:	bne	14e00 <main@@Base+0x1b08>
   14df0:	mov	r7, r1
   14df4:	ldrb	r0, [r7, #1]!
   14df8:	cmp	r0, #32
   14dfc:	bhi	14e10 <main@@Base+0x1b18>
   14e00:	ldr	r0, [sp, #36]	; 0x24
   14e04:	mov	r2, r6
   14e08:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   14e0c:	mov	r7, r0
   14e10:	cmp	r7, r6
   14e14:	beq	14e50 <main@@Base+0x1b58>
   14e18:	ldrb	r0, [r7]
   14e1c:	cmp	r0, #58	; 0x3a
   14e20:	bne	14e50 <main@@Base+0x1b58>
   14e24:	add	r1, r7, #1
   14e28:	sub	r0, r6, r1
   14e2c:	cmp	r0, #2
   14e30:	blt	155ac <main@@Base+0x22b4>
   14e34:	ldrb	r0, [r1]
   14e38:	cmp	r0, #32
   14e3c:	bls	1559c <main@@Base+0x22a4>
   14e40:	mov	r7, r1
   14e44:	cmp	r8, r7
   14e48:	bne	155c4 <main@@Base+0x22cc>
   14e4c:	b	167c8 <main@@Base+0x34d0>
   14e50:	ldr	r0, [sp, #36]	; 0x24
   14e54:	mov	r1, r7
   14e58:	mov	r2, r6
   14e5c:	mov	r3, #4
   14e60:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   14e64:	b	155b8 <main@@Base+0x22c0>
   14e68:	cmp	r0, #34	; 0x22
   14e6c:	bne	158cc <main@@Base+0x25d4>
   14e70:	add	r1, r8, #17
   14e74:	ldr	r6, [sp, #36]	; 0x24
   14e78:	sub	r0, r5, r1
   14e7c:	mov	r7, r5
   14e80:	cmp	r0, #2
   14e84:	blt	15880 <main@@Base+0x2588>
   14e88:	ldrb	r0, [r1]
   14e8c:	cmp	r0, #32
   14e90:	bls	15868 <main@@Base+0x2570>
   14e94:	mov	r4, r1
   14e98:	mov	r7, r5
   14e9c:	cmp	r4, r7
   14ea0:	bne	15898 <main@@Base+0x25a0>
   14ea4:	b	158e4 <main@@Base+0x25ec>
   14ea8:	cmp	r0, #34	; 0x22
   14eac:	mov	r7, r8
   14eb0:	bne	16fd8 <main@@Base+0x3ce0>
   14eb4:	add	r1, r8, #3
   14eb8:	sub	r0, r6, r1
   14ebc:	cmp	r0, #2
   14ec0:	blt	15910 <main@@Base+0x2618>
   14ec4:	ldrb	r0, [r1]
   14ec8:	cmp	r0, #32
   14ecc:	bls	158fc <main@@Base+0x2604>
   14ed0:	mov	r7, r1
   14ed4:	cmp	r7, r6
   14ed8:	bne	15928 <main@@Base+0x2630>
   14edc:	b	15960 <main@@Base+0x2668>
   14ee0:	cmp	r0, #34	; 0x22
   14ee4:	mov	r4, r8
   14ee8:	bne	1717c <main@@Base+0x3e84>
   14eec:	add	r1, r8, #4
   14ef0:	sub	r0, r6, r1
   14ef4:	cmp	r0, #2
   14ef8:	blt	1598c <main@@Base+0x2694>
   14efc:	ldrb	r0, [r1]
   14f00:	cmp	r0, #32
   14f04:	bls	15978 <main@@Base+0x2680>
   14f08:	mov	r4, r1
   14f0c:	cmp	r4, r6
   14f10:	bne	159a4 <main@@Base+0x26ac>
   14f14:	b	159dc <main@@Base+0x26e4>
   14f18:	cmp	r0, #34	; 0x22
   14f1c:	mov	r7, r8
   14f20:	bne	180f4 <main@@Base+0x4dfc>
   14f24:	add	r1, r8, #7
   14f28:	sub	r0, r6, r1
   14f2c:	cmp	r0, #2
   14f30:	blt	15a08 <main@@Base+0x2710>
   14f34:	ldrb	r0, [r1]
   14f38:	cmp	r0, #32
   14f3c:	bls	159f4 <main@@Base+0x26fc>
   14f40:	mov	r7, r1
   14f44:	cmp	r7, r6
   14f48:	bne	15a20 <main@@Base+0x2728>
   14f4c:	b	15a58 <main@@Base+0x2760>
   14f50:	cmp	r0, #34	; 0x22
   14f54:	bne	15b6c <main@@Base+0x2874>
   14f58:	add	r1, r8, #17
   14f5c:	sub	r0, r6, r1
   14f60:	cmp	r0, #2
   14f64:	blt	15b20 <main@@Base+0x2828>
   14f68:	ldrb	r0, [r1]
   14f6c:	cmp	r0, #32
   14f70:	bls	15b0c <main@@Base+0x2814>
   14f74:	mov	r7, r1
   14f78:	cmp	r7, r6
   14f7c:	bne	15b38 <main@@Base+0x2840>
   14f80:	b	15be4 <main@@Base+0x28ec>
   14f84:	bne	14f98 <main@@Base+0x1ca0>
   14f88:	mov	r1, r2
   14f8c:	ldrb	r0, [r1, #1]!
   14f90:	cmp	r0, #32
   14f94:	bhi	14fac <main@@Base+0x1cb4>
   14f98:	mov	r1, r2
   14f9c:	mov	r0, sl
   14fa0:	mov	r2, r6
   14fa4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   14fa8:	mov	r1, r0
   14fac:	cmp	r1, r6
   14fb0:	beq	14fec <main@@Base+0x1cf4>
   14fb4:	ldrb	r0, [r1]
   14fb8:	cmp	r0, #58	; 0x3a
   14fbc:	bne	14fec <main@@Base+0x1cf4>
   14fc0:	add	r2, r1, #1
   14fc4:	sub	r0, r6, r2
   14fc8:	cmp	r0, #2
   14fcc:	blt	15c0c <main@@Base+0x2914>
   14fd0:	ldrb	r0, [r2]
   14fd4:	cmp	r0, #32
   14fd8:	bls	15bfc <main@@Base+0x2904>
   14fdc:	mov	r1, r2
   14fe0:	cmp	r8, r1
   14fe4:	bne	15c28 <main@@Base+0x2930>
   14fe8:	b	1685c <main@@Base+0x3564>
   14fec:	mov	r0, sl
   14ff0:	mov	r2, r6
   14ff4:	mov	r3, #4
   14ff8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   14ffc:	b	15c1c <main@@Base+0x2924>
   15000:	bne	15014 <main@@Base+0x1d1c>
   15004:	mov	r7, r1
   15008:	ldrb	r0, [r7, #1]!
   1500c:	cmp	r0, #32
   15010:	bhi	15024 <main@@Base+0x1d2c>
   15014:	mov	r0, sl
   15018:	mov	r2, r6
   1501c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15020:	mov	r7, r0
   15024:	cmp	r7, r6
   15028:	beq	15064 <main@@Base+0x1d6c>
   1502c:	ldrb	r0, [r7]
   15030:	cmp	r0, #58	; 0x3a
   15034:	bne	15064 <main@@Base+0x1d6c>
   15038:	add	r1, r7, #1
   1503c:	sub	r0, r6, r1
   15040:	cmp	r0, #2
   15044:	blt	15c70 <main@@Base+0x2978>
   15048:	ldrb	r0, [r1]
   1504c:	cmp	r0, #32
   15050:	bls	15c60 <main@@Base+0x2968>
   15054:	mov	r7, r1
   15058:	cmp	r8, r7
   1505c:	bne	15c88 <main@@Base+0x2990>
   15060:	b	1685c <main@@Base+0x3564>
   15064:	mov	r0, sl
   15068:	mov	r1, r7
   1506c:	mov	r2, r6
   15070:	mov	r3, #4
   15074:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15078:	b	15c7c <main@@Base+0x2984>
   1507c:	bne	15090 <main@@Base+0x1d98>
   15080:	mov	r1, r2
   15084:	ldrb	r0, [r1, #1]!
   15088:	cmp	r0, #32
   1508c:	bhi	150a4 <main@@Base+0x1dac>
   15090:	mov	r1, r2
   15094:	mov	r0, sl
   15098:	mov	r2, r6
   1509c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   150a0:	mov	r1, r0
   150a4:	cmp	r1, r6
   150a8:	beq	150e4 <main@@Base+0x1dec>
   150ac:	ldrb	r0, [r1]
   150b0:	cmp	r0, #58	; 0x3a
   150b4:	bne	150e4 <main@@Base+0x1dec>
   150b8:	add	r2, r1, #1
   150bc:	sub	r0, r6, r2
   150c0:	cmp	r0, #2
   150c4:	blt	15edc <main@@Base+0x2be4>
   150c8:	ldrb	r0, [r2]
   150cc:	cmp	r0, #32
   150d0:	bls	15ecc <main@@Base+0x2bd4>
   150d4:	mov	r1, r2
   150d8:	cmp	r8, r1
   150dc:	bne	15ef8 <main@@Base+0x2c00>
   150e0:	b	1685c <main@@Base+0x3564>
   150e4:	mov	r0, sl
   150e8:	mov	r2, r6
   150ec:	mov	r3, #4
   150f0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   150f4:	b	15eec <main@@Base+0x2bf4>
   150f8:	bne	1510c <main@@Base+0x1e14>
   150fc:	mov	r4, r1
   15100:	ldrb	r0, [r4, #1]!
   15104:	cmp	r0, #32
   15108:	bhi	1511c <main@@Base+0x1e24>
   1510c:	mov	r0, sl
   15110:	mov	r2, r6
   15114:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15118:	mov	r4, r0
   1511c:	cmp	r4, r6
   15120:	beq	1515c <main@@Base+0x1e64>
   15124:	ldrb	r0, [r4]
   15128:	cmp	r0, #58	; 0x3a
   1512c:	bne	1515c <main@@Base+0x1e64>
   15130:	add	r1, r4, #1
   15134:	sub	r0, r6, r1
   15138:	cmp	r0, #2
   1513c:	blt	15f48 <main@@Base+0x2c50>
   15140:	ldrb	r0, [r1]
   15144:	cmp	r0, #32
   15148:	bls	15f38 <main@@Base+0x2c40>
   1514c:	mov	r4, r1
   15150:	cmp	r8, r4
   15154:	bne	15f60 <main@@Base+0x2c68>
   15158:	b	1685c <main@@Base+0x3564>
   1515c:	mov	r0, sl
   15160:	mov	r1, r4
   15164:	mov	r2, r6
   15168:	mov	r3, #4
   1516c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15170:	b	15f54 <main@@Base+0x2c5c>
   15174:	mov	r7, r5
   15178:	bne	1518c <main@@Base+0x1e94>
   1517c:	mov	r1, r2
   15180:	ldrb	r0, [r1, #1]!
   15184:	cmp	r0, #32
   15188:	bhi	151a0 <main@@Base+0x1ea8>
   1518c:	ldr	r0, [sp, #36]	; 0x24
   15190:	mov	r1, r2
   15194:	mov	r2, r7
   15198:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1519c:	mov	r1, r0
   151a0:	cmp	r1, r7
   151a4:	beq	15240 <main@@Base+0x1f48>
   151a8:	ldrb	r0, [r1]
   151ac:	cmp	r0, #58	; 0x3a
   151b0:	bne	15240 <main@@Base+0x1f48>
   151b4:	add	r2, r1, #1
   151b8:	sub	r0, r5, r2
   151bc:	cmp	r0, #2
   151c0:	blt	16300 <main@@Base+0x3008>
   151c4:	ldrb	r0, [r2]
   151c8:	cmp	r0, #32
   151cc:	bls	162f0 <main@@Base+0x2ff8>
   151d0:	mov	r1, r2
   151d4:	cmp	r8, r1
   151d8:	bne	1631c <main@@Base+0x3024>
   151dc:	eor	r0, r6, #889192448	; 0x35000000
   151e0:	mov	r6, r5
   151e4:	orrs	r0, r0, r4
   151e8:	bne	167c8 <main@@Base+0x34d0>
   151ec:	cmp	r9, #6
   151f0:	mov	r7, r8
   151f4:	blt	1675c <main@@Base+0x3464>
   151f8:	ldr	r2, [sp, #32]
   151fc:	mov	r1, r8
   15200:	ldrb	r0, [r1, #5]!
   15204:	ldr	r2, [r2]
   15208:	cmp	r2, #0
   1520c:	beq	15254 <main@@Base+0x1f5c>
   15210:	cmp	r0, #33	; 0x21
   15214:	bcc	15224 <main@@Base+0x1f2c>
   15218:	cmp	r0, #58	; 0x3a
   1521c:	mov	r7, r8
   15220:	bne	1675c <main@@Base+0x3464>
   15224:	ldr	r0, [sp, #32]
   15228:	mov	r2, #0
   1522c:	str	r2, [r0]
   15230:	sub	r0, r6, r1
   15234:	cmp	r0, #2
   15238:	bge	15270 <main@@Base+0x1f78>
   1523c:	b	153ac <main@@Base+0x20b4>
   15240:	ldr	r0, [sp, #36]	; 0x24
   15244:	mov	r2, r5
   15248:	mov	r3, #4
   1524c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15250:	b	16310 <main@@Base+0x3018>
   15254:	cmp	r0, #34	; 0x22
   15258:	mov	r7, r8
   1525c:	bne	1675c <main@@Base+0x3464>
   15260:	add	r1, r8, #6
   15264:	sub	r0, r6, r1
   15268:	cmp	r0, #2
   1526c:	blt	153ac <main@@Base+0x20b4>
   15270:	ldrb	r0, [r1]
   15274:	cmp	r0, #32
   15278:	bls	15398 <main@@Base+0x20a0>
   1527c:	mov	r7, r1
   15280:	cmp	r7, r6
   15284:	bne	153c4 <main@@Base+0x20cc>
   15288:	b	153fc <main@@Base+0x2104>
   1528c:	cmp	r0, #34	; 0x22
   15290:	bne	1beac <main@@Base+0x8bb4>
   15294:	add	r1, r8, #11
   15298:	sub	r0, r6, r1
   1529c:	cmp	r0, #2
   152a0:	blt	163c0 <main@@Base+0x30c8>
   152a4:	ldrb	r0, [r1]
   152a8:	cmp	r0, #32
   152ac:	bls	163ac <main@@Base+0x30b4>
   152b0:	mov	r4, r1
   152b4:	cmp	r4, r6
   152b8:	bne	163d8 <main@@Base+0x30e0>
   152bc:	b	16410 <main@@Base+0x3118>
   152c0:	cmp	r0, #34	; 0x22
   152c4:	bne	1beac <main@@Base+0x8bb4>
   152c8:	add	r1, r8, #19
   152cc:	sub	r0, r6, r1
   152d0:	cmp	r0, #2
   152d4:	blt	16470 <main@@Base+0x3178>
   152d8:	ldrb	r0, [r1]
   152dc:	cmp	r0, #32
   152e0:	bls	1645c <main@@Base+0x3164>
   152e4:	mov	r4, r1
   152e8:	cmp	r4, r6
   152ec:	bne	16488 <main@@Base+0x3190>
   152f0:	b	164c0 <main@@Base+0x31c8>
   152f4:	cmp	r0, #34	; 0x22
   152f8:	bne	1a870 <main@@Base+0x7578>
   152fc:	add	r1, r8, #24
   15300:	sub	r0, r6, r1
   15304:	cmp	r0, #2
   15308:	blt	164ec <main@@Base+0x31f4>
   1530c:	ldrb	r0, [r1]
   15310:	cmp	r0, #32
   15314:	bls	164d8 <main@@Base+0x31e0>
   15318:	mov	r7, r1
   1531c:	cmp	r7, r6
   15320:	bne	16504 <main@@Base+0x320c>
   15324:	b	1653c <main@@Base+0x3244>
   15328:	cmp	r0, #34	; 0x22
   1532c:	mov	r7, r8
   15330:	bne	18ee0 <main@@Base+0x5be8>
   15334:	add	r1, r8, #5
   15338:	sub	r0, r6, r1
   1533c:	cmp	r0, #2
   15340:	blt	16568 <main@@Base+0x3270>
   15344:	ldrb	r0, [r1]
   15348:	cmp	r0, #32
   1534c:	bls	16554 <main@@Base+0x325c>
   15350:	mov	r7, r1
   15354:	cmp	r7, r6
   15358:	bne	16580 <main@@Base+0x3288>
   1535c:	b	165b8 <main@@Base+0x32c0>
   15360:	cmp	r0, #34	; 0x22
   15364:	mov	r7, r8
   15368:	bne	190b0 <main@@Base+0x5db8>
   1536c:	add	r1, r8, #6
   15370:	sub	r0, r6, r1
   15374:	cmp	r0, #2
   15378:	blt	165e4 <main@@Base+0x32ec>
   1537c:	ldrb	r0, [r1]
   15380:	cmp	r0, #32
   15384:	bls	165d0 <main@@Base+0x32d8>
   15388:	mov	r7, r1
   1538c:	cmp	r7, r6
   15390:	bne	165fc <main@@Base+0x3304>
   15394:	b	16634 <main@@Base+0x333c>
   15398:	bne	153ac <main@@Base+0x20b4>
   1539c:	mov	r7, r1
   153a0:	ldrb	r0, [r7, #1]!
   153a4:	cmp	r0, #32
   153a8:	bhi	153bc <main@@Base+0x20c4>
   153ac:	ldr	r0, [sp, #36]	; 0x24
   153b0:	mov	r2, r6
   153b4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   153b8:	mov	r7, r0
   153bc:	cmp	r7, r6
   153c0:	beq	153fc <main@@Base+0x2104>
   153c4:	ldrb	r0, [r7]
   153c8:	cmp	r0, #58	; 0x3a
   153cc:	bne	153fc <main@@Base+0x2104>
   153d0:	add	r1, r7, #1
   153d4:	sub	r0, r6, r1
   153d8:	cmp	r0, #2
   153dc:	blt	1674c <main@@Base+0x3454>
   153e0:	ldrb	r0, [r1]
   153e4:	cmp	r0, #32
   153e8:	bls	1673c <main@@Base+0x3444>
   153ec:	mov	r7, r1
   153f0:	cmp	r8, r7
   153f4:	bne	16764 <main@@Base+0x346c>
   153f8:	b	167c8 <main@@Base+0x34d0>
   153fc:	ldr	r0, [sp, #36]	; 0x24
   15400:	mov	r1, r7
   15404:	mov	r2, r6
   15408:	mov	r3, #4
   1540c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15410:	b	16758 <main@@Base+0x3460>
   15414:	cmp	r0, #34	; 0x22
   15418:	bne	166ac <main@@Base+0x33b4>
   1541c:	add	r1, r8, #17
   15420:	sub	r0, r6, r1
   15424:	cmp	r0, #2
   15428:	blt	16660 <main@@Base+0x3368>
   1542c:	ldrb	r0, [r1]
   15430:	cmp	r0, #32
   15434:	bls	1664c <main@@Base+0x3354>
   15438:	mov	r7, r1
   1543c:	cmp	r7, r6
   15440:	bne	16678 <main@@Base+0x3380>
   15444:	b	16724 <main@@Base+0x342c>
   15448:	bne	1545c <main@@Base+0x2164>
   1544c:	mov	r7, r1
   15450:	ldrb	r0, [r7, #1]!
   15454:	cmp	r0, #32
   15458:	bhi	1546c <main@@Base+0x2174>
   1545c:	mov	r0, sl
   15460:	mov	r2, r6
   15464:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15468:	mov	r7, r0
   1546c:	cmp	r7, r6
   15470:	beq	154ac <main@@Base+0x21b4>
   15474:	ldrb	r0, [r7]
   15478:	cmp	r0, #58	; 0x3a
   1547c:	bne	154ac <main@@Base+0x21b4>
   15480:	add	r1, r7, #1
   15484:	sub	r0, r6, r1
   15488:	cmp	r0, #2
   1548c:	blt	16c28 <main@@Base+0x3930>
   15490:	ldrb	r0, [r1]
   15494:	cmp	r0, #32
   15498:	bls	16c18 <main@@Base+0x3920>
   1549c:	mov	r7, r1
   154a0:	cmp	r8, r7
   154a4:	bne	16c40 <main@@Base+0x3948>
   154a8:	b	1685c <main@@Base+0x3564>
   154ac:	mov	r0, sl
   154b0:	mov	r1, r7
   154b4:	mov	r2, r6
   154b8:	mov	r3, #4
   154bc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   154c0:	b	16c34 <main@@Base+0x393c>
   154c4:	bne	154d4 <main@@Base+0x21dc>
   154c8:	ldrb	r0, [r7, #2]!
   154cc:	cmp	r0, #32
   154d0:	bhi	154e4 <main@@Base+0x21ec>
   154d4:	mov	r0, sl
   154d8:	mov	r2, r6
   154dc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   154e0:	mov	r7, r0
   154e4:	cmp	r8, r7
   154e8:	beq	1685c <main@@Base+0x3564>
   154ec:	mov	r0, #0
   154f0:	mov	r1, r7
   154f4:	mov	r2, r6
   154f8:	sub	r3, fp, #56	; 0x38
   154fc:	str	r0, [fp, #-56]	; 0xffffffc8
   15500:	mov	r0, sl
   15504:	bl	32298 <flatcc_json_parser_float@@Base>
   15508:	ldr	r5, [sp, #40]	; 0x28
   1550c:	mov	r4, r0
   15510:	cmp	r7, r0
   15514:	bne	1554c <main@@Base+0x2254>
   15518:	sub	r0, fp, #56	; 0x38
   1551c:	mov	r1, r7
   15520:	mov	r2, r6
   15524:	str	r0, [sp]
   15528:	movw	r0, #32912	; 0x8090
   1552c:	movt	r0, #4
   15530:	add	r3, r0, #96	; 0x60
   15534:	mov	r0, sl
   15538:	bl	23c48 <main@@Base+0x10950>
   1553c:	mov	r4, r0
   15540:	cmp	r0, r7
   15544:	cmpne	r4, r6
   15548:	beq	133b4 <main@@Base+0xbc>
   1554c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   15550:	vcmp.f32	s0, #0.0
   15554:	vmrs	APSR_nzcv, fpscr
   15558:	bne	15568 <main@@Base+0x2270>
   1555c:	ldrb	r0, [sl, #8]
   15560:	tst	r0, #2
   15564:	beq	16874 <main@@Base+0x357c>
   15568:	ldr	r0, [sl]
   1556c:	mov	r1, #27
   15570:	mov	r2, #4
   15574:	mov	r3, #4
   15578:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1557c:	cmp	r0, #0
   15580:	beq	133b4 <main@@Base+0xbc>
   15584:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15588:	str	r1, [r0]
   1558c:	sub	r0, r6, r4
   15590:	cmp	r0, #2
   15594:	bge	16880 <main@@Base+0x3588>
   15598:	b	19070 <main@@Base+0x5d78>
   1559c:	bne	155ac <main@@Base+0x22b4>
   155a0:	ldrb	r0, [r7, #2]!
   155a4:	cmp	r0, #32
   155a8:	bhi	155bc <main@@Base+0x22c4>
   155ac:	ldr	r0, [sp, #36]	; 0x24
   155b0:	mov	r2, r6
   155b4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   155b8:	mov	r7, r0
   155bc:	cmp	r8, r7
   155c0:	beq	167c8 <main@@Base+0x34d0>
   155c4:	ldr	sl, [sp, #36]	; 0x24
   155c8:	mov	r1, #4
   155cc:	mov	r2, #2
   155d0:	mvn	r3, #-1073741824	; 0xc0000000
   155d4:	ldr	r0, [sl]
   155d8:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   155dc:	cmp	r0, #0
   155e0:	bne	1dc64 <main@@Base+0xa96c>
   155e4:	cmp	r7, r6
   155e8:	beq	15628 <main@@Base+0x2330>
   155ec:	ldrb	r0, [r7]
   155f0:	cmp	r0, #91	; 0x5b
   155f4:	bne	15628 <main@@Base+0x2330>
   155f8:	add	r1, r7, #1
   155fc:	sub	r0, r6, r1
   15600:	cmp	r0, #2
   15604:	blt	15680 <main@@Base+0x2388>
   15608:	ldrb	r0, [r1]
   1560c:	cmp	r0, #32
   15610:	bls	15670 <main@@Base+0x2378>
   15614:	mov	r7, r1
   15618:	cmp	r7, r6
   1561c:	mov	r4, r6
   15620:	bne	1569c <main@@Base+0x23a4>
   15624:	b	156e0 <main@@Base+0x23e8>
   15628:	mov	r0, sl
   1562c:	mov	r1, r7
   15630:	mov	r2, r6
   15634:	mov	r3, #22
   15638:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1563c:	ldr	r5, [sp, #40]	; 0x28
   15640:	mov	r7, r0
   15644:	ldr	r0, [sl]
   15648:	bl	2da48 <flatcc_builder_end_vector@@Base>
   1564c:	cmp	r0, #0
   15650:	str	r0, [sp, #52]	; 0x34
   15654:	beq	1dc64 <main@@Base+0xa96c>
   15658:	ldr	r0, [sl]
   1565c:	mov	r1, #9
   15660:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   15664:	cmp	r0, #0
   15668:	bne	1696c <main@@Base+0x3674>
   1566c:	b	1dc64 <main@@Base+0xa96c>
   15670:	bne	15680 <main@@Base+0x2388>
   15674:	ldrb	r0, [r7, #2]!
   15678:	cmp	r0, #32
   1567c:	bhi	15690 <main@@Base+0x2398>
   15680:	mov	r0, sl
   15684:	mov	r2, r6
   15688:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1568c:	mov	r7, r0
   15690:	cmp	r7, r6
   15694:	mov	r4, r6
   15698:	beq	156e0 <main@@Base+0x23e8>
   1569c:	ldrb	r0, [r7]
   156a0:	cmp	r0, #93	; 0x5d
   156a4:	bne	156dc <main@@Base+0x23e4>
   156a8:	ldr	r5, [sp, #40]	; 0x28
   156ac:	add	r1, r7, #1
   156b0:	sub	r0, r6, r1
   156b4:	cmp	r0, #2
   156b8:	blt	16368 <main@@Base+0x3070>
   156bc:	ldrb	r0, [r1]
   156c0:	cmp	r0, #32
   156c4:	bhi	15818 <main@@Base+0x2520>
   156c8:	bne	16368 <main@@Base+0x3070>
   156cc:	ldrb	r0, [r7, #2]!
   156d0:	cmp	r0, #32
   156d4:	bhi	15644 <main@@Base+0x234c>
   156d8:	b	16368 <main@@Base+0x3070>
   156dc:	mov	r4, r7
   156e0:	ldr	r0, [sl]
   156e4:	mov	r1, #1
   156e8:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   156ec:	mov	r3, r0
   156f0:	cmp	r0, #0
   156f4:	beq	133b4 <main@@Base+0xbc>
   156f8:	mov	r0, sl
   156fc:	mov	r1, r4
   15700:	mov	r2, r6
   15704:	bl	1f95c <main@@Base+0xc664>
   15708:	mov	r1, r0
   1570c:	sub	r0, r6, r0
   15710:	cmp	r0, #2
   15714:	blt	15748 <main@@Base+0x2450>
   15718:	ldrb	r0, [r1]
   1571c:	cmp	r0, #32
   15720:	bls	15734 <main@@Base+0x243c>
   15724:	mov	r4, r1
   15728:	cmp	r4, r6
   1572c:	bne	15760 <main@@Base+0x2468>
   15730:	b	157e4 <main@@Base+0x24ec>
   15734:	bne	15748 <main@@Base+0x2450>
   15738:	mov	r4, r1
   1573c:	ldrb	r0, [r4, #1]!
   15740:	cmp	r0, #32
   15744:	bhi	15758 <main@@Base+0x2460>
   15748:	mov	r0, sl
   1574c:	mov	r2, r6
   15750:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15754:	mov	r4, r0
   15758:	cmp	r4, r6
   1575c:	beq	157e4 <main@@Base+0x24ec>
   15760:	ldrb	r0, [r4]
   15764:	cmp	r0, #44	; 0x2c
   15768:	bne	157f0 <main@@Base+0x24f8>
   1576c:	add	r1, r4, #1
   15770:	sub	r0, r6, r1
   15774:	cmp	r0, #2
   15778:	blt	157a8 <main@@Base+0x24b0>
   1577c:	ldrb	r0, [r1]
   15780:	cmp	r0, #32
   15784:	bls	15798 <main@@Base+0x24a0>
   15788:	mov	r4, r1
   1578c:	cmp	r4, r6
   15790:	bne	157c0 <main@@Base+0x24c8>
   15794:	b	15820 <main@@Base+0x2528>
   15798:	bne	157a8 <main@@Base+0x24b0>
   1579c:	ldrb	r0, [r4, #2]!
   157a0:	cmp	r0, #32
   157a4:	bhi	157b8 <main@@Base+0x24c0>
   157a8:	mov	r0, sl
   157ac:	mov	r2, r6
   157b0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   157b4:	mov	r4, r0
   157b8:	cmp	r4, r6
   157bc:	beq	15820 <main@@Base+0x2528>
   157c0:	ldrb	r0, [r4]
   157c4:	cmp	r0, #93	; 0x5d
   157c8:	bne	156e0 <main@@Base+0x23e8>
   157cc:	ldr	r5, [sp, #40]	; 0x28
   157d0:	add	r1, r4, #1
   157d4:	sub	r0, r6, r1
   157d8:	cmp	r0, #2
   157dc:	blt	16368 <main@@Base+0x3070>
   157e0:	b	1580c <main@@Base+0x2514>
   157e4:	ldr	r5, [sp, #40]	; 0x28
   157e8:	mov	r7, r6
   157ec:	b	15644 <main@@Base+0x234c>
   157f0:	ldr	r5, [sp, #40]	; 0x28
   157f4:	cmp	r0, #93	; 0x5d
   157f8:	bne	15de4 <main@@Base+0x2aec>
   157fc:	add	r1, r4, #1
   15800:	sub	r0, r6, r1
   15804:	cmp	r0, #2
   15808:	blt	16368 <main@@Base+0x3070>
   1580c:	ldrb	r0, [r1]
   15810:	cmp	r0, #32
   15814:	bls	16354 <main@@Base+0x305c>
   15818:	mov	r7, r1
   1581c:	b	15644 <main@@Base+0x234c>
   15820:	mov	r0, sl
   15824:	mov	r1, r6
   15828:	mov	r2, r6
   1582c:	mov	r3, #9
   15830:	b	15638 <main@@Base+0x2340>
   15834:	cmp	r0, #34	; 0x22
   15838:	bne	1a870 <main@@Base+0x7578>
   1583c:	add	r1, r8, #22
   15840:	sub	r0, r6, r1
   15844:	cmp	r0, #2
   15848:	blt	16e30 <main@@Base+0x3b38>
   1584c:	ldrb	r0, [r1]
   15850:	cmp	r0, #32
   15854:	bls	16e1c <main@@Base+0x3b24>
   15858:	mov	r4, r1
   1585c:	cmp	r4, r6
   15860:	bne	16e48 <main@@Base+0x3b50>
   15864:	b	16e80 <main@@Base+0x3b88>
   15868:	mov	r7, r5
   1586c:	bne	15880 <main@@Base+0x2588>
   15870:	mov	r4, r1
   15874:	ldrb	r0, [r4, #1]!
   15878:	cmp	r0, #32
   1587c:	bhi	15890 <main@@Base+0x2598>
   15880:	mov	r0, r6
   15884:	mov	r2, r7
   15888:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1588c:	mov	r4, r0
   15890:	cmp	r4, r7
   15894:	beq	158e4 <main@@Base+0x25ec>
   15898:	ldrb	r0, [r4]
   1589c:	cmp	r0, #58	; 0x3a
   158a0:	bne	158e4 <main@@Base+0x25ec>
   158a4:	add	r1, r4, #1
   158a8:	sub	r0, r5, r1
   158ac:	cmp	r0, #2
   158b0:	blt	16ec0 <main@@Base+0x3bc8>
   158b4:	ldrb	r0, [r1]
   158b8:	cmp	r0, #32
   158bc:	bls	16eb0 <main@@Base+0x3bb8>
   158c0:	mov	r4, r1
   158c4:	cmp	r9, r4
   158c8:	bne	16ed8 <main@@Base+0x3be0>
   158cc:	ldr	sl, [sp, #36]	; 0x24
   158d0:	mov	r1, r9
   158d4:	mov	r0, sl
   158d8:	mov	r6, r5
   158dc:	mov	r2, r5
   158e0:	b	16868 <main@@Base+0x3570>
   158e4:	mov	r0, r6
   158e8:	mov	r1, r4
   158ec:	mov	r2, r5
   158f0:	mov	r3, #4
   158f4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   158f8:	b	16ecc <main@@Base+0x3bd4>
   158fc:	bne	15910 <main@@Base+0x2618>
   15900:	mov	r7, r1
   15904:	ldrb	r0, [r7, #1]!
   15908:	cmp	r0, #32
   1590c:	bhi	15920 <main@@Base+0x2628>
   15910:	mov	r0, sl
   15914:	mov	r2, r6
   15918:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1591c:	mov	r7, r0
   15920:	cmp	r7, r6
   15924:	beq	15960 <main@@Base+0x2668>
   15928:	ldrb	r0, [r7]
   1592c:	cmp	r0, #58	; 0x3a
   15930:	bne	15960 <main@@Base+0x2668>
   15934:	add	r1, r7, #1
   15938:	sub	r0, r6, r1
   1593c:	cmp	r0, #2
   15940:	blt	16fc8 <main@@Base+0x3cd0>
   15944:	ldrb	r0, [r1]
   15948:	cmp	r0, #32
   1594c:	bls	16fb8 <main@@Base+0x3cc0>
   15950:	mov	r7, r1
   15954:	cmp	r8, r7
   15958:	bne	16fe0 <main@@Base+0x3ce8>
   1595c:	b	1685c <main@@Base+0x3564>
   15960:	mov	r0, sl
   15964:	mov	r1, r7
   15968:	mov	r2, r6
   1596c:	mov	r3, #4
   15970:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15974:	b	16fd4 <main@@Base+0x3cdc>
   15978:	bne	1598c <main@@Base+0x2694>
   1597c:	mov	r4, r1
   15980:	ldrb	r0, [r4, #1]!
   15984:	cmp	r0, #32
   15988:	bhi	1599c <main@@Base+0x26a4>
   1598c:	mov	r0, sl
   15990:	mov	r2, r6
   15994:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15998:	mov	r4, r0
   1599c:	cmp	r4, r6
   159a0:	beq	159dc <main@@Base+0x26e4>
   159a4:	ldrb	r0, [r4]
   159a8:	cmp	r0, #58	; 0x3a
   159ac:	bne	159dc <main@@Base+0x26e4>
   159b0:	add	r1, r4, #1
   159b4:	sub	r0, r6, r1
   159b8:	cmp	r0, #2
   159bc:	blt	1716c <main@@Base+0x3e74>
   159c0:	ldrb	r0, [r1]
   159c4:	cmp	r0, #32
   159c8:	bls	1715c <main@@Base+0x3e64>
   159cc:	mov	r4, r1
   159d0:	cmp	r8, r4
   159d4:	bne	17184 <main@@Base+0x3e8c>
   159d8:	b	1685c <main@@Base+0x3564>
   159dc:	mov	r0, sl
   159e0:	mov	r1, r4
   159e4:	mov	r2, r6
   159e8:	mov	r3, #4
   159ec:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   159f0:	b	17178 <main@@Base+0x3e80>
   159f4:	bne	15a08 <main@@Base+0x2710>
   159f8:	mov	r7, r1
   159fc:	ldrb	r0, [r7, #1]!
   15a00:	cmp	r0, #32
   15a04:	bhi	15a18 <main@@Base+0x2720>
   15a08:	mov	r0, sl
   15a0c:	mov	r2, r6
   15a10:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15a14:	mov	r7, r0
   15a18:	cmp	r7, r6
   15a1c:	beq	15a58 <main@@Base+0x2760>
   15a20:	ldrb	r0, [r7]
   15a24:	cmp	r0, #58	; 0x3a
   15a28:	bne	15a58 <main@@Base+0x2760>
   15a2c:	add	r1, r7, #1
   15a30:	sub	r0, r6, r1
   15a34:	cmp	r0, #2
   15a38:	blt	180e4 <main@@Base+0x4dec>
   15a3c:	ldrb	r0, [r1]
   15a40:	cmp	r0, #32
   15a44:	bls	180d4 <main@@Base+0x4ddc>
   15a48:	mov	r7, r1
   15a4c:	cmp	r8, r7
   15a50:	bne	180fc <main@@Base+0x4e04>
   15a54:	b	1685c <main@@Base+0x3564>
   15a58:	mov	r0, sl
   15a5c:	mov	r1, r7
   15a60:	mov	r2, r6
   15a64:	mov	r3, #4
   15a68:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15a6c:	b	180f0 <main@@Base+0x4df8>
   15a70:	cmp	r0, #34	; 0x22
   15a74:	bne	1beac <main@@Base+0x8bb4>
   15a78:	add	r1, r8, #18
   15a7c:	sub	r0, r6, r1
   15a80:	cmp	r0, #2
   15a84:	blt	18198 <main@@Base+0x4ea0>
   15a88:	ldrb	r0, [r1]
   15a8c:	cmp	r0, #32
   15a90:	bls	18184 <main@@Base+0x4e8c>
   15a94:	mov	r4, r1
   15a98:	cmp	r4, r6
   15a9c:	bne	181b0 <main@@Base+0x4eb8>
   15aa0:	b	181f0 <main@@Base+0x4ef8>
   15aa4:	cmp	r0, #34	; 0x22
   15aa8:	bne	18270 <main@@Base+0x4f78>
   15aac:	add	r1, r8, #17
   15ab0:	sub	r0, r6, r1
   15ab4:	cmp	r0, #2
   15ab8:	blt	1821c <main@@Base+0x4f24>
   15abc:	ldrb	r0, [r1]
   15ac0:	cmp	r0, #32
   15ac4:	bls	18208 <main@@Base+0x4f10>
   15ac8:	mov	r7, r1
   15acc:	cmp	r7, r6
   15ad0:	bne	18234 <main@@Base+0x4f3c>
   15ad4:	b	182e8 <main@@Base+0x4ff0>
   15ad8:	cmp	r0, #34	; 0x22
   15adc:	bne	18368 <main@@Base+0x5070>
   15ae0:	add	r1, r8, #17
   15ae4:	sub	r0, r6, r1
   15ae8:	cmp	r0, #2
   15aec:	blt	18314 <main@@Base+0x501c>
   15af0:	ldrb	r0, [r1]
   15af4:	cmp	r0, #32
   15af8:	bls	18300 <main@@Base+0x5008>
   15afc:	mov	r7, r1
   15b00:	cmp	r7, r6
   15b04:	bne	1832c <main@@Base+0x5034>
   15b08:	b	183e0 <main@@Base+0x50e8>
   15b0c:	bne	15b20 <main@@Base+0x2828>
   15b10:	mov	r7, r1
   15b14:	ldrb	r0, [r7, #1]!
   15b18:	cmp	r0, #32
   15b1c:	bhi	15b30 <main@@Base+0x2838>
   15b20:	mov	r0, sl
   15b24:	mov	r2, r6
   15b28:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15b2c:	mov	r7, r0
   15b30:	cmp	r7, r6
   15b34:	beq	15be4 <main@@Base+0x28ec>
   15b38:	ldrb	r0, [r7]
   15b3c:	cmp	r0, #58	; 0x3a
   15b40:	bne	15be4 <main@@Base+0x28ec>
   15b44:	add	r1, r7, #1
   15b48:	sub	r0, r6, r1
   15b4c:	cmp	r0, #2
   15b50:	blt	18454 <main@@Base+0x515c>
   15b54:	ldrb	r0, [r1]
   15b58:	cmp	r0, #32
   15b5c:	bls	18444 <main@@Base+0x514c>
   15b60:	mov	r7, r1
   15b64:	cmp	r9, r7
   15b68:	bne	1846c <main@@Base+0x5174>
   15b6c:	add	r4, r8, #16
   15b70:	mov	r1, #8
   15b74:	sub	r0, r6, r4
   15b78:	cmp	r0, #8
   15b7c:	movcc	r1, r0
   15b80:	sub	r1, r1, #1
   15b84:	cmp	r1, #7
   15b88:	bhi	1c958 <main@@Base+0x9660>
   15b8c:	ldrb	r1, [r4]
   15b90:	cmp	r1, #97	; 0x61
   15b94:	bne	1c958 <main@@Base+0x9660>
   15b98:	cmp	r0, #2
   15b9c:	blt	1c958 <main@@Base+0x9660>
   15ba0:	ldr	r2, [sp, #32]
   15ba4:	mov	r1, r8
   15ba8:	ldrb	r0, [r1, #17]!
   15bac:	ldr	r2, [r2]
   15bb0:	cmp	r2, #0
   15bb4:	beq	16428 <main@@Base+0x3130>
   15bb8:	cmp	r0, #33	; 0x21
   15bbc:	bcc	15bc8 <main@@Base+0x28d0>
   15bc0:	cmp	r0, #58	; 0x3a
   15bc4:	bne	1c958 <main@@Base+0x9660>
   15bc8:	ldr	r0, [sp, #32]
   15bcc:	mov	r2, #0
   15bd0:	str	r2, [r0]
   15bd4:	sub	r0, r6, r1
   15bd8:	cmp	r0, #2
   15bdc:	bge	16440 <main@@Base+0x3148>
   15be0:	b	18adc <main@@Base+0x57e4>
   15be4:	mov	r0, sl
   15be8:	mov	r1, r7
   15bec:	mov	r2, r6
   15bf0:	mov	r3, #4
   15bf4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15bf8:	b	18460 <main@@Base+0x5168>
   15bfc:	bne	15c0c <main@@Base+0x2914>
   15c00:	ldrb	r0, [r1, #2]!
   15c04:	cmp	r0, #32
   15c08:	bhi	15c20 <main@@Base+0x2928>
   15c0c:	mov	r1, r2
   15c10:	mov	r0, sl
   15c14:	mov	r2, r6
   15c18:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15c1c:	mov	r1, r0
   15c20:	cmp	r8, r1
   15c24:	beq	1685c <main@@Base+0x3564>
   15c28:	mov	r0, sl
   15c2c:	mov	r2, r6
   15c30:	add	r3, sp, #52	; 0x34
   15c34:	bl	13374 <main@@Base+0x7c>
   15c38:	mov	r4, r0
   15c3c:	ldr	r0, [sp, #52]	; 0x34
   15c40:	cmp	r0, #0
   15c44:	beq	133b4 <main@@Base+0xbc>
   15c48:	ldr	r0, [sl]
   15c4c:	mov	r1, #12
   15c50:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   15c54:	cmp	r0, #0
   15c58:	bne	15f2c <main@@Base+0x2c34>
   15c5c:	b	133b4 <main@@Base+0xbc>
   15c60:	bne	15c70 <main@@Base+0x2978>
   15c64:	ldrb	r0, [r7, #2]!
   15c68:	cmp	r0, #32
   15c6c:	bhi	15c80 <main@@Base+0x2988>
   15c70:	mov	r0, sl
   15c74:	mov	r2, r6
   15c78:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15c7c:	mov	r7, r0
   15c80:	cmp	r8, r7
   15c84:	beq	1685c <main@@Base+0x3564>
   15c88:	mov	r2, r6
   15c8c:	mov	r6, #0
   15c90:	cmp	r7, r2
   15c94:	str	r6, [fp, #-52]	; 0xffffffcc
   15c98:	str	r6, [fp, #-56]	; 0xffffffc8
   15c9c:	strb	r6, [fp, #-60]	; 0xffffffc4
   15ca0:	str	r6, [sp, #56]	; 0x38
   15ca4:	beq	15d08 <main@@Base+0x2a10>
   15ca8:	sub	r0, fp, #56	; 0x38
   15cac:	mov	r1, r7
   15cb0:	add	r3, sp, #56	; 0x38
   15cb4:	mov	r8, r2
   15cb8:	str	r0, [sp]
   15cbc:	mov	r0, sl
   15cc0:	bl	323e8 <flatcc_json_parser_integer@@Base>
   15cc4:	ldr	r5, [sp, #40]	; 0x28
   15cc8:	cmp	r0, r7
   15ccc:	beq	15d20 <main@@Base+0x2a28>
   15cd0:	ldr	r2, [sp, #56]	; 0x38
   15cd4:	mov	r4, r0
   15cd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15cdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ce0:	cmp	r2, #0
   15ce4:	beq	15d30 <main@@Base+0x2a38>
   15ce8:	subs	r2, r0, #129	; 0x81
   15cec:	sbcs	r1, r1, #0
   15cf0:	bcc	15d60 <main@@Base+0x2a68>
   15cf4:	mov	r0, sl
   15cf8:	mov	r1, r4
   15cfc:	mov	r2, r8
   15d00:	mov	r3, #8
   15d04:	b	15d4c <main@@Base+0x2a54>
   15d08:	ldr	r5, [sp, #40]	; 0x28
   15d0c:	mov	r8, r2
   15d10:	mov	r4, r2
   15d14:	cmp	r7, r4
   15d18:	bne	15dc0 <main@@Base+0x2ac8>
   15d1c:	b	15d84 <main@@Base+0x2a8c>
   15d20:	mov	r4, r7
   15d24:	cmp	r7, r4
   15d28:	bne	15dc0 <main@@Base+0x2ac8>
   15d2c:	b	15d84 <main@@Base+0x2a8c>
   15d30:	subs	r2, r0, #128	; 0x80
   15d34:	sbcs	r1, r1, #0
   15d38:	bcc	15d74 <main@@Base+0x2a7c>
   15d3c:	mov	r0, sl
   15d40:	mov	r1, r4
   15d44:	mov	r2, r8
   15d48:	mov	r3, #7
   15d4c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15d50:	mov	r4, r0
   15d54:	cmp	r7, r4
   15d58:	bne	15dc0 <main@@Base+0x2ac8>
   15d5c:	b	15d84 <main@@Base+0x2a8c>
   15d60:	rsb	r6, r0, #0
   15d64:	strb	r6, [fp, #-60]	; 0xffffffc4
   15d68:	cmp	r7, r4
   15d6c:	bne	15dc0 <main@@Base+0x2ac8>
   15d70:	b	15d84 <main@@Base+0x2a8c>
   15d74:	mov	r6, r0
   15d78:	strb	r6, [fp, #-60]	; 0xffffffc4
   15d7c:	cmp	r7, r4
   15d80:	bne	15dc0 <main@@Base+0x2ac8>
   15d84:	ldr	r3, [sp, #24]
   15d88:	sub	r0, fp, #60	; 0x3c
   15d8c:	mov	r1, r7
   15d90:	mov	r2, r8
   15d94:	mov	r6, r8
   15d98:	str	r0, [sp]
   15d9c:	mov	r0, sl
   15da0:	bl	1f1e0 <main@@Base+0xbee8>
   15da4:	mov	r4, r0
   15da8:	cmp	r0, r7
   15dac:	beq	133b4 <main@@Base+0xbc>
   15db0:	mov	r8, r6
   15db4:	cmp	r4, r6
   15db8:	beq	1dc6c <main@@Base+0xa974>
   15dbc:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   15dc0:	uxtb	r0, r6
   15dc4:	cmp	r0, #8
   15dc8:	bne	15dd8 <main@@Base+0x2ae0>
   15dcc:	ldrb	r0, [sl, #8]
   15dd0:	tst	r0, #2
   15dd4:	beq	19060 <main@@Base+0x5d68>
   15dd8:	ldr	r0, [sl]
   15ddc:	mov	r1, #6
   15de0:	b	16dd4 <main@@Base+0x3adc>
   15de4:	mov	r0, sl
   15de8:	mov	r1, r4
   15dec:	mov	r2, r6
   15df0:	mov	r3, #9
   15df4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15df8:	b	15640 <main@@Base+0x2348>
   15dfc:	cmp	r0, #34	; 0x22
   15e00:	bne	1beac <main@@Base+0x8bb4>
   15e04:	add	r1, r8, #18
   15e08:	sub	r0, r6, r1
   15e0c:	cmp	r0, #2
   15e10:	blt	1856c <main@@Base+0x5274>
   15e14:	ldrb	r0, [r1]
   15e18:	cmp	r0, #32
   15e1c:	bls	18558 <main@@Base+0x5260>
   15e20:	mov	r4, r1
   15e24:	cmp	r4, r6
   15e28:	bne	18584 <main@@Base+0x528c>
   15e2c:	b	185c4 <main@@Base+0x52cc>
   15e30:	cmp	r0, #34	; 0x22
   15e34:	bne	1beac <main@@Base+0x8bb4>
   15e38:	add	r1, r8, #10
   15e3c:	sub	r0, r6, r1
   15e40:	cmp	r0, #2
   15e44:	blt	185f0 <main@@Base+0x52f8>
   15e48:	ldrb	r0, [r1]
   15e4c:	cmp	r0, #32
   15e50:	bls	185dc <main@@Base+0x52e4>
   15e54:	mov	r4, r1
   15e58:	cmp	r4, r6
   15e5c:	bne	18608 <main@@Base+0x5310>
   15e60:	b	18648 <main@@Base+0x5350>
   15e64:	cmp	r0, #34	; 0x22
   15e68:	bne	1beac <main@@Base+0x8bb4>
   15e6c:	add	r1, r8, #10
   15e70:	sub	r0, r6, r1
   15e74:	cmp	r0, #2
   15e78:	blt	18674 <main@@Base+0x537c>
   15e7c:	ldrb	r0, [r1]
   15e80:	cmp	r0, #32
   15e84:	bls	18660 <main@@Base+0x5368>
   15e88:	mov	r4, r1
   15e8c:	cmp	r4, r6
   15e90:	bne	1868c <main@@Base+0x5394>
   15e94:	b	186cc <main@@Base+0x53d4>
   15e98:	cmp	r0, #34	; 0x22
   15e9c:	bne	1a870 <main@@Base+0x7578>
   15ea0:	add	r1, r8, #16
   15ea4:	sub	r0, r6, r1
   15ea8:	cmp	r0, #2
   15eac:	blt	189d4 <main@@Base+0x56dc>
   15eb0:	ldrb	r0, [r1]
   15eb4:	cmp	r0, #32
   15eb8:	bls	189c0 <main@@Base+0x56c8>
   15ebc:	mov	r4, r1
   15ec0:	cmp	r4, r6
   15ec4:	bne	189ec <main@@Base+0x56f4>
   15ec8:	b	18a2c <main@@Base+0x5734>
   15ecc:	bne	15edc <main@@Base+0x2be4>
   15ed0:	ldrb	r0, [r1, #2]!
   15ed4:	cmp	r0, #32
   15ed8:	bhi	15ef0 <main@@Base+0x2bf8>
   15edc:	mov	r1, r2
   15ee0:	mov	r0, sl
   15ee4:	mov	r2, r6
   15ee8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15eec:	mov	r1, r0
   15ef0:	cmp	r8, r1
   15ef4:	beq	1685c <main@@Base+0x3564>
   15ef8:	mov	r0, sl
   15efc:	mov	r2, r6
   15f00:	add	r3, sp, #52	; 0x34
   15f04:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   15f08:	mov	r4, r0
   15f0c:	ldr	r0, [sp, #52]	; 0x34
   15f10:	cmp	r0, #0
   15f14:	beq	133b4 <main@@Base+0xbc>
   15f18:	ldr	r0, [sl]
   15f1c:	mov	r1, #3
   15f20:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   15f24:	cmp	r0, #0
   15f28:	beq	133b4 <main@@Base+0xbc>
   15f2c:	ldr	r1, [sp, #52]	; 0x34
   15f30:	str	r1, [r0]
   15f34:	b	16870 <main@@Base+0x3578>
   15f38:	bne	15f48 <main@@Base+0x2c50>
   15f3c:	ldrb	r0, [r4, #2]!
   15f40:	cmp	r0, #32
   15f44:	bhi	15f58 <main@@Base+0x2c60>
   15f48:	mov	r0, sl
   15f4c:	mov	r2, r6
   15f50:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   15f54:	mov	r4, r0
   15f58:	cmp	r8, r4
   15f5c:	beq	1685c <main@@Base+0x3564>
   15f60:	ldr	r0, [sl]
   15f64:	mov	r1, #1
   15f68:	mov	r2, #1
   15f6c:	mvn	r3, #0
   15f70:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   15f74:	cmp	r0, #0
   15f78:	bne	133b4 <main@@Base+0xbc>
   15f7c:	cmp	r4, r6
   15f80:	beq	15fc4 <main@@Base+0x2ccc>
   15f84:	ldrb	r0, [r4]
   15f88:	cmp	r0, #91	; 0x5b
   15f8c:	bne	15fc4 <main@@Base+0x2ccc>
   15f90:	ldr	r5, [sp, #40]	; 0x28
   15f94:	add	r1, r4, #1
   15f98:	sub	r0, r6, r1
   15f9c:	cmp	r0, #2
   15fa0:	blt	16030 <main@@Base+0x2d38>
   15fa4:	ldrb	r0, [r1]
   15fa8:	cmp	r0, #32
   15fac:	bls	16020 <main@@Base+0x2d28>
   15fb0:	mov	r4, r1
   15fb4:	cmp	r4, r6
   15fb8:	mov	r8, r6
   15fbc:	bne	1604c <main@@Base+0x2d54>
   15fc0:	b	16074 <main@@Base+0x2d7c>
   15fc4:	mov	r0, sl
   15fc8:	mov	r1, r4
   15fcc:	mov	r2, r6
   15fd0:	mov	r3, #22
   15fd4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   15fd8:	ldr	r5, [sp, #40]	; 0x28
   15fdc:	mov	r4, r0
   15fe0:	ldr	r0, [sl]
   15fe4:	bl	2da48 <flatcc_builder_end_vector@@Base>
   15fe8:	cmp	r0, #0
   15fec:	str	r0, [sp, #52]	; 0x34
   15ff0:	beq	133b4 <main@@Base+0xbc>
   15ff4:	ldr	r0, [sl]
   15ff8:	mov	r1, #30
   15ffc:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   16000:	cmp	r0, #0
   16004:	beq	133b4 <main@@Base+0xbc>
   16008:	ldr	r1, [sp, #52]	; 0x34
   1600c:	str	r1, [r0]
   16010:	sub	r0, r6, r4
   16014:	cmp	r0, #2
   16018:	bge	16880 <main@@Base+0x3588>
   1601c:	b	19070 <main@@Base+0x5d78>
   16020:	bne	16030 <main@@Base+0x2d38>
   16024:	ldrb	r0, [r4, #2]!
   16028:	cmp	r0, #32
   1602c:	bhi	16040 <main@@Base+0x2d48>
   16030:	mov	r0, sl
   16034:	mov	r2, r6
   16038:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1603c:	mov	r4, r0
   16040:	cmp	r4, r6
   16044:	mov	r8, r6
   16048:	beq	16074 <main@@Base+0x2d7c>
   1604c:	ldrb	r0, [r4]
   16050:	cmp	r0, #93	; 0x5d
   16054:	bne	16070 <main@@Base+0x2d78>
   16058:	add	r1, r4, #1
   1605c:	mov	r6, r8
   16060:	sub	r0, r8, r1
   16064:	cmp	r0, #2
   16068:	blt	162d4 <main@@Base+0x2fdc>
   1606c:	b	162b0 <main@@Base+0x2fb8>
   16070:	mov	r6, r4
   16074:	mov	r0, #0
   16078:	mov	r1, #1
   1607c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16080:	ldr	r0, [sl]
   16084:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   16088:	cmp	r0, #0
   1608c:	beq	1dc80 <main@@Base+0xa988>
   16090:	mov	r7, r0
   16094:	mov	r4, r6
   16098:	mov	r6, #0
   1609c:	mov	r2, r8
   160a0:	cmp	r4, r8
   160a4:	str	r6, [fp, #-52]	; 0xffffffcc
   160a8:	str	r6, [fp, #-56]	; 0xffffffc8
   160ac:	strb	r6, [fp, #-60]	; 0xffffffc4
   160b0:	str	r6, [sp, #56]	; 0x38
   160b4:	beq	16108 <main@@Base+0x2e10>
   160b8:	sub	r0, fp, #56	; 0x38
   160bc:	mov	r1, r4
   160c0:	add	r3, sp, #56	; 0x38
   160c4:	str	r0, [sp]
   160c8:	mov	r0, sl
   160cc:	bl	323e8 <flatcc_json_parser_integer@@Base>
   160d0:	cmp	r0, r4
   160d4:	beq	16118 <main@@Base+0x2e20>
   160d8:	mov	r1, r0
   160dc:	ldr	r0, [sp, #56]	; 0x38
   160e0:	cmp	r0, #0
   160e4:	beq	16128 <main@@Base+0x2e30>
   160e8:	mov	r0, sl
   160ec:	mov	r2, r8
   160f0:	mov	r3, #8
   160f4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   160f8:	mov	r1, r0
   160fc:	cmp	r4, r1
   16100:	bne	161a4 <main@@Base+0x2eac>
   16104:	b	1616c <main@@Base+0x2e74>
   16108:	mov	r1, r2
   1610c:	cmp	r4, r1
   16110:	bne	161a4 <main@@Base+0x2eac>
   16114:	b	1616c <main@@Base+0x2e74>
   16118:	mov	r1, r4
   1611c:	cmp	r4, r1
   16120:	bne	161a4 <main@@Base+0x2eac>
   16124:	b	1616c <main@@Base+0x2e74>
   16128:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1612c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16130:	subs	r3, r0, #256	; 0x100
   16134:	sbcs	r2, r2, #0
   16138:	bcc	1615c <main@@Base+0x2e64>
   1613c:	mov	r0, sl
   16140:	mov	r2, r8
   16144:	mov	r3, #7
   16148:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1614c:	mov	r1, r0
   16150:	cmp	r4, r1
   16154:	bne	161a4 <main@@Base+0x2eac>
   16158:	b	1616c <main@@Base+0x2e74>
   1615c:	mov	r6, r0
   16160:	strb	r0, [fp, #-60]	; 0xffffffc4
   16164:	cmp	r4, r1
   16168:	bne	161a4 <main@@Base+0x2eac>
   1616c:	movw	r3, #32912	; 0x8090
   16170:	sub	r0, fp, #60	; 0x3c
   16174:	mov	r1, r4
   16178:	mov	r2, r8
   1617c:	mov	r6, r8
   16180:	movt	r3, #4
   16184:	str	r0, [sp]
   16188:	mov	r0, sl
   1618c:	bl	1f464 <main@@Base+0xc16c>
   16190:	mov	r1, r0
   16194:	cmp	r0, r4
   16198:	cmpne	r1, r6
   1619c:	beq	1dc74 <main@@Base+0xa97c>
   161a0:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   161a4:	sub	r0, r8, r1
   161a8:	strb	r6, [r7]
   161ac:	mov	r6, r8
   161b0:	cmp	r0, #2
   161b4:	blt	161e8 <main@@Base+0x2ef0>
   161b8:	ldrb	r0, [r1]
   161bc:	cmp	r0, #32
   161c0:	bls	161d4 <main@@Base+0x2edc>
   161c4:	mov	r4, r1
   161c8:	cmp	r4, r6
   161cc:	bne	16200 <main@@Base+0x2f08>
   161d0:	b	16290 <main@@Base+0x2f98>
   161d4:	bne	161e8 <main@@Base+0x2ef0>
   161d8:	mov	r4, r1
   161dc:	ldrb	r0, [r4, #1]!
   161e0:	cmp	r0, #32
   161e4:	bhi	161f8 <main@@Base+0x2f00>
   161e8:	mov	r0, sl
   161ec:	mov	r2, r6
   161f0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   161f4:	mov	r4, r0
   161f8:	cmp	r4, r6
   161fc:	beq	16290 <main@@Base+0x2f98>
   16200:	ldrb	r0, [r4]
   16204:	cmp	r0, #44	; 0x2c
   16208:	bne	16298 <main@@Base+0x2fa0>
   1620c:	add	r1, r4, #1
   16210:	sub	r0, r6, r1
   16214:	cmp	r0, #2
   16218:	blt	16248 <main@@Base+0x2f50>
   1621c:	ldrb	r0, [r1]
   16220:	cmp	r0, #32
   16224:	bls	16238 <main@@Base+0x2f40>
   16228:	mov	r4, r1
   1622c:	cmp	r4, r6
   16230:	bne	16260 <main@@Base+0x2f68>
   16234:	b	162e4 <main@@Base+0x2fec>
   16238:	bne	16248 <main@@Base+0x2f50>
   1623c:	ldrb	r0, [r4, #2]!
   16240:	cmp	r0, #32
   16244:	bhi	16258 <main@@Base+0x2f60>
   16248:	mov	r0, sl
   1624c:	mov	r2, r6
   16250:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16254:	mov	r4, r0
   16258:	cmp	r4, r6
   1625c:	beq	162e4 <main@@Base+0x2fec>
   16260:	ldrb	r0, [r4]
   16264:	cmp	r0, #93	; 0x5d
   16268:	beq	162a0 <main@@Base+0x2fa8>
   1626c:	mov	r0, #0
   16270:	mov	r1, #1
   16274:	strb	r0, [fp, #-60]	; 0xffffffc4
   16278:	ldr	r0, [sl]
   1627c:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   16280:	mov	r7, r0
   16284:	cmp	r0, #0
   16288:	bne	16098 <main@@Base+0x2da0>
   1628c:	b	1dc6c <main@@Base+0xa974>
   16290:	mov	r4, r6
   16294:	b	15fe0 <main@@Base+0x2ce8>
   16298:	cmp	r0, #93	; 0x5d
   1629c:	bne	16e98 <main@@Base+0x3ba0>
   162a0:	add	r1, r4, #1
   162a4:	sub	r0, r6, r1
   162a8:	cmp	r0, #2
   162ac:	blt	162d4 <main@@Base+0x2fdc>
   162b0:	ldrb	r0, [r1]
   162b4:	cmp	r0, #32
   162b8:	bls	162c4 <main@@Base+0x2fcc>
   162bc:	mov	r4, r1
   162c0:	b	15fe0 <main@@Base+0x2ce8>
   162c4:	bne	162d4 <main@@Base+0x2fdc>
   162c8:	ldrb	r0, [r4, #2]!
   162cc:	cmp	r0, #32
   162d0:	bhi	15fe0 <main@@Base+0x2ce8>
   162d4:	mov	r0, sl
   162d8:	mov	r2, r6
   162dc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   162e0:	b	15fdc <main@@Base+0x2ce4>
   162e4:	mov	r0, sl
   162e8:	mov	r1, r6
   162ec:	b	16ea0 <main@@Base+0x3ba8>
   162f0:	bne	16300 <main@@Base+0x3008>
   162f4:	ldrb	r0, [r1, #2]!
   162f8:	cmp	r0, #32
   162fc:	bhi	16314 <main@@Base+0x301c>
   16300:	ldr	r0, [sp, #36]	; 0x24
   16304:	mov	r1, r2
   16308:	mov	r2, r5
   1630c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16310:	mov	r1, r0
   16314:	cmp	r8, r1
   16318:	beq	151dc <main@@Base+0x1ee4>
   1631c:	ldr	r0, [sp, #48]	; 0x30
   16320:	ldr	sl, [sp, #36]	; 0x24
   16324:	mov	r2, #8
   16328:	mov	r3, #0
   1632c:	mov	r6, r5
   16330:	str	r2, [sp]
   16334:	mov	r2, r5
   16338:	str	r0, [sp, #4]
   1633c:	movw	r0, #416	; 0x1a0
   16340:	movt	r0, #2
   16344:	str	r0, [sp, #8]
   16348:	mov	r0, sl
   1634c:	bl	32de4 <flatcc_json_parser_union@@Base>
   16350:	b	1686c <main@@Base+0x3574>
   16354:	bne	16368 <main@@Base+0x3070>
   16358:	ldrb	r0, [r4, #2]!
   1635c:	mov	r7, r4
   16360:	cmp	r0, #32
   16364:	bhi	15644 <main@@Base+0x234c>
   16368:	mov	r0, sl
   1636c:	mov	r2, r6
   16370:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16374:	b	15640 <main@@Base+0x2348>
   16378:	cmp	r0, #34	; 0x22
   1637c:	bne	1beac <main@@Base+0x8bb4>
   16380:	add	r1, r8, #21
   16384:	sub	r0, r6, r1
   16388:	cmp	r0, #2
   1638c:	blt	18a58 <main@@Base+0x5760>
   16390:	ldrb	r0, [r1]
   16394:	cmp	r0, #32
   16398:	bls	18a44 <main@@Base+0x574c>
   1639c:	mov	r4, r1
   163a0:	cmp	r4, r6
   163a4:	bne	18a70 <main@@Base+0x5778>
   163a8:	b	18ab0 <main@@Base+0x57b8>
   163ac:	bne	163c0 <main@@Base+0x30c8>
   163b0:	mov	r4, r1
   163b4:	ldrb	r0, [r4, #1]!
   163b8:	cmp	r0, #32
   163bc:	bhi	163d0 <main@@Base+0x30d8>
   163c0:	mov	r0, sl
   163c4:	mov	r2, r6
   163c8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   163cc:	mov	r4, r0
   163d0:	cmp	r4, r6
   163d4:	beq	16410 <main@@Base+0x3118>
   163d8:	ldrb	r0, [r4]
   163dc:	cmp	r0, #58	; 0x3a
   163e0:	bne	16410 <main@@Base+0x3118>
   163e4:	add	r1, r4, #1
   163e8:	sub	r0, r6, r1
   163ec:	cmp	r0, #2
   163f0:	blt	18bcc <main@@Base+0x58d4>
   163f4:	ldrb	r0, [r1]
   163f8:	cmp	r0, #32
   163fc:	bls	18bbc <main@@Base+0x58c4>
   16400:	mov	r4, r1
   16404:	cmp	r7, r4
   16408:	bne	18be4 <main@@Base+0x58ec>
   1640c:	b	1beac <main@@Base+0x8bb4>
   16410:	mov	r0, sl
   16414:	mov	r1, r4
   16418:	mov	r2, r6
   1641c:	mov	r3, #4
   16420:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16424:	b	18bd8 <main@@Base+0x58e0>
   16428:	cmp	r0, #34	; 0x22
   1642c:	bne	1c958 <main@@Base+0x9660>
   16430:	add	r1, r8, #18
   16434:	sub	r0, r6, r1
   16438:	cmp	r0, #2
   1643c:	blt	18adc <main@@Base+0x57e4>
   16440:	ldrb	r0, [r1]
   16444:	cmp	r0, #32
   16448:	bls	18ac8 <main@@Base+0x57d0>
   1644c:	mov	r7, r1
   16450:	cmp	r7, r6
   16454:	bne	18af4 <main@@Base+0x57fc>
   16458:	b	18b34 <main@@Base+0x583c>
   1645c:	bne	16470 <main@@Base+0x3178>
   16460:	mov	r4, r1
   16464:	ldrb	r0, [r4, #1]!
   16468:	cmp	r0, #32
   1646c:	bhi	16480 <main@@Base+0x3188>
   16470:	mov	r0, sl
   16474:	mov	r2, r6
   16478:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1647c:	mov	r4, r0
   16480:	cmp	r4, r6
   16484:	beq	164c0 <main@@Base+0x31c8>
   16488:	ldrb	r0, [r4]
   1648c:	cmp	r0, #58	; 0x3a
   16490:	bne	164c0 <main@@Base+0x31c8>
   16494:	add	r1, r4, #1
   16498:	sub	r0, r6, r1
   1649c:	cmp	r0, #2
   164a0:	blt	18ccc <main@@Base+0x59d4>
   164a4:	ldrb	r0, [r1]
   164a8:	cmp	r0, #32
   164ac:	bls	18cbc <main@@Base+0x59c4>
   164b0:	mov	r4, r1
   164b4:	cmp	r7, r4
   164b8:	bne	18ce4 <main@@Base+0x59ec>
   164bc:	b	1beac <main@@Base+0x8bb4>
   164c0:	mov	r0, sl
   164c4:	mov	r1, r4
   164c8:	mov	r2, r6
   164cc:	mov	r3, #4
   164d0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   164d4:	b	18cd8 <main@@Base+0x59e0>
   164d8:	bne	164ec <main@@Base+0x31f4>
   164dc:	mov	r7, r1
   164e0:	ldrb	r0, [r7, #1]!
   164e4:	cmp	r0, #32
   164e8:	bhi	164fc <main@@Base+0x3204>
   164ec:	mov	r0, sl
   164f0:	mov	r2, r6
   164f4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   164f8:	mov	r7, r0
   164fc:	cmp	r7, r6
   16500:	beq	1653c <main@@Base+0x3244>
   16504:	ldrb	r0, [r7]
   16508:	cmp	r0, #58	; 0x3a
   1650c:	bne	1653c <main@@Base+0x3244>
   16510:	add	r1, r7, #1
   16514:	sub	r0, r6, r1
   16518:	cmp	r0, #2
   1651c:	blt	18d90 <main@@Base+0x5a98>
   16520:	ldrb	r0, [r1]
   16524:	cmp	r0, #32
   16528:	bls	18d80 <main@@Base+0x5a88>
   1652c:	mov	r7, r1
   16530:	cmp	r9, r7
   16534:	bne	18da8 <main@@Base+0x5ab0>
   16538:	b	1a870 <main@@Base+0x7578>
   1653c:	mov	r0, sl
   16540:	mov	r1, r7
   16544:	mov	r2, r6
   16548:	mov	r3, #4
   1654c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16550:	b	18d9c <main@@Base+0x5aa4>
   16554:	bne	16568 <main@@Base+0x3270>
   16558:	mov	r7, r1
   1655c:	ldrb	r0, [r7, #1]!
   16560:	cmp	r0, #32
   16564:	bhi	16578 <main@@Base+0x3280>
   16568:	mov	r0, sl
   1656c:	mov	r2, r6
   16570:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16574:	mov	r7, r0
   16578:	cmp	r7, r6
   1657c:	beq	165b8 <main@@Base+0x32c0>
   16580:	ldrb	r0, [r7]
   16584:	cmp	r0, #58	; 0x3a
   16588:	bne	165b8 <main@@Base+0x32c0>
   1658c:	add	r1, r7, #1
   16590:	sub	r0, r6, r1
   16594:	cmp	r0, #2
   16598:	blt	18ed0 <main@@Base+0x5bd8>
   1659c:	ldrb	r0, [r1]
   165a0:	cmp	r0, #32
   165a4:	bls	18ec0 <main@@Base+0x5bc8>
   165a8:	mov	r7, r1
   165ac:	cmp	r8, r7
   165b0:	bne	18ee8 <main@@Base+0x5bf0>
   165b4:	b	1685c <main@@Base+0x3564>
   165b8:	mov	r0, sl
   165bc:	mov	r1, r7
   165c0:	mov	r2, r6
   165c4:	mov	r3, #4
   165c8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   165cc:	b	18edc <main@@Base+0x5be4>
   165d0:	bne	165e4 <main@@Base+0x32ec>
   165d4:	mov	r7, r1
   165d8:	ldrb	r0, [r7, #1]!
   165dc:	cmp	r0, #32
   165e0:	bhi	165f4 <main@@Base+0x32fc>
   165e4:	mov	r0, sl
   165e8:	mov	r2, r6
   165ec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   165f0:	mov	r7, r0
   165f4:	cmp	r7, r6
   165f8:	beq	16634 <main@@Base+0x333c>
   165fc:	ldrb	r0, [r7]
   16600:	cmp	r0, #58	; 0x3a
   16604:	bne	16634 <main@@Base+0x333c>
   16608:	add	r1, r7, #1
   1660c:	sub	r0, r6, r1
   16610:	cmp	r0, #2
   16614:	blt	190a0 <main@@Base+0x5da8>
   16618:	ldrb	r0, [r1]
   1661c:	cmp	r0, #32
   16620:	bls	19090 <main@@Base+0x5d98>
   16624:	mov	r7, r1
   16628:	cmp	r8, r7
   1662c:	bne	190b8 <main@@Base+0x5dc0>
   16630:	b	1685c <main@@Base+0x3564>
   16634:	mov	r0, sl
   16638:	mov	r1, r7
   1663c:	mov	r2, r6
   16640:	mov	r3, #4
   16644:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16648:	b	190ac <main@@Base+0x5db4>
   1664c:	bne	16660 <main@@Base+0x3368>
   16650:	mov	r7, r1
   16654:	ldrb	r0, [r7, #1]!
   16658:	cmp	r0, #32
   1665c:	bhi	16670 <main@@Base+0x3378>
   16660:	mov	r0, sl
   16664:	mov	r2, r6
   16668:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1666c:	mov	r7, r0
   16670:	cmp	r7, r6
   16674:	beq	16724 <main@@Base+0x342c>
   16678:	ldrb	r0, [r7]
   1667c:	cmp	r0, #58	; 0x3a
   16680:	bne	16724 <main@@Base+0x342c>
   16684:	add	r1, r7, #1
   16688:	sub	r0, r6, r1
   1668c:	cmp	r0, #2
   16690:	blt	19150 <main@@Base+0x5e58>
   16694:	ldrb	r0, [r1]
   16698:	cmp	r0, #32
   1669c:	bls	19140 <main@@Base+0x5e48>
   166a0:	mov	r7, r1
   166a4:	cmp	r9, r7
   166a8:	bne	19168 <main@@Base+0x5e70>
   166ac:	add	r4, r8, #16
   166b0:	mov	r1, #8
   166b4:	sub	r0, r6, r4
   166b8:	cmp	r0, #8
   166bc:	movcc	r1, r0
   166c0:	sub	r1, r1, #1
   166c4:	cmp	r1, #7
   166c8:	bhi	1c958 <main@@Base+0x9660>
   166cc:	ldrb	r1, [r4]
   166d0:	cmp	r1, #97	; 0x61
   166d4:	bne	1c958 <main@@Base+0x9660>
   166d8:	cmp	r0, #2
   166dc:	blt	1c958 <main@@Base+0x9660>
   166e0:	ldr	r2, [sp, #32]
   166e4:	mov	r1, r8
   166e8:	ldrb	r0, [r1, #17]!
   166ec:	ldr	r2, [r2]
   166f0:	cmp	r2, #0
   166f4:	beq	18410 <main@@Base+0x5118>
   166f8:	cmp	r0, #33	; 0x21
   166fc:	bcc	16708 <main@@Base+0x3410>
   16700:	cmp	r0, #58	; 0x3a
   16704:	bne	1c958 <main@@Base+0x9660>
   16708:	ldr	r0, [sp, #32]
   1670c:	mov	r2, #0
   16710:	str	r2, [r0]
   16714:	sub	r0, r6, r1
   16718:	cmp	r0, #2
   1671c:	bge	18428 <main@@Base+0x5130>
   16720:	b	1a0fc <main@@Base+0x6e04>
   16724:	mov	r0, sl
   16728:	mov	r1, r7
   1672c:	mov	r2, r6
   16730:	mov	r3, #4
   16734:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16738:	b	1915c <main@@Base+0x5e64>
   1673c:	bne	1674c <main@@Base+0x3454>
   16740:	ldrb	r0, [r7, #2]!
   16744:	cmp	r0, #32
   16748:	bhi	1675c <main@@Base+0x3464>
   1674c:	ldr	r0, [sp, #36]	; 0x24
   16750:	mov	r2, r6
   16754:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16758:	mov	r7, r0
   1675c:	cmp	r8, r7
   16760:	beq	167c8 <main@@Base+0x34d0>
   16764:	ldr	sl, [sp, #36]	; 0x24
   16768:	mov	r1, #4
   1676c:	mov	r2, #2
   16770:	mvn	r3, #-1073741824	; 0xc0000000
   16774:	ldr	r0, [sl]
   16778:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   1677c:	cmp	r0, #0
   16780:	bne	1dc64 <main@@Base+0xa96c>
   16784:	cmp	r7, r6
   16788:	beq	16928 <main@@Base+0x3630>
   1678c:	ldrb	r0, [r7]
   16790:	cmp	r0, #91	; 0x5b
   16794:	bne	16928 <main@@Base+0x3630>
   16798:	add	r1, r7, #1
   1679c:	sub	r0, r6, r1
   167a0:	cmp	r0, #2
   167a4:	blt	169cc <main@@Base+0x36d4>
   167a8:	ldrb	r0, [r1]
   167ac:	cmp	r0, #32
   167b0:	bls	169bc <main@@Base+0x36c4>
   167b4:	mov	r7, r1
   167b8:	cmp	r7, r6
   167bc:	mov	r4, r6
   167c0:	bne	169e8 <main@@Base+0x36f0>
   167c4:	b	16a2c <main@@Base+0x3734>
   167c8:	movw	r0, #31088	; 0x7970
   167cc:	movt	r0, #24436	; 0x5f74
   167d0:	eor	r0, sl, r0
   167d4:	orrs	r0, r0, r4
   167d8:	bne	16858 <main@@Base+0x3560>
   167dc:	add	r4, r8, #8
   167e0:	ldr	sl, [sp, #36]	; 0x24
   167e4:	mov	r1, #8
   167e8:	sub	r0, r6, r4
   167ec:	cmp	r0, #8
   167f0:	movcc	r1, r0
   167f4:	sub	r1, r1, #1
   167f8:	cmp	r1, #7
   167fc:	bhi	1c958 <main@@Base+0x9660>
   16800:	ldrb	r1, [r4]
   16804:	cmp	r1, #101	; 0x65
   16808:	bne	1c958 <main@@Base+0x9660>
   1680c:	cmp	r0, #2
   16810:	blt	1c958 <main@@Base+0x9660>
   16814:	ldr	r2, [sp, #32]
   16818:	mov	r1, r8
   1681c:	ldrb	r0, [r1, #9]!
   16820:	ldr	r2, [r2]
   16824:	cmp	r2, #0
   16828:	beq	16988 <main@@Base+0x3690>
   1682c:	cmp	r0, #33	; 0x21
   16830:	bcc	1683c <main@@Base+0x3544>
   16834:	cmp	r0, #58	; 0x3a
   16838:	bne	1c958 <main@@Base+0x9660>
   1683c:	ldr	r0, [sp, #32]
   16840:	mov	r2, #0
   16844:	str	r2, [r0]
   16848:	sub	r0, r6, r1
   1684c:	cmp	r0, #2
   16850:	bge	169a0 <main@@Base+0x36a8>
   16854:	b	16bb0 <main@@Base+0x38b8>
   16858:	ldr	sl, [sp, #36]	; 0x24
   1685c:	mov	r0, sl
   16860:	mov	r1, r8
   16864:	mov	r2, r6
   16868:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   1686c:	mov	r4, r0
   16870:	ldr	r5, [sp, #40]	; 0x28
   16874:	sub	r0, r6, r4
   16878:	cmp	r0, #2
   1687c:	blt	19070 <main@@Base+0x5d78>
   16880:	ldrb	r0, [r4]
   16884:	cmp	r0, #32
   16888:	bls	168dc <main@@Base+0x35e4>
   1688c:	mov	r2, r4
   16890:	cmp	r2, r6
   16894:	beq	1dbd4 <main@@Base+0xa8dc>
   16898:	ldrb	r0, [r2]
   1689c:	cmp	r0, #44	; 0x2c
   168a0:	bne	1dbe8 <main@@Base+0xa8f0>
   168a4:	add	r1, r2, #1
   168a8:	sub	r0, r6, r1
   168ac:	cmp	r0, #2
   168b0:	blt	1690c <main@@Base+0x3614>
   168b4:	ldrb	r0, [r1]
   168b8:	cmp	r0, #32
   168bc:	bls	168fc <main@@Base+0x3604>
   168c0:	mov	r2, r1
   168c4:	cmp	r2, r6
   168c8:	beq	1dc20 <main@@Base+0xa928>
   168cc:	ldrb	r0, [r2]
   168d0:	cmp	r0, #125	; 0x7d
   168d4:	bne	1357c <main@@Base+0x284>
   168d8:	b	1dbf0 <main@@Base+0xa8f8>
   168dc:	bne	19070 <main@@Base+0x5d78>
   168e0:	mov	r2, r4
   168e4:	ldrb	r0, [r2, #1]!
   168e8:	cmp	r0, #32
   168ec:	bls	19070 <main@@Base+0x5d78>
   168f0:	cmp	r2, r6
   168f4:	bne	16898 <main@@Base+0x35a0>
   168f8:	b	1dbd4 <main@@Base+0xa8dc>
   168fc:	bne	1690c <main@@Base+0x3614>
   16900:	ldrb	r0, [r2, #2]!
   16904:	cmp	r0, #32
   16908:	bhi	1691c <main@@Base+0x3624>
   1690c:	mov	r0, sl
   16910:	mov	r2, r6
   16914:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16918:	mov	r2, r0
   1691c:	cmp	r2, r6
   16920:	bne	168cc <main@@Base+0x35d4>
   16924:	b	1dc20 <main@@Base+0xa928>
   16928:	mov	r0, sl
   1692c:	mov	r1, r7
   16930:	mov	r2, r6
   16934:	mov	r3, #22
   16938:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1693c:	ldr	r5, [sp, #40]	; 0x28
   16940:	mov	r7, r0
   16944:	ldr	r0, [sl]
   16948:	bl	2da48 <flatcc_builder_end_vector@@Base>
   1694c:	cmp	r0, #0
   16950:	str	r0, [sp, #52]	; 0x34
   16954:	beq	1dc64 <main@@Base+0xa96c>
   16958:	ldr	r0, [sl]
   1695c:	mov	r1, #31
   16960:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   16964:	cmp	r0, #0
   16968:	beq	1dc64 <main@@Base+0xa96c>
   1696c:	ldr	r1, [sp, #52]	; 0x34
   16970:	mov	r4, r7
   16974:	str	r1, [r0]
   16978:	sub	r0, r6, r4
   1697c:	cmp	r0, #2
   16980:	bge	16880 <main@@Base+0x3588>
   16984:	b	19070 <main@@Base+0x5d78>
   16988:	cmp	r0, #34	; 0x22
   1698c:	bne	1c958 <main@@Base+0x9660>
   16990:	add	r1, r8, #10
   16994:	sub	r0, r6, r1
   16998:	cmp	r0, #2
   1699c:	blt	16bb0 <main@@Base+0x38b8>
   169a0:	ldrb	r0, [r1]
   169a4:	cmp	r0, #32
   169a8:	bls	16b9c <main@@Base+0x38a4>
   169ac:	mov	r2, r1
   169b0:	cmp	r2, r6
   169b4:	bne	16bc8 <main@@Base+0x38d0>
   169b8:	b	16c00 <main@@Base+0x3908>
   169bc:	bne	169cc <main@@Base+0x36d4>
   169c0:	ldrb	r0, [r7, #2]!
   169c4:	cmp	r0, #32
   169c8:	bhi	169dc <main@@Base+0x36e4>
   169cc:	mov	r0, sl
   169d0:	mov	r2, r6
   169d4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   169d8:	mov	r7, r0
   169dc:	cmp	r7, r6
   169e0:	mov	r4, r6
   169e4:	beq	16a2c <main@@Base+0x3734>
   169e8:	ldrb	r0, [r7]
   169ec:	cmp	r0, #93	; 0x5d
   169f0:	bne	16a28 <main@@Base+0x3730>
   169f4:	ldr	r5, [sp, #40]	; 0x28
   169f8:	add	r1, r7, #1
   169fc:	sub	r0, r6, r1
   16a00:	cmp	r0, #2
   16a04:	blt	1a7d0 <main@@Base+0x74d8>
   16a08:	ldrb	r0, [r1]
   16a0c:	cmp	r0, #32
   16a10:	bhi	16b38 <main@@Base+0x3840>
   16a14:	bne	1a7d0 <main@@Base+0x74d8>
   16a18:	ldrb	r0, [r7, #2]!
   16a1c:	cmp	r0, #32
   16a20:	bhi	16944 <main@@Base+0x364c>
   16a24:	b	1a7d0 <main@@Base+0x74d8>
   16a28:	mov	r4, r7
   16a2c:	ldr	r0, [sl]
   16a30:	mov	r1, #1
   16a34:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   16a38:	mov	r3, r0
   16a3c:	cmp	r0, #0
   16a40:	beq	133b4 <main@@Base+0xbc>
   16a44:	mov	r0, sl
   16a48:	mov	r1, r4
   16a4c:	mov	r2, r6
   16a50:	bl	1f95c <main@@Base+0xc664>
   16a54:	mov	r1, r0
   16a58:	sub	r0, r6, r0
   16a5c:	cmp	r0, #2
   16a60:	blt	16a94 <main@@Base+0x379c>
   16a64:	ldrb	r0, [r1]
   16a68:	cmp	r0, #32
   16a6c:	bls	16a80 <main@@Base+0x3788>
   16a70:	mov	r4, r1
   16a74:	cmp	r4, r6
   16a78:	bne	16aac <main@@Base+0x37b4>
   16a7c:	b	16b40 <main@@Base+0x3848>
   16a80:	bne	16a94 <main@@Base+0x379c>
   16a84:	mov	r4, r1
   16a88:	ldrb	r0, [r4, #1]!
   16a8c:	cmp	r0, #32
   16a90:	bhi	16aa4 <main@@Base+0x37ac>
   16a94:	mov	r0, sl
   16a98:	mov	r2, r6
   16a9c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16aa0:	mov	r4, r0
   16aa4:	cmp	r4, r6
   16aa8:	beq	16b40 <main@@Base+0x3848>
   16aac:	ldrb	r0, [r4]
   16ab0:	cmp	r0, #44	; 0x2c
   16ab4:	bne	16b4c <main@@Base+0x3854>
   16ab8:	add	r1, r4, #1
   16abc:	sub	r0, r6, r1
   16ac0:	cmp	r0, #2
   16ac4:	blt	16af4 <main@@Base+0x37fc>
   16ac8:	ldrb	r0, [r1]
   16acc:	cmp	r0, #32
   16ad0:	bls	16ae4 <main@@Base+0x37ec>
   16ad4:	mov	r4, r1
   16ad8:	cmp	r4, r6
   16adc:	bne	16b0c <main@@Base+0x3814>
   16ae0:	b	16b88 <main@@Base+0x3890>
   16ae4:	bne	16af4 <main@@Base+0x37fc>
   16ae8:	ldrb	r0, [r4, #2]!
   16aec:	cmp	r0, #32
   16af0:	bhi	16b04 <main@@Base+0x380c>
   16af4:	mov	r0, sl
   16af8:	mov	r2, r6
   16afc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16b00:	mov	r4, r0
   16b04:	cmp	r4, r6
   16b08:	beq	16b88 <main@@Base+0x3890>
   16b0c:	ldrb	r0, [r4]
   16b10:	cmp	r0, #93	; 0x5d
   16b14:	bne	16a2c <main@@Base+0x3734>
   16b18:	ldr	r5, [sp, #40]	; 0x28
   16b1c:	add	r1, r4, #1
   16b20:	sub	r0, r6, r1
   16b24:	cmp	r0, #2
   16b28:	blt	1a7d0 <main@@Base+0x74d8>
   16b2c:	ldrb	r0, [r1]
   16b30:	cmp	r0, #32
   16b34:	bls	192c8 <main@@Base+0x5fd0>
   16b38:	mov	r7, r1
   16b3c:	b	16944 <main@@Base+0x364c>
   16b40:	ldr	r5, [sp, #40]	; 0x28
   16b44:	mov	r7, r6
   16b48:	b	16944 <main@@Base+0x364c>
   16b4c:	ldr	r5, [sp, #40]	; 0x28
   16b50:	cmp	r0, #93	; 0x5d
   16b54:	bne	183f8 <main@@Base+0x5100>
   16b58:	add	r1, r4, #1
   16b5c:	sub	r0, r6, r1
   16b60:	cmp	r0, #2
   16b64:	blt	1a7d0 <main@@Base+0x74d8>
   16b68:	ldrb	r0, [r1]
   16b6c:	cmp	r0, #32
   16b70:	bls	1a7b0 <main@@Base+0x74b8>
   16b74:	ldr	r6, [sp, #44]	; 0x2c
   16b78:	ldr	sl, [sp, #36]	; 0x24
   16b7c:	ldr	r5, [sp, #40]	; 0x28
   16b80:	mov	r7, r1
   16b84:	b	16944 <main@@Base+0x364c>
   16b88:	mov	r0, sl
   16b8c:	mov	r1, r6
   16b90:	mov	r2, r6
   16b94:	mov	r3, #9
   16b98:	b	16938 <main@@Base+0x3640>
   16b9c:	bne	16bb0 <main@@Base+0x38b8>
   16ba0:	mov	r2, r1
   16ba4:	ldrb	r0, [r2, #1]!
   16ba8:	cmp	r0, #32
   16bac:	bhi	16bc0 <main@@Base+0x38c8>
   16bb0:	mov	r0, sl
   16bb4:	mov	r2, r6
   16bb8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16bbc:	mov	r2, r0
   16bc0:	cmp	r2, r6
   16bc4:	beq	16c00 <main@@Base+0x3908>
   16bc8:	ldrb	r0, [r2]
   16bcc:	cmp	r0, #58	; 0x3a
   16bd0:	bne	16c00 <main@@Base+0x3908>
   16bd4:	add	r1, r2, #1
   16bd8:	sub	r0, r6, r1
   16bdc:	cmp	r0, #2
   16be0:	blt	192e0 <main@@Base+0x5fe8>
   16be4:	ldrb	r0, [r1]
   16be8:	cmp	r0, #32
   16bec:	bls	192d0 <main@@Base+0x5fd8>
   16bf0:	mov	r2, r1
   16bf4:	cmp	r4, r2
   16bf8:	bne	192f8 <main@@Base+0x6000>
   16bfc:	b	1c958 <main@@Base+0x9660>
   16c00:	mov	r1, r2
   16c04:	mov	r0, sl
   16c08:	mov	r2, r6
   16c0c:	mov	r3, #4
   16c10:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16c14:	b	192ec <main@@Base+0x5ff4>
   16c18:	bne	16c28 <main@@Base+0x3930>
   16c1c:	ldrb	r0, [r7, #2]!
   16c20:	cmp	r0, #32
   16c24:	bhi	16c38 <main@@Base+0x3940>
   16c28:	mov	r0, sl
   16c2c:	mov	r2, r6
   16c30:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16c34:	mov	r7, r0
   16c38:	cmp	r8, r7
   16c3c:	beq	1685c <main@@Base+0x3564>
   16c40:	sub	r4, r6, r7
   16c44:	mov	r0, #0
   16c48:	cmp	r4, #4
   16c4c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16c50:	blt	16c94 <main@@Base+0x399c>
   16c54:	movw	r1, #19603	; 0x4c93
   16c58:	mov	r0, r7
   16c5c:	mov	r2, #4
   16c60:	movt	r1, #3
   16c64:	bl	12b34 <bcmp@plt>
   16c68:	cmp	r0, #0
   16c6c:	beq	16d08 <main@@Base+0x3a10>
   16c70:	cmp	r4, #5
   16c74:	blt	16c94 <main@@Base+0x399c>
   16c78:	movw	r1, #19608	; 0x4c98
   16c7c:	mov	r0, r7
   16c80:	mov	r2, #5
   16c84:	movt	r1, #3
   16c88:	bl	12b34 <bcmp@plt>
   16c8c:	cmp	r0, #0
   16c90:	beq	16df0 <main@@Base+0x3af8>
   16c94:	mov	r2, r6
   16c98:	mov	r6, #0
   16c9c:	cmp	r7, r2
   16ca0:	str	r6, [fp, #-52]	; 0xffffffcc
   16ca4:	str	r6, [fp, #-56]	; 0xffffffc8
   16ca8:	str	r6, [sp, #56]	; 0x38
   16cac:	beq	16cf8 <main@@Base+0x3a00>
   16cb0:	sub	r0, fp, #56	; 0x38
   16cb4:	mov	r1, r7
   16cb8:	add	r3, sp, #56	; 0x38
   16cbc:	mov	r8, r2
   16cc0:	str	r0, [sp]
   16cc4:	mov	r0, sl
   16cc8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   16ccc:	cmp	r0, r7
   16cd0:	beq	16d28 <main@@Base+0x3a30>
   16cd4:	mov	r1, r0
   16cd8:	ldr	r0, [sp, #56]	; 0x38
   16cdc:	ldr	r5, [sp, #40]	; 0x28
   16ce0:	cmp	r0, #0
   16ce4:	beq	16d34 <main@@Base+0x3a3c>
   16ce8:	mov	r0, sl
   16cec:	mov	r2, r8
   16cf0:	mov	r3, #8
   16cf4:	b	16d54 <main@@Base+0x3a5c>
   16cf8:	ldr	r5, [sp, #40]	; 0x28
   16cfc:	mov	r8, r2
   16d00:	mov	r4, r2
   16d04:	b	16d5c <main@@Base+0x3a64>
   16d08:	ldr	r5, [sp, #40]	; 0x28
   16d0c:	mov	r8, r6
   16d10:	mov	r6, #1
   16d14:	add	r4, r7, #4
   16d18:	strb	r6, [fp, #-60]	; 0xffffffc4
   16d1c:	cmp	r7, r4
   16d20:	bne	16db8 <main@@Base+0x3ac0>
   16d24:	b	16d74 <main@@Base+0x3a7c>
   16d28:	ldr	r5, [sp, #40]	; 0x28
   16d2c:	mov	r4, r7
   16d30:	b	16d5c <main@@Base+0x3a64>
   16d34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16d38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d3c:	subs	r3, r0, #256	; 0x100
   16d40:	sbcs	r2, r2, #0
   16d44:	bcc	16e10 <main@@Base+0x3b18>
   16d48:	mov	r0, sl
   16d4c:	mov	r2, r8
   16d50:	mov	r3, #7
   16d54:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16d58:	mov	r4, r0
   16d5c:	uxtb	r6, r6
   16d60:	cmp	r6, #0
   16d64:	movwne	r6, #1
   16d68:	strb	r6, [fp, #-60]	; 0xffffffc4
   16d6c:	cmp	r7, r4
   16d70:	bne	16db8 <main@@Base+0x3ac0>
   16d74:	sub	r0, fp, #60	; 0x3c
   16d78:	mov	r1, r7
   16d7c:	mov	r2, r8
   16d80:	mov	r6, r8
   16d84:	str	r0, [sp]
   16d88:	movw	r0, #32912	; 0x8090
   16d8c:	movt	r0, #4
   16d90:	add	r3, r0, #60	; 0x3c
   16d94:	mov	r0, sl
   16d98:	bl	239fc <main@@Base+0x10704>
   16d9c:	mov	r4, r0
   16da0:	cmp	r0, r7
   16da4:	beq	133b4 <main@@Base+0xbc>
   16da8:	mov	r8, r6
   16dac:	cmp	r4, r6
   16db0:	beq	1dc6c <main@@Base+0xa974>
   16db4:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   16db8:	cmp	r6, #1
   16dbc:	bne	16dcc <main@@Base+0x3ad4>
   16dc0:	ldrb	r0, [sl, #8]
   16dc4:	tst	r0, #2
   16dc8:	beq	19060 <main@@Base+0x5d68>
   16dcc:	ldr	r0, [sl]
   16dd0:	mov	r1, #15
   16dd4:	mov	r2, #1
   16dd8:	mov	r3, #1
   16ddc:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   16de0:	cmp	r0, #0
   16de4:	beq	1dc6c <main@@Base+0xa974>
   16de8:	strb	r6, [r0]
   16dec:	b	19060 <main@@Base+0x5d68>
   16df0:	ldr	r5, [sp, #40]	; 0x28
   16df4:	mov	r8, r6
   16df8:	mov	r6, #0
   16dfc:	add	r4, r7, #5
   16e00:	strb	r6, [fp, #-60]	; 0xffffffc4
   16e04:	cmp	r7, r4
   16e08:	bne	16db8 <main@@Base+0x3ac0>
   16e0c:	b	16d74 <main@@Base+0x3a7c>
   16e10:	mov	r6, r0
   16e14:	mov	r4, r1
   16e18:	b	16d5c <main@@Base+0x3a64>
   16e1c:	bne	16e30 <main@@Base+0x3b38>
   16e20:	mov	r4, r1
   16e24:	ldrb	r0, [r4, #1]!
   16e28:	cmp	r0, #32
   16e2c:	bhi	16e40 <main@@Base+0x3b48>
   16e30:	mov	r0, sl
   16e34:	mov	r2, r6
   16e38:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16e3c:	mov	r4, r0
   16e40:	cmp	r4, r6
   16e44:	beq	16e80 <main@@Base+0x3b88>
   16e48:	ldrb	r0, [r4]
   16e4c:	cmp	r0, #58	; 0x3a
   16e50:	bne	16e80 <main@@Base+0x3b88>
   16e54:	add	r1, r4, #1
   16e58:	sub	r0, r6, r1
   16e5c:	cmp	r0, #2
   16e60:	blt	19348 <main@@Base+0x6050>
   16e64:	ldrb	r0, [r1]
   16e68:	cmp	r0, #32
   16e6c:	bls	19338 <main@@Base+0x6040>
   16e70:	mov	r4, r1
   16e74:	cmp	r9, r4
   16e78:	bne	19360 <main@@Base+0x6068>
   16e7c:	b	1a870 <main@@Base+0x7578>
   16e80:	mov	r0, sl
   16e84:	mov	r1, r4
   16e88:	mov	r2, r6
   16e8c:	mov	r3, #4
   16e90:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16e94:	b	19354 <main@@Base+0x605c>
   16e98:	mov	r0, sl
   16e9c:	mov	r1, r4
   16ea0:	mov	r2, r6
   16ea4:	mov	r3, #9
   16ea8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16eac:	b	15fdc <main@@Base+0x2ce4>
   16eb0:	bne	16ec0 <main@@Base+0x3bc8>
   16eb4:	ldrb	r0, [r4, #2]!
   16eb8:	cmp	r0, #32
   16ebc:	bhi	16ed0 <main@@Base+0x3bd8>
   16ec0:	mov	r0, r6
   16ec4:	mov	r2, r5
   16ec8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16ecc:	mov	r4, r0
   16ed0:	cmp	r9, r4
   16ed4:	beq	158cc <main@@Base+0x25d4>
   16ed8:	ldr	sl, [sp, #36]	; 0x24
   16edc:	mov	r1, #1
   16ee0:	mov	r2, #1
   16ee4:	mvn	r3, #0
   16ee8:	ldr	r0, [sl]
   16eec:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   16ef0:	cmp	r0, #0
   16ef4:	bne	1dc8c <main@@Base+0xa994>
   16ef8:	mov	r6, r5
   16efc:	cmp	r4, r5
   16f00:	beq	16f3c <main@@Base+0x3c44>
   16f04:	ldrb	r0, [r4]
   16f08:	cmp	r0, #91	; 0x5b
   16f0c:	bne	16f3c <main@@Base+0x3c44>
   16f10:	add	r1, r4, #1
   16f14:	sub	r0, r6, r1
   16f18:	cmp	r0, #2
   16f1c:	blt	186f4 <main@@Base+0x53fc>
   16f20:	ldrb	r0, [r1]
   16f24:	cmp	r0, #32
   16f28:	bls	186e4 <main@@Base+0x53ec>
   16f2c:	mov	r4, r1
   16f30:	cmp	r4, r6
   16f34:	bne	1870c <main@@Base+0x5414>
   16f38:	b	18738 <main@@Base+0x5440>
   16f3c:	mov	r0, sl
   16f40:	mov	r1, r4
   16f44:	mov	r2, r6
   16f48:	mov	r3, #22
   16f4c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   16f50:	ldr	r5, [sp, #40]	; 0x28
   16f54:	mov	r4, r0
   16f58:	ldr	r0, [sl]
   16f5c:	bl	2da48 <flatcc_builder_end_vector@@Base>
   16f60:	cmp	r0, #0
   16f64:	str	r0, [sp, #52]	; 0x34
   16f68:	beq	133b4 <main@@Base+0xbc>
   16f6c:	ldr	r0, [sl]
   16f70:	mov	r1, #24
   16f74:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   16f78:	cmp	r0, #0
   16f7c:	bne	16008 <main@@Base+0x2d10>
   16f80:	b	133b4 <main@@Base+0xbc>
   16f84:	cmp	r0, #34	; 0x22
   16f88:	bne	1beac <main@@Base+0x8bb4>
   16f8c:	add	r1, r8, #18
   16f90:	sub	r0, r6, r1
   16f94:	cmp	r0, #2
   16f98:	blt	19488 <main@@Base+0x6190>
   16f9c:	ldrb	r0, [r1]
   16fa0:	cmp	r0, #32
   16fa4:	bls	19474 <main@@Base+0x617c>
   16fa8:	mov	r8, r1
   16fac:	cmp	r8, r6
   16fb0:	bne	194a0 <main@@Base+0x61a8>
   16fb4:	b	194e0 <main@@Base+0x61e8>
   16fb8:	bne	16fc8 <main@@Base+0x3cd0>
   16fbc:	ldrb	r0, [r7, #2]!
   16fc0:	cmp	r0, #32
   16fc4:	bhi	16fd8 <main@@Base+0x3ce0>
   16fc8:	mov	r0, sl
   16fcc:	mov	r2, r6
   16fd0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   16fd4:	mov	r7, r0
   16fd8:	cmp	r8, r7
   16fdc:	beq	1685c <main@@Base+0x3564>
   16fe0:	mov	r2, r6
   16fe4:	mov	r6, #0
   16fe8:	cmp	r7, r2
   16fec:	str	r6, [fp, #-52]	; 0xffffffcc
   16ff0:	str	r6, [fp, #-56]	; 0xffffffc8
   16ff4:	strh	r6, [fp, #-60]	; 0xffffffc4
   16ff8:	str	r6, [sp, #56]	; 0x38
   16ffc:	beq	17064 <main@@Base+0x3d6c>
   17000:	sub	r0, fp, #56	; 0x38
   17004:	mov	r1, r7
   17008:	add	r3, sp, #56	; 0x38
   1700c:	mov	r8, r2
   17010:	str	r0, [sp]
   17014:	mov	r0, sl
   17018:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1701c:	ldr	r5, [sp, #40]	; 0x28
   17020:	cmp	r0, r7
   17024:	beq	1707c <main@@Base+0x3d84>
   17028:	ldr	r2, [sp, #56]	; 0x38
   1702c:	mov	r4, r0
   17030:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17034:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17038:	cmp	r2, #0
   1703c:	beq	1708c <main@@Base+0x3d94>
   17040:	movw	r2, #32769	; 0x8001
   17044:	subs	r2, r0, r2
   17048:	sbcs	r1, r1, #0
   1704c:	bcc	170bc <main@@Base+0x3dc4>
   17050:	mov	r0, sl
   17054:	mov	r1, r4
   17058:	mov	r2, r8
   1705c:	mov	r3, #8
   17060:	b	170a8 <main@@Base+0x3db0>
   17064:	ldr	r5, [sp, #40]	; 0x28
   17068:	mov	r8, r2
   1706c:	mov	r4, r2
   17070:	cmp	r7, r4
   17074:	bne	17124 <main@@Base+0x3e2c>
   17078:	b	170e0 <main@@Base+0x3de8>
   1707c:	mov	r4, r7
   17080:	cmp	r7, r4
   17084:	bne	17124 <main@@Base+0x3e2c>
   17088:	b	170e0 <main@@Base+0x3de8>
   1708c:	subs	r2, r0, #32768	; 0x8000
   17090:	sbcs	r1, r1, #0
   17094:	bcc	170d0 <main@@Base+0x3dd8>
   17098:	mov	r0, sl
   1709c:	mov	r1, r4
   170a0:	mov	r2, r8
   170a4:	mov	r3, #7
   170a8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   170ac:	mov	r4, r0
   170b0:	cmp	r7, r4
   170b4:	bne	17124 <main@@Base+0x3e2c>
   170b8:	b	170e0 <main@@Base+0x3de8>
   170bc:	rsb	r6, r0, #0
   170c0:	strh	r6, [fp, #-60]	; 0xffffffc4
   170c4:	cmp	r7, r4
   170c8:	bne	17124 <main@@Base+0x3e2c>
   170cc:	b	170e0 <main@@Base+0x3de8>
   170d0:	mov	r6, r0
   170d4:	strh	r6, [fp, #-60]	; 0xffffffc4
   170d8:	cmp	r7, r4
   170dc:	bne	17124 <main@@Base+0x3e2c>
   170e0:	sub	r0, fp, #60	; 0x3c
   170e4:	mov	r1, r7
   170e8:	mov	r2, r8
   170ec:	mov	r6, r8
   170f0:	str	r0, [sp]
   170f4:	movw	r0, #32912	; 0x8090
   170f8:	movt	r0, #4
   170fc:	add	r3, r0, #12
   17100:	mov	r0, sl
   17104:	bl	1f6d4 <main@@Base+0xc3dc>
   17108:	mov	r4, r0
   1710c:	cmp	r0, r7
   17110:	beq	133b4 <main@@Base+0xbc>
   17114:	mov	r8, r6
   17118:	cmp	r4, r6
   1711c:	beq	1dc6c <main@@Base+0xa974>
   17120:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   17124:	uxth	r0, r6
   17128:	cmp	r0, #100	; 0x64
   1712c:	bne	1713c <main@@Base+0x3e44>
   17130:	ldrb	r0, [sl, #8]
   17134:	tst	r0, #2
   17138:	beq	19060 <main@@Base+0x5d68>
   1713c:	ldr	r0, [sl]
   17140:	mov	r1, #2
   17144:	mov	r2, #2
   17148:	mov	r3, #2
   1714c:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   17150:	cmp	r0, #0
   17154:	bne	1905c <main@@Base+0x5d64>
   17158:	b	1dc6c <main@@Base+0xa974>
   1715c:	bne	1716c <main@@Base+0x3e74>
   17160:	ldrb	r0, [r4, #2]!
   17164:	cmp	r0, #32
   17168:	bhi	1717c <main@@Base+0x3e84>
   1716c:	mov	r0, sl
   17170:	mov	r2, r6
   17174:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17178:	mov	r4, r0
   1717c:	cmp	r8, r4
   17180:	beq	1685c <main@@Base+0x3564>
   17184:	ldr	r0, [sl]
   17188:	mov	r1, #0
   1718c:	mov	r2, #32
   17190:	mov	r3, #16
   17194:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   17198:	cmp	r0, #0
   1719c:	str	r0, [sp, #20]
   171a0:	beq	133b4 <main@@Base+0xbc>
   171a4:	ldr	r5, [sp, #40]	; 0x28
   171a8:	cmp	r4, r6
   171ac:	beq	171ec <main@@Base+0x3ef4>
   171b0:	ldrb	r0, [r4]
   171b4:	cmp	r0, #123	; 0x7b
   171b8:	bne	171ec <main@@Base+0x3ef4>
   171bc:	add	r1, r4, #1
   171c0:	sub	r0, r6, r1
   171c4:	cmp	r0, #2
   171c8:	blt	17224 <main@@Base+0x3f2c>
   171cc:	ldrb	r0, [r1]
   171d0:	cmp	r0, #32
   171d4:	bls	17214 <main@@Base+0x3f1c>
   171d8:	mov	r4, r1
   171dc:	cmp	r4, r6
   171e0:	mov	r2, r6
   171e4:	bne	17240 <main@@Base+0x3f48>
   171e8:	b	17280 <main@@Base+0x3f88>
   171ec:	mov	r0, sl
   171f0:	mov	r1, r4
   171f4:	mov	r2, r6
   171f8:	mov	r3, #21
   171fc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   17200:	mov	r4, r0
   17204:	sub	r0, r6, r4
   17208:	cmp	r0, #2
   1720c:	bge	16880 <main@@Base+0x3588>
   17210:	b	19070 <main@@Base+0x5d78>
   17214:	bne	17224 <main@@Base+0x3f2c>
   17218:	ldrb	r0, [r4, #2]!
   1721c:	cmp	r0, #32
   17220:	bhi	17234 <main@@Base+0x3f3c>
   17224:	mov	r0, sl
   17228:	mov	r2, r6
   1722c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17230:	mov	r4, r0
   17234:	cmp	r4, r6
   17238:	mov	r2, r6
   1723c:	beq	17280 <main@@Base+0x3f88>
   17240:	ldrb	r0, [r4]
   17244:	cmp	r0, #125	; 0x7d
   17248:	bne	1727c <main@@Base+0x3f84>
   1724c:	add	r1, r4, #1
   17250:	sub	r0, r6, r1
   17254:	cmp	r0, #2
   17258:	blt	1b2f4 <main@@Base+0x7ffc>
   1725c:	ldrb	r0, [r1]
   17260:	cmp	r0, #32
   17264:	bhi	18050 <main@@Base+0x4d58>
   17268:	bne	1b2f4 <main@@Base+0x7ffc>
   1726c:	ldrb	r0, [r4, #2]!
   17270:	cmp	r0, #32
   17274:	bhi	16874 <main@@Base+0x357c>
   17278:	b	1b2f4 <main@@Base+0x7ffc>
   1727c:	mov	r2, r4
   17280:	ldr	r0, [sp, #20]
   17284:	add	r0, r0, #26
   17288:	str	r0, [sp, #16]
   1728c:	cmp	r2, r6
   17290:	mov	r8, r6
   17294:	beq	172e8 <main@@Base+0x3ff0>
   17298:	ldrb	r0, [r2]
   1729c:	cmp	r0, #46	; 0x2e
   172a0:	beq	172bc <main@@Base+0x3fc4>
   172a4:	cmp	r0, #34	; 0x22
   172a8:	bne	172d8 <main@@Base+0x3fe0>
   172ac:	ldr	r0, [sp, #32]
   172b0:	mov	r1, #0
   172b4:	add	r8, r2, #1
   172b8:	b	172e4 <main@@Base+0x3fec>
   172bc:	mov	r1, r2
   172c0:	mov	r0, sl
   172c4:	mov	r2, r6
   172c8:	mov	r3, #5
   172cc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   172d0:	mov	r8, r0
   172d4:	b	172e8 <main@@Base+0x3ff0>
   172d8:	ldr	r0, [sp, #32]
   172dc:	mov	r1, #1
   172e0:	mov	r8, r2
   172e4:	str	r1, [r0]
   172e8:	sub	ip, r6, r8
   172ec:	mov	r0, #8
   172f0:	cmp	ip, #8
   172f4:	movcc	r0, ip
   172f8:	sub	r7, r0, #1
   172fc:	cmp	r7, #7
   17300:	bhi	17f5c <main@@Base+0x4c64>
   17304:	add	r5, pc, #32
   17308:	mov	r1, #0
   1730c:	mov	lr, #0
   17310:	mov	r9, #0
   17314:	mov	r6, #0
   17318:	mov	r3, #0
   1731c:	mov	r4, #0
   17320:	mov	r0, #0
   17324:	mov	r2, #0
   17328:	ldr	pc, [r5, r7, lsl #2]
   1732c:	muleq	r1, r0, r3
   17330:	andeq	r7, r1, r8, lsl #7
   17334:	andeq	r7, r1, r0, lsl #7
   17338:	andeq	r7, r1, r8, ror r3
   1733c:	andeq	r7, r1, ip, ror #6
   17340:	andeq	r7, r1, r0, ror #6
   17344:	andeq	r7, r1, r0, asr r3
   17348:	andeq	r7, r1, ip, asr #6
   1734c:	ldrb	lr, [r8, #7]
   17350:	ldrb	r0, [r8, #6]
   17354:	mov	r9, r1
   17358:	orr	r0, lr, r0, lsl #8
   1735c:	mov	r1, r0
   17360:	ldrb	r0, [r8, #5]
   17364:	mov	r6, r9
   17368:	orr	r1, r1, r0, lsl #16
   1736c:	ldrb	r0, [r8, #4]
   17370:	mov	r3, r6
   17374:	orr	r1, r1, r0, lsl #24
   17378:	ldrb	r0, [r8, #3]
   1737c:	orr	r4, r0, r3
   17380:	ldrb	r0, [r8, #2]
   17384:	orr	r0, r4, r0, lsl #8
   17388:	ldrb	r2, [r8, #1]
   1738c:	orr	r2, r0, r2, lsl #16
   17390:	ldrb	r0, [r8]
   17394:	movw	r3, #29556	; 0x7374
   17398:	movt	r3, #29797	; 0x7465
   1739c:	orr	r2, r2, r0, lsl #24
   173a0:	mvn	r0, #-855638016	; 0xcd000000
   173a4:	subs	r0, r0, r1
   173a8:	sbcs	r0, r3, r2
   173ac:	bcc	1742c <main@@Base+0x4134>
   173b0:	ldr	r6, [sp, #44]	; 0x2c
   173b4:	and	r1, r1, #-16777216	; 0xff000000
   173b8:	eor	r0, r2, r3
   173bc:	eor	r2, r1, #822083584	; 0x31000000
   173c0:	orrs	r2, r2, r0
   173c4:	beq	1750c <main@@Base+0x4214>
   173c8:	eor	r1, r1, #838860800	; 0x32000000
   173cc:	orrs	r0, r1, r0
   173d0:	bne	17f5c <main@@Base+0x4c64>
   173d4:	cmp	ip, #6
   173d8:	mov	r6, r8
   173dc:	blt	179d4 <main@@Base+0x46dc>
   173e0:	ldr	r2, [sp, #32]
   173e4:	mov	r1, r8
   173e8:	ldrb	r0, [r1, #5]!
   173ec:	ldr	r2, [r2]
   173f0:	cmp	r2, #0
   173f4:	beq	17620 <main@@Base+0x4328>
   173f8:	cmp	r0, #33	; 0x21
   173fc:	bcc	1740c <main@@Base+0x4114>
   17400:	cmp	r0, #58	; 0x3a
   17404:	mov	r6, r8
   17408:	bne	179d4 <main@@Base+0x46dc>
   1740c:	ldr	r0, [sp, #32]
   17410:	mov	r2, #0
   17414:	str	r2, [r0]
   17418:	ldr	r4, [sp, #44]	; 0x2c
   1741c:	sub	r0, r4, r1
   17420:	cmp	r0, #2
   17424:	bge	17640 <main@@Base+0x4348>
   17428:	b	17724 <main@@Base+0x442c>
   1742c:	ldr	r6, [sp, #44]	; 0x2c
   17430:	cmn	r2, #-2013265919	; 0x88000001
   17434:	bhi	174a0 <main@@Base+0x41a8>
   17438:	and	r1, r1, #-16777216	; 0xff000000
   1743c:	eor	r0, r2, r3
   17440:	eor	r1, r1, #855638016	; 0x33000000
   17444:	orrs	r0, r1, r0
   17448:	bne	17f5c <main@@Base+0x4c64>
   1744c:	cmp	ip, #6
   17450:	mov	r1, r8
   17454:	blt	17d34 <main@@Base+0x4a3c>
   17458:	ldr	r1, [sp, #32]
   1745c:	mov	r2, r8
   17460:	ldrb	r0, [r2, #5]!
   17464:	ldr	r1, [r1]
   17468:	cmp	r1, #0
   1746c:	beq	17698 <main@@Base+0x43a0>
   17470:	cmp	r0, #33	; 0x21
   17474:	bcc	17484 <main@@Base+0x418c>
   17478:	cmp	r0, #58	; 0x3a
   1747c:	mov	r1, r8
   17480:	bne	17d34 <main@@Base+0x4a3c>
   17484:	ldr	r0, [sp, #32]
   17488:	mov	r1, #0
   1748c:	str	r1, [r0]
   17490:	sub	r0, r6, r2
   17494:	cmp	r0, #2
   17498:	bge	176b4 <main@@Base+0x43bc>
   1749c:	b	178b0 <main@@Base+0x45b8>
   174a0:	lsr	r1, r2, #24
   174a4:	and	r0, r2, #-16777216	; 0xff000000
   174a8:	cmp	r1, #120	; 0x78
   174ac:	bhi	17560 <main@@Base+0x4268>
   174b0:	teq	r0, #2013265920	; 0x78000000
   174b4:	bne	17f5c <main@@Base+0x4c64>
   174b8:	cmp	ip, #2
   174bc:	mov	r7, r8
   174c0:	blt	17d78 <main@@Base+0x4a80>
   174c4:	ldr	r2, [sp, #32]
   174c8:	mov	r1, r8
   174cc:	ldrb	r0, [r1, #1]!
   174d0:	ldr	r2, [r2]
   174d4:	cmp	r2, #0
   174d8:	beq	176d0 <main@@Base+0x43d8>
   174dc:	cmp	r0, #33	; 0x21
   174e0:	bcc	174f0 <main@@Base+0x41f8>
   174e4:	cmp	r0, #58	; 0x3a
   174e8:	mov	r7, r8
   174ec:	bne	17d78 <main@@Base+0x4a80>
   174f0:	ldr	r0, [sp, #32]
   174f4:	mov	r2, #0
   174f8:	str	r2, [r0]
   174fc:	sub	r0, r6, r1
   17500:	cmp	r0, #2
   17504:	bge	176ec <main@@Base+0x43f4>
   17508:	b	17938 <main@@Base+0x4640>
   1750c:	cmp	ip, #6
   17510:	mov	r7, r8
   17514:	blt	17b54 <main@@Base+0x485c>
   17518:	ldr	r2, [sp, #32]
   1751c:	mov	r1, r8
   17520:	ldrb	r0, [r1, #5]!
   17524:	ldr	r2, [r2]
   17528:	cmp	r2, #0
   1752c:	beq	17660 <main@@Base+0x4368>
   17530:	cmp	r0, #33	; 0x21
   17534:	bcc	17544 <main@@Base+0x424c>
   17538:	cmp	r0, #58	; 0x3a
   1753c:	mov	r7, r8
   17540:	bne	17b54 <main@@Base+0x485c>
   17544:	ldr	r0, [sp, #32]
   17548:	mov	r2, #0
   1754c:	str	r2, [r0]
   17550:	sub	r0, r6, r1
   17554:	cmp	r0, #2
   17558:	bge	1767c <main@@Base+0x4384>
   1755c:	b	177ac <main@@Base+0x44b4>
   17560:	teq	r0, #2030043136	; 0x79000000
   17564:	beq	175c8 <main@@Base+0x42d0>
   17568:	teq	r0, #2046820352	; 0x7a000000
   1756c:	bne	17f5c <main@@Base+0x4c64>
   17570:	cmp	ip, #2
   17574:	mov	r7, r8
   17578:	blt	17e24 <main@@Base+0x4b2c>
   1757c:	ldr	r2, [sp, #32]
   17580:	mov	r1, r8
   17584:	ldrb	r0, [r1, #1]!
   17588:	ldr	r2, [r2]
   1758c:	cmp	r2, #0
   17590:	beq	1781c <main@@Base+0x4524>
   17594:	cmp	r0, #33	; 0x21
   17598:	bcc	175a8 <main@@Base+0x42b0>
   1759c:	cmp	r0, #58	; 0x3a
   175a0:	mov	r7, r8
   175a4:	bne	17e24 <main@@Base+0x4b2c>
   175a8:	ldr	r0, [sp, #32]
   175ac:	mov	r2, #0
   175b0:	str	r2, [r0]
   175b4:	ldr	r4, [sp, #44]	; 0x2c
   175b8:	sub	r0, r4, r1
   175bc:	cmp	r0, #2
   175c0:	bge	1783c <main@@Base+0x4544>
   175c4:	b	17bf0 <main@@Base+0x48f8>
   175c8:	cmp	ip, #2
   175cc:	mov	r7, r8
   175d0:	blt	17ed4 <main@@Base+0x4bdc>
   175d4:	ldr	r2, [sp, #32]
   175d8:	mov	r1, r8
   175dc:	ldrb	r0, [r1, #1]!
   175e0:	ldr	r2, [r2]
   175e4:	cmp	r2, #0
   175e8:	beq	1785c <main@@Base+0x4564>
   175ec:	cmp	r0, #33	; 0x21
   175f0:	bcc	17600 <main@@Base+0x4308>
   175f4:	cmp	r0, #58	; 0x3a
   175f8:	mov	r7, r8
   175fc:	bne	17ed4 <main@@Base+0x4bdc>
   17600:	ldr	r0, [sp, #32]
   17604:	mov	r2, #0
   17608:	str	r2, [r0]
   1760c:	ldr	r4, [sp, #44]	; 0x2c
   17610:	sub	r0, r4, r1
   17614:	cmp	r0, #2
   17618:	bge	1787c <main@@Base+0x4584>
   1761c:	b	17c88 <main@@Base+0x4990>
   17620:	cmp	r0, #34	; 0x22
   17624:	mov	r6, r8
   17628:	bne	179d4 <main@@Base+0x46dc>
   1762c:	add	r1, r8, #6
   17630:	ldr	r4, [sp, #44]	; 0x2c
   17634:	sub	r0, r4, r1
   17638:	cmp	r0, #2
   1763c:	blt	17724 <main@@Base+0x442c>
   17640:	ldrb	r0, [r1]
   17644:	cmp	r0, #32
   17648:	bls	1770c <main@@Base+0x4414>
   1764c:	ldr	r4, [sp, #44]	; 0x2c
   17650:	mov	r6, r1
   17654:	cmp	r6, r4
   17658:	bne	1773c <main@@Base+0x4444>
   1765c:	b	17780 <main@@Base+0x4488>
   17660:	cmp	r0, #34	; 0x22
   17664:	mov	r7, r8
   17668:	bne	17b54 <main@@Base+0x485c>
   1766c:	add	r1, r8, #6
   17670:	sub	r0, r6, r1
   17674:	cmp	r0, #2
   17678:	blt	177ac <main@@Base+0x44b4>
   1767c:	ldrb	r0, [r1]
   17680:	cmp	r0, #32
   17684:	bls	17798 <main@@Base+0x44a0>
   17688:	mov	r7, r1
   1768c:	cmp	r7, r6
   17690:	bne	177c4 <main@@Base+0x44cc>
   17694:	b	17804 <main@@Base+0x450c>
   17698:	cmp	r0, #34	; 0x22
   1769c:	mov	r1, r8
   176a0:	bne	17d34 <main@@Base+0x4a3c>
   176a4:	add	r2, r8, #6
   176a8:	sub	r0, r6, r2
   176ac:	cmp	r0, #2
   176b0:	blt	178b0 <main@@Base+0x45b8>
   176b4:	ldrb	r0, [r2]
   176b8:	cmp	r0, #32
   176bc:	bls	1789c <main@@Base+0x45a4>
   176c0:	mov	r1, r2
   176c4:	cmp	r1, r6
   176c8:	bne	178cc <main@@Base+0x45d4>
   176cc:	b	1790c <main@@Base+0x4614>
   176d0:	cmp	r0, #34	; 0x22
   176d4:	mov	r7, r8
   176d8:	bne	17d78 <main@@Base+0x4a80>
   176dc:	add	r1, r8, #2
   176e0:	sub	r0, r6, r1
   176e4:	cmp	r0, #2
   176e8:	blt	17938 <main@@Base+0x4640>
   176ec:	ldrb	r0, [r1]
   176f0:	cmp	r0, #32
   176f4:	bls	17920 <main@@Base+0x4628>
   176f8:	ldr	r6, [sp, #44]	; 0x2c
   176fc:	mov	r7, r1
   17700:	cmp	r7, r6
   17704:	bne	17950 <main@@Base+0x4658>
   17708:	b	17994 <main@@Base+0x469c>
   1770c:	ldr	r4, [sp, #44]	; 0x2c
   17710:	bne	17724 <main@@Base+0x442c>
   17714:	mov	r6, r1
   17718:	ldrb	r0, [r6, #1]!
   1771c:	cmp	r0, #32
   17720:	bhi	17734 <main@@Base+0x443c>
   17724:	mov	r0, sl
   17728:	mov	r2, r4
   1772c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17730:	mov	r6, r0
   17734:	cmp	r6, r4
   17738:	beq	17780 <main@@Base+0x4488>
   1773c:	ldrb	r0, [r6]
   17740:	cmp	r0, #58	; 0x3a
   17744:	bne	17780 <main@@Base+0x4488>
   17748:	ldr	r0, [sp, #44]	; 0x2c
   1774c:	add	r1, r6, #1
   17750:	sub	r0, r0, r1
   17754:	cmp	r0, #2
   17758:	blt	179c4 <main@@Base+0x46cc>
   1775c:	ldrb	r0, [r1]
   17760:	cmp	r0, #32
   17764:	bls	179b0 <main@@Base+0x46b8>
   17768:	ldr	sl, [sp, #36]	; 0x24
   1776c:	mov	r6, r1
   17770:	cmp	r8, r6
   17774:	bne	179dc <main@@Base+0x46e4>
   17778:	ldr	r6, [sp, #44]	; 0x2c
   1777c:	b	17f5c <main@@Base+0x4c64>
   17780:	ldr	r2, [sp, #44]	; 0x2c
   17784:	mov	r0, sl
   17788:	mov	r1, r6
   1778c:	mov	r3, #4
   17790:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   17794:	b	179d0 <main@@Base+0x46d8>
   17798:	bne	177ac <main@@Base+0x44b4>
   1779c:	mov	r7, r1
   177a0:	ldrb	r0, [r7, #1]!
   177a4:	cmp	r0, #32
   177a8:	bhi	177bc <main@@Base+0x44c4>
   177ac:	mov	r0, sl
   177b0:	mov	r2, r6
   177b4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   177b8:	mov	r7, r0
   177bc:	cmp	r7, r6
   177c0:	beq	17804 <main@@Base+0x450c>
   177c4:	ldrb	r0, [r7]
   177c8:	cmp	r0, #58	; 0x3a
   177cc:	bne	17804 <main@@Base+0x450c>
   177d0:	add	r1, r7, #1
   177d4:	sub	r0, r6, r1
   177d8:	cmp	r0, #2
   177dc:	blt	17b44 <main@@Base+0x484c>
   177e0:	ldrb	r0, [r1]
   177e4:	cmp	r0, #32
   177e8:	bls	17b2c <main@@Base+0x4834>
   177ec:	ldr	r6, [sp, #44]	; 0x2c
   177f0:	ldr	sl, [sp, #36]	; 0x24
   177f4:	mov	r7, r1
   177f8:	cmp	r8, r7
   177fc:	bne	17b5c <main@@Base+0x4864>
   17800:	b	17f5c <main@@Base+0x4c64>
   17804:	mov	r0, sl
   17808:	mov	r1, r7
   1780c:	mov	r2, r6
   17810:	mov	r3, #4
   17814:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   17818:	b	17b50 <main@@Base+0x4858>
   1781c:	cmp	r0, #34	; 0x22
   17820:	mov	r7, r8
   17824:	bne	17e24 <main@@Base+0x4b2c>
   17828:	add	r1, r8, #2
   1782c:	ldr	r4, [sp, #44]	; 0x2c
   17830:	sub	r0, r4, r1
   17834:	cmp	r0, #2
   17838:	blt	17bf0 <main@@Base+0x48f8>
   1783c:	ldrb	r0, [r1]
   17840:	cmp	r0, #32
   17844:	bls	17bd8 <main@@Base+0x48e0>
   17848:	ldr	r4, [sp, #44]	; 0x2c
   1784c:	mov	r7, r1
   17850:	cmp	r7, r4
   17854:	bne	17c08 <main@@Base+0x4910>
   17858:	b	17c50 <main@@Base+0x4958>
   1785c:	cmp	r0, #34	; 0x22
   17860:	mov	r7, r8
   17864:	bne	17ed4 <main@@Base+0x4bdc>
   17868:	add	r1, r8, #2
   1786c:	ldr	r4, [sp, #44]	; 0x2c
   17870:	sub	r0, r4, r1
   17874:	cmp	r0, #2
   17878:	blt	17c88 <main@@Base+0x4990>
   1787c:	ldrb	r0, [r1]
   17880:	cmp	r0, #32
   17884:	bls	17c70 <main@@Base+0x4978>
   17888:	ldr	r4, [sp, #44]	; 0x2c
   1788c:	mov	r7, r1
   17890:	cmp	r7, r4
   17894:	bne	17ca0 <main@@Base+0x49a8>
   17898:	b	17ce8 <main@@Base+0x49f0>
   1789c:	bne	178b0 <main@@Base+0x45b8>
   178a0:	mov	r1, r2
   178a4:	ldrb	r0, [r1, #1]!
   178a8:	cmp	r0, #32
   178ac:	bhi	178c4 <main@@Base+0x45cc>
   178b0:	mov	r1, r2
   178b4:	mov	r0, sl
   178b8:	mov	r2, r6
   178bc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   178c0:	mov	r1, r0
   178c4:	cmp	r1, r6
   178c8:	beq	1790c <main@@Base+0x4614>
   178cc:	ldrb	r0, [r1]
   178d0:	cmp	r0, #58	; 0x3a
   178d4:	bne	1790c <main@@Base+0x4614>
   178d8:	add	r2, r1, #1
   178dc:	sub	r0, r6, r2
   178e0:	cmp	r0, #2
   178e4:	blt	17d20 <main@@Base+0x4a28>
   178e8:	ldrb	r0, [r2]
   178ec:	cmp	r0, #32
   178f0:	bls	17d08 <main@@Base+0x4a10>
   178f4:	ldr	r6, [sp, #44]	; 0x2c
   178f8:	ldr	sl, [sp, #36]	; 0x24
   178fc:	mov	r1, r2
   17900:	cmp	r8, r1
   17904:	bne	17d3c <main@@Base+0x4a44>
   17908:	b	17f5c <main@@Base+0x4c64>
   1790c:	mov	r0, sl
   17910:	mov	r2, r6
   17914:	mov	r3, #4
   17918:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1791c:	b	17d30 <main@@Base+0x4a38>
   17920:	ldr	r6, [sp, #44]	; 0x2c
   17924:	bne	17938 <main@@Base+0x4640>
   17928:	mov	r7, r1
   1792c:	ldrb	r0, [r7, #1]!
   17930:	cmp	r0, #32
   17934:	bhi	17948 <main@@Base+0x4650>
   17938:	ldr	r0, [sp, #36]	; 0x24
   1793c:	mov	r2, r6
   17940:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17944:	mov	r7, r0
   17948:	cmp	r7, r6
   1794c:	beq	17994 <main@@Base+0x469c>
   17950:	ldrb	r0, [r7]
   17954:	cmp	r0, #58	; 0x3a
   17958:	bne	17994 <main@@Base+0x469c>
   1795c:	ldr	sl, [sp, #36]	; 0x24
   17960:	add	r1, r7, #1
   17964:	sub	r0, r6, r1
   17968:	cmp	r0, #2
   1796c:	blt	17d68 <main@@Base+0x4a70>
   17970:	ldrb	r0, [r1]
   17974:	cmp	r0, #32
   17978:	bls	17d50 <main@@Base+0x4a58>
   1797c:	ldr	r6, [sp, #44]	; 0x2c
   17980:	ldr	sl, [sp, #36]	; 0x24
   17984:	mov	r7, r1
   17988:	cmp	r8, r7
   1798c:	bne	17d80 <main@@Base+0x4a88>
   17990:	b	17f5c <main@@Base+0x4c64>
   17994:	ldr	sl, [sp, #36]	; 0x24
   17998:	mov	r1, r7
   1799c:	mov	r2, r6
   179a0:	mov	r3, #4
   179a4:	mov	r0, sl
   179a8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   179ac:	b	17d74 <main@@Base+0x4a7c>
   179b0:	ldr	sl, [sp, #36]	; 0x24
   179b4:	bne	179c4 <main@@Base+0x46cc>
   179b8:	ldrb	r0, [r6, #2]!
   179bc:	cmp	r0, #32
   179c0:	bhi	179d4 <main@@Base+0x46dc>
   179c4:	ldr	r2, [sp, #44]	; 0x2c
   179c8:	mov	r0, sl
   179cc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   179d0:	mov	r6, r0
   179d4:	cmp	r8, r6
   179d8:	beq	17778 <main@@Base+0x4480>
   179dc:	ldr	r2, [sp, #44]	; 0x2c
   179e0:	mov	r4, #0
   179e4:	str	r4, [fp, #-52]	; 0xffffffcc
   179e8:	str	r4, [fp, #-56]	; 0xffffffc8
   179ec:	strb	r4, [fp, #-60]	; 0xffffffc4
   179f0:	str	r4, [sp, #56]	; 0x38
   179f4:	cmp	r6, r2
   179f8:	beq	17a50 <main@@Base+0x4758>
   179fc:	sub	r0, fp, #56	; 0x38
   17a00:	mov	r1, r6
   17a04:	add	r3, sp, #56	; 0x38
   17a08:	str	r0, [sp]
   17a0c:	mov	r0, sl
   17a10:	bl	323e8 <flatcc_json_parser_integer@@Base>
   17a14:	cmp	r0, r6
   17a18:	beq	17a64 <main@@Base+0x476c>
   17a1c:	ldr	r3, [sp, #56]	; 0x38
   17a20:	mov	r1, r0
   17a24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17a28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17a2c:	cmp	r3, #0
   17a30:	beq	17a78 <main@@Base+0x4780>
   17a34:	subs	r3, r0, #129	; 0x81
   17a38:	sbcs	r2, r2, #0
   17a3c:	bcc	17aa8 <main@@Base+0x47b0>
   17a40:	ldr	r2, [sp, #44]	; 0x2c
   17a44:	mov	r0, sl
   17a48:	mov	r3, #8
   17a4c:	b	17a90 <main@@Base+0x4798>
   17a50:	mov	r1, r2
   17a54:	ldr	r5, [sp, #40]	; 0x28
   17a58:	cmp	r6, r1
   17a5c:	bne	17b10 <main@@Base+0x4818>
   17a60:	b	17ad4 <main@@Base+0x47dc>
   17a64:	mov	r1, r6
   17a68:	ldr	r5, [sp, #40]	; 0x28
   17a6c:	cmp	r6, r1
   17a70:	bne	17b10 <main@@Base+0x4818>
   17a74:	b	17ad4 <main@@Base+0x47dc>
   17a78:	subs	r3, r0, #128	; 0x80
   17a7c:	sbcs	r2, r2, #0
   17a80:	bcc	17ac0 <main@@Base+0x47c8>
   17a84:	ldr	r2, [sp, #44]	; 0x2c
   17a88:	mov	r0, sl
   17a8c:	mov	r3, #7
   17a90:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   17a94:	mov	r1, r0
   17a98:	ldr	r5, [sp, #40]	; 0x28
   17a9c:	cmp	r6, r1
   17aa0:	bne	17b10 <main@@Base+0x4818>
   17aa4:	b	17ad4 <main@@Base+0x47dc>
   17aa8:	rsb	r4, r0, #0
   17aac:	strb	r4, [fp, #-60]	; 0xffffffc4
   17ab0:	ldr	r5, [sp, #40]	; 0x28
   17ab4:	cmp	r6, r1
   17ab8:	bne	17b10 <main@@Base+0x4818>
   17abc:	b	17ad4 <main@@Base+0x47dc>
   17ac0:	mov	r4, r0
   17ac4:	strb	r4, [fp, #-60]	; 0xffffffc4
   17ac8:	ldr	r5, [sp, #40]	; 0x28
   17acc:	cmp	r6, r1
   17ad0:	bne	17b10 <main@@Base+0x4818>
   17ad4:	sub	r0, fp, #60	; 0x3c
   17ad8:	ldr	r4, [sp, #44]	; 0x2c
   17adc:	mov	r1, r6
   17ae0:	str	r0, [sp]
   17ae4:	movw	r0, #33392	; 0x8270
   17ae8:	movt	r0, #4
   17aec:	add	r3, r0, #80	; 0x50
   17af0:	mov	r0, sl
   17af4:	mov	r2, r4
   17af8:	bl	1f1e0 <main@@Base+0xbee8>
   17afc:	mov	r1, r0
   17b00:	cmp	r0, r6
   17b04:	cmpne	r1, r4
   17b08:	beq	18064 <main@@Base+0x4d6c>
   17b0c:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   17b10:	ldr	r0, [sp, #20]
   17b14:	ldr	r6, [sp, #44]	; 0x2c
   17b18:	strb	r4, [r0, #24]
   17b1c:	sub	r0, r6, r1
   17b20:	cmp	r0, #2
   17b24:	bge	17f80 <main@@Base+0x4c88>
   17b28:	b	17fb0 <main@@Base+0x4cb8>
   17b2c:	ldr	r6, [sp, #44]	; 0x2c
   17b30:	ldr	sl, [sp, #36]	; 0x24
   17b34:	bne	17b44 <main@@Base+0x484c>
   17b38:	ldrb	r0, [r7, #2]!
   17b3c:	cmp	r0, #32
   17b40:	bhi	17b54 <main@@Base+0x485c>
   17b44:	mov	r0, sl
   17b48:	mov	r2, r6
   17b4c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17b50:	mov	r7, r0
   17b54:	cmp	r8, r7
   17b58:	beq	17f5c <main@@Base+0x4c64>
   17b5c:	mov	r0, #0
   17b60:	mov	r1, r7
   17b64:	mov	r2, r6
   17b68:	sub	r3, fp, #56	; 0x38
   17b6c:	str	r0, [fp, #-52]	; 0xffffffcc
   17b70:	str	r0, [fp, #-56]	; 0xffffffc8
   17b74:	mov	r0, sl
   17b78:	bl	31878 <flatcc_json_parser_double@@Base>
   17b7c:	ldr	r5, [sp, #40]	; 0x28
   17b80:	mov	r1, r0
   17b84:	cmp	r7, r0
   17b88:	bne	17bbc <main@@Base+0x48c4>
   17b8c:	movw	r3, #33152	; 0x8180
   17b90:	sub	r0, fp, #56	; 0x38
   17b94:	mov	r1, r7
   17b98:	mov	r2, r6
   17b9c:	movt	r3, #4
   17ba0:	str	r0, [sp]
   17ba4:	mov	r0, sl
   17ba8:	bl	24820 <main@@Base+0x11528>
   17bac:	mov	r1, r0
   17bb0:	cmp	r0, r7
   17bb4:	cmpne	r1, r6
   17bb8:	beq	18064 <main@@Base+0x4d6c>
   17bbc:	vldr	d16, [fp, #-56]	; 0xffffffc8
   17bc0:	ldr	r0, [sp, #20]
   17bc4:	vstr	d16, [r0, #16]
   17bc8:	sub	r0, r6, r1
   17bcc:	cmp	r0, #2
   17bd0:	bge	17f80 <main@@Base+0x4c88>
   17bd4:	b	17fb0 <main@@Base+0x4cb8>
   17bd8:	ldr	r4, [sp, #44]	; 0x2c
   17bdc:	bne	17bf0 <main@@Base+0x48f8>
   17be0:	mov	r7, r1
   17be4:	ldrb	r0, [r7, #1]!
   17be8:	cmp	r0, #32
   17bec:	bhi	17c00 <main@@Base+0x4908>
   17bf0:	ldr	r0, [sp, #36]	; 0x24
   17bf4:	mov	r2, r4
   17bf8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17bfc:	mov	r7, r0
   17c00:	cmp	r7, r4
   17c04:	beq	17c50 <main@@Base+0x4958>
   17c08:	ldrb	r0, [r7]
   17c0c:	cmp	r0, #58	; 0x3a
   17c10:	bne	17c50 <main@@Base+0x4958>
   17c14:	ldr	r6, [sp, #44]	; 0x2c
   17c18:	ldr	sl, [sp, #36]	; 0x24
   17c1c:	add	r1, r7, #1
   17c20:	sub	r0, r6, r1
   17c24:	cmp	r0, #2
   17c28:	blt	17e14 <main@@Base+0x4b1c>
   17c2c:	ldrb	r0, [r1]
   17c30:	cmp	r0, #32
   17c34:	bls	17dfc <main@@Base+0x4b04>
   17c38:	ldr	r6, [sp, #44]	; 0x2c
   17c3c:	ldr	sl, [sp, #36]	; 0x24
   17c40:	mov	r7, r1
   17c44:	cmp	r8, r7
   17c48:	bne	17e2c <main@@Base+0x4b34>
   17c4c:	b	17f5c <main@@Base+0x4c64>
   17c50:	ldr	sl, [sp, #36]	; 0x24
   17c54:	ldr	r6, [sp, #44]	; 0x2c
   17c58:	mov	r1, r7
   17c5c:	mov	r3, #4
   17c60:	mov	r0, sl
   17c64:	mov	r2, r6
   17c68:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   17c6c:	b	17e20 <main@@Base+0x4b28>
   17c70:	ldr	r4, [sp, #44]	; 0x2c
   17c74:	bne	17c88 <main@@Base+0x4990>
   17c78:	mov	r7, r1
   17c7c:	ldrb	r0, [r7, #1]!
   17c80:	cmp	r0, #32
   17c84:	bhi	17c98 <main@@Base+0x49a0>
   17c88:	ldr	r0, [sp, #36]	; 0x24
   17c8c:	mov	r2, r4
   17c90:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17c94:	mov	r7, r0
   17c98:	cmp	r7, r4
   17c9c:	beq	17ce8 <main@@Base+0x49f0>
   17ca0:	ldrb	r0, [r7]
   17ca4:	cmp	r0, #58	; 0x3a
   17ca8:	bne	17ce8 <main@@Base+0x49f0>
   17cac:	ldr	r6, [sp, #44]	; 0x2c
   17cb0:	ldr	sl, [sp, #36]	; 0x24
   17cb4:	add	r1, r7, #1
   17cb8:	sub	r0, r6, r1
   17cbc:	cmp	r0, #2
   17cc0:	blt	17ec4 <main@@Base+0x4bcc>
   17cc4:	ldrb	r0, [r1]
   17cc8:	cmp	r0, #32
   17ccc:	bls	17eac <main@@Base+0x4bb4>
   17cd0:	ldr	r6, [sp, #44]	; 0x2c
   17cd4:	ldr	sl, [sp, #36]	; 0x24
   17cd8:	mov	r7, r1
   17cdc:	cmp	r8, r7
   17ce0:	bne	17edc <main@@Base+0x4be4>
   17ce4:	b	17f5c <main@@Base+0x4c64>
   17ce8:	ldr	sl, [sp, #36]	; 0x24
   17cec:	ldr	r6, [sp, #44]	; 0x2c
   17cf0:	mov	r1, r7
   17cf4:	mov	r3, #4
   17cf8:	mov	r0, sl
   17cfc:	mov	r2, r6
   17d00:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   17d04:	b	17ed0 <main@@Base+0x4bd8>
   17d08:	ldr	r6, [sp, #44]	; 0x2c
   17d0c:	ldr	sl, [sp, #36]	; 0x24
   17d10:	bne	17d20 <main@@Base+0x4a28>
   17d14:	ldrb	r0, [r1, #2]!
   17d18:	cmp	r0, #32
   17d1c:	bhi	17d34 <main@@Base+0x4a3c>
   17d20:	mov	r1, r2
   17d24:	mov	r0, sl
   17d28:	mov	r2, r6
   17d2c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17d30:	mov	r1, r0
   17d34:	cmp	r8, r1
   17d38:	beq	17f5c <main@@Base+0x4c64>
   17d3c:	ldr	r3, [sp, #16]
   17d40:	mov	r0, sl
   17d44:	mov	r2, r6
   17d48:	bl	1f95c <main@@Base+0xc664>
   17d4c:	b	17f6c <main@@Base+0x4c74>
   17d50:	ldr	r6, [sp, #44]	; 0x2c
   17d54:	ldr	sl, [sp, #36]	; 0x24
   17d58:	bne	17d68 <main@@Base+0x4a70>
   17d5c:	ldrb	r0, [r7, #2]!
   17d60:	cmp	r0, #32
   17d64:	bhi	17d78 <main@@Base+0x4a80>
   17d68:	mov	r0, sl
   17d6c:	mov	r2, r6
   17d70:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17d74:	mov	r7, r0
   17d78:	cmp	r8, r7
   17d7c:	beq	17f5c <main@@Base+0x4c64>
   17d80:	mov	r0, #0
   17d84:	mov	r1, r7
   17d88:	mov	r2, r6
   17d8c:	sub	r3, fp, #56	; 0x38
   17d90:	str	r0, [fp, #-56]	; 0xffffffc8
   17d94:	mov	r0, sl
   17d98:	bl	32298 <flatcc_json_parser_float@@Base>
   17d9c:	ldr	r5, [sp, #40]	; 0x28
   17da0:	mov	r1, r0
   17da4:	cmp	r7, r0
   17da8:	bne	17de0 <main@@Base+0x4ae8>
   17dac:	sub	r0, fp, #56	; 0x38
   17db0:	mov	r1, r7
   17db4:	mov	r2, r6
   17db8:	str	r0, [sp]
   17dbc:	movw	r0, #33152	; 0x8180
   17dc0:	movt	r0, #4
   17dc4:	add	r3, r0, #12
   17dc8:	mov	r0, sl
   17dcc:	bl	23c48 <main@@Base+0x10950>
   17dd0:	mov	r1, r0
   17dd4:	cmp	r0, r7
   17dd8:	cmpne	r1, r6
   17ddc:	beq	18064 <main@@Base+0x4d6c>
   17de0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17de4:	ldr	r2, [sp, #20]
   17de8:	str	r0, [r2]
   17dec:	sub	r0, r6, r1
   17df0:	cmp	r0, #2
   17df4:	bge	17f80 <main@@Base+0x4c88>
   17df8:	b	17fb0 <main@@Base+0x4cb8>
   17dfc:	ldr	r6, [sp, #44]	; 0x2c
   17e00:	ldr	sl, [sp, #36]	; 0x24
   17e04:	bne	17e14 <main@@Base+0x4b1c>
   17e08:	ldrb	r0, [r7, #2]!
   17e0c:	cmp	r0, #32
   17e10:	bhi	17e24 <main@@Base+0x4b2c>
   17e14:	mov	r0, sl
   17e18:	mov	r2, r6
   17e1c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17e20:	mov	r7, r0
   17e24:	cmp	r8, r7
   17e28:	beq	17f5c <main@@Base+0x4c64>
   17e2c:	mov	r0, #0
   17e30:	mov	r1, r7
   17e34:	mov	r2, r6
   17e38:	sub	r3, fp, #56	; 0x38
   17e3c:	str	r0, [fp, #-56]	; 0xffffffc8
   17e40:	mov	r0, sl
   17e44:	bl	32298 <flatcc_json_parser_float@@Base>
   17e48:	mov	r1, r0
   17e4c:	cmp	r7, r0
   17e50:	bne	17e8c <main@@Base+0x4b94>
   17e54:	sub	r0, fp, #56	; 0x38
   17e58:	mov	r1, r7
   17e5c:	mov	r2, r6
   17e60:	str	r0, [sp]
   17e64:	movw	r0, #33152	; 0x8180
   17e68:	movt	r0, #4
   17e6c:	add	r3, r0, #24
   17e70:	mov	r0, sl
   17e74:	bl	23c48 <main@@Base+0x10950>
   17e78:	mov	r1, r0
   17e7c:	cmp	r0, r7
   17e80:	cmpne	r1, r6
   17e84:	beq	18064 <main@@Base+0x4d6c>
   17e88:	ldr	sl, [sp, #36]	; 0x24
   17e8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17e90:	ldr	r2, [sp, #20]
   17e94:	str	r0, [r2, #8]
   17e98:	ldr	r5, [sp, #40]	; 0x28
   17e9c:	sub	r0, r6, r1
   17ea0:	cmp	r0, #2
   17ea4:	bge	17f80 <main@@Base+0x4c88>
   17ea8:	b	17fb0 <main@@Base+0x4cb8>
   17eac:	ldr	r6, [sp, #44]	; 0x2c
   17eb0:	ldr	sl, [sp, #36]	; 0x24
   17eb4:	bne	17ec4 <main@@Base+0x4bcc>
   17eb8:	ldrb	r0, [r7, #2]!
   17ebc:	cmp	r0, #32
   17ec0:	bhi	17ed4 <main@@Base+0x4bdc>
   17ec4:	mov	r0, sl
   17ec8:	mov	r2, r6
   17ecc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17ed0:	mov	r7, r0
   17ed4:	cmp	r8, r7
   17ed8:	beq	17f5c <main@@Base+0x4c64>
   17edc:	mov	r0, #0
   17ee0:	mov	r1, r7
   17ee4:	mov	r2, r6
   17ee8:	sub	r3, fp, #56	; 0x38
   17eec:	str	r0, [fp, #-56]	; 0xffffffc8
   17ef0:	mov	r0, sl
   17ef4:	bl	32298 <flatcc_json_parser_float@@Base>
   17ef8:	mov	r1, r0
   17efc:	cmp	r7, r0
   17f00:	bne	17f3c <main@@Base+0x4c44>
   17f04:	sub	r0, fp, #56	; 0x38
   17f08:	mov	r1, r7
   17f0c:	mov	r2, r6
   17f10:	str	r0, [sp]
   17f14:	movw	r0, #33152	; 0x8180
   17f18:	movt	r0, #4
   17f1c:	add	r3, r0, #36	; 0x24
   17f20:	mov	r0, sl
   17f24:	bl	23c48 <main@@Base+0x10950>
   17f28:	mov	r1, r0
   17f2c:	cmp	r0, r7
   17f30:	cmpne	r1, r6
   17f34:	beq	18064 <main@@Base+0x4d6c>
   17f38:	ldr	sl, [sp, #36]	; 0x24
   17f3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17f40:	ldr	r2, [sp, #20]
   17f44:	str	r0, [r2, #4]
   17f48:	ldr	r5, [sp, #40]	; 0x28
   17f4c:	sub	r0, r6, r1
   17f50:	cmp	r0, #2
   17f54:	blt	17fb0 <main@@Base+0x4cb8>
   17f58:	b	17f80 <main@@Base+0x4c88>
   17f5c:	mov	r0, sl
   17f60:	mov	r1, r8
   17f64:	mov	r2, r6
   17f68:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   17f6c:	mov	r1, r0
   17f70:	ldr	r5, [sp, #40]	; 0x28
   17f74:	sub	r0, r6, r1
   17f78:	cmp	r0, #2
   17f7c:	blt	17fb0 <main@@Base+0x4cb8>
   17f80:	ldrb	r0, [r1]
   17f84:	cmp	r0, #32
   17f88:	bls	17f9c <main@@Base+0x4ca4>
   17f8c:	mov	r2, r1
   17f90:	cmp	r2, r6
   17f94:	bne	17fc8 <main@@Base+0x4cd0>
   17f98:	b	18080 <main@@Base+0x4d88>
   17f9c:	bne	17fb0 <main@@Base+0x4cb8>
   17fa0:	mov	r2, r1
   17fa4:	ldrb	r0, [r2, #1]!
   17fa8:	cmp	r0, #32
   17fac:	bhi	17fc0 <main@@Base+0x4cc8>
   17fb0:	mov	r0, sl
   17fb4:	mov	r2, r6
   17fb8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   17fbc:	mov	r2, r0
   17fc0:	cmp	r2, r6
   17fc4:	beq	18080 <main@@Base+0x4d88>
   17fc8:	ldrb	r0, [r2]
   17fcc:	cmp	r0, #44	; 0x2c
   17fd0:	bne	18094 <main@@Base+0x4d9c>
   17fd4:	add	r1, r2, #1
   17fd8:	sub	r0, r6, r1
   17fdc:	cmp	r0, #2
   17fe0:	blt	18010 <main@@Base+0x4d18>
   17fe4:	ldrb	r0, [r1]
   17fe8:	cmp	r0, #32
   17fec:	bls	18000 <main@@Base+0x4d08>
   17ff0:	mov	r2, r1
   17ff4:	cmp	r2, r6
   17ff8:	bne	18028 <main@@Base+0x4d30>
   17ffc:	b	180c8 <main@@Base+0x4dd0>
   18000:	bne	18010 <main@@Base+0x4d18>
   18004:	ldrb	r0, [r2, #2]!
   18008:	cmp	r0, #32
   1800c:	bhi	18020 <main@@Base+0x4d28>
   18010:	mov	r0, sl
   18014:	mov	r2, r6
   18018:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1801c:	mov	r2, r0
   18020:	cmp	r2, r6
   18024:	beq	180c8 <main@@Base+0x4dd0>
   18028:	ldrb	r0, [r2]
   1802c:	cmp	r0, #125	; 0x7d
   18030:	bne	1728c <main@@Base+0x3f94>
   18034:	add	r1, r2, #1
   18038:	sub	r0, r6, r1
   1803c:	cmp	r0, #2
   18040:	blt	1b2f4 <main@@Base+0x7ffc>
   18044:	ldrb	r0, [r1]
   18048:	cmp	r0, #32
   1804c:	bls	1a544 <main@@Base+0x724c>
   18050:	mov	r4, r1
   18054:	sub	r0, r6, r4
   18058:	cmp	r0, #2
   1805c:	bge	16880 <main@@Base+0x3588>
   18060:	b	19070 <main@@Base+0x5d78>
   18064:	ldr	sl, [sp, #36]	; 0x24
   18068:	ldr	r6, [sp, #44]	; 0x2c
   1806c:	mov	r3, #33	; 0x21
   18070:	mov	r0, sl
   18074:	mov	r2, r6
   18078:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1807c:	b	1686c <main@@Base+0x3574>
   18080:	mov	r4, r6
   18084:	sub	r0, r6, r4
   18088:	cmp	r0, #2
   1808c:	bge	16880 <main@@Base+0x3588>
   18090:	b	19070 <main@@Base+0x5d78>
   18094:	cmp	r0, #125	; 0x7d
   18098:	bne	18ca8 <main@@Base+0x59b0>
   1809c:	add	r1, r2, #1
   180a0:	sub	r0, r6, r1
   180a4:	cmp	r0, #2
   180a8:	blt	1b2f4 <main@@Base+0x7ffc>
   180ac:	ldrb	r0, [r1]
   180b0:	cmp	r0, #32
   180b4:	bls	1b2d4 <main@@Base+0x7fdc>
   180b8:	ldr	r6, [sp, #44]	; 0x2c
   180bc:	ldr	sl, [sp, #36]	; 0x24
   180c0:	mov	r4, r1
   180c4:	b	16870 <main@@Base+0x3578>
   180c8:	mov	r0, sl
   180cc:	mov	r1, r6
   180d0:	b	18cb0 <main@@Base+0x59b8>
   180d4:	bne	180e4 <main@@Base+0x4dec>
   180d8:	ldrb	r0, [r7, #2]!
   180dc:	cmp	r0, #32
   180e0:	bhi	180f4 <main@@Base+0x4dfc>
   180e4:	mov	r0, sl
   180e8:	mov	r2, r6
   180ec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   180f0:	mov	r7, r0
   180f4:	cmp	r8, r7
   180f8:	beq	1685c <main@@Base+0x3564>
   180fc:	mov	r0, #0
   18100:	mov	r1, r7
   18104:	mov	r2, r6
   18108:	sub	r3, fp, #56	; 0x38
   1810c:	str	r0, [fp, #-56]	; 0xffffffc8
   18110:	mov	r0, sl
   18114:	bl	32298 <flatcc_json_parser_float@@Base>
   18118:	ldr	r5, [sp, #40]	; 0x28
   1811c:	mov	r4, r0
   18120:	cmp	r7, r0
   18124:	bne	1815c <main@@Base+0x4e64>
   18128:	sub	r0, fp, #56	; 0x38
   1812c:	mov	r1, r7
   18130:	mov	r2, r6
   18134:	str	r0, [sp]
   18138:	movw	r0, #32912	; 0x8090
   1813c:	movt	r0, #4
   18140:	add	r3, r0, #72	; 0x48
   18144:	mov	r0, sl
   18148:	bl	23c48 <main@@Base+0x10950>
   1814c:	mov	r4, r0
   18150:	cmp	r0, r7
   18154:	cmpne	r4, r6
   18158:	beq	133b4 <main@@Base+0xbc>
   1815c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18160:	vcmp.f32	s0, s16
   18164:	vmrs	APSR_nzcv, fpscr
   18168:	bne	18178 <main@@Base+0x4e80>
   1816c:	ldrb	r0, [sl, #8]
   18170:	tst	r0, #2
   18174:	beq	16874 <main@@Base+0x357c>
   18178:	ldr	r0, [sl]
   1817c:	mov	r1, #26
   18180:	b	15570 <main@@Base+0x2278>
   18184:	bne	18198 <main@@Base+0x4ea0>
   18188:	mov	r4, r1
   1818c:	ldrb	r0, [r4, #1]!
   18190:	cmp	r0, #32
   18194:	bhi	181a8 <main@@Base+0x4eb0>
   18198:	mov	r0, sl
   1819c:	mov	r2, r6
   181a0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   181a4:	mov	r4, r0
   181a8:	cmp	r4, r6
   181ac:	beq	181f0 <main@@Base+0x4ef8>
   181b0:	ldrb	r0, [r4]
   181b4:	cmp	r0, #58	; 0x3a
   181b8:	bne	181f0 <main@@Base+0x4ef8>
   181bc:	add	r1, r4, #1
   181c0:	sub	r0, r6, r1
   181c4:	cmp	r0, #2
   181c8:	blt	1a184 <main@@Base+0x6e8c>
   181cc:	ldrb	r0, [r1]
   181d0:	cmp	r0, #32
   181d4:	bls	1a16c <main@@Base+0x6e74>
   181d8:	ldr	r6, [sp, #44]	; 0x2c
   181dc:	ldr	sl, [sp, #36]	; 0x24
   181e0:	mov	r4, r1
   181e4:	cmp	r7, r4
   181e8:	bne	1a19c <main@@Base+0x6ea4>
   181ec:	b	1beac <main@@Base+0x8bb4>
   181f0:	mov	r0, sl
   181f4:	mov	r1, r4
   181f8:	mov	r2, r6
   181fc:	mov	r3, #4
   18200:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18204:	b	1a190 <main@@Base+0x6e98>
   18208:	bne	1821c <main@@Base+0x4f24>
   1820c:	mov	r7, r1
   18210:	ldrb	r0, [r7, #1]!
   18214:	cmp	r0, #32
   18218:	bhi	1822c <main@@Base+0x4f34>
   1821c:	mov	r0, sl
   18220:	mov	r2, r6
   18224:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18228:	mov	r7, r0
   1822c:	cmp	r7, r6
   18230:	beq	182e8 <main@@Base+0x4ff0>
   18234:	ldrb	r0, [r7]
   18238:	cmp	r0, #58	; 0x3a
   1823c:	bne	182e8 <main@@Base+0x4ff0>
   18240:	add	r1, r7, #1
   18244:	sub	r0, r6, r1
   18248:	cmp	r0, #2
   1824c:	blt	1a258 <main@@Base+0x6f60>
   18250:	ldrb	r0, [r1]
   18254:	cmp	r0, #32
   18258:	bls	1a240 <main@@Base+0x6f48>
   1825c:	ldr	r6, [sp, #44]	; 0x2c
   18260:	ldr	sl, [sp, #36]	; 0x24
   18264:	mov	r7, r1
   18268:	cmp	r9, r7
   1826c:	bne	1a270 <main@@Base+0x6f78>
   18270:	add	r4, r8, #16
   18274:	mov	r1, #8
   18278:	sub	r0, r6, r4
   1827c:	cmp	r0, #8
   18280:	movcc	r1, r0
   18284:	sub	r1, r1, #1
   18288:	cmp	r1, #7
   1828c:	bhi	1c958 <main@@Base+0x9660>
   18290:	ldrb	r1, [r4]
   18294:	cmp	r1, #97	; 0x61
   18298:	bne	1c958 <main@@Base+0x9660>
   1829c:	cmp	r0, #2
   182a0:	blt	1c958 <main@@Base+0x9660>
   182a4:	ldr	r2, [sp, #32]
   182a8:	mov	r1, r8
   182ac:	ldrb	r0, [r1, #17]!
   182b0:	ldr	r2, [r2]
   182b4:	cmp	r2, #0
   182b8:	beq	18b4c <main@@Base+0x5854>
   182bc:	cmp	r0, #33	; 0x21
   182c0:	bcc	182cc <main@@Base+0x4fd4>
   182c4:	cmp	r0, #58	; 0x3a
   182c8:	bne	1c958 <main@@Base+0x9660>
   182cc:	ldr	r0, [sp, #32]
   182d0:	mov	r2, #0
   182d4:	str	r2, [r0]
   182d8:	sub	r0, r6, r1
   182dc:	cmp	r0, #2
   182e0:	bge	18b64 <main@@Base+0x586c>
   182e4:	b	1a8dc <main@@Base+0x75e4>
   182e8:	mov	r0, sl
   182ec:	mov	r1, r7
   182f0:	mov	r2, r6
   182f4:	mov	r3, #4
   182f8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   182fc:	b	1a264 <main@@Base+0x6f6c>
   18300:	bne	18314 <main@@Base+0x501c>
   18304:	mov	r7, r1
   18308:	ldrb	r0, [r7, #1]!
   1830c:	cmp	r0, #32
   18310:	bhi	18324 <main@@Base+0x502c>
   18314:	mov	r0, sl
   18318:	mov	r2, r6
   1831c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18320:	mov	r7, r0
   18324:	cmp	r7, r6
   18328:	beq	183e0 <main@@Base+0x50e8>
   1832c:	ldrb	r0, [r7]
   18330:	cmp	r0, #58	; 0x3a
   18334:	bne	183e0 <main@@Base+0x50e8>
   18338:	add	r1, r7, #1
   1833c:	sub	r0, r6, r1
   18340:	cmp	r0, #2
   18344:	blt	1a3c8 <main@@Base+0x70d0>
   18348:	ldrb	r0, [r1]
   1834c:	cmp	r0, #32
   18350:	bls	1a3b0 <main@@Base+0x70b8>
   18354:	ldr	r6, [sp, #44]	; 0x2c
   18358:	ldr	sl, [sp, #36]	; 0x24
   1835c:	mov	r7, r1
   18360:	cmp	r9, r7
   18364:	bne	1a3e0 <main@@Base+0x70e8>
   18368:	add	r4, r8, #16
   1836c:	mov	r1, #8
   18370:	sub	r0, r6, r4
   18374:	cmp	r0, #8
   18378:	movcc	r1, r0
   1837c:	sub	r1, r1, #1
   18380:	cmp	r1, #7
   18384:	bhi	1c958 <main@@Base+0x9660>
   18388:	ldrb	r1, [r4]
   1838c:	cmp	r1, #97	; 0x61
   18390:	bne	1c958 <main@@Base+0x9660>
   18394:	cmp	r0, #2
   18398:	blt	1c958 <main@@Base+0x9660>
   1839c:	ldr	r2, [sp, #32]
   183a0:	mov	r1, r8
   183a4:	ldrb	r0, [r1, #17]!
   183a8:	ldr	r2, [r2]
   183ac:	cmp	r2, #0
   183b0:	beq	18b84 <main@@Base+0x588c>
   183b4:	cmp	r0, #33	; 0x21
   183b8:	bcc	183c4 <main@@Base+0x50cc>
   183bc:	cmp	r0, #58	; 0x3a
   183c0:	bne	1c958 <main@@Base+0x9660>
   183c4:	ldr	r0, [sp, #32]
   183c8:	mov	r2, #0
   183cc:	str	r2, [r0]
   183d0:	sub	r0, r6, r1
   183d4:	cmp	r0, #2
   183d8:	bge	18b9c <main@@Base+0x58a4>
   183dc:	b	1a96c <main@@Base+0x7674>
   183e0:	mov	r0, sl
   183e4:	mov	r1, r7
   183e8:	mov	r2, r6
   183ec:	mov	r3, #4
   183f0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   183f4:	b	1a3d4 <main@@Base+0x70dc>
   183f8:	mov	r0, sl
   183fc:	mov	r1, r4
   18400:	mov	r2, r6
   18404:	mov	r3, #9
   18408:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1840c:	b	16940 <main@@Base+0x3648>
   18410:	cmp	r0, #34	; 0x22
   18414:	bne	1c958 <main@@Base+0x9660>
   18418:	add	r1, r8, #18
   1841c:	sub	r0, r6, r1
   18420:	cmp	r0, #2
   18424:	blt	1a0fc <main@@Base+0x6e04>
   18428:	ldrb	r0, [r1]
   1842c:	cmp	r0, #32
   18430:	bls	1a0e8 <main@@Base+0x6df0>
   18434:	mov	r7, r1
   18438:	cmp	r7, r6
   1843c:	bne	1a114 <main@@Base+0x6e1c>
   18440:	b	1a154 <main@@Base+0x6e5c>
   18444:	bne	18454 <main@@Base+0x515c>
   18448:	ldrb	r0, [r7, #2]!
   1844c:	cmp	r0, #32
   18450:	bhi	18464 <main@@Base+0x516c>
   18454:	mov	r0, sl
   18458:	mov	r2, r6
   1845c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18460:	mov	r7, r0
   18464:	cmp	r9, r7
   18468:	beq	15b6c <main@@Base+0x2874>
   1846c:	mov	r2, r6
   18470:	mov	r6, #0
   18474:	cmp	r7, r2
   18478:	str	r6, [fp, #-52]	; 0xffffffcc
   1847c:	str	r6, [fp, #-56]	; 0xffffffc8
   18480:	str	r6, [fp, #-60]	; 0xffffffc4
   18484:	str	r6, [sp, #56]	; 0x38
   18488:	beq	184ec <main@@Base+0x51f4>
   1848c:	sub	r0, fp, #56	; 0x38
   18490:	mov	r1, r7
   18494:	add	r3, sp, #56	; 0x38
   18498:	mov	r8, r2
   1849c:	str	r0, [sp]
   184a0:	mov	r0, sl
   184a4:	bl	323e8 <flatcc_json_parser_integer@@Base>
   184a8:	ldr	r5, [sp, #40]	; 0x28
   184ac:	cmp	r0, r7
   184b0:	beq	18504 <main@@Base+0x520c>
   184b4:	ldr	r2, [sp, #56]	; 0x38
   184b8:	mov	r4, r0
   184bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   184c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   184c4:	cmp	r2, #0
   184c8:	beq	18514 <main@@Base+0x521c>
   184cc:	subs	r2, r0, #-2147483647	; 0x80000001
   184d0:	sbcs	r1, r1, #0
   184d4:	bcc	18544 <main@@Base+0x524c>
   184d8:	mov	r0, sl
   184dc:	mov	r1, r4
   184e0:	mov	r2, r8
   184e4:	mov	r3, #8
   184e8:	b	18530 <main@@Base+0x5238>
   184ec:	ldr	r5, [sp, #40]	; 0x28
   184f0:	mov	r8, r2
   184f4:	mov	r4, r2
   184f8:	cmp	r7, r4
   184fc:	bne	18ea0 <main@@Base+0x5ba8>
   18500:	b	18e60 <main@@Base+0x5b68>
   18504:	mov	r4, r7
   18508:	cmp	r7, r4
   1850c:	bne	18ea0 <main@@Base+0x5ba8>
   18510:	b	18e60 <main@@Base+0x5b68>
   18514:	subs	r2, r0, #-2147483648	; 0x80000000
   18518:	sbcs	r1, r1, #0
   1851c:	bcc	18e50 <main@@Base+0x5b58>
   18520:	mov	r0, sl
   18524:	mov	r1, r4
   18528:	mov	r2, r8
   1852c:	mov	r3, #7
   18530:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18534:	mov	r4, r0
   18538:	cmp	r7, r4
   1853c:	bne	18ea0 <main@@Base+0x5ba8>
   18540:	b	18e60 <main@@Base+0x5b68>
   18544:	rsb	r6, r0, #0
   18548:	str	r6, [fp, #-60]	; 0xffffffc4
   1854c:	cmp	r7, r4
   18550:	bne	18ea0 <main@@Base+0x5ba8>
   18554:	b	18e60 <main@@Base+0x5b68>
   18558:	bne	1856c <main@@Base+0x5274>
   1855c:	mov	r4, r1
   18560:	ldrb	r0, [r4, #1]!
   18564:	cmp	r0, #32
   18568:	bhi	1857c <main@@Base+0x5284>
   1856c:	mov	r0, sl
   18570:	mov	r2, r6
   18574:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18578:	mov	r4, r0
   1857c:	cmp	r4, r6
   18580:	beq	185c4 <main@@Base+0x52cc>
   18584:	ldrb	r0, [r4]
   18588:	cmp	r0, #58	; 0x3a
   1858c:	bne	185c4 <main@@Base+0x52cc>
   18590:	add	r1, r4, #1
   18594:	sub	r0, r6, r1
   18598:	cmp	r0, #2
   1859c:	blt	1a564 <main@@Base+0x726c>
   185a0:	ldrb	r0, [r1]
   185a4:	cmp	r0, #32
   185a8:	bls	1a54c <main@@Base+0x7254>
   185ac:	ldr	r6, [sp, #44]	; 0x2c
   185b0:	ldr	sl, [sp, #36]	; 0x24
   185b4:	mov	r4, r1
   185b8:	cmp	r7, r4
   185bc:	bne	1a57c <main@@Base+0x7284>
   185c0:	b	1beac <main@@Base+0x8bb4>
   185c4:	mov	r0, sl
   185c8:	mov	r1, r4
   185cc:	mov	r2, r6
   185d0:	mov	r3, #4
   185d4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   185d8:	b	1a570 <main@@Base+0x7278>
   185dc:	bne	185f0 <main@@Base+0x52f8>
   185e0:	mov	r4, r1
   185e4:	ldrb	r0, [r4, #1]!
   185e8:	cmp	r0, #32
   185ec:	bhi	18600 <main@@Base+0x5308>
   185f0:	mov	r0, sl
   185f4:	mov	r2, r6
   185f8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   185fc:	mov	r4, r0
   18600:	cmp	r4, r6
   18604:	beq	18648 <main@@Base+0x5350>
   18608:	ldrb	r0, [r4]
   1860c:	cmp	r0, #58	; 0x3a
   18610:	bne	18648 <main@@Base+0x5350>
   18614:	add	r1, r4, #1
   18618:	sub	r0, r6, r1
   1861c:	cmp	r0, #2
   18620:	blt	1a634 <main@@Base+0x733c>
   18624:	ldrb	r0, [r1]
   18628:	cmp	r0, #32
   1862c:	bls	1a61c <main@@Base+0x7324>
   18630:	ldr	r6, [sp, #44]	; 0x2c
   18634:	ldr	sl, [sp, #36]	; 0x24
   18638:	mov	r4, r1
   1863c:	cmp	r7, r4
   18640:	bne	1a64c <main@@Base+0x7354>
   18644:	b	1beac <main@@Base+0x8bb4>
   18648:	mov	r0, sl
   1864c:	mov	r1, r4
   18650:	mov	r2, r6
   18654:	mov	r3, #4
   18658:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1865c:	b	1a640 <main@@Base+0x7348>
   18660:	bne	18674 <main@@Base+0x537c>
   18664:	mov	r4, r1
   18668:	ldrb	r0, [r4, #1]!
   1866c:	cmp	r0, #32
   18670:	bhi	18684 <main@@Base+0x538c>
   18674:	mov	r0, sl
   18678:	mov	r2, r6
   1867c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18680:	mov	r4, r0
   18684:	cmp	r4, r6
   18688:	beq	186cc <main@@Base+0x53d4>
   1868c:	ldrb	r0, [r4]
   18690:	cmp	r0, #58	; 0x3a
   18694:	bne	186cc <main@@Base+0x53d4>
   18698:	add	r1, r4, #1
   1869c:	sub	r0, r6, r1
   186a0:	cmp	r0, #2
   186a4:	blt	1a6f0 <main@@Base+0x73f8>
   186a8:	ldrb	r0, [r1]
   186ac:	cmp	r0, #32
   186b0:	bls	1a6d8 <main@@Base+0x73e0>
   186b4:	ldr	r6, [sp, #44]	; 0x2c
   186b8:	ldr	sl, [sp, #36]	; 0x24
   186bc:	mov	r4, r1
   186c0:	cmp	r7, r4
   186c4:	bne	1a708 <main@@Base+0x7410>
   186c8:	b	1beac <main@@Base+0x8bb4>
   186cc:	mov	r0, sl
   186d0:	mov	r1, r4
   186d4:	mov	r2, r6
   186d8:	mov	r3, #4
   186dc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   186e0:	b	1a6fc <main@@Base+0x7404>
   186e4:	bne	186f4 <main@@Base+0x53fc>
   186e8:	ldrb	r0, [r4, #2]!
   186ec:	cmp	r0, #32
   186f0:	bhi	18704 <main@@Base+0x540c>
   186f4:	mov	r0, sl
   186f8:	mov	r2, r6
   186fc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18700:	mov	r4, r0
   18704:	cmp	r4, r6
   18708:	beq	18738 <main@@Base+0x5440>
   1870c:	ldrb	r0, [r4]
   18710:	cmp	r0, #93	; 0x5d
   18714:	bne	18734 <main@@Base+0x543c>
   18718:	add	r1, r4, #1
   1871c:	mov	r6, r5
   18720:	sub	r0, r5, r1
   18724:	cmp	r0, #2
   18728:	ldr	r5, [sp, #40]	; 0x28
   1872c:	blt	19514 <main@@Base+0x621c>
   18730:	b	19454 <main@@Base+0x615c>
   18734:	mov	r6, r4
   18738:	mov	r0, #0
   1873c:	mov	r1, #1
   18740:	strb	r0, [fp, #-60]	; 0xffffffc4
   18744:	ldr	r0, [sl]
   18748:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1874c:	cmp	r0, #0
   18750:	beq	1dcb0 <main@@Base+0xa9b8>
   18754:	mov	r4, r6
   18758:	mov	r7, r0
   1875c:	mov	r6, r5
   18760:	sub	r6, r6, r4
   18764:	cmp	r6, #4
   18768:	blt	187ac <main@@Base+0x54b4>
   1876c:	movw	r1, #19603	; 0x4c93
   18770:	mov	r0, r4
   18774:	mov	r2, #4
   18778:	movt	r1, #3
   1877c:	bl	12b34 <bcmp@plt>
   18780:	cmp	r0, #0
   18784:	beq	18810 <main@@Base+0x5518>
   18788:	cmp	r6, #5
   1878c:	blt	187ac <main@@Base+0x54b4>
   18790:	movw	r1, #19608	; 0x4c98
   18794:	mov	r0, r4
   18798:	mov	r2, #5
   1879c:	movt	r1, #3
   187a0:	bl	12b34 <bcmp@plt>
   187a4:	cmp	r0, #0
   187a8:	beq	1899c <main@@Base+0x56a4>
   187ac:	mov	r6, #0
   187b0:	mov	r2, r5
   187b4:	cmp	r4, r5
   187b8:	str	r6, [fp, #-52]	; 0xffffffcc
   187bc:	str	r6, [fp, #-56]	; 0xffffffc8
   187c0:	str	r6, [sp, #56]	; 0x38
   187c4:	beq	18808 <main@@Base+0x5510>
   187c8:	sub	r0, fp, #56	; 0x38
   187cc:	mov	r1, r4
   187d0:	add	r3, sp, #56	; 0x38
   187d4:	str	r0, [sp]
   187d8:	mov	r0, sl
   187dc:	bl	323e8 <flatcc_json_parser_integer@@Base>
   187e0:	cmp	r0, r4
   187e4:	beq	1882c <main@@Base+0x5534>
   187e8:	mov	r1, r0
   187ec:	ldr	r0, [sp, #56]	; 0x38
   187f0:	cmp	r0, #0
   187f4:	beq	18834 <main@@Base+0x553c>
   187f8:	mov	r0, sl
   187fc:	mov	r2, r5
   18800:	mov	r3, #8
   18804:	b	18854 <main@@Base+0x555c>
   18808:	mov	r1, r2
   1880c:	b	1885c <main@@Base+0x5564>
   18810:	mov	r0, #1
   18814:	add	r1, r4, #4
   18818:	strb	r0, [fp, #-60]	; 0xffffffc4
   1881c:	cmp	r4, r1
   18820:	mov	r6, r5
   18824:	bne	188b4 <main@@Base+0x55bc>
   18828:	b	18878 <main@@Base+0x5580>
   1882c:	mov	r1, r4
   18830:	b	1885c <main@@Base+0x5564>
   18834:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18838:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1883c:	subs	r3, r0, #256	; 0x100
   18840:	sbcs	r2, r2, #0
   18844:	bcc	189b8 <main@@Base+0x56c0>
   18848:	mov	r0, sl
   1884c:	mov	r2, r5
   18850:	mov	r3, #7
   18854:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18858:	mov	r1, r0
   1885c:	uxtb	r0, r6
   18860:	cmp	r0, #0
   18864:	movwne	r0, #1
   18868:	strb	r0, [fp, #-60]	; 0xffffffc4
   1886c:	cmp	r4, r1
   18870:	mov	r6, r5
   18874:	bne	188b4 <main@@Base+0x55bc>
   18878:	sub	r0, fp, #60	; 0x3c
   1887c:	mov	r1, r4
   18880:	mov	r2, r6
   18884:	str	r0, [sp]
   18888:	movw	r0, #32912	; 0x8090
   1888c:	movt	r0, #4
   18890:	add	r3, r0, #48	; 0x30
   18894:	mov	r0, sl
   18898:	bl	239fc <main@@Base+0x10704>
   1889c:	mov	r1, r0
   188a0:	cmp	r0, r4
   188a4:	beq	1dca8 <main@@Base+0xa9b0>
   188a8:	cmp	r1, r6
   188ac:	beq	1dca8 <main@@Base+0xa9b0>
   188b0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   188b4:	strb	r0, [r7]
   188b8:	sub	r0, r6, r1
   188bc:	cmp	r0, #2
   188c0:	blt	188f4 <main@@Base+0x55fc>
   188c4:	ldrb	r0, [r1]
   188c8:	cmp	r0, #32
   188cc:	bls	188e0 <main@@Base+0x55e8>
   188d0:	mov	r4, r1
   188d4:	cmp	r4, r6
   188d8:	bne	1890c <main@@Base+0x5614>
   188dc:	b	19424 <main@@Base+0x612c>
   188e0:	bne	188f4 <main@@Base+0x55fc>
   188e4:	mov	r4, r1
   188e8:	ldrb	r0, [r4, #1]!
   188ec:	cmp	r0, #32
   188f0:	bhi	18904 <main@@Base+0x560c>
   188f4:	mov	r0, sl
   188f8:	mov	r2, r6
   188fc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18900:	mov	r4, r0
   18904:	cmp	r4, r6
   18908:	beq	19424 <main@@Base+0x612c>
   1890c:	ldrb	r0, [r4]
   18910:	cmp	r0, #44	; 0x2c
   18914:	bne	19430 <main@@Base+0x6138>
   18918:	add	r1, r4, #1
   1891c:	sub	r0, r6, r1
   18920:	cmp	r0, #2
   18924:	blt	18954 <main@@Base+0x565c>
   18928:	ldrb	r0, [r1]
   1892c:	cmp	r0, #32
   18930:	bls	18944 <main@@Base+0x564c>
   18934:	mov	r4, r1
   18938:	cmp	r4, r6
   1893c:	bne	1896c <main@@Base+0x5674>
   18940:	b	19524 <main@@Base+0x622c>
   18944:	bne	18954 <main@@Base+0x565c>
   18948:	ldrb	r0, [r4, #2]!
   1894c:	cmp	r0, #32
   18950:	bhi	18964 <main@@Base+0x566c>
   18954:	mov	r0, sl
   18958:	mov	r2, r6
   1895c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18960:	mov	r4, r0
   18964:	cmp	r4, r6
   18968:	beq	19524 <main@@Base+0x622c>
   1896c:	ldrb	r0, [r4]
   18970:	cmp	r0, #93	; 0x5d
   18974:	beq	19440 <main@@Base+0x6148>
   18978:	mov	r0, #0
   1897c:	mov	r1, #1
   18980:	strb	r0, [fp, #-60]	; 0xffffffc4
   18984:	ldr	r0, [sl]
   18988:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1898c:	mov	r7, r0
   18990:	cmp	r0, #0
   18994:	bne	18760 <main@@Base+0x5468>
   18998:	b	133b4 <main@@Base+0xbc>
   1899c:	mov	r0, #0
   189a0:	add	r1, r4, #5
   189a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   189a8:	cmp	r4, r1
   189ac:	mov	r6, r5
   189b0:	bne	188b4 <main@@Base+0x55bc>
   189b4:	b	18878 <main@@Base+0x5580>
   189b8:	mov	r6, r0
   189bc:	b	1885c <main@@Base+0x5564>
   189c0:	bne	189d4 <main@@Base+0x56dc>
   189c4:	mov	r4, r1
   189c8:	ldrb	r0, [r4, #1]!
   189cc:	cmp	r0, #32
   189d0:	bhi	189e4 <main@@Base+0x56ec>
   189d4:	mov	r0, sl
   189d8:	mov	r2, r6
   189dc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   189e0:	mov	r4, r0
   189e4:	cmp	r4, r6
   189e8:	beq	18a2c <main@@Base+0x5734>
   189ec:	ldrb	r0, [r4]
   189f0:	cmp	r0, #58	; 0x3a
   189f4:	bne	18a2c <main@@Base+0x5734>
   189f8:	add	r1, r4, #1
   189fc:	sub	r0, r6, r1
   18a00:	cmp	r0, #2
   18a04:	blt	1a7f8 <main@@Base+0x7500>
   18a08:	ldrb	r0, [r1]
   18a0c:	cmp	r0, #32
   18a10:	bls	1a7e0 <main@@Base+0x74e8>
   18a14:	ldr	r6, [sp, #44]	; 0x2c
   18a18:	ldr	sl, [sp, #36]	; 0x24
   18a1c:	mov	r4, r1
   18a20:	cmp	r9, r4
   18a24:	bne	1a810 <main@@Base+0x7518>
   18a28:	b	1a870 <main@@Base+0x7578>
   18a2c:	mov	r0, sl
   18a30:	mov	r1, r4
   18a34:	mov	r2, r6
   18a38:	mov	r3, #4
   18a3c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18a40:	b	1a804 <main@@Base+0x750c>
   18a44:	bne	18a58 <main@@Base+0x5760>
   18a48:	mov	r4, r1
   18a4c:	ldrb	r0, [r4, #1]!
   18a50:	cmp	r0, #32
   18a54:	bhi	18a68 <main@@Base+0x5770>
   18a58:	mov	r0, sl
   18a5c:	mov	r2, r6
   18a60:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18a64:	mov	r4, r0
   18a68:	cmp	r4, r6
   18a6c:	beq	18ab0 <main@@Base+0x57b8>
   18a70:	ldrb	r0, [r4]
   18a74:	cmp	r0, #58	; 0x3a
   18a78:	bne	18ab0 <main@@Base+0x57b8>
   18a7c:	add	r1, r4, #1
   18a80:	sub	r0, r6, r1
   18a84:	cmp	r0, #2
   18a88:	blt	1a9fc <main@@Base+0x7704>
   18a8c:	ldrb	r0, [r1]
   18a90:	cmp	r0, #32
   18a94:	bls	1a9e4 <main@@Base+0x76ec>
   18a98:	ldr	r6, [sp, #44]	; 0x2c
   18a9c:	ldr	sl, [sp, #36]	; 0x24
   18aa0:	mov	r4, r1
   18aa4:	cmp	r7, r4
   18aa8:	bne	1aa14 <main@@Base+0x771c>
   18aac:	b	1beac <main@@Base+0x8bb4>
   18ab0:	mov	r0, sl
   18ab4:	mov	r1, r4
   18ab8:	mov	r2, r6
   18abc:	mov	r3, #4
   18ac0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18ac4:	b	1aa08 <main@@Base+0x7710>
   18ac8:	bne	18adc <main@@Base+0x57e4>
   18acc:	mov	r7, r1
   18ad0:	ldrb	r0, [r7, #1]!
   18ad4:	cmp	r0, #32
   18ad8:	bhi	18aec <main@@Base+0x57f4>
   18adc:	mov	r0, sl
   18ae0:	mov	r2, r6
   18ae4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18ae8:	mov	r7, r0
   18aec:	cmp	r7, r6
   18af0:	beq	18b34 <main@@Base+0x583c>
   18af4:	ldrb	r0, [r7]
   18af8:	cmp	r0, #58	; 0x3a
   18afc:	bne	18b34 <main@@Base+0x583c>
   18b00:	add	r1, r7, #1
   18b04:	sub	r0, r6, r1
   18b08:	cmp	r0, #2
   18b0c:	blt	1ab10 <main@@Base+0x7818>
   18b10:	ldrb	r0, [r1]
   18b14:	cmp	r0, #32
   18b18:	bls	1aaf8 <main@@Base+0x7800>
   18b1c:	ldr	r6, [sp, #44]	; 0x2c
   18b20:	ldr	sl, [sp, #36]	; 0x24
   18b24:	mov	r7, r1
   18b28:	cmp	r4, r7
   18b2c:	bne	1ab28 <main@@Base+0x7830>
   18b30:	b	1c958 <main@@Base+0x9660>
   18b34:	mov	r0, sl
   18b38:	mov	r1, r7
   18b3c:	mov	r2, r6
   18b40:	mov	r3, #4
   18b44:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18b48:	b	1ab1c <main@@Base+0x7824>
   18b4c:	cmp	r0, #34	; 0x22
   18b50:	bne	1c958 <main@@Base+0x9660>
   18b54:	add	r1, r8, #18
   18b58:	sub	r0, r6, r1
   18b5c:	cmp	r0, #2
   18b60:	blt	1a8dc <main@@Base+0x75e4>
   18b64:	ldrb	r0, [r1]
   18b68:	cmp	r0, #32
   18b6c:	bls	1a8c4 <main@@Base+0x75cc>
   18b70:	ldr	r6, [sp, #44]	; 0x2c
   18b74:	mov	r7, r1
   18b78:	cmp	r7, r6
   18b7c:	bne	1a8f4 <main@@Base+0x75fc>
   18b80:	b	1a938 <main@@Base+0x7640>
   18b84:	cmp	r0, #34	; 0x22
   18b88:	bne	1c958 <main@@Base+0x9660>
   18b8c:	add	r1, r8, #18
   18b90:	sub	r0, r6, r1
   18b94:	cmp	r0, #2
   18b98:	blt	1a96c <main@@Base+0x7674>
   18b9c:	ldrb	r0, [r1]
   18ba0:	cmp	r0, #32
   18ba4:	bls	1a954 <main@@Base+0x765c>
   18ba8:	ldr	r6, [sp, #44]	; 0x2c
   18bac:	mov	r7, r1
   18bb0:	cmp	r7, r6
   18bb4:	bne	1a984 <main@@Base+0x768c>
   18bb8:	b	1a9c8 <main@@Base+0x76d0>
   18bbc:	bne	18bcc <main@@Base+0x58d4>
   18bc0:	ldrb	r0, [r4, #2]!
   18bc4:	cmp	r0, #32
   18bc8:	bhi	18bdc <main@@Base+0x58e4>
   18bcc:	mov	r0, sl
   18bd0:	mov	r2, r6
   18bd4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18bd8:	mov	r4, r0
   18bdc:	cmp	r7, r4
   18be0:	beq	1beac <main@@Base+0x8bb4>
   18be4:	mov	r0, #0
   18be8:	mov	r1, #3
   18bec:	str	r0, [sp, #52]	; 0x34
   18bf0:	ldr	r0, [sl]
   18bf4:	bl	2cd8c <flatcc_builder_start_table@@Base>
   18bf8:	cmp	r0, #0
   18bfc:	bne	18c6c <main@@Base+0x5974>
   18c00:	cmp	r4, r6
   18c04:	beq	18c48 <main@@Base+0x5950>
   18c08:	ldrb	r0, [r4]
   18c0c:	cmp	r0, #123	; 0x7b
   18c10:	bne	18c48 <main@@Base+0x5950>
   18c14:	add	r1, r4, #1
   18c18:	sub	r0, r6, r1
   18c1c:	cmp	r0, #2
   18c20:	blt	1b374 <main@@Base+0x807c>
   18c24:	ldrb	r0, [r1]
   18c28:	cmp	r0, #32
   18c2c:	bls	1b35c <main@@Base+0x8064>
   18c30:	ldr	r6, [sp, #44]	; 0x2c
   18c34:	mov	r4, r1
   18c38:	cmp	r4, r6
   18c3c:	mov	r2, r6
   18c40:	bne	1b390 <main@@Base+0x8098>
   18c44:	b	1b3e0 <main@@Base+0x80e8>
   18c48:	mov	r0, sl
   18c4c:	mov	r1, r4
   18c50:	mov	r2, r6
   18c54:	mov	r3, #21
   18c58:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18c5c:	mov	r4, r0
   18c60:	ldr	r0, [sl, #24]
   18c64:	cmp	r0, #0
   18c68:	beq	1c378 <main@@Base+0x9080>
   18c6c:	mov	r0, sl
   18c70:	mov	r1, r4
   18c74:	mov	r2, r6
   18c78:	mov	r3, #33	; 0x21
   18c7c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18c80:	mov	r4, r0
   18c84:	ldr	r0, [sp, #52]	; 0x34
   18c88:	cmp	r0, #0
   18c8c:	beq	133b4 <main@@Base+0xbc>
   18c90:	ldr	r0, [sl]
   18c94:	mov	r1, #35	; 0x23
   18c98:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   18c9c:	cmp	r0, #0
   18ca0:	bne	15f2c <main@@Base+0x2c34>
   18ca4:	b	133b4 <main@@Base+0xbc>
   18ca8:	mov	r0, sl
   18cac:	mov	r1, r2
   18cb0:	mov	r2, r6
   18cb4:	mov	r3, #10
   18cb8:	b	171fc <main@@Base+0x3f04>
   18cbc:	bne	18ccc <main@@Base+0x59d4>
   18cc0:	ldrb	r0, [r4, #2]!
   18cc4:	cmp	r0, #32
   18cc8:	bhi	18cdc <main@@Base+0x59e4>
   18ccc:	mov	r0, sl
   18cd0:	mov	r2, r6
   18cd4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18cd8:	mov	r4, r0
   18cdc:	cmp	r7, r4
   18ce0:	beq	1beac <main@@Base+0x8bb4>
   18ce4:	ldr	r0, [sl]
   18ce8:	bl	2c85c <flatcc_builder_start_offset_vector@@Base>
   18cec:	cmp	r0, #0
   18cf0:	bne	133b4 <main@@Base+0xbc>
   18cf4:	cmp	r4, r6
   18cf8:	beq	18d38 <main@@Base+0x5a40>
   18cfc:	ldrb	r0, [r4]
   18d00:	cmp	r0, #91	; 0x5b
   18d04:	bne	18d38 <main@@Base+0x5a40>
   18d08:	add	r1, r4, #1
   18d0c:	sub	r0, r6, r1
   18d10:	cmp	r0, #2
   18d14:	blt	19540 <main@@Base+0x6248>
   18d18:	ldrb	r0, [r1]
   18d1c:	cmp	r0, #32
   18d20:	bls	19530 <main@@Base+0x6238>
   18d24:	mov	r4, r1
   18d28:	cmp	r4, r6
   18d2c:	mov	r2, r6
   18d30:	bne	1955c <main@@Base+0x6264>
   18d34:	b	195a4 <main@@Base+0x62ac>
   18d38:	mov	r0, sl
   18d3c:	mov	r1, r4
   18d40:	mov	r2, r6
   18d44:	mov	r3, #22
   18d48:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18d4c:	mov	r4, r0
   18d50:	ldr	r0, [sl]
   18d54:	bl	2cb14 <flatcc_builder_end_offset_vector@@Base>
   18d58:	ldr	r5, [sp, #40]	; 0x28
   18d5c:	cmp	r0, #0
   18d60:	str	r0, [sp, #52]	; 0x34
   18d64:	beq	133b4 <main@@Base+0xbc>
   18d68:	ldr	r0, [sl]
   18d6c:	mov	r1, #28
   18d70:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   18d74:	cmp	r0, #0
   18d78:	bne	16008 <main@@Base+0x2d10>
   18d7c:	b	133b4 <main@@Base+0xbc>
   18d80:	bne	18d90 <main@@Base+0x5a98>
   18d84:	ldrb	r0, [r7, #2]!
   18d88:	cmp	r0, #32
   18d8c:	bhi	18da0 <main@@Base+0x5aa8>
   18d90:	mov	r0, sl
   18d94:	mov	r2, r6
   18d98:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18d9c:	mov	r7, r0
   18da0:	cmp	r9, r7
   18da4:	beq	1a870 <main@@Base+0x7578>
   18da8:	ldr	r0, [sl]
   18dac:	mov	r1, #8
   18db0:	mov	r2, #4
   18db4:	mvn	r3, #-536870912	; 0xe0000000
   18db8:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   18dbc:	cmp	r0, #0
   18dc0:	bne	1dc64 <main@@Base+0xa96c>
   18dc4:	cmp	r7, r6
   18dc8:	beq	18e08 <main@@Base+0x5b10>
   18dcc:	ldrb	r0, [r7]
   18dd0:	cmp	r0, #91	; 0x5b
   18dd4:	bne	18e08 <main@@Base+0x5b10>
   18dd8:	add	r1, r7, #1
   18ddc:	sub	r0, r6, r1
   18de0:	cmp	r0, #2
   18de4:	blt	196cc <main@@Base+0x63d4>
   18de8:	ldrb	r0, [r1]
   18dec:	cmp	r0, #32
   18df0:	bls	196bc <main@@Base+0x63c4>
   18df4:	mov	r7, r1
   18df8:	cmp	r7, r6
   18dfc:	mov	r4, r6
   18e00:	bne	196e8 <main@@Base+0x63f0>
   18e04:	b	19730 <main@@Base+0x6438>
   18e08:	mov	r0, sl
   18e0c:	mov	r1, r7
   18e10:	mov	r2, r6
   18e14:	mov	r3, #22
   18e18:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18e1c:	mov	r7, r0
   18e20:	ldr	r0, [sl]
   18e24:	bl	2da48 <flatcc_builder_end_vector@@Base>
   18e28:	ldr	r5, [sp, #40]	; 0x28
   18e2c:	cmp	r0, #0
   18e30:	str	r0, [sp, #52]	; 0x34
   18e34:	beq	1dc64 <main@@Base+0xa96c>
   18e38:	ldr	r0, [sl]
   18e3c:	mov	r1, #29
   18e40:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   18e44:	cmp	r0, #0
   18e48:	bne	1696c <main@@Base+0x3674>
   18e4c:	b	1dc64 <main@@Base+0xa96c>
   18e50:	mov	r6, r0
   18e54:	str	r6, [fp, #-60]	; 0xffffffc4
   18e58:	cmp	r7, r4
   18e5c:	bne	18ea0 <main@@Base+0x5ba8>
   18e60:	sub	r0, fp, #60	; 0x3c
   18e64:	mov	r1, r7
   18e68:	mov	r2, r8
   18e6c:	mov	r4, r8
   18e70:	str	r0, [sp]
   18e74:	movw	r0, #32912	; 0x8090
   18e78:	movt	r0, #4
   18e7c:	add	r3, r0, #108	; 0x6c
   18e80:	mov	r0, sl
   18e84:	bl	23e4c <main@@Base+0x10b54>
   18e88:	cmp	r0, r7
   18e8c:	cmpne	r0, r4
   18e90:	beq	1dc98 <main@@Base+0xa9a0>
   18e94:	ldr	r6, [fp, #-60]	; 0xffffffc4
   18e98:	mov	r8, r4
   18e9c:	mov	r4, r0
   18ea0:	cmp	r6, #0
   18ea4:	bne	18eb4 <main@@Base+0x5bbc>
   18ea8:	ldrb	r0, [sl, #8]
   18eac:	tst	r0, #2
   18eb0:	beq	19060 <main@@Base+0x5d68>
   18eb4:	ldr	r0, [sl]
   18eb8:	mov	r1, #16
   18ebc:	b	1a394 <main@@Base+0x709c>
   18ec0:	bne	18ed0 <main@@Base+0x5bd8>
   18ec4:	ldrb	r0, [r7, #2]!
   18ec8:	cmp	r0, #32
   18ecc:	bhi	18ee0 <main@@Base+0x5be8>
   18ed0:	mov	r0, sl
   18ed4:	mov	r2, r6
   18ed8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   18edc:	mov	r7, r0
   18ee0:	cmp	r8, r7
   18ee4:	beq	1685c <main@@Base+0x3564>
   18ee8:	mov	r2, r6
   18eec:	mov	r6, #0
   18ef0:	cmp	r7, r2
   18ef4:	str	r6, [fp, #-52]	; 0xffffffcc
   18ef8:	str	r6, [fp, #-56]	; 0xffffffc8
   18efc:	strh	r6, [fp, #-60]	; 0xffffffc4
   18f00:	str	r6, [sp, #56]	; 0x38
   18f04:	beq	18f6c <main@@Base+0x5c74>
   18f08:	sub	r0, fp, #56	; 0x38
   18f0c:	mov	r1, r7
   18f10:	add	r3, sp, #56	; 0x38
   18f14:	mov	r8, r2
   18f18:	str	r0, [sp]
   18f1c:	mov	r0, sl
   18f20:	bl	323e8 <flatcc_json_parser_integer@@Base>
   18f24:	ldr	r5, [sp, #40]	; 0x28
   18f28:	cmp	r0, r7
   18f2c:	beq	18f84 <main@@Base+0x5c8c>
   18f30:	ldr	r2, [sp, #56]	; 0x38
   18f34:	mov	r4, r0
   18f38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18f3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18f40:	cmp	r2, #0
   18f44:	beq	18f94 <main@@Base+0x5c9c>
   18f48:	movw	r2, #32769	; 0x8001
   18f4c:	subs	r2, r0, r2
   18f50:	sbcs	r1, r1, #0
   18f54:	bcc	18fc4 <main@@Base+0x5ccc>
   18f58:	mov	r0, sl
   18f5c:	mov	r1, r4
   18f60:	mov	r2, r8
   18f64:	mov	r3, #8
   18f68:	b	18fb0 <main@@Base+0x5cb8>
   18f6c:	ldr	r5, [sp, #40]	; 0x28
   18f70:	mov	r8, r2
   18f74:	mov	r4, r2
   18f78:	cmp	r7, r4
   18f7c:	bne	19028 <main@@Base+0x5d30>
   18f80:	b	18fe8 <main@@Base+0x5cf0>
   18f84:	mov	r4, r7
   18f88:	cmp	r7, r4
   18f8c:	bne	19028 <main@@Base+0x5d30>
   18f90:	b	18fe8 <main@@Base+0x5cf0>
   18f94:	subs	r2, r0, #32768	; 0x8000
   18f98:	sbcs	r1, r1, #0
   18f9c:	bcc	18fd8 <main@@Base+0x5ce0>
   18fa0:	mov	r0, sl
   18fa4:	mov	r1, r4
   18fa8:	mov	r2, r8
   18fac:	mov	r3, #7
   18fb0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   18fb4:	mov	r4, r0
   18fb8:	cmp	r7, r4
   18fbc:	bne	19028 <main@@Base+0x5d30>
   18fc0:	b	18fe8 <main@@Base+0x5cf0>
   18fc4:	rsb	r6, r0, #0
   18fc8:	strh	r6, [fp, #-60]	; 0xffffffc4
   18fcc:	cmp	r7, r4
   18fd0:	bne	19028 <main@@Base+0x5d30>
   18fd4:	b	18fe8 <main@@Base+0x5cf0>
   18fd8:	mov	r6, r0
   18fdc:	strh	r6, [fp, #-60]	; 0xffffffc4
   18fe0:	cmp	r7, r4
   18fe4:	bne	19028 <main@@Base+0x5d30>
   18fe8:	sub	r0, fp, #60	; 0x3c
   18fec:	mov	r1, r7
   18ff0:	mov	r2, r8
   18ff4:	mov	r6, r8
   18ff8:	str	r0, [sp]
   18ffc:	movw	r0, #32912	; 0x8090
   19000:	movt	r0, #4
   19004:	add	r3, r0, #36	; 0x24
   19008:	mov	r0, sl
   1900c:	bl	1f6d4 <main@@Base+0xc3dc>
   19010:	mov	r4, r0
   19014:	cmp	r0, r7
   19018:	cmpne	r4, r6
   1901c:	beq	1dc9c <main@@Base+0xa9a4>
   19020:	mov	r8, r6
   19024:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   19028:	uxth	r0, r6
   1902c:	cmp	r0, #150	; 0x96
   19030:	bne	19040 <main@@Base+0x5d48>
   19034:	ldrb	r0, [sl, #8]
   19038:	tst	r0, #2
   1903c:	beq	19060 <main@@Base+0x5d68>
   19040:	ldr	r0, [sl]
   19044:	mov	r1, #1
   19048:	mov	r2, #2
   1904c:	mov	r3, #2
   19050:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   19054:	cmp	r0, #0
   19058:	beq	1dc9c <main@@Base+0xa9a4>
   1905c:	strh	r6, [r0]
   19060:	mov	r6, r8
   19064:	sub	r0, r6, r4
   19068:	cmp	r0, #2
   1906c:	bge	16880 <main@@Base+0x3588>
   19070:	mov	r0, sl
   19074:	mov	r1, r4
   19078:	mov	r2, r6
   1907c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19080:	mov	r2, r0
   19084:	cmp	r2, r6
   19088:	bne	16898 <main@@Base+0x35a0>
   1908c:	b	1dbd4 <main@@Base+0xa8dc>
   19090:	bne	190a0 <main@@Base+0x5da8>
   19094:	ldrb	r0, [r7, #2]!
   19098:	cmp	r0, #32
   1909c:	bhi	190b0 <main@@Base+0x5db8>
   190a0:	mov	r0, sl
   190a4:	mov	r2, r6
   190a8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   190ac:	mov	r7, r0
   190b0:	cmp	r8, r7
   190b4:	beq	1685c <main@@Base+0x3564>
   190b8:	mov	r0, #0
   190bc:	mov	r1, r7
   190c0:	mov	r2, r6
   190c4:	sub	r3, fp, #56	; 0x38
   190c8:	str	r0, [fp, #-56]	; 0xffffffc8
   190cc:	mov	r0, sl
   190d0:	bl	32298 <flatcc_json_parser_float@@Base>
   190d4:	ldr	r5, [sp, #40]	; 0x28
   190d8:	mov	r4, r0
   190dc:	cmp	r7, r0
   190e0:	bne	19118 <main@@Base+0x5e20>
   190e4:	sub	r0, fp, #56	; 0x38
   190e8:	mov	r1, r7
   190ec:	mov	r2, r6
   190f0:	str	r0, [sp]
   190f4:	movw	r0, #32912	; 0x8090
   190f8:	movt	r0, #4
   190fc:	add	r3, r0, #84	; 0x54
   19100:	mov	r0, sl
   19104:	bl	23c48 <main@@Base+0x10950>
   19108:	mov	r4, r0
   1910c:	cmp	r0, r7
   19110:	cmpne	r4, r6
   19114:	beq	133b4 <main@@Base+0xbc>
   19118:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1911c:	vcmp.f32	s0, s18
   19120:	vmrs	APSR_nzcv, fpscr
   19124:	bne	19134 <main@@Base+0x5e3c>
   19128:	ldrb	r0, [sl, #8]
   1912c:	tst	r0, #2
   19130:	beq	16874 <main@@Base+0x357c>
   19134:	ldr	r0, [sl]
   19138:	mov	r1, #25
   1913c:	b	15570 <main@@Base+0x2278>
   19140:	bne	19150 <main@@Base+0x5e58>
   19144:	ldrb	r0, [r7, #2]!
   19148:	cmp	r0, #32
   1914c:	bhi	19160 <main@@Base+0x5e68>
   19150:	mov	r0, sl
   19154:	mov	r2, r6
   19158:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1915c:	mov	r7, r0
   19160:	cmp	r9, r7
   19164:	beq	166ac <main@@Base+0x33b4>
   19168:	mov	r2, r6
   1916c:	mov	r6, #0
   19170:	cmp	r7, r2
   19174:	str	r6, [fp, #-52]	; 0xffffffcc
   19178:	str	r6, [fp, #-56]	; 0xffffffc8
   1917c:	str	r6, [sp, #60]	; 0x3c
   19180:	str	r6, [sp, #56]	; 0x38
   19184:	str	r6, [fp, #-60]	; 0xffffffc4
   19188:	beq	191e0 <main@@Base+0x5ee8>
   1918c:	sub	r0, fp, #56	; 0x38
   19190:	mov	r1, r7
   19194:	sub	r3, fp, #60	; 0x3c
   19198:	str	r0, [sp]
   1919c:	mov	r0, sl
   191a0:	bl	323e8 <flatcc_json_parser_integer@@Base>
   191a4:	cmp	r0, r7
   191a8:	beq	191f8 <main@@Base+0x5f00>
   191ac:	sub	r9, fp, #60	; 0x3c
   191b0:	mov	r4, r0
   191b4:	ldm	r9, {r0, r6, r9}
   191b8:	cmp	r0, #0
   191bc:	beq	19214 <main@@Base+0x5f1c>
   191c0:	subs	r0, r6, #1
   191c4:	sbcs	r0, r9, #-2147483648	; 0x80000000
   191c8:	bcc	1924c <main@@Base+0x5f54>
   191cc:	ldr	r2, [sp, #44]	; 0x2c
   191d0:	mov	r0, sl
   191d4:	mov	r1, r4
   191d8:	mov	r3, #8
   191dc:	b	1922c <main@@Base+0x5f34>
   191e0:	mov	r4, r2
   191e4:	mov	r9, #0
   191e8:	ldr	r5, [sp, #40]	; 0x28
   191ec:	cmp	r7, r4
   191f0:	bne	192a8 <main@@Base+0x5fb0>
   191f4:	b	19268 <main@@Base+0x5f70>
   191f8:	mov	r6, #0
   191fc:	mov	r9, #0
   19200:	mov	r4, r7
   19204:	ldr	r5, [sp, #40]	; 0x28
   19208:	cmp	r7, r4
   1920c:	bne	192a8 <main@@Base+0x5fb0>
   19210:	b	19268 <main@@Base+0x5f70>
   19214:	cmn	r9, #1
   19218:	bgt	19254 <main@@Base+0x5f5c>
   1921c:	ldr	r2, [sp, #44]	; 0x2c
   19220:	mov	r0, sl
   19224:	mov	r1, r4
   19228:	mov	r3, #7
   1922c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   19230:	mov	r4, r0
   19234:	mov	r6, #0
   19238:	mov	r9, #0
   1923c:	ldr	r5, [sp, #40]	; 0x28
   19240:	cmp	r7, r4
   19244:	bne	192a8 <main@@Base+0x5fb0>
   19248:	b	19268 <main@@Base+0x5f70>
   1924c:	rsbs	r6, r6, #0
   19250:	rsc	r9, r9, #0
   19254:	str	r6, [sp, #56]	; 0x38
   19258:	str	r9, [sp, #60]	; 0x3c
   1925c:	ldr	r5, [sp, #40]	; 0x28
   19260:	cmp	r7, r4
   19264:	bne	192a8 <main@@Base+0x5fb0>
   19268:	add	r0, sp, #56	; 0x38
   1926c:	ldr	r4, [sp, #44]	; 0x2c
   19270:	mov	r1, r7
   19274:	str	r0, [sp]
   19278:	movw	r0, #33032	; 0x8108
   1927c:	movt	r0, #4
   19280:	add	r3, r0, #12
   19284:	mov	r0, sl
   19288:	mov	r2, r4
   1928c:	bl	240d0 <main@@Base+0x10dd8>
   19290:	cmp	r0, r7
   19294:	cmpne	r0, r4
   19298:	beq	1dc98 <main@@Base+0xa9a0>
   1929c:	ldr	r6, [sp, #56]	; 0x38
   192a0:	ldr	r9, [sp, #60]	; 0x3c
   192a4:	mov	r4, r0
   192a8:	orrs	r0, r6, r9
   192ac:	bne	192bc <main@@Base+0x5fc4>
   192b0:	ldrb	r0, [sl, #8]
   192b4:	tst	r0, #2
   192b8:	beq	1a530 <main@@Base+0x7238>
   192bc:	ldr	r0, [sl]
   192c0:	mov	r1, #18
   192c4:	b	1a518 <main@@Base+0x7220>
   192c8:	beq	1a7c0 <main@@Base+0x74c8>
   192cc:	b	1a7d0 <main@@Base+0x74d8>
   192d0:	bne	192e0 <main@@Base+0x5fe8>
   192d4:	ldrb	r0, [r2, #2]!
   192d8:	cmp	r0, #32
   192dc:	bhi	192f0 <main@@Base+0x5ff8>
   192e0:	mov	r0, sl
   192e4:	mov	r2, r6
   192e8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   192ec:	mov	r2, r0
   192f0:	cmp	r4, r2
   192f4:	beq	1c958 <main@@Base+0x9660>
   192f8:	ldr	r0, [sp, #48]	; 0x30
   192fc:	movw	r1, #33392	; 0x8270
   19300:	mov	r3, #8
   19304:	movt	r1, #4
   19308:	str	r3, [sp]
   1930c:	mov	r3, #0
   19310:	add	r1, r1, #64	; 0x40
   19314:	stmib	sp, {r0, r1}
   19318:	movw	r0, #416	; 0x1a0
   1931c:	mov	r1, r2
   19320:	mov	r2, r6
   19324:	movt	r0, #2
   19328:	str	r0, [sp, #12]
   1932c:	mov	r0, sl
   19330:	bl	32f3c <flatcc_json_parser_union_type@@Base>
   19334:	b	1686c <main@@Base+0x3574>
   19338:	bne	19348 <main@@Base+0x6050>
   1933c:	ldrb	r0, [r4, #2]!
   19340:	cmp	r0, #32
   19344:	bhi	19358 <main@@Base+0x6060>
   19348:	mov	r0, sl
   1934c:	mov	r2, r6
   19350:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19354:	mov	r4, r0
   19358:	cmp	r9, r4
   1935c:	beq	1a870 <main@@Base+0x7578>
   19360:	mov	r0, #0
   19364:	mov	r1, #0
   19368:	str	r0, [sp, #52]	; 0x34
   1936c:	ldr	r0, [sl]
   19370:	bl	2cd8c <flatcc_builder_start_table@@Base>
   19374:	cmp	r0, #0
   19378:	bne	193e8 <main@@Base+0x60f0>
   1937c:	cmp	r4, r6
   19380:	beq	193c4 <main@@Base+0x60cc>
   19384:	ldrb	r0, [r4]
   19388:	cmp	r0, #123	; 0x7b
   1938c:	bne	193c4 <main@@Base+0x60cc>
   19390:	add	r1, r4, #1
   19394:	sub	r0, r6, r1
   19398:	cmp	r0, #2
   1939c:	blt	1c0c4 <main@@Base+0x8dcc>
   193a0:	ldrb	r0, [r1]
   193a4:	cmp	r0, #32
   193a8:	bls	1c0b0 <main@@Base+0x8db8>
   193ac:	ldr	r6, [sp, #44]	; 0x2c
   193b0:	mov	r4, r1
   193b4:	cmp	r4, r6
   193b8:	mov	r3, r6
   193bc:	bne	1c0e0 <main@@Base+0x8de8>
   193c0:	b	1c130 <main@@Base+0x8e38>
   193c4:	mov	r0, sl
   193c8:	mov	r1, r4
   193cc:	mov	r2, r6
   193d0:	mov	r3, #21
   193d4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   193d8:	mov	r4, r0
   193dc:	ldr	r0, [sl, #24]
   193e0:	cmp	r0, #0
   193e4:	beq	1c770 <main@@Base+0x9478>
   193e8:	mov	r0, sl
   193ec:	mov	r1, r4
   193f0:	mov	r2, r6
   193f4:	mov	r3, #33	; 0x21
   193f8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   193fc:	mov	r4, r0
   19400:	ldr	r0, [sp, #52]	; 0x34
   19404:	cmp	r0, #0
   19408:	beq	133b4 <main@@Base+0xbc>
   1940c:	ldr	r0, [sl]
   19410:	mov	r1, #34	; 0x22
   19414:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   19418:	cmp	r0, #0
   1941c:	bne	15f2c <main@@Base+0x2c34>
   19420:	b	133b4 <main@@Base+0xbc>
   19424:	ldr	r5, [sp, #40]	; 0x28
   19428:	mov	r4, r6
   1942c:	b	16f58 <main@@Base+0x3c60>
   19430:	cmp	r0, #93	; 0x5d
   19434:	bne	1ac14 <main@@Base+0x791c>
   19438:	ldr	r6, [sp, #44]	; 0x2c
   1943c:	ldr	sl, [sp, #36]	; 0x24
   19440:	add	r1, r4, #1
   19444:	sub	r0, r6, r1
   19448:	cmp	r0, #2
   1944c:	ldr	r5, [sp, #40]	; 0x28
   19450:	blt	19514 <main@@Base+0x621c>
   19454:	ldrb	r0, [r1]
   19458:	cmp	r0, #32
   1945c:	bls	194f8 <main@@Base+0x6200>
   19460:	ldr	r6, [sp, #44]	; 0x2c
   19464:	ldr	sl, [sp, #36]	; 0x24
   19468:	ldr	r5, [sp, #40]	; 0x28
   1946c:	mov	r4, r1
   19470:	b	16f58 <main@@Base+0x3c60>
   19474:	bne	19488 <main@@Base+0x6190>
   19478:	mov	r8, r1
   1947c:	ldrb	r0, [r8, #1]!
   19480:	cmp	r0, #32
   19484:	bhi	19498 <main@@Base+0x61a0>
   19488:	mov	r0, sl
   1948c:	mov	r2, r6
   19490:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19494:	mov	r8, r0
   19498:	cmp	r8, r6
   1949c:	beq	194e0 <main@@Base+0x61e8>
   194a0:	ldrb	r0, [r8]
   194a4:	cmp	r0, #58	; 0x3a
   194a8:	bne	194e0 <main@@Base+0x61e8>
   194ac:	add	r1, r8, #1
   194b0:	sub	r0, r6, r1
   194b4:	cmp	r0, #2
   194b8:	blt	1be34 <main@@Base+0x8b3c>
   194bc:	ldrb	r0, [r1]
   194c0:	cmp	r0, #32
   194c4:	bls	1be1c <main@@Base+0x8b24>
   194c8:	ldr	r6, [sp, #44]	; 0x2c
   194cc:	ldr	sl, [sp, #36]	; 0x24
   194d0:	mov	r8, r1
   194d4:	cmp	r7, r8
   194d8:	bne	1be4c <main@@Base+0x8b54>
   194dc:	b	1beac <main@@Base+0x8bb4>
   194e0:	mov	r0, sl
   194e4:	mov	r1, r8
   194e8:	mov	r2, r6
   194ec:	mov	r3, #4
   194f0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   194f4:	b	1be40 <main@@Base+0x8b48>
   194f8:	ldr	r6, [sp, #44]	; 0x2c
   194fc:	ldr	sl, [sp, #36]	; 0x24
   19500:	ldr	r5, [sp, #40]	; 0x28
   19504:	bne	19514 <main@@Base+0x621c>
   19508:	ldrb	r0, [r4, #2]!
   1950c:	cmp	r0, #32
   19510:	bhi	16f58 <main@@Base+0x3c60>
   19514:	mov	r0, sl
   19518:	mov	r2, r6
   1951c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19520:	b	16f54 <main@@Base+0x3c5c>
   19524:	mov	r0, sl
   19528:	mov	r1, r6
   1952c:	b	1ac24 <main@@Base+0x792c>
   19530:	bne	19540 <main@@Base+0x6248>
   19534:	ldrb	r0, [r4, #2]!
   19538:	cmp	r0, #32
   1953c:	bhi	19550 <main@@Base+0x6258>
   19540:	mov	r0, sl
   19544:	mov	r2, r6
   19548:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1954c:	mov	r4, r0
   19550:	cmp	r4, r6
   19554:	mov	r2, r6
   19558:	beq	195a4 <main@@Base+0x62ac>
   1955c:	ldrb	r0, [r4]
   19560:	cmp	r0, #93	; 0x5d
   19564:	bne	195a0 <main@@Base+0x62a8>
   19568:	add	r1, r4, #1
   1956c:	sub	r0, r6, r1
   19570:	cmp	r0, #2
   19574:	blt	1d6d8 <main@@Base+0xa3e0>
   19578:	ldrb	r0, [r1]
   1957c:	cmp	r0, #32
   19580:	bhi	1b340 <main@@Base+0x8048>
   19584:	ldr	r6, [sp, #44]	; 0x2c
   19588:	ldr	sl, [sp, #36]	; 0x24
   1958c:	bne	1d6d8 <main@@Base+0xa3e0>
   19590:	ldrb	r0, [r4, #2]!
   19594:	cmp	r0, #32
   19598:	bhi	18d50 <main@@Base+0x5a58>
   1959c:	b	1d6d8 <main@@Base+0xa3e0>
   195a0:	mov	r2, r4
   195a4:	mov	r1, r2
   195a8:	mov	r0, sl
   195ac:	mov	r2, r6
   195b0:	add	r3, sp, #52	; 0x34
   195b4:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   195b8:	mov	r4, r0
   195bc:	ldr	r0, [sp, #52]	; 0x34
   195c0:	cmp	r0, #0
   195c4:	beq	133b4 <main@@Base+0xbc>
   195c8:	ldr	r0, [sl]
   195cc:	mov	r1, #1
   195d0:	bl	2c018 <flatcc_builder_extend_offset_vector@@Base>
   195d4:	cmp	r0, #0
   195d8:	beq	133b4 <main@@Base+0xbc>
   195dc:	ldr	r1, [sp, #52]	; 0x34
   195e0:	str	r1, [r0]
   195e4:	sub	r0, r6, r4
   195e8:	cmp	r0, #2
   195ec:	blt	19620 <main@@Base+0x6328>
   195f0:	ldrb	r0, [r4]
   195f4:	cmp	r0, #32
   195f8:	bls	1960c <main@@Base+0x6314>
   195fc:	mov	r2, r4
   19600:	cmp	r2, r6
   19604:	bne	1963c <main@@Base+0x6344>
   19608:	b	1b2cc <main@@Base+0x7fd4>
   1960c:	bne	19620 <main@@Base+0x6328>
   19610:	mov	r2, r4
   19614:	ldrb	r0, [r2, #1]!
   19618:	cmp	r0, #32
   1961c:	bhi	19634 <main@@Base+0x633c>
   19620:	mov	r0, sl
   19624:	mov	r1, r4
   19628:	mov	r2, r6
   1962c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19630:	mov	r2, r0
   19634:	cmp	r2, r6
   19638:	beq	1b2cc <main@@Base+0x7fd4>
   1963c:	ldrb	r0, [r2]
   19640:	cmp	r0, #44	; 0x2c
   19644:	bne	1b314 <main@@Base+0x801c>
   19648:	add	r1, r2, #1
   1964c:	sub	r0, r6, r1
   19650:	cmp	r0, #2
   19654:	blt	19684 <main@@Base+0x638c>
   19658:	ldrb	r0, [r1]
   1965c:	cmp	r0, #32
   19660:	bls	19674 <main@@Base+0x637c>
   19664:	mov	r2, r1
   19668:	cmp	r2, r6
   1966c:	bne	1969c <main@@Base+0x63a4>
   19670:	b	1b350 <main@@Base+0x8058>
   19674:	bne	19684 <main@@Base+0x638c>
   19678:	ldrb	r0, [r2, #2]!
   1967c:	cmp	r0, #32
   19680:	bhi	19694 <main@@Base+0x639c>
   19684:	mov	r0, sl
   19688:	mov	r2, r6
   1968c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19690:	mov	r2, r0
   19694:	cmp	r2, r6
   19698:	beq	1b350 <main@@Base+0x8058>
   1969c:	ldrb	r0, [r2]
   196a0:	cmp	r0, #93	; 0x5d
   196a4:	bne	195a4 <main@@Base+0x62ac>
   196a8:	add	r1, r2, #1
   196ac:	sub	r0, r6, r1
   196b0:	cmp	r0, #2
   196b4:	bge	1b334 <main@@Base+0x803c>
   196b8:	b	1d6d8 <main@@Base+0xa3e0>
   196bc:	bne	196cc <main@@Base+0x63d4>
   196c0:	ldrb	r0, [r7, #2]!
   196c4:	cmp	r0, #32
   196c8:	bhi	196dc <main@@Base+0x63e4>
   196cc:	mov	r0, sl
   196d0:	mov	r2, r6
   196d4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   196d8:	mov	r7, r0
   196dc:	cmp	r7, r6
   196e0:	mov	r4, r6
   196e4:	beq	19730 <main@@Base+0x6438>
   196e8:	ldrb	r0, [r7]
   196ec:	cmp	r0, #93	; 0x5d
   196f0:	bne	1972c <main@@Base+0x6434>
   196f4:	add	r1, r7, #1
   196f8:	sub	r0, r6, r1
   196fc:	cmp	r0, #2
   19700:	blt	1d704 <main@@Base+0xa40c>
   19704:	ldrb	r0, [r1]
   19708:	cmp	r0, #32
   1970c:	bhi	1ae4c <main@@Base+0x7b54>
   19710:	ldr	r6, [sp, #44]	; 0x2c
   19714:	ldr	sl, [sp, #36]	; 0x24
   19718:	bne	1d704 <main@@Base+0xa40c>
   1971c:	ldrb	r0, [r7, #2]!
   19720:	cmp	r0, #32
   19724:	bhi	18e20 <main@@Base+0x5b28>
   19728:	b	1d704 <main@@Base+0xa40c>
   1972c:	mov	r4, r7
   19730:	ldr	r0, [sl]
   19734:	mov	r1, #1
   19738:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1973c:	mov	r8, r0
   19740:	cmp	r0, #0
   19744:	beq	133b4 <main@@Base+0xbc>
   19748:	cmp	r4, r6
   1974c:	beq	1978c <main@@Base+0x6494>
   19750:	ldrb	r0, [r4]
   19754:	cmp	r0, #123	; 0x7b
   19758:	bne	1978c <main@@Base+0x6494>
   1975c:	add	r1, r4, #1
   19760:	sub	r0, r6, r1
   19764:	cmp	r0, #2
   19768:	blt	197f4 <main@@Base+0x64fc>
   1976c:	ldrb	r0, [r1]
   19770:	cmp	r0, #32
   19774:	bls	197e4 <main@@Base+0x64ec>
   19778:	mov	r4, r1
   1977c:	cmp	r4, r6
   19780:	mov	r2, r6
   19784:	bne	19810 <main@@Base+0x6518>
   19788:	b	19858 <main@@Base+0x6560>
   1978c:	mov	r0, sl
   19790:	mov	r1, r4
   19794:	mov	r2, r6
   19798:	mov	r3, #21
   1979c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   197a0:	mov	r4, r0
   197a4:	sub	r0, r6, r4
   197a8:	cmp	r0, #2
   197ac:	blt	1a010 <main@@Base+0x6d18>
   197b0:	ldrb	r0, [r4]
   197b4:	cmp	r0, #32
   197b8:	bls	197cc <main@@Base+0x64d4>
   197bc:	mov	r7, r4
   197c0:	cmp	r7, r6
   197c4:	bne	1a02c <main@@Base+0x6d34>
   197c8:	b	1ac30 <main@@Base+0x7938>
   197cc:	bne	1a010 <main@@Base+0x6d18>
   197d0:	mov	r7, r4
   197d4:	ldrb	r0, [r7, #1]!
   197d8:	cmp	r0, #32
   197dc:	bls	1a010 <main@@Base+0x6d18>
   197e0:	b	1a024 <main@@Base+0x6d2c>
   197e4:	bne	197f4 <main@@Base+0x64fc>
   197e8:	ldrb	r0, [r4, #2]!
   197ec:	cmp	r0, #32
   197f0:	bhi	19804 <main@@Base+0x650c>
   197f4:	mov	r0, sl
   197f8:	mov	r2, r6
   197fc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19800:	mov	r4, r0
   19804:	cmp	r4, r6
   19808:	mov	r2, r6
   1980c:	beq	19858 <main@@Base+0x6560>
   19810:	ldrb	r0, [r4]
   19814:	cmp	r0, #125	; 0x7d
   19818:	bne	19854 <main@@Base+0x655c>
   1981c:	add	r1, r4, #1
   19820:	sub	r0, r6, r1
   19824:	cmp	r0, #2
   19828:	blt	1a0d8 <main@@Base+0x6de0>
   1982c:	ldrb	r0, [r1]
   19830:	cmp	r0, #32
   19834:	bhi	19ff8 <main@@Base+0x6d00>
   19838:	ldr	r6, [sp, #44]	; 0x2c
   1983c:	ldr	sl, [sp, #36]	; 0x24
   19840:	bne	1a0d8 <main@@Base+0x6de0>
   19844:	ldrb	r0, [r4, #2]!
   19848:	cmp	r0, #32
   1984c:	bhi	197a4 <main@@Base+0x64ac>
   19850:	b	1a0d8 <main@@Base+0x6de0>
   19854:	mov	r2, r4
   19858:	cmp	r2, r6
   1985c:	mov	r9, r6
   19860:	beq	198b4 <main@@Base+0x65bc>
   19864:	ldrb	r0, [r2]
   19868:	cmp	r0, #46	; 0x2e
   1986c:	beq	19888 <main@@Base+0x6590>
   19870:	cmp	r0, #34	; 0x22
   19874:	bne	198a4 <main@@Base+0x65ac>
   19878:	ldr	r0, [sp, #32]
   1987c:	mov	r1, #0
   19880:	add	r9, r2, #1
   19884:	b	198b0 <main@@Base+0x65b8>
   19888:	mov	r1, r2
   1988c:	mov	r0, sl
   19890:	mov	r2, r6
   19894:	mov	r3, #5
   19898:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1989c:	mov	r9, r0
   198a0:	b	198b4 <main@@Base+0x65bc>
   198a4:	ldr	r0, [sp, #32]
   198a8:	mov	r1, #1
   198ac:	mov	r9, r2
   198b0:	str	r1, [r0]
   198b4:	sub	lr, r6, r9
   198b8:	mov	r0, #8
   198bc:	cmp	lr, #8
   198c0:	movcc	r0, lr
   198c4:	sub	r7, r0, #1
   198c8:	cmp	r7, #7
   198cc:	bhi	19de4 <main@@Base+0x6aec>
   198d0:	add	r4, pc, #32
   198d4:	mov	r1, #0
   198d8:	mov	ip, #0
   198dc:	mov	sl, #0
   198e0:	mov	r6, #0
   198e4:	mov	r3, #0
   198e8:	mov	r5, #0
   198ec:	mov	r2, #0
   198f0:	mov	r0, #0
   198f4:	ldr	pc, [r4, r7, lsl #2]
   198f8:	andeq	r9, r1, ip, asr r9
   198fc:	andeq	r9, r1, r4, asr r9
   19900:	andeq	r9, r1, ip, asr #18
   19904:	andeq	r9, r1, r4, asr #18
   19908:	andeq	r9, r1, r8, lsr r9
   1990c:	andeq	r9, r1, ip, lsr #18
   19910:	andeq	r9, r1, ip, lsl r9
   19914:	andeq	r9, r1, r8, lsl r9
   19918:	ldrb	ip, [r9, #7]
   1991c:	ldrb	r0, [r9, #6]
   19920:	mov	sl, r1
   19924:	orr	r0, ip, r0, lsl #8
   19928:	mov	r1, r0
   1992c:	ldrb	r0, [r9, #5]
   19930:	mov	r6, sl
   19934:	orr	r1, r1, r0, lsl #16
   19938:	ldrb	r0, [r9, #4]
   1993c:	mov	r3, r6
   19940:	orr	r1, r1, r0, lsl #24
   19944:	ldrb	r0, [r9, #3]
   19948:	orr	r5, r0, r3
   1994c:	ldrb	r0, [r9, #2]
   19950:	orr	r2, r5, r0, lsl #8
   19954:	ldrb	r0, [r9, #1]
   19958:	orr	r0, r2, r0, lsl #16
   1995c:	ldrb	r2, [r9]
   19960:	movw	r3, #0
   19964:	movt	r3, #26980	; 0x6964
   19968:	orr	r0, r0, r2, lsl #24
   1996c:	mov	r2, r0
   19970:	bfc	r2, #0, #16
   19974:	teq	r2, r3
   19978:	bne	199d8 <main@@Base+0x66e0>
   1997c:	ldr	r6, [sp, #44]	; 0x2c
   19980:	ldr	sl, [sp, #36]	; 0x24
   19984:	cmp	lr, #3
   19988:	mov	r7, r9
   1998c:	blt	19c24 <main@@Base+0x692c>
   19990:	ldr	r2, [sp, #32]
   19994:	mov	r1, r9
   19998:	ldrb	r0, [r1, #2]!
   1999c:	ldr	r2, [r2]
   199a0:	cmp	r2, #0
   199a4:	beq	19a58 <main@@Base+0x6760>
   199a8:	cmp	r0, #33	; 0x21
   199ac:	bcc	199bc <main@@Base+0x66c4>
   199b0:	cmp	r0, #58	; 0x3a
   199b4:	mov	r7, r9
   199b8:	bne	19c24 <main@@Base+0x692c>
   199bc:	ldr	r0, [sp, #32]
   199c0:	mov	r2, #0
   199c4:	str	r2, [r0]
   199c8:	sub	r0, r6, r1
   199cc:	cmp	r0, #2
   199d0:	bge	19a74 <main@@Base+0x677c>
   199d4:	b	19af4 <main@@Base+0x67fc>
   199d8:	movw	r2, #25445	; 0x6365
   199dc:	ldr	r6, [sp, #44]	; 0x2c
   199e0:	ldr	sl, [sp, #36]	; 0x24
   199e4:	movt	r2, #24942	; 0x616e
   199e8:	eor	r1, r1, r2
   199ec:	movw	r2, #29556	; 0x7374
   199f0:	movt	r2, #25705	; 0x6469
   199f4:	eor	r0, r0, r2
   199f8:	orrs	r0, r1, r0
   199fc:	bne	19de4 <main@@Base+0x6aec>
   19a00:	cmp	lr, #9
   19a04:	mov	r7, r9
   19a08:	blt	19d7c <main@@Base+0x6a84>
   19a0c:	ldr	r2, [sp, #32]
   19a10:	mov	r1, r9
   19a14:	ldrb	r0, [r1, #8]!
   19a18:	ldr	r2, [r2]
   19a1c:	cmp	r2, #0
   19a20:	beq	19a98 <main@@Base+0x67a0>
   19a24:	cmp	r0, #33	; 0x21
   19a28:	bcc	19a38 <main@@Base+0x6740>
   19a2c:	cmp	r0, #58	; 0x3a
   19a30:	mov	r7, r9
   19a34:	bne	19d7c <main@@Base+0x6a84>
   19a38:	ldr	r0, [sp, #32]
   19a3c:	mov	r2, #0
   19a40:	str	r2, [r0]
   19a44:	ldr	r4, [sp, #44]	; 0x2c
   19a48:	sub	r0, r4, r1
   19a4c:	cmp	r0, #2
   19a50:	bge	19ab8 <main@@Base+0x67c0>
   19a54:	b	19b7c <main@@Base+0x6884>
   19a58:	cmp	r0, #34	; 0x22
   19a5c:	mov	r7, r9
   19a60:	bne	19c24 <main@@Base+0x692c>
   19a64:	add	r1, r9, #3
   19a68:	sub	r0, r6, r1
   19a6c:	cmp	r0, #2
   19a70:	blt	19af4 <main@@Base+0x67fc>
   19a74:	ldrb	r0, [r1]
   19a78:	cmp	r0, #32
   19a7c:	bls	19ad8 <main@@Base+0x67e0>
   19a80:	ldr	r6, [sp, #44]	; 0x2c
   19a84:	ldr	sl, [sp, #36]	; 0x24
   19a88:	mov	r7, r1
   19a8c:	cmp	r7, r6
   19a90:	bne	19b0c <main@@Base+0x6814>
   19a94:	b	19b4c <main@@Base+0x6854>
   19a98:	cmp	r0, #34	; 0x22
   19a9c:	mov	r7, r9
   19aa0:	bne	19d7c <main@@Base+0x6a84>
   19aa4:	add	r1, r9, #9
   19aa8:	ldr	r4, [sp, #44]	; 0x2c
   19aac:	sub	r0, r4, r1
   19ab0:	cmp	r0, #2
   19ab4:	blt	19b7c <main@@Base+0x6884>
   19ab8:	ldrb	r0, [r1]
   19abc:	cmp	r0, #32
   19ac0:	bls	19b64 <main@@Base+0x686c>
   19ac4:	ldr	r4, [sp, #44]	; 0x2c
   19ac8:	mov	r7, r1
   19acc:	cmp	r7, r4
   19ad0:	bne	19b94 <main@@Base+0x689c>
   19ad4:	b	19bdc <main@@Base+0x68e4>
   19ad8:	ldr	r6, [sp, #44]	; 0x2c
   19adc:	ldr	sl, [sp, #36]	; 0x24
   19ae0:	bne	19af4 <main@@Base+0x67fc>
   19ae4:	mov	r7, r1
   19ae8:	ldrb	r0, [r7, #1]!
   19aec:	cmp	r0, #32
   19af0:	bhi	19b04 <main@@Base+0x680c>
   19af4:	mov	r0, sl
   19af8:	mov	r2, r6
   19afc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19b00:	mov	r7, r0
   19b04:	cmp	r7, r6
   19b08:	beq	19b4c <main@@Base+0x6854>
   19b0c:	ldrb	r0, [r7]
   19b10:	cmp	r0, #58	; 0x3a
   19b14:	bne	19b4c <main@@Base+0x6854>
   19b18:	add	r1, r7, #1
   19b1c:	sub	r0, r6, r1
   19b20:	cmp	r0, #2
   19b24:	blt	19c14 <main@@Base+0x691c>
   19b28:	ldrb	r0, [r1]
   19b2c:	cmp	r0, #32
   19b30:	bls	19bfc <main@@Base+0x6904>
   19b34:	ldr	r6, [sp, #44]	; 0x2c
   19b38:	ldr	sl, [sp, #36]	; 0x24
   19b3c:	mov	r7, r1
   19b40:	cmp	r9, r7
   19b44:	bne	19c2c <main@@Base+0x6934>
   19b48:	b	19de4 <main@@Base+0x6aec>
   19b4c:	mov	r0, sl
   19b50:	mov	r1, r7
   19b54:	mov	r2, r6
   19b58:	mov	r3, #4
   19b5c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   19b60:	b	19c20 <main@@Base+0x6928>
   19b64:	ldr	r4, [sp, #44]	; 0x2c
   19b68:	bne	19b7c <main@@Base+0x6884>
   19b6c:	mov	r7, r1
   19b70:	ldrb	r0, [r7, #1]!
   19b74:	cmp	r0, #32
   19b78:	bhi	19b8c <main@@Base+0x6894>
   19b7c:	ldr	r0, [sp, #36]	; 0x24
   19b80:	mov	r2, r4
   19b84:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19b88:	mov	r7, r0
   19b8c:	cmp	r7, r4
   19b90:	beq	19bdc <main@@Base+0x68e4>
   19b94:	ldrb	r0, [r7]
   19b98:	cmp	r0, #58	; 0x3a
   19b9c:	bne	19bdc <main@@Base+0x68e4>
   19ba0:	ldr	r6, [sp, #44]	; 0x2c
   19ba4:	ldr	sl, [sp, #36]	; 0x24
   19ba8:	add	r1, r7, #1
   19bac:	sub	r0, r6, r1
   19bb0:	cmp	r0, #2
   19bb4:	blt	19d6c <main@@Base+0x6a74>
   19bb8:	ldrb	r0, [r1]
   19bbc:	cmp	r0, #32
   19bc0:	bls	19d54 <main@@Base+0x6a5c>
   19bc4:	ldr	r6, [sp, #44]	; 0x2c
   19bc8:	ldr	sl, [sp, #36]	; 0x24
   19bcc:	mov	r7, r1
   19bd0:	cmp	r9, r7
   19bd4:	bne	19d84 <main@@Base+0x6a8c>
   19bd8:	b	19de4 <main@@Base+0x6aec>
   19bdc:	ldr	sl, [sp, #36]	; 0x24
   19be0:	ldr	r6, [sp, #44]	; 0x2c
   19be4:	mov	r1, r7
   19be8:	mov	r3, #4
   19bec:	mov	r0, sl
   19bf0:	mov	r2, r6
   19bf4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   19bf8:	b	19d78 <main@@Base+0x6a80>
   19bfc:	ldr	r6, [sp, #44]	; 0x2c
   19c00:	ldr	sl, [sp, #36]	; 0x24
   19c04:	bne	19c14 <main@@Base+0x691c>
   19c08:	ldrb	r0, [r7, #2]!
   19c0c:	cmp	r0, #32
   19c10:	bhi	19c24 <main@@Base+0x692c>
   19c14:	mov	r0, sl
   19c18:	mov	r2, r6
   19c1c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19c20:	mov	r7, r0
   19c24:	cmp	r9, r7
   19c28:	beq	19de4 <main@@Base+0x6aec>
   19c2c:	mov	r4, #0
   19c30:	cmp	r7, r6
   19c34:	str	r4, [fp, #-52]	; 0xffffffcc
   19c38:	str	r4, [fp, #-56]	; 0xffffffc8
   19c3c:	str	r4, [fp, #-60]	; 0xffffffc4
   19c40:	str	r4, [sp, #56]	; 0x38
   19c44:	beq	19c9c <main@@Base+0x69a4>
   19c48:	sub	r0, fp, #56	; 0x38
   19c4c:	mov	r1, r7
   19c50:	mov	r2, r6
   19c54:	add	r3, sp, #56	; 0x38
   19c58:	str	r0, [sp]
   19c5c:	mov	r0, sl
   19c60:	bl	323e8 <flatcc_json_parser_integer@@Base>
   19c64:	cmp	r0, r7
   19c68:	beq	19cac <main@@Base+0x69b4>
   19c6c:	mov	r1, r0
   19c70:	ldr	r0, [sp, #56]	; 0x38
   19c74:	cmp	r0, #0
   19c78:	beq	19cbc <main@@Base+0x69c4>
   19c7c:	mov	r0, sl
   19c80:	mov	r2, r6
   19c84:	mov	r3, #8
   19c88:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   19c8c:	mov	r1, r0
   19c90:	cmp	r7, r1
   19c94:	bne	19d40 <main@@Base+0x6a48>
   19c98:	b	19d08 <main@@Base+0x6a10>
   19c9c:	mov	r1, r6
   19ca0:	cmp	r7, r1
   19ca4:	bne	19d40 <main@@Base+0x6a48>
   19ca8:	b	19d08 <main@@Base+0x6a10>
   19cac:	mov	r1, r7
   19cb0:	cmp	r7, r1
   19cb4:	bne	19d40 <main@@Base+0x6a48>
   19cb8:	b	19d08 <main@@Base+0x6a10>
   19cbc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19cc0:	cmp	r0, #0
   19cc4:	beq	19cf0 <main@@Base+0x69f8>
   19cc8:	ldr	sl, [sp, #36]	; 0x24
   19ccc:	ldr	r6, [sp, #44]	; 0x2c
   19cd0:	mov	r3, #7
   19cd4:	mov	r0, sl
   19cd8:	mov	r2, r6
   19cdc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   19ce0:	mov	r1, r0
   19ce4:	cmp	r7, r1
   19ce8:	bne	19d40 <main@@Base+0x6a48>
   19cec:	b	19d08 <main@@Base+0x6a10>
   19cf0:	ldr	r4, [fp, #-56]	; 0xffffffc8
   19cf4:	ldr	r6, [sp, #44]	; 0x2c
   19cf8:	ldr	sl, [sp, #36]	; 0x24
   19cfc:	str	r4, [fp, #-60]	; 0xffffffc4
   19d00:	cmp	r7, r1
   19d04:	bne	19d40 <main@@Base+0x6a48>
   19d08:	movw	r3, #33392	; 0x8270
   19d0c:	sub	r0, fp, #60	; 0x3c
   19d10:	mov	r1, r7
   19d14:	mov	r2, r6
   19d18:	movt	r3, #4
   19d1c:	str	r0, [sp]
   19d20:	mov	r0, sl
   19d24:	bl	24358 <main@@Base+0x11060>
   19d28:	mov	r1, r0
   19d2c:	cmp	r0, r7
   19d30:	cmpne	r1, r6
   19d34:	beq	19f80 <main@@Base+0x6c88>
   19d38:	ldr	r4, [fp, #-60]	; 0xffffffc4
   19d3c:	ldr	sl, [sp, #36]	; 0x24
   19d40:	str	r4, [r8]
   19d44:	sub	r0, r6, r1
   19d48:	cmp	r0, #2
   19d4c:	blt	19edc <main@@Base+0x6be4>
   19d50:	b	19e04 <main@@Base+0x6b0c>
   19d54:	ldr	r6, [sp, #44]	; 0x2c
   19d58:	ldr	sl, [sp, #36]	; 0x24
   19d5c:	bne	19d6c <main@@Base+0x6a74>
   19d60:	ldrb	r0, [r7, #2]!
   19d64:	cmp	r0, #32
   19d68:	bhi	19d7c <main@@Base+0x6a84>
   19d6c:	mov	r0, sl
   19d70:	mov	r2, r6
   19d74:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19d78:	mov	r7, r0
   19d7c:	cmp	r9, r7
   19d80:	beq	19de4 <main@@Base+0x6aec>
   19d84:	mov	r4, #0
   19d88:	cmp	r7, r6
   19d8c:	str	r4, [fp, #-52]	; 0xffffffcc
   19d90:	str	r4, [fp, #-56]	; 0xffffffc8
   19d94:	str	r4, [fp, #-60]	; 0xffffffc4
   19d98:	str	r4, [sp, #56]	; 0x38
   19d9c:	beq	19e38 <main@@Base+0x6b40>
   19da0:	sub	r0, fp, #56	; 0x38
   19da4:	mov	r1, r7
   19da8:	mov	r2, r6
   19dac:	add	r3, sp, #56	; 0x38
   19db0:	str	r0, [sp]
   19db4:	mov	r0, sl
   19db8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   19dbc:	cmp	r0, r7
   19dc0:	beq	19e48 <main@@Base+0x6b50>
   19dc4:	mov	r1, r0
   19dc8:	ldr	r0, [sp, #56]	; 0x38
   19dcc:	cmp	r0, #0
   19dd0:	beq	19e58 <main@@Base+0x6b60>
   19dd4:	ldr	sl, [sp, #36]	; 0x24
   19dd8:	ldr	r6, [sp, #44]	; 0x2c
   19ddc:	mov	r3, #8
   19de0:	b	19e70 <main@@Base+0x6b78>
   19de4:	mov	r0, sl
   19de8:	mov	r1, r9
   19dec:	mov	r2, r6
   19df0:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   19df4:	mov	r1, r0
   19df8:	sub	r0, r6, r1
   19dfc:	cmp	r0, #2
   19e00:	blt	19edc <main@@Base+0x6be4>
   19e04:	ldrb	r0, [r1]
   19e08:	cmp	r0, #32
   19e0c:	bls	19e20 <main@@Base+0x6b28>
   19e10:	mov	r2, r1
   19e14:	cmp	r2, r6
   19e18:	bne	19ef4 <main@@Base+0x6bfc>
   19e1c:	b	19f98 <main@@Base+0x6ca0>
   19e20:	bne	19edc <main@@Base+0x6be4>
   19e24:	mov	r2, r1
   19e28:	ldrb	r0, [r2, #1]!
   19e2c:	cmp	r0, #32
   19e30:	bls	19edc <main@@Base+0x6be4>
   19e34:	b	19eec <main@@Base+0x6bf4>
   19e38:	mov	r1, r6
   19e3c:	cmp	r7, r1
   19e40:	bne	19ecc <main@@Base+0x6bd4>
   19e44:	b	19e88 <main@@Base+0x6b90>
   19e48:	mov	r1, r7
   19e4c:	cmp	r7, r1
   19e50:	bne	19ecc <main@@Base+0x6bd4>
   19e54:	b	19e88 <main@@Base+0x6b90>
   19e58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19e5c:	cmp	r0, #0
   19e60:	beq	19f64 <main@@Base+0x6c6c>
   19e64:	ldr	sl, [sp, #36]	; 0x24
   19e68:	ldr	r6, [sp, #44]	; 0x2c
   19e6c:	mov	r3, #7
   19e70:	mov	r0, sl
   19e74:	mov	r2, r6
   19e78:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   19e7c:	mov	r1, r0
   19e80:	cmp	r7, r1
   19e84:	bne	19ecc <main@@Base+0x6bd4>
   19e88:	sub	r0, fp, #60	; 0x3c
   19e8c:	mov	r1, r7
   19e90:	mov	r2, r6
   19e94:	str	r0, [sp]
   19e98:	movw	r0, #33392	; 0x8270
   19e9c:	movt	r0, #4
   19ea0:	add	r3, r0, #12
   19ea4:	mov	r0, sl
   19ea8:	bl	24358 <main@@Base+0x11060>
   19eac:	cmp	r0, r7
   19eb0:	mov	r1, r0
   19eb4:	ldrne	r0, [sp, #44]	; 0x2c
   19eb8:	cmpne	r1, r0
   19ebc:	beq	19f80 <main@@Base+0x6c88>
   19ec0:	ldr	r4, [fp, #-60]	; 0xffffffc4
   19ec4:	ldr	r6, [sp, #44]	; 0x2c
   19ec8:	ldr	sl, [sp, #36]	; 0x24
   19ecc:	str	r4, [r8, #4]
   19ed0:	sub	r0, r6, r1
   19ed4:	cmp	r0, #2
   19ed8:	bge	19e04 <main@@Base+0x6b0c>
   19edc:	mov	r0, sl
   19ee0:	mov	r2, r6
   19ee4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19ee8:	mov	r2, r0
   19eec:	cmp	r2, r6
   19ef0:	beq	19f98 <main@@Base+0x6ca0>
   19ef4:	ldrb	r0, [r2]
   19ef8:	cmp	r0, #44	; 0x2c
   19efc:	bne	19fac <main@@Base+0x6cb4>
   19f00:	add	r1, r2, #1
   19f04:	sub	r0, r6, r1
   19f08:	cmp	r0, #2
   19f0c:	blt	19f3c <main@@Base+0x6c44>
   19f10:	ldrb	r0, [r1]
   19f14:	cmp	r0, #32
   19f18:	bls	19f2c <main@@Base+0x6c34>
   19f1c:	mov	r2, r1
   19f20:	cmp	r2, r6
   19f24:	bne	19f54 <main@@Base+0x6c5c>
   19f28:	b	19fd0 <main@@Base+0x6cd8>
   19f2c:	bne	19f3c <main@@Base+0x6c44>
   19f30:	ldrb	r0, [r2, #2]!
   19f34:	cmp	r0, #32
   19f38:	bhi	19f4c <main@@Base+0x6c54>
   19f3c:	mov	r0, sl
   19f40:	mov	r2, r6
   19f44:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   19f48:	mov	r2, r0
   19f4c:	cmp	r2, r6
   19f50:	beq	19fd0 <main@@Base+0x6cd8>
   19f54:	ldrb	r0, [r2]
   19f58:	cmp	r0, #125	; 0x7d
   19f5c:	bne	19858 <main@@Base+0x6560>
   19f60:	b	19fdc <main@@Base+0x6ce4>
   19f64:	ldr	r4, [fp, #-56]	; 0xffffffc8
   19f68:	ldr	r6, [sp, #44]	; 0x2c
   19f6c:	ldr	sl, [sp, #36]	; 0x24
   19f70:	str	r4, [fp, #-60]	; 0xffffffc4
   19f74:	cmp	r7, r1
   19f78:	bne	19ecc <main@@Base+0x6bd4>
   19f7c:	b	19e88 <main@@Base+0x6b90>
   19f80:	ldr	sl, [sp, #36]	; 0x24
   19f84:	ldr	r6, [sp, #44]	; 0x2c
   19f88:	mov	r3, #33	; 0x21
   19f8c:	mov	r0, sl
   19f90:	mov	r2, r6
   19f94:	b	1979c <main@@Base+0x64a4>
   19f98:	mov	r4, r6
   19f9c:	sub	r0, r6, r4
   19fa0:	cmp	r0, #2
   19fa4:	bge	197b0 <main@@Base+0x64b8>
   19fa8:	b	1a010 <main@@Base+0x6d18>
   19fac:	cmp	r0, #125	; 0x7d
   19fb0:	bne	1a0a0 <main@@Base+0x6da8>
   19fb4:	ldr	r6, [sp, #44]	; 0x2c
   19fb8:	ldr	sl, [sp, #36]	; 0x24
   19fbc:	add	r1, r2, #1
   19fc0:	sub	r0, r6, r1
   19fc4:	cmp	r0, #2
   19fc8:	blt	1a0d8 <main@@Base+0x6de0>
   19fcc:	b	19fec <main@@Base+0x6cf4>
   19fd0:	mov	r0, sl
   19fd4:	mov	r1, r6
   19fd8:	b	1a0b0 <main@@Base+0x6db8>
   19fdc:	add	r1, r2, #1
   19fe0:	sub	r0, r6, r1
   19fe4:	cmp	r0, #2
   19fe8:	blt	1a0d8 <main@@Base+0x6de0>
   19fec:	ldrb	r0, [r1]
   19ff0:	cmp	r0, #32
   19ff4:	bls	1a0bc <main@@Base+0x6dc4>
   19ff8:	ldr	r6, [sp, #44]	; 0x2c
   19ffc:	ldr	sl, [sp, #36]	; 0x24
   1a000:	mov	r4, r1
   1a004:	sub	r0, r6, r4
   1a008:	cmp	r0, #2
   1a00c:	bge	197b0 <main@@Base+0x64b8>
   1a010:	mov	r0, sl
   1a014:	mov	r1, r4
   1a018:	mov	r2, r6
   1a01c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a020:	mov	r7, r0
   1a024:	cmp	r7, r6
   1a028:	beq	1ac30 <main@@Base+0x7938>
   1a02c:	ldrb	r0, [r7]
   1a030:	cmp	r0, #44	; 0x2c
   1a034:	bne	1addc <main@@Base+0x7ae4>
   1a038:	add	r1, r7, #1
   1a03c:	sub	r0, r6, r1
   1a040:	cmp	r0, #2
   1a044:	blt	1a078 <main@@Base+0x6d80>
   1a048:	ldrb	r0, [r1]
   1a04c:	cmp	r0, #32
   1a050:	bls	1a064 <main@@Base+0x6d6c>
   1a054:	mov	r4, r1
   1a058:	cmp	r4, r6
   1a05c:	bne	1a090 <main@@Base+0x6d98>
   1a060:	b	1ae24 <main@@Base+0x7b2c>
   1a064:	bne	1a078 <main@@Base+0x6d80>
   1a068:	ldrb	r0, [r7, #2]!
   1a06c:	mov	r4, r7
   1a070:	cmp	r0, #32
   1a074:	bhi	1a088 <main@@Base+0x6d90>
   1a078:	mov	r0, sl
   1a07c:	mov	r2, r6
   1a080:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a084:	mov	r4, r0
   1a088:	cmp	r4, r6
   1a08c:	beq	1ae24 <main@@Base+0x7b2c>
   1a090:	ldrb	r0, [r4]
   1a094:	cmp	r0, #93	; 0x5d
   1a098:	bne	19730 <main@@Base+0x6438>
   1a09c:	b	1ae30 <main@@Base+0x7b38>
   1a0a0:	ldr	sl, [sp, #36]	; 0x24
   1a0a4:	ldr	r6, [sp, #44]	; 0x2c
   1a0a8:	mov	r1, r2
   1a0ac:	mov	r0, sl
   1a0b0:	mov	r2, r6
   1a0b4:	mov	r3, #10
   1a0b8:	b	1979c <main@@Base+0x64a4>
   1a0bc:	ldr	r6, [sp, #44]	; 0x2c
   1a0c0:	ldr	sl, [sp, #36]	; 0x24
   1a0c4:	bne	1a0d8 <main@@Base+0x6de0>
   1a0c8:	ldrb	r0, [r2, #2]!
   1a0cc:	mov	r4, r2
   1a0d0:	cmp	r0, #32
   1a0d4:	bhi	197a4 <main@@Base+0x64ac>
   1a0d8:	mov	r0, sl
   1a0dc:	mov	r2, r6
   1a0e0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a0e4:	b	197a0 <main@@Base+0x64a8>
   1a0e8:	bne	1a0fc <main@@Base+0x6e04>
   1a0ec:	mov	r7, r1
   1a0f0:	ldrb	r0, [r7, #1]!
   1a0f4:	cmp	r0, #32
   1a0f8:	bhi	1a10c <main@@Base+0x6e14>
   1a0fc:	mov	r0, sl
   1a100:	mov	r2, r6
   1a104:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a108:	mov	r7, r0
   1a10c:	cmp	r7, r6
   1a110:	beq	1a154 <main@@Base+0x6e5c>
   1a114:	ldrb	r0, [r7]
   1a118:	cmp	r0, #58	; 0x3a
   1a11c:	bne	1a154 <main@@Base+0x6e5c>
   1a120:	add	r1, r7, #1
   1a124:	sub	r0, r6, r1
   1a128:	cmp	r0, #2
   1a12c:	blt	1bfbc <main@@Base+0x8cc4>
   1a130:	ldrb	r0, [r1]
   1a134:	cmp	r0, #32
   1a138:	bls	1bfa4 <main@@Base+0x8cac>
   1a13c:	ldr	r6, [sp, #44]	; 0x2c
   1a140:	ldr	sl, [sp, #36]	; 0x24
   1a144:	mov	r7, r1
   1a148:	cmp	r4, r7
   1a14c:	bne	1bfd4 <main@@Base+0x8cdc>
   1a150:	b	1c958 <main@@Base+0x9660>
   1a154:	mov	r0, sl
   1a158:	mov	r1, r7
   1a15c:	mov	r2, r6
   1a160:	mov	r3, #4
   1a164:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a168:	b	1bfc8 <main@@Base+0x8cd0>
   1a16c:	ldr	r6, [sp, #44]	; 0x2c
   1a170:	ldr	sl, [sp, #36]	; 0x24
   1a174:	bne	1a184 <main@@Base+0x6e8c>
   1a178:	ldrb	r0, [r4, #2]!
   1a17c:	cmp	r0, #32
   1a180:	bhi	1a194 <main@@Base+0x6e9c>
   1a184:	mov	r0, sl
   1a188:	mov	r2, r6
   1a18c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a190:	mov	r4, r0
   1a194:	cmp	r7, r4
   1a198:	beq	1beac <main@@Base+0x8bb4>
   1a19c:	ldr	r0, [sl]
   1a1a0:	bl	2c85c <flatcc_builder_start_offset_vector@@Base>
   1a1a4:	cmp	r0, #0
   1a1a8:	bne	133b4 <main@@Base+0xbc>
   1a1ac:	cmp	r4, r6
   1a1b0:	beq	1a1f8 <main@@Base+0x6f00>
   1a1b4:	ldrb	r0, [r4]
   1a1b8:	cmp	r0, #91	; 0x5b
   1a1bc:	bne	1a1f8 <main@@Base+0x6f00>
   1a1c0:	add	r1, r4, #1
   1a1c4:	sub	r0, r6, r1
   1a1c8:	cmp	r0, #2
   1a1cc:	blt	1ac50 <main@@Base+0x7958>
   1a1d0:	ldrb	r0, [r1]
   1a1d4:	cmp	r0, #32
   1a1d8:	bls	1ac38 <main@@Base+0x7940>
   1a1dc:	ldr	r6, [sp, #44]	; 0x2c
   1a1e0:	ldr	sl, [sp, #36]	; 0x24
   1a1e4:	mov	r4, r1
   1a1e8:	cmp	r4, r6
   1a1ec:	mov	r2, r6
   1a1f0:	bne	1ac6c <main@@Base+0x7974>
   1a1f4:	b	1acc4 <main@@Base+0x79cc>
   1a1f8:	mov	r0, sl
   1a1fc:	mov	r1, r4
   1a200:	mov	r2, r6
   1a204:	mov	r3, #22
   1a208:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a20c:	mov	r4, r0
   1a210:	ldr	r0, [sl]
   1a214:	bl	2cb14 <flatcc_builder_end_offset_vector@@Base>
   1a218:	ldr	r5, [sp, #40]	; 0x28
   1a21c:	cmp	r0, #0
   1a220:	str	r0, [sp, #52]	; 0x34
   1a224:	beq	133b4 <main@@Base+0xbc>
   1a228:	ldr	r0, [sl]
   1a22c:	mov	r1, #11
   1a230:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1a234:	cmp	r0, #0
   1a238:	bne	16008 <main@@Base+0x2d10>
   1a23c:	b	133b4 <main@@Base+0xbc>
   1a240:	ldr	r6, [sp, #44]	; 0x2c
   1a244:	ldr	sl, [sp, #36]	; 0x24
   1a248:	bne	1a258 <main@@Base+0x6f60>
   1a24c:	ldrb	r0, [r7, #2]!
   1a250:	cmp	r0, #32
   1a254:	bhi	1a268 <main@@Base+0x6f70>
   1a258:	mov	r0, sl
   1a25c:	mov	r2, r6
   1a260:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a264:	mov	r7, r0
   1a268:	cmp	r9, r7
   1a26c:	beq	18270 <main@@Base+0x4f78>
   1a270:	mov	r2, r6
   1a274:	mov	r6, #0
   1a278:	cmp	r7, r2
   1a27c:	str	r6, [fp, #-52]	; 0xffffffcc
   1a280:	str	r6, [fp, #-56]	; 0xffffffc8
   1a284:	str	r6, [fp, #-60]	; 0xffffffc4
   1a288:	str	r6, [sp, #56]	; 0x38
   1a28c:	beq	1a2d4 <main@@Base+0x6fdc>
   1a290:	sub	r0, fp, #56	; 0x38
   1a294:	mov	r1, r7
   1a298:	add	r3, sp, #56	; 0x38
   1a29c:	mov	r8, r2
   1a2a0:	str	r0, [sp]
   1a2a4:	mov	r0, sl
   1a2a8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1a2ac:	cmp	r0, r7
   1a2b0:	beq	1a2ec <main@@Base+0x6ff4>
   1a2b4:	mov	r1, r0
   1a2b8:	ldr	r0, [sp, #56]	; 0x38
   1a2bc:	cmp	r0, #0
   1a2c0:	beq	1a300 <main@@Base+0x7008>
   1a2c4:	mov	r0, sl
   1a2c8:	mov	r2, r8
   1a2cc:	mov	r3, #8
   1a2d0:	b	1a320 <main@@Base+0x7028>
   1a2d4:	mov	r8, r2
   1a2d8:	mov	r4, r2
   1a2dc:	ldr	r5, [sp, #40]	; 0x28
   1a2e0:	cmp	r7, r4
   1a2e4:	bne	1a378 <main@@Base+0x7080>
   1a2e8:	b	1a334 <main@@Base+0x703c>
   1a2ec:	mov	r4, r7
   1a2f0:	ldr	r5, [sp, #40]	; 0x28
   1a2f4:	cmp	r7, r4
   1a2f8:	bne	1a378 <main@@Base+0x7080>
   1a2fc:	b	1a334 <main@@Base+0x703c>
   1a300:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a304:	cmp	r0, #0
   1a308:	beq	1ae00 <main@@Base+0x7b08>
   1a30c:	ldr	sl, [sp, #36]	; 0x24
   1a310:	ldr	r2, [sp, #44]	; 0x2c
   1a314:	mov	r3, #7
   1a318:	mov	r0, sl
   1a31c:	mov	r8, r2
   1a320:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a324:	mov	r4, r0
   1a328:	ldr	r5, [sp, #40]	; 0x28
   1a32c:	cmp	r7, r4
   1a330:	bne	1a378 <main@@Base+0x7080>
   1a334:	sub	r0, fp, #60	; 0x3c
   1a338:	mov	r1, r7
   1a33c:	mov	r2, r8
   1a340:	mov	r4, r8
   1a344:	str	r0, [sp]
   1a348:	movw	r0, #33032	; 0x8108
   1a34c:	movt	r0, #4
   1a350:	add	r3, r0, #36	; 0x24
   1a354:	mov	r0, sl
   1a358:	bl	24358 <main@@Base+0x11060>
   1a35c:	cmp	r0, r7
   1a360:	cmpne	r0, r4
   1a364:	beq	1dc98 <main@@Base+0xa9a0>
   1a368:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1a36c:	ldr	sl, [sp, #36]	; 0x24
   1a370:	ldr	r5, [sp, #40]	; 0x28
   1a374:	mov	r4, r0
   1a378:	cmp	r6, #0
   1a37c:	bne	1a38c <main@@Base+0x7094>
   1a380:	ldrb	r0, [sl, #8]
   1a384:	tst	r0, #2
   1a388:	beq	19060 <main@@Base+0x5d68>
   1a38c:	ldr	r0, [sl]
   1a390:	mov	r1, #17
   1a394:	mov	r2, #4
   1a398:	mov	r3, #4
   1a39c:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1a3a0:	cmp	r0, #0
   1a3a4:	beq	1dc94 <main@@Base+0xa99c>
   1a3a8:	str	r6, [r0]
   1a3ac:	b	19060 <main@@Base+0x5d68>
   1a3b0:	ldr	r6, [sp, #44]	; 0x2c
   1a3b4:	ldr	sl, [sp, #36]	; 0x24
   1a3b8:	bne	1a3c8 <main@@Base+0x70d0>
   1a3bc:	ldrb	r0, [r7, #2]!
   1a3c0:	cmp	r0, #32
   1a3c4:	bhi	1a3d8 <main@@Base+0x70e0>
   1a3c8:	mov	r0, sl
   1a3cc:	mov	r2, r6
   1a3d0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a3d4:	mov	r7, r0
   1a3d8:	cmp	r9, r7
   1a3dc:	beq	18368 <main@@Base+0x5070>
   1a3e0:	mov	r2, r6
   1a3e4:	mov	r6, #0
   1a3e8:	cmp	r7, r2
   1a3ec:	str	r6, [fp, #-52]	; 0xffffffcc
   1a3f0:	str	r6, [fp, #-56]	; 0xffffffc8
   1a3f4:	str	r6, [sp, #60]	; 0x3c
   1a3f8:	str	r6, [sp, #56]	; 0x38
   1a3fc:	str	r6, [fp, #-60]	; 0xffffffc4
   1a400:	beq	1a460 <main@@Base+0x7168>
   1a404:	sub	r0, fp, #56	; 0x38
   1a408:	mov	r1, r7
   1a40c:	sub	r3, fp, #60	; 0x3c
   1a410:	str	r0, [sp]
   1a414:	mov	r0, sl
   1a418:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1a41c:	cmp	r0, r7
   1a420:	beq	1a478 <main@@Base+0x7180>
   1a424:	mov	r1, r0
   1a428:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a42c:	cmp	r0, #0
   1a430:	beq	1a494 <main@@Base+0x719c>
   1a434:	ldr	r2, [sp, #44]	; 0x2c
   1a438:	mov	r0, sl
   1a43c:	mov	r3, #8
   1a440:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a444:	mov	r4, r0
   1a448:	mov	r6, #0
   1a44c:	mov	r9, #0
   1a450:	ldr	r5, [sp, #40]	; 0x28
   1a454:	cmp	r7, r4
   1a458:	bne	1a4fc <main@@Base+0x7204>
   1a45c:	b	1a4b4 <main@@Base+0x71bc>
   1a460:	mov	r4, r2
   1a464:	mov	r9, #0
   1a468:	ldr	r5, [sp, #40]	; 0x28
   1a46c:	cmp	r7, r4
   1a470:	bne	1a4fc <main@@Base+0x7204>
   1a474:	b	1a4b4 <main@@Base+0x71bc>
   1a478:	mov	r6, #0
   1a47c:	mov	r9, #0
   1a480:	mov	r4, r7
   1a484:	ldr	r5, [sp, #40]	; 0x28
   1a488:	cmp	r7, r4
   1a48c:	bne	1a4fc <main@@Base+0x7204>
   1a490:	b	1a4b4 <main@@Base+0x71bc>
   1a494:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1a498:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1a49c:	mov	r4, r1
   1a4a0:	str	r9, [sp, #60]	; 0x3c
   1a4a4:	str	r6, [sp, #56]	; 0x38
   1a4a8:	ldr	r5, [sp, #40]	; 0x28
   1a4ac:	cmp	r7, r4
   1a4b0:	bne	1a4fc <main@@Base+0x7204>
   1a4b4:	add	r0, sp, #56	; 0x38
   1a4b8:	ldr	r4, [sp, #44]	; 0x2c
   1a4bc:	mov	r1, r7
   1a4c0:	str	r0, [sp]
   1a4c4:	movw	r0, #33032	; 0x8108
   1a4c8:	movt	r0, #4
   1a4cc:	add	r3, r0, #60	; 0x3c
   1a4d0:	mov	r0, sl
   1a4d4:	mov	r2, r4
   1a4d8:	bl	245c4 <main@@Base+0x112cc>
   1a4dc:	cmp	r0, r7
   1a4e0:	cmpne	r0, r4
   1a4e4:	beq	1dc98 <main@@Base+0xa9a0>
   1a4e8:	ldr	r6, [sp, #56]	; 0x38
   1a4ec:	ldr	r9, [sp, #60]	; 0x3c
   1a4f0:	ldr	sl, [sp, #36]	; 0x24
   1a4f4:	ldr	r5, [sp, #40]	; 0x28
   1a4f8:	mov	r4, r0
   1a4fc:	orrs	r0, r6, r9
   1a500:	bne	1a510 <main@@Base+0x7218>
   1a504:	ldrb	r0, [sl, #8]
   1a508:	tst	r0, #2
   1a50c:	beq	1a530 <main@@Base+0x7238>
   1a510:	ldr	r0, [sl]
   1a514:	mov	r1, #19
   1a518:	mov	r2, #8
   1a51c:	mov	r3, #8
   1a520:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1a524:	cmp	r0, #0
   1a528:	beq	1dc94 <main@@Base+0xa99c>
   1a52c:	stm	r0, {r6, r9}
   1a530:	ldr	r6, [sp, #44]	; 0x2c
   1a534:	sub	r0, r6, r4
   1a538:	cmp	r0, #2
   1a53c:	bge	16880 <main@@Base+0x3588>
   1a540:	b	19070 <main@@Base+0x5d78>
   1a544:	beq	1b2e4 <main@@Base+0x7fec>
   1a548:	b	1b2f4 <main@@Base+0x7ffc>
   1a54c:	ldr	r6, [sp, #44]	; 0x2c
   1a550:	ldr	sl, [sp, #36]	; 0x24
   1a554:	bne	1a564 <main@@Base+0x726c>
   1a558:	ldrb	r0, [r4, #2]!
   1a55c:	cmp	r0, #32
   1a560:	bhi	1a574 <main@@Base+0x727c>
   1a564:	mov	r0, sl
   1a568:	mov	r2, r6
   1a56c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a570:	mov	r4, r0
   1a574:	cmp	r7, r4
   1a578:	beq	1beac <main@@Base+0x8bb4>
   1a57c:	ldr	r0, [sl]
   1a580:	bl	2c85c <flatcc_builder_start_offset_vector@@Base>
   1a584:	cmp	r0, #0
   1a588:	bne	133b4 <main@@Base+0xbc>
   1a58c:	cmp	r4, r6
   1a590:	beq	1a5d4 <main@@Base+0x72dc>
   1a594:	ldrb	r0, [r4]
   1a598:	cmp	r0, #91	; 0x5b
   1a59c:	bne	1a5d4 <main@@Base+0x72dc>
   1a5a0:	add	r1, r4, #1
   1a5a4:	sub	r0, r6, r1
   1a5a8:	cmp	r0, #2
   1a5ac:	blt	1ae74 <main@@Base+0x7b7c>
   1a5b0:	ldrb	r0, [r1]
   1a5b4:	cmp	r0, #32
   1a5b8:	bls	1ae5c <main@@Base+0x7b64>
   1a5bc:	ldr	r6, [sp, #44]	; 0x2c
   1a5c0:	mov	r4, r1
   1a5c4:	cmp	r4, r6
   1a5c8:	mov	r2, r6
   1a5cc:	bne	1ae90 <main@@Base+0x7b98>
   1a5d0:	b	1aee0 <main@@Base+0x7be8>
   1a5d4:	mov	r0, sl
   1a5d8:	mov	r1, r4
   1a5dc:	mov	r2, r6
   1a5e0:	mov	r3, #22
   1a5e4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a5e8:	mov	r4, r0
   1a5ec:	ldr	r0, [sl]
   1a5f0:	bl	2cb14 <flatcc_builder_end_offset_vector@@Base>
   1a5f4:	ldr	r5, [sp, #40]	; 0x28
   1a5f8:	cmp	r0, #0
   1a5fc:	str	r0, [sp, #52]	; 0x34
   1a600:	beq	133b4 <main@@Base+0xbc>
   1a604:	ldr	r0, [sl]
   1a608:	mov	r1, #10
   1a60c:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1a610:	cmp	r0, #0
   1a614:	bne	16008 <main@@Base+0x2d10>
   1a618:	b	133b4 <main@@Base+0xbc>
   1a61c:	ldr	r6, [sp, #44]	; 0x2c
   1a620:	ldr	sl, [sp, #36]	; 0x24
   1a624:	bne	1a634 <main@@Base+0x733c>
   1a628:	ldrb	r0, [r4, #2]!
   1a62c:	cmp	r0, #32
   1a630:	bhi	1a644 <main@@Base+0x734c>
   1a634:	mov	r0, sl
   1a638:	mov	r2, r6
   1a63c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a640:	mov	r4, r0
   1a644:	cmp	r7, r4
   1a648:	beq	1beac <main@@Base+0x8bb4>
   1a64c:	mov	r0, #0
   1a650:	mov	r1, #3
   1a654:	str	r0, [sp, #52]	; 0x34
   1a658:	ldr	r0, [sl]
   1a65c:	bl	2cd8c <flatcc_builder_start_table@@Base>
   1a660:	cmp	r0, #0
   1a664:	bne	1db98 <main@@Base+0xa8a0>
   1a668:	cmp	r4, r6
   1a66c:	beq	1a6ac <main@@Base+0x73b4>
   1a670:	ldrb	r0, [r4]
   1a674:	cmp	r0, #123	; 0x7b
   1a678:	bne	1a6ac <main@@Base+0x73b4>
   1a67c:	add	r1, r4, #1
   1a680:	sub	r0, r6, r1
   1a684:	cmp	r0, #2
   1a688:	blt	1cce0 <main@@Base+0x99e8>
   1a68c:	ldrb	r0, [r1]
   1a690:	cmp	r0, #32
   1a694:	bls	1ccd0 <main@@Base+0x99d8>
   1a698:	mov	r4, r1
   1a69c:	ldr	r2, [sp, #44]	; 0x2c
   1a6a0:	cmp	r4, r2
   1a6a4:	bne	1ccfc <main@@Base+0x9a04>
   1a6a8:	b	1cd48 <main@@Base+0x9a50>
   1a6ac:	mov	r0, sl
   1a6b0:	mov	r1, r4
   1a6b4:	mov	r2, r6
   1a6b8:	mov	r3, #21
   1a6bc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a6c0:	mov	r4, r0
   1a6c4:	ldr	r0, [sl, #24]
   1a6c8:	cmp	r0, #0
   1a6cc:	beq	1db70 <main@@Base+0xa878>
   1a6d0:	ldr	r6, [sp, #44]	; 0x2c
   1a6d4:	b	1db98 <main@@Base+0xa8a0>
   1a6d8:	ldr	r6, [sp, #44]	; 0x2c
   1a6dc:	ldr	sl, [sp, #36]	; 0x24
   1a6e0:	bne	1a6f0 <main@@Base+0x73f8>
   1a6e4:	ldrb	r0, [r4, #2]!
   1a6e8:	cmp	r0, #32
   1a6ec:	bhi	1a700 <main@@Base+0x7408>
   1a6f0:	mov	r0, sl
   1a6f4:	mov	r2, r6
   1a6f8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a6fc:	mov	r4, r0
   1a700:	cmp	r7, r4
   1a704:	beq	1beac <main@@Base+0x8bb4>
   1a708:	ldr	r0, [sl]
   1a70c:	mov	r1, #1
   1a710:	mov	r2, #1
   1a714:	mvn	r3, #0
   1a718:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   1a71c:	cmp	r0, #0
   1a720:	bne	133b4 <main@@Base+0xbc>
   1a724:	cmp	r4, r6
   1a728:	beq	1a768 <main@@Base+0x7470>
   1a72c:	ldrb	r0, [r4]
   1a730:	cmp	r0, #91	; 0x5b
   1a734:	bne	1a768 <main@@Base+0x7470>
   1a738:	add	r1, r4, #1
   1a73c:	sub	r0, r6, r1
   1a740:	cmp	r0, #2
   1a744:	blt	1b018 <main@@Base+0x7d20>
   1a748:	ldrb	r0, [r1]
   1a74c:	cmp	r0, #32
   1a750:	bls	1b000 <main@@Base+0x7d08>
   1a754:	ldr	r6, [sp, #44]	; 0x2c
   1a758:	mov	r4, r1
   1a75c:	cmp	r4, r6
   1a760:	bne	1b030 <main@@Base+0x7d38>
   1a764:	b	1b08c <main@@Base+0x7d94>
   1a768:	mov	r0, sl
   1a76c:	mov	r1, r4
   1a770:	mov	r2, r6
   1a774:	mov	r3, #22
   1a778:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a77c:	mov	r4, r0
   1a780:	ldr	r0, [sl]
   1a784:	bl	2da48 <flatcc_builder_end_vector@@Base>
   1a788:	ldr	r5, [sp, #40]	; 0x28
   1a78c:	cmp	r0, #0
   1a790:	str	r0, [sp, #52]	; 0x34
   1a794:	beq	133b4 <main@@Base+0xbc>
   1a798:	ldr	r0, [sl]
   1a79c:	mov	r1, #5
   1a7a0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1a7a4:	cmp	r0, #0
   1a7a8:	bne	16008 <main@@Base+0x2d10>
   1a7ac:	b	133b4 <main@@Base+0xbc>
   1a7b0:	ldr	r6, [sp, #44]	; 0x2c
   1a7b4:	ldr	sl, [sp, #36]	; 0x24
   1a7b8:	ldr	r5, [sp, #40]	; 0x28
   1a7bc:	bne	1a7d0 <main@@Base+0x74d8>
   1a7c0:	ldrb	r0, [r4, #2]!
   1a7c4:	mov	r7, r4
   1a7c8:	cmp	r0, #32
   1a7cc:	bhi	16944 <main@@Base+0x364c>
   1a7d0:	mov	r0, sl
   1a7d4:	mov	r2, r6
   1a7d8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a7dc:	b	16940 <main@@Base+0x3648>
   1a7e0:	ldr	r6, [sp, #44]	; 0x2c
   1a7e4:	ldr	sl, [sp, #36]	; 0x24
   1a7e8:	bne	1a7f8 <main@@Base+0x7500>
   1a7ec:	ldrb	r0, [r4, #2]!
   1a7f0:	cmp	r0, #32
   1a7f4:	bhi	1a808 <main@@Base+0x7510>
   1a7f8:	mov	r0, sl
   1a7fc:	mov	r2, r6
   1a800:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a804:	mov	r4, r0
   1a808:	cmp	r9, r4
   1a80c:	beq	1a870 <main@@Base+0x7578>
   1a810:	ldr	r0, [sl]
   1a814:	mov	r1, #8
   1a818:	mov	r2, #8
   1a81c:	mvn	r3, #-536870912	; 0xe0000000
   1a820:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   1a824:	cmp	r0, #0
   1a828:	bne	133b4 <main@@Base+0xbc>
   1a82c:	cmp	r4, r6
   1a830:	beq	1a87c <main@@Base+0x7584>
   1a834:	ldrb	r0, [r4]
   1a838:	cmp	r0, #91	; 0x5b
   1a83c:	bne	1a87c <main@@Base+0x7584>
   1a840:	add	r1, r4, #1
   1a844:	sub	r0, r6, r1
   1a848:	cmp	r0, #2
   1a84c:	blt	1bb48 <main@@Base+0x8850>
   1a850:	ldrb	r0, [r1]
   1a854:	cmp	r0, #32
   1a858:	bls	1bb30 <main@@Base+0x8838>
   1a85c:	ldr	r6, [sp, #44]	; 0x2c
   1a860:	mov	r4, r1
   1a864:	cmp	r4, r6
   1a868:	bne	1bb60 <main@@Base+0x8868>
   1a86c:	b	1bbbc <main@@Base+0x88c4>
   1a870:	mov	r0, sl
   1a874:	mov	r1, r9
   1a878:	b	16864 <main@@Base+0x356c>
   1a87c:	mov	r0, sl
   1a880:	mov	r1, r4
   1a884:	mov	r2, r6
   1a888:	mov	r3, #22
   1a88c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a890:	mov	r4, r0
   1a894:	ldr	r0, [sl]
   1a898:	bl	2da48 <flatcc_builder_end_vector@@Base>
   1a89c:	ldr	r5, [sp, #40]	; 0x28
   1a8a0:	cmp	r0, #0
   1a8a4:	str	r0, [sp, #52]	; 0x34
   1a8a8:	beq	133b4 <main@@Base+0xbc>
   1a8ac:	ldr	r0, [sl]
   1a8b0:	mov	r1, #32
   1a8b4:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1a8b8:	cmp	r0, #0
   1a8bc:	bne	16008 <main@@Base+0x2d10>
   1a8c0:	b	133b4 <main@@Base+0xbc>
   1a8c4:	ldr	r6, [sp, #44]	; 0x2c
   1a8c8:	bne	1a8dc <main@@Base+0x75e4>
   1a8cc:	mov	r7, r1
   1a8d0:	ldrb	r0, [r7, #1]!
   1a8d4:	cmp	r0, #32
   1a8d8:	bhi	1a8ec <main@@Base+0x75f4>
   1a8dc:	ldr	r0, [sp, #36]	; 0x24
   1a8e0:	mov	r2, r6
   1a8e4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a8e8:	mov	r7, r0
   1a8ec:	cmp	r7, r6
   1a8f0:	beq	1a938 <main@@Base+0x7640>
   1a8f4:	ldrb	r0, [r7]
   1a8f8:	cmp	r0, #58	; 0x3a
   1a8fc:	bne	1a938 <main@@Base+0x7640>
   1a900:	ldr	sl, [sp, #36]	; 0x24
   1a904:	add	r1, r7, #1
   1a908:	sub	r0, r6, r1
   1a90c:	cmp	r0, #2
   1a910:	blt	1c7d0 <main@@Base+0x94d8>
   1a914:	ldrb	r0, [r1]
   1a918:	cmp	r0, #32
   1a91c:	bls	1c7b8 <main@@Base+0x94c0>
   1a920:	ldr	r6, [sp, #44]	; 0x2c
   1a924:	ldr	sl, [sp, #36]	; 0x24
   1a928:	mov	r7, r1
   1a92c:	cmp	r4, r7
   1a930:	bne	1c7e8 <main@@Base+0x94f0>
   1a934:	b	1c958 <main@@Base+0x9660>
   1a938:	ldr	sl, [sp, #36]	; 0x24
   1a93c:	mov	r1, r7
   1a940:	mov	r2, r6
   1a944:	mov	r3, #4
   1a948:	mov	r0, sl
   1a94c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a950:	b	1c7dc <main@@Base+0x94e4>
   1a954:	ldr	r6, [sp, #44]	; 0x2c
   1a958:	bne	1a96c <main@@Base+0x7674>
   1a95c:	mov	r7, r1
   1a960:	ldrb	r0, [r7, #1]!
   1a964:	cmp	r0, #32
   1a968:	bhi	1a97c <main@@Base+0x7684>
   1a96c:	ldr	r0, [sp, #36]	; 0x24
   1a970:	mov	r2, r6
   1a974:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1a978:	mov	r7, r0
   1a97c:	cmp	r7, r6
   1a980:	beq	1a9c8 <main@@Base+0x76d0>
   1a984:	ldrb	r0, [r7]
   1a988:	cmp	r0, #58	; 0x3a
   1a98c:	bne	1a9c8 <main@@Base+0x76d0>
   1a990:	ldr	sl, [sp, #36]	; 0x24
   1a994:	add	r1, r7, #1
   1a998:	sub	r0, r6, r1
   1a99c:	cmp	r0, #2
   1a9a0:	blt	1c8c0 <main@@Base+0x95c8>
   1a9a4:	ldrb	r0, [r1]
   1a9a8:	cmp	r0, #32
   1a9ac:	bls	1c8a8 <main@@Base+0x95b0>
   1a9b0:	ldr	r6, [sp, #44]	; 0x2c
   1a9b4:	ldr	sl, [sp, #36]	; 0x24
   1a9b8:	mov	r7, r1
   1a9bc:	cmp	r4, r7
   1a9c0:	bne	1c8d8 <main@@Base+0x95e0>
   1a9c4:	b	1c958 <main@@Base+0x9660>
   1a9c8:	ldr	sl, [sp, #36]	; 0x24
   1a9cc:	mov	r1, r7
   1a9d0:	mov	r2, r6
   1a9d4:	mov	r3, #4
   1a9d8:	mov	r0, sl
   1a9dc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1a9e0:	b	1c8cc <main@@Base+0x95d4>
   1a9e4:	ldr	r6, [sp, #44]	; 0x2c
   1a9e8:	ldr	sl, [sp, #36]	; 0x24
   1a9ec:	bne	1a9fc <main@@Base+0x7704>
   1a9f0:	ldrb	r0, [r4, #2]!
   1a9f4:	cmp	r0, #32
   1a9f8:	bhi	1aa0c <main@@Base+0x7714>
   1a9fc:	mov	r0, sl
   1aa00:	mov	r2, r6
   1aa04:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1aa08:	mov	r4, r0
   1aa0c:	cmp	r7, r4
   1aa10:	beq	1beac <main@@Base+0x8bb4>
   1aa14:	cmp	r4, r6
   1aa18:	beq	1aa84 <main@@Base+0x778c>
   1aa1c:	ldrb	r0, [r4]
   1aa20:	cmp	r0, #91	; 0x5b
   1aa24:	bne	1aa84 <main@@Base+0x778c>
   1aa28:	ldr	r0, [sl]
   1aa2c:	mov	r1, #1
   1aa30:	mov	r2, #1
   1aa34:	mvn	r3, #0
   1aa38:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   1aa3c:	cmp	r0, #0
   1aa40:	bne	1dc9c <main@@Base+0xa9a4>
   1aa44:	ldrb	r0, [r4]
   1aa48:	cmp	r0, #91	; 0x5b
   1aa4c:	bne	1aae0 <main@@Base+0x77e8>
   1aa50:	ldr	r0, [sp, #44]	; 0x2c
   1aa54:	add	r1, r4, #1
   1aa58:	sub	r0, r0, r1
   1aa5c:	cmp	r0, #2
   1aa60:	blt	1ca3c <main@@Base+0x9744>
   1aa64:	ldrb	r0, [r1]
   1aa68:	cmp	r0, #32
   1aa6c:	bls	1ca2c <main@@Base+0x9734>
   1aa70:	mov	r4, r1
   1aa74:	ldr	r6, [sp, #44]	; 0x2c
   1aa78:	cmp	r4, r6
   1aa7c:	bne	1ca58 <main@@Base+0x9760>
   1aa80:	b	1ca68 <main@@Base+0x9770>
   1aa84:	ldr	r0, [sl]
   1aa88:	mov	r1, #0
   1aa8c:	mov	r2, #0
   1aa90:	mov	r3, #0
   1aa94:	bl	2b790 <flatcc_builder_start_buffer@@Base>
   1aa98:	cmp	r0, #0
   1aa9c:	bne	133b4 <main@@Base+0xbc>
   1aaa0:	mov	r0, sl
   1aaa4:	mov	r1, r4
   1aaa8:	mov	r2, r6
   1aaac:	add	r3, sp, #52	; 0x34
   1aab0:	bl	13374 <main@@Base+0x7c>
   1aab4:	ldr	r1, [sp, #52]	; 0x34
   1aab8:	mov	r4, r0
   1aabc:	cmp	r1, #0
   1aac0:	beq	133b4 <main@@Base+0xbc>
   1aac4:	ldr	r0, [sl]
   1aac8:	bl	2b980 <flatcc_builder_end_buffer@@Base>
   1aacc:	ldr	r5, [sp, #40]	; 0x28
   1aad0:	cmp	r0, #0
   1aad4:	str	r0, [sp, #52]	; 0x34
   1aad8:	bne	1db0c <main@@Base+0xa814>
   1aadc:	b	133b4 <main@@Base+0xbc>
   1aae0:	ldr	r0, [sp, #36]	; 0x24
   1aae4:	ldr	r2, [sp, #44]	; 0x2c
   1aae8:	mov	r1, r4
   1aaec:	mov	r3, #22
   1aaf0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1aaf4:	b	1dae8 <main@@Base+0xa7f0>
   1aaf8:	ldr	r6, [sp, #44]	; 0x2c
   1aafc:	ldr	sl, [sp, #36]	; 0x24
   1ab00:	bne	1ab10 <main@@Base+0x7818>
   1ab04:	ldrb	r0, [r7, #2]!
   1ab08:	cmp	r0, #32
   1ab0c:	bhi	1ab20 <main@@Base+0x7828>
   1ab10:	mov	r0, sl
   1ab14:	mov	r2, r6
   1ab18:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ab1c:	mov	r7, r0
   1ab20:	cmp	r4, r7
   1ab24:	beq	1c958 <main@@Base+0x9660>
   1ab28:	mov	r2, r6
   1ab2c:	mov	r6, #0
   1ab30:	cmp	r7, r2
   1ab34:	str	r6, [fp, #-52]	; 0xffffffcc
   1ab38:	str	r6, [fp, #-56]	; 0xffffffc8
   1ab3c:	str	r6, [fp, #-60]	; 0xffffffc4
   1ab40:	str	r6, [sp, #56]	; 0x38
   1ab44:	beq	1aba4 <main@@Base+0x78ac>
   1ab48:	sub	r0, fp, #56	; 0x38
   1ab4c:	mov	r1, r7
   1ab50:	add	r3, sp, #56	; 0x38
   1ab54:	mov	r8, r2
   1ab58:	str	r0, [sp]
   1ab5c:	mov	r0, sl
   1ab60:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1ab64:	cmp	r0, r7
   1ab68:	beq	1abbc <main@@Base+0x78c4>
   1ab6c:	ldr	r2, [sp, #56]	; 0x38
   1ab70:	mov	r4, r0
   1ab74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ab78:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ab7c:	cmp	r2, #0
   1ab80:	beq	1abd0 <main@@Base+0x78d8>
   1ab84:	subs	r2, r0, #-2147483647	; 0x80000001
   1ab88:	sbcs	r1, r1, #0
   1ab8c:	bcc	1ac0c <main@@Base+0x7914>
   1ab90:	ldr	sl, [sp, #36]	; 0x24
   1ab94:	ldr	r2, [sp, #44]	; 0x2c
   1ab98:	mov	r1, r4
   1ab9c:	mov	r3, #8
   1aba0:	b	1abec <main@@Base+0x78f4>
   1aba4:	mov	r8, r2
   1aba8:	mov	r4, r2
   1abac:	ldr	r5, [sp, #40]	; 0x28
   1abb0:	cmp	r7, r4
   1abb4:	bne	1bf70 <main@@Base+0x8c78>
   1abb8:	b	1bf2c <main@@Base+0x8c34>
   1abbc:	mov	r4, r7
   1abc0:	ldr	r5, [sp, #40]	; 0x28
   1abc4:	cmp	r7, r4
   1abc8:	bne	1bf70 <main@@Base+0x8c78>
   1abcc:	b	1bf2c <main@@Base+0x8c34>
   1abd0:	subs	r2, r0, #-2147483648	; 0x80000000
   1abd4:	sbcs	r1, r1, #0
   1abd8:	bcc	1bf10 <main@@Base+0x8c18>
   1abdc:	ldr	sl, [sp, #36]	; 0x24
   1abe0:	ldr	r2, [sp, #44]	; 0x2c
   1abe4:	mov	r1, r4
   1abe8:	mov	r3, #7
   1abec:	mov	r0, sl
   1abf0:	mov	r8, r2
   1abf4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1abf8:	mov	r4, r0
   1abfc:	ldr	r5, [sp, #40]	; 0x28
   1ac00:	cmp	r7, r4
   1ac04:	bne	1bf70 <main@@Base+0x8c78>
   1ac08:	b	1bf2c <main@@Base+0x8c34>
   1ac0c:	rsb	r6, r0, #0
   1ac10:	b	1bf14 <main@@Base+0x8c1c>
   1ac14:	ldr	sl, [sp, #36]	; 0x24
   1ac18:	ldr	r6, [sp, #44]	; 0x2c
   1ac1c:	mov	r1, r4
   1ac20:	mov	r0, sl
   1ac24:	mov	r2, r6
   1ac28:	mov	r3, #9
   1ac2c:	b	16f4c <main@@Base+0x3c54>
   1ac30:	mov	r7, r6
   1ac34:	b	18e20 <main@@Base+0x5b28>
   1ac38:	ldr	r6, [sp, #44]	; 0x2c
   1ac3c:	ldr	sl, [sp, #36]	; 0x24
   1ac40:	bne	1ac50 <main@@Base+0x7958>
   1ac44:	ldrb	r0, [r4, #2]!
   1ac48:	cmp	r0, #32
   1ac4c:	bhi	1ac60 <main@@Base+0x7968>
   1ac50:	mov	r0, sl
   1ac54:	mov	r2, r6
   1ac58:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ac5c:	mov	r4, r0
   1ac60:	cmp	r4, r6
   1ac64:	mov	r2, r6
   1ac68:	beq	1acc4 <main@@Base+0x79cc>
   1ac6c:	ldrb	r0, [r4]
   1ac70:	cmp	r0, #93	; 0x5d
   1ac74:	bne	1acb8 <main@@Base+0x79c0>
   1ac78:	ldr	r6, [sp, #44]	; 0x2c
   1ac7c:	ldr	sl, [sp, #36]	; 0x24
   1ac80:	add	r1, r4, #1
   1ac84:	sub	r0, r6, r1
   1ac88:	cmp	r0, #2
   1ac8c:	blt	1d98c <main@@Base+0xa694>
   1ac90:	ldrb	r0, [r1]
   1ac94:	cmp	r0, #32
   1ac98:	bhi	1c3bc <main@@Base+0x90c4>
   1ac9c:	ldr	r6, [sp, #44]	; 0x2c
   1aca0:	ldr	sl, [sp, #36]	; 0x24
   1aca4:	bne	1d98c <main@@Base+0xa694>
   1aca8:	ldrb	r0, [r4, #2]!
   1acac:	cmp	r0, #32
   1acb0:	bhi	1a210 <main@@Base+0x6f18>
   1acb4:	b	1d98c <main@@Base+0xa694>
   1acb8:	ldr	r6, [sp, #44]	; 0x2c
   1acbc:	ldr	sl, [sp, #36]	; 0x24
   1acc0:	mov	r2, r4
   1acc4:	mov	r1, r2
   1acc8:	mov	r0, sl
   1accc:	mov	r2, r6
   1acd0:	add	r3, sp, #52	; 0x34
   1acd4:	bl	13374 <main@@Base+0x7c>
   1acd8:	mov	r4, r0
   1acdc:	ldr	r0, [sp, #52]	; 0x34
   1ace0:	cmp	r0, #0
   1ace4:	beq	133b4 <main@@Base+0xbc>
   1ace8:	ldr	r0, [sl]
   1acec:	mov	r1, #1
   1acf0:	bl	2c018 <flatcc_builder_extend_offset_vector@@Base>
   1acf4:	cmp	r0, #0
   1acf8:	beq	133b4 <main@@Base+0xbc>
   1acfc:	ldr	r1, [sp, #52]	; 0x34
   1ad00:	str	r1, [r0]
   1ad04:	sub	r0, r6, r4
   1ad08:	cmp	r0, #2
   1ad0c:	blt	1ad40 <main@@Base+0x7a48>
   1ad10:	ldrb	r0, [r4]
   1ad14:	cmp	r0, #32
   1ad18:	bls	1ad2c <main@@Base+0x7a34>
   1ad1c:	mov	r2, r4
   1ad20:	cmp	r2, r6
   1ad24:	bne	1ad5c <main@@Base+0x7a64>
   1ad28:	b	1c32c <main@@Base+0x9034>
   1ad2c:	bne	1ad40 <main@@Base+0x7a48>
   1ad30:	mov	r2, r4
   1ad34:	ldrb	r0, [r2, #1]!
   1ad38:	cmp	r0, #32
   1ad3c:	bhi	1ad54 <main@@Base+0x7a5c>
   1ad40:	mov	r0, sl
   1ad44:	mov	r1, r4
   1ad48:	mov	r2, r6
   1ad4c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ad50:	mov	r2, r0
   1ad54:	cmp	r2, r6
   1ad58:	beq	1c32c <main@@Base+0x9034>
   1ad5c:	ldrb	r0, [r2]
   1ad60:	cmp	r0, #44	; 0x2c
   1ad64:	bne	1c390 <main@@Base+0x9098>
   1ad68:	add	r1, r2, #1
   1ad6c:	sub	r0, r6, r1
   1ad70:	cmp	r0, #2
   1ad74:	blt	1ada4 <main@@Base+0x7aac>
   1ad78:	ldrb	r0, [r1]
   1ad7c:	cmp	r0, #32
   1ad80:	bls	1ad94 <main@@Base+0x7a9c>
   1ad84:	mov	r2, r1
   1ad88:	cmp	r2, r6
   1ad8c:	bne	1adbc <main@@Base+0x7ac4>
   1ad90:	b	1c3e0 <main@@Base+0x90e8>
   1ad94:	bne	1ada4 <main@@Base+0x7aac>
   1ad98:	ldrb	r0, [r2, #2]!
   1ad9c:	cmp	r0, #32
   1ada0:	bhi	1adb4 <main@@Base+0x7abc>
   1ada4:	mov	r0, sl
   1ada8:	mov	r2, r6
   1adac:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1adb0:	mov	r2, r0
   1adb4:	cmp	r2, r6
   1adb8:	beq	1c3e0 <main@@Base+0x90e8>
   1adbc:	ldrb	r0, [r2]
   1adc0:	cmp	r0, #93	; 0x5d
   1adc4:	bne	1acc4 <main@@Base+0x79cc>
   1adc8:	add	r1, r2, #1
   1adcc:	sub	r0, r6, r1
   1add0:	cmp	r0, #2
   1add4:	bge	1c3b0 <main@@Base+0x90b8>
   1add8:	b	1d98c <main@@Base+0xa694>
   1addc:	cmp	r0, #93	; 0x5d
   1ade0:	bne	1c2fc <main@@Base+0x9004>
   1ade4:	ldr	r6, [sp, #44]	; 0x2c
   1ade8:	ldr	sl, [sp, #36]	; 0x24
   1adec:	add	r1, r7, #1
   1adf0:	sub	r0, r6, r1
   1adf4:	cmp	r0, #2
   1adf8:	bge	19704 <main@@Base+0x640c>
   1adfc:	b	1d704 <main@@Base+0xa40c>
   1ae00:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1ae04:	ldr	r8, [sp, #44]	; 0x2c
   1ae08:	ldr	sl, [sp, #36]	; 0x24
   1ae0c:	mov	r4, r1
   1ae10:	str	r6, [fp, #-60]	; 0xffffffc4
   1ae14:	ldr	r5, [sp, #40]	; 0x28
   1ae18:	cmp	r7, r4
   1ae1c:	bne	1a378 <main@@Base+0x7080>
   1ae20:	b	1a334 <main@@Base+0x703c>
   1ae24:	mov	r0, sl
   1ae28:	mov	r1, r6
   1ae2c:	b	1c30c <main@@Base+0x9014>
   1ae30:	add	r1, r4, #1
   1ae34:	sub	r0, r6, r1
   1ae38:	cmp	r0, #2
   1ae3c:	blt	1d704 <main@@Base+0xa40c>
   1ae40:	ldrb	r0, [r1]
   1ae44:	cmp	r0, #32
   1ae48:	bls	1d6e8 <main@@Base+0xa3f0>
   1ae4c:	ldr	r6, [sp, #44]	; 0x2c
   1ae50:	ldr	sl, [sp, #36]	; 0x24
   1ae54:	mov	r7, r1
   1ae58:	b	18e20 <main@@Base+0x5b28>
   1ae5c:	ldr	r6, [sp, #44]	; 0x2c
   1ae60:	ldr	sl, [sp, #36]	; 0x24
   1ae64:	bne	1ae74 <main@@Base+0x7b7c>
   1ae68:	ldrb	r0, [r4, #2]!
   1ae6c:	cmp	r0, #32
   1ae70:	bhi	1ae84 <main@@Base+0x7b8c>
   1ae74:	mov	r0, sl
   1ae78:	mov	r2, r6
   1ae7c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ae80:	mov	r4, r0
   1ae84:	cmp	r4, r6
   1ae88:	mov	r2, r6
   1ae8c:	beq	1aee0 <main@@Base+0x7be8>
   1ae90:	ldrb	r0, [r4]
   1ae94:	cmp	r0, #93	; 0x5d
   1ae98:	bne	1aedc <main@@Base+0x7be4>
   1ae9c:	ldr	r6, [sp, #44]	; 0x2c
   1aea0:	ldr	sl, [sp, #36]	; 0x24
   1aea4:	add	r1, r4, #1
   1aea8:	sub	r0, r6, r1
   1aeac:	cmp	r0, #2
   1aeb0:	blt	1da3c <main@@Base+0xa744>
   1aeb4:	ldrb	r0, [r1]
   1aeb8:	cmp	r0, #32
   1aebc:	bhi	1c474 <main@@Base+0x917c>
   1aec0:	ldr	r6, [sp, #44]	; 0x2c
   1aec4:	ldr	sl, [sp, #36]	; 0x24
   1aec8:	bne	1da3c <main@@Base+0xa744>
   1aecc:	ldrb	r0, [r4, #2]!
   1aed0:	cmp	r0, #32
   1aed4:	bhi	1a5ec <main@@Base+0x72f4>
   1aed8:	b	1da3c <main@@Base+0xa744>
   1aedc:	mov	r2, r4
   1aee0:	ldr	r6, [sp, #44]	; 0x2c
   1aee4:	ldr	sl, [sp, #36]	; 0x24
   1aee8:	mov	r1, r2
   1aeec:	mov	r0, sl
   1aef0:	mov	r2, r6
   1aef4:	add	r3, sp, #52	; 0x34
   1aef8:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   1aefc:	mov	r4, r0
   1af00:	ldr	r0, [sp, #52]	; 0x34
   1af04:	cmp	r0, #0
   1af08:	beq	133b4 <main@@Base+0xbc>
   1af0c:	ldr	r0, [sl]
   1af10:	mov	r1, #1
   1af14:	bl	2c018 <flatcc_builder_extend_offset_vector@@Base>
   1af18:	cmp	r0, #0
   1af1c:	beq	133b4 <main@@Base+0xbc>
   1af20:	ldr	r1, [sp, #52]	; 0x34
   1af24:	str	r1, [r0]
   1af28:	sub	r0, r6, r4
   1af2c:	cmp	r0, #2
   1af30:	blt	1af64 <main@@Base+0x7c6c>
   1af34:	ldrb	r0, [r4]
   1af38:	cmp	r0, #32
   1af3c:	bls	1af50 <main@@Base+0x7c58>
   1af40:	mov	r2, r4
   1af44:	cmp	r2, r6
   1af48:	bne	1af80 <main@@Base+0x7c88>
   1af4c:	b	1c41c <main@@Base+0x9124>
   1af50:	bne	1af64 <main@@Base+0x7c6c>
   1af54:	mov	r2, r4
   1af58:	ldrb	r0, [r2, #1]!
   1af5c:	cmp	r0, #32
   1af60:	bhi	1af78 <main@@Base+0x7c80>
   1af64:	mov	r0, sl
   1af68:	mov	r1, r4
   1af6c:	mov	r2, r6
   1af70:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1af74:	mov	r2, r0
   1af78:	cmp	r2, r6
   1af7c:	beq	1c41c <main@@Base+0x9124>
   1af80:	ldrb	r0, [r2]
   1af84:	cmp	r0, #44	; 0x2c
   1af88:	bne	1c448 <main@@Base+0x9150>
   1af8c:	add	r1, r2, #1
   1af90:	sub	r0, r6, r1
   1af94:	cmp	r0, #2
   1af98:	blt	1afc8 <main@@Base+0x7cd0>
   1af9c:	ldrb	r0, [r1]
   1afa0:	cmp	r0, #32
   1afa4:	bls	1afb8 <main@@Base+0x7cc0>
   1afa8:	mov	r2, r1
   1afac:	cmp	r2, r6
   1afb0:	bne	1afe0 <main@@Base+0x7ce8>
   1afb4:	b	1c4a8 <main@@Base+0x91b0>
   1afb8:	bne	1afc8 <main@@Base+0x7cd0>
   1afbc:	ldrb	r0, [r2, #2]!
   1afc0:	cmp	r0, #32
   1afc4:	bhi	1afd8 <main@@Base+0x7ce0>
   1afc8:	mov	r0, sl
   1afcc:	mov	r2, r6
   1afd0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1afd4:	mov	r2, r0
   1afd8:	cmp	r2, r6
   1afdc:	beq	1c4a8 <main@@Base+0x91b0>
   1afe0:	ldrb	r0, [r2]
   1afe4:	cmp	r0, #93	; 0x5d
   1afe8:	bne	1aee8 <main@@Base+0x7bf0>
   1afec:	add	r1, r2, #1
   1aff0:	sub	r0, r6, r1
   1aff4:	cmp	r0, #2
   1aff8:	bge	1c468 <main@@Base+0x9170>
   1affc:	b	1da3c <main@@Base+0xa744>
   1b000:	ldr	r6, [sp, #44]	; 0x2c
   1b004:	ldr	sl, [sp, #36]	; 0x24
   1b008:	bne	1b018 <main@@Base+0x7d20>
   1b00c:	ldrb	r0, [r4, #2]!
   1b010:	cmp	r0, #32
   1b014:	bhi	1b028 <main@@Base+0x7d30>
   1b018:	mov	r0, sl
   1b01c:	mov	r2, r6
   1b020:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b024:	mov	r4, r0
   1b028:	cmp	r4, r6
   1b02c:	beq	1b08c <main@@Base+0x7d94>
   1b030:	ldrb	r0, [r4]
   1b034:	cmp	r0, #93	; 0x5d
   1b038:	bne	1b088 <main@@Base+0x7d90>
   1b03c:	ldr	r6, [sp, #44]	; 0x2c
   1b040:	ldr	sl, [sp, #36]	; 0x24
   1b044:	add	r1, r4, #1
   1b048:	sub	r0, r6, r1
   1b04c:	cmp	r0, #2
   1b050:	blt	1b078 <main@@Base+0x7d80>
   1b054:	ldrb	r0, [r1]
   1b058:	cmp	r0, #32
   1b05c:	bhi	1c440 <main@@Base+0x9148>
   1b060:	ldr	r6, [sp, #44]	; 0x2c
   1b064:	ldr	sl, [sp, #36]	; 0x24
   1b068:	bne	1b078 <main@@Base+0x7d80>
   1b06c:	ldrb	r0, [r4, #2]!
   1b070:	cmp	r0, #32
   1b074:	bhi	1a780 <main@@Base+0x7488>
   1b078:	mov	r0, sl
   1b07c:	mov	r2, r6
   1b080:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b084:	b	1a77c <main@@Base+0x7484>
   1b088:	mov	r6, r4
   1b08c:	mov	r0, #0
   1b090:	mov	r1, #1
   1b094:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b098:	ldr	r0, [sp, #36]	; 0x24
   1b09c:	ldr	r0, [r0]
   1b0a0:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1b0a4:	cmp	r0, #0
   1b0a8:	beq	1dcf0 <main@@Base+0xa9f8>
   1b0ac:	ldr	r5, [sp, #44]	; 0x2c
   1b0b0:	ldr	sl, [sp, #36]	; 0x24
   1b0b4:	mov	r7, r0
   1b0b8:	mov	r4, r6
   1b0bc:	mov	r6, #0
   1b0c0:	mov	r2, r5
   1b0c4:	cmp	r4, r5
   1b0c8:	str	r6, [fp, #-52]	; 0xffffffcc
   1b0cc:	str	r6, [fp, #-56]	; 0xffffffc8
   1b0d0:	strb	r6, [fp, #-60]	; 0xffffffc4
   1b0d4:	str	r6, [sp, #56]	; 0x38
   1b0d8:	beq	1b12c <main@@Base+0x7e34>
   1b0dc:	sub	r0, fp, #56	; 0x38
   1b0e0:	mov	r1, r4
   1b0e4:	add	r3, sp, #56	; 0x38
   1b0e8:	str	r0, [sp]
   1b0ec:	mov	r0, sl
   1b0f0:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1b0f4:	cmp	r0, r4
   1b0f8:	beq	1b13c <main@@Base+0x7e44>
   1b0fc:	mov	r1, r0
   1b100:	ldr	r0, [sp, #56]	; 0x38
   1b104:	cmp	r0, #0
   1b108:	beq	1b14c <main@@Base+0x7e54>
   1b10c:	mov	r0, sl
   1b110:	mov	r2, r5
   1b114:	mov	r3, #8
   1b118:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1b11c:	mov	r1, r0
   1b120:	cmp	r4, r1
   1b124:	bne	1b1e0 <main@@Base+0x7ee8>
   1b128:	b	1b1a0 <main@@Base+0x7ea8>
   1b12c:	mov	r1, r2
   1b130:	cmp	r4, r1
   1b134:	bne	1b1e0 <main@@Base+0x7ee8>
   1b138:	b	1b1a0 <main@@Base+0x7ea8>
   1b13c:	mov	r1, r4
   1b140:	cmp	r4, r1
   1b144:	bne	1b1e0 <main@@Base+0x7ee8>
   1b148:	b	1b1a0 <main@@Base+0x7ea8>
   1b14c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b150:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b154:	subs	r3, r0, #256	; 0x100
   1b158:	sbcs	r2, r2, #0
   1b15c:	bcc	1b188 <main@@Base+0x7e90>
   1b160:	ldr	sl, [sp, #36]	; 0x24
   1b164:	ldr	r2, [sp, #44]	; 0x2c
   1b168:	mov	r3, #7
   1b16c:	mov	r0, sl
   1b170:	mov	r5, r2
   1b174:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1b178:	mov	r1, r0
   1b17c:	cmp	r4, r1
   1b180:	bne	1b1e0 <main@@Base+0x7ee8>
   1b184:	b	1b1a0 <main@@Base+0x7ea8>
   1b188:	ldr	r5, [sp, #44]	; 0x2c
   1b18c:	ldr	sl, [sp, #36]	; 0x24
   1b190:	mov	r6, r0
   1b194:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b198:	cmp	r4, r1
   1b19c:	bne	1b1e0 <main@@Base+0x7ee8>
   1b1a0:	sub	r0, fp, #60	; 0x3c
   1b1a4:	mov	r1, r4
   1b1a8:	mov	r2, r5
   1b1ac:	mov	r6, r5
   1b1b0:	str	r0, [sp]
   1b1b4:	movw	r0, #32912	; 0x8090
   1b1b8:	movt	r0, #4
   1b1bc:	add	r3, r0, #24
   1b1c0:	mov	r0, sl
   1b1c4:	bl	1f464 <main@@Base+0xc16c>
   1b1c8:	mov	r1, r0
   1b1cc:	cmp	r0, r4
   1b1d0:	cmpne	r1, r6
   1b1d4:	beq	1dcc8 <main@@Base+0xa9d0>
   1b1d8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1b1dc:	ldr	sl, [sp, #36]	; 0x24
   1b1e0:	sub	r0, r5, r1
   1b1e4:	strb	r6, [r7]
   1b1e8:	mov	r6, r5
   1b1ec:	cmp	r0, #2
   1b1f0:	blt	1b224 <main@@Base+0x7f2c>
   1b1f4:	ldrb	r0, [r1]
   1b1f8:	cmp	r0, #32
   1b1fc:	bls	1b210 <main@@Base+0x7f18>
   1b200:	mov	r4, r1
   1b204:	cmp	r4, r6
   1b208:	bne	1b23c <main@@Base+0x7f44>
   1b20c:	b	1c3cc <main@@Base+0x90d4>
   1b210:	bne	1b224 <main@@Base+0x7f2c>
   1b214:	mov	r4, r1
   1b218:	ldrb	r0, [r4, #1]!
   1b21c:	cmp	r0, #32
   1b220:	bhi	1b234 <main@@Base+0x7f3c>
   1b224:	mov	r0, sl
   1b228:	mov	r2, r6
   1b22c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b230:	mov	r4, r0
   1b234:	cmp	r4, r6
   1b238:	beq	1c3cc <main@@Base+0x90d4>
   1b23c:	ldrb	r0, [r4]
   1b240:	cmp	r0, #44	; 0x2c
   1b244:	bne	1c3ec <main@@Base+0x90f4>
   1b248:	add	r1, r4, #1
   1b24c:	sub	r0, r6, r1
   1b250:	cmp	r0, #2
   1b254:	blt	1b284 <main@@Base+0x7f8c>
   1b258:	ldrb	r0, [r1]
   1b25c:	cmp	r0, #32
   1b260:	bls	1b274 <main@@Base+0x7f7c>
   1b264:	mov	r4, r1
   1b268:	cmp	r4, r6
   1b26c:	bne	1b29c <main@@Base+0x7fa4>
   1b270:	b	1c40c <main@@Base+0x9114>
   1b274:	bne	1b284 <main@@Base+0x7f8c>
   1b278:	ldrb	r0, [r4, #2]!
   1b27c:	cmp	r0, #32
   1b280:	bhi	1b294 <main@@Base+0x7f9c>
   1b284:	mov	r0, sl
   1b288:	mov	r2, r6
   1b28c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b290:	mov	r4, r0
   1b294:	cmp	r4, r6
   1b298:	beq	1c40c <main@@Base+0x9114>
   1b29c:	ldrb	r0, [r4]
   1b2a0:	cmp	r0, #93	; 0x5d
   1b2a4:	beq	1c424 <main@@Base+0x912c>
   1b2a8:	mov	r0, #0
   1b2ac:	mov	r1, #1
   1b2b0:	strb	r0, [fp, #-60]	; 0xffffffc4
   1b2b4:	ldr	r0, [sl]
   1b2b8:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1b2bc:	mov	r7, r0
   1b2c0:	cmp	r0, #0
   1b2c4:	bne	1b0bc <main@@Base+0x7dc4>
   1b2c8:	b	1dc8c <main@@Base+0xa994>
   1b2cc:	mov	r4, r6
   1b2d0:	b	18d50 <main@@Base+0x5a58>
   1b2d4:	ldr	r6, [sp, #44]	; 0x2c
   1b2d8:	ldr	sl, [sp, #36]	; 0x24
   1b2dc:	ldr	r5, [sp, #40]	; 0x28
   1b2e0:	bne	1b2f4 <main@@Base+0x7ffc>
   1b2e4:	ldrb	r0, [r2, #2]!
   1b2e8:	mov	r4, r2
   1b2ec:	cmp	r0, #32
   1b2f0:	bhi	16874 <main@@Base+0x357c>
   1b2f4:	mov	r0, sl
   1b2f8:	mov	r2, r6
   1b2fc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b300:	mov	r4, r0
   1b304:	sub	r0, r6, r4
   1b308:	cmp	r0, #2
   1b30c:	bge	16880 <main@@Base+0x3588>
   1b310:	b	19070 <main@@Base+0x5d78>
   1b314:	cmp	r0, #93	; 0x5d
   1b318:	bne	1c484 <main@@Base+0x918c>
   1b31c:	ldr	r6, [sp, #44]	; 0x2c
   1b320:	ldr	sl, [sp, #36]	; 0x24
   1b324:	add	r1, r2, #1
   1b328:	sub	r0, r6, r1
   1b32c:	cmp	r0, #2
   1b330:	blt	1d6d8 <main@@Base+0xa3e0>
   1b334:	ldrb	r0, [r1]
   1b338:	cmp	r0, #32
   1b33c:	bls	1d6bc <main@@Base+0xa3c4>
   1b340:	ldr	r6, [sp, #44]	; 0x2c
   1b344:	ldr	sl, [sp, #36]	; 0x24
   1b348:	mov	r4, r1
   1b34c:	b	18d50 <main@@Base+0x5a58>
   1b350:	mov	r0, sl
   1b354:	mov	r1, r6
   1b358:	b	1c494 <main@@Base+0x919c>
   1b35c:	ldr	r6, [sp, #44]	; 0x2c
   1b360:	ldr	sl, [sp, #36]	; 0x24
   1b364:	bne	1b374 <main@@Base+0x807c>
   1b368:	ldrb	r0, [r4, #2]!
   1b36c:	cmp	r0, #32
   1b370:	bhi	1b384 <main@@Base+0x808c>
   1b374:	mov	r0, sl
   1b378:	mov	r2, r6
   1b37c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b380:	mov	r4, r0
   1b384:	cmp	r4, r6
   1b388:	mov	r2, r6
   1b38c:	beq	1b3e0 <main@@Base+0x80e8>
   1b390:	ldrb	r0, [r4]
   1b394:	cmp	r0, #125	; 0x7d
   1b398:	bne	1b3dc <main@@Base+0x80e4>
   1b39c:	ldr	r6, [sp, #44]	; 0x2c
   1b3a0:	ldr	sl, [sp, #36]	; 0x24
   1b3a4:	add	r1, r4, #1
   1b3a8:	sub	r0, r6, r1
   1b3ac:	cmp	r0, #2
   1b3b0:	blt	1d930 <main@@Base+0xa638>
   1b3b4:	ldrb	r0, [r1]
   1b3b8:	cmp	r0, #32
   1b3bc:	bhi	1c360 <main@@Base+0x9068>
   1b3c0:	ldr	r6, [sp, #44]	; 0x2c
   1b3c4:	ldr	sl, [sp, #36]	; 0x24
   1b3c8:	bne	1d930 <main@@Base+0xa638>
   1b3cc:	ldrb	r0, [r4, #2]!
   1b3d0:	cmp	r0, #32
   1b3d4:	bhi	18c60 <main@@Base+0x5968>
   1b3d8:	b	1d930 <main@@Base+0xa638>
   1b3dc:	mov	r2, r4
   1b3e0:	ldr	r6, [sp, #44]	; 0x2c
   1b3e4:	ldr	sl, [sp, #36]	; 0x24
   1b3e8:	cmp	r2, r6
   1b3ec:	mov	r8, r6
   1b3f0:	beq	1b444 <main@@Base+0x814c>
   1b3f4:	ldrb	r0, [r2]
   1b3f8:	cmp	r0, #46	; 0x2e
   1b3fc:	beq	1b418 <main@@Base+0x8120>
   1b400:	cmp	r0, #34	; 0x22
   1b404:	bne	1b434 <main@@Base+0x813c>
   1b408:	ldr	r0, [sp, #32]
   1b40c:	mov	r1, #0
   1b410:	add	r8, r2, #1
   1b414:	b	1b440 <main@@Base+0x8148>
   1b418:	mov	r1, r2
   1b41c:	mov	r0, sl
   1b420:	mov	r2, r6
   1b424:	mov	r3, #5
   1b428:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1b42c:	mov	r8, r0
   1b430:	b	1b444 <main@@Base+0x814c>
   1b434:	ldr	r0, [sp, #32]
   1b438:	mov	r1, #1
   1b43c:	mov	r8, r2
   1b440:	str	r1, [r0]
   1b444:	sub	lr, r6, r8
   1b448:	mov	r0, #8
   1b44c:	cmp	lr, #8
   1b450:	movcc	r0, lr
   1b454:	sub	r7, r0, #1
   1b458:	cmp	r7, #7
   1b45c:	bhi	1b5fc <main@@Base+0x8304>
   1b460:	add	r4, pc, #32
   1b464:	mov	r1, #0
   1b468:	mov	ip, #0
   1b46c:	mov	r9, #0
   1b470:	mov	r6, #0
   1b474:	mov	r3, #0
   1b478:	mov	r5, #0
   1b47c:	mov	r2, #0
   1b480:	mov	r0, #0
   1b484:	ldr	pc, [r4, r7, lsl #2]
   1b488:	andeq	fp, r1, ip, ror #9
   1b48c:	andeq	fp, r1, r4, ror #9
   1b490:	ldrdeq	fp, [r1], -ip
   1b494:	ldrdeq	fp, [r1], -r4
   1b498:	andeq	fp, r1, r8, asr #9
   1b49c:			; <UNDEFINED> instruction: 0x0001b4bc
   1b4a0:	andeq	fp, r1, ip, lsr #9
   1b4a4:	andeq	fp, r1, r8, lsr #9
   1b4a8:	ldrb	ip, [r8, #7]
   1b4ac:	ldrb	r0, [r8, #6]
   1b4b0:	mov	r9, r1
   1b4b4:	orr	r0, ip, r0, lsl #8
   1b4b8:	mov	r1, r0
   1b4bc:	ldrb	r0, [r8, #5]
   1b4c0:	mov	r6, r9
   1b4c4:	orr	r1, r1, r0, lsl #16
   1b4c8:	ldrb	r0, [r8, #4]
   1b4cc:	mov	r3, r6
   1b4d0:	orr	r1, r1, r0, lsl #24
   1b4d4:	ldrb	r0, [r8, #3]
   1b4d8:	orr	r5, r0, r3
   1b4dc:	ldrb	r0, [r8, #2]
   1b4e0:	orr	r2, r5, r0, lsl #8
   1b4e4:	ldrb	r0, [r8, #1]
   1b4e8:	orr	r0, r2, r0, lsl #16
   1b4ec:	ldrb	r2, [r8]
   1b4f0:	orr	r2, r0, r2, lsl #24
   1b4f4:	movw	r0, #0
   1b4f8:	movt	r0, #25956	; 0x6564
   1b4fc:	subs	r0, r1, r0
   1b500:	movw	r0, #29556	; 0x7374
   1b504:	movt	r0, #28261	; 0x6e65
   1b508:	sbcs	r0, r2, r0
   1b50c:	bcs	1b57c <main@@Base+0x8284>
   1b510:	movw	r0, #29793	; 0x7461
   1b514:	ldr	r6, [sp, #44]	; 0x2c
   1b518:	movt	r0, #25697	; 0x6461
   1b51c:	teq	r2, r0
   1b520:	bne	1b5fc <main@@Base+0x8304>
   1b524:	cmp	lr, #5
   1b528:	mov	r1, r8
   1b52c:	blt	1b8f4 <main@@Base+0x85fc>
   1b530:	ldr	r1, [sp, #32]
   1b534:	mov	r2, r8
   1b538:	ldrb	r0, [r2, #4]!
   1b53c:	ldr	r1, [r1]
   1b540:	cmp	r1, #0
   1b544:	beq	1b684 <main@@Base+0x838c>
   1b548:	cmp	r0, #33	; 0x21
   1b54c:	bcc	1b55c <main@@Base+0x8264>
   1b550:	cmp	r0, #58	; 0x3a
   1b554:	mov	r1, r8
   1b558:	bne	1b8f4 <main@@Base+0x85fc>
   1b55c:	ldr	r0, [sp, #32]
   1b560:	mov	r1, #0
   1b564:	str	r1, [r0]
   1b568:	ldr	r0, [sp, #44]	; 0x2c
   1b56c:	sub	r0, r0, r2
   1b570:	cmp	r0, #2
   1b574:	bge	1b6a4 <main@@Base+0x83ac>
   1b578:	b	1b758 <main@@Base+0x8460>
   1b57c:	movw	r0, #29292	; 0x726c
   1b580:	lsr	r3, r1, #8
   1b584:	movw	r7, #29793	; 0x7461
   1b588:	movt	r0, #117	; 0x75
   1b58c:	orr	r3, r3, r2, lsl #24
   1b590:	movt	r7, #25697	; 0x6461
   1b594:	eor	r0, r0, r2, lsr #8
   1b598:	eor	r3, r3, r7
   1b59c:	orrs	r0, r3, r0
   1b5a0:	bne	1b608 <main@@Base+0x8310>
   1b5a4:	cmp	lr, #8
   1b5a8:	mov	r1, r8
   1b5ac:	blt	1b964 <main@@Base+0x866c>
   1b5b0:	ldr	r1, [sp, #32]
   1b5b4:	mov	r2, r8
   1b5b8:	ldrb	r0, [r2, #7]!
   1b5bc:	ldr	r1, [r1]
   1b5c0:	cmp	r1, #0
   1b5c4:	beq	1b6c4 <main@@Base+0x83cc>
   1b5c8:	cmp	r0, #33	; 0x21
   1b5cc:	bcc	1b5dc <main@@Base+0x82e4>
   1b5d0:	cmp	r0, #58	; 0x3a
   1b5d4:	mov	r1, r8
   1b5d8:	bne	1b964 <main@@Base+0x866c>
   1b5dc:	ldr	r0, [sp, #32]
   1b5e0:	mov	r1, #0
   1b5e4:	str	r1, [r0]
   1b5e8:	ldr	r0, [sp, #44]	; 0x2c
   1b5ec:	sub	r0, r0, r2
   1b5f0:	cmp	r0, #2
   1b5f4:	bge	1b6e4 <main@@Base+0x83ec>
   1b5f8:	b	1b7dc <main@@Base+0x84e4>
   1b5fc:	mov	r0, sl
   1b600:	mov	r1, r8
   1b604:	b	1ba4c <main@@Base+0x8754>
   1b608:	movw	r0, #29556	; 0x7374
   1b60c:	bfc	r1, #0, #16
   1b610:	movt	r0, #28261	; 0x6e65
   1b614:	eor	r0, r2, r0
   1b618:	movw	r2, #0
   1b61c:	movt	r2, #25956	; 0x6564
   1b620:	eor	r1, r1, r2
   1b624:	orrs	r0, r1, r0
   1b628:	bne	1ba3c <main@@Base+0x8744>
   1b62c:	cmp	lr, #7
   1b630:	mov	r1, r8
   1b634:	blt	1b9d4 <main@@Base+0x86dc>
   1b638:	ldr	r1, [sp, #32]
   1b63c:	mov	r2, r8
   1b640:	ldrb	r0, [r2, #6]!
   1b644:	ldr	r1, [r1]
   1b648:	cmp	r1, #0
   1b64c:	beq	1b704 <main@@Base+0x840c>
   1b650:	cmp	r0, #33	; 0x21
   1b654:	bcc	1b664 <main@@Base+0x836c>
   1b658:	cmp	r0, #58	; 0x3a
   1b65c:	mov	r1, r8
   1b660:	bne	1b9d4 <main@@Base+0x86dc>
   1b664:	ldr	r0, [sp, #32]
   1b668:	mov	r1, #0
   1b66c:	str	r1, [r0]
   1b670:	ldr	r0, [sp, #44]	; 0x2c
   1b674:	sub	r0, r0, r2
   1b678:	cmp	r0, #2
   1b67c:	bge	1b724 <main@@Base+0x842c>
   1b680:	b	1b860 <main@@Base+0x8568>
   1b684:	cmp	r0, #34	; 0x22
   1b688:	mov	r1, r8
   1b68c:	bne	1b8f4 <main@@Base+0x85fc>
   1b690:	add	r2, r8, #5
   1b694:	ldr	r0, [sp, #44]	; 0x2c
   1b698:	sub	r0, r0, r2
   1b69c:	cmp	r0, #2
   1b6a0:	blt	1b758 <main@@Base+0x8460>
   1b6a4:	ldrb	r0, [r2]
   1b6a8:	cmp	r0, #32
   1b6ac:	bls	1b744 <main@@Base+0x844c>
   1b6b0:	mov	r1, r2
   1b6b4:	ldr	r0, [sp, #44]	; 0x2c
   1b6b8:	cmp	r1, r0
   1b6bc:	bne	1b778 <main@@Base+0x8480>
   1b6c0:	b	1b7b4 <main@@Base+0x84bc>
   1b6c4:	cmp	r0, #34	; 0x22
   1b6c8:	mov	r1, r8
   1b6cc:	bne	1b964 <main@@Base+0x866c>
   1b6d0:	add	r2, r8, #8
   1b6d4:	ldr	r0, [sp, #44]	; 0x2c
   1b6d8:	sub	r0, r0, r2
   1b6dc:	cmp	r0, #2
   1b6e0:	blt	1b7dc <main@@Base+0x84e4>
   1b6e4:	ldrb	r0, [r2]
   1b6e8:	cmp	r0, #32
   1b6ec:	bls	1b7c8 <main@@Base+0x84d0>
   1b6f0:	mov	r1, r2
   1b6f4:	ldr	r0, [sp, #44]	; 0x2c
   1b6f8:	cmp	r1, r0
   1b6fc:	bne	1b7fc <main@@Base+0x8504>
   1b700:	b	1b838 <main@@Base+0x8540>
   1b704:	cmp	r0, #34	; 0x22
   1b708:	mov	r1, r8
   1b70c:	bne	1b9d4 <main@@Base+0x86dc>
   1b710:	add	r2, r8, #7
   1b714:	ldr	r0, [sp, #44]	; 0x2c
   1b718:	sub	r0, r0, r2
   1b71c:	cmp	r0, #2
   1b720:	blt	1b860 <main@@Base+0x8568>
   1b724:	ldrb	r0, [r2]
   1b728:	cmp	r0, #32
   1b72c:	bls	1b84c <main@@Base+0x8554>
   1b730:	mov	r1, r2
   1b734:	ldr	r0, [sp, #44]	; 0x2c
   1b738:	cmp	r1, r0
   1b73c:	bne	1b880 <main@@Base+0x8588>
   1b740:	b	1b8bc <main@@Base+0x85c4>
   1b744:	bne	1b758 <main@@Base+0x8460>
   1b748:	mov	r1, r2
   1b74c:	ldrb	r0, [r1, #1]!
   1b750:	cmp	r0, #32
   1b754:	bhi	1b76c <main@@Base+0x8474>
   1b758:	mov	r1, r2
   1b75c:	ldr	r0, [sp, #36]	; 0x24
   1b760:	ldr	r2, [sp, #44]	; 0x2c
   1b764:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b768:	mov	r1, r0
   1b76c:	ldr	r0, [sp, #44]	; 0x2c
   1b770:	cmp	r1, r0
   1b774:	beq	1b7b4 <main@@Base+0x84bc>
   1b778:	ldrb	r0, [r1]
   1b77c:	cmp	r0, #58	; 0x3a
   1b780:	bne	1b7b4 <main@@Base+0x84bc>
   1b784:	ldr	r0, [sp, #44]	; 0x2c
   1b788:	add	r2, r1, #1
   1b78c:	sub	r0, r0, r2
   1b790:	cmp	r0, #2
   1b794:	blt	1b8e0 <main@@Base+0x85e8>
   1b798:	ldrb	r0, [r2]
   1b79c:	cmp	r0, #32
   1b7a0:	bls	1b8d0 <main@@Base+0x85d8>
   1b7a4:	mov	r1, r2
   1b7a8:	cmp	r8, r1
   1b7ac:	bne	1b8fc <main@@Base+0x8604>
   1b7b0:	b	1ba3c <main@@Base+0x8744>
   1b7b4:	ldr	r0, [sp, #36]	; 0x24
   1b7b8:	ldr	r2, [sp, #44]	; 0x2c
   1b7bc:	mov	r3, #4
   1b7c0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1b7c4:	b	1b8f0 <main@@Base+0x85f8>
   1b7c8:	bne	1b7dc <main@@Base+0x84e4>
   1b7cc:	mov	r1, r2
   1b7d0:	ldrb	r0, [r1, #1]!
   1b7d4:	cmp	r0, #32
   1b7d8:	bhi	1b7f0 <main@@Base+0x84f8>
   1b7dc:	mov	r1, r2
   1b7e0:	ldr	r0, [sp, #36]	; 0x24
   1b7e4:	ldr	r2, [sp, #44]	; 0x2c
   1b7e8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b7ec:	mov	r1, r0
   1b7f0:	ldr	r0, [sp, #44]	; 0x2c
   1b7f4:	cmp	r1, r0
   1b7f8:	beq	1b838 <main@@Base+0x8540>
   1b7fc:	ldrb	r0, [r1]
   1b800:	cmp	r0, #58	; 0x3a
   1b804:	bne	1b838 <main@@Base+0x8540>
   1b808:	ldr	r0, [sp, #44]	; 0x2c
   1b80c:	add	r2, r1, #1
   1b810:	sub	r0, r0, r2
   1b814:	cmp	r0, #2
   1b818:	blt	1b950 <main@@Base+0x8658>
   1b81c:	ldrb	r0, [r2]
   1b820:	cmp	r0, #32
   1b824:	bls	1b940 <main@@Base+0x8648>
   1b828:	mov	r1, r2
   1b82c:	cmp	r8, r1
   1b830:	bne	1b96c <main@@Base+0x8674>
   1b834:	b	1ba3c <main@@Base+0x8744>
   1b838:	ldr	r0, [sp, #36]	; 0x24
   1b83c:	ldr	r2, [sp, #44]	; 0x2c
   1b840:	mov	r3, #4
   1b844:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1b848:	b	1b960 <main@@Base+0x8668>
   1b84c:	bne	1b860 <main@@Base+0x8568>
   1b850:	mov	r1, r2
   1b854:	ldrb	r0, [r1, #1]!
   1b858:	cmp	r0, #32
   1b85c:	bhi	1b874 <main@@Base+0x857c>
   1b860:	mov	r1, r2
   1b864:	ldr	r0, [sp, #36]	; 0x24
   1b868:	ldr	r2, [sp, #44]	; 0x2c
   1b86c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b870:	mov	r1, r0
   1b874:	ldr	r0, [sp, #44]	; 0x2c
   1b878:	cmp	r1, r0
   1b87c:	beq	1b8bc <main@@Base+0x85c4>
   1b880:	ldrb	r0, [r1]
   1b884:	cmp	r0, #58	; 0x3a
   1b888:	bne	1b8bc <main@@Base+0x85c4>
   1b88c:	ldr	r0, [sp, #44]	; 0x2c
   1b890:	add	r2, r1, #1
   1b894:	sub	r0, r0, r2
   1b898:	cmp	r0, #2
   1b89c:	blt	1b9c0 <main@@Base+0x86c8>
   1b8a0:	ldrb	r0, [r2]
   1b8a4:	cmp	r0, #32
   1b8a8:	bls	1b9b0 <main@@Base+0x86b8>
   1b8ac:	mov	r1, r2
   1b8b0:	cmp	r8, r1
   1b8b4:	bne	1b9dc <main@@Base+0x86e4>
   1b8b8:	b	1ba3c <main@@Base+0x8744>
   1b8bc:	ldr	r0, [sp, #36]	; 0x24
   1b8c0:	ldr	r2, [sp, #44]	; 0x2c
   1b8c4:	mov	r3, #4
   1b8c8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1b8cc:	b	1b9d0 <main@@Base+0x86d8>
   1b8d0:	bne	1b8e0 <main@@Base+0x85e8>
   1b8d4:	ldrb	r0, [r1, #2]!
   1b8d8:	cmp	r0, #32
   1b8dc:	bhi	1b8f4 <main@@Base+0x85fc>
   1b8e0:	mov	r1, r2
   1b8e4:	ldr	r0, [sp, #36]	; 0x24
   1b8e8:	ldr	r2, [sp, #44]	; 0x2c
   1b8ec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b8f0:	mov	r1, r0
   1b8f4:	cmp	r8, r1
   1b8f8:	beq	1ba3c <main@@Base+0x8744>
   1b8fc:	mov	r0, #0
   1b900:	ldr	r2, [sp, #44]	; 0x2c
   1b904:	sub	r3, fp, #56	; 0x38
   1b908:	str	r0, [sp]
   1b90c:	ldr	r0, [sp, #36]	; 0x24
   1b910:	bl	32558 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b914:	mov	r4, r0
   1b918:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b91c:	cmp	r0, #0
   1b920:	beq	1ccc4 <main@@Base+0x99cc>
   1b924:	ldr	r0, [sp, #36]	; 0x24
   1b928:	mov	r1, #0
   1b92c:	ldr	r0, [r0]
   1b930:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1b934:	cmp	r0, #0
   1b938:	bne	1ba1c <main@@Base+0x8724>
   1b93c:	b	1ccc4 <main@@Base+0x99cc>
   1b940:	bne	1b950 <main@@Base+0x8658>
   1b944:	ldrb	r0, [r1, #2]!
   1b948:	cmp	r0, #32
   1b94c:	bhi	1b964 <main@@Base+0x866c>
   1b950:	mov	r1, r2
   1b954:	ldr	r0, [sp, #36]	; 0x24
   1b958:	ldr	r2, [sp, #44]	; 0x2c
   1b95c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b960:	mov	r1, r0
   1b964:	cmp	r8, r1
   1b968:	beq	1ba3c <main@@Base+0x8744>
   1b96c:	mov	r0, #1
   1b970:	ldr	r2, [sp, #44]	; 0x2c
   1b974:	sub	r3, fp, #56	; 0x38
   1b978:	str	r0, [sp]
   1b97c:	ldr	r0, [sp, #36]	; 0x24
   1b980:	bl	32558 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b984:	mov	r4, r0
   1b988:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b98c:	cmp	r0, #0
   1b990:	beq	1ccc4 <main@@Base+0x99cc>
   1b994:	ldr	r0, [sp, #36]	; 0x24
   1b998:	mov	r1, #1
   1b99c:	ldr	r0, [r0]
   1b9a0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1b9a4:	cmp	r0, #0
   1b9a8:	bne	1ba1c <main@@Base+0x8724>
   1b9ac:	b	1ccc4 <main@@Base+0x99cc>
   1b9b0:	bne	1b9c0 <main@@Base+0x86c8>
   1b9b4:	ldrb	r0, [r1, #2]!
   1b9b8:	cmp	r0, #32
   1b9bc:	bhi	1b9d4 <main@@Base+0x86dc>
   1b9c0:	mov	r1, r2
   1b9c4:	ldr	r0, [sp, #36]	; 0x24
   1b9c8:	ldr	r2, [sp, #44]	; 0x2c
   1b9cc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1b9d0:	mov	r1, r0
   1b9d4:	cmp	r8, r1
   1b9d8:	beq	1ba3c <main@@Base+0x8744>
   1b9dc:	mov	r0, #0
   1b9e0:	ldr	r2, [sp, #44]	; 0x2c
   1b9e4:	sub	r3, fp, #56	; 0x38
   1b9e8:	str	r0, [sp]
   1b9ec:	ldr	r0, [sp, #36]	; 0x24
   1b9f0:	bl	32558 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b9f4:	mov	r4, r0
   1b9f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b9fc:	cmp	r0, #0
   1ba00:	beq	1ccc4 <main@@Base+0x99cc>
   1ba04:	ldr	r0, [sp, #36]	; 0x24
   1ba08:	mov	r1, #2
   1ba0c:	ldr	r0, [r0]
   1ba10:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1ba14:	cmp	r0, #0
   1ba18:	beq	1ccc4 <main@@Base+0x99cc>
   1ba1c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1ba20:	str	r1, [r0]
   1ba24:	ldr	r6, [sp, #44]	; 0x2c
   1ba28:	ldr	sl, [sp, #36]	; 0x24
   1ba2c:	sub	r0, r6, r4
   1ba30:	cmp	r0, #2
   1ba34:	blt	1ba94 <main@@Base+0x879c>
   1ba38:	b	1ba64 <main@@Base+0x876c>
   1ba3c:	ldr	sl, [sp, #36]	; 0x24
   1ba40:	ldr	r6, [sp, #44]	; 0x2c
   1ba44:	mov	r1, r8
   1ba48:	mov	r0, sl
   1ba4c:	mov	r2, r6
   1ba50:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   1ba54:	mov	r4, r0
   1ba58:	sub	r0, r6, r4
   1ba5c:	cmp	r0, #2
   1ba60:	blt	1ba94 <main@@Base+0x879c>
   1ba64:	ldrb	r0, [r4]
   1ba68:	cmp	r0, #32
   1ba6c:	bls	1ba80 <main@@Base+0x8788>
   1ba70:	mov	r2, r4
   1ba74:	cmp	r2, r6
   1ba78:	bne	1bab0 <main@@Base+0x87b8>
   1ba7c:	b	1c318 <main@@Base+0x9020>
   1ba80:	bne	1ba94 <main@@Base+0x879c>
   1ba84:	mov	r2, r4
   1ba88:	ldrb	r0, [r2, #1]!
   1ba8c:	cmp	r0, #32
   1ba90:	bhi	1baa8 <main@@Base+0x87b0>
   1ba94:	mov	r0, sl
   1ba98:	mov	r1, r4
   1ba9c:	mov	r2, r6
   1baa0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1baa4:	mov	r2, r0
   1baa8:	cmp	r2, r6
   1baac:	beq	1c318 <main@@Base+0x9020>
   1bab0:	ldrb	r0, [r2]
   1bab4:	cmp	r0, #44	; 0x2c
   1bab8:	bne	1c334 <main@@Base+0x903c>
   1babc:	add	r1, r2, #1
   1bac0:	sub	r0, r6, r1
   1bac4:	cmp	r0, #2
   1bac8:	blt	1baf8 <main@@Base+0x8800>
   1bacc:	ldrb	r0, [r1]
   1bad0:	cmp	r0, #32
   1bad4:	bls	1bae8 <main@@Base+0x87f0>
   1bad8:	mov	r2, r1
   1badc:	cmp	r2, r6
   1bae0:	bne	1bb10 <main@@Base+0x8818>
   1bae4:	b	1c3d4 <main@@Base+0x90dc>
   1bae8:	bne	1baf8 <main@@Base+0x8800>
   1baec:	ldrb	r0, [r2, #2]!
   1baf0:	cmp	r0, #32
   1baf4:	bhi	1bb08 <main@@Base+0x8810>
   1baf8:	mov	r0, sl
   1bafc:	mov	r2, r6
   1bb00:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1bb04:	mov	r2, r0
   1bb08:	cmp	r2, r6
   1bb0c:	beq	1c3d4 <main@@Base+0x90dc>
   1bb10:	ldrb	r0, [r2]
   1bb14:	cmp	r0, #125	; 0x7d
   1bb18:	bne	1b3e8 <main@@Base+0x80f0>
   1bb1c:	add	r1, r2, #1
   1bb20:	sub	r0, r6, r1
   1bb24:	cmp	r0, #2
   1bb28:	bge	1c354 <main@@Base+0x905c>
   1bb2c:	b	1d930 <main@@Base+0xa638>
   1bb30:	ldr	r6, [sp, #44]	; 0x2c
   1bb34:	ldr	sl, [sp, #36]	; 0x24
   1bb38:	bne	1bb48 <main@@Base+0x8850>
   1bb3c:	ldrb	r0, [r4, #2]!
   1bb40:	cmp	r0, #32
   1bb44:	bhi	1bb58 <main@@Base+0x8860>
   1bb48:	mov	r0, sl
   1bb4c:	mov	r2, r6
   1bb50:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1bb54:	mov	r4, r0
   1bb58:	cmp	r4, r6
   1bb5c:	beq	1bbbc <main@@Base+0x88c4>
   1bb60:	ldrb	r0, [r4]
   1bb64:	cmp	r0, #93	; 0x5d
   1bb68:	bne	1bbb8 <main@@Base+0x88c0>
   1bb6c:	ldr	r6, [sp, #44]	; 0x2c
   1bb70:	ldr	sl, [sp, #36]	; 0x24
   1bb74:	add	r1, r4, #1
   1bb78:	sub	r0, r6, r1
   1bb7c:	cmp	r0, #2
   1bb80:	blt	1bba8 <main@@Base+0x88b0>
   1bb84:	ldrb	r0, [r1]
   1bb88:	cmp	r0, #32
   1bb8c:	bhi	1c7a4 <main@@Base+0x94ac>
   1bb90:	ldr	r6, [sp, #44]	; 0x2c
   1bb94:	ldr	sl, [sp, #36]	; 0x24
   1bb98:	bne	1bba8 <main@@Base+0x88b0>
   1bb9c:	ldrb	r0, [r4, #2]!
   1bba0:	cmp	r0, #32
   1bba4:	bhi	1a894 <main@@Base+0x759c>
   1bba8:	mov	r0, sl
   1bbac:	mov	r2, r6
   1bbb0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1bbb4:	b	1a890 <main@@Base+0x7598>
   1bbb8:	mov	r6, r4
   1bbbc:	mov	r0, #0
   1bbc0:	mov	r1, #1
   1bbc4:	str	r0, [sp, #60]	; 0x3c
   1bbc8:	str	r0, [sp, #56]	; 0x38
   1bbcc:	ldr	r0, [sp, #36]	; 0x24
   1bbd0:	ldr	r0, [r0]
   1bbd4:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1bbd8:	cmp	r0, #0
   1bbdc:	beq	1dce8 <main@@Base+0xa9f0>
   1bbe0:	mov	r4, r6
   1bbe4:	ldr	r6, [sp, #44]	; 0x2c
   1bbe8:	ldr	sl, [sp, #36]	; 0x24
   1bbec:	mov	r7, r0
   1bbf0:	mov	r0, #0
   1bbf4:	cmp	r4, r6
   1bbf8:	str	r0, [fp, #-52]	; 0xffffffcc
   1bbfc:	str	r0, [fp, #-56]	; 0xffffffc8
   1bc00:	str	r0, [sp, #60]	; 0x3c
   1bc04:	str	r0, [sp, #56]	; 0x38
   1bc08:	str	r0, [fp, #-60]	; 0xffffffc4
   1bc0c:	beq	1bc6c <main@@Base+0x8974>
   1bc10:	sub	r0, fp, #56	; 0x38
   1bc14:	mov	r1, r4
   1bc18:	mov	r2, r6
   1bc1c:	sub	r3, fp, #60	; 0x3c
   1bc20:	str	r0, [sp]
   1bc24:	mov	r0, sl
   1bc28:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1bc2c:	cmp	r0, r4
   1bc30:	beq	1bc80 <main@@Base+0x8988>
   1bc34:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1bc38:	mov	r1, r0
   1bc3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bc40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bc44:	cmp	r2, #0
   1bc48:	beq	1bc98 <main@@Base+0x89a0>
   1bc4c:	rsbs	r2, r0, #0
   1bc50:	mov	r2, #-2147483648	; 0x80000000
   1bc54:	sbcs	r2, r2, r3
   1bc58:	bcs	1bcd0 <main@@Base+0x89d8>
   1bc5c:	ldr	sl, [sp, #36]	; 0x24
   1bc60:	ldr	r6, [sp, #44]	; 0x2c
   1bc64:	mov	r3, #8
   1bc68:	b	1bcac <main@@Base+0x89b4>
   1bc6c:	mov	r3, #0
   1bc70:	mov	r1, r6
   1bc74:	cmp	r4, r1
   1bc78:	bne	1bd30 <main@@Base+0x8a38>
   1bc7c:	b	1bcf0 <main@@Base+0x89f8>
   1bc80:	mov	r0, #0
   1bc84:	mov	r3, #0
   1bc88:	mov	r1, r4
   1bc8c:	cmp	r4, r1
   1bc90:	bne	1bd30 <main@@Base+0x8a38>
   1bc94:	b	1bcf0 <main@@Base+0x89f8>
   1bc98:	cmn	r3, #1
   1bc9c:	bgt	1bcd8 <main@@Base+0x89e0>
   1bca0:	ldr	sl, [sp, #36]	; 0x24
   1bca4:	ldr	r6, [sp, #44]	; 0x2c
   1bca8:	mov	r3, #7
   1bcac:	mov	r0, sl
   1bcb0:	mov	r2, r6
   1bcb4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1bcb8:	mov	r1, r0
   1bcbc:	mov	r0, #0
   1bcc0:	mov	r3, #0
   1bcc4:	cmp	r4, r1
   1bcc8:	bne	1bd30 <main@@Base+0x8a38>
   1bccc:	b	1bcf0 <main@@Base+0x89f8>
   1bcd0:	rsbs	r0, r0, #0
   1bcd4:	rsc	r3, r3, #0
   1bcd8:	ldr	r6, [sp, #44]	; 0x2c
   1bcdc:	ldr	sl, [sp, #36]	; 0x24
   1bce0:	str	r0, [sp, #56]	; 0x38
   1bce4:	str	r3, [sp, #60]	; 0x3c
   1bce8:	cmp	r4, r1
   1bcec:	bne	1bd30 <main@@Base+0x8a38>
   1bcf0:	add	r0, sp, #56	; 0x38
   1bcf4:	mov	r1, r4
   1bcf8:	mov	r2, r6
   1bcfc:	str	r0, [sp]
   1bd00:	movw	r0, #33032	; 0x8108
   1bd04:	movt	r0, #4
   1bd08:	add	r3, r0, #108	; 0x6c
   1bd0c:	mov	r0, sl
   1bd10:	bl	240d0 <main@@Base+0x10dd8>
   1bd14:	mov	r1, r0
   1bd18:	cmp	r0, r4
   1bd1c:	cmpne	r1, r6
   1bd20:	beq	1dcdc <main@@Base+0xa9e4>
   1bd24:	ldr	r0, [sp, #56]	; 0x38
   1bd28:	ldr	r3, [sp, #60]	; 0x3c
   1bd2c:	ldr	sl, [sp, #36]	; 0x24
   1bd30:	stm	r7, {r0, r3}
   1bd34:	sub	r0, r6, r1
   1bd38:	cmp	r0, #2
   1bd3c:	blt	1bd70 <main@@Base+0x8a78>
   1bd40:	ldrb	r0, [r1]
   1bd44:	cmp	r0, #32
   1bd48:	bls	1bd5c <main@@Base+0x8a64>
   1bd4c:	mov	r4, r1
   1bd50:	cmp	r4, r6
   1bd54:	bne	1bd88 <main@@Base+0x8a90>
   1bd58:	b	1c4a0 <main@@Base+0x91a8>
   1bd5c:	bne	1bd70 <main@@Base+0x8a78>
   1bd60:	mov	r4, r1
   1bd64:	ldrb	r0, [r4, #1]!
   1bd68:	cmp	r0, #32
   1bd6c:	bhi	1bd80 <main@@Base+0x8a88>
   1bd70:	mov	r0, sl
   1bd74:	mov	r2, r6
   1bd78:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1bd7c:	mov	r4, r0
   1bd80:	cmp	r4, r6
   1bd84:	beq	1c4a0 <main@@Base+0x91a8>
   1bd88:	ldrb	r0, [r4]
   1bd8c:	cmp	r0, #44	; 0x2c
   1bd90:	bne	1c4b4 <main@@Base+0x91bc>
   1bd94:	add	r1, r4, #1
   1bd98:	sub	r0, r6, r1
   1bd9c:	cmp	r0, #2
   1bda0:	blt	1bdd0 <main@@Base+0x8ad8>
   1bda4:	ldrb	r0, [r1]
   1bda8:	cmp	r0, #32
   1bdac:	bls	1bdc0 <main@@Base+0x8ac8>
   1bdb0:	mov	r4, r1
   1bdb4:	cmp	r4, r6
   1bdb8:	bne	1bde8 <main@@Base+0x8af0>
   1bdbc:	b	1c71c <main@@Base+0x9424>
   1bdc0:	bne	1bdd0 <main@@Base+0x8ad8>
   1bdc4:	ldrb	r0, [r4, #2]!
   1bdc8:	cmp	r0, #32
   1bdcc:	bhi	1bde0 <main@@Base+0x8ae8>
   1bdd0:	mov	r0, sl
   1bdd4:	mov	r2, r6
   1bdd8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1bddc:	mov	r4, r0
   1bde0:	cmp	r4, r6
   1bde4:	beq	1c71c <main@@Base+0x9424>
   1bde8:	ldrb	r0, [r4]
   1bdec:	cmp	r0, #93	; 0x5d
   1bdf0:	beq	1c788 <main@@Base+0x9490>
   1bdf4:	mov	r0, #0
   1bdf8:	mov	r1, #1
   1bdfc:	str	r0, [sp, #60]	; 0x3c
   1be00:	str	r0, [sp, #56]	; 0x38
   1be04:	ldr	r0, [sl]
   1be08:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1be0c:	mov	r7, r0
   1be10:	cmp	r0, #0
   1be14:	bne	1bbf0 <main@@Base+0x88f8>
   1be18:	b	133b4 <main@@Base+0xbc>
   1be1c:	ldr	r6, [sp, #44]	; 0x2c
   1be20:	ldr	sl, [sp, #36]	; 0x24
   1be24:	bne	1be34 <main@@Base+0x8b3c>
   1be28:	ldrb	r0, [r8, #2]!
   1be2c:	cmp	r0, #32
   1be30:	bhi	1be44 <main@@Base+0x8b4c>
   1be34:	mov	r0, sl
   1be38:	mov	r2, r6
   1be3c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1be40:	mov	r8, r0
   1be44:	cmp	r7, r8
   1be48:	beq	1beac <main@@Base+0x8bb4>
   1be4c:	ldr	r0, [sl]
   1be50:	mov	r1, #8
   1be54:	mov	r2, #8
   1be58:	mvn	r3, #-536870912	; 0xe0000000
   1be5c:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   1be60:	cmp	r0, #0
   1be64:	bne	1dcd0 <main@@Base+0xa9d8>
   1be68:	cmp	r8, r6
   1be6c:	beq	1beb8 <main@@Base+0x8bc0>
   1be70:	ldrb	r0, [r8]
   1be74:	cmp	r0, #91	; 0x5b
   1be78:	bne	1beb8 <main@@Base+0x8bc0>
   1be7c:	add	r1, r8, #1
   1be80:	sub	r0, r6, r1
   1be84:	cmp	r0, #2
   1be88:	blt	1c4e4 <main@@Base+0x91ec>
   1be8c:	ldrb	r0, [r1]
   1be90:	cmp	r0, #32
   1be94:	bls	1c4d4 <main@@Base+0x91dc>
   1be98:	mov	r8, r1
   1be9c:	ldr	r7, [sp, #44]	; 0x2c
   1bea0:	cmp	r8, r7
   1bea4:	bne	1c500 <main@@Base+0x9208>
   1bea8:	b	1c558 <main@@Base+0x9260>
   1beac:	mov	r0, sl
   1beb0:	mov	r1, r7
   1beb4:	b	16864 <main@@Base+0x356c>
   1beb8:	ldr	sl, [sp, #36]	; 0x24
   1bebc:	mov	r1, r8
   1bec0:	mov	r2, r6
   1bec4:	mov	r3, #22
   1bec8:	mov	r0, sl
   1becc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1bed0:	mov	r8, r0
   1bed4:	ldr	r0, [sl]
   1bed8:	bl	2da48 <flatcc_builder_end_vector@@Base>
   1bedc:	cmp	r0, #0
   1bee0:	str	r0, [sp, #52]	; 0x34
   1bee4:	beq	1dcbc <main@@Base+0xa9c4>
   1bee8:	ldr	r0, [sl]
   1beec:	mov	r1, #33	; 0x21
   1bef0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1bef4:	cmp	r0, #0
   1bef8:	beq	1dcbc <main@@Base+0xa9c4>
   1befc:	ldr	r1, [sp, #52]	; 0x34
   1bf00:	ldr	r6, [sp, #44]	; 0x2c
   1bf04:	mov	r4, r8
   1bf08:	str	r1, [r0]
   1bf0c:	b	16870 <main@@Base+0x3578>
   1bf10:	mov	r6, r0
   1bf14:	ldr	r8, [sp, #44]	; 0x2c
   1bf18:	ldr	sl, [sp, #36]	; 0x24
   1bf1c:	str	r6, [fp, #-60]	; 0xffffffc4
   1bf20:	ldr	r5, [sp, #40]	; 0x28
   1bf24:	cmp	r7, r4
   1bf28:	bne	1bf70 <main@@Base+0x8c78>
   1bf2c:	movw	r3, #33032	; 0x8108
   1bf30:	sub	r0, fp, #60	; 0x3c
   1bf34:	mov	r1, r7
   1bf38:	mov	r2, r8
   1bf3c:	movt	r3, #4
   1bf40:	str	r0, [sp]
   1bf44:	mov	r0, sl
   1bf48:	bl	23e4c <main@@Base+0x10b54>
   1bf4c:	cmp	r0, r7
   1bf50:	mov	r4, r0
   1bf54:	ldrne	r1, [sp, #44]	; 0x2c
   1bf58:	cmpne	r4, r1
   1bf5c:	beq	1dc9c <main@@Base+0xa9a4>
   1bf60:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1bf64:	ldr	r8, [sp, #44]	; 0x2c
   1bf68:	ldr	sl, [sp, #36]	; 0x24
   1bf6c:	ldr	r5, [sp, #40]	; 0x28
   1bf70:	cmp	r6, #0
   1bf74:	bne	1bf84 <main@@Base+0x8c8c>
   1bf78:	ldrb	r0, [sl, #8]
   1bf7c:	tst	r0, #2
   1bf80:	beq	19060 <main@@Base+0x5d68>
   1bf84:	ldr	r0, [sl]
   1bf88:	mov	r1, #20
   1bf8c:	mov	r2, #4
   1bf90:	mov	r3, #4
   1bf94:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1bf98:	cmp	r0, #0
   1bf9c:	bne	1a3a8 <main@@Base+0x70b0>
   1bfa0:	b	1dc9c <main@@Base+0xa9a4>
   1bfa4:	ldr	r6, [sp, #44]	; 0x2c
   1bfa8:	ldr	sl, [sp, #36]	; 0x24
   1bfac:	bne	1bfbc <main@@Base+0x8cc4>
   1bfb0:	ldrb	r0, [r7, #2]!
   1bfb4:	cmp	r0, #32
   1bfb8:	bhi	1bfcc <main@@Base+0x8cd4>
   1bfbc:	mov	r0, sl
   1bfc0:	mov	r2, r6
   1bfc4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1bfc8:	mov	r7, r0
   1bfcc:	cmp	r4, r7
   1bfd0:	beq	1c958 <main@@Base+0x9660>
   1bfd4:	mov	r2, r6
   1bfd8:	mov	r6, #0
   1bfdc:	cmp	r7, r2
   1bfe0:	str	r6, [fp, #-52]	; 0xffffffcc
   1bfe4:	str	r6, [fp, #-56]	; 0xffffffc8
   1bfe8:	str	r6, [sp, #60]	; 0x3c
   1bfec:	str	r6, [sp, #56]	; 0x38
   1bff0:	str	r6, [fp, #-60]	; 0xffffffc4
   1bff4:	beq	1c050 <main@@Base+0x8d58>
   1bff8:	sub	r0, fp, #56	; 0x38
   1bffc:	mov	r1, r7
   1c000:	sub	r3, fp, #60	; 0x3c
   1c004:	str	r0, [sp]
   1c008:	mov	r0, sl
   1c00c:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1c010:	cmp	r0, r7
   1c014:	beq	1c064 <main@@Base+0x8d6c>
   1c018:	mov	r4, r0
   1c01c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c020:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1c024:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c028:	cmp	r0, #0
   1c02c:	beq	1c07c <main@@Base+0x8d84>
   1c030:	subs	r0, r6, #1
   1c034:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1c038:	bcc	1c280 <main@@Base+0x8f88>
   1c03c:	ldr	r0, [sp, #36]	; 0x24
   1c040:	ldr	r2, [sp, #44]	; 0x2c
   1c044:	mov	r1, r4
   1c048:	mov	r3, #8
   1c04c:	b	1c094 <main@@Base+0x8d9c>
   1c050:	mov	r5, #0
   1c054:	mov	r4, r2
   1c058:	cmp	r7, r4
   1c05c:	bne	1c2d8 <main@@Base+0x8fe0>
   1c060:	b	1c298 <main@@Base+0x8fa0>
   1c064:	mov	r6, #0
   1c068:	mov	r5, #0
   1c06c:	mov	r4, r7
   1c070:	cmp	r7, r4
   1c074:	bne	1c2d8 <main@@Base+0x8fe0>
   1c078:	b	1c298 <main@@Base+0x8fa0>
   1c07c:	cmn	r5, #1
   1c080:	bgt	1c288 <main@@Base+0x8f90>
   1c084:	ldr	r0, [sp, #36]	; 0x24
   1c088:	ldr	r2, [sp, #44]	; 0x2c
   1c08c:	mov	r1, r4
   1c090:	mov	r3, #7
   1c094:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1c098:	mov	r4, r0
   1c09c:	mov	r6, #0
   1c0a0:	mov	r5, #0
   1c0a4:	cmp	r7, r4
   1c0a8:	bne	1c2d8 <main@@Base+0x8fe0>
   1c0ac:	b	1c298 <main@@Base+0x8fa0>
   1c0b0:	ldr	r6, [sp, #44]	; 0x2c
   1c0b4:	bne	1c0c4 <main@@Base+0x8dcc>
   1c0b8:	ldrb	r0, [r4, #2]!
   1c0bc:	cmp	r0, #32
   1c0c0:	bhi	1c0d4 <main@@Base+0x8ddc>
   1c0c4:	ldr	r0, [sp, #36]	; 0x24
   1c0c8:	mov	r2, r6
   1c0cc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c0d0:	mov	r4, r0
   1c0d4:	cmp	r4, r6
   1c0d8:	mov	r3, r6
   1c0dc:	beq	1c130 <main@@Base+0x8e38>
   1c0e0:	ldrb	r0, [r4]
   1c0e4:	cmp	r0, #125	; 0x7d
   1c0e8:	bne	1c12c <main@@Base+0x8e34>
   1c0ec:	ldr	r6, [sp, #44]	; 0x2c
   1c0f0:	ldr	sl, [sp, #36]	; 0x24
   1c0f4:	add	r1, r4, #1
   1c0f8:	sub	r0, r6, r1
   1c0fc:	cmp	r0, #2
   1c100:	blt	1daa4 <main@@Base+0xa7ac>
   1c104:	ldrb	r0, [r1]
   1c108:	cmp	r0, #32
   1c10c:	bhi	1c758 <main@@Base+0x9460>
   1c110:	ldr	r6, [sp, #44]	; 0x2c
   1c114:	ldr	sl, [sp, #36]	; 0x24
   1c118:	bne	1daa4 <main@@Base+0xa7ac>
   1c11c:	ldrb	r0, [r4, #2]!
   1c120:	cmp	r0, #32
   1c124:	bhi	193dc <main@@Base+0x60e4>
   1c128:	b	1daa4 <main@@Base+0xa7ac>
   1c12c:	mov	r3, r4
   1c130:	ldr	r6, [sp, #44]	; 0x2c
   1c134:	ldr	sl, [sp, #36]	; 0x24
   1c138:	cmp	r3, r6
   1c13c:	mov	r1, r6
   1c140:	beq	1c198 <main@@Base+0x8ea0>
   1c144:	ldrb	r0, [r3]
   1c148:	cmp	r0, #46	; 0x2e
   1c14c:	beq	1c16c <main@@Base+0x8e74>
   1c150:	cmp	r0, #34	; 0x22
   1c154:	bne	1c188 <main@@Base+0x8e90>
   1c158:	ldr	r0, [sp, #32]
   1c15c:	mov	r1, #0
   1c160:	str	r1, [r0]
   1c164:	add	r1, r3, #1
   1c168:	b	1c198 <main@@Base+0x8ea0>
   1c16c:	mov	r1, r3
   1c170:	mov	r0, sl
   1c174:	mov	r2, r6
   1c178:	mov	r3, #5
   1c17c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1c180:	mov	r1, r0
   1c184:	b	1c198 <main@@Base+0x8ea0>
   1c188:	ldr	r0, [sp, #32]
   1c18c:	mov	r1, #1
   1c190:	str	r1, [r0]
   1c194:	mov	r1, r3
   1c198:	mov	r0, sl
   1c19c:	mov	r2, r6
   1c1a0:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   1c1a4:	mov	r2, r0
   1c1a8:	sub	r0, r6, r0
   1c1ac:	cmp	r0, #2
   1c1b0:	blt	1c1e4 <main@@Base+0x8eec>
   1c1b4:	ldrb	r0, [r2]
   1c1b8:	cmp	r0, #32
   1c1bc:	bls	1c1d0 <main@@Base+0x8ed8>
   1c1c0:	mov	r3, r2
   1c1c4:	cmp	r3, r6
   1c1c8:	bne	1c200 <main@@Base+0x8f08>
   1c1cc:	b	1c708 <main@@Base+0x9410>
   1c1d0:	bne	1c1e4 <main@@Base+0x8eec>
   1c1d4:	mov	r3, r2
   1c1d8:	ldrb	r0, [r3, #1]!
   1c1dc:	cmp	r0, #32
   1c1e0:	bhi	1c1f8 <main@@Base+0x8f00>
   1c1e4:	mov	r1, r2
   1c1e8:	mov	r0, sl
   1c1ec:	mov	r2, r6
   1c1f0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c1f4:	mov	r3, r0
   1c1f8:	cmp	r3, r6
   1c1fc:	beq	1c708 <main@@Base+0x9410>
   1c200:	ldrb	r0, [r3]
   1c204:	cmp	r0, #44	; 0x2c
   1c208:	bne	1c72c <main@@Base+0x9434>
   1c20c:	add	r1, r3, #1
   1c210:	sub	r0, r6, r1
   1c214:	cmp	r0, #2
   1c218:	blt	1c248 <main@@Base+0x8f50>
   1c21c:	ldrb	r0, [r1]
   1c220:	cmp	r0, #32
   1c224:	bls	1c238 <main@@Base+0x8f40>
   1c228:	mov	r3, r1
   1c22c:	cmp	r3, r6
   1c230:	bne	1c260 <main@@Base+0x8f68>
   1c234:	b	1c7ac <main@@Base+0x94b4>
   1c238:	bne	1c248 <main@@Base+0x8f50>
   1c23c:	ldrb	r0, [r3, #2]!
   1c240:	cmp	r0, #32
   1c244:	bhi	1c258 <main@@Base+0x8f60>
   1c248:	mov	r0, sl
   1c24c:	mov	r2, r6
   1c250:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c254:	mov	r3, r0
   1c258:	cmp	r3, r6
   1c25c:	beq	1c7ac <main@@Base+0x94b4>
   1c260:	ldrb	r0, [r3]
   1c264:	cmp	r0, #125	; 0x7d
   1c268:	bne	1c138 <main@@Base+0x8e40>
   1c26c:	add	r1, r3, #1
   1c270:	sub	r0, r6, r1
   1c274:	cmp	r0, #2
   1c278:	bge	1c74c <main@@Base+0x9454>
   1c27c:	b	1daa4 <main@@Base+0xa7ac>
   1c280:	rsbs	r6, r6, #0
   1c284:	rsc	r5, r5, #0
   1c288:	str	r6, [sp, #56]	; 0x38
   1c28c:	str	r5, [sp, #60]	; 0x3c
   1c290:	cmp	r7, r4
   1c294:	bne	1c2d8 <main@@Base+0x8fe0>
   1c298:	add	r0, sp, #56	; 0x38
   1c29c:	ldr	r2, [sp, #44]	; 0x2c
   1c2a0:	mov	r1, r7
   1c2a4:	str	r0, [sp]
   1c2a8:	movw	r0, #33032	; 0x8108
   1c2ac:	movt	r0, #4
   1c2b0:	add	r3, r0, #24
   1c2b4:	ldr	r0, [sp, #36]	; 0x24
   1c2b8:	bl	240d0 <main@@Base+0x10dd8>
   1c2bc:	cmp	r0, r7
   1c2c0:	mov	r4, r0
   1c2c4:	ldrne	r1, [sp, #44]	; 0x2c
   1c2c8:	cmpne	r4, r1
   1c2cc:	beq	1dc9c <main@@Base+0xa9a4>
   1c2d0:	ldr	r6, [sp, #56]	; 0x38
   1c2d4:	ldr	r5, [sp, #60]	; 0x3c
   1c2d8:	ldr	sl, [sp, #36]	; 0x24
   1c2dc:	orrs	r0, r6, r5
   1c2e0:	bne	1c2f0 <main@@Base+0x8ff8>
   1c2e4:	ldrb	r0, [sl, #8]
   1c2e8:	tst	r0, #2
   1c2ec:	beq	1d7f0 <main@@Base+0xa4f8>
   1c2f0:	ldr	r0, [sl]
   1c2f4:	mov	r1, #22
   1c2f8:	b	1ca0c <main@@Base+0x9714>
   1c2fc:	ldr	sl, [sp, #36]	; 0x24
   1c300:	ldr	r6, [sp, #44]	; 0x2c
   1c304:	mov	r1, r7
   1c308:	mov	r0, sl
   1c30c:	mov	r2, r6
   1c310:	mov	r3, #9
   1c314:	b	18e18 <main@@Base+0x5b20>
   1c318:	mov	r4, r6
   1c31c:	ldr	r0, [sl, #24]
   1c320:	cmp	r0, #0
   1c324:	bne	18c6c <main@@Base+0x5974>
   1c328:	b	1c378 <main@@Base+0x9080>
   1c32c:	mov	r4, r6
   1c330:	b	1a210 <main@@Base+0x6f18>
   1c334:	cmp	r0, #125	; 0x7d
   1c338:	bne	1d714 <main@@Base+0xa41c>
   1c33c:	ldr	r6, [sp, #44]	; 0x2c
   1c340:	ldr	sl, [sp, #36]	; 0x24
   1c344:	add	r1, r2, #1
   1c348:	sub	r0, r6, r1
   1c34c:	cmp	r0, #2
   1c350:	blt	1d930 <main@@Base+0xa638>
   1c354:	ldrb	r0, [r1]
   1c358:	cmp	r0, #32
   1c35c:	bls	1d914 <main@@Base+0xa61c>
   1c360:	ldr	r6, [sp, #44]	; 0x2c
   1c364:	ldr	sl, [sp, #36]	; 0x24
   1c368:	mov	r4, r1
   1c36c:	ldr	r0, [sl, #24]
   1c370:	cmp	r0, #0
   1c374:	bne	18c6c <main@@Base+0x5974>
   1c378:	ldr	r0, [sl]
   1c37c:	bl	2d734 <flatcc_builder_end_table@@Base>
   1c380:	cmp	r0, #0
   1c384:	str	r0, [sp, #52]	; 0x34
   1c388:	bne	18c90 <main@@Base+0x5998>
   1c38c:	b	18c6c <main@@Base+0x5974>
   1c390:	cmp	r0, #93	; 0x5d
   1c394:	bne	1d730 <main@@Base+0xa438>
   1c398:	ldr	r6, [sp, #44]	; 0x2c
   1c39c:	ldr	sl, [sp, #36]	; 0x24
   1c3a0:	add	r1, r2, #1
   1c3a4:	sub	r0, r6, r1
   1c3a8:	cmp	r0, #2
   1c3ac:	blt	1d98c <main@@Base+0xa694>
   1c3b0:	ldrb	r0, [r1]
   1c3b4:	cmp	r0, #32
   1c3b8:	bls	1d970 <main@@Base+0xa678>
   1c3bc:	ldr	r6, [sp, #44]	; 0x2c
   1c3c0:	ldr	sl, [sp, #36]	; 0x24
   1c3c4:	mov	r4, r1
   1c3c8:	b	1a210 <main@@Base+0x6f18>
   1c3cc:	mov	r4, r6
   1c3d0:	b	1d9bc <main@@Base+0xa6c4>
   1c3d4:	mov	r0, sl
   1c3d8:	mov	r1, r6
   1c3dc:	b	1d724 <main@@Base+0xa42c>
   1c3e0:	mov	r0, sl
   1c3e4:	mov	r1, r6
   1c3e8:	b	1d740 <main@@Base+0xa448>
   1c3ec:	cmp	r0, #93	; 0x5d
   1c3f0:	bne	1d74c <main@@Base+0xa454>
   1c3f4:	ldr	r0, [sp, #44]	; 0x2c
   1c3f8:	add	r1, r4, #1
   1c3fc:	sub	r0, r0, r1
   1c400:	cmp	r0, #2
   1c404:	blt	1d9ac <main@@Base+0xa6b4>
   1c408:	b	1c434 <main@@Base+0x913c>
   1c40c:	mov	r0, sl
   1c410:	mov	r1, r6
   1c414:	mov	r2, r6
   1c418:	b	1d758 <main@@Base+0xa460>
   1c41c:	mov	r4, r6
   1c420:	b	1a5ec <main@@Base+0x72f4>
   1c424:	add	r1, r4, #1
   1c428:	sub	r0, r6, r1
   1c42c:	cmp	r0, #2
   1c430:	blt	1d9ac <main@@Base+0xa6b4>
   1c434:	ldrb	r0, [r1]
   1c438:	cmp	r0, #32
   1c43c:	bls	1d99c <main@@Base+0xa6a4>
   1c440:	mov	r4, r1
   1c444:	b	1d9bc <main@@Base+0xa6c4>
   1c448:	cmp	r0, #93	; 0x5d
   1c44c:	bne	1d7f8 <main@@Base+0xa500>
   1c450:	ldr	r6, [sp, #44]	; 0x2c
   1c454:	ldr	sl, [sp, #36]	; 0x24
   1c458:	add	r1, r2, #1
   1c45c:	sub	r0, r6, r1
   1c460:	cmp	r0, #2
   1c464:	blt	1da3c <main@@Base+0xa744>
   1c468:	ldrb	r0, [r1]
   1c46c:	cmp	r0, #32
   1c470:	bls	1da20 <main@@Base+0xa728>
   1c474:	ldr	r6, [sp, #44]	; 0x2c
   1c478:	ldr	sl, [sp, #36]	; 0x24
   1c47c:	mov	r4, r1
   1c480:	b	1a5ec <main@@Base+0x72f4>
   1c484:	ldr	sl, [sp, #36]	; 0x24
   1c488:	ldr	r6, [sp, #44]	; 0x2c
   1c48c:	mov	r1, r2
   1c490:	mov	r0, sl
   1c494:	mov	r2, r6
   1c498:	mov	r3, #9
   1c49c:	b	18d48 <main@@Base+0x5a50>
   1c4a0:	mov	r4, r6
   1c4a4:	b	1da7c <main@@Base+0xa784>
   1c4a8:	mov	r0, sl
   1c4ac:	mov	r1, r6
   1c4b0:	b	1d808 <main@@Base+0xa510>
   1c4b4:	cmp	r0, #93	; 0x5d
   1c4b8:	bne	1d820 <main@@Base+0xa528>
   1c4bc:	ldr	r0, [sp, #44]	; 0x2c
   1c4c0:	add	r1, r4, #1
   1c4c4:	sub	r0, r0, r1
   1c4c8:	cmp	r0, #2
   1c4cc:	blt	1da6c <main@@Base+0xa774>
   1c4d0:	b	1c798 <main@@Base+0x94a0>
   1c4d4:	bne	1c4e4 <main@@Base+0x91ec>
   1c4d8:	ldrb	r0, [r8, #2]!
   1c4dc:	cmp	r0, #32
   1c4e0:	bhi	1c4f4 <main@@Base+0x91fc>
   1c4e4:	ldr	r0, [sp, #36]	; 0x24
   1c4e8:	ldr	r2, [sp, #44]	; 0x2c
   1c4ec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c4f0:	mov	r8, r0
   1c4f4:	ldr	r7, [sp, #44]	; 0x2c
   1c4f8:	cmp	r8, r7
   1c4fc:	beq	1c558 <main@@Base+0x9260>
   1c500:	ldrb	r0, [r8]
   1c504:	cmp	r0, #93	; 0x5d
   1c508:	bne	1c554 <main@@Base+0x925c>
   1c50c:	ldr	r0, [sp, #44]	; 0x2c
   1c510:	ldr	sl, [sp, #36]	; 0x24
   1c514:	add	r1, r8, #1
   1c518:	sub	r0, r0, r1
   1c51c:	cmp	r0, #2
   1c520:	blt	1c544 <main@@Base+0x924c>
   1c524:	ldrb	r0, [r1]
   1c528:	cmp	r0, #32
   1c52c:	bhi	1d8c0 <main@@Base+0xa5c8>
   1c530:	ldr	sl, [sp, #36]	; 0x24
   1c534:	bne	1c544 <main@@Base+0x924c>
   1c538:	ldrb	r0, [r8, #2]!
   1c53c:	cmp	r0, #32
   1c540:	bhi	1bed4 <main@@Base+0x8bdc>
   1c544:	ldr	r2, [sp, #44]	; 0x2c
   1c548:	mov	r0, sl
   1c54c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c550:	b	1bed0 <main@@Base+0x8bd8>
   1c554:	mov	r7, r8
   1c558:	mov	r0, #0
   1c55c:	mov	r1, #1
   1c560:	str	r0, [fp, #-52]	; 0xffffffcc
   1c564:	str	r0, [fp, #-56]	; 0xffffffc8
   1c568:	ldr	r0, [sp, #36]	; 0x24
   1c56c:	ldr	r0, [r0]
   1c570:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1c574:	cmp	r0, #0
   1c578:	beq	1dd04 <main@@Base+0xaa0c>
   1c57c:	ldr	r6, [sp, #44]	; 0x2c
   1c580:	ldr	sl, [sp, #36]	; 0x24
   1c584:	mov	r4, r0
   1c588:	mov	r8, r7
   1c58c:	mov	r0, sl
   1c590:	mov	r1, r8
   1c594:	mov	r2, r6
   1c598:	sub	r3, fp, #56	; 0x38
   1c59c:	bl	31878 <flatcc_json_parser_double@@Base>
   1c5a0:	mov	r7, r0
   1c5a4:	cmp	r8, r0
   1c5a8:	bne	1c5ec <main@@Base+0x92f4>
   1c5ac:	sub	r0, fp, #56	; 0x38
   1c5b0:	mov	r1, r8
   1c5b4:	mov	r2, r6
   1c5b8:	str	r0, [sp]
   1c5bc:	movw	r0, #33032	; 0x8108
   1c5c0:	movt	r0, #4
   1c5c4:	add	r3, r0, #96	; 0x60
   1c5c8:	mov	r0, sl
   1c5cc:	bl	24820 <main@@Base+0x11528>
   1c5d0:	mov	r7, r0
   1c5d4:	cmp	r0, r8
   1c5d8:	beq	1dd04 <main@@Base+0xaa0c>
   1c5dc:	ldr	r6, [sp, #44]	; 0x2c
   1c5e0:	ldr	sl, [sp, #36]	; 0x24
   1c5e4:	cmp	r7, r6
   1c5e8:	beq	1dc64 <main@@Base+0xa96c>
   1c5ec:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1c5f0:	sub	r0, r6, r7
   1c5f4:	cmp	r0, #2
   1c5f8:	vstr	d16, [r4]
   1c5fc:	blt	1c63c <main@@Base+0x9344>
   1c600:	ldrb	r0, [r7]
   1c604:	cmp	r0, #32
   1c608:	bls	1c620 <main@@Base+0x9328>
   1c60c:	ldr	r6, [sp, #44]	; 0x2c
   1c610:	mov	r8, r7
   1c614:	cmp	r8, r6
   1c618:	bne	1c658 <main@@Base+0x9360>
   1c61c:	b	1d814 <main@@Base+0xa51c>
   1c620:	ldr	r6, [sp, #44]	; 0x2c
   1c624:	ldr	sl, [sp, #36]	; 0x24
   1c628:	bne	1c63c <main@@Base+0x9344>
   1c62c:	mov	r8, r7
   1c630:	ldrb	r0, [r8, #1]!
   1c634:	cmp	r0, #32
   1c638:	bhi	1c650 <main@@Base+0x9358>
   1c63c:	mov	r0, sl
   1c640:	mov	r1, r7
   1c644:	mov	r2, r6
   1c648:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c64c:	mov	r8, r0
   1c650:	cmp	r8, r6
   1c654:	beq	1d814 <main@@Base+0xa51c>
   1c658:	ldrb	r0, [r8]
   1c65c:	cmp	r0, #44	; 0x2c
   1c660:	bne	1d838 <main@@Base+0xa540>
   1c664:	ldr	r4, [sp, #44]	; 0x2c
   1c668:	add	r1, r8, #1
   1c66c:	sub	r0, r4, r1
   1c670:	cmp	r0, #2
   1c674:	ldr	r0, [sp, #36]	; 0x24
   1c678:	blt	1c6b4 <main@@Base+0x93bc>
   1c67c:	ldrb	r0, [r1]
   1c680:	cmp	r0, #32
   1c684:	bls	1c69c <main@@Base+0x93a4>
   1c688:	ldr	r4, [sp, #44]	; 0x2c
   1c68c:	mov	r8, r1
   1c690:	cmp	r8, r4
   1c694:	bne	1c6c8 <main@@Base+0x93d0>
   1c698:	b	1d874 <main@@Base+0xa57c>
   1c69c:	ldr	r4, [sp, #44]	; 0x2c
   1c6a0:	ldr	r0, [sp, #36]	; 0x24
   1c6a4:	bne	1c6b4 <main@@Base+0x93bc>
   1c6a8:	ldrb	r2, [r8, #2]!
   1c6ac:	cmp	r2, #32
   1c6b0:	bhi	1c6c0 <main@@Base+0x93c8>
   1c6b4:	mov	r2, r4
   1c6b8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c6bc:	mov	r8, r0
   1c6c0:	cmp	r8, r4
   1c6c4:	beq	1d874 <main@@Base+0xa57c>
   1c6c8:	ldrb	r0, [r8]
   1c6cc:	cmp	r0, #93	; 0x5d
   1c6d0:	beq	1d8a0 <main@@Base+0xa5a8>
   1c6d4:	ldr	sl, [sp, #36]	; 0x24
   1c6d8:	mov	r0, #0
   1c6dc:	mov	r1, #1
   1c6e0:	str	r0, [fp, #-52]	; 0xffffffcc
   1c6e4:	str	r0, [fp, #-56]	; 0xffffffc8
   1c6e8:	ldr	r0, [sl]
   1c6ec:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1c6f0:	ldr	r6, [sp, #44]	; 0x2c
   1c6f4:	mov	r4, r0
   1c6f8:	cmp	r0, #0
   1c6fc:	mov	r7, r8
   1c700:	bne	1c58c <main@@Base+0x9294>
   1c704:	b	1dc64 <main@@Base+0xa96c>
   1c708:	mov	r4, r6
   1c70c:	ldr	r0, [sl, #24]
   1c710:	cmp	r0, #0
   1c714:	bne	193e8 <main@@Base+0x60f0>
   1c718:	b	1c770 <main@@Base+0x9478>
   1c71c:	mov	r0, sl
   1c720:	mov	r1, r6
   1c724:	mov	r2, r6
   1c728:	b	1d82c <main@@Base+0xa534>
   1c72c:	cmp	r0, #125	; 0x7d
   1c730:	bne	1d884 <main@@Base+0xa58c>
   1c734:	ldr	r6, [sp, #44]	; 0x2c
   1c738:	ldr	sl, [sp, #36]	; 0x24
   1c73c:	add	r1, r3, #1
   1c740:	sub	r0, r6, r1
   1c744:	cmp	r0, #2
   1c748:	blt	1daa4 <main@@Base+0xa7ac>
   1c74c:	ldrb	r0, [r1]
   1c750:	cmp	r0, #32
   1c754:	bls	1da88 <main@@Base+0xa790>
   1c758:	ldr	r6, [sp, #44]	; 0x2c
   1c75c:	ldr	sl, [sp, #36]	; 0x24
   1c760:	mov	r4, r1
   1c764:	ldr	r0, [sl, #24]
   1c768:	cmp	r0, #0
   1c76c:	bne	193e8 <main@@Base+0x60f0>
   1c770:	ldr	r0, [sl]
   1c774:	bl	2d734 <flatcc_builder_end_table@@Base>
   1c778:	cmp	r0, #0
   1c77c:	str	r0, [sp, #52]	; 0x34
   1c780:	bne	1940c <main@@Base+0x6114>
   1c784:	b	193e8 <main@@Base+0x60f0>
   1c788:	add	r1, r4, #1
   1c78c:	sub	r0, r6, r1
   1c790:	cmp	r0, #2
   1c794:	blt	1da6c <main@@Base+0xa774>
   1c798:	ldrb	r0, [r1]
   1c79c:	cmp	r0, #32
   1c7a0:	bls	1da5c <main@@Base+0xa764>
   1c7a4:	mov	r4, r1
   1c7a8:	b	1da7c <main@@Base+0xa784>
   1c7ac:	mov	r0, sl
   1c7b0:	mov	r1, r6
   1c7b4:	b	1d894 <main@@Base+0xa59c>
   1c7b8:	ldr	r6, [sp, #44]	; 0x2c
   1c7bc:	ldr	sl, [sp, #36]	; 0x24
   1c7c0:	bne	1c7d0 <main@@Base+0x94d8>
   1c7c4:	ldrb	r0, [r7, #2]!
   1c7c8:	cmp	r0, #32
   1c7cc:	bhi	1c7e0 <main@@Base+0x94e8>
   1c7d0:	mov	r0, sl
   1c7d4:	mov	r2, r6
   1c7d8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c7dc:	mov	r7, r0
   1c7e0:	cmp	r4, r7
   1c7e4:	beq	1c958 <main@@Base+0x9660>
   1c7e8:	mov	r0, r6
   1c7ec:	mov	r6, #0
   1c7f0:	cmp	r7, r0
   1c7f4:	str	r6, [fp, #-52]	; 0xffffffcc
   1c7f8:	str	r6, [fp, #-56]	; 0xffffffc8
   1c7fc:	str	r6, [fp, #-60]	; 0xffffffc4
   1c800:	str	r6, [sp, #56]	; 0x38
   1c804:	beq	1c85c <main@@Base+0x9564>
   1c808:	sub	r0, fp, #56	; 0x38
   1c80c:	ldr	r2, [sp, #44]	; 0x2c
   1c810:	mov	r1, r7
   1c814:	add	r3, sp, #56	; 0x38
   1c818:	str	r0, [sp]
   1c81c:	ldr	r0, [sp, #36]	; 0x24
   1c820:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1c824:	cmp	r0, r7
   1c828:	beq	1c86c <main@@Base+0x9574>
   1c82c:	mov	r1, r0
   1c830:	ldr	r0, [sp, #56]	; 0x38
   1c834:	cmp	r0, #0
   1c838:	beq	1c87c <main@@Base+0x9584>
   1c83c:	ldr	r0, [sp, #36]	; 0x24
   1c840:	ldr	r2, [sp, #44]	; 0x2c
   1c844:	mov	r3, #8
   1c848:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1c84c:	mov	r4, r0
   1c850:	cmp	r7, r4
   1c854:	bne	1d7b4 <main@@Base+0xa4bc>
   1c858:	b	1d778 <main@@Base+0xa480>
   1c85c:	ldr	r4, [sp, #44]	; 0x2c
   1c860:	cmp	r7, r4
   1c864:	bne	1d7b4 <main@@Base+0xa4bc>
   1c868:	b	1d778 <main@@Base+0xa480>
   1c86c:	mov	r4, r7
   1c870:	cmp	r7, r4
   1c874:	bne	1d7b4 <main@@Base+0xa4bc>
   1c878:	b	1d778 <main@@Base+0xa480>
   1c87c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c880:	cmp	r0, #0
   1c884:	beq	1d764 <main@@Base+0xa46c>
   1c888:	ldr	r0, [sp, #36]	; 0x24
   1c88c:	ldr	r2, [sp, #44]	; 0x2c
   1c890:	mov	r3, #7
   1c894:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1c898:	mov	r4, r0
   1c89c:	cmp	r7, r4
   1c8a0:	bne	1d7b4 <main@@Base+0xa4bc>
   1c8a4:	b	1d778 <main@@Base+0xa480>
   1c8a8:	ldr	r6, [sp, #44]	; 0x2c
   1c8ac:	ldr	sl, [sp, #36]	; 0x24
   1c8b0:	bne	1c8c0 <main@@Base+0x95c8>
   1c8b4:	ldrb	r0, [r7, #2]!
   1c8b8:	cmp	r0, #32
   1c8bc:	bhi	1c8d0 <main@@Base+0x95d8>
   1c8c0:	mov	r0, sl
   1c8c4:	mov	r2, r6
   1c8c8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1c8cc:	mov	r7, r0
   1c8d0:	cmp	r4, r7
   1c8d4:	beq	1c958 <main@@Base+0x9660>
   1c8d8:	mov	r0, r6
   1c8dc:	mov	r6, #0
   1c8e0:	cmp	r7, r0
   1c8e4:	str	r6, [fp, #-52]	; 0xffffffcc
   1c8e8:	str	r6, [fp, #-56]	; 0xffffffc8
   1c8ec:	str	r6, [sp, #60]	; 0x3c
   1c8f0:	str	r6, [sp, #56]	; 0x38
   1c8f4:	str	r6, [fp, #-60]	; 0xffffffc4
   1c8f8:	beq	1c964 <main@@Base+0x966c>
   1c8fc:	sub	r0, fp, #56	; 0x38
   1c900:	ldr	r2, [sp, #44]	; 0x2c
   1c904:	mov	r1, r7
   1c908:	sub	r3, fp, #60	; 0x3c
   1c90c:	str	r0, [sp]
   1c910:	ldr	r0, [sp, #36]	; 0x24
   1c914:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1c918:	cmp	r0, r7
   1c91c:	beq	1c978 <main@@Base+0x9680>
   1c920:	mov	r1, r0
   1c924:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c928:	cmp	r0, #0
   1c92c:	beq	1c990 <main@@Base+0x9698>
   1c930:	ldr	r0, [sp, #36]	; 0x24
   1c934:	ldr	r2, [sp, #44]	; 0x2c
   1c938:	mov	r3, #8
   1c93c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1c940:	mov	r4, r0
   1c944:	mov	r6, #0
   1c948:	mov	r5, #0
   1c94c:	cmp	r7, r4
   1c950:	bne	1c9ec <main@@Base+0x96f4>
   1c954:	b	1c9ac <main@@Base+0x96b4>
   1c958:	mov	r0, sl
   1c95c:	mov	r1, r4
   1c960:	b	16864 <main@@Base+0x356c>
   1c964:	ldr	r4, [sp, #44]	; 0x2c
   1c968:	mov	r5, #0
   1c96c:	cmp	r7, r4
   1c970:	bne	1c9ec <main@@Base+0x96f4>
   1c974:	b	1c9ac <main@@Base+0x96b4>
   1c978:	mov	r6, #0
   1c97c:	mov	r5, #0
   1c980:	mov	r4, r7
   1c984:	cmp	r7, r4
   1c988:	bne	1c9ec <main@@Base+0x96f4>
   1c98c:	b	1c9ac <main@@Base+0x96b4>
   1c990:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1c994:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c998:	mov	r4, r1
   1c99c:	str	r5, [sp, #60]	; 0x3c
   1c9a0:	str	r6, [sp, #56]	; 0x38
   1c9a4:	cmp	r7, r4
   1c9a8:	bne	1c9ec <main@@Base+0x96f4>
   1c9ac:	add	r0, sp, #56	; 0x38
   1c9b0:	ldr	r2, [sp, #44]	; 0x2c
   1c9b4:	mov	r1, r7
   1c9b8:	str	r0, [sp]
   1c9bc:	movw	r0, #33032	; 0x8108
   1c9c0:	movt	r0, #4
   1c9c4:	add	r3, r0, #72	; 0x48
   1c9c8:	ldr	r0, [sp, #36]	; 0x24
   1c9cc:	bl	245c4 <main@@Base+0x112cc>
   1c9d0:	cmp	r0, r7
   1c9d4:	mov	r4, r0
   1c9d8:	ldrne	r1, [sp, #44]	; 0x2c
   1c9dc:	cmpne	r4, r1
   1c9e0:	beq	1dc9c <main@@Base+0xa9a4>
   1c9e4:	ldr	r6, [sp, #56]	; 0x38
   1c9e8:	ldr	r5, [sp, #60]	; 0x3c
   1c9ec:	ldr	sl, [sp, #36]	; 0x24
   1c9f0:	orrs	r0, r6, r5
   1c9f4:	bne	1ca04 <main@@Base+0x970c>
   1c9f8:	ldrb	r0, [sl, #8]
   1c9fc:	tst	r0, #2
   1ca00:	beq	1d7f0 <main@@Base+0xa4f8>
   1ca04:	ldr	r0, [sl]
   1ca08:	mov	r1, #23
   1ca0c:	mov	r2, #8
   1ca10:	mov	r3, #8
   1ca14:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1ca18:	cmp	r0, #0
   1ca1c:	beq	1dc9c <main@@Base+0xa9a4>
   1ca20:	str	r6, [r0]
   1ca24:	str	r5, [r0, #4]
   1ca28:	b	1d7ec <main@@Base+0xa4f4>
   1ca2c:	bne	1ca3c <main@@Base+0x9744>
   1ca30:	ldrb	r0, [r4, #2]!
   1ca34:	cmp	r0, #32
   1ca38:	bhi	1ca4c <main@@Base+0x9754>
   1ca3c:	ldr	r0, [sp, #36]	; 0x24
   1ca40:	ldr	r2, [sp, #44]	; 0x2c
   1ca44:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ca48:	mov	r4, r0
   1ca4c:	ldr	r6, [sp, #44]	; 0x2c
   1ca50:	cmp	r4, r6
   1ca54:	beq	1ca68 <main@@Base+0x9770>
   1ca58:	ldrb	r0, [r4]
   1ca5c:	cmp	r0, #93	; 0x5d
   1ca60:	beq	1d8ec <main@@Base+0xa5f4>
   1ca64:	mov	r6, r4
   1ca68:	mov	r0, #0
   1ca6c:	mov	r1, #1
   1ca70:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ca74:	ldr	r0, [sp, #36]	; 0x24
   1ca78:	ldr	r0, [r0]
   1ca7c:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1ca80:	cmp	r0, #0
   1ca84:	beq	1dce8 <main@@Base+0xa9f0>
   1ca88:	mov	r8, r0
   1ca8c:	mov	r4, r6
   1ca90:	ldr	r5, [sp, #44]	; 0x2c
   1ca94:	mov	r6, #0
   1ca98:	str	r6, [fp, #-52]	; 0xffffffcc
   1ca9c:	str	r6, [fp, #-56]	; 0xffffffc8
   1caa0:	strb	r6, [fp, #-60]	; 0xffffffc4
   1caa4:	str	r6, [sp, #56]	; 0x38
   1caa8:	cmp	r4, r5
   1caac:	beq	1caf4 <main@@Base+0x97fc>
   1cab0:	sub	r0, fp, #56	; 0x38
   1cab4:	mov	r1, r4
   1cab8:	mov	r2, r5
   1cabc:	add	r3, sp, #56	; 0x38
   1cac0:	str	r0, [sp]
   1cac4:	ldr	r0, [sp, #36]	; 0x24
   1cac8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1cacc:	cmp	r0, r4
   1cad0:	beq	1cb08 <main@@Base+0x9810>
   1cad4:	mov	r1, r0
   1cad8:	ldr	r0, [sp, #56]	; 0x38
   1cadc:	cmp	r0, #0
   1cae0:	beq	1cb20 <main@@Base+0x9828>
   1cae4:	ldr	r7, [sp, #36]	; 0x24
   1cae8:	ldr	r5, [sp, #44]	; 0x2c
   1caec:	mov	r3, #8
   1caf0:	b	1cb40 <main@@Base+0x9848>
   1caf4:	mov	r1, r5
   1caf8:	ldr	r7, [sp, #36]	; 0x24
   1cafc:	cmp	r4, r1
   1cb00:	bne	1cba0 <main@@Base+0x98a8>
   1cb04:	b	1cb58 <main@@Base+0x9860>
   1cb08:	mov	r1, r4
   1cb0c:	ldr	r5, [sp, #44]	; 0x2c
   1cb10:	ldr	r7, [sp, #36]	; 0x24
   1cb14:	cmp	r4, r1
   1cb18:	bne	1cba0 <main@@Base+0x98a8>
   1cb1c:	b	1cb58 <main@@Base+0x9860>
   1cb20:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cb24:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cb28:	subs	r3, r0, #256	; 0x100
   1cb2c:	sbcs	r2, r2, #0
   1cb30:	bcc	1cca8 <main@@Base+0x99b0>
   1cb34:	ldr	r7, [sp, #36]	; 0x24
   1cb38:	ldr	r5, [sp, #44]	; 0x2c
   1cb3c:	mov	r3, #7
   1cb40:	mov	r0, r7
   1cb44:	mov	r2, r5
   1cb48:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1cb4c:	mov	r1, r0
   1cb50:	cmp	r4, r1
   1cb54:	bne	1cba0 <main@@Base+0x98a8>
   1cb58:	sub	r0, fp, #60	; 0x3c
   1cb5c:	mov	r1, r4
   1cb60:	mov	r2, r5
   1cb64:	str	r0, [sp]
   1cb68:	movw	r0, #33032	; 0x8108
   1cb6c:	movt	r0, #4
   1cb70:	add	r3, r0, #84	; 0x54
   1cb74:	mov	r0, r7
   1cb78:	bl	1f464 <main@@Base+0xc16c>
   1cb7c:	mov	r1, r0
   1cb80:	cmp	r0, r4
   1cb84:	beq	1dd14 <main@@Base+0xaa1c>
   1cb88:	ldr	r0, [sp, #44]	; 0x2c
   1cb8c:	cmp	r1, r0
   1cb90:	beq	1dd14 <main@@Base+0xaa1c>
   1cb94:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1cb98:	ldr	r5, [sp, #44]	; 0x2c
   1cb9c:	ldr	r7, [sp, #36]	; 0x24
   1cba0:	sub	r0, r5, r1
   1cba4:	strb	r6, [r8]
   1cba8:	cmp	r0, #2
   1cbac:	blt	1cbec <main@@Base+0x98f4>
   1cbb0:	ldrb	r0, [r1]
   1cbb4:	cmp	r0, #32
   1cbb8:	bls	1cbd0 <main@@Base+0x98d8>
   1cbbc:	ldr	r5, [sp, #44]	; 0x2c
   1cbc0:	mov	r4, r1
   1cbc4:	cmp	r4, r5
   1cbc8:	bne	1cc04 <main@@Base+0x990c>
   1cbcc:	b	1d8dc <main@@Base+0xa5e4>
   1cbd0:	ldr	r5, [sp, #44]	; 0x2c
   1cbd4:	ldr	r7, [sp, #36]	; 0x24
   1cbd8:	bne	1cbec <main@@Base+0x98f4>
   1cbdc:	mov	r4, r1
   1cbe0:	ldrb	r0, [r4, #1]!
   1cbe4:	cmp	r0, #32
   1cbe8:	bhi	1cbfc <main@@Base+0x9904>
   1cbec:	mov	r0, r7
   1cbf0:	mov	r2, r5
   1cbf4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1cbf8:	mov	r4, r0
   1cbfc:	cmp	r4, r5
   1cc00:	beq	1d8dc <main@@Base+0xa5e4>
   1cc04:	ldrb	r0, [r4]
   1cc08:	cmp	r0, #44	; 0x2c
   1cc0c:	bne	1d8e4 <main@@Base+0xa5ec>
   1cc10:	ldr	r5, [sp, #44]	; 0x2c
   1cc14:	add	r1, r4, #1
   1cc18:	sub	r0, r5, r1
   1cc1c:	cmp	r0, #2
   1cc20:	ldr	r0, [sp, #36]	; 0x24
   1cc24:	blt	1cc60 <main@@Base+0x9968>
   1cc28:	ldrb	r0, [r1]
   1cc2c:	cmp	r0, #32
   1cc30:	bls	1cc48 <main@@Base+0x9950>
   1cc34:	ldr	r5, [sp, #44]	; 0x2c
   1cc38:	mov	r4, r1
   1cc3c:	cmp	r4, r5
   1cc40:	bne	1cc74 <main@@Base+0x997c>
   1cc44:	b	1d940 <main@@Base+0xa648>
   1cc48:	ldr	r5, [sp, #44]	; 0x2c
   1cc4c:	ldr	r0, [sp, #36]	; 0x24
   1cc50:	bne	1cc60 <main@@Base+0x9968>
   1cc54:	ldrb	r2, [r4, #2]!
   1cc58:	cmp	r2, #32
   1cc5c:	bhi	1cc6c <main@@Base+0x9974>
   1cc60:	mov	r2, r5
   1cc64:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1cc68:	mov	r4, r0
   1cc6c:	cmp	r4, r5
   1cc70:	beq	1d940 <main@@Base+0xa648>
   1cc74:	ldrb	r0, [r4]
   1cc78:	cmp	r0, #93	; 0x5d
   1cc7c:	beq	1d8ec <main@@Base+0xa5f4>
   1cc80:	mov	r0, #0
   1cc84:	mov	r1, #1
   1cc88:	strb	r0, [fp, #-60]	; 0xffffffc4
   1cc8c:	ldr	r0, [sp, #36]	; 0x24
   1cc90:	ldr	r0, [r0]
   1cc94:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   1cc98:	mov	r8, r0
   1cc9c:	cmp	r0, #0
   1cca0:	bne	1ca90 <main@@Base+0x9798>
   1cca4:	b	1dc9c <main@@Base+0xa9a4>
   1cca8:	mov	r6, r0
   1ccac:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ccb0:	ldr	r5, [sp, #44]	; 0x2c
   1ccb4:	ldr	r7, [sp, #36]	; 0x24
   1ccb8:	cmp	r4, r1
   1ccbc:	bne	1cba0 <main@@Base+0x98a8>
   1ccc0:	b	1cb58 <main@@Base+0x9860>
   1ccc4:	ldr	r6, [sp, #44]	; 0x2c
   1ccc8:	ldr	sl, [sp, #36]	; 0x24
   1cccc:	b	18c6c <main@@Base+0x5974>
   1ccd0:	bne	1cce0 <main@@Base+0x99e8>
   1ccd4:	ldrb	r0, [r4, #2]!
   1ccd8:	cmp	r0, #32
   1ccdc:	bhi	1ccf0 <main@@Base+0x99f8>
   1cce0:	ldr	r0, [sp, #36]	; 0x24
   1cce4:	ldr	r2, [sp, #44]	; 0x2c
   1cce8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ccec:	mov	r4, r0
   1ccf0:	ldr	r2, [sp, #44]	; 0x2c
   1ccf4:	cmp	r4, r2
   1ccf8:	beq	1cd48 <main@@Base+0x9a50>
   1ccfc:	ldrb	r0, [r4]
   1cd00:	cmp	r0, #125	; 0x7d
   1cd04:	bne	1cd44 <main@@Base+0x9a4c>
   1cd08:	ldr	r0, [sp, #44]	; 0x2c
   1cd0c:	ldr	sl, [sp, #36]	; 0x24
   1cd10:	add	r1, r4, #1
   1cd14:	sub	r0, r0, r1
   1cd18:	cmp	r0, #2
   1cd1c:	blt	1db54 <main@@Base+0xa85c>
   1cd20:	ldrb	r0, [r1]
   1cd24:	cmp	r0, #32
   1cd28:	bhi	1da08 <main@@Base+0xa710>
   1cd2c:	ldr	sl, [sp, #36]	; 0x24
   1cd30:	bne	1db54 <main@@Base+0xa85c>
   1cd34:	ldrb	r0, [r4, #2]!
   1cd38:	cmp	r0, #32
   1cd3c:	bhi	1a6c4 <main@@Base+0x73cc>
   1cd40:	b	1db54 <main@@Base+0xa85c>
   1cd44:	mov	r2, r4
   1cd48:	ldr	r5, [sp, #44]	; 0x2c
   1cd4c:	cmp	r2, r5
   1cd50:	mov	r8, r5
   1cd54:	beq	1cdb0 <main@@Base+0x9ab8>
   1cd58:	ldrb	r0, [r2]
   1cd5c:	cmp	r0, #46	; 0x2e
   1cd60:	beq	1cd7c <main@@Base+0x9a84>
   1cd64:	cmp	r0, #34	; 0x22
   1cd68:	bne	1cd9c <main@@Base+0x9aa4>
   1cd6c:	ldr	r0, [sp, #32]
   1cd70:	mov	r1, #0
   1cd74:	add	r8, r2, #1
   1cd78:	b	1cda8 <main@@Base+0x9ab0>
   1cd7c:	ldr	r5, [sp, #44]	; 0x2c
   1cd80:	ldr	r0, [sp, #36]	; 0x24
   1cd84:	mov	r1, r2
   1cd88:	mov	r3, #5
   1cd8c:	mov	r2, r5
   1cd90:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1cd94:	mov	r8, r0
   1cd98:	b	1cdb0 <main@@Base+0x9ab8>
   1cd9c:	ldr	r0, [sp, #32]
   1cda0:	mov	r1, #1
   1cda4:	mov	r8, r2
   1cda8:	str	r1, [r0]
   1cdac:	ldr	r5, [sp, #44]	; 0x2c
   1cdb0:	sub	lr, r5, r8
   1cdb4:	mov	r0, #8
   1cdb8:	cmp	lr, #8
   1cdbc:	movcc	r0, lr
   1cdc0:	sub	r7, r0, #1
   1cdc4:	cmp	r7, #7
   1cdc8:	bhi	1d5b8 <main@@Base+0xa2c0>
   1cdcc:	add	r4, pc, #32
   1cdd0:	mov	r1, #0
   1cdd4:	mov	ip, #0
   1cdd8:	mov	r9, #0
   1cddc:	mov	r6, #0
   1cde0:	mov	r3, #0
   1cde4:	mov	r5, #0
   1cde8:	mov	r2, #0
   1cdec:	mov	r0, #0
   1cdf0:	ldr	pc, [r4, r7, lsl #2]
   1cdf4:	andeq	ip, r1, r8, asr lr
   1cdf8:	andeq	ip, r1, r0, asr lr
   1cdfc:	andeq	ip, r1, r8, asr #28
   1ce00:	andeq	ip, r1, r0, asr #28
   1ce04:	andeq	ip, r1, r4, lsr lr
   1ce08:	andeq	ip, r1, r8, lsr #28
   1ce0c:	andeq	ip, r1, r8, lsl lr
   1ce10:	andeq	ip, r1, r4, lsl lr
   1ce14:	ldrb	ip, [r8, #7]
   1ce18:	ldrb	r0, [r8, #6]
   1ce1c:	mov	r9, r1
   1ce20:	orr	r0, ip, r0, lsl #8
   1ce24:	mov	r1, r0
   1ce28:	ldrb	r0, [r8, #5]
   1ce2c:	mov	r6, r9
   1ce30:	orr	r1, r1, r0, lsl #16
   1ce34:	ldrb	r0, [r8, #4]
   1ce38:	mov	r3, r6
   1ce3c:	orr	r1, r1, r0, lsl #24
   1ce40:	ldrb	r0, [r8, #3]
   1ce44:	orr	r5, r0, r3
   1ce48:	ldrb	r0, [r8, #2]
   1ce4c:	orr	r2, r5, r0, lsl #8
   1ce50:	ldrb	r0, [r8, #1]
   1ce54:	orr	r0, r2, r0, lsl #16
   1ce58:	ldrb	r2, [r8]
   1ce5c:	orr	r2, r0, r2, lsl #24
   1ce60:	movw	r0, #65535	; 0xffff
   1ce64:	movt	r0, #26979	; 0x6963
   1ce68:	cmp	r2, r0
   1ce6c:	bhi	1cee4 <main@@Base+0x9bec>
   1ce70:	movw	r0, #30062	; 0x756e
   1ce74:	and	r1, r1, #-16777216	; 0xff000000
   1ce78:	movt	r0, #25455	; 0x636f
   1ce7c:	eor	r1, r1, #1946157056	; 0x74000000
   1ce80:	eor	r0, r2, r0
   1ce84:	orrs	r0, r1, r0
   1ce88:	bne	1d5b8 <main@@Base+0xa2c0>
   1ce8c:	cmp	lr, #6
   1ce90:	mov	r7, r8
   1ce94:	blt	1d228 <main@@Base+0x9f30>
   1ce98:	ldr	r2, [sp, #32]
   1ce9c:	mov	r1, r8
   1cea0:	ldrb	r0, [r1, #5]!
   1cea4:	ldr	r2, [r2]
   1cea8:	cmp	r2, #0
   1ceac:	beq	1cfbc <main@@Base+0x9cc4>
   1ceb0:	cmp	r0, #33	; 0x21
   1ceb4:	bcc	1cec4 <main@@Base+0x9bcc>
   1ceb8:	cmp	r0, #58	; 0x3a
   1cebc:	mov	r7, r8
   1cec0:	bne	1d228 <main@@Base+0x9f30>
   1cec4:	ldr	r0, [sp, #32]
   1cec8:	mov	r2, #0
   1cecc:	str	r2, [r0]
   1ced0:	ldr	r0, [sp, #44]	; 0x2c
   1ced4:	sub	r0, r0, r1
   1ced8:	cmp	r0, #2
   1cedc:	bge	1cfdc <main@@Base+0x9ce4>
   1cee0:	b	1d090 <main@@Base+0x9d98>
   1cee4:	movw	r1, #27648	; 0x6c00
   1cee8:	bic	r0, r2, #255	; 0xff
   1ceec:	movt	r1, #30305	; 0x7661
   1cef0:	teq	r0, r1
   1cef4:	bne	1cf50 <main@@Base+0x9c58>
   1cef8:	cmp	lr, #4
   1cefc:	mov	r7, r8
   1cf00:	blt	1d3b0 <main@@Base+0xa0b8>
   1cf04:	ldr	r2, [sp, #32]
   1cf08:	mov	r1, r8
   1cf0c:	ldrb	r0, [r1, #3]!
   1cf10:	ldr	r2, [r2]
   1cf14:	cmp	r2, #0
   1cf18:	beq	1cffc <main@@Base+0x9d04>
   1cf1c:	cmp	r0, #33	; 0x21
   1cf20:	bcc	1cf30 <main@@Base+0x9c38>
   1cf24:	cmp	r0, #58	; 0x3a
   1cf28:	mov	r7, r8
   1cf2c:	bne	1d3b0 <main@@Base+0xa0b8>
   1cf30:	ldr	r0, [sp, #32]
   1cf34:	mov	r2, #0
   1cf38:	str	r2, [r0]
   1cf3c:	ldr	r0, [sp, #44]	; 0x2c
   1cf40:	sub	r0, r0, r1
   1cf44:	cmp	r0, #2
   1cf48:	bge	1d01c <main@@Base+0x9d24>
   1cf4c:	b	1d114 <main@@Base+0x9e1c>
   1cf50:	movw	r0, #0
   1cf54:	bfc	r2, #0, #16
   1cf58:	movt	r0, #26980	; 0x6964
   1cf5c:	teq	r2, r0
   1cf60:	bne	1d5b8 <main@@Base+0xa2c0>
   1cf64:	cmp	lr, #3
   1cf68:	mov	r1, r8
   1cf6c:	blt	1d558 <main@@Base+0xa260>
   1cf70:	ldr	r1, [sp, #32]
   1cf74:	mov	r2, r8
   1cf78:	ldrb	r0, [r2, #2]!
   1cf7c:	ldr	r1, [r1]
   1cf80:	cmp	r1, #0
   1cf84:	beq	1d03c <main@@Base+0x9d44>
   1cf88:	cmp	r0, #33	; 0x21
   1cf8c:	bcc	1cf9c <main@@Base+0x9ca4>
   1cf90:	cmp	r0, #58	; 0x3a
   1cf94:	mov	r1, r8
   1cf98:	bne	1d558 <main@@Base+0xa260>
   1cf9c:	ldr	r0, [sp, #32]
   1cfa0:	mov	r1, #0
   1cfa4:	str	r1, [r0]
   1cfa8:	ldr	r0, [sp, #44]	; 0x2c
   1cfac:	sub	r0, r0, r2
   1cfb0:	cmp	r0, #2
   1cfb4:	bge	1d05c <main@@Base+0x9d64>
   1cfb8:	b	1d198 <main@@Base+0x9ea0>
   1cfbc:	cmp	r0, #34	; 0x22
   1cfc0:	mov	r7, r8
   1cfc4:	bne	1d228 <main@@Base+0x9f30>
   1cfc8:	add	r1, r8, #6
   1cfcc:	ldr	r0, [sp, #44]	; 0x2c
   1cfd0:	sub	r0, r0, r1
   1cfd4:	cmp	r0, #2
   1cfd8:	blt	1d090 <main@@Base+0x9d98>
   1cfdc:	ldrb	r0, [r1]
   1cfe0:	cmp	r0, #32
   1cfe4:	bls	1d07c <main@@Base+0x9d84>
   1cfe8:	mov	r7, r1
   1cfec:	ldr	r0, [sp, #44]	; 0x2c
   1cff0:	cmp	r7, r0
   1cff4:	bne	1d0ac <main@@Base+0x9db4>
   1cff8:	b	1d0e8 <main@@Base+0x9df0>
   1cffc:	cmp	r0, #34	; 0x22
   1d000:	mov	r7, r8
   1d004:	bne	1d3b0 <main@@Base+0xa0b8>
   1d008:	add	r1, r8, #4
   1d00c:	ldr	r0, [sp, #44]	; 0x2c
   1d010:	sub	r0, r0, r1
   1d014:	cmp	r0, #2
   1d018:	blt	1d114 <main@@Base+0x9e1c>
   1d01c:	ldrb	r0, [r1]
   1d020:	cmp	r0, #32
   1d024:	bls	1d100 <main@@Base+0x9e08>
   1d028:	mov	r7, r1
   1d02c:	ldr	r0, [sp, #44]	; 0x2c
   1d030:	cmp	r7, r0
   1d034:	bne	1d130 <main@@Base+0x9e38>
   1d038:	b	1d16c <main@@Base+0x9e74>
   1d03c:	cmp	r0, #34	; 0x22
   1d040:	mov	r1, r8
   1d044:	bne	1d558 <main@@Base+0xa260>
   1d048:	add	r2, r8, #3
   1d04c:	ldr	r0, [sp, #44]	; 0x2c
   1d050:	sub	r0, r0, r2
   1d054:	cmp	r0, #2
   1d058:	blt	1d198 <main@@Base+0x9ea0>
   1d05c:	ldrb	r0, [r2]
   1d060:	cmp	r0, #32
   1d064:	bls	1d184 <main@@Base+0x9e8c>
   1d068:	mov	r1, r2
   1d06c:	ldr	r0, [sp, #44]	; 0x2c
   1d070:	cmp	r1, r0
   1d074:	bne	1d1b8 <main@@Base+0x9ec0>
   1d078:	b	1d1f4 <main@@Base+0x9efc>
   1d07c:	bne	1d090 <main@@Base+0x9d98>
   1d080:	mov	r7, r1
   1d084:	ldrb	r0, [r7, #1]!
   1d088:	cmp	r0, #32
   1d08c:	bhi	1d0a0 <main@@Base+0x9da8>
   1d090:	ldr	r0, [sp, #36]	; 0x24
   1d094:	ldr	r2, [sp, #44]	; 0x2c
   1d098:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d09c:	mov	r7, r0
   1d0a0:	ldr	r0, [sp, #44]	; 0x2c
   1d0a4:	cmp	r7, r0
   1d0a8:	beq	1d0e8 <main@@Base+0x9df0>
   1d0ac:	ldrb	r0, [r7]
   1d0b0:	cmp	r0, #58	; 0x3a
   1d0b4:	bne	1d0e8 <main@@Base+0x9df0>
   1d0b8:	ldr	r0, [sp, #44]	; 0x2c
   1d0bc:	add	r1, r7, #1
   1d0c0:	sub	r0, r0, r1
   1d0c4:	cmp	r0, #2
   1d0c8:	blt	1d218 <main@@Base+0x9f20>
   1d0cc:	ldrb	r0, [r1]
   1d0d0:	cmp	r0, #32
   1d0d4:	bls	1d208 <main@@Base+0x9f10>
   1d0d8:	mov	r7, r1
   1d0dc:	cmp	r8, r7
   1d0e0:	bne	1d230 <main@@Base+0x9f38>
   1d0e4:	b	1d5b8 <main@@Base+0xa2c0>
   1d0e8:	ldr	r0, [sp, #36]	; 0x24
   1d0ec:	ldr	r2, [sp, #44]	; 0x2c
   1d0f0:	mov	r1, r7
   1d0f4:	mov	r3, #4
   1d0f8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d0fc:	b	1d224 <main@@Base+0x9f2c>
   1d100:	bne	1d114 <main@@Base+0x9e1c>
   1d104:	mov	r7, r1
   1d108:	ldrb	r0, [r7, #1]!
   1d10c:	cmp	r0, #32
   1d110:	bhi	1d124 <main@@Base+0x9e2c>
   1d114:	ldr	r0, [sp, #36]	; 0x24
   1d118:	ldr	r2, [sp, #44]	; 0x2c
   1d11c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d120:	mov	r7, r0
   1d124:	ldr	r0, [sp, #44]	; 0x2c
   1d128:	cmp	r7, r0
   1d12c:	beq	1d16c <main@@Base+0x9e74>
   1d130:	ldrb	r0, [r7]
   1d134:	cmp	r0, #58	; 0x3a
   1d138:	bne	1d16c <main@@Base+0x9e74>
   1d13c:	ldr	r0, [sp, #44]	; 0x2c
   1d140:	add	r1, r7, #1
   1d144:	sub	r0, r0, r1
   1d148:	cmp	r0, #2
   1d14c:	blt	1d3a0 <main@@Base+0xa0a8>
   1d150:	ldrb	r0, [r1]
   1d154:	cmp	r0, #32
   1d158:	bls	1d390 <main@@Base+0xa098>
   1d15c:	mov	r7, r1
   1d160:	cmp	r8, r7
   1d164:	bne	1d3b8 <main@@Base+0xa0c0>
   1d168:	b	1d5b8 <main@@Base+0xa2c0>
   1d16c:	ldr	r0, [sp, #36]	; 0x24
   1d170:	ldr	r2, [sp, #44]	; 0x2c
   1d174:	mov	r1, r7
   1d178:	mov	r3, #4
   1d17c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d180:	b	1d3ac <main@@Base+0xa0b4>
   1d184:	bne	1d198 <main@@Base+0x9ea0>
   1d188:	mov	r1, r2
   1d18c:	ldrb	r0, [r1, #1]!
   1d190:	cmp	r0, #32
   1d194:	bhi	1d1ac <main@@Base+0x9eb4>
   1d198:	mov	r1, r2
   1d19c:	ldr	r0, [sp, #36]	; 0x24
   1d1a0:	ldr	r2, [sp, #44]	; 0x2c
   1d1a4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d1a8:	mov	r1, r0
   1d1ac:	ldr	r0, [sp, #44]	; 0x2c
   1d1b0:	cmp	r1, r0
   1d1b4:	beq	1d1f4 <main@@Base+0x9efc>
   1d1b8:	ldrb	r0, [r1]
   1d1bc:	cmp	r0, #58	; 0x3a
   1d1c0:	bne	1d1f4 <main@@Base+0x9efc>
   1d1c4:	ldr	r0, [sp, #44]	; 0x2c
   1d1c8:	add	r2, r1, #1
   1d1cc:	sub	r0, r0, r2
   1d1d0:	cmp	r0, #2
   1d1d4:	blt	1d544 <main@@Base+0xa24c>
   1d1d8:	ldrb	r0, [r2]
   1d1dc:	cmp	r0, #32
   1d1e0:	bls	1d534 <main@@Base+0xa23c>
   1d1e4:	mov	r1, r2
   1d1e8:	cmp	r8, r1
   1d1ec:	bne	1d560 <main@@Base+0xa268>
   1d1f0:	b	1d5b8 <main@@Base+0xa2c0>
   1d1f4:	ldr	r0, [sp, #36]	; 0x24
   1d1f8:	ldr	r2, [sp, #44]	; 0x2c
   1d1fc:	mov	r3, #4
   1d200:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d204:	b	1d554 <main@@Base+0xa25c>
   1d208:	bne	1d218 <main@@Base+0x9f20>
   1d20c:	ldrb	r0, [r7, #2]!
   1d210:	cmp	r0, #32
   1d214:	bhi	1d228 <main@@Base+0x9f30>
   1d218:	ldr	r0, [sp, #36]	; 0x24
   1d21c:	ldr	r2, [sp, #44]	; 0x2c
   1d220:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d224:	mov	r7, r0
   1d228:	cmp	r8, r7
   1d22c:	beq	1d5b8 <main@@Base+0xa2c0>
   1d230:	ldr	r0, [sp, #44]	; 0x2c
   1d234:	mov	r6, #0
   1d238:	str	r6, [fp, #-52]	; 0xffffffcc
   1d23c:	str	r6, [fp, #-56]	; 0xffffffc8
   1d240:	strh	r6, [fp, #-60]	; 0xffffffc4
   1d244:	str	r6, [sp, #56]	; 0x38
   1d248:	cmp	r7, r0
   1d24c:	beq	1d2a8 <main@@Base+0x9fb0>
   1d250:	sub	r0, fp, #56	; 0x38
   1d254:	ldr	r2, [sp, #44]	; 0x2c
   1d258:	mov	r1, r7
   1d25c:	add	r3, sp, #56	; 0x38
   1d260:	str	r0, [sp]
   1d264:	ldr	r0, [sp, #36]	; 0x24
   1d268:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1d26c:	cmp	r0, r7
   1d270:	beq	1d2b8 <main@@Base+0x9fc0>
   1d274:	mov	r4, r0
   1d278:	ldr	r0, [sp, #56]	; 0x38
   1d27c:	cmp	r0, #0
   1d280:	beq	1d2c8 <main@@Base+0x9fd0>
   1d284:	ldr	r0, [sp, #36]	; 0x24
   1d288:	ldr	r2, [sp, #44]	; 0x2c
   1d28c:	mov	r1, r4
   1d290:	mov	r3, #8
   1d294:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d298:	mov	r4, r0
   1d29c:	cmp	r7, r4
   1d2a0:	bne	1d34c <main@@Base+0xa054>
   1d2a4:	b	1d310 <main@@Base+0xa018>
   1d2a8:	ldr	r4, [sp, #44]	; 0x2c
   1d2ac:	cmp	r7, r4
   1d2b0:	bne	1d34c <main@@Base+0xa054>
   1d2b4:	b	1d310 <main@@Base+0xa018>
   1d2b8:	mov	r4, r7
   1d2bc:	cmp	r7, r4
   1d2c0:	bne	1d34c <main@@Base+0xa054>
   1d2c4:	b	1d310 <main@@Base+0xa018>
   1d2c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d2cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d2d0:	subs	r2, r0, #65536	; 0x10000
   1d2d4:	sbcs	r1, r1, #0
   1d2d8:	bcc	1d300 <main@@Base+0xa008>
   1d2dc:	ldr	r0, [sp, #36]	; 0x24
   1d2e0:	ldr	r2, [sp, #44]	; 0x2c
   1d2e4:	mov	r1, r4
   1d2e8:	mov	r3, #7
   1d2ec:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d2f0:	mov	r4, r0
   1d2f4:	cmp	r7, r4
   1d2f8:	bne	1d34c <main@@Base+0xa054>
   1d2fc:	b	1d310 <main@@Base+0xa018>
   1d300:	mov	r6, r0
   1d304:	strh	r0, [fp, #-60]	; 0xffffffc4
   1d308:	cmp	r7, r4
   1d30c:	bne	1d34c <main@@Base+0xa054>
   1d310:	sub	r0, fp, #60	; 0x3c
   1d314:	ldr	r2, [sp, #44]	; 0x2c
   1d318:	mov	r1, r7
   1d31c:	str	r0, [sp]
   1d320:	movw	r0, #33392	; 0x8270
   1d324:	movt	r0, #4
   1d328:	add	r3, r0, #24
   1d32c:	ldr	r0, [sp, #36]	; 0x24
   1d330:	bl	2a448 <main@@Base+0x17150>
   1d334:	cmp	r0, r7
   1d338:	mov	r4, r0
   1d33c:	ldrne	r0, [sp, #44]	; 0x2c
   1d340:	cmpne	r4, r0
   1d344:	beq	1db90 <main@@Base+0xa898>
   1d348:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1d34c:	movw	r0, #65535	; 0xffff
   1d350:	tst	r6, r0
   1d354:	bne	1d368 <main@@Base+0xa070>
   1d358:	ldr	r0, [sp, #36]	; 0x24
   1d35c:	ldrb	r0, [r0, #8]
   1d360:	tst	r0, #2
   1d364:	beq	1d5a0 <main@@Base+0xa2a8>
   1d368:	ldr	r0, [sp, #36]	; 0x24
   1d36c:	mov	r1, #2
   1d370:	mov	r2, #2
   1d374:	mov	r3, #2
   1d378:	ldr	r0, [r0]
   1d37c:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1d380:	cmp	r0, #0
   1d384:	beq	1db90 <main@@Base+0xa898>
   1d388:	strh	r6, [r0]
   1d38c:	b	1d5a0 <main@@Base+0xa2a8>
   1d390:	bne	1d3a0 <main@@Base+0xa0a8>
   1d394:	ldrb	r0, [r7, #2]!
   1d398:	cmp	r0, #32
   1d39c:	bhi	1d3b0 <main@@Base+0xa0b8>
   1d3a0:	ldr	r0, [sp, #36]	; 0x24
   1d3a4:	ldr	r2, [sp, #44]	; 0x2c
   1d3a8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d3ac:	mov	r7, r0
   1d3b0:	cmp	r8, r7
   1d3b4:	beq	1d5b8 <main@@Base+0xa2c0>
   1d3b8:	ldr	r0, [sp, #44]	; 0x2c
   1d3bc:	mov	r6, #0
   1d3c0:	str	r6, [fp, #-52]	; 0xffffffcc
   1d3c4:	str	r6, [fp, #-56]	; 0xffffffc8
   1d3c8:	str	r6, [sp, #60]	; 0x3c
   1d3cc:	str	r6, [sp, #56]	; 0x38
   1d3d0:	str	r6, [fp, #-60]	; 0xffffffc4
   1d3d4:	cmp	r7, r0
   1d3d8:	beq	1d438 <main@@Base+0xa140>
   1d3dc:	sub	r0, fp, #56	; 0x38
   1d3e0:	ldr	r2, [sp, #44]	; 0x2c
   1d3e4:	mov	r1, r7
   1d3e8:	sub	r3, fp, #60	; 0x3c
   1d3ec:	str	r0, [sp]
   1d3f0:	ldr	r0, [sp, #36]	; 0x24
   1d3f4:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1d3f8:	cmp	r0, r7
   1d3fc:	beq	1d44c <main@@Base+0xa154>
   1d400:	mov	r4, r0
   1d404:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d408:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d40c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1d410:	cmp	r0, #0
   1d414:	beq	1d464 <main@@Base+0xa16c>
   1d418:	subs	r0, r6, #1
   1d41c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1d420:	bcc	1d498 <main@@Base+0xa1a0>
   1d424:	ldr	r0, [sp, #36]	; 0x24
   1d428:	ldr	r2, [sp, #44]	; 0x2c
   1d42c:	mov	r1, r4
   1d430:	mov	r3, #8
   1d434:	b	1d47c <main@@Base+0xa184>
   1d438:	ldr	r4, [sp, #44]	; 0x2c
   1d43c:	mov	r5, #0
   1d440:	cmp	r7, r4
   1d444:	bne	1d4f0 <main@@Base+0xa1f8>
   1d448:	b	1d4b0 <main@@Base+0xa1b8>
   1d44c:	mov	r6, #0
   1d450:	mov	r5, #0
   1d454:	mov	r4, r7
   1d458:	cmp	r7, r4
   1d45c:	bne	1d4f0 <main@@Base+0xa1f8>
   1d460:	b	1d4b0 <main@@Base+0xa1b8>
   1d464:	cmn	r5, #1
   1d468:	bgt	1d4a0 <main@@Base+0xa1a8>
   1d46c:	ldr	r0, [sp, #36]	; 0x24
   1d470:	ldr	r2, [sp, #44]	; 0x2c
   1d474:	mov	r1, r4
   1d478:	mov	r3, #7
   1d47c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d480:	mov	r4, r0
   1d484:	mov	r6, #0
   1d488:	mov	r5, #0
   1d48c:	cmp	r7, r4
   1d490:	bne	1d4f0 <main@@Base+0xa1f8>
   1d494:	b	1d4b0 <main@@Base+0xa1b8>
   1d498:	rsbs	r6, r6, #0
   1d49c:	rsc	r5, r5, #0
   1d4a0:	str	r6, [sp, #56]	; 0x38
   1d4a4:	str	r5, [sp, #60]	; 0x3c
   1d4a8:	cmp	r7, r4
   1d4ac:	bne	1d4f0 <main@@Base+0xa1f8>
   1d4b0:	add	r0, sp, #56	; 0x38
   1d4b4:	ldr	r2, [sp, #44]	; 0x2c
   1d4b8:	mov	r1, r7
   1d4bc:	str	r0, [sp]
   1d4c0:	movw	r0, #33392	; 0x8270
   1d4c4:	movt	r0, #4
   1d4c8:	add	r3, r0, #36	; 0x24
   1d4cc:	ldr	r0, [sp, #36]	; 0x24
   1d4d0:	bl	240d0 <main@@Base+0x10dd8>
   1d4d4:	cmp	r0, r7
   1d4d8:	mov	r4, r0
   1d4dc:	ldrne	r0, [sp, #44]	; 0x2c
   1d4e0:	cmpne	r4, r0
   1d4e4:	beq	1db90 <main@@Base+0xa898>
   1d4e8:	ldr	r6, [sp, #56]	; 0x38
   1d4ec:	ldr	r5, [sp, #60]	; 0x3c
   1d4f0:	orrs	r0, r6, r5
   1d4f4:	bne	1d508 <main@@Base+0xa210>
   1d4f8:	ldr	r0, [sp, #36]	; 0x24
   1d4fc:	ldrb	r0, [r0, #8]
   1d500:	tst	r0, #2
   1d504:	beq	1d5a0 <main@@Base+0xa2a8>
   1d508:	ldr	r0, [sp, #36]	; 0x24
   1d50c:	mov	r1, #1
   1d510:	mov	r2, #8
   1d514:	mov	r3, #8
   1d518:	ldr	r0, [r0]
   1d51c:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1d520:	cmp	r0, #0
   1d524:	beq	1db90 <main@@Base+0xa898>
   1d528:	str	r6, [r0]
   1d52c:	str	r5, [r0, #4]
   1d530:	b	1d5a0 <main@@Base+0xa2a8>
   1d534:	bne	1d544 <main@@Base+0xa24c>
   1d538:	ldrb	r0, [r1, #2]!
   1d53c:	cmp	r0, #32
   1d540:	bhi	1d558 <main@@Base+0xa260>
   1d544:	mov	r1, r2
   1d548:	ldr	r0, [sp, #36]	; 0x24
   1d54c:	ldr	r2, [sp, #44]	; 0x2c
   1d550:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d554:	mov	r1, r0
   1d558:	cmp	r8, r1
   1d55c:	beq	1d5b8 <main@@Base+0xa2c0>
   1d560:	ldr	r0, [sp, #36]	; 0x24
   1d564:	ldr	r2, [sp, #44]	; 0x2c
   1d568:	add	r3, sp, #64	; 0x40
   1d56c:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   1d570:	mov	r4, r0
   1d574:	ldr	r0, [sp, #64]	; 0x40
   1d578:	cmp	r0, #0
   1d57c:	beq	1db90 <main@@Base+0xa898>
   1d580:	ldr	r0, [sp, #36]	; 0x24
   1d584:	mov	r1, #0
   1d588:	ldr	r0, [r0]
   1d58c:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1d590:	cmp	r0, #0
   1d594:	beq	1db90 <main@@Base+0xa898>
   1d598:	ldr	r1, [sp, #64]	; 0x40
   1d59c:	str	r1, [r0]
   1d5a0:	ldr	r5, [sp, #44]	; 0x2c
   1d5a4:	ldr	sl, [sp, #36]	; 0x24
   1d5a8:	sub	r0, r5, r4
   1d5ac:	cmp	r0, #2
   1d5b0:	blt	1d610 <main@@Base+0xa318>
   1d5b4:	b	1d5e0 <main@@Base+0xa2e8>
   1d5b8:	ldr	sl, [sp, #36]	; 0x24
   1d5bc:	ldr	r5, [sp, #44]	; 0x2c
   1d5c0:	mov	r1, r8
   1d5c4:	mov	r0, sl
   1d5c8:	mov	r2, r5
   1d5cc:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   1d5d0:	mov	r4, r0
   1d5d4:	sub	r0, r5, r4
   1d5d8:	cmp	r0, #2
   1d5dc:	blt	1d610 <main@@Base+0xa318>
   1d5e0:	ldrb	r0, [r4]
   1d5e4:	cmp	r0, #32
   1d5e8:	bls	1d5fc <main@@Base+0xa304>
   1d5ec:	mov	r2, r4
   1d5f0:	cmp	r2, r5
   1d5f4:	bne	1d62c <main@@Base+0xa334>
   1d5f8:	b	1d9c8 <main@@Base+0xa6d0>
   1d5fc:	bne	1d610 <main@@Base+0xa318>
   1d600:	mov	r2, r4
   1d604:	ldrb	r0, [r2, #1]!
   1d608:	cmp	r0, #32
   1d60c:	bhi	1d624 <main@@Base+0xa32c>
   1d610:	mov	r0, sl
   1d614:	mov	r1, r4
   1d618:	mov	r2, r5
   1d61c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d620:	mov	r2, r0
   1d624:	cmp	r2, r5
   1d628:	beq	1d9c8 <main@@Base+0xa6d0>
   1d62c:	ldrb	r0, [r2]
   1d630:	cmp	r0, #44	; 0x2c
   1d634:	bne	1d9dc <main@@Base+0xa6e4>
   1d638:	add	r1, r2, #1
   1d63c:	sub	r0, r5, r1
   1d640:	cmp	r0, #2
   1d644:	blt	1d680 <main@@Base+0xa388>
   1d648:	ldrb	r0, [r1]
   1d64c:	cmp	r0, #32
   1d650:	bls	1d668 <main@@Base+0xa370>
   1d654:	ldr	r5, [sp, #44]	; 0x2c
   1d658:	mov	r2, r1
   1d65c:	cmp	r2, r5
   1d660:	bne	1d698 <main@@Base+0xa3a0>
   1d664:	b	1da4c <main@@Base+0xa754>
   1d668:	ldr	r5, [sp, #44]	; 0x2c
   1d66c:	ldr	sl, [sp, #36]	; 0x24
   1d670:	bne	1d680 <main@@Base+0xa388>
   1d674:	ldrb	r0, [r2, #2]!
   1d678:	cmp	r0, #32
   1d67c:	bhi	1d690 <main@@Base+0xa398>
   1d680:	mov	r0, sl
   1d684:	mov	r2, r5
   1d688:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d68c:	mov	r2, r0
   1d690:	cmp	r2, r5
   1d694:	beq	1da4c <main@@Base+0xa754>
   1d698:	ldrb	r0, [r2]
   1d69c:	cmp	r0, #125	; 0x7d
   1d6a0:	bne	1cd4c <main@@Base+0x9a54>
   1d6a4:	add	r1, r2, #1
   1d6a8:	sub	r0, r5, r1
   1d6ac:	ldr	sl, [sp, #36]	; 0x24
   1d6b0:	cmp	r0, #2
   1d6b4:	bge	1d9fc <main@@Base+0xa704>
   1d6b8:	b	1db54 <main@@Base+0xa85c>
   1d6bc:	ldr	r6, [sp, #44]	; 0x2c
   1d6c0:	ldr	sl, [sp, #36]	; 0x24
   1d6c4:	bne	1d6d8 <main@@Base+0xa3e0>
   1d6c8:	ldrb	r0, [r2, #2]!
   1d6cc:	mov	r4, r2
   1d6d0:	cmp	r0, #32
   1d6d4:	bhi	18d50 <main@@Base+0x5a58>
   1d6d8:	mov	r0, sl
   1d6dc:	mov	r2, r6
   1d6e0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d6e4:	b	18d4c <main@@Base+0x5a54>
   1d6e8:	ldr	r6, [sp, #44]	; 0x2c
   1d6ec:	ldr	sl, [sp, #36]	; 0x24
   1d6f0:	bne	1d704 <main@@Base+0xa40c>
   1d6f4:	ldrb	r0, [r4, #2]!
   1d6f8:	mov	r7, r4
   1d6fc:	cmp	r0, #32
   1d700:	bhi	18e20 <main@@Base+0x5b28>
   1d704:	mov	r0, sl
   1d708:	mov	r2, r6
   1d70c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d710:	b	18e1c <main@@Base+0x5b24>
   1d714:	ldr	sl, [sp, #36]	; 0x24
   1d718:	ldr	r6, [sp, #44]	; 0x2c
   1d71c:	mov	r1, r2
   1d720:	mov	r0, sl
   1d724:	mov	r2, r6
   1d728:	mov	r3, #10
   1d72c:	b	18c58 <main@@Base+0x5960>
   1d730:	ldr	sl, [sp, #36]	; 0x24
   1d734:	ldr	r6, [sp, #44]	; 0x2c
   1d738:	mov	r1, r2
   1d73c:	mov	r0, sl
   1d740:	mov	r2, r6
   1d744:	mov	r3, #9
   1d748:	b	1a208 <main@@Base+0x6f10>
   1d74c:	ldr	r0, [sp, #36]	; 0x24
   1d750:	ldr	r2, [sp, #44]	; 0x2c
   1d754:	mov	r1, r4
   1d758:	mov	r3, #9
   1d75c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d760:	b	1d9b8 <main@@Base+0xa6c0>
   1d764:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1d768:	mov	r4, r1
   1d76c:	str	r6, [fp, #-60]	; 0xffffffc4
   1d770:	cmp	r7, r4
   1d774:	bne	1d7b4 <main@@Base+0xa4bc>
   1d778:	sub	r0, fp, #60	; 0x3c
   1d77c:	ldr	r2, [sp, #44]	; 0x2c
   1d780:	mov	r1, r7
   1d784:	str	r0, [sp]
   1d788:	movw	r0, #33032	; 0x8108
   1d78c:	movt	r0, #4
   1d790:	add	r3, r0, #48	; 0x30
   1d794:	ldr	r0, [sp, #36]	; 0x24
   1d798:	bl	24358 <main@@Base+0x11060>
   1d79c:	cmp	r0, r7
   1d7a0:	mov	r4, r0
   1d7a4:	ldrne	r1, [sp, #44]	; 0x2c
   1d7a8:	cmpne	r4, r1
   1d7ac:	beq	1dc9c <main@@Base+0xa9a4>
   1d7b0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1d7b4:	ldr	sl, [sp, #36]	; 0x24
   1d7b8:	cmp	r6, #0
   1d7bc:	bne	1d7cc <main@@Base+0xa4d4>
   1d7c0:	ldrb	r0, [sl, #8]
   1d7c4:	tst	r0, #2
   1d7c8:	beq	1d7f0 <main@@Base+0xa4f8>
   1d7cc:	ldr	r0, [sl]
   1d7d0:	mov	r1, #21
   1d7d4:	mov	r2, #4
   1d7d8:	mov	r3, #4
   1d7dc:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   1d7e0:	cmp	r0, #0
   1d7e4:	beq	1dc9c <main@@Base+0xa9a4>
   1d7e8:	str	r6, [r0]
   1d7ec:	ldr	sl, [sp, #36]	; 0x24
   1d7f0:	ldr	r6, [sp, #44]	; 0x2c
   1d7f4:	b	16870 <main@@Base+0x3578>
   1d7f8:	ldr	sl, [sp, #36]	; 0x24
   1d7fc:	ldr	r6, [sp, #44]	; 0x2c
   1d800:	mov	r1, r2
   1d804:	mov	r0, sl
   1d808:	mov	r2, r6
   1d80c:	mov	r3, #9
   1d810:	b	1a5e4 <main@@Base+0x72ec>
   1d814:	ldr	r8, [sp, #44]	; 0x2c
   1d818:	ldr	sl, [sp, #36]	; 0x24
   1d81c:	b	1bed4 <main@@Base+0x8bdc>
   1d820:	ldr	r0, [sp, #36]	; 0x24
   1d824:	ldr	r2, [sp, #44]	; 0x2c
   1d828:	mov	r1, r4
   1d82c:	mov	r3, #9
   1d830:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1d834:	b	1da78 <main@@Base+0xa780>
   1d838:	cmp	r0, #93	; 0x5d
   1d83c:	bne	1dab4 <main@@Base+0xa7bc>
   1d840:	ldr	r0, [sp, #44]	; 0x2c
   1d844:	add	r1, r8, #1
   1d848:	sub	r0, r0, r1
   1d84c:	cmp	r0, #2
   1d850:	blt	1d8cc <main@@Base+0xa5d4>
   1d854:	ldrb	r0, [r1]
   1d858:	cmp	r0, #32
   1d85c:	bhi	1d8c0 <main@@Base+0xa5c8>
   1d860:	bne	1d8cc <main@@Base+0xa5d4>
   1d864:	ldrb	r0, [r8, #2]!
   1d868:	cmp	r0, #32
   1d86c:	bhi	1dacc <main@@Base+0xa7d4>
   1d870:	b	1d8cc <main@@Base+0xa5d4>
   1d874:	ldr	r1, [sp, #44]	; 0x2c
   1d878:	ldr	r0, [sp, #36]	; 0x24
   1d87c:	mov	r2, r1
   1d880:	b	1dac0 <main@@Base+0xa7c8>
   1d884:	ldr	sl, [sp, #36]	; 0x24
   1d888:	ldr	r6, [sp, #44]	; 0x2c
   1d88c:	mov	r1, r3
   1d890:	mov	r0, sl
   1d894:	mov	r2, r6
   1d898:	mov	r3, #10
   1d89c:	b	193d4 <main@@Base+0x60dc>
   1d8a0:	ldr	r0, [sp, #44]	; 0x2c
   1d8a4:	add	r1, r8, #1
   1d8a8:	sub	r0, r0, r1
   1d8ac:	cmp	r0, #2
   1d8b0:	blt	1d8cc <main@@Base+0xa5d4>
   1d8b4:	ldrb	r0, [r1]
   1d8b8:	cmp	r0, #32
   1d8bc:	bls	1d860 <main@@Base+0xa568>
   1d8c0:	ldr	sl, [sp, #36]	; 0x24
   1d8c4:	mov	r8, r1
   1d8c8:	b	1bed4 <main@@Base+0x8bdc>
   1d8cc:	ldr	r0, [sp, #36]	; 0x24
   1d8d0:	ldr	r2, [sp, #44]	; 0x2c
   1d8d4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d8d8:	b	1dac8 <main@@Base+0xa7d0>
   1d8dc:	ldr	r4, [sp, #44]	; 0x2c
   1d8e0:	b	1daec <main@@Base+0xa7f4>
   1d8e4:	cmp	r0, #93	; 0x5d
   1d8e8:	bne	1dad4 <main@@Base+0xa7dc>
   1d8ec:	ldr	r0, [sp, #44]	; 0x2c
   1d8f0:	add	r1, r4, #1
   1d8f4:	sub	r0, r0, r1
   1d8f8:	cmp	r0, #2
   1d8fc:	blt	1d960 <main@@Base+0xa668>
   1d900:	ldrb	r0, [r1]
   1d904:	cmp	r0, #32
   1d908:	bls	1d950 <main@@Base+0xa658>
   1d90c:	mov	r4, r1
   1d910:	b	1daec <main@@Base+0xa7f4>
   1d914:	ldr	r6, [sp, #44]	; 0x2c
   1d918:	ldr	sl, [sp, #36]	; 0x24
   1d91c:	bne	1d930 <main@@Base+0xa638>
   1d920:	ldrb	r0, [r2, #2]!
   1d924:	mov	r4, r2
   1d928:	cmp	r0, #32
   1d92c:	bhi	18c60 <main@@Base+0x5968>
   1d930:	mov	r0, sl
   1d934:	mov	r2, r6
   1d938:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d93c:	b	18c5c <main@@Base+0x5964>
   1d940:	ldr	r1, [sp, #44]	; 0x2c
   1d944:	ldr	r0, [sp, #36]	; 0x24
   1d948:	mov	r2, r1
   1d94c:	b	1dae0 <main@@Base+0xa7e8>
   1d950:	bne	1d960 <main@@Base+0xa668>
   1d954:	ldrb	r0, [r4, #2]!
   1d958:	cmp	r0, #32
   1d95c:	bhi	1daec <main@@Base+0xa7f4>
   1d960:	ldr	r0, [sp, #36]	; 0x24
   1d964:	ldr	r2, [sp, #44]	; 0x2c
   1d968:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d96c:	b	1dae8 <main@@Base+0xa7f0>
   1d970:	ldr	r6, [sp, #44]	; 0x2c
   1d974:	ldr	sl, [sp, #36]	; 0x24
   1d978:	bne	1d98c <main@@Base+0xa694>
   1d97c:	ldrb	r0, [r2, #2]!
   1d980:	mov	r4, r2
   1d984:	cmp	r0, #32
   1d988:	bhi	1a210 <main@@Base+0x6f18>
   1d98c:	mov	r0, sl
   1d990:	mov	r2, r6
   1d994:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d998:	b	1a20c <main@@Base+0x6f14>
   1d99c:	bne	1d9ac <main@@Base+0xa6b4>
   1d9a0:	ldrb	r0, [r4, #2]!
   1d9a4:	cmp	r0, #32
   1d9a8:	bhi	1d9bc <main@@Base+0xa6c4>
   1d9ac:	ldr	r0, [sp, #36]	; 0x24
   1d9b0:	ldr	r2, [sp, #44]	; 0x2c
   1d9b4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1d9b8:	mov	r4, r0
   1d9bc:	ldr	r6, [sp, #44]	; 0x2c
   1d9c0:	ldr	sl, [sp, #36]	; 0x24
   1d9c4:	b	1a780 <main@@Base+0x7488>
   1d9c8:	mov	r4, r5
   1d9cc:	ldr	r0, [sl, #24]
   1d9d0:	cmp	r0, #0
   1d9d4:	bne	1a6d0 <main@@Base+0x73d8>
   1d9d8:	b	1db70 <main@@Base+0xa878>
   1d9dc:	cmp	r0, #125	; 0x7d
   1d9e0:	bne	1db24 <main@@Base+0xa82c>
   1d9e4:	ldr	r0, [sp, #44]	; 0x2c
   1d9e8:	add	r1, r2, #1
   1d9ec:	sub	r0, r0, r1
   1d9f0:	ldr	sl, [sp, #36]	; 0x24
   1d9f4:	cmp	r0, #2
   1d9f8:	blt	1db54 <main@@Base+0xa85c>
   1d9fc:	ldrb	r0, [r1]
   1da00:	cmp	r0, #32
   1da04:	bls	1db3c <main@@Base+0xa844>
   1da08:	ldr	sl, [sp, #36]	; 0x24
   1da0c:	mov	r4, r1
   1da10:	ldr	r0, [sl, #24]
   1da14:	cmp	r0, #0
   1da18:	bne	1a6d0 <main@@Base+0x73d8>
   1da1c:	b	1db70 <main@@Base+0xa878>
   1da20:	ldr	r6, [sp, #44]	; 0x2c
   1da24:	ldr	sl, [sp, #36]	; 0x24
   1da28:	bne	1da3c <main@@Base+0xa744>
   1da2c:	ldrb	r0, [r2, #2]!
   1da30:	mov	r4, r2
   1da34:	cmp	r0, #32
   1da38:	bhi	1a5ec <main@@Base+0x72f4>
   1da3c:	mov	r0, sl
   1da40:	mov	r2, r6
   1da44:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1da48:	b	1a5e8 <main@@Base+0x72f0>
   1da4c:	ldr	sl, [sp, #36]	; 0x24
   1da50:	mov	r1, r5
   1da54:	mov	r2, r5
   1da58:	b	1db30 <main@@Base+0xa838>
   1da5c:	bne	1da6c <main@@Base+0xa774>
   1da60:	ldrb	r0, [r4, #2]!
   1da64:	cmp	r0, #32
   1da68:	bhi	1da7c <main@@Base+0xa784>
   1da6c:	ldr	r0, [sp, #36]	; 0x24
   1da70:	ldr	r2, [sp, #44]	; 0x2c
   1da74:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1da78:	mov	r4, r0
   1da7c:	ldr	r6, [sp, #44]	; 0x2c
   1da80:	ldr	sl, [sp, #36]	; 0x24
   1da84:	b	1a894 <main@@Base+0x759c>
   1da88:	ldr	r6, [sp, #44]	; 0x2c
   1da8c:	ldr	sl, [sp, #36]	; 0x24
   1da90:	bne	1daa4 <main@@Base+0xa7ac>
   1da94:	ldrb	r0, [r3, #2]!
   1da98:	mov	r4, r3
   1da9c:	cmp	r0, #32
   1daa0:	bhi	193dc <main@@Base+0x60e4>
   1daa4:	mov	r0, sl
   1daa8:	mov	r2, r6
   1daac:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1dab0:	b	193d8 <main@@Base+0x60e0>
   1dab4:	ldr	r0, [sp, #36]	; 0x24
   1dab8:	ldr	r2, [sp, #44]	; 0x2c
   1dabc:	mov	r1, r8
   1dac0:	mov	r3, #9
   1dac4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1dac8:	mov	r8, r0
   1dacc:	ldr	sl, [sp, #36]	; 0x24
   1dad0:	b	1bed4 <main@@Base+0x8bdc>
   1dad4:	ldr	r0, [sp, #36]	; 0x24
   1dad8:	ldr	r2, [sp, #44]	; 0x2c
   1dadc:	mov	r1, r4
   1dae0:	mov	r3, #9
   1dae4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1dae8:	mov	r4, r0
   1daec:	ldr	sl, [sp, #36]	; 0x24
   1daf0:	ldr	r0, [sl]
   1daf4:	bl	2da48 <flatcc_builder_end_vector@@Base>
   1daf8:	ldr	r6, [sp, #44]	; 0x2c
   1dafc:	ldr	r5, [sp, #40]	; 0x28
   1db00:	cmp	r0, #0
   1db04:	str	r0, [sp, #52]	; 0x34
   1db08:	beq	133b4 <main@@Base+0xbc>
   1db0c:	ldr	r0, [sl]
   1db10:	mov	r1, #13
   1db14:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1db18:	cmp	r0, #0
   1db1c:	bne	16008 <main@@Base+0x2d10>
   1db20:	b	133b4 <main@@Base+0xbc>
   1db24:	ldr	sl, [sp, #36]	; 0x24
   1db28:	mov	r1, r2
   1db2c:	ldr	r2, [sp, #44]	; 0x2c
   1db30:	mov	r0, sl
   1db34:	mov	r3, #10
   1db38:	b	1a6bc <main@@Base+0x73c4>
   1db3c:	ldr	sl, [sp, #36]	; 0x24
   1db40:	bne	1db54 <main@@Base+0xa85c>
   1db44:	ldrb	r0, [r2, #2]!
   1db48:	mov	r4, r2
   1db4c:	cmp	r0, #32
   1db50:	bhi	1a6c4 <main@@Base+0x73cc>
   1db54:	ldr	r2, [sp, #44]	; 0x2c
   1db58:	mov	r0, sl
   1db5c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1db60:	mov	r4, r0
   1db64:	ldr	r0, [sl, #24]
   1db68:	cmp	r0, #0
   1db6c:	bne	1a6d0 <main@@Base+0x73d8>
   1db70:	ldr	r0, [sl]
   1db74:	bl	2d734 <flatcc_builder_end_table@@Base>
   1db78:	cmp	r0, #0
   1db7c:	str	r0, [sp, #52]	; 0x34
   1db80:	beq	1db90 <main@@Base+0xa898>
   1db84:	ldr	r6, [sp, #44]	; 0x2c
   1db88:	ldr	sl, [sp, #36]	; 0x24
   1db8c:	b	1dbbc <main@@Base+0xa8c4>
   1db90:	ldr	r6, [sp, #44]	; 0x2c
   1db94:	ldr	sl, [sp, #36]	; 0x24
   1db98:	mov	r0, sl
   1db9c:	mov	r1, r4
   1dba0:	mov	r2, r6
   1dba4:	mov	r3, #33	; 0x21
   1dba8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1dbac:	mov	r4, r0
   1dbb0:	ldr	r0, [sp, #52]	; 0x34
   1dbb4:	cmp	r0, #0
   1dbb8:	beq	133b4 <main@@Base+0xbc>
   1dbbc:	ldr	r0, [sl]
   1dbc0:	mov	r1, #14
   1dbc4:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   1dbc8:	cmp	r0, #0
   1dbcc:	bne	15f2c <main@@Base+0x2c34>
   1dbd0:	b	133b4 <main@@Base+0xbc>
   1dbd4:	mov	r4, r6
   1dbd8:	ldr	r0, [sl, #24]
   1dbdc:	cmp	r0, #0
   1dbe0:	bne	133b4 <main@@Base+0xbc>
   1dbe4:	b	1346c <main@@Base+0x174>
   1dbe8:	cmp	r0, #125	; 0x7d
   1dbec:	bne	1dc2c <main@@Base+0xa934>
   1dbf0:	add	r1, r2, #1
   1dbf4:	sub	r0, r6, r1
   1dbf8:	cmp	r0, #2
   1dbfc:	blt	1dc54 <main@@Base+0xa95c>
   1dc00:	ldrb	r0, [r1]
   1dc04:	cmp	r0, #32
   1dc08:	bls	1dc40 <main@@Base+0xa948>
   1dc0c:	mov	r4, r1
   1dc10:	ldr	r0, [sl, #24]
   1dc14:	cmp	r0, #0
   1dc18:	bne	133b4 <main@@Base+0xbc>
   1dc1c:	b	1346c <main@@Base+0x174>
   1dc20:	mov	r0, sl
   1dc24:	mov	r1, r6
   1dc28:	b	1dc34 <main@@Base+0xa93c>
   1dc2c:	mov	r0, sl
   1dc30:	mov	r1, r2
   1dc34:	mov	r2, r6
   1dc38:	mov	r3, #10
   1dc3c:	b	13458 <main@@Base+0x160>
   1dc40:	bne	1dc54 <main@@Base+0xa95c>
   1dc44:	ldrb	r0, [r2, #2]!
   1dc48:	mov	r4, r2
   1dc4c:	cmp	r0, #32
   1dc50:	bhi	13460 <main@@Base+0x168>
   1dc54:	mov	r0, sl
   1dc58:	mov	r2, r6
   1dc5c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1dc60:	b	1345c <main@@Base+0x164>
   1dc64:	mov	r4, r7
   1dc68:	b	133b4 <main@@Base+0xbc>
   1dc6c:	mov	r6, r8
   1dc70:	b	133b4 <main@@Base+0xbc>
   1dc74:	mov	r4, r1
   1dc78:	mov	r6, r8
   1dc7c:	b	133b4 <main@@Base+0xbc>
   1dc80:	mov	r4, r6
   1dc84:	mov	r6, r8
   1dc88:	b	133b4 <main@@Base+0xbc>
   1dc8c:	mov	r6, r5
   1dc90:	b	133b4 <main@@Base+0xbc>
   1dc94:	mov	r0, r4
   1dc98:	mov	r4, r0
   1dc9c:	ldr	r6, [sp, #44]	; 0x2c
   1dca0:	ldr	sl, [sp, #36]	; 0x24
   1dca4:	b	133b4 <main@@Base+0xbc>
   1dca8:	mov	r4, r1
   1dcac:	b	133b4 <main@@Base+0xbc>
   1dcb0:	mov	r4, r6
   1dcb4:	mov	r6, r5
   1dcb8:	b	133b4 <main@@Base+0xbc>
   1dcbc:	ldr	r6, [sp, #44]	; 0x2c
   1dcc0:	mov	r4, r8
   1dcc4:	b	133b4 <main@@Base+0xbc>
   1dcc8:	mov	r4, r1
   1dccc:	b	1dcf8 <main@@Base+0xaa00>
   1dcd0:	ldr	sl, [sp, #36]	; 0x24
   1dcd4:	mov	r4, r8
   1dcd8:	b	133b4 <main@@Base+0xbc>
   1dcdc:	ldr	sl, [sp, #36]	; 0x24
   1dce0:	mov	r4, r1
   1dce4:	b	133b4 <main@@Base+0xbc>
   1dce8:	mov	r4, r6
   1dcec:	b	1dc9c <main@@Base+0xa9a4>
   1dcf0:	ldr	r5, [sp, #44]	; 0x2c
   1dcf4:	mov	r4, r6
   1dcf8:	ldr	sl, [sp, #36]	; 0x24
   1dcfc:	mov	r6, r5
   1dd00:	b	133b4 <main@@Base+0xbc>
   1dd04:	ldr	r6, [sp, #44]	; 0x2c
   1dd08:	ldr	sl, [sp, #36]	; 0x24
   1dd0c:	mov	r4, r7
   1dd10:	b	133b4 <main@@Base+0xbc>
   1dd14:	mov	r4, r1
   1dd18:	b	1dc9c <main@@Base+0xa9a4>
   1dd1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd20:	add	fp, sp, #28
   1dd24:	sub	sp, sp, #12
   1dd28:	mov	r5, r1
   1dd2c:	sub	r1, r2, r1
   1dd30:	cmp	r1, #8
   1dd34:	movcs	r1, #8
   1dd38:	sub	r4, r1, #1
   1dd3c:	cmp	r4, #7
   1dd40:	bhi	1deb0 <main@@Base+0xabb8>
   1dd44:	str	r3, [sp, #8]
   1dd48:	add	r8, pc, #32
   1dd4c:	mov	r9, #0
   1dd50:	mov	ip, #0
   1dd54:	mov	lr, #0
   1dd58:	mov	sl, #0
   1dd5c:	mov	r6, #0
   1dd60:	mov	r3, #0
   1dd64:	mov	r1, #0
   1dd68:	mov	r7, #0
   1dd6c:	ldr	pc, [r8, r4, lsl #2]
   1dd70:	ldrdeq	sp, [r1], -r4
   1dd74:	andeq	sp, r1, ip, asr #27
   1dd78:	andeq	sp, r1, r4, asr #27
   1dd7c:			; <UNDEFINED> instruction: 0x0001ddbc
   1dd80:			; <UNDEFINED> instruction: 0x0001ddb0
   1dd84:	andeq	sp, r1, r4, lsr #27
   1dd88:	muleq	r1, r4, sp
   1dd8c:	muleq	r1, r0, sp
   1dd90:	ldrb	ip, [r5, #7]
   1dd94:	ldrb	r1, [r5, #6]
   1dd98:	mov	lr, r9
   1dd9c:	orr	r1, ip, r1, lsl #8
   1dda0:	mov	r9, r1
   1dda4:	ldrb	r1, [r5, #5]
   1dda8:	mov	sl, lr
   1ddac:	orr	r9, r9, r1, lsl #16
   1ddb0:	ldrb	r1, [r5, #4]
   1ddb4:	mov	r6, sl
   1ddb8:	orr	r9, r9, r1, lsl #24
   1ddbc:	ldrb	r1, [r5, #3]
   1ddc0:	orr	r3, r1, r6
   1ddc4:	ldrb	r1, [r5, #2]
   1ddc8:	orr	r1, r3, r1, lsl #8
   1ddcc:	ldrb	r3, [r5, #1]
   1ddd0:	orr	r7, r1, r3, lsl #16
   1ddd4:	ldrb	r1, [r5]
   1ddd8:	movw	r4, #25957	; 0x6565
   1dddc:	ldr	r3, [fp, #12]
   1dde0:	ldr	r8, [fp, #8]
   1dde4:	movt	r4, #18290	; 0x4772
   1dde8:	orr	r7, r7, r1, lsl #24
   1ddec:	mvn	r1, #-1845493760	; 0x92000000
   1ddf0:	subs	r1, r1, r9
   1ddf4:	sbcs	r1, r4, r7
   1ddf8:	bcc	1de30 <main@@Base+0xab38>
   1ddfc:	movw	r1, #30053	; 0x7565
   1de00:	movt	r1, #17004	; 0x426c
   1de04:	teq	r7, r1
   1de08:	bne	1deb0 <main@@Base+0xabb8>
   1de0c:	str	r3, [sp]
   1de10:	mov	r1, r5
   1de14:	mov	r3, #4
   1de18:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1de1c:	cmp	r0, r5
   1de20:	beq	1deb0 <main@@Base+0xabb8>
   1de24:	mov	r1, #0
   1de28:	mov	r2, #8
   1de2c:	b	1de9c <main@@Base+0xaba4>
   1de30:	movw	r6, #25600	; 0x6400
   1de34:	bic	r1, r7, #255	; 0xff
   1de38:	movt	r6, #21093	; 0x5265
   1de3c:	teq	r1, r6
   1de40:	bne	1de68 <main@@Base+0xab70>
   1de44:	str	r3, [sp]
   1de48:	mov	r1, r5
   1de4c:	mov	r3, #3
   1de50:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1de54:	cmp	r0, r5
   1de58:	beq	1deb0 <main@@Base+0xabb8>
   1de5c:	mov	r1, #0
   1de60:	mov	r2, #1
   1de64:	b	1de9c <main@@Base+0xaba4>
   1de68:	eor	r1, r7, r4
   1de6c:	and	r7, r9, #-16777216	; 0xff000000
   1de70:	eor	r7, r7, #1845493760	; 0x6e000000
   1de74:	orrs	r1, r7, r1
   1de78:	bne	1deb0 <main@@Base+0xabb8>
   1de7c:	str	r3, [sp]
   1de80:	mov	r1, r5
   1de84:	mov	r3, #5
   1de88:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1de8c:	cmp	r0, r5
   1de90:	beq	1deb0 <main@@Base+0xabb8>
   1de94:	mov	r1, #0
   1de98:	mov	r2, #2
   1de9c:	str	r2, [r8]
   1dea0:	str	r1, [r8, #4]
   1dea4:	mov	r5, r0
   1dea8:	ldr	r2, [sp, #8]
   1deac:	str	r1, [r2]
   1deb0:	mov	r0, r5
   1deb4:	sub	sp, fp, #28
   1deb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1debc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dec0:	add	fp, sp, #28
   1dec4:	sub	sp, sp, #20
   1dec8:	sub	lr, r2, r1
   1decc:	cmp	lr, #8
   1ded0:	mov	r7, lr
   1ded4:	movcs	r7, #8
   1ded8:	sub	r7, r7, #1
   1dedc:	cmp	r7, #7
   1dee0:	bhi	1e2f4 <main@@Base+0xaffc>
   1dee4:	str	r0, [sp, #16]
   1dee8:	str	r3, [sp, #12]
   1deec:	mov	r4, #0
   1def0:	mov	sl, #0
   1def4:	mov	r8, #0
   1def8:	mov	r5, #0
   1defc:	mov	r3, #0
   1df00:	mov	r6, #0
   1df04:	mov	r9, #0
   1df08:	mov	ip, #0
   1df0c:	ldr	r0, [fp, #12]
   1df10:	str	r0, [sp, #8]
   1df14:	ldr	r0, [fp, #8]
   1df18:	str	r0, [sp, #4]
   1df1c:	add	r0, pc, #0
   1df20:	ldr	pc, [r0, r7, lsl #2]
   1df24:	andeq	sp, r1, r8, lsl #31
   1df28:	andeq	sp, r1, r0, lsl #31
   1df2c:	andeq	sp, r1, r8, ror pc
   1df30:	andeq	sp, r1, r0, ror pc
   1df34:	andeq	sp, r1, r4, ror #30
   1df38:	andeq	sp, r1, r8, asr pc
   1df3c:	andeq	sp, r1, r8, asr #30
   1df40:	andeq	sp, r1, r4, asr #30
   1df44:	ldrb	sl, [r1, #7]
   1df48:	ldrb	r0, [r1, #6]
   1df4c:	mov	r8, r4
   1df50:	orr	r0, sl, r0, lsl #8
   1df54:	mov	r4, r0
   1df58:	ldrb	r0, [r1, #5]
   1df5c:	mov	r5, r8
   1df60:	orr	r4, r4, r0, lsl #16
   1df64:	ldrb	r0, [r1, #4]
   1df68:	mov	r3, r5
   1df6c:	orr	r4, r4, r0, lsl #24
   1df70:	ldrb	r0, [r1, #3]
   1df74:	orr	r6, r0, r3
   1df78:	ldrb	r0, [r1, #2]
   1df7c:	orr	r9, r6, r0, lsl #8
   1df80:	ldrb	r0, [r1, #1]
   1df84:	orr	ip, r9, r0, lsl #16
   1df88:	ldrb	r0, [r1]
   1df8c:	movw	r7, #30061	; 0x756d
   1df90:	movw	r3, #30815	; 0x785f
   1df94:	movt	r7, #25966	; 0x656e
   1df98:	movt	r3, #26725	; 0x6865
   1df9c:	orr	r6, ip, r0, lsl #24
   1dfa0:	subs	r0, r4, r7
   1dfa4:	sbcs	r0, r6, r3
   1dfa8:	bcs	1e010 <main@@Base+0xad18>
   1dfac:	movw	r3, #27759	; 0x6c6f
   1dfb0:	mvn	r0, #-1912602624	; 0x8e000000
   1dfb4:	bic	r7, r6, #255	; 0xff
   1dfb8:	movt	r3, #17263	; 0x436f
   1dfbc:	subs	r0, r0, r4
   1dfc0:	sbcs	r0, r3, r6
   1dfc4:	bcc	1e06c <main@@Base+0xad74>
   1dfc8:	cmp	lr, #4
   1dfcc:	blt	1e2f4 <main@@Base+0xaffc>
   1dfd0:	movw	r0, #30976	; 0x7900
   1dfd4:	movt	r0, #16750	; 0x416e
   1dfd8:	teq	r7, r0
   1dfdc:	bne	1e2f4 <main@@Base+0xaffc>
   1dfe0:	ldrb	r0, [r1, #3]
   1dfe4:	mov	r3, r1
   1dfe8:	cmp	r0, #46	; 0x2e
   1dfec:	addeq	r3, r3, #4
   1dff0:	cmp	r3, r1
   1dff4:	beq	1e2f4 <main@@Base+0xaffc>
   1dff8:	mov	r1, r3
   1dffc:	ldr	r0, [sp, #16]
   1e000:	ldr	r3, [sp, #12]
   1e004:	sub	sp, fp, #28
   1e008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e00c:	b	235cc <main@@Base+0x102d4>
   1e010:	add	r0, r3, #64512	; 0xfc00
   1e014:	add	r5, r0, #17301504	; 0x1080000
   1e018:	subs	r0, r4, r7
   1e01c:	sbcs	r0, r6, r5
   1e020:	bcs	1e0b4 <main@@Base+0xadbc>
   1e024:	cmp	lr, #9
   1e028:	blt	1e2f4 <main@@Base+0xaffc>
   1e02c:	eor	r0, r4, r7
   1e030:	eor	r3, r6, r3
   1e034:	orrs	r0, r0, r3
   1e038:	bne	1e2f4 <main@@Base+0xaffc>
   1e03c:	ldrb	r0, [r1, #8]
   1e040:	mov	r3, r1
   1e044:	cmp	r0, #46	; 0x2e
   1e048:	addeq	r3, r3, #9
   1e04c:	cmp	r3, r1
   1e050:	beq	1e2f4 <main@@Base+0xaffc>
   1e054:	mov	r1, r3
   1e058:	ldr	r0, [sp, #16]
   1e05c:	ldr	r3, [sp, #12]
   1e060:	sub	sp, fp, #28
   1e064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e068:	b	24c94 <main@@Base+0x1199c>
   1e06c:	movw	r0, #28416	; 0x6f00
   1e070:	movt	r0, #18031	; 0x466f
   1e074:	teq	r7, r0
   1e078:	bne	1e110 <main@@Base+0xae18>
   1e07c:	cmp	lr, #4
   1e080:	blt	1e2f4 <main@@Base+0xaffc>
   1e084:	ldrb	r0, [r1, #3]
   1e088:	mov	r3, r1
   1e08c:	cmp	r0, #46	; 0x2e
   1e090:	addeq	r3, r3, #4
   1e094:	cmp	r3, r1
   1e098:	beq	1e2f4 <main@@Base+0xaffc>
   1e09c:	mov	r1, r3
   1e0a0:	ldr	r0, [sp, #16]
   1e0a4:	ldr	r3, [sp, #12]
   1e0a8:	sub	sp, fp, #28
   1e0ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e0b0:	b	24a34 <main@@Base+0x1173c>
   1e0b4:	sub	r0, r3, #4352	; 0x1100
   1e0b8:	subs	r3, r4, r7
   1e0bc:	sub	r0, r0, #-100663296	; 0xfa000000
   1e0c0:	sbcs	r0, r6, r0
   1e0c4:	bcs	1e15c <main@@Base+0xae64>
   1e0c8:	cmp	lr, #9
   1e0cc:	blt	1e2f4 <main@@Base+0xaffc>
   1e0d0:	eor	r0, r4, r7
   1e0d4:	eor	r3, r6, r5
   1e0d8:	orrs	r0, r0, r3
   1e0dc:	bne	1e2f4 <main@@Base+0xaffc>
   1e0e0:	ldrb	r0, [r1, #8]
   1e0e4:	mov	r3, r1
   1e0e8:	cmp	r0, #46	; 0x2e
   1e0ec:	addeq	r3, r3, #9
   1e0f0:	cmp	r3, r1
   1e0f4:	beq	1e2f4 <main@@Base+0xaffc>
   1e0f8:	mov	r1, r3
   1e0fc:	ldr	r0, [sp, #16]
   1e100:	ldr	r3, [sp, #12]
   1e104:	sub	sp, fp, #28
   1e108:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e10c:	b	24e40 <main@@Base+0x11b48>
   1e110:	cmp	lr, #6
   1e114:	blt	1e2f4 <main@@Base+0xaffc>
   1e118:	and	r0, r4, #-16777216	; 0xff000000
   1e11c:	eor	r3, r6, r3
   1e120:	eor	r0, r0, #1912602624	; 0x72000000
   1e124:	orrs	r0, r0, r3
   1e128:	bne	1e2f4 <main@@Base+0xaffc>
   1e12c:	ldrb	r0, [r1, #5]
   1e130:	mov	r3, r1
   1e134:	cmp	r0, #46	; 0x2e
   1e138:	addeq	r3, r3, #6
   1e13c:	cmp	r3, r1
   1e140:	beq	1e2f4 <main@@Base+0xaffc>
   1e144:	mov	r1, r3
   1e148:	ldr	r0, [sp, #16]
   1e14c:	ldr	r3, [sp, #12]
   1e150:	sub	sp, fp, #28
   1e154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e158:	b	1dd1c <main@@Base+0xaa24>
   1e15c:	movw	r0, #29817	; 0x7479
   1e160:	movw	r3, #29797	; 0x7465
   1e164:	movt	r0, #28016	; 0x6d70
   1e168:	movt	r3, #28271	; 0x6e6f
   1e16c:	eor	r0, r4, r0
   1e170:	eor	r3, r6, r3
   1e174:	orrs	r0, r0, r3
   1e178:	beq	1e1cc <main@@Base+0xaed4>
   1e17c:	movw	r3, #26463	; 0x675f
   1e180:	eor	r0, r4, r7
   1e184:	movt	r3, #28261	; 0x6e65
   1e188:	eor	r3, r6, r3
   1e18c:	orrs	r0, r0, r3
   1e190:	bne	1e2f4 <main@@Base+0xaffc>
   1e194:	cmp	lr, #9
   1e198:	blt	1e2f4 <main@@Base+0xaffc>
   1e19c:	ldrb	r0, [r1, #8]
   1e1a0:	mov	r3, r1
   1e1a4:	cmp	r0, #46	; 0x2e
   1e1a8:	addeq	r3, r3, #9
   1e1ac:	cmp	r3, r1
   1e1b0:	beq	1e2f4 <main@@Base+0xaffc>
   1e1b4:	mov	r1, r3
   1e1b8:	ldr	r0, [sp, #16]
   1e1bc:	ldr	r3, [sp, #12]
   1e1c0:	sub	sp, fp, #28
   1e1c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1c8:	b	25030 <main@@Base+0x11d38>
   1e1cc:	add	r8, r1, #8
   1e1d0:	sub	r5, r2, r8
   1e1d4:	cmp	r5, #8
   1e1d8:	mov	r0, r5
   1e1dc:	movcs	r0, #8
   1e1e0:	sub	r4, r0, #1
   1e1e4:	cmp	r4, #7
   1e1e8:	bhi	1e2f4 <main@@Base+0xaffc>
   1e1ec:	add	r0, pc, #16
   1e1f0:	mov	lr, #0
   1e1f4:	mov	r9, #0
   1e1f8:	mov	r3, #0
   1e1fc:	mov	r6, #0
   1e200:	ldr	pc, [r0, r4, lsl #2]
   1e204:	andeq	lr, r1, ip, lsr r2
   1e208:	andeq	lr, r1, r4, lsr r2
   1e20c:	andeq	lr, r1, ip, lsr #4
   1e210:	andeq	lr, r1, r4, lsr #4
   1e214:	andeq	lr, r1, r4, lsr #4
   1e218:	andeq	lr, r1, r4, lsr #4
   1e21c:	andeq	lr, r1, r4, lsr #4
   1e220:	andeq	lr, r1, r4, lsr #4
   1e224:	ldrb	r9, [r1, #11]
   1e228:	mov	lr, #0
   1e22c:	ldrb	r0, [r1, #10]
   1e230:	orr	r3, r9, r0, lsl #8
   1e234:	ldrb	r0, [r1, #9]
   1e238:	orr	r6, r3, r0, lsl #16
   1e23c:	cmp	r5, #5
   1e240:	blt	1e2f4 <main@@Base+0xaffc>
   1e244:	ldrb	r0, [r8]
   1e248:	orr	r0, r6, r0, lsl #24
   1e24c:	eor	r0, r0, r7
   1e250:	orrs	r0, lr, r0
   1e254:	bne	1e2f4 <main@@Base+0xaffc>
   1e258:	ldrb	r0, [r1, #12]
   1e25c:	mov	r5, r8
   1e260:	cmp	r0, #46	; 0x2e
   1e264:	addeq	r5, r1, #13
   1e268:	cmp	r5, r8
   1e26c:	beq	1e2f4 <main@@Base+0xaffc>
   1e270:	sub	r0, r2, r5
   1e274:	cmp	r0, #8
   1e278:	movcs	r0, #8
   1e27c:	sub	r0, r0, #1
   1e280:	cmp	r0, #7
   1e284:	bhi	1e2e0 <main@@Base+0xafe8>
   1e288:	ldrb	r0, [r5]
   1e28c:	cmp	r0, #120	; 0x78
   1e290:	bne	1e2f0 <main@@Base+0xaff8>
   1e294:	ldr	r0, [sp, #8]
   1e298:	mov	r1, r5
   1e29c:	mov	r3, #1
   1e2a0:	str	r0, [sp]
   1e2a4:	ldr	r0, [sp, #16]
   1e2a8:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1e2ac:	cmp	r0, r5
   1e2b0:	mov	r1, r5
   1e2b4:	beq	1e2f4 <main@@Base+0xaffc>
   1e2b8:	ldr	r2, [sp, #4]
   1e2bc:	mov	r1, #0
   1e2c0:	str	r1, [r2]
   1e2c4:	str	r1, [r2, #4]
   1e2c8:	ldr	r2, [sp, #12]
   1e2cc:	str	r1, [r2]
   1e2d0:	mov	r1, r0
   1e2d4:	mov	r0, r1
   1e2d8:	sub	sp, fp, #28
   1e2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2e0:	mov	r1, r5
   1e2e4:	mov	r0, r1
   1e2e8:	sub	sp, fp, #28
   1e2ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2f0:	mov	r1, r5
   1e2f4:	mov	r0, r1
   1e2f8:	sub	sp, fp, #28
   1e2fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e304:	add	fp, sp, #28
   1e308:	sub	sp, sp, #28
   1e30c:	mov	r8, r2
   1e310:	sub	r2, r2, r1
   1e314:	cmp	r2, #8
   1e318:	movcs	r2, #8
   1e31c:	sub	r2, r2, #1
   1e320:	cmp	r2, #7
   1e324:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e328:	str	r0, [sp, #24]
   1e32c:	mov	sl, #0
   1e330:	mov	ip, #0
   1e334:	mov	lr, #0
   1e338:	mov	r9, #0
   1e33c:	mov	r6, #0
   1e340:	mov	r4, #0
   1e344:	mov	r5, #0
   1e348:	ldr	r0, [fp, #12]
   1e34c:	str	r0, [sp, #20]
   1e350:	ldr	r0, [fp, #8]
   1e354:	str	r0, [sp, #16]
   1e358:	add	r7, pc, #4
   1e35c:	mov	r0, #0
   1e360:	ldr	pc, [r7, r2, lsl #2]
   1e364:	andeq	lr, r1, r8, asr #7
   1e368:	andeq	lr, r1, r0, asr #7
   1e36c:			; <UNDEFINED> instruction: 0x0001e3b8
   1e370:			; <UNDEFINED> instruction: 0x0001e3b0
   1e374:	andeq	lr, r1, r4, lsr #7
   1e378:	muleq	r1, r8, r3
   1e37c:	andeq	lr, r1, r8, lsl #7
   1e380:	andeq	lr, r1, r4, lsl #7
   1e384:	ldrb	ip, [r1, #7]
   1e388:	ldrb	r2, [r1, #6]
   1e38c:	mov	lr, sl
   1e390:	orr	r2, ip, r2, lsl #8
   1e394:	mov	sl, r2
   1e398:	ldrb	r2, [r1, #5]
   1e39c:	mov	r9, lr
   1e3a0:	orr	sl, sl, r2, lsl #16
   1e3a4:	ldrb	r2, [r1, #4]
   1e3a8:	mov	r6, r9
   1e3ac:	orr	sl, sl, r2, lsl #24
   1e3b0:	ldrb	r2, [r1, #3]
   1e3b4:	orr	r4, r2, r6
   1e3b8:	ldrb	r2, [r1, #2]
   1e3bc:	orr	r0, r4, r2, lsl #8
   1e3c0:	ldrb	r2, [r1, #1]
   1e3c4:	orr	r5, r0, r2, lsl #16
   1e3c8:	ldrb	r2, [r1]
   1e3cc:	movw	r7, #11844	; 0x2e44
   1e3d0:	movw	r0, #18273	; 0x4761
   1e3d4:	movt	r7, #28005	; 0x6d65
   1e3d8:	movt	r0, #19833	; 0x4d79
   1e3dc:	subs	r7, r7, sl
   1e3e0:	orr	r2, r5, r2, lsl #24
   1e3e4:	sbcs	r7, r0, r2
   1e3e8:	bcc	1e548 <main@@Base+0xb250>
   1e3ec:	movw	r0, #31022	; 0x792e
   1e3f0:	movw	r7, #28276	; 0x6e74
   1e3f4:	movt	r0, #24947	; 0x6173
   1e3f8:	movt	r7, #18017	; 0x4661
   1e3fc:	eor	r0, sl, r0
   1e400:	eor	r2, r2, r7
   1e404:	orrs	r0, r0, r2
   1e408:	bne	1f0b4 <main@@Base+0xbdbc>
   1e40c:	add	lr, r1, #8
   1e410:	sub	r0, r8, lr
   1e414:	cmp	r0, #8
   1e418:	movcs	r0, #8
   1e41c:	sub	r6, r0, #1
   1e420:	cmp	r6, #7
   1e424:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e428:	str	r3, [sp, #12]
   1e42c:	add	r2, pc, #32
   1e430:	mov	sl, #0
   1e434:	mov	ip, #0
   1e438:	mov	r9, #0
   1e43c:	mov	r4, #0
   1e440:	mov	r7, #0
   1e444:	mov	r5, #0
   1e448:	mov	r0, #0
   1e44c:	mov	r3, #0
   1e450:	ldr	pc, [r2, r6, lsl #2]
   1e454:			; <UNDEFINED> instruction: 0x0001e4b8
   1e458:			; <UNDEFINED> instruction: 0x0001e4b0
   1e45c:	andeq	lr, r1, r8, lsr #9
   1e460:	andeq	lr, r1, r0, lsr #9
   1e464:	muleq	r1, r4, r4
   1e468:	andeq	lr, r1, r8, lsl #9
   1e46c:	andeq	lr, r1, r8, ror r4
   1e470:	andeq	lr, r1, r4, ror r4
   1e474:	ldrb	ip, [r1, #15]
   1e478:	ldrb	r0, [r1, #14]
   1e47c:	mov	r9, sl
   1e480:	orr	r0, ip, r0, lsl #8
   1e484:	mov	sl, r0
   1e488:	ldrb	r0, [r1, #13]
   1e48c:	mov	r4, r9
   1e490:	orr	sl, sl, r0, lsl #16
   1e494:	ldrb	r0, [r1, #12]
   1e498:	mov	r7, r4
   1e49c:	orr	sl, sl, r0, lsl #24
   1e4a0:	ldrb	r0, [r1, #11]
   1e4a4:	orr	r5, r0, r7
   1e4a8:	ldrb	r0, [r1, #10]
   1e4ac:	orr	r0, r5, r0, lsl #8
   1e4b0:	ldrb	r2, [r1, #9]
   1e4b4:	orr	r3, r0, r2, lsl #16
   1e4b8:	ldrb	r2, [lr]
   1e4bc:	movw	r0, #29797	; 0x7465
   1e4c0:	movt	r0, #24931	; 0x6163
   1e4c4:	eor	r0, sl, r0
   1e4c8:	orr	r2, r3, r2, lsl #24
   1e4cc:	movw	r3, #24946	; 0x6172
   1e4d0:	movt	r3, #17256	; 0x4368
   1e4d4:	eor	r2, r2, r3
   1e4d8:	orrs	r0, r0, r2
   1e4dc:	bne	1f0b4 <main@@Base+0xbdbc>
   1e4e0:	add	r0, r1, #16
   1e4e4:	sub	r2, r8, r0
   1e4e8:	cmp	r2, #8
   1e4ec:	mov	r3, r2
   1e4f0:	movcs	r3, #8
   1e4f4:	sub	r3, r3, #1
   1e4f8:	cmp	r3, #7
   1e4fc:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e500:	cmp	r2, #2
   1e504:	blt	1f0b4 <main@@Base+0xbdbc>
   1e508:	ldrb	r2, [r0]
   1e50c:	cmp	r2, #114	; 0x72
   1e510:	bne	1f0b4 <main@@Base+0xbdbc>
   1e514:	ldrb	r2, [r1, #17]
   1e518:	ldr	r3, [sp, #12]
   1e51c:	cmp	r2, #46	; 0x2e
   1e520:	mov	r2, r0
   1e524:	addeq	r2, r1, #18
   1e528:	cmp	r2, r0
   1e52c:	beq	1f0b4 <main@@Base+0xbdbc>
   1e530:	ldr	r0, [sp, #24]
   1e534:	mov	r1, r2
   1e538:	mov	r2, r8
   1e53c:	sub	sp, fp, #28
   1e540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e544:	b	25178 <main@@Base+0x11e80>
   1e548:	movw	r7, #11855	; 0x2e4f
   1e54c:	eor	r2, r2, r0
   1e550:	movt	r7, #28005	; 0x6d65
   1e554:	eor	r7, sl, r7
   1e558:	orrs	r0, r7, r2
   1e55c:	beq	1e6f4 <main@@Base+0xb3fc>
   1e560:	movw	r0, #11845	; 0x2e45
   1e564:	movt	r0, #28005	; 0x6d65
   1e568:	eor	r0, sl, r0
   1e56c:	orrs	r0, r0, r2
   1e570:	bne	1f0b4 <main@@Base+0xbdbc>
   1e574:	add	lr, r1, #8
   1e578:	sub	r0, r8, lr
   1e57c:	cmp	r0, #8
   1e580:	movcs	r0, #8
   1e584:	sub	r7, r0, #1
   1e588:	cmp	r7, #7
   1e58c:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e590:	str	r3, [sp, #12]
   1e594:	add	sl, pc, #32
   1e598:	mov	r0, #0
   1e59c:	mov	ip, #0
   1e5a0:	mov	r9, #0
   1e5a4:	mov	r4, #0
   1e5a8:	mov	r6, #0
   1e5ac:	mov	r5, #0
   1e5b0:	mov	r2, #0
   1e5b4:	mov	r3, #0
   1e5b8:	ldr	pc, [sl, r7, lsl #2]
   1e5bc:	andeq	lr, r1, r0, lsr #12
   1e5c0:	andeq	lr, r1, r8, lsl r6
   1e5c4:	andeq	lr, r1, r0, lsl r6
   1e5c8:	andeq	lr, r1, r8, lsl #12
   1e5cc:	strdeq	lr, [r1], -ip
   1e5d0:	strdeq	lr, [r1], -r0
   1e5d4:	andeq	lr, r1, r0, ror #11
   1e5d8:	ldrdeq	lr, [r1], -ip
   1e5dc:	ldrb	ip, [r1, #15]
   1e5e0:	ldrb	r2, [r1, #14]
   1e5e4:	mov	r9, r0
   1e5e8:	orr	r2, ip, r2, lsl #8
   1e5ec:	mov	r0, r2
   1e5f0:	ldrb	r2, [r1, #13]
   1e5f4:	mov	r4, r9
   1e5f8:	orr	r0, r0, r2, lsl #16
   1e5fc:	ldrb	r2, [r1, #12]
   1e600:	mov	r6, r4
   1e604:	orr	r0, r0, r2, lsl #24
   1e608:	ldrb	r2, [r1, #11]
   1e60c:	orr	r5, r2, r6
   1e610:	ldrb	r2, [r1, #10]
   1e614:	orr	r2, r5, r2, lsl #8
   1e618:	ldrb	r3, [r1, #9]
   1e61c:	orr	r3, r2, r3, lsl #16
   1e620:	ldrb	r2, [lr]
   1e624:	movw	r6, #11880	; 0x2e68
   1e628:	movt	r6, #27749	; 0x6c65
   1e62c:	subs	r7, r0, r6
   1e630:	orr	r2, r3, r2, lsl #24
   1e634:	movw	r3, #28016	; 0x6d70
   1e638:	movt	r3, #30817	; 0x7861
   1e63c:	sbcs	r7, r2, r3
   1e640:	bcs	1eab0 <main@@Base+0xb7b8>
   1e644:	ldr	lr, [sp, #12]
   1e648:	subs	r7, r6, #37	; 0x25
   1e64c:	sbc	r5, r3, #0
   1e650:	subs	r7, r0, r7
   1e654:	sbcs	r7, r2, r5
   1e658:	bcs	1ebc8 <main@@Base+0xb8d0>
   1e65c:	subs	r7, r6, #39	; 0x27
   1e660:	sbc	r3, r3, #0
   1e664:	eor	r0, r0, r7
   1e668:	eor	r2, r2, r3
   1e66c:	orrs	r0, r0, r2
   1e670:	bne	1f0b4 <main@@Base+0xbdbc>
   1e674:	add	r0, r1, #16
   1e678:	sub	r6, r8, r0
   1e67c:	cmp	r6, #8
   1e680:	mov	r2, r6
   1e684:	movcs	r2, #8
   1e688:	sub	r3, r2, #2
   1e68c:	cmp	r3, #7
   1e690:	bcs	1f090 <main@@Base+0xbd98>
   1e694:	ldrb	r2, [r1, #17]
   1e698:	mov	r3, #0
   1e69c:	lsl	r7, r2, #16
   1e6a0:	cmp	r6, #3
   1e6a4:	blt	1f0b4 <main@@Base+0xbdbc>
   1e6a8:	ldrb	r2, [r0]
   1e6ac:	orr	r2, r7, r2, lsl #24
   1e6b0:	eor	r2, r2, #7929856	; 0x790000
   1e6b4:	eor	r2, r2, #1845493760	; 0x6e000000
   1e6b8:	orrs	r2, r3, r2
   1e6bc:	bne	1f0b4 <main@@Base+0xbdbc>
   1e6c0:	ldrb	r2, [r1, #18]
   1e6c4:	cmp	r2, #46	; 0x2e
   1e6c8:	mov	r2, r0
   1e6cc:	addeq	r2, r1, #19
   1e6d0:	cmp	r2, r0
   1e6d4:	beq	1f0b4 <main@@Base+0xbdbc>
   1e6d8:	ldr	r0, [sp, #24]
   1e6dc:	mov	r1, r2
   1e6e0:	mov	r2, r8
   1e6e4:	mov	r3, lr
   1e6e8:	sub	sp, fp, #28
   1e6ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6f0:	b	235cc <main@@Base+0x102d4>
   1e6f4:	add	lr, r1, #8
   1e6f8:	sub	r0, r8, lr
   1e6fc:	cmp	r0, #8
   1e700:	movcs	r0, #8
   1e704:	sub	r7, r0, #1
   1e708:	cmp	r7, #7
   1e70c:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e710:	str	r3, [sp, #12]
   1e714:	add	r3, pc, #32
   1e718:	mov	r2, #0
   1e71c:	mov	ip, #0
   1e720:	mov	sl, #0
   1e724:	mov	r4, #0
   1e728:	mov	r6, #0
   1e72c:	mov	r5, #0
   1e730:	mov	r0, #0
   1e734:	mov	r9, #0
   1e738:	ldr	pc, [r3, r7, lsl #2]
   1e73c:	andeq	lr, r1, r0, lsr #15
   1e740:	muleq	r1, r8, r7
   1e744:	muleq	r1, r0, r7
   1e748:	andeq	lr, r1, r8, lsl #15
   1e74c:	andeq	lr, r1, ip, ror r7
   1e750:	andeq	lr, r1, r0, ror r7
   1e754:	andeq	lr, r1, r0, ror #14
   1e758:	andeq	lr, r1, ip, asr r7
   1e75c:	ldrb	ip, [r1, #15]
   1e760:	ldrb	r0, [r1, #14]
   1e764:	mov	sl, r2
   1e768:	orr	r0, ip, r0, lsl #8
   1e76c:	mov	r2, r0
   1e770:	ldrb	r0, [r1, #13]
   1e774:	mov	r4, sl
   1e778:	orr	r2, r2, r0, lsl #16
   1e77c:	ldrb	r0, [r1, #12]
   1e780:	mov	r6, r4
   1e784:	orr	r2, r2, r0, lsl #24
   1e788:	ldrb	r0, [r1, #11]
   1e78c:	orr	r5, r0, r6
   1e790:	ldrb	r0, [r1, #10]
   1e794:	orr	r0, r5, r0, lsl #8
   1e798:	ldrb	r3, [r1, #9]
   1e79c:	orr	r9, r0, r3, lsl #16
   1e7a0:	movw	r0, #28005	; 0x6d65
   1e7a4:	movw	r3, #25970	; 0x6572
   1e7a8:	movt	r0, #20065	; 0x4e61
   1e7ac:	movt	r3, #29800	; 0x7468
   1e7b0:	eor	r0, r2, r0
   1e7b4:	ldrb	r2, [lr]
   1e7b8:	orr	r2, r9, r2, lsl #24
   1e7bc:	eor	r2, r2, r3
   1e7c0:	orrs	r0, r0, r2
   1e7c4:	bne	1f0b4 <main@@Base+0xbdbc>
   1e7c8:	add	lr, r1, #16
   1e7cc:	sub	r0, r8, lr
   1e7d0:	cmp	r0, #8
   1e7d4:	movcs	r0, #8
   1e7d8:	sub	r7, r0, #1
   1e7dc:	cmp	r7, #7
   1e7e0:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e7e4:	add	r2, pc, #32
   1e7e8:	mov	sl, #0
   1e7ec:	mov	ip, #0
   1e7f0:	mov	r9, #0
   1e7f4:	mov	r4, #0
   1e7f8:	mov	r6, #0
   1e7fc:	mov	r5, #0
   1e800:	mov	r0, #0
   1e804:	mov	r3, #0
   1e808:	ldr	pc, [r2, r7, lsl #2]
   1e80c:	andeq	lr, r1, r0, ror r8
   1e810:	andeq	lr, r1, r8, ror #16
   1e814:	andeq	lr, r1, r0, ror #16
   1e818:	andeq	lr, r1, r8, asr r8
   1e81c:	andeq	lr, r1, ip, asr #16
   1e820:	andeq	lr, r1, r0, asr #16
   1e824:	andeq	lr, r1, r0, lsr r8
   1e828:	andeq	lr, r1, ip, lsr #16
   1e82c:	ldrb	ip, [r1, #23]
   1e830:	ldrb	r0, [r1, #22]
   1e834:	mov	r9, sl
   1e838:	orr	r0, ip, r0, lsl #8
   1e83c:	mov	sl, r0
   1e840:	ldrb	r0, [r1, #21]
   1e844:	mov	r4, r9
   1e848:	orr	sl, sl, r0, lsl #16
   1e84c:	ldrb	r0, [r1, #20]
   1e850:	mov	r6, r4
   1e854:	orr	sl, sl, r0, lsl #24
   1e858:	ldrb	r0, [r1, #19]
   1e85c:	orr	r5, r0, r6
   1e860:	ldrb	r0, [r1, #18]
   1e864:	orr	r0, r5, r0, lsl #8
   1e868:	ldrb	r2, [r1, #17]
   1e86c:	orr	r3, r0, r2, lsl #16
   1e870:	ldrb	r2, [lr]
   1e874:	movw	r0, #18034	; 0x4672
   1e878:	movt	r0, #25902	; 0x652e
   1e87c:	eor	r0, sl, r0
   1e880:	orr	r2, r3, r2, lsl #24
   1e884:	movw	r3, #24931	; 0x6163
   1e888:	movt	r3, #21360	; 0x5370
   1e88c:	eor	r2, r2, r3
   1e890:	orrs	r0, r0, r2
   1e894:	bne	1f0b4 <main@@Base+0xbdbc>
   1e898:	add	lr, r1, #24
   1e89c:	sub	r0, r8, lr
   1e8a0:	cmp	r0, #8
   1e8a4:	movcs	r0, #8
   1e8a8:	sub	r7, r0, #1
   1e8ac:	cmp	r7, #7
   1e8b0:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e8b4:	add	r2, pc, #32
   1e8b8:	mov	sl, #0
   1e8bc:	mov	ip, #0
   1e8c0:	mov	r9, #0
   1e8c4:	mov	r4, #0
   1e8c8:	mov	r6, #0
   1e8cc:	mov	r5, #0
   1e8d0:	mov	r0, #0
   1e8d4:	mov	r3, #0
   1e8d8:	ldr	pc, [r2, r7, lsl #2]
   1e8dc:	andeq	lr, r1, r0, asr #18
   1e8e0:	andeq	lr, r1, r8, lsr r9
   1e8e4:	andeq	lr, r1, r0, lsr r9
   1e8e8:	andeq	lr, r1, r8, lsr #18
   1e8ec:	andeq	lr, r1, ip, lsl r9
   1e8f0:	andeq	lr, r1, r0, lsl r9
   1e8f4:	andeq	lr, r1, r0, lsl #18
   1e8f8:	strdeq	lr, [r1], -ip
   1e8fc:	ldrb	ip, [r1, #31]
   1e900:	ldrb	r0, [r1, #30]
   1e904:	mov	r9, sl
   1e908:	orr	r0, ip, r0, lsl #8
   1e90c:	mov	sl, r0
   1e910:	ldrb	r0, [r1, #29]
   1e914:	mov	r4, r9
   1e918:	orr	sl, sl, r0, lsl #16
   1e91c:	ldrb	r0, [r1, #28]
   1e920:	mov	r6, r4
   1e924:	orr	sl, sl, r0, lsl #24
   1e928:	ldrb	r0, [r1, #27]
   1e92c:	orr	r5, r0, r6
   1e930:	ldrb	r0, [r1, #26]
   1e934:	orr	r0, r5, r0, lsl #8
   1e938:	ldrb	r2, [r1, #25]
   1e93c:	orr	r3, r0, r2, lsl #16
   1e940:	ldrb	r2, [lr]
   1e944:	movw	r0, #30052	; 0x7564
   1e948:	movt	r0, #25452	; 0x636c
   1e94c:	eor	r0, sl, r0
   1e950:	orr	r2, r3, r2, lsl #24
   1e954:	movw	r3, #18798	; 0x496e
   1e958:	movt	r3, #28525	; 0x6f6d
   1e95c:	eor	r2, r2, r3
   1e960:	orrs	r0, r0, r2
   1e964:	bne	1f0b4 <main@@Base+0xbdbc>
   1e968:	add	r0, r1, #32
   1e96c:	sub	r2, r8, r0
   1e970:	cmp	r2, #8
   1e974:	mov	r3, r2
   1e978:	movcs	r3, #8
   1e97c:	sub	r3, r3, #1
   1e980:	cmp	r3, #7
   1e984:	bhi	1f0b4 <main@@Base+0xbdbc>
   1e988:	cmp	r2, #2
   1e98c:	blt	1f0b4 <main@@Base+0xbdbc>
   1e990:	ldrb	r2, [r0]
   1e994:	cmp	r2, #101	; 0x65
   1e998:	bne	1f0b4 <main@@Base+0xbdbc>
   1e99c:	ldrb	r2, [r1, #33]	; 0x21
   1e9a0:	ldr	r9, [sp, #12]
   1e9a4:	mov	r7, r0
   1e9a8:	cmp	r2, #46	; 0x2e
   1e9ac:	addeq	r7, r1, #34	; 0x22
   1e9b0:	cmp	r7, r0
   1e9b4:	beq	1f0b4 <main@@Base+0xbdbc>
   1e9b8:	sub	r0, r8, r7
   1e9bc:	cmp	r0, #8
   1e9c0:	movcs	r0, #8
   1e9c4:	sub	r2, r0, #1
   1e9c8:	cmp	r2, #7
   1e9cc:	bhi	1f170 <main@@Base+0xbe78>
   1e9d0:	add	r5, pc, #32
   1e9d4:	mov	sl, #0
   1e9d8:	mov	ip, #0
   1e9dc:	mov	lr, #0
   1e9e0:	mov	r1, #0
   1e9e4:	mov	r3, #0
   1e9e8:	mov	r6, #0
   1e9ec:	mov	r4, #0
   1e9f0:	mov	r0, #0
   1e9f4:	ldr	pc, [r5, r2, lsl #2]
   1e9f8:	andeq	lr, r1, ip, asr sl
   1e9fc:	andeq	lr, r1, r4, asr sl
   1ea00:	andeq	lr, r1, ip, asr #20
   1ea04:	andeq	lr, r1, r4, asr #20
   1ea08:	andeq	lr, r1, r8, lsr sl
   1ea0c:	andeq	lr, r1, ip, lsr #20
   1ea10:	andeq	lr, r1, ip, lsl sl
   1ea14:	andeq	lr, r1, r8, lsl sl
   1ea18:	ldrb	ip, [r7, #7]
   1ea1c:	ldrb	r0, [r7, #6]
   1ea20:	mov	lr, sl
   1ea24:	orr	r0, ip, r0, lsl #8
   1ea28:	mov	sl, r0
   1ea2c:	ldrb	r0, [r7, #5]
   1ea30:	mov	r1, lr
   1ea34:	orr	sl, sl, r0, lsl #16
   1ea38:	ldrb	r0, [r7, #4]
   1ea3c:	mov	r3, r1
   1ea40:	orr	sl, sl, r0, lsl #24
   1ea44:	ldrb	r0, [r7, #3]
   1ea48:	orr	r6, r0, r3
   1ea4c:	ldrb	r0, [r7, #2]
   1ea50:	orr	r4, r6, r0, lsl #8
   1ea54:	ldrb	r0, [r7, #1]
   1ea58:	orr	r0, r4, r0, lsl #16
   1ea5c:	ldrb	r1, [r7]
   1ea60:	ldr	r4, [sp, #24]
   1ea64:	orr	r6, r0, r1, lsl #24
   1ea68:	movw	r1, #28416	; 0x6f00
   1ea6c:	movt	r1, #18031	; 0x466f
   1ea70:	bic	r0, r6, #255	; 0xff
   1ea74:	teq	r0, r1
   1ea78:	bne	1f0c0 <main@@Base+0xbdc8>
   1ea7c:	ldr	r0, [sp, #20]
   1ea80:	mov	r1, r7
   1ea84:	mov	r2, r8
   1ea88:	mov	r3, #3
   1ea8c:	str	r0, [sp]
   1ea90:	mov	r0, r4
   1ea94:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1ea98:	cmp	r0, r7
   1ea9c:	beq	1f0c0 <main@@Base+0xbdc8>
   1eaa0:	mov	r1, r0
   1eaa4:	mov	r3, #0
   1eaa8:	mov	r2, #17
   1eaac:	b	1f154 <main@@Base+0xbe5c>
   1eab0:	eor	r5, r0, r6
   1eab4:	eor	r7, r2, r3
   1eab8:	orrs	r5, r5, r7
   1eabc:	bne	1ecbc <main@@Base+0xb9c4>
   1eac0:	add	ip, r1, #16
   1eac4:	sub	r2, r8, ip
   1eac8:	cmp	r2, #8
   1eacc:	mov	r0, r2
   1ead0:	movcs	r0, #8
   1ead4:	sub	r4, r0, #1
   1ead8:	cmp	r4, #7
   1eadc:	bhi	1f0b4 <main@@Base+0xbdbc>
   1eae0:	add	r6, pc, #28
   1eae4:	mov	r9, #0
   1eae8:	mov	lr, #0
   1eaec:	mov	sl, #0
   1eaf0:	mov	r3, #0
   1eaf4:	mov	r5, #0
   1eaf8:	mov	r0, #0
   1eafc:	mov	r7, #0
   1eb00:	ldr	pc, [r6, r4, lsl #2]
   1eb04:	andeq	lr, r1, r0, ror #22
   1eb08:	andeq	lr, r1, r8, asr fp
   1eb0c:	andeq	lr, r1, r0, asr fp
   1eb10:	andeq	lr, r1, r8, asr #22
   1eb14:	andeq	lr, r1, ip, lsr fp
   1eb18:	andeq	lr, r1, ip, lsr #22
   1eb1c:	andeq	lr, r1, r4, lsr #22
   1eb20:	andeq	lr, r1, r4, lsr #22
   1eb24:	ldrb	r0, [r1, #22]
   1eb28:	lsl	lr, r0, #8
   1eb2c:	ldrb	r0, [r1, #21]
   1eb30:	mov	sl, r9
   1eb34:	orr	r0, lr, r0, lsl #16
   1eb38:	mov	r9, r0
   1eb3c:	ldrb	r0, [r1, #20]
   1eb40:	mov	r3, sl
   1eb44:	orr	r9, r9, r0, lsl #24
   1eb48:	ldrb	r0, [r1, #19]
   1eb4c:	orr	r5, r0, r3
   1eb50:	ldrb	r0, [r1, #18]
   1eb54:	orr	r0, r5, r0, lsl #8
   1eb58:	ldrb	r3, [r1, #17]
   1eb5c:	orr	r7, r0, r3, lsl #16
   1eb60:	cmp	r2, #8
   1eb64:	blt	1f0b4 <main@@Base+0xbdbc>
   1eb68:	ldrb	r0, [ip]
   1eb6c:	movw	r2, #24421	; 0x5f65
   1eb70:	movw	r3, #27904	; 0x6d00
   1eb74:	movt	r2, #25959	; 0x6567
   1eb78:	movt	r3, #28277	; 0x6e75
   1eb7c:	add	r2, r2, #1114112	; 0x110000
   1eb80:	eor	r3, r9, r3
   1eb84:	orr	r0, r7, r0, lsl #24
   1eb88:	eor	r0, r0, r2
   1eb8c:	orrs	r0, r3, r0
   1eb90:	bne	1f0b4 <main@@Base+0xbdbc>
   1eb94:	ldrb	r0, [r1, #23]
   1eb98:	ldr	r3, [sp, #12]
   1eb9c:	mov	r2, ip
   1eba0:	cmp	r0, #46	; 0x2e
   1eba4:	addeq	r2, r1, #24
   1eba8:	cmp	r2, ip
   1ebac:	beq	1f0b4 <main@@Base+0xbdbc>
   1ebb0:	ldr	r0, [sp, #24]
   1ebb4:	mov	r1, r2
   1ebb8:	mov	r2, r8
   1ebbc:	sub	sp, fp, #28
   1ebc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ebc4:	b	24c94 <main@@Base+0x1199c>
   1ebc8:	movw	r7, #11846	; 0x2e46
   1ebcc:	eor	r2, r2, r3
   1ebd0:	movt	r7, #27749	; 0x6c65
   1ebd4:	eor	r7, r0, r7
   1ebd8:	orrs	r3, r7, r2
   1ebdc:	beq	1ef14 <main@@Base+0xbc1c>
   1ebe0:	movw	r3, #11843	; 0x2e43
   1ebe4:	movt	r3, #27749	; 0x6c65
   1ebe8:	eor	r0, r0, r3
   1ebec:	orrs	r0, r0, r2
   1ebf0:	bne	1f0b4 <main@@Base+0xbdbc>
   1ebf4:	add	r0, r1, #16
   1ebf8:	sub	r2, r8, r0
   1ebfc:	cmp	r2, #8
   1ec00:	mov	r3, r2
   1ec04:	movcs	r3, #8
   1ec08:	sub	r6, r3, #1
   1ec0c:	cmp	r6, #7
   1ec10:	bhi	1f0b4 <main@@Base+0xbdbc>
   1ec14:	add	r3, pc, #16
   1ec18:	mov	ip, #0
   1ec1c:	mov	r7, #0
   1ec20:	mov	r4, #0
   1ec24:	mov	r5, #0
   1ec28:	ldr	pc, [r3, r6, lsl #2]
   1ec2c:	andeq	lr, r1, r4, ror #24
   1ec30:	andeq	lr, r1, ip, asr ip
   1ec34:	andeq	lr, r1, r4, asr ip
   1ec38:	andeq	lr, r1, ip, asr #24
   1ec3c:	andeq	lr, r1, ip, asr #24
   1ec40:	andeq	lr, r1, ip, asr #24
   1ec44:	andeq	lr, r1, ip, asr #24
   1ec48:	andeq	lr, r1, ip, asr #24
   1ec4c:	ldrb	r7, [r1, #19]
   1ec50:	mov	ip, #0
   1ec54:	ldrb	r3, [r1, #18]
   1ec58:	orr	r4, r7, r3, lsl #8
   1ec5c:	ldrb	r3, [r1, #17]
   1ec60:	orr	r5, r4, r3, lsl #16
   1ec64:	cmp	r2, #5
   1ec68:	blt	1f0b4 <main@@Base+0xbdbc>
   1ec6c:	ldrb	r2, [r0]
   1ec70:	movw	r3, #28530	; 0x6f72
   1ec74:	movt	r3, #28524	; 0x6f6c
   1ec78:	orr	r2, r5, r2, lsl #24
   1ec7c:	eor	r2, r2, r3
   1ec80:	orrs	r2, ip, r2
   1ec84:	bne	1f0b4 <main@@Base+0xbdbc>
   1ec88:	ldrb	r2, [r1, #20]
   1ec8c:	cmp	r2, #46	; 0x2e
   1ec90:	mov	r2, r0
   1ec94:	addeq	r2, r1, #21
   1ec98:	cmp	r2, r0
   1ec9c:	beq	1f0b4 <main@@Base+0xbdbc>
   1eca0:	ldr	r0, [sp, #24]
   1eca4:	mov	r1, r2
   1eca8:	mov	r2, r8
   1ecac:	mov	r3, lr
   1ecb0:	sub	sp, fp, #28
   1ecb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ecb8:	b	1dd1c <main@@Base+0xaa24>
   1ecbc:	add	r5, r6, #6
   1ecc0:	subs	r4, r0, r5
   1ecc4:	sbcs	r2, r2, r3
   1ecc8:	bcs	1ede8 <main@@Base+0xbaf0>
   1eccc:	add	r2, r6, #1
   1ecd0:	eor	r0, r0, r2
   1ecd4:	orrs	r0, r0, r7
   1ecd8:	bne	1f0b4 <main@@Base+0xbdbc>
   1ecdc:	add	ip, r1, #16
   1ece0:	sub	r2, r8, ip
   1ece4:	cmp	r2, #8
   1ece8:	mov	r0, r2
   1ecec:	movcs	r0, #8
   1ecf0:	sub	r4, r0, #1
   1ecf4:	cmp	r4, #7
   1ecf8:	bhi	1f0b4 <main@@Base+0xbdbc>
   1ecfc:	add	r6, pc, #28
   1ed00:	mov	r9, #0
   1ed04:	mov	lr, #0
   1ed08:	mov	sl, #0
   1ed0c:	mov	r3, #0
   1ed10:	mov	r5, #0
   1ed14:	mov	r7, #0
   1ed18:	mov	r0, #0
   1ed1c:	ldr	pc, [r6, r4, lsl #2]
   1ed20:	andeq	lr, r1, ip, ror sp
   1ed24:	andeq	lr, r1, r4, ror sp
   1ed28:	andeq	lr, r1, ip, ror #26
   1ed2c:	andeq	lr, r1, r4, ror #26
   1ed30:	andeq	lr, r1, r8, asr sp
   1ed34:	andeq	lr, r1, r8, asr #26
   1ed38:	andeq	lr, r1, r0, asr #26
   1ed3c:	andeq	lr, r1, r0, asr #26
   1ed40:	ldrb	r0, [r1, #22]
   1ed44:	lsl	lr, r0, #8
   1ed48:	ldrb	r0, [r1, #21]
   1ed4c:	mov	sl, r9
   1ed50:	orr	r0, lr, r0, lsl #16
   1ed54:	mov	r9, r0
   1ed58:	ldrb	r0, [r1, #20]
   1ed5c:	mov	r3, sl
   1ed60:	orr	r9, r9, r0, lsl #24
   1ed64:	ldrb	r0, [r1, #19]
   1ed68:	orr	r5, r0, r3
   1ed6c:	ldrb	r0, [r1, #18]
   1ed70:	orr	r7, r5, r0, lsl #8
   1ed74:	ldrb	r0, [r1, #17]
   1ed78:	orr	r0, r7, r0, lsl #16
   1ed7c:	cmp	r2, #8
   1ed80:	blt	1f0b4 <main@@Base+0xbdbc>
   1ed84:	ldrb	r3, [ip]
   1ed88:	movw	r2, #24421	; 0x5f65
   1ed8c:	movt	r2, #25959	; 0x6567
   1ed90:	add	r2, r2, #851968	; 0xd0000
   1ed94:	orr	r0, r0, r3, lsl #24
   1ed98:	movw	r3, #27904	; 0x6d00
   1ed9c:	add	r2, r2, #150994944	; 0x9000000
   1eda0:	movt	r3, #28277	; 0x6e75
   1eda4:	eor	r0, r0, r2
   1eda8:	eor	r3, r9, r3
   1edac:	orrs	r0, r3, r0
   1edb0:	bne	1f0b4 <main@@Base+0xbdbc>
   1edb4:	ldrb	r0, [r1, #23]
   1edb8:	ldr	r3, [sp, #12]
   1edbc:	mov	r2, ip
   1edc0:	cmp	r0, #46	; 0x2e
   1edc4:	addeq	r2, r1, #24
   1edc8:	cmp	r2, ip
   1edcc:	beq	1f0b4 <main@@Base+0xbdbc>
   1edd0:	ldr	r0, [sp, #24]
   1edd4:	mov	r1, r2
   1edd8:	mov	r2, r8
   1eddc:	sub	sp, fp, #28
   1ede0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ede4:	b	24e40 <main@@Base+0x11b48>
   1ede8:	eor	r0, r0, r5
   1edec:	orrs	r0, r0, r7
   1edf0:	bne	1f0b4 <main@@Base+0xbdbc>
   1edf4:	add	lr, r1, #16
   1edf8:	sub	r2, r8, lr
   1edfc:	cmp	r2, #8
   1ee00:	mov	r0, r2
   1ee04:	movcs	r0, #8
   1ee08:	sub	r7, r0, #1
   1ee0c:	cmp	r7, #7
   1ee10:	bhi	1f0b4 <main@@Base+0xbdbc>
   1ee14:	add	r3, pc, #36	; 0x24
   1ee18:	mov	r0, #0
   1ee1c:	mov	sl, #0
   1ee20:	mov	r9, #0
   1ee24:	mov	r4, #0
   1ee28:	mov	r6, #0
   1ee2c:	mov	r5, #0
   1ee30:	mov	ip, #0
   1ee34:	str	r0, [sp, #8]
   1ee38:	mov	r0, #0
   1ee3c:	ldr	pc, [r3, r7, lsl #2]
   1ee40:	andeq	lr, r1, ip, lsr #29
   1ee44:	andeq	lr, r1, r4, lsr #29
   1ee48:	muleq	r1, ip, lr
   1ee4c:	muleq	r1, r4, lr
   1ee50:	andeq	lr, r1, r8, lsl #29
   1ee54:	andeq	lr, r1, ip, ror lr
   1ee58:	andeq	lr, r1, r8, ror #28
   1ee5c:	andeq	lr, r1, r0, ror #28
   1ee60:	ldrb	r0, [r1, #23]
   1ee64:	str	r0, [sp, #8]
   1ee68:	ldrb	r0, [r1, #22]
   1ee6c:	ldr	r3, [sp, #8]
   1ee70:	mov	r9, sl
   1ee74:	orr	r0, r3, r0, lsl #8
   1ee78:	mov	sl, r0
   1ee7c:	ldrb	r0, [r1, #21]
   1ee80:	mov	r4, r9
   1ee84:	orr	sl, sl, r0, lsl #16
   1ee88:	ldrb	r0, [r1, #20]
   1ee8c:	mov	r6, r4
   1ee90:	orr	sl, sl, r0, lsl #24
   1ee94:	ldrb	r0, [r1, #19]
   1ee98:	orr	r5, r0, r6
   1ee9c:	ldrb	r0, [r1, #18]
   1eea0:	orr	ip, r5, r0, lsl #8
   1eea4:	ldrb	r0, [r1, #17]
   1eea8:	orr	r0, ip, r0, lsl #16
   1eeac:	ldrb	r3, [lr]
   1eeb0:	movw	ip, #27904	; 0x6d00
   1eeb4:	cmp	r2, #8
   1eeb8:	movt	ip, #28277	; 0x6e75
   1eebc:	orr	r6, r0, r3, lsl #24
   1eec0:	blt	1ef94 <main@@Base+0xbc9c>
   1eec4:	movw	r2, #24421	; 0x5f65
   1eec8:	bic	r0, sl, #255	; 0xff
   1eecc:	movt	r2, #25959	; 0x6567
   1eed0:	eor	r0, r0, ip
   1eed4:	eor	r2, r6, r2
   1eed8:	orrs	r0, r0, r2
   1eedc:	bne	1ef94 <main@@Base+0xbc9c>
   1eee0:	ldrb	r0, [r1, #23]
   1eee4:	mov	r2, lr
   1eee8:	cmp	r0, #46	; 0x2e
   1eeec:	addeq	r2, r1, #24
   1eef0:	cmp	r2, lr
   1eef4:	beq	1ef94 <main@@Base+0xbc9c>
   1eef8:	ldr	r0, [sp, #24]
   1eefc:	ldr	r3, [sp, #12]
   1ef00:	mov	r1, r2
   1ef04:	mov	r2, r8
   1ef08:	sub	sp, fp, #28
   1ef0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef10:	b	25030 <main@@Base+0x11d38>
   1ef14:	add	r0, r1, #16
   1ef18:	sub	r6, r8, r0
   1ef1c:	cmp	r6, #8
   1ef20:	mov	r2, r6
   1ef24:	movcs	r2, #8
   1ef28:	sub	r3, r2, #2
   1ef2c:	cmp	r3, #7
   1ef30:	bcs	1f0a4 <main@@Base+0xbdac>
   1ef34:	ldrb	r2, [r1, #17]
   1ef38:	mov	r3, #0
   1ef3c:	lsl	r7, r2, #16
   1ef40:	cmp	r6, #3
   1ef44:	blt	1f0b4 <main@@Base+0xbdbc>
   1ef48:	ldrb	r2, [r0]
   1ef4c:	orr	r2, r7, r2, lsl #24
   1ef50:	eor	r2, r2, #7274496	; 0x6f0000
   1ef54:	eor	r2, r2, #1862270976	; 0x6f000000
   1ef58:	orrs	r2, r3, r2
   1ef5c:	bne	1f0b4 <main@@Base+0xbdbc>
   1ef60:	ldrb	r2, [r1, #18]
   1ef64:	cmp	r2, #46	; 0x2e
   1ef68:	mov	r2, r0
   1ef6c:	addeq	r2, r1, #19
   1ef70:	cmp	r2, r0
   1ef74:	beq	1f0b4 <main@@Base+0xbdbc>
   1ef78:	ldr	r0, [sp, #24]
   1ef7c:	mov	r1, r2
   1ef80:	mov	r2, r8
   1ef84:	mov	r3, lr
   1ef88:	sub	sp, fp, #28
   1ef8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef90:	b	24a34 <main@@Base+0x1173c>
   1ef94:	movw	r0, #31077	; 0x7965
   1ef98:	movw	r2, #25965	; 0x656d
   1ef9c:	movt	r0, #28788	; 0x7074
   1efa0:	movt	r2, #28532	; 0x6f74
   1efa4:	eor	r0, sl, r0
   1efa8:	eor	r2, r6, r2
   1efac:	orrs	r0, r0, r2
   1efb0:	bne	1f0b4 <main@@Base+0xbdbc>
   1efb4:	add	r0, r1, #24
   1efb8:	sub	r6, r8, r0
   1efbc:	cmp	r6, #8
   1efc0:	mov	r2, r6
   1efc4:	movcs	r2, #8
   1efc8:	sub	r3, r2, #3
   1efcc:	cmp	r3, #6
   1efd0:	bcs	1f180 <main@@Base+0xbe88>
   1efd4:	ldrb	r2, [r1, #26]
   1efd8:	ldr	r4, [sp, #12]
   1efdc:	mov	r3, #0
   1efe0:	lsl	r2, r2, #8
   1efe4:	ldrb	r7, [r1, #25]
   1efe8:	orr	r7, r2, r7, lsl #16
   1efec:	cmp	r6, #4
   1eff0:	blt	1f0b4 <main@@Base+0xbdbc>
   1eff4:	ldrb	r2, [r0]
   1eff8:	orr	r2, r7, r2, lsl #24
   1effc:	eor	r2, r2, ip
   1f000:	orrs	r2, r3, r2
   1f004:	bne	1f0b4 <main@@Base+0xbdbc>
   1f008:	ldrb	r2, [r1, #27]
   1f00c:	mov	r6, r0
   1f010:	cmp	r2, #46	; 0x2e
   1f014:	addeq	r6, r1, #28
   1f018:	cmp	r6, r0
   1f01c:	beq	1f0b4 <main@@Base+0xbdbc>
   1f020:	sub	r0, r8, r6
   1f024:	cmp	r0, #8
   1f028:	movcs	r0, #8
   1f02c:	sub	r0, r0, #1
   1f030:	cmp	r0, #7
   1f034:	bhi	1f1a0 <main@@Base+0xbea8>
   1f038:	ldrb	r0, [r6]
   1f03c:	cmp	r0, #120	; 0x78
   1f040:	bne	1f1a0 <main@@Base+0xbea8>
   1f044:	ldr	r0, [sp, #20]
   1f048:	mov	r1, r6
   1f04c:	mov	r2, r8
   1f050:	mov	r3, #1
   1f054:	str	r0, [sp]
   1f058:	ldr	r0, [sp, #24]
   1f05c:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1f060:	cmp	r0, r6
   1f064:	mov	r1, r6
   1f068:	beq	1f0b4 <main@@Base+0xbdbc>
   1f06c:	ldr	r2, [sp, #16]
   1f070:	mov	r1, #0
   1f074:	str	r1, [r2]
   1f078:	str	r1, [r2, #4]
   1f07c:	str	r1, [r4]
   1f080:	mov	r1, r0
   1f084:	mov	r0, r1
   1f088:	sub	sp, fp, #28
   1f08c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f090:	mov	r3, #0
   1f094:	cmp	r2, #1
   1f098:	mov	r7, #0
   1f09c:	beq	1e6a0 <main@@Base+0xb3a8>
   1f0a0:	b	1f0b4 <main@@Base+0xbdbc>
   1f0a4:	mov	r3, #0
   1f0a8:	cmp	r2, #1
   1f0ac:	mov	r7, #0
   1f0b0:	beq	1ef40 <main@@Base+0xbc48>
   1f0b4:	mov	r0, r1
   1f0b8:	sub	sp, fp, #28
   1f0bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0c0:	movw	r0, #25942	; 0x6556
   1f0c4:	movw	r1, #25452	; 0x636c
   1f0c8:	movt	r0, #30052	; 0x7564
   1f0cc:	movt	r1, #18798	; 0x496e
   1f0d0:	eor	r0, sl, r0
   1f0d4:	eor	r1, r6, r1
   1f0d8:	orrs	r0, r0, r1
   1f0dc:	bne	1f170 <main@@Base+0xbe78>
   1f0e0:	add	r6, r7, #8
   1f0e4:	sub	r1, r8, r6
   1f0e8:	cmp	r1, #8
   1f0ec:	movcs	r1, #8
   1f0f0:	sub	r0, r1, #2
   1f0f4:	cmp	r0, #7
   1f0f8:	bcs	1f1c0 <main@@Base+0xbec8>
   1f0fc:	ldrb	r0, [r7, #9]
   1f100:	lsl	r1, r0, #16
   1f104:	mov	r0, #0
   1f108:	ldrb	r2, [r6]
   1f10c:	orr	r1, r1, r2, lsl #24
   1f110:	eor	r1, r1, #23855104	; 0x16c0000
   1f114:	eor	r1, r1, #1610612736	; 0x60000000
   1f118:	orrs	r0, r0, r1
   1f11c:	bne	1f170 <main@@Base+0xbe78>
   1f120:	ldr	r0, [sp, #20]
   1f124:	mov	r1, r6
   1f128:	mov	r2, r8
   1f12c:	mov	r3, #2
   1f130:	str	r0, [sp]
   1f134:	mov	r0, r4
   1f138:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   1f13c:	cmp	r0, r6
   1f140:	mov	r1, r7
   1f144:	beq	1f0b4 <main@@Base+0xbdbc>
   1f148:	mov	r2, #0
   1f14c:	mov	r3, #0
   1f150:	mov	r1, r0
   1f154:	ldr	r0, [sp, #16]
   1f158:	strd	r2, [r0]
   1f15c:	mov	r0, #0
   1f160:	str	r0, [r9]
   1f164:	mov	r0, r1
   1f168:	sub	sp, fp, #28
   1f16c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f170:	mov	r1, r7
   1f174:	mov	r0, r1
   1f178:	sub	sp, fp, #28
   1f17c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f180:	ldr	r4, [sp, #12]
   1f184:	mov	r3, #0
   1f188:	cmp	r2, #1
   1f18c:	beq	1f1b0 <main@@Base+0xbeb8>
   1f190:	cmp	r2, #2
   1f194:	mov	r2, #0
   1f198:	beq	1efe4 <main@@Base+0xbcec>
   1f19c:	b	1f0b4 <main@@Base+0xbdbc>
   1f1a0:	mov	r1, r6
   1f1a4:	mov	r0, r1
   1f1a8:	sub	sp, fp, #28
   1f1ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1b0:	mov	r7, #0
   1f1b4:	cmp	r6, #4
   1f1b8:	bge	1eff4 <main@@Base+0xbcfc>
   1f1bc:	b	1f0b4 <main@@Base+0xbdbc>
   1f1c0:	cmp	r1, #1
   1f1c4:	mov	r0, #0
   1f1c8:	mov	r1, #0
   1f1cc:	beq	1f108 <main@@Base+0xbe10>
   1f1d0:	mov	r1, r7
   1f1d4:	mov	r0, r1
   1f1d8:	sub	sp, fp, #28
   1f1dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f1e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1e4:	add	fp, sp, #28
   1f1e8:	sub	sp, sp, #44	; 0x2c
   1f1ec:	mov	r6, r2
   1f1f0:	ldr	r2, [fp, #8]
   1f1f4:	mov	r5, r0
   1f1f8:	mov	r0, #0
   1f1fc:	mov	sl, r3
   1f200:	cmp	r1, r6
   1f204:	strb	r0, [r2]
   1f208:	beq	1f22c <main@@Base+0xbf34>
   1f20c:	ldrb	r0, [r1]
   1f210:	cmp	r0, #46	; 0x2e
   1f214:	beq	1f254 <main@@Base+0xbf5c>
   1f218:	cmp	r0, #34	; 0x22
   1f21c:	bne	1f438 <main@@Base+0xc140>
   1f220:	mov	r0, #0
   1f224:	add	r1, r1, #1
   1f228:	str	r0, [r5, #12]
   1f22c:	ldr	r0, [r5, #12]
   1f230:	cmp	r0, #0
   1f234:	beq	1f274 <main@@Base+0xbf7c>
   1f238:	mov	r7, r1
   1f23c:	cmp	r7, r6
   1f240:	bne	1f2b8 <main@@Base+0xbfc0>
   1f244:	mov	r4, r6
   1f248:	mov	r0, r4
   1f24c:	sub	sp, fp, #28
   1f250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f254:	mov	r0, r5
   1f258:	mov	r2, r6
   1f25c:	mov	r3, #5
   1f260:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f264:	mov	r1, r0
   1f268:	ldr	r0, [r5, #12]
   1f26c:	cmp	r0, #0
   1f270:	bne	1f238 <main@@Base+0xbf40>
   1f274:	sub	r0, r6, r1
   1f278:	cmp	r0, #2
   1f27c:	blt	1f2a0 <main@@Base+0xbfa8>
   1f280:	ldrb	r0, [r1]
   1f284:	cmp	r0, #32
   1f288:	bhi	1f238 <main@@Base+0xbf40>
   1f28c:	bne	1f2a0 <main@@Base+0xbfa8>
   1f290:	mov	r7, r1
   1f294:	ldrb	r0, [r7, #1]!
   1f298:	cmp	r0, #32
   1f29c:	bhi	1f2b0 <main@@Base+0xbfb8>
   1f2a0:	mov	r0, r5
   1f2a4:	mov	r2, r6
   1f2a8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1f2ac:	mov	r7, r0
   1f2b0:	cmp	r7, r6
   1f2b4:	beq	1f244 <main@@Base+0xbf4c>
   1f2b8:	add	r0, sl, #4
   1f2bc:	mov	r1, #0
   1f2c0:	mov	r2, #0
   1f2c4:	add	r8, sp, #32
   1f2c8:	add	r9, sp, #28
   1f2cc:	str	sl, [sp, #12]
   1f2d0:	str	r1, [sp, #20]
   1f2d4:	str	r0, [sp, #8]
   1f2d8:	ldr	r4, [sl]
   1f2dc:	mov	sl, r0
   1f2e0:	str	r2, [sp, #16]
   1f2e4:	add	r0, sp, #24
   1f2e8:	mov	r1, r7
   1f2ec:	mov	r2, r6
   1f2f0:	mov	r3, r9
   1f2f4:	str	r8, [sp]
   1f2f8:	str	r0, [sp, #4]
   1f2fc:	mov	r0, r5
   1f300:	blx	r4
   1f304:	cmp	r0, r6
   1f308:	beq	1f404 <main@@Base+0xc10c>
   1f30c:	mov	r4, r0
   1f310:	cmp	r0, r7
   1f314:	bne	1f328 <main@@Base+0xc030>
   1f318:	ldr	r4, [sl], #4
   1f31c:	cmp	r4, #0
   1f320:	bne	1f2e4 <main@@Base+0xbfec>
   1f324:	b	1f414 <main@@Base+0xc11c>
   1f328:	ldr	r7, [sp, #20]
   1f32c:	cmp	r7, #0
   1f330:	beq	1f340 <main@@Base+0xc048>
   1f334:	ldr	r0, [r5, #12]
   1f338:	cmp	r0, #0
   1f33c:	bne	1f450 <main@@Base+0xc158>
   1f340:	ldr	r2, [sp, #28]
   1f344:	ldr	r0, [sp, #32]
   1f348:	ldr	r1, [sp, #36]	; 0x24
   1f34c:	cmp	r2, #0
   1f350:	beq	1f378 <main@@Base+0xc080>
   1f354:	ldr	sl, [sp, #12]
   1f358:	subs	r2, r0, #129	; 0x81
   1f35c:	sbcs	r1, r1, #0
   1f360:	bcc	1f3ac <main@@Base+0xc0b4>
   1f364:	mov	r0, r5
   1f368:	mov	r1, r4
   1f36c:	mov	r2, r6
   1f370:	mov	r3, #8
   1f374:	b	1f398 <main@@Base+0xc0a0>
   1f378:	ldr	sl, [sp, #12]
   1f37c:	subs	r2, r0, #128	; 0x80
   1f380:	sbcs	r1, r1, #0
   1f384:	bcc	1f3c0 <main@@Base+0xc0c8>
   1f388:	mov	r0, r5
   1f38c:	mov	r1, r4
   1f390:	mov	r2, r6
   1f394:	mov	r3, #7
   1f398:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f39c:	ldr	r2, [sp, #16]
   1f3a0:	cmp	r0, r6
   1f3a4:	bne	1f3d0 <main@@Base+0xc0d8>
   1f3a8:	b	1f404 <main@@Base+0xc10c>
   1f3ac:	rsb	r2, r0, #0
   1f3b0:	mov	r0, r4
   1f3b4:	cmp	r0, r6
   1f3b8:	bne	1f3d0 <main@@Base+0xc0d8>
   1f3bc:	b	1f404 <main@@Base+0xc10c>
   1f3c0:	mov	r2, r0
   1f3c4:	mov	r0, r4
   1f3c8:	cmp	r0, r6
   1f3cc:	beq	1f404 <main@@Base+0xc10c>
   1f3d0:	ldr	r0, [fp, #8]
   1f3d4:	add	r7, r7, #1
   1f3d8:	str	r7, [sp, #20]
   1f3dc:	mov	r7, r4
   1f3e0:	mov	r1, r0
   1f3e4:	ldrb	r0, [r0]
   1f3e8:	add	r0, r0, r2
   1f3ec:	strb	r0, [r1]
   1f3f0:	ldr	r0, [sp, #24]
   1f3f4:	cmp	r0, #0
   1f3f8:	ldr	r0, [sp, #8]
   1f3fc:	bne	1f2d8 <main@@Base+0xbfe0>
   1f400:	b	1f248 <main@@Base+0xbf50>
   1f404:	mov	r4, r6
   1f408:	mov	r0, r4
   1f40c:	sub	sp, fp, #28
   1f410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f414:	mov	r0, r5
   1f418:	mov	r1, r7
   1f41c:	mov	r2, r6
   1f420:	mov	r3, #23
   1f424:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f428:	mov	r4, r0
   1f42c:	mov	r0, r4
   1f430:	sub	sp, fp, #28
   1f434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f438:	mov	r0, #1
   1f43c:	str	r0, [r5, #12]
   1f440:	ldr	r0, [r5, #12]
   1f444:	cmp	r0, #0
   1f448:	bne	1f238 <main@@Base+0xbf40>
   1f44c:	b	1f274 <main@@Base+0xbf7c>
   1f450:	mov	r0, r5
   1f454:	mov	r1, r4
   1f458:	mov	r2, r6
   1f45c:	mov	r3, #14
   1f460:	b	1f424 <main@@Base+0xc12c>
   1f464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f468:	add	fp, sp, #28
   1f46c:	sub	sp, sp, #44	; 0x2c
   1f470:	mov	r6, r2
   1f474:	ldr	r2, [fp, #8]
   1f478:	mov	r5, r0
   1f47c:	mov	r0, #0
   1f480:	mov	sl, r3
   1f484:	cmp	r1, r6
   1f488:	strb	r0, [r2]
   1f48c:	beq	1f4b0 <main@@Base+0xc1b8>
   1f490:	ldrb	r0, [r1]
   1f494:	cmp	r0, #46	; 0x2e
   1f498:	beq	1f4d8 <main@@Base+0xc1e0>
   1f49c:	cmp	r0, #34	; 0x22
   1f4a0:	bne	1f6a8 <main@@Base+0xc3b0>
   1f4a4:	mov	r0, #0
   1f4a8:	add	r1, r1, #1
   1f4ac:	str	r0, [r5, #12]
   1f4b0:	ldr	r0, [r5, #12]
   1f4b4:	cmp	r0, #0
   1f4b8:	beq	1f4f8 <main@@Base+0xc200>
   1f4bc:	mov	r7, r1
   1f4c0:	cmp	r7, r6
   1f4c4:	bne	1f53c <main@@Base+0xc244>
   1f4c8:	mov	r4, r6
   1f4cc:	mov	r0, r4
   1f4d0:	sub	sp, fp, #28
   1f4d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f4d8:	mov	r0, r5
   1f4dc:	mov	r2, r6
   1f4e0:	mov	r3, #5
   1f4e4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f4e8:	mov	r1, r0
   1f4ec:	ldr	r0, [r5, #12]
   1f4f0:	cmp	r0, #0
   1f4f4:	bne	1f4bc <main@@Base+0xc1c4>
   1f4f8:	sub	r0, r6, r1
   1f4fc:	cmp	r0, #2
   1f500:	blt	1f524 <main@@Base+0xc22c>
   1f504:	ldrb	r0, [r1]
   1f508:	cmp	r0, #32
   1f50c:	bhi	1f4bc <main@@Base+0xc1c4>
   1f510:	bne	1f524 <main@@Base+0xc22c>
   1f514:	mov	r7, r1
   1f518:	ldrb	r0, [r7, #1]!
   1f51c:	cmp	r0, #32
   1f520:	bhi	1f534 <main@@Base+0xc23c>
   1f524:	mov	r0, r5
   1f528:	mov	r2, r6
   1f52c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1f530:	mov	r7, r0
   1f534:	cmp	r7, r6
   1f538:	beq	1f4c8 <main@@Base+0xc1d0>
   1f53c:	mov	r1, #0
   1f540:	add	r0, sl, #4
   1f544:	add	r8, sp, #32
   1f548:	add	r9, sp, #28
   1f54c:	str	sl, [sp, #12]
   1f550:	str	r1, [sp, #16]
   1f554:	mov	r1, #0
   1f558:	str	r0, [sp, #8]
   1f55c:	str	r1, [sp, #20]
   1f560:	ldr	r4, [sl]
   1f564:	mov	sl, r0
   1f568:	add	r0, sp, #24
   1f56c:	mov	r1, r7
   1f570:	mov	r2, r6
   1f574:	mov	r3, r9
   1f578:	str	r8, [sp]
   1f57c:	str	r0, [sp, #4]
   1f580:	mov	r0, r5
   1f584:	blx	r4
   1f588:	cmp	r0, r6
   1f58c:	beq	1f674 <main@@Base+0xc37c>
   1f590:	mov	r4, r0
   1f594:	cmp	r0, r7
   1f598:	bne	1f5ac <main@@Base+0xc2b4>
   1f59c:	ldr	r4, [sl], #4
   1f5a0:	cmp	r4, #0
   1f5a4:	bne	1f568 <main@@Base+0xc270>
   1f5a8:	b	1f684 <main@@Base+0xc38c>
   1f5ac:	ldr	r7, [sp, #20]
   1f5b0:	cmp	r7, #0
   1f5b4:	beq	1f5c4 <main@@Base+0xc2cc>
   1f5b8:	ldr	r0, [r5, #12]
   1f5bc:	cmp	r0, #0
   1f5c0:	bne	1f6c0 <main@@Base+0xc3c8>
   1f5c4:	ldr	r0, [sp, #28]
   1f5c8:	cmp	r0, #0
   1f5cc:	beq	1f5f4 <main@@Base+0xc2fc>
   1f5d0:	mov	r0, r5
   1f5d4:	mov	r1, r4
   1f5d8:	mov	r2, r6
   1f5dc:	mov	r3, #8
   1f5e0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f5e4:	ldr	sl, [sp, #12]
   1f5e8:	cmp	r0, r6
   1f5ec:	bne	1f63c <main@@Base+0xc344>
   1f5f0:	b	1f674 <main@@Base+0xc37c>
   1f5f4:	ldr	r0, [sp, #32]
   1f5f8:	ldr	r1, [sp, #36]	; 0x24
   1f5fc:	ldr	sl, [sp, #12]
   1f600:	subs	r2, r0, #256	; 0x100
   1f604:	sbcs	r1, r1, #0
   1f608:	bcc	1f62c <main@@Base+0xc334>
   1f60c:	mov	r0, r5
   1f610:	mov	r1, r4
   1f614:	mov	r2, r6
   1f618:	mov	r3, #7
   1f61c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f620:	cmp	r0, r6
   1f624:	bne	1f63c <main@@Base+0xc344>
   1f628:	b	1f674 <main@@Base+0xc37c>
   1f62c:	str	r0, [sp, #16]
   1f630:	mov	r0, r4
   1f634:	cmp	r0, r6
   1f638:	beq	1f674 <main@@Base+0xc37c>
   1f63c:	ldr	r0, [fp, #8]
   1f640:	ldr	r2, [sp, #16]
   1f644:	add	r7, r7, #1
   1f648:	str	r7, [sp, #20]
   1f64c:	mov	r7, r4
   1f650:	mov	r1, r0
   1f654:	ldrb	r0, [r0]
   1f658:	add	r0, r0, r2
   1f65c:	strb	r0, [r1]
   1f660:	ldr	r0, [sp, #24]
   1f664:	cmp	r0, #0
   1f668:	ldr	r0, [sp, #8]
   1f66c:	bne	1f560 <main@@Base+0xc268>
   1f670:	b	1f4cc <main@@Base+0xc1d4>
   1f674:	mov	r4, r6
   1f678:	mov	r0, r4
   1f67c:	sub	sp, fp, #28
   1f680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f684:	mov	r0, r5
   1f688:	mov	r1, r7
   1f68c:	mov	r2, r6
   1f690:	mov	r3, #23
   1f694:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f698:	mov	r4, r0
   1f69c:	mov	r0, r4
   1f6a0:	sub	sp, fp, #28
   1f6a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f6a8:	mov	r0, #1
   1f6ac:	str	r0, [r5, #12]
   1f6b0:	ldr	r0, [r5, #12]
   1f6b4:	cmp	r0, #0
   1f6b8:	bne	1f4bc <main@@Base+0xc1c4>
   1f6bc:	b	1f4f8 <main@@Base+0xc200>
   1f6c0:	mov	r0, r5
   1f6c4:	mov	r1, r4
   1f6c8:	mov	r2, r6
   1f6cc:	mov	r3, #14
   1f6d0:	b	1f694 <main@@Base+0xc39c>
   1f6d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f6d8:	add	fp, sp, #28
   1f6dc:	sub	sp, sp, #44	; 0x2c
   1f6e0:	mov	r6, r2
   1f6e4:	ldr	r2, [fp, #8]
   1f6e8:	mov	r5, r0
   1f6ec:	mov	r0, #0
   1f6f0:	mov	sl, r3
   1f6f4:	cmp	r1, r6
   1f6f8:	strh	r0, [r2]
   1f6fc:	beq	1f720 <main@@Base+0xc428>
   1f700:	ldrb	r0, [r1]
   1f704:	cmp	r0, #46	; 0x2e
   1f708:	beq	1f748 <main@@Base+0xc450>
   1f70c:	cmp	r0, #34	; 0x22
   1f710:	bne	1f930 <main@@Base+0xc638>
   1f714:	mov	r0, #0
   1f718:	add	r1, r1, #1
   1f71c:	str	r0, [r5, #12]
   1f720:	ldr	r0, [r5, #12]
   1f724:	cmp	r0, #0
   1f728:	beq	1f768 <main@@Base+0xc470>
   1f72c:	mov	r7, r1
   1f730:	cmp	r7, r6
   1f734:	bne	1f7ac <main@@Base+0xc4b4>
   1f738:	mov	r4, r6
   1f73c:	mov	r0, r4
   1f740:	sub	sp, fp, #28
   1f744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f748:	mov	r0, r5
   1f74c:	mov	r2, r6
   1f750:	mov	r3, #5
   1f754:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f758:	mov	r1, r0
   1f75c:	ldr	r0, [r5, #12]
   1f760:	cmp	r0, #0
   1f764:	bne	1f72c <main@@Base+0xc434>
   1f768:	sub	r0, r6, r1
   1f76c:	cmp	r0, #2
   1f770:	blt	1f794 <main@@Base+0xc49c>
   1f774:	ldrb	r0, [r1]
   1f778:	cmp	r0, #32
   1f77c:	bhi	1f72c <main@@Base+0xc434>
   1f780:	bne	1f794 <main@@Base+0xc49c>
   1f784:	mov	r7, r1
   1f788:	ldrb	r0, [r7, #1]!
   1f78c:	cmp	r0, #32
   1f790:	bhi	1f7a4 <main@@Base+0xc4ac>
   1f794:	mov	r0, r5
   1f798:	mov	r2, r6
   1f79c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1f7a0:	mov	r7, r0
   1f7a4:	cmp	r7, r6
   1f7a8:	beq	1f738 <main@@Base+0xc440>
   1f7ac:	add	r0, sl, #4
   1f7b0:	mov	r1, #0
   1f7b4:	mov	r2, #0
   1f7b8:	add	r8, sp, #32
   1f7bc:	add	r9, sp, #28
   1f7c0:	str	sl, [sp, #12]
   1f7c4:	str	r1, [sp, #20]
   1f7c8:	str	r0, [sp, #8]
   1f7cc:	ldr	r4, [sl]
   1f7d0:	mov	sl, r0
   1f7d4:	str	r2, [sp, #16]
   1f7d8:	add	r0, sp, #24
   1f7dc:	mov	r1, r7
   1f7e0:	mov	r2, r6
   1f7e4:	mov	r3, r9
   1f7e8:	str	r8, [sp]
   1f7ec:	str	r0, [sp, #4]
   1f7f0:	mov	r0, r5
   1f7f4:	blx	r4
   1f7f8:	cmp	r0, r6
   1f7fc:	beq	1f8fc <main@@Base+0xc604>
   1f800:	mov	r4, r0
   1f804:	cmp	r0, r7
   1f808:	bne	1f81c <main@@Base+0xc524>
   1f80c:	ldr	r4, [sl], #4
   1f810:	cmp	r4, #0
   1f814:	bne	1f7d8 <main@@Base+0xc4e0>
   1f818:	b	1f90c <main@@Base+0xc614>
   1f81c:	ldr	r7, [sp, #20]
   1f820:	cmp	r7, #0
   1f824:	beq	1f834 <main@@Base+0xc53c>
   1f828:	ldr	r0, [r5, #12]
   1f82c:	cmp	r0, #0
   1f830:	bne	1f948 <main@@Base+0xc650>
   1f834:	ldr	r2, [sp, #28]
   1f838:	ldr	r0, [sp, #32]
   1f83c:	ldr	r1, [sp, #36]	; 0x24
   1f840:	cmp	r2, #0
   1f844:	beq	1f870 <main@@Base+0xc578>
   1f848:	ldr	sl, [sp, #12]
   1f84c:	movw	r2, #32769	; 0x8001
   1f850:	subs	r2, r0, r2
   1f854:	sbcs	r1, r1, #0
   1f858:	bcc	1f8a4 <main@@Base+0xc5ac>
   1f85c:	mov	r0, r5
   1f860:	mov	r1, r4
   1f864:	mov	r2, r6
   1f868:	mov	r3, #8
   1f86c:	b	1f890 <main@@Base+0xc598>
   1f870:	ldr	sl, [sp, #12]
   1f874:	subs	r2, r0, #32768	; 0x8000
   1f878:	sbcs	r1, r1, #0
   1f87c:	bcc	1f8b8 <main@@Base+0xc5c0>
   1f880:	mov	r0, r5
   1f884:	mov	r1, r4
   1f888:	mov	r2, r6
   1f88c:	mov	r3, #7
   1f890:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f894:	ldr	r2, [sp, #16]
   1f898:	cmp	r0, r6
   1f89c:	bne	1f8c8 <main@@Base+0xc5d0>
   1f8a0:	b	1f8fc <main@@Base+0xc604>
   1f8a4:	rsb	r2, r0, #0
   1f8a8:	mov	r0, r4
   1f8ac:	cmp	r0, r6
   1f8b0:	bne	1f8c8 <main@@Base+0xc5d0>
   1f8b4:	b	1f8fc <main@@Base+0xc604>
   1f8b8:	mov	r2, r0
   1f8bc:	mov	r0, r4
   1f8c0:	cmp	r0, r6
   1f8c4:	beq	1f8fc <main@@Base+0xc604>
   1f8c8:	ldr	r0, [fp, #8]
   1f8cc:	add	r7, r7, #1
   1f8d0:	str	r7, [sp, #20]
   1f8d4:	mov	r7, r4
   1f8d8:	mov	r1, r0
   1f8dc:	ldrh	r0, [r0]
   1f8e0:	add	r0, r0, r2
   1f8e4:	strh	r0, [r1]
   1f8e8:	ldr	r0, [sp, #24]
   1f8ec:	cmp	r0, #0
   1f8f0:	ldr	r0, [sp, #8]
   1f8f4:	bne	1f7cc <main@@Base+0xc4d4>
   1f8f8:	b	1f73c <main@@Base+0xc444>
   1f8fc:	mov	r4, r6
   1f900:	mov	r0, r4
   1f904:	sub	sp, fp, #28
   1f908:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f90c:	mov	r0, r5
   1f910:	mov	r1, r7
   1f914:	mov	r2, r6
   1f918:	mov	r3, #23
   1f91c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1f920:	mov	r4, r0
   1f924:	mov	r0, r4
   1f928:	sub	sp, fp, #28
   1f92c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f930:	mov	r0, #1
   1f934:	str	r0, [r5, #12]
   1f938:	ldr	r0, [r5, #12]
   1f93c:	cmp	r0, #0
   1f940:	bne	1f72c <main@@Base+0xc434>
   1f944:	b	1f768 <main@@Base+0xc470>
   1f948:	mov	r0, r5
   1f94c:	mov	r1, r4
   1f950:	mov	r2, r6
   1f954:	mov	r3, #14
   1f958:	b	1f91c <main@@Base+0xc624>
   1f95c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f960:	add	fp, sp, #28
   1f964:	sub	sp, sp, #28
   1f968:	mov	r7, r2
   1f96c:	mov	r5, r0
   1f970:	cmp	r1, r2
   1f974:	beq	1f9ec <main@@Base+0xc6f4>
   1f978:	ldrb	r0, [r1]
   1f97c:	cmp	r0, #123	; 0x7b
   1f980:	bne	1f9ec <main@@Base+0xc6f4>
   1f984:	add	r2, r1, #1
   1f988:	mov	sl, r3
   1f98c:	sub	r0, r7, r2
   1f990:	cmp	r0, #2
   1f994:	blt	1fa1c <main@@Base+0xc724>
   1f998:	ldrb	r0, [r2]
   1f99c:	cmp	r0, #32
   1f9a0:	bls	1fa0c <main@@Base+0xc714>
   1f9a4:	mov	r1, r2
   1f9a8:	cmp	r1, r7
   1f9ac:	mov	r2, r7
   1f9b0:	beq	1fa3c <main@@Base+0xc744>
   1f9b4:	ldrb	r0, [r1]
   1f9b8:	cmp	r0, #125	; 0x7d
   1f9bc:	bne	1fa04 <main@@Base+0xc70c>
   1f9c0:	add	r2, r1, #1
   1f9c4:	sub	r0, r7, r2
   1f9c8:	cmp	r0, #2
   1f9cc:	blt	2013c <main@@Base+0xce44>
   1f9d0:	ldrb	r0, [r2]
   1f9d4:	cmp	r0, #32
   1f9d8:	bls	2012c <main@@Base+0xce34>
   1f9dc:	mov	r1, r2
   1f9e0:	mov	r0, r1
   1f9e4:	sub	sp, fp, #28
   1f9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9ec:	mov	r0, r5
   1f9f0:	mov	r2, r7
   1f9f4:	mov	r3, #21
   1f9f8:	sub	sp, fp, #28
   1f9fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa00:	b	2fedc <flatcc_json_parser_set_error@@Base>
   1fa04:	mov	r2, r1
   1fa08:	b	1fa3c <main@@Base+0xc744>
   1fa0c:	bne	1fa1c <main@@Base+0xc724>
   1fa10:	ldrb	r0, [r1, #2]!
   1fa14:	cmp	r0, #32
   1fa18:	bhi	1fa30 <main@@Base+0xc738>
   1fa1c:	mov	r1, r2
   1fa20:	mov	r0, r5
   1fa24:	mov	r2, r7
   1fa28:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1fa2c:	mov	r1, r0
   1fa30:	cmp	r1, r7
   1fa34:	mov	r2, r7
   1fa38:	bne	1f9b4 <main@@Base+0xc6bc>
   1fa3c:	movw	r0, #33152	; 0x8180
   1fa40:	mov	r8, #1627389952	; 0x61000000
   1fa44:	mov	r9, #0
   1fa48:	movt	r0, #4
   1fa4c:	add	r0, r0, #60	; 0x3c
   1fa50:	str	r0, [sp, #4]
   1fa54:	cmp	r2, r7
   1fa58:	mov	r4, r7
   1fa5c:	beq	1faa8 <main@@Base+0xc7b0>
   1fa60:	ldrb	r0, [r2]
   1fa64:	cmp	r0, #46	; 0x2e
   1fa68:	beq	1fa80 <main@@Base+0xc788>
   1fa6c:	cmp	r0, #34	; 0x22
   1fa70:	bne	1fa9c <main@@Base+0xc7a4>
   1fa74:	str	r9, [r5, #12]
   1fa78:	add	r4, r2, #1
   1fa7c:	b	1faa8 <main@@Base+0xc7b0>
   1fa80:	mov	r1, r2
   1fa84:	mov	r0, r5
   1fa88:	mov	r2, r7
   1fa8c:	mov	r3, #5
   1fa90:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1fa94:	mov	r4, r0
   1fa98:	b	1faa8 <main@@Base+0xc7b0>
   1fa9c:	mov	r0, #1
   1faa0:	mov	r4, r2
   1faa4:	str	r0, [r5, #12]
   1faa8:	sub	r0, r7, r4
   1faac:	mov	r1, #8
   1fab0:	cmp	r0, #8
   1fab4:	movcc	r1, r0
   1fab8:	sub	r1, r1, #1
   1fabc:	cmp	r1, #7
   1fac0:	bhi	1ffa0 <main@@Base+0xcca8>
   1fac4:	ldrb	r1, [r4]
   1fac8:	teq	r8, r1, lsl #24
   1facc:	beq	1fb24 <main@@Base+0xc82c>
   1fad0:	lsl	r1, r1, #24
   1fad4:	teq	r1, #1644167168	; 0x62000000
   1fad8:	bne	1ffa0 <main@@Base+0xcca8>
   1fadc:	cmp	r0, #2
   1fae0:	mov	r6, r4
   1fae4:	blt	1fcf4 <main@@Base+0xc9fc>
   1fae8:	mov	r1, r4
   1faec:	ldr	r2, [r5, #12]
   1faf0:	ldrb	r0, [r1, #1]!
   1faf4:	cmp	r2, #0
   1faf8:	beq	1fb6c <main@@Base+0xc874>
   1fafc:	cmp	r0, #33	; 0x21
   1fb00:	bcc	1fb10 <main@@Base+0xc818>
   1fb04:	cmp	r0, #58	; 0x3a
   1fb08:	mov	r6, r4
   1fb0c:	bne	1fcf4 <main@@Base+0xc9fc>
   1fb10:	str	r9, [r5, #12]
   1fb14:	sub	r0, r7, r1
   1fb18:	cmp	r0, #2
   1fb1c:	bge	1fb88 <main@@Base+0xc890>
   1fb20:	b	1fbf0 <main@@Base+0xc8f8>
   1fb24:	cmp	r0, #2
   1fb28:	mov	r6, r4
   1fb2c:	blt	1ff10 <main@@Base+0xcc18>
   1fb30:	mov	r1, r4
   1fb34:	ldr	r2, [r5, #12]
   1fb38:	ldrb	r0, [r1, #1]!
   1fb3c:	cmp	r2, #0
   1fb40:	beq	1fba4 <main@@Base+0xc8ac>
   1fb44:	cmp	r0, #33	; 0x21
   1fb48:	bcc	1fb58 <main@@Base+0xc860>
   1fb4c:	cmp	r0, #58	; 0x3a
   1fb50:	mov	r6, r4
   1fb54:	bne	1ff10 <main@@Base+0xcc18>
   1fb58:	str	r9, [r5, #12]
   1fb5c:	sub	r0, r7, r1
   1fb60:	cmp	r0, #2
   1fb64:	bge	1fbc0 <main@@Base+0xc8c8>
   1fb68:	b	1fc6c <main@@Base+0xc974>
   1fb6c:	cmp	r0, #34	; 0x22
   1fb70:	mov	r6, r4
   1fb74:	bne	1fcf4 <main@@Base+0xc9fc>
   1fb78:	add	r1, r4, #2
   1fb7c:	sub	r0, r7, r1
   1fb80:	cmp	r0, #2
   1fb84:	blt	1fbf0 <main@@Base+0xc8f8>
   1fb88:	ldrb	r0, [r1]
   1fb8c:	cmp	r0, #32
   1fb90:	bls	1fbdc <main@@Base+0xc8e4>
   1fb94:	mov	r6, r1
   1fb98:	cmp	r6, r7
   1fb9c:	bne	1fc08 <main@@Base+0xc910>
   1fba0:	b	1fc40 <main@@Base+0xc948>
   1fba4:	cmp	r0, #34	; 0x22
   1fba8:	mov	r6, r4
   1fbac:	bne	1ff10 <main@@Base+0xcc18>
   1fbb0:	add	r1, r4, #2
   1fbb4:	sub	r0, r7, r1
   1fbb8:	cmp	r0, #2
   1fbbc:	blt	1fc6c <main@@Base+0xc974>
   1fbc0:	ldrb	r0, [r1]
   1fbc4:	cmp	r0, #32
   1fbc8:	bls	1fc58 <main@@Base+0xc960>
   1fbcc:	mov	r6, r1
   1fbd0:	cmp	r6, r7
   1fbd4:	bne	1fc84 <main@@Base+0xc98c>
   1fbd8:	b	1fcbc <main@@Base+0xc9c4>
   1fbdc:	bne	1fbf0 <main@@Base+0xc8f8>
   1fbe0:	mov	r6, r1
   1fbe4:	ldrb	r0, [r6, #1]!
   1fbe8:	cmp	r0, #32
   1fbec:	bhi	1fc00 <main@@Base+0xc908>
   1fbf0:	mov	r0, r5
   1fbf4:	mov	r2, r7
   1fbf8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1fbfc:	mov	r6, r0
   1fc00:	cmp	r6, r7
   1fc04:	beq	1fc40 <main@@Base+0xc948>
   1fc08:	ldrb	r0, [r6]
   1fc0c:	cmp	r0, #58	; 0x3a
   1fc10:	bne	1fc40 <main@@Base+0xc948>
   1fc14:	add	r1, r6, #1
   1fc18:	sub	r0, r7, r1
   1fc1c:	cmp	r0, #2
   1fc20:	blt	1fce4 <main@@Base+0xc9ec>
   1fc24:	ldrb	r0, [r1]
   1fc28:	cmp	r0, #32
   1fc2c:	bls	1fcd4 <main@@Base+0xc9dc>
   1fc30:	mov	r6, r1
   1fc34:	cmp	r4, r6
   1fc38:	bne	1fcfc <main@@Base+0xca04>
   1fc3c:	b	1ffa0 <main@@Base+0xcca8>
   1fc40:	mov	r0, r5
   1fc44:	mov	r1, r6
   1fc48:	mov	r2, r7
   1fc4c:	mov	r3, #4
   1fc50:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1fc54:	b	1fcf0 <main@@Base+0xc9f8>
   1fc58:	bne	1fc6c <main@@Base+0xc974>
   1fc5c:	mov	r6, r1
   1fc60:	ldrb	r0, [r6, #1]!
   1fc64:	cmp	r0, #32
   1fc68:	bhi	1fc7c <main@@Base+0xc984>
   1fc6c:	mov	r0, r5
   1fc70:	mov	r2, r7
   1fc74:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1fc78:	mov	r6, r0
   1fc7c:	cmp	r6, r7
   1fc80:	beq	1fcbc <main@@Base+0xc9c4>
   1fc84:	ldrb	r0, [r6]
   1fc88:	cmp	r0, #58	; 0x3a
   1fc8c:	bne	1fcbc <main@@Base+0xc9c4>
   1fc90:	add	r1, r6, #1
   1fc94:	sub	r0, r7, r1
   1fc98:	cmp	r0, #2
   1fc9c:	blt	1ff00 <main@@Base+0xcc08>
   1fca0:	ldrb	r0, [r1]
   1fca4:	cmp	r0, #32
   1fca8:	bls	1fef0 <main@@Base+0xcbf8>
   1fcac:	mov	r6, r1
   1fcb0:	cmp	r4, r6
   1fcb4:	bne	1ff18 <main@@Base+0xcc20>
   1fcb8:	b	1ffa0 <main@@Base+0xcca8>
   1fcbc:	mov	r0, r5
   1fcc0:	mov	r1, r6
   1fcc4:	mov	r2, r7
   1fcc8:	mov	r3, #4
   1fccc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1fcd0:	b	1ff0c <main@@Base+0xcc14>
   1fcd4:	bne	1fce4 <main@@Base+0xc9ec>
   1fcd8:	ldrb	r0, [r6, #2]!
   1fcdc:	cmp	r0, #32
   1fce0:	bhi	1fcf4 <main@@Base+0xc9fc>
   1fce4:	mov	r0, r5
   1fce8:	mov	r2, r7
   1fcec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1fcf0:	mov	r6, r0
   1fcf4:	cmp	r4, r6
   1fcf8:	beq	1ffa0 <main@@Base+0xcca8>
   1fcfc:	mov	r4, #0
   1fd00:	cmp	r6, r7
   1fd04:	str	r4, [sp, #20]
   1fd08:	str	r4, [sp, #16]
   1fd0c:	strb	r4, [sp, #10]
   1fd10:	str	r4, [sp, #12]
   1fd14:	beq	1fd80 <main@@Base+0xca88>
   1fd18:	add	r0, sp, #16
   1fd1c:	mov	r1, r6
   1fd20:	mov	r2, r7
   1fd24:	add	r3, sp, #12
   1fd28:	str	r0, [sp]
   1fd2c:	mov	r0, r5
   1fd30:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1fd34:	cmp	r0, r6
   1fd38:	beq	1fe44 <main@@Base+0xcb4c>
   1fd3c:	ldr	r3, [sp, #12]
   1fd40:	mov	r1, r0
   1fd44:	ldr	r0, [sp, #16]
   1fd48:	ldr	r2, [sp, #20]
   1fd4c:	cmp	r3, #0
   1fd50:	beq	1fe54 <main@@Base+0xcb5c>
   1fd54:	subs	r3, r0, #129	; 0x81
   1fd58:	sbcs	r2, r2, #0
   1fd5c:	bcc	1fe80 <main@@Base+0xcb88>
   1fd60:	mov	r0, r5
   1fd64:	mov	r2, r7
   1fd68:	mov	r3, #8
   1fd6c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1fd70:	mov	r1, r0
   1fd74:	cmp	r6, r1
   1fd78:	bne	1fd8c <main@@Base+0xca94>
   1fd7c:	b	1fea4 <main@@Base+0xcbac>
   1fd80:	mov	r1, r7
   1fd84:	cmp	r6, r1
   1fd88:	beq	1fea4 <main@@Base+0xcbac>
   1fd8c:	strb	r4, [sl, #2]
   1fd90:	sub	r0, r7, r1
   1fd94:	cmp	r0, #2
   1fd98:	blt	1ffc0 <main@@Base+0xccc8>
   1fd9c:	ldrb	r0, [r1]
   1fda0:	cmp	r0, #32
   1fda4:	bls	1fdf8 <main@@Base+0xcb00>
   1fda8:	mov	r2, r1
   1fdac:	cmp	r2, r7
   1fdb0:	beq	200b0 <main@@Base+0xcdb8>
   1fdb4:	ldrb	r0, [r2]
   1fdb8:	cmp	r0, #44	; 0x2c
   1fdbc:	bne	200c0 <main@@Base+0xcdc8>
   1fdc0:	add	r1, r2, #1
   1fdc4:	sub	r0, r7, r1
   1fdc8:	cmp	r0, #2
   1fdcc:	blt	1fe28 <main@@Base+0xcb30>
   1fdd0:	ldrb	r0, [r1]
   1fdd4:	cmp	r0, #32
   1fdd8:	bls	1fe18 <main@@Base+0xcb20>
   1fddc:	mov	r2, r1
   1fde0:	cmp	r2, r7
   1fde4:	beq	200f4 <main@@Base+0xcdfc>
   1fde8:	ldrb	r0, [r2]
   1fdec:	cmp	r0, #125	; 0x7d
   1fdf0:	bne	1fa54 <main@@Base+0xc75c>
   1fdf4:	b	20100 <main@@Base+0xce08>
   1fdf8:	bne	1ffc0 <main@@Base+0xccc8>
   1fdfc:	mov	r2, r1
   1fe00:	ldrb	r0, [r2, #1]!
   1fe04:	cmp	r0, #32
   1fe08:	bls	1ffc0 <main@@Base+0xccc8>
   1fe0c:	cmp	r2, r7
   1fe10:	bne	1fdb4 <main@@Base+0xcabc>
   1fe14:	b	200b0 <main@@Base+0xcdb8>
   1fe18:	bne	1fe28 <main@@Base+0xcb30>
   1fe1c:	ldrb	r0, [r2, #2]!
   1fe20:	cmp	r0, #32
   1fe24:	bhi	1fe38 <main@@Base+0xcb40>
   1fe28:	mov	r0, r5
   1fe2c:	mov	r2, r7
   1fe30:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1fe34:	mov	r2, r0
   1fe38:	cmp	r2, r7
   1fe3c:	bne	1fde8 <main@@Base+0xcaf0>
   1fe40:	b	200f4 <main@@Base+0xcdfc>
   1fe44:	mov	r1, r6
   1fe48:	cmp	r6, r1
   1fe4c:	bne	1fd8c <main@@Base+0xca94>
   1fe50:	b	1fea4 <main@@Base+0xcbac>
   1fe54:	subs	r3, r0, #128	; 0x80
   1fe58:	sbcs	r2, r2, #0
   1fe5c:	bcc	1fe94 <main@@Base+0xcb9c>
   1fe60:	mov	r0, r5
   1fe64:	mov	r2, r7
   1fe68:	mov	r3, #7
   1fe6c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1fe70:	mov	r1, r0
   1fe74:	cmp	r6, r1
   1fe78:	bne	1fd8c <main@@Base+0xca94>
   1fe7c:	b	1fea4 <main@@Base+0xcbac>
   1fe80:	rsb	r4, r0, #0
   1fe84:	strb	r4, [sp, #10]
   1fe88:	cmp	r6, r1
   1fe8c:	bne	1fd8c <main@@Base+0xca94>
   1fe90:	b	1fea4 <main@@Base+0xcbac>
   1fe94:	mov	r4, r0
   1fe98:	strb	r4, [sp, #10]
   1fe9c:	cmp	r6, r1
   1fea0:	bne	1fd8c <main@@Base+0xca94>
   1fea4:	add	r0, sp, #10
   1fea8:	mov	r1, r6
   1feac:	mov	r2, r7
   1feb0:	str	r0, [sp]
   1feb4:	movw	r0, #33152	; 0x8180
   1feb8:	movt	r0, #4
   1febc:	add	r3, r0, #48	; 0x30
   1fec0:	mov	r0, r5
   1fec4:	bl	1f1e0 <main@@Base+0xbee8>
   1fec8:	mov	r1, r0
   1fecc:	cmp	r0, r6
   1fed0:	cmpne	r1, r7
   1fed4:	beq	200a0 <main@@Base+0xcda8>
   1fed8:	ldrb	r4, [sp, #10]
   1fedc:	strb	r4, [sl, #2]
   1fee0:	sub	r0, r7, r1
   1fee4:	cmp	r0, #2
   1fee8:	blt	1ffc0 <main@@Base+0xccc8>
   1feec:	b	1fd9c <main@@Base+0xcaa4>
   1fef0:	bne	1ff00 <main@@Base+0xcc08>
   1fef4:	ldrb	r0, [r6, #2]!
   1fef8:	cmp	r0, #32
   1fefc:	bhi	1ff10 <main@@Base+0xcc18>
   1ff00:	mov	r0, r5
   1ff04:	mov	r2, r7
   1ff08:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ff0c:	mov	r6, r0
   1ff10:	cmp	r4, r6
   1ff14:	beq	1ffa0 <main@@Base+0xcca8>
   1ff18:	mov	r4, #0
   1ff1c:	cmp	r6, r7
   1ff20:	str	r4, [sp, #20]
   1ff24:	str	r4, [sp, #16]
   1ff28:	strh	r4, [sp, #10]
   1ff2c:	str	r4, [sp, #12]
   1ff30:	beq	1ffdc <main@@Base+0xcce4>
   1ff34:	add	r0, sp, #16
   1ff38:	mov	r1, r6
   1ff3c:	mov	r2, r7
   1ff40:	add	r3, sp, #12
   1ff44:	str	r0, [sp]
   1ff48:	mov	r0, r5
   1ff4c:	bl	323e8 <flatcc_json_parser_integer@@Base>
   1ff50:	cmp	r0, r6
   1ff54:	beq	1fffc <main@@Base+0xcd04>
   1ff58:	ldr	r3, [sp, #12]
   1ff5c:	mov	r1, r0
   1ff60:	ldr	r0, [sp, #16]
   1ff64:	ldr	r2, [sp, #20]
   1ff68:	cmp	r3, #0
   1ff6c:	beq	2004c <main@@Base+0xcd54>
   1ff70:	movw	r3, #32769	; 0x8001
   1ff74:	subs	r3, r0, r3
   1ff78:	sbcs	r2, r2, #0
   1ff7c:	bcc	20078 <main@@Base+0xcd80>
   1ff80:	mov	r0, r5
   1ff84:	mov	r2, r7
   1ff88:	mov	r3, #8
   1ff8c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   1ff90:	mov	r1, r0
   1ff94:	cmp	r6, r1
   1ff98:	bne	1ffe8 <main@@Base+0xccf0>
   1ff9c:	b	20008 <main@@Base+0xcd10>
   1ffa0:	mov	r0, r5
   1ffa4:	mov	r1, r4
   1ffa8:	mov	r2, r7
   1ffac:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   1ffb0:	mov	r1, r0
   1ffb4:	sub	r0, r7, r1
   1ffb8:	cmp	r0, #2
   1ffbc:	bge	1fd9c <main@@Base+0xcaa4>
   1ffc0:	mov	r0, r5
   1ffc4:	mov	r2, r7
   1ffc8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   1ffcc:	mov	r2, r0
   1ffd0:	cmp	r2, r7
   1ffd4:	bne	1fdb4 <main@@Base+0xcabc>
   1ffd8:	b	200b0 <main@@Base+0xcdb8>
   1ffdc:	mov	r1, r7
   1ffe0:	cmp	r6, r1
   1ffe4:	beq	20008 <main@@Base+0xcd10>
   1ffe8:	strh	r4, [sl]
   1ffec:	sub	r0, r7, r1
   1fff0:	cmp	r0, #2
   1fff4:	bge	1fd9c <main@@Base+0xcaa4>
   1fff8:	b	1ffc0 <main@@Base+0xccc8>
   1fffc:	mov	r1, r6
   20000:	cmp	r6, r1
   20004:	bne	1ffe8 <main@@Base+0xccf0>
   20008:	add	r0, sp, #10
   2000c:	mov	r1, r6
   20010:	mov	r2, r7
   20014:	str	r0, [sp]
   20018:	mov	r0, r5
   2001c:	ldr	r3, [sp, #4]
   20020:	bl	1f6d4 <main@@Base+0xc3dc>
   20024:	mov	r1, r0
   20028:	cmp	r0, r6
   2002c:	cmpne	r1, r7
   20030:	beq	200a0 <main@@Base+0xcda8>
   20034:	ldrh	r4, [sp, #10]
   20038:	strh	r4, [sl]
   2003c:	sub	r0, r7, r1
   20040:	cmp	r0, #2
   20044:	bge	1fd9c <main@@Base+0xcaa4>
   20048:	b	1ffc0 <main@@Base+0xccc8>
   2004c:	subs	r3, r0, #32768	; 0x8000
   20050:	sbcs	r2, r2, #0
   20054:	bcc	2008c <main@@Base+0xcd94>
   20058:	mov	r0, r5
   2005c:	mov	r2, r7
   20060:	mov	r3, #7
   20064:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20068:	mov	r1, r0
   2006c:	cmp	r6, r1
   20070:	bne	1ffe8 <main@@Base+0xccf0>
   20074:	b	20008 <main@@Base+0xcd10>
   20078:	rsb	r4, r0, #0
   2007c:	strh	r4, [sp, #10]
   20080:	cmp	r6, r1
   20084:	bne	1ffe8 <main@@Base+0xccf0>
   20088:	b	20008 <main@@Base+0xcd10>
   2008c:	mov	r4, r0
   20090:	strh	r4, [sp, #10]
   20094:	cmp	r6, r1
   20098:	bne	1ffe8 <main@@Base+0xccf0>
   2009c:	b	20008 <main@@Base+0xcd10>
   200a0:	mov	r0, r5
   200a4:	mov	r2, r7
   200a8:	mov	r3, #33	; 0x21
   200ac:	b	20164 <main@@Base+0xce6c>
   200b0:	mov	r1, r7
   200b4:	mov	r0, r1
   200b8:	sub	sp, fp, #28
   200bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200c0:	cmp	r0, #125	; 0x7d
   200c4:	bne	20154 <main@@Base+0xce5c>
   200c8:	add	r3, r2, #1
   200cc:	sub	r0, r7, r3
   200d0:	cmp	r0, #2
   200d4:	blt	20180 <main@@Base+0xce88>
   200d8:	ldrb	r0, [r3]
   200dc:	cmp	r0, #32
   200e0:	bls	2016c <main@@Base+0xce74>
   200e4:	mov	r1, r3
   200e8:	mov	r0, r1
   200ec:	sub	sp, fp, #28
   200f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   200f4:	mov	r0, r5
   200f8:	mov	r1, r7
   200fc:	b	2015c <main@@Base+0xce64>
   20100:	add	r3, r2, #1
   20104:	sub	r0, r7, r3
   20108:	cmp	r0, #2
   2010c:	blt	20180 <main@@Base+0xce88>
   20110:	ldrb	r0, [r3]
   20114:	cmp	r0, #32
   20118:	bls	2016c <main@@Base+0xce74>
   2011c:	mov	r1, r3
   20120:	mov	r0, r1
   20124:	sub	sp, fp, #28
   20128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2012c:	bne	2013c <main@@Base+0xce44>
   20130:	ldrb	r0, [r1, #2]!
   20134:	cmp	r0, #32
   20138:	bhi	20194 <main@@Base+0xce9c>
   2013c:	mov	r1, r2
   20140:	mov	r0, r5
   20144:	mov	r2, r7
   20148:	sub	sp, fp, #28
   2014c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20150:	b	2ff8c <flatcc_json_parser_space_ext@@Base>
   20154:	mov	r0, r5
   20158:	mov	r1, r2
   2015c:	mov	r2, r7
   20160:	mov	r3, #10
   20164:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20168:	b	20190 <main@@Base+0xce98>
   2016c:	bne	20180 <main@@Base+0xce88>
   20170:	ldrb	r0, [r2, #2]!
   20174:	mov	r1, r2
   20178:	cmp	r0, #32
   2017c:	bhi	20194 <main@@Base+0xce9c>
   20180:	mov	r0, r5
   20184:	mov	r1, r3
   20188:	mov	r2, r7
   2018c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20190:	mov	r1, r0
   20194:	mov	r0, r1
   20198:	sub	sp, fp, #28
   2019c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201a4:	add	fp, sp, #28
   201a8:	sub	sp, sp, #68	; 0x44
   201ac:	ldr	r9, [fp, #8]
   201b0:	mov	r5, r0
   201b4:	mov	r0, #0
   201b8:	mov	r8, r2
   201bc:	mov	r4, r1
   201c0:	cmp	r3, #4
   201c4:	str	r0, [r9]
   201c8:	bhi	2022c <main@@Base+0xcf34>
   201cc:	add	r0, pc, #0
   201d0:	ldr	pc, [r0, r3, lsl #2]
   201d4:	andeq	r0, r2, r8, ror #3
   201d8:	andeq	r0, r2, r4, asr r2
   201dc:	andeq	r0, r2, r8, lsr #5
   201e0:	andeq	r0, r2, r8, lsl #6
   201e4:	andeq	r0, r2, r8, ror #6
   201e8:	sub	r0, r8, r4
   201ec:	cmp	r0, #4
   201f0:	blt	20210 <main@@Base+0xcf18>
   201f4:	movw	r1, #27730	; 0x6c52
   201f8:	mov	r0, r4
   201fc:	mov	r2, #4
   20200:	movt	r1, #3
   20204:	bl	12b34 <bcmp@plt>
   20208:	cmp	r0, #0
   2020c:	beq	2042c <main@@Base+0xd134>
   20210:	mov	r0, r5
   20214:	mov	r1, r4
   20218:	mov	r2, r8
   2021c:	mov	r3, #26
   20220:	sub	sp, fp, #28
   20224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20228:	b	2fedc <flatcc_json_parser_set_error@@Base>
   2022c:	ldrb	r0, [r5, #8]
   20230:	tst	r0, #1
   20234:	bne	20414 <main@@Base+0xd11c>
   20238:	mov	r0, r5
   2023c:	mov	r1, r4
   20240:	mov	r2, r8
   20244:	mov	r3, #15
   20248:	sub	sp, fp, #28
   2024c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20250:	b	2fedc <flatcc_json_parser_set_error@@Base>
   20254:	mov	r0, r5
   20258:	mov	r1, r4
   2025c:	mov	r2, r8
   20260:	mov	r3, r9
   20264:	bl	13374 <main@@Base+0x7c>
   20268:	mov	r4, r0
   2026c:	ldr	r0, [r5, #24]
   20270:	cmp	r0, #0
   20274:	bne	20498 <main@@Base+0xd1a0>
   20278:	ldr	r0, [r9]
   2027c:	cmp	r0, #0
   20280:	bne	20498 <main@@Base+0xd1a0>
   20284:	mov	r0, r5
   20288:	mov	r1, r4
   2028c:	mov	r2, r8
   20290:	mov	r3, #33	; 0x21
   20294:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20298:	mov	r4, r0
   2029c:	mov	r0, r4
   202a0:	sub	sp, fp, #28
   202a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202a8:	mov	r0, #0
   202ac:	mov	r1, #4
   202b0:	str	r0, [r9]
   202b4:	ldr	r0, [r5]
   202b8:	bl	2cd8c <flatcc_builder_start_table@@Base>
   202bc:	cmp	r0, #0
   202c0:	bne	23518 <main@@Base+0x10220>
   202c4:	cmp	r4, r8
   202c8:	beq	203ec <main@@Base+0xd0f4>
   202cc:	ldrb	r0, [r4]
   202d0:	cmp	r0, #123	; 0x7b
   202d4:	bne	203ec <main@@Base+0xd0f4>
   202d8:	add	r1, r4, #1
   202dc:	sub	r0, r8, r1
   202e0:	cmp	r0, #2
   202e4:	blt	204b4 <main@@Base+0xd1bc>
   202e8:	ldrb	r0, [r1]
   202ec:	cmp	r0, #32
   202f0:	bls	204a4 <main@@Base+0xd1ac>
   202f4:	mov	r4, r1
   202f8:	cmp	r4, r8
   202fc:	mov	r2, r8
   20300:	bne	204d0 <main@@Base+0xd1d8>
   20304:	b	20500 <main@@Base+0xd208>
   20308:	mov	r0, #0
   2030c:	mov	r1, #0
   20310:	str	r0, [r9]
   20314:	ldr	r0, [r5]
   20318:	bl	2cd8c <flatcc_builder_start_table@@Base>
   2031c:	cmp	r0, #0
   20320:	bne	23518 <main@@Base+0x10220>
   20324:	cmp	r4, r8
   20328:	beq	203ec <main@@Base+0xd0f4>
   2032c:	ldrb	r0, [r4]
   20330:	cmp	r0, #123	; 0x7b
   20334:	bne	203ec <main@@Base+0xd0f4>
   20338:	add	r1, r4, #1
   2033c:	sub	r0, r8, r1
   20340:	cmp	r0, #2
   20344:	blt	2118c <main@@Base+0xde94>
   20348:	ldrb	r0, [r1]
   2034c:	cmp	r0, #32
   20350:	bls	2117c <main@@Base+0xde84>
   20354:	mov	r4, r1
   20358:	cmp	r4, r8
   2035c:	mov	r3, r8
   20360:	bne	211a8 <main@@Base+0xdeb0>
   20364:	b	211e8 <main@@Base+0xdef0>
   20368:	mov	r0, #0
   2036c:	mov	r1, #4
   20370:	str	r0, [r9]
   20374:	ldr	r0, [r5]
   20378:	bl	2cd8c <flatcc_builder_start_table@@Base>
   2037c:	cmp	r0, #0
   20380:	bne	23518 <main@@Base+0x10220>
   20384:	sub	r0, fp, #36	; 0x24
   20388:	mov	r1, r4
   2038c:	mov	r2, r8
   20390:	mov	r3, #1
   20394:	str	r0, [sp]
   20398:	mov	r0, r5
   2039c:	bl	32ce0 <flatcc_json_parser_prepare_unions@@Base>
   203a0:	cmp	r0, r8
   203a4:	beq	23518 <main@@Base+0x10220>
   203a8:	cmp	r4, r8
   203ac:	beq	2043c <main@@Base+0xd144>
   203b0:	ldrb	r0, [r4]
   203b4:	cmp	r0, #123	; 0x7b
   203b8:	bne	2043c <main@@Base+0xd144>
   203bc:	add	r1, r4, #1
   203c0:	sub	r0, r8, r1
   203c4:	cmp	r0, #2
   203c8:	blt	21378 <main@@Base+0xe080>
   203cc:	ldrb	r0, [r1]
   203d0:	cmp	r0, #32
   203d4:	bls	21368 <main@@Base+0xe070>
   203d8:	mov	r4, r1
   203dc:	cmp	r4, r8
   203e0:	mov	r2, r8
   203e4:	bne	21394 <main@@Base+0xe09c>
   203e8:	b	213d4 <main@@Base+0xe0dc>
   203ec:	mov	r0, r5
   203f0:	mov	r1, r4
   203f4:	mov	r2, r8
   203f8:	mov	r3, #21
   203fc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20400:	mov	r4, r0
   20404:	ldr	r0, [r5, #24]
   20408:	cmp	r0, #0
   2040c:	bne	23518 <main@@Base+0x10220>
   20410:	b	20478 <main@@Base+0xd180>
   20414:	mov	r0, r5
   20418:	mov	r1, r4
   2041c:	mov	r2, r8
   20420:	sub	sp, fp, #28
   20424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20428:	b	30a88 <flatcc_json_parser_generic_json@@Base>
   2042c:	add	r4, r4, #4
   20430:	mov	r0, r4
   20434:	sub	sp, fp, #28
   20438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2043c:	mov	r0, r5
   20440:	mov	r1, r4
   20444:	mov	r2, r8
   20448:	mov	r3, #21
   2044c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20450:	mov	r4, r0
   20454:	ldr	r0, [r5, #24]
   20458:	cmp	r0, #0
   2045c:	bne	23518 <main@@Base+0x10220>
   20460:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20464:	mov	r0, r5
   20468:	mov	r1, r4
   2046c:	mov	r2, r8
   20470:	bl	32d70 <flatcc_json_parser_finalize_unions@@Base>
   20474:	mov	r4, r0
   20478:	ldr	r0, [r5]
   2047c:	bl	2d734 <flatcc_builder_end_table@@Base>
   20480:	cmp	r0, #0
   20484:	str	r0, [r9]
   20488:	beq	23518 <main@@Base+0x10220>
   2048c:	ldr	r0, [r5, #24]
   20490:	cmp	r0, #0
   20494:	beq	20278 <main@@Base+0xcf80>
   20498:	mov	r0, r4
   2049c:	sub	sp, fp, #28
   204a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   204a4:	bne	204b4 <main@@Base+0xd1bc>
   204a8:	ldrb	r0, [r4, #2]!
   204ac:	cmp	r0, #32
   204b0:	bhi	204c4 <main@@Base+0xd1cc>
   204b4:	mov	r0, r5
   204b8:	mov	r2, r8
   204bc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   204c0:	mov	r4, r0
   204c4:	cmp	r4, r8
   204c8:	mov	r2, r8
   204cc:	beq	20500 <main@@Base+0xd208>
   204d0:	ldrb	r0, [r4]
   204d4:	cmp	r0, #125	; 0x7d
   204d8:	bne	204fc <main@@Base+0xd204>
   204dc:	add	r1, r4, #1
   204e0:	sub	r0, r8, r1
   204e4:	cmp	r0, #2
   204e8:	blt	235a0 <main@@Base+0x102a8>
   204ec:	ldrb	r0, [r1]
   204f0:	cmp	r0, #32
   204f4:	bls	211d0 <main@@Base+0xded8>
   204f8:	b	23508 <main@@Base+0x10210>
   204fc:	mov	r2, r4
   20500:	movw	r0, #33392	; 0x8270
   20504:	movt	r0, #4
   20508:	add	r0, r0, #96	; 0x60
   2050c:	str	r0, [sp, #32]
   20510:	movw	r0, #33152	; 0x8180
   20514:	movt	r0, #4
   20518:	add	r0, r0, #72	; 0x48
   2051c:	str	r0, [sp, #28]
   20520:	str	r5, [sp, #44]	; 0x2c
   20524:	str	r9, [sp, #40]	; 0x28
   20528:	cmp	r2, r8
   2052c:	mov	sl, r8
   20530:	beq	2057c <main@@Base+0xd284>
   20534:	ldrb	r0, [r2]
   20538:	cmp	r0, #46	; 0x2e
   2053c:	beq	20554 <main@@Base+0xd25c>
   20540:	cmp	r0, #34	; 0x22
   20544:	bne	20570 <main@@Base+0xd278>
   20548:	mov	r0, #0
   2054c:	add	sl, r2, #1
   20550:	b	20578 <main@@Base+0xd280>
   20554:	mov	r1, r2
   20558:	mov	r0, r5
   2055c:	mov	r2, r8
   20560:	mov	r3, #5
   20564:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20568:	mov	sl, r0
   2056c:	b	2057c <main@@Base+0xd284>
   20570:	mov	r0, #1
   20574:	mov	sl, r2
   20578:	str	r0, [r5, #12]
   2057c:	sub	lr, r8, sl
   20580:	mov	r0, #8
   20584:	cmp	lr, #8
   20588:	movcc	r0, lr
   2058c:	sub	r2, r0, #1
   20590:	cmp	r2, #7
   20594:	bhi	20fa8 <main@@Base+0xdcb0>
   20598:	add	r4, pc, #24
   2059c:	mov	r0, #0
   205a0:	mov	r1, #0
   205a4:	mov	r3, #0
   205a8:	mov	r7, #0
   205ac:	mov	r6, #0
   205b0:	mov	r5, #0
   205b4:	ldr	pc, [r4, r2, lsl #2]
   205b8:	andeq	r0, r2, r8, lsl #12
   205bc:	andeq	r0, r2, r0, lsl #12
   205c0:	strdeq	r0, [r2], -r8
   205c4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   205c8:	andeq	r0, r2, r0, ror #11
   205cc:	ldrdeq	r0, [r2], -r8
   205d0:	ldrdeq	r0, [r2], -r8
   205d4:	ldrdeq	r0, [r2], -r8
   205d8:	ldrb	r1, [sl, #5]
   205dc:	lsl	r1, r1, #16
   205e0:	ldrb	r2, [sl, #4]
   205e4:	mov	r3, r0
   205e8:	orr	r1, r1, r2, lsl #24
   205ec:	mov	r0, r1
   205f0:	ldrb	r1, [sl, #3]
   205f4:	orr	r7, r1, r3
   205f8:	ldrb	r1, [sl, #2]
   205fc:	orr	r6, r7, r1, lsl #8
   20600:	ldrb	r1, [sl, #1]
   20604:	orr	r5, r6, r1, lsl #16
   20608:	ldrb	r1, [sl]
   2060c:	movw	r3, #29234	; 0x7232
   20610:	lsr	r2, r0, #16
   20614:	movt	r3, #27759	; 0x6c6f
   20618:	orr	r9, r5, r1, lsl #24
   2061c:	movw	r1, #25455	; 0x636f
   20620:	orr	r2, r2, r9, lsl #16
   20624:	eor	r1, r1, r9, lsr #16
   20628:	eor	r2, r2, r3
   2062c:	orrs	r1, r2, r1
   20630:	bne	20688 <main@@Base+0xd390>
   20634:	cmp	lr, #7
   20638:	mov	r7, sl
   2063c:	blt	208a0 <main@@Base+0xd5a8>
   20640:	ldr	r2, [sp, #44]	; 0x2c
   20644:	mov	r1, sl
   20648:	ldrb	r0, [r1, #6]!
   2064c:	ldr	r2, [r2, #12]
   20650:	cmp	r2, #0
   20654:	beq	206f8 <main@@Base+0xd400>
   20658:	cmp	r0, #33	; 0x21
   2065c:	bcc	2066c <main@@Base+0xd374>
   20660:	cmp	r0, #58	; 0x3a
   20664:	mov	r7, sl
   20668:	bne	208a0 <main@@Base+0xd5a8>
   2066c:	ldr	r0, [sp, #44]	; 0x2c
   20670:	mov	r2, #0
   20674:	str	r2, [r0, #12]
   20678:	sub	r0, r8, r1
   2067c:	cmp	r0, #2
   20680:	bge	20714 <main@@Base+0xd41c>
   20684:	b	2077c <main@@Base+0xd484>
   20688:	movw	r1, #27759	; 0x6c6f
   2068c:	and	r0, r0, #-16777216	; 0xff000000
   20690:	movt	r1, #25455	; 0x636f
   20694:	eor	r0, r0, #1912602624	; 0x72000000
   20698:	eor	r1, r9, r1
   2069c:	orrs	r0, r0, r1
   206a0:	bne	20aa8 <main@@Base+0xd7b0>
   206a4:	cmp	lr, #6
   206a8:	mov	r7, sl
   206ac:	blt	20a20 <main@@Base+0xd728>
   206b0:	ldr	r2, [sp, #44]	; 0x2c
   206b4:	mov	r1, sl
   206b8:	ldrb	r0, [r1, #5]!
   206bc:	ldr	r2, [r2, #12]
   206c0:	cmp	r2, #0
   206c4:	beq	20730 <main@@Base+0xd438>
   206c8:	cmp	r0, #33	; 0x21
   206cc:	bcc	206dc <main@@Base+0xd3e4>
   206d0:	cmp	r0, #58	; 0x3a
   206d4:	mov	r7, sl
   206d8:	bne	20a20 <main@@Base+0xd728>
   206dc:	ldr	r0, [sp, #44]	; 0x2c
   206e0:	mov	r2, #0
   206e4:	str	r2, [r0, #12]
   206e8:	sub	r0, r8, r1
   206ec:	cmp	r0, #2
   206f0:	bge	2074c <main@@Base+0xd454>
   206f4:	b	20804 <main@@Base+0xd50c>
   206f8:	cmp	r0, #34	; 0x22
   206fc:	mov	r7, sl
   20700:	bne	208a0 <main@@Base+0xd5a8>
   20704:	add	r1, sl, #7
   20708:	sub	r0, r8, r1
   2070c:	cmp	r0, #2
   20710:	blt	2077c <main@@Base+0xd484>
   20714:	ldrb	r0, [r1]
   20718:	cmp	r0, #32
   2071c:	bls	20768 <main@@Base+0xd470>
   20720:	mov	r7, r1
   20724:	cmp	r7, r8
   20728:	bne	2079c <main@@Base+0xd4a4>
   2072c:	b	207d4 <main@@Base+0xd4dc>
   20730:	cmp	r0, #34	; 0x22
   20734:	mov	r7, sl
   20738:	bne	20a20 <main@@Base+0xd728>
   2073c:	add	r1, sl, #6
   20740:	sub	r0, r8, r1
   20744:	cmp	r0, #2
   20748:	blt	20804 <main@@Base+0xd50c>
   2074c:	ldrb	r0, [r1]
   20750:	cmp	r0, #32
   20754:	bls	207f0 <main@@Base+0xd4f8>
   20758:	mov	r7, r1
   2075c:	cmp	r7, r8
   20760:	bne	20824 <main@@Base+0xd52c>
   20764:	b	2085c <main@@Base+0xd564>
   20768:	bne	2077c <main@@Base+0xd484>
   2076c:	mov	r7, r1
   20770:	ldrb	r0, [r7, #1]!
   20774:	cmp	r0, #32
   20778:	bhi	20794 <main@@Base+0xd49c>
   2077c:	ldr	r0, [sp, #44]	; 0x2c
   20780:	mov	r2, r8
   20784:	mov	r4, lr
   20788:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2078c:	mov	lr, r4
   20790:	mov	r7, r0
   20794:	cmp	r7, r8
   20798:	beq	207d4 <main@@Base+0xd4dc>
   2079c:	ldrb	r0, [r7]
   207a0:	cmp	r0, #58	; 0x3a
   207a4:	bne	207d4 <main@@Base+0xd4dc>
   207a8:	add	r1, r7, #1
   207ac:	sub	r0, r8, r1
   207b0:	cmp	r0, #2
   207b4:	blt	20888 <main@@Base+0xd590>
   207b8:	ldrb	r0, [r1]
   207bc:	cmp	r0, #32
   207c0:	bls	20878 <main@@Base+0xd580>
   207c4:	mov	r7, r1
   207c8:	cmp	sl, r7
   207cc:	bne	208a8 <main@@Base+0xd5b0>
   207d0:	b	20aa8 <main@@Base+0xd7b0>
   207d4:	ldr	r0, [sp, #44]	; 0x2c
   207d8:	mov	r1, r7
   207dc:	mov	r2, r8
   207e0:	mov	r3, #4
   207e4:	mov	r4, lr
   207e8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   207ec:	b	20898 <main@@Base+0xd5a0>
   207f0:	bne	20804 <main@@Base+0xd50c>
   207f4:	mov	r7, r1
   207f8:	ldrb	r0, [r7, #1]!
   207fc:	cmp	r0, #32
   20800:	bhi	2081c <main@@Base+0xd524>
   20804:	ldr	r0, [sp, #44]	; 0x2c
   20808:	mov	r2, r8
   2080c:	mov	r4, lr
   20810:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20814:	mov	lr, r4
   20818:	mov	r7, r0
   2081c:	cmp	r7, r8
   20820:	beq	2085c <main@@Base+0xd564>
   20824:	ldrb	r0, [r7]
   20828:	cmp	r0, #58	; 0x3a
   2082c:	bne	2085c <main@@Base+0xd564>
   20830:	add	r1, r7, #1
   20834:	sub	r0, r8, r1
   20838:	cmp	r0, #2
   2083c:	blt	20a08 <main@@Base+0xd710>
   20840:	ldrb	r0, [r1]
   20844:	cmp	r0, #32
   20848:	bls	209f8 <main@@Base+0xd700>
   2084c:	mov	r7, r1
   20850:	cmp	sl, r7
   20854:	bne	20a28 <main@@Base+0xd730>
   20858:	b	20aa8 <main@@Base+0xd7b0>
   2085c:	ldr	r0, [sp, #44]	; 0x2c
   20860:	mov	r1, r7
   20864:	mov	r2, r8
   20868:	mov	r3, #4
   2086c:	mov	r4, lr
   20870:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20874:	b	20a18 <main@@Base+0xd720>
   20878:	bne	20888 <main@@Base+0xd590>
   2087c:	ldrb	r0, [r7, #2]!
   20880:	cmp	r0, #32
   20884:	bhi	208a0 <main@@Base+0xd5a8>
   20888:	ldr	r0, [sp, #44]	; 0x2c
   2088c:	mov	r2, r8
   20890:	mov	r4, lr
   20894:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20898:	mov	lr, r4
   2089c:	mov	r7, r0
   208a0:	cmp	sl, r7
   208a4:	beq	20aa8 <main@@Base+0xd7b0>
   208a8:	mov	r6, #0
   208ac:	cmp	r7, r8
   208b0:	str	r6, [sp, #52]	; 0x34
   208b4:	str	r6, [sp, #48]	; 0x30
   208b8:	strb	r6, [fp, #-36]	; 0xffffffdc
   208bc:	str	r6, [fp, #-32]	; 0xffffffe0
   208c0:	beq	20928 <main@@Base+0xd630>
   208c4:	add	r0, sp, #48	; 0x30
   208c8:	mov	r1, r7
   208cc:	mov	r2, r8
   208d0:	sub	r3, fp, #32
   208d4:	str	r0, [sp]
   208d8:	ldr	r5, [sp, #44]	; 0x2c
   208dc:	mov	r0, r5
   208e0:	bl	323e8 <flatcc_json_parser_integer@@Base>
   208e4:	ldr	r9, [sp, #40]	; 0x28
   208e8:	cmp	r0, r7
   208ec:	beq	20940 <main@@Base+0xd648>
   208f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   208f4:	mov	r4, r0
   208f8:	ldr	r0, [sp, #48]	; 0x30
   208fc:	ldr	r1, [sp, #52]	; 0x34
   20900:	cmp	r2, #0
   20904:	beq	20950 <main@@Base+0xd658>
   20908:	subs	r2, r0, #129	; 0x81
   2090c:	sbcs	r1, r1, #0
   20910:	bcc	20980 <main@@Base+0xd688>
   20914:	mov	r0, r5
   20918:	mov	r1, r4
   2091c:	mov	r2, r8
   20920:	mov	r3, #8
   20924:	b	2096c <main@@Base+0xd674>
   20928:	ldr	r5, [sp, #44]	; 0x2c
   2092c:	ldr	r9, [sp, #40]	; 0x28
   20930:	mov	r4, r8
   20934:	cmp	r7, r4
   20938:	bne	209d4 <main@@Base+0xd6dc>
   2093c:	b	209a4 <main@@Base+0xd6ac>
   20940:	mov	r4, r7
   20944:	cmp	r7, r4
   20948:	bne	209d4 <main@@Base+0xd6dc>
   2094c:	b	209a4 <main@@Base+0xd6ac>
   20950:	subs	r2, r0, #128	; 0x80
   20954:	sbcs	r1, r1, #0
   20958:	bcc	20994 <main@@Base+0xd69c>
   2095c:	mov	r0, r5
   20960:	mov	r1, r4
   20964:	mov	r2, r8
   20968:	mov	r3, #7
   2096c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20970:	mov	r4, r0
   20974:	cmp	r7, r4
   20978:	bne	209d4 <main@@Base+0xd6dc>
   2097c:	b	209a4 <main@@Base+0xd6ac>
   20980:	rsb	r6, r0, #0
   20984:	strb	r6, [fp, #-36]	; 0xffffffdc
   20988:	cmp	r7, r4
   2098c:	bne	209d4 <main@@Base+0xd6dc>
   20990:	b	209a4 <main@@Base+0xd6ac>
   20994:	mov	r6, r0
   20998:	strb	r6, [fp, #-36]	; 0xffffffdc
   2099c:	cmp	r7, r4
   209a0:	bne	209d4 <main@@Base+0xd6dc>
   209a4:	sub	r0, fp, #36	; 0x24
   209a8:	mov	r1, r7
   209ac:	mov	r2, r8
   209b0:	str	r0, [sp]
   209b4:	mov	r0, r5
   209b8:	ldr	r3, [sp, #32]
   209bc:	bl	1f1e0 <main@@Base+0xbee8>
   209c0:	mov	r4, r0
   209c4:	cmp	r0, r7
   209c8:	cmpne	r4, r8
   209cc:	beq	23518 <main@@Base+0x10220>
   209d0:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   209d4:	uxtb	r0, r6
   209d8:	cmp	r0, #2
   209dc:	bne	209ec <main@@Base+0xd6f4>
   209e0:	ldrb	r0, [r5, #8]
   209e4:	tst	r0, #2
   209e8:	beq	20fbc <main@@Base+0xdcc4>
   209ec:	ldr	r0, [r5]
   209f0:	mov	r1, #1
   209f4:	b	210bc <main@@Base+0xddc4>
   209f8:	bne	20a08 <main@@Base+0xd710>
   209fc:	ldrb	r0, [r7, #2]!
   20a00:	cmp	r0, #32
   20a04:	bhi	20a20 <main@@Base+0xd728>
   20a08:	ldr	r0, [sp, #44]	; 0x2c
   20a0c:	mov	r2, r8
   20a10:	mov	r4, lr
   20a14:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20a18:	mov	lr, r4
   20a1c:	mov	r7, r0
   20a20:	cmp	sl, r7
   20a24:	beq	20aa8 <main@@Base+0xd7b0>
   20a28:	mov	r6, #0
   20a2c:	cmp	r7, r8
   20a30:	str	r6, [sp, #52]	; 0x34
   20a34:	str	r6, [sp, #48]	; 0x30
   20a38:	strb	r6, [fp, #-36]	; 0xffffffdc
   20a3c:	str	r6, [fp, #-32]	; 0xffffffe0
   20a40:	beq	20b78 <main@@Base+0xd880>
   20a44:	add	r0, sp, #48	; 0x30
   20a48:	mov	r1, r7
   20a4c:	mov	r2, r8
   20a50:	sub	r3, fp, #32
   20a54:	str	r0, [sp]
   20a58:	ldr	r5, [sp, #44]	; 0x2c
   20a5c:	mov	r0, r5
   20a60:	bl	323e8 <flatcc_json_parser_integer@@Base>
   20a64:	ldr	r9, [sp, #40]	; 0x28
   20a68:	cmp	r0, r7
   20a6c:	beq	20bc8 <main@@Base+0xd8d0>
   20a70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20a74:	mov	r4, r0
   20a78:	ldr	r0, [sp, #48]	; 0x30
   20a7c:	ldr	r1, [sp, #52]	; 0x34
   20a80:	cmp	r2, #0
   20a84:	beq	20c10 <main@@Base+0xd918>
   20a88:	subs	r2, r0, #129	; 0x81
   20a8c:	sbcs	r1, r1, #0
   20a90:	bcc	20c40 <main@@Base+0xd948>
   20a94:	mov	r0, r5
   20a98:	mov	r1, r4
   20a9c:	mov	r2, r8
   20aa0:	mov	r3, #8
   20aa4:	b	20c2c <main@@Base+0xd934>
   20aa8:	movw	r1, #12800	; 0x3200
   20aac:	bic	r0, r9, #255	; 0xff
   20ab0:	movt	r1, #30051	; 0x7563
   20ab4:	teq	r0, r1
   20ab8:	bne	20b10 <main@@Base+0xd818>
   20abc:	ldr	r5, [sp, #44]	; 0x2c
   20ac0:	ldr	r9, [sp, #40]	; 0x28
   20ac4:	cmp	lr, #4
   20ac8:	mov	r7, sl
   20acc:	blt	20dd4 <main@@Base+0xdadc>
   20ad0:	mov	r1, sl
   20ad4:	ldr	r2, [r5, #12]
   20ad8:	ldrb	r0, [r1, #3]!
   20adc:	cmp	r2, #0
   20ae0:	beq	20b90 <main@@Base+0xd898>
   20ae4:	cmp	r0, #33	; 0x21
   20ae8:	bcc	20af8 <main@@Base+0xd800>
   20aec:	cmp	r0, #58	; 0x3a
   20af0:	mov	r7, sl
   20af4:	bne	20dd4 <main@@Base+0xdadc>
   20af8:	mov	r0, #0
   20afc:	str	r0, [r5, #12]
   20b00:	sub	r0, r8, r1
   20b04:	cmp	r0, #2
   20b08:	bge	20bac <main@@Base+0xd8b4>
   20b0c:	b	20c68 <main@@Base+0xd970>
   20b10:	movw	r0, #0
   20b14:	bfc	r9, #0, #16
   20b18:	ldr	r5, [sp, #44]	; 0x2c
   20b1c:	movt	r0, #30051	; 0x7563
   20b20:	teq	r9, r0
   20b24:	ldr	r9, [sp, #40]	; 0x28
   20b28:	bne	20fa8 <main@@Base+0xdcb0>
   20b2c:	cmp	lr, #3
   20b30:	mov	r7, sl
   20b34:	blt	20f2c <main@@Base+0xdc34>
   20b38:	mov	r1, sl
   20b3c:	ldr	r2, [r5, #12]
   20b40:	ldrb	r0, [r1, #2]!
   20b44:	cmp	r2, #0
   20b48:	beq	20bd8 <main@@Base+0xd8e0>
   20b4c:	cmp	r0, #33	; 0x21
   20b50:	bcc	20b60 <main@@Base+0xd868>
   20b54:	cmp	r0, #58	; 0x3a
   20b58:	mov	r7, sl
   20b5c:	bne	20f2c <main@@Base+0xdc34>
   20b60:	mov	r0, #0
   20b64:	str	r0, [r5, #12]
   20b68:	sub	r0, r8, r1
   20b6c:	cmp	r0, #2
   20b70:	bge	20bf4 <main@@Base+0xd8fc>
   20b74:	b	20d4c <main@@Base+0xda54>
   20b78:	ldr	r5, [sp, #44]	; 0x2c
   20b7c:	ldr	r9, [sp, #40]	; 0x28
   20b80:	mov	r4, r8
   20b84:	cmp	r7, r4
   20b88:	bne	20d14 <main@@Base+0xda1c>
   20b8c:	b	20ce0 <main@@Base+0xd9e8>
   20b90:	cmp	r0, #34	; 0x22
   20b94:	mov	r7, sl
   20b98:	bne	20dd4 <main@@Base+0xdadc>
   20b9c:	add	r1, sl, #4
   20ba0:	sub	r0, r8, r1
   20ba4:	cmp	r0, #2
   20ba8:	blt	20c68 <main@@Base+0xd970>
   20bac:	ldrb	r0, [r1]
   20bb0:	cmp	r0, #32
   20bb4:	bls	20c54 <main@@Base+0xd95c>
   20bb8:	mov	r7, r1
   20bbc:	cmp	r7, r8
   20bc0:	bne	20c80 <main@@Base+0xd988>
   20bc4:	b	20cb8 <main@@Base+0xd9c0>
   20bc8:	mov	r4, r7
   20bcc:	cmp	r7, r4
   20bd0:	bne	20d14 <main@@Base+0xda1c>
   20bd4:	b	20ce0 <main@@Base+0xd9e8>
   20bd8:	cmp	r0, #34	; 0x22
   20bdc:	mov	r7, sl
   20be0:	bne	20f2c <main@@Base+0xdc34>
   20be4:	add	r1, sl, #3
   20be8:	sub	r0, r8, r1
   20bec:	cmp	r0, #2
   20bf0:	blt	20d4c <main@@Base+0xda54>
   20bf4:	ldrb	r0, [r1]
   20bf8:	cmp	r0, #32
   20bfc:	bls	20d38 <main@@Base+0xda40>
   20c00:	mov	r7, r1
   20c04:	cmp	r7, r8
   20c08:	bne	20d64 <main@@Base+0xda6c>
   20c0c:	b	20d9c <main@@Base+0xdaa4>
   20c10:	subs	r2, r0, #128	; 0x80
   20c14:	sbcs	r1, r1, #0
   20c18:	bcc	20cd0 <main@@Base+0xd9d8>
   20c1c:	mov	r0, r5
   20c20:	mov	r1, r4
   20c24:	mov	r2, r8
   20c28:	mov	r3, #7
   20c2c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20c30:	mov	r4, r0
   20c34:	cmp	r7, r4
   20c38:	bne	20d14 <main@@Base+0xda1c>
   20c3c:	b	20ce0 <main@@Base+0xd9e8>
   20c40:	rsb	r6, r0, #0
   20c44:	strb	r6, [fp, #-36]	; 0xffffffdc
   20c48:	cmp	r7, r4
   20c4c:	bne	20d14 <main@@Base+0xda1c>
   20c50:	b	20ce0 <main@@Base+0xd9e8>
   20c54:	bne	20c68 <main@@Base+0xd970>
   20c58:	mov	r7, r1
   20c5c:	ldrb	r0, [r7, #1]!
   20c60:	cmp	r0, #32
   20c64:	bhi	20c78 <main@@Base+0xd980>
   20c68:	mov	r0, r5
   20c6c:	mov	r2, r8
   20c70:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20c74:	mov	r7, r0
   20c78:	cmp	r7, r8
   20c7c:	beq	20cb8 <main@@Base+0xd9c0>
   20c80:	ldrb	r0, [r7]
   20c84:	cmp	r0, #58	; 0x3a
   20c88:	bne	20cb8 <main@@Base+0xd9c0>
   20c8c:	add	r1, r7, #1
   20c90:	sub	r0, r8, r1
   20c94:	cmp	r0, #2
   20c98:	blt	20dc4 <main@@Base+0xdacc>
   20c9c:	ldrb	r0, [r1]
   20ca0:	cmp	r0, #32
   20ca4:	bls	20db4 <main@@Base+0xdabc>
   20ca8:	mov	r7, r1
   20cac:	cmp	sl, r7
   20cb0:	bne	20ddc <main@@Base+0xdae4>
   20cb4:	b	20fa8 <main@@Base+0xdcb0>
   20cb8:	mov	r0, r5
   20cbc:	mov	r1, r7
   20cc0:	mov	r2, r8
   20cc4:	mov	r3, #4
   20cc8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20ccc:	b	20dd0 <main@@Base+0xdad8>
   20cd0:	mov	r6, r0
   20cd4:	strb	r6, [fp, #-36]	; 0xffffffdc
   20cd8:	cmp	r7, r4
   20cdc:	bne	20d14 <main@@Base+0xda1c>
   20ce0:	movw	r3, #33504	; 0x82e0
   20ce4:	sub	r0, fp, #36	; 0x24
   20ce8:	mov	r1, r7
   20cec:	mov	r2, r8
   20cf0:	movt	r3, #4
   20cf4:	str	r0, [sp]
   20cf8:	mov	r0, r5
   20cfc:	bl	1f1e0 <main@@Base+0xbee8>
   20d00:	mov	r4, r0
   20d04:	cmp	r0, r7
   20d08:	cmpne	r4, r8
   20d0c:	beq	23518 <main@@Base+0x10220>
   20d10:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20d14:	uxtb	r0, r6
   20d18:	cmp	r0, #2
   20d1c:	bne	20d2c <main@@Base+0xda34>
   20d20:	ldrb	r0, [r5, #8]
   20d24:	tst	r0, #2
   20d28:	beq	20fbc <main@@Base+0xdcc4>
   20d2c:	ldr	r0, [r5]
   20d30:	mov	r1, #0
   20d34:	b	210bc <main@@Base+0xddc4>
   20d38:	bne	20d4c <main@@Base+0xda54>
   20d3c:	mov	r7, r1
   20d40:	ldrb	r0, [r7, #1]!
   20d44:	cmp	r0, #32
   20d48:	bhi	20d5c <main@@Base+0xda64>
   20d4c:	mov	r0, r5
   20d50:	mov	r2, r8
   20d54:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20d58:	mov	r7, r0
   20d5c:	cmp	r7, r8
   20d60:	beq	20d9c <main@@Base+0xdaa4>
   20d64:	ldrb	r0, [r7]
   20d68:	cmp	r0, #58	; 0x3a
   20d6c:	bne	20d9c <main@@Base+0xdaa4>
   20d70:	add	r1, r7, #1
   20d74:	sub	r0, r8, r1
   20d78:	cmp	r0, #2
   20d7c:	blt	20f1c <main@@Base+0xdc24>
   20d80:	ldrb	r0, [r1]
   20d84:	cmp	r0, #32
   20d88:	bls	20f0c <main@@Base+0xdc14>
   20d8c:	mov	r7, r1
   20d90:	cmp	sl, r7
   20d94:	bne	20f34 <main@@Base+0xdc3c>
   20d98:	b	20fa8 <main@@Base+0xdcb0>
   20d9c:	mov	r0, r5
   20da0:	mov	r1, r7
   20da4:	mov	r2, r8
   20da8:	mov	r3, #4
   20dac:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20db0:	b	20f28 <main@@Base+0xdc30>
   20db4:	bne	20dc4 <main@@Base+0xdacc>
   20db8:	ldrb	r0, [r7, #2]!
   20dbc:	cmp	r0, #32
   20dc0:	bhi	20dd4 <main@@Base+0xdadc>
   20dc4:	mov	r0, r5
   20dc8:	mov	r2, r8
   20dcc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20dd0:	mov	r7, r0
   20dd4:	cmp	sl, r7
   20dd8:	beq	20fa8 <main@@Base+0xdcb0>
   20ddc:	mov	r6, #0
   20de0:	cmp	r7, r8
   20de4:	str	r6, [sp, #52]	; 0x34
   20de8:	str	r6, [sp, #48]	; 0x30
   20dec:	strb	r6, [fp, #-36]	; 0xffffffdc
   20df0:	str	r6, [fp, #-32]	; 0xffffffe0
   20df4:	beq	20e50 <main@@Base+0xdb58>
   20df8:	add	r0, sp, #48	; 0x30
   20dfc:	mov	r1, r7
   20e00:	mov	r2, r8
   20e04:	sub	r3, fp, #32
   20e08:	str	r0, [sp]
   20e0c:	mov	r0, r5
   20e10:	bl	323e8 <flatcc_json_parser_integer@@Base>
   20e14:	cmp	r0, r7
   20e18:	beq	20e60 <main@@Base+0xdb68>
   20e1c:	mov	r4, r0
   20e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20e24:	cmp	r0, #0
   20e28:	beq	20e70 <main@@Base+0xdb78>
   20e2c:	mov	r0, r5
   20e30:	mov	r1, r4
   20e34:	mov	r2, r8
   20e38:	mov	r3, #8
   20e3c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20e40:	mov	r4, r0
   20e44:	cmp	r7, r4
   20e48:	bne	20ee8 <main@@Base+0xdbf0>
   20e4c:	b	20eb8 <main@@Base+0xdbc0>
   20e50:	mov	r4, r8
   20e54:	cmp	r7, r4
   20e58:	bne	20ee8 <main@@Base+0xdbf0>
   20e5c:	b	20eb8 <main@@Base+0xdbc0>
   20e60:	mov	r4, r7
   20e64:	cmp	r7, r4
   20e68:	bne	20ee8 <main@@Base+0xdbf0>
   20e6c:	b	20eb8 <main@@Base+0xdbc0>
   20e70:	ldr	r0, [sp, #48]	; 0x30
   20e74:	ldr	r1, [sp, #52]	; 0x34
   20e78:	subs	r2, r0, #256	; 0x100
   20e7c:	sbcs	r1, r1, #0
   20e80:	bcc	20ea8 <main@@Base+0xdbb0>
   20e84:	mov	r0, r5
   20e88:	mov	r1, r4
   20e8c:	mov	r2, r8
   20e90:	mov	r3, #7
   20e94:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20e98:	mov	r4, r0
   20e9c:	cmp	r7, r4
   20ea0:	bne	20ee8 <main@@Base+0xdbf0>
   20ea4:	b	20eb8 <main@@Base+0xdbc0>
   20ea8:	mov	r6, r0
   20eac:	strb	r0, [fp, #-36]	; 0xffffffdc
   20eb0:	cmp	r7, r4
   20eb4:	bne	20ee8 <main@@Base+0xdbf0>
   20eb8:	sub	r0, fp, #36	; 0x24
   20ebc:	mov	r1, r7
   20ec0:	mov	r2, r8
   20ec4:	str	r0, [sp]
   20ec8:	mov	r0, r5
   20ecc:	ldr	r3, [sp, #28]
   20ed0:	bl	1f464 <main@@Base+0xc16c>
   20ed4:	mov	r4, r0
   20ed8:	cmp	r0, r7
   20edc:	cmpne	r4, r8
   20ee0:	beq	23518 <main@@Base+0x10220>
   20ee4:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   20ee8:	uxtb	r0, r6
   20eec:	cmp	r0, #2
   20ef0:	bne	20f00 <main@@Base+0xdc08>
   20ef4:	ldrb	r0, [r5, #8]
   20ef8:	tst	r0, #2
   20efc:	beq	20fbc <main@@Base+0xdcc4>
   20f00:	ldr	r0, [r5]
   20f04:	mov	r1, #3
   20f08:	b	210bc <main@@Base+0xddc4>
   20f0c:	bne	20f1c <main@@Base+0xdc24>
   20f10:	ldrb	r0, [r7, #2]!
   20f14:	cmp	r0, #32
   20f18:	bhi	20f2c <main@@Base+0xdc34>
   20f1c:	mov	r0, r5
   20f20:	mov	r2, r8
   20f24:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   20f28:	mov	r7, r0
   20f2c:	cmp	sl, r7
   20f30:	beq	20fa8 <main@@Base+0xdcb0>
   20f34:	mov	r6, #0
   20f38:	cmp	r7, r8
   20f3c:	str	r6, [sp, #52]	; 0x34
   20f40:	str	r6, [sp, #48]	; 0x30
   20f44:	strb	r6, [fp, #-36]	; 0xffffffdc
   20f48:	str	r6, [fp, #-32]	; 0xffffffe0
   20f4c:	beq	20ffc <main@@Base+0xdd04>
   20f50:	add	r0, sp, #48	; 0x30
   20f54:	mov	r1, r7
   20f58:	mov	r2, r8
   20f5c:	sub	r3, fp, #32
   20f60:	str	r0, [sp]
   20f64:	mov	r0, r5
   20f68:	bl	323e8 <flatcc_json_parser_integer@@Base>
   20f6c:	cmp	r0, r7
   20f70:	beq	2100c <main@@Base+0xdd14>
   20f74:	mov	r4, r0
   20f78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20f7c:	cmp	r0, #0
   20f80:	beq	2101c <main@@Base+0xdd24>
   20f84:	mov	r0, r5
   20f88:	mov	r1, r4
   20f8c:	mov	r2, r8
   20f90:	mov	r3, #8
   20f94:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   20f98:	mov	r4, r0
   20f9c:	cmp	r7, r4
   20fa0:	bne	2109c <main@@Base+0xdda4>
   20fa4:	b	21064 <main@@Base+0xdd6c>
   20fa8:	mov	r0, r5
   20fac:	mov	r1, sl
   20fb0:	mov	r2, r8
   20fb4:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   20fb8:	mov	r4, r0
   20fbc:	sub	r0, r8, r4
   20fc0:	cmp	r0, #2
   20fc4:	blt	210e0 <main@@Base+0xdde8>
   20fc8:	ldrb	r0, [r4]
   20fcc:	cmp	r0, #32
   20fd0:	bls	20fe4 <main@@Base+0xdcec>
   20fd4:	mov	r2, r4
   20fd8:	cmp	r2, r8
   20fdc:	bne	210fc <main@@Base+0xde04>
   20fe0:	b	21318 <main@@Base+0xe020>
   20fe4:	bne	210e0 <main@@Base+0xdde8>
   20fe8:	mov	r2, r4
   20fec:	ldrb	r0, [r2, #1]!
   20ff0:	cmp	r0, #32
   20ff4:	bhi	210f4 <main@@Base+0xddfc>
   20ff8:	b	210e0 <main@@Base+0xdde8>
   20ffc:	mov	r4, r8
   21000:	cmp	r7, r4
   21004:	bne	2109c <main@@Base+0xdda4>
   21008:	b	21064 <main@@Base+0xdd6c>
   2100c:	mov	r4, r7
   21010:	cmp	r7, r4
   21014:	bne	2109c <main@@Base+0xdda4>
   21018:	b	21064 <main@@Base+0xdd6c>
   2101c:	ldr	r0, [sp, #48]	; 0x30
   21020:	ldr	r1, [sp, #52]	; 0x34
   21024:	subs	r2, r0, #256	; 0x100
   21028:	sbcs	r1, r1, #0
   2102c:	bcc	21054 <main@@Base+0xdd5c>
   21030:	mov	r0, r5
   21034:	mov	r1, r4
   21038:	mov	r2, r8
   2103c:	mov	r3, #7
   21040:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21044:	mov	r4, r0
   21048:	cmp	r7, r4
   2104c:	bne	2109c <main@@Base+0xdda4>
   21050:	b	21064 <main@@Base+0xdd6c>
   21054:	mov	r6, r0
   21058:	strb	r0, [fp, #-36]	; 0xffffffdc
   2105c:	cmp	r7, r4
   21060:	bne	2109c <main@@Base+0xdda4>
   21064:	sub	r0, fp, #36	; 0x24
   21068:	mov	r1, r7
   2106c:	mov	r2, r8
   21070:	str	r0, [sp]
   21074:	movw	r0, #33152	; 0x8180
   21078:	movt	r0, #4
   2107c:	add	r3, r0, #84	; 0x54
   21080:	mov	r0, r5
   21084:	bl	1f464 <main@@Base+0xc16c>
   21088:	mov	r4, r0
   2108c:	cmp	r0, r7
   21090:	cmpne	r4, r8
   21094:	beq	23518 <main@@Base+0x10220>
   21098:	ldrb	r6, [fp, #-36]	; 0xffffffdc
   2109c:	uxtb	r0, r6
   210a0:	cmp	r0, #2
   210a4:	bne	210b4 <main@@Base+0xddbc>
   210a8:	ldrb	r0, [r5, #8]
   210ac:	tst	r0, #2
   210b0:	beq	20fbc <main@@Base+0xdcc4>
   210b4:	ldr	r0, [r5]
   210b8:	mov	r1, #2
   210bc:	mov	r2, #1
   210c0:	mov	r3, #1
   210c4:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   210c8:	cmp	r0, #0
   210cc:	beq	23518 <main@@Base+0x10220>
   210d0:	strb	r6, [r0]
   210d4:	sub	r0, r8, r4
   210d8:	cmp	r0, #2
   210dc:	bge	20fc8 <main@@Base+0xdcd0>
   210e0:	mov	r0, r5
   210e4:	mov	r1, r4
   210e8:	mov	r2, r8
   210ec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   210f0:	mov	r2, r0
   210f4:	cmp	r2, r8
   210f8:	beq	21318 <main@@Base+0xe020>
   210fc:	ldrb	r0, [r2]
   21100:	cmp	r0, #44	; 0x2c
   21104:	bne	234e4 <main@@Base+0x101ec>
   21108:	add	r1, r2, #1
   2110c:	sub	r0, r8, r1
   21110:	cmp	r0, #2
   21114:	blt	21144 <main@@Base+0xde4c>
   21118:	ldrb	r0, [r1]
   2111c:	cmp	r0, #32
   21120:	bls	21134 <main@@Base+0xde3c>
   21124:	mov	r2, r1
   21128:	cmp	r2, r8
   2112c:	bne	2115c <main@@Base+0xde64>
   21130:	b	2130c <main@@Base+0xe014>
   21134:	bne	21144 <main@@Base+0xde4c>
   21138:	ldrb	r0, [r2, #2]!
   2113c:	cmp	r0, #32
   21140:	bhi	21154 <main@@Base+0xde5c>
   21144:	mov	r0, r5
   21148:	mov	r2, r8
   2114c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21150:	mov	r2, r0
   21154:	cmp	r2, r8
   21158:	beq	2130c <main@@Base+0xe014>
   2115c:	ldrb	r0, [r2]
   21160:	cmp	r0, #125	; 0x7d
   21164:	bne	20528 <main@@Base+0xd230>
   21168:	add	r1, r2, #1
   2116c:	sub	r0, r8, r1
   21170:	cmp	r0, #2
   21174:	blt	235a0 <main@@Base+0x102a8>
   21178:	b	234fc <main@@Base+0x10204>
   2117c:	bne	2118c <main@@Base+0xde94>
   21180:	ldrb	r0, [r4, #2]!
   21184:	cmp	r0, #32
   21188:	bhi	2119c <main@@Base+0xdea4>
   2118c:	mov	r0, r5
   21190:	mov	r2, r8
   21194:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21198:	mov	r4, r0
   2119c:	cmp	r4, r8
   211a0:	mov	r3, r8
   211a4:	beq	211e8 <main@@Base+0xdef0>
   211a8:	ldrb	r0, [r4]
   211ac:	cmp	r0, #125	; 0x7d
   211b0:	bne	211e4 <main@@Base+0xdeec>
   211b4:	add	r1, r4, #1
   211b8:	sub	r0, r8, r1
   211bc:	cmp	r0, #2
   211c0:	blt	235a0 <main@@Base+0x102a8>
   211c4:	ldrb	r0, [r1]
   211c8:	cmp	r0, #32
   211cc:	bhi	23508 <main@@Base+0x10210>
   211d0:	bne	235a0 <main@@Base+0x102a8>
   211d4:	ldrb	r0, [r4, #2]!
   211d8:	cmp	r0, #32
   211dc:	bhi	20404 <main@@Base+0xd10c>
   211e0:	b	235a0 <main@@Base+0x102a8>
   211e4:	mov	r3, r4
   211e8:	mov	r4, #0
   211ec:	mov	r7, #1
   211f0:	cmp	r3, r8
   211f4:	mov	r1, r8
   211f8:	beq	21238 <main@@Base+0xdf40>
   211fc:	ldrb	r0, [r3]
   21200:	cmp	r0, #46	; 0x2e
   21204:	beq	21220 <main@@Base+0xdf28>
   21208:	cmp	r0, #34	; 0x22
   2120c:	movne	r1, r3
   21210:	strne	r7, [r5, #12]
   21214:	streq	r4, [r5, #12]
   21218:	addeq	r1, r3, #1
   2121c:	b	21238 <main@@Base+0xdf40>
   21220:	mov	r1, r3
   21224:	mov	r0, r5
   21228:	mov	r2, r8
   2122c:	mov	r3, #5
   21230:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21234:	mov	r1, r0
   21238:	mov	r0, r5
   2123c:	mov	r2, r8
   21240:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   21244:	mov	r2, r0
   21248:	sub	r0, r8, r0
   2124c:	cmp	r0, #2
   21250:	blt	212c4 <main@@Base+0xdfcc>
   21254:	ldrb	r0, [r2]
   21258:	cmp	r0, #32
   2125c:	bls	212b0 <main@@Base+0xdfb8>
   21260:	mov	r3, r2
   21264:	cmp	r3, r8
   21268:	beq	21318 <main@@Base+0xe020>
   2126c:	ldrb	r0, [r3]
   21270:	cmp	r0, #44	; 0x2c
   21274:	bne	2132c <main@@Base+0xe034>
   21278:	add	r1, r3, #1
   2127c:	sub	r0, r8, r1
   21280:	cmp	r0, #2
   21284:	blt	212f4 <main@@Base+0xdffc>
   21288:	ldrb	r0, [r1]
   2128c:	cmp	r0, #32
   21290:	bls	212e4 <main@@Base+0xdfec>
   21294:	mov	r3, r1
   21298:	cmp	r3, r8
   2129c:	beq	2130c <main@@Base+0xe014>
   212a0:	ldrb	r0, [r3]
   212a4:	cmp	r0, #125	; 0x7d
   212a8:	bne	211f0 <main@@Base+0xdef8>
   212ac:	b	21334 <main@@Base+0xe03c>
   212b0:	bne	212c4 <main@@Base+0xdfcc>
   212b4:	mov	r3, r2
   212b8:	ldrb	r0, [r3, #1]!
   212bc:	cmp	r0, #32
   212c0:	bhi	212d8 <main@@Base+0xdfe0>
   212c4:	mov	r1, r2
   212c8:	mov	r0, r5
   212cc:	mov	r2, r8
   212d0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   212d4:	mov	r3, r0
   212d8:	cmp	r3, r8
   212dc:	bne	2126c <main@@Base+0xdf74>
   212e0:	b	21318 <main@@Base+0xe020>
   212e4:	bne	212f4 <main@@Base+0xdffc>
   212e8:	ldrb	r0, [r3, #2]!
   212ec:	cmp	r0, #32
   212f0:	bhi	21304 <main@@Base+0xe00c>
   212f4:	mov	r0, r5
   212f8:	mov	r2, r8
   212fc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21300:	mov	r3, r0
   21304:	cmp	r3, r8
   21308:	bne	212a0 <main@@Base+0xdfa8>
   2130c:	mov	r0, r5
   21310:	mov	r1, r8
   21314:	b	2355c <main@@Base+0x10264>
   21318:	mov	r4, r8
   2131c:	ldr	r0, [r5, #24]
   21320:	cmp	r0, #0
   21324:	bne	23518 <main@@Base+0x10220>
   21328:	b	20478 <main@@Base+0xd180>
   2132c:	cmp	r0, #125	; 0x7d
   21330:	bne	234d8 <main@@Base+0x101e0>
   21334:	add	r1, r3, #1
   21338:	sub	r0, r8, r1
   2133c:	cmp	r0, #2
   21340:	blt	235a0 <main@@Base+0x102a8>
   21344:	ldrb	r0, [r1]
   21348:	cmp	r0, #32
   2134c:	bhi	23508 <main@@Base+0x10210>
   21350:	bne	235a0 <main@@Base+0x102a8>
   21354:	ldrb	r0, [r3, #2]!
   21358:	mov	r4, r3
   2135c:	cmp	r0, #32
   21360:	bhi	20404 <main@@Base+0xd10c>
   21364:	b	235a0 <main@@Base+0x102a8>
   21368:	bne	21378 <main@@Base+0xe080>
   2136c:	ldrb	r0, [r4, #2]!
   21370:	cmp	r0, #32
   21374:	bhi	21388 <main@@Base+0xe090>
   21378:	mov	r0, r5
   2137c:	mov	r2, r8
   21380:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21384:	mov	r4, r0
   21388:	cmp	r4, r8
   2138c:	mov	r2, r8
   21390:	beq	213d4 <main@@Base+0xe0dc>
   21394:	ldrb	r0, [r4]
   21398:	cmp	r0, #125	; 0x7d
   2139c:	bne	213d0 <main@@Base+0xe0d8>
   213a0:	add	r1, r4, #1
   213a4:	sub	r0, r8, r1
   213a8:	cmp	r0, #2
   213ac:	blt	2357c <main@@Base+0x10284>
   213b0:	ldrb	r0, [r1]
   213b4:	cmp	r0, #32
   213b8:	bhi	234b8 <main@@Base+0x101c0>
   213bc:	bne	2357c <main@@Base+0x10284>
   213c0:	ldrb	r0, [r4, #2]!
   213c4:	cmp	r0, #32
   213c8:	bhi	20454 <main@@Base+0xd15c>
   213cc:	b	2357c <main@@Base+0x10284>
   213d0:	mov	r2, r4
   213d4:	add	r0, r5, #12
   213d8:	str	r0, [sp, #32]
   213dc:	movw	r0, #33504	; 0x82e0
   213e0:	movt	r0, #4
   213e4:	add	r0, r0, #16
   213e8:	str	r0, [sp, #28]
   213ec:	movw	r0, #24436	; 0x5f74
   213f0:	movt	r0, #29299	; 0x7273
   213f4:	add	r0, r0, #65536	; 0x10000
   213f8:	add	r0, r0, #16777216	; 0x1000000
   213fc:	str	r0, [sp, #24]
   21400:	str	r8, [sp, #36]	; 0x24
   21404:	str	r5, [sp, #44]	; 0x2c
   21408:	str	r9, [sp, #40]	; 0x28
   2140c:	cmp	r2, r8
   21410:	mov	sl, r8
   21414:	beq	21468 <main@@Base+0xe170>
   21418:	ldrb	r0, [r2]
   2141c:	cmp	r0, #46	; 0x2e
   21420:	beq	2143c <main@@Base+0xe144>
   21424:	cmp	r0, #34	; 0x22
   21428:	bne	21458 <main@@Base+0xe160>
   2142c:	ldr	r0, [sp, #32]
   21430:	mov	r1, #0
   21434:	add	sl, r2, #1
   21438:	b	21464 <main@@Base+0xe16c>
   2143c:	mov	r1, r2
   21440:	mov	r0, r5
   21444:	mov	r2, r8
   21448:	mov	r3, #5
   2144c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21450:	mov	sl, r0
   21454:	b	21468 <main@@Base+0xe170>
   21458:	ldr	r0, [sp, #32]
   2145c:	mov	r1, #1
   21460:	mov	sl, r2
   21464:	str	r1, [r0]
   21468:	sub	lr, r8, sl
   2146c:	mov	r0, #8
   21470:	cmp	lr, #8
   21474:	movcc	r0, lr
   21478:	sub	r2, r0, #1
   2147c:	cmp	r2, #7
   21480:	bhi	21c60 <main@@Base+0xe968>
   21484:	add	r0, pc, #32
   21488:	mov	r9, #0
   2148c:	mov	ip, #0
   21490:	mov	r5, #0
   21494:	mov	r1, #0
   21498:	mov	r3, #0
   2149c:	mov	r6, #0
   214a0:	mov	r4, #0
   214a4:	mov	r7, #0
   214a8:	ldr	pc, [r0, r2, lsl #2]
   214ac:	andeq	r1, r2, r0, lsl r5
   214b0:	andeq	r1, r2, r8, lsl #10
   214b4:	andeq	r1, r2, r0, lsl #10
   214b8:	strdeq	r1, [r2], -r8
   214bc:	andeq	r1, r2, ip, ror #9
   214c0:	andeq	r1, r2, r0, ror #9
   214c4:	ldrdeq	r1, [r2], -r0
   214c8:	andeq	r1, r2, ip, asr #9
   214cc:	ldrb	ip, [sl, #7]
   214d0:	ldrb	r0, [sl, #6]
   214d4:	mov	r5, r9
   214d8:	orr	r0, ip, r0, lsl #8
   214dc:	mov	r9, r0
   214e0:	ldrb	r0, [sl, #5]
   214e4:	mov	r1, r5
   214e8:	orr	r9, r9, r0, lsl #16
   214ec:	ldrb	r0, [sl, #4]
   214f0:	mov	r3, r1
   214f4:	orr	r9, r9, r0, lsl #24
   214f8:	ldrb	r0, [sl, #3]
   214fc:	orr	r6, r0, r3
   21500:	ldrb	r0, [sl, #2]
   21504:	orr	r4, r6, r0, lsl #8
   21508:	ldrb	r0, [sl, #1]
   2150c:	orr	r7, r4, r0, lsl #16
   21510:	movw	r2, #30976	; 0x7900
   21514:	movt	r2, #24942	; 0x616e
   21518:	add	r0, r2, #95	; 0x5f
   2151c:	eor	r1, r9, r0
   21520:	ldrb	r0, [sl]
   21524:	orr	r4, r7, r0, lsl #24
   21528:	movw	r0, #28281	; 0x6e79
   2152c:	movt	r0, #28001	; 0x6d61
   21530:	eor	r0, r4, r0
   21534:	orrs	r1, r1, r0
   21538:	bne	2160c <main@@Base+0xe314>
   2153c:	ldr	r8, [sp, #36]	; 0x24
   21540:	add	r4, sl, #8
   21544:	ldr	r5, [sp, #44]	; 0x2c
   21548:	ldr	r9, [sp, #40]	; 0x28
   2154c:	mov	r1, #8
   21550:	sub	r0, r8, r4
   21554:	cmp	r0, #8
   21558:	movcc	r1, r0
   2155c:	sub	r2, r1, #1
   21560:	cmp	r2, #7
   21564:	bhi	2192c <main@@Base+0xe634>
   21568:	add	r3, pc, #4
   2156c:	mov	r1, #0
   21570:	ldr	pc, [r3, r2, lsl #2]
   21574:	andeq	r1, r2, r8, lsr #11
   21578:	andeq	r1, r2, r0, lsr #11
   2157c:	muleq	r2, r8, r5
   21580:	muleq	r2, r4, r5
   21584:	muleq	r2, r4, r5
   21588:	muleq	r2, r4, r5
   2158c:	muleq	r2, r4, r5
   21590:	muleq	r2, r4, r5
   21594:	ldrb	r1, [sl, #11]
   21598:	ldrb	r2, [sl, #10]
   2159c:	orr	r1, r1, r2, lsl #8
   215a0:	ldrb	r2, [sl, #9]
   215a4:	orr	r1, r1, r2, lsl #16
   215a8:	ldrb	r2, [r4]
   215ac:	orr	r1, r1, r2, lsl #24
   215b0:	movw	r2, #28773	; 0x7065
   215b4:	movt	r2, #29817	; 0x7479
   215b8:	teq	r1, r2
   215bc:	bne	2192c <main@@Base+0xe634>
   215c0:	cmp	r0, #5
   215c4:	blt	2192c <main@@Base+0xe634>
   215c8:	ldr	r2, [sp, #32]
   215cc:	mov	r1, sl
   215d0:	ldrb	r0, [r1, #12]!
   215d4:	ldr	r2, [r2]
   215d8:	cmp	r2, #0
   215dc:	beq	216b4 <main@@Base+0xe3bc>
   215e0:	cmp	r0, #33	; 0x21
   215e4:	bcc	215f0 <main@@Base+0xe2f8>
   215e8:	cmp	r0, #58	; 0x3a
   215ec:	bne	2192c <main@@Base+0xe634>
   215f0:	ldr	r0, [sp, #32]
   215f4:	mov	r2, #0
   215f8:	str	r2, [r0]
   215fc:	sub	r0, r8, r1
   21600:	cmp	r0, #2
   21604:	bge	216cc <main@@Base+0xe3d4>
   21608:	b	218e0 <main@@Base+0xe5e8>
   2160c:	ldr	r8, [sp, #36]	; 0x24
   21610:	bic	r1, r9, #255	; 0xff
   21614:	eor	r1, r1, r2
   21618:	orrs	r0, r1, r0
   2161c:	bne	21750 <main@@Base+0xe458>
   21620:	cmp	lr, #8
   21624:	mov	r1, sl
   21628:	blt	21a70 <main@@Base+0xe778>
   2162c:	ldr	r1, [sp, #32]
   21630:	mov	r2, sl
   21634:	ldrb	r0, [r2, #7]!
   21638:	ldr	r1, [r1]
   2163c:	cmp	r1, #0
   21640:	beq	21678 <main@@Base+0xe380>
   21644:	cmp	r0, #33	; 0x21
   21648:	bcc	21658 <main@@Base+0xe360>
   2164c:	cmp	r0, #58	; 0x3a
   21650:	mov	r1, sl
   21654:	bne	21a70 <main@@Base+0xe778>
   21658:	ldr	r0, [sp, #32]
   2165c:	mov	r1, #0
   21660:	str	r1, [r0]
   21664:	sub	r0, r8, r2
   21668:	mov	r5, lr
   2166c:	cmp	r0, #2
   21670:	bge	21698 <main@@Base+0xe3a0>
   21674:	b	216fc <main@@Base+0xe404>
   21678:	cmp	r0, #34	; 0x22
   2167c:	mov	r1, sl
   21680:	bne	21a70 <main@@Base+0xe778>
   21684:	add	r2, sl, #8
   21688:	sub	r0, r8, r2
   2168c:	mov	r5, lr
   21690:	cmp	r0, #2
   21694:	blt	216fc <main@@Base+0xe404>
   21698:	ldrb	r0, [r2]
   2169c:	cmp	r0, #32
   216a0:	bls	216e8 <main@@Base+0xe3f0>
   216a4:	mov	r1, r2
   216a8:	cmp	r1, r8
   216ac:	bne	2171c <main@@Base+0xe424>
   216b0:	b	21848 <main@@Base+0xe550>
   216b4:	cmp	r0, #34	; 0x22
   216b8:	bne	2192c <main@@Base+0xe634>
   216bc:	add	r1, sl, #13
   216c0:	sub	r0, r8, r1
   216c4:	cmp	r0, #2
   216c8:	blt	218e0 <main@@Base+0xe5e8>
   216cc:	ldrb	r0, [r1]
   216d0:	cmp	r0, #32
   216d4:	bls	218cc <main@@Base+0xe5d4>
   216d8:	mov	r2, r1
   216dc:	cmp	r2, r8
   216e0:	bne	218f8 <main@@Base+0xe600>
   216e4:	b	21938 <main@@Base+0xe640>
   216e8:	bne	216fc <main@@Base+0xe404>
   216ec:	mov	r1, r2
   216f0:	ldrb	r0, [r1, #1]!
   216f4:	cmp	r0, #32
   216f8:	bhi	21714 <main@@Base+0xe41c>
   216fc:	ldr	r0, [sp, #44]	; 0x2c
   21700:	mov	r1, r2
   21704:	mov	r2, r8
   21708:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2170c:	mov	lr, r5
   21710:	mov	r1, r0
   21714:	cmp	r1, r8
   21718:	beq	21848 <main@@Base+0xe550>
   2171c:	ldrb	r0, [r1]
   21720:	cmp	r0, #58	; 0x3a
   21724:	bne	21848 <main@@Base+0xe550>
   21728:	add	r2, r1, #1
   2172c:	sub	r0, r8, r2
   21730:	cmp	r0, #2
   21734:	blt	21a58 <main@@Base+0xe760>
   21738:	ldrb	r0, [r2]
   2173c:	cmp	r0, #32
   21740:	bls	21a48 <main@@Base+0xe750>
   21744:	mov	r1, r2
   21748:	cmp	sl, r1
   2174c:	bne	21a78 <main@@Base+0xe780>
   21750:	lsr	r1, r9, #16
   21754:	movw	r2, #27000	; 0x6978
   21758:	movw	r0, #28786	; 0x7072
   2175c:	orr	r1, r1, r4, lsl #16
   21760:	movt	r2, #25958	; 0x6566
   21764:	eor	r0, r0, r4, lsr #16
   21768:	eor	r1, r1, r2
   2176c:	orrs	r0, r1, r0
   21770:	bne	217d0 <main@@Base+0xe4d8>
   21774:	ldr	r5, [sp, #44]	; 0x2c
   21778:	ldr	r9, [sp, #40]	; 0x28
   2177c:	cmp	lr, #7
   21780:	mov	r1, sl
   21784:	blt	21b64 <main@@Base+0xe86c>
   21788:	ldr	r1, [sp, #32]
   2178c:	mov	r2, sl
   21790:	ldrb	r0, [r2, #6]!
   21794:	ldr	r1, [r1]
   21798:	cmp	r1, #0
   2179c:	beq	2185c <main@@Base+0xe564>
   217a0:	cmp	r0, #33	; 0x21
   217a4:	bcc	217b4 <main@@Base+0xe4bc>
   217a8:	cmp	r0, #58	; 0x3a
   217ac:	mov	r1, sl
   217b0:	bne	21b64 <main@@Base+0xe86c>
   217b4:	ldr	r0, [sp, #32]
   217b8:	mov	r1, #0
   217bc:	str	r1, [r0]
   217c0:	sub	r0, r8, r2
   217c4:	cmp	r0, #2
   217c8:	bge	21878 <main@@Base+0xe580>
   217cc:	b	21964 <main@@Base+0xe66c>
   217d0:	movw	r0, #30313	; 0x7669
   217d4:	and	r1, r9, #-16777216	; 0xff000000
   217d8:	ldr	r5, [sp, #44]	; 0x2c
   217dc:	ldr	r9, [sp, #40]	; 0x28
   217e0:	movt	r0, #28015	; 0x6d6f
   217e4:	eor	r1, r1, #1694498816	; 0x65000000
   217e8:	eor	r0, r4, r0
   217ec:	orrs	r0, r1, r0
   217f0:	bne	21c60 <main@@Base+0xe968>
   217f4:	cmp	lr, #6
   217f8:	mov	r4, sl
   217fc:	blt	21bd4 <main@@Base+0xe8dc>
   21800:	ldr	r2, [sp, #32]
   21804:	mov	r1, sl
   21808:	ldrb	r0, [r1, #5]!
   2180c:	ldr	r2, [r2]
   21810:	cmp	r2, #0
   21814:	beq	21894 <main@@Base+0xe59c>
   21818:	cmp	r0, #33	; 0x21
   2181c:	bcc	2182c <main@@Base+0xe534>
   21820:	cmp	r0, #58	; 0x3a
   21824:	mov	r4, sl
   21828:	bne	21bd4 <main@@Base+0xe8dc>
   2182c:	ldr	r0, [sp, #32]
   21830:	mov	r2, #0
   21834:	str	r2, [r0]
   21838:	sub	r0, r8, r1
   2183c:	cmp	r0, #2
   21840:	bge	218b0 <main@@Base+0xe5b8>
   21844:	b	219e0 <main@@Base+0xe6e8>
   21848:	ldr	r0, [sp, #44]	; 0x2c
   2184c:	mov	r2, r8
   21850:	mov	r3, #4
   21854:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21858:	b	21a68 <main@@Base+0xe770>
   2185c:	cmp	r0, #34	; 0x22
   21860:	mov	r1, sl
   21864:	bne	21b64 <main@@Base+0xe86c>
   21868:	add	r2, sl, #7
   2186c:	sub	r0, r8, r2
   21870:	cmp	r0, #2
   21874:	blt	21964 <main@@Base+0xe66c>
   21878:	ldrb	r0, [r2]
   2187c:	cmp	r0, #32
   21880:	bls	21950 <main@@Base+0xe658>
   21884:	mov	r1, r2
   21888:	cmp	r1, r8
   2188c:	bne	21980 <main@@Base+0xe688>
   21890:	b	219b8 <main@@Base+0xe6c0>
   21894:	cmp	r0, #34	; 0x22
   21898:	mov	r4, sl
   2189c:	bne	21bd4 <main@@Base+0xe8dc>
   218a0:	add	r1, sl, #6
   218a4:	sub	r0, r8, r1
   218a8:	cmp	r0, #2
   218ac:	blt	219e0 <main@@Base+0xe6e8>
   218b0:	ldrb	r0, [r1]
   218b4:	cmp	r0, #32
   218b8:	bls	219cc <main@@Base+0xe6d4>
   218bc:	mov	r4, r1
   218c0:	cmp	r4, r8
   218c4:	bne	219f8 <main@@Base+0xe700>
   218c8:	b	21a30 <main@@Base+0xe738>
   218cc:	bne	218e0 <main@@Base+0xe5e8>
   218d0:	mov	r2, r1
   218d4:	ldrb	r0, [r2, #1]!
   218d8:	cmp	r0, #32
   218dc:	bhi	218f0 <main@@Base+0xe5f8>
   218e0:	mov	r0, r5
   218e4:	mov	r2, r8
   218e8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   218ec:	mov	r2, r0
   218f0:	cmp	r2, r8
   218f4:	beq	21938 <main@@Base+0xe640>
   218f8:	ldrb	r0, [r2]
   218fc:	cmp	r0, #58	; 0x3a
   21900:	bne	21938 <main@@Base+0xe640>
   21904:	add	r1, r2, #1
   21908:	sub	r0, r8, r1
   2190c:	cmp	r0, #2
   21910:	blt	21ad0 <main@@Base+0xe7d8>
   21914:	ldrb	r0, [r1]
   21918:	cmp	r0, #32
   2191c:	bls	21ac0 <main@@Base+0xe7c8>
   21920:	mov	r2, r1
   21924:	cmp	r4, r2
   21928:	bne	21ae8 <main@@Base+0xe7f0>
   2192c:	mov	r0, r5
   21930:	mov	r1, r4
   21934:	b	21c68 <main@@Base+0xe970>
   21938:	mov	r1, r2
   2193c:	mov	r0, r5
   21940:	mov	r2, r8
   21944:	mov	r3, #4
   21948:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2194c:	b	21adc <main@@Base+0xe7e4>
   21950:	bne	21964 <main@@Base+0xe66c>
   21954:	mov	r1, r2
   21958:	ldrb	r0, [r1, #1]!
   2195c:	cmp	r0, #32
   21960:	bhi	21978 <main@@Base+0xe680>
   21964:	mov	r1, r2
   21968:	mov	r0, r5
   2196c:	mov	r2, r8
   21970:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21974:	mov	r1, r0
   21978:	cmp	r1, r8
   2197c:	beq	219b8 <main@@Base+0xe6c0>
   21980:	ldrb	r0, [r1]
   21984:	cmp	r0, #58	; 0x3a
   21988:	bne	219b8 <main@@Base+0xe6c0>
   2198c:	add	r2, r1, #1
   21990:	sub	r0, r8, r2
   21994:	cmp	r0, #2
   21998:	blt	21b50 <main@@Base+0xe858>
   2199c:	ldrb	r0, [r2]
   219a0:	cmp	r0, #32
   219a4:	bls	21b40 <main@@Base+0xe848>
   219a8:	mov	r1, r2
   219ac:	cmp	sl, r1
   219b0:	bne	21b6c <main@@Base+0xe874>
   219b4:	b	21c60 <main@@Base+0xe968>
   219b8:	mov	r0, r5
   219bc:	mov	r2, r8
   219c0:	mov	r3, #4
   219c4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   219c8:	b	21b60 <main@@Base+0xe868>
   219cc:	bne	219e0 <main@@Base+0xe6e8>
   219d0:	mov	r4, r1
   219d4:	ldrb	r0, [r4, #1]!
   219d8:	cmp	r0, #32
   219dc:	bhi	219f0 <main@@Base+0xe6f8>
   219e0:	mov	r0, r5
   219e4:	mov	r2, r8
   219e8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   219ec:	mov	r4, r0
   219f0:	cmp	r4, r8
   219f4:	beq	21a30 <main@@Base+0xe738>
   219f8:	ldrb	r0, [r4]
   219fc:	cmp	r0, #58	; 0x3a
   21a00:	bne	21a30 <main@@Base+0xe738>
   21a04:	add	r1, r4, #1
   21a08:	sub	r0, r8, r1
   21a0c:	cmp	r0, #2
   21a10:	blt	21bc4 <main@@Base+0xe8cc>
   21a14:	ldrb	r0, [r1]
   21a18:	cmp	r0, #32
   21a1c:	bls	21bb4 <main@@Base+0xe8bc>
   21a20:	mov	r4, r1
   21a24:	cmp	sl, r4
   21a28:	bne	21bdc <main@@Base+0xe8e4>
   21a2c:	b	21c60 <main@@Base+0xe968>
   21a30:	mov	r0, r5
   21a34:	mov	r1, r4
   21a38:	mov	r2, r8
   21a3c:	mov	r3, #4
   21a40:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21a44:	b	21bd0 <main@@Base+0xe8d8>
   21a48:	bne	21a58 <main@@Base+0xe760>
   21a4c:	ldrb	r0, [r1, #2]!
   21a50:	cmp	r0, #32
   21a54:	bhi	21a70 <main@@Base+0xe778>
   21a58:	ldr	r0, [sp, #44]	; 0x2c
   21a5c:	mov	r1, r2
   21a60:	mov	r2, r8
   21a64:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21a68:	mov	lr, r5
   21a6c:	mov	r1, r0
   21a70:	cmp	sl, r1
   21a74:	beq	21750 <main@@Base+0xe458>
   21a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21a7c:	mov	r2, #3
   21a80:	mov	r3, #0
   21a84:	str	r2, [sp]
   21a88:	mov	r2, r8
   21a8c:	str	r0, [sp, #4]
   21a90:	movw	r0, #416	; 0x1a0
   21a94:	movt	r0, #2
   21a98:	str	r0, [sp, #8]
   21a9c:	ldr	r5, [sp, #44]	; 0x2c
   21aa0:	mov	r0, r5
   21aa4:	bl	33544 <flatcc_json_parser_union_vector@@Base>
   21aa8:	ldr	r9, [sp, #40]	; 0x28
   21aac:	mov	r4, r0
   21ab0:	sub	r0, r8, r4
   21ab4:	cmp	r0, #2
   21ab8:	blt	21d2c <main@@Base+0xea34>
   21abc:	b	21c80 <main@@Base+0xe988>
   21ac0:	bne	21ad0 <main@@Base+0xe7d8>
   21ac4:	ldrb	r0, [r2, #2]!
   21ac8:	cmp	r0, #32
   21acc:	bhi	21ae0 <main@@Base+0xe7e8>
   21ad0:	mov	r0, r5
   21ad4:	mov	r2, r8
   21ad8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21adc:	mov	r2, r0
   21ae0:	cmp	r4, r2
   21ae4:	beq	2192c <main@@Base+0xe634>
   21ae8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   21aec:	mov	r1, #3
   21af0:	mov	r3, #0
   21af4:	str	r1, [sp]
   21af8:	mov	r1, r2
   21afc:	mov	r2, r8
   21b00:	str	r0, [sp, #4]
   21b04:	ldr	r0, [sp, #28]
   21b08:	str	r0, [sp, #8]
   21b0c:	movw	r0, #416	; 0x1a0
   21b10:	movt	r0, #2
   21b14:	str	r0, [sp, #12]
   21b18:	movw	r0, #21604	; 0x5464
   21b1c:	movt	r0, #2
   21b20:	str	r0, [sp, #16]
   21b24:	mov	r0, r5
   21b28:	bl	33ac0 <flatcc_json_parser_union_type_vector@@Base>
   21b2c:	mov	r4, r0
   21b30:	sub	r0, r8, r4
   21b34:	cmp	r0, #2
   21b38:	bge	21c80 <main@@Base+0xe988>
   21b3c:	b	21d2c <main@@Base+0xea34>
   21b40:	bne	21b50 <main@@Base+0xe858>
   21b44:	ldrb	r0, [r1, #2]!
   21b48:	cmp	r0, #32
   21b4c:	bhi	21b64 <main@@Base+0xe86c>
   21b50:	mov	r1, r2
   21b54:	mov	r0, r5
   21b58:	mov	r2, r8
   21b5c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21b60:	mov	r1, r0
   21b64:	cmp	sl, r1
   21b68:	beq	21c60 <main@@Base+0xe968>
   21b6c:	mov	r0, r5
   21b70:	mov	r2, r8
   21b74:	sub	r3, fp, #32
   21b78:	bl	25478 <main@@Base+0x12180>
   21b7c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   21b80:	mov	r4, r0
   21b84:	cmp	r6, #0
   21b88:	beq	23518 <main@@Base+0x10220>
   21b8c:	ldr	r0, [r5]
   21b90:	mov	r1, #0
   21b94:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   21b98:	cmp	r0, #0
   21b9c:	beq	23518 <main@@Base+0x10220>
   21ba0:	str	r6, [r0]
   21ba4:	sub	r0, r8, r4
   21ba8:	cmp	r0, #2
   21bac:	bge	21c80 <main@@Base+0xe988>
   21bb0:	b	21d2c <main@@Base+0xea34>
   21bb4:	bne	21bc4 <main@@Base+0xe8cc>
   21bb8:	ldrb	r0, [r4, #2]!
   21bbc:	cmp	r0, #32
   21bc0:	bhi	21bd4 <main@@Base+0xe8dc>
   21bc4:	mov	r0, r5
   21bc8:	mov	r2, r8
   21bcc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21bd0:	mov	r4, r0
   21bd4:	cmp	sl, r4
   21bd8:	beq	21c60 <main@@Base+0xe968>
   21bdc:	mov	r0, #0
   21be0:	mov	r1, #10
   21be4:	str	r0, [fp, #-32]	; 0xffffffe0
   21be8:	ldr	r0, [r5]
   21bec:	bl	2cd8c <flatcc_builder_start_table@@Base>
   21bf0:	cmp	r0, #0
   21bf4:	bne	235b0 <main@@Base+0x102b8>
   21bf8:	add	r0, sp, #48	; 0x30
   21bfc:	mov	r1, r4
   21c00:	mov	r2, r8
   21c04:	mov	r3, #5
   21c08:	str	r0, [sp]
   21c0c:	mov	r0, r5
   21c10:	bl	32ce0 <flatcc_json_parser_prepare_unions@@Base>
   21c14:	cmp	r0, r8
   21c18:	beq	235b0 <main@@Base+0x102b8>
   21c1c:	cmp	r4, r8
   21c20:	beq	21cb4 <main@@Base+0xe9bc>
   21c24:	ldrb	r0, [r4]
   21c28:	cmp	r0, #123	; 0x7b
   21c2c:	bne	21cb4 <main@@Base+0xe9bc>
   21c30:	add	r1, r4, #1
   21c34:	sub	r0, r8, r1
   21c38:	cmp	r0, #2
   21c3c:	blt	21dc8 <main@@Base+0xead0>
   21c40:	ldrb	r0, [r1]
   21c44:	cmp	r0, #32
   21c48:	bls	21db8 <main@@Base+0xeac0>
   21c4c:	mov	r4, r1
   21c50:	cmp	r4, r8
   21c54:	mov	r2, r8
   21c58:	bne	21de4 <main@@Base+0xeaec>
   21c5c:	b	21e24 <main@@Base+0xeb2c>
   21c60:	mov	r0, r5
   21c64:	mov	r1, sl
   21c68:	mov	r2, r8
   21c6c:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   21c70:	mov	r4, r0
   21c74:	sub	r0, r8, r4
   21c78:	cmp	r0, #2
   21c7c:	blt	21d2c <main@@Base+0xea34>
   21c80:	ldrb	r0, [r4]
   21c84:	cmp	r0, #32
   21c88:	bls	21c9c <main@@Base+0xe9a4>
   21c8c:	mov	r2, r4
   21c90:	cmp	r2, r8
   21c94:	bne	21d48 <main@@Base+0xea50>
   21c98:	b	23480 <main@@Base+0x10188>
   21c9c:	bne	21d2c <main@@Base+0xea34>
   21ca0:	mov	r2, r4
   21ca4:	ldrb	r0, [r2, #1]!
   21ca8:	cmp	r0, #32
   21cac:	bls	21d2c <main@@Base+0xea34>
   21cb0:	b	21d40 <main@@Base+0xea48>
   21cb4:	mov	r0, r5
   21cb8:	mov	r1, r4
   21cbc:	mov	r2, r8
   21cc0:	mov	r3, #21
   21cc4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21cc8:	mov	r4, r0
   21ccc:	ldr	r0, [r5, #24]
   21cd0:	cmp	r0, #0
   21cd4:	bne	235b0 <main@@Base+0x102b8>
   21cd8:	ldr	r3, [sp, #48]	; 0x30
   21cdc:	mov	r0, r5
   21ce0:	mov	r1, r4
   21ce4:	mov	r2, r8
   21ce8:	bl	32d70 <flatcc_json_parser_finalize_unions@@Base>
   21cec:	mov	r4, r0
   21cf0:	ldr	r0, [r5]
   21cf4:	bl	2d734 <flatcc_builder_end_table@@Base>
   21cf8:	cmp	r0, #0
   21cfc:	str	r0, [fp, #-32]	; 0xffffffe0
   21d00:	beq	235b0 <main@@Base+0x102b8>
   21d04:	mov	r7, r0
   21d08:	ldr	r0, [r5]
   21d0c:	mov	r1, #1
   21d10:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   21d14:	cmp	r0, #0
   21d18:	beq	23518 <main@@Base+0x10220>
   21d1c:	str	r7, [r0]
   21d20:	sub	r0, r8, r4
   21d24:	cmp	r0, #2
   21d28:	bge	21c80 <main@@Base+0xe988>
   21d2c:	mov	r0, r5
   21d30:	mov	r1, r4
   21d34:	mov	r2, r8
   21d38:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21d3c:	mov	r2, r0
   21d40:	cmp	r2, r8
   21d44:	beq	23480 <main@@Base+0x10188>
   21d48:	ldrb	r0, [r2]
   21d4c:	cmp	r0, #44	; 0x2c
   21d50:	bne	23494 <main@@Base+0x1019c>
   21d54:	add	r1, r2, #1
   21d58:	sub	r0, r8, r1
   21d5c:	cmp	r0, #2
   21d60:	blt	21d90 <main@@Base+0xea98>
   21d64:	ldrb	r0, [r1]
   21d68:	cmp	r0, #32
   21d6c:	bls	21d80 <main@@Base+0xea88>
   21d70:	mov	r2, r1
   21d74:	cmp	r2, r8
   21d78:	bne	21da8 <main@@Base+0xeab0>
   21d7c:	b	234cc <main@@Base+0x101d4>
   21d80:	bne	21d90 <main@@Base+0xea98>
   21d84:	ldrb	r0, [r2, #2]!
   21d88:	cmp	r0, #32
   21d8c:	bhi	21da0 <main@@Base+0xeaa8>
   21d90:	mov	r0, r5
   21d94:	mov	r2, r8
   21d98:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21d9c:	mov	r2, r0
   21da0:	cmp	r2, r8
   21da4:	beq	234cc <main@@Base+0x101d4>
   21da8:	ldrb	r0, [r2]
   21dac:	cmp	r0, #125	; 0x7d
   21db0:	bne	2140c <main@@Base+0xe114>
   21db4:	b	2349c <main@@Base+0x101a4>
   21db8:	bne	21dc8 <main@@Base+0xead0>
   21dbc:	ldrb	r0, [r4, #2]!
   21dc0:	cmp	r0, #32
   21dc4:	bhi	21dd8 <main@@Base+0xeae0>
   21dc8:	mov	r0, r5
   21dcc:	mov	r2, r8
   21dd0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   21dd4:	mov	r4, r0
   21dd8:	cmp	r4, r8
   21ddc:	mov	r2, r8
   21de0:	beq	21e24 <main@@Base+0xeb2c>
   21de4:	ldrb	r0, [r4]
   21de8:	cmp	r0, #125	; 0x7d
   21dec:	bne	21e20 <main@@Base+0xeb28>
   21df0:	add	r1, r4, #1
   21df4:	sub	r0, r8, r1
   21df8:	cmp	r0, #2
   21dfc:	blt	23470 <main@@Base+0x10178>
   21e00:	ldrb	r0, [r1]
   21e04:	cmp	r0, #32
   21e08:	bhi	233bc <main@@Base+0x100c4>
   21e0c:	bne	23470 <main@@Base+0x10178>
   21e10:	ldrb	r0, [r4, #2]!
   21e14:	cmp	r0, #32
   21e18:	bhi	21ccc <main@@Base+0xe9d4>
   21e1c:	b	23470 <main@@Base+0x10178>
   21e20:	mov	r2, r4
   21e24:	cmp	r2, r8
   21e28:	mov	r9, r8
   21e2c:	beq	21e80 <main@@Base+0xeb88>
   21e30:	ldrb	r0, [r2]
   21e34:	cmp	r0, #46	; 0x2e
   21e38:	beq	21e54 <main@@Base+0xeb5c>
   21e3c:	cmp	r0, #34	; 0x22
   21e40:	bne	21e70 <main@@Base+0xeb78>
   21e44:	ldr	r0, [sp, #32]
   21e48:	mov	r1, #0
   21e4c:	add	r9, r2, #1
   21e50:	b	21e7c <main@@Base+0xeb84>
   21e54:	ldr	r0, [sp, #44]	; 0x2c
   21e58:	mov	r1, r2
   21e5c:	mov	r2, r8
   21e60:	mov	r3, #5
   21e64:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   21e68:	mov	r9, r0
   21e6c:	b	21e80 <main@@Base+0xeb88>
   21e70:	ldr	r0, [sp, #32]
   21e74:	mov	r1, #1
   21e78:	mov	r9, r2
   21e7c:	str	r1, [r0]
   21e80:	sub	ip, r8, r9
   21e84:	mov	r0, #8
   21e88:	cmp	ip, #8
   21e8c:	movcc	r0, ip
   21e90:	sub	r7, r0, #1
   21e94:	cmp	r7, #7
   21e98:	bhi	229b4 <main@@Base+0xf6bc>
   21e9c:	add	r5, pc, #32
   21ea0:	mov	r1, #0
   21ea4:	mov	lr, #0
   21ea8:	mov	r8, #0
   21eac:	mov	r6, #0
   21eb0:	mov	r3, #0
   21eb4:	mov	r4, #0
   21eb8:	mov	r0, #0
   21ebc:	mov	r2, #0
   21ec0:	ldr	pc, [r5, r7, lsl #2]
   21ec4:	andeq	r1, r2, r8, lsr #30
   21ec8:	andeq	r1, r2, r0, lsr #30
   21ecc:	andeq	r1, r2, r8, lsl pc
   21ed0:	andeq	r1, r2, r0, lsl pc
   21ed4:	andeq	r1, r2, r4, lsl #30
   21ed8:	strdeq	r1, [r2], -r8
   21edc:	andeq	r1, r2, r8, ror #29
   21ee0:	andeq	r1, r2, r4, ror #29
   21ee4:	ldrb	lr, [r9, #7]
   21ee8:	ldrb	r0, [r9, #6]
   21eec:	mov	r8, r1
   21ef0:	orr	r0, lr, r0, lsl #8
   21ef4:	mov	r1, r0
   21ef8:	ldrb	r0, [r9, #5]
   21efc:	mov	r6, r8
   21f00:	orr	r1, r1, r0, lsl #16
   21f04:	ldrb	r0, [r9, #4]
   21f08:	mov	r3, r6
   21f0c:	orr	r1, r1, r0, lsl #24
   21f10:	ldrb	r0, [r9, #3]
   21f14:	orr	r4, r0, r3
   21f18:	ldrb	r0, [r9, #2]
   21f1c:	orr	r0, r4, r0, lsl #8
   21f20:	ldrb	r2, [r9, #1]
   21f24:	orr	r2, r0, r2, lsl #16
   21f28:	ldrb	r0, [r9]
   21f2c:	orr	r2, r2, r0, lsl #24
   21f30:	movw	r0, #29797	; 0x7465
   21f34:	movt	r0, #24931	; 0x6163
   21f38:	subs	r0, r1, r0
   21f3c:	movw	r0, #24946	; 0x6172
   21f40:	movt	r0, #25448	; 0x6368
   21f44:	sbcs	r0, r2, r0
   21f48:	bcs	220a8 <main@@Base+0xedb0>
   21f4c:	movw	r0, #29817	; 0x7479
   21f50:	movw	r3, #28005	; 0x6d65
   21f54:	ldr	r8, [sp, #36]	; 0x24
   21f58:	movt	r0, #28511	; 0x6f5f
   21f5c:	movt	r3, #25441	; 0x6361
   21f60:	eor	r0, r1, r0
   21f64:	eor	r3, r2, r3
   21f68:	orrs	r0, r0, r3
   21f6c:	beq	223c4 <main@@Base+0xf0cc>
   21f70:	movw	r0, #28265	; 0x6e69
   21f74:	movw	r7, #29793	; 0x7461
   21f78:	movt	r0, #26479	; 0x676f
   21f7c:	movt	r7, #24942	; 0x616e
   21f80:	eor	r0, r1, r0
   21f84:	eor	r2, r2, r7
   21f88:	orrs	r0, r0, r2
   21f8c:	bne	22458 <main@@Base+0xf160>
   21f90:	add	sl, r9, #8
   21f94:	mov	r1, #8
   21f98:	sub	lr, r8, sl
   21f9c:	cmp	lr, #8
   21fa0:	movcc	r1, lr
   21fa4:	sub	r6, r1, #1
   21fa8:	cmp	r6, #7
   21fac:	bhi	23248 <main@@Base+0xff50>
   21fb0:	add	r0, pc, #28
   21fb4:	mov	r5, #0
   21fb8:	mov	ip, #0
   21fbc:	mov	r1, #0
   21fc0:	mov	r3, #0
   21fc4:	mov	r4, #0
   21fc8:	mov	r7, #0
   21fcc:	mov	r2, #0
   21fd0:	ldr	pc, [r0, r6, lsl #2]
   21fd4:	andeq	r2, r2, r0, lsr r0
   21fd8:	andeq	r2, r2, r8, lsr #32
   21fdc:	andeq	r2, r2, r0, lsr #32
   21fe0:	andeq	r2, r2, r8, lsl r0
   21fe4:	andeq	r2, r2, ip
   21fe8:	strdeq	r1, [r2], -ip
   21fec:	strdeq	r1, [r2], -r4
   21ff0:	strdeq	r1, [r2], -r4
   21ff4:	ldrb	r0, [r9, #14]
   21ff8:	lsl	ip, r0, #8
   21ffc:	ldrb	r0, [r9, #13]
   22000:	mov	r1, r5
   22004:	orr	r0, ip, r0, lsl #16
   22008:	mov	r5, r0
   2200c:	ldrb	r0, [r9, #12]
   22010:	mov	r3, r1
   22014:	orr	r5, r5, r0, lsl #24
   22018:	ldrb	r0, [r9, #11]
   2201c:	orr	r4, r0, r3
   22020:	ldrb	r0, [r9, #10]
   22024:	orr	r7, r4, r0, lsl #8
   22028:	ldrb	r0, [r9, #9]
   2202c:	orr	r2, r7, r0, lsl #16
   22030:	ldrb	r0, [sl]
   22034:	movw	r3, #25856	; 0x6500
   22038:	movt	r3, #31088	; 0x7970
   2203c:	orr	r1, r2, r0, lsl #24
   22040:	ldr	r0, [sp, #24]
   22044:	bic	r2, r5, #255	; 0xff
   22048:	eor	r2, r2, r3
   2204c:	eor	r0, r1, r0
   22050:	orrs	r0, r2, r0
   22054:	bne	225cc <main@@Base+0xf2d4>
   22058:	ldr	r8, [sp, #36]	; 0x24
   2205c:	cmp	lr, #8
   22060:	blt	23248 <main@@Base+0xff50>
   22064:	ldr	r2, [sp, #32]
   22068:	mov	r1, r9
   2206c:	ldrb	r0, [r1, #15]!
   22070:	ldr	r2, [r2]
   22074:	cmp	r2, #0
   22078:	beq	227d0 <main@@Base+0xf4d8>
   2207c:	cmp	r0, #33	; 0x21
   22080:	bcc	2208c <main@@Base+0xed94>
   22084:	cmp	r0, #58	; 0x3a
   22088:	bne	23248 <main@@Base+0xff50>
   2208c:	ldr	r0, [sp, #32]
   22090:	mov	r2, #0
   22094:	str	r2, [r0]
   22098:	sub	r0, r8, r1
   2209c:	cmp	r0, #2
   220a0:	bge	227e8 <main@@Base+0xf4f0>
   220a4:	b	229ec <main@@Base+0xf6f4>
   220a8:	movw	r0, #26720	; 0x6860
   220ac:	ldr	r8, [sp, #36]	; 0x24
   220b0:	movt	r0, #24419	; 0x5f63
   220b4:	subs	r0, r0, r1
   220b8:	movw	r0, #26990	; 0x696e
   220bc:	movt	r0, #28001	; 0x6d61
   220c0:	sbcs	r0, r0, r2
   220c4:	bcc	22204 <main@@Base+0xef0c>
   220c8:	movw	r0, #29797	; 0x7465
   220cc:	movt	r0, #24931	; 0x6163
   220d0:	eor	r0, r1, r0
   220d4:	movw	r1, #24946	; 0x6172
   220d8:	movt	r1, #25448	; 0x6368
   220dc:	eor	r1, r2, r1
   220e0:	orrs	r0, r0, r1
   220e4:	bne	229b4 <main@@Base+0xf6bc>
   220e8:	add	sl, r9, #8
   220ec:	mov	r1, #8
   220f0:	sub	lr, r8, sl
   220f4:	cmp	lr, #8
   220f8:	movcc	r1, lr
   220fc:	sub	r6, r1, #1
   22100:	cmp	r6, #7
   22104:	bhi	23248 <main@@Base+0xff50>
   22108:	add	r0, pc, #28
   2210c:	mov	r1, #0
   22110:	mov	ip, #0
   22114:	mov	r5, #0
   22118:	mov	r3, #0
   2211c:	mov	r4, #0
   22120:	mov	r7, #0
   22124:	mov	r2, #0
   22128:	ldr	pc, [r0, r6, lsl #2]
   2212c:	andeq	r2, r2, r8, lsl #3
   22130:	andeq	r2, r2, r0, lsl #3
   22134:	andeq	r2, r2, r8, ror r1
   22138:	andeq	r2, r2, r0, ror r1
   2213c:	andeq	r2, r2, r4, ror #2
   22140:	andeq	r2, r2, r4, asr r1
   22144:	andeq	r2, r2, ip, asr #2
   22148:	andeq	r2, r2, ip, asr #2
   2214c:	ldrb	r0, [r9, #14]
   22150:	lsl	ip, r0, #8
   22154:	ldrb	r0, [r9, #13]
   22158:	mov	r5, r1
   2215c:	orr	r0, ip, r0, lsl #16
   22160:	mov	r1, r0
   22164:	ldrb	r0, [r9, #12]
   22168:	mov	r3, r5
   2216c:	orr	r1, r1, r0, lsl #24
   22170:	ldrb	r0, [r9, #11]
   22174:	orr	r4, r0, r3
   22178:	ldrb	r0, [r9, #10]
   2217c:	orr	r7, r4, r0, lsl #8
   22180:	ldrb	r0, [r9, #9]
   22184:	orr	r2, r7, r0, lsl #16
   22188:	bic	r0, r1, #255	; 0xff
   2218c:	movw	r1, #25856	; 0x6500
   22190:	movt	r1, #31088	; 0x7970
   22194:	eor	r0, r0, r1
   22198:	ldrb	r1, [sl]
   2219c:	orr	r1, r2, r1, lsl #24
   221a0:	movw	r2, #24436	; 0x5f74
   221a4:	movt	r2, #29299	; 0x7273
   221a8:	eor	r2, r1, r2
   221ac:	orrs	r0, r0, r2
   221b0:	bne	22634 <main@@Base+0xf33c>
   221b4:	ldr	r8, [sp, #36]	; 0x24
   221b8:	cmp	lr, #8
   221bc:	blt	23248 <main@@Base+0xff50>
   221c0:	ldr	r2, [sp, #32]
   221c4:	mov	r1, r9
   221c8:	ldrb	r0, [r1, #15]!
   221cc:	ldr	r2, [r2]
   221d0:	cmp	r2, #0
   221d4:	beq	2285c <main@@Base+0xf564>
   221d8:	cmp	r0, #33	; 0x21
   221dc:	bcc	221e8 <main@@Base+0xeef0>
   221e0:	cmp	r0, #58	; 0x3a
   221e4:	bne	23248 <main@@Base+0xff50>
   221e8:	ldr	r0, [sp, #32]
   221ec:	mov	r2, #0
   221f0:	str	r2, [r0]
   221f4:	sub	r0, r8, r1
   221f8:	cmp	r0, #2
   221fc:	bge	22874 <main@@Base+0xf57c>
   22200:	b	22b80 <main@@Base+0xf888>
   22204:	movw	r0, #26979	; 0x6963
   22208:	movw	r3, #25701	; 0x6465
   2220c:	movt	r0, #24427	; 0x5f6b
   22210:	movt	r3, #29545	; 0x7369
   22214:	eor	r0, r1, r0
   22218:	eor	r3, r2, r3
   2221c:	orrs	r0, r0, r3
   22220:	beq	224bc <main@@Base+0xf1c4>
   22224:	movw	r0, #26721	; 0x6861
   22228:	movt	r0, #24419	; 0x5f63
   2222c:	eor	r0, r1, r0
   22230:	movw	r1, #26990	; 0x696e
   22234:	movt	r1, #28001	; 0x6d61
   22238:	eor	r1, r2, r1
   2223c:	orrs	r0, r0, r1
   22240:	bne	229b4 <main@@Base+0xf6bc>
   22244:	add	r7, r9, #8
   22248:	mov	r0, #8
   2224c:	sub	lr, r8, r7
   22250:	cmp	lr, #8
   22254:	movcc	r0, lr
   22258:	sub	r6, r0, #1
   2225c:	cmp	r6, #7
   22260:	bhi	232c4 <main@@Base+0xffcc>
   22264:	str	r7, [sp, #20]
   22268:	add	r5, pc, #32
   2226c:	mov	r1, #0
   22270:	mov	ip, #0
   22274:	mov	sl, #0
   22278:	mov	r7, #0
   2227c:	mov	r3, #0
   22280:	mov	r4, #0
   22284:	mov	r2, #0
   22288:	mov	r0, #0
   2228c:	ldr	pc, [r5, r6, lsl #2]
   22290:	strdeq	r2, [r2], -r4
   22294:	andeq	r2, r2, ip, ror #5
   22298:	andeq	r2, r2, r4, ror #5
   2229c:	ldrdeq	r2, [r2], -ip
   222a0:	ldrdeq	r2, [r2], -r0
   222a4:	andeq	r2, r2, r4, asr #5
   222a8:			; <UNDEFINED> instruction: 0x000222b4
   222ac:			; <UNDEFINED> instruction: 0x000222b0
   222b0:	ldrb	ip, [r9, #15]
   222b4:	ldrb	r0, [r9, #14]
   222b8:	mov	sl, r1
   222bc:	orr	r0, ip, r0, lsl #8
   222c0:	mov	r1, r0
   222c4:	ldrb	r0, [r9, #13]
   222c8:	mov	r7, sl
   222cc:	orr	r1, r1, r0, lsl #16
   222d0:	ldrb	r0, [r9, #12]
   222d4:	mov	r3, r7
   222d8:	orr	r1, r1, r0, lsl #24
   222dc:	ldrb	r0, [r9, #11]
   222e0:	orr	r4, r0, r3
   222e4:	ldrb	r0, [r9, #10]
   222e8:	orr	r2, r4, r0, lsl #8
   222ec:	ldrb	r0, [r9, #9]
   222f0:	orr	r0, r2, r0, lsl #16
   222f4:	ldr	r7, [sp, #20]
   222f8:	movw	r2, #24436	; 0x5f74
   222fc:	movt	r2, #25970	; 0x6572
   22300:	eor	r2, r1, r2
   22304:	ldrb	r3, [r7]
   22308:	orr	r0, r0, r3, lsl #24
   2230c:	movw	r3, #25460	; 0x6374
   22310:	movt	r3, #29281	; 0x7261
   22314:	eor	r3, r0, r3
   22318:	orrs	r2, r2, r3
   2231c:	bne	2269c <main@@Base+0xf3a4>
   22320:	ldr	r8, [sp, #36]	; 0x24
   22324:	add	r7, r9, #16
   22328:	mov	r2, #8
   2232c:	sub	r0, r8, r7
   22330:	cmp	r0, #8
   22334:	movcc	r2, r0
   22338:	sub	r1, r2, #3
   2233c:	cmp	r1, #6
   22340:	bcs	22840 <main@@Base+0xf548>
   22344:	ldrb	r1, [r9, #18]
   22348:	lsl	r1, r1, #8
   2234c:	ldrb	r2, [r9, #17]
   22350:	orr	r1, r1, r2, lsl #16
   22354:	ldrb	r2, [r7]
   22358:	bic	r1, r1, #255	; 0xff
   2235c:	orr	r1, r1, r2, lsl #24
   22360:	movw	r2, #25856	; 0x6500
   22364:	movt	r2, #31088	; 0x7970
   22368:	teq	r1, r2
   2236c:	bne	232c4 <main@@Base+0xffcc>
   22370:	cmp	r0, #4
   22374:	blt	232c4 <main@@Base+0xffcc>
   22378:	ldr	r2, [sp, #32]
   2237c:	mov	r1, r9
   22380:	ldrb	r0, [r1, #19]!
   22384:	ldr	r2, [r2]
   22388:	cmp	r2, #0
   2238c:	beq	22bec <main@@Base+0xf8f4>
   22390:	ldr	r8, [sp, #36]	; 0x24
   22394:	cmp	r0, #33	; 0x21
   22398:	bcc	223a4 <main@@Base+0xf0ac>
   2239c:	cmp	r0, #58	; 0x3a
   223a0:	bne	232c4 <main@@Base+0xffcc>
   223a4:	ldr	r0, [sp, #32]
   223a8:	mov	r2, #0
   223ac:	str	r2, [r0]
   223b0:	ldr	r0, [sp, #36]	; 0x24
   223b4:	sub	r0, r0, r1
   223b8:	cmp	r0, #2
   223bc:	bge	22c0c <main@@Base+0xf914>
   223c0:	b	23064 <main@@Base+0xfd6c>
   223c4:	add	r7, r9, #8
   223c8:	mov	r2, #8
   223cc:	sub	r0, r8, r7
   223d0:	cmp	r0, #8
   223d4:	movcc	r2, r0
   223d8:	sub	r1, r2, #2
   223dc:	cmp	r1, #7
   223e0:	bcs	2271c <main@@Base+0xf424>
   223e4:	ldrb	r1, [r9, #9]
   223e8:	lsl	r2, r1, #16
   223ec:	mov	r1, #0
   223f0:	ldrb	r3, [r7]
   223f4:	orr	r2, r2, r3, lsl #24
   223f8:	movw	r3, #0
   223fc:	movt	r3, #28773	; 0x7065
   22400:	eor	r2, r2, r3
   22404:	orrs	r1, r1, r2
   22408:	bne	232c4 <main@@Base+0xffcc>
   2240c:	cmp	r0, #3
   22410:	blt	232c4 <main@@Base+0xffcc>
   22414:	ldr	r2, [sp, #32]
   22418:	mov	r1, r9
   2241c:	ldrb	r0, [r1, #10]!
   22420:	ldr	r2, [r2]
   22424:	cmp	r2, #0
   22428:	beq	22808 <main@@Base+0xf510>
   2242c:	cmp	r0, #33	; 0x21
   22430:	bcc	2243c <main@@Base+0xf144>
   22434:	cmp	r0, #58	; 0x3a
   22438:	bne	232c4 <main@@Base+0xffcc>
   2243c:	ldr	r0, [sp, #32]
   22440:	mov	r2, #0
   22444:	str	r2, [r0]
   22448:	sub	r0, r8, r1
   2244c:	cmp	r0, #2
   22450:	bge	22820 <main@@Base+0xf528>
   22454:	b	22a70 <main@@Base+0xf778>
   22458:	and	r0, r1, #-16777216	; 0xff000000
   2245c:	eor	r0, r0, #1862270976	; 0x6f000000
   22460:	orrs	r0, r0, r3
   22464:	bne	229b4 <main@@Base+0xf6bc>
   22468:	cmp	ip, #6
   2246c:	mov	r1, r9
   22470:	blt	22dec <main@@Base+0xfaf4>
   22474:	ldr	r1, [sp, #32]
   22478:	mov	r2, r9
   2247c:	ldrb	r0, [r2, #5]!
   22480:	ldr	r1, [r1]
   22484:	cmp	r1, #0
   22488:	beq	22794 <main@@Base+0xf49c>
   2248c:	cmp	r0, #33	; 0x21
   22490:	bcc	224a0 <main@@Base+0xf1a8>
   22494:	cmp	r0, #58	; 0x3a
   22498:	mov	r1, r9
   2249c:	bne	22dec <main@@Base+0xfaf4>
   224a0:	ldr	r0, [sp, #32]
   224a4:	mov	r1, #0
   224a8:	str	r1, [r0]
   224ac:	sub	r0, r8, r2
   224b0:	cmp	r0, #2
   224b4:	bge	227b0 <main@@Base+0xf4b8>
   224b8:	b	22960 <main@@Base+0xf668>
   224bc:	add	sl, r9, #8
   224c0:	mov	r1, #8
   224c4:	sub	r0, r8, sl
   224c8:	cmp	r0, #8
   224cc:	movcc	r1, r0
   224d0:	sub	r3, r1, #1
   224d4:	cmp	r3, #7
   224d8:	bhi	23248 <main@@Base+0xff50>
   224dc:	add	r6, pc, #24
   224e0:	mov	ip, #0
   224e4:	mov	r2, #0
   224e8:	mov	r1, #0
   224ec:	mov	r4, #0
   224f0:	mov	r5, #0
   224f4:	mov	r7, #0
   224f8:	ldr	pc, [r6, r3, lsl #2]
   224fc:	andeq	r2, r2, ip, asr #10
   22500:	andeq	r2, r2, r4, asr #10
   22504:	andeq	r2, r2, ip, lsr r5
   22508:	andeq	r2, r2, r4, lsr r5
   2250c:	andeq	r2, r2, r4, lsr #10
   22510:	andeq	r2, r2, ip, lsl r5
   22514:	andeq	r2, r2, ip, lsl r5
   22518:	andeq	r2, r2, ip, lsl r5
   2251c:	ldrb	r1, [r9, #13]
   22520:	lsl	r2, r1, #16
   22524:	ldrb	r1, [r9, #12]
   22528:	orr	r2, r2, r1, lsl #24
   2252c:	mov	r1, ip
   22530:	mov	ip, r2
   22534:	ldrb	r2, [r9, #11]
   22538:	orr	r4, r2, r1
   2253c:	ldrb	r1, [r9, #10]
   22540:	orr	r5, r4, r1, lsl #8
   22544:	ldrb	r1, [r9, #9]
   22548:	orr	r7, r5, r1, lsl #16
   2254c:	ldrb	r1, [sl]
   22550:	lsr	r3, ip, #16
   22554:	movw	r2, #27487	; 0x6b5f
   22558:	orr	r1, r7, r1, lsl #24
   2255c:	movw	r7, #28773	; 0x7065
   22560:	movt	r7, #29817	; 0x7479
   22564:	orr	r3, r3, r1, lsl #16
   22568:	eor	r2, r2, r1, lsr #16
   2256c:	eor	r3, r3, r7
   22570:	orrs	r2, r3, r2
   22574:	bne	22730 <main@@Base+0xf438>
   22578:	ldr	r8, [sp, #36]	; 0x24
   2257c:	cmp	r0, #7
   22580:	blt	23248 <main@@Base+0xff50>
   22584:	ldr	r2, [sp, #32]
   22588:	mov	r1, r9
   2258c:	ldrb	r0, [r1, #14]!
   22590:	ldr	r2, [r2]
   22594:	cmp	r2, #0
   22598:	beq	22894 <main@@Base+0xf59c>
   2259c:	cmp	r0, #33	; 0x21
   225a0:	bcc	225ac <main@@Base+0xf2b4>
   225a4:	cmp	r0, #58	; 0x3a
   225a8:	bne	23248 <main@@Base+0xff50>
   225ac:	ldr	r0, [sp, #32]
   225b0:	mov	r2, #0
   225b4:	str	r2, [r0]
   225b8:	ldr	r4, [sp, #36]	; 0x24
   225bc:	sub	r0, r4, r1
   225c0:	cmp	r0, #2
   225c4:	bge	228b0 <main@@Base+0xf5b8>
   225c8:	b	22c44 <main@@Base+0xf94c>
   225cc:	movw	r0, #0
   225d0:	ldr	r8, [sp, #36]	; 0x24
   225d4:	bfc	r1, #0, #16
   225d8:	movt	r0, #29556	; 0x7374
   225dc:	teq	r1, r0
   225e0:	bne	23248 <main@@Base+0xff50>
   225e4:	cmp	lr, #3
   225e8:	blt	23248 <main@@Base+0xff50>
   225ec:	ldr	r2, [sp, #32]
   225f0:	mov	r1, r9
   225f4:	ldrb	r0, [r1, #10]!
   225f8:	ldr	r2, [r2]
   225fc:	cmp	r2, #0
   22600:	beq	228d0 <main@@Base+0xf5d8>
   22604:	cmp	r0, #33	; 0x21
   22608:	bcc	22614 <main@@Base+0xf31c>
   2260c:	cmp	r0, #58	; 0x3a
   22610:	bne	23248 <main@@Base+0xff50>
   22614:	ldr	r0, [sp, #32]
   22618:	mov	r2, #0
   2261c:	str	r2, [r0]
   22620:	ldr	r4, [sp, #36]	; 0x24
   22624:	sub	r0, r4, r1
   22628:	cmp	r0, #2
   2262c:	bge	228ec <main@@Base+0xf5f4>
   22630:	b	22ccc <main@@Base+0xf9d4>
   22634:	movw	r0, #0
   22638:	ldr	r8, [sp, #36]	; 0x24
   2263c:	bfc	r1, #0, #16
   22640:	movt	r0, #29299	; 0x7273
   22644:	teq	r1, r0
   22648:	bne	23248 <main@@Base+0xff50>
   2264c:	cmp	lr, #3
   22650:	blt	23248 <main@@Base+0xff50>
   22654:	ldr	r2, [sp, #32]
   22658:	mov	r1, r9
   2265c:	ldrb	r0, [r1, #10]!
   22660:	ldr	r2, [r2]
   22664:	cmp	r2, #0
   22668:	beq	2290c <main@@Base+0xf614>
   2266c:	cmp	r0, #33	; 0x21
   22670:	bcc	2267c <main@@Base+0xf384>
   22674:	cmp	r0, #58	; 0x3a
   22678:	bne	23248 <main@@Base+0xff50>
   2267c:	ldr	r0, [sp, #32]
   22680:	mov	r2, #0
   22684:	str	r2, [r0]
   22688:	ldr	r0, [sp, #36]	; 0x24
   2268c:	sub	r0, r0, r1
   22690:	cmp	r0, #2
   22694:	bge	22928 <main@@Base+0xf630>
   22698:	b	22d50 <main@@Base+0xfa58>
   2269c:	movw	r2, #29281	; 0x7261
   226a0:	lsr	r1, r1, #16
   226a4:	ldr	r8, [sp, #36]	; 0x24
   226a8:	eor	r2, r2, r0, lsr #16
   226ac:	orr	r0, r1, r0, lsl #16
   226b0:	movw	r1, #25970	; 0x6572
   226b4:	movt	r1, #25460	; 0x6374
   226b8:	eor	r0, r0, r1
   226bc:	orrs	r0, r0, r2
   226c0:	bne	232c4 <main@@Base+0xffcc>
   226c4:	cmp	lr, #7
   226c8:	blt	232c4 <main@@Base+0xffcc>
   226cc:	ldr	r2, [sp, #32]
   226d0:	mov	r1, r9
   226d4:	ldrb	r0, [r1, #14]!
   226d8:	ldr	r2, [r2]
   226dc:	cmp	r2, #0
   226e0:	beq	22ae4 <main@@Base+0xf7ec>
   226e4:	ldr	r8, [sp, #36]	; 0x24
   226e8:	ldr	r7, [sp, #20]
   226ec:	cmp	r0, #33	; 0x21
   226f0:	bcc	226fc <main@@Base+0xf404>
   226f4:	cmp	r0, #58	; 0x3a
   226f8:	bne	232c4 <main@@Base+0xffcc>
   226fc:	ldr	r0, [sp, #32]
   22700:	mov	r2, #0
   22704:	str	r2, [r0]
   22708:	ldr	r0, [sp, #36]	; 0x24
   2270c:	sub	r0, r0, r1
   22710:	cmp	r0, #2
   22714:	bge	22b08 <main@@Base+0xf810>
   22718:	b	22ed4 <main@@Base+0xfbdc>
   2271c:	cmp	r2, #1
   22720:	mov	r1, #0
   22724:	mov	r2, #0
   22728:	beq	223f0 <main@@Base+0xf0f8>
   2272c:	b	232c4 <main@@Base+0xffcc>
   22730:	ldr	r8, [sp, #36]	; 0x24
   22734:	and	r1, r1, #-16777216	; 0xff000000
   22738:	teq	r1, #1795162112	; 0x6b000000
   2273c:	bne	23248 <main@@Base+0xff50>
   22740:	cmp	r0, #2
   22744:	blt	23248 <main@@Base+0xff50>
   22748:	ldr	r2, [sp, #32]
   2274c:	mov	r1, r9
   22750:	ldrb	r0, [r1, #9]!
   22754:	ldr	r2, [r2]
   22758:	cmp	r2, #0
   2275c:	beq	22b28 <main@@Base+0xf830>
   22760:	ldr	r8, [sp, #36]	; 0x24
   22764:	cmp	r0, #33	; 0x21
   22768:	bcc	22774 <main@@Base+0xf47c>
   2276c:	cmp	r0, #58	; 0x3a
   22770:	bne	23248 <main@@Base+0xff50>
   22774:	ldr	r0, [sp, #32]
   22778:	mov	r2, #0
   2277c:	str	r2, [r0]
   22780:	ldr	r0, [sp, #36]	; 0x24
   22784:	sub	r0, r0, r1
   22788:	cmp	r0, #2
   2278c:	bge	22b48 <main@@Base+0xf850>
   22790:	b	22f60 <main@@Base+0xfc68>
   22794:	cmp	r0, #34	; 0x22
   22798:	mov	r1, r9
   2279c:	bne	22dec <main@@Base+0xfaf4>
   227a0:	add	r2, r9, #6
   227a4:	sub	r0, r8, r2
   227a8:	cmp	r0, #2
   227ac:	blt	22960 <main@@Base+0xf668>
   227b0:	ldrb	r0, [r2]
   227b4:	cmp	r0, #32
   227b8:	bls	22948 <main@@Base+0xf650>
   227bc:	ldr	r8, [sp, #36]	; 0x24
   227c0:	mov	r1, r2
   227c4:	cmp	r1, r8
   227c8:	bne	2297c <main@@Base+0xf684>
   227cc:	b	229c0 <main@@Base+0xf6c8>
   227d0:	cmp	r0, #34	; 0x22
   227d4:	bne	23248 <main@@Base+0xff50>
   227d8:	add	r1, r9, #16
   227dc:	sub	r0, r8, r1
   227e0:	cmp	r0, #2
   227e4:	blt	229ec <main@@Base+0xf6f4>
   227e8:	ldrb	r0, [r1]
   227ec:	cmp	r0, #32
   227f0:	bls	229d4 <main@@Base+0xf6dc>
   227f4:	ldr	r8, [sp, #36]	; 0x24
   227f8:	mov	r2, r1
   227fc:	cmp	r2, r8
   22800:	bne	22a04 <main@@Base+0xf70c>
   22804:	b	22a40 <main@@Base+0xf748>
   22808:	cmp	r0, #34	; 0x22
   2280c:	bne	232c4 <main@@Base+0xffcc>
   22810:	add	r1, r9, #11
   22814:	sub	r0, r8, r1
   22818:	cmp	r0, #2
   2281c:	blt	22a70 <main@@Base+0xf778>
   22820:	ldrb	r0, [r1]
   22824:	cmp	r0, #32
   22828:	bls	22a58 <main@@Base+0xf760>
   2282c:	ldr	r8, [sp, #36]	; 0x24
   22830:	mov	r2, r1
   22834:	cmp	r2, r8
   22838:	bne	22a88 <main@@Base+0xf790>
   2283c:	b	22ac4 <main@@Base+0xf7cc>
   22840:	mov	r1, #0
   22844:	cmp	r2, #1
   22848:	beq	22adc <main@@Base+0xf7e4>
   2284c:	ldr	r8, [sp, #36]	; 0x24
   22850:	cmp	r2, #2
   22854:	beq	2234c <main@@Base+0xf054>
   22858:	b	232c4 <main@@Base+0xffcc>
   2285c:	cmp	r0, #34	; 0x22
   22860:	bne	23248 <main@@Base+0xff50>
   22864:	add	r1, r9, #16
   22868:	sub	r0, r8, r1
   2286c:	cmp	r0, #2
   22870:	blt	22b80 <main@@Base+0xf888>
   22874:	ldrb	r0, [r1]
   22878:	cmp	r0, #32
   2287c:	bls	22b68 <main@@Base+0xf870>
   22880:	ldr	r8, [sp, #36]	; 0x24
   22884:	mov	r2, r1
   22888:	cmp	r2, r8
   2288c:	bne	22b98 <main@@Base+0xf8a0>
   22890:	b	22bd4 <main@@Base+0xf8dc>
   22894:	cmp	r0, #34	; 0x22
   22898:	bne	23248 <main@@Base+0xff50>
   2289c:	add	r1, r9, #15
   228a0:	ldr	r4, [sp, #36]	; 0x24
   228a4:	sub	r0, r4, r1
   228a8:	cmp	r0, #2
   228ac:	blt	22c44 <main@@Base+0xf94c>
   228b0:	ldrb	r0, [r1]
   228b4:	cmp	r0, #32
   228b8:	bls	22c2c <main@@Base+0xf934>
   228bc:	ldr	r4, [sp, #36]	; 0x24
   228c0:	mov	r2, r1
   228c4:	cmp	r2, r4
   228c8:	bne	22c5c <main@@Base+0xf964>
   228cc:	b	22c9c <main@@Base+0xf9a4>
   228d0:	cmp	r0, #34	; 0x22
   228d4:	bne	23248 <main@@Base+0xff50>
   228d8:	add	r1, r9, #11
   228dc:	ldr	r4, [sp, #36]	; 0x24
   228e0:	sub	r0, r4, r1
   228e4:	cmp	r0, #2
   228e8:	blt	22ccc <main@@Base+0xf9d4>
   228ec:	ldrb	r0, [r1]
   228f0:	cmp	r0, #32
   228f4:	bls	22cb4 <main@@Base+0xf9bc>
   228f8:	ldr	r4, [sp, #36]	; 0x24
   228fc:	mov	r2, r1
   22900:	cmp	r2, r4
   22904:	bne	22ce4 <main@@Base+0xf9ec>
   22908:	b	22d24 <main@@Base+0xfa2c>
   2290c:	cmp	r0, #34	; 0x22
   22910:	bne	23248 <main@@Base+0xff50>
   22914:	add	r1, r9, #11
   22918:	ldr	r0, [sp, #36]	; 0x24
   2291c:	sub	r0, r0, r1
   22920:	cmp	r0, #2
   22924:	blt	22d50 <main@@Base+0xfa58>
   22928:	ldrb	r0, [r1]
   2292c:	cmp	r0, #32
   22930:	bls	22d3c <main@@Base+0xfa44>
   22934:	mov	r2, r1
   22938:	ldr	r0, [sp, #36]	; 0x24
   2293c:	cmp	r2, r0
   22940:	bne	22d6c <main@@Base+0xfa74>
   22944:	b	22dac <main@@Base+0xfab4>
   22948:	ldr	r8, [sp, #36]	; 0x24
   2294c:	bne	22960 <main@@Base+0xf668>
   22950:	mov	r1, r2
   22954:	ldrb	r0, [r1, #1]!
   22958:	cmp	r0, #32
   2295c:	bhi	22974 <main@@Base+0xf67c>
   22960:	ldr	r0, [sp, #44]	; 0x2c
   22964:	mov	r1, r2
   22968:	mov	r2, r8
   2296c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22970:	mov	r1, r0
   22974:	cmp	r1, r8
   22978:	beq	229c0 <main@@Base+0xf6c8>
   2297c:	ldrb	r0, [r1]
   22980:	cmp	r0, #58	; 0x3a
   22984:	bne	229c0 <main@@Base+0xf6c8>
   22988:	add	r2, r1, #1
   2298c:	sub	r0, r8, r2
   22990:	cmp	r0, #2
   22994:	blt	22dd8 <main@@Base+0xfae0>
   22998:	ldrb	r0, [r2]
   2299c:	cmp	r0, #32
   229a0:	bls	22dc4 <main@@Base+0xfacc>
   229a4:	ldr	r8, [sp, #36]	; 0x24
   229a8:	mov	r1, r2
   229ac:	cmp	r9, r1
   229b0:	bne	22df4 <main@@Base+0xfafc>
   229b4:	ldr	r5, [sp, #44]	; 0x2c
   229b8:	mov	r1, r9
   229bc:	b	232cc <main@@Base+0xffd4>
   229c0:	ldr	r0, [sp, #44]	; 0x2c
   229c4:	mov	r2, r8
   229c8:	mov	r3, #4
   229cc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   229d0:	b	22de8 <main@@Base+0xfaf0>
   229d4:	ldr	r8, [sp, #36]	; 0x24
   229d8:	bne	229ec <main@@Base+0xf6f4>
   229dc:	mov	r2, r1
   229e0:	ldrb	r0, [r2, #1]!
   229e4:	cmp	r0, #32
   229e8:	bhi	229fc <main@@Base+0xf704>
   229ec:	ldr	r0, [sp, #44]	; 0x2c
   229f0:	mov	r2, r8
   229f4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   229f8:	mov	r2, r0
   229fc:	cmp	r2, r8
   22a00:	beq	22a40 <main@@Base+0xf748>
   22a04:	ldrb	r0, [r2]
   22a08:	cmp	r0, #58	; 0x3a
   22a0c:	bne	22a40 <main@@Base+0xf748>
   22a10:	add	r1, r2, #1
   22a14:	sub	r0, r8, r1
   22a18:	cmp	r0, #2
   22a1c:	blt	22e3c <main@@Base+0xfb44>
   22a20:	ldrb	r0, [r1]
   22a24:	cmp	r0, #32
   22a28:	bls	22e28 <main@@Base+0xfb30>
   22a2c:	ldr	r8, [sp, #36]	; 0x24
   22a30:	mov	r2, r1
   22a34:	cmp	sl, r2
   22a38:	bne	22e54 <main@@Base+0xfb5c>
   22a3c:	b	23248 <main@@Base+0xff50>
   22a40:	ldr	r0, [sp, #44]	; 0x2c
   22a44:	mov	r1, r2
   22a48:	mov	r2, r8
   22a4c:	mov	r3, #4
   22a50:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22a54:	b	22e48 <main@@Base+0xfb50>
   22a58:	ldr	r8, [sp, #36]	; 0x24
   22a5c:	bne	22a70 <main@@Base+0xf778>
   22a60:	mov	r2, r1
   22a64:	ldrb	r0, [r2, #1]!
   22a68:	cmp	r0, #32
   22a6c:	bhi	22a80 <main@@Base+0xf788>
   22a70:	ldr	r0, [sp, #44]	; 0x2c
   22a74:	mov	r2, r8
   22a78:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22a7c:	mov	r2, r0
   22a80:	cmp	r2, r8
   22a84:	beq	22ac4 <main@@Base+0xf7cc>
   22a88:	ldrb	r0, [r2]
   22a8c:	cmp	r0, #58	; 0x3a
   22a90:	bne	22ac4 <main@@Base+0xf7cc>
   22a94:	add	r1, r2, #1
   22a98:	sub	r0, r8, r1
   22a9c:	cmp	r0, #2
   22aa0:	blt	22e88 <main@@Base+0xfb90>
   22aa4:	ldrb	r0, [r1]
   22aa8:	cmp	r0, #32
   22aac:	bls	22e74 <main@@Base+0xfb7c>
   22ab0:	ldr	r8, [sp, #36]	; 0x24
   22ab4:	mov	r2, r1
   22ab8:	cmp	r7, r2
   22abc:	bne	22ea0 <main@@Base+0xfba8>
   22ac0:	b	232c4 <main@@Base+0xffcc>
   22ac4:	ldr	r0, [sp, #44]	; 0x2c
   22ac8:	mov	r1, r2
   22acc:	mov	r2, r8
   22ad0:	mov	r3, #4
   22ad4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22ad8:	b	22e94 <main@@Base+0xfb9c>
   22adc:	ldr	r8, [sp, #36]	; 0x24
   22ae0:	b	22354 <main@@Base+0xf05c>
   22ae4:	ldr	r8, [sp, #36]	; 0x24
   22ae8:	ldr	r7, [sp, #20]
   22aec:	cmp	r0, #34	; 0x22
   22af0:	bne	232c4 <main@@Base+0xffcc>
   22af4:	add	r1, r9, #15
   22af8:	ldr	r0, [sp, #36]	; 0x24
   22afc:	sub	r0, r0, r1
   22b00:	cmp	r0, #2
   22b04:	blt	22ed4 <main@@Base+0xfbdc>
   22b08:	ldrb	r0, [r1]
   22b0c:	cmp	r0, #32
   22b10:	bls	22ec0 <main@@Base+0xfbc8>
   22b14:	mov	r2, r1
   22b18:	ldr	r0, [sp, #36]	; 0x24
   22b1c:	cmp	r2, r0
   22b20:	bne	22ef0 <main@@Base+0xfbf8>
   22b24:	b	22f34 <main@@Base+0xfc3c>
   22b28:	ldr	r8, [sp, #36]	; 0x24
   22b2c:	cmp	r0, #34	; 0x22
   22b30:	bne	23248 <main@@Base+0xff50>
   22b34:	add	r1, r9, #10
   22b38:	ldr	r0, [sp, #36]	; 0x24
   22b3c:	sub	r0, r0, r1
   22b40:	cmp	r0, #2
   22b44:	blt	22f60 <main@@Base+0xfc68>
   22b48:	ldrb	r0, [r1]
   22b4c:	cmp	r0, #32
   22b50:	bls	22f4c <main@@Base+0xfc54>
   22b54:	mov	r2, r1
   22b58:	ldr	r0, [sp, #36]	; 0x24
   22b5c:	cmp	r2, r0
   22b60:	bne	22f7c <main@@Base+0xfc84>
   22b64:	b	22fbc <main@@Base+0xfcc4>
   22b68:	ldr	r8, [sp, #36]	; 0x24
   22b6c:	bne	22b80 <main@@Base+0xf888>
   22b70:	mov	r2, r1
   22b74:	ldrb	r0, [r2, #1]!
   22b78:	cmp	r0, #32
   22b7c:	bhi	22b90 <main@@Base+0xf898>
   22b80:	ldr	r0, [sp, #44]	; 0x2c
   22b84:	mov	r2, r8
   22b88:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22b8c:	mov	r2, r0
   22b90:	cmp	r2, r8
   22b94:	beq	22bd4 <main@@Base+0xf8dc>
   22b98:	ldrb	r0, [r2]
   22b9c:	cmp	r0, #58	; 0x3a
   22ba0:	bne	22bd4 <main@@Base+0xf8dc>
   22ba4:	add	r1, r2, #1
   22ba8:	sub	r0, r8, r1
   22bac:	cmp	r0, #2
   22bb0:	blt	22fe8 <main@@Base+0xfcf0>
   22bb4:	ldrb	r0, [r1]
   22bb8:	cmp	r0, #32
   22bbc:	bls	22fd4 <main@@Base+0xfcdc>
   22bc0:	ldr	r8, [sp, #36]	; 0x24
   22bc4:	mov	r2, r1
   22bc8:	cmp	sl, r2
   22bcc:	bne	23000 <main@@Base+0xfd08>
   22bd0:	b	23248 <main@@Base+0xff50>
   22bd4:	ldr	r0, [sp, #44]	; 0x2c
   22bd8:	mov	r1, r2
   22bdc:	mov	r2, r8
   22be0:	mov	r3, #4
   22be4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22be8:	b	22ff4 <main@@Base+0xfcfc>
   22bec:	ldr	r8, [sp, #36]	; 0x24
   22bf0:	cmp	r0, #34	; 0x22
   22bf4:	bne	232c4 <main@@Base+0xffcc>
   22bf8:	add	r1, r9, #20
   22bfc:	ldr	r0, [sp, #36]	; 0x24
   22c00:	sub	r0, r0, r1
   22c04:	cmp	r0, #2
   22c08:	blt	23064 <main@@Base+0xfd6c>
   22c0c:	ldrb	r0, [r1]
   22c10:	cmp	r0, #32
   22c14:	bls	23050 <main@@Base+0xfd58>
   22c18:	mov	r2, r1
   22c1c:	ldr	r0, [sp, #36]	; 0x24
   22c20:	cmp	r2, r0
   22c24:	bne	23080 <main@@Base+0xfd88>
   22c28:	b	230c0 <main@@Base+0xfdc8>
   22c2c:	ldr	r4, [sp, #36]	; 0x24
   22c30:	bne	22c44 <main@@Base+0xf94c>
   22c34:	mov	r2, r1
   22c38:	ldrb	r0, [r2, #1]!
   22c3c:	cmp	r0, #32
   22c40:	bhi	22c54 <main@@Base+0xf95c>
   22c44:	ldr	r0, [sp, #44]	; 0x2c
   22c48:	mov	r2, r4
   22c4c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22c50:	mov	r2, r0
   22c54:	cmp	r2, r4
   22c58:	beq	22c9c <main@@Base+0xf9a4>
   22c5c:	ldrb	r0, [r2]
   22c60:	cmp	r0, #58	; 0x3a
   22c64:	bne	22c9c <main@@Base+0xf9a4>
   22c68:	ldr	r0, [sp, #36]	; 0x24
   22c6c:	add	r1, r2, #1
   22c70:	sub	r0, r0, r1
   22c74:	cmp	r0, #2
   22c78:	blt	23124 <main@@Base+0xfe2c>
   22c7c:	ldrb	r0, [r1]
   22c80:	cmp	r0, #32
   22c84:	bls	23114 <main@@Base+0xfe1c>
   22c88:	mov	r2, r1
   22c8c:	ldr	r8, [sp, #36]	; 0x24
   22c90:	cmp	sl, r2
   22c94:	bne	23140 <main@@Base+0xfe48>
   22c98:	b	23248 <main@@Base+0xff50>
   22c9c:	mov	r1, r2
   22ca0:	ldr	r0, [sp, #44]	; 0x2c
   22ca4:	ldr	r2, [sp, #36]	; 0x24
   22ca8:	mov	r3, #4
   22cac:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22cb0:	b	23130 <main@@Base+0xfe38>
   22cb4:	ldr	r4, [sp, #36]	; 0x24
   22cb8:	bne	22ccc <main@@Base+0xf9d4>
   22cbc:	mov	r2, r1
   22cc0:	ldrb	r0, [r2, #1]!
   22cc4:	cmp	r0, #32
   22cc8:	bhi	22cdc <main@@Base+0xf9e4>
   22ccc:	ldr	r0, [sp, #44]	; 0x2c
   22cd0:	mov	r2, r4
   22cd4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22cd8:	mov	r2, r0
   22cdc:	cmp	r2, r4
   22ce0:	beq	22d24 <main@@Base+0xfa2c>
   22ce4:	ldrb	r0, [r2]
   22ce8:	cmp	r0, #58	; 0x3a
   22cec:	bne	22d24 <main@@Base+0xfa2c>
   22cf0:	ldr	r0, [sp, #36]	; 0x24
   22cf4:	add	r1, r2, #1
   22cf8:	sub	r0, r0, r1
   22cfc:	cmp	r0, #2
   22d00:	blt	230e8 <main@@Base+0xfdf0>
   22d04:	ldrb	r0, [r1]
   22d08:	cmp	r0, #32
   22d0c:	bls	230d8 <main@@Base+0xfde0>
   22d10:	mov	r2, r1
   22d14:	ldr	r8, [sp, #36]	; 0x24
   22d18:	cmp	sl, r2
   22d1c:	bne	23104 <main@@Base+0xfe0c>
   22d20:	b	23248 <main@@Base+0xff50>
   22d24:	mov	r1, r2
   22d28:	ldr	r0, [sp, #44]	; 0x2c
   22d2c:	ldr	r2, [sp, #36]	; 0x24
   22d30:	mov	r3, #4
   22d34:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22d38:	b	230f4 <main@@Base+0xfdfc>
   22d3c:	bne	22d50 <main@@Base+0xfa58>
   22d40:	mov	r2, r1
   22d44:	ldrb	r0, [r2, #1]!
   22d48:	cmp	r0, #32
   22d4c:	bhi	22d60 <main@@Base+0xfa68>
   22d50:	ldr	r0, [sp, #44]	; 0x2c
   22d54:	ldr	r2, [sp, #36]	; 0x24
   22d58:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22d5c:	mov	r2, r0
   22d60:	ldr	r0, [sp, #36]	; 0x24
   22d64:	cmp	r2, r0
   22d68:	beq	22dac <main@@Base+0xfab4>
   22d6c:	ldrb	r0, [r2]
   22d70:	cmp	r0, #58	; 0x3a
   22d74:	bne	22dac <main@@Base+0xfab4>
   22d78:	ldr	r0, [sp, #36]	; 0x24
   22d7c:	add	r1, r2, #1
   22d80:	sub	r0, r0, r1
   22d84:	cmp	r0, #2
   22d88:	blt	23170 <main@@Base+0xfe78>
   22d8c:	ldrb	r0, [r1]
   22d90:	cmp	r0, #32
   22d94:	bls	23160 <main@@Base+0xfe68>
   22d98:	mov	r2, r1
   22d9c:	ldr	r8, [sp, #36]	; 0x24
   22da0:	cmp	sl, r2
   22da4:	bne	2318c <main@@Base+0xfe94>
   22da8:	b	23248 <main@@Base+0xff50>
   22dac:	mov	r1, r2
   22db0:	ldr	r0, [sp, #44]	; 0x2c
   22db4:	ldr	r2, [sp, #36]	; 0x24
   22db8:	mov	r3, #4
   22dbc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22dc0:	b	2317c <main@@Base+0xfe84>
   22dc4:	ldr	r8, [sp, #36]	; 0x24
   22dc8:	bne	22dd8 <main@@Base+0xfae0>
   22dcc:	ldrb	r0, [r1, #2]!
   22dd0:	cmp	r0, #32
   22dd4:	bhi	22dec <main@@Base+0xfaf4>
   22dd8:	ldr	r0, [sp, #44]	; 0x2c
   22ddc:	mov	r1, r2
   22de0:	mov	r2, r8
   22de4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22de8:	mov	r1, r0
   22dec:	cmp	r9, r1
   22df0:	beq	229b4 <main@@Base+0xf6bc>
   22df4:	ldr	r0, [sp, #48]	; 0x30
   22df8:	mov	r2, #7
   22dfc:	mov	r3, #3
   22e00:	str	r2, [sp]
   22e04:	mov	r2, r8
   22e08:	str	r0, [sp, #4]
   22e0c:	movw	r0, #36296	; 0x8dc8
   22e10:	movt	r0, #2
   22e14:	str	r0, [sp, #8]
   22e18:	ldr	r5, [sp, #44]	; 0x2c
   22e1c:	mov	r0, r5
   22e20:	bl	32de4 <flatcc_json_parser_union@@Base>
   22e24:	b	232d8 <main@@Base+0xffe0>
   22e28:	ldr	r8, [sp, #36]	; 0x24
   22e2c:	bne	22e3c <main@@Base+0xfb44>
   22e30:	ldrb	r0, [r2, #2]!
   22e34:	cmp	r0, #32
   22e38:	bhi	22e4c <main@@Base+0xfb54>
   22e3c:	ldr	r0, [sp, #44]	; 0x2c
   22e40:	mov	r2, r8
   22e44:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22e48:	mov	r2, r0
   22e4c:	cmp	sl, r2
   22e50:	beq	23248 <main@@Base+0xff50>
   22e54:	ldr	r0, [sp, #48]	; 0x30
   22e58:	movw	r1, #33504	; 0x82e0
   22e5c:	mov	r3, #3
   22e60:	movt	r1, #4
   22e64:	str	r3, [sp]
   22e68:	mov	r3, #1
   22e6c:	add	r1, r1, #32
   22e70:	b	2329c <main@@Base+0xffa4>
   22e74:	ldr	r8, [sp, #36]	; 0x24
   22e78:	bne	22e88 <main@@Base+0xfb90>
   22e7c:	ldrb	r0, [r2, #2]!
   22e80:	cmp	r0, #32
   22e84:	bhi	22e98 <main@@Base+0xfba0>
   22e88:	ldr	r0, [sp, #44]	; 0x2c
   22e8c:	mov	r2, r8
   22e90:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22e94:	mov	r2, r0
   22e98:	cmp	r7, r2
   22e9c:	beq	232c4 <main@@Base+0xffcc>
   22ea0:	ldr	r0, [sp, #48]	; 0x30
   22ea4:	movw	r1, #33504	; 0x82e0
   22ea8:	mov	r3, #7
   22eac:	movt	r1, #4
   22eb0:	str	r3, [sp]
   22eb4:	mov	r3, #3
   22eb8:	add	r1, r1, #48	; 0x30
   22ebc:	b	2329c <main@@Base+0xffa4>
   22ec0:	bne	22ed4 <main@@Base+0xfbdc>
   22ec4:	mov	r2, r1
   22ec8:	ldrb	r0, [r2, #1]!
   22ecc:	cmp	r0, #32
   22ed0:	bhi	22ee4 <main@@Base+0xfbec>
   22ed4:	ldr	r0, [sp, #44]	; 0x2c
   22ed8:	ldr	r2, [sp, #36]	; 0x24
   22edc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22ee0:	mov	r2, r0
   22ee4:	ldr	r0, [sp, #36]	; 0x24
   22ee8:	cmp	r2, r0
   22eec:	beq	22f34 <main@@Base+0xfc3c>
   22ef0:	ldrb	r0, [r2]
   22ef4:	cmp	r0, #58	; 0x3a
   22ef8:	bne	22f34 <main@@Base+0xfc3c>
   22efc:	ldr	r0, [sp, #36]	; 0x24
   22f00:	add	r1, r2, #1
   22f04:	sub	r0, r0, r1
   22f08:	cmp	r0, #2
   22f0c:	blt	231d4 <main@@Base+0xfedc>
   22f10:	ldrb	r0, [r1]
   22f14:	cmp	r0, #32
   22f18:	bls	231c4 <main@@Base+0xfecc>
   22f1c:	mov	r2, r1
   22f20:	ldr	r7, [sp, #20]
   22f24:	ldr	r8, [sp, #36]	; 0x24
   22f28:	cmp	r7, r2
   22f2c:	bne	231f4 <main@@Base+0xfefc>
   22f30:	b	232c4 <main@@Base+0xffcc>
   22f34:	mov	r1, r2
   22f38:	ldr	r0, [sp, #44]	; 0x2c
   22f3c:	ldr	r2, [sp, #36]	; 0x24
   22f40:	mov	r3, #4
   22f44:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22f48:	b	231e0 <main@@Base+0xfee8>
   22f4c:	bne	22f60 <main@@Base+0xfc68>
   22f50:	mov	r2, r1
   22f54:	ldrb	r0, [r2, #1]!
   22f58:	cmp	r0, #32
   22f5c:	bhi	22f70 <main@@Base+0xfc78>
   22f60:	ldr	r0, [sp, #44]	; 0x2c
   22f64:	ldr	r2, [sp, #36]	; 0x24
   22f68:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22f6c:	mov	r2, r0
   22f70:	ldr	r0, [sp, #36]	; 0x24
   22f74:	cmp	r2, r0
   22f78:	beq	22fbc <main@@Base+0xfcc4>
   22f7c:	ldrb	r0, [r2]
   22f80:	cmp	r0, #58	; 0x3a
   22f84:	bne	22fbc <main@@Base+0xfcc4>
   22f88:	ldr	r0, [sp, #36]	; 0x24
   22f8c:	add	r1, r2, #1
   22f90:	sub	r0, r0, r1
   22f94:	cmp	r0, #2
   22f98:	blt	23214 <main@@Base+0xff1c>
   22f9c:	ldrb	r0, [r1]
   22fa0:	cmp	r0, #32
   22fa4:	bls	23204 <main@@Base+0xff0c>
   22fa8:	mov	r2, r1
   22fac:	ldr	r8, [sp, #36]	; 0x24
   22fb0:	cmp	sl, r2
   22fb4:	bne	23230 <main@@Base+0xff38>
   22fb8:	b	23248 <main@@Base+0xff50>
   22fbc:	mov	r1, r2
   22fc0:	ldr	r0, [sp, #44]	; 0x2c
   22fc4:	ldr	r2, [sp, #36]	; 0x24
   22fc8:	mov	r3, #4
   22fcc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   22fd0:	b	23220 <main@@Base+0xff28>
   22fd4:	ldr	r8, [sp, #36]	; 0x24
   22fd8:	bne	22fe8 <main@@Base+0xfcf0>
   22fdc:	ldrb	r0, [r2, #2]!
   22fe0:	cmp	r0, #32
   22fe4:	bhi	22ff8 <main@@Base+0xfd00>
   22fe8:	ldr	r0, [sp, #44]	; 0x2c
   22fec:	mov	r2, r8
   22ff0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   22ff4:	mov	r2, r0
   22ff8:	cmp	sl, r2
   22ffc:	beq	23248 <main@@Base+0xff50>
   23000:	ldr	r0, [sp, #48]	; 0x30
   23004:	movw	r1, #33504	; 0x82e0
   23008:	mov	r3, #9
   2300c:	movt	r1, #4
   23010:	str	r3, [sp]
   23014:	mov	r3, #4
   23018:	add	r1, r1, #64	; 0x40
   2301c:	stmib	sp, {r0, r1}
   23020:	movw	r0, #36296	; 0x8dc8
   23024:	mov	r1, r2
   23028:	mov	r2, r8
   2302c:	movt	r0, #2
   23030:	str	r0, [sp, #12]
   23034:	movw	r0, #40308	; 0x9d74
   23038:	movt	r0, #2
   2303c:	str	r0, [sp, #16]
   23040:	ldr	r5, [sp, #44]	; 0x2c
   23044:	mov	r0, r5
   23048:	bl	33ac0 <flatcc_json_parser_union_type_vector@@Base>
   2304c:	b	232d8 <main@@Base+0xffe0>
   23050:	bne	23064 <main@@Base+0xfd6c>
   23054:	mov	r2, r1
   23058:	ldrb	r0, [r2, #1]!
   2305c:	cmp	r0, #32
   23060:	bhi	23074 <main@@Base+0xfd7c>
   23064:	ldr	r0, [sp, #44]	; 0x2c
   23068:	ldr	r2, [sp, #36]	; 0x24
   2306c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23070:	mov	r2, r0
   23074:	ldr	r0, [sp, #36]	; 0x24
   23078:	cmp	r2, r0
   2307c:	beq	230c0 <main@@Base+0xfdc8>
   23080:	ldrb	r0, [r2]
   23084:	cmp	r0, #58	; 0x3a
   23088:	bne	230c0 <main@@Base+0xfdc8>
   2308c:	ldr	r0, [sp, #36]	; 0x24
   23090:	add	r1, r2, #1
   23094:	sub	r0, r0, r1
   23098:	cmp	r0, #2
   2309c:	blt	23264 <main@@Base+0xff6c>
   230a0:	ldrb	r0, [r1]
   230a4:	cmp	r0, #32
   230a8:	bls	23254 <main@@Base+0xff5c>
   230ac:	mov	r2, r1
   230b0:	ldr	r8, [sp, #36]	; 0x24
   230b4:	cmp	r7, r2
   230b8:	bne	23280 <main@@Base+0xff88>
   230bc:	b	232c4 <main@@Base+0xffcc>
   230c0:	mov	r1, r2
   230c4:	ldr	r0, [sp, #44]	; 0x2c
   230c8:	ldr	r2, [sp, #36]	; 0x24
   230cc:	mov	r3, #4
   230d0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   230d4:	b	23270 <main@@Base+0xff78>
   230d8:	bne	230e8 <main@@Base+0xfdf0>
   230dc:	ldrb	r0, [r2, #2]!
   230e0:	cmp	r0, #32
   230e4:	bhi	230f8 <main@@Base+0xfe00>
   230e8:	ldr	r0, [sp, #44]	; 0x2c
   230ec:	ldr	r2, [sp, #36]	; 0x24
   230f0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   230f4:	mov	r2, r0
   230f8:	ldr	r8, [sp, #36]	; 0x24
   230fc:	cmp	sl, r2
   23100:	beq	23248 <main@@Base+0xff50>
   23104:	ldr	r0, [sp, #48]	; 0x30
   23108:	mov	r1, #3
   2310c:	mov	r3, #1
   23110:	b	2323c <main@@Base+0xff44>
   23114:	bne	23124 <main@@Base+0xfe2c>
   23118:	ldrb	r0, [r2, #2]!
   2311c:	cmp	r0, #32
   23120:	bhi	23134 <main@@Base+0xfe3c>
   23124:	ldr	r0, [sp, #44]	; 0x2c
   23128:	ldr	r2, [sp, #36]	; 0x24
   2312c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23130:	mov	r2, r0
   23134:	ldr	r8, [sp, #36]	; 0x24
   23138:	cmp	sl, r2
   2313c:	beq	23248 <main@@Base+0xff50>
   23140:	ldr	r0, [sp, #48]	; 0x30
   23144:	movw	r1, #33504	; 0x82e0
   23148:	mov	r3, #5
   2314c:	movt	r1, #4
   23150:	str	r3, [sp]
   23154:	mov	r3, #2
   23158:	add	r1, r1, #96	; 0x60
   2315c:	b	2329c <main@@Base+0xffa4>
   23160:	bne	23170 <main@@Base+0xfe78>
   23164:	ldrb	r0, [r2, #2]!
   23168:	cmp	r0, #32
   2316c:	bhi	23180 <main@@Base+0xfe88>
   23170:	ldr	r0, [sp, #44]	; 0x2c
   23174:	ldr	r2, [sp, #36]	; 0x24
   23178:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2317c:	mov	r2, r0
   23180:	ldr	r8, [sp, #36]	; 0x24
   23184:	cmp	sl, r2
   23188:	beq	23248 <main@@Base+0xff50>
   2318c:	ldr	r0, [sp, #48]	; 0x30
   23190:	mov	r1, #9
   23194:	mov	r3, #4
   23198:	str	r1, [sp]
   2319c:	mov	r1, r2
   231a0:	mov	r2, r8
   231a4:	str	r0, [sp, #4]
   231a8:	movw	r0, #36296	; 0x8dc8
   231ac:	movt	r0, #2
   231b0:	str	r0, [sp, #8]
   231b4:	ldr	r5, [sp, #44]	; 0x2c
   231b8:	mov	r0, r5
   231bc:	bl	33544 <flatcc_json_parser_union_vector@@Base>
   231c0:	b	232d8 <main@@Base+0xffe0>
   231c4:	bne	231d4 <main@@Base+0xfedc>
   231c8:	ldrb	r0, [r2, #2]!
   231cc:	cmp	r0, #32
   231d0:	bhi	231e4 <main@@Base+0xfeec>
   231d4:	ldr	r0, [sp, #44]	; 0x2c
   231d8:	ldr	r2, [sp, #36]	; 0x24
   231dc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   231e0:	mov	r2, r0
   231e4:	ldr	r7, [sp, #20]
   231e8:	ldr	r8, [sp, #36]	; 0x24
   231ec:	cmp	r7, r2
   231f0:	beq	232c4 <main@@Base+0xffcc>
   231f4:	ldr	r0, [sp, #48]	; 0x30
   231f8:	mov	r1, #1
   231fc:	mov	r3, #0
   23200:	b	2323c <main@@Base+0xff44>
   23204:	bne	23214 <main@@Base+0xff1c>
   23208:	ldrb	r0, [r2, #2]!
   2320c:	cmp	r0, #32
   23210:	bhi	23224 <main@@Base+0xff2c>
   23214:	ldr	r0, [sp, #44]	; 0x2c
   23218:	ldr	r2, [sp, #36]	; 0x24
   2321c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23220:	mov	r2, r0
   23224:	ldr	r8, [sp, #36]	; 0x24
   23228:	cmp	sl, r2
   2322c:	beq	23248 <main@@Base+0xff50>
   23230:	ldr	r0, [sp, #48]	; 0x30
   23234:	mov	r1, #5
   23238:	mov	r3, #2
   2323c:	str	r1, [sp]
   23240:	mov	r1, r2
   23244:	b	22e04 <main@@Base+0xfb0c>
   23248:	ldr	r5, [sp, #44]	; 0x2c
   2324c:	mov	r1, sl
   23250:	b	232cc <main@@Base+0xffd4>
   23254:	bne	23264 <main@@Base+0xff6c>
   23258:	ldrb	r0, [r2, #2]!
   2325c:	cmp	r0, #32
   23260:	bhi	23274 <main@@Base+0xff7c>
   23264:	ldr	r0, [sp, #44]	; 0x2c
   23268:	ldr	r2, [sp, #36]	; 0x24
   2326c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23270:	mov	r2, r0
   23274:	ldr	r8, [sp, #36]	; 0x24
   23278:	cmp	r7, r2
   2327c:	beq	232c4 <main@@Base+0xffcc>
   23280:	ldr	r0, [sp, #48]	; 0x30
   23284:	movw	r1, #33504	; 0x82e0
   23288:	mov	r3, #1
   2328c:	movt	r1, #4
   23290:	str	r3, [sp]
   23294:	mov	r3, #0
   23298:	add	r1, r1, #80	; 0x50
   2329c:	stmib	sp, {r0, r1}
   232a0:	movw	r0, #36296	; 0x8dc8
   232a4:	mov	r1, r2
   232a8:	mov	r2, r8
   232ac:	movt	r0, #2
   232b0:	str	r0, [sp, #12]
   232b4:	ldr	r5, [sp, #44]	; 0x2c
   232b8:	mov	r0, r5
   232bc:	bl	32f3c <flatcc_json_parser_union_type@@Base>
   232c0:	b	232d8 <main@@Base+0xffe0>
   232c4:	ldr	r5, [sp, #44]	; 0x2c
   232c8:	mov	r1, r7
   232cc:	mov	r0, r5
   232d0:	mov	r2, r8
   232d4:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   232d8:	ldr	r9, [sp, #40]	; 0x28
   232dc:	mov	r1, r0
   232e0:	sub	r0, r8, r0
   232e4:	cmp	r0, #2
   232e8:	blt	2331c <main@@Base+0x10024>
   232ec:	ldrb	r0, [r1]
   232f0:	cmp	r0, #32
   232f4:	bls	23308 <main@@Base+0x10010>
   232f8:	mov	r2, r1
   232fc:	cmp	r2, r8
   23300:	bne	23334 <main@@Base+0x1003c>
   23304:	b	233d0 <main@@Base+0x100d8>
   23308:	bne	2331c <main@@Base+0x10024>
   2330c:	mov	r2, r1
   23310:	ldrb	r0, [r2, #1]!
   23314:	cmp	r0, #32
   23318:	bhi	2332c <main@@Base+0x10034>
   2331c:	mov	r0, r5
   23320:	mov	r2, r8
   23324:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23328:	mov	r2, r0
   2332c:	cmp	r2, r8
   23330:	beq	233d0 <main@@Base+0x100d8>
   23334:	ldrb	r0, [r2]
   23338:	cmp	r0, #44	; 0x2c
   2333c:	bne	233e4 <main@@Base+0x100ec>
   23340:	add	r1, r2, #1
   23344:	sub	r0, r8, r1
   23348:	cmp	r0, #2
   2334c:	blt	2337c <main@@Base+0x10084>
   23350:	ldrb	r0, [r1]
   23354:	cmp	r0, #32
   23358:	bls	2336c <main@@Base+0x10074>
   2335c:	mov	r2, r1
   23360:	cmp	r2, r8
   23364:	bne	23394 <main@@Base+0x1009c>
   23368:	b	23428 <main@@Base+0x10130>
   2336c:	bne	2337c <main@@Base+0x10084>
   23370:	ldrb	r0, [r2, #2]!
   23374:	cmp	r0, #32
   23378:	bhi	2338c <main@@Base+0x10094>
   2337c:	mov	r0, r5
   23380:	mov	r2, r8
   23384:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23388:	mov	r2, r0
   2338c:	cmp	r2, r8
   23390:	beq	23428 <main@@Base+0x10130>
   23394:	ldrb	r0, [r2]
   23398:	cmp	r0, #125	; 0x7d
   2339c:	bne	21e24 <main@@Base+0xeb2c>
   233a0:	add	r1, r2, #1
   233a4:	sub	r0, r8, r1
   233a8:	cmp	r0, #2
   233ac:	blt	23470 <main@@Base+0x10178>
   233b0:	ldrb	r0, [r1]
   233b4:	cmp	r0, #32
   233b8:	bls	23448 <main@@Base+0x10150>
   233bc:	mov	r4, r1
   233c0:	ldr	r0, [r5, #24]
   233c4:	cmp	r0, #0
   233c8:	beq	21cd8 <main@@Base+0xe9e0>
   233cc:	b	235b0 <main@@Base+0x102b8>
   233d0:	mov	r4, r8
   233d4:	ldr	r0, [r5, #24]
   233d8:	cmp	r0, #0
   233dc:	beq	21cd8 <main@@Base+0xe9e0>
   233e0:	b	235b0 <main@@Base+0x102b8>
   233e4:	cmp	r0, #125	; 0x7d
   233e8:	bne	23434 <main@@Base+0x1013c>
   233ec:	add	r1, r2, #1
   233f0:	sub	r0, r8, r1
   233f4:	cmp	r0, #2
   233f8:	blt	23470 <main@@Base+0x10178>
   233fc:	ldrb	r0, [r1]
   23400:	cmp	r0, #32
   23404:	bls	23450 <main@@Base+0x10158>
   23408:	ldr	r8, [sp, #36]	; 0x24
   2340c:	ldr	r5, [sp, #44]	; 0x2c
   23410:	ldr	r9, [sp, #40]	; 0x28
   23414:	mov	r4, r1
   23418:	ldr	r0, [r5, #24]
   2341c:	cmp	r0, #0
   23420:	beq	21cd8 <main@@Base+0xe9e0>
   23424:	b	235b0 <main@@Base+0x102b8>
   23428:	mov	r0, r5
   2342c:	mov	r1, r8
   23430:	b	2343c <main@@Base+0x10144>
   23434:	mov	r0, r5
   23438:	mov	r1, r2
   2343c:	mov	r2, r8
   23440:	mov	r3, #10
   23444:	b	21cc4 <main@@Base+0xe9cc>
   23448:	beq	23460 <main@@Base+0x10168>
   2344c:	b	23470 <main@@Base+0x10178>
   23450:	ldr	r8, [sp, #36]	; 0x24
   23454:	ldr	r5, [sp, #44]	; 0x2c
   23458:	ldr	r9, [sp, #40]	; 0x28
   2345c:	bne	23470 <main@@Base+0x10178>
   23460:	ldrb	r0, [r2, #2]!
   23464:	mov	r4, r2
   23468:	cmp	r0, #32
   2346c:	bhi	21ccc <main@@Base+0xe9d4>
   23470:	mov	r0, r5
   23474:	mov	r2, r8
   23478:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2347c:	b	21cc8 <main@@Base+0xe9d0>
   23480:	mov	r4, r8
   23484:	ldr	r0, [r5, #24]
   23488:	cmp	r0, #0
   2348c:	bne	23518 <main@@Base+0x10220>
   23490:	b	20460 <main@@Base+0xd168>
   23494:	cmp	r0, #125	; 0x7d
   23498:	bne	23540 <main@@Base+0x10248>
   2349c:	add	r1, r2, #1
   234a0:	sub	r0, r8, r1
   234a4:	cmp	r0, #2
   234a8:	blt	2357c <main@@Base+0x10284>
   234ac:	ldrb	r0, [r1]
   234b0:	cmp	r0, #32
   234b4:	bls	23568 <main@@Base+0x10270>
   234b8:	mov	r4, r1
   234bc:	ldr	r0, [r5, #24]
   234c0:	cmp	r0, #0
   234c4:	bne	23518 <main@@Base+0x10220>
   234c8:	b	20460 <main@@Base+0xd168>
   234cc:	mov	r0, r5
   234d0:	mov	r1, r8
   234d4:	b	23548 <main@@Base+0x10250>
   234d8:	mov	r0, r5
   234dc:	mov	r1, r3
   234e0:	b	2355c <main@@Base+0x10264>
   234e4:	cmp	r0, #125	; 0x7d
   234e8:	bne	23554 <main@@Base+0x1025c>
   234ec:	add	r1, r2, #1
   234f0:	sub	r0, r8, r1
   234f4:	cmp	r0, #2
   234f8:	blt	235a0 <main@@Base+0x102a8>
   234fc:	ldrb	r0, [r1]
   23500:	cmp	r0, #32
   23504:	bls	2358c <main@@Base+0x10294>
   23508:	mov	r4, r1
   2350c:	ldr	r0, [r5, #24]
   23510:	cmp	r0, #0
   23514:	beq	20478 <main@@Base+0xd180>
   23518:	mov	r0, r5
   2351c:	mov	r1, r4
   23520:	mov	r2, r8
   23524:	mov	r3, #33	; 0x21
   23528:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2352c:	mov	r4, r0
   23530:	ldr	r0, [r5, #24]
   23534:	cmp	r0, #0
   23538:	bne	20498 <main@@Base+0xd1a0>
   2353c:	b	20278 <main@@Base+0xcf80>
   23540:	mov	r0, r5
   23544:	mov	r1, r2
   23548:	mov	r2, r8
   2354c:	mov	r3, #10
   23550:	b	2044c <main@@Base+0xd154>
   23554:	mov	r0, r5
   23558:	mov	r1, r2
   2355c:	mov	r2, r8
   23560:	mov	r3, #10
   23564:	b	203fc <main@@Base+0xd104>
   23568:	bne	2357c <main@@Base+0x10284>
   2356c:	ldrb	r0, [r2, #2]!
   23570:	mov	r4, r2
   23574:	cmp	r0, #32
   23578:	bhi	20454 <main@@Base+0xd15c>
   2357c:	mov	r0, r5
   23580:	mov	r2, r8
   23584:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23588:	b	20450 <main@@Base+0xd158>
   2358c:	bne	235a0 <main@@Base+0x102a8>
   23590:	ldrb	r0, [r2, #2]!
   23594:	mov	r4, r2
   23598:	cmp	r0, #32
   2359c:	bhi	20404 <main@@Base+0xd10c>
   235a0:	mov	r0, r5
   235a4:	mov	r2, r8
   235a8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   235ac:	b	20400 <main@@Base+0xd108>
   235b0:	mov	r0, r5
   235b4:	mov	r1, r4
   235b8:	mov	r2, r8
   235bc:	mov	r3, #33	; 0x21
   235c0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   235c4:	mov	r4, r0
   235c8:	b	23518 <main@@Base+0x10220>
   235cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   235d0:	add	fp, sp, #28
   235d4:	sub	sp, sp, #20
   235d8:	mov	sl, r1
   235dc:	sub	r1, r2, r1
   235e0:	cmp	r1, #8
   235e4:	movcs	r1, #8
   235e8:	sub	r5, r1, #1
   235ec:	cmp	r5, #7
   235f0:	bhi	237f4 <main@@Base+0x104fc>
   235f4:	str	r2, [sp, #16]
   235f8:	str	r0, [sp, #12]
   235fc:	add	r0, pc, #36	; 0x24
   23600:	mov	lr, r3
   23604:	mov	r8, #0
   23608:	mov	ip, #0
   2360c:	mov	r2, #0
   23610:	mov	r1, #0
   23614:	mov	r3, #0
   23618:	mov	r7, #0
   2361c:	mov	r6, #0
   23620:	mov	r4, #0
   23624:	ldr	pc, [r0, r5, lsl #2]
   23628:	andeq	r3, r2, ip, lsl #13
   2362c:	andeq	r3, r2, r4, lsl #13
   23630:	andeq	r3, r2, ip, ror r6
   23634:	andeq	r3, r2, r4, ror r6
   23638:	andeq	r3, r2, r8, ror #12
   2363c:	andeq	r3, r2, ip, asr r6
   23640:	andeq	r3, r2, ip, asr #12
   23644:	andeq	r3, r2, r8, asr #12
   23648:	ldrb	ip, [sl, #7]
   2364c:	ldrb	r0, [sl, #6]
   23650:	mov	r2, r8
   23654:	orr	r0, ip, r0, lsl #8
   23658:	mov	r8, r0
   2365c:	ldrb	r0, [sl, #5]
   23660:	mov	r1, r2
   23664:	orr	r8, r8, r0, lsl #16
   23668:	ldrb	r0, [sl, #4]
   2366c:	mov	r3, r1
   23670:	orr	r8, r8, r0, lsl #24
   23674:	ldrb	r0, [sl, #3]
   23678:	orr	r7, r0, r3
   2367c:	ldrb	r0, [sl, #2]
   23680:	orr	r6, r7, r0, lsl #8
   23684:	ldrb	r0, [sl, #1]
   23688:	orr	r4, r6, r0, lsl #16
   2368c:	ldrb	r0, [sl]
   23690:	movw	r1, #28275	; 0x6e73
   23694:	ldr	r7, [fp, #12]
   23698:	ldr	r5, [fp, #8]
   2369c:	movt	r1, #19823	; 0x4d6f
   236a0:	orr	r9, r4, r0, lsl #24
   236a4:	movw	r0, #29184	; 0x7200
   236a8:	movt	r0, #29797	; 0x7465
   236ac:	subs	r2, r8, r0
   236b0:	sbcs	r2, r9, r1
   236b4:	bcs	236fc <main@@Base+0x10404>
   236b8:	movw	r1, #29696	; 0x7400
   236bc:	bic	r0, r9, #255	; 0xff
   236c0:	movt	r1, #16748	; 0x416c
   236c4:	teq	r0, r1
   236c8:	bne	237f4 <main@@Base+0x104fc>
   236cc:	ldr	r0, [sp, #12]
   236d0:	ldr	r2, [sp, #16]
   236d4:	mov	r1, sl
   236d8:	mov	r3, #3
   236dc:	mov	r4, lr
   236e0:	str	r7, [sp]
   236e4:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   236e8:	cmp	r0, sl
   236ec:	beq	237f4 <main@@Base+0x104fc>
   236f0:	mov	r1, #0
   236f4:	mov	r2, #4
   236f8:	b	2373c <main@@Base+0x10444>
   236fc:	add	r2, r0, #50	; 0x32
   23700:	eor	r1, r9, r1
   23704:	eor	r2, r8, r2
   23708:	orrs	r2, r2, r1
   2370c:	bne	2374c <main@@Base+0x10454>
   23710:	ldr	r0, [sp, #12]
   23714:	ldr	r2, [sp, #16]
   23718:	mov	r1, sl
   2371c:	mov	r3, #8
   23720:	mov	r4, lr
   23724:	str	r7, [sp]
   23728:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   2372c:	cmp	r0, sl
   23730:	beq	237f4 <main@@Base+0x104fc>
   23734:	mov	r1, #0
   23738:	mov	r2, #3
   2373c:	str	r2, [r5]
   23740:	str	r1, [r5, #4]
   23744:	str	r1, [r4]
   23748:	b	237f0 <main@@Base+0x104f8>
   2374c:	ldr	r5, [sp, #16]
   23750:	ldr	r6, [sp, #12]
   23754:	bic	r2, r8, #255	; 0xff
   23758:	eor	r0, r2, r0
   2375c:	orrs	r0, r0, r1
   23760:	bne	237a4 <main@@Base+0x104ac>
   23764:	mov	r0, r6
   23768:	mov	r1, sl
   2376c:	mov	r2, r5
   23770:	mov	r3, #7
   23774:	str	r7, [sp]
   23778:	mov	r4, lr
   2377c:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   23780:	mov	lr, r4
   23784:	cmp	r0, sl
   23788:	beq	237a4 <main@@Base+0x104ac>
   2378c:	ldr	r3, [fp, #8]
   23790:	mov	r2, #1
   23794:	mov	r1, #0
   23798:	str	r2, [r3]
   2379c:	str	r1, [r3, #4]
   237a0:	b	237ec <main@@Base+0x104f4>
   237a4:	movw	r0, #20037	; 0x4e45
   237a8:	movt	r0, #20047	; 0x4e4f
   237ac:	teq	r9, r0
   237b0:	bne	23800 <main@@Base+0x10508>
   237b4:	mov	r0, r6
   237b8:	mov	r1, sl
   237bc:	mov	r2, r5
   237c0:	mov	r3, #4
   237c4:	str	r7, [sp]
   237c8:	mov	r4, lr
   237cc:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   237d0:	mov	lr, r4
   237d4:	cmp	r0, sl
   237d8:	beq	23800 <main@@Base+0x10508>
   237dc:	ldr	r2, [fp, #8]
   237e0:	mov	r1, #0
   237e4:	str	r1, [r2]
   237e8:	str	r1, [r2, #4]
   237ec:	str	r1, [lr]
   237f0:	mov	sl, r0
   237f4:	mov	r0, sl
   237f8:	sub	sp, fp, #28
   237fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23800:	movw	r0, #28016	; 0x6d70
   23804:	movw	r1, #29556	; 0x7374
   23808:	movt	r0, #21353	; 0x5369
   2380c:	movt	r1, #21605	; 0x5465
   23810:	eor	r0, r8, r0
   23814:	eor	r1, r9, r1
   23818:	orrs	r0, r0, r1
   2381c:	bne	237f4 <main@@Base+0x104fc>
   23820:	str	lr, [sp, #8]
   23824:	add	lr, sl, #8
   23828:	sub	r0, r5, lr
   2382c:	cmp	r0, #8
   23830:	movcs	r0, #8
   23834:	sub	r5, r0, #1
   23838:	cmp	r5, #7
   2383c:	bhi	237f4 <main@@Base+0x104fc>
   23840:	add	r1, pc, #32
   23844:	mov	r9, #0
   23848:	mov	ip, #0
   2384c:	mov	r8, #0
   23850:	mov	r2, #0
   23854:	mov	r3, #0
   23858:	mov	r0, #0
   2385c:	mov	r4, #0
   23860:	mov	r6, #0
   23864:	ldr	pc, [r1, r5, lsl #2]
   23868:	andeq	r3, r2, ip, asr #17
   2386c:	andeq	r3, r2, r4, asr #17
   23870:			; <UNDEFINED> instruction: 0x000238bc
   23874:			; <UNDEFINED> instruction: 0x000238b4
   23878:	andeq	r3, r2, r8, lsr #17
   2387c:	muleq	r2, ip, r8
   23880:	andeq	r3, r2, ip, lsl #17
   23884:	andeq	r3, r2, r8, lsl #17
   23888:	ldrb	ip, [sl, #15]
   2388c:	ldrb	r0, [sl, #14]
   23890:	mov	r8, r9
   23894:	orr	r0, ip, r0, lsl #8
   23898:	mov	r9, r0
   2389c:	ldrb	r0, [sl, #13]
   238a0:	mov	r2, r8
   238a4:	orr	r9, r9, r0, lsl #16
   238a8:	ldrb	r0, [sl, #12]
   238ac:	mov	r3, r2
   238b0:	orr	r9, r9, r0, lsl #24
   238b4:	ldrb	r0, [sl, #11]
   238b8:	orr	r0, r0, r3
   238bc:	ldrb	r1, [sl, #10]
   238c0:	orr	r4, r0, r1, lsl #8
   238c4:	ldrb	r0, [sl, #9]
   238c8:	orr	r6, r4, r0, lsl #16
   238cc:	ldrb	r1, [lr]
   238d0:	movw	r0, #25943	; 0x6557
   238d4:	movw	r2, #21601	; 0x5461
   238d8:	movt	r0, #25196	; 0x626c
   238dc:	movt	r2, #27749	; 0x6c65
   238e0:	eor	r0, r9, r0
   238e4:	orr	r1, r6, r1, lsl #24
   238e8:	eor	r1, r1, r2
   238ec:	orrs	r0, r0, r1
   238f0:	bne	237f4 <main@@Base+0x104fc>
   238f4:	ldr	r0, [sp, #16]
   238f8:	add	r8, sl, #16
   238fc:	sub	r0, r0, r8
   23900:	cmp	r0, #8
   23904:	movcs	r0, #8
   23908:	sub	r3, r0, #1
   2390c:	cmp	r3, #7
   23910:	bhi	237f4 <main@@Base+0x104fc>
   23914:	add	r5, pc, #28
   23918:	mov	r0, #0
   2391c:	mov	ip, #0
   23920:	mov	lr, #0
   23924:	mov	r2, #0
   23928:	mov	r1, #0
   2392c:	mov	r6, #0
   23930:	mov	r4, #0
   23934:	ldr	pc, [r5, r3, lsl #2]
   23938:	muleq	r2, r4, r9
   2393c:	andeq	r3, r2, ip, lsl #19
   23940:	andeq	r3, r2, r4, lsl #19
   23944:	andeq	r3, r2, ip, ror r9
   23948:	andeq	r3, r2, r0, ror r9
   2394c:	andeq	r3, r2, r0, ror #18
   23950:	andeq	r3, r2, r8, asr r9
   23954:	andeq	r3, r2, r8, asr r9
   23958:	ldrb	r1, [sl, #22]
   2395c:	lsl	ip, r1, #8
   23960:	ldrb	r1, [sl, #21]
   23964:	mov	lr, r0
   23968:	orr	r1, ip, r1, lsl #16
   2396c:	mov	r0, r1
   23970:	ldrb	r1, [sl, #20]
   23974:	mov	r2, lr
   23978:	orr	r0, r0, r1, lsl #24
   2397c:	ldrb	r1, [sl, #19]
   23980:	orr	r1, r1, r2
   23984:	ldrb	r2, [sl, #18]
   23988:	orr	r6, r1, r2, lsl #8
   2398c:	ldrb	r1, [sl, #17]
   23990:	orr	r4, r6, r1, lsl #16
   23994:	movw	r1, #27904	; 0x6d00
   23998:	movw	r2, #26693	; 0x6845
   2399c:	movt	r1, #28277	; 0x6e75
   239a0:	movt	r2, #26996	; 0x6974
   239a4:	eor	r0, r0, r1
   239a8:	ldrb	r1, [r8]
   239ac:	orr	r1, r4, r1, lsl #24
   239b0:	eor	r1, r1, r2
   239b4:	orrs	r0, r0, r1
   239b8:	bne	237f4 <main@@Base+0x104fc>
   239bc:	ldr	r0, [sp, #12]
   239c0:	ldr	r2, [sp, #16]
   239c4:	mov	r1, r8
   239c8:	mov	r3, #7
   239cc:	str	r7, [sp]
   239d0:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   239d4:	ldr	r3, [fp, #8]
   239d8:	cmp	r0, r8
   239dc:	beq	237f4 <main@@Base+0x104fc>
   239e0:	mov	r2, #2
   239e4:	mov	r1, #0
   239e8:	str	r2, [r3]
   239ec:	str	r1, [r3, #4]
   239f0:	ldr	r2, [sp, #8]
   239f4:	str	r1, [r2]
   239f8:	b	237f0 <main@@Base+0x104f8>
   239fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a00:	add	fp, sp, #28
   23a04:	sub	sp, sp, #44	; 0x2c
   23a08:	mov	r6, r2
   23a0c:	ldr	r2, [fp, #8]
   23a10:	mov	r5, r0
   23a14:	mov	r0, #0
   23a18:	mov	r8, r3
   23a1c:	cmp	r1, r6
   23a20:	strb	r0, [r2]
   23a24:	beq	23a48 <main@@Base+0x10750>
   23a28:	ldrb	r0, [r1]
   23a2c:	cmp	r0, #46	; 0x2e
   23a30:	beq	23a70 <main@@Base+0x10778>
   23a34:	cmp	r0, #34	; 0x22
   23a38:	bne	23c1c <main@@Base+0x10924>
   23a3c:	mov	r0, #0
   23a40:	add	r1, r1, #1
   23a44:	str	r0, [r5, #12]
   23a48:	ldr	r0, [r5, #12]
   23a4c:	cmp	r0, #0
   23a50:	beq	23a90 <main@@Base+0x10798>
   23a54:	mov	r7, r1
   23a58:	cmp	r7, r6
   23a5c:	bne	23ad4 <main@@Base+0x107dc>
   23a60:	mov	r4, r6
   23a64:	mov	r0, r4
   23a68:	sub	sp, fp, #28
   23a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a70:	mov	r0, r5
   23a74:	mov	r2, r6
   23a78:	mov	r3, #5
   23a7c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   23a80:	mov	r1, r0
   23a84:	ldr	r0, [r5, #12]
   23a88:	cmp	r0, #0
   23a8c:	bne	23a54 <main@@Base+0x1075c>
   23a90:	sub	r0, r6, r1
   23a94:	cmp	r0, #2
   23a98:	blt	23abc <main@@Base+0x107c4>
   23a9c:	ldrb	r0, [r1]
   23aa0:	cmp	r0, #32
   23aa4:	bhi	23a54 <main@@Base+0x1075c>
   23aa8:	bne	23abc <main@@Base+0x107c4>
   23aac:	mov	r7, r1
   23ab0:	ldrb	r0, [r7, #1]!
   23ab4:	cmp	r0, #32
   23ab8:	bhi	23acc <main@@Base+0x107d4>
   23abc:	mov	r0, r5
   23ac0:	mov	r2, r6
   23ac4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23ac8:	mov	r7, r0
   23acc:	cmp	r7, r6
   23ad0:	beq	23a60 <main@@Base+0x10768>
   23ad4:	mov	r1, #0
   23ad8:	add	r0, r8, #4
   23adc:	add	sl, sp, #32
   23ae0:	add	r9, sp, #28
   23ae4:	str	r8, [sp, #12]
   23ae8:	str	r1, [sp, #16]
   23aec:	mov	r1, #0
   23af0:	str	r0, [sp, #8]
   23af4:	str	r1, [sp, #20]
   23af8:	ldr	r4, [r8]
   23afc:	mov	r8, r0
   23b00:	add	r0, sp, #24
   23b04:	mov	r1, r7
   23b08:	mov	r2, r6
   23b0c:	mov	r3, r9
   23b10:	str	sl, [sp]
   23b14:	str	r0, [sp, #4]
   23b18:	mov	r0, r5
   23b1c:	blx	r4
   23b20:	cmp	r0, r6
   23b24:	beq	23be8 <main@@Base+0x108f0>
   23b28:	mov	r4, r0
   23b2c:	cmp	r0, r7
   23b30:	bne	23b44 <main@@Base+0x1084c>
   23b34:	ldr	r4, [r8], #4
   23b38:	cmp	r4, #0
   23b3c:	bne	23b00 <main@@Base+0x10808>
   23b40:	b	23bf8 <main@@Base+0x10900>
   23b44:	ldr	r7, [sp, #20]
   23b48:	cmp	r7, #0
   23b4c:	beq	23b5c <main@@Base+0x10864>
   23b50:	ldr	r0, [r5, #12]
   23b54:	cmp	r0, #0
   23b58:	bne	23c34 <main@@Base+0x1093c>
   23b5c:	ldr	r0, [sp, #28]
   23b60:	cmp	r0, #0
   23b64:	beq	23b8c <main@@Base+0x10894>
   23b68:	mov	r0, r5
   23b6c:	mov	r1, r4
   23b70:	mov	r2, r6
   23b74:	mov	r3, #8
   23b78:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   23b7c:	ldr	r8, [sp, #12]
   23b80:	cmp	r0, r6
   23b84:	bne	23bb0 <main@@Base+0x108b8>
   23b88:	b	23be8 <main@@Base+0x108f0>
   23b8c:	ldr	r0, [sp, #32]
   23b90:	ldr	r1, [sp, #36]	; 0x24
   23b94:	orrs	r0, r0, r1
   23b98:	movwne	r0, #1
   23b9c:	str	r0, [sp, #16]
   23ba0:	mov	r0, r4
   23ba4:	ldr	r8, [sp, #12]
   23ba8:	cmp	r0, r6
   23bac:	beq	23be8 <main@@Base+0x108f0>
   23bb0:	ldr	r0, [fp, #8]
   23bb4:	ldr	r2, [sp, #16]
   23bb8:	add	r7, r7, #1
   23bbc:	str	r7, [sp, #20]
   23bc0:	mov	r7, r4
   23bc4:	mov	r1, r0
   23bc8:	ldrb	r0, [r0]
   23bcc:	add	r0, r0, r2
   23bd0:	strb	r0, [r1]
   23bd4:	ldr	r0, [sp, #24]
   23bd8:	cmp	r0, #0
   23bdc:	ldr	r0, [sp, #8]
   23be0:	bne	23af8 <main@@Base+0x10800>
   23be4:	b	23a64 <main@@Base+0x1076c>
   23be8:	mov	r4, r6
   23bec:	mov	r0, r4
   23bf0:	sub	sp, fp, #28
   23bf4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bf8:	mov	r0, r5
   23bfc:	mov	r1, r7
   23c00:	mov	r2, r6
   23c04:	mov	r3, #23
   23c08:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   23c0c:	mov	r4, r0
   23c10:	mov	r0, r4
   23c14:	sub	sp, fp, #28
   23c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c1c:	mov	r0, #1
   23c20:	str	r0, [r5, #12]
   23c24:	ldr	r0, [r5, #12]
   23c28:	cmp	r0, #0
   23c2c:	bne	23a54 <main@@Base+0x1075c>
   23c30:	b	23a90 <main@@Base+0x10798>
   23c34:	mov	r0, r5
   23c38:	mov	r1, r4
   23c3c:	mov	r2, r6
   23c40:	mov	r3, #14
   23c44:	b	23c08 <main@@Base+0x10910>
   23c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c4c:	add	fp, sp, #28
   23c50:	sub	sp, sp, #44	; 0x2c
   23c54:	mov	r4, r2
   23c58:	ldr	r2, [fp, #8]
   23c5c:	mov	r5, r0
   23c60:	mov	r0, #0
   23c64:	mov	r6, r3
   23c68:	cmp	r1, r4
   23c6c:	str	r0, [r2]
   23c70:	beq	23c94 <main@@Base+0x1099c>
   23c74:	ldrb	r0, [r1]
   23c78:	cmp	r0, #46	; 0x2e
   23c7c:	beq	23cbc <main@@Base+0x109c4>
   23c80:	cmp	r0, #34	; 0x22
   23c84:	bne	23e20 <main@@Base+0x10b28>
   23c88:	mov	r0, #0
   23c8c:	add	r1, r1, #1
   23c90:	str	r0, [r5, #12]
   23c94:	ldr	r0, [r5, #12]
   23c98:	cmp	r0, #0
   23c9c:	beq	23cdc <main@@Base+0x109e4>
   23ca0:	mov	r7, r1
   23ca4:	cmp	r7, r4
   23ca8:	bne	23d20 <main@@Base+0x10a28>
   23cac:	mov	r7, r4
   23cb0:	mov	r0, r7
   23cb4:	sub	sp, fp, #28
   23cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23cbc:	mov	r0, r5
   23cc0:	mov	r2, r4
   23cc4:	mov	r3, #5
   23cc8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   23ccc:	mov	r1, r0
   23cd0:	ldr	r0, [r5, #12]
   23cd4:	cmp	r0, #0
   23cd8:	bne	23ca0 <main@@Base+0x109a8>
   23cdc:	sub	r0, r4, r1
   23ce0:	cmp	r0, #2
   23ce4:	blt	23d08 <main@@Base+0x10a10>
   23ce8:	ldrb	r0, [r1]
   23cec:	cmp	r0, #32
   23cf0:	bhi	23ca0 <main@@Base+0x109a8>
   23cf4:	bne	23d08 <main@@Base+0x10a10>
   23cf8:	mov	r7, r1
   23cfc:	ldrb	r0, [r7, #1]!
   23d00:	cmp	r0, #32
   23d04:	bhi	23d18 <main@@Base+0x10a20>
   23d08:	mov	r0, r5
   23d0c:	mov	r2, r4
   23d10:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23d14:	mov	r7, r0
   23d18:	cmp	r7, r4
   23d1c:	beq	23cac <main@@Base+0x109b4>
   23d20:	add	r9, r6, #4
   23d24:	mov	r0, #0
   23d28:	add	sl, sp, #32
   23d2c:	add	r8, sp, #28
   23d30:	str	r6, [sp, #16]
   23d34:	str	r0, [sp, #20]
   23d38:	str	r9, [sp, #12]
   23d3c:	ldr	r6, [r6]
   23d40:	add	r0, sp, #24
   23d44:	mov	r1, r7
   23d48:	mov	r2, r4
   23d4c:	mov	r3, r8
   23d50:	str	sl, [sp]
   23d54:	str	r0, [sp, #4]
   23d58:	mov	r0, r5
   23d5c:	blx	r6
   23d60:	cmp	r0, r4
   23d64:	beq	23dec <main@@Base+0x10af4>
   23d68:	cmp	r0, r7
   23d6c:	bne	23d80 <main@@Base+0x10a88>
   23d70:	ldr	r6, [r9], #4
   23d74:	cmp	r6, #0
   23d78:	bne	23d40 <main@@Base+0x10a48>
   23d7c:	b	23dfc <main@@Base+0x10b04>
   23d80:	ldr	r1, [sp, #20]
   23d84:	mov	r7, r0
   23d88:	cmp	r1, #0
   23d8c:	beq	23d9c <main@@Base+0x10aa4>
   23d90:	ldr	r0, [r5, #12]
   23d94:	cmp	r0, #0
   23d98:	bne	23e38 <main@@Base+0x10b40>
   23d9c:	add	r1, r1, #1
   23da0:	ldr	r0, [sp, #32]
   23da4:	str	r1, [sp, #20]
   23da8:	ldr	r1, [sp, #36]	; 0x24
   23dac:	bl	3495c <flatcc_json_parser_struct_as_root@@Base+0x658>
   23db0:	vmov	s2, r0
   23db4:	ldr	r2, [fp, #8]
   23db8:	ldr	r1, [sp, #28]
   23dbc:	ldr	r6, [sp, #16]
   23dc0:	ldr	r9, [sp, #12]
   23dc4:	vldr	s0, [r2]
   23dc8:	cmp	r1, #0
   23dcc:	vneg.f32	s4, s2
   23dd0:	vseleq.f32	s2, s2, s4
   23dd4:	vadd.f32	s0, s0, s2
   23dd8:	vstr	s0, [r2]
   23ddc:	ldr	r0, [sp, #24]
   23de0:	cmp	r0, #0
   23de4:	bne	23d3c <main@@Base+0x10a44>
   23de8:	b	23cb0 <main@@Base+0x109b8>
   23dec:	mov	r7, r4
   23df0:	mov	r0, r7
   23df4:	sub	sp, fp, #28
   23df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23dfc:	mov	r0, r5
   23e00:	mov	r1, r7
   23e04:	mov	r2, r4
   23e08:	mov	r3, #23
   23e0c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   23e10:	mov	r7, r0
   23e14:	mov	r0, r7
   23e18:	sub	sp, fp, #28
   23e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e20:	mov	r0, #1
   23e24:	str	r0, [r5, #12]
   23e28:	ldr	r0, [r5, #12]
   23e2c:	cmp	r0, #0
   23e30:	bne	23ca0 <main@@Base+0x109a8>
   23e34:	b	23cdc <main@@Base+0x109e4>
   23e38:	mov	r0, r5
   23e3c:	mov	r1, r7
   23e40:	mov	r2, r4
   23e44:	mov	r3, #14
   23e48:	b	23e0c <main@@Base+0x10b14>
   23e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e50:	add	fp, sp, #28
   23e54:	sub	sp, sp, #44	; 0x2c
   23e58:	mov	r6, r2
   23e5c:	ldr	r2, [fp, #8]
   23e60:	mov	r5, r0
   23e64:	mov	r0, #0
   23e68:	mov	sl, r3
   23e6c:	cmp	r1, r6
   23e70:	str	r0, [r2]
   23e74:	beq	23e98 <main@@Base+0x10ba0>
   23e78:	ldrb	r0, [r1]
   23e7c:	cmp	r0, #46	; 0x2e
   23e80:	beq	23ec0 <main@@Base+0x10bc8>
   23e84:	cmp	r0, #34	; 0x22
   23e88:	bne	240a4 <main@@Base+0x10dac>
   23e8c:	mov	r0, #0
   23e90:	add	r1, r1, #1
   23e94:	str	r0, [r5, #12]
   23e98:	ldr	r0, [r5, #12]
   23e9c:	cmp	r0, #0
   23ea0:	beq	23ee0 <main@@Base+0x10be8>
   23ea4:	mov	r7, r1
   23ea8:	cmp	r7, r6
   23eac:	bne	23f24 <main@@Base+0x10c2c>
   23eb0:	mov	r4, r6
   23eb4:	mov	r0, r4
   23eb8:	sub	sp, fp, #28
   23ebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ec0:	mov	r0, r5
   23ec4:	mov	r2, r6
   23ec8:	mov	r3, #5
   23ecc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   23ed0:	mov	r1, r0
   23ed4:	ldr	r0, [r5, #12]
   23ed8:	cmp	r0, #0
   23edc:	bne	23ea4 <main@@Base+0x10bac>
   23ee0:	sub	r0, r6, r1
   23ee4:	cmp	r0, #2
   23ee8:	blt	23f0c <main@@Base+0x10c14>
   23eec:	ldrb	r0, [r1]
   23ef0:	cmp	r0, #32
   23ef4:	bhi	23ea4 <main@@Base+0x10bac>
   23ef8:	bne	23f0c <main@@Base+0x10c14>
   23efc:	mov	r7, r1
   23f00:	ldrb	r0, [r7, #1]!
   23f04:	cmp	r0, #32
   23f08:	bhi	23f1c <main@@Base+0x10c24>
   23f0c:	mov	r0, r5
   23f10:	mov	r2, r6
   23f14:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   23f18:	mov	r7, r0
   23f1c:	cmp	r7, r6
   23f20:	beq	23eb0 <main@@Base+0x10bb8>
   23f24:	add	r0, sl, #4
   23f28:	mov	r1, #0
   23f2c:	mov	r2, #0
   23f30:	add	r8, sp, #32
   23f34:	add	r9, sp, #28
   23f38:	str	sl, [sp, #12]
   23f3c:	str	r1, [sp, #20]
   23f40:	str	r0, [sp, #8]
   23f44:	ldr	r4, [sl]
   23f48:	mov	sl, r0
   23f4c:	str	r2, [sp, #16]
   23f50:	add	r0, sp, #24
   23f54:	mov	r1, r7
   23f58:	mov	r2, r6
   23f5c:	mov	r3, r9
   23f60:	str	r8, [sp]
   23f64:	str	r0, [sp, #4]
   23f68:	mov	r0, r5
   23f6c:	blx	r4
   23f70:	cmp	r0, r6
   23f74:	beq	24070 <main@@Base+0x10d78>
   23f78:	mov	r4, r0
   23f7c:	cmp	r0, r7
   23f80:	bne	23f94 <main@@Base+0x10c9c>
   23f84:	ldr	r4, [sl], #4
   23f88:	cmp	r4, #0
   23f8c:	bne	23f50 <main@@Base+0x10c58>
   23f90:	b	24080 <main@@Base+0x10d88>
   23f94:	ldr	r7, [sp, #20]
   23f98:	cmp	r7, #0
   23f9c:	beq	23fac <main@@Base+0x10cb4>
   23fa0:	ldr	r0, [r5, #12]
   23fa4:	cmp	r0, #0
   23fa8:	bne	240bc <main@@Base+0x10dc4>
   23fac:	ldr	r2, [sp, #28]
   23fb0:	ldr	r0, [sp, #32]
   23fb4:	ldr	r1, [sp, #36]	; 0x24
   23fb8:	cmp	r2, #0
   23fbc:	beq	23fe4 <main@@Base+0x10cec>
   23fc0:	ldr	sl, [sp, #12]
   23fc4:	subs	r2, r0, #-2147483647	; 0x80000001
   23fc8:	sbcs	r1, r1, #0
   23fcc:	bcc	24018 <main@@Base+0x10d20>
   23fd0:	mov	r0, r5
   23fd4:	mov	r1, r4
   23fd8:	mov	r2, r6
   23fdc:	mov	r3, #8
   23fe0:	b	24004 <main@@Base+0x10d0c>
   23fe4:	ldr	sl, [sp, #12]
   23fe8:	subs	r2, r0, #-2147483648	; 0x80000000
   23fec:	sbcs	r1, r1, #0
   23ff0:	bcc	2402c <main@@Base+0x10d34>
   23ff4:	mov	r0, r5
   23ff8:	mov	r1, r4
   23ffc:	mov	r2, r6
   24000:	mov	r3, #7
   24004:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   24008:	ldr	r2, [sp, #16]
   2400c:	cmp	r0, r6
   24010:	bne	2403c <main@@Base+0x10d44>
   24014:	b	24070 <main@@Base+0x10d78>
   24018:	rsb	r2, r0, #0
   2401c:	mov	r0, r4
   24020:	cmp	r0, r6
   24024:	bne	2403c <main@@Base+0x10d44>
   24028:	b	24070 <main@@Base+0x10d78>
   2402c:	mov	r2, r0
   24030:	mov	r0, r4
   24034:	cmp	r0, r6
   24038:	beq	24070 <main@@Base+0x10d78>
   2403c:	ldr	r0, [fp, #8]
   24040:	add	r7, r7, #1
   24044:	str	r7, [sp, #20]
   24048:	mov	r7, r4
   2404c:	mov	r1, r0
   24050:	ldr	r0, [r0]
   24054:	add	r0, r0, r2
   24058:	str	r0, [r1]
   2405c:	ldr	r0, [sp, #24]
   24060:	cmp	r0, #0
   24064:	ldr	r0, [sp, #8]
   24068:	bne	23f44 <main@@Base+0x10c4c>
   2406c:	b	23eb4 <main@@Base+0x10bbc>
   24070:	mov	r4, r6
   24074:	mov	r0, r4
   24078:	sub	sp, fp, #28
   2407c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24080:	mov	r0, r5
   24084:	mov	r1, r7
   24088:	mov	r2, r6
   2408c:	mov	r3, #23
   24090:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   24094:	mov	r4, r0
   24098:	mov	r0, r4
   2409c:	sub	sp, fp, #28
   240a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   240a4:	mov	r0, #1
   240a8:	str	r0, [r5, #12]
   240ac:	ldr	r0, [r5, #12]
   240b0:	cmp	r0, #0
   240b4:	bne	23ea4 <main@@Base+0x10bac>
   240b8:	b	23ee0 <main@@Base+0x10be8>
   240bc:	mov	r0, r5
   240c0:	mov	r1, r4
   240c4:	mov	r2, r6
   240c8:	mov	r3, #14
   240cc:	b	24090 <main@@Base+0x10d98>
   240d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   240d4:	add	fp, sp, #28
   240d8:	sub	sp, sp, #52	; 0x34
   240dc:	mov	r6, r2
   240e0:	ldr	r2, [fp, #8]
   240e4:	mov	r5, r0
   240e8:	mov	r0, #0
   240ec:	mov	sl, r3
   240f0:	cmp	r1, r6
   240f4:	str	r0, [r2]
   240f8:	str	r0, [r2, #4]
   240fc:	beq	24120 <main@@Base+0x10e28>
   24100:	ldrb	r0, [r1]
   24104:	cmp	r0, #46	; 0x2e
   24108:	beq	24148 <main@@Base+0x10e50>
   2410c:	cmp	r0, #34	; 0x22
   24110:	bne	2432c <main@@Base+0x11034>
   24114:	mov	r0, #0
   24118:	add	r1, r1, #1
   2411c:	str	r0, [r5, #12]
   24120:	ldr	r0, [r5, #12]
   24124:	cmp	r0, #0
   24128:	beq	24168 <main@@Base+0x10e70>
   2412c:	mov	r7, r1
   24130:	cmp	r7, r6
   24134:	bne	241ac <main@@Base+0x10eb4>
   24138:	mov	r4, r6
   2413c:	mov	r0, r4
   24140:	sub	sp, fp, #28
   24144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24148:	mov	r0, r5
   2414c:	mov	r2, r6
   24150:	mov	r3, #5
   24154:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   24158:	mov	r1, r0
   2415c:	ldr	r0, [r5, #12]
   24160:	cmp	r0, #0
   24164:	bne	2412c <main@@Base+0x10e34>
   24168:	sub	r0, r6, r1
   2416c:	cmp	r0, #2
   24170:	blt	24194 <main@@Base+0x10e9c>
   24174:	ldrb	r0, [r1]
   24178:	cmp	r0, #32
   2417c:	bhi	2412c <main@@Base+0x10e34>
   24180:	bne	24194 <main@@Base+0x10e9c>
   24184:	mov	r7, r1
   24188:	ldrb	r0, [r7, #1]!
   2418c:	cmp	r0, #32
   24190:	bhi	241a4 <main@@Base+0x10eac>
   24194:	mov	r0, r5
   24198:	mov	r2, r6
   2419c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   241a0:	mov	r7, r0
   241a4:	cmp	r7, r6
   241a8:	beq	24138 <main@@Base+0x10e40>
   241ac:	add	r0, sl, #4
   241b0:	mov	r1, #0
   241b4:	mov	r3, #0
   241b8:	add	r8, sp, #40	; 0x28
   241bc:	add	r9, sp, #36	; 0x24
   241c0:	mov	r2, #0
   241c4:	str	sl, [sp, #16]
   241c8:	str	r1, [sp, #28]
   241cc:	str	r0, [sp, #12]
   241d0:	ldr	r4, [sl]
   241d4:	mov	sl, r0
   241d8:	str	r2, [sp, #20]
   241dc:	str	r3, [sp, #24]
   241e0:	add	r0, sp, #32
   241e4:	mov	r1, r7
   241e8:	mov	r2, r6
   241ec:	mov	r3, r9
   241f0:	str	r8, [sp]
   241f4:	str	r0, [sp, #4]
   241f8:	mov	r0, r5
   241fc:	blx	r4
   24200:	cmp	r0, r6
   24204:	beq	242f8 <main@@Base+0x11000>
   24208:	mov	r4, r0
   2420c:	cmp	r0, r7
   24210:	bne	24224 <main@@Base+0x10f2c>
   24214:	ldr	r4, [sl], #4
   24218:	cmp	r4, #0
   2421c:	bne	241e0 <main@@Base+0x10ee8>
   24220:	b	24308 <main@@Base+0x11010>
   24224:	ldr	r7, [sp, #28]
   24228:	cmp	r7, #0
   2422c:	beq	2423c <main@@Base+0x10f44>
   24230:	ldr	r0, [r5, #12]
   24234:	cmp	r0, #0
   24238:	bne	24344 <main@@Base+0x1104c>
   2423c:	add	r2, sp, #36	; 0x24
   24240:	ldm	r2, {r0, r1, r2}
   24244:	cmp	r0, #0
   24248:	beq	24270 <main@@Base+0x10f78>
   2424c:	ldr	sl, [sp, #16]
   24250:	subs	r0, r1, #1
   24254:	sbcs	r0, r2, #-2147483648	; 0x80000000
   24258:	bcc	242a8 <main@@Base+0x10fb0>
   2425c:	mov	r0, r5
   24260:	mov	r1, r4
   24264:	mov	r2, r6
   24268:	mov	r3, #8
   2426c:	b	24290 <main@@Base+0x10f98>
   24270:	ldr	sl, [sp, #16]
   24274:	cmn	r2, #1
   24278:	mov	r0, r4
   2427c:	bgt	2429c <main@@Base+0x10fa4>
   24280:	mov	r0, r5
   24284:	mov	r1, r4
   24288:	mov	r2, r6
   2428c:	mov	r3, #7
   24290:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   24294:	ldr	r1, [sp, #24]
   24298:	ldr	r2, [sp, #20]
   2429c:	cmp	r0, r6
   242a0:	bne	242bc <main@@Base+0x10fc4>
   242a4:	b	242f8 <main@@Base+0x11000>
   242a8:	rsbs	r1, r1, #0
   242ac:	mov	r0, r4
   242b0:	rsc	r2, r2, #0
   242b4:	cmp	r0, r6
   242b8:	beq	242f8 <main@@Base+0x11000>
   242bc:	ldr	r0, [fp, #8]
   242c0:	add	r7, r7, #1
   242c4:	str	r7, [sp, #28]
   242c8:	mov	r7, r0
   242cc:	ldm	r0, {r0, r3}
   242d0:	adds	r0, r0, r1
   242d4:	adc	r3, r3, r2
   242d8:	stm	r7, {r0, r3}
   242dc:	mov	r3, r1
   242e0:	mov	r7, r4
   242e4:	ldr	r0, [sp, #32]
   242e8:	cmp	r0, #0
   242ec:	ldr	r0, [sp, #12]
   242f0:	bne	241d0 <main@@Base+0x10ed8>
   242f4:	b	2413c <main@@Base+0x10e44>
   242f8:	mov	r4, r6
   242fc:	mov	r0, r4
   24300:	sub	sp, fp, #28
   24304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24308:	mov	r0, r5
   2430c:	mov	r1, r7
   24310:	mov	r2, r6
   24314:	mov	r3, #23
   24318:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2431c:	mov	r4, r0
   24320:	mov	r0, r4
   24324:	sub	sp, fp, #28
   24328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2432c:	mov	r0, #1
   24330:	str	r0, [r5, #12]
   24334:	ldr	r0, [r5, #12]
   24338:	cmp	r0, #0
   2433c:	bne	2412c <main@@Base+0x10e34>
   24340:	b	24168 <main@@Base+0x10e70>
   24344:	mov	r0, r5
   24348:	mov	r1, r4
   2434c:	mov	r2, r6
   24350:	mov	r3, #14
   24354:	b	24318 <main@@Base+0x11020>
   24358:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2435c:	add	fp, sp, #28
   24360:	sub	sp, sp, #44	; 0x2c
   24364:	mov	r6, r2
   24368:	ldr	r2, [fp, #8]
   2436c:	mov	r5, r0
   24370:	mov	r0, #0
   24374:	mov	sl, r3
   24378:	cmp	r1, r6
   2437c:	str	r0, [r2]
   24380:	beq	243a4 <main@@Base+0x110ac>
   24384:	ldrb	r0, [r1]
   24388:	cmp	r0, #46	; 0x2e
   2438c:	beq	243cc <main@@Base+0x110d4>
   24390:	cmp	r0, #34	; 0x22
   24394:	bne	24598 <main@@Base+0x112a0>
   24398:	mov	r0, #0
   2439c:	add	r1, r1, #1
   243a0:	str	r0, [r5, #12]
   243a4:	ldr	r0, [r5, #12]
   243a8:	cmp	r0, #0
   243ac:	beq	243ec <main@@Base+0x110f4>
   243b0:	mov	r7, r1
   243b4:	cmp	r7, r6
   243b8:	bne	24430 <main@@Base+0x11138>
   243bc:	mov	r4, r6
   243c0:	mov	r0, r4
   243c4:	sub	sp, fp, #28
   243c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   243cc:	mov	r0, r5
   243d0:	mov	r2, r6
   243d4:	mov	r3, #5
   243d8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   243dc:	mov	r1, r0
   243e0:	ldr	r0, [r5, #12]
   243e4:	cmp	r0, #0
   243e8:	bne	243b0 <main@@Base+0x110b8>
   243ec:	sub	r0, r6, r1
   243f0:	cmp	r0, #2
   243f4:	blt	24418 <main@@Base+0x11120>
   243f8:	ldrb	r0, [r1]
   243fc:	cmp	r0, #32
   24400:	bhi	243b0 <main@@Base+0x110b8>
   24404:	bne	24418 <main@@Base+0x11120>
   24408:	mov	r7, r1
   2440c:	ldrb	r0, [r7, #1]!
   24410:	cmp	r0, #32
   24414:	bhi	24428 <main@@Base+0x11130>
   24418:	mov	r0, r5
   2441c:	mov	r2, r6
   24420:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   24424:	mov	r7, r0
   24428:	cmp	r7, r6
   2442c:	beq	243bc <main@@Base+0x110c4>
   24430:	mov	r1, #0
   24434:	add	r0, sl, #4
   24438:	add	r8, sp, #32
   2443c:	add	r9, sp, #28
   24440:	str	sl, [sp, #12]
   24444:	str	r1, [sp, #16]
   24448:	mov	r1, #0
   2444c:	str	r0, [sp, #8]
   24450:	str	r1, [sp, #20]
   24454:	ldr	r4, [sl]
   24458:	mov	sl, r0
   2445c:	add	r0, sp, #24
   24460:	mov	r1, r7
   24464:	mov	r2, r6
   24468:	mov	r3, r9
   2446c:	str	r8, [sp]
   24470:	str	r0, [sp, #4]
   24474:	mov	r0, r5
   24478:	blx	r4
   2447c:	cmp	r0, r6
   24480:	beq	24564 <main@@Base+0x1126c>
   24484:	mov	r4, r0
   24488:	cmp	r0, r7
   2448c:	bne	244a0 <main@@Base+0x111a8>
   24490:	ldr	r4, [sl], #4
   24494:	cmp	r4, #0
   24498:	bne	2445c <main@@Base+0x11164>
   2449c:	b	24574 <main@@Base+0x1127c>
   244a0:	ldr	r7, [sp, #20]
   244a4:	cmp	r7, #0
   244a8:	beq	244b8 <main@@Base+0x111c0>
   244ac:	ldr	r0, [r5, #12]
   244b0:	cmp	r0, #0
   244b4:	bne	245b0 <main@@Base+0x112b8>
   244b8:	ldr	r0, [sp, #28]
   244bc:	cmp	r0, #0
   244c0:	beq	244e8 <main@@Base+0x111f0>
   244c4:	mov	r0, r5
   244c8:	mov	r1, r4
   244cc:	mov	r2, r6
   244d0:	mov	r3, #8
   244d4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   244d8:	ldr	sl, [sp, #12]
   244dc:	cmp	r0, r6
   244e0:	bne	2452c <main@@Base+0x11234>
   244e4:	b	24564 <main@@Base+0x1126c>
   244e8:	ldr	r0, [sp, #36]	; 0x24
   244ec:	ldr	sl, [sp, #12]
   244f0:	cmp	r0, #0
   244f4:	beq	24518 <main@@Base+0x11220>
   244f8:	mov	r0, r5
   244fc:	mov	r1, r4
   24500:	mov	r2, r6
   24504:	mov	r3, #7
   24508:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2450c:	cmp	r0, r6
   24510:	bne	2452c <main@@Base+0x11234>
   24514:	b	24564 <main@@Base+0x1126c>
   24518:	ldr	r0, [sp, #32]
   2451c:	str	r0, [sp, #16]
   24520:	mov	r0, r4
   24524:	cmp	r0, r6
   24528:	beq	24564 <main@@Base+0x1126c>
   2452c:	ldr	r0, [fp, #8]
   24530:	ldr	r2, [sp, #16]
   24534:	add	r7, r7, #1
   24538:	str	r7, [sp, #20]
   2453c:	mov	r7, r4
   24540:	mov	r1, r0
   24544:	ldr	r0, [r0]
   24548:	add	r0, r0, r2
   2454c:	str	r0, [r1]
   24550:	ldr	r0, [sp, #24]
   24554:	cmp	r0, #0
   24558:	ldr	r0, [sp, #8]
   2455c:	bne	24454 <main@@Base+0x1115c>
   24560:	b	243c0 <main@@Base+0x110c8>
   24564:	mov	r4, r6
   24568:	mov	r0, r4
   2456c:	sub	sp, fp, #28
   24570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24574:	mov	r0, r5
   24578:	mov	r1, r7
   2457c:	mov	r2, r6
   24580:	mov	r3, #23
   24584:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   24588:	mov	r4, r0
   2458c:	mov	r0, r4
   24590:	sub	sp, fp, #28
   24594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24598:	mov	r0, #1
   2459c:	str	r0, [r5, #12]
   245a0:	ldr	r0, [r5, #12]
   245a4:	cmp	r0, #0
   245a8:	bne	243b0 <main@@Base+0x110b8>
   245ac:	b	243ec <main@@Base+0x110f4>
   245b0:	mov	r0, r5
   245b4:	mov	r1, r4
   245b8:	mov	r2, r6
   245bc:	mov	r3, #14
   245c0:	b	24584 <main@@Base+0x1128c>
   245c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   245c8:	add	fp, sp, #28
   245cc:	sub	sp, sp, #52	; 0x34
   245d0:	mov	r6, r2
   245d4:	ldr	r2, [fp, #8]
   245d8:	mov	r5, r0
   245dc:	mov	r0, #0
   245e0:	mov	r8, r3
   245e4:	cmp	r1, r6
   245e8:	str	r0, [r2]
   245ec:	str	r0, [r2, #4]
   245f0:	beq	24614 <main@@Base+0x1131c>
   245f4:	ldrb	r0, [r1]
   245f8:	cmp	r0, #46	; 0x2e
   245fc:	beq	2463c <main@@Base+0x11344>
   24600:	cmp	r0, #34	; 0x22
   24604:	bne	247f4 <main@@Base+0x114fc>
   24608:	mov	r0, #0
   2460c:	add	r1, r1, #1
   24610:	str	r0, [r5, #12]
   24614:	ldr	r0, [r5, #12]
   24618:	cmp	r0, #0
   2461c:	beq	2465c <main@@Base+0x11364>
   24620:	mov	r7, r1
   24624:	cmp	r7, r6
   24628:	bne	246a0 <main@@Base+0x113a8>
   2462c:	mov	r4, r6
   24630:	mov	r0, r4
   24634:	sub	sp, fp, #28
   24638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2463c:	mov	r0, r5
   24640:	mov	r2, r6
   24644:	mov	r3, #5
   24648:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2464c:	mov	r1, r0
   24650:	ldr	r0, [r5, #12]
   24654:	cmp	r0, #0
   24658:	bne	24620 <main@@Base+0x11328>
   2465c:	sub	r0, r6, r1
   24660:	cmp	r0, #2
   24664:	blt	24688 <main@@Base+0x11390>
   24668:	ldrb	r0, [r1]
   2466c:	cmp	r0, #32
   24670:	bhi	24620 <main@@Base+0x11328>
   24674:	bne	24688 <main@@Base+0x11390>
   24678:	mov	r7, r1
   2467c:	ldrb	r0, [r7, #1]!
   24680:	cmp	r0, #32
   24684:	bhi	24698 <main@@Base+0x113a0>
   24688:	mov	r0, r5
   2468c:	mov	r2, r6
   24690:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   24694:	mov	r7, r0
   24698:	cmp	r7, r6
   2469c:	beq	2462c <main@@Base+0x11334>
   246a0:	mov	r1, #0
   246a4:	add	r0, r8, #4
   246a8:	add	sl, sp, #40	; 0x28
   246ac:	add	r9, sp, #36	; 0x24
   246b0:	str	r8, [sp, #16]
   246b4:	str	r1, [sp, #24]
   246b8:	mov	r1, #0
   246bc:	str	r0, [sp, #12]
   246c0:	str	r1, [sp, #20]
   246c4:	mov	r1, #0
   246c8:	str	r1, [sp, #28]
   246cc:	ldr	r4, [r8]
   246d0:	mov	r8, r0
   246d4:	add	r0, sp, #32
   246d8:	mov	r1, r7
   246dc:	mov	r2, r6
   246e0:	mov	r3, r9
   246e4:	str	sl, [sp]
   246e8:	str	r0, [sp, #4]
   246ec:	mov	r0, r5
   246f0:	blx	r4
   246f4:	cmp	r0, r6
   246f8:	beq	247c0 <main@@Base+0x114c8>
   246fc:	mov	r4, r0
   24700:	cmp	r0, r7
   24704:	bne	24718 <main@@Base+0x11420>
   24708:	ldr	r4, [r8], #4
   2470c:	cmp	r4, #0
   24710:	bne	246d4 <main@@Base+0x113dc>
   24714:	b	247d0 <main@@Base+0x114d8>
   24718:	ldr	r7, [sp, #28]
   2471c:	cmp	r7, #0
   24720:	beq	24730 <main@@Base+0x11438>
   24724:	ldr	r0, [r5, #12]
   24728:	cmp	r0, #0
   2472c:	bne	2480c <main@@Base+0x11514>
   24730:	ldr	r0, [sp, #36]	; 0x24
   24734:	cmp	r0, #0
   24738:	beq	24760 <main@@Base+0x11468>
   2473c:	mov	r0, r5
   24740:	mov	r1, r4
   24744:	mov	r2, r6
   24748:	mov	r3, #8
   2474c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   24750:	ldr	r8, [sp, #16]
   24754:	cmp	r0, r6
   24758:	bne	24780 <main@@Base+0x11488>
   2475c:	b	247c0 <main@@Base+0x114c8>
   24760:	ldr	r0, [sp, #40]	; 0x28
   24764:	str	r0, [sp, #24]
   24768:	ldr	r0, [sp, #44]	; 0x2c
   2476c:	str	r0, [sp, #20]
   24770:	mov	r0, r4
   24774:	ldr	r8, [sp, #16]
   24778:	cmp	r0, r6
   2477c:	beq	247c0 <main@@Base+0x114c8>
   24780:	ldr	r0, [fp, #8]
   24784:	add	r7, r7, #1
   24788:	ldr	r3, [sp, #24]
   2478c:	str	r7, [sp, #28]
   24790:	mov	r7, r4
   24794:	mov	r2, r0
   24798:	ldrd	r0, [r0]
   2479c:	adds	r0, r0, r3
   247a0:	ldr	r3, [sp, #20]
   247a4:	adc	r1, r1, r3
   247a8:	strd	r0, [r2]
   247ac:	ldr	r0, [sp, #32]
   247b0:	cmp	r0, #0
   247b4:	ldr	r0, [sp, #12]
   247b8:	bne	246cc <main@@Base+0x113d4>
   247bc:	b	24630 <main@@Base+0x11338>
   247c0:	mov	r4, r6
   247c4:	mov	r0, r4
   247c8:	sub	sp, fp, #28
   247cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247d0:	mov	r0, r5
   247d4:	mov	r1, r7
   247d8:	mov	r2, r6
   247dc:	mov	r3, #23
   247e0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   247e4:	mov	r4, r0
   247e8:	mov	r0, r4
   247ec:	sub	sp, fp, #28
   247f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247f4:	mov	r0, #1
   247f8:	str	r0, [r5, #12]
   247fc:	ldr	r0, [r5, #12]
   24800:	cmp	r0, #0
   24804:	bne	24620 <main@@Base+0x11328>
   24808:	b	2465c <main@@Base+0x11364>
   2480c:	mov	r0, r5
   24810:	mov	r1, r4
   24814:	mov	r2, r6
   24818:	mov	r3, #14
   2481c:	b	247e0 <main@@Base+0x114e8>
   24820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24824:	add	fp, sp, #28
   24828:	sub	sp, sp, #44	; 0x2c
   2482c:	mov	r4, r2
   24830:	ldr	r2, [fp, #8]
   24834:	mov	r5, r0
   24838:	mov	r0, #0
   2483c:	mov	r9, r3
   24840:	cmp	r1, r4
   24844:	str	r0, [r2]
   24848:	str	r0, [r2, #4]
   2484c:	beq	24870 <main@@Base+0x11578>
   24850:	ldrb	r0, [r1]
   24854:	cmp	r0, #46	; 0x2e
   24858:	beq	24898 <main@@Base+0x115a0>
   2485c:	cmp	r0, #34	; 0x22
   24860:	bne	24a08 <main@@Base+0x11710>
   24864:	mov	r0, #0
   24868:	add	r1, r1, #1
   2486c:	str	r0, [r5, #12]
   24870:	ldr	r0, [r5, #12]
   24874:	cmp	r0, #0
   24878:	beq	248b8 <main@@Base+0x115c0>
   2487c:	mov	r7, r1
   24880:	cmp	r7, r4
   24884:	bne	248fc <main@@Base+0x11604>
   24888:	mov	r7, r4
   2488c:	mov	r0, r7
   24890:	sub	sp, fp, #28
   24894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24898:	mov	r0, r5
   2489c:	mov	r2, r4
   248a0:	mov	r3, #5
   248a4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   248a8:	mov	r1, r0
   248ac:	ldr	r0, [r5, #12]
   248b0:	cmp	r0, #0
   248b4:	bne	2487c <main@@Base+0x11584>
   248b8:	sub	r0, r4, r1
   248bc:	cmp	r0, #2
   248c0:	blt	248e4 <main@@Base+0x115ec>
   248c4:	ldrb	r0, [r1]
   248c8:	cmp	r0, #32
   248cc:	bhi	2487c <main@@Base+0x11584>
   248d0:	bne	248e4 <main@@Base+0x115ec>
   248d4:	mov	r7, r1
   248d8:	ldrb	r0, [r7, #1]!
   248dc:	cmp	r0, #32
   248e0:	bhi	248f4 <main@@Base+0x115fc>
   248e4:	mov	r0, r5
   248e8:	mov	r2, r4
   248ec:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   248f0:	mov	r7, r0
   248f4:	cmp	r7, r4
   248f8:	beq	24888 <main@@Base+0x11590>
   248fc:	add	r0, r9, #4
   24900:	mov	r1, #0
   24904:	add	sl, sp, #32
   24908:	add	r8, sp, #28
   2490c:	str	r9, [sp, #16]
   24910:	str	r1, [sp, #20]
   24914:	str	r0, [sp, #12]
   24918:	ldr	r6, [r9]
   2491c:	mov	r9, r0
   24920:	add	r0, sp, #24
   24924:	mov	r1, r7
   24928:	mov	r2, r4
   2492c:	mov	r3, r8
   24930:	str	sl, [sp]
   24934:	str	r0, [sp, #4]
   24938:	mov	r0, r5
   2493c:	blx	r6
   24940:	cmp	r0, r4
   24944:	beq	249d4 <main@@Base+0x116dc>
   24948:	cmp	r0, r7
   2494c:	bne	24960 <main@@Base+0x11668>
   24950:	ldr	r6, [r9], #4
   24954:	cmp	r6, #0
   24958:	bne	24920 <main@@Base+0x11628>
   2495c:	b	249e4 <main@@Base+0x116ec>
   24960:	ldr	r1, [sp, #20]
   24964:	mov	r7, r0
   24968:	cmp	r1, #0
   2496c:	beq	2497c <main@@Base+0x11684>
   24970:	ldr	r0, [r5, #12]
   24974:	cmp	r0, #0
   24978:	bne	24a20 <main@@Base+0x11728>
   2497c:	add	r1, r1, #1
   24980:	ldr	r0, [sp, #32]
   24984:	str	r1, [sp, #20]
   24988:	ldr	r1, [sp, #36]	; 0x24
   2498c:	bl	34724 <flatcc_json_parser_struct_as_root@@Base+0x420>
   24990:	ldr	r2, [fp, #8]
   24994:	vmov	d17, r0, r1
   24998:	ldr	r3, [sp, #28]
   2499c:	ldr	r9, [sp, #16]
   249a0:	mov	r6, r2
   249a4:	vldr	d16, [r2]
   249a8:	eor	r2, r1, #-2147483648	; 0x80000000
   249ac:	cmp	r3, #0
   249b0:	vmov	d18, r0, r2
   249b4:	vseleq.f64	d17, d17, d18
   249b8:	vadd.f64	d16, d16, d17
   249bc:	vstr	d16, [r6]
   249c0:	ldr	r0, [sp, #24]
   249c4:	cmp	r0, #0
   249c8:	ldr	r0, [sp, #12]
   249cc:	bne	24918 <main@@Base+0x11620>
   249d0:	b	2488c <main@@Base+0x11594>
   249d4:	mov	r7, r4
   249d8:	mov	r0, r7
   249dc:	sub	sp, fp, #28
   249e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   249e4:	mov	r0, r5
   249e8:	mov	r1, r7
   249ec:	mov	r2, r4
   249f0:	mov	r3, #23
   249f4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   249f8:	mov	r7, r0
   249fc:	mov	r0, r7
   24a00:	sub	sp, fp, #28
   24a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a08:	mov	r0, #1
   24a0c:	str	r0, [r5, #12]
   24a10:	ldr	r0, [r5, #12]
   24a14:	cmp	r0, #0
   24a18:	bne	2487c <main@@Base+0x11584>
   24a1c:	b	248b8 <main@@Base+0x115c0>
   24a20:	mov	r0, r5
   24a24:	mov	r1, r7
   24a28:	mov	r2, r4
   24a2c:	mov	r3, #14
   24a30:	b	249f4 <main@@Base+0x116fc>
   24a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24a38:	add	fp, sp, #28
   24a3c:	sub	sp, sp, #12
   24a40:	mov	sl, r1
   24a44:	sub	r1, r2, r1
   24a48:	cmp	r1, #8
   24a4c:	movcs	r1, #8
   24a50:	sub	r5, r1, #1
   24a54:	cmp	r5, #7
   24a58:	bhi	24c88 <main@@Base+0x11990>
   24a5c:	str	r3, [sp, #8]
   24a60:	add	r7, pc, #32
   24a64:	mov	r8, #0
   24a68:	mov	ip, #0
   24a6c:	mov	lr, #0
   24a70:	mov	r9, #0
   24a74:	mov	r6, #0
   24a78:	mov	r1, #0
   24a7c:	mov	r3, #0
   24a80:	mov	r4, #0
   24a84:	ldr	pc, [r7, r5, lsl #2]
   24a88:	andeq	r4, r2, ip, ror #21
   24a8c:	andeq	r4, r2, r4, ror #21
   24a90:	ldrdeq	r4, [r2], -ip
   24a94:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24a98:	andeq	r4, r2, r8, asr #21
   24a9c:			; <UNDEFINED> instruction: 0x00024abc
   24aa0:	andeq	r4, r2, ip, lsr #21
   24aa4:	andeq	r4, r2, r8, lsr #21
   24aa8:	ldrb	ip, [sl, #7]
   24aac:	ldrb	r1, [sl, #6]
   24ab0:	mov	lr, r8
   24ab4:	orr	r1, ip, r1, lsl #8
   24ab8:	mov	r8, r1
   24abc:	ldrb	r1, [sl, #5]
   24ac0:	mov	r9, lr
   24ac4:	orr	r8, r8, r1, lsl #16
   24ac8:	ldrb	r1, [sl, #4]
   24acc:	mov	r6, r9
   24ad0:	orr	r8, r8, r1, lsl #24
   24ad4:	ldrb	r1, [sl, #3]
   24ad8:	orr	r1, r1, r6
   24adc:	ldrb	r3, [sl, #2]
   24ae0:	orr	r3, r1, r3, lsl #8
   24ae4:	ldrb	r1, [sl, #1]
   24ae8:	orr	r4, r3, r1, lsl #16
   24aec:	movw	r1, #28276	; 0x6e74
   24af0:	movw	r7, #20577	; 0x5061
   24af4:	ldr	r6, [fp, #12]
   24af8:	movt	r1, #29285	; 0x7265
   24afc:	movt	r7, #18798	; 0x496e
   24b00:	eor	r3, r8, r1
   24b04:	ldrb	r1, [sl]
   24b08:	orr	r1, r4, r1, lsl #24
   24b0c:	eor	r7, r1, r7
   24b10:	orrs	r3, r3, r7
   24b14:	bne	24c3c <main@@Base+0x11944>
   24b18:	add	r8, sl, #8
   24b1c:	sub	r1, r2, r8
   24b20:	cmp	r1, #8
   24b24:	movcs	r1, #8
   24b28:	sub	r7, r1, #1
   24b2c:	cmp	r7, #7
   24b30:	bhi	24c88 <main@@Base+0x11990>
   24b34:	str	r0, [sp, #4]
   24b38:	add	lr, pc, #32
   24b3c:	mov	r6, #0
   24b40:	mov	r0, #0
   24b44:	mov	r1, #0
   24b48:	mov	r5, #0
   24b4c:	mov	r4, #0
   24b50:	mov	r3, #0
   24b54:	mov	ip, #0
   24b58:	mov	r9, #0
   24b5c:	ldr	pc, [lr, r7, lsl #2]
   24b60:	andeq	r4, r2, r4, asr #23
   24b64:			; <UNDEFINED> instruction: 0x00024bbc
   24b68:			; <UNDEFINED> instruction: 0x00024bb4
   24b6c:	andeq	r4, r2, ip, lsr #23
   24b70:	andeq	r4, r2, r0, lsr #23
   24b74:	muleq	r2, r4, fp
   24b78:	andeq	r4, r2, r4, lsl #23
   24b7c:	andeq	r4, r2, r0, lsl #23
   24b80:	ldrb	r0, [sl, #15]
   24b84:	ldrb	r1, [sl, #14]
   24b88:	orr	r0, r0, r1, lsl #8
   24b8c:	mov	r1, r6
   24b90:	mov	r6, r0
   24b94:	ldrb	r0, [sl, #13]
   24b98:	mov	r5, r1
   24b9c:	orr	r6, r6, r0, lsl #16
   24ba0:	ldrb	r0, [sl, #12]
   24ba4:	mov	r4, r5
   24ba8:	orr	r6, r6, r0, lsl #24
   24bac:	ldrb	r0, [sl, #11]
   24bb0:	orr	r3, r0, r4
   24bb4:	ldrb	r0, [sl, #10]
   24bb8:	orr	ip, r3, r0, lsl #8
   24bbc:	ldrb	r0, [sl, #9]
   24bc0:	orr	r9, ip, r0, lsl #16
   24bc4:	ldrb	r1, [r8]
   24bc8:	movw	r0, #24931	; 0x6163
   24bcc:	movw	r3, #28005	; 0x6d65
   24bd0:	movt	r0, #29552	; 0x7370
   24bd4:	movt	r3, #20065	; 0x4e61
   24bd8:	eor	r0, r6, r0
   24bdc:	orr	r1, r9, r1, lsl #24
   24be0:	eor	r1, r1, r3
   24be4:	orrs	r0, r0, r1
   24be8:	bne	24c88 <main@@Base+0x11990>
   24bec:	add	r6, sl, #16
   24bf0:	sub	r0, r2, r6
   24bf4:	cmp	r0, #8
   24bf8:	movcs	r0, #8
   24bfc:	sub	r0, r0, #1
   24c00:	cmp	r0, #7
   24c04:	bhi	24c88 <main@@Base+0x11990>
   24c08:	ldrb	r0, [r6]
   24c0c:	cmp	r0, #101	; 0x65
   24c10:	bne	24c88 <main@@Base+0x11990>
   24c14:	ldr	r0, [fp, #12]
   24c18:	mov	r1, r6
   24c1c:	mov	r3, #1
   24c20:	mov	r8, #1
   24c24:	str	r0, [sp]
   24c28:	ldr	r0, [sp, #4]
   24c2c:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24c30:	cmp	r0, r6
   24c34:	bne	24c68 <main@@Base+0x11970>
   24c38:	b	24c88 <main@@Base+0x11990>
   24c3c:	movw	r3, #20037	; 0x4e45
   24c40:	movt	r3, #20047	; 0x4e4f
   24c44:	teq	r1, r3
   24c48:	bne	24c88 <main@@Base+0x11990>
   24c4c:	mov	r1, sl
   24c50:	mov	r3, #4
   24c54:	str	r6, [sp]
   24c58:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24c5c:	cmp	r0, sl
   24c60:	beq	24c88 <main@@Base+0x11990>
   24c64:	mov	r8, #0
   24c68:	mov	sl, r0
   24c6c:	ldr	r0, [fp, #8]
   24c70:	mov	r1, #0
   24c74:	str	r8, [r0]
   24c78:	str	r1, [r0, #4]
   24c7c:	mov	r0, #0
   24c80:	ldr	r1, [sp, #8]
   24c84:	str	r0, [r1]
   24c88:	mov	r0, sl
   24c8c:	sub	sp, fp, #28
   24c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24c98:	add	fp, sp, #28
   24c9c:	sub	sp, sp, #12
   24ca0:	mov	r5, r1
   24ca4:	sub	r1, r2, r1
   24ca8:	cmp	r1, #8
   24cac:	movcs	r1, #8
   24cb0:	sub	r7, r1, #1
   24cb4:	cmp	r7, #7
   24cb8:	bhi	24e34 <main@@Base+0x11b3c>
   24cbc:	str	r3, [sp, #8]
   24cc0:	add	r8, pc, #32
   24cc4:	mov	lr, #0
   24cc8:	mov	ip, #0
   24ccc:	mov	r9, #0
   24cd0:	mov	sl, #0
   24cd4:	mov	r1, #0
   24cd8:	mov	r3, #0
   24cdc:	mov	r4, #0
   24ce0:	mov	r6, #0
   24ce4:	ldr	pc, [r8, r7, lsl #2]
   24ce8:	andeq	r4, r2, ip, asr #26
   24cec:	andeq	r4, r2, r4, asr #26
   24cf0:	andeq	r4, r2, ip, lsr sp
   24cf4:	andeq	r4, r2, r4, lsr sp
   24cf8:	andeq	r4, r2, r8, lsr #26
   24cfc:	andeq	r4, r2, ip, lsl sp
   24d00:	andeq	r4, r2, ip, lsl #26
   24d04:	andeq	r4, r2, r8, lsl #26
   24d08:	ldrb	ip, [r5, #7]
   24d0c:	ldrb	r1, [r5, #6]
   24d10:	mov	r9, lr
   24d14:	orr	r1, ip, r1, lsl #8
   24d18:	mov	lr, r1
   24d1c:	ldrb	r1, [r5, #5]
   24d20:	mov	sl, r9
   24d24:	orr	lr, lr, r1, lsl #16
   24d28:	ldrb	r1, [r5, #4]
   24d2c:	orr	lr, lr, r1, lsl #24
   24d30:	mov	r1, sl
   24d34:	ldrb	r3, [r5, #3]
   24d38:	orr	r3, r3, r1
   24d3c:	ldrb	r1, [r5, #2]
   24d40:	orr	r4, r3, r1, lsl #8
   24d44:	ldrb	r1, [r5, #1]
   24d48:	orr	r6, r4, r1, lsl #16
   24d4c:	ldrb	r1, [r5]
   24d50:	ldr	r3, [fp, #12]
   24d54:	ldr	r8, [fp, #8]
   24d58:	orr	r1, r6, r1, lsl #24
   24d5c:	movw	r6, #30769	; 0x7831
   24d60:	movt	r6, #26725	; 0x6865
   24d64:	cmp	r1, r6
   24d68:	bhi	24d98 <main@@Base+0x11aa0>
   24d6c:	teq	r1, r6
   24d70:	bne	24e34 <main@@Base+0x11b3c>
   24d74:	str	r3, [sp]
   24d78:	mov	r1, r5
   24d7c:	mov	r3, #4
   24d80:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24d84:	cmp	r0, r5
   24d88:	beq	24e34 <main@@Base+0x11b3c>
   24d8c:	mov	r1, #0
   24d90:	mov	r2, #3
   24d94:	b	24e20 <main@@Base+0x11b28>
   24d98:	lsr	r4, lr, #16
   24d9c:	movw	r7, #25959	; 0x6567
   24da0:	movw	r6, #26725	; 0x6865
   24da4:	orr	r4, r4, r1, lsl #16
   24da8:	movt	r7, #30830	; 0x786e
   24dac:	eor	r6, r6, r1, lsr #16
   24db0:	eor	r7, r4, r7
   24db4:	orrs	r7, r7, r6
   24db8:	bne	24dec <main@@Base+0x11af4>
   24dbc:	str	r3, [sp]
   24dc0:	mov	r1, r5
   24dc4:	mov	r3, #6
   24dc8:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24dcc:	cmp	r0, r5
   24dd0:	beq	24e34 <main@@Base+0x11b3c>
   24dd4:	mvn	r2, #1
   24dd8:	mvn	r1, #0
   24ddc:	str	r2, [r8]
   24de0:	str	r1, [r8, #4]
   24de4:	mov	r1, #1
   24de8:	b	24e28 <main@@Base+0x11b30>
   24dec:	movw	r7, #30770	; 0x7832
   24df0:	movt	r7, #26725	; 0x6865
   24df4:	teq	r1, r7
   24df8:	bne	24e34 <main@@Base+0x11b3c>
   24dfc:	str	r3, [sp]
   24e00:	mov	r1, r5
   24e04:	mov	r3, #4
   24e08:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24e0c:	cmp	r0, r5
   24e10:	beq	24e34 <main@@Base+0x11b3c>
   24e14:	movw	r2, #48815	; 0xbeaf
   24e18:	mov	r1, #0
   24e1c:	movt	r2, #32431	; 0x7eaf
   24e20:	str	r2, [r8]
   24e24:	str	r1, [r8, #4]
   24e28:	ldr	r2, [sp, #8]
   24e2c:	mov	r5, r0
   24e30:	str	r1, [r2]
   24e34:	mov	r0, r5
   24e38:	sub	sp, fp, #28
   24e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e44:	add	fp, sp, #28
   24e48:	sub	sp, sp, #12
   24e4c:	mov	sl, r1
   24e50:	sub	r1, r2, r1
   24e54:	cmp	r1, #8
   24e58:	movcs	r1, #8
   24e5c:	sub	r4, r1, #1
   24e60:	cmp	r4, #7
   24e64:	bhi	25024 <main@@Base+0x11d2c>
   24e68:	str	r3, [sp, #8]
   24e6c:	add	r8, pc, #32
   24e70:	mov	r9, #0
   24e74:	mov	ip, #0
   24e78:	mov	lr, #0
   24e7c:	mov	r7, #0
   24e80:	mov	r6, #0
   24e84:	mov	r3, #0
   24e88:	mov	r1, #0
   24e8c:	mov	r5, #0
   24e90:	ldr	pc, [r8, r4, lsl #2]
   24e94:	strdeq	r4, [r2], -r8
   24e98:	strdeq	r4, [r2], -r0
   24e9c:	andeq	r4, r2, r8, ror #29
   24ea0:	andeq	r4, r2, r0, ror #29
   24ea4:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   24ea8:	andeq	r4, r2, r8, asr #29
   24eac:			; <UNDEFINED> instruction: 0x00024eb8
   24eb0:			; <UNDEFINED> instruction: 0x00024eb4
   24eb4:	ldrb	ip, [sl, #7]
   24eb8:	ldrb	r1, [sl, #6]
   24ebc:	mov	lr, r9
   24ec0:	orr	r1, ip, r1, lsl #8
   24ec4:	mov	r9, r1
   24ec8:	ldrb	r1, [sl, #5]
   24ecc:	mov	r7, lr
   24ed0:	orr	r9, r9, r1, lsl #16
   24ed4:	ldrb	r1, [sl, #4]
   24ed8:	mov	r6, r7
   24edc:	orr	r9, r9, r1, lsl #24
   24ee0:	ldrb	r1, [sl, #3]
   24ee4:	orr	r3, r1, r6
   24ee8:	ldrb	r1, [sl, #2]
   24eec:	orr	r1, r3, r1, lsl #8
   24ef0:	ldrb	r3, [sl, #1]
   24ef4:	orr	r5, r1, r3, lsl #16
   24ef8:	ldrb	r1, [sl]
   24efc:	ldr	r3, [fp, #12]
   24f00:	ldr	r6, [fp, #8]
   24f04:	orr	r7, r5, r1, lsl #24
   24f08:	movw	r1, #29745	; 0x7431
   24f0c:	movt	r1, #26990	; 0x696e
   24f10:	cmp	r7, r1
   24f14:	bhi	24f44 <main@@Base+0x11c4c>
   24f18:	teq	r7, r1
   24f1c:	bne	25024 <main@@Base+0x11d2c>
   24f20:	str	r3, [sp]
   24f24:	mov	r1, sl
   24f28:	mov	r3, #4
   24f2c:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24f30:	cmp	r0, sl
   24f34:	beq	25024 <main@@Base+0x11d2c>
   24f38:	mov	r1, #0
   24f3c:	mov	r2, #2
   24f40:	b	24f90 <main@@Base+0x11c98>
   24f44:	movw	r4, #0
   24f48:	movw	r1, #29806	; 0x746e
   24f4c:	movt	r4, #25959	; 0x6567
   24f50:	movt	r1, #26990	; 0x696e
   24f54:	subs	r5, r9, r4
   24f58:	sbcs	r5, r7, r1
   24f5c:	bcs	24f9c <main@@Base+0x11ca4>
   24f60:	movw	r1, #29746	; 0x7432
   24f64:	movt	r1, #26990	; 0x696e
   24f68:	teq	r7, r1
   24f6c:	bne	25024 <main@@Base+0x11d2c>
   24f70:	str	r3, [sp]
   24f74:	mov	r1, sl
   24f78:	mov	r3, #4
   24f7c:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24f80:	cmp	r0, sl
   24f84:	beq	25024 <main@@Base+0x11d2c>
   24f88:	mov	r1, #0
   24f8c:	mov	r2, #42	; 0x2a
   24f90:	str	r2, [r6]
   24f94:	str	r1, [r6, #4]
   24f98:	b	25018 <main@@Base+0x11d20>
   24f9c:	eor	r1, r7, r1
   24fa0:	add	r7, r4, #12800	; 0x3200
   24fa4:	bic	r5, r9, #255	; 0xff
   24fa8:	eor	r7, r5, r7
   24fac:	orrs	r7, r7, r1
   24fb0:	bne	24fdc <main@@Base+0x11ce4>
   24fb4:	str	r3, [sp]
   24fb8:	mov	r1, sl
   24fbc:	mov	r3, #7
   24fc0:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24fc4:	cmp	r0, sl
   24fc8:	beq	25024 <main@@Base+0x11d2c>
   24fcc:	mvn	r2, #1
   24fd0:	mvn	r1, #0
   24fd4:	orr	r2, r2, #1
   24fd8:	b	2500c <main@@Base+0x11d14>
   24fdc:	bfc	r9, #0, #16
   24fe0:	eor	r7, r9, r4
   24fe4:	orrs	r1, r7, r1
   24fe8:	bne	25024 <main@@Base+0x11d2c>
   24fec:	str	r3, [sp]
   24ff0:	mov	r1, sl
   24ff4:	mov	r3, #6
   24ff8:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   24ffc:	cmp	r0, sl
   25000:	beq	25024 <main@@Base+0x11d2c>
   25004:	mvn	r1, #0
   25008:	mvn	r2, #1
   2500c:	str	r2, [r6]
   25010:	str	r1, [r6, #4]
   25014:	mov	r1, #1
   25018:	ldr	r2, [sp, #8]
   2501c:	mov	sl, r0
   25020:	str	r1, [r2]
   25024:	mov	r0, sl
   25028:	sub	sp, fp, #28
   2502c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25030:	push	{r4, r5, r6, r7, fp, lr}
   25034:	add	fp, sp, #16
   25038:	sub	sp, sp, #8
   2503c:	mov	r5, r1
   25040:	sub	r1, r2, r1
   25044:	mov	r4, r3
   25048:	cmp	r1, #8
   2504c:	movcs	r1, #8
   25050:	sub	r3, r1, #1
   25054:	cmp	r3, #7
   25058:	bhi	2516c <main@@Base+0x11e74>
   2505c:	add	r7, pc, #4
   25060:	mov	r1, #0
   25064:	ldr	pc, [r7, r3, lsl #2]
   25068:	andeq	r5, r2, r0, lsr #1
   2506c:	muleq	r2, r8, r0
   25070:	muleq	r2, r0, r0
   25074:	andeq	r5, r2, r8, lsl #1
   25078:	andeq	r5, r2, r8, lsl #1
   2507c:	andeq	r5, r2, r8, lsl #1
   25080:	andeq	r5, r2, r8, lsl #1
   25084:	andeq	r5, r2, r8, lsl #1
   25088:	ldrb	r3, [r5, #3]
   2508c:	orr	r1, r3, r1
   25090:	ldrb	r3, [r5, #2]
   25094:	orr	r1, r1, r3, lsl #8
   25098:	ldrb	r3, [r5, #1]
   2509c:	orr	r1, r1, r3, lsl #16
   250a0:	ldrb	r6, [r5]
   250a4:	ldr	r3, [fp, #12]
   250a8:	ldr	r7, [fp, #8]
   250ac:	orr	r1, r1, r6, lsl #24
   250b0:	movw	r6, #26417	; 0x6731
   250b4:	movt	r6, #28261	; 0x6e65
   250b8:	cmp	r1, r6
   250bc:	bhi	250ec <main@@Base+0x11df4>
   250c0:	teq	r1, r6
   250c4:	bne	2516c <main@@Base+0x11e74>
   250c8:	str	r3, [sp]
   250cc:	mov	r1, r5
   250d0:	mov	r3, #4
   250d4:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   250d8:	cmp	r0, r5
   250dc:	beq	2516c <main@@Base+0x11e74>
   250e0:	mvn	r1, #0
   250e4:	mvn	r2, #11
   250e8:	b	25158 <main@@Base+0x11e60>
   250ec:	movw	r6, #26418	; 0x6732
   250f0:	movt	r6, #28261	; 0x6e65
   250f4:	teq	r1, r6
   250f8:	beq	25134 <main@@Base+0x11e3c>
   250fc:	movw	r6, #26419	; 0x6733
   25100:	movt	r6, #28261	; 0x6e65
   25104:	teq	r1, r6
   25108:	bne	2516c <main@@Base+0x11e74>
   2510c:	str	r3, [sp]
   25110:	mov	r1, r5
   25114:	mov	r3, #4
   25118:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   2511c:	cmp	r0, r5
   25120:	beq	2516c <main@@Base+0x11e74>
   25124:	mvn	r2, #11
   25128:	mvn	r1, #0
   2512c:	orr	r2, r2, #2
   25130:	b	25158 <main@@Base+0x11e60>
   25134:	str	r3, [sp]
   25138:	mov	r1, r5
   2513c:	mov	r3, #4
   25140:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   25144:	cmp	r0, r5
   25148:	beq	2516c <main@@Base+0x11e74>
   2514c:	mvn	r2, #11
   25150:	mvn	r1, #0
   25154:	orr	r2, r2, #1
   25158:	str	r2, [r7]
   2515c:	str	r1, [r7, #4]
   25160:	mov	r1, #1
   25164:	mov	r5, r0
   25168:	str	r1, [r4]
   2516c:	mov	r0, r5
   25170:	sub	sp, fp, #16
   25174:	pop	{r4, r5, r6, r7, fp, pc}
   25178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2517c:	add	fp, sp, #28
   25180:	sub	sp, sp, #12
   25184:	mov	sl, r1
   25188:	sub	r1, r2, r1
   2518c:	cmp	r1, #8
   25190:	movcs	r1, #8
   25194:	sub	r6, r1, #1
   25198:	cmp	r6, #7
   2519c:	bhi	25418 <main@@Base+0x12120>
   251a0:	str	r3, [sp, #8]
   251a4:	add	r9, pc, #32
   251a8:	mov	r1, #0
   251ac:	mov	ip, #0
   251b0:	mov	lr, #0
   251b4:	mov	r4, #0
   251b8:	mov	r7, #0
   251bc:	mov	r3, #0
   251c0:	mov	r5, #0
   251c4:	mov	r8, #0
   251c8:	ldr	pc, [r9, r6, lsl #2]
   251cc:	andeq	r5, r2, r0, lsr r2
   251d0:	andeq	r5, r2, r8, lsr #4
   251d4:	andeq	r5, r2, r0, lsr #4
   251d8:	andeq	r5, r2, r8, lsl r2
   251dc:	andeq	r5, r2, ip, lsl #4
   251e0:	andeq	r5, r2, r0, lsl #4
   251e4:	strdeq	r5, [r2], -r0
   251e8:	andeq	r5, r2, ip, ror #3
   251ec:	ldrb	ip, [sl, #7]
   251f0:	ldrb	r3, [sl, #6]
   251f4:	mov	lr, r1
   251f8:	orr	r3, ip, r3, lsl #8
   251fc:	mov	r1, r3
   25200:	ldrb	r3, [sl, #5]
   25204:	mov	r4, lr
   25208:	orr	r1, r1, r3, lsl #16
   2520c:	ldrb	r3, [sl, #4]
   25210:	mov	r7, r4
   25214:	orr	r1, r1, r3, lsl #24
   25218:	ldrb	r3, [sl, #3]
   2521c:	orr	r3, r3, r7
   25220:	ldrb	r7, [sl, #2]
   25224:	orr	r5, r3, r7, lsl #8
   25228:	ldrb	r3, [sl, #1]
   2522c:	orr	r8, r5, r3, lsl #16
   25230:	ldrb	r3, [sl]
   25234:	ldr	lr, [fp, #12]
   25238:	ldr	r9, [fp, #8]
   2523c:	orr	r6, r8, r3, lsl #24
   25240:	movw	r3, #20036	; 0x4e44
   25244:	movt	r3, #20047	; 0x4e4f
   25248:	cmp	r6, r3
   2524c:	bhi	252ac <main@@Base+0x11fb4>
   25250:	movw	r7, #28160	; 0x6e00
   25254:	movw	r4, #28523	; 0x6f6b
   25258:	and	r3, r1, #-16777216	; 0xff000000
   2525c:	movt	r7, #18017	; 0x4661
   25260:	movt	r4, #17007	; 0x426f
   25264:	subs	r5, r1, r7
   25268:	sbcs	r5, r6, r4
   2526c:	bcs	252f8 <main@@Base+0x12000>
   25270:	movw	r1, #27756	; 0x6c6c
   25274:	eor	r3, r3, #1694498816	; 0x65000000
   25278:	movt	r1, #16997	; 0x4265
   2527c:	eor	r1, r6, r1
   25280:	orrs	r1, r3, r1
   25284:	bne	25418 <main@@Base+0x12120>
   25288:	mov	r1, sl
   2528c:	mov	r3, #5
   25290:	str	lr, [sp]
   25294:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   25298:	cmp	r0, sl
   2529c:	beq	25418 <main@@Base+0x12120>
   252a0:	mov	r1, #0
   252a4:	mov	r2, #9
   252a8:	b	25404 <main@@Base+0x1210c>
   252ac:	movw	r7, #26725	; 0x6865
   252b0:	mvn	r3, #-1912602624	; 0x8e000000
   252b4:	movt	r7, #20340	; 0x4f74
   252b8:	subs	r3, r3, r1
   252bc:	sbcs	r3, r7, r6
   252c0:	bcc	25334 <main@@Base+0x1203c>
   252c4:	movw	r1, #20037	; 0x4e45
   252c8:	movt	r1, #20047	; 0x4e4f
   252cc:	teq	r6, r1
   252d0:	bne	25418 <main@@Base+0x12120>
   252d4:	mov	r1, sl
   252d8:	mov	r3, #4
   252dc:	str	lr, [sp]
   252e0:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   252e4:	cmp	r0, sl
   252e8:	beq	25418 <main@@Base+0x12120>
   252ec:	mov	r1, #0
   252f0:	str	r1, [r9]
   252f4:	b	25408 <main@@Base+0x12110>
   252f8:	movw	r5, #19553	; 0x4c61
   252fc:	eor	r3, r3, #1845493760	; 0x6e000000
   25300:	movt	r5, #19829	; 0x4d75
   25304:	eor	r5, r6, r5
   25308:	orrs	r3, r3, r5
   2530c:	bne	25388 <main@@Base+0x12090>
   25310:	mov	r1, sl
   25314:	mov	r3, #5
   25318:	str	lr, [sp]
   2531c:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   25320:	cmp	r0, sl
   25324:	beq	25418 <main@@Base+0x12120>
   25328:	mov	r1, #0
   2532c:	mov	r2, #2
   25330:	b	25404 <main@@Base+0x1210c>
   25334:	movw	r4, #25964	; 0x656c
   25338:	movw	ip, #28789	; 0x7075
   2533c:	movt	r4, #28282	; 0x6e7a
   25340:	movt	ip, #21089	; 0x5261
   25344:	subs	r3, r1, r4
   25348:	sbcs	r3, r6, ip
   2534c:	bcs	253c0 <main@@Base+0x120c8>
   25350:	and	r1, r1, #-16777216	; 0xff000000
   25354:	eor	r3, r6, r7
   25358:	eor	r1, r1, #1912602624	; 0x72000000
   2535c:	orrs	r1, r1, r3
   25360:	bne	25418 <main@@Base+0x12120>
   25364:	mov	r1, sl
   25368:	mov	r3, #5
   2536c:	str	lr, [sp]
   25370:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   25374:	cmp	r0, sl
   25378:	beq	25418 <main@@Base+0x12120>
   2537c:	mov	r1, #0
   25380:	mov	r2, #11
   25384:	b	25404 <main@@Base+0x1210c>
   25388:	bic	r1, r1, #255	; 0xff
   2538c:	eor	r3, r6, r4
   25390:	eor	r1, r1, r7
   25394:	orrs	r1, r1, r3
   25398:	bne	25418 <main@@Base+0x12120>
   2539c:	mov	r1, sl
   253a0:	mov	r3, #7
   253a4:	str	lr, [sp]
   253a8:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   253ac:	cmp	r0, sl
   253b0:	beq	25418 <main@@Base+0x12120>
   253b4:	mov	r1, #0
   253b8:	mov	r2, #10
   253bc:	b	25404 <main@@Base+0x1210c>
   253c0:	lsr	r5, r1, #16
   253c4:	movw	r7, #25956	; 0x6564
   253c8:	movw	r3, #21870	; 0x556e
   253cc:	orr	r5, r5, r6, lsl #16
   253d0:	movt	r7, #30067	; 0x7573
   253d4:	eor	r3, r3, r6, lsr #16
   253d8:	eor	r5, r5, r7
   253dc:	orrs	r3, r5, r3
   253e0:	bne	25424 <main@@Base+0x1212c>
   253e4:	mov	r1, sl
   253e8:	mov	r3, #6
   253ec:	str	lr, [sp]
   253f0:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   253f4:	cmp	r0, sl
   253f8:	beq	25418 <main@@Base+0x12120>
   253fc:	mov	r1, #0
   25400:	mov	r2, #255	; 0xff
   25404:	str	r2, [r9]
   25408:	str	r1, [r9, #4]
   2540c:	ldr	r2, [sp, #8]
   25410:	str	r1, [r2]
   25414:	mov	sl, r0
   25418:	mov	r0, sl
   2541c:	sub	sp, fp, #28
   25420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25424:	eor	r1, r1, r4
   25428:	eor	r3, r6, ip
   2542c:	orrs	r1, r1, r3
   25430:	bne	25418 <main@@Base+0x12120>
   25434:	mov	r1, sl
   25438:	mov	r3, #8
   2543c:	str	lr, [sp]
   25440:	mov	r4, #8
   25444:	bl	30608 <flatcc_json_parser_match_constant@@Base>
   25448:	cmp	r0, sl
   2544c:	beq	25418 <main@@Base+0x12120>
   25450:	mov	r5, #0
   25454:	strd	r4, [r9]
   25458:	ldr	r1, [sp, #8]
   2545c:	str	r5, [r1]
   25460:	b	25414 <main@@Base+0x1211c>
   25464:	cmp	r0, #5
   25468:	mov	r1, #0
   2546c:	movwcc	r1, #1
   25470:	mov	r0, r1
   25474:	bx	lr
   25478:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2547c:	add	fp, sp, #28
   25480:	sub	sp, sp, #68	; 0x44
   25484:	mov	sl, r0
   25488:	mov	r0, #0
   2548c:	mov	r4, r1
   25490:	mov	r1, #3
   25494:	mov	r5, r3
   25498:	mov	r9, r2
   2549c:	str	r0, [r3]
   254a0:	ldr	r0, [sl]
   254a4:	bl	2cd8c <flatcc_builder_start_table@@Base>
   254a8:	cmp	r0, #0
   254ac:	bne	25518 <main@@Base+0x12220>
   254b0:	cmp	r4, r9
   254b4:	beq	254f4 <main@@Base+0x121fc>
   254b8:	ldrb	r0, [r4]
   254bc:	cmp	r0, #123	; 0x7b
   254c0:	bne	254f4 <main@@Base+0x121fc>
   254c4:	add	r1, r4, #1
   254c8:	sub	r0, r9, r1
   254cc:	cmp	r0, #2
   254d0:	blt	2554c <main@@Base+0x12254>
   254d4:	ldrb	r0, [r1]
   254d8:	cmp	r0, #32
   254dc:	bls	2553c <main@@Base+0x12244>
   254e0:	mov	r4, r1
   254e4:	cmp	r4, r9
   254e8:	mov	r2, r9
   254ec:	bne	25568 <main@@Base+0x12270>
   254f0:	b	255a8 <main@@Base+0x122b0>
   254f4:	mov	r0, sl
   254f8:	mov	r1, r4
   254fc:	mov	r2, r9
   25500:	mov	r3, #21
   25504:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25508:	mov	r4, r0
   2550c:	ldr	r0, [sl, #24]
   25510:	cmp	r0, #0
   25514:	beq	28c08 <main@@Base+0x15910>
   25518:	mov	r0, sl
   2551c:	mov	r1, r4
   25520:	mov	r2, r9
   25524:	mov	r3, #33	; 0x21
   25528:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2552c:	mov	r4, r0
   25530:	mov	r0, r4
   25534:	sub	sp, fp, #28
   25538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2553c:	bne	2554c <main@@Base+0x12254>
   25540:	ldrb	r0, [r4, #2]!
   25544:	cmp	r0, #32
   25548:	bhi	2555c <main@@Base+0x12264>
   2554c:	mov	r0, sl
   25550:	mov	r2, r9
   25554:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25558:	mov	r4, r0
   2555c:	cmp	r4, r9
   25560:	mov	r2, r9
   25564:	beq	255a8 <main@@Base+0x122b0>
   25568:	ldrb	r0, [r4]
   2556c:	cmp	r0, #125	; 0x7d
   25570:	bne	255a4 <main@@Base+0x122ac>
   25574:	add	r1, r4, #1
   25578:	sub	r0, r9, r1
   2557c:	cmp	r0, #2
   25580:	blt	28c54 <main@@Base+0x1595c>
   25584:	ldrb	r0, [r1]
   25588:	cmp	r0, #32
   2558c:	bhi	28bf8 <main@@Base+0x15900>
   25590:	bne	28c54 <main@@Base+0x1595c>
   25594:	ldrb	r0, [r4, #2]!
   25598:	cmp	r0, #32
   2559c:	bhi	2550c <main@@Base+0x12214>
   255a0:	b	28c54 <main@@Base+0x1595c>
   255a4:	mov	r2, r4
   255a8:	add	r0, sl, #12
   255ac:	movw	r1, #25186	; 0x6262
   255b0:	str	sl, [sp, #24]
   255b4:	str	r5, [sp, #32]
   255b8:	str	r0, [sp, #28]
   255bc:	movw	r0, #33152	; 0x8180
   255c0:	movt	r1, #25186	; 0x6262
   255c4:	movt	r0, #4
   255c8:	add	r0, r0, #96	; 0x60
   255cc:	str	r0, [sp, #12]
   255d0:	movw	r0, #257	; 0x101
   255d4:	movt	r0, #257	; 0x101
   255d8:	add	r0, r1, r0
   255dc:	str	r0, [sp, #20]
   255e0:	movw	r0, #514	; 0x202
   255e4:	movt	r0, #514	; 0x202
   255e8:	add	r0, r1, r0
   255ec:	str	r0, [sp, #16]
   255f0:	cmp	r2, r9
   255f4:	mov	r8, r9
   255f8:	beq	2564c <main@@Base+0x12354>
   255fc:	ldrb	r0, [r2]
   25600:	cmp	r0, #46	; 0x2e
   25604:	beq	25620 <main@@Base+0x12328>
   25608:	cmp	r0, #34	; 0x22
   2560c:	bne	2563c <main@@Base+0x12344>
   25610:	ldr	r0, [sp, #28]
   25614:	mov	r1, #0
   25618:	add	r8, r2, #1
   2561c:	b	25648 <main@@Base+0x12350>
   25620:	mov	r1, r2
   25624:	mov	r0, sl
   25628:	mov	r2, r9
   2562c:	mov	r3, #5
   25630:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25634:	mov	r8, r0
   25638:	b	2564c <main@@Base+0x12354>
   2563c:	ldr	r0, [sp, #28]
   25640:	mov	r1, #1
   25644:	mov	r8, r2
   25648:	str	r1, [r0]
   2564c:	sub	r0, r9, r8
   25650:	mov	r1, #8
   25654:	cmp	r0, #8
   25658:	movcs	r0, r1
   2565c:	sub	r3, r0, #1
   25660:	cmp	r3, #7
   25664:	bhi	25900 <main@@Base+0x12608>
   25668:	add	r5, pc, #32
   2566c:	mov	r0, #0
   25670:	mov	ip, #0
   25674:	mov	lr, #0
   25678:	mov	r7, #0
   2567c:	mov	r2, #0
   25680:	mov	r6, #0
   25684:	mov	r4, #0
   25688:	mov	r1, #0
   2568c:	ldr	pc, [r5, r3, lsl #2]
   25690:	strdeq	r5, [r2], -r4
   25694:	andeq	r5, r2, ip, ror #13
   25698:	andeq	r5, r2, r4, ror #13
   2569c:	ldrdeq	r5, [r2], -ip
   256a0:	ldrdeq	r5, [r2], -r0
   256a4:	andeq	r5, r2, r4, asr #13
   256a8:			; <UNDEFINED> instruction: 0x000256b4
   256ac:			; <UNDEFINED> instruction: 0x000256b0
   256b0:	ldrb	ip, [r8, #7]
   256b4:	ldrb	r1, [r8, #6]
   256b8:	mov	lr, r0
   256bc:	orr	r1, ip, r1, lsl #8
   256c0:	mov	r0, r1
   256c4:	ldrb	r1, [r8, #5]
   256c8:	mov	r7, lr
   256cc:	orr	r0, r0, r1, lsl #16
   256d0:	ldrb	r1, [r8, #4]
   256d4:	mov	r2, r7
   256d8:	orr	r0, r0, r1, lsl #24
   256dc:	ldrb	r1, [r8, #3]
   256e0:	orr	r6, r1, r2
   256e4:	ldrb	r1, [r8, #2]
   256e8:	orr	r4, r6, r1, lsl #8
   256ec:	ldrb	r1, [r8, #1]
   256f0:	orr	r1, r4, r1, lsl #16
   256f4:	movw	r2, #28526	; 0x6f6e
   256f8:	movt	r2, #27251	; 0x6a73
   256fc:	eor	r0, r0, r2
   25700:	ldrb	r2, [r8]
   25704:	orr	r1, r1, r2, lsl #24
   25708:	movw	r2, #29556	; 0x7374
   2570c:	movt	r2, #29797	; 0x7465
   25710:	eor	r1, r1, r2
   25714:	orrs	r0, r0, r1
   25718:	bne	25900 <main@@Base+0x12608>
   2571c:	add	r1, r8, #8
   25720:	mov	r2, #8
   25724:	sub	r0, r9, r1
   25728:	cmp	r0, #8
   2572c:	movcs	r0, r2
   25730:	sub	r7, r0, #1
   25734:	cmp	r7, #7
   25738:	bhi	2590c <main@@Base+0x12614>
   2573c:	add	r0, pc, #32
   25740:	mov	sl, #0
   25744:	mov	ip, #0
   25748:	mov	lr, #0
   2574c:	mov	r6, #0
   25750:	mov	r3, #0
   25754:	mov	r5, #0
   25758:	mov	r2, #0
   2575c:	mov	r4, #0
   25760:	ldr	pc, [r0, r7, lsl #2]
   25764:	andeq	r5, r2, r8, asr #15
   25768:	andeq	r5, r2, r0, asr #15
   2576c:			; <UNDEFINED> instruction: 0x000257b8
   25770:			; <UNDEFINED> instruction: 0x000257b0
   25774:	andeq	r5, r2, r4, lsr #15
   25778:	muleq	r2, r8, r7
   2577c:	andeq	r5, r2, r8, lsl #15
   25780:	andeq	r5, r2, r4, lsl #15
   25784:	ldrb	ip, [r8, #15]
   25788:	ldrb	r0, [r8, #14]
   2578c:	mov	lr, sl
   25790:	orr	r0, ip, r0, lsl #8
   25794:	mov	sl, r0
   25798:	ldrb	r0, [r8, #13]
   2579c:	mov	r6, lr
   257a0:	orr	sl, sl, r0, lsl #16
   257a4:	ldrb	r0, [r8, #12]
   257a8:	mov	r3, r6
   257ac:	orr	sl, sl, r0, lsl #24
   257b0:	ldrb	r0, [r8, #11]
   257b4:	orr	r5, r0, r3
   257b8:	ldrb	r0, [r8, #10]
   257bc:	orr	r2, r5, r0, lsl #8
   257c0:	ldrb	r0, [r8, #9]
   257c4:	orr	r4, r2, r0, lsl #16
   257c8:	ldrb	r2, [r1]
   257cc:	movw	r0, #28769	; 0x7061
   257d0:	movw	r3, #25958	; 0x6566
   257d4:	movt	r0, #27000	; 0x6978
   257d8:	movt	r3, #28786	; 0x7072
   257dc:	eor	r0, sl, r0
   257e0:	orr	r2, r4, r2, lsl #24
   257e4:	eor	r2, r2, r3
   257e8:	orrs	r0, r0, r2
   257ec:	bne	2590c <main@@Base+0x12614>
   257f0:	add	ip, r8, #16
   257f4:	mov	r0, #8
   257f8:	sub	sl, r9, ip
   257fc:	cmp	sl, #8
   25800:	movcc	r0, sl
   25804:	sub	r2, r0, #1
   25808:	cmp	r2, #7
   2580c:	bhi	25cc0 <main@@Base+0x129c8>
   25810:	add	r7, pc, #24
   25814:	mov	r0, #0
   25818:	mov	r1, #0
   2581c:	mov	r3, #0
   25820:	mov	r6, #0
   25824:	mov	r4, #0
   25828:	mov	r5, #0
   2582c:	ldr	pc, [r7, r2, lsl #2]
   25830:	andeq	r5, r2, r0, lsl #17
   25834:	andeq	r5, r2, r8, ror r8
   25838:	andeq	r5, r2, r0, ror r8
   2583c:	andeq	r5, r2, r8, ror #16
   25840:	andeq	r5, r2, r8, asr r8
   25844:	andeq	r5, r2, r0, asr r8
   25848:	andeq	r5, r2, r0, asr r8
   2584c:	andeq	r5, r2, r0, asr r8
   25850:	ldrb	r1, [r8, #21]
   25854:	lsl	r1, r1, #16
   25858:	ldrb	r2, [r8, #20]
   2585c:	mov	r3, r0
   25860:	orr	r1, r1, r2, lsl #24
   25864:	mov	r0, r1
   25868:	ldrb	r1, [r8, #19]
   2586c:	orr	r6, r1, r3
   25870:	ldrb	r1, [r8, #18]
   25874:	orr	r4, r6, r1, lsl #8
   25878:	ldrb	r1, [r8, #17]
   2587c:	orr	r5, r4, r1, lsl #16
   25880:	mov	r6, r0
   25884:	movw	r1, #0
   25888:	movw	r3, #26990	; 0x696e
   2588c:	bfc	r6, #0, #16
   25890:	movt	r1, #26418	; 0x6732
   25894:	movt	r3, #29299	; 0x7273
   25898:	eor	r2, r6, r1
   2589c:	ldrb	r1, [ip]
   258a0:	orr	r1, r5, r1, lsl #24
   258a4:	eor	r5, r1, r3
   258a8:	orrs	r2, r2, r5
   258ac:	bne	25918 <main@@Base+0x12620>
   258b0:	cmp	sl, #7
   258b4:	blt	25cc0 <main@@Base+0x129c8>
   258b8:	ldr	r2, [sp, #28]
   258bc:	mov	r1, r8
   258c0:	ldrb	r0, [r1, #22]!
   258c4:	ldr	r2, [r2]
   258c8:	cmp	r2, #0
   258cc:	beq	25980 <main@@Base+0x12688>
   258d0:	cmp	r0, #33	; 0x21
   258d4:	bcc	258e0 <main@@Base+0x125e8>
   258d8:	cmp	r0, #58	; 0x3a
   258dc:	bne	25cc0 <main@@Base+0x129c8>
   258e0:	ldr	r0, [sp, #28]
   258e4:	mov	r2, #0
   258e8:	str	r2, [r0]
   258ec:	ldr	r5, [sp, #24]
   258f0:	sub	r0, r9, r1
   258f4:	cmp	r0, #2
   258f8:	bge	2599c <main@@Base+0x126a4>
   258fc:	b	25a08 <main@@Base+0x12710>
   25900:	mov	r0, sl
   25904:	mov	r1, r8
   25908:	b	25ccc <main@@Base+0x129d4>
   2590c:	ldr	sl, [sp, #24]
   25910:	mov	r0, sl
   25914:	b	25ccc <main@@Base+0x129d4>
   25918:	cmp	sl, #6
   2591c:	blt	25af0 <main@@Base+0x127f8>
   25920:	movw	r2, #26990	; 0x696e
   25924:	and	r0, r0, #-16777216	; 0xff000000
   25928:	movt	r2, #29299	; 0x7273
   2592c:	eor	r0, r0, #1728053248	; 0x67000000
   25930:	eor	r1, r1, r2
   25934:	orrs	r0, r0, r1
   25938:	bne	25af0 <main@@Base+0x127f8>
   2593c:	ldr	r2, [sp, #28]
   25940:	mov	r1, r8
   25944:	ldrb	r0, [r1, #21]!
   25948:	ldr	r2, [r2]
   2594c:	cmp	r2, #0
   25950:	beq	259bc <main@@Base+0x126c4>
   25954:	cmp	r0, #33	; 0x21
   25958:	bcc	25964 <main@@Base+0x1266c>
   2595c:	cmp	r0, #58	; 0x3a
   25960:	bne	25af0 <main@@Base+0x127f8>
   25964:	ldr	r0, [sp, #28]
   25968:	mov	r2, #0
   2596c:	str	r2, [r0]
   25970:	sub	r0, r9, r1
   25974:	cmp	r0, #2
   25978:	bge	259d4 <main@@Base+0x126dc>
   2597c:	b	25a94 <main@@Base+0x1279c>
   25980:	cmp	r0, #34	; 0x22
   25984:	bne	25cc0 <main@@Base+0x129c8>
   25988:	add	r1, r8, #23
   2598c:	ldr	r5, [sp, #24]
   25990:	sub	r0, r9, r1
   25994:	cmp	r0, #2
   25998:	blt	25a08 <main@@Base+0x12710>
   2599c:	ldrb	r0, [r1]
   259a0:	cmp	r0, #32
   259a4:	bls	259f4 <main@@Base+0x126fc>
   259a8:	mov	r4, r1
   259ac:	mov	r6, ip
   259b0:	cmp	r4, r9
   259b4:	bne	25a2c <main@@Base+0x12734>
   259b8:	b	25a68 <main@@Base+0x12770>
   259bc:	cmp	r0, #34	; 0x22
   259c0:	bne	25af0 <main@@Base+0x127f8>
   259c4:	add	r1, r8, #22
   259c8:	sub	r0, r9, r1
   259cc:	cmp	r0, #2
   259d0:	blt	25a94 <main@@Base+0x1279c>
   259d4:	ldrb	r0, [r1]
   259d8:	cmp	r0, #32
   259dc:	bls	25a80 <main@@Base+0x12788>
   259e0:	mov	r4, r1
   259e4:	mov	r7, ip
   259e8:	cmp	r4, r9
   259ec:	bne	25ab8 <main@@Base+0x127c0>
   259f0:	b	25b58 <main@@Base+0x12860>
   259f4:	bne	25a08 <main@@Base+0x12710>
   259f8:	mov	r4, r1
   259fc:	ldrb	r0, [r4, #1]!
   25a00:	cmp	r0, #32
   25a04:	bhi	25a20 <main@@Base+0x12728>
   25a08:	mov	r0, r5
   25a0c:	mov	r2, r9
   25a10:	mov	r4, ip
   25a14:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25a18:	mov	ip, r4
   25a1c:	mov	r4, r0
   25a20:	mov	r6, ip
   25a24:	cmp	r4, r9
   25a28:	beq	25a68 <main@@Base+0x12770>
   25a2c:	ldrb	r0, [r4]
   25a30:	cmp	r0, #58	; 0x3a
   25a34:	bne	25a68 <main@@Base+0x12770>
   25a38:	add	r1, r4, #1
   25a3c:	sub	r0, r9, r1
   25a40:	cmp	r0, #2
   25a44:	blt	25c44 <main@@Base+0x1294c>
   25a48:	ldrb	r0, [r1]
   25a4c:	cmp	r0, #32
   25a50:	bls	25c34 <main@@Base+0x1293c>
   25a54:	mov	r4, r1
   25a58:	mov	ip, r6
   25a5c:	cmp	r6, r4
   25a60:	bne	25c60 <main@@Base+0x12968>
   25a64:	b	25cc0 <main@@Base+0x129c8>
   25a68:	mov	r0, r5
   25a6c:	mov	r1, r4
   25a70:	mov	r2, r9
   25a74:	mov	r3, #4
   25a78:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25a7c:	b	25c50 <main@@Base+0x12958>
   25a80:	bne	25a94 <main@@Base+0x1279c>
   25a84:	mov	r4, r1
   25a88:	ldrb	r0, [r4, #1]!
   25a8c:	cmp	r0, #32
   25a90:	bhi	25aac <main@@Base+0x127b4>
   25a94:	ldr	r0, [sp, #24]
   25a98:	mov	r2, r9
   25a9c:	mov	r4, ip
   25aa0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25aa4:	mov	ip, r4
   25aa8:	mov	r4, r0
   25aac:	mov	r7, ip
   25ab0:	cmp	r4, r9
   25ab4:	beq	25b58 <main@@Base+0x12860>
   25ab8:	ldrb	r0, [r4]
   25abc:	cmp	r0, #58	; 0x3a
   25ac0:	bne	25b58 <main@@Base+0x12860>
   25ac4:	add	r1, r4, #1
   25ac8:	sub	r0, r9, r1
   25acc:	cmp	r0, #2
   25ad0:	blt	25de0 <main@@Base+0x12ae8>
   25ad4:	ldrb	r0, [r1]
   25ad8:	cmp	r0, #32
   25adc:	bls	25dd0 <main@@Base+0x12ad8>
   25ae0:	mov	r4, r1
   25ae4:	mov	ip, r7
   25ae8:	cmp	r7, r4
   25aec:	bne	25dfc <main@@Base+0x12b04>
   25af0:	movw	r0, #0
   25af4:	movt	r0, #26418	; 0x6732
   25af8:	add	r0, r0, #65536	; 0x10000
   25afc:	eor	r0, r6, r0
   25b00:	orrs	r0, r0, r5
   25b04:	bne	25cc0 <main@@Base+0x129c8>
   25b08:	cmp	sl, #7
   25b0c:	ldr	sl, [sp, #24]
   25b10:	blt	25cc4 <main@@Base+0x129cc>
   25b14:	ldr	r2, [sp, #28]
   25b18:	mov	r1, r8
   25b1c:	ldrb	r0, [r1, #22]!
   25b20:	ldr	r2, [r2]
   25b24:	cmp	r2, #0
   25b28:	beq	25b70 <main@@Base+0x12878>
   25b2c:	cmp	r0, #33	; 0x21
   25b30:	bcc	25b3c <main@@Base+0x12844>
   25b34:	cmp	r0, #58	; 0x3a
   25b38:	bne	25cc4 <main@@Base+0x129cc>
   25b3c:	ldr	r0, [sp, #28]
   25b40:	mov	r2, #0
   25b44:	str	r2, [r0]
   25b48:	sub	r0, r9, r1
   25b4c:	cmp	r0, #2
   25b50:	bge	25b88 <main@@Base+0x12890>
   25b54:	b	25bbc <main@@Base+0x128c4>
   25b58:	ldr	r0, [sp, #24]
   25b5c:	mov	r1, r4
   25b60:	mov	r2, r9
   25b64:	mov	r3, #4
   25b68:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25b6c:	b	25dec <main@@Base+0x12af4>
   25b70:	cmp	r0, #34	; 0x22
   25b74:	bne	25cc4 <main@@Base+0x129cc>
   25b78:	add	r1, r8, #23
   25b7c:	sub	r0, r9, r1
   25b80:	cmp	r0, #2
   25b84:	blt	25bbc <main@@Base+0x128c4>
   25b88:	ldrb	r0, [r1]
   25b8c:	cmp	r0, #32
   25b90:	bls	25ba8 <main@@Base+0x128b0>
   25b94:	mov	r4, r1
   25b98:	mov	r5, ip
   25b9c:	cmp	r4, r9
   25ba0:	bne	25be0 <main@@Base+0x128e8>
   25ba4:	b	25c1c <main@@Base+0x12924>
   25ba8:	bne	25bbc <main@@Base+0x128c4>
   25bac:	mov	r4, r1
   25bb0:	ldrb	r0, [r4, #1]!
   25bb4:	cmp	r0, #32
   25bb8:	bhi	25bd4 <main@@Base+0x128dc>
   25bbc:	mov	r0, sl
   25bc0:	mov	r2, r9
   25bc4:	mov	r4, ip
   25bc8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25bcc:	mov	ip, r4
   25bd0:	mov	r4, r0
   25bd4:	mov	r5, ip
   25bd8:	cmp	r4, r9
   25bdc:	beq	25c1c <main@@Base+0x12924>
   25be0:	ldrb	r0, [r4]
   25be4:	cmp	r0, #58	; 0x3a
   25be8:	bne	25c1c <main@@Base+0x12924>
   25bec:	add	r1, r4, #1
   25bf0:	sub	r0, r9, r1
   25bf4:	cmp	r0, #2
   25bf8:	blt	27ed8 <main@@Base+0x14be0>
   25bfc:	ldrb	r0, [r1]
   25c00:	cmp	r0, #32
   25c04:	bls	27ec8 <main@@Base+0x14bd0>
   25c08:	mov	r4, r1
   25c0c:	mov	ip, r5
   25c10:	cmp	r5, r4
   25c14:	bne	27ef4 <main@@Base+0x14bfc>
   25c18:	b	25cc4 <main@@Base+0x129cc>
   25c1c:	mov	r0, sl
   25c20:	mov	r1, r4
   25c24:	mov	r2, r9
   25c28:	mov	r3, #4
   25c2c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25c30:	b	27ee4 <main@@Base+0x14bec>
   25c34:	bne	25c44 <main@@Base+0x1294c>
   25c38:	ldrb	r0, [r4, #2]!
   25c3c:	cmp	r0, #32
   25c40:	bhi	25c54 <main@@Base+0x1295c>
   25c44:	mov	r0, r5
   25c48:	mov	r2, r9
   25c4c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25c50:	mov	r4, r0
   25c54:	mov	ip, r6
   25c58:	cmp	r6, r4
   25c5c:	beq	25cc0 <main@@Base+0x129c8>
   25c60:	ldr	sl, [sp, #24]
   25c64:	mov	r1, #2
   25c68:	ldr	r0, [sl]
   25c6c:	bl	2cd8c <flatcc_builder_start_table@@Base>
   25c70:	cmp	r0, #0
   25c74:	bne	28c68 <main@@Base+0x15970>
   25c78:	cmp	r4, r9
   25c7c:	beq	25da4 <main@@Base+0x12aac>
   25c80:	ldrb	r0, [r4]
   25c84:	cmp	r0, #123	; 0x7b
   25c88:	bne	25da4 <main@@Base+0x12aac>
   25c8c:	ldr	r5, [sp, #32]
   25c90:	add	r1, r4, #1
   25c94:	sub	r0, r9, r1
   25c98:	cmp	r0, #2
   25c9c:	blt	25ec0 <main@@Base+0x12bc8>
   25ca0:	ldrb	r0, [r1]
   25ca4:	cmp	r0, #32
   25ca8:	bls	25eb0 <main@@Base+0x12bb8>
   25cac:	mov	r4, r1
   25cb0:	cmp	r4, r9
   25cb4:	mov	r2, r9
   25cb8:	bne	25edc <main@@Base+0x12be4>
   25cbc:	b	25f1c <main@@Base+0x12c24>
   25cc0:	ldr	sl, [sp, #24]
   25cc4:	mov	r0, sl
   25cc8:	mov	r1, ip
   25ccc:	mov	r2, r9
   25cd0:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   25cd4:	ldr	r5, [sp, #32]
   25cd8:	mov	r4, r0
   25cdc:	sub	r0, r9, r4
   25ce0:	cmp	r0, #2
   25ce4:	blt	25d58 <main@@Base+0x12a60>
   25ce8:	ldrb	r0, [r4]
   25cec:	cmp	r0, #32
   25cf0:	bls	25d44 <main@@Base+0x12a4c>
   25cf4:	mov	r2, r4
   25cf8:	cmp	r2, r9
   25cfc:	beq	28bc0 <main@@Base+0x158c8>
   25d00:	ldrb	r0, [r2]
   25d04:	cmp	r0, #44	; 0x2c
   25d08:	bne	28bd4 <main@@Base+0x158dc>
   25d0c:	add	r1, r2, #1
   25d10:	sub	r0, r9, r1
   25d14:	cmp	r0, #2
   25d18:	blt	25d88 <main@@Base+0x12a90>
   25d1c:	ldrb	r0, [r1]
   25d20:	cmp	r0, #32
   25d24:	bls	25d78 <main@@Base+0x12a80>
   25d28:	mov	r2, r1
   25d2c:	cmp	r2, r9
   25d30:	beq	28c20 <main@@Base+0x15928>
   25d34:	ldrb	r0, [r2]
   25d38:	cmp	r0, #125	; 0x7d
   25d3c:	bne	255f0 <main@@Base+0x122f8>
   25d40:	b	28bdc <main@@Base+0x158e4>
   25d44:	bne	25d58 <main@@Base+0x12a60>
   25d48:	mov	r2, r4
   25d4c:	ldrb	r0, [r2, #1]!
   25d50:	cmp	r0, #32
   25d54:	bhi	25d6c <main@@Base+0x12a74>
   25d58:	mov	r0, sl
   25d5c:	mov	r1, r4
   25d60:	mov	r2, r9
   25d64:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25d68:	mov	r2, r0
   25d6c:	cmp	r2, r9
   25d70:	bne	25d00 <main@@Base+0x12a08>
   25d74:	b	28bc0 <main@@Base+0x158c8>
   25d78:	bne	25d88 <main@@Base+0x12a90>
   25d7c:	ldrb	r0, [r2, #2]!
   25d80:	cmp	r0, #32
   25d84:	bhi	25d98 <main@@Base+0x12aa0>
   25d88:	mov	r0, sl
   25d8c:	mov	r2, r9
   25d90:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25d94:	mov	r2, r0
   25d98:	cmp	r2, r9
   25d9c:	bne	25d34 <main@@Base+0x12a3c>
   25da0:	b	28c20 <main@@Base+0x15928>
   25da4:	mov	r0, sl
   25da8:	mov	r1, r4
   25dac:	mov	r2, r9
   25db0:	mov	r3, #21
   25db4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25db8:	ldr	r5, [sp, #32]
   25dbc:	mov	r4, r0
   25dc0:	ldr	r0, [sl, #24]
   25dc4:	cmp	r0, #0
   25dc8:	beq	28aa4 <main@@Base+0x157ac>
   25dcc:	b	28c68 <main@@Base+0x15970>
   25dd0:	bne	25de0 <main@@Base+0x12ae8>
   25dd4:	ldrb	r0, [r4, #2]!
   25dd8:	cmp	r0, #32
   25ddc:	bhi	25df0 <main@@Base+0x12af8>
   25de0:	ldr	r0, [sp, #24]
   25de4:	mov	r2, r9
   25de8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25dec:	mov	r4, r0
   25df0:	mov	ip, r7
   25df4:	cmp	r7, r4
   25df8:	beq	25af0 <main@@Base+0x127f8>
   25dfc:	ldr	sl, [sp, #24]
   25e00:	mov	r1, #9
   25e04:	ldr	r0, [sl]
   25e08:	bl	2cd8c <flatcc_builder_start_table@@Base>
   25e0c:	cmp	r0, #0
   25e10:	bne	28c68 <main@@Base+0x15970>
   25e14:	cmp	r4, r9
   25e18:	beq	25e5c <main@@Base+0x12b64>
   25e1c:	ldrb	r0, [r4]
   25e20:	cmp	r0, #123	; 0x7b
   25e24:	bne	25e5c <main@@Base+0x12b64>
   25e28:	ldr	r5, [sp, #32]
   25e2c:	add	r1, r4, #1
   25e30:	sub	r0, r9, r1
   25e34:	cmp	r0, #2
   25e38:	blt	267a4 <main@@Base+0x134ac>
   25e3c:	ldrb	r0, [r1]
   25e40:	cmp	r0, #32
   25e44:	bls	26794 <main@@Base+0x1349c>
   25e48:	mov	r4, r1
   25e4c:	cmp	r4, r9
   25e50:	mov	r2, r9
   25e54:	bne	267c0 <main@@Base+0x134c8>
   25e58:	b	26800 <main@@Base+0x13508>
   25e5c:	mov	r0, sl
   25e60:	mov	r1, r4
   25e64:	mov	r2, r9
   25e68:	mov	r3, #21
   25e6c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25e70:	ldr	r5, [sp, #32]
   25e74:	mov	r4, r0
   25e78:	ldr	r0, [sl, #24]
   25e7c:	cmp	r0, #0
   25e80:	bne	28c68 <main@@Base+0x15970>
   25e84:	ldr	r0, [sl]
   25e88:	bl	2d734 <flatcc_builder_end_table@@Base>
   25e8c:	cmp	r0, #0
   25e90:	beq	28c68 <main@@Base+0x15970>
   25e94:	mov	r7, r0
   25e98:	ldr	r0, [sl]
   25e9c:	mov	r1, #0
   25ea0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   25ea4:	cmp	r0, #0
   25ea8:	bne	28bac <main@@Base+0x158b4>
   25eac:	b	25518 <main@@Base+0x12220>
   25eb0:	bne	25ec0 <main@@Base+0x12bc8>
   25eb4:	ldrb	r0, [r4, #2]!
   25eb8:	cmp	r0, #32
   25ebc:	bhi	25ed0 <main@@Base+0x12bd8>
   25ec0:	mov	r0, sl
   25ec4:	mov	r2, r9
   25ec8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   25ecc:	mov	r4, r0
   25ed0:	cmp	r4, r9
   25ed4:	mov	r2, r9
   25ed8:	beq	25f1c <main@@Base+0x12c24>
   25edc:	ldrb	r0, [r4]
   25ee0:	cmp	r0, #125	; 0x7d
   25ee4:	bne	25f18 <main@@Base+0x12c20>
   25ee8:	add	r1, r4, #1
   25eec:	sub	r0, r9, r1
   25ef0:	cmp	r0, #2
   25ef4:	blt	28a88 <main@@Base+0x15790>
   25ef8:	ldrb	r0, [r1]
   25efc:	cmp	r0, #32
   25f00:	bhi	27fb4 <main@@Base+0x14cbc>
   25f04:	bne	28a88 <main@@Base+0x15790>
   25f08:	ldrb	r0, [r4, #2]!
   25f0c:	cmp	r0, #32
   25f10:	bls	28a88 <main@@Base+0x15790>
   25f14:	b	28a98 <main@@Base+0x157a0>
   25f18:	mov	r2, r4
   25f1c:	cmp	r2, r9
   25f20:	mov	r1, r9
   25f24:	beq	25f7c <main@@Base+0x12c84>
   25f28:	ldrb	r0, [r2]
   25f2c:	cmp	r0, #46	; 0x2e
   25f30:	beq	25f50 <main@@Base+0x12c58>
   25f34:	cmp	r0, #34	; 0x22
   25f38:	bne	25f6c <main@@Base+0x12c74>
   25f3c:	ldr	r0, [sp, #28]
   25f40:	mov	r1, #0
   25f44:	str	r1, [r0]
   25f48:	add	r1, r2, #1
   25f4c:	b	25f7c <main@@Base+0x12c84>
   25f50:	mov	r1, r2
   25f54:	mov	r0, sl
   25f58:	mov	r2, r9
   25f5c:	mov	r3, #5
   25f60:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   25f64:	mov	r1, r0
   25f68:	b	25f7c <main@@Base+0x12c84>
   25f6c:	ldr	r0, [sp, #28]
   25f70:	mov	r1, #1
   25f74:	str	r1, [r0]
   25f78:	mov	r1, r2
   25f7c:	sub	r0, r9, r1
   25f80:	mov	r2, #8
   25f84:	cmp	r0, #8
   25f88:	movcs	r0, r2
   25f8c:	sub	r7, r0, #1
   25f90:	cmp	r7, #7
   25f94:	bhi	26180 <main@@Base+0x12e88>
   25f98:	add	r0, pc, #32
   25f9c:	mov	r8, #0
   25fa0:	mov	ip, #0
   25fa4:	mov	lr, #0
   25fa8:	mov	r6, #0
   25fac:	mov	r3, #0
   25fb0:	mov	r5, #0
   25fb4:	mov	r2, #0
   25fb8:	mov	r4, #0
   25fbc:	ldr	pc, [r0, r7, lsl #2]
   25fc0:	andeq	r6, r2, r4, lsr #32
   25fc4:	andeq	r6, r2, ip, lsl r0
   25fc8:	andeq	r6, r2, r4, lsl r0
   25fcc:	andeq	r6, r2, ip
   25fd0:	andeq	r6, r2, r0
   25fd4:	strdeq	r5, [r2], -r4
   25fd8:	andeq	r5, r2, r4, ror #31
   25fdc:	andeq	r5, r2, r0, ror #31
   25fe0:	ldrb	ip, [r1, #7]
   25fe4:	ldrb	r0, [r1, #6]
   25fe8:	mov	lr, r8
   25fec:	orr	r0, ip, r0, lsl #8
   25ff0:	mov	r8, r0
   25ff4:	ldrb	r0, [r1, #5]
   25ff8:	mov	r6, lr
   25ffc:	orr	r8, r8, r0, lsl #16
   26000:	ldrb	r0, [r1, #4]
   26004:	mov	r3, r6
   26008:	orr	r8, r8, r0, lsl #24
   2600c:	ldrb	r0, [r1, #3]
   26010:	orr	r5, r0, r3
   26014:	ldrb	r0, [r1, #2]
   26018:	orr	r2, r5, r0, lsl #8
   2601c:	ldrb	r0, [r1, #1]
   26020:	orr	r4, r2, r0, lsl #16
   26024:	ldrb	r2, [r1]
   26028:	movw	r0, #25186	; 0x6262
   2602c:	movw	r3, #24929	; 0x6161
   26030:	movt	r0, #24418	; 0x5f62
   26034:	movt	r3, #24929	; 0x6161
   26038:	eor	r0, r8, r0
   2603c:	orr	r2, r4, r2, lsl #24
   26040:	eor	r2, r2, r3
   26044:	orrs	r0, r0, r2
   26048:	bne	26180 <main@@Base+0x12e88>
   2604c:	add	r4, r1, #8
   26050:	mov	r0, #8
   26054:	sub	lr, r9, r4
   26058:	cmp	lr, #8
   2605c:	movcc	r0, lr
   26060:	sub	r6, r0, #1
   26064:	cmp	r6, #7
   26068:	bhi	261f0 <main@@Base+0x12ef8>
   2606c:	str	r4, [sp, #8]
   26070:	add	r8, pc, #32
   26074:	mov	r2, #0
   26078:	mov	ip, #0
   2607c:	mov	sl, #0
   26080:	mov	r5, #0
   26084:	mov	r7, #0
   26088:	mov	r4, #0
   2608c:	mov	r0, #0
   26090:	mov	r3, #0
   26094:	ldr	pc, [r8, r6, lsl #2]
   26098:	strdeq	r6, [r2], -ip
   2609c:	strdeq	r6, [r2], -r4
   260a0:	andeq	r6, r2, ip, ror #1
   260a4:	andeq	r6, r2, r4, ror #1
   260a8:	ldrdeq	r6, [r2], -r8
   260ac:	andeq	r6, r2, ip, asr #1
   260b0:	strheq	r6, [r2], -ip
   260b4:	strheq	r6, [r2], -r8
   260b8:	ldrb	ip, [r1, #15]
   260bc:	ldrb	r0, [r1, #14]
   260c0:	mov	sl, r2
   260c4:	orr	r0, ip, r0, lsl #8
   260c8:	mov	r2, r0
   260cc:	ldrb	r0, [r1, #13]
   260d0:	mov	r5, sl
   260d4:	orr	r2, r2, r0, lsl #16
   260d8:	ldrb	r0, [r1, #12]
   260dc:	mov	r7, r5
   260e0:	orr	r2, r2, r0, lsl #24
   260e4:	ldrb	r0, [r1, #11]
   260e8:	orr	r4, r0, r7
   260ec:	ldrb	r0, [r1, #10]
   260f0:	orr	r0, r4, r0, lsl #8
   260f4:	ldrb	r3, [r1, #9]
   260f8:	orr	r3, r0, r3, lsl #16
   260fc:	ldr	r4, [sp, #8]
   26100:	movw	r7, #29440	; 0x7300
   26104:	bic	r0, r2, #255	; 0xff
   26108:	movt	r7, #25968	; 0x6570
   2610c:	eor	r7, r0, r7
   26110:	ldrb	r0, [r4]
   26114:	orr	r0, r3, r0, lsl #24
   26118:	movw	r3, #29556	; 0x7374
   2611c:	movt	r3, #25183	; 0x625f
   26120:	eor	r0, r0, r3
   26124:	orrs	r3, r7, r0
   26128:	bne	26188 <main@@Base+0x12e90>
   2612c:	ldr	sl, [sp, #24]
   26130:	ldr	r5, [sp, #32]
   26134:	cmp	lr, #8
   26138:	blt	265c4 <main@@Base+0x132cc>
   2613c:	ldr	r3, [sp, #28]
   26140:	mov	r2, r1
   26144:	ldrb	r0, [r2, #15]!
   26148:	ldr	r3, [r3]
   2614c:	cmp	r3, #0
   26150:	beq	26218 <main@@Base+0x12f20>
   26154:	cmp	r0, #33	; 0x21
   26158:	bcc	26164 <main@@Base+0x12e6c>
   2615c:	cmp	r0, #58	; 0x3a
   26160:	bne	265c4 <main@@Base+0x132cc>
   26164:	ldr	r0, [sp, #28]
   26168:	mov	r1, #0
   2616c:	str	r1, [r0]
   26170:	sub	r0, r9, r2
   26174:	cmp	r0, #2
   26178:	bge	26230 <main@@Base+0x12f38>
   2617c:	b	26294 <main@@Base+0x12f9c>
   26180:	mov	r0, sl
   26184:	b	261f8 <main@@Base+0x12f00>
   26188:	movw	r3, #29791	; 0x745f
   2618c:	ldr	sl, [sp, #24]
   26190:	movt	r3, #24946	; 0x6172
   26194:	eor	r2, r2, r3
   26198:	orrs	r0, r2, r0
   2619c:	bne	261f0 <main@@Base+0x12ef8>
   261a0:	ldr	r5, [sp, #32]
   261a4:	cmp	lr, #9
   261a8:	blt	265c4 <main@@Base+0x132cc>
   261ac:	ldr	r3, [sp, #28]
   261b0:	mov	r2, r1
   261b4:	ldrb	r0, [r2, #16]!
   261b8:	ldr	r3, [r3]
   261bc:	cmp	r3, #0
   261c0:	beq	2624c <main@@Base+0x12f54>
   261c4:	cmp	r0, #33	; 0x21
   261c8:	bcc	261d4 <main@@Base+0x12edc>
   261cc:	cmp	r0, #58	; 0x3a
   261d0:	bne	265c4 <main@@Base+0x132cc>
   261d4:	ldr	r0, [sp, #28]
   261d8:	mov	r1, #0
   261dc:	str	r1, [r0]
   261e0:	sub	r0, r9, r2
   261e4:	cmp	r0, #2
   261e8:	bge	26264 <main@@Base+0x12f6c>
   261ec:	b	26314 <main@@Base+0x1301c>
   261f0:	mov	r0, sl
   261f4:	mov	r1, r4
   261f8:	mov	r2, r9
   261fc:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   26200:	ldr	r5, [sp, #32]
   26204:	mov	r4, r0
   26208:	sub	r0, r9, r4
   2620c:	cmp	r0, #2
   26210:	bge	265e4 <main@@Base+0x132ec>
   26214:	b	26614 <main@@Base+0x1331c>
   26218:	cmp	r0, #34	; 0x22
   2621c:	bne	265c4 <main@@Base+0x132cc>
   26220:	add	r2, r1, #16
   26224:	sub	r0, r9, r2
   26228:	cmp	r0, #2
   2622c:	blt	26294 <main@@Base+0x12f9c>
   26230:	ldrb	r0, [r2]
   26234:	cmp	r0, #32
   26238:	bls	26280 <main@@Base+0x12f88>
   2623c:	mov	r7, r2
   26240:	cmp	r7, r9
   26244:	bne	262b0 <main@@Base+0x12fb8>
   26248:	b	262e8 <main@@Base+0x12ff0>
   2624c:	cmp	r0, #34	; 0x22
   26250:	bne	265c4 <main@@Base+0x132cc>
   26254:	add	r2, r1, #17
   26258:	sub	r0, r9, r2
   2625c:	cmp	r0, #2
   26260:	blt	26314 <main@@Base+0x1301c>
   26264:	ldrb	r0, [r2]
   26268:	cmp	r0, #32
   2626c:	bls	26300 <main@@Base+0x13008>
   26270:	mov	r7, r2
   26274:	cmp	r7, r9
   26278:	bne	26330 <main@@Base+0x13038>
   2627c:	b	26374 <main@@Base+0x1307c>
   26280:	bne	26294 <main@@Base+0x12f9c>
   26284:	mov	r7, r2
   26288:	ldrb	r0, [r7, #1]!
   2628c:	cmp	r0, #32
   26290:	bhi	262a8 <main@@Base+0x12fb0>
   26294:	mov	r1, r2
   26298:	mov	r0, sl
   2629c:	mov	r2, r9
   262a0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   262a4:	mov	r7, r0
   262a8:	cmp	r7, r9
   262ac:	beq	262e8 <main@@Base+0x12ff0>
   262b0:	ldrb	r0, [r7]
   262b4:	cmp	r0, #58	; 0x3a
   262b8:	bne	262e8 <main@@Base+0x12ff0>
   262bc:	add	r1, r7, #1
   262c0:	sub	r0, r9, r1
   262c4:	cmp	r0, #2
   262c8:	blt	2639c <main@@Base+0x130a4>
   262cc:	ldrb	r0, [r1]
   262d0:	cmp	r0, #32
   262d4:	bls	2638c <main@@Base+0x13094>
   262d8:	mov	r7, r1
   262dc:	cmp	r4, r7
   262e0:	bne	263b4 <main@@Base+0x130bc>
   262e4:	b	265c4 <main@@Base+0x132cc>
   262e8:	mov	r0, sl
   262ec:	mov	r1, r7
   262f0:	mov	r2, r9
   262f4:	mov	r3, #4
   262f8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   262fc:	b	263a8 <main@@Base+0x130b0>
   26300:	bne	26314 <main@@Base+0x1301c>
   26304:	mov	r7, r2
   26308:	ldrb	r0, [r7, #1]!
   2630c:	cmp	r0, #32
   26310:	bhi	26328 <main@@Base+0x13030>
   26314:	mov	r1, r2
   26318:	mov	r0, sl
   2631c:	mov	r2, r9
   26320:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26324:	mov	r7, r0
   26328:	cmp	r7, r9
   2632c:	beq	26374 <main@@Base+0x1307c>
   26330:	ldrb	r0, [r7]
   26334:	cmp	r0, #58	; 0x3a
   26338:	bne	26374 <main@@Base+0x1307c>
   2633c:	add	r1, r7, #1
   26340:	sub	r0, r9, r1
   26344:	cmp	r0, #2
   26348:	blt	26538 <main@@Base+0x13240>
   2634c:	ldrb	r0, [r1]
   26350:	cmp	r0, #32
   26354:	bls	2651c <main@@Base+0x13224>
   26358:	ldr	sl, [sp, #24]
   2635c:	ldr	r5, [sp, #32]
   26360:	ldr	r4, [sp, #8]
   26364:	mov	r7, r1
   26368:	cmp	r4, r7
   2636c:	bne	26550 <main@@Base+0x13258>
   26370:	b	265c4 <main@@Base+0x132cc>
   26374:	mov	r0, sl
   26378:	mov	r1, r7
   2637c:	mov	r2, r9
   26380:	mov	r3, #4
   26384:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   26388:	b	26544 <main@@Base+0x1324c>
   2638c:	bne	2639c <main@@Base+0x130a4>
   26390:	ldrb	r0, [r7, #2]!
   26394:	cmp	r0, #32
   26398:	bhi	263ac <main@@Base+0x130b4>
   2639c:	mov	r0, sl
   263a0:	mov	r2, r9
   263a4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   263a8:	mov	r7, r0
   263ac:	cmp	r4, r7
   263b0:	beq	265c4 <main@@Base+0x132cc>
   263b4:	mov	r6, #0
   263b8:	cmp	r7, r9
   263bc:	str	r6, [fp, #-36]	; 0xffffffdc
   263c0:	str	r6, [fp, #-40]	; 0xffffffd8
   263c4:	str	r6, [sp, #44]	; 0x2c
   263c8:	str	r6, [sp, #40]	; 0x28
   263cc:	str	r6, [fp, #-44]	; 0xffffffd4
   263d0:	beq	2642c <main@@Base+0x13134>
   263d4:	sub	r0, fp, #40	; 0x28
   263d8:	mov	r1, r7
   263dc:	mov	r2, r9
   263e0:	sub	r3, fp, #44	; 0x2c
   263e4:	str	r0, [sp]
   263e8:	mov	r0, sl
   263ec:	bl	323e8 <flatcc_json_parser_integer@@Base>
   263f0:	cmp	r0, r7
   263f4:	beq	26440 <main@@Base+0x13148>
   263f8:	sub	r8, fp, #44	; 0x2c
   263fc:	mov	r4, r0
   26400:	ldm	r8, {r0, r6, r8}
   26404:	cmp	r0, #0
   26408:	beq	26458 <main@@Base+0x13160>
   2640c:	subs	r0, r6, #1
   26410:	sbcs	r0, r8, #-2147483648	; 0x80000000
   26414:	bcc	2648c <main@@Base+0x13194>
   26418:	mov	r0, sl
   2641c:	mov	r1, r4
   26420:	mov	r2, r9
   26424:	mov	r3, #8
   26428:	b	26470 <main@@Base+0x13178>
   2642c:	mov	r8, #0
   26430:	mov	r4, r9
   26434:	cmp	r7, r4
   26438:	bne	264d8 <main@@Base+0x131e0>
   2643c:	b	264a4 <main@@Base+0x131ac>
   26440:	mov	r6, #0
   26444:	mov	r8, #0
   26448:	mov	r4, r7
   2644c:	cmp	r7, r4
   26450:	bne	264d8 <main@@Base+0x131e0>
   26454:	b	264a4 <main@@Base+0x131ac>
   26458:	cmn	r8, #1
   2645c:	bgt	26494 <main@@Base+0x1319c>
   26460:	mov	r0, sl
   26464:	mov	r1, r4
   26468:	mov	r2, r9
   2646c:	mov	r3, #7
   26470:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   26474:	mov	r4, r0
   26478:	mov	r6, #0
   2647c:	mov	r8, #0
   26480:	cmp	r7, r4
   26484:	bne	264d8 <main@@Base+0x131e0>
   26488:	b	264a4 <main@@Base+0x131ac>
   2648c:	rsbs	r6, r6, #0
   26490:	rsc	r8, r8, #0
   26494:	str	r6, [sp, #40]	; 0x28
   26498:	str	r8, [sp, #44]	; 0x2c
   2649c:	cmp	r7, r4
   264a0:	bne	264d8 <main@@Base+0x131e0>
   264a4:	ldr	r3, [sp, #12]
   264a8:	add	r0, sp, #40	; 0x28
   264ac:	mov	r1, r7
   264b0:	mov	r2, r9
   264b4:	str	r0, [sp]
   264b8:	mov	r0, sl
   264bc:	bl	240d0 <main@@Base+0x10dd8>
   264c0:	mov	r4, r0
   264c4:	cmp	r0, r7
   264c8:	cmpne	r4, r9
   264cc:	beq	28c64 <main@@Base+0x1596c>
   264d0:	ldr	r6, [sp, #40]	; 0x28
   264d4:	ldr	r8, [sp, #44]	; 0x2c
   264d8:	orrs	r0, r6, r8
   264dc:	bne	264ec <main@@Base+0x131f4>
   264e0:	ldrb	r0, [sl, #8]
   264e4:	tst	r0, #2
   264e8:	beq	265d8 <main@@Base+0x132e0>
   264ec:	ldr	r0, [sl]
   264f0:	mov	r1, #0
   264f4:	mov	r2, #8
   264f8:	mov	r3, #8
   264fc:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   26500:	cmp	r0, #0
   26504:	beq	28c64 <main@@Base+0x1596c>
   26508:	stm	r0, {r6, r8}
   2650c:	sub	r0, r9, r4
   26510:	cmp	r0, #2
   26514:	bge	265e4 <main@@Base+0x132ec>
   26518:	b	26614 <main@@Base+0x1331c>
   2651c:	ldr	sl, [sp, #24]
   26520:	ldr	r5, [sp, #32]
   26524:	ldr	r4, [sp, #8]
   26528:	bne	26538 <main@@Base+0x13240>
   2652c:	ldrb	r0, [r7, #2]!
   26530:	cmp	r0, #32
   26534:	bhi	26548 <main@@Base+0x13250>
   26538:	mov	r0, sl
   2653c:	mov	r2, r9
   26540:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26544:	mov	r7, r0
   26548:	cmp	r4, r7
   2654c:	beq	265c4 <main@@Base+0x132cc>
   26550:	mov	r6, #0
   26554:	cmp	r7, r9
   26558:	str	r6, [fp, #-36]	; 0xffffffdc
   2655c:	str	r6, [fp, #-40]	; 0xffffffd8
   26560:	str	r6, [fp, #-44]	; 0xffffffd4
   26564:	str	r6, [sp, #40]	; 0x28
   26568:	beq	266a0 <main@@Base+0x133a8>
   2656c:	sub	r0, fp, #40	; 0x28
   26570:	mov	r1, r7
   26574:	mov	r2, r9
   26578:	add	r3, sp, #40	; 0x28
   2657c:	str	r0, [sp]
   26580:	mov	r0, sl
   26584:	bl	323e8 <flatcc_json_parser_integer@@Base>
   26588:	cmp	r0, r7
   2658c:	beq	266b0 <main@@Base+0x133b8>
   26590:	mov	r4, r0
   26594:	ldr	r0, [sp, #40]	; 0x28
   26598:	cmp	r0, #0
   2659c:	beq	266c0 <main@@Base+0x133c8>
   265a0:	mov	r0, sl
   265a4:	mov	r1, r4
   265a8:	mov	r2, r9
   265ac:	mov	r3, #8
   265b0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   265b4:	mov	r4, r0
   265b8:	cmp	r7, r4
   265bc:	bne	26750 <main@@Base+0x13458>
   265c0:	b	26710 <main@@Base+0x13418>
   265c4:	mov	r0, sl
   265c8:	mov	r1, r4
   265cc:	mov	r2, r9
   265d0:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   265d4:	mov	r4, r0
   265d8:	sub	r0, r9, r4
   265dc:	cmp	r0, #2
   265e0:	blt	26614 <main@@Base+0x1331c>
   265e4:	ldrb	r0, [r4]
   265e8:	cmp	r0, #32
   265ec:	bls	26600 <main@@Base+0x13308>
   265f0:	mov	r2, r4
   265f4:	cmp	r2, r9
   265f8:	bne	26630 <main@@Base+0x13338>
   265fc:	b	27f7c <main@@Base+0x14c84>
   26600:	bne	26614 <main@@Base+0x1331c>
   26604:	mov	r2, r4
   26608:	ldrb	r0, [r2, #1]!
   2660c:	cmp	r0, #32
   26610:	bhi	26628 <main@@Base+0x13330>
   26614:	mov	r0, sl
   26618:	mov	r1, r4
   2661c:	mov	r2, r9
   26620:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26624:	mov	r2, r0
   26628:	cmp	r2, r9
   2662c:	beq	27f7c <main@@Base+0x14c84>
   26630:	ldrb	r0, [r2]
   26634:	cmp	r0, #44	; 0x2c
   26638:	bne	27f90 <main@@Base+0x14c98>
   2663c:	add	r1, r2, #1
   26640:	sub	r0, r9, r1
   26644:	cmp	r0, #2
   26648:	blt	26678 <main@@Base+0x13380>
   2664c:	ldrb	r0, [r1]
   26650:	cmp	r0, #32
   26654:	bls	26668 <main@@Base+0x13370>
   26658:	mov	r2, r1
   2665c:	cmp	r2, r9
   26660:	bne	26690 <main@@Base+0x13398>
   26664:	b	27fc8 <main@@Base+0x14cd0>
   26668:	bne	26678 <main@@Base+0x13380>
   2666c:	ldrb	r0, [r2, #2]!
   26670:	cmp	r0, #32
   26674:	bhi	26688 <main@@Base+0x13390>
   26678:	mov	r0, sl
   2667c:	mov	r2, r9
   26680:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26684:	mov	r2, r0
   26688:	cmp	r2, r9
   2668c:	beq	27fc8 <main@@Base+0x14cd0>
   26690:	ldrb	r0, [r2]
   26694:	cmp	r0, #125	; 0x7d
   26698:	bne	25f1c <main@@Base+0x12c24>
   2669c:	b	27f98 <main@@Base+0x14ca0>
   266a0:	mov	r4, r9
   266a4:	cmp	r7, r4
   266a8:	bne	26750 <main@@Base+0x13458>
   266ac:	b	26710 <main@@Base+0x13418>
   266b0:	mov	r4, r7
   266b4:	cmp	r7, r4
   266b8:	bne	26750 <main@@Base+0x13458>
   266bc:	b	26710 <main@@Base+0x13418>
   266c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   266c4:	cmp	r0, #0
   266c8:	beq	266f8 <main@@Base+0x13400>
   266cc:	ldr	sl, [sp, #24]
   266d0:	mov	r1, r4
   266d4:	mov	r2, r9
   266d8:	mov	r3, #7
   266dc:	mov	r0, sl
   266e0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   266e4:	mov	r4, r0
   266e8:	ldr	r5, [sp, #32]
   266ec:	cmp	r7, r4
   266f0:	bne	26750 <main@@Base+0x13458>
   266f4:	b	26710 <main@@Base+0x13418>
   266f8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   266fc:	ldr	sl, [sp, #24]
   26700:	str	r6, [fp, #-44]	; 0xffffffd4
   26704:	ldr	r5, [sp, #32]
   26708:	cmp	r7, r4
   2670c:	bne	26750 <main@@Base+0x13458>
   26710:	sub	r0, fp, #44	; 0x2c
   26714:	mov	r1, r7
   26718:	mov	r2, r9
   2671c:	str	r0, [sp]
   26720:	movw	r0, #33152	; 0x8180
   26724:	movt	r0, #4
   26728:	add	r3, r0, #108	; 0x6c
   2672c:	mov	r0, sl
   26730:	bl	24358 <main@@Base+0x11060>
   26734:	mov	r4, r0
   26738:	cmp	r0, r7
   2673c:	cmpne	r4, r9
   26740:	beq	28c64 <main@@Base+0x1596c>
   26744:	ldr	r6, [fp, #-44]	; 0xffffffd4
   26748:	ldr	sl, [sp, #24]
   2674c:	ldr	r5, [sp, #32]
   26750:	cmp	r6, #0
   26754:	bne	26764 <main@@Base+0x1346c>
   26758:	ldrb	r0, [sl, #8]
   2675c:	tst	r0, #2
   26760:	beq	265d8 <main@@Base+0x132e0>
   26764:	ldr	r0, [sl]
   26768:	mov	r1, #1
   2676c:	mov	r2, #4
   26770:	mov	r3, #4
   26774:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   26778:	cmp	r0, #0
   2677c:	beq	28c64 <main@@Base+0x1596c>
   26780:	str	r6, [r0]
   26784:	sub	r0, r9, r4
   26788:	cmp	r0, #2
   2678c:	bge	265e4 <main@@Base+0x132ec>
   26790:	b	26614 <main@@Base+0x1331c>
   26794:	bne	267a4 <main@@Base+0x134ac>
   26798:	ldrb	r0, [r4, #2]!
   2679c:	cmp	r0, #32
   267a0:	bhi	267b4 <main@@Base+0x134bc>
   267a4:	mov	r0, sl
   267a8:	mov	r2, r9
   267ac:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   267b0:	mov	r4, r0
   267b4:	cmp	r4, r9
   267b8:	mov	r2, r9
   267bc:	beq	26800 <main@@Base+0x13508>
   267c0:	ldrb	r0, [r4]
   267c4:	cmp	r0, #125	; 0x7d
   267c8:	bne	267fc <main@@Base+0x13504>
   267cc:	add	r1, r4, #1
   267d0:	sub	r0, r9, r1
   267d4:	cmp	r0, #2
   267d8:	blt	28b0c <main@@Base+0x15814>
   267dc:	ldrb	r0, [r1]
   267e0:	cmp	r0, #32
   267e4:	bhi	2800c <main@@Base+0x14d14>
   267e8:	bne	28b0c <main@@Base+0x15814>
   267ec:	ldrb	r0, [r4, #2]!
   267f0:	cmp	r0, #32
   267f4:	bhi	25e78 <main@@Base+0x12b80>
   267f8:	b	28b0c <main@@Base+0x15814>
   267fc:	mov	r2, r4
   26800:	cmp	r2, r9
   26804:	mov	sl, r9
   26808:	beq	2685c <main@@Base+0x13564>
   2680c:	ldrb	r0, [r2]
   26810:	cmp	r0, #46	; 0x2e
   26814:	beq	26830 <main@@Base+0x13538>
   26818:	cmp	r0, #34	; 0x22
   2681c:	bne	2684c <main@@Base+0x13554>
   26820:	ldr	r0, [sp, #28]
   26824:	mov	r1, #0
   26828:	add	sl, r2, #1
   2682c:	b	26858 <main@@Base+0x13560>
   26830:	ldr	r0, [sp, #24]
   26834:	mov	r1, r2
   26838:	mov	r2, r9
   2683c:	mov	r3, #5
   26840:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   26844:	mov	sl, r0
   26848:	b	2685c <main@@Base+0x13564>
   2684c:	ldr	r0, [sp, #28]
   26850:	mov	r1, #1
   26854:	mov	sl, r2
   26858:	str	r1, [r0]
   2685c:	sub	r8, r9, sl
   26860:	mov	r0, #8
   26864:	cmp	r8, #8
   26868:	movcc	r0, r8
   2686c:	sub	r3, r0, #1
   26870:	cmp	r3, #7
   26874:	bhi	26f38 <main@@Base+0x13c40>
   26878:	add	r5, pc, #32
   2687c:	mov	r0, #0
   26880:	mov	ip, #0
   26884:	mov	lr, #0
   26888:	mov	r7, #0
   2688c:	mov	r2, #0
   26890:	mov	r6, #0
   26894:	mov	r4, #0
   26898:	mov	r1, #0
   2689c:	ldr	pc, [r5, r3, lsl #2]
   268a0:	andeq	r6, r2, r4, lsl #18
   268a4:	strdeq	r6, [r2], -ip
   268a8:	strdeq	r6, [r2], -r4
   268ac:	andeq	r6, r2, ip, ror #17
   268b0:	andeq	r6, r2, r0, ror #17
   268b4:	ldrdeq	r6, [r2], -r4
   268b8:	andeq	r6, r2, r4, asr #17
   268bc:	andeq	r6, r2, r0, asr #17
   268c0:	ldrb	ip, [sl, #7]
   268c4:	ldrb	r1, [sl, #6]
   268c8:	mov	lr, r0
   268cc:	orr	r1, ip, r1, lsl #8
   268d0:	mov	r0, r1
   268d4:	ldrb	r1, [sl, #5]
   268d8:	mov	r7, lr
   268dc:	orr	r0, r0, r1, lsl #16
   268e0:	ldrb	r1, [sl, #4]
   268e4:	mov	r2, r7
   268e8:	orr	r0, r0, r1, lsl #24
   268ec:	ldrb	r1, [sl, #3]
   268f0:	orr	r6, r1, r2
   268f4:	ldrb	r1, [sl, #2]
   268f8:	orr	r4, r6, r1, lsl #8
   268fc:	ldrb	r1, [sl, #1]
   26900:	orr	r1, r4, r1, lsl #16
   26904:	ldrb	r2, [sl]
   26908:	orr	r7, r1, r2, lsl #24
   2690c:	movw	r1, #25442	; 0x6362
   26910:	movt	r1, #25443	; 0x6363
   26914:	cmp	r7, r1
   26918:	bhi	269b8 <main@@Base+0x136c0>
   2691c:	movw	r1, #13108	; 0x3334
   26920:	movt	r1, #12594	; 0x3132
   26924:	eor	r5, r0, r1
   26928:	movw	r1, #24929	; 0x6161
   2692c:	movt	r1, #24929	; 0x6161
   26930:	eor	r0, r7, r1
   26934:	orrs	r0, r5, r0
   26938:	bne	26a2c <main@@Base+0x13734>
   2693c:	add	r7, sl, #8
   26940:	mov	r1, #8
   26944:	sub	r0, r9, r7
   26948:	cmp	r0, #8
   2694c:	movcc	r1, r0
   26950:	sub	r1, r1, #1
   26954:	cmp	r1, #7
   26958:	bhi	27d08 <main@@Base+0x14a10>
   2695c:	ldrb	r1, [r7]
   26960:	cmp	r1, #53	; 0x35
   26964:	bne	27d08 <main@@Base+0x14a10>
   26968:	cmp	r0, #2
   2696c:	blt	27d08 <main@@Base+0x14a10>
   26970:	ldr	r2, [sp, #28]
   26974:	mov	r1, sl
   26978:	ldrb	r0, [r1, #9]!
   2697c:	ldr	r2, [r2]
   26980:	cmp	r2, #0
   26984:	beq	26c84 <main@@Base+0x1398c>
   26988:	cmp	r0, #33	; 0x21
   2698c:	bcc	26998 <main@@Base+0x136a0>
   26990:	cmp	r0, #58	; 0x3a
   26994:	bne	27d08 <main@@Base+0x14a10>
   26998:	ldr	r0, [sp, #28]
   2699c:	mov	r2, #0
   269a0:	str	r2, [r0]
   269a4:	ldr	r4, [sp, #24]
   269a8:	sub	r0, r9, r1
   269ac:	cmp	r0, #2
   269b0:	bge	26ca0 <main@@Base+0x139a8>
   269b4:	b	272f0 <main@@Base+0x13ff8>
   269b8:	movw	r1, #13108	; 0x3334
   269bc:	movt	r1, #12594	; 0x3132
   269c0:	eor	r5, r0, r1
   269c4:	ldr	r0, [sp, #20]
   269c8:	eor	r0, r7, r0
   269cc:	orrs	r0, r5, r0
   269d0:	bne	26a88 <main@@Base+0x13790>
   269d4:	ldr	r5, [sp, #32]
   269d8:	cmp	r8, #9
   269dc:	mov	r7, sl
   269e0:	blt	27138 <main@@Base+0x13e40>
   269e4:	ldr	r2, [sp, #28]
   269e8:	mov	r1, sl
   269ec:	ldrb	r0, [r1, #8]!
   269f0:	ldr	r2, [r2]
   269f4:	cmp	r2, #0
   269f8:	beq	26aec <main@@Base+0x137f4>
   269fc:	cmp	r0, #33	; 0x21
   26a00:	bcc	26a10 <main@@Base+0x13718>
   26a04:	cmp	r0, #58	; 0x3a
   26a08:	mov	r7, sl
   26a0c:	bne	27138 <main@@Base+0x13e40>
   26a10:	ldr	r0, [sp, #28]
   26a14:	mov	r2, #0
   26a18:	str	r2, [r0]
   26a1c:	sub	r0, r9, r1
   26a20:	cmp	r0, #2
   26a24:	bge	26b08 <main@@Base+0x13810>
   26a28:	b	26ba8 <main@@Base+0x138b0>
   26a2c:	teq	r7, r1
   26a30:	bne	26d20 <main@@Base+0x13a28>
   26a34:	cmp	r8, #5
   26a38:	mov	r1, sl
   26a3c:	blt	273fc <main@@Base+0x14104>
   26a40:	ldr	r1, [sp, #28]
   26a44:	mov	r2, sl
   26a48:	ldrb	r0, [r2, #4]!
   26a4c:	ldr	r1, [r1]
   26a50:	cmp	r1, #0
   26a54:	beq	26b24 <main@@Base+0x1382c>
   26a58:	cmp	r0, #33	; 0x21
   26a5c:	bcc	26a6c <main@@Base+0x13774>
   26a60:	cmp	r0, #58	; 0x3a
   26a64:	mov	r1, sl
   26a68:	bne	273fc <main@@Base+0x14104>
   26a6c:	ldr	r0, [sp, #28]
   26a70:	mov	r1, #0
   26a74:	str	r1, [r0]
   26a78:	sub	r0, r9, r2
   26a7c:	cmp	r0, #2
   26a80:	bge	26b40 <main@@Base+0x13848>
   26a84:	b	26cd0 <main@@Base+0x139d8>
   26a88:	movw	r0, #25443	; 0x6363
   26a8c:	movt	r0, #25443	; 0x6363
   26a90:	teq	r7, r0
   26a94:	bne	26ed4 <main@@Base+0x13bdc>
   26a98:	cmp	r8, #5
   26a9c:	mov	r1, sl
   26aa0:	blt	27468 <main@@Base+0x14170>
   26aa4:	ldr	r1, [sp, #28]
   26aa8:	mov	r2, sl
   26aac:	ldrb	r0, [r2, #4]!
   26ab0:	ldr	r1, [r1]
   26ab4:	cmp	r1, #0
   26ab8:	beq	26b5c <main@@Base+0x13864>
   26abc:	cmp	r0, #33	; 0x21
   26ac0:	bcc	26ad0 <main@@Base+0x137d8>
   26ac4:	cmp	r0, #58	; 0x3a
   26ac8:	mov	r1, sl
   26acc:	bne	27468 <main@@Base+0x14170>
   26ad0:	ldr	r0, [sp, #28]
   26ad4:	mov	r1, #0
   26ad8:	str	r1, [r0]
   26adc:	sub	r0, r9, r2
   26ae0:	cmp	r0, #2
   26ae4:	bge	26b78 <main@@Base+0x13880>
   26ae8:	b	26e84 <main@@Base+0x13b8c>
   26aec:	cmp	r0, #34	; 0x22
   26af0:	mov	r7, sl
   26af4:	bne	27138 <main@@Base+0x13e40>
   26af8:	add	r1, sl, #9
   26afc:	sub	r0, r9, r1
   26b00:	cmp	r0, #2
   26b04:	blt	26ba8 <main@@Base+0x138b0>
   26b08:	ldrb	r0, [r1]
   26b0c:	cmp	r0, #32
   26b10:	bls	26b94 <main@@Base+0x1389c>
   26b14:	mov	r7, r1
   26b18:	cmp	r7, r9
   26b1c:	bne	26bc0 <main@@Base+0x138c8>
   26b20:	b	26c6c <main@@Base+0x13974>
   26b24:	cmp	r0, #34	; 0x22
   26b28:	mov	r1, sl
   26b2c:	bne	273fc <main@@Base+0x14104>
   26b30:	add	r2, sl, #5
   26b34:	sub	r0, r9, r2
   26b38:	cmp	r0, #2
   26b3c:	blt	26cd0 <main@@Base+0x139d8>
   26b40:	ldrb	r0, [r2]
   26b44:	cmp	r0, #32
   26b48:	bls	26cbc <main@@Base+0x139c4>
   26b4c:	mov	r1, r2
   26b50:	cmp	r1, r9
   26b54:	bne	26cec <main@@Base+0x139f4>
   26b58:	b	26dec <main@@Base+0x13af4>
   26b5c:	cmp	r0, #34	; 0x22
   26b60:	mov	r1, sl
   26b64:	bne	27468 <main@@Base+0x14170>
   26b68:	add	r2, sl, #5
   26b6c:	sub	r0, r9, r2
   26b70:	cmp	r0, #2
   26b74:	blt	26e84 <main@@Base+0x13b8c>
   26b78:	ldrb	r0, [r2]
   26b7c:	cmp	r0, #32
   26b80:	bls	26e70 <main@@Base+0x13b78>
   26b84:	mov	r1, r2
   26b88:	cmp	r1, r9
   26b8c:	bne	26ea0 <main@@Base+0x13ba8>
   26b90:	b	26f48 <main@@Base+0x13c50>
   26b94:	bne	26ba8 <main@@Base+0x138b0>
   26b98:	mov	r7, r1
   26b9c:	ldrb	r0, [r7, #1]!
   26ba0:	cmp	r0, #32
   26ba4:	bhi	26bb8 <main@@Base+0x138c0>
   26ba8:	ldr	r0, [sp, #24]
   26bac:	mov	r2, r9
   26bb0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26bb4:	mov	r7, r0
   26bb8:	cmp	r7, r9
   26bbc:	beq	26c6c <main@@Base+0x13974>
   26bc0:	ldrb	r0, [r7]
   26bc4:	cmp	r0, #58	; 0x3a
   26bc8:	bne	26c6c <main@@Base+0x13974>
   26bcc:	add	r1, r7, #1
   26bd0:	sub	r0, r9, r1
   26bd4:	cmp	r0, #2
   26bd8:	blt	27128 <main@@Base+0x13e30>
   26bdc:	ldrb	r0, [r1]
   26be0:	cmp	r0, #32
   26be4:	bls	27118 <main@@Base+0x13e20>
   26be8:	mov	r7, r1
   26bec:	cmp	sl, r7
   26bf0:	bne	27140 <main@@Base+0x13e48>
   26bf4:	add	r7, sl, #8
   26bf8:	mov	r1, #8
   26bfc:	sub	r0, r9, r7
   26c00:	cmp	r0, #8
   26c04:	movcc	r1, r0
   26c08:	sub	r1, r1, #1
   26c0c:	cmp	r1, #7
   26c10:	bhi	270f0 <main@@Base+0x13df8>
   26c14:	ldrb	r1, [r7]
   26c18:	cmp	r1, #53	; 0x35
   26c1c:	bne	270f0 <main@@Base+0x13df8>
   26c20:	cmp	r0, #2
   26c24:	blt	27d08 <main@@Base+0x14a10>
   26c28:	ldr	r2, [sp, #28]
   26c2c:	mov	r1, sl
   26c30:	ldrb	r0, [r1, #9]!
   26c34:	ldr	r2, [r2]
   26c38:	cmp	r2, #0
   26c3c:	beq	272a8 <main@@Base+0x13fb0>
   26c40:	cmp	r0, #33	; 0x21
   26c44:	bcc	26c50 <main@@Base+0x13958>
   26c48:	cmp	r0, #58	; 0x3a
   26c4c:	bne	27d08 <main@@Base+0x14a10>
   26c50:	ldr	r0, [sp, #28]
   26c54:	mov	r2, #0
   26c58:	str	r2, [r0]
   26c5c:	sub	r0, r9, r1
   26c60:	cmp	r0, #2
   26c64:	bge	272c0 <main@@Base+0x13fc8>
   26c68:	b	2781c <main@@Base+0x14524>
   26c6c:	ldr	r0, [sp, #24]
   26c70:	mov	r1, r7
   26c74:	mov	r2, r9
   26c78:	mov	r3, #4
   26c7c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   26c80:	b	27134 <main@@Base+0x13e3c>
   26c84:	cmp	r0, #34	; 0x22
   26c88:	bne	27d08 <main@@Base+0x14a10>
   26c8c:	add	r1, sl, #10
   26c90:	ldr	r4, [sp, #24]
   26c94:	sub	r0, r9, r1
   26c98:	cmp	r0, #2
   26c9c:	blt	272f0 <main@@Base+0x13ff8>
   26ca0:	ldrb	r0, [r1]
   26ca4:	cmp	r0, #32
   26ca8:	bls	272dc <main@@Base+0x13fe4>
   26cac:	mov	r8, r1
   26cb0:	cmp	r8, r9
   26cb4:	bne	27308 <main@@Base+0x14010>
   26cb8:	b	27340 <main@@Base+0x14048>
   26cbc:	bne	26cd0 <main@@Base+0x139d8>
   26cc0:	mov	r1, r2
   26cc4:	ldrb	r0, [r1, #1]!
   26cc8:	cmp	r0, #32
   26ccc:	bhi	26ce4 <main@@Base+0x139ec>
   26cd0:	ldr	r0, [sp, #24]
   26cd4:	mov	r1, r2
   26cd8:	mov	r2, r9
   26cdc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26ce0:	mov	r1, r0
   26ce4:	cmp	r1, r9
   26ce8:	beq	26dec <main@@Base+0x13af4>
   26cec:	ldrb	r0, [r1]
   26cf0:	cmp	r0, #58	; 0x3a
   26cf4:	bne	26dec <main@@Base+0x13af4>
   26cf8:	add	r2, r1, #1
   26cfc:	sub	r0, r9, r2
   26d00:	cmp	r0, #2
   26d04:	blt	273e8 <main@@Base+0x140f0>
   26d08:	ldrb	r0, [r2]
   26d0c:	cmp	r0, #32
   26d10:	bls	273d8 <main@@Base+0x140e0>
   26d14:	mov	r1, r2
   26d18:	cmp	sl, r1
   26d1c:	bne	27404 <main@@Base+0x1410c>
   26d20:	movw	r1, #25186	; 0x6262
   26d24:	movt	r1, #25186	; 0x6262
   26d28:	eor	r0, r7, r1
   26d2c:	orrs	r0, r5, r0
   26d30:	bne	26d8c <main@@Base+0x13a94>
   26d34:	ldr	r5, [sp, #32]
   26d38:	cmp	r8, #9
   26d3c:	mov	r7, sl
   26d40:	blt	274d4 <main@@Base+0x141dc>
   26d44:	ldr	r2, [sp, #28]
   26d48:	mov	r1, sl
   26d4c:	ldrb	r0, [r1, #8]!
   26d50:	ldr	r2, [r2]
   26d54:	cmp	r2, #0
   26d58:	beq	26e00 <main@@Base+0x13b08>
   26d5c:	cmp	r0, #33	; 0x21
   26d60:	bcc	26d70 <main@@Base+0x13a78>
   26d64:	cmp	r0, #58	; 0x3a
   26d68:	mov	r7, sl
   26d6c:	bne	274d4 <main@@Base+0x141dc>
   26d70:	ldr	r0, [sp, #28]
   26d74:	mov	r2, #0
   26d78:	str	r2, [r0]
   26d7c:	sub	r0, r9, r1
   26d80:	cmp	r0, #2
   26d84:	bge	26e1c <main@@Base+0x13b24>
   26d88:	b	26fa8 <main@@Base+0x13cb0>
   26d8c:	teq	r7, r1
   26d90:	bne	26f38 <main@@Base+0x13c40>
   26d94:	ldr	r5, [sp, #32]
   26d98:	cmp	r8, #5
   26d9c:	mov	r1, sl
   26da0:	blt	27a00 <main@@Base+0x14708>
   26da4:	ldr	r1, [sp, #28]
   26da8:	mov	r2, sl
   26dac:	ldrb	r0, [r2, #4]!
   26db0:	ldr	r1, [r1]
   26db4:	cmp	r1, #0
   26db8:	beq	26e38 <main@@Base+0x13b40>
   26dbc:	cmp	r0, #33	; 0x21
   26dc0:	bcc	26dd0 <main@@Base+0x13ad8>
   26dc4:	cmp	r0, #58	; 0x3a
   26dc8:	mov	r1, sl
   26dcc:	bne	27a00 <main@@Base+0x14708>
   26dd0:	ldr	r0, [sp, #28]
   26dd4:	mov	r1, #0
   26dd8:	str	r1, [r0]
   26ddc:	sub	r0, r9, r2
   26de0:	cmp	r0, #2
   26de4:	bge	26e54 <main@@Base+0x13b5c>
   26de8:	b	2736c <main@@Base+0x14074>
   26dec:	ldr	r0, [sp, #24]
   26df0:	mov	r2, r9
   26df4:	mov	r3, #4
   26df8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   26dfc:	b	273f8 <main@@Base+0x14100>
   26e00:	cmp	r0, #34	; 0x22
   26e04:	mov	r7, sl
   26e08:	bne	274d4 <main@@Base+0x141dc>
   26e0c:	add	r1, sl, #9
   26e10:	sub	r0, r9, r1
   26e14:	cmp	r0, #2
   26e18:	blt	26fa8 <main@@Base+0x13cb0>
   26e1c:	ldrb	r0, [r1]
   26e20:	cmp	r0, #32
   26e24:	bls	26f94 <main@@Base+0x13c9c>
   26e28:	mov	r7, r1
   26e2c:	cmp	r7, r9
   26e30:	bne	26fc0 <main@@Base+0x13cc8>
   26e34:	b	26ffc <main@@Base+0x13d04>
   26e38:	cmp	r0, #34	; 0x22
   26e3c:	mov	r1, sl
   26e40:	bne	27a00 <main@@Base+0x14708>
   26e44:	add	r2, sl, #5
   26e48:	sub	r0, r9, r2
   26e4c:	cmp	r0, #2
   26e50:	blt	2736c <main@@Base+0x14074>
   26e54:	ldrb	r0, [r2]
   26e58:	cmp	r0, #32
   26e5c:	bls	27358 <main@@Base+0x14060>
   26e60:	mov	r1, r2
   26e64:	cmp	r1, r9
   26e68:	bne	27388 <main@@Base+0x14090>
   26e6c:	b	273c4 <main@@Base+0x140cc>
   26e70:	bne	26e84 <main@@Base+0x13b8c>
   26e74:	mov	r1, r2
   26e78:	ldrb	r0, [r1, #1]!
   26e7c:	cmp	r0, #32
   26e80:	bhi	26e98 <main@@Base+0x13ba0>
   26e84:	ldr	r0, [sp, #24]
   26e88:	mov	r1, r2
   26e8c:	mov	r2, r9
   26e90:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26e94:	mov	r1, r0
   26e98:	cmp	r1, r9
   26e9c:	beq	26f48 <main@@Base+0x13c50>
   26ea0:	ldrb	r0, [r1]
   26ea4:	cmp	r0, #58	; 0x3a
   26ea8:	bne	26f48 <main@@Base+0x13c50>
   26eac:	add	r2, r1, #1
   26eb0:	sub	r0, r9, r2
   26eb4:	cmp	r0, #2
   26eb8:	blt	27454 <main@@Base+0x1415c>
   26ebc:	ldrb	r0, [r2]
   26ec0:	cmp	r0, #32
   26ec4:	bls	27444 <main@@Base+0x1414c>
   26ec8:	mov	r1, r2
   26ecc:	cmp	sl, r1
   26ed0:	bne	27470 <main@@Base+0x14178>
   26ed4:	ldr	r0, [sp, #16]
   26ed8:	eor	r0, r7, r0
   26edc:	orrs	r0, r5, r0
   26ee0:	bne	26f38 <main@@Base+0x13c40>
   26ee4:	cmp	r8, #9
   26ee8:	mov	r7, sl
   26eec:	blt	27650 <main@@Base+0x14358>
   26ef0:	ldr	r2, [sp, #28]
   26ef4:	mov	r1, sl
   26ef8:	ldrb	r0, [r1, #8]!
   26efc:	ldr	r2, [r2]
   26f00:	cmp	r2, #0
   26f04:	beq	26f5c <main@@Base+0x13c64>
   26f08:	cmp	r0, #33	; 0x21
   26f0c:	bcc	26f1c <main@@Base+0x13c24>
   26f10:	cmp	r0, #58	; 0x3a
   26f14:	mov	r7, sl
   26f18:	bne	27650 <main@@Base+0x14358>
   26f1c:	ldr	r0, [sp, #28]
   26f20:	mov	r2, #0
   26f24:	str	r2, [r0]
   26f28:	sub	r0, r9, r1
   26f2c:	cmp	r0, #2
   26f30:	bge	26f78 <main@@Base+0x13c80>
   26f34:	b	27028 <main@@Base+0x13d30>
   26f38:	ldr	r0, [sp, #24]
   26f3c:	mov	r1, sl
   26f40:	mov	sl, r0
   26f44:	b	27d14 <main@@Base+0x14a1c>
   26f48:	ldr	r0, [sp, #24]
   26f4c:	mov	r2, r9
   26f50:	mov	r3, #4
   26f54:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   26f58:	b	27464 <main@@Base+0x1416c>
   26f5c:	cmp	r0, #34	; 0x22
   26f60:	mov	r7, sl
   26f64:	bne	27650 <main@@Base+0x14358>
   26f68:	add	r1, sl, #9
   26f6c:	sub	r0, r9, r1
   26f70:	cmp	r0, #2
   26f74:	blt	27028 <main@@Base+0x13d30>
   26f78:	ldrb	r0, [r1]
   26f7c:	cmp	r0, #32
   26f80:	bls	27014 <main@@Base+0x13d1c>
   26f84:	mov	r7, r1
   26f88:	cmp	r7, r9
   26f8c:	bne	27040 <main@@Base+0x13d48>
   26f90:	b	27100 <main@@Base+0x13e08>
   26f94:	bne	26fa8 <main@@Base+0x13cb0>
   26f98:	mov	r7, r1
   26f9c:	ldrb	r0, [r7, #1]!
   26fa0:	cmp	r0, #32
   26fa4:	bhi	26fb8 <main@@Base+0x13cc0>
   26fa8:	ldr	r0, [sp, #24]
   26fac:	mov	r2, r9
   26fb0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   26fb4:	mov	r7, r0
   26fb8:	cmp	r7, r9
   26fbc:	beq	26ffc <main@@Base+0x13d04>
   26fc0:	ldrb	r0, [r7]
   26fc4:	cmp	r0, #58	; 0x3a
   26fc8:	bne	26ffc <main@@Base+0x13d04>
   26fcc:	add	r1, r7, #1
   26fd0:	sub	r0, r9, r1
   26fd4:	cmp	r0, #2
   26fd8:	blt	274c4 <main@@Base+0x141cc>
   26fdc:	ldrb	r0, [r1]
   26fe0:	cmp	r0, #32
   26fe4:	bls	274b0 <main@@Base+0x141b8>
   26fe8:	ldr	r5, [sp, #32]
   26fec:	mov	r7, r1
   26ff0:	cmp	sl, r7
   26ff4:	bne	274dc <main@@Base+0x141e4>
   26ff8:	b	27a58 <main@@Base+0x14760>
   26ffc:	ldr	r0, [sp, #24]
   27000:	mov	r1, r7
   27004:	mov	r2, r9
   27008:	mov	r3, #4
   2700c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27010:	b	274d0 <main@@Base+0x141d8>
   27014:	bne	27028 <main@@Base+0x13d30>
   27018:	mov	r7, r1
   2701c:	ldrb	r0, [r7, #1]!
   27020:	cmp	r0, #32
   27024:	bhi	27038 <main@@Base+0x13d40>
   27028:	ldr	r0, [sp, #24]
   2702c:	mov	r2, r9
   27030:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27034:	mov	r7, r0
   27038:	cmp	r7, r9
   2703c:	beq	27100 <main@@Base+0x13e08>
   27040:	ldrb	r0, [r7]
   27044:	cmp	r0, #58	; 0x3a
   27048:	bne	27100 <main@@Base+0x13e08>
   2704c:	add	r1, r7, #1
   27050:	sub	r0, r9, r1
   27054:	cmp	r0, #2
   27058:	blt	27640 <main@@Base+0x14348>
   2705c:	ldrb	r0, [r1]
   27060:	cmp	r0, #32
   27064:	bls	27630 <main@@Base+0x14338>
   27068:	mov	r7, r1
   2706c:	cmp	sl, r7
   27070:	bne	27658 <main@@Base+0x14360>
   27074:	add	r7, sl, #8
   27078:	ldr	r5, [sp, #32]
   2707c:	mov	r1, #8
   27080:	sub	r0, r9, r7
   27084:	cmp	r0, #8
   27088:	movcc	r1, r0
   2708c:	sub	r1, r1, #1
   27090:	cmp	r1, #7
   27094:	bhi	270f0 <main@@Base+0x13df8>
   27098:	ldrb	r1, [r7]
   2709c:	cmp	r1, #53	; 0x35
   270a0:	bne	270f0 <main@@Base+0x13df8>
   270a4:	cmp	r0, #2
   270a8:	blt	27d08 <main@@Base+0x14a10>
   270ac:	ldr	r2, [sp, #28]
   270b0:	mov	r1, sl
   270b4:	ldrb	r0, [r1, #9]!
   270b8:	ldr	r2, [r2]
   270bc:	cmp	r2, #0
   270c0:	beq	277d4 <main@@Base+0x144dc>
   270c4:	cmp	r0, #33	; 0x21
   270c8:	bcc	270d4 <main@@Base+0x13ddc>
   270cc:	cmp	r0, #58	; 0x3a
   270d0:	bne	27d08 <main@@Base+0x14a10>
   270d4:	ldr	r0, [sp, #28]
   270d8:	mov	r2, #0
   270dc:	str	r2, [r0]
   270e0:	sub	r0, r9, r1
   270e4:	cmp	r0, #2
   270e8:	bge	277ec <main@@Base+0x144f4>
   270ec:	b	27aac <main@@Base+0x147b4>
   270f0:	ldr	sl, [sp, #24]
   270f4:	mov	r1, r7
   270f8:	mov	r0, sl
   270fc:	b	27a64 <main@@Base+0x1476c>
   27100:	ldr	r0, [sp, #24]
   27104:	mov	r1, r7
   27108:	mov	r2, r9
   2710c:	mov	r3, #4
   27110:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27114:	b	2764c <main@@Base+0x14354>
   27118:	bne	27128 <main@@Base+0x13e30>
   2711c:	ldrb	r0, [r7, #2]!
   27120:	cmp	r0, #32
   27124:	bhi	27138 <main@@Base+0x13e40>
   27128:	ldr	r0, [sp, #24]
   2712c:	mov	r2, r9
   27130:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27134:	mov	r7, r0
   27138:	cmp	sl, r7
   2713c:	beq	26bf4 <main@@Base+0x138fc>
   27140:	mov	r6, #0
   27144:	cmp	r7, r9
   27148:	str	r6, [fp, #-36]	; 0xffffffdc
   2714c:	str	r6, [fp, #-40]	; 0xffffffd8
   27150:	str	r6, [sp, #44]	; 0x2c
   27154:	str	r6, [sp, #40]	; 0x28
   27158:	str	r6, [fp, #-44]	; 0xffffffd4
   2715c:	beq	271bc <main@@Base+0x13ec4>
   27160:	ldr	sl, [sp, #24]
   27164:	sub	r0, fp, #40	; 0x28
   27168:	mov	r1, r7
   2716c:	mov	r2, r9
   27170:	sub	r3, fp, #44	; 0x2c
   27174:	str	r0, [sp]
   27178:	mov	r0, sl
   2717c:	bl	323e8 <flatcc_json_parser_integer@@Base>
   27180:	cmp	r0, r7
   27184:	beq	271d4 <main@@Base+0x13edc>
   27188:	sub	r8, fp, #44	; 0x2c
   2718c:	mov	r4, r0
   27190:	ldm	r8, {r0, r6, r8}
   27194:	cmp	r0, #0
   27198:	beq	271ec <main@@Base+0x13ef4>
   2719c:	subs	r0, r6, #1
   271a0:	sbcs	r0, r8, #-2147483648	; 0x80000000
   271a4:	bcc	27220 <main@@Base+0x13f28>
   271a8:	mov	r0, sl
   271ac:	mov	r1, r4
   271b0:	mov	r2, r9
   271b4:	mov	r3, #8
   271b8:	b	27204 <main@@Base+0x13f0c>
   271bc:	ldr	sl, [sp, #24]
   271c0:	mov	r8, #0
   271c4:	mov	r4, r9
   271c8:	cmp	r7, r4
   271cc:	bne	27274 <main@@Base+0x13f7c>
   271d0:	b	27238 <main@@Base+0x13f40>
   271d4:	mov	r6, #0
   271d8:	mov	r8, #0
   271dc:	mov	r4, r7
   271e0:	cmp	r7, r4
   271e4:	bne	27274 <main@@Base+0x13f7c>
   271e8:	b	27238 <main@@Base+0x13f40>
   271ec:	cmn	r8, #1
   271f0:	bgt	27228 <main@@Base+0x13f30>
   271f4:	mov	r0, sl
   271f8:	mov	r1, r4
   271fc:	mov	r2, r9
   27200:	mov	r3, #7
   27204:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27208:	mov	r4, r0
   2720c:	mov	r6, #0
   27210:	mov	r8, #0
   27214:	cmp	r7, r4
   27218:	bne	27274 <main@@Base+0x13f7c>
   2721c:	b	27238 <main@@Base+0x13f40>
   27220:	rsbs	r6, r6, #0
   27224:	rsc	r8, r8, #0
   27228:	str	r6, [sp, #40]	; 0x28
   2722c:	str	r8, [sp, #44]	; 0x2c
   27230:	cmp	r7, r4
   27234:	bne	27274 <main@@Base+0x13f7c>
   27238:	add	r0, sp, #40	; 0x28
   2723c:	mov	r1, r7
   27240:	mov	r2, r9
   27244:	str	r0, [sp]
   27248:	movw	r0, #33272	; 0x81f8
   2724c:	movt	r0, #4
   27250:	add	r3, r0, #24
   27254:	mov	r0, sl
   27258:	bl	240d0 <main@@Base+0x10dd8>
   2725c:	mov	r4, r0
   27260:	cmp	r0, r7
   27264:	cmpne	r4, r9
   27268:	beq	28c68 <main@@Base+0x15970>
   2726c:	ldr	r6, [sp, #40]	; 0x28
   27270:	ldr	r8, [sp, #44]	; 0x2c
   27274:	orrs	r0, r6, r8
   27278:	bne	27288 <main@@Base+0x13f90>
   2727c:	ldrb	r0, [sl, #8]
   27280:	tst	r0, #2
   27284:	beq	27d24 <main@@Base+0x14a2c>
   27288:	ldr	r0, [sl]
   2728c:	mov	r1, #5
   27290:	mov	r2, #8
   27294:	mov	r3, #8
   27298:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   2729c:	cmp	r0, #0
   272a0:	bne	277c0 <main@@Base+0x144c8>
   272a4:	b	28c68 <main@@Base+0x15970>
   272a8:	cmp	r0, #34	; 0x22
   272ac:	bne	27d08 <main@@Base+0x14a10>
   272b0:	add	r1, sl, #10
   272b4:	sub	r0, r9, r1
   272b8:	cmp	r0, #2
   272bc:	blt	2781c <main@@Base+0x14524>
   272c0:	ldrb	r0, [r1]
   272c4:	cmp	r0, #32
   272c8:	bls	27808 <main@@Base+0x14510>
   272cc:	mov	r8, r1
   272d0:	cmp	r8, r9
   272d4:	bne	27834 <main@@Base+0x1453c>
   272d8:	b	2786c <main@@Base+0x14574>
   272dc:	bne	272f0 <main@@Base+0x13ff8>
   272e0:	mov	r8, r1
   272e4:	ldrb	r0, [r8, #1]!
   272e8:	cmp	r0, #32
   272ec:	bhi	27300 <main@@Base+0x14008>
   272f0:	mov	r0, r4
   272f4:	mov	r2, r9
   272f8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   272fc:	mov	r8, r0
   27300:	cmp	r8, r9
   27304:	beq	27340 <main@@Base+0x14048>
   27308:	ldrb	r0, [r8]
   2730c:	cmp	r0, #58	; 0x3a
   27310:	bne	27340 <main@@Base+0x14048>
   27314:	add	r1, r8, #1
   27318:	sub	r0, r9, r1
   2731c:	cmp	r0, #2
   27320:	blt	27894 <main@@Base+0x1459c>
   27324:	ldrb	r0, [r1]
   27328:	cmp	r0, #32
   2732c:	bls	27884 <main@@Base+0x1458c>
   27330:	mov	r8, r1
   27334:	cmp	r7, r8
   27338:	bne	278ac <main@@Base+0x145b4>
   2733c:	b	27d08 <main@@Base+0x14a10>
   27340:	mov	r0, r4
   27344:	mov	r1, r8
   27348:	mov	r2, r9
   2734c:	mov	r3, #4
   27350:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27354:	b	278a0 <main@@Base+0x145a8>
   27358:	bne	2736c <main@@Base+0x14074>
   2735c:	mov	r1, r2
   27360:	ldrb	r0, [r1, #1]!
   27364:	cmp	r0, #32
   27368:	bhi	27380 <main@@Base+0x14088>
   2736c:	ldr	r0, [sp, #24]
   27370:	mov	r1, r2
   27374:	mov	r2, r9
   27378:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2737c:	mov	r1, r0
   27380:	cmp	r1, r9
   27384:	beq	273c4 <main@@Base+0x140cc>
   27388:	ldrb	r0, [r1]
   2738c:	cmp	r0, #58	; 0x3a
   27390:	bne	273c4 <main@@Base+0x140cc>
   27394:	add	r2, r1, #1
   27398:	sub	r0, r9, r2
   2739c:	cmp	r0, #2
   273a0:	blt	279ec <main@@Base+0x146f4>
   273a4:	ldrb	r0, [r2]
   273a8:	cmp	r0, #32
   273ac:	bls	279d8 <main@@Base+0x146e0>
   273b0:	ldr	r5, [sp, #32]
   273b4:	mov	r1, r2
   273b8:	cmp	sl, r1
   273bc:	bne	27a08 <main@@Base+0x14710>
   273c0:	b	27a58 <main@@Base+0x14760>
   273c4:	ldr	r0, [sp, #24]
   273c8:	mov	r2, r9
   273cc:	mov	r3, #4
   273d0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   273d4:	b	279fc <main@@Base+0x14704>
   273d8:	bne	273e8 <main@@Base+0x140f0>
   273dc:	ldrb	r0, [r1, #2]!
   273e0:	cmp	r0, #32
   273e4:	bhi	273fc <main@@Base+0x14104>
   273e8:	ldr	r0, [sp, #24]
   273ec:	mov	r1, r2
   273f0:	mov	r2, r9
   273f4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   273f8:	mov	r1, r0
   273fc:	cmp	sl, r1
   27400:	beq	26d20 <main@@Base+0x13a28>
   27404:	ldr	sl, [sp, #24]
   27408:	mov	r2, r9
   2740c:	add	r3, sp, #36	; 0x24
   27410:	mov	r0, sl
   27414:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   27418:	mov	r4, r0
   2741c:	ldr	r0, [sp, #36]	; 0x24
   27420:	ldr	r5, [sp, #32]
   27424:	cmp	r0, #0
   27428:	beq	28c68 <main@@Base+0x15970>
   2742c:	ldr	r0, [sl]
   27430:	mov	r1, #0
   27434:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   27438:	cmp	r0, #0
   2743c:	bne	27a40 <main@@Base+0x14748>
   27440:	b	28c68 <main@@Base+0x15970>
   27444:	bne	27454 <main@@Base+0x1415c>
   27448:	ldrb	r0, [r1, #2]!
   2744c:	cmp	r0, #32
   27450:	bhi	27468 <main@@Base+0x14170>
   27454:	ldr	r0, [sp, #24]
   27458:	mov	r1, r2
   2745c:	mov	r2, r9
   27460:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27464:	mov	r1, r0
   27468:	cmp	sl, r1
   2746c:	beq	26ed4 <main@@Base+0x13bdc>
   27470:	ldr	sl, [sp, #24]
   27474:	mov	r2, r9
   27478:	add	r3, sp, #36	; 0x24
   2747c:	mov	r0, sl
   27480:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   27484:	mov	r4, r0
   27488:	ldr	r0, [sp, #36]	; 0x24
   2748c:	cmp	r0, #0
   27490:	beq	28c68 <main@@Base+0x15970>
   27494:	ldr	r0, [sl]
   27498:	mov	r1, #4
   2749c:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   274a0:	ldr	r5, [sp, #32]
   274a4:	cmp	r0, #0
   274a8:	bne	27a40 <main@@Base+0x14748>
   274ac:	b	28c68 <main@@Base+0x15970>
   274b0:	ldr	r5, [sp, #32]
   274b4:	bne	274c4 <main@@Base+0x141cc>
   274b8:	ldrb	r0, [r7, #2]!
   274bc:	cmp	r0, #32
   274c0:	bhi	274d4 <main@@Base+0x141dc>
   274c4:	ldr	r0, [sp, #24]
   274c8:	mov	r2, r9
   274cc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   274d0:	mov	r7, r0
   274d4:	cmp	sl, r7
   274d8:	beq	27a58 <main@@Base+0x14760>
   274dc:	mov	r6, #0
   274e0:	cmp	r7, r9
   274e4:	str	r6, [fp, #-36]	; 0xffffffdc
   274e8:	str	r6, [fp, #-40]	; 0xffffffd8
   274ec:	str	r6, [sp, #44]	; 0x2c
   274f0:	str	r6, [sp, #40]	; 0x28
   274f4:	str	r6, [fp, #-44]	; 0xffffffd4
   274f8:	beq	27558 <main@@Base+0x14260>
   274fc:	ldr	sl, [sp, #24]
   27500:	sub	r0, fp, #40	; 0x28
   27504:	mov	r1, r7
   27508:	mov	r2, r9
   2750c:	sub	r3, fp, #44	; 0x2c
   27510:	str	r0, [sp]
   27514:	mov	r0, sl
   27518:	bl	323e8 <flatcc_json_parser_integer@@Base>
   2751c:	cmp	r0, r7
   27520:	beq	27570 <main@@Base+0x14278>
   27524:	sub	r8, fp, #44	; 0x2c
   27528:	mov	r4, r0
   2752c:	ldm	r8, {r0, r6, r8}
   27530:	cmp	r0, #0
   27534:	beq	27588 <main@@Base+0x14290>
   27538:	subs	r0, r6, #1
   2753c:	sbcs	r0, r8, #-2147483648	; 0x80000000
   27540:	bcc	275bc <main@@Base+0x142c4>
   27544:	mov	r0, sl
   27548:	mov	r1, r4
   2754c:	mov	r2, r9
   27550:	mov	r3, #8
   27554:	b	275a0 <main@@Base+0x142a8>
   27558:	ldr	sl, [sp, #24]
   2755c:	mov	r8, #0
   27560:	mov	r4, r9
   27564:	cmp	r7, r4
   27568:	bne	27610 <main@@Base+0x14318>
   2756c:	b	275d4 <main@@Base+0x142dc>
   27570:	mov	r6, #0
   27574:	mov	r8, #0
   27578:	mov	r4, r7
   2757c:	cmp	r7, r4
   27580:	bne	27610 <main@@Base+0x14318>
   27584:	b	275d4 <main@@Base+0x142dc>
   27588:	cmn	r8, #1
   2758c:	bgt	275c4 <main@@Base+0x142cc>
   27590:	mov	r0, sl
   27594:	mov	r1, r4
   27598:	mov	r2, r9
   2759c:	mov	r3, #7
   275a0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   275a4:	mov	r4, r0
   275a8:	mov	r6, #0
   275ac:	mov	r8, #0
   275b0:	cmp	r7, r4
   275b4:	bne	27610 <main@@Base+0x14318>
   275b8:	b	275d4 <main@@Base+0x142dc>
   275bc:	rsbs	r6, r6, #0
   275c0:	rsc	r8, r8, #0
   275c4:	str	r6, [sp, #40]	; 0x28
   275c8:	str	r8, [sp, #44]	; 0x2c
   275cc:	cmp	r7, r4
   275d0:	bne	27610 <main@@Base+0x14318>
   275d4:	add	r0, sp, #40	; 0x28
   275d8:	mov	r1, r7
   275dc:	mov	r2, r9
   275e0:	str	r0, [sp]
   275e4:	movw	r0, #33272	; 0x81f8
   275e8:	movt	r0, #4
   275ec:	add	r3, r0, #12
   275f0:	mov	r0, sl
   275f4:	bl	240d0 <main@@Base+0x10dd8>
   275f8:	mov	r4, r0
   275fc:	cmp	r0, r7
   27600:	cmpne	r4, r9
   27604:	beq	28c64 <main@@Base+0x1596c>
   27608:	ldr	r6, [sp, #40]	; 0x28
   2760c:	ldr	r8, [sp, #44]	; 0x2c
   27610:	orrs	r0, r6, r8
   27614:	bne	27624 <main@@Base+0x1432c>
   27618:	ldrb	r0, [sl, #8]
   2761c:	tst	r0, #2
   27620:	beq	27d24 <main@@Base+0x14a2c>
   27624:	ldr	r0, [sl]
   27628:	mov	r1, #3
   2762c:	b	277ac <main@@Base+0x144b4>
   27630:	bne	27640 <main@@Base+0x14348>
   27634:	ldrb	r0, [r7, #2]!
   27638:	cmp	r0, #32
   2763c:	bhi	27650 <main@@Base+0x14358>
   27640:	ldr	r0, [sp, #24]
   27644:	mov	r2, r9
   27648:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2764c:	mov	r7, r0
   27650:	cmp	sl, r7
   27654:	beq	27074 <main@@Base+0x13d7c>
   27658:	ldr	r5, [sp, #32]
   2765c:	mov	r6, #0
   27660:	cmp	r7, r9
   27664:	str	r6, [fp, #-36]	; 0xffffffdc
   27668:	str	r6, [fp, #-40]	; 0xffffffd8
   2766c:	str	r6, [sp, #44]	; 0x2c
   27670:	str	r6, [sp, #40]	; 0x28
   27674:	str	r6, [fp, #-44]	; 0xffffffd4
   27678:	beq	276d8 <main@@Base+0x143e0>
   2767c:	ldr	sl, [sp, #24]
   27680:	sub	r0, fp, #40	; 0x28
   27684:	mov	r1, r7
   27688:	mov	r2, r9
   2768c:	sub	r3, fp, #44	; 0x2c
   27690:	str	r0, [sp]
   27694:	mov	r0, sl
   27698:	bl	323e8 <flatcc_json_parser_integer@@Base>
   2769c:	cmp	r0, r7
   276a0:	beq	276f0 <main@@Base+0x143f8>
   276a4:	sub	r8, fp, #44	; 0x2c
   276a8:	mov	r4, r0
   276ac:	ldm	r8, {r0, r6, r8}
   276b0:	cmp	r0, #0
   276b4:	beq	27708 <main@@Base+0x14410>
   276b8:	subs	r0, r6, #1
   276bc:	sbcs	r0, r8, #-2147483648	; 0x80000000
   276c0:	bcc	2773c <main@@Base+0x14444>
   276c4:	mov	r0, sl
   276c8:	mov	r1, r4
   276cc:	mov	r2, r9
   276d0:	mov	r3, #8
   276d4:	b	27720 <main@@Base+0x14428>
   276d8:	ldr	sl, [sp, #24]
   276dc:	mov	r8, #0
   276e0:	mov	r4, r9
   276e4:	cmp	r7, r4
   276e8:	bne	27790 <main@@Base+0x14498>
   276ec:	b	27754 <main@@Base+0x1445c>
   276f0:	mov	r6, #0
   276f4:	mov	r8, #0
   276f8:	mov	r4, r7
   276fc:	cmp	r7, r4
   27700:	bne	27790 <main@@Base+0x14498>
   27704:	b	27754 <main@@Base+0x1445c>
   27708:	cmn	r8, #1
   2770c:	bgt	27744 <main@@Base+0x1444c>
   27710:	mov	r0, sl
   27714:	mov	r1, r4
   27718:	mov	r2, r9
   2771c:	mov	r3, #7
   27720:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27724:	mov	r4, r0
   27728:	mov	r6, #0
   2772c:	mov	r8, #0
   27730:	cmp	r7, r4
   27734:	bne	27790 <main@@Base+0x14498>
   27738:	b	27754 <main@@Base+0x1445c>
   2773c:	rsbs	r6, r6, #0
   27740:	rsc	r8, r8, #0
   27744:	str	r6, [sp, #40]	; 0x28
   27748:	str	r8, [sp, #44]	; 0x2c
   2774c:	cmp	r7, r4
   27750:	bne	27790 <main@@Base+0x14498>
   27754:	add	r0, sp, #40	; 0x28
   27758:	mov	r1, r7
   2775c:	mov	r2, r9
   27760:	str	r0, [sp]
   27764:	movw	r0, #33272	; 0x81f8
   27768:	movt	r0, #4
   2776c:	add	r3, r0, #48	; 0x30
   27770:	mov	r0, sl
   27774:	bl	240d0 <main@@Base+0x10dd8>
   27778:	mov	r4, r0
   2777c:	cmp	r0, r7
   27780:	cmpne	r4, r9
   27784:	beq	28c64 <main@@Base+0x1596c>
   27788:	ldr	r6, [sp, #40]	; 0x28
   2778c:	ldr	r8, [sp, #44]	; 0x2c
   27790:	orrs	r0, r6, r8
   27794:	bne	277a4 <main@@Base+0x144ac>
   27798:	ldrb	r0, [sl, #8]
   2779c:	tst	r0, #2
   277a0:	beq	27d24 <main@@Base+0x14a2c>
   277a4:	ldr	r0, [sl]
   277a8:	mov	r1, #7
   277ac:	mov	r2, #8
   277b0:	mov	r3, #8
   277b4:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   277b8:	cmp	r0, #0
   277bc:	beq	28c64 <main@@Base+0x1596c>
   277c0:	stm	r0, {r6, r8}
   277c4:	sub	r0, r9, r4
   277c8:	cmp	r0, #2
   277cc:	bge	27d30 <main@@Base+0x14a38>
   277d0:	b	27d60 <main@@Base+0x14a68>
   277d4:	cmp	r0, #34	; 0x22
   277d8:	bne	27d08 <main@@Base+0x14a10>
   277dc:	add	r1, sl, #10
   277e0:	sub	r0, r9, r1
   277e4:	cmp	r0, #2
   277e8:	blt	27aac <main@@Base+0x147b4>
   277ec:	ldrb	r0, [r1]
   277f0:	cmp	r0, #32
   277f4:	bls	27a98 <main@@Base+0x147a0>
   277f8:	mov	r8, r1
   277fc:	cmp	r8, r9
   27800:	bne	27ac4 <main@@Base+0x147cc>
   27804:	b	27afc <main@@Base+0x14804>
   27808:	bne	2781c <main@@Base+0x14524>
   2780c:	mov	r8, r1
   27810:	ldrb	r0, [r8, #1]!
   27814:	cmp	r0, #32
   27818:	bhi	2782c <main@@Base+0x14534>
   2781c:	ldr	r0, [sp, #24]
   27820:	mov	r2, r9
   27824:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27828:	mov	r8, r0
   2782c:	cmp	r8, r9
   27830:	beq	2786c <main@@Base+0x14574>
   27834:	ldrb	r0, [r8]
   27838:	cmp	r0, #58	; 0x3a
   2783c:	bne	2786c <main@@Base+0x14574>
   27840:	add	r1, r8, #1
   27844:	sub	r0, r9, r1
   27848:	cmp	r0, #2
   2784c:	blt	27b24 <main@@Base+0x1482c>
   27850:	ldrb	r0, [r1]
   27854:	cmp	r0, #32
   27858:	bls	27b14 <main@@Base+0x1481c>
   2785c:	mov	r8, r1
   27860:	cmp	r7, r8
   27864:	bne	27b3c <main@@Base+0x14844>
   27868:	b	27d08 <main@@Base+0x14a10>
   2786c:	ldr	r0, [sp, #24]
   27870:	mov	r1, r8
   27874:	mov	r2, r9
   27878:	mov	r3, #4
   2787c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27880:	b	27b30 <main@@Base+0x14838>
   27884:	bne	27894 <main@@Base+0x1459c>
   27888:	ldrb	r0, [r8, #2]!
   2788c:	cmp	r0, #32
   27890:	bhi	278a4 <main@@Base+0x145ac>
   27894:	ldr	r0, [sp, #24]
   27898:	mov	r2, r9
   2789c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   278a0:	mov	r8, r0
   278a4:	cmp	r7, r8
   278a8:	beq	27d08 <main@@Base+0x14a10>
   278ac:	mov	r5, #0
   278b0:	cmp	r8, r9
   278b4:	str	r5, [fp, #-36]	; 0xffffffdc
   278b8:	str	r5, [fp, #-40]	; 0xffffffd8
   278bc:	str	r5, [fp, #-44]	; 0xffffffd4
   278c0:	str	r5, [sp, #40]	; 0x28
   278c4:	beq	27910 <main@@Base+0x14618>
   278c8:	sub	r0, fp, #40	; 0x28
   278cc:	mov	r1, r8
   278d0:	mov	r2, r9
   278d4:	add	r3, sp, #40	; 0x28
   278d8:	str	r0, [sp]
   278dc:	ldr	r0, [sp, #24]
   278e0:	bl	323e8 <flatcc_json_parser_integer@@Base>
   278e4:	cmp	r0, r8
   278e8:	beq	27924 <main@@Base+0x1462c>
   278ec:	mov	r4, r0
   278f0:	ldr	r0, [sp, #40]	; 0x28
   278f4:	cmp	r0, #0
   278f8:	beq	27938 <main@@Base+0x14640>
   278fc:	ldr	sl, [sp, #24]
   27900:	mov	r1, r4
   27904:	mov	r2, r9
   27908:	mov	r3, #8
   2790c:	b	27954 <main@@Base+0x1465c>
   27910:	mov	r4, r9
   27914:	ldr	sl, [sp, #24]
   27918:	cmp	r8, r4
   2791c:	bne	279a0 <main@@Base+0x146a8>
   27920:	b	27968 <main@@Base+0x14670>
   27924:	mov	r4, r8
   27928:	ldr	sl, [sp, #24]
   2792c:	cmp	r8, r4
   27930:	bne	279a0 <main@@Base+0x146a8>
   27934:	b	27968 <main@@Base+0x14670>
   27938:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2793c:	cmp	r0, #0
   27940:	beq	27a80 <main@@Base+0x14788>
   27944:	ldr	sl, [sp, #24]
   27948:	mov	r1, r4
   2794c:	mov	r2, r9
   27950:	mov	r3, #7
   27954:	mov	r0, sl
   27958:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2795c:	mov	r4, r0
   27960:	cmp	r8, r4
   27964:	bne	279a0 <main@@Base+0x146a8>
   27968:	movw	r3, #33272	; 0x81f8
   2796c:	sub	r0, fp, #44	; 0x2c
   27970:	mov	r1, r8
   27974:	mov	r2, r9
   27978:	movt	r3, #4
   2797c:	str	r0, [sp]
   27980:	mov	r0, sl
   27984:	bl	24358 <main@@Base+0x11060>
   27988:	mov	r4, r0
   2798c:	cmp	r0, r8
   27990:	cmpne	r4, r9
   27994:	beq	28c64 <main@@Base+0x1596c>
   27998:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2799c:	ldr	sl, [sp, #24]
   279a0:	cmp	r5, #0
   279a4:	bne	279b4 <main@@Base+0x146bc>
   279a8:	ldrb	r0, [sl, #8]
   279ac:	tst	r0, #2
   279b0:	beq	27d20 <main@@Base+0x14a28>
   279b4:	ldr	r0, [sl]
   279b8:	mov	r1, #1
   279bc:	mov	r2, #4
   279c0:	mov	r3, #4
   279c4:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   279c8:	cmp	r0, #0
   279cc:	beq	28c64 <main@@Base+0x1596c>
   279d0:	str	r5, [r0]
   279d4:	b	27d20 <main@@Base+0x14a28>
   279d8:	ldr	r5, [sp, #32]
   279dc:	bne	279ec <main@@Base+0x146f4>
   279e0:	ldrb	r0, [r1, #2]!
   279e4:	cmp	r0, #32
   279e8:	bhi	27a00 <main@@Base+0x14708>
   279ec:	ldr	r0, [sp, #24]
   279f0:	mov	r1, r2
   279f4:	mov	r2, r9
   279f8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   279fc:	mov	r1, r0
   27a00:	cmp	sl, r1
   27a04:	beq	27a58 <main@@Base+0x14760>
   27a08:	ldr	sl, [sp, #24]
   27a0c:	mov	r2, r9
   27a10:	add	r3, sp, #36	; 0x24
   27a14:	mov	r0, sl
   27a18:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   27a1c:	mov	r4, r0
   27a20:	ldr	r0, [sp, #36]	; 0x24
   27a24:	cmp	r0, #0
   27a28:	beq	28c68 <main@@Base+0x15970>
   27a2c:	ldr	r0, [sl]
   27a30:	mov	r1, #2
   27a34:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   27a38:	cmp	r0, #0
   27a3c:	beq	28c68 <main@@Base+0x15970>
   27a40:	ldr	r1, [sp, #36]	; 0x24
   27a44:	str	r1, [r0]
   27a48:	sub	r0, r9, r4
   27a4c:	cmp	r0, #2
   27a50:	bge	27d30 <main@@Base+0x14a38>
   27a54:	b	27d60 <main@@Base+0x14a68>
   27a58:	ldr	r0, [sp, #24]
   27a5c:	mov	r1, sl
   27a60:	mov	sl, r0
   27a64:	mov	r2, r9
   27a68:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   27a6c:	mov	r4, r0
   27a70:	sub	r0, r9, r4
   27a74:	cmp	r0, #2
   27a78:	bge	27d30 <main@@Base+0x14a38>
   27a7c:	b	27d60 <main@@Base+0x14a68>
   27a80:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27a84:	str	r5, [fp, #-44]	; 0xffffffd4
   27a88:	ldr	sl, [sp, #24]
   27a8c:	cmp	r8, r4
   27a90:	bne	279a0 <main@@Base+0x146a8>
   27a94:	b	27968 <main@@Base+0x14670>
   27a98:	bne	27aac <main@@Base+0x147b4>
   27a9c:	mov	r8, r1
   27aa0:	ldrb	r0, [r8, #1]!
   27aa4:	cmp	r0, #32
   27aa8:	bhi	27abc <main@@Base+0x147c4>
   27aac:	ldr	r0, [sp, #24]
   27ab0:	mov	r2, r9
   27ab4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27ab8:	mov	r8, r0
   27abc:	cmp	r8, r9
   27ac0:	beq	27afc <main@@Base+0x14804>
   27ac4:	ldrb	r0, [r8]
   27ac8:	cmp	r0, #58	; 0x3a
   27acc:	bne	27afc <main@@Base+0x14804>
   27ad0:	add	r1, r8, #1
   27ad4:	sub	r0, r9, r1
   27ad8:	cmp	r0, #2
   27adc:	blt	27c7c <main@@Base+0x14984>
   27ae0:	ldrb	r0, [r1]
   27ae4:	cmp	r0, #32
   27ae8:	bls	27c6c <main@@Base+0x14974>
   27aec:	mov	r8, r1
   27af0:	cmp	r7, r8
   27af4:	bne	27c94 <main@@Base+0x1499c>
   27af8:	b	27d08 <main@@Base+0x14a10>
   27afc:	ldr	r0, [sp, #24]
   27b00:	mov	r1, r8
   27b04:	mov	r2, r9
   27b08:	mov	r3, #4
   27b0c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27b10:	b	27c88 <main@@Base+0x14990>
   27b14:	bne	27b24 <main@@Base+0x1482c>
   27b18:	ldrb	r0, [r8, #2]!
   27b1c:	cmp	r0, #32
   27b20:	bhi	27b34 <main@@Base+0x1483c>
   27b24:	ldr	r0, [sp, #24]
   27b28:	mov	r2, r9
   27b2c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27b30:	mov	r8, r0
   27b34:	cmp	r7, r8
   27b38:	beq	27d08 <main@@Base+0x14a10>
   27b3c:	mov	r5, #0
   27b40:	cmp	r8, r9
   27b44:	str	r5, [fp, #-36]	; 0xffffffdc
   27b48:	str	r5, [fp, #-40]	; 0xffffffd8
   27b4c:	str	r5, [fp, #-44]	; 0xffffffd4
   27b50:	str	r5, [sp, #40]	; 0x28
   27b54:	beq	27bb0 <main@@Base+0x148b8>
   27b58:	sub	r0, fp, #40	; 0x28
   27b5c:	mov	r1, r8
   27b60:	mov	r2, r9
   27b64:	add	r3, sp, #40	; 0x28
   27b68:	str	r0, [sp]
   27b6c:	ldr	r0, [sp, #24]
   27b70:	bl	323e8 <flatcc_json_parser_integer@@Base>
   27b74:	cmp	r0, r8
   27b78:	beq	27bc0 <main@@Base+0x148c8>
   27b7c:	mov	r4, r0
   27b80:	ldr	r0, [sp, #40]	; 0x28
   27b84:	cmp	r0, #0
   27b88:	beq	27bd0 <main@@Base+0x148d8>
   27b8c:	ldr	r0, [sp, #24]
   27b90:	mov	r1, r4
   27b94:	mov	r2, r9
   27b98:	mov	r3, #8
   27b9c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27ba0:	mov	r4, r0
   27ba4:	cmp	r8, r4
   27ba8:	bne	27c48 <main@@Base+0x14950>
   27bac:	b	27c10 <main@@Base+0x14918>
   27bb0:	mov	r4, r9
   27bb4:	cmp	r8, r4
   27bb8:	bne	27c48 <main@@Base+0x14950>
   27bbc:	b	27c10 <main@@Base+0x14918>
   27bc0:	mov	r4, r8
   27bc4:	cmp	r8, r4
   27bc8:	bne	27c48 <main@@Base+0x14950>
   27bcc:	b	27c10 <main@@Base+0x14918>
   27bd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27bd4:	cmp	r0, #0
   27bd8:	beq	27c00 <main@@Base+0x14908>
   27bdc:	ldr	r0, [sp, #24]
   27be0:	mov	r1, r4
   27be4:	mov	r2, r9
   27be8:	mov	r3, #7
   27bec:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27bf0:	mov	r4, r0
   27bf4:	cmp	r8, r4
   27bf8:	bne	27c48 <main@@Base+0x14950>
   27bfc:	b	27c10 <main@@Base+0x14918>
   27c00:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27c04:	str	r5, [fp, #-44]	; 0xffffffd4
   27c08:	cmp	r8, r4
   27c0c:	bne	27c48 <main@@Base+0x14950>
   27c10:	sub	r0, fp, #44	; 0x2c
   27c14:	mov	r1, r8
   27c18:	mov	r2, r9
   27c1c:	str	r0, [sp]
   27c20:	movw	r0, #33272	; 0x81f8
   27c24:	movt	r0, #4
   27c28:	add	r3, r0, #36	; 0x24
   27c2c:	ldr	r0, [sp, #24]
   27c30:	bl	24358 <main@@Base+0x11060>
   27c34:	mov	r4, r0
   27c38:	cmp	r0, r8
   27c3c:	cmpne	r4, r9
   27c40:	beq	28c64 <main@@Base+0x1596c>
   27c44:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27c48:	cmp	r5, #0
   27c4c:	bne	27c60 <main@@Base+0x14968>
   27c50:	ldr	r0, [sp, #24]
   27c54:	ldrb	r0, [r0, #8]
   27c58:	tst	r0, #2
   27c5c:	beq	27ec0 <main@@Base+0x14bc8>
   27c60:	ldr	r0, [sp, #24]
   27c64:	mov	r1, #6
   27c68:	b	27ea4 <main@@Base+0x14bac>
   27c6c:	bne	27c7c <main@@Base+0x14984>
   27c70:	ldrb	r0, [r8, #2]!
   27c74:	cmp	r0, #32
   27c78:	bhi	27c8c <main@@Base+0x14994>
   27c7c:	ldr	r0, [sp, #24]
   27c80:	mov	r2, r9
   27c84:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27c88:	mov	r8, r0
   27c8c:	cmp	r7, r8
   27c90:	beq	27d08 <main@@Base+0x14a10>
   27c94:	mov	r5, #0
   27c98:	cmp	r8, r9
   27c9c:	str	r5, [fp, #-36]	; 0xffffffdc
   27ca0:	str	r5, [fp, #-40]	; 0xffffffd8
   27ca4:	str	r5, [fp, #-44]	; 0xffffffd4
   27ca8:	str	r5, [sp, #40]	; 0x28
   27cac:	beq	27dec <main@@Base+0x14af4>
   27cb0:	sub	r0, fp, #40	; 0x28
   27cb4:	mov	r1, r8
   27cb8:	mov	r2, r9
   27cbc:	add	r3, sp, #40	; 0x28
   27cc0:	str	r0, [sp]
   27cc4:	ldr	r0, [sp, #24]
   27cc8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   27ccc:	cmp	r0, r8
   27cd0:	beq	27dfc <main@@Base+0x14b04>
   27cd4:	mov	r4, r0
   27cd8:	ldr	r0, [sp, #40]	; 0x28
   27cdc:	cmp	r0, #0
   27ce0:	beq	27e0c <main@@Base+0x14b14>
   27ce4:	ldr	r0, [sp, #24]
   27ce8:	mov	r1, r4
   27cec:	mov	r2, r9
   27cf0:	mov	r3, #8
   27cf4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27cf8:	mov	r4, r0
   27cfc:	cmp	r8, r4
   27d00:	bne	27e84 <main@@Base+0x14b8c>
   27d04:	b	27e4c <main@@Base+0x14b54>
   27d08:	ldr	sl, [sp, #24]
   27d0c:	mov	r1, r7
   27d10:	mov	r0, sl
   27d14:	mov	r2, r9
   27d18:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   27d1c:	mov	r4, r0
   27d20:	ldr	r5, [sp, #32]
   27d24:	sub	r0, r9, r4
   27d28:	cmp	r0, #2
   27d2c:	blt	27d60 <main@@Base+0x14a68>
   27d30:	ldrb	r0, [r4]
   27d34:	cmp	r0, #32
   27d38:	bls	27d4c <main@@Base+0x14a54>
   27d3c:	mov	r2, r4
   27d40:	cmp	r2, r9
   27d44:	bne	27d7c <main@@Base+0x14a84>
   27d48:	b	27fd4 <main@@Base+0x14cdc>
   27d4c:	bne	27d60 <main@@Base+0x14a68>
   27d50:	mov	r2, r4
   27d54:	ldrb	r0, [r2, #1]!
   27d58:	cmp	r0, #32
   27d5c:	bhi	27d74 <main@@Base+0x14a7c>
   27d60:	mov	r0, sl
   27d64:	mov	r1, r4
   27d68:	mov	r2, r9
   27d6c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27d70:	mov	r2, r0
   27d74:	cmp	r2, r9
   27d78:	beq	27fd4 <main@@Base+0x14cdc>
   27d7c:	ldrb	r0, [r2]
   27d80:	cmp	r0, #44	; 0x2c
   27d84:	bne	27fe8 <main@@Base+0x14cf0>
   27d88:	add	r1, r2, #1
   27d8c:	sub	r0, r9, r1
   27d90:	cmp	r0, #2
   27d94:	blt	27dc4 <main@@Base+0x14acc>
   27d98:	ldrb	r0, [r1]
   27d9c:	cmp	r0, #32
   27da0:	bls	27db4 <main@@Base+0x14abc>
   27da4:	mov	r2, r1
   27da8:	cmp	r2, r9
   27dac:	bne	27ddc <main@@Base+0x14ae4>
   27db0:	b	28020 <main@@Base+0x14d28>
   27db4:	bne	27dc4 <main@@Base+0x14acc>
   27db8:	ldrb	r0, [r2, #2]!
   27dbc:	cmp	r0, #32
   27dc0:	bhi	27dd4 <main@@Base+0x14adc>
   27dc4:	mov	r0, sl
   27dc8:	mov	r2, r9
   27dcc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27dd0:	mov	r2, r0
   27dd4:	cmp	r2, r9
   27dd8:	beq	28020 <main@@Base+0x14d28>
   27ddc:	ldrb	r0, [r2]
   27de0:	cmp	r0, #125	; 0x7d
   27de4:	bne	26800 <main@@Base+0x13508>
   27de8:	b	27ff0 <main@@Base+0x14cf8>
   27dec:	mov	r4, r9
   27df0:	cmp	r8, r4
   27df4:	bne	27e84 <main@@Base+0x14b8c>
   27df8:	b	27e4c <main@@Base+0x14b54>
   27dfc:	mov	r4, r8
   27e00:	cmp	r8, r4
   27e04:	bne	27e84 <main@@Base+0x14b8c>
   27e08:	b	27e4c <main@@Base+0x14b54>
   27e0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e10:	cmp	r0, #0
   27e14:	beq	27e3c <main@@Base+0x14b44>
   27e18:	ldr	r0, [sp, #24]
   27e1c:	mov	r1, r4
   27e20:	mov	r2, r9
   27e24:	mov	r3, #7
   27e28:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27e2c:	mov	r4, r0
   27e30:	cmp	r8, r4
   27e34:	bne	27e84 <main@@Base+0x14b8c>
   27e38:	b	27e4c <main@@Base+0x14b54>
   27e3c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   27e40:	str	r5, [fp, #-44]	; 0xffffffd4
   27e44:	cmp	r8, r4
   27e48:	bne	27e84 <main@@Base+0x14b8c>
   27e4c:	sub	r0, fp, #44	; 0x2c
   27e50:	mov	r1, r8
   27e54:	mov	r2, r9
   27e58:	str	r0, [sp]
   27e5c:	movw	r0, #33272	; 0x81f8
   27e60:	movt	r0, #4
   27e64:	add	r3, r0, #60	; 0x3c
   27e68:	ldr	r0, [sp, #24]
   27e6c:	bl	24358 <main@@Base+0x11060>
   27e70:	mov	r4, r0
   27e74:	cmp	r0, r8
   27e78:	cmpne	r4, r9
   27e7c:	beq	28c64 <main@@Base+0x1596c>
   27e80:	ldr	r5, [fp, #-44]	; 0xffffffd4
   27e84:	cmp	r5, #0
   27e88:	bne	27e9c <main@@Base+0x14ba4>
   27e8c:	ldr	r0, [sp, #24]
   27e90:	ldrb	r0, [r0, #8]
   27e94:	tst	r0, #2
   27e98:	beq	27ec0 <main@@Base+0x14bc8>
   27e9c:	ldr	r0, [sp, #24]
   27ea0:	mov	r1, #8
   27ea4:	mov	r2, #4
   27ea8:	mov	r3, #4
   27eac:	ldr	r0, [r0]
   27eb0:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   27eb4:	cmp	r0, #0
   27eb8:	beq	28c64 <main@@Base+0x1596c>
   27ebc:	str	r5, [r0]
   27ec0:	ldr	sl, [sp, #24]
   27ec4:	b	27d20 <main@@Base+0x14a28>
   27ec8:	bne	27ed8 <main@@Base+0x14be0>
   27ecc:	ldrb	r0, [r4, #2]!
   27ed0:	cmp	r0, #32
   27ed4:	bhi	27ee8 <main@@Base+0x14bf0>
   27ed8:	mov	r0, sl
   27edc:	mov	r2, r9
   27ee0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   27ee4:	mov	r4, r0
   27ee8:	mov	ip, r5
   27eec:	cmp	r5, r4
   27ef0:	beq	25cc4 <main@@Base+0x129cc>
   27ef4:	ldr	r0, [sl]
   27ef8:	mov	r1, #2
   27efc:	bl	2cd8c <flatcc_builder_start_table@@Base>
   27f00:	cmp	r0, #0
   27f04:	bne	28c68 <main@@Base+0x15970>
   27f08:	cmp	r4, r9
   27f0c:	beq	27f50 <main@@Base+0x14c58>
   27f10:	ldrb	r0, [r4]
   27f14:	cmp	r0, #123	; 0x7b
   27f18:	bne	27f50 <main@@Base+0x14c58>
   27f1c:	ldr	r5, [sp, #32]
   27f20:	add	r1, r4, #1
   27f24:	sub	r0, r9, r1
   27f28:	cmp	r0, #2
   27f2c:	blt	2803c <main@@Base+0x14d44>
   27f30:	ldrb	r0, [r1]
   27f34:	cmp	r0, #32
   27f38:	bls	2802c <main@@Base+0x14d34>
   27f3c:	mov	r4, r1
   27f40:	cmp	r4, r9
   27f44:	mov	r2, r9
   27f48:	bne	28058 <main@@Base+0x14d60>
   27f4c:	b	28098 <main@@Base+0x14da0>
   27f50:	mov	r0, sl
   27f54:	mov	r1, r4
   27f58:	mov	r2, r9
   27f5c:	mov	r3, #21
   27f60:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   27f64:	ldr	r5, [sp, #32]
   27f68:	mov	r4, r0
   27f6c:	ldr	r0, [sl, #24]
   27f70:	cmp	r0, #0
   27f74:	beq	28b84 <main@@Base+0x1588c>
   27f78:	b	28c68 <main@@Base+0x15970>
   27f7c:	mov	r4, r9
   27f80:	ldr	r0, [sl, #24]
   27f84:	cmp	r0, #0
   27f88:	beq	28aa4 <main@@Base+0x157ac>
   27f8c:	b	28c68 <main@@Base+0x15970>
   27f90:	cmp	r0, #125	; 0x7d
   27f94:	bne	289cc <main@@Base+0x156d4>
   27f98:	add	r1, r2, #1
   27f9c:	sub	r0, r9, r1
   27fa0:	cmp	r0, #2
   27fa4:	blt	28a88 <main@@Base+0x15790>
   27fa8:	ldrb	r0, [r1]
   27fac:	cmp	r0, #32
   27fb0:	bls	28a74 <main@@Base+0x1577c>
   27fb4:	mov	r4, r1
   27fb8:	ldr	r0, [sl, #24]
   27fbc:	cmp	r0, #0
   27fc0:	beq	28aa4 <main@@Base+0x157ac>
   27fc4:	b	28c68 <main@@Base+0x15970>
   27fc8:	mov	r0, sl
   27fcc:	mov	r1, r9
   27fd0:	b	289d4 <main@@Base+0x156dc>
   27fd4:	mov	r4, r9
   27fd8:	ldr	r0, [sl, #24]
   27fdc:	cmp	r0, #0
   27fe0:	beq	25e84 <main@@Base+0x12b8c>
   27fe4:	b	28c68 <main@@Base+0x15970>
   27fe8:	cmp	r0, #125	; 0x7d
   27fec:	bne	28ad0 <main@@Base+0x157d8>
   27ff0:	add	r1, r2, #1
   27ff4:	sub	r0, r9, r1
   27ff8:	cmp	r0, #2
   27ffc:	blt	28b0c <main@@Base+0x15814>
   28000:	ldrb	r0, [r1]
   28004:	cmp	r0, #32
   28008:	bls	28af8 <main@@Base+0x15800>
   2800c:	mov	r4, r1
   28010:	ldr	r0, [sl, #24]
   28014:	cmp	r0, #0
   28018:	beq	25e84 <main@@Base+0x12b8c>
   2801c:	b	28c68 <main@@Base+0x15970>
   28020:	mov	r0, sl
   28024:	mov	r1, r9
   28028:	b	28ad8 <main@@Base+0x157e0>
   2802c:	bne	2803c <main@@Base+0x14d44>
   28030:	ldrb	r0, [r4, #2]!
   28034:	cmp	r0, #32
   28038:	bhi	2804c <main@@Base+0x14d54>
   2803c:	mov	r0, sl
   28040:	mov	r2, r9
   28044:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28048:	mov	r4, r0
   2804c:	cmp	r4, r9
   28050:	mov	r2, r9
   28054:	beq	28098 <main@@Base+0x14da0>
   28058:	ldrb	r0, [r4]
   2805c:	cmp	r0, #125	; 0x7d
   28060:	bne	28094 <main@@Base+0x14d9c>
   28064:	add	r1, r4, #1
   28068:	sub	r0, r9, r1
   2806c:	cmp	r0, #2
   28070:	blt	28b68 <main@@Base+0x15870>
   28074:	ldrb	r0, [r1]
   28078:	cmp	r0, #32
   2807c:	bhi	28a60 <main@@Base+0x15768>
   28080:	bne	28b68 <main@@Base+0x15870>
   28084:	ldrb	r0, [r4, #2]!
   28088:	cmp	r0, #32
   2808c:	bls	28b68 <main@@Base+0x15870>
   28090:	b	28b78 <main@@Base+0x15880>
   28094:	mov	r2, r4
   28098:	cmp	r2, r9
   2809c:	mov	r1, r9
   280a0:	beq	280f8 <main@@Base+0x14e00>
   280a4:	ldrb	r0, [r2]
   280a8:	cmp	r0, #46	; 0x2e
   280ac:	beq	280cc <main@@Base+0x14dd4>
   280b0:	cmp	r0, #34	; 0x22
   280b4:	bne	280e8 <main@@Base+0x14df0>
   280b8:	ldr	r0, [sp, #28]
   280bc:	mov	r1, #0
   280c0:	str	r1, [r0]
   280c4:	add	r1, r2, #1
   280c8:	b	280f8 <main@@Base+0x14e00>
   280cc:	mov	r1, r2
   280d0:	mov	r0, sl
   280d4:	mov	r2, r9
   280d8:	mov	r3, #5
   280dc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   280e0:	mov	r1, r0
   280e4:	b	280f8 <main@@Base+0x14e00>
   280e8:	ldr	r0, [sp, #28]
   280ec:	mov	r1, #1
   280f0:	str	r1, [r0]
   280f4:	mov	r1, r2
   280f8:	sub	r0, r9, r1
   280fc:	mov	r2, #8
   28100:	cmp	r0, #8
   28104:	movcs	r0, r2
   28108:	sub	r7, r0, #1
   2810c:	cmp	r7, #7
   28110:	bhi	28398 <main@@Base+0x150a0>
   28114:	add	r0, pc, #32
   28118:	mov	r8, #0
   2811c:	mov	ip, #0
   28120:	mov	lr, #0
   28124:	mov	r6, #0
   28128:	mov	r3, #0
   2812c:	mov	r5, #0
   28130:	mov	r2, #0
   28134:	mov	r4, #0
   28138:	ldr	pc, [r0, r7, lsl #2]
   2813c:	andeq	r8, r2, r0, lsr #3
   28140:	muleq	r2, r8, r1
   28144:	muleq	r2, r0, r1
   28148:	andeq	r8, r2, r8, lsl #3
   2814c:	andeq	r8, r2, ip, ror r1
   28150:	andeq	r8, r2, r0, ror r1
   28154:	andeq	r8, r2, r0, ror #2
   28158:	andeq	r8, r2, ip, asr r1
   2815c:	ldrb	ip, [r1, #7]
   28160:	ldrb	r0, [r1, #6]
   28164:	mov	lr, r8
   28168:	orr	r0, ip, r0, lsl #8
   2816c:	mov	r8, r0
   28170:	ldrb	r0, [r1, #5]
   28174:	mov	r6, lr
   28178:	orr	r8, r8, r0, lsl #16
   2817c:	ldrb	r0, [r1, #4]
   28180:	mov	r3, r6
   28184:	orr	r8, r8, r0, lsl #24
   28188:	ldrb	r0, [r1, #3]
   2818c:	orr	r5, r0, r3
   28190:	ldrb	r0, [r1, #2]
   28194:	orr	r2, r5, r0, lsl #8
   28198:	ldrb	r0, [r1, #1]
   2819c:	orr	r4, r2, r0, lsl #16
   281a0:	ldrb	r2, [r1]
   281a4:	movw	r0, #25186	; 0x6262
   281a8:	movw	r3, #24929	; 0x6161
   281ac:	movt	r0, #24418	; 0x5f62
   281b0:	movt	r3, #24929	; 0x6161
   281b4:	eor	r0, r8, r0
   281b8:	orr	r2, r4, r2, lsl #24
   281bc:	eor	r2, r2, r3
   281c0:	orrs	r0, r0, r2
   281c4:	bne	28398 <main@@Base+0x150a0>
   281c8:	add	r4, r1, #8
   281cc:	mov	r0, #8
   281d0:	sub	lr, r9, r4
   281d4:	cmp	lr, #8
   281d8:	movcc	r0, lr
   281dc:	sub	r6, r0, #1
   281e0:	cmp	r6, #7
   281e4:	bhi	2840c <main@@Base+0x15114>
   281e8:	str	r4, [sp, #8]
   281ec:	add	r8, pc, #32
   281f0:	mov	r2, #0
   281f4:	mov	ip, #0
   281f8:	mov	sl, #0
   281fc:	mov	r5, #0
   28200:	mov	r7, #0
   28204:	mov	r4, #0
   28208:	mov	r0, #0
   2820c:	mov	r3, #0
   28210:	ldr	pc, [r8, r6, lsl #2]
   28214:	andeq	r8, r2, r8, ror r2
   28218:	andeq	r8, r2, r0, ror r2
   2821c:	andeq	r8, r2, r8, ror #4
   28220:	andeq	r8, r2, r0, ror #4
   28224:	andeq	r8, r2, r4, asr r2
   28228:	andeq	r8, r2, r8, asr #4
   2822c:	andeq	r8, r2, r8, lsr r2
   28230:	andeq	r8, r2, r4, lsr r2
   28234:	ldrb	ip, [r1, #15]
   28238:	ldrb	r0, [r1, #14]
   2823c:	mov	sl, r2
   28240:	orr	r0, ip, r0, lsl #8
   28244:	mov	r2, r0
   28248:	ldrb	r0, [r1, #13]
   2824c:	mov	r5, sl
   28250:	orr	r2, r2, r0, lsl #16
   28254:	ldrb	r0, [r1, #12]
   28258:	mov	r7, r5
   2825c:	orr	r2, r2, r0, lsl #24
   28260:	ldrb	r0, [r1, #11]
   28264:	orr	r4, r0, r7
   28268:	ldrb	r0, [r1, #10]
   2826c:	orr	r0, r4, r0, lsl #8
   28270:	ldrb	r3, [r1, #9]
   28274:	orr	r3, r0, r3, lsl #16
   28278:	ldr	r4, [sp, #8]
   2827c:	movw	r0, #29791	; 0x745f
   28280:	movt	r0, #24946	; 0x6172
   28284:	eor	r7, r2, r0
   28288:	ldrb	r0, [r4]
   2828c:	orr	r0, r3, r0, lsl #24
   28290:	movw	r3, #29556	; 0x7374
   28294:	movt	r3, #25183	; 0x625f
   28298:	eor	r0, r0, r3
   2829c:	orrs	r3, r7, r0
   282a0:	bne	283a0 <main@@Base+0x150a8>
   282a4:	add	r8, r1, #16
   282a8:	ldr	sl, [sp, #24]
   282ac:	mov	r2, #8
   282b0:	sub	ip, r9, r8
   282b4:	cmp	ip, #8
   282b8:	movcc	r2, ip
   282bc:	sub	r7, r2, #1
   282c0:	cmp	r7, #7
   282c4:	bhi	28594 <main@@Base+0x1529c>
   282c8:	add	r0, pc, #20
   282cc:	mov	r2, #0
   282d0:	mov	r3, #0
   282d4:	mov	r6, #0
   282d8:	mov	r5, #0
   282dc:	mov	r4, #0
   282e0:	ldr	pc, [r0, r7, lsl #2]
   282e4:	andeq	r8, r2, r8, lsr #6
   282e8:	andeq	r8, r2, r0, lsr #6
   282ec:	andeq	r8, r2, r8, lsl r3
   282f0:	andeq	r8, r2, ip, lsl #6
   282f4:	andeq	r8, r2, r4, lsl #6
   282f8:	andeq	r8, r2, r4, lsl #6
   282fc:	andeq	r8, r2, r4, lsl #6
   28300:	andeq	r8, r2, r4, lsl #6
   28304:	ldrb	r0, [r1, #20]
   28308:	lsl	r3, r0, #24
   2830c:	ldrb	r0, [r1, #19]
   28310:	orr	r6, r0, r2
   28314:	mov	r2, r3
   28318:	ldrb	r0, [r1, #18]
   2831c:	orr	r5, r6, r0, lsl #8
   28320:	ldrb	r0, [r1, #17]
   28324:	orr	r4, r5, r0, lsl #16
   28328:	ldrb	r0, [r8]
   2832c:	movw	r3, #25968	; 0x6570
   28330:	and	r2, r2, #-16777216	; 0xff000000
   28334:	movt	r3, #29556	; 0x7374
   28338:	eor	r2, r2, #1929379840	; 0x73000000
   2833c:	orr	r0, r4, r0, lsl #24
   28340:	eor	r0, r0, r3
   28344:	orrs	r0, r2, r0
   28348:	bne	28594 <main@@Base+0x1529c>
   2834c:	cmp	ip, #6
   28350:	blt	28594 <main@@Base+0x1529c>
   28354:	ldr	r3, [sp, #28]
   28358:	mov	r2, r1
   2835c:	ldrb	r0, [r2, #21]!
   28360:	ldr	r3, [r3]
   28364:	cmp	r3, #0
   28368:	beq	2844c <main@@Base+0x15154>
   2836c:	cmp	r0, #33	; 0x21
   28370:	bcc	2837c <main@@Base+0x15084>
   28374:	cmp	r0, #58	; 0x3a
   28378:	bne	28594 <main@@Base+0x1529c>
   2837c:	ldr	r0, [sp, #28]
   28380:	mov	r1, #0
   28384:	str	r1, [r0]
   28388:	sub	r0, r9, r2
   2838c:	cmp	r0, #2
   28390:	bge	28464 <main@@Base+0x1516c>
   28394:	b	28540 <main@@Base+0x15248>
   28398:	mov	r0, sl
   2839c:	b	2859c <main@@Base+0x152a4>
   283a0:	movw	r3, #29440	; 0x7300
   283a4:	ldr	sl, [sp, #24]
   283a8:	bic	r2, r2, #255	; 0xff
   283ac:	movt	r3, #25968	; 0x6570
   283b0:	eor	r2, r2, r3
   283b4:	orrs	r0, r2, r0
   283b8:	bne	2840c <main@@Base+0x15114>
   283bc:	ldr	r5, [sp, #32]
   283c0:	cmp	lr, #8
   283c4:	blt	284f0 <main@@Base+0x151f8>
   283c8:	ldr	r3, [sp, #28]
   283cc:	mov	r2, r1
   283d0:	ldrb	r0, [r2, #15]!
   283d4:	ldr	r3, [r3]
   283d8:	cmp	r3, #0
   283dc:	beq	28418 <main@@Base+0x15120>
   283e0:	cmp	r0, #33	; 0x21
   283e4:	bcc	283f0 <main@@Base+0x150f8>
   283e8:	cmp	r0, #58	; 0x3a
   283ec:	bne	284f0 <main@@Base+0x151f8>
   283f0:	ldr	r0, [sp, #28]
   283f4:	mov	r1, #0
   283f8:	str	r1, [r0]
   283fc:	sub	r0, r9, r2
   28400:	cmp	r0, #2
   28404:	bge	28430 <main@@Base+0x15138>
   28408:	b	28494 <main@@Base+0x1519c>
   2840c:	mov	r0, sl
   28410:	mov	r1, r4
   28414:	b	2859c <main@@Base+0x152a4>
   28418:	cmp	r0, #34	; 0x22
   2841c:	bne	284f0 <main@@Base+0x151f8>
   28420:	add	r2, r1, #16
   28424:	sub	r0, r9, r2
   28428:	cmp	r0, #2
   2842c:	blt	28494 <main@@Base+0x1519c>
   28430:	ldrb	r0, [r2]
   28434:	cmp	r0, #32
   28438:	bls	28480 <main@@Base+0x15188>
   2843c:	mov	r7, r2
   28440:	cmp	r7, r9
   28444:	bne	284b0 <main@@Base+0x151b8>
   28448:	b	28514 <main@@Base+0x1521c>
   2844c:	cmp	r0, #34	; 0x22
   28450:	bne	28594 <main@@Base+0x1529c>
   28454:	add	r2, r1, #22
   28458:	sub	r0, r9, r2
   2845c:	cmp	r0, #2
   28460:	blt	28540 <main@@Base+0x15248>
   28464:	ldrb	r0, [r2]
   28468:	cmp	r0, #32
   2846c:	bls	2852c <main@@Base+0x15234>
   28470:	mov	r7, r2
   28474:	cmp	r7, r9
   28478:	bne	2855c <main@@Base+0x15264>
   2847c:	b	28674 <main@@Base+0x1537c>
   28480:	bne	28494 <main@@Base+0x1519c>
   28484:	mov	r7, r2
   28488:	ldrb	r0, [r7, #1]!
   2848c:	cmp	r0, #32
   28490:	bhi	284a8 <main@@Base+0x151b0>
   28494:	mov	r1, r2
   28498:	mov	r0, sl
   2849c:	mov	r2, r9
   284a0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   284a4:	mov	r7, r0
   284a8:	cmp	r7, r9
   284ac:	beq	28514 <main@@Base+0x1521c>
   284b0:	ldrb	r0, [r7]
   284b4:	cmp	r0, #58	; 0x3a
   284b8:	bne	28514 <main@@Base+0x1521c>
   284bc:	add	r1, r7, #1
   284c0:	sub	r0, r9, r1
   284c4:	cmp	r0, #2
   284c8:	blt	286a8 <main@@Base+0x153b0>
   284cc:	ldrb	r0, [r1]
   284d0:	cmp	r0, #32
   284d4:	bls	2868c <main@@Base+0x15394>
   284d8:	ldr	sl, [sp, #24]
   284dc:	ldr	r5, [sp, #32]
   284e0:	ldr	r4, [sp, #8]
   284e4:	mov	r7, r1
   284e8:	cmp	r4, r7
   284ec:	bne	286c0 <main@@Base+0x153c8>
   284f0:	mov	r0, sl
   284f4:	mov	r1, r4
   284f8:	mov	r2, r9
   284fc:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   28500:	mov	r4, r0
   28504:	sub	r0, r9, r4
   28508:	cmp	r0, #2
   2850c:	blt	285e8 <main@@Base+0x152f0>
   28510:	b	285b8 <main@@Base+0x152c0>
   28514:	mov	r0, sl
   28518:	mov	r1, r7
   2851c:	mov	r2, r9
   28520:	mov	r3, #4
   28524:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28528:	b	286b4 <main@@Base+0x153bc>
   2852c:	bne	28540 <main@@Base+0x15248>
   28530:	mov	r7, r2
   28534:	ldrb	r0, [r7, #1]!
   28538:	cmp	r0, #32
   2853c:	bhi	28554 <main@@Base+0x1525c>
   28540:	mov	r1, r2
   28544:	mov	r0, sl
   28548:	mov	r2, r9
   2854c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28550:	mov	r7, r0
   28554:	cmp	r7, r9
   28558:	beq	28674 <main@@Base+0x1537c>
   2855c:	ldrb	r0, [r7]
   28560:	cmp	r0, #58	; 0x3a
   28564:	bne	28674 <main@@Base+0x1537c>
   28568:	add	r1, r7, #1
   2856c:	sub	r0, r9, r1
   28570:	cmp	r0, #2
   28574:	blt	28860 <main@@Base+0x15568>
   28578:	ldrb	r0, [r1]
   2857c:	cmp	r0, #32
   28580:	bls	2884c <main@@Base+0x15554>
   28584:	ldr	sl, [sp, #24]
   28588:	mov	r7, r1
   2858c:	cmp	r8, r7
   28590:	bne	28878 <main@@Base+0x15580>
   28594:	mov	r0, sl
   28598:	mov	r1, r8
   2859c:	mov	r2, r9
   285a0:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   285a4:	mov	r4, r0
   285a8:	ldr	r5, [sp, #32]
   285ac:	sub	r0, r9, r4
   285b0:	cmp	r0, #2
   285b4:	blt	285e8 <main@@Base+0x152f0>
   285b8:	ldrb	r0, [r4]
   285bc:	cmp	r0, #32
   285c0:	bls	285d4 <main@@Base+0x152dc>
   285c4:	mov	r2, r4
   285c8:	cmp	r2, r9
   285cc:	bne	28604 <main@@Base+0x1530c>
   285d0:	b	289e4 <main@@Base+0x156ec>
   285d4:	bne	285e8 <main@@Base+0x152f0>
   285d8:	mov	r2, r4
   285dc:	ldrb	r0, [r2, #1]!
   285e0:	cmp	r0, #32
   285e4:	bhi	285fc <main@@Base+0x15304>
   285e8:	mov	r0, sl
   285ec:	mov	r1, r4
   285f0:	mov	r2, r9
   285f4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   285f8:	mov	r2, r0
   285fc:	cmp	r2, r9
   28600:	beq	289e4 <main@@Base+0x156ec>
   28604:	ldrb	r0, [r2]
   28608:	cmp	r0, #44	; 0x2c
   2860c:	bne	289f8 <main@@Base+0x15700>
   28610:	add	r1, r2, #1
   28614:	sub	r0, r9, r1
   28618:	cmp	r0, #2
   2861c:	blt	2864c <main@@Base+0x15354>
   28620:	ldrb	r0, [r1]
   28624:	cmp	r0, #32
   28628:	bls	2863c <main@@Base+0x15344>
   2862c:	mov	r2, r1
   28630:	cmp	r2, r9
   28634:	bne	28664 <main@@Base+0x1536c>
   28638:	b	28a38 <main@@Base+0x15740>
   2863c:	bne	2864c <main@@Base+0x15354>
   28640:	ldrb	r0, [r2, #2]!
   28644:	cmp	r0, #32
   28648:	bhi	2865c <main@@Base+0x15364>
   2864c:	mov	r0, sl
   28650:	mov	r2, r9
   28654:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28658:	mov	r2, r0
   2865c:	cmp	r2, r9
   28660:	beq	28a38 <main@@Base+0x15740>
   28664:	ldrb	r0, [r2]
   28668:	cmp	r0, #125	; 0x7d
   2866c:	bne	28098 <main@@Base+0x14da0>
   28670:	b	28a44 <main@@Base+0x1574c>
   28674:	mov	r0, sl
   28678:	mov	r1, r7
   2867c:	mov	r2, r9
   28680:	mov	r3, #4
   28684:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28688:	b	2886c <main@@Base+0x15574>
   2868c:	ldr	sl, [sp, #24]
   28690:	ldr	r5, [sp, #32]
   28694:	ldr	r4, [sp, #8]
   28698:	bne	286a8 <main@@Base+0x153b0>
   2869c:	ldrb	r0, [r7, #2]!
   286a0:	cmp	r0, #32
   286a4:	bhi	286b8 <main@@Base+0x153c0>
   286a8:	mov	r0, sl
   286ac:	mov	r2, r9
   286b0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   286b4:	mov	r7, r0
   286b8:	cmp	r4, r7
   286bc:	beq	284f0 <main@@Base+0x151f8>
   286c0:	mov	r6, #0
   286c4:	cmp	r7, r9
   286c8:	str	r6, [fp, #-36]	; 0xffffffdc
   286cc:	str	r6, [fp, #-40]	; 0xffffffd8
   286d0:	str	r6, [sp, #44]	; 0x2c
   286d4:	str	r6, [sp, #40]	; 0x28
   286d8:	str	r6, [fp, #-44]	; 0xffffffd4
   286dc:	beq	2873c <main@@Base+0x15444>
   286e0:	sub	r0, fp, #40	; 0x28
   286e4:	mov	r1, r7
   286e8:	mov	r2, r9
   286ec:	sub	r3, fp, #44	; 0x2c
   286f0:	str	r0, [sp]
   286f4:	mov	r0, sl
   286f8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   286fc:	cmp	r0, r7
   28700:	beq	28750 <main@@Base+0x15458>
   28704:	mov	r4, r0
   28708:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2870c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   28710:	ldr	r5, [fp, #-36]	; 0xffffffdc
   28714:	cmp	r0, #0
   28718:	beq	2876c <main@@Base+0x15474>
   2871c:	subs	r0, r6, #1
   28720:	sbcs	r0, r5, #-2147483648	; 0x80000000
   28724:	bcc	287a4 <main@@Base+0x154ac>
   28728:	ldr	sl, [sp, #24]
   2872c:	mov	r1, r4
   28730:	mov	r2, r9
   28734:	mov	r3, #8
   28738:	b	28784 <main@@Base+0x1548c>
   2873c:	mov	r5, #0
   28740:	mov	r4, r9
   28744:	cmp	r7, r4
   28748:	bne	28800 <main@@Base+0x15508>
   2874c:	b	287c0 <main@@Base+0x154c8>
   28750:	mov	r6, #0
   28754:	mov	r5, #0
   28758:	mov	r4, r7
   2875c:	ldr	sl, [sp, #24]
   28760:	cmp	r7, r4
   28764:	bne	28800 <main@@Base+0x15508>
   28768:	b	287c0 <main@@Base+0x154c8>
   2876c:	cmn	r5, #1
   28770:	bgt	287ac <main@@Base+0x154b4>
   28774:	ldr	sl, [sp, #24]
   28778:	mov	r1, r4
   2877c:	mov	r2, r9
   28780:	mov	r3, #7
   28784:	mov	r0, sl
   28788:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2878c:	mov	r4, r0
   28790:	mov	r6, #0
   28794:	mov	r5, #0
   28798:	cmp	r7, r4
   2879c:	bne	28800 <main@@Base+0x15508>
   287a0:	b	287c0 <main@@Base+0x154c8>
   287a4:	rsbs	r6, r6, #0
   287a8:	rsc	r5, r5, #0
   287ac:	str	r6, [sp, #40]	; 0x28
   287b0:	str	r5, [sp, #44]	; 0x2c
   287b4:	ldr	sl, [sp, #24]
   287b8:	cmp	r7, r4
   287bc:	bne	28800 <main@@Base+0x15508>
   287c0:	add	r0, sp, #40	; 0x28
   287c4:	mov	r1, r7
   287c8:	mov	r2, r9
   287cc:	str	r0, [sp]
   287d0:	movw	r0, #33272	; 0x81f8
   287d4:	movt	r0, #4
   287d8:	add	r3, r0, #84	; 0x54
   287dc:	mov	r0, sl
   287e0:	bl	240d0 <main@@Base+0x10dd8>
   287e4:	mov	r4, r0
   287e8:	cmp	r0, r7
   287ec:	cmpne	r4, r9
   287f0:	beq	28c64 <main@@Base+0x1596c>
   287f4:	ldr	r6, [sp, #40]	; 0x28
   287f8:	ldr	r5, [sp, #44]	; 0x2c
   287fc:	ldr	sl, [sp, #24]
   28800:	orrs	r0, r6, r5
   28804:	bne	28814 <main@@Base+0x1551c>
   28808:	ldrb	r0, [sl, #8]
   2880c:	tst	r0, #2
   28810:	beq	285a8 <main@@Base+0x152b0>
   28814:	ldr	r0, [sl]
   28818:	mov	r1, #0
   2881c:	mov	r2, #8
   28820:	mov	r3, #8
   28824:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   28828:	cmp	r0, #0
   2882c:	beq	28c64 <main@@Base+0x1596c>
   28830:	str	r6, [r0]
   28834:	str	r5, [r0, #4]
   28838:	ldr	r5, [sp, #32]
   2883c:	sub	r0, r9, r4
   28840:	cmp	r0, #2
   28844:	bge	285b8 <main@@Base+0x152c0>
   28848:	b	285e8 <main@@Base+0x152f0>
   2884c:	ldr	sl, [sp, #24]
   28850:	bne	28860 <main@@Base+0x15568>
   28854:	ldrb	r0, [r7, #2]!
   28858:	cmp	r0, #32
   2885c:	bhi	28870 <main@@Base+0x15578>
   28860:	mov	r0, sl
   28864:	mov	r2, r9
   28868:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2886c:	mov	r7, r0
   28870:	cmp	r8, r7
   28874:	beq	28594 <main@@Base+0x1529c>
   28878:	mov	r5, #0
   2887c:	cmp	r7, r9
   28880:	str	r5, [fp, #-36]	; 0xffffffdc
   28884:	str	r5, [fp, #-40]	; 0xffffffd8
   28888:	str	r5, [fp, #-44]	; 0xffffffd4
   2888c:	str	r5, [sp, #40]	; 0x28
   28890:	beq	288dc <main@@Base+0x155e4>
   28894:	sub	r0, fp, #40	; 0x28
   28898:	mov	r1, r7
   2889c:	mov	r2, r9
   288a0:	add	r3, sp, #40	; 0x28
   288a4:	str	r0, [sp]
   288a8:	mov	r0, sl
   288ac:	bl	323e8 <flatcc_json_parser_integer@@Base>
   288b0:	cmp	r0, r7
   288b4:	beq	288ec <main@@Base+0x155f4>
   288b8:	mov	r4, r0
   288bc:	ldr	r0, [sp, #40]	; 0x28
   288c0:	cmp	r0, #0
   288c4:	beq	28900 <main@@Base+0x15608>
   288c8:	ldr	sl, [sp, #24]
   288cc:	mov	r1, r4
   288d0:	mov	r2, r9
   288d4:	mov	r3, #8
   288d8:	b	2891c <main@@Base+0x15624>
   288dc:	mov	r4, r9
   288e0:	cmp	r7, r4
   288e4:	bne	2896c <main@@Base+0x15674>
   288e8:	b	28930 <main@@Base+0x15638>
   288ec:	mov	r4, r7
   288f0:	ldr	sl, [sp, #24]
   288f4:	cmp	r7, r4
   288f8:	bne	2896c <main@@Base+0x15674>
   288fc:	b	28930 <main@@Base+0x15638>
   28900:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28904:	cmp	r0, #0
   28908:	beq	289b4 <main@@Base+0x156bc>
   2890c:	ldr	sl, [sp, #24]
   28910:	mov	r1, r4
   28914:	mov	r2, r9
   28918:	mov	r3, #7
   2891c:	mov	r0, sl
   28920:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28924:	mov	r4, r0
   28928:	cmp	r7, r4
   2892c:	bne	2896c <main@@Base+0x15674>
   28930:	sub	r0, fp, #44	; 0x2c
   28934:	mov	r1, r7
   28938:	mov	r2, r9
   2893c:	str	r0, [sp]
   28940:	movw	r0, #33272	; 0x81f8
   28944:	movt	r0, #4
   28948:	add	r3, r0, #72	; 0x48
   2894c:	mov	r0, sl
   28950:	bl	24358 <main@@Base+0x11060>
   28954:	mov	r4, r0
   28958:	cmp	r0, r7
   2895c:	cmpne	r4, r9
   28960:	beq	28c64 <main@@Base+0x1596c>
   28964:	ldr	r5, [fp, #-44]	; 0xffffffd4
   28968:	ldr	sl, [sp, #24]
   2896c:	cmp	r5, #0
   28970:	bne	28980 <main@@Base+0x15688>
   28974:	ldrb	r0, [sl, #8]
   28978:	tst	r0, #2
   2897c:	beq	285a8 <main@@Base+0x152b0>
   28980:	ldr	r0, [sl]
   28984:	mov	r1, #1
   28988:	mov	r2, #4
   2898c:	mov	r3, #4
   28990:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   28994:	cmp	r0, #0
   28998:	beq	28c64 <main@@Base+0x1596c>
   2899c:	str	r5, [r0]
   289a0:	ldr	r5, [sp, #32]
   289a4:	sub	r0, r9, r4
   289a8:	cmp	r0, #2
   289ac:	bge	285b8 <main@@Base+0x152c0>
   289b0:	b	285e8 <main@@Base+0x152f0>
   289b4:	ldr	r5, [fp, #-40]	; 0xffffffd8
   289b8:	str	r5, [fp, #-44]	; 0xffffffd4
   289bc:	ldr	sl, [sp, #24]
   289c0:	cmp	r7, r4
   289c4:	bne	2896c <main@@Base+0x15674>
   289c8:	b	28930 <main@@Base+0x15638>
   289cc:	mov	r0, sl
   289d0:	mov	r1, r2
   289d4:	mov	r2, r9
   289d8:	mov	r3, #10
   289dc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   289e0:	b	28a94 <main@@Base+0x1579c>
   289e4:	mov	r4, r9
   289e8:	ldr	r0, [sl, #24]
   289ec:	cmp	r0, #0
   289f0:	beq	28b84 <main@@Base+0x1588c>
   289f4:	b	28c68 <main@@Base+0x15970>
   289f8:	cmp	r0, #125	; 0x7d
   289fc:	bne	28b2c <main@@Base+0x15834>
   28a00:	add	r1, r2, #1
   28a04:	sub	r0, r9, r1
   28a08:	cmp	r0, #2
   28a0c:	blt	28b68 <main@@Base+0x15870>
   28a10:	ldrb	r0, [r1]
   28a14:	cmp	r0, #32
   28a18:	bls	28b4c <main@@Base+0x15854>
   28a1c:	ldr	sl, [sp, #24]
   28a20:	ldr	r5, [sp, #32]
   28a24:	mov	r4, r1
   28a28:	ldr	r0, [sl, #24]
   28a2c:	cmp	r0, #0
   28a30:	beq	28b84 <main@@Base+0x1588c>
   28a34:	b	28c68 <main@@Base+0x15970>
   28a38:	mov	r0, sl
   28a3c:	mov	r1, r9
   28a40:	b	28b34 <main@@Base+0x1583c>
   28a44:	add	r1, r2, #1
   28a48:	sub	r0, r9, r1
   28a4c:	cmp	r0, #2
   28a50:	blt	28b68 <main@@Base+0x15870>
   28a54:	ldrb	r0, [r1]
   28a58:	cmp	r0, #32
   28a5c:	bls	28b44 <main@@Base+0x1584c>
   28a60:	mov	r4, r1
   28a64:	ldr	r0, [sl, #24]
   28a68:	cmp	r0, #0
   28a6c:	beq	28b84 <main@@Base+0x1588c>
   28a70:	b	28c68 <main@@Base+0x15970>
   28a74:	bne	28a88 <main@@Base+0x15790>
   28a78:	ldrb	r0, [r2, #2]!
   28a7c:	mov	r4, r2
   28a80:	cmp	r0, #32
   28a84:	bhi	28a98 <main@@Base+0x157a0>
   28a88:	mov	r0, sl
   28a8c:	mov	r2, r9
   28a90:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28a94:	mov	r4, r0
   28a98:	ldr	r0, [sl, #24]
   28a9c:	cmp	r0, #0
   28aa0:	bne	28c68 <main@@Base+0x15970>
   28aa4:	ldr	r0, [sl]
   28aa8:	bl	2d734 <flatcc_builder_end_table@@Base>
   28aac:	cmp	r0, #0
   28ab0:	beq	28c68 <main@@Base+0x15970>
   28ab4:	mov	r7, r0
   28ab8:	ldr	r0, [sl]
   28abc:	mov	r1, #1
   28ac0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   28ac4:	cmp	r0, #0
   28ac8:	bne	28bac <main@@Base+0x158b4>
   28acc:	b	25518 <main@@Base+0x12220>
   28ad0:	mov	r0, sl
   28ad4:	mov	r1, r2
   28ad8:	mov	r2, r9
   28adc:	mov	r3, #10
   28ae0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28ae4:	mov	r4, r0
   28ae8:	ldr	r0, [sl, #24]
   28aec:	cmp	r0, #0
   28af0:	beq	25e84 <main@@Base+0x12b8c>
   28af4:	b	28c68 <main@@Base+0x15970>
   28af8:	bne	28b0c <main@@Base+0x15814>
   28afc:	ldrb	r0, [r2, #2]!
   28b00:	mov	r4, r2
   28b04:	cmp	r0, #32
   28b08:	bhi	25e78 <main@@Base+0x12b80>
   28b0c:	mov	r0, sl
   28b10:	mov	r2, r9
   28b14:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28b18:	mov	r4, r0
   28b1c:	ldr	r0, [sl, #24]
   28b20:	cmp	r0, #0
   28b24:	beq	25e84 <main@@Base+0x12b8c>
   28b28:	b	28c68 <main@@Base+0x15970>
   28b2c:	mov	r0, sl
   28b30:	mov	r1, r2
   28b34:	mov	r2, r9
   28b38:	mov	r3, #10
   28b3c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28b40:	b	28b74 <main@@Base+0x1587c>
   28b44:	beq	28b58 <main@@Base+0x15860>
   28b48:	b	28b68 <main@@Base+0x15870>
   28b4c:	ldr	sl, [sp, #24]
   28b50:	ldr	r5, [sp, #32]
   28b54:	bne	28b68 <main@@Base+0x15870>
   28b58:	ldrb	r0, [r2, #2]!
   28b5c:	mov	r4, r2
   28b60:	cmp	r0, #32
   28b64:	bhi	28b78 <main@@Base+0x15880>
   28b68:	mov	r0, sl
   28b6c:	mov	r2, r9
   28b70:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28b74:	mov	r4, r0
   28b78:	ldr	r0, [sl, #24]
   28b7c:	cmp	r0, #0
   28b80:	bne	28c68 <main@@Base+0x15970>
   28b84:	ldr	r0, [sl]
   28b88:	bl	2d734 <flatcc_builder_end_table@@Base>
   28b8c:	cmp	r0, #0
   28b90:	beq	28c68 <main@@Base+0x15970>
   28b94:	mov	r7, r0
   28b98:	ldr	r0, [sl]
   28b9c:	mov	r1, #2
   28ba0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   28ba4:	cmp	r0, #0
   28ba8:	beq	25518 <main@@Base+0x12220>
   28bac:	str	r7, [r0]
   28bb0:	sub	r0, r9, r4
   28bb4:	cmp	r0, #2
   28bb8:	bge	25ce8 <main@@Base+0x129f0>
   28bbc:	b	25d58 <main@@Base+0x12a60>
   28bc0:	mov	r4, r9
   28bc4:	ldr	r0, [sl, #24]
   28bc8:	cmp	r0, #0
   28bcc:	bne	25518 <main@@Base+0x12220>
   28bd0:	b	28c08 <main@@Base+0x15910>
   28bd4:	cmp	r0, #125	; 0x7d
   28bd8:	bne	28c2c <main@@Base+0x15934>
   28bdc:	add	r1, r2, #1
   28be0:	sub	r0, r9, r1
   28be4:	cmp	r0, #2
   28be8:	blt	28c54 <main@@Base+0x1595c>
   28bec:	ldrb	r0, [r1]
   28bf0:	cmp	r0, #32
   28bf4:	bls	28c40 <main@@Base+0x15948>
   28bf8:	mov	r4, r1
   28bfc:	ldr	r0, [sl, #24]
   28c00:	cmp	r0, #0
   28c04:	bne	25518 <main@@Base+0x12220>
   28c08:	ldr	r0, [sl]
   28c0c:	bl	2d734 <flatcc_builder_end_table@@Base>
   28c10:	cmp	r0, #0
   28c14:	str	r0, [r5]
   28c18:	bne	25530 <main@@Base+0x12238>
   28c1c:	b	25518 <main@@Base+0x12220>
   28c20:	mov	r0, sl
   28c24:	mov	r1, r9
   28c28:	b	28c34 <main@@Base+0x1593c>
   28c2c:	mov	r0, sl
   28c30:	mov	r1, r2
   28c34:	mov	r2, r9
   28c38:	mov	r3, #10
   28c3c:	b	25504 <main@@Base+0x1220c>
   28c40:	bne	28c54 <main@@Base+0x1595c>
   28c44:	ldrb	r0, [r2, #2]!
   28c48:	mov	r4, r2
   28c4c:	cmp	r0, #32
   28c50:	bhi	2550c <main@@Base+0x12214>
   28c54:	mov	r0, sl
   28c58:	mov	r2, r9
   28c5c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   28c60:	b	25508 <main@@Base+0x12210>
   28c64:	ldr	sl, [sp, #24]
   28c68:	mov	r0, sl
   28c6c:	mov	r1, r4
   28c70:	mov	r2, r9
   28c74:	mov	r3, #33	; 0x21
   28c78:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28c7c:	mov	r4, r0
   28c80:	b	25518 <main@@Base+0x12220>
   28c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28c88:	add	fp, sp, #28
   28c8c:	push	{r3}		; (str r3, [sp, #-4]!)
   28c90:	sub	r7, r2, r1
   28c94:	cmp	r7, #8
   28c98:	movcs	r7, #8
   28c9c:	sub	r5, r7, #1
   28ca0:	cmp	r5, #7
   28ca4:	bhi	28dbc <main@@Base+0x15ac4>
   28ca8:	add	lr, pc, #32
   28cac:	mov	ip, #0
   28cb0:	mov	r3, #0
   28cb4:	mov	r8, #0
   28cb8:	mov	r9, #0
   28cbc:	mov	sl, #0
   28cc0:	mov	r7, #0
   28cc4:	mov	r4, #0
   28cc8:	mov	r6, #0
   28ccc:	ldr	pc, [lr, r5, lsl #2]
   28cd0:	andeq	r8, r2, r4, lsr sp
   28cd4:	andeq	r8, r2, ip, lsr #26
   28cd8:	andeq	r8, r2, r4, lsr #26
   28cdc:	andeq	r8, r2, ip, lsl sp
   28ce0:	andeq	r8, r2, r0, lsl sp
   28ce4:	andeq	r8, r2, r4, lsl #26
   28ce8:	strdeq	r8, [r2], -r4
   28cec:	strdeq	r8, [r2], -r0
   28cf0:	ldrb	r3, [r1, #7]
   28cf4:	ldrb	r7, [r1, #6]
   28cf8:	mov	r8, ip
   28cfc:	orr	r3, r3, r7, lsl #8
   28d00:	mov	ip, r3
   28d04:	ldrb	r3, [r1, #5]
   28d08:	mov	r9, r8
   28d0c:	orr	ip, ip, r3, lsl #16
   28d10:	ldrb	r3, [r1, #4]
   28d14:	mov	sl, r9
   28d18:	orr	ip, ip, r3, lsl #24
   28d1c:	ldrb	r3, [r1, #3]
   28d20:	orr	r7, r3, sl
   28d24:	ldrb	r3, [r1, #2]
   28d28:	orr	r4, r7, r3, lsl #8
   28d2c:	ldrb	r3, [r1, #1]
   28d30:	orr	r6, r4, r3, lsl #16
   28d34:	ldrb	r7, [r1]
   28d38:	movw	r3, #29797	; 0x7465
   28d3c:	movt	r3, #24931	; 0x6163
   28d40:	eor	r3, ip, r3
   28d44:	orr	r7, r6, r7, lsl #24
   28d48:	movw	r6, #24946	; 0x6172
   28d4c:	movt	r6, #17256	; 0x4368
   28d50:	eor	r7, r7, r6
   28d54:	orrs	r3, r3, r7
   28d58:	bne	28dbc <main@@Base+0x15ac4>
   28d5c:	add	lr, r1, #8
   28d60:	sub	r7, r2, lr
   28d64:	cmp	r7, #8
   28d68:	mov	r3, r7
   28d6c:	movcs	r3, #8
   28d70:	sub	r3, r3, #1
   28d74:	cmp	r3, #7
   28d78:	bhi	28dbc <main@@Base+0x15ac4>
   28d7c:	cmp	r7, #2
   28d80:	blt	28dbc <main@@Base+0x15ac4>
   28d84:	ldrb	r3, [lr]
   28d88:	cmp	r3, #114	; 0x72
   28d8c:	bne	28dbc <main@@Base+0x15ac4>
   28d90:	ldrb	r3, [r1, #9]
   28d94:	mov	ip, lr
   28d98:	cmp	r3, #46	; 0x2e
   28d9c:	addeq	ip, r1, #10
   28da0:	cmp	ip, lr
   28da4:	beq	28dbc <main@@Base+0x15ac4>
   28da8:	ldr	r3, [sp]
   28dac:	mov	r1, ip
   28db0:	sub	sp, fp, #28
   28db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28db8:	b	25178 <main@@Base+0x11e80>
   28dbc:	mov	r0, r1
   28dc0:	sub	sp, fp, #28
   28dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28dcc:	add	fp, sp, #28
   28dd0:	sub	sp, sp, #44	; 0x2c
   28dd4:	ldr	r7, [fp, #8]
   28dd8:	mov	r9, r0
   28ddc:	mov	r0, #0
   28de0:	mov	r8, r2
   28de4:	mov	r4, r1
   28de8:	cmp	r3, #11
   28dec:	str	r0, [r7]
   28df0:	bhi	28e44 <main@@Base+0x15b4c>
   28df4:	add	r0, pc, #0
   28df8:	ldr	pc, [r0, r3, lsl #2]
   28dfc:	andeq	r8, r2, ip, lsl #29
   28e00:	andeq	r8, r2, r4, ror #28
   28e04:	ldrdeq	r8, [r2], -r0
   28e08:	andeq	r8, r2, r4, ror #28
   28e0c:	andeq	r8, r2, r4, ror #28
   28e10:	andeq	r8, r2, r4, ror #28
   28e14:	andeq	r8, r2, r4, ror #28
   28e18:	andeq	r8, r2, r4, ror #28
   28e1c:	andeq	r8, r2, r0, lsr pc
   28e20:	andeq	r8, r2, ip, lsr #28
   28e24:	andeq	r8, r2, ip, lsr #28
   28e28:	andeq	r8, r2, ip, asr #28
   28e2c:	mov	r0, r9
   28e30:	mov	r1, r4
   28e34:	mov	r2, r8
   28e38:	mov	r3, r7
   28e3c:	bl	29d9c <main@@Base+0x16aa4>
   28e40:	b	29034 <main@@Base+0x15d3c>
   28e44:	cmp	r3, #255	; 0xff
   28e48:	bne	28e64 <main@@Base+0x15b6c>
   28e4c:	mov	r0, r9
   28e50:	mov	r1, r4
   28e54:	mov	r2, r8
   28e58:	mov	r3, r7
   28e5c:	bl	329c0 <flatcc_json_parser_build_string@@Base>
   28e60:	b	29034 <main@@Base+0x15d3c>
   28e64:	ldrb	r0, [r9, #8]
   28e68:	tst	r0, #1
   28e6c:	bne	28f98 <main@@Base+0x15ca0>
   28e70:	mov	r0, r9
   28e74:	mov	r1, r4
   28e78:	mov	r2, r8
   28e7c:	mov	r3, #15
   28e80:	sub	sp, fp, #28
   28e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28e88:	b	2fedc <flatcc_json_parser_set_error@@Base>
   28e8c:	sub	r0, r8, r4
   28e90:	cmp	r0, #4
   28e94:	blt	28eb4 <main@@Base+0x15bbc>
   28e98:	movw	r1, #27730	; 0x6c52
   28e9c:	mov	r0, r4
   28ea0:	mov	r2, #4
   28ea4:	movt	r1, #3
   28ea8:	bl	12b34 <bcmp@plt>
   28eac:	cmp	r0, #0
   28eb0:	beq	29080 <main@@Base+0x15d88>
   28eb4:	mov	r0, r9
   28eb8:	mov	r1, r4
   28ebc:	mov	r2, r8
   28ec0:	mov	r3, #26
   28ec4:	sub	sp, fp, #28
   28ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28ecc:	b	2fedc <flatcc_json_parser_set_error@@Base>
   28ed0:	mov	r0, #0
   28ed4:	mov	r1, #1
   28ed8:	str	r0, [r7]
   28edc:	ldr	r0, [r9]
   28ee0:	bl	2cd8c <flatcc_builder_start_table@@Base>
   28ee4:	cmp	r0, #0
   28ee8:	bne	29020 <main@@Base+0x15d28>
   28eec:	cmp	r4, r8
   28ef0:	beq	28ffc <main@@Base+0x15d04>
   28ef4:	ldrb	r0, [r4]
   28ef8:	cmp	r0, #123	; 0x7b
   28efc:	bne	28ffc <main@@Base+0x15d04>
   28f00:	add	r1, r4, #1
   28f04:	sub	r0, r8, r1
   28f08:	cmp	r0, #2
   28f0c:	blt	29618 <main@@Base+0x16320>
   28f10:	ldrb	r0, [r1]
   28f14:	cmp	r0, #32
   28f18:	bls	29608 <main@@Base+0x16310>
   28f1c:	mov	r4, r1
   28f20:	cmp	r4, r8
   28f24:	mov	r2, r8
   28f28:	bne	29634 <main@@Base+0x1633c>
   28f2c:	b	29674 <main@@Base+0x1637c>
   28f30:	mov	r0, #0
   28f34:	mov	r1, #2
   28f38:	mov	r2, #2
   28f3c:	str	r0, [r7]
   28f40:	ldr	r0, [r9]
   28f44:	bl	2bab0 <flatcc_builder_start_struct@@Base>
   28f48:	cmp	r0, #0
   28f4c:	beq	28ff0 <main@@Base+0x15cf8>
   28f50:	cmp	r4, r8
   28f54:	beq	28fb0 <main@@Base+0x15cb8>
   28f58:	ldrb	r1, [r4]
   28f5c:	cmp	r1, #123	; 0x7b
   28f60:	bne	28fb0 <main@@Base+0x15cb8>
   28f64:	add	r1, r4, #1
   28f68:	str	r0, [sp, #12]
   28f6c:	sub	r0, r8, r1
   28f70:	cmp	r0, #2
   28f74:	blt	290a0 <main@@Base+0x15da8>
   28f78:	ldrb	r0, [r1]
   28f7c:	cmp	r0, #32
   28f80:	bls	29090 <main@@Base+0x15d98>
   28f84:	mov	r4, r1
   28f88:	cmp	r4, r8
   28f8c:	mov	r2, r8
   28f90:	bne	290bc <main@@Base+0x15dc4>
   28f94:	b	290fc <main@@Base+0x15e04>
   28f98:	mov	r0, r9
   28f9c:	mov	r1, r4
   28fa0:	mov	r2, r8
   28fa4:	sub	sp, fp, #28
   28fa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28fac:	b	30a88 <flatcc_json_parser_generic_json@@Base>
   28fb0:	mov	r0, r9
   28fb4:	mov	r1, r4
   28fb8:	mov	r2, r8
   28fbc:	mov	r3, #21
   28fc0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   28fc4:	mov	r4, r0
   28fc8:	cmp	r4, r8
   28fcc:	mov	r1, r8
   28fd0:	beq	28ff4 <main@@Base+0x15cfc>
   28fd4:	ldr	r0, [r9]
   28fd8:	bl	2bba4 <flatcc_builder_end_struct@@Base>
   28fdc:	cmp	r0, #0
   28fe0:	mov	r1, r4
   28fe4:	str	r0, [r7]
   28fe8:	bne	29038 <main@@Base+0x15d40>
   28fec:	b	28ff4 <main@@Base+0x15cfc>
   28ff0:	mov	r1, r4
   28ff4:	mov	r0, r9
   28ff8:	b	29028 <main@@Base+0x15d30>
   28ffc:	mov	r0, r9
   29000:	mov	r1, r4
   29004:	mov	r2, r8
   29008:	mov	r3, #21
   2900c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29010:	mov	r4, r0
   29014:	ldr	r0, [r9, #24]
   29018:	cmp	r0, #0
   2901c:	beq	29cc8 <main@@Base+0x169d0>
   29020:	mov	r0, r9
   29024:	mov	r1, r4
   29028:	mov	r2, r8
   2902c:	mov	r3, #33	; 0x21
   29030:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29034:	mov	r4, r0
   29038:	ldr	r0, [r9, #24]
   2903c:	cmp	r0, #0
   29040:	bne	29050 <main@@Base+0x15d58>
   29044:	ldr	r0, [r7]
   29048:	cmp	r0, #0
   2904c:	beq	2905c <main@@Base+0x15d64>
   29050:	mov	r0, r4
   29054:	sub	sp, fp, #28
   29058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2905c:	mov	r0, r9
   29060:	mov	r1, r4
   29064:	mov	r2, r8
   29068:	mov	r3, #33	; 0x21
   2906c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29070:	mov	r4, r0
   29074:	mov	r0, r4
   29078:	sub	sp, fp, #28
   2907c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29080:	add	r4, r4, #4
   29084:	mov	r0, r4
   29088:	sub	sp, fp, #28
   2908c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29090:	bne	290a0 <main@@Base+0x15da8>
   29094:	ldrb	r0, [r4, #2]!
   29098:	cmp	r0, #32
   2909c:	bhi	290b0 <main@@Base+0x15db8>
   290a0:	mov	r0, r9
   290a4:	mov	r2, r8
   290a8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   290ac:	mov	r4, r0
   290b0:	cmp	r4, r8
   290b4:	mov	r2, r8
   290b8:	beq	290fc <main@@Base+0x15e04>
   290bc:	ldrb	r0, [r4]
   290c0:	cmp	r0, #125	; 0x7d
   290c4:	bne	290f8 <main@@Base+0x15e00>
   290c8:	add	r1, r4, #1
   290cc:	sub	r0, r8, r1
   290d0:	cmp	r0, #2
   290d4:	blt	29d14 <main@@Base+0x16a1c>
   290d8:	ldrb	r0, [r1]
   290dc:	cmp	r0, #32
   290e0:	bhi	295e8 <main@@Base+0x162f0>
   290e4:	bne	29d14 <main@@Base+0x16a1c>
   290e8:	ldrb	r0, [r4, #2]!
   290ec:	cmp	r0, #32
   290f0:	bhi	28fc8 <main@@Base+0x15cd0>
   290f4:	b	29d14 <main@@Base+0x16a1c>
   290f8:	mov	r2, r4
   290fc:	movw	r0, #33272	; 0x81f8
   29100:	movt	r0, #4
   29104:	add	r0, r0, #108	; 0x6c
   29108:	str	r0, [sp, #8]
   2910c:	str	r9, [sp, #20]
   29110:	cmp	r2, r8
   29114:	mov	r1, r8
   29118:	beq	29164 <main@@Base+0x15e6c>
   2911c:	ldrb	r0, [r2]
   29120:	cmp	r0, #46	; 0x2e
   29124:	beq	2913c <main@@Base+0x15e44>
   29128:	cmp	r0, #34	; 0x22
   2912c:	bne	29158 <main@@Base+0x15e60>
   29130:	mov	r0, #0
   29134:	add	r1, r2, #1
   29138:	b	29160 <main@@Base+0x15e68>
   2913c:	mov	r1, r2
   29140:	mov	r0, r9
   29144:	mov	r2, r8
   29148:	mov	r3, #5
   2914c:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29150:	mov	r1, r0
   29154:	b	29164 <main@@Base+0x15e6c>
   29158:	mov	r0, #1
   2915c:	mov	r1, r2
   29160:	str	r0, [r9, #12]
   29164:	sub	r0, r8, r1
   29168:	mov	r2, #8
   2916c:	cmp	r0, #8
   29170:	movcs	r0, r2
   29174:	sub	r4, r0, #1
   29178:	cmp	r4, #7
   2917c:	bhi	292d0 <main@@Base+0x15fd8>
   29180:	add	r0, pc, #36	; 0x24
   29184:	mov	r9, r7
   29188:	mov	sl, #0
   2918c:	mov	ip, #0
   29190:	mov	lr, #0
   29194:	mov	r6, #0
   29198:	mov	r3, #0
   2919c:	mov	r5, #0
   291a0:	mov	r2, #0
   291a4:	mov	r7, #0
   291a8:	ldr	pc, [r0, r4, lsl #2]
   291ac:	andeq	r9, r2, r0, lsl r2
   291b0:	andeq	r9, r2, r8, lsl #4
   291b4:	andeq	r9, r2, r0, lsl #4
   291b8:	strdeq	r9, [r2], -r8
   291bc:	andeq	r9, r2, ip, ror #3
   291c0:	andeq	r9, r2, r0, ror #3
   291c4:	ldrdeq	r9, [r2], -r0
   291c8:	andeq	r9, r2, ip, asr #3
   291cc:	ldrb	ip, [r1, #7]
   291d0:	ldrb	r0, [r1, #6]
   291d4:	mov	lr, sl
   291d8:	orr	r0, ip, r0, lsl #8
   291dc:	mov	sl, r0
   291e0:	ldrb	r0, [r1, #5]
   291e4:	mov	r6, lr
   291e8:	orr	sl, sl, r0, lsl #16
   291ec:	ldrb	r0, [r1, #4]
   291f0:	mov	r3, r6
   291f4:	orr	sl, sl, r0, lsl #24
   291f8:	ldrb	r0, [r1, #3]
   291fc:	orr	r5, r0, r3
   29200:	ldrb	r0, [r1, #2]
   29204:	orr	r2, r5, r0, lsl #8
   29208:	ldrb	r0, [r1, #1]
   2920c:	orr	r7, r2, r0, lsl #16
   29210:	ldrb	r2, [r1]
   29214:	movw	r0, #25966	; 0x656e
   29218:	movw	r3, #26994	; 0x6972
   2921c:	movt	r0, #24428	; 0x5f6c
   29220:	movt	r3, #26721	; 0x6861
   29224:	eor	r0, sl, r0
   29228:	orr	r2, r7, r2, lsl #24
   2922c:	mov	r7, r9
   29230:	ldr	r9, [sp, #20]
   29234:	eor	r2, r2, r3
   29238:	orrs	r0, r0, r2
   2923c:	bne	292d0 <main@@Base+0x15fd8>
   29240:	add	r4, r1, #8
   29244:	mov	r3, #8
   29248:	sub	r0, r8, r4
   2924c:	cmp	r0, #8
   29250:	movcc	r3, r0
   29254:	sub	r2, r3, #3
   29258:	cmp	r2, #6
   2925c:	bcs	292d8 <main@@Base+0x15fe0>
   29260:	ldrb	r2, [r1, #10]
   29264:	lsl	r2, r2, #8
   29268:	ldrb	r3, [r1, #9]
   2926c:	orr	r2, r2, r3, lsl #16
   29270:	ldrb	r3, [r4]
   29274:	bic	r2, r2, #255	; 0xff
   29278:	orr	r2, r2, r3, lsl #24
   2927c:	movw	r3, #26624	; 0x6800
   29280:	movt	r3, #26484	; 0x6774
   29284:	teq	r2, r3
   29288:	bne	29388 <main@@Base+0x16090>
   2928c:	cmp	r0, #4
   29290:	blt	29388 <main@@Base+0x16090>
   29294:	mov	r2, r1
   29298:	ldr	r3, [r9, #12]
   2929c:	ldrb	r0, [r2, #11]!
   292a0:	cmp	r3, #0
   292a4:	beq	292f0 <main@@Base+0x15ff8>
   292a8:	cmp	r0, #33	; 0x21
   292ac:	bcc	292b8 <main@@Base+0x15fc0>
   292b0:	cmp	r0, #58	; 0x3a
   292b4:	bne	29388 <main@@Base+0x16090>
   292b8:	mov	r0, #0
   292bc:	str	r0, [r9, #12]
   292c0:	sub	r0, r8, r2
   292c4:	cmp	r0, #2
   292c8:	bge	29308 <main@@Base+0x16010>
   292cc:	b	29338 <main@@Base+0x16040>
   292d0:	mov	r0, r9
   292d4:	b	29390 <main@@Base+0x16098>
   292d8:	mov	r2, #0
   292dc:	cmp	r3, #1
   292e0:	beq	29270 <main@@Base+0x15f78>
   292e4:	cmp	r3, #2
   292e8:	beq	29268 <main@@Base+0x15f70>
   292ec:	b	29388 <main@@Base+0x16090>
   292f0:	cmp	r0, #34	; 0x22
   292f4:	bne	29388 <main@@Base+0x16090>
   292f8:	add	r2, r1, #12
   292fc:	sub	r0, r8, r2
   29300:	cmp	r0, #2
   29304:	blt	29338 <main@@Base+0x16040>
   29308:	ldrb	r0, [r2]
   2930c:	cmp	r0, #32
   29310:	bls	29324 <main@@Base+0x1602c>
   29314:	mov	r5, r2
   29318:	cmp	r5, r8
   2931c:	bne	29354 <main@@Base+0x1605c>
   29320:	b	29460 <main@@Base+0x16168>
   29324:	bne	29338 <main@@Base+0x16040>
   29328:	mov	r5, r2
   2932c:	ldrb	r0, [r5, #1]!
   29330:	cmp	r0, #32
   29334:	bhi	2934c <main@@Base+0x16054>
   29338:	mov	r1, r2
   2933c:	mov	r0, r9
   29340:	mov	r2, r8
   29344:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29348:	mov	r5, r0
   2934c:	cmp	r5, r8
   29350:	beq	29460 <main@@Base+0x16168>
   29354:	ldrb	r0, [r5]
   29358:	cmp	r0, #58	; 0x3a
   2935c:	bne	29460 <main@@Base+0x16168>
   29360:	add	r1, r5, #1
   29364:	sub	r0, r8, r1
   29368:	cmp	r0, #2
   2936c:	blt	29488 <main@@Base+0x16190>
   29370:	ldrb	r0, [r1]
   29374:	cmp	r0, #32
   29378:	bls	29478 <main@@Base+0x16180>
   2937c:	mov	r5, r1
   29380:	cmp	r4, r5
   29384:	bne	294a0 <main@@Base+0x161a8>
   29388:	mov	r0, r9
   2938c:	mov	r1, r4
   29390:	mov	r2, r8
   29394:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   29398:	mov	r1, r0
   2939c:	sub	r0, r8, r1
   293a0:	cmp	r0, #2
   293a4:	blt	29418 <main@@Base+0x16120>
   293a8:	ldrb	r0, [r1]
   293ac:	cmp	r0, #32
   293b0:	bls	29404 <main@@Base+0x1610c>
   293b4:	mov	r2, r1
   293b8:	cmp	r2, r8
   293bc:	beq	295bc <main@@Base+0x162c4>
   293c0:	ldrb	r0, [r2]
   293c4:	cmp	r0, #44	; 0x2c
   293c8:	bne	295c4 <main@@Base+0x162cc>
   293cc:	add	r1, r2, #1
   293d0:	sub	r0, r8, r1
   293d4:	cmp	r0, #2
   293d8:	blt	29444 <main@@Base+0x1614c>
   293dc:	ldrb	r0, [r1]
   293e0:	cmp	r0, #32
   293e4:	bls	29434 <main@@Base+0x1613c>
   293e8:	mov	r2, r1
   293ec:	cmp	r2, r8
   293f0:	beq	295fc <main@@Base+0x16304>
   293f4:	ldrb	r0, [r2]
   293f8:	cmp	r0, #125	; 0x7d
   293fc:	bne	29110 <main@@Base+0x15e18>
   29400:	b	295cc <main@@Base+0x162d4>
   29404:	bne	29418 <main@@Base+0x16120>
   29408:	mov	r2, r1
   2940c:	ldrb	r0, [r2, #1]!
   29410:	cmp	r0, #32
   29414:	bhi	29428 <main@@Base+0x16130>
   29418:	mov	r0, r9
   2941c:	mov	r2, r8
   29420:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29424:	mov	r2, r0
   29428:	cmp	r2, r8
   2942c:	bne	293c0 <main@@Base+0x160c8>
   29430:	b	295bc <main@@Base+0x162c4>
   29434:	bne	29444 <main@@Base+0x1614c>
   29438:	ldrb	r0, [r2, #2]!
   2943c:	cmp	r0, #32
   29440:	bhi	29454 <main@@Base+0x1615c>
   29444:	mov	r0, r9
   29448:	mov	r2, r8
   2944c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29450:	mov	r2, r0
   29454:	cmp	r2, r8
   29458:	bne	293f4 <main@@Base+0x160fc>
   2945c:	b	295fc <main@@Base+0x16304>
   29460:	mov	r0, r9
   29464:	mov	r1, r5
   29468:	mov	r2, r8
   2946c:	mov	r3, #4
   29470:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29474:	b	29494 <main@@Base+0x1619c>
   29478:	bne	29488 <main@@Base+0x16190>
   2947c:	ldrb	r0, [r5, #2]!
   29480:	cmp	r0, #32
   29484:	bhi	29498 <main@@Base+0x161a0>
   29488:	mov	r0, r9
   2948c:	mov	r2, r8
   29490:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29494:	mov	r5, r0
   29498:	cmp	r4, r5
   2949c:	beq	29388 <main@@Base+0x16090>
   294a0:	mov	r4, #0
   294a4:	cmp	r5, r8
   294a8:	str	r4, [sp, #36]	; 0x24
   294ac:	str	r4, [sp, #32]
   294b0:	strh	r4, [sp, #24]
   294b4:	str	r4, [sp, #28]
   294b8:	beq	29510 <main@@Base+0x16218>
   294bc:	add	r0, sp, #32
   294c0:	mov	r1, r5
   294c4:	mov	r2, r8
   294c8:	add	r3, sp, #28
   294cc:	str	r0, [sp]
   294d0:	mov	r0, r9
   294d4:	bl	323e8 <flatcc_json_parser_integer@@Base>
   294d8:	cmp	r0, r5
   294dc:	beq	29520 <main@@Base+0x16228>
   294e0:	mov	r1, r0
   294e4:	ldr	r0, [sp, #28]
   294e8:	cmp	r0, #0
   294ec:	beq	29530 <main@@Base+0x16238>
   294f0:	mov	r0, r9
   294f4:	mov	r2, r8
   294f8:	mov	r3, #8
   294fc:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29500:	mov	r1, r0
   29504:	cmp	r5, r1
   29508:	bne	295a4 <main@@Base+0x162ac>
   2950c:	b	29574 <main@@Base+0x1627c>
   29510:	mov	r1, r8
   29514:	cmp	r5, r1
   29518:	bne	295a4 <main@@Base+0x162ac>
   2951c:	b	29574 <main@@Base+0x1627c>
   29520:	mov	r1, r5
   29524:	cmp	r5, r1
   29528:	bne	295a4 <main@@Base+0x162ac>
   2952c:	b	29574 <main@@Base+0x1627c>
   29530:	ldr	r0, [sp, #32]
   29534:	ldr	r2, [sp, #36]	; 0x24
   29538:	subs	r3, r0, #65536	; 0x10000
   2953c:	sbcs	r2, r2, #0
   29540:	bcc	29564 <main@@Base+0x1626c>
   29544:	mov	r0, r9
   29548:	mov	r2, r8
   2954c:	mov	r3, #7
   29550:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29554:	mov	r1, r0
   29558:	cmp	r5, r1
   2955c:	bne	295a4 <main@@Base+0x162ac>
   29560:	b	29574 <main@@Base+0x1627c>
   29564:	mov	r4, r0
   29568:	strh	r0, [sp, #24]
   2956c:	cmp	r5, r1
   29570:	bne	295a4 <main@@Base+0x162ac>
   29574:	add	r0, sp, #24
   29578:	mov	r1, r5
   2957c:	mov	r2, r8
   29580:	str	r0, [sp]
   29584:	mov	r0, r9
   29588:	ldr	r3, [sp, #8]
   2958c:	bl	2a448 <main@@Base+0x17150>
   29590:	mov	r1, r0
   29594:	cmp	r0, r5
   29598:	cmpne	r1, r8
   2959c:	beq	29d5c <main@@Base+0x16a64>
   295a0:	ldrh	r4, [sp, #24]
   295a4:	ldr	r0, [sp, #12]
   295a8:	strh	r4, [r0]
   295ac:	sub	r0, r8, r1
   295b0:	cmp	r0, #2
   295b4:	bge	293a8 <main@@Base+0x160b0>
   295b8:	b	29418 <main@@Base+0x16120>
   295bc:	mov	r1, r8
   295c0:	b	28ff4 <main@@Base+0x15cfc>
   295c4:	cmp	r0, #125	; 0x7d
   295c8:	bne	29cec <main@@Base+0x169f4>
   295cc:	add	r1, r2, #1
   295d0:	sub	r0, r8, r1
   295d4:	cmp	r0, #2
   295d8:	blt	29d14 <main@@Base+0x16a1c>
   295dc:	ldrb	r0, [r1]
   295e0:	cmp	r0, #32
   295e4:	bls	29d00 <main@@Base+0x16a08>
   295e8:	mov	r4, r1
   295ec:	cmp	r4, r8
   295f0:	mov	r1, r8
   295f4:	bne	28fd4 <main@@Base+0x15cdc>
   295f8:	b	28ff4 <main@@Base+0x15cfc>
   295fc:	mov	r0, r9
   29600:	mov	r1, r8
   29604:	b	29cf4 <main@@Base+0x169fc>
   29608:	bne	29618 <main@@Base+0x16320>
   2960c:	ldrb	r0, [r4, #2]!
   29610:	cmp	r0, #32
   29614:	bhi	29628 <main@@Base+0x16330>
   29618:	mov	r0, r9
   2961c:	mov	r2, r8
   29620:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29624:	mov	r4, r0
   29628:	cmp	r4, r8
   2962c:	mov	r2, r8
   29630:	beq	29674 <main@@Base+0x1637c>
   29634:	ldrb	r0, [r4]
   29638:	cmp	r0, #125	; 0x7d
   2963c:	bne	29670 <main@@Base+0x16378>
   29640:	add	r1, r4, #1
   29644:	sub	r0, r8, r1
   29648:	cmp	r0, #2
   2964c:	blt	29d4c <main@@Base+0x16a54>
   29650:	ldrb	r0, [r1]
   29654:	cmp	r0, #32
   29658:	bhi	29cb8 <main@@Base+0x169c0>
   2965c:	bne	29d4c <main@@Base+0x16a54>
   29660:	ldrb	r0, [r4, #2]!
   29664:	cmp	r0, #32
   29668:	bhi	29014 <main@@Base+0x15d1c>
   2966c:	b	29d4c <main@@Base+0x16a54>
   29670:	mov	r2, r4
   29674:	movw	r0, #33272	; 0x81f8
   29678:	movt	r0, #4
   2967c:	add	r0, r0, #96	; 0x60
   29680:	str	r0, [sp, #8]
   29684:	str	r7, [sp, #16]
   29688:	cmp	r2, r8
   2968c:	mov	r1, r8
   29690:	beq	296dc <main@@Base+0x163e4>
   29694:	ldrb	r0, [r2]
   29698:	cmp	r0, #46	; 0x2e
   2969c:	beq	296b4 <main@@Base+0x163bc>
   296a0:	cmp	r0, #34	; 0x22
   296a4:	bne	296d0 <main@@Base+0x163d8>
   296a8:	mov	r0, #0
   296ac:	add	r1, r2, #1
   296b0:	b	296d8 <main@@Base+0x163e0>
   296b4:	mov	r1, r2
   296b8:	mov	r0, r9
   296bc:	mov	r2, r8
   296c0:	mov	r3, #5
   296c4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   296c8:	mov	r1, r0
   296cc:	b	296dc <main@@Base+0x163e4>
   296d0:	mov	r0, #1
   296d4:	mov	r1, r2
   296d8:	str	r0, [r9, #12]
   296dc:	sub	r0, r8, r1
   296e0:	mov	r2, #8
   296e4:	cmp	r0, #8
   296e8:	movcs	r0, r2
   296ec:	sub	r4, r0, #1
   296f0:	cmp	r4, #7
   296f4:	bhi	29920 <main@@Base+0x16628>
   296f8:	add	sl, pc, #32
   296fc:	mov	r0, #0
   29700:	mov	ip, #0
   29704:	mov	lr, #0
   29708:	mov	r6, #0
   2970c:	mov	r3, #0
   29710:	mov	r2, #0
   29714:	mov	r7, #0
   29718:	mov	r5, #0
   2971c:	ldr	pc, [sl, r4, lsl #2]
   29720:	andeq	r9, r2, r4, lsl #15
   29724:	andeq	r9, r2, ip, ror r7
   29728:	andeq	r9, r2, r4, ror r7
   2972c:	andeq	r9, r2, ip, ror #14
   29730:	andeq	r9, r2, r0, ror #14
   29734:	andeq	r9, r2, r4, asr r7
   29738:	andeq	r9, r2, r4, asr #14
   2973c:	andeq	r9, r2, r0, asr #14
   29740:	ldrb	ip, [r1, #7]
   29744:	ldrb	r2, [r1, #6]
   29748:	mov	lr, r0
   2974c:	orr	r2, ip, r2, lsl #8
   29750:	mov	r0, r2
   29754:	ldrb	r2, [r1, #5]
   29758:	mov	r6, lr
   2975c:	orr	r0, r0, r2, lsl #16
   29760:	ldrb	r2, [r1, #4]
   29764:	mov	r3, r6
   29768:	orr	r0, r0, r2, lsl #24
   2976c:	ldrb	r2, [r1, #3]
   29770:	orr	r2, r2, r3
   29774:	ldrb	r3, [r1, #2]
   29778:	orr	r7, r2, r3, lsl #8
   2977c:	ldrb	r2, [r1, #1]
   29780:	orr	r5, r7, r2, lsl #16
   29784:	movw	r2, #24948	; 0x6174
   29788:	movw	r3, #28530	; 0x6f72
   2978c:	movt	r2, #25695	; 0x645f
   29790:	movt	r3, #29559	; 0x7377
   29794:	eor	r0, r0, r2
   29798:	ldrb	r2, [r1]
   2979c:	orr	r2, r5, r2, lsl #24
   297a0:	eor	r2, r2, r3
   297a4:	orrs	r0, r0, r2
   297a8:	bne	29920 <main@@Base+0x16628>
   297ac:	add	lr, r1, #8
   297b0:	mov	r2, #8
   297b4:	sub	r0, r8, lr
   297b8:	cmp	r0, #8
   297bc:	movcs	r0, r2
   297c0:	sub	r3, r0, #1
   297c4:	cmp	r3, #7
   297c8:	bhi	29928 <main@@Base+0x16630>
   297cc:	add	r6, pc, #36	; 0x24
   297d0:	mov	r2, #0
   297d4:	mov	r0, #0
   297d8:	mov	sl, #0
   297dc:	mov	r4, #0
   297e0:	mov	r5, #0
   297e4:	mov	r7, #0
   297e8:	mov	ip, #0
   297ec:	str	r2, [sp, #12]
   297f0:	mov	r2, #0
   297f4:	ldr	pc, [r6, r3, lsl #2]
   297f8:	andeq	r9, r2, r4, ror #16
   297fc:	andeq	r9, r2, ip, asr r8
   29800:	andeq	r9, r2, r4, asr r8
   29804:	andeq	r9, r2, ip, asr #16
   29808:	andeq	r9, r2, r0, asr #16
   2980c:	andeq	r9, r2, r4, lsr r8
   29810:	andeq	r9, r2, r0, lsr #16
   29814:	andeq	r9, r2, r8, lsl r8
   29818:	ldrb	r2, [r1, #15]
   2981c:	str	r2, [sp, #12]
   29820:	ldrb	r2, [r1, #14]
   29824:	ldr	r3, [sp, #12]
   29828:	mov	sl, r0
   2982c:	orr	r2, r3, r2, lsl #8
   29830:	mov	r0, r2
   29834:	ldrb	r2, [r1, #13]
   29838:	mov	r4, sl
   2983c:	orr	r0, r0, r2, lsl #16
   29840:	ldrb	r2, [r1, #12]
   29844:	mov	r5, r4
   29848:	orr	r0, r0, r2, lsl #24
   2984c:	ldrb	r2, [r1, #11]
   29850:	orr	r2, r2, r5
   29854:	ldrb	r3, [r1, #10]
   29858:	orr	r7, r2, r3, lsl #8
   2985c:	ldrb	r2, [r1, #9]
   29860:	orr	ip, r7, r2, lsl #16
   29864:	movw	r2, #24941	; 0x616d
   29868:	movw	r3, #25451	; 0x636b
   2986c:	movt	r2, #24420	; 0x5f64
   29870:	movt	r3, #29793	; 0x7461
   29874:	eor	r0, r0, r2
   29878:	ldrb	r2, [lr]
   2987c:	orr	r2, ip, r2, lsl #24
   29880:	eor	r2, r2, r3
   29884:	orrs	r0, r0, r2
   29888:	bne	29928 <main@@Base+0x16630>
   2988c:	add	r4, r1, #16
   29890:	mov	r3, #8
   29894:	sub	r0, r8, r4
   29898:	cmp	r0, #8
   2989c:	movcc	r3, r0
   298a0:	sub	r2, r3, #3
   298a4:	cmp	r2, #6
   298a8:	bcs	299ec <main@@Base+0x166f4>
   298ac:	ldrb	r2, [r1, #18]
   298b0:	ldr	r7, [sp, #16]
   298b4:	lsl	r2, r2, #8
   298b8:	ldrb	r3, [r1, #17]
   298bc:	orr	r2, r2, r3, lsl #16
   298c0:	ldrb	r3, [r4]
   298c4:	bic	r2, r2, #255	; 0xff
   298c8:	orr	r2, r2, r3, lsl #24
   298cc:	movw	r3, #25856	; 0x6500
   298d0:	movt	r3, #24935	; 0x6167
   298d4:	teq	r2, r3
   298d8:	bne	29aa0 <main@@Base+0x167a8>
   298dc:	cmp	r0, #4
   298e0:	blt	29aa0 <main@@Base+0x167a8>
   298e4:	mov	r2, r1
   298e8:	ldr	r3, [r9, #12]
   298ec:	ldrb	r0, [r2, #19]!
   298f0:	cmp	r3, #0
   298f4:	beq	29a08 <main@@Base+0x16710>
   298f8:	cmp	r0, #33	; 0x21
   298fc:	bcc	29908 <main@@Base+0x16610>
   29900:	cmp	r0, #58	; 0x3a
   29904:	bne	29aa0 <main@@Base+0x167a8>
   29908:	mov	r0, #0
   2990c:	str	r0, [r9, #12]
   29910:	sub	r0, r8, r2
   29914:	cmp	r0, #2
   29918:	bge	29a20 <main@@Base+0x16728>
   2991c:	b	29a50 <main@@Base+0x16758>
   29920:	mov	r0, r9
   29924:	b	29930 <main@@Base+0x16638>
   29928:	mov	r0, r9
   2992c:	mov	r1, lr
   29930:	mov	r2, r8
   29934:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   29938:	ldr	r7, [sp, #16]
   2993c:	mov	r4, r0
   29940:	sub	r0, r8, r4
   29944:	cmp	r0, #2
   29948:	blt	29ac0 <main@@Base+0x167c8>
   2994c:	ldrb	r0, [r4]
   29950:	cmp	r0, #32
   29954:	bls	2999c <main@@Base+0x166a4>
   29958:	mov	r2, r4
   2995c:	cmp	r2, r8
   29960:	beq	29c80 <main@@Base+0x16988>
   29964:	ldrb	r0, [r2]
   29968:	cmp	r0, #44	; 0x2c
   2996c:	bne	29c94 <main@@Base+0x1699c>
   29970:	add	r1, r2, #1
   29974:	sub	r0, r8, r1
   29978:	cmp	r0, #2
   2997c:	blt	299c4 <main@@Base+0x166cc>
   29980:	ldrb	r0, [r1]
   29984:	cmp	r0, #32
   29988:	bls	299b4 <main@@Base+0x166bc>
   2998c:	mov	r2, r1
   29990:	cmp	r2, r8
   29994:	bne	299dc <main@@Base+0x166e4>
   29998:	b	29ce0 <main@@Base+0x169e8>
   2999c:	bne	29ac0 <main@@Base+0x167c8>
   299a0:	mov	r2, r4
   299a4:	ldrb	r0, [r2, #1]!
   299a8:	cmp	r0, #32
   299ac:	bhi	29ad4 <main@@Base+0x167dc>
   299b0:	b	29ac0 <main@@Base+0x167c8>
   299b4:	bne	299c4 <main@@Base+0x166cc>
   299b8:	ldrb	r0, [r2, #2]!
   299bc:	cmp	r0, #32
   299c0:	bhi	299d4 <main@@Base+0x166dc>
   299c4:	mov	r0, r9
   299c8:	mov	r2, r8
   299cc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   299d0:	mov	r2, r0
   299d4:	cmp	r2, r8
   299d8:	beq	29ce0 <main@@Base+0x169e8>
   299dc:	ldrb	r0, [r2]
   299e0:	cmp	r0, #125	; 0x7d
   299e4:	bne	29688 <main@@Base+0x16390>
   299e8:	b	29c9c <main@@Base+0x169a4>
   299ec:	ldr	r7, [sp, #16]
   299f0:	mov	r2, #0
   299f4:	cmp	r3, #1
   299f8:	beq	298c0 <main@@Base+0x165c8>
   299fc:	cmp	r3, #2
   29a00:	beq	298b8 <main@@Base+0x165c0>
   29a04:	b	29aa0 <main@@Base+0x167a8>
   29a08:	cmp	r0, #34	; 0x22
   29a0c:	bne	29aa0 <main@@Base+0x167a8>
   29a10:	add	r2, r1, #20
   29a14:	sub	r0, r8, r2
   29a18:	cmp	r0, #2
   29a1c:	blt	29a50 <main@@Base+0x16758>
   29a20:	ldrb	r0, [r2]
   29a24:	cmp	r0, #32
   29a28:	bls	29a3c <main@@Base+0x16744>
   29a2c:	mov	r6, r2
   29a30:	cmp	r6, r8
   29a34:	bne	29a6c <main@@Base+0x16774>
   29a38:	b	29ae0 <main@@Base+0x167e8>
   29a3c:	bne	29a50 <main@@Base+0x16758>
   29a40:	mov	r6, r2
   29a44:	ldrb	r0, [r6, #1]!
   29a48:	cmp	r0, #32
   29a4c:	bhi	29a64 <main@@Base+0x1676c>
   29a50:	mov	r1, r2
   29a54:	mov	r0, r9
   29a58:	mov	r2, r8
   29a5c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29a60:	mov	r6, r0
   29a64:	cmp	r6, r8
   29a68:	beq	29ae0 <main@@Base+0x167e8>
   29a6c:	ldrb	r0, [r6]
   29a70:	cmp	r0, #58	; 0x3a
   29a74:	bne	29ae0 <main@@Base+0x167e8>
   29a78:	add	r1, r6, #1
   29a7c:	sub	r0, r8, r1
   29a80:	cmp	r0, #2
   29a84:	blt	29b08 <main@@Base+0x16810>
   29a88:	ldrb	r0, [r1]
   29a8c:	cmp	r0, #32
   29a90:	bls	29af8 <main@@Base+0x16800>
   29a94:	mov	r6, r1
   29a98:	cmp	r4, r6
   29a9c:	bne	29b20 <main@@Base+0x16828>
   29aa0:	mov	r0, r9
   29aa4:	mov	r1, r4
   29aa8:	mov	r2, r8
   29aac:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   29ab0:	mov	r4, r0
   29ab4:	sub	r0, r8, r4
   29ab8:	cmp	r0, #2
   29abc:	bge	2994c <main@@Base+0x16654>
   29ac0:	mov	r0, r9
   29ac4:	mov	r1, r4
   29ac8:	mov	r2, r8
   29acc:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29ad0:	mov	r2, r0
   29ad4:	cmp	r2, r8
   29ad8:	bne	29964 <main@@Base+0x1666c>
   29adc:	b	29c80 <main@@Base+0x16988>
   29ae0:	mov	r0, r9
   29ae4:	mov	r1, r6
   29ae8:	mov	r2, r8
   29aec:	mov	r3, #4
   29af0:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29af4:	b	29b14 <main@@Base+0x1681c>
   29af8:	bne	29b08 <main@@Base+0x16810>
   29afc:	ldrb	r0, [r6, #2]!
   29b00:	cmp	r0, #32
   29b04:	bhi	29b18 <main@@Base+0x16820>
   29b08:	mov	r0, r9
   29b0c:	mov	r2, r8
   29b10:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29b14:	mov	r6, r0
   29b18:	cmp	r4, r6
   29b1c:	beq	29aa0 <main@@Base+0x167a8>
   29b20:	mov	r5, #0
   29b24:	cmp	r6, r8
   29b28:	str	r5, [sp, #36]	; 0x24
   29b2c:	str	r5, [sp, #32]
   29b30:	str	r5, [sp, #24]
   29b34:	str	r5, [sp, #28]
   29b38:	beq	29b98 <main@@Base+0x168a0>
   29b3c:	add	r0, sp, #32
   29b40:	mov	r1, r6
   29b44:	mov	r2, r8
   29b48:	add	r3, sp, #28
   29b4c:	str	r0, [sp]
   29b50:	mov	r0, r9
   29b54:	bl	323e8 <flatcc_json_parser_integer@@Base>
   29b58:	cmp	r0, r6
   29b5c:	beq	29ba8 <main@@Base+0x168b0>
   29b60:	ldr	r2, [sp, #28]
   29b64:	mov	r4, r0
   29b68:	ldr	r0, [sp, #32]
   29b6c:	ldr	r1, [sp, #36]	; 0x24
   29b70:	cmp	r2, #0
   29b74:	beq	29bb8 <main@@Base+0x168c0>
   29b78:	subs	r2, r0, #-2147483647	; 0x80000001
   29b7c:	sbcs	r1, r1, #0
   29b80:	bcc	29be8 <main@@Base+0x168f0>
   29b84:	mov	r0, r9
   29b88:	mov	r1, r4
   29b8c:	mov	r2, r8
   29b90:	mov	r3, #8
   29b94:	b	29bd4 <main@@Base+0x168dc>
   29b98:	mov	r4, r8
   29b9c:	cmp	r6, r4
   29ba0:	bne	29c3c <main@@Base+0x16944>
   29ba4:	b	29c0c <main@@Base+0x16914>
   29ba8:	mov	r4, r6
   29bac:	cmp	r6, r4
   29bb0:	bne	29c3c <main@@Base+0x16944>
   29bb4:	b	29c0c <main@@Base+0x16914>
   29bb8:	subs	r2, r0, #-2147483648	; 0x80000000
   29bbc:	sbcs	r1, r1, #0
   29bc0:	bcc	29bfc <main@@Base+0x16904>
   29bc4:	mov	r0, r9
   29bc8:	mov	r1, r4
   29bcc:	mov	r2, r8
   29bd0:	mov	r3, #7
   29bd4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29bd8:	mov	r4, r0
   29bdc:	cmp	r6, r4
   29be0:	bne	29c3c <main@@Base+0x16944>
   29be4:	b	29c0c <main@@Base+0x16914>
   29be8:	rsb	r5, r0, #0
   29bec:	str	r5, [sp, #24]
   29bf0:	cmp	r6, r4
   29bf4:	bne	29c3c <main@@Base+0x16944>
   29bf8:	b	29c0c <main@@Base+0x16914>
   29bfc:	mov	r5, r0
   29c00:	str	r5, [sp, #24]
   29c04:	cmp	r6, r4
   29c08:	bne	29c3c <main@@Base+0x16944>
   29c0c:	add	r0, sp, #24
   29c10:	mov	r1, r6
   29c14:	mov	r2, r8
   29c18:	str	r0, [sp]
   29c1c:	mov	r0, r9
   29c20:	ldr	r3, [sp, #8]
   29c24:	bl	23e4c <main@@Base+0x10b54>
   29c28:	mov	r4, r0
   29c2c:	cmp	r0, r6
   29c30:	cmpne	r4, r8
   29c34:	beq	29d6c <main@@Base+0x16a74>
   29c38:	ldr	r5, [sp, #24]
   29c3c:	cmp	r5, #0
   29c40:	bne	29c50 <main@@Base+0x16958>
   29c44:	ldrb	r0, [r9, #8]
   29c48:	tst	r0, #2
   29c4c:	beq	29940 <main@@Base+0x16648>
   29c50:	ldr	r0, [r9]
   29c54:	mov	r1, #0
   29c58:	mov	r2, #4
   29c5c:	mov	r3, #4
   29c60:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   29c64:	cmp	r0, #0
   29c68:	beq	29d6c <main@@Base+0x16a74>
   29c6c:	str	r5, [r0]
   29c70:	sub	r0, r8, r4
   29c74:	cmp	r0, #2
   29c78:	bge	2994c <main@@Base+0x16654>
   29c7c:	b	29ac0 <main@@Base+0x167c8>
   29c80:	mov	r4, r8
   29c84:	ldr	r0, [r9, #24]
   29c88:	cmp	r0, #0
   29c8c:	bne	29020 <main@@Base+0x15d28>
   29c90:	b	29cc8 <main@@Base+0x169d0>
   29c94:	cmp	r0, #125	; 0x7d
   29c98:	bne	29d24 <main@@Base+0x16a2c>
   29c9c:	add	r1, r2, #1
   29ca0:	sub	r0, r8, r1
   29ca4:	cmp	r0, #2
   29ca8:	blt	29d4c <main@@Base+0x16a54>
   29cac:	ldrb	r0, [r1]
   29cb0:	cmp	r0, #32
   29cb4:	bls	29d38 <main@@Base+0x16a40>
   29cb8:	mov	r4, r1
   29cbc:	ldr	r0, [r9, #24]
   29cc0:	cmp	r0, #0
   29cc4:	bne	29020 <main@@Base+0x15d28>
   29cc8:	ldr	r0, [r9]
   29ccc:	bl	2d734 <flatcc_builder_end_table@@Base>
   29cd0:	cmp	r0, #0
   29cd4:	str	r0, [r7]
   29cd8:	bne	29038 <main@@Base+0x15d40>
   29cdc:	b	29020 <main@@Base+0x15d28>
   29ce0:	mov	r0, r9
   29ce4:	mov	r1, r8
   29ce8:	b	29d2c <main@@Base+0x16a34>
   29cec:	mov	r0, r9
   29cf0:	mov	r1, r2
   29cf4:	mov	r2, r8
   29cf8:	mov	r3, #10
   29cfc:	b	28fc0 <main@@Base+0x15cc8>
   29d00:	bne	29d14 <main@@Base+0x16a1c>
   29d04:	ldrb	r0, [r2, #2]!
   29d08:	mov	r4, r2
   29d0c:	cmp	r0, #32
   29d10:	bhi	28fc8 <main@@Base+0x15cd0>
   29d14:	mov	r0, r9
   29d18:	mov	r2, r8
   29d1c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29d20:	b	28fc4 <main@@Base+0x15ccc>
   29d24:	mov	r0, r9
   29d28:	mov	r1, r2
   29d2c:	mov	r2, r8
   29d30:	mov	r3, #10
   29d34:	b	2900c <main@@Base+0x15d14>
   29d38:	bne	29d4c <main@@Base+0x16a54>
   29d3c:	ldrb	r0, [r2, #2]!
   29d40:	mov	r4, r2
   29d44:	cmp	r0, #32
   29d48:	bhi	29014 <main@@Base+0x15d1c>
   29d4c:	mov	r0, r9
   29d50:	mov	r2, r8
   29d54:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29d58:	b	29010 <main@@Base+0x15d18>
   29d5c:	mov	r0, r9
   29d60:	mov	r2, r8
   29d64:	mov	r3, #33	; 0x21
   29d68:	b	28fc0 <main@@Base+0x15cc8>
   29d6c:	ldr	r7, [sp, #16]
   29d70:	b	29020 <main@@Base+0x15d28>
   29d74:	add	r0, r0, #1
   29d78:	uxtb	r1, r0
   29d7c:	cmp	r1, #12
   29d80:	movhi	r0, #0
   29d84:	bxhi	lr
   29d88:	movw	r1, #19688	; 0x4ce8
   29d8c:	sxtb	r0, r0
   29d90:	movt	r1, #3
   29d94:	ldr	r0, [r1, r0, lsl #2]
   29d98:	bx	lr
   29d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29da0:	add	fp, sp, #28
   29da4:	sub	sp, sp, #36	; 0x24
   29da8:	mov	r9, r0
   29dac:	mov	r0, #0
   29db0:	mov	sl, r2
   29db4:	mov	r6, r1
   29db8:	mov	r1, #4
   29dbc:	mov	r2, #4
   29dc0:	str	r3, [sp, #12]
   29dc4:	str	r0, [r3]
   29dc8:	ldr	r0, [r9]
   29dcc:	bl	2bab0 <flatcc_builder_start_struct@@Base>
   29dd0:	cmp	r0, #0
   29dd4:	beq	29ea4 <main@@Base+0x16bac>
   29dd8:	cmp	r6, sl
   29ddc:	beq	29e58 <main@@Base+0x16b60>
   29de0:	ldrb	r1, [r6]
   29de4:	cmp	r1, #123	; 0x7b
   29de8:	bne	29e58 <main@@Base+0x16b60>
   29dec:	add	r1, r6, #1
   29df0:	str	r0, [sp, #8]
   29df4:	sub	r0, sl, r1
   29df8:	cmp	r0, #2
   29dfc:	blt	29eec <main@@Base+0x16bf4>
   29e00:	ldrb	r0, [r1]
   29e04:	cmp	r0, #32
   29e08:	bls	29edc <main@@Base+0x16be4>
   29e0c:	mov	r6, r1
   29e10:	cmp	r6, sl
   29e14:	mov	r2, sl
   29e18:	beq	29f08 <main@@Base+0x16c10>
   29e1c:	ldrb	r0, [r6]
   29e20:	cmp	r0, #125	; 0x7d
   29e24:	bne	29ec8 <main@@Base+0x16bd0>
   29e28:	add	r1, r6, #1
   29e2c:	sub	r0, sl, r1
   29e30:	cmp	r0, #2
   29e34:	blt	2a428 <main@@Base+0x17130>
   29e38:	ldrb	r0, [r1]
   29e3c:	cmp	r0, #32
   29e40:	bhi	2a3e0 <main@@Base+0x170e8>
   29e44:	bne	2a428 <main@@Base+0x17130>
   29e48:	ldrb	r0, [r6, #2]!
   29e4c:	cmp	r0, #32
   29e50:	bhi	29e70 <main@@Base+0x16b78>
   29e54:	b	2a428 <main@@Base+0x17130>
   29e58:	mov	r0, r9
   29e5c:	mov	r1, r6
   29e60:	mov	r2, sl
   29e64:	mov	r3, #21
   29e68:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29e6c:	mov	r6, r0
   29e70:	cmp	r6, sl
   29e74:	mov	r1, sl
   29e78:	beq	29ea8 <main@@Base+0x16bb0>
   29e7c:	ldr	r0, [r9]
   29e80:	bl	2bba4 <flatcc_builder_end_struct@@Base>
   29e84:	ldr	r1, [sp, #12]
   29e88:	cmp	r0, #0
   29e8c:	str	r0, [r1]
   29e90:	mov	r1, r6
   29e94:	beq	29ea8 <main@@Base+0x16bb0>
   29e98:	mov	r0, r6
   29e9c:	sub	sp, fp, #28
   29ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ea4:	mov	r1, r6
   29ea8:	mov	r0, r9
   29eac:	mov	r2, sl
   29eb0:	mov	r3, #33	; 0x21
   29eb4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29eb8:	mov	r6, r0
   29ebc:	mov	r0, r6
   29ec0:	sub	sp, fp, #28
   29ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ec8:	mov	r2, r6
   29ecc:	cmp	r2, sl
   29ed0:	mov	r1, sl
   29ed4:	bne	29f14 <main@@Base+0x16c1c>
   29ed8:	b	29f5c <main@@Base+0x16c64>
   29edc:	bne	29eec <main@@Base+0x16bf4>
   29ee0:	ldrb	r0, [r6, #2]!
   29ee4:	cmp	r0, #32
   29ee8:	bhi	29efc <main@@Base+0x16c04>
   29eec:	mov	r0, r9
   29ef0:	mov	r2, sl
   29ef4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   29ef8:	mov	r6, r0
   29efc:	cmp	r6, sl
   29f00:	mov	r2, sl
   29f04:	bne	29e1c <main@@Base+0x16b24>
   29f08:	cmp	r2, sl
   29f0c:	mov	r1, sl
   29f10:	beq	29f5c <main@@Base+0x16c64>
   29f14:	ldrb	r0, [r2]
   29f18:	cmp	r0, #46	; 0x2e
   29f1c:	beq	29f34 <main@@Base+0x16c3c>
   29f20:	cmp	r0, #34	; 0x22
   29f24:	bne	29f50 <main@@Base+0x16c58>
   29f28:	mov	r0, #0
   29f2c:	add	r1, r2, #1
   29f30:	b	29f58 <main@@Base+0x16c60>
   29f34:	mov	r1, r2
   29f38:	mov	r0, r9
   29f3c:	mov	r2, sl
   29f40:	mov	r3, #5
   29f44:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   29f48:	mov	r1, r0
   29f4c:	b	29f5c <main@@Base+0x16c64>
   29f50:	mov	r0, #1
   29f54:	mov	r1, r2
   29f58:	str	r0, [r9, #12]
   29f5c:	sub	r0, sl, r1
   29f60:	mov	r2, #8
   29f64:	cmp	r0, #8
   29f68:	movcs	r0, r2
   29f6c:	sub	r6, r0, #1
   29f70:	cmp	r6, #7
   29f74:	bhi	2a0b8 <main@@Base+0x16dc0>
   29f78:	add	r0, pc, #32
   29f7c:	mov	r8, #0
   29f80:	mov	ip, #0
   29f84:	mov	lr, #0
   29f88:	mov	r7, #0
   29f8c:	mov	r3, #0
   29f90:	mov	r5, #0
   29f94:	mov	r2, #0
   29f98:	mov	r4, #0
   29f9c:	ldr	pc, [r0, r6, lsl #2]
   29fa0:	andeq	sl, r2, r4
   29fa4:	strdeq	r9, [r2], -ip
   29fa8:	strdeq	r9, [r2], -r4
   29fac:	andeq	r9, r2, ip, ror #31
   29fb0:	andeq	r9, r2, r0, ror #31
   29fb4:	ldrdeq	r9, [r2], -r4
   29fb8:	andeq	r9, r2, r4, asr #31
   29fbc:	andeq	r9, r2, r0, asr #31
   29fc0:	ldrb	ip, [r1, #7]
   29fc4:	ldrb	r0, [r1, #6]
   29fc8:	mov	lr, r8
   29fcc:	orr	r0, ip, r0, lsl #8
   29fd0:	mov	r8, r0
   29fd4:	ldrb	r0, [r1, #5]
   29fd8:	mov	r7, lr
   29fdc:	orr	r8, r8, r0, lsl #16
   29fe0:	ldrb	r0, [r1, #4]
   29fe4:	mov	r3, r7
   29fe8:	orr	r8, r8, r0, lsl #24
   29fec:	ldrb	r0, [r1, #3]
   29ff0:	orr	r5, r0, r3
   29ff4:	ldrb	r0, [r1, #2]
   29ff8:	orr	r2, r5, r0, lsl #8
   29ffc:	ldrb	r0, [r1, #1]
   2a000:	orr	r4, r2, r0, lsl #16
   2a004:	ldrb	r2, [r1]
   2a008:	movw	r0, #29285	; 0x7265
   2a00c:	movw	r3, #28523	; 0x6f6b
   2a010:	movt	r0, #29535	; 0x735f
   2a014:	movt	r3, #25199	; 0x626f
   2a018:	eor	r0, r8, r0
   2a01c:	orr	r2, r4, r2, lsl #24
   2a020:	eor	r2, r2, r3
   2a024:	orrs	r0, r0, r2
   2a028:	bne	2a0b8 <main@@Base+0x16dc0>
   2a02c:	add	r8, r1, #8
   2a030:	mov	r3, #8
   2a034:	sub	r0, sl, r8
   2a038:	cmp	r0, #8
   2a03c:	movcc	r3, r0
   2a040:	sub	r2, r3, #2
   2a044:	cmp	r2, #7
   2a048:	bcs	2a0c0 <main@@Base+0x16dc8>
   2a04c:	ldrb	r2, [r1, #9]
   2a050:	lsl	r3, r2, #16
   2a054:	mov	r2, #0
   2a058:	ldrb	r7, [r8]
   2a05c:	orr	r3, r3, r7, lsl #24
   2a060:	movw	r7, #0
   2a064:	movt	r7, #24932	; 0x6164
   2a068:	eor	r3, r3, r7
   2a06c:	orrs	r2, r2, r3
   2a070:	bne	2a16c <main@@Base+0x16e74>
   2a074:	cmp	r0, #3
   2a078:	blt	2a16c <main@@Base+0x16e74>
   2a07c:	mov	r2, r1
   2a080:	ldr	r3, [r9, #12]
   2a084:	ldrb	r0, [r2, #10]!
   2a088:	cmp	r3, #0
   2a08c:	beq	2a0d4 <main@@Base+0x16ddc>
   2a090:	cmp	r0, #33	; 0x21
   2a094:	bcc	2a0a0 <main@@Base+0x16da8>
   2a098:	cmp	r0, #58	; 0x3a
   2a09c:	bne	2a16c <main@@Base+0x16e74>
   2a0a0:	mov	r0, #0
   2a0a4:	str	r0, [r9, #12]
   2a0a8:	sub	r0, sl, r2
   2a0ac:	cmp	r0, #2
   2a0b0:	bge	2a0ec <main@@Base+0x16df4>
   2a0b4:	b	2a11c <main@@Base+0x16e24>
   2a0b8:	mov	r0, r9
   2a0bc:	b	2a174 <main@@Base+0x16e7c>
   2a0c0:	cmp	r3, #1
   2a0c4:	mov	r2, #0
   2a0c8:	mov	r3, #0
   2a0cc:	beq	2a058 <main@@Base+0x16d60>
   2a0d0:	b	2a16c <main@@Base+0x16e74>
   2a0d4:	cmp	r0, #34	; 0x22
   2a0d8:	bne	2a16c <main@@Base+0x16e74>
   2a0dc:	add	r2, r1, #11
   2a0e0:	sub	r0, sl, r2
   2a0e4:	cmp	r0, #2
   2a0e8:	blt	2a11c <main@@Base+0x16e24>
   2a0ec:	ldrb	r0, [r2]
   2a0f0:	cmp	r0, #32
   2a0f4:	bls	2a108 <main@@Base+0x16e10>
   2a0f8:	mov	r7, r2
   2a0fc:	cmp	r7, sl
   2a100:	bne	2a138 <main@@Base+0x16e40>
   2a104:	b	2a244 <main@@Base+0x16f4c>
   2a108:	bne	2a11c <main@@Base+0x16e24>
   2a10c:	mov	r7, r2
   2a110:	ldrb	r0, [r7, #1]!
   2a114:	cmp	r0, #32
   2a118:	bhi	2a130 <main@@Base+0x16e38>
   2a11c:	mov	r1, r2
   2a120:	mov	r0, r9
   2a124:	mov	r2, sl
   2a128:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2a12c:	mov	r7, r0
   2a130:	cmp	r7, sl
   2a134:	beq	2a244 <main@@Base+0x16f4c>
   2a138:	ldrb	r0, [r7]
   2a13c:	cmp	r0, #58	; 0x3a
   2a140:	bne	2a244 <main@@Base+0x16f4c>
   2a144:	add	r1, r7, #1
   2a148:	sub	r0, sl, r1
   2a14c:	cmp	r0, #2
   2a150:	blt	2a26c <main@@Base+0x16f74>
   2a154:	ldrb	r0, [r1]
   2a158:	cmp	r0, #32
   2a15c:	bls	2a25c <main@@Base+0x16f64>
   2a160:	mov	r7, r1
   2a164:	cmp	r8, r7
   2a168:	bne	2a284 <main@@Base+0x16f8c>
   2a16c:	mov	r0, r9
   2a170:	mov	r1, r8
   2a174:	mov	r2, sl
   2a178:	bl	307fc <flatcc_json_parser_unmatched_symbol@@Base>
   2a17c:	mov	r1, r0
   2a180:	sub	r0, sl, r1
   2a184:	cmp	r0, #2
   2a188:	blt	2a1fc <main@@Base+0x16f04>
   2a18c:	ldrb	r0, [r1]
   2a190:	cmp	r0, #32
   2a194:	bls	2a1e8 <main@@Base+0x16ef0>
   2a198:	mov	r2, r1
   2a19c:	cmp	r2, sl
   2a1a0:	beq	2a3b4 <main@@Base+0x170bc>
   2a1a4:	ldrb	r0, [r2]
   2a1a8:	cmp	r0, #44	; 0x2c
   2a1ac:	bne	2a3bc <main@@Base+0x170c4>
   2a1b0:	add	r1, r2, #1
   2a1b4:	sub	r0, sl, r1
   2a1b8:	cmp	r0, #2
   2a1bc:	blt	2a228 <main@@Base+0x16f30>
   2a1c0:	ldrb	r0, [r1]
   2a1c4:	cmp	r0, #32
   2a1c8:	bls	2a218 <main@@Base+0x16f20>
   2a1cc:	mov	r2, r1
   2a1d0:	cmp	r2, sl
   2a1d4:	beq	2a3f4 <main@@Base+0x170fc>
   2a1d8:	ldrb	r0, [r2]
   2a1dc:	cmp	r0, #125	; 0x7d
   2a1e0:	bne	29f08 <main@@Base+0x16c10>
   2a1e4:	b	2a3c4 <main@@Base+0x170cc>
   2a1e8:	bne	2a1fc <main@@Base+0x16f04>
   2a1ec:	mov	r2, r1
   2a1f0:	ldrb	r0, [r2, #1]!
   2a1f4:	cmp	r0, #32
   2a1f8:	bhi	2a20c <main@@Base+0x16f14>
   2a1fc:	mov	r0, r9
   2a200:	mov	r2, sl
   2a204:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2a208:	mov	r2, r0
   2a20c:	cmp	r2, sl
   2a210:	bne	2a1a4 <main@@Base+0x16eac>
   2a214:	b	2a3b4 <main@@Base+0x170bc>
   2a218:	bne	2a228 <main@@Base+0x16f30>
   2a21c:	ldrb	r0, [r2, #2]!
   2a220:	cmp	r0, #32
   2a224:	bhi	2a238 <main@@Base+0x16f40>
   2a228:	mov	r0, r9
   2a22c:	mov	r2, sl
   2a230:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2a234:	mov	r2, r0
   2a238:	cmp	r2, sl
   2a23c:	bne	2a1d8 <main@@Base+0x16ee0>
   2a240:	b	2a3f4 <main@@Base+0x170fc>
   2a244:	mov	r0, r9
   2a248:	mov	r1, r7
   2a24c:	mov	r2, sl
   2a250:	mov	r3, #4
   2a254:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2a258:	b	2a278 <main@@Base+0x16f80>
   2a25c:	bne	2a26c <main@@Base+0x16f74>
   2a260:	ldrb	r0, [r7, #2]!
   2a264:	cmp	r0, #32
   2a268:	bhi	2a27c <main@@Base+0x16f84>
   2a26c:	mov	r0, r9
   2a270:	mov	r2, sl
   2a274:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2a278:	mov	r7, r0
   2a27c:	cmp	r8, r7
   2a280:	beq	2a16c <main@@Base+0x16e74>
   2a284:	mov	r6, #0
   2a288:	cmp	r7, sl
   2a28c:	str	r6, [sp, #28]
   2a290:	str	r6, [sp, #24]
   2a294:	str	r6, [sp, #16]
   2a298:	str	r6, [sp, #20]
   2a29c:	beq	2a2f8 <main@@Base+0x17000>
   2a2a0:	add	r0, sp, #24
   2a2a4:	mov	r1, r7
   2a2a8:	mov	r2, sl
   2a2ac:	add	r3, sp, #20
   2a2b0:	str	r0, [sp]
   2a2b4:	mov	r0, r9
   2a2b8:	bl	323e8 <flatcc_json_parser_integer@@Base>
   2a2bc:	cmp	r0, r7
   2a2c0:	beq	2a308 <main@@Base+0x17010>
   2a2c4:	ldr	r3, [sp, #20]
   2a2c8:	mov	r1, r0
   2a2cc:	ldr	r0, [sp, #24]
   2a2d0:	ldr	r2, [sp, #28]
   2a2d4:	cmp	r3, #0
   2a2d8:	beq	2a318 <main@@Base+0x17020>
   2a2dc:	subs	r3, r0, #-2147483647	; 0x80000001
   2a2e0:	sbcs	r2, r2, #0
   2a2e4:	bcc	2a344 <main@@Base+0x1704c>
   2a2e8:	mov	r0, r9
   2a2ec:	mov	r2, sl
   2a2f0:	mov	r3, #8
   2a2f4:	b	2a330 <main@@Base+0x17038>
   2a2f8:	mov	r1, sl
   2a2fc:	cmp	r7, r1
   2a300:	bne	2a39c <main@@Base+0x170a4>
   2a304:	b	2a368 <main@@Base+0x17070>
   2a308:	mov	r1, r7
   2a30c:	cmp	r7, r1
   2a310:	bne	2a39c <main@@Base+0x170a4>
   2a314:	b	2a368 <main@@Base+0x17070>
   2a318:	subs	r3, r0, #-2147483648	; 0x80000000
   2a31c:	sbcs	r2, r2, #0
   2a320:	bcc	2a358 <main@@Base+0x17060>
   2a324:	mov	r0, r9
   2a328:	mov	r2, sl
   2a32c:	mov	r3, #7
   2a330:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2a334:	mov	r1, r0
   2a338:	cmp	r7, r1
   2a33c:	bne	2a39c <main@@Base+0x170a4>
   2a340:	b	2a368 <main@@Base+0x17070>
   2a344:	rsb	r6, r0, #0
   2a348:	str	r6, [sp, #16]
   2a34c:	cmp	r7, r1
   2a350:	bne	2a39c <main@@Base+0x170a4>
   2a354:	b	2a368 <main@@Base+0x17070>
   2a358:	mov	r6, r0
   2a35c:	str	r6, [sp, #16]
   2a360:	cmp	r7, r1
   2a364:	bne	2a39c <main@@Base+0x170a4>
   2a368:	movw	r3, #32900	; 0x8084
   2a36c:	add	r0, sp, #16
   2a370:	mov	r1, r7
   2a374:	mov	r2, sl
   2a378:	movt	r3, #4
   2a37c:	str	r0, [sp]
   2a380:	mov	r0, r9
   2a384:	bl	23e4c <main@@Base+0x10b54>
   2a388:	mov	r1, r0
   2a38c:	cmp	r0, r7
   2a390:	cmpne	r1, sl
   2a394:	beq	2a438 <main@@Base+0x17140>
   2a398:	ldr	r6, [sp, #16]
   2a39c:	ldr	r0, [sp, #8]
   2a3a0:	str	r6, [r0]
   2a3a4:	sub	r0, sl, r1
   2a3a8:	cmp	r0, #2
   2a3ac:	bge	2a18c <main@@Base+0x16e94>
   2a3b0:	b	2a1fc <main@@Base+0x16f04>
   2a3b4:	mov	r1, sl
   2a3b8:	b	29ea8 <main@@Base+0x16bb0>
   2a3bc:	cmp	r0, #125	; 0x7d
   2a3c0:	bne	2a400 <main@@Base+0x17108>
   2a3c4:	add	r1, r2, #1
   2a3c8:	sub	r0, sl, r1
   2a3cc:	cmp	r0, #2
   2a3d0:	blt	2a428 <main@@Base+0x17130>
   2a3d4:	ldrb	r0, [r1]
   2a3d8:	cmp	r0, #32
   2a3dc:	bls	2a414 <main@@Base+0x1711c>
   2a3e0:	mov	r6, r1
   2a3e4:	cmp	r6, sl
   2a3e8:	mov	r1, sl
   2a3ec:	bne	29e7c <main@@Base+0x16b84>
   2a3f0:	b	29ea8 <main@@Base+0x16bb0>
   2a3f4:	mov	r0, r9
   2a3f8:	mov	r1, sl
   2a3fc:	b	2a408 <main@@Base+0x17110>
   2a400:	mov	r0, r9
   2a404:	mov	r1, r2
   2a408:	mov	r2, sl
   2a40c:	mov	r3, #10
   2a410:	b	29e68 <main@@Base+0x16b70>
   2a414:	bne	2a428 <main@@Base+0x17130>
   2a418:	ldrb	r0, [r2, #2]!
   2a41c:	mov	r6, r2
   2a420:	cmp	r0, #32
   2a424:	bhi	29e70 <main@@Base+0x16b78>
   2a428:	mov	r0, r9
   2a42c:	mov	r2, sl
   2a430:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2a434:	b	29e6c <main@@Base+0x16b74>
   2a438:	mov	r0, r9
   2a43c:	mov	r2, sl
   2a440:	mov	r3, #33	; 0x21
   2a444:	b	29e68 <main@@Base+0x16b70>
   2a448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a44c:	add	fp, sp, #28
   2a450:	sub	sp, sp, #44	; 0x2c
   2a454:	mov	r6, r2
   2a458:	ldr	r2, [fp, #8]
   2a45c:	mov	r5, r0
   2a460:	mov	r0, #0
   2a464:	mov	sl, r3
   2a468:	cmp	r1, r6
   2a46c:	strh	r0, [r2]
   2a470:	beq	2a494 <main@@Base+0x1719c>
   2a474:	ldrb	r0, [r1]
   2a478:	cmp	r0, #46	; 0x2e
   2a47c:	beq	2a4bc <main@@Base+0x171c4>
   2a480:	cmp	r0, #34	; 0x22
   2a484:	bne	2a68c <main@@Base+0x17394>
   2a488:	mov	r0, #0
   2a48c:	add	r1, r1, #1
   2a490:	str	r0, [r5, #12]
   2a494:	ldr	r0, [r5, #12]
   2a498:	cmp	r0, #0
   2a49c:	beq	2a4dc <main@@Base+0x171e4>
   2a4a0:	mov	r7, r1
   2a4a4:	cmp	r7, r6
   2a4a8:	bne	2a520 <main@@Base+0x17228>
   2a4ac:	mov	r4, r6
   2a4b0:	mov	r0, r4
   2a4b4:	sub	sp, fp, #28
   2a4b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a4bc:	mov	r0, r5
   2a4c0:	mov	r2, r6
   2a4c4:	mov	r3, #5
   2a4c8:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2a4cc:	mov	r1, r0
   2a4d0:	ldr	r0, [r5, #12]
   2a4d4:	cmp	r0, #0
   2a4d8:	bne	2a4a0 <main@@Base+0x171a8>
   2a4dc:	sub	r0, r6, r1
   2a4e0:	cmp	r0, #2
   2a4e4:	blt	2a508 <main@@Base+0x17210>
   2a4e8:	ldrb	r0, [r1]
   2a4ec:	cmp	r0, #32
   2a4f0:	bhi	2a4a0 <main@@Base+0x171a8>
   2a4f4:	bne	2a508 <main@@Base+0x17210>
   2a4f8:	mov	r7, r1
   2a4fc:	ldrb	r0, [r7, #1]!
   2a500:	cmp	r0, #32
   2a504:	bhi	2a518 <main@@Base+0x17220>
   2a508:	mov	r0, r5
   2a50c:	mov	r2, r6
   2a510:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   2a514:	mov	r7, r0
   2a518:	cmp	r7, r6
   2a51c:	beq	2a4ac <main@@Base+0x171b4>
   2a520:	mov	r1, #0
   2a524:	add	r0, sl, #4
   2a528:	add	r8, sp, #32
   2a52c:	add	r9, sp, #28
   2a530:	str	sl, [sp, #12]
   2a534:	str	r1, [sp, #16]
   2a538:	mov	r1, #0
   2a53c:	str	r0, [sp, #8]
   2a540:	str	r1, [sp, #20]
   2a544:	ldr	r4, [sl]
   2a548:	mov	sl, r0
   2a54c:	add	r0, sp, #24
   2a550:	mov	r1, r7
   2a554:	mov	r2, r6
   2a558:	mov	r3, r9
   2a55c:	str	r8, [sp]
   2a560:	str	r0, [sp, #4]
   2a564:	mov	r0, r5
   2a568:	blx	r4
   2a56c:	cmp	r0, r6
   2a570:	beq	2a658 <main@@Base+0x17360>
   2a574:	mov	r4, r0
   2a578:	cmp	r0, r7
   2a57c:	bne	2a590 <main@@Base+0x17298>
   2a580:	ldr	r4, [sl], #4
   2a584:	cmp	r4, #0
   2a588:	bne	2a54c <main@@Base+0x17254>
   2a58c:	b	2a668 <main@@Base+0x17370>
   2a590:	ldr	r7, [sp, #20]
   2a594:	cmp	r7, #0
   2a598:	beq	2a5a8 <main@@Base+0x172b0>
   2a59c:	ldr	r0, [r5, #12]
   2a5a0:	cmp	r0, #0
   2a5a4:	bne	2a6a4 <main@@Base+0x173ac>
   2a5a8:	ldr	r0, [sp, #28]
   2a5ac:	cmp	r0, #0
   2a5b0:	beq	2a5d8 <main@@Base+0x172e0>
   2a5b4:	mov	r0, r5
   2a5b8:	mov	r1, r4
   2a5bc:	mov	r2, r6
   2a5c0:	mov	r3, #8
   2a5c4:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2a5c8:	ldr	sl, [sp, #12]
   2a5cc:	cmp	r0, r6
   2a5d0:	bne	2a620 <main@@Base+0x17328>
   2a5d4:	b	2a658 <main@@Base+0x17360>
   2a5d8:	ldr	r0, [sp, #32]
   2a5dc:	ldr	r1, [sp, #36]	; 0x24
   2a5e0:	ldr	sl, [sp, #12]
   2a5e4:	subs	r2, r0, #65536	; 0x10000
   2a5e8:	sbcs	r1, r1, #0
   2a5ec:	bcc	2a610 <main@@Base+0x17318>
   2a5f0:	mov	r0, r5
   2a5f4:	mov	r1, r4
   2a5f8:	mov	r2, r6
   2a5fc:	mov	r3, #7
   2a600:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2a604:	cmp	r0, r6
   2a608:	bne	2a620 <main@@Base+0x17328>
   2a60c:	b	2a658 <main@@Base+0x17360>
   2a610:	str	r0, [sp, #16]
   2a614:	mov	r0, r4
   2a618:	cmp	r0, r6
   2a61c:	beq	2a658 <main@@Base+0x17360>
   2a620:	ldr	r0, [fp, #8]
   2a624:	ldr	r2, [sp, #16]
   2a628:	add	r7, r7, #1
   2a62c:	str	r7, [sp, #20]
   2a630:	mov	r7, r4
   2a634:	mov	r1, r0
   2a638:	ldrh	r0, [r0]
   2a63c:	add	r0, r0, r2
   2a640:	strh	r0, [r1]
   2a644:	ldr	r0, [sp, #24]
   2a648:	cmp	r0, #0
   2a64c:	ldr	r0, [sp, #8]
   2a650:	bne	2a544 <main@@Base+0x1724c>
   2a654:	b	2a4b0 <main@@Base+0x171b8>
   2a658:	mov	r4, r6
   2a65c:	mov	r0, r4
   2a660:	sub	sp, fp, #28
   2a664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a668:	mov	r0, r5
   2a66c:	mov	r1, r7
   2a670:	mov	r2, r6
   2a674:	mov	r3, #23
   2a678:	bl	2fedc <flatcc_json_parser_set_error@@Base>
   2a67c:	mov	r4, r0
   2a680:	mov	r0, r4
   2a684:	sub	sp, fp, #28
   2a688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a68c:	mov	r0, #1
   2a690:	str	r0, [r5, #12]
   2a694:	ldr	r0, [r5, #12]
   2a698:	cmp	r0, #0
   2a69c:	bne	2a4a0 <main@@Base+0x171a8>
   2a6a0:	b	2a4dc <main@@Base+0x171e4>
   2a6a4:	mov	r0, r5
   2a6a8:	mov	r1, r4
   2a6ac:	mov	r2, r6
   2a6b0:	mov	r3, #14
   2a6b4:	b	2a678 <main@@Base+0x17380>

0002a6b8 <flatcc_builder_default_alloc@@Base>:
   2a6b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a6bc:	add	fp, sp, #24
   2a6c0:	mov	r4, r1
   2a6c4:	cmp	r2, #0
   2a6c8:	beq	2a710 <flatcc_builder_default_alloc@@Base+0x58>
   2a6cc:	ldr	r0, [fp, #8]
   2a6d0:	mov	r8, r3
   2a6d4:	sub	r1, r0, #1
   2a6d8:	cmp	r1, #6
   2a6dc:	bhi	2a740 <flatcc_builder_default_alloc@@Base+0x88>
   2a6e0:	add	r3, pc, #4
   2a6e4:	mov	r0, #256	; 0x100
   2a6e8:	ldr	pc, [r3, r1, lsl #2]
   2a6ec:	andeq	sl, r2, r4, asr r7
   2a6f0:	andeq	sl, r2, r0, asr #14
   2a6f4:	andeq	sl, r2, r0, asr #14
   2a6f8:	andeq	sl, r2, r8, lsl #14
   2a6fc:	andeq	sl, r2, r8, asr #14
   2a700:	andeq	sl, r2, r0, asr #14
   2a704:	andeq	sl, r2, r0, asr r7
   2a708:	mov	r0, #288	; 0x120
   2a70c:	b	2a754 <flatcc_builder_default_alloc@@Base+0x9c>
   2a710:	ldr	r0, [r4]
   2a714:	cmp	r0, #0
   2a718:	beq	2a734 <flatcc_builder_default_alloc@@Base+0x7c>
   2a71c:	bl	12aa4 <free@plt>
   2a720:	mov	r6, #0
   2a724:	mov	r0, r6
   2a728:	str	r6, [r4]
   2a72c:	str	r6, [r4, #4]
   2a730:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a734:	mov	r6, #0
   2a738:	mov	r0, r6
   2a73c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a740:	mov	r0, #32
   2a744:	b	2a754 <flatcc_builder_default_alloc@@Base+0x9c>
   2a748:	mov	r0, r2
   2a74c:	b	2a754 <flatcc_builder_default_alloc@@Base+0x9c>
   2a750:	mov	r0, #64	; 0x40
   2a754:	mov	r7, r0
   2a758:	lsl	r0, r0, #1
   2a75c:	cmp	r7, r2
   2a760:	bcc	2a754 <flatcc_builder_default_alloc@@Base+0x9c>
   2a764:	ldr	r0, [r4, #4]
   2a768:	mov	r6, #0
   2a76c:	cmp	r0, r2
   2a770:	lsrcs	r0, r0, #1
   2a774:	cmpcs	r0, r7
   2a778:	bcs	2a7bc <flatcc_builder_default_alloc@@Base+0x104>
   2a77c:	ldr	r0, [r4]
   2a780:	mov	r1, r7
   2a784:	bl	12aec <realloc@plt>
   2a788:	cmp	r0, #0
   2a78c:	beq	2a7c4 <flatcc_builder_default_alloc@@Base+0x10c>
   2a790:	mov	r5, r0
   2a794:	cmp	r8, #0
   2a798:	beq	2a7b8 <flatcc_builder_default_alloc@@Base+0x100>
   2a79c:	ldr	r1, [r4, #4]
   2a7a0:	cmp	r7, r1
   2a7a4:	bls	2a7b8 <flatcc_builder_default_alloc@@Base+0x100>
   2a7a8:	add	r0, r5, r1
   2a7ac:	sub	r2, r7, r1
   2a7b0:	mov	r1, #0
   2a7b4:	bl	12b64 <memset@plt>
   2a7b8:	stm	r4, {r5, r7}
   2a7bc:	mov	r0, r6
   2a7c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a7c4:	mvn	r6, #0
   2a7c8:	mov	r0, r6
   2a7cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002a7d0 <flatcc_builder_flush_vtable_cache@@Base>:
   2a7d0:	push	{r4, r5, fp, lr}
   2a7d4:	add	fp, sp, #8
   2a7d8:	mov	r4, r0
   2a7dc:	ldr	r0, [r0, #116]	; 0x74
   2a7e0:	cmp	r0, #0
   2a7e4:	popeq	{r4, r5, fp, pc}
   2a7e8:	ldr	r0, [r4, #92]	; 0x5c
   2a7ec:	ldr	r2, [r4, #96]	; 0x60
   2a7f0:	mov	r1, #0
   2a7f4:	mov	r5, #0
   2a7f8:	bl	12b64 <memset@plt>
   2a7fc:	mov	r0, #16
   2a800:	str	r5, [r4, #120]	; 0x78
   2a804:	str	r0, [r4, #124]	; 0x7c
   2a808:	pop	{r4, r5, fp, pc}

0002a80c <flatcc_builder_custom_init@@Base>:
   2a80c:	push	{r4, r5, r6, r7, fp, lr}
   2a810:	add	fp, sp, #16
   2a814:	mov	r6, r2
   2a818:	mov	r7, r1
   2a81c:	mov	r1, #0
   2a820:	mov	r2, #232	; 0xe8
   2a824:	mov	r5, r3
   2a828:	mov	r4, r0
   2a82c:	bl	12b64 <memset@plt>
   2a830:	ldr	r0, [fp, #8]
   2a834:	cmp	r7, #0
   2a838:	bne	2a850 <flatcc_builder_custom_init@@Base+0x44>
   2a83c:	movw	r7, #62960	; 0xf5f0
   2a840:	mov	r1, #1
   2a844:	add	r6, r4, #188	; 0xbc
   2a848:	movt	r7, #2
   2a84c:	str	r1, [r4, #184]	; 0xb8
   2a850:	movw	r1, #42680	; 0xa6b8
   2a854:	cmp	r5, #0
   2a858:	str	r6, [r4, #36]	; 0x24
   2a85c:	str	r0, [r4, #40]	; 0x28
   2a860:	mov	r0, #0
   2a864:	str	r7, [r4, #44]	; 0x2c
   2a868:	movt	r1, #2
   2a86c:	movne	r1, r5
   2a870:	str	r1, [r4, #48]	; 0x30
   2a874:	pop	{r4, r5, r6, r7, fp, pc}

0002a878 <flatcc_builder_init@@Base>:
   2a878:	push	{r4, r5, fp, lr}
   2a87c:	add	fp, sp, #8
   2a880:	mov	r1, #0
   2a884:	mov	r2, #232	; 0xe8
   2a888:	mov	r4, r0
   2a88c:	mov	r5, #0
   2a890:	bl	12b64 <memset@plt>
   2a894:	mov	r0, #1
   2a898:	movw	r1, #62960	; 0xf5f0
   2a89c:	add	r2, r4, #188	; 0xbc
   2a8a0:	str	r0, [r4, #184]	; 0xb8
   2a8a4:	movw	r0, #42680	; 0xa6b8
   2a8a8:	movt	r1, #2
   2a8ac:	str	r2, [r4, #36]	; 0x24
   2a8b0:	str	r5, [r4, #40]	; 0x28
   2a8b4:	movt	r0, #2
   2a8b8:	str	r1, [r4, #44]	; 0x2c
   2a8bc:	str	r0, [r4, #48]	; 0x30
   2a8c0:	mov	r0, #0
   2a8c4:	pop	{r4, r5, fp, pc}

0002a8c8 <flatcc_builder_custom_reset@@Base>:
   2a8c8:	push	{r4, r5, r6, sl, fp, lr}
   2a8cc:	add	fp, sp, #16
   2a8d0:	sub	sp, sp, #8
   2a8d4:	mov	r5, r1
   2a8d8:	mov	r4, r0
   2a8dc:	cmp	r2, #0
   2a8e0:	beq	2a940 <flatcc_builder_custom_reset@@Base+0x78>
   2a8e4:	mov	r1, r4
   2a8e8:	ldr	r0, [r1, #52]!	; 0x34
   2a8ec:	cmp	r0, #0
   2a8f0:	beq	2a96c <flatcc_builder_custom_reset@@Base+0xa4>
   2a8f4:	ldr	r0, [r4, #40]	; 0x28
   2a8f8:	ldr	r6, [r4, #48]	; 0x30
   2a8fc:	mov	r2, #0
   2a900:	mov	r3, #1
   2a904:	str	r2, [sp]
   2a908:	mov	r2, #1
   2a90c:	blx	r6
   2a910:	mvn	r6, #0
   2a914:	cmp	r0, #0
   2a918:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2a91c:	ldr	r0, [r4, #52]	; 0x34
   2a920:	ldr	r2, [r4, #56]	; 0x38
   2a924:	mov	r1, #0
   2a928:	bl	12b64 <memset@plt>
   2a92c:	mov	r1, r4
   2a930:	ldr	r0, [r1, #60]!	; 0x3c
   2a934:	cmp	r0, #0
   2a938:	bne	2a988 <flatcc_builder_custom_reset@@Base+0xc0>
   2a93c:	b	2a9d4 <flatcc_builder_custom_reset@@Base+0x10c>
   2a940:	ldr	r0, [r4, #52]	; 0x34
   2a944:	ldr	r2, [r4, #56]	; 0x38
   2a948:	cmp	r0, #0
   2a94c:	beq	2aa3c <flatcc_builder_custom_reset@@Base+0x174>
   2a950:	mov	r1, #0
   2a954:	bl	12b64 <memset@plt>
   2a958:	ldr	r0, [r4, #60]	; 0x3c
   2a95c:	ldr	r2, [r4, #64]	; 0x40
   2a960:	cmp	r0, #0
   2a964:	bne	2aa54 <flatcc_builder_custom_reset@@Base+0x18c>
   2a968:	b	2aa70 <flatcc_builder_custom_reset@@Base+0x1a8>
   2a96c:	ldr	r0, [r4, #56]	; 0x38
   2a970:	cmp	r0, #0
   2a974:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2a978:	mov	r1, r4
   2a97c:	ldr	r0, [r1, #60]!	; 0x3c
   2a980:	cmp	r0, #0
   2a984:	beq	2a9d4 <flatcc_builder_custom_reset@@Base+0x10c>
   2a988:	ldr	r0, [r4, #40]	; 0x28
   2a98c:	ldr	r6, [r4, #48]	; 0x30
   2a990:	mov	r2, #1
   2a994:	mov	r3, #1
   2a998:	str	r2, [sp]
   2a99c:	mov	r2, #1
   2a9a0:	blx	r6
   2a9a4:	mvn	r6, #0
   2a9a8:	cmp	r0, #0
   2a9ac:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2a9b0:	ldr	r0, [r4, #60]	; 0x3c
   2a9b4:	ldr	r2, [r4, #64]	; 0x40
   2a9b8:	mov	r1, #0
   2a9bc:	bl	12b64 <memset@plt>
   2a9c0:	mov	r1, r4
   2a9c4:	ldr	r0, [r1, #68]!	; 0x44
   2a9c8:	cmp	r0, #0
   2a9cc:	bne	2a9f0 <flatcc_builder_custom_reset@@Base+0x128>
   2a9d0:	b	2ac2c <flatcc_builder_custom_reset@@Base+0x364>
   2a9d4:	ldr	r0, [r4, #64]	; 0x40
   2a9d8:	cmp	r0, #0
   2a9dc:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2a9e0:	mov	r1, r4
   2a9e4:	ldr	r0, [r1, #68]!	; 0x44
   2a9e8:	cmp	r0, #0
   2a9ec:	beq	2ac2c <flatcc_builder_custom_reset@@Base+0x364>
   2a9f0:	ldr	r0, [r4, #40]	; 0x28
   2a9f4:	ldr	r6, [r4, #48]	; 0x30
   2a9f8:	mov	r2, #2
   2a9fc:	mov	r3, #1
   2aa00:	str	r2, [sp]
   2aa04:	mov	r2, #1
   2aa08:	blx	r6
   2aa0c:	mvn	r6, #0
   2aa10:	cmp	r0, #0
   2aa14:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2aa18:	ldr	r0, [r4, #68]	; 0x44
   2aa1c:	ldr	r2, [r4, #72]	; 0x48
   2aa20:	mov	r1, #0
   2aa24:	bl	12b64 <memset@plt>
   2aa28:	mov	r1, r4
   2aa2c:	ldr	r0, [r1, #76]!	; 0x4c
   2aa30:	cmp	r0, #0
   2aa34:	bne	2ac48 <flatcc_builder_custom_reset@@Base+0x380>
   2aa38:	b	2ac94 <flatcc_builder_custom_reset@@Base+0x3cc>
   2aa3c:	cmp	r2, #0
   2aa40:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2aa44:	ldr	r0, [r4, #60]	; 0x3c
   2aa48:	ldr	r2, [r4, #64]	; 0x40
   2aa4c:	cmp	r0, #0
   2aa50:	beq	2aa70 <flatcc_builder_custom_reset@@Base+0x1a8>
   2aa54:	mov	r1, #0
   2aa58:	bl	12b64 <memset@plt>
   2aa5c:	ldr	r0, [r4, #68]	; 0x44
   2aa60:	ldr	r2, [r4, #72]	; 0x48
   2aa64:	cmp	r0, #0
   2aa68:	bne	2aa88 <flatcc_builder_custom_reset@@Base+0x1c0>
   2aa6c:	b	2aaa4 <flatcc_builder_custom_reset@@Base+0x1dc>
   2aa70:	cmp	r2, #0
   2aa74:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2aa78:	ldr	r0, [r4, #68]	; 0x44
   2aa7c:	ldr	r2, [r4, #72]	; 0x48
   2aa80:	cmp	r0, #0
   2aa84:	beq	2aaa4 <flatcc_builder_custom_reset@@Base+0x1dc>
   2aa88:	mov	r1, #0
   2aa8c:	bl	12b64 <memset@plt>
   2aa90:	ldr	r0, [r4, #76]	; 0x4c
   2aa94:	ldr	r2, [r4, #80]	; 0x50
   2aa98:	cmp	r0, #0
   2aa9c:	bne	2aabc <flatcc_builder_custom_reset@@Base+0x1f4>
   2aaa0:	b	2aad8 <flatcc_builder_custom_reset@@Base+0x210>
   2aaa4:	cmp	r2, #0
   2aaa8:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2aaac:	ldr	r0, [r4, #76]	; 0x4c
   2aab0:	ldr	r2, [r4, #80]	; 0x50
   2aab4:	cmp	r0, #0
   2aab8:	beq	2aad8 <flatcc_builder_custom_reset@@Base+0x210>
   2aabc:	mov	r1, #0
   2aac0:	bl	12b64 <memset@plt>
   2aac4:	ldr	r0, [r4, #84]	; 0x54
   2aac8:	ldr	r2, [r4, #88]	; 0x58
   2aacc:	cmp	r0, #0
   2aad0:	bne	2aaf0 <flatcc_builder_custom_reset@@Base+0x228>
   2aad4:	b	2ab0c <flatcc_builder_custom_reset@@Base+0x244>
   2aad8:	cmp	r2, #0
   2aadc:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2aae0:	ldr	r0, [r4, #84]	; 0x54
   2aae4:	ldr	r2, [r4, #88]	; 0x58
   2aae8:	cmp	r0, #0
   2aaec:	beq	2ab0c <flatcc_builder_custom_reset@@Base+0x244>
   2aaf0:	mov	r1, #0
   2aaf4:	bl	12b64 <memset@plt>
   2aaf8:	ldr	r0, [r4, #92]	; 0x5c
   2aafc:	ldr	r2, [r4, #96]	; 0x60
   2ab00:	cmp	r0, #0
   2ab04:	bne	2ab24 <flatcc_builder_custom_reset@@Base+0x25c>
   2ab08:	b	2ab40 <flatcc_builder_custom_reset@@Base+0x278>
   2ab0c:	cmp	r2, #0
   2ab10:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ab14:	ldr	r0, [r4, #92]	; 0x5c
   2ab18:	ldr	r2, [r4, #96]	; 0x60
   2ab1c:	cmp	r0, #0
   2ab20:	beq	2ab40 <flatcc_builder_custom_reset@@Base+0x278>
   2ab24:	mov	r1, #0
   2ab28:	bl	12b64 <memset@plt>
   2ab2c:	ldr	r0, [r4, #100]	; 0x64
   2ab30:	ldr	r2, [r4, #104]	; 0x68
   2ab34:	cmp	r0, #0
   2ab38:	bne	2ab58 <flatcc_builder_custom_reset@@Base+0x290>
   2ab3c:	b	2ab74 <flatcc_builder_custom_reset@@Base+0x2ac>
   2ab40:	cmp	r2, #0
   2ab44:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ab48:	ldr	r0, [r4, #100]	; 0x64
   2ab4c:	ldr	r2, [r4, #104]	; 0x68
   2ab50:	cmp	r0, #0
   2ab54:	beq	2ab74 <flatcc_builder_custom_reset@@Base+0x2ac>
   2ab58:	mov	r1, #0
   2ab5c:	bl	12b64 <memset@plt>
   2ab60:	ldr	r0, [r4, #108]	; 0x6c
   2ab64:	ldr	r2, [r4, #112]	; 0x70
   2ab68:	cmp	r0, #0
   2ab6c:	bne	2ab8c <flatcc_builder_custom_reset@@Base+0x2c4>
   2ab70:	b	2ab98 <flatcc_builder_custom_reset@@Base+0x2d0>
   2ab74:	cmp	r2, #0
   2ab78:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ab7c:	ldr	r0, [r4, #108]	; 0x6c
   2ab80:	ldr	r2, [r4, #112]	; 0x70
   2ab84:	cmp	r0, #0
   2ab88:	beq	2ab98 <flatcc_builder_custom_reset@@Base+0x2d0>
   2ab8c:	mov	r1, #0
   2ab90:	bl	12b64 <memset@plt>
   2ab94:	b	2aba0 <flatcc_builder_custom_reset@@Base+0x2d8>
   2ab98:	cmp	r2, #0
   2ab9c:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2aba0:	mov	r0, #0
   2aba4:	vmov.i32	q8, #0	; 0x00000000
   2aba8:	mov	r6, #0
   2abac:	str	r0, [r4, #120]	; 0x78
   2abb0:	ldr	r1, [r4, #124]	; 0x7c
   2abb4:	cmp	r1, #0
   2abb8:	movne	r1, #16
   2abbc:	strne	r1, [r4, #124]	; 0x7c
   2abc0:	add	r1, r4, #148	; 0x94
   2abc4:	str	r0, [r4, #136]	; 0x88
   2abc8:	str	r0, [r4, #140]	; 0x8c
   2abcc:	strh	r0, [r4, #128]	; 0x80
   2abd0:	str	r0, [r4, #32]
   2abd4:	cmp	r5, #0
   2abd8:	vst1.32	{d16-d17}, [r1]
   2abdc:	ldr	r2, [r4, #60]	; 0x3c
   2abe0:	ldr	r1, [r4, #52]	; 0x34
   2abe4:	ldr	r3, [r4, #76]	; 0x4c
   2abe8:	str	r2, [r4, #16]
   2abec:	str	r0, [r4, #20]
   2abf0:	str	r0, [r4, #24]
   2abf4:	movne	r0, #0
   2abf8:	str	r3, [r4]
   2abfc:	str	r1, [r4, #4]
   2ac00:	strne	r0, [r4, #172]	; 0xac
   2ac04:	strne	r0, [r4, #176]	; 0xb0
   2ac08:	strne	r0, [r4, #180]	; 0xb4
   2ac0c:	ldr	r0, [r4, #184]	; 0xb8
   2ac10:	cmp	r0, #0
   2ac14:	beq	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2ac18:	add	r0, r4, #188	; 0xbc
   2ac1c:	bl	2f4b8 <flatcc_emitter_reset@@Base>
   2ac20:	mov	r0, r6
   2ac24:	sub	sp, fp, #16
   2ac28:	pop	{r4, r5, r6, sl, fp, pc}
   2ac2c:	ldr	r0, [r4, #72]	; 0x48
   2ac30:	cmp	r0, #0
   2ac34:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ac38:	mov	r1, r4
   2ac3c:	ldr	r0, [r1, #76]!	; 0x4c
   2ac40:	cmp	r0, #0
   2ac44:	beq	2ac94 <flatcc_builder_custom_reset@@Base+0x3cc>
   2ac48:	ldr	r0, [r4, #40]	; 0x28
   2ac4c:	ldr	r6, [r4, #48]	; 0x30
   2ac50:	mov	r2, #3
   2ac54:	mov	r3, #1
   2ac58:	str	r2, [sp]
   2ac5c:	mov	r2, #1
   2ac60:	blx	r6
   2ac64:	mvn	r6, #0
   2ac68:	cmp	r0, #0
   2ac6c:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2ac70:	ldr	r0, [r4, #76]	; 0x4c
   2ac74:	ldr	r2, [r4, #80]	; 0x50
   2ac78:	mov	r1, #0
   2ac7c:	bl	12b64 <memset@plt>
   2ac80:	mov	r1, r4
   2ac84:	ldr	r0, [r1, #84]!	; 0x54
   2ac88:	cmp	r0, #0
   2ac8c:	bne	2acb0 <flatcc_builder_custom_reset@@Base+0x3e8>
   2ac90:	b	2acfc <flatcc_builder_custom_reset@@Base+0x434>
   2ac94:	ldr	r0, [r4, #80]	; 0x50
   2ac98:	cmp	r0, #0
   2ac9c:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2aca0:	mov	r1, r4
   2aca4:	ldr	r0, [r1, #84]!	; 0x54
   2aca8:	cmp	r0, #0
   2acac:	beq	2acfc <flatcc_builder_custom_reset@@Base+0x434>
   2acb0:	ldr	r0, [r4, #40]	; 0x28
   2acb4:	ldr	r6, [r4, #48]	; 0x30
   2acb8:	mov	r2, #4
   2acbc:	mov	r3, #1
   2acc0:	str	r2, [sp]
   2acc4:	mov	r2, #1
   2acc8:	blx	r6
   2accc:	mvn	r6, #0
   2acd0:	cmp	r0, #0
   2acd4:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2acd8:	ldr	r0, [r4, #84]	; 0x54
   2acdc:	ldr	r2, [r4, #88]	; 0x58
   2ace0:	mov	r1, #0
   2ace4:	bl	12b64 <memset@plt>
   2ace8:	ldr	r0, [r4, #92]	; 0x5c
   2acec:	ldr	r2, [r4, #96]	; 0x60
   2acf0:	cmp	r0, #0
   2acf4:	bne	2ad18 <flatcc_builder_custom_reset@@Base+0x450>
   2acf8:	b	2ad34 <flatcc_builder_custom_reset@@Base+0x46c>
   2acfc:	ldr	r0, [r4, #88]	; 0x58
   2ad00:	cmp	r0, #0
   2ad04:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ad08:	ldr	r0, [r4, #92]	; 0x5c
   2ad0c:	ldr	r2, [r4, #96]	; 0x60
   2ad10:	cmp	r0, #0
   2ad14:	beq	2ad34 <flatcc_builder_custom_reset@@Base+0x46c>
   2ad18:	mov	r1, #0
   2ad1c:	bl	12b64 <memset@plt>
   2ad20:	mov	r1, r4
   2ad24:	ldr	r0, [r1, #100]!	; 0x64
   2ad28:	cmp	r0, #0
   2ad2c:	bne	2ad4c <flatcc_builder_custom_reset@@Base+0x484>
   2ad30:	b	2ad98 <flatcc_builder_custom_reset@@Base+0x4d0>
   2ad34:	cmp	r2, #0
   2ad38:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ad3c:	mov	r1, r4
   2ad40:	ldr	r0, [r1, #100]!	; 0x64
   2ad44:	cmp	r0, #0
   2ad48:	beq	2ad98 <flatcc_builder_custom_reset@@Base+0x4d0>
   2ad4c:	ldr	r0, [r4, #40]	; 0x28
   2ad50:	ldr	r6, [r4, #48]	; 0x30
   2ad54:	mov	r2, #6
   2ad58:	mov	r3, #1
   2ad5c:	str	r2, [sp]
   2ad60:	mov	r2, #1
   2ad64:	blx	r6
   2ad68:	mvn	r6, #0
   2ad6c:	cmp	r0, #0
   2ad70:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2ad74:	ldr	r0, [r4, #100]	; 0x64
   2ad78:	ldr	r2, [r4, #104]	; 0x68
   2ad7c:	mov	r1, #0
   2ad80:	bl	12b64 <memset@plt>
   2ad84:	mov	r1, r4
   2ad88:	ldr	r0, [r1, #108]!	; 0x6c
   2ad8c:	cmp	r0, #0
   2ad90:	bne	2adb4 <flatcc_builder_custom_reset@@Base+0x4ec>
   2ad94:	b	2ade8 <flatcc_builder_custom_reset@@Base+0x520>
   2ad98:	ldr	r0, [r4, #104]	; 0x68
   2ad9c:	cmp	r0, #0
   2ada0:	bne	2adf4 <flatcc_builder_custom_reset@@Base+0x52c>
   2ada4:	mov	r1, r4
   2ada8:	ldr	r0, [r1, #108]!	; 0x6c
   2adac:	cmp	r0, #0
   2adb0:	beq	2ade8 <flatcc_builder_custom_reset@@Base+0x520>
   2adb4:	ldr	r0, [r4, #40]	; 0x28
   2adb8:	ldr	r6, [r4, #48]	; 0x30
   2adbc:	mov	r2, #7
   2adc0:	mov	r3, #1
   2adc4:	str	r2, [sp]
   2adc8:	mov	r2, #1
   2adcc:	blx	r6
   2add0:	mvn	r6, #0
   2add4:	cmp	r0, #0
   2add8:	bne	2ac20 <flatcc_builder_custom_reset@@Base+0x358>
   2addc:	ldr	r0, [r4, #108]	; 0x6c
   2ade0:	ldr	r2, [r4, #112]	; 0x70
   2ade4:	b	2ab8c <flatcc_builder_custom_reset@@Base+0x2c4>
   2ade8:	ldr	r0, [r4, #112]	; 0x70
   2adec:	cmp	r0, #0
   2adf0:	beq	2aba0 <flatcc_builder_custom_reset@@Base+0x2d8>
   2adf4:	movw	r0, #20252	; 0x4f1c
   2adf8:	movw	r1, #20270	; 0x4f2e
   2adfc:	movw	r3, #20340	; 0x4f74
   2ae00:	movw	r2, #434	; 0x1b2
   2ae04:	movt	r0, #3
   2ae08:	movt	r1, #3
   2ae0c:	movt	r3, #3
   2ae10:	bl	12bc4 <__assert_fail@plt>

0002ae14 <flatcc_builder_reset@@Base>:
   2ae14:	mov	r1, #0
   2ae18:	mov	r2, #0
   2ae1c:	b	2a8c8 <flatcc_builder_custom_reset@@Base>

0002ae20 <flatcc_builder_clear@@Base>:
   2ae20:	push	{r4, sl, fp, lr}
   2ae24:	add	fp, sp, #8
   2ae28:	sub	sp, sp, #8
   2ae2c:	mov	r4, r0
   2ae30:	ldr	r0, [r0, #40]	; 0x28
   2ae34:	mov	r1, #0
   2ae38:	mov	r2, #0
   2ae3c:	mov	r3, #0
   2ae40:	ldr	ip, [r4, #48]	; 0x30
   2ae44:	str	r1, [sp]
   2ae48:	add	r1, r4, #52	; 0x34
   2ae4c:	blx	ip
   2ae50:	ldr	r0, [r4, #40]	; 0x28
   2ae54:	ldr	ip, [r4, #48]	; 0x30
   2ae58:	mov	r1, #1
   2ae5c:	mov	r2, #0
   2ae60:	mov	r3, #0
   2ae64:	str	r1, [sp]
   2ae68:	add	r1, r4, #60	; 0x3c
   2ae6c:	blx	ip
   2ae70:	ldr	r0, [r4, #40]	; 0x28
   2ae74:	ldr	ip, [r4, #48]	; 0x30
   2ae78:	mov	r1, #2
   2ae7c:	mov	r2, #0
   2ae80:	mov	r3, #0
   2ae84:	str	r1, [sp]
   2ae88:	add	r1, r4, #68	; 0x44
   2ae8c:	blx	ip
   2ae90:	ldr	r0, [r4, #40]	; 0x28
   2ae94:	ldr	ip, [r4, #48]	; 0x30
   2ae98:	mov	r1, #3
   2ae9c:	mov	r2, #0
   2aea0:	mov	r3, #0
   2aea4:	str	r1, [sp]
   2aea8:	add	r1, r4, #76	; 0x4c
   2aeac:	blx	ip
   2aeb0:	ldr	r0, [r4, #40]	; 0x28
   2aeb4:	ldr	ip, [r4, #48]	; 0x30
   2aeb8:	mov	r1, #4
   2aebc:	mov	r2, #0
   2aec0:	mov	r3, #0
   2aec4:	str	r1, [sp]
   2aec8:	add	r1, r4, #84	; 0x54
   2aecc:	blx	ip
   2aed0:	ldr	r0, [r4, #40]	; 0x28
   2aed4:	ldr	ip, [r4, #48]	; 0x30
   2aed8:	mov	r1, #5
   2aedc:	mov	r2, #0
   2aee0:	mov	r3, #0
   2aee4:	str	r1, [sp]
   2aee8:	add	r1, r4, #92	; 0x5c
   2aeec:	blx	ip
   2aef0:	ldr	r0, [r4, #40]	; 0x28
   2aef4:	ldr	ip, [r4, #48]	; 0x30
   2aef8:	mov	r1, #6
   2aefc:	mov	r2, #0
   2af00:	mov	r3, #0
   2af04:	str	r1, [sp]
   2af08:	add	r1, r4, #100	; 0x64
   2af0c:	blx	ip
   2af10:	ldr	r0, [r4, #40]	; 0x28
   2af14:	ldr	ip, [r4, #48]	; 0x30
   2af18:	mov	r1, #7
   2af1c:	mov	r2, #0
   2af20:	mov	r3, #0
   2af24:	str	r1, [sp]
   2af28:	add	r1, r4, #108	; 0x6c
   2af2c:	blx	ip
   2af30:	ldr	r0, [r4, #184]	; 0xb8
   2af34:	cmp	r0, #0
   2af38:	beq	2af44 <flatcc_builder_clear@@Base+0x124>
   2af3c:	add	r0, r4, #188	; 0xbc
   2af40:	bl	2f584 <flatcc_emitter_clear@@Base>
   2af44:	mov	r0, r4
   2af48:	mov	r1, #0
   2af4c:	mov	r2, #232	; 0xe8
   2af50:	sub	sp, fp, #8
   2af54:	pop	{r4, sl, fp, lr}
   2af58:	b	12b64 <memset@plt>

0002af5c <flatcc_builder_enter_user_frame_ptr@@Base>:
   2af5c:	push	{r4, r5, r6, r7, fp, lr}
   2af60:	add	fp, sp, #16
   2af64:	sub	sp, sp, #8
   2af68:	mov	r4, r0
   2af6c:	ldr	r0, [r0, #112]	; 0x70
   2af70:	add	r1, r1, #7
   2af74:	ldr	r7, [r4, #228]	; 0xe4
   2af78:	bic	r5, r1, #3
   2af7c:	add	r6, r4, #108	; 0x6c
   2af80:	add	r2, r7, r5
   2af84:	cmp	r2, r0
   2af88:	bls	2afb0 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2af8c:	ldr	r0, [r4, #40]	; 0x28
   2af90:	ldr	ip, [r4, #48]	; 0x30
   2af94:	mov	r1, #7
   2af98:	mov	r3, #0
   2af9c:	str	r1, [sp]
   2afa0:	mov	r1, r6
   2afa4:	blx	ip
   2afa8:	cmp	r0, #0
   2afac:	bne	2b004 <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   2afb0:	ldr	r0, [r6]
   2afb4:	adds	r6, r0, r7
   2afb8:	beq	2aff4 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   2afbc:	mov	r0, r6
   2afc0:	mov	r1, #0
   2afc4:	mov	r2, r5
   2afc8:	bl	12b64 <memset@plt>
   2afcc:	ldr	r0, [r4, #224]	; 0xe0
   2afd0:	str	r0, [r6], #4
   2afd4:	ldr	r0, [r4, #228]	; 0xe4
   2afd8:	add	r1, r0, #4
   2afdc:	add	r0, r0, r5
   2afe0:	str	r1, [r4, #224]	; 0xe0
   2afe4:	str	r0, [r4, #228]	; 0xe4
   2afe8:	mov	r0, r6
   2afec:	sub	sp, fp, #16
   2aff0:	pop	{r4, r5, r6, r7, fp, pc}
   2aff4:	mov	r6, #0
   2aff8:	mov	r0, r6
   2affc:	sub	sp, fp, #16
   2b000:	pop	{r4, r5, r6, r7, fp, pc}
   2b004:	movw	r0, #24788	; 0x60d4
   2b008:	movw	r1, #20270	; 0x4f2e
   2b00c:	movw	r3, #24334	; 0x5f0e
   2b010:	mov	r2, #308	; 0x134
   2b014:	movt	r0, #3
   2b018:	movt	r1, #3
   2b01c:	movt	r3, #3
   2b020:	bl	12bc4 <__assert_fail@plt>

0002b024 <flatcc_builder_enter_user_frame@@Base>:
   2b024:	push	{r4, r5, r6, r7, fp, lr}
   2b028:	add	fp, sp, #16
   2b02c:	sub	sp, sp, #8
   2b030:	mov	r4, r0
   2b034:	ldr	r0, [r0, #112]	; 0x70
   2b038:	add	r1, r1, #7
   2b03c:	ldr	r7, [r4, #228]	; 0xe4
   2b040:	bic	r5, r1, #3
   2b044:	add	r6, r4, #108	; 0x6c
   2b048:	add	r2, r7, r5
   2b04c:	cmp	r2, r0
   2b050:	bls	2b078 <flatcc_builder_enter_user_frame@@Base+0x54>
   2b054:	ldr	r0, [r4, #40]	; 0x28
   2b058:	ldr	ip, [r4, #48]	; 0x30
   2b05c:	mov	r1, #7
   2b060:	mov	r3, #0
   2b064:	str	r1, [sp]
   2b068:	mov	r1, r6
   2b06c:	blx	ip
   2b070:	cmp	r0, #0
   2b074:	bne	2b0c4 <flatcc_builder_enter_user_frame@@Base+0xa0>
   2b078:	ldr	r0, [r6]
   2b07c:	adds	r6, r0, r7
   2b080:	beq	2b0b8 <flatcc_builder_enter_user_frame@@Base+0x94>
   2b084:	mov	r0, r6
   2b088:	mov	r1, #0
   2b08c:	mov	r2, r5
   2b090:	bl	12b64 <memset@plt>
   2b094:	ldr	r0, [r4, #224]	; 0xe0
   2b098:	str	r0, [r6]
   2b09c:	ldr	r1, [r4, #228]	; 0xe4
   2b0a0:	add	r0, r1, #4
   2b0a4:	add	r1, r1, r5
   2b0a8:	str	r0, [r4, #224]	; 0xe0
   2b0ac:	str	r1, [r4, #228]	; 0xe4
   2b0b0:	sub	sp, fp, #16
   2b0b4:	pop	{r4, r5, r6, r7, fp, pc}
   2b0b8:	mov	r0, #0
   2b0bc:	sub	sp, fp, #16
   2b0c0:	pop	{r4, r5, r6, r7, fp, pc}
   2b0c4:	movw	r0, #24788	; 0x60d4
   2b0c8:	movw	r1, #20270	; 0x4f2e
   2b0cc:	movw	r3, #24334	; 0x5f0e
   2b0d0:	mov	r2, #308	; 0x134
   2b0d4:	movt	r0, #3
   2b0d8:	movt	r1, #3
   2b0dc:	movt	r3, #3
   2b0e0:	bl	12bc4 <__assert_fail@plt>

0002b0e4 <flatcc_builder_exit_user_frame@@Base>:
   2b0e4:	push	{fp, lr}
   2b0e8:	mov	fp, sp
   2b0ec:	ldr	r1, [r0, #224]	; 0xe0
   2b0f0:	cmp	r1, #0
   2b0f4:	subne	r2, r1, #4
   2b0f8:	strne	r2, [r0, #228]	; 0xe4
   2b0fc:	ldrne	r2, [r0, #108]	; 0x6c
   2b100:	addne	r1, r2, r1
   2b104:	ldrne	r1, [r1, #-4]
   2b108:	strne	r1, [r0, #224]	; 0xe0
   2b10c:	movne	r0, r1
   2b110:	popne	{fp, pc}
   2b114:	movw	r0, #20402	; 0x4fb2
   2b118:	movw	r1, #20270	; 0x4f2e
   2b11c:	movw	r3, #20427	; 0x4fcb
   2b120:	movw	r2, #542	; 0x21e
   2b124:	movt	r0, #3
   2b128:	movt	r1, #3
   2b12c:	movt	r3, #3
   2b130:	bl	12bc4 <__assert_fail@plt>

0002b134 <flatcc_builder_exit_user_frame_at@@Base>:
   2b134:	push	{fp, lr}
   2b138:	mov	fp, sp
   2b13c:	ldr	r2, [r0, #224]	; 0xe0
   2b140:	cmp	r2, r1
   2b144:	bcc	2b190 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2b148:	cmp	r1, #0
   2b14c:	str	r1, [r0, #224]	; 0xe0
   2b150:	subne	r2, r1, #4
   2b154:	strne	r2, [r0, #228]	; 0xe4
   2b158:	ldrne	r2, [r0, #108]	; 0x6c
   2b15c:	addne	r1, r2, r1
   2b160:	ldrne	r1, [r1, #-4]
   2b164:	strne	r1, [r0, #224]	; 0xe0
   2b168:	movne	r0, r1
   2b16c:	popne	{fp, pc}
   2b170:	movw	r0, #20402	; 0x4fb2
   2b174:	movw	r1, #20270	; 0x4f2e
   2b178:	movw	r3, #20427	; 0x4fcb
   2b17c:	movw	r2, #542	; 0x21e
   2b180:	movt	r0, #3
   2b184:	movt	r1, #3
   2b188:	movt	r3, #3
   2b18c:	bl	12bc4 <__assert_fail@plt>
   2b190:	movw	r0, #20485	; 0x5005
   2b194:	movw	r1, #20270	; 0x4f2e
   2b198:	movw	r3, #20516	; 0x5024
   2b19c:	movw	r2, #551	; 0x227
   2b1a0:	movt	r0, #3
   2b1a4:	movt	r1, #3
   2b1a8:	movt	r3, #3
   2b1ac:	bl	12bc4 <__assert_fail@plt>

0002b1b0 <flatcc_builder_get_current_user_frame@@Base>:
   2b1b0:	ldr	r0, [r0, #224]	; 0xe0
   2b1b4:	bx	lr

0002b1b8 <flatcc_builder_get_user_frame_ptr@@Base>:
   2b1b8:	ldr	r0, [r0, #108]	; 0x6c
   2b1bc:	add	r0, r0, r1
   2b1c0:	bx	lr

0002b1c4 <flatcc_builder_embed_buffer@@Base>:
   2b1c4:	push	{r4, r5, r6, r7, fp, lr}
   2b1c8:	add	fp, sp, #16
   2b1cc:	sub	sp, sp, #88	; 0x58
   2b1d0:	mov	r4, r0
   2b1d4:	ldr	r0, [fp, #8]
   2b1d8:	mov	r5, r3
   2b1dc:	mov	r7, r2
   2b1e0:	mov	r2, r1
   2b1e4:	sub	r1, fp, #18
   2b1e8:	strh	r0, [fp, #-18]	; 0xffffffee
   2b1ec:	mov	r0, r4
   2b1f0:	ldr	r3, [r4, #152]	; 0x98
   2b1f4:	cmp	r3, #0
   2b1f8:	movwne	r3, #1
   2b1fc:	bl	2b334 <flatcc_builder_embed_buffer@@Base+0x170>
   2b200:	ldr	r1, [fp, #12]
   2b204:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2b208:	ldr	r0, [r4, #136]	; 0x88
   2b20c:	mov	r2, #0
   2b210:	str	r2, [sp, #12]
   2b214:	str	r2, [sp, #8]
   2b218:	and	r1, r1, #2
   2b21c:	sub	r3, r3, #1
   2b220:	add	r1, r5, r1, lsl #1
   2b224:	sub	r1, r0, r1
   2b228:	and	r3, r3, r1
   2b22c:	add	r1, r3, r5
   2b230:	str	r1, [fp, #-24]	; 0xffffffe8
   2b234:	ldr	r1, [r4, #152]	; 0x98
   2b238:	cmp	r1, #0
   2b23c:	mov	r1, #0
   2b240:	beq	2b260 <flatcc_builder_embed_buffer@@Base+0x9c>
   2b244:	mov	r1, #4
   2b248:	sub	r2, fp, #24
   2b24c:	str	r1, [sp, #20]
   2b250:	str	r2, [sp, #16]
   2b254:	mov	r2, #1
   2b258:	str	r1, [sp, #8]
   2b25c:	str	r2, [sp, #12]
   2b260:	cmp	r5, #0
   2b264:	beq	2b288 <flatcc_builder_embed_buffer@@Base+0xc4>
   2b268:	add	r6, sp, #8
   2b26c:	add	r1, r1, r5
   2b270:	add	r6, r6, r2, lsl #3
   2b274:	add	r2, r2, #1
   2b278:	str	r1, [sp, #8]
   2b27c:	str	r7, [r6, #8]
   2b280:	str	r5, [r6, #12]
   2b284:	str	r2, [sp, #12]
   2b288:	cmp	r3, #0
   2b28c:	beq	2b2b8 <flatcc_builder_embed_buffer@@Base+0xf4>
   2b290:	add	r7, sp, #8
   2b294:	movw	r6, #19740	; 0x4d1c
   2b298:	add	r1, r1, r3
   2b29c:	add	r7, r7, r2, lsl #3
   2b2a0:	movt	r6, #3
   2b2a4:	add	r2, r2, #1
   2b2a8:	str	r1, [sp, #8]
   2b2ac:	str	r6, [r7, #8]
   2b2b0:	str	r3, [r7, #12]
   2b2b4:	str	r2, [sp, #12]
   2b2b8:	cmp	r1, #0
   2b2bc:	ble	2b314 <flatcc_builder_embed_buffer@@Base+0x150>
   2b2c0:	sub	r5, r0, r1
   2b2c4:	ldr	r0, [r4, #36]	; 0x24
   2b2c8:	ldr	r7, [r4, #44]	; 0x2c
   2b2cc:	str	r1, [sp]
   2b2d0:	add	r1, sp, #8
   2b2d4:	add	r1, r1, #8
   2b2d8:	mov	r3, r5
   2b2dc:	blx	r7
   2b2e0:	cmp	r0, #0
   2b2e4:	streq	r5, [r4, #136]	; 0x88
   2b2e8:	moveq	r0, r5
   2b2ec:	subeq	sp, fp, #16
   2b2f0:	popeq	{r4, r5, r6, r7, fp, pc}
   2b2f4:	movw	r0, #24788	; 0x60d4
   2b2f8:	movw	r1, #20270	; 0x4f2e
   2b2fc:	movw	r3, #24467	; 0x5f93
   2b300:	movw	r2, #651	; 0x28b
   2b304:	movt	r0, #3
   2b308:	movt	r1, #3
   2b30c:	movt	r3, #3
   2b310:	bl	12bc4 <__assert_fail@plt>
   2b314:	movw	r0, #24788	; 0x60d4
   2b318:	movw	r1, #20270	; 0x4f2e
   2b31c:	movw	r3, #24467	; 0x5f93
   2b320:	movw	r2, #647	; 0x287
   2b324:	movt	r0, #3
   2b328:	movt	r1, #3
   2b32c:	movt	r3, #3
   2b330:	bl	12bc4 <__assert_fail@plt>
   2b334:	push	{r4, sl, fp, lr}
   2b338:	add	fp, sp, #8
   2b33c:	sub	sp, sp, #80	; 0x50
   2b340:	cmp	r2, #0
   2b344:	bne	2b354 <flatcc_builder_embed_buffer@@Base+0x190>
   2b348:	ldrh	r2, [r0, #132]	; 0x84
   2b34c:	cmp	r2, #0
   2b350:	movweq	r2, #1
   2b354:	ldrh	r4, [r1]
   2b358:	cmp	r4, #4
   2b35c:	movwcc	r4, #4
   2b360:	cmpcs	r4, r2
   2b364:	bcs	2b374 <flatcc_builder_embed_buffer@@Base+0x1b0>
   2b368:	cmp	r4, r2
   2b36c:	movcc	r4, r2
   2b370:	strh	r4, [r1]
   2b374:	cmp	r3, #0
   2b378:	bne	2b3ec <flatcc_builder_embed_buffer@@Base+0x228>
   2b37c:	ldr	r4, [r0, #140]	; 0x8c
   2b380:	sub	r1, r2, #1
   2b384:	ands	r1, r4, r1
   2b388:	beq	2b3ec <flatcc_builder_embed_buffer@@Base+0x228>
   2b38c:	movw	r2, #19740	; 0x4d1c
   2b390:	str	r1, [sp, #20]
   2b394:	cmn	r1, #1
   2b398:	movt	r2, #3
   2b39c:	str	r2, [sp, #16]
   2b3a0:	mov	r2, #1
   2b3a4:	str	r1, [sp, #8]
   2b3a8:	str	r2, [sp, #12]
   2b3ac:	add	r2, r4, r1
   2b3b0:	str	r2, [r0, #140]	; 0x8c
   2b3b4:	ble	2b3f4 <flatcc_builder_embed_buffer@@Base+0x230>
   2b3b8:	ldr	r2, [r0, #36]	; 0x24
   2b3bc:	ldr	ip, [r0, #44]	; 0x2c
   2b3c0:	add	r0, sp, #8
   2b3c4:	str	r1, [sp]
   2b3c8:	mov	r3, r4
   2b3cc:	add	r1, r0, #8
   2b3d0:	mov	r0, r2
   2b3d4:	mov	r2, #1
   2b3d8:	blx	ip
   2b3dc:	cmp	r0, #0
   2b3e0:	bne	2b414 <flatcc_builder_embed_buffer@@Base+0x250>
   2b3e4:	cmn	r4, #1
   2b3e8:	beq	2b434 <flatcc_builder_embed_buffer@@Base+0x270>
   2b3ec:	sub	sp, fp, #8
   2b3f0:	pop	{r4, sl, fp, pc}
   2b3f4:	movw	r0, #24788	; 0x60d4
   2b3f8:	movw	r1, #20270	; 0x4f2e
   2b3fc:	movw	r3, #24655	; 0x604f
   2b400:	movw	r2, #673	; 0x2a1
   2b404:	movt	r0, #3
   2b408:	movt	r1, #3
   2b40c:	movt	r3, #3
   2b410:	bl	12bc4 <__assert_fail@plt>
   2b414:	movw	r0, #24788	; 0x60d4
   2b418:	movw	r1, #20270	; 0x4f2e
   2b41c:	movw	r3, #24655	; 0x604f
   2b420:	movw	r2, #677	; 0x2a5
   2b424:	movt	r0, #3
   2b428:	movt	r1, #3
   2b42c:	movt	r3, #3
   2b430:	bl	12bc4 <__assert_fail@plt>
   2b434:	movw	r0, #24788	; 0x60d4
   2b438:	movw	r1, #20270	; 0x4f2e
   2b43c:	movw	r3, #24401	; 0x5f51
   2b440:	movw	r2, #702	; 0x2be
   2b444:	movt	r0, #3
   2b448:	movt	r1, #3
   2b44c:	movt	r3, #3
   2b450:	bl	12bc4 <__assert_fail@plt>

0002b454 <flatcc_builder_create_buffer@@Base>:
   2b454:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b458:	add	fp, sp, #28
   2b45c:	sub	sp, sp, #100	; 0x64
   2b460:	ldr	sl, [fp, #12]
   2b464:	mov	r4, r0
   2b468:	ldr	r0, [fp, #8]
   2b46c:	mov	r7, r1
   2b470:	mov	r5, #0
   2b474:	mov	r6, r3
   2b478:	sub	r1, fp, #30
   2b47c:	str	r5, [sp, #12]
   2b480:	and	r9, sl, #1
   2b484:	strh	r0, [fp, #-30]	; 0xffffffe2
   2b488:	mov	r0, r4
   2b48c:	mov	r3, r9
   2b490:	bl	2b334 <flatcc_builder_embed_buffer@@Base+0x170>
   2b494:	ldrh	r0, [r4, #128]	; 0x80
   2b498:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2b49c:	str	r6, [sp, #8]
   2b4a0:	cmp	r0, r1
   2b4a4:	strhcc	r1, [r4, #128]	; 0x80
   2b4a8:	cmp	r7, #0
   2b4ac:	beq	2b4c8 <flatcc_builder_create_buffer@@Base+0x74>
   2b4b0:	ldr	r5, [r7]
   2b4b4:	cmp	r5, #0
   2b4b8:	str	r5, [sp, #12]
   2b4bc:	movwne	r5, #1
   2b4c0:	lsl	r7, r5, #2
   2b4c4:	b	2b4cc <flatcc_builder_create_buffer@@Base+0x78>
   2b4c8:	mov	r7, #0
   2b4cc:	ldr	r0, [r4, #136]	; 0x88
   2b4d0:	and	r2, sl, #2
   2b4d4:	mov	r3, #0
   2b4d8:	sub	r6, r1, #1
   2b4dc:	ands	ip, sl, #3
   2b4e0:	mov	sl, #4
   2b4e4:	mov	r1, #4
   2b4e8:	str	r3, [sp, #20]
   2b4ec:	str	r3, [sp, #16]
   2b4f0:	sub	r2, r0, r2, lsl #1
   2b4f4:	sub	r2, r2, r7
   2b4f8:	sub	r2, r2, #4
   2b4fc:	beq	2b520 <flatcc_builder_create_buffer@@Base+0xcc>
   2b500:	mov	r1, #4
   2b504:	sub	r3, fp, #40	; 0x28
   2b508:	str	r1, [sp, #28]
   2b50c:	str	r3, [sp, #24]
   2b510:	str	r1, [sp, #16]
   2b514:	mov	r3, #1
   2b518:	mov	r1, #8
   2b51c:	str	r3, [sp, #20]
   2b520:	add	lr, sp, #16
   2b524:	and	r6, r2, r6
   2b528:	sub	r8, fp, #36	; 0x24
   2b52c:	str	r1, [sp, #16]
   2b530:	cmp	r5, #0
   2b534:	add	r2, lr, r3, lsl #3
   2b538:	str	r8, [r2, #8]
   2b53c:	str	sl, [r2, #12]
   2b540:	add	r2, r3, #1
   2b544:	str	r2, [sp, #20]
   2b548:	beq	2b56c <flatcc_builder_create_buffer@@Base+0x118>
   2b54c:	add	r2, lr, r2, lsl #3
   2b550:	add	r1, r1, r7
   2b554:	add	r5, sp, #12
   2b558:	str	r1, [sp, #16]
   2b55c:	str	r5, [r2, #8]
   2b560:	str	r7, [r2, #12]
   2b564:	orr	r2, r3, #2
   2b568:	str	r2, [sp, #20]
   2b56c:	cmp	r6, #0
   2b570:	beq	2b598 <flatcc_builder_create_buffer@@Base+0x144>
   2b574:	movw	r5, #19740	; 0x4d1c
   2b578:	add	r3, lr, r2, lsl #3
   2b57c:	add	r1, r1, r6
   2b580:	add	r2, r2, #1
   2b584:	movt	r5, #3
   2b588:	str	r1, [sp, #16]
   2b58c:	str	r5, [r3, #8]
   2b590:	str	r6, [r3, #12]
   2b594:	str	r2, [sp, #20]
   2b598:	sub	r7, r0, r1
   2b59c:	cmp	ip, #0
   2b5a0:	mov	r6, #144	; 0x90
   2b5a4:	ldr	r3, [sp, #8]
   2b5a8:	mov	r0, r7
   2b5ac:	addne	r0, r0, #4
   2b5b0:	cmp	r9, #0
   2b5b4:	movweq	r6, #140	; 0x8c
   2b5b8:	cmp	r1, #0
   2b5bc:	ldr	r6, [r4, r6]
   2b5c0:	sub	r3, r3, r0
   2b5c4:	str	r3, [fp, #-36]	; 0xffffffdc
   2b5c8:	sub	r0, r6, r0
   2b5cc:	str	r0, [fp, #-40]	; 0xffffffd8
   2b5d0:	ble	2b628 <flatcc_builder_create_buffer@@Base+0x1d4>
   2b5d4:	ldr	r0, [r4, #36]	; 0x24
   2b5d8:	ldr	r6, [r4, #44]	; 0x2c
   2b5dc:	str	r1, [sp]
   2b5e0:	add	r1, lr, #8
   2b5e4:	mov	r3, r7
   2b5e8:	blx	r6
   2b5ec:	cmp	r0, #0
   2b5f0:	bne	2b648 <flatcc_builder_create_buffer@@Base+0x1f4>
   2b5f4:	cmp	r7, #0
   2b5f8:	str	r7, [r4, #136]	; 0x88
   2b5fc:	movne	r0, r7
   2b600:	subne	sp, fp, #28
   2b604:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b608:	movw	r0, #24788	; 0x60d4
   2b60c:	movw	r1, #20270	; 0x4f2e
   2b610:	movw	r3, #20585	; 0x5069
   2b614:	mov	r2, #772	; 0x304
   2b618:	movt	r0, #3
   2b61c:	movt	r1, #3
   2b620:	movt	r3, #3
   2b624:	bl	12bc4 <__assert_fail@plt>
   2b628:	movw	r0, #24788	; 0x60d4
   2b62c:	movw	r1, #20270	; 0x4f2e
   2b630:	movw	r3, #24467	; 0x5f93
   2b634:	movw	r2, #647	; 0x287
   2b638:	movt	r0, #3
   2b63c:	movt	r1, #3
   2b640:	movt	r3, #3
   2b644:	bl	12bc4 <__assert_fail@plt>
   2b648:	movw	r0, #24788	; 0x60d4
   2b64c:	movw	r1, #20270	; 0x4f2e
   2b650:	movw	r3, #24467	; 0x5f93
   2b654:	movw	r2, #651	; 0x28b
   2b658:	movt	r0, #3
   2b65c:	movt	r1, #3
   2b660:	movt	r3, #3
   2b664:	bl	12bc4 <__assert_fail@plt>

0002b668 <flatcc_builder_create_struct@@Base>:
   2b668:	push	{r4, r5, r6, sl, fp, lr}
   2b66c:	add	fp, sp, #16
   2b670:	sub	sp, sp, #80	; 0x50
   2b674:	cmp	r3, #0
   2b678:	beq	2b750 <flatcc_builder_create_struct@@Base+0xe8>
   2b67c:	mov	r5, r0
   2b680:	ldrh	r0, [r0, #128]	; 0x80
   2b684:	mov	r4, #0
   2b688:	cmp	r0, r3
   2b68c:	strhcc	r3, [r5, #128]	; 0x80
   2b690:	sub	r3, r3, #1
   2b694:	cmp	r2, #0
   2b698:	ldr	r0, [r5, #136]	; 0x88
   2b69c:	str	r4, [sp, #12]
   2b6a0:	str	r4, [sp, #8]
   2b6a4:	movne	r4, #1
   2b6a8:	strne	r2, [sp, #20]
   2b6ac:	strne	r1, [sp, #16]
   2b6b0:	strne	r2, [sp, #8]
   2b6b4:	strne	r4, [sp, #12]
   2b6b8:	sub	r6, r0, r2
   2b6bc:	and	r3, r6, r3
   2b6c0:	cmp	r3, #0
   2b6c4:	beq	2b6f0 <flatcc_builder_create_struct@@Base+0x88>
   2b6c8:	add	r1, sp, #8
   2b6cc:	movw	r6, #19740	; 0x4d1c
   2b6d0:	add	r2, r3, r2
   2b6d4:	add	r1, r1, r4, lsl #3
   2b6d8:	movt	r6, #3
   2b6dc:	add	r4, r4, #1
   2b6e0:	str	r2, [sp, #8]
   2b6e4:	str	r6, [r1, #8]
   2b6e8:	str	r3, [r1, #12]
   2b6ec:	str	r4, [sp, #12]
   2b6f0:	cmp	r2, #0
   2b6f4:	ble	2b770 <flatcc_builder_create_struct@@Base+0x108>
   2b6f8:	sub	r6, r0, r2
   2b6fc:	ldr	r0, [r5, #36]	; 0x24
   2b700:	ldr	ip, [r5, #44]	; 0x2c
   2b704:	add	r1, sp, #8
   2b708:	str	r2, [sp]
   2b70c:	mov	r2, r4
   2b710:	add	r1, r1, #8
   2b714:	mov	r3, r6
   2b718:	blx	ip
   2b71c:	cmp	r0, #0
   2b720:	streq	r6, [r5, #136]	; 0x88
   2b724:	moveq	r0, r6
   2b728:	subeq	sp, fp, #16
   2b72c:	popeq	{r4, r5, r6, sl, fp, pc}
   2b730:	movw	r0, #24788	; 0x60d4
   2b734:	movw	r1, #20270	; 0x4f2e
   2b738:	movw	r3, #24467	; 0x5f93
   2b73c:	movw	r2, #651	; 0x28b
   2b740:	movt	r0, #3
   2b744:	movt	r1, #3
   2b748:	movt	r3, #3
   2b74c:	bl	12bc4 <__assert_fail@plt>
   2b750:	movw	r0, #20716	; 0x50ec
   2b754:	movw	r1, #20270	; 0x4f2e
   2b758:	movw	r3, #20727	; 0x50f7
   2b75c:	movw	r2, #783	; 0x30f
   2b760:	movt	r0, #3
   2b764:	movt	r1, #3
   2b768:	movt	r3, #3
   2b76c:	bl	12bc4 <__assert_fail@plt>
   2b770:	movw	r0, #24788	; 0x60d4
   2b774:	movw	r1, #20270	; 0x4f2e
   2b778:	movw	r3, #24467	; 0x5f93
   2b77c:	movw	r2, #647	; 0x287
   2b780:	movt	r0, #3
   2b784:	movt	r1, #3
   2b788:	movt	r3, #3
   2b78c:	bl	12bc4 <__assert_fail@plt>

0002b790 <flatcc_builder_start_buffer@@Base>:
   2b790:	push	{r4, r5, r6, r7, fp, lr}
   2b794:	add	fp, sp, #16
   2b798:	mov	r5, r1
   2b79c:	ldrh	r1, [r0, #128]	; 0x80
   2b7a0:	mov	r6, r3
   2b7a4:	mov	r7, r2
   2b7a8:	mov	r4, r0
   2b7ac:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2b7b0:	mov	r1, r0
   2b7b4:	mvn	r0, #0
   2b7b8:	cmp	r1, #0
   2b7bc:	popne	{r4, r5, r6, r7, fp, pc}
   2b7c0:	mov	r0, #1
   2b7c4:	cmp	r5, #0
   2b7c8:	strh	r0, [r4, #128]	; 0x80
   2b7cc:	ldrh	r1, [r4, #132]	; 0x84
   2b7d0:	ldr	r2, [r4, #32]
   2b7d4:	strh	r1, [r2, #34]	; 0x22
   2b7d8:	strh	r7, [r4, #132]	; 0x84
   2b7dc:	ldrh	r1, [r4, #164]	; 0xa4
   2b7e0:	ldr	r2, [r4, #32]
   2b7e4:	strh	r1, [r2, #32]
   2b7e8:	strh	r6, [r4, #164]	; 0xa4
   2b7ec:	ldr	r1, [r4, #32]
   2b7f0:	ldr	r2, [r4, #144]	; 0x90
   2b7f4:	str	r2, [r1, #20]
   2b7f8:	ldr	r1, [r4, #32]
   2b7fc:	ldr	r2, [r4, #152]	; 0x98
   2b800:	str	r2, [r1, #28]
   2b804:	ldr	r3, [r4, #148]	; 0x94
   2b808:	ldr	r1, [r4, #32]
   2b80c:	ldr	r2, [r4, #136]	; 0x88
   2b810:	ldr	r7, [r4, #168]	; 0xa8
   2b814:	add	r6, r3, #1
   2b818:	str	r2, [r4, #144]	; 0x90
   2b81c:	str	r6, [r4, #148]	; 0x94
   2b820:	str	r3, [r4, #152]	; 0x98
   2b824:	str	r7, [r1, #16]
   2b828:	movw	r1, #19740	; 0x4d1c
   2b82c:	movt	r1, #3
   2b830:	movne	r1, r5
   2b834:	ldr	r1, [r1]
   2b838:	str	r1, [r4, #168]	; 0xa8
   2b83c:	ldr	r1, [r4, #32]
   2b840:	strh	r0, [r1, #14]
   2b844:	mov	r0, #0
   2b848:	pop	{r4, r5, r6, r7, fp, pc}
   2b84c:	push	{r4, r5, r6, r7, fp, lr}
   2b850:	add	fp, sp, #16
   2b854:	sub	sp, sp, #8
   2b858:	mov	r5, r1
   2b85c:	ldr	r1, [r0, #156]	; 0x9c
   2b860:	ldr	r2, [r0, #160]	; 0xa0
   2b864:	mov	r4, r0
   2b868:	add	r0, r1, #1
   2b86c:	cmp	r1, r2
   2b870:	str	r0, [r4, #156]	; 0x9c
   2b874:	bge	2b888 <flatcc_builder_start_buffer@@Base+0xf8>
   2b878:	ldr	r0, [r4, #32]
   2b87c:	add	r0, r0, #36	; 0x24
   2b880:	str	r0, [r4, #32]
   2b884:	b	2b91c <flatcc_builder_start_buffer@@Base+0x18c>
   2b888:	ldr	r2, [r4, #176]	; 0xb0
   2b88c:	mvn	r6, #0
   2b890:	cmp	r2, #1
   2b894:	cmpge	r1, r2
   2b898:	bge	2b954 <flatcc_builder_start_buffer@@Base+0x1c4>
   2b89c:	add	r7, r0, r0, lsl #3
   2b8a0:	ldr	r0, [r4, #88]	; 0x58
   2b8a4:	lsl	r2, r7, #2
   2b8a8:	cmp	r2, r0
   2b8ac:	bls	2b8d4 <flatcc_builder_start_buffer@@Base+0x144>
   2b8b0:	ldr	r0, [r4, #40]	; 0x28
   2b8b4:	ldr	ip, [r4, #48]	; 0x30
   2b8b8:	mov	r3, #4
   2b8bc:	add	r1, r4, #84	; 0x54
   2b8c0:	str	r3, [sp]
   2b8c4:	mov	r3, #0
   2b8c8:	blx	ip
   2b8cc:	cmp	r0, #0
   2b8d0:	bne	2b960 <flatcc_builder_start_buffer@@Base+0x1d0>
   2b8d4:	ldr	r1, [r4, #84]	; 0x54
   2b8d8:	mvn	r0, #35	; 0x23
   2b8dc:	add	r0, r0, r7, lsl #2
   2b8e0:	adds	r0, r0, r1
   2b8e4:	str	r0, [r4, #32]
   2b8e8:	beq	2b954 <flatcc_builder_start_buffer@@Base+0x1c4>
   2b8ec:	ldr	r1, [r4, #88]	; 0x58
   2b8f0:	movw	r3, #36409	; 0x8e39
   2b8f4:	ldr	r2, [r4, #176]	; 0xb0
   2b8f8:	movt	r3, #14563	; 0x38e3
   2b8fc:	umull	r1, r3, r1, r3
   2b900:	cmp	r2, r3, lsr #3
   2b904:	lsr	r1, r3, #3
   2b908:	mov	r3, r1
   2b90c:	movlt	r3, r2
   2b910:	cmp	r2, #0
   2b914:	movle	r3, r1
   2b918:	str	r3, [r4, #160]	; 0xa0
   2b91c:	ldr	r1, [r4, #20]
   2b920:	mvn	r3, #3
   2b924:	mov	r6, #0
   2b928:	str	r1, [r0, #8]
   2b92c:	ldrh	r2, [r4, #130]	; 0x82
   2b930:	strh	r2, [r0, #12]
   2b934:	strh	r5, [r4, #130]	; 0x82
   2b938:	ldr	r2, [r4, #28]
   2b93c:	stm	r0, {r2, r3}
   2b940:	add	r0, r1, r2
   2b944:	str	r6, [r4, #20]
   2b948:	add	r0, r0, #7
   2b94c:	bic	r0, r0, #7
   2b950:	str	r0, [r4, #28]
   2b954:	mov	r0, r6
   2b958:	sub	sp, fp, #16
   2b95c:	pop	{r4, r5, r6, r7, fp, pc}
   2b960:	movw	r0, #24788	; 0x60d4
   2b964:	movw	r1, #20270	; 0x4f2e
   2b968:	movw	r3, #24334	; 0x5f0e
   2b96c:	mov	r2, #308	; 0x134
   2b970:	movt	r0, #3
   2b974:	movt	r1, #3
   2b978:	movt	r3, #3
   2b97c:	bl	12bc4 <__assert_fail@plt>

0002b980 <flatcc_builder_end_buffer@@Base>:
   2b980:	push	{r4, r5, r6, sl, fp, lr}
   2b984:	add	fp, sp, #16
   2b988:	sub	sp, sp, #8
   2b98c:	mov	r4, r0
   2b990:	ldr	r0, [r0, #32]
   2b994:	ldrh	r0, [r0, #14]
   2b998:	cmp	r0, #1
   2b99c:	bne	2ba90 <flatcc_builder_end_buffer@@Base+0x110>
   2b9a0:	mov	r3, r1
   2b9a4:	ldr	r1, [r4, #152]	; 0x98
   2b9a8:	ldrh	r0, [r4, #164]	; 0xa4
   2b9ac:	ldrh	r2, [r4, #132]	; 0x84
   2b9b0:	cmp	r1, #0
   2b9b4:	ldrh	r1, [r4, #128]	; 0x80
   2b9b8:	and	r0, r0, #2
   2b9bc:	orrne	r0, r0, #1
   2b9c0:	cmp	r1, r2
   2b9c4:	movcc	r1, r2
   2b9c8:	strhcc	r2, [r4, #128]	; 0x80
   2b9cc:	str	r0, [sp, #4]
   2b9d0:	mov	r0, r4
   2b9d4:	str	r1, [sp]
   2b9d8:	add	r1, r4, #168	; 0xa8
   2b9dc:	bl	2b454 <flatcc_builder_create_buffer@@Base>
   2b9e0:	mov	r6, r0
   2b9e4:	cmp	r0, #0
   2b9e8:	beq	2ba84 <flatcc_builder_end_buffer@@Base+0x104>
   2b9ec:	ldr	r1, [r4, #32]
   2b9f0:	ldr	r0, [r4, #16]
   2b9f4:	ldr	r2, [r4, #20]
   2b9f8:	ldr	r3, [r1, #20]
   2b9fc:	str	r3, [r4, #144]	; 0x90
   2ba00:	ldr	r3, [r1, #28]
   2ba04:	str	r3, [r4, #152]	; 0x98
   2ba08:	ldr	r3, [r1, #16]
   2ba0c:	str	r3, [r4, #168]	; 0xa8
   2ba10:	ldrh	r1, [r1, #32]
   2ba14:	strh	r1, [r4, #164]	; 0xa4
   2ba18:	mov	r1, #0
   2ba1c:	bl	12b64 <memset@plt>
   2ba20:	ldr	r0, [r4, #32]
   2ba24:	ldr	r1, [r4, #60]	; 0x3c
   2ba28:	ldr	r2, [r4, #64]	; 0x40
   2ba2c:	ldr	r3, [r0, #8]
   2ba30:	str	r3, [r4, #20]
   2ba34:	ldr	r3, [r0]
   2ba38:	str	r3, [r4, #28]
   2ba3c:	add	r1, r1, r3
   2ba40:	ldr	r5, [r0, #4]
   2ba44:	str	r1, [r4, #16]
   2ba48:	sub	r1, r2, r3
   2ba4c:	cmp	r1, r5
   2ba50:	movhi	r1, r5
   2ba54:	str	r1, [r4, #24]
   2ba58:	ldrh	r1, [r4, #130]	; 0x82
   2ba5c:	ldrh	r2, [r4, #128]	; 0x80
   2ba60:	cmp	r2, r1
   2ba64:	strhcc	r1, [r4, #128]	; 0x80
   2ba68:	ldrh	r1, [r0, #12]
   2ba6c:	sub	r0, r0, #36	; 0x24
   2ba70:	str	r0, [r4, #32]
   2ba74:	strh	r1, [r4, #130]	; 0x82
   2ba78:	ldr	r0, [r4, #156]	; 0x9c
   2ba7c:	sub	r0, r0, #1
   2ba80:	str	r0, [r4, #156]	; 0x9c
   2ba84:	mov	r0, r6
   2ba88:	sub	sp, fp, #16
   2ba8c:	pop	{r4, r5, r6, sl, fp, pc}
   2ba90:	movw	r0, #20829	; 0x515d
   2ba94:	movw	r1, #20270	; 0x4f2e
   2ba98:	movw	r3, #20873	; 0x5189
   2ba9c:	movw	r2, #838	; 0x346
   2baa0:	movt	r0, #3
   2baa4:	movt	r1, #3
   2baa8:	movt	r3, #3
   2baac:	bl	12bc4 <__assert_fail@plt>

0002bab0 <flatcc_builder_start_struct@@Base>:
   2bab0:	push	{r4, r5, r6, r7, fp, lr}
   2bab4:	add	fp, sp, #16
   2bab8:	sub	sp, sp, #8
   2babc:	mov	r6, r1
   2bac0:	mov	r1, r2
   2bac4:	mov	r4, r0
   2bac8:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2bacc:	mov	r5, #0
   2bad0:	cmp	r0, #0
   2bad4:	bne	2bb50 <flatcc_builder_start_struct@@Base+0xa0>
   2bad8:	ldr	r2, [r4, #32]
   2badc:	mov	r0, #2
   2bae0:	mvn	r7, #3
   2bae4:	strh	r0, [r2, #14]
   2bae8:	ldr	r1, [r4, #28]
   2baec:	ldr	r3, [r4, #64]	; 0x40
   2baf0:	ldr	r0, [r4, #60]	; 0x3c
   2baf4:	sub	r3, r3, r1
   2baf8:	add	r0, r0, r1
   2bafc:	cmn	r3, #4
   2bb00:	str	r0, [r4, #16]
   2bb04:	movcs	r3, r7
   2bb08:	str	r3, [r4, #24]
   2bb0c:	str	r7, [r2, #4]
   2bb10:	ldr	r7, [r4, #20]
   2bb14:	add	r2, r7, r6
   2bb18:	cmp	r2, r3
   2bb1c:	str	r2, [r4, #20]
   2bb20:	bcc	2bb8c <flatcc_builder_start_struct@@Base+0xdc>
   2bb24:	ldr	r0, [r4, #40]	; 0x28
   2bb28:	ldr	r6, [r4, #48]	; 0x30
   2bb2c:	add	r1, r1, r2
   2bb30:	mov	r3, #1
   2bb34:	str	r3, [sp]
   2bb38:	add	r2, r1, #1
   2bb3c:	add	r1, r4, #60	; 0x3c
   2bb40:	mov	r3, #1
   2bb44:	blx	r6
   2bb48:	cmp	r0, #0
   2bb4c:	beq	2bb5c <flatcc_builder_start_struct@@Base+0xac>
   2bb50:	mov	r0, r5
   2bb54:	sub	sp, fp, #16
   2bb58:	pop	{r4, r5, r6, r7, fp, pc}
   2bb5c:	ldr	r1, [r4, #28]
   2bb60:	ldr	r0, [r4, #60]	; 0x3c
   2bb64:	ldr	r3, [r4, #64]	; 0x40
   2bb68:	ldr	r2, [r4, #32]
   2bb6c:	add	r0, r0, r1
   2bb70:	sub	r1, r3, r1
   2bb74:	mvn	r3, #3
   2bb78:	cmn	r1, #4
   2bb7c:	str	r0, [r4, #16]
   2bb80:	movcs	r1, r3
   2bb84:	str	r1, [r4, #24]
   2bb88:	str	r3, [r2, #4]
   2bb8c:	add	r5, r0, r7
   2bb90:	mov	r0, r5
   2bb94:	sub	sp, fp, #16
   2bb98:	pop	{r4, r5, r6, r7, fp, pc}

0002bb9c <flatcc_builder_struct_edit@@Base>:
   2bb9c:	ldr	r0, [r0, #16]
   2bba0:	bx	lr

0002bba4 <flatcc_builder_end_struct@@Base>:
   2bba4:	push	{r4, r5, fp, lr}
   2bba8:	add	fp, sp, #8
   2bbac:	mov	r4, r0
   2bbb0:	ldr	r0, [r0, #32]
   2bbb4:	ldrh	r0, [r0, #14]
   2bbb8:	cmp	r0, #2
   2bbbc:	bne	2bc5c <flatcc_builder_end_struct@@Base+0xb8>
   2bbc0:	ldrh	r3, [r4, #130]	; 0x82
   2bbc4:	ldr	r1, [r4, #16]
   2bbc8:	ldr	r2, [r4, #20]
   2bbcc:	mov	r0, r4
   2bbd0:	bl	2b668 <flatcc_builder_create_struct@@Base>
   2bbd4:	mov	r5, r0
   2bbd8:	cmp	r0, #0
   2bbdc:	beq	2bc54 <flatcc_builder_end_struct@@Base+0xb0>
   2bbe0:	ldr	r0, [r4, #16]
   2bbe4:	ldr	r2, [r4, #20]
   2bbe8:	mov	r1, #0
   2bbec:	bl	12b64 <memset@plt>
   2bbf0:	ldr	r0, [r4, #32]
   2bbf4:	ldr	r1, [r4, #60]	; 0x3c
   2bbf8:	ldr	ip, [r4, #64]	; 0x40
   2bbfc:	ldr	r3, [r0, #8]
   2bc00:	str	r3, [r4, #20]
   2bc04:	ldr	r3, [r0]
   2bc08:	str	r3, [r4, #28]
   2bc0c:	add	r1, r1, r3
   2bc10:	ldr	r2, [r0, #4]
   2bc14:	str	r1, [r4, #16]
   2bc18:	sub	r1, ip, r3
   2bc1c:	cmp	r1, r2
   2bc20:	movhi	r1, r2
   2bc24:	str	r1, [r4, #24]
   2bc28:	ldrh	r1, [r4, #130]	; 0x82
   2bc2c:	ldrh	r2, [r4, #128]	; 0x80
   2bc30:	cmp	r2, r1
   2bc34:	strhcc	r1, [r4, #128]	; 0x80
   2bc38:	ldrh	r1, [r0, #12]
   2bc3c:	sub	r0, r0, #36	; 0x24
   2bc40:	str	r0, [r4, #32]
   2bc44:	strh	r1, [r4, #130]	; 0x82
   2bc48:	ldr	r0, [r4, #156]	; 0x9c
   2bc4c:	sub	r0, r0, #1
   2bc50:	str	r0, [r4, #156]	; 0x9c
   2bc54:	mov	r0, r5
   2bc58:	pop	{r4, r5, fp, pc}
   2bc5c:	movw	r0, #20962	; 0x51e2
   2bc60:	movw	r1, #20270	; 0x4f2e
   2bc64:	movw	r3, #21006	; 0x520e
   2bc68:	mov	r2, #872	; 0x368
   2bc6c:	movt	r0, #3
   2bc70:	movt	r1, #3
   2bc74:	movt	r3, #3
   2bc78:	bl	12bc4 <__assert_fail@plt>

0002bc7c <flatcc_builder_extend_vector@@Base>:
   2bc7c:	push	{r4, r5, fp, lr}
   2bc80:	add	fp, sp, #8
   2bc84:	sub	sp, sp, #8
   2bc88:	mov	r4, r0
   2bc8c:	ldr	r0, [r0, #32]
   2bc90:	ldr	r2, [r0, #20]
   2bc94:	adds	r2, r2, r1
   2bc98:	bcs	2bd58 <flatcc_builder_extend_vector@@Base+0xdc>
   2bc9c:	ldr	r3, [r0, #24]
   2bca0:	cmp	r2, r3
   2bca4:	bhi	2bd58 <flatcc_builder_extend_vector@@Base+0xdc>
   2bca8:	str	r2, [r0, #20]
   2bcac:	ldr	r2, [r4, #32]
   2bcb0:	ldr	r5, [r4, #20]
   2bcb4:	ldr	r0, [r4, #24]
   2bcb8:	ldr	r2, [r2, #16]
   2bcbc:	mla	r1, r2, r1, r5
   2bcc0:	cmp	r1, r0
   2bcc4:	str	r1, [r4, #20]
   2bcc8:	bcs	2bcdc <flatcc_builder_extend_vector@@Base+0x60>
   2bccc:	ldr	r0, [r4, #16]
   2bcd0:	add	r0, r0, r5
   2bcd4:	sub	sp, fp, #8
   2bcd8:	pop	{r4, r5, fp, pc}
   2bcdc:	ldr	r2, [r4, #28]
   2bce0:	ldr	r0, [r4, #40]	; 0x28
   2bce4:	ldr	ip, [r4, #48]	; 0x30
   2bce8:	mov	r3, #1
   2bcec:	str	r3, [sp]
   2bcf0:	mov	r3, #1
   2bcf4:	add	r1, r1, r2
   2bcf8:	add	r2, r1, #1
   2bcfc:	add	r1, r4, #60	; 0x3c
   2bd00:	blx	ip
   2bd04:	mov	r1, r0
   2bd08:	mov	r0, #0
   2bd0c:	cmp	r1, #0
   2bd10:	beq	2bd1c <flatcc_builder_extend_vector@@Base+0xa0>
   2bd14:	sub	sp, fp, #8
   2bd18:	pop	{r4, r5, fp, pc}
   2bd1c:	ldr	r1, [r4, #28]
   2bd20:	ldr	r0, [r4, #60]	; 0x3c
   2bd24:	ldr	r3, [r4, #64]	; 0x40
   2bd28:	ldr	r2, [r4, #32]
   2bd2c:	add	r0, r0, r1
   2bd30:	sub	r1, r3, r1
   2bd34:	mvn	r3, #3
   2bd38:	cmn	r1, #4
   2bd3c:	str	r0, [r4, #16]
   2bd40:	movcs	r1, r3
   2bd44:	str	r1, [r4, #24]
   2bd48:	str	r3, [r2, #4]
   2bd4c:	add	r0, r0, r5
   2bd50:	sub	sp, fp, #8
   2bd54:	pop	{r4, r5, fp, pc}
   2bd58:	movw	r0, #24541	; 0x5fdd
   2bd5c:	movw	r1, #20270	; 0x4f2e
   2bd60:	movw	r3, #24568	; 0x5ff8
   2bd64:	mov	r2, #892	; 0x37c
   2bd68:	movt	r0, #3
   2bd6c:	movt	r1, #3
   2bd70:	movt	r3, #3
   2bd74:	bl	12bc4 <__assert_fail@plt>

0002bd78 <flatcc_builder_vector_push@@Base>:
   2bd78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bd7c:	add	fp, sp, #24
   2bd80:	sub	sp, sp, #8
   2bd84:	mov	r5, r0
   2bd88:	ldr	r0, [r0, #32]
   2bd8c:	mov	r8, r1
   2bd90:	ldrh	r1, [r0, #14]
   2bd94:	cmp	r1, #4
   2bd98:	bne	2be84 <flatcc_builder_vector_push@@Base+0x10c>
   2bd9c:	ldr	r1, [r0, #20]
   2bda0:	ldr	r2, [r0, #24]
   2bda4:	cmp	r1, r2
   2bda8:	bhi	2bea4 <flatcc_builder_vector_push@@Base+0x12c>
   2bdac:	add	r1, r1, #1
   2bdb0:	str	r1, [r0, #20]
   2bdb4:	ldr	r1, [r5, #32]
   2bdb8:	ldr	r4, [r5, #20]
   2bdbc:	ldr	r0, [r5, #24]
   2bdc0:	ldr	r6, [r1, #16]
   2bdc4:	add	r1, r4, r6
   2bdc8:	cmp	r1, r0
   2bdcc:	str	r1, [r5, #20]
   2bdd0:	bcs	2bdfc <flatcc_builder_vector_push@@Base+0x84>
   2bdd4:	ldr	r0, [r5, #16]
   2bdd8:	adds	r7, r0, r4
   2bddc:	beq	2be74 <flatcc_builder_vector_push@@Base+0xfc>
   2bde0:	mov	r0, r7
   2bde4:	mov	r1, r8
   2bde8:	mov	r2, r6
   2bdec:	bl	12ab0 <memcpy@plt>
   2bdf0:	mov	r0, r7
   2bdf4:	sub	sp, fp, #24
   2bdf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2bdfc:	ldr	r2, [r5, #28]
   2be00:	ldr	r0, [r5, #40]	; 0x28
   2be04:	ldr	r7, [r5, #48]	; 0x30
   2be08:	mov	r3, #1
   2be0c:	str	r3, [sp]
   2be10:	mov	r3, #1
   2be14:	add	r1, r1, r2
   2be18:	add	r2, r1, #1
   2be1c:	add	r1, r5, #60	; 0x3c
   2be20:	blx	r7
   2be24:	mov	r7, #0
   2be28:	cmp	r0, #0
   2be2c:	beq	2be3c <flatcc_builder_vector_push@@Base+0xc4>
   2be30:	mov	r0, r7
   2be34:	sub	sp, fp, #24
   2be38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2be3c:	ldr	r1, [r5, #28]
   2be40:	ldr	r0, [r5, #60]	; 0x3c
   2be44:	ldr	r3, [r5, #64]	; 0x40
   2be48:	ldr	r2, [r5, #32]
   2be4c:	add	r0, r0, r1
   2be50:	sub	r1, r3, r1
   2be54:	mvn	r3, #3
   2be58:	cmn	r1, #4
   2be5c:	str	r0, [r5, #16]
   2be60:	movcs	r1, r3
   2be64:	str	r1, [r5, #24]
   2be68:	str	r3, [r2, #4]
   2be6c:	adds	r7, r0, r4
   2be70:	bne	2bde0 <flatcc_builder_vector_push@@Base+0x68>
   2be74:	mov	r7, #0
   2be78:	mov	r0, r7
   2be7c:	sub	sp, fp, #24
   2be80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2be84:	movw	r0, #21073	; 0x5251
   2be88:	movw	r1, #20270	; 0x4f2e
   2be8c:	movw	r3, #21117	; 0x527d
   2be90:	movw	r2, #907	; 0x38b
   2be94:	movt	r0, #3
   2be98:	movt	r1, #3
   2be9c:	movt	r3, #3
   2bea0:	bl	12bc4 <__assert_fail@plt>
   2bea4:	movw	r0, #21184	; 0x52c0
   2bea8:	movw	r1, #20270	; 0x4f2e
   2beac:	movw	r3, #21117	; 0x527d
   2beb0:	mov	r2, #908	; 0x38c
   2beb4:	movt	r0, #3
   2beb8:	movt	r1, #3
   2bebc:	movt	r3, #3
   2bec0:	bl	12bc4 <__assert_fail@plt>

0002bec4 <flatcc_builder_append_vector@@Base>:
   2bec4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2bec8:	add	fp, sp, #24
   2becc:	sub	sp, sp, #8
   2bed0:	mov	r6, r0
   2bed4:	ldr	r0, [r0, #32]
   2bed8:	mov	r8, r1
   2bedc:	ldrh	r1, [r0, #14]
   2bee0:	cmp	r1, #4
   2bee4:	bne	2bff8 <flatcc_builder_append_vector@@Base+0x134>
   2bee8:	ldr	r1, [r0, #20]
   2beec:	mov	r5, r2
   2bef0:	adds	r1, r1, r2
   2bef4:	bcs	2bfd8 <flatcc_builder_append_vector@@Base+0x114>
   2bef8:	ldr	r2, [r0, #24]
   2befc:	cmp	r1, r2
   2bf00:	bhi	2bfd8 <flatcc_builder_append_vector@@Base+0x114>
   2bf04:	str	r1, [r0, #20]
   2bf08:	ldr	r1, [r6, #32]
   2bf0c:	ldr	r4, [r6, #20]
   2bf10:	ldr	r0, [r6, #24]
   2bf14:	ldr	r9, [r1, #16]
   2bf18:	mla	r1, r9, r5, r4
   2bf1c:	cmp	r1, r0
   2bf20:	str	r1, [r6, #20]
   2bf24:	bcs	2bf50 <flatcc_builder_append_vector@@Base+0x8c>
   2bf28:	ldr	r0, [r6, #16]
   2bf2c:	adds	r7, r0, r4
   2bf30:	beq	2bfc8 <flatcc_builder_append_vector@@Base+0x104>
   2bf34:	mul	r2, r9, r5
   2bf38:	mov	r0, r7
   2bf3c:	mov	r1, r8
   2bf40:	bl	12ab0 <memcpy@plt>
   2bf44:	mov	r0, r7
   2bf48:	sub	sp, fp, #24
   2bf4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bf50:	ldr	r2, [r6, #28]
   2bf54:	ldr	r0, [r6, #40]	; 0x28
   2bf58:	ldr	r7, [r6, #48]	; 0x30
   2bf5c:	mov	r3, #1
   2bf60:	str	r3, [sp]
   2bf64:	mov	r3, #1
   2bf68:	add	r1, r1, r2
   2bf6c:	add	r2, r1, #1
   2bf70:	add	r1, r6, #60	; 0x3c
   2bf74:	blx	r7
   2bf78:	mov	r7, #0
   2bf7c:	cmp	r0, #0
   2bf80:	beq	2bf90 <flatcc_builder_append_vector@@Base+0xcc>
   2bf84:	mov	r0, r7
   2bf88:	sub	sp, fp, #24
   2bf8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bf90:	ldr	r1, [r6, #28]
   2bf94:	ldr	r0, [r6, #60]	; 0x3c
   2bf98:	ldr	r3, [r6, #64]	; 0x40
   2bf9c:	ldr	r2, [r6, #32]
   2bfa0:	add	r0, r0, r1
   2bfa4:	sub	r1, r3, r1
   2bfa8:	mvn	r3, #3
   2bfac:	cmn	r1, #4
   2bfb0:	str	r0, [r6, #16]
   2bfb4:	movcs	r1, r3
   2bfb8:	str	r1, [r6, #24]
   2bfbc:	str	r3, [r2, #4]
   2bfc0:	adds	r7, r0, r4
   2bfc4:	bne	2bf34 <flatcc_builder_append_vector@@Base+0x70>
   2bfc8:	mov	r7, #0
   2bfcc:	mov	r0, r7
   2bfd0:	sub	sp, fp, #24
   2bfd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2bfd8:	movw	r0, #24541	; 0x5fdd
   2bfdc:	movw	r1, #20270	; 0x4f2e
   2bfe0:	movw	r3, #24568	; 0x5ff8
   2bfe4:	mov	r2, #892	; 0x37c
   2bfe8:	movt	r0, #3
   2bfec:	movt	r1, #3
   2bff0:	movt	r3, #3
   2bff4:	bl	12bc4 <__assert_fail@plt>
   2bff8:	movw	r0, #21073	; 0x5251
   2bffc:	movw	r1, #20270	; 0x4f2e
   2c000:	movw	r3, #21245	; 0x52fd
   2c004:	movw	r2, #915	; 0x393
   2c008:	movt	r0, #3
   2c00c:	movt	r1, #3
   2c010:	movt	r3, #3
   2c014:	bl	12bc4 <__assert_fail@plt>

0002c018 <flatcc_builder_extend_offset_vector@@Base>:
   2c018:	push	{r4, r5, fp, lr}
   2c01c:	add	fp, sp, #8
   2c020:	sub	sp, sp, #8
   2c024:	mov	r4, r0
   2c028:	ldr	r0, [r0, #32]
   2c02c:	ldr	r2, [r0, #20]
   2c030:	adds	r2, r2, r1
   2c034:	cmpcc	r2, #1073741824	; 0x40000000
   2c038:	bcc	2c05c <flatcc_builder_extend_offset_vector@@Base+0x44>
   2c03c:	movw	r0, #24541	; 0x5fdd
   2c040:	movw	r1, #20270	; 0x4f2e
   2c044:	movw	r3, #24568	; 0x5ff8
   2c048:	mov	r2, #892	; 0x37c
   2c04c:	movt	r0, #3
   2c050:	movt	r1, #3
   2c054:	movt	r3, #3
   2c058:	bl	12bc4 <__assert_fail@plt>
   2c05c:	str	r2, [r0, #20]
   2c060:	ldr	r5, [r4, #20]
   2c064:	ldr	r0, [r4, #24]
   2c068:	add	r1, r5, r1, lsl #2
   2c06c:	cmp	r1, r0
   2c070:	str	r1, [r4, #20]
   2c074:	bcs	2c088 <flatcc_builder_extend_offset_vector@@Base+0x70>
   2c078:	ldr	r0, [r4, #16]
   2c07c:	add	r0, r0, r5
   2c080:	sub	sp, fp, #8
   2c084:	pop	{r4, r5, fp, pc}
   2c088:	ldr	r2, [r4, #28]
   2c08c:	ldr	r0, [r4, #40]	; 0x28
   2c090:	ldr	ip, [r4, #48]	; 0x30
   2c094:	mov	r3, #1
   2c098:	str	r3, [sp]
   2c09c:	mov	r3, #1
   2c0a0:	add	r1, r1, r2
   2c0a4:	add	r2, r1, #1
   2c0a8:	add	r1, r4, #60	; 0x3c
   2c0ac:	blx	ip
   2c0b0:	mov	r1, r0
   2c0b4:	mov	r0, #0
   2c0b8:	cmp	r1, #0
   2c0bc:	beq	2c0c8 <flatcc_builder_extend_offset_vector@@Base+0xb0>
   2c0c0:	sub	sp, fp, #8
   2c0c4:	pop	{r4, r5, fp, pc}
   2c0c8:	ldr	r1, [r4, #28]
   2c0cc:	ldr	r0, [r4, #60]	; 0x3c
   2c0d0:	ldr	r3, [r4, #64]	; 0x40
   2c0d4:	ldr	r2, [r4, #32]
   2c0d8:	add	r0, r0, r1
   2c0dc:	sub	r1, r3, r1
   2c0e0:	mvn	r3, #3
   2c0e4:	cmn	r1, #4
   2c0e8:	str	r0, [r4, #16]
   2c0ec:	movcs	r1, r3
   2c0f0:	str	r1, [r4, #24]
   2c0f4:	str	r3, [r2, #4]
   2c0f8:	add	r0, r0, r5
   2c0fc:	sub	sp, fp, #8
   2c100:	pop	{r4, r5, fp, pc}

0002c104 <flatcc_builder_offset_vector_push@@Base>:
   2c104:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c108:	add	fp, sp, #24
   2c10c:	sub	sp, sp, #8
   2c110:	mov	r6, r0
   2c114:	ldr	r0, [r0, #32]
   2c118:	mov	r8, r1
   2c11c:	ldrh	r1, [r0, #14]
   2c120:	cmp	r1, #5
   2c124:	bne	2c1e4 <flatcc_builder_offset_vector_push@@Base+0xe0>
   2c128:	ldr	r1, [r0, #20]
   2c12c:	mov	r5, #0
   2c130:	cmn	r1, #-1073741823	; 0xc0000001
   2c134:	beq	2c190 <flatcc_builder_offset_vector_push@@Base+0x8c>
   2c138:	add	r1, r1, #1
   2c13c:	str	r1, [r0, #20]
   2c140:	ldr	r7, [r6, #20]
   2c144:	ldr	r0, [r6, #24]
   2c148:	add	r1, r7, #4
   2c14c:	cmp	r1, r0
   2c150:	str	r1, [r6, #20]
   2c154:	bcs	2c160 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2c158:	ldr	r0, [r6, #16]
   2c15c:	b	2c1cc <flatcc_builder_offset_vector_push@@Base+0xc8>
   2c160:	ldr	r1, [r6, #28]
   2c164:	ldr	r0, [r6, #40]	; 0x28
   2c168:	ldr	r4, [r6, #48]	; 0x30
   2c16c:	mov	r2, #1
   2c170:	mov	r3, #1
   2c174:	str	r2, [sp]
   2c178:	add	r1, r7, r1
   2c17c:	add	r2, r1, #5
   2c180:	add	r1, r6, #60	; 0x3c
   2c184:	blx	r4
   2c188:	cmp	r0, #0
   2c18c:	beq	2c19c <flatcc_builder_offset_vector_push@@Base+0x98>
   2c190:	mov	r0, r5
   2c194:	sub	sp, fp, #24
   2c198:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c19c:	ldr	r1, [r6, #28]
   2c1a0:	ldr	r0, [r6, #60]	; 0x3c
   2c1a4:	ldr	r3, [r6, #64]	; 0x40
   2c1a8:	ldr	r2, [r6, #32]
   2c1ac:	add	r0, r0, r1
   2c1b0:	sub	r1, r3, r1
   2c1b4:	mvn	r3, #3
   2c1b8:	cmn	r1, #4
   2c1bc:	str	r0, [r6, #16]
   2c1c0:	movcs	r1, r3
   2c1c4:	str	r1, [r6, #24]
   2c1c8:	str	r3, [r2, #4]
   2c1cc:	adds	r0, r0, r7
   2c1d0:	movne	r5, r0
   2c1d4:	strne	r8, [r0]
   2c1d8:	mov	r0, r5
   2c1dc:	sub	sp, fp, #24
   2c1e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c1e4:	movw	r0, #21322	; 0x534a
   2c1e8:	movw	r1, #20270	; 0x4f2e
   2c1ec:	movw	r3, #21373	; 0x537d
   2c1f0:	movw	r2, #934	; 0x3a6
   2c1f4:	movt	r0, #3
   2c1f8:	movt	r1, #3
   2c1fc:	movt	r3, #3
   2c200:	bl	12bc4 <__assert_fail@plt>

0002c204 <flatcc_builder_append_offset_vector@@Base>:
   2c204:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c208:	add	fp, sp, #24
   2c20c:	sub	sp, sp, #8
   2c210:	mov	r6, r0
   2c214:	ldr	r0, [r0, #32]
   2c218:	mov	r8, r1
   2c21c:	ldrh	r1, [r0, #14]
   2c220:	cmp	r1, #5
   2c224:	bne	2c328 <flatcc_builder_append_offset_vector@@Base+0x124>
   2c228:	ldr	r1, [r0, #20]
   2c22c:	mov	r5, r2
   2c230:	adds	r1, r1, r2
   2c234:	cmpcc	r1, #1073741824	; 0x40000000
   2c238:	bcc	2c25c <flatcc_builder_append_offset_vector@@Base+0x58>
   2c23c:	movw	r0, #24541	; 0x5fdd
   2c240:	movw	r1, #20270	; 0x4f2e
   2c244:	movw	r3, #24568	; 0x5ff8
   2c248:	mov	r2, #892	; 0x37c
   2c24c:	movt	r0, #3
   2c250:	movt	r1, #3
   2c254:	movt	r3, #3
   2c258:	bl	12bc4 <__assert_fail@plt>
   2c25c:	str	r1, [r0, #20]
   2c260:	ldr	r4, [r6, #20]
   2c264:	ldr	r0, [r6, #24]
   2c268:	add	r1, r4, r5, lsl #2
   2c26c:	cmp	r1, r0
   2c270:	str	r1, [r6, #20]
   2c274:	bcs	2c2a0 <flatcc_builder_append_offset_vector@@Base+0x9c>
   2c278:	ldr	r0, [r6, #16]
   2c27c:	adds	r7, r0, r4
   2c280:	beq	2c318 <flatcc_builder_append_offset_vector@@Base+0x114>
   2c284:	lsl	r2, r5, #2
   2c288:	mov	r0, r7
   2c28c:	mov	r1, r8
   2c290:	bl	12ab0 <memcpy@plt>
   2c294:	mov	r0, r7
   2c298:	sub	sp, fp, #24
   2c29c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c2a0:	ldr	r2, [r6, #28]
   2c2a4:	ldr	r0, [r6, #40]	; 0x28
   2c2a8:	ldr	r7, [r6, #48]	; 0x30
   2c2ac:	mov	r3, #1
   2c2b0:	str	r3, [sp]
   2c2b4:	mov	r3, #1
   2c2b8:	add	r1, r1, r2
   2c2bc:	add	r2, r1, #1
   2c2c0:	add	r1, r6, #60	; 0x3c
   2c2c4:	blx	r7
   2c2c8:	mov	r7, #0
   2c2cc:	cmp	r0, #0
   2c2d0:	beq	2c2e0 <flatcc_builder_append_offset_vector@@Base+0xdc>
   2c2d4:	mov	r0, r7
   2c2d8:	sub	sp, fp, #24
   2c2dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c2e0:	ldr	r1, [r6, #28]
   2c2e4:	ldr	r0, [r6, #60]	; 0x3c
   2c2e8:	ldr	r3, [r6, #64]	; 0x40
   2c2ec:	ldr	r2, [r6, #32]
   2c2f0:	add	r0, r0, r1
   2c2f4:	sub	r1, r3, r1
   2c2f8:	mvn	r3, #3
   2c2fc:	cmn	r1, #4
   2c300:	str	r0, [r6, #16]
   2c304:	movcs	r1, r3
   2c308:	str	r1, [r6, #24]
   2c30c:	str	r3, [r2, #4]
   2c310:	adds	r7, r0, r4
   2c314:	bne	2c284 <flatcc_builder_append_offset_vector@@Base+0x80>
   2c318:	mov	r7, #0
   2c31c:	mov	r0, r7
   2c320:	sub	sp, fp, #24
   2c324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c328:	movw	r0, #21322	; 0x534a
   2c32c:	movw	r1, #20270	; 0x4f2e
   2c330:	movw	r3, #21471	; 0x53df
   2c334:	mov	r2, #948	; 0x3b4
   2c338:	movt	r0, #3
   2c33c:	movt	r1, #3
   2c340:	movt	r3, #3
   2c344:	bl	12bc4 <__assert_fail@plt>

0002c348 <flatcc_builder_extend_string@@Base>:
   2c348:	push	{r4, r5, fp, lr}
   2c34c:	add	fp, sp, #8
   2c350:	sub	sp, sp, #8
   2c354:	mov	r4, r0
   2c358:	ldr	r0, [r0, #32]
   2c35c:	ldrh	r2, [r0, #14]
   2c360:	cmp	r2, #6
   2c364:	bne	2c41c <flatcc_builder_extend_string@@Base+0xd4>
   2c368:	ldr	r2, [r0, #20]
   2c36c:	adds	r2, r2, r1
   2c370:	bcs	2c43c <flatcc_builder_extend_string@@Base+0xf4>
   2c374:	str	r2, [r0, #20]
   2c378:	ldr	r5, [r4, #20]
   2c37c:	ldr	r0, [r4, #24]
   2c380:	add	r1, r5, r1
   2c384:	cmp	r1, r0
   2c388:	str	r1, [r4, #20]
   2c38c:	bcs	2c3a0 <flatcc_builder_extend_string@@Base+0x58>
   2c390:	ldr	r0, [r4, #16]
   2c394:	add	r0, r0, r5
   2c398:	sub	sp, fp, #8
   2c39c:	pop	{r4, r5, fp, pc}
   2c3a0:	ldr	r2, [r4, #28]
   2c3a4:	ldr	r0, [r4, #40]	; 0x28
   2c3a8:	ldr	ip, [r4, #48]	; 0x30
   2c3ac:	mov	r3, #1
   2c3b0:	str	r3, [sp]
   2c3b4:	mov	r3, #1
   2c3b8:	add	r1, r1, r2
   2c3bc:	add	r2, r1, #1
   2c3c0:	add	r1, r4, #60	; 0x3c
   2c3c4:	blx	ip
   2c3c8:	mov	r1, r0
   2c3cc:	mov	r0, #0
   2c3d0:	cmp	r1, #0
   2c3d4:	beq	2c3e0 <flatcc_builder_extend_string@@Base+0x98>
   2c3d8:	sub	sp, fp, #8
   2c3dc:	pop	{r4, r5, fp, pc}
   2c3e0:	ldr	r1, [r4, #28]
   2c3e4:	ldr	r0, [r4, #60]	; 0x3c
   2c3e8:	ldr	r3, [r4, #64]	; 0x40
   2c3ec:	ldr	r2, [r4, #32]
   2c3f0:	add	r0, r0, r1
   2c3f4:	sub	r1, r3, r1
   2c3f8:	mvn	r3, #3
   2c3fc:	cmn	r1, #4
   2c400:	str	r0, [r4, #16]
   2c404:	movcs	r1, r3
   2c408:	str	r1, [r4, #24]
   2c40c:	str	r3, [r2, #4]
   2c410:	add	r0, r0, r5
   2c414:	sub	sp, fp, #8
   2c418:	pop	{r4, r5, fp, pc}
   2c41c:	movw	r0, #21587	; 0x5453
   2c420:	movw	r1, #20270	; 0x4f2e
   2c424:	movw	r3, #21631	; 0x547f
   2c428:	movw	r2, #957	; 0x3bd
   2c42c:	movt	r0, #3
   2c430:	movt	r1, #3
   2c434:	movt	r3, #3
   2c438:	bl	12bc4 <__assert_fail@plt>
   2c43c:	movw	r0, #24541	; 0x5fdd
   2c440:	movw	r1, #20270	; 0x4f2e
   2c444:	movw	r3, #24568	; 0x5ff8
   2c448:	mov	r2, #892	; 0x37c
   2c44c:	movt	r0, #3
   2c450:	movt	r1, #3
   2c454:	movt	r3, #3
   2c458:	bl	12bc4 <__assert_fail@plt>

0002c45c <flatcc_builder_append_string@@Base>:
   2c45c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c460:	add	fp, sp, #24
   2c464:	sub	sp, sp, #8
   2c468:	mov	r6, r0
   2c46c:	ldr	r0, [r0, #32]
   2c470:	mov	r8, r1
   2c474:	ldrh	r1, [r0, #14]
   2c478:	cmp	r1, #6
   2c47c:	bne	2c55c <flatcc_builder_append_string@@Base+0x100>
   2c480:	ldr	r1, [r0, #20]
   2c484:	mov	r4, r2
   2c488:	adds	r1, r1, r2
   2c48c:	bcs	2c57c <flatcc_builder_append_string@@Base+0x120>
   2c490:	str	r1, [r0, #20]
   2c494:	ldr	r5, [r6, #20]
   2c498:	ldr	r0, [r6, #24]
   2c49c:	add	r1, r5, r4
   2c4a0:	cmp	r1, r0
   2c4a4:	str	r1, [r6, #20]
   2c4a8:	bcs	2c4d4 <flatcc_builder_append_string@@Base+0x78>
   2c4ac:	ldr	r0, [r6, #16]
   2c4b0:	adds	r7, r0, r5
   2c4b4:	beq	2c54c <flatcc_builder_append_string@@Base+0xf0>
   2c4b8:	mov	r0, r7
   2c4bc:	mov	r1, r8
   2c4c0:	mov	r2, r4
   2c4c4:	bl	12ab0 <memcpy@plt>
   2c4c8:	mov	r0, r7
   2c4cc:	sub	sp, fp, #24
   2c4d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c4d4:	ldr	r2, [r6, #28]
   2c4d8:	ldr	r0, [r6, #40]	; 0x28
   2c4dc:	ldr	r7, [r6, #48]	; 0x30
   2c4e0:	mov	r3, #1
   2c4e4:	str	r3, [sp]
   2c4e8:	mov	r3, #1
   2c4ec:	add	r1, r1, r2
   2c4f0:	add	r2, r1, #1
   2c4f4:	add	r1, r6, #60	; 0x3c
   2c4f8:	blx	r7
   2c4fc:	mov	r7, #0
   2c500:	cmp	r0, #0
   2c504:	beq	2c514 <flatcc_builder_append_string@@Base+0xb8>
   2c508:	mov	r0, r7
   2c50c:	sub	sp, fp, #24
   2c510:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c514:	ldr	r1, [r6, #28]
   2c518:	ldr	r0, [r6, #60]	; 0x3c
   2c51c:	ldr	r3, [r6, #64]	; 0x40
   2c520:	ldr	r2, [r6, #32]
   2c524:	add	r0, r0, r1
   2c528:	sub	r1, r3, r1
   2c52c:	mvn	r3, #3
   2c530:	cmn	r1, #4
   2c534:	str	r0, [r6, #16]
   2c538:	movcs	r1, r3
   2c53c:	str	r1, [r6, #24]
   2c540:	str	r3, [r2, #4]
   2c544:	adds	r7, r0, r5
   2c548:	bne	2c4b8 <flatcc_builder_append_string@@Base+0x5c>
   2c54c:	mov	r7, #0
   2c550:	mov	r0, r7
   2c554:	sub	sp, fp, #24
   2c558:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c55c:	movw	r0, #21587	; 0x5453
   2c560:	movw	r1, #20270	; 0x4f2e
   2c564:	movw	r3, #21694	; 0x54be
   2c568:	movw	r2, #966	; 0x3c6
   2c56c:	movt	r0, #3
   2c570:	movt	r1, #3
   2c574:	movt	r3, #3
   2c578:	bl	12bc4 <__assert_fail@plt>
   2c57c:	movw	r0, #24541	; 0x5fdd
   2c580:	movw	r1, #20270	; 0x4f2e
   2c584:	movw	r3, #24568	; 0x5ff8
   2c588:	mov	r2, #892	; 0x37c
   2c58c:	movt	r0, #3
   2c590:	movt	r1, #3
   2c594:	movt	r3, #3
   2c598:	bl	12bc4 <__assert_fail@plt>

0002c59c <flatcc_builder_append_string_str@@Base>:
   2c59c:	push	{r4, r5, fp, lr}
   2c5a0:	add	fp, sp, #8
   2c5a4:	mov	r5, r0
   2c5a8:	mov	r0, r1
   2c5ac:	mov	r4, r1
   2c5b0:	bl	12b40 <strlen@plt>
   2c5b4:	mov	r2, r0
   2c5b8:	mov	r0, r5
   2c5bc:	mov	r1, r4
   2c5c0:	pop	{r4, r5, fp, lr}
   2c5c4:	b	2c45c <flatcc_builder_append_string@@Base>

0002c5c8 <flatcc_builder_append_string_strn@@Base>:
   2c5c8:	push	{r4, r5, r6, sl, fp, lr}
   2c5cc:	add	fp, sp, #16
   2c5d0:	mov	r6, r0
   2c5d4:	mov	r5, r1
   2c5d8:	mov	r0, r1
   2c5dc:	mov	r1, #0
   2c5e0:	mov	r4, r2
   2c5e4:	bl	12b7c <memchr@plt>
   2c5e8:	cmp	r0, #0
   2c5ec:	mov	r1, r5
   2c5f0:	subne	r4, r0, r5
   2c5f4:	mov	r0, r6
   2c5f8:	mov	r2, r4
   2c5fc:	pop	{r4, r5, r6, sl, fp, lr}
   2c600:	b	2c45c <flatcc_builder_append_string@@Base>

0002c604 <flatcc_builder_truncate_vector@@Base>:
   2c604:	push	{fp, lr}
   2c608:	mov	fp, sp
   2c60c:	ldr	r2, [r0, #32]
   2c610:	ldrh	r3, [r2, #14]
   2c614:	cmp	r3, #4
   2c618:	bne	2c660 <flatcc_builder_truncate_vector@@Base+0x5c>
   2c61c:	ldr	r3, [r2, #20]
   2c620:	cmp	r3, r1
   2c624:	bcc	2c680 <flatcc_builder_truncate_vector@@Base+0x7c>
   2c628:	sub	r3, r3, r1
   2c62c:	str	r3, [r2, #20]
   2c630:	ldr	r2, [r0, #32]
   2c634:	ldr	r3, [r0, #20]
   2c638:	ldr	ip, [r0, #16]
   2c63c:	ldr	r2, [r2, #16]
   2c640:	mls	r3, r2, r1, r3
   2c644:	mul	r2, r2, r1
   2c648:	mov	r1, #0
   2c64c:	str	r3, [r0, #20]
   2c650:	add	r0, ip, r3
   2c654:	bl	12b64 <memset@plt>
   2c658:	mov	r0, #0
   2c65c:	pop	{fp, pc}
   2c660:	movw	r0, #21073	; 0x5251
   2c664:	movw	r1, #20270	; 0x4f2e
   2c668:	movw	r3, #21771	; 0x550b
   2c66c:	movw	r2, #985	; 0x3d9
   2c670:	movt	r0, #3
   2c674:	movt	r1, #3
   2c678:	movt	r3, #3
   2c67c:	bl	12bc4 <__assert_fail@plt>
   2c680:	movw	r0, #21834	; 0x554a
   2c684:	movw	r1, #20270	; 0x4f2e
   2c688:	movw	r3, #21771	; 0x550b
   2c68c:	movw	r2, #986	; 0x3da
   2c690:	movt	r0, #3
   2c694:	movt	r1, #3
   2c698:	movt	r3, #3
   2c69c:	bl	12bc4 <__assert_fail@plt>

0002c6a0 <flatcc_builder_truncate_offset_vector@@Base>:
   2c6a0:	push	{fp, lr}
   2c6a4:	mov	fp, sp
   2c6a8:	ldr	r2, [r0, #32]
   2c6ac:	ldrh	r3, [r2, #14]
   2c6b0:	cmp	r3, #5
   2c6b4:	bne	2c6fc <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2c6b8:	ldr	r3, [r2, #20]
   2c6bc:	cmp	r3, r1
   2c6c0:	bcc	2c71c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2c6c4:	sub	r3, r3, r1
   2c6c8:	str	r3, [r2, #20]
   2c6cc:	ldr	r2, [r0, #32]
   2c6d0:	ldr	r3, [r0, #20]
   2c6d4:	ldr	ip, [r0, #16]
   2c6d8:	ldr	r2, [r2, #16]
   2c6dc:	mls	r3, r2, r1, r3
   2c6e0:	mul	r2, r2, r1
   2c6e4:	mov	r1, #0
   2c6e8:	str	r3, [r0, #20]
   2c6ec:	add	r0, ip, r3
   2c6f0:	bl	12b64 <memset@plt>
   2c6f4:	mov	r0, #0
   2c6f8:	pop	{fp, pc}
   2c6fc:	movw	r0, #21322	; 0x534a
   2c700:	movw	r1, #20270	; 0x4f2e
   2c704:	movw	r3, #21870	; 0x556e
   2c708:	movw	r2, #994	; 0x3e2
   2c70c:	movt	r0, #3
   2c710:	movt	r1, #3
   2c714:	movt	r3, #3
   2c718:	bl	12bc4 <__assert_fail@plt>
   2c71c:	movw	r0, #21940	; 0x55b4
   2c720:	movw	r1, #20270	; 0x4f2e
   2c724:	movw	r3, #21870	; 0x556e
   2c728:	movw	r2, #995	; 0x3e3
   2c72c:	movt	r0, #3
   2c730:	movt	r1, #3
   2c734:	movt	r3, #3
   2c738:	bl	12bc4 <__assert_fail@plt>

0002c73c <flatcc_builder_truncate_string@@Base>:
   2c73c:	push	{fp, lr}
   2c740:	mov	fp, sp
   2c744:	mov	r2, r1
   2c748:	ldr	r1, [r0, #32]
   2c74c:	ldrh	r3, [r1, #14]
   2c750:	cmp	r3, #6
   2c754:	bne	2c790 <flatcc_builder_truncate_string@@Base+0x54>
   2c758:	ldr	r3, [r1, #20]
   2c75c:	cmp	r3, r2
   2c760:	bcc	2c7b0 <flatcc_builder_truncate_string@@Base+0x74>
   2c764:	sub	r3, r3, r2
   2c768:	str	r3, [r1, #20]
   2c76c:	ldr	r3, [r0, #20]
   2c770:	ldr	r1, [r0, #16]
   2c774:	sub	r3, r3, r2
   2c778:	str	r3, [r0, #20]
   2c77c:	add	r0, r1, r3
   2c780:	mov	r1, #0
   2c784:	bl	12b64 <memset@plt>
   2c788:	mov	r0, #0
   2c78c:	pop	{fp, pc}
   2c790:	movw	r0, #21587	; 0x5453
   2c794:	movw	r1, #20270	; 0x4f2e
   2c798:	movw	r3, #21999	; 0x55ef
   2c79c:	movw	r2, #1003	; 0x3eb
   2c7a0:	movt	r0, #3
   2c7a4:	movt	r1, #3
   2c7a8:	movt	r3, #3
   2c7ac:	bl	12bc4 <__assert_fail@plt>
   2c7b0:	movw	r0, #22062	; 0x562e
   2c7b4:	movw	r1, #20270	; 0x4f2e
   2c7b8:	movw	r3, #21999	; 0x55ef
   2c7bc:	mov	r2, #1004	; 0x3ec
   2c7c0:	movt	r0, #3
   2c7c4:	movt	r1, #3
   2c7c8:	movt	r3, #3
   2c7cc:	bl	12bc4 <__assert_fail@plt>

0002c7d0 <flatcc_builder_start_vector@@Base>:
   2c7d0:	push	{r4, r5, r6, r7, fp, lr}
   2c7d4:	add	fp, sp, #16
   2c7d8:	mov	r7, #4
   2c7dc:	cmp	r2, #4
   2c7e0:	mov	r6, r1
   2c7e4:	mov	r5, r3
   2c7e8:	mov	r4, r0
   2c7ec:	movls	r2, r7
   2c7f0:	mov	r1, r2
   2c7f4:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2c7f8:	mov	r1, r0
   2c7fc:	mvn	r0, #0
   2c800:	cmp	r1, #0
   2c804:	popne	{r4, r5, r6, r7, fp, pc}
   2c808:	ldr	r0, [r4, #32]
   2c80c:	str	r6, [r0, #16]
   2c810:	mov	r0, #0
   2c814:	ldr	r1, [r4, #32]
   2c818:	str	r0, [r1, #20]
   2c81c:	ldr	r1, [r4, #32]
   2c820:	str	r5, [r1, #24]
   2c824:	ldr	r1, [r4, #32]
   2c828:	strh	r7, [r1, #14]
   2c82c:	ldr	r2, [r4, #28]
   2c830:	ldr	r3, [r4, #60]	; 0x3c
   2c834:	ldr	r7, [r4, #64]	; 0x40
   2c838:	add	r3, r3, r2
   2c83c:	sub	r2, r7, r2
   2c840:	str	r3, [r4, #16]
   2c844:	mvn	r3, #3
   2c848:	cmn	r2, #4
   2c84c:	movcs	r2, r3
   2c850:	str	r2, [r4, #24]
   2c854:	str	r3, [r1, #4]
   2c858:	pop	{r4, r5, r6, r7, fp, pc}

0002c85c <flatcc_builder_start_offset_vector@@Base>:
   2c85c:	push	{r4, r5, fp, lr}
   2c860:	add	fp, sp, #8
   2c864:	mov	r1, #4
   2c868:	mov	r4, r0
   2c86c:	mov	r5, #4
   2c870:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2c874:	mov	r1, r0
   2c878:	mvn	r0, #0
   2c87c:	cmp	r1, #0
   2c880:	popne	{r4, r5, fp, pc}
   2c884:	ldr	r0, [r4, #32]
   2c888:	mov	r2, #5
   2c88c:	str	r5, [r0, #16]
   2c890:	mov	r0, #0
   2c894:	ldr	r1, [r4, #32]
   2c898:	str	r0, [r1, #20]
   2c89c:	ldr	r1, [r4, #32]
   2c8a0:	strh	r2, [r1, #14]
   2c8a4:	ldr	r2, [r4, #28]
   2c8a8:	ldr	r3, [r4, #60]	; 0x3c
   2c8ac:	ldr	r5, [r4, #64]	; 0x40
   2c8b0:	add	r3, r3, r2
   2c8b4:	sub	r2, r5, r2
   2c8b8:	str	r3, [r4, #16]
   2c8bc:	mvn	r3, #3
   2c8c0:	cmn	r2, #4
   2c8c4:	movcs	r2, r3
   2c8c8:	str	r2, [r4, #24]
   2c8cc:	str	r3, [r1, #4]
   2c8d0:	pop	{r4, r5, fp, pc}

0002c8d4 <flatcc_builder_create_offset_vector@@Base>:
   2c8d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c8d8:	add	fp, sp, #24
   2c8dc:	sub	sp, sp, #8
   2c8e0:	mov	r8, r1
   2c8e4:	mov	r1, #4
   2c8e8:	mov	r6, r2
   2c8ec:	mov	r4, r0
   2c8f0:	mov	r5, #4
   2c8f4:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2c8f8:	mov	r7, #0
   2c8fc:	cmp	r0, #0
   2c900:	beq	2c910 <flatcc_builder_create_offset_vector@@Base+0x3c>
   2c904:	mov	r0, r7
   2c908:	sub	sp, fp, #24
   2c90c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c910:	ldr	r0, [r4, #32]
   2c914:	mov	r1, #0
   2c918:	str	r5, [r0, #16]
   2c91c:	ldr	r0, [r4, #32]
   2c920:	str	r1, [r0, #20]
   2c924:	mov	r1, #5
   2c928:	ldr	r0, [r4, #32]
   2c92c:	strh	r1, [r0, #14]
   2c930:	ldr	r1, [r4, #28]
   2c934:	ldr	r2, [r4, #60]	; 0x3c
   2c938:	ldr	r3, [r4, #64]	; 0x40
   2c93c:	add	r2, r2, r1
   2c940:	sub	r1, r3, r1
   2c944:	str	r2, [r4, #16]
   2c948:	mvn	r2, #3
   2c94c:	cmn	r1, #4
   2c950:	movcs	r1, r2
   2c954:	str	r1, [r4, #24]
   2c958:	str	r2, [r0, #4]
   2c95c:	ldr	r1, [r0, #20]
   2c960:	adds	r1, r1, r6
   2c964:	cmpcc	r1, #1073741824	; 0x40000000
   2c968:	bcc	2c98c <flatcc_builder_create_offset_vector@@Base+0xb8>
   2c96c:	movw	r0, #24541	; 0x5fdd
   2c970:	movw	r1, #20270	; 0x4f2e
   2c974:	movw	r3, #24568	; 0x5ff8
   2c978:	mov	r2, #892	; 0x37c
   2c97c:	movt	r0, #3
   2c980:	movt	r1, #3
   2c984:	movt	r3, #3
   2c988:	bl	12bc4 <__assert_fail@plt>
   2c98c:	str	r1, [r0, #20]
   2c990:	ldr	r5, [r4, #20]
   2c994:	ldr	r0, [r4, #24]
   2c998:	add	r1, r5, r6, lsl #2
   2c99c:	cmp	r1, r0
   2c9a0:	str	r1, [r4, #20]
   2c9a4:	bcs	2ca78 <flatcc_builder_create_offset_vector@@Base+0x1a4>
   2c9a8:	ldr	r0, [r4, #16]
   2c9ac:	adds	r0, r0, r5
   2c9b0:	beq	2cae4 <flatcc_builder_create_offset_vector@@Base+0x210>
   2c9b4:	lsl	r2, r6, #2
   2c9b8:	mov	r1, r8
   2c9bc:	bl	12ab0 <memcpy@plt>
   2c9c0:	ldr	r0, [r4, #32]
   2c9c4:	ldrh	r1, [r0, #14]
   2c9c8:	cmp	r1, #5
   2c9cc:	bne	2caf4 <flatcc_builder_create_offset_vector@@Base+0x220>
   2c9d0:	ldr	r2, [r0, #20]
   2c9d4:	ldr	r1, [r4, #16]
   2c9d8:	mov	r0, r4
   2c9dc:	mov	r3, #0
   2c9e0:	mov	r7, #0
   2c9e4:	bl	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2c9e8:	cmp	r0, #0
   2c9ec:	beq	2c904 <flatcc_builder_create_offset_vector@@Base+0x30>
   2c9f0:	mov	r5, r0
   2c9f4:	ldr	r0, [r4, #16]
   2c9f8:	ldr	r2, [r4, #20]
   2c9fc:	mov	r1, #0
   2ca00:	bl	12b64 <memset@plt>
   2ca04:	ldr	r0, [r4, #32]
   2ca08:	ldr	r1, [r4, #60]	; 0x3c
   2ca0c:	ldr	r2, [r4, #64]	; 0x40
   2ca10:	ldr	r3, [r0, #8]
   2ca14:	str	r3, [r4, #20]
   2ca18:	ldr	r3, [r0]
   2ca1c:	str	r3, [r4, #28]
   2ca20:	add	r1, r1, r3
   2ca24:	ldr	r7, [r0, #4]
   2ca28:	str	r1, [r4, #16]
   2ca2c:	sub	r1, r2, r3
   2ca30:	cmp	r1, r7
   2ca34:	movhi	r1, r7
   2ca38:	mov	r7, r5
   2ca3c:	str	r1, [r4, #24]
   2ca40:	ldrh	r1, [r4, #130]	; 0x82
   2ca44:	ldrh	r2, [r4, #128]	; 0x80
   2ca48:	cmp	r2, r1
   2ca4c:	strhcc	r1, [r4, #128]	; 0x80
   2ca50:	ldrh	r1, [r0, #12]
   2ca54:	sub	r0, r0, #36	; 0x24
   2ca58:	str	r0, [r4, #32]
   2ca5c:	strh	r1, [r4, #130]	; 0x82
   2ca60:	ldr	r0, [r4, #156]	; 0x9c
   2ca64:	sub	r0, r0, #1
   2ca68:	str	r0, [r4, #156]	; 0x9c
   2ca6c:	mov	r0, r7
   2ca70:	sub	sp, fp, #24
   2ca74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ca78:	ldr	r2, [r4, #28]
   2ca7c:	ldr	r0, [r4, #40]	; 0x28
   2ca80:	ldr	r7, [r4, #48]	; 0x30
   2ca84:	mov	r3, #1
   2ca88:	str	r3, [sp]
   2ca8c:	mov	r3, #1
   2ca90:	add	r1, r1, r2
   2ca94:	add	r2, r1, #1
   2ca98:	add	r1, r4, #60	; 0x3c
   2ca9c:	blx	r7
   2caa0:	mov	r7, #0
   2caa4:	cmp	r0, #0
   2caa8:	bne	2c904 <flatcc_builder_create_offset_vector@@Base+0x30>
   2caac:	ldr	r1, [r4, #28]
   2cab0:	ldr	r0, [r4, #60]	; 0x3c
   2cab4:	ldr	r3, [r4, #64]	; 0x40
   2cab8:	ldr	r2, [r4, #32]
   2cabc:	add	r0, r0, r1
   2cac0:	sub	r1, r3, r1
   2cac4:	mvn	r3, #3
   2cac8:	cmn	r1, #4
   2cacc:	str	r0, [r4, #16]
   2cad0:	movcs	r1, r3
   2cad4:	str	r1, [r4, #24]
   2cad8:	str	r3, [r2, #4]
   2cadc:	adds	r0, r0, r5
   2cae0:	bne	2c9b4 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2cae4:	mov	r7, #0
   2cae8:	mov	r0, r7
   2caec:	sub	sp, fp, #24
   2caf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2caf4:	movw	r0, #21322	; 0x534a
   2caf8:	movw	r1, #20270	; 0x4f2e
   2cafc:	movw	r3, #22905	; 0x5979
   2cb00:	movw	r2, #1480	; 0x5c8
   2cb04:	movt	r0, #3
   2cb08:	movt	r1, #3
   2cb0c:	movt	r3, #3
   2cb10:	bl	12bc4 <__assert_fail@plt>

0002cb14 <flatcc_builder_end_offset_vector@@Base>:
   2cb14:	push	{r4, r5, fp, lr}
   2cb18:	add	fp, sp, #8
   2cb1c:	mov	r4, r0
   2cb20:	ldr	r0, [r0, #32]
   2cb24:	ldrh	r1, [r0, #14]
   2cb28:	cmp	r1, #5
   2cb2c:	bne	2cbcc <flatcc_builder_end_offset_vector@@Base+0xb8>
   2cb30:	ldr	r2, [r0, #20]
   2cb34:	ldr	r1, [r4, #16]
   2cb38:	mov	r0, r4
   2cb3c:	mov	r3, #0
   2cb40:	bl	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2cb44:	mov	r5, r0
   2cb48:	cmp	r0, #0
   2cb4c:	beq	2cbc4 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2cb50:	ldr	r0, [r4, #16]
   2cb54:	ldr	r2, [r4, #20]
   2cb58:	mov	r1, #0
   2cb5c:	bl	12b64 <memset@plt>
   2cb60:	ldr	r0, [r4, #32]
   2cb64:	ldr	r1, [r4, #60]	; 0x3c
   2cb68:	ldr	ip, [r4, #64]	; 0x40
   2cb6c:	ldr	r3, [r0, #8]
   2cb70:	str	r3, [r4, #20]
   2cb74:	ldr	r3, [r0]
   2cb78:	str	r3, [r4, #28]
   2cb7c:	add	r1, r1, r3
   2cb80:	ldr	r2, [r0, #4]
   2cb84:	str	r1, [r4, #16]
   2cb88:	sub	r1, ip, r3
   2cb8c:	cmp	r1, r2
   2cb90:	movhi	r1, r2
   2cb94:	str	r1, [r4, #24]
   2cb98:	ldrh	r1, [r4, #130]	; 0x82
   2cb9c:	ldrh	r2, [r4, #128]	; 0x80
   2cba0:	cmp	r2, r1
   2cba4:	strhcc	r1, [r4, #128]	; 0x80
   2cba8:	ldrh	r1, [r0, #12]
   2cbac:	sub	r0, r0, #36	; 0x24
   2cbb0:	str	r0, [r4, #32]
   2cbb4:	strh	r1, [r4, #130]	; 0x82
   2cbb8:	ldr	r0, [r4, #156]	; 0x9c
   2cbbc:	sub	r0, r0, #1
   2cbc0:	str	r0, [r4, #156]	; 0x9c
   2cbc4:	mov	r0, r5
   2cbc8:	pop	{r4, r5, fp, pc}
   2cbcc:	movw	r0, #21322	; 0x534a
   2cbd0:	movw	r1, #20270	; 0x4f2e
   2cbd4:	movw	r3, #22905	; 0x5979
   2cbd8:	movw	r2, #1480	; 0x5c8
   2cbdc:	movt	r0, #3
   2cbe0:	movt	r1, #3
   2cbe4:	movt	r3, #3
   2cbe8:	bl	12bc4 <__assert_fail@plt>

0002cbec <flatcc_builder_start_string@@Base>:
   2cbec:	push	{r4, r5, fp, lr}
   2cbf0:	add	fp, sp, #8
   2cbf4:	mov	r1, #1
   2cbf8:	mov	r4, r0
   2cbfc:	mov	r5, #1
   2cc00:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2cc04:	mov	r1, r0
   2cc08:	mvn	r0, #0
   2cc0c:	cmp	r1, #0
   2cc10:	popne	{r4, r5, fp, pc}
   2cc14:	ldr	r0, [r4, #32]
   2cc18:	mov	r2, #6
   2cc1c:	str	r5, [r0, #16]
   2cc20:	mov	r0, #0
   2cc24:	ldr	r1, [r4, #32]
   2cc28:	str	r0, [r1, #20]
   2cc2c:	ldr	r1, [r4, #32]
   2cc30:	strh	r2, [r1, #14]
   2cc34:	ldr	r2, [r4, #28]
   2cc38:	ldr	r3, [r4, #60]	; 0x3c
   2cc3c:	ldr	r5, [r4, #64]	; 0x40
   2cc40:	add	r3, r3, r2
   2cc44:	sub	r2, r5, r2
   2cc48:	str	r3, [r4, #16]
   2cc4c:	mvn	r3, #3
   2cc50:	cmn	r2, #4
   2cc54:	movcs	r2, r3
   2cc58:	str	r2, [r4, #24]
   2cc5c:	str	r3, [r1, #4]
   2cc60:	pop	{r4, r5, fp, pc}

0002cc64 <flatcc_builder_reserve_table@@Base>:
   2cc64:	push	{r4, r5, r6, sl, fp, lr}
   2cc68:	add	fp, sp, #16
   2cc6c:	sub	sp, sp, #8
   2cc70:	cmn	r1, #1
   2cc74:	ble	2cd4c <flatcc_builder_reserve_table@@Base+0xe8>
   2cc78:	mov	r4, r0
   2cc7c:	ldr	r0, [r0, #32]
   2cc80:	mov	r5, r1
   2cc84:	ldr	r1, [r4, #56]	; 0x38
   2cc88:	ldrh	r2, [r0, #28]
   2cc8c:	ldr	r0, [r0, #16]
   2cc90:	add	r6, r0, r2, lsl #1
   2cc94:	add	r0, r6, r5, lsl #1
   2cc98:	add	r2, r0, #4
   2cc9c:	cmp	r2, r1
   2cca0:	bls	2ccc8 <flatcc_builder_reserve_table@@Base+0x64>
   2cca4:	ldr	r0, [r4, #40]	; 0x28
   2cca8:	ldr	ip, [r4, #48]	; 0x30
   2ccac:	mov	r3, #0
   2ccb0:	add	r1, r4, #52	; 0x34
   2ccb4:	str	r3, [sp]
   2ccb8:	mov	r3, #1
   2ccbc:	blx	ip
   2ccc0:	cmp	r0, #0
   2ccc4:	bne	2cd6c <flatcc_builder_reserve_table@@Base+0x108>
   2ccc8:	ldr	r0, [r4, #52]	; 0x34
   2cccc:	adds	r0, r0, r6
   2ccd0:	str	r0, [r4, #4]
   2ccd4:	beq	2cd40 <flatcc_builder_reserve_table@@Base+0xdc>
   2ccd8:	add	r0, r0, #4
   2ccdc:	lsl	r1, r5, #1
   2cce0:	str	r0, [r4, #4]
   2cce4:	ldr	r0, [r4, #32]
   2cce8:	ldr	r3, [r4, #80]	; 0x50
   2ccec:	ldr	r5, [r0, #20]
   2ccf0:	orr	r0, r1, #1
   2ccf4:	add	r2, r5, r0
   2ccf8:	cmp	r2, r3
   2ccfc:	bls	2cd24 <flatcc_builder_reserve_table@@Base+0xc0>
   2cd00:	ldr	r0, [r4, #40]	; 0x28
   2cd04:	ldr	r6, [r4, #48]	; 0x30
   2cd08:	mov	r3, #3
   2cd0c:	add	r1, r4, #76	; 0x4c
   2cd10:	str	r3, [sp]
   2cd14:	mov	r3, #0
   2cd18:	blx	r6
   2cd1c:	cmp	r0, #0
   2cd20:	bne	2cd6c <flatcc_builder_reserve_table@@Base+0x108>
   2cd24:	ldr	r0, [r4, #76]	; 0x4c
   2cd28:	adds	r0, r0, r5
   2cd2c:	str	r0, [r4]
   2cd30:	mov	r0, #0
   2cd34:	mvneq	r0, #0
   2cd38:	sub	sp, fp, #16
   2cd3c:	pop	{r4, r5, r6, sl, fp, pc}
   2cd40:	mvn	r0, #0
   2cd44:	sub	sp, fp, #16
   2cd48:	pop	{r4, r5, r6, sl, fp, pc}
   2cd4c:	movw	r0, #22161	; 0x5691
   2cd50:	movw	r1, #20270	; 0x4f2e
   2cd54:	movw	r3, #22096	; 0x5650
   2cd58:	movw	r2, #1065	; 0x429
   2cd5c:	movt	r0, #3
   2cd60:	movt	r1, #3
   2cd64:	movt	r3, #3
   2cd68:	bl	12bc4 <__assert_fail@plt>
   2cd6c:	movw	r0, #24788	; 0x60d4
   2cd70:	movw	r1, #20270	; 0x4f2e
   2cd74:	movw	r3, #24334	; 0x5f0e
   2cd78:	mov	r2, #308	; 0x134
   2cd7c:	movt	r0, #3
   2cd80:	movt	r1, #3
   2cd84:	movt	r3, #3
   2cd88:	bl	12bc4 <__assert_fail@plt>

0002cd8c <flatcc_builder_start_table@@Base>:
   2cd8c:	push	{r4, r5, r6, r7, fp, lr}
   2cd90:	add	fp, sp, #16
   2cd94:	sub	sp, sp, #8
   2cd98:	mov	r6, r1
   2cd9c:	mov	r1, #4
   2cda0:	mov	r4, r0
   2cda4:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2cda8:	mvn	r5, #0
   2cdac:	cmp	r0, #0
   2cdb0:	beq	2cdc0 <flatcc_builder_start_table@@Base+0x34>
   2cdb4:	mov	r0, r5
   2cdb8:	sub	sp, fp, #16
   2cdbc:	pop	{r4, r5, r6, r7, fp, pc}
   2cdc0:	mov	r1, r4
   2cdc4:	ldr	r2, [r4, #4]
   2cdc8:	ldr	r3, [r4, #32]
   2cdcc:	ldr	r0, [r1, #52]!	; 0x34
   2cdd0:	sub	r0, r2, r0
   2cdd4:	str	r0, [r3, #16]
   2cdd8:	ldr	r0, [r4]
   2cddc:	ldr	r3, [r4, #76]	; 0x4c
   2cde0:	ldr	r2, [r4, #32]
   2cde4:	sub	r0, r0, r3
   2cde8:	mov	r3, #0
   2cdec:	str	r0, [r2, #20]
   2cdf0:	ldr	r0, [r4, #12]
   2cdf4:	ldr	r2, [r4, #32]
   2cdf8:	str	r0, [r2, #24]
   2cdfc:	ldr	r0, [r4, #32]
   2ce00:	ldrh	r2, [r4, #8]
   2ce04:	strh	r2, [r0, #28]
   2ce08:	movw	r0, #15186	; 0x3b52
   2ce0c:	strh	r3, [r4, #8]
   2ce10:	mov	r2, #3
   2ce14:	movt	r0, #12137	; 0x2f69
   2ce18:	str	r0, [r4, #12]
   2ce1c:	ldr	r0, [r4, #32]
   2ce20:	strh	r2, [r0, #14]
   2ce24:	ldrh	r2, [r0, #28]
   2ce28:	ldr	r0, [r0, #16]
   2ce2c:	add	r7, r0, r2, lsl #1
   2ce30:	add	r0, r7, r6, lsl #1
   2ce34:	add	r2, r0, #4
   2ce38:	ldr	r0, [r4, #56]	; 0x38
   2ce3c:	cmp	r2, r0
   2ce40:	bls	2ce60 <flatcc_builder_start_table@@Base+0xd4>
   2ce44:	ldr	r0, [r4, #40]	; 0x28
   2ce48:	ldr	ip, [r4, #48]	; 0x30
   2ce4c:	str	r3, [sp]
   2ce50:	mov	r3, #1
   2ce54:	blx	ip
   2ce58:	cmp	r0, #0
   2ce5c:	bne	2cf0c <flatcc_builder_start_table@@Base+0x180>
   2ce60:	ldr	r0, [r4, #52]	; 0x34
   2ce64:	adds	r0, r0, r7
   2ce68:	str	r0, [r4, #4]
   2ce6c:	beq	2cdb4 <flatcc_builder_start_table@@Base+0x28>
   2ce70:	add	r0, r0, #4
   2ce74:	lsl	r1, r6, #1
   2ce78:	str	r0, [r4, #4]
   2ce7c:	ldr	r0, [r4, #32]
   2ce80:	ldr	r3, [r4, #80]	; 0x50
   2ce84:	ldr	r6, [r0, #20]
   2ce88:	orr	r0, r1, #1
   2ce8c:	add	r2, r6, r0
   2ce90:	cmp	r2, r3
   2ce94:	bls	2cebc <flatcc_builder_start_table@@Base+0x130>
   2ce98:	ldr	r0, [r4, #40]	; 0x28
   2ce9c:	ldr	r7, [r4, #48]	; 0x30
   2cea0:	mov	r3, #3
   2cea4:	add	r1, r4, #76	; 0x4c
   2cea8:	str	r3, [sp]
   2ceac:	mov	r3, #0
   2ceb0:	blx	r7
   2ceb4:	cmp	r0, #0
   2ceb8:	bne	2cf0c <flatcc_builder_start_table@@Base+0x180>
   2cebc:	ldr	r0, [r4, #76]	; 0x4c
   2cec0:	adds	r0, r0, r6
   2cec4:	str	r0, [r4]
   2cec8:	beq	2cdb4 <flatcc_builder_start_table@@Base+0x28>
   2cecc:	ldr	r0, [r4, #28]
   2ced0:	ldr	r2, [r4, #60]	; 0x3c
   2ced4:	ldr	r3, [r4, #64]	; 0x40
   2ced8:	ldr	r1, [r4, #32]
   2cedc:	mov	r5, #0
   2cee0:	add	r2, r2, r0
   2cee4:	sub	r0, r3, r0
   2cee8:	str	r2, [r4, #16]
   2ceec:	movw	r2, #65532	; 0xfffc
   2cef0:	cmp	r0, r2
   2cef4:	movcs	r0, r2
   2cef8:	str	r0, [r4, #24]
   2cefc:	str	r2, [r1, #4]
   2cf00:	mov	r0, r5
   2cf04:	sub	sp, fp, #16
   2cf08:	pop	{r4, r5, r6, r7, fp, pc}
   2cf0c:	movw	r0, #24788	; 0x60d4
   2cf10:	movw	r1, #20270	; 0x4f2e
   2cf14:	movw	r3, #24334	; 0x5f0e
   2cf18:	mov	r2, #308	; 0x134
   2cf1c:	movt	r0, #3
   2cf20:	movt	r1, #3
   2cf24:	movt	r3, #3
   2cf28:	bl	12bc4 <__assert_fail@plt>

0002cf2c <flatcc_builder_create_vtable@@Base>:
   2cf2c:	push	{r4, r5, fp, lr}
   2cf30:	add	fp, sp, #8
   2cf34:	sub	sp, sp, #80	; 0x50
   2cf38:	mov	r3, r2
   2cf3c:	mov	r2, #0
   2cf40:	mov	r4, r0
   2cf44:	cmp	r3, #0
   2cf48:	str	r2, [sp, #12]
   2cf4c:	str	r2, [sp, #8]
   2cf50:	movne	r2, #1
   2cf54:	strne	r3, [sp, #20]
   2cf58:	strne	r1, [sp, #16]
   2cf5c:	strne	r3, [sp, #8]
   2cf60:	strne	r2, [sp, #12]
   2cf64:	ldr	r0, [r4, #152]	; 0x98
   2cf68:	cmp	r0, #0
   2cf6c:	bne	2cf7c <flatcc_builder_create_vtable@@Base+0x50>
   2cf70:	ldr	r0, [r4, #180]	; 0xb4
   2cf74:	cmp	r0, #0
   2cf78:	beq	2cfd8 <flatcc_builder_create_vtable@@Base+0xac>
   2cf7c:	cmp	r3, #0
   2cf80:	beq	2d01c <flatcc_builder_create_vtable@@Base+0xf0>
   2cf84:	ldr	r0, [r4, #136]	; 0x88
   2cf88:	ldr	ip, [r4, #44]	; 0x2c
   2cf8c:	add	r1, sp, #8
   2cf90:	add	r1, r1, #8
   2cf94:	sub	r5, r0, r3
   2cf98:	ldr	r0, [r4, #36]	; 0x24
   2cf9c:	str	r3, [sp]
   2cfa0:	mov	r3, r5
   2cfa4:	blx	ip
   2cfa8:	cmp	r0, #0
   2cfac:	bne	2d03c <flatcc_builder_create_vtable@@Base+0x110>
   2cfb0:	cmp	r5, #0
   2cfb4:	str	r5, [r4, #136]	; 0x88
   2cfb8:	beq	2cfcc <flatcc_builder_create_vtable@@Base+0xa0>
   2cfbc:	add	r1, r5, #1
   2cfc0:	mov	r0, r1
   2cfc4:	sub	sp, fp, #8
   2cfc8:	pop	{r4, r5, fp, pc}
   2cfcc:	mov	r0, #0
   2cfd0:	sub	sp, fp, #8
   2cfd4:	pop	{r4, r5, fp, pc}
   2cfd8:	ldr	r5, [r4, #140]	; 0x8c
   2cfdc:	ldr	r0, [r4, #36]	; 0x24
   2cfe0:	ldr	ip, [r4, #44]	; 0x2c
   2cfe4:	add	r1, r5, r3
   2cfe8:	str	r1, [r4, #140]	; 0x8c
   2cfec:	add	r1, sp, #8
   2cff0:	str	r3, [sp]
   2cff4:	mov	r3, r5
   2cff8:	add	r1, r1, #8
   2cffc:	blx	ip
   2d000:	cmp	r0, #0
   2d004:	bne	2d05c <flatcc_builder_create_vtable@@Base+0x130>
   2d008:	adds	r1, r5, #1
   2d00c:	mov	r0, #0
   2d010:	movcc	r0, r1
   2d014:	sub	sp, fp, #8
   2d018:	pop	{r4, r5, fp, pc}
   2d01c:	movw	r0, #24788	; 0x60d4
   2d020:	movw	r1, #20270	; 0x4f2e
   2d024:	movw	r3, #24467	; 0x5f93
   2d028:	movw	r2, #647	; 0x287
   2d02c:	movt	r0, #3
   2d030:	movt	r1, #3
   2d034:	movt	r3, #3
   2d038:	bl	12bc4 <__assert_fail@plt>
   2d03c:	movw	r0, #24788	; 0x60d4
   2d040:	movw	r1, #20270	; 0x4f2e
   2d044:	movw	r3, #24467	; 0x5f93
   2d048:	movw	r2, #651	; 0x28b
   2d04c:	movt	r0, #3
   2d050:	movt	r1, #3
   2d054:	movt	r3, #3
   2d058:	bl	12bc4 <__assert_fail@plt>
   2d05c:	movw	r0, #24788	; 0x60d4
   2d060:	movw	r1, #20270	; 0x4f2e
   2d064:	movw	r3, #24655	; 0x604f
   2d068:	movw	r2, #677	; 0x2a5
   2d06c:	movt	r0, #3
   2d070:	movt	r1, #3
   2d074:	movt	r3, #3
   2d078:	bl	12bc4 <__assert_fail@plt>

0002d07c <flatcc_builder_create_cached_vtable@@Base>:
   2d07c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d080:	add	fp, sp, #28
   2d084:	sub	sp, sp, #20
   2d088:	mov	sl, r0
   2d08c:	ldr	r0, [r0, #116]	; 0x74
   2d090:	mov	r8, r3
   2d094:	mov	r5, r2
   2d098:	str	r1, [sp, #16]
   2d09c:	cmp	r0, #0
   2d0a0:	beq	2d144 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2d0a4:	ldr	r1, [sl, #92]	; 0x5c
   2d0a8:	rsb	r0, r0, #32
   2d0ac:	lsr	r0, r8, r0
   2d0b0:	add	r6, r1, r0, lsl #2
   2d0b4:	cmp	r6, #0
   2d0b8:	beq	2d208 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2d0bc:	ldr	r7, [r6]
   2d0c0:	str	r6, [sp, #12]
   2d0c4:	cmp	r7, #0
   2d0c8:	beq	2d218 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   2d0cc:	ldr	r4, [sl, #68]	; 0x44
   2d0d0:	ldr	r8, [sl, #100]	; 0x64
   2d0d4:	mov	r0, #0
   2d0d8:	str	r0, [sp, #8]
   2d0dc:	b	2d0f0 <flatcc_builder_create_cached_vtable@@Base+0x74>
   2d0e0:	ldr	r7, [r9, #12]!
   2d0e4:	mov	r6, r9
   2d0e8:	cmp	r7, #0
   2d0ec:	beq	2d200 <flatcc_builder_create_cached_vtable@@Base+0x184>
   2d0f0:	add	r9, r8, r7
   2d0f4:	mov	r1, r4
   2d0f8:	ldr	r0, [r9, #8]
   2d0fc:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2d100:	cmp	r0, r5
   2d104:	bne	2d0e0 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2d108:	ldr	r0, [sp, #16]
   2d10c:	mov	r2, r5
   2d110:	bl	12b34 <bcmp@plt>
   2d114:	cmp	r0, #0
   2d118:	bne	2d0e0 <flatcc_builder_create_cached_vtable@@Base+0x64>
   2d11c:	ldr	r0, [sl, #152]	; 0x98
   2d120:	ldr	r1, [r9, #4]
   2d124:	cmp	r1, r0
   2d128:	beq	2d384 <flatcc_builder_create_cached_vtable@@Base+0x308>
   2d12c:	mov	r6, r9
   2d130:	mov	r0, r9
   2d134:	ldr	r7, [r6, #12]!
   2d138:	cmp	r7, #0
   2d13c:	bne	2d0d8 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2d140:	b	2d21c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   2d144:	ldr	r0, [sl, #124]	; 0x7c
   2d148:	cmp	r0, #0
   2d14c:	bne	2d3d8 <flatcc_builder_create_cached_vtable@@Base+0x35c>
   2d150:	ldr	r0, [sl, #104]	; 0x68
   2d154:	add	r7, sl, #100	; 0x64
   2d158:	cmp	r0, #15
   2d15c:	bhi	2d188 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2d160:	ldr	r0, [sl, #40]	; 0x28
   2d164:	ldr	r6, [sl, #48]	; 0x30
   2d168:	mov	r1, #6
   2d16c:	mov	r2, #16
   2d170:	mov	r3, #0
   2d174:	str	r1, [sp]
   2d178:	mov	r1, r7
   2d17c:	blx	r6
   2d180:	cmp	r0, #0
   2d184:	bne	2d3b8 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2d188:	ldr	r0, [r7]
   2d18c:	mov	r7, #0
   2d190:	cmp	r0, #0
   2d194:	beq	2d2bc <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d198:	mov	r0, #16
   2d19c:	mov	r2, #5
   2d1a0:	add	r1, sl, #92	; 0x5c
   2d1a4:	mov	r3, #1
   2d1a8:	mov	r4, #256	; 0x100
   2d1ac:	str	r0, [sl, #124]	; 0x7c
   2d1b0:	ldr	r0, [sl, #40]	; 0x28
   2d1b4:	ldr	r6, [sl, #48]	; 0x30
   2d1b8:	str	r2, [sp]
   2d1bc:	mov	r2, #256	; 0x100
   2d1c0:	blx	r6
   2d1c4:	cmp	r0, #0
   2d1c8:	bne	2d2bc <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d1cc:	ldr	r0, [sl, #96]	; 0x60
   2d1d0:	mov	r1, r4
   2d1d4:	lsl	r4, r4, #1
   2d1d8:	cmp	r0, r1, lsl #1
   2d1dc:	bcs	2d1d0 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2d1e0:	lsr	r1, r1, #2
   2d1e4:	mvn	r0, #0
   2d1e8:	mov	r2, #1
   2d1ec:	add	r0, r0, #1
   2d1f0:	cmp	r1, r2, lsl r0
   2d1f4:	bhi	2d1ec <flatcc_builder_create_cached_vtable@@Base+0x170>
   2d1f8:	str	r0, [sl, #116]	; 0x74
   2d1fc:	b	2d0a4 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2d200:	ldr	r9, [sp, #8]
   2d204:	b	2d21c <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   2d208:	mov	r7, #0
   2d20c:	mov	r0, r7
   2d210:	sub	sp, fp, #28
   2d214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d218:	mov	r9, #0
   2d21c:	ldr	r4, [sl, #124]	; 0x7c
   2d220:	ldr	r0, [sl, #104]	; 0x68
   2d224:	add	r7, sl, #100	; 0x64
   2d228:	add	r2, r4, #16
   2d22c:	cmp	r2, r0
   2d230:	bls	2d258 <flatcc_builder_create_cached_vtable@@Base+0x1dc>
   2d234:	ldr	r0, [sl, #40]	; 0x28
   2d238:	ldr	r6, [sl, #48]	; 0x30
   2d23c:	mov	r1, #6
   2d240:	mov	r3, #0
   2d244:	str	r1, [sp]
   2d248:	mov	r1, r7
   2d24c:	blx	r6
   2d250:	cmp	r0, #0
   2d254:	bne	2d3b8 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2d258:	ldr	r0, [r7]
   2d25c:	mov	r7, #0
   2d260:	adds	r4, r0, r4
   2d264:	beq	2d2bc <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d268:	ldr	r0, [sl, #124]	; 0x7c
   2d26c:	ldr	r1, [sl, #152]	; 0x98
   2d270:	add	r2, r0, #16
   2d274:	str	r2, [sl, #124]	; 0x7c
   2d278:	ldr	r2, [sp, #12]
   2d27c:	str	r1, [r4, #4]
   2d280:	ldr	r1, [r2]
   2d284:	str	r1, [r4, #12]
   2d288:	ldr	r1, [sp, #16]
   2d28c:	str	r0, [r2]
   2d290:	mov	r0, sl
   2d294:	mov	r2, r5
   2d298:	bl	2cf2c <flatcc_builder_create_vtable@@Base>
   2d29c:	cmp	r0, #0
   2d2a0:	str	r0, [r4]
   2d2a4:	beq	2d2bc <flatcc_builder_create_cached_vtable@@Base+0x240>
   2d2a8:	cmp	r9, #0
   2d2ac:	beq	2d2c8 <flatcc_builder_create_cached_vtable@@Base+0x24c>
   2d2b0:	ldr	r0, [r9, #8]
   2d2b4:	str	r0, [r4, #8]
   2d2b8:	ldr	r7, [r4]
   2d2bc:	mov	r0, r7
   2d2c0:	sub	sp, fp, #28
   2d2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d2c8:	ldr	r6, [sl, #120]	; 0x78
   2d2cc:	ldr	r0, [sl, #172]	; 0xac
   2d2d0:	add	r2, r6, r5
   2d2d4:	cmp	r0, #0
   2d2d8:	beq	2d314 <flatcc_builder_create_cached_vtable@@Base+0x298>
   2d2dc:	cmp	r0, r2
   2d2e0:	bcs	2d314 <flatcc_builder_create_cached_vtable@@Base+0x298>
   2d2e4:	ldr	r0, [sl, #116]	; 0x74
   2d2e8:	cmp	r0, #0
   2d2ec:	beq	2d2b8 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2d2f0:	ldr	r0, [sl, #92]	; 0x5c
   2d2f4:	ldr	r2, [sl, #96]	; 0x60
   2d2f8:	mov	r1, #0
   2d2fc:	mov	r5, #0
   2d300:	bl	12b64 <memset@plt>
   2d304:	mov	r0, #16
   2d308:	str	r5, [sl, #120]	; 0x78
   2d30c:	str	r0, [sl, #124]	; 0x7c
   2d310:	b	2d2b8 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2d314:	ldr	r0, [sl, #72]	; 0x48
   2d318:	add	r7, sl, #68	; 0x44
   2d31c:	cmp	r2, r0
   2d320:	bls	2d348 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   2d324:	ldr	r0, [sl, #40]	; 0x28
   2d328:	ldr	ip, [sl, #48]	; 0x30
   2d32c:	mov	r1, #2
   2d330:	mov	r3, #0
   2d334:	str	r1, [sp]
   2d338:	mov	r1, r7
   2d33c:	blx	ip
   2d340:	cmp	r0, #0
   2d344:	bne	2d3b8 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   2d348:	ldr	r0, [r7]
   2d34c:	adds	r0, r0, r6
   2d350:	beq	2d374 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2d354:	ldr	r1, [sl, #120]	; 0x78
   2d358:	mov	r2, r5
   2d35c:	str	r1, [r4, #8]
   2d360:	add	r1, r1, r5
   2d364:	str	r1, [sl, #120]	; 0x78
   2d368:	ldr	r1, [sp, #16]
   2d36c:	bl	12ab0 <memcpy@plt>
   2d370:	b	2d2b8 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   2d374:	mvn	r7, #0
   2d378:	mov	r0, r7
   2d37c:	sub	sp, fp, #28
   2d380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d384:	ldr	r0, [sp, #12]
   2d388:	cmp	r6, r0
   2d38c:	beq	2d3a8 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   2d390:	mov	r1, r0
   2d394:	ldr	r0, [r9, #12]
   2d398:	str	r0, [r6]
   2d39c:	ldr	r0, [r1]
   2d3a0:	str	r0, [r9, #12]
   2d3a4:	str	r7, [r1]
   2d3a8:	ldr	r7, [r9]
   2d3ac:	mov	r0, r7
   2d3b0:	sub	sp, fp, #28
   2d3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d3b8:	movw	r0, #24788	; 0x60d4
   2d3bc:	movw	r1, #20270	; 0x4f2e
   2d3c0:	movw	r3, #24334	; 0x5f0e
   2d3c4:	mov	r2, #308	; 0x134
   2d3c8:	movt	r0, #3
   2d3cc:	movt	r1, #3
   2d3d0:	movt	r3, #3
   2d3d4:	bl	12bc4 <__assert_fail@plt>
   2d3d8:	movw	r0, #24728	; 0x6098
   2d3dc:	movw	r1, #20270	; 0x4f2e
   2d3e0:	movw	r3, #24743	; 0x60a7
   2d3e4:	movw	r2, #342	; 0x156
   2d3e8:	movt	r0, #3
   2d3ec:	movt	r1, #3
   2d3f0:	movt	r3, #3
   2d3f4:	bl	12bc4 <__assert_fail@plt>

0002d3f8 <flatcc_builder_create_table@@Base>:
   2d3f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d3fc:	add	fp, sp, #24
   2d400:	sub	sp, sp, #80	; 0x50
   2d404:	ldr	r5, [fp, #12]
   2d408:	cmn	r5, #1
   2d40c:	ble	2d558 <flatcc_builder_create_table@@Base+0x160>
   2d410:	ldr	ip, [fp, #16]
   2d414:	tst	ip, #1
   2d418:	beq	2d578 <flatcc_builder_create_table@@Base+0x180>
   2d41c:	mov	r8, r0
   2d420:	ldrh	r0, [r0, #128]	; 0x80
   2d424:	cmp	r3, #4
   2d428:	movls	r3, #4
   2d42c:	cmp	r0, r3
   2d430:	strhcc	r3, [r8, #128]	; 0x80
   2d434:	cmp	r5, #1
   2d438:	ldr	r0, [r8, #136]	; 0x88
   2d43c:	sub	r4, r0, r2
   2d440:	sub	r0, r3, #1
   2d444:	and	r0, r4, r0
   2d448:	sub	r4, r4, #4
   2d44c:	add	r3, ip, r0
   2d450:	sub	r3, r4, r3
   2d454:	add	r3, r3, #1
   2d458:	str	r3, [fp, #-28]	; 0xffffffe4
   2d45c:	blt	2d48c <flatcc_builder_create_table@@Base+0x94>
   2d460:	ldr	r3, [fp, #8]
   2d464:	sub	ip, r4, r0
   2d468:	mvn	r4, #3
   2d46c:	sub	r4, r4, ip
   2d470:	ldrh	r6, [r3], #2
   2d474:	subs	r5, r5, #1
   2d478:	ldr	r7, [r6, r1]
   2d47c:	add	r7, r4, r7
   2d480:	sub	r7, r7, r6
   2d484:	str	r7, [r6, r1]
   2d488:	bne	2d470 <flatcc_builder_create_table@@Base+0x78>
   2d48c:	mov	r4, #4
   2d490:	sub	r3, fp, #28
   2d494:	cmp	r2, #0
   2d498:	str	r4, [sp, #16]
   2d49c:	str	r3, [sp, #12]
   2d4a0:	mov	r3, #1
   2d4a4:	str	r4, [sp, #4]
   2d4a8:	addne	r4, r2, #4
   2d4ac:	str	r3, [sp, #8]
   2d4b0:	movne	r3, #2
   2d4b4:	strne	r2, [sp, #24]
   2d4b8:	strne	r1, [sp, #20]
   2d4bc:	strne	r3, [sp, #8]
   2d4c0:	strne	r4, [sp, #4]
   2d4c4:	cmp	r0, #0
   2d4c8:	beq	2d4f4 <flatcc_builder_create_table@@Base+0xfc>
   2d4cc:	add	r1, sp, #4
   2d4d0:	movw	r2, #19740	; 0x4d1c
   2d4d4:	add	r4, r4, r0
   2d4d8:	add	r1, r1, r3, lsl #3
   2d4dc:	movt	r2, #3
   2d4e0:	add	r3, r3, #1
   2d4e4:	str	r4, [sp, #4]
   2d4e8:	str	r2, [r1, #8]
   2d4ec:	str	r0, [r1, #12]
   2d4f0:	str	r3, [sp, #8]
   2d4f4:	cmp	r4, #0
   2d4f8:	ble	2d598 <flatcc_builder_create_table@@Base+0x1a0>
   2d4fc:	ldr	r0, [r8, #136]	; 0x88
   2d500:	ldr	r7, [r8, #44]	; 0x2c
   2d504:	add	r1, sp, #4
   2d508:	mov	r2, r3
   2d50c:	add	r1, r1, #8
   2d510:	sub	r5, r0, r4
   2d514:	ldr	r0, [r8, #36]	; 0x24
   2d518:	str	r4, [sp]
   2d51c:	mov	r3, r5
   2d520:	blx	r7
   2d524:	cmp	r0, #0
   2d528:	streq	r5, [r8, #136]	; 0x88
   2d52c:	moveq	r0, r5
   2d530:	subeq	sp, fp, #24
   2d534:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d538:	movw	r0, #24788	; 0x60d4
   2d53c:	movw	r1, #20270	; 0x4f2e
   2d540:	movw	r3, #24467	; 0x5f93
   2d544:	movw	r2, #651	; 0x28b
   2d548:	movt	r0, #3
   2d54c:	movt	r1, #3
   2d550:	movt	r3, #3
   2d554:	bl	12bc4 <__assert_fail@plt>
   2d558:	movw	r0, #22154	; 0x568a
   2d55c:	movw	r1, #20270	; 0x4f2e
   2d560:	movw	r3, #22172	; 0x569c
   2d564:	movw	r2, #1237	; 0x4d5
   2d568:	movt	r0, #3
   2d56c:	movt	r1, #3
   2d570:	movt	r3, #3
   2d574:	bl	12bc4 <__assert_fail@plt>
   2d578:	movw	r0, #22328	; 0x5738
   2d57c:	movw	r1, #20270	; 0x4f2e
   2d580:	movw	r3, #22172	; 0x569c
   2d584:	movw	r2, #1243	; 0x4db
   2d588:	movt	r0, #3
   2d58c:	movt	r1, #3
   2d590:	movt	r3, #3
   2d594:	bl	12bc4 <__assert_fail@plt>
   2d598:	movw	r0, #24788	; 0x60d4
   2d59c:	movw	r1, #20270	; 0x4f2e
   2d5a0:	movw	r3, #24467	; 0x5f93
   2d5a4:	movw	r2, #647	; 0x287
   2d5a8:	movt	r0, #3
   2d5ac:	movt	r1, #3
   2d5b0:	movt	r3, #3
   2d5b4:	bl	12bc4 <__assert_fail@plt>

0002d5b8 <flatcc_builder_check_required_field@@Base>:
   2d5b8:	push	{fp, lr}
   2d5bc:	mov	fp, sp
   2d5c0:	ldr	r2, [r0, #32]
   2d5c4:	ldrh	r2, [r2, #14]
   2d5c8:	cmp	r2, #3
   2d5cc:	bne	2d5fc <flatcc_builder_check_required_field@@Base+0x44>
   2d5d0:	ldrh	r3, [r0, #8]
   2d5d4:	mov	r2, #0
   2d5d8:	cmp	r3, r1
   2d5dc:	bls	2d5f4 <flatcc_builder_check_required_field@@Base+0x3c>
   2d5e0:	ldr	r0, [r0, #4]
   2d5e4:	add	r0, r0, r1, lsl #1
   2d5e8:	ldrh	r2, [r0]
   2d5ec:	cmp	r2, #0
   2d5f0:	movwne	r2, #1
   2d5f4:	mov	r0, r2
   2d5f8:	pop	{fp, pc}
   2d5fc:	movw	r0, #22339	; 0x5743
   2d600:	movw	r1, #20270	; 0x4f2e
   2d604:	movw	r3, #22382	; 0x576e
   2d608:	movw	r2, #1272	; 0x4f8
   2d60c:	movt	r0, #3
   2d610:	movt	r1, #3
   2d614:	movt	r3, #3
   2d618:	bl	12bc4 <__assert_fail@plt>

0002d61c <flatcc_builder_check_union_field@@Base>:
   2d61c:	push	{fp, lr}
   2d620:	mov	fp, sp
   2d624:	mov	r2, r0
   2d628:	ldr	r0, [r0, #32]
   2d62c:	ldrh	r0, [r0, #14]
   2d630:	cmp	r0, #3
   2d634:	bne	2d694 <flatcc_builder_check_union_field@@Base+0x78>
   2d638:	mov	r0, #0
   2d63c:	cmp	r1, #0
   2d640:	beq	2d680 <flatcc_builder_check_union_field@@Base+0x64>
   2d644:	ldrh	r3, [r2, #8]
   2d648:	cmp	r3, r1
   2d64c:	popls	{fp, pc}
   2d650:	ldr	r0, [r2, #4]
   2d654:	add	r0, r0, r1, lsl #1
   2d658:	ldrh	r1, [r0, #-2]
   2d65c:	cmp	r1, #0
   2d660:	beq	2d684 <flatcc_builder_check_union_field@@Base+0x68>
   2d664:	ldr	r2, [r2, #16]
   2d668:	ldrh	r0, [r0]
   2d66c:	ldrb	r1, [r2, r1]
   2d670:	cmp	r1, #0
   2d674:	beq	2d688 <flatcc_builder_check_union_field@@Base+0x6c>
   2d678:	cmp	r0, #0
   2d67c:	movwne	r0, #1
   2d680:	pop	{fp, pc}
   2d684:	ldrh	r0, [r0]
   2d688:	clz	r0, r0
   2d68c:	lsr	r0, r0, #5
   2d690:	pop	{fp, pc}
   2d694:	movw	r0, #22339	; 0x5743
   2d698:	movw	r1, #20270	; 0x4f2e
   2d69c:	movw	r3, #22465	; 0x57c1
   2d6a0:	movw	r2, #1279	; 0x4ff
   2d6a4:	movt	r0, #3
   2d6a8:	movt	r1, #3
   2d6ac:	movt	r3, #3
   2d6b0:	bl	12bc4 <__assert_fail@plt>

0002d6b4 <flatcc_builder_check_required@@Base>:
   2d6b4:	push	{fp, lr}
   2d6b8:	mov	fp, sp
   2d6bc:	mov	r3, r0
   2d6c0:	ldr	r0, [r0, #32]
   2d6c4:	ldrh	r0, [r0, #14]
   2d6c8:	cmp	r0, #3
   2d6cc:	bne	2d714 <flatcc_builder_check_required@@Base+0x60>
   2d6d0:	ldrh	ip, [r3, #8]
   2d6d4:	mov	r0, #0
   2d6d8:	cmp	ip, r2
   2d6dc:	poplt	{fp, pc}
   2d6e0:	cmp	r2, #1
   2d6e4:	blt	2d70c <flatcc_builder_check_required@@Base+0x58>
   2d6e8:	ldr	ip, [r3, #4]
   2d6ec:	ldrh	r3, [r1]
   2d6f0:	add	r3, ip, r3, lsl #1
   2d6f4:	ldrh	r3, [r3]
   2d6f8:	cmp	r3, #0
   2d6fc:	beq	2d710 <flatcc_builder_check_required@@Base+0x5c>
   2d700:	add	r1, r1, #2
   2d704:	subs	r2, r2, #1
   2d708:	bne	2d6ec <flatcc_builder_check_required@@Base+0x38>
   2d70c:	mov	r0, #1
   2d710:	pop	{fp, pc}
   2d714:	movw	r0, #22339	; 0x5743
   2d718:	movw	r1, #20270	; 0x4f2e
   2d71c:	movw	r3, #22545	; 0x5811
   2d720:	movw	r2, #1297	; 0x511
   2d724:	movt	r0, #3
   2d728:	movt	r1, #3
   2d72c:	movt	r3, #3
   2d730:	bl	12bc4 <__assert_fail@plt>

0002d734 <flatcc_builder_end_table@@Base>:
   2d734:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d738:	add	fp, sp, #24
   2d73c:	sub	sp, sp, #16
   2d740:	mov	r4, r0
   2d744:	ldr	r0, [r0, #32]
   2d748:	ldrh	r0, [r0, #14]
   2d74c:	cmp	r0, #3
   2d750:	bne	2d8d4 <flatcc_builder_end_table@@Base+0x1a0>
   2d754:	ldrh	r0, [r4, #8]
   2d758:	ldr	r5, [r4, #4]
   2d75c:	mov	r1, #4
   2d760:	movw	r2, #31153	; 0x79b1
   2d764:	movt	r2, #40503	; 0x9e37
   2d768:	add	r0, r1, r0, lsl #1
   2d76c:	strh	r0, [r5, #-4]!
   2d770:	ldrh	r1, [r4, #20]
   2d774:	uxth	r6, r0
   2d778:	add	r1, r1, #4
   2d77c:	strh	r1, [r5, #2]
   2d780:	uxth	r1, r1
   2d784:	ldr	r0, [r4, #12]
   2d788:	eor	r0, r0, r6
   2d78c:	mul	r0, r0, r2
   2d790:	eor	r0, r0, r1
   2d794:	mov	r1, r5
   2d798:	mul	r3, r0, r2
   2d79c:	mov	r0, r4
   2d7a0:	mov	r2, r6
   2d7a4:	str	r3, [r4, #12]
   2d7a8:	bl	2d07c <flatcc_builder_create_cached_vtable@@Base>
   2d7ac:	cmp	r0, #0
   2d7b0:	beq	2d8c4 <flatcc_builder_end_table@@Base+0x190>
   2d7b4:	mov	r7, r0
   2d7b8:	mov	r0, r5
   2d7bc:	mov	r1, #0
   2d7c0:	mov	r2, r6
   2d7c4:	mov	r8, #0
   2d7c8:	bl	12b64 <memset@plt>
   2d7cc:	ldr	r5, [r4, #32]
   2d7d0:	ldr	r0, [r4, #76]	; 0x4c
   2d7d4:	ldr	r6, [r4]
   2d7d8:	ldrh	r3, [r4, #130]	; 0x82
   2d7dc:	ldr	r1, [r4, #16]
   2d7e0:	ldr	r2, [r4, #20]
   2d7e4:	ldr	r5, [r5, #20]
   2d7e8:	add	r0, r0, r5
   2d7ec:	sub	r6, r6, r0
   2d7f0:	asr	r6, r6, #1
   2d7f4:	stm	sp, {r0, r6, r7}
   2d7f8:	mov	r0, r4
   2d7fc:	bl	2d3f8 <flatcc_builder_create_table@@Base>
   2d800:	cmp	r0, #0
   2d804:	beq	2d8b8 <flatcc_builder_end_table@@Base+0x184>
   2d808:	ldr	r1, [r4, #32]
   2d80c:	mov	r5, r0
   2d810:	ldr	r0, [r4, #16]
   2d814:	ldr	r2, [r4, #20]
   2d818:	ldr	r3, [r4, #52]	; 0x34
   2d81c:	ldr	r7, [r1, #24]
   2d820:	str	r7, [r4, #12]
   2d824:	ldrh	r7, [r1, #28]
   2d828:	strh	r7, [r4, #8]
   2d82c:	ldr	r7, [r1, #16]
   2d830:	add	r3, r3, r7
   2d834:	str	r3, [r4, #4]
   2d838:	ldr	r3, [r4, #76]	; 0x4c
   2d83c:	ldr	r1, [r1, #20]
   2d840:	add	r1, r3, r1
   2d844:	str	r1, [r4]
   2d848:	mov	r1, #0
   2d84c:	bl	12b64 <memset@plt>
   2d850:	ldr	r0, [r4, #32]
   2d854:	ldr	r1, [r4, #60]	; 0x3c
   2d858:	ldr	r2, [r4, #64]	; 0x40
   2d85c:	mov	r8, r5
   2d860:	ldr	r3, [r0, #8]
   2d864:	str	r3, [r4, #20]
   2d868:	ldr	r3, [r0]
   2d86c:	str	r3, [r4, #28]
   2d870:	add	r1, r1, r3
   2d874:	ldr	r7, [r0, #4]
   2d878:	str	r1, [r4, #16]
   2d87c:	sub	r1, r2, r3
   2d880:	cmp	r1, r7
   2d884:	movhi	r1, r7
   2d888:	str	r1, [r4, #24]
   2d88c:	ldrh	r1, [r4, #130]	; 0x82
   2d890:	ldrh	r2, [r4, #128]	; 0x80
   2d894:	cmp	r2, r1
   2d898:	strhcc	r1, [r4, #128]	; 0x80
   2d89c:	ldrh	r1, [r0, #12]
   2d8a0:	sub	r0, r0, #36	; 0x24
   2d8a4:	str	r0, [r4, #32]
   2d8a8:	strh	r1, [r4, #130]	; 0x82
   2d8ac:	ldr	r0, [r4, #156]	; 0x9c
   2d8b0:	sub	r0, r0, #1
   2d8b4:	str	r0, [r4, #156]	; 0x9c
   2d8b8:	mov	r0, r8
   2d8bc:	sub	sp, fp, #24
   2d8c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d8c4:	mov	r8, #0
   2d8c8:	mov	r0, r8
   2d8cc:	sub	sp, fp, #24
   2d8d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2d8d4:	movw	r0, #22339	; 0x5743
   2d8d8:	movw	r1, #20270	; 0x4f2e
   2d8dc:	movw	r3, #22635	; 0x586b
   2d8e0:	movw	r2, #1317	; 0x525
   2d8e4:	movt	r0, #3
   2d8e8:	movt	r1, #3
   2d8ec:	movt	r3, #3
   2d8f0:	bl	12bc4 <__assert_fail@plt>

0002d8f4 <flatcc_builder_create_vector@@Base>:
   2d8f4:	push	{r4, r5, r6, r7, fp, lr}
   2d8f8:	add	fp, sp, #16
   2d8fc:	sub	sp, sp, #80	; 0x50
   2d900:	mov	r7, r0
   2d904:	ldr	r0, [fp, #12]
   2d908:	cmp	r2, r0
   2d90c:	bhi	2da08 <flatcc_builder_create_vector@@Base+0x114>
   2d910:	ldr	r0, [fp, #8]
   2d914:	mov	r4, r2
   2d918:	ldrh	r2, [r7, #128]	; 0x80
   2d91c:	mov	r5, #4
   2d920:	cmp	r0, #4
   2d924:	movls	r0, r5
   2d928:	cmp	r2, r0
   2d92c:	sub	r2, fp, #20
   2d930:	strhcc	r0, [r7, #128]	; 0x80
   2d934:	str	r4, [fp, #-20]	; 0xffffffec
   2d938:	sub	r0, r0, #1
   2d93c:	ldr	ip, [r7, #136]	; 0x88
   2d940:	str	r5, [sp, #16]
   2d944:	str	r2, [sp, #12]
   2d948:	mov	r2, #1
   2d94c:	str	r5, [sp, #4]
   2d950:	str	r2, [sp, #8]
   2d954:	mls	r6, r3, r4, ip
   2d958:	mul	r3, r3, r4
   2d95c:	cmp	r3, #0
   2d960:	and	r0, r6, r0
   2d964:	movne	r2, #2
   2d968:	addne	r5, r3, #4
   2d96c:	strne	r3, [sp, #24]
   2d970:	strne	r1, [sp, #20]
   2d974:	strne	r2, [sp, #8]
   2d978:	strne	r5, [sp, #4]
   2d97c:	cmp	r0, #0
   2d980:	beq	2d9ac <flatcc_builder_create_vector@@Base+0xb8>
   2d984:	add	r1, sp, #4
   2d988:	movw	r3, #19740	; 0x4d1c
   2d98c:	add	r5, r5, r0
   2d990:	add	r1, r1, r2, lsl #3
   2d994:	movt	r3, #3
   2d998:	add	r2, r2, #1
   2d99c:	str	r5, [sp, #4]
   2d9a0:	str	r3, [r1, #8]
   2d9a4:	str	r0, [r1, #12]
   2d9a8:	str	r2, [sp, #8]
   2d9ac:	cmp	r5, #0
   2d9b0:	ble	2da28 <flatcc_builder_create_vector@@Base+0x134>
   2d9b4:	ldr	r0, [r7, #36]	; 0x24
   2d9b8:	ldr	r6, [r7, #44]	; 0x2c
   2d9bc:	add	r1, sp, #4
   2d9c0:	sub	r4, ip, r5
   2d9c4:	str	r5, [sp]
   2d9c8:	add	r1, r1, #8
   2d9cc:	mov	r3, r4
   2d9d0:	blx	r6
   2d9d4:	cmp	r0, #0
   2d9d8:	streq	r4, [r7, #136]	; 0x88
   2d9dc:	moveq	r0, r4
   2d9e0:	subeq	sp, fp, #16
   2d9e4:	popeq	{r4, r5, r6, r7, fp, pc}
   2d9e8:	movw	r0, #24788	; 0x60d4
   2d9ec:	movw	r1, #20270	; 0x4f2e
   2d9f0:	movw	r3, #24467	; 0x5f93
   2d9f4:	movw	r2, #651	; 0x28b
   2d9f8:	movt	r0, #3
   2d9fc:	movt	r1, #3
   2da00:	movt	r3, #3
   2da04:	bl	12bc4 <__assert_fail@plt>
   2da08:	movw	r0, #22701	; 0x58ad
   2da0c:	movw	r1, #20270	; 0x4f2e
   2da10:	movw	r3, #22720	; 0x58c0
   2da14:	movw	r2, #1365	; 0x555
   2da18:	movt	r0, #3
   2da1c:	movt	r1, #3
   2da20:	movt	r3, #3
   2da24:	bl	12bc4 <__assert_fail@plt>
   2da28:	movw	r0, #24788	; 0x60d4
   2da2c:	movw	r1, #20270	; 0x4f2e
   2da30:	movw	r3, #24467	; 0x5f93
   2da34:	movw	r2, #647	; 0x287
   2da38:	movt	r0, #3
   2da3c:	movt	r1, #3
   2da40:	movt	r3, #3
   2da44:	bl	12bc4 <__assert_fail@plt>

0002da48 <flatcc_builder_end_vector@@Base>:
   2da48:	push	{r4, r5, fp, lr}
   2da4c:	add	fp, sp, #8
   2da50:	sub	sp, sp, #8
   2da54:	mov	r4, r0
   2da58:	ldr	r0, [r0, #32]
   2da5c:	ldrh	r1, [r0, #14]
   2da60:	cmp	r1, #4
   2da64:	bne	2db18 <flatcc_builder_end_vector@@Base+0xd0>
   2da68:	ldr	r3, [r0, #16]
   2da6c:	ldr	r2, [r0, #20]
   2da70:	ldr	r0, [r0, #24]
   2da74:	ldr	r1, [r4, #16]
   2da78:	ldrh	r5, [r4, #130]	; 0x82
   2da7c:	str	r0, [sp, #4]
   2da80:	mov	r0, r4
   2da84:	str	r5, [sp]
   2da88:	bl	2d8f4 <flatcc_builder_create_vector@@Base>
   2da8c:	mov	r5, r0
   2da90:	cmp	r0, #0
   2da94:	beq	2db0c <flatcc_builder_end_vector@@Base+0xc4>
   2da98:	ldr	r0, [r4, #16]
   2da9c:	ldr	r2, [r4, #20]
   2daa0:	mov	r1, #0
   2daa4:	bl	12b64 <memset@plt>
   2daa8:	ldr	r0, [r4, #32]
   2daac:	ldr	r1, [r4, #60]	; 0x3c
   2dab0:	ldr	ip, [r4, #64]	; 0x40
   2dab4:	ldr	r3, [r0, #8]
   2dab8:	str	r3, [r4, #20]
   2dabc:	ldr	r3, [r0]
   2dac0:	str	r3, [r4, #28]
   2dac4:	add	r1, r1, r3
   2dac8:	ldr	r2, [r0, #4]
   2dacc:	str	r1, [r4, #16]
   2dad0:	sub	r1, ip, r3
   2dad4:	cmp	r1, r2
   2dad8:	movhi	r1, r2
   2dadc:	str	r1, [r4, #24]
   2dae0:	ldrh	r1, [r4, #130]	; 0x82
   2dae4:	ldrh	r2, [r4, #128]	; 0x80
   2dae8:	cmp	r2, r1
   2daec:	strhcc	r1, [r4, #128]	; 0x80
   2daf0:	ldrh	r1, [r0, #12]
   2daf4:	sub	r0, r0, #36	; 0x24
   2daf8:	str	r0, [r4, #32]
   2dafc:	strh	r1, [r4, #130]	; 0x82
   2db00:	ldr	r0, [r4, #156]	; 0x9c
   2db04:	sub	r0, r0, #1
   2db08:	str	r0, [r4, #156]	; 0x9c
   2db0c:	mov	r0, r5
   2db10:	sub	sp, fp, #8
   2db14:	pop	{r4, r5, fp, pc}
   2db18:	movw	r0, #21073	; 0x5251
   2db1c:	movw	r1, #20270	; 0x4f2e
   2db20:	movw	r3, #22838	; 0x5936
   2db24:	movw	r2, #1400	; 0x578
   2db28:	movt	r0, #3
   2db2c:	movt	r1, #3
   2db30:	movt	r3, #3
   2db34:	bl	12bc4 <__assert_fail@plt>

0002db38 <flatcc_builder_vector_count@@Base>:
   2db38:	ldr	r0, [r0, #32]
   2db3c:	ldr	r0, [r0, #20]
   2db40:	bx	lr

0002db44 <flatcc_builder_vector_edit@@Base>:
   2db44:	ldr	r0, [r0, #16]
   2db48:	bx	lr

0002db4c <flatcc_builder_create_offset_vector_direct@@Base>:
   2db4c:	mov	r3, #0
   2db50:	b	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2db54:	push	{r4, r5, r6, r7, fp, lr}
   2db58:	add	fp, sp, #16
   2db5c:	sub	sp, sp, #80	; 0x50
   2db60:	mov	r5, #0
   2db64:	cmn	r2, #-1073741823	; 0xc0000001
   2db68:	bhi	2dcd8 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   2db6c:	mov	r6, r0
   2db70:	ldrh	r0, [r0, #128]	; 0x80
   2db74:	mov	r4, #4
   2db78:	sub	r5, fp, #20
   2db7c:	mov	ip, #1
   2db80:	cmp	r0, #3
   2db84:	movls	r0, #4
   2db88:	strhls	r0, [r6, #128]	; 0x80
   2db8c:	str	r2, [fp, #-20]	; 0xffffffec
   2db90:	mov	r0, #0
   2db94:	ldr	lr, [r6, #136]	; 0x88
   2db98:	cmp	r0, r2, lsl #2
   2db9c:	str	r4, [sp, #16]
   2dba0:	str	r5, [sp, #12]
   2dba4:	str	r4, [sp, #4]
   2dba8:	str	ip, [sp, #8]
   2dbac:	and	r5, lr, #3
   2dbb0:	beq	2dbd0 <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   2dbb4:	lsl	r0, r2, #2
   2dbb8:	mov	ip, #2
   2dbbc:	add	r4, r0, #4
   2dbc0:	str	r0, [sp, #24]
   2dbc4:	str	r1, [sp, #20]
   2dbc8:	str	ip, [sp, #8]
   2dbcc:	str	r4, [sp, #4]
   2dbd0:	cmp	r5, #0
   2dbd4:	beq	2dc00 <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   2dbd8:	add	r0, sp, #4
   2dbdc:	movw	r7, #19740	; 0x4d1c
   2dbe0:	add	r4, r4, r5
   2dbe4:	add	r0, r0, ip, lsl #3
   2dbe8:	movt	r7, #3
   2dbec:	add	ip, ip, #1
   2dbf0:	str	r4, [sp, #4]
   2dbf4:	str	r7, [r0, #8]
   2dbf8:	str	r5, [r0, #12]
   2dbfc:	str	ip, [sp, #8]
   2dc00:	cmp	r2, #0
   2dc04:	beq	2dc9c <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   2dc08:	sub	r0, r4, lr
   2dc0c:	cmp	r3, #0
   2dc10:	sub	r0, r0, #4
   2dc14:	bne	2dc5c <flatcc_builder_create_offset_vector_direct@@Base+0x110>
   2dc18:	ldr	r3, [r1]
   2dc1c:	cmp	r3, #0
   2dc20:	beq	2dce4 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   2dc24:	add	r3, r0, r3
   2dc28:	sub	r0, r0, #4
   2dc2c:	subs	r2, r2, #1
   2dc30:	str	r3, [r1], #4
   2dc34:	bne	2dc18 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   2dc38:	b	2dc9c <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   2dc3c:	ldrb	r7, [r3]
   2dc40:	cmp	r7, #0
   2dc44:	bne	2dd04 <flatcc_builder_create_offset_vector_direct@@Base+0x1b8>
   2dc48:	sub	r0, r0, #4
   2dc4c:	add	r1, r1, #4
   2dc50:	add	r3, r3, #1
   2dc54:	subs	r2, r2, #1
   2dc58:	beq	2dc9c <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   2dc5c:	ldr	r5, [r1]
   2dc60:	cmp	r5, #0
   2dc64:	beq	2dc3c <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   2dc68:	add	r7, r0, r5
   2dc6c:	str	r7, [r1]
   2dc70:	ldrb	r7, [r3]
   2dc74:	cmp	r7, #0
   2dc78:	bne	2dc48 <flatcc_builder_create_offset_vector_direct@@Base+0xfc>
   2dc7c:	movw	r0, #24776	; 0x60c8
   2dc80:	movw	r1, #20270	; 0x4f2e
   2dc84:	movw	r3, #24790	; 0x60d6
   2dc88:	movw	r2, #1457	; 0x5b1
   2dc8c:	movt	r0, #3
   2dc90:	movt	r1, #3
   2dc94:	movt	r3, #3
   2dc98:	bl	12bc4 <__assert_fail@plt>
   2dc9c:	cmp	r4, #0
   2dca0:	ble	2dd24 <flatcc_builder_create_offset_vector_direct@@Base+0x1d8>
   2dca4:	ldr	r0, [r6, #136]	; 0x88
   2dca8:	ldr	r7, [r6, #44]	; 0x2c
   2dcac:	add	r1, sp, #4
   2dcb0:	mov	r2, ip
   2dcb4:	add	r1, r1, #8
   2dcb8:	sub	r5, r0, r4
   2dcbc:	ldr	r0, [r6, #36]	; 0x24
   2dcc0:	str	r4, [sp]
   2dcc4:	mov	r3, r5
   2dcc8:	blx	r7
   2dccc:	cmp	r0, #0
   2dcd0:	bne	2dd44 <flatcc_builder_create_offset_vector_direct@@Base+0x1f8>
   2dcd4:	str	r5, [r6, #136]	; 0x88
   2dcd8:	mov	r0, r5
   2dcdc:	sub	sp, fp, #16
   2dce0:	pop	{r4, r5, r6, r7, fp, pc}
   2dce4:	movw	r0, #24788	; 0x60d4
   2dce8:	movw	r1, #20270	; 0x4f2e
   2dcec:	movw	r3, #24790	; 0x60d6
   2dcf0:	movw	r2, #1463	; 0x5b7
   2dcf4:	movt	r0, #3
   2dcf8:	movt	r1, #3
   2dcfc:	movt	r3, #3
   2dd00:	bl	12bc4 <__assert_fail@plt>
   2dd04:	movw	r0, #24921	; 0x6159
   2dd08:	movw	r1, #20270	; 0x4f2e
   2dd0c:	movw	r3, #24790	; 0x60d6
   2dd10:	movw	r2, #1461	; 0x5b5
   2dd14:	movt	r0, #3
   2dd18:	movt	r1, #3
   2dd1c:	movt	r3, #3
   2dd20:	bl	12bc4 <__assert_fail@plt>
   2dd24:	movw	r0, #24788	; 0x60d4
   2dd28:	movw	r1, #20270	; 0x4f2e
   2dd2c:	movw	r3, #24467	; 0x5f93
   2dd30:	movw	r2, #647	; 0x287
   2dd34:	movt	r0, #3
   2dd38:	movt	r1, #3
   2dd3c:	movt	r3, #3
   2dd40:	bl	12bc4 <__assert_fail@plt>
   2dd44:	movw	r0, #24788	; 0x60d4
   2dd48:	movw	r1, #20270	; 0x4f2e
   2dd4c:	movw	r3, #24467	; 0x5f93
   2dd50:	movw	r2, #651	; 0x28b
   2dd54:	movt	r0, #3
   2dd58:	movt	r1, #3
   2dd5c:	movt	r3, #3
   2dd60:	bl	12bc4 <__assert_fail@plt>

0002dd64 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2dd64:	push	{r4, r5, fp, lr}
   2dd68:	add	fp, sp, #8
   2dd6c:	mov	r4, r0
   2dd70:	ldr	r0, [r0, #32]
   2dd74:	mov	r3, r1
   2dd78:	ldrh	r1, [r0, #14]
   2dd7c:	cmp	r1, #5
   2dd80:	bne	2de1c <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   2dd84:	ldr	r2, [r0, #20]
   2dd88:	ldr	r1, [r4, #16]
   2dd8c:	mov	r0, r4
   2dd90:	bl	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2dd94:	mov	r5, r0
   2dd98:	cmp	r0, #0
   2dd9c:	beq	2de14 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   2dda0:	ldr	r0, [r4, #16]
   2dda4:	ldr	r2, [r4, #20]
   2dda8:	mov	r1, #0
   2ddac:	bl	12b64 <memset@plt>
   2ddb0:	ldr	r0, [r4, #32]
   2ddb4:	ldr	r1, [r4, #60]	; 0x3c
   2ddb8:	ldr	ip, [r4, #64]	; 0x40
   2ddbc:	ldr	r3, [r0, #8]
   2ddc0:	str	r3, [r4, #20]
   2ddc4:	ldr	r3, [r0]
   2ddc8:	str	r3, [r4, #28]
   2ddcc:	add	r1, r1, r3
   2ddd0:	ldr	r2, [r0, #4]
   2ddd4:	str	r1, [r4, #16]
   2ddd8:	sub	r1, ip, r3
   2dddc:	cmp	r1, r2
   2dde0:	movhi	r1, r2
   2dde4:	str	r1, [r4, #24]
   2dde8:	ldrh	r1, [r4, #130]	; 0x82
   2ddec:	ldrh	r2, [r4, #128]	; 0x80
   2ddf0:	cmp	r2, r1
   2ddf4:	strhcc	r1, [r4, #128]	; 0x80
   2ddf8:	ldrh	r1, [r0, #12]
   2ddfc:	sub	r0, r0, #36	; 0x24
   2de00:	str	r0, [r4, #32]
   2de04:	strh	r1, [r4, #130]	; 0x82
   2de08:	ldr	r0, [r4, #156]	; 0x9c
   2de0c:	sub	r0, r0, #1
   2de10:	str	r0, [r4, #156]	; 0x9c
   2de14:	mov	r0, r5
   2de18:	pop	{r4, r5, fp, pc}
   2de1c:	movw	r0, #21322	; 0x534a
   2de20:	movw	r1, #20270	; 0x4f2e
   2de24:	movw	r3, #22979	; 0x59c3
   2de28:	movw	r2, #1493	; 0x5d5
   2de2c:	movt	r0, #3
   2de30:	movt	r1, #3
   2de34:	movt	r3, #3
   2de38:	bl	12bc4 <__assert_fail@plt>

0002de3c <flatcc_builder_offset_vector_edit@@Base>:
   2de3c:	ldr	r0, [r0, #16]
   2de40:	bx	lr

0002de44 <flatcc_builder_offset_vector_count@@Base>:
   2de44:	ldr	r0, [r0, #32]
   2de48:	ldr	r0, [r0, #20]
   2de4c:	bx	lr

0002de50 <flatcc_builder_table_add_union@@Base>:
   2de50:	push	{r4, r5, r6, r7, fp, lr}
   2de54:	add	fp, sp, #16
   2de58:	mov	r5, r0
   2de5c:	ldr	r0, [r0, #32]
   2de60:	ldrh	r0, [r0, #14]
   2de64:	cmp	r0, #3
   2de68:	bne	2def0 <flatcc_builder_table_add_union@@Base+0xa0>
   2de6c:	mov	r7, r3
   2de70:	mov	r4, r2
   2de74:	mov	r6, r1
   2de78:	cmp	r3, #0
   2de7c:	beq	2de8c <flatcc_builder_table_add_union@@Base+0x3c>
   2de80:	uxtb	r0, r4
   2de84:	cmp	r0, #0
   2de88:	beq	2df10 <flatcc_builder_table_add_union@@Base+0xc0>
   2de8c:	cmp	r7, #0
   2de90:	beq	2deac <flatcc_builder_table_add_union@@Base+0x5c>
   2de94:	mov	r0, r5
   2de98:	mov	r1, r6
   2de9c:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   2dea0:	cmp	r0, #0
   2dea4:	beq	2df30 <flatcc_builder_table_add_union@@Base+0xe0>
   2dea8:	str	r7, [r0]
   2deac:	sub	r1, r6, #1
   2deb0:	mov	r0, r5
   2deb4:	mov	r2, #1
   2deb8:	mov	r3, #1
   2debc:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   2dec0:	cmp	r0, #0
   2dec4:	strbne	r4, [r0]
   2dec8:	movne	r0, #0
   2decc:	popne	{r4, r5, r6, r7, fp, pc}
   2ded0:	movw	r0, #23225	; 0x5ab9
   2ded4:	movw	r1, #20270	; 0x4f2e
   2ded8:	movw	r3, #23093	; 0x5a35
   2dedc:	movw	r2, #1526	; 0x5f6
   2dee0:	movt	r0, #3
   2dee4:	movt	r1, #3
   2dee8:	movt	r3, #3
   2deec:	bl	12bc4 <__assert_fail@plt>
   2def0:	movw	r0, #22339	; 0x5743
   2def4:	movw	r1, #20270	; 0x4f2e
   2def8:	movw	r3, #23093	; 0x5a35
   2defc:	movw	r2, #1518	; 0x5ee
   2df00:	movt	r0, #3
   2df04:	movt	r1, #3
   2df08:	movt	r3, #3
   2df0c:	bl	12bc4 <__assert_fail@plt>
   2df10:	movw	r0, #23181	; 0x5a8d
   2df14:	movw	r1, #20270	; 0x4f2e
   2df18:	movw	r3, #23093	; 0x5a35
   2df1c:	movw	r2, #1519	; 0x5ef
   2df20:	movt	r0, #3
   2df24:	movt	r1, #3
   2df28:	movt	r3, #3
   2df2c:	bl	12bc4 <__assert_fail@plt>
   2df30:	movw	r0, #23215	; 0x5aaf
   2df34:	movw	r1, #20270	; 0x4f2e
   2df38:	movw	r3, #23093	; 0x5a35
   2df3c:	movw	r2, #1522	; 0x5f2
   2df40:	movt	r0, #3
   2df44:	movt	r1, #3
   2df48:	movt	r3, #3
   2df4c:	bl	12bc4 <__assert_fail@plt>

0002df50 <flatcc_builder_table_add_offset@@Base>:
   2df50:	push	{r4, r5, r6, r7, fp, lr}
   2df54:	add	fp, sp, #16
   2df58:	sub	sp, sp, #8
   2df5c:	mov	r4, r0
   2df60:	ldr	r0, [r0, #32]
   2df64:	ldrh	r0, [r0, #14]
   2df68:	cmp	r0, #3
   2df6c:	bne	2e080 <flatcc_builder_table_add_offset@@Base+0x130>
   2df70:	movw	r0, #32765	; 0x7ffd
   2df74:	mov	r5, r1
   2df78:	cmp	r1, r0
   2df7c:	bcs	2e0a0 <flatcc_builder_table_add_offset@@Base+0x150>
   2df80:	ldr	r0, [r4, #4]
   2df84:	add	r1, r0, r5, lsl #1
   2df88:	ldrh	r1, [r1]
   2df8c:	cmp	r1, #0
   2df90:	bne	2e0c0 <flatcc_builder_table_add_offset@@Base+0x170>
   2df94:	ldr	r2, [r4, #20]
   2df98:	ldr	r1, [r4, #12]
   2df9c:	ldr	r3, [r4, #24]
   2dfa0:	add	r2, r2, #3
   2dfa4:	eor	r1, r1, r5
   2dfa8:	bic	r6, r2, #3
   2dfac:	movw	r2, #31153	; 0x79b1
   2dfb0:	movt	r2, #40503	; 0x9e37
   2dfb4:	add	r7, r6, #4
   2dfb8:	cmp	r7, r3
   2dfbc:	str	r7, [r4, #20]
   2dfc0:	mul	r1, r1, r2
   2dfc4:	eor	r1, r1, #4
   2dfc8:	mul	r1, r1, r2
   2dfcc:	str	r1, [r4, #12]
   2dfd0:	bls	2e044 <flatcc_builder_table_add_offset@@Base+0xf4>
   2dfd4:	ldr	r1, [r4, #28]
   2dfd8:	ldr	r0, [r4, #40]	; 0x28
   2dfdc:	ldr	ip, [r4, #48]	; 0x30
   2dfe0:	mov	r2, #1
   2dfe4:	mov	r3, #1
   2dfe8:	str	r2, [sp]
   2dfec:	add	r2, r1, r7
   2dff0:	add	r1, r4, #60	; 0x3c
   2dff4:	blx	ip
   2dff8:	mov	r1, r0
   2dffc:	mov	r0, #0
   2e000:	cmp	r1, #0
   2e004:	beq	2e010 <flatcc_builder_table_add_offset@@Base+0xc0>
   2e008:	sub	sp, fp, #16
   2e00c:	pop	{r4, r5, r6, r7, fp, pc}
   2e010:	ldr	r0, [r4, #28]
   2e014:	ldr	r2, [r4, #60]	; 0x3c
   2e018:	ldr	r3, [r4, #64]	; 0x40
   2e01c:	ldr	r1, [r4, #32]
   2e020:	add	r2, r2, r0
   2e024:	sub	r0, r3, r0
   2e028:	str	r2, [r4, #16]
   2e02c:	movw	r2, #65532	; 0xfffc
   2e030:	cmp	r0, r2
   2e034:	movcs	r0, r2
   2e038:	str	r0, [r4, #24]
   2e03c:	str	r2, [r1, #4]
   2e040:	ldr	r0, [r4, #4]
   2e044:	uxth	r1, r5
   2e048:	add	r0, r0, r1, lsl #1
   2e04c:	strh	r7, [r0]
   2e050:	ldrh	r0, [r4, #8]
   2e054:	cmp	r0, r1
   2e058:	addls	r0, r5, #1
   2e05c:	strhls	r0, [r4, #8]
   2e060:	ldr	r0, [r4]
   2e064:	add	r1, r0, #2
   2e068:	str	r1, [r4]
   2e06c:	strh	r6, [r0]
   2e070:	ldr	r0, [r4, #16]
   2e074:	add	r0, r0, r6
   2e078:	sub	sp, fp, #16
   2e07c:	pop	{r4, r5, r6, r7, fp, pc}
   2e080:	movw	r0, #22339	; 0x5743
   2e084:	movw	r1, #20270	; 0x4f2e
   2e088:	movw	r3, #24119	; 0x5e37
   2e08c:	movw	r2, #1811	; 0x713
   2e090:	movt	r0, #3
   2e094:	movt	r1, #3
   2e098:	movt	r3, #3
   2e09c:	bl	12bc4 <__assert_fail@plt>
   2e0a0:	movw	r0, #23991	; 0x5db7
   2e0a4:	movw	r1, #20270	; 0x4f2e
   2e0a8:	movw	r3, #24119	; 0x5e37
   2e0ac:	movw	r2, #1812	; 0x714
   2e0b0:	movt	r0, #3
   2e0b4:	movt	r1, #3
   2e0b8:	movt	r3, #3
   2e0bc:	bl	12bc4 <__assert_fail@plt>
   2e0c0:	movw	r0, #24788	; 0x60d4
   2e0c4:	movw	r1, #20270	; 0x4f2e
   2e0c8:	movw	r3, #24119	; 0x5e37
   2e0cc:	movw	r2, #1819	; 0x71b
   2e0d0:	movt	r0, #3
   2e0d4:	movt	r1, #3
   2e0d8:	movt	r3, #3
   2e0dc:	bl	12bc4 <__assert_fail@plt>

0002e0e0 <flatcc_builder_table_add@@Base>:
   2e0e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e0e4:	add	fp, sp, #24
   2e0e8:	sub	sp, sp, #8
   2e0ec:	mov	r4, r0
   2e0f0:	ldr	r0, [r0, #32]
   2e0f4:	ldrh	r0, [r0, #14]
   2e0f8:	cmp	r0, #3
   2e0fc:	bne	2e21c <flatcc_builder_table_add@@Base+0x13c>
   2e100:	movw	r0, #32765	; 0x7ffd
   2e104:	mov	r8, r1
   2e108:	cmp	r1, r0
   2e10c:	bcs	2e23c <flatcc_builder_table_add@@Base+0x15c>
   2e110:	ldrh	r0, [r4, #130]	; 0x82
   2e114:	cmp	r0, r3
   2e118:	strhcc	r3, [r4, #130]	; 0x82
   2e11c:	ldr	r0, [r4, #4]
   2e120:	add	r1, r0, r8, lsl #1
   2e124:	ldrh	r1, [r1]
   2e128:	cmp	r1, #0
   2e12c:	bne	2e25c <flatcc_builder_table_add@@Base+0x17c>
   2e130:	ldr	r1, [r4, #12]
   2e134:	movw	r7, #31153	; 0x79b1
   2e138:	ldr	r6, [r4, #20]
   2e13c:	ldr	r5, [r4, #24]
   2e140:	movt	r7, #40503	; 0x9e37
   2e144:	eor	r1, r1, r8
   2e148:	mul	r1, r1, r7
   2e14c:	eor	r1, r1, r2
   2e150:	mul	r1, r1, r7
   2e154:	str	r1, [r4, #12]
   2e158:	add	r1, r3, r6
   2e15c:	rsb	r3, r3, #0
   2e160:	sub	r1, r1, #1
   2e164:	and	r6, r1, r3
   2e168:	add	r1, r6, r2
   2e16c:	cmp	r1, r5
   2e170:	str	r1, [r4, #20]
   2e174:	bcc	2e1ec <flatcc_builder_table_add@@Base+0x10c>
   2e178:	ldr	r2, [r4, #28]
   2e17c:	ldr	r0, [r4, #40]	; 0x28
   2e180:	ldr	r7, [r4, #48]	; 0x30
   2e184:	mov	r3, #1
   2e188:	str	r3, [sp]
   2e18c:	mov	r3, #1
   2e190:	add	r1, r1, r2
   2e194:	add	r2, r1, #1
   2e198:	add	r1, r4, #60	; 0x3c
   2e19c:	blx	r7
   2e1a0:	mov	r1, r0
   2e1a4:	mov	r0, #0
   2e1a8:	cmp	r1, #0
   2e1ac:	beq	2e1b8 <flatcc_builder_table_add@@Base+0xd8>
   2e1b0:	sub	sp, fp, #24
   2e1b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e1b8:	ldr	r0, [r4, #28]
   2e1bc:	ldr	r2, [r4, #60]	; 0x3c
   2e1c0:	ldr	r3, [r4, #64]	; 0x40
   2e1c4:	ldr	r1, [r4, #32]
   2e1c8:	add	r2, r2, r0
   2e1cc:	sub	r0, r3, r0
   2e1d0:	str	r2, [r4, #16]
   2e1d4:	movw	r2, #65532	; 0xfffc
   2e1d8:	cmp	r0, r2
   2e1dc:	movcs	r0, r2
   2e1e0:	str	r0, [r4, #24]
   2e1e4:	str	r2, [r1, #4]
   2e1e8:	ldr	r0, [r4, #4]
   2e1ec:	uxth	r1, r8
   2e1f0:	add	r2, r6, #4
   2e1f4:	add	r0, r0, r1, lsl #1
   2e1f8:	strh	r2, [r0]
   2e1fc:	ldrh	r0, [r4, #8]
   2e200:	cmp	r0, r1
   2e204:	addls	r0, r8, #1
   2e208:	strhls	r0, [r4, #8]
   2e20c:	ldr	r0, [r4, #16]
   2e210:	add	r0, r0, r6
   2e214:	sub	sp, fp, #24
   2e218:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e21c:	movw	r0, #22339	; 0x5743
   2e220:	movw	r1, #20270	; 0x4f2e
   2e224:	movw	r3, #23917	; 0x5d6d
   2e228:	movw	r2, #1773	; 0x6ed
   2e22c:	movt	r0, #3
   2e230:	movt	r1, #3
   2e234:	movt	r3, #3
   2e238:	bl	12bc4 <__assert_fail@plt>
   2e23c:	movw	r0, #23991	; 0x5db7
   2e240:	movw	r1, #20270	; 0x4f2e
   2e244:	movw	r3, #23917	; 0x5d6d
   2e248:	movw	r2, #1774	; 0x6ee
   2e24c:	movt	r0, #3
   2e250:	movt	r1, #3
   2e254:	movt	r3, #3
   2e258:	bl	12bc4 <__assert_fail@plt>
   2e25c:	movw	r0, #24788	; 0x60d4
   2e260:	movw	r1, #20270	; 0x4f2e
   2e264:	movw	r3, #23917	; 0x5d6d
   2e268:	movw	r2, #1784	; 0x6f8
   2e26c:	movt	r0, #3
   2e270:	movt	r1, #3
   2e274:	movt	r3, #3
   2e278:	bl	12bc4 <__assert_fail@plt>

0002e27c <flatcc_builder_table_add_union_vector@@Base>:
   2e27c:	push	{r4, r5, r6, r7, fp, lr}
   2e280:	add	fp, sp, #16
   2e284:	mov	r6, r0
   2e288:	ldr	r0, [r0, #32]
   2e28c:	ldrh	r0, [r0, #14]
   2e290:	cmp	r0, #3
   2e294:	bne	2e300 <flatcc_builder_table_add_union_vector@@Base+0x84>
   2e298:	mov	r5, r1
   2e29c:	clz	r1, r3
   2e2a0:	cmp	r2, #0
   2e2a4:	mov	r0, r2
   2e2a8:	mov	r4, r3
   2e2ac:	mov	r7, r2
   2e2b0:	movwne	r0, #1
   2e2b4:	lsr	r1, r1, #5
   2e2b8:	teq	r1, r0
   2e2bc:	beq	2e320 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   2e2c0:	cmp	r7, #0
   2e2c4:	beq	2e2f8 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   2e2c8:	sub	r1, r5, #1
   2e2cc:	mov	r0, r6
   2e2d0:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   2e2d4:	cmp	r0, #0
   2e2d8:	beq	2e340 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   2e2dc:	str	r7, [r0]
   2e2e0:	mov	r0, r6
   2e2e4:	mov	r1, r5
   2e2e8:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   2e2ec:	cmp	r0, #0
   2e2f0:	beq	2e360 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   2e2f4:	str	r4, [r0]
   2e2f8:	mov	r0, #0
   2e2fc:	pop	{r4, r5, r6, r7, fp, pc}
   2e300:	movw	r0, #22339	; 0x5743
   2e304:	movw	r1, #20270	; 0x4f2e
   2e308:	movw	r3, #23237	; 0x5ac5
   2e30c:	mov	r2, #1536	; 0x600
   2e310:	movt	r0, #3
   2e314:	movt	r1, #3
   2e318:	movt	r3, #3
   2e31c:	bl	12bc4 <__assert_fail@plt>
   2e320:	movw	r0, #23336	; 0x5b28
   2e324:	movw	r1, #20270	; 0x4f2e
   2e328:	movw	r3, #23237	; 0x5ac5
   2e32c:	movw	r2, #1537	; 0x601
   2e330:	movt	r0, #3
   2e334:	movt	r1, #3
   2e338:	movt	r3, #3
   2e33c:	bl	12bc4 <__assert_fail@plt>
   2e340:	movw	r0, #23215	; 0x5aaf
   2e344:	movw	r1, #20270	; 0x4f2e
   2e348:	movw	r3, #23237	; 0x5ac5
   2e34c:	movw	r2, #1540	; 0x604
   2e350:	movt	r0, #3
   2e354:	movt	r1, #3
   2e358:	movt	r3, #3
   2e35c:	bl	12bc4 <__assert_fail@plt>
   2e360:	movw	r0, #23215	; 0x5aaf
   2e364:	movw	r1, #20270	; 0x4f2e
   2e368:	movw	r3, #23237	; 0x5ac5
   2e36c:	movw	r2, #1544	; 0x608
   2e370:	movt	r0, #3
   2e374:	movt	r1, #3
   2e378:	movt	r3, #3
   2e37c:	bl	12bc4 <__assert_fail@plt>

0002e380 <flatcc_builder_create_union_vector@@Base>:
   2e380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e384:	add	fp, sp, #28
   2e388:	sub	sp, sp, #12
   2e38c:	mov	r6, #0
   2e390:	mov	r4, r1
   2e394:	mov	r8, r0
   2e398:	mov	sl, r3
   2e39c:	mov	r9, r2
   2e3a0:	mov	r7, #4
   2e3a4:	str	r6, [r0]
   2e3a8:	str	r6, [r0, #4]
   2e3ac:	mov	r0, r1
   2e3b0:	mov	r1, #4
   2e3b4:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2e3b8:	cmp	r0, #0
   2e3bc:	beq	2e3c8 <flatcc_builder_create_union_vector@@Base+0x48>
   2e3c0:	sub	sp, fp, #28
   2e3c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e3c8:	ldr	r0, [r4, #32]
   2e3cc:	mov	r1, #5
   2e3d0:	str	r7, [r0, #16]
   2e3d4:	ldr	r0, [r4, #32]
   2e3d8:	str	r6, [r0, #20]
   2e3dc:	ldr	r0, [r4, #32]
   2e3e0:	strh	r1, [r0, #14]
   2e3e4:	ldr	r1, [r4, #28]
   2e3e8:	ldr	r2, [r4, #60]	; 0x3c
   2e3ec:	ldr	r3, [r4, #64]	; 0x40
   2e3f0:	add	r2, r2, r1
   2e3f4:	sub	r1, r3, r1
   2e3f8:	str	r2, [r4, #16]
   2e3fc:	mvn	r2, #3
   2e400:	cmn	r1, #4
   2e404:	movcs	r1, r2
   2e408:	str	r1, [r4, #24]
   2e40c:	str	r2, [r0, #4]
   2e410:	ldr	r1, [r0, #20]
   2e414:	adds	r1, r1, sl
   2e418:	cmpcc	r1, #1073741824	; 0x40000000
   2e41c:	bcc	2e440 <flatcc_builder_create_union_vector@@Base+0xc0>
   2e420:	movw	r0, #24541	; 0x5fdd
   2e424:	movw	r1, #20270	; 0x4f2e
   2e428:	movw	r3, #24568	; 0x5ff8
   2e42c:	mov	r2, #892	; 0x37c
   2e430:	movt	r0, #3
   2e434:	movt	r1, #3
   2e438:	movt	r3, #3
   2e43c:	bl	12bc4 <__assert_fail@plt>
   2e440:	str	r1, [r0, #20]
   2e444:	ldr	r7, [r4, #20]
   2e448:	ldr	r0, [r4, #24]
   2e44c:	add	r1, r7, sl, lsl #2
   2e450:	cmp	r1, r0
   2e454:	str	r1, [r4, #20]
   2e458:	bcs	2e46c <flatcc_builder_create_union_vector@@Base+0xec>
   2e45c:	ldr	r1, [r4, #16]
   2e460:	adds	r2, r1, r7
   2e464:	bne	2e4d4 <flatcc_builder_create_union_vector@@Base+0x154>
   2e468:	b	2e3c0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e46c:	ldr	r2, [r4, #28]
   2e470:	ldr	r0, [r4, #40]	; 0x28
   2e474:	ldr	r6, [r4, #48]	; 0x30
   2e478:	mov	r3, #1
   2e47c:	str	r3, [sp]
   2e480:	mov	r3, #1
   2e484:	add	r1, r1, r2
   2e488:	add	r2, r1, #1
   2e48c:	add	r1, r4, #60	; 0x3c
   2e490:	blx	r6
   2e494:	cmp	r0, #0
   2e498:	bne	2e3c0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e49c:	ldr	r0, [r4, #28]
   2e4a0:	ldr	r1, [r4, #60]	; 0x3c
   2e4a4:	ldr	r3, [r4, #64]	; 0x40
   2e4a8:	ldr	r2, [r4, #32]
   2e4ac:	add	r1, r1, r0
   2e4b0:	sub	r0, r3, r0
   2e4b4:	mvn	r3, #3
   2e4b8:	cmn	r0, #4
   2e4bc:	str	r1, [r4, #16]
   2e4c0:	movcs	r0, r3
   2e4c4:	str	r0, [r4, #24]
   2e4c8:	str	r3, [r2, #4]
   2e4cc:	adds	r2, r1, r7
   2e4d0:	beq	2e3c0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e4d4:	ldr	r7, [r4, #20]
   2e4d8:	add	r2, r7, sl
   2e4dc:	cmp	r2, r0
   2e4e0:	str	r2, [r4, #20]
   2e4e4:	bcc	2e548 <flatcc_builder_create_union_vector@@Base+0x1c8>
   2e4e8:	ldr	r1, [r4, #28]
   2e4ec:	ldr	r0, [r4, #40]	; 0x28
   2e4f0:	ldr	r6, [r4, #48]	; 0x30
   2e4f4:	mov	r3, #1
   2e4f8:	str	r3, [sp]
   2e4fc:	mov	r3, #1
   2e500:	add	r1, r2, r1
   2e504:	add	r2, r1, #1
   2e508:	add	r1, r4, #60	; 0x3c
   2e50c:	blx	r6
   2e510:	cmp	r0, #0
   2e514:	bne	2e3c0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e518:	ldr	r0, [r4, #28]
   2e51c:	ldr	r1, [r4, #60]	; 0x3c
   2e520:	ldr	r3, [r4, #64]	; 0x40
   2e524:	ldr	r2, [r4, #32]
   2e528:	add	r1, r1, r0
   2e52c:	sub	r0, r3, r0
   2e530:	mvn	r3, #3
   2e534:	cmn	r0, #4
   2e538:	str	r1, [r4, #16]
   2e53c:	movcs	r0, r3
   2e540:	str	r0, [r4, #24]
   2e544:	str	r3, [r2, #4]
   2e548:	adds	r5, r1, r7
   2e54c:	beq	2e3c0 <flatcc_builder_create_union_vector@@Base+0x40>
   2e550:	cmp	sl, #0
   2e554:	beq	2e5dc <flatcc_builder_create_union_vector@@Base+0x25c>
   2e558:	and	ip, sl, #1
   2e55c:	mov	r0, #0
   2e560:	cmp	sl, #1
   2e564:	str	r5, [sp, #8]
   2e568:	beq	2e5c0 <flatcc_builder_create_union_vector@@Base+0x240>
   2e56c:	ldr	r0, [sp, #8]
   2e570:	sub	lr, sl, ip
   2e574:	add	r2, r1, #4
   2e578:	add	r6, r9, #8
   2e57c:	add	r7, r0, #1
   2e580:	mov	r0, #0
   2e584:	ldrb	r3, [r6, #-8]
   2e588:	add	r5, r7, r0
   2e58c:	strb	r3, [r5, #-1]
   2e590:	add	r3, r9, r0, lsl #3
   2e594:	ldr	r5, [r3, #4]
   2e598:	str	r5, [r2, #-4]
   2e59c:	ldrb	r5, [r6]
   2e5a0:	add	r6, r6, #16
   2e5a4:	strb	r5, [r7, r0]
   2e5a8:	add	r0, r0, #2
   2e5ac:	ldr	r3, [r3, #12]
   2e5b0:	cmp	lr, r0
   2e5b4:	str	r3, [r2]
   2e5b8:	add	r2, r2, #8
   2e5bc:	bne	2e584 <flatcc_builder_create_union_vector@@Base+0x204>
   2e5c0:	ldr	r5, [sp, #8]
   2e5c4:	cmp	ip, #0
   2e5c8:	beq	2e5dc <flatcc_builder_create_union_vector@@Base+0x25c>
   2e5cc:	ldrb	r2, [r9, r0, lsl #3]!
   2e5d0:	strb	r2, [r5, r0]
   2e5d4:	ldr	r2, [r9, #4]
   2e5d8:	str	r2, [r1, r0, lsl #2]
   2e5dc:	mov	r0, r4
   2e5e0:	mov	r2, sl
   2e5e4:	mov	r3, r5
   2e5e8:	bl	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e5ec:	mov	r7, r0
   2e5f0:	mov	r6, #0
   2e5f4:	cmp	r0, #0
   2e5f8:	beq	2e624 <flatcc_builder_create_union_vector@@Base+0x2a4>
   2e5fc:	mvn	r0, #0
   2e600:	mov	r1, #1
   2e604:	mov	r2, sl
   2e608:	mov	r3, #1
   2e60c:	str	r1, [sp]
   2e610:	str	r0, [sp, #4]
   2e614:	mov	r0, r4
   2e618:	mov	r1, r5
   2e61c:	bl	2d8f4 <flatcc_builder_create_vector@@Base>
   2e620:	b	2e628 <flatcc_builder_create_union_vector@@Base+0x2a8>
   2e624:	mov	r0, #0
   2e628:	orr	r1, r6, r7
   2e62c:	stm	r8, {r0, r1}
   2e630:	mov	r1, #0
   2e634:	ldr	r0, [r4, #16]
   2e638:	ldr	r2, [r4, #20]
   2e63c:	bl	12b64 <memset@plt>
   2e640:	ldr	r0, [r4, #32]
   2e644:	ldr	r1, [r4, #60]	; 0x3c
   2e648:	ldr	r2, [r4, #64]	; 0x40
   2e64c:	ldr	r3, [r0, #8]
   2e650:	str	r3, [r4, #20]
   2e654:	ldr	r3, [r0]
   2e658:	str	r3, [r4, #28]
   2e65c:	add	r1, r1, r3
   2e660:	ldr	r7, [r0, #4]
   2e664:	str	r1, [r4, #16]
   2e668:	sub	r1, r2, r3
   2e66c:	cmp	r1, r7
   2e670:	movhi	r1, r7
   2e674:	str	r1, [r4, #24]
   2e678:	ldrh	r1, [r4, #130]	; 0x82
   2e67c:	ldrh	r2, [r4, #128]	; 0x80
   2e680:	cmp	r2, r1
   2e684:	strhcc	r1, [r4, #128]	; 0x80
   2e688:	ldrh	r1, [r0, #12]
   2e68c:	sub	r0, r0, #36	; 0x24
   2e690:	str	r0, [r4, #32]
   2e694:	strh	r1, [r4, #130]	; 0x82
   2e698:	ldr	r0, [r4, #156]	; 0x9c
   2e69c:	sub	r0, r0, #1
   2e6a0:	str	r0, [r4, #156]	; 0x9c
   2e6a4:	sub	sp, fp, #28
   2e6a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002e6ac <flatcc_builder_create_union_vector_direct@@Base>:
   2e6ac:	push	{r4, r5, r6, r7, fp, lr}
   2e6b0:	add	fp, sp, #16
   2e6b4:	sub	sp, sp, #8
   2e6b8:	ldr	r7, [fp, #8]
   2e6bc:	mov	r5, r2
   2e6c0:	mov	r4, r0
   2e6c4:	mov	r0, #0
   2e6c8:	mov	r6, r1
   2e6cc:	str	r0, [r4]
   2e6d0:	str	r0, [r4, #4]
   2e6d4:	mov	r0, r1
   2e6d8:	mov	r1, r3
   2e6dc:	mov	r3, r5
   2e6e0:	mov	r2, r7
   2e6e4:	bl	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e6e8:	cmp	r0, #0
   2e6ec:	str	r0, [r4, #4]
   2e6f0:	beq	2e71c <flatcc_builder_create_union_vector_direct@@Base+0x70>
   2e6f4:	mvn	r0, #0
   2e6f8:	mov	r1, #1
   2e6fc:	mov	r2, r7
   2e700:	mov	r3, #1
   2e704:	str	r1, [sp]
   2e708:	str	r0, [sp, #4]
   2e70c:	mov	r0, r6
   2e710:	mov	r1, r5
   2e714:	bl	2d8f4 <flatcc_builder_create_vector@@Base>
   2e718:	str	r0, [r4]
   2e71c:	sub	sp, fp, #16
   2e720:	pop	{r4, r5, r6, r7, fp, pc}

0002e724 <flatcc_builder_start_union_vector@@Base>:
   2e724:	push	{r4, sl, fp, lr}
   2e728:	add	fp, sp, #8
   2e72c:	mov	r1, #4
   2e730:	mov	r4, r0
   2e734:	bl	2b84c <flatcc_builder_start_buffer@@Base+0xbc>
   2e738:	mov	r1, r0
   2e73c:	mvn	r0, #0
   2e740:	cmp	r1, #0
   2e744:	popne	{r4, sl, fp, pc}
   2e748:	ldr	r0, [r4, #32]
   2e74c:	mov	r1, #8
   2e750:	mov	r2, #7
   2e754:	str	r1, [r0, #16]
   2e758:	mov	r0, #0
   2e75c:	ldr	r1, [r4, #32]
   2e760:	str	r0, [r1, #20]
   2e764:	ldr	r1, [r4, #32]
   2e768:	strh	r2, [r1, #14]
   2e76c:	ldr	r2, [r4, #28]
   2e770:	ldr	r3, [r4, #60]	; 0x3c
   2e774:	ldr	ip, [r4, #64]	; 0x40
   2e778:	add	r3, r3, r2
   2e77c:	sub	r2, ip, r2
   2e780:	str	r3, [r4, #16]
   2e784:	mvn	r3, #3
   2e788:	cmn	r2, #4
   2e78c:	movcs	r2, r3
   2e790:	str	r2, [r4, #24]
   2e794:	str	r3, [r1, #4]
   2e798:	pop	{r4, sl, fp, pc}

0002e79c <flatcc_builder_end_union_vector@@Base>:
   2e79c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7a0:	add	fp, sp, #28
   2e7a4:	sub	sp, sp, #20
   2e7a8:	mov	r4, r0
   2e7ac:	mov	r0, #0
   2e7b0:	mov	r8, r1
   2e7b4:	str	r0, [r4]
   2e7b8:	str	r0, [r4, #4]
   2e7bc:	ldr	r0, [r1, #32]
   2e7c0:	ldrh	r1, [r0, #14]
   2e7c4:	cmp	r1, #7
   2e7c8:	bne	2e9d0 <flatcc_builder_end_union_vector@@Base+0x234>
   2e7cc:	ldr	r9, [r0, #20]
   2e7d0:	ldr	r5, [r8, #20]
   2e7d4:	ldr	r2, [r8, #24]
   2e7d8:	add	r0, r9, r9, lsl #2
   2e7dc:	add	r1, r5, r0
   2e7e0:	cmp	r1, r2
   2e7e4:	str	r1, [r8, #20]
   2e7e8:	bcs	2e8d8 <flatcc_builder_end_union_vector@@Base+0x13c>
   2e7ec:	ldr	r0, [r8, #16]
   2e7f0:	adds	r1, r0, r5
   2e7f4:	beq	2e940 <flatcc_builder_end_union_vector@@Base+0x1a4>
   2e7f8:	add	sl, r1, r9, lsl #2
   2e7fc:	cmp	r9, #0
   2e800:	beq	2e890 <flatcc_builder_end_union_vector@@Base+0xf4>
   2e804:	and	r2, r9, #1
   2e808:	cmp	r9, #1
   2e80c:	str	r4, [sp, #12]
   2e810:	str	r2, [sp, #16]
   2e814:	mov	r2, #0
   2e818:	beq	2e870 <flatcc_builder_end_union_vector@@Base+0xd4>
   2e81c:	ldr	r2, [sp, #16]
   2e820:	add	r5, r5, #4
   2e824:	add	r6, r0, #8
   2e828:	sub	lr, r9, r2
   2e82c:	mov	r2, #0
   2e830:	ldrb	r7, [r6, #-8]
   2e834:	mov	r4, sl
   2e838:	add	r3, r0, r2, lsl #3
   2e83c:	strb	r7, [r4, r2]!
   2e840:	add	r7, r0, r5
   2e844:	add	r2, r2, #2
   2e848:	ldr	ip, [r3, #4]
   2e84c:	cmp	lr, r2
   2e850:	str	ip, [r7, #-4]
   2e854:	ldrb	r7, [r6]
   2e858:	add	r6, r6, #16
   2e85c:	strb	r7, [r4, #1]
   2e860:	ldr	r3, [r3, #12]
   2e864:	str	r3, [r0, r5]
   2e868:	add	r5, r5, #8
   2e86c:	bne	2e830 <flatcc_builder_end_union_vector@@Base+0x94>
   2e870:	ldr	r3, [sp, #16]
   2e874:	ldr	r4, [sp, #12]
   2e878:	cmp	r3, #0
   2e87c:	beq	2e890 <flatcc_builder_end_union_vector@@Base+0xf4>
   2e880:	ldrb	r3, [r0, r2, lsl #3]!
   2e884:	strb	r3, [sl, r2]
   2e888:	ldr	r0, [r0, #4]
   2e88c:	str	r0, [r1, r2, lsl #2]
   2e890:	mov	r0, r8
   2e894:	mov	r2, r9
   2e898:	mov	r3, sl
   2e89c:	bl	2db54 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2e8a0:	mov	r5, r0
   2e8a4:	mov	r6, #0
   2e8a8:	cmp	r0, #0
   2e8ac:	beq	2e948 <flatcc_builder_end_union_vector@@Base+0x1ac>
   2e8b0:	mvn	r0, #0
   2e8b4:	mov	r1, #1
   2e8b8:	mov	r2, r9
   2e8bc:	mov	r3, #1
   2e8c0:	str	r1, [sp]
   2e8c4:	str	r0, [sp, #4]
   2e8c8:	mov	r0, r8
   2e8cc:	mov	r1, sl
   2e8d0:	bl	2d8f4 <flatcc_builder_create_vector@@Base>
   2e8d4:	b	2e94c <flatcc_builder_end_union_vector@@Base+0x1b0>
   2e8d8:	ldr	r2, [r8, #28]
   2e8dc:	ldr	r0, [r8, #40]	; 0x28
   2e8e0:	ldr	r7, [r8, #48]	; 0x30
   2e8e4:	mov	r3, #1
   2e8e8:	str	r3, [sp]
   2e8ec:	mov	r3, #1
   2e8f0:	add	r1, r1, r2
   2e8f4:	add	r2, r1, #1
   2e8f8:	add	r1, r8, #60	; 0x3c
   2e8fc:	blx	r7
   2e900:	cmp	r0, #0
   2e904:	bne	2e940 <flatcc_builder_end_union_vector@@Base+0x1a4>
   2e908:	ldr	r1, [r8, #28]
   2e90c:	ldr	r0, [r8, #60]	; 0x3c
   2e910:	ldr	r3, [r8, #64]	; 0x40
   2e914:	ldr	r2, [r8, #32]
   2e918:	add	r0, r0, r1
   2e91c:	sub	r1, r3, r1
   2e920:	mvn	r3, #3
   2e924:	cmn	r1, #4
   2e928:	str	r0, [r8, #16]
   2e92c:	movcs	r1, r3
   2e930:	str	r1, [r8, #24]
   2e934:	str	r3, [r2, #4]
   2e938:	adds	r1, r0, r5
   2e93c:	bne	2e7f8 <flatcc_builder_end_union_vector@@Base+0x5c>
   2e940:	sub	sp, fp, #28
   2e944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e948:	mov	r0, #0
   2e94c:	orr	r1, r6, r5
   2e950:	stm	r4, {r0, r1}
   2e954:	mov	r1, #0
   2e958:	ldr	r0, [r8, #16]
   2e95c:	ldr	r2, [r8, #20]
   2e960:	bl	12b64 <memset@plt>
   2e964:	ldr	r0, [r8, #32]
   2e968:	ldr	r1, [r8, #60]	; 0x3c
   2e96c:	ldr	r2, [r8, #64]	; 0x40
   2e970:	ldr	r3, [r0, #8]
   2e974:	str	r3, [r8, #20]
   2e978:	ldr	r3, [r0]
   2e97c:	str	r3, [r8, #28]
   2e980:	add	r1, r1, r3
   2e984:	ldr	r7, [r0, #4]
   2e988:	str	r1, [r8, #16]
   2e98c:	sub	r1, r2, r3
   2e990:	cmp	r1, r7
   2e994:	movhi	r1, r7
   2e998:	str	r1, [r8, #24]
   2e99c:	ldrh	r1, [r8, #130]	; 0x82
   2e9a0:	ldrh	r2, [r8, #128]	; 0x80
   2e9a4:	cmp	r2, r1
   2e9a8:	strhcc	r1, [r8, #128]	; 0x80
   2e9ac:	ldrh	r1, [r0, #12]
   2e9b0:	sub	r0, r0, #36	; 0x24
   2e9b4:	str	r0, [r8, #32]
   2e9b8:	strh	r1, [r8, #130]	; 0x82
   2e9bc:	ldr	r0, [r8, #156]	; 0x9c
   2e9c0:	sub	r0, r0, #1
   2e9c4:	str	r0, [r8, #156]	; 0x9c
   2e9c8:	sub	sp, fp, #28
   2e9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e9d0:	movw	r0, #23376	; 0x5b50
   2e9d4:	movw	r1, #20270	; 0x4f2e
   2e9d8:	movw	r3, #23426	; 0x5b82
   2e9dc:	movw	r2, #1617	; 0x651
   2e9e0:	movt	r0, #3
   2e9e4:	movt	r1, #3
   2e9e8:	movt	r3, #3
   2e9ec:	bl	12bc4 <__assert_fail@plt>

0002e9f0 <flatcc_builder_union_vector_count@@Base>:
   2e9f0:	ldr	r0, [r0, #32]
   2e9f4:	ldr	r0, [r0, #20]
   2e9f8:	bx	lr

0002e9fc <flatcc_builder_union_vector_edit@@Base>:
   2e9fc:	ldr	r0, [r0, #16]
   2ea00:	bx	lr

0002ea04 <flatcc_builder_extend_union_vector@@Base>:
   2ea04:	push	{r4, r5, fp, lr}
   2ea08:	add	fp, sp, #8
   2ea0c:	sub	sp, sp, #8
   2ea10:	mov	r4, r0
   2ea14:	ldr	r0, [r0, #32]
   2ea18:	ldr	r2, [r0, #20]
   2ea1c:	adds	r2, r2, r1
   2ea20:	cmpcc	r2, #536870912	; 0x20000000
   2ea24:	bcc	2ea48 <flatcc_builder_extend_union_vector@@Base+0x44>
   2ea28:	movw	r0, #24541	; 0x5fdd
   2ea2c:	movw	r1, #20270	; 0x4f2e
   2ea30:	movw	r3, #24568	; 0x5ff8
   2ea34:	mov	r2, #892	; 0x37c
   2ea38:	movt	r0, #3
   2ea3c:	movt	r1, #3
   2ea40:	movt	r3, #3
   2ea44:	bl	12bc4 <__assert_fail@plt>
   2ea48:	str	r2, [r0, #20]
   2ea4c:	ldr	r5, [r4, #20]
   2ea50:	ldr	r0, [r4, #24]
   2ea54:	add	r1, r5, r1, lsl #3
   2ea58:	cmp	r1, r0
   2ea5c:	str	r1, [r4, #20]
   2ea60:	bcs	2ea74 <flatcc_builder_extend_union_vector@@Base+0x70>
   2ea64:	ldr	r0, [r4, #16]
   2ea68:	add	r0, r0, r5
   2ea6c:	sub	sp, fp, #8
   2ea70:	pop	{r4, r5, fp, pc}
   2ea74:	ldr	r2, [r4, #28]
   2ea78:	ldr	r0, [r4, #40]	; 0x28
   2ea7c:	ldr	ip, [r4, #48]	; 0x30
   2ea80:	mov	r3, #1
   2ea84:	str	r3, [sp]
   2ea88:	mov	r3, #1
   2ea8c:	add	r1, r1, r2
   2ea90:	add	r2, r1, #1
   2ea94:	add	r1, r4, #60	; 0x3c
   2ea98:	blx	ip
   2ea9c:	mov	r1, r0
   2eaa0:	mov	r0, #0
   2eaa4:	cmp	r1, #0
   2eaa8:	beq	2eab4 <flatcc_builder_extend_union_vector@@Base+0xb0>
   2eaac:	sub	sp, fp, #8
   2eab0:	pop	{r4, r5, fp, pc}
   2eab4:	ldr	r1, [r4, #28]
   2eab8:	ldr	r0, [r4, #60]	; 0x3c
   2eabc:	ldr	r3, [r4, #64]	; 0x40
   2eac0:	ldr	r2, [r4, #32]
   2eac4:	add	r0, r0, r1
   2eac8:	sub	r1, r3, r1
   2eacc:	mvn	r3, #3
   2ead0:	cmn	r1, #4
   2ead4:	str	r0, [r4, #16]
   2ead8:	movcs	r1, r3
   2eadc:	str	r1, [r4, #24]
   2eae0:	str	r3, [r2, #4]
   2eae4:	add	r0, r0, r5
   2eae8:	sub	sp, fp, #8
   2eaec:	pop	{r4, r5, fp, pc}

0002eaf0 <flatcc_builder_truncate_union_vector@@Base>:
   2eaf0:	push	{fp, lr}
   2eaf4:	mov	fp, sp
   2eaf8:	ldr	r2, [r0, #32]
   2eafc:	ldrh	r3, [r2, #14]
   2eb00:	cmp	r3, #7
   2eb04:	bne	2eb4c <flatcc_builder_truncate_union_vector@@Base+0x5c>
   2eb08:	ldr	r3, [r2, #20]
   2eb0c:	cmp	r3, r1
   2eb10:	bcc	2eb6c <flatcc_builder_truncate_union_vector@@Base+0x7c>
   2eb14:	sub	r3, r3, r1
   2eb18:	str	r3, [r2, #20]
   2eb1c:	ldr	r2, [r0, #32]
   2eb20:	ldr	r3, [r0, #20]
   2eb24:	ldr	ip, [r0, #16]
   2eb28:	ldr	r2, [r2, #16]
   2eb2c:	mls	r3, r2, r1, r3
   2eb30:	mul	r2, r2, r1
   2eb34:	mov	r1, #0
   2eb38:	str	r3, [r0, #20]
   2eb3c:	add	r0, ip, r3
   2eb40:	bl	12b64 <memset@plt>
   2eb44:	mov	r0, #0
   2eb48:	pop	{fp, pc}
   2eb4c:	movw	r0, #23376	; 0x5b50
   2eb50:	movw	r1, #20270	; 0x4f2e
   2eb54:	movw	r3, #23509	; 0x5bd5
   2eb58:	movw	r2, #1665	; 0x681
   2eb5c:	movt	r0, #3
   2eb60:	movt	r1, #3
   2eb64:	movt	r3, #3
   2eb68:	bl	12bc4 <__assert_fail@plt>
   2eb6c:	movw	r0, #21940	; 0x55b4
   2eb70:	movw	r1, #20270	; 0x4f2e
   2eb74:	movw	r3, #23509	; 0x5bd5
   2eb78:	movw	r2, #1666	; 0x682
   2eb7c:	movt	r0, #3
   2eb80:	movt	r1, #3
   2eb84:	movt	r3, #3
   2eb88:	bl	12bc4 <__assert_fail@plt>

0002eb8c <flatcc_builder_union_vector_push@@Base>:
   2eb8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2eb90:	add	fp, sp, #24
   2eb94:	sub	sp, sp, #8
   2eb98:	mov	r7, r0
   2eb9c:	ldr	r0, [r0, #32]
   2eba0:	mov	r9, r1
   2eba4:	ldrh	r1, [r0, #14]
   2eba8:	cmp	r1, #7
   2ebac:	bne	2ec74 <flatcc_builder_union_vector_push@@Base+0xe8>
   2ebb0:	ldr	r1, [r0, #20]
   2ebb4:	mov	r6, #0
   2ebb8:	cmn	r1, #-536870911	; 0xe0000001
   2ebbc:	beq	2ec1c <flatcc_builder_union_vector_push@@Base+0x90>
   2ebc0:	add	r1, r1, #1
   2ebc4:	mov	r8, r2
   2ebc8:	str	r1, [r0, #20]
   2ebcc:	ldr	r4, [r7, #20]
   2ebd0:	ldr	r0, [r7, #24]
   2ebd4:	add	r1, r4, #8
   2ebd8:	cmp	r1, r0
   2ebdc:	str	r1, [r7, #20]
   2ebe0:	bcs	2ebec <flatcc_builder_union_vector_push@@Base+0x60>
   2ebe4:	ldr	r0, [r7, #16]
   2ebe8:	b	2ec58 <flatcc_builder_union_vector_push@@Base+0xcc>
   2ebec:	ldr	r1, [r7, #28]
   2ebf0:	ldr	r0, [r7, #40]	; 0x28
   2ebf4:	ldr	r5, [r7, #48]	; 0x30
   2ebf8:	mov	r2, #1
   2ebfc:	mov	r3, #1
   2ec00:	str	r2, [sp]
   2ec04:	add	r1, r4, r1
   2ec08:	add	r2, r1, #9
   2ec0c:	add	r1, r7, #60	; 0x3c
   2ec10:	blx	r5
   2ec14:	cmp	r0, #0
   2ec18:	beq	2ec28 <flatcc_builder_union_vector_push@@Base+0x9c>
   2ec1c:	mov	r0, r6
   2ec20:	sub	sp, fp, #24
   2ec24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ec28:	ldr	r1, [r7, #28]
   2ec2c:	ldr	r0, [r7, #60]	; 0x3c
   2ec30:	ldr	r3, [r7, #64]	; 0x40
   2ec34:	ldr	r2, [r7, #32]
   2ec38:	add	r0, r0, r1
   2ec3c:	sub	r1, r3, r1
   2ec40:	mvn	r3, #3
   2ec44:	cmn	r1, #4
   2ec48:	str	r0, [r7, #16]
   2ec4c:	movcs	r1, r3
   2ec50:	str	r1, [r7, #24]
   2ec54:	str	r3, [r2, #4]
   2ec58:	adds	r0, r0, r4
   2ec5c:	movne	r6, r0
   2ec60:	strne	r9, [r0]
   2ec64:	strne	r8, [r0, #4]
   2ec68:	mov	r0, r6
   2ec6c:	sub	sp, fp, #24
   2ec70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2ec74:	movw	r0, #23376	; 0x5b50
   2ec78:	movw	r1, #20270	; 0x4f2e
   2ec7c:	movw	r3, #23578	; 0x5c1a
   2ec80:	movw	r2, #1677	; 0x68d
   2ec84:	movt	r0, #3
   2ec88:	movt	r1, #3
   2ec8c:	movt	r3, #3
   2ec90:	bl	12bc4 <__assert_fail@plt>

0002ec94 <flatcc_builder_append_union_vector@@Base>:
   2ec94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ec98:	add	fp, sp, #24
   2ec9c:	sub	sp, sp, #8
   2eca0:	mov	r6, r0
   2eca4:	ldr	r0, [r0, #32]
   2eca8:	mov	r8, r1
   2ecac:	ldrh	r1, [r0, #14]
   2ecb0:	cmp	r1, #7
   2ecb4:	bne	2edb8 <flatcc_builder_append_union_vector@@Base+0x124>
   2ecb8:	ldr	r1, [r0, #20]
   2ecbc:	mov	r5, r2
   2ecc0:	adds	r1, r1, r2
   2ecc4:	cmpcc	r1, #536870912	; 0x20000000
   2ecc8:	bcc	2ecec <flatcc_builder_append_union_vector@@Base+0x58>
   2eccc:	movw	r0, #24541	; 0x5fdd
   2ecd0:	movw	r1, #20270	; 0x4f2e
   2ecd4:	movw	r3, #24568	; 0x5ff8
   2ecd8:	mov	r2, #892	; 0x37c
   2ecdc:	movt	r0, #3
   2ece0:	movt	r1, #3
   2ece4:	movt	r3, #3
   2ece8:	bl	12bc4 <__assert_fail@plt>
   2ecec:	str	r1, [r0, #20]
   2ecf0:	ldr	r4, [r6, #20]
   2ecf4:	ldr	r0, [r6, #24]
   2ecf8:	add	r1, r4, r5, lsl #3
   2ecfc:	cmp	r1, r0
   2ed00:	str	r1, [r6, #20]
   2ed04:	bcs	2ed30 <flatcc_builder_append_union_vector@@Base+0x9c>
   2ed08:	ldr	r0, [r6, #16]
   2ed0c:	adds	r7, r0, r4
   2ed10:	beq	2eda8 <flatcc_builder_append_union_vector@@Base+0x114>
   2ed14:	lsl	r2, r5, #3
   2ed18:	mov	r0, r7
   2ed1c:	mov	r1, r8
   2ed20:	bl	12ab0 <memcpy@plt>
   2ed24:	mov	r0, r7
   2ed28:	sub	sp, fp, #24
   2ed2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ed30:	ldr	r2, [r6, #28]
   2ed34:	ldr	r0, [r6, #40]	; 0x28
   2ed38:	ldr	r7, [r6, #48]	; 0x30
   2ed3c:	mov	r3, #1
   2ed40:	str	r3, [sp]
   2ed44:	mov	r3, #1
   2ed48:	add	r1, r1, r2
   2ed4c:	add	r2, r1, #1
   2ed50:	add	r1, r6, #60	; 0x3c
   2ed54:	blx	r7
   2ed58:	mov	r7, #0
   2ed5c:	cmp	r0, #0
   2ed60:	beq	2ed70 <flatcc_builder_append_union_vector@@Base+0xdc>
   2ed64:	mov	r0, r7
   2ed68:	sub	sp, fp, #24
   2ed6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ed70:	ldr	r1, [r6, #28]
   2ed74:	ldr	r0, [r6, #60]	; 0x3c
   2ed78:	ldr	r3, [r6, #64]	; 0x40
   2ed7c:	ldr	r2, [r6, #32]
   2ed80:	add	r0, r0, r1
   2ed84:	sub	r1, r3, r1
   2ed88:	mvn	r3, #3
   2ed8c:	cmn	r1, #4
   2ed90:	str	r0, [r6, #16]
   2ed94:	movcs	r1, r3
   2ed98:	str	r1, [r6, #24]
   2ed9c:	str	r3, [r2, #4]
   2eda0:	adds	r7, r0, r4
   2eda4:	bne	2ed14 <flatcc_builder_append_union_vector@@Base+0x80>
   2eda8:	mov	r7, #0
   2edac:	mov	r0, r7
   2edb0:	sub	sp, fp, #24
   2edb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2edb8:	movw	r0, #23376	; 0x5b50
   2edbc:	movw	r1, #20270	; 0x4f2e
   2edc0:	movw	r3, #23687	; 0x5c87
   2edc4:	movw	r2, #1692	; 0x69c
   2edc8:	movt	r0, #3
   2edcc:	movt	r1, #3
   2edd0:	movt	r3, #3
   2edd4:	bl	12bc4 <__assert_fail@plt>

0002edd8 <flatcc_builder_create_string@@Base>:
   2edd8:	push	{r4, r5, r6, sl, fp, lr}
   2eddc:	add	fp, sp, #16
   2ede0:	sub	sp, sp, #80	; 0x50
   2ede4:	str	r2, [fp, #-20]	; 0xffffffec
   2ede8:	mvn	r5, r2
   2edec:	mov	r6, r0
   2edf0:	sub	r3, fp, #20
   2edf4:	cmp	r2, #0
   2edf8:	add	lr, sp, #4
   2edfc:	ldr	ip, [r0, #136]	; 0x88
   2ee00:	mov	r0, #4
   2ee04:	str	r0, [sp, #16]
   2ee08:	str	r3, [sp, #12]
   2ee0c:	mov	r3, #1
   2ee10:	str	r0, [sp, #4]
   2ee14:	addne	r0, r2, #4
   2ee18:	str	r3, [sp, #8]
   2ee1c:	strne	r2, [sp, #24]
   2ee20:	movw	r2, #19740	; 0x4d1c
   2ee24:	movne	r3, #2
   2ee28:	strne	r1, [sp, #20]
   2ee2c:	strne	r3, [sp, #8]
   2ee30:	strne	r0, [sp, #4]
   2ee34:	movt	r2, #3
   2ee38:	add	r5, ip, r5
   2ee3c:	and	r5, r5, #3
   2ee40:	add	r5, r5, #1
   2ee44:	add	r1, r0, r5
   2ee48:	add	r0, lr, r3, lsl #3
   2ee4c:	str	r1, [sp, #4]
   2ee50:	cmp	r1, #0
   2ee54:	str	r2, [r0, #8]
   2ee58:	add	r2, r3, #1
   2ee5c:	str	r5, [r0, #12]
   2ee60:	str	r2, [sp, #8]
   2ee64:	ble	2eeb8 <flatcc_builder_create_string@@Base+0xe0>
   2ee68:	ldr	r0, [r6, #36]	; 0x24
   2ee6c:	ldr	r4, [r6, #44]	; 0x2c
   2ee70:	sub	r5, ip, r1
   2ee74:	str	r1, [sp]
   2ee78:	add	r1, lr, #8
   2ee7c:	mov	r3, r5
   2ee80:	blx	r4
   2ee84:	cmp	r0, #0
   2ee88:	streq	r5, [r6, #136]	; 0x88
   2ee8c:	moveq	r0, r5
   2ee90:	subeq	sp, fp, #16
   2ee94:	popeq	{r4, r5, r6, sl, fp, pc}
   2ee98:	movw	r0, #24788	; 0x60d4
   2ee9c:	movw	r1, #20270	; 0x4f2e
   2eea0:	movw	r3, #24467	; 0x5f93
   2eea4:	movw	r2, #651	; 0x28b
   2eea8:	movt	r0, #3
   2eeac:	movt	r1, #3
   2eeb0:	movt	r3, #3
   2eeb4:	bl	12bc4 <__assert_fail@plt>
   2eeb8:	movw	r0, #24788	; 0x60d4
   2eebc:	movw	r1, #20270	; 0x4f2e
   2eec0:	movw	r3, #24467	; 0x5f93
   2eec4:	movw	r2, #647	; 0x287
   2eec8:	movt	r0, #3
   2eecc:	movt	r1, #3
   2eed0:	movt	r3, #3
   2eed4:	bl	12bc4 <__assert_fail@plt>

0002eed8 <flatcc_builder_create_string_str@@Base>:
   2eed8:	push	{r4, r5, fp, lr}
   2eedc:	add	fp, sp, #8
   2eee0:	mov	r5, r0
   2eee4:	mov	r0, r1
   2eee8:	mov	r4, r1
   2eeec:	bl	12b40 <strlen@plt>
   2eef0:	mov	r2, r0
   2eef4:	mov	r0, r5
   2eef8:	mov	r1, r4
   2eefc:	pop	{r4, r5, fp, lr}
   2ef00:	b	2edd8 <flatcc_builder_create_string@@Base>

0002ef04 <flatcc_builder_create_string_strn@@Base>:
   2ef04:	push	{r4, r5, r6, sl, fp, lr}
   2ef08:	add	fp, sp, #16
   2ef0c:	mov	r6, r0
   2ef10:	mov	r5, r1
   2ef14:	mov	r0, r1
   2ef18:	mov	r1, #0
   2ef1c:	mov	r4, r2
   2ef20:	bl	12b7c <memchr@plt>
   2ef24:	cmp	r0, #0
   2ef28:	mov	r1, r5
   2ef2c:	subne	r4, r0, r5
   2ef30:	mov	r0, r6
   2ef34:	mov	r2, r4
   2ef38:	pop	{r4, r5, r6, sl, fp, lr}
   2ef3c:	b	2edd8 <flatcc_builder_create_string@@Base>

0002ef40 <flatcc_builder_end_string@@Base>:
   2ef40:	push	{r4, r5, fp, lr}
   2ef44:	add	fp, sp, #8
   2ef48:	mov	r4, r0
   2ef4c:	ldr	r0, [r0, #32]
   2ef50:	ldrh	r1, [r0, #14]
   2ef54:	cmp	r1, #6
   2ef58:	bne	2f000 <flatcc_builder_end_string@@Base+0xc0>
   2ef5c:	ldr	r2, [r0, #20]
   2ef60:	ldr	r0, [r4, #20]
   2ef64:	cmp	r2, r0
   2ef68:	bne	2f020 <flatcc_builder_end_string@@Base+0xe0>
   2ef6c:	ldr	r1, [r4, #16]
   2ef70:	mov	r0, r4
   2ef74:	bl	2edd8 <flatcc_builder_create_string@@Base>
   2ef78:	mov	r5, r0
   2ef7c:	cmp	r0, #0
   2ef80:	beq	2eff8 <flatcc_builder_end_string@@Base+0xb8>
   2ef84:	ldr	r0, [r4, #16]
   2ef88:	ldr	r2, [r4, #20]
   2ef8c:	mov	r1, #0
   2ef90:	bl	12b64 <memset@plt>
   2ef94:	ldr	r0, [r4, #32]
   2ef98:	ldr	r1, [r4, #60]	; 0x3c
   2ef9c:	ldr	ip, [r4, #64]	; 0x40
   2efa0:	ldr	r3, [r0, #8]
   2efa4:	str	r3, [r4, #20]
   2efa8:	ldr	r3, [r0]
   2efac:	str	r3, [r4, #28]
   2efb0:	add	r1, r1, r3
   2efb4:	ldr	r2, [r0, #4]
   2efb8:	str	r1, [r4, #16]
   2efbc:	sub	r1, ip, r3
   2efc0:	cmp	r1, r2
   2efc4:	movhi	r1, r2
   2efc8:	str	r1, [r4, #24]
   2efcc:	ldrh	r1, [r4, #130]	; 0x82
   2efd0:	ldrh	r2, [r4, #128]	; 0x80
   2efd4:	cmp	r2, r1
   2efd8:	strhcc	r1, [r4, #128]	; 0x80
   2efdc:	ldrh	r1, [r0, #12]
   2efe0:	sub	r0, r0, #36	; 0x24
   2efe4:	str	r0, [r4, #32]
   2efe8:	strh	r1, [r4, #130]	; 0x82
   2efec:	ldr	r0, [r4, #156]	; 0x9c
   2eff0:	sub	r0, r0, #1
   2eff4:	str	r0, [r4, #156]	; 0x9c
   2eff8:	mov	r0, r5
   2effc:	pop	{r4, r5, fp, pc}
   2f000:	movw	r0, #21587	; 0x5453
   2f004:	movw	r1, #20270	; 0x4f2e
   2f008:	movw	r3, #23814	; 0x5d06
   2f00c:	movw	r2, #1732	; 0x6c4
   2f010:	movt	r0, #3
   2f014:	movt	r1, #3
   2f018:	movt	r3, #3
   2f01c:	bl	12bc4 <__assert_fail@plt>
   2f020:	movw	r0, #23881	; 0x5d49
   2f024:	movw	r1, #20270	; 0x4f2e
   2f028:	movw	r3, #23814	; 0x5d06
   2f02c:	movw	r2, #1733	; 0x6c5
   2f030:	movt	r0, #3
   2f034:	movt	r1, #3
   2f038:	movt	r3, #3
   2f03c:	bl	12bc4 <__assert_fail@plt>

0002f040 <flatcc_builder_string_edit@@Base>:
   2f040:	ldr	r0, [r0, #16]
   2f044:	bx	lr

0002f048 <flatcc_builder_string_len@@Base>:
   2f048:	ldr	r0, [r0, #32]
   2f04c:	ldr	r0, [r0, #20]
   2f050:	bx	lr

0002f054 <flatcc_builder_table_edit@@Base>:
   2f054:	push	{fp, lr}
   2f058:	mov	fp, sp
   2f05c:	ldr	r2, [r0, #32]
   2f060:	ldrh	r2, [r2, #14]
   2f064:	cmp	r2, #3
   2f068:	ldreq	r2, [r0, #16]
   2f06c:	ldreq	r0, [r0, #20]
   2f070:	addeq	r0, r2, r0
   2f074:	subeq	r0, r0, r1
   2f078:	popeq	{fp, pc}
   2f07c:	movw	r0, #22339	; 0x5743
   2f080:	movw	r1, #20270	; 0x4f2e
   2f084:	movw	r3, #24059	; 0x5dfb
   2f088:	movw	r2, #1794	; 0x702
   2f08c:	movt	r0, #3
   2f090:	movt	r1, #3
   2f094:	movt	r3, #3
   2f098:	bl	12bc4 <__assert_fail@plt>

0002f09c <flatcc_builder_table_add_copy@@Base>:
   2f09c:	push	{r4, r5, r6, sl, fp, lr}
   2f0a0:	add	fp, sp, #16
   2f0a4:	mov	r4, r3
   2f0a8:	ldr	r3, [fp, #8]
   2f0ac:	mov	r5, r2
   2f0b0:	mov	r2, r4
   2f0b4:	bl	2e0e0 <flatcc_builder_table_add@@Base>
   2f0b8:	mov	r6, r0
   2f0bc:	cmp	r0, #0
   2f0c0:	beq	2f0d4 <flatcc_builder_table_add_copy@@Base+0x38>
   2f0c4:	mov	r0, r6
   2f0c8:	mov	r1, r5
   2f0cc:	mov	r2, r4
   2f0d0:	bl	12ab0 <memcpy@plt>
   2f0d4:	mov	r0, r6
   2f0d8:	pop	{r4, r5, r6, sl, fp, pc}

0002f0dc <flatcc_builder_push_buffer_alignment@@Base>:
   2f0dc:	ldrh	r1, [r0, #128]	; 0x80
   2f0e0:	mov	r2, #4
   2f0e4:	strh	r2, [r0, #128]	; 0x80
   2f0e8:	mov	r0, r1
   2f0ec:	bx	lr

0002f0f0 <flatcc_builder_pop_buffer_alignment@@Base>:
   2f0f0:	ldrh	r2, [r0, #128]	; 0x80
   2f0f4:	cmp	r2, r1
   2f0f8:	strhcc	r1, [r0, #128]	; 0x80
   2f0fc:	bx	lr

0002f100 <flatcc_builder_get_buffer_alignment@@Base>:
   2f100:	ldrh	r0, [r0, #128]	; 0x80
   2f104:	bx	lr

0002f108 <flatcc_builder_set_vtable_clustering@@Base>:
   2f108:	clz	r1, r1
   2f10c:	lsr	r1, r1, #5
   2f110:	str	r1, [r0, #180]	; 0xb4
   2f114:	bx	lr

0002f118 <flatcc_builder_set_block_align@@Base>:
   2f118:	strh	r1, [r0, #132]	; 0x84
   2f11c:	bx	lr

0002f120 <flatcc_builder_get_level@@Base>:
   2f120:	ldr	r0, [r0, #156]	; 0x9c
   2f124:	bx	lr

0002f128 <flatcc_builder_set_max_level@@Base>:
   2f128:	str	r1, [r0, #176]	; 0xb0
   2f12c:	ldr	r2, [r0, #160]	; 0xa0
   2f130:	cmp	r2, r1
   2f134:	strlt	r1, [r0, #160]	; 0xa0
   2f138:	bx	lr

0002f13c <flatcc_builder_get_buffer_size@@Base>:
   2f13c:	ldr	r1, [r0, #136]	; 0x88
   2f140:	ldr	r0, [r0, #140]	; 0x8c
   2f144:	sub	r0, r0, r1
   2f148:	bx	lr

0002f14c <flatcc_builder_get_buffer_start@@Base>:
   2f14c:	ldr	r0, [r0, #136]	; 0x88
   2f150:	bx	lr

0002f154 <flatcc_builder_get_buffer_end@@Base>:
   2f154:	ldr	r0, [r0, #140]	; 0x8c
   2f158:	bx	lr

0002f15c <flatcc_builder_set_vtable_cache_limit@@Base>:
   2f15c:	str	r1, [r0, #172]	; 0xac
   2f160:	bx	lr

0002f164 <flatcc_builder_set_identifier@@Base>:
   2f164:	movw	r2, #19740	; 0x4d1c
   2f168:	cmp	r1, #0
   2f16c:	movt	r2, #3
   2f170:	movne	r2, r1
   2f174:	ldr	r1, [r2]
   2f178:	str	r1, [r0, #168]	; 0xa8
   2f17c:	bx	lr

0002f180 <flatcc_builder_get_type@@Base>:
   2f180:	ldr	r0, [r0, #32]
   2f184:	cmp	r0, #0
   2f188:	ldrhne	r0, [r0, #14]
   2f18c:	moveq	r0, #0
   2f190:	bx	lr

0002f194 <flatcc_builder_get_type_at@@Base>:
   2f194:	mov	r2, r0
   2f198:	mov	r0, #0
   2f19c:	cmp	r1, #1
   2f1a0:	blt	2f1c4 <flatcc_builder_get_type_at@@Base+0x30>
   2f1a4:	ldr	r3, [r2, #156]	; 0x9c
   2f1a8:	cmp	r3, r1
   2f1ac:	bxlt	lr
   2f1b0:	sub	r0, r1, r3
   2f1b4:	ldr	r1, [r2, #32]
   2f1b8:	add	r0, r0, r0, lsl #3
   2f1bc:	add	r0, r1, r0, lsl #2
   2f1c0:	ldrh	r0, [r0, #14]
   2f1c4:	bx	lr

0002f1c8 <flatcc_builder_get_direct_buffer@@Base>:
   2f1c8:	ldr	r2, [r0, #184]	; 0xb8
   2f1cc:	cmp	r2, #0
   2f1d0:	beq	2f1e4 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   2f1d4:	ldr	r2, [r0, #188]	; 0xbc
   2f1d8:	ldr	r3, [r0, #192]	; 0xc0
   2f1dc:	cmp	r2, r3
   2f1e0:	beq	2f1fc <flatcc_builder_get_direct_buffer@@Base+0x34>
   2f1e4:	cmp	r1, #0
   2f1e8:	moveq	r0, #0
   2f1ec:	bxeq	lr
   2f1f0:	mov	r0, #0
   2f1f4:	str	r0, [r1]
   2f1f8:	bx	lr
   2f1fc:	cmp	r1, #0
   2f200:	ldrne	r2, [r0, #212]	; 0xd4
   2f204:	strne	r2, [r1]
   2f208:	ldr	r0, [r0, #196]	; 0xc4
   2f20c:	bx	lr

0002f210 <flatcc_builder_copy_buffer@@Base>:
   2f210:	push	{fp, lr}
   2f214:	mov	fp, sp
   2f218:	ldr	r3, [r0, #184]	; 0xb8
   2f21c:	cmp	r3, #0
   2f220:	beq	2f254 <flatcc_builder_copy_buffer@@Base+0x44>
   2f224:	add	r0, r0, #188	; 0xbc
   2f228:	bl	2f954 <flatcc_emitter_copy_buffer@@Base>
   2f22c:	cmp	r0, #0
   2f230:	popne	{fp, pc}
   2f234:	movw	r0, #20866	; 0x5182
   2f238:	movw	r1, #20270	; 0x4f2e
   2f23c:	movw	r3, #24198	; 0x5e86
   2f240:	movw	r2, #1926	; 0x786
   2f244:	movt	r0, #3
   2f248:	movt	r1, #3
   2f24c:	movt	r3, #3
   2f250:	bl	12bc4 <__assert_fail@plt>
   2f254:	mov	r0, #0
   2f258:	pop	{fp, pc}

0002f25c <flatcc_builder_finalize_buffer@@Base>:
   2f25c:	push	{r4, r5, r6, sl, fp, lr}
   2f260:	add	fp, sp, #16
   2f264:	mov	r5, r0
   2f268:	ldr	r0, [r0, #136]	; 0x88
   2f26c:	cmp	r1, #0
   2f270:	ldr	r2, [r5, #140]	; 0x8c
   2f274:	sub	r4, r2, r0
   2f278:	mov	r0, r4
   2f27c:	strne	r4, [r1]
   2f280:	bl	12b04 <malloc@plt>
   2f284:	cmp	r0, #0
   2f288:	beq	2f2d8 <flatcc_builder_finalize_buffer@@Base+0x7c>
   2f28c:	mov	r6, r0
   2f290:	ldr	r0, [r5, #184]	; 0xb8
   2f294:	cmp	r0, #0
   2f298:	beq	2f2f8 <flatcc_builder_finalize_buffer@@Base+0x9c>
   2f29c:	add	r0, r5, #188	; 0xbc
   2f2a0:	mov	r1, r6
   2f2a4:	mov	r2, r4
   2f2a8:	bl	2f954 <flatcc_emitter_copy_buffer@@Base>
   2f2ac:	cmp	r0, #0
   2f2b0:	movne	r0, r6
   2f2b4:	popne	{r4, r5, r6, sl, fp, pc}
   2f2b8:	movw	r0, #20866	; 0x5182
   2f2bc:	movw	r1, #20270	; 0x4f2e
   2f2c0:	movw	r3, #24198	; 0x5e86
   2f2c4:	movw	r2, #1926	; 0x786
   2f2c8:	movt	r0, #3
   2f2cc:	movt	r1, #3
   2f2d0:	movt	r3, #3
   2f2d4:	bl	12bc4 <__assert_fail@plt>
   2f2d8:	movw	r0, #24788	; 0x60d4
   2f2dc:	movw	r1, #20270	; 0x4f2e
   2f2e0:	movw	r3, #24267	; 0x5ecb
   2f2e4:	movw	r2, #1944	; 0x798
   2f2e8:	movt	r0, #3
   2f2ec:	movt	r1, #3
   2f2f0:	movt	r3, #3
   2f2f4:	bl	12bc4 <__assert_fail@plt>
   2f2f8:	movw	r0, #24788	; 0x60d4
   2f2fc:	movw	r1, #20270	; 0x4f2e
   2f300:	movw	r3, #24267	; 0x5ecb
   2f304:	movw	r2, #1948	; 0x79c
   2f308:	movt	r0, #3
   2f30c:	movt	r1, #3
   2f310:	movt	r3, #3
   2f314:	bl	12bc4 <__assert_fail@plt>

0002f318 <flatcc_builder_finalize_aligned_buffer@@Base>:
   2f318:	push	{r4, r5, r6, r7, fp, lr}
   2f31c:	add	fp, sp, #16
   2f320:	sub	sp, sp, #8
   2f324:	mov	r5, r0
   2f328:	mov	r4, r1
   2f32c:	ldr	r0, [r0, #136]	; 0x88
   2f330:	ldr	r1, [r5, #140]	; 0x8c
   2f334:	cmp	r4, #0
   2f338:	sub	r0, r1, r0
   2f33c:	mov	r1, #0
   2f340:	strne	r0, [r4]
   2f344:	ldrh	r2, [r5, #128]	; 0x80
   2f348:	str	r1, [sp, #4]
   2f34c:	add	r0, r0, r2
   2f350:	cmp	r2, #4
   2f354:	mov	r1, r2
   2f358:	rsb	r2, r2, #0
   2f35c:	sub	r0, r0, #1
   2f360:	movls	r1, #4
   2f364:	and	r7, r0, r2
   2f368:	add	r0, sp, #4
   2f36c:	mov	r2, r7
   2f370:	bl	12b58 <posix_memalign@plt>
   2f374:	ldr	r6, [sp, #4]
   2f378:	cmp	r0, #0
   2f37c:	cmpne	r6, #0
   2f380:	bne	2f3bc <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   2f384:	cmp	r6, #0
   2f388:	beq	2f3c4 <flatcc_builder_finalize_aligned_buffer@@Base+0xac>
   2f38c:	ldr	r0, [r5, #184]	; 0xb8
   2f390:	cmp	r0, #0
   2f394:	beq	2f3bc <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   2f398:	add	r0, r5, #188	; 0xbc
   2f39c:	mov	r1, r6
   2f3a0:	mov	r2, r7
   2f3a4:	bl	2f954 <flatcc_emitter_copy_buffer@@Base>
   2f3a8:	cmp	r0, #0
   2f3ac:	beq	2f3dc <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   2f3b0:	mov	r0, r6
   2f3b4:	sub	sp, fp, #16
   2f3b8:	pop	{r4, r5, r6, r7, fp, pc}
   2f3bc:	mov	r0, r6
   2f3c0:	bl	12aa4 <free@plt>
   2f3c4:	mov	r6, #0
   2f3c8:	cmp	r4, #0
   2f3cc:	strne	r6, [r4]
   2f3d0:	mov	r0, r6
   2f3d4:	sub	sp, fp, #16
   2f3d8:	pop	{r4, r5, r6, r7, fp, pc}
   2f3dc:	movw	r0, #20866	; 0x5182
   2f3e0:	movw	r1, #20270	; 0x4f2e
   2f3e4:	movw	r3, #24198	; 0x5e86
   2f3e8:	movw	r2, #1926	; 0x786
   2f3ec:	movt	r0, #3
   2f3f0:	movt	r1, #3
   2f3f4:	movt	r3, #3
   2f3f8:	bl	12bc4 <__assert_fail@plt>

0002f3fc <flatcc_builder_aligned_alloc@@Base>:
   2f3fc:	push	{fp, lr}
   2f400:	mov	fp, sp
   2f404:	sub	sp, sp, #8
   2f408:	mov	r2, r1
   2f40c:	mov	r1, r0
   2f410:	mov	r0, #0
   2f414:	cmp	r1, #4
   2f418:	str	r0, [sp, #4]
   2f41c:	add	r0, sp, #4
   2f420:	movls	r1, #4
   2f424:	bl	12b58 <posix_memalign@plt>
   2f428:	mov	r1, r0
   2f42c:	ldr	r0, [sp, #4]
   2f430:	cmp	r1, #0
   2f434:	cmpne	r0, #0
   2f438:	bne	2f444 <flatcc_builder_aligned_alloc@@Base+0x48>
   2f43c:	mov	sp, fp
   2f440:	pop	{fp, pc}
   2f444:	bl	12aa4 <free@plt>
   2f448:	mov	r0, #0
   2f44c:	str	r0, [sp, #4]
   2f450:	mov	sp, fp
   2f454:	pop	{fp, pc}

0002f458 <flatcc_builder_aligned_free@@Base>:
   2f458:	b	12aa4 <free@plt>

0002f45c <flatcc_builder_get_emit_context@@Base>:
   2f45c:	ldr	r0, [r0, #36]	; 0x24
   2f460:	bx	lr

0002f464 <flatcc_emitter_recycle_page@@Base>:
   2f464:	ldr	r3, [r0]
   2f468:	mov	r2, r0
   2f46c:	mvn	r0, #0
   2f470:	cmp	r3, r1
   2f474:	beq	2f4b4 <flatcc_emitter_recycle_page@@Base+0x50>
   2f478:	ldr	r2, [r2, #4]
   2f47c:	cmp	r2, r1
   2f480:	bxeq	lr
   2f484:	ldr	r0, [r1, #2944]	; 0xb80
   2f488:	ldr	r2, [r1, #2948]	; 0xb84
   2f48c:	str	r2, [r0, #2948]	; 0xb84
   2f490:	ldr	r2, [r1, #2948]	; 0xb84
   2f494:	str	r0, [r2, #2944]	; 0xb80
   2f498:	ldr	r0, [r3, #2948]	; 0xb84
   2f49c:	str	r3, [r1, #2944]	; 0xb80
   2f4a0:	str	r0, [r1, #2948]	; 0xb84
   2f4a4:	str	r1, [r0, #2944]	; 0xb80
   2f4a8:	ldr	r0, [r1, #2944]	; 0xb80
   2f4ac:	str	r1, [r0, #2948]	; 0xb84
   2f4b0:	mov	r0, #0
   2f4b4:	bx	lr

0002f4b8 <flatcc_emitter_reset@@Base>:
   2f4b8:	push	{r4, sl, fp, lr}
   2f4bc:	add	fp, sp, #8
   2f4c0:	ldr	r1, [r0]
   2f4c4:	cmp	r1, #0
   2f4c8:	beq	2f580 <flatcc_emitter_reset@@Base+0xc8>
   2f4cc:	mov	r4, r0
   2f4d0:	add	r2, r1, #1472	; 0x5c0
   2f4d4:	mov	r0, #1472	; 0x5c0
   2f4d8:	mov	r3, #0
   2f4dc:	stmib	r4, {r1, r2}
   2f4e0:	str	r0, [r4, #12]
   2f4e4:	str	r2, [r4, #16]
   2f4e8:	str	r0, [r4, #20]
   2f4ec:	movw	r0, #64064	; 0xfa40
   2f4f0:	movt	r0, #65535	; 0xffff
   2f4f4:	str	r0, [r1, #2952]	; 0xb88
   2f4f8:	ldr	r2, [r4, #32]
   2f4fc:	ldr	r0, [r4, #24]
   2f500:	cmp	r2, #0
   2f504:	moveq	r2, r0
   2f508:	streq	r0, [r4, #32]
   2f50c:	str	r3, [r4, #24]
   2f510:	add	r2, r2, r2, lsl #1
   2f514:	lsr	r2, r2, #2
   2f518:	add	r0, r2, r0, lsr #2
   2f51c:	str	r0, [r4, #32]
   2f520:	ldr	r2, [r4, #28]
   2f524:	cmp	r2, r0, lsl #1
   2f528:	bls	2f580 <flatcc_emitter_reset@@Base+0xc8>
   2f52c:	mov	r2, r1
   2f530:	ldr	r0, [r2, #2944]!	; 0xb80
   2f534:	cmp	r0, r1
   2f538:	popeq	{r4, sl, fp, pc}
   2f53c:	ldr	r3, [r0, #2944]	; 0xb80
   2f540:	str	r3, [r2]
   2f544:	ldr	r2, [r0, #2944]	; 0xb80
   2f548:	str	r1, [r2, #2948]	; 0xb84
   2f54c:	bl	12aa4 <free@plt>
   2f550:	ldr	r0, [r4, #28]
   2f554:	ldr	r1, [r4, #32]
   2f558:	sub	r0, r0, #2944	; 0xb80
   2f55c:	cmp	r0, r1, lsl #1
   2f560:	str	r0, [r4, #28]
   2f564:	bls	2f580 <flatcc_emitter_reset@@Base+0xc8>
   2f568:	ldr	r1, [r4, #4]
   2f56c:	ldr	r3, [r4]
   2f570:	mov	r2, r1
   2f574:	ldr	r0, [r2, #2944]!	; 0xb80
   2f578:	cmp	r0, r3
   2f57c:	bne	2f53c <flatcc_emitter_reset@@Base+0x84>
   2f580:	pop	{r4, sl, fp, pc}

0002f584 <flatcc_emitter_clear@@Base>:
   2f584:	push	{r4, r5, r6, sl, fp, lr}
   2f588:	add	fp, sp, #16
   2f58c:	ldr	r5, [r0]
   2f590:	cmp	r5, #0
   2f594:	beq	2f5ec <flatcc_emitter_clear@@Base+0x68>
   2f598:	mov	r4, r0
   2f59c:	ldr	r0, [r5, #2948]	; 0xb84
   2f5a0:	mov	r6, #0
   2f5a4:	str	r6, [r0, #2944]	; 0xb80
   2f5a8:	ldr	r0, [r5, #2944]	; 0xb80
   2f5ac:	cmp	r0, #0
   2f5b0:	beq	2f5cc <flatcc_emitter_clear@@Base+0x48>
   2f5b4:	mov	r5, r0
   2f5b8:	ldr	r0, [r0, #2948]	; 0xb84
   2f5bc:	bl	12aa4 <free@plt>
   2f5c0:	ldr	r0, [r5, #2944]	; 0xb80
   2f5c4:	cmp	r0, #0
   2f5c8:	bne	2f5b4 <flatcc_emitter_clear@@Base+0x30>
   2f5cc:	mov	r0, r5
   2f5d0:	bl	12aa4 <free@plt>
   2f5d4:	vmov.i32	q8, #0	; 0x00000000
   2f5d8:	add	r0, r4, #16
   2f5dc:	vst1.32	{d16-d17}, [r0]
   2f5e0:	mov	r0, #32
   2f5e4:	vst1.32	{d16-d17}, [r4], r0
   2f5e8:	str	r6, [r4]
   2f5ec:	pop	{r4, r5, r6, sl, fp, pc}

0002f5f0 <flatcc_emitter@@Base>:
   2f5f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f5f4:	add	fp, sp, #28
   2f5f8:	sub	sp, sp, #4
   2f5fc:	mov	r6, r0
   2f600:	mov	r7, r1
   2f604:	ldr	r0, [r0, #24]
   2f608:	ldr	r1, [fp, #8]
   2f60c:	mov	r4, r2
   2f610:	cmn	r3, #1
   2f614:	mov	r9, r6
   2f618:	add	r0, r0, r1
   2f61c:	str	r0, [r6, #24]
   2f620:	ble	2f788 <flatcc_emitter@@Base+0x198>
   2f624:	ldr	r0, [r9, #20]!
   2f628:	cmp	r0, r1
   2f62c:	bcs	2f8e8 <flatcc_emitter@@Base+0x2f8>
   2f630:	mov	r8, #0
   2f634:	cmp	r4, #0
   2f638:	beq	2f948 <flatcc_emitter@@Base+0x358>
   2f63c:	movw	sl, #64064	; 0xfa40
   2f640:	movt	sl, #65535	; 0xffff
   2f644:	ldr	r8, [r7, #4]
   2f648:	cmp	r8, #0
   2f64c:	beq	2f76c <flatcc_emitter@@Base+0x17c>
   2f650:	ldr	r9, [r7]
   2f654:	cmp	r8, r0
   2f658:	mov	r5, r8
   2f65c:	bls	2f668 <flatcc_emitter@@Base+0x78>
   2f660:	b	2f6a8 <flatcc_emitter@@Base+0xb8>
   2f664:	mov	r5, r8
   2f668:	ldr	r0, [r6, #16]
   2f66c:	mov	r1, r9
   2f670:	mov	r2, r5
   2f674:	bl	12ab0 <memcpy@plt>
   2f678:	ldr	r0, [r6, #16]
   2f67c:	ldr	r1, [r6, #20]
   2f680:	add	r9, r9, r5
   2f684:	subs	r8, r8, r5
   2f688:	add	r2, r0, r5
   2f68c:	sub	r0, r1, r5
   2f690:	str	r2, [r6, #16]
   2f694:	str	r0, [r6, #20]
   2f698:	beq	2f76c <flatcc_emitter@@Base+0x17c>
   2f69c:	cmp	r8, r0
   2f6a0:	mov	r5, r8
   2f6a4:	bls	2f668 <flatcc_emitter@@Base+0x78>
   2f6a8:	mov	r5, r0
   2f6ac:	cmp	r5, #0
   2f6b0:	beq	2f6fc <flatcc_emitter@@Base+0x10c>
   2f6b4:	b	2f668 <flatcc_emitter@@Base+0x78>
   2f6b8:	ldr	r1, [r6]
   2f6bc:	str	r1, [r0, #2944]	; 0xb80
   2f6c0:	str	r5, [r0, #2948]	; 0xb84
   2f6c4:	str	r0, [r1, #2948]	; 0xb84
   2f6c8:	str	r0, [r5, #2944]	; 0xb80
   2f6cc:	mov	r5, #2944	; 0xb80
   2f6d0:	str	r0, [r6, #4]
   2f6d4:	str	r0, [r6, #16]
   2f6d8:	str	r5, [r6, #20]
   2f6dc:	ldr	r1, [r0, #2948]	; 0xb84
   2f6e0:	ldr	r1, [r1, #2952]	; 0xb88
   2f6e4:	add	r1, r1, #2944	; 0xb80
   2f6e8:	str	r1, [r0, #2952]	; 0xb88
   2f6ec:	cmp	r8, r5
   2f6f0:	bls	2f664 <flatcc_emitter@@Base+0x74>
   2f6f4:	cmp	r5, #0
   2f6f8:	bne	2f668 <flatcc_emitter@@Base+0x78>
   2f6fc:	ldr	r5, [r6, #4]
   2f700:	cmp	r5, #0
   2f704:	beq	2f718 <flatcc_emitter@@Base+0x128>
   2f708:	ldr	r0, [r5, #2944]	; 0xb80
   2f70c:	ldr	r1, [r6]
   2f710:	cmp	r0, r1
   2f714:	bne	2f6cc <flatcc_emitter@@Base+0xdc>
   2f718:	movw	r0, #2956	; 0xb8c
   2f71c:	bl	12b04 <malloc@plt>
   2f720:	cmp	r0, #0
   2f724:	beq	2f8f8 <flatcc_emitter@@Base+0x308>
   2f728:	ldr	r1, [r6, #28]
   2f72c:	cmp	r5, #0
   2f730:	add	r1, r1, #2944	; 0xb80
   2f734:	str	r1, [r6, #28]
   2f738:	bne	2f6b8 <flatcc_emitter@@Base+0xc8>
   2f73c:	add	r1, r0, #1472	; 0x5c0
   2f740:	mov	r5, #1472	; 0x5c0
   2f744:	str	r0, [r6]
   2f748:	stmib	r6, {r0, r1, r5}
   2f74c:	str	r1, [r6, #16]
   2f750:	str	r5, [r6, #20]
   2f754:	str	r0, [r0, #2944]	; 0xb80
   2f758:	str	r0, [r0, #2948]	; 0xb84
   2f75c:	str	sl, [r0, #2952]	; 0xb88
   2f760:	cmp	r8, r5
   2f764:	bhi	2f6f4 <flatcc_emitter@@Base+0x104>
   2f768:	b	2f664 <flatcc_emitter@@Base+0x74>
   2f76c:	subs	r4, r4, #1
   2f770:	add	r7, r7, #8
   2f774:	bne	2f644 <flatcc_emitter@@Base+0x54>
   2f778:	mov	r8, #0
   2f77c:	mov	r0, r8
   2f780:	sub	sp, fp, #28
   2f784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f788:	ldr	r0, [r9, #12]!
   2f78c:	cmp	r0, r1
   2f790:	bcs	2f908 <flatcc_emitter@@Base+0x318>
   2f794:	mov	r8, #0
   2f798:	cmp	r4, #0
   2f79c:	beq	2f948 <flatcc_emitter@@Base+0x358>
   2f7a0:	add	r0, r7, r4, lsl #3
   2f7a4:	ldr	sl, [r0, #-4]
   2f7a8:	sub	r1, r0, #8
   2f7ac:	str	r1, [sp]
   2f7b0:	cmp	sl, #0
   2f7b4:	beq	2f8d8 <flatcc_emitter@@Base+0x2e8>
   2f7b8:	ldr	r0, [sp]
   2f7bc:	ldr	r0, [r0]
   2f7c0:	add	r7, r0, sl
   2f7c4:	ldr	r1, [r9]
   2f7c8:	cmp	sl, r1
   2f7cc:	bhi	2f80c <flatcc_emitter@@Base+0x21c>
   2f7d0:	b	2f8a8 <flatcc_emitter@@Base+0x2b8>
   2f7d4:	ldr	r1, [r5, #2952]	; 0xb88
   2f7d8:	sub	r1, r1, #2944	; 0xb80
   2f7dc:	str	r1, [r0, #2952]	; 0xb88
   2f7e0:	mov	r1, #2944	; 0xb80
   2f7e4:	add	r2, r0, #2944	; 0xb80
   2f7e8:	str	r0, [r6]
   2f7ec:	str	r2, [r6, #8]
   2f7f0:	str	r1, [r6, #12]
   2f7f4:	ldr	r2, [r0, #2944]	; 0xb80
   2f7f8:	ldr	r2, [r2, #2952]	; 0xb88
   2f7fc:	sub	r2, r2, #2944	; 0xb80
   2f800:	str	r2, [r0, #2952]	; 0xb88
   2f804:	cmp	sl, r1
   2f808:	bls	2f8a8 <flatcc_emitter@@Base+0x2b8>
   2f80c:	cmp	r1, #0
   2f810:	mov	r5, r1
   2f814:	bne	2f8ac <flatcc_emitter@@Base+0x2bc>
   2f818:	ldr	r5, [r6]
   2f81c:	cmp	r5, #0
   2f820:	beq	2f834 <flatcc_emitter@@Base+0x244>
   2f824:	ldr	r0, [r5, #2948]	; 0xb84
   2f828:	ldr	r1, [r6, #4]
   2f82c:	cmp	r0, r1
   2f830:	bne	2f7d4 <flatcc_emitter@@Base+0x1e4>
   2f834:	movw	r0, #2956	; 0xb8c
   2f838:	bl	12b04 <malloc@plt>
   2f83c:	cmp	r0, #0
   2f840:	beq	2f8f8 <flatcc_emitter@@Base+0x308>
   2f844:	ldr	r1, [r6, #28]
   2f848:	cmp	r5, #0
   2f84c:	add	r1, r1, #2944	; 0xb80
   2f850:	str	r1, [r6, #28]
   2f854:	beq	2f870 <flatcc_emitter@@Base+0x280>
   2f858:	ldr	r1, [r6, #4]
   2f85c:	str	r5, [r0, #2944]	; 0xb80
   2f860:	str	r1, [r0, #2948]	; 0xb84
   2f864:	str	r0, [r5, #2948]	; 0xb84
   2f868:	str	r0, [r1, #2944]	; 0xb80
   2f86c:	b	2f7e0 <flatcc_emitter@@Base+0x1f0>
   2f870:	add	r2, r0, #1472	; 0x5c0
   2f874:	mov	r1, #1472	; 0x5c0
   2f878:	str	r0, [r6]
   2f87c:	stmib	r6, {r0, r2}
   2f880:	str	r1, [r6, #12]
   2f884:	str	r2, [r6, #16]
   2f888:	movw	r2, #64064	; 0xfa40
   2f88c:	str	r1, [r6, #20]
   2f890:	str	r0, [r0, #2944]	; 0xb80
   2f894:	str	r0, [r0, #2948]	; 0xb84
   2f898:	movt	r2, #65535	; 0xffff
   2f89c:	str	r2, [r0, #2952]	; 0xb88
   2f8a0:	cmp	sl, r1
   2f8a4:	bhi	2f80c <flatcc_emitter@@Base+0x21c>
   2f8a8:	mov	r5, sl
   2f8ac:	sub	r0, r1, r5
   2f8b0:	sub	r7, r7, r5
   2f8b4:	mov	r2, r5
   2f8b8:	str	r0, [r6, #12]
   2f8bc:	mov	r1, r7
   2f8c0:	ldr	r0, [r6, #8]
   2f8c4:	sub	r0, r0, r5
   2f8c8:	str	r0, [r6, #8]
   2f8cc:	bl	12ab0 <memcpy@plt>
   2f8d0:	subs	sl, sl, r5
   2f8d4:	bne	2f7c4 <flatcc_emitter@@Base+0x1d4>
   2f8d8:	ldr	r0, [sp]
   2f8dc:	subs	r4, r4, #1
   2f8e0:	bne	2f7a4 <flatcc_emitter@@Base+0x1b4>
   2f8e4:	b	2f948 <flatcc_emitter@@Base+0x358>
   2f8e8:	ldr	r5, [r6, #16]
   2f8ec:	add	r2, r5, r1
   2f8f0:	str	r2, [r6, #16]
   2f8f4:	b	2f914 <flatcc_emitter@@Base+0x324>
   2f8f8:	mvn	r8, #0
   2f8fc:	mov	r0, r8
   2f900:	sub	sp, fp, #28
   2f904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f908:	ldr	r2, [r6, #8]
   2f90c:	sub	r5, r2, r1
   2f910:	str	r5, [r6, #8]
   2f914:	sub	r0, r0, r1
   2f918:	mov	r8, #0
   2f91c:	cmp	r4, #0
   2f920:	str	r0, [r9]
   2f924:	beq	2f948 <flatcc_emitter@@Base+0x358>
   2f928:	ldm	r7, {r1, r2}
   2f92c:	mov	r0, r5
   2f930:	bl	12ab0 <memcpy@plt>
   2f934:	ldr	r0, [r7, #4]
   2f938:	add	r7, r7, #8
   2f93c:	subs	r4, r4, #1
   2f940:	add	r5, r5, r0
   2f944:	bne	2f928 <flatcc_emitter@@Base+0x338>
   2f948:	mov	r0, r8
   2f94c:	sub	sp, fp, #28
   2f950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002f954 <flatcc_emitter_copy_buffer@@Base>:
   2f954:	push	{r4, r5, r6, sl, fp, lr}
   2f958:	add	fp, sp, #16
   2f95c:	mov	r3, r2
   2f960:	ldr	r2, [r0, #24]
   2f964:	mov	r5, #0
   2f968:	cmp	r2, r3
   2f96c:	bhi	2f9f4 <flatcc_emitter_copy_buffer@@Base+0xa0>
   2f970:	mov	r4, r0
   2f974:	ldr	r0, [r0]
   2f978:	cmp	r0, #0
   2f97c:	beq	2f9f4 <flatcc_emitter_copy_buffer@@Base+0xa0>
   2f980:	mov	r6, r1
   2f984:	ldr	r1, [r4, #4]
   2f988:	cmp	r0, r1
   2f98c:	beq	2f9fc <flatcc_emitter_copy_buffer@@Base+0xa8>
   2f990:	ldr	r0, [r4, #12]
   2f994:	ldr	r1, [r4, #8]
   2f998:	rsb	r5, r0, #2944	; 0xb80
   2f99c:	mov	r0, r6
   2f9a0:	mov	r2, r5
   2f9a4:	bl	12ab0 <memcpy@plt>
   2f9a8:	ldm	r4, {r0, r1}
   2f9ac:	add	r5, r6, r5
   2f9b0:	ldr	r6, [r0, #2944]	; 0xb80
   2f9b4:	cmp	r6, r1
   2f9b8:	beq	2f9e0 <flatcc_emitter_copy_buffer@@Base+0x8c>
   2f9bc:	mov	r0, r5
   2f9c0:	mov	r1, r6
   2f9c4:	mov	r2, #2944	; 0xb80
   2f9c8:	bl	12ab0 <memcpy@plt>
   2f9cc:	ldr	r6, [r6, #2944]	; 0xb80
   2f9d0:	ldr	r0, [r4, #4]
   2f9d4:	add	r5, r5, #2944	; 0xb80
   2f9d8:	cmp	r6, r0
   2f9dc:	bne	2f9bc <flatcc_emitter_copy_buffer@@Base+0x68>
   2f9e0:	ldr	r0, [r4, #20]
   2f9e4:	mov	r1, r6
   2f9e8:	rsb	r2, r0, #2944	; 0xb80
   2f9ec:	mov	r0, r5
   2f9f0:	bl	12ab0 <memcpy@plt>
   2f9f4:	mov	r0, r5
   2f9f8:	pop	{r4, r5, r6, sl, fp, pc}
   2f9fc:	ldr	r1, [r4, #8]
   2fa00:	mov	r0, r6
   2fa04:	bl	12ab0 <memcpy@plt>
   2fa08:	mov	r0, r6
   2fa0c:	pop	{r4, r5, r6, sl, fp, pc}

0002fa10 <grisu3_diy_fp_encode_double@@Base>:
   2fa10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fa14:	add	fp, sp, #28
   2fa18:	sub	sp, sp, #12
   2fa1c:	ldr	lr, [fp, #8]
   2fa20:	orr	r7, r0, r1
   2fa24:	cmp	lr, #0
   2fa28:	movwne	lr, #1
   2fa2c:	cmp	r7, #0
   2fa30:	beq	2fe1c <grisu3_diy_fp_encode_double@@Base+0x40c>
   2fa34:	mov	ip, #0
   2fa38:	cmp	ip, r1, lsr #22
   2fa3c:	bne	2fa5c <grisu3_diy_fp_encode_double@@Base+0x4c>
   2fa40:	mov	ip, #0
   2fa44:	lsl	r1, r1, #10
   2fa48:	sub	ip, ip, #10
   2fa4c:	orr	r1, r1, r0, lsr #22
   2fa50:	lsl	r0, r0, #10
   2fa54:	cmp	r1, #4194304	; 0x400000
   2fa58:	bcc	2fa44 <grisu3_diy_fp_encode_double@@Base+0x34>
   2fa5c:	sub	r5, r2, r3
   2fa60:	mvn	r2, #0
   2fa64:	cmp	r1, #0
   2fa68:	bmi	2fc1c <grisu3_diy_fp_encode_double@@Base+0x20c>
   2fa6c:	lsl	r1, r1, #1
   2fa70:	lsl	r4, r0, #1
   2fa74:	sub	ip, ip, #1
   2fa78:	orr	r1, r1, r0, lsr #31
   2fa7c:	subs	r0, r2, r0, lsl #1
   2fa80:	sbcs	r0, r2, r1
   2fa84:	mov	r0, r4
   2fa88:	blt	2fa6c <grisu3_diy_fp_encode_double@@Base+0x5c>
   2fa8c:	cmn	r5, #348	; 0x15c
   2fa90:	blt	2fc28 <grisu3_diy_fp_encode_double@@Base+0x218>
   2fa94:	cmp	r5, #348	; 0x15c
   2fa98:	bge	2fe3c <grisu3_diy_fp_encode_double@@Base+0x42c>
   2fa9c:	add	r0, r5, #348	; 0x15c
   2faa0:	movw	r9, #25048	; 0x61d8
   2faa4:	asr	r6, r0, #31
   2faa8:	movt	r9, #3
   2faac:	add	r0, r0, r6, lsr #29
   2fab0:	mvn	r6, #14
   2fab4:	and	r6, r6, r0, lsl #1
   2fab8:	ldr	r8, [r9, r6]!
   2fabc:	ldrsh	r7, [r9, #10]
   2fac0:	cmp	r5, r7
   2fac4:	blt	2fe5c <grisu3_diy_fp_encode_double@@Base+0x44c>
   2fac8:	add	r6, r7, #8
   2facc:	cmp	r6, r5
   2fad0:	ble	2fe7c <grisu3_diy_fp_encode_double@@Base+0x46c>
   2fad4:	lsl	r6, lr, #2
   2fad8:	rsb	r0, ip, #0
   2fadc:	cmp	r5, r7
   2fae0:	lsl	sl, r6, r0
   2fae4:	beq	2fb6c <grisu3_diy_fp_encode_double@@Base+0x15c>
   2fae8:	mvn	r0, r7
   2faec:	str	sl, [sp, #4]
   2faf0:	str	r3, [sp, #8]
   2faf4:	add	r5, r5, r0
   2faf8:	cmp	r5, #7
   2fafc:	bcs	2fe9c <grisu3_diy_fp_encode_double@@Base+0x48c>
   2fb00:	movw	r0, #24936	; 0x6168
   2fb04:	movt	r0, #3
   2fb08:	ldr	r6, [r0, r5, lsl #4]!
   2fb0c:	ldr	lr, [r0, #4]
   2fb10:	ldr	r0, [r0, #8]
   2fb14:	umull	sl, r7, r6, r1
   2fb18:	str	r0, [sp]
   2fb1c:	umull	r3, r0, lr, r4
   2fb20:	umaal	r7, r0, lr, r1
   2fb24:	umull	r1, r6, r6, r4
   2fb28:	mov	r1, #0
   2fb2c:	adds	r6, sl, r6
   2fb30:	ldr	sl, [sp, #4]
   2fb34:	adc	r1, r1, #0
   2fb38:	adds	r3, r6, r3
   2fb3c:	adc	r1, r1, #0
   2fb40:	adds	r3, r3, #-2147483648	; 0x80000000
   2fb44:	adcs	r4, r7, r1
   2fb48:	adc	r1, r0, #0
   2fb4c:	ldr	r0, [sp, #8]
   2fb50:	add	r0, r0, r5
   2fb54:	add	r0, r0, #1
   2fb58:	cmp	r0, #19
   2fb5c:	ldr	r0, [sp]
   2fb60:	addgt	sl, sl, #4
   2fb64:	add	r0, ip, r0
   2fb68:	add	ip, r0, #64	; 0x40
   2fb6c:	ldr	r0, [r9, #4]
   2fb70:	umull	r3, r7, r4, r8
   2fb74:	umull	r3, r5, r1, r8
   2fb78:	mov	lr, #0
   2fb7c:	umull	r4, r6, r4, r0
   2fb80:	adds	r3, r3, r7
   2fb84:	adc	r7, lr, #0
   2fb88:	umaal	r5, r6, r1, r0
   2fb8c:	mov	r1, #9
   2fb90:	adds	r3, r3, r4
   2fb94:	adc	r4, r7, #0
   2fb98:	adds	r0, r3, #-2147483648	; 0x80000000
   2fb9c:	adcs	r4, r5, r4
   2fba0:	adc	r3, r6, #0
   2fba4:	cmp	sl, #0
   2fba8:	orr	r0, r4, r3
   2fbac:	movweq	r1, #8
   2fbb0:	cmp	r0, #0
   2fbb4:	beq	2fe1c <grisu3_diy_fp_encode_double@@Base+0x40c>
   2fbb8:	ldrsh	r0, [r9, #8]
   2fbbc:	cmp	lr, r3, lsr #22
   2fbc0:	add	r0, r0, ip
   2fbc4:	add	r5, r0, #64	; 0x40
   2fbc8:	mov	r0, r5
   2fbcc:	bne	2fbe8 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   2fbd0:	lsl	r3, r3, #10
   2fbd4:	sub	r0, r0, #10
   2fbd8:	orr	r3, r3, r4, lsr #22
   2fbdc:	lsl	r4, r4, #10
   2fbe0:	cmp	r3, #4194304	; 0x400000
   2fbe4:	bcc	2fbd0 <grisu3_diy_fp_encode_double@@Base+0x1c0>
   2fbe8:	add	r7, r1, sl
   2fbec:	subs	r1, r2, r4
   2fbf0:	sbcs	r1, r2, r3
   2fbf4:	bge	2fc48 <grisu3_diy_fp_encode_double@@Base+0x238>
   2fbf8:	lsl	r1, r3, #1
   2fbfc:	subs	r6, r2, r4, lsl #1
   2fc00:	sub	r0, r0, #1
   2fc04:	orr	r3, r1, r4, lsr #31
   2fc08:	lsl	r1, r4, #1
   2fc0c:	mov	r4, r1
   2fc10:	sbcs	r6, r2, r3
   2fc14:	blt	2fbf8 <grisu3_diy_fp_encode_double@@Base+0x1e8>
   2fc18:	b	2fc4c <grisu3_diy_fp_encode_double@@Base+0x23c>
   2fc1c:	mov	r4, r0
   2fc20:	cmn	r5, #348	; 0x15c
   2fc24:	bge	2fa94 <grisu3_diy_fp_encode_double@@Base+0x84>
   2fc28:	movw	r0, #28619	; 0x6fcb
   2fc2c:	movw	r1, #27120	; 0x69f0
   2fc30:	movw	r3, #28650	; 0x6fea
   2fc34:	mov	r2, #80	; 0x50
   2fc38:	movt	r0, #3
   2fc3c:	movt	r1, #3
   2fc40:	movt	r3, #3
   2fc44:	bl	12bc4 <__assert_fail@plt>
   2fc48:	mov	r1, r4
   2fc4c:	movw	lr, #64462	; 0xfbce
   2fc50:	sub	r2, r5, r0
   2fc54:	mov	r5, #0
   2fc58:	movt	lr, #65535	; 0xffff
   2fc5c:	lsl	ip, r7, r2
   2fc60:	add	r2, r0, #64	; 0x40
   2fc64:	add	r4, lr, #63	; 0x3f
   2fc68:	cmp	r2, r4
   2fc6c:	bgt	2fcbc <grisu3_diy_fp_encode_double@@Base+0x2ac>
   2fc70:	mvn	r4, #1072	; 0x430
   2fc74:	mov	r5, #64	; 0x40
   2fc78:	cmp	r2, r4
   2fc7c:	blt	2fc8c <grisu3_diy_fp_encode_double@@Base+0x27c>
   2fc80:	sub	r5, lr, r0
   2fc84:	cmp	r5, #61	; 0x3d
   2fc88:	blt	2fcbc <grisu3_diy_fp_encode_double@@Base+0x2ac>
   2fc8c:	sub	r2, r5, #62	; 0x3e
   2fc90:	mov	r4, #9
   2fc94:	add	ip, r4, ip, asr r2
   2fc98:	lsr	r1, r1, r2
   2fc9c:	rsb	r4, r5, #94	; 0x5e
   2fca0:	add	r0, r2, r0
   2fca4:	orr	r1, r1, r3, lsl r4
   2fca8:	subs	r4, r5, #94	; 0x5e
   2fcac:	mov	r5, #62	; 0x3e
   2fcb0:	lsrpl	r1, r3, r4
   2fcb4:	lsr	r3, r3, r2
   2fcb8:	movwpl	r3, #0
   2fcbc:	lsr	r2, r1, r5
   2fcc0:	rsb	r4, r5, #32
   2fcc4:	lsr	r6, r3, r5
   2fcc8:	add	r0, r0, r5
   2fccc:	orr	r2, r2, r3, lsl r4
   2fcd0:	subs	r4, r5, #32
   2fcd4:	lsrpl	r2, r3, r4
   2fcd8:	sub	r3, r5, #1
   2fcdc:	mov	r4, #1
   2fce0:	movwpl	r6, #0
   2fce4:	lsl	r4, r4, r3
   2fce8:	subs	r3, r5, #33	; 0x21
   2fcec:	movwpl	r4, #0
   2fcf0:	add	r3, ip, r4, lsl #3
   2fcf4:	cmp	r5, r3
   2fcf8:	blt	2fd18 <grisu3_diy_fp_encode_double@@Base+0x308>
   2fcfc:	adds	r2, r2, #1
   2fd00:	adc	r6, r6, #0
   2fd04:	tst	r6, #2097152	; 0x200000
   2fd08:	beq	2fd18 <grisu3_diy_fp_encode_double@@Base+0x308>
   2fd0c:	lsrs	r6, r6, #1
   2fd10:	rrx	r2, r2
   2fd14:	add	r0, r0, #1
   2fd18:	and	r1, r4, r1
   2fd1c:	cmp	r6, #2097152	; 0x200000
   2fd20:	bcc	2fd44 <grisu3_diy_fp_encode_double@@Base+0x334>
   2fd24:	mov	r5, #0
   2fd28:	lsrs	r7, r6, #1
   2fd2c:	rrx	r2, r2
   2fd30:	cmp	r5, r6, lsr #22
   2fd34:	add	r0, r0, #1
   2fd38:	mov	r6, r7
   2fd3c:	bne	2fd28 <grisu3_diy_fp_encode_double@@Base+0x318>
   2fd40:	b	2fd48 <grisu3_diy_fp_encode_double@@Base+0x338>
   2fd44:	mov	r7, r6
   2fd48:	ldr	r8, [fp, #12]
   2fd4c:	vmov.i32	d16, #0	; 0x00000000
   2fd50:	lsl	r9, r4, #3
   2fd54:	lsl	r1, r1, #3
   2fd58:	cmp	r0, lr
   2fd5c:	blt	2fdf0 <grisu3_diy_fp_encode_double@@Base+0x3e0>
   2fd60:	and	r4, r7, #1048576	; 0x100000
   2fd64:	mov	r5, #1
   2fd68:	cmp	r0, lr
   2fd6c:	eor	r5, r5, r4, lsr #20
   2fd70:	beq	2fdc4 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   2fd74:	cmp	r4, #0
   2fd78:	bne	2fdc4 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   2fd7c:	mov	r4, #1
   2fd80:	lsl	r5, r7, #1
   2fd84:	sub	r0, r0, #1
   2fd88:	orr	r6, r5, r2, lsr #31
   2fd8c:	ands	r5, r7, #524288	; 0x80000
   2fd90:	lsl	r2, r2, #1
   2fd94:	eor	r5, r4, r5, lsr #19
   2fd98:	bne	2fda8 <grisu3_diy_fp_encode_double@@Base+0x398>
   2fd9c:	cmp	r0, lr
   2fda0:	mov	r7, r6
   2fda4:	bgt	2fd80 <grisu3_diy_fp_encode_double@@Base+0x370>
   2fda8:	cmp	r0, lr
   2fdac:	bne	2fdd0 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   2fdb0:	cmp	r5, #0
   2fdb4:	mov	r7, #0
   2fdb8:	mov	r5, #0
   2fdbc:	bne	2fde0 <grisu3_diy_fp_encode_double@@Base+0x3d0>
   2fdc0:	b	2fdd0 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   2fdc4:	mov	r6, r7
   2fdc8:	cmp	r0, lr
   2fdcc:	beq	2fdb0 <grisu3_diy_fp_encode_double@@Base+0x3a0>
   2fdd0:	movw	r7, #1075	; 0x433
   2fdd4:	add	r0, r0, r7
   2fdd8:	mov	r7, #0
   2fddc:	lsl	r5, r0, #20
   2fde0:	bfc	r6, #20, #12
   2fde4:	orr	r0, r7, r2
   2fde8:	orr	r2, r5, r6
   2fdec:	vmov	d16, r0, r2
   2fdf0:	cmp	r1, r3
   2fdf4:	sub	r3, r9, ip
   2fdf8:	mov	r2, #0
   2fdfc:	mov	r0, #0
   2fe00:	vstr	d16, [r8]
   2fe04:	movwge	r2, #1
   2fe08:	cmp	r3, r1
   2fe0c:	movwge	r0, #1
   2fe10:	orr	r0, r2, r0
   2fe14:	sub	sp, fp, #28
   2fe18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fe1c:	movw	r0, #28467	; 0x6f33
   2fe20:	movw	r1, #28476	; 0x6f3c
   2fe24:	movw	r3, #28562	; 0x6f92
   2fe28:	mov	r2, #260	; 0x104
   2fe2c:	movt	r0, #3
   2fe30:	movt	r1, #3
   2fe34:	movt	r3, #3
   2fe38:	bl	12bc4 <__assert_fail@plt>
   2fe3c:	movw	r0, #28707	; 0x7023
   2fe40:	movw	r1, #27120	; 0x69f0
   2fe44:	movw	r3, #28650	; 0x6fea
   2fe48:	mov	r2, #81	; 0x51
   2fe4c:	movt	r0, #3
   2fe50:	movt	r1, #3
   2fe54:	movt	r3, #3
   2fe58:	bl	12bc4 <__assert_fail@plt>
   2fe5c:	movw	r0, #28750	; 0x704e
   2fe60:	movw	r1, #27120	; 0x69f0
   2fe64:	movw	r3, #28650	; 0x6fea
   2fe68:	mov	r2, #88	; 0x58
   2fe6c:	movt	r0, #3
   2fe70:	movt	r1, #3
   2fe74:	movt	r3, #3
   2fe78:	bl	12bc4 <__assert_fail@plt>
   2fe7c:	movw	r0, #28765	; 0x705d
   2fe80:	movw	r1, #27120	; 0x69f0
   2fe84:	movw	r3, #28650	; 0x6fea
   2fe88:	mov	r2, #89	; 0x59
   2fe8c:	movt	r0, #3
   2fe90:	movt	r1, #3
   2fe94:	movt	r3, #3
   2fe98:	bl	12bc4 <__assert_fail@plt>
   2fe9c:	movw	r0, #27092	; 0x69d4
   2fea0:	movw	r1, #27120	; 0x69f0
   2fea4:	movw	r3, #27207	; 0x6a47
   2fea8:	mov	r2, #185	; 0xb9
   2feac:	movt	r0, #3
   2feb0:	movt	r1, #3
   2feb4:	movt	r3, #3
   2feb8:	bl	12bc4 <__assert_fail@plt>

0002febc <flatcc_json_parser_error_string@@Base>:
   2febc:	cmp	r0, #34	; 0x22
   2fec0:	movwhi	r0, #27917	; 0x6d0d
   2fec4:	movthi	r0, #3
   2fec8:	bxhi	lr
   2fecc:	movw	r1, #26952	; 0x6948
   2fed0:	movt	r1, #3
   2fed4:	ldr	r0, [r1, r0, lsl #2]
   2fed8:	bx	lr

0002fedc <flatcc_json_parser_set_error@@Base>:
   2fedc:	mov	ip, r2
   2fee0:	ldr	r2, [r0, #24]
   2fee4:	cmp	r2, #0
   2fee8:	beq	2fef4 <flatcc_json_parser_set_error@@Base+0x18>
   2feec:	mov	r0, ip
   2fef0:	bx	lr
   2fef4:	str	r1, [r0, #36]	; 0x24
   2fef8:	ldr	r2, [r0, #4]
   2fefc:	sub	r1, r1, r2
   2ff00:	add	r1, r1, #1
   2ff04:	str	r1, [r0, #20]
   2ff08:	str	r3, [r0, #24]
   2ff0c:	mov	r0, ip
   2ff10:	bx	lr

0002ff14 <flatcc_json_parser_string_part@@Base>:
   2ff14:	cmp	r1, r2
   2ff18:	beq	2ff44 <flatcc_json_parser_string_part@@Base+0x30>
   2ff1c:	ldrb	r3, [r1]
   2ff20:	cmp	r3, #32
   2ff24:	bcc	2ff78 <flatcc_json_parser_string_part@@Base+0x64>
   2ff28:	cmp	r3, #34	; 0x22
   2ff2c:	cmpne	r3, #92	; 0x5c
   2ff30:	beq	2ff70 <flatcc_json_parser_string_part@@Base+0x5c>
   2ff34:	add	r1, r1, #1
   2ff38:	cmp	r2, r1
   2ff3c:	bne	2ff1c <flatcc_json_parser_string_part@@Base+0x8>
   2ff40:	mov	r1, r2
   2ff44:	ldr	r3, [r0, #24]
   2ff48:	cmp	r3, #0
   2ff4c:	bne	2ff6c <flatcc_json_parser_string_part@@Base+0x58>
   2ff50:	mov	ip, #20
   2ff54:	str	r1, [r0, #36]	; 0x24
   2ff58:	ldr	r3, [r0, #4]
   2ff5c:	sub	r1, r1, r3
   2ff60:	add	r1, r1, #1
   2ff64:	str	r1, [r0, #20]
   2ff68:	str	ip, [r0, #24]
   2ff6c:	mov	r1, r2
   2ff70:	mov	r0, r1
   2ff74:	bx	lr
   2ff78:	ldr	r3, [r0, #24]
   2ff7c:	cmp	r3, #0
   2ff80:	bne	2ff6c <flatcc_json_parser_string_part@@Base+0x58>
   2ff84:	mov	ip, #17
   2ff88:	b	2ff54 <flatcc_json_parser_string_part@@Base+0x40>

0002ff8c <flatcc_json_parser_space_ext@@Base>:
   2ff8c:	mov	ip, r2
   2ff90:	cmp	r1, r2
   2ff94:	beq	30098 <flatcc_json_parser_space_ext@@Base+0x10c>
   2ff98:	ldrb	r3, [r1]
   2ff9c:	cmp	r3, #32
   2ffa0:	bne	2ffcc <flatcc_json_parser_space_ext@@Base+0x40>
   2ffa4:	add	r1, r1, #1
   2ffa8:	cmp	r1, ip
   2ffac:	bne	2ff98 <flatcc_json_parser_space_ext@@Base+0xc>
   2ffb0:	b	30098 <flatcc_json_parser_space_ext@@Base+0x10c>
   2ffb4:	add	r1, r1, r3
   2ffb8:	add	r1, r1, #1
   2ffbc:	str	r1, [r0, #4]
   2ffc0:	ldr	r2, [r0, #16]
   2ffc4:	add	r2, r2, #1
   2ffc8:	str	r2, [r0, #16]
   2ffcc:	cmp	r1, ip
   2ffd0:	bne	2ffe4 <flatcc_json_parser_space_ext@@Base+0x58>
   2ffd4:	b	30098 <flatcc_json_parser_space_ext@@Base+0x10c>
   2ffd8:	add	r1, r1, #1
   2ffdc:	cmp	r1, ip
   2ffe0:	beq	30098 <flatcc_json_parser_space_ext@@Base+0x10c>
   2ffe4:	ldrb	r3, [r1]
   2ffe8:	cmp	r3, #32
   2ffec:	movhi	r0, r1
   2fff0:	bxhi	lr
   2fff4:	sub	r3, r3, #9
   2fff8:	cmp	r3, #23
   2fffc:	bhi	3008c <flatcc_json_parser_space_ext@@Base+0x100>
   30000:	add	r2, pc, #0
   30004:	ldr	pc, [r2, r3, lsl #2]
   30008:	ldrdeq	pc, [r2], -r8
   3000c:			; <UNDEFINED> instruction: 0x0002ffb8
   30010:	andeq	r0, r3, ip, lsl #1
   30014:	andeq	r0, r3, ip, lsl #1
   30018:	andeq	r0, r3, r8, rrx
   3001c:	andeq	r0, r3, ip, lsl #1
   30020:	andeq	r0, r3, ip, lsl #1
   30024:	andeq	r0, r3, ip, lsl #1
   30028:	andeq	r0, r3, ip, lsl #1
   3002c:	andeq	r0, r3, ip, lsl #1
   30030:	andeq	r0, r3, ip, lsl #1
   30034:	andeq	r0, r3, ip, lsl #1
   30038:	andeq	r0, r3, ip, lsl #1
   3003c:	andeq	r0, r3, ip, lsl #1
   30040:	andeq	r0, r3, ip, lsl #1
   30044:	andeq	r0, r3, ip, lsl #1
   30048:	andeq	r0, r3, ip, lsl #1
   3004c:	andeq	r0, r3, ip, lsl #1
   30050:	andeq	r0, r3, ip, lsl #1
   30054:	andeq	r0, r3, ip, lsl #1
   30058:	andeq	r0, r3, ip, lsl #1
   3005c:	andeq	r0, r3, ip, lsl #1
   30060:	andeq	r0, r3, ip, lsl #1
   30064:	andeq	pc, r2, r8, lsr #31
   30068:	sub	r2, ip, r1
   3006c:	mov	r3, #0
   30070:	cmp	r2, #2
   30074:	blt	2ffb4 <flatcc_json_parser_space_ext@@Base+0x28>
   30078:	ldrb	r2, [r1, #1]
   3007c:	sub	r2, r2, #10
   30080:	clz	r2, r2
   30084:	lsr	r3, r2, #5
   30088:	b	2ffb4 <flatcc_json_parser_space_ext@@Base+0x28>
   3008c:	ldr	r2, [r0, #24]
   30090:	cmp	r2, #0
   30094:	beq	300a0 <flatcc_json_parser_space_ext@@Base+0x114>
   30098:	mov	r0, ip
   3009c:	bx	lr
   300a0:	str	r1, [r0, #36]	; 0x24
   300a4:	mov	r2, #5
   300a8:	ldr	r3, [r0, #4]
   300ac:	sub	r1, r1, r3
   300b0:	add	r1, r1, #1
   300b4:	str	r1, [r0, #20]
   300b8:	str	r2, [r0, #24]
   300bc:	mov	r0, ip
   300c0:	bx	lr

000300c4 <flatcc_json_parser_string_escape@@Base>:
   300c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   300c8:	add	fp, sp, #24
   300cc:	sub	r7, r2, r1
   300d0:	cmp	r7, #2
   300d4:	blt	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   300d8:	ldrb	r6, [r1]
   300dc:	cmp	r6, #92	; 0x5c
   300e0:	bne	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   300e4:	ldrb	r6, [r1, #1]
   300e8:	sub	r6, r6, #34	; 0x22
   300ec:	cmp	r6, #86	; 0x56
   300f0:	bhi	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   300f4:	add	r5, pc, #0
   300f8:	ldr	pc, [r5, r6, lsl #2]
   300fc:	andeq	r0, r3, r8, asr r2
   30100:	andeq	r0, r3, ip, lsr #6
   30104:	andeq	r0, r3, ip, lsr #6
   30108:	andeq	r0, r3, ip, lsr #6
   3010c:	andeq	r0, r3, ip, lsr #6
   30110:	andeq	r0, r3, ip, lsr #6
   30114:	andeq	r0, r3, ip, lsr #6
   30118:	andeq	r0, r3, ip, lsr #6
   3011c:	andeq	r0, r3, ip, lsr #6
   30120:	andeq	r0, r3, ip, lsr #6
   30124:	andeq	r0, r3, ip, lsr #6
   30128:	andeq	r0, r3, ip, lsr #6
   3012c:	andeq	r0, r3, ip, lsr #6
   30130:	andeq	r0, r3, ip, ror #4
   30134:	andeq	r0, r3, ip, lsr #6
   30138:	andeq	r0, r3, ip, lsr #6
   3013c:	andeq	r0, r3, ip, lsr #6
   30140:	andeq	r0, r3, ip, lsr #6
   30144:	andeq	r0, r3, ip, lsr #6
   30148:	andeq	r0, r3, ip, lsr #6
   3014c:	andeq	r0, r3, ip, lsr #6
   30150:	andeq	r0, r3, ip, lsr #6
   30154:	andeq	r0, r3, ip, lsr #6
   30158:	andeq	r0, r3, ip, lsr #6
   3015c:	andeq	r0, r3, ip, lsr #6
   30160:	andeq	r0, r3, ip, lsr #6
   30164:	andeq	r0, r3, ip, lsr #6
   30168:	andeq	r0, r3, ip, lsr #6
   3016c:	andeq	r0, r3, ip, lsr #6
   30170:	andeq	r0, r3, ip, lsr #6
   30174:	andeq	r0, r3, ip, lsr #6
   30178:	andeq	r0, r3, ip, lsr #6
   3017c:	andeq	r0, r3, ip, lsr #6
   30180:	andeq	r0, r3, ip, lsr #6
   30184:	andeq	r0, r3, ip, lsr #6
   30188:	andeq	r0, r3, ip, lsr #6
   3018c:	andeq	r0, r3, ip, lsr #6
   30190:	andeq	r0, r3, ip, lsr #6
   30194:	andeq	r0, r3, ip, lsr #6
   30198:	andeq	r0, r3, ip, lsr #6
   3019c:	andeq	r0, r3, ip, lsr #6
   301a0:	andeq	r0, r3, ip, lsr #6
   301a4:	andeq	r0, r3, ip, lsr #6
   301a8:	andeq	r0, r3, ip, lsr #6
   301ac:	andeq	r0, r3, ip, lsr #6
   301b0:	andeq	r0, r3, ip, lsr #6
   301b4:	andeq	r0, r3, ip, lsr #6
   301b8:	andeq	r0, r3, ip, lsr #6
   301bc:	andeq	r0, r3, ip, lsr #6
   301c0:	andeq	r0, r3, ip, lsr #6
   301c4:	andeq	r0, r3, ip, lsr #6
   301c8:	andeq	r0, r3, ip, lsr #6
   301cc:	andeq	r0, r3, ip, lsr #6
   301d0:	andeq	r0, r3, ip, lsr #6
   301d4:	andeq	r0, r3, ip, lsr #6
   301d8:	andeq	r0, r3, ip, lsr #6
   301dc:	andeq	r0, r3, ip, lsr #6
   301e0:	andeq	r0, r3, ip, lsr #6
   301e4:	andeq	r0, r3, r0, lsl #5
   301e8:	andeq	r0, r3, ip, lsr #6
   301ec:	andeq	r0, r3, ip, lsr #6
   301f0:	andeq	r0, r3, ip, lsr #6
   301f4:	andeq	r0, r3, ip, lsr #6
   301f8:	andeq	r0, r3, ip, lsr #6
   301fc:	muleq	r3, r4, r2
   30200:	andeq	r0, r3, ip, lsr #6
   30204:	andeq	r0, r3, ip, lsr #6
   30208:	andeq	r0, r3, ip, lsr #6
   3020c:	andeq	r0, r3, r8, lsr #5
   30210:	andeq	r0, r3, ip, lsr #6
   30214:	andeq	r0, r3, ip, lsr #6
   30218:	andeq	r0, r3, ip, lsr #6
   3021c:	andeq	r0, r3, ip, lsr #6
   30220:	andeq	r0, r3, ip, lsr #6
   30224:	andeq	r0, r3, ip, lsr #6
   30228:	andeq	r0, r3, ip, lsr #6
   3022c:			; <UNDEFINED> instruction: 0x000302bc
   30230:	andeq	r0, r3, ip, lsr #6
   30234:	andeq	r0, r3, ip, lsr #6
   30238:	andeq	r0, r3, ip, lsr #6
   3023c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   30240:	andeq	r0, r3, ip, lsr #6
   30244:	andeq	r0, r3, r4, ror #5
   30248:	strdeq	r0, [r3], -r8
   3024c:	andeq	r0, r3, ip, lsr #6
   30250:	andeq	r0, r3, ip, lsr #6
   30254:	andeq	r0, r3, ip, lsl r3
   30258:	movw	r0, #8705	; 0x2201
   3025c:	add	r2, r1, #2
   30260:	strh	r0, [r3]
   30264:	mov	r0, r2
   30268:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3026c:	movw	r0, #12033	; 0x2f01
   30270:	add	r2, r1, #2
   30274:	strh	r0, [r3]
   30278:	mov	r0, r2
   3027c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30280:	movw	r0, #23553	; 0x5c01
   30284:	add	r2, r1, #2
   30288:	strh	r0, [r3]
   3028c:	mov	r0, r2
   30290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30294:	movw	r0, #2049	; 0x801
   30298:	add	r2, r1, #2
   3029c:	strh	r0, [r3]
   302a0:	mov	r0, r2
   302a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   302a8:	movw	r0, #3073	; 0xc01
   302ac:	add	r2, r1, #2
   302b0:	strh	r0, [r3]
   302b4:	mov	r0, r2
   302b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   302bc:	movw	r0, #2561	; 0xa01
   302c0:	add	r2, r1, #2
   302c4:	strh	r0, [r3]
   302c8:	mov	r0, r2
   302cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   302d0:	movw	r0, #3329	; 0xd01
   302d4:	add	r2, r1, #2
   302d8:	strh	r0, [r3]
   302dc:	mov	r0, r2
   302e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   302e4:	movw	r0, #2305	; 0x901
   302e8:	add	r2, r1, #2
   302ec:	strh	r0, [r3]
   302f0:	mov	r0, r2
   302f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   302f8:	cmp	r7, #5
   302fc:	ble	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   30300:	ldrb	r7, [r1, #2]
   30304:	sub	r6, r7, #48	; 0x30
   30308:	uxtb	r6, r6
   3030c:	cmp	r6, #9
   30310:	bhi	30388 <flatcc_json_parser_string_escape@@Base+0x2c4>
   30314:	lsl	ip, r7, #12
   30318:	b	303a8 <flatcc_json_parser_string_escape@@Base+0x2e4>
   3031c:	mov	r6, #1
   30320:	cmp	r7, #3
   30324:	strb	r6, [r3]
   30328:	bgt	3036c <flatcc_json_parser_string_escape@@Base+0x2a8>
   3032c:	mov	r7, #0
   30330:	strb	r7, [r3]
   30334:	ldr	r3, [r0, #24]
   30338:	cmp	r3, #0
   3033c:	beq	30348 <flatcc_json_parser_string_escape@@Base+0x284>
   30340:	mov	r0, r2
   30344:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30348:	str	r1, [r0, #36]	; 0x24
   3034c:	mov	r3, #18
   30350:	ldr	r7, [r0, #4]
   30354:	sub	r1, r1, r7
   30358:	add	r1, r1, #1
   3035c:	str	r1, [r0, #20]
   30360:	str	r3, [r0, #24]
   30364:	mov	r0, r2
   30368:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3036c:	ldrb	r7, [r1, #2]
   30370:	sub	r6, r7, #48	; 0x30
   30374:	uxtb	r6, r6
   30378:	cmp	r6, #9
   3037c:	bhi	303c4 <flatcc_json_parser_string_escape@@Base+0x300>
   30380:	lsl	r7, r7, #4
   30384:	b	303e0 <flatcc_json_parser_string_escape@@Base+0x31c>
   30388:	orr	r6, r7, #32
   3038c:	sub	r6, r6, #97	; 0x61
   30390:	uxtb	r6, r6
   30394:	cmp	r6, #5
   30398:	bhi	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   3039c:	movw	r6, #36864	; 0x9000
   303a0:	movt	r6, #65535	; 0xffff
   303a4:	add	ip, r6, r7, lsl #12
   303a8:	ldrb	lr, [r1, #3]
   303ac:	sub	r4, lr, #48	; 0x30
   303b0:	uxtb	r4, r4
   303b4:	cmp	r4, #10
   303b8:	bcs	30420 <flatcc_json_parser_string_escape@@Base+0x35c>
   303bc:	mov	r8, #53248	; 0xd000
   303c0:	b	30438 <flatcc_json_parser_string_escape@@Base+0x374>
   303c4:	orr	r6, r7, #32
   303c8:	sub	r6, r6, #97	; 0x61
   303cc:	uxtb	r6, r6
   303d0:	cmp	r6, #5
   303d4:	bhi	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   303d8:	mvn	r6, #111	; 0x6f
   303dc:	add	r7, r6, r7, lsl #4
   303e0:	ldrb	r5, [r1, #3]
   303e4:	sub	r6, r5, #48	; 0x30
   303e8:	uxtb	r4, r6
   303ec:	cmp	r4, #10
   303f0:	bcc	3040c <flatcc_json_parser_string_escape@@Base+0x348>
   303f4:	orr	r6, r5, #32
   303f8:	sub	r5, r6, #97	; 0x61
   303fc:	uxtb	r5, r5
   30400:	cmp	r5, #5
   30404:	bhi	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   30408:	sub	r6, r6, #87	; 0x57
   3040c:	orr	r0, r6, r7
   30410:	add	r2, r1, #4
   30414:	strb	r0, [r3, #1]
   30418:	mov	r0, r2
   3041c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   30420:	orr	lr, lr, #32
   30424:	mov	r8, #43264	; 0xa900
   30428:	sub	r4, lr, #97	; 0x61
   3042c:	uxtb	r4, r4
   30430:	cmp	r4, #6
   30434:	bcs	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   30438:	ldrb	r5, [r1, #4]
   3043c:	sub	r4, r5, #48	; 0x30
   30440:	uxtb	r4, r4
   30444:	cmp	r4, #10
   30448:	bcs	30454 <flatcc_json_parser_string_escape@@Base+0x390>
   3044c:	mov	r9, #64768	; 0xfd00
   30450:	b	3046c <flatcc_json_parser_string_escape@@Base+0x3a8>
   30454:	orr	r5, r5, #32
   30458:	movw	r9, #64144	; 0xfa90
   3045c:	sub	r4, r5, #97	; 0x61
   30460:	uxtb	r4, r4
   30464:	cmp	r4, #6
   30468:	bcs	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   3046c:	ldrb	r7, [r1, #5]
   30470:	sub	r4, r7, #48	; 0x30
   30474:	uxtb	r4, r4
   30478:	cmp	r4, #10
   3047c:	bcs	3048c <flatcc_json_parser_string_escape@@Base+0x3c8>
   30480:	mvn	r0, #86	; 0x56
   30484:	add	r4, r0, #39	; 0x27
   30488:	b	304a4 <flatcc_json_parser_string_escape@@Base+0x3e0>
   3048c:	orr	r7, r7, #32
   30490:	movw	r4, #65449	; 0xffa9
   30494:	sub	r6, r7, #97	; 0x61
   30498:	uxtb	r6, r6
   3049c:	cmp	r6, #6
   304a0:	bcs	3032c <flatcc_json_parser_string_escape@@Base+0x268>
   304a4:	add	r0, r8, lr, lsl #8
   304a8:	add	r2, r9, r5, lsl #4
   304ac:	orr	r0, r0, ip
   304b0:	orr	r0, r0, r2
   304b4:	add	r2, r4, r7
   304b8:	orr	r0, r0, r2
   304bc:	uxth	r7, r0
   304c0:	cmp	r7, #127	; 0x7f
   304c4:	bhi	304e0 <flatcc_json_parser_string_escape@@Base+0x41c>
   304c8:	mov	r2, #1
   304cc:	strb	r2, [r3]
   304d0:	strb	r0, [r3, r2]
   304d4:	add	r2, r1, #6
   304d8:	mov	r0, r2
   304dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   304e0:	mov	r2, #0
   304e4:	cmp	r2, r7, lsr #11
   304e8:	bne	30504 <flatcc_json_parser_string_escape@@Base+0x440>
   304ec:	mov	r7, #192	; 0xc0
   304f0:	mov	r2, #2
   304f4:	orr	r7, r7, r0, lsr #6
   304f8:	strb	r2, [r3]
   304fc:	strb	r7, [r3, #1]
   30500:	b	30528 <flatcc_json_parser_string_escape@@Base+0x464>
   30504:	mov	r6, #224	; 0xe0
   30508:	mov	r2, #3
   3050c:	orr	r6, r6, r7, lsr #12
   30510:	strb	r2, [r3]
   30514:	lsr	r7, r7, #6
   30518:	strb	r6, [r3, #1]
   3051c:	mov	r6, #2
   30520:	bfi	r7, r6, #6, #26
   30524:	strb	r7, [r3, #2]
   30528:	mvn	r7, #-67108863	; 0xfc000001
   3052c:	bfi	r0, r7, #6, #26
   30530:	strb	r0, [r3, r2]
   30534:	add	r2, r1, #6
   30538:	mov	r0, r2
   3053c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00030540 <flatcc_json_parser_skip_constant@@Base>:
   30540:	push	{r4, r5, r6, sl, fp, lr}
   30544:	add	fp, sp, #16
   30548:	cmp	r1, r2
   3054c:	beq	30600 <flatcc_json_parser_skip_constant@@Base+0xc0>
   30550:	mov	r4, r2
   30554:	mov	r5, r0
   30558:	ldrsb	r0, [r1]
   3055c:	mov	r6, r1
   30560:	cmp	r0, #0
   30564:	bmi	30578 <flatcc_json_parser_skip_constant@@Base+0x38>
   30568:	uxtb	r0, r0
   3056c:	cmp	r0, #95	; 0x5f
   30570:	cmpne	r0, #46	; 0x2e
   30574:	bne	30588 <flatcc_json_parser_skip_constant@@Base+0x48>
   30578:	add	r1, r6, #1
   3057c:	cmp	r1, r4
   30580:	bne	30558 <flatcc_json_parser_skip_constant@@Base+0x18>
   30584:	b	305f8 <flatcc_json_parser_skip_constant@@Base+0xb8>
   30588:	sub	r1, r0, #48	; 0x30
   3058c:	uxtb	r1, r1
   30590:	cmp	r1, #9
   30594:	bls	30578 <flatcc_json_parser_skip_constant@@Base+0x38>
   30598:	orr	r1, r0, #32
   3059c:	sub	r1, r1, #97	; 0x61
   305a0:	uxtb	r1, r1
   305a4:	cmp	r1, #25
   305a8:	bls	30578 <flatcc_json_parser_skip_constant@@Base+0x38>
   305ac:	sub	r1, r4, r6
   305b0:	cmp	r1, #2
   305b4:	blt	305d4 <flatcc_json_parser_skip_constant@@Base+0x94>
   305b8:	cmp	r0, #32
   305bc:	bhi	305f0 <flatcc_json_parser_skip_constant@@Base+0xb0>
   305c0:	bne	305d4 <flatcc_json_parser_skip_constant@@Base+0x94>
   305c4:	mov	r1, r6
   305c8:	ldrb	r0, [r1, #1]!
   305cc:	cmp	r0, #32
   305d0:	bhi	3057c <flatcc_json_parser_skip_constant@@Base+0x3c>
   305d4:	mov	r0, r5
   305d8:	mov	r1, r6
   305dc:	mov	r2, r4
   305e0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   305e4:	mov	r1, r0
   305e8:	cmp	r0, r6
   305ec:	bne	3057c <flatcc_json_parser_skip_constant@@Base+0x3c>
   305f0:	mov	r0, r6
   305f4:	pop	{r4, r5, r6, sl, fp, pc}
   305f8:	mov	r0, r4
   305fc:	pop	{r4, r5, r6, sl, fp, pc}
   30600:	mov	r0, r1
   30604:	pop	{r4, r5, r6, sl, fp, pc}

00030608 <flatcc_json_parser_match_constant@@Base>:
   30608:	push	{r4, r5, r6, r7, fp, lr}
   3060c:	add	fp, sp, #16
   30610:	ldr	r7, [fp, #8]
   30614:	mov	r4, r1
   30618:	sub	r1, r2, r1
   3061c:	cmp	r1, r3
   30620:	ble	30734 <flatcc_json_parser_match_constant@@Base+0x12c>
   30624:	ldr	r1, [r0, #12]
   30628:	mov	r5, r2
   3062c:	add	r6, r4, r3
   30630:	cmp	r1, #0
   30634:	beq	306c0 <flatcc_json_parser_match_constant@@Base+0xb8>
   30638:	sub	r1, r5, r6
   3063c:	cmp	r1, #2
   30640:	blt	30668 <flatcc_json_parser_match_constant@@Base+0x60>
   30644:	ldrb	r1, [r6]
   30648:	mov	r2, r6
   3064c:	cmp	r1, #32
   30650:	bhi	30678 <flatcc_json_parser_match_constant@@Base+0x70>
   30654:	bne	30668 <flatcc_json_parser_match_constant@@Base+0x60>
   30658:	mov	r2, r6
   3065c:	ldrb	r1, [r2, #1]!
   30660:	cmp	r1, #32
   30664:	bhi	30678 <flatcc_json_parser_match_constant@@Base+0x70>
   30668:	mov	r1, r6
   3066c:	mov	r2, r5
   30670:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   30674:	mov	r2, r0
   30678:	cmp	r2, r5
   3067c:	beq	30748 <flatcc_json_parser_match_constant@@Base+0x140>
   30680:	cmp	r2, r6
   30684:	beq	30758 <flatcc_json_parser_match_constant@@Base+0x150>
   30688:	ldrsb	r0, [r2]
   3068c:	cmp	r0, #95	; 0x5f
   30690:	beq	306b0 <flatcc_json_parser_match_constant@@Base+0xa8>
   30694:	cmn	r0, #1
   30698:	ble	306b0 <flatcc_json_parser_match_constant@@Base+0xa8>
   3069c:	orr	r0, r0, #32
   306a0:	sub	r0, r0, #97	; 0x61
   306a4:	uxtb	r0, r0
   306a8:	cmp	r0, #25
   306ac:	bhi	30758 <flatcc_json_parser_match_constant@@Base+0x150>
   306b0:	mov	r0, #1
   306b4:	str	r0, [r7]
   306b8:	mov	r0, r2
   306bc:	pop	{r4, r5, r6, r7, fp, pc}
   306c0:	ldrb	r1, [r6]
   306c4:	cmp	r1, #92	; 0x5c
   306c8:	beq	30780 <flatcc_json_parser_match_constant@@Base+0x178>
   306cc:	cmp	r1, #34	; 0x22
   306d0:	beq	30704 <flatcc_json_parser_match_constant@@Base+0xfc>
   306d4:	cmp	r1, #32
   306d8:	bne	30734 <flatcc_json_parser_match_constant@@Base+0x12c>
   306dc:	add	r1, r4, r3
   306e0:	add	r1, r1, #1
   306e4:	cmp	r5, r1
   306e8:	beq	30748 <flatcc_json_parser_match_constant@@Base+0x140>
   306ec:	ldrb	r2, [r1], #1
   306f0:	cmp	r2, #32
   306f4:	beq	306e4 <flatcc_json_parser_match_constant@@Base+0xdc>
   306f8:	cmp	r2, #34	; 0x22
   306fc:	bne	307e8 <flatcc_json_parser_match_constant@@Base+0x1e0>
   30700:	sub	r6, r1, #1
   30704:	mvn	r2, r6
   30708:	add	r1, r6, #1
   3070c:	cmp	r2, #2
   30710:	blt	307cc <flatcc_json_parser_match_constant@@Base+0x1c4>
   30714:	ldrb	r2, [r1]
   30718:	cmp	r2, #32
   3071c:	bls	307b8 <flatcc_json_parser_match_constant@@Base+0x1b0>
   30720:	mov	r2, r1
   30724:	mov	r0, #0
   30728:	str	r0, [r7]
   3072c:	mov	r0, r2
   30730:	pop	{r4, r5, r6, r7, fp, pc}
   30734:	mov	r0, #0
   30738:	mov	r2, r4
   3073c:	str	r0, [r7]
   30740:	mov	r0, r2
   30744:	pop	{r4, r5, r6, r7, fp, pc}
   30748:	mov	r0, #0
   3074c:	str	r0, [r7]
   30750:	mov	r0, r5
   30754:	pop	{r4, r5, r6, r7, fp, pc}
   30758:	mov	r0, #0
   3075c:	str	r0, [r7]
   30760:	ldrb	r0, [r2]
   30764:	cmp	r0, #44	; 0x2c
   30768:	cmpne	r0, #93	; 0x5d
   3076c:	beq	30740 <flatcc_json_parser_match_constant@@Base+0x138>
   30770:	cmp	r0, #125	; 0x7d
   30774:	movne	r2, r4
   30778:	mov	r0, r2
   3077c:	pop	{r4, r5, r6, r7, fp, pc}
   30780:	mov	r1, #0
   30784:	str	r1, [r7]
   30788:	ldr	r1, [r0, #24]
   3078c:	cmp	r1, #0
   30790:	bne	30750 <flatcc_json_parser_match_constant@@Base+0x148>
   30794:	str	r6, [r0, #36]	; 0x24
   30798:	mov	r1, #18
   3079c:	ldr	r2, [r0, #4]
   307a0:	sub	r2, r6, r2
   307a4:	add	r2, r2, #1
   307a8:	str	r2, [r0, #20]
   307ac:	str	r1, [r0, #24]
   307b0:	mov	r0, r5
   307b4:	pop	{r4, r5, r6, r7, fp, pc}
   307b8:	bne	307cc <flatcc_json_parser_match_constant@@Base+0x1c4>
   307bc:	ldrb	r2, [r6, #2]!
   307c0:	cmp	r2, #32
   307c4:	mov	r2, r6
   307c8:	bhi	307d8 <flatcc_json_parser_match_constant@@Base+0x1d0>
   307cc:	mov	r2, #0
   307d0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   307d4:	mov	r2, r0
   307d8:	mov	r0, #0
   307dc:	str	r0, [r7]
   307e0:	mov	r0, r2
   307e4:	pop	{r4, r5, r6, r7, fp, pc}
   307e8:	mov	r0, #1
   307ec:	sub	r2, r1, #1
   307f0:	str	r0, [r7]
   307f4:	mov	r0, r2
   307f8:	pop	{r4, r5, r6, r7, fp, pc}

000307fc <flatcc_json_parser_unmatched_symbol@@Base>:
   307fc:	push	{r4, r5, fp, lr}
   30800:	add	fp, sp, #8
   30804:	mov	r5, r0
   30808:	ldrb	r0, [r0, #8]
   3080c:	mov	r4, r2
   30810:	tst	r0, #1
   30814:	bne	30838 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   30818:	ldr	r0, [r5, #24]
   3081c:	cmp	r0, #0
   30820:	bne	30a28 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   30824:	str	r1, [r5, #36]	; 0x24
   30828:	mov	r0, #13
   3082c:	ldr	r2, [r5, #4]
   30830:	sub	r1, r1, r2
   30834:	b	30a40 <flatcc_json_parser_unmatched_symbol@@Base+0x244>
   30838:	ldr	r0, [r5, #12]
   3083c:	cmp	r0, #0
   30840:	beq	308d8 <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
   30844:	cmp	r1, r4
   30848:	beq	309f0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   3084c:	ldrb	r2, [r1]
   30850:	cmp	r2, #33	; 0x21
   30854:	bcc	309f0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   30858:	add	r1, r1, #1
   3085c:	uxtb	r0, r2
   30860:	cmp	r0, #46	; 0x2e
   30864:	cmpne	r0, #95	; 0x5f
   30868:	bne	30884 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   3086c:	cmp	r4, r1
   30870:	beq	309e4 <flatcc_json_parser_unmatched_symbol@@Base+0x1e8>
   30874:	ldrb	r2, [r1], #1
   30878:	cmp	r2, #33	; 0x21
   3087c:	bcs	3085c <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   30880:	b	308b4 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   30884:	sxtb	r3, r2
   30888:	cmp	r3, #0
   3088c:	bmi	3086c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   30890:	sub	r3, r2, #48	; 0x30
   30894:	uxtb	r3, r3
   30898:	cmp	r3, #9
   3089c:	bls	3086c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   308a0:	orr	r2, r2, #32
   308a4:	sub	r2, r2, #97	; 0x61
   308a8:	uxtb	r2, r2
   308ac:	cmp	r2, #26
   308b0:	bcc	3086c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   308b4:	sub	r1, r1, #1
   308b8:	cmp	r0, #46	; 0x2e
   308bc:	bne	309f0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   308c0:	ldr	r0, [r5, #24]
   308c4:	mov	r2, r4
   308c8:	cmp	r0, #0
   308cc:	bne	30934 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   308d0:	mov	r0, #5
   308d4:	b	309a4 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
   308d8:	cmp	r1, r4
   308dc:	bne	308f8 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   308e0:	b	30924 <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   308e4:	cmp	r0, #34	; 0x22
   308e8:	beq	309d0 <flatcc_json_parser_unmatched_symbol@@Base+0x1d4>
   308ec:	add	r1, r1, #1
   308f0:	cmp	r1, r4
   308f4:	beq	30920 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   308f8:	ldrb	r0, [r1]
   308fc:	cmp	r0, #92	; 0x5c
   30900:	bne	308e4 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   30904:	sub	r0, r4, r1
   30908:	cmp	r0, #2
   3090c:	blt	30924 <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   30910:	add	r1, r1, #1
   30914:	add	r1, r1, #1
   30918:	cmp	r1, r4
   3091c:	bne	308f8 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   30920:	mov	r1, r4
   30924:	ldr	r0, [r5, #24]
   30928:	mov	r2, r4
   3092c:	cmp	r0, #0
   30930:	beq	309a0 <flatcc_json_parser_unmatched_symbol@@Base+0x1a4>
   30934:	sub	r0, r4, r2
   30938:	cmp	r0, #2
   3093c:	blt	30a00 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   30940:	ldrb	r0, [r2]
   30944:	cmp	r0, #32
   30948:	bls	30988 <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
   3094c:	mov	r3, r2
   30950:	cmp	r3, r4
   30954:	beq	30a1c <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   30958:	ldrb	r0, [r3]
   3095c:	cmp	r0, #58	; 0x3a
   30960:	bne	30a1c <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   30964:	add	r1, r3, #1
   30968:	sub	r0, r4, r1
   3096c:	cmp	r0, #2
   30970:	blt	30a64 <flatcc_json_parser_unmatched_symbol@@Base+0x268>
   30974:	ldrb	r0, [r1]
   30978:	cmp	r0, #32
   3097c:	bls	30a54 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   30980:	mov	r3, r1
   30984:	b	30a74 <flatcc_json_parser_unmatched_symbol@@Base+0x278>
   30988:	bne	30a00 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   3098c:	mov	r3, r2
   30990:	ldrb	r0, [r3, #1]!
   30994:	cmp	r0, #32
   30998:	bls	30a00 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   3099c:	b	30a14 <flatcc_json_parser_unmatched_symbol@@Base+0x218>
   309a0:	mov	r0, #20
   309a4:	str	r1, [r5, #36]	; 0x24
   309a8:	ldr	r2, [r5, #4]
   309ac:	sub	r1, r1, r2
   309b0:	mov	r2, r4
   309b4:	add	r1, r1, #1
   309b8:	str	r1, [r5, #20]
   309bc:	str	r0, [r5, #24]
   309c0:	sub	r0, r4, r2
   309c4:	cmp	r0, #2
   309c8:	bge	30940 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   309cc:	b	30a00 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   309d0:	add	r2, r1, #1
   309d4:	sub	r0, r4, r2
   309d8:	cmp	r0, #2
   309dc:	bge	30940 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   309e0:	b	30a00 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   309e4:	mov	r1, r4
   309e8:	cmp	r0, #46	; 0x2e
   309ec:	beq	308c0 <flatcc_json_parser_unmatched_symbol@@Base+0xc4>
   309f0:	mov	r2, r1
   309f4:	sub	r0, r4, r2
   309f8:	cmp	r0, #2
   309fc:	bge	30940 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   30a00:	mov	r1, r2
   30a04:	mov	r0, r5
   30a08:	mov	r2, r4
   30a0c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   30a10:	mov	r3, r0
   30a14:	cmp	r3, r4
   30a18:	bne	30958 <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   30a1c:	ldr	r0, [r5, #24]
   30a20:	cmp	r0, #0
   30a24:	beq	30a30 <flatcc_json_parser_unmatched_symbol@@Base+0x234>
   30a28:	mov	r0, r4
   30a2c:	pop	{r4, r5, fp, pc}
   30a30:	str	r3, [r5, #36]	; 0x24
   30a34:	mov	r0, #4
   30a38:	ldr	r1, [r5, #4]
   30a3c:	sub	r1, r3, r1
   30a40:	add	r1, r1, #1
   30a44:	str	r1, [r5, #20]
   30a48:	str	r0, [r5, #24]
   30a4c:	mov	r0, r4
   30a50:	pop	{r4, r5, fp, pc}
   30a54:	bne	30a64 <flatcc_json_parser_unmatched_symbol@@Base+0x268>
   30a58:	ldrb	r0, [r3, #2]!
   30a5c:	cmp	r0, #32
   30a60:	bhi	30a74 <flatcc_json_parser_unmatched_symbol@@Base+0x278>
   30a64:	mov	r0, r5
   30a68:	mov	r2, r4
   30a6c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   30a70:	mov	r3, r0
   30a74:	mov	r0, r5
   30a78:	mov	r1, r3
   30a7c:	mov	r2, r4
   30a80:	pop	{r4, r5, fp, lr}
   30a84:	b	30a88 <flatcc_json_parser_generic_json@@Base>

00030a88 <flatcc_json_parser_generic_json@@Base>:
   30a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30a8c:	add	fp, sp, #28
   30a90:	sub	sp, sp, #540	; 0x21c
   30a94:	mov	r7, r1
   30a98:	cmp	r1, r2
   30a9c:	beq	31774 <flatcc_json_parser_generic_json@@Base+0xcec>
   30aa0:	mov	r5, r0
   30aa4:	add	r0, r2, #1
   30aa8:	add	r1, sp, #24
   30aac:	mov	r6, r2
   30ab0:	mov	r8, #0
   30ab4:	str	r0, [sp, #4]
   30ab8:	add	r0, r5, #36	; 0x24
   30abc:	sub	sl, r1, #1
   30ac0:	add	r9, r5, #24
   30ac4:	str	r0, [sp, #16]
   30ac8:	add	r0, r5, #20
   30acc:	str	r0, [sp, #12]
   30ad0:	add	r0, r5, #4
   30ad4:	str	r0, [sp, #8]
   30ad8:	mov	r0, r1
   30adc:	cmp	r8, #0
   30ae0:	beq	30db4 <flatcc_json_parser_generic_json@@Base+0x32c>
   30ae4:	ldrb	r0, [r0, #-1]
   30ae8:	cmp	r0, #125	; 0x7d
   30aec:	bne	30db4 <flatcc_json_parser_generic_json@@Base+0x32c>
   30af0:	ldrb	r0, [r7]
   30af4:	cmp	r0, #46	; 0x2e
   30af8:	beq	30b74 <flatcc_json_parser_generic_json@@Base+0xec>
   30afc:	cmp	r0, #34	; 0x22
   30b00:	bne	30c08 <flatcc_json_parser_generic_json@@Base+0x180>
   30b04:	mov	r0, #0
   30b08:	mov	r2, r6
   30b0c:	str	r0, [r5, #12]
   30b10:	add	r0, r7, #1
   30b14:	cmp	r0, r6
   30b18:	bne	30b34 <flatcc_json_parser_generic_json@@Base+0xac>
   30b1c:	b	30bbc <flatcc_json_parser_generic_json@@Base+0x134>
   30b20:	cmp	r1, #34	; 0x22
   30b24:	beq	30cbc <flatcc_json_parser_generic_json@@Base+0x234>
   30b28:	add	r0, r0, #1
   30b2c:	cmp	r0, r6
   30b30:	beq	30b5c <flatcc_json_parser_generic_json@@Base+0xd4>
   30b34:	ldrb	r1, [r0]
   30b38:	cmp	r1, #92	; 0x5c
   30b3c:	bne	30b20 <flatcc_json_parser_generic_json@@Base+0x98>
   30b40:	sub	r1, r6, r0
   30b44:	cmp	r1, #2
   30b48:	blt	30cf0 <flatcc_json_parser_generic_json@@Base+0x268>
   30b4c:	add	r0, r0, #1
   30b50:	add	r0, r0, #1
   30b54:	cmp	r0, r6
   30b58:	bne	30b34 <flatcc_json_parser_generic_json@@Base+0xac>
   30b5c:	mov	r2, r6
   30b60:	ldr	r0, [r9]
   30b64:	mov	r1, r6
   30b68:	cmp	r0, #0
   30b6c:	bne	30d04 <flatcc_json_parser_generic_json@@Base+0x27c>
   30b70:	b	30bcc <flatcc_json_parser_generic_json@@Base+0x144>
   30b74:	ldr	r0, [r9]
   30b78:	cmp	r0, #0
   30b7c:	bne	30ba8 <flatcc_json_parser_generic_json@@Base+0x120>
   30b80:	mov	r0, #5
   30b84:	ldr	r1, [sp, #12]
   30b88:	str	r0, [r9]
   30b8c:	ldr	r0, [sp, #8]
   30b90:	ldr	r0, [r0]
   30b94:	sub	r0, r7, r0
   30b98:	add	r0, r0, #1
   30b9c:	str	r0, [r1]
   30ba0:	ldr	r0, [sp, #16]
   30ba4:	str	r7, [r0]
   30ba8:	ldr	r0, [r5, #12]
   30bac:	mov	r2, r6
   30bb0:	mov	r1, r6
   30bb4:	cmp	r0, #0
   30bb8:	bne	30d04 <flatcc_json_parser_generic_json@@Base+0x27c>
   30bbc:	ldr	r0, [r9]
   30bc0:	mov	r1, r6
   30bc4:	cmp	r0, #0
   30bc8:	bne	30d04 <flatcc_json_parser_generic_json@@Base+0x27c>
   30bcc:	mov	r0, #20
   30bd0:	str	r0, [r9]
   30bd4:	ldr	r0, [sp, #8]
   30bd8:	ldr	r1, [sp, #12]
   30bdc:	ldr	r0, [r0]
   30be0:	sub	r0, r2, r0
   30be4:	add	r0, r0, #1
   30be8:	str	r0, [r1]
   30bec:	ldr	r0, [sp, #16]
   30bf0:	mov	r1, r6
   30bf4:	str	r2, [r0]
   30bf8:	sub	r0, r6, r1
   30bfc:	cmp	r0, #2
   30c00:	bge	30d10 <flatcc_json_parser_generic_json@@Base+0x288>
   30c04:	b	30d78 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30c08:	mov	r0, #1
   30c0c:	cmp	r7, r6
   30c10:	mov	r1, r6
   30c14:	str	r0, [r5, #12]
   30c18:	beq	30d04 <flatcc_json_parser_generic_json@@Base+0x27c>
   30c1c:	ldrb	r2, [r7]
   30c20:	cmp	r2, #33	; 0x21
   30c24:	bcc	30ca8 <flatcc_json_parser_generic_json@@Base+0x220>
   30c28:	add	r1, r7, #1
   30c2c:	uxtb	r0, r2
   30c30:	cmp	r0, #46	; 0x2e
   30c34:	cmpne	r0, #95	; 0x5f
   30c38:	bne	30c54 <flatcc_json_parser_generic_json@@Base+0x1cc>
   30c3c:	cmp	r6, r1
   30c40:	beq	30cd0 <flatcc_json_parser_generic_json@@Base+0x248>
   30c44:	ldrb	r2, [r1], #1
   30c48:	cmp	r2, #33	; 0x21
   30c4c:	bcs	30c2c <flatcc_json_parser_generic_json@@Base+0x1a4>
   30c50:	b	30c84 <flatcc_json_parser_generic_json@@Base+0x1fc>
   30c54:	sxtb	r3, r2
   30c58:	cmp	r3, #0
   30c5c:	bmi	30c3c <flatcc_json_parser_generic_json@@Base+0x1b4>
   30c60:	sub	r3, r2, #48	; 0x30
   30c64:	uxtb	r3, r3
   30c68:	cmp	r3, #9
   30c6c:	bls	30c3c <flatcc_json_parser_generic_json@@Base+0x1b4>
   30c70:	orr	r2, r2, #32
   30c74:	sub	r2, r2, #97	; 0x61
   30c78:	uxtb	r2, r2
   30c7c:	cmp	r2, #26
   30c80:	bcc	30c3c <flatcc_json_parser_generic_json@@Base+0x1b4>
   30c84:	sub	r2, r1, #1
   30c88:	cmp	r0, #46	; 0x2e
   30c8c:	bne	30cdc <flatcc_json_parser_generic_json@@Base+0x254>
   30c90:	ldr	r0, [r9]
   30c94:	mov	r1, r6
   30c98:	cmp	r0, #0
   30c9c:	bne	30d04 <flatcc_json_parser_generic_json@@Base+0x27c>
   30ca0:	mov	r0, #5
   30ca4:	b	30bd0 <flatcc_json_parser_generic_json@@Base+0x148>
   30ca8:	mov	r1, r7
   30cac:	sub	r0, r6, r1
   30cb0:	cmp	r0, #2
   30cb4:	bge	30d10 <flatcc_json_parser_generic_json@@Base+0x288>
   30cb8:	b	30d78 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30cbc:	add	r1, r0, #1
   30cc0:	sub	r0, r6, r1
   30cc4:	cmp	r0, #2
   30cc8:	bge	30d10 <flatcc_json_parser_generic_json@@Base+0x288>
   30ccc:	b	30d78 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30cd0:	mov	r2, r6
   30cd4:	cmp	r0, #46	; 0x2e
   30cd8:	beq	30c90 <flatcc_json_parser_generic_json@@Base+0x208>
   30cdc:	mov	r1, r2
   30ce0:	sub	r0, r6, r1
   30ce4:	cmp	r0, #2
   30ce8:	bge	30d10 <flatcc_json_parser_generic_json@@Base+0x288>
   30cec:	b	30d78 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30cf0:	mov	r2, r0
   30cf4:	ldr	r0, [r9]
   30cf8:	mov	r1, r6
   30cfc:	cmp	r0, #0
   30d00:	beq	30bcc <flatcc_json_parser_generic_json@@Base+0x144>
   30d04:	sub	r0, r6, r1
   30d08:	cmp	r0, #2
   30d0c:	blt	30d78 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30d10:	ldrb	r0, [r1]
   30d14:	cmp	r0, #32
   30d18:	bls	30d64 <flatcc_json_parser_generic_json@@Base+0x2dc>
   30d1c:	mov	r7, r1
   30d20:	cmp	r7, r6
   30d24:	beq	31800 <flatcc_json_parser_generic_json@@Base+0xd78>
   30d28:	ldrb	r0, [r7]
   30d2c:	cmp	r0, #58	; 0x3a
   30d30:	bne	31818 <flatcc_json_parser_generic_json@@Base+0xd90>
   30d34:	add	r1, r7, #1
   30d38:	sub	r0, r6, r1
   30d3c:	cmp	r0, #2
   30d40:	blt	30da4 <flatcc_json_parser_generic_json@@Base+0x31c>
   30d44:	ldrb	r2, [r1]
   30d48:	cmp	r2, #32
   30d4c:	bls	30d94 <flatcc_json_parser_generic_json@@Base+0x30c>
   30d50:	mov	r7, r1
   30d54:	sub	r0, r2, #48	; 0x30
   30d58:	cmp	r0, #10
   30d5c:	bcc	30dc4 <flatcc_json_parser_generic_json@@Base+0x33c>
   30d60:	b	30e5c <flatcc_json_parser_generic_json@@Base+0x3d4>
   30d64:	bne	30d78 <flatcc_json_parser_generic_json@@Base+0x2f0>
   30d68:	mov	r7, r1
   30d6c:	ldrb	r0, [r7, #1]!
   30d70:	cmp	r0, #32
   30d74:	bhi	30d88 <flatcc_json_parser_generic_json@@Base+0x300>
   30d78:	mov	r0, r5
   30d7c:	mov	r2, r6
   30d80:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   30d84:	mov	r7, r0
   30d88:	cmp	r7, r6
   30d8c:	bne	30d28 <flatcc_json_parser_generic_json@@Base+0x2a0>
   30d90:	b	31800 <flatcc_json_parser_generic_json@@Base+0xd78>
   30d94:	bne	30da4 <flatcc_json_parser_generic_json@@Base+0x31c>
   30d98:	ldrb	r2, [r7, #2]!
   30d9c:	cmp	r2, #32
   30da0:	bhi	30db8 <flatcc_json_parser_generic_json@@Base+0x330>
   30da4:	mov	r0, r5
   30da8:	mov	r2, r6
   30dac:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   30db0:	mov	r7, r0
   30db4:	ldrb	r2, [r7]
   30db8:	sub	r0, r2, #48	; 0x30
   30dbc:	cmp	r0, #10
   30dc0:	bcs	30e5c <flatcc_json_parser_generic_json@@Base+0x3d4>
   30dc4:	cmp	r7, r6
   30dc8:	beq	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   30dcc:	cmp	r2, #45	; 0x2d
   30dd0:	bne	30de4 <flatcc_json_parser_generic_json@@Base+0x35c>
   30dd4:	add	r7, r7, #1
   30dd8:	cmp	r7, r6
   30ddc:	beq	31304 <flatcc_json_parser_generic_json@@Base+0x87c>
   30de0:	ldrb	r2, [r7]
   30de4:	cmp	r2, #48	; 0x30
   30de8:	bne	30e78 <flatcc_json_parser_generic_json@@Base+0x3f0>
   30dec:	add	r4, r7, #1
   30df0:	cmp	r4, r6
   30df4:	mov	r1, r6
   30df8:	beq	31434 <flatcc_json_parser_generic_json@@Base+0x9ac>
   30dfc:	ldrb	r0, [r4]
   30e00:	cmp	r0, #46	; 0x2e
   30e04:	bne	311a4 <flatcc_json_parser_generic_json@@Base+0x71c>
   30e08:	mov	r0, r4
   30e0c:	ldrb	r1, [r0, #1]!
   30e10:	sub	r1, r1, #48	; 0x30
   30e14:	uxtb	r1, r1
   30e18:	cmp	r1, #10
   30e1c:	bcc	31170 <flatcc_json_parser_generic_json@@Base+0x6e8>
   30e20:	ldr	r1, [r9]
   30e24:	cmp	r1, #0
   30e28:	bne	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   30e2c:	mov	r1, #6
   30e30:	ldr	r2, [sp, #12]
   30e34:	mov	r4, r6
   30e38:	str	r1, [r9]
   30e3c:	ldr	r1, [sp, #8]
   30e40:	ldr	r1, [r1]
   30e44:	sub	r1, r0, r1
   30e48:	add	r1, r1, #1
   30e4c:	str	r1, [r2]
   30e50:	ldr	r1, [sp, #16]
   30e54:	str	r0, [r1]
   30e58:	b	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   30e5c:	cmp	r2, #90	; 0x5a
   30e60:	bgt	30ec0 <flatcc_json_parser_generic_json@@Base+0x438>
   30e64:	cmp	r2, #34	; 0x22
   30e68:	beq	30f44 <flatcc_json_parser_generic_json@@Base+0x4bc>
   30e6c:	cmp	r2, #45	; 0x2d
   30e70:	beq	30dc4 <flatcc_json_parser_generic_json@@Base+0x33c>
   30e74:	b	310a8 <flatcc_json_parser_generic_json@@Base+0x620>
   30e78:	sub	r0, r2, #49	; 0x31
   30e7c:	uxtb	r0, r0
   30e80:	cmp	r0, #8
   30e84:	bls	30f10 <flatcc_json_parser_generic_json@@Base+0x488>
   30e88:	ldr	r0, [r9]
   30e8c:	cmp	r0, #0
   30e90:	bne	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   30e94:	mov	r0, #6
   30e98:	ldr	r1, [sp, #12]
   30e9c:	str	r0, [r9]
   30ea0:	ldr	r0, [sp, #8]
   30ea4:	ldr	r0, [r0]
   30ea8:	sub	r0, r7, r0
   30eac:	add	r0, r0, #1
   30eb0:	str	r0, [r1]
   30eb4:	ldr	r0, [sp, #16]
   30eb8:	str	r7, [r0]
   30ebc:	b	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   30ec0:	cmp	r2, #91	; 0x5b
   30ec4:	beq	31068 <flatcc_json_parser_generic_json@@Base+0x5e0>
   30ec8:	cmp	r2, #123	; 0x7b
   30ecc:	bne	310a8 <flatcc_json_parser_generic_json@@Base+0x620>
   30ed0:	cmp	r8, #512	; 0x200
   30ed4:	beq	3182c <flatcc_json_parser_generic_json@@Base+0xda4>
   30ed8:	add	r0, sp, #24
   30edc:	mov	r1, #125	; 0x7d
   30ee0:	strb	r1, [r0, r8]
   30ee4:	add	r1, r7, #1
   30ee8:	sub	r0, r6, r1
   30eec:	cmp	r0, #2
   30ef0:	blt	31378 <flatcc_json_parser_generic_json@@Base+0x8f0>
   30ef4:	ldrb	r0, [r1]
   30ef8:	cmp	r0, #32
   30efc:	bls	31368 <flatcc_json_parser_generic_json@@Base+0x8e0>
   30f00:	mov	r7, r1
   30f04:	cmp	r7, r6
   30f08:	bne	31390 <flatcc_json_parser_generic_json@@Base+0x908>
   30f0c:	b	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   30f10:	add	r0, r7, #1
   30f14:	cmp	r6, r0
   30f18:	beq	31318 <flatcc_json_parser_generic_json@@Base+0x890>
   30f1c:	ldrb	r1, [r0], #1
   30f20:	sub	r1, r1, #48	; 0x30
   30f24:	uxtb	r1, r1
   30f28:	cmp	r1, #10
   30f2c:	bcc	30f14 <flatcc_json_parser_generic_json@@Base+0x48c>
   30f30:	sub	r4, r0, #1
   30f34:	cmp	r4, r6
   30f38:	mov	r1, r6
   30f3c:	bne	30dfc <flatcc_json_parser_generic_json@@Base+0x374>
   30f40:	b	31434 <flatcc_json_parser_generic_json@@Base+0x9ac>
   30f44:	cmp	r7, r6
   30f48:	beq	3132c <flatcc_json_parser_generic_json@@Base+0x8a4>
   30f4c:	add	r0, r7, #1
   30f50:	mov	r1, r6
   30f54:	add	r4, sp, #20
   30f58:	mov	r7, #17
   30f5c:	cmp	r0, r6
   30f60:	bne	30f90 <flatcc_json_parser_generic_json@@Base+0x508>
   30f64:	b	3140c <flatcc_json_parser_generic_json@@Base+0x984>
   30f68:	ldr	r1, [r9]
   30f6c:	cmp	r1, #0
   30f70:	mov	r1, r6
   30f74:	beq	30ffc <flatcc_json_parser_generic_json@@Base+0x574>
   30f78:	mov	r0, r5
   30f7c:	mov	r2, r6
   30f80:	mov	r3, r4
   30f84:	bl	300c4 <flatcc_json_parser_string_escape@@Base>
   30f88:	cmp	r0, r6
   30f8c:	beq	31408 <flatcc_json_parser_generic_json@@Base+0x980>
   30f90:	ldrb	r1, [r0]
   30f94:	cmp	r1, #34	; 0x22
   30f98:	beq	313e8 <flatcc_json_parser_generic_json@@Base+0x960>
   30f9c:	cmp	r1, #32
   30fa0:	bcc	30f68 <flatcc_json_parser_generic_json@@Base+0x4e0>
   30fa4:	rsb	r0, r0, #0
   30fa8:	uxtb	r2, r1
   30fac:	cmp	r2, #34	; 0x22
   30fb0:	cmpne	r2, #92	; 0x5c
   30fb4:	beq	30fe0 <flatcc_json_parser_generic_json@@Base+0x558>
   30fb8:	add	r1, r6, r0
   30fbc:	cmp	r1, #1
   30fc0:	beq	31028 <flatcc_json_parser_generic_json@@Base+0x5a0>
   30fc4:	rsb	r1, r0, #0
   30fc8:	sub	r0, r0, #1
   30fcc:	ldrb	r1, [r1, #1]
   30fd0:	cmp	r1, #32
   30fd4:	bcs	30fa8 <flatcc_json_parser_generic_json@@Base+0x520>
   30fd8:	rsb	r0, r0, #0
   30fdc:	b	30f68 <flatcc_json_parser_generic_json@@Base+0x4e0>
   30fe0:	adds	r1, r6, r0
   30fe4:	mov	r1, r6
   30fe8:	beq	30f78 <flatcc_json_parser_generic_json@@Base+0x4f0>
   30fec:	rsb	r1, r0, #0
   30ff0:	cmp	r2, #34	; 0x22
   30ff4:	bne	30f78 <flatcc_json_parser_generic_json@@Base+0x4f0>
   30ff8:	b	313ec <flatcc_json_parser_generic_json@@Base+0x964>
   30ffc:	ldr	r1, [sp, #8]
   31000:	str	r7, [r9]
   31004:	ldr	r2, [sp, #12]
   31008:	ldr	r1, [r1]
   3100c:	sub	r1, r0, r1
   31010:	add	r1, r1, #1
   31014:	str	r1, [r2]
   31018:	ldr	r1, [sp, #16]
   3101c:	str	r0, [r1]
   31020:	mov	r1, r6
   31024:	b	30f78 <flatcc_json_parser_generic_json@@Base+0x4f0>
   31028:	ldr	r0, [r9]
   3102c:	mov	r1, r6
   31030:	cmp	r0, #0
   31034:	bne	30f78 <flatcc_json_parser_generic_json@@Base+0x4f0>
   31038:	mov	r0, #20
   3103c:	ldr	r1, [sp, #4]
   31040:	str	r0, [r9]
   31044:	ldr	r0, [sp, #8]
   31048:	ldr	r0, [r0]
   3104c:	sub	r0, r1, r0
   31050:	ldr	r1, [sp, #12]
   31054:	str	r0, [r1]
   31058:	ldr	r0, [sp, #16]
   3105c:	mov	r1, r6
   31060:	str	r6, [r0]
   31064:	b	30f78 <flatcc_json_parser_generic_json@@Base+0x4f0>
   31068:	cmp	r8, #512	; 0x200
   3106c:	beq	3182c <flatcc_json_parser_generic_json@@Base+0xda4>
   31070:	add	r0, sp, #24
   31074:	mov	r1, #93	; 0x5d
   31078:	strb	r1, [r0, r8]
   3107c:	add	r1, r7, #1
   31080:	sub	r0, r6, r1
   31084:	cmp	r0, #2
   31088:	blt	313b8 <flatcc_json_parser_generic_json@@Base+0x930>
   3108c:	ldrb	r0, [r1]
   31090:	cmp	r0, #32
   31094:	bls	313a8 <flatcc_json_parser_generic_json@@Base+0x920>
   31098:	mov	r7, r1
   3109c:	cmp	r7, r6
   310a0:	bne	313d0 <flatcc_json_parser_generic_json@@Base+0x948>
   310a4:	b	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   310a8:	cmp	r7, r6
   310ac:	mov	r4, r6
   310b0:	beq	31164 <flatcc_json_parser_generic_json@@Base+0x6dc>
   310b4:	mov	r4, r7
   310b8:	sxtb	r0, r2
   310bc:	cmp	r0, #0
   310c0:	bpl	310dc <flatcc_json_parser_generic_json@@Base+0x654>
   310c4:	b	31154 <flatcc_json_parser_generic_json@@Base+0x6cc>
   310c8:	ldrb	r2, [r0]
   310cc:	mov	r4, r0
   310d0:	sxtb	r0, r2
   310d4:	cmp	r0, #0
   310d8:	bmi	31154 <flatcc_json_parser_generic_json@@Base+0x6cc>
   310dc:	uxtb	r0, r2
   310e0:	cmp	r0, #95	; 0x5f
   310e4:	cmpne	r0, #46	; 0x2e
   310e8:	beq	31154 <flatcc_json_parser_generic_json@@Base+0x6cc>
   310ec:	sub	r1, r2, #48	; 0x30
   310f0:	uxtb	r1, r1
   310f4:	cmp	r1, #9
   310f8:	bls	31154 <flatcc_json_parser_generic_json@@Base+0x6cc>
   310fc:	orr	r1, r2, #32
   31100:	sub	r1, r1, #97	; 0x61
   31104:	uxtb	r1, r1
   31108:	cmp	r1, #25
   3110c:	bls	31154 <flatcc_json_parser_generic_json@@Base+0x6cc>
   31110:	sub	r1, r6, r4
   31114:	cmp	r1, #2
   31118:	blt	31138 <flatcc_json_parser_generic_json@@Base+0x6b0>
   3111c:	cmp	r0, #32
   31120:	bhi	31164 <flatcc_json_parser_generic_json@@Base+0x6dc>
   31124:	bne	31138 <flatcc_json_parser_generic_json@@Base+0x6b0>
   31128:	mov	r0, r4
   3112c:	ldrb	r1, [r0, #1]!
   31130:	cmp	r1, #32
   31134:	bhi	31158 <flatcc_json_parser_generic_json@@Base+0x6d0>
   31138:	mov	r0, r5
   3113c:	mov	r1, r4
   31140:	mov	r2, r6
   31144:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   31148:	cmp	r0, r4
   3114c:	bne	31158 <flatcc_json_parser_generic_json@@Base+0x6d0>
   31150:	b	31164 <flatcc_json_parser_generic_json@@Base+0x6dc>
   31154:	add	r0, r4, #1
   31158:	cmp	r0, r6
   3115c:	bne	310c8 <flatcc_json_parser_generic_json@@Base+0x640>
   31160:	mov	r4, r6
   31164:	cmp	r7, r4
   31168:	bne	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   3116c:	b	31840 <flatcc_json_parser_generic_json@@Base+0xdb8>
   31170:	add	r4, r4, #2
   31174:	mov	r1, r6
   31178:	cmp	r4, r6
   3117c:	beq	31434 <flatcc_json_parser_generic_json@@Base+0x9ac>
   31180:	ldrb	r0, [r4]
   31184:	sub	r1, r0, #48	; 0x30
   31188:	uxtb	r1, r1
   3118c:	cmp	r1, #9
   31190:	bhi	311a4 <flatcc_json_parser_generic_json@@Base+0x71c>
   31194:	add	r4, r4, #1
   31198:	cmp	r6, r4
   3119c:	bne	31180 <flatcc_json_parser_generic_json@@Base+0x6f8>
   311a0:	b	31318 <flatcc_json_parser_generic_json@@Base+0x890>
   311a4:	cmp	r4, r6
   311a8:	mov	r1, r6
   311ac:	beq	31434 <flatcc_json_parser_generic_json@@Base+0x9ac>
   311b0:	orr	r1, r0, #32
   311b4:	cmp	r1, #101	; 0x65
   311b8:	bne	31218 <flatcc_json_parser_generic_json@@Base+0x790>
   311bc:	add	r0, r4, #1
   311c0:	cmp	r0, r6
   311c4:	beq	31304 <flatcc_json_parser_generic_json@@Base+0x87c>
   311c8:	ldrb	r1, [r0]
   311cc:	cmp	r1, #45	; 0x2d
   311d0:	cmpne	r1, #43	; 0x2b
   311d4:	addeq	r0, r4, #2
   311d8:	cmp	r0, r6
   311dc:	beq	30e20 <flatcc_json_parser_generic_json@@Base+0x398>
   311e0:	ldrb	r1, [r0]
   311e4:	sub	r1, r1, #48	; 0x30
   311e8:	uxtb	r1, r1
   311ec:	cmp	r1, #9
   311f0:	bhi	30e20 <flatcc_json_parser_generic_json@@Base+0x398>
   311f4:	add	r1, r0, #1
   311f8:	cmp	r6, r1
   311fc:	beq	31318 <flatcc_json_parser_generic_json@@Base+0x890>
   31200:	ldrb	r0, [r1], #1
   31204:	sub	r2, r0, #48	; 0x30
   31208:	uxtb	r2, r2
   3120c:	cmp	r2, #10
   31210:	bcc	311f8 <flatcc_json_parser_generic_json@@Base+0x770>
   31214:	sub	r4, r1, #1
   31218:	cmp	r4, r6
   3121c:	mov	r1, r6
   31220:	beq	31434 <flatcc_json_parser_generic_json@@Base+0x9ac>
   31224:	sub	r2, r0, #9
   31228:	cmp	r2, #49	; 0x31
   3122c:	bhi	31420 <flatcc_json_parser_generic_json@@Base+0x998>
   31230:	add	r0, pc, #4
   31234:	mov	r1, r4
   31238:	ldr	pc, [r0, r2, lsl #2]
   3123c:	andeq	r1, r3, r4, asr #8
   31240:	andeq	r1, r3, r4, asr #8
   31244:	andeq	r1, r3, r4, asr #8
   31248:	andeq	r1, r3, r4, lsr r4
   3124c:	andeq	r1, r3, r4, asr #8
   31250:	andeq	r1, r3, r4, lsr r4
   31254:	andeq	r1, r3, r4, lsr r4
   31258:	andeq	r1, r3, r4, lsr r4
   3125c:	andeq	r1, r3, r4, lsr r4
   31260:	andeq	r1, r3, r4, lsr r4
   31264:	andeq	r1, r3, r4, lsr r4
   31268:	andeq	r1, r3, r4, lsr r4
   3126c:	andeq	r1, r3, r4, lsr r4
   31270:	andeq	r1, r3, r4, lsr r4
   31274:	andeq	r1, r3, r4, lsr r4
   31278:	andeq	r1, r3, r4, lsr r4
   3127c:	andeq	r1, r3, r4, lsr r4
   31280:	andeq	r1, r3, r4, lsr r4
   31284:	andeq	r1, r3, r4, lsr r4
   31288:	andeq	r1, r3, r4, lsr r4
   3128c:	andeq	r1, r3, r4, lsr r4
   31290:	andeq	r1, r3, r4, lsr r4
   31294:	andeq	r1, r3, r4, lsr r4
   31298:	andeq	r1, r3, r4, asr #8
   3129c:	andeq	r1, r3, r4, lsr r4
   312a0:	andeq	r1, r3, r4, lsr r4
   312a4:	andeq	r1, r3, r4, lsr r4
   312a8:	andeq	r1, r3, r4, lsr r4
   312ac:	andeq	r1, r3, r4, lsr r4
   312b0:	andeq	r1, r3, r4, lsr r4
   312b4:	andeq	r1, r3, r4, lsr r4
   312b8:	andeq	r1, r3, r4, lsr r4
   312bc:	andeq	r1, r3, r4, lsr r4
   312c0:	andeq	r1, r3, r4, lsr r4
   312c4:	andeq	r1, r3, r4, lsr r4
   312c8:	andeq	r1, r3, r4, asr #8
   312cc:	andeq	r1, r3, r4, lsr r4
   312d0:	andeq	r1, r3, r4, lsr r4
   312d4:	andeq	r1, r3, r4, lsr r4
   312d8:	andeq	r1, r3, r4, lsr r4
   312dc:	andeq	r1, r3, r4, lsr r4
   312e0:	andeq	r1, r3, r4, lsr r4
   312e4:	andeq	r1, r3, r4, lsr r4
   312e8:	andeq	r1, r3, r4, lsr r4
   312ec:	andeq	r1, r3, r4, lsr r4
   312f0:	andeq	r1, r3, r4, lsr r4
   312f4:	andeq	r1, r3, r4, lsr r4
   312f8:	andeq	r1, r3, r4, lsr r4
   312fc:	andeq	r1, r3, r4, lsr r4
   31300:	andeq	r1, r3, r4, asr #8
   31304:	ldr	r0, [r9]
   31308:	cmp	r0, #0
   3130c:	bne	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31310:	mov	r0, #6
   31314:	b	3133c <flatcc_json_parser_generic_json@@Base+0x8b4>
   31318:	mov	r1, r6
   3131c:	ldr	r0, [r9]
   31320:	cmp	r0, #0
   31324:	bne	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31328:	b	31744 <flatcc_json_parser_generic_json@@Base+0xcbc>
   3132c:	ldr	r0, [r9]
   31330:	cmp	r0, #0
   31334:	bne	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31338:	mov	r0, #16
   3133c:	str	r0, [r9]
   31340:	ldr	r0, [sp, #8]
   31344:	ldr	r1, [sp, #4]
   31348:	mov	r4, r6
   3134c:	ldr	r0, [r0]
   31350:	sub	r0, r1, r0
   31354:	ldr	r1, [sp, #12]
   31358:	str	r0, [r1]
   3135c:	ldr	r0, [sp, #16]
   31360:	str	r6, [r0]
   31364:	b	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   31368:	bne	31378 <flatcc_json_parser_generic_json@@Base+0x8f0>
   3136c:	ldrb	r0, [r7, #2]!
   31370:	cmp	r0, #32
   31374:	bhi	31388 <flatcc_json_parser_generic_json@@Base+0x900>
   31378:	mov	r0, r5
   3137c:	mov	r2, r6
   31380:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   31384:	mov	r7, r0
   31388:	cmp	r7, r6
   3138c:	beq	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   31390:	ldrb	r0, [r7]
   31394:	add	r8, r8, #1
   31398:	cmp	r0, #125	; 0x7d
   3139c:	mov	r4, r7
   313a0:	bne	31730 <flatcc_json_parser_generic_json@@Base+0xca8>
   313a4:	b	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   313a8:	bne	313b8 <flatcc_json_parser_generic_json@@Base+0x930>
   313ac:	ldrb	r0, [r7, #2]!
   313b0:	cmp	r0, #32
   313b4:	bhi	313c8 <flatcc_json_parser_generic_json@@Base+0x940>
   313b8:	mov	r0, r5
   313bc:	mov	r2, r6
   313c0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   313c4:	mov	r7, r0
   313c8:	cmp	r7, r6
   313cc:	beq	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   313d0:	ldrb	r0, [r7]
   313d4:	add	r8, r8, #1
   313d8:	cmp	r0, #93	; 0x5d
   313dc:	mov	r4, r7
   313e0:	beq	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   313e4:	b	31730 <flatcc_json_parser_generic_json@@Base+0xca8>
   313e8:	mov	r1, r0
   313ec:	cmp	r1, r6
   313f0:	beq	3140c <flatcc_json_parser_generic_json@@Base+0x984>
   313f4:	ldrb	r0, [r1]
   313f8:	cmp	r0, #34	; 0x22
   313fc:	bne	3140c <flatcc_json_parser_generic_json@@Base+0x984>
   31400:	add	r4, r1, #1
   31404:	b	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   31408:	mov	r1, r6
   3140c:	ldr	r0, [r9]
   31410:	cmp	r0, #0
   31414:	bne	31440 <flatcc_json_parser_generic_json@@Base+0x9b8>
   31418:	mov	r0, #20
   3141c:	b	31748 <flatcc_json_parser_generic_json@@Base+0xcc0>
   31420:	cmp	r0, #93	; 0x5d
   31424:	beq	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   31428:	cmp	r0, #125	; 0x7d
   3142c:	mov	r1, r4
   31430:	beq	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   31434:	ldr	r0, [r9]
   31438:	cmp	r0, #0
   3143c:	beq	31744 <flatcc_json_parser_generic_json@@Base+0xcbc>
   31440:	mov	r4, r6
   31444:	subs	r1, r4, r6
   31448:	mov	r2, r8
   3144c:	movwne	r1, #1
   31450:	cmp	r8, #0
   31454:	movwne	r2, #1
   31458:	beq	31784 <flatcc_json_parser_generic_json@@Base+0xcfc>
   3145c:	cmp	r4, r6
   31460:	beq	31794 <flatcc_json_parser_generic_json@@Base+0xd0c>
   31464:	ldrb	r1, [sl, r8]
   31468:	sub	r0, r6, r4
   3146c:	cmp	r1, #93	; 0x5d
   31470:	bne	314c4 <flatcc_json_parser_generic_json@@Base+0xa3c>
   31474:	cmp	r0, #2
   31478:	blt	31550 <flatcc_json_parser_generic_json@@Base+0xac8>
   3147c:	ldrb	r0, [r4]
   31480:	cmp	r0, #32
   31484:	bls	3153c <flatcc_json_parser_generic_json@@Base+0xab4>
   31488:	mov	r7, r4
   3148c:	cmp	r7, r6
   31490:	mov	r4, r6
   31494:	beq	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   31498:	ldrb	r0, [r7]
   3149c:	cmp	r0, #44	; 0x2c
   314a0:	beq	315ac <flatcc_json_parser_generic_json@@Base+0xb24>
   314a4:	cmp	r0, #93	; 0x5d
   314a8:	beq	31688 <flatcc_json_parser_generic_json@@Base+0xc00>
   314ac:	ldr	r0, [r9]
   314b0:	mov	r4, r6
   314b4:	cmp	r0, #0
   314b8:	bne	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   314bc:	mov	r0, #9
   314c0:	b	31510 <flatcc_json_parser_generic_json@@Base+0xa88>
   314c4:	cmp	r0, #2
   314c8:	blt	31588 <flatcc_json_parser_generic_json@@Base+0xb00>
   314cc:	ldrb	r0, [r4]
   314d0:	cmp	r0, #32
   314d4:	bls	31574 <flatcc_json_parser_generic_json@@Base+0xaec>
   314d8:	mov	r7, r4
   314dc:	cmp	r7, r6
   314e0:	mov	r4, r6
   314e4:	beq	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   314e8:	ldrb	r0, [r7]
   314ec:	cmp	r0, #44	; 0x2c
   314f0:	beq	315ec <flatcc_json_parser_generic_json@@Base+0xb64>
   314f4:	cmp	r0, #125	; 0x7d
   314f8:	beq	31688 <flatcc_json_parser_generic_json@@Base+0xc00>
   314fc:	ldr	r0, [r9]
   31500:	mov	r4, r6
   31504:	cmp	r0, #0
   31508:	bne	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   3150c:	mov	r0, #10
   31510:	str	r0, [r9]
   31514:	ldr	r0, [sp, #8]
   31518:	ldr	r1, [sp, #12]
   3151c:	mov	r4, r6
   31520:	ldr	r0, [r0]
   31524:	sub	r0, r7, r0
   31528:	add	r0, r0, #1
   3152c:	str	r0, [r1]
   31530:	ldr	r0, [sp, #16]
   31534:	str	r7, [r0]
   31538:	b	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   3153c:	bne	31550 <flatcc_json_parser_generic_json@@Base+0xac8>
   31540:	mov	r7, r4
   31544:	ldrb	r0, [r7, #1]!
   31548:	cmp	r0, #32
   3154c:	bhi	31564 <flatcc_json_parser_generic_json@@Base+0xadc>
   31550:	mov	r0, r5
   31554:	mov	r1, r4
   31558:	mov	r2, r6
   3155c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   31560:	mov	r7, r0
   31564:	cmp	r7, r6
   31568:	mov	r4, r6
   3156c:	bne	31498 <flatcc_json_parser_generic_json@@Base+0xa10>
   31570:	b	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   31574:	bne	31588 <flatcc_json_parser_generic_json@@Base+0xb00>
   31578:	mov	r7, r4
   3157c:	ldrb	r0, [r7, #1]!
   31580:	cmp	r0, #32
   31584:	bhi	3159c <flatcc_json_parser_generic_json@@Base+0xb14>
   31588:	mov	r0, r5
   3158c:	mov	r1, r4
   31590:	mov	r2, r6
   31594:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   31598:	mov	r7, r0
   3159c:	cmp	r7, r6
   315a0:	mov	r4, r6
   315a4:	bne	314e8 <flatcc_json_parser_generic_json@@Base+0xa60>
   315a8:	b	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   315ac:	add	r1, r7, #1
   315b0:	sub	r0, r6, r1
   315b4:	cmp	r0, #2
   315b8:	blt	31664 <flatcc_json_parser_generic_json@@Base+0xbdc>
   315bc:	ldrb	r0, [r1]
   315c0:	cmp	r0, #32
   315c4:	bls	31654 <flatcc_json_parser_generic_json@@Base+0xbcc>
   315c8:	mov	r7, r1
   315cc:	cmp	r7, r6
   315d0:	bne	3167c <flatcc_json_parser_generic_json@@Base+0xbf4>
   315d4:	ldr	r0, [r9]
   315d8:	mov	r4, r6
   315dc:	cmp	r0, #0
   315e0:	bne	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   315e4:	mov	r0, #9
   315e8:	b	31628 <flatcc_json_parser_generic_json@@Base+0xba0>
   315ec:	add	r1, r7, #1
   315f0:	sub	r0, r6, r1
   315f4:	cmp	r0, #2
   315f8:	blt	3170c <flatcc_json_parser_generic_json@@Base+0xc84>
   315fc:	ldrb	r0, [r1]
   31600:	cmp	r0, #32
   31604:	bls	316fc <flatcc_json_parser_generic_json@@Base+0xc74>
   31608:	mov	r7, r1
   3160c:	cmp	r7, r6
   31610:	bne	31724 <flatcc_json_parser_generic_json@@Base+0xc9c>
   31614:	ldr	r0, [r9]
   31618:	mov	r4, r6
   3161c:	cmp	r0, #0
   31620:	bne	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   31624:	mov	r0, #10
   31628:	str	r0, [r9]
   3162c:	ldr	r0, [sp, #8]
   31630:	ldr	r1, [sp, #4]
   31634:	mov	r4, r6
   31638:	ldr	r0, [r0]
   3163c:	sub	r0, r1, r0
   31640:	ldr	r1, [sp, #12]
   31644:	str	r0, [r1]
   31648:	ldr	r0, [sp, #16]
   3164c:	str	r6, [r0]
   31650:	b	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   31654:	bne	31664 <flatcc_json_parser_generic_json@@Base+0xbdc>
   31658:	ldrb	r0, [r7, #2]!
   3165c:	cmp	r0, #32
   31660:	bhi	31674 <flatcc_json_parser_generic_json@@Base+0xbec>
   31664:	mov	r0, r5
   31668:	mov	r2, r6
   3166c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   31670:	mov	r7, r0
   31674:	cmp	r7, r6
   31678:	beq	315d4 <flatcc_json_parser_generic_json@@Base+0xb4c>
   3167c:	ldrb	r0, [r7]
   31680:	cmp	r0, #93	; 0x5d
   31684:	bne	31730 <flatcc_json_parser_generic_json@@Base+0xca8>
   31688:	add	r1, r7, #1
   3168c:	sub	r0, r6, r1
   31690:	cmp	r0, #2
   31694:	blt	316c0 <flatcc_json_parser_generic_json@@Base+0xc38>
   31698:	ldrb	r0, [r1]
   3169c:	cmp	r0, #32
   316a0:	bls	316ac <flatcc_json_parser_generic_json@@Base+0xc24>
   316a4:	mov	r4, r1
   316a8:	b	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   316ac:	bne	316c0 <flatcc_json_parser_generic_json@@Base+0xc38>
   316b0:	ldrb	r0, [r7, #2]!
   316b4:	mov	r4, r7
   316b8:	cmp	r0, #32
   316bc:	bhi	316d0 <flatcc_json_parser_generic_json@@Base+0xc48>
   316c0:	mov	r0, r5
   316c4:	mov	r2, r6
   316c8:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   316cc:	mov	r4, r0
   316d0:	subs	r1, r4, r6
   316d4:	sub	r0, r8, #1
   316d8:	movwne	r1, #1
   316dc:	subs	r2, r8, #1
   316e0:	movwne	r2, #1
   316e4:	cmp	r8, #1
   316e8:	beq	31798 <flatcc_json_parser_generic_json@@Base+0xd10>
   316ec:	cmp	r4, r6
   316f0:	mov	r8, r0
   316f4:	bne	31464 <flatcc_json_parser_generic_json@@Base+0x9dc>
   316f8:	b	31798 <flatcc_json_parser_generic_json@@Base+0xd10>
   316fc:	bne	3170c <flatcc_json_parser_generic_json@@Base+0xc84>
   31700:	ldrb	r0, [r7, #2]!
   31704:	cmp	r0, #32
   31708:	bhi	3171c <flatcc_json_parser_generic_json@@Base+0xc94>
   3170c:	mov	r0, r5
   31710:	mov	r2, r6
   31714:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   31718:	mov	r7, r0
   3171c:	cmp	r7, r6
   31720:	beq	31614 <flatcc_json_parser_generic_json@@Base+0xb8c>
   31724:	ldrb	r0, [r7]
   31728:	cmp	r0, #125	; 0x7d
   3172c:	beq	31688 <flatcc_json_parser_generic_json@@Base+0xc00>
   31730:	add	r0, sp, #24
   31734:	cmp	r7, r6
   31738:	add	r0, r0, r8
   3173c:	bne	30adc <flatcc_json_parser_generic_json@@Base+0x54>
   31740:	b	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   31744:	mov	r0, #6
   31748:	str	r0, [r9]
   3174c:	ldr	r0, [sp, #8]
   31750:	ldr	r2, [sp, #12]
   31754:	mov	r4, r6
   31758:	ldr	r0, [r0]
   3175c:	sub	r0, r1, r0
   31760:	add	r0, r0, #1
   31764:	str	r0, [r2]
   31768:	ldr	r0, [sp, #16]
   3176c:	str	r1, [r0]
   31770:	b	31444 <flatcc_json_parser_generic_json@@Base+0x9bc>
   31774:	mov	r4, r7
   31778:	mov	r0, r4
   3177c:	sub	sp, fp, #28
   31780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31784:	mov	r0, r8
   31788:	cmp	r1, #0
   3178c:	beq	317a0 <flatcc_json_parser_generic_json@@Base+0xd18>
   31790:	b	317f4 <flatcc_json_parser_generic_json@@Base+0xd6c>
   31794:	mov	r0, r8
   31798:	cmp	r1, #0
   3179c:	bne	317f4 <flatcc_json_parser_generic_json@@Base+0xd6c>
   317a0:	cmp	r2, #0
   317a4:	beq	317f4 <flatcc_json_parser_generic_json@@Base+0xd6c>
   317a8:	ldr	r1, [r9]
   317ac:	cmp	r1, #0
   317b0:	bne	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   317b4:	add	r1, sp, #24
   317b8:	add	r0, r1, r0
   317bc:	mov	r1, #10
   317c0:	ldrb	r0, [r0, #-1]
   317c4:	cmp	r0, #93	; 0x5d
   317c8:	movweq	r1, #9
   317cc:	str	r1, [r9]
   317d0:	ldr	r0, [sp, #8]
   317d4:	ldr	r1, [sp, #4]
   317d8:	ldr	r0, [r0]
   317dc:	sub	r0, r1, r0
   317e0:	ldr	r1, [sp, #12]
   317e4:	str	r0, [r1]
   317e8:	ldr	r0, [sp, #16]
   317ec:	str	r6, [r0]
   317f0:	mov	r4, r6
   317f4:	mov	r0, r4
   317f8:	sub	sp, fp, #28
   317fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31800:	ldr	r0, [r9]
   31804:	cmp	r0, #0
   31808:	bne	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   3180c:	mov	r0, #10
   31810:	str	r0, [r9]
   31814:	b	317d0 <flatcc_json_parser_generic_json@@Base+0xd48>
   31818:	ldr	r0, [r9]
   3181c:	cmp	r0, #0
   31820:	bne	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   31824:	mov	r0, #4
   31828:	b	31850 <flatcc_json_parser_generic_json@@Base+0xdc8>
   3182c:	ldr	r0, [r9]
   31830:	cmp	r0, #0
   31834:	bne	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   31838:	mov	r0, #2
   3183c:	b	31850 <flatcc_json_parser_generic_json@@Base+0xdc8>
   31840:	ldr	r0, [r9]
   31844:	cmp	r0, #0
   31848:	bne	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>
   3184c:	mov	r0, #5
   31850:	str	r0, [r9]
   31854:	ldr	r0, [sp, #8]
   31858:	ldr	r1, [sp, #12]
   3185c:	ldr	r0, [r0]
   31860:	sub	r0, r7, r0
   31864:	add	r0, r0, #1
   31868:	str	r0, [r1]
   3186c:	ldr	r0, [sp, #16]
   31870:	str	r7, [r0]
   31874:	b	317f0 <flatcc_json_parser_generic_json@@Base+0xd68>

00031878 <flatcc_json_parser_double@@Base>:
   31878:	push	{r4, r5, r6, r7, fp, lr}
   3187c:	add	fp, sp, #16
   31880:	mov	r5, r0
   31884:	mov	r0, #0
   31888:	mov	r6, r1
   3188c:	cmp	r1, r2
   31890:	str	r0, [r3]
   31894:	str	r0, [r3, #4]
   31898:	beq	3193c <flatcc_json_parser_double@@Base+0xc4>
   3189c:	mov	r0, r6
   318a0:	mov	r4, r2
   318a4:	mov	r7, r3
   318a8:	ldrb	r1, [r0], #1
   318ac:	cmp	r1, #45	; 0x2d
   318b0:	movne	r0, r6
   318b4:	sub	r2, r2, r0
   318b8:	cmp	r2, #2
   318bc:	blt	318fc <flatcc_json_parser_double@@Base+0x84>
   318c0:	sub	r1, r1, #45	; 0x2d
   318c4:	clz	r1, r1
   318c8:	lsr	r1, r1, #5
   318cc:	ldrb	r1, [r6, r1]
   318d0:	cmp	r1, #46	; 0x2e
   318d4:	beq	318ec <flatcc_json_parser_double@@Base+0x74>
   318d8:	cmp	r1, #48	; 0x30
   318dc:	bne	318fc <flatcc_json_parser_double@@Base+0x84>
   318e0:	ldrb	r0, [r0, #1]
   318e4:	cmp	r0, #48	; 0x30
   318e8:	bne	318fc <flatcc_json_parser_double@@Base+0x84>
   318ec:	ldr	r0, [r5, #24]
   318f0:	cmp	r0, #0
   318f4:	bne	31968 <flatcc_json_parser_double@@Base+0xf0>
   318f8:	b	3194c <flatcc_json_parser_double@@Base+0xd4>
   318fc:	sub	r1, r4, r6
   31900:	mov	r0, r6
   31904:	mov	r2, r7
   31908:	bl	31970 <flatcc_json_parser_double@@Base+0xf8>
   3190c:	cmp	r0, #0
   31910:	cmpne	r0, r6
   31914:	bne	3196c <flatcc_json_parser_double@@Base+0xf4>
   31918:	vldr	d0, [r7]
   3191c:	bl	12ae0 <__isinf@plt>
   31920:	ldr	r1, [r5, #24]
   31924:	cmp	r0, #0
   31928:	beq	31944 <flatcc_json_parser_double@@Base+0xcc>
   3192c:	cmp	r1, #0
   31930:	bne	31968 <flatcc_json_parser_double@@Base+0xf0>
   31934:	mov	r0, #7
   31938:	b	31950 <flatcc_json_parser_double@@Base+0xd8>
   3193c:	mov	r0, r6
   31940:	pop	{r4, r5, r6, r7, fp, pc}
   31944:	cmp	r1, #0
   31948:	bne	31968 <flatcc_json_parser_double@@Base+0xf0>
   3194c:	mov	r0, #6
   31950:	str	r6, [r5, #36]	; 0x24
   31954:	ldr	r1, [r5, #4]
   31958:	sub	r1, r6, r1
   3195c:	add	r1, r1, #1
   31960:	str	r1, [r5, #20]
   31964:	str	r0, [r5, #24]
   31968:	mov	r0, r4
   3196c:	pop	{r4, r5, r6, r7, fp, pc}
   31970:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31974:	add	fp, sp, #28
   31978:	sub	sp, sp, #36	; 0x24
   3197c:	cmp	r1, #1000	; 0x3e8
   31980:	mov	r3, r1
   31984:	mov	r5, #0
   31988:	mov	r9, r0
   3198c:	movge	r3, #1000	; 0x3e8
   31990:	str	r5, [r2]
   31994:	str	r5, [r2, #4]
   31998:	add	ip, r0, r3
   3199c:	add	lr, ip, #1
   319a0:	cmp	lr, r0
   319a4:	beq	319fc <flatcc_json_parser_double@@Base+0x184>
   319a8:	ldrb	r0, [r9]
   319ac:	mov	r4, r9
   319b0:	cmp	r0, #45	; 0x2d
   319b4:	bne	319cc <flatcc_json_parser_double@@Base+0x154>
   319b8:	cmp	r3, #0
   319bc:	beq	31da0 <flatcc_json_parser_double@@Base+0x528>
   319c0:	add	r4, r9, #1
   319c4:	mov	r5, #1
   319c8:	ldrb	r0, [r4]
   319cc:	cmp	r0, #48	; 0x30
   319d0:	bne	31a0c <flatcc_json_parser_double@@Base+0x194>
   319d4:	add	r6, r4, #1
   319d8:	cmp	r4, ip
   319dc:	beq	31a80 <flatcc_json_parser_double@@Base+0x208>
   319e0:	ldrb	r1, [r6]
   319e4:	orr	r0, r1, #32
   319e8:	cmp	r0, #120	; 0x78
   319ec:	bne	31a4c <flatcc_json_parser_double@@Base+0x1d4>
   319f0:	mov	r0, #0
   319f4:	str	r0, [r2]
   319f8:	str	r0, [r2, #4]
   319fc:	mov	r2, r9
   31a00:	mov	r0, r2
   31a04:	sub	sp, fp, #28
   31a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a0c:	sub	r1, r0, #49	; 0x31
   31a10:	uxtb	r1, r1
   31a14:	cmp	r1, #9
   31a18:	bcc	31a34 <flatcc_json_parser_double@@Base+0x1bc>
   31a1c:	cmp	r5, #0
   31a20:	movne	r9, #0
   31a24:	mov	r2, r9
   31a28:	mov	r0, r2
   31a2c:	sub	sp, fp, #28
   31a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a34:	sub	r0, r0, #48	; 0x30
   31a38:	add	r6, r4, #1
   31a3c:	asr	r1, r0, #31
   31a40:	cmp	r6, lr
   31a44:	bne	31a90 <flatcc_json_parser_double@@Base+0x218>
   31a48:	b	31da0 <flatcc_json_parser_double@@Base+0x528>
   31a4c:	cmp	r1, #48	; 0x30
   31a50:	mov	r0, #0
   31a54:	mov	r1, #0
   31a58:	bne	31a88 <flatcc_json_parser_double@@Base+0x210>
   31a5c:	sub	r0, ip, #1
   31a60:	mov	r1, r4
   31a64:	cmp	r0, r4
   31a68:	beq	31a7c <flatcc_json_parser_double@@Base+0x204>
   31a6c:	ldrb	r7, [r1, #2]
   31a70:	add	r4, r1, #1
   31a74:	cmp	r7, #48	; 0x30
   31a78:	beq	31a60 <flatcc_json_parser_double@@Base+0x1e8>
   31a7c:	add	r6, r1, #2
   31a80:	mov	r0, #0
   31a84:	mov	r1, #0
   31a88:	cmp	r6, lr
   31a8c:	beq	31da0 <flatcc_json_parser_double@@Base+0x528>
   31a90:	mov	sl, #10
   31a94:	mov	r7, r6
   31a98:	str	r2, [sp, #20]
   31a9c:	ldrb	r8, [r7]
   31aa0:	sub	r2, r8, #48	; 0x30
   31aa4:	uxtb	r4, r2
   31aa8:	mov	r2, #0
   31aac:	cmp	r4, #9
   31ab0:	bhi	31af0 <flatcc_json_parser_double@@Base+0x278>
   31ab4:	movw	r4, #39320	; 0x9998
   31ab8:	movt	r4, #39321	; 0x9999
   31abc:	subs	r4, r4, r0
   31ac0:	movw	r4, #39321	; 0x9999
   31ac4:	movt	r4, #6553	; 0x1999
   31ac8:	sbcs	r4, r4, r1
   31acc:	bcc	31b0c <flatcc_json_parser_double@@Base+0x294>
   31ad0:	add	r1, r1, r1, lsl #2
   31ad4:	add	r7, r7, #1
   31ad8:	lsl	r1, r1, #1
   31adc:	umlal	r8, r1, r0, sl
   31ae0:	subs	r0, r8, #48	; 0x30
   31ae4:	sbc	r1, r1, #0
   31ae8:	cmp	lr, r7
   31aec:	bne	31a9c <flatcc_json_parser_double@@Base+0x224>
   31af0:	mov	r8, r0
   31af4:	mov	sl, r1
   31af8:	mov	r0, #0
   31afc:	cmp	r7, lr
   31b00:	str	r0, [sp, #24]
   31b04:	bne	31b34 <flatcc_json_parser_double@@Base+0x2bc>
   31b08:	b	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31b0c:	adds	r4, r0, #1
   31b10:	adc	sl, r1, #0
   31b14:	cmp	r8, #52	; 0x34
   31b18:	mov	r8, r4
   31b1c:	movls	r8, r0
   31b20:	movls	sl, r1
   31b24:	mov	r0, #1
   31b28:	cmp	r7, lr
   31b2c:	str	r0, [sp, #24]
   31b30:	beq	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31b34:	sub	r0, r7, r6
   31b38:	mov	r6, #0
   31b3c:	str	r0, [sp, #16]
   31b40:	sub	r0, r3, r7
   31b44:	add	r0, r9, r0
   31b48:	ldrb	r1, [r7]
   31b4c:	cmp	r1, #48	; 0x30
   31b50:	bne	31c58 <flatcc_json_parser_double@@Base+0x3e0>
   31b54:	add	r1, r7, #1
   31b58:	cmp	r7, ip
   31b5c:	sub	r0, r0, #1
   31b60:	add	r6, r6, #1
   31b64:	mov	r7, r1
   31b68:	bne	31b48 <flatcc_json_parser_double@@Base+0x2d0>
   31b6c:	mov	r7, r1
   31b70:	mov	r2, #0
   31b74:	cmp	r7, lr
   31b78:	beq	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31b7c:	ldrb	r0, [r7]
   31b80:	cmp	r0, #46	; 0x2e
   31b84:	bne	31d78 <flatcc_json_parser_double@@Base+0x500>
   31b88:	mov	r4, r7
   31b8c:	ldrb	r0, [r4, #1]!
   31b90:	sub	r1, r0, #48	; 0x30
   31b94:	uxtb	r1, r1
   31b98:	cmp	r1, #9
   31b9c:	bhi	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31ba0:	cmp	r7, ip
   31ba4:	beq	31cb4 <flatcc_json_parser_double@@Base+0x43c>
   31ba8:	sub	r1, r3, r7
   31bac:	str	r4, [sp, #8]
   31bb0:	add	r1, r1, r9
   31bb4:	sub	r1, r1, #1
   31bb8:	str	r1, [sp, #12]
   31bbc:	mov	r1, #0
   31bc0:	mov	r3, r1
   31bc4:	movw	r1, #39320	; 0x9998
   31bc8:	movt	r1, #39321	; 0x9999
   31bcc:	subs	r1, r1, r8
   31bd0:	movw	r1, #39321	; 0x9999
   31bd4:	movt	r1, #6553	; 0x1999
   31bd8:	sbcs	r1, r1, sl
   31bdc:	bcc	31cc4 <flatcc_json_parser_double@@Base+0x44c>
   31be0:	add	r1, sl, sl, lsl #2
   31be4:	uxtb	r0, r0
   31be8:	mov	r4, #10
   31bec:	lsl	r1, r1, #1
   31bf0:	umlal	r0, r1, r8, r4
   31bf4:	add	r4, r7, r3
   31bf8:	subs	r8, r0, #48	; 0x30
   31bfc:	ldr	r0, [sp, #12]
   31c00:	sbc	sl, r1, #0
   31c04:	cmp	r0, r3
   31c08:	beq	31c3c <flatcc_json_parser_double@@Base+0x3c4>
   31c0c:	ldrb	r0, [r4, #2]
   31c10:	str	sl, [sp, #28]
   31c14:	mov	sl, r8
   31c18:	mov	r8, r5
   31c1c:	add	r1, r3, #1
   31c20:	sub	r5, r0, #48	; 0x30
   31c24:	uxtb	r5, r5
   31c28:	cmp	r5, #10
   31c2c:	mov	r5, r8
   31c30:	mov	r8, sl
   31c34:	ldr	sl, [sp, #28]
   31c38:	bcc	31bc0 <flatcc_json_parser_double@@Base+0x348>
   31c3c:	mvn	r0, r3
   31c40:	add	r7, r4, #2
   31c44:	add	r6, r0, r6
   31c48:	ldr	r4, [sp, #8]
   31c4c:	cmp	r7, lr
   31c50:	bne	31d08 <flatcc_json_parser_double@@Base+0x490>
   31c54:	b	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31c58:	sub	r1, r1, #49	; 0x31
   31c5c:	uxtb	r1, r1
   31c60:	cmp	r1, #8
   31c64:	bhi	31ca4 <flatcc_json_parser_double@@Base+0x42c>
   31c68:	mvn	r2, #0
   31c6c:	mov	r1, r2
   31c70:	cmp	r0, #0
   31c74:	beq	31c94 <flatcc_json_parser_double@@Base+0x41c>
   31c78:	ldrb	r2, [r7, -r1]
   31c7c:	sub	r0, r0, #1
   31c80:	sub	r2, r2, #48	; 0x30
   31c84:	uxtb	r4, r2
   31c88:	sub	r2, r1, #1
   31c8c:	cmp	r4, #10
   31c90:	bcc	31c6c <flatcc_json_parser_double@@Base+0x3f4>
   31c94:	mov	r0, #1
   31c98:	sub	r6, r6, r1
   31c9c:	sub	r7, r7, r1
   31ca0:	str	r0, [sp, #24]
   31ca4:	mov	r2, #0
   31ca8:	cmp	r7, lr
   31cac:	bne	31b7c <flatcc_json_parser_double@@Base+0x304>
   31cb0:	b	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31cb4:	mov	r7, r4
   31cb8:	cmp	r7, lr
   31cbc:	bne	31d08 <flatcc_json_parser_double@@Base+0x490>
   31cc0:	b	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31cc4:	add	r1, r7, r3
   31cc8:	sub	r6, r6, r3
   31ccc:	add	r7, r1, #1
   31cd0:	ldr	r1, [sp, #24]
   31cd4:	cmp	r1, #0
   31cd8:	bne	31cfc <flatcc_json_parser_double@@Base+0x484>
   31cdc:	uxtb	r0, r0
   31ce0:	adds	r1, r8, #1
   31ce4:	adc	r3, sl, #0
   31ce8:	cmp	r0, #52	; 0x34
   31cec:	mov	r0, #1
   31cf0:	movhi	r8, r1
   31cf4:	movhi	sl, r3
   31cf8:	str	r0, [sp, #24]
   31cfc:	ldr	r4, [sp, #8]
   31d00:	cmp	r7, lr
   31d04:	beq	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31d08:	ldr	r1, [sp, #16]
   31d0c:	sub	r0, r7, r4
   31d10:	add	r1, r0, r1
   31d14:	str	r1, [sp, #16]
   31d18:	ldrb	r0, [r7]
   31d1c:	cmp	r0, #48	; 0x30
   31d20:	bne	31d38 <flatcc_json_parser_double@@Base+0x4c0>
   31d24:	add	r7, r7, #1
   31d28:	add	r6, r6, #1
   31d2c:	cmp	lr, r7
   31d30:	bne	31d18 <flatcc_json_parser_double@@Base+0x4a0>
   31d34:	b	31d78 <flatcc_json_parser_double@@Base+0x500>
   31d38:	sub	r0, r0, #49	; 0x31
   31d3c:	uxtb	r0, r0
   31d40:	cmp	r0, #8
   31d44:	bhi	31d78 <flatcc_json_parser_double@@Base+0x500>
   31d48:	mov	r0, r7
   31d4c:	cmp	ip, r7
   31d50:	beq	31d6c <flatcc_json_parser_double@@Base+0x4f4>
   31d54:	ldrb	r1, [r0, #1]
   31d58:	add	r7, r0, #1
   31d5c:	sub	r1, r1, #48	; 0x30
   31d60:	uxtb	r1, r1
   31d64:	cmp	r1, #10
   31d68:	bcc	31d48 <flatcc_json_parser_double@@Base+0x4d0>
   31d6c:	add	r7, r0, #1
   31d70:	mov	r0, #1
   31d74:	str	r0, [sp, #24]
   31d78:	cmp	r7, lr
   31d7c:	beq	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31d80:	ldrb	r0, [r7]
   31d84:	mov	r4, #0
   31d88:	orr	r0, r0, #32
   31d8c:	cmp	r0, #101	; 0x65
   31d90:	bne	31db0 <flatcc_json_parser_double@@Base+0x538>
   31d94:	sub	r0, lr, r7
   31d98:	cmp	r0, #2
   31d9c:	bge	31e24 <flatcc_json_parser_double@@Base+0x5ac>
   31da0:	mov	r2, #0
   31da4:	mov	r0, r2
   31da8:	sub	sp, fp, #28
   31dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31db0:	mov	r0, #0
   31db4:	cmp	r7, lr
   31db8:	mov	r2, #0
   31dbc:	beq	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31dc0:	vmov.i32	d16, #0	; 0x00000000
   31dc4:	cmp	r4, #0
   31dc8:	rsbne	r0, r0, #0
   31dcc:	orrs	r1, r8, sl
   31dd0:	beq	31df8 <flatcc_json_parser_double@@Base+0x580>
   31dd4:	ldr	r2, [sp, #16]
   31dd8:	add	r1, r2, r6
   31ddc:	add	r4, r1, r0
   31de0:	cmn	r4, #324	; 0x144
   31de4:	blt	31df8 <flatcc_json_parser_double@@Base+0x580>
   31de8:	movw	r0, #310	; 0x136
   31dec:	cmp	r4, r0
   31df0:	ble	31e58 <flatcc_json_parser_double@@Base+0x5e0>
   31df4:	vldr	d16, [pc, #1004]	; 321e8 <flatcc_json_parser_double@@Base+0x970>
   31df8:	ldr	r4, [sp, #20]
   31dfc:	vstr	d16, [r4]
   31e00:	cmp	r5, #0
   31e04:	beq	31e14 <flatcc_json_parser_double@@Base+0x59c>
   31e08:	vldr	d16, [r4]
   31e0c:	vneg.f64	d16, d16
   31e10:	vstr	d16, [r4]
   31e14:	mov	r2, r7
   31e18:	mov	r0, r2
   31e1c:	sub	sp, fp, #28
   31e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31e24:	mov	r3, r7
   31e28:	ldrb	r0, [r3, #1]!
   31e2c:	cmp	r0, #45	; 0x2d
   31e30:	beq	31f54 <flatcc_json_parser_double@@Base+0x6dc>
   31e34:	mov	r4, #0
   31e38:	cmp	r0, #43	; 0x2b
   31e3c:	bne	31f64 <flatcc_json_parser_double@@Base+0x6ec>
   31e40:	add	r3, r7, #2
   31e44:	mov	r2, #0
   31e48:	cmp	r3, lr
   31e4c:	beq	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31e50:	mov	r4, #0
   31e54:	b	31f64 <flatcc_json_parser_double@@Base+0x6ec>
   31e58:	mov	r0, #0
   31e5c:	mov	r6, r2
   31e60:	cmp	r0, sl, lsr #21
   31e64:	bne	31fc8 <flatcc_json_parser_double@@Base+0x750>
   31e68:	cmp	r4, #22
   31e6c:	bhi	31fc8 <flatcc_json_parser_double@@Base+0x750>
   31e70:	mov	r0, r8
   31e74:	mov	r1, sl
   31e78:	bl	34724 <flatcc_json_parser_struct_as_root@@Base+0x420>
   31e7c:	vmov	d16, r0, r1
   31e80:	sub	r2, r4, r6
   31e84:	add	r0, r2, #22
   31e88:	cmp	r0, #44	; 0x2c
   31e8c:	bhi	31df8 <flatcc_json_parser_double@@Base+0x580>
   31e90:	add	r1, pc, #0
   31e94:	ldr	pc, [r1, r0, lsl #2]
   31e98:	andeq	r1, r3, ip, asr #30
   31e9c:	andeq	r2, r3, r4, lsr r0
   31ea0:	andeq	r2, r3, ip, lsr r0
   31ea4:	andeq	r2, r3, r4, asr #32
   31ea8:	andeq	r2, r3, ip, asr #32
   31eac:	andeq	r2, r3, r4, asr r0
   31eb0:	andeq	r2, r3, ip, asr r0
   31eb4:	andeq	r2, r3, r4, rrx
   31eb8:	andeq	r2, r3, ip, rrx
   31ebc:	andeq	r2, r3, r4, ror r0
   31ec0:	andeq	r2, r3, ip, ror r0
   31ec4:	andeq	r2, r3, r4, lsl #1
   31ec8:	andeq	r2, r3, ip, lsl #1
   31ecc:	muleq	r3, r4, r0
   31ed0:	muleq	r3, ip, r0
   31ed4:	andeq	r2, r3, r4, lsr #1
   31ed8:	andeq	r2, r3, ip, lsr #1
   31edc:	strheq	r2, [r3], -r4
   31ee0:	strheq	r2, [r3], -ip
   31ee4:	andeq	r2, r3, r4, asr #1
   31ee8:	andeq	r2, r3, ip, asr #1
   31eec:	ldrdeq	r2, [r3], -r4
   31ef0:	strdeq	r1, [r3], -r8
   31ef4:	andeq	r2, r3, r0, ror #1
   31ef8:	andeq	r2, r3, ip, ror #1
   31efc:	strdeq	r2, [r3], -r8
   31f00:	andeq	r2, r3, r4, lsl #2
   31f04:	andeq	r2, r3, r0, lsl r1
   31f08:	andeq	r2, r3, ip, lsl r1
   31f0c:	andeq	r2, r3, r8, lsr #2
   31f10:	andeq	r2, r3, r4, lsr r1
   31f14:	andeq	r2, r3, r0, asr #2
   31f18:	andeq	r2, r3, ip, asr #2
   31f1c:	andeq	r2, r3, r8, asr r1
   31f20:	andeq	r2, r3, r4, ror #2
   31f24:	andeq	r2, r3, r0, ror r1
   31f28:	andeq	r2, r3, ip, ror r1
   31f2c:	andeq	r2, r3, r8, lsl #3
   31f30:	muleq	r3, r4, r1
   31f34:	andeq	r2, r3, r0, lsr #3
   31f38:	andeq	r2, r3, ip, lsr #3
   31f3c:			; <UNDEFINED> instruction: 0x000321b8
   31f40:	andeq	r2, r3, r4, asr #3
   31f44:	ldrdeq	r2, [r3], -r0
   31f48:	ldrdeq	r2, [r3], -ip
   31f4c:	vldr	d17, [pc, #828]	; 32290 <flatcc_json_parser_double@@Base+0xa18>
   31f50:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   31f54:	add	r3, r7, #2
   31f58:	mov	r4, #1
   31f5c:	cmp	r3, lr
   31f60:	beq	32024 <flatcc_json_parser_double@@Base+0x7ac>
   31f64:	ldrb	r0, [r3]
   31f68:	mov	r2, #0
   31f6c:	sub	r0, r0, #48	; 0x30
   31f70:	uxtb	r1, r0
   31f74:	cmp	r1, #9
   31f78:	bhi	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31f7c:	cmp	r3, ip
   31f80:	beq	31fb4 <flatcc_json_parser_double@@Base+0x73c>
   31f84:	ldrb	r1, [r3, #1]
   31f88:	sub	r2, r1, #48	; 0x30
   31f8c:	uxtb	r2, r2
   31f90:	cmp	r2, #9
   31f94:	bhi	31fb4 <flatcc_json_parser_double@@Base+0x73c>
   31f98:	cmp	r0, #32768	; 0x8000
   31f9c:	add	r3, r3, #1
   31fa0:	addlt	r0, r0, r0, lsl #2
   31fa4:	addlt	r0, r1, r0, lsl #1
   31fa8:	sublt	r0, r0, #48	; 0x30
   31fac:	cmp	ip, r3
   31fb0:	bne	31f84 <flatcc_json_parser_double@@Base+0x70c>
   31fb4:	add	r7, r3, #1
   31fb8:	cmp	r7, lr
   31fbc:	mov	r2, #0
   31fc0:	bne	31dc0 <flatcc_json_parser_double@@Base+0x548>
   31fc4:	b	32028 <flatcc_json_parser_double@@Base+0x7b0>
   31fc8:	ldr	r0, [sp, #24]
   31fcc:	ldr	r3, [sp, #20]
   31fd0:	mov	r2, r4
   31fd4:	mov	r1, sl
   31fd8:	str	r0, [sp]
   31fdc:	str	r3, [sp, #4]
   31fe0:	mov	r4, r3
   31fe4:	mov	r0, r8
   31fe8:	mov	r3, r6
   31fec:	bl	2fa10 <grisu3_diy_fp_encode_double@@Base>
   31ff0:	cmp	r0, #0
   31ff4:	bne	31e00 <flatcc_json_parser_double@@Base+0x588>
   31ff8:	add	r1, sp, #32
   31ffc:	mov	r0, r9
   32000:	bl	12b70 <strtod@plt>
   32004:	vstr	d0, [r4]
   32008:	ldr	r0, [sp, #32]
   3200c:	cmp	r0, r7
   32010:	movcc	r7, r0
   32014:	mov	r2, r7
   32018:	mov	r0, r2
   3201c:	sub	sp, fp, #28
   32020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32024:	mov	r2, #0
   32028:	mov	r0, r2
   3202c:	sub	sp, fp, #28
   32030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32034:	vldr	d17, [pc, #436]	; 321f0 <flatcc_json_parser_double@@Base+0x978>
   32038:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3203c:	vldr	d17, [pc, #436]	; 321f8 <flatcc_json_parser_double@@Base+0x980>
   32040:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   32044:	vldr	d17, [pc, #436]	; 32200 <flatcc_json_parser_double@@Base+0x988>
   32048:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3204c:	vldr	d17, [pc, #436]	; 32208 <flatcc_json_parser_double@@Base+0x990>
   32050:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   32054:	vldr	d17, [pc, #436]	; 32210 <flatcc_json_parser_double@@Base+0x998>
   32058:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3205c:	vldr	d17, [pc, #436]	; 32218 <flatcc_json_parser_double@@Base+0x9a0>
   32060:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   32064:	vldr	d17, [pc, #436]	; 32220 <flatcc_json_parser_double@@Base+0x9a8>
   32068:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3206c:	vldr	d17, [pc, #436]	; 32228 <flatcc_json_parser_double@@Base+0x9b0>
   32070:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   32074:	vldr	d17, [pc, #436]	; 32230 <flatcc_json_parser_double@@Base+0x9b8>
   32078:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3207c:	vldr	d17, [pc, #436]	; 32238 <flatcc_json_parser_double@@Base+0x9c0>
   32080:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   32084:	vldr	d17, [pc, #436]	; 32240 <flatcc_json_parser_double@@Base+0x9c8>
   32088:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3208c:	vldr	d17, [pc, #436]	; 32248 <flatcc_json_parser_double@@Base+0x9d0>
   32090:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   32094:	vldr	d17, [pc, #436]	; 32250 <flatcc_json_parser_double@@Base+0x9d8>
   32098:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   3209c:	vldr	d17, [pc, #436]	; 32258 <flatcc_json_parser_double@@Base+0x9e0>
   320a0:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320a4:	vldr	d17, [pc, #436]	; 32260 <flatcc_json_parser_double@@Base+0x9e8>
   320a8:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320ac:	vldr	d17, [pc, #436]	; 32268 <flatcc_json_parser_double@@Base+0x9f0>
   320b0:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320b4:	vldr	d17, [pc, #436]	; 32270 <flatcc_json_parser_double@@Base+0x9f8>
   320b8:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320bc:	vldr	d17, [pc, #436]	; 32278 <flatcc_json_parser_double@@Base+0xa00>
   320c0:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320c4:	vldr	d17, [pc, #436]	; 32280 <flatcc_json_parser_double@@Base+0xa08>
   320c8:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320cc:	vldr	d17, [pc, #436]	; 32288 <flatcc_json_parser_double@@Base+0xa10>
   320d0:	b	320d8 <flatcc_json_parser_double@@Base+0x860>
   320d4:	vmov.f64	d17, #36	; 0x41200000  10.0
   320d8:	vdiv.f64	d16, d16, d17
   320dc:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   320e0:	vmov.f64	d17, #36	; 0x41200000  10.0
   320e4:	vmul.f64	d16, d16, d17
   320e8:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   320ec:	vldr	d17, [pc, #404]	; 32288 <flatcc_json_parser_double@@Base+0xa10>
   320f0:	vmul.f64	d16, d16, d17
   320f4:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   320f8:	vldr	d17, [pc, #384]	; 32280 <flatcc_json_parser_double@@Base+0xa08>
   320fc:	vmul.f64	d16, d16, d17
   32100:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32104:	vldr	d17, [pc, #364]	; 32278 <flatcc_json_parser_double@@Base+0xa00>
   32108:	vmul.f64	d16, d16, d17
   3210c:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32110:	vldr	d17, [pc, #344]	; 32270 <flatcc_json_parser_double@@Base+0x9f8>
   32114:	vmul.f64	d16, d16, d17
   32118:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   3211c:	vldr	d17, [pc, #324]	; 32268 <flatcc_json_parser_double@@Base+0x9f0>
   32120:	vmul.f64	d16, d16, d17
   32124:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32128:	vldr	d17, [pc, #304]	; 32260 <flatcc_json_parser_double@@Base+0x9e8>
   3212c:	vmul.f64	d16, d16, d17
   32130:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32134:	vldr	d17, [pc, #284]	; 32258 <flatcc_json_parser_double@@Base+0x9e0>
   32138:	vmul.f64	d16, d16, d17
   3213c:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32140:	vldr	d17, [pc, #264]	; 32250 <flatcc_json_parser_double@@Base+0x9d8>
   32144:	vmul.f64	d16, d16, d17
   32148:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   3214c:	vldr	d17, [pc, #244]	; 32248 <flatcc_json_parser_double@@Base+0x9d0>
   32150:	vmul.f64	d16, d16, d17
   32154:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32158:	vldr	d17, [pc, #224]	; 32240 <flatcc_json_parser_double@@Base+0x9c8>
   3215c:	vmul.f64	d16, d16, d17
   32160:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32164:	vldr	d17, [pc, #204]	; 32238 <flatcc_json_parser_double@@Base+0x9c0>
   32168:	vmul.f64	d16, d16, d17
   3216c:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32170:	vldr	d17, [pc, #184]	; 32230 <flatcc_json_parser_double@@Base+0x9b8>
   32174:	vmul.f64	d16, d16, d17
   32178:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   3217c:	vldr	d17, [pc, #164]	; 32228 <flatcc_json_parser_double@@Base+0x9b0>
   32180:	vmul.f64	d16, d16, d17
   32184:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32188:	vldr	d17, [pc, #144]	; 32220 <flatcc_json_parser_double@@Base+0x9a8>
   3218c:	vmul.f64	d16, d16, d17
   32190:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   32194:	vldr	d17, [pc, #124]	; 32218 <flatcc_json_parser_double@@Base+0x9a0>
   32198:	vmul.f64	d16, d16, d17
   3219c:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321a0:	vldr	d17, [pc, #104]	; 32210 <flatcc_json_parser_double@@Base+0x998>
   321a4:	vmul.f64	d16, d16, d17
   321a8:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321ac:	vldr	d17, [pc, #84]	; 32208 <flatcc_json_parser_double@@Base+0x990>
   321b0:	vmul.f64	d16, d16, d17
   321b4:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321b8:	vldr	d17, [pc, #64]	; 32200 <flatcc_json_parser_double@@Base+0x988>
   321bc:	vmul.f64	d16, d16, d17
   321c0:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321c4:	vldr	d17, [pc, #44]	; 321f8 <flatcc_json_parser_double@@Base+0x980>
   321c8:	vmul.f64	d16, d16, d17
   321cc:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321d0:	vldr	d17, [pc, #24]	; 321f0 <flatcc_json_parser_double@@Base+0x978>
   321d4:	vmul.f64	d16, d16, d17
   321d8:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321dc:	vldr	d17, [pc, #172]	; 32290 <flatcc_json_parser_double@@Base+0xa18>
   321e0:	vmul.f64	d16, d16, d17
   321e4:	b	31df8 <flatcc_json_parser_double@@Base+0x580>
   321e8:	andeq	r0, r0, r0
   321ec:	svcvc	0x00f00000	; IMB
   321f0:	usatle	lr, #2, r0, asr #30
   321f4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   321f8:	ldmvc	r5!, {r6, sl, fp, pc}
   321fc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   32200:	addsvs	r3, r1, r0, lsl #26
   32204:	mvnmi	r5, #228, 16	; 0xe40000
   32208:	strbvs	ip, [lr, -r0, lsl #16]
   3220c:			; <UNDEFINED> instruction: 0x43abc16d
   32210:	ldrbhi	sl, [r8]
   32214:	cmnmi	r6, #1459617792	; 0x57000000
   32218:	strbcc	r8, [r0, r0]!
   3221c:	movtmi	ip, #4985	; 0x1379
   32220:	ldrtcs	r0, [r4], -r0
   32224:	movwmi	r6, #52213	; 0xcbf5
   32228:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3222c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   32230:	strb	r0, [r0, #-0]
   32234:	adcmi	r3, r2, #156	; 0x9c
   32238:	andge	r0, r0, #0
   3223c:	rsbmi	r1, sp, #148, 20	; 0x94000
   32240:	stmda	r0, {}	; <UNPREDICTABLE>
   32244:	eorsmi	r4, r7, #7733248	; 0x760000
   32248:	andcs	r0, r0, r0
   3224c:	andmi	sl, r2, #95	; 0x5f
   32250:	andeq	r0, r0, r0
   32254:	bicmi	ip, sp, r5, ror #26
   32258:	andeq	r0, r0, r0
   3225c:	orrsmi	sp, r7, r4, lsl #15
   32260:	andeq	r0, r0, r0
   32264:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   32268:	andeq	r0, r0, r0
   3226c:	smlawbmi	lr, r0, r4, r8
   32270:	andeq	r0, r0, r0
   32274:	rscsmi	r6, r8, r0, lsl #20
   32278:	andeq	r0, r0, r0
   3227c:	sbcmi	r8, r3, r0, lsl #16
   32280:	andeq	r0, r0, r0
   32284:	addmi	r4, pc, r0
   32288:	andeq	r0, r0, r0
   3228c:	subsmi	r0, r9, r0
   32290:			; <UNDEFINED> instruction: 0x064dd592
   32294:	strmi	pc, [r0], #207	; 0xcf

00032298 <flatcc_json_parser_float@@Base>:
   32298:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3229c:	add	fp, sp, #24
   322a0:	vpush	{d8-d9}
   322a4:	sub	sp, sp, #8
   322a8:	mov	r8, r0
   322ac:	mov	r0, #0
   322b0:	mov	r6, r1
   322b4:	cmp	r1, r2
   322b8:	str	r0, [r3]
   322bc:	beq	32394 <flatcc_json_parser_float@@Base+0xfc>
   322c0:	mov	r0, r6
   322c4:	mov	r5, r2
   322c8:	mov	r7, r3
   322cc:	ldrb	r1, [r0], #1
   322d0:	cmp	r1, #45	; 0x2d
   322d4:	movne	r0, r6
   322d8:	sub	r2, r2, r0
   322dc:	cmp	r2, #2
   322e0:	blt	32320 <flatcc_json_parser_float@@Base+0x88>
   322e4:	sub	r1, r1, #45	; 0x2d
   322e8:	clz	r1, r1
   322ec:	lsr	r1, r1, #5
   322f0:	ldrb	r1, [r6, r1]
   322f4:	cmp	r1, #46	; 0x2e
   322f8:	beq	32310 <flatcc_json_parser_float@@Base+0x78>
   322fc:	cmp	r1, #48	; 0x30
   32300:	bne	32320 <flatcc_json_parser_float@@Base+0x88>
   32304:	ldrb	r0, [r0, #1]
   32308:	cmp	r0, #48	; 0x30
   3230c:	bne	32320 <flatcc_json_parser_float@@Base+0x88>
   32310:	ldr	r0, [r8, #24]
   32314:	cmp	r0, #0
   32318:	bne	323cc <flatcc_json_parser_float@@Base+0x134>
   3231c:	b	323b0 <flatcc_json_parser_float@@Base+0x118>
   32320:	sub	r1, r5, r6
   32324:	mov	r2, sp
   32328:	mov	r0, r6
   3232c:	bl	31970 <flatcc_json_parser_double@@Base+0xf8>
   32330:	vldr	d16, [sp]
   32334:	mov	r4, r0
   32338:	add	r0, pc, #160	; 0xa0
   3233c:	vcmpe.f64	d16, #0.0
   32340:	vcvt.f32.f64	s16, d16
   32344:	vmrs	APSR_nzcv, fpscr
   32348:	addmi	r0, r0, #4
   3234c:	vldr	s18, [r0]
   32350:	vmov.f32	s0, s16
   32354:	bl	12ad4 <__isinff@plt>
   32358:	cmp	r0, #0
   3235c:	vseleq.f32	s0, s16, s18
   32360:	movne	r4, r6
   32364:	cmp	r4, #0
   32368:	cmpne	r4, r6
   3236c:	vstr	s0, [r7]
   32370:	bne	32398 <flatcc_json_parser_float@@Base+0x100>
   32374:	bl	12ad4 <__isinff@plt>
   32378:	ldr	r1, [r8, #24]
   3237c:	cmp	r0, #0
   32380:	beq	323a8 <flatcc_json_parser_float@@Base+0x110>
   32384:	cmp	r1, #0
   32388:	bne	323cc <flatcc_json_parser_float@@Base+0x134>
   3238c:	mov	r0, #7
   32390:	b	323b4 <flatcc_json_parser_float@@Base+0x11c>
   32394:	mov	r4, r6
   32398:	mov	r0, r4
   3239c:	sub	sp, fp, #40	; 0x28
   323a0:	vpop	{d8-d9}
   323a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   323a8:	cmp	r1, #0
   323ac:	bne	323cc <flatcc_json_parser_float@@Base+0x134>
   323b0:	mov	r0, #6
   323b4:	str	r6, [r8, #36]	; 0x24
   323b8:	ldr	r1, [r8, #4]
   323bc:	sub	r1, r6, r1
   323c0:	add	r1, r1, #1
   323c4:	str	r1, [r8, #20]
   323c8:	str	r0, [r8, #24]
   323cc:	mov	r4, r5
   323d0:	mov	r0, r4
   323d4:	sub	sp, fp, #40	; 0x28
   323d8:	vpop	{d8-d9}
   323dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   323e0:	svcvc	0x00800000
   323e4:			; <UNDEFINED> instruction: 0xff800000

000323e8 <flatcc_json_parser_integer@@Base>:
   323e8:	push	{r4, r5, r6, r7, fp, lr}
   323ec:	add	fp, sp, #16
   323f0:	mov	ip, r1
   323f4:	cmp	r1, r2
   323f8:	beq	324e4 <flatcc_json_parser_integer@@Base+0xfc>
   323fc:	ldrb	r1, [ip]
   32400:	mov	r4, #0
   32404:	sub	r1, r1, #45	; 0x2d
   32408:	clz	r1, r1
   3240c:	lsr	r1, r1, #5
   32410:	str	r1, [r3]
   32414:	add	r1, ip, r1
   32418:	cmp	r1, r2
   3241c:	beq	324d0 <flatcc_json_parser_integer@@Base+0xe8>
   32420:	mov	lr, #10
   32424:	mov	r5, #0
   32428:	ldrb	r6, [r1]
   3242c:	sub	r7, r6, #48	; 0x30
   32430:	uxtb	r7, r7
   32434:	cmp	r7, #9
   32438:	bhi	324ec <flatcc_json_parser_integer@@Base+0x104>
   3243c:	add	r7, r5, r5, lsl #2
   32440:	lsl	r7, r7, #1
   32444:	umlal	r6, r7, r4, lr
   32448:	subs	r6, r6, #48	; 0x30
   3244c:	sbc	r7, r7, #0
   32450:	subs	r4, r6, r4
   32454:	sbcs	r4, r7, r5
   32458:	bcc	324fc <flatcc_json_parser_integer@@Base+0x114>
   3245c:	add	r1, r1, #1
   32460:	mov	r4, r6
   32464:	mov	r5, r7
   32468:	cmp	r2, r1
   3246c:	bne	32428 <flatcc_json_parser_integer@@Base+0x40>
   32470:	mov	r3, #0
   32474:	mov	r1, r2
   32478:	mov	r4, r6
   3247c:	mov	r5, r7
   32480:	cmp	r1, ip
   32484:	beq	324e4 <flatcc_json_parser_integer@@Base+0xfc>
   32488:	cmp	r3, #0
   3248c:	beq	32518 <flatcc_json_parser_integer@@Base+0x130>
   32490:	ldrb	r3, [r1]
   32494:	cmp	r3, #46	; 0x2e
   32498:	cmpne	r3, #101	; 0x65
   3249c:	bne	32510 <flatcc_json_parser_integer@@Base+0x128>
   324a0:	ldr	r3, [r0, #24]
   324a4:	cmp	r3, #0
   324a8:	bne	32508 <flatcc_json_parser_integer@@Base+0x120>
   324ac:	str	r1, [r0, #36]	; 0x24
   324b0:	mov	r3, #12
   324b4:	ldr	r7, [r0, #4]
   324b8:	sub	r1, r1, r7
   324bc:	add	r1, r1, #1
   324c0:	str	r1, [r0, #20]
   324c4:	str	r3, [r0, #24]
   324c8:	mov	r0, r2
   324cc:	pop	{r4, r5, r6, r7, fp, pc}
   324d0:	mov	r1, r2
   324d4:	mov	r5, #0
   324d8:	mov	r3, #0
   324dc:	cmp	r1, ip
   324e0:	bne	32488 <flatcc_json_parser_integer@@Base+0xa0>
   324e4:	mov	r0, ip
   324e8:	pop	{r4, r5, r6, r7, fp, pc}
   324ec:	mov	r3, #1
   324f0:	cmp	r1, ip
   324f4:	bne	32488 <flatcc_json_parser_integer@@Base+0xa0>
   324f8:	b	324e4 <flatcc_json_parser_integer@@Base+0xfc>
   324fc:	ldr	r7, [r0, #24]
   32500:	cmp	r7, #0
   32504:	beq	3252c <flatcc_json_parser_integer@@Base+0x144>
   32508:	mov	r0, r2
   3250c:	pop	{r4, r5, r6, r7, fp, pc}
   32510:	cmp	r3, #69	; 0x45
   32514:	beq	324a0 <flatcc_json_parser_integer@@Base+0xb8>
   32518:	ldr	r0, [fp, #8]
   3251c:	mov	ip, r1
   32520:	strd	r4, [r0]
   32524:	mov	r0, ip
   32528:	pop	{r4, r5, r6, r7, fp, pc}
   3252c:	str	r1, [r0, #36]	; 0x24
   32530:	cmp	r3, #0
   32534:	mov	r7, #8
   32538:	ldr	r3, [r0, #4]
   3253c:	movweq	r7, #7
   32540:	sub	r1, r1, r3
   32544:	add	r1, r1, #1
   32548:	str	r1, [r0, #20]
   3254c:	str	r7, [r0, #24]
   32550:	mov	r0, r2
   32554:	pop	{r4, r5, r6, r7, fp, pc}

00032558 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   32558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3255c:	add	fp, sp, #28
   32560:	sub	sp, sp, #28
   32564:	ldr	r9, [fp, #8]
   32568:	mov	r6, r3
   3256c:	mov	r4, r2
   32570:	mov	r5, r0
   32574:	cmp	r1, r2
   32578:	beq	325c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   3257c:	ldrb	r0, [r1]
   32580:	cmp	r0, #34	; 0x22
   32584:	bne	325c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   32588:	add	sl, r1, #1
   3258c:	cmp	sl, r4
   32590:	beq	325cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   32594:	mov	r7, sl
   32598:	ldrb	r1, [r7]
   3259c:	cmp	r1, #32
   325a0:	bcc	32820 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   325a4:	cmp	r1, #34	; 0x22
   325a8:	cmpne	r1, #92	; 0x5c
   325ac:	beq	32670 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x118>
   325b0:	add	r7, r7, #1
   325b4:	cmp	r4, r7
   325b8:	bne	32598 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   325bc:	b	325cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   325c0:	ldr	r0, [r5, #24]
   325c4:	cmp	r0, #0
   325c8:	beq	325e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x88>
   325cc:	ldr	r0, [r5, #24]
   325d0:	cmp	r0, #0
   325d4:	mov	r0, r4
   325d8:	bne	3262c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   325dc:	b	3260c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb4>
   325e0:	str	r1, [r5, #36]	; 0x24
   325e4:	mov	r0, #16
   325e8:	ldr	r2, [r5, #4]
   325ec:	sub	r1, r1, r2
   325f0:	add	r1, r1, #1
   325f4:	str	r1, [r5, #20]
   325f8:	str	r0, [r5, #24]
   325fc:	ldr	r0, [r5, #24]
   32600:	cmp	r0, #0
   32604:	mov	r0, r4
   32608:	bne	3262c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   3260c:	str	r4, [r5, #36]	; 0x24
   32610:	mov	r0, #20
   32614:	ldr	r1, [r5, #4]
   32618:	sub	r1, r4, r1
   3261c:	add	r1, r1, #1
   32620:	str	r1, [r5, #20]
   32624:	str	r0, [r5, #24]
   32628:	mov	r0, r4
   3262c:	mov	r1, #0
   32630:	str	r1, [r6]
   32634:	ldr	r1, [r5, #24]
   32638:	cmp	r1, #0
   3263c:	bne	32664 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   32640:	str	r0, [r5, #36]	; 0x24
   32644:	cmp	r9, #0
   32648:	mov	r1, #31
   3264c:	ldr	r2, [r5, #4]
   32650:	movwne	r1, #32
   32654:	sub	r0, r0, r2
   32658:	add	r0, r0, #1
   3265c:	str	r0, [r5, #20]
   32660:	str	r1, [r5, #24]
   32664:	mov	r0, r4
   32668:	sub	sp, fp, #28
   3266c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32670:	cmp	r4, r7
   32674:	mov	r0, r4
   32678:	beq	3262c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   3267c:	cmp	r1, #34	; 0x22
   32680:	bne	326ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   32684:	sub	r1, r7, sl
   32688:	and	r0, r1, #3
   3268c:	str	r1, [sp, #20]
   32690:	lsr	r1, r1, #2
   32694:	add	r8, r1, r1, lsl #1
   32698:	cmp	r0, #2
   3269c:	beq	326b4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15c>
   326a0:	cmp	r0, #3
   326a4:	addeq	r8, r8, #2
   326a8:	b	326b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   326ac:	mov	r0, r7
   326b0:	b	3262c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   326b4:	add	r8, r8, #1
   326b8:	ldr	r0, [r5]
   326bc:	mov	r1, #1
   326c0:	mov	r2, #1
   326c4:	mvn	r3, #0
   326c8:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   326cc:	cmp	r0, #0
   326d0:	beq	32710 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   326d4:	mov	r0, #0
   326d8:	str	r0, [r6]
   326dc:	ldr	r0, [r5, #24]
   326e0:	cmp	r0, #0
   326e4:	bne	32664 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   326e8:	mov	r0, #33	; 0x21
   326ec:	str	r7, [r5, #36]	; 0x24
   326f0:	ldr	r1, [r5, #4]
   326f4:	sub	r1, r7, r1
   326f8:	add	r1, r1, #1
   326fc:	str	r1, [r5, #20]
   32700:	str	r0, [r5, #24]
   32704:	mov	r0, r4
   32708:	sub	sp, fp, #28
   3270c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32710:	ldr	r0, [r5]
   32714:	mov	r1, r8
   32718:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   3271c:	cmp	r0, #0
   32720:	beq	326d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   32724:	movw	r2, #26696	; 0x6848
   32728:	str	r0, [sp]
   3272c:	str	r0, [sp, #12]
   32730:	ldr	r0, [sp, #20]
   32734:	mov	r1, r8
   32738:	movw	r8, #26440	; 0x6748
   3273c:	cmp	r9, #0
   32740:	add	lr, sp, #24
   32744:	mov	ip, sl
   32748:	movt	r2, #3
   3274c:	movt	r8, #3
   32750:	str	r1, [sp, #4]
   32754:	movne	r8, r2
   32758:	cmp	r1, #0
   3275c:	mvneq	r1, #0
   32760:	str	r1, [sp, #16]
   32764:	mov	r1, #0
   32768:	str	r0, [sp, #8]
   3276c:	cmp	r0, r1
   32770:	bne	3278c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   32774:	b	32844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   32778:	add	r1, r1, #1
   3277c:	cmp	r1, #4
   32780:	bcs	327b8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   32784:	cmp	r0, r1
   32788:	beq	32844 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   3278c:	ldrb	r2, [ip, r1]
   32790:	ldrb	r3, [r8, r2]
   32794:	cmp	r3, #64	; 0x40
   32798:	strb	r3, [lr, r1]
   3279c:	bcc	32778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   327a0:	cmp	r3, #65	; 0x41
   327a4:	bne	32890 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   327a8:	sub	r1, r1, #1
   327ac:	sub	r0, r0, #1
   327b0:	add	ip, ip, #1
   327b4:	b	32778 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   327b8:	ldr	lr, [sp, #16]
   327bc:	cmp	lr, #3
   327c0:	bcc	32924 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   327c4:	ldrb	r2, [sp, #25]
   327c8:	ldrb	r1, [sp, #24]
   327cc:	subs	lr, lr, #3
   327d0:	sub	r0, r0, #4
   327d4:	add	ip, ip, #4
   327d8:	str	lr, [sp, #16]
   327dc:	add	lr, sp, #24
   327e0:	lsr	r3, r2, #4
   327e4:	orr	r1, r3, r1, lsl #2
   327e8:	ldr	r3, [sp, #12]
   327ec:	strb	r1, [r3]
   327f0:	ldrb	r1, [sp, #26]
   327f4:	lsr	r1, r1, #2
   327f8:	orr	r1, r1, r2, lsl #4
   327fc:	strb	r1, [r3, #1]
   32800:	ldrb	r1, [sp, #26]
   32804:	ldrb	r2, [sp, #27]
   32808:	orr	r1, r2, r1, lsl #6
   3280c:	strb	r1, [r3, #2]
   32810:	add	r3, r3, #3
   32814:	str	r3, [sp, #12]
   32818:	bne	32764 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   3281c:	b	32910 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   32820:	ldr	r0, [r5, #24]
   32824:	cmp	r0, #0
   32828:	mov	r0, r4
   3282c:	bne	3262c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   32830:	str	r7, [r5, #36]	; 0x24
   32834:	mov	r0, #17
   32838:	ldr	r1, [r5, #4]
   3283c:	sub	r1, r7, r1
   32840:	b	3261c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc4>
   32844:	mov	r1, r0
   32848:	mov	r3, r0
   3284c:	ldr	r2, [sp, #16]
   32850:	sub	r0, r0, r3
   32854:	cmp	r1, #0
   32858:	beq	32910 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   3285c:	cmp	r1, #3
   32860:	beq	328d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x378>
   32864:	cmp	r1, #2
   32868:	bne	32924 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   3286c:	ldrb	r1, [sp, #25]
   32870:	tst	r1, #15
   32874:	bne	32924 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   32878:	ldrb	r2, [sp, #24]
   3287c:	lsl	r2, r2, #2
   32880:	orr	r1, r2, r1, lsr #4
   32884:	ldr	r2, [sp, #12]
   32888:	strb	r1, [r2], #1
   3288c:	b	3290c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b4>
   32890:	cmp	r3, #66	; 0x42
   32894:	bne	32994 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x43c>
   32898:	add	r2, r1, #1
   3289c:	mov	r3, r2
   328a0:	cmp	r2, r0
   328a4:	bcs	3284c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   328a8:	cmp	r3, #7
   328ac:	bhi	3284c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   328b0:	ldrb	r2, [ip, r3]
   328b4:	ldrb	r2, [r8, r2]
   328b8:	sub	r2, r2, #65	; 0x41
   328bc:	uxtb	lr, r2
   328c0:	add	r2, r3, #1
   328c4:	cmp	lr, #2
   328c8:	bcc	3289c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x344>
   328cc:	b	3284c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   328d0:	cmp	r2, #2
   328d4:	bcc	32924 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   328d8:	ldrb	r1, [sp, #26]
   328dc:	ands	r2, r1, #3
   328e0:	bne	32924 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   328e4:	ldrb	r3, [sp, #25]
   328e8:	ldrb	ip, [sp, #24]
   328ec:	lsl	r2, r3, #4
   328f0:	orr	r1, r2, r1, lsr #2
   328f4:	ldr	r2, [sp, #12]
   328f8:	strb	r1, [r2, #1]
   328fc:	lsr	r1, r3, #4
   32900:	orr	r1, r1, ip, lsl #2
   32904:	strb	r1, [r2]
   32908:	add	r2, r2, #2
   3290c:	str	r2, [sp, #12]
   32910:	cmp	r0, #0
   32914:	beq	32938 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   32918:	mov	r1, r0
   3291c:	ldr	r0, [sp, #20]
   32920:	b	3292c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d4>
   32924:	ldr	r0, [sp, #20]
   32928:	ldr	r1, [sp, #8]
   3292c:	sub	r0, r0, r1
   32930:	add	r0, sl, r0
   32934:	b	3262c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   32938:	ldr	r0, [sp]
   3293c:	ldr	r1, [sp, #12]
   32940:	sub	r0, r1, r0
   32944:	ldr	r1, [sp, #4]
   32948:	cmp	r1, r0
   3294c:	bls	32964 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40c>
   32950:	sub	r1, r1, r0
   32954:	ldr	r0, [r5]
   32958:	bl	2c604 <flatcc_builder_truncate_vector@@Base>
   3295c:	cmp	r0, #0
   32960:	bne	326d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   32964:	ldr	r0, [r5]
   32968:	bl	2da48 <flatcc_builder_end_vector@@Base>
   3296c:	cmp	r0, #0
   32970:	str	r0, [r6]
   32974:	beq	326d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   32978:	ldrb	r0, [r7]
   3297c:	cmp	r0, #34	; 0x22
   32980:	bne	329ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x454>
   32984:	add	r4, r7, #1
   32988:	mov	r0, r4
   3298c:	sub	sp, fp, #28
   32990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32994:	mov	r3, r1
   32998:	ldr	r2, [sp, #16]
   3299c:	sub	r0, r0, r3
   329a0:	cmp	r1, #0
   329a4:	bne	3285c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x304>
   329a8:	b	32910 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   329ac:	ldr	r0, [r5, #24]
   329b0:	cmp	r0, #0
   329b4:	bne	32664 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   329b8:	mov	r0, #20
   329bc:	b	326ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x194>

000329c0 <flatcc_json_parser_build_string@@Base>:
   329c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   329c4:	add	fp, sp, #28
   329c8:	sub	sp, sp, #4
   329cc:	mov	sl, r3
   329d0:	mov	r4, r2
   329d4:	mov	r5, r0
   329d8:	cmp	r1, r2
   329dc:	beq	32a38 <flatcc_json_parser_build_string@@Base+0x78>
   329e0:	ldrb	r0, [r1]
   329e4:	cmp	r0, #34	; 0x22
   329e8:	bne	32a38 <flatcc_json_parser_build_string@@Base+0x78>
   329ec:	add	r1, r1, #1
   329f0:	mov	r6, r4
   329f4:	cmp	r1, r4
   329f8:	beq	32a48 <flatcc_json_parser_build_string@@Base+0x88>
   329fc:	mov	r6, r1
   32a00:	ldrb	r0, [r6]
   32a04:	cmp	r0, #32
   32a08:	bcc	32c80 <flatcc_json_parser_build_string@@Base+0x2c0>
   32a0c:	cmp	r0, #34	; 0x22
   32a10:	cmpne	r0, #92	; 0x5c
   32a14:	beq	32b7c <flatcc_json_parser_build_string@@Base+0x1bc>
   32a18:	add	r6, r6, #1
   32a1c:	cmp	r4, r6
   32a20:	bne	32a00 <flatcc_json_parser_build_string@@Base+0x40>
   32a24:	mov	r6, r1
   32a28:	ldr	r0, [r5, #24]
   32a2c:	cmp	r0, #0
   32a30:	bne	32a70 <flatcc_json_parser_build_string@@Base+0xb0>
   32a34:	b	32a54 <flatcc_json_parser_build_string@@Base+0x94>
   32a38:	ldr	r0, [r5, #24]
   32a3c:	mov	r6, r4
   32a40:	cmp	r0, #0
   32a44:	beq	32b4c <flatcc_json_parser_build_string@@Base+0x18c>
   32a48:	ldr	r0, [r5, #24]
   32a4c:	cmp	r0, #0
   32a50:	bne	32a70 <flatcc_json_parser_build_string@@Base+0xb0>
   32a54:	str	r4, [r5, #36]	; 0x24
   32a58:	mov	r0, #20
   32a5c:	ldr	r1, [r5, #4]
   32a60:	sub	r1, r4, r1
   32a64:	add	r1, r1, #1
   32a68:	str	r1, [r5, #20]
   32a6c:	str	r0, [r5, #24]
   32a70:	mov	r7, r4
   32a74:	ldr	r0, [r5]
   32a78:	bl	2cbec <flatcc_builder_start_string@@Base>
   32a7c:	cmp	r0, #0
   32a80:	bne	32ca4 <flatcc_json_parser_build_string@@Base+0x2e4>
   32a84:	ldr	r0, [r5]
   32a88:	sub	r2, r7, r6
   32a8c:	mov	r1, r6
   32a90:	bl	2c45c <flatcc_builder_append_string@@Base>
   32a94:	cmp	r0, #0
   32a98:	beq	32ca4 <flatcc_json_parser_build_string@@Base+0x2e4>
   32a9c:	cmp	r7, r4
   32aa0:	mov	r6, r4
   32aa4:	beq	32c24 <flatcc_json_parser_build_string@@Base+0x264>
   32aa8:	mov	r8, sp
   32aac:	add	r9, r8, #1
   32ab0:	ldrb	r0, [r7]
   32ab4:	cmp	r0, #34	; 0x22
   32ab8:	beq	32c20 <flatcc_json_parser_build_string@@Base+0x260>
   32abc:	mov	r0, r5
   32ac0:	mov	r1, r7
   32ac4:	mov	r2, r4
   32ac8:	mov	r3, r8
   32acc:	bl	300c4 <flatcc_json_parser_string_escape@@Base>
   32ad0:	mov	r6, r0
   32ad4:	ldr	r0, [r5]
   32ad8:	ldrb	r2, [sp]
   32adc:	mov	r1, r9
   32ae0:	bl	2c45c <flatcc_builder_append_string@@Base>
   32ae4:	cmp	r0, #0
   32ae8:	beq	32c78 <flatcc_json_parser_build_string@@Base+0x2b8>
   32aec:	cmp	r6, r4
   32af0:	beq	32bc8 <flatcc_json_parser_build_string@@Base+0x208>
   32af4:	mov	r7, r6
   32af8:	ldrb	r0, [r7]
   32afc:	cmp	r0, #32
   32b00:	bcc	32bec <flatcc_json_parser_build_string@@Base+0x22c>
   32b04:	cmp	r0, #34	; 0x22
   32b08:	cmpne	r0, #92	; 0x5c
   32b0c:	beq	32b20 <flatcc_json_parser_build_string@@Base+0x160>
   32b10:	add	r7, r7, #1
   32b14:	cmp	r4, r7
   32b18:	bne	32af8 <flatcc_json_parser_build_string@@Base+0x138>
   32b1c:	b	32bc8 <flatcc_json_parser_build_string@@Base+0x208>
   32b20:	cmp	r4, r7
   32b24:	beq	32c18 <flatcc_json_parser_build_string@@Base+0x258>
   32b28:	ldr	r0, [r5]
   32b2c:	sub	r2, r7, r6
   32b30:	mov	r1, r6
   32b34:	bl	2c45c <flatcc_builder_append_string@@Base>
   32b38:	cmp	r0, #0
   32b3c:	beq	32ca4 <flatcc_json_parser_build_string@@Base+0x2e4>
   32b40:	cmp	r4, r7
   32b44:	bne	32ab0 <flatcc_json_parser_build_string@@Base+0xf0>
   32b48:	b	32c18 <flatcc_json_parser_build_string@@Base+0x258>
   32b4c:	str	r1, [r5, #36]	; 0x24
   32b50:	mov	r0, #16
   32b54:	mov	r6, r4
   32b58:	ldr	r2, [r5, #4]
   32b5c:	sub	r1, r1, r2
   32b60:	add	r1, r1, #1
   32b64:	str	r1, [r5, #20]
   32b68:	str	r0, [r5, #24]
   32b6c:	ldr	r0, [r5, #24]
   32b70:	cmp	r0, #0
   32b74:	bne	32a70 <flatcc_json_parser_build_string@@Base+0xb0>
   32b78:	b	32a54 <flatcc_json_parser_build_string@@Base+0x94>
   32b7c:	cmp	r4, r6
   32b80:	beq	32c8c <flatcc_json_parser_build_string@@Base+0x2cc>
   32b84:	cmp	r0, #34	; 0x22
   32b88:	bne	32bc0 <flatcc_json_parser_build_string@@Base+0x200>
   32b8c:	ldr	r0, [r5]
   32b90:	sub	r2, r6, r1
   32b94:	bl	2edd8 <flatcc_builder_create_string@@Base>
   32b98:	cmp	r6, r4
   32b9c:	str	r0, [sl]
   32ba0:	beq	32c38 <flatcc_json_parser_build_string@@Base+0x278>
   32ba4:	ldrb	r0, [r6]
   32ba8:	cmp	r0, #34	; 0x22
   32bac:	bne	32c38 <flatcc_json_parser_build_string@@Base+0x278>
   32bb0:	add	r4, r6, #1
   32bb4:	mov	r0, r4
   32bb8:	sub	sp, fp, #28
   32bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32bc0:	mov	r7, r6
   32bc4:	b	32c90 <flatcc_json_parser_build_string@@Base+0x2d0>
   32bc8:	ldr	r0, [r5, #24]
   32bcc:	mov	r6, r4
   32bd0:	cmp	r0, #0
   32bd4:	bne	32c24 <flatcc_json_parser_build_string@@Base+0x264>
   32bd8:	str	r4, [r5, #36]	; 0x24
   32bdc:	mov	r0, #20
   32be0:	ldr	r1, [r5, #4]
   32be4:	sub	r1, r4, r1
   32be8:	b	32c0c <flatcc_json_parser_build_string@@Base+0x24c>
   32bec:	ldr	r0, [r5, #24]
   32bf0:	mov	r6, r4
   32bf4:	cmp	r0, #0
   32bf8:	bne	32c24 <flatcc_json_parser_build_string@@Base+0x264>
   32bfc:	str	r7, [r5, #36]	; 0x24
   32c00:	mov	r0, #17
   32c04:	ldr	r1, [r5, #4]
   32c08:	sub	r1, r7, r1
   32c0c:	add	r1, r1, #1
   32c10:	str	r1, [r5, #20]
   32c14:	str	r0, [r5, #24]
   32c18:	mov	r6, r4
   32c1c:	b	32c24 <flatcc_json_parser_build_string@@Base+0x264>
   32c20:	mov	r6, r7
   32c24:	ldr	r0, [r5]
   32c28:	bl	2ef40 <flatcc_builder_end_string@@Base>
   32c2c:	cmp	r6, r4
   32c30:	str	r0, [sl]
   32c34:	bne	32ba4 <flatcc_json_parser_build_string@@Base+0x1e4>
   32c38:	ldr	r0, [r5, #24]
   32c3c:	cmp	r0, #0
   32c40:	beq	32c50 <flatcc_json_parser_build_string@@Base+0x290>
   32c44:	mov	r0, r4
   32c48:	sub	sp, fp, #28
   32c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c50:	str	r6, [r5, #36]	; 0x24
   32c54:	mov	r0, #20
   32c58:	ldr	r1, [r5, #4]
   32c5c:	sub	r1, r6, r1
   32c60:	add	r1, r1, #1
   32c64:	str	r1, [r5, #20]
   32c68:	str	r0, [r5, #24]
   32c6c:	mov	r0, r4
   32c70:	sub	sp, fp, #28
   32c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c78:	mov	r4, r6
   32c7c:	b	32ca8 <flatcc_json_parser_build_string@@Base+0x2e8>
   32c80:	ldr	r0, [r5, #24]
   32c84:	cmp	r0, #0
   32c88:	beq	32cbc <flatcc_json_parser_build_string@@Base+0x2fc>
   32c8c:	mov	r7, r4
   32c90:	mov	r6, r1
   32c94:	ldr	r0, [r5]
   32c98:	bl	2cbec <flatcc_builder_start_string@@Base>
   32c9c:	cmp	r0, #0
   32ca0:	beq	32a84 <flatcc_json_parser_build_string@@Base+0xc4>
   32ca4:	mov	r4, r7
   32ca8:	mov	r0, #0
   32cac:	str	r0, [sl]
   32cb0:	mov	r0, r4
   32cb4:	sub	sp, fp, #28
   32cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32cbc:	str	r6, [r5, #36]	; 0x24
   32cc0:	mov	r0, #17
   32cc4:	mov	r7, r4
   32cc8:	ldr	r2, [r5, #4]
   32ccc:	sub	r2, r6, r2
   32cd0:	add	r2, r2, #1
   32cd4:	str	r2, [r5, #20]
   32cd8:	str	r0, [r5, #24]
   32cdc:	b	32c90 <flatcc_json_parser_build_string@@Base+0x2d0>

00032ce0 <flatcc_json_parser_prepare_unions@@Base>:
   32ce0:	push	{r4, r5, r6, r7, fp, lr}
   32ce4:	add	fp, sp, #16
   32ce8:	mov	r6, r0
   32cec:	add	r0, r3, r3, lsl #1
   32cf0:	mov	r5, r1
   32cf4:	mov	r1, #8
   32cf8:	mov	r7, r3
   32cfc:	mov	r4, r2
   32d00:	add	r1, r1, r0, lsl #3
   32d04:	ldr	r0, [r6]
   32d08:	bl	2b024 <flatcc_builder_enter_user_frame@@Base>
   32d0c:	mov	r1, r0
   32d10:	ldr	r0, [fp, #8]
   32d14:	cmp	r1, #0
   32d18:	str	r1, [r0]
   32d1c:	beq	32d38 <flatcc_json_parser_prepare_unions@@Base+0x58>
   32d20:	ldr	r0, [r6]
   32d24:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   32d28:	mov	r4, r5
   32d2c:	str	r7, [r0]
   32d30:	mov	r0, r4
   32d34:	pop	{r4, r5, r6, r7, fp, pc}
   32d38:	ldr	r0, [r6, #24]
   32d3c:	cmp	r0, #0
   32d40:	beq	32d4c <flatcc_json_parser_prepare_unions@@Base+0x6c>
   32d44:	mov	r0, r4
   32d48:	pop	{r4, r5, r6, r7, fp, pc}
   32d4c:	str	r5, [r6, #36]	; 0x24
   32d50:	mov	r0, #33	; 0x21
   32d54:	ldr	r1, [r6, #4]
   32d58:	sub	r1, r5, r1
   32d5c:	add	r1, r1, #1
   32d60:	str	r1, [r6, #20]
   32d64:	str	r0, [r6, #24]
   32d68:	mov	r0, r4
   32d6c:	pop	{r4, r5, r6, r7, fp, pc}

00032d70 <flatcc_json_parser_finalize_unions@@Base>:
   32d70:	push	{r4, r5, r6, r7, fp, lr}
   32d74:	add	fp, sp, #16
   32d78:	mov	r6, r0
   32d7c:	ldr	r0, [r0]
   32d80:	mov	r7, r1
   32d84:	mov	r1, r3
   32d88:	mov	r5, r3
   32d8c:	mov	r4, r2
   32d90:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   32d94:	ldr	r0, [r0, #4]
   32d98:	cmp	r0, #0
   32d9c:	beq	32dcc <flatcc_json_parser_finalize_unions@@Base+0x5c>
   32da0:	ldr	r0, [r6, #24]
   32da4:	cmp	r0, #0
   32da8:	bne	32dd0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   32dac:	str	r7, [r6, #36]	; 0x24
   32db0:	mov	r0, #27
   32db4:	ldr	r1, [r6, #4]
   32db8:	sub	r1, r7, r1
   32dbc:	add	r1, r1, #1
   32dc0:	str	r1, [r6, #20]
   32dc4:	str	r0, [r6, #24]
   32dc8:	b	32dd0 <flatcc_json_parser_finalize_unions@@Base+0x60>
   32dcc:	mov	r4, r7
   32dd0:	ldr	r0, [r6]
   32dd4:	mov	r1, r5
   32dd8:	bl	2b134 <flatcc_builder_exit_user_frame_at@@Base>
   32ddc:	mov	r0, r4
   32de0:	pop	{r4, r5, r6, r7, fp, pc}

00032de4 <flatcc_json_parser_union@@Base>:
   32de4:	push	{r4, r5, r6, r7, fp, lr}
   32de8:	add	fp, sp, #16
   32dec:	sub	sp, sp, #16
   32df0:	mov	r6, r1
   32df4:	mov	r5, r0
   32df8:	ldr	r0, [r0]
   32dfc:	ldr	r1, [fp, #12]
   32e00:	mov	r7, r3
   32e04:	mov	r4, r2
   32e08:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   32e0c:	add	r2, r0, #8
   32e10:	add	r3, r7, r7, lsl #1
   32e14:	mov	r1, r2
   32e18:	ldr	r7, [r1, r3, lsl #3]!
   32e1c:	cmp	r7, #0
   32e20:	beq	32e58 <flatcc_json_parser_union@@Base+0x74>
   32e24:	ldr	r0, [r5, #24]
   32e28:	cmp	r0, #0
   32e2c:	bne	32f28 <flatcc_json_parser_union@@Base+0x144>
   32e30:	mov	r0, #28
   32e34:	str	r6, [r5, #36]	; 0x24
   32e38:	ldr	r1, [r5, #4]
   32e3c:	sub	r1, r6, r1
   32e40:	add	r1, r1, #1
   32e44:	str	r1, [r5, #20]
   32e48:	str	r0, [r5, #24]
   32e4c:	mov	r0, r4
   32e50:	sub	sp, fp, #16
   32e54:	pop	{r4, r5, r6, r7, fp, pc}
   32e58:	add	r2, r2, r3, lsl #3
   32e5c:	ldrb	r3, [r2, #12]
   32e60:	cmp	r3, #0
   32e64:	beq	32edc <flatcc_json_parser_union@@Base+0xf8>
   32e68:	ldrb	r3, [r2, #13]
   32e6c:	cmp	r3, #0
   32e70:	strb	r3, [sp, #8]
   32e74:	beq	32f1c <flatcc_json_parser_union@@Base+0x138>
   32e78:	ldr	r1, [r0, #4]
   32e7c:	ldr	r7, [fp, #16]
   32e80:	mov	r2, r4
   32e84:	sub	r1, r1, #1
   32e88:	str	r1, [r0, #4]
   32e8c:	add	r0, sp, #8
   32e90:	mov	r1, r6
   32e94:	add	r0, r0, #4
   32e98:	str	r0, [sp]
   32e9c:	mov	r0, r5
   32ea0:	blx	r7
   32ea4:	cmp	r0, r4
   32ea8:	beq	32f28 <flatcc_json_parser_union@@Base+0x144>
   32eac:	mov	r6, r0
   32eb0:	ldr	r1, [fp, #8]
   32eb4:	ldr	r0, [r5]
   32eb8:	ldr	r2, [sp, #8]
   32ebc:	ldr	r3, [sp, #12]
   32ec0:	bl	2de50 <flatcc_builder_table_add_union@@Base>
   32ec4:	cmp	r0, #0
   32ec8:	bne	32e24 <flatcc_json_parser_union@@Base+0x40>
   32ecc:	mov	r4, r6
   32ed0:	mov	r0, r4
   32ed4:	sub	sp, fp, #16
   32ed8:	pop	{r4, r5, r6, r7, fp, pc}
   32edc:	ldr	r3, [r0, #4]
   32ee0:	add	r3, r3, #1
   32ee4:	str	r3, [r0, #4]
   32ee8:	ldr	r0, [r5, #16]
   32eec:	str	r0, [r2, #8]
   32ef0:	ldr	r0, [r5, #4]
   32ef4:	str	r0, [r2, #4]
   32ef8:	str	r6, [r1]
   32efc:	mov	r0, r5
   32f00:	mov	r1, r6
   32f04:	mov	r2, r4
   32f08:	bl	30a88 <flatcc_json_parser_generic_json@@Base>
   32f0c:	mov	r4, r0
   32f10:	mov	r0, r4
   32f14:	sub	sp, fp, #16
   32f18:	pop	{r4, r5, r6, r7, fp, pc}
   32f1c:	ldr	r0, [r5, #24]
   32f20:	cmp	r0, #0
   32f24:	beq	32f34 <flatcc_json_parser_union@@Base+0x150>
   32f28:	mov	r0, r4
   32f2c:	sub	sp, fp, #16
   32f30:	pop	{r4, r5, r6, r7, fp, pc}
   32f34:	mov	r0, #25
   32f38:	b	32e34 <flatcc_json_parser_union@@Base+0x50>

00032f3c <flatcc_json_parser_union_type@@Base>:
   32f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32f40:	add	fp, sp, #28
   32f44:	sub	sp, sp, #20
   32f48:	mov	r8, r1
   32f4c:	mov	r5, r0
   32f50:	ldr	r0, [r0]
   32f54:	ldr	r1, [fp, #12]
   32f58:	mov	r6, r3
   32f5c:	mov	r4, r2
   32f60:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   32f64:	add	r3, r6, r6, lsl #1
   32f68:	add	r2, r0, #8
   32f6c:	mov	r9, r0
   32f70:	add	sl, r2, r3, lsl #3
   32f74:	mov	r0, sl
   32f78:	ldrb	r1, [r0, #12]!
   32f7c:	cmp	r1, #0
   32f80:	beq	32f9c <flatcc_json_parser_union_type@@Base+0x60>
   32f84:	ldr	r0, [r5, #24]
   32f88:	cmp	r0, #0
   32f8c:	beq	33084 <flatcc_json_parser_union_type@@Base+0x148>
   32f90:	mov	r0, r4
   32f94:	sub	sp, fp, #28
   32f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f9c:	mov	r1, #1
   32fa0:	mov	r6, #0
   32fa4:	mov	lr, sl
   32fa8:	cmp	r8, r4
   32fac:	str	r3, [sp, #4]
   32fb0:	str	r2, [sp, #8]
   32fb4:	strb	r1, [r0]
   32fb8:	strb	r6, [lr, #13]!
   32fbc:	beq	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   32fc0:	mov	r2, r8
   32fc4:	ldrb	ip, [r2], #1
   32fc8:	cmp	ip, #45	; 0x2d
   32fcc:	movne	r2, r8
   32fd0:	cmp	r2, r4
   32fd4:	beq	330ac <flatcc_json_parser_union_type@@Base+0x170>
   32fd8:	mov	r6, #0
   32fdc:	mov	r0, #10
   32fe0:	mov	r7, #0
   32fe4:	ldrb	r1, [r2]
   32fe8:	sub	r3, r1, #48	; 0x30
   32fec:	uxtb	r3, r3
   32ff0:	cmp	r3, #9
   32ff4:	bhi	33138 <flatcc_json_parser_union_type@@Base+0x1fc>
   32ff8:	add	r3, r7, r7, lsl #2
   32ffc:	lsl	r3, r3, #1
   33000:	umlal	r1, r3, r6, r0
   33004:	subs	r1, r1, #48	; 0x30
   33008:	sbc	r3, r3, #0
   3300c:	subs	r6, r1, r6
   33010:	sbcs	r7, r3, r7
   33014:	bcc	33148 <flatcc_json_parser_union_type@@Base+0x20c>
   33018:	add	r2, r2, #1
   3301c:	mov	r6, r1
   33020:	mov	r7, r3
   33024:	cmp	r4, r2
   33028:	bne	32fe4 <flatcc_json_parser_union_type@@Base+0xa8>
   3302c:	mov	r0, #0
   33030:	mov	r2, r4
   33034:	mov	r6, r1
   33038:	mov	r7, r3
   3303c:	cmp	r2, r8
   33040:	beq	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   33044:	cmp	r0, #0
   33048:	beq	330c4 <flatcc_json_parser_union_type@@Base+0x188>
   3304c:	ldrb	r0, [r2]
   33050:	cmp	r0, #46	; 0x2e
   33054:	beq	33064 <flatcc_json_parser_union_type@@Base+0x128>
   33058:	cmp	r0, #101	; 0x65
   3305c:	cmpne	r0, #69	; 0x45
   33060:	bne	330c4 <flatcc_json_parser_union_type@@Base+0x188>
   33064:	ldr	r0, [r5, #24]
   33068:	mov	r6, #0
   3306c:	mov	r7, #0
   33070:	cmp	r0, #0
   33074:	mov	r0, r4
   33078:	bne	33188 <flatcc_json_parser_union_type@@Base+0x24c>
   3307c:	mov	r0, #12
   33080:	b	33164 <flatcc_json_parser_union_type@@Base+0x228>
   33084:	str	r8, [r5, #36]	; 0x24
   33088:	mov	r0, #28
   3308c:	ldr	r1, [r5, #4]
   33090:	sub	r1, r8, r1
   33094:	add	r1, r1, #1
   33098:	str	r1, [r5, #20]
   3309c:	str	r0, [r5, #24]
   330a0:	mov	r0, r4
   330a4:	sub	sp, fp, #28
   330a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   330ac:	mov	r2, r4
   330b0:	mov	r7, #0
   330b4:	mov	r0, #0
   330b8:	cmp	r2, r8
   330bc:	bne	33044 <flatcc_json_parser_union_type@@Base+0x108>
   330c0:	b	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   330c4:	mov	r0, r2
   330c8:	cmp	r0, r8
   330cc:	beq	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   330d0:	cmp	ip, #45	; 0x2d
   330d4:	bne	330f0 <flatcc_json_parser_union_type@@Base+0x1b4>
   330d8:	ldr	r1, [r5, #24]
   330dc:	mov	r2, r4
   330e0:	cmp	r1, #0
   330e4:	bne	3319c <flatcc_json_parser_union_type@@Base+0x260>
   330e8:	mov	r1, #8
   330ec:	b	33110 <flatcc_json_parser_union_type@@Base+0x1d4>
   330f0:	subs	r1, r6, #256	; 0x100
   330f4:	sbcs	r1, r7, #0
   330f8:	bcc	33194 <flatcc_json_parser_union_type@@Base+0x258>
   330fc:	ldr	r1, [r5, #24]
   33100:	mov	r2, r4
   33104:	cmp	r1, #0
   33108:	bne	3319c <flatcc_json_parser_union_type@@Base+0x260>
   3310c:	mov	r1, #7
   33110:	str	r0, [r5, #36]	; 0x24
   33114:	ldr	r2, [r5, #4]
   33118:	sub	r0, r0, r2
   3311c:	mov	r2, r4
   33120:	add	r0, r0, #1
   33124:	str	r0, [r5, #20]
   33128:	str	r1, [r5, #24]
   3312c:	cmp	r2, r8
   33130:	bne	331c8 <flatcc_json_parser_union_type@@Base+0x28c>
   33134:	b	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   33138:	mov	r0, #1
   3313c:	cmp	r2, r8
   33140:	bne	33044 <flatcc_json_parser_union_type@@Base+0x108>
   33144:	b	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   33148:	ldr	r0, [r5, #24]
   3314c:	mov	r6, #0
   33150:	mov	r7, #0
   33154:	cmp	r0, #0
   33158:	mov	r0, r4
   3315c:	bne	33188 <flatcc_json_parser_union_type@@Base+0x24c>
   33160:	mov	r0, #8
   33164:	str	r2, [r5, #36]	; 0x24
   33168:	mov	r6, #0
   3316c:	mov	r7, #0
   33170:	ldr	r1, [r5, #4]
   33174:	sub	r1, r2, r1
   33178:	add	r1, r1, #1
   3317c:	str	r1, [r5, #20]
   33180:	str	r0, [r5, #24]
   33184:	mov	r0, r4
   33188:	cmp	r0, r8
   3318c:	bne	330d0 <flatcc_json_parser_union_type@@Base+0x194>
   33190:	b	331a4 <flatcc_json_parser_union_type@@Base+0x268>
   33194:	mov	r2, r0
   33198:	strb	r6, [lr]
   3319c:	cmp	r2, r8
   331a0:	bne	331c8 <flatcc_json_parser_union_type@@Base+0x28c>
   331a4:	ldr	r3, [fp, #16]
   331a8:	mov	r0, r5
   331ac:	mov	r1, r8
   331b0:	mov	r2, r4
   331b4:	str	lr, [sp]
   331b8:	mov	r6, lr
   331bc:	bl	332d4 <flatcc_json_parser_union_type@@Base+0x398>
   331c0:	mov	lr, r6
   331c4:	mov	r2, r0
   331c8:	ldr	r0, [sp, #8]
   331cc:	ldr	r1, [sp, #4]
   331d0:	ldr	r1, [r0, r1, lsl #3]
   331d4:	cmp	r1, #0
   331d8:	beq	33278 <flatcc_json_parser_union_type@@Base+0x33c>
   331dc:	ldr	r0, [r9, #4]
   331e0:	str	r2, [sp, #8]
   331e4:	cmp	r0, #0
   331e8:	beq	332b4 <flatcc_json_parser_union_type@@Base+0x378>
   331ec:	sub	r0, r0, #1
   331f0:	ldr	r6, [fp, #20]
   331f4:	mov	r2, r4
   331f8:	str	r0, [r9, #4]
   331fc:	ldr	r0, [sl, #8]
   33200:	ldr	r8, [r5, #4]
   33204:	ldr	r7, [r5, #16]
   33208:	str	r0, [r5, #16]
   3320c:	ldr	r0, [sl, #4]
   33210:	str	r0, [r5, #4]
   33214:	add	r0, sp, #12
   33218:	ldrb	r3, [lr]
   3321c:	add	r0, r0, #4
   33220:	str	r0, [sp]
   33224:	mov	r0, r5
   33228:	strb	r3, [sp, #12]
   3322c:	blx	r6
   33230:	cmp	r0, r4
   33234:	beq	32f90 <flatcc_json_parser_union_type@@Base+0x54>
   33238:	ldr	r1, [fp, #8]
   3323c:	ldr	r0, [r5]
   33240:	ldr	r2, [sp, #12]
   33244:	ldr	r3, [sp, #16]
   33248:	bl	2de50 <flatcc_builder_table_add_union@@Base>
   3324c:	cmp	r0, #0
   33250:	beq	3329c <flatcc_json_parser_union_type@@Base+0x360>
   33254:	ldr	r0, [r5, #24]
   33258:	cmp	r0, #0
   3325c:	bne	32f90 <flatcc_json_parser_union_type@@Base+0x54>
   33260:	ldr	r2, [sp, #8]
   33264:	mov	r0, #28
   33268:	str	r2, [r5, #36]	; 0x24
   3326c:	ldr	r1, [r5, #4]
   33270:	sub	r1, r2, r1
   33274:	b	33094 <flatcc_json_parser_union_type@@Base+0x158>
   33278:	ldrb	r0, [lr]
   3327c:	ldr	r1, [r9, #4]
   33280:	mov	r4, r2
   33284:	cmp	r0, #0
   33288:	addne	r1, r1, #1
   3328c:	str	r1, [r9, #4]
   33290:	mov	r0, r4
   33294:	sub	sp, fp, #28
   33298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3329c:	ldr	r4, [sp, #8]
   332a0:	str	r8, [r5, #4]
   332a4:	str	r7, [r5, #16]
   332a8:	mov	r0, r4
   332ac:	sub	sp, fp, #28
   332b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   332b4:	movw	r0, #27925	; 0x6d15
   332b8:	movw	r1, #27940	; 0x6d24
   332bc:	movw	r3, #28014	; 0x6d6e
   332c0:	movw	r2, #965	; 0x3c5
   332c4:	movt	r0, #3
   332c8:	movt	r1, #3
   332cc:	movt	r3, #3
   332d0:	bl	12bc4 <__assert_fail@plt>
   332d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   332d8:	add	fp, sp, #28
   332dc:	sub	sp, sp, #44	; 0x2c
   332e0:	mov	r4, r2
   332e4:	mov	r2, r1
   332e8:	ldr	r1, [fp, #8]
   332ec:	mov	r5, r0
   332f0:	mov	r0, #0
   332f4:	cmp	r2, r4
   332f8:	strb	r0, [r1]
   332fc:	beq	334d4 <flatcc_json_parser_union_type@@Base+0x598>
   33300:	ldrb	r0, [r2]
   33304:	cmp	r0, #46	; 0x2e
   33308:	beq	3337c <flatcc_json_parser_union_type@@Base+0x440>
   3330c:	cmp	r0, #34	; 0x22
   33310:	bne	334cc <flatcc_json_parser_union_type@@Base+0x590>
   33314:	mov	r0, #0
   33318:	add	r1, r2, #1
   3331c:	str	r0, [r5, #12]
   33320:	ldr	r0, [r5, #12]
   33324:	cmp	r0, #0
   33328:	bne	333b8 <flatcc_json_parser_union_type@@Base+0x47c>
   3332c:	sub	r0, r4, r1
   33330:	cmp	r0, #2
   33334:	blt	33358 <flatcc_json_parser_union_type@@Base+0x41c>
   33338:	ldrb	r0, [r1]
   3333c:	cmp	r0, #32
   33340:	bhi	333b8 <flatcc_json_parser_union_type@@Base+0x47c>
   33344:	bne	33358 <flatcc_json_parser_union_type@@Base+0x41c>
   33348:	mov	r7, r1
   3334c:	ldrb	r0, [r7, #1]!
   33350:	cmp	r0, #32
   33354:	bhi	33370 <flatcc_json_parser_union_type@@Base+0x434>
   33358:	mov	r0, r5
   3335c:	mov	r2, r4
   33360:	mov	r6, r3
   33364:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   33368:	mov	r3, r6
   3336c:	mov	r7, r0
   33370:	cmp	r7, r4
   33374:	bne	333c4 <flatcc_json_parser_union_type@@Base+0x488>
   33378:	b	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   3337c:	ldr	r0, [r5, #24]
   33380:	mov	r1, r4
   33384:	cmp	r0, #0
   33388:	bne	334d8 <flatcc_json_parser_union_type@@Base+0x59c>
   3338c:	str	r2, [r5, #36]	; 0x24
   33390:	mov	r0, #5
   33394:	ldr	r1, [r5, #4]
   33398:	sub	r1, r2, r1
   3339c:	add	r1, r1, #1
   333a0:	str	r1, [r5, #20]
   333a4:	str	r0, [r5, #24]
   333a8:	mov	r1, r4
   333ac:	ldr	r0, [r5, #12]
   333b0:	cmp	r0, #0
   333b4:	beq	3332c <flatcc_json_parser_union_type@@Base+0x3f0>
   333b8:	mov	r7, r1
   333bc:	cmp	r7, r4
   333c0:	beq	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   333c4:	add	r9, r3, #4
   333c8:	mov	r6, #0
   333cc:	add	sl, sp, #32
   333d0:	add	r8, sp, #28
   333d4:	str	r3, [sp, #16]
   333d8:	str	r9, [sp, #12]
   333dc:	str	r6, [sp, #20]
   333e0:	mov	r6, r3
   333e4:	ldr	r6, [r3]
   333e8:	add	r0, sp, #24
   333ec:	mov	r1, r7
   333f0:	mov	r2, r4
   333f4:	mov	r3, r8
   333f8:	str	sl, [sp]
   333fc:	str	r0, [sp, #4]
   33400:	mov	r0, r5
   33404:	blx	r6
   33408:	cmp	r0, r4
   3340c:	beq	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   33410:	cmp	r0, r7
   33414:	bne	33428 <flatcc_json_parser_union_type@@Base+0x4ec>
   33418:	ldr	r6, [r9], #4
   3341c:	cmp	r6, #0
   33420:	bne	333e8 <flatcc_json_parser_union_type@@Base+0x4ac>
   33424:	b	33498 <flatcc_json_parser_union_type@@Base+0x55c>
   33428:	ldr	r6, [sp, #20]
   3342c:	cmp	r6, #0
   33430:	beq	33440 <flatcc_json_parser_union_type@@Base+0x504>
   33434:	ldr	r1, [r5, #12]
   33438:	cmp	r1, #0
   3343c:	bne	33510 <flatcc_json_parser_union_type@@Base+0x5d4>
   33440:	ldr	r1, [sp, #28]
   33444:	cmp	r1, #0
   33448:	bne	334e8 <flatcc_json_parser_union_type@@Base+0x5ac>
   3344c:	ldr	r1, [sp, #32]
   33450:	ldr	r2, [sp, #36]	; 0x24
   33454:	subs	r3, r1, #256	; 0x100
   33458:	sbcs	r2, r2, #0
   3345c:	bcs	334fc <flatcc_json_parser_union_type@@Base+0x5c0>
   33460:	ldr	r2, [fp, #8]
   33464:	ldr	r9, [sp, #12]
   33468:	add	r6, r6, #1
   3346c:	mov	r7, r0
   33470:	mov	r3, r2
   33474:	ldrb	r2, [r2]
   33478:	add	r1, r2, r1
   3347c:	strb	r1, [r3]
   33480:	ldr	r3, [sp, #16]
   33484:	ldr	r1, [sp, #24]
   33488:	cmp	r1, #0
   3348c:	bne	333dc <flatcc_json_parser_union_type@@Base+0x4a0>
   33490:	sub	sp, fp, #28
   33494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33498:	ldr	r0, [r5, #24]
   3349c:	cmp	r0, #0
   334a0:	bne	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   334a4:	str	r7, [r5, #36]	; 0x24
   334a8:	mov	r0, #23
   334ac:	ldr	r1, [r5, #4]
   334b0:	sub	r1, r7, r1
   334b4:	add	r1, r1, #1
   334b8:	str	r1, [r5, #20]
   334bc:	str	r0, [r5, #24]
   334c0:	mov	r0, r4
   334c4:	sub	sp, fp, #28
   334c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   334cc:	mov	r0, #1
   334d0:	str	r0, [r5, #12]
   334d4:	mov	r1, r2
   334d8:	ldr	r0, [r5, #12]
   334dc:	cmp	r0, #0
   334e0:	bne	333b8 <flatcc_json_parser_union_type@@Base+0x47c>
   334e4:	b	3332c <flatcc_json_parser_union_type@@Base+0x3f0>
   334e8:	ldr	r1, [r5, #24]
   334ec:	cmp	r1, #0
   334f0:	bne	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   334f4:	mov	r1, #8
   334f8:	b	33520 <flatcc_json_parser_union_type@@Base+0x5e4>
   334fc:	ldr	r1, [r5, #24]
   33500:	cmp	r1, #0
   33504:	bne	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   33508:	mov	r1, #7
   3350c:	b	33520 <flatcc_json_parser_union_type@@Base+0x5e4>
   33510:	ldr	r1, [r5, #24]
   33514:	cmp	r1, #0
   33518:	bne	334c0 <flatcc_json_parser_union_type@@Base+0x584>
   3351c:	mov	r1, #14
   33520:	str	r0, [r5, #36]	; 0x24
   33524:	ldr	r2, [r5, #4]
   33528:	sub	r0, r0, r2
   3352c:	add	r0, r0, #1
   33530:	str	r0, [r5, #20]
   33534:	str	r1, [r5, #24]
   33538:	mov	r0, r4
   3353c:	sub	sp, fp, #28
   33540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00033544 <flatcc_json_parser_union_vector@@Base>:
   33544:	push	{r4, r5, r6, r7, fp, lr}
   33548:	add	fp, sp, #16
   3354c:	sub	sp, sp, #16
   33550:	mov	r6, r1
   33554:	mov	r5, r0
   33558:	ldr	r0, [r0]
   3355c:	ldr	r1, [fp, #12]
   33560:	mov	r7, r3
   33564:	mov	r4, r2
   33568:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   3356c:	add	r2, r0, #8
   33570:	add	r3, r7, r7, lsl #1
   33574:	mov	r1, r2
   33578:	ldr	r7, [r1, r3, lsl #3]!
   3357c:	cmp	r7, #0
   33580:	beq	3359c <flatcc_json_parser_union_vector@@Base+0x58>
   33584:	ldr	r0, [r5, #24]
   33588:	cmp	r0, #0
   3358c:	beq	335e8 <flatcc_json_parser_union_vector@@Base+0xa4>
   33590:	mov	r0, r4
   33594:	sub	sp, fp, #16
   33598:	pop	{r4, r5, r6, r7, fp, pc}
   3359c:	add	r2, r2, r3, lsl #3
   335a0:	ldr	r3, [r0, #4]
   335a4:	ldrb	r7, [r2, #12]
   335a8:	cmp	r7, #0
   335ac:	beq	33610 <flatcc_json_parser_union_vector@@Base+0xcc>
   335b0:	sub	r3, r3, #1
   335b4:	ldr	r1, [fp, #16]
   335b8:	ldr	r7, [fp, #8]
   335bc:	str	r3, [r0, #4]
   335c0:	ldr	r0, [r2, #16]
   335c4:	ldr	r3, [r2, #20]
   335c8:	mov	r2, r4
   335cc:	stm	sp, {r0, r7}
   335d0:	str	r1, [sp, #8]
   335d4:	mov	r0, r5
   335d8:	mov	r1, r6
   335dc:	bl	33644 <flatcc_json_parser_union_vector@@Base+0x100>
   335e0:	sub	sp, fp, #16
   335e4:	pop	{r4, r5, r6, r7, fp, pc}
   335e8:	str	r6, [r5, #36]	; 0x24
   335ec:	mov	r0, #28
   335f0:	ldr	r1, [r5, #4]
   335f4:	sub	r1, r6, r1
   335f8:	add	r1, r1, #1
   335fc:	str	r1, [r5, #20]
   33600:	str	r0, [r5, #24]
   33604:	mov	r0, r4
   33608:	sub	sp, fp, #16
   3360c:	pop	{r4, r5, r6, r7, fp, pc}
   33610:	add	r3, r3, #1
   33614:	str	r3, [r0, #4]
   33618:	ldr	r0, [r5, #16]
   3361c:	str	r0, [r2, #8]
   33620:	ldr	r0, [r5, #4]
   33624:	str	r0, [r2, #4]
   33628:	str	r6, [r1]
   3362c:	mov	r0, r5
   33630:	mov	r1, r6
   33634:	mov	r2, r4
   33638:	sub	sp, fp, #16
   3363c:	pop	{r4, r5, r6, r7, fp, lr}
   33640:	b	30a88 <flatcc_json_parser_generic_json@@Base>
   33644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33648:	add	fp, sp, #28
   3364c:	sub	sp, sp, #12
   33650:	mov	r5, r0
   33654:	mov	r0, #0
   33658:	mov	r8, r3
   3365c:	mov	r6, r2
   33660:	mov	r7, r1
   33664:	str	r0, [sp, #8]
   33668:	ldr	r0, [r5]
   3366c:	bl	2c85c <flatcc_builder_start_offset_vector@@Base>
   33670:	cmp	r0, #0
   33674:	beq	33698 <flatcc_json_parser_union_vector@@Base+0x154>
   33678:	ldr	r0, [r5, #24]
   3367c:	cmp	r0, #0
   33680:	bne	33720 <flatcc_json_parser_union_vector@@Base+0x1dc>
   33684:	str	r7, [r5, #36]	; 0x24
   33688:	mov	r0, #33	; 0x21
   3368c:	ldr	r1, [r5, #4]
   33690:	sub	r1, r7, r1
   33694:	b	33714 <flatcc_json_parser_union_vector@@Base+0x1d0>
   33698:	ldr	sl, [fp, #8]
   3369c:	cmp	r7, r6
   336a0:	beq	336e0 <flatcc_json_parser_union_vector@@Base+0x19c>
   336a4:	ldrb	r0, [r7]
   336a8:	cmp	r0, #91	; 0x5b
   336ac:	bne	336e0 <flatcc_json_parser_union_vector@@Base+0x19c>
   336b0:	add	r1, r7, #1
   336b4:	sub	r0, r6, r1
   336b8:	cmp	r0, #2
   336bc:	blt	337c8 <flatcc_json_parser_union_vector@@Base+0x284>
   336c0:	ldrb	r0, [r1]
   336c4:	cmp	r0, #32
   336c8:	bls	337b8 <flatcc_json_parser_union_vector@@Base+0x274>
   336cc:	mov	r7, r1
   336d0:	cmp	r7, r6
   336d4:	mov	r4, r6
   336d8:	bne	337e4 <flatcc_json_parser_union_vector@@Base+0x2a0>
   336dc:	b	33820 <flatcc_json_parser_union_vector@@Base+0x2dc>
   336e0:	ldr	r0, [r5, #24]
   336e4:	mov	r9, r6
   336e8:	cmp	r0, #0
   336ec:	beq	3372c <flatcc_json_parser_union_vector@@Base+0x1e8>
   336f0:	cmp	sl, #0
   336f4:	beq	33754 <flatcc_json_parser_union_vector@@Base+0x210>
   336f8:	ldr	r0, [r5, #24]
   336fc:	cmp	r0, #0
   33700:	bne	33720 <flatcc_json_parser_union_vector@@Base+0x1dc>
   33704:	str	r9, [r5, #36]	; 0x24
   33708:	mov	r0, #30
   3370c:	ldr	r1, [r5, #4]
   33710:	sub	r1, r9, r1
   33714:	add	r1, r1, #1
   33718:	str	r1, [r5, #20]
   3371c:	str	r0, [r5, #24]
   33720:	mov	r0, r6
   33724:	sub	sp, fp, #28
   33728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3372c:	str	r7, [r5, #36]	; 0x24
   33730:	mov	r0, #22
   33734:	mov	r9, r6
   33738:	ldr	r1, [r5, #4]
   3373c:	sub	r1, r7, r1
   33740:	add	r1, r1, #1
   33744:	str	r1, [r5, #20]
   33748:	str	r0, [r5, #24]
   3374c:	cmp	sl, #0
   33750:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   33754:	ldr	r0, [r5]
   33758:	mov	r1, r8
   3375c:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   33760:	mov	r1, r0
   33764:	ldr	r0, [r5]
   33768:	bl	2dd64 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3376c:	cmp	r0, #0
   33770:	str	r0, [sp, #8]
   33774:	beq	337a4 <flatcc_json_parser_union_vector@@Base+0x260>
   33778:	ldr	r1, [fp, #12]
   3377c:	ldr	r0, [r5]
   33780:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   33784:	cmp	r0, #0
   33788:	beq	337a4 <flatcc_json_parser_union_vector@@Base+0x260>
   3378c:	ldr	r1, [sp, #8]
   33790:	mov	r6, r9
   33794:	str	r1, [r0]
   33798:	mov	r0, r6
   3379c:	sub	sp, fp, #28
   337a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   337a4:	mov	r7, r9
   337a8:	ldr	r0, [r5, #24]
   337ac:	cmp	r0, #0
   337b0:	bne	33720 <flatcc_json_parser_union_vector@@Base+0x1dc>
   337b4:	b	33684 <flatcc_json_parser_union_vector@@Base+0x140>
   337b8:	bne	337c8 <flatcc_json_parser_union_vector@@Base+0x284>
   337bc:	ldrb	r0, [r7, #2]!
   337c0:	cmp	r0, #32
   337c4:	bhi	337d8 <flatcc_json_parser_union_vector@@Base+0x294>
   337c8:	mov	r0, r5
   337cc:	mov	r2, r6
   337d0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   337d4:	mov	r7, r0
   337d8:	cmp	r7, r6
   337dc:	mov	r4, r6
   337e0:	beq	33820 <flatcc_json_parser_union_vector@@Base+0x2dc>
   337e4:	ldrb	r0, [r7]
   337e8:	cmp	r0, #93	; 0x5d
   337ec:	bne	3381c <flatcc_json_parser_union_vector@@Base+0x2d8>
   337f0:	add	r1, r7, #1
   337f4:	sub	r0, r6, r1
   337f8:	cmp	r0, #2
   337fc:	blt	339b8 <flatcc_json_parser_union_vector@@Base+0x474>
   33800:	ldrb	r0, [r1]
   33804:	cmp	r0, #32
   33808:	bls	339a4 <flatcc_json_parser_union_vector@@Base+0x460>
   3380c:	mov	r9, r1
   33810:	cmp	sl, #0
   33814:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   33818:	b	33754 <flatcc_json_parser_union_vector@@Base+0x210>
   3381c:	mov	r4, r7
   33820:	cmp	sl, #0
   33824:	beq	33984 <flatcc_json_parser_union_vector@@Base+0x440>
   33828:	add	r0, r6, #1
   3382c:	mov	sl, #0
   33830:	add	r9, sp, #8
   33834:	str	r0, [sp, #4]
   33838:	ldr	r0, [r5]
   3383c:	mov	r1, r8
   33840:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   33844:	ldrb	r3, [r0, -sl]
   33848:	ldr	r7, [fp, #16]
   3384c:	mov	r0, r5
   33850:	mov	r1, r4
   33854:	mov	r2, r6
   33858:	str	r9, [sp]
   3385c:	blx	r7
   33860:	cmp	r0, r6
   33864:	beq	33720 <flatcc_json_parser_union_vector@@Base+0x1dc>
   33868:	mov	r7, r0
   3386c:	ldr	r0, [r5]
   33870:	mov	r1, #1
   33874:	bl	2c018 <flatcc_builder_extend_offset_vector@@Base>
   33878:	cmp	r0, #0
   3387c:	beq	33678 <flatcc_json_parser_union_vector@@Base+0x134>
   33880:	ldr	r1, [sp, #8]
   33884:	str	r1, [r0]
   33888:	sub	r0, r6, r7
   3388c:	cmp	r0, #2
   33890:	blt	33914 <flatcc_json_parser_union_vector@@Base+0x3d0>
   33894:	ldrb	r0, [r7]
   33898:	cmp	r0, #32
   3389c:	bls	33900 <flatcc_json_parser_union_vector@@Base+0x3bc>
   338a0:	mov	r4, r7
   338a4:	cmp	r4, r6
   338a8:	beq	33aa8 <flatcc_json_parser_union_vector@@Base+0x564>
   338ac:	ldrb	r0, [r4]
   338b0:	cmp	r0, #44	; 0x2c
   338b4:	bne	339d4 <flatcc_json_parser_union_vector@@Base+0x490>
   338b8:	add	r1, r4, #1
   338bc:	sub	r0, r6, r1
   338c0:	cmp	r0, #2
   338c4:	blt	33944 <flatcc_json_parser_union_vector@@Base+0x400>
   338c8:	ldrb	r0, [r1]
   338cc:	cmp	r0, #32
   338d0:	bls	33934 <flatcc_json_parser_union_vector@@Base+0x3f0>
   338d4:	mov	r4, r1
   338d8:	cmp	r4, r6
   338dc:	beq	3395c <flatcc_json_parser_union_vector@@Base+0x418>
   338e0:	ldrb	r0, [r4]
   338e4:	cmp	r0, #93	; 0x5d
   338e8:	beq	33a10 <flatcc_json_parser_union_vector@@Base+0x4cc>
   338ec:	ldr	r0, [fp, #8]
   338f0:	sub	sl, sl, #1
   338f4:	adds	r0, r0, sl
   338f8:	bne	33838 <flatcc_json_parser_union_vector@@Base+0x2f4>
   338fc:	b	33984 <flatcc_json_parser_union_vector@@Base+0x440>
   33900:	bne	33914 <flatcc_json_parser_union_vector@@Base+0x3d0>
   33904:	mov	r4, r7
   33908:	ldrb	r0, [r4, #1]!
   3390c:	cmp	r0, #32
   33910:	bhi	33928 <flatcc_json_parser_union_vector@@Base+0x3e4>
   33914:	mov	r0, r5
   33918:	mov	r1, r7
   3391c:	mov	r2, r6
   33920:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   33924:	mov	r4, r0
   33928:	cmp	r4, r6
   3392c:	bne	338ac <flatcc_json_parser_union_vector@@Base+0x368>
   33930:	b	33aa8 <flatcc_json_parser_union_vector@@Base+0x564>
   33934:	bne	33944 <flatcc_json_parser_union_vector@@Base+0x400>
   33938:	ldrb	r0, [r4, #2]!
   3393c:	cmp	r0, #32
   33940:	bhi	33954 <flatcc_json_parser_union_vector@@Base+0x410>
   33944:	mov	r0, r5
   33948:	mov	r2, r6
   3394c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   33950:	mov	r4, r0
   33954:	cmp	r4, r6
   33958:	bne	338e0 <flatcc_json_parser_union_vector@@Base+0x39c>
   3395c:	ldr	r0, [r5, #24]
   33960:	mov	r9, r6
   33964:	cmp	r0, #0
   33968:	bne	33a78 <flatcc_json_parser_union_vector@@Base+0x534>
   3396c:	str	r6, [r5, #36]	; 0x24
   33970:	ldr	r2, [sp, #4]
   33974:	mov	r0, #9
   33978:	ldr	r1, [r5, #4]
   3397c:	sub	r1, r2, r1
   33980:	b	33aa0 <flatcc_json_parser_union_vector@@Base+0x55c>
   33984:	ldr	r0, [r5, #24]
   33988:	cmp	r0, #0
   3398c:	bne	33720 <flatcc_json_parser_union_vector@@Base+0x1dc>
   33990:	str	r4, [r5, #36]	; 0x24
   33994:	mov	r0, #30
   33998:	ldr	r1, [r5, #4]
   3399c:	sub	r1, r4, r1
   339a0:	b	33714 <flatcc_json_parser_union_vector@@Base+0x1d0>
   339a4:	bne	339b8 <flatcc_json_parser_union_vector@@Base+0x474>
   339a8:	ldrb	r0, [r7, #2]!
   339ac:	mov	r9, r7
   339b0:	cmp	r0, #32
   339b4:	bhi	336f0 <flatcc_json_parser_union_vector@@Base+0x1ac>
   339b8:	mov	r0, r5
   339bc:	mov	r2, r6
   339c0:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   339c4:	mov	r9, r0
   339c8:	cmp	sl, #0
   339cc:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   339d0:	b	33754 <flatcc_json_parser_union_vector@@Base+0x210>
   339d4:	cmp	r0, #93	; 0x5d
   339d8:	bne	33a68 <flatcc_json_parser_union_vector@@Base+0x524>
   339dc:	add	r1, r4, #1
   339e0:	sub	r0, r6, r1
   339e4:	cmp	r0, #2
   339e8:	blt	33a44 <flatcc_json_parser_union_vector@@Base+0x500>
   339ec:	ldrb	r0, [r1]
   339f0:	cmp	r0, #32
   339f4:	bhi	33a2c <flatcc_json_parser_union_vector@@Base+0x4e8>
   339f8:	bne	33a44 <flatcc_json_parser_union_vector@@Base+0x500>
   339fc:	ldrb	r0, [r4, #2]!
   33a00:	mov	r9, r4
   33a04:	cmp	r0, #32
   33a08:	bhi	33a78 <flatcc_json_parser_union_vector@@Base+0x534>
   33a0c:	b	33a44 <flatcc_json_parser_union_vector@@Base+0x500>
   33a10:	add	r1, r4, #1
   33a14:	sub	r0, r6, r1
   33a18:	cmp	r0, #2
   33a1c:	blt	33a44 <flatcc_json_parser_union_vector@@Base+0x500>
   33a20:	ldrb	r0, [r1]
   33a24:	cmp	r0, #32
   33a28:	bls	339f8 <flatcc_json_parser_union_vector@@Base+0x4b4>
   33a2c:	mov	r9, r1
   33a30:	ldr	r0, [fp, #8]
   33a34:	add	r0, r0, sl
   33a38:	cmp	r0, #1
   33a3c:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   33a40:	b	33754 <flatcc_json_parser_union_vector@@Base+0x210>
   33a44:	mov	r0, r5
   33a48:	mov	r2, r6
   33a4c:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   33a50:	mov	r9, r0
   33a54:	ldr	r0, [fp, #8]
   33a58:	add	r0, r0, sl
   33a5c:	cmp	r0, #1
   33a60:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   33a64:	b	33754 <flatcc_json_parser_union_vector@@Base+0x210>
   33a68:	ldr	r0, [r5, #24]
   33a6c:	mov	r9, r6
   33a70:	cmp	r0, #0
   33a74:	beq	33a8c <flatcc_json_parser_union_vector@@Base+0x548>
   33a78:	ldr	r0, [fp, #8]
   33a7c:	add	r0, r0, sl
   33a80:	cmp	r0, #1
   33a84:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   33a88:	b	33754 <flatcc_json_parser_union_vector@@Base+0x210>
   33a8c:	str	r4, [r5, #36]	; 0x24
   33a90:	mov	r0, #9
   33a94:	ldr	r1, [r5, #4]
   33a98:	sub	r1, r4, r1
   33a9c:	add	r1, r1, #1
   33aa0:	str	r1, [r5, #20]
   33aa4:	str	r0, [r5, #24]
   33aa8:	mov	r9, r6
   33aac:	ldr	r0, [fp, #8]
   33ab0:	add	r0, r0, sl
   33ab4:	cmp	r0, #1
   33ab8:	bne	336f8 <flatcc_json_parser_union_vector@@Base+0x1b4>
   33abc:	b	33754 <flatcc_json_parser_union_vector@@Base+0x210>

00033ac0 <flatcc_json_parser_union_type_vector@@Base>:
   33ac0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33ac4:	add	fp, sp, #28
   33ac8:	sub	sp, sp, #28
   33acc:	mov	r7, r1
   33ad0:	mov	r5, r0
   33ad4:	ldr	r0, [r0]
   33ad8:	ldr	r1, [fp, #12]
   33adc:	mov	r4, r3
   33ae0:	mov	r8, r2
   33ae4:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   33ae8:	add	r6, r4, r4, lsl #1
   33aec:	add	r0, r0, #8
   33af0:	add	r4, r0, r6, lsl #3
   33af4:	mov	r0, r4
   33af8:	ldrb	r1, [r0, #12]!
   33afc:	cmp	r1, #0
   33b00:	beq	33b24 <flatcc_json_parser_union_type_vector@@Base+0x64>
   33b04:	ldr	r0, [r5, #24]
   33b08:	cmp	r0, #0
   33b0c:	bne	33b74 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   33b10:	str	r7, [r5, #36]	; 0x24
   33b14:	mov	r0, #28
   33b18:	ldr	r1, [r5, #4]
   33b1c:	sub	r1, r7, r1
   33b20:	b	33b68 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   33b24:	mov	r1, #1
   33b28:	mov	r2, #1
   33b2c:	mvn	r3, #0
   33b30:	strb	r1, [r0]
   33b34:	mov	r1, #1
   33b38:	ldr	r0, [r5]
   33b3c:	bl	2c7d0 <flatcc_builder_start_vector@@Base>
   33b40:	cmp	r0, #0
   33b44:	beq	33b80 <flatcc_json_parser_union_type_vector@@Base+0xc0>
   33b48:	mov	sl, r7
   33b4c:	ldr	r0, [r5, #24]
   33b50:	cmp	r0, #0
   33b54:	bne	33b74 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   33b58:	str	sl, [r5, #36]	; 0x24
   33b5c:	mov	r0, #33	; 0x21
   33b60:	ldr	r1, [r5, #4]
   33b64:	sub	r1, sl, r1
   33b68:	add	r1, r1, #1
   33b6c:	str	r1, [r5, #20]
   33b70:	str	r0, [r5, #24]
   33b74:	mov	r0, r8
   33b78:	sub	sp, fp, #28
   33b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b80:	cmp	r7, r8
   33b84:	beq	33bc4 <flatcc_json_parser_union_type_vector@@Base+0x104>
   33b88:	ldrb	r0, [r7]
   33b8c:	cmp	r0, #91	; 0x5b
   33b90:	bne	33bc4 <flatcc_json_parser_union_type_vector@@Base+0x104>
   33b94:	add	r1, r7, #1
   33b98:	sub	r0, r8, r1
   33b9c:	cmp	r0, #2
   33ba0:	blt	33c08 <flatcc_json_parser_union_type_vector@@Base+0x148>
   33ba4:	ldrb	r0, [r1]
   33ba8:	cmp	r0, #32
   33bac:	bls	33bf8 <flatcc_json_parser_union_type_vector@@Base+0x138>
   33bb0:	mov	r7, r1
   33bb4:	cmp	r7, r8
   33bb8:	mov	sl, r8
   33bbc:	bne	33c24 <flatcc_json_parser_union_type_vector@@Base+0x164>
   33bc0:	b	33c68 <flatcc_json_parser_union_type_vector@@Base+0x1a8>
   33bc4:	ldr	r0, [r5, #24]
   33bc8:	cmp	r0, #0
   33bcc:	mov	r0, r8
   33bd0:	bne	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   33bd4:	str	r7, [r5, #36]	; 0x24
   33bd8:	mov	r0, #22
   33bdc:	ldr	r1, [r5, #4]
   33be0:	sub	r1, r7, r1
   33be4:	add	r1, r1, #1
   33be8:	str	r1, [r5, #20]
   33bec:	str	r0, [r5, #24]
   33bf0:	mov	r0, r8
   33bf4:	b	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   33bf8:	bne	33c08 <flatcc_json_parser_union_type_vector@@Base+0x148>
   33bfc:	ldrb	r0, [r7, #2]!
   33c00:	cmp	r0, #32
   33c04:	bhi	33c18 <flatcc_json_parser_union_type_vector@@Base+0x158>
   33c08:	mov	r0, r5
   33c0c:	mov	r2, r8
   33c10:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   33c14:	mov	r7, r0
   33c18:	cmp	r7, r8
   33c1c:	mov	sl, r8
   33c20:	beq	33c68 <flatcc_json_parser_union_type_vector@@Base+0x1a8>
   33c24:	ldrb	r0, [r7]
   33c28:	cmp	r0, #93	; 0x5d
   33c2c:	bne	33c64 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   33c30:	add	r1, r7, #1
   33c34:	sub	r0, r8, r1
   33c38:	cmp	r0, #2
   33c3c:	blt	340dc <flatcc_json_parser_union_type_vector@@Base+0x61c>
   33c40:	ldrb	r0, [r1]
   33c44:	cmp	r0, #32
   33c48:	bhi	34068 <flatcc_json_parser_union_type_vector@@Base+0x5a8>
   33c4c:	bne	340dc <flatcc_json_parser_union_type_vector@@Base+0x61c>
   33c50:	ldrb	r0, [r7, #2]!
   33c54:	cmp	r0, #32
   33c58:	mov	r0, r7
   33c5c:	bls	340dc <flatcc_json_parser_union_type_vector@@Base+0x61c>
   33c60:	b	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   33c64:	mov	sl, r7
   33c68:	ldr	r0, [r5]
   33c6c:	mov	r1, #1
   33c70:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   33c74:	cmp	r0, #0
   33c78:	beq	33b4c <flatcc_json_parser_union_type_vector@@Base+0x8c>
   33c7c:	mov	r1, r0
   33c80:	add	r0, r8, #1
   33c84:	str	r4, [sp, #16]
   33c88:	str	r0, [sp, #12]
   33c8c:	mov	r9, #0
   33c90:	cmp	sl, r8
   33c94:	mov	r4, r8
   33c98:	str	r1, [sp, #20]
   33c9c:	strb	r9, [sp, #27]
   33ca0:	beq	33ec4 <flatcc_json_parser_union_type_vector@@Base+0x404>
   33ca4:	mov	r2, sl
   33ca8:	mov	r9, #0
   33cac:	ldrb	ip, [r2], #1
   33cb0:	cmp	ip, #45	; 0x2d
   33cb4:	movne	r2, sl
   33cb8:	cmp	r2, r8
   33cbc:	beq	33d34 <flatcc_json_parser_union_type_vector@@Base+0x274>
   33cc0:	mov	r7, #0
   33cc4:	mov	r0, #0
   33cc8:	mov	r4, #10
   33ccc:	ldrb	r1, [r2]
   33cd0:	sub	r3, r1, #48	; 0x30
   33cd4:	uxtb	r3, r3
   33cd8:	cmp	r3, #9
   33cdc:	bhi	33d54 <flatcc_json_parser_union_type_vector@@Base+0x294>
   33ce0:	add	r3, r0, r0, lsl #2
   33ce4:	lsl	r3, r3, #1
   33ce8:	umlal	r1, r3, r7, r4
   33cec:	subs	r1, r1, #48	; 0x30
   33cf0:	sbc	r3, r3, #0
   33cf4:	subs	r7, r1, r7
   33cf8:	sbcs	r0, r3, r0
   33cfc:	bcc	33dd8 <flatcc_json_parser_union_type_vector@@Base+0x318>
   33d00:	add	r2, r2, #1
   33d04:	mov	r7, r1
   33d08:	mov	r0, r3
   33d0c:	cmp	r8, r2
   33d10:	bne	33ccc <flatcc_json_parser_union_type_vector@@Base+0x20c>
   33d14:	mov	lr, #0
   33d18:	mov	r2, r8
   33d1c:	mov	r7, r1
   33d20:	mov	r0, r3
   33d24:	cmp	r2, sl
   33d28:	mov	r4, sl
   33d2c:	bne	33d64 <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   33d30:	b	33ec4 <flatcc_json_parser_union_type_vector@@Base+0x404>
   33d34:	mov	r2, r8
   33d38:	mov	r7, #0
   33d3c:	mov	r0, #0
   33d40:	mov	lr, #0
   33d44:	cmp	r2, sl
   33d48:	mov	r4, sl
   33d4c:	bne	33d64 <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   33d50:	b	33ec4 <flatcc_json_parser_union_type_vector@@Base+0x404>
   33d54:	mov	lr, #1
   33d58:	cmp	r2, sl
   33d5c:	mov	r4, sl
   33d60:	beq	33ec4 <flatcc_json_parser_union_type_vector@@Base+0x404>
   33d64:	cmp	lr, #0
   33d68:	beq	33db8 <flatcc_json_parser_union_type_vector@@Base+0x2f8>
   33d6c:	ldrb	r1, [r2]
   33d70:	cmp	r1, #46	; 0x2e
   33d74:	beq	33d84 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
   33d78:	cmp	r1, #101	; 0x65
   33d7c:	cmpne	r1, #69	; 0x45
   33d80:	bne	33e28 <flatcc_json_parser_union_type_vector@@Base+0x368>
   33d84:	ldr	r0, [r5, #24]
   33d88:	mov	r7, #0
   33d8c:	mov	r4, r8
   33d90:	cmp	r0, #0
   33d94:	mov	r0, #0
   33d98:	bne	33e2c <flatcc_json_parser_union_type_vector@@Base+0x36c>
   33d9c:	str	r2, [r5, #36]	; 0x24
   33da0:	ldr	r0, [r5, #4]
   33da4:	sub	r0, r2, r0
   33da8:	add	r0, r0, #1
   33dac:	str	r0, [r5, #20]
   33db0:	mov	r0, #12
   33db4:	b	33e08 <flatcc_json_parser_union_type_vector@@Base+0x348>
   33db8:	mov	r4, r2
   33dbc:	mov	r9, #0
   33dc0:	cmp	r4, sl
   33dc4:	bne	33e38 <flatcc_json_parser_union_type_vector@@Base+0x378>
   33dc8:	mov	r4, sl
   33dcc:	cmp	sl, r4
   33dd0:	bne	33f00 <flatcc_json_parser_union_type_vector@@Base+0x440>
   33dd4:	b	33ecc <flatcc_json_parser_union_type_vector@@Base+0x40c>
   33dd8:	ldr	r0, [r5, #24]
   33ddc:	mov	r7, #0
   33de0:	mov	r4, r8
   33de4:	cmp	r0, #0
   33de8:	mov	r0, #0
   33dec:	bne	33e2c <flatcc_json_parser_union_type_vector@@Base+0x36c>
   33df0:	str	r2, [r5, #36]	; 0x24
   33df4:	ldr	r0, [r5, #4]
   33df8:	sub	r0, r2, r0
   33dfc:	add	r0, r0, #1
   33e00:	str	r0, [r5, #20]
   33e04:	mov	r0, #8
   33e08:	str	r0, [r5, #24]
   33e0c:	mov	r7, #0
   33e10:	mov	r0, #0
   33e14:	mov	r4, r8
   33e18:	mov	r9, #0
   33e1c:	cmp	r4, sl
   33e20:	bne	33e38 <flatcc_json_parser_union_type_vector@@Base+0x378>
   33e24:	b	33dc8 <flatcc_json_parser_union_type_vector@@Base+0x308>
   33e28:	mov	r4, r2
   33e2c:	mov	r9, #0
   33e30:	cmp	r4, sl
   33e34:	beq	33dc8 <flatcc_json_parser_union_type_vector@@Base+0x308>
   33e38:	cmp	ip, #45	; 0x2d
   33e3c:	bne	33e68 <flatcc_json_parser_union_type_vector@@Base+0x3a8>
   33e40:	ldr	r0, [r5, #24]
   33e44:	cmp	r0, #0
   33e48:	bne	33e80 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   33e4c:	str	r4, [r5, #36]	; 0x24
   33e50:	ldr	r0, [r5, #4]
   33e54:	sub	r0, r4, r0
   33e58:	add	r0, r0, #1
   33e5c:	str	r0, [r5, #20]
   33e60:	mov	r0, #8
   33e64:	b	33ebc <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   33e68:	subs	r1, r7, #256	; 0x100
   33e6c:	sbcs	r0, r0, #0
   33e70:	bcc	33e90 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   33e74:	ldr	r0, [r5, #24]
   33e78:	cmp	r0, #0
   33e7c:	beq	33ea4 <flatcc_json_parser_union_type_vector@@Base+0x3e4>
   33e80:	mov	r4, r8
   33e84:	cmp	sl, r4
   33e88:	bne	33f00 <flatcc_json_parser_union_type_vector@@Base+0x440>
   33e8c:	b	33ecc <flatcc_json_parser_union_type_vector@@Base+0x40c>
   33e90:	mov	r9, r7
   33e94:	strb	r7, [sp, #27]
   33e98:	cmp	sl, r4
   33e9c:	bne	33f00 <flatcc_json_parser_union_type_vector@@Base+0x440>
   33ea0:	b	33ecc <flatcc_json_parser_union_type_vector@@Base+0x40c>
   33ea4:	str	r4, [r5, #36]	; 0x24
   33ea8:	ldr	r0, [r5, #4]
   33eac:	sub	r0, r4, r0
   33eb0:	add	r0, r0, #1
   33eb4:	str	r0, [r5, #20]
   33eb8:	mov	r0, #7
   33ebc:	str	r0, [r5, #24]
   33ec0:	mov	r4, r8
   33ec4:	cmp	sl, r4
   33ec8:	bne	33f00 <flatcc_json_parser_union_type_vector@@Base+0x440>
   33ecc:	ldr	r3, [fp, #16]
   33ed0:	add	r0, sp, #27
   33ed4:	mov	r1, sl
   33ed8:	mov	r2, r8
   33edc:	str	r0, [sp]
   33ee0:	mov	r0, r5
   33ee4:	bl	332d4 <flatcc_json_parser_union_type@@Base+0x398>
   33ee8:	mov	r4, r0
   33eec:	cmp	r0, sl
   33ef0:	beq	34094 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   33ef4:	cmp	r4, r8
   33ef8:	beq	34094 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   33efc:	ldrb	r9, [sp, #27]
   33f00:	ldr	r1, [fp, #24]
   33f04:	uxtb	r0, r9
   33f08:	blx	r1
   33f0c:	cmp	r0, #0
   33f10:	bne	33f28 <flatcc_json_parser_union_type_vector@@Base+0x468>
   33f14:	ldrb	r0, [r5, #8]
   33f18:	tst	r0, #1
   33f1c:	beq	340a8 <flatcc_json_parser_union_type_vector@@Base+0x5e8>
   33f20:	mov	r9, #0
   33f24:	strb	r9, [sp, #27]
   33f28:	ldr	r0, [sp, #20]
   33f2c:	strb	r9, [r0]
   33f30:	sub	r0, r8, r4
   33f34:	cmp	r0, #2
   33f38:	blt	33fc8 <flatcc_json_parser_union_type_vector@@Base+0x508>
   33f3c:	ldrb	r0, [r4]
   33f40:	cmp	r0, #32
   33f44:	bls	33fb4 <flatcc_json_parser_union_type_vector@@Base+0x4f4>
   33f48:	mov	sl, r4
   33f4c:	cmp	sl, r8
   33f50:	beq	34038 <flatcc_json_parser_union_type_vector@@Base+0x578>
   33f54:	ldrb	r0, [sl]
   33f58:	ldr	r4, [sp, #16]
   33f5c:	cmp	r0, #44	; 0x2c
   33f60:	bne	34044 <flatcc_json_parser_union_type_vector@@Base+0x584>
   33f64:	add	r1, sl, #1
   33f68:	sub	r0, r8, r1
   33f6c:	cmp	r0, #2
   33f70:	blt	33ff8 <flatcc_json_parser_union_type_vector@@Base+0x538>
   33f74:	ldrb	r0, [r1]
   33f78:	cmp	r0, #32
   33f7c:	bls	33fe8 <flatcc_json_parser_union_type_vector@@Base+0x528>
   33f80:	mov	sl, r1
   33f84:	cmp	sl, r8
   33f88:	beq	34010 <flatcc_json_parser_union_type_vector@@Base+0x550>
   33f8c:	ldrb	r0, [sl]
   33f90:	cmp	r0, #93	; 0x5d
   33f94:	beq	3404c <flatcc_json_parser_union_type_vector@@Base+0x58c>
   33f98:	ldr	r0, [r5]
   33f9c:	mov	r1, #1
   33fa0:	bl	2bc7c <flatcc_builder_extend_vector@@Base>
   33fa4:	mov	r1, r0
   33fa8:	cmp	r0, #0
   33fac:	bne	33c8c <flatcc_json_parser_union_type_vector@@Base+0x1cc>
   33fb0:	b	33b4c <flatcc_json_parser_union_type_vector@@Base+0x8c>
   33fb4:	bne	33fc8 <flatcc_json_parser_union_type_vector@@Base+0x508>
   33fb8:	mov	sl, r4
   33fbc:	ldrb	r0, [sl, #1]!
   33fc0:	cmp	r0, #32
   33fc4:	bhi	33fdc <flatcc_json_parser_union_type_vector@@Base+0x51c>
   33fc8:	mov	r0, r5
   33fcc:	mov	r1, r4
   33fd0:	mov	r2, r8
   33fd4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   33fd8:	mov	sl, r0
   33fdc:	cmp	sl, r8
   33fe0:	bne	33f54 <flatcc_json_parser_union_type_vector@@Base+0x494>
   33fe4:	b	34038 <flatcc_json_parser_union_type_vector@@Base+0x578>
   33fe8:	bne	33ff8 <flatcc_json_parser_union_type_vector@@Base+0x538>
   33fec:	ldrb	r0, [sl, #2]!
   33ff0:	cmp	r0, #32
   33ff4:	bhi	34008 <flatcc_json_parser_union_type_vector@@Base+0x548>
   33ff8:	mov	r0, r5
   33ffc:	mov	r2, r8
   34000:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   34004:	mov	sl, r0
   34008:	cmp	sl, r8
   3400c:	bne	33f8c <flatcc_json_parser_union_type_vector@@Base+0x4cc>
   34010:	ldr	r0, [r5, #24]
   34014:	cmp	r0, #0
   34018:	mov	r0, r8
   3401c:	bne	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   34020:	str	r8, [r5, #36]	; 0x24
   34024:	ldr	r2, [sp, #12]
   34028:	mov	r0, #9
   3402c:	ldr	r1, [r5, #4]
   34030:	sub	r1, r2, r1
   34034:	b	33be8 <flatcc_json_parser_union_type_vector@@Base+0x128>
   34038:	ldr	r4, [sp, #16]
   3403c:	mov	r0, r8
   34040:	b	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   34044:	cmp	r0, #93	; 0x5d
   34048:	bne	34070 <flatcc_json_parser_union_type_vector@@Base+0x5b0>
   3404c:	add	r1, sl, #1
   34050:	sub	r0, r8, r1
   34054:	cmp	r0, #2
   34058:	blt	340dc <flatcc_json_parser_union_type_vector@@Base+0x61c>
   3405c:	ldrb	r0, [r1]
   34060:	cmp	r0, #32
   34064:	bls	340c8 <flatcc_json_parser_union_type_vector@@Base+0x608>
   34068:	mov	r0, r1
   3406c:	b	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   34070:	ldr	r0, [r5, #24]
   34074:	cmp	r0, #0
   34078:	mov	r0, r8
   3407c:	bne	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   34080:	str	sl, [r5, #36]	; 0x24
   34084:	mov	r0, #9
   34088:	ldr	r1, [r5, #4]
   3408c:	sub	r1, sl, r1
   34090:	b	33be4 <flatcc_json_parser_union_type_vector@@Base+0x124>
   34094:	mov	sl, r4
   34098:	ldr	r0, [r5, #24]
   3409c:	cmp	r0, #0
   340a0:	bne	33b74 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   340a4:	b	33b58 <flatcc_json_parser_union_type_vector@@Base+0x98>
   340a8:	ldr	r0, [r5, #24]
   340ac:	cmp	r0, #0
   340b0:	bne	33b74 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   340b4:	str	r4, [r5, #36]	; 0x24
   340b8:	mov	r0, #15
   340bc:	ldr	r1, [r5, #4]
   340c0:	sub	r1, r4, r1
   340c4:	b	33b68 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   340c8:	bne	340dc <flatcc_json_parser_union_type_vector@@Base+0x61c>
   340cc:	ldrb	r0, [sl, #2]!
   340d0:	cmp	r0, #32
   340d4:	mov	r0, sl
   340d8:	bhi	340e8 <flatcc_json_parser_union_type_vector@@Base+0x628>
   340dc:	mov	r0, r5
   340e0:	mov	r2, r8
   340e4:	bl	2ff8c <flatcc_json_parser_space_ext@@Base>
   340e8:	mov	sl, r0
   340ec:	ldr	r0, [r5]
   340f0:	bl	2db38 <flatcc_builder_vector_count@@Base>
   340f4:	str	r0, [r4, #16]
   340f8:	mov	r7, r0
   340fc:	ldr	r0, [r5]
   34100:	mov	r1, r7
   34104:	bl	2b024 <flatcc_builder_enter_user_frame@@Base>
   34108:	mov	r9, r0
   3410c:	ldr	r0, [r5]
   34110:	mov	r1, r9
   34114:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   34118:	mov	r4, r0
   3411c:	ldr	r0, [r5]
   34120:	bl	2db44 <flatcc_builder_vector_edit@@Base>
   34124:	mov	r1, r0
   34128:	mov	r0, r4
   3412c:	mov	r2, r7
   34130:	bl	12ab0 <memcpy@plt>
   34134:	ldr	r0, [r5]
   34138:	bl	2da48 <flatcc_builder_end_vector@@Base>
   3413c:	cmp	r0, #0
   34140:	beq	33b4c <flatcc_json_parser_union_type_vector@@Base+0x8c>
   34144:	ldr	r1, [fp, #8]
   34148:	mov	r4, r0
   3414c:	ldr	r0, [r5]
   34150:	sub	r1, r1, #1
   34154:	bl	2df50 <flatcc_builder_table_add_offset@@Base>
   34158:	cmp	r0, #0
   3415c:	beq	33b4c <flatcc_json_parser_union_type_vector@@Base+0x8c>
   34160:	str	r4, [r0]
   34164:	ldr	r1, [fp, #12]
   34168:	ldr	r0, [r5]
   3416c:	bl	2b1b8 <flatcc_builder_get_user_frame_ptr@@Base>
   34170:	add	r2, r0, #8
   34174:	mov	r3, r2
   34178:	ldr	r1, [r3, r6, lsl #3]!
   3417c:	str	r9, [r3, #20]
   34180:	ldr	r3, [r0, #4]
   34184:	cmp	r1, #0
   34188:	beq	341f8 <flatcc_json_parser_union_type_vector@@Base+0x738>
   3418c:	cmp	r3, #0
   34190:	beq	34210 <flatcc_json_parser_union_type_vector@@Base+0x750>
   34194:	sub	r3, r3, #1
   34198:	ldr	ip, [fp, #20]
   3419c:	str	r3, [r0, #4]
   341a0:	add	r0, r2, r6, lsl #3
   341a4:	mov	r3, r9
   341a8:	ldr	r6, [r5, #4]
   341ac:	ldr	r4, [r5, #16]
   341b0:	ldr	r2, [r0, #8]
   341b4:	str	r2, [r5, #16]
   341b8:	mov	r2, r8
   341bc:	ldr	r0, [r0, #4]
   341c0:	str	r0, [r5, #4]
   341c4:	ldr	r0, [fp, #8]
   341c8:	str	r7, [sp]
   341cc:	stmib	sp, {r0, ip}
   341d0:	mov	r0, r5
   341d4:	bl	33644 <flatcc_json_parser_union_vector@@Base+0x100>
   341d8:	cmp	r0, r8
   341dc:	beq	33b74 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   341e0:	str	r6, [r5, #4]
   341e4:	str	r4, [r5, #16]
   341e8:	mov	r8, sl
   341ec:	mov	r0, r8
   341f0:	sub	sp, fp, #28
   341f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   341f8:	add	r1, r3, #1
   341fc:	str	r1, [r0, #4]
   34200:	mov	r8, sl
   34204:	mov	r0, r8
   34208:	sub	sp, fp, #28
   3420c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34210:	movw	r0, #27925	; 0x6d15
   34214:	movw	r1, #27940	; 0x6d24
   34218:	movw	r3, #28218	; 0x6e3a
   3421c:	movw	r2, #1122	; 0x462
   34220:	movt	r0, #3
   34224:	movt	r1, #3
   34228:	movt	r3, #3
   3422c:	bl	12bc4 <__assert_fail@plt>

00034230 <flatcc_json_parser_table_as_root@@Base>:
   34230:	push	{r4, r5, r6, r7, fp, lr}
   34234:	add	fp, sp, #16
   34238:	sub	sp, sp, #48	; 0x30
   3423c:	cmp	r1, #0
   34240:	vmov.i32	q8, #0	; 0x00000000
   34244:	add	r5, sp, #4
   34248:	mov	r6, r0
   3424c:	add	r7, r2, r3
   34250:	mov	r4, r2
   34254:	movne	r5, r1
   34258:	mov	r1, #1
   3425c:	add	r0, r5, #12
   34260:	vst1.32	{d16-d17}, [r0]
   34264:	add	r0, r5, #28
   34268:	vst1.32	{d16-d17}, [r0]
   3426c:	ldr	r0, [fp, #8]
   34270:	str	r2, [r5, #4]
   34274:	str	r6, [r5]
   34278:	str	r0, [r5, #8]
   3427c:	str	r1, [r5, #16]
   34280:	mov	r1, #2
   34284:	str	r2, [r5, #28]
   34288:	str	r7, [r5, #32]
   3428c:	str	r2, [r5, #36]	; 0x24
   34290:	mov	r2, #0
   34294:	and	r3, r1, r0, lsr #1
   34298:	ldr	r1, [fp, #12]
   3429c:	mov	r0, r6
   342a0:	bl	2b790 <flatcc_builder_start_buffer@@Base>
   342a4:	mov	r1, r0
   342a8:	mvn	r0, #0
   342ac:	cmp	r1, #0
   342b0:	bne	342d8 <flatcc_json_parser_table_as_root@@Base+0xa8>
   342b4:	ldr	ip, [fp, #16]
   342b8:	mov	r3, sp
   342bc:	mov	r0, r5
   342c0:	mov	r1, r4
   342c4:	mov	r2, r7
   342c8:	blx	ip
   342cc:	ldr	r0, [r5, #24]
   342d0:	cmp	r0, #0
   342d4:	beq	342e0 <flatcc_json_parser_table_as_root@@Base+0xb0>
   342d8:	sub	sp, fp, #16
   342dc:	pop	{r4, r5, r6, r7, fp, pc}
   342e0:	ldr	r1, [sp]
   342e4:	mov	r0, r6
   342e8:	bl	2b980 <flatcc_builder_end_buffer@@Base>
   342ec:	cmp	r0, #0
   342f0:	mvn	r0, #0
   342f4:	movne	r0, #0
   342f8:	strne	r4, [r5, #40]	; 0x28
   342fc:	sub	sp, fp, #16
   34300:	pop	{r4, r5, r6, r7, fp, pc}

00034304 <flatcc_json_parser_struct_as_root@@Base>:
   34304:	push	{r4, r5, r6, r7, fp, lr}
   34308:	add	fp, sp, #16
   3430c:	sub	sp, sp, #48	; 0x30
   34310:	cmp	r1, #0
   34314:	vmov.i32	q8, #0	; 0x00000000
   34318:	add	r5, sp, #4
   3431c:	mov	r6, r0
   34320:	add	r7, r2, r3
   34324:	mov	r4, r2
   34328:	movne	r5, r1
   3432c:	mov	r1, #1
   34330:	add	r0, r5, #12
   34334:	vst1.32	{d16-d17}, [r0]
   34338:	add	r0, r5, #28
   3433c:	vst1.32	{d16-d17}, [r0]
   34340:	ldr	r0, [fp, #8]
   34344:	str	r2, [r5, #4]
   34348:	str	r6, [r5]
   3434c:	str	r0, [r5, #8]
   34350:	str	r1, [r5, #16]
   34354:	mov	r1, #2
   34358:	str	r2, [r5, #28]
   3435c:	str	r7, [r5, #32]
   34360:	str	r2, [r5, #36]	; 0x24
   34364:	mov	r2, #0
   34368:	and	r3, r1, r0, lsr #1
   3436c:	ldr	r1, [fp, #12]
   34370:	mov	r0, r6
   34374:	bl	2b790 <flatcc_builder_start_buffer@@Base>
   34378:	mov	r1, r0
   3437c:	mvn	r0, #0
   34380:	cmp	r1, #0
   34384:	bne	343ac <flatcc_json_parser_struct_as_root@@Base+0xa8>
   34388:	ldr	ip, [fp, #16]
   3438c:	mov	r3, sp
   34390:	mov	r0, r5
   34394:	mov	r1, r4
   34398:	mov	r2, r7
   3439c:	blx	ip
   343a0:	ldr	r0, [r5, #24]
   343a4:	cmp	r0, #0
   343a8:	beq	343b4 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   343ac:	sub	sp, fp, #16
   343b0:	pop	{r4, r5, r6, r7, fp, pc}
   343b4:	ldr	r1, [sp]
   343b8:	mov	r0, r6
   343bc:	bl	2b980 <flatcc_builder_end_buffer@@Base>
   343c0:	cmp	r0, #0
   343c4:	mvn	r0, #0
   343c8:	movne	r0, #0
   343cc:	strne	r4, [r5, #40]	; 0x28
   343d0:	sub	sp, fp, #16
   343d4:	pop	{r4, r5, r6, r7, fp, pc}
   343d8:	eor	r1, r1, #-2147483648	; 0x80000000
   343dc:	b	343e4 <flatcc_json_parser_struct_as_root@@Base+0xe0>
   343e0:	eor	r3, r3, #-2147483648	; 0x80000000
   343e4:	push	{r4, r5, lr}
   343e8:	lsl	r4, r1, #1
   343ec:	lsl	r5, r3, #1
   343f0:	teq	r4, r5
   343f4:	teqeq	r0, r2
   343f8:	orrsne	ip, r4, r0
   343fc:	orrsne	ip, r5, r2
   34400:	mvnsne	ip, r4, asr #21
   34404:	mvnsne	ip, r5, asr #21
   34408:	beq	345f4 <flatcc_json_parser_struct_as_root@@Base+0x2f0>
   3440c:	lsr	r4, r4, #21
   34410:	rsbs	r5, r4, r5, lsr #21
   34414:	rsblt	r5, r5, #0
   34418:	ble	34438 <flatcc_json_parser_struct_as_root@@Base+0x134>
   3441c:	add	r4, r4, r5
   34420:	eor	r2, r0, r2
   34424:	eor	r3, r1, r3
   34428:	eor	r0, r2, r0
   3442c:	eor	r1, r3, r1
   34430:	eor	r2, r0, r2
   34434:	eor	r3, r1, r3
   34438:	cmp	r5, #54	; 0x36
   3443c:	pophi	{r4, r5, pc}
   34440:	tst	r1, #-2147483648	; 0x80000000
   34444:	lsl	r1, r1, #12
   34448:	mov	ip, #1048576	; 0x100000
   3444c:	orr	r1, ip, r1, lsr #12
   34450:	beq	3445c <flatcc_json_parser_struct_as_root@@Base+0x158>
   34454:	rsbs	r0, r0, #0
   34458:	rsc	r1, r1, #0
   3445c:	tst	r3, #-2147483648	; 0x80000000
   34460:	lsl	r3, r3, #12
   34464:	orr	r3, ip, r3, lsr #12
   34468:	beq	34474 <flatcc_json_parser_struct_as_root@@Base+0x170>
   3446c:	rsbs	r2, r2, #0
   34470:	rsc	r3, r3, #0
   34474:	teq	r4, r5
   34478:	beq	345dc <flatcc_json_parser_struct_as_root@@Base+0x2d8>
   3447c:	sub	r4, r4, #1
   34480:	rsbs	lr, r5, #32
   34484:	blt	344a0 <flatcc_json_parser_struct_as_root@@Base+0x19c>
   34488:	lsl	ip, r2, lr
   3448c:	adds	r0, r0, r2, lsr r5
   34490:	adc	r1, r1, #0
   34494:	adds	r0, r0, r3, lsl lr
   34498:	adcs	r1, r1, r3, asr r5
   3449c:	b	344bc <flatcc_json_parser_struct_as_root@@Base+0x1b8>
   344a0:	sub	r5, r5, #32
   344a4:	add	lr, lr, #32
   344a8:	cmp	r2, #1
   344ac:	lsl	ip, r3, lr
   344b0:	orrcs	ip, ip, #2
   344b4:	adds	r0, r0, r3, asr r5
   344b8:	adcs	r1, r1, r3, asr #31
   344bc:	and	r5, r1, #-2147483648	; 0x80000000
   344c0:	bpl	344d0 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   344c4:	rsbs	ip, ip, #0
   344c8:	rscs	r0, r0, #0
   344cc:	rsc	r1, r1, #0
   344d0:	cmp	r1, #1048576	; 0x100000
   344d4:	bcc	34514 <flatcc_json_parser_struct_as_root@@Base+0x210>
   344d8:	cmp	r1, #2097152	; 0x200000
   344dc:	bcc	344fc <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   344e0:	lsrs	r1, r1, #1
   344e4:	rrxs	r0, r0
   344e8:	rrx	ip, ip
   344ec:	add	r4, r4, #1
   344f0:	lsl	r2, r4, #21
   344f4:	cmn	r2, #4194304	; 0x400000
   344f8:	bcs	34654 <flatcc_json_parser_struct_as_root@@Base+0x350>
   344fc:	cmp	ip, #-2147483648	; 0x80000000
   34500:	lsrseq	ip, r0, #1
   34504:	adcs	r0, r0, #0
   34508:	adc	r1, r1, r4, lsl #20
   3450c:	orr	r1, r1, r5
   34510:	pop	{r4, r5, pc}
   34514:	lsls	ip, ip, #1
   34518:	adcs	r0, r0, r0
   3451c:	adc	r1, r1, r1
   34520:	tst	r1, #1048576	; 0x100000
   34524:	sub	r4, r4, #1
   34528:	bne	344fc <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   3452c:	teq	r1, #0
   34530:	moveq	r1, r0
   34534:	moveq	r0, #0
   34538:	clz	r3, r1
   3453c:	addeq	r3, r3, #32
   34540:	sub	r3, r3, #11
   34544:	subs	r2, r3, #32
   34548:	bge	3456c <flatcc_json_parser_struct_as_root@@Base+0x268>
   3454c:	adds	r2, r2, #12
   34550:	ble	34568 <flatcc_json_parser_struct_as_root@@Base+0x264>
   34554:	add	ip, r2, #20
   34558:	rsb	r2, r2, #12
   3455c:	lsl	r0, r1, ip
   34560:	lsr	r1, r1, r2
   34564:	b	3457c <flatcc_json_parser_struct_as_root@@Base+0x278>
   34568:	add	r2, r2, #20
   3456c:	rsble	ip, r2, #32
   34570:	lsl	r1, r1, r2
   34574:	orrle	r1, r1, r0, lsr ip
   34578:	lslle	r0, r0, r2
   3457c:	subs	r4, r4, r3
   34580:	addge	r1, r1, r4, lsl #20
   34584:	orrge	r1, r1, r5
   34588:	popge	{r4, r5, pc}
   3458c:	mvn	r4, r4
   34590:	subs	r4, r4, #31
   34594:	bge	345d0 <flatcc_json_parser_struct_as_root@@Base+0x2cc>
   34598:	adds	r4, r4, #12
   3459c:	bgt	345b8 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   345a0:	add	r4, r4, #20
   345a4:	rsb	r2, r4, #32
   345a8:	lsr	r0, r0, r4
   345ac:	orr	r0, r0, r1, lsl r2
   345b0:	orr	r1, r5, r1, lsr r4
   345b4:	pop	{r4, r5, pc}
   345b8:	rsb	r4, r4, #12
   345bc:	rsb	r2, r4, #32
   345c0:	lsr	r0, r0, r2
   345c4:	orr	r0, r0, r1, lsl r4
   345c8:	mov	r1, r5
   345cc:	pop	{r4, r5, pc}
   345d0:	lsr	r0, r1, r4
   345d4:	mov	r1, r5
   345d8:	pop	{r4, r5, pc}
   345dc:	teq	r4, #0
   345e0:	eor	r3, r3, #1048576	; 0x100000
   345e4:	eoreq	r1, r1, #1048576	; 0x100000
   345e8:	addeq	r4, r4, #1
   345ec:	subne	r5, r5, #1
   345f0:	b	3447c <flatcc_json_parser_struct_as_root@@Base+0x178>
   345f4:	mvns	ip, r4, asr #21
   345f8:	mvnsne	ip, r5, asr #21
   345fc:	beq	34664 <flatcc_json_parser_struct_as_root@@Base+0x360>
   34600:	teq	r4, r5
   34604:	teqeq	r0, r2
   34608:	beq	3461c <flatcc_json_parser_struct_as_root@@Base+0x318>
   3460c:	orrs	ip, r4, r0
   34610:	moveq	r1, r3
   34614:	moveq	r0, r2
   34618:	pop	{r4, r5, pc}
   3461c:	teq	r1, r3
   34620:	movne	r1, #0
   34624:	movne	r0, #0
   34628:	popne	{r4, r5, pc}
   3462c:	lsrs	ip, r4, #21
   34630:	bne	34644 <flatcc_json_parser_struct_as_root@@Base+0x340>
   34634:	lsls	r0, r0, #1
   34638:	adcs	r1, r1, r1
   3463c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   34640:	pop	{r4, r5, pc}
   34644:	adds	r4, r4, #4194304	; 0x400000
   34648:	addcc	r1, r1, #1048576	; 0x100000
   3464c:	popcc	{r4, r5, pc}
   34650:	and	r5, r1, #-2147483648	; 0x80000000
   34654:	orr	r1, r5, #2130706432	; 0x7f000000
   34658:	orr	r1, r1, #15728640	; 0xf00000
   3465c:	mov	r0, #0
   34660:	pop	{r4, r5, pc}
   34664:	mvns	ip, r4, asr #21
   34668:	movne	r1, r3
   3466c:	movne	r0, r2
   34670:	mvnseq	ip, r5, asr #21
   34674:	movne	r3, r1
   34678:	movne	r2, r0
   3467c:	orrs	r4, r0, r1, lsl #12
   34680:	orrseq	r5, r2, r3, lsl #12
   34684:	teqeq	r1, r3
   34688:	orrne	r1, r1, #524288	; 0x80000
   3468c:	pop	{r4, r5, pc}
   34690:	teq	r0, #0
   34694:	moveq	r1, #0
   34698:	bxeq	lr
   3469c:	push	{r4, r5, lr}
   346a0:	mov	r4, #1024	; 0x400
   346a4:	add	r4, r4, #50	; 0x32
   346a8:	mov	r5, #0
   346ac:	mov	r1, #0
   346b0:	b	3452c <flatcc_json_parser_struct_as_root@@Base+0x228>
   346b4:	teq	r0, #0
   346b8:	moveq	r1, #0
   346bc:	bxeq	lr
   346c0:	push	{r4, r5, lr}
   346c4:	mov	r4, #1024	; 0x400
   346c8:	add	r4, r4, #50	; 0x32
   346cc:	ands	r5, r0, #-2147483648	; 0x80000000
   346d0:	rsbmi	r0, r0, #0
   346d4:	mov	r1, #0
   346d8:	b	3452c <flatcc_json_parser_struct_as_root@@Base+0x228>
   346dc:	lsls	r2, r0, #1
   346e0:	asr	r1, r2, #3
   346e4:	rrx	r1, r1
   346e8:	lsl	r0, r2, #28
   346ec:	andsne	r3, r2, #-16777216	; 0xff000000
   346f0:	teqne	r3, #-16777216	; 0xff000000
   346f4:	eorne	r1, r1, #939524096	; 0x38000000
   346f8:	bxne	lr
   346fc:	bics	r2, r2, #-16777216	; 0xff000000
   34700:	bxeq	lr
   34704:	teq	r3, #-16777216	; 0xff000000
   34708:	orreq	r1, r1, #524288	; 0x80000
   3470c:	bxeq	lr
   34710:	push	{r4, r5, lr}
   34714:	mov	r4, #896	; 0x380
   34718:	and	r5, r1, #-2147483648	; 0x80000000
   3471c:	bic	r1, r1, #-2147483648	; 0x80000000
   34720:	b	3452c <flatcc_json_parser_struct_as_root@@Base+0x228>
   34724:	orrs	r2, r0, r1
   34728:	bxeq	lr
   3472c:	push	{r4, r5, lr}
   34730:	mov	r5, #0
   34734:	b	34754 <flatcc_json_parser_struct_as_root@@Base+0x450>
   34738:	orrs	r2, r0, r1
   3473c:	bxeq	lr
   34740:	push	{r4, r5, lr}
   34744:	ands	r5, r1, #-2147483648	; 0x80000000
   34748:	bpl	34754 <flatcc_json_parser_struct_as_root@@Base+0x450>
   3474c:	rsbs	r0, r0, #0
   34750:	rsc	r1, r1, #0
   34754:	mov	r4, #1024	; 0x400
   34758:	add	r4, r4, #50	; 0x32
   3475c:	lsrs	ip, r1, #22
   34760:	beq	344d0 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   34764:	mov	r2, #3
   34768:	lsrs	ip, ip, #3
   3476c:	addne	r2, r2, #3
   34770:	lsrs	ip, ip, #3
   34774:	addne	r2, r2, #3
   34778:	add	r2, r2, ip, lsr #3
   3477c:	rsb	r3, r2, #32
   34780:	lsl	ip, r0, r3
   34784:	lsr	r0, r0, r2
   34788:	orr	r0, r0, r1, lsl r3
   3478c:	lsr	r1, r1, r2
   34790:	add	r4, r4, r2
   34794:	b	344d0 <flatcc_json_parser_struct_as_root@@Base+0x1cc>
   34798:	eor	r0, r0, #-2147483648	; 0x80000000
   3479c:	b	347a4 <flatcc_json_parser_struct_as_root@@Base+0x4a0>
   347a0:	eor	r1, r1, #-2147483648	; 0x80000000
   347a4:	lsls	r2, r0, #1
   347a8:	lslsne	r3, r1, #1
   347ac:	teqne	r2, r3
   347b0:	mvnsne	ip, r2, asr #24
   347b4:	mvnsne	ip, r3, asr #24
   347b8:	beq	348b0 <flatcc_json_parser_struct_as_root@@Base+0x5ac>
   347bc:	lsr	r2, r2, #24
   347c0:	rsbs	r3, r2, r3, lsr #24
   347c4:	addgt	r2, r2, r3
   347c8:	eorgt	r1, r0, r1
   347cc:	eorgt	r0, r1, r0
   347d0:	eorgt	r1, r0, r1
   347d4:	rsblt	r3, r3, #0
   347d8:	cmp	r3, #25
   347dc:	bxhi	lr
   347e0:	tst	r0, #-2147483648	; 0x80000000
   347e4:	orr	r0, r0, #8388608	; 0x800000
   347e8:	bic	r0, r0, #-16777216	; 0xff000000
   347ec:	rsbne	r0, r0, #0
   347f0:	tst	r1, #-2147483648	; 0x80000000
   347f4:	orr	r1, r1, #8388608	; 0x800000
   347f8:	bic	r1, r1, #-16777216	; 0xff000000
   347fc:	rsbne	r1, r1, #0
   34800:	teq	r2, r3
   34804:	beq	34898 <flatcc_json_parser_struct_as_root@@Base+0x594>
   34808:	sub	r2, r2, #1
   3480c:	adds	r0, r0, r1, asr r3
   34810:	rsb	r3, r3, #32
   34814:	lsl	r1, r1, r3
   34818:	and	r3, r0, #-2147483648	; 0x80000000
   3481c:	bpl	34828 <flatcc_json_parser_struct_as_root@@Base+0x524>
   34820:	rsbs	r1, r1, #0
   34824:	rsc	r0, r0, #0
   34828:	cmp	r0, #8388608	; 0x800000
   3482c:	bcc	34860 <flatcc_json_parser_struct_as_root@@Base+0x55c>
   34830:	cmp	r0, #16777216	; 0x1000000
   34834:	bcc	3484c <flatcc_json_parser_struct_as_root@@Base+0x548>
   34838:	lsrs	r0, r0, #1
   3483c:	rrx	r1, r1
   34840:	add	r2, r2, #1
   34844:	cmp	r2, #254	; 0xfe
   34848:	bcs	34904 <flatcc_json_parser_struct_as_root@@Base+0x600>
   3484c:	cmp	r1, #-2147483648	; 0x80000000
   34850:	adc	r0, r0, r2, lsl #23
   34854:	biceq	r0, r0, #1
   34858:	orr	r0, r0, r3
   3485c:	bx	lr
   34860:	lsls	r1, r1, #1
   34864:	adc	r0, r0, r0
   34868:	tst	r0, #8388608	; 0x800000
   3486c:	sub	r2, r2, #1
   34870:	bne	3484c <flatcc_json_parser_struct_as_root@@Base+0x548>
   34874:	clz	ip, r0
   34878:	sub	ip, ip, #8
   3487c:	subs	r2, r2, ip
   34880:	lsl	r0, r0, ip
   34884:	addge	r0, r0, r2, lsl #23
   34888:	rsblt	r2, r2, #0
   3488c:	orrge	r0, r0, r3
   34890:	orrlt	r0, r3, r0, lsr r2
   34894:	bx	lr
   34898:	teq	r2, #0
   3489c:	eor	r1, r1, #8388608	; 0x800000
   348a0:	eoreq	r0, r0, #8388608	; 0x800000
   348a4:	addeq	r2, r2, #1
   348a8:	subne	r3, r3, #1
   348ac:	b	34808 <flatcc_json_parser_struct_as_root@@Base+0x504>
   348b0:	lsl	r3, r1, #1
   348b4:	mvns	ip, r2, asr #24
   348b8:	mvnsne	ip, r3, asr #24
   348bc:	beq	34910 <flatcc_json_parser_struct_as_root@@Base+0x60c>
   348c0:	teq	r2, r3
   348c4:	beq	348d4 <flatcc_json_parser_struct_as_root@@Base+0x5d0>
   348c8:	teq	r2, #0
   348cc:	moveq	r0, r1
   348d0:	bx	lr
   348d4:	teq	r0, r1
   348d8:	movne	r0, #0
   348dc:	bxne	lr
   348e0:	tst	r2, #-16777216	; 0xff000000
   348e4:	bne	348f4 <flatcc_json_parser_struct_as_root@@Base+0x5f0>
   348e8:	lsls	r0, r0, #1
   348ec:	orrcs	r0, r0, #-2147483648	; 0x80000000
   348f0:	bx	lr
   348f4:	adds	r2, r2, #33554432	; 0x2000000
   348f8:	addcc	r0, r0, #8388608	; 0x800000
   348fc:	bxcc	lr
   34900:	and	r3, r0, #-2147483648	; 0x80000000
   34904:	orr	r0, r3, #2130706432	; 0x7f000000
   34908:	orr	r0, r0, #8388608	; 0x800000
   3490c:	bx	lr
   34910:	mvns	r2, r2, asr #24
   34914:	movne	r0, r1
   34918:	mvnseq	r3, r3, asr #24
   3491c:	movne	r1, r0
   34920:	lsls	r2, r0, #9
   34924:	lslseq	r3, r1, #9
   34928:	teqeq	r0, r1
   3492c:	orrne	r0, r0, #4194304	; 0x400000
   34930:	bx	lr
   34934:	mov	r3, #0
   34938:	b	34944 <flatcc_json_parser_struct_as_root@@Base+0x640>
   3493c:	ands	r3, r0, #-2147483648	; 0x80000000
   34940:	rsbmi	r0, r0, #0
   34944:	movs	ip, r0
   34948:	bxeq	lr
   3494c:	orr	r3, r3, #1258291200	; 0x4b000000
   34950:	mov	r1, r0
   34954:	mov	r0, #0
   34958:	b	3499c <flatcc_json_parser_struct_as_root@@Base+0x698>
   3495c:	orrs	r2, r0, r1
   34960:	bxeq	lr
   34964:	mov	r3, #0
   34968:	b	34984 <flatcc_json_parser_struct_as_root@@Base+0x680>
   3496c:	orrs	r2, r0, r1
   34970:	bxeq	lr
   34974:	ands	r3, r1, #-2147483648	; 0x80000000
   34978:	bpl	34984 <flatcc_json_parser_struct_as_root@@Base+0x680>
   3497c:	rsbs	r0, r0, #0
   34980:	rsc	r1, r1, #0
   34984:	movs	ip, r1
   34988:	moveq	ip, r0
   3498c:	moveq	r1, r0
   34990:	moveq	r0, #0
   34994:	orr	r3, r3, #1526726656	; 0x5b000000
   34998:	subeq	r3, r3, #268435456	; 0x10000000
   3499c:	sub	r3, r3, #8388608	; 0x800000
   349a0:	clz	r2, ip
   349a4:	subs	r2, r2, #8
   349a8:	sub	r3, r3, r2, lsl #23
   349ac:	blt	349cc <flatcc_json_parser_struct_as_root@@Base+0x6c8>
   349b0:	add	r3, r3, r1, lsl r2
   349b4:	lsl	ip, r0, r2
   349b8:	rsb	r2, r2, #32
   349bc:	cmp	ip, #-2147483648	; 0x80000000
   349c0:	adc	r0, r3, r0, lsr r2
   349c4:	biceq	r0, r0, #1
   349c8:	bx	lr
   349cc:	add	r2, r2, #32
   349d0:	lsl	ip, r1, r2
   349d4:	rsb	r2, r2, #32
   349d8:	orrs	r0, r0, ip, lsl #1
   349dc:	adc	r0, r3, r1, lsr r2
   349e0:	biceq	r0, r0, ip, lsr #31
   349e4:	bx	lr

000349e8 <__libc_csu_init@@Base>:
   349e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   349ec:	mov	r7, r0
   349f0:	ldr	r6, [pc, #72]	; 34a40 <__libc_csu_init@@Base+0x58>
   349f4:	ldr	r5, [pc, #72]	; 34a44 <__libc_csu_init@@Base+0x5c>
   349f8:	add	r6, pc, r6
   349fc:	add	r5, pc, r5
   34a00:	sub	r6, r6, r5
   34a04:	mov	r8, r1
   34a08:	mov	r9, r2
   34a0c:	bl	12a78 <fopen@plt-0x20>
   34a10:	asrs	r6, r6, #2
   34a14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   34a18:	mov	r4, #0
   34a1c:	add	r4, r4, #1
   34a20:	ldr	r3, [r5], #4
   34a24:	mov	r2, r9
   34a28:	mov	r1, r8
   34a2c:	mov	r0, r7
   34a30:	blx	r3
   34a34:	cmp	r6, r4
   34a38:	bne	34a1c <__libc_csu_init@@Base+0x34>
   34a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   34a40:	andeq	r3, r1, ip, lsl #10
   34a44:	andeq	r3, r1, r4, lsl #10

00034a48 <__libc_csu_fini@@Base>:
   34a48:	bx	lr

Disassembly of section .fini:

00034a4c <.fini>:
   34a4c:	push	{r3, lr}
   34a50:	pop	{r3, pc}
