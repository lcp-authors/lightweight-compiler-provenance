
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011a70 <.init>:
   11a70:	push	{r3, lr}
   11a74:	bl	11c8c <_start@@Base+0x3c>
   11a78:	pop	{r3, pc}

Disassembly of section .plt:

00011a7c <strcmp@plt-0x14>:
   11a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11a80:	ldr	lr, [pc, #4]	; 11a8c <strcmp@plt-0x4>
   11a84:	add	lr, pc, lr
   11a88:	ldr	pc, [lr, #8]!
   11a8c:	andeq	r3, r1, r4, ror r5

00011a90 <strcmp@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #77824	; 0x13000
   11a98:	ldr	pc, [ip, #1396]!	; 0x574

00011a9c <free@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #77824	; 0x13000
   11aa4:	ldr	pc, [ip, #1388]!	; 0x56c

00011aa8 <time@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #77824	; 0x13000
   11ab0:	ldr	pc, [ip, #1380]!	; 0x564

00011ab4 <realloc@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1372]!	; 0x55c

00011ac0 <strcpy@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1364]!	; 0x554

00011acc <malloc@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1356]!	; 0x54c

00011ad8 <__libc_start_main@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #1348]!	; 0x544

00011ae4 <__gmon_start__@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #1340]!	; 0x53c

00011af0 <strlen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #1332]!	; 0x534

00011afc <srand@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #1324]!	; 0x52c

00011b08 <snprintf@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #77824	; 0x13000
   11b10:	ldr	pc, [ip, #1316]!	; 0x524

00011b14 <__isoc99_sscanf@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #77824	; 0x13000
   11b1c:	ldr	pc, [ip, #1308]!	; 0x51c

00011b20 <rand@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #77824	; 0x13000
   11b28:	ldr	pc, [ip, #1300]!	; 0x514

00011b2c <abort@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #77824	; 0x13000
   11b34:	ldr	pc, [ip, #1292]!	; 0x50c

Disassembly of section .text:

00011b38 <main@@Base>:
   11b38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b3c:	mov	r4, #0
   11b40:	sub	sp, sp, #24
   11b44:	mov	r6, r4
   11b48:	str	r4, [sp, #16]
   11b4c:	bl	11d94 <table_new@@Base>
   11b50:	mov	r5, r0
   11b54:	add	r0, sp, #20
   11b58:	bl	11aa8 <time@plt>
   11b5c:	bl	11afc <srand@plt>
   11b60:	mvn	r3, #0
   11b64:	add	r2, sp, #16
   11b68:	ldr	r1, [pc, #220]	; 11c4c <main@@Base+0x114>
   11b6c:	mov	r0, r5
   11b70:	bl	12380 <table_register_callback@@Base>
   11b74:	mov	r2, r4
   11b78:	add	r1, sp, #12
   11b7c:	strh	r6, [sp, #12]
   11b80:	mov	r0, r5
   11b84:	strb	r4, [sp, #12]
   11b88:	add	r4, r4, #1
   11b8c:	bl	126c4 <table_add_column@@Base>
   11b90:	cmp	r4, #24
   11b94:	bne	11b74 <main@@Base+0x3c>
   11b98:	mov	r0, r5
   11b9c:	mov	r4, #0
   11ba0:	bl	12658 <table_get_column_length@@Base>
   11ba4:	mov	r8, r0
   11ba8:	mov	r9, r4
   11bac:	mov	r0, #64	; 0x40
   11bb0:	bl	11acc <malloc@plt>
   11bb4:	mov	r6, r0
   11bb8:	sub	r7, r0, #1
   11bbc:	add	sl, r0, #62	; 0x3e
   11bc0:	bl	11b20 <rand@plt>
   11bc4:	rsbs	r3, r0, #0
   11bc8:	and	r0, r0, #127	; 0x7f
   11bcc:	and	r3, r3, #127	; 0x7f
   11bd0:	rsbpl	r0, r3, #0
   11bd4:	strb	r0, [r7, #1]!
   11bd8:	cmp	r7, sl
   11bdc:	bne	11bc0 <main@@Base+0x88>
   11be0:	mov	r0, r5
   11be4:	strb	r9, [r6, #63]	; 0x3f
   11be8:	mov	r7, #0
   11bec:	bl	1317c <table_add_row@@Base>
   11bf0:	cmp	r7, r8
   11bf4:	blt	11c20 <main@@Base+0xe8>
   11bf8:	mov	r0, r6
   11bfc:	add	r4, r4, #1
   11c00:	bl	11a9c <free@plt>
   11c04:	cmp	r4, #500	; 0x1f4
   11c08:	bne	11bac <main@@Base+0x74>
   11c0c:	mov	r0, r5
   11c10:	bl	11e74 <table_delete@@Base>
   11c14:	mov	r0, #0
   11c18:	add	sp, sp, #24
   11c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c20:	mov	r1, r7
   11c24:	mov	r0, r5
   11c28:	bl	126b0 <table_get_column_data_type@@Base>
   11c2c:	mov	r2, r7
   11c30:	mov	r3, r6
   11c34:	str	r0, [sp]
   11c38:	mov	r1, r4
   11c3c:	mov	r0, r5
   11c40:	add	r7, r7, #1
   11c44:	bl	1332c <table_set@@Base>
   11c48:	b	11bf0 <main@@Base+0xb8>
   11c4c:	andeq	r1, r1, r0, asr #26

00011c50 <_start@@Base>:
   11c50:	mov	fp, #0
   11c54:	mov	lr, #0
   11c58:	pop	{r1}		; (ldr r1, [sp], #4)
   11c5c:	mov	r2, sp
   11c60:	push	{r2}		; (str r2, [sp, #-4]!)
   11c64:	push	{r0}		; (str r0, [sp, #-4]!)
   11c68:	ldr	ip, [pc, #16]	; 11c80 <_start@@Base+0x30>
   11c6c:	push	{ip}		; (str ip, [sp, #-4]!)
   11c70:	ldr	r0, [pc, #12]	; 11c84 <_start@@Base+0x34>
   11c74:	ldr	r3, [pc, #12]	; 11c88 <_start@@Base+0x38>
   11c78:	bl	11ad8 <__libc_start_main@plt>
   11c7c:	bl	11b2c <abort@plt>
   11c80:	andeq	r4, r1, r8, ror #4
   11c84:	andeq	r1, r1, r8, lsr fp
   11c88:	andeq	r4, r1, r8, lsl #4
   11c8c:	ldr	r3, [pc, #20]	; 11ca8 <_start@@Base+0x58>
   11c90:	ldr	r2, [pc, #20]	; 11cac <_start@@Base+0x5c>
   11c94:	add	r3, pc, r3
   11c98:	ldr	r2, [r3, r2]
   11c9c:	cmp	r2, #0
   11ca0:	bxeq	lr
   11ca4:	b	11ae4 <__gmon_start__@plt>
   11ca8:	andeq	r3, r1, r4, ror #6
   11cac:	andeq	r0, r0, r4, asr #32
   11cb0:	ldr	r0, [pc, #24]	; 11cd0 <_start@@Base+0x80>
   11cb4:	ldr	r3, [pc, #24]	; 11cd4 <_start@@Base+0x84>
   11cb8:	cmp	r3, r0
   11cbc:	bxeq	lr
   11cc0:	ldr	r3, [pc, #16]	; 11cd8 <_start@@Base+0x88>
   11cc4:	cmp	r3, #0
   11cc8:	bxeq	lr
   11ccc:	bx	r3
   11cd0:	andeq	r5, r2, r0, asr r0
   11cd4:	andeq	r5, r2, r0, asr r0
   11cd8:	andeq	r0, r0, r0
   11cdc:	ldr	r0, [pc, #36]	; 11d08 <_start@@Base+0xb8>
   11ce0:	ldr	r1, [pc, #36]	; 11d0c <_start@@Base+0xbc>
   11ce4:	sub	r1, r1, r0
   11ce8:	asr	r1, r1, #2
   11cec:	add	r1, r1, r1, lsr #31
   11cf0:	asrs	r1, r1, #1
   11cf4:	bxeq	lr
   11cf8:	ldr	r3, [pc, #16]	; 11d10 <_start@@Base+0xc0>
   11cfc:	cmp	r3, #0
   11d00:	bxeq	lr
   11d04:	bx	r3
   11d08:	andeq	r5, r2, r0, asr r0
   11d0c:	andeq	r5, r2, r0, asr r0
   11d10:	andeq	r0, r0, r0
   11d14:	push	{r4, lr}
   11d18:	ldr	r4, [pc, #24]	; 11d38 <_start@@Base+0xe8>
   11d1c:	ldrb	r3, [r4]
   11d20:	cmp	r3, #0
   11d24:	popne	{r4, pc}
   11d28:	bl	11cb0 <_start@@Base+0x60>
   11d2c:	mov	r3, #1
   11d30:	strb	r3, [r4]
   11d34:	pop	{r4, pc}
   11d38:	andeq	r5, r2, r0, asr r0
   11d3c:	b	11cdc <_start@@Base+0x8c>
   11d40:	ldr	r1, [sp]
   11d44:	ldr	r2, [r1]
   11d48:	orr	r3, r2, r3
   11d4c:	str	r3, [r1]
   11d50:	bx	lr

00011d54 <table_init@@Base>:
   11d54:	mov	r3, #0
   11d58:	mov	r2, #10
   11d5c:	mov	r1, #20
   11d60:	str	r3, [r0]
   11d64:	str	r3, [r0, #4]
   11d68:	strd	r2, [r0, #8]
   11d6c:	str	r3, [r0, #16]
   11d70:	str	r3, [r0, #20]
   11d74:	str	r1, [r0, #24]
   11d78:	str	r3, [r0, #28]
   11d7c:	str	r3, [r0, #32]
   11d80:	str	r3, [r0, #36]	; 0x24
   11d84:	str	r3, [r0, #40]	; 0x28
   11d88:	str	r3, [r0, #44]	; 0x2c
   11d8c:	strd	r2, [r0, #48]	; 0x30
   11d90:	bx	lr

00011d94 <table_new@@Base>:
   11d94:	push	{r4, lr}
   11d98:	mov	r0, #56	; 0x38
   11d9c:	bl	11acc <malloc@plt>
   11da0:	mov	r4, r0
   11da4:	bl	11d54 <table_init@@Base>
   11da8:	pop	{r4, pc}

00011dac <table_destroy@@Base>:
   11dac:	push	{r4, r5, r6, lr}
   11db0:	subs	r4, r0, #0
   11db4:	popeq	{r4, r5, r6, pc}
   11db8:	mvn	r2, #0
   11dbc:	mov	r3, #64	; 0x40
   11dc0:	mov	r1, r2
   11dc4:	mov	r5, #0
   11dc8:	bl	12580 <table_notify@@Base>
   11dcc:	mov	r0, r4
   11dd0:	bl	13174 <table_get_row_length@@Base>
   11dd4:	mov	r6, r0
   11dd8:	cmp	r6, r5
   11ddc:	bgt	11e4c <table_destroy@@Base+0xa0>
   11de0:	ldr	r0, [r4, #16]
   11de4:	cmp	r0, #0
   11de8:	beq	11df0 <table_destroy@@Base+0x44>
   11dec:	bl	11a9c <free@plt>
   11df0:	mov	r0, r4
   11df4:	mov	r5, #0
   11df8:	bl	12658 <table_get_column_length@@Base>
   11dfc:	mov	r6, r0
   11e00:	cmp	r6, r5
   11e04:	bgt	11e60 <table_destroy@@Base+0xb4>
   11e08:	ldr	r0, [r4]
   11e0c:	cmp	r0, #0
   11e10:	beq	11e18 <table_destroy@@Base+0x6c>
   11e14:	bl	11a9c <free@plt>
   11e18:	ldr	r0, [r4, #36]	; 0x24
   11e1c:	cmp	r0, #0
   11e20:	beq	11e28 <table_destroy@@Base+0x7c>
   11e24:	bl	11a9c <free@plt>
   11e28:	ldr	r0, [r4, #40]	; 0x28
   11e2c:	cmp	r0, #0
   11e30:	beq	11e38 <table_destroy@@Base+0x8c>
   11e34:	bl	11a9c <free@plt>
   11e38:	ldr	r0, [r4, #44]	; 0x2c
   11e3c:	cmp	r0, #0
   11e40:	popeq	{r4, r5, r6, pc}
   11e44:	pop	{r4, r5, r6, lr}
   11e48:	b	11a9c <free@plt>
   11e4c:	mov	r1, r5
   11e50:	mov	r0, r4
   11e54:	bl	13124 <table_row_destroy@@Base>
   11e58:	add	r5, r5, #1
   11e5c:	b	11dd8 <table_destroy@@Base+0x2c>
   11e60:	mov	r1, r5
   11e64:	mov	r0, r4
   11e68:	bl	1263c <table_column_destroy@@Base>
   11e6c:	add	r5, r5, #1
   11e70:	b	11e00 <table_destroy@@Base+0x54>

00011e74 <table_delete@@Base>:
   11e74:	push	{r4, lr}
   11e78:	mov	r4, r0
   11e7c:	bl	11dac <table_destroy@@Base>
   11e80:	mov	r0, r4
   11e84:	pop	{r4, lr}
   11e88:	b	11a9c <free@plt>

00011e8c <table_dupe@@Base>:
   11e8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11e90:	sub	sp, sp, #20
   11e94:	mov	r6, r0
   11e98:	mov	r4, #0
   11e9c:	bl	13174 <table_get_row_length@@Base>
   11ea0:	mov	r9, r0
   11ea4:	mov	r0, r6
   11ea8:	bl	12658 <table_get_column_length@@Base>
   11eac:	mov	r8, r0
   11eb0:	bl	11d94 <table_new@@Base>
   11eb4:	mov	r7, r0
   11eb8:	cmp	r4, r8
   11ebc:	blt	11ed8 <table_dupe@@Base+0x4c>
   11ec0:	mov	r5, #0
   11ec4:	cmp	r5, r9
   11ec8:	mov	r0, r7
   11ecc:	blt	11f0c <table_dupe@@Base+0x80>
   11ed0:	add	sp, sp, #20
   11ed4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ed8:	mov	r1, r4
   11edc:	mov	r0, r6
   11ee0:	bl	1291c <table_get_column_name@@Base>
   11ee4:	mov	r5, r0
   11ee8:	mov	r1, r4
   11eec:	mov	r0, r6
   11ef0:	add	r4, r4, #1
   11ef4:	bl	126b0 <table_get_column_data_type@@Base>
   11ef8:	mov	r2, r0
   11efc:	mov	r1, r5
   11f00:	mov	r0, r7
   11f04:	bl	126c4 <table_add_column@@Base>
   11f08:	b	11eb8 <table_dupe@@Base+0x2c>
   11f0c:	mov	r4, #0
   11f10:	bl	1317c <table_add_row@@Base>
   11f14:	cmp	r4, r8
   11f18:	addge	r5, r5, #1
   11f1c:	bge	11ec4 <table_dupe@@Base+0x38>
   11f20:	mov	r1, r4
   11f24:	mov	r0, r6
   11f28:	bl	126b0 <table_get_column_data_type@@Base>
   11f2c:	cmp	r0, #23
   11f30:	ldrls	pc, [pc, r0, lsl #2]
   11f34:	b	11fbc <table_dupe@@Base+0x130>
   11f38:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11f3c:	andeq	r1, r1, r4, asr #31
   11f40:	andeq	r1, r1, ip, ror #31
   11f44:	andeq	r2, r1, r4, lsl r0
   11f48:	andeq	r2, r1, ip, lsr r0
   11f4c:	andeq	r2, r1, r4, rrx
   11f50:	andeq	r2, r1, ip, lsl #1
   11f54:	strheq	r2, [r1], -r4
   11f58:	ldrdeq	r2, [r1], -ip
   11f5c:	andeq	r2, r1, r4, lsl #2
   11f60:	andeq	r2, r1, ip, lsr #2
   11f64:	andeq	r2, r1, r4, asr r1
   11f68:	andeq	r2, r1, ip, ror r1
   11f6c:	andeq	r2, r1, r4, lsr #3
   11f70:	andeq	r2, r1, ip, asr #3
   11f74:	strdeq	r2, [r1], -r4
   11f78:	andeq	r2, r1, r4, asr #4
   11f7c:	andeq	r2, r1, r8, ror #4
   11f80:	andeq	r2, r1, ip, lsl #5
   11f84:	ldrdeq	r2, [r1], -r8
   11f88:	andeq	r2, r1, r0, lsl #6
   11f8c:	andeq	r2, r1, ip, lsl r2
   11f90:			; <UNDEFINED> instruction: 0x000122b0
   11f94:	andeq	r2, r1, r8, lsr #6
   11f98:	mov	r2, r4
   11f9c:	mov	r1, r5
   11fa0:	mov	r0, r6
   11fa4:	bl	1300c <table_get_int@@Base>
   11fa8:	mov	r3, r0
   11fac:	mov	r2, r4
   11fb0:	mov	r1, r5
   11fb4:	mov	r0, r7
   11fb8:	bl	1362c <table_set_int@@Base>
   11fbc:	add	r4, r4, #1
   11fc0:	b	11f14 <table_dupe@@Base+0x88>
   11fc4:	mov	r2, r4
   11fc8:	mov	r1, r5
   11fcc:	mov	r0, r6
   11fd0:	bl	1301c <table_get_uint@@Base>
   11fd4:	mov	r3, r0
   11fd8:	mov	r2, r4
   11fdc:	mov	r1, r5
   11fe0:	mov	r0, r7
   11fe4:	bl	1364c <table_set_uint@@Base>
   11fe8:	b	11fbc <table_dupe@@Base+0x130>
   11fec:	mov	r2, r4
   11ff0:	mov	r1, r5
   11ff4:	mov	r0, r6
   11ff8:	bl	1302c <table_get_int8@@Base>
   11ffc:	mov	r3, r0
   12000:	mov	r2, r4
   12004:	mov	r1, r5
   12008:	mov	r0, r7
   1200c:	bl	1366c <table_set_int8@@Base>
   12010:	b	11fbc <table_dupe@@Base+0x130>
   12014:	mov	r2, r4
   12018:	mov	r1, r5
   1201c:	mov	r0, r6
   12020:	bl	1303c <table_get_uint8@@Base>
   12024:	mov	r3, r0
   12028:	mov	r2, r4
   1202c:	mov	r1, r5
   12030:	mov	r0, r7
   12034:	bl	1368c <table_set_uint8@@Base>
   12038:	b	11fbc <table_dupe@@Base+0x130>
   1203c:	mov	r2, r4
   12040:	mov	r1, r5
   12044:	mov	r0, r6
   12048:	bl	1304c <table_get_int16@@Base>
   1204c:	mov	r3, r0
   12050:	mov	r2, r4
   12054:	mov	r1, r5
   12058:	mov	r0, r7
   1205c:	bl	136ac <table_set_int16@@Base>
   12060:	b	11fbc <table_dupe@@Base+0x130>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	mov	r0, r6
   12070:	bl	1305c <table_get_uint16@@Base>
   12074:	mov	r3, r0
   12078:	mov	r2, r4
   1207c:	mov	r1, r5
   12080:	mov	r0, r7
   12084:	bl	136cc <table_set_uint16@@Base>
   12088:	b	11fbc <table_dupe@@Base+0x130>
   1208c:	mov	r2, r4
   12090:	mov	r1, r5
   12094:	mov	r0, r6
   12098:	bl	1306c <table_get_int32@@Base>
   1209c:	mov	r3, r0
   120a0:	mov	r2, r4
   120a4:	mov	r1, r5
   120a8:	mov	r0, r7
   120ac:	bl	136ec <table_set_int32@@Base>
   120b0:	b	11fbc <table_dupe@@Base+0x130>
   120b4:	mov	r2, r4
   120b8:	mov	r1, r5
   120bc:	mov	r0, r6
   120c0:	bl	13070 <table_get_uint32@@Base>
   120c4:	mov	r3, r0
   120c8:	mov	r2, r4
   120cc:	mov	r1, r5
   120d0:	mov	r0, r7
   120d4:	bl	1370c <table_set_uint32@@Base>
   120d8:	b	11fbc <table_dupe@@Base+0x130>
   120dc:	mov	r2, r4
   120e0:	mov	r1, r5
   120e4:	mov	r0, r6
   120e8:	bl	13074 <table_get_int64@@Base>
   120ec:	mov	r2, r4
   120f0:	strd	r0, [sp]
   120f4:	mov	r1, r5
   120f8:	mov	r0, r7
   120fc:	bl	1372c <table_set_int64@@Base>
   12100:	b	11fbc <table_dupe@@Base+0x130>
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	bl	13084 <table_get_uint64@@Base>
   12114:	mov	r2, r4
   12118:	strd	r0, [sp]
   1211c:	mov	r1, r5
   12120:	mov	r0, r7
   12124:	bl	13748 <table_set_uint64@@Base>
   12128:	b	11fbc <table_dupe@@Base+0x130>
   1212c:	mov	r2, r4
   12130:	mov	r1, r5
   12134:	mov	r0, r6
   12138:	bl	13094 <table_get_short@@Base>
   1213c:	mov	r3, r0
   12140:	mov	r2, r4
   12144:	mov	r1, r5
   12148:	mov	r0, r7
   1214c:	bl	13764 <table_set_short@@Base>
   12150:	b	11fbc <table_dupe@@Base+0x130>
   12154:	mov	r2, r4
   12158:	mov	r1, r5
   1215c:	mov	r0, r6
   12160:	bl	13098 <table_get_ushort@@Base>
   12164:	mov	r3, r0
   12168:	mov	r2, r4
   1216c:	mov	r1, r5
   12170:	mov	r0, r7
   12174:	bl	13784 <table_set_ushort@@Base>
   12178:	b	11fbc <table_dupe@@Base+0x130>
   1217c:	mov	r2, r4
   12180:	mov	r1, r5
   12184:	mov	r0, r6
   12188:	bl	1309c <table_get_long@@Base>
   1218c:	mov	r3, r0
   12190:	mov	r2, r4
   12194:	mov	r1, r5
   12198:	mov	r0, r7
   1219c:	bl	137a4 <table_set_long@@Base>
   121a0:	b	11fbc <table_dupe@@Base+0x130>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	mov	r0, r6
   121b0:	bl	130ac <table_get_ulong@@Base>
   121b4:	mov	r3, r0
   121b8:	mov	r2, r4
   121bc:	mov	r1, r5
   121c0:	mov	r0, r7
   121c4:	bl	137c4 <table_set_ulong@@Base>
   121c8:	b	11fbc <table_dupe@@Base+0x130>
   121cc:	mov	r2, r4
   121d0:	mov	r1, r5
   121d4:	mov	r0, r6
   121d8:	bl	130bc <table_get_llong@@Base>
   121dc:	mov	r2, r4
   121e0:	strd	r0, [sp]
   121e4:	mov	r1, r5
   121e8:	mov	r0, r7
   121ec:	bl	137e4 <table_set_llong@@Base>
   121f0:	b	11fbc <table_dupe@@Base+0x130>
   121f4:	mov	r2, r4
   121f8:	mov	r1, r5
   121fc:	mov	r0, r6
   12200:	bl	130c0 <table_get_ullong@@Base>
   12204:	mov	r2, r4
   12208:	strd	r0, [sp]
   1220c:	mov	r1, r5
   12210:	mov	r0, r7
   12214:	bl	13800 <table_set_ullong@@Base>
   12218:	b	11fbc <table_dupe@@Base+0x130>
   1221c:	mov	r2, r4
   12220:	mov	r1, r5
   12224:	mov	r0, r6
   12228:	bl	130fc <table_get_string@@Base>
   1222c:	mov	r3, r0
   12230:	mov	r2, r4
   12234:	mov	r1, r5
   12238:	mov	r0, r7
   1223c:	bl	1387c <table_set_string@@Base>
   12240:	b	11fbc <table_dupe@@Base+0x130>
   12244:	mov	r2, r4
   12248:	mov	r1, r5
   1224c:	mov	r0, r6
   12250:	bl	130c4 <table_get_float@@Base>
   12254:	mov	r2, r4
   12258:	mov	r1, r5
   1225c:	mov	r0, r7
   12260:	bl	1381c <table_set_float@@Base>
   12264:	b	11fbc <table_dupe@@Base+0x130>
   12268:	mov	r2, r4
   1226c:	mov	r1, r5
   12270:	mov	r0, r6
   12274:	bl	130d4 <table_get_double@@Base>
   12278:	mov	r2, r4
   1227c:	mov	r1, r5
   12280:	mov	r0, r7
   12284:	bl	1383c <table_set_double@@Base>
   12288:	b	11fbc <table_dupe@@Base+0x130>
   1228c:	mov	r2, r4
   12290:	mov	r1, r5
   12294:	mov	r0, r6
   12298:	bl	130e4 <table_get_ldouble@@Base>
   1229c:	mov	r2, r4
   122a0:	mov	r1, r5
   122a4:	mov	r0, r7
   122a8:	bl	1385c <table_set_ldouble@@Base>
   122ac:	b	11fbc <table_dupe@@Base+0x130>
   122b0:	mov	r2, r4
   122b4:	mov	r1, r5
   122b8:	mov	r0, r6
   122bc:	bl	12ffc <table_get_bool@@Base>
   122c0:	mov	r3, r0
   122c4:	mov	r2, r4
   122c8:	mov	r1, r5
   122cc:	mov	r0, r7
   122d0:	bl	1360c <table_set_bool@@Base>
   122d4:	b	11fbc <table_dupe@@Base+0x130>
   122d8:	mov	r2, r4
   122dc:	mov	r1, r5
   122e0:	mov	r0, r6
   122e4:	bl	130f4 <table_get_char@@Base>
   122e8:	mov	r3, r0
   122ec:	mov	r2, r4
   122f0:	mov	r1, r5
   122f4:	mov	r0, r7
   122f8:	bl	13894 <table_set_char@@Base>
   122fc:	b	11fbc <table_dupe@@Base+0x130>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	130f8 <table_get_uchar@@Base>
   12310:	mov	r3, r0
   12314:	mov	r2, r4
   12318:	mov	r1, r5
   1231c:	mov	r0, r7
   12320:	bl	138b4 <table_set_uchar@@Base>
   12324:	b	11fbc <table_dupe@@Base+0x130>
   12328:	mov	r2, r4
   1232c:	mov	r1, r5
   12330:	mov	r0, r6
   12334:	bl	13100 <table_get_ptr@@Base>
   12338:	add	r3, sp, #12
   1233c:	mov	r2, r4
   12340:	str	r0, [sp, #12]
   12344:	mov	r1, r5
   12348:	mov	r0, r7
   1234c:	bl	138d4 <table_set_ptr@@Base>
   12350:	b	11fbc <table_dupe@@Base+0x130>

00012354 <table_get_major_version@@Base>:
   12354:	mov	r0, #0
   12358:	bx	lr

0001235c <table_get_minor_version@@Base>:
   1235c:	mov	r0, #0
   12360:	bx	lr

00012364 <table_get_patch_version@@Base>:
   12364:	mov	r0, #0
   12368:	bx	lr

0001236c <table_get_version@@Base>:
   1236c:	ldr	r0, [pc]	; 12374 <table_get_version@@Base+0x8>
   12370:	bx	lr
   12374:	andeq	r4, r1, r8, lsl #6

00012378 <table_get_callback_length@@Base>:
   12378:	ldr	r0, [r0, #32]
   1237c:	bx	lr

00012380 <table_register_callback@@Base>:
   12380:	push	{r4, r5, r6, r7, r8, lr}
   12384:	mov	r4, r0
   12388:	mov	ip, #0
   1238c:	ldr	lr, [r0, #32]
   12390:	ldr	r0, [r0, #36]	; 0x24
   12394:	cmp	ip, lr
   12398:	blt	12428 <table_register_callback@@Base+0xa8>
   1239c:	ldr	ip, [r4, #48]	; 0x30
   123a0:	mov	r5, r3
   123a4:	mov	r6, r2
   123a8:	mov	r7, r1
   123ac:	udiv	r3, lr, ip
   123b0:	mls	r3, ip, r3, lr
   123b4:	cmp	r3, #0
   123b8:	bne	123fc <table_register_callback@@Base+0x7c>
   123bc:	ldr	r1, [r4, #52]	; 0x34
   123c0:	add	r1, ip, r1
   123c4:	str	r1, [r4, #52]	; 0x34
   123c8:	lsl	r1, r1, #2
   123cc:	bl	11ab4 <realloc@plt>
   123d0:	ldr	r1, [r4, #52]	; 0x34
   123d4:	str	r0, [r4, #36]	; 0x24
   123d8:	ldr	r0, [r4, #40]	; 0x28
   123dc:	lsl	r1, r1, #2
   123e0:	bl	11ab4 <realloc@plt>
   123e4:	ldr	r1, [r4, #52]	; 0x34
   123e8:	str	r0, [r4, #40]	; 0x28
   123ec:	ldr	r0, [r4, #44]	; 0x2c
   123f0:	lsl	r1, r1, #2
   123f4:	bl	11ab4 <realloc@plt>
   123f8:	str	r0, [r4, #44]	; 0x2c
   123fc:	ldr	r3, [r4, #32]
   12400:	ldr	r2, [r4, #36]	; 0x24
   12404:	str	r7, [r2, r3, lsl #2]
   12408:	ldr	r2, [r4, #40]	; 0x28
   1240c:	str	r6, [r2, r3, lsl #2]
   12410:	ldr	r2, [r4, #44]	; 0x2c
   12414:	str	r5, [r2, r3, lsl #2]
   12418:	ldr	r3, [r4, #32]
   1241c:	add	r3, r3, #1
   12420:	str	r3, [r4, #32]
   12424:	pop	{r4, r5, r6, r7, r8, pc}
   12428:	ldr	r6, [r0, ip, lsl #2]
   1242c:	lsl	r5, ip, #2
   12430:	cmp	r1, r6
   12434:	bne	12448 <table_register_callback@@Base+0xc8>
   12438:	ldr	r6, [r4, #40]	; 0x28
   1243c:	ldr	r6, [r6, ip, lsl #2]
   12440:	cmp	r2, r6
   12444:	beq	12450 <table_register_callback@@Base+0xd0>
   12448:	add	ip, ip, #1
   1244c:	b	12394 <table_register_callback@@Base+0x14>
   12450:	cmp	ip, #0
   12454:	ble	1239c <table_register_callback@@Base+0x1c>
   12458:	ldr	r1, [r4, #44]	; 0x2c
   1245c:	ldr	r2, [r1, r5]
   12460:	orr	r2, r2, r3
   12464:	str	r2, [r1, r5]
   12468:	pop	{r4, r5, r6, r7, r8, pc}

0001246c <table_unregister_callback@@Base>:
   1246c:	ldr	ip, [r0, #32]
   12470:	mov	r3, #0
   12474:	cmp	r3, ip
   12478:	bxge	lr
   1247c:	push	{r4, r5, r6, lr}
   12480:	ldr	lr, [r0, #36]	; 0x24
   12484:	ldr	lr, [lr, r3, lsl #2]
   12488:	cmp	r1, lr
   1248c:	bne	124a0 <table_unregister_callback@@Base+0x34>
   12490:	ldr	lr, [r0, #40]	; 0x28
   12494:	ldr	lr, [lr, r3, lsl #2]
   12498:	cmp	r2, lr
   1249c:	beq	124e0 <table_unregister_callback@@Base+0x74>
   124a0:	add	r3, r3, #1
   124a4:	cmp	r3, ip
   124a8:	blt	12480 <table_unregister_callback@@Base+0x14>
   124ac:	pop	{r4, r5, r6, pc}
   124b0:	ldr	r1, [r0, #36]	; 0x24
   124b4:	add	r2, r3, #1
   124b8:	lsl	r3, r3, #2
   124bc:	ldr	ip, [r1, r2, lsl #2]
   124c0:	str	ip, [r1, r3]
   124c4:	ldr	r1, [r0, #40]	; 0x28
   124c8:	ldr	ip, [r1, r2, lsl #2]
   124cc:	str	ip, [r1, r3]
   124d0:	ldr	r1, [r0, #44]	; 0x2c
   124d4:	ldr	ip, [r1, r2, lsl #2]
   124d8:	str	ip, [r1, r3]
   124dc:	mov	r3, r2
   124e0:	ldr	r2, [r0, #32]
   124e4:	sub	r2, r2, #1
   124e8:	cmp	r2, r3
   124ec:	bgt	124b0 <table_unregister_callback@@Base+0x44>
   124f0:	ldr	r1, [r0, #48]	; 0x30
   124f4:	str	r2, [r0, #32]
   124f8:	udiv	r3, r2, r1
   124fc:	mls	r2, r1, r3, r2
   12500:	cmp	r2, #0
   12504:	popne	{r4, r5, r6, pc}
   12508:	mov	r4, r0
   1250c:	ldr	r5, [r4, #52]	; 0x34
   12510:	ldr	r0, [r0, #36]	; 0x24
   12514:	sub	r5, r5, r1
   12518:	cmp	r5, #0
   1251c:	str	r5, [r4, #52]	; 0x34
   12520:	beq	1255c <table_unregister_callback@@Base+0xf0>
   12524:	lsl	r1, r5, #2
   12528:	bl	11ab4 <realloc@plt>
   1252c:	ldr	r1, [r4, #52]	; 0x34
   12530:	str	r0, [r4, #36]	; 0x24
   12534:	ldr	r0, [r4, #40]	; 0x28
   12538:	lsl	r1, r1, #2
   1253c:	bl	11ab4 <realloc@plt>
   12540:	ldr	r1, [r4, #52]	; 0x34
   12544:	str	r0, [r4, #40]	; 0x28
   12548:	ldr	r0, [r4, #44]	; 0x2c
   1254c:	lsl	r1, r1, #2
   12550:	bl	11ab4 <realloc@plt>
   12554:	str	r0, [r4, #44]	; 0x2c
   12558:	pop	{r4, r5, r6, pc}
   1255c:	bl	11a9c <free@plt>
   12560:	ldr	r0, [r4, #40]	; 0x28
   12564:	bl	11a9c <free@plt>
   12568:	ldr	r0, [r4, #44]	; 0x2c
   1256c:	bl	11a9c <free@plt>
   12570:	str	r5, [r4, #36]	; 0x24
   12574:	str	r5, [r4, #40]	; 0x28
   12578:	str	r5, [r4, #44]	; 0x2c
   1257c:	pop	{r4, r5, r6, pc}

00012580 <table_notify@@Base>:
   12580:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12584:	mov	r5, r0
   12588:	mov	r7, r1
   1258c:	mov	r8, r2
   12590:	mov	r6, r3
   12594:	mov	r4, #0
   12598:	ldr	r3, [r5, #32]
   1259c:	cmp	r3, r4
   125a0:	bgt	125ac <table_notify@@Base+0x2c>
   125a4:	add	sp, sp, #12
   125a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   125ac:	ldr	r3, [r5, #44]	; 0x2c
   125b0:	ldr	r3, [r3, r4, lsl #2]
   125b4:	tst	r6, r3
   125b8:	beq	125e4 <table_notify@@Base+0x64>
   125bc:	ldr	r3, [r5, #36]	; 0x24
   125c0:	mov	r1, r7
   125c4:	mov	r0, r5
   125c8:	ldr	r2, [r5, #40]	; 0x28
   125cc:	ldr	r2, [r2, r4, lsl #2]
   125d0:	str	r2, [sp]
   125d4:	mov	r2, r8
   125d8:	ldr	r9, [r3, r4, lsl #2]
   125dc:	mov	r3, r6
   125e0:	blx	r9
   125e4:	add	r4, r4, #1
   125e8:	b	12598 <table_notify@@Base+0x18>

000125ec <table_column_init@@Base>:
   125ec:	push	{r4, r5, r6, r7, r8, lr}
   125f0:	mov	r4, #12
   125f4:	mov	r6, r2
   125f8:	mov	r8, r3
   125fc:	mul	r4, r4, r1
   12600:	ldr	r7, [r0]
   12604:	mov	r0, r2
   12608:	bl	11af0 <strlen@plt>
   1260c:	add	r0, r0, #1
   12610:	bl	11acc <malloc@plt>
   12614:	cmp	r0, #0
   12618:	add	r5, r7, r4
   1261c:	str	r0, [r7, r4]
   12620:	beq	1262c <table_column_init@@Base+0x40>
   12624:	mov	r1, r6
   12628:	bl	11ac0 <strcpy@plt>
   1262c:	ldr	r3, [sp, #24]
   12630:	str	r8, [r5, #4]
   12634:	str	r3, [r5, #8]
   12638:	pop	{r4, r5, r6, r7, r8, pc}

0001263c <table_column_destroy@@Base>:
   1263c:	mov	r3, #12
   12640:	ldr	r2, [r0]
   12644:	mul	r1, r3, r1
   12648:	ldr	r0, [r2, r1]
   1264c:	cmp	r0, #0
   12650:	bxeq	lr
   12654:	b	11a9c <free@plt>

00012658 <table_get_column_length@@Base>:
   12658:	ldr	r0, [r0, #4]
   1265c:	bx	lr

00012660 <table_get_column@@Base>:
   12660:	push	{r4, r5, r6, r7, r8, lr}
   12664:	mov	r5, r0
   12668:	mov	r7, r1
   1266c:	mov	r4, #0
   12670:	mov	r8, #12
   12674:	ldr	r6, [r0, #4]
   12678:	cmp	r4, r6
   1267c:	blt	1268c <table_get_column@@Base+0x2c>
   12680:	mvneq	r4, #0
   12684:	mov	r0, r4
   12688:	pop	{r4, r5, r6, r7, r8, pc}
   1268c:	ldr	r2, [r5]
   12690:	mul	r3, r8, r4
   12694:	mov	r1, r7
   12698:	ldr	r0, [r2, r3]
   1269c:	bl	11a90 <strcmp@plt>
   126a0:	cmp	r0, #0
   126a4:	beq	12684 <table_get_column@@Base+0x24>
   126a8:	add	r4, r4, #1
   126ac:	b	12678 <table_get_column@@Base+0x18>

000126b0 <table_get_column_data_type@@Base>:
   126b0:	ldr	r2, [r0]
   126b4:	mov	r3, #12
   126b8:	mla	r1, r3, r1, r2
   126bc:	ldr	r0, [r1, #4]
   126c0:	bx	lr

000126c4 <table_add_column@@Base>:
   126c4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   126c8:	mov	r7, r1
   126cc:	mov	r4, r0
   126d0:	mov	r6, r2
   126d4:	ldr	r3, [r0, #4]
   126d8:	ldr	r1, [r0, #8]
   126dc:	udiv	r5, r3, r1
   126e0:	mls	r5, r1, r5, r3
   126e4:	cmp	r5, #0
   126e8:	beq	12750 <table_add_column@@Base+0x8c>
   126ec:	mov	r0, r4
   126f0:	mov	r5, #0
   126f4:	bl	13174 <table_get_row_length@@Base>
   126f8:	ldr	r8, [r4, #4]
   126fc:	mov	r9, r0
   12700:	mov	r0, r6
   12704:	bl	12fd4 <table_get_default_compare_function_for_data_type@@Base>
   12708:	mov	r3, r6
   1270c:	mov	r2, r7
   12710:	str	r0, [sp]
   12714:	mov	r0, r4
   12718:	mov	r1, r8
   1271c:	bl	125ec <table_column_init@@Base>
   12720:	cmp	r9, r5
   12724:	bgt	127b0 <table_add_column@@Base+0xec>
   12728:	mov	r0, r4
   1272c:	mov	r3, #8
   12730:	ldr	r2, [r4, #4]
   12734:	mvn	r1, #0
   12738:	bl	12580 <table_notify@@Base>
   1273c:	ldr	r0, [r4, #4]
   12740:	add	r3, r0, #1
   12744:	str	r3, [r4, #4]
   12748:	add	sp, sp, #12
   1274c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12750:	ldr	r3, [r4, #12]
   12754:	ldr	r0, [r0]
   12758:	add	r1, r1, r3
   1275c:	mov	r3, #12
   12760:	str	r1, [r4, #12]
   12764:	mul	r1, r3, r1
   12768:	bl	11ab4 <realloc@plt>
   1276c:	str	r0, [r4]
   12770:	mov	r0, r4
   12774:	bl	13174 <table_get_row_length@@Base>
   12778:	mov	r9, r0
   1277c:	cmp	r9, r5
   12780:	ble	126ec <table_add_column@@Base+0x28>
   12784:	mov	r1, r5
   12788:	mov	r0, r4
   1278c:	bl	13310 <table_get_row_ptr@@Base>
   12790:	ldr	r1, [r4, #12]
   12794:	mov	r8, r0
   12798:	add	r5, r5, #1
   1279c:	ldr	r0, [r0]
   127a0:	lsl	r1, r1, #2
   127a4:	bl	11ab4 <realloc@plt>
   127a8:	str	r0, [r8]
   127ac:	b	1277c <table_add_column@@Base+0xb8>
   127b0:	mov	r1, r5
   127b4:	mov	r2, r8
   127b8:	mov	r0, r4
   127bc:	add	r5, r5, #1
   127c0:	bl	14184 <table_cell_init@@Base>
   127c4:	b	12720 <table_add_column@@Base+0x5c>

000127c8 <table_remove_column@@Base>:
   127c8:	push	{r4, r5, r6, r7, r8, lr}
   127cc:	mov	r4, r0
   127d0:	mov	r6, r1
   127d4:	mov	r5, #12
   127d8:	bl	1263c <table_column_destroy@@Base>
   127dc:	ldr	r7, [r4, #4]
   127e0:	mov	r1, r6
   127e4:	sub	r7, r7, #1
   127e8:	cmp	r1, r7
   127ec:	blt	12878 <table_remove_column@@Base+0xb0>
   127f0:	mov	r0, r4
   127f4:	mov	r5, #0
   127f8:	bl	13174 <table_get_row_length@@Base>
   127fc:	mov	r8, r0
   12800:	cmp	r8, r5
   12804:	bgt	128ac <table_remove_column@@Base+0xe4>
   12808:	ldr	r5, [r4, #4]
   1280c:	ldr	r1, [r4, #8]
   12810:	sub	r3, r5, #1
   12814:	udiv	r5, r3, r1
   12818:	str	r3, [r4, #4]
   1281c:	mls	r5, r1, r5, r3
   12820:	cmp	r5, #0
   12824:	bne	1285c <table_remove_column@@Base+0x94>
   12828:	ldr	r0, [r4]
   1282c:	ldr	r3, [r4, #12]
   12830:	sub	r3, r3, r1
   12834:	mov	r1, #12
   12838:	mul	r1, r1, r3
   1283c:	str	r3, [r4, #12]
   12840:	bl	11ab4 <realloc@plt>
   12844:	str	r0, [r4]
   12848:	mov	r0, r4
   1284c:	bl	13174 <table_get_row_length@@Base>
   12850:	mov	r8, r0
   12854:	cmp	r8, r5
   12858:	bgt	128f0 <table_remove_column@@Base+0x128>
   1285c:	mov	r0, r4
   12860:	mov	r3, #16
   12864:	mov	r2, r6
   12868:	mvn	r1, #0
   1286c:	bl	12580 <table_notify@@Base>
   12870:	mov	r0, #0
   12874:	pop	{r4, r5, r6, r7, r8, pc}
   12878:	ldr	ip, [r4]
   1287c:	mul	r0, r5, r1
   12880:	add	r1, r1, #1
   12884:	add	r2, r0, #12
   12888:	add	r2, ip, r2
   1288c:	add	lr, ip, r0
   12890:	ldr	r3, [r2]
   12894:	str	r3, [ip, r0]
   12898:	ldr	r3, [r2, #4]
   1289c:	str	r3, [lr, #4]
   128a0:	ldr	r3, [r2, #8]
   128a4:	str	r3, [lr, #8]
   128a8:	b	127e8 <table_remove_column@@Base+0x20>
   128ac:	mov	r2, r6
   128b0:	mov	r1, r5
   128b4:	mov	r0, r4
   128b8:	bl	14198 <table_cell_destroy@@Base>
   128bc:	mov	r1, r5
   128c0:	mov	r0, r4
   128c4:	bl	13310 <table_get_row_ptr@@Base>
   128c8:	mov	r3, r6
   128cc:	cmp	r7, r3
   128d0:	addle	r5, r5, #1
   128d4:	ble	12800 <table_remove_column@@Base+0x38>
   128d8:	ldr	r2, [r0]
   128dc:	add	r1, r2, r3, lsl #2
   128e0:	ldr	r1, [r1, #4]
   128e4:	str	r1, [r2, r3, lsl #2]
   128e8:	add	r3, r3, #1
   128ec:	b	128cc <table_remove_column@@Base+0x104>
   128f0:	mov	r1, r5
   128f4:	mov	r0, r4
   128f8:	bl	13310 <table_get_row_ptr@@Base>
   128fc:	ldr	r1, [r4, #12]
   12900:	mov	r7, r0
   12904:	add	r5, r5, #1
   12908:	ldr	r0, [r0]
   1290c:	lsl	r1, r1, #2
   12910:	bl	11ab4 <realloc@plt>
   12914:	str	r0, [r7]
   12918:	b	12854 <table_remove_column@@Base+0x8c>

0001291c <table_get_column_name@@Base>:
   1291c:	mov	r3, #12
   12920:	ldr	r2, [r0]
   12924:	mul	r1, r3, r1
   12928:	ldr	r0, [r2, r1]
   1292c:	bx	lr

00012930 <table_get_col_ptr@@Base>:
   12930:	ldr	r3, [r0]
   12934:	mov	r0, #12
   12938:	mla	r0, r0, r1, r3
   1293c:	bx	lr

00012940 <table_get_column_compare_function@@Base>:
   12940:	ldr	r2, [r0]
   12944:	mov	r3, #12
   12948:	mla	r1, r3, r1, r2
   1294c:	ldr	r0, [r1, #8]
   12950:	bx	lr

00012954 <table_set_column_compare_function@@Base>:
   12954:	ldr	r0, [r0]
   12958:	mov	r3, #12
   1295c:	mla	r1, r3, r1, r0
   12960:	str	r2, [r1, #8]
   12964:	bx	lr

00012968 <table_compare_ptr@@Base>:
   12968:	cmp	r0, r1
   1296c:	bhi	1297c <table_compare_ptr@@Base+0x14>
   12970:	mvncc	r0, #0
   12974:	movcs	r0, #0
   12978:	bx	lr
   1297c:	mov	r0, #1
   12980:	bx	lr

00012984 <table_compare_string@@Base>:
   12984:	cmp	r0, #0
   12988:	bne	1299c <table_compare_string@@Base+0x18>
   1298c:	adds	r0, r1, #0
   12990:	movne	r0, #1
   12994:	rsb	r0, r0, #0
   12998:	bx	lr
   1299c:	cmp	r1, #0
   129a0:	beq	129a8 <table_compare_string@@Base+0x24>
   129a4:	b	11a90 <strcmp@plt>
   129a8:	mov	r0, #1
   129ac:	bx	lr

000129b0 <table_compare_bool@@Base>:
   129b0:	cmp	r0, #0
   129b4:	bne	129c8 <table_compare_bool@@Base+0x18>
   129b8:	adds	r0, r1, #0
   129bc:	movne	r0, #1
   129c0:	rsb	r0, r0, #0
   129c4:	bx	lr
   129c8:	cmp	r1, #0
   129cc:	beq	129ec <table_compare_bool@@Base+0x3c>
   129d0:	ldrb	r2, [r0]
   129d4:	ldrb	r3, [r1]
   129d8:	cmp	r2, r3
   129dc:	bhi	129ec <table_compare_bool@@Base+0x3c>
   129e0:	mvncc	r0, #0
   129e4:	movcs	r0, #0
   129e8:	bx	lr
   129ec:	mov	r0, #1
   129f0:	bx	lr

000129f4 <table_compare_int32@@Base>:
   129f4:	cmp	r0, #0
   129f8:	bne	12a0c <table_compare_int32@@Base+0x18>
   129fc:	adds	r0, r1, #0
   12a00:	movne	r0, #1
   12a04:	rsb	r0, r0, #0
   12a08:	bx	lr
   12a0c:	cmp	r1, #0
   12a10:	beq	12a30 <table_compare_int32@@Base+0x3c>
   12a14:	ldr	r2, [r0]
   12a18:	ldr	r3, [r1]
   12a1c:	cmp	r2, r3
   12a20:	bgt	12a30 <table_compare_int32@@Base+0x3c>
   12a24:	mvnlt	r0, #0
   12a28:	movge	r0, #0
   12a2c:	bx	lr
   12a30:	mov	r0, #1
   12a34:	bx	lr

00012a38 <table_compare_uint32@@Base>:
   12a38:	cmp	r0, #0
   12a3c:	bne	12a50 <table_compare_uint32@@Base+0x18>
   12a40:	adds	r0, r1, #0
   12a44:	movne	r0, #1
   12a48:	rsb	r0, r0, #0
   12a4c:	bx	lr
   12a50:	cmp	r1, #0
   12a54:	beq	12a74 <table_compare_uint32@@Base+0x3c>
   12a58:	ldr	r2, [r0]
   12a5c:	ldr	r3, [r1]
   12a60:	cmp	r2, r3
   12a64:	bhi	12a74 <table_compare_uint32@@Base+0x3c>
   12a68:	mvncc	r0, #0
   12a6c:	movcs	r0, #0
   12a70:	bx	lr
   12a74:	mov	r0, #1
   12a78:	bx	lr

00012a7c <table_compare_int8@@Base>:
   12a7c:	cmp	r0, #0
   12a80:	bne	12a94 <table_compare_int8@@Base+0x18>
   12a84:	adds	r0, r1, #0
   12a88:	movne	r0, #1
   12a8c:	rsb	r0, r0, #0
   12a90:	bx	lr
   12a94:	cmp	r1, #0
   12a98:	beq	12ab8 <table_compare_int8@@Base+0x3c>
   12a9c:	ldrsb	r2, [r0]
   12aa0:	ldrsb	r3, [r1]
   12aa4:	cmp	r2, r3
   12aa8:	bgt	12ab8 <table_compare_int8@@Base+0x3c>
   12aac:	mvnlt	r0, #0
   12ab0:	movge	r0, #0
   12ab4:	bx	lr
   12ab8:	mov	r0, #1
   12abc:	bx	lr

00012ac0 <table_compare_char@@Base>:
   12ac0:	cmp	r0, #0
   12ac4:	bne	12ad8 <table_compare_char@@Base+0x18>
   12ac8:	adds	r0, r1, #0
   12acc:	movne	r0, #1
   12ad0:	rsb	r0, r0, #0
   12ad4:	bx	lr
   12ad8:	cmp	r1, #0
   12adc:	beq	12afc <table_compare_char@@Base+0x3c>
   12ae0:	ldrb	r2, [r0]
   12ae4:	ldrb	r3, [r1]
   12ae8:	cmp	r2, r3
   12aec:	bhi	12afc <table_compare_char@@Base+0x3c>
   12af0:	mvncc	r0, #0
   12af4:	movcs	r0, #0
   12af8:	bx	lr
   12afc:	mov	r0, #1
   12b00:	bx	lr

00012b04 <table_compare_short@@Base>:
   12b04:	cmp	r0, #0
   12b08:	bne	12b1c <table_compare_short@@Base+0x18>
   12b0c:	adds	r0, r1, #0
   12b10:	movne	r0, #1
   12b14:	rsb	r0, r0, #0
   12b18:	bx	lr
   12b1c:	cmp	r1, #0
   12b20:	beq	12b40 <table_compare_short@@Base+0x3c>
   12b24:	ldrsh	r2, [r0]
   12b28:	ldrsh	r3, [r1]
   12b2c:	cmp	r2, r3
   12b30:	bgt	12b40 <table_compare_short@@Base+0x3c>
   12b34:	mvnlt	r0, #0
   12b38:	movge	r0, #0
   12b3c:	bx	lr
   12b40:	mov	r0, #1
   12b44:	bx	lr

00012b48 <table_compare_ushort@@Base>:
   12b48:	cmp	r0, #0
   12b4c:	bne	12b60 <table_compare_ushort@@Base+0x18>
   12b50:	adds	r0, r1, #0
   12b54:	movne	r0, #1
   12b58:	rsb	r0, r0, #0
   12b5c:	bx	lr
   12b60:	cmp	r1, #0
   12b64:	beq	12b84 <table_compare_ushort@@Base+0x3c>
   12b68:	ldrh	r2, [r0]
   12b6c:	ldrh	r3, [r1]
   12b70:	cmp	r2, r3
   12b74:	bhi	12b84 <table_compare_ushort@@Base+0x3c>
   12b78:	mvncc	r0, #0
   12b7c:	movcs	r0, #0
   12b80:	bx	lr
   12b84:	mov	r0, #1
   12b88:	bx	lr

00012b8c <table_compare_llong@@Base>:
   12b8c:	cmp	r0, #0
   12b90:	bne	12ba4 <table_compare_llong@@Base+0x18>
   12b94:	adds	r0, r1, #0
   12b98:	movne	r0, #1
   12b9c:	rsb	r0, r0, #0
   12ba0:	bx	lr
   12ba4:	cmp	r1, #0
   12ba8:	beq	12bd8 <table_compare_llong@@Base+0x4c>
   12bac:	push	{r4, r5, lr}
   12bb0:	ldrd	r2, [r1]
   12bb4:	ldrd	r4, [r0]
   12bb8:	cmp	r2, r4
   12bbc:	sbcs	r1, r3, r5
   12bc0:	blt	12be0 <table_compare_llong@@Base+0x54>
   12bc4:	cmp	r4, r2
   12bc8:	sbcs	r3, r5, r3
   12bcc:	mvnlt	r0, #0
   12bd0:	movge	r0, #0
   12bd4:	pop	{r4, r5, pc}
   12bd8:	mov	r0, #1
   12bdc:	bx	lr
   12be0:	mov	r0, #1
   12be4:	pop	{r4, r5, pc}

00012be8 <table_compare_uint64@@Base>:
   12be8:	cmp	r0, #0
   12bec:	bne	12c00 <table_compare_uint64@@Base+0x18>
   12bf0:	adds	r0, r1, #0
   12bf4:	movne	r0, #1
   12bf8:	rsb	r0, r0, #0
   12bfc:	bx	lr
   12c00:	cmp	r1, #0
   12c04:	beq	12c2c <table_compare_uint64@@Base+0x44>
   12c08:	push	{r4, r5, lr}
   12c0c:	ldrd	r2, [r1]
   12c10:	ldrd	r4, [r0]
   12c14:	cmp	r5, r3
   12c18:	cmpeq	r4, r2
   12c1c:	bhi	12c34 <table_compare_uint64@@Base+0x4c>
   12c20:	mvncc	r0, #0
   12c24:	movcs	r0, #0
   12c28:	pop	{r4, r5, pc}
   12c2c:	mov	r0, #1
   12c30:	bx	lr
   12c34:	mov	r0, #1
   12c38:	pop	{r4, r5, pc}

00012c3c <table_compare_long@@Base>:
   12c3c:	cmp	r0, #0
   12c40:	bne	12c54 <table_compare_long@@Base+0x18>
   12c44:	adds	r0, r1, #0
   12c48:	movne	r0, #1
   12c4c:	rsb	r0, r0, #0
   12c50:	bx	lr
   12c54:	cmp	r1, #0
   12c58:	beq	12c78 <table_compare_long@@Base+0x3c>
   12c5c:	ldr	r2, [r0]
   12c60:	ldr	r3, [r1]
   12c64:	cmp	r2, r3
   12c68:	bgt	12c78 <table_compare_long@@Base+0x3c>
   12c6c:	mvnlt	r0, #0
   12c70:	movge	r0, #0
   12c74:	bx	lr
   12c78:	mov	r0, #1
   12c7c:	bx	lr

00012c80 <table_compare_ullong@@Base>:
   12c80:	cmp	r0, #0
   12c84:	bne	12c98 <table_compare_ullong@@Base+0x18>
   12c88:	adds	r0, r1, #0
   12c8c:	movne	r0, #1
   12c90:	rsb	r0, r0, #0
   12c94:	bx	lr
   12c98:	cmp	r1, #0
   12c9c:	beq	12cbc <table_compare_ullong@@Base+0x3c>
   12ca0:	ldr	r2, [r0]
   12ca4:	ldr	r3, [r1]
   12ca8:	cmp	r2, r3
   12cac:	bhi	12cbc <table_compare_ullong@@Base+0x3c>
   12cb0:	mvncc	r0, #0
   12cb4:	movcs	r0, #0
   12cb8:	bx	lr
   12cbc:	mov	r0, #1
   12cc0:	bx	lr

00012cc4 <table_compare_float@@Base>:
   12cc4:	cmp	r0, #0
   12cc8:	bne	12cdc <table_compare_float@@Base+0x18>
   12ccc:	adds	r0, r1, #0
   12cd0:	movne	r0, #1
   12cd4:	rsb	r0, r0, #0
   12cd8:	bx	lr
   12cdc:	cmp	r1, #0
   12ce0:	beq	12d04 <table_compare_float@@Base+0x40>
   12ce4:	vldr	s14, [r0]
   12ce8:	vldr	s15, [r1]
   12cec:	vcmpe.f32	s14, s15
   12cf0:	vmrs	APSR_nzcv, fpscr
   12cf4:	bgt	12d04 <table_compare_float@@Base+0x40>
   12cf8:	mvnmi	r0, #0
   12cfc:	movpl	r0, #0
   12d00:	bx	lr
   12d04:	mov	r0, #1
   12d08:	bx	lr

00012d0c <table_compare_double@@Base>:
   12d0c:	cmp	r0, #0
   12d10:	bne	12d24 <table_compare_double@@Base+0x18>
   12d14:	adds	r0, r1, #0
   12d18:	movne	r0, #1
   12d1c:	rsb	r0, r0, #0
   12d20:	bx	lr
   12d24:	cmp	r1, #0
   12d28:	beq	12d4c <table_compare_double@@Base+0x40>
   12d2c:	vldr	d6, [r0]
   12d30:	vldr	d7, [r1]
   12d34:	vcmpe.f64	d6, d7
   12d38:	vmrs	APSR_nzcv, fpscr
   12d3c:	bgt	12d4c <table_compare_double@@Base+0x40>
   12d40:	mvnmi	r0, #0
   12d44:	movpl	r0, #0
   12d48:	bx	lr
   12d4c:	mov	r0, #1
   12d50:	bx	lr

00012d54 <table_compare_ldouble@@Base>:
   12d54:	cmp	r0, #0
   12d58:	bne	12d6c <table_compare_ldouble@@Base+0x18>
   12d5c:	adds	r0, r1, #0
   12d60:	movne	r0, #1
   12d64:	rsb	r0, r0, #0
   12d68:	bx	lr
   12d6c:	cmp	r1, #0
   12d70:	beq	12d94 <table_compare_ldouble@@Base+0x40>
   12d74:	vldr	d6, [r0]
   12d78:	vldr	d7, [r1]
   12d7c:	vcmpe.f64	d6, d7
   12d80:	vmrs	APSR_nzcv, fpscr
   12d84:	bgt	12d94 <table_compare_ldouble@@Base+0x40>
   12d88:	mvnmi	r0, #0
   12d8c:	movpl	r0, #0
   12d90:	bx	lr
   12d94:	mov	r0, #1
   12d98:	bx	lr

00012d9c <table_compare_uchar@@Base>:
   12d9c:	cmp	r0, #0
   12da0:	bne	12db4 <table_compare_uchar@@Base+0x18>
   12da4:	adds	r0, r1, #0
   12da8:	movne	r0, #1
   12dac:	rsb	r0, r0, #0
   12db0:	bx	lr
   12db4:	cmp	r1, #0
   12db8:	beq	12dd8 <table_compare_uchar@@Base+0x3c>
   12dbc:	ldrb	r2, [r0]
   12dc0:	ldrb	r3, [r1]
   12dc4:	cmp	r2, r3
   12dc8:	bhi	12dd8 <table_compare_uchar@@Base+0x3c>
   12dcc:	mvncc	r0, #0
   12dd0:	movcs	r0, #0
   12dd4:	bx	lr
   12dd8:	mov	r0, #1
   12ddc:	bx	lr

00012de0 <table_compare_int@@Base>:
   12de0:	cmp	r0, #0
   12de4:	bne	12df8 <table_compare_int@@Base+0x18>
   12de8:	adds	r0, r1, #0
   12dec:	movne	r0, #1
   12df0:	rsb	r0, r0, #0
   12df4:	bx	lr
   12df8:	cmp	r1, #0
   12dfc:	beq	12e1c <table_compare_int@@Base+0x3c>
   12e00:	ldr	r2, [r0]
   12e04:	ldr	r3, [r1]
   12e08:	cmp	r2, r3
   12e0c:	bgt	12e1c <table_compare_int@@Base+0x3c>
   12e10:	mvnlt	r0, #0
   12e14:	movge	r0, #0
   12e18:	bx	lr
   12e1c:	mov	r0, #1
   12e20:	bx	lr

00012e24 <table_compare_uint@@Base>:
   12e24:	cmp	r0, #0
   12e28:	bne	12e3c <table_compare_uint@@Base+0x18>
   12e2c:	adds	r0, r1, #0
   12e30:	movne	r0, #1
   12e34:	rsb	r0, r0, #0
   12e38:	bx	lr
   12e3c:	cmp	r1, #0
   12e40:	beq	12e60 <table_compare_uint@@Base+0x3c>
   12e44:	ldr	r2, [r0]
   12e48:	ldr	r3, [r1]
   12e4c:	cmp	r2, r3
   12e50:	bhi	12e60 <table_compare_uint@@Base+0x3c>
   12e54:	mvncc	r0, #0
   12e58:	movcs	r0, #0
   12e5c:	bx	lr
   12e60:	mov	r0, #1
   12e64:	bx	lr

00012e68 <table_compare_uint8@@Base>:
   12e68:	cmp	r0, #0
   12e6c:	bne	12e80 <table_compare_uint8@@Base+0x18>
   12e70:	adds	r0, r1, #0
   12e74:	movne	r0, #1
   12e78:	rsb	r0, r0, #0
   12e7c:	bx	lr
   12e80:	cmp	r1, #0
   12e84:	beq	12ea4 <table_compare_uint8@@Base+0x3c>
   12e88:	ldrb	r2, [r0]
   12e8c:	ldrb	r3, [r1]
   12e90:	cmp	r2, r3
   12e94:	bhi	12ea4 <table_compare_uint8@@Base+0x3c>
   12e98:	mvncc	r0, #0
   12e9c:	movcs	r0, #0
   12ea0:	bx	lr
   12ea4:	mov	r0, #1
   12ea8:	bx	lr

00012eac <table_compare_int16@@Base>:
   12eac:	cmp	r0, #0
   12eb0:	bne	12ec4 <table_compare_int16@@Base+0x18>
   12eb4:	adds	r0, r1, #0
   12eb8:	movne	r0, #1
   12ebc:	rsb	r0, r0, #0
   12ec0:	bx	lr
   12ec4:	cmp	r1, #0
   12ec8:	beq	12ee8 <table_compare_int16@@Base+0x3c>
   12ecc:	ldrsh	r2, [r0]
   12ed0:	ldrsh	r3, [r1]
   12ed4:	cmp	r2, r3
   12ed8:	bgt	12ee8 <table_compare_int16@@Base+0x3c>
   12edc:	mvnlt	r0, #0
   12ee0:	movge	r0, #0
   12ee4:	bx	lr
   12ee8:	mov	r0, #1
   12eec:	bx	lr

00012ef0 <table_compare_uint16@@Base>:
   12ef0:	cmp	r0, #0
   12ef4:	bne	12f08 <table_compare_uint16@@Base+0x18>
   12ef8:	adds	r0, r1, #0
   12efc:	movne	r0, #1
   12f00:	rsb	r0, r0, #0
   12f04:	bx	lr
   12f08:	cmp	r1, #0
   12f0c:	beq	12f2c <table_compare_uint16@@Base+0x3c>
   12f10:	ldrh	r2, [r0]
   12f14:	ldrh	r3, [r1]
   12f18:	cmp	r2, r3
   12f1c:	bhi	12f2c <table_compare_uint16@@Base+0x3c>
   12f20:	mvncc	r0, #0
   12f24:	movcs	r0, #0
   12f28:	bx	lr
   12f2c:	mov	r0, #1
   12f30:	bx	lr

00012f34 <table_compare_ulong@@Base>:
   12f34:	cmp	r0, #0
   12f38:	bne	12f4c <table_compare_ulong@@Base+0x18>
   12f3c:	adds	r0, r1, #0
   12f40:	movne	r0, #1
   12f44:	rsb	r0, r0, #0
   12f48:	bx	lr
   12f4c:	cmp	r1, #0
   12f50:	beq	12f70 <table_compare_ulong@@Base+0x3c>
   12f54:	ldr	r2, [r0]
   12f58:	ldr	r3, [r1]
   12f5c:	cmp	r2, r3
   12f60:	bhi	12f70 <table_compare_ulong@@Base+0x3c>
   12f64:	mvncc	r0, #0
   12f68:	movcs	r0, #0
   12f6c:	bx	lr
   12f70:	mov	r0, #1
   12f74:	bx	lr

00012f78 <table_compare_int64@@Base>:
   12f78:	cmp	r0, #0
   12f7c:	bne	12f90 <table_compare_int64@@Base+0x18>
   12f80:	adds	r0, r1, #0
   12f84:	movne	r0, #1
   12f88:	rsb	r0, r0, #0
   12f8c:	bx	lr
   12f90:	cmp	r1, #0
   12f94:	beq	12fc4 <table_compare_int64@@Base+0x4c>
   12f98:	push	{r4, r5, lr}
   12f9c:	ldrd	r2, [r1]
   12fa0:	ldrd	r4, [r0]
   12fa4:	cmp	r2, r4
   12fa8:	sbcs	r1, r3, r5
   12fac:	blt	12fcc <table_compare_int64@@Base+0x54>
   12fb0:	cmp	r4, r2
   12fb4:	sbcs	r3, r5, r3
   12fb8:	mvnlt	r0, #0
   12fbc:	movge	r0, #0
   12fc0:	pop	{r4, r5, pc}
   12fc4:	mov	r0, #1
   12fc8:	bx	lr
   12fcc:	mov	r0, #1
   12fd0:	pop	{r4, r5, pc}

00012fd4 <table_get_default_compare_function_for_data_type@@Base>:
   12fd4:	cmp	r0, #23
   12fd8:	ldrls	r3, [pc, #8]	; 12fe8 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12fdc:	ldrls	r0, [r3, r0, lsl #2]
   12fe0:	movhi	r0, #0
   12fe4:	bx	lr
   12fe8:	andeq	r4, r1, r8, ror r2

00012fec <table_get@@Base>:
   12fec:	push	{r4, lr}
   12ff0:	bl	1416c <table_get_cell_ptr@@Base>
   12ff4:	ldr	r0, [r0]
   12ff8:	pop	{r4, pc}

00012ffc <table_get_bool@@Base>:
   12ffc:	push	{r4, lr}
   13000:	bl	12fec <table_get@@Base>
   13004:	ldrb	r0, [r0]
   13008:	pop	{r4, pc}

0001300c <table_get_int@@Base>:
   1300c:	push	{r4, lr}
   13010:	bl	12fec <table_get@@Base>
   13014:	ldr	r0, [r0]
   13018:	pop	{r4, pc}

0001301c <table_get_uint@@Base>:
   1301c:	push	{r4, lr}
   13020:	bl	12fec <table_get@@Base>
   13024:	ldr	r0, [r0]
   13028:	pop	{r4, pc}

0001302c <table_get_int8@@Base>:
   1302c:	push	{r4, lr}
   13030:	bl	12fec <table_get@@Base>
   13034:	ldrsb	r0, [r0]
   13038:	pop	{r4, pc}

0001303c <table_get_uint8@@Base>:
   1303c:	push	{r4, lr}
   13040:	bl	12fec <table_get@@Base>
   13044:	ldrb	r0, [r0]
   13048:	pop	{r4, pc}

0001304c <table_get_int16@@Base>:
   1304c:	push	{r4, lr}
   13050:	bl	12fec <table_get@@Base>
   13054:	ldrsh	r0, [r0]
   13058:	pop	{r4, pc}

0001305c <table_get_uint16@@Base>:
   1305c:	push	{r4, lr}
   13060:	bl	12fec <table_get@@Base>
   13064:	ldrh	r0, [r0]
   13068:	pop	{r4, pc}

0001306c <table_get_int32@@Base>:
   1306c:	b	1300c <table_get_int@@Base>

00013070 <table_get_uint32@@Base>:
   13070:	b	1301c <table_get_uint@@Base>

00013074 <table_get_int64@@Base>:
   13074:	push	{r4, lr}
   13078:	bl	12fec <table_get@@Base>
   1307c:	ldrd	r0, [r0]
   13080:	pop	{r4, pc}

00013084 <table_get_uint64@@Base>:
   13084:	push	{r4, lr}
   13088:	bl	12fec <table_get@@Base>
   1308c:	ldrd	r0, [r0]
   13090:	pop	{r4, pc}

00013094 <table_get_short@@Base>:
   13094:	b	1304c <table_get_int16@@Base>

00013098 <table_get_ushort@@Base>:
   13098:	b	1305c <table_get_uint16@@Base>

0001309c <table_get_long@@Base>:
   1309c:	push	{r4, lr}
   130a0:	bl	12fec <table_get@@Base>
   130a4:	ldr	r0, [r0]
   130a8:	pop	{r4, pc}

000130ac <table_get_ulong@@Base>:
   130ac:	push	{r4, lr}
   130b0:	bl	12fec <table_get@@Base>
   130b4:	ldr	r0, [r0]
   130b8:	pop	{r4, pc}

000130bc <table_get_llong@@Base>:
   130bc:	b	13074 <table_get_int64@@Base>

000130c0 <table_get_ullong@@Base>:
   130c0:	b	13084 <table_get_uint64@@Base>

000130c4 <table_get_float@@Base>:
   130c4:	push	{r4, lr}
   130c8:	bl	12fec <table_get@@Base>
   130cc:	vldr	s0, [r0]
   130d0:	pop	{r4, pc}

000130d4 <table_get_double@@Base>:
   130d4:	push	{r4, lr}
   130d8:	bl	12fec <table_get@@Base>
   130dc:	vldr	d0, [r0]
   130e0:	pop	{r4, pc}

000130e4 <table_get_ldouble@@Base>:
   130e4:	push	{r4, lr}
   130e8:	bl	12fec <table_get@@Base>
   130ec:	vldr	d0, [r0]
   130f0:	pop	{r4, pc}

000130f4 <table_get_char@@Base>:
   130f4:	b	1303c <table_get_uint8@@Base>

000130f8 <table_get_uchar@@Base>:
   130f8:	b	1303c <table_get_uint8@@Base>

000130fc <table_get_string@@Base>:
   130fc:	b	12fec <table_get@@Base>

00013100 <table_get_ptr@@Base>:
   13100:	b	12fec <table_get@@Base>

00013104 <table_row_init@@Base>:
   13104:	push	{r4, r5, r6, lr}
   13108:	mov	r5, r1
   1310c:	ldr	r4, [r0, #16]
   13110:	ldr	r0, [r0, #12]
   13114:	lsl	r0, r0, #2
   13118:	bl	11acc <malloc@plt>
   1311c:	str	r0, [r4, r5, lsl #2]
   13120:	pop	{r4, r5, r6, pc}

00013124 <table_row_destroy@@Base>:
   13124:	push	{r4, r5, r6, r7, r8, lr}
   13128:	mov	r6, r0
   1312c:	mov	r5, r1
   13130:	mov	r4, #0
   13134:	bl	12658 <table_get_column_length@@Base>
   13138:	ldr	r7, [r6, #16]
   1313c:	mov	r8, r0
   13140:	cmp	r4, r8
   13144:	blt	1315c <table_row_destroy@@Base+0x38>
   13148:	ldr	r0, [r7, r5, lsl #2]
   1314c:	cmp	r0, #0
   13150:	popeq	{r4, r5, r6, r7, r8, pc}
   13154:	pop	{r4, r5, r6, r7, r8, lr}
   13158:	b	11a9c <free@plt>
   1315c:	mov	r2, r4
   13160:	mov	r1, r5
   13164:	mov	r0, r6
   13168:	add	r4, r4, #1
   1316c:	bl	14198 <table_cell_destroy@@Base>
   13170:	b	13140 <table_row_destroy@@Base+0x1c>

00013174 <table_get_row_length@@Base>:
   13174:	ldr	r0, [r0, #20]
   13178:	bx	lr

0001317c <table_add_row@@Base>:
   1317c:	ldr	r2, [r0, #20]
   13180:	push	{r4, r5, r6, r7, r8, lr}
   13184:	mov	r4, r0
   13188:	ldr	r1, [r0, #24]
   1318c:	udiv	r3, r2, r1
   13190:	mls	r3, r1, r3, r2
   13194:	cmp	r3, #0
   13198:	bne	131b8 <table_add_row@@Base+0x3c>
   1319c:	ldr	r3, [r4, #28]
   131a0:	ldr	r0, [r0, #16]
   131a4:	add	r1, r1, r3
   131a8:	str	r1, [r4, #28]
   131ac:	lsl	r1, r1, #2
   131b0:	bl	11ab4 <realloc@plt>
   131b4:	str	r0, [r4, #16]
   131b8:	ldr	r6, [r4, #20]
   131bc:	mov	r0, r4
   131c0:	mov	r5, #0
   131c4:	bl	12658 <table_get_column_length@@Base>
   131c8:	mov	r7, r0
   131cc:	mov	r0, r4
   131d0:	mov	r1, r6
   131d4:	bl	13104 <table_row_init@@Base>
   131d8:	cmp	r7, r5
   131dc:	bgt	13204 <table_add_row@@Base+0x88>
   131e0:	mov	r0, r4
   131e4:	mov	r3, #2
   131e8:	ldr	r1, [r4, #20]
   131ec:	mvn	r2, #0
   131f0:	bl	12580 <table_notify@@Base>
   131f4:	ldr	r0, [r4, #20]
   131f8:	add	r3, r0, #1
   131fc:	str	r3, [r4, #20]
   13200:	pop	{r4, r5, r6, r7, r8, pc}
   13204:	mov	r2, r5
   13208:	mov	r1, r6
   1320c:	mov	r0, r4
   13210:	add	r5, r5, #1
   13214:	bl	14184 <table_cell_init@@Base>
   13218:	b	131d8 <table_add_row@@Base+0x5c>

0001321c <table_remove_row@@Base>:
   1321c:	push	{r4, r5, r6, r7, r8, lr}
   13220:	mov	r4, r0
   13224:	mov	r6, r1
   13228:	mov	r5, #0
   1322c:	ldr	r7, [r0, #20]
   13230:	bl	12658 <table_get_column_length@@Base>
   13234:	mov	r8, r0
   13238:	cmp	r8, r5
   1323c:	bgt	132bc <table_remove_row@@Base+0xa0>
   13240:	ldr	r3, [r4, #16]
   13244:	ldr	r0, [r3, r6, lsl #2]
   13248:	cmp	r0, #0
   1324c:	beq	13254 <table_remove_row@@Base+0x38>
   13250:	bl	11a9c <free@plt>
   13254:	mov	r3, r6
   13258:	sub	r7, r7, #1
   1325c:	cmp	r3, r7
   13260:	blt	132f8 <table_remove_row@@Base+0xdc>
   13264:	ldr	r3, [r4, #20]
   13268:	ldr	r2, [r4, #24]
   1326c:	sub	r3, r3, #1
   13270:	udiv	r1, r3, r2
   13274:	str	r3, [r4, #20]
   13278:	mls	r3, r2, r1, r3
   1327c:	cmp	r3, #0
   13280:	bne	132a0 <table_remove_row@@Base+0x84>
   13284:	ldr	r0, [r4, #16]
   13288:	ldr	r1, [r4, #28]
   1328c:	sub	r1, r1, r2
   13290:	str	r1, [r4, #28]
   13294:	lsl	r1, r1, #2
   13298:	bl	11ab4 <realloc@plt>
   1329c:	str	r0, [r4, #16]
   132a0:	mov	r0, r4
   132a4:	mov	r3, #4
   132a8:	mvn	r2, #0
   132ac:	mov	r1, r6
   132b0:	bl	12580 <table_notify@@Base>
   132b4:	mov	r0, #0
   132b8:	pop	{r4, r5, r6, r7, r8, pc}
   132bc:	mov	r1, r5
   132c0:	mov	r0, r4
   132c4:	bl	126b0 <table_get_column_data_type@@Base>
   132c8:	cmp	r0, #23
   132cc:	beq	132f0 <table_remove_row@@Base+0xd4>
   132d0:	mov	r2, r5
   132d4:	mov	r1, r6
   132d8:	mov	r0, r4
   132dc:	bl	1416c <table_get_cell_ptr@@Base>
   132e0:	ldr	r0, [r0]
   132e4:	cmp	r0, #0
   132e8:	beq	132f0 <table_remove_row@@Base+0xd4>
   132ec:	bl	11a9c <free@plt>
   132f0:	add	r5, r5, #1
   132f4:	b	13238 <table_remove_row@@Base+0x1c>
   132f8:	ldr	r2, [r4, #16]
   132fc:	add	r1, r2, r3, lsl #2
   13300:	ldr	r1, [r1, #4]
   13304:	str	r1, [r2, r3, lsl #2]
   13308:	add	r3, r3, #1
   1330c:	b	1325c <table_remove_row@@Base+0x40>

00013310 <table_get_row_ptr@@Base>:
   13310:	ldr	r0, [r0, #16]
   13314:	add	r0, r0, r1, lsl #2
   13318:	bx	lr

0001331c <table_set_row_ptr@@Base>:
   1331c:	ldr	r2, [r2]
   13320:	ldr	r3, [r0, #16]
   13324:	str	r2, [r3, r1, lsl #2]
   13328:	bx	lr

0001332c <table_set@@Base>:
   1332c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13330:	mov	r6, r0
   13334:	mov	r8, r1
   13338:	mov	r7, r2
   1333c:	mov	r5, r3
   13340:	ldr	r9, [sp, #32]
   13344:	bl	1416c <table_get_cell_ptr@@Base>
   13348:	mov	r4, r0
   1334c:	mov	r1, r7
   13350:	mov	r0, r6
   13354:	bl	12930 <table_get_col_ptr@@Base>
   13358:	cmp	r9, #23
   1335c:	ldrls	pc, [pc, r9, lsl #2]
   13360:	b	134b0 <table_set@@Base+0x184>
   13364:	andeq	r3, r1, r0, lsl #8
   13368:	andeq	r3, r1, r4, asr r4
   1336c:	andeq	r3, r1, r0, ror #8
   13370:	andeq	r3, r1, ip, ror #8
   13374:	andeq	r3, r1, r8, ror r4
   13378:			; <UNDEFINED> instruction: 0x000134b8
   1337c:	andeq	r3, r1, r4, asr #9
   13380:	ldrdeq	r3, [r1], -r0
   13384:	ldrdeq	r3, [r1], -ip
   13388:	andeq	r3, r1, ip, lsl r5
   1338c:	andeq	r3, r1, ip, lsr r5
   13390:	andeq	r3, r1, r8, asr #10
   13394:	andeq	r3, r1, r4, asr r5
   13398:	andeq	r3, r1, r0, ror #10
   1339c:	andeq	r3, r1, ip, ror #10
   133a0:	andeq	r3, r1, r8, ror r5
   133a4:	andeq	r3, r1, r4, lsl #11
   133a8:	muleq	r1, r0, r5
   133ac:	muleq	r1, ip, r5
   133b0:	andeq	r3, r1, r0, ror #11
   133b4:	andeq	r3, r1, ip, ror #11
   133b8:	andeq	r3, r1, r8, lsr #11
   133bc:	andeq	r3, r1, r4, asr #7
   133c0:	strdeq	r3, [r1], -r8
   133c4:	ldr	r3, [r0, #4]
   133c8:	cmp	r3, #22
   133cc:	bne	134b0 <table_set@@Base+0x184>
   133d0:	ldr	r3, [r4]
   133d4:	cmp	r3, #0
   133d8:	bne	133e8 <table_set@@Base+0xbc>
   133dc:	mov	r0, #1
   133e0:	bl	11acc <malloc@plt>
   133e4:	str	r0, [r4]
   133e8:	ldr	r3, [r4]
   133ec:	cmp	r3, #0
   133f0:	ldrbne	r2, [r5]
   133f4:	strbne	r2, [r3]
   133f8:	bne	13438 <table_set@@Base+0x10c>
   133fc:	b	134b0 <table_set@@Base+0x184>
   13400:	ldr	r3, [r0, #4]
   13404:	cmp	r3, #0
   13408:	bne	134b0 <table_set@@Base+0x184>
   1340c:	ldr	r3, [r4]
   13410:	cmp	r3, #0
   13414:	bne	13424 <table_set@@Base+0xf8>
   13418:	mov	r0, #4
   1341c:	bl	11acc <malloc@plt>
   13420:	str	r0, [r4]
   13424:	ldr	r3, [r4]
   13428:	cmp	r3, #0
   1342c:	ldrne	r2, [r5]
   13430:	strne	r2, [r3]
   13434:	beq	134b0 <table_set@@Base+0x184>
   13438:	mov	r0, r6
   1343c:	mov	r3, #1
   13440:	mov	r2, r7
   13444:	mov	r1, r8
   13448:	bl	12580 <table_notify@@Base>
   1344c:	mov	r0, #0
   13450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13454:	ldr	r3, [r0, #4]
   13458:	cmp	r3, #1
   1345c:	b	13408 <table_set@@Base+0xdc>
   13460:	ldr	r3, [r0, #4]
   13464:	cmp	r3, #2
   13468:	b	133cc <table_set@@Base+0xa0>
   1346c:	ldr	r3, [r0, #4]
   13470:	cmp	r3, #3
   13474:	b	133cc <table_set@@Base+0xa0>
   13478:	ldr	r3, [r0, #4]
   1347c:	cmp	r3, #4
   13480:	bne	134b0 <table_set@@Base+0x184>
   13484:	ldr	r3, [r4]
   13488:	cmp	r3, #0
   1348c:	bne	1349c <table_set@@Base+0x170>
   13490:	mov	r0, #2
   13494:	bl	11acc <malloc@plt>
   13498:	str	r0, [r4]
   1349c:	ldr	r3, [r4]
   134a0:	cmp	r3, #0
   134a4:	ldrhne	r2, [r5]
   134a8:	strhne	r2, [r3]
   134ac:	bne	13438 <table_set@@Base+0x10c>
   134b0:	mvn	r0, #0
   134b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   134b8:	ldr	r3, [r0, #4]
   134bc:	cmp	r3, #5
   134c0:	b	13480 <table_set@@Base+0x154>
   134c4:	ldr	r3, [r0, #4]
   134c8:	cmp	r3, #6
   134cc:	b	13408 <table_set@@Base+0xdc>
   134d0:	ldr	r3, [r0, #4]
   134d4:	cmp	r3, #7
   134d8:	b	13408 <table_set@@Base+0xdc>
   134dc:	ldr	r0, [r0, #4]
   134e0:	cmp	r0, #8
   134e4:	bne	134b0 <table_set@@Base+0x184>
   134e8:	ldr	r3, [r4]
   134ec:	cmp	r3, #0
   134f0:	bne	134fc <table_set@@Base+0x1d0>
   134f4:	bl	11acc <malloc@plt>
   134f8:	str	r0, [r4]
   134fc:	ldr	r3, [r4]
   13500:	cmp	r3, #0
   13504:	beq	134b0 <table_set@@Base+0x184>
   13508:	ldr	r2, [r5]
   1350c:	str	r2, [r3]
   13510:	ldr	r2, [r5, #4]
   13514:	str	r2, [r3, #4]
   13518:	b	13438 <table_set@@Base+0x10c>
   1351c:	ldr	r3, [r0, #4]
   13520:	cmp	r3, #9
   13524:	bne	134b0 <table_set@@Base+0x184>
   13528:	ldr	r3, [r4]
   1352c:	cmp	r3, #0
   13530:	bne	134fc <table_set@@Base+0x1d0>
   13534:	mov	r0, #8
   13538:	b	134f4 <table_set@@Base+0x1c8>
   1353c:	ldr	r3, [r0, #4]
   13540:	cmp	r3, #10
   13544:	b	13480 <table_set@@Base+0x154>
   13548:	ldr	r3, [r0, #4]
   1354c:	cmp	r3, #11
   13550:	b	13480 <table_set@@Base+0x154>
   13554:	ldr	r3, [r0, #4]
   13558:	cmp	r3, #12
   1355c:	b	13408 <table_set@@Base+0xdc>
   13560:	ldr	r3, [r0, #4]
   13564:	cmp	r3, #13
   13568:	b	13408 <table_set@@Base+0xdc>
   1356c:	ldr	r3, [r0, #4]
   13570:	cmp	r3, #14
   13574:	b	13524 <table_set@@Base+0x1f8>
   13578:	ldr	r3, [r0, #4]
   1357c:	cmp	r3, #15
   13580:	b	13524 <table_set@@Base+0x1f8>
   13584:	ldr	r3, [r0, #4]
   13588:	cmp	r3, #16
   1358c:	b	13408 <table_set@@Base+0xdc>
   13590:	ldr	r3, [r0, #4]
   13594:	cmp	r3, #17
   13598:	b	13524 <table_set@@Base+0x1f8>
   1359c:	ldr	r3, [r0, #4]
   135a0:	cmp	r3, #18
   135a4:	b	13524 <table_set@@Base+0x1f8>
   135a8:	ldr	r3, [r0, #4]
   135ac:	cmp	r3, #21
   135b0:	bne	134b0 <table_set@@Base+0x184>
   135b4:	mov	r0, r5
   135b8:	bl	11af0 <strlen@plt>
   135bc:	add	r1, r0, #1
   135c0:	ldr	r0, [r4]
   135c4:	bl	11ab4 <realloc@plt>
   135c8:	cmp	r0, #0
   135cc:	str	r0, [r4]
   135d0:	beq	134b0 <table_set@@Base+0x184>
   135d4:	mov	r1, r5
   135d8:	bl	11ac0 <strcpy@plt>
   135dc:	b	13438 <table_set@@Base+0x10c>
   135e0:	ldr	r3, [r0, #4]
   135e4:	cmp	r3, #19
   135e8:	b	133cc <table_set@@Base+0xa0>
   135ec:	ldr	r3, [r0, #4]
   135f0:	cmp	r3, #20
   135f4:	b	133cc <table_set@@Base+0xa0>
   135f8:	ldr	r3, [r0, #4]
   135fc:	cmp	r3, #23
   13600:	bne	134b0 <table_set@@Base+0x184>
   13604:	str	r5, [r4]
   13608:	b	13438 <table_set@@Base+0x10c>

0001360c <table_set_bool@@Base>:
   1360c:	push	{r0, r1, r2, r3, r4, lr}
   13610:	strb	r3, [sp, #15]
   13614:	mov	r3, #22
   13618:	str	r3, [sp]
   1361c:	add	r3, sp, #15
   13620:	bl	1332c <table_set@@Base>
   13624:	add	sp, sp, #20
   13628:	pop	{pc}		; (ldr pc, [sp], #4)

0001362c <table_set_int@@Base>:
   1362c:	push	{r0, r1, r2, r3, r4, lr}
   13630:	str	r3, [sp, #12]
   13634:	mov	r3, #0
   13638:	str	r3, [sp]
   1363c:	add	r3, sp, #12
   13640:	bl	1332c <table_set@@Base>
   13644:	add	sp, sp, #20
   13648:	pop	{pc}		; (ldr pc, [sp], #4)

0001364c <table_set_uint@@Base>:
   1364c:	push	{r0, r1, r2, r3, r4, lr}
   13650:	str	r3, [sp, #12]
   13654:	mov	r3, #1
   13658:	str	r3, [sp]
   1365c:	add	r3, sp, #12
   13660:	bl	1332c <table_set@@Base>
   13664:	add	sp, sp, #20
   13668:	pop	{pc}		; (ldr pc, [sp], #4)

0001366c <table_set_int8@@Base>:
   1366c:	push	{r0, r1, r2, r3, r4, lr}
   13670:	strb	r3, [sp, #15]
   13674:	mov	r3, #2
   13678:	str	r3, [sp]
   1367c:	add	r3, sp, #15
   13680:	bl	1332c <table_set@@Base>
   13684:	add	sp, sp, #20
   13688:	pop	{pc}		; (ldr pc, [sp], #4)

0001368c <table_set_uint8@@Base>:
   1368c:	push	{r0, r1, r2, r3, r4, lr}
   13690:	strb	r3, [sp, #15]
   13694:	mov	r3, #3
   13698:	str	r3, [sp]
   1369c:	add	r3, sp, #15
   136a0:	bl	1332c <table_set@@Base>
   136a4:	add	sp, sp, #20
   136a8:	pop	{pc}		; (ldr pc, [sp], #4)

000136ac <table_set_int16@@Base>:
   136ac:	push	{r0, r1, r2, r3, r4, lr}
   136b0:	strh	r3, [sp, #14]
   136b4:	mov	r3, #4
   136b8:	str	r3, [sp]
   136bc:	add	r3, sp, #14
   136c0:	bl	1332c <table_set@@Base>
   136c4:	add	sp, sp, #20
   136c8:	pop	{pc}		; (ldr pc, [sp], #4)

000136cc <table_set_uint16@@Base>:
   136cc:	push	{r0, r1, r2, r3, r4, lr}
   136d0:	strh	r3, [sp, #14]
   136d4:	mov	r3, #5
   136d8:	str	r3, [sp]
   136dc:	add	r3, sp, #14
   136e0:	bl	1332c <table_set@@Base>
   136e4:	add	sp, sp, #20
   136e8:	pop	{pc}		; (ldr pc, [sp], #4)

000136ec <table_set_int32@@Base>:
   136ec:	push	{r0, r1, r2, r3, r4, lr}
   136f0:	str	r3, [sp, #12]
   136f4:	mov	r3, #6
   136f8:	str	r3, [sp]
   136fc:	add	r3, sp, #12
   13700:	bl	1332c <table_set@@Base>
   13704:	add	sp, sp, #20
   13708:	pop	{pc}		; (ldr pc, [sp], #4)

0001370c <table_set_uint32@@Base>:
   1370c:	push	{r0, r1, r2, r3, r4, lr}
   13710:	str	r3, [sp, #12]
   13714:	mov	r3, #7
   13718:	str	r3, [sp]
   1371c:	add	r3, sp, #12
   13720:	bl	1332c <table_set@@Base>
   13724:	add	sp, sp, #20
   13728:	pop	{pc}		; (ldr pc, [sp], #4)

0001372c <table_set_int64@@Base>:
   1372c:	mov	r3, #8
   13730:	push	{r0, r1, r2, lr}
   13734:	str	r3, [sp]
   13738:	add	r3, sp, #16
   1373c:	bl	1332c <table_set@@Base>
   13740:	add	sp, sp, #12
   13744:	pop	{pc}		; (ldr pc, [sp], #4)

00013748 <table_set_uint64@@Base>:
   13748:	mov	r3, #9
   1374c:	push	{r0, r1, r2, lr}
   13750:	str	r3, [sp]
   13754:	add	r3, sp, #16
   13758:	bl	1332c <table_set@@Base>
   1375c:	add	sp, sp, #12
   13760:	pop	{pc}		; (ldr pc, [sp], #4)

00013764 <table_set_short@@Base>:
   13764:	push	{r0, r1, r2, r3, r4, lr}
   13768:	strh	r3, [sp, #14]
   1376c:	mov	r3, #10
   13770:	str	r3, [sp]
   13774:	add	r3, sp, #14
   13778:	bl	1332c <table_set@@Base>
   1377c:	add	sp, sp, #20
   13780:	pop	{pc}		; (ldr pc, [sp], #4)

00013784 <table_set_ushort@@Base>:
   13784:	push	{r0, r1, r2, r3, r4, lr}
   13788:	strh	r3, [sp, #14]
   1378c:	mov	r3, #11
   13790:	str	r3, [sp]
   13794:	add	r3, sp, #14
   13798:	bl	1332c <table_set@@Base>
   1379c:	add	sp, sp, #20
   137a0:	pop	{pc}		; (ldr pc, [sp], #4)

000137a4 <table_set_long@@Base>:
   137a4:	push	{r0, r1, r2, r3, r4, lr}
   137a8:	str	r3, [sp, #12]
   137ac:	mov	r3, #12
   137b0:	str	r3, [sp]
   137b4:	add	r3, sp, r3
   137b8:	bl	1332c <table_set@@Base>
   137bc:	add	sp, sp, #20
   137c0:	pop	{pc}		; (ldr pc, [sp], #4)

000137c4 <table_set_ulong@@Base>:
   137c4:	push	{r0, r1, r2, r3, r4, lr}
   137c8:	str	r3, [sp, #12]
   137cc:	mov	r3, #13
   137d0:	str	r3, [sp]
   137d4:	add	r3, sp, #12
   137d8:	bl	1332c <table_set@@Base>
   137dc:	add	sp, sp, #20
   137e0:	pop	{pc}		; (ldr pc, [sp], #4)

000137e4 <table_set_llong@@Base>:
   137e4:	mov	r3, #14
   137e8:	push	{r0, r1, r2, lr}
   137ec:	str	r3, [sp]
   137f0:	add	r3, sp, #16
   137f4:	bl	1332c <table_set@@Base>
   137f8:	add	sp, sp, #12
   137fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013800 <table_set_ullong@@Base>:
   13800:	mov	r3, #15
   13804:	push	{r0, r1, r2, lr}
   13808:	str	r3, [sp]
   1380c:	add	r3, sp, #16
   13810:	bl	1332c <table_set@@Base>
   13814:	add	sp, sp, #12
   13818:	pop	{pc}		; (ldr pc, [sp], #4)

0001381c <table_set_float@@Base>:
   1381c:	push	{r0, r1, r2, r3, r4, lr}
   13820:	mov	r3, #16
   13824:	str	r3, [sp]
   13828:	add	r3, sp, #12
   1382c:	vstr	s0, [sp, #12]
   13830:	bl	1332c <table_set@@Base>
   13834:	add	sp, sp, #20
   13838:	pop	{pc}		; (ldr pc, [sp], #4)

0001383c <table_set_double@@Base>:
   1383c:	push	{r0, r1, r2, r3, r4, lr}
   13840:	mov	r3, #17
   13844:	str	r3, [sp]
   13848:	add	r3, sp, #8
   1384c:	vstr	d0, [sp, #8]
   13850:	bl	1332c <table_set@@Base>
   13854:	add	sp, sp, #20
   13858:	pop	{pc}		; (ldr pc, [sp], #4)

0001385c <table_set_ldouble@@Base>:
   1385c:	push	{r0, r1, r2, r3, r4, lr}
   13860:	mov	r3, #18
   13864:	str	r3, [sp]
   13868:	add	r3, sp, #8
   1386c:	vstr	d0, [sp, #8]
   13870:	bl	1332c <table_set@@Base>
   13874:	add	sp, sp, #20
   13878:	pop	{pc}		; (ldr pc, [sp], #4)

0001387c <table_set_string@@Base>:
   1387c:	mov	ip, #21
   13880:	push	{r0, r1, r2, lr}
   13884:	str	ip, [sp]
   13888:	bl	1332c <table_set@@Base>
   1388c:	add	sp, sp, #12
   13890:	pop	{pc}		; (ldr pc, [sp], #4)

00013894 <table_set_char@@Base>:
   13894:	push	{r0, r1, r2, r3, r4, lr}
   13898:	strb	r3, [sp, #15]
   1389c:	mov	r3, #19
   138a0:	str	r3, [sp]
   138a4:	add	r3, sp, #15
   138a8:	bl	1332c <table_set@@Base>
   138ac:	add	sp, sp, #20
   138b0:	pop	{pc}		; (ldr pc, [sp], #4)

000138b4 <table_set_uchar@@Base>:
   138b4:	push	{r0, r1, r2, r3, r4, lr}
   138b8:	strb	r3, [sp, #15]
   138bc:	mov	r3, #20
   138c0:	str	r3, [sp]
   138c4:	add	r3, sp, #15
   138c8:	bl	1332c <table_set@@Base>
   138cc:	add	sp, sp, #20
   138d0:	pop	{pc}		; (ldr pc, [sp], #4)

000138d4 <table_set_ptr@@Base>:
   138d4:	mov	ip, #23
   138d8:	push	{r0, r1, r2, lr}
   138dc:	str	ip, [sp]
   138e0:	bl	1332c <table_set@@Base>
   138e4:	add	sp, sp, #12
   138e8:	pop	{pc}		; (ldr pc, [sp], #4)

000138ec <table_cell_to_buffer@@Base>:
   138ec:	push	{r4, r5, r6, r7, lr}
   138f0:	sub	sp, sp, #20
   138f4:	mov	r7, r1
   138f8:	mov	r1, r2
   138fc:	mov	r6, r0
   13900:	mov	r4, r3
   13904:	str	r2, [sp, #12]
   13908:	ldr	r5, [sp, #40]	; 0x28
   1390c:	bl	126b0 <table_get_column_data_type@@Base>
   13910:	ldr	r2, [sp, #12]
   13914:	cmp	r0, #23
   13918:	ldrls	pc, [pc, r0, lsl #2]
   1391c:	b	13a3c <table_cell_to_buffer@@Base+0x150>
   13920:	andeq	r3, r1, r0, lsl #19
   13924:	muleq	r1, r8, r9
   13928:			; <UNDEFINED> instruction: 0x000139bc
   1392c:	andeq	r3, r1, ip, asr #19
   13930:	ldrdeq	r3, [r1], -ip
   13934:	andeq	r3, r1, ip, ror #19
   13938:	strdeq	r3, [r1], -ip
   1393c:	andeq	r3, r1, ip, lsl #20
   13940:	andeq	r3, r1, ip, lsl sl
   13944:	andeq	r3, r1, r8, asr #20
   13948:	andeq	r3, r1, r0, ror #20
   1394c:	andeq	r3, r1, r8, ror sl
   13950:	muleq	r1, r0, sl
   13954:	andeq	r3, r1, r8, lsr #21
   13958:	andeq	r3, r1, r0, asr #21
   1395c:	ldrdeq	r3, [r1], -r0
   13960:	strdeq	r3, [r1], -r8
   13964:	andeq	r3, r1, r0, lsr #22
   13968:	andeq	r3, r1, r8, lsr fp
   1396c:	andeq	r3, r1, r0, ror #22
   13970:	andeq	r3, r1, r8, ror fp
   13974:	andeq	r3, r1, r0, ror #21
   13978:	andeq	r3, r1, r0, asr fp
   1397c:	andeq	r3, r1, r8, lsl #23
   13980:	mov	r1, r7
   13984:	mov	r0, r6
   13988:	bl	1300c <table_get_int@@Base>
   1398c:	mov	r3, r0
   13990:	ldr	r2, [pc, #520]	; 13ba0 <table_cell_to_buffer@@Base+0x2b4>
   13994:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13998:	mov	r1, r7
   1399c:	mov	r0, r6
   139a0:	bl	1301c <table_get_uint@@Base>
   139a4:	ldr	r2, [pc, #504]	; 13ba4 <table_cell_to_buffer@@Base+0x2b8>
   139a8:	mov	r3, r0
   139ac:	mov	r1, r5
   139b0:	mov	r0, r4
   139b4:	bl	11b08 <snprintf@plt>
   139b8:	b	13a3c <table_cell_to_buffer@@Base+0x150>
   139bc:	mov	r1, r7
   139c0:	mov	r0, r6
   139c4:	bl	1302c <table_get_int8@@Base>
   139c8:	b	1398c <table_cell_to_buffer@@Base+0xa0>
   139cc:	mov	r1, r7
   139d0:	mov	r0, r6
   139d4:	bl	1303c <table_get_uint8@@Base>
   139d8:	b	139a4 <table_cell_to_buffer@@Base+0xb8>
   139dc:	mov	r1, r7
   139e0:	mov	r0, r6
   139e4:	bl	1304c <table_get_int16@@Base>
   139e8:	b	1398c <table_cell_to_buffer@@Base+0xa0>
   139ec:	mov	r1, r7
   139f0:	mov	r0, r6
   139f4:	bl	1305c <table_get_uint16@@Base>
   139f8:	b	139a4 <table_cell_to_buffer@@Base+0xb8>
   139fc:	mov	r1, r7
   13a00:	mov	r0, r6
   13a04:	bl	1306c <table_get_int32@@Base>
   13a08:	b	1398c <table_cell_to_buffer@@Base+0xa0>
   13a0c:	mov	r1, r7
   13a10:	mov	r0, r6
   13a14:	bl	13070 <table_get_uint32@@Base>
   13a18:	b	139a4 <table_cell_to_buffer@@Base+0xb8>
   13a1c:	mov	r1, r7
   13a20:	mov	r0, r6
   13a24:	bl	13074 <table_get_int64@@Base>
   13a28:	ldr	r2, [pc, #376]	; 13ba8 <table_cell_to_buffer@@Base+0x2bc>
   13a2c:	strd	r0, [sp]
   13a30:	mov	r1, r5
   13a34:	mov	r0, r4
   13a38:	bl	11b08 <snprintf@plt>
   13a3c:	mov	r0, #0
   13a40:	add	sp, sp, #20
   13a44:	pop	{r4, r5, r6, r7, pc}
   13a48:	mov	r1, r7
   13a4c:	mov	r0, r6
   13a50:	bl	13084 <table_get_uint64@@Base>
   13a54:	ldr	r2, [pc, #336]	; 13bac <table_cell_to_buffer@@Base+0x2c0>
   13a58:	strd	r0, [sp]
   13a5c:	b	13a30 <table_cell_to_buffer@@Base+0x144>
   13a60:	mov	r1, r7
   13a64:	mov	r0, r6
   13a68:	bl	13094 <table_get_short@@Base>
   13a6c:	mov	r3, r0
   13a70:	ldr	r2, [pc, #312]	; 13bb0 <table_cell_to_buffer@@Base+0x2c4>
   13a74:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13a78:	mov	r1, r7
   13a7c:	mov	r0, r6
   13a80:	bl	13098 <table_get_ushort@@Base>
   13a84:	mov	r3, r0
   13a88:	ldr	r2, [pc, #292]	; 13bb4 <table_cell_to_buffer@@Base+0x2c8>
   13a8c:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13a90:	mov	r1, r7
   13a94:	mov	r0, r6
   13a98:	bl	1309c <table_get_long@@Base>
   13a9c:	mov	r3, r0
   13aa0:	ldr	r2, [pc, #272]	; 13bb8 <table_cell_to_buffer@@Base+0x2cc>
   13aa4:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13aa8:	mov	r1, r7
   13aac:	mov	r0, r6
   13ab0:	bl	130ac <table_get_ulong@@Base>
   13ab4:	mov	r3, r0
   13ab8:	ldr	r2, [pc, #252]	; 13bbc <table_cell_to_buffer@@Base+0x2d0>
   13abc:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13ac0:	mov	r1, r7
   13ac4:	mov	r0, r6
   13ac8:	bl	130bc <table_get_llong@@Base>
   13acc:	b	13a28 <table_cell_to_buffer@@Base+0x13c>
   13ad0:	mov	r1, r7
   13ad4:	mov	r0, r6
   13ad8:	bl	130c0 <table_get_ullong@@Base>
   13adc:	b	13a54 <table_cell_to_buffer@@Base+0x168>
   13ae0:	mov	r1, r7
   13ae4:	mov	r0, r6
   13ae8:	bl	130fc <table_get_string@@Base>
   13aec:	mov	r3, r0
   13af0:	ldr	r2, [pc, #200]	; 13bc0 <table_cell_to_buffer@@Base+0x2d4>
   13af4:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13af8:	mov	r1, r7
   13afc:	mov	r0, r6
   13b00:	bl	130c4 <table_get_float@@Base>
   13b04:	vcvt.f64.f32	d0, s0
   13b08:	ldr	r2, [pc, #180]	; 13bc4 <table_cell_to_buffer@@Base+0x2d8>
   13b0c:	vstr	d0, [sp]
   13b10:	mov	r1, r5
   13b14:	mov	r0, r4
   13b18:	bl	11b08 <snprintf@plt>
   13b1c:	b	13a3c <table_cell_to_buffer@@Base+0x150>
   13b20:	mov	r1, r7
   13b24:	mov	r0, r6
   13b28:	bl	130d4 <table_get_double@@Base>
   13b2c:	ldr	r2, [pc, #148]	; 13bc8 <table_cell_to_buffer@@Base+0x2dc>
   13b30:	vstr	d0, [sp]
   13b34:	b	13b10 <table_cell_to_buffer@@Base+0x224>
   13b38:	mov	r1, r7
   13b3c:	mov	r0, r6
   13b40:	bl	130e4 <table_get_ldouble@@Base>
   13b44:	ldr	r2, [pc, #128]	; 13bcc <table_cell_to_buffer@@Base+0x2e0>
   13b48:	vstr	d0, [sp]
   13b4c:	b	13b10 <table_cell_to_buffer@@Base+0x224>
   13b50:	mov	r1, r7
   13b54:	mov	r0, r6
   13b58:	bl	12ffc <table_get_bool@@Base>
   13b5c:	b	1398c <table_cell_to_buffer@@Base+0xa0>
   13b60:	mov	r1, r7
   13b64:	mov	r0, r6
   13b68:	bl	130f4 <table_get_char@@Base>
   13b6c:	mov	r3, r0
   13b70:	ldr	r2, [pc, #88]	; 13bd0 <table_cell_to_buffer@@Base+0x2e4>
   13b74:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13b78:	mov	r1, r7
   13b7c:	mov	r0, r6
   13b80:	bl	130f8 <table_get_uchar@@Base>
   13b84:	b	13b6c <table_cell_to_buffer@@Base+0x280>
   13b88:	mov	r1, r7
   13b8c:	mov	r0, r6
   13b90:	bl	13100 <table_get_ptr@@Base>
   13b94:	mov	r3, r0
   13b98:	ldr	r2, [pc, #52]	; 13bd4 <table_cell_to_buffer@@Base+0x2e8>
   13b9c:	b	139ac <table_cell_to_buffer@@Base+0xc0>
   13ba0:	ldrdeq	r4, [r1], -r8
   13ba4:	ldrdeq	r4, [r1], -fp
   13ba8:	ldrdeq	r4, [r1], -lr
   13bac:	andeq	r4, r1, r3, ror #5
   13bb0:	andeq	r4, r1, r8, ror #5
   13bb4:	andeq	r4, r1, ip, ror #5
   13bb8:	strdeq	r4, [r1], -r0
   13bbc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13bc0:	strdeq	r4, [r1], -r8
   13bc4:	strdeq	r4, [r1], -fp
   13bc8:	strdeq	r4, [r1], -lr
   13bcc:	andeq	r4, r1, r2, lsl #6
   13bd0:	andeq	r4, r1, r6, lsl #6
   13bd4:	andeq	r4, r1, r9, lsl #6

00013bd8 <table_cell_from_buffer@@Base>:
   13bd8:	push	{r4, r5, r6, r7, lr}
   13bdc:	mov	r7, r1
   13be0:	sub	sp, sp, #268	; 0x10c
   13be4:	mov	r1, r2
   13be8:	mov	r6, r0
   13bec:	mov	r5, r2
   13bf0:	mov	r4, r3
   13bf4:	bl	126b0 <table_get_column_data_type@@Base>
   13bf8:	cmp	r0, #23
   13bfc:	ldrls	pc, [pc, r0, lsl #2]
   13c00:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13c04:	andeq	r3, r1, r4, ror #24
   13c08:	muleq	r1, r8, ip
   13c0c:	andeq	r3, r1, r8, asr #25
   13c10:	strdeq	r3, [r1], -r8
   13c14:	andeq	r3, r1, r8, lsr #26
   13c18:	andeq	r3, r1, r8, asr sp
   13c1c:	andeq	r3, r1, r8, lsl #27
   13c20:			; <UNDEFINED> instruction: 0x00013db8
   13c24:	andeq	r3, r1, r8, ror #27
   13c28:	andeq	r3, r1, ip, lsl lr
   13c2c:	andeq	r3, r1, r0, asr lr
   13c30:	andeq	r3, r1, r0, lsl #29
   13c34:			; <UNDEFINED> instruction: 0x00013eb0
   13c38:	andeq	r3, r1, r0, ror #29
   13c3c:	andeq	r3, r1, r0, lsl pc
   13c40:	andeq	r3, r1, r4, asr #30
   13c44:	andeq	r3, r1, r8, lsr #31
   13c48:	ldrdeq	r3, [r1], -r8
   13c4c:	andeq	r4, r1, r8
   13c50:	muleq	r1, r4, r0
   13c54:	andeq	r4, r1, r4, asr #1
   13c58:	andeq	r3, r1, r8, ror pc
   13c5c:	andeq	r4, r1, r8, lsr r0
   13c60:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13c64:	add	r2, sp, #8
   13c68:	ldr	r1, [pc, #1212]	; 1412c <table_cell_from_buffer@@Base+0x554>
   13c6c:	mov	r0, r4
   13c70:	bl	11b14 <__isoc99_sscanf@plt>
   13c74:	cmp	r0, #1
   13c78:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13c7c:	mov	r2, r5
   13c80:	mov	r1, r7
   13c84:	ldr	r3, [sp, #8]
   13c88:	mov	r0, r6
   13c8c:	bl	1362c <table_set_int@@Base>
   13c90:	mov	r4, #0
   13c94:	b	14088 <table_cell_from_buffer@@Base+0x4b0>
   13c98:	add	r2, sp, #8
   13c9c:	ldr	r1, [pc, #1164]	; 14130 <table_cell_from_buffer@@Base+0x558>
   13ca0:	mov	r0, r4
   13ca4:	bl	11b14 <__isoc99_sscanf@plt>
   13ca8:	cmp	r0, #1
   13cac:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13cb0:	mov	r2, r5
   13cb4:	mov	r1, r7
   13cb8:	ldr	r3, [sp, #8]
   13cbc:	mov	r0, r6
   13cc0:	bl	1364c <table_set_uint@@Base>
   13cc4:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13cc8:	add	r2, sp, #8
   13ccc:	ldr	r1, [pc, #1120]	; 14134 <table_cell_from_buffer@@Base+0x55c>
   13cd0:	mov	r0, r4
   13cd4:	bl	11b14 <__isoc99_sscanf@plt>
   13cd8:	cmp	r0, #1
   13cdc:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13ce0:	ldrsb	r3, [sp, #8]
   13ce4:	mov	r2, r5
   13ce8:	mov	r1, r7
   13cec:	mov	r0, r6
   13cf0:	bl	1366c <table_set_int8@@Base>
   13cf4:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13cf8:	add	r2, sp, #8
   13cfc:	ldr	r1, [pc, #1076]	; 14138 <table_cell_from_buffer@@Base+0x560>
   13d00:	mov	r0, r4
   13d04:	bl	11b14 <__isoc99_sscanf@plt>
   13d08:	cmp	r0, #1
   13d0c:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13d10:	ldrb	r3, [sp, #8]
   13d14:	mov	r2, r5
   13d18:	mov	r1, r7
   13d1c:	mov	r0, r6
   13d20:	bl	1368c <table_set_uint8@@Base>
   13d24:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13d28:	add	r2, sp, #8
   13d2c:	ldr	r1, [pc, #1032]	; 1413c <table_cell_from_buffer@@Base+0x564>
   13d30:	mov	r0, r4
   13d34:	bl	11b14 <__isoc99_sscanf@plt>
   13d38:	cmp	r0, #1
   13d3c:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13d40:	ldrsh	r3, [sp, #8]
   13d44:	mov	r2, r5
   13d48:	mov	r1, r7
   13d4c:	mov	r0, r6
   13d50:	bl	136ac <table_set_int16@@Base>
   13d54:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13d58:	add	r2, sp, #8
   13d5c:	ldr	r1, [pc, #988]	; 14140 <table_cell_from_buffer@@Base+0x568>
   13d60:	mov	r0, r4
   13d64:	bl	11b14 <__isoc99_sscanf@plt>
   13d68:	cmp	r0, #1
   13d6c:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13d70:	ldrh	r3, [sp, #8]
   13d74:	mov	r2, r5
   13d78:	mov	r1, r7
   13d7c:	mov	r0, r6
   13d80:	bl	136cc <table_set_uint16@@Base>
   13d84:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13d88:	add	r2, sp, #8
   13d8c:	ldr	r1, [pc, #920]	; 1412c <table_cell_from_buffer@@Base+0x554>
   13d90:	mov	r0, r4
   13d94:	bl	11b14 <__isoc99_sscanf@plt>
   13d98:	cmp	r0, #1
   13d9c:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13da0:	mov	r2, r5
   13da4:	mov	r1, r7
   13da8:	ldr	r3, [sp, #8]
   13dac:	mov	r0, r6
   13db0:	bl	136ec <table_set_int32@@Base>
   13db4:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13db8:	add	r2, sp, #8
   13dbc:	ldr	r1, [pc, #876]	; 14130 <table_cell_from_buffer@@Base+0x558>
   13dc0:	mov	r0, r4
   13dc4:	bl	11b14 <__isoc99_sscanf@plt>
   13dc8:	cmp	r0, #1
   13dcc:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13dd0:	mov	r2, r5
   13dd4:	mov	r1, r7
   13dd8:	ldr	r3, [sp, #8]
   13ddc:	mov	r0, r6
   13de0:	bl	1370c <table_set_uint32@@Base>
   13de4:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13de8:	add	r2, sp, #8
   13dec:	ldr	r1, [pc, #848]	; 14144 <table_cell_from_buffer@@Base+0x56c>
   13df0:	mov	r0, r4
   13df4:	bl	11b14 <__isoc99_sscanf@plt>
   13df8:	cmp	r0, #1
   13dfc:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13e00:	ldrd	r2, [sp, #8]
   13e04:	mov	r1, r7
   13e08:	mov	r0, r6
   13e0c:	strd	r2, [sp]
   13e10:	mov	r2, r5
   13e14:	bl	1372c <table_set_int64@@Base>
   13e18:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13e1c:	add	r2, sp, #8
   13e20:	ldr	r1, [pc, #800]	; 14148 <table_cell_from_buffer@@Base+0x570>
   13e24:	mov	r0, r4
   13e28:	bl	11b14 <__isoc99_sscanf@plt>
   13e2c:	cmp	r0, #1
   13e30:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13e34:	ldrd	r2, [sp, #8]
   13e38:	mov	r1, r7
   13e3c:	mov	r0, r6
   13e40:	strd	r2, [sp]
   13e44:	mov	r2, r5
   13e48:	bl	13748 <table_set_uint64@@Base>
   13e4c:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13e50:	add	r2, sp, #8
   13e54:	ldr	r1, [pc, #736]	; 1413c <table_cell_from_buffer@@Base+0x564>
   13e58:	mov	r0, r4
   13e5c:	bl	11b14 <__isoc99_sscanf@plt>
   13e60:	cmp	r0, #1
   13e64:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13e68:	ldrsh	r3, [sp, #8]
   13e6c:	mov	r2, r5
   13e70:	mov	r1, r7
   13e74:	mov	r0, r6
   13e78:	bl	13764 <table_set_short@@Base>
   13e7c:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13e80:	add	r2, sp, #8
   13e84:	ldr	r1, [pc, #692]	; 14140 <table_cell_from_buffer@@Base+0x568>
   13e88:	mov	r0, r4
   13e8c:	bl	11b14 <__isoc99_sscanf@plt>
   13e90:	cmp	r0, #1
   13e94:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13e98:	ldrh	r3, [sp, #8]
   13e9c:	mov	r2, r5
   13ea0:	mov	r1, r7
   13ea4:	mov	r0, r6
   13ea8:	bl	13784 <table_set_ushort@@Base>
   13eac:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13eb0:	add	r2, sp, #8
   13eb4:	ldr	r1, [pc, #656]	; 1414c <table_cell_from_buffer@@Base+0x574>
   13eb8:	mov	r0, r4
   13ebc:	bl	11b14 <__isoc99_sscanf@plt>
   13ec0:	cmp	r0, #1
   13ec4:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13ec8:	mov	r2, r5
   13ecc:	mov	r1, r7
   13ed0:	ldr	r3, [sp, #8]
   13ed4:	mov	r0, r6
   13ed8:	bl	137a4 <table_set_long@@Base>
   13edc:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13ee0:	add	r2, sp, #8
   13ee4:	ldr	r1, [pc, #612]	; 14150 <table_cell_from_buffer@@Base+0x578>
   13ee8:	mov	r0, r4
   13eec:	bl	11b14 <__isoc99_sscanf@plt>
   13ef0:	cmp	r0, #1
   13ef4:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13ef8:	mov	r2, r5
   13efc:	mov	r1, r7
   13f00:	ldr	r3, [sp, #8]
   13f04:	mov	r0, r6
   13f08:	bl	137c4 <table_set_ulong@@Base>
   13f0c:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13f10:	add	r2, sp, #8
   13f14:	ldr	r1, [pc, #552]	; 14144 <table_cell_from_buffer@@Base+0x56c>
   13f18:	mov	r0, r4
   13f1c:	bl	11b14 <__isoc99_sscanf@plt>
   13f20:	cmp	r0, #1
   13f24:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13f28:	ldrd	r2, [sp, #8]
   13f2c:	mov	r1, r7
   13f30:	mov	r0, r6
   13f34:	strd	r2, [sp]
   13f38:	mov	r2, r5
   13f3c:	bl	137e4 <table_set_llong@@Base>
   13f40:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13f44:	add	r2, sp, #8
   13f48:	ldr	r1, [pc, #504]	; 14148 <table_cell_from_buffer@@Base+0x570>
   13f4c:	mov	r0, r4
   13f50:	bl	11b14 <__isoc99_sscanf@plt>
   13f54:	cmp	r0, #1
   13f58:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13f5c:	ldrd	r2, [sp, #8]
   13f60:	mov	r1, r7
   13f64:	mov	r0, r6
   13f68:	strd	r2, [sp]
   13f6c:	mov	r2, r5
   13f70:	bl	13800 <table_set_ullong@@Base>
   13f74:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13f78:	add	r2, sp, #8
   13f7c:	ldr	r1, [pc, #464]	; 14154 <table_cell_from_buffer@@Base+0x57c>
   13f80:	mov	r0, r4
   13f84:	bl	11b14 <__isoc99_sscanf@plt>
   13f88:	cmp	r0, #1
   13f8c:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13f90:	add	r3, sp, #8
   13f94:	mov	r2, r5
   13f98:	mov	r1, r7
   13f9c:	mov	r0, r6
   13fa0:	bl	1387c <table_set_string@@Base>
   13fa4:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13fa8:	add	r2, sp, #8
   13fac:	ldr	r1, [pc, #420]	; 14158 <table_cell_from_buffer@@Base+0x580>
   13fb0:	mov	r0, r4
   13fb4:	bl	11b14 <__isoc99_sscanf@plt>
   13fb8:	cmp	r0, #1
   13fbc:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13fc0:	mov	r2, r5
   13fc4:	mov	r1, r7
   13fc8:	vldr	s0, [sp, #8]
   13fcc:	mov	r0, r6
   13fd0:	bl	1381c <table_set_float@@Base>
   13fd4:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   13fd8:	add	r2, sp, #8
   13fdc:	ldr	r1, [pc, #376]	; 1415c <table_cell_from_buffer@@Base+0x584>
   13fe0:	mov	r0, r4
   13fe4:	bl	11b14 <__isoc99_sscanf@plt>
   13fe8:	cmp	r0, #1
   13fec:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   13ff0:	mov	r2, r5
   13ff4:	mov	r1, r7
   13ff8:	vldr	d0, [sp, #8]
   13ffc:	mov	r0, r6
   14000:	bl	1383c <table_set_double@@Base>
   14004:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   14008:	add	r2, sp, #8
   1400c:	ldr	r1, [pc, #332]	; 14160 <table_cell_from_buffer@@Base+0x588>
   14010:	mov	r0, r4
   14014:	bl	11b14 <__isoc99_sscanf@plt>
   14018:	cmp	r0, #1
   1401c:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   14020:	mov	r2, r5
   14024:	mov	r1, r7
   14028:	vldr	d0, [sp, #8]
   1402c:	mov	r0, r6
   14030:	bl	1385c <table_set_ldouble@@Base>
   14034:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   14038:	add	r2, sp, #8
   1403c:	ldr	r1, [pc, #232]	; 1412c <table_cell_from_buffer@@Base+0x554>
   14040:	mov	r0, r4
   14044:	bl	11b14 <__isoc99_sscanf@plt>
   14048:	cmp	r0, #1
   1404c:	mov	r3, r0
   14050:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   14054:	ldr	r4, [sp, #8]
   14058:	cmp	r4, #0
   1405c:	beq	14074 <table_cell_from_buffer@@Base+0x49c>
   14060:	mov	r2, r5
   14064:	mov	r1, r7
   14068:	mov	r0, r6
   1406c:	bl	1360c <table_set_bool@@Base>
   14070:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   14074:	mov	r3, r4
   14078:	mov	r2, r5
   1407c:	mov	r1, r7
   14080:	mov	r0, r6
   14084:	bl	1360c <table_set_bool@@Base>
   14088:	mov	r0, r4
   1408c:	add	sp, sp, #268	; 0x10c
   14090:	pop	{r4, r5, r6, r7, pc}
   14094:	add	r2, sp, #8
   14098:	ldr	r1, [pc, #196]	; 14164 <table_cell_from_buffer@@Base+0x58c>
   1409c:	mov	r0, r4
   140a0:	bl	11b14 <__isoc99_sscanf@plt>
   140a4:	cmp	r0, #1
   140a8:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   140ac:	ldrb	r3, [sp, #8]
   140b0:	mov	r2, r5
   140b4:	mov	r1, r7
   140b8:	mov	r0, r6
   140bc:	bl	13894 <table_set_char@@Base>
   140c0:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   140c4:	add	r2, sp, #8
   140c8:	ldr	r1, [pc, #148]	; 14164 <table_cell_from_buffer@@Base+0x58c>
   140cc:	mov	r0, r4
   140d0:	bl	11b14 <__isoc99_sscanf@plt>
   140d4:	cmp	r0, #1
   140d8:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   140dc:	ldrb	r3, [sp, #8]
   140e0:	mov	r2, r5
   140e4:	mov	r1, r7
   140e8:	mov	r0, r6
   140ec:	bl	138b4 <table_set_uchar@@Base>
   140f0:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   140f4:	add	r2, sp, #8
   140f8:	ldr	r1, [pc, #104]	; 14168 <table_cell_from_buffer@@Base+0x590>
   140fc:	mov	r0, r4
   14100:	bl	11b14 <__isoc99_sscanf@plt>
   14104:	cmp	r0, #1
   14108:	bne	14124 <table_cell_from_buffer@@Base+0x54c>
   1410c:	mov	r2, r5
   14110:	mov	r1, r7
   14114:	ldr	r3, [sp, #8]
   14118:	mov	r0, r6
   1411c:	bl	138d4 <table_set_ptr@@Base>
   14120:	b	13c90 <table_cell_from_buffer@@Base+0xb8>
   14124:	mvn	r4, #0
   14128:	b	14088 <table_cell_from_buffer@@Base+0x4b0>
   1412c:	ldrdeq	r4, [r1], -r8
   14130:	ldrdeq	r4, [r1], -fp
   14134:	andeq	r4, r1, ip, lsl #6
   14138:	andeq	r4, r1, r1, lsl r3
   1413c:	andeq	r4, r1, r8, ror #5
   14140:	andeq	r4, r1, ip, ror #5
   14144:	ldrdeq	r4, [r1], -lr
   14148:	andeq	r4, r1, r3, ror #5
   1414c:	strdeq	r4, [r1], -r0
   14150:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14154:	strdeq	r4, [r1], -r8
   14158:	strdeq	r4, [r1], -fp
   1415c:	strdeq	r4, [r1], -lr
   14160:	andeq	r4, r1, r2, lsl #6
   14164:	andeq	r4, r1, r6, lsl #6
   14168:	andeq	r4, r1, r9, lsl #6

0001416c <table_get_cell_ptr@@Base>:
   1416c:	push	{r4, lr}
   14170:	mov	r4, r2
   14174:	bl	13310 <table_get_row_ptr@@Base>
   14178:	ldr	r0, [r0]
   1417c:	add	r0, r0, r4, lsl #2
   14180:	pop	{r4, pc}

00014184 <table_cell_init@@Base>:
   14184:	push	{r4, lr}
   14188:	bl	1416c <table_get_cell_ptr@@Base>
   1418c:	mov	r3, #0
   14190:	str	r3, [r0]
   14194:	pop	{r4, pc}

00014198 <table_cell_destroy@@Base>:
   14198:	push	{r4, r5, r6, lr}
   1419c:	mov	r6, r1
   141a0:	mov	r1, r2
   141a4:	mov	r5, r0
   141a8:	mov	r4, r2
   141ac:	bl	126b0 <table_get_column_data_type@@Base>
   141b0:	cmp	r0, #23
   141b4:	popeq	{r4, r5, r6, pc}
   141b8:	mov	r2, r4
   141bc:	mov	r1, r6
   141c0:	mov	r0, r5
   141c4:	bl	1416c <table_get_cell_ptr@@Base>
   141c8:	ldr	r0, [r0]
   141cc:	cmp	r0, #0
   141d0:	popeq	{r4, r5, r6, pc}
   141d4:	pop	{r4, r5, r6, lr}
   141d8:	b	11a9c <free@plt>

000141dc <table_cell_nullify@@Base>:
   141dc:	push	{r4, lr}
   141e0:	bl	1416c <table_get_cell_ptr@@Base>
   141e4:	mov	r4, r0
   141e8:	ldr	r0, [r0]
   141ec:	cmp	r0, #0
   141f0:	beq	14200 <table_cell_nullify@@Base+0x24>
   141f4:	bl	11a9c <free@plt>
   141f8:	mov	r3, #0
   141fc:	str	r3, [r4]
   14200:	mov	r0, #0
   14204:	pop	{r4, pc}

00014208 <__libc_csu_init@@Base>:
   14208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1420c:	mov	r7, r0
   14210:	ldr	r6, [pc, #72]	; 14260 <__libc_csu_init@@Base+0x58>
   14214:	ldr	r5, [pc, #72]	; 14264 <__libc_csu_init@@Base+0x5c>
   14218:	add	r6, pc, r6
   1421c:	add	r5, pc, r5
   14220:	sub	r6, r6, r5
   14224:	mov	r8, r1
   14228:	mov	r9, r2
   1422c:	bl	11a70 <strcmp@plt-0x20>
   14230:	asrs	r6, r6, #2
   14234:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14238:	mov	r4, #0
   1423c:	add	r4, r4, #1
   14240:	ldr	r3, [r5], #4
   14244:	mov	r2, r9
   14248:	mov	r1, r8
   1424c:	mov	r0, r7
   14250:	blx	r3
   14254:	cmp	r6, r4
   14258:	bne	1423c <__libc_csu_init@@Base+0x34>
   1425c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14260:	strdeq	r0, [r1], -r4
   14264:	andeq	r0, r1, ip, ror #25

00014268 <__libc_csu_fini@@Base>:
   14268:	bx	lr

Disassembly of section .fini:

0001426c <.fini>:
   1426c:	push	{r3, lr}
   14270:	pop	{r3, pc}
