
../repos/daq-2.0.7/os-daq-modules/.libs/daq_dump.so:     file format elf32-littlearm


Disassembly of section .init:

0000057c <_init>:
 57c:	push	{r3, lr}
 580:	bl	65c <call_weak_fn>
 584:	pop	{r3, pc}

Disassembly of section .plt:

00000588 <.plt>:
 588:	push	{lr}		; (str lr, [sp, #-4]!)
 58c:	ldr	lr, [pc, #4]	; 598 <.plt+0x10>
 590:	add	lr, pc, lr
 594:	ldr	pc, [lr, #8]!
 598:	.word	0x00010a68

0000059c <calloc@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #16, 20	; 0x10000
 5a4:	ldr	pc, [ip, #2664]!	; 0xa68

000005a8 <strcmp@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #16, 20	; 0x10000
 5b0:	ldr	pc, [ip, #2656]!	; 0xa60

000005b4 <__cxa_finalize@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #16, 20	; 0x10000
 5bc:	ldr	pc, [ip, #2648]!	; 0xa58

000005c0 <free@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #16, 20	; 0x10000
 5c8:	ldr	pc, [ip, #2640]!	; 0xa50

000005cc <ferror@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #16, 20	; 0x10000
 5d4:	ldr	pc, [ip, #2632]!	; 0xa48

000005d8 <strdup@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #16, 20	; 0x10000
 5e0:	ldr	pc, [ip, #2624]!	; 0xa40

000005e4 <pcap_close@plt>:
 5e4:	add	ip, pc, #0, 12
 5e8:	add	ip, ip, #16, 20	; 0x10000
 5ec:	ldr	pc, [ip, #2616]!	; 0xa38

000005f0 <strcasecmp@plt>:
 5f0:	add	ip, pc, #0, 12
 5f4:	add	ip, ip, #16, 20	; 0x10000
 5f8:	ldr	pc, [ip, #2608]!	; 0xa30

000005fc <pcap_open_dead@plt>:
 5fc:	add	ip, pc, #0, 12
 600:	add	ip, ip, #16, 20	; 0x10000
 604:	ldr	pc, [ip, #2600]!	; 0xa28

00000608 <pcap_dump@plt>:
 608:	add	ip, pc, #0, 12
 60c:	add	ip, ip, #16, 20	; 0x10000
 610:	ldr	pc, [ip, #2592]!	; 0xa20

00000614 <__gmon_start__@plt>:
 614:	add	ip, pc, #0, 12
 618:	add	ip, ip, #16, 20	; 0x10000
 61c:	ldr	pc, [ip, #2584]!	; 0xa18

00000620 <snprintf@plt>:
 620:	add	ip, pc, #0, 12
 624:	add	ip, ip, #16, 20	; 0x10000
 628:	ldr	pc, [ip, #2576]!	; 0xa10

0000062c <pcap_dump_file@plt>:
 62c:	add	ip, pc, #0, 12
 630:	add	ip, ip, #16, 20	; 0x10000
 634:	ldr	pc, [ip, #2568]!	; 0xa08

00000638 <memset@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #16, 20	; 0x10000
 640:	ldr	pc, [ip, #2560]!	; 0xa00

00000644 <pcap_dump_close@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #16, 20	; 0x10000
 64c:	ldr	pc, [ip, #2552]!	; 0x9f8

00000650 <pcap_dump_open@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #16, 20	; 0x10000
 658:	ldr	pc, [ip, #2544]!	; 0x9f0

Disassembly of section .text:

0000065c <call_weak_fn>:
 65c:	ldr	r3, [pc, #20]	; 678 <call_weak_fn+0x1c>
 660:	ldr	r2, [pc, #20]	; 67c <call_weak_fn+0x20>
 664:	add	r3, pc, r3
 668:	ldr	r2, [r3, r2]
 66c:	cmp	r2, #0
 670:	bxeq	lr
 674:	b	614 <__gmon_start__@plt>
 678:	.word	0x00010994
 67c:	.word	0x00000054

00000680 <deregister_tm_clones>:
 680:	ldr	r3, [pc, #52]	; 6bc <deregister_tm_clones+0x3c>
 684:	ldr	r0, [pc, #52]	; 6c0 <deregister_tm_clones+0x40>
 688:	add	r3, pc, r3
 68c:	add	r0, pc, r0
 690:	add	r3, r3, #3
 694:	sub	r3, r3, r0
 698:	cmp	r3, #6
 69c:	ldr	r3, [pc, #32]	; 6c4 <deregister_tm_clones+0x44>
 6a0:	add	r3, pc, r3
 6a4:	bxls	lr
 6a8:	ldr	r2, [pc, #24]	; 6c8 <deregister_tm_clones+0x48>
 6ac:	ldr	r3, [r3, r2]
 6b0:	cmp	r3, #0
 6b4:	bxeq	lr
 6b8:	bx	r3
 6bc:	.word	0x00010a3c
 6c0:	.word	0x00010a38
 6c4:	.word	0x00010958
 6c8:	.word	0x00000050

000006cc <register_tm_clones>:
 6cc:	ldr	r1, [pc, #56]	; 70c <register_tm_clones+0x40>
 6d0:	ldr	r0, [pc, #56]	; 710 <register_tm_clones+0x44>
 6d4:	add	r1, pc, r1
 6d8:	add	r0, pc, r0
 6dc:	sub	r1, r1, r0
 6e0:	ldr	r3, [pc, #44]	; 714 <register_tm_clones+0x48>
 6e4:	asr	r1, r1, #2
 6e8:	add	r3, pc, r3
 6ec:	add	r1, r1, r1, lsr #31
 6f0:	asrs	r1, r1, #1
 6f4:	bxeq	lr
 6f8:	ldr	r2, [pc, #24]	; 718 <register_tm_clones+0x4c>
 6fc:	ldr	r3, [r3, r2]
 700:	cmp	r3, #0
 704:	bxeq	lr
 708:	bx	r3
 70c:	.word	0x000109f0
 710:	.word	0x000109ec
 714:	.word	0x00010910
 718:	.word	0x0000005c

0000071c <__do_global_dtors_aux>:
 71c:	ldr	r3, [pc, #76]	; 770 <__do_global_dtors_aux+0x54>
 720:	ldr	r2, [pc, #76]	; 774 <__do_global_dtors_aux+0x58>
 724:	add	r3, pc, r3
 728:	add	r2, pc, r2
 72c:	ldrb	r3, [r3]
 730:	cmp	r3, #0
 734:	bxne	lr
 738:	ldr	r3, [pc, #56]	; 778 <__do_global_dtors_aux+0x5c>
 73c:	push	{r4, lr}
 740:	ldr	r3, [r2, r3]
 744:	cmp	r3, #0
 748:	beq	758 <__do_global_dtors_aux+0x3c>
 74c:	ldr	r3, [pc, #40]	; 77c <__do_global_dtors_aux+0x60>
 750:	ldr	r0, [pc, r3]
 754:	bl	5b4 <__cxa_finalize@plt>
 758:	bl	680 <deregister_tm_clones>
 75c:	ldr	r3, [pc, #28]	; 780 <__do_global_dtors_aux+0x64>
 760:	mov	r2, #1
 764:	add	r3, pc, r3
 768:	strb	r2, [r3]
 76c:	pop	{r4, pc}
 770:	.word	0x000109a0
 774:	.word	0x000108d0
 778:	.word	0x0000004c
 77c:	.word	0x00010908
 780:	.word	0x00010960

00000784 <frame_dummy>:
 784:	ldr	r0, [pc, #56]	; 7c4 <frame_dummy+0x40>
 788:	ldr	r3, [pc, #56]	; 7c8 <frame_dummy+0x44>
 78c:	add	r0, pc, r0
 790:	ldr	r2, [r0]
 794:	add	r3, pc, r3
 798:	cmp	r2, #0
 79c:	bne	7a4 <frame_dummy+0x20>
 7a0:	b	6cc <register_tm_clones>
 7a4:	ldr	r2, [pc, #32]	; 7cc <frame_dummy+0x48>
 7a8:	ldr	r3, [r3, r2]
 7ac:	cmp	r3, #0
 7b0:	beq	7a0 <frame_dummy+0x1c>
 7b4:	push	{r4, lr}
 7b8:	blx	r3
 7bc:	pop	{r4, lr}
 7c0:	b	6cc <register_tm_clones>
 7c4:	.word	0x00010778
 7c8:	.word	0x00010864
 7cc:	.word	0x00000058

000007d0 <dump_daq_acquire>:
 7d0:	push	{lr}		; (str lr, [sp, #-4]!)
 7d4:	str	r2, [r0, #16]
 7d8:	ldr	r2, [sp, #4]
 7dc:	str	r2, [r0, #20]
 7e0:	ldr	r2, [r0]
 7e4:	str	r0, [sp, #4]
 7e8:	ldr	r0, [r0, #4]
 7ec:	ldr	lr, [r2, #28]
 7f0:	ldr	r2, [pc, #12]	; 804 <dump_daq_acquire+0x34>
 7f4:	mov	ip, lr
 7f8:	add	r2, pc, r2
 7fc:	pop	{lr}		; (ldr lr, [sp], #4)
 800:	bx	ip
 804:	.word	0x00000158

00000808 <dump_daq_set_filter>:
 808:	ldr	r3, [r0]
 80c:	ldr	r0, [r0, #4]
 810:	ldr	r3, [r3, #20]
 814:	bx	r3

00000818 <dump_daq_breakloop>:
 818:	ldr	r3, [r0]
 81c:	ldr	r0, [r0, #4]
 820:	ldr	r3, [r3, #36]	; 0x24
 824:	bx	r3

00000828 <dump_daq_check_status>:
 828:	ldr	r3, [r0]
 82c:	ldr	r0, [r0, #4]
 830:	ldr	r3, [r3, #48]	; 0x30
 834:	bx	r3

00000838 <dump_daq_get_stats>:
 838:	push	{r4, r5, r6, r7, r8, lr}
 83c:	mov	r4, r0
 840:	ldr	r3, [r0]
 844:	mov	r5, r1
 848:	ldr	r0, [r0, #4]
 84c:	ldr	r3, [r3, #52]	; 0x34
 850:	blx	r3
 854:	add	r3, r4, #64	; 0x40
 858:	add	r2, r5, #40	; 0x28
 85c:	add	r1, r4, #120	; 0x78
 860:	ldrd	r6, [r3], #8
 864:	cmp	r3, r1
 868:	strd	r6, [r2], #8
 86c:	bne	860 <dump_daq_get_stats+0x28>
 870:	ldrd	r2, [r4, #56]	; 0x38
 874:	strd	r2, [r5, #32]
 878:	pop	{r4, r5, r6, r7, r8, pc}

0000087c <dump_daq_get_snaplen>:
 87c:	ldr	r3, [r0]
 880:	ldr	r0, [r0, #4]
 884:	ldr	r3, [r3, #60]	; 0x3c
 888:	bx	r3

0000088c <dump_daq_get_capabilities>:
 88c:	push	{r4, lr}
 890:	ldr	r3, [r0]
 894:	ldr	r0, [r0, #4]
 898:	ldr	r3, [r3, #64]	; 0x40
 89c:	blx	r3
 8a0:	orr	r0, r0, #7
 8a4:	pop	{r4, pc}

000008a8 <dump_daq_get_datalink_type>:
 8a8:	ldr	r3, [r0]
 8ac:	ldr	r0, [r0, #4]
 8b0:	ldr	r3, [r3, #68]	; 0x44
 8b4:	bx	r3

000008b8 <dump_daq_get_errbuf>:
 8b8:	ldr	r3, [r0]
 8bc:	ldr	r0, [r0, #4]
 8c0:	ldr	r3, [r3, #72]	; 0x48
 8c4:	bx	r3

000008c8 <dump_daq_set_errbuf>:
 8c8:	ldr	r3, [r0]
 8cc:	cmp	r1, #0
 8d0:	ldr	r0, [r0, #4]
 8d4:	ldr	r3, [r3, #76]	; 0x4c
 8d8:	ldreq	r1, [pc, #4]	; 8e4 <dump_daq_set_errbuf+0x1c>
 8dc:	addeq	r1, pc, r1
 8e0:	bx	r3
 8e4:	.word	0x0000058c

000008e8 <dump_daq_get_device_index>:
 8e8:	ldr	r3, [r0]
 8ec:	ldr	r0, [r0, #4]
 8f0:	ldr	r3, [r3, #80]	; 0x50
 8f4:	bx	r3

000008f8 <dump_daq_reset_stats>:
 8f8:	push	{r4, lr}
 8fc:	mov	r4, r0
 900:	ldr	r3, [r0]
 904:	ldr	r0, [r0, #4]
 908:	ldr	r3, [r3, #56]	; 0x38
 90c:	blx	r3
 910:	add	r0, r4, #24
 914:	mov	r2, #96	; 0x60
 918:	mov	r1, #0
 91c:	pop	{r4, lr}
 920:	b	638 <memset@plt>

00000924 <dump_daq_shutdown>:
 924:	push	{r4, lr}
 928:	mov	r4, r0
 92c:	ldr	r3, [r0]
 930:	ldr	r0, [r0, #4]
 934:	ldr	r3, [r3, #44]	; 0x2c
 938:	blx	r3
 93c:	ldr	r0, [r4, #12]
 940:	cmp	r0, #0
 944:	beq	94c <dump_daq_shutdown+0x28>
 948:	bl	5c0 <free@plt>
 94c:	mov	r0, r4
 950:	pop	{r4, lr}
 954:	b	5c0 <free@plt>

00000958 <daq_dump_capture>:
 958:	push	{r4, r5, r6, r7, r8, lr}
 95c:	mov	r4, r0
 960:	ldr	r3, [r0, #16]
 964:	ldr	r0, [r0, #20]
 968:	mov	r6, r1
 96c:	mov	r7, r2
 970:	blx	r3
 974:	cmp	r0, #6
 978:	movls	r5, r0
 97c:	movhi	r5, #1
 980:	add	r1, r4, r5, lsl #3
 984:	ldrd	r2, [r1, #64]	; 0x40
 988:	adds	r2, r2, #1
 98c:	adc	r3, r3, #0
 990:	strd	r2, [r1, #64]	; 0x40
 994:	ldr	r3, [pc, #36]	; 9c0 <daq_dump_capture+0x68>
 998:	add	r3, pc, r3
 99c:	ldr	r3, [r3, r5, lsl #2]
 9a0:	cmp	r3, #0
 9a4:	beq	9b8 <daq_dump_capture+0x60>
 9a8:	mov	r2, r7
 9ac:	mov	r1, r6
 9b0:	ldr	r0, [r4, #8]
 9b4:	bl	608 <pcap_dump@plt>
 9b8:	mov	r0, r5
 9bc:	pop	{r4, r5, r6, r7, r8, pc}
 9c0:	.word	0x000003d0

000009c4 <dump_daq_start>:
 9c4:	push	{r4, r5, r6, r7, r8, lr}
 9c8:	mov	r4, r0
 9cc:	ldr	r5, [r0, #12]
 9d0:	cmp	r5, #0
 9d4:	ldreq	r5, [pc, #168]	; a84 <dump_daq_start+0xc0>
 9d8:	addeq	r5, pc, r5
 9dc:	ldr	r3, [r4]
 9e0:	ldr	r0, [r4, #4]
 9e4:	ldr	r3, [r3, #24]
 9e8:	blx	r3
 9ec:	subs	r7, r0, #0
 9f0:	bne	a70 <dump_daq_start+0xac>
 9f4:	ldr	r3, [r4]
 9f8:	ldr	r0, [r4, #4]
 9fc:	ldr	r3, [r3, #68]	; 0x44
 a00:	blx	r3
 a04:	ldr	r3, [r4]
 a08:	ldr	r3, [r3, #60]	; 0x3c
 a0c:	mov	r6, r0
 a10:	ldr	r0, [r4, #4]
 a14:	blx	r3
 a18:	mov	r1, r0
 a1c:	mov	r0, r6
 a20:	bl	5fc <pcap_open_dead@plt>
 a24:	subs	r6, r0, #0
 a28:	moveq	r0, r6
 a2c:	beq	a38 <dump_daq_start+0x74>
 a30:	mov	r1, r5
 a34:	bl	650 <pcap_dump_open@plt>
 a38:	cmp	r0, #0
 a3c:	str	r0, [r4, #8]
 a40:	bne	a78 <dump_daq_start+0xb4>
 a44:	ldr	r3, [r4]
 a48:	ldr	r0, [r4, #4]
 a4c:	mvn	r7, #0
 a50:	ldr	r3, [r3, #40]	; 0x28
 a54:	blx	r3
 a58:	ldr	r3, [r4]
 a5c:	ldr	r1, [pc, #36]	; a88 <dump_daq_start+0xc4>
 a60:	ldr	r0, [r4, #4]
 a64:	ldr	r3, [r3, #76]	; 0x4c
 a68:	add	r1, pc, r1
 a6c:	blx	r3
 a70:	mov	r0, r7
 a74:	pop	{r4, r5, r6, r7, r8, pc}
 a78:	mov	r0, r6
 a7c:	bl	5e4 <pcap_close@plt>
 a80:	b	a70 <dump_daq_start+0xac>
 a84:	.word	0x000003c0
 a88:	.word	0x00000340

00000a8c <dump_daq_stop>:
 a8c:	push	{r4, r5, r6, lr}
 a90:	mov	r4, r0
 a94:	ldr	r3, [r0]
 a98:	ldr	r0, [r0, #4]
 a9c:	ldr	r3, [r3, #40]	; 0x28
 aa0:	blx	r3
 aa4:	subs	r5, r0, #0
 aa8:	bne	ac0 <dump_daq_stop+0x34>
 aac:	ldr	r0, [r4, #8]
 ab0:	cmp	r0, #0
 ab4:	beq	ac0 <dump_daq_stop+0x34>
 ab8:	bl	644 <pcap_dump_close@plt>
 abc:	str	r5, [r4, #8]
 ac0:	mov	r0, r5
 ac4:	pop	{r4, r5, r6, pc}

00000ac8 <dump_daq_inject>:
 ac8:	push	{r4, r5, r6, lr}
 acc:	mov	lr, r1
 ad0:	mov	r4, r0
 ad4:	mov	r5, r3
 ad8:	mov	r6, r2
 adc:	ldm	lr!, {r0, r1, r2, r3}
 ae0:	sub	sp, sp, #56	; 0x38
 ae4:	add	ip, sp, #4
 ae8:	stmia	ip!, {r0, r1, r2, r3}
 aec:	ldm	lr!, {r0, r1, r2, r3}
 af0:	str	r5, [sp, #12]
 af4:	str	r5, [sp, #16]
 af8:	stmia	ip!, {r0, r1, r2, r3}
 afc:	ldm	lr!, {r0, r1, r2, r3}
 b00:	stmia	ip!, {r0, r1, r2, r3}
 b04:	mov	r2, r6
 b08:	ldr	r3, [lr]
 b0c:	add	r1, sp, #4
 b10:	ldr	r0, [r4, #8]
 b14:	str	r3, [ip]
 b18:	bl	608 <pcap_dump@plt>
 b1c:	ldr	r0, [r4, #8]
 b20:	bl	62c <pcap_dump_file@plt>
 b24:	bl	5cc <ferror@plt>
 b28:	cmp	r0, #0
 b2c:	beq	b54 <dump_daq_inject+0x8c>
 b30:	ldr	r3, [r4]
 b34:	ldr	r1, [pc, #44]	; b68 <dump_daq_inject+0xa0>
 b38:	ldr	r0, [r4, #4]
 b3c:	ldr	r3, [r3, #76]	; 0x4c
 b40:	add	r1, pc, r1
 b44:	blx	r3
 b48:	mvn	r0, #0
 b4c:	add	sp, sp, #56	; 0x38
 b50:	pop	{r4, r5, r6, pc}
 b54:	ldrd	r2, [r4, #56]	; 0x38
 b58:	adds	r2, r2, #1
 b5c:	adc	r3, r3, #0
 b60:	strd	r2, [r4, #56]	; 0x38
 b64:	b	b4c <dump_daq_inject+0x84>
 b68:	.word	0x0000027d

00000b6c <dump_daq_initialize>:
 b6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 b70:	mov	r5, r0
 b74:	sub	sp, sp, #44	; 0x2c
 b78:	mov	sl, r1
 b7c:	mov	r0, #1
 b80:	mov	r1, #120	; 0x78
 b84:	mov	r7, r2
 b88:	mov	r8, r3
 b8c:	bl	59c <calloc@plt>
 b90:	mov	ip, r5
 b94:	add	lr, sp, #12
 b98:	ldr	r9, [r5, #24]
 b9c:	mov	r4, r0
 ba0:	ldm	ip!, {r0, r1, r2, r3}
 ba4:	cmp	r4, #0
 ba8:	stmia	lr!, {r0, r1, r2, r3}
 bac:	ldm	ip, {r0, r1, r2}
 bb0:	stm	lr, {r0, r1, r2}
 bb4:	bne	be8 <dump_daq_initialize+0x7c>
 bb8:	ldr	r3, [pc, #384]	; d40 <dump_daq_initialize+0x1d4>
 bbc:	ldr	r2, [pc, #384]	; d44 <dump_daq_initialize+0x1d8>
 bc0:	add	r3, pc, r3
 bc4:	add	r3, r3, #28
 bc8:	add	r2, pc, r2
 bcc:	mov	r1, r8
 bd0:	mov	r0, r7
 bd4:	bl	620 <snprintf@plt>
 bd8:	mvn	r5, #1
 bdc:	mov	r0, r5
 be0:	add	sp, sp, #44	; 0x2c
 be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 be8:	cmp	r9, #0
 bec:	beq	bfc <dump_daq_initialize+0x90>
 bf0:	ldr	r3, [r9, #12]
 bf4:	tst	r3, #1
 bf8:	bne	c2c <dump_daq_initialize+0xc0>
 bfc:	ldr	r3, [pc, #324]	; d48 <dump_daq_initialize+0x1dc>
 c00:	ldr	r2, [pc, #324]	; d4c <dump_daq_initialize+0x1e0>
 c04:	add	r3, pc, r3
 c08:	add	r3, r3, #28
 c0c:	add	r2, pc, r2
 c10:	mov	r1, r8
 c14:	mov	r0, r7
 c18:	bl	620 <snprintf@plt>
 c1c:	mov	r0, r4
 c20:	bl	5c0 <free@plt>
 c24:	mvn	r5, #0
 c28:	b	bdc <dump_daq_initialize+0x70>
 c2c:	ldr	fp, [pc, #284]	; d50 <dump_daq_initialize+0x1e4>
 c30:	ldr	r3, [pc, #284]	; d54 <dump_daq_initialize+0x1e8>
 c34:	ldr	r5, [sp, #32]
 c38:	mov	r6, #0
 c3c:	add	fp, pc, fp
 c40:	add	r3, pc, r3
 c44:	str	r3, [sp]
 c48:	cmp	r5, #0
 c4c:	bne	ce4 <dump_daq_initialize+0x178>
 c50:	cmp	r6, #0
 c54:	beq	cb0 <dump_daq_initialize+0x144>
 c58:	ldr	r1, [pc, #248]	; d58 <dump_daq_initialize+0x1ec>
 c5c:	mov	r0, r6
 c60:	add	r1, pc, r1
 c64:	bl	5f0 <strcasecmp@plt>
 c68:	cmp	r0, #0
 c6c:	moveq	r3, #2
 c70:	beq	cac <dump_daq_initialize+0x140>
 c74:	ldr	r1, [pc, #224]	; d5c <dump_daq_initialize+0x1f0>
 c78:	mov	r0, r6
 c7c:	add	r1, pc, r1
 c80:	bl	5f0 <strcasecmp@plt>
 c84:	cmp	r0, #0
 c88:	streq	r5, [sp, #24]
 c8c:	beq	cb0 <dump_daq_initialize+0x144>
 c90:	ldr	r1, [pc, #200]	; d60 <dump_daq_initialize+0x1f4>
 c94:	mov	r0, r6
 c98:	add	r1, pc, r1
 c9c:	bl	5f0 <strcasecmp@plt>
 ca0:	cmp	r0, #0
 ca4:	bne	d30 <dump_daq_initialize+0x1c4>
 ca8:	mov	r3, #1
 cac:	str	r3, [sp, #24]
 cb0:	ldr	r5, [r9, #16]
 cb4:	mov	r3, r8
 cb8:	mov	r2, r7
 cbc:	add	r1, r4, #4
 cc0:	add	r0, sp, #12
 cc4:	blx	r5
 cc8:	subs	r5, r0, #0
 ccc:	streq	r9, [r4]
 cd0:	streq	r4, [sl]
 cd4:	beq	bdc <dump_daq_initialize+0x70>
 cd8:	mov	r0, r4
 cdc:	bl	5c0 <free@plt>
 ce0:	b	bdc <dump_daq_initialize+0x70>
 ce4:	ldr	r3, [r5]
 ce8:	ldr	r1, [sp]
 cec:	mov	r0, r3
 cf0:	str	r3, [sp, #4]
 cf4:	bl	5a8 <strcmp@plt>
 cf8:	ldr	r3, [sp, #4]
 cfc:	cmp	r0, #0
 d00:	ldreq	r6, [r5, #4]
 d04:	beq	d28 <dump_daq_initialize+0x1bc>
 d08:	mov	r1, fp
 d0c:	mov	r0, r3
 d10:	bl	5a8 <strcmp@plt>
 d14:	cmp	r0, #0
 d18:	bne	d28 <dump_daq_initialize+0x1bc>
 d1c:	ldr	r0, [r5, #4]
 d20:	bl	5d8 <strdup@plt>
 d24:	str	r0, [r4, #12]
 d28:	ldr	r5, [r5, #8]
 d2c:	b	c48 <dump_daq_initialize+0xdc>
 d30:	ldr	r2, [pc, #44]	; d64 <dump_daq_initialize+0x1f8>
 d34:	mov	r3, r6
 d38:	add	r2, pc, r2
 d3c:	b	c10 <dump_daq_initialize+0xa4>
 d40:	.word	0x000001a8
 d44:	.word	0x00000215
 d48:	.word	0x00000164
 d4c:	.word	0x00000202
 d50:	.word	0x0000017c
 d54:	.word	0x000001ef
 d58:	.word	0x000001d9
 d5c:	.word	0x000001c7
 d60:	.word	0x000001b3
 d64:	.word	0x0000011a

Disassembly of section .fini:

00000d68 <_fini>:
 d68:	push	{r3, lr}
 d6c:	pop	{r3, pc}
