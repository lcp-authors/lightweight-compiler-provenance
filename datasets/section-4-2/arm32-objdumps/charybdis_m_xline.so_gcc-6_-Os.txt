
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000b08 <_init>:
 b08:	push	{r3, lr}
 b0c:	bl	cfc <call_weak_fn>
 b10:	pop	{r3, pc}

Disassembly of section .plt:

00000b14 <.plt>:
 b14:	push	{lr}		; (str lr, [sp, #-4]!)
 b18:	ldr	lr, [pc, #4]	; b24 <.plt+0x10>
 b1c:	add	lr, pc, lr
 b20:	ldr	pc, [lr, #8]!
 b24:	.word	0x000124dc

00000b28 <propagate_generic@plt>:
 b28:	add	ip, pc, #0, 12
 b2c:	add	ip, ip, #73728	; 0x12000
 b30:	ldr	pc, [ip, #1244]!	; 0x4dc

00000b34 <make_conf@plt>:
 b34:	add	ip, pc, #0, 12
 b38:	add	ip, ip, #73728	; 0x12000
 b3c:	ldr	pc, [ip, #1236]!	; 0x4d4

00000b40 <raise@plt>:
 b40:	add	ip, pc, #0, 12
 b44:	add	ip, ip, #73728	; 0x12000
 b48:	ldr	pc, [ip, #1228]!	; 0x4cc

00000b4c <rb_current_time@plt>:
 b4c:	add	ip, pc, #0, 12
 b50:	add	ip, ip, #73728	; 0x12000
 b54:	ldr	pc, [ip, #1220]!	; 0x4c4

00000b58 <sendto_match_servs@plt>:
 b58:	add	ip, pc, #0, 12
 b5c:	add	ip, ip, #73728	; 0x12000
 b60:	ldr	pc, [ip, #1212]!	; 0x4bc

00000b64 <__cxa_finalize@plt>:
 b64:	add	ip, pc, #0, 12
 b68:	add	ip, ip, #73728	; 0x12000
 b6c:	ldr	pc, [ip, #1204]!	; 0x4b4

00000b70 <sendto_one@plt>:
 b70:	add	ip, pc, #0, 12
 b74:	add	ip, ip, #73728	; 0x12000
 b78:	ldr	pc, [ip, #1196]!	; 0x4ac

00000b7c <replace_old_ban@plt>:
 b7c:	add	ip, pc, #0, 12
 b80:	add	ip, ip, #73728	; 0x12000
 b84:	ldr	pc, [ip, #1188]!	; 0x4a4

00000b88 <rb_outofmemory@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #73728	; 0x12000
 b90:	ldr	pc, [ip, #1180]!	; 0x49c

00000b94 <operhash_delete@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #73728	; 0x12000
 b9c:	ldr	pc, [ip, #1172]!	; 0x494

00000ba0 <sendto_realops_snomask@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #73728	; 0x12000
 ba8:	ldr	pc, [ip, #1164]!	; 0x48c

00000bac <bandb_add@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #73728	; 0x12000
 bb4:	ldr	pc, [ip, #1156]!	; 0x484

00000bb8 <deactivate_conf@plt>:
 bb8:	add	ip, pc, #0, 12
 bbc:	add	ip, ip, #73728	; 0x12000
 bc0:	ldr	pc, [ip, #1148]!	; 0x47c

00000bc4 <check_xlines@plt>:
 bc4:	add	ip, pc, #0, 12
 bc8:	add	ip, ip, #73728	; 0x12000
 bcc:	ldr	pc, [ip, #1140]!	; 0x474

00000bd0 <get_oper_name@plt>:
 bd0:	add	ip, pc, #0, 12
 bd4:	add	ip, ip, #73728	; 0x12000
 bd8:	ldr	pc, [ip, #1132]!	; 0x46c

00000bdc <rb_free_rb_dlink_node@plt>:
 bdc:	add	ip, pc, #0, 12
 be0:	add	ip, ip, #73728	; 0x12000
 be4:	ldr	pc, [ip, #1124]!	; 0x464

00000be8 <cluster_generic@plt>:
 be8:	add	ip, pc, #0, 12
 bec:	add	ip, ip, #73728	; 0x12000
 bf0:	ldr	pc, [ip, #1116]!	; 0x45c

00000bf4 <operhash_add@plt>:
 bf4:	add	ip, pc, #0, 12
 bf8:	add	ip, ip, #73728	; 0x12000
 bfc:	ldr	pc, [ip, #1108]!	; 0x454

00000c00 <strcpy@plt>:
 c00:	add	ip, pc, #0, 12
 c04:	add	ip, ip, #73728	; 0x12000
 c08:	ldr	pc, [ip, #1100]!	; 0x44c

00000c0c <sendto_server@plt>:
 c0c:	add	ip, pc, #0, 12
 c10:	add	ip, ip, #73728	; 0x12000
 c14:	ldr	pc, [ip, #1092]!	; 0x444

00000c18 <malloc@plt>:
 c18:	add	ip, pc, #0, 12
 c1c:	add	ip, ip, #73728	; 0x12000
 c20:	ldr	pc, [ip, #1084]!	; 0x43c

00000c24 <__gmon_start__@plt>:
 c24:	add	ip, pc, #0, 12
 c28:	add	ip, ip, #73728	; 0x12000
 c2c:	ldr	pc, [ip, #1076]!	; 0x434

00000c30 <free_conf@plt>:
 c30:	add	ip, pc, #0, 12
 c34:	add	ip, ip, #73728	; 0x12000
 c38:	ldr	pc, [ip, #1068]!	; 0x42c

00000c3c <rb_make_rb_dlink_node@plt>:
 c3c:	add	ip, pc, #0, 12
 c40:	add	ip, ip, #73728	; 0x12000
 c44:	ldr	pc, [ip, #1060]!	; 0x424

00000c48 <strlen@plt>:
 c48:	add	ip, pc, #0, 12
 c4c:	add	ip, ip, #73728	; 0x12000
 c50:	ldr	pc, [ip, #1052]!	; 0x41c

00000c54 <find_xline_mask@plt>:
 c54:	add	ip, pc, #0, 12
 c58:	add	ip, ip, #73728	; 0x12000
 c5c:	ldr	pc, [ip, #1044]!	; 0x414

00000c60 <ilog@plt>:
 c60:	add	ip, pc, #0, 12
 c64:	add	ip, ip, #73728	; 0x12000
 c68:	ldr	pc, [ip, #1036]!	; 0x40c

00000c6c <collapse@plt>:
 c6c:	add	ip, pc, #0, 12
 c70:	add	ip, ip, #73728	; 0x12000
 c74:	ldr	pc, [ip, #1028]!	; 0x404

00000c78 <match@plt>:
 c78:	add	ip, pc, #0, 12
 c7c:	add	ip, ip, #73728	; 0x12000
 c80:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c84 <valid_temp_time@plt>:
 c84:	add	ip, pc, #0, 12
 c88:	add	ip, ip, #73728	; 0x12000
 c8c:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c90 <remove_reject_mask@plt>:
 c90:	add	ip, pc, #0, 12
 c94:	add	ip, ip, #73728	; 0x12000
 c98:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c9c <sendto_one_notice@plt>:
 c9c:	add	ip, pc, #0, 12
 ca0:	add	ip, ip, #73728	; 0x12000
 ca4:	ldr	pc, [ip, #996]!	; 0x3e4

00000ca8 <bandb_del@plt>:
 ca8:	add	ip, pc, #0, 12
 cac:	add	ip, ip, #73728	; 0x12000
 cb0:	ldr	pc, [ip, #988]!	; 0x3dc

00000cb4 <atoi@plt>:
 cb4:	add	ip, pc, #0, 12
 cb8:	add	ip, ip, #73728	; 0x12000
 cbc:	ldr	pc, [ip, #980]!	; 0x3d4

00000cc0 <valid_wild_card_simple@plt>:
 cc0:	add	ip, pc, #0, 12
 cc4:	add	ip, ip, #73728	; 0x12000
 cc8:	ldr	pc, [ip, #972]!	; 0x3cc

00000ccc <find_shared_conf@plt>:
 ccc:	add	ip, pc, #0, 12
 cd0:	add	ip, ip, #73728	; 0x12000
 cd4:	ldr	pc, [ip, #964]!	; 0x3c4

00000cd8 <privilegeset_in_set@plt>:
 cd8:	add	ip, pc, #0, 12
 cdc:	add	ip, ip, #73728	; 0x12000
 ce0:	ldr	pc, [ip, #956]!	; 0x3bc

00000ce4 <irccmp@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #73728	; 0x12000
 cec:	ldr	pc, [ip, #948]!	; 0x3b4

00000cf0 <__assert_fail@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #73728	; 0x12000
 cf8:	ldr	pc, [ip, #940]!	; 0x3ac

Disassembly of section .text:

00000cfc <call_weak_fn>:
     cfc:	ldr	r3, [pc, #20]	; d18 <call_weak_fn+0x1c>
     d00:	ldr	r2, [pc, #20]	; d1c <call_weak_fn+0x20>
     d04:	add	r3, pc, r3
     d08:	ldr	r2, [r3, r2]
     d0c:	cmp	r2, #0
     d10:	bxeq	lr
     d14:	b	c24 <__gmon_start__@plt>
     d18:	.word	0x000122f4
     d1c:	.word	0x000000c4

00000d20 <deregister_tm_clones>:
     d20:	ldr	r3, [pc, #52]	; d5c <deregister_tm_clones+0x3c>
     d24:	ldr	r0, [pc, #52]	; d60 <deregister_tm_clones+0x40>
     d28:	add	r3, pc, r3
     d2c:	add	r0, pc, r0
     d30:	add	r3, r3, #3
     d34:	sub	r3, r3, r0
     d38:	cmp	r3, #6
     d3c:	ldr	r3, [pc, #32]	; d64 <deregister_tm_clones+0x44>
     d40:	add	r3, pc, r3
     d44:	bxls	lr
     d48:	ldr	r2, [pc, #24]	; d68 <deregister_tm_clones+0x48>
     d4c:	ldr	r3, [r3, r2]
     d50:	cmp	r3, #0
     d54:	bxeq	lr
     d58:	bx	r3
     d5c:	.word	0x00012470
     d60:	.word	0x0001246c
     d64:	.word	0x000122b8
     d68:	.word	0x000000ac

00000d6c <register_tm_clones>:
     d6c:	ldr	r1, [pc, #56]	; dac <register_tm_clones+0x40>
     d70:	ldr	r0, [pc, #56]	; db0 <register_tm_clones+0x44>
     d74:	add	r1, pc, r1
     d78:	add	r0, pc, r0
     d7c:	sub	r1, r1, r0
     d80:	ldr	r3, [pc, #44]	; db4 <register_tm_clones+0x48>
     d84:	asr	r1, r1, #2
     d88:	add	r3, pc, r3
     d8c:	add	r1, r1, r1, lsr #31
     d90:	asrs	r1, r1, #1
     d94:	bxeq	lr
     d98:	ldr	r2, [pc, #24]	; db8 <register_tm_clones+0x4c>
     d9c:	ldr	r3, [r3, r2]
     da0:	cmp	r3, #0
     da4:	bxeq	lr
     da8:	bx	r3
     dac:	.word	0x00012424
     db0:	.word	0x00012420
     db4:	.word	0x00012270
     db8:	.word	0x000000d0

00000dbc <__do_global_dtors_aux>:
     dbc:	ldr	r3, [pc, #76]	; e10 <__do_global_dtors_aux+0x54>
     dc0:	ldr	r2, [pc, #76]	; e14 <__do_global_dtors_aux+0x58>
     dc4:	add	r3, pc, r3
     dc8:	add	r2, pc, r2
     dcc:	ldrb	r3, [r3]
     dd0:	cmp	r3, #0
     dd4:	bxne	lr
     dd8:	ldr	r3, [pc, #56]	; e18 <__do_global_dtors_aux+0x5c>
     ddc:	push	{r4, lr}
     de0:	ldr	r3, [r2, r3]
     de4:	cmp	r3, #0
     de8:	beq	df8 <__do_global_dtors_aux+0x3c>
     dec:	ldr	r3, [pc, #40]	; e1c <__do_global_dtors_aux+0x60>
     df0:	ldr	r0, [pc, r3]
     df4:	bl	b64 <__cxa_finalize@plt>
     df8:	bl	d20 <deregister_tm_clones>
     dfc:	ldr	r3, [pc, #28]	; e20 <__do_global_dtors_aux+0x64>
     e00:	mov	r2, #1
     e04:	add	r3, pc, r3
     e08:	strb	r2, [r3]
     e0c:	pop	{r4, pc}
     e10:	.word	0x000123d4
     e14:	.word	0x00012230
     e18:	.word	0x000000a8
     e1c:	.word	0x000122e8
     e20:	.word	0x00012394

00000e24 <frame_dummy>:
     e24:	ldr	r0, [pc, #56]	; e64 <frame_dummy+0x40>
     e28:	ldr	r3, [pc, #56]	; e68 <frame_dummy+0x44>
     e2c:	add	r0, pc, r0
     e30:	ldr	r2, [r0]
     e34:	add	r3, pc, r3
     e38:	cmp	r2, #0
     e3c:	bne	e44 <frame_dummy+0x20>
     e40:	b	d6c <register_tm_clones>
     e44:	ldr	r2, [pc, #32]	; e6c <frame_dummy+0x48>
     e48:	ldr	r3, [r3, r2]
     e4c:	cmp	r3, #0
     e50:	beq	e40 <frame_dummy+0x1c>
     e54:	push	{r4, lr}
     e58:	blx	r3
     e5c:	pop	{r4, lr}
     e60:	b	d6c <register_tm_clones>
     e64:	.word	0x000120c8
     e68:	.word	0x000121c4
     e6c:	.word	0x000000cc

00000e70 <rb_strdup>:
     e70:	push	{r4, r5, r6, lr}
     e74:	mov	r5, r0
     e78:	bl	c48 <strlen@plt>
     e7c:	add	r0, r0, #1
     e80:	bl	c18 <malloc@plt>
     e84:	subs	r4, r0, #0
     e88:	bne	e90 <rb_strdup+0x20>
     e8c:	bl	b88 <rb_outofmemory@plt>
     e90:	mov	r1, r5
     e94:	bl	c00 <strcpy@plt>
     e98:	mov	r0, r4
     e9c:	pop	{r4, r5, r6, pc}

00000ea0 <propagate_xline.part.0>:
     ea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     ea4:	mov	r7, r3
     ea8:	ldr	r5, [pc, #128]	; f30 <propagate_xline.part.0+0x90>
     eac:	ldr	r3, [pc, #128]	; f34 <propagate_xline.part.0+0x94>
     eb0:	sub	sp, sp, #24
     eb4:	add	r5, pc, r5
     eb8:	mov	r4, r1
     ebc:	ldr	r6, [r5, r3]
     ec0:	ldr	r3, [sp, #56]	; 0x38
     ec4:	ldr	r8, [sp, #60]	; 0x3c
     ec8:	str	r3, [sp, #12]
     ecc:	ldr	r3, [pc, #100]	; f38 <propagate_xline.part.0+0x98>
     ed0:	mov	sl, r2
     ed4:	add	r3, pc, r3
     ed8:	str	r3, [sp]
     edc:	str	r8, [sp, #16]
     ee0:	stmib	sp, {r4, r7}
     ee4:	mov	r3, #0
     ee8:	ldr	r2, [r6]
     eec:	mov	r9, r0
     ef0:	bl	b58 <sendto_match_servs@plt>
     ef4:	ldr	r3, [pc, #64]	; f3c <propagate_xline.part.0+0x9c>
     ef8:	mov	r1, r4
     efc:	mov	r0, r9
     f00:	ldr	r2, [r5, r3]
     f04:	ldr	r3, [pc, #52]	; f40 <propagate_xline.part.0+0xa0>
     f08:	str	r8, [sp, #16]
     f0c:	add	r3, pc, r3
     f10:	str	r7, [sp, #12]
     f14:	stmib	sp, {r4, sl}
     f18:	str	r3, [sp]
     f1c:	ldr	r3, [r6]
     f20:	ldr	r2, [r2]
     f24:	bl	b58 <sendto_match_servs@plt>
     f28:	add	sp, sp, #24
     f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     f30:	.word	0x00012144
     f34:	.word	0x000000b8
     f38:	.word	0x00001468
     f3c:	.word	0x000000d8
     f40:	.word	0x00001443

00000f44 <valid_xline>:
     f44:	push	{r0, r1, r4, r5, r6, lr}
     f48:	cmp	r2, #0
     f4c:	ldr	r6, [pc, #192]	; 1014 <valid_xline+0xd0>
     f50:	mov	r4, r0
     f54:	add	r6, pc, r6
     f58:	beq	f68 <valid_xline+0x24>
     f5c:	ldrb	r3, [r2]
     f60:	cmp	r3, #0
     f64:	bne	fe0 <valid_xline+0x9c>
     f68:	ldr	r3, [r4, #36]	; 0x24
     f6c:	ldrh	r2, [r3, #80]	; 0x50
     f70:	cmp	r2, #32
     f74:	ldr	r2, [pc, #156]	; 1018 <valid_xline+0xd4>
     f78:	ldr	r2, [r6, r2]
     f7c:	bne	fd4 <valid_xline+0x90>
     f80:	ldrb	r3, [r3, #396]	; 0x18c
     f84:	cmp	r3, #0
     f88:	beq	fd4 <valid_xline+0x90>
     f8c:	ldrb	r3, [r2, #396]	; 0x18c
     f90:	cmp	r3, #0
     f94:	addeq	r2, r2, #88	; 0x58
     f98:	addne	r2, r2, #396	; 0x18c
     f9c:	ldrb	r3, [r4, #396]	; 0x18c
     fa0:	cmp	r3, #0
     fa4:	addne	r3, r4, #396	; 0x18c
     fa8:	addeq	r3, r4, #88	; 0x58
     fac:	ldr	r1, [pc, #104]	; 101c <valid_xline+0xd8>
     fb0:	mov	r0, r4
     fb4:	add	r1, pc, r1
     fb8:	str	r1, [sp]
     fbc:	ldr	r1, [pc, #92]	; 1020 <valid_xline+0xdc>
     fc0:	add	r1, pc, r1
     fc4:	bl	b70 <sendto_one@plt>
     fc8:	mov	r0, #0
     fcc:	add	sp, sp, #8
     fd0:	pop	{r4, r5, r6, pc}
     fd4:	add	r3, r4, #88	; 0x58
     fd8:	add	r2, r2, #88	; 0x58
     fdc:	b	fac <valid_xline+0x68>
     fe0:	mov	r0, r1
     fe4:	bl	cc0 <valid_wild_card_simple@plt>
     fe8:	subs	r5, r0, #0
     fec:	movne	r0, #1
     ff0:	bne	fcc <valid_xline+0x88>
     ff4:	ldr	r3, [pc, #40]	; 1024 <valid_xline+0xe0>
     ff8:	ldr	r1, [pc, #40]	; 1028 <valid_xline+0xe4>
     ffc:	mov	r0, r4
    1000:	ldr	r3, [r6, r3]
    1004:	add	r1, pc, r1
    1008:	ldr	r2, [r3, #240]	; 0xf0
    100c:	bl	c9c <sendto_one_notice@plt>
    1010:	b	fc8 <valid_xline+0x84>
    1014:	.word	0x000120a4
    1018:	.word	0x000000d4
    101c:	.word	0x000016ac
    1020:	.word	0x000013aa
    1024:	.word	0x000000dc
    1028:	.word	0x0000138b

0000102c <rb_dlinkAdd>:
    102c:	cmp	r0, #0
    1030:	push	{r4, lr}
    1034:	bne	1058 <rb_dlinkAdd+0x2c>
    1038:	ldr	r3, [pc, #168]	; 10e8 <rb_dlinkAdd+0xbc>
    103c:	ldr	r1, [pc, #168]	; 10ec <rb_dlinkAdd+0xc0>
    1040:	ldr	r0, [pc, #168]	; 10f0 <rb_dlinkAdd+0xc4>
    1044:	add	r3, pc, r3
    1048:	mov	r2, #143	; 0x8f
    104c:	add	r1, pc, r1
    1050:	add	r0, pc, r0
    1054:	bl	cf0 <__assert_fail@plt>
    1058:	cmp	r1, #0
    105c:	bne	1080 <rb_dlinkAdd+0x54>
    1060:	ldr	r3, [pc, #140]	; 10f4 <rb_dlinkAdd+0xc8>
    1064:	ldr	r1, [pc, #140]	; 10f8 <rb_dlinkAdd+0xcc>
    1068:	ldr	r0, [pc, #140]	; 10fc <rb_dlinkAdd+0xd0>
    106c:	add	r3, pc, r3
    1070:	mov	r2, #144	; 0x90
    1074:	add	r1, pc, r1
    1078:	add	r0, pc, r0
    107c:	b	1054 <rb_dlinkAdd+0x28>
    1080:	cmp	r2, #0
    1084:	bne	10a8 <rb_dlinkAdd+0x7c>
    1088:	ldr	r3, [pc, #112]	; 1100 <rb_dlinkAdd+0xd4>
    108c:	ldr	r1, [pc, #112]	; 1104 <rb_dlinkAdd+0xd8>
    1090:	ldr	r0, [pc, #112]	; 1108 <rb_dlinkAdd+0xdc>
    1094:	add	r3, pc, r3
    1098:	mov	r2, #145	; 0x91
    109c:	add	r1, pc, r1
    10a0:	add	r0, pc, r0
    10a4:	b	1054 <rb_dlinkAdd+0x28>
    10a8:	mov	r3, #0
    10ac:	str	r3, [r1, #4]
    10b0:	ldr	r3, [r2]
    10b4:	str	r0, [r1]
    10b8:	cmp	r3, #0
    10bc:	str	r3, [r1, #8]
    10c0:	strne	r1, [r3, #4]
    10c4:	bne	10d4 <rb_dlinkAdd+0xa8>
    10c8:	ldr	r3, [r2, #4]
    10cc:	cmp	r3, #0
    10d0:	streq	r1, [r2, #4]
    10d4:	ldr	r3, [r2, #8]
    10d8:	str	r1, [r2]
    10dc:	add	r3, r3, #1
    10e0:	str	r3, [r2, #8]
    10e4:	pop	{r4, pc}
    10e8:	.word	0x000012b4
    10ec:	.word	0x00001386
    10f0:	.word	0x0000139e
    10f4:	.word	0x0000128c
    10f8:	.word	0x0000135e
    10fc:	.word	0x00001383
    1100:	.word	0x00001264
    1104:	.word	0x00001336
    1108:	.word	0x00001365

0000110c <apply_xline>:
    110c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1110:	sub	sp, sp, #44	; 0x2c
    1114:	mov	sl, r1
    1118:	mov	r7, r2
    111c:	mov	r5, r0
    1120:	mov	r9, r3
    1124:	ldrb	r6, [sp, #80]	; 0x50
    1128:	bl	b34 <make_conf@plt>
    112c:	mov	r3, #128	; 0x80
    1130:	ldr	r8, [pc, #732]	; 1414 <apply_xline+0x308>
    1134:	add	r8, pc, r8
    1138:	str	r3, [r0]
    113c:	mov	r4, r0
    1140:	bl	b4c <rb_current_time@plt>
    1144:	str	r0, [r4, #40]	; 0x28
    1148:	mov	r0, sl
    114c:	bl	e70 <rb_strdup>
    1150:	str	r0, [r4, #16]
    1154:	mov	r0, r7
    1158:	bl	e70 <rb_strdup>
    115c:	str	r0, [r4, #20]
    1160:	ldr	r0, [r4, #16]
    1164:	bl	c6c <collapse@plt>
    1168:	mov	r0, r5
    116c:	bl	bd0 <get_oper_name@plt>
    1170:	bl	bf4 <operhash_add@plt>
    1174:	cmp	r6, #0
    1178:	str	r0, [r4, #12]
    117c:	beq	12e0 <apply_xline+0x1d4>
    1180:	ldr	r3, [r4, #4]
    1184:	orr	r3, r3, #8912896	; 0x880000
    1188:	str	r3, [r4, #4]
    118c:	bl	b4c <rb_current_time@plt>
    1190:	add	r0, r0, r9
    1194:	str	r0, [r4, #36]	; 0x24
    1198:	str	r0, [r4, #44]	; 0x2c
    119c:	mov	r0, r4
    11a0:	bl	b7c <replace_old_ban@plt>
    11a4:	bl	c3c <rb_make_rb_dlink_node@plt>
    11a8:	ldr	r3, [pc, #616]	; 1418 <apply_xline+0x30c>
    11ac:	ldr	r3, [r8, r3]
    11b0:	mov	r2, r3
    11b4:	str	r3, [sp, #36]	; 0x24
    11b8:	mov	r1, r0
    11bc:	mov	r0, r4
    11c0:	bl	102c <rb_dlinkAdd>
    11c4:	mov	r0, r5
    11c8:	bl	bd0 <get_oper_name@plt>
    11cc:	mov	r1, #60	; 0x3c
    11d0:	mov	fp, r0
    11d4:	mov	r0, r9
    11d8:	bl	20a8 <__divsi3>
    11dc:	str	r7, [sp, #8]
    11e0:	ldr	r2, [pc, #564]	; 141c <apply_xline+0x310>
    11e4:	ldr	r3, [r4, #16]
    11e8:	add	r2, pc, r2
    11ec:	mov	r1, #0
    11f0:	str	r3, [sp, #4]
    11f4:	mov	r3, fp
    11f8:	mov	r6, r0
    11fc:	str	r0, [sp]
    1200:	mov	r0, #256	; 0x100
    1204:	bl	ba0 <sendto_realops_snomask@plt>
    1208:	mov	r0, r5
    120c:	bl	bd0 <get_oper_name@plt>
    1210:	ldr	r1, [pc, #520]	; 1420 <apply_xline+0x314>
    1214:	mov	r3, r6
    1218:	add	r1, pc, r1
    121c:	str	r7, [sp, #4]
    1220:	str	sl, [sp]
    1224:	mov	r2, r0
    1228:	mov	r0, #7
    122c:	bl	c60 <ilog@plt>
    1230:	ldr	r1, [pc, #492]	; 1424 <apply_xline+0x318>
    1234:	mov	r0, r5
    1238:	ldr	r3, [r4, #16]
    123c:	mov	r2, r6
    1240:	add	r1, pc, r1
    1244:	bl	c9c <sendto_one_notice@plt>
    1248:	ldr	r2, [pc, #472]	; 1428 <apply_xline+0x31c>
    124c:	ldr	r3, [r4, #40]	; 0x28
    1250:	add	r5, r5, #396	; 0x18c
    1254:	ldr	r1, [r8, r2]
    1258:	ldr	r2, [pc, #460]	; 142c <apply_xline+0x320>
    125c:	ldr	r0, [r1]
    1260:	ldr	r2, [r8, r2]
    1264:	ldr	r2, [r2]
    1268:	str	r7, [sp, #24]
    126c:	ldr	r1, [r4, #44]	; 0x2c
    1270:	orr	r2, r0, r2
    1274:	sub	r1, r1, r3
    1278:	str	r1, [sp, #20]
    127c:	ldr	r1, [r4, #36]	; 0x24
    1280:	str	r3, [sp, #12]
    1284:	sub	r1, r1, r3
    1288:	str	r1, [sp, #16]
    128c:	ldr	r3, [r4, #16]
    1290:	str	r5, [sp, #4]
    1294:	str	r3, [sp, #8]
    1298:	ldr	r3, [pc, #400]	; 1430 <apply_xline+0x324>
    129c:	add	r3, pc, r3
    12a0:	str	r3, [sp]
    12a4:	mov	r3, #0
    12a8:	mov	r1, r3
    12ac:	mov	r0, r3
    12b0:	bl	c0c <sendto_server@plt>
    12b4:	bl	c3c <rb_make_rb_dlink_node@plt>
    12b8:	ldr	r3, [pc, #372]	; 1434 <apply_xline+0x328>
    12bc:	ldr	r3, [r8, r3]
    12c0:	mov	r2, r3
    12c4:	str	r3, [sp, #36]	; 0x24
    12c8:	mov	r1, r0
    12cc:	mov	r0, r4
    12d0:	bl	102c <rb_dlinkAdd>
    12d4:	add	sp, sp, #44	; 0x2c
    12d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12dc:	b	bc4 <check_xlines@plt>
    12e0:	cmp	r9, #0
    12e4:	ble	137c <apply_xline+0x270>
    12e8:	bl	b4c <rb_current_time@plt>
    12ec:	add	r0, r9, r0
    12f0:	str	r0, [r4, #36]	; 0x24
    12f4:	mov	r0, r5
    12f8:	bl	bd0 <get_oper_name@plt>
    12fc:	mov	r1, #60	; 0x3c
    1300:	mov	fp, r0
    1304:	mov	r0, r9
    1308:	bl	20a8 <__divsi3>
    130c:	str	r7, [sp, #8]
    1310:	ldr	r2, [pc, #288]	; 1438 <apply_xline+0x32c>
    1314:	ldr	r3, [r4, #16]
    1318:	mov	r1, r6
    131c:	str	r3, [sp, #4]
    1320:	add	r2, pc, r2
    1324:	mov	r3, fp
    1328:	mov	r9, r0
    132c:	str	r0, [sp]
    1330:	mov	r0, #256	; 0x100
    1334:	bl	ba0 <sendto_realops_snomask@plt>
    1338:	mov	r0, r5
    133c:	bl	bd0 <get_oper_name@plt>
    1340:	ldr	r1, [pc, #244]	; 143c <apply_xline+0x330>
    1344:	mov	r3, r9
    1348:	str	r7, [sp, #4]
    134c:	str	sl, [sp]
    1350:	add	r1, pc, r1
    1354:	mov	r2, r0
    1358:	mov	r0, #7
    135c:	bl	c60 <ilog@plt>
    1360:	ldr	r1, [pc, #216]	; 1440 <apply_xline+0x334>
    1364:	ldr	r3, [r4, #16]
    1368:	mov	r2, r9
    136c:	add	r1, pc, r1
    1370:	mov	r0, r5
    1374:	bl	c9c <sendto_one_notice@plt>
    1378:	b	12b4 <apply_xline+0x1a8>
    137c:	mov	r0, r5
    1380:	bl	bd0 <get_oper_name@plt>
    1384:	ldr	r3, [r4, #20]
    1388:	ldr	r2, [pc, #180]	; 1444 <apply_xline+0x338>
    138c:	str	r3, [sp, #4]
    1390:	ldr	r3, [r4, #16]
    1394:	mov	r1, r6
    1398:	str	r3, [sp]
    139c:	add	r2, pc, r2
    13a0:	mov	r3, r0
    13a4:	mov	r0, #256	; 0x100
    13a8:	bl	ba0 <sendto_realops_snomask@plt>
    13ac:	ldr	r1, [pc, #148]	; 1448 <apply_xline+0x33c>
    13b0:	ldr	r3, [r4, #20]
    13b4:	ldr	r2, [r4, #16]
    13b8:	mov	r0, r5
    13bc:	add	r1, pc, r1
    13c0:	bl	c9c <sendto_one_notice@plt>
    13c4:	str	r6, [sp, #8]
    13c8:	str	r6, [sp, #4]
    13cc:	ldr	r3, [r4, #20]
    13d0:	mov	r1, r5
    13d4:	str	r3, [sp]
    13d8:	mov	r0, #2
    13dc:	mov	r3, r6
    13e0:	ldr	r2, [r4, #16]
    13e4:	bl	bac <bandb_add@plt>
    13e8:	mov	r0, r5
    13ec:	bl	bd0 <get_oper_name@plt>
    13f0:	ldr	r3, [r4, #20]
    13f4:	ldr	r1, [pc, #80]	; 144c <apply_xline+0x340>
    13f8:	str	r3, [sp]
    13fc:	add	r1, pc, r1
    1400:	mov	r3, sl
    1404:	mov	r2, r0
    1408:	mov	r0, #7
    140c:	bl	c60 <ilog@plt>
    1410:	b	12b4 <apply_xline+0x1a8>
    1414:	.word	0x00011ec4
    1418:	.word	0x000000b0
    141c:	.word	0x0000122a
    1420:	.word	0x00001227
    1424:	.word	0x0000120d
    1428:	.word	0x000000bc
    142c:	.word	0x000000c0
    1430:	.word	0x000011d3
    1434:	.word	0x000000b4
    1438:	.word	0x0000116e
    143c:	.word	0x000010ef
    1440:	.word	0x00001152
    1444:	.word	0x00001147
    1448:	.word	0x00001145
    144c:	.word	0x00001121

00001450 <handle_remote_xline>:
    1450:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1454:	mov	r5, r2
    1458:	ldr	r2, [r0, #32]
    145c:	subs	r7, r1, #0
    1460:	mov	r6, r3
    1464:	add	r1, r0, #163	; 0xa3
    1468:	movgt	r3, #16
    146c:	movle	r3, #32
    1470:	mov	r4, r0
    1474:	add	r2, r2, #88	; 0x58
    1478:	add	r0, r0, #152	; 0x98
    147c:	bl	ccc <find_shared_conf@plt>
    1480:	cmp	r0, #0
    1484:	beq	14d0 <handle_remote_xline+0x80>
    1488:	mov	r2, r6
    148c:	mov	r1, r5
    1490:	mov	r0, r4
    1494:	bl	f44 <valid_xline>
    1498:	cmp	r0, #0
    149c:	beq	14d0 <handle_remote_xline+0x80>
    14a0:	mov	r0, r5
    14a4:	bl	c54 <find_xline_mask@plt>
    14a8:	cmp	r0, #0
    14ac:	beq	14d8 <handle_remote_xline+0x88>
    14b0:	ldr	r3, [r0, #20]
    14b4:	ldr	r1, [pc, #56]	; 14f4 <handle_remote_xline+0xa4>
    14b8:	str	r3, [sp]
    14bc:	mov	r2, r5
    14c0:	ldr	r3, [r0, #16]
    14c4:	add	r1, pc, r1
    14c8:	mov	r0, r4
    14cc:	bl	c9c <sendto_one_notice@plt>
    14d0:	add	sp, sp, #12
    14d4:	pop	{r4, r5, r6, r7, pc}
    14d8:	str	r0, [sp]
    14dc:	mov	r3, r7
    14e0:	mov	r2, r6
    14e4:	mov	r1, r5
    14e8:	mov	r0, r4
    14ec:	bl	110c <apply_xline>
    14f0:	b	14d0 <handle_remote_xline+0x80>
    14f4:	.word	0x00001102

000014f8 <me_xline>:
    14f8:	ldrh	r3, [r2, #80]	; 0x50
    14fc:	push	{r4, r5, r6, lr}
    1500:	cmp	r3, #64	; 0x40
    1504:	ldr	r5, [sp, #16]
    1508:	popne	{r4, r5, r6, pc}
    150c:	ldr	r3, [r2, #24]
    1510:	cmp	r3, #0
    1514:	popeq	{r4, r5, r6, pc}
    1518:	ldr	r0, [r5, #4]
    151c:	mov	r4, r2
    1520:	bl	cb4 <atoi@plt>
    1524:	ldr	r3, [r5, #16]
    1528:	ldr	r2, [r5, #8]
    152c:	mov	r1, r0
    1530:	mov	r0, r4
    1534:	pop	{r4, r5, r6, lr}
    1538:	b	1450 <handle_remote_xline>

0000153c <ms_xline>:
    153c:	push	{r0, r1, r4, r5, r6, lr}
    1540:	mov	r5, r2
    1544:	ldr	r4, [sp, #24]
    1548:	mov	r2, #0
    154c:	mov	r0, r5
    1550:	ldr	r3, [r4, #16]
    1554:	ldr	r6, [pc, #112]	; 15cc <ms_xline+0x90>
    1558:	str	r3, [sp, #4]
    155c:	ldr	r3, [r4, #12]
    1560:	add	r6, pc, r6
    1564:	str	r3, [sp]
    1568:	ldr	r3, [r4, #8]
    156c:	ldr	r1, [r4, #4]
    1570:	bl	ea0 <propagate_xline.part.0>
    1574:	ldrh	r3, [r5, #80]	; 0x50
    1578:	cmp	r3, #64	; 0x40
    157c:	bne	15c4 <ms_xline+0x88>
    1580:	ldr	r3, [r5, #24]
    1584:	cmp	r3, #0
    1588:	beq	15c4 <ms_xline+0x88>
    158c:	ldr	r3, [pc, #60]	; 15d0 <ms_xline+0x94>
    1590:	ldr	r0, [r4, #4]
    1594:	ldr	r1, [r6, r3]
    1598:	add	r1, r1, #88	; 0x58
    159c:	bl	c78 <match@plt>
    15a0:	cmp	r0, #0
    15a4:	beq	15c4 <ms_xline+0x88>
    15a8:	ldr	r3, [r4, #16]
    15ac:	ldr	r2, [r4, #8]
    15b0:	mov	r1, #0
    15b4:	mov	r0, r5
    15b8:	add	sp, sp, #8
    15bc:	pop	{r4, r5, r6, lr}
    15c0:	b	1450 <handle_remote_xline>
    15c4:	add	sp, sp, #8
    15c8:	pop	{r4, r5, r6, pc}
    15cc:	.word	0x00011a98
    15d0:	.word	0x000000d4

000015d4 <mo_xline>:
    15d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    15d8:	mov	fp, r3
    15dc:	ldr	r3, [r2, #24]
    15e0:	sub	sp, sp, #44	; 0x2c
    15e4:	ldr	r5, [pc, #956]	; 19a8 <mo_xline+0x3d4>
    15e8:	cmp	r3, #0
    15ec:	add	r5, pc, r5
    15f0:	mov	r4, r2
    15f4:	ldr	r8, [sp, #80]	; 0x50
    15f8:	bne	1630 <mo_xline+0x5c>
    15fc:	ldr	r3, [pc, #936]	; 19ac <mo_xline+0x3d8>
    1600:	ldr	r1, [pc, #936]	; 19b0 <mo_xline+0x3dc>
    1604:	ldr	r2, [r5, r3]
    1608:	ldr	r3, [pc, #932]	; 19b4 <mo_xline+0x3e0>
    160c:	add	r2, r2, #88	; 0x58
    1610:	add	r3, pc, r3
    1614:	str	r3, [sp, #80]	; 0x50
    1618:	add	r1, pc, r1
    161c:	add	r3, r4, #88	; 0x58
    1620:	mov	r0, r4
    1624:	add	sp, sp, #44	; 0x2c
    1628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    162c:	b	b70 <sendto_one@plt>
    1630:	ldr	r0, [r3, #36]	; 0x24
    1634:	cmp	r0, #0
    1638:	beq	15fc <mo_xline+0x28>
    163c:	ldr	r3, [pc, #884]	; 19b8 <mo_xline+0x3e4>
    1640:	ldr	r1, [pc, #884]	; 19bc <mo_xline+0x3e8>
    1644:	ldr	r3, [r5, r3]
    1648:	add	r1, pc, r1
    164c:	ldr	r3, [r3, #324]	; 0x144
    1650:	str	r3, [sp, #28]
    1654:	bl	cd8 <privilegeset_in_set@plt>
    1658:	cmp	r0, #0
    165c:	beq	15fc <mo_xline+0x28>
    1660:	ldr	r0, [r8, #4]
    1664:	bl	c84 <valid_temp_time@plt>
    1668:	subs	r6, r0, #0
    166c:	movge	sl, #2
    1670:	movlt	sl, #1
    1674:	add	r1, sl, #2
    1678:	movlt	r6, #0
    167c:	cmp	r1, fp
    1680:	lsl	r9, sl, #2
    1684:	ldr	r7, [r8, sl, lsl #2]
    1688:	add	r2, sl, #1
    168c:	movge	r9, #0
    1690:	bge	1714 <mo_xline+0x140>
    1694:	add	r9, r8, r9
    1698:	ldr	r1, [pc, #800]	; 19c0 <mo_xline+0x3ec>
    169c:	ldr	r0, [r9, #4]
    16a0:	add	r1, pc, r1
    16a4:	str	r2, [sp, #32]
    16a8:	bl	ce4 <irccmp@plt>
    16ac:	ldr	r2, [sp, #32]
    16b0:	cmp	r0, #0
    16b4:	bne	1744 <mo_xline+0x170>
    16b8:	ldr	r2, [r4, #24]
    16bc:	cmp	r2, #0
    16c0:	bne	16ec <mo_xline+0x118>
    16c4:	ldr	r3, [pc, #736]	; 19ac <mo_xline+0x3d8>
    16c8:	ldr	r1, [pc, #756]	; 19c4 <mo_xline+0x3f0>
    16cc:	ldr	r2, [r5, r3]
    16d0:	ldr	r3, [pc, #752]	; 19c8 <mo_xline+0x3f4>
    16d4:	add	r2, r2, #88	; 0x58
    16d8:	add	r3, pc, r3
    16dc:	str	r3, [sp, #80]	; 0x50
    16e0:	add	r1, pc, r1
    16e4:	add	r3, r4, #88	; 0x58
    16e8:	b	1620 <mo_xline+0x4c>
    16ec:	ldr	r0, [r2, #36]	; 0x24
    16f0:	cmp	r0, #0
    16f4:	beq	16c4 <mo_xline+0xf0>
    16f8:	ldr	r1, [pc, #716]	; 19cc <mo_xline+0x3f8>
    16fc:	add	r1, pc, r1
    1700:	bl	cd8 <privilegeset_in_set@plt>
    1704:	cmp	r0, #0
    1708:	addne	r2, sl, #3
    170c:	ldrne	r9, [r9, #8]
    1710:	beq	16c4 <mo_xline+0xf0>
    1714:	cmp	r2, fp
    1718:	blt	1748 <mo_xline+0x174>
    171c:	ldr	r3, [pc, #648]	; 19ac <mo_xline+0x3d8>
    1720:	ldr	r1, [pc, #680]	; 19d0 <mo_xline+0x3fc>
    1724:	ldr	r2, [r5, r3]
    1728:	ldr	r3, [pc, #676]	; 19d4 <mo_xline+0x400>
    172c:	add	r2, r2, #88	; 0x58
    1730:	add	r3, pc, r3
    1734:	str	r3, [sp, #80]	; 0x50
    1738:	add	r1, pc, r1
    173c:	add	r3, r4, #88	; 0x58
    1740:	b	1620 <mo_xline+0x4c>
    1744:	mov	r9, #0
    1748:	ldr	r8, [r8, r2, lsl #2]
    174c:	cmp	r8, #0
    1750:	beq	171c <mo_xline+0x148>
    1754:	ldrb	r3, [r8]
    1758:	cmp	r3, #0
    175c:	beq	171c <mo_xline+0x148>
    1760:	cmp	r9, #0
    1764:	beq	1848 <mo_xline+0x274>
    1768:	cmp	r6, #0
    176c:	bne	1800 <mo_xline+0x22c>
    1770:	ldr	r3, [pc, #608]	; 19d8 <mo_xline+0x404>
    1774:	str	r8, [sp, #4]
    1778:	add	r3, pc, r3
    177c:	str	r3, [sp]
    1780:	mov	r2, r6
    1784:	mov	r3, r7
    1788:	mov	r1, r9
    178c:	mov	r0, r4
    1790:	bl	ea0 <propagate_xline.part.0>
    1794:	ldr	r3, [pc, #528]	; 19ac <mo_xline+0x3d8>
    1798:	mov	r0, r9
    179c:	ldr	r1, [r5, r3]
    17a0:	add	r1, r1, #88	; 0x58
    17a4:	bl	c78 <match@plt>
    17a8:	cmp	r0, #0
    17ac:	beq	17f8 <mo_xline+0x224>
    17b0:	mov	r9, #0
    17b4:	mov	r0, r7
    17b8:	bl	c54 <find_xline_mask@plt>
    17bc:	cmp	r0, #0
    17c0:	beq	1944 <mo_xline+0x370>
    17c4:	ldr	r3, [pc, #480]	; 19ac <mo_xline+0x3d8>
    17c8:	ldr	r1, [pc, #524]	; 19dc <mo_xline+0x408>
    17cc:	ldr	r2, [r5, r3]
    17d0:	ldr	r3, [r0, #20]
    17d4:	add	r2, r2, #88	; 0x58
    17d8:	str	r3, [sp, #8]
    17dc:	ldr	r3, [r0, #16]
    17e0:	add	r1, pc, r1
    17e4:	str	r3, [sp, #4]
    17e8:	str	r7, [sp]
    17ec:	add	r3, r4, #88	; 0x58
    17f0:	mov	r0, r4
    17f4:	bl	b70 <sendto_one@plt>
    17f8:	add	sp, sp, #44	; 0x2c
    17fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1800:	ldr	r3, [pc, #472]	; 19e0 <mo_xline+0x40c>
    1804:	mov	r1, r9
    1808:	mov	r0, r4
    180c:	ldr	r2, [r5, r3]
    1810:	ldr	r3, [pc, #460]	; 19e4 <mo_xline+0x410>
    1814:	str	r8, [sp, #20]
    1818:	add	r3, pc, r3
    181c:	str	r3, [sp, #16]
    1820:	ldr	r3, [pc, #448]	; 19e8 <mo_xline+0x414>
    1824:	str	r7, [sp, #12]
    1828:	add	r3, pc, r3
    182c:	str	r3, [sp]
    1830:	str	r6, [sp, #8]
    1834:	str	r9, [sp, #4]
    1838:	mov	r3, #0
    183c:	ldr	r2, [r2]
    1840:	bl	b58 <sendto_match_servs@plt>
    1844:	b	1794 <mo_xline+0x1c0>
    1848:	ldr	r3, [sp, #28]
    184c:	cmp	r3, #0
    1850:	movne	r9, #1
    1854:	bne	17b4 <mo_xline+0x1e0>
    1858:	ldr	r3, [pc, #396]	; 19ec <mo_xline+0x418>
    185c:	ldr	r3, [r5, r3]
    1860:	ldr	r2, [r3, #8]
    1864:	cmp	r2, #0
    1868:	beq	17b0 <mo_xline+0x1dc>
    186c:	ldr	r9, [r3]
    1870:	ldr	r3, [pc, #376]	; 19f0 <mo_xline+0x41c>
    1874:	ldr	fp, [pc, #376]	; 19f4 <mo_xline+0x420>
    1878:	add	r3, pc, r3
    187c:	str	r3, [sp, #32]
    1880:	ldr	r3, [pc, #368]	; 19f8 <mo_xline+0x424>
    1884:	add	fp, pc, fp
    1888:	add	r3, pc, r3
    188c:	str	r3, [sp, #36]	; 0x24
    1890:	cmp	r9, #0
    1894:	beq	17b0 <mo_xline+0x1dc>
    1898:	ldr	sl, [r9]
    189c:	cmp	r6, #0
    18a0:	ldr	r3, [sl, #12]
    18a4:	bne	1910 <mo_xline+0x33c>
    18a8:	tst	r3, #32
    18ac:	beq	1908 <mo_xline+0x334>
    18b0:	ldr	r3, [pc, #324]	; 19fc <mo_xline+0x428>
    18b4:	ldr	r1, [sl, #8]
    18b8:	mov	r0, r4
    18bc:	ldr	r3, [r5, r3]
    18c0:	stmib	sp, {r1, r7, r8}
    18c4:	str	r3, [sp, #28]
    18c8:	ldr	r2, [sp, #28]
    18cc:	ldr	r3, [sp, #36]	; 0x24
    18d0:	str	r3, [sp]
    18d4:	mov	r3, r6
    18d8:	ldr	r2, [r2]
    18dc:	bl	b58 <sendto_match_servs@plt>
    18e0:	ldr	r3, [pc, #248]	; 19e0 <mo_xline+0x40c>
    18e4:	ldr	r1, [sl, #8]
    18e8:	mov	r0, r4
    18ec:	ldr	r2, [r5, r3]
    18f0:	ldr	r3, [sp, #28]
    18f4:	stmib	sp, {r1, r7, r8}
    18f8:	str	fp, [sp]
    18fc:	ldr	r3, [r3]
    1900:	ldr	r2, [r2]
    1904:	bl	b58 <sendto_match_servs@plt>
    1908:	ldr	r9, [r9, #8]
    190c:	b	1890 <mo_xline+0x2bc>
    1910:	tst	r3, #16
    1914:	beq	1908 <mo_xline+0x334>
    1918:	ldr	r3, [pc, #192]	; 19e0 <mo_xline+0x40c>
    191c:	ldr	r1, [sl, #8]
    1920:	mov	r0, r4
    1924:	ldr	r2, [r5, r3]
    1928:	ldr	r3, [sp, #32]
    192c:	stmib	sp, {r1, r6, r7, r8}
    1930:	str	r3, [sp]
    1934:	mov	r3, #0
    1938:	ldr	r2, [r2]
    193c:	bl	b58 <sendto_match_servs@plt>
    1940:	b	1908 <mo_xline+0x334>
    1944:	mov	r2, r8
    1948:	mov	r1, r7
    194c:	mov	r0, r4
    1950:	bl	f44 <valid_xline>
    1954:	cmp	r0, #0
    1958:	beq	17f8 <mo_xline+0x224>
    195c:	cmp	r6, #0
    1960:	movne	r3, #0
    1964:	andeq	r3, r9, #1
    1968:	cmp	r3, #0
    196c:	beq	1988 <mo_xline+0x3b4>
    1970:	ldr	r1, [pc, #136]	; 1a00 <mo_xline+0x42c>
    1974:	mov	r0, r4
    1978:	add	r1, pc, r1
    197c:	add	sp, sp, #44	; 0x2c
    1980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1984:	b	c9c <sendto_one_notice@plt>
    1988:	str	r9, [sp, #80]	; 0x50
    198c:	mov	r3, r6
    1990:	mov	r2, r8
    1994:	mov	r1, r7
    1998:	mov	r0, r4
    199c:	add	sp, sp, #44	; 0x2c
    19a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19a4:	b	110c <apply_xline>
    19a8:	.word	0x00011a0c
    19ac:	.word	0x000000d4
    19b0:	.word	0x00000f12
    19b4:	.word	0x00000dbc
    19b8:	.word	0x000000dc
    19bc:	.word	0x00000f09
    19c0:	.word	0x00000ebc
    19c4:	.word	0x00000e4a
    19c8:	.word	0x00000e8c
    19cc:	.word	0x00000e63
    19d0:	.word	0x00000c32
    19d4:	.word	0x00000f30
    19d8:	.word	0x00000df6
    19dc:	.word	0x00000dd8
    19e0:	.word	0x000000d8
    19e4:	.word	0x00000d56
    19e8:	.word	0x00000d48
    19ec:	.word	0x000000c8
    19f0:	.word	0x00000ad7
    19f4:	.word	0x00000d1a
    19f8:	.word	0x00000d04
    19fc:	.word	0x000000b8
    1a00:	.word	0x00000c71

00001a04 <remove_xline>:
    1a04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1a08:	mov	r5, r0
    1a0c:	ldr	r8, [pc, #924]	; 1db0 <remove_xline+0x3ac>
    1a10:	ldr	r3, [pc, #924]	; 1db4 <remove_xline+0x3b0>
    1a14:	add	r8, pc, r8
    1a18:	sub	sp, sp, #24
    1a1c:	ldr	r9, [r8, r3]
    1a20:	mov	r6, r1
    1a24:	mov	sl, r2
    1a28:	ldr	r7, [r9]
    1a2c:	cmp	r7, #0
    1a30:	bne	1a90 <remove_xline+0x8c>
    1a34:	cmp	sl, #0
    1a38:	beq	1a80 <remove_xline+0x7c>
    1a3c:	ldr	r3, [pc, #884]	; 1db8 <remove_xline+0x3b4>
    1a40:	ldr	r3, [r8, r3]
    1a44:	ldr	r3, [r3, #8]
    1a48:	cmp	r3, #0
    1a4c:	beq	1a80 <remove_xline+0x7c>
    1a50:	ldr	r3, [pc, #868]	; 1dbc <remove_xline+0x3b8>
    1a54:	ldr	r2, [pc, #868]	; 1dc0 <remove_xline+0x3bc>
    1a58:	ldr	r1, [pc, #868]	; 1dc4 <remove_xline+0x3c0>
    1a5c:	ldr	r3, [r8, r3]
    1a60:	add	r2, pc, r2
    1a64:	str	r2, [sp]
    1a68:	str	r6, [sp, #4]
    1a6c:	mov	r2, #64	; 0x40
    1a70:	ldr	r3, [r3]
    1a74:	add	r1, pc, r1
    1a78:	mov	r0, r5
    1a7c:	bl	be8 <cluster_generic@plt>
    1a80:	ldr	r1, [pc, #832]	; 1dc8 <remove_xline+0x3c4>
    1a84:	mov	r2, r6
    1a88:	add	r1, pc, r1
    1a8c:	b	1ac8 <remove_xline+0xc4>
    1a90:	ldr	r4, [r7]
    1a94:	mov	r1, r6
    1a98:	ldr	r0, [r4, #16]
    1a9c:	bl	ce4 <irccmp@plt>
    1aa0:	cmp	r0, #0
    1aa4:	bne	1c80 <remove_xline+0x27c>
    1aa8:	ldr	r3, [r4, #44]	; 0x2c
    1aac:	cmp	r3, #0
    1ab0:	beq	1b08 <remove_xline+0x104>
    1ab4:	cmp	sl, #0
    1ab8:	bne	1ad8 <remove_xline+0xd4>
    1abc:	ldr	r1, [pc, #776]	; 1dcc <remove_xline+0x3c8>
    1ac0:	mov	r2, r6
    1ac4:	add	r1, pc, r1
    1ac8:	mov	r0, r5
    1acc:	add	sp, sp, #24
    1ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1ad4:	b	c9c <sendto_one_notice@plt>
    1ad8:	ldr	r3, [pc, #752]	; 1dd0 <remove_xline+0x3cc>
    1adc:	ldr	r3, [r8, r3]
    1ae0:	ldr	r7, [r3]
    1ae4:	cmp	r7, #0
    1ae8:	bne	1af4 <remove_xline+0xf0>
    1aec:	add	sp, sp, #24
    1af0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1af4:	ldr	r3, [r7]
    1af8:	cmp	r4, r3
    1afc:	beq	1c88 <remove_xline+0x284>
    1b00:	ldr	r7, [r7, #8]
    1b04:	b	1ae4 <remove_xline+0xe0>
    1b08:	cmp	sl, #0
    1b0c:	beq	1b54 <remove_xline+0x150>
    1b10:	ldr	r3, [pc, #672]	; 1db8 <remove_xline+0x3b4>
    1b14:	ldr	r3, [r8, r3]
    1b18:	ldr	r3, [r3, #8]
    1b1c:	cmp	r3, #0
    1b20:	beq	1b54 <remove_xline+0x150>
    1b24:	ldr	r3, [pc, #656]	; 1dbc <remove_xline+0x3b8>
    1b28:	ldr	r2, [pc, #676]	; 1dd4 <remove_xline+0x3d0>
    1b2c:	ldr	r1, [pc, #676]	; 1dd8 <remove_xline+0x3d4>
    1b30:	ldr	r3, [r8, r3]
    1b34:	add	r2, pc, r2
    1b38:	str	r2, [sp]
    1b3c:	str	r6, [sp, #4]
    1b40:	mov	r2, #64	; 0x40
    1b44:	ldr	r3, [r3]
    1b48:	add	r1, pc, r1
    1b4c:	mov	r0, r5
    1b50:	bl	be8 <cluster_generic@plt>
    1b54:	ldr	r8, [r4, #36]	; 0x24
    1b58:	cmp	r8, #0
    1b5c:	bne	1c2c <remove_xline+0x228>
    1b60:	mov	r2, r8
    1b64:	ldr	r1, [r4, #16]
    1b68:	mov	r0, #2
    1b6c:	bl	ca8 <bandb_del@plt>
    1b70:	ldr	r1, [pc, #612]	; 1ddc <remove_xline+0x3d8>
    1b74:	ldr	r2, [r4, #16]
    1b78:	add	r1, pc, r1
    1b7c:	mov	r0, r5
    1b80:	bl	c9c <sendto_one_notice@plt>
    1b84:	mov	r0, r5
    1b88:	bl	bd0 <get_oper_name@plt>
    1b8c:	ldr	r3, [r4, #16]
    1b90:	ldr	r2, [pc, #584]	; 1de0 <remove_xline+0x3dc>
    1b94:	mov	r1, r8
    1b98:	add	r2, pc, r2
    1b9c:	str	r3, [sp]
    1ba0:	mov	r3, r0
    1ba4:	mov	r0, #256	; 0x100
    1ba8:	bl	ba0 <sendto_realops_snomask@plt>
    1bac:	mov	r0, r5
    1bb0:	bl	bd0 <get_oper_name@plt>
    1bb4:	ldr	r1, [pc, #552]	; 1de4 <remove_xline+0x3e0>
    1bb8:	ldr	r3, [r4, #16]
    1bbc:	add	r1, pc, r1
    1bc0:	mov	r2, r0
    1bc4:	mov	r0, #7
    1bc8:	bl	c60 <ilog@plt>
    1bcc:	mov	r1, #0
    1bd0:	ldr	r0, [r4, #16]
    1bd4:	bl	c90 <remove_reject_mask@plt>
    1bd8:	mov	r0, r4
    1bdc:	bl	c30 <free_conf@plt>
    1be0:	ldr	r3, [r7, #8]
    1be4:	ldr	r2, [r7, #4]
    1be8:	cmp	r3, #0
    1bec:	strne	r2, [r3, #4]
    1bf0:	streq	r2, [r9, #4]
    1bf4:	ldr	r2, [r7, #4]
    1bf8:	mov	r0, r7
    1bfc:	cmp	r2, #0
    1c00:	strne	r3, [r2, #8]
    1c04:	streq	r3, [r9]
    1c08:	mov	r3, #0
    1c0c:	str	r3, [r7, #4]
    1c10:	str	r3, [r7, #8]
    1c14:	ldr	r3, [r9, #8]
    1c18:	sub	r3, r3, #1
    1c1c:	str	r3, [r9, #8]
    1c20:	add	sp, sp, #24
    1c24:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1c28:	b	bdc <rb_free_rb_dlink_node@plt>
    1c2c:	ldr	r1, [pc, #436]	; 1de8 <remove_xline+0x3e4>
    1c30:	mov	r2, r6
    1c34:	add	r1, pc, r1
    1c38:	mov	r0, r5
    1c3c:	bl	c9c <sendto_one_notice@plt>
    1c40:	mov	r0, r5
    1c44:	bl	bd0 <get_oper_name@plt>
    1c48:	ldr	r2, [pc, #412]	; 1dec <remove_xline+0x3e8>
    1c4c:	mov	r1, #0
    1c50:	add	r2, pc, r2
    1c54:	str	r6, [sp]
    1c58:	mov	r3, r0
    1c5c:	mov	r0, #256	; 0x100
    1c60:	bl	ba0 <sendto_realops_snomask@plt>
    1c64:	mov	r0, r5
    1c68:	bl	bd0 <get_oper_name@plt>
    1c6c:	ldr	r1, [pc, #380]	; 1df0 <remove_xline+0x3ec>
    1c70:	mov	r3, r6
    1c74:	add	r1, pc, r1
    1c78:	mov	r2, r0
    1c7c:	b	1bc4 <remove_xline+0x1c0>
    1c80:	ldr	r7, [r7, #8]
    1c84:	b	1a2c <remove_xline+0x28>
    1c88:	ldr	r1, [pc, #356]	; 1df4 <remove_xline+0x3f0>
    1c8c:	mov	r2, r6
    1c90:	add	r1, pc, r1
    1c94:	mov	r0, r5
    1c98:	bl	c9c <sendto_one_notice@plt>
    1c9c:	mov	r0, r5
    1ca0:	bl	bd0 <get_oper_name@plt>
    1ca4:	ldr	r2, [pc, #332]	; 1df8 <remove_xline+0x3f4>
    1ca8:	mov	r1, #0
    1cac:	add	r2, pc, r2
    1cb0:	str	r6, [sp]
    1cb4:	mov	r3, r0
    1cb8:	mov	r0, #256	; 0x100
    1cbc:	bl	ba0 <sendto_realops_snomask@plt>
    1cc0:	mov	r0, r5
    1cc4:	bl	bd0 <get_oper_name@plt>
    1cc8:	ldr	r1, [pc, #300]	; 1dfc <remove_xline+0x3f8>
    1ccc:	mov	r3, r6
    1cd0:	add	r1, pc, r1
    1cd4:	mov	r2, r0
    1cd8:	mov	r0, #7
    1cdc:	bl	c60 <ilog@plt>
    1ce0:	bl	b4c <rb_current_time@plt>
    1ce4:	ldr	r3, [r4, #40]	; 0x28
    1ce8:	cmp	r0, r3
    1cec:	mov	r9, r0
    1cf0:	strgt	r0, [r4, #40]	; 0x28
    1cf4:	addle	r3, r3, #1
    1cf8:	strle	r3, [r4, #40]	; 0x28
    1cfc:	ldr	r3, [r4, #40]	; 0x28
    1d00:	ldr	r0, [r4, #12]
    1d04:	str	r3, [r4, #36]	; 0x24
    1d08:	bl	b94 <operhash_delete@plt>
    1d0c:	mov	r0, r5
    1d10:	bl	bd0 <get_oper_name@plt>
    1d14:	bl	bf4 <operhash_add@plt>
    1d18:	ldr	r3, [r4, #4]
    1d1c:	ldr	r1, [r4, #40]	; 0x28
    1d20:	orr	r3, r3, #8912896	; 0x880000
    1d24:	str	r3, [r4, #4]
    1d28:	ldr	r3, [pc, #208]	; 1e00 <remove_xline+0x3fc>
    1d2c:	mov	r6, #0
    1d30:	add	r5, r5, #396	; 0x18c
    1d34:	str	r0, [r4, #12]
    1d38:	ldr	r2, [r8, r3]
    1d3c:	ldr	r3, [pc, #192]	; 1e04 <remove_xline+0x400>
    1d40:	ldr	r0, [r2]
    1d44:	ldr	r3, [r8, r3]
    1d48:	ldr	r2, [r3]
    1d4c:	ldr	r3, [r4, #44]	; 0x2c
    1d50:	str	r1, [sp, #12]
    1d54:	sub	r3, r3, r1
    1d58:	str	r3, [sp, #20]
    1d5c:	str	r6, [sp, #16]
    1d60:	ldr	r3, [r4, #16]
    1d64:	orr	r2, r0, r2
    1d68:	str	r3, [sp, #8]
    1d6c:	ldr	r3, [pc, #148]	; 1e08 <remove_xline+0x404>
    1d70:	mov	r1, r6
    1d74:	add	r3, pc, r3
    1d78:	str	r3, [sp]
    1d7c:	mov	r0, r6
    1d80:	mov	r3, r6
    1d84:	str	r5, [sp, #4]
    1d88:	bl	c0c <sendto_server@plt>
    1d8c:	mov	r1, r6
    1d90:	ldr	r0, [r4, #16]
    1d94:	bl	c90 <remove_reject_mask@plt>
    1d98:	mov	r2, r9
    1d9c:	mov	r1, r7
    1da0:	mov	r0, r4
    1da4:	add	sp, sp, #24
    1da8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1dac:	b	bb8 <deactivate_conf@plt>
    1db0:	.word	0x000115e4
    1db4:	.word	0x000000b4
    1db8:	.word	0x000000c8
    1dbc:	.word	0x000000b8
    1dc0:	.word	0x00000b86
    1dc4:	.word	0x00000bea
    1dc8:	.word	0x00000c55
    1dcc:	.word	0x00000b48
    1dd0:	.word	0x000000b0
    1dd4:	.word	0x00000ab2
    1dd8:	.word	0x00000b16
    1ddc:	.word	0x00000aee
    1de0:	.word	0x00000aea
    1de4:	.word	0x00000aea
    1de8:	.word	0x00000a32
    1dec:	.word	0x00000a5f
    1df0:	.word	0x00000a32
    1df4:	.word	0x000009d6
    1df8:	.word	0x00000a43
    1dfc:	.word	0x000009d6
    1e00:	.word	0x000000bc
    1e04:	.word	0x000000c0
    1e08:	.word	0x000008cc

00001e0c <mo_unxline>:
    1e0c:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    1e10:	mov	r4, r2
    1e14:	ldr	r2, [r2, #24]
    1e18:	ldr	r7, [pc, #324]	; 1f64 <mo_unxline+0x158>
    1e1c:	cmp	r2, #0
    1e20:	add	r7, pc, r7
    1e24:	ldr	r5, [sp, #32]
    1e28:	bne	1e60 <mo_unxline+0x54>
    1e2c:	ldr	r3, [pc, #308]	; 1f68 <mo_unxline+0x15c>
    1e30:	ldr	r1, [pc, #308]	; 1f6c <mo_unxline+0x160>
    1e34:	ldr	r2, [r7, r3]
    1e38:	ldr	r3, [pc, #304]	; 1f70 <mo_unxline+0x164>
    1e3c:	add	r2, r2, #88	; 0x58
    1e40:	add	r3, pc, r3
    1e44:	str	r3, [sp, #32]
    1e48:	add	r1, pc, r1
    1e4c:	add	r3, r4, #88	; 0x58
    1e50:	mov	r0, r4
    1e54:	add	sp, sp, #8
    1e58:	pop	{r4, r5, r6, r7, r8, lr}
    1e5c:	b	b70 <sendto_one@plt>
    1e60:	ldr	r0, [r2, #36]	; 0x24
    1e64:	cmp	r0, #0
    1e68:	beq	1e2c <mo_unxline+0x20>
    1e6c:	ldr	r1, [pc, #256]	; 1f74 <mo_unxline+0x168>
    1e70:	mov	r6, r3
    1e74:	add	r1, pc, r1
    1e78:	bl	cd8 <privilegeset_in_set@plt>
    1e7c:	cmp	r0, #0
    1e80:	beq	1e2c <mo_unxline+0x20>
    1e84:	cmp	r6, #4
    1e88:	beq	1ea4 <mo_unxline+0x98>
    1e8c:	mov	r2, #1
    1e90:	ldr	r1, [r5, #4]
    1e94:	mov	r0, r4
    1e98:	add	sp, sp, #8
    1e9c:	pop	{r4, r5, r6, r7, r8, lr}
    1ea0:	b	1a04 <remove_xline>
    1ea4:	ldr	r1, [pc, #204]	; 1f78 <mo_unxline+0x16c>
    1ea8:	ldr	r0, [r5, #8]
    1eac:	add	r1, pc, r1
    1eb0:	bl	ce4 <irccmp@plt>
    1eb4:	subs	r6, r0, #0
    1eb8:	bne	1e8c <mo_unxline+0x80>
    1ebc:	ldr	r3, [r4, #24]
    1ec0:	ldr	r2, [pc, #160]	; 1f68 <mo_unxline+0x15c>
    1ec4:	cmp	r3, #0
    1ec8:	ldr	r8, [r7, r2]
    1ecc:	bne	1ef0 <mo_unxline+0xe4>
    1ed0:	ldr	r3, [pc, #164]	; 1f7c <mo_unxline+0x170>
    1ed4:	ldr	r1, [pc, #164]	; 1f80 <mo_unxline+0x174>
    1ed8:	add	r3, pc, r3
    1edc:	str	r3, [sp, #32]
    1ee0:	add	r2, r8, #88	; 0x58
    1ee4:	add	r3, r4, #88	; 0x58
    1ee8:	add	r1, pc, r1
    1eec:	b	1e50 <mo_unxline+0x44>
    1ef0:	ldr	r0, [r3, #36]	; 0x24
    1ef4:	cmp	r0, #0
    1ef8:	beq	1ed0 <mo_unxline+0xc4>
    1efc:	ldr	r1, [pc, #128]	; 1f84 <mo_unxline+0x178>
    1f00:	add	r1, pc, r1
    1f04:	bl	cd8 <privilegeset_in_set@plt>
    1f08:	cmp	r0, #0
    1f0c:	beq	1ed0 <mo_unxline+0xc4>
    1f10:	ldr	r3, [pc, #112]	; 1f88 <mo_unxline+0x17c>
    1f14:	ldr	r2, [r5, #4]
    1f18:	ldr	r1, [pc, #108]	; 1f8c <mo_unxline+0x180>
    1f1c:	ldr	r3, [r7, r3]
    1f20:	str	r2, [sp, #4]
    1f24:	ldr	r2, [pc, #100]	; 1f90 <mo_unxline+0x184>
    1f28:	add	r1, pc, r1
    1f2c:	add	r2, pc, r2
    1f30:	str	r2, [sp]
    1f34:	mov	r0, r4
    1f38:	ldr	r3, [r3]
    1f3c:	ldr	r2, [r5, #12]
    1f40:	bl	b28 <propagate_generic@plt>
    1f44:	add	r1, r8, #88	; 0x58
    1f48:	ldr	r0, [r5, #12]
    1f4c:	bl	c78 <match@plt>
    1f50:	cmp	r0, #0
    1f54:	movne	r2, r6
    1f58:	bne	1e90 <mo_unxline+0x84>
    1f5c:	add	sp, sp, #8
    1f60:	pop	{r4, r5, r6, r7, r8, pc}
    1f64:	.word	0x000111d8
    1f68:	.word	0x000000d4
    1f6c:	.word	0x000006e2
    1f70:	.word	0x0000058c
    1f74:	.word	0x000006dd
    1f78:	.word	0x000006b0
    1f7c:	.word	0x0000068c
    1f80:	.word	0x00000642
    1f84:	.word	0x0000065f
    1f88:	.word	0x000000b8
    1f8c:	.word	0x00000736
    1f90:	.word	0x000006ba

00001f94 <handle_remote_unxline>:
    1f94:	ldr	r2, [r0, #32]
    1f98:	push	{r4, r5, r6, lr}
    1f9c:	mov	r3, #64	; 0x40
    1fa0:	mov	r4, r0
    1fa4:	mov	r5, r1
    1fa8:	add	r2, r2, #88	; 0x58
    1fac:	add	r1, r0, #163	; 0xa3
    1fb0:	add	r0, r0, #152	; 0x98
    1fb4:	bl	ccc <find_shared_conf@plt>
    1fb8:	cmp	r0, #0
    1fbc:	popeq	{r4, r5, r6, pc}
    1fc0:	mov	r1, r5
    1fc4:	mov	r0, r4
    1fc8:	mov	r2, #0
    1fcc:	pop	{r4, r5, r6, lr}
    1fd0:	b	1a04 <remove_xline>

00001fd4 <me_unxline>:
    1fd4:	ldrh	r1, [r2, #80]	; 0x50
    1fd8:	ldr	r3, [sp]
    1fdc:	cmp	r1, #64	; 0x40
    1fe0:	bxne	lr
    1fe4:	ldr	r1, [r2, #24]
    1fe8:	cmp	r1, #0
    1fec:	bxeq	lr
    1ff0:	ldr	r1, [r3, #4]
    1ff4:	mov	r0, r2
    1ff8:	b	1f94 <handle_remote_unxline>

00001ffc <ms_unxline>:
    1ffc:	push	{r0, r1, r4, r5, r6, lr}
    2000:	mov	r4, r2
    2004:	ldr	r5, [sp, #24]
    2008:	ldr	r6, [pc, #132]	; 2094 <ms_unxline+0x98>
    200c:	ldr	r3, [pc, #132]	; 2098 <ms_unxline+0x9c>
    2010:	ldr	r2, [r5, #8]
    2014:	add	r6, pc, r6
    2018:	ldr	r1, [pc, #124]	; 209c <ms_unxline+0xa0>
    201c:	ldr	r3, [r6, r3]
    2020:	str	r2, [sp, #4]
    2024:	ldr	r2, [pc, #116]	; 20a0 <ms_unxline+0xa4>
    2028:	add	r1, pc, r1
    202c:	add	r2, pc, r2
    2030:	str	r2, [sp]
    2034:	mov	r0, r4
    2038:	ldr	r3, [r3]
    203c:	ldr	r2, [r5, #4]
    2040:	bl	b28 <propagate_generic@plt>
    2044:	ldr	r3, [pc, #88]	; 20a4 <ms_unxline+0xa8>
    2048:	ldr	r0, [r5, #4]
    204c:	ldr	r1, [r6, r3]
    2050:	add	r1, r1, #88	; 0x58
    2054:	bl	c78 <match@plt>
    2058:	cmp	r0, #0
    205c:	beq	208c <ms_unxline+0x90>
    2060:	ldrh	r3, [r4, #80]	; 0x50
    2064:	cmp	r3, #64	; 0x40
    2068:	bne	208c <ms_unxline+0x90>
    206c:	ldr	r3, [r4, #24]
    2070:	cmp	r3, #0
    2074:	beq	208c <ms_unxline+0x90>
    2078:	ldr	r1, [r5, #8]
    207c:	mov	r0, r4
    2080:	add	sp, sp, #8
    2084:	pop	{r4, r5, r6, lr}
    2088:	b	1f94 <handle_remote_unxline>
    208c:	add	sp, sp, #8
    2090:	pop	{r4, r5, r6, pc}
    2094:	.word	0x00010fe4
    2098:	.word	0x000000b8
    209c:	.word	0x00000636
    20a0:	.word	0x000005ba
    20a4:	.word	0x000000d4

000020a8 <__divsi3>:
    20a8:	cmp	r1, #0
    20ac:	beq	22b8 <.divsi3_skip_div0_test+0x208>

000020b0 <.divsi3_skip_div0_test>:
    20b0:	eor	ip, r0, r1
    20b4:	rsbmi	r1, r1, #0
    20b8:	subs	r2, r1, #1
    20bc:	beq	2284 <.divsi3_skip_div0_test+0x1d4>
    20c0:	movs	r3, r0
    20c4:	rsbmi	r3, r0, #0
    20c8:	cmp	r3, r1
    20cc:	bls	2290 <.divsi3_skip_div0_test+0x1e0>
    20d0:	tst	r1, r2
    20d4:	beq	22a0 <.divsi3_skip_div0_test+0x1f0>
    20d8:	clz	r2, r3
    20dc:	clz	r0, r1
    20e0:	sub	r2, r0, r2
    20e4:	rsbs	r2, r2, #31
    20e8:	addne	r2, r2, r2, lsl #1
    20ec:	mov	r0, #0
    20f0:	addne	pc, pc, r2, lsl #2
    20f4:	nop			; (mov r0, r0)
    20f8:	cmp	r3, r1, lsl #31
    20fc:	adc	r0, r0, r0
    2100:	subcs	r3, r3, r1, lsl #31
    2104:	cmp	r3, r1, lsl #30
    2108:	adc	r0, r0, r0
    210c:	subcs	r3, r3, r1, lsl #30
    2110:	cmp	r3, r1, lsl #29
    2114:	adc	r0, r0, r0
    2118:	subcs	r3, r3, r1, lsl #29
    211c:	cmp	r3, r1, lsl #28
    2120:	adc	r0, r0, r0
    2124:	subcs	r3, r3, r1, lsl #28
    2128:	cmp	r3, r1, lsl #27
    212c:	adc	r0, r0, r0
    2130:	subcs	r3, r3, r1, lsl #27
    2134:	cmp	r3, r1, lsl #26
    2138:	adc	r0, r0, r0
    213c:	subcs	r3, r3, r1, lsl #26
    2140:	cmp	r3, r1, lsl #25
    2144:	adc	r0, r0, r0
    2148:	subcs	r3, r3, r1, lsl #25
    214c:	cmp	r3, r1, lsl #24
    2150:	adc	r0, r0, r0
    2154:	subcs	r3, r3, r1, lsl #24
    2158:	cmp	r3, r1, lsl #23
    215c:	adc	r0, r0, r0
    2160:	subcs	r3, r3, r1, lsl #23
    2164:	cmp	r3, r1, lsl #22
    2168:	adc	r0, r0, r0
    216c:	subcs	r3, r3, r1, lsl #22
    2170:	cmp	r3, r1, lsl #21
    2174:	adc	r0, r0, r0
    2178:	subcs	r3, r3, r1, lsl #21
    217c:	cmp	r3, r1, lsl #20
    2180:	adc	r0, r0, r0
    2184:	subcs	r3, r3, r1, lsl #20
    2188:	cmp	r3, r1, lsl #19
    218c:	adc	r0, r0, r0
    2190:	subcs	r3, r3, r1, lsl #19
    2194:	cmp	r3, r1, lsl #18
    2198:	adc	r0, r0, r0
    219c:	subcs	r3, r3, r1, lsl #18
    21a0:	cmp	r3, r1, lsl #17
    21a4:	adc	r0, r0, r0
    21a8:	subcs	r3, r3, r1, lsl #17
    21ac:	cmp	r3, r1, lsl #16
    21b0:	adc	r0, r0, r0
    21b4:	subcs	r3, r3, r1, lsl #16
    21b8:	cmp	r3, r1, lsl #15
    21bc:	adc	r0, r0, r0
    21c0:	subcs	r3, r3, r1, lsl #15
    21c4:	cmp	r3, r1, lsl #14
    21c8:	adc	r0, r0, r0
    21cc:	subcs	r3, r3, r1, lsl #14
    21d0:	cmp	r3, r1, lsl #13
    21d4:	adc	r0, r0, r0
    21d8:	subcs	r3, r3, r1, lsl #13
    21dc:	cmp	r3, r1, lsl #12
    21e0:	adc	r0, r0, r0
    21e4:	subcs	r3, r3, r1, lsl #12
    21e8:	cmp	r3, r1, lsl #11
    21ec:	adc	r0, r0, r0
    21f0:	subcs	r3, r3, r1, lsl #11
    21f4:	cmp	r3, r1, lsl #10
    21f8:	adc	r0, r0, r0
    21fc:	subcs	r3, r3, r1, lsl #10
    2200:	cmp	r3, r1, lsl #9
    2204:	adc	r0, r0, r0
    2208:	subcs	r3, r3, r1, lsl #9
    220c:	cmp	r3, r1, lsl #8
    2210:	adc	r0, r0, r0
    2214:	subcs	r3, r3, r1, lsl #8
    2218:	cmp	r3, r1, lsl #7
    221c:	adc	r0, r0, r0
    2220:	subcs	r3, r3, r1, lsl #7
    2224:	cmp	r3, r1, lsl #6
    2228:	adc	r0, r0, r0
    222c:	subcs	r3, r3, r1, lsl #6
    2230:	cmp	r3, r1, lsl #5
    2234:	adc	r0, r0, r0
    2238:	subcs	r3, r3, r1, lsl #5
    223c:	cmp	r3, r1, lsl #4
    2240:	adc	r0, r0, r0
    2244:	subcs	r3, r3, r1, lsl #4
    2248:	cmp	r3, r1, lsl #3
    224c:	adc	r0, r0, r0
    2250:	subcs	r3, r3, r1, lsl #3
    2254:	cmp	r3, r1, lsl #2
    2258:	adc	r0, r0, r0
    225c:	subcs	r3, r3, r1, lsl #2
    2260:	cmp	r3, r1, lsl #1
    2264:	adc	r0, r0, r0
    2268:	subcs	r3, r3, r1, lsl #1
    226c:	cmp	r3, r1
    2270:	adc	r0, r0, r0
    2274:	subcs	r3, r3, r1
    2278:	cmp	ip, #0
    227c:	rsbmi	r0, r0, #0
    2280:	bx	lr
    2284:	teq	ip, r0
    2288:	rsbmi	r0, r0, #0
    228c:	bx	lr
    2290:	movcc	r0, #0
    2294:	asreq	r0, ip, #31
    2298:	orreq	r0, r0, #1
    229c:	bx	lr
    22a0:	clz	r2, r1
    22a4:	rsb	r2, r2, #31
    22a8:	cmp	ip, #0
    22ac:	lsr	r0, r3, r2
    22b0:	rsbmi	r0, r0, #0
    22b4:	bx	lr
    22b8:	cmp	r0, #0
    22bc:	mvngt	r0, #-2147483648	; 0x80000000
    22c0:	movlt	r0, #-2147483648	; 0x80000000
    22c4:	b	22e8 <__aeabi_idiv0>

000022c8 <__aeabi_idivmod>:
    22c8:	cmp	r1, #0
    22cc:	beq	22b8 <.divsi3_skip_div0_test+0x208>
    22d0:	push	{r0, r1, lr}
    22d4:	bl	20b0 <.divsi3_skip_div0_test>
    22d8:	pop	{r1, r2, lr}
    22dc:	mul	r3, r2, r0
    22e0:	sub	r1, r1, r3
    22e4:	bx	lr

000022e8 <__aeabi_idiv0>:
    22e8:	push	{r1, lr}
    22ec:	mov	r0, #8
    22f0:	bl	b40 <raise@plt>
    22f4:	pop	{r1, pc}

Disassembly of section .fini:

000022f8 <_fini>:
    22f8:	push	{r3, lr}
    22fc:	pop	{r3, pc}
