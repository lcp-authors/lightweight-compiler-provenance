
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

00010700 <.init>:
   10700:	push	{r3, lr}
   10704:	bl	10874 <abort@plt+0x4c>
   10708:	pop	{r3, pc}

Disassembly of section .plt:

0001070c <calloc@plt-0x14>:
   1070c:	push	{lr}		; (str lr, [sp, #-4]!)
   10710:	ldr	lr, [pc, #4]	; 1071c <calloc@plt-0x4>
   10714:	add	lr, pc, lr
   10718:	ldr	pc, [lr, #8]!
   1071c:	andeq	r2, r1, r4, ror #17

00010720 <calloc@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #73728	; 0x12000
   10728:	ldr	pc, [ip, #2276]!	; 0x8e4

0001072c <strcmp@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #73728	; 0x12000
   10734:	ldr	pc, [ip, #2268]!	; 0x8dc

00010738 <strtol@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #73728	; 0x12000
   10740:	ldr	pc, [ip, #2260]!	; 0x8d4

00010744 <fopen@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #73728	; 0x12000
   1074c:	ldr	pc, [ip, #2252]!	; 0x8cc

00010750 <free@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #73728	; 0x12000
   10758:	ldr	pc, [ip, #2244]!	; 0x8c4

0001075c <fgets@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #73728	; 0x12000
   10764:	ldr	pc, [ip, #2236]!	; 0x8bc

00010768 <strdup@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #73728	; 0x12000
   10770:	ldr	pc, [ip, #2228]!	; 0x8b4

00010774 <unlink@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #73728	; 0x12000
   1077c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010780 <__xstat@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2212]!	; 0x8a4

0001078c <fwrite@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2204]!	; 0x89c

00010798 <__libc_start_main@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2196]!	; 0x894

000107a4 <__sysv_signal@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2188]!	; 0x88c

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2180]!	; 0x884

000107bc <getpid@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2172]!	; 0x87c

000107c8 <exit@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2164]!	; 0x874

000107d4 <strlen@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2156]!	; 0x86c

000107e0 <fprintf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2148]!	; 0x864

000107ec <__isoc99_sscanf@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2140]!	; 0x85c

000107f8 <fclose@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2132]!	; 0x854

00010804 <fputc@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2124]!	; 0x84c

00010810 <sprintf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2116]!	; 0x844

0001081c <strncmp@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2108]!	; 0x83c

00010828 <abort@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2100]!	; 0x834

Disassembly of section .text:

00010838 <error@@Base-0xfec>:
   10838:	mov	fp, #0
   1083c:	mov	lr, #0
   10840:	pop	{r1}		; (ldr r1, [sp], #4)
   10844:	mov	r2, sp
   10848:	push	{r2}		; (str r2, [sp, #-4]!)
   1084c:	push	{r0}		; (str r0, [sp, #-4]!)
   10850:	ldr	ip, [pc, #16]	; 10868 <abort@plt+0x40>
   10854:	push	{ip}		; (str ip, [sp, #-4]!)
   10858:	ldr	r0, [pc, #12]	; 1086c <abort@plt+0x44>
   1085c:	ldr	r3, [pc, #12]	; 10870 <abort@plt+0x48>
   10860:	bl	10798 <__libc_start_main@plt>
   10864:	bl	10828 <abort@plt>
   10868:	andeq	r1, r1, r4, asr pc
   1086c:	andeq	r0, r1, r0, lsr #19
   10870:	strdeq	r1, [r1], -r4
   10874:	ldr	r3, [pc, #20]	; 10890 <abort@plt+0x68>
   10878:	ldr	r2, [pc, #20]	; 10894 <abort@plt+0x6c>
   1087c:	add	r3, pc, r3
   10880:	ldr	r2, [r3, r2]
   10884:	cmp	r2, #0
   10888:	bxeq	lr
   1088c:	b	107b0 <__gmon_start__@plt>
   10890:	andeq	r2, r1, ip, ror r7
   10894:	andeq	r0, r0, r8, rrx
   10898:	ldr	r3, [pc, #28]	; 108bc <abort@plt+0x94>
   1089c:	ldr	r0, [pc, #28]	; 108c0 <abort@plt+0x98>
   108a0:	sub	r3, r3, r0
   108a4:	cmp	r3, #6
   108a8:	bxls	lr
   108ac:	ldr	r3, [pc, #16]	; 108c4 <abort@plt+0x9c>
   108b0:	cmp	r3, #0
   108b4:	bxeq	lr
   108b8:	bx	r3
   108bc:	andeq	r3, r2, pc, ror r0
   108c0:	andeq	r3, r2, ip, ror r0
   108c4:	andeq	r0, r0, r0
   108c8:	ldr	r1, [pc, #36]	; 108f4 <abort@plt+0xcc>
   108cc:	ldr	r0, [pc, #36]	; 108f8 <abort@plt+0xd0>
   108d0:	sub	r1, r1, r0
   108d4:	asr	r1, r1, #2
   108d8:	add	r1, r1, r1, lsr #31
   108dc:	asrs	r1, r1, #1
   108e0:	bxeq	lr
   108e4:	ldr	r3, [pc, #16]	; 108fc <abort@plt+0xd4>
   108e8:	cmp	r3, #0
   108ec:	bxeq	lr
   108f0:	bx	r3
   108f4:	andeq	r3, r2, ip, ror r0
   108f8:	andeq	r3, r2, ip, ror r0
   108fc:	andeq	r0, r0, r0
   10900:	push	{r4, lr}
   10904:	ldr	r4, [pc, #24]	; 10924 <abort@plt+0xfc>
   10908:	ldrb	r3, [r4]
   1090c:	cmp	r3, #0
   10910:	popne	{r4, pc}
   10914:	bl	10898 <abort@plt+0x70>
   10918:	mov	r3, #1
   1091c:	strb	r3, [r4]
   10920:	pop	{r4, pc}
   10924:	muleq	r2, r0, r0
   10928:	ldr	r0, [pc, #40]	; 10958 <abort@plt+0x130>
   1092c:	ldr	r3, [r0]
   10930:	cmp	r3, #0
   10934:	bne	1093c <abort@plt+0x114>
   10938:	b	108c8 <abort@plt+0xa0>
   1093c:	ldr	r3, [pc, #24]	; 1095c <abort@plt+0x134>
   10940:	cmp	r3, #0
   10944:	beq	10938 <abort@plt+0x110>
   10948:	push	{r4, lr}
   1094c:	blx	r3
   10950:	pop	{r4, lr}
   10954:	b	108c8 <abort@plt+0xa0>
   10958:	andeq	r2, r2, r4, lsl #30
   1095c:	andeq	r0, r0, r0
   10960:	push	{r4, r5, r6, lr}
   10964:	ldr	r4, [pc, #44]	; 10998 <abort@plt+0x170>
   10968:	ldr	r5, [r4]
   1096c:	ldr	r6, [r4, #4]
   10970:	mov	r1, r0
   10974:	mov	r0, r4
   10978:	bl	11064 <abort@plt+0x83c>
   1097c:	ldr	r2, [r4, #4]
   10980:	ldr	r1, [r4]
   10984:	sub	r2, r2, r6
   10988:	sub	r1, r1, r5
   1098c:	ldr	r0, [pc, #8]	; 1099c <abort@plt+0x174>
   10990:	bl	10a08 <abort@plt+0x1e0>
   10994:	pop	{r4, r5, r6, pc}
   10998:	andeq	r3, r2, r4, lsl #2
   1099c:	ldrdeq	r7, [r2], -r4
   109a0:	push	{r4, r5, lr}
   109a4:	sub	sp, sp, #12
   109a8:	add	ip, sp, #8
   109ac:	str	r0, [ip, #-4]!
   109b0:	mov	r5, r1
   109b4:	mov	r3, #0
   109b8:	ldr	r2, [pc, #64]	; 10a00 <abort@plt+0x1d8>
   109bc:	mov	r0, ip
   109c0:	bl	11964 <error@@Base+0x140>
   109c4:	ldr	r3, [sp, #4]
   109c8:	cmp	r3, #0
   109cc:	ble	109f0 <abort@plt+0x1c8>
   109d0:	sub	r5, r5, #4
   109d4:	mov	r4, #0
   109d8:	ldr	r0, [r5, #4]!
   109dc:	bl	10960 <abort@plt+0x138>
   109e0:	add	r4, r4, #1
   109e4:	ldr	r3, [sp, #4]
   109e8:	cmp	r3, r4
   109ec:	bgt	109d8 <abort@plt+0x1b0>
   109f0:	mov	r1, #0
   109f4:	ldr	r0, [pc, #8]	; 10a04 <abort@plt+0x1dc>
   109f8:	bl	10a80 <abort@plt+0x258>
   109fc:	bl	117cc <abort@plt+0xfa4>
   10a00:	andeq	r1, r1, r4, ror #30
   10a04:	ldrdeq	r7, [r2], -r4
   10a08:	cmp	r1, #0
   10a0c:	bxeq	lr
   10a10:	sub	r3, r1, r2
   10a14:	vmov	s14, r3
   10a18:	vcvt.f64.s32	d7, s14
   10a1c:	vldr	d6, [pc, #84]	; 10a78 <abort@plt+0x250>
   10a20:	vmul.f64	d7, d7, d6
   10a24:	vmov	s13, r1
   10a28:	vcvt.f64.s32	d5, s13
   10a2c:	vdiv.f64	d6, d7, d5
   10a30:	vcmpe.f64	d6, #0.0
   10a34:	vmrs	APSR_nzcv, fpscr
   10a38:	blt	10a68 <abort@plt+0x240>
   10a3c:	mov	r3, #0
   10a40:	ldr	r2, [r0, r3, lsl #2]
   10a44:	add	r2, r2, r1
   10a48:	str	r2, [r0, r3, lsl #2]
   10a4c:	add	r3, r3, #1
   10a50:	sxth	r3, r3
   10a54:	vmov	s15, r3
   10a58:	vcvt.f64.s32	d7, s15
   10a5c:	vcmpe.f64	d6, d7
   10a60:	vmrs	APSR_nzcv, fpscr
   10a64:	bge	10a40 <abort@plt+0x218>
   10a68:	ldr	r3, [r0, #404]	; 0x194
   10a6c:	add	r1, r3, r1
   10a70:	str	r1, [r0, #404]	; 0x194
   10a74:	bx	lr
   10a78:	andeq	r0, r0, r0
   10a7c:	subsmi	r0, r9, r0
   10a80:	ldr	r3, [r0, #404]	; 0x194
   10a84:	cmp	r3, #0
   10a88:	bxeq	lr
   10a8c:	push	{r4, r5, r6, r7, r8, lr}
   10a90:	vpush	{d8}
   10a94:	sub	sp, sp, #8
   10a98:	mov	r3, r1
   10a9c:	mov	r6, r0
   10aa0:	ldr	r1, [pc, #112]	; 10b18 <abort@plt+0x2f0>
   10aa4:	mov	r0, r3
   10aa8:	bl	118f8 <error@@Base+0xd4>
   10aac:	mov	r7, r0
   10ab0:	sub	r5, r6, #4
   10ab4:	mov	r4, #0
   10ab8:	ldr	r8, [pc, #92]	; 10b1c <abort@plt+0x2f4>
   10abc:	vldr	d8, [pc, #76]	; 10b10 <abort@plt+0x2e8>
   10ac0:	ldr	r3, [r5, #4]!
   10ac4:	vmov	s14, r3
   10ac8:	vcvt.f64.s32	d7, s14
   10acc:	vmul.f64	d7, d7, d8
   10ad0:	vldr	s13, [r6, #404]	; 0x194
   10ad4:	vcvt.f64.s32	d6, s13
   10ad8:	vdiv.f64	d5, d7, d6
   10adc:	vstr	d5, [sp]
   10ae0:	mov	r2, r4
   10ae4:	mov	r1, r8
   10ae8:	mov	r0, r7
   10aec:	bl	107e0 <fprintf@plt>
   10af0:	add	r4, r4, #1
   10af4:	cmp	r4, #101	; 0x65
   10af8:	bne	10ac0 <abort@plt+0x298>
   10afc:	mov	r0, r7
   10b00:	bl	116f0 <abort@plt+0xec8>
   10b04:	add	sp, sp, #8
   10b08:	vpop	{d8}
   10b0c:	pop	{r4, r5, r6, r7, r8, pc}
   10b10:	andeq	r0, r0, r0
   10b14:	subsmi	r0, r9, r0
   10b18:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   10b1c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   10b20:	push	{r4, lr}
   10b24:	mov	r2, r0
   10b28:	mov	r1, #99	; 0x63
   10b2c:	ldr	r0, [pc, #12]	; 10b40 <abort@plt+0x318>
   10b30:	bl	1075c <fgets@plt>
   10b34:	adds	r0, r0, #0
   10b38:	movne	r0, #1
   10b3c:	pop	{r4, pc}
   10b40:	muleq	r2, r4, r0
   10b44:	push	{r4, lr}
   10b48:	mov	r4, r1
   10b4c:	bl	10b20 <abort@plt+0x2f8>
   10b50:	cmp	r0, #0
   10b54:	bne	10b60 <abort@plt+0x338>
   10b58:	mov	r0, #0
   10b5c:	pop	{r4, pc}
   10b60:	mov	r2, r4
   10b64:	ldr	r1, [pc, #20]	; 10b80 <abort@plt+0x358>
   10b68:	ldr	r0, [pc, #20]	; 10b84 <abort@plt+0x35c>
   10b6c:	bl	107ec <__isoc99_sscanf@plt>
   10b70:	cmp	r0, #1
   10b74:	movne	r0, #0
   10b78:	moveq	r0, #1
   10b7c:	pop	{r4, pc}
   10b80:	andeq	r2, r1, ip, lsl r0
   10b84:	muleq	r2, r4, r0
   10b88:	push	{r4, lr}
   10b8c:	ldr	r2, [r1]
   10b90:	cmp	r2, #0
   10b94:	beq	10bcc <abort@plt+0x3a4>
   10b98:	ldr	r3, [r1, #4]
   10b9c:	sub	r3, r2, r3
   10ba0:	vmov	s14, r3
   10ba4:	vcvt.f64.s32	d7, s14
   10ba8:	vldr	d6, [pc, #56]	; 10be8 <abort@plt+0x3c0>
   10bac:	vmul.f64	d7, d7, d6
   10bb0:	vmov	s13, r2
   10bb4:	vcvt.f64.s32	d6, s13
   10bb8:	vdiv.f64	d5, d7, d6
   10bbc:	vmov	r2, r3, d5
   10bc0:	ldr	r1, [pc, #40]	; 10bf0 <abort@plt+0x3c8>
   10bc4:	bl	107e0 <fprintf@plt>
   10bc8:	pop	{r4, pc}
   10bcc:	mov	r3, r0
   10bd0:	mov	r2, #8
   10bd4:	mov	r1, #1
   10bd8:	ldr	r0, [pc, #20]	; 10bf4 <abort@plt+0x3cc>
   10bdc:	bl	1078c <fwrite@plt>
   10be0:	pop	{r4, pc}
   10be4:	nop			; (mov r0, r0)
   10be8:	andeq	r0, r0, r0
   10bec:	subsmi	r0, r9, r0
   10bf0:	andeq	r1, r1, ip, lsr #31
   10bf4:	andeq	r1, r1, r0, lsr #31
   10bf8:	push	{r4, r5, r6, lr}
   10bfc:	mov	r4, r0
   10c00:	subs	r5, r1, #0
   10c04:	beq	10c3c <abort@plt+0x414>
   10c08:	ldr	r3, [r5, #4]
   10c0c:	ldr	r2, [r5]
   10c10:	ldr	r1, [pc, #60]	; 10c54 <abort@plt+0x42c>
   10c14:	bl	107e0 <fprintf@plt>
   10c18:	mov	r1, r5
   10c1c:	mov	r0, r4
   10c20:	bl	10b88 <abort@plt+0x360>
   10c24:	mov	r3, r4
   10c28:	mov	r2, #3
   10c2c:	mov	r1, #1
   10c30:	ldr	r0, [pc, #32]	; 10c58 <abort@plt+0x430>
   10c34:	bl	1078c <fwrite@plt>
   10c38:	pop	{r4, r5, r6, pc}
   10c3c:	mov	r3, r0
   10c40:	mov	r2, #26
   10c44:	mov	r1, #1
   10c48:	ldr	r0, [pc, #12]	; 10c5c <abort@plt+0x434>
   10c4c:	bl	1078c <fwrite@plt>
   10c50:	b	10c24 <abort@plt+0x3fc>
   10c54:			; <UNDEFINED> instruction: 0x00011fb4
   10c58:	ldrdeq	r1, [r1], -ip
   10c5c:	andeq	r1, r1, r0, asr #31
   10c60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c64:	mov	r6, r0
   10c68:	mov	r5, r1
   10c6c:	mov	r7, r2
   10c70:	ldrb	r9, [sp, #32]
   10c74:	ldrb	sl, [sp, #36]	; 0x24
   10c78:	mov	r2, r3
   10c7c:	ldr	r1, [pc, #240]	; 10d74 <abort@plt+0x54c>
   10c80:	bl	107e0 <fprintf@plt>
   10c84:	mov	r1, #0
   10c88:	mov	r0, r6
   10c8c:	bl	10bf8 <abort@plt+0x3d0>
   10c90:	cmp	r9, #0
   10c94:	bne	10d50 <abort@plt+0x528>
   10c98:	ldr	r2, [pc, #216]	; 10d78 <abort@plt+0x550>
   10c9c:	ldr	r1, [pc, #216]	; 10d7c <abort@plt+0x554>
   10ca0:	mov	r0, r6
   10ca4:	bl	107e0 <fprintf@plt>
   10ca8:	cmp	r7, #0
   10cac:	bgt	10d68 <abort@plt+0x540>
   10cb0:	b	10d24 <abort@plt+0x4fc>
   10cb4:	add	r4, r4, #1
   10cb8:	sxth	r4, r4
   10cbc:	cmp	r7, r4
   10cc0:	blt	10cf0 <abort@plt+0x4c8>
   10cc4:	add	r1, r5, r4, lsl #3
   10cc8:	ldr	r3, [r5, r4, lsl #3]
   10ccc:	cmp	r3, #0
   10cd0:	ble	10cb4 <abort@plt+0x48c>
   10cd4:	mov	r0, r6
   10cd8:	bl	10bf8 <abort@plt+0x3d0>
   10cdc:	mov	r2, r4
   10ce0:	mov	r1, r8
   10ce4:	mov	r0, r6
   10ce8:	bl	107e0 <fprintf@plt>
   10cec:	b	10cb4 <abort@plt+0x48c>
   10cf0:	cmp	r9, #0
   10cf4:	beq	10d24 <abort@plt+0x4fc>
   10cf8:	add	r3, r7, #1
   10cfc:	add	r1, r5, r3, lsl #3
   10d00:	ldr	r3, [r5, r3, lsl #3]
   10d04:	cmp	r3, #0
   10d08:	ble	10d24 <abort@plt+0x4fc>
   10d0c:	mov	r0, r6
   10d10:	bl	10bf8 <abort@plt+0x3d0>
   10d14:	mov	r2, r7
   10d18:	ldr	r1, [pc, #96]	; 10d80 <abort@plt+0x558>
   10d1c:	mov	r0, r6
   10d20:	bl	107e0 <fprintf@plt>
   10d24:	cmp	sl, #0
   10d28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d2c:	mov	r1, r5
   10d30:	mov	r0, r6
   10d34:	bl	10bf8 <abort@plt+0x3d0>
   10d38:	mov	r3, r6
   10d3c:	mov	r2, #7
   10d40:	mov	r1, #1
   10d44:	ldr	r0, [pc, #56]	; 10d84 <abort@plt+0x55c>
   10d48:	bl	1078c <fwrite@plt>
   10d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d50:	ldr	r2, [pc, #48]	; 10d88 <abort@plt+0x560>
   10d54:	ldr	r1, [pc, #32]	; 10d7c <abort@plt+0x554>
   10d58:	mov	r0, r6
   10d5c:	bl	107e0 <fprintf@plt>
   10d60:	cmp	r7, #0
   10d64:	ble	10cf8 <abort@plt+0x4d0>
   10d68:	mov	r4, #1
   10d6c:	ldr	r8, [pc, #24]	; 10d8c <abort@plt+0x564>
   10d70:	b	10cc4 <abort@plt+0x49c>
   10d74:	andeq	r1, r1, r0, ror #31
   10d78:	andeq	r2, r1, r0, lsl r0
   10d7c:	andeq	r2, r1, r0, asr #2
   10d80:	strdeq	r1, [r1], -r4
   10d84:	andeq	r2, r1, r0
   10d88:	andeq	r2, r1, r8
   10d8c:	andeq	r1, r1, r8, ror #31
   10d90:	push	{r4, r5, r6, r7, r8, lr}
   10d94:	mov	r6, r0
   10d98:	mov	r5, r1
   10d9c:	mov	r7, r2
   10da0:	mov	r0, r1
   10da4:	bl	114c8 <abort@plt+0xca0>
   10da8:	add	r4, r5, #4096	; 0x1000
   10dac:	ldr	r2, [pc, #136]	; 10e3c <abort@plt+0x614>
   10db0:	ldr	r1, [r4, #3952]	; 0xf70
   10db4:	ldr	r0, [r4, #3956]	; 0xf74
   10db8:	bl	11ec8 <error@@Base+0x6a4>
   10dbc:	mov	r2, r7
   10dc0:	ldr	r1, [pc, #120]	; 10e40 <abort@plt+0x618>
   10dc4:	mov	r0, r6
   10dc8:	bl	107e0 <fprintf@plt>
   10dcc:	mov	r1, #0
   10dd0:	mov	r0, r6
   10dd4:	bl	10bf8 <abort@plt+0x3d0>
   10dd8:	mov	r1, r6
   10ddc:	mov	r0, #10
   10de0:	bl	10804 <fputc@plt>
   10de4:	ldr	r3, [r4, #3956]	; 0xf74
   10de8:	cmp	r3, #0
   10dec:	pople	{r4, r5, r6, r7, r8, pc}
   10df0:	mov	r4, #0
   10df4:	add	r5, r5, #4096	; 0x1000
   10df8:	ldr	r7, [pc, #68]	; 10e44 <abort@plt+0x61c>
   10dfc:	ldr	r3, [r5, #3952]	; 0xf70
   10e00:	ldr	r1, [r3, r4, lsl #2]
   10e04:	add	r1, r1, #12
   10e08:	mov	r0, r6
   10e0c:	bl	10bf8 <abort@plt+0x3d0>
   10e10:	ldr	r3, [r5, #3952]	; 0xf70
   10e14:	ldr	r3, [r3, r4, lsl #2]
   10e18:	ldr	r2, [r3, #8]
   10e1c:	mov	r1, r7
   10e20:	mov	r0, r6
   10e24:	bl	107e0 <fprintf@plt>
   10e28:	add	r4, r4, #1
   10e2c:	ldr	r3, [r5, #3956]	; 0xf74
   10e30:	cmp	r3, r4
   10e34:	bgt	10dfc <abort@plt+0x5d4>
   10e38:	pop	{r4, r5, r6, r7, r8, pc}
   10e3c:	andeq	r0, r1, r8, asr #28
   10e40:	andeq	r1, r1, r0, ror #31
   10e44:	andeq	r2, r1, r0, asr #2
   10e48:	push	{r4, lr}
   10e4c:	ldr	r1, [r1, #8]
   10e50:	ldr	r0, [r0, #8]
   10e54:	bl	11674 <abort@plt+0xe4c>
   10e58:	pop	{r4, pc}
   10e5c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e60:	sub	sp, sp, #8
   10e64:	mov	r5, r0
   10e68:	mov	r4, r1
   10e6c:	bl	10b20 <abort@plt+0x2f8>
   10e70:	cmp	r0, #0
   10e74:	moveq	r7, #0
   10e78:	beq	10f28 <abort@plt+0x700>
   10e7c:	mov	r0, r5
   10e80:	bl	10b20 <abort@plt+0x2f8>
   10e84:	cmp	r0, #0
   10e88:	moveq	r7, #0
   10e8c:	beq	10f28 <abort@plt+0x700>
   10e90:	mov	r7, #0
   10e94:	ldr	sl, [pc, #152]	; 10f34 <abort@plt+0x70c>
   10e98:	ldr	r8, [pc, #152]	; 10f38 <abort@plt+0x710>
   10e9c:	add	r6, r8, #29
   10ea0:	ldr	r9, [pc, #148]	; 10f3c <abort@plt+0x714>
   10ea4:	b	10f18 <abort@plt+0x6f0>
   10ea8:	mov	r3, sp
   10eac:	add	r2, sp, #4
   10eb0:	mov	r1, sl
   10eb4:	mov	r0, r8
   10eb8:	bl	107ec <__isoc99_sscanf@plt>
   10ebc:	cmp	r0, #2
   10ec0:	bne	10f28 <abort@plt+0x700>
   10ec4:	mov	r2, #10
   10ec8:	mov	r1, #0
   10ecc:	mov	r0, r6
   10ed0:	bl	10738 <strtol@plt>
   10ed4:	cmp	r0, #0
   10ed8:	bne	10ef4 <abort@plt+0x6cc>
   10edc:	mov	r1, r9
   10ee0:	mov	r0, r6
   10ee4:	bl	1072c <strcmp@plt>
   10ee8:	cmp	r0, #0
   10eec:	ldreq	r7, [sp, #4]
   10ef0:	movne	r0, #11
   10ef4:	add	r2, r4, r0, lsl #3
   10ef8:	ldr	r3, [r4, r0, lsl #3]
   10efc:	ldr	r1, [sp, #4]
   10f00:	add	r3, r3, r1
   10f04:	str	r3, [r4, r0, lsl #3]
   10f08:	ldr	r3, [r2, #4]
   10f0c:	ldr	r1, [sp]
   10f10:	add	r3, r3, r1
   10f14:	str	r3, [r2, #4]
   10f18:	mov	r0, r5
   10f1c:	bl	10b20 <abort@plt+0x2f8>
   10f20:	cmp	r0, #0
   10f24:	bne	10ea8 <abort@plt+0x680>
   10f28:	mov	r0, r7
   10f2c:	add	sp, sp, #8
   10f30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f34:	andeq	r2, r1, r8, lsl r0
   10f38:	muleq	r2, r4, r0
   10f3c:	andeq	r2, r1, r0
   10f40:	ldr	r3, [r0]
   10f44:	add	r1, r3, r1
   10f48:	str	r1, [r0]
   10f4c:	ldr	r3, [r0, #4]
   10f50:	add	r2, r3, r2
   10f54:	str	r2, [r0, #4]
   10f58:	bx	lr
   10f5c:	push	{r4, r5, r6, r7, r8, lr}
   10f60:	mov	r7, r0
   10f64:	mov	r8, r1
   10f68:	mov	r6, r2
   10f6c:	mov	r5, r3
   10f70:	bl	113d8 <abort@plt+0xbb0>
   10f74:	subs	r4, r0, #0
   10f78:	beq	10f98 <abort@plt+0x770>
   10f7c:	ldr	r2, [r4, #12]
   10f80:	add	r2, r2, r6
   10f84:	str	r2, [r4, #12]
   10f88:	ldr	r3, [r4, #16]
   10f8c:	add	r3, r3, r5
   10f90:	str	r3, [r4, #16]
   10f94:	pop	{r4, r5, r6, r7, r8, pc}
   10f98:	mov	r1, #20
   10f9c:	mov	r0, #1
   10fa0:	bl	11860 <error@@Base+0x3c>
   10fa4:	mov	r4, r0
   10fa8:	mov	r0, r8
   10fac:	bl	10768 <strdup@plt>
   10fb0:	str	r0, [r4, #8]
   10fb4:	mov	r1, r4
   10fb8:	mov	r0, r7
   10fbc:	bl	11420 <abort@plt+0xbf8>
   10fc0:	b	10f7c <abort@plt+0x754>
   10fc4:	push	{r4, r5, r6, r7, r8, r9, lr}
   10fc8:	sub	sp, sp, #12
   10fcc:	mov	r5, r0
   10fd0:	mov	r6, r1
   10fd4:	bl	10b20 <abort@plt+0x2f8>
   10fd8:	cmp	r0, #0
   10fdc:	beq	11054 <abort@plt+0x82c>
   10fe0:	mov	r0, r5
   10fe4:	bl	10b20 <abort@plt+0x2f8>
   10fe8:	cmp	r0, #0
   10fec:	beq	11054 <abort@plt+0x82c>
   10ff0:	ldr	r9, [pc, #100]	; 1105c <abort@plt+0x834>
   10ff4:	ldr	r4, [pc, #100]	; 11060 <abort@plt+0x838>
   10ff8:	mov	r8, #0
   10ffc:	add	r7, r4, #29
   11000:	b	11044 <abort@plt+0x81c>
   11004:	mov	r3, sp
   11008:	add	r2, sp, #4
   1100c:	mov	r1, r9
   11010:	mov	r0, r4
   11014:	bl	107ec <__isoc99_sscanf@plt>
   11018:	cmp	r0, #2
   1101c:	bne	11054 <abort@plt+0x82c>
   11020:	mov	r0, r4
   11024:	bl	107d4 <strlen@plt>
   11028:	add	r0, r4, r0
   1102c:	strb	r8, [r0, #-1]
   11030:	ldr	r3, [sp]
   11034:	ldr	r2, [sp, #4]
   11038:	mov	r1, r7
   1103c:	mov	r0, r6
   11040:	bl	10f5c <abort@plt+0x734>
   11044:	mov	r0, r5
   11048:	bl	10b20 <abort@plt+0x2f8>
   1104c:	cmp	r0, #0
   11050:	bne	11004 <abort@plt+0x7dc>
   11054:	add	sp, sp, #12
   11058:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1105c:	andeq	r2, r1, r8, lsl r0
   11060:	muleq	r2, r4, r0
   11064:	push	{r4, r5, r6, r7, lr}
   11068:	sub	sp, sp, #12
   1106c:	mov	r5, r0
   11070:	mov	r6, r1
   11074:	ldr	r1, [pc, #332]	; 111c8 <abort@plt+0x9a0>
   11078:	mov	r0, r6
   1107c:	bl	118f8 <error@@Base+0xd4>
   11080:	mov	r4, r0
   11084:	bl	10b20 <abort@plt+0x2f8>
   11088:	cmp	r0, #0
   1108c:	beq	111b4 <abort@plt+0x98c>
   11090:	mov	r2, #45	; 0x2d
   11094:	ldr	r1, [pc, #304]	; 111cc <abort@plt+0x9a4>
   11098:	ldr	r0, [pc, #304]	; 111d0 <abort@plt+0x9a8>
   1109c:	bl	1081c <strncmp@plt>
   110a0:	cmp	r0, #0
   110a4:	bne	111b4 <abort@plt+0x98c>
   110a8:	mov	r0, r4
   110ac:	bl	10b20 <abort@plt+0x2f8>
   110b0:	cmp	r0, #0
   110b4:	beq	111b4 <abort@plt+0x98c>
   110b8:	ldr	r1, [pc, #276]	; 111d4 <abort@plt+0x9ac>
   110bc:	ldr	r0, [pc, #268]	; 111d0 <abort@plt+0x9a8>
   110c0:	bl	1072c <strcmp@plt>
   110c4:	cmp	r0, #0
   110c8:	bne	111b4 <abort@plt+0x98c>
   110cc:	add	r1, sp, #4
   110d0:	mov	r0, r4
   110d4:	bl	10b44 <abort@plt+0x31c>
   110d8:	cmp	r0, #0
   110dc:	beq	111b4 <abort@plt+0x98c>
   110e0:	mov	r1, sp
   110e4:	mov	r0, r4
   110e8:	bl	10b44 <abort@plt+0x31c>
   110ec:	cmp	r0, #0
   110f0:	beq	111b4 <abort@plt+0x98c>
   110f4:	mov	r0, r4
   110f8:	bl	10b20 <abort@plt+0x2f8>
   110fc:	cmp	r0, #0
   11100:	beq	111b4 <abort@plt+0x98c>
   11104:	mov	r0, r4
   11108:	bl	10b20 <abort@plt+0x2f8>
   1110c:	cmp	r0, #0
   11110:	beq	111b4 <abort@plt+0x98c>
   11114:	ldr	r3, [r5]
   11118:	ldr	r2, [sp, #4]
   1111c:	add	r3, r3, r2
   11120:	str	r3, [r5]
   11124:	ldr	r3, [r5, #4]
   11128:	ldr	r2, [sp]
   1112c:	add	r3, r3, r2
   11130:	str	r3, [r5, #4]
   11134:	add	r1, r5, #8
   11138:	mov	r0, r4
   1113c:	bl	10e5c <abort@plt+0x634>
   11140:	mov	r7, r0
   11144:	add	r1, r5, #416	; 0x1a0
   11148:	mov	r0, r4
   1114c:	bl	10e5c <abort@plt+0x634>
   11150:	mov	r6, r0
   11154:	add	r1, r5, #824	; 0x338
   11158:	mov	r0, r4
   1115c:	bl	10e5c <abort@plt+0x634>
   11160:	ldr	r3, [sp, #4]
   11164:	cmp	r3, #0
   11168:	ble	111a4 <abort@plt+0x97c>
   1116c:	add	r1, r5, #920	; 0x398
   11170:	mov	r0, r4
   11174:	bl	10e5c <abort@plt+0x634>
   11178:	cmp	r7, #0
   1117c:	ble	1118c <abort@plt+0x964>
   11180:	add	r1, r5, #992	; 0x3e0
   11184:	mov	r0, r4
   11188:	bl	10fc4 <abort@plt+0x79c>
   1118c:	cmp	r6, #0
   11190:	ble	111a4 <abort@plt+0x97c>
   11194:	add	r1, r5, #9024	; 0x2340
   11198:	add	r1, r1, #24
   1119c:	mov	r0, r4
   111a0:	bl	10fc4 <abort@plt+0x79c>
   111a4:	mov	r0, r4
   111a8:	bl	116f0 <abort@plt+0xec8>
   111ac:	add	sp, sp, #12
   111b0:	pop	{r4, r5, r6, r7, pc}
   111b4:	ldr	r1, [pc, #28]	; 111d8 <abort@plt+0x9b0>
   111b8:	cmp	r6, #0
   111bc:	movne	r1, r6
   111c0:	ldr	r0, [pc, #20]	; 111dc <abort@plt+0x9b4>
   111c4:	bl	118b0 <error@@Base+0x8c>
   111c8:	andeq	r2, r1, r8, lsr #32
   111cc:	andeq	r2, r1, ip, lsr #32
   111d0:	muleq	r2, r4, r0
   111d4:	andeq	r2, r1, ip, asr r0
   111d8:	andeq	r2, r1, r0, lsr #32
   111dc:	andeq	r2, r1, ip, lsl #1
   111e0:	push	{r4, r5, r6, r7, lr}
   111e4:	sub	sp, sp, #12
   111e8:	mov	r4, r0
   111ec:	mov	r0, r1
   111f0:	ldr	r1, [pc, #292]	; 1131c <abort@plt+0xaf4>
   111f4:	bl	118f8 <error@@Base+0xd4>
   111f8:	mov	r5, r0
   111fc:	ldr	r3, [pc, #284]	; 11320 <abort@plt+0xaf8>
   11200:	ldr	r2, [pc, #284]	; 11324 <abort@plt+0xafc>
   11204:	ldr	r1, [pc, #284]	; 11328 <abort@plt+0xb00>
   11208:	bl	107e0 <fprintf@plt>
   1120c:	ldr	r2, [r4]
   11210:	ldr	r1, [pc, #276]	; 1132c <abort@plt+0xb04>
   11214:	mov	r0, r5
   11218:	bl	107e0 <fprintf@plt>
   1121c:	ldr	r2, [r4, #4]
   11220:	ldr	r1, [pc, #264]	; 11330 <abort@plt+0xb08>
   11224:	mov	r0, r5
   11228:	bl	107e0 <fprintf@plt>
   1122c:	mov	r1, r4
   11230:	mov	r0, r5
   11234:	bl	10b88 <abort@plt+0x360>
   11238:	mov	r3, r5
   1123c:	mov	r2, #12
   11240:	mov	r1, #1
   11244:	ldr	r0, [pc, #232]	; 11334 <abort@plt+0xb0c>
   11248:	bl	1078c <fwrite@plt>
   1124c:	mov	r6, #1
   11250:	str	r6, [sp, #4]
   11254:	mov	r7, #0
   11258:	str	r7, [sp]
   1125c:	ldr	r3, [pc, #212]	; 11338 <abort@plt+0xb10>
   11260:	mov	r2, #50	; 0x32
   11264:	add	r1, r4, #8
   11268:	mov	r0, r5
   1126c:	bl	10c60 <abort@plt+0x438>
   11270:	str	r6, [sp, #4]
   11274:	str	r7, [sp]
   11278:	ldr	r3, [pc, #188]	; 1133c <abort@plt+0xb14>
   1127c:	mov	r2, #50	; 0x32
   11280:	add	r1, r4, #416	; 0x1a0
   11284:	mov	r0, r5
   11288:	bl	10c60 <abort@plt+0x438>
   1128c:	str	r6, [sp, #4]
   11290:	str	r6, [sp]
   11294:	ldr	r3, [pc, #164]	; 11340 <abort@plt+0xb18>
   11298:	mov	r2, #10
   1129c:	add	r1, r4, #824	; 0x338
   112a0:	mov	r0, r5
   112a4:	bl	10c60 <abort@plt+0x438>
   112a8:	ldr	r3, [r4]
   112ac:	cmp	r3, r7
   112b0:	ble	1130c <abort@plt+0xae4>
   112b4:	str	r7, [sp, #4]
   112b8:	str	r7, [sp]
   112bc:	ldr	r3, [pc, #128]	; 11344 <abort@plt+0xb1c>
   112c0:	mov	r2, #8
   112c4:	add	r1, r4, #920	; 0x398
   112c8:	mov	r0, r5
   112cc:	bl	10c60 <abort@plt+0x438>
   112d0:	ldr	r3, [r4, #8]
   112d4:	cmp	r3, r7
   112d8:	ble	112ec <abort@plt+0xac4>
   112dc:	ldr	r2, [pc, #84]	; 11338 <abort@plt+0xb10>
   112e0:	add	r1, r4, #992	; 0x3e0
   112e4:	mov	r0, r5
   112e8:	bl	10d90 <abort@plt+0x568>
   112ec:	ldr	r3, [r4, #416]	; 0x1a0
   112f0:	cmp	r3, #0
   112f4:	ble	1130c <abort@plt+0xae4>
   112f8:	add	r1, r4, #9024	; 0x2340
   112fc:	ldr	r2, [pc, #56]	; 1133c <abort@plt+0xb14>
   11300:	add	r1, r1, #24
   11304:	mov	r0, r5
   11308:	bl	10d90 <abort@plt+0x568>
   1130c:	mov	r0, r5
   11310:	bl	116f0 <abort@plt+0xec8>
   11314:	add	sp, sp, #12
   11318:	pop	{r4, r5, r6, r7, pc}
   1131c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11320:	andeq	r2, r1, ip, asr r0
   11324:	andeq	r2, r1, ip, lsr #32
   11328:	andeq	r2, r1, r0, lsr #1
   1132c:	andeq	r2, r1, r8, lsr #1
   11330:	strheq	r2, [r1], -r8
   11334:	ldrdeq	r2, [r1], -r0
   11338:	andeq	r2, r1, r0, ror #1
   1133c:	andeq	r2, r1, ip, ror #1
   11340:	strdeq	r2, [r1], -ip
   11344:	andeq	r2, r1, r4, lsl r1
   11348:	ldrb	r3, [r0]
   1134c:	cmp	r3, #0
   11350:	beq	11390 <abort@plt+0xb68>
   11354:	mov	r2, #0
   11358:	add	r2, r2, r3
   1135c:	ldrb	r3, [r0, #1]!
   11360:	cmp	r3, #0
   11364:	bne	11358 <abort@plt+0xb30>
   11368:	ldr	r0, [pc, #40]	; 11398 <abort@plt+0xb70>
   1136c:	smull	r3, r0, r0, r2
   11370:	add	r3, r0, r2
   11374:	asr	r0, r2, #31
   11378:	rsb	r0, r0, r3, asr #8
   1137c:	rsb	r3, r0, r0, lsl #6
   11380:	rsb	r0, r0, r3, lsl #3
   11384:	sub	r0, r2, r0
   11388:	sxth	r0, r0
   1138c:	bx	lr
   11390:	mov	r2, #0
   11394:	b	11368 <abort@plt+0xb40>
   11398:	subhi	r4, sl, #1552	; 0x610
   1139c:	push	{r4, r5, r6, lr}
   113a0:	mov	r6, r0
   113a4:	mov	r4, r0
   113a8:	add	r5, r0, #8000	; 0x1f40
   113ac:	add	r5, r5, #48	; 0x30
   113b0:	mov	r0, r4
   113b4:	bl	11c0c <error@@Base+0x3e8>
   113b8:	add	r4, r4, #16
   113bc:	cmp	r4, r5
   113c0:	bne	113b0 <abort@plt+0xb88>
   113c4:	add	r6, r6, #4096	; 0x1000
   113c8:	mov	r3, #0
   113cc:	str	r3, [r6, #3952]	; 0xf70
   113d0:	str	r3, [r6, #3956]	; 0xf74
   113d4:	pop	{r4, r5, r6, pc}
   113d8:	push	{r4, r5, r6, lr}
   113dc:	mov	r4, r0
   113e0:	mov	r5, r1
   113e4:	mov	r0, r1
   113e8:	bl	11348 <abort@plt+0xb20>
   113ec:	ldr	r4, [r4, r0, lsl #4]
   113f0:	cmp	r4, #0
   113f4:	beq	11418 <abort@plt+0xbf0>
   113f8:	ldr	r1, [r4, #8]
   113fc:	mov	r0, r5
   11400:	bl	1072c <strcmp@plt>
   11404:	cmp	r0, #0
   11408:	beq	11418 <abort@plt+0xbf0>
   1140c:	ldr	r4, [r4, #4]
   11410:	cmp	r4, #0
   11414:	bne	113f8 <abort@plt+0xbd0>
   11418:	mov	r0, r4
   1141c:	pop	{r4, r5, r6, pc}
   11420:	push	{r4, r5, r6, lr}
   11424:	mov	r4, r0
   11428:	mov	r5, r1
   1142c:	ldr	r0, [r1, #8]
   11430:	bl	11348 <abort@plt+0xb20>
   11434:	mov	r1, r5
   11438:	add	r0, r4, r0, lsl #4
   1143c:	bl	11c24 <error@@Base+0x400>
   11440:	add	r3, r4, #4096	; 0x1000
   11444:	ldr	r0, [r3, #3952]	; 0xf70
   11448:	cmp	r0, #0
   1144c:	beq	11460 <abort@plt+0xc38>
   11450:	bl	10750 <free@plt>
   11454:	add	r3, r4, #4096	; 0x1000
   11458:	mov	r2, #0
   1145c:	str	r2, [r3, #3952]	; 0xf70
   11460:	add	r4, r4, #4096	; 0x1000
   11464:	ldr	r3, [r4, #3956]	; 0xf74
   11468:	add	r3, r3, #1
   1146c:	str	r3, [r4, #3956]	; 0xf74
   11470:	pop	{r4, r5, r6, pc}
   11474:	push	{r4, r5, r6, lr}
   11478:	mov	r4, r0
   1147c:	mov	r5, r1
   11480:	ldr	r0, [r1, #8]
   11484:	bl	11348 <abort@plt+0xb20>
   11488:	mov	r1, r5
   1148c:	add	r0, r4, r0, lsl #4
   11490:	bl	11c80 <error@@Base+0x45c>
   11494:	add	r3, r4, #4096	; 0x1000
   11498:	ldr	r0, [r3, #3952]	; 0xf70
   1149c:	cmp	r0, #0
   114a0:	beq	114b4 <abort@plt+0xc8c>
   114a4:	bl	10750 <free@plt>
   114a8:	add	r3, r4, #4096	; 0x1000
   114ac:	mov	r2, #0
   114b0:	str	r2, [r3, #3952]	; 0xf70
   114b4:	add	r4, r4, #4096	; 0x1000
   114b8:	ldr	r3, [r4, #3956]	; 0xf74
   114bc:	sub	r3, r3, #1
   114c0:	str	r3, [r4, #3956]	; 0xf74
   114c4:	pop	{r4, r5, r6, pc}
   114c8:	add	r3, r0, #4096	; 0x1000
   114cc:	ldr	r3, [r3, #3952]	; 0xf70
   114d0:	cmp	r3, #0
   114d4:	bxne	lr
   114d8:	add	r3, r0, #4096	; 0x1000
   114dc:	ldr	r3, [r3, #3956]	; 0xf74
   114e0:	cmp	r3, #0
   114e4:	bxeq	lr
   114e8:	push	{r4, r5, r6, lr}
   114ec:	mov	r4, r0
   114f0:	mov	r1, #4
   114f4:	mov	r0, r3
   114f8:	bl	11860 <error@@Base+0x3c>
   114fc:	add	r3, r4, #4096	; 0x1000
   11500:	str	r0, [r3, #3952]	; 0xf70
   11504:	mov	r1, #0
   11508:	mov	lr, r1
   1150c:	mov	ip, r3
   11510:	ldr	r5, [pc, #64]	; 11558 <abort@plt+0xd30>
   11514:	b	11524 <abort@plt+0xcfc>
   11518:	add	lr, lr, #1
   1151c:	cmp	lr, r5
   11520:	beq	11554 <abort@plt+0xd2c>
   11524:	ldr	r3, [r4, lr, lsl #4]
   11528:	cmp	r3, #0
   1152c:	beq	11518 <abort@plt+0xcf0>
   11530:	lsl	r2, r1, #2
   11534:	add	r1, r1, #1
   11538:	ldr	r0, [ip, #3952]	; 0xf70
   1153c:	str	r3, [r0, r2]
   11540:	ldr	r3, [r3, #4]
   11544:	add	r2, r2, #4
   11548:	cmp	r3, #0
   1154c:	bne	11534 <abort@plt+0xd0c>
   11550:	b	11518 <abort@plt+0xcf0>
   11554:	pop	{r4, r5, r6, pc}
   11558:	strdeq	r0, [r0], -r7
   1155c:	push	{r4, r5, r6, r7, r8, lr}
   11560:	mov	r7, r0
   11564:	mov	r6, r1
   11568:	mov	r4, r0
   1156c:	add	r5, r0, #8000	; 0x1f40
   11570:	add	r5, r5, #48	; 0x30
   11574:	mov	r1, r6
   11578:	mov	r0, r4
   1157c:	bl	11d48 <error@@Base+0x524>
   11580:	add	r4, r4, #16
   11584:	cmp	r4, r5
   11588:	bne	11574 <abort@plt+0xd4c>
   1158c:	add	r3, r7, #4096	; 0x1000
   11590:	ldr	r0, [r3, #3952]	; 0xf70
   11594:	cmp	r0, #0
   11598:	beq	115ac <abort@plt+0xd84>
   1159c:	bl	10750 <free@plt>
   115a0:	add	r3, r7, #4096	; 0x1000
   115a4:	mov	r2, #0
   115a8:	str	r2, [r3, #3952]	; 0xf70
   115ac:	add	r7, r7, #4096	; 0x1000
   115b0:	mov	r3, #0
   115b4:	str	r3, [r7, #3956]	; 0xf74
   115b8:	pop	{r4, r5, r6, r7, r8, pc}
   115bc:	push	{r4, r5, lr}
   115c0:	sub	sp, sp, #116	; 0x74
   115c4:	mov	r5, r0
   115c8:	ldr	r3, [pc, #44]	; 115fc <abort@plt+0xdd4>
   115cc:	ldr	r4, [r3]
   115d0:	bl	107bc <getpid@plt>
   115d4:	str	r5, [sp]
   115d8:	mov	r3, r0
   115dc:	mov	r2, r4
   115e0:	ldr	r1, [pc, #24]	; 11600 <abort@plt+0xdd8>
   115e4:	add	r0, sp, #12
   115e8:	bl	10810 <sprintf@plt>
   115ec:	add	r0, sp, #12
   115f0:	bl	10768 <strdup@plt>
   115f4:	add	sp, sp, #116	; 0x74
   115f8:	pop	{r4, r5, pc}
   115fc:	andeq	r7, r2, r0, ror r5
   11600:	andeq	r2, r1, ip, lsl r1
   11604:	push	{r7, lr}
   11608:	mov	r7, r0
   1160c:	ldr	r3, [pc, #88]	; 1166c <abort@plt+0xe44>
   11610:	ldr	r3, [r3]
   11614:	cmp	r3, #0
   11618:	beq	11620 <abort@plt+0xdf8>
   1161c:	blx	r3
   11620:	ldr	r3, [pc, #72]	; 11670 <abort@plt+0xe48>
   11624:	ldrsh	r3, [r3]
   11628:	cmp	r3, #0
   1162c:	ble	11664 <abort@plt+0xe3c>
   11630:	mov	r4, #1
   11634:	ldr	r6, [pc, #52]	; 11670 <abort@plt+0xe48>
   11638:	mov	r0, r4
   1163c:	bl	115bc <abort@plt+0xd94>
   11640:	mov	r5, r0
   11644:	bl	10774 <unlink@plt>
   11648:	mov	r0, r5
   1164c:	bl	10750 <free@plt>
   11650:	add	r4, r4, #1
   11654:	sxth	r4, r4
   11658:	ldrsh	r3, [r6]
   1165c:	cmp	r3, r4
   11660:	bge	11638 <abort@plt+0xe10>
   11664:	mov	r0, r7
   11668:	bl	107c8 <exit@plt>
   1166c:	andeq	r7, r2, r4, ror r5
   11670:	strdeq	r3, [r2], -r8
   11674:	push	{r4, lr}
   11678:	ldrb	r3, [r0]
   1167c:	cmp	r3, #0
   11680:	beq	116cc <abort@plt+0xea4>
   11684:	ldrb	r2, [r1]
   11688:	cmp	r2, r3
   1168c:	bne	116e8 <abort@plt+0xec0>
   11690:	mov	ip, r1
   11694:	mov	r2, #0
   11698:	add	r2, r2, #1
   1169c:	mov	r4, r2
   116a0:	ldrb	r3, [r0, #1]!
   116a4:	cmp	r3, #0
   116a8:	beq	116d0 <abort@plt+0xea8>
   116ac:	ldrb	lr, [ip, #1]!
   116b0:	cmp	lr, r3
   116b4:	beq	11698 <abort@plt+0xe70>
   116b8:	ldrb	r2, [r1, r4]
   116bc:	cmp	r2, r3
   116c0:	mvnhi	r0, #0
   116c4:	movls	r0, #1
   116c8:	pop	{r4, pc}
   116cc:	mov	r4, #0
   116d0:	ldrb	r3, [r1, r4]
   116d4:	cmp	r3, #0
   116d8:	movne	r3, #0
   116dc:	bne	116b8 <abort@plt+0xe90>
   116e0:	mov	r0, #0
   116e4:	pop	{r4, pc}
   116e8:	mov	r4, #0
   116ec:	b	116b8 <abort@plt+0xe90>
   116f0:	ldr	r3, [pc, #36]	; 1171c <abort@plt+0xef4>
   116f4:	ldr	r3, [r3]
   116f8:	cmp	r3, r0
   116fc:	bxeq	lr
   11700:	ldr	r3, [pc, #24]	; 11720 <abort@plt+0xef8>
   11704:	ldr	r3, [r3]
   11708:	cmp	r0, r3
   1170c:	bxeq	lr
   11710:	push	{r4, lr}
   11714:	bl	107f8 <fclose@plt>
   11718:	pop	{r4, pc}
   1171c:	andeq	r3, r2, r8, lsl #1
   11720:	andeq	r3, r2, ip, lsl #1
   11724:	push	{lr}		; (str lr, [sp, #-4]!)
   11728:	sub	sp, sp, #92	; 0x5c
   1172c:	mov	r2, sp
   11730:	mov	r1, r0
   11734:	mov	r0, #3
   11738:	bl	10780 <__xstat@plt>
   1173c:	clz	r0, r0
   11740:	lsr	r0, r0, #5
   11744:	add	sp, sp, #92	; 0x5c
   11748:	pop	{pc}		; (ldr pc, [sp], #4)
   1174c:	push	{r4, lr}
   11750:	ldr	r3, [pc, #32]	; 11778 <abort@plt+0xf50>
   11754:	ldrh	r0, [r3]
   11758:	add	r0, r0, #1
   1175c:	sxth	r0, r0
   11760:	strh	r0, [r3]
   11764:	bl	115bc <abort@plt+0xd94>
   11768:	mov	r4, r0
   1176c:	bl	10774 <unlink@plt>
   11770:	mov	r0, r4
   11774:	pop	{r4, pc}
   11778:	strdeq	r3, [r2], -r8
   1177c:	push	{r4, lr}
   11780:	mov	r4, r0
   11784:	bl	107d4 <strlen@plt>
   11788:	sub	r0, r0, #1
   1178c:	sxth	r0, r0
   11790:	cmp	r0, #0
   11794:	blt	117c0 <abort@plt+0xf98>
   11798:	ldrb	r3, [r4, r0]
   1179c:	cmp	r3, #47	; 0x2f
   117a0:	beq	117c0 <abort@plt+0xf98>
   117a4:	sub	r0, r0, #1
   117a8:	sxth	r0, r0
   117ac:	cmp	r0, #0
   117b0:	blt	117c0 <abort@plt+0xf98>
   117b4:	ldrb	r3, [r4, r0]
   117b8:	cmp	r3, #47	; 0x2f
   117bc:	bne	117a4 <abort@plt+0xf7c>
   117c0:	add	r0, r0, #1
   117c4:	add	r0, r4, r0
   117c8:	pop	{r4, pc}
   117cc:	push	{r4, lr}
   117d0:	mov	r0, #0
   117d4:	bl	11604 <abort@plt+0xddc>
   117d8:	push	{r4, lr}
   117dc:	ldr	r2, [pc, #48]	; 11814 <abort@plt+0xfec>
   117e0:	ldr	r2, [r2]
   117e4:	cmp	r2, #0
   117e8:	beq	117f4 <abort@plt+0xfcc>
   117ec:	blx	r2
   117f0:	bl	117cc <abort@plt+0xfa4>
   117f4:	mov	r3, r0
   117f8:	ldr	r2, [pc, #24]	; 11818 <abort@plt+0xff0>
   117fc:	ldr	r2, [r2]
   11800:	ldr	r1, [pc, #20]	; 1181c <abort@plt+0xff4>
   11804:	ldr	r0, [pc, #20]	; 11820 <abort@plt+0xff8>
   11808:	ldr	r0, [r0]
   1180c:	bl	107e0 <fprintf@plt>
   11810:	b	117f0 <abort@plt+0xfc8>
   11814:	andeq	r7, r2, ip, ror #10
   11818:	andeq	r7, r2, r0, ror r5
   1181c:	andeq	r2, r1, ip, lsr #2
   11820:	andeq	r3, r2, r0, lsl #1

00011824 <error@@Base>:
   11824:	push	{r4, lr}
   11828:	mov	r3, r0
   1182c:	ldr	r2, [pc, #28]	; 11850 <error@@Base+0x2c>
   11830:	ldr	r2, [r2]
   11834:	ldr	r1, [pc, #24]	; 11854 <error@@Base+0x30>
   11838:	ldr	r0, [pc, #24]	; 11858 <error@@Base+0x34>
   1183c:	ldr	r0, [r0]
   11840:	bl	107e0 <fprintf@plt>
   11844:	ldr	r3, [pc, #16]	; 1185c <error@@Base+0x38>
   11848:	ldr	r0, [r3]
   1184c:	bl	11604 <abort@plt+0xddc>
   11850:	andeq	r7, r2, r0, ror r5
   11854:	andeq	r2, r1, ip, lsr r1
   11858:	andeq	r3, r2, r0, lsl #1
   1185c:	andeq	r3, r2, r4, ror r0
   11860:	push	{r4, lr}
   11864:	bl	10720 <calloc@plt>
   11868:	cmp	r0, #0
   1186c:	popne	{r4, pc}
   11870:	ldr	r0, [pc]	; 11878 <error@@Base+0x54>
   11874:	bl	11824 <error@@Base>
   11878:	andeq	r2, r1, r4, asr #2
   1187c:	ldr	r3, [pc, #36]	; 118a8 <error@@Base+0x84>
   11880:	ldrb	r3, [r3, #2]
   11884:	cmp	r3, #0
   11888:	beq	11890 <error@@Base+0x6c>
   1188c:	bx	lr
   11890:	push	{r4, lr}
   11894:	mov	r2, #1
   11898:	ldr	r3, [pc, #8]	; 118a8 <error@@Base+0x84>
   1189c:	strb	r2, [r3, #2]
   118a0:	ldr	r0, [pc, #4]	; 118ac <error@@Base+0x88>
   118a4:	bl	11824 <error@@Base>
   118a8:	strdeq	r3, [r2], -r8
   118ac:	andeq	r2, r1, r0, ror #2
   118b0:	push	{lr}		; (str lr, [sp, #-4]!)
   118b4:	sub	sp, sp, #12
   118b8:	ldr	r3, [pc, #40]	; 118e8 <error@@Base+0xc4>
   118bc:	ldr	r2, [r3]
   118c0:	ldr	r3, [pc, #36]	; 118ec <error@@Base+0xc8>
   118c4:	ldr	ip, [r3]
   118c8:	str	r1, [sp]
   118cc:	mov	r3, r0
   118d0:	ldr	r1, [pc, #24]	; 118f0 <error@@Base+0xcc>
   118d4:	mov	r0, ip
   118d8:	bl	107e0 <fprintf@plt>
   118dc:	ldr	r3, [pc, #16]	; 118f4 <error@@Base+0xd0>
   118e0:	ldr	r0, [r3]
   118e4:	bl	11604 <abort@plt+0xddc>
   118e8:	andeq	r7, r2, r0, ror r5
   118ec:	andeq	r3, r2, r0, lsl #1
   118f0:	andeq	r2, r1, r0, ror r1
   118f4:	andeq	r3, r2, r4, ror r0
   118f8:	push	{r4, r5, r6, lr}
   118fc:	subs	r5, r0, #0
   11900:	beq	11930 <error@@Base+0x10c>
   11904:	mov	r4, r1
   11908:	mov	r0, r5
   1190c:	bl	10744 <fopen@plt>
   11910:	cmp	r0, #0
   11914:	popne	{r4, r5, r6, pc}
   11918:	ldrb	r3, [r4]
   1191c:	cmp	r3, #119	; 0x77
   11920:	beq	11948 <error@@Base+0x124>
   11924:	mov	r1, r5
   11928:	ldr	r0, [pc, #36]	; 11954 <error@@Base+0x130>
   1192c:	bl	118b0 <error@@Base+0x8c>
   11930:	ldrb	r3, [r1]
   11934:	cmp	r3, #114	; 0x72
   11938:	ldreq	r3, [pc, #24]	; 11958 <error@@Base+0x134>
   1193c:	ldrne	r3, [pc, #24]	; 1195c <error@@Base+0x138>
   11940:	ldr	r0, [r3]
   11944:	pop	{r4, r5, r6, pc}
   11948:	mov	r1, r5
   1194c:	ldr	r0, [pc, #12]	; 11960 <error@@Base+0x13c>
   11950:	bl	118b0 <error@@Base+0x8c>
   11954:	muleq	r1, r8, r1
   11958:	andeq	r3, r2, r8, lsl #1
   1195c:	andeq	r3, r2, ip, lsl #1
   11960:	andeq	r2, r1, r0, lsl #3
   11964:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11968:	sub	sp, sp, #20
   1196c:	mov	r5, r0
   11970:	str	r0, [sp, #8]
   11974:	mov	sl, r1
   11978:	str	r2, [sp, #12]
   1197c:	mov	r6, r3
   11980:	ldr	r0, [r1]
   11984:	bl	1177c <abort@plt+0xf54>
   11988:	ldr	r3, [pc, #468]	; 11b64 <error@@Base+0x340>
   1198c:	str	r0, [r3]
   11990:	ldr	r4, [pc, #464]	; 11b68 <error@@Base+0x344>
   11994:	mov	r1, r4
   11998:	mov	r0, #2
   1199c:	bl	107a4 <__sysv_signal@plt>
   119a0:	mov	r1, r4
   119a4:	mov	r0, #15
   119a8:	bl	107a4 <__sysv_signal@plt>
   119ac:	ldr	r8, [r5]
   119b0:	cmp	r8, #1
   119b4:	beq	119d4 <error@@Base+0x1b0>
   119b8:	movle	r7, #0
   119bc:	ble	119e8 <error@@Base+0x1c4>
   119c0:	mov	r7, #0
   119c4:	mov	r3, #1
   119c8:	str	r3, [sp, #4]
   119cc:	mov	r4, r3
   119d0:	b	11a80 <error@@Base+0x25c>
   119d4:	ldr	r3, [pc, #400]	; 11b6c <error@@Base+0x348>
   119d8:	ldrb	r3, [r3, #4]
   119dc:	cmp	r3, #0
   119e0:	moveq	r7, #0
   119e4:	bne	119f8 <error@@Base+0x1d4>
   119e8:	ldr	r3, [sp, #8]
   119ec:	str	r7, [r3]
   119f0:	add	sp, sp, #20
   119f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119f8:	ldr	r0, [sp, #12]
   119fc:	bl	117d8 <abort@plt+0xfb0>
   11a00:	ldr	r0, [sp, #12]
   11a04:	bl	117d8 <abort@plt+0xfb0>
   11a08:	mov	r1, r6
   11a0c:	b	11b14 <error@@Base+0x2f0>
   11a10:	ldr	r3, [r1, #8]
   11a14:	cmp	r3, #0
   11a18:	beq	11a40 <error@@Base+0x21c>
   11a1c:	ldrb	r2, [r5, #2]
   11a20:	cmp	r2, #0
   11a24:	bne	11a40 <error@@Base+0x21c>
   11a28:	ldrb	r2, [r3]
   11a2c:	cmp	r2, #0
   11a30:	bne	11a4c <error@@Base+0x228>
   11a34:	mov	r2, #1
   11a38:	strb	r2, [r3]
   11a3c:	b	11a64 <error@@Base+0x240>
   11a40:	mov	r1, r5
   11a44:	ldr	r0, [pc, #292]	; 11b70 <error@@Base+0x34c>
   11a48:	bl	118b0 <error@@Base+0x8c>
   11a4c:	mov	r1, r5
   11a50:	ldr	r0, [pc, #284]	; 11b74 <error@@Base+0x350>
   11a54:	bl	118b0 <error@@Base+0x8c>
   11a58:	add	r3, r7, #1
   11a5c:	str	r5, [sl, r7, lsl #2]
   11a60:	sxth	r7, r3
   11a64:	add	r4, r4, #1
   11a68:	sxth	r4, r4
   11a6c:	str	r4, [sp, #4]
   11a70:	ldr	r3, [sp, #8]
   11a74:	ldr	r8, [r3]
   11a78:	cmp	r4, r8
   11a7c:	bge	119e8 <error@@Base+0x1c4>
   11a80:	lsl	fp, r4, #2
   11a84:	ldr	r5, [sl, r4, lsl #2]
   11a88:	ldrb	r3, [r5]
   11a8c:	cmp	r3, #45	; 0x2d
   11a90:	bne	11a58 <error@@Base+0x234>
   11a94:	ldrb	r9, [r5, #1]
   11a98:	cmp	r9, #0
   11a9c:	beq	11a58 <error@@Base+0x234>
   11aa0:	mov	r0, r5
   11aa4:	bl	107d4 <strlen@plt>
   11aa8:	mov	r2, r0
   11aac:	mov	r1, r5
   11ab0:	ldr	r0, [pc, #192]	; 11b78 <error@@Base+0x354>
   11ab4:	bl	1081c <strncmp@plt>
   11ab8:	cmp	r0, #0
   11abc:	beq	11a00 <error@@Base+0x1dc>
   11ac0:	ldr	r3, [sp, #4]
   11ac4:	add	r3, r3, #1
   11ac8:	cmp	r3, r8
   11acc:	addlt	r3, sl, fp
   11ad0:	ldrlt	r0, [r3, #4]
   11ad4:	movge	r0, #0
   11ad8:	cmp	r6, #0
   11adc:	beq	11a40 <error@@Base+0x21c>
   11ae0:	ldrb	r2, [r6]
   11ae4:	cmp	r9, r2
   11ae8:	cmpne	r2, #0
   11aec:	beq	11a08 <error@@Base+0x1e4>
   11af0:	mov	r3, #0
   11af4:	add	r3, r3, #1
   11af8:	sxth	r3, r3
   11afc:	add	r2, r3, r3, lsl #1
   11b00:	add	r1, r6, r2, lsl #2
   11b04:	ldrb	r2, [r6, r2, lsl #2]
   11b08:	cmp	r9, r2
   11b0c:	cmpne	r2, #0
   11b10:	bne	11af4 <error@@Base+0x2d0>
   11b14:	cmp	r2, #0
   11b18:	beq	11a40 <error@@Base+0x21c>
   11b1c:	ldr	r3, [r1, #4]
   11b20:	cmp	r3, #0
   11b24:	beq	11a10 <error@@Base+0x1ec>
   11b28:	ldrb	r2, [r5, #2]
   11b2c:	cmp	r2, #0
   11b30:	cmpeq	r0, #0
   11b34:	beq	11a10 <error@@Base+0x1ec>
   11b38:	ldr	r1, [r3]
   11b3c:	cmp	r1, #0
   11b40:	bne	11a4c <error@@Base+0x228>
   11b44:	cmp	r2, #0
   11b48:	addne	r0, r5, #2
   11b4c:	str	r0, [r3]
   11b50:	ldrb	r3, [r5, #2]
   11b54:	cmp	r3, #0
   11b58:	addeq	r4, r4, #1
   11b5c:	sxtheq	r4, r4
   11b60:	b	11a64 <error@@Base+0x240>
   11b64:	andeq	r7, r2, r0, ror r5
   11b68:	andeq	r1, r1, ip, ror r8
   11b6c:	andeq	r3, r2, r4, ror r0
   11b70:			; <UNDEFINED> instruction: 0x000121b4
   11b74:	andeq	r2, r1, r4, asr #3
   11b78:	andeq	r2, r1, ip, lsr #3
   11b7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b80:	sub	sp, sp, #12
   11b84:	ldr	r3, [pc, #36]	; 11bb0 <error@@Base+0x38c>
   11b88:	ldr	r2, [r3]
   11b8c:	ldr	r3, [pc, #32]	; 11bb4 <error@@Base+0x390>
   11b90:	ldr	ip, [r3]
   11b94:	str	r1, [sp]
   11b98:	mov	r3, r0
   11b9c:	ldr	r1, [pc, #20]	; 11bb8 <error@@Base+0x394>
   11ba0:	mov	r0, ip
   11ba4:	bl	107e0 <fprintf@plt>
   11ba8:	add	sp, sp, #12
   11bac:	pop	{pc}		; (ldr pc, [sp], #4)
   11bb0:	andeq	r7, r2, r0, ror r5
   11bb4:	andeq	r3, r2, r0, lsl #1
   11bb8:	andeq	r2, r1, r0, ror r1
   11bbc:	push	{r4, lr}
   11bc0:	mov	r4, r0
   11bc4:	str	r1, [r2]
   11bc8:	str	r3, [r2, #4]
   11bcc:	cmp	r1, #0
   11bd0:	strne	r2, [r1, #4]
   11bd4:	streq	r2, [r0]
   11bd8:	cmp	r3, #0
   11bdc:	strne	r2, [r3]
   11be0:	streq	r2, [r0, #4]
   11be4:	ldr	r0, [r0, #8]
   11be8:	cmp	r0, #0
   11bec:	beq	11bfc <error@@Base+0x3d8>
   11bf0:	bl	10750 <free@plt>
   11bf4:	mov	r3, #0
   11bf8:	str	r3, [r4, #8]
   11bfc:	ldr	r3, [r4, #12]
   11c00:	add	r3, r3, #1
   11c04:	str	r3, [r4, #12]
   11c08:	pop	{r4, pc}
   11c0c:	mov	r3, #0
   11c10:	str	r3, [r0, #4]
   11c14:	str	r3, [r0]
   11c18:	str	r3, [r0, #8]
   11c1c:	str	r3, [r0, #12]
   11c20:	bx	lr
   11c24:	push	{r4, lr}
   11c28:	ldr	r3, [r0]
   11c2c:	mov	r2, r1
   11c30:	mov	r1, #0
   11c34:	bl	11bbc <error@@Base+0x398>
   11c38:	pop	{r4, pc}
   11c3c:	push	{r4, lr}
   11c40:	mov	r3, #0
   11c44:	mov	r2, r1
   11c48:	ldr	r1, [r0, #4]
   11c4c:	bl	11bbc <error@@Base+0x398>
   11c50:	pop	{r4, pc}
   11c54:	push	{r4, lr}
   11c58:	mov	ip, r2
   11c5c:	mov	r3, r2
   11c60:	mov	r2, r1
   11c64:	ldr	r1, [ip]
   11c68:	bl	11bbc <error@@Base+0x398>
   11c6c:	pop	{r4, pc}
   11c70:	push	{r4, lr}
   11c74:	ldr	r3, [r1, #4]
   11c78:	bl	11bbc <error@@Base+0x398>
   11c7c:	pop	{r4, pc}
   11c80:	push	{r4, lr}
   11c84:	mov	r4, r0
   11c88:	ldr	r3, [r1]
   11c8c:	cmp	r3, #0
   11c90:	ldrne	r2, [r1, #4]
   11c94:	strne	r2, [r3, #4]
   11c98:	ldreq	r3, [r1, #4]
   11c9c:	streq	r3, [r0]
   11ca0:	ldr	r3, [r1, #4]
   11ca4:	cmp	r3, #0
   11ca8:	ldrne	r2, [r1]
   11cac:	strne	r2, [r3]
   11cb0:	ldreq	r3, [r1]
   11cb4:	streq	r3, [r0, #4]
   11cb8:	mov	r3, #0
   11cbc:	str	r3, [r1, #4]
   11cc0:	str	r3, [r1]
   11cc4:	ldr	r0, [r0, #8]
   11cc8:	cmp	r0, r3
   11ccc:	beq	11cdc <error@@Base+0x4b8>
   11cd0:	bl	10750 <free@plt>
   11cd4:	mov	r3, #0
   11cd8:	str	r3, [r4, #8]
   11cdc:	ldr	r3, [r4, #12]
   11ce0:	sub	r3, r3, #1
   11ce4:	str	r3, [r4, #12]
   11ce8:	pop	{r4, pc}
   11cec:	ldr	r3, [r0, #8]
   11cf0:	cmp	r3, #0
   11cf4:	bxne	lr
   11cf8:	ldr	r3, [r0, #12]
   11cfc:	cmp	r3, #0
   11d00:	bxeq	lr
   11d04:	push	{r4, lr}
   11d08:	mov	r4, r0
   11d0c:	mov	r1, #4
   11d10:	mov	r0, r3
   11d14:	bl	11860 <error@@Base+0x3c>
   11d18:	str	r0, [r4, #8]
   11d1c:	ldr	r3, [r4]
   11d20:	cmp	r3, #0
   11d24:	popeq	{r4, pc}
   11d28:	mov	r2, #0
   11d2c:	ldr	r1, [r4, #8]
   11d30:	str	r3, [r1, r2]
   11d34:	ldr	r3, [r3, #4]
   11d38:	add	r2, r2, #4
   11d3c:	cmp	r3, #0
   11d40:	bne	11d2c <error@@Base+0x508>
   11d44:	pop	{r4, pc}
   11d48:	push	{r4, r5, r6, lr}
   11d4c:	mov	r5, r0
   11d50:	mov	r6, r1
   11d54:	ldr	r4, [r0]
   11d58:	cmp	r4, #0
   11d5c:	popeq	{r4, r5, r6, pc}
   11d60:	mov	r1, r4
   11d64:	mov	r0, r5
   11d68:	bl	11c80 <error@@Base+0x45c>
   11d6c:	mov	r0, r4
   11d70:	blx	r6
   11d74:	ldr	r4, [r5]
   11d78:	cmp	r4, #0
   11d7c:	bne	11d60 <error@@Base+0x53c>
   11d80:	pop	{r4, r5, r6, pc}
   11d84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d88:	mov	sl, r0
   11d8c:	mov	r9, r1
   11d90:	ldr	r3, [pc, #300]	; 11ec4 <error@@Base+0x6a0>
   11d94:	ldr	r3, [r3]
   11d98:	ldr	r8, [r3, r0, lsl #2]
   11d9c:	cmp	r0, r1
   11da0:	movge	r3, r1
   11da4:	movge	r4, r0
   11da8:	bge	11e88 <error@@Base+0x664>
   11dac:	mov	r4, r0
   11db0:	mov	r3, r1
   11db4:	ldr	r6, [pc, #264]	; 11ec4 <error@@Base+0x6a0>
   11db8:	b	11e3c <error@@Base+0x618>
   11dbc:	mov	r5, r3
   11dc0:	cmp	r4, r5
   11dc4:	beq	11e80 <error@@Base+0x65c>
   11dc8:	ldr	r2, [r6]
   11dcc:	add	r3, r4, #1
   11dd0:	lsl	r7, r4, #2
   11dd4:	ldr	r1, [r2, r5, lsl #2]
   11dd8:	str	r1, [r2, r4, lsl #2]
   11ddc:	cmp	r3, r5
   11de0:	movge	r4, r3
   11de4:	bge	11e1c <error@@Base+0x5f8>
   11de8:	add	r7, r7, #4
   11dec:	mov	r4, r3
   11df0:	ldr	r2, [r6]
   11df4:	ldr	r3, [r6, #4]
   11df8:	ldr	r1, [r2, r7]
   11dfc:	mov	r0, r8
   11e00:	blx	r3
   11e04:	cmp	r0, #0
   11e08:	ble	11e1c <error@@Base+0x5f8>
   11e0c:	add	r4, r4, #1
   11e10:	add	r7, r7, #4
   11e14:	cmp	r4, r5
   11e18:	blt	11df0 <error@@Base+0x5cc>
   11e1c:	cmp	r4, r5
   11e20:	beq	11e84 <error@@Base+0x660>
   11e24:	ldr	r2, [r6]
   11e28:	sub	r3, r5, #1
   11e2c:	ldr	r1, [r2, r4, lsl #2]
   11e30:	str	r1, [r2, r5, lsl #2]
   11e34:	cmp	r3, r4
   11e38:	ble	11e88 <error@@Base+0x664>
   11e3c:	cmp	r3, r4
   11e40:	ble	11dbc <error@@Base+0x598>
   11e44:	lsl	r7, r3, #2
   11e48:	mov	r5, r3
   11e4c:	ldr	r2, [r6]
   11e50:	ldr	r3, [r6, #4]
   11e54:	ldr	r1, [r2, r7]
   11e58:	mov	r0, r8
   11e5c:	blx	r3
   11e60:	cmp	r0, #0
   11e64:	bge	11dc0 <error@@Base+0x59c>
   11e68:	sub	r5, r5, #1
   11e6c:	sub	r7, r7, #4
   11e70:	cmp	r5, r4
   11e74:	bne	11e4c <error@@Base+0x628>
   11e78:	mov	r4, r5
   11e7c:	b	11e1c <error@@Base+0x5f8>
   11e80:	mov	r4, r5
   11e84:	mov	r3, r4
   11e88:	ldr	r2, [pc, #52]	; 11ec4 <error@@Base+0x6a0>
   11e8c:	ldr	r2, [r2]
   11e90:	str	r8, [r2, r3, lsl #2]
   11e94:	sub	r1, r3, #1
   11e98:	cmp	sl, r1
   11e9c:	blt	11eb8 <error@@Base+0x694>
   11ea0:	add	r0, r4, #1
   11ea4:	cmp	r9, r0
   11ea8:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   11eac:	mov	r1, r9
   11eb0:	bl	11d84 <error@@Base+0x560>
   11eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11eb8:	mov	r0, sl
   11ebc:	bl	11d84 <error@@Base+0x560>
   11ec0:	b	11ea0 <error@@Base+0x67c>
   11ec4:	strdeq	r3, [r2], -ip
   11ec8:	cmp	r0, #1
   11ecc:	bxle	lr
   11ed0:	push	{r4, lr}
   11ed4:	ldr	r3, [pc, #20]	; 11ef0 <error@@Base+0x6cc>
   11ed8:	str	r1, [r3]
   11edc:	str	r2, [r3, #4]
   11ee0:	sub	r1, r0, #1
   11ee4:	mov	r0, #0
   11ee8:	bl	11d84 <error@@Base+0x560>
   11eec:	pop	{r4, pc}
   11ef0:	strdeq	r3, [r2], -ip
   11ef4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ef8:	mov	r7, r0
   11efc:	ldr	r6, [pc, #72]	; 11f4c <error@@Base+0x728>
   11f00:	ldr	r5, [pc, #72]	; 11f50 <error@@Base+0x72c>
   11f04:	add	r6, pc, r6
   11f08:	add	r5, pc, r5
   11f0c:	sub	r6, r6, r5
   11f10:	mov	r8, r1
   11f14:	mov	r9, r2
   11f18:	bl	10700 <calloc@plt-0x20>
   11f1c:	asrs	r6, r6, #2
   11f20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f24:	mov	r4, #0
   11f28:	add	r4, r4, #1
   11f2c:	ldr	r3, [r5], #4
   11f30:	mov	r2, r9
   11f34:	mov	r1, r8
   11f38:	mov	r0, r7
   11f3c:	blx	r3
   11f40:	cmp	r6, r4
   11f44:	bne	11f28 <error@@Base+0x704>
   11f48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f4c:	strdeq	r0, [r1], -r4
   11f50:	andeq	r0, r1, ip, ror #31
   11f54:	bx	lr

Disassembly of section .fini:

00011f58 <.fini>:
   11f58:	push	{r3, lr}
   11f5c:	pop	{r3, pc}
