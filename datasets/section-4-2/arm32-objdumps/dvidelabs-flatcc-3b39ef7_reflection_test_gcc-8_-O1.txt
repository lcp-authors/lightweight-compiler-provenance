
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010764 <.init>:
   10764:	push	{r3, lr}
   10768:	bl	1088c <_start@@Base+0x3c>
   1076c:	pop	{r3, pc}

Disassembly of section .plt:

00010770 <strcmp@plt-0x14>:
   10770:	push	{lr}		; (str lr, [sp, #-4]!)
   10774:	ldr	lr, [pc, #4]	; 10780 <strcmp@plt-0x4>
   10778:	add	lr, pc, lr
   1077c:	ldr	pc, [lr, #8]!
   10780:	andeq	r1, r1, r0, lsl #17

00010784 <strcmp@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2176]!	; 0x880

00010790 <printf@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2168]!	; 0x878

0001079c <fopen@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2160]!	; 0x870

000107a8 <free@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2152]!	; 0x868

000107b4 <ftell@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2144]!	; 0x860

000107c0 <rewind@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2136]!	; 0x858

000107cc <fwrite@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2128]!	; 0x850

000107d8 <fread@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2120]!	; 0x848

000107e4 <puts@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2112]!	; 0x840

000107f0 <malloc@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2104]!	; 0x838

000107fc <__libc_start_main@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2096]!	; 0x830

00010808 <__gmon_start__@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2088]!	; 0x828

00010814 <exit@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2080]!	; 0x820

00010820 <fclose@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2072]!	; 0x818

0001082c <fseek@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2064]!	; 0x810

00010838 <abort@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2056]!	; 0x808

00010844 <__assert_fail@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2048]!	; 0x800

Disassembly of section .text:

00010850 <_start@@Base>:
   10850:	mov	fp, #0
   10854:	mov	lr, #0
   10858:	pop	{r1}		; (ldr r1, [sp], #4)
   1085c:	mov	r2, sp
   10860:	push	{r2}		; (str r2, [sp, #-4]!)
   10864:	push	{r0}		; (str r0, [sp, #-4]!)
   10868:	ldr	ip, [pc, #16]	; 10880 <_start@@Base+0x30>
   1086c:	push	{ip}		; (str ip, [sp, #-4]!)
   10870:	ldr	r0, [pc, #12]	; 10884 <_start@@Base+0x34>
   10874:	ldr	r3, [pc, #12]	; 10888 <_start@@Base+0x38>
   10878:	bl	107fc <__libc_start_main@plt>
   1087c:	bl	10838 <abort@plt>
   10880:	andeq	r1, r1, r4, ror r8
   10884:	andeq	r1, r1, r0, lsr #15
   10888:	andeq	r1, r1, r4, lsl r8
   1088c:	ldr	r3, [pc, #20]	; 108a8 <_start@@Base+0x58>
   10890:	ldr	r2, [pc, #20]	; 108ac <_start@@Base+0x5c>
   10894:	add	r3, pc, r3
   10898:	ldr	r2, [r3, r2]
   1089c:	cmp	r2, #0
   108a0:	bxeq	lr
   108a4:	b	10808 <__gmon_start__@plt>
   108a8:	andeq	r1, r1, r4, ror #14
   108ac:	andeq	r0, r0, r0, asr r0
   108b0:	ldr	r0, [pc, #24]	; 108d0 <_start@@Base+0x80>
   108b4:	ldr	r3, [pc, #24]	; 108d4 <_start@@Base+0x84>
   108b8:	cmp	r3, r0
   108bc:	bxeq	lr
   108c0:	ldr	r3, [pc, #16]	; 108d8 <_start@@Base+0x88>
   108c4:	cmp	r3, #0
   108c8:	bxeq	lr
   108cc:	bx	r3
   108d0:	andeq	r2, r2, r0, rrx
   108d4:	andeq	r2, r2, r0, rrx
   108d8:	andeq	r0, r0, r0
   108dc:	ldr	r0, [pc, #36]	; 10908 <_start@@Base+0xb8>
   108e0:	ldr	r1, [pc, #36]	; 1090c <_start@@Base+0xbc>
   108e4:	sub	r1, r1, r0
   108e8:	asr	r1, r1, #2
   108ec:	add	r1, r1, r1, lsr #31
   108f0:	asrs	r1, r1, #1
   108f4:	bxeq	lr
   108f8:	ldr	r3, [pc, #16]	; 10910 <_start@@Base+0xc0>
   108fc:	cmp	r3, #0
   10900:	bxeq	lr
   10904:	bx	r3
   10908:	andeq	r2, r2, r0, rrx
   1090c:	andeq	r2, r2, r0, rrx
   10910:	andeq	r0, r0, r0
   10914:	push	{r4, lr}
   10918:	ldr	r4, [pc, #24]	; 10938 <_start@@Base+0xe8>
   1091c:	ldrb	r3, [r4]
   10920:	cmp	r3, #0
   10924:	popne	{r4, pc}
   10928:	bl	108b0 <_start@@Base+0x60>
   1092c:	mov	r3, #1
   10930:	strb	r3, [r4]
   10934:	pop	{r4, pc}
   10938:	andeq	r2, r2, r4, rrx
   1093c:	b	108dc <_start@@Base+0x8c>

00010940 <test_schema@@Base>:
   10940:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10944:	strd	r6, [sp, #8]
   10948:	strd	r8, [sp, #16]
   1094c:	strd	sl, [sp, #24]
   10950:	str	lr, [sp, #32]
   10954:	sub	sp, sp, #20
   10958:	movw	r1, #6484	; 0x1954
   1095c:	movt	r1, #1
   10960:	bl	1079c <fopen@plt>
   10964:	subs	r6, r0, #0
   10968:	beq	11770 <test_schema@@Base+0xe30>
   1096c:	mov	r2, #2
   10970:	mov	r1, #0
   10974:	mov	r0, r6
   10978:	bl	1082c <fseek@plt>
   1097c:	mov	r0, r6
   10980:	bl	107b4 <ftell@plt>
   10984:	mov	r7, r0
   10988:	movw	r3, #10000	; 0x2710
   1098c:	cmp	r0, r3
   10990:	bhi	11754 <test_schema@@Base+0xe14>
   10994:	mov	r0, r6
   10998:	bl	107c0 <rewind@plt>
   1099c:	cmp	r7, #0
   109a0:	movne	r0, r7
   109a4:	moveq	r0, #1
   109a8:	bl	107f0 <malloc@plt>
   109ac:	subs	fp, r0, #0
   109b0:	beq	11758 <test_schema@@Base+0xe18>
   109b4:	mov	r4, #0
   109b8:	mov	r8, #1
   109bc:	b	109c4 <test_schema@@Base+0x84>
   109c0:	add	r4, r4, r0
   109c4:	mov	r3, r6
   109c8:	sub	r2, r7, r4
   109cc:	mov	r1, r8
   109d0:	add	r0, fp, r4
   109d4:	bl	107d8 <fread@plt>
   109d8:	cmp	r0, #0
   109dc:	bne	109c0 <test_schema@@Base+0x80>
   109e0:	mov	r5, r0
   109e4:	cmp	r7, r4
   109e8:	bne	11758 <test_schema@@Base+0xe18>
   109ec:	mov	r0, r6
   109f0:	bl	10820 <fclose@plt>
   109f4:	movw	r3, #17986	; 0x4642
   109f8:	movt	r3, #21314	; 0x5342
   109fc:	ldr	r2, [fp, #4]
   10a00:	cmp	r2, r3
   10a04:	bne	10a58 <test_schema@@Base+0x118>
   10a08:	ldr	r3, [fp]
   10a0c:	adds	r2, fp, r3
   10a10:	beq	10a58 <test_schema@@Base+0x118>
   10a14:	ldr	r3, [fp, r3]
   10a18:	sub	r3, r2, r3
   10a1c:	ldrh	r1, [r3]
   10a20:	cmp	r1, #5
   10a24:	bls	10a78 <test_schema@@Base+0x138>
   10a28:	ldrh	r3, [r3, #4]
   10a2c:	cmp	r3, #0
   10a30:	beq	10a78 <test_schema@@Base+0x138>
   10a34:	add	r4, r2, r3
   10a38:	ldr	r3, [r2, r3]
   10a3c:	add	r3, r3, #4
   10a40:	add	r4, r4, r3
   10a44:	mov	r7, r4
   10a48:	mov	r6, r5
   10a4c:	movw	r9, #6660	; 0x1a04
   10a50:	movt	r9, #1
   10a54:	b	10b30 <test_schema@@Base+0x1f0>
   10a58:	movw	r3, #6276	; 0x1884
   10a5c:	movt	r3, #1
   10a60:	mov	r2, #237	; 0xed
   10a64:	movw	r1, #6488	; 0x1958
   10a68:	movt	r1, #1
   10a6c:	movw	r0, #6584	; 0x19b8
   10a70:	movt	r0, #1
   10a74:	bl	10844 <__assert_fail@plt>
   10a78:	movw	r3, #6276	; 0x1884
   10a7c:	movt	r3, #1
   10a80:	mov	r2, #237	; 0xed
   10a84:	movw	r1, #6488	; 0x1958
   10a88:	movt	r1, #1
   10a8c:	movw	r0, #6624	; 0x19e0
   10a90:	movt	r0, #1
   10a94:	bl	10844 <__assert_fail@plt>
   10a98:	ldr	r3, [pc, #3300]	; 11784 <test_schema@@Base+0xe44>
   10a9c:	mov	r2, #218	; 0xda
   10aa0:	movw	r1, #6488	; 0x1958
   10aa4:	movt	r1, #1
   10aa8:	movw	r0, #6584	; 0x19b8
   10aac:	movt	r0, #1
   10ab0:	bl	10844 <__assert_fail@plt>
   10ab4:	ldr	r3, [pc, #3272]	; 11784 <test_schema@@Base+0xe44>
   10ab8:	mov	r2, #218	; 0xda
   10abc:	movw	r1, #6488	; 0x1958
   10ac0:	movt	r1, #1
   10ac4:	movw	r0, #6624	; 0x19e0
   10ac8:	movt	r0, #1
   10acc:	bl	10844 <__assert_fail@plt>
   10ad0:	ldr	r8, [r4, #-4]
   10ad4:	cmp	r6, r8
   10ad8:	bcs	10b3c <test_schema@@Base+0x1fc>
   10adc:	mov	r1, r6
   10ae0:	mov	r3, r7
   10ae4:	add	r7, r7, #4
   10ae8:	ldr	r2, [r3]
   10aec:	adds	r0, r3, r2
   10af0:	beq	10a98 <test_schema@@Base+0x158>
   10af4:	ldr	r3, [r3, r2]
   10af8:	sub	r3, r0, r3
   10afc:	ldrh	r2, [r3]
   10b00:	cmp	r2, #5
   10b04:	bls	10ab4 <test_schema@@Base+0x174>
   10b08:	ldrh	r3, [r3, #4]
   10b0c:	cmp	r3, #0
   10b10:	beq	10ab4 <test_schema@@Base+0x174>
   10b14:	add	r2, r0, r3
   10b18:	ldr	r3, [r0, r3]
   10b1c:	add	r3, r3, #4
   10b20:	add	r2, r2, r3
   10b24:	mov	r0, r9
   10b28:	bl	10790 <printf@plt>
   10b2c:	add	r6, r6, #1
   10b30:	cmp	r4, #0
   10b34:	bne	10ad0 <test_schema@@Base+0x190>
   10b38:	mov	r8, r5
   10b3c:	cmp	r4, #0
   10b40:	beq	10c7c <test_schema@@Base+0x33c>
   10b44:	ldr	r9, [r4, #-4]
   10b48:	cmp	r9, #0
   10b4c:	beq	10c7c <test_schema@@Base+0x33c>
   10b50:	sub	sl, r9, #1
   10b54:	mov	r7, r5
   10b58:	movw	r3, #6736	; 0x1a50
   10b5c:	movt	r3, #1
   10b60:	str	r3, [sp]
   10b64:	cmp	r7, sl
   10b68:	bcs	10c70 <test_schema@@Base+0x330>
   10b6c:	sub	r6, sl, r7
   10b70:	add	r6, r7, r6, lsr #1
   10b74:	add	r2, r4, r6, lsl #2
   10b78:	cmp	r9, r6
   10b7c:	bls	10c14 <test_schema@@Base+0x2d4>
   10b80:	ldr	r3, [r4, r6, lsl #2]
   10b84:	adds	r1, r2, r3
   10b88:	beq	10c30 <test_schema@@Base+0x2f0>
   10b8c:	ldr	r2, [r2, r3]
   10b90:	sub	r2, r1, r2
   10b94:	ldrh	r3, [r2]
   10b98:	cmp	r3, #5
   10b9c:	bls	10c4c <test_schema@@Base+0x30c>
   10ba0:	ldrh	r3, [r2, #4]
   10ba4:	cmp	r3, #0
   10ba8:	beq	10c4c <test_schema@@Base+0x30c>
   10bac:	add	r0, r1, r3
   10bb0:	ldr	r3, [r1, r3]
   10bb4:	add	r3, r3, #4
   10bb8:	ldr	r1, [sp]
   10bbc:	add	r0, r0, r3
   10bc0:	bl	10784 <strcmp@plt>
   10bc4:	cmp	r0, #0
   10bc8:	blt	10c68 <test_schema@@Base+0x328>
   10bcc:	cmp	r7, r6
   10bd0:	bcs	10c74 <test_schema@@Base+0x334>
   10bd4:	sub	r3, r6, r7
   10bd8:	add	r3, r7, r3, lsr #1
   10bdc:	add	r2, r4, r3, lsl #2
   10be0:	cmp	r9, r3
   10be4:	bls	10c14 <test_schema@@Base+0x2d4>
   10be8:	ldr	r0, [r4, r3, lsl #2]
   10bec:	adds	r1, r2, r0
   10bf0:	beq	10c30 <test_schema@@Base+0x2f0>
   10bf4:	ldr	r2, [r2, r0]
   10bf8:	sub	r2, r1, r2
   10bfc:	mov	sl, r6
   10c00:	ldrh	r0, [r2]
   10c04:	cmp	r0, #5
   10c08:	bls	10c4c <test_schema@@Base+0x30c>
   10c0c:	mov	r6, r3
   10c10:	b	10ba0 <test_schema@@Base+0x260>
   10c14:	ldr	r3, [pc, #2924]	; 11788 <test_schema@@Base+0xe48>
   10c18:	mov	r2, #215	; 0xd7
   10c1c:	movw	r1, #6488	; 0x1958
   10c20:	movt	r1, #1
   10c24:	movw	r0, #6680	; 0x1a18
   10c28:	movt	r0, #1
   10c2c:	bl	10844 <__assert_fail@plt>
   10c30:	ldr	r3, [pc, #2892]	; 11784 <test_schema@@Base+0xe44>
   10c34:	mov	r2, #218	; 0xda
   10c38:	movw	r1, #6488	; 0x1958
   10c3c:	movt	r1, #1
   10c40:	movw	r0, #6584	; 0x19b8
   10c44:	movt	r0, #1
   10c48:	bl	10844 <__assert_fail@plt>
   10c4c:	ldr	r3, [pc, #2864]	; 11784 <test_schema@@Base+0xe44>
   10c50:	mov	r2, #218	; 0xda
   10c54:	movw	r1, #6488	; 0x1958
   10c58:	movt	r1, #1
   10c5c:	movw	r0, #6624	; 0x19e0
   10c60:	movt	r0, #1
   10c64:	bl	10844 <__assert_fail@plt>
   10c68:	add	r7, r6, #1
   10c6c:	b	10b64 <test_schema@@Base+0x224>
   10c70:	mov	r6, sl
   10c74:	cmp	r7, r6
   10c78:	beq	10c90 <test_schema@@Base+0x350>
   10c7c:	movw	r0, #6760	; 0x1a68
   10c80:	movt	r0, #1
   10c84:	bl	107e4 <puts@plt>
   10c88:	mvn	r4, #0
   10c8c:	b	11654 <test_schema@@Base+0xd14>
   10c90:	add	r2, r4, r7, lsl #2
   10c94:	cmp	r9, r7
   10c98:	bls	10dfc <test_schema@@Base+0x4bc>
   10c9c:	ldr	r3, [r4, r7, lsl #2]
   10ca0:	adds	r6, r2, r3
   10ca4:	beq	10e18 <test_schema@@Base+0x4d8>
   10ca8:	ldr	r4, [r2, r3]
   10cac:	sub	r4, r6, r4
   10cb0:	ldrh	r9, [r4]
   10cb4:	cmp	r9, #5
   10cb8:	bls	10e34 <test_schema@@Base+0x4f4>
   10cbc:	ldrh	r3, [r4, #4]
   10cc0:	cmp	r3, #0
   10cc4:	beq	10e34 <test_schema@@Base+0x4f4>
   10cc8:	add	r0, r6, r3
   10ccc:	ldr	r3, [r6, r3]
   10cd0:	add	r3, r3, #4
   10cd4:	movw	r1, #6736	; 0x1a50
   10cd8:	movt	r1, #1
   10cdc:	add	r0, r0, r3
   10ce0:	bl	10784 <strcmp@plt>
   10ce4:	cmp	r0, #0
   10ce8:	bne	10c7c <test_schema@@Base+0x33c>
   10cec:	cmn	r7, #1
   10cf0:	beq	10c7c <test_schema@@Base+0x33c>
   10cf4:	cmp	r7, r8
   10cf8:	bcs	10e50 <test_schema@@Base+0x510>
   10cfc:	cmp	r9, #7
   10d00:	bls	10e6c <test_schema@@Base+0x52c>
   10d04:	ldrh	r3, [r4, #6]
   10d08:	cmp	r3, #0
   10d0c:	beq	10e6c <test_schema@@Base+0x52c>
   10d10:	add	r4, r6, r3
   10d14:	ldr	r3, [r6, r3]
   10d18:	add	r3, r3, #4
   10d1c:	adds	r4, r4, r3
   10d20:	beq	10ef0 <test_schema@@Base+0x5b0>
   10d24:	ldr	r9, [r4, #-4]
   10d28:	cmp	r9, #0
   10d2c:	beq	10ef0 <test_schema@@Base+0x5b0>
   10d30:	sub	r3, r9, #1
   10d34:	str	r3, [sp, #4]
   10d38:	mov	sl, r3
   10d3c:	mov	r8, r5
   10d40:	movw	r3, #6796	; 0x1a8c
   10d44:	movt	r3, #1
   10d48:	str	r3, [sp]
   10d4c:	cmp	r8, sl
   10d50:	bcs	10ee4 <test_schema@@Base+0x5a4>
   10d54:	sub	r6, sl, r8
   10d58:	add	r6, r8, r6, lsr #1
   10d5c:	add	r2, r4, r6, lsl #2
   10d60:	cmp	r9, r6
   10d64:	bls	10e88 <test_schema@@Base+0x548>
   10d68:	ldr	r3, [r4, r6, lsl #2]
   10d6c:	adds	r1, r2, r3
   10d70:	beq	10ea4 <test_schema@@Base+0x564>
   10d74:	ldr	r2, [r2, r3]
   10d78:	sub	r2, r1, r2
   10d7c:	ldrh	r3, [r2]
   10d80:	cmp	r3, #5
   10d84:	bls	10ec0 <test_schema@@Base+0x580>
   10d88:	ldrh	r3, [r2, #4]
   10d8c:	cmp	r3, #0
   10d90:	beq	10ec0 <test_schema@@Base+0x580>
   10d94:	add	r0, r1, r3
   10d98:	ldr	r3, [r1, r3]
   10d9c:	add	r3, r3, #4
   10da0:	ldr	r1, [sp]
   10da4:	add	r0, r0, r3
   10da8:	bl	10784 <strcmp@plt>
   10dac:	cmp	r0, #0
   10db0:	blt	10edc <test_schema@@Base+0x59c>
   10db4:	cmp	r8, r6
   10db8:	bcs	10ee8 <test_schema@@Base+0x5a8>
   10dbc:	sub	r3, r6, r8
   10dc0:	add	r3, r8, r3, lsr #1
   10dc4:	add	r2, r4, r3, lsl #2
   10dc8:	cmp	r9, r3
   10dcc:	bls	10e88 <test_schema@@Base+0x548>
   10dd0:	ldr	r0, [r4, r3, lsl #2]
   10dd4:	adds	r1, r2, r0
   10dd8:	beq	10ea4 <test_schema@@Base+0x564>
   10ddc:	ldr	r2, [r2, r0]
   10de0:	sub	r2, r1, r2
   10de4:	mov	sl, r6
   10de8:	ldrh	r0, [r2]
   10dec:	cmp	r0, #5
   10df0:	bls	10ec0 <test_schema@@Base+0x580>
   10df4:	mov	r6, r3
   10df8:	b	10d88 <test_schema@@Base+0x448>
   10dfc:	ldr	r3, [pc, #2436]	; 11788 <test_schema@@Base+0xe48>
   10e00:	mov	r2, #215	; 0xd7
   10e04:	movw	r1, #6488	; 0x1958
   10e08:	movt	r1, #1
   10e0c:	movw	r0, #6680	; 0x1a18
   10e10:	movt	r0, #1
   10e14:	bl	10844 <__assert_fail@plt>
   10e18:	ldr	r3, [pc, #2404]	; 11784 <test_schema@@Base+0xe44>
   10e1c:	mov	r2, #218	; 0xda
   10e20:	movw	r1, #6488	; 0x1958
   10e24:	movt	r1, #1
   10e28:	movw	r0, #6584	; 0x19b8
   10e2c:	movt	r0, #1
   10e30:	bl	10844 <__assert_fail@plt>
   10e34:	ldr	r3, [pc, #2376]	; 11784 <test_schema@@Base+0xe44>
   10e38:	mov	r2, #218	; 0xda
   10e3c:	movw	r1, #6488	; 0x1958
   10e40:	movt	r1, #1
   10e44:	movw	r0, #6624	; 0x19e0
   10e48:	movt	r0, #1
   10e4c:	bl	10844 <__assert_fail@plt>
   10e50:	ldr	r3, [pc, #2352]	; 11788 <test_schema@@Base+0xe48>
   10e54:	mov	r2, #215	; 0xd7
   10e58:	movw	r1, #6488	; 0x1958
   10e5c:	movt	r1, #1
   10e60:	movw	r0, #6680	; 0x1a18
   10e64:	movt	r0, #1
   10e68:	bl	10844 <__assert_fail@plt>
   10e6c:	ldr	r3, [pc, #2328]	; 1178c <test_schema@@Base+0xe4c>
   10e70:	mov	r2, #224	; 0xe0
   10e74:	movw	r1, #6488	; 0x1958
   10e78:	movt	r1, #1
   10e7c:	movw	r0, #6624	; 0x19e0
   10e80:	movt	r0, #1
   10e84:	bl	10844 <__assert_fail@plt>
   10e88:	ldr	r3, [pc, #2304]	; 11790 <test_schema@@Base+0xe50>
   10e8c:	mov	r2, #192	; 0xc0
   10e90:	movw	r1, #6488	; 0x1958
   10e94:	movt	r1, #1
   10e98:	movw	r0, #6680	; 0x1a18
   10e9c:	movt	r0, #1
   10ea0:	bl	10844 <__assert_fail@plt>
   10ea4:	ldr	r3, [pc, #2280]	; 11794 <test_schema@@Base+0xe54>
   10ea8:	mov	r2, #195	; 0xc3
   10eac:	movw	r1, #6488	; 0x1958
   10eb0:	movt	r1, #1
   10eb4:	movw	r0, #6584	; 0x19b8
   10eb8:	movt	r0, #1
   10ebc:	bl	10844 <__assert_fail@plt>
   10ec0:	ldr	r3, [pc, #2252]	; 11794 <test_schema@@Base+0xe54>
   10ec4:	mov	r2, #195	; 0xc3
   10ec8:	movw	r1, #6488	; 0x1958
   10ecc:	movt	r1, #1
   10ed0:	movw	r0, #6624	; 0x19e0
   10ed4:	movt	r0, #1
   10ed8:	bl	10844 <__assert_fail@plt>
   10edc:	add	r8, r6, #1
   10ee0:	b	10d4c <test_schema@@Base+0x40c>
   10ee4:	mov	r6, sl
   10ee8:	cmp	r6, r8
   10eec:	beq	10f04 <test_schema@@Base+0x5c4>
   10ef0:	movw	r0, #6804	; 0x1a94
   10ef4:	movt	r0, #1
   10ef8:	bl	107e4 <puts@plt>
   10efc:	mvn	r4, #0
   10f00:	b	11654 <test_schema@@Base+0xd14>
   10f04:	add	r3, r4, r8, lsl #2
   10f08:	str	r3, [sp, #8]
   10f0c:	cmp	r9, r8
   10f10:	bls	11020 <test_schema@@Base+0x6e0>
   10f14:	ldr	r3, [r4, r8, lsl #2]
   10f18:	str	r3, [sp, #12]
   10f1c:	ldr	r2, [sp, #8]
   10f20:	adds	r6, r2, r3
   10f24:	beq	1103c <test_schema@@Base+0x6fc>
   10f28:	ldr	r3, [sp, #8]
   10f2c:	ldr	r2, [sp, #12]
   10f30:	ldr	sl, [r3, r2]
   10f34:	sub	sl, r6, sl
   10f38:	ldrh	r3, [sl]
   10f3c:	str	r3, [sp]
   10f40:	cmp	r3, #5
   10f44:	bls	11058 <test_schema@@Base+0x718>
   10f48:	ldrh	r3, [sl, #4]
   10f4c:	cmp	r3, #0
   10f50:	beq	11058 <test_schema@@Base+0x718>
   10f54:	add	r0, r6, r3
   10f58:	ldr	r3, [r6, r3]
   10f5c:	add	r3, r3, #4
   10f60:	movw	r1, #6796	; 0x1a8c
   10f64:	movt	r1, #1
   10f68:	add	r0, r0, r3
   10f6c:	bl	10784 <strcmp@plt>
   10f70:	cmp	r0, #0
   10f74:	bne	10ef0 <test_schema@@Base+0x5b0>
   10f78:	cmn	r8, #1
   10f7c:	beq	10ef0 <test_schema@@Base+0x5b0>
   10f80:	ldr	r3, [sp]
   10f84:	cmp	r3, #13
   10f88:	bhi	11074 <test_schema@@Base+0x734>
   10f8c:	movw	r0, #6848	; 0x1ac0
   10f90:	movt	r0, #1
   10f94:	bl	107e4 <puts@plt>
   10f98:	ldr	r4, [sp, #8]
   10f9c:	ldr	r5, [sp, #12]
   10fa0:	ldr	r3, [r4, r5]
   10fa4:	sub	r3, r6, r3
   10fa8:	ldrh	r2, [r3]
   10fac:	cmp	r2, #5
   10fb0:	bls	111a0 <test_schema@@Base+0x860>
   10fb4:	ldrh	r3, [r3, #4]
   10fb8:	cmp	r3, #0
   10fbc:	beq	111a0 <test_schema@@Base+0x860>
   10fc0:	add	r1, r6, r3
   10fc4:	ldr	r3, [r6, r3]
   10fc8:	add	r3, r3, #4
   10fcc:	add	r1, r1, r3
   10fd0:	movw	r0, #6884	; 0x1ae4
   10fd4:	movt	r0, #1
   10fd8:	bl	10790 <printf@plt>
   10fdc:	ldr	r3, [r4, r5]
   10fe0:	sub	r3, r6, r3
   10fe4:	ldrh	r2, [r3]
   10fe8:	cmp	r2, #13
   10fec:	movls	r2, #0
   10ff0:	movls	r3, #0
   10ff4:	bls	1100c <test_schema@@Base+0x6cc>
   10ff8:	ldrh	r3, [r3, #12]
   10ffc:	cmp	r3, #0
   11000:	ldrdne	r2, [r3, r6]
   11004:	moveq	r2, #0
   11008:	moveq	r3, #0
   1100c:	movw	r0, #6900	; 0x1af4
   11010:	movt	r0, #1
   11014:	bl	10790 <printf@plt>
   11018:	mvn	r4, #0
   1101c:	b	11654 <test_schema@@Base+0xd14>
   11020:	ldr	r3, [pc, #1896]	; 11790 <test_schema@@Base+0xe50>
   11024:	mov	r2, #192	; 0xc0
   11028:	movw	r1, #6488	; 0x1958
   1102c:	movt	r1, #1
   11030:	movw	r0, #6680	; 0x1a18
   11034:	movt	r0, #1
   11038:	bl	10844 <__assert_fail@plt>
   1103c:	ldr	r3, [pc, #1872]	; 11794 <test_schema@@Base+0xe54>
   11040:	mov	r2, #195	; 0xc3
   11044:	movw	r1, #6488	; 0x1958
   11048:	movt	r1, #1
   1104c:	movw	r0, #6584	; 0x19b8
   11050:	movt	r0, #1
   11054:	bl	10844 <__assert_fail@plt>
   11058:	ldr	r3, [pc, #1844]	; 11794 <test_schema@@Base+0xe54>
   1105c:	mov	r2, #195	; 0xc3
   11060:	movw	r1, #6488	; 0x1958
   11064:	movt	r1, #1
   11068:	movw	r0, #6624	; 0x19e0
   1106c:	movt	r0, #1
   11070:	bl	10844 <__assert_fail@plt>
   11074:	ldrh	r3, [sl, #12]
   11078:	cmp	r3, #0
   1107c:	beq	10f8c <test_schema@@Base+0x64c>
   11080:	ldrd	r2, [r3, r6]
   11084:	cmp	r3, #0
   11088:	cmpeq	r2, #150	; 0x96
   1108c:	bne	10f8c <test_schema@@Base+0x64c>
   11090:	ldrh	r3, [sl, #6]
   11094:	cmp	r3, #0
   11098:	beq	111bc <test_schema@@Base+0x87c>
   1109c:	add	r2, r6, r3
   110a0:	ldr	r3, [r6, r3]
   110a4:	adds	r1, r2, r3
   110a8:	beq	111d8 <test_schema@@Base+0x898>
   110ac:	ldr	r3, [r2, r3]
   110b0:	sub	r3, r1, r3
   110b4:	ldrh	r2, [r3]
   110b8:	cmp	r2, #5
   110bc:	bls	111f4 <test_schema@@Base+0x8b4>
   110c0:	ldrh	r3, [r3, #4]
   110c4:	cmp	r3, #0
   110c8:	beq	111f4 <test_schema@@Base+0x8b4>
   110cc:	ldrsb	r3, [r1, r3]
   110d0:	cmp	r3, #5
   110d4:	bne	111f4 <test_schema@@Base+0x8b4>
   110d8:	ldr	r3, [sp, #4]
   110dc:	str	r3, [sp]
   110e0:	mov	r8, r5
   110e4:	movw	sl, #6936	; 0x1b18
   110e8:	movt	sl, #1
   110ec:	ldr	r3, [sp]
   110f0:	cmp	r8, r3
   110f4:	bcs	11264 <test_schema@@Base+0x924>
   110f8:	sub	r6, r3, r8
   110fc:	add	r6, r8, r6, lsr #1
   11100:	add	r2, r4, r6, lsl #2
   11104:	cmp	r6, r9
   11108:	bcs	11208 <test_schema@@Base+0x8c8>
   1110c:	ldr	r3, [r4, r6, lsl #2]
   11110:	adds	r1, r2, r3
   11114:	beq	11224 <test_schema@@Base+0x8e4>
   11118:	ldr	r2, [r2, r3]
   1111c:	sub	r2, r1, r2
   11120:	ldrh	r3, [r2]
   11124:	cmp	r3, #5
   11128:	bls	11240 <test_schema@@Base+0x900>
   1112c:	ldrh	r3, [r2, #4]
   11130:	cmp	r3, #0
   11134:	beq	11240 <test_schema@@Base+0x900>
   11138:	add	r0, r1, r3
   1113c:	ldr	r3, [r1, r3]
   11140:	add	r3, r3, #4
   11144:	mov	r1, sl
   11148:	add	r0, r0, r3
   1114c:	bl	10784 <strcmp@plt>
   11150:	cmp	r0, #0
   11154:	blt	1125c <test_schema@@Base+0x91c>
   11158:	cmp	r6, r8
   1115c:	bls	11268 <test_schema@@Base+0x928>
   11160:	sub	r3, r6, r8
   11164:	add	r3, r8, r3, lsr #1
   11168:	add	r0, r4, r3, lsl #2
   1116c:	cmp	r9, r3
   11170:	bls	11208 <test_schema@@Base+0x8c8>
   11174:	ldr	r2, [r4, r3, lsl #2]
   11178:	adds	r1, r0, r2
   1117c:	beq	11224 <test_schema@@Base+0x8e4>
   11180:	ldr	r2, [r0, r2]
   11184:	sub	r2, r1, r2
   11188:	str	r6, [sp]
   1118c:	ldrh	r0, [r2]
   11190:	cmp	r0, #5
   11194:	bls	11240 <test_schema@@Base+0x900>
   11198:	mov	r6, r3
   1119c:	b	1112c <test_schema@@Base+0x7ec>
   111a0:	ldr	r3, [pc, #1516]	; 11794 <test_schema@@Base+0xe54>
   111a4:	mov	r2, #195	; 0xc3
   111a8:	movw	r1, #6488	; 0x1958
   111ac:	movt	r1, #1
   111b0:	movw	r0, #6624	; 0x19e0
   111b4:	movt	r0, #1
   111b8:	bl	10844 <__assert_fail@plt>
   111bc:	ldr	r3, [pc, #1492]	; 11798 <test_schema@@Base+0xe58>
   111c0:	mov	r2, #201	; 0xc9
   111c4:	movw	r1, #6488	; 0x1958
   111c8:	movt	r1, #1
   111cc:	movw	r0, #6624	; 0x19e0
   111d0:	movt	r0, #1
   111d4:	bl	10844 <__assert_fail@plt>
   111d8:	ldr	r3, [pc, #1468]	; 1179c <test_schema@@Base+0xe5c>
   111dc:	mov	r2, #147	; 0x93
   111e0:	movw	r1, #6488	; 0x1958
   111e4:	movt	r1, #1
   111e8:	movw	r0, #6584	; 0x19b8
   111ec:	movt	r0, #1
   111f0:	bl	10844 <__assert_fail@plt>
   111f4:	movw	r0, #6908	; 0x1afc
   111f8:	movt	r0, #1
   111fc:	bl	107e4 <puts@plt>
   11200:	mvn	r4, #0
   11204:	b	11654 <test_schema@@Base+0xd14>
   11208:	ldr	r3, [pc, #1408]	; 11790 <test_schema@@Base+0xe50>
   1120c:	mov	r2, #192	; 0xc0
   11210:	movw	r1, #6488	; 0x1958
   11214:	movt	r1, #1
   11218:	movw	r0, #6680	; 0x1a18
   1121c:	movt	r0, #1
   11220:	bl	10844 <__assert_fail@plt>
   11224:	ldr	r3, [pc, #1384]	; 11794 <test_schema@@Base+0xe54>
   11228:	mov	r2, #195	; 0xc3
   1122c:	movw	r1, #6488	; 0x1958
   11230:	movt	r1, #1
   11234:	movw	r0, #6584	; 0x19b8
   11238:	movt	r0, #1
   1123c:	bl	10844 <__assert_fail@plt>
   11240:	ldr	r3, [pc, #1356]	; 11794 <test_schema@@Base+0xe54>
   11244:	mov	r2, #195	; 0xc3
   11248:	movw	r1, #6488	; 0x1958
   1124c:	movt	r1, #1
   11250:	movw	r0, #6624	; 0x19e0
   11254:	movt	r0, #1
   11258:	bl	10844 <__assert_fail@plt>
   1125c:	add	r8, r6, #1
   11260:	b	110ec <test_schema@@Base+0x7ac>
   11264:	ldr	r6, [sp]
   11268:	cmp	r8, r6
   1126c:	beq	11284 <test_schema@@Base+0x944>
   11270:	movw	r0, #6944	; 0x1b20
   11274:	movt	r0, #1
   11278:	bl	107e4 <puts@plt>
   1127c:	mvn	r4, #0
   11280:	b	11654 <test_schema@@Base+0xd14>
   11284:	add	r2, r4, r8, lsl #2
   11288:	cmp	r9, r8
   1128c:	bls	11420 <test_schema@@Base+0xae0>
   11290:	ldr	r3, [r4, r8, lsl #2]
   11294:	adds	r6, r2, r3
   11298:	beq	1143c <test_schema@@Base+0xafc>
   1129c:	ldr	sl, [r2, r3]
   112a0:	sub	sl, r6, sl
   112a4:	ldrh	r3, [sl]
   112a8:	str	r3, [sp]
   112ac:	cmp	r3, #5
   112b0:	bls	11458 <test_schema@@Base+0xb18>
   112b4:	ldrh	r3, [sl, #4]
   112b8:	cmp	r3, #0
   112bc:	beq	11458 <test_schema@@Base+0xb18>
   112c0:	add	r0, r6, r3
   112c4:	ldr	r3, [r6, r3]
   112c8:	add	r3, r3, #4
   112cc:	movw	r1, #6936	; 0x1b18
   112d0:	movt	r1, #1
   112d4:	add	r0, r0, r3
   112d8:	bl	10784 <strcmp@plt>
   112dc:	cmp	r0, #0
   112e0:	bne	11270 <test_schema@@Base+0x930>
   112e4:	cmn	r8, #1
   112e8:	beq	11270 <test_schema@@Base+0x930>
   112ec:	ldr	r3, [sp]
   112f0:	cmp	r3, #7
   112f4:	bls	11474 <test_schema@@Base+0xb34>
   112f8:	ldrh	r3, [sl, #6]
   112fc:	cmp	r3, #0
   11300:	beq	11474 <test_schema@@Base+0xb34>
   11304:	add	r2, r6, r3
   11308:	ldr	r3, [r6, r3]
   1130c:	adds	r1, r2, r3
   11310:	beq	11490 <test_schema@@Base+0xb50>
   11314:	ldr	r3, [r2, r3]
   11318:	sub	r3, r1, r3
   1131c:	ldrh	r2, [r3]
   11320:	cmp	r2, #5
   11324:	bls	114ac <test_schema@@Base+0xb6c>
   11328:	ldrh	r0, [r3, #4]
   1132c:	cmp	r0, #0
   11330:	beq	114ac <test_schema@@Base+0xb6c>
   11334:	ldrsb	r0, [r1, r0]
   11338:	cmp	r0, #15
   1133c:	bne	114ac <test_schema@@Base+0xb6c>
   11340:	cmp	r2, #9
   11344:	bls	114c0 <test_schema@@Base+0xb80>
   11348:	ldrh	r3, [r3, #8]
   1134c:	cmp	r3, #0
   11350:	beq	114c8 <test_schema@@Base+0xb88>
   11354:	ldr	r3, [r1, r3]
   11358:	mov	r8, r7
   1135c:	cmp	r7, r3
   11360:	bne	114d0 <test_schema@@Base+0xb90>
   11364:	movw	r7, #7016	; 0x1b68
   11368:	movt	r7, #1
   1136c:	ldr	sl, [sp, #4]
   11370:	cmp	r5, sl
   11374:	bcs	11540 <test_schema@@Base+0xc00>
   11378:	sub	r6, sl, r5
   1137c:	add	r6, r5, r6, lsr #1
   11380:	add	r3, r4, r6, lsl #2
   11384:	cmp	r9, r6
   11388:	bls	114e4 <test_schema@@Base+0xba4>
   1138c:	ldr	r2, [r4, r6, lsl #2]
   11390:	adds	r1, r3, r2
   11394:	beq	11500 <test_schema@@Base+0xbc0>
   11398:	ldr	r2, [r3, r2]
   1139c:	sub	r2, r1, r2
   113a0:	ldrh	r3, [r2]
   113a4:	cmp	r3, #5
   113a8:	bls	1151c <test_schema@@Base+0xbdc>
   113ac:	ldrh	r3, [r2, #4]
   113b0:	cmp	r3, #0
   113b4:	beq	1151c <test_schema@@Base+0xbdc>
   113b8:	add	r0, r1, r3
   113bc:	ldr	r3, [r1, r3]
   113c0:	add	r3, r3, #4
   113c4:	mov	r1, r7
   113c8:	add	r0, r0, r3
   113cc:	bl	10784 <strcmp@plt>
   113d0:	cmp	r0, #0
   113d4:	blt	11538 <test_schema@@Base+0xbf8>
   113d8:	cmp	r6, r5
   113dc:	bls	11544 <test_schema@@Base+0xc04>
   113e0:	sub	r3, r6, r5
   113e4:	add	r3, r5, r3, lsr #1
   113e8:	add	r0, r4, r3, lsl #2
   113ec:	cmp	r9, r3
   113f0:	bls	114e4 <test_schema@@Base+0xba4>
   113f4:	ldr	r2, [r4, r3, lsl #2]
   113f8:	adds	r1, r0, r2
   113fc:	beq	11500 <test_schema@@Base+0xbc0>
   11400:	ldr	r2, [r0, r2]
   11404:	sub	r2, r1, r2
   11408:	mov	sl, r6
   1140c:	ldrh	r0, [r2]
   11410:	cmp	r0, #5
   11414:	bls	1151c <test_schema@@Base+0xbdc>
   11418:	mov	r6, r3
   1141c:	b	113ac <test_schema@@Base+0xa6c>
   11420:	ldr	r3, [pc, #872]	; 11790 <test_schema@@Base+0xe50>
   11424:	mov	r2, #192	; 0xc0
   11428:	movw	r1, #6488	; 0x1958
   1142c:	movt	r1, #1
   11430:	movw	r0, #6680	; 0x1a18
   11434:	movt	r0, #1
   11438:	bl	10844 <__assert_fail@plt>
   1143c:	ldr	r3, [pc, #848]	; 11794 <test_schema@@Base+0xe54>
   11440:	mov	r2, #195	; 0xc3
   11444:	movw	r1, #6488	; 0x1958
   11448:	movt	r1, #1
   1144c:	movw	r0, #6584	; 0x19b8
   11450:	movt	r0, #1
   11454:	bl	10844 <__assert_fail@plt>
   11458:	ldr	r3, [pc, #820]	; 11794 <test_schema@@Base+0xe54>
   1145c:	mov	r2, #195	; 0xc3
   11460:	movw	r1, #6488	; 0x1958
   11464:	movt	r1, #1
   11468:	movw	r0, #6624	; 0x19e0
   1146c:	movt	r0, #1
   11470:	bl	10844 <__assert_fail@plt>
   11474:	ldr	r3, [pc, #796]	; 11798 <test_schema@@Base+0xe58>
   11478:	mov	r2, #201	; 0xc9
   1147c:	movw	r1, #6488	; 0x1958
   11480:	movt	r1, #1
   11484:	movw	r0, #6624	; 0x19e0
   11488:	movt	r0, #1
   1148c:	bl	10844 <__assert_fail@plt>
   11490:	ldr	r3, [pc, #772]	; 1179c <test_schema@@Base+0xe5c>
   11494:	mov	r2, #147	; 0x93
   11498:	movw	r1, #6488	; 0x1958
   1149c:	movt	r1, #1
   114a0:	movw	r0, #6584	; 0x19b8
   114a4:	movt	r0, #1
   114a8:	bl	10844 <__assert_fail@plt>
   114ac:	movw	r0, #6968	; 0x1b38
   114b0:	movt	r0, #1
   114b4:	bl	107e4 <puts@plt>
   114b8:	mvn	r4, #0
   114bc:	b	11654 <test_schema@@Base+0xd14>
   114c0:	mvn	r3, #0
   114c4:	b	11358 <test_schema@@Base+0xa18>
   114c8:	mvn	r3, #0
   114cc:	b	11358 <test_schema@@Base+0xa18>
   114d0:	movw	r0, #6992	; 0x1b50
   114d4:	movt	r0, #1
   114d8:	bl	107e4 <puts@plt>
   114dc:	mvn	r4, #0
   114e0:	b	11654 <test_schema@@Base+0xd14>
   114e4:	ldr	r3, [pc, #676]	; 11790 <test_schema@@Base+0xe50>
   114e8:	mov	r2, #192	; 0xc0
   114ec:	movw	r1, #6488	; 0x1958
   114f0:	movt	r1, #1
   114f4:	movw	r0, #6680	; 0x1a18
   114f8:	movt	r0, #1
   114fc:	bl	10844 <__assert_fail@plt>
   11500:	ldr	r3, [pc, #652]	; 11794 <test_schema@@Base+0xe54>
   11504:	mov	r2, #195	; 0xc3
   11508:	movw	r1, #6488	; 0x1958
   1150c:	movt	r1, #1
   11510:	movw	r0, #6584	; 0x19b8
   11514:	movt	r0, #1
   11518:	bl	10844 <__assert_fail@plt>
   1151c:	ldr	r3, [pc, #624]	; 11794 <test_schema@@Base+0xe54>
   11520:	mov	r2, #195	; 0xc3
   11524:	movw	r1, #6488	; 0x1958
   11528:	movt	r1, #1
   1152c:	movw	r0, #6624	; 0x19e0
   11530:	movt	r0, #1
   11534:	bl	10844 <__assert_fail@plt>
   11538:	add	r5, r6, #1
   1153c:	b	11370 <test_schema@@Base+0xa30>
   11540:	mov	r6, sl
   11544:	cmp	r5, r6
   11548:	beq	11560 <test_schema@@Base+0xc20>
   1154c:	movw	r0, #7036	; 0x1b7c
   11550:	movt	r0, #1
   11554:	bl	107e4 <puts@plt>
   11558:	mvn	r4, #0
   1155c:	b	11654 <test_schema@@Base+0xd14>
   11560:	add	r2, r4, r5, lsl #2
   11564:	cmp	r9, r5
   11568:	bls	1167c <test_schema@@Base+0xd3c>
   1156c:	ldr	r3, [r4, r5, lsl #2]
   11570:	adds	r6, r2, r3
   11574:	beq	11698 <test_schema@@Base+0xd58>
   11578:	ldr	r7, [r2, r3]
   1157c:	sub	r7, r6, r7
   11580:	ldrh	r9, [r7]
   11584:	cmp	r9, #5
   11588:	bls	116b4 <test_schema@@Base+0xd74>
   1158c:	ldrh	r3, [r7, #4]
   11590:	cmp	r3, #0
   11594:	beq	116b4 <test_schema@@Base+0xd74>
   11598:	add	r0, r6, r3
   1159c:	ldr	r3, [r6, r3]
   115a0:	add	r3, r3, #4
   115a4:	movw	r1, #7016	; 0x1b68
   115a8:	movt	r1, #1
   115ac:	add	r0, r0, r3
   115b0:	bl	10784 <strcmp@plt>
   115b4:	subs	r4, r0, #0
   115b8:	bne	1154c <test_schema@@Base+0xc0c>
   115bc:	cmn	r5, #1
   115c0:	beq	1154c <test_schema@@Base+0xc0c>
   115c4:	cmp	r9, #7
   115c8:	bls	116d0 <test_schema@@Base+0xd90>
   115cc:	ldrh	r3, [r7, #6]
   115d0:	cmp	r3, #0
   115d4:	beq	116d0 <test_schema@@Base+0xd90>
   115d8:	add	r1, r6, r3
   115dc:	ldr	r3, [r6, r3]
   115e0:	adds	r2, r1, r3
   115e4:	beq	116ec <test_schema@@Base+0xdac>
   115e8:	ldr	r3, [r1, r3]
   115ec:	sub	r3, r2, r3
   115f0:	ldrh	r1, [r3]
   115f4:	cmp	r1, #5
   115f8:	bls	11708 <test_schema@@Base+0xdc8>
   115fc:	ldrh	r0, [r3, #4]
   11600:	cmp	r0, #0
   11604:	beq	11708 <test_schema@@Base+0xdc8>
   11608:	ldrsb	r0, [r2, r0]
   1160c:	cmp	r0, #14
   11610:	bne	11708 <test_schema@@Base+0xdc8>
   11614:	cmp	r1, #7
   11618:	bls	1171c <test_schema@@Base+0xddc>
   1161c:	ldrh	r0, [r3, #6]
   11620:	cmp	r0, #0
   11624:	beq	1171c <test_schema@@Base+0xddc>
   11628:	ldrsb	r0, [r2, r0]
   1162c:	cmp	r0, #15
   11630:	bne	1171c <test_schema@@Base+0xddc>
   11634:	cmp	r1, #9
   11638:	bls	11730 <test_schema@@Base+0xdf0>
   1163c:	ldrh	r3, [r3, #8]
   11640:	cmp	r3, #0
   11644:	beq	11738 <test_schema@@Base+0xdf8>
   11648:	ldr	r3, [r2, r3]
   1164c:	cmp	r8, r3
   11650:	bne	11740 <test_schema@@Base+0xe00>
   11654:	mov	r0, fp
   11658:	bl	107a8 <free@plt>
   1165c:	mov	r0, r4
   11660:	add	sp, sp, #20
   11664:	ldrd	r4, [sp]
   11668:	ldrd	r6, [sp, #8]
   1166c:	ldrd	r8, [sp, #16]
   11670:	ldrd	sl, [sp, #24]
   11674:	add	sp, sp, #32
   11678:	pop	{pc}		; (ldr pc, [sp], #4)
   1167c:	ldr	r3, [pc, #268]	; 11790 <test_schema@@Base+0xe50>
   11680:	mov	r2, #192	; 0xc0
   11684:	movw	r1, #6488	; 0x1958
   11688:	movt	r1, #1
   1168c:	movw	r0, #6680	; 0x1a18
   11690:	movt	r0, #1
   11694:	bl	10844 <__assert_fail@plt>
   11698:	ldr	r3, [pc, #244]	; 11794 <test_schema@@Base+0xe54>
   1169c:	mov	r2, #195	; 0xc3
   116a0:	movw	r1, #6488	; 0x1958
   116a4:	movt	r1, #1
   116a8:	movw	r0, #6584	; 0x19b8
   116ac:	movt	r0, #1
   116b0:	bl	10844 <__assert_fail@plt>
   116b4:	ldr	r3, [pc, #216]	; 11794 <test_schema@@Base+0xe54>
   116b8:	mov	r2, #195	; 0xc3
   116bc:	movw	r1, #6488	; 0x1958
   116c0:	movt	r1, #1
   116c4:	movw	r0, #6624	; 0x19e0
   116c8:	movt	r0, #1
   116cc:	bl	10844 <__assert_fail@plt>
   116d0:	ldr	r3, [pc, #192]	; 11798 <test_schema@@Base+0xe58>
   116d4:	mov	r2, #201	; 0xc9
   116d8:	movw	r1, #6488	; 0x1958
   116dc:	movt	r1, #1
   116e0:	movw	r0, #6624	; 0x19e0
   116e4:	movt	r0, #1
   116e8:	bl	10844 <__assert_fail@plt>
   116ec:	ldr	r3, [pc, #168]	; 1179c <test_schema@@Base+0xe5c>
   116f0:	mov	r2, #147	; 0x93
   116f4:	movw	r1, #6488	; 0x1958
   116f8:	movt	r1, #1
   116fc:	movw	r0, #6584	; 0x19b8
   11700:	movt	r0, #1
   11704:	bl	10844 <__assert_fail@plt>
   11708:	movw	r0, #7064	; 0x1b98
   1170c:	movt	r0, #1
   11710:	bl	107e4 <puts@plt>
   11714:	mvn	r4, #0
   11718:	b	11654 <test_schema@@Base+0xd14>
   1171c:	movw	r0, #7104	; 0x1bc0
   11720:	movt	r0, #1
   11724:	bl	107e4 <puts@plt>
   11728:	mvn	r4, #0
   1172c:	b	11654 <test_schema@@Base+0xd14>
   11730:	mvn	r3, #0
   11734:	b	1164c <test_schema@@Base+0xd0c>
   11738:	mvn	r3, #0
   1173c:	b	1164c <test_schema@@Base+0xd0c>
   11740:	movw	r0, #7152	; 0x1bf0
   11744:	movt	r0, #1
   11748:	bl	107e4 <puts@plt>
   1174c:	mvn	r4, #0
   11750:	b	11654 <test_schema@@Base+0xd14>
   11754:	mov	fp, #0
   11758:	mov	r0, r6
   1175c:	bl	10820 <fclose@plt>
   11760:	cmp	fp, #0
   11764:	beq	11770 <test_schema@@Base+0xe30>
   11768:	mov	r0, fp
   1176c:	bl	107a8 <free@plt>
   11770:	movw	r0, #7192	; 0x1c18
   11774:	movt	r0, #1
   11778:	bl	107e4 <puts@plt>
   1177c:	mvn	r4, #0
   11780:	b	1165c <test_schema@@Base+0xd1c>
   11784:	andeq	r1, r1, r0, lsr #17
   11788:			; <UNDEFINED> instruction: 0x000118b8
   1178c:	ldrdeq	r1, [r1], -r4
   11790:	strdeq	r1, [r1], -r0
   11794:	andeq	r1, r1, r8, lsl #18
   11798:	andeq	r1, r1, r0, lsr #18
   1179c:	andeq	r1, r1, r8, lsr r9

000117a0 <main@@Base>:
   117a0:	str	r4, [sp, #-8]!
   117a4:	str	lr, [sp, #4]
   117a8:	sub	r3, r0, #1
   117ac:	cmp	r3, #1
   117b0:	bhi	117d8 <main@@Base+0x38>
   117b4:	cmp	r0, #2
   117b8:	beq	11800 <main@@Base+0x60>
   117bc:	movw	r3, #8284	; 0x205c
   117c0:	movt	r3, #2
   117c4:	ldr	r0, [r3]
   117c8:	bl	10940 <test_schema@@Base>
   117cc:	ldr	r4, [sp]
   117d0:	add	sp, sp, #4
   117d4:	pop	{pc}		; (ldr pc, [sp], #4)
   117d8:	movw	r3, #8288	; 0x2060
   117dc:	movt	r3, #2
   117e0:	ldr	r3, [r3]
   117e4:	mov	r2, #64	; 0x40
   117e8:	mov	r1, #1
   117ec:	movw	r0, #7224	; 0x1c38
   117f0:	movt	r0, #1
   117f4:	bl	107cc <fwrite@plt>
   117f8:	mov	r0, #1
   117fc:	bl	10814 <exit@plt>
   11800:	movw	r3, #8284	; 0x205c
   11804:	movt	r3, #2
   11808:	ldr	r2, [r1, #4]
   1180c:	str	r2, [r3]
   11810:	b	117bc <main@@Base+0x1c>

00011814 <__libc_csu_init@@Base>:
   11814:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11818:	mov	r7, r0
   1181c:	ldr	r6, [pc, #72]	; 1186c <__libc_csu_init@@Base+0x58>
   11820:	ldr	r5, [pc, #72]	; 11870 <__libc_csu_init@@Base+0x5c>
   11824:	add	r6, pc, r6
   11828:	add	r5, pc, r5
   1182c:	sub	r6, r6, r5
   11830:	mov	r8, r1
   11834:	mov	r9, r2
   11838:	bl	10764 <strcmp@plt-0x20>
   1183c:	asrs	r6, r6, #2
   11840:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11844:	mov	r4, #0
   11848:	add	r4, r4, #1
   1184c:	ldr	r3, [r5], #4
   11850:	mov	r2, r9
   11854:	mov	r1, r8
   11858:	mov	r0, r7
   1185c:	blx	r3
   11860:	cmp	r6, r4
   11864:	bne	11848 <__libc_csu_init@@Base+0x34>
   11868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1186c:	andeq	r0, r1, r8, ror #13
   11870:	andeq	r0, r1, r0, ror #13

00011874 <__libc_csu_fini@@Base>:
   11874:	bx	lr

Disassembly of section .fini:

00011878 <.fini>:
   11878:	push	{r3, lr}
   1187c:	pop	{r3, pc}
