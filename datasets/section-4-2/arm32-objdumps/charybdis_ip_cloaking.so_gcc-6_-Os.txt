
../repos/charybdis/extensions/.libs/ip_cloaking.so:     file format elf32-littlearm


Disassembly of section .init:

00000618 <_init>:
 618:	push	{r3, lr}
 61c:	bl	6f8 <call_weak_fn>
 620:	pop	{r3, pc}

Disassembly of section .plt:

00000624 <.plt>:
 624:	push	{lr}		; (str lr, [sp, #-4]!)
 628:	ldr	lr, [pc, #4]	; 634 <.plt+0x10>
 62c:	add	lr, pc, lr
 630:	ldr	pc, [lr, #8]!
 634:	.word	0x000119cc

00000638 <calloc@plt>:
 638:	add	ip, pc, #0, 12
 63c:	add	ip, ip, #69632	; 0x11000
 640:	ldr	pc, [ip, #2508]!	; 0x9cc

00000644 <raise@plt>:
 644:	add	ip, pc, #0, 12
 648:	add	ip, ip, #69632	; 0x11000
 64c:	ldr	pc, [ip, #2500]!	; 0x9c4

00000650 <strcmp@plt>:
 650:	add	ip, pc, #0, 12
 654:	add	ip, ip, #69632	; 0x11000
 658:	ldr	pc, [ip, #2492]!	; 0x9bc

0000065c <__cxa_finalize@plt>:
 65c:	add	ip, pc, #0, 12
 660:	add	ip, ip, #69632	; 0x11000
 664:	ldr	pc, [ip, #2484]!	; 0x9b4

00000668 <rb_outofmemory@plt>:
 668:	add	ip, pc, #0, 12
 66c:	add	ip, ip, #69632	; 0x11000
 670:	ldr	pc, [ip, #2476]!	; 0x9ac

00000674 <find_umode_slot@plt>:
 674:	add	ip, pc, #0, 12
 678:	add	ip, ip, #69632	; 0x11000
 67c:	ldr	pc, [ip, #2468]!	; 0x9a4

00000680 <fnv_hash@plt>:
 680:	add	ip, pc, #0, 12
 684:	add	ip, ip, #69632	; 0x11000
 688:	ldr	pc, [ip, #2460]!	; 0x99c

0000068c <sendto_server@plt>:
 68c:	add	ip, pc, #0, 12
 690:	add	ip, ip, #69632	; 0x11000
 694:	ldr	pc, [ip, #2452]!	; 0x994

00000698 <__gmon_start__@plt>:
 698:	add	ip, pc, #0, 12
 69c:	add	ip, ip, #69632	; 0x11000
 6a0:	ldr	pc, [ip, #2444]!	; 0x98c

000006a4 <__ctype_b_loc@plt>:
 6a4:	add	ip, pc, #0, 12
 6a8:	add	ip, ip, #69632	; 0x11000
 6ac:	ldr	pc, [ip, #2436]!	; 0x984

000006b0 <sendto_one_numeric@plt>:
 6b0:	add	ip, pc, #0, 12
 6b4:	add	ip, ip, #69632	; 0x11000
 6b8:	ldr	pc, [ip, #2428]!	; 0x97c

000006bc <strchr@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2420]!	; 0x974

000006c8 <change_nick_user_host@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2412]!	; 0x96c

000006d4 <rb_strlcpy@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2404]!	; 0x964

000006e0 <irccmp@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2396]!	; 0x95c

000006ec <construct_umodebuf@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2388]!	; 0x954

Disassembly of section .text:

000006f8 <call_weak_fn>:
     6f8:	ldr	r3, [pc, #20]	; 714 <call_weak_fn+0x1c>
     6fc:	ldr	r2, [pc, #20]	; 718 <call_weak_fn+0x20>
     700:	add	r3, pc, r3
     704:	ldr	r2, [r3, r2]
     708:	cmp	r2, #0
     70c:	bxeq	lr
     710:	b	698 <__gmon_start__@plt>
     714:	.word	0x000118f8
     718:	.word	0x0000005c

0000071c <deregister_tm_clones>:
     71c:	ldr	r3, [pc, #52]	; 758 <deregister_tm_clones+0x3c>
     720:	ldr	r0, [pc, #52]	; 75c <deregister_tm_clones+0x40>
     724:	add	r3, pc, r3
     728:	add	r0, pc, r0
     72c:	add	r3, r3, #3
     730:	sub	r3, r3, r0
     734:	cmp	r3, #6
     738:	ldr	r3, [pc, #32]	; 760 <deregister_tm_clones+0x44>
     73c:	add	r3, pc, r3
     740:	bxls	lr
     744:	ldr	r2, [pc, #24]	; 764 <deregister_tm_clones+0x48>
     748:	ldr	r3, [r3, r2]
     74c:	cmp	r3, #0
     750:	bxeq	lr
     754:	bx	r3
     758:	.word	0x00011994
     75c:	.word	0x00011990
     760:	.word	0x000118bc
     764:	.word	0x00000050

00000768 <register_tm_clones>:
     768:	ldr	r1, [pc, #56]	; 7a8 <register_tm_clones+0x40>
     76c:	ldr	r0, [pc, #56]	; 7ac <register_tm_clones+0x44>
     770:	add	r1, pc, r1
     774:	add	r0, pc, r0
     778:	sub	r1, r1, r0
     77c:	ldr	r3, [pc, #44]	; 7b0 <register_tm_clones+0x48>
     780:	asr	r1, r1, #2
     784:	add	r3, pc, r3
     788:	add	r1, r1, r1, lsr #31
     78c:	asrs	r1, r1, #1
     790:	bxeq	lr
     794:	ldr	r2, [pc, #24]	; 7b4 <register_tm_clones+0x4c>
     798:	ldr	r3, [r3, r2]
     79c:	cmp	r3, #0
     7a0:	bxeq	lr
     7a4:	bx	r3
     7a8:	.word	0x00011948
     7ac:	.word	0x00011944
     7b0:	.word	0x00011874
     7b4:	.word	0x00000068

000007b8 <__do_global_dtors_aux>:
     7b8:	ldr	r3, [pc, #76]	; 80c <__do_global_dtors_aux+0x54>
     7bc:	ldr	r2, [pc, #76]	; 810 <__do_global_dtors_aux+0x58>
     7c0:	add	r3, pc, r3
     7c4:	add	r2, pc, r2
     7c8:	ldrb	r3, [r3]
     7cc:	cmp	r3, #0
     7d0:	bxne	lr
     7d4:	ldr	r3, [pc, #56]	; 814 <__do_global_dtors_aux+0x5c>
     7d8:	push	{r4, lr}
     7dc:	ldr	r3, [r2, r3]
     7e0:	cmp	r3, #0
     7e4:	beq	7f4 <__do_global_dtors_aux+0x3c>
     7e8:	ldr	r3, [pc, #40]	; 818 <__do_global_dtors_aux+0x60>
     7ec:	ldr	r0, [pc, r3]
     7f0:	bl	65c <__cxa_finalize@plt>
     7f4:	bl	71c <deregister_tm_clones>
     7f8:	ldr	r3, [pc, #28]	; 81c <__do_global_dtors_aux+0x64>
     7fc:	mov	r2, #1
     800:	add	r3, pc, r3
     804:	strb	r2, [r3]
     808:	pop	{r4, pc}
     80c:	.word	0x000118f8
     810:	.word	0x00011834
     814:	.word	0x0000004c
     818:	.word	0x0001187c
     81c:	.word	0x000118b8

00000820 <frame_dummy>:
     820:	ldr	r0, [pc, #56]	; 860 <frame_dummy+0x40>
     824:	ldr	r3, [pc, #56]	; 864 <frame_dummy+0x44>
     828:	add	r0, pc, r0
     82c:	ldr	r2, [r0]
     830:	add	r3, pc, r3
     834:	cmp	r2, #0
     838:	bne	840 <frame_dummy+0x20>
     83c:	b	768 <register_tm_clones>
     840:	ldr	r2, [pc, #32]	; 868 <frame_dummy+0x48>
     844:	ldr	r3, [r3, r2]
     848:	cmp	r3, #0
     84c:	beq	83c <frame_dummy+0x1c>
     850:	push	{r4, lr}
     854:	blx	r3
     858:	pop	{r4, lr}
     85c:	b	768 <register_tm_clones>
     860:	.word	0x000116cc
     864:	.word	0x000117c8
     868:	.word	0x00000064

0000086c <distribute_hostchange>:
     86c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
     870:	add	r7, r0, #227	; 0xe3
     874:	ldr	r5, [pc, #308]	; 9b0 <distribute_hostchange+0x144>
     878:	cmp	r7, r1
     87c:	add	r5, pc, r5
     880:	mov	r4, r0
     884:	mov	r6, r1
     888:	beq	9a0 <distribute_hostchange+0x134>
     88c:	ldr	r2, [pc, #288]	; 9b4 <distribute_hostchange+0x148>
     890:	mov	r3, r1
     894:	add	r2, pc, r2
     898:	mov	r1, #396	; 0x18c
     89c:	bl	6b0 <sendto_one_numeric@plt>
     8a0:	ldr	r3, [pc, #272]	; 9b8 <distribute_hostchange+0x14c>
     8a4:	ldrb	r1, [r4, #396]	; 0x18c
     8a8:	add	r8, r4, #88	; 0x58
     8ac:	ldr	r9, [r5, r3]
     8b0:	ldr	r3, [pc, #260]	; 9bc <distribute_hostchange+0x150>
     8b4:	ldr	sl, [r5, r3]
     8b8:	ldr	r3, [r9]
     8bc:	ldr	r2, [sl]
     8c0:	orr	r2, r3, r2
     8c4:	ldr	r3, [pc, #244]	; 9c0 <distribute_hostchange+0x154>
     8c8:	ldr	r5, [r5, r3]
     8cc:	ldrb	r3, [r5, #396]	; 0x18c
     8d0:	str	r6, [sp, #12]
     8d4:	cmp	r3, #0
     8d8:	addeq	r3, r5, #88	; 0x58
     8dc:	addne	r3, r5, #396	; 0x18c
     8e0:	str	r3, [sp, #4]
     8e4:	ldr	r3, [pc, #216]	; 9c4 <distribute_hostchange+0x158>
     8e8:	cmp	r1, #0
     8ec:	add	r3, pc, r3
     8f0:	addne	r1, r4, #396	; 0x18c
     8f4:	moveq	r1, r8
     8f8:	str	r3, [sp]
     8fc:	mov	r3, #0
     900:	str	r1, [sp, #8]
     904:	mov	r0, r3
     908:	mov	r1, r3
     90c:	bl	68c <sendto_server@plt>
     910:	ldrb	r1, [r5, #396]	; 0x18c
     914:	ldr	r2, [sl]
     918:	ldr	r3, [r9]
     91c:	cmp	r1, #0
     920:	ldrb	r1, [r4, #396]	; 0x18c
     924:	addeq	r5, r5, #88	; 0x58
     928:	addne	r5, r5, #396	; 0x18c
     92c:	cmp	r1, #0
     930:	addne	r1, r4, #396	; 0x18c
     934:	moveq	r1, r8
     938:	str	r1, [sp, #8]
     93c:	ldr	r1, [pc, #132]	; 9c8 <distribute_hostchange+0x15c>
     940:	str	r6, [sp, #12]
     944:	add	r1, pc, r1
     948:	str	r1, [sp]
     94c:	mov	r1, #0
     950:	mov	r0, r1
     954:	str	r5, [sp, #4]
     958:	bl	68c <sendto_server@plt>
     95c:	ldr	r3, [pc, #104]	; 9cc <distribute_hostchange+0x160>
     960:	add	r2, r4, #152	; 0x98
     964:	add	r3, pc, r3
     968:	str	r3, [sp, #4]
     96c:	mov	r3, #0
     970:	str	r3, [sp]
     974:	mov	r1, r8
     978:	mov	r3, r6
     97c:	mov	r0, r4
     980:	bl	6c8 <change_nick_user_host@plt>
     984:	ldrd	r2, [r4, #64]	; 0x40
     988:	cmp	r7, r6
     98c:	orrne	r2, r2, #131072	; 0x20000
     990:	biceq	r2, r2, #131072	; 0x20000
     994:	strd	r2, [r4, #64]	; 0x40
     998:	add	sp, sp, #16
     99c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     9a0:	ldr	r2, [pc, #40]	; 9d0 <distribute_hostchange+0x164>
     9a4:	mov	r3, r7
     9a8:	add	r2, pc, r2
     9ac:	b	898 <distribute_hostchange+0x2c>
     9b0:	.word	0x0001177c
     9b4:	.word	0x00000842
     9b8:	.word	0x00000060
     9bc:	.word	0x00000054
     9c0:	.word	0x0000006c
     9c4:	.word	0x00000819
     9c8:	.word	0x000007d4
     9cc:	.word	0x000007cf
     9d0:	.word	0x0000074a

000009d4 <check_umode_change>:
     9d4:	push	{r4, r5, r6, r7, r8, lr}
     9d8:	mov	r7, #0
     9dc:	ldr	r4, [r0]
     9e0:	ldr	r1, [pc, #252]	; ae4 <check_umode_change+0x110>
     9e4:	ldrd	r2, [r4, #64]	; 0x40
     9e8:	add	r1, pc, r1
     9ec:	and	r6, r2, #8192	; 0x2000
     9f0:	orrs	ip, r6, r7
     9f4:	popeq	{r4, r5, r6, r7, r8, pc}
     9f8:	ldrh	ip, [r4, #80]	; 0x50
     9fc:	cmp	ip, #64	; 0x40
     a00:	popne	{r4, r5, r6, r7, r8, pc}
     a04:	ldr	ip, [pc, #220]	; ae8 <check_umode_change+0x114>
     a08:	ldr	r5, [r4, #56]	; 0x38
     a0c:	ldr	r1, [r1, ip]
     a10:	ldr	r8, [r1, #416]	; 0x1a0
     a14:	ldr	r1, [r0, #4]
     a18:	eor	r1, r1, r5
     a1c:	tst	r1, r8
     a20:	popeq	{r4, r5, r6, r7, r8, pc}
     a24:	tst	r5, r8
     a28:	beq	ab4 <check_umode_change+0xe0>
     a2c:	and	r0, r2, #16777216	; 0x1000000
     a30:	mov	r1, #0
     a34:	orrs	r1, r0, r1
     a38:	bne	a74 <check_umode_change+0xa0>
     a3c:	ldr	r1, [r4, #432]	; 0x1b0
     a40:	ldr	r6, [r1, #432]	; 0x1b0
     a44:	cmp	r6, #0
     a48:	beq	a74 <check_umode_change+0xa0>
     a4c:	and	r2, r2, #131072	; 0x20000
     a50:	mov	r3, #0
     a54:	orrs	r3, r2, r3
     a58:	add	r7, r4, #163	; 0xa3
     a5c:	beq	a80 <check_umode_change+0xac>
     a60:	mov	r1, r6
     a64:	mov	r0, r7
     a68:	bl	650 <strcmp@plt>
     a6c:	cmp	r0, #0
     a70:	beq	a80 <check_umode_change+0xac>
     a74:	bic	r5, r5, r8
     a78:	str	r5, [r4, #56]	; 0x38
     a7c:	pop	{r4, r5, r6, r7, r8, pc}
     a80:	mov	r1, r6
     a84:	mov	r0, r7
     a88:	bl	650 <strcmp@plt>
     a8c:	cmp	r0, #0
     a90:	movne	r1, r6
     a94:	bne	ad8 <check_umode_change+0x104>
     a98:	ldr	r2, [pc, #76]	; aec <check_umode_change+0x118>
     a9c:	mov	r3, r7
     aa0:	mov	r0, r4
     aa4:	add	r2, pc, r2
     aa8:	mov	r1, #396	; 0x18c
     aac:	pop	{r4, r5, r6, r7, r8, lr}
     ab0:	b	6b0 <sendto_one_numeric@plt>
     ab4:	ldr	r3, [r4, #432]	; 0x1b0
     ab8:	ldr	r1, [r3, #432]	; 0x1b0
     abc:	cmp	r1, #0
     ac0:	popeq	{r4, r5, r6, r7, r8, pc}
     ac4:	add	r0, r4, #163	; 0xa3
     ac8:	bl	650 <strcmp@plt>
     acc:	cmp	r0, #0
     ad0:	popne	{r4, r5, r6, r7, r8, pc}
     ad4:	add	r1, r4, #227	; 0xe3
     ad8:	mov	r0, r4
     adc:	pop	{r4, r5, r6, r7, r8, lr}
     ae0:	b	86c <distribute_hostchange>
     ae4:	.word	0x00011610
     ae8:	.word	0x00000058
     aec:	.word	0x00000632

00000af0 <_moddeinit>:
     af0:	ldr	r3, [pc, #20]	; b0c <_moddeinit+0x1c>
     af4:	ldr	r2, [pc, #20]	; b10 <_moddeinit+0x20>
     af8:	add	r3, pc, r3
     afc:	ldr	r3, [r3, r2]
     b00:	mov	r2, #0
     b04:	str	r2, [r3, #416]	; 0x1a0
     b08:	b	6ec <construct_umodebuf@plt>
     b0c:	.word	0x00011500
     b10:	.word	0x00000058

00000b14 <_modinit>:
     b14:	push	{r4, lr}
     b18:	bl	674 <find_umode_slot@plt>
     b1c:	ldr	r4, [pc, #24]	; b3c <_modinit+0x28>
     b20:	ldr	r3, [pc, #24]	; b40 <_modinit+0x2c>
     b24:	add	r4, pc, r4
     b28:	ldr	r3, [r4, r3]
     b2c:	str	r0, [r3, #416]	; 0x1a0
     b30:	bl	6ec <construct_umodebuf@plt>
     b34:	mov	r0, #0
     b38:	pop	{r4, pc}
     b3c:	.word	0x000114d4
     b40:	.word	0x00000058

00000b44 <check_new_user>:
     b44:	ldrd	r2, [r0, #64]	; 0x40
     b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     b4c:	mov	r3, #0
     b50:	ldr	r7, [pc, #808]	; e80 <check_new_user+0x33c>
     b54:	and	r2, r2, #16777216	; 0x1000000
     b58:	orrs	r3, r2, r3
     b5c:	add	r7, pc, r7
     b60:	sub	sp, sp, #44	; 0x2c
     b64:	beq	b88 <check_new_user+0x44>
     b68:	ldr	r3, [pc, #788]	; e84 <check_new_user+0x340>
     b6c:	ldr	r3, [r7, r3]
     b70:	ldr	r2, [r3, #416]	; 0x1a0
     b74:	ldr	r3, [r0, #56]	; 0x38
     b78:	bic	r3, r3, r2
     b7c:	str	r3, [r0, #56]	; 0x38
     b80:	add	sp, sp, #44	; 0x2c
     b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b88:	ldr	r5, [r0, #432]	; 0x1b0
     b8c:	mov	r4, r0
     b90:	mov	r1, #64	; 0x40
     b94:	mov	r0, #1
     b98:	bl	638 <calloc@plt>
     b9c:	cmp	r0, #0
     ba0:	bne	ba8 <check_new_user+0x64>
     ba4:	bl	668 <rb_outofmemory@plt>
     ba8:	add	r6, r4, #227	; 0xe3
     bac:	add	r1, r4, #288	; 0x120
     bb0:	str	r0, [r5, #432]	; 0x1b0
     bb4:	add	r1, r1, #3
     bb8:	mov	r0, r6
     bbc:	bl	6e0 <irccmp@plt>
     bc0:	ldr	r2, [r4, #432]	; 0x1b0
     bc4:	add	r3, sp, #12
     bc8:	ldr	r5, [r2, #432]	; 0x1b0
     bcc:	subs	r8, r0, #0
     bd0:	bne	d78 <check_new_user+0x234>
     bd4:	ldr	r2, [pc, #684]	; e88 <check_new_user+0x344>
     bd8:	add	r2, pc, r2
     bdc:	add	lr, r2, #16
     be0:	ldr	r0, [r2]
     be4:	ldr	r1, [r2, #4]
     be8:	mov	ip, r3
     bec:	add	r2, r2, #8
     bf0:	cmp	r2, lr
     bf4:	stmia	ip!, {r0, r1}
     bf8:	mov	r3, ip
     bfc:	bne	be0 <check_new_user+0x9c>
     c00:	ldr	r0, [r2]
     c04:	ldrb	r2, [r2, #4]
     c08:	str	r0, [ip]
     c0c:	mov	r1, #32
     c10:	strb	r2, [ip, #4]
     c14:	mov	r0, r6
     c18:	bl	680 <fnv_hash@plt>
     c1c:	mov	r2, #64	; 0x40
     c20:	mov	r1, r6
     c24:	mov	fp, r0
     c28:	mov	r0, r5
     c2c:	bl	6d4 <rb_strlcpy@plt>
     c30:	mov	r1, #58	; 0x3a
     c34:	mov	r0, r5
     c38:	bl	6bc <strchr@plt>
     c3c:	cmp	r0, #0
     c40:	subne	r2, r5, #1
     c44:	movne	r9, r8
     c48:	bne	c74 <check_new_user+0x130>
     c4c:	mov	r1, #46	; 0x2e
     c50:	mov	r0, r5
     c54:	bl	6bc <strchr@plt>
     c58:	cmp	r0, #0
     c5c:	beq	ca0 <check_new_user+0x15c>
     c60:	mov	sl, r8
     c64:	mov	r9, r8
     c68:	b	c84 <check_new_user+0x140>
     c6c:	cmp	r3, #58	; 0x3a
     c70:	addeq	r9, r9, #1
     c74:	ldrb	r3, [r2, #1]!
     c78:	cmp	r3, #0
     c7c:	bne	c6c <check_new_user+0x128>
     c80:	mov	sl, #1
     c84:	eor	r3, sl, #1
     c88:	asr	r9, r9, #1
     c8c:	and	r3, r3, #1
     c90:	mov	r2, #20
     c94:	ldrb	r0, [r5]
     c98:	cmp	r0, #0
     c9c:	bne	d10 <check_new_user+0x1cc>
     ca0:	ldrd	r2, [r4, #64]	; 0x40
     ca4:	mov	r3, #0
     ca8:	and	r2, r2, #131072	; 0x20000
     cac:	orrs	r3, r2, r3
     cb0:	ldr	r3, [pc, #460]	; e84 <check_new_user+0x340>
     cb4:	ldr	r2, [r7, r3]
     cb8:	ldrne	r3, [r4, #56]	; 0x38
     cbc:	ldrne	r1, [r2, #416]	; 0x1a0
     cc0:	bicne	r3, r3, r1
     cc4:	strne	r3, [r4, #56]	; 0x38
     cc8:	ldr	r1, [r4, #56]	; 0x38
     ccc:	ldr	r3, [r2, #416]	; 0x1a0
     cd0:	tst	r1, r3
     cd4:	beq	b80 <check_new_user+0x3c>
     cd8:	ldr	r3, [r4, #432]	; 0x1b0
     cdc:	add	r5, r4, #163	; 0xa3
     ce0:	mov	r2, #64	; 0x40
     ce4:	ldr	r1, [r3, #432]	; 0x1b0
     ce8:	mov	r0, r5
     cec:	bl	6d4 <rb_strlcpy@plt>
     cf0:	mov	r1, r6
     cf4:	mov	r0, r5
     cf8:	bl	6e0 <irccmp@plt>
     cfc:	cmp	r0, #0
     d00:	ldrdne	r2, [r4, #64]	; 0x40
     d04:	orrne	r2, r2, #131072	; 0x20000
     d08:	strdne	r2, [r4, #64]	; 0x40
     d0c:	b	b80 <check_new_user+0x3c>
     d10:	cmp	r0, #46	; 0x2e
     d14:	cmpne	r0, #58	; 0x3a
     d18:	addeq	r8, r8, #1
     d1c:	beq	d70 <check_new_user+0x22c>
     d20:	cmp	sl, #0
     d24:	beq	d30 <check_new_user+0x1ec>
     d28:	cmp	r8, r9
     d2c:	blt	d70 <check_new_user+0x22c>
     d30:	cmp	r8, #1
     d34:	movgt	r1, #0
     d38:	andle	r1, r3, #1
     d3c:	cmp	r1, #0
     d40:	bne	d70 <check_new_user+0x22c>
     d44:	mov	r1, r2
     d48:	add	r0, r0, fp
     d4c:	str	r3, [sp, #4]
     d50:	str	r2, [sp]
     d54:	bl	107c <__aeabi_uidivmod>
     d58:	add	r3, sp, #40	; 0x28
     d5c:	ror	fp, fp, #31
     d60:	add	r1, r3, r1
     d64:	ldm	sp, {r2, r3}
     d68:	ldrb	r1, [r1, #-28]	; 0xffffffe4
     d6c:	strb	r1, [r5]
     d70:	add	r5, r5, #1
     d74:	b	c94 <check_new_user+0x150>
     d78:	ldr	r2, [pc, #268]	; e8c <check_new_user+0x348>
     d7c:	add	r2, pc, r2
     d80:	add	lr, r2, #24
     d84:	ldr	r0, [r2]
     d88:	ldr	r1, [r2, #4]
     d8c:	mov	ip, r3
     d90:	add	r2, r2, #8
     d94:	cmp	r2, lr
     d98:	stmia	ip!, {r0, r1}
     d9c:	mov	r3, ip
     da0:	bne	d84 <check_new_user+0x240>
     da4:	ldrh	r1, [r2]
     da8:	ldrb	r2, [r2, #2]
     dac:	mov	r0, r6
     db0:	strh	r1, [ip]
     db4:	strb	r2, [ip, #2]
     db8:	mov	r1, #32
     dbc:	bl	680 <fnv_hash@plt>
     dc0:	mov	r2, #64	; 0x40
     dc4:	mov	r1, r6
     dc8:	mov	fp, r5
     dcc:	mov	sl, #26
     dd0:	mov	r8, r0
     dd4:	mov	r0, r5
     dd8:	bl	6d4 <rb_strlcpy@plt>
     ddc:	ldrb	r9, [fp]
     de0:	cmp	r9, #0
     de4:	cmpne	r9, #46	; 0x2e
     de8:	bne	e34 <check_new_user+0x2f0>
     dec:	mov	sl, #10
     df0:	ldrb	r9, [r5]
     df4:	cmp	r9, #0
     df8:	beq	ca0 <check_new_user+0x15c>
     dfc:	bl	6a4 <__ctype_b_loc@plt>
     e00:	lsl	r3, r9, #1
     e04:	ldr	r2, [r0]
     e08:	ldrh	r3, [r2, r3]
     e0c:	tst	r3, #2048	; 0x800
     e10:	beq	e28 <check_new_user+0x2e4>
     e14:	mov	r1, sl
     e18:	add	r0, r9, r8
     e1c:	bl	107c <__aeabi_uidivmod>
     e20:	add	r1, r1, #48	; 0x30
     e24:	strb	r1, [r5]
     e28:	ror	r8, r8, #31
     e2c:	add	r5, r5, #1
     e30:	b	df0 <check_new_user+0x2ac>
     e34:	bl	6a4 <__ctype_b_loc@plt>
     e38:	lsl	r3, r9, #1
     e3c:	ldr	r2, [r0]
     e40:	ldrh	r3, [r2, r3]
     e44:	lsr	r3, r3, #11
     e48:	cmp	r9, #45	; 0x2d
     e4c:	orreq	r3, r3, #1
     e50:	tst	r3, #1
     e54:	bne	e78 <check_new_user+0x334>
     e58:	add	r0, r9, r8
     e5c:	mov	r1, sl
     e60:	bl	107c <__aeabi_uidivmod>
     e64:	add	r3, sp, #40	; 0x28
     e68:	ror	r8, r8, #31
     e6c:	add	r1, r3, r1
     e70:	ldrb	r3, [r1, #-28]	; 0xffffffe4
     e74:	strb	r3, [fp]
     e78:	add	fp, fp, #1
     e7c:	b	ddc <check_new_user+0x298>
     e80:	.word	0x0001149c
     e84:	.word	0x00000058
     e88:	.word	0x0000056f
     e8c:	.word	0x000003c5

00000e90 <__udivsi3>:
     e90:	subs	r2, r1, #1
     e94:	bxeq	lr
     e98:	bcc	1070 <__udivsi3+0x1e0>
     e9c:	cmp	r0, r1
     ea0:	bls	1054 <__udivsi3+0x1c4>
     ea4:	tst	r1, r2
     ea8:	beq	1060 <__udivsi3+0x1d0>
     eac:	clz	r3, r0
     eb0:	clz	r2, r1
     eb4:	sub	r3, r2, r3
     eb8:	rsbs	r3, r3, #31
     ebc:	addne	r3, r3, r3, lsl #1
     ec0:	mov	r2, #0
     ec4:	addne	pc, pc, r3, lsl #2
     ec8:	nop			; (mov r0, r0)
     ecc:	cmp	r0, r1, lsl #31
     ed0:	adc	r2, r2, r2
     ed4:	subcs	r0, r0, r1, lsl #31
     ed8:	cmp	r0, r1, lsl #30
     edc:	adc	r2, r2, r2
     ee0:	subcs	r0, r0, r1, lsl #30
     ee4:	cmp	r0, r1, lsl #29
     ee8:	adc	r2, r2, r2
     eec:	subcs	r0, r0, r1, lsl #29
     ef0:	cmp	r0, r1, lsl #28
     ef4:	adc	r2, r2, r2
     ef8:	subcs	r0, r0, r1, lsl #28
     efc:	cmp	r0, r1, lsl #27
     f00:	adc	r2, r2, r2
     f04:	subcs	r0, r0, r1, lsl #27
     f08:	cmp	r0, r1, lsl #26
     f0c:	adc	r2, r2, r2
     f10:	subcs	r0, r0, r1, lsl #26
     f14:	cmp	r0, r1, lsl #25
     f18:	adc	r2, r2, r2
     f1c:	subcs	r0, r0, r1, lsl #25
     f20:	cmp	r0, r1, lsl #24
     f24:	adc	r2, r2, r2
     f28:	subcs	r0, r0, r1, lsl #24
     f2c:	cmp	r0, r1, lsl #23
     f30:	adc	r2, r2, r2
     f34:	subcs	r0, r0, r1, lsl #23
     f38:	cmp	r0, r1, lsl #22
     f3c:	adc	r2, r2, r2
     f40:	subcs	r0, r0, r1, lsl #22
     f44:	cmp	r0, r1, lsl #21
     f48:	adc	r2, r2, r2
     f4c:	subcs	r0, r0, r1, lsl #21
     f50:	cmp	r0, r1, lsl #20
     f54:	adc	r2, r2, r2
     f58:	subcs	r0, r0, r1, lsl #20
     f5c:	cmp	r0, r1, lsl #19
     f60:	adc	r2, r2, r2
     f64:	subcs	r0, r0, r1, lsl #19
     f68:	cmp	r0, r1, lsl #18
     f6c:	adc	r2, r2, r2
     f70:	subcs	r0, r0, r1, lsl #18
     f74:	cmp	r0, r1, lsl #17
     f78:	adc	r2, r2, r2
     f7c:	subcs	r0, r0, r1, lsl #17
     f80:	cmp	r0, r1, lsl #16
     f84:	adc	r2, r2, r2
     f88:	subcs	r0, r0, r1, lsl #16
     f8c:	cmp	r0, r1, lsl #15
     f90:	adc	r2, r2, r2
     f94:	subcs	r0, r0, r1, lsl #15
     f98:	cmp	r0, r1, lsl #14
     f9c:	adc	r2, r2, r2
     fa0:	subcs	r0, r0, r1, lsl #14
     fa4:	cmp	r0, r1, lsl #13
     fa8:	adc	r2, r2, r2
     fac:	subcs	r0, r0, r1, lsl #13
     fb0:	cmp	r0, r1, lsl #12
     fb4:	adc	r2, r2, r2
     fb8:	subcs	r0, r0, r1, lsl #12
     fbc:	cmp	r0, r1, lsl #11
     fc0:	adc	r2, r2, r2
     fc4:	subcs	r0, r0, r1, lsl #11
     fc8:	cmp	r0, r1, lsl #10
     fcc:	adc	r2, r2, r2
     fd0:	subcs	r0, r0, r1, lsl #10
     fd4:	cmp	r0, r1, lsl #9
     fd8:	adc	r2, r2, r2
     fdc:	subcs	r0, r0, r1, lsl #9
     fe0:	cmp	r0, r1, lsl #8
     fe4:	adc	r2, r2, r2
     fe8:	subcs	r0, r0, r1, lsl #8
     fec:	cmp	r0, r1, lsl #7
     ff0:	adc	r2, r2, r2
     ff4:	subcs	r0, r0, r1, lsl #7
     ff8:	cmp	r0, r1, lsl #6
     ffc:	adc	r2, r2, r2
    1000:	subcs	r0, r0, r1, lsl #6
    1004:	cmp	r0, r1, lsl #5
    1008:	adc	r2, r2, r2
    100c:	subcs	r0, r0, r1, lsl #5
    1010:	cmp	r0, r1, lsl #4
    1014:	adc	r2, r2, r2
    1018:	subcs	r0, r0, r1, lsl #4
    101c:	cmp	r0, r1, lsl #3
    1020:	adc	r2, r2, r2
    1024:	subcs	r0, r0, r1, lsl #3
    1028:	cmp	r0, r1, lsl #2
    102c:	adc	r2, r2, r2
    1030:	subcs	r0, r0, r1, lsl #2
    1034:	cmp	r0, r1, lsl #1
    1038:	adc	r2, r2, r2
    103c:	subcs	r0, r0, r1, lsl #1
    1040:	cmp	r0, r1
    1044:	adc	r2, r2, r2
    1048:	subcs	r0, r0, r1
    104c:	mov	r0, r2
    1050:	bx	lr
    1054:	moveq	r0, #1
    1058:	movne	r0, #0
    105c:	bx	lr
    1060:	clz	r2, r1
    1064:	rsb	r2, r2, #31
    1068:	lsr	r0, r0, r2
    106c:	bx	lr
    1070:	cmp	r0, #0
    1074:	mvnne	r0, #0
    1078:	b	109c <__aeabi_idiv0>

0000107c <__aeabi_uidivmod>:
    107c:	cmp	r1, #0
    1080:	beq	1070 <__udivsi3+0x1e0>
    1084:	push	{r0, r1, lr}
    1088:	bl	e90 <__udivsi3>
    108c:	pop	{r1, r2, lr}
    1090:	mul	r3, r2, r0
    1094:	sub	r1, r1, r3
    1098:	bx	lr

0000109c <__aeabi_idiv0>:
    109c:	push	{r1, lr}
    10a0:	mov	r0, #8
    10a4:	bl	644 <raise@plt>
    10a8:	pop	{r1, pc}

Disassembly of section .fini:

000010ac <_fini>:
    10ac:	push	{r3, lr}
    10b0:	pop	{r3, pc}
