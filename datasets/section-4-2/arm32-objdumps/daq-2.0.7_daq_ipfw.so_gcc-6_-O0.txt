
../repos/daq-2.0.7/os-daq-modules/.libs/daq_ipfw.so:     file format elf32-littlearm


Disassembly of section .init:

00000680 <_init>:
 680:	push	{r3, lr}
 684:	bl	7b4 <call_weak_fn>
 688:	pop	{r3, pc}

Disassembly of section .plt:

0000068c <.plt>:
 68c:	push	{lr}		; (str lr, [sp, #-4]!)
 690:	ldr	lr, [pc, #4]	; 69c <.plt+0x10>
 694:	add	lr, pc, lr
 698:	ldr	pc, [lr, #8]!
 69c:	.word	0x00011964

000006a0 <calloc@plt>:
 6a0:	add	ip, pc, #0, 12
 6a4:	add	ip, ip, #69632	; 0x11000
 6a8:	ldr	pc, [ip, #2404]!	; 0x964

000006ac <strcmp@plt>:
 6ac:	add	ip, pc, #0, 12
 6b0:	add	ip, ip, #69632	; 0x11000
 6b4:	ldr	pc, [ip, #2396]!	; 0x95c

000006b8 <__cxa_finalize@plt>:
 6b8:	add	ip, pc, #0, 12
 6bc:	add	ip, ip, #69632	; 0x11000
 6c0:	ldr	pc, [ip, #2388]!	; 0x954

000006c4 <strtol@plt>:
 6c4:	add	ip, pc, #0, 12
 6c8:	add	ip, ip, #69632	; 0x11000
 6cc:	ldr	pc, [ip, #2380]!	; 0x94c

000006d0 <free@plt>:
 6d0:	add	ip, pc, #0, 12
 6d4:	add	ip, ip, #69632	; 0x11000
 6d8:	ldr	pc, [ip, #2372]!	; 0x944

000006dc <memcpy@plt>:
 6dc:	add	ip, pc, #0, 12
 6e0:	add	ip, ip, #69632	; 0x11000
 6e4:	ldr	pc, [ip, #2364]!	; 0x93c

000006e8 <select@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2356]!	; 0x934

000006f4 <recvfrom@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2348]!	; 0x92c

00000700 <strdup@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2340]!	; 0x924

0000070c <htons@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2332]!	; 0x91c

00000718 <gettimeofday@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2324]!	; 0x914

00000724 <malloc@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2316]!	; 0x90c

00000730 <sfbpf_compile@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2308]!	; 0x904

0000073c <strerror@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2300]!	; 0x8fc

00000748 <__gmon_start__@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2292]!	; 0x8f4

00000754 <__errno_location@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2284]!	; 0x8ec

00000760 <snprintf@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2276]!	; 0x8e4

0000076c <bind@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2268]!	; 0x8dc

00000778 <memset@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2260]!	; 0x8d4

00000784 <sendto@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2252]!	; 0x8cc

00000790 <sfbpf_filter@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2244]!	; 0x8c4

0000079c <socket@plt>:
 79c:	add	ip, pc, #0, 12
 7a0:	add	ip, ip, #69632	; 0x11000
 7a4:	ldr	pc, [ip, #2236]!	; 0x8bc

000007a8 <close@plt>:
 7a8:	add	ip, pc, #0, 12
 7ac:	add	ip, ip, #69632	; 0x11000
 7b0:	ldr	pc, [ip, #2228]!	; 0x8b4

Disassembly of section .text:

000007b4 <call_weak_fn>:
     7b4:	ldr	r3, [pc, #20]	; 7d0 <call_weak_fn+0x1c>
     7b8:	ldr	r2, [pc, #20]	; 7d4 <call_weak_fn+0x20>
     7bc:	add	r3, pc, r3
     7c0:	ldr	r2, [r3, r2]
     7c4:	cmp	r2, #0
     7c8:	bxeq	lr
     7cc:	b	748 <__gmon_start__@plt>
     7d0:	.word	0x0001183c
     7d4:	.word	0x00000070

000007d8 <deregister_tm_clones>:
     7d8:	ldr	r3, [pc, #52]	; 814 <deregister_tm_clones+0x3c>
     7dc:	ldr	r0, [pc, #52]	; 818 <deregister_tm_clones+0x40>
     7e0:	add	r3, pc, r3
     7e4:	add	r0, pc, r0
     7e8:	add	r3, r3, #3
     7ec:	sub	r3, r3, r0
     7f0:	cmp	r3, #6
     7f4:	ldr	r3, [pc, #32]	; 81c <deregister_tm_clones+0x44>
     7f8:	add	r3, pc, r3
     7fc:	bxls	lr
     800:	ldr	r2, [pc, #24]	; 820 <deregister_tm_clones+0x48>
     804:	ldr	r3, [r3, r2]
     808:	cmp	r3, #0
     80c:	bxeq	lr
     810:	bx	r3
     814:	.word	0x00011900
     818:	.word	0x000118fc
     81c:	.word	0x00011800
     820:	.word	0x0000006c

00000824 <register_tm_clones>:
     824:	ldr	r1, [pc, #56]	; 864 <register_tm_clones+0x40>
     828:	ldr	r0, [pc, #56]	; 868 <register_tm_clones+0x44>
     82c:	add	r1, pc, r1
     830:	add	r0, pc, r0
     834:	sub	r1, r1, r0
     838:	ldr	r3, [pc, #44]	; 86c <register_tm_clones+0x48>
     83c:	asr	r1, r1, #2
     840:	add	r3, pc, r3
     844:	add	r1, r1, r1, lsr #31
     848:	asrs	r1, r1, #1
     84c:	bxeq	lr
     850:	ldr	r2, [pc, #24]	; 870 <register_tm_clones+0x4c>
     854:	ldr	r3, [r3, r2]
     858:	cmp	r3, #0
     85c:	bxeq	lr
     860:	bx	r3
     864:	.word	0x000118b4
     868:	.word	0x000118b0
     86c:	.word	0x000117b8
     870:	.word	0x00000078

00000874 <__do_global_dtors_aux>:
     874:	ldr	r3, [pc, #76]	; 8c8 <__do_global_dtors_aux+0x54>
     878:	ldr	r2, [pc, #76]	; 8cc <__do_global_dtors_aux+0x58>
     87c:	add	r3, pc, r3
     880:	add	r2, pc, r2
     884:	ldrb	r3, [r3]
     888:	cmp	r3, #0
     88c:	bxne	lr
     890:	ldr	r3, [pc, #56]	; 8d0 <__do_global_dtors_aux+0x5c>
     894:	push	{r4, lr}
     898:	ldr	r3, [r2, r3]
     89c:	cmp	r3, #0
     8a0:	beq	8b0 <__do_global_dtors_aux+0x3c>
     8a4:	ldr	r3, [pc, #40]	; 8d4 <__do_global_dtors_aux+0x60>
     8a8:	ldr	r0, [pc, r3]
     8ac:	bl	6b8 <__cxa_finalize@plt>
     8b0:	bl	7d8 <deregister_tm_clones>
     8b4:	ldr	r3, [pc, #28]	; 8d8 <__do_global_dtors_aux+0x64>
     8b8:	mov	r2, #1
     8bc:	add	r3, pc, r3
     8c0:	strb	r2, [r3]
     8c4:	pop	{r4, pc}
     8c8:	.word	0x00011864
     8cc:	.word	0x00011778
     8d0:	.word	0x00000068
     8d4:	.word	0x000117cc
     8d8:	.word	0x00011824

000008dc <frame_dummy>:
     8dc:	ldr	r0, [pc, #56]	; 91c <frame_dummy+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <frame_dummy+0x44>
     8e4:	add	r0, pc, r0
     8e8:	ldr	r2, [r0]
     8ec:	add	r3, pc, r3
     8f0:	cmp	r2, #0
     8f4:	bne	8fc <frame_dummy+0x20>
     8f8:	b	824 <register_tm_clones>
     8fc:	ldr	r2, [pc, #32]	; 924 <frame_dummy+0x48>
     900:	ldr	r3, [r3, r2]
     904:	cmp	r3, #0
     908:	beq	8f8 <frame_dummy+0x1c>
     90c:	push	{r4, lr}
     910:	blx	r3
     914:	pop	{r4, lr}
     918:	b	824 <register_tm_clones>
     91c:	.word	0x00011618
     920:	.word	0x0001170c
     924:	.word	0x00000074

00000928 <ipfw_daq_get_setup>:
     928:	push	{fp, lr}
     92c:	add	fp, sp, #4
     930:	sub	sp, sp, #32
     934:	str	r0, [fp, #-16]
     938:	str	r1, [fp, #-20]	; 0xffffffec
     93c:	str	r2, [fp, #-24]	; 0xffffffe8
     940:	str	r3, [fp, #-28]	; 0xffffffe4
     944:	ldr	r3, [fp, #-16]
     948:	mov	r2, #2
     94c:	str	r2, [r3, #8]
     950:	ldr	r3, [fp, #-16]
     954:	mov	r2, #8000	; 0x1f40
     958:	str	r2, [r3, #4]
     95c:	ldr	r3, [fp, #-20]	; 0xffffffec
     960:	ldr	r3, [r3, #20]
     964:	str	r3, [fp, #-8]
     968:	b	ac0 <ipfw_daq_get_setup+0x198>
     96c:	ldr	r3, [fp, #-8]
     970:	ldr	r3, [r3, #4]
     974:	cmp	r3, #0
     978:	beq	990 <ipfw_daq_get_setup+0x68>
     97c:	ldr	r3, [fp, #-8]
     980:	ldr	r3, [r3, #4]
     984:	ldrb	r3, [r3]
     988:	cmp	r3, #0
     98c:	bne	9c0 <ipfw_daq_get_setup+0x98>
     990:	ldr	r3, [fp, #-8]
     994:	ldr	r3, [r3]
     998:	str	r3, [sp]
     99c:	ldr	r3, [pc, #488]	; b8c <ipfw_daq_get_setup+0x264>
     9a0:	add	r3, pc, r3
     9a4:	ldr	r2, [pc, #484]	; b90 <ipfw_daq_get_setup+0x268>
     9a8:	add	r2, pc, r2
     9ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
     9b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     9b4:	bl	760 <snprintf@plt>
     9b8:	mvn	r3, #0
     9bc:	b	b80 <ipfw_daq_get_setup+0x258>
     9c0:	ldr	r3, [fp, #-8]
     9c4:	ldr	r3, [r3]
     9c8:	ldr	r2, [pc, #452]	; b94 <ipfw_daq_get_setup+0x26c>
     9cc:	add	r2, pc, r2
     9d0:	mov	r1, r2
     9d4:	mov	r0, r3
     9d8:	bl	6ac <strcmp@plt>
     9dc:	mov	r3, r0
     9e0:	cmp	r3, #0
     9e4:	bne	a78 <ipfw_daq_get_setup+0x150>
     9e8:	ldr	r3, [fp, #-8]
     9ec:	ldr	r3, [r3, #4]
     9f0:	str	r3, [fp, #-12]
     9f4:	ldr	r3, [fp, #-8]
     9f8:	ldr	r3, [r3, #4]
     9fc:	sub	r1, fp, #12
     a00:	mov	r2, #0
     a04:	mov	r0, r3
     a08:	bl	6c4 <strtol@plt>
     a0c:	mov	r2, r0
     a10:	ldr	r3, [fp, #-16]
     a14:	str	r2, [r3, #4]
     a18:	ldr	r3, [fp, #-12]
     a1c:	ldrb	r3, [r3]
     a20:	cmp	r3, #0
     a24:	bne	a48 <ipfw_daq_get_setup+0x120>
     a28:	ldr	r3, [fp, #-16]
     a2c:	ldr	r3, [r3, #4]
     a30:	cmp	r3, #0
     a34:	ble	a48 <ipfw_daq_get_setup+0x120>
     a38:	ldr	r3, [fp, #-16]
     a3c:	ldr	r3, [r3, #4]
     a40:	cmp	r3, #65536	; 0x10000
     a44:	blt	ab4 <ipfw_daq_get_setup+0x18c>
     a48:	ldr	r3, [fp, #-8]
     a4c:	ldr	r3, [r3, #4]
     a50:	str	r3, [sp]
     a54:	ldr	r3, [pc, #316]	; b98 <ipfw_daq_get_setup+0x270>
     a58:	add	r3, pc, r3
     a5c:	ldr	r2, [pc, #312]	; b9c <ipfw_daq_get_setup+0x274>
     a60:	add	r2, pc, r2
     a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
     a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
     a6c:	bl	760 <snprintf@plt>
     a70:	mvn	r3, #0
     a74:	b	b80 <ipfw_daq_get_setup+0x258>
     a78:	ldr	r3, [fp, #-8]
     a7c:	ldr	r3, [r3]
     a80:	ldr	r2, [fp, #-8]
     a84:	ldr	r2, [r2, #4]
     a88:	str	r2, [sp, #4]
     a8c:	str	r3, [sp]
     a90:	ldr	r3, [pc, #264]	; ba0 <ipfw_daq_get_setup+0x278>
     a94:	add	r3, pc, r3
     a98:	ldr	r2, [pc, #260]	; ba4 <ipfw_daq_get_setup+0x27c>
     a9c:	add	r2, pc, r2
     aa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
     aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     aa8:	bl	760 <snprintf@plt>
     aac:	mvn	r3, #0
     ab0:	b	b80 <ipfw_daq_get_setup+0x258>
     ab4:	ldr	r3, [fp, #-8]
     ab8:	ldr	r3, [r3, #8]
     abc:	str	r3, [fp, #-8]
     ac0:	ldr	r3, [fp, #-8]
     ac4:	cmp	r3, #0
     ac8:	bne	96c <ipfw_daq_get_setup+0x44>
     acc:	ldr	r3, [fp, #-20]	; 0xffffffec
     ad0:	ldr	r3, [r3, #4]
     ad4:	cmp	r3, #0
     ad8:	beq	aec <ipfw_daq_get_setup+0x1c4>
     adc:	ldr	r3, [fp, #-20]	; 0xffffffec
     ae0:	ldr	r3, [r3, #4]
     ae4:	mov	r2, r3
     ae8:	b	af0 <ipfw_daq_get_setup+0x1c8>
     aec:	ldr	r2, [pc, #180]	; ba8 <ipfw_daq_get_setup+0x280>
     af0:	ldr	r3, [fp, #-16]
     af4:	str	r2, [r3, #24]
     af8:	ldr	r3, [fp, #-20]	; 0xffffffec
     afc:	ldr	r2, [r3, #8]
     b00:	ldr	r3, [fp, #-16]
     b04:	str	r2, [r3, #20]
     b08:	ldr	r3, [fp, #-20]	; 0xffffffec
     b0c:	ldr	r3, [r3, #12]
     b10:	cmp	r3, #0
     b14:	moveq	r3, #1
     b18:	movne	r3, #0
     b1c:	uxtb	r3, r3
     b20:	mov	r2, r3
     b24:	ldr	r3, [fp, #-16]
     b28:	str	r2, [r3, #16]
     b2c:	ldr	r3, [fp, #-16]
     b30:	ldr	r3, [r3, #8]
     b34:	uxth	r2, r3
     b38:	ldr	r3, [fp, #-16]
     b3c:	add	r3, r3, #300	; 0x12c
     b40:	strh	r2, [r3]
     b44:	ldr	r3, [fp, #-16]
     b48:	mov	r2, #0
     b4c:	str	r2, [r3, #304]	; 0x130
     b50:	ldr	r3, [fp, #-16]
     b54:	ldr	r3, [r3, #4]
     b58:	uxth	r3, r3
     b5c:	mov	r0, r3
     b60:	bl	70c <htons@plt>
     b64:	mov	r3, r0
     b68:	mov	r2, r3
     b6c:	ldr	r3, [fp, #-16]
     b70:	add	r3, r3, #300	; 0x12c
     b74:	add	r3, r3, #2
     b78:	strh	r2, [r3]
     b7c:	mov	r3, #0
     b80:	mov	r0, r3
     b84:	sub	sp, fp, #4
     b88:	pop	{fp, pc}
     b8c:	.word	0x00001050
     b90:	.word	0x00000ea4
     b94:	.word	0x00000ea0
     b98:	.word	0x00000f98
     b9c:	.word	0x00000e14
     ba0:	.word	0x00000f5c
     ba4:	.word	0x00000dec
     ba8:	.word	0x0000ffff

00000bac <ipfw_daq_initialize>:
     bac:	push	{fp, lr}
     bb0:	add	fp, sp, #4
     bb4:	sub	sp, sp, #24
     bb8:	str	r0, [fp, #-16]
     bbc:	str	r1, [fp, #-20]	; 0xffffffec
     bc0:	str	r2, [fp, #-24]	; 0xffffffe8
     bc4:	str	r3, [fp, #-28]	; 0xffffffe4
     bc8:	mov	r1, #416	; 0x1a0
     bcc:	mov	r0, #1
     bd0:	bl	6a0 <calloc@plt>
     bd4:	mov	r3, r0
     bd8:	str	r3, [fp, #-8]
     bdc:	ldr	r3, [fp, #-8]
     be0:	cmp	r3, #0
     be4:	bne	c0c <ipfw_daq_initialize+0x60>
     be8:	ldr	r3, [pc, #220]	; ccc <ipfw_daq_initialize+0x120>
     bec:	add	r3, pc, r3
     bf0:	ldr	r2, [pc, #216]	; cd0 <ipfw_daq_initialize+0x124>
     bf4:	add	r2, pc, r2
     bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c00:	bl	760 <snprintf@plt>
     c04:	mvn	r3, #1
     c08:	b	cc0 <ipfw_daq_initialize+0x114>
     c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
     c14:	ldr	r1, [fp, #-16]
     c18:	ldr	r0, [fp, #-8]
     c1c:	bl	928 <ipfw_daq_get_setup>
     c20:	mov	r3, r0
     c24:	cmp	r3, #0
     c28:	beq	c3c <ipfw_daq_initialize+0x90>
     c2c:	ldr	r0, [fp, #-8]
     c30:	bl	cdc <ipfw_daq_shutdown>
     c34:	mvn	r3, #0
     c38:	b	cc0 <ipfw_daq_initialize+0x114>
     c3c:	ldr	r3, [fp, #-8]
     c40:	ldr	r3, [r3, #24]
     c44:	mov	r0, r3
     c48:	bl	724 <malloc@plt>
     c4c:	mov	r3, r0
     c50:	mov	r2, r3
     c54:	ldr	r3, [fp, #-8]
     c58:	str	r2, [r3, #28]
     c5c:	ldr	r3, [fp, #-8]
     c60:	ldr	r3, [r3, #28]
     c64:	cmp	r3, #0
     c68:	bne	c98 <ipfw_daq_initialize+0xec>
     c6c:	ldr	r3, [pc, #96]	; cd4 <ipfw_daq_initialize+0x128>
     c70:	add	r3, pc, r3
     c74:	ldr	r2, [pc, #92]	; cd8 <ipfw_daq_initialize+0x12c>
     c78:	add	r2, pc, r2
     c7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
     c84:	bl	760 <snprintf@plt>
     c88:	ldr	r0, [fp, #-8]
     c8c:	bl	cdc <ipfw_daq_shutdown>
     c90:	mvn	r3, #1
     c94:	b	cc0 <ipfw_daq_initialize+0x114>
     c98:	ldr	r3, [fp, #-8]
     c9c:	mvn	r2, #0
     ca0:	str	r2, [r3]
     ca4:	ldr	r3, [fp, #-8]
     ca8:	mov	r2, #1
     cac:	str	r2, [r3, #316]	; 0x13c
     cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
     cb4:	ldr	r2, [fp, #-8]
     cb8:	str	r2, [r3]
     cbc:	mov	r3, #0
     cc0:	mov	r0, r3
     cc4:	sub	sp, fp, #4
     cc8:	pop	{fp, pc}
     ccc:	.word	0x00000e18
     cd0:	.word	0x00000cb8
     cd4:	.word	0x00000d94
     cd8:	.word	0x00000c60

00000cdc <ipfw_daq_shutdown>:
     cdc:	push	{fp, lr}
     ce0:	add	fp, sp, #4
     ce4:	sub	sp, sp, #16
     ce8:	str	r0, [fp, #-16]
     cec:	ldr	r3, [fp, #-16]
     cf0:	str	r3, [fp, #-8]
     cf4:	ldr	r3, [fp, #-8]
     cf8:	ldr	r3, [r3, #32]
     cfc:	cmp	r3, #0
     d00:	beq	d14 <ipfw_daq_shutdown+0x38>
     d04:	ldr	r3, [fp, #-8]
     d08:	ldr	r3, [r3, #32]
     d0c:	mov	r0, r3
     d10:	bl	6d0 <free@plt>
     d14:	ldr	r3, [fp, #-8]
     d18:	ldr	r3, [r3, #28]
     d1c:	cmp	r3, #0
     d20:	beq	d34 <ipfw_daq_shutdown+0x58>
     d24:	ldr	r3, [fp, #-8]
     d28:	ldr	r3, [r3, #28]
     d2c:	mov	r0, r3
     d30:	bl	6d0 <free@plt>
     d34:	ldr	r0, [fp, #-8]
     d38:	bl	6d0 <free@plt>
     d3c:	nop			; (mov r0, r0)
     d40:	sub	sp, fp, #4
     d44:	pop	{fp, pc}

00000d48 <ipfw_daq_set_filter>:
     d48:	push	{fp, lr}
     d4c:	add	fp, sp, #4
     d50:	sub	sp, sp, #32
     d54:	str	r0, [fp, #-24]	; 0xffffffe8
     d58:	str	r1, [fp, #-28]	; 0xffffffe4
     d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d60:	str	r3, [fp, #-8]
     d64:	ldr	r3, [fp, #-8]
     d68:	ldr	r3, [r3, #24]
     d6c:	mov	r0, r3
     d70:	sub	r2, fp, #16
     d74:	mov	r3, #0
     d78:	str	r3, [sp, #4]
     d7c:	mov	r3, #1
     d80:	str	r3, [sp]
     d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
     d88:	mov	r1, #228	; 0xe4
     d8c:	bl	730 <sfbpf_compile@plt>
     d90:	mov	r3, r0
     d94:	cmp	r3, #0
     d98:	bge	da4 <ipfw_daq_set_filter+0x5c>
     d9c:	mvn	r3, #0
     da0:	b	e14 <ipfw_daq_set_filter+0xcc>
     da4:	ldr	r3, [fp, #-8]
     da8:	ldr	r3, [r3, #32]
     dac:	cmp	r3, #0
     db0:	beq	dc4 <ipfw_daq_set_filter+0x7c>
     db4:	ldr	r3, [fp, #-8]
     db8:	ldr	r3, [r3, #32]
     dbc:	mov	r0, r3
     dc0:	bl	6d0 <free@plt>
     dc4:	ldr	r3, [fp, #-8]
     dc8:	ldr	r3, [r3, #296]	; 0x128
     dcc:	cmp	r3, #0
     dd0:	beq	de4 <ipfw_daq_set_filter+0x9c>
     dd4:	ldr	r3, [fp, #-8]
     dd8:	ldr	r3, [r3, #296]	; 0x128
     ddc:	mov	r0, r3
     de0:	bl	6d0 <free@plt>
     de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
     de8:	bl	700 <strdup@plt>
     dec:	mov	r3, r0
     df0:	mov	r2, r3
     df4:	ldr	r3, [fp, #-8]
     df8:	str	r2, [r3, #32]
     dfc:	ldr	r3, [fp, #-8]
     e00:	add	r3, r3, #292	; 0x124
     e04:	sub	r2, fp, #16
     e08:	ldm	r2, {r0, r1}
     e0c:	stm	r3, {r0, r1}
     e10:	mov	r3, #0
     e14:	mov	r0, r3
     e18:	sub	sp, fp, #4
     e1c:	pop	{fp, pc}

00000e20 <ipfw_daq_start>:
     e20:	push	{r4, fp, lr}
     e24:	add	fp, sp, #8
     e28:	sub	sp, sp, #28
     e2c:	str	r0, [fp, #-24]	; 0xffffffe8
     e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e34:	str	r3, [fp, #-16]
     e38:	ldr	r3, [fp, #-16]
     e3c:	ldr	r3, [r3, #8]
     e40:	mov	r2, #254	; 0xfe
     e44:	mov	r1, #3
     e48:	mov	r0, r3
     e4c:	bl	79c <socket@plt>
     e50:	mov	r2, r0
     e54:	ldr	r3, [fp, #-16]
     e58:	str	r2, [r3]
     e5c:	ldr	r3, [fp, #-16]
     e60:	ldr	r3, [r3]
     e64:	cmn	r3, #1
     e68:	bne	eb4 <ipfw_daq_start+0x94>
     e6c:	ldr	r3, [fp, #-16]
     e70:	add	r4, r3, #36	; 0x24
     e74:	bl	754 <__errno_location@plt>
     e78:	mov	r3, r0
     e7c:	ldr	r3, [r3]
     e80:	mov	r0, r3
     e84:	bl	73c <strerror@plt>
     e88:	mov	r3, r0
     e8c:	str	r3, [sp]
     e90:	ldr	r3, [pc, #168]	; f40 <ipfw_daq_start+0x120>
     e94:	add	r3, pc, r3
     e98:	ldr	r2, [pc, #164]	; f44 <ipfw_daq_start+0x124>
     e9c:	add	r2, pc, r2
     ea0:	mov	r1, #256	; 0x100
     ea4:	mov	r0, r4
     ea8:	bl	760 <snprintf@plt>
     eac:	mvn	r3, #0
     eb0:	b	f34 <ipfw_daq_start+0x114>
     eb4:	ldr	r3, [fp, #-16]
     eb8:	ldr	r0, [r3]
     ebc:	ldr	r3, [fp, #-16]
     ec0:	add	r3, r3, #300	; 0x12c
     ec4:	mov	r2, #16
     ec8:	mov	r1, r3
     ecc:	bl	76c <bind@plt>
     ed0:	mov	r3, r0
     ed4:	cmn	r3, #1
     ed8:	bne	f24 <ipfw_daq_start+0x104>
     edc:	ldr	r3, [fp, #-16]
     ee0:	add	r4, r3, #36	; 0x24
     ee4:	bl	754 <__errno_location@plt>
     ee8:	mov	r3, r0
     eec:	ldr	r3, [r3]
     ef0:	mov	r0, r3
     ef4:	bl	73c <strerror@plt>
     ef8:	mov	r3, r0
     efc:	str	r3, [sp]
     f00:	ldr	r3, [pc, #64]	; f48 <ipfw_daq_start+0x128>
     f04:	add	r3, pc, r3
     f08:	ldr	r2, [pc, #60]	; f4c <ipfw_daq_start+0x12c>
     f0c:	add	r2, pc, r2
     f10:	mov	r1, #256	; 0x100
     f14:	mov	r0, r4
     f18:	bl	760 <snprintf@plt>
     f1c:	mvn	r3, #0
     f20:	b	f34 <ipfw_daq_start+0x114>
     f24:	ldr	r3, [fp, #-16]
     f28:	mov	r2, #2
     f2c:	str	r2, [r3, #316]	; 0x13c
     f30:	mov	r3, #0
     f34:	mov	r0, r3
     f38:	sub	sp, fp, #8
     f3c:	pop	{r4, fp, pc}
     f40:	.word	0x00000b84
     f44:	.word	0x00000a64
     f48:	.word	0x00000b14
     f4c:	.word	0x00000a1c

00000f50 <ipfw_daq_stop>:
     f50:	push	{fp, lr}
     f54:	add	fp, sp, #4
     f58:	sub	sp, sp, #16
     f5c:	str	r0, [fp, #-16]
     f60:	ldr	r3, [fp, #-16]
     f64:	str	r3, [fp, #-8]
     f68:	ldr	r3, [fp, #-8]
     f6c:	ldr	r3, [r3]
     f70:	mov	r0, r3
     f74:	bl	7a8 <close@plt>
     f78:	ldr	r3, [fp, #-8]
     f7c:	mvn	r2, #0
     f80:	str	r2, [r3]
     f84:	ldr	r3, [fp, #-8]
     f88:	mov	r2, #3
     f8c:	str	r2, [r3, #316]	; 0x13c
     f90:	mov	r3, #0
     f94:	mov	r0, r3
     f98:	sub	sp, fp, #4
     f9c:	pop	{fp, pc}

00000fa0 <ipfw_daq_forward>:
     fa0:	push	{r4, fp, lr}
     fa4:	add	fp, sp, #8
     fa8:	sub	sp, sp, #36	; 0x24
     fac:	str	r0, [fp, #-24]	; 0xffffffe8
     fb0:	str	r1, [fp, #-28]	; 0xffffffe4
     fb4:	str	r2, [fp, #-32]	; 0xffffffe0
     fb8:	str	r3, [fp, #-36]	; 0xffffffdc
     fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fc0:	ldr	r0, [r3]
     fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fc8:	add	r3, r3, #300	; 0x12c
     fcc:	mov	r2, r3
     fd0:	mov	r3, #16
     fd4:	str	r3, [sp, #4]
     fd8:	str	r2, [sp]
     fdc:	mov	r3, #0
     fe0:	ldr	r2, [fp, #-36]	; 0xffffffdc
     fe4:	ldr	r1, [fp, #-32]	; 0xffffffe0
     fe8:	bl	784 <sendto@plt>
     fec:	str	r0, [fp, #-16]
     ff0:	ldr	r3, [fp, #-16]
     ff4:	cmn	r3, #1
     ff8:	bne	1044 <ipfw_daq_forward+0xa4>
     ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1000:	add	r4, r3, #36	; 0x24
    1004:	bl	754 <__errno_location@plt>
    1008:	mov	r3, r0
    100c:	ldr	r3, [r3]
    1010:	mov	r0, r3
    1014:	bl	73c <strerror@plt>
    1018:	mov	r3, r0
    101c:	str	r3, [sp]
    1020:	ldr	r3, [pc, #44]	; 1054 <ipfw_daq_forward+0xb4>
    1024:	add	r3, pc, r3
    1028:	ldr	r2, [pc, #40]	; 1058 <ipfw_daq_forward+0xb8>
    102c:	add	r2, pc, r2
    1030:	mov	r1, #256	; 0x100
    1034:	mov	r0, r4
    1038:	bl	760 <snprintf@plt>
    103c:	mvn	r3, #0
    1040:	b	1048 <ipfw_daq_forward+0xa8>
    1044:	mov	r3, #0
    1048:	mov	r0, r3
    104c:	sub	sp, fp, #8
    1050:	pop	{r4, fp, pc}
    1054:	.word	0x00000a04
    1058:	.word	0x00000920

0000105c <ipfw_daq_inject>:
    105c:	push	{fp, lr}
    1060:	add	fp, sp, #4
    1064:	sub	sp, sp, #32
    1068:	str	r0, [fp, #-16]
    106c:	str	r1, [fp, #-20]	; 0xffffffec
    1070:	str	r2, [fp, #-24]	; 0xffffffe8
    1074:	str	r3, [fp, #-28]	; 0xffffffe4
    1078:	ldr	r3, [fp, #-16]
    107c:	str	r3, [fp, #-8]
    1080:	mov	r3, #0
    1084:	str	r3, [sp]
    1088:	ldr	r3, [fp, #-28]	; 0xffffffe4
    108c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1090:	ldr	r1, [fp, #-20]	; 0xffffffec
    1094:	ldr	r0, [fp, #-8]
    1098:	bl	fa0 <ipfw_daq_forward>
    109c:	str	r0, [fp, #-12]
    10a0:	ldr	r3, [fp, #-12]
    10a4:	cmp	r3, #0
    10a8:	bne	10cc <ipfw_daq_inject+0x70>
    10ac:	ldr	r3, [fp, #-8]
    10b0:	add	r3, r3, #352	; 0x160
    10b4:	ldrd	r2, [r3]
    10b8:	adds	r2, r2, #1
    10bc:	adc	r3, r3, #0
    10c0:	ldr	r1, [fp, #-8]
    10c4:	add	r1, r1, #352	; 0x160
    10c8:	strd	r2, [r1]
    10cc:	ldr	r3, [fp, #-12]
    10d0:	mov	r0, r3
    10d4:	sub	sp, fp, #4
    10d8:	pop	{fp, pc}

000010dc <SetPktHdr>:
    10dc:	push	{fp, lr}
    10e0:	add	fp, sp, #4
    10e4:	sub	sp, sp, #8
    10e8:	str	r0, [fp, #-8]
    10ec:	str	r1, [fp, #-12]
    10f0:	mov	r2, #8
    10f4:	mov	r1, #0
    10f8:	ldr	r3, [pc, #176]	; 11b0 <SetPktHdr+0xd4>
    10fc:	add	r3, pc, r3
    1100:	mov	r0, r3
    1104:	bl	778 <memset@plt>
    1108:	mov	r1, #0
    110c:	ldr	r3, [pc, #160]	; 11b4 <SetPktHdr+0xd8>
    1110:	add	r3, pc, r3
    1114:	mov	r0, r3
    1118:	bl	718 <gettimeofday@plt>
    111c:	ldr	r3, [pc, #148]	; 11b8 <SetPktHdr+0xdc>
    1120:	add	r3, pc, r3
    1124:	ldr	r2, [r3]
    1128:	ldr	r3, [fp, #-8]
    112c:	str	r2, [r3]
    1130:	ldr	r3, [pc, #132]	; 11bc <SetPktHdr+0xe0>
    1134:	add	r3, pc, r3
    1138:	ldr	r2, [r3, #4]
    113c:	ldr	r3, [fp, #-8]
    1140:	str	r2, [r3, #4]
    1144:	ldr	r2, [fp, #-12]
    1148:	ldr	r3, [fp, #-8]
    114c:	str	r2, [r3, #8]
    1150:	ldr	r2, [fp, #-12]
    1154:	ldr	r3, [fp, #-8]
    1158:	str	r2, [r3, #12]
    115c:	ldr	r3, [fp, #-8]
    1160:	mvn	r2, #0
    1164:	str	r2, [r3, #16]
    1168:	ldr	r3, [fp, #-8]
    116c:	mvn	r2, #0
    1170:	str	r2, [r3, #20]
    1174:	ldr	r3, [fp, #-8]
    1178:	mvn	r2, #0
    117c:	str	r2, [r3, #24]
    1180:	ldr	r3, [fp, #-8]
    1184:	mvn	r2, #0
    1188:	str	r2, [r3, #28]
    118c:	ldr	r3, [fp, #-8]
    1190:	mov	r2, #0
    1194:	str	r2, [r3, #32]
    1198:	ldr	r3, [fp, #-8]
    119c:	mov	r2, #0
    11a0:	strh	r2, [r3, #48]	; 0x30
    11a4:	nop			; (mov r0, r0)
    11a8:	sub	sp, fp, #4
    11ac:	pop	{fp, pc}
    11b0:	.word	0x00010fe8
    11b4:	.word	0x00010fd4
    11b8:	.word	0x00010fc4
    11bc:	.word	0x00010fb0

000011c0 <ipfw_daq_acquire>:
    11c0:	push	{r4, fp, lr}
    11c4:	add	fp, sp, #8
    11c8:	sub	sp, sp, #244	; 0xf4
    11cc:	str	r0, [fp, #-232]	; 0xffffff18
    11d0:	str	r1, [fp, #-236]	; 0xffffff14
    11d4:	str	r2, [fp, #-240]	; 0xffffff10
    11d8:	str	r3, [fp, #-244]	; 0xffffff0c
    11dc:	ldr	r3, [fp, #-232]	; 0xffffff18
    11e0:	str	r3, [fp, #-28]	; 0xffffffe4
    11e4:	mov	r3, #0
    11e8:	str	r3, [fp, #-16]
    11ec:	mov	r3, #0
    11f0:	str	r3, [fp, #-168]	; 0xffffff58
    11f4:	ldr	r3, [fp, #-236]	; 0xffffff14
    11f8:	cmp	r3, #0
    11fc:	beq	1208 <ipfw_daq_acquire+0x48>
    1200:	ldr	r3, [fp, #-236]	; 0xffffff14
    1204:	b	120c <ipfw_daq_acquire+0x4c>
    1208:	mvn	r3, #0
    120c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1210:	str	r3, [r2, #12]
    1214:	b	15d8 <ipfw_daq_acquire+0x418>
    1218:	sub	r3, fp, #164	; 0xa4
    121c:	str	r3, [fp, #-32]	; 0xffffffe0
    1220:	mov	r3, #0
    1224:	str	r3, [fp, #-20]	; 0xffffffec
    1228:	b	1248 <ipfw_daq_acquire+0x88>
    122c:	ldr	r3, [fp, #-32]	; 0xffffffe0
    1230:	ldr	r2, [fp, #-20]	; 0xffffffec
    1234:	mov	r1, #0
    1238:	str	r1, [r3, r2, lsl #2]
    123c:	ldr	r3, [fp, #-20]	; 0xffffffec
    1240:	add	r3, r3, #1
    1244:	str	r3, [fp, #-20]	; 0xffffffec
    1248:	ldr	r3, [fp, #-20]	; 0xffffffec
    124c:	cmp	r3, #31
    1250:	bls	122c <ipfw_daq_acquire+0x6c>
    1254:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1258:	ldr	r3, [r3]
    125c:	add	r2, r3, #31
    1260:	cmp	r3, #0
    1264:	movlt	r3, r2
    1268:	movge	r3, r3
    126c:	asr	r3, r3, #5
    1270:	mov	r1, r3
    1274:	lsl	r3, r1, #2
    1278:	sub	r2, fp, #12
    127c:	add	r3, r2, r3
    1280:	ldr	r0, [r3, #-152]	; 0xffffff68
    1284:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1288:	ldr	r2, [r3]
    128c:	asr	r3, r2, #31
    1290:	lsr	r3, r3, #27
    1294:	add	r2, r2, r3
    1298:	and	r2, r2, #31
    129c:	sub	r3, r2, r3
    12a0:	mov	r2, r3
    12a4:	mov	r3, #1
    12a8:	lsl	r3, r3, r2
    12ac:	orr	r2, r0, r3
    12b0:	lsl	r3, r1, #2
    12b4:	sub	r1, fp, #12
    12b8:	add	r3, r1, r3
    12bc:	str	r2, [r3, #-152]	; 0xffffff68
    12c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12c4:	ldr	r3, [r3, #20]
    12c8:	str	r3, [fp, #-172]	; 0xffffff54
    12cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
    12d0:	ldr	r3, [r3]
    12d4:	add	r0, r3, #1
    12d8:	sub	r1, fp, #164	; 0xa4
    12dc:	sub	r3, fp, #172	; 0xac
    12e0:	str	r3, [sp]
    12e4:	mov	r3, #0
    12e8:	mov	r2, #0
    12ec:	bl	6e8 <select@plt>
    12f0:	mov	r3, r0
    12f4:	cmp	r3, #0
    12f8:	bge	1358 <ipfw_daq_acquire+0x198>
    12fc:	bl	754 <__errno_location@plt>
    1300:	mov	r3, r0
    1304:	ldr	r3, [r3]
    1308:	cmp	r3, #4
    130c:	beq	1600 <ipfw_daq_acquire+0x440>
    1310:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1314:	add	r4, r3, #36	; 0x24
    1318:	bl	754 <__errno_location@plt>
    131c:	mov	r3, r0
    1320:	ldr	r3, [r3]
    1324:	mov	r0, r3
    1328:	bl	73c <strerror@plt>
    132c:	mov	r3, r0
    1330:	str	r3, [sp]
    1334:	ldr	r3, [pc, #728]	; 1614 <ipfw_daq_acquire+0x454>
    1338:	add	r3, pc, r3
    133c:	ldr	r2, [pc, #724]	; 1618 <ipfw_daq_acquire+0x458>
    1340:	add	r2, pc, r2
    1344:	mov	r1, #256	; 0x100
    1348:	mov	r0, r4
    134c:	bl	760 <snprintf@plt>
    1350:	mvn	r3, #0
    1354:	b	1608 <ipfw_daq_acquire+0x448>
    1358:	ldr	r3, [fp, #-28]	; 0xffffffe4
    135c:	ldr	r3, [r3]
    1360:	add	r2, r3, #31
    1364:	cmp	r3, #0
    1368:	movlt	r3, r2
    136c:	movge	r3, r3
    1370:	asr	r3, r3, #5
    1374:	lsl	r3, r3, #2
    1378:	sub	r2, fp, #12
    137c:	add	r3, r2, r3
    1380:	ldr	r1, [r3, #-152]	; 0xffffff68
    1384:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1388:	ldr	r2, [r3]
    138c:	asr	r3, r2, #31
    1390:	lsr	r3, r3, #27
    1394:	add	r2, r2, r3
    1398:	and	r2, r2, #31
    139c:	sub	r3, r2, r3
    13a0:	mov	r2, r3
    13a4:	mov	r3, #1
    13a8:	lsl	r3, r3, r2
    13ac:	and	r3, r3, r1
    13b0:	cmp	r3, #0
    13b4:	beq	15d8 <ipfw_daq_acquire+0x418>
    13b8:	mov	r3, #16
    13bc:	str	r3, [fp, #-176]	; 0xffffff50
    13c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    13c4:	ldr	r0, [r3]
    13c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    13cc:	ldr	r1, [r3, #28]
    13d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
    13d4:	ldr	r2, [r3, #24]
    13d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    13dc:	add	r3, r3, #300	; 0x12c
    13e0:	mov	ip, r3
    13e4:	sub	r3, fp, #176	; 0xb0
    13e8:	str	r3, [sp, #4]
    13ec:	str	ip, [sp]
    13f0:	mov	r3, #0
    13f4:	bl	6f4 <recvfrom@plt>
    13f8:	str	r0, [fp, #-36]	; 0xffffffdc
    13fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1400:	cmn	r3, #1
    1404:	bne	1464 <ipfw_daq_acquire+0x2a4>
    1408:	bl	754 <__errno_location@plt>
    140c:	mov	r3, r0
    1410:	ldr	r3, [r3]
    1414:	cmp	r3, #4
    1418:	beq	1464 <ipfw_daq_acquire+0x2a4>
    141c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1420:	add	r4, r3, #36	; 0x24
    1424:	bl	754 <__errno_location@plt>
    1428:	mov	r3, r0
    142c:	ldr	r3, [r3]
    1430:	mov	r0, r3
    1434:	bl	73c <strerror@plt>
    1438:	mov	r3, r0
    143c:	str	r3, [sp]
    1440:	ldr	r3, [pc, #468]	; 161c <ipfw_daq_acquire+0x45c>
    1444:	add	r3, pc, r3
    1448:	ldr	r2, [pc, #464]	; 1620 <ipfw_daq_acquire+0x460>
    144c:	add	r2, pc, r2
    1450:	mov	r1, #256	; 0x100
    1454:	mov	r0, r4
    1458:	bl	760 <snprintf@plt>
    145c:	mvn	r3, #0
    1460:	b	1608 <ipfw_daq_acquire+0x448>
    1464:	sub	r3, fp, #228	; 0xe4
    1468:	ldr	r1, [fp, #-36]	; 0xffffffdc
    146c:	mov	r0, r3
    1470:	bl	10dc <SetPktHdr>
    1474:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1478:	add	r3, r3, #320	; 0x140
    147c:	ldrd	r2, [r3]
    1480:	adds	r2, r2, #1
    1484:	adc	r3, r3, #0
    1488:	ldr	r1, [fp, #-28]	; 0xffffffe4
    148c:	add	r1, r1, #320	; 0x140
    1490:	strd	r2, [r1]
    1494:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1498:	ldr	r3, [r3, #296]	; 0x128
    149c:	cmp	r3, #0
    14a0:	beq	14f8 <ipfw_daq_acquire+0x338>
    14a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    14a8:	ldr	r0, [r3, #296]	; 0x128
    14ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
    14b0:	ldr	r1, [r3, #28]
    14b4:	ldr	r2, [fp, #-220]	; 0xffffff24
    14b8:	ldr	r3, [fp, #-220]	; 0xffffff24
    14bc:	bl	790 <sfbpf_filter@plt>
    14c0:	mov	r3, r0
    14c4:	cmp	r3, #0
    14c8:	bne	14f8 <ipfw_daq_acquire+0x338>
    14cc:	mov	r3, #0
    14d0:	str	r3, [fp, #-24]	; 0xffffffe8
    14d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    14d8:	add	r3, r3, #352	; 0x160
    14dc:	ldrd	r2, [r3, #-8]
    14e0:	adds	r2, r2, #1
    14e4:	adc	r3, r3, #0
    14e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    14ec:	add	r1, r1, #352	; 0x160
    14f0:	strd	r2, [r1, #-8]
    14f4:	b	1580 <ipfw_daq_acquire+0x3c0>
    14f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    14fc:	ldr	r2, [r3, #28]
    1500:	sub	r1, fp, #228	; 0xe4
    1504:	ldr	r3, [fp, #-240]	; 0xffffff10
    1508:	mov	r0, #0
    150c:	blx	r3
    1510:	str	r0, [fp, #-24]	; 0xffffffe8
    1514:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1518:	cmp	r3, #6
    151c:	bls	1528 <ipfw_daq_acquire+0x368>
    1520:	mov	r3, #1
    1524:	str	r3, [fp, #-24]	; 0xffffffe8
    1528:	ldr	r2, [fp, #-28]	; 0xffffffe4
    152c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1530:	add	r3, r3, #45	; 0x2d
    1534:	lsl	r3, r3, #3
    1538:	add	r3, r2, r3
    153c:	ldrd	r2, [r3]
    1540:	adds	r2, r2, #1
    1544:	adc	r3, r3, #0
    1548:	ldr	r0, [fp, #-28]	; 0xffffffe4
    154c:	ldr	r1, [fp, #-24]	; 0xffffffe8
    1550:	add	r1, r1, #45	; 0x2d
    1554:	lsl	r1, r1, #3
    1558:	add	r1, r0, r1
    155c:	strd	r2, [r1]
    1560:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1564:	add	r3, r3, #336	; 0x150
    1568:	ldrd	r2, [r3]
    156c:	adds	r2, r2, #1
    1570:	adc	r3, r3, #0
    1574:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1578:	add	r1, r1, #336	; 0x150
    157c:	strd	r2, [r1]
    1580:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1584:	ldr	r3, [r3, #16]
    1588:	cmp	r3, #0
    158c:	bne	15a8 <ipfw_daq_acquire+0x3e8>
    1590:	ldr	r3, [pc, #140]	; 1624 <ipfw_daq_acquire+0x464>
    1594:	add	r3, pc, r3
    1598:	ldr	r2, [fp, #-24]	; 0xffffffe8
    159c:	ldr	r3, [r3, r2, lsl #2]
    15a0:	cmp	r3, #0
    15a4:	beq	15cc <ipfw_daq_acquire+0x40c>
    15a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15ac:	ldr	r2, [r3, #28]
    15b0:	ldr	r0, [fp, #-216]	; 0xffffff28
    15b4:	sub	r1, fp, #228	; 0xe4
    15b8:	mov	r3, #0
    15bc:	str	r3, [sp]
    15c0:	mov	r3, r0
    15c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    15c8:	bl	fa0 <ipfw_daq_forward>
    15cc:	ldr	r3, [fp, #-16]
    15d0:	add	r3, r3, #1
    15d4:	str	r3, [fp, #-16]
    15d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15dc:	ldr	r3, [r3, #12]
    15e0:	cmp	r3, #0
    15e4:	blt	1218 <ipfw_daq_acquire+0x58>
    15e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15ec:	ldr	r2, [r3, #12]
    15f0:	ldr	r3, [fp, #-16]
    15f4:	cmp	r2, r3
    15f8:	bgt	1218 <ipfw_daq_acquire+0x58>
    15fc:	b	1604 <ipfw_daq_acquire+0x444>
    1600:	nop			; (mov r0, r0)
    1604:	mov	r3, #0
    1608:	mov	r0, r3
    160c:	sub	sp, fp, #8
    1610:	pop	{r4, fp, pc}
    1614:	.word	0x00000704
    1618:	.word	0x00000650
    161c:	.word	0x000005f8
    1620:	.word	0x0000056c
    1624:	.word	0x000003e0

00001628 <ipfw_daq_breakloop>:
    1628:	push	{fp}		; (str fp, [sp, #-4]!)
    162c:	add	fp, sp, #0
    1630:	sub	sp, sp, #20
    1634:	str	r0, [fp, #-16]
    1638:	ldr	r3, [fp, #-16]
    163c:	str	r3, [fp, #-8]
    1640:	ldr	r3, [fp, #-8]
    1644:	mov	r2, #0
    1648:	str	r2, [r3, #12]
    164c:	mov	r3, #0
    1650:	mov	r0, r3
    1654:	add	sp, fp, #0
    1658:	pop	{fp}		; (ldr fp, [sp], #4)
    165c:	bx	lr

00001660 <ipfw_daq_check_status>:
    1660:	push	{fp}		; (str fp, [sp, #-4]!)
    1664:	add	fp, sp, #0
    1668:	sub	sp, sp, #20
    166c:	str	r0, [fp, #-16]
    1670:	ldr	r3, [fp, #-16]
    1674:	str	r3, [fp, #-8]
    1678:	ldr	r3, [fp, #-8]
    167c:	ldr	r3, [r3, #316]	; 0x13c
    1680:	mov	r0, r3
    1684:	add	sp, fp, #0
    1688:	pop	{fp}		; (ldr fp, [sp], #4)
    168c:	bx	lr

00001690 <ipfw_daq_get_stats>:
    1690:	push	{fp, lr}
    1694:	add	fp, sp, #4
    1698:	sub	sp, sp, #16
    169c:	str	r0, [fp, #-16]
    16a0:	str	r1, [fp, #-20]	; 0xffffffec
    16a4:	ldr	r3, [fp, #-16]
    16a8:	str	r3, [fp, #-8]
    16ac:	ldr	r2, [fp, #-20]	; 0xffffffec
    16b0:	ldr	r3, [fp, #-8]
    16b4:	mov	r0, r2
    16b8:	add	r3, r3, #320	; 0x140
    16bc:	mov	r2, #96	; 0x60
    16c0:	mov	r1, r3
    16c4:	bl	6dc <memcpy@plt>
    16c8:	mov	r3, #0
    16cc:	mov	r0, r3
    16d0:	sub	sp, fp, #4
    16d4:	pop	{fp, pc}

000016d8 <ipfw_daq_reset_stats>:
    16d8:	push	{fp, lr}
    16dc:	add	fp, sp, #4
    16e0:	sub	sp, sp, #16
    16e4:	str	r0, [fp, #-16]
    16e8:	ldr	r3, [fp, #-16]
    16ec:	str	r3, [fp, #-8]
    16f0:	ldr	r3, [fp, #-8]
    16f4:	add	r3, r3, #320	; 0x140
    16f8:	mov	r2, #96	; 0x60
    16fc:	mov	r1, #0
    1700:	mov	r0, r3
    1704:	bl	778 <memset@plt>
    1708:	nop			; (mov r0, r0)
    170c:	sub	sp, fp, #4
    1710:	pop	{fp, pc}

00001714 <ipfw_daq_get_snaplen>:
    1714:	push	{fp}		; (str fp, [sp, #-4]!)
    1718:	add	fp, sp, #0
    171c:	sub	sp, sp, #20
    1720:	str	r0, [fp, #-16]
    1724:	ldr	r3, [fp, #-16]
    1728:	str	r3, [fp, #-8]
    172c:	ldr	r3, [fp, #-8]
    1730:	ldr	r3, [r3, #24]
    1734:	mov	r0, r3
    1738:	add	sp, fp, #0
    173c:	pop	{fp}		; (ldr fp, [sp], #4)
    1740:	bx	lr

00001744 <ipfw_daq_get_capabilities>:
    1744:	push	{fp}		; (str fp, [sp, #-4]!)
    1748:	add	fp, sp, #0
    174c:	sub	sp, sp, #12
    1750:	str	r0, [fp, #-8]
    1754:	ldr	r3, [pc, #12]	; 1768 <ipfw_daq_get_capabilities+0x24>
    1758:	mov	r0, r3
    175c:	add	sp, fp, #0
    1760:	pop	{fp}		; (ldr fp, [sp], #4)
    1764:	bx	lr
    1768:	.word	0x000002e7

0000176c <ipfw_daq_get_datalink_type>:
    176c:	push	{fp}		; (str fp, [sp, #-4]!)
    1770:	add	fp, sp, #0
    1774:	sub	sp, sp, #12
    1778:	str	r0, [fp, #-8]
    177c:	mov	r3, #228	; 0xe4
    1780:	mov	r0, r3
    1784:	add	sp, fp, #0
    1788:	pop	{fp}		; (ldr fp, [sp], #4)
    178c:	bx	lr

00001790 <ipfw_daq_get_errbuf>:
    1790:	push	{fp}		; (str fp, [sp, #-4]!)
    1794:	add	fp, sp, #0
    1798:	sub	sp, sp, #20
    179c:	str	r0, [fp, #-16]
    17a0:	ldr	r3, [fp, #-16]
    17a4:	str	r3, [fp, #-8]
    17a8:	ldr	r3, [fp, #-8]
    17ac:	add	r3, r3, #36	; 0x24
    17b0:	mov	r0, r3
    17b4:	add	sp, fp, #0
    17b8:	pop	{fp}		; (ldr fp, [sp], #4)
    17bc:	bx	lr

000017c0 <ipfw_daq_set_errbuf>:
    17c0:	push	{fp, lr}
    17c4:	add	fp, sp, #4
    17c8:	sub	sp, sp, #16
    17cc:	str	r0, [fp, #-16]
    17d0:	str	r1, [fp, #-20]	; 0xffffffec
    17d4:	ldr	r3, [fp, #-16]
    17d8:	str	r3, [fp, #-8]
    17dc:	ldr	r3, [fp, #-8]
    17e0:	add	r0, r3, #36	; 0x24
    17e4:	ldr	r3, [fp, #-20]	; 0xffffffec
    17e8:	cmp	r3, #0
    17ec:	beq	17f8 <ipfw_daq_set_errbuf+0x38>
    17f0:	ldr	r3, [fp, #-20]	; 0xffffffec
    17f4:	b	1800 <ipfw_daq_set_errbuf+0x40>
    17f8:	ldr	r3, [pc, #28]	; 181c <ipfw_daq_set_errbuf+0x5c>
    17fc:	add	r3, pc, r3
    1800:	ldr	r2, [pc, #24]	; 1820 <ipfw_daq_set_errbuf+0x60>
    1804:	add	r2, pc, r2
    1808:	mov	r1, #256	; 0x100
    180c:	bl	760 <snprintf@plt>
    1810:	nop			; (mov r0, r0)
    1814:	sub	sp, fp, #4
    1818:	pop	{fp, pc}
    181c:	.word	0x000001e4
    1820:	.word	0x000001e0

00001824 <ipfw_daq_get_device_index>:
    1824:	push	{fp}		; (str fp, [sp, #-4]!)
    1828:	add	fp, sp, #0
    182c:	sub	sp, sp, #12
    1830:	str	r0, [fp, #-8]
    1834:	str	r1, [fp, #-12]
    1838:	mvn	r3, #3
    183c:	mov	r0, r3
    1840:	add	sp, fp, #0
    1844:	pop	{fp}		; (ldr fp, [sp], #4)
    1848:	bx	lr

Disassembly of section .fini:

0000184c <_fini>:
    184c:	push	{r3, lr}
    1850:	pop	{r3, pc}
