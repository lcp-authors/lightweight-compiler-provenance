
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000114ac <.init>:
   114ac:	push	{r3, lr}
   114b0:	bl	11904 <sprintf@plt+0x48>
   114b4:	pop	{r3, pc}

Disassembly of section .plt:

000114b8 <sigemptyset@plt-0x14>:
   114b8:	push	{lr}		; (str lr, [sp, #-4]!)
   114bc:	ldr	lr, [pc, #4]	; 114c8 <sigemptyset@plt-0x4>
   114c0:	add	lr, pc, lr
   114c4:	ldr	pc, [lr, #8]!
   114c8:	andeq	r8, r1, r8, lsr fp

000114cc <sigemptyset@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #24, 20	; 0x18000
   114d4:	ldr	pc, [ip, #2872]!	; 0xb38

000114d8 <strerror@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #24, 20	; 0x18000
   114e0:	ldr	pc, [ip, #2864]!	; 0xb30

000114e4 <rb_helper_loop@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #24, 20	; 0x18000
   114ec:	ldr	pc, [ip, #2856]!	; 0xb28

000114f0 <abort@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #24, 20	; 0x18000
   114f8:	ldr	pc, [ip, #2848]!	; 0xb20

000114fc <rb_event_addish@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #24, 20	; 0x18000
   11504:	ldr	pc, [ip, #2840]!	; 0xb18

00011508 <getsockname@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #24, 20	; 0x18000
   11510:	ldr	pc, [ip, #2832]!	; 0xb10

00011514 <rb_ignore_errno@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #24, 20	; 0x18000
   1151c:	ldr	pc, [ip, #2824]!	; 0xb08

00011520 <rb_connect_tcp_ssl@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #24, 20	; 0x18000
   11528:	ldr	pc, [ip, #2816]!	; 0xb00

0001152c <rb_connect_tcp@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #24, 20	; 0x18000
   11534:	ldr	pc, [ip, #2808]!	; 0xaf8

00011538 <__libc_start_main@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #24, 20	; 0x18000
   11540:	ldr	pc, [ip, #2800]!	; 0xaf0

00011544 <rb_event_delete@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #24, 20	; 0x18000
   1154c:	ldr	pc, [ip, #2792]!	; 0xae8

00011550 <rb_setselect@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #24, 20	; 0x18000
   11558:	ldr	pc, [ip, #2784]!	; 0xae0

0001155c <rb_get_fd@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #24, 20	; 0x18000
   11564:	ldr	pc, [ip, #2776]!	; 0xad8

00011568 <__gmon_start__@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #24, 20	; 0x18000
   11570:	ldr	pc, [ip, #2768]!	; 0xad0

00011574 <vsnprintf@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #24, 20	; 0x18000
   1157c:	ldr	pc, [ip, #2760]!	; 0xac8

00011580 <rb_socket@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #24, 20	; 0x18000
   11588:	ldr	pc, [ip, #2752]!	; 0xac0

0001158c <fclose@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #24, 20	; 0x18000
   11594:	ldr	pc, [ip, #2744]!	; 0xab8

00011598 <rb_strtok_r@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #24, 20	; 0x18000
   115a0:	ldr	pc, [ip, #2736]!	; 0xab0

000115a4 <strchr@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #24, 20	; 0x18000
   115ac:	ldr	pc, [ip, #2728]!	; 0xaa8

000115b0 <rb_dictionary_foreach_cur@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #24, 20	; 0x18000
   115b8:	ldr	pc, [ip, #2720]!	; 0xaa0

000115bc <strcasecmp@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #24, 20	; 0x18000
   115c4:	ldr	pc, [ip, #2712]!	; 0xa98

000115c8 <calloc@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #24, 20	; 0x18000
   115d0:	ldr	pc, [ip, #2704]!	; 0xa90

000115d4 <rb_helper_child@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #24, 20	; 0x18000
   115dc:	ldr	pc, [ip, #2696]!	; 0xa88

000115e0 <sendto@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #24, 20	; 0x18000
   115e8:	ldr	pc, [ip, #2688]!	; 0xa80

000115ec <fopen@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #24, 20	; 0x18000
   115f4:	ldr	pc, [ip, #2680]!	; 0xa78

000115f8 <memset@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #24, 20	; 0x18000
   11600:	ldr	pc, [ip, #2672]!	; 0xa70

00011604 <freeaddrinfo@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #24, 20	; 0x18000
   1160c:	ldr	pc, [ip, #2664]!	; 0xa68

00011610 <strrchr@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #24, 20	; 0x18000
   11618:	ldr	pc, [ip, #2656]!	; 0xa60

0001161c <rb_write@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #24, 20	; 0x18000
   11624:	ldr	pc, [ip, #2648]!	; 0xa58

00011628 <__assert_fail@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #24, 20	; 0x18000
   11630:	ldr	pc, [ip, #2640]!	; 0xa50

00011634 <fgets_unlocked@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #24, 20	; 0x18000
   1163c:	ldr	pc, [ip, #2632]!	; 0xa48

00011640 <rb_strlcpy@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #24, 20	; 0x18000
   11648:	ldr	pc, [ip, #2624]!	; 0xa40

0001164c <strtoull@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #24, 20	; 0x18000
   11654:	ldr	pc, [ip, #2616]!	; 0xa38

00011658 <rb_dictionary_foreach_next@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #24, 20	; 0x18000
   11660:	ldr	pc, [ip, #2608]!	; 0xa30

00011664 <free@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #24, 20	; 0x18000
   1166c:	ldr	pc, [ip, #2600]!	; 0xa28

00011670 <rb_string_to_array@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #24, 20	; 0x18000
   11678:	ldr	pc, [ip, #2592]!	; 0xa20

0001167c <rb_read@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #24, 20	; 0x18000
   11684:	ldr	pc, [ip, #2584]!	; 0xa18

00011688 <rb_strcasecmp@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #24, 20	; 0x18000
   11690:	ldr	pc, [ip, #2576]!	; 0xa10

00011694 <getaddrinfo@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #24, 20	; 0x18000
   1169c:	ldr	pc, [ip, #2568]!	; 0xa08

000116a0 <rb_dictionary_foreach_start@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #24, 20	; 0x18000
   116a8:	ldr	pc, [ip, #2560]!	; 0xa00

000116ac <rb_inet_pton_sock@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #24, 20	; 0x18000
   116b4:	ldr	pc, [ip, #2552]!	; 0x9f8

000116b8 <strlen@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #24, 20	; 0x18000
   116c0:	ldr	pc, [ip, #2544]!	; 0x9f0

000116c4 <rb_current_time@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #24, 20	; 0x18000
   116cc:	ldr	pc, [ip, #2536]!	; 0x9e8

000116d0 <rb_dictionary_delete@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #24, 20	; 0x18000
   116d8:	ldr	pc, [ip, #2528]!	; 0x9e0

000116dc <memcpy@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #24, 20	; 0x18000
   116e4:	ldr	pc, [ip, #2520]!	; 0x9d8

000116e8 <rb_free_rb_dlink_node@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #24, 20	; 0x18000
   116f0:	ldr	pc, [ip, #2512]!	; 0x9d0

000116f4 <bcmp@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #24, 20	; 0x18000
   116fc:	ldr	pc, [ip, #2504]!	; 0x9c8

00011700 <rb_close@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #24, 20	; 0x18000
   11708:	ldr	pc, [ip, #2496]!	; 0x9c0

0001170c <strtol@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #24, 20	; 0x18000
   11714:	ldr	pc, [ip, #2488]!	; 0x9b8

00011718 <sigaddset@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #24, 20	; 0x18000
   11720:	ldr	pc, [ip, #2480]!	; 0x9b0

00011724 <strcpy@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #24, 20	; 0x18000
   1172c:	ldr	pc, [ip, #2472]!	; 0x9a8

00011730 <atoi@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #24, 20	; 0x18000
   11738:	ldr	pc, [ip, #2464]!	; 0x9a0

0001173c <rb_dictionary_destroy@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #24, 20	; 0x18000
   11744:	ldr	pc, [ip, #2456]!	; 0x998

00011748 <bind@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #24, 20	; 0x18000
   11750:	ldr	pc, [ip, #2448]!	; 0x990

00011754 <strstr@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #24, 20	; 0x18000
   1175c:	ldr	pc, [ip, #2440]!	; 0x988

00011760 <fwrite@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #24, 20	; 0x18000
   11768:	ldr	pc, [ip, #2432]!	; 0x980

0001176c <rb_init_prng@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #24, 20	; 0x18000
   11774:	ldr	pc, [ip, #2424]!	; 0x978

00011778 <rb_dictionary_retrieve@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #24, 20	; 0x18000
   11780:	ldr	pc, [ip, #2416]!	; 0x970

00011784 <rb_outofmemory@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #24, 20	; 0x18000
   1178c:	ldr	pc, [ip, #2408]!	; 0x968

00011790 <__ctype_b_loc@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #24, 20	; 0x18000
   11798:	ldr	pc, [ip, #2400]!	; 0x960

0001179c <rb_dictionary_add@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #24, 20	; 0x18000
   117a4:	ldr	pc, [ip, #2392]!	; 0x958

000117a8 <rb_set_time@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #24, 20	; 0x18000
   117b0:	ldr	pc, [ip, #2384]!	; 0x950

000117b4 <malloc@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #24, 20	; 0x18000
   117bc:	ldr	pc, [ip, #2376]!	; 0x948

000117c0 <sigaction@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #24, 20	; 0x18000
   117c8:	ldr	pc, [ip, #2368]!	; 0x940

000117cc <rb_helper_read@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #24, 20	; 0x18000
   117d4:	ldr	pc, [ip, #2360]!	; 0x938

000117d8 <rb_inet_ntop_sock@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #24, 20	; 0x18000
   117e0:	ldr	pc, [ip, #2352]!	; 0x930

000117e4 <rb_dictionary_find@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #24, 20	; 0x18000
   117ec:	ldr	pc, [ip, #2344]!	; 0x928

000117f0 <rb_dictionary_create@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #24, 20	; 0x18000
   117f8:	ldr	pc, [ip, #2336]!	; 0x920

000117fc <memmove@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #24, 20	; 0x18000
   11804:	ldr	pc, [ip, #2328]!	; 0x918

00011808 <rb_accept_tcp@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #24, 20	; 0x18000
   11810:	ldr	pc, [ip, #2320]!	; 0x910

00011814 <rb_helper_write@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #24, 20	; 0x18000
   1181c:	ldr	pc, [ip, #2312]!	; 0x908

00011820 <rb_event_add@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #24, 20	; 0x18000
   11828:	ldr	pc, [ip, #2304]!	; 0x900

0001182c <rb_get_random@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #24, 20	; 0x18000
   11834:	ldr	pc, [ip, #2296]!	; 0x8f8

00011838 <rb_make_rb_dlink_node@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #24, 20	; 0x18000
   11840:	ldr	pc, [ip, #2288]!	; 0x8f0

00011844 <snprintf@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #24, 20	; 0x18000
   1184c:	ldr	pc, [ip, #2280]!	; 0x8e8

00011850 <rb_listen@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #24, 20	; 0x18000
   11858:	ldr	pc, [ip, #2272]!	; 0x8e0

0001185c <strncmp@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #24, 20	; 0x18000
   11864:	ldr	pc, [ip, #2264]!	; 0x8d8

00011868 <recvfrom@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #24, 20	; 0x18000
   11870:	ldr	pc, [ip, #2256]!	; 0x8d0

00011874 <setsockopt@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #24, 20	; 0x18000
   1187c:	ldr	pc, [ip, #2248]!	; 0x8c8

00011880 <strpbrk@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #24, 20	; 0x18000
   11888:	ldr	pc, [ip, #2240]!	; 0x8c0

0001188c <memchr@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #24, 20	; 0x18000
   11894:	ldr	pc, [ip, #2232]!	; 0x8b8

00011898 <strcmp@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #24, 20	; 0x18000
   118a0:	ldr	pc, [ip, #2224]!	; 0x8b0

000118a4 <exit@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #24, 20	; 0x18000
   118ac:	ldr	pc, [ip, #2216]!	; 0x8a8

000118b0 <__errno_location@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #24, 20	; 0x18000
   118b8:	ldr	pc, [ip, #2208]!	; 0x8a0

000118bc <sprintf@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #24, 20	; 0x18000
   118c4:	ldr	pc, [ip, #2200]!	; 0x898

Disassembly of section .text:

000118c8 <.text>:
   118c8:	mov	fp, #0
   118cc:	mov	lr, #0
   118d0:	pop	{r1}		; (ldr r1, [sp], #4)
   118d4:	mov	r2, sp
   118d8:	push	{r2}		; (str r2, [sp, #-4]!)
   118dc:	push	{r0}		; (str r0, [sp, #-4]!)
   118e0:	ldr	ip, [pc, #16]	; 118f8 <sprintf@plt+0x3c>
   118e4:	push	{ip}		; (str ip, [sp, #-4]!)
   118e8:	ldr	r0, [pc, #12]	; 118fc <sprintf@plt+0x40>
   118ec:	ldr	r3, [pc, #12]	; 11900 <sprintf@plt+0x44>
   118f0:	bl	11538 <__libc_start_main@plt>
   118f4:	bl	114f0 <abort@plt>
   118f8:	andeq	r7, r1, r8, lsr #31
   118fc:	andeq	r1, r1, r4, lsr fp
   11900:	andeq	r7, r1, r8, asr #30
   11904:	ldr	r3, [pc, #20]	; 11920 <sprintf@plt+0x64>
   11908:	ldr	r2, [pc, #20]	; 11924 <sprintf@plt+0x68>
   1190c:	add	r3, pc, r3
   11910:	ldr	r2, [r3, r2]
   11914:	cmp	r2, #0
   11918:	bxeq	lr
   1191c:	b	11568 <__gmon_start__@plt>
   11920:	andeq	r8, r1, ip, ror #13
   11924:	andeq	r0, r0, r0, ror #2
   11928:	ldr	r0, [pc, #24]	; 11948 <sprintf@plt+0x8c>
   1192c:	ldr	r3, [pc, #24]	; 1194c <sprintf@plt+0x90>
   11930:	cmp	r3, r0
   11934:	bxeq	lr
   11938:	ldr	r3, [pc, #16]	; 11950 <sprintf@plt+0x94>
   1193c:	cmp	r3, #0
   11940:	bxeq	lr
   11944:	bx	r3
   11948:	andeq	sl, r2, r8, asr #30
   1194c:	andeq	sl, r2, r8, asr #30
   11950:	andeq	r0, r0, r0
   11954:	ldr	r0, [pc, #36]	; 11980 <sprintf@plt+0xc4>
   11958:	ldr	r1, [pc, #36]	; 11984 <sprintf@plt+0xc8>
   1195c:	sub	r1, r1, r0
   11960:	asr	r1, r1, #2
   11964:	add	r1, r1, r1, lsr #31
   11968:	asrs	r1, r1, #1
   1196c:	bxeq	lr
   11970:	ldr	r3, [pc, #16]	; 11988 <sprintf@plt+0xcc>
   11974:	cmp	r3, #0
   11978:	bxeq	lr
   1197c:	bx	r3
   11980:	andeq	sl, r2, r8, asr #30
   11984:	andeq	sl, r2, r8, asr #30
   11988:	andeq	r0, r0, r0
   1198c:	push	{r4, lr}
   11990:	ldr	r4, [pc, #24]	; 119b0 <sprintf@plt+0xf4>
   11994:	ldrb	r3, [r4]
   11998:	cmp	r3, #0
   1199c:	popne	{r4, pc}
   119a0:	bl	11928 <sprintf@plt+0x6c>
   119a4:	mov	r3, #1
   119a8:	strb	r3, [r4]
   119ac:	pop	{r4, pc}
   119b0:	andeq	sl, r2, ip, asr #30
   119b4:	b	11954 <sprintf@plt+0x98>
   119b8:	push	{r4, r5, fp, lr}
   119bc:	add	fp, sp, #8
   119c0:	mov	r4, r0
   119c4:	cmp	r0, #1
   119c8:	bgt	119e0 <sprintf@plt+0x124>
   119cc:	movw	r1, #32891	; 0x807b
   119d0:	mov	r0, #67	; 0x43
   119d4:	mov	r2, r4
   119d8:	movt	r1, #1
   119dc:	b	11a38 <sprintf@plt+0x17c>
   119e0:	movw	r0, #61816	; 0xf178
   119e4:	mov	r5, r1
   119e8:	ldr	r1, [r1, #4]
   119ec:	movt	r0, #2
   119f0:	ldr	r0, [r0]
   119f4:	bl	11778 <rb_dictionary_retrieve@plt>
   119f8:	cmp	r0, #0
   119fc:	beq	11a28 <sprintf@plt+0x16c>
   11a00:	ldr	r2, [r0, #4]
   11a04:	sub	r1, r4, #2
   11a08:	cmp	r1, r2
   11a0c:	bge	11a40 <sprintf@plt+0x184>
   11a10:	movw	r1, #33014	; 0x80f6
   11a14:	mov	r0, #67	; 0x43
   11a18:	mov	r3, r4
   11a1c:	movt	r1, #1
   11a20:	pop	{r4, r5, fp, lr}
   11a24:	b	123c0 <sprintf@plt+0xb04>
   11a28:	ldr	r2, [r5, #4]
   11a2c:	movw	r1, #32969	; 0x80c9
   11a30:	mov	r0, #67	; 0x43
   11a34:	movt	r1, #1
   11a38:	pop	{r4, r5, fp, lr}
   11a3c:	b	123c0 <sprintf@plt+0xb04>
   11a40:	ldr	r3, [r5, #4]
   11a44:	ldr	ip, [r0, #8]
   11a48:	add	r2, r5, #8
   11a4c:	mov	r0, r3
   11a50:	pop	{r4, r5, fp, lr}
   11a54:	bx	ip
   11a58:	push	{r4, r5, fp, lr}
   11a5c:	add	fp, sp, #8
   11a60:	cmp	r0, #2
   11a64:	bgt	11a98 <sprintf@plt+0x1dc>
   11a68:	movw	r5, #43372	; 0xa96c
   11a6c:	mov	r4, #0
   11a70:	movt	r5, #2
   11a74:	ldr	r1, [r5, r4, lsl #2]
   11a78:	cmp	r1, #0
   11a7c:	beq	11a88 <sprintf@plt+0x1cc>
   11a80:	mov	r0, #0
   11a84:	blx	r1
   11a88:	add	r4, r4, #1
   11a8c:	cmp	r4, #256	; 0x100
   11a90:	bne	11a74 <sprintf@plt+0x1b8>
   11a94:	pop	{r4, r5, fp, pc}
   11a98:	ldr	r0, [r1, #4]
   11a9c:	movw	r1, #43372	; 0xa96c
   11aa0:	movt	r1, #2
   11aa4:	ldrb	r0, [r0]
   11aa8:	ldr	r1, [r1, r0, lsl #2]
   11aac:	cmp	r1, #0
   11ab0:	popeq	{r4, r5, fp, pc}
   11ab4:	pop	{r4, r5, fp, lr}
   11ab8:	bx	r1
   11abc:	push	{r4, sl, fp, lr}
   11ac0:	add	fp, sp, #8
   11ac4:	cmp	r0, #2
   11ac8:	bgt	11adc <sprintf@plt+0x220>
   11acc:	movw	r1, #32766	; 0x7ffe
   11ad0:	mov	r2, r0
   11ad4:	movt	r1, #1
   11ad8:	b	11b04 <sprintf@plt+0x248>
   11adc:	ldr	r0, [r1, #4]
   11ae0:	mov	r4, r1
   11ae4:	mov	r1, #0
   11ae8:	mov	r2, #16
   11aec:	bl	1164c <strtoull@plt>
   11af0:	cmp	r1, #0
   11af4:	beq	11b10 <sprintf@plt+0x254>
   11af8:	ldr	r2, [r4, #4]
   11afc:	movw	r1, #32841	; 0x8049
   11b00:	movt	r1, #1
   11b04:	mov	r0, #67	; 0x43
   11b08:	pop	{r4, sl, fp, lr}
   11b0c:	b	123c0 <sprintf@plt+0xb04>
   11b10:	ldr	r1, [r4, #8]
   11b14:	movw	r2, #42348	; 0xa56c
   11b18:	movt	r2, #2
   11b1c:	ldrb	r1, [r1]
   11b20:	ldr	r2, [r2, r1, lsl #2]
   11b24:	cmp	r2, #0
   11b28:	popeq	{r4, sl, fp, pc}
   11b2c:	pop	{r4, sl, fp, lr}
   11b30:	bx	r2
   11b34:	push	{fp, lr}
   11b38:	mov	fp, sp
   11b3c:	sub	sp, sp, #16
   11b40:	bl	11bfc <sprintf@plt+0x340>
   11b44:	mov	r0, #256	; 0x100
   11b48:	mov	r1, #0
   11b4c:	mov	r2, #0
   11b50:	mov	r3, #0
   11b54:	str	r1, [sp]
   11b58:	movw	r1, #7480	; 0x1d38
   11b5c:	str	r0, [sp, #4]
   11b60:	str	r0, [sp, #8]
   11b64:	str	r0, [sp, #12]
   11b68:	movw	r0, #7340	; 0x1cac
   11b6c:	movt	r0, #1
   11b70:	movt	r1, #1
   11b74:	bl	115d4 <rb_helper_child@plt>
   11b78:	movw	r4, #44880	; 0xaf50
   11b7c:	cmp	r0, #0
   11b80:	movt	r4, #2
   11b84:	str	r0, [r4]
   11b88:	bne	11bb4 <sprintf@plt+0x2f8>
   11b8c:	movw	r0, #44872	; 0xaf48
   11b90:	mov	r1, #46	; 0x2e
   11b94:	mov	r2, #1
   11b98:	movt	r0, #2
   11b9c:	ldr	r3, [r0]
   11ba0:	movw	r0, #32696	; 0x7fb8
   11ba4:	movt	r0, #1
   11ba8:	bl	11760 <fwrite@plt>
   11bac:	mov	r0, #1
   11bb0:	bl	118a4 <exit@plt>
   11bb4:	bl	117a8 <rb_set_time@plt>
   11bb8:	bl	11bfc <sprintf@plt+0x340>
   11bbc:	movw	r0, #32743	; 0x7fe7
   11bc0:	movw	r1, #5768	; 0x1688
   11bc4:	movt	r0, #1
   11bc8:	movt	r1, #1
   11bcc:	bl	117f0 <rb_dictionary_create@plt>
   11bd0:	movw	r1, #61816	; 0xf178
   11bd4:	movt	r1, #2
   11bd8:	str	r0, [r1]
   11bdc:	bl	13138 <sprintf@plt+0x187c>
   11be0:	bl	1251c <sprintf@plt+0xc60>
   11be4:	mov	r0, #0
   11be8:	mov	r1, #1
   11bec:	bl	1176c <rb_init_prng@plt>
   11bf0:	ldr	r0, [r4]
   11bf4:	mov	r1, #0
   11bf8:	bl	114e4 <rb_helper_loop@plt>
   11bfc:	push	{r4, r5, fp, lr}
   11c00:	add	fp, sp, #8
   11c04:	sub	sp, sp, #144	; 0x90
   11c08:	mov	r0, #1
   11c0c:	add	r4, sp, #4
   11c10:	str	r0, [sp, #4]
   11c14:	mov	r0, #0
   11c18:	add	r5, r4, #4
   11c1c:	str	r0, [sp, #136]	; 0x88
   11c20:	mov	r0, r5
   11c24:	bl	114cc <sigemptyset@plt>
   11c28:	mov	r0, r5
   11c2c:	mov	r1, #13
   11c30:	bl	11718 <sigaddset@plt>
   11c34:	mov	r0, r5
   11c38:	mov	r1, #14
   11c3c:	bl	11718 <sigaddset@plt>
   11c40:	mov	r0, r5
   11c44:	mov	r1, #5
   11c48:	bl	11718 <sigaddset@plt>
   11c4c:	mov	r0, r5
   11c50:	mov	r1, #28
   11c54:	bl	11718 <sigaddset@plt>
   11c58:	mov	r0, #28
   11c5c:	mov	r1, r4
   11c60:	mov	r2, #0
   11c64:	bl	117c0 <sigaction@plt>
   11c68:	mov	r0, #13
   11c6c:	mov	r1, r4
   11c70:	mov	r2, #0
   11c74:	bl	117c0 <sigaction@plt>
   11c78:	mov	r0, #5
   11c7c:	mov	r1, r4
   11c80:	mov	r2, #0
   11c84:	bl	117c0 <sigaction@plt>
   11c88:	movw	r0, #7496	; 0x1d48
   11c8c:	mov	r1, r4
   11c90:	mov	r2, #0
   11c94:	movt	r0, #1
   11c98:	str	r0, [sp, #4]
   11c9c:	mov	r0, #14
   11ca0:	bl	117c0 <sigaction@plt>
   11ca4:	sub	sp, fp, #8
   11ca8:	pop	{r4, r5, fp, pc}
   11cac:	push	{r4, r5, r6, r7, fp, lr}
   11cb0:	add	fp, sp, #16
   11cb4:	movw	r1, #44928	; 0xaf80
   11cb8:	mov	r2, #16384	; 0x4000
   11cbc:	mov	r4, r0
   11cc0:	movt	r1, #2
   11cc4:	bl	117cc <rb_helper_read@plt>
   11cc8:	cmp	r0, #1
   11ccc:	blt	11d34 <sprintf@plt+0x478>
   11cd0:	movw	r5, #44928	; 0xaf80
   11cd4:	movw	r6, #44884	; 0xaf54
   11cd8:	movw	r7, #41324	; 0xa16c
   11cdc:	movt	r5, #2
   11ce0:	movt	r6, #2
   11ce4:	movt	r7, #2
   11ce8:	mov	r0, r5
   11cec:	mov	r1, r6
   11cf0:	mov	r2, #10
   11cf4:	bl	11670 <rb_string_to_array@plt>
   11cf8:	cmp	r0, #1
   11cfc:	blt	11d1c <sprintf@plt+0x460>
   11d00:	ldr	r1, [r6]
   11d04:	ldrb	r1, [r1]
   11d08:	ldr	r2, [r7, r1, lsl #2]
   11d0c:	cmp	r2, #0
   11d10:	beq	11d1c <sprintf@plt+0x460>
   11d14:	mov	r1, r6
   11d18:	blx	r2
   11d1c:	mov	r0, r4
   11d20:	mov	r1, r5
   11d24:	mov	r2, #16384	; 0x4000
   11d28:	bl	117cc <rb_helper_read@plt>
   11d2c:	cmp	r0, #0
   11d30:	bgt	11ce8 <sprintf@plt+0x42c>
   11d34:	pop	{r4, r5, r6, r7, fp, pc}
   11d38:	push	{fp, lr}
   11d3c:	mov	fp, sp
   11d40:	mov	r0, #1
   11d44:	bl	118a4 <exit@plt>
   11d48:	bx	lr
   11d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d50:	add	fp, sp, #24
   11d54:	mov	r6, r1
   11d58:	mov	r8, r0
   11d5c:	mov	r0, #1
   11d60:	mov	r1, #160	; 0xa0
   11d64:	mov	r9, r3
   11d68:	mov	r7, r2
   11d6c:	mov	r5, #1
   11d70:	bl	115c8 <calloc@plt>
   11d74:	cmp	r0, #0
   11d78:	beq	11e00 <sprintf@plt+0x544>
   11d7c:	mov	r4, r0
   11d80:	cmp	r6, #2
   11d84:	beq	11d9c <sprintf@plt+0x4e0>
   11d88:	cmp	r6, #10
   11d8c:	bne	11dec <sprintf@plt+0x530>
   11d90:	mov	r5, #28
   11d94:	mov	r0, #54	; 0x36
   11d98:	b	11da0 <sprintf@plt+0x4e4>
   11d9c:	mov	r0, #52	; 0x34
   11da0:	str	r0, [r4, #8]
   11da4:	movw	r0, #61312	; 0xef80
   11da8:	movt	r0, #2
   11dac:	ldrd	r2, [r0]
   11db0:	adds	r6, r2, #1
   11db4:	adc	r1, r3, #0
   11db8:	str	r6, [r0]
   11dbc:	str	r1, [r0, #4]
   11dc0:	add	r0, r4, #144	; 0x90
   11dc4:	mov	r1, r4
   11dc8:	stm	r0, {r2, r3, r7, r9}
   11dcc:	movw	r0, #7684	; 0x1e04
   11dd0:	mov	r2, r5
   11dd4:	movt	r0, #1
   11dd8:	str	r0, [r4, #4]
   11ddc:	mov	r0, r8
   11de0:	str	r4, [r4]
   11de4:	bl	1322c <sprintf@plt+0x1970>
   11de8:	b	11df8 <sprintf@plt+0x53c>
   11dec:	mov	r0, r4
   11df0:	bl	11664 <free@plt>
   11df4:	mov	r4, #0
   11df8:	mov	r0, r4
   11dfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11e00:	bl	11784 <rb_outofmemory@plt>
   11e04:	push	{r4, r5, fp, lr}
   11e08:	add	fp, sp, #8
   11e0c:	sub	sp, sp, #56	; 0x38
   11e10:	vmov.i32	q8, #0	; 0x00000000
   11e14:	mov	r4, r0
   11e18:	mov	r0, sp
   11e1c:	add	r2, r0, #33	; 0x21
   11e20:	cmp	r4, #0
   11e24:	vst1.8	{d16-d17}, [r2]
   11e28:	add	r2, r0, #17
   11e2c:	orr	r0, r0, #1
   11e30:	vst1.8	{d16-d17}, [r0]
   11e34:	mov	r0, #0
   11e38:	vst1.8	{d16-d17}, [r2]
   11e3c:	str	r0, [sp, #49]	; 0x31
   11e40:	mov	r0, #42	; 0x2a
   11e44:	strb	r0, [sp]
   11e48:	beq	11f10 <sprintf@plt+0x654>
   11e4c:	cmp	r1, #0
   11e50:	beq	11ed8 <sprintf@plt+0x61c>
   11e54:	ldr	r2, [r4, #8]
   11e58:	cmp	r2, #54	; 0x36
   11e5c:	beq	11e8c <sprintf@plt+0x5d0>
   11e60:	cmp	r2, #52	; 0x34
   11e64:	bne	11f24 <sprintf@plt+0x668>
   11e68:	ldrh	r0, [r1, #4]!
   11e6c:	cmp	r0, #2
   11e70:	bne	11ed8 <sprintf@plt+0x61c>
   11e74:	mov	r2, sp
   11e78:	mov	r0, r1
   11e7c:	mov	r1, r2
   11e80:	mov	r2, #53	; 0x35
   11e84:	bl	117d8 <rb_inet_ntop_sock@plt>
   11e88:	b	11ed8 <sprintf@plt+0x61c>
   11e8c:	ldrh	r0, [r1, #4]!
   11e90:	cmp	r0, #10
   11e94:	bne	11ed8 <sprintf@plt+0x61c>
   11e98:	mov	r5, sp
   11e9c:	mov	r0, r1
   11ea0:	mov	r2, #53	; 0x35
   11ea4:	mov	r1, r5
   11ea8:	bl	117d8 <rb_inet_ntop_sock@plt>
   11eac:	ldrb	r0, [sp]
   11eb0:	cmp	r0, #58	; 0x3a
   11eb4:	bne	11ed8 <sprintf@plt+0x61c>
   11eb8:	mov	r0, r5
   11ebc:	bl	116b8 <strlen@plt>
   11ec0:	mov	r2, r0
   11ec4:	orr	r0, r5, #1
   11ec8:	mov	r1, r5
   11ecc:	bl	117fc <memmove@plt>
   11ed0:	mov	r0, #48	; 0x30
   11ed4:	strb	r0, [sp]
   11ed8:	ldr	r5, [r4, #152]	; 0x98
   11edc:	cmp	r5, #0
   11ee0:	beq	11f00 <sprintf@plt+0x644>
   11ee4:	ldrb	r0, [sp]
   11ee8:	ldr	r2, [r4, #8]
   11eec:	ldr	r3, [r4, #156]	; 0x9c
   11ef0:	subs	r1, r0, #42	; 0x2a
   11ef4:	mov	r0, sp
   11ef8:	movwne	r1, #1
   11efc:	blx	r5
   11f00:	mov	r0, r4
   11f04:	bl	11664 <free@plt>
   11f08:	sub	sp, fp, #8
   11f0c:	pop	{r4, r5, fp, pc}
   11f10:	movw	r1, #33221	; 0x81c5
   11f14:	mov	r0, #67	; 0x43
   11f18:	movt	r1, #1
   11f1c:	bl	123c0 <sprintf@plt+0xb04>
   11f20:	b	11f34 <sprintf@plt+0x678>
   11f24:	movw	r1, #33265	; 0x81f1
   11f28:	mov	r0, #67	; 0x43
   11f2c:	movt	r1, #1
   11f30:	bl	123c0 <sprintf@plt+0xb04>
   11f34:	mov	r0, #2
   11f38:	bl	118a4 <exit@plt>
   11f3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11f40:	add	fp, sp, #24
   11f44:	mov	r6, r1
   11f48:	mov	r5, r0
   11f4c:	mov	r0, #1
   11f50:	mov	r1, #160	; 0xa0
   11f54:	mov	r8, r2
   11f58:	bl	115c8 <calloc@plt>
   11f5c:	cmp	r0, #0
   11f60:	beq	11ff8 <sprintf@plt+0x73c>
   11f64:	add	r7, r0, #12
   11f68:	mov	r4, r0
   11f6c:	mov	r0, r5
   11f70:	mov	r1, r7
   11f74:	bl	116ac <rb_inet_pton_sock@plt>
   11f78:	cmp	r0, #0
   11f7c:	beq	11f9c <sprintf@plt+0x6e0>
   11f80:	ldrh	r0, [r7]
   11f84:	cmp	r0, #2
   11f88:	beq	11fac <sprintf@plt+0x6f0>
   11f8c:	cmp	r0, #10
   11f90:	bne	11f9c <sprintf@plt+0x6e0>
   11f94:	mov	r0, #83	; 0x53
   11f98:	b	11fb0 <sprintf@plt+0x6f4>
   11f9c:	mov	r0, r4
   11fa0:	bl	11664 <free@plt>
   11fa4:	mov	r4, #0
   11fa8:	b	11ff0 <sprintf@plt+0x734>
   11fac:	mov	r0, #82	; 0x52
   11fb0:	str	r0, [r4, #8]
   11fb4:	movw	r0, #61312	; 0xef80
   11fb8:	movt	r0, #2
   11fbc:	ldrd	r2, [r0]
   11fc0:	adds	r1, r2, #1
   11fc4:	adc	r5, r3, #0
   11fc8:	stm	r0, {r1, r5}
   11fcc:	add	r0, r4, #144	; 0x90
   11fd0:	mov	r1, r4
   11fd4:	stm	r0, {r2, r3, r6, r8}
   11fd8:	movw	r0, #8188	; 0x1ffc
   11fdc:	movt	r0, #1
   11fe0:	str	r0, [r4, #4]
   11fe4:	mov	r0, r7
   11fe8:	str	r4, [r4]
   11fec:	bl	13304 <sprintf@plt+0x1a48>
   11ff0:	mov	r0, r4
   11ff4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11ff8:	bl	11784 <rb_outofmemory@plt>
   11ffc:	push	{r4, r5, r6, sl, fp, lr}
   12000:	add	fp, sp, #16
   12004:	cmp	r0, #0
   12008:	beq	12098 <sprintf@plt+0x7dc>
   1200c:	mov	r6, r1
   12010:	mov	r4, r0
   12014:	mov	r5, #0
   12018:	cmp	r1, #0
   1201c:	beq	12064 <sprintf@plt+0x7a8>
   12020:	ldr	r2, [r4, #8]
   12024:	cmp	r2, #83	; 0x53
   12028:	beq	12048 <sprintf@plt+0x78c>
   1202c:	cmp	r2, #82	; 0x52
   12030:	bne	120ac <sprintf@plt+0x7f0>
   12034:	ldr	r0, [r6, #8]
   12038:	ldr	r1, [r4, #16]
   1203c:	cmp	r1, r0
   12040:	ldreq	r5, [r6]
   12044:	b	12064 <sprintf@plt+0x7a8>
   12048:	add	r0, r4, #20
   1204c:	add	r1, r6, #12
   12050:	mov	r2, #16
   12054:	bl	116f4 <bcmp@plt>
   12058:	cmp	r0, #0
   1205c:	bne	12064 <sprintf@plt+0x7a8>
   12060:	ldr	r5, [r6]
   12064:	ldr	r6, [r4, #152]	; 0x98
   12068:	cmp	r6, #0
   1206c:	beq	1208c <sprintf@plt+0x7d0>
   12070:	ldr	r2, [r4, #8]
   12074:	ldr	r3, [r4, #156]	; 0x9c
   12078:	cmp	r5, #0
   1207c:	mov	r1, r5
   12080:	mov	r0, r5
   12084:	movwne	r1, #1
   12088:	blx	r6
   1208c:	mov	r0, r4
   12090:	pop	{r4, r5, r6, sl, fp, lr}
   12094:	b	11664 <free@plt>
   12098:	movw	r1, #33316	; 0x8224
   1209c:	mov	r0, #67	; 0x43
   120a0:	movt	r1, #1
   120a4:	bl	123c0 <sprintf@plt+0xb04>
   120a8:	b	120bc <sprintf@plt+0x800>
   120ac:	movw	r1, #33366	; 0x8256
   120b0:	mov	r0, #67	; 0x43
   120b4:	movt	r1, #1
   120b8:	bl	123c0 <sprintf@plt+0xb04>
   120bc:	mov	r0, #2
   120c0:	bl	118a4 <exit@plt>
   120c4:	mov	r1, #0
   120c8:	str	r1, [r0, #152]	; 0x98
   120cc:	str	r1, [r0, #156]	; 0x9c
   120d0:	bx	lr
   120d4:	push	{r4, r5, r6, sl, fp, lr}
   120d8:	add	fp, sp, #16
   120dc:	ldr	r6, [r1, #4]
   120e0:	mov	r5, r1
   120e4:	mov	r0, r6
   120e8:	bl	116b8 <strlen@plt>
   120ec:	add	r0, r0, #1
   120f0:	bl	117b4 <malloc@plt>
   120f4:	cmp	r0, #0
   120f8:	beq	1217c <sprintf@plt+0x8c0>
   120fc:	mov	r1, r6
   12100:	mov	r4, r0
   12104:	bl	11724 <strcpy@plt>
   12108:	ldr	r1, [r5, #8]
   1210c:	ldr	r0, [r5, #12]
   12110:	ldrb	r2, [r1]
   12114:	sub	r1, r2, #82	; 0x52
   12118:	cmp	r1, #2
   1211c:	bcc	1214c <sprintf@plt+0x890>
   12120:	mov	r1, #2
   12124:	cmp	r2, #52	; 0x34
   12128:	beq	12138 <sprintf@plt+0x87c>
   1212c:	cmp	r2, #54	; 0x36
   12130:	bne	12180 <sprintf@plt+0x8c4>
   12134:	mov	r1, #10
   12138:	movw	r2, #8596	; 0x2194
   1213c:	mov	r3, r4
   12140:	movt	r2, #1
   12144:	bl	11d4c <sprintf@plt+0x490>
   12148:	b	1215c <sprintf@plt+0x8a0>
   1214c:	movw	r1, #8596	; 0x2194
   12150:	mov	r2, r4
   12154:	movt	r1, #1
   12158:	bl	11f3c <sprintf@plt+0x680>
   1215c:	cmp	r0, #0
   12160:	popne	{r4, r5, r6, sl, fp, pc}
   12164:	movw	r1, #33423	; 0x828f
   12168:	mov	r0, #67	; 0x43
   1216c:	movt	r1, #1
   12170:	bl	123c0 <sprintf@plt+0xb04>
   12174:	mov	r0, #2
   12178:	bl	118a4 <exit@plt>
   1217c:	bl	11784 <rb_outofmemory@plt>
   12180:	movw	r1, #33093	; 0x8145
   12184:	mov	r0, #67	; 0x43
   12188:	movt	r1, #1
   1218c:	bl	123c0 <sprintf@plt+0xb04>
   12190:	b	12174 <sprintf@plt+0x8b8>
   12194:	push	{r4, sl, fp, lr}
   12198:	add	fp, sp, #8
   1219c:	sub	sp, sp, #8
   121a0:	cmp	r2, #0
   121a4:	movne	r4, r3
   121a8:	cmpne	r3, #0
   121ac:	bne	121c8 <sprintf@plt+0x90c>
   121b0:	movw	r1, #33423	; 0x828f
   121b4:	mov	r0, #67	; 0x43
   121b8:	movt	r1, #1
   121bc:	bl	123c0 <sprintf@plt+0xb04>
   121c0:	mov	r0, #2
   121c4:	bl	118a4 <exit@plt>
   121c8:	mov	r3, r2
   121cc:	movw	r2, #44880	; 0xaf50
   121d0:	cmp	r0, #0
   121d4:	movt	r2, #2
   121d8:	cmpne	r1, #0
   121dc:	ldr	r2, [r2]
   121e0:	bne	121f0 <sprintf@plt+0x934>
   121e4:	movw	r1, #33466	; 0x82ba
   121e8:	movt	r1, #1
   121ec:	b	121fc <sprintf@plt+0x940>
   121f0:	movw	r1, #33478	; 0x82c6
   121f4:	str	r0, [sp]
   121f8:	movt	r1, #1
   121fc:	mov	r0, r2
   12200:	mov	r2, r4
   12204:	bl	11814 <rb_helper_write@plt>
   12208:	mov	r0, r4
   1220c:	sub	sp, fp, #8
   12210:	pop	{r4, sl, fp, lr}
   12214:	b	11664 <free@plt>
   12218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1221c:	add	fp, sp, #28
   12220:	sub	sp, sp, #612	; 0x264
   12224:	mov	r5, r0
   12228:	movw	r0, #61408	; 0xefe0
   1222c:	mov	r4, r1
   12230:	movt	r0, #2
   12234:	ldr	r0, [r0]
   12238:	cmp	r0, #0
   1223c:	beq	1232c <sprintf@plt+0xa70>
   12240:	cmp	r0, #1
   12244:	blt	122e4 <sprintf@plt+0xa28>
   12248:	movw	r6, #62112	; 0xf2a0
   1224c:	str	r4, [sp, #8]
   12250:	movw	r4, #33217	; 0x81c1
   12254:	mov	r9, #0
   12258:	add	r7, sp, #15
   1225c:	add	r8, sp, #68	; 0x44
   12260:	mov	sl, #0
   12264:	str	r5, [sp, #4]
   12268:	movt	r6, #2
   1226c:	movt	r4, #1
   12270:	mov	r0, r6
   12274:	mov	r1, r7
   12278:	mov	r2, #53	; 0x35
   1227c:	bl	117d8 <rb_inet_ntop_sock@plt>
   12280:	ldrb	r0, [sp, #15]
   12284:	cmp	r0, #0
   12288:	beq	12304 <sprintf@plt+0xa48>
   1228c:	mov	r0, r7
   12290:	bl	116b8 <strlen@plt>
   12294:	mov	r5, r0
   12298:	add	r0, r8, r9
   1229c:	rsb	r1, r9, #540	; 0x21c
   122a0:	mov	r2, r4
   122a4:	mov	r3, r7
   122a8:	bl	11844 <snprintf@plt>
   122ac:	movw	r1, #61408	; 0xefe0
   122b0:	add	r0, r9, r5
   122b4:	add	sl, sl, #1
   122b8:	add	r6, r6, #128	; 0x80
   122bc:	movt	r1, #2
   122c0:	add	r9, r0, #1
   122c4:	ldr	r1, [r1]
   122c8:	cmp	sl, r1
   122cc:	blt	12270 <sprintf@plt+0x9b4>
   122d0:	ldr	r4, [sp, #8]
   122d4:	ldr	r5, [sp, #4]
   122d8:	cmp	r9, #0
   122dc:	movne	r1, #0
   122e0:	strbne	r1, [r8, r0]
   122e4:	movw	r2, #36804	; 0x8fc4
   122e8:	add	r3, sp, #68	; 0x44
   122ec:	mov	r0, r5
   122f0:	mov	r1, r4
   122f4:	movt	r2, #1
   122f8:	bl	1242c <sprintf@plt+0xb70>
   122fc:	sub	sp, fp, #28
   12300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12304:	movw	r1, #33178	; 0x819a
   12308:	mov	r0, #67	; 0x43
   1230c:	movt	r1, #1
   12310:	bl	123c0 <sprintf@plt+0xb04>
   12314:	ldmib	sp, {r0, r1}
   12318:	movw	r2, #33199	; 0x81af
   1231c:	movt	r2, #1
   12320:	bl	12494 <sprintf@plt+0xbd8>
   12324:	mov	r0, #2
   12328:	bl	118a4 <exit@plt>
   1232c:	movw	r1, #33142	; 0x8176
   12330:	mov	r0, #67	; 0x43
   12334:	movt	r1, #1
   12338:	bl	123c0 <sprintf@plt+0xb04>
   1233c:	movw	r2, #33164	; 0x818c
   12340:	mov	r0, r5
   12344:	mov	r1, r4
   12348:	movt	r2, #1
   1234c:	b	12320 <sprintf@plt+0xa64>
   12350:	b	131f4 <sprintf@plt+0x1938>
   12354:	sub	sp, sp, #8
   12358:	push	{r4, r5, r6, r7, fp, lr}
   1235c:	add	fp, sp, #16
   12360:	sub	sp, sp, #520	; 0x208
   12364:	mov	ip, r1
   12368:	add	r5, sp, #8
   1236c:	mov	r4, r0
   12370:	str	r2, [fp, #8]
   12374:	str	r3, [fp, #12]
   12378:	add	r3, fp, #8
   1237c:	mov	r1, #512	; 0x200
   12380:	mov	r0, r5
   12384:	mov	r2, ip
   12388:	str	r3, [sp, #4]
   1238c:	bl	11574 <vsnprintf@plt>
   12390:	movw	r0, #44880	; 0xaf50
   12394:	movw	r1, #33491	; 0x82d3
   12398:	mov	r2, r4
   1239c:	mov	r3, r5
   123a0:	movt	r0, #2
   123a4:	movt	r1, #1
   123a8:	ldr	r0, [r0]
   123ac:	bl	11814 <rb_helper_write@plt>
   123b0:	sub	sp, fp, #16
   123b4:	pop	{r4, r5, r6, r7, fp, lr}
   123b8:	add	sp, sp, #8
   123bc:	bx	lr
   123c0:	sub	sp, sp, #8
   123c4:	push	{r4, r5, r6, r7, fp, lr}
   123c8:	add	fp, sp, #16
   123cc:	sub	sp, sp, #520	; 0x208
   123d0:	mov	ip, r1
   123d4:	add	r5, sp, #8
   123d8:	mov	r4, r0
   123dc:	str	r2, [fp, #8]
   123e0:	str	r3, [fp, #12]
   123e4:	add	r3, fp, #8
   123e8:	mov	r1, #512	; 0x200
   123ec:	mov	r0, r5
   123f0:	mov	r2, ip
   123f4:	str	r3, [sp, #4]
   123f8:	bl	11574 <vsnprintf@plt>
   123fc:	movw	r0, #44880	; 0xaf50
   12400:	movw	r1, #33500	; 0x82dc
   12404:	mov	r2, r4
   12408:	mov	r3, r5
   1240c:	movt	r0, #2
   12410:	movt	r1, #1
   12414:	ldr	r0, [r0]
   12418:	bl	11814 <rb_helper_write@plt>
   1241c:	sub	sp, fp, #16
   12420:	pop	{r4, r5, r6, r7, fp, lr}
   12424:	add	sp, sp, #8
   12428:	bx	lr
   1242c:	sub	sp, sp, #4
   12430:	push	{r4, r5, r6, sl, fp, lr}
   12434:	add	fp, sp, #16
   12438:	sub	sp, sp, #524	; 0x20c
   1243c:	add	r6, sp, #12
   12440:	mov	r4, r1
   12444:	mov	r5, r0
   12448:	str	r3, [fp, #8]
   1244c:	add	r3, fp, #8
   12450:	mov	r1, #512	; 0x200
   12454:	mov	r0, r6
   12458:	str	r3, [sp, #8]
   1245c:	bl	11574 <vsnprintf@plt>
   12460:	movw	r0, #44880	; 0xaf50
   12464:	movw	r1, #33509	; 0x82e5
   12468:	mov	r2, r5
   1246c:	mov	r3, r4
   12470:	str	r6, [sp]
   12474:	movt	r0, #2
   12478:	movt	r1, #1
   1247c:	ldr	r0, [r0]
   12480:	bl	11814 <rb_helper_write@plt>
   12484:	sub	sp, fp, #16
   12488:	pop	{r4, r5, r6, sl, fp, lr}
   1248c:	add	sp, sp, #4
   12490:	bx	lr
   12494:	sub	sp, sp, #4
   12498:	push	{r4, r5, r6, sl, fp, lr}
   1249c:	add	fp, sp, #16
   124a0:	sub	sp, sp, #524	; 0x20c
   124a4:	add	r6, sp, #12
   124a8:	mov	r4, r1
   124ac:	mov	r5, r0
   124b0:	str	r3, [fp, #8]
   124b4:	add	r3, fp, #8
   124b8:	mov	r1, #512	; 0x200
   124bc:	mov	r0, r6
   124c0:	str	r3, [sp, #8]
   124c4:	bl	11574 <vsnprintf@plt>
   124c8:	movw	r0, #44880	; 0xaf50
   124cc:	movw	r1, #33520	; 0x82f0
   124d0:	mov	r2, r5
   124d4:	mov	r3, r4
   124d8:	str	r6, [sp]
   124dc:	movt	r0, #2
   124e0:	movt	r1, #1
   124e4:	ldr	r0, [r0]
   124e8:	bl	11814 <rb_helper_write@plt>
   124ec:	sub	sp, fp, #16
   124f0:	pop	{r4, r5, r6, sl, fp, lr}
   124f4:	add	sp, sp, #4
   124f8:	bx	lr
   124fc:	mov	r2, r0
   12500:	movw	r0, #44880	; 0xaf50
   12504:	mov	r3, r1
   12508:	movw	r1, #33531	; 0x82fb
   1250c:	movt	r0, #2
   12510:	movt	r1, #1
   12514:	ldr	r0, [r0]
   12518:	b	11814 <rb_helper_write@plt>
   1251c:	push	{fp, lr}
   12520:	mov	fp, sp
   12524:	movw	r0, #33539	; 0x8303
   12528:	movw	r1, #9632	; 0x25a0
   1252c:	movt	r0, #1
   12530:	movt	r1, #1
   12534:	bl	117f0 <rb_dictionary_create@plt>
   12538:	movw	r1, #61820	; 0xf17c
   1253c:	mov	r2, #0
   12540:	mov	r3, #1
   12544:	movt	r1, #2
   12548:	str	r0, [r1]
   1254c:	movw	r0, #33560	; 0x8318
   12550:	movw	r1, #9640	; 0x25a8
   12554:	movt	r0, #1
   12558:	movt	r1, #1
   1255c:	bl	114fc <rb_event_addish@plt>
   12560:	movw	r1, #61320	; 0xef88
   12564:	movt	r1, #2
   12568:	str	r0, [r1]
   1256c:	movw	r0, #44456	; 0xada8
   12570:	movt	r0, #2
   12574:	bl	126a0 <sprintf@plt+0xde4>
   12578:	movw	r0, #44808	; 0xaf08
   1257c:	movt	r0, #2
   12580:	bl	126a0 <sprintf@plt+0xde4>
   12584:	movw	r0, #44648	; 0xae68
   12588:	movt	r0, #2
   1258c:	bl	126a0 <sprintf@plt+0xde4>
   12590:	movw	r0, #44556	; 0xae0c
   12594:	movt	r0, #2
   12598:	pop	{fp, lr}
   1259c:	b	126a0 <sprintf@plt+0xde4>
   125a0:	sub	r0, r1, r0
   125a4:	bx	lr
   125a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125ac:	add	fp, sp, #24
   125b0:	sub	sp, sp, #8
   125b4:	bl	116c4 <rb_current_time@plt>
   125b8:	movw	r9, #61820	; 0xf17c
   125bc:	mov	r4, r0
   125c0:	mov	r5, sp
   125c4:	movt	r9, #2
   125c8:	mov	r1, r5
   125cc:	ldr	r0, [r9]
   125d0:	bl	116a0 <rb_dictionary_foreach_start@plt>
   125d4:	ldr	r0, [r9]
   125d8:	mov	r1, r5
   125dc:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   125e0:	cmp	r0, #0
   125e4:	beq	12698 <sprintf@plt+0xddc>
   125e8:	movw	r8, #61824	; 0xf180
   125ec:	mov	r6, r0
   125f0:	mov	r5, sp
   125f4:	movt	r8, #2
   125f8:	ldr	r0, [r6, #460]	; 0x1cc
   125fc:	add	r0, r0, #1
   12600:	str	r0, [r6, #460]	; 0x1cc
   12604:	ldr	r7, [r8]
   12608:	cmp	r7, #0
   1260c:	beq	12664 <sprintf@plt+0xda8>
   12610:	ldr	r0, [r7]
   12614:	ldr	r1, [r6, #464]	; 0x1d0
   12618:	ldr	r2, [r0, #12]
   1261c:	add	r1, r1, r2, lsl #4
   12620:	ldr	r2, [r1, #12]
   12624:	cmp	r2, #1
   12628:	bne	12654 <sprintf@plt+0xd98>
   1262c:	ldr	r1, [r1, #4]
   12630:	cmp	r1, r4
   12634:	bge	12654 <sprintf@plt+0xd98>
   12638:	cmp	r1, #1
   1263c:	blt	12654 <sprintf@plt+0xd98>
   12640:	ldr	r1, [r0, #40]	; 0x28
   12644:	cmp	r1, #0
   12648:	beq	12654 <sprintf@plt+0xd98>
   1264c:	mov	r0, r6
   12650:	blx	r1
   12654:	ldr	r7, [r7, #8]
   12658:	cmp	r7, #0
   1265c:	bne	12610 <sprintf@plt+0xd54>
   12660:	ldr	r0, [r6, #460]	; 0x1cc
   12664:	subs	r0, r0, #1
   12668:	str	r0, [r6, #460]	; 0x1cc
   1266c:	moveq	r0, r6
   12670:	bleq	12bdc <sprintf@plt+0x1320>
   12674:	ldr	r0, [r9]
   12678:	mov	r1, r5
   1267c:	bl	11658 <rb_dictionary_foreach_next@plt>
   12680:	ldr	r0, [r9]
   12684:	mov	r1, r5
   12688:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   1268c:	mov	r6, r0
   12690:	cmp	r0, #0
   12694:	bne	125f8 <sprintf@plt+0xd3c>
   12698:	sub	sp, fp, #24
   1269c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   126a0:	push	{r4, r5, r6, sl, fp, lr}
   126a4:	add	fp, sp, #16
   126a8:	movw	r6, #61324	; 0xef8c
   126ac:	mov	r4, r0
   126b0:	movt	r6, #2
   126b4:	ldr	r2, [r6, #8]
   126b8:	cmp	r2, #0
   126bc:	beq	126f0 <sprintf@plt+0xe34>
   126c0:	ldr	r0, [r6]
   126c4:	ldr	r3, [r0]
   126c8:	cmp	r0, #0
   126cc:	str	r3, [r4, #12]
   126d0:	beq	12818 <sprintf@plt+0xf5c>
   126d4:	ldr	r3, [r0, #8]
   126d8:	ldr	r5, [r0, #4]
   126dc:	cmp	r3, #0
   126e0:	beq	1271c <sprintf@plt+0xe60>
   126e4:	str	r5, [r3, #4]
   126e8:	ldr	r5, [r0, #4]
   126ec:	b	12720 <sprintf@plt+0xe64>
   126f0:	movw	r1, #61336	; 0xef98
   126f4:	movt	r1, #2
   126f8:	ldr	r0, [r1]
   126fc:	cmp	r0, #32
   12700:	cmnne	r0, #1
   12704:	bne	12808 <sprintf@plt+0xf4c>
   12708:	movw	r1, #33658	; 0x837a
   1270c:	mov	r0, #87	; 0x57
   12710:	movt	r1, #1
   12714:	pop	{r4, r5, r6, sl, fp, lr}
   12718:	b	123c0 <sprintf@plt+0xb04>
   1271c:	str	r5, [r6, #4]
   12720:	cmp	r5, #0
   12724:	mov	r1, r6
   12728:	addne	r1, r5, #8
   1272c:	cmp	r5, #0
   12730:	str	r3, [r1]
   12734:	mov	r1, #0
   12738:	str	r1, [r0, #4]
   1273c:	str	r1, [r0, #8]
   12740:	sub	r1, r2, #1
   12744:	moveq	r0, r3
   12748:	str	r1, [r6, #8]
   1274c:	bl	116e8 <rb_free_rb_dlink_node@plt>
   12750:	ldr	r5, [r4, #56]	; 0x38
   12754:	cmp	r5, #0
   12758:	beq	12788 <sprintf@plt+0xecc>
   1275c:	ldr	r1, [r5]
   12760:	cmp	r1, #0
   12764:	beq	12788 <sprintf@plt+0xecc>
   12768:	movw	r6, #61816	; 0xf178
   1276c:	movt	r6, #2
   12770:	ldr	r0, [r6]
   12774:	mov	r2, r5
   12778:	bl	1179c <rb_dictionary_add@plt>
   1277c:	ldr	r1, [r5, #12]!
   12780:	cmp	r1, #0
   12784:	bne	12770 <sprintf@plt+0xeb4>
   12788:	ldrb	r0, [r4, #48]	; 0x30
   1278c:	cmp	r0, #0
   12790:	beq	127a4 <sprintf@plt+0xee8>
   12794:	ldr	r1, [r4, #52]	; 0x34
   12798:	movw	r2, #42348	; 0xa56c
   1279c:	movt	r2, #2
   127a0:	str	r1, [r2, r0, lsl #2]
   127a4:	ldr	r0, [r4, #24]
   127a8:	cmp	r0, #0
   127ac:	beq	127b4 <sprintf@plt+0xef8>
   127b0:	blx	r0
   127b4:	mov	r0, #0
   127b8:	str	r0, [r4, #4]
   127bc:	movw	r0, #61824	; 0xf180
   127c0:	str	r4, [r4]
   127c4:	movt	r0, #2
   127c8:	ldr	r1, [r0]
   127cc:	cmp	r1, #0
   127d0:	str	r1, [r4, #8]
   127d4:	beq	127e4 <sprintf@plt+0xf28>
   127d8:	add	r1, r1, #4
   127dc:	str	r4, [r1]
   127e0:	b	127f4 <sprintf@plt+0xf38>
   127e4:	mov	r1, r0
   127e8:	ldr	r2, [r1, #4]!
   127ec:	cmp	r2, #0
   127f0:	streq	r4, [r1]
   127f4:	str	r4, [r0]
   127f8:	ldr	r1, [r0, #8]
   127fc:	add	r1, r1, #1
   12800:	str	r1, [r0, #8]
   12804:	pop	{r4, r5, r6, sl, fp, pc}
   12808:	add	r2, r0, #1
   1280c:	str	r2, [r1]
   12810:	str	r0, [r4, #12]
   12814:	b	12750 <sprintf@plt+0xe94>
   12818:	movw	r0, #33952	; 0x84a0
   1281c:	movw	r1, #33962	; 0x84aa
   12820:	movw	r3, #33990	; 0x84c6
   12824:	mov	r2, #235	; 0xeb
   12828:	movt	r0, #1
   1282c:	movt	r1, #1
   12830:	movt	r3, #1
   12834:	bl	11628 <__assert_fail@plt>
   12838:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1283c:	add	fp, sp, #24
   12840:	sub	sp, sp, #8
   12844:	movw	r9, #61820	; 0xf17c
   12848:	mov	r5, sp
   1284c:	movt	r9, #2
   12850:	mov	r1, r5
   12854:	ldr	r0, [r9]
   12858:	bl	116a0 <rb_dictionary_foreach_start@plt>
   1285c:	ldr	r0, [r9]
   12860:	mov	r1, r5
   12864:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   12868:	cmp	r0, #0
   1286c:	beq	128e0 <sprintf@plt+0x1024>
   12870:	movw	r8, #33583	; 0x832f
   12874:	movw	r5, #33591	; 0x8337
   12878:	mov	r7, r0
   1287c:	mov	r6, sp
   12880:	movt	r8, #1
   12884:	movt	r5, #1
   12888:	ldr	r0, [r7, #460]	; 0x1cc
   1288c:	mvn	r1, #0
   12890:	mov	r2, r8
   12894:	mov	r3, r5
   12898:	add	r0, r0, #1
   1289c:	str	r0, [r7, #460]	; 0x1cc
   128a0:	mov	r0, r7
   128a4:	bl	12988 <sprintf@plt+0x10cc>
   128a8:	ldr	r0, [r7, #460]	; 0x1cc
   128ac:	subs	r0, r0, #1
   128b0:	str	r0, [r7, #460]	; 0x1cc
   128b4:	moveq	r0, r7
   128b8:	bleq	12bdc <sprintf@plt+0x1320>
   128bc:	ldr	r0, [r9]
   128c0:	mov	r1, r6
   128c4:	bl	11658 <rb_dictionary_foreach_next@plt>
   128c8:	ldr	r0, [r9]
   128cc:	mov	r1, r6
   128d0:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   128d4:	mov	r7, r0
   128d8:	cmp	r0, #0
   128dc:	bne	12888 <sprintf@plt+0xfcc>
   128e0:	movw	r5, #61824	; 0xf180
   128e4:	movt	r5, #2
   128e8:	ldr	r7, [r5]
   128ec:	cmp	r7, #0
   128f0:	beq	12960 <sprintf@plt+0x10a4>
   128f4:	mov	r6, #0
   128f8:	ldr	r0, [r7]
   128fc:	ldr	r4, [r7, #8]
   12900:	ldr	r0, [r0, #28]
   12904:	cmp	r0, #0
   12908:	beq	12910 <sprintf@plt+0x1054>
   1290c:	blx	r0
   12910:	ldr	r0, [r7, #8]
   12914:	ldr	r1, [r7, #4]
   12918:	cmp	r0, #0
   1291c:	beq	1292c <sprintf@plt+0x1070>
   12920:	str	r1, [r0, #4]
   12924:	ldr	r1, [r7, #4]
   12928:	b	12930 <sprintf@plt+0x1074>
   1292c:	str	r1, [r5, #4]
   12930:	cmp	r1, #0
   12934:	mov	r2, r5
   12938:	addne	r2, r1, #8
   1293c:	cmp	r4, #0
   12940:	str	r0, [r2]
   12944:	str	r6, [r7, #4]
   12948:	str	r6, [r7, #8]
   1294c:	mov	r7, r4
   12950:	ldr	r0, [r5, #8]
   12954:	sub	r0, r0, #1
   12958:	str	r0, [r5, #8]
   1295c:	bne	128f8 <sprintf@plt+0x103c>
   12960:	ldr	r0, [r9]
   12964:	mov	r1, #0
   12968:	mov	r2, #0
   1296c:	bl	1173c <rb_dictionary_destroy@plt>
   12970:	movw	r0, #61320	; 0xef88
   12974:	movt	r0, #2
   12978:	ldr	r0, [r0]
   1297c:	bl	11544 <rb_event_delete@plt>
   12980:	sub	sp, fp, #24
   12984:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12988:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1298c:	add	fp, sp, #24
   12990:	sub	sp, sp, #536	; 0x218
   12994:	mov	r6, r3
   12998:	add	r8, sp, #24
   1299c:	mov	r7, r2
   129a0:	mov	r5, r1
   129a4:	mov	r4, r0
   129a8:	add	r3, fp, #8
   129ac:	mov	r1, #512	; 0x200
   129b0:	mov	r0, r8
   129b4:	mov	r2, r6
   129b8:	str	r3, [sp, #20]
   129bc:	bl	11574 <vsnprintf@plt>
   129c0:	movw	r0, #44880	; 0xaf50
   129c4:	ldr	r2, [r4]
   129c8:	cmn	r5, #1
   129cc:	movt	r0, #2
   129d0:	ldr	r0, [r0]
   129d4:	beq	12a34 <sprintf@plt+0x1178>
   129d8:	ldr	r1, [r4, #464]	; 0x1d0
   129dc:	cmp	r7, #0
   129e0:	add	r6, r4, #440	; 0x1b8
   129e4:	ldr	r1, [r1, r5, lsl #4]
   129e8:	ldrb	r3, [r1, #20]
   129ec:	movw	r1, #33476	; 0x82c4
   129f0:	movt	r1, #1
   129f4:	movne	r1, r7
   129f8:	add	r7, r4, #376	; 0x178
   129fc:	stm	sp, {r6, r7}
   12a00:	str	r8, [sp, #12]
   12a04:	str	r1, [sp, #8]
   12a08:	movw	r1, #33704	; 0x83a8
   12a0c:	movt	r1, #1
   12a10:	bl	11814 <rb_helper_write@plt>
   12a14:	ldr	r0, [r4, #464]	; 0x1d0
   12a18:	mov	r1, #2
   12a1c:	add	r0, r0, r5, lsl #4
   12a20:	str	r1, [r0, #12]
   12a24:	ldr	r0, [r4, #456]	; 0x1c8
   12a28:	sub	r0, r0, #1
   12a2c:	str	r0, [r4, #456]	; 0x1c8
   12a30:	b	12a6c <sprintf@plt+0x11b0>
   12a34:	movw	r1, #33476	; 0x82c4
   12a38:	cmp	r7, #0
   12a3c:	add	r3, r4, #376	; 0x178
   12a40:	str	r8, [sp, #12]
   12a44:	movt	r1, #1
   12a48:	movne	r1, r7
   12a4c:	add	r7, r4, #440	; 0x1b8
   12a50:	str	r3, [sp, #4]
   12a54:	mov	r3, #42	; 0x2a
   12a58:	str	r1, [sp, #8]
   12a5c:	movw	r1, #33704	; 0x83a8
   12a60:	str	r7, [sp]
   12a64:	movt	r1, #1
   12a68:	bl	11814 <rb_helper_write@plt>
   12a6c:	mov	r0, r4
   12a70:	bl	12c18 <sprintf@plt+0x135c>
   12a74:	sub	sp, fp, #24
   12a78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12a7c:	push	{r4, r5, r6, sl, fp, lr}
   12a80:	add	fp, sp, #16
   12a84:	mov	r4, r0
   12a88:	ldr	r0, [r0, #56]	; 0x38
   12a8c:	cmp	r0, #0
   12a90:	beq	12ac0 <sprintf@plt+0x1204>
   12a94:	ldr	r1, [r0]
   12a98:	cmp	r1, #0
   12a9c:	beq	12ac0 <sprintf@plt+0x1204>
   12aa0:	movw	r6, #61816	; 0xf178
   12aa4:	add	r5, r0, #12
   12aa8:	movt	r6, #2
   12aac:	ldr	r0, [r6]
   12ab0:	bl	116d0 <rb_dictionary_delete@plt>
   12ab4:	ldr	r1, [r5], #12
   12ab8:	cmp	r1, #0
   12abc:	bne	12aac <sprintf@plt+0x11f0>
   12ac0:	ldrb	r0, [r4, #48]	; 0x30
   12ac4:	cmp	r0, #0
   12ac8:	movwne	r1, #42348	; 0xa56c
   12acc:	movne	r2, #0
   12ad0:	movtne	r1, #2
   12ad4:	strne	r2, [r1, r0, lsl #2]
   12ad8:	ldr	r0, [r4, #28]
   12adc:	cmp	r0, #0
   12ae0:	beq	12ae8 <sprintf@plt+0x122c>
   12ae4:	blx	r0
   12ae8:	ldr	r1, [r4, #8]
   12aec:	ldr	r2, [r4, #4]
   12af0:	movw	r0, #61824	; 0xf180
   12af4:	movt	r0, #2
   12af8:	cmp	r1, #0
   12afc:	beq	12b0c <sprintf@plt+0x1250>
   12b00:	str	r2, [r1, #4]
   12b04:	ldr	r2, [r4, #4]
   12b08:	b	12b10 <sprintf@plt+0x1254>
   12b0c:	str	r2, [r0, #4]
   12b10:	cmp	r2, #0
   12b14:	mov	r3, r0
   12b18:	addne	r3, r2, #8
   12b1c:	str	r1, [r3]
   12b20:	mov	r1, #0
   12b24:	str	r1, [r4, #4]
   12b28:	str	r1, [r4, #8]
   12b2c:	ldr	r1, [r0, #8]
   12b30:	sub	r1, r1, #1
   12b34:	str	r1, [r0, #8]
   12b38:	ldr	r4, [r4, #12]
   12b3c:	bl	11838 <rb_make_rb_dlink_node@plt>
   12b40:	cmp	r4, #0
   12b44:	beq	12ba4 <sprintf@plt+0x12e8>
   12b48:	cmp	r0, #0
   12b4c:	beq	12bbc <sprintf@plt+0x1300>
   12b50:	mov	r1, #0
   12b54:	str	r1, [r0, #4]
   12b58:	movw	r1, #61324	; 0xef8c
   12b5c:	str	r4, [r0]
   12b60:	movt	r1, #2
   12b64:	ldr	r2, [r1]
   12b68:	cmp	r2, #0
   12b6c:	str	r2, [r0, #8]
   12b70:	beq	12b80 <sprintf@plt+0x12c4>
   12b74:	add	r2, r2, #4
   12b78:	str	r0, [r2]
   12b7c:	b	12b90 <sprintf@plt+0x12d4>
   12b80:	mov	r2, r1
   12b84:	ldr	r3, [r2, #4]!
   12b88:	cmp	r3, #0
   12b8c:	streq	r0, [r2]
   12b90:	str	r0, [r1]
   12b94:	ldr	r0, [r1, #8]
   12b98:	add	r0, r0, #1
   12b9c:	str	r0, [r1, #8]
   12ba0:	pop	{r4, r5, r6, sl, fp, pc}
   12ba4:	movw	r0, #34044	; 0x84fc
   12ba8:	movw	r1, #33962	; 0x84aa
   12bac:	movw	r3, #34057	; 0x8509
   12bb0:	mov	r2, #143	; 0x8f
   12bb4:	movt	r0, #1
   12bb8:	b	12bd0 <sprintf@plt+0x1314>
   12bbc:	movw	r0, #33952	; 0x84a0
   12bc0:	movw	r1, #33962	; 0x84aa
   12bc4:	movw	r3, #34057	; 0x8509
   12bc8:	mov	r2, #144	; 0x90
   12bcc:	movt	r0, #1
   12bd0:	movt	r1, #1
   12bd4:	movt	r3, #1
   12bd8:	bl	11628 <__assert_fail@plt>
   12bdc:	push	{r4, sl, fp, lr}
   12be0:	add	fp, sp, #8
   12be4:	mov	r4, r0
   12be8:	ldr	r1, [r0]
   12bec:	movw	r0, #61820	; 0xf17c
   12bf0:	movt	r0, #2
   12bf4:	ldr	r0, [r0]
   12bf8:	bl	116d0 <rb_dictionary_delete@plt>
   12bfc:	ldr	r0, [r4, #464]	; 0x1d0
   12c00:	cmp	r0, #0
   12c04:	beq	12c0c <sprintf@plt+0x1350>
   12c08:	bl	11664 <free@plt>
   12c0c:	mov	r0, r4
   12c10:	pop	{r4, sl, fp, lr}
   12c14:	b	11664 <free@plt>
   12c18:	push	{r4, r5, fp, lr}
   12c1c:	add	fp, sp, #8
   12c20:	mov	r4, r0
   12c24:	ldrb	r0, [r0, #452]	; 0x1c4
   12c28:	cmp	r0, #0
   12c2c:	bne	12c90 <sprintf@plt+0x13d4>
   12c30:	mov	r0, #1
   12c34:	strb	r0, [r4, #452]	; 0x1c4
   12c38:	ldr	r0, [r4, #456]	; 0x1c8
   12c3c:	cmp	r0, #0
   12c40:	popeq	{r4, r5, fp, pc}
   12c44:	movw	r0, #61824	; 0xf180
   12c48:	movt	r0, #2
   12c4c:	ldr	r5, [r0]
   12c50:	cmp	r5, #0
   12c54:	beq	12c90 <sprintf@plt+0x13d4>
   12c58:	ldr	r0, [r5]
   12c5c:	ldr	r1, [r0, #36]	; 0x24
   12c60:	cmp	r1, #0
   12c64:	beq	12c88 <sprintf@plt+0x13cc>
   12c68:	ldr	r0, [r0, #12]
   12c6c:	ldr	r2, [r4, #464]	; 0x1d0
   12c70:	add	r0, r2, r0, lsl #4
   12c74:	ldr	r0, [r0, #12]
   12c78:	cmp	r0, #1
   12c7c:	bne	12c88 <sprintf@plt+0x13cc>
   12c80:	mov	r0, r4
   12c84:	blx	r1
   12c88:	ldr	r5, [r5, #8]
   12c8c:	b	12c50 <sprintf@plt+0x1394>
   12c90:	pop	{r4, r5, fp, pc}
   12c94:	push	{r4, r5, r6, sl, fp, lr}
   12c98:	add	fp, sp, #16
   12c9c:	sub	sp, sp, #8
   12ca0:	mov	r4, r0
   12ca4:	ldr	r0, [r0, #464]	; 0x1d0
   12ca8:	mov	r5, r1
   12cac:	add	r0, r0, r1, lsl #4
   12cb0:	mov	r1, #2
   12cb4:	str	r1, [r0, #12]
   12cb8:	ldr	r0, [r4, #456]	; 0x1c8
   12cbc:	subs	r0, r0, #1
   12cc0:	str	r0, [r4, #456]	; 0x1c8
   12cc4:	bne	12cd4 <sprintf@plt+0x1418>
   12cc8:	ldrb	r0, [r4, #451]	; 0x1c3
   12ccc:	cmp	r0, #0
   12cd0:	beq	12d2c <sprintf@plt+0x1470>
   12cd4:	movw	r0, #61824	; 0xf180
   12cd8:	movt	r0, #2
   12cdc:	ldr	r6, [r0]
   12ce0:	cmp	r6, #0
   12ce4:	beq	12d24 <sprintf@plt+0x1468>
   12ce8:	ldr	r0, [r6]
   12cec:	ldr	r2, [r0, #44]	; 0x2c
   12cf0:	cmp	r2, #0
   12cf4:	beq	12d1c <sprintf@plt+0x1460>
   12cf8:	ldr	r0, [r0, #12]
   12cfc:	ldr	r1, [r4, #464]	; 0x1d0
   12d00:	add	r0, r1, r0, lsl #4
   12d04:	ldr	r0, [r0, #12]
   12d08:	cmp	r0, #1
   12d0c:	bne	12d1c <sprintf@plt+0x1460>
   12d10:	mov	r0, r4
   12d14:	mov	r1, r5
   12d18:	blx	r2
   12d1c:	ldr	r6, [r6, #8]
   12d20:	b	12ce0 <sprintf@plt+0x1424>
   12d24:	sub	sp, fp, #16
   12d28:	pop	{r4, r5, r6, sl, fp, pc}
   12d2c:	movw	r0, #44880	; 0xaf50
   12d30:	mov	r1, r4
   12d34:	add	r3, r4, #440	; 0x1b8
   12d38:	movt	r0, #2
   12d3c:	ldr	r2, [r1], #376	; 0x178
   12d40:	ldr	r0, [r0]
   12d44:	str	r1, [sp]
   12d48:	movw	r1, #33725	; 0x83bd
   12d4c:	movt	r1, #1
   12d50:	bl	11814 <rb_helper_write@plt>
   12d54:	mov	r0, r4
   12d58:	sub	sp, fp, #16
   12d5c:	pop	{r4, r5, r6, sl, fp, lr}
   12d60:	b	12c18 <sprintf@plt+0x135c>
   12d64:	push	{r4, sl, fp, lr}
   12d68:	add	fp, sp, #8
   12d6c:	sub	sp, sp, #8
   12d70:	mov	r4, r0
   12d74:	movw	r0, #44880	; 0xaf50
   12d78:	movt	r0, #2
   12d7c:	mov	r1, r4
   12d80:	add	r3, r4, #440	; 0x1b8
   12d84:	ldr	r2, [r1], #376	; 0x178
   12d88:	ldr	r0, [r0]
   12d8c:	str	r1, [sp]
   12d90:	movw	r1, #33725	; 0x83bd
   12d94:	movt	r1, #1
   12d98:	bl	11814 <rb_helper_write@plt>
   12d9c:	mov	r0, r4
   12da0:	sub	sp, fp, #8
   12da4:	pop	{r4, sl, fp, lr}
   12da8:	b	12c18 <sprintf@plt+0x135c>
   12dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12db0:	add	fp, sp, #28
   12db4:	sub	sp, sp, #28
   12db8:	mov	r2, r0
   12dbc:	cmp	r0, #5
   12dc0:	ble	13048 <sprintf@plt+0x178c>
   12dc4:	ldr	sl, [r1, #4]
   12dc8:	ldr	r9, [r1, #8]
   12dcc:	ldr	r7, [r1, #12]
   12dd0:	ldr	r5, [r1, #16]
   12dd4:	ldr	r4, [r1, #20]
   12dd8:	cmp	r2, #6
   12ddc:	bne	12dec <sprintf@plt+0x1530>
   12de0:	movw	r6, #34176	; 0x8580
   12de4:	movt	r6, #1
   12de8:	b	12df0 <sprintf@plt+0x1534>
   12dec:	ldr	r6, [r1, #24]
   12df0:	mov	r0, sl
   12df4:	mov	r1, #0
   12df8:	mov	r2, #16
   12dfc:	bl	1164c <strtoull@plt>
   12e00:	mov	r8, r0
   12e04:	subs	r0, r0, #1
   12e08:	mvn	r2, #1
   12e0c:	sbc	r1, r1, #0
   12e10:	subs	r0, r2, r0
   12e14:	rscs	r0, r1, #0
   12e18:	bcc	13030 <sprintf@plt+0x1774>
   12e1c:	mov	r0, #1
   12e20:	mov	r1, #468	; 0x1d4
   12e24:	str	r6, [sp, #8]
   12e28:	str	r9, [sp, #12]
   12e2c:	str	r5, [sp, #16]
   12e30:	str	r7, [sp, #20]
   12e34:	str	r4, [sp, #24]
   12e38:	mov	r5, #1
   12e3c:	bl	115c8 <calloc@plt>
   12e40:	cmp	r0, #0
   12e44:	beq	13058 <sprintf@plt+0x179c>
   12e48:	movw	r9, #61820	; 0xf17c
   12e4c:	str	r8, [r0]
   12e50:	mov	r4, r0
   12e54:	str	r5, [r0, #460]	; 0x1cc
   12e58:	mov	r1, r8
   12e5c:	movt	r9, #2
   12e60:	ldr	r0, [r9]
   12e64:	bl	117e4 <rb_dictionary_find@plt>
   12e68:	cmp	r0, #0
   12e6c:	bne	1305c <sprintf@plt+0x17a0>
   12e70:	ldr	r1, [r4]
   12e74:	ldr	r0, [r9]
   12e78:	mov	r2, r4
   12e7c:	bl	1179c <rb_dictionary_add@plt>
   12e80:	ldr	r0, [sp, #8]
   12e84:	mov	r1, #0
   12e88:	mov	r2, #16
   12e8c:	bl	1164c <strtoull@plt>
   12e90:	ldr	r5, [sp, #12]
   12e94:	str	r0, [r4, #4]
   12e98:	add	r0, r4, #8
   12e9c:	mov	r2, #54	; 0x36
   12ea0:	mov	r1, r5
   12ea4:	bl	11640 <rb_strlcpy@plt>
   12ea8:	ldr	r0, [sp, #20]
   12eac:	bl	11730 <atoi@plt>
   12eb0:	strh	r0, [r4, #62]	; 0x3e
   12eb4:	add	r1, r4, #64	; 0x40
   12eb8:	mov	r0, r5
   12ebc:	bl	116ac <rb_inet_pton_sock@plt>
   12ec0:	ldrh	r0, [r4, #62]	; 0x3e
   12ec4:	ldr	r5, [sp, #16]
   12ec8:	mov	r2, #54	; 0x36
   12ecc:	rev16	r0, r0
   12ed0:	mov	r1, r5
   12ed4:	strh	r0, [r4, #66]	; 0x42
   12ed8:	add	r0, r4, #192	; 0xc0
   12edc:	bl	11640 <rb_strlcpy@plt>
   12ee0:	ldr	r0, [sp, #24]
   12ee4:	bl	11730 <atoi@plt>
   12ee8:	strh	r0, [r4, #246]	; 0xf6
   12eec:	add	r1, r4, #248	; 0xf8
   12ef0:	mov	r0, r5
   12ef4:	bl	116ac <rb_inet_pton_sock@plt>
   12ef8:	ldrh	r0, [r4, #246]	; 0xf6
   12efc:	movw	r7, #33476	; 0x82c4
   12f00:	add	r8, r4, #376	; 0x178
   12f04:	mov	r2, #64	; 0x40
   12f08:	movt	r7, #1
   12f0c:	mov	r1, r7
   12f10:	rev16	r0, r0
   12f14:	strh	r0, [r4, #250]	; 0xfa
   12f18:	mov	r0, r8
   12f1c:	bl	11640 <rb_strlcpy@plt>
   12f20:	add	r6, r4, #440	; 0x1b8
   12f24:	mov	r1, r7
   12f28:	mov	r2, #11
   12f2c:	mov	r0, r6
   12f30:	bl	11640 <rb_strlcpy@plt>
   12f34:	movw	r0, #61336	; 0xef98
   12f38:	mov	r5, #1
   12f3c:	movt	r0, #2
   12f40:	ldr	r0, [r0]
   12f44:	lsl	r1, r0, #4
   12f48:	mov	r0, #1
   12f4c:	bl	115c8 <calloc@plt>
   12f50:	cmp	r0, #0
   12f54:	beq	13058 <sprintf@plt+0x179c>
   12f58:	movw	r1, #61824	; 0xf180
   12f5c:	strb	r5, [r4, #451]	; 0x1c3
   12f60:	str	r0, [r4, #464]	; 0x1d0
   12f64:	movt	r1, #2
   12f68:	ldr	r7, [r1]
   12f6c:	cmp	r7, #0
   12f70:	beq	12fe0 <sprintf@plt+0x1724>
   12f74:	ldr	r1, [r7]
   12f78:	mov	r5, #1
   12f7c:	ldr	r2, [r1, #12]
   12f80:	str	r1, [r0, r2, lsl #4]!
   12f84:	ldr	r2, [r4, #456]	; 0x1c8
   12f88:	add	r2, r2, #1
   12f8c:	str	r2, [r4, #456]	; 0x1c8
   12f90:	str	r5, [r0, #12]
   12f94:	mov	r0, r4
   12f98:	ldr	r1, [r1, #32]
   12f9c:	blx	r1
   12fa0:	cmp	r0, #0
   12fa4:	beq	13020 <sprintf@plt+0x1764>
   12fa8:	ldrb	r0, [r4, #452]	; 0x1c4
   12fac:	cmp	r0, #0
   12fb0:	bne	12fe0 <sprintf@plt+0x1724>
   12fb4:	ldr	r7, [r7, #8]
   12fb8:	cmp	r7, #0
   12fbc:	beq	12fe0 <sprintf@plt+0x1724>
   12fc0:	ldr	r1, [r7]
   12fc4:	ldr	r0, [r4, #464]	; 0x1d0
   12fc8:	ldr	r2, [r1, #12]
   12fcc:	str	r1, [r0, r2, lsl #4]!
   12fd0:	ldr	r2, [r4, #456]	; 0x1c8
   12fd4:	add	r2, r2, #1
   12fd8:	str	r2, [r4, #456]	; 0x1c8
   12fdc:	b	12f90 <sprintf@plt+0x16d4>
   12fe0:	mov	r0, #0
   12fe4:	strb	r0, [r4, #451]	; 0x1c3
   12fe8:	ldr	r0, [r4, #456]	; 0x1c8
   12fec:	cmp	r0, #0
   12ff0:	bne	13020 <sprintf@plt+0x1764>
   12ff4:	movw	r0, #44880	; 0xaf50
   12ff8:	ldr	r2, [r4]
   12ffc:	movw	r1, #33725	; 0x83bd
   13000:	mov	r3, r6
   13004:	movt	r0, #2
   13008:	movt	r1, #1
   1300c:	ldr	r0, [r0]
   13010:	str	r8, [sp]
   13014:	bl	11814 <rb_helper_write@plt>
   13018:	mov	r0, r4
   1301c:	bl	12c18 <sprintf@plt+0x135c>
   13020:	ldr	r0, [r4, #460]	; 0x1cc
   13024:	subs	r0, r0, #1
   13028:	str	r0, [r4, #460]	; 0x1cc
   1302c:	beq	13038 <sprintf@plt+0x177c>
   13030:	sub	sp, fp, #28
   13034:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13038:	mov	r0, r4
   1303c:	sub	sp, fp, #28
   13040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13044:	b	12bdc <sprintf@plt+0x1320>
   13048:	movw	r1, #33736	; 0x83c8
   1304c:	mov	r0, #67	; 0x43
   13050:	movt	r1, #1
   13054:	b	1306c <sprintf@plt+0x17b0>
   13058:	bl	11784 <rb_outofmemory@plt>
   1305c:	movw	r1, #34116	; 0x8544
   13060:	mov	r0, #67	; 0x43
   13064:	mov	r2, sl
   13068:	movt	r1, #1
   1306c:	bl	123c0 <sprintf@plt+0xb04>
   13070:	mov	r0, #3
   13074:	bl	118a4 <exit@plt>
   13078:	push	{r4, sl, fp, lr}
   1307c:	add	fp, sp, #8
   13080:	cmp	r0, #1
   13084:	ble	1310c <sprintf@plt+0x1850>
   13088:	ldr	r0, [r1, #4]
   1308c:	mov	r4, r1
   13090:	mov	r1, #0
   13094:	mov	r2, #16
   13098:	bl	1164c <strtoull@plt>
   1309c:	mov	r2, r0
   130a0:	subs	r0, r0, #1
   130a4:	mvn	r3, #0
   130a8:	sbc	r1, r1, #0
   130ac:	subs	r0, r0, r3
   130b0:	sbcs	r0, r1, #0
   130b4:	bcs	1311c <sprintf@plt+0x1860>
   130b8:	movw	r0, #61820	; 0xf17c
   130bc:	mov	r1, r2
   130c0:	movt	r0, #2
   130c4:	ldr	r0, [r0]
   130c8:	bl	11778 <rb_dictionary_retrieve@plt>
   130cc:	cmp	r0, #0
   130d0:	popeq	{r4, sl, fp, pc}
   130d4:	mov	r4, r0
   130d8:	ldr	r0, [r0, #460]	; 0x1cc
   130dc:	add	r0, r0, #1
   130e0:	str	r0, [r4, #460]	; 0x1cc
   130e4:	mov	r0, r4
   130e8:	bl	12c18 <sprintf@plt+0x135c>
   130ec:	ldr	r0, [r4, #460]	; 0x1cc
   130f0:	subs	r0, r0, #1
   130f4:	str	r0, [r4, #460]	; 0x1cc
   130f8:	beq	13100 <sprintf@plt+0x1844>
   130fc:	pop	{r4, sl, fp, pc}
   13100:	mov	r0, r4
   13104:	pop	{r4, sl, fp, lr}
   13108:	b	12bdc <sprintf@plt+0x1320>
   1310c:	movw	r1, #33810	; 0x8412
   13110:	mov	r2, r0
   13114:	movt	r1, #1
   13118:	b	13128 <sprintf@plt+0x186c>
   1311c:	ldr	r2, [r4, #4]
   13120:	movw	r1, #33884	; 0x845c
   13124:	movt	r1, #1
   13128:	mov	r0, #67	; 0x43
   1312c:	bl	123c0 <sprintf@plt+0xb04>
   13130:	mov	r0, #3
   13134:	bl	118a4 <exit@plt>
   13138:	b	1313c <sprintf@plt+0x1880>
   1313c:	push	{r4, sl, fp, lr}
   13140:	add	fp, sp, #8
   13144:	bl	14014 <sprintf@plt+0x2758>
   13148:	movw	r0, #61408	; 0xefe0
   1314c:	movt	r0, #2
   13150:	ldr	r0, [r0]
   13154:	cmp	r0, #1
   13158:	blt	13170 <sprintf@plt+0x18b4>
   1315c:	lsl	r2, r0, #2
   13160:	movw	r0, #61352	; 0xefa8
   13164:	mov	r1, #0
   13168:	movt	r0, #2
   1316c:	bl	115f8 <memset@plt>
   13170:	movw	r4, #61344	; 0xefa0
   13174:	movt	r4, #2
   13178:	ldr	r0, [r4]
   1317c:	cmp	r0, #0
   13180:	beq	13188 <sprintf@plt+0x18cc>
   13184:	pop	{r4, sl, fp, pc}
   13188:	movw	r0, #62112	; 0xf2a0
   1318c:	movw	r3, #34383	; 0x864f
   13190:	mov	r1, #2
   13194:	mov	r2, #0
   13198:	movt	r0, #2
   1319c:	movt	r3, #1
   131a0:	ldrh	r0, [r0]
   131a4:	bl	11580 <rb_socket@plt>
   131a8:	cmp	r0, #0
   131ac:	str	r0, [r4]
   131b0:	popeq	{r4, sl, fp, pc}
   131b4:	movw	r2, #13688	; 0x3578
   131b8:	mov	r1, #1
   131bc:	mov	r3, #0
   131c0:	movt	r2, #1
   131c4:	bl	11550 <rb_setselect@plt>
   131c8:	movw	r0, #34403	; 0x8663
   131cc:	movw	r1, #13744	; 0x35b0
   131d0:	mov	r2, #0
   131d4:	mov	r3, #1
   131d8:	movt	r0, #1
   131dc:	movt	r1, #1
   131e0:	bl	11820 <rb_event_add@plt>
   131e4:	movw	r1, #61348	; 0xefa4
   131e8:	movt	r1, #2
   131ec:	str	r0, [r1]
   131f0:	pop	{r4, sl, fp, pc}
   131f4:	push	{r4, sl, fp, lr}
   131f8:	add	fp, sp, #8
   131fc:	movw	r4, #61344	; 0xefa0
   13200:	movt	r4, #2
   13204:	ldr	r0, [r4]
   13208:	bl	11700 <rb_close@plt>
   1320c:	mov	r0, #0
   13210:	str	r0, [r4]
   13214:	movw	r0, #61348	; 0xefa4
   13218:	movt	r0, #2
   1321c:	ldr	r0, [r0]
   13220:	bl	11544 <rb_event_delete@plt>
   13224:	pop	{r4, sl, fp, lr}
   13228:	b	1313c <sprintf@plt+0x1880>
   1322c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13230:	add	fp, sp, #24
   13234:	sub	sp, sp, #256	; 0x100
   13238:	cmp	r0, #0
   1323c:	beq	132e4 <sprintf@plt+0x1a28>
   13240:	mov	r6, sp
   13244:	mov	r4, r2
   13248:	mov	r5, r1
   1324c:	mov	r1, r0
   13250:	mov	r2, #256	; 0x100
   13254:	mov	r0, r6
   13258:	bl	11640 <rb_strlcpy@plt>
   1325c:	mov	r0, r6
   13260:	mov	r1, #46	; 0x2e
   13264:	bl	115a4 <strchr@plt>
   13268:	cmp	r0, #0
   1326c:	bne	132c8 <sprintf@plt+0x1a0c>
   13270:	movw	r0, #61856	; 0xf1a0
   13274:	movt	r0, #2
   13278:	ldrb	r0, [r0]
   1327c:	cmp	r0, #0
   13280:	beq	132c8 <sprintf@plt+0x1a0c>
   13284:	mov	r6, sp
   13288:	mov	r0, r6
   1328c:	bl	116b8 <strlen@plt>
   13290:	mov	r7, r0
   13294:	movw	r0, #61856	; 0xf1a0
   13298:	movt	r0, #2
   1329c:	bl	116b8 <strlen@plt>
   132a0:	add	r0, r7, r0
   132a4:	add	r0, r0, #2
   132a8:	cmp	r0, #254	; 0xfe
   132ac:	bhi	132c8 <sprintf@plt+0x1a0c>
   132b0:	add	r0, r6, r7
   132b4:	mov	r1, #46	; 0x2e
   132b8:	strb	r1, [r0], #1
   132bc:	movw	r1, #61856	; 0xf1a0
   132c0:	movt	r1, #2
   132c4:	bl	11724 <strcpy@plt>
   132c8:	mov	r1, sp
   132cc:	mov	r0, r5
   132d0:	mov	r2, #0
   132d4:	mov	r3, r4
   132d8:	bl	13cb4 <sprintf@plt+0x23f8>
   132dc:	sub	sp, fp, #24
   132e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   132e4:	movw	r0, #34168	; 0x8578
   132e8:	movw	r1, #34178	; 0x8582
   132ec:	movw	r3, #34184	; 0x8588
   132f0:	mov	r2, #412	; 0x19c
   132f4:	movt	r0, #1
   132f8:	movt	r1, #1
   132fc:	movt	r3, #1
   13300:	bl	11628 <__assert_fail@plt>
   13304:	mov	r2, r0
   13308:	mov	r0, r1
   1330c:	mov	r1, r2
   13310:	mov	r2, #0
   13314:	b	13318 <sprintf@plt+0x1a5c>
   13318:	push	{r4, r5, fp, lr}
   1331c:	add	fp, sp, #8
   13320:	mov	r4, r2
   13324:	mov	r5, r1
   13328:	cmp	r2, #0
   1332c:	bne	13360 <sprintf@plt+0x1aa4>
   13330:	bl	13d20 <sprintf@plt+0x2464>
   13334:	mov	r4, r0
   13338:	add	r0, r0, #292	; 0x124
   1333c:	mov	r1, r5
   13340:	mov	r2, #128	; 0x80
   13344:	bl	116dc <memcpy@plt>
   13348:	mov	r0, #1
   1334c:	mov	r1, #256	; 0x100
   13350:	bl	115c8 <calloc@plt>
   13354:	cmp	r0, #0
   13358:	beq	13388 <sprintf@plt+0x1acc>
   1335c:	str	r0, [r4, #420]	; 0x1a4
   13360:	add	r0, r4, #21
   13364:	mov	r1, #256	; 0x100
   13368:	mov	r2, r5
   1336c:	mov	r3, #0
   13370:	bl	1338c <sprintf@plt+0x1ad0>
   13374:	mov	r0, #12
   13378:	strb	r0, [r4, #20]
   1337c:	mov	r0, r4
   13380:	pop	{r4, r5, fp, lr}
   13384:	b	13e10 <sprintf@plt+0x2554>
   13388:	bl	11784 <rb_outofmemory@plt>
   1338c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13390:	add	fp, sp, #28
   13394:	sub	sp, sp, #172	; 0xac
   13398:	ldrh	r7, [r2]
   1339c:	cmp	r7, #10
   133a0:	beq	133dc <sprintf@plt+0x1b20>
   133a4:	cmp	r7, #2
   133a8:	bne	13570 <sprintf@plt+0x1cb4>
   133ac:	movw	r7, #34262	; 0x85d6
   133b0:	cmp	r3, #0
   133b4:	ldrb	r4, [r2, #6]
   133b8:	ldrb	r6, [r2, #4]
   133bc:	ldrb	r5, [r2, #5]
   133c0:	movt	r7, #1
   133c4:	movne	r7, r3
   133c8:	ldrb	r3, [r2, #7]
   133cc:	movw	r2, #34247	; 0x85c7
   133d0:	movt	r2, #1
   133d4:	stm	sp, {r4, r5, r6, r7}
   133d8:	b	1356c <sprintf@plt+0x1cb0>
   133dc:	movw	r5, #34374	; 0x8646
   133e0:	cmp	r3, #0
   133e4:	ldrb	r8, [r2, #8]
   133e8:	ldrb	r6, [r2, #15]
   133ec:	ldrb	ip, [r2, #13]
   133f0:	ldrb	lr, [r2, #12]
   133f4:	ldrb	r9, [r2, #9]
   133f8:	ldrb	sl, [r2, #10]
   133fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13400:	str	r1, [fp, #-44]	; 0xffffffd4
   13404:	movt	r5, #1
   13408:	movne	r5, r3
   1340c:	ldrb	r3, [r2, #23]
   13410:	lsr	r4, r8, #4
   13414:	lsr	r0, sl, #4
   13418:	lsr	r1, r9, #4
   1341c:	and	r8, r8, #15
   13420:	and	r9, r9, #15
   13424:	and	sl, sl, #15
   13428:	str	r3, [fp, #-32]	; 0xffffffe0
   1342c:	ldrb	r3, [r2, #22]
   13430:	str	r3, [fp, #-36]	; 0xffffffdc
   13434:	ldrb	r3, [r2, #21]
   13438:	str	r3, [fp, #-40]	; 0xffffffd8
   1343c:	ldrb	r3, [r2, #20]
   13440:	str	r3, [fp, #-48]	; 0xffffffd0
   13444:	ldrb	r3, [r2, #19]
   13448:	str	r3, [fp, #-56]	; 0xffffffc8
   1344c:	ldrb	r3, [r2, #18]
   13450:	str	r3, [fp, #-60]	; 0xffffffc4
   13454:	ldrb	r3, [r2, #17]
   13458:	str	r3, [fp, #-64]	; 0xffffffc0
   1345c:	ldrb	r3, [r2, #16]
   13460:	str	r3, [fp, #-68]	; 0xffffffbc
   13464:	ldrb	r3, [r2, #14]
   13468:	ldrb	r2, [r2, #11]
   1346c:	str	r0, [sp, #104]	; 0x68
   13470:	str	r4, [sp, #120]	; 0x78
   13474:	str	r5, [sp, #124]	; 0x7c
   13478:	mov	r0, r6
   1347c:	lsr	r6, r6, #4
   13480:	and	r5, ip, #15
   13484:	str	r1, [sp, #112]	; 0x70
   13488:	str	r8, [sp, #116]	; 0x74
   1348c:	str	sl, [sp, #100]	; 0x64
   13490:	str	r9, [sp, #108]	; 0x6c
   13494:	lsr	r1, lr, #4
   13498:	str	r6, [sp, #64]	; 0x40
   1349c:	lsr	r7, r2, #4
   134a0:	lsr	r4, r3, #4
   134a4:	and	r3, r3, #15
   134a8:	and	r8, r2, #15
   134ac:	and	r2, lr, #15
   134b0:	add	lr, sp, #32
   134b4:	str	r7, [sp, #96]	; 0x60
   134b8:	lsr	r7, ip, #4
   134bc:	add	ip, sp, #68	; 0x44
   134c0:	stm	ip, {r3, r4, r5, r7}
   134c4:	and	ip, r0, #15
   134c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   134cc:	str	r2, [sp, #84]	; 0x54
   134d0:	str	r1, [sp, #88]	; 0x58
   134d4:	str	r8, [sp, #92]	; 0x5c
   134d8:	lsr	r1, r0, #4
   134dc:	and	r2, r0, #15
   134e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134e4:	lsr	r3, r0, #4
   134e8:	and	r7, r0, #15
   134ec:	ldr	r0, [fp, #-60]	; 0xffffffc4
   134f0:	lsr	r6, r0, #4
   134f4:	and	r5, r0, #15
   134f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   134fc:	lsr	r4, r0, #4
   13500:	stm	lr, {r4, r5, r6, r7}
   13504:	str	ip, [sp, #60]	; 0x3c
   13508:	and	ip, r0, #15
   1350c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13510:	str	r2, [sp, #52]	; 0x34
   13514:	str	r1, [sp, #56]	; 0x38
   13518:	str	r3, [sp, #48]	; 0x30
   1351c:	lsr	r1, r0, #4
   13520:	and	r2, r0, #15
   13524:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13528:	lsr	r3, r0, #4
   1352c:	and	r7, r0, #15
   13530:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13534:	lsr	r6, r0, #4
   13538:	and	r5, r0, #15
   1353c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13540:	lsr	r4, r0, #4
   13544:	stm	sp, {r4, r5, r6, r7}
   13548:	str	r3, [sp, #16]
   1354c:	str	r1, [sp, #24]
   13550:	and	r3, r0, #15
   13554:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13558:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1355c:	str	r2, [sp, #20]
   13560:	movw	r2, #34275	; 0x85e3
   13564:	str	ip, [sp, #28]
   13568:	movt	r2, #1
   1356c:	bl	11844 <snprintf@plt>
   13570:	sub	sp, fp, #28
   13574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13578:	push	{r4, sl, fp, lr}
   1357c:	add	fp, sp, #8
   13580:	mov	r4, r0
   13584:	mov	r0, r4
   13588:	bl	13624 <sprintf@plt+0x1d68>
   1358c:	cmp	r0, #0
   13590:	bne	13584 <sprintf@plt+0x1cc8>
   13594:	movw	r2, #13688	; 0x3578
   13598:	mov	r0, r4
   1359c:	mov	r1, #1
   135a0:	mov	r3, #0
   135a4:	movt	r2, #1
   135a8:	pop	{r4, sl, fp, lr}
   135ac:	b	11550 <rb_setselect@plt>
   135b0:	push	{r4, r5, r6, sl, fp, lr}
   135b4:	add	fp, sp, #16
   135b8:	bl	116c4 <rb_current_time@plt>
   135bc:	mov	r4, r0
   135c0:	movw	r0, #61392	; 0xefd0
   135c4:	movt	r0, #2
   135c8:	ldr	r5, [r0]
   135cc:	cmp	r5, #0
   135d0:	beq	13620 <sprintf@plt+0x1d64>
   135d4:	movw	r6, #61352	; 0xefa8
   135d8:	movt	r6, #2
   135dc:	ldr	r0, [r5]
   135e0:	ldr	r5, [r5, #8]
   135e4:	ldr	r2, [r0, #280]	; 0x118
   135e8:	ldr	r1, [r0, #284]	; 0x11c
   135ec:	add	r2, r1, r2
   135f0:	cmp	r2, r4
   135f4:	bgt	13618 <sprintf@plt+0x1d5c>
   135f8:	ldr	r2, [r0, #288]	; 0x120
   135fc:	lsl	r1, r1, #1
   13600:	ldr	r3, [r6, r2, lsl #2]
   13604:	add	r3, r3, #1
   13608:	str	r3, [r6, r2, lsl #2]
   1360c:	str	r4, [r0, #280]	; 0x118
   13610:	str	r1, [r0, #284]	; 0x11c
   13614:	bl	13b98 <sprintf@plt+0x22dc>
   13618:	cmp	r5, #0
   1361c:	bne	135dc <sprintf@plt+0x1d20>
   13620:	pop	{r4, r5, r6, sl, fp, pc}
   13624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13628:	add	fp, sp, #28
   1362c:	sub	sp, sp, #524	; 0x20c
   13630:	sub	sp, sp, #1024	; 0x400
   13634:	mov	r1, #128	; 0x80
   13638:	str	r1, [sp, #148]	; 0x94
   1363c:	bl	1155c <rb_get_fd@plt>
   13640:	add	r1, sp, #148	; 0x94
   13644:	add	r4, sp, #20
   13648:	movw	r2, #1036	; 0x40c
   1364c:	mov	r3, #0
   13650:	mov	sl, #0
   13654:	str	r1, [sp, #4]
   13658:	add	r1, sp, #152	; 0x98
   1365c:	str	r4, [sp]
   13660:	bl	11868 <recvfrom@plt>
   13664:	mov	r6, r0
   13668:	add	r0, r0, #1
   1366c:	cmp	r0, #2
   13670:	bcc	13b6c <sprintf@plt+0x22b0>
   13674:	mov	sl, #1
   13678:	cmp	r6, #13
   1367c:	blt	13b6c <sprintf@plt+0x22b0>
   13680:	ldr	r0, [sp, #160]	; 0xa0
   13684:	ldr	r3, [sp, #156]	; 0x9c
   13688:	lsr	r2, r0, #16
   1368c:	rev	r1, r0
   13690:	rev	r2, r2
   13694:	orr	r1, r2, r1, lsr #16
   13698:	str	r1, [sp, #160]	; 0xa0
   1369c:	lsr	r1, r3, #16
   136a0:	orr	r0, r1, r0, lsl #16
   136a4:	rev	r1, r3
   136a8:	rev	r0, r0
   136ac:	pkhtb	r0, r0, r1, asr #16
   136b0:	str	r0, [sp, #156]	; 0x9c
   136b4:	movw	r0, #61392	; 0xefd0
   136b8:	movt	r0, #2
   136bc:	ldr	r0, [r0]
   136c0:	cmp	r0, #0
   136c4:	beq	13b6c <sprintf@plt+0x22b0>
   136c8:	ldrh	r1, [sp, #152]	; 0x98
   136cc:	ldr	r5, [r0]
   136d0:	ldr	r2, [r5, #12]
   136d4:	cmp	r2, r1
   136d8:	beq	136ec <sprintf@plt+0x1e30>
   136dc:	ldr	r0, [r0, #8]
   136e0:	cmp	r0, #0
   136e4:	bne	136cc <sprintf@plt+0x1e10>
   136e8:	b	13b6c <sprintf@plt+0x22b0>
   136ec:	cmp	r5, #0
   136f0:	beq	13b6c <sprintf@plt+0x22b0>
   136f4:	movw	r0, #61408	; 0xefe0
   136f8:	str	r3, [sp, #16]
   136fc:	movt	r0, #2
   13700:	ldr	r8, [r0]
   13704:	cmp	r8, #1
   13708:	blt	137d8 <sprintf@plt+0x1f1c>
   1370c:	movw	r0, #62112	; 0xf2a0
   13710:	ldrh	r7, [sp, #22]
   13714:	ldrh	r9, [sp, #20]
   13718:	movt	r0, #2
   1371c:	add	sl, r0, #4
   13720:	add	r0, r4, #8
   13724:	str	r0, [sp, #12]
   13728:	ldr	r0, [sp, #24]
   1372c:	str	r0, [sp, #8]
   13730:	ldrh	r0, [sl, #-4]
   13734:	cmp	r0, #2
   13738:	beq	13758 <sprintf@plt+0x1e9c>
   1373c:	cmp	r0, #10
   13740:	cmpeq	r9, #10
   13744:	beq	13788 <sprintf@plt+0x1ecc>
   13748:	subs	r8, r8, #1
   1374c:	add	sl, sl, #128	; 0x80
   13750:	bne	13730 <sprintf@plt+0x1e74>
   13754:	b	137d8 <sprintf@plt+0x1f1c>
   13758:	cmp	r9, #2
   1375c:	bne	13748 <sprintf@plt+0x1e8c>
   13760:	ldrh	r0, [sl, #-2]
   13764:	cmp	r0, r7
   13768:	bne	13748 <sprintf@plt+0x1e8c>
   1376c:	ldr	r0, [sl]
   13770:	mov	r2, #1
   13774:	cmp	r0, #0
   13778:	ldrne	r1, [sp, #8]
   1377c:	cmpne	r0, r1
   13780:	beq	137dc <sprintf@plt+0x1f20>
   13784:	b	13748 <sprintf@plt+0x1e8c>
   13788:	ldrh	r0, [sl, #-2]
   1378c:	cmp	r0, r7
   13790:	bne	13748 <sprintf@plt+0x1e8c>
   13794:	ldr	r1, [sp, #12]
   13798:	add	r4, sl, #4
   1379c:	mov	r2, #16
   137a0:	mov	r0, r4
   137a4:	bl	116f4 <bcmp@plt>
   137a8:	mov	r2, #1
   137ac:	cmp	r0, #0
   137b0:	beq	137dc <sprintf@plt+0x1f20>
   137b4:	movw	r1, #40680	; 0x9ee8
   137b8:	mov	r0, r4
   137bc:	mov	r2, #16
   137c0:	movt	r1, #2
   137c4:	bl	116f4 <bcmp@plt>
   137c8:	mov	r2, #1
   137cc:	cmp	r0, #0
   137d0:	bne	13748 <sprintf@plt+0x1e8c>
   137d4:	b	137dc <sprintf@plt+0x1f20>
   137d8:	mov	r2, #0
   137dc:	ldr	r0, [r5, #288]	; 0x120
   137e0:	cmp	r2, r0
   137e4:	beq	137fc <sprintf@plt+0x1f40>
   137e8:	movw	r0, #61352	; 0xefa8
   137ec:	movt	r0, #2
   137f0:	ldr	r1, [r0, r2, lsl #2]
   137f4:	add	r1, r1, #3
   137f8:	str	r1, [r0, r2, lsl #2]
   137fc:	ldr	r0, [sp, #16]
   13800:	mov	sl, #1
   13804:	str	r2, [sp, #12]
   13808:	uxth	r0, r0
   1380c:	cmp	r0, #256	; 0x100
   13810:	add	r0, sp, #152	; 0x98
   13814:	bne	13b6c <sprintf@plt+0x22b0>
   13818:	add	r4, r0, r6
   1381c:	mov	r1, #256	; 0x100
   13820:	add	r6, r0, #12
   13824:	sub	lr, fp, #256	; 0x100
   13828:	str	r1, [sp]
   1382c:	sub	r3, lr, #131	; 0x83
   13830:	mov	r1, r4
   13834:	mov	r2, r6
   13838:	bl	14270 <sprintf@plt+0x29b4>
   1383c:	cmp	r0, #0
   13840:	ble	13b6c <sprintf@plt+0x22b0>
   13844:	sub	lr, fp, #256	; 0x100
   13848:	add	r1, r5, #21
   1384c:	sub	r0, lr, #131	; 0x83
   13850:	bl	11688 <rb_strcasecmp@plt>
   13854:	cmp	r0, #0
   13858:	bne	13b6c <sprintf@plt+0x22b0>
   1385c:	ldr	r1, [sp, #152]	; 0x98
   13860:	tst	r1, #251658240	; 0xf000000
   13864:	bne	138c4 <sprintf@plt+0x2008>
   13868:	ldr	r2, [sp, #156]	; 0x9c
   1386c:	mov	r0, r2
   13870:	bfc	r0, #0, #16
   13874:	cmp	r0, #0
   13878:	beq	138c4 <sprintf@plt+0x2008>
   1387c:	movw	r8, #65535	; 0xffff
   13880:	tst	r2, r8
   13884:	beq	13900 <sprintf@plt+0x2044>
   13888:	mov	r0, r6
   1388c:	mov	r1, r4
   13890:	bl	14744 <sprintf@plt+0x2e88>
   13894:	cmp	r0, #0
   13898:	bmi	13b4c <sprintf@plt+0x2290>
   1389c:	add	r3, sp, #152	; 0x98
   138a0:	add	r0, r0, r6
   138a4:	ldm	r3, {r1, r2, r3}
   138a8:	sub	r7, r2, #1
   138ac:	add	r6, r0, #4
   138b0:	pkhbt	r2, r7, r2
   138b4:	tst	r7, r8
   138b8:	str	r2, [sp, #156]	; 0x9c
   138bc:	bne	13888 <sprintf@plt+0x1fcc>
   138c0:	b	13904 <sprintf@plt+0x2048>
   138c4:	ubfx	r0, r1, #24, #4
   138c8:	ldr	r3, [sp, #12]
   138cc:	sub	r1, r0, #4
   138d0:	cmp	r1, #2
   138d4:	bcc	138e8 <sprintf@plt+0x202c>
   138d8:	cmp	r0, #3
   138dc:	beq	13a88 <sprintf@plt+0x21cc>
   138e0:	cmp	r0, #2
   138e4:	bne	13aa4 <sprintf@plt+0x21e8>
   138e8:	movw	r0, #61352	; 0xefa8
   138ec:	movt	r0, #2
   138f0:	ldr	r1, [r0, r3, lsl #2]
   138f4:	add	r1, r1, #1
   138f8:	str	r1, [r0, r3, lsl #2]
   138fc:	b	13b64 <sprintf@plt+0x22a8>
   13900:	ldr	r3, [sp, #160]	; 0xa0
   13904:	cmp	r6, r4
   13908:	bcs	139dc <sprintf@plt+0x2120>
   1390c:	lsr	r0, r2, #16
   13910:	orr	r0, r0, r3, lsl #16
   13914:	uxth	r7, r0
   13918:	cmp	r7, #0
   1391c:	beq	139dc <sprintf@plt+0x2120>
   13920:	movw	r8, #355	; 0x163
   13924:	sub	r0, r0, #1
   13928:	sub	lr, fp, #256	; 0x100
   1392c:	str	r1, [sp, #152]	; 0x98
   13930:	str	r3, [sp, #160]	; 0xa0
   13934:	mov	r1, r4
   13938:	str	r8, [sp]
   1393c:	pkhbt	r0, r2, r0, lsl #16
   13940:	mov	r2, r6
   13944:	sub	r3, lr, #131	; 0x83
   13948:	str	r0, [sp, #156]	; 0x9c
   1394c:	add	r0, sp, #152	; 0x98
   13950:	bl	14270 <sprintf@plt+0x29b4>
   13954:	cmp	r0, #1
   13958:	blt	13b4c <sprintf@plt+0x2290>
   1395c:	add	r9, r6, r0
   13960:	mov	r1, #0
   13964:	add	r6, r9, #10
   13968:	strb	r1, [fp, #-132]	; 0xffffff7c
   1396c:	cmp	r6, r4
   13970:	bcs	139dc <sprintf@plt+0x2120>
   13974:	mov	r0, r9
   13978:	bl	147e4 <sprintf@plt+0x2f28>
   1397c:	mov	r7, r0
   13980:	add	r0, r9, #2
   13984:	bl	147e4 <sprintf@plt+0x2f28>
   13988:	add	r0, r9, #4
   1398c:	bl	147f4 <sprintf@plt+0x2f38>
   13990:	str	r0, [r5, #16]
   13994:	add	r0, r9, #8
   13998:	bl	147e4 <sprintf@plt+0x2f28>
   1399c:	cmp	r7, #28
   139a0:	beq	13b0c <sprintf@plt+0x2250>
   139a4:	cmp	r7, #12
   139a8:	beq	13ac0 <sprintf@plt+0x2204>
   139ac:	cmp	r7, #1
   139b0:	beq	13b3c <sprintf@plt+0x2280>
   139b4:	add	r6, r6, r0
   139b8:	cmp	r6, r4
   139bc:	bcs	139dc <sprintf@plt+0x2120>
   139c0:	add	r3, sp, #152	; 0x98
   139c4:	ldm	r3, {r1, r2, r3}
   139c8:	lsr	r0, r2, #16
   139cc:	orr	r0, r0, r3, lsl #16
   139d0:	uxth	r7, r0
   139d4:	cmp	r7, #0
   139d8:	bne	13924 <sprintf@plt+0x2068>
   139dc:	ldrb	r0, [r5, #20]
   139e0:	cmp	r0, #12
   139e4:	bne	13a18 <sprintf@plt+0x215c>
   139e8:	ldr	r1, [r5, #420]	; 0x1a4
   139ec:	cmp	r1, #0
   139f0:	beq	13b4c <sprintf@plt+0x2290>
   139f4:	mov	r0, #292	; 0x124
   139f8:	mov	r3, #1
   139fc:	mov	r2, #0
   13a00:	ldrh	r0, [r5, r0]
   13a04:	cmp	r0, #10
   13a08:	ldr	r0, [r5, #424]	; 0x1a8
   13a0c:	movweq	r3, #28
   13a10:	bl	13cb4 <sprintf@plt+0x23f8>
   13a14:	b	13a5c <sprintf@plt+0x21a0>
   13a18:	mov	r0, #1
   13a1c:	mov	r1, #132	; 0x84
   13a20:	bl	115c8 <calloc@plt>
   13a24:	cmp	r0, #0
   13a28:	beq	13b94 <sprintf@plt+0x22d8>
   13a2c:	ldr	r1, [r5, #420]	; 0x1a4
   13a30:	mov	r6, r0
   13a34:	mov	r2, #128	; 0x80
   13a38:	str	r1, [r0], #4
   13a3c:	add	r1, r5, #292	; 0x124
   13a40:	bl	116dc <memcpy@plt>
   13a44:	ldr	r1, [r5, #424]	; 0x1a8
   13a48:	ldm	r1, {r0, r2}
   13a4c:	mov	r1, r6
   13a50:	blx	r2
   13a54:	mov	r0, r6
   13a58:	bl	11664 <free@plt>
   13a5c:	mov	r0, r5
   13a60:	bl	13c14 <sprintf@plt+0x2358>
   13a64:	ldr	r3, [sp, #12]
   13a68:	movw	r0, #61352	; 0xefa8
   13a6c:	movt	r0, #2
   13a70:	ldr	r1, [r0, r3, lsl #2]
   13a74:	asr	r2, r1, #31
   13a78:	add	r1, r1, r2, lsr #30
   13a7c:	asr	r1, r1, #2
   13a80:	str	r1, [r0, r3, lsl #2]
   13a84:	b	13b6c <sprintf@plt+0x22b0>
   13a88:	movw	r0, #61352	; 0xefa8
   13a8c:	movt	r0, #2
   13a90:	ldr	r1, [r0, r3, lsl #2]
   13a94:	asr	r2, r1, #31
   13a98:	add	r1, r1, r2, lsr #30
   13a9c:	asr	r1, r1, #2
   13aa0:	str	r1, [r0, r3, lsl #2]
   13aa4:	ldr	r1, [r5, #424]	; 0x1a8
   13aa8:	ldm	r1, {r0, r2}
   13aac:	mov	r1, #0
   13ab0:	blx	r2
   13ab4:	mov	r0, r5
   13ab8:	bl	13c14 <sprintf@plt+0x2358>
   13abc:	b	13b6c <sprintf@plt+0x22b0>
   13ac0:	ldrb	r0, [r5, #20]
   13ac4:	cmp	r0, #12
   13ac8:	bne	13b4c <sprintf@plt+0x2290>
   13acc:	movw	r0, #355	; 0x163
   13ad0:	sub	lr, fp, #256	; 0x100
   13ad4:	mov	r1, r4
   13ad8:	mov	r2, r6
   13adc:	str	r0, [sp]
   13ae0:	add	r0, sp, #152	; 0x98
   13ae4:	sub	r3, lr, #131	; 0x83
   13ae8:	bl	14270 <sprintf@plt+0x29b4>
   13aec:	cmp	r0, #1
   13af0:	blt	13b4c <sprintf@plt+0x2290>
   13af4:	ldr	r0, [r5, #420]	; 0x1a4
   13af8:	sub	lr, fp, #256	; 0x100
   13afc:	mov	r2, #256	; 0x100
   13b00:	sub	r1, lr, #131	; 0x83
   13b04:	bl	11640 <rb_strlcpy@plt>
   13b08:	b	139dc <sprintf@plt+0x2120>
   13b0c:	cmp	r0, #16
   13b10:	ldrbeq	r0, [r5, #20]
   13b14:	cmpeq	r0, #28
   13b18:	bne	13b4c <sprintf@plt+0x2290>
   13b1c:	mov	r0, #292	; 0x124
   13b20:	mov	r1, #10
   13b24:	mov	r2, r5
   13b28:	strh	r1, [r2, r0]!
   13b2c:	vld1.8	{d16-d17}, [r6]
   13b30:	add	r0, r2, #8
   13b34:	vst1.8	{d16-d17}, [r0]
   13b38:	b	139dc <sprintf@plt+0x2120>
   13b3c:	cmp	r0, #4
   13b40:	ldrbeq	r0, [r5, #20]
   13b44:	cmpeq	r0, #1
   13b48:	beq	13b78 <sprintf@plt+0x22bc>
   13b4c:	ldr	r2, [sp, #12]
   13b50:	movw	r0, #61352	; 0xefa8
   13b54:	movt	r0, #2
   13b58:	ldr	r1, [r0, r2, lsl #2]
   13b5c:	add	r1, r1, #1
   13b60:	str	r1, [r0, r2, lsl #2]
   13b64:	mov	r0, r5
   13b68:	bl	13b98 <sprintf@plt+0x22dc>
   13b6c:	mov	r0, sl
   13b70:	sub	sp, fp, #28
   13b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b78:	mov	r0, #292	; 0x124
   13b7c:	mov	r1, #2
   13b80:	mov	r2, r5
   13b84:	strh	r1, [r2, r0]!
   13b88:	ldr	r0, [r6]
   13b8c:	str	r0, [r2, #4]
   13b90:	b	139dc <sprintf@plt+0x2120>
   13b94:	bl	11784 <rb_outofmemory@plt>
   13b98:	push	{r4, sl, fp, lr}
   13b9c:	add	fp, sp, #8
   13ba0:	mov	r4, r0
   13ba4:	ldrb	r0, [r0, #277]	; 0x115
   13ba8:	sub	r0, r0, #1
   13bac:	tst	r0, #255	; 0xff
   13bb0:	strb	r0, [r4, #277]	; 0x115
   13bb4:	beq	13bdc <sprintf@plt+0x2320>
   13bb8:	ldrb	r3, [r4, #20]
   13bbc:	cmp	r3, #1
   13bc0:	cmpne	r3, #28
   13bc4:	bne	13bf8 <sprintf@plt+0x233c>
   13bc8:	ldr	r1, [r4, #420]	; 0x1a4
   13bcc:	mov	r0, #0
   13bd0:	mov	r2, r4
   13bd4:	pop	{r4, sl, fp, lr}
   13bd8:	b	13cb4 <sprintf@plt+0x23f8>
   13bdc:	ldr	r1, [r4, #424]	; 0x1a8
   13be0:	ldm	r1, {r0, r2}
   13be4:	mov	r1, #0
   13be8:	blx	r2
   13bec:	mov	r0, r4
   13bf0:	pop	{r4, sl, fp, lr}
   13bf4:	b	13c14 <sprintf@plt+0x2358>
   13bf8:	cmp	r3, #12
   13bfc:	popne	{r4, sl, fp, pc}
   13c00:	add	r1, r4, #292	; 0x124
   13c04:	mov	r0, #0
   13c08:	mov	r2, r4
   13c0c:	pop	{r4, sl, fp, lr}
   13c10:	b	13318 <sprintf@plt+0x1a5c>
   13c14:	push	{r4, sl, fp, lr}
   13c18:	add	fp, sp, #8
   13c1c:	cmp	r0, #0
   13c20:	beq	13c94 <sprintf@plt+0x23d8>
   13c24:	ldr	r1, [r0, #8]
   13c28:	ldr	r2, [r0, #4]
   13c2c:	mov	r4, r0
   13c30:	movw	r0, #61392	; 0xefd0
   13c34:	movt	r0, #2
   13c38:	cmp	r1, #0
   13c3c:	beq	13c4c <sprintf@plt+0x2390>
   13c40:	str	r2, [r1, #4]
   13c44:	ldr	r2, [r4, #4]
   13c48:	b	13c50 <sprintf@plt+0x2394>
   13c4c:	str	r2, [r0, #4]
   13c50:	cmp	r2, #0
   13c54:	mov	r3, r0
   13c58:	addne	r3, r2, #8
   13c5c:	str	r1, [r3]
   13c60:	mov	r1, #0
   13c64:	str	r1, [r4, #4]
   13c68:	str	r1, [r4, #8]
   13c6c:	ldr	r1, [r0, #8]
   13c70:	sub	r1, r1, #1
   13c74:	str	r1, [r0, #8]
   13c78:	ldr	r0, [r4, #420]	; 0x1a4
   13c7c:	cmp	r0, #0
   13c80:	beq	13c88 <sprintf@plt+0x23cc>
   13c84:	bl	11664 <free@plt>
   13c88:	mov	r0, r4
   13c8c:	pop	{r4, sl, fp, lr}
   13c90:	b	11664 <free@plt>
   13c94:	movw	r0, #33952	; 0x84a0
   13c98:	movw	r1, #33962	; 0x84aa
   13c9c:	movw	r3, #33990	; 0x84c6
   13ca0:	mov	r2, #235	; 0xeb
   13ca4:	movt	r0, #1
   13ca8:	movt	r1, #1
   13cac:	movt	r3, #1
   13cb0:	bl	11628 <__assert_fail@plt>
   13cb4:	push	{r4, r5, r6, sl, fp, lr}
   13cb8:	add	fp, sp, #16
   13cbc:	mov	r4, r3
   13cc0:	mov	r5, r2
   13cc4:	mov	r6, r1
   13cc8:	cmp	r2, #0
   13ccc:	bne	13cfc <sprintf@plt+0x2440>
   13cd0:	bl	13d20 <sprintf@plt+0x2464>
   13cd4:	mov	r5, r0
   13cd8:	mov	r0, r6
   13cdc:	bl	116b8 <strlen@plt>
   13ce0:	add	r0, r0, #1
   13ce4:	bl	117b4 <malloc@plt>
   13ce8:	cmp	r0, #0
   13cec:	beq	13d1c <sprintf@plt+0x2460>
   13cf0:	mov	r1, r6
   13cf4:	bl	11724 <strcpy@plt>
   13cf8:	str	r0, [r5, #420]	; 0x1a4
   13cfc:	add	r0, r5, #21
   13d00:	mov	r1, r6
   13d04:	mov	r2, #256	; 0x100
   13d08:	bl	11640 <rb_strlcpy@plt>
   13d0c:	strb	r4, [r5, #20]
   13d10:	mov	r0, r5
   13d14:	pop	{r4, r5, r6, sl, fp, lr}
   13d18:	b	13e10 <sprintf@plt+0x2554>
   13d1c:	bl	11784 <rb_outofmemory@plt>
   13d20:	push	{r4, r5, r6, r7, fp, lr}
   13d24:	add	fp, sp, #16
   13d28:	sub	sp, sp, #8
   13d2c:	mov	r5, r0
   13d30:	mov	r0, #1
   13d34:	mov	r1, #428	; 0x1ac
   13d38:	bl	115c8 <calloc@plt>
   13d3c:	cmp	r0, #0
   13d40:	beq	13e0c <sprintf@plt+0x2550>
   13d44:	mov	r4, r0
   13d48:	bl	116c4 <rb_current_time@plt>
   13d4c:	movw	r6, #61392	; 0xefd0
   13d50:	str	r5, [r4, #424]	; 0x1a8
   13d54:	str	r0, [r4, #280]	; 0x118
   13d58:	mov	r1, #4
   13d5c:	mov	r0, #3
   13d60:	add	r7, sp, #6
   13d64:	movt	r6, #2
   13d68:	str	r1, [r4, #284]	; 0x11c
   13d6c:	strb	r0, [r4, #277]	; 0x115
   13d70:	mov	r0, r7
   13d74:	mov	r1, #2
   13d78:	bl	1182c <rb_get_random@plt>
   13d7c:	ldr	r0, [r6]
   13d80:	ldrh	r1, [sp, #6]
   13d84:	cmp	r0, #0
   13d88:	mov	r2, r0
   13d8c:	beq	13db8 <sprintf@plt+0x24fc>
   13d90:	ldr	r3, [r2]
   13d94:	ldr	r5, [r3, #12]
   13d98:	cmp	r5, r1
   13d9c:	beq	13db0 <sprintf@plt+0x24f4>
   13da0:	ldr	r2, [r2, #8]
   13da4:	cmp	r2, #0
   13da8:	bne	13d90 <sprintf@plt+0x24d4>
   13dac:	b	13db8 <sprintf@plt+0x24fc>
   13db0:	cmp	r3, #0
   13db4:	bne	13d70 <sprintf@plt+0x24b4>
   13db8:	cmp	r0, #0
   13dbc:	mov	r2, #0
   13dc0:	str	r4, [r4]
   13dc4:	str	r2, [r4, #4]
   13dc8:	str	r0, [r4, #8]
   13dcc:	str	r1, [r4, #12]
   13dd0:	beq	13de0 <sprintf@plt+0x2524>
   13dd4:	add	r0, r0, #4
   13dd8:	str	r4, [r0]
   13ddc:	b	13df0 <sprintf@plt+0x2534>
   13de0:	mov	r0, r6
   13de4:	ldr	r1, [r0, #4]!
   13de8:	cmp	r1, #0
   13dec:	streq	r4, [r0]
   13df0:	str	r4, [r6]
   13df4:	ldr	r0, [r6, #8]
   13df8:	add	r0, r0, #1
   13dfc:	str	r0, [r6, #8]
   13e00:	mov	r0, r4
   13e04:	sub	sp, fp, #16
   13e08:	pop	{r4, r5, r6, r7, fp, pc}
   13e0c:	bl	11784 <rb_outofmemory@plt>
   13e10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e14:	add	fp, sp, #28
   13e18:	sub	sp, sp, #20
   13e1c:	sub	sp, sp, #1024	; 0x400
   13e20:	add	r5, sp, #16
   13e24:	mov	r6, r0
   13e28:	mov	r1, #0
   13e2c:	mov	r2, #1024	; 0x400
   13e30:	mov	r4, #1024	; 0x400
   13e34:	mov	r0, r5
   13e38:	bl	115f8 <memset@plt>
   13e3c:	ldrb	r2, [r6, #20]
   13e40:	add	r0, r6, #21
   13e44:	mov	r1, #1
   13e48:	mov	r3, r5
   13e4c:	str	r4, [sp]
   13e50:	str	r6, [sp, #12]
   13e54:	bl	14818 <sprintf@plt+0x2f5c>
   13e58:	cmp	r0, #1
   13e5c:	blt	1400c <sprintf@plt+0x2750>
   13e60:	ldr	r2, [sp, #12]
   13e64:	mov	r5, r0
   13e68:	ldrh	r1, [sp, #18]
   13e6c:	movw	r8, #61404	; 0xefdc
   13e70:	movt	r8, #2
   13e74:	ldrh	r0, [r2, #12]
   13e78:	orr	r0, r0, r1, lsl #16
   13e7c:	str	r0, [sp, #16]
   13e80:	ldrb	r0, [r2, #278]	; 0x116
   13e84:	add	r1, r0, #1
   13e88:	strb	r1, [r2, #278]	; 0x116
   13e8c:	ldr	r0, [r8]
   13e90:	add	r0, r0, #1
   13e94:	str	r0, [r8]
   13e98:	movw	r0, #61408	; 0xefe0
   13e9c:	movt	r0, #2
   13ea0:	ldr	r0, [r0]
   13ea4:	cmp	r0, #1
   13ea8:	blt	1400c <sprintf@plt+0x2750>
   13eac:	movw	r4, #61352	; 0xefa8
   13eb0:	mvn	r2, #0
   13eb4:	mov	r9, #0
   13eb8:	add	r6, sp, #16
   13ebc:	uxtab	r7, r2, r1
   13ec0:	movt	r4, #2
   13ec4:	add	r1, r7, r9
   13ec8:	sdiv	r2, r1, r0
   13ecc:	mls	sl, r2, r0, r1
   13ed0:	ldr	r1, [r4, sl, lsl #2]
   13ed4:	cmp	r1, #0
   13ed8:	beq	13f0c <sprintf@plt+0x2650>
   13edc:	sub	r3, r1, #1
   13ee0:	ldr	r1, [r8]
   13ee4:	mov	r2, #243	; 0xf3
   13ee8:	cmp	r3, #3
   13eec:	bhi	13efc <sprintf@plt+0x2640>
   13ef0:	movw	r2, #34420	; 0x8674
   13ef4:	movt	r2, #1
   13ef8:	ldr	r2, [r2, r3, lsl #2]
   13efc:	sdiv	r3, r1, r2
   13f00:	mls	r1, r3, r2, r1
   13f04:	cmp	r1, #0
   13f08:	bne	13f64 <sprintf@plt+0x26a8>
   13f0c:	movw	r0, #61344	; 0xefa0
   13f10:	movt	r0, #2
   13f14:	ldr	r0, [r0]
   13f18:	bl	1155c <rb_get_fd@plt>
   13f1c:	movw	r2, #62112	; 0xf2a0
   13f20:	lsl	r1, sl, #7
   13f24:	mov	r3, #0
   13f28:	movt	r2, #2
   13f2c:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   13f30:	str	r2, [sp]
   13f34:	mov	r2, r5
   13f38:	cmp	r1, #2
   13f3c:	mov	r1, #28
   13f40:	movweq	r1, #16
   13f44:	str	r1, [sp, #4]
   13f48:	mov	r1, r6
   13f4c:	bl	115e0 <sendto@plt>
   13f50:	cmp	r0, r5
   13f54:	beq	14000 <sprintf@plt+0x2744>
   13f58:	movw	r0, #61408	; 0xefe0
   13f5c:	movt	r0, #2
   13f60:	ldr	r0, [r0]
   13f64:	add	r9, r9, #1
   13f68:	cmp	r9, r0
   13f6c:	blt	13ec4 <sprintf@plt+0x2608>
   13f70:	cmp	r0, #1
   13f74:	blt	1400c <sprintf@plt+0x2750>
   13f78:	mov	r6, #0
   13f7c:	add	r8, sp, #16
   13f80:	add	r1, r7, r6
   13f84:	sdiv	r2, r1, r0
   13f88:	mls	sl, r2, r0, r1
   13f8c:	ldr	r1, [r4, sl, lsl #2]
   13f90:	cmp	r1, #0
   13f94:	beq	13ff0 <sprintf@plt+0x2734>
   13f98:	movw	r0, #61344	; 0xefa0
   13f9c:	movt	r0, #2
   13fa0:	ldr	r0, [r0]
   13fa4:	bl	1155c <rb_get_fd@plt>
   13fa8:	movw	r2, #62112	; 0xf2a0
   13fac:	lsl	r1, sl, #7
   13fb0:	mov	r3, #0
   13fb4:	movt	r2, #2
   13fb8:	ldrh	r1, [r2, r1]!	; <UNPREDICTABLE>
   13fbc:	str	r2, [sp]
   13fc0:	mov	r2, r5
   13fc4:	cmp	r1, #2
   13fc8:	mov	r1, #28
   13fcc:	movweq	r1, #16
   13fd0:	str	r1, [sp, #4]
   13fd4:	mov	r1, r8
   13fd8:	bl	115e0 <sendto@plt>
   13fdc:	cmp	r0, r5
   13fe0:	beq	14000 <sprintf@plt+0x2744>
   13fe4:	movw	r0, #61408	; 0xefe0
   13fe8:	movt	r0, #2
   13fec:	ldr	r0, [r0]
   13ff0:	add	r6, r6, #1
   13ff4:	cmp	r6, r0
   13ff8:	blt	13f80 <sprintf@plt+0x26c4>
   13ffc:	b	1400c <sprintf@plt+0x2750>
   14000:	cmn	sl, #1
   14004:	ldrne	r0, [sp, #12]
   14008:	strne	sl, [r0, #288]	; 0x120
   1400c:	sub	sp, fp, #28
   14010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14018:	add	fp, sp, #28
   1401c:	sub	sp, sp, #132	; 0x84
   14020:	movw	r5, #61408	; 0xefe0
   14024:	mov	r0, #0
   14028:	movw	r1, #35927	; 0x8c57
   1402c:	movt	r5, #2
   14030:	movt	r1, #1
   14034:	str	r0, [r5]
   14038:	movw	r0, #34446	; 0x868e
   1403c:	movt	r0, #1
   14040:	bl	115ec <fopen@plt>
   14044:	cmp	r0, #0
   14048:	beq	141ac <sprintf@plt+0x28f0>
   1404c:	mov	r4, r0
   14050:	add	r5, sp, #4
   14054:	mov	r1, #128	; 0x80
   14058:	mov	r0, r5
   1405c:	mov	r2, r4
   14060:	bl	11634 <fgets_unlocked@plt>
   14064:	cmp	r0, #0
   14068:	beq	1419c <sprintf@plt+0x28e0>
   1406c:	sub	r9, r5, #1
   14070:	bl	11790 <__ctype_b_loc@plt>
   14074:	movw	r7, #36561	; 0x8ed1
   14078:	mov	r6, r0
   1407c:	movt	r7, #1
   14080:	mov	r0, r5
   14084:	mov	r1, r7
   14088:	bl	11880 <strpbrk@plt>
   1408c:	cmp	r0, #0
   14090:	mov	sl, r9
   14094:	movne	r1, #0
   14098:	strbne	r1, [r0]
   1409c:	ldr	r0, [r6]
   140a0:	ldrb	r1, [sl, #1]!
   140a4:	add	r2, r0, r1, lsl #1
   140a8:	ldrb	r2, [r2, #1]
   140ac:	tst	r2, #32
   140b0:	bne	140a0 <sprintf@plt+0x27e4>
   140b4:	cmp	r1, #0
   140b8:	cmpne	r1, #35	; 0x23
   140bc:	bne	140dc <sprintf@plt+0x2820>
   140c0:	mov	r0, r5
   140c4:	mov	r1, #128	; 0x80
   140c8:	mov	r2, r4
   140cc:	bl	11634 <fgets_unlocked@plt>
   140d0:	cmp	r0, #0
   140d4:	bne	14080 <sprintf@plt+0x27c4>
   140d8:	b	1419c <sprintf@plt+0x28e0>
   140dc:	cmp	r1, #59	; 0x3b
   140e0:	mov	r8, sl
   140e4:	beq	140c0 <sprintf@plt+0x2804>
   140e8:	ldrb	r1, [r8, #1]!
   140ec:	cmp	r1, #0
   140f0:	beq	14104 <sprintf@plt+0x2848>
   140f4:	add	r2, r0, r1, lsl #1
   140f8:	ldrh	r2, [r2]
   140fc:	ands	r2, r2, #8192	; 0x2000
   14100:	beq	140e8 <sprintf@plt+0x282c>
   14104:	cmp	r1, #0
   14108:	beq	140c0 <sprintf@plt+0x2804>
   1410c:	mov	r0, #0
   14110:	strb	r0, [r8]
   14114:	ldr	r0, [r6]
   14118:	ldrb	r1, [r8, #1]!
   1411c:	add	r1, r0, r1, lsl #1
   14120:	ldrb	r1, [r1, #1]
   14124:	tst	r1, #32
   14128:	bne	14118 <sprintf@plt+0x285c>
   1412c:	movw	r1, #34463	; 0x869f
   14130:	mov	r0, r8
   14134:	movt	r1, #1
   14138:	bl	11880 <strpbrk@plt>
   1413c:	cmp	r0, #0
   14140:	movne	r1, #0
   14144:	strbne	r1, [r0]
   14148:	movw	r1, #34466	; 0x86a2
   1414c:	mov	r0, sl
   14150:	movt	r1, #1
   14154:	bl	11688 <rb_strcasecmp@plt>
   14158:	cmp	r0, #0
   1415c:	beq	14184 <sprintf@plt+0x28c8>
   14160:	movw	r1, #34473	; 0x86a9
   14164:	mov	r0, sl
   14168:	movt	r1, #1
   1416c:	bl	11688 <rb_strcasecmp@plt>
   14170:	cmp	r0, #0
   14174:	bne	140c0 <sprintf@plt+0x2804>
   14178:	mov	r0, r8
   1417c:	bl	141d0 <sprintf@plt+0x2914>
   14180:	b	140c0 <sprintf@plt+0x2804>
   14184:	movw	r0, #61856	; 0xf1a0
   14188:	mov	r1, r8
   1418c:	mov	r2, #256	; 0x100
   14190:	movt	r0, #2
   14194:	bl	11640 <rb_strlcpy@plt>
   14198:	b	140c0 <sprintf@plt+0x2804>
   1419c:	mov	r0, r4
   141a0:	bl	1158c <fclose@plt>
   141a4:	movw	r5, #61408	; 0xefe0
   141a8:	movt	r5, #2
   141ac:	ldr	r0, [r5]
   141b0:	cmp	r0, #0
   141b4:	bne	141c4 <sprintf@plt+0x2908>
   141b8:	movw	r0, #34436	; 0x8684
   141bc:	movt	r0, #1
   141c0:	bl	141d0 <sprintf@plt+0x2914>
   141c4:	mov	r0, #0
   141c8:	sub	sp, fp, #28
   141cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141d0:	push	{r4, r5, r6, sl, fp, lr}
   141d4:	add	fp, sp, #16
   141d8:	sub	sp, sp, #40	; 0x28
   141dc:	movw	r5, #61408	; 0xefe0
   141e0:	movt	r5, #2
   141e4:	ldr	r1, [r5]
   141e8:	cmp	r1, #9
   141ec:	bgt	14268 <sprintf@plt+0x29ac>
   141f0:	vmov.i32	q8, #0	; 0x00000000
   141f4:	add	r2, sp, #8
   141f8:	add	r3, sp, #4
   141fc:	add	r1, r2, #4
   14200:	vst1.32	{d16-d17}, [r1]
   14204:	add	r1, r2, #16
   14208:	vst1.32	{d16-d17}, [r1]
   1420c:	mov	r1, #5
   14210:	str	r1, [sp, #8]
   14214:	mov	r1, #2
   14218:	str	r1, [sp, #16]
   1421c:	movw	r1, #34466	; 0x86a2
   14220:	movt	r1, #1
   14224:	bl	11694 <getaddrinfo@plt>
   14228:	cmp	r0, #0
   1422c:	bne	14268 <sprintf@plt+0x29ac>
   14230:	ldr	r4, [sp, #4]
   14234:	cmp	r4, #0
   14238:	beq	14268 <sprintf@plt+0x29ac>
   1423c:	ldr	r6, [r5]
   14240:	movw	r0, #62112	; 0xf2a0
   14244:	ldr	r2, [r4, #16]
   14248:	ldr	r1, [r4, #20]
   1424c:	movt	r0, #2
   14250:	add	r0, r0, r6, lsl #7
   14254:	bl	116dc <memcpy@plt>
   14258:	add	r0, r6, #1
   1425c:	str	r0, [r5]
   14260:	mov	r0, r4
   14264:	bl	11604 <freeaddrinfo@plt>
   14268:	sub	sp, fp, #16
   1426c:	pop	{r4, r5, r6, sl, fp, pc}
   14270:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14274:	add	fp, sp, #28
   14278:	sub	sp, sp, #284	; 0x11c
   1427c:	cmp	r2, r0
   14280:	bcc	14718 <sprintf@plt+0x2e5c>
   14284:	mov	ip, r1
   14288:	cmp	r2, r1
   1428c:	bcs	14718 <sprintf@plt+0x2e5c>
   14290:	ldrb	r6, [r2]
   14294:	ldr	r1, [fp, #8]
   14298:	mov	r5, r3
   1429c:	cmp	r6, #0
   142a0:	beq	146c0 <sprintf@plt+0x2e04>
   142a4:	str	r0, [sp, #20]
   142a8:	sub	r0, ip, r0
   142ac:	add	r7, sp, #25
   142b0:	str	r2, [sp, #4]
   142b4:	add	r1, r2, #1
   142b8:	mvn	r4, #0
   142bc:	mov	r8, #0
   142c0:	mov	sl, #0
   142c4:	str	r5, [sp, #8]
   142c8:	str	r0, [sp, #16]
   142cc:	rsb	r0, r2, #1
   142d0:	mov	r2, r7
   142d4:	str	r0, [sp, #12]
   142d8:	ands	r3, r6, #192	; 0xc0
   142dc:	beq	14314 <sprintf@plt+0x2a58>
   142e0:	cmp	r3, #192	; 0xc0
   142e4:	beq	1435c <sprintf@plt+0x2aa0>
   142e8:	cmp	r3, #64	; 0x40
   142ec:	uxtbeq	r3, r6
   142f0:	cmpeq	r3, #65	; 0x41
   142f4:	bne	14718 <sprintf@plt+0x2e5c>
   142f8:	ldrb	r3, [r1]
   142fc:	mov	r0, #1
   14300:	add	r5, r3, #7
   14304:	cmp	r3, #0
   14308:	add	r5, r0, r5, lsr #3
   1430c:	movweq	r5, #33	; 0x21
   14310:	b	14318 <sprintf@plt+0x2a5c>
   14314:	uxtb	r5, r6
   14318:	add	r3, sl, #1
   1431c:	add	sl, r5, r3
   14320:	cmp	sl, #254	; 0xfe
   14324:	bgt	14718 <sprintf@plt+0x2e5c>
   14328:	add	r9, r1, r5
   1432c:	cmp	r9, ip
   14330:	bcs	14718 <sprintf@plt+0x2e5c>
   14334:	strb	r6, [r2]
   14338:	add	r0, r7, r3
   1433c:	mov	r2, r5
   14340:	mov	r6, ip
   14344:	bl	116dc <memcpy@plt>
   14348:	add	r0, r8, r5
   1434c:	mov	ip, r6
   14350:	mov	r1, r9
   14354:	add	r8, r0, #1
   14358:	b	1439c <sprintf@plt+0x2ae0>
   1435c:	cmp	r1, ip
   14360:	ldrbcc	r2, [r1]
   14364:	andcc	r0, r6, #63	; 0x3f
   14368:	orrcc	r0, r2, r0, lsl #8
   1436c:	ldrcc	r2, [sp, #20]
   14370:	addcc	r0, r2, r0
   14374:	cmpcc	r0, ip
   14378:	bcs	14718 <sprintf@plt+0x2e5c>
   1437c:	ldr	r2, [sp, #12]
   14380:	cmp	r4, #0
   14384:	add	r8, r8, #2
   14388:	addmi	r4, r2, r1
   1438c:	ldr	r1, [sp, #16]
   14390:	cmp	r8, r1
   14394:	mov	r1, r0
   14398:	bge	14718 <sprintf@plt+0x2e5c>
   1439c:	ldrb	r6, [r1], #1
   143a0:	add	r2, r7, sl
   143a4:	cmp	r6, #0
   143a8:	bne	142d8 <sprintf@plt+0x2a1c>
   143ac:	ldr	r5, [sp, #8]
   143b0:	mov	r0, #0
   143b4:	cmn	r4, #1
   143b8:	strb	r0, [r2]
   143bc:	bgt	143d0 <sprintf@plt+0x2b14>
   143c0:	ldr	r0, [sp, #4]
   143c4:	sub	r4, r1, r0
   143c8:	cmn	r4, #1
   143cc:	beq	14724 <sprintf@plt+0x2e68>
   143d0:	ldr	r1, [fp, #8]
   143d4:	ldrb	r6, [sp, #25]
   143d8:	str	r4, [sp, #16]
   143dc:	add	sl, r5, r1
   143e0:	cmp	r6, #0
   143e4:	beq	14730 <sprintf@plt+0x2e74>
   143e8:	movw	r1, #34484	; 0x86b4
   143ec:	add	r9, sp, #25
   143f0:	mov	ip, #1
   143f4:	mov	lr, #92	; 0x5c
   143f8:	mov	r4, r5
   143fc:	movt	r1, #1
   14400:	uxtb	r3, r6
   14404:	cmp	r3, #192	; 0xc0
   14408:	bcs	14718 <sprintf@plt+0x2e5c>
   1440c:	cmp	r4, r5
   14410:	mov	r2, r6
   14414:	mov	r8, r5
   14418:	beq	14434 <sprintf@plt+0x2b78>
   1441c:	cmp	r4, sl
   14420:	bcs	14718 <sprintf@plt+0x2e5c>
   14424:	mov	r0, #46	; 0x2e
   14428:	strb	r0, [r4], #1
   1442c:	ldrb	r2, [r9]
   14430:	mov	r8, r4
   14434:	and	r0, r2, #192	; 0xc0
   14438:	add	r4, r9, #1
   1443c:	cmp	r0, #64	; 0x40
   14440:	beq	14454 <sprintf@plt+0x2b98>
   14444:	cmp	r0, #192	; 0xc0
   14448:	beq	14718 <sprintf@plt+0x2e5c>
   1444c:	uxtb	r7, r2
   14450:	b	14474 <sprintf@plt+0x2bb8>
   14454:	uxtb	r0, r2
   14458:	cmp	r0, #65	; 0x41
   1445c:	bne	14718 <sprintf@plt+0x2e5c>
   14460:	ldrb	r0, [r4]
   14464:	add	r2, r0, #7
   14468:	cmp	r0, #0
   1446c:	add	r7, ip, r2, lsr #3
   14470:	movweq	r7, #33	; 0x21
   14474:	add	r0, r8, r7
   14478:	cmp	r0, sl
   1447c:	bcs	14718 <sprintf@plt+0x2e5c>
   14480:	and	r0, r6, #192	; 0xc0
   14484:	cmp	r0, #64	; 0x40
   14488:	bne	14518 <sprintf@plt+0x2c5c>
   1448c:	cmp	r3, #65	; 0x41
   14490:	bne	14738 <sprintf@plt+0x2e7c>
   14494:	ldrb	r6, [r4]
   14498:	mov	r0, #7
   1449c:	cmp	r6, #0
   144a0:	movweq	r6, #256	; 0x100
   144a4:	cmp	r6, #9
   144a8:	add	r2, r6, #3
   144ac:	movwhi	r0, #8
   144b0:	cmp	r6, #99	; 0x63
   144b4:	movwhi	r0, #9
   144b8:	add	r0, r0, r2, lsr #2
   144bc:	add	r0, r8, r0
   144c0:	cmp	r0, sl
   144c4:	bcs	14718 <sprintf@plt+0x2e5c>
   144c8:	movw	r0, #23388	; 0x5b5c
   144cc:	mov	r7, r8
   144d0:	add	r9, r9, #2
   144d4:	cmp	r6, #8
   144d8:	movt	r0, #120	; 0x78
   144dc:	str	r0, [r7], #3
   144e0:	bcc	14614 <sprintf@plt+0x2d58>
   144e4:	mov	r4, r6
   144e8:	ldrb	r2, [r9], #1
   144ec:	mov	r0, r7
   144f0:	bl	118bc <sprintf@plt>
   144f4:	movw	r1, #34484	; 0x86b4
   144f8:	sub	r4, r4, #8
   144fc:	add	r7, r7, r0
   14500:	movt	r1, #1
   14504:	cmp	r4, #7
   14508:	bgt	144e8 <sprintf@plt+0x2c2c>
   1450c:	sub	r0, r9, #1
   14510:	str	r0, [sp, #20]
   14514:	b	1461c <sprintf@plt+0x2d60>
   14518:	movw	r0, #4293	; 0x10c5
   1451c:	mov	r9, r4
   14520:	cmp	r7, #1
   14524:	mov	r4, r8
   14528:	movt	r0, #16896	; 0x4200
   1452c:	blt	146a0 <sprintf@plt+0x2de4>
   14530:	ldrb	r2, [r9], #1
   14534:	sub	r3, r2, #34	; 0x22
   14538:	cmp	r3, #30
   1453c:	bhi	14570 <sprintf@plt+0x2cb4>
   14540:	tst	r0, ip, lsl r3
   14544:	beq	14570 <sprintf@plt+0x2cb4>
   14548:	add	r3, r4, #1
   1454c:	cmp	r3, sl
   14550:	bcs	14718 <sprintf@plt+0x2e5c>
   14554:	strb	r2, [r4, #1]
   14558:	strb	lr, [r4]
   1455c:	add	r4, r4, #2
   14560:	sub	r7, r7, #1
   14564:	cmp	r7, #0
   14568:	bgt	14530 <sprintf@plt+0x2c74>
   1456c:	b	146a0 <sprintf@plt+0x2de4>
   14570:	cmp	r2, #92	; 0x5c
   14574:	beq	14548 <sprintf@plt+0x2c8c>
   14578:	sub	r3, r2, #33	; 0x21
   1457c:	cmp	r3, #94	; 0x5e
   14580:	bcc	14604 <sprintf@plt+0x2d48>
   14584:	add	r3, r4, #3
   14588:	cmp	r3, sl
   1458c:	bcs	14718 <sprintf@plt+0x2e5c>
   14590:	movw	r0, #34079	; 0x851f
   14594:	movw	r8, #52429	; 0xcccd
   14598:	strb	lr, [r4]
   1459c:	movt	r0, #20971	; 0x51eb
   145a0:	movt	r8, #52428	; 0xcccc
   145a4:	umull	r3, r0, r2, r0
   145a8:	movw	r3, #34498	; 0x86c2
   145ac:	movt	r3, #1
   145b0:	ldrb	r3, [r3, r0, lsr #5]
   145b4:	strb	r3, [r4, #1]
   145b8:	umull	r3, r6, r2, r8
   145bc:	lsr	r3, r6, #3
   145c0:	movw	r6, #34498	; 0x86c2
   145c4:	add	r3, r3, r3, lsl #2
   145c8:	movt	r6, #1
   145cc:	sub	r3, r2, r3, lsl #1
   145d0:	ldrb	r3, [r6, r3]
   145d4:	strb	r3, [r4, #3]
   145d8:	lsr	r3, r0, #5
   145dc:	mov	r0, #100	; 0x64
   145e0:	mls	r2, r3, r0, r2
   145e4:	movw	r0, #4293	; 0x10c5
   145e8:	movt	r0, #16896	; 0x4200
   145ec:	uxtb	r2, r2
   145f0:	umull	r2, r3, r2, r8
   145f4:	ldrb	r2, [r6, r3, lsr #3]
   145f8:	strb	r2, [r4, #2]
   145fc:	add	r4, r4, #4
   14600:	b	14560 <sprintf@plt+0x2ca4>
   14604:	cmp	r4, sl
   14608:	bcs	14718 <sprintf@plt+0x2e5c>
   1460c:	strb	r2, [r4], #1
   14610:	b	14560 <sprintf@plt+0x2ca4>
   14614:	str	r4, [sp, #20]
   14618:	mov	r4, r6
   1461c:	cmp	r4, #5
   14620:	blt	14634 <sprintf@plt+0x2d78>
   14624:	ldrb	r0, [r9]
   14628:	mov	r2, #255	; 0xff
   1462c:	mov	r3, #8
   14630:	b	14654 <sprintf@plt+0x2d98>
   14634:	cmp	r4, #1
   14638:	blt	14670 <sprintf@plt+0x2db4>
   1463c:	ldrb	r0, [r9]
   14640:	movw	r1, #34489	; 0x86b9
   14644:	mov	r2, #15
   14648:	mov	r3, #4
   1464c:	movt	r1, #1
   14650:	lsr	r0, r0, #4
   14654:	sub	r3, r3, r4
   14658:	and	r2, r0, r2, lsl r3
   1465c:	mov	r0, r7
   14660:	bl	118bc <sprintf@plt>
   14664:	add	r7, r7, r0
   14668:	ldr	r0, [sp, #20]
   1466c:	add	r9, r0, #2
   14670:	movw	r1, #34493	; 0x86bd
   14674:	mov	r0, r7
   14678:	mov	r2, r6
   1467c:	movt	r1, #1
   14680:	bl	118bc <sprintf@plt>
   14684:	add	r4, r7, r0
   14688:	mov	ip, #1
   1468c:	mov	lr, #92	; 0x5c
   14690:	subs	r1, r4, r8
   14694:	movw	r1, #34484	; 0x86b4
   14698:	movt	r1, #1
   1469c:	bmi	14718 <sprintf@plt+0x2e5c>
   146a0:	ldrb	r6, [r9]
   146a4:	cmp	r6, #0
   146a8:	bne	14400 <sprintf@plt+0x2b44>
   146ac:	ldr	r0, [sp, #16]
   146b0:	ldr	r1, [fp, #8]
   146b4:	cmp	r4, r5
   146b8:	bne	146e4 <sprintf@plt+0x2e28>
   146bc:	b	146d0 <sprintf@plt+0x2e14>
   146c0:	mov	r0, #0
   146c4:	add	sl, r5, r1
   146c8:	strb	r0, [sp, #25]
   146cc:	mov	r0, #1
   146d0:	cmp	r1, #0
   146d4:	ble	14718 <sprintf@plt+0x2e5c>
   146d8:	mov	r1, #46	; 0x2e
   146dc:	mov	r4, r5
   146e0:	strb	r1, [r4], #1
   146e4:	cmp	r4, sl
   146e8:	bcs	14718 <sprintf@plt+0x2e5c>
   146ec:	mov	r1, #0
   146f0:	strb	r1, [r4], -r5
   146f4:	cmn	r4, #2
   146f8:	beq	14724 <sprintf@plt+0x2e68>
   146fc:	cmp	r0, #1
   14700:	blt	14728 <sprintf@plt+0x2e6c>
   14704:	ldrb	r1, [r5]
   14708:	cmp	r1, #46	; 0x2e
   1470c:	moveq	r1, #0
   14710:	strbeq	r1, [r5]
   14714:	b	14728 <sprintf@plt+0x2e6c>
   14718:	bl	118b0 <__errno_location@plt>
   1471c:	mov	r1, #90	; 0x5a
   14720:	str	r1, [r0]
   14724:	mvn	r0, #0
   14728:	sub	sp, fp, #28
   1472c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14730:	ldr	r0, [sp, #16]
   14734:	b	146d0 <sprintf@plt+0x2e14>
   14738:	bl	118b0 <__errno_location@plt>
   1473c:	mov	r1, #22
   14740:	b	14720 <sprintf@plt+0x2e64>
   14744:	push	{r4, sl, fp, lr}
   14748:	add	fp, sp, #8
   1474c:	cmp	r0, r1
   14750:	mov	lr, r0
   14754:	bcs	147c0 <sprintf@plt+0x2f04>
   14758:	mov	ip, #1
   1475c:	mov	lr, r0
   14760:	mov	r2, lr
   14764:	ldrb	r3, [r2], #1
   14768:	cmp	r3, #0
   1476c:	beq	147ac <sprintf@plt+0x2ef0>
   14770:	ands	r4, r3, #192	; 0xc0
   14774:	beq	1479c <sprintf@plt+0x2ee0>
   14778:	cmp	r4, #64	; 0x40
   1477c:	bne	147b4 <sprintf@plt+0x2ef8>
   14780:	cmp	r3, #65	; 0x41
   14784:	bne	147c8 <sprintf@plt+0x2f0c>
   14788:	ldrb	r4, [r2]
   1478c:	add	r3, r4, #7
   14790:	cmp	r4, #0
   14794:	add	r3, ip, r3, lsr #3
   14798:	movweq	r3, #33	; 0x21
   1479c:	add	lr, r2, r3
   147a0:	cmp	lr, r1
   147a4:	bcc	14760 <sprintf@plt+0x2ea4>
   147a8:	b	147c0 <sprintf@plt+0x2f04>
   147ac:	mov	lr, r2
   147b0:	b	147c0 <sprintf@plt+0x2f04>
   147b4:	cmp	r4, #192	; 0xc0
   147b8:	bne	147c8 <sprintf@plt+0x2f0c>
   147bc:	add	lr, lr, #2
   147c0:	cmp	lr, r1
   147c4:	bls	147dc <sprintf@plt+0x2f20>
   147c8:	bl	118b0 <__errno_location@plt>
   147cc:	mov	r1, #90	; 0x5a
   147d0:	str	r1, [r0]
   147d4:	mvn	r0, #0
   147d8:	pop	{r4, sl, fp, pc}
   147dc:	sub	r0, lr, r0
   147e0:	pop	{r4, sl, fp, pc}
   147e4:	ldrb	r1, [r0]
   147e8:	ldrb	r0, [r0, #1]
   147ec:	orr	r0, r0, r1, lsl #8
   147f0:	bx	lr
   147f4:	ldr	r0, [r0]
   147f8:	rev	r0, r0
   147fc:	bx	lr
   14800:	rev16	r0, r0
   14804:	strh	r0, [r1]
   14808:	bx	lr
   1480c:	rev	r0, r0
   14810:	str	r0, [r1]
   14814:	bx	lr
   14818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1481c:	add	fp, sp, #28
   14820:	sub	sp, sp, #396	; 0x18c
   14824:	mov	r7, r0
   14828:	mvn	r0, #0
   1482c:	cmp	r3, #0
   14830:	beq	14ff8 <sprintf@plt+0x373c>
   14834:	ldr	r6, [fp, #8]
   14838:	cmp	r6, #12
   1483c:	blt	14ff8 <sprintf@plt+0x373c>
   14840:	mov	r4, #0
   14844:	mov	r5, #65536	; 0x10000
   14848:	subs	r6, r6, #16
   1484c:	str	r5, [r3]
   14850:	str	r4, [r3, #4]
   14854:	str	r4, [r3, #8]
   14858:	str	r4, [sp, #52]	; 0x34
   1485c:	str	r3, [sp, #48]	; 0x30
   14860:	bmi	14ff8 <sprintf@plt+0x373c>
   14864:	add	r4, sp, #129	; 0x81
   14868:	str	r1, [sp, #24]
   1486c:	str	r6, [sp, #32]
   14870:	str	r2, [sp, #40]	; 0x28
   14874:	str	r3, [sp, #36]	; 0x24
   14878:	add	r0, r4, #1
   1487c:	add	r1, r4, #255	; 0xff
   14880:	str	r0, [fp, #-40]	; 0xffffffd8
   14884:	str	r1, [sp, #44]	; 0x2c
   14888:	ldrb	r1, [r7]
   1488c:	cmp	r1, #0
   14890:	beq	14c34 <sprintf@plt+0x3378>
   14894:	movw	r6, #34498	; 0x86c2
   14898:	sub	r0, fp, #40	; 0x28
   1489c:	movt	r6, #1
   148a0:	add	r3, r0, #4
   148a4:	str	r3, [sp, #20]
   148a8:	mov	r0, #0
   148ac:	str	r4, [sp, #28]
   148b0:	uxtb	r9, r1
   148b4:	add	r8, r7, #1
   148b8:	cmp	r0, #0
   148bc:	beq	14958 <sprintf@plt+0x309c>
   148c0:	cmp	r9, #91	; 0x5b
   148c4:	beq	149a0 <sprintf@plt+0x30e4>
   148c8:	mov	r0, r6
   148cc:	mov	r1, r9
   148d0:	mov	r2, #11
   148d4:	bl	1188c <memchr@plt>
   148d8:	cmp	r0, #0
   148dc:	beq	1496c <sprintf@plt+0x30b0>
   148e0:	ldrb	r1, [r7, #1]
   148e4:	mov	r5, #90	; 0x5a
   148e8:	cmp	r1, #0
   148ec:	beq	14fec <sprintf@plt+0x3730>
   148f0:	mov	sl, r0
   148f4:	mov	r0, r6
   148f8:	mov	r2, #11
   148fc:	bl	1188c <memchr@plt>
   14900:	cmp	r0, #0
   14904:	ldrbne	r1, [r7, #2]
   14908:	cmpne	r1, #0
   1490c:	beq	14fec <sprintf@plt+0x3730>
   14910:	mov	r4, r0
   14914:	mov	r0, r6
   14918:	mov	r2, #11
   1491c:	bl	1188c <memchr@plt>
   14920:	cmp	r0, #0
   14924:	beq	14fec <sprintf@plt+0x3730>
   14928:	sub	r1, sl, r6
   1492c:	mov	r2, #100	; 0x64
   14930:	sub	r0, r0, r6
   14934:	mul	r1, r1, r2
   14938:	sub	r2, r4, r6
   1493c:	add	r2, r2, r2, lsl #2
   14940:	add	r1, r1, r2, lsl #1
   14944:	add	r9, r1, r0
   14948:	cmp	r9, #255	; 0xff
   1494c:	bgt	14fec <sprintf@plt+0x3730>
   14950:	add	r8, r7, #3
   14954:	b	1496c <sprintf@plt+0x30b0>
   14958:	mov	r0, #1
   1495c:	cmp	r9, #92	; 0x5c
   14960:	beq	1498c <sprintf@plt+0x30d0>
   14964:	cmp	r9, #46	; 0x2e
   14968:	beq	14a44 <sprintf@plt+0x3188>
   1496c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14970:	ldr	r1, [sp, #44]	; 0x2c
   14974:	cmp	r0, r1
   14978:	bcs	14fe8 <sprintf@plt+0x372c>
   1497c:	add	r1, r0, #1
   14980:	str	r1, [fp, #-40]	; 0xffffffd8
   14984:	strb	r9, [r0]
   14988:	mov	r0, #0
   1498c:	ldrb	r1, [r8]
   14990:	mov	r7, r8
   14994:	cmp	r1, #0
   14998:	bne	148b0 <sprintf@plt+0x2ff4>
   1499c:	b	14fdc <sprintf@plt+0x3720>
   149a0:	mov	r0, r8
   149a4:	mov	r1, #93	; 0x5d
   149a8:	bl	115a4 <strchr@plt>
   149ac:	cmp	r0, #0
   149b0:	beq	1500c <sprintf@plt+0x3750>
   149b4:	mov	r4, r0
   149b8:	mov	r0, #0
   149bc:	add	r9, r4, #2
   149c0:	str	r0, [fp, #-36]	; 0xffffffdc
   149c4:	sub	r0, r9, r8
   149c8:	cmp	r0, #2
   149cc:	blt	1500c <sprintf@plt+0x3750>
   149d0:	ldrb	r0, [r7, #1]
   149d4:	cmp	r0, #120	; 0x78
   149d8:	bne	1500c <sprintf@plt+0x3750>
   149dc:	add	r8, r7, #2
   149e0:	bl	11790 <__ctype_b_loc@plt>
   149e4:	ldrb	r1, [r8]
   149e8:	ldr	r2, [r0]
   149ec:	add	r2, r2, r1, lsl #1
   149f0:	ldrb	r2, [r2, #1]
   149f4:	tst	r2, #16
   149f8:	beq	1500c <sprintf@plt+0x3750>
   149fc:	ldr	r2, [sp, #44]	; 0x2c
   14a00:	ldr	r3, [sp, #20]
   14a04:	mov	ip, #0
   14a08:	cmp	r2, r3
   14a0c:	bls	14b40 <sprintf@plt+0x3284>
   14a10:	cmp	r7, r4
   14a14:	mov	sl, #0
   14a18:	mov	r4, r3
   14a1c:	mov	r2, #0
   14a20:	bcs	14b4c <sprintf@plt+0x3290>
   14a24:	ldr	r4, [sp, #20]
   14a28:	add	r8, r7, #3
   14a2c:	mov	sl, #0
   14a30:	mov	r5, #0
   14a34:	mov	ip, #0
   14a38:	mov	r7, #0
   14a3c:	mov	r3, #0
   14a40:	b	14a9c <sprintf@plt+0x31e0>
   14a44:	ldr	r2, [sp, #28]
   14a48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14a4c:	mov	r5, #90	; 0x5a
   14a50:	mvn	r0, r2
   14a54:	add	r0, r1, r0
   14a58:	tst	r0, #192	; 0xc0
   14a5c:	bne	14fec <sprintf@plt+0x3730>
   14a60:	ldr	r1, [sp, #44]	; 0x2c
   14a64:	cmp	r1, r2
   14a68:	bls	14fec <sprintf@plt+0x3730>
   14a6c:	strb	r0, [r2]
   14a70:	ldrb	r1, [r8]
   14a74:	cmp	r1, #0
   14a78:	beq	1509c <sprintf@plt+0x37e0>
   14a7c:	cmp	r0, #0
   14a80:	cmpne	r1, #46	; 0x2e
   14a84:	beq	14fec <sprintf@plt+0x3730>
   14a88:	ldr	r4, [fp, #-40]	; 0xffffffd8
   14a8c:	add	r0, r4, #1
   14a90:	str	r0, [fp, #-40]	; 0xffffffd8
   14a94:	b	14bcc <sprintf@plt+0x3310>
   14a98:	ldrb	r1, [r8], #1
   14a9c:	uxtb	r1, r1
   14aa0:	cmp	r1, #47	; 0x2f
   14aa4:	beq	14ae4 <sprintf@plt+0x3228>
   14aa8:	cmp	r1, #93	; 0x5d
   14aac:	beq	14be0 <sprintf@plt+0x3324>
   14ab0:	ldr	r2, [r0]
   14ab4:	cmp	r3, #0
   14ab8:	add	r2, r2, r1, lsl #1
   14abc:	ldrh	r2, [r2]
   14ac0:	beq	14aec <sprintf@plt+0x3230>
   14ac4:	tst	r2, #2048	; 0x800
   14ac8:	beq	1500c <sprintf@plt+0x3750>
   14acc:	cmp	r7, #0
   14ad0:	bne	14b28 <sprintf@plt+0x326c>
   14ad4:	cmp	r1, #48	; 0x30
   14ad8:	beq	1500c <sprintf@plt+0x3750>
   14adc:	sub	r7, r8, #1
   14ae0:	b	14b28 <sprintf@plt+0x326c>
   14ae4:	mov	r3, #1
   14ae8:	b	14b28 <sprintf@plt+0x326c>
   14aec:	tst	r2, #4096	; 0x1000
   14af0:	beq	1500c <sprintf@plt+0x3750>
   14af4:	add	sl, sl, #4
   14af8:	cmp	sl, #256	; 0x100
   14afc:	bgt	1500c <sprintf@plt+0x3750>
   14b00:	movw	r2, #34509	; 0x86cd
   14b04:	add	r5, r5, #4
   14b08:	mov	r3, #0
   14b0c:	movt	r2, #1
   14b10:	cmp	r5, #8
   14b14:	moveq	r3, #0
   14b18:	moveq	r5, #0
   14b1c:	ldrb	r1, [r2, r1]
   14b20:	add	ip, r1, ip, lsl #4
   14b24:	strbeq	ip, [r4], #1
   14b28:	cmp	r8, r9
   14b2c:	mov	r2, #0
   14b30:	ldrcc	r1, [sp, #44]	; 0x2c
   14b34:	cmpcc	r4, r1
   14b38:	bcs	14b4c <sprintf@plt+0x3290>
   14b3c:	b	14a98 <sprintf@plt+0x31dc>
   14b40:	mov	sl, #0
   14b44:	mov	r4, r3
   14b48:	mov	r2, #0
   14b4c:	mov	r5, #90	; 0x5a
   14b50:	cmp	r8, r9
   14b54:	bcs	14fec <sprintf@plt+0x3730>
   14b58:	ldr	r0, [sp, #44]	; 0x2c
   14b5c:	ldr	r1, [sp, #28]
   14b60:	cmp	r4, r0
   14b64:	bcs	14fec <sprintf@plt+0x3730>
   14b68:	cmp	r2, #1
   14b6c:	blt	14b9c <sprintf@plt+0x32e0>
   14b70:	add	r0, r2, #3
   14b74:	bic	r0, r0, #3
   14b78:	cmp	r0, sl
   14b7c:	bne	1500c <sprintf@plt+0x3750>
   14b80:	sub	r0, r2, sl
   14b84:	mov	r7, #255	; 0xff
   14b88:	mov	r5, #22
   14b8c:	add	r0, r0, #8
   14b90:	tst	ip, r7, lsr r0
   14b94:	beq	14ba0 <sprintf@plt+0x32e4>
   14b98:	b	14fec <sprintf@plt+0x3730>
   14b9c:	mov	r2, sl
   14ba0:	mov	r0, #65	; 0x41
   14ba4:	strb	r0, [r1]
   14ba8:	subs	r0, r2, #256	; 0x100
   14bac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14bb0:	movne	r0, r2
   14bb4:	strb	r0, [r1]
   14bb8:	add	r0, r4, #1
   14bbc:	str	r0, [fp, #-40]	; 0xffffffd8
   14bc0:	ldrb	r1, [r8], #1
   14bc4:	cmp	r1, #46	; 0x2e
   14bc8:	bne	1503c <sprintf@plt+0x3780>
   14bcc:	ldrb	r1, [r8]
   14bd0:	mov	r7, r8
   14bd4:	cmp	r1, #0
   14bd8:	bne	148a8 <sprintf@plt+0x2fec>
   14bdc:	b	14c38 <sprintf@plt+0x337c>
   14be0:	cmp	r3, #0
   14be4:	beq	14c20 <sprintf@plt+0x3364>
   14be8:	cmp	r7, #0
   14bec:	str	ip, [sp, #16]
   14bf0:	beq	1500c <sprintf@plt+0x3750>
   14bf4:	mov	r0, r7
   14bf8:	sub	r1, fp, #36	; 0x24
   14bfc:	mov	r2, #10
   14c00:	bl	1170c <strtol@plt>
   14c04:	mov	r2, r0
   14c08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c0c:	ldrb	r0, [r0]
   14c10:	cmp	r0, #93	; 0x5d
   14c14:	bne	1500c <sprintf@plt+0x3750>
   14c18:	ldr	ip, [sp, #16]
   14c1c:	b	14c24 <sprintf@plt+0x3368>
   14c20:	mov	r2, #0
   14c24:	cmp	r5, #0
   14c28:	lslne	r0, ip, #4
   14c2c:	strbne	r0, [r4], #1
   14c30:	b	14b4c <sprintf@plt+0x3290>
   14c34:	add	r4, sp, #129	; 0x81
   14c38:	mvn	r1, r4
   14c3c:	mov	r5, #90	; 0x5a
   14c40:	add	r0, r0, r1
   14c44:	tst	r0, #192	; 0xc0
   14c48:	bne	14fec <sprintf@plt+0x3730>
   14c4c:	ldr	r1, [sp, #44]	; 0x2c
   14c50:	mov	r2, r4
   14c54:	mov	r5, #90	; 0x5a
   14c58:	cmp	r4, r1
   14c5c:	bcs	14fec <sprintf@plt+0x3730>
   14c60:	cmp	r0, #0
   14c64:	strb	r0, [r2]
   14c68:	beq	14c8c <sprintf@plt+0x33d0>
   14c6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c70:	ldr	r1, [sp, #44]	; 0x2c
   14c74:	cmp	r0, r1
   14c78:	bcs	14fec <sprintf@plt+0x3730>
   14c7c:	add	r1, r0, #1
   14c80:	str	r1, [fp, #-40]	; 0xffffffd8
   14c84:	mov	r1, #0
   14c88:	strb	r1, [r0]
   14c8c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c90:	add	r1, sp, #129	; 0x81
   14c94:	sub	r0, r0, r1
   14c98:	cmp	r0, #256	; 0x100
   14c9c:	bge	14fec <sprintf@plt+0x3730>
   14ca0:	ldr	r0, [sp, #36]	; 0x24
   14ca4:	ldr	r9, [sp, #48]	; 0x30
   14ca8:	ldr	r8, [sp, #40]	; 0x28
   14cac:	ldr	r3, [sp, #32]
   14cb0:	add	r1, sp, #48	; 0x30
   14cb4:	mov	r7, #0
   14cb8:	add	r4, r0, #12
   14cbc:	mov	r0, #0
   14cc0:	cmp	r9, #0
   14cc4:	beq	14cd8 <sprintf@plt+0x341c>
   14cc8:	mov	r7, r1
   14ccc:	ldr	r2, [r7, #4]!
   14cd0:	cmp	r2, #0
   14cd4:	bne	14ccc <sprintf@plt+0x3410>
   14cd8:	add	r1, r1, #4
   14cdc:	mov	r2, #1
   14ce0:	str	r1, [sp, #20]
   14ce4:	add	r1, r4, r3
   14ce8:	str	r1, [sp, #32]
   14cec:	add	r1, sp, #129	; 0x81
   14cf0:	ldrb	r3, [r1]
   14cf4:	cmp	r3, #192	; 0xc0
   14cf8:	bcs	1502c <sprintf@plt+0x3770>
   14cfc:	and	r6, r3, #192	; 0xc0
   14d00:	cmp	r6, #64	; 0x40
   14d04:	beq	14d18 <sprintf@plt+0x345c>
   14d08:	cmp	r6, #192	; 0xc0
   14d0c:	mov	r6, r3
   14d10:	bne	14d34 <sprintf@plt+0x3478>
   14d14:	b	15000 <sprintf@plt+0x3744>
   14d18:	cmp	r3, #65	; 0x41
   14d1c:	bne	15000 <sprintf@plt+0x3744>
   14d20:	ldrb	r5, [r1, #1]
   14d24:	add	r6, r5, #7
   14d28:	cmp	r5, #0
   14d2c:	add	r6, r2, r6, lsr #3
   14d30:	movweq	r6, #33	; 0x21
   14d34:	add	r6, r6, #1
   14d38:	add	r0, r6, r0
   14d3c:	cmp	r0, #256	; 0x100
   14d40:	bge	1502c <sprintf@plt+0x3770>
   14d44:	add	r1, r1, r6
   14d48:	cmp	r3, #0
   14d4c:	bne	14cf0 <sprintf@plt+0x3434>
   14d50:	add	r0, sp, #48	; 0x30
   14d54:	mov	r6, r4
   14d58:	add	sl, sp, #129	; 0x81
   14d5c:	str	r4, [sp]
   14d60:	str	r7, [sp, #12]
   14d64:	add	r0, r0, #76	; 0x4c
   14d68:	str	r0, [sp, #8]
   14d6c:	mov	r0, #1
   14d70:	ldrb	r3, [sl]
   14d74:	cmp	r9, #0
   14d78:	str	r0, [sp, #44]	; 0x2c
   14d7c:	cmpne	r3, #0
   14d80:	bne	14dcc <sprintf@plt+0x3510>
   14d84:	cmp	r3, #191	; 0xbf
   14d88:	bhi	15020 <sprintf@plt+0x3764>
   14d8c:	ldrb	r0, [sl]
   14d90:	mvn	r5, #0
   14d94:	and	r1, r0, #192	; 0xc0
   14d98:	cmp	r1, #192	; 0xc0
   14d9c:	beq	14efc <sprintf@plt+0x3640>
   14da0:	cmp	r1, #64	; 0x40
   14da4:	bne	14ef8 <sprintf@plt+0x363c>
   14da8:	cmp	r0, #65	; 0x41
   14dac:	bne	14efc <sprintf@plt+0x3640>
   14db0:	ldrb	r0, [sl, #1]
   14db4:	mov	r2, #1
   14db8:	add	r1, r0, #7
   14dbc:	cmp	r0, #0
   14dc0:	add	r5, r2, r1, lsr #3
   14dc4:	movweq	r5, #33	; 0x21
   14dc8:	b	14efc <sprintf@plt+0x3640>
   14dcc:	ldr	r0, [sp, #20]
   14dd0:	mov	r4, #2
   14dd4:	str	r3, [sp, #28]
   14dd8:	cmp	r0, r7
   14ddc:	bcs	14f48 <sprintf@plt+0x368c>
   14de0:	str	r6, [sp, #4]
   14de4:	ldr	r1, [r0]
   14de8:	str	r0, [sp, #16]
   14dec:	ldrb	r8, [r1]
   14df0:	sub	r0, r8, #1
   14df4:	uxtb	r0, r0
   14df8:	cmp	r0, #62	; 0x3e
   14dfc:	bhi	14ee4 <sprintf@plt+0x3628>
   14e00:	sub	ip, r1, r9
   14e04:	cmp	ip, #16384	; 0x4000
   14e08:	bge	14ee4 <sprintf@plt+0x3628>
   14e0c:	mov	r2, r8
   14e10:	mov	lr, sl
   14e14:	mov	r6, r1
   14e18:	tst	r2, #255	; 0xff
   14e1c:	beq	14ecc <sprintf@plt+0x3610>
   14e20:	and	r0, r2, #192	; 0xc0
   14e24:	add	r6, r6, #1
   14e28:	cmp	r0, #192	; 0xc0
   14e2c:	bne	14e50 <sprintf@plt+0x3594>
   14e30:	ldrb	r0, [r6]
   14e34:	and	r2, r2, #63	; 0x3f
   14e38:	mov	r6, r9
   14e3c:	orr	r0, r0, r2, lsl #8
   14e40:	ldrb	r2, [r6, r0]!
   14e44:	cmp	r2, #0
   14e48:	bne	14e20 <sprintf@plt+0x3564>
   14e4c:	b	14ecc <sprintf@plt+0x3610>
   14e50:	cmp	r0, #0
   14e54:	bne	14f3c <sprintf@plt+0x3680>
   14e58:	ldrb	r0, [lr]
   14e5c:	uxtb	r2, r2
   14e60:	cmp	r2, r0
   14e64:	bne	14ecc <sprintf@plt+0x3610>
   14e68:	ldrb	r5, [lr, #1]
   14e6c:	add	r0, lr, #2
   14e70:	mvn	r3, #64	; 0x40
   14e74:	uxtb	r4, r5
   14e78:	uxtab	r3, r3, r5
   14e7c:	cmp	r3, #26
   14e80:	mov	r3, #32
   14e84:	uxtabcc	r4, r3, r5
   14e88:	ldrb	r3, [r6]
   14e8c:	sub	r5, r3, #65	; 0x41
   14e90:	cmp	r5, #26
   14e94:	addcc	r3, r3, #32
   14e98:	cmp	r4, r3
   14e9c:	mov	r4, #2
   14ea0:	bne	14ecc <sprintf@plt+0x3610>
   14ea4:	ldrb	r5, [r0], #1
   14ea8:	subs	r2, r2, #1
   14eac:	add	r6, r6, #1
   14eb0:	bne	14e70 <sprintf@plt+0x35b4>
   14eb4:	ldrb	r2, [r6]
   14eb8:	sub	lr, r0, #1
   14ebc:	cmp	r5, #0
   14ec0:	bne	14e18 <sprintf@plt+0x355c>
   14ec4:	cmp	r2, #0
   14ec8:	beq	14fa4 <sprintf@plt+0x36e8>
   14ecc:	uxtab	r1, r1, r8
   14ed0:	ldrb	r8, [r1, #1]!
   14ed4:	sub	r0, r8, #1
   14ed8:	uxtb	r0, r0
   14edc:	cmp	r0, #63	; 0x3f
   14ee0:	bcc	14e00 <sprintf@plt+0x3544>
   14ee4:	ldr	r0, [sp, #16]
   14ee8:	add	r0, r0, #4
   14eec:	cmp	r0, r7
   14ef0:	bcc	14de4 <sprintf@plt+0x3528>
   14ef4:	b	14f40 <sprintf@plt+0x3684>
   14ef8:	mov	r5, r0
   14efc:	ldr	r1, [sp, #32]
   14f00:	add	r0, r6, r5
   14f04:	add	r0, r0, #1
   14f08:	cmp	r0, r1
   14f0c:	bcs	15020 <sprintf@plt+0x3764>
   14f10:	add	r4, r5, #1
   14f14:	mov	r0, r6
   14f18:	mov	r1, sl
   14f1c:	mov	r2, r4
   14f20:	bl	116dc <memcpy@plt>
   14f24:	ldr	r0, [sp, #44]	; 0x2c
   14f28:	add	r6, r6, r4
   14f2c:	add	sl, sl, r4
   14f30:	cmp	r5, #0
   14f34:	bne	14d70 <sprintf@plt+0x34b4>
   14f38:	b	15014 <sprintf@plt+0x3758>
   14f3c:	mov	r4, #90	; 0x5a
   14f40:	ldr	r8, [sp, #40]	; 0x28
   14f44:	ldr	r6, [sp, #4]
   14f48:	bl	118b0 <__errno_location@plt>
   14f4c:	str	r4, [r0]
   14f50:	ldr	r0, [sp, #8]
   14f54:	ldr	r1, [sp, #12]
   14f58:	cmp	r1, r0
   14f5c:	bcs	14f9c <sprintf@plt+0x36e0>
   14f60:	ldr	r3, [sp, #28]
   14f64:	sub	r0, r6, r9
   14f68:	cmp	r0, #16384	; 0x4000
   14f6c:	bge	14d84 <sprintf@plt+0x34c8>
   14f70:	ldr	r0, [sp, #44]	; 0x2c
   14f74:	cmp	r0, #0
   14f78:	beq	14d84 <sprintf@plt+0x34c8>
   14f7c:	ldr	r0, [sp, #12]
   14f80:	mov	r2, #0
   14f84:	mov	r1, #0
   14f88:	str	r1, [sp, #44]	; 0x2c
   14f8c:	str	r6, [r0]
   14f90:	str	r2, [r0, #4]!
   14f94:	str	r0, [sp, #12]
   14f98:	b	14d84 <sprintf@plt+0x34c8>
   14f9c:	ldr	r3, [sp, #28]
   14fa0:	b	14d84 <sprintf@plt+0x34c8>
   14fa4:	ldr	r8, [sp, #40]	; 0x28
   14fa8:	ldr	r6, [sp, #4]
   14fac:	cmp	ip, #0
   14fb0:	bmi	14f50 <sprintf@plt+0x3694>
   14fb4:	ldr	r1, [sp, #32]
   14fb8:	add	r0, r6, #1
   14fbc:	cmp	r0, r1
   14fc0:	bcs	15020 <sprintf@plt+0x3764>
   14fc4:	mov	r0, #192	; 0xc0
   14fc8:	strb	ip, [r6, #1]
   14fcc:	orr	r0, r0, ip, lsr #8
   14fd0:	strb	r0, [r6]
   14fd4:	add	r6, r6, #2
   14fd8:	b	15050 <sprintf@plt+0x3794>
   14fdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fe0:	ldr	r4, [sp, #28]
   14fe4:	b	14c38 <sprintf@plt+0x337c>
   14fe8:	mov	r5, #90	; 0x5a
   14fec:	bl	118b0 <__errno_location@plt>
   14ff0:	str	r5, [r0]
   14ff4:	mvn	r0, #0
   14ff8:	sub	sp, fp, #28
   14ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15000:	bl	118b0 <__errno_location@plt>
   15004:	mov	r1, #22
   15008:	b	15034 <sprintf@plt+0x3778>
   1500c:	mov	r5, #22
   15010:	b	14fec <sprintf@plt+0x3730>
   15014:	ldr	r0, [sp, #32]
   15018:	cmp	r6, r0
   1501c:	bls	15050 <sprintf@plt+0x3794>
   15020:	cmp	r9, #0
   15024:	movne	r0, #0
   15028:	strne	r0, [r7]
   1502c:	bl	118b0 <__errno_location@plt>
   15030:	mov	r1, #90	; 0x5a
   15034:	str	r1, [r0]
   15038:	b	14ff4 <sprintf@plt+0x3738>
   1503c:	mov	r5, #22
   15040:	cmp	r1, #0
   15044:	bne	14fec <sprintf@plt+0x3730>
   15048:	mov	r0, #0
   1504c:	b	14c4c <sprintf@plt+0x3390>
   15050:	ldr	r0, [sp]
   15054:	subs	r0, r6, r0
   15058:	mvn	r0, #0
   1505c:	bmi	14ff8 <sprintf@plt+0x373c>
   15060:	ldr	r0, [sp, #24]
   15064:	ldr	r2, [sp, #36]	; 0x24
   15068:	mov	r1, #256	; 0x100
   1506c:	strb	r0, [r6, #3]
   15070:	lsr	r0, r0, #8
   15074:	strb	r8, [r6, #1]
   15078:	strb	r0, [r6, #2]
   1507c:	lsr	r0, r8, #8
   15080:	strb	r0, [r6]
   15084:	ldr	r0, [r2, #4]
   15088:	bfi	r0, r1, #0, #16
   1508c:	str	r0, [r2, #4]
   15090:	sub	r0, r6, r2
   15094:	add	r0, r0, #4
   15098:	b	14ff8 <sprintf@plt+0x373c>
   1509c:	cmp	r0, #0
   150a0:	beq	150c4 <sprintf@plt+0x3808>
   150a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150a8:	ldr	r1, [sp, #44]	; 0x2c
   150ac:	cmp	r0, r1
   150b0:	bcs	14fec <sprintf@plt+0x3730>
   150b4:	add	r1, r0, #1
   150b8:	str	r1, [fp, #-40]	; 0xffffffd8
   150bc:	mov	r1, #0
   150c0:	strb	r1, [r0]
   150c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150c8:	add	r1, sp, #129	; 0x81
   150cc:	sub	r0, r0, r1
   150d0:	cmp	r0, #255	; 0xff
   150d4:	ble	14ca0 <sprintf@plt+0x33e4>
   150d8:	b	14fec <sprintf@plt+0x3730>
   150dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150e0:	add	fp, sp, #28
   150e4:	sub	sp, sp, #20
   150e8:	ldr	r4, [r2, #8]
   150ec:	mov	r5, r2
   150f0:	mov	r0, r4
   150f4:	bl	116b8 <strlen@plt>
   150f8:	add	r0, r0, #1
   150fc:	bl	117b4 <malloc@plt>
   15100:	cmp	r0, #0
   15104:	beq	153ec <sprintf@plt+0x3b30>
   15108:	mov	r1, r4
   1510c:	str	r5, [sp, #4]
   15110:	bl	11724 <strcpy@plt>
   15114:	ldrb	r1, [r0]
   15118:	mov	r5, #0
   1511c:	str	r0, [sp]
   15120:	cmp	r1, #42	; 0x2a
   15124:	bne	15138 <sprintf@plt+0x387c>
   15128:	mov	r0, #0
   1512c:	mov	r7, #0
   15130:	str	r0, [sp, #8]
   15134:	b	15260 <sprintf@plt+0x39a4>
   15138:	movw	r1, #34801	; 0x87f1
   1513c:	add	r2, sp, #16
   15140:	movt	r1, #1
   15144:	bl	11598 <rb_strtok_r@plt>
   15148:	mov	r8, r0
   1514c:	cmp	r0, #0
   15150:	mov	r0, #0
   15154:	mov	r7, #0
   15158:	str	r0, [sp, #8]
   1515c:	beq	15260 <sprintf@plt+0x39a4>
   15160:	mov	r0, #0
   15164:	mov	r7, #0
   15168:	mov	sl, #0
   1516c:	str	r0, [sp, #8]
   15170:	mov	r0, #1
   15174:	mov	r1, #72	; 0x48
   15178:	str	r7, [sp, #12]
   1517c:	bl	115c8 <calloc@plt>
   15180:	cmp	r0, #0
   15184:	beq	153ec <sprintf@plt+0x3b30>
   15188:	mov	r5, r0
   1518c:	mov	r9, #2
   15190:	mov	r7, #0
   15194:	mov	r4, r8
   15198:	ldrb	r6, [r4]
   1519c:	cmp	r6, #46	; 0x2e
   151a0:	beq	151c8 <sprintf@plt+0x390c>
   151a4:	cmp	r6, #0
   151a8:	beq	151e0 <sprintf@plt+0x3924>
   151ac:	bl	11790 <__ctype_b_loc@plt>
   151b0:	ldr	r0, [r0]
   151b4:	add	r0, r0, r6, lsl #1
   151b8:	ldrb	r0, [r0, #1]
   151bc:	tst	r0, #8
   151c0:	bne	151d8 <sprintf@plt+0x391c>
   151c4:	b	153c8 <sprintf@plt+0x3b0c>
   151c8:	cmp	r7, #3
   151cc:	bge	153e0 <sprintf@plt+0x3b24>
   151d0:	add	r7, r7, #1
   151d4:	mov	r9, #1
   151d8:	add	r4, r4, #1
   151dc:	b	15198 <sprintf@plt+0x38dc>
   151e0:	sub	r0, r7, #1
   151e4:	cmp	r0, #2
   151e8:	bcc	153f0 <sprintf@plt+0x3b34>
   151ec:	add	r0, r5, #4
   151f0:	mov	r1, r8
   151f4:	mov	r2, #53	; 0x35
   151f8:	str	r9, [r5]
   151fc:	bl	11640 <rb_strlcpy@plt>
   15200:	mov	r0, #0
   15204:	str	r5, [r5, #60]	; 0x3c
   15208:	cmp	sl, #0
   1520c:	str	r0, [r5, #64]	; 0x40
   15210:	str	sl, [r5, #68]	; 0x44
   15214:	add	r5, r5, #60	; 0x3c
   15218:	beq	15224 <sprintf@plt+0x3968>
   1521c:	str	r5, [sl, #4]
   15220:	b	15234 <sprintf@plt+0x3978>
   15224:	ldr	r0, [sp, #8]
   15228:	cmp	r0, #0
   1522c:	moveq	r0, r5
   15230:	str	r0, [sp, #8]
   15234:	movw	r1, #34801	; 0x87f1
   15238:	ldr	r7, [sp, #12]
   1523c:	mov	r0, #0
   15240:	add	r2, sp, #16
   15244:	movt	r1, #1
   15248:	bl	11598 <rb_strtok_r@plt>
   1524c:	mov	r8, r0
   15250:	add	r7, r7, #1
   15254:	cmp	r0, #0
   15258:	mov	sl, r5
   1525c:	bne	15170 <sprintf@plt+0x38b4>
   15260:	ldr	r0, [sp]
   15264:	bl	11664 <free@plt>
   15268:	ldr	r4, [sp, #4]
   1526c:	ldr	r0, [r4, #4]
   15270:	bl	11730 <atoi@plt>
   15274:	ands	sl, r0, #3
   15278:	beq	15290 <sprintf@plt+0x39d4>
   1527c:	ldr	r6, [r4]
   15280:	cmp	r6, #0
   15284:	ldrne	r8, [r4, #12]
   15288:	cmpne	r8, #0
   1528c:	bne	152a8 <sprintf@plt+0x39ec>
   15290:	movw	r1, #35003	; 0x88bb
   15294:	movt	r1, #1
   15298:	mov	r0, #67	; 0x43
   1529c:	bl	123c0 <sprintf@plt+0xb04>
   152a0:	mov	r0, #3
   152a4:	bl	118a4 <exit@plt>
   152a8:	mov	r0, r6
   152ac:	bl	1580c <sprintf@plt+0x3f50>
   152b0:	cmp	r0, #0
   152b4:	beq	152c8 <sprintf@plt+0x3a0c>
   152b8:	mov	r4, r0
   152bc:	mov	r0, #0
   152c0:	strb	r0, [r4, #784]	; 0x310
   152c4:	b	1533c <sprintf@plt+0x3a80>
   152c8:	mov	r0, #1
   152cc:	mov	r1, #800	; 0x320
   152d0:	bl	115c8 <calloc@plt>
   152d4:	cmp	r0, #0
   152d8:	beq	153ec <sprintf@plt+0x3b30>
   152dc:	mov	r4, r0
   152e0:	bl	11838 <rb_make_rb_dlink_node@plt>
   152e4:	cmp	r0, #0
   152e8:	beq	153fc <sprintf@plt+0x3b40>
   152ec:	mov	r1, #0
   152f0:	str	r1, [r0, #4]
   152f4:	movw	r1, #61412	; 0xefe4
   152f8:	str	r4, [r0]
   152fc:	movt	r1, #2
   15300:	ldr	r2, [r1]
   15304:	cmp	r2, #0
   15308:	str	r2, [r0, #8]
   1530c:	beq	1531c <sprintf@plt+0x3a60>
   15310:	add	r2, r2, #4
   15314:	str	r0, [r2]
   15318:	b	1532c <sprintf@plt+0x3a70>
   1531c:	mov	r2, r1
   15320:	ldr	r3, [r2, #4]!
   15324:	cmp	r3, #0
   15328:	streq	r0, [r2]
   1532c:	str	r0, [r1]
   15330:	ldr	r0, [r1, #8]
   15334:	add	r0, r0, #1
   15338:	str	r0, [r1, #8]
   1533c:	mov	r0, r4
   15340:	mov	r1, r6
   15344:	mov	r2, #256	; 0x100
   15348:	bl	11640 <rb_strlcpy@plt>
   1534c:	add	r0, r4, #256	; 0x100
   15350:	mov	r1, r8
   15354:	mov	r2, #512	; 0x200
   15358:	bl	11640 <rb_strlcpy@plt>
   1535c:	cmp	r5, #0
   15360:	strb	sl, [r4, #768]	; 0x300
   15364:	beq	15394 <sprintf@plt+0x3ad8>
   15368:	ldr	r0, [r4, #772]	; 0x304
   1536c:	cmp	r0, #0
   15370:	beq	153a8 <sprintf@plt+0x3aec>
   15374:	ldr	r1, [sp, #8]
   15378:	str	r0, [r1, #8]
   1537c:	str	r1, [r0, #4]
   15380:	str	r5, [r4, #772]	; 0x304
   15384:	ldr	r0, [r4, #780]	; 0x30c
   15388:	add	r0, r0, r7
   1538c:	str	r0, [r4, #780]	; 0x30c
   15390:	b	153b8 <sprintf@plt+0x3afc>
   15394:	mov	r0, #0
   15398:	cmp	r4, #0
   1539c:	str	r0, [r4, #796]	; 0x31c
   153a0:	bne	153c0 <sprintf@plt+0x3b04>
   153a4:	b	15290 <sprintf@plt+0x39d4>
   153a8:	ldr	r0, [sp, #8]
   153ac:	str	r5, [r4, #772]	; 0x304
   153b0:	str	r0, [r4, #776]	; 0x308
   153b4:	str	r7, [r4, #780]	; 0x30c
   153b8:	mov	r0, #0
   153bc:	str	r0, [r4, #796]	; 0x31c
   153c0:	sub	sp, fp, #28
   153c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153c8:	movw	r1, #34861	; 0x882d
   153cc:	mov	r0, #67	; 0x43
   153d0:	mov	r2, r6
   153d4:	movt	r1, #1
   153d8:	bl	123c0 <sprintf@plt+0xb04>
   153dc:	b	152a0 <sprintf@plt+0x39e4>
   153e0:	movw	r1, #34803	; 0x87f3
   153e4:	movt	r1, #1
   153e8:	b	15298 <sprintf@plt+0x39dc>
   153ec:	bl	11784 <rb_outofmemory@plt>
   153f0:	movw	r1, #34941	; 0x887d
   153f4:	movt	r1, #1
   153f8:	b	15298 <sprintf@plt+0x39dc>
   153fc:	movw	r0, #33952	; 0x84a0
   15400:	movw	r1, #33962	; 0x84aa
   15404:	movw	r3, #34057	; 0x8509
   15408:	mov	r2, #144	; 0x90
   1540c:	movt	r0, #1
   15410:	movt	r1, #1
   15414:	movt	r3, #1
   15418:	bl	11628 <__assert_fail@plt>
   1541c:	push	{r4, r5, fp, lr}
   15420:	add	fp, sp, #8
   15424:	ldr	r5, [r2]
   15428:	mov	r0, r5
   1542c:	bl	1580c <sprintf@plt+0x3f50>
   15430:	cmp	r0, #0
   15434:	beq	15490 <sprintf@plt+0x3bd4>
   15438:	mov	r4, r0
   1543c:	ldr	r0, [r0, #788]	; 0x314
   15440:	cmp	r0, #1
   15444:	movge	r0, #1
   15448:	strbge	r0, [r4, #784]	; 0x310
   1544c:	popge	{r4, r5, fp, pc}
   15450:	movw	r5, #61412	; 0xefe4
   15454:	movt	r5, #2
   15458:	ldr	r2, [r5]
   1545c:	cmp	r2, #0
   15460:	beq	154d8 <sprintf@plt+0x3c1c>
   15464:	ldr	r3, [r2]
   15468:	mov	r0, r2
   1546c:	ldr	r2, [r2, #8]
   15470:	cmp	r3, r4
   15474:	bne	1545c <sprintf@plt+0x3ba0>
   15478:	ldr	r3, [r0, #4]
   1547c:	cmp	r2, #0
   15480:	beq	154a8 <sprintf@plt+0x3bec>
   15484:	str	r3, [r2, #4]
   15488:	ldr	r3, [r0, #4]
   1548c:	b	154ac <sprintf@plt+0x3bf0>
   15490:	movw	r1, #35048	; 0x88e8
   15494:	mov	r0, #87	; 0x57
   15498:	mov	r2, r5
   1549c:	movt	r1, #1
   154a0:	pop	{r4, r5, fp, lr}
   154a4:	b	123c0 <sprintf@plt+0xb04>
   154a8:	str	r3, [r5, #4]
   154ac:	cmp	r3, #0
   154b0:	mov	r1, r5
   154b4:	addne	r1, r3, #8
   154b8:	str	r2, [r1]
   154bc:	mov	r1, #0
   154c0:	str	r1, [r0, #4]
   154c4:	str	r1, [r0, #8]
   154c8:	ldr	r1, [r5, #8]
   154cc:	sub	r1, r1, #1
   154d0:	str	r1, [r5, #8]
   154d4:	bl	116e8 <rb_free_rb_dlink_node@plt>
   154d8:	mov	r0, r4
   154dc:	pop	{r4, r5, fp, lr}
   154e0:	b	11664 <free@plt>
   154e4:	b	15858 <sprintf@plt+0x3f9c>
   154e8:	push	{fp, lr}
   154ec:	mov	fp, sp
   154f0:	ldr	r0, [r2]
   154f4:	bl	11730 <atoi@plt>
   154f8:	cmn	r0, #1
   154fc:	mov	r2, r0
   15500:	movwgt	r0, #44516	; 0xade4
   15504:	movtgt	r0, #2
   15508:	strgt	r2, [r0]
   1550c:	popgt	{fp, pc}
   15510:	movw	r1, #35092	; 0x8914
   15514:	mov	r0, #67	; 0x43
   15518:	movt	r1, #1
   1551c:	bl	123c0 <sprintf@plt+0xb04>
   15520:	mov	r0, #3
   15524:	bl	118a4 <exit@plt>
   15528:	push	{r4, r5, r6, sl, fp, lr}
   1552c:	add	fp, sp, #16
   15530:	sub	sp, sp, #8
   15534:	movw	r6, #61820	; 0xf17c
   15538:	mov	r4, sp
   1553c:	movt	r6, #2
   15540:	mov	r1, r4
   15544:	ldr	r0, [r6]
   15548:	bl	116a0 <rb_dictionary_foreach_start@plt>
   1554c:	ldr	r0, [r6]
   15550:	mov	r1, r4
   15554:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   15558:	cmp	r0, #0
   1555c:	beq	15594 <sprintf@plt+0x3cd8>
   15560:	movw	r4, #35344	; 0x8a10
   15564:	mov	r5, sp
   15568:	movt	r4, #1
   1556c:	mov	r1, r4
   15570:	bl	15e30 <sprintf@plt+0x4574>
   15574:	ldr	r0, [r6]
   15578:	mov	r1, r5
   1557c:	bl	11658 <rb_dictionary_foreach_next@plt>
   15580:	ldr	r0, [r6]
   15584:	mov	r1, r5
   15588:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   1558c:	cmp	r0, #0
   15590:	bne	1556c <sprintf@plt+0x3cb0>
   15594:	bl	15858 <sprintf@plt+0x3f9c>
   15598:	sub	sp, fp, #16
   1559c:	pop	{r4, r5, r6, sl, fp, pc}
   155a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   155a4:	add	fp, sp, #24
   155a8:	mov	r9, r0
   155ac:	movw	r0, #61412	; 0xefe4
   155b0:	movt	r0, #2
   155b4:	ldr	r0, [r0, #8]
   155b8:	cmp	r0, #0
   155bc:	beq	15640 <sprintf@plt+0x3d84>
   155c0:	ldr	r0, [r9, #460]	; 0x1cc
   155c4:	mov	r1, #16
   155c8:	add	r0, r0, #1
   155cc:	str	r0, [r9, #460]	; 0x1cc
   155d0:	movw	r0, #44456	; 0xada8
   155d4:	movt	r0, #2
   155d8:	ldr	r5, [r0, #12]
   155dc:	mov	r0, #1
   155e0:	bl	115c8 <calloc@plt>
   155e4:	cmp	r0, #0
   155e8:	beq	156e4 <sprintf@plt+0x3e28>
   155ec:	ldr	r8, [r9, #464]	; 0x1d0
   155f0:	add	r1, r8, r5, lsl #4
   155f4:	str	r0, [r1, #8]
   155f8:	movw	r0, #61824	; 0xf180
   155fc:	movt	r0, #2
   15600:	ldr	r6, [r0]
   15604:	cmp	r6, #0
   15608:	beq	156bc <sprintf@plt+0x3e00>
   1560c:	movw	r5, #35129	; 0x8939
   15610:	mov	r7, r6
   15614:	movt	r5, #1
   15618:	ldr	r4, [r7]
   1561c:	mov	r1, r5
   15620:	ldr	r0, [r4, #16]
   15624:	bl	115bc <strcasecmp@plt>
   15628:	cmp	r0, #0
   1562c:	beq	15658 <sprintf@plt+0x3d9c>
   15630:	ldr	r7, [r7, #8]
   15634:	cmp	r7, #0
   15638:	bne	15618 <sprintf@plt+0x3d5c>
   1563c:	b	15674 <sprintf@plt+0x3db8>
   15640:	movw	r0, #44456	; 0xada8
   15644:	movt	r0, #2
   15648:	ldr	r1, [r0, #12]
   1564c:	mov	r0, r9
   15650:	bl	12c94 <sprintf@plt+0x13d8>
   15654:	b	156dc <sprintf@plt+0x3e20>
   15658:	cmp	r4, #0
   1565c:	beq	15674 <sprintf@plt+0x3db8>
   15660:	ldr	r0, [r4, #12]
   15664:	add	r0, r8, r0, lsl #4
   15668:	ldr	r0, [r0, #12]
   1566c:	cmp	r0, #2
   15670:	bne	156dc <sprintf@plt+0x3e20>
   15674:	ldr	r5, [r6]
   15678:	movw	r1, #35609	; 0x8b19
   1567c:	movt	r1, #1
   15680:	ldr	r0, [r5, #16]
   15684:	bl	115bc <strcasecmp@plt>
   15688:	cmp	r0, #0
   1568c:	beq	156a0 <sprintf@plt+0x3de4>
   15690:	ldr	r6, [r6, #8]
   15694:	cmp	r6, #0
   15698:	bne	15674 <sprintf@plt+0x3db8>
   1569c:	b	156bc <sprintf@plt+0x3e00>
   156a0:	cmp	r5, #0
   156a4:	beq	156bc <sprintf@plt+0x3e00>
   156a8:	ldr	r0, [r5, #12]
   156ac:	add	r0, r8, r0, lsl #4
   156b0:	ldr	r0, [r0, #12]
   156b4:	cmp	r0, #2
   156b8:	bne	156dc <sprintf@plt+0x3e20>
   156bc:	mov	r0, r9
   156c0:	bl	15910 <sprintf@plt+0x4054>
   156c4:	cmp	r0, #0
   156c8:	bne	156dc <sprintf@plt+0x3e20>
   156cc:	movw	r1, #35317	; 0x89f5
   156d0:	mov	r0, r9
   156d4:	movt	r1, #1
   156d8:	bl	15e30 <sprintf@plt+0x4574>
   156dc:	mov	r0, #1
   156e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   156e4:	bl	11784 <rb_outofmemory@plt>
   156e8:	movw	r1, #35344	; 0x8a10
   156ec:	movt	r1, #1
   156f0:	b	15e30 <sprintf@plt+0x4574>
   156f4:	movw	r1, #35370	; 0x8a2a
   156f8:	movt	r1, #1
   156fc:	b	15e30 <sprintf@plt+0x4574>
   15700:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15704:	add	fp, sp, #24
   15708:	mov	r8, r0
   1570c:	movw	r0, #44456	; 0xada8
   15710:	movt	r0, #2
   15714:	ldr	r9, [r8, #464]	; 0x1d0
   15718:	ldr	r0, [r0, #12]
   1571c:	add	r0, r9, r0, lsl #4
   15720:	ldr	r0, [r0, #8]
   15724:	cmp	r0, #0
   15728:	beq	157f4 <sprintf@plt+0x3f38>
   1572c:	ldrb	r0, [r0]
   15730:	cmp	r0, #0
   15734:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   15738:	movw	r0, #61824	; 0xf180
   1573c:	movt	r0, #2
   15740:	ldr	r4, [r0]
   15744:	cmp	r4, #0
   15748:	beq	157e4 <sprintf@plt+0x3f28>
   1574c:	movw	r5, #35129	; 0x8939
   15750:	mov	r7, r4
   15754:	movt	r5, #1
   15758:	ldr	r6, [r7]
   1575c:	mov	r1, r5
   15760:	ldr	r0, [r6, #16]
   15764:	bl	115bc <strcasecmp@plt>
   15768:	cmp	r0, #0
   1576c:	beq	15780 <sprintf@plt+0x3ec4>
   15770:	ldr	r7, [r7, #8]
   15774:	cmp	r7, #0
   15778:	bne	15758 <sprintf@plt+0x3e9c>
   1577c:	b	1579c <sprintf@plt+0x3ee0>
   15780:	cmp	r6, #0
   15784:	beq	1579c <sprintf@plt+0x3ee0>
   15788:	ldr	r0, [r6, #12]
   1578c:	add	r0, r9, r0, lsl #4
   15790:	ldr	r0, [r0, #12]
   15794:	cmp	r0, #2
   15798:	bne	157f4 <sprintf@plt+0x3f38>
   1579c:	ldr	r5, [r4]
   157a0:	movw	r1, #35609	; 0x8b19
   157a4:	movt	r1, #1
   157a8:	ldr	r0, [r5, #16]
   157ac:	bl	115bc <strcasecmp@plt>
   157b0:	cmp	r0, #0
   157b4:	beq	157c8 <sprintf@plt+0x3f0c>
   157b8:	ldr	r4, [r4, #8]
   157bc:	cmp	r4, #0
   157c0:	bne	1579c <sprintf@plt+0x3ee0>
   157c4:	b	157e4 <sprintf@plt+0x3f28>
   157c8:	cmp	r5, #0
   157cc:	beq	157e4 <sprintf@plt+0x3f28>
   157d0:	ldr	r0, [r5, #12]
   157d4:	add	r0, r9, r0, lsl #4
   157d8:	ldr	r0, [r0, #12]
   157dc:	cmp	r0, #2
   157e0:	bne	157f4 <sprintf@plt+0x3f38>
   157e4:	mov	r0, r8
   157e8:	bl	15910 <sprintf@plt+0x4054>
   157ec:	cmp	r0, #0
   157f0:	beq	157f8 <sprintf@plt+0x3f3c>
   157f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   157f8:	movw	r1, #35317	; 0x89f5
   157fc:	mov	r0, r8
   15800:	movt	r1, #1
   15804:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15808:	b	15e30 <sprintf@plt+0x4574>
   1580c:	push	{r4, r5, r6, sl, fp, lr}
   15810:	add	fp, sp, #16
   15814:	mov	r4, r0
   15818:	movw	r0, #61412	; 0xefe4
   1581c:	movt	r0, #2
   15820:	ldr	r6, [r0]
   15824:	cmp	r6, #0
   15828:	beq	1584c <sprintf@plt+0x3f90>
   1582c:	ldr	r5, [r6]
   15830:	mov	r1, r4
   15834:	mov	r0, r5
   15838:	bl	115bc <strcasecmp@plt>
   1583c:	cmp	r0, #0
   15840:	beq	15850 <sprintf@plt+0x3f94>
   15844:	ldr	r6, [r6, #8]
   15848:	b	15824 <sprintf@plt+0x3f68>
   1584c:	mov	r5, #0
   15850:	mov	r0, r5
   15854:	pop	{r4, r5, r6, sl, fp, pc}
   15858:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1585c:	add	fp, sp, #24
   15860:	movw	r5, #61412	; 0xefe4
   15864:	movt	r5, #2
   15868:	ldr	r6, [r5]
   1586c:	cmp	r6, #0
   15870:	beq	1590c <sprintf@plt+0x4050>
   15874:	mov	r7, #1
   15878:	mov	r8, #0
   1587c:	ldr	r4, [r6]
   15880:	ldr	r6, [r6, #8]
   15884:	ldr	r0, [r4, #788]	; 0x314
   15888:	cmp	r0, #1
   1588c:	blt	15898 <sprintf@plt+0x3fdc>
   15890:	strb	r7, [r4, #784]	; 0x310
   15894:	b	15904 <sprintf@plt+0x4048>
   15898:	ldr	r1, [r5]
   1589c:	cmp	r1, #0
   158a0:	beq	158fc <sprintf@plt+0x4040>
   158a4:	ldr	r2, [r1]
   158a8:	mov	r0, r1
   158ac:	ldr	r1, [r1, #8]
   158b0:	cmp	r2, r4
   158b4:	bne	1589c <sprintf@plt+0x3fe0>
   158b8:	ldr	r2, [r0, #4]
   158bc:	cmp	r1, #0
   158c0:	beq	158d0 <sprintf@plt+0x4014>
   158c4:	str	r2, [r1, #4]
   158c8:	ldr	r2, [r0, #4]
   158cc:	b	158d4 <sprintf@plt+0x4018>
   158d0:	str	r2, [r5, #4]
   158d4:	cmp	r2, #0
   158d8:	mov	r3, r5
   158dc:	addne	r3, r2, #8
   158e0:	str	r1, [r3]
   158e4:	str	r8, [r0, #4]
   158e8:	str	r8, [r0, #8]
   158ec:	ldr	r1, [r5, #8]
   158f0:	sub	r1, r1, #1
   158f4:	str	r1, [r5, #8]
   158f8:	bl	116e8 <rb_free_rb_dlink_node@plt>
   158fc:	mov	r0, r4
   15900:	bl	11664 <free@plt>
   15904:	cmp	r6, #0
   15908:	bne	1587c <sprintf@plt+0x3fc0>
   1590c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15914:	add	fp, sp, #28
   15918:	sub	sp, sp, #268	; 0x10c
   1591c:	mov	r4, r0
   15920:	movw	r0, #44456	; 0xada8
   15924:	mov	r2, #1
   15928:	mov	r9, #1
   1592c:	movt	r0, #2
   15930:	ldr	r1, [r4, #464]	; 0x1d0
   15934:	ldr	r0, [r0, #12]
   15938:	add	r0, r1, r0, lsl #4
   1593c:	ldrh	r1, [r4, #248]	; 0xf8
   15940:	ldr	r3, [r0, #8]
   15944:	mov	r0, #0
   15948:	cmp	r1, #2
   1594c:	beq	1595c <sprintf@plt+0x40a0>
   15950:	cmp	r1, #10
   15954:	bne	15b00 <sprintf@plt+0x4244>
   15958:	mov	r9, #2
   1595c:	strb	r2, [r3]
   15960:	movw	r1, #35134	; 0x893e
   15964:	str	r3, [sp]
   15968:	ldr	r0, [r4]
   1596c:	movt	r1, #1
   15970:	bl	12354 <sprintf@plt+0xa98>
   15974:	movw	r0, #61412	; 0xefe4
   15978:	movt	r0, #2
   1597c:	ldr	r8, [r0]
   15980:	cmp	r8, #0
   15984:	beq	15abc <sprintf@plt+0x4200>
   15988:	add	r0, r4, #248	; 0xf8
   1598c:	str	r0, [sp, #4]
   15990:	ldr	r5, [r8]
   15994:	ldrb	r0, [r5, #784]	; 0x310
   15998:	cmp	r0, #0
   1599c:	beq	159b0 <sprintf@plt+0x40f4>
   159a0:	ldr	r8, [r8, #8]
   159a4:	cmp	r8, #0
   159a8:	bne	15990 <sprintf@plt+0x40d4>
   159ac:	b	15abc <sprintf@plt+0x4200>
   159b0:	ldrb	r0, [r5, #768]	; 0x300
   159b4:	tst	r9, r0
   159b8:	beq	159a0 <sprintf@plt+0x40e4>
   159bc:	mov	r0, #1
   159c0:	mov	r1, #24
   159c4:	bl	115c8 <calloc@plt>
   159c8:	cmp	r0, #0
   159cc:	beq	15b08 <sprintf@plt+0x424c>
   159d0:	mov	r7, r0
   159d4:	movw	r0, #44456	; 0xada8
   159d8:	ldr	r1, [r4, #464]	; 0x1d0
   159dc:	movt	r0, #2
   159e0:	ldr	r0, [r0, #12]
   159e4:	add	r0, r1, r0, lsl #4
   159e8:	ldr	sl, [r0, #8]
   159ec:	str	r5, [r7]
   159f0:	str	r4, [r7, #4]
   159f4:	ldrh	r0, [r4, #248]	; 0xf8
   159f8:	cmp	r0, #10
   159fc:	beq	15a20 <sprintf@plt+0x4164>
   15a00:	cmp	r0, #2
   15a04:	bne	15a2c <sprintf@plt+0x4170>
   15a08:	ldrb	r0, [r5, #768]	; 0x300
   15a0c:	tst	r0, #1
   15a10:	bne	15a2c <sprintf@plt+0x4170>
   15a14:	mov	r0, r7
   15a18:	bl	11664 <free@plt>
   15a1c:	b	159a0 <sprintf@plt+0x40e4>
   15a20:	ldrb	r0, [r5, #768]	; 0x300
   15a24:	tst	r0, #2
   15a28:	beq	15a14 <sprintf@plt+0x4158>
   15a2c:	ldr	r2, [sp, #4]
   15a30:	add	r6, sp, #8
   15a34:	mov	r1, #256	; 0x100
   15a38:	mov	r3, r5
   15a3c:	mov	r0, r6
   15a40:	bl	1338c <sprintf@plt+0x1ad0>
   15a44:	movw	r2, #23308	; 0x5b0c
   15a48:	mov	r0, r6
   15a4c:	mov	r1, #2
   15a50:	mov	r3, r7
   15a54:	movt	r2, #1
   15a58:	bl	11d4c <sprintf@plt+0x490>
   15a5c:	mov	r1, #0
   15a60:	str	r1, [r7, #16]
   15a64:	str	r0, [r7, #8]
   15a68:	str	r7, [r7, #12]
   15a6c:	add	r0, r7, #12
   15a70:	ldr	r1, [sl, #4]
   15a74:	cmp	r1, #0
   15a78:	str	r1, [r7, #20]
   15a7c:	beq	15a8c <sprintf@plt+0x41d0>
   15a80:	add	r1, r1, #4
   15a84:	str	r0, [r1]
   15a88:	b	15a9c <sprintf@plt+0x41e0>
   15a8c:	mov	r1, sl
   15a90:	ldr	r2, [r1, #8]!
   15a94:	cmp	r2, #0
   15a98:	streq	r0, [r1]
   15a9c:	str	r0, [sl, #4]
   15aa0:	ldr	r0, [sl, #12]
   15aa4:	add	r0, r0, #1
   15aa8:	str	r0, [sl, #12]
   15aac:	ldr	r0, [r5, #788]	; 0x314
   15ab0:	add	r0, r0, #1
   15ab4:	str	r0, [r5, #788]	; 0x314
   15ab8:	b	159a0 <sprintf@plt+0x40e4>
   15abc:	ldr	r0, [sp]
   15ac0:	ldr	r0, [r0, #12]
   15ac4:	cmp	r0, #0
   15ac8:	mov	r0, #0
   15acc:	beq	15b00 <sprintf@plt+0x4244>
   15ad0:	movw	r0, #44456	; 0xada8
   15ad4:	movt	r0, #2
   15ad8:	ldr	r5, [r0, #12]
   15adc:	movw	r0, #44516	; 0xade4
   15ae0:	movt	r0, #2
   15ae4:	ldr	r6, [r0]
   15ae8:	bl	116c4 <rb_current_time@plt>
   15aec:	ldr	r1, [r4, #464]	; 0x1d0
   15af0:	add	r0, r0, r6
   15af4:	add	r1, r1, r5, lsl #4
   15af8:	str	r0, [r1, #4]
   15afc:	mov	r0, #1
   15b00:	sub	sp, fp, #28
   15b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b08:	bl	11784 <rb_outofmemory@plt>
   15b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b10:	add	fp, sp, #28
   15b14:	sub	sp, sp, #4
   15b18:	ldr	r8, [r3, #4]
   15b1c:	mov	r4, r0
   15b20:	movw	r0, #44456	; 0xada8
   15b24:	movt	r0, #2
   15b28:	ldr	r7, [r0, #12]
   15b2c:	ldr	r0, [r8, #464]	; 0x1d0
   15b30:	add	r0, r0, r7, lsl #4
   15b34:	ldr	r5, [r0, #8]
   15b38:	cmp	r5, #0
   15b3c:	beq	15c80 <sprintf@plt+0x43c4>
   15b40:	ldr	r9, [r3]
   15b44:	cmp	r4, #0
   15b48:	mov	r6, r3
   15b4c:	cmpne	r1, #0
   15b50:	bne	15b80 <sprintf@plt+0x42c4>
   15b54:	mov	r0, r9
   15b58:	bl	15d24 <sprintf@plt+0x4468>
   15b5c:	ldr	r0, [r6, #8]
   15b60:	bl	120c4 <sprintf@plt+0x808>
   15b64:	ldr	r0, [r6, #20]
   15b68:	ldr	r1, [r6, #16]
   15b6c:	cmp	r0, #0
   15b70:	beq	15bf4 <sprintf@plt+0x4338>
   15b74:	str	r1, [r0, #4]
   15b78:	ldr	r1, [r6, #16]
   15b7c:	b	15bf8 <sprintf@plt+0x433c>
   15b80:	ldr	r0, [r9, #780]	; 0x30c
   15b84:	cmp	r0, #0
   15b88:	beq	15c88 <sprintf@plt+0x43cc>
   15b8c:	mov	r0, r4
   15b90:	mov	r1, #46	; 0x2e
   15b94:	bl	11610 <strrchr@plt>
   15b98:	cmp	r0, #0
   15b9c:	beq	15cc0 <sprintf@plt+0x4404>
   15ba0:	ldrb	r1, [r0, #1]!
   15ba4:	cmp	r1, #0
   15ba8:	beq	15cc0 <sprintf@plt+0x4404>
   15bac:	ldr	sl, [r9, #772]	; 0x304
   15bb0:	str	r0, [sp]
   15bb4:	cmp	sl, #0
   15bb8:	beq	15b54 <sprintf@plt+0x4298>
   15bbc:	ldr	r1, [sl]
   15bc0:	mov	r0, r4
   15bc4:	ldr	r3, [r1]
   15bc8:	cmp	r3, #1
   15bcc:	beq	15bdc <sprintf@plt+0x4320>
   15bd0:	ldr	r0, [sp]
   15bd4:	cmp	r3, #2
   15bd8:	bne	15d08 <sprintf@plt+0x444c>
   15bdc:	add	r1, r1, #4
   15be0:	bl	11898 <strcmp@plt>
   15be4:	cmp	r0, #0
   15be8:	beq	15c88 <sprintf@plt+0x43cc>
   15bec:	ldr	sl, [sl, #8]
   15bf0:	b	15bb4 <sprintf@plt+0x42f8>
   15bf4:	str	r1, [r5, #8]
   15bf8:	cmp	r1, #0
   15bfc:	add	r2, r1, #8
   15c00:	mov	r4, #0
   15c04:	movw	r7, #44456	; 0xada8
   15c08:	addeq	r2, r5, #4
   15c0c:	movt	r7, #2
   15c10:	str	r0, [r2]
   15c14:	str	r4, [r6, #16]
   15c18:	str	r4, [r6, #20]
   15c1c:	ldr	r0, [r5, #12]
   15c20:	sub	r0, r0, #1
   15c24:	str	r0, [r5, #12]
   15c28:	mov	r0, r6
   15c2c:	bl	11664 <free@plt>
   15c30:	ldr	r0, [r5, #12]
   15c34:	cmp	r0, #0
   15c38:	bne	15c80 <sprintf@plt+0x43c4>
   15c3c:	ldr	r0, [r8]
   15c40:	movw	r1, #35170	; 0x8962
   15c44:	movt	r1, #1
   15c48:	bl	12354 <sprintf@plt+0xa98>
   15c4c:	mov	r0, r5
   15c50:	bl	11664 <free@plt>
   15c54:	ldr	r1, [r7, #12]
   15c58:	ldr	r0, [r8, #464]	; 0x1d0
   15c5c:	add	r0, r0, r1, lsl #4
   15c60:	str	r4, [r0, #4]
   15c64:	str	r4, [r0, #8]
   15c68:	mov	r0, r8
   15c6c:	bl	12c94 <sprintf@plt+0x13d8>
   15c70:	ldr	r0, [r8, #460]	; 0x1cc
   15c74:	subs	r0, r0, #1
   15c78:	str	r0, [r8, #460]	; 0x1cc
   15c7c:	beq	15cf8 <sprintf@plt+0x443c>
   15c80:	sub	sp, fp, #28
   15c84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c88:	ldr	r0, [r9, #792]	; 0x318
   15c8c:	add	r3, r9, #256	; 0x100
   15c90:	mov	r1, r7
   15c94:	mov	r2, r9
   15c98:	add	r0, r0, #1
   15c9c:	str	r0, [r9, #792]	; 0x318
   15ca0:	mov	r0, r8
   15ca4:	bl	12988 <sprintf@plt+0x10cc>
   15ca8:	movw	r1, #35344	; 0x8a10
   15cac:	mov	r0, r8
   15cb0:	movt	r1, #1
   15cb4:	sub	sp, fp, #28
   15cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15cbc:	b	15e30 <sprintf@plt+0x4574>
   15cc0:	ldr	r0, [r9, #796]	; 0x31c
   15cc4:	add	r7, r0, #3600	; 0xe10
   15cc8:	bl	116c4 <rb_current_time@plt>
   15ccc:	cmp	r7, r0
   15cd0:	bge	15b54 <sprintf@plt+0x4298>
   15cd4:	movw	r1, #35254	; 0x89b6
   15cd8:	mov	r0, #87	; 0x57
   15cdc:	mov	r2, r9
   15ce0:	mov	r3, r4
   15ce4:	movt	r1, #1
   15ce8:	bl	123c0 <sprintf@plt+0xb04>
   15cec:	bl	116c4 <rb_current_time@plt>
   15cf0:	str	r0, [r9, #796]	; 0x31c
   15cf4:	b	15b54 <sprintf@plt+0x4298>
   15cf8:	mov	r0, r8
   15cfc:	sub	sp, fp, #28
   15d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d04:	b	12bdc <sprintf@plt+0x1320>
   15d08:	movw	r1, #35207	; 0x8987
   15d0c:	mov	r0, #67	; 0x43
   15d10:	mov	r2, r9
   15d14:	movt	r1, #1
   15d18:	bl	123c0 <sprintf@plt+0xb04>
   15d1c:	mov	r0, #3
   15d20:	bl	118a4 <exit@plt>
   15d24:	push	{r4, r5, r6, r7, fp, lr}
   15d28:	add	fp, sp, #16
   15d2c:	mov	r4, r0
   15d30:	ldr	r0, [r0, #788]	; 0x314
   15d34:	subs	r0, r0, #1
   15d38:	str	r0, [r4, #788]	; 0x314
   15d3c:	bgt	15df0 <sprintf@plt+0x4534>
   15d40:	ldrb	r0, [r4, #784]	; 0x310
   15d44:	cmp	r0, #0
   15d48:	beq	15df0 <sprintf@plt+0x4534>
   15d4c:	mov	r5, r4
   15d50:	ldr	r0, [r5, #772]!	; 0x304
   15d54:	cmp	r0, #0
   15d58:	beq	15db0 <sprintf@plt+0x44f4>
   15d5c:	mov	r6, #0
   15d60:	ldmib	r0, {r1, r7}
   15d64:	cmp	r7, #0
   15d68:	beq	15d78 <sprintf@plt+0x44bc>
   15d6c:	str	r1, [r7, #4]
   15d70:	ldr	r1, [r0, #4]
   15d74:	b	15d7c <sprintf@plt+0x44c0>
   15d78:	str	r1, [r4, #776]	; 0x308
   15d7c:	cmp	r1, #0
   15d80:	mov	r2, r5
   15d84:	addne	r2, r1, #8
   15d88:	str	r7, [r2]
   15d8c:	str	r6, [r0, #4]
   15d90:	str	r6, [r0, #8]
   15d94:	ldr	r1, [r4, #780]	; 0x30c
   15d98:	sub	r1, r1, #1
   15d9c:	str	r1, [r4, #780]	; 0x30c
   15da0:	bl	11664 <free@plt>
   15da4:	cmp	r7, #0
   15da8:	mov	r0, r7
   15dac:	bne	15d60 <sprintf@plt+0x44a4>
   15db0:	movw	r7, #61412	; 0xefe4
   15db4:	movt	r7, #2
   15db8:	ldr	r2, [r7]
   15dbc:	cmp	r2, #0
   15dc0:	beq	15e24 <sprintf@plt+0x4568>
   15dc4:	ldr	r3, [r2]
   15dc8:	mov	r0, r2
   15dcc:	ldr	r2, [r2, #8]
   15dd0:	cmp	r3, r4
   15dd4:	bne	15dbc <sprintf@plt+0x4500>
   15dd8:	ldr	r3, [r0, #4]
   15ddc:	cmp	r2, #0
   15de0:	beq	15df4 <sprintf@plt+0x4538>
   15de4:	str	r3, [r2, #4]
   15de8:	ldr	r3, [r0, #4]
   15dec:	b	15df8 <sprintf@plt+0x453c>
   15df0:	pop	{r4, r5, r6, r7, fp, pc}
   15df4:	str	r3, [r7, #4]
   15df8:	cmp	r3, #0
   15dfc:	mov	r1, r7
   15e00:	addne	r1, r3, #8
   15e04:	str	r2, [r1]
   15e08:	mov	r1, #0
   15e0c:	str	r1, [r0, #4]
   15e10:	str	r1, [r0, #8]
   15e14:	ldr	r1, [r7, #8]
   15e18:	sub	r1, r1, #1
   15e1c:	str	r1, [r7, #8]
   15e20:	bl	116e8 <rb_free_rb_dlink_node@plt>
   15e24:	mov	r0, r4
   15e28:	pop	{r4, r5, r6, r7, fp, lr}
   15e2c:	b	11664 <free@plt>
   15e30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e34:	add	fp, sp, #28
   15e38:	sub	sp, sp, #4
   15e3c:	movw	r8, #44456	; 0xada8
   15e40:	mov	r9, r0
   15e44:	movt	r8, #2
   15e48:	ldr	r2, [r9, #464]	; 0x1d0
   15e4c:	ldr	r0, [r8, #12]
   15e50:	add	r0, r2, r0, lsl #4
   15e54:	ldr	r5, [r0, #8]
   15e58:	cmp	r5, #0
   15e5c:	beq	15f34 <sprintf@plt+0x4678>
   15e60:	ldr	r0, [r5, #12]
   15e64:	cmp	r0, #0
   15e68:	beq	15efc <sprintf@plt+0x4640>
   15e6c:	ldr	r0, [r9]
   15e70:	add	sl, r5, #4
   15e74:	bl	12354 <sprintf@plt+0xa98>
   15e78:	ldr	r4, [sl]
   15e7c:	cmp	r4, #0
   15e80:	beq	15efc <sprintf@plt+0x4640>
   15e84:	mov	r7, #0
   15e88:	ldr	r6, [r4]
   15e8c:	ldr	r4, [r4, #8]
   15e90:	ldr	r0, [r6, #8]
   15e94:	bl	120c4 <sprintf@plt+0x808>
   15e98:	ldr	r0, [r6]
   15e9c:	bl	15d24 <sprintf@plt+0x4468>
   15ea0:	ldr	r0, [r6, #20]
   15ea4:	ldr	r1, [r6, #16]
   15ea8:	cmp	r0, #0
   15eac:	beq	15ebc <sprintf@plt+0x4600>
   15eb0:	str	r1, [r0, #4]
   15eb4:	ldr	r1, [r6, #16]
   15eb8:	b	15ec0 <sprintf@plt+0x4604>
   15ebc:	str	r1, [r5, #8]
   15ec0:	cmp	r1, #0
   15ec4:	mov	r2, sl
   15ec8:	addne	r2, r1, #8
   15ecc:	cmp	r6, #0
   15ed0:	str	r0, [r2]
   15ed4:	str	r7, [r6, #16]
   15ed8:	str	r7, [r6, #20]
   15edc:	ldr	r0, [r5, #12]
   15ee0:	sub	r0, r0, #1
   15ee4:	str	r0, [r5, #12]
   15ee8:	beq	15ef4 <sprintf@plt+0x4638>
   15eec:	mov	r0, r6
   15ef0:	bl	11664 <free@plt>
   15ef4:	cmp	r4, #0
   15ef8:	bne	15e88 <sprintf@plt+0x45cc>
   15efc:	mov	r0, r5
   15f00:	bl	11664 <free@plt>
   15f04:	ldr	r1, [r8, #12]
   15f08:	ldr	r0, [r9, #464]	; 0x1d0
   15f0c:	mov	r2, #0
   15f10:	add	r0, r0, r1, lsl #4
   15f14:	str	r2, [r0, #4]
   15f18:	str	r2, [r0, #8]
   15f1c:	mov	r0, r9
   15f20:	bl	12c94 <sprintf@plt+0x13d8>
   15f24:	ldr	r0, [r9, #460]	; 0x1cc
   15f28:	subs	r0, r0, #1
   15f2c:	str	r0, [r9, #460]	; 0x1cc
   15f30:	beq	15f3c <sprintf@plt+0x4680>
   15f34:	sub	sp, fp, #28
   15f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f3c:	mov	r0, r9
   15f40:	sub	sp, fp, #28
   15f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f48:	b	12bdc <sprintf@plt+0x1320>
   15f4c:	push	{fp, lr}
   15f50:	mov	fp, sp
   15f54:	ldr	r0, [r2]
   15f58:	bl	11730 <atoi@plt>
   15f5c:	cmn	r0, #1
   15f60:	mov	r2, r0
   15f64:	movwgt	r0, #44616	; 0xae48
   15f68:	movtgt	r0, #2
   15f6c:	strgt	r2, [r0]
   15f70:	popgt	{fp, pc}
   15f74:	movw	r1, #35426	; 0x8a62
   15f78:	mov	r0, #67	; 0x43
   15f7c:	movt	r1, #1
   15f80:	bl	123c0 <sprintf@plt+0xb04>
   15f84:	mov	r0, #3
   15f88:	bl	118a4 <exit@plt>
   15f8c:	ldr	r0, [r2]
   15f90:	movw	r1, #44620	; 0xae4c
   15f94:	movt	r1, #2
   15f98:	ldrb	r0, [r0]
   15f9c:	sub	r0, r0, #49	; 0x31
   15fa0:	clz	r0, r0
   15fa4:	lsr	r0, r0, #5
   15fa8:	strb	r0, [r1]
   15fac:	bx	lr
   15fb0:	push	{r4, r5, r6, sl, fp, lr}
   15fb4:	add	fp, sp, #16
   15fb8:	sub	sp, sp, #8
   15fbc:	movw	r5, #61820	; 0xf17c
   15fc0:	mov	r4, sp
   15fc4:	movt	r5, #2
   15fc8:	mov	r1, r4
   15fcc:	ldr	r0, [r5]
   15fd0:	bl	116a0 <rb_dictionary_foreach_start@plt>
   15fd4:	ldr	r0, [r5]
   15fd8:	mov	r1, r4
   15fdc:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   15fe0:	cmp	r0, #0
   15fe4:	beq	16030 <sprintf@plt+0x4774>
   15fe8:	movw	r6, #44556	; 0xae0c
   15fec:	mov	r4, sp
   15ff0:	movt	r6, #2
   15ff4:	ldr	r1, [r6, #12]
   15ff8:	ldr	r2, [r0, #464]	; 0x1d0
   15ffc:	add	r1, r2, r1, lsl #4
   16000:	ldr	r1, [r1, #8]
   16004:	cmp	r1, #0
   16008:	movne	r1, #2
   1600c:	blne	161ec <sprintf@plt+0x4930>
   16010:	ldr	r0, [r5]
   16014:	mov	r1, r4
   16018:	bl	11658 <rb_dictionary_foreach_next@plt>
   1601c:	ldr	r0, [r5]
   16020:	mov	r1, r4
   16024:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   16028:	cmp	r0, #0
   1602c:	bne	15ff4 <sprintf@plt+0x4738>
   16030:	sub	sp, fp, #16
   16034:	pop	{r4, r5, r6, sl, fp, pc}
   16038:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1603c:	add	fp, sp, #24
   16040:	sub	sp, sp, #272	; 0x110
   16044:	mov	r4, r0
   16048:	mov	r0, #1
   1604c:	mov	r1, #4
   16050:	bl	115c8 <calloc@plt>
   16054:	cmp	r0, #0
   16058:	beq	161c0 <sprintf@plt+0x4904>
   1605c:	mov	r5, r0
   16060:	movw	r0, #44620	; 0xae4c
   16064:	movt	r0, #2
   16068:	ldrb	r0, [r0]
   1606c:	cmp	r0, #0
   16070:	beq	16158 <sprintf@plt+0x489c>
   16074:	ldr	r1, [r4, #460]	; 0x1cc
   16078:	ldr	r0, [r4]
   1607c:	add	r1, r1, #1
   16080:	str	r1, [r4, #460]	; 0x1cc
   16084:	movw	r1, #35463	; 0x8a87
   16088:	ldrh	r8, [r4, #248]	; 0xf8
   1608c:	movt	r1, #1
   16090:	bl	12354 <sprintf@plt+0xa98>
   16094:	movw	r0, #44556	; 0xae0c
   16098:	movw	r9, #44616	; 0xae48
   1609c:	movt	r0, #2
   160a0:	movt	r9, #2
   160a4:	ldr	r7, [r0, #12]
   160a8:	ldr	r0, [r4, #464]	; 0x1d0
   160ac:	add	r0, r0, r7, lsl #4
   160b0:	str	r5, [r0, #8]
   160b4:	ldr	r6, [r9]
   160b8:	bl	116c4 <rb_current_time@plt>
   160bc:	ldr	r1, [r4, #464]	; 0x1d0
   160c0:	add	r0, r0, r6
   160c4:	movw	r3, #35609	; 0x8b19
   160c8:	movt	r3, #1
   160cc:	add	r1, r1, r7, lsl #4
   160d0:	str	r0, [r1, #4]
   160d4:	mov	r0, r8
   160d8:	mov	r1, #1
   160dc:	ldr	r2, [r4, #4]
   160e0:	bl	11580 <rb_socket@plt>
   160e4:	cmp	r0, #0
   160e8:	str	r0, [r5]
   160ec:	beq	16188 <sprintf@plt+0x48cc>
   160f0:	add	r8, sp, #136	; 0x88
   160f4:	mov	r6, r0
   160f8:	add	r1, r4, #64	; 0x40
   160fc:	mov	r2, #128	; 0x80
   16100:	add	r5, r4, #248	; 0xf8
   16104:	mov	r0, r8
   16108:	bl	116dc <memcpy@plt>
   1610c:	add	r7, sp, #8
   16110:	mov	r1, r5
   16114:	mov	r2, #128	; 0x80
   16118:	mov	r0, r7
   1611c:	bl	116dc <memcpy@plt>
   16120:	mov	r0, #0
   16124:	movw	r3, #25244	; 0x629c
   16128:	mov	r1, r7
   1612c:	mov	r2, r8
   16130:	str	r4, [sp]
   16134:	strh	r0, [sp, #138]	; 0x8a
   16138:	mov	r0, #28928	; 0x7100
   1613c:	movt	r3, #1
   16140:	strh	r0, [sp, #10]
   16144:	ldr	r0, [r9]
   16148:	str	r0, [sp, #4]
   1614c:	mov	r0, r6
   16150:	bl	1152c <rb_connect_tcp@plt>
   16154:	b	161b4 <sprintf@plt+0x48f8>
   16158:	mov	r0, r5
   1615c:	bl	11664 <free@plt>
   16160:	ldr	r0, [r4]
   16164:	movw	r1, #35576	; 0x8af8
   16168:	movt	r1, #1
   1616c:	bl	12354 <sprintf@plt+0xa98>
   16170:	movw	r0, #44556	; 0xae0c
   16174:	movt	r0, #2
   16178:	ldr	r1, [r0, #12]
   1617c:	mov	r0, r4
   16180:	bl	12c94 <sprintf@plt+0x13d8>
   16184:	b	161b4 <sprintf@plt+0x48f8>
   16188:	bl	118b0 <__errno_location@plt>
   1618c:	ldr	r0, [r0]
   16190:	bl	114d8 <strerror@plt>
   16194:	movw	r1, #35615	; 0x8b1f
   16198:	mov	r2, r0
   1619c:	mov	r0, #68	; 0x44
   161a0:	movt	r1, #1
   161a4:	bl	123c0 <sprintf@plt+0xb04>
   161a8:	mov	r0, r4
   161ac:	mov	r1, #2
   161b0:	bl	161ec <sprintf@plt+0x4930>
   161b4:	mov	r0, #1
   161b8:	sub	sp, fp, #24
   161bc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   161c0:	bl	11784 <rb_outofmemory@plt>
   161c4:	movw	r1, #44556	; 0xae0c
   161c8:	ldr	r2, [r0, #464]	; 0x1d0
   161cc:	movt	r1, #2
   161d0:	ldr	r1, [r1, #12]
   161d4:	add	r1, r2, r1, lsl #4
   161d8:	ldr	r1, [r1, #8]
   161dc:	cmp	r1, #0
   161e0:	bxeq	lr
   161e4:	mov	r1, #2
   161e8:	b	161ec <sprintf@plt+0x4930>
   161ec:	push	{r4, r5, r6, r7, fp, lr}
   161f0:	add	fp, sp, #16
   161f4:	movw	r7, #44556	; 0xae0c
   161f8:	mov	r4, r0
   161fc:	mov	r5, r1
   16200:	mov	r2, #11
   16204:	movt	r7, #2
   16208:	ldr	r1, [r4, #464]	; 0x1d0
   1620c:	ldr	r0, [r7, #12]
   16210:	add	r0, r1, r0, lsl #4
   16214:	movw	r1, #33476	; 0x82c4
   16218:	movt	r1, #1
   1621c:	ldr	r6, [r0, #8]
   16220:	add	r0, r4, #440	; 0x1b8
   16224:	bl	11640 <rb_strlcpy@plt>
   16228:	ldr	r0, [r6]
   1622c:	cmp	r0, #0
   16230:	beq	16238 <sprintf@plt+0x497c>
   16234:	bl	11700 <rb_close@plt>
   16238:	cmp	r6, #0
   1623c:	beq	16248 <sprintf@plt+0x498c>
   16240:	mov	r0, r6
   16244:	bl	11664 <free@plt>
   16248:	ldr	r0, [r7, #12]
   1624c:	ldr	r1, [r4, #464]	; 0x1d0
   16250:	add	r0, r1, r0, lsl #4
   16254:	mov	r1, #0
   16258:	str	r1, [r0, #4]
   1625c:	str	r1, [r0, #8]
   16260:	movw	r0, #35668	; 0x8b54
   16264:	movt	r0, #1
   16268:	ldr	r1, [r0, r5, lsl #2]
   1626c:	ldr	r0, [r4]
   16270:	bl	12354 <sprintf@plt+0xa98>
   16274:	ldr	r1, [r7, #12]
   16278:	mov	r0, r4
   1627c:	bl	12c94 <sprintf@plt+0x13d8>
   16280:	ldr	r0, [r4, #460]	; 0x1cc
   16284:	subs	r0, r0, #1
   16288:	str	r0, [r4, #460]	; 0x1cc
   1628c:	popne	{r4, r5, r6, r7, fp, pc}
   16290:	mov	r0, r4
   16294:	pop	{r4, r5, r6, r7, fp, lr}
   16298:	b	12bdc <sprintf@plt+0x1320>
   1629c:	push	{r4, r5, r6, r7, fp, lr}
   162a0:	add	fp, sp, #16
   162a4:	sub	sp, sp, #40	; 0x28
   162a8:	mov	r4, r2
   162ac:	cmp	r1, #0
   162b0:	bne	16324 <sprintf@plt+0x4a68>
   162b4:	movw	r0, #44556	; 0xae0c
   162b8:	ldr	r1, [r4, #464]	; 0x1d0
   162bc:	ldrh	r3, [r4, #246]	; 0xf6
   162c0:	movw	r2, #35649	; 0x8b41
   162c4:	add	r5, sp, #8
   162c8:	movt	r0, #2
   162cc:	movt	r2, #1
   162d0:	ldr	r0, [r0, #12]
   162d4:	add	r0, r1, r0, lsl #4
   162d8:	mov	r1, #32
   162dc:	ldr	r7, [r0, #8]
   162e0:	ldrh	r0, [r4, #62]	; 0x3e
   162e4:	str	r0, [sp]
   162e8:	mov	r0, r5
   162ec:	bl	11844 <snprintf@plt>
   162f0:	mov	r0, r5
   162f4:	bl	116b8 <strlen@plt>
   162f8:	mov	r6, r0
   162fc:	ldr	r0, [r7]
   16300:	mov	r1, r5
   16304:	mov	r2, r6
   16308:	bl	1161c <rb_write@plt>
   1630c:	cmp	r0, r6
   16310:	bne	16324 <sprintf@plt+0x4a68>
   16314:	ldr	r0, [r7]
   16318:	mov	r1, r4
   1631c:	bl	16338 <sprintf@plt+0x4a7c>
   16320:	b	16330 <sprintf@plt+0x4a74>
   16324:	mov	r0, r4
   16328:	mov	r1, #2
   1632c:	bl	161ec <sprintf@plt+0x4930>
   16330:	sub	sp, fp, #16
   16334:	pop	{r4, r5, r6, r7, fp, pc}
   16338:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1633c:	add	fp, sp, #24
   16340:	sub	sp, sp, #136	; 0x88
   16344:	mov	r4, sp
   16348:	mov	r8, r1
   1634c:	mov	r5, r0
   16350:	mov	r1, #0
   16354:	mov	r2, #129	; 0x81
   16358:	mov	r0, r4
   1635c:	bl	115f8 <memset@plt>
   16360:	mov	r0, r5
   16364:	mov	r1, r4
   16368:	mov	r2, #128	; 0x80
   1636c:	bl	1167c <rb_read@plt>
   16370:	cmn	r0, #1
   16374:	ble	16544 <sprintf@plt+0x4c88>
   16378:	cmp	r0, #0
   1637c:	beq	16574 <sprintf@plt+0x4cb8>
   16380:	mov	r0, sp
   16384:	mov	r1, #58	; 0x3a
   16388:	bl	115a4 <strchr@plt>
   1638c:	mov	r5, #3
   16390:	cmp	r0, #0
   16394:	beq	16578 <sprintf@plt+0x4cbc>
   16398:	mov	r6, r0
   1639c:	mov	r4, #0
   163a0:	mov	r1, #58	; 0x3a
   163a4:	strb	r4, [r6], #1
   163a8:	mov	r0, r6
   163ac:	bl	115a4 <strchr@plt>
   163b0:	cmp	r0, #0
   163b4:	beq	16578 <sprintf@plt+0x4cbc>
   163b8:	mov	r7, r0
   163bc:	mov	r0, sp
   163c0:	mov	r1, #44	; 0x2c
   163c4:	strb	r4, [r7], #1
   163c8:	bl	115a4 <strchr@plt>
   163cc:	cmp	r0, #0
   163d0:	beq	16578 <sprintf@plt+0x4cbc>
   163d4:	mov	r4, r0
   163d8:	mov	r0, #0
   163dc:	strb	r0, [r4]
   163e0:	mov	r0, sp
   163e4:	bl	11730 <atoi@plt>
   163e8:	cmp	r0, #0
   163ec:	beq	16578 <sprintf@plt+0x4cbc>
   163f0:	add	r0, r4, #1
   163f4:	bl	11730 <atoi@plt>
   163f8:	cmp	r0, #0
   163fc:	beq	16578 <sprintf@plt+0x4cbc>
   16400:	movw	r1, #35659	; 0x8b4b
   16404:	mov	r0, r6
   16408:	movt	r1, #1
   1640c:	bl	11754 <strstr@plt>
   16410:	cmp	r0, #0
   16414:	beq	16578 <sprintf@plt+0x4cbc>
   16418:	mov	r0, r7
   1641c:	mov	r1, #58	; 0x3a
   16420:	bl	115a4 <strchr@plt>
   16424:	cmp	r0, #0
   16428:	beq	16578 <sprintf@plt+0x4cbc>
   1642c:	mov	r1, #0
   16430:	strb	r1, [r0]
   16434:	mov	r1, r0
   16438:	ldrb	r7, [r0, #1]!
   1643c:	orr	r2, r7, #32
   16440:	cmp	r2, #126	; 0x7e
   16444:	beq	16434 <sprintf@plt+0x4b78>
   16448:	add	r0, r8, #440	; 0x1b8
   1644c:	cmp	r7, #0
   16450:	beq	164b4 <sprintf@plt+0x4bf8>
   16454:	mov	r2, #10
   16458:	mov	r3, #2
   1645c:	uxtb	r6, r7
   16460:	cmp	r6, #57	; 0x39
   16464:	ble	16480 <sprintf@plt+0x4bc4>
   16468:	cmp	r6, #58	; 0x3a
   1646c:	cmpne	r6, #91	; 0x5b
   16470:	beq	164a0 <sprintf@plt+0x4be4>
   16474:	cmp	r6, #64	; 0x40
   16478:	bne	16498 <sprintf@plt+0x4bdc>
   1647c:	b	164b4 <sprintf@plt+0x4bf8>
   16480:	cmp	r6, #32
   16484:	beq	164a0 <sprintf@plt+0x4be4>
   16488:	cmp	r6, #10
   1648c:	beq	164b4 <sprintf@plt+0x4bf8>
   16490:	cmp	r6, #13
   16494:	beq	164b4 <sprintf@plt+0x4bf8>
   16498:	strb	r7, [r0], #1
   1649c:	sub	r2, r2, #1
   164a0:	ldrb	r7, [r1, r3]
   164a4:	cmp	r7, #0
   164a8:	addne	r3, r3, #1
   164ac:	cmpne	r2, #0
   164b0:	bne	1645c <sprintf@plt+0x4ba0>
   164b4:	movw	r5, #44556	; 0xae0c
   164b8:	mov	r1, #0
   164bc:	movt	r5, #2
   164c0:	strb	r1, [r0]
   164c4:	ldr	r1, [r8, #464]	; 0x1d0
   164c8:	ldr	r0, [r5, #12]
   164cc:	add	r0, r1, r0, lsl #4
   164d0:	ldr	r4, [r0, #8]
   164d4:	ldr	r0, [r4]
   164d8:	cmp	r0, #0
   164dc:	beq	164e4 <sprintf@plt+0x4c28>
   164e0:	bl	11700 <rb_close@plt>
   164e4:	cmp	r4, #0
   164e8:	beq	164f4 <sprintf@plt+0x4c38>
   164ec:	mov	r0, r4
   164f0:	bl	11664 <free@plt>
   164f4:	ldr	r0, [r5, #12]
   164f8:	ldr	r1, [r8, #464]	; 0x1d0
   164fc:	add	r0, r1, r0, lsl #4
   16500:	mov	r1, #0
   16504:	str	r1, [r0, #4]
   16508:	str	r1, [r0, #8]
   1650c:	movw	r1, #35482	; 0x8a9a
   16510:	ldr	r0, [r8]
   16514:	movt	r1, #1
   16518:	bl	12354 <sprintf@plt+0xa98>
   1651c:	ldr	r1, [r5, #12]
   16520:	mov	r0, r8
   16524:	bl	12c94 <sprintf@plt+0x13d8>
   16528:	ldr	r0, [r8, #460]	; 0x1cc
   1652c:	subs	r0, r0, #1
   16530:	str	r0, [r8, #460]	; 0x1cc
   16534:	bne	16584 <sprintf@plt+0x4cc8>
   16538:	mov	r0, r8
   1653c:	bl	12bdc <sprintf@plt+0x1320>
   16540:	b	16584 <sprintf@plt+0x4cc8>
   16544:	bl	118b0 <__errno_location@plt>
   16548:	ldr	r0, [r0]
   1654c:	bl	11514 <rb_ignore_errno@plt>
   16550:	cmp	r0, #0
   16554:	beq	16574 <sprintf@plt+0x4cb8>
   16558:	movw	r2, #25400	; 0x6338
   1655c:	mov	r0, r5
   16560:	mov	r1, #1
   16564:	mov	r3, r8
   16568:	movt	r2, #1
   1656c:	bl	11550 <rb_setselect@plt>
   16570:	b	16584 <sprintf@plt+0x4cc8>
   16574:	mov	r5, #2
   16578:	mov	r0, r8
   1657c:	mov	r1, r5
   16580:	bl	161ec <sprintf@plt+0x4930>
   16584:	sub	sp, fp, #24
   16588:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1658c:	push	{fp, lr}
   16590:	mov	fp, sp
   16594:	ldr	r0, [r2]
   16598:	bl	11730 <atoi@plt>
   1659c:	cmn	r0, #1
   165a0:	mov	r2, r0
   165a4:	movwgt	r0, #44708	; 0xaea4
   165a8:	movtgt	r0, #2
   165ac:	strgt	r2, [r0]
   165b0:	popgt	{fp, pc}
   165b4:	movw	r1, #35701	; 0x8b75
   165b8:	mov	r0, #67	; 0x43
   165bc:	movt	r1, #1
   165c0:	bl	123c0 <sprintf@plt+0xb04>
   165c4:	mov	r0, #3
   165c8:	bl	118a4 <exit@plt>
   165cc:	push	{r4, r5, r6, sl, fp, lr}
   165d0:	add	fp, sp, #16
   165d4:	sub	sp, sp, #8
   165d8:	movw	r5, #61820	; 0xf17c
   165dc:	mov	r4, sp
   165e0:	movt	r5, #2
   165e4:	mov	r1, r4
   165e8:	ldr	r0, [r5]
   165ec:	bl	116a0 <rb_dictionary_foreach_start@plt>
   165f0:	ldr	r0, [r5]
   165f4:	mov	r1, r4
   165f8:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   165fc:	cmp	r0, #0
   16600:	beq	1664c <sprintf@plt+0x4d90>
   16604:	movw	r6, #44648	; 0xae68
   16608:	mov	r4, sp
   1660c:	movt	r6, #2
   16610:	ldr	r1, [r6, #12]
   16614:	ldr	r2, [r0, #464]	; 0x1d0
   16618:	add	r1, r2, r1, lsl #4
   1661c:	ldr	r1, [r1, #8]
   16620:	cmp	r1, #0
   16624:	movne	r1, #1
   16628:	blne	16718 <sprintf@plt+0x4e5c>
   1662c:	ldr	r0, [r5]
   16630:	mov	r1, r4
   16634:	bl	11658 <rb_dictionary_foreach_next@plt>
   16638:	ldr	r0, [r5]
   1663c:	mov	r1, r4
   16640:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   16644:	cmp	r0, #0
   16648:	bne	16610 <sprintf@plt+0x4d54>
   1664c:	sub	sp, fp, #16
   16650:	pop	{r4, r5, r6, sl, fp, pc}
   16654:	push	{r4, r5, r6, r7, fp, lr}
   16658:	add	fp, sp, #16
   1665c:	mov	r4, r0
   16660:	mov	r0, #1
   16664:	mov	r1, #4
   16668:	bl	115c8 <calloc@plt>
   1666c:	cmp	r0, #0
   16670:	beq	166ec <sprintf@plt+0x4e30>
   16674:	mov	r5, r0
   16678:	ldr	r0, [r4, #460]	; 0x1cc
   1667c:	ldr	r1, [r4, #464]	; 0x1d0
   16680:	add	r0, r0, #1
   16684:	str	r0, [r4, #460]	; 0x1cc
   16688:	movw	r0, #44648	; 0xae68
   1668c:	movt	r0, #2
   16690:	ldr	r6, [r0, #12]
   16694:	add	r0, r1, r6, lsl #4
   16698:	str	r5, [r0, #8]
   1669c:	movw	r0, #44708	; 0xaea4
   166a0:	movt	r0, #2
   166a4:	ldr	r7, [r0]
   166a8:	bl	116c4 <rb_current_time@plt>
   166ac:	ldr	r1, [r4, #464]	; 0x1d0
   166b0:	add	r0, r0, r7
   166b4:	mov	r2, r4
   166b8:	add	r1, r1, r6, lsl #4
   166bc:	str	r0, [r1, #4]
   166c0:	movw	r1, #26556	; 0x67bc
   166c4:	add	r0, r4, #192	; 0xc0
   166c8:	movt	r1, #1
   166cc:	bl	11f3c <sprintf@plt+0x680>
   166d0:	str	r0, [r5]
   166d4:	movw	r1, #35735	; 0x8b97
   166d8:	ldr	r0, [r4]
   166dc:	movt	r1, #1
   166e0:	bl	12354 <sprintf@plt+0xa98>
   166e4:	mov	r0, #1
   166e8:	pop	{r4, r5, r6, r7, fp, pc}
   166ec:	bl	11784 <rb_outofmemory@plt>
   166f0:	movw	r1, #44648	; 0xae68
   166f4:	ldr	r2, [r0, #464]	; 0x1d0
   166f8:	movt	r1, #2
   166fc:	ldr	r1, [r1, #12]
   16700:	add	r1, r2, r1, lsl #4
   16704:	ldr	r1, [r1, #8]
   16708:	cmp	r1, #0
   1670c:	bxeq	lr
   16710:	mov	r1, #1
   16714:	b	16718 <sprintf@plt+0x4e5c>
   16718:	push	{r4, r5, r6, r7, fp, lr}
   1671c:	add	fp, sp, #16
   16720:	movw	r7, #44648	; 0xae68
   16724:	mov	r4, r0
   16728:	mov	r6, r1
   1672c:	mov	r2, #64	; 0x40
   16730:	movt	r7, #2
   16734:	ldr	r1, [r4, #464]	; 0x1d0
   16738:	ldr	r0, [r7, #12]
   1673c:	add	r0, r1, r0, lsl #4
   16740:	movw	r1, #33476	; 0x82c4
   16744:	movt	r1, #1
   16748:	ldr	r5, [r0, #8]
   1674c:	add	r0, r4, #376	; 0x178
   16750:	bl	11640 <rb_strlcpy@plt>
   16754:	movw	r0, #35880	; 0x8c28
   16758:	movt	r0, #1
   1675c:	ldr	r1, [r0, r6, lsl #2]
   16760:	ldr	r0, [r4]
   16764:	bl	12354 <sprintf@plt+0xa98>
   16768:	ldr	r0, [r5]
   1676c:	bl	120c4 <sprintf@plt+0x808>
   16770:	cmp	r5, #0
   16774:	beq	16780 <sprintf@plt+0x4ec4>
   16778:	mov	r0, r5
   1677c:	bl	11664 <free@plt>
   16780:	ldr	r1, [r7, #12]
   16784:	ldr	r0, [r4, #464]	; 0x1d0
   16788:	mov	r2, #0
   1678c:	add	r0, r0, r1, lsl #4
   16790:	str	r2, [r0, #4]
   16794:	str	r2, [r0, #8]
   16798:	mov	r0, r4
   1679c:	bl	12c94 <sprintf@plt+0x13d8>
   167a0:	ldr	r0, [r4, #460]	; 0x1cc
   167a4:	subs	r0, r0, #1
   167a8:	str	r0, [r4, #460]	; 0x1cc
   167ac:	popne	{r4, r5, r6, r7, fp, pc}
   167b0:	mov	r0, r4
   167b4:	pop	{r4, r5, r6, r7, fp, lr}
   167b8:	b	12bdc <sprintf@plt+0x1320>
   167bc:	push	{r4, r5, r6, r7, fp, lr}
   167c0:	add	fp, sp, #16
   167c4:	cmp	r0, #0
   167c8:	mov	r4, r3
   167cc:	cmpne	r1, #0
   167d0:	bne	167e0 <sprintf@plt+0x4f24>
   167d4:	mov	r0, r4
   167d8:	mov	r1, #1
   167dc:	b	167f8 <sprintf@plt+0x4f3c>
   167e0:	mov	r5, r0
   167e4:	bl	116b8 <strlen@plt>
   167e8:	cmp	r0, #64	; 0x40
   167ec:	bcc	16800 <sprintf@plt+0x4f44>
   167f0:	mov	r0, r4
   167f4:	mov	r1, #2
   167f8:	pop	{r4, r5, r6, r7, fp, lr}
   167fc:	b	16718 <sprintf@plt+0x4e5c>
   16800:	add	r6, r4, #376	; 0x178
   16804:	mov	r1, r5
   16808:	mov	r2, #64	; 0x40
   1680c:	mov	r0, r6
   16810:	bl	11640 <rb_strlcpy@plt>
   16814:	movw	r7, #44648	; 0xae68
   16818:	ldr	r2, [r4, #464]	; 0x1d0
   1681c:	ldr	r0, [r4]
   16820:	movt	r7, #2
   16824:	ldr	r1, [r7, #12]
   16828:	add	r1, r2, r1, lsl #4
   1682c:	mov	r2, r6
   16830:	ldr	r5, [r1, #8]
   16834:	movw	r1, #35851	; 0x8c0b
   16838:	movt	r1, #1
   1683c:	bl	12354 <sprintf@plt+0xa98>
   16840:	ldr	r0, [r5]
   16844:	bl	120c4 <sprintf@plt+0x808>
   16848:	cmp	r5, #0
   1684c:	beq	16858 <sprintf@plt+0x4f9c>
   16850:	mov	r0, r5
   16854:	bl	11664 <free@plt>
   16858:	ldr	r1, [r7, #12]
   1685c:	ldr	r0, [r4, #464]	; 0x1d0
   16860:	mov	r2, #0
   16864:	add	r0, r0, r1, lsl #4
   16868:	str	r2, [r0, #4]
   1686c:	str	r2, [r0, #8]
   16870:	mov	r0, r4
   16874:	bl	12c94 <sprintf@plt+0x13d8>
   16878:	ldr	r0, [r4, #460]	; 0x1cc
   1687c:	subs	r0, r0, #1
   16880:	str	r0, [r4, #460]	; 0x1cc
   16884:	popne	{r4, r5, r6, r7, fp, pc}
   16888:	mov	r0, r4
   1688c:	pop	{r4, r5, r6, r7, fp, lr}
   16890:	b	12bdc <sprintf@plt+0x1320>
   16894:	push	{fp, lr}
   16898:	mov	fp, sp
   1689c:	ldr	r0, [r2]
   168a0:	bl	11730 <atoi@plt>
   168a4:	mov	r2, r0
   168a8:	cmn	r0, #1
   168ac:	ble	168c0 <sprintf@plt+0x5004>
   168b0:	movw	r0, #44868	; 0xaf44
   168b4:	movt	r0, #2
   168b8:	str	r2, [r0]
   168bc:	pop	{fp, pc}
   168c0:	movw	r1, #36002	; 0x8ca2
   168c4:	mov	r0, #67	; 0x43
   168c8:	movt	r1, #1
   168cc:	pop	{fp, lr}
   168d0:	b	123c0 <sprintf@plt+0xb04>
   168d4:	push	{r4, r5, r6, sl, fp, lr}
   168d8:	add	fp, sp, #16
   168dc:	sub	sp, sp, #8
   168e0:	ldr	r0, [r2]
   168e4:	movw	r4, #61424	; 0xeff0
   168e8:	movt	r4, #2
   168ec:	ldrb	r0, [r0]
   168f0:	subs	r0, r0, #49	; 0x31
   168f4:	clz	r0, r0
   168f8:	lsr	r5, r0, #5
   168fc:	bne	16958 <sprintf@plt+0x509c>
   16900:	ldrb	r0, [r4]
   16904:	cmp	r0, #0
   16908:	beq	1692c <sprintf@plt+0x5070>
   1690c:	ldrh	r1, [r4, #54]	; 0x36
   16910:	cmp	r1, #0
   16914:	beq	1692c <sprintf@plt+0x5070>
   16918:	ldr	r0, [r4, #184]	; 0xb8
   1691c:	cmp	r0, #0
   16920:	movweq	r0, #61424	; 0xeff0
   16924:	movteq	r0, #2
   16928:	bleq	17430 <sprintf@plt+0x5b74>
   1692c:	ldrb	r0, [r4, #188]	; 0xbc
   16930:	cmp	r0, #0
   16934:	beq	169e8 <sprintf@plt+0x512c>
   16938:	ldrh	r1, [r4, #242]	; 0xf2
   1693c:	cmp	r1, #0
   16940:	beq	169e8 <sprintf@plt+0x512c>
   16944:	ldr	r0, [r4, #372]	; 0x174
   16948:	cmp	r0, #0
   1694c:	addeq	r0, r4, #188	; 0xbc
   16950:	bleq	17430 <sprintf@plt+0x5b74>
   16954:	b	169e8 <sprintf@plt+0x512c>
   16958:	ldr	r1, [r4, #184]	; 0xb8
   1695c:	ldr	r0, [r4, #372]	; 0x174
   16960:	orrs	r2, r1, r0
   16964:	beq	169e8 <sprintf@plt+0x512c>
   16968:	cmp	r1, #0
   1696c:	beq	1697c <sprintf@plt+0x50c0>
   16970:	mov	r0, r1
   16974:	bl	11700 <rb_close@plt>
   16978:	ldr	r0, [r4, #372]	; 0x174
   1697c:	cmp	r0, #0
   16980:	beq	16988 <sprintf@plt+0x50cc>
   16984:	bl	11700 <rb_close@plt>
   16988:	movw	r6, #61820	; 0xf17c
   1698c:	mov	r0, #0
   16990:	movt	r6, #2
   16994:	str	r0, [r4, #184]	; 0xb8
   16998:	str	r0, [r4, #372]	; 0x174
   1699c:	mov	r4, sp
   169a0:	mov	r1, r4
   169a4:	ldr	r0, [r6]
   169a8:	bl	116a0 <rb_dictionary_foreach_start@plt>
   169ac:	ldr	r0, [r6]
   169b0:	mov	r1, r4
   169b4:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   169b8:	cmp	r0, #0
   169bc:	beq	169e8 <sprintf@plt+0x512c>
   169c0:	mov	r4, sp
   169c4:	bl	17288 <sprintf@plt+0x59cc>
   169c8:	ldr	r0, [r6]
   169cc:	mov	r1, r4
   169d0:	bl	11658 <rb_dictionary_foreach_next@plt>
   169d4:	ldr	r0, [r6]
   169d8:	mov	r1, r4
   169dc:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   169e0:	cmp	r0, #0
   169e4:	bne	169c4 <sprintf@plt+0x5108>
   169e8:	movw	r0, #61800	; 0xf168
   169ec:	movt	r0, #2
   169f0:	strb	r5, [r0]
   169f4:	sub	sp, fp, #16
   169f8:	pop	{r4, r5, r6, sl, fp, pc}
   169fc:	push	{r4, r5, fp, lr}
   16a00:	add	fp, sp, #8
   16a04:	ldm	r2, {r4, r5}
   16a08:	mov	r0, r5
   16a0c:	bl	11730 <atoi@plt>
   16a10:	sub	r1, r0, #1
   16a14:	movw	r2, #65535	; 0xffff
   16a18:	cmp	r1, r2
   16a1c:	bcs	16a30 <sprintf@plt+0x5174>
   16a20:	uxth	r1, r0
   16a24:	mov	r0, r4
   16a28:	pop	{r4, r5, fp, lr}
   16a2c:	b	17430 <sprintf@plt+0x5b74>
   16a30:	movw	r1, #36284	; 0x8dbc
   16a34:	mov	r0, #67	; 0x43
   16a38:	mov	r2, r4
   16a3c:	mov	r3, r5
   16a40:	movt	r1, #1
   16a44:	bl	123c0 <sprintf@plt+0xb04>
   16a48:	mov	r0, #3
   16a4c:	bl	118a4 <exit@plt>
   16a50:	push	{r4, sl, fp, lr}
   16a54:	add	fp, sp, #8
   16a58:	movw	r4, #61424	; 0xeff0
   16a5c:	movt	r4, #2
   16a60:	ldr	r0, [r4, #184]	; 0xb8
   16a64:	cmp	r0, #0
   16a68:	beq	16a70 <sprintf@plt+0x51b4>
   16a6c:	bl	11700 <rb_close@plt>
   16a70:	ldr	r0, [r4, #372]	; 0x174
   16a74:	cmp	r0, #0
   16a78:	beq	16a80 <sprintf@plt+0x51c4>
   16a7c:	bl	11700 <rb_close@plt>
   16a80:	movw	r0, #61424	; 0xeff0
   16a84:	mov	r1, #0
   16a88:	mov	r2, #376	; 0x178
   16a8c:	movt	r0, #2
   16a90:	pop	{r4, sl, fp, lr}
   16a94:	b	115f8 <memset@plt>
   16a98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16a9c:	add	fp, sp, #24
   16aa0:	ldr	r7, [r2, #4]
   16aa4:	mov	r8, r2
   16aa8:	mov	r0, r7
   16aac:	bl	11730 <atoi@plt>
   16ab0:	mov	r6, r0
   16ab4:	mov	r0, #1
   16ab8:	mov	r1, #40	; 0x28
   16abc:	bl	115c8 <calloc@plt>
   16ac0:	cmp	r0, #0
   16ac4:	beq	16cb8 <sprintf@plt+0x53fc>
   16ac8:	mov	r5, r0
   16acc:	sub	r0, r6, #1
   16ad0:	movw	r1, #65535	; 0xffff
   16ad4:	cmp	r0, r1
   16ad8:	bcs	16cbc <sprintf@plt+0x5400>
   16adc:	strh	r6, [r5, #20]
   16ae0:	movw	r1, #36497	; 0x8e91
   16ae4:	ldr	r7, [r8]
   16ae8:	movt	r1, #1
   16aec:	mov	r0, r7
   16af0:	bl	115bc <strcasecmp@plt>
   16af4:	cmp	r0, #0
   16af8:	beq	16b78 <sprintf@plt+0x52bc>
   16afc:	movw	r1, #36504	; 0x8e98
   16b00:	mov	r0, r7
   16b04:	movt	r1, #1
   16b08:	bl	115bc <strcasecmp@plt>
   16b0c:	cmp	r0, #0
   16b10:	beq	16ba4 <sprintf@plt+0x52e8>
   16b14:	movw	r1, #36511	; 0x8e9f
   16b18:	mov	r0, r7
   16b1c:	movt	r1, #1
   16b20:	bl	115bc <strcasecmp@plt>
   16b24:	cmp	r0, #0
   16b28:	beq	16bd0 <sprintf@plt+0x5314>
   16b2c:	movw	r1, #36523	; 0x8eab
   16b30:	mov	r0, r7
   16b34:	movt	r1, #1
   16b38:	bl	115bc <strcasecmp@plt>
   16b3c:	cmp	r0, #0
   16b40:	bne	16cd4 <sprintf@plt+0x5418>
   16b44:	movw	r2, #36390	; 0x8e26
   16b48:	mov	r0, #4
   16b4c:	uxth	r3, r6
   16b50:	mov	r1, #16
   16b54:	movt	r2, #1
   16b58:	str	r0, [r5, #16]
   16b5c:	mov	r0, r5
   16b60:	bl	11844 <snprintf@plt>
   16b64:	movw	r0, #31424	; 0x7ac0
   16b68:	movt	r0, #1
   16b6c:	str	r0, [r5, #24]
   16b70:	mov	r0, #1
   16b74:	b	16c00 <sprintf@plt+0x5344>
   16b78:	movw	r2, #36352	; 0x8e00
   16b7c:	mov	r0, #1
   16b80:	uxth	r3, r6
   16b84:	mov	r1, #16
   16b88:	movt	r2, #1
   16b8c:	str	r0, [r5, #16]
   16b90:	mov	r0, r5
   16b94:	bl	11844 <snprintf@plt>
   16b98:	movw	r0, #31104	; 0x7980
   16b9c:	movt	r0, #1
   16ba0:	b	16bf8 <sprintf@plt+0x533c>
   16ba4:	movw	r2, #36363	; 0x8e0b
   16ba8:	mov	r0, #2
   16bac:	uxth	r3, r6
   16bb0:	mov	r1, #16
   16bb4:	movt	r2, #1
   16bb8:	str	r0, [r5, #16]
   16bbc:	mov	r0, r5
   16bc0:	bl	11844 <snprintf@plt>
   16bc4:	movw	r0, #31220	; 0x79f4
   16bc8:	movt	r0, #1
   16bcc:	b	16bf8 <sprintf@plt+0x533c>
   16bd0:	movw	r2, #36374	; 0x8e16
   16bd4:	mov	r0, #3
   16bd8:	uxth	r3, r6
   16bdc:	mov	r1, #16
   16be0:	movt	r2, #1
   16be4:	str	r0, [r5, #16]
   16be8:	mov	r0, r5
   16bec:	bl	11844 <snprintf@plt>
   16bf0:	movw	r0, #31424	; 0x7ac0
   16bf4:	movt	r0, #1
   16bf8:	str	r0, [r5, #24]
   16bfc:	mov	r0, #0
   16c00:	strb	r0, [r5, #22]
   16c04:	movw	r0, #61804	; 0xf16c
   16c08:	movt	r0, #2
   16c0c:	ldr	r7, [r0]
   16c10:	cmp	r7, #0
   16c14:	beq	16c4c <sprintf@plt+0x5390>
   16c18:	ldrh	r3, [r5, #20]
   16c1c:	ldr	r2, [r5, #16]
   16c20:	mov	r1, r7
   16c24:	ldr	r6, [r1]
   16c28:	ldr	r4, [r6, #16]
   16c2c:	cmp	r4, r2
   16c30:	bne	16c40 <sprintf@plt+0x5384>
   16c34:	ldrh	r6, [r6, #20]
   16c38:	cmp	r6, r3
   16c3c:	beq	16c98 <sprintf@plt+0x53dc>
   16c40:	ldr	r1, [r1, #8]
   16c44:	cmp	r1, #0
   16c48:	bne	16c24 <sprintf@plt+0x5368>
   16c4c:	mov	r1, #0
   16c50:	add	r2, r5, #28
   16c54:	cmp	r7, #0
   16c58:	str	r5, [r5, #28]
   16c5c:	str	r1, [r5, #32]
   16c60:	str	r7, [r5, #36]	; 0x24
   16c64:	beq	16c74 <sprintf@plt+0x53b8>
   16c68:	add	r1, r7, #4
   16c6c:	str	r2, [r1]
   16c70:	b	16c84 <sprintf@plt+0x53c8>
   16c74:	mov	r1, r0
   16c78:	ldr	r3, [r1, #4]!
   16c7c:	cmp	r3, #0
   16c80:	streq	r2, [r1]
   16c84:	str	r2, [r0]
   16c88:	ldr	r1, [r0, #8]
   16c8c:	add	r1, r1, #1
   16c90:	str	r1, [r0, #8]
   16c94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16c98:	ldr	r2, [r8]
   16c9c:	movw	r1, #36453	; 0x8e65
   16ca0:	mov	r0, #67	; 0x43
   16ca4:	movt	r1, #1
   16ca8:	bl	123c0 <sprintf@plt+0xb04>
   16cac:	mov	r0, r5
   16cb0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16cb4:	b	11664 <free@plt>
   16cb8:	bl	11784 <rb_outofmemory@plt>
   16cbc:	ldr	r2, [r8]
   16cc0:	movw	r1, #36315	; 0x8ddb
   16cc4:	mov	r0, #67	; 0x43
   16cc8:	mov	r3, r7
   16ccc:	movt	r1, #1
   16cd0:	b	16ce8 <sprintf@plt+0x542c>
   16cd4:	movw	r1, #36407	; 0x8e37
   16cd8:	uxth	r3, r6
   16cdc:	mov	r0, #67	; 0x43
   16ce0:	mov	r2, r7
   16ce4:	movt	r1, #1
   16ce8:	bl	123c0 <sprintf@plt+0xb04>
   16cec:	mov	r0, #3
   16cf0:	bl	118a4 <exit@plt>
   16cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cf8:	add	fp, sp, #28
   16cfc:	sub	sp, sp, #12
   16d00:	ldr	r5, [r2]
   16d04:	movw	r1, #36497	; 0x8e91
   16d08:	mov	r4, r2
   16d0c:	movt	r1, #1
   16d10:	mov	r0, r5
   16d14:	bl	115bc <strcasecmp@plt>
   16d18:	cmp	r0, #0
   16d1c:	beq	16d70 <sprintf@plt+0x54b4>
   16d20:	movw	r1, #36504	; 0x8e98
   16d24:	mov	r0, r5
   16d28:	movt	r1, #1
   16d2c:	bl	115bc <strcasecmp@plt>
   16d30:	cmp	r0, #0
   16d34:	beq	16d78 <sprintf@plt+0x54bc>
   16d38:	movw	r1, #36511	; 0x8e9f
   16d3c:	mov	r0, r5
   16d40:	movt	r1, #1
   16d44:	bl	115bc <strcasecmp@plt>
   16d48:	cmp	r0, #0
   16d4c:	beq	16d80 <sprintf@plt+0x54c4>
   16d50:	movw	r1, #36523	; 0x8eab
   16d54:	mov	r0, r5
   16d58:	movt	r1, #1
   16d5c:	bl	115bc <strcasecmp@plt>
   16d60:	clz	r0, r0
   16d64:	lsr	r0, r0, #5
   16d68:	lsl	r6, r0, #2
   16d6c:	b	16d84 <sprintf@plt+0x54c8>
   16d70:	mov	r6, #1
   16d74:	b	16d84 <sprintf@plt+0x54c8>
   16d78:	mov	r6, #2
   16d7c:	b	16d84 <sprintf@plt+0x54c8>
   16d80:	mov	r6, #3
   16d84:	ldr	r4, [r4, #4]
   16d88:	mov	r0, r4
   16d8c:	bl	11730 <atoi@plt>
   16d90:	mov	r3, r0
   16d94:	sub	r0, r0, #1
   16d98:	movw	r1, #65535	; 0xffff
   16d9c:	cmp	r0, r1
   16da0:	bcs	16fc4 <sprintf@plt+0x5708>
   16da4:	cmp	r6, #0
   16da8:	beq	16fdc <sprintf@plt+0x5720>
   16dac:	movw	r0, #61804	; 0xf16c
   16db0:	movt	r0, #2
   16db4:	ldr	r0, [r0]
   16db8:	cmp	r0, #0
   16dbc:	beq	16dec <sprintf@plt+0x5530>
   16dc0:	uxth	r1, r3
   16dc4:	ldr	r4, [r0]
   16dc8:	ldr	r2, [r4, #16]
   16dcc:	cmp	r2, r6
   16dd0:	bne	16de0 <sprintf@plt+0x5524>
   16dd4:	ldrh	r2, [r4, #20]
   16dd8:	cmp	r2, r1
   16ddc:	beq	16e08 <sprintf@plt+0x554c>
   16de0:	ldr	r0, [r0, #8]
   16de4:	cmp	r0, #0
   16de8:	bne	16dc4 <sprintf@plt+0x5508>
   16dec:	movw	r1, #36679	; 0x8f47
   16df0:	movt	r1, #1
   16df4:	mov	r0, #67	; 0x43
   16df8:	mov	r2, r5
   16dfc:	bl	123c0 <sprintf@plt+0xb04>
   16e00:	mov	r0, #3
   16e04:	bl	118a4 <exit@plt>
   16e08:	movw	sl, #61820	; 0xf17c
   16e0c:	add	r5, sp, #4
   16e10:	movt	sl, #2
   16e14:	mov	r1, r5
   16e18:	ldr	r0, [sl]
   16e1c:	bl	116a0 <rb_dictionary_foreach_start@plt>
   16e20:	ldr	r0, [sl]
   16e24:	mov	r1, r5
   16e28:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   16e2c:	cmp	r0, #0
   16e30:	beq	16f48 <sprintf@plt+0x568c>
   16e34:	movw	r9, #44808	; 0xaf08
   16e38:	mov	r6, r0
   16e3c:	add	r5, sp, #4
   16e40:	movt	r9, #2
   16e44:	ldr	r0, [r9, #12]
   16e48:	ldr	r1, [r6, #464]	; 0x1d0
   16e4c:	add	r0, r1, r0, lsl #4
   16e50:	ldr	r8, [r0, #8]
   16e54:	cmp	r8, #0
   16e58:	beq	16f24 <sprintf@plt+0x5668>
   16e5c:	ldr	r0, [r6, #460]	; 0x1cc
   16e60:	add	r0, r0, #1
   16e64:	str	r0, [r6, #460]	; 0x1cc
   16e68:	ldr	r1, [r8]
   16e6c:	cmp	r1, #0
   16e70:	beq	16f0c <sprintf@plt+0x5650>
   16e74:	ldrh	r2, [r4, #20]
   16e78:	ldr	r0, [r1]
   16e7c:	ldr	r3, [r0, #8]
   16e80:	ldrh	r7, [r3, #20]
   16e84:	cmp	r7, r2
   16e88:	bne	16e9c <sprintf@plt+0x55e0>
   16e8c:	ldr	r7, [r4, #16]
   16e90:	ldr	r3, [r3, #16]
   16e94:	cmp	r3, r7
   16e98:	beq	16eac <sprintf@plt+0x55f0>
   16e9c:	ldr	r1, [r1, #8]
   16ea0:	cmp	r1, #0
   16ea4:	bne	16e78 <sprintf@plt+0x55bc>
   16ea8:	b	16f0c <sprintf@plt+0x5650>
   16eac:	ldr	r1, [r0, #24]
   16eb0:	ldr	r2, [r0, #20]
   16eb4:	cmp	r1, #0
   16eb8:	beq	16ec8 <sprintf@plt+0x560c>
   16ebc:	str	r2, [r1, #4]
   16ec0:	ldr	r2, [r0, #20]
   16ec4:	b	16ecc <sprintf@plt+0x5610>
   16ec8:	str	r2, [r8, #4]
   16ecc:	cmp	r2, #0
   16ed0:	mov	r3, r8
   16ed4:	addne	r3, r2, #8
   16ed8:	str	r1, [r3]
   16edc:	mov	r1, #0
   16ee0:	str	r1, [r0, #20]
   16ee4:	str	r1, [r0, #24]
   16ee8:	ldr	r1, [r8, #8]
   16eec:	sub	r1, r1, #1
   16ef0:	str	r1, [r8, #8]
   16ef4:	bl	11664 <free@plt>
   16ef8:	ldr	r0, [r8, #8]
   16efc:	cmp	r0, #0
   16f00:	bne	16f0c <sprintf@plt+0x5650>
   16f04:	mov	r0, r6
   16f08:	bl	17288 <sprintf@plt+0x59cc>
   16f0c:	ldr	r0, [r6, #460]	; 0x1cc
   16f10:	subs	r0, r0, #1
   16f14:	str	r0, [r6, #460]	; 0x1cc
   16f18:	bne	16f24 <sprintf@plt+0x5668>
   16f1c:	mov	r0, r6
   16f20:	bl	12bdc <sprintf@plt+0x1320>
   16f24:	ldr	r0, [sl]
   16f28:	mov	r1, r5
   16f2c:	bl	11658 <rb_dictionary_foreach_next@plt>
   16f30:	ldr	r0, [sl]
   16f34:	mov	r1, r5
   16f38:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   16f3c:	mov	r6, r0
   16f40:	cmp	r0, #0
   16f44:	bne	16e44 <sprintf@plt+0x5588>
   16f48:	ldr	r0, [r4, #36]	; 0x24
   16f4c:	ldr	r1, [r4, #32]
   16f50:	cmp	r0, #0
   16f54:	beq	16f6c <sprintf@plt+0x56b0>
   16f58:	str	r1, [r0, #4]
   16f5c:	movw	r6, #61804	; 0xf16c
   16f60:	ldr	r1, [r4, #32]
   16f64:	movt	r6, #2
   16f68:	b	16f78 <sprintf@plt+0x56bc>
   16f6c:	movw	r6, #61804	; 0xf16c
   16f70:	movt	r6, #2
   16f74:	str	r1, [r6, #4]
   16f78:	cmp	r1, #0
   16f7c:	mov	r2, r6
   16f80:	mov	r5, #0
   16f84:	addne	r2, r1, #8
   16f88:	str	r0, [r2]
   16f8c:	str	r5, [r4, #32]
   16f90:	str	r5, [r4, #36]	; 0x24
   16f94:	ldr	r0, [r6, #8]
   16f98:	sub	r0, r0, #1
   16f9c:	str	r0, [r6, #8]
   16fa0:	mov	r0, r4
   16fa4:	bl	11664 <free@plt>
   16fa8:	ldr	r0, [r6, #8]
   16fac:	cmp	r0, #0
   16fb0:	movweq	r0, #61800	; 0xf168
   16fb4:	movteq	r0, #2
   16fb8:	strbeq	r5, [r0]
   16fbc:	sub	sp, fp, #28
   16fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fc4:	movw	r1, #36577	; 0x8ee1
   16fc8:	mov	r0, #67	; 0x43
   16fcc:	mov	r2, r5
   16fd0:	mov	r3, r4
   16fd4:	movt	r1, #1
   16fd8:	b	16dfc <sprintf@plt+0x5540>
   16fdc:	movw	r1, #36624	; 0x8f10
   16fe0:	movt	r1, #1
   16fe4:	b	16df4 <sprintf@plt+0x5538>
   16fe8:	push	{r4, r5, r6, r7, fp, lr}
   16fec:	add	fp, sp, #16
   16ff0:	sub	sp, sp, #8
   16ff4:	movw	r4, #61804	; 0xf16c
   16ff8:	movt	r4, #2
   16ffc:	ldr	r6, [r4]
   17000:	cmp	r6, #0
   17004:	beq	17070 <sprintf@plt+0x57b4>
   17008:	mov	r5, #0
   1700c:	ldr	r0, [r6]
   17010:	ldr	r7, [r6, #8]
   17014:	cmp	r0, #0
   17018:	beq	17020 <sprintf@plt+0x5764>
   1701c:	bl	11664 <free@plt>
   17020:	ldr	r0, [r6, #8]
   17024:	ldr	r1, [r6, #4]
   17028:	cmp	r0, #0
   1702c:	beq	1703c <sprintf@plt+0x5780>
   17030:	str	r1, [r0, #4]
   17034:	ldr	r1, [r6, #4]
   17038:	b	17040 <sprintf@plt+0x5784>
   1703c:	str	r1, [r4, #4]
   17040:	cmp	r1, #0
   17044:	mov	r2, r4
   17048:	addne	r2, r1, #8
   1704c:	cmp	r7, #0
   17050:	str	r0, [r2]
   17054:	str	r5, [r6, #4]
   17058:	str	r5, [r6, #8]
   1705c:	mov	r6, r7
   17060:	ldr	r0, [r4, #8]
   17064:	sub	r0, r0, #1
   17068:	str	r0, [r4, #8]
   1706c:	bne	1700c <sprintf@plt+0x5750>
   17070:	movw	r5, #61820	; 0xf17c
   17074:	mov	r4, sp
   17078:	movt	r5, #2
   1707c:	mov	r1, r4
   17080:	ldr	r0, [r5]
   17084:	bl	116a0 <rb_dictionary_foreach_start@plt>
   17088:	ldr	r0, [r5]
   1708c:	mov	r1, r4
   17090:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   17094:	cmp	r0, #0
   17098:	beq	170c4 <sprintf@plt+0x5808>
   1709c:	mov	r4, sp
   170a0:	bl	17288 <sprintf@plt+0x59cc>
   170a4:	ldr	r0, [r5]
   170a8:	mov	r1, r4
   170ac:	bl	11658 <rb_dictionary_foreach_next@plt>
   170b0:	ldr	r0, [r5]
   170b4:	mov	r1, r4
   170b8:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   170bc:	cmp	r0, #0
   170c0:	bne	170a0 <sprintf@plt+0x57e4>
   170c4:	movw	r0, #61800	; 0xf168
   170c8:	mov	r1, #0
   170cc:	movt	r0, #2
   170d0:	strb	r1, [r0]
   170d4:	sub	sp, fp, #16
   170d8:	pop	{r4, r5, r6, r7, fp, pc}
   170dc:	push	{r4, r5, fp, lr}
   170e0:	add	fp, sp, #8
   170e4:	sub	sp, sp, #8
   170e8:	movw	r5, #61820	; 0xf17c
   170ec:	mov	r4, sp
   170f0:	movt	r5, #2
   170f4:	mov	r1, r4
   170f8:	ldr	r0, [r5]
   170fc:	bl	116a0 <rb_dictionary_foreach_start@plt>
   17100:	ldr	r0, [r5]
   17104:	mov	r1, r4
   17108:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   1710c:	cmp	r0, #0
   17110:	beq	1713c <sprintf@plt+0x5880>
   17114:	mov	r4, sp
   17118:	bl	17288 <sprintf@plt+0x59cc>
   1711c:	ldr	r0, [r5]
   17120:	mov	r1, r4
   17124:	bl	11658 <rb_dictionary_foreach_next@plt>
   17128:	ldr	r0, [r5]
   1712c:	mov	r1, r4
   17130:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   17134:	cmp	r0, #0
   17138:	bne	17118 <sprintf@plt+0x585c>
   1713c:	sub	sp, fp, #8
   17140:	pop	{r4, r5, fp, pc}
   17144:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17148:	add	fp, sp, #24
   1714c:	mov	r9, r0
   17150:	movw	r0, #61800	; 0xf168
   17154:	movt	r0, #2
   17158:	ldrb	r0, [r0]
   1715c:	cmp	r0, #0
   17160:	beq	171f8 <sprintf@plt+0x593c>
   17164:	movw	r0, #61804	; 0xf16c
   17168:	movt	r0, #2
   1716c:	ldr	r0, [r0, #8]
   17170:	cmp	r0, #0
   17174:	beq	171f8 <sprintf@plt+0x593c>
   17178:	ldr	r0, [r9, #460]	; 0x1cc
   1717c:	mov	r1, #16
   17180:	add	r0, r0, #1
   17184:	str	r0, [r9, #460]	; 0x1cc
   17188:	movw	r0, #44808	; 0xaf08
   1718c:	movt	r0, #2
   17190:	ldr	r5, [r0, #12]
   17194:	mov	r0, #1
   17198:	bl	115c8 <calloc@plt>
   1719c:	cmp	r0, #0
   171a0:	beq	17284 <sprintf@plt+0x59c8>
   171a4:	ldr	r8, [r9, #464]	; 0x1d0
   171a8:	add	r1, r8, r5, lsl #4
   171ac:	str	r0, [r1, #8]
   171b0:	movw	r0, #61824	; 0xf180
   171b4:	movt	r0, #2
   171b8:	ldr	r6, [r0]
   171bc:	cmp	r6, #0
   171c0:	beq	17274 <sprintf@plt+0x59b8>
   171c4:	movw	r5, #35129	; 0x8939
   171c8:	mov	r7, r6
   171cc:	movt	r5, #1
   171d0:	ldr	r4, [r7]
   171d4:	mov	r1, r5
   171d8:	ldr	r0, [r4, #16]
   171dc:	bl	115bc <strcasecmp@plt>
   171e0:	cmp	r0, #0
   171e4:	beq	17210 <sprintf@plt+0x5954>
   171e8:	ldr	r7, [r7, #8]
   171ec:	cmp	r7, #0
   171f0:	bne	171d0 <sprintf@plt+0x5914>
   171f4:	b	1722c <sprintf@plt+0x5970>
   171f8:	movw	r0, #44808	; 0xaf08
   171fc:	movt	r0, #2
   17200:	ldr	r1, [r0, #12]
   17204:	mov	r0, r9
   17208:	bl	12c94 <sprintf@plt+0x13d8>
   1720c:	b	1727c <sprintf@plt+0x59c0>
   17210:	cmp	r4, #0
   17214:	beq	1722c <sprintf@plt+0x5970>
   17218:	ldr	r0, [r4, #12]
   1721c:	add	r0, r8, r0, lsl #4
   17220:	ldr	r0, [r0, #12]
   17224:	cmp	r0, #2
   17228:	bne	1727c <sprintf@plt+0x59c0>
   1722c:	ldr	r5, [r6]
   17230:	movw	r1, #35609	; 0x8b19
   17234:	movt	r1, #1
   17238:	ldr	r0, [r5, #16]
   1723c:	bl	115bc <strcasecmp@plt>
   17240:	cmp	r0, #0
   17244:	beq	17258 <sprintf@plt+0x599c>
   17248:	ldr	r6, [r6, #8]
   1724c:	cmp	r6, #0
   17250:	bne	1722c <sprintf@plt+0x5970>
   17254:	b	17274 <sprintf@plt+0x59b8>
   17258:	cmp	r5, #0
   1725c:	beq	17274 <sprintf@plt+0x59b8>
   17260:	ldr	r0, [r5, #12]
   17264:	add	r0, r8, r0, lsl #4
   17268:	ldr	r0, [r0, #12]
   1726c:	cmp	r0, #2
   17270:	bne	1727c <sprintf@plt+0x59c0>
   17274:	mov	r0, r9
   17278:	bl	17b58 <sprintf@plt+0x629c>
   1727c:	mov	r0, #1
   17280:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17284:	bl	11784 <rb_outofmemory@plt>
   17288:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1728c:	add	fp, sp, #24
   17290:	movw	r8, #44808	; 0xaf08
   17294:	mov	r4, r0
   17298:	movt	r8, #2
   1729c:	ldr	r1, [r4, #464]	; 0x1d0
   172a0:	ldr	r0, [r8, #12]
   172a4:	add	r0, r1, r0, lsl #4
   172a8:	ldr	r5, [r0, #8]
   172ac:	cmp	r5, #0
   172b0:	beq	17338 <sprintf@plt+0x5a7c>
   172b4:	ldr	r0, [r4]
   172b8:	movw	r1, #36807	; 0x8fc7
   172bc:	movt	r1, #1
   172c0:	bl	12354 <sprintf@plt+0xa98>
   172c4:	ldr	r7, [r5]
   172c8:	cmp	r7, #0
   172cc:	beq	172f4 <sprintf@plt+0x5a38>
   172d0:	ldr	r6, [r7]
   172d4:	ldr	r7, [r7, #8]
   172d8:	ldr	r0, [r6, #4]
   172dc:	bl	11700 <rb_close@plt>
   172e0:	cmp	r6, #0
   172e4:	beq	172c8 <sprintf@plt+0x5a0c>
   172e8:	mov	r0, r6
   172ec:	bl	11664 <free@plt>
   172f0:	b	172c8 <sprintf@plt+0x5a0c>
   172f4:	mov	r0, r5
   172f8:	bl	11664 <free@plt>
   172fc:	ldr	r1, [r8, #12]
   17300:	ldr	r0, [r4, #464]	; 0x1d0
   17304:	mov	r2, #0
   17308:	add	r0, r0, r1, lsl #4
   1730c:	str	r2, [r0, #4]
   17310:	str	r2, [r0, #8]
   17314:	mov	r0, r4
   17318:	bl	12c94 <sprintf@plt+0x13d8>
   1731c:	ldr	r0, [r4, #460]	; 0x1cc
   17320:	subs	r0, r0, #1
   17324:	str	r0, [r4, #460]	; 0x1cc
   17328:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1732c:	mov	r0, r4
   17330:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17334:	b	12bdc <sprintf@plt+0x1320>
   17338:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1733c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17340:	add	fp, sp, #24
   17344:	mov	r8, r0
   17348:	movw	r0, #44808	; 0xaf08
   1734c:	movt	r0, #2
   17350:	ldr	r9, [r8, #464]	; 0x1d0
   17354:	ldr	r0, [r0, #12]
   17358:	add	r0, r9, r0, lsl #4
   1735c:	ldr	r0, [r0, #8]
   17360:	cmp	r0, #0
   17364:	beq	1742c <sprintf@plt+0x5b70>
   17368:	ldrb	r0, [r0, #12]
   1736c:	cmp	r0, #0
   17370:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   17374:	movw	r0, #61824	; 0xf180
   17378:	movt	r0, #2
   1737c:	ldr	r4, [r0]
   17380:	cmp	r4, #0
   17384:	beq	17420 <sprintf@plt+0x5b64>
   17388:	movw	r5, #35129	; 0x8939
   1738c:	mov	r7, r4
   17390:	movt	r5, #1
   17394:	ldr	r6, [r7]
   17398:	mov	r1, r5
   1739c:	ldr	r0, [r6, #16]
   173a0:	bl	115bc <strcasecmp@plt>
   173a4:	cmp	r0, #0
   173a8:	beq	173bc <sprintf@plt+0x5b00>
   173ac:	ldr	r7, [r7, #8]
   173b0:	cmp	r7, #0
   173b4:	bne	17394 <sprintf@plt+0x5ad8>
   173b8:	b	173d8 <sprintf@plt+0x5b1c>
   173bc:	cmp	r6, #0
   173c0:	beq	173d8 <sprintf@plt+0x5b1c>
   173c4:	ldr	r0, [r6, #12]
   173c8:	add	r0, r9, r0, lsl #4
   173cc:	ldr	r0, [r0, #12]
   173d0:	cmp	r0, #2
   173d4:	bne	1742c <sprintf@plt+0x5b70>
   173d8:	ldr	r5, [r4]
   173dc:	movw	r1, #35609	; 0x8b19
   173e0:	movt	r1, #1
   173e4:	ldr	r0, [r5, #16]
   173e8:	bl	115bc <strcasecmp@plt>
   173ec:	cmp	r0, #0
   173f0:	beq	17404 <sprintf@plt+0x5b48>
   173f4:	ldr	r4, [r4, #8]
   173f8:	cmp	r4, #0
   173fc:	bne	173d8 <sprintf@plt+0x5b1c>
   17400:	b	17420 <sprintf@plt+0x5b64>
   17404:	cmp	r5, #0
   17408:	beq	17420 <sprintf@plt+0x5b64>
   1740c:	ldr	r0, [r5, #12]
   17410:	add	r0, r9, r0, lsl #4
   17414:	ldr	r0, [r0, #12]
   17418:	cmp	r0, #2
   1741c:	bne	1742c <sprintf@plt+0x5b70>
   17420:	mov	r0, r8
   17424:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17428:	b	17b58 <sprintf@plt+0x629c>
   1742c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17430:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17434:	add	fp, sp, #24
   17438:	sub	sp, sp, #144	; 0x90
   1743c:	mov	r5, r0
   17440:	mov	r0, #1
   17444:	mov	r8, r1
   17448:	add	r1, sp, #16
   1744c:	str	r0, [sp, #4]
   17450:	mov	r0, r5
   17454:	bl	116ac <rb_inet_pton_sock@plt>
   17458:	cmp	r0, #0
   1745c:	beq	1769c <sprintf@plt+0x5de0>
   17460:	rev16	r1, r8
   17464:	strh	r1, [sp, #18]
   17468:	ldrh	r0, [sp, #16]
   1746c:	cmp	r0, #10
   17470:	bne	174d8 <sprintf@plt+0x5c1c>
   17474:	movw	r2, #61424	; 0xeff0
   17478:	ldr	r7, [sp, #24]
   1747c:	movt	r2, #2
   17480:	ldr	r3, [r2, #252]	; 0xfc
   17484:	add	r6, r2, #188	; 0xbc
   17488:	cmp	r7, r3
   1748c:	bne	17514 <sprintf@plt+0x5c58>
   17490:	ldr	r3, [r2, #256]	; 0x100
   17494:	ldr	r7, [sp, #28]
   17498:	cmp	r7, r3
   1749c:	bne	17514 <sprintf@plt+0x5c58>
   174a0:	ldr	r3, [r2, #260]	; 0x104
   174a4:	ldr	r7, [sp, #32]
   174a8:	cmp	r7, r3
   174ac:	bne	17514 <sprintf@plt+0x5c58>
   174b0:	ldr	r3, [r2, #264]	; 0x108
   174b4:	ldr	r7, [sp, #36]	; 0x24
   174b8:	cmp	r7, r3
   174bc:	bne	17514 <sprintf@plt+0x5c58>
   174c0:	ldrh	r3, [r2, #246]	; 0xf6
   174c4:	uxth	r1, r1
   174c8:	cmp	r1, r3
   174cc:	bne	17514 <sprintf@plt+0x5c58>
   174d0:	ldr	r1, [r2, #372]	; 0x174
   174d4:	b	1750c <sprintf@plt+0x5c50>
   174d8:	movw	r6, #61424	; 0xeff0
   174dc:	ldr	r3, [sp, #20]
   174e0:	movt	r6, #2
   174e4:	ldr	r2, [r6, #60]	; 0x3c
   174e8:	cmp	r3, r2
   174ec:	bne	17514 <sprintf@plt+0x5c58>
   174f0:	movw	r6, #61424	; 0xeff0
   174f4:	uxth	r1, r1
   174f8:	movt	r6, #2
   174fc:	ldrh	r2, [r6, #58]	; 0x3a
   17500:	cmp	r1, r2
   17504:	bne	17514 <sprintf@plt+0x5c58>
   17508:	ldr	r1, [r6, #184]	; 0xb8
   1750c:	cmp	r1, #0
   17510:	bne	175dc <sprintf@plt+0x5d20>
   17514:	movw	r3, #36067	; 0x8ce3
   17518:	mov	r1, #1
   1751c:	mov	r2, #0
   17520:	movt	r3, #1
   17524:	bl	11580 <rb_socket@plt>
   17528:	cmp	r0, #0
   1752c:	beq	176b8 <sprintf@plt+0x5dfc>
   17530:	mov	r7, r0
   17534:	bl	1155c <rb_get_fd@plt>
   17538:	mov	r1, #4
   1753c:	add	r3, sp, #4
   17540:	mov	r2, #2
   17544:	str	r1, [sp]
   17548:	mov	r1, #1
   1754c:	bl	11874 <setsockopt@plt>
   17550:	cmp	r0, #0
   17554:	bne	176d4 <sprintf@plt+0x5e18>
   17558:	mov	r0, r7
   1755c:	bl	1155c <rb_get_fd@plt>
   17560:	ldrh	r1, [sp, #16]
   17564:	mov	r2, #28
   17568:	cmp	r1, #2
   1756c:	add	r1, sp, #16
   17570:	movweq	r2, #16
   17574:	bl	11748 <bind@plt>
   17578:	cmp	r0, #0
   1757c:	beq	1759c <sprintf@plt+0x5ce0>
   17580:	bl	118b0 <__errno_location@plt>
   17584:	ldr	r0, [r0]
   17588:	bl	114d8 <strerror@plt>
   1758c:	movw	r1, #36155	; 0x8d3b
   17590:	mov	r2, r0
   17594:	movt	r1, #1
   17598:	b	175cc <sprintf@plt+0x5d10>
   1759c:	mov	r0, r7
   175a0:	mov	r1, #128	; 0x80
   175a4:	mov	r2, #0
   175a8:	bl	11850 <rb_listen@plt>
   175ac:	cmp	r0, #0
   175b0:	beq	175e4 <sprintf@plt+0x5d28>
   175b4:	bl	118b0 <__errno_location@plt>
   175b8:	ldr	r0, [r0]
   175bc:	bl	114d8 <strerror@plt>
   175c0:	movw	r1, #36186	; 0x8d5a
   175c4:	mov	r2, r0
   175c8:	movt	r1, #1
   175cc:	mov	r0, #87	; 0x57
   175d0:	bl	123c0 <sprintf@plt+0xb04>
   175d4:	mov	r0, r7
   175d8:	bl	11700 <rb_close@plt>
   175dc:	sub	sp, fp, #24
   175e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   175e4:	ldr	r0, [r6, #184]	; 0xb8
   175e8:	cmp	r0, #0
   175ec:	beq	175f4 <sprintf@plt+0x5d38>
   175f0:	bl	11700 <rb_close@plt>
   175f4:	movw	r4, #61820	; 0xf17c
   175f8:	str	r7, [r6, #184]	; 0xb8
   175fc:	add	r7, sp, #8
   17600:	movt	r4, #2
   17604:	mov	r1, r7
   17608:	ldr	r0, [r4]
   1760c:	bl	116a0 <rb_dictionary_foreach_start@plt>
   17610:	ldr	r0, [r4]
   17614:	mov	r1, r7
   17618:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   1761c:	cmp	r0, #0
   17620:	beq	1764c <sprintf@plt+0x5d90>
   17624:	add	r7, sp, #8
   17628:	bl	17288 <sprintf@plt+0x59cc>
   1762c:	ldr	r0, [r4]
   17630:	mov	r1, r7
   17634:	bl	11658 <rb_dictionary_foreach_next@plt>
   17638:	ldr	r0, [r4]
   1763c:	mov	r1, r7
   17640:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   17644:	cmp	r0, #0
   17648:	bne	17628 <sprintf@plt+0x5d6c>
   1764c:	mov	r0, r6
   17650:	mov	r1, r5
   17654:	mov	r2, #53	; 0x35
   17658:	bl	11640 <rb_strlcpy@plt>
   1765c:	add	r0, r6, #56	; 0x38
   17660:	add	r1, sp, #16
   17664:	mov	r2, #128	; 0x80
   17668:	strh	r8, [r6, #54]	; 0x36
   1766c:	bl	116dc <memcpy@plt>
   17670:	movw	r0, #61800	; 0xf168
   17674:	mov	r1, #1
   17678:	movw	r2, #30460	; 0x76fc
   1767c:	mov	r3, r6
   17680:	movt	r0, #2
   17684:	movt	r2, #1
   17688:	strb	r1, [r0]
   1768c:	ldr	r0, [r6, #184]	; 0xb8
   17690:	mov	r1, #0
   17694:	bl	11808 <rb_accept_tcp@plt>
   17698:	b	175dc <sprintf@plt+0x5d20>
   1769c:	movw	r1, #36035	; 0x8cc3
   176a0:	mov	r0, #67	; 0x43
   176a4:	mov	r2, r5
   176a8:	mov	r3, r8
   176ac:	movt	r1, #1
   176b0:	bl	123c0 <sprintf@plt+0xb04>
   176b4:	b	176f4 <sprintf@plt+0x5e38>
   176b8:	bl	118b0 <__errno_location@plt>
   176bc:	ldr	r0, [r0]
   176c0:	bl	114d8 <strerror@plt>
   176c4:	movw	r1, #36087	; 0x8cf7
   176c8:	mov	r2, r0
   176cc:	movt	r1, #1
   176d0:	b	176ec <sprintf@plt+0x5e30>
   176d4:	bl	118b0 <__errno_location@plt>
   176d8:	ldr	r0, [r0]
   176dc:	bl	114d8 <strerror@plt>
   176e0:	movw	r1, #36117	; 0x8d15
   176e4:	mov	r2, r0
   176e8:	movt	r1, #1
   176ec:	mov	r0, #67	; 0x43
   176f0:	bl	123c0 <sprintf@plt+0xb04>
   176f4:	mov	r0, #3
   176f8:	bl	118a4 <exit@plt>
   176fc:	push	{r4, r5, r6, sl, fp, lr}
   17700:	add	fp, sp, #16
   17704:	sub	sp, sp, #144	; 0x90
   17708:	mov	r4, r0
   1770c:	mov	r0, #128	; 0x80
   17710:	cmp	r1, #0
   17714:	str	r0, [sp, #12]
   17718:	bne	1780c <sprintf@plt+0x5f50>
   1771c:	ldr	r0, [fp, #8]
   17720:	cmp	r0, #0
   17724:	beq	1780c <sprintf@plt+0x5f50>
   17728:	mov	r0, r4
   1772c:	bl	1155c <rb_get_fd@plt>
   17730:	add	r1, sp, #16
   17734:	add	r2, sp, #12
   17738:	bl	11508 <getsockname@plt>
   1773c:	cmp	r0, #0
   17740:	bne	1780c <sprintf@plt+0x5f50>
   17744:	movw	r6, #61820	; 0xf17c
   17748:	add	r5, sp, #4
   1774c:	movt	r6, #2
   17750:	mov	r1, r5
   17754:	ldr	r0, [r6]
   17758:	bl	116a0 <rb_dictionary_foreach_start@plt>
   1775c:	ldr	r0, [r6]
   17760:	mov	r1, r5
   17764:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   17768:	cmp	r0, #0
   1776c:	beq	1780c <sprintf@plt+0x5f50>
   17770:	mov	r3, r0
   17774:	add	r5, sp, #4
   17778:	ldrh	r0, [r3, #248]	; 0xf8
   1777c:	ldrh	r1, [sp, #16]
   17780:	cmp	r0, r1
   17784:	bne	177e8 <sprintf@plt+0x5f2c>
   17788:	cmp	r0, #10
   1778c:	beq	177ac <sprintf@plt+0x5ef0>
   17790:	cmp	r0, #2
   17794:	bne	17834 <sprintf@plt+0x5f78>
   17798:	ldr	r0, [r3, #252]	; 0xfc
   1779c:	ldr	r1, [sp, #20]
   177a0:	cmp	r1, r0
   177a4:	bne	177e8 <sprintf@plt+0x5f2c>
   177a8:	b	1781c <sprintf@plt+0x5f60>
   177ac:	ldr	r0, [r3, #256]	; 0x100
   177b0:	ldr	r1, [sp, #24]
   177b4:	cmp	r1, r0
   177b8:	bne	177e8 <sprintf@plt+0x5f2c>
   177bc:	ldr	r0, [r3, #260]	; 0x104
   177c0:	ldr	r1, [sp, #28]
   177c4:	cmp	r1, r0
   177c8:	bne	177e8 <sprintf@plt+0x5f2c>
   177cc:	ldr	r0, [r3, #264]	; 0x108
   177d0:	ldr	r1, [sp, #32]
   177d4:	cmp	r1, r0
   177d8:	bne	177e8 <sprintf@plt+0x5f2c>
   177dc:	ldr	r0, [r3, #268]	; 0x10c
   177e0:	ldr	r1, [sp, #36]	; 0x24
   177e4:	b	177a0 <sprintf@plt+0x5ee4>
   177e8:	ldr	r0, [r6]
   177ec:	mov	r1, r5
   177f0:	bl	11658 <rb_dictionary_foreach_next@plt>
   177f4:	ldr	r0, [r6]
   177f8:	mov	r1, r5
   177fc:	bl	115b0 <rb_dictionary_foreach_cur@plt>
   17800:	mov	r3, r0
   17804:	cmp	r0, #0
   17808:	bne	17778 <sprintf@plt+0x5ebc>
   1780c:	mov	r0, r4
   17810:	bl	11700 <rb_close@plt>
   17814:	sub	sp, fp, #16
   17818:	pop	{r4, r5, r6, sl, fp, pc}
   1781c:	movw	r2, #30796	; 0x784c
   17820:	mov	r0, r4
   17824:	mov	r1, #1
   17828:	movt	r2, #1
   1782c:	bl	11550 <rb_setselect@plt>
   17830:	b	17814 <sprintf@plt+0x5f58>
   17834:	movw	r1, #36219	; 0x8d7b
   17838:	mov	r0, #67	; 0x43
   1783c:	movt	r1, #1
   17840:	bl	123c0 <sprintf@plt+0xb04>
   17844:	mov	r0, #3
   17848:	bl	118a4 <exit@plt>
   1784c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17850:	add	fp, sp, #28
   17854:	sub	sp, sp, #132	; 0x84
   17858:	movw	r9, #44808	; 0xaf08
   1785c:	mov	sl, r1
   17860:	mov	r4, r0
   17864:	ldr	r1, [r1, #464]	; 0x1d0
   17868:	mov	r2, #128	; 0x80
   1786c:	movt	r9, #2
   17870:	ldr	r0, [r9, #12]
   17874:	add	r0, r1, r0, lsl #4
   17878:	add	r1, sp, #4
   1787c:	ldr	r8, [r0, #8]
   17880:	mov	r0, r4
   17884:	bl	1167c <rb_read@plt>
   17888:	cmn	r0, #1
   1788c:	ble	178e4 <sprintf@plt+0x6028>
   17890:	cmp	r0, #0
   17894:	beq	17970 <sprintf@plt+0x60b4>
   17898:	movw	r0, #61804	; 0xf16c
   1789c:	movt	r0, #2
   178a0:	ldr	r5, [r0]
   178a4:	cmp	r5, #0
   178a8:	beq	17970 <sprintf@plt+0x60b4>
   178ac:	add	r7, sp, #4
   178b0:	ldr	r6, [r5]
   178b4:	mov	r0, r6
   178b8:	bl	116b8 <strlen@plt>
   178bc:	mov	r2, r0
   178c0:	mov	r0, r6
   178c4:	mov	r1, r7
   178c8:	bl	1185c <strncmp@plt>
   178cc:	cmp	r0, #0
   178d0:	beq	17914 <sprintf@plt+0x6058>
   178d4:	ldr	r5, [r5, #8]
   178d8:	cmp	r5, #0
   178dc:	bne	178b0 <sprintf@plt+0x5ff4>
   178e0:	b	17970 <sprintf@plt+0x60b4>
   178e4:	bl	118b0 <__errno_location@plt>
   178e8:	ldr	r0, [r0]
   178ec:	bl	11514 <rb_ignore_errno@plt>
   178f0:	cmp	r0, #0
   178f4:	beq	17970 <sprintf@plt+0x60b4>
   178f8:	movw	r2, #30796	; 0x784c
   178fc:	mov	r0, r4
   17900:	mov	r1, #1
   17904:	mov	r3, sl
   17908:	movt	r2, #1
   1790c:	bl	11550 <rb_setselect@plt>
   17910:	b	17978 <sprintf@plt+0x60bc>
   17914:	ldr	r5, [r8]
   17918:	cmp	r5, #0
   1791c:	beq	17950 <sprintf@plt+0x6094>
   17920:	ldr	r7, [r5]
   17924:	ldr	r5, [r5, #8]
   17928:	ldr	r0, [r7, #4]
   1792c:	bl	11700 <rb_close@plt>
   17930:	cmp	r7, #0
   17934:	beq	17940 <sprintf@plt+0x6084>
   17938:	mov	r0, r7
   1793c:	bl	11664 <free@plt>
   17940:	cmp	r5, #0
   17944:	bne	17920 <sprintf@plt+0x6064>
   17948:	cmp	r8, #0
   1794c:	beq	17958 <sprintf@plt+0x609c>
   17950:	mov	r0, r8
   17954:	bl	11664 <free@plt>
   17958:	ldr	r1, [r9, #12]
   1795c:	movw	r3, #36264	; 0x8da8
   17960:	add	r2, sp, #4
   17964:	mov	r0, sl
   17968:	movt	r3, #1
   1796c:	bl	12988 <sprintf@plt+0x10cc>
   17970:	mov	r0, r4
   17974:	bl	11700 <rb_close@plt>
   17978:	sub	sp, fp, #28
   1797c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17980:	push	{r4, r5, fp, lr}
   17984:	add	fp, sp, #8
   17988:	sub	sp, sp, #16
   1798c:	mov	r4, r0
   17990:	mov	r0, #260	; 0x104
   17994:	mov	r2, #9
   17998:	strh	r0, [sp, #6]
   1799c:	ldr	r0, [r4, #12]
   179a0:	ldrh	r1, [r0, #58]	; 0x3a
   179a4:	strh	r1, [sp, #8]
   179a8:	mov	r1, #0
   179ac:	ldr	r0, [r0, #60]	; 0x3c
   179b0:	strb	r1, [sp, #14]
   179b4:	add	r1, sp, #6
   179b8:	str	r0, [sp, #10]
   179bc:	ldr	r0, [r4, #4]
   179c0:	bl	1161c <rb_write@plt>
   179c4:	cmp	r0, #0
   179c8:	bmi	179ec <sprintf@plt+0x6130>
   179cc:	ldr	r5, [r4, #4]
   179d0:	ldr	r4, [r4, #8]
   179d4:	mov	r0, r4
   179d8:	bl	116b8 <strlen@plt>
   179dc:	add	r2, r0, #1
   179e0:	mov	r0, r5
   179e4:	mov	r1, r4
   179e8:	bl	1161c <rb_write@plt>
   179ec:	sub	sp, fp, #8
   179f0:	pop	{r4, r5, fp, pc}
   179f4:	push	{r4, r5, fp, lr}
   179f8:	add	fp, sp, #8
   179fc:	sub	sp, sp, #32
   17a00:	mov	r1, #1
   17a04:	mov	r4, r0
   17a08:	ldr	r0, [r0]
   17a0c:	strh	r1, [sp, #4]
   17a10:	movw	r1, #261	; 0x105
   17a14:	movt	r1, #1280	; 0x500
   17a18:	str	r1, [sp]
   17a1c:	ldrh	r0, [r0, #248]	; 0xf8
   17a20:	cmp	r0, #10
   17a24:	beq	17a50 <sprintf@plt+0x6194>
   17a28:	cmp	r0, #2
   17a2c:	bne	17ab8 <sprintf@plt+0x61fc>
   17a30:	mov	r0, #1
   17a34:	mvn	r2, #12
   17a38:	mov	r3, #11
   17a3c:	strb	r0, [sp, #6]
   17a40:	ldr	r0, [r4, #12]
   17a44:	ldr	r1, [r0, #60]	; 0x3c
   17a48:	str	r1, [sp, #7]
   17a4c:	b	17a78 <sprintf@plt+0x61bc>
   17a50:	mov	r0, #4
   17a54:	mvn	r2, #24
   17a58:	mov	r3, #23
   17a5c:	strb	r0, [sp, #6]
   17a60:	ldr	r0, [r4, #12]
   17a64:	add	r1, r0, #64	; 0x40
   17a68:	vld1.8	{d16-d17}, [r1]
   17a6c:	mov	r1, sp
   17a70:	orr	r1, r1, #7
   17a74:	vst1.8	{d16-d17}, [r1]
   17a78:	ldrh	r0, [r0, #58]	; 0x3a
   17a7c:	mov	r1, sp
   17a80:	add	r3, r1, r3
   17a84:	strh	r0, [r3]
   17a88:	ldr	r0, [r4, #4]
   17a8c:	bl	1161c <rb_write@plt>
   17a90:	cmp	r0, #1
   17a94:	blt	17ab8 <sprintf@plt+0x61fc>
   17a98:	ldr	r5, [r4, #4]
   17a9c:	ldr	r4, [r4, #8]
   17aa0:	mov	r0, r4
   17aa4:	bl	116b8 <strlen@plt>
   17aa8:	add	r2, r0, #1
   17aac:	mov	r0, r5
   17ab0:	mov	r1, r4
   17ab4:	bl	1161c <rb_write@plt>
   17ab8:	sub	sp, fp, #8
   17abc:	pop	{r4, r5, fp, pc}
   17ac0:	push	{r4, r5, r6, sl, fp, lr}
   17ac4:	add	fp, sp, #16
   17ac8:	sub	sp, sp, #136	; 0x88
   17acc:	ldr	r3, [r0, #12]
   17ad0:	mov	r4, r0
   17ad4:	movw	r2, #36536	; 0x8eb8
   17ad8:	add	r5, sp, #8
   17adc:	mov	r1, #128	; 0x80
   17ae0:	movt	r2, #1
   17ae4:	ldrh	r0, [r3, #54]	; 0x36
   17ae8:	str	r0, [sp]
   17aec:	mov	r0, r5
   17af0:	bl	11844 <snprintf@plt>
   17af4:	ldr	r6, [r4, #4]
   17af8:	mov	r0, r5
   17afc:	bl	116b8 <strlen@plt>
   17b00:	mov	r2, r0
   17b04:	mov	r0, r6
   17b08:	mov	r1, r5
   17b0c:	bl	1161c <rb_write@plt>
   17b10:	cmp	r0, #1
   17b14:	blt	17b50 <sprintf@plt+0x6294>
   17b18:	ldmib	r4, {r5, r6}
   17b1c:	mov	r0, r6
   17b20:	bl	116b8 <strlen@plt>
   17b24:	add	r2, r0, #1
   17b28:	mov	r0, r5
   17b2c:	mov	r1, r6
   17b30:	bl	1161c <rb_write@plt>
   17b34:	cmp	r0, #1
   17b38:	blt	17b50 <sprintf@plt+0x6294>
   17b3c:	ldr	r0, [r4, #4]
   17b40:	movw	r1, #36561	; 0x8ed1
   17b44:	mov	r2, #2
   17b48:	movt	r1, #1
   17b4c:	bl	1161c <rb_write@plt>
   17b50:	sub	sp, fp, #16
   17b54:	pop	{r4, r5, r6, sl, fp, pc}
   17b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b5c:	add	fp, sp, #28
   17b60:	sub	sp, sp, #284	; 0x11c
   17b64:	mov	sl, r0
   17b68:	movw	r0, #44808	; 0xaf08
   17b6c:	movt	r0, #2
   17b70:	ldr	r4, [r0, #12]
   17b74:	ldr	r0, [sl, #464]	; 0x1d0
   17b78:	add	r0, r0, r4, lsl #4
   17b7c:	ldr	r5, [r0, #8]
   17b80:	movw	r0, #44868	; 0xaf44
   17b84:	movt	r0, #2
   17b88:	ldr	r6, [r0]
   17b8c:	bl	116c4 <rb_current_time@plt>
   17b90:	add	r1, r0, r6
   17b94:	ldr	r0, [sl, #464]	; 0x1d0
   17b98:	add	r2, r0, r4, lsl #4
   17b9c:	str	r1, [r2, #4]
   17ba0:	mov	r1, #1
   17ba4:	strb	r1, [r5, #12]
   17ba8:	movw	r1, #61804	; 0xf16c
   17bac:	movt	r1, #2
   17bb0:	ldr	r7, [r1]
   17bb4:	cmp	r7, #0
   17bb8:	beq	17df4 <sprintf@plt+0x6538>
   17bbc:	movw	r1, #44808	; 0xaf08
   17bc0:	ldr	r9, [r7]
   17bc4:	movt	r1, #2
   17bc8:	ldr	r1, [r1, #12]
   17bcc:	add	r0, r0, r1, lsl #4
   17bd0:	mov	r1, #28
   17bd4:	ldr	r4, [r0, #8]
   17bd8:	mov	r0, #1
   17bdc:	bl	115c8 <calloc@plt>
   17be0:	cmp	r0, #0
   17be4:	beq	17df0 <sprintf@plt+0x6534>
   17be8:	mov	r8, r0
   17bec:	add	r0, sl, #248	; 0xf8
   17bf0:	str	r0, [sp, #16]
   17bf4:	movw	r0, #61424	; 0xeff0
   17bf8:	movt	r0, #2
   17bfc:	add	r0, r0, #188	; 0xbc
   17c00:	str	r0, [sp, #12]
   17c04:	mov	r0, #1
   17c08:	movw	r5, #61424	; 0xeff0
   17c0c:	str	r0, [sp, #20]
   17c10:	ldr	r0, [sp, #16]
   17c14:	movt	r5, #2
   17c18:	ldrh	r6, [r0]
   17c1c:	cmp	r6, #10
   17c20:	bne	17c34 <sprintf@plt+0x6378>
   17c24:	ldr	r0, [r9, #16]
   17c28:	ldr	r5, [sp, #12]
   17c2c:	cmp	r0, #1
   17c30:	beq	17cf4 <sprintf@plt+0x6438>
   17c34:	ldr	r0, [r5, #184]	; 0xb8
   17c38:	cmp	r0, #0
   17c3c:	beq	17cf4 <sprintf@plt+0x6438>
   17c40:	ldr	r1, [sp, #16]
   17c44:	add	r0, sp, #152	; 0x98
   17c48:	mov	r2, #128	; 0x80
   17c4c:	bl	116dc <memcpy@plt>
   17c50:	add	r1, r5, #56	; 0x38
   17c54:	add	r0, sp, #24
   17c58:	mov	r2, #128	; 0x80
   17c5c:	bl	116dc <memcpy@plt>
   17c60:	mov	r0, r6
   17c64:	mov	r1, #1
   17c68:	mov	r2, #0
   17c6c:	mov	r3, r9
   17c70:	str	r9, [r8, #8]
   17c74:	str	r5, [r8, #12]
   17c78:	mov	r5, sl
   17c7c:	str	sl, [r8]
   17c80:	bl	11580 <rb_socket@plt>
   17c84:	cmp	r0, #0
   17c88:	str	r0, [r8, #4]
   17c8c:	beq	17d00 <sprintf@plt+0x6444>
   17c90:	mov	sl, r0
   17c94:	bl	1155c <rb_get_fd@plt>
   17c98:	mov	r1, #4
   17c9c:	mov	r2, #1
   17ca0:	add	r3, sp, #20
   17ca4:	str	r1, [sp]
   17ca8:	mov	r1, #6
   17cac:	bl	11874 <setsockopt@plt>
   17cb0:	mov	r1, #0
   17cb4:	cmp	r4, #0
   17cb8:	strh	r1, [sp, #26]
   17cbc:	ldrh	r0, [r9, #20]
   17cc0:	rev16	r0, r0
   17cc4:	strh	r0, [sp, #154]	; 0x9a
   17cc8:	beq	17e0c <sprintf@plt+0x6550>
   17ccc:	str	r1, [r8, #20]
   17cd0:	str	r8, [r8, #16]
   17cd4:	add	r0, r8, #16
   17cd8:	ldr	r1, [r4]
   17cdc:	cmp	r1, #0
   17ce0:	str	r1, [r8, #24]
   17ce4:	beq	17d30 <sprintf@plt+0x6474>
   17ce8:	add	r1, r1, #4
   17cec:	str	r0, [r1]
   17cf0:	b	17d40 <sprintf@plt+0x6484>
   17cf4:	mov	r0, r8
   17cf8:	bl	11664 <free@plt>
   17cfc:	b	17db0 <sprintf@plt+0x64f4>
   17d00:	bl	118b0 <__errno_location@plt>
   17d04:	ldr	r0, [r0]
   17d08:	bl	114d8 <strerror@plt>
   17d0c:	movw	r1, #36759	; 0x8f97
   17d10:	mov	r3, r0
   17d14:	mov	r0, #87	; 0x57
   17d18:	mov	r2, r9
   17d1c:	movt	r1, #1
   17d20:	bl	123c0 <sprintf@plt+0xb04>
   17d24:	mov	r0, r8
   17d28:	bl	11664 <free@plt>
   17d2c:	b	17dac <sprintf@plt+0x64f0>
   17d30:	mov	r1, r4
   17d34:	ldr	r2, [r1, #4]!
   17d38:	cmp	r2, #0
   17d3c:	streq	r0, [r1]
   17d40:	str	r0, [r4]
   17d44:	ldr	r0, [r4, #8]
   17d48:	add	r0, r0, #1
   17d4c:	str	r0, [r4, #8]
   17d50:	movw	r0, #44868	; 0xaf44
   17d54:	movt	r0, #2
   17d58:	ldrb	r1, [r9, #22]
   17d5c:	ldr	r0, [r0]
   17d60:	cmp	r1, #0
   17d64:	beq	17d8c <sprintf@plt+0x64d0>
   17d68:	movw	r3, #32300	; 0x7e2c
   17d6c:	str	r0, [sp, #4]
   17d70:	mov	r0, sl
   17d74:	add	r1, sp, #152	; 0x98
   17d78:	add	r2, sp, #24
   17d7c:	str	r8, [sp]
   17d80:	movt	r3, #1
   17d84:	bl	11520 <rb_connect_tcp_ssl@plt>
   17d88:	b	17dac <sprintf@plt+0x64f0>
   17d8c:	movw	r3, #32300	; 0x7e2c
   17d90:	str	r0, [sp, #4]
   17d94:	mov	r0, sl
   17d98:	add	r1, sp, #152	; 0x98
   17d9c:	add	r2, sp, #24
   17da0:	str	r8, [sp]
   17da4:	movt	r3, #1
   17da8:	bl	1152c <rb_connect_tcp@plt>
   17dac:	mov	sl, r5
   17db0:	ldr	r7, [r7, #8]
   17db4:	cmp	r7, #0
   17db8:	beq	17df4 <sprintf@plt+0x6538>
   17dbc:	movw	r0, #44808	; 0xaf08
   17dc0:	ldr	r1, [sl, #464]	; 0x1d0
   17dc4:	ldr	r9, [r7]
   17dc8:	movt	r0, #2
   17dcc:	ldr	r0, [r0, #12]
   17dd0:	add	r0, r1, r0, lsl #4
   17dd4:	mov	r1, #28
   17dd8:	ldr	r4, [r0, #8]
   17ddc:	mov	r0, #1
   17de0:	bl	115c8 <calloc@plt>
   17de4:	mov	r8, r0
   17de8:	cmp	r0, #0
   17dec:	bne	17c04 <sprintf@plt+0x6348>
   17df0:	bl	11784 <rb_outofmemory@plt>
   17df4:	ldr	r0, [sl]
   17df8:	movw	r1, #36726	; 0x8f76
   17dfc:	movt	r1, #1
   17e00:	bl	12354 <sprintf@plt+0xa98>
   17e04:	sub	sp, fp, #28
   17e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e0c:	movw	r0, #36564	; 0x8ed4
   17e10:	movw	r1, #33962	; 0x84aa
   17e14:	movw	r3, #34057	; 0x8509
   17e18:	mov	r2, #145	; 0x91
   17e1c:	movt	r0, #1
   17e20:	movt	r1, #1
   17e24:	movt	r3, #1
   17e28:	bl	11628 <__assert_fail@plt>
   17e2c:	push	{r4, r5, fp, lr}
   17e30:	add	fp, sp, #8
   17e34:	mov	r4, r2
   17e38:	ldr	r2, [r2]
   17e3c:	movw	r0, #44808	; 0xaf08
   17e40:	cmp	r1, #0
   17e44:	movt	r0, #2
   17e48:	ldr	r0, [r0, #12]
   17e4c:	ldr	r3, [r2, #464]	; 0x1d0
   17e50:	add	r0, r3, r0, lsl #4
   17e54:	ldr	r5, [r0, #8]
   17e58:	bne	17ec4 <sprintf@plt+0x6608>
   17e5c:	movw	r0, #61800	; 0xf168
   17e60:	movt	r0, #2
   17e64:	ldrb	r0, [r0]
   17e68:	cmp	r0, #0
   17e6c:	beq	17ec4 <sprintf@plt+0x6608>
   17e70:	ldrh	r1, [r2, #248]	; 0xf8
   17e74:	ldr	r0, [r4, #8]
   17e78:	cmp	r1, #10
   17e7c:	beq	17e98 <sprintf@plt+0x65dc>
   17e80:	cmp	r1, #2
   17e84:	bne	17ec4 <sprintf@plt+0x6608>
   17e88:	movw	r1, #61424	; 0xeff0
   17e8c:	movt	r1, #2
   17e90:	ldr	r1, [r1, #184]	; 0xb8
   17e94:	b	17eb0 <sprintf@plt+0x65f4>
   17e98:	ldrb	r1, [r0, #23]
   17e9c:	cmp	r1, #0
   17ea0:	beq	17ec4 <sprintf@plt+0x6608>
   17ea4:	movw	r1, #61424	; 0xeff0
   17ea8:	movt	r1, #2
   17eac:	ldr	r1, [r1, #372]	; 0x174
   17eb0:	cmp	r1, #0
   17eb4:	beq	17ec4 <sprintf@plt+0x6608>
   17eb8:	ldr	r1, [r0, #24]
   17ebc:	mov	r0, r4
   17ec0:	blx	r1
   17ec4:	ldr	r0, [r4, #4]
   17ec8:	bl	11700 <rb_close@plt>
   17ecc:	cmp	r5, #0
   17ed0:	beq	17f28 <sprintf@plt+0x666c>
   17ed4:	ldr	r0, [r4, #24]
   17ed8:	ldr	r1, [r4, #20]
   17edc:	cmp	r0, #0
   17ee0:	beq	17ef0 <sprintf@plt+0x6634>
   17ee4:	str	r1, [r0, #4]
   17ee8:	ldr	r1, [r4, #20]
   17eec:	b	17ef4 <sprintf@plt+0x6638>
   17ef0:	str	r1, [r5, #4]
   17ef4:	cmp	r1, #0
   17ef8:	mov	r2, r5
   17efc:	addne	r2, r1, #8
   17f00:	str	r0, [r2]
   17f04:	mov	r0, #0
   17f08:	str	r0, [r4, #20]
   17f0c:	str	r0, [r4, #24]
   17f10:	ldr	r0, [r5, #8]
   17f14:	sub	r0, r0, #1
   17f18:	str	r0, [r5, #8]
   17f1c:	mov	r0, r4
   17f20:	pop	{r4, r5, fp, lr}
   17f24:	b	11664 <free@plt>
   17f28:	movw	r0, #36564	; 0x8ed4
   17f2c:	movw	r1, #33962	; 0x84aa
   17f30:	movw	r3, #33990	; 0x84c6
   17f34:	mov	r2, #236	; 0xec
   17f38:	movt	r0, #1
   17f3c:	movt	r1, #1
   17f40:	movt	r3, #1
   17f44:	bl	11628 <__assert_fail@plt>
   17f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17f4c:	mov	r7, r0
   17f50:	ldr	r6, [pc, #72]	; 17fa0 <sprintf@plt+0x66e4>
   17f54:	ldr	r5, [pc, #72]	; 17fa4 <sprintf@plt+0x66e8>
   17f58:	add	r6, pc, r6
   17f5c:	add	r5, pc, r5
   17f60:	sub	r6, r6, r5
   17f64:	mov	r8, r1
   17f68:	mov	r9, r2
   17f6c:	bl	114ac <sigemptyset@plt-0x20>
   17f70:	asrs	r6, r6, #2
   17f74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17f78:	mov	r4, #0
   17f7c:	add	r4, r4, #1
   17f80:	ldr	r3, [r5], #4
   17f84:	mov	r2, r9
   17f88:	mov	r1, r8
   17f8c:	mov	r0, r7
   17f90:	blx	r3
   17f94:	cmp	r6, r4
   17f98:	bne	17f7c <sprintf@plt+0x66c0>
   17f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17fa0:	andeq	r1, r1, r4, lsl #31
   17fa4:	andeq	r1, r1, ip, ror pc
   17fa8:	bx	lr

Disassembly of section .fini:

00017fac <.fini>:
   17fac:	push	{r3, lr}
   17fb0:	pop	{r3, pc}
