
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000109e4 <.init>:
   109e4:	push	{r3, lr}
   109e8:	bl	10f9c <_start@@Base+0x3c>
   109ec:	pop	{r3, pc}

Disassembly of section .plt:

000109f0 <calloc@plt-0x14>:
   109f0:	push	{lr}		; (str lr, [sp, #-4]!)
   109f4:	ldr	lr, [pc, #4]	; 10a00 <calloc@plt-0x4>
   109f8:	add	lr, pc, lr
   109fc:	ldr	pc, [lr, #8]!
   10a00:	andeq	r1, r1, r0, lsl #12

00010a04 <calloc@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1536]!	; 0x600

00010a10 <printf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a1c <free@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a28 <memcpy@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a40 <malloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a58 <__gmon_start__@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

00010a88 <main@@Base>:
   10a88:	mov	r1, #3
   10a8c:	mov	r0, #4
   10a90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10a94:	strd	r6, [sp, #8]
   10a98:	strd	r8, [sp, #16]
   10a9c:	strd	sl, [sp, #24]
   10aa0:	str	lr, [sp, #32]
   10aa4:	sub	sp, sp, #28
   10aa8:	bl	111b0 <armazem_novo@@Base>
   10aac:	mov	r7, r0
   10ab0:	movw	r0, #6564	; 0x19a4
   10ab4:	movt	r0, #1
   10ab8:	bl	10a34 <puts@plt>
   10abc:	vldr	s0, [pc, #1008]	; 10eb4 <main@@Base+0x42c>
   10ac0:	movw	r0, #6584	; 0x19b8
   10ac4:	movt	r0, #1
   10ac8:	bl	11420 <contentor_novo@@Base>
   10acc:	mov	fp, r0
   10ad0:	vldr	s0, [pc, #992]	; 10eb8 <main@@Base+0x430>
   10ad4:	movw	r0, #6592	; 0x19c0
   10ad8:	movt	r0, #1
   10adc:	bl	11420 <contentor_novo@@Base>
   10ae0:	mov	sl, r0
   10ae4:	vldr	s0, [pc, #976]	; 10ebc <main@@Base+0x434>
   10ae8:	movw	r0, #6596	; 0x19c4
   10aec:	movt	r0, #1
   10af0:	bl	11420 <contentor_novo@@Base>
   10af4:	mov	r4, r0
   10af8:	vldr	s0, [pc, #960]	; 10ec0 <main@@Base+0x438>
   10afc:	movw	r0, #6604	; 0x19cc
   10b00:	movt	r0, #1
   10b04:	bl	11420 <contentor_novo@@Base>
   10b08:	mov	r9, r0
   10b0c:	vldr	s0, [pc, #944]	; 10ec4 <main@@Base+0x43c>
   10b10:	movw	r0, #6612	; 0x19d4
   10b14:	movt	r0, #1
   10b18:	bl	11420 <contentor_novo@@Base>
   10b1c:	mov	r8, r0
   10b20:	vldr	s0, [pc, #928]	; 10ec8 <main@@Base+0x440>
   10b24:	movw	r0, #6620	; 0x19dc
   10b28:	movt	r0, #1
   10b2c:	bl	11420 <contentor_novo@@Base>
   10b30:	vldr	s0, [pc, #916]	; 10ecc <main@@Base+0x444>
   10b34:	str	r0, [sp]
   10b38:	movw	r0, #6628	; 0x19e4
   10b3c:	movt	r0, #1
   10b40:	bl	11420 <contentor_novo@@Base>
   10b44:	mov	r6, r0
   10b48:	vldr	s0, [pc, #896]	; 10ed0 <main@@Base+0x448>
   10b4c:	movw	r0, #6640	; 0x19f0
   10b50:	movt	r0, #1
   10b54:	bl	11420 <contentor_novo@@Base>
   10b58:	vldr	s0, [pc, #868]	; 10ec4 <main@@Base+0x43c>
   10b5c:	str	r0, [sp, #4]
   10b60:	movw	r0, #6648	; 0x19f8
   10b64:	movt	r0, #1
   10b68:	bl	11420 <contentor_novo@@Base>
   10b6c:	vldr	s0, [pc, #864]	; 10ed4 <main@@Base+0x44c>
   10b70:	str	r0, [sp, #8]
   10b74:	movw	r0, #6660	; 0x1a04
   10b78:	movt	r0, #1
   10b7c:	bl	11420 <contentor_novo@@Base>
   10b80:	vldr	s0, [pc, #848]	; 10ed8 <main@@Base+0x450>
   10b84:	str	r0, [sp, #12]
   10b88:	movw	r0, #6668	; 0x1a0c
   10b8c:	movt	r0, #1
   10b90:	bl	11420 <contentor_novo@@Base>
   10b94:	vldr	s0, [pc, #832]	; 10edc <main@@Base+0x454>
   10b98:	str	r0, [sp, #16]
   10b9c:	movw	r0, #6680	; 0x1a18
   10ba0:	movt	r0, #1
   10ba4:	bl	11420 <contentor_novo@@Base>
   10ba8:	mov	r5, r0
   10bac:	vldr	s0, [pc, #812]	; 10ee0 <main@@Base+0x458>
   10bb0:	movw	r0, #6688	; 0x1a20
   10bb4:	movt	r0, #1
   10bb8:	bl	11420 <contentor_novo@@Base>
   10bbc:	str	r0, [sp, #20]
   10bc0:	movw	r0, #6696	; 0x1a28
   10bc4:	movt	r0, #1
   10bc8:	bl	10a34 <puts@plt>
   10bcc:	mov	r0, r7
   10bd0:	bl	11050 <imprimeArmazem@@Base>
   10bd4:	movw	r0, #6724	; 0x1a44
   10bd8:	movt	r0, #1
   10bdc:	bl	10a34 <puts@plt>
   10be0:	mov	r1, fp
   10be4:	mov	r0, r7
   10be8:	bl	1128c <armazenar_contentor@@Base>
   10bec:	cmp	r0, #0
   10bf0:	bne	10e18 <main@@Base+0x390>
   10bf4:	mov	r1, sl
   10bf8:	mov	r0, r7
   10bfc:	bl	1128c <armazenar_contentor@@Base>
   10c00:	cmp	r0, #0
   10c04:	bne	10f4c <main@@Base+0x4c4>
   10c08:	mov	r1, r4
   10c0c:	mov	r0, r7
   10c10:	bl	1128c <armazenar_contentor@@Base>
   10c14:	cmp	r0, #0
   10c18:	bne	10f38 <main@@Base+0x4b0>
   10c1c:	mov	r1, r9
   10c20:	mov	r0, r7
   10c24:	bl	1128c <armazenar_contentor@@Base>
   10c28:	cmp	r0, #0
   10c2c:	bne	10f24 <main@@Base+0x49c>
   10c30:	movw	r0, #6800	; 0x1a90
   10c34:	movt	r0, #1
   10c38:	bl	10a34 <puts@plt>
   10c3c:	mov	r0, r7
   10c40:	bl	11050 <imprimeArmazem@@Base>
   10c44:	movw	r0, #6828	; 0x1aac
   10c48:	movt	r0, #1
   10c4c:	bl	10a34 <puts@plt>
   10c50:	mov	r1, r8
   10c54:	mov	r0, r7
   10c58:	bl	1128c <armazenar_contentor@@Base>
   10c5c:	cmp	r0, #0
   10c60:	bne	10f10 <main@@Base+0x488>
   10c64:	mov	r0, r7
   10c68:	ldr	r1, [sp]
   10c6c:	bl	1128c <armazenar_contentor@@Base>
   10c70:	cmp	r0, #0
   10c74:	bne	10ef8 <main@@Base+0x470>
   10c78:	mov	r1, r6
   10c7c:	mov	r0, r7
   10c80:	bl	1128c <armazenar_contentor@@Base>
   10c84:	cmp	r0, #0
   10c88:	bne	10ee4 <main@@Base+0x45c>
   10c8c:	mov	r0, r7
   10c90:	ldr	r1, [sp, #4]
   10c94:	bl	1128c <armazenar_contentor@@Base>
   10c98:	cmp	r0, #0
   10c9c:	bne	10e9c <main@@Base+0x414>
   10ca0:	mov	r0, r7
   10ca4:	ldr	r1, [sp, #8]
   10ca8:	bl	1128c <armazenar_contentor@@Base>
   10cac:	cmp	r0, #0
   10cb0:	bne	10e84 <main@@Base+0x3fc>
   10cb4:	mov	r0, r7
   10cb8:	ldr	r1, [sp, #12]
   10cbc:	bl	1128c <armazenar_contentor@@Base>
   10cc0:	cmp	r0, #0
   10cc4:	bne	10e6c <main@@Base+0x3e4>
   10cc8:	mov	r0, r7
   10ccc:	ldr	r1, [sp, #16]
   10cd0:	bl	1128c <armazenar_contentor@@Base>
   10cd4:	cmp	r0, #0
   10cd8:	bne	10e54 <main@@Base+0x3cc>
   10cdc:	mov	r1, r5
   10ce0:	mov	r0, r7
   10ce4:	bl	1128c <armazenar_contentor@@Base>
   10ce8:	cmp	r0, #0
   10cec:	bne	10e40 <main@@Base+0x3b8>
   10cf0:	movw	r0, #6864	; 0x1ad0
   10cf4:	movt	r0, #1
   10cf8:	bl	10a34 <puts@plt>
   10cfc:	mov	r0, r7
   10d00:	bl	11050 <imprimeArmazem@@Base>
   10d04:	mov	r0, r7
   10d08:	bl	11228 <armazem_cheio@@Base>
   10d0c:	cmp	r0, #0
   10d10:	movwne	r0, #6892	; 0x1aec
   10d14:	movweq	r0, #6908	; 0x1afc
   10d18:	movtne	r0, #1
   10d1c:	movteq	r0, #1
   10d20:	bl	10a34 <puts@plt>
   10d24:	mov	r0, r7
   10d28:	ldr	r1, [sp, #20]
   10d2c:	bl	1128c <armazenar_contentor@@Base>
   10d30:	cmp	r0, #0
   10d34:	bne	10e2c <main@@Base+0x3a4>
   10d38:	movw	r0, #7024	; 0x1b70
   10d3c:	movt	r0, #1
   10d40:	movw	r6, #7060	; 0x1b94
   10d44:	movt	r6, #1
   10d48:	mov	r4, #8
   10d4c:	bl	10a34 <puts@plt>
   10d50:	mov	r0, r7
   10d54:	bl	11378 <expedir_contentor@@Base>
   10d58:	mov	r5, r0
   10d5c:	mov	r0, r6
   10d60:	bl	10a34 <puts@plt>
   10d64:	mov	r0, r5
   10d68:	bl	114ac <contentor_imprime@@Base>
   10d6c:	subs	r4, r4, #1
   10d70:	bne	10d50 <main@@Base+0x2c8>
   10d74:	movw	r0, #7092	; 0x1bb4
   10d78:	movt	r0, #1
   10d7c:	bl	10a34 <puts@plt>
   10d80:	mov	r0, r7
   10d84:	movw	r6, #7060	; 0x1b94
   10d88:	movt	r6, #1
   10d8c:	mov	r4, #4
   10d90:	bl	11050 <imprimeArmazem@@Base>
   10d94:	movw	r0, #7120	; 0x1bd0
   10d98:	movt	r0, #1
   10d9c:	bl	10a34 <puts@plt>
   10da0:	mov	r0, r7
   10da4:	bl	11378 <expedir_contentor@@Base>
   10da8:	mov	r5, r0
   10dac:	mov	r0, r6
   10db0:	bl	10a34 <puts@plt>
   10db4:	mov	r0, r5
   10db8:	bl	114ac <contentor_imprime@@Base>
   10dbc:	subs	r4, r4, #1
   10dc0:	bne	10da0 <main@@Base+0x318>
   10dc4:	movw	r0, #7156	; 0x1bf4
   10dc8:	movt	r0, #1
   10dcc:	bl	10a34 <puts@plt>
   10dd0:	mov	r0, r7
   10dd4:	bl	11050 <imprimeArmazem@@Base>
   10dd8:	mov	r0, r7
   10ddc:	bl	111f4 <armazem_vazio@@Base>
   10de0:	cmp	r0, #0
   10de4:	movwne	r0, #7184	; 0x1c10
   10de8:	movweq	r0, #7200	; 0x1c20
   10dec:	movtne	r0, #1
   10df0:	movteq	r0, #1
   10df4:	bl	10a34 <puts@plt>
   10df8:	mov	r0, #0
   10dfc:	add	sp, sp, #28
   10e00:	ldrd	r4, [sp]
   10e04:	ldrd	r6, [sp, #8]
   10e08:	ldrd	r8, [sp, #16]
   10e0c:	ldrd	sl, [sp, #24]
   10e10:	add	sp, sp, #32
   10e14:	pop	{pc}		; (ldr pc, [sp], #4)
   10e18:	movw	r0, #6760	; 0x1a68
   10e1c:	movt	r0, #1
   10e20:	ldr	r1, [fp]
   10e24:	bl	10a10 <printf@plt>
   10e28:	b	10bf4 <main@@Base+0x16c>
   10e2c:	movw	r0, #6948	; 0x1b24
   10e30:	movt	r0, #1
   10e34:	ldr	r1, [r4]
   10e38:	bl	10a10 <printf@plt>
   10e3c:	b	10d38 <main@@Base+0x2b0>
   10e40:	movw	r0, #6760	; 0x1a68
   10e44:	movt	r0, #1
   10e48:	ldr	r1, [r5]
   10e4c:	bl	10a10 <printf@plt>
   10e50:	b	10cf0 <main@@Base+0x268>
   10e54:	ldr	r3, [sp, #16]
   10e58:	movw	r0, #6760	; 0x1a68
   10e5c:	movt	r0, #1
   10e60:	ldr	r1, [r3]
   10e64:	bl	10a10 <printf@plt>
   10e68:	b	10cdc <main@@Base+0x254>
   10e6c:	ldr	r3, [sp, #12]
   10e70:	movw	r0, #6760	; 0x1a68
   10e74:	movt	r0, #1
   10e78:	ldr	r1, [r3]
   10e7c:	bl	10a10 <printf@plt>
   10e80:	b	10cc8 <main@@Base+0x240>
   10e84:	ldr	r3, [sp, #8]
   10e88:	movw	r0, #6760	; 0x1a68
   10e8c:	movt	r0, #1
   10e90:	ldr	r1, [r3]
   10e94:	bl	10a10 <printf@plt>
   10e98:	b	10cb4 <main@@Base+0x22c>
   10e9c:	ldr	r3, [sp, #4]
   10ea0:	movw	r0, #6760	; 0x1a68
   10ea4:	movt	r0, #1
   10ea8:	ldr	r1, [r3]
   10eac:	bl	10a10 <printf@plt>
   10eb0:	b	10ca0 <main@@Base+0x218>
   10eb4:	cmnmi	r6, #0
   10eb8:	cmnmi	sl, #0
   10ebc:	strmi	r8, [r4], #-0
   10ec0:	ldrtmi	r8, [r1], #-0
   10ec4:			; <UNDEFINED> instruction: 0x43be0000
   10ec8:	bicmi	r0, r3, #0
   10ecc:	sbcmi	r0, r8, #0
   10ed0:	adcmi	r0, r0, #0
   10ed4:	tstmi	r6, #0
   10ed8:	orrmi	r0, r7, #0
   10edc:	bicsmi	r0, r7, #0
   10ee0:	movtmi	r0, #32768	; 0x8000
   10ee4:	movw	r0, #6760	; 0x1a68
   10ee8:	movt	r0, #1
   10eec:	ldr	r1, [r6]
   10ef0:	bl	10a10 <printf@plt>
   10ef4:	b	10c8c <main@@Base+0x204>
   10ef8:	ldr	r3, [sp]
   10efc:	movw	r0, #6760	; 0x1a68
   10f00:	movt	r0, #1
   10f04:	ldr	r1, [r3]
   10f08:	bl	10a10 <printf@plt>
   10f0c:	b	10c78 <main@@Base+0x1f0>
   10f10:	movw	r0, #6760	; 0x1a68
   10f14:	movt	r0, #1
   10f18:	ldr	r1, [r8]
   10f1c:	bl	10a10 <printf@plt>
   10f20:	b	10c64 <main@@Base+0x1dc>
   10f24:	movw	r0, #6760	; 0x1a68
   10f28:	movt	r0, #1
   10f2c:	ldr	r1, [r9]
   10f30:	bl	10a10 <printf@plt>
   10f34:	b	10c30 <main@@Base+0x1a8>
   10f38:	movw	r0, #6760	; 0x1a68
   10f3c:	movt	r0, #1
   10f40:	ldr	r1, [r4]
   10f44:	bl	10a10 <printf@plt>
   10f48:	b	10c1c <main@@Base+0x194>
   10f4c:	movw	r0, #6760	; 0x1a68
   10f50:	movt	r0, #1
   10f54:	ldr	r1, [sl]
   10f58:	bl	10a10 <printf@plt>
   10f5c:	b	10c08 <main@@Base+0x180>

00010f60 <_start@@Base>:
   10f60:	mov	fp, #0
   10f64:	mov	lr, #0
   10f68:	pop	{r1}		; (ldr r1, [sp], #4)
   10f6c:	mov	r2, sp
   10f70:	push	{r2}		; (str r2, [sp, #-4]!)
   10f74:	push	{r0}		; (str r0, [sp, #-4]!)
   10f78:	ldr	ip, [pc, #16]	; 10f90 <_start@@Base+0x30>
   10f7c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f80:	ldr	r0, [pc, #12]	; 10f94 <_start@@Base+0x34>
   10f84:	ldr	r3, [pc, #12]	; 10f98 <_start@@Base+0x38>
   10f88:	bl	10a4c <__libc_start_main@plt>
   10f8c:	bl	10a7c <abort@plt>
   10f90:	andeq	r1, r1, r4, ror r9
   10f94:	andeq	r0, r1, r8, lsl #21
   10f98:	andeq	r1, r1, r4, lsl r9
   10f9c:	ldr	r3, [pc, #20]	; 10fb8 <_start@@Base+0x58>
   10fa0:	ldr	r2, [pc, #20]	; 10fbc <_start@@Base+0x5c>
   10fa4:	add	r3, pc, r3
   10fa8:	ldr	r2, [r3, r2]
   10fac:	cmp	r2, #0
   10fb0:	bxeq	lr
   10fb4:	b	10a58 <__gmon_start__@plt>
   10fb8:	andeq	r1, r1, r4, asr r0
   10fbc:	andeq	r0, r0, r8, lsr r0
   10fc0:	ldr	r0, [pc, #24]	; 10fe0 <_start@@Base+0x80>
   10fc4:	ldr	r3, [pc, #24]	; 10fe4 <_start@@Base+0x84>
   10fc8:	cmp	r3, r0
   10fcc:	bxeq	lr
   10fd0:	ldr	r3, [pc, #16]	; 10fe8 <_start@@Base+0x88>
   10fd4:	cmp	r3, #0
   10fd8:	bxeq	lr
   10fdc:	bx	r3
   10fe0:	andeq	r2, r2, r4, asr #32
   10fe4:	andeq	r2, r2, r4, asr #32
   10fe8:	andeq	r0, r0, r0
   10fec:	ldr	r0, [pc, #36]	; 11018 <_start@@Base+0xb8>
   10ff0:	ldr	r1, [pc, #36]	; 1101c <_start@@Base+0xbc>
   10ff4:	sub	r1, r1, r0
   10ff8:	asr	r1, r1, #2
   10ffc:	add	r1, r1, r1, lsr #31
   11000:	asrs	r1, r1, #1
   11004:	bxeq	lr
   11008:	ldr	r3, [pc, #16]	; 11020 <_start@@Base+0xc0>
   1100c:	cmp	r3, #0
   11010:	bxeq	lr
   11014:	bx	r3
   11018:	andeq	r2, r2, r4, asr #32
   1101c:	andeq	r2, r2, r4, asr #32
   11020:	andeq	r0, r0, r0
   11024:	push	{r4, lr}
   11028:	ldr	r4, [pc, #24]	; 11048 <_start@@Base+0xe8>
   1102c:	ldrb	r3, [r4]
   11030:	cmp	r3, #0
   11034:	popne	{r4, pc}
   11038:	bl	10fc0 <_start@@Base+0x60>
   1103c:	mov	r3, #1
   11040:	strb	r3, [r4]
   11044:	pop	{r4, pc}
   11048:	andeq	r2, r2, r4, asr #32
   1104c:	b	10fec <_start@@Base+0x8c>

00011050 <imprimeArmazem@@Base>:
   11050:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11054:	strd	r6, [sp, #8]
   11058:	strd	r8, [sp, #16]
   1105c:	subs	r8, r0, #0
   11060:	strd	sl, [sp, #24]
   11064:	str	lr, [sp, #32]
   11068:	sub	sp, sp, #12
   1106c:	beq	11194 <imprimeArmazem@@Base+0x144>
   11070:	ldr	r4, [r8, #8]
   11074:	cmp	r4, #0
   11078:	beq	11194 <imprimeArmazem@@Base+0x144>
   1107c:	ldr	r9, [r4, #4]
   11080:	mov	r1, #4
   11084:	mov	r0, r9
   11088:	bl	10a04 <calloc@plt>
   1108c:	ldr	r3, [r4]
   11090:	mov	sl, r0
   11094:	cmp	r3, #0
   11098:	beq	110b4 <imprimeArmazem@@Base+0x64>
   1109c:	sub	r2, r0, #4
   110a0:	ldm	r3, {r1, r3}
   110a4:	ldr	r1, [r1, #4]
   110a8:	cmp	r3, #0
   110ac:	str	r1, [r2, #4]!
   110b0:	bne	110a0 <imprimeArmazem@@Base+0x50>
   110b4:	mov	r0, #10
   110b8:	bl	10a70 <putchar@plt>
   110bc:	ldr	r4, [r8, #4]
   110c0:	cmp	r4, #0
   110c4:	ble	11128 <imprimeArmazem@@Base+0xd8>
   110c8:	add	r6, sl, r9, lsl #2
   110cc:	movw	r3, #6532	; 0x1984
   110d0:	movt	r3, #1
   110d4:	movw	r5, #6544	; 0x1990
   110d8:	movt	r5, #1
   110dc:	movw	r7, #6536	; 0x1988
   110e0:	movt	r7, #1
   110e4:	str	r3, [sp, #4]
   110e8:	ldr	r0, [sp, #4]
   110ec:	bl	10a10 <printf@plt>
   110f0:	cmp	r9, #0
   110f4:	ble	11118 <imprimeArmazem@@Base+0xc8>
   110f8:	mov	fp, sl
   110fc:	ldr	r2, [fp], #4
   11100:	mov	r0, r5
   11104:	cmp	r2, r4
   11108:	movge	r0, r7
   1110c:	bl	10a10 <printf@plt>
   11110:	cmp	r6, fp
   11114:	bne	110fc <imprimeArmazem@@Base+0xac>
   11118:	mov	r0, #10
   1111c:	bl	10a70 <putchar@plt>
   11120:	subs	r4, r4, #1
   11124:	bne	110e8 <imprimeArmazem@@Base+0x98>
   11128:	movw	r0, #6552	; 0x1998
   1112c:	movt	r0, #1
   11130:	bl	10a10 <printf@plt>
   11134:	ldr	r3, [r8]
   11138:	cmp	r3, #0
   1113c:	ble	11164 <imprimeArmazem@@Base+0x114>
   11140:	movw	r5, #6556	; 0x199c
   11144:	movt	r5, #1
   11148:	mov	r4, #0
   1114c:	mov	r0, r5
   11150:	add	r4, r4, #1
   11154:	bl	10a10 <printf@plt>
   11158:	ldr	r3, [r8]
   1115c:	cmp	r3, r4
   11160:	bgt	1114c <imprimeArmazem@@Base+0xfc>
   11164:	movw	r0, #6796	; 0x1a8c
   11168:	movt	r0, #1
   1116c:	bl	10a34 <puts@plt>
   11170:	mov	r0, sl
   11174:	add	sp, sp, #12
   11178:	ldrd	r4, [sp]
   1117c:	ldrd	r6, [sp, #8]
   11180:	ldrd	r8, [sp, #16]
   11184:	ldrd	sl, [sp, #24]
   11188:	ldr	lr, [sp, #32]
   1118c:	add	sp, sp, #36	; 0x24
   11190:	b	10a1c <free@plt>
   11194:	add	sp, sp, #12
   11198:	ldrd	r4, [sp]
   1119c:	ldrd	r6, [sp, #8]
   111a0:	ldrd	r8, [sp, #16]
   111a4:	ldrd	sl, [sp, #24]
   111a8:	add	sp, sp, #32
   111ac:	pop	{pc}		; (ldr pc, [sp], #4)

000111b0 <armazem_novo@@Base>:
   111b0:	strd	r4, [sp, #-16]!
   111b4:	mov	r5, r1
   111b8:	str	r6, [sp, #8]
   111bc:	mov	r6, r0
   111c0:	mov	r0, #12
   111c4:	str	lr, [sp, #12]
   111c8:	bl	10a40 <malloc@plt>
   111cc:	mov	r4, r0
   111d0:	str	r6, [r0]
   111d4:	str	r5, [r0, #4]
   111d8:	bl	11528 <fila_nova@@Base>
   111dc:	str	r0, [r4, #8]
   111e0:	mov	r0, r4
   111e4:	ldrd	r4, [sp]
   111e8:	ldr	r6, [sp, #8]
   111ec:	add	sp, sp, #12
   111f0:	pop	{pc}		; (ldr pc, [sp], #4)

000111f4 <armazem_vazio@@Base>:
   111f4:	cmp	r0, #0
   111f8:	beq	11220 <armazem_vazio@@Base+0x2c>
   111fc:	str	r4, [sp, #-8]!
   11200:	ldr	r0, [r0, #8]
   11204:	str	lr, [sp, #4]
   11208:	bl	115b8 <fila_tamanho@@Base>
   1120c:	clz	r0, r0
   11210:	ldr	r4, [sp]
   11214:	add	sp, sp, #4
   11218:	lsr	r0, r0, #5
   1121c:	pop	{pc}		; (ldr pc, [sp], #4)
   11220:	mov	r0, #1
   11224:	bx	lr

00011228 <armazem_cheio@@Base>:
   11228:	str	r4, [sp, #-8]!
   1122c:	subs	r4, r0, #0
   11230:	str	lr, [sp, #4]
   11234:	beq	1125c <armazem_cheio@@Base+0x34>
   11238:	ldr	r0, [r4, #8]
   1123c:	bl	115b8 <fila_tamanho@@Base>
   11240:	cmp	r0, #0
   11244:	beq	1125c <armazem_cheio@@Base+0x34>
   11248:	ldr	r0, [r4, #8]
   1124c:	bl	115b8 <fila_tamanho@@Base>
   11250:	ldr	r3, [r4]
   11254:	cmp	r0, r3
   11258:	beq	1126c <armazem_cheio@@Base+0x44>
   1125c:	mov	r0, #0
   11260:	ldr	r4, [sp]
   11264:	add	sp, sp, #4
   11268:	pop	{pc}		; (ldr pc, [sp], #4)
   1126c:	ldr	r0, [r4, #8]
   11270:	bl	115f0 <fila_back@@Base>
   11274:	ldr	r0, [r0, #4]
   11278:	ldr	r3, [r4, #4]
   1127c:	sub	r0, r0, r3
   11280:	clz	r0, r0
   11284:	lsr	r0, r0, #5
   11288:	b	11260 <armazem_cheio@@Base+0x38>

0001128c <armazenar_contentor@@Base>:
   1128c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11290:	mov	r4, r0
   11294:	mov	r5, r1
   11298:	strd	r6, [sp, #8]
   1129c:	str	r8, [sp, #16]
   112a0:	str	lr, [sp, #20]
   112a4:	bl	11780 <pilha_nova@@Base>
   112a8:	cmp	r5, #0
   112ac:	cmpne	r4, #0
   112b0:	bne	112cc <armazenar_contentor@@Base+0x40>
   112b4:	mov	r0, #0
   112b8:	ldrd	r4, [sp]
   112bc:	ldrd	r6, [sp, #8]
   112c0:	ldr	r8, [sp, #16]
   112c4:	add	sp, sp, #20
   112c8:	pop	{pc}		; (ldr pc, [sp], #4)
   112cc:	mov	r6, r0
   112d0:	ldr	r0, [r4, #8]
   112d4:	bl	115b8 <fila_tamanho@@Base>
   112d8:	cmp	r0, #0
   112dc:	beq	112f4 <armazenar_contentor@@Base+0x68>
   112e0:	ldr	r0, [r4, #8]
   112e4:	bl	115b8 <fila_tamanho@@Base>
   112e8:	ldr	r3, [r4]
   112ec:	cmp	r0, r3
   112f0:	beq	1135c <armazenar_contentor@@Base+0xd0>
   112f4:	ldr	r0, [r4, #8]
   112f8:	bl	115b8 <fila_tamanho@@Base>
   112fc:	cmp	r0, #0
   11300:	beq	11334 <armazenar_contentor@@Base+0xa8>
   11304:	ldr	r0, [r4, #8]
   11308:	bl	115f0 <fila_back@@Base>
   1130c:	ldr	r2, [r0, #4]
   11310:	ldr	r3, [r4, #4]
   11314:	cmp	r2, r3
   11318:	beq	1134c <armazenar_contentor@@Base+0xc0>
   1131c:	ldr	r0, [r4, #8]
   11320:	bl	115f0 <fila_back@@Base>
   11324:	mov	r1, r5
   11328:	bl	11848 <pilha_push@@Base>
   1132c:	mov	r0, #1
   11330:	b	112b8 <armazenar_contentor@@Base+0x2c>
   11334:	ldr	r7, [r4, #8]
   11338:	bl	11780 <pilha_nova@@Base>
   1133c:	mov	r1, r0
   11340:	mov	r0, r7
   11344:	bl	1162c <fila_push@@Base>
   11348:	b	11304 <armazenar_contentor@@Base+0x78>
   1134c:	mov	r1, r6
   11350:	ldr	r0, [r4, #8]
   11354:	bl	1162c <fila_push@@Base>
   11358:	b	1131c <armazenar_contentor@@Base+0x90>
   1135c:	ldr	r0, [r4, #8]
   11360:	bl	115f0 <fila_back@@Base>
   11364:	ldr	r2, [r0, #4]
   11368:	ldr	r3, [r4, #4]
   1136c:	cmp	r2, r3
   11370:	bne	112f4 <armazenar_contentor@@Base+0x68>
   11374:	b	112b4 <armazenar_contentor@@Base+0x28>

00011378 <expedir_contentor@@Base>:
   11378:	strd	r4, [sp, #-16]!
   1137c:	subs	r4, r0, #0
   11380:	str	r6, [sp, #8]
   11384:	str	lr, [sp, #12]
   11388:	beq	11400 <expedir_contentor@@Base+0x88>
   1138c:	ldr	r0, [r4, #8]
   11390:	bl	115b8 <fila_tamanho@@Base>
   11394:	cmp	r0, #0
   11398:	beq	11400 <expedir_contentor@@Base+0x88>
   1139c:	ldr	r0, [r4, #8]
   113a0:	bl	115c8 <fila_front@@Base>
   113a4:	bl	11820 <pilha_top@@Base>
   113a8:	cmp	r0, #0
   113ac:	beq	11400 <expedir_contentor@@Base+0x88>
   113b0:	ldr	r0, [r4, #8]
   113b4:	bl	115c8 <fila_front@@Base>
   113b8:	bl	11820 <pilha_top@@Base>
   113bc:	ldr	r5, [r0]
   113c0:	ldr	r0, [r4, #8]
   113c4:	bl	115c8 <fila_front@@Base>
   113c8:	bl	11820 <pilha_top@@Base>
   113cc:	vldr	s0, [r0, #4]
   113d0:	mov	r0, r5
   113d4:	bl	11420 <contentor_novo@@Base>
   113d8:	mov	r5, r0
   113dc:	ldr	r0, [r4, #8]
   113e0:	bl	115c8 <fila_front@@Base>
   113e4:	ldr	r3, [r0, #4]
   113e8:	ldr	r0, [r4, #8]
   113ec:	cmp	r3, #1
   113f0:	ble	11418 <expedir_contentor@@Base+0xa0>
   113f4:	bl	115c8 <fila_front@@Base>
   113f8:	bl	118d0 <pilha_pop@@Base>
   113fc:	b	11404 <expedir_contentor@@Base+0x8c>
   11400:	mov	r5, #0
   11404:	mov	r0, r5
   11408:	ldrd	r4, [sp]
   1140c:	ldr	r6, [sp, #8]
   11410:	add	sp, sp, #12
   11414:	pop	{pc}		; (ldr pc, [sp], #4)
   11418:	bl	116cc <fila_pop@@Base>
   1141c:	b	11404 <expedir_contentor@@Base+0x8c>

00011420 <contentor_novo@@Base>:
   11420:	strd	r4, [sp, #-16]!
   11424:	mov	r5, r0
   11428:	mov	r0, #8
   1142c:	str	r6, [sp, #8]
   11430:	str	lr, [sp, #12]
   11434:	vpush	{d8}
   11438:	vmov.f32	s16, s0
   1143c:	bl	10a40 <malloc@plt>
   11440:	mov	r4, r0
   11444:	mov	r0, r5
   11448:	bl	10a64 <strlen@plt>
   1144c:	add	r6, r0, #1
   11450:	mov	r0, r6
   11454:	bl	10a40 <malloc@plt>
   11458:	mov	r2, r6
   1145c:	mov	r1, r5
   11460:	str	r0, [r4]
   11464:	bl	10a28 <memcpy@plt>
   11468:	vstr	s16, [r4, #4]
   1146c:	mov	r0, r4
   11470:	vpop	{d8}
   11474:	ldrd	r4, [sp]
   11478:	ldr	r6, [sp, #8]
   1147c:	add	sp, sp, #12
   11480:	pop	{pc}		; (ldr pc, [sp], #4)

00011484 <contentor_apaga@@Base>:
   11484:	str	r4, [sp, #-8]!
   11488:	mov	r4, r0
   1148c:	ldr	r0, [r0]
   11490:	str	lr, [sp, #4]
   11494:	bl	10a1c <free@plt>
   11498:	mov	r0, r4
   1149c:	ldr	r4, [sp]
   114a0:	ldr	lr, [sp, #4]
   114a4:	add	sp, sp, #8
   114a8:	b	10a1c <free@plt>

000114ac <contentor_imprime@@Base>:
   114ac:	subs	r3, r0, #0
   114b0:	beq	114d0 <contentor_imprime@@Base+0x24>
   114b4:	movw	r0, #7256	; 0x1c58
   114b8:	movt	r0, #1
   114bc:	ldr	r1, [r3]
   114c0:	vldr	s15, [r3, #4]
   114c4:	vcvt.f64.f32	d7, s15
   114c8:	vmov	r2, r3, d7
   114cc:	b	10a10 <printf@plt>
   114d0:	movw	r0, #7240	; 0x1c48
   114d4:	movt	r0, #1
   114d8:	b	10a34 <puts@plt>

000114dc <fila_novo_elemento@@Base>:
   114dc:	str	r4, [sp, #-8]!
   114e0:	mov	r4, r0
   114e4:	mov	r0, #8
   114e8:	str	lr, [sp, #4]
   114ec:	bl	10a40 <malloc@plt>
   114f0:	subs	r3, r0, #0
   114f4:	beq	1150c <fila_novo_elemento@@Base+0x30>
   114f8:	cmp	r4, #0
   114fc:	str	r4, [r3]
   11500:	movne	r2, #0
   11504:	strne	r2, [r3, #4]
   11508:	beq	1151c <fila_novo_elemento@@Base+0x40>
   1150c:	ldr	r4, [sp]
   11510:	add	sp, sp, #4
   11514:	mov	r0, r3
   11518:	pop	{pc}		; (ldr pc, [sp], #4)
   1151c:	bl	10a1c <free@plt>
   11520:	mov	r3, r4
   11524:	b	1150c <fila_novo_elemento@@Base+0x30>

00011528 <fila_nova@@Base>:
   11528:	mov	r0, #8
   1152c:	str	r4, [sp, #-8]!
   11530:	str	lr, [sp, #4]
   11534:	bl	10a40 <malloc@plt>
   11538:	cmp	r0, #0
   1153c:	beq	1154c <fila_nova@@Base+0x24>
   11540:	mov	r3, #0
   11544:	str	r3, [r0]
   11548:	str	r3, [r0, #4]
   1154c:	ldr	r4, [sp]
   11550:	add	sp, sp, #4
   11554:	pop	{pc}		; (ldr pc, [sp], #4)

00011558 <fila_apaga@@Base>:
   11558:	strd	r4, [sp, #-16]!
   1155c:	subs	r5, r0, #0
   11560:	str	r6, [sp, #8]
   11564:	str	lr, [sp, #12]
   11568:	bne	11584 <fila_apaga@@Base+0x2c>
   1156c:	b	115a8 <fila_apaga@@Base+0x50>
   11570:	ldm	r4, {r0, r3}
   11574:	str	r3, [r5]
   11578:	bl	117b0 <pilha_apaga@@Base>
   1157c:	mov	r0, r4
   11580:	bl	10a1c <free@plt>
   11584:	ldr	r4, [r5]
   11588:	cmp	r4, #0
   1158c:	bne	11570 <fila_apaga@@Base+0x18>
   11590:	mov	r0, r5
   11594:	ldrd	r4, [sp]
   11598:	ldr	r6, [sp, #8]
   1159c:	ldr	lr, [sp, #12]
   115a0:	add	sp, sp, #16
   115a4:	b	10a1c <free@plt>
   115a8:	ldrd	r4, [sp]
   115ac:	ldr	r6, [sp, #8]
   115b0:	add	sp, sp, #12
   115b4:	pop	{pc}		; (ldr pc, [sp], #4)

000115b8 <fila_tamanho@@Base>:
   115b8:	cmp	r0, #0
   115bc:	ldrne	r0, [r0, #4]
   115c0:	mvneq	r0, #0
   115c4:	bx	lr

000115c8 <fila_front@@Base>:
   115c8:	subs	r3, r0, #0
   115cc:	beq	115e8 <fila_front@@Base+0x20>
   115d0:	ldr	r0, [r3, #4]
   115d4:	cmp	r0, #0
   115d8:	beq	115ec <fila_front@@Base+0x24>
   115dc:	ldr	r3, [r3]
   115e0:	ldr	r0, [r3]
   115e4:	bx	lr
   115e8:	mov	r0, r3
   115ec:	bx	lr

000115f0 <fila_back@@Base>:
   115f0:	subs	r3, r0, #0
   115f4:	beq	11624 <fila_back@@Base+0x34>
   115f8:	ldr	r0, [r3, #4]
   115fc:	cmp	r0, #0
   11600:	beq	11628 <fila_back@@Base+0x38>
   11604:	ldr	r2, [r3]
   11608:	b	11610 <fila_back@@Base+0x20>
   1160c:	mov	r2, r3
   11610:	ldr	r3, [r2, #4]
   11614:	cmp	r3, #0
   11618:	bne	1160c <fila_back@@Base+0x1c>
   1161c:	ldr	r0, [r2]
   11620:	bx	lr
   11624:	mov	r0, r3
   11628:	bx	lr

0001162c <fila_push@@Base>:
   1162c:	strd	r4, [sp, #-16]!
   11630:	subs	r5, r0, #0
   11634:	str	r6, [sp, #8]
   11638:	str	lr, [sp, #12]
   1163c:	beq	11684 <fila_push@@Base+0x58>
   11640:	mov	r0, #8
   11644:	mov	r6, r1
   11648:	ldr	r4, [r5]
   1164c:	bl	10a40 <malloc@plt>
   11650:	subs	r2, r0, #0
   11654:	beq	11684 <fila_push@@Base+0x58>
   11658:	cmp	r6, #0
   1165c:	str	r6, [r2]
   11660:	beq	116b8 <fila_push@@Base+0x8c>
   11664:	ldr	r3, [r5, #4]
   11668:	mov	r1, #0
   1166c:	cmp	r4, r1
   11670:	str	r1, [r2, #4]
   11674:	streq	r2, [r5]
   11678:	add	r3, r3, #1
   1167c:	str	r3, [r5, #4]
   11680:	bne	11698 <fila_push@@Base+0x6c>
   11684:	ldrd	r4, [sp]
   11688:	ldr	r6, [sp, #8]
   1168c:	add	sp, sp, #12
   11690:	pop	{pc}		; (ldr pc, [sp], #4)
   11694:	mov	r4, r3
   11698:	ldr	r3, [r4, #4]
   1169c:	cmp	r3, #0
   116a0:	bne	11694 <fila_push@@Base+0x68>
   116a4:	str	r2, [r4, #4]
   116a8:	ldrd	r4, [sp]
   116ac:	ldr	r6, [sp, #8]
   116b0:	add	sp, sp, #12
   116b4:	pop	{pc}		; (ldr pc, [sp], #4)
   116b8:	ldrd	r4, [sp]
   116bc:	ldr	r6, [sp, #8]
   116c0:	ldr	lr, [sp, #12]
   116c4:	add	sp, sp, #16
   116c8:	b	10a1c <free@plt>

000116cc <fila_pop@@Base>:
   116cc:	subs	r3, r0, #0
   116d0:	bxeq	lr
   116d4:	ldr	r2, [r3, #4]
   116d8:	cmp	r2, #0
   116dc:	bxeq	lr
   116e0:	str	r4, [sp, #-8]!
   116e4:	sub	r2, r2, #1
   116e8:	ldr	r4, [r3]
   116ec:	ldr	r0, [r4]
   116f0:	str	lr, [sp, #4]
   116f4:	str	r2, [r3, #4]
   116f8:	ldr	r2, [r4, #4]
   116fc:	str	r2, [r3]
   11700:	bl	117b0 <pilha_apaga@@Base>
   11704:	mov	r0, r4
   11708:	ldr	r4, [sp]
   1170c:	ldr	lr, [sp, #4]
   11710:	add	sp, sp, #8
   11714:	b	10a1c <free@plt>

00011718 <pilha_novo_elemento@@Base>:
   11718:	strd	r4, [sp, #-16]!
   1171c:	mov	r5, r0
   11720:	mov	r0, #8
   11724:	str	r6, [sp, #8]
   11728:	str	lr, [sp, #12]
   1172c:	bl	10a40 <malloc@plt>
   11730:	subs	r4, r0, #0
   11734:	beq	1175c <pilha_novo_elemento@@Base+0x44>
   11738:	ldr	r0, [r5]
   1173c:	vldr	s0, [r5, #4]
   11740:	bl	11420 <contentor_novo@@Base>
   11744:	cmp	r0, #0
   11748:	mov	r3, r0
   1174c:	str	r0, [r4]
   11750:	movne	r3, #0
   11754:	strne	r3, [r4, #4]
   11758:	beq	11770 <pilha_novo_elemento@@Base+0x58>
   1175c:	mov	r0, r4
   11760:	ldrd	r4, [sp]
   11764:	ldr	r6, [sp, #8]
   11768:	add	sp, sp, #12
   1176c:	pop	{pc}		; (ldr pc, [sp], #4)
   11770:	mov	r0, r4
   11774:	mov	r4, r3
   11778:	bl	10a1c <free@plt>
   1177c:	b	1175c <pilha_novo_elemento@@Base+0x44>

00011780 <pilha_nova@@Base>:
   11780:	mov	r0, #8
   11784:	str	r4, [sp, #-8]!
   11788:	str	lr, [sp, #4]
   1178c:	bl	10a40 <malloc@plt>
   11790:	cmp	r0, #0
   11794:	beq	117a4 <pilha_nova@@Base+0x24>
   11798:	mov	r3, #0
   1179c:	str	r3, [r0]
   117a0:	str	r3, [r0, #4]
   117a4:	ldr	r4, [sp]
   117a8:	add	sp, sp, #4
   117ac:	pop	{pc}		; (ldr pc, [sp], #4)

000117b0 <pilha_apaga@@Base>:
   117b0:	strd	r4, [sp, #-16]!
   117b4:	subs	r5, r0, #0
   117b8:	str	r6, [sp, #8]
   117bc:	str	lr, [sp, #12]
   117c0:	bne	117dc <pilha_apaga@@Base+0x2c>
   117c4:	b	11800 <pilha_apaga@@Base+0x50>
   117c8:	ldm	r4, {r0, r3}
   117cc:	str	r3, [r5]
   117d0:	bl	11484 <contentor_apaga@@Base>
   117d4:	mov	r0, r4
   117d8:	bl	10a1c <free@plt>
   117dc:	ldr	r4, [r5]
   117e0:	cmp	r4, #0
   117e4:	bne	117c8 <pilha_apaga@@Base+0x18>
   117e8:	mov	r0, r5
   117ec:	ldrd	r4, [sp]
   117f0:	ldr	r6, [sp, #8]
   117f4:	ldr	lr, [sp, #12]
   117f8:	add	sp, sp, #16
   117fc:	b	10a1c <free@plt>
   11800:	ldrd	r4, [sp]
   11804:	ldr	r6, [sp, #8]
   11808:	add	sp, sp, #12
   1180c:	pop	{pc}		; (ldr pc, [sp], #4)

00011810 <pilha_tamanho@@Base>:
   11810:	cmp	r0, #0
   11814:	ldrne	r0, [r0, #4]
   11818:	mvneq	r0, #0
   1181c:	bx	lr

00011820 <pilha_top@@Base>:
   11820:	subs	r3, r0, #0
   11824:	beq	11840 <pilha_top@@Base+0x20>
   11828:	ldr	r0, [r3, #4]
   1182c:	cmp	r0, #0
   11830:	beq	11844 <pilha_top@@Base+0x24>
   11834:	ldr	r3, [r3]
   11838:	ldr	r0, [r3]
   1183c:	bx	lr
   11840:	mov	r0, r3
   11844:	bx	lr

00011848 <pilha_push@@Base>:
   11848:	strd	r4, [sp, #-16]!
   1184c:	subs	r4, r0, #0
   11850:	str	r6, [sp, #8]
   11854:	str	lr, [sp, #12]
   11858:	beq	118a8 <pilha_push@@Base+0x60>
   1185c:	mov	r0, #8
   11860:	mov	r5, r1
   11864:	bl	10a40 <malloc@plt>
   11868:	subs	r6, r0, #0
   1186c:	beq	118a8 <pilha_push@@Base+0x60>
   11870:	ldr	r0, [r5]
   11874:	vldr	s0, [r5, #4]
   11878:	bl	11420 <contentor_novo@@Base>
   1187c:	cmp	r0, #0
   11880:	str	r0, [r6]
   11884:	beq	118b8 <pilha_push@@Base+0x70>
   11888:	ldrd	r2, [r4]
   1188c:	mov	r1, #0
   11890:	str	r6, [r4]
   11894:	str	r1, [r6, #4]
   11898:	add	r3, r3, #1
   1189c:	cmp	r2, r1
   118a0:	strne	r2, [r6, #4]
   118a4:	str	r3, [r4, #4]
   118a8:	ldrd	r4, [sp]
   118ac:	ldr	r6, [sp, #8]
   118b0:	add	sp, sp, #12
   118b4:	pop	{pc}		; (ldr pc, [sp], #4)
   118b8:	mov	r0, r6
   118bc:	ldrd	r4, [sp]
   118c0:	ldr	r6, [sp, #8]
   118c4:	ldr	lr, [sp, #12]
   118c8:	add	sp, sp, #16
   118cc:	b	10a1c <free@plt>

000118d0 <pilha_pop@@Base>:
   118d0:	subs	r3, r0, #0
   118d4:	bxeq	lr
   118d8:	ldr	r2, [r3, #4]
   118dc:	cmp	r2, #0
   118e0:	bxeq	lr
   118e4:	str	r4, [sp, #-8]!
   118e8:	sub	r2, r2, #1
   118ec:	ldr	r4, [r3]
   118f0:	ldrd	r0, [r4]
   118f4:	str	lr, [sp, #4]
   118f8:	stm	r3, {r1, r2}
   118fc:	bl	11484 <contentor_apaga@@Base>
   11900:	mov	r0, r4
   11904:	ldr	r4, [sp]
   11908:	ldr	lr, [sp, #4]
   1190c:	add	sp, sp, #8
   11910:	b	10a1c <free@plt>

00011914 <__libc_csu_init@@Base>:
   11914:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11918:	mov	r7, r0
   1191c:	ldr	r6, [pc, #72]	; 1196c <__libc_csu_init@@Base+0x58>
   11920:	ldr	r5, [pc, #72]	; 11970 <__libc_csu_init@@Base+0x5c>
   11924:	add	r6, pc, r6
   11928:	add	r5, pc, r5
   1192c:	sub	r6, r6, r5
   11930:	mov	r8, r1
   11934:	mov	r9, r2
   11938:	bl	109e4 <calloc@plt-0x20>
   1193c:	asrs	r6, r6, #2
   11940:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11944:	mov	r4, #0
   11948:	add	r4, r4, #1
   1194c:	ldr	r3, [r5], #4
   11950:	mov	r2, r9
   11954:	mov	r1, r8
   11958:	mov	r0, r7
   1195c:	blx	r3
   11960:	cmp	r6, r4
   11964:	bne	11948 <__libc_csu_init@@Base+0x34>
   11968:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1196c:	andeq	r0, r1, r8, ror #11
   11970:	andeq	r0, r1, r0, ror #11

00011974 <__libc_csu_fini@@Base>:
   11974:	bx	lr

Disassembly of section .fini:

00011978 <.fini>:
   11978:	push	{r3, lr}
   1197c:	pop	{r3, pc}
