
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011954 <.init>:
   11954:	push	{r3, lr}
   11958:	bl	11e60 <__assert_fail@plt+0x48>
   1195c:	pop	{r3, pc}

Disassembly of section .plt:

00011960 <calloc@plt-0x14>:
   11960:	push	{lr}		; (str lr, [sp, #-4]!)
   11964:	ldr	lr, [pc, #4]	; 11970 <calloc@plt-0x4>
   11968:	add	lr, pc, lr
   1196c:	ldr	pc, [lr, #8]!
   11970:	muleq	r1, r0, r6

00011974 <calloc@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #122880	; 0x1e000
   1197c:	ldr	pc, [ip, #1680]!	; 0x690

00011980 <fputs_unlocked@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #122880	; 0x1e000
   11988:	ldr	pc, [ip, #1672]!	; 0x688

0001198c <fsync@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #122880	; 0x1e000
   11994:	ldr	pc, [ip, #1664]!	; 0x680

00011998 <strcmp@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #122880	; 0x1e000
   119a0:	ldr	pc, [ip, #1656]!	; 0x678

000119a4 <strtol@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #122880	; 0x1e000
   119ac:	ldr	pc, [ip, #1648]!	; 0x670

000119b0 <setsockopt@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #122880	; 0x1e000
   119b8:	ldr	pc, [ip, #1640]!	; 0x668

000119bc <pause@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #122880	; 0x1e000
   119c4:	ldr	pc, [ip, #1632]!	; 0x660

000119c8 <printf@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #122880	; 0x1e000
   119d0:	ldr	pc, [ip, #1624]!	; 0x658

000119d4 <read@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #122880	; 0x1e000
   119dc:	ldr	pc, [ip, #1616]!	; 0x650

000119e0 <fflush@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #122880	; 0x1e000
   119e8:	ldr	pc, [ip, #1608]!	; 0x648

000119ec <utmpxname@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #122880	; 0x1e000
   119f4:	ldr	pc, [ip, #1600]!	; 0x640

000119f8 <sigprocmask@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #122880	; 0x1e000
   11a00:	ldr	pc, [ip, #1592]!	; 0x638

00011a04 <memmove@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #122880	; 0x1e000
   11a0c:	ldr	pc, [ip, #1584]!	; 0x630

00011a10 <strchrnul@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #122880	; 0x1e000
   11a18:	ldr	pc, [ip, #1576]!	; 0x628

00011a1c <free@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #122880	; 0x1e000
   11a24:	ldr	pc, [ip, #1568]!	; 0x620

00011a28 <gai_strerror@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #122880	; 0x1e000
   11a30:	ldr	pc, [ip, #1560]!	; 0x618

00011a34 <fgets@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #122880	; 0x1e000
   11a3c:	ldr	pc, [ip, #1552]!	; 0x610

00011a40 <strndup@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #122880	; 0x1e000
   11a48:	ldr	pc, [ip, #1544]!	; 0x608

00011a4c <_exit@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #122880	; 0x1e000
   11a54:	ldr	pc, [ip, #1536]!	; 0x600

00011a58 <memcpy@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #122880	; 0x1e000
   11a60:	ldr	pc, [ip, #1528]!	; 0x5f8

00011a64 <signal@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #122880	; 0x1e000
   11a6c:	ldr	pc, [ip, #1520]!	; 0x5f0

00011a70 <time@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #122880	; 0x1e000
   11a78:	ldr	pc, [ip, #1512]!	; 0x5e8

00011a7c <fwrite_unlocked@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #122880	; 0x1e000
   11a84:	ldr	pc, [ip, #1504]!	; 0x5e0

00011a88 <sleep@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #122880	; 0x1e000
   11a90:	ldr	pc, [ip, #1496]!	; 0x5d8

00011a94 <ctime@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #122880	; 0x1e000
   11a9c:	ldr	pc, [ip, #1488]!	; 0x5d0

00011aa0 <recvfrom@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #122880	; 0x1e000
   11aa8:	ldr	pc, [ip, #1480]!	; 0x5c8

00011aac <strdup@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #122880	; 0x1e000
   11ab4:	ldr	pc, [ip, #1472]!	; 0x5c0

00011ab8 <setutxent@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #122880	; 0x1e000
   11ac0:	ldr	pc, [ip, #1464]!	; 0x5b8

00011ac4 <alarm@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #122880	; 0x1e000
   11acc:	ldr	pc, [ip, #1456]!	; 0x5b0

00011ad0 <sysconf@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #122880	; 0x1e000
   11ad8:	ldr	pc, [ip, #1448]!	; 0x5a8

00011adc <unlink@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #122880	; 0x1e000
   11ae4:	ldr	pc, [ip, #1440]!	; 0x5a0

00011ae8 <dup2@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #122880	; 0x1e000
   11af0:	ldr	pc, [ip, #1432]!	; 0x598

00011af4 <realloc@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #122880	; 0x1e000
   11afc:	ldr	pc, [ip, #1424]!	; 0x590

00011b00 <chdir@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #122880	; 0x1e000
   11b08:	ldr	pc, [ip, #1416]!	; 0x588

00011b0c <strcasecmp@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #122880	; 0x1e000
   11b14:	ldr	pc, [ip, #1408]!	; 0x580

00011b18 <funlockfile@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #122880	; 0x1e000
   11b20:	ldr	pc, [ip, #1400]!	; 0x578

00011b24 <poll@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #122880	; 0x1e000
   11b2c:	ldr	pc, [ip, #1392]!	; 0x570

00011b30 <sigaction@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #122880	; 0x1e000
   11b38:	ldr	pc, [ip, #1384]!	; 0x568

00011b3c <fwrite@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #122880	; 0x1e000
   11b44:	ldr	pc, [ip, #1376]!	; 0x560

00011b48 <strcat@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #122880	; 0x1e000
   11b50:	ldr	pc, [ip, #1368]!	; 0x558

00011b54 <waitpid@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #122880	; 0x1e000
   11b5c:	ldr	pc, [ip, #1360]!	; 0x550

00011b60 <strcpy@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #122880	; 0x1e000
   11b68:	ldr	pc, [ip, #1352]!	; 0x548

00011b6c <error@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #122880	; 0x1e000
   11b74:	ldr	pc, [ip, #1344]!	; 0x540

00011b78 <gethostname@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #122880	; 0x1e000
   11b80:	ldr	pc, [ip, #1336]!	; 0x538

00011b84 <opendir@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #122880	; 0x1e000
   11b8c:	ldr	pc, [ip, #1328]!	; 0x530

00011b90 <open64@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #122880	; 0x1e000
   11b98:	ldr	pc, [ip, #1320]!	; 0x528

00011b9c <getenv@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #122880	; 0x1e000
   11ba4:	ldr	pc, [ip, #1312]!	; 0x520

00011ba8 <malloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #122880	; 0x1e000
   11bb0:	ldr	pc, [ip, #1304]!	; 0x518

00011bb4 <sigaddset@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #122880	; 0x1e000
   11bbc:	ldr	pc, [ip, #1296]!	; 0x510

00011bc0 <__libc_start_main@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #122880	; 0x1e000
   11bc8:	ldr	pc, [ip, #1288]!	; 0x508

00011bcc <strerror@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #122880	; 0x1e000
   11bd4:	ldr	pc, [ip, #1280]!	; 0x500

00011bd8 <__ctype_tolower_loc@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #122880	; 0x1e000
   11be0:	ldr	pc, [ip, #1272]!	; 0x4f8

00011be4 <__gmon_start__@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #122880	; 0x1e000
   11bec:	ldr	pc, [ip, #1264]!	; 0x4f0

00011bf0 <kill@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #122880	; 0x1e000
   11bf8:	ldr	pc, [ip, #1256]!	; 0x4e8

00011bfc <__ctype_b_loc@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #122880	; 0x1e000
   11c04:	ldr	pc, [ip, #1248]!	; 0x4e0

00011c08 <getpid@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #122880	; 0x1e000
   11c10:	ldr	pc, [ip, #1240]!	; 0x4d8

00011c14 <exit@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #122880	; 0x1e000
   11c1c:	ldr	pc, [ip, #1232]!	; 0x4d0

00011c20 <strlen@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #122880	; 0x1e000
   11c28:	ldr	pc, [ip, #1224]!	; 0x4c8

00011c2c <setsid@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #122880	; 0x1e000
   11c34:	ldr	pc, [ip, #1216]!	; 0x4c0

00011c38 <strchr@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #122880	; 0x1e000
   11c40:	ldr	pc, [ip, #1208]!	; 0x4b8

00011c44 <fprintf@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #122880	; 0x1e000
   11c4c:	ldr	pc, [ip, #1200]!	; 0x4b0

00011c50 <__errno_location@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #122880	; 0x1e000
   11c58:	ldr	pc, [ip, #1192]!	; 0x4a8

00011c5c <snprintf@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #122880	; 0x1e000
   11c64:	ldr	pc, [ip, #1184]!	; 0x4a0

00011c68 <strerror_r@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #122880	; 0x1e000
   11c70:	ldr	pc, [ip, #1176]!	; 0x498

00011c74 <bind@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #122880	; 0x1e000
   11c7c:	ldr	pc, [ip, #1168]!	; 0x490

00011c80 <setvbuf@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #122880	; 0x1e000
   11c88:	ldr	pc, [ip, #1160]!	; 0x488

00011c8c <memset@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #122880	; 0x1e000
   11c94:	ldr	pc, [ip, #1152]!	; 0x480

00011c98 <strncpy@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #122880	; 0x1e000
   11ca0:	ldr	pc, [ip, #1144]!	; 0x478

00011ca4 <asprintf@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #122880	; 0x1e000
   11cac:	ldr	pc, [ip, #1136]!	; 0x470

00011cb0 <memchr@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #122880	; 0x1e000
   11cb8:	ldr	pc, [ip, #1128]!	; 0x468

00011cbc <writev@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #122880	; 0x1e000
   11cc4:	ldr	pc, [ip, #1120]!	; 0x460

00011cc8 <fclose@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #122880	; 0x1e000
   11cd0:	ldr	pc, [ip, #1112]!	; 0x458

00011cd4 <fcntl64@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #122880	; 0x1e000
   11cdc:	ldr	pc, [ip, #1104]!	; 0x450

00011ce0 <sendto@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #122880	; 0x1e000
   11ce8:	ldr	pc, [ip, #1096]!	; 0x448

00011cec <endutxent@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #122880	; 0x1e000
   11cf4:	ldr	pc, [ip, #1088]!	; 0x440

00011cf8 <__overflow@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #122880	; 0x1e000
   11d00:	ldr	pc, [ip, #1080]!	; 0x438

00011d04 <sigemptyset@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #122880	; 0x1e000
   11d0c:	ldr	pc, [ip, #1072]!	; 0x430

00011d10 <fork@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #122880	; 0x1e000
   11d18:	ldr	pc, [ip, #1064]!	; 0x428

00011d1c <getnameinfo@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #122880	; 0x1e000
   11d24:	ldr	pc, [ip, #1056]!	; 0x420

00011d28 <strrchr@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #122880	; 0x1e000
   11d30:	ldr	pc, [ip, #1048]!	; 0x418

00011d34 <vfprintf@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #122880	; 0x1e000
   11d3c:	ldr	pc, [ip, #1040]!	; 0x410

00011d40 <fputc@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #122880	; 0x1e000
   11d48:	ldr	pc, [ip, #1032]!	; 0x408

00011d4c <readdir64@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #122880	; 0x1e000
   11d54:	ldr	pc, [ip, #1024]!	; 0x400

00011d58 <flockfile@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #122880	; 0x1e000
   11d60:	ldr	pc, [ip, #1016]!	; 0x3f8

00011d64 <vsnprintf@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #122880	; 0x1e000
   11d6c:	ldr	pc, [ip, #1008]!	; 0x3f0

00011d70 <fopen64@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #122880	; 0x1e000
   11d78:	ldr	pc, [ip, #1000]!	; 0x3e8

00011d7c <qsort@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #122880	; 0x1e000
   11d84:	ldr	pc, [ip, #992]!	; 0x3e0

00011d88 <strpbrk@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #122880	; 0x1e000
   11d90:	ldr	pc, [ip, #984]!	; 0x3d8

00011d94 <freeaddrinfo@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #122880	; 0x1e000
   11d9c:	ldr	pc, [ip, #976]!	; 0x3d0

00011da0 <getaddrinfo@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #122880	; 0x1e000
   11da8:	ldr	pc, [ip, #968]!	; 0x3c8

00011dac <socket@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #122880	; 0x1e000
   11db4:	ldr	pc, [ip, #960]!	; 0x3c0

00011db8 <chmod@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #122880	; 0x1e000
   11dc0:	ldr	pc, [ip, #952]!	; 0x3b8

00011dc4 <__xstat64@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #122880	; 0x1e000
   11dcc:	ldr	pc, [ip, #944]!	; 0x3b0

00011dd0 <isatty@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #122880	; 0x1e000
   11dd8:	ldr	pc, [ip, #936]!	; 0x3a8

00011ddc <strncmp@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #122880	; 0x1e000
   11de4:	ldr	pc, [ip, #928]!	; 0x3a0

00011de8 <abort@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #122880	; 0x1e000
   11df0:	ldr	pc, [ip, #920]!	; 0x398

00011df4 <getutxent@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #122880	; 0x1e000
   11dfc:	ldr	pc, [ip, #912]!	; 0x390

00011e00 <close@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #122880	; 0x1e000
   11e08:	ldr	pc, [ip, #904]!	; 0x388

00011e0c <closedir@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #122880	; 0x1e000
   11e14:	ldr	pc, [ip, #896]!	; 0x380

00011e18 <__assert_fail@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #122880	; 0x1e000
   11e20:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00011e24 <daemon@@Base-0x3f50>:
   11e24:	mov	fp, #0
   11e28:	mov	lr, #0
   11e2c:	pop	{r1}		; (ldr r1, [sp], #4)
   11e30:	mov	r2, sp
   11e34:	push	{r2}		; (str r2, [sp, #-4]!)
   11e38:	push	{r0}		; (str r0, [sp, #-4]!)
   11e3c:	ldr	ip, [pc, #16]	; 11e54 <__assert_fail@plt+0x3c>
   11e40:	push	{ip}		; (str ip, [sp, #-4]!)
   11e44:	ldr	r0, [pc, #12]	; 11e58 <__assert_fail@plt+0x40>
   11e48:	ldr	r3, [pc, #12]	; 11e5c <__assert_fail@plt+0x44>
   11e4c:	bl	11bc0 <__libc_start_main@plt>
   11e50:	bl	11de8 <abort@plt>
   11e54:			; <UNDEFINED> instruction: 0x0001d9b4
   11e58:	andeq	r1, r1, r4, lsl pc
   11e5c:	andeq	sp, r1, r4, asr r9
   11e60:	ldr	r3, [pc, #20]	; 11e7c <__assert_fail@plt+0x64>
   11e64:	ldr	r2, [pc, #20]	; 11e80 <__assert_fail@plt+0x68>
   11e68:	add	r3, pc, r3
   11e6c:	ldr	r2, [r3, r2]
   11e70:	cmp	r2, #0
   11e74:	bxeq	lr
   11e78:	b	11be4 <__gmon_start__@plt>
   11e7c:	muleq	r1, r0, r1
   11e80:	muleq	r0, ip, r1
   11e84:	ldr	r0, [pc, #24]	; 11ea4 <__assert_fail@plt+0x8c>
   11e88:	ldr	r3, [pc, #24]	; 11ea8 <__assert_fail@plt+0x90>
   11e8c:	cmp	r3, r0
   11e90:	bxeq	lr
   11e94:	ldr	r3, [pc, #16]	; 11eac <__assert_fail@plt+0x94>
   11e98:	cmp	r3, #0
   11e9c:	bxeq	lr
   11ea0:	bx	r3
   11ea4:			; <UNDEFINED> instruction: 0x000305b4
   11ea8:			; <UNDEFINED> instruction: 0x000305b4
   11eac:	andeq	r0, r0, r0
   11eb0:	ldr	r0, [pc, #36]	; 11edc <__assert_fail@plt+0xc4>
   11eb4:	ldr	r1, [pc, #36]	; 11ee0 <__assert_fail@plt+0xc8>
   11eb8:	sub	r1, r1, r0
   11ebc:	asr	r1, r1, #2
   11ec0:	add	r1, r1, r1, lsr #31
   11ec4:	asrs	r1, r1, #1
   11ec8:	bxeq	lr
   11ecc:	ldr	r3, [pc, #16]	; 11ee4 <__assert_fail@plt+0xcc>
   11ed0:	cmp	r3, #0
   11ed4:	bxeq	lr
   11ed8:	bx	r3
   11edc:			; <UNDEFINED> instruction: 0x000305b4
   11ee0:			; <UNDEFINED> instruction: 0x000305b4
   11ee4:	andeq	r0, r0, r0
   11ee8:	push	{r4, lr}
   11eec:	ldr	r4, [pc, #24]	; 11f0c <__assert_fail@plt+0xf4>
   11ef0:	ldrb	r3, [r4]
   11ef4:	cmp	r3, #0
   11ef8:	popne	{r4, pc}
   11efc:	bl	11e84 <__assert_fail@plt+0x6c>
   11f00:	mov	r3, #1
   11f04:	strb	r3, [r4]
   11f08:	pop	{r4, pc}
   11f0c:	andeq	r0, r3, r8, asr #11
   11f10:	b	11eb0 <__assert_fail@plt+0x98>
   11f14:	push	{r4, r5, fp, lr}
   11f18:	add	fp, sp, #8
   11f1c:	sub	sp, sp, #312	; 0x138
   11f20:	sub	sp, sp, #2048	; 0x800
   11f24:	mov	r5, r0
   11f28:	ldr	r0, [r1]
   11f2c:	mov	r4, r1
   11f30:	bl	1afc8 <argp_parse@@Base+0x15ac>
   11f34:	movw	sl, #3104	; 0xc20
   11f38:	movw	r6, #3200	; 0xc80
   11f3c:	mov	r1, #8
   11f40:	movt	sl, #3
   11f44:	movt	r6, #3
   11f48:	ldr	r0, [sl]
   11f4c:	add	r1, r1, r0, lsl #3
   11f50:	ldr	r0, [r6]
   11f54:	bl	1bdbc <argp_parse@@Base+0x23a0>
   11f58:	cmp	r0, #0
   11f5c:	str	r0, [r6]
   11f60:	bne	11f80 <__assert_fail@plt+0x168>
   11f64:	bl	11c50 <__errno_location@plt>
   11f68:	ldr	r1, [r0]
   11f6c:	movw	r2, #58979	; 0xe663
   11f70:	mov	r0, #1
   11f74:	movt	r2, #1
   11f78:	bl	11b6c <error@plt>
   11f7c:	ldr	r0, [r6]
   11f80:	ldr	r1, [sl]
   11f84:	movw	r2, #58855	; 0xe5e7
   11f88:	movt	r2, #1
   11f8c:	str	r2, [r0, r1, lsl #3]
   11f90:	ldr	r0, [r6]
   11f94:	add	r0, r0, r1, lsl #3
   11f98:	mvn	r1, #0
   11f9c:	str	r1, [r0, #4]
   11fa0:	movw	r0, #4236	; 0x108c
   11fa4:	movw	r1, #56096	; 0xdb20
   11fa8:	movt	r0, #3
   11fac:	movt	r1, #1
   11fb0:	str	r1, [r0]
   11fb4:	ldr	r0, [sl]
   11fb8:	movw	r1, #1392	; 0x570
   11fbc:	movt	r1, #3
   11fc0:	add	r0, r0, #1
   11fc4:	str	r0, [sl]
   11fc8:	movw	r0, #56120	; 0xdb38
   11fcc:	movt	r0, #1
   11fd0:	bl	1ac00 <argp_parse@@Base+0x11e4>
   11fd4:	mov	r0, #0
   11fd8:	mov	r1, r5
   11fdc:	mov	r2, r4
   11fe0:	mov	r3, #0
   11fe4:	str	r0, [sp]
   11fe8:	str	r0, [sp, #4]
   11fec:	movw	r0, #812	; 0x32c
   11ff0:	movt	r0, #3
   11ff4:	bl	19a1c <argp_parse@@Base>
   11ff8:	movw	r0, #1488	; 0x5d0
   11ffc:	movt	r0, #3
   12000:	ldr	r0, [r0]
   12004:	bl	12c0c <__assert_fail@plt+0xdf4>
   12008:	movw	r7, #3132	; 0xc3c
   1200c:	movw	r1, #1504	; 0x5e0
   12010:	movt	r7, #3
   12014:	movt	r1, #3
   12018:	ldr	r0, [r7]
   1201c:	cmp	r0, #0
   12020:	beq	12060 <__assert_fail@plt+0x248>
   12024:	movw	r0, #3108	; 0xc24
   12028:	mov	r2, #1
   1202c:	mov	r3, #0
   12030:	mov	r8, #0
   12034:	movt	r0, #3
   12038:	ldr	r0, [r0]
   1203c:	cmp	r0, #0
   12040:	movne	r0, #1
   12044:	strne	r0, [r1]
   12048:	movw	r0, #1476	; 0x5c4
   1204c:	mov	r1, #0
   12050:	movt	r0, #3
   12054:	ldr	r0, [r0]
   12058:	bl	11c80 <setvbuf@plt>
   1205c:	b	120a4 <__assert_fail@plt+0x28c>
   12060:	movw	r1, #11524	; 0x2d04
   12064:	mov	r0, #15
   12068:	movt	r1, #1
   1206c:	bl	11a64 <signal@plt>
   12070:	mov	r0, #0
   12074:	mov	r1, #0
   12078:	mov	r2, #30
   1207c:	bl	15c2c <__assert_fail@plt+0x3e14>
   12080:	mov	r8, r0
   12084:	cmn	r0, #1
   12088:	bgt	120a4 <__assert_fail@plt+0x28c>
   1208c:	bl	11c50 <__errno_location@plt>
   12090:	ldr	r1, [r0]
   12094:	movw	r2, #56128	; 0xdb40
   12098:	mov	r0, #1
   1209c:	movt	r2, #1
   120a0:	bl	11b6c <error@plt>
   120a4:	bl	15d90 <daemon@@Base+0x1c>
   120a8:	mov	r4, r0
   120ac:	movw	r0, #3128	; 0xc38
   120b0:	movt	r0, #3
   120b4:	cmp	r4, #0
   120b8:	str	r4, [r0]
   120bc:	bne	120e4 <__assert_fail@plt+0x2cc>
   120c0:	bl	11c50 <__errno_location@plt>
   120c4:	ldr	r1, [r0]
   120c8:	movw	r2, #56152	; 0xdb58
   120cc:	mov	r0, #1
   120d0:	movt	r2, #1
   120d4:	bl	11b6c <error@plt>
   120d8:	movw	r0, #3128	; 0xc38
   120dc:	movt	r0, #3
   120e0:	ldr	r4, [r0]
   120e4:	mov	r0, r4
   120e8:	mov	r1, #46	; 0x2e
   120ec:	bl	11c38 <strchr@plt>
   120f0:	movw	r5, #3124	; 0xc34
   120f4:	cmp	r0, #0
   120f8:	movt	r5, #3
   120fc:	beq	12110 <__assert_fail@plt+0x2f8>
   12100:	mov	r1, #0
   12104:	strb	r1, [r0], #1
   12108:	str	r0, [r5]
   1210c:	b	12198 <__assert_fail@plt+0x380>
   12110:	vmov.i32	q8, #0	; 0x00000000
   12114:	sub	r2, fp, #1040	; 0x410
   12118:	add	r3, sp, #296	; 0x128
   1211c:	mov	r1, #0
   12120:	add	r0, r2, #4
   12124:	vst1.32	{d16-d17}, [r0]
   12128:	add	r0, r2, #16
   1212c:	vst1.32	{d16-d17}, [r0]
   12130:	mov	r0, #2
   12134:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12138:	mov	r0, r4
   1213c:	bl	11da0 <getaddrinfo@plt>
   12140:	cmp	r0, #0
   12144:	bne	1218c <__assert_fail@plt+0x374>
   12148:	movw	r0, #3128	; 0xc38
   1214c:	movt	r0, #3
   12150:	mov	r4, r0
   12154:	ldr	r0, [r0]
   12158:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1215c:	ldr	r0, [sp, #296]	; 0x128
   12160:	ldr	r0, [r0, #24]
   12164:	bl	11aac <strdup@plt>
   12168:	mov	r1, #46	; 0x2e
   1216c:	str	r0, [r4]
   12170:	bl	11c38 <strchr@plt>
   12174:	cmp	r0, #0
   12178:	movne	r1, #0
   1217c:	strbne	r1, [r0], #1
   12180:	strne	r0, [r5]
   12184:	ldr	r0, [sp, #296]	; 0x128
   12188:	bl	11d94 <freeaddrinfo@plt>
   1218c:	ldr	r0, [r5]
   12190:	cmp	r0, #0
   12194:	beq	12300 <__assert_fail@plt+0x4e8>
   12198:	movw	r4, #2636	; 0xa4c
   1219c:	mov	r0, #3
   121a0:	movt	r4, #3
   121a4:	strh	r0, [r4, #4]
   121a8:	movw	r0, #724	; 0x2d4
   121ac:	movt	r0, #3
   121b0:	bl	11aac <strdup@plt>
   121b4:	str	r0, [r4, #40]	; 0x28
   121b8:	movw	r4, #11540	; 0x2d14
   121bc:	mov	r0, #15
   121c0:	movt	r4, #1
   121c4:	mov	r1, r4
   121c8:	bl	11a64 <signal@plt>
   121cc:	ldr	r0, [r7]
   121d0:	mov	r1, r4
   121d4:	cmp	r0, #0
   121d8:	mov	r0, #2
   121dc:	movweq	r1, #1
   121e0:	bl	11a64 <signal@plt>
   121e4:	ldr	r0, [r7]
   121e8:	cmp	r0, #0
   121ec:	mov	r0, #3
   121f0:	movweq	r4, #1
   121f4:	mov	r1, r4
   121f8:	bl	11a64 <signal@plt>
   121fc:	mov	r0, #268435456	; 0x10000000
   12200:	add	r5, sp, #156	; 0x9c
   12204:	str	r0, [sp, #288]	; 0x120
   12208:	add	r0, r5, #4
   1220c:	bl	11d04 <sigemptyset@plt>
   12210:	movw	r0, #11916	; 0x2e8c
   12214:	mov	r1, r5
   12218:	mov	r2, #0
   1221c:	mov	r4, #0
   12220:	movt	r0, #1
   12224:	str	r0, [sp, #156]	; 0x9c
   12228:	mov	r0, #14
   1222c:	bl	11b30 <sigaction@plt>
   12230:	ldr	r0, [r7]
   12234:	movw	r1, #12220	; 0x2fbc
   12238:	mov	r2, #0
   1223c:	movt	r1, #1
   12240:	cmp	r0, #0
   12244:	mov	r0, #10
   12248:	movweq	r1, #1
   1224c:	str	r1, [sp, #156]	; 0x9c
   12250:	mov	r1, r5
   12254:	bl	11b30 <sigaction@plt>
   12258:	mov	r0, #30
   1225c:	bl	11ac4 <alarm@plt>
   12260:	ldr	r0, [sl]
   12264:	mov	r1, #24
   12268:	add	r0, r1, r0, lsl #3
   1226c:	bl	1bd8c <argp_parse@@Base+0x2370>
   12270:	mov	r5, r0
   12274:	cmp	r0, #0
   12278:	bne	12294 <__assert_fail@plt+0x47c>
   1227c:	bl	11c50 <__errno_location@plt>
   12280:	ldr	r1, [r0]
   12284:	movw	r2, #56178	; 0xdb72
   12288:	mov	r0, #1
   1228c:	movt	r2, #1
   12290:	bl	11b6c <error@plt>
   12294:	bl	1300c <__assert_fail@plt+0x11f4>
   12298:	movw	r0, #2620	; 0xa3c
   1229c:	movt	r0, #3
   122a0:	ldr	r0, [r0]
   122a4:	cmp	r0, #0
   122a8:	bne	12334 <__assert_fail@plt+0x51c>
   122ac:	movw	r0, #58522	; 0xe49a
   122b0:	mov	r1, #0
   122b4:	mov	r2, #0
   122b8:	mov	r4, #0
   122bc:	movt	r0, #1
   122c0:	bl	11b90 <open64@plt>
   122c4:	movw	r1, #800	; 0x320
   122c8:	cmp	r0, #0
   122cc:	movt	r1, #3
   122d0:	str	r0, [r1]
   122d4:	bmi	12310 <__assert_fail@plt+0x4f8>
   122d8:	mov	r1, #3
   122dc:	strh	r1, [r5, #4]
   122e0:	movw	r1, #58522	; 0xe49a
   122e4:	str	r0, [r5]
   122e8:	movw	r0, #56202	; 0xdb8a
   122ec:	movt	r0, #1
   122f0:	movt	r1, #1
   122f4:	bl	1341c <__assert_fail@plt+0x1604>
   122f8:	mov	r4, #1
   122fc:	b	12334 <__assert_fail@plt+0x51c>
   12300:	movw	r0, #59437	; 0xe82d
   12304:	movt	r0, #1
   12308:	bl	11aac <strdup@plt>
   1230c:	b	12108 <__assert_fail@plt+0x2f0>
   12310:	bl	11c50 <__errno_location@plt>
   12314:	ldr	r0, [r0]
   12318:	bl	11bcc <strerror@plt>
   1231c:	movw	r1, #58522	; 0xe49a
   12320:	mov	r2, r0
   12324:	movw	r0, #56216	; 0xdb98
   12328:	movt	r0, #1
   1232c:	movt	r1, #1
   12330:	bl	1341c <__assert_fail@plt+0x1604>
   12334:	movw	r0, #3112	; 0xc28
   12338:	str	r8, [sp, #8]
   1233c:	movt	r0, #3
   12340:	ldr	r0, [r0]
   12344:	cmp	r0, #0
   12348:	bne	12558 <__assert_fail@plt+0x740>
   1234c:	ldr	r0, [sl]
   12350:	cmp	r0, #0
   12354:	beq	12558 <__assert_fail@plt+0x740>
   12358:	add	r0, sp, #296	; 0x128
   1235c:	vmov.i32	q4, #0	; 0x00000000
   12360:	mov	r8, #0
   12364:	orr	r0, r0, #2
   12368:	add	r1, r0, #16
   1236c:	str	r0, [sp, #20]
   12370:	add	r0, r0, #32
   12374:	str	r1, [sp, #16]
   12378:	str	r0, [sp, #12]
   1237c:	b	123b4 <__assert_fail@plt+0x59c>
   12380:	ldr	r7, [r0, r8, lsl #3]
   12384:	bl	11c50 <__errno_location@plt>
   12388:	ldr	r0, [r0]
   1238c:	bl	11bcc <strerror@plt>
   12390:	mov	r2, r0
   12394:	movw	r0, #56216	; 0xdb98
   12398:	mov	r1, r7
   1239c:	movt	r0, #1
   123a0:	bl	1341c <__assert_fail@plt+0x1604>
   123a4:	ldr	r0, [sl]
   123a8:	add	r8, r8, #1
   123ac:	cmp	r8, r0
   123b0:	bcs	12558 <__assert_fail@plt+0x740>
   123b4:	ldr	r0, [r6]
   123b8:	mvn	r7, #0
   123bc:	ldr	r9, [r0, r8, lsl #3]
   123c0:	ldrb	r0, [r9]
   123c4:	cmp	r0, #0
   123c8:	beq	12514 <__assert_fail@plt+0x6fc>
   123cc:	mov	r0, r9
   123d0:	bl	11c20 <strlen@plt>
   123d4:	cmp	r0, #108	; 0x6c
   123d8:	bcc	1240c <__assert_fail@plt+0x5f4>
   123dc:	movw	r2, #59018	; 0xe68a
   123e0:	mov	r6, sl
   123e4:	sub	sl, fp, #1040	; 0x410
   123e8:	movw	r1, #1025	; 0x401
   123ec:	mov	r3, r9
   123f0:	movt	r2, #1
   123f4:	mov	r0, sl
   123f8:	bl	11c5c <snprintf@plt>
   123fc:	mov	r0, sl
   12400:	mov	sl, r6
   12404:	bl	134a8 <__assert_fail@plt+0x1690>
   12408:	b	12514 <__assert_fail@plt+0x6fc>
   1240c:	mov	r0, r9
   12410:	bl	11adc <unlink@plt>
   12414:	ldr	r0, [sp, #16]
   12418:	mov	r2, #92	; 0x5c
   1241c:	add	lr, sp, #256	; 0x100
   12420:	vst1.16	{d8-d9}, [r0]
   12424:	ldr	r0, [sp, #12]
   12428:	vst1.16	{d8-d9}, [r0]
   1242c:	ldr	r0, [sp, #20]
   12430:	add	r1, r0, #48	; 0x30
   12434:	vst1.16	{d8-d9}, [r1]
   12438:	add	r1, r0, #64	; 0x40
   1243c:	vst1.16	{d8-d9}, [r1]
   12440:	add	r1, r0, #80	; 0x50
   12444:	vst1.16	{d8-d9}, [r1]
   12448:	mov	r1, r0
   1244c:	vst1.16	{d8-d9}, [r1], r2
   12450:	mov	r2, #107	; 0x6b
   12454:	vst1.16	{d8-d9}, [r1]
   12458:	mov	r1, #1
   1245c:	strh	r1, [lr, #40]	; 0x28
   12460:	mov	r1, r9
   12464:	bl	11c98 <strncpy@plt>
   12468:	mov	r0, #1
   1246c:	mov	r1, #2
   12470:	mov	r2, #0
   12474:	bl	11dac <socket@plt>
   12478:	mov	sl, r0
   1247c:	cmp	r0, #0
   12480:	bmi	124c0 <__assert_fail@plt+0x6a8>
   12484:	ldr	r0, [sp, #20]
   12488:	bl	11c20 <strlen@plt>
   1248c:	add	r2, r0, #2
   12490:	mov	r0, sl
   12494:	add	r1, sp, #296	; 0x128
   12498:	bl	11c74 <bind@plt>
   1249c:	cmp	r0, #0
   124a0:	bmi	124c0 <__assert_fail@plt+0x6a8>
   124a4:	mov	r0, r9
   124a8:	movw	r1, #438	; 0x1b6
   124ac:	bl	11db8 <chmod@plt>
   124b0:	cmn	r0, #1
   124b4:	ble	124c0 <__assert_fail@plt+0x6a8>
   124b8:	mov	r7, sl
   124bc:	b	1250c <__assert_fail@plt+0x6f4>
   124c0:	movw	r2, #59048	; 0xe6a8
   124c4:	sub	r6, fp, #1040	; 0x410
   124c8:	movw	r1, #1025	; 0x401
   124cc:	mov	r3, r9
   124d0:	movt	r2, #1
   124d4:	mov	r0, r6
   124d8:	bl	11c5c <snprintf@plt>
   124dc:	mov	r0, r6
   124e0:	bl	134a8 <__assert_fail@plt+0x1690>
   124e4:	bl	11c50 <__errno_location@plt>
   124e8:	ldr	r0, [r0]
   124ec:	bl	11bcc <strerror@plt>
   124f0:	mov	r2, r0
   124f4:	movw	r0, #59065	; 0xe6b9
   124f8:	mov	r1, r9
   124fc:	movt	r0, #1
   12500:	bl	1341c <__assert_fail@plt+0x1604>
   12504:	mov	r0, sl
   12508:	bl	11e00 <close@plt>
   1250c:	movw	sl, #3104	; 0xc20
   12510:	movt	sl, #3
   12514:	movw	r6, #3200	; 0xc80
   12518:	cmp	r7, #0
   1251c:	movt	r6, #3
   12520:	ldr	r0, [r6]
   12524:	add	r1, r0, r8, lsl #3
   12528:	str	r7, [r1, #4]
   1252c:	bmi	12380 <__assert_fail@plt+0x568>
   12530:	mov	r1, r5
   12534:	mov	r2, #3
   12538:	str	r7, [r1, r4, lsl #3]!
   1253c:	strh	r2, [r1, #4]
   12540:	ldr	r1, [r0, r8, lsl #3]
   12544:	movw	r0, #56235	; 0xdbab
   12548:	movt	r0, #1
   1254c:	bl	1341c <__assert_fail@plt+0x1604>
   12550:	add	r4, r4, #1
   12554:	b	123a4 <__assert_fail@plt+0x58c>
   12558:	movw	r0, #2624	; 0xa40
   1255c:	movw	r7, #792	; 0x318
   12560:	movt	r0, #3
   12564:	movt	r7, #3
   12568:	ldr	r0, [r0]
   1256c:	cmp	r0, #0
   12570:	beq	1268c <__assert_fail@plt+0x874>
   12574:	mvn	r0, #0
   12578:	str	r0, [r7]
   1257c:	str	r0, [r7, #4]
   12580:	movw	r0, #1492	; 0x5d4
   12584:	movt	r0, #3
   12588:	ldr	r1, [r0]
   1258c:	cmp	r1, #0
   12590:	beq	125f8 <__assert_fail@plt+0x7e0>
   12594:	movw	r0, #788	; 0x314
   12598:	vmov.i32	q8, #0	; 0x00000000
   1259c:	sub	r2, fp, #1040	; 0x410
   125a0:	mov	r8, #0
   125a4:	movt	r0, #3
   125a8:	add	r3, r2, #12
   125ac:	str	r8, [fp, #-1012]	; 0xfffffc0c
   125b0:	ldr	r0, [r0]
   125b4:	vst1.32	{d16-d17}, [r3]
   125b8:	mov	r3, #2
   125bc:	str	r3, [fp, #-1032]	; 0xfffffbf8
   125c0:	add	r3, sp, #296	; 0x128
   125c4:	str	r0, [fp, #-1036]	; 0xfffffbf4
   125c8:	mov	r0, #1
   125cc:	str	r0, [fp, #-1040]	; 0xfffffbf0
   125d0:	movw	r0, #1484	; 0x5cc
   125d4:	movt	r0, #3
   125d8:	ldr	r0, [r0]
   125dc:	bl	11da0 <getaddrinfo@plt>
   125e0:	cmp	r0, #0
   125e4:	beq	12ad8 <__assert_fail@plt+0xcc0>
   125e8:	movw	r0, #59122	; 0xe6f2
   125ec:	movt	r0, #1
   125f0:	bl	134a8 <__assert_fail@plt+0x1690>
   125f4:	b	12604 <__assert_fail@plt+0x7ec>
   125f8:	movw	r0, #59087	; 0xe6cf
   125fc:	movt	r0, #1
   12600:	bl	1341c <__assert_fail@plt+0x1604>
   12604:	ldr	r0, [r7]
   12608:	cmp	r0, #0
   1260c:	bmi	12630 <__assert_fail@plt+0x818>
   12610:	mov	r1, r5
   12614:	str	r0, [r1, r4, lsl #3]!
   12618:	mov	r0, #3
   1261c:	strh	r0, [r1, #4]
   12620:	movw	r0, #56261	; 0xdbc5
   12624:	movt	r0, #1
   12628:	bl	1341c <__assert_fail@plt+0x1604>
   1262c:	add	r4, r4, #1
   12630:	ldr	r0, [r7, #4]
   12634:	cmp	r0, #0
   12638:	bmi	12660 <__assert_fail@plt+0x848>
   1263c:	mov	r1, r5
   12640:	str	r0, [r1, r4, lsl #3]!
   12644:	mov	r0, #3
   12648:	strh	r0, [r1, #4]
   1264c:	movw	r0, #56291	; 0xdbe3
   12650:	movt	r0, #1
   12654:	bl	1341c <__assert_fail@plt+0x1604>
   12658:	ldr	r0, [r7, #4]
   1265c:	add	r4, r4, #1
   12660:	ldr	r1, [r7]
   12664:	and	r0, r0, r1
   12668:	cmn	r0, #1
   1266c:	bgt	1268c <__assert_fail@plt+0x874>
   12670:	bl	11c50 <__errno_location@plt>
   12674:	ldr	r0, [r0]
   12678:	bl	11bcc <strerror@plt>
   1267c:	mov	r1, r0
   12680:	movw	r0, #56321	; 0xdc01
   12684:	movt	r0, #1
   12688:	bl	1341c <__assert_fail@plt+0x1604>
   1268c:	movw	r0, #720	; 0x2d0
   12690:	movw	r1, #56346	; 0xdc1a
   12694:	movt	r0, #3
   12698:	movt	r1, #1
   1269c:	ldr	r0, [r0]
   126a0:	bl	11d70 <fopen64@plt>
   126a4:	cmp	r0, #0
   126a8:	beq	126d0 <__assert_fail@plt+0x8b8>
   126ac:	mov	r6, r0
   126b0:	bl	11c08 <getpid@plt>
   126b4:	movw	r1, #56861	; 0xde1d
   126b8:	mov	r2, r0
   126bc:	mov	r0, r6
   126c0:	movt	r1, #1
   126c4:	bl	11c44 <fprintf@plt>
   126c8:	mov	r0, r6
   126cc:	bl	11cc8 <fclose@plt>
   126d0:	movw	r0, #56348	; 0xdc1c
   126d4:	movt	r0, #1
   126d8:	bl	1341c <__assert_fail@plt+0x1604>
   126dc:	movw	r0, #13460	; 0x3494
   126e0:	add	r1, sp, #156	; 0x9c
   126e4:	mov	r2, #0
   126e8:	mov	r7, #1
   126ec:	mov	r8, #0
   126f0:	movt	r0, #1
   126f4:	str	r0, [sp, #156]	; 0x9c
   126f8:	mov	r0, #1
   126fc:	bl	11b30 <sigaction@plt>
   12700:	movw	r0, #3132	; 0xc3c
   12704:	movt	r0, #3
   12708:	ldr	r0, [r0]
   1270c:	cmp	r0, #0
   12710:	beq	1273c <__assert_fail@plt+0x924>
   12714:	movw	r0, #1504	; 0x5e0
   12718:	movt	r0, #3
   1271c:	mov	r6, r0
   12720:	str	r7, [r0]
   12724:	bl	11c08 <getpid@plt>
   12728:	mov	r1, r0
   1272c:	movw	r0, #56367	; 0xdc2f
   12730:	movt	r0, #1
   12734:	bl	1341c <__assert_fail@plt+0x1604>
   12738:	str	r8, [r6]
   1273c:	ldr	r0, [sp, #8]
   12740:	cmp	r0, #0
   12744:	beq	12750 <__assert_fail@plt+0x938>
   12748:	mov	r1, #15
   1274c:	bl	11bf0 <kill@plt>
   12750:	mov	r9, #0
   12754:	add	r8, sp, #24
   12758:	mov	sl, #0
   1275c:	movw	r6, #1508	; 0x5e4
   12760:	movw	r7, #56436	; 0xdc74
   12764:	movt	r6, #3
   12768:	movt	r7, #1
   1276c:	b	12780 <__assert_fail@plt+0x968>
   12770:	cmp	r0, #0
   12774:	bmi	127b8 <__assert_fail@plt+0x9a0>
   12778:	cmp	r4, #0
   1277c:	bne	127d8 <__assert_fail@plt+0x9c0>
   12780:	mov	r0, r5
   12784:	mov	r1, r4
   12788:	mvn	r2, #0
   1278c:	bl	11b24 <poll@plt>
   12790:	cmp	r0, #0
   12794:	beq	12780 <__assert_fail@plt+0x968>
   12798:	ldrb	r1, [r6]
   1279c:	cmp	r1, #1
   127a0:	bne	12770 <__assert_fail@plt+0x958>
   127a4:	mov	r0, r7
   127a8:	bl	1341c <__assert_fail@plt+0x1604>
   127ac:	bl	1300c <__assert_fail@plt+0x11f4>
   127b0:	strb	r9, [r6]
   127b4:	b	12780 <__assert_fail@plt+0x968>
   127b8:	bl	11c50 <__errno_location@plt>
   127bc:	ldr	r0, [r0]
   127c0:	cmp	r0, #4
   127c4:	beq	12780 <__assert_fail@plt+0x968>
   127c8:	movw	r0, #56475	; 0xdc9b
   127cc:	movt	r0, #1
   127d0:	bl	134a8 <__assert_fail@plt+0x1690>
   127d4:	b	12780 <__assert_fail@plt+0x968>
   127d8:	mov	r7, #0
   127dc:	sub	r2, fp, #1040	; 0x410
   127e0:	b	127f8 <__assert_fail@plt+0x9e0>
   127e4:	mov	sl, #0
   127e8:	add	r8, sp, #24
   127ec:	add	r7, r7, #1
   127f0:	cmp	r7, r4
   127f4:	beq	1275c <__assert_fail@plt+0x944>
   127f8:	add	r0, r5, r7, lsl #3
   127fc:	ldrsh	r0, [r0, #6]
   12800:	tst	r0, #3
   12804:	beq	1284c <__assert_fail@plt+0xa34>
   12808:	ldr	r6, [r5, r7, lsl #3]
   1280c:	cmn	r6, #1
   12810:	beq	127ec <__assert_fail@plt+0x9d4>
   12814:	movw	r0, #800	; 0x320
   12818:	movt	r0, #3
   1281c:	ldr	r0, [r0]
   12820:	cmp	r6, r0
   12824:	bne	12870 <__assert_fail@plt+0xa58>
   12828:	add	r8, sp, #296	; 0x128
   1282c:	rsb	r2, sl, #1024	; 0x400
   12830:	mov	r0, r6
   12834:	add	r1, r8, sl
   12838:	bl	119d4 <read@plt>
   1283c:	cmp	r0, #1
   12840:	blt	12964 <__assert_fail@plt+0xb4c>
   12844:	add	sl, r0, sl
   12848:	b	1299c <__assert_fail@plt+0xb84>
   1284c:	tst	r0, #32
   12850:	bne	128e4 <__assert_fail@plt+0xacc>
   12854:	tst	r0, #8
   12858:	bne	12950 <__assert_fail@plt+0xb38>
   1285c:	tst	r0, #16
   12860:	beq	127ec <__assert_fail@plt+0x9d4>
   12864:	movw	r0, #56529	; 0xdcd1
   12868:	movt	r0, #1
   1286c:	b	12958 <__assert_fail@plt+0xb40>
   12870:	movw	r0, #792	; 0x318
   12874:	movt	r0, #3
   12878:	ldr	r1, [r0]
   1287c:	ldr	r0, [r0, #4]
   12880:	cmp	r6, r1
   12884:	cmpne	r6, r0
   12888:	bne	12900 <__assert_fail@plt+0xae8>
   1288c:	mov	r0, #128	; 0x80
   12890:	mov	r1, #0
   12894:	str	r0, [sp, #152]	; 0x98
   12898:	mov	r0, r2
   1289c:	movw	r2, #1025	; 0x401
   128a0:	bl	11c8c <memset@plt>
   128a4:	add	r0, sp, #152	; 0x98
   128a8:	mov	r2, #1024	; 0x400
   128ac:	mov	r3, #0
   128b0:	str	r8, [sp]
   128b4:	str	r0, [sp, #4]
   128b8:	mov	r0, r6
   128bc:	sub	r6, fp, #1040	; 0x410
   128c0:	mov	r1, r6
   128c4:	bl	11aa0 <recvfrom@plt>
   128c8:	cmp	r0, #1
   128cc:	blt	12a90 <__assert_fail@plt+0xc78>
   128d0:	ldr	r1, [sp, #152]	; 0x98
   128d4:	strb	r9, [r6, r0]
   128d8:	mov	r0, r8
   128dc:	bl	13804 <__assert_fail@plt+0x19ec>
   128e0:	b	12944 <__assert_fail@plt+0xb2c>
   128e4:	movw	r0, #56508	; 0xdcbc
   128e8:	movt	r0, #1
   128ec:	bl	134a8 <__assert_fail@plt+0x1690>
   128f0:	mvn	r0, #0
   128f4:	sub	r2, fp, #1040	; 0x410
   128f8:	str	r0, [r5, r7, lsl #3]
   128fc:	b	127ec <__assert_fail@plt+0x9d4>
   12900:	mov	r0, #110	; 0x6e
   12904:	mov	r1, r2
   12908:	mov	r3, #0
   1290c:	str	r8, [sp]
   12910:	str	r0, [sp, #152]	; 0x98
   12914:	add	r0, sp, #152	; 0x98
   12918:	str	r0, [sp, #4]
   1291c:	mov	r0, r6
   12920:	mov	r6, r2
   12924:	mov	r2, #1024	; 0x400
   12928:	bl	11aa0 <recvfrom@plt>
   1292c:	cmp	r0, #1
   12930:	blt	12ab4 <__assert_fail@plt+0xc9c>
   12934:	strb	r9, [r6, r0]
   12938:	movw	r0, #3128	; 0xc38
   1293c:	movt	r0, #3
   12940:	ldr	r0, [r0]
   12944:	mov	r1, r6
   12948:	bl	1367c <__assert_fail@plt+0x1864>
   1294c:	b	1295c <__assert_fail@plt+0xb44>
   12950:	movw	r0, #56519	; 0xdcc7
   12954:	movt	r0, #1
   12958:	bl	134a8 <__assert_fail@plt+0x1690>
   1295c:	sub	r2, fp, #1040	; 0x410
   12960:	b	127ec <__assert_fail@plt+0x9d4>
   12964:	cmn	r0, #1
   12968:	bgt	1299c <__assert_fail@plt+0xb84>
   1296c:	bl	11c50 <__errno_location@plt>
   12970:	ldr	r0, [r0]
   12974:	cmp	r0, #4
   12978:	beq	1299c <__assert_fail@plt+0xb84>
   1297c:	movw	r0, #58482	; 0xe472
   12980:	movt	r0, #1
   12984:	bl	134a8 <__assert_fail@plt+0x1690>
   12988:	movw	r0, #800	; 0x320
   1298c:	mvn	r1, #0
   12990:	movt	r0, #3
   12994:	str	r1, [r5, r7, lsl #3]
   12998:	str	r1, [r0]
   1299c:	mov	r0, r8
   129a0:	mov	r1, #10
   129a4:	strb	r9, [r8, sl]
   129a8:	bl	11c38 <strchr@plt>
   129ac:	cmp	r0, #0
   129b0:	beq	129e8 <__assert_fail@plt+0xbd0>
   129b4:	mov	r6, r8
   129b8:	mov	r8, r0
   129bc:	mov	r0, r6
   129c0:	strb	r9, [r8], #1
   129c4:	bl	1353c <__assert_fail@plt+0x1724>
   129c8:	add	r0, sl, r6
   129cc:	mov	r1, #10
   129d0:	sub	sl, r0, r8
   129d4:	mov	r0, r8
   129d8:	bl	11c38 <strchr@plt>
   129dc:	cmp	r0, #0
   129e0:	mov	r6, r8
   129e4:	bne	129b8 <__assert_fail@plt+0xba0>
   129e8:	cmp	sl, #0
   129ec:	sub	r2, fp, #1040	; 0x410
   129f0:	beq	127e4 <__assert_fail@plt+0x9cc>
   129f4:	ldrb	r0, [r8]
   129f8:	cmp	r0, #0
   129fc:	bne	12a10 <__assert_fail@plt+0xbf8>
   12a00:	subs	sl, sl, #1
   12a04:	add	r8, r8, #1
   12a08:	bne	129f4 <__assert_fail@plt+0xbdc>
   12a0c:	b	127e4 <__assert_fail@plt+0x9cc>
   12a10:	add	r6, sp, #296	; 0x128
   12a14:	cmp	r6, r8
   12a18:	beq	12a34 <__assert_fail@plt+0xc1c>
   12a1c:	mov	r0, r6
   12a20:	mov	r1, r8
   12a24:	mov	r2, sl
   12a28:	bl	11a04 <memmove@plt>
   12a2c:	mov	r8, r6
   12a30:	b	1299c <__assert_fail@plt+0xb84>
   12a34:	cmp	sl, #1024	; 0x400
   12a38:	add	r8, sp, #24
   12a3c:	blt	127ec <__assert_fail@plt+0x9d4>
   12a40:	add	r8, sp, #296	; 0x128
   12a44:	mov	r0, r8
   12a48:	bl	1353c <__assert_fail@plt+0x1724>
   12a4c:	ldrb	r0, [sp, #296]	; 0x128
   12a50:	cmp	r0, #60	; 0x3c
   12a54:	bne	12a88 <__assert_fail@plt+0xc70>
   12a58:	bl	11bfc <__ctype_b_loc@plt>
   12a5c:	ldr	r0, [r0]
   12a60:	ldrb	r1, [sp, #297]	; 0x129
   12a64:	add	r0, r0, r1, lsl #1
   12a68:	ldrb	r0, [r0, #1]
   12a6c:	tst	r0, #8
   12a70:	beq	12a88 <__assert_fail@plt+0xc70>
   12a74:	ldrb	r0, [sp, #298]	; 0x12a
   12a78:	mov	sl, #3
   12a7c:	cmp	r0, #62	; 0x3e
   12a80:	movne	sl, #0
   12a84:	b	1299c <__assert_fail@plt+0xb84>
   12a88:	mov	sl, #0
   12a8c:	b	1299c <__assert_fail@plt+0xb84>
   12a90:	cmn	r0, #1
   12a94:	bgt	1295c <__assert_fail@plt+0xb44>
   12a98:	bl	11c50 <__errno_location@plt>
   12a9c:	ldr	r0, [r0]
   12aa0:	cmp	r0, #4
   12aa4:	beq	1295c <__assert_fail@plt+0xb44>
   12aa8:	movw	r0, #56480	; 0xdca0
   12aac:	movt	r0, #1
   12ab0:	b	12958 <__assert_fail@plt+0xb40>
   12ab4:	cmn	r0, #1
   12ab8:	bgt	1295c <__assert_fail@plt+0xb44>
   12abc:	bl	11c50 <__errno_location@plt>
   12ac0:	ldr	r0, [r0]
   12ac4:	cmp	r0, #4
   12ac8:	beq	1295c <__assert_fail@plt+0xb44>
   12acc:	movw	r0, #56494	; 0xdcae
   12ad0:	movt	r0, #1
   12ad4:	b	12958 <__assert_fail@plt+0xb40>
   12ad8:	ldr	r6, [sp, #296]	; 0x128
   12adc:	cmp	r6, #0
   12ae0:	beq	12be8 <__assert_fail@plt+0xdd0>
   12ae4:	mov	sl, #1
   12ae8:	mov	r8, #4
   12aec:	add	r9, sp, #24
   12af0:	b	12b08 <__assert_fail@plt+0xcf0>
   12af4:	mov	r0, r7
   12af8:	bl	11e00 <close@plt>
   12afc:	ldr	r6, [r6, #28]
   12b00:	cmp	r6, #0
   12b04:	beq	12bdc <__assert_fail@plt+0xdc4>
   12b08:	str	sl, [sp, #24]
   12b0c:	ldmib	r6, {r0, r1, r2}
   12b10:	bl	11dac <socket@plt>
   12b14:	cmp	r0, #0
   12b18:	bmi	12afc <__assert_fail@plt+0xce4>
   12b1c:	mov	r1, #1
   12b20:	mov	r2, #2
   12b24:	mov	r3, r9
   12b28:	mov	r7, r0
   12b2c:	str	r8, [sp]
   12b30:	bl	119b0 <setsockopt@plt>
   12b34:	cmn	r0, #1
   12b38:	bgt	12b48 <__assert_fail@plt+0xd30>
   12b3c:	movw	r0, #59160	; 0xe718
   12b40:	movt	r0, #1
   12b44:	bl	134a8 <__assert_fail@plt+0x1690>
   12b48:	ldr	r0, [r6, #4]
   12b4c:	cmp	r0, #10
   12b50:	bne	12b6c <__assert_fail@plt+0xd54>
   12b54:	mov	r0, r7
   12b58:	mov	r1, #41	; 0x29
   12b5c:	mov	r2, #26
   12b60:	mov	r3, r9
   12b64:	str	r8, [sp]
   12b68:	bl	119b0 <setsockopt@plt>
   12b6c:	ldr	r2, [r6, #16]
   12b70:	ldr	r1, [r6, #20]
   12b74:	mov	r0, r7
   12b78:	bl	11c74 <bind@plt>
   12b7c:	cmn	r0, #1
   12b80:	ble	12af4 <__assert_fail@plt+0xcdc>
   12b84:	ldr	r0, [r6, #4]
   12b88:	cmp	r0, #2
   12b8c:	bne	12bb4 <__assert_fail@plt+0xd9c>
   12b90:	movw	r1, #792	; 0x318
   12b94:	movt	r1, #3
   12b98:	ldr	r1, [r1]
   12b9c:	cmn	r1, #1
   12ba0:	bgt	12bb4 <__assert_fail@plt+0xd9c>
   12ba4:	movw	r0, #792	; 0x318
   12ba8:	movt	r0, #3
   12bac:	str	r7, [r0]
   12bb0:	b	12afc <__assert_fail@plt+0xce4>
   12bb4:	cmp	r0, #10
   12bb8:	bne	12afc <__assert_fail@plt+0xce4>
   12bbc:	movw	r0, #792	; 0x318
   12bc0:	movt	r0, #3
   12bc4:	ldr	r0, [r0, #4]
   12bc8:	cmn	r0, #1
   12bcc:	movwle	r0, #792	; 0x318
   12bd0:	movtle	r0, #3
   12bd4:	strle	r7, [r0, #4]
   12bd8:	b	12afc <__assert_fail@plt+0xce4>
   12bdc:	ldr	r8, [sp, #296]	; 0x128
   12be0:	movw	r7, #792	; 0x318
   12be4:	movt	r7, #3
   12be8:	mov	r0, r8
   12bec:	bl	11d94 <freeaddrinfo@plt>
   12bf0:	ldm	r7, {r0, r1}
   12bf4:	and	r1, r1, r0
   12bf8:	cmn	r1, #1
   12bfc:	bgt	12608 <__assert_fail@plt+0x7f0>
   12c00:	movw	r0, #59187	; 0xe733
   12c04:	movt	r0, #1
   12c08:	b	125f0 <__assert_fail@plt+0x7d8>
   12c0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c10:	add	fp, sp, #24
   12c14:	sub	sp, sp, #40	; 0x28
   12c18:	movw	r8, #1496	; 0x5d8
   12c1c:	mov	r4, r0
   12c20:	movw	r0, #57785	; 0xe1b9
   12c24:	vmov.i32	q8, #0	; 0x00000000
   12c28:	add	r9, sp, #8
   12c2c:	movw	r6, #55867	; 0xda3b
   12c30:	add	r3, sp, #4
   12c34:	movt	r8, #3
   12c38:	movt	r0, #1
   12c3c:	add	r7, r9, #4
   12c40:	movt	r6, #1
   12c44:	add	r5, r9, #16
   12c48:	mov	r2, r9
   12c4c:	str	r0, [r8]
   12c50:	mov	r0, #1
   12c54:	vst1.32	{d16-d17}, [r7]
   12c58:	vst1.32	{d16-d17}, [r5]
   12c5c:	mov	r1, r6
   12c60:	str	r0, [sp, #8]
   12c64:	mov	r0, #2
   12c68:	str	r0, [sp, #16]
   12c6c:	mov	r0, #0
   12c70:	bl	11da0 <getaddrinfo@plt>
   12c74:	cmp	r0, #0
   12c78:	bne	12c88 <__assert_fail@plt+0xe70>
   12c7c:	ldr	r0, [sp, #4]
   12c80:	str	r6, [r8]
   12c84:	bl	11d94 <freeaddrinfo@plt>
   12c88:	movw	r6, #1492	; 0x5d4
   12c8c:	cmp	r4, #0
   12c90:	movt	r6, #3
   12c94:	str	r4, [r6]
   12c98:	beq	12ce4 <__assert_fail@plt+0xecc>
   12c9c:	vmov.i32	q8, #0	; 0x00000000
   12ca0:	mov	r0, #1
   12ca4:	add	r3, sp, #4
   12ca8:	mov	r1, r4
   12cac:	mov	r2, r9
   12cb0:	vst1.32	{d16-d17}, [r7]
   12cb4:	vst1.32	{d16-d17}, [r5]
   12cb8:	str	r0, [sp, #8]
   12cbc:	mov	r0, #2
   12cc0:	mov	r5, #0
   12cc4:	str	r0, [sp, #16]
   12cc8:	mov	r0, #0
   12ccc:	bl	11da0 <getaddrinfo@plt>
   12cd0:	cmp	r0, #0
   12cd4:	beq	12cf4 <__assert_fail@plt+0xedc>
   12cd8:	str	r5, [r6]
   12cdc:	sub	sp, fp, #24
   12ce0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ce4:	ldr	r0, [r8]
   12ce8:	str	r0, [r6]
   12cec:	sub	sp, fp, #24
   12cf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12cf4:	ldr	r0, [sp, #4]
   12cf8:	bl	11d94 <freeaddrinfo@plt>
   12cfc:	sub	sp, fp, #24
   12d00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12d04:	push	{fp, lr}
   12d08:	mov	fp, sp
   12d0c:	mov	r0, #0
   12d10:	bl	11a4c <_exit@plt>
   12d14:	push	{fp, lr}
   12d18:	mov	fp, sp
   12d1c:	sub	sp, sp, #104	; 0x68
   12d20:	movw	r8, #3120	; 0xc30
   12d24:	mov	r4, r0
   12d28:	mov	r0, #0
   12d2c:	movt	r8, #3
   12d30:	ldr	r7, [r8]
   12d34:	str	r0, [r8]
   12d38:	movw	r0, #2632	; 0xa48
   12d3c:	movt	r0, #3
   12d40:	ldr	r5, [r0]
   12d44:	cmp	r5, #0
   12d48:	beq	12d88 <__assert_fail@plt+0xf70>
   12d4c:	movw	r6, #3128	; 0xc38
   12d50:	movt	r6, #3
   12d54:	b	12d64 <__assert_fail@plt+0xf4c>
   12d58:	ldr	r5, [r5]
   12d5c:	cmp	r5, #0
   12d60:	beq	12d88 <__assert_fail@plt+0xf70>
   12d64:	ldr	r0, [r5, #452]	; 0x1c4
   12d68:	cmp	r0, #0
   12d6c:	beq	12d58 <__assert_fail@plt+0xf40>
   12d70:	ldr	r1, [r6]
   12d74:	mov	r0, r5
   12d78:	mov	r2, #0
   12d7c:	mov	r3, #0
   12d80:	bl	141ac <__assert_fail@plt+0x2394>
   12d84:	b	12d58 <__assert_fail@plt+0xf40>
   12d88:	cmp	r4, #0
   12d8c:	str	r7, [r8]
   12d90:	beq	12de0 <__assert_fail@plt+0xfc8>
   12d94:	movw	r0, #1468	; 0x5bc
   12d98:	mov	r2, r4
   12d9c:	movt	r0, #3
   12da0:	ldr	r1, [r0]
   12da4:	movw	r0, #57393	; 0xe031
   12da8:	movt	r0, #1
   12dac:	bl	1341c <__assert_fail@plt+0x1604>
   12db0:	movw	r2, #57419	; 0xe04b
   12db4:	add	r5, sp, #4
   12db8:	mov	r1, #100	; 0x64
   12dbc:	mov	r3, r4
   12dc0:	movt	r2, #1
   12dc4:	mov	r0, r5
   12dc8:	bl	11c5c <snprintf@plt>
   12dcc:	bl	11c50 <__errno_location@plt>
   12dd0:	mov	r1, #0
   12dd4:	str	r1, [r0]
   12dd8:	mov	r0, r5
   12ddc:	bl	134a8 <__assert_fail@plt+0x1690>
   12de0:	movw	r0, #800	; 0x320
   12de4:	movt	r0, #3
   12de8:	ldr	r0, [r0]
   12dec:	cmp	r0, #0
   12df0:	bmi	12df8 <__assert_fail@plt+0xfe0>
   12df4:	bl	11e00 <close@plt>
   12df8:	movw	r4, #3104	; 0xc20
   12dfc:	movt	r4, #3
   12e00:	ldr	r0, [r4]
   12e04:	cmp	r0, #0
   12e08:	beq	12e5c <__assert_fail@plt+0x1044>
   12e0c:	movw	r6, #3200	; 0xc80
   12e10:	mov	r5, #0
   12e14:	movt	r6, #3
   12e18:	b	12e2c <__assert_fail@plt+0x1014>
   12e1c:	ldr	r0, [r4]
   12e20:	add	r5, r5, #1
   12e24:	cmp	r5, r0
   12e28:	bcs	12e5c <__assert_fail@plt+0x1044>
   12e2c:	ldr	r0, [r6]
   12e30:	add	r0, r0, r5, lsl #3
   12e34:	ldr	r0, [r0, #4]
   12e38:	cmp	r0, #0
   12e3c:	bmi	12e1c <__assert_fail@plt+0x1004>
   12e40:	bl	11e00 <close@plt>
   12e44:	ldr	r0, [r6]
   12e48:	ldr	r0, [r0, r5, lsl #3]
   12e4c:	cmp	r0, #0
   12e50:	beq	12e1c <__assert_fail@plt+0x1004>
   12e54:	bl	11adc <unlink@plt>
   12e58:	b	12e1c <__assert_fail@plt+0x1004>
   12e5c:	movw	r4, #792	; 0x318
   12e60:	movt	r4, #3
   12e64:	ldr	r0, [r4]
   12e68:	cmp	r0, #0
   12e6c:	bmi	12e74 <__assert_fail@plt+0x105c>
   12e70:	bl	11e00 <close@plt>
   12e74:	ldr	r0, [r4, #4]
   12e78:	cmp	r0, #0
   12e7c:	bmi	12e84 <__assert_fail@plt+0x106c>
   12e80:	bl	11e00 <close@plt>
   12e84:	mov	r0, #0
   12e88:	bl	11c14 <exit@plt>
   12e8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e90:	add	fp, sp, #28
   12e94:	sub	sp, sp, #4
   12e98:	mov	r0, #0
   12e9c:	bl	11a70 <time@plt>
   12ea0:	movw	r6, #3192	; 0xc78
   12ea4:	movt	r6, #3
   12ea8:	str	r0, [r6]
   12eac:	movw	r0, #804	; 0x324
   12eb0:	movt	r0, #3
   12eb4:	ldr	r0, [r0]
   12eb8:	cmp	r0, #1
   12ebc:	blt	12f04 <__assert_fail@plt+0x10ec>
   12ec0:	movw	r4, #3204	; 0xc84
   12ec4:	movt	r4, #3
   12ec8:	ldr	r1, [r4]
   12ecc:	add	r1, r1, #30
   12ed0:	cmp	r1, r0
   12ed4:	str	r1, [r4]
   12ed8:	blt	12f04 <__assert_fail@plt+0x10ec>
   12edc:	movw	r0, #3128	; 0xc38
   12ee0:	movw	r1, #57316	; 0xdfe4
   12ee4:	mov	r3, #12
   12ee8:	movt	r0, #3
   12eec:	movt	r1, #1
   12ef0:	ldr	r2, [r0]
   12ef4:	mov	r0, #6
   12ef8:	bl	13ba8 <__assert_fail@plt+0x1d90>
   12efc:	mov	r0, #0
   12f00:	str	r0, [r4]
   12f04:	movw	r0, #2632	; 0xa48
   12f08:	movt	r0, #3
   12f0c:	ldr	r4, [r0]
   12f10:	cmp	r4, #0
   12f14:	beq	12fac <__assert_fail@plt+0x1194>
   12f18:	movw	r7, #780	; 0x30c
   12f1c:	movw	r8, #740	; 0x2e4
   12f20:	movw	r9, #57327	; 0xdfef
   12f24:	movw	sl, #3128	; 0xc38
   12f28:	mvn	r5, #0
   12f2c:	movt	r7, #3
   12f30:	movt	r8, #3
   12f34:	movt	r9, #1
   12f38:	movt	sl, #3
   12f3c:	b	12f4c <__assert_fail@plt+0x1134>
   12f40:	ldr	r4, [r4]
   12f44:	cmp	r4, #0
   12f48:	beq	12fac <__assert_fail@plt+0x1194>
   12f4c:	ldr	r2, [r4, #452]	; 0x1c4
   12f50:	cmp	r2, #0
   12f54:	beq	12f40 <__assert_fail@plt+0x1128>
   12f58:	ldr	r1, [r4, #456]	; 0x1c8
   12f5c:	ldr	r0, [r4, #8]
   12f60:	ldr	r3, [r7, r1, lsl #2]
   12f64:	ldr	r1, [r6]
   12f68:	add	r0, r3, r0
   12f6c:	cmp	r1, r0
   12f70:	blt	12f40 <__assert_fail@plt+0x1128>
   12f74:	ldrsh	r0, [r4, #4]
   12f78:	ldr	r1, [r8, r0, lsl #2]
   12f7c:	mov	r0, r9
   12f80:	bl	1341c <__assert_fail@plt+0x1604>
   12f84:	ldr	r1, [sl]
   12f88:	mov	r0, r4
   12f8c:	mov	r2, #0
   12f90:	mov	r3, #0
   12f94:	bl	141ac <__assert_fail@plt+0x2394>
   12f98:	ldr	r0, [r4, #456]	; 0x1c8
   12f9c:	subs	r0, r0, r5
   12fa0:	movwne	r0, #1
   12fa4:	str	r0, [r4, #456]	; 0x1c8
   12fa8:	b	12f40 <__assert_fail@plt+0x1128>
   12fac:	mov	r0, #30
   12fb0:	sub	sp, fp, #28
   12fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fb8:	b	11ac4 <alarm@plt>
   12fbc:	push	{r4, r5, fp, lr}
   12fc0:	add	fp, sp, #8
   12fc4:	movw	r4, #1504	; 0x5e0
   12fc8:	mov	r0, #1
   12fcc:	movw	r1, #57779	; 0xe1b3
   12fd0:	movt	r4, #3
   12fd4:	movt	r1, #1
   12fd8:	ldr	r5, [r4]
   12fdc:	str	r0, [r4]
   12fe0:	movw	r0, #57774	; 0xe1ae
   12fe4:	movt	r0, #1
   12fe8:	cmp	r5, #0
   12fec:	moveq	r1, r0
   12ff0:	movw	r0, #57745	; 0xe191
   12ff4:	movt	r0, #1
   12ff8:	bl	1341c <__assert_fail@plt+0x1604>
   12ffc:	clz	r0, r5
   13000:	lsr	r0, r0, #5
   13004:	str	r0, [r4]
   13008:	pop	{r4, r5, fp, pc}
   1300c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13010:	add	fp, sp, #28
   13014:	sub	sp, sp, #116	; 0x74
   13018:	movw	r0, #57440	; 0xe060
   1301c:	movt	r0, #1
   13020:	bl	1341c <__assert_fail@plt+0x1604>
   13024:	movw	r0, #3120	; 0xc30
   13028:	mov	r8, #0
   1302c:	movw	sl, #3128	; 0xc38
   13030:	movt	r0, #3
   13034:	movt	sl, #3
   13038:	str	r8, [r0]
   1303c:	movw	r0, #2632	; 0xa48
   13040:	movt	r0, #3
   13044:	ldr	r5, [r0]
   13048:	cmp	r5, #0
   1304c:	beq	1311c <__assert_fail@plt+0x1304>
   13050:	mov	r6, #1
   13054:	movw	r7, #526	; 0x20e
   13058:	mov	r9, #400	; 0x190
   1305c:	b	13094 <__assert_fail@plt+0x127c>
   13060:	ldr	r0, [r4, #40]	; 0x28
   13064:	bl	1aed8 <argp_parse@@Base+0x14bc>
   13068:	ldrsh	r0, [r4, #6]
   1306c:	bl	11e00 <close@plt>
   13070:	ldr	r0, [r4, #436]	; 0x1b4
   13074:	bl	1aed8 <argp_parse@@Base+0x14bc>
   13078:	ldr	r0, [r4, #432]	; 0x1b0
   1307c:	bl	1aed8 <argp_parse@@Base+0x14bc>
   13080:	ldr	r5, [r4]
   13084:	mov	r0, r4
   13088:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1308c:	cmp	r5, #0
   13090:	beq	1311c <__assert_fail@plt+0x1304>
   13094:	ldr	r0, [r5, #452]	; 0x1c4
   13098:	mov	r4, r5
   1309c:	cmp	r0, #0
   130a0:	beq	130b8 <__assert_fail@plt+0x12a0>
   130a4:	ldr	r1, [sl]
   130a8:	mov	r0, r4
   130ac:	mov	r2, #0
   130b0:	mov	r3, #0
   130b4:	bl	141ac <__assert_fail@plt+0x2394>
   130b8:	ldrsh	r0, [r4, #4]
   130bc:	cmp	r0, #9
   130c0:	bhi	13070 <__assert_fail@plt+0x1258>
   130c4:	tst	r7, r6, lsl r0
   130c8:	bne	13060 <__assert_fail@plt+0x1248>
   130cc:	tst	r9, r6, lsl r0
   130d0:	beq	130e0 <__assert_fail@plt+0x12c8>
   130d4:	ldr	r0, [r4, #40]	; 0x28
   130d8:	bl	1aed8 <argp_parse@@Base+0x14bc>
   130dc:	b	13070 <__assert_fail@plt+0x1258>
   130e0:	cmp	r0, #5
   130e4:	bne	13070 <__assert_fail@plt+0x1258>
   130e8:	ldr	r1, [r4, #40]	; 0x28
   130ec:	ldr	r0, [r4, #44]	; 0x2c
   130f0:	cmp	r1, #1
   130f4:	blt	130d8 <__assert_fail@plt+0x12c0>
   130f8:	mov	r5, #0
   130fc:	ldr	r0, [r0, r5, lsl #2]
   13100:	bl	1aed8 <argp_parse@@Base+0x14bc>
   13104:	ldr	r1, [r4, #40]	; 0x28
   13108:	ldr	r0, [r4, #44]	; 0x2c
   1310c:	add	r5, r5, #1
   13110:	cmp	r5, r1
   13114:	blt	130fc <__assert_fail@plt+0x12e4>
   13118:	b	130d8 <__assert_fail@plt+0x12c0>
   1311c:	movw	r0, #2628	; 0xa44
   13120:	movt	r0, #3
   13124:	str	r8, [r0]
   13128:	movw	r0, #2632	; 0xa48
   1312c:	movt	r0, #3
   13130:	str	r8, [r0]
   13134:	movw	r0, #712	; 0x2c8
   13138:	movt	r0, #3
   1313c:	ldr	r0, [r0]
   13140:	bl	14a30 <__assert_fail@plt+0x2c18>
   13144:	str	r0, [sp]
   13148:	movw	r0, #716	; 0x2cc
   1314c:	movt	r0, #3
   13150:	ldr	r5, [r0]
   13154:	mov	r0, r5
   13158:	bl	11b84 <opendir@plt>
   1315c:	cmp	r0, #0
   13160:	beq	1320c <__assert_fail@plt+0x13f4>
   13164:	mov	r6, r0
   13168:	bl	11d4c <readdir64@plt>
   1316c:	cmp	r0, #0
   13170:	beq	13220 <__assert_fail@plt+0x1408>
   13174:	movw	r7, #59344	; 0xe7d0
   13178:	mov	r8, #0
   1317c:	add	r4, sp, #4
   13180:	add	r9, sp, #8
   13184:	mov	sl, #0
   13188:	movt	r7, #1
   1318c:	b	131ac <__assert_fail@plt+0x1394>
   13190:	movw	r0, #59400	; 0xe808
   13194:	movt	r0, #1
   13198:	bl	1341c <__assert_fail@plt+0x1604>
   1319c:	mov	r0, r6
   131a0:	bl	11d4c <readdir64@plt>
   131a4:	cmp	r0, #0
   131a8:	beq	13244 <__assert_fail@plt+0x142c>
   131ac:	add	r3, r0, #19
   131b0:	mov	r0, r4
   131b4:	mov	r1, r7
   131b8:	mov	r2, r5
   131bc:	bl	11ca4 <asprintf@plt>
   131c0:	cmn	r0, #1
   131c4:	ble	1322c <__assert_fail@plt+0x1414>
   131c8:	ldr	r1, [sp, #4]
   131cc:	mov	r0, #3
   131d0:	mov	r2, r9
   131d4:	bl	11dc4 <__xstat64@plt>
   131d8:	cmp	r0, #0
   131dc:	bne	13190 <__assert_fail@plt+0x1378>
   131e0:	ldr	r0, [sp, #24]
   131e4:	and	r0, r0, #61440	; 0xf000
   131e8:	cmp	r0, #32768	; 0x8000
   131ec:	bne	13200 <__assert_fail@plt+0x13e8>
   131f0:	ldr	r0, [sp, #4]
   131f4:	bl	14a30 <__assert_fail@plt+0x2c18>
   131f8:	add	r8, r0, r8
   131fc:	add	sl, sl, #1
   13200:	ldr	r0, [sp, #4]
   13204:	bl	1aed8 <argp_parse@@Base+0x14bc>
   13208:	b	1319c <__assert_fail@plt+0x1384>
   1320c:	movw	r0, #59216	; 0xe750
   13210:	mov	r1, r5
   13214:	movt	r0, #1
   13218:	bl	1341c <__assert_fail@plt+0x1604>
   1321c:	b	1326c <__assert_fail@plt+0x1454>
   13220:	mov	r0, r6
   13224:	bl	11e0c <closedir@plt>
   13228:	b	1326c <__assert_fail@plt+0x1454>
   1322c:	movw	r0, #59350	; 0xe7d6
   13230:	movt	r0, #1
   13234:	bl	1341c <__assert_fail@plt+0x1604>
   13238:	movw	sl, #3128	; 0xc38
   1323c:	movt	sl, #3
   13240:	b	13264 <__assert_fail@plt+0x144c>
   13244:	mov	r0, r6
   13248:	bl	11e0c <closedir@plt>
   1324c:	cmp	sl, #0
   13250:	beq	13410 <__assert_fail@plt+0x15f8>
   13254:	movw	sl, #3128	; 0xc38
   13258:	cmp	r8, #0
   1325c:	movt	sl, #3
   13260:	bne	1326c <__assert_fail@plt+0x1454>
   13264:	mov	r0, #0
   13268:	str	r0, [sp]
   1326c:	movw	r1, #3120	; 0xc30
   13270:	mov	r0, #1
   13274:	movt	r1, #3
   13278:	str	r0, [r1]
   1327c:	movw	r0, #3108	; 0xc24
   13280:	movt	r0, #3
   13284:	ldr	r0, [r0]
   13288:	cmp	r0, #0
   1328c:	beq	133a4 <__assert_fail@plt+0x158c>
   13290:	movw	r0, #2632	; 0xa48
   13294:	movt	r0, #3
   13298:	ldr	r8, [r0]
   1329c:	cmp	r8, #0
   132a0:	beq	133a4 <__assert_fail@plt+0x158c>
   132a4:	movw	r5, #57446	; 0xe066
   132a8:	movw	r4, #57460	; 0xe074
   132ac:	movw	r6, #57450	; 0xe06a
   132b0:	movt	r5, #1
   132b4:	movt	r4, #1
   132b8:	movt	r6, #1
   132bc:	b	132e8 <__assert_fail@plt+0x14d0>
   132c0:	ldr	r1, [r8, #40]	; 0x28
   132c4:	movw	r0, #59892	; 0xe9f4
   132c8:	movt	r0, #1
   132cc:	bl	1341c <__assert_fail@plt+0x1604>
   132d0:	movw	r0, #56700	; 0xdd7c
   132d4:	movt	r0, #1
   132d8:	bl	1341c <__assert_fail@plt+0x1604>
   132dc:	ldr	r8, [r8]
   132e0:	cmp	r8, #0
   132e4:	beq	133a4 <__assert_fail@plt+0x158c>
   132e8:	mov	r9, sl
   132ec:	add	sl, r8, #12
   132f0:	mov	r7, #0
   132f4:	b	1330c <__assert_fail@plt+0x14f4>
   132f8:	mov	r0, r6
   132fc:	bl	1341c <__assert_fail@plt+0x1604>
   13300:	sub	r7, r7, #1
   13304:	cmn	r7, #25
   13308:	beq	13324 <__assert_fail@plt+0x150c>
   1330c:	ldrb	r1, [sl, -r7]
   13310:	cmp	r1, #0
   13314:	bne	132f8 <__assert_fail@plt+0x14e0>
   13318:	mov	r0, r5
   1331c:	bl	1341c <__assert_fail@plt+0x1604>
   13320:	b	13300 <__assert_fail@plt+0x14e8>
   13324:	ldrsh	r0, [r8, #4]
   13328:	movw	r1, #740	; 0x2e4
   1332c:	movt	r1, #3
   13330:	ldr	r1, [r1, r0, lsl #2]
   13334:	movw	r0, #57455	; 0xe06f
   13338:	movt	r0, #1
   1333c:	bl	1341c <__assert_fail@plt+0x1604>
   13340:	ldrsh	r0, [r8, #4]
   13344:	mov	sl, r9
   13348:	cmp	r0, #9
   1334c:	bhi	132d0 <__assert_fail@plt+0x14b8>
   13350:	mov	r1, #1
   13354:	movw	r2, #526	; 0x20e
   13358:	tst	r2, r1, lsl r0
   1335c:	moveq	r2, #400	; 0x190
   13360:	tsteq	r2, r1, lsl r0
   13364:	bne	132c0 <__assert_fail@plt+0x14a8>
   13368:	cmp	r0, #5
   1336c:	bne	132d0 <__assert_fail@plt+0x14b8>
   13370:	ldr	r0, [r8, #40]	; 0x28
   13374:	cmp	r0, #1
   13378:	blt	132d0 <__assert_fail@plt+0x14b8>
   1337c:	mov	r7, #0
   13380:	ldr	r0, [r8, #44]	; 0x2c
   13384:	ldr	r1, [r0, r7, lsl #2]
   13388:	mov	r0, r4
   1338c:	bl	1341c <__assert_fail@plt+0x1604>
   13390:	ldr	r0, [r8, #40]	; 0x28
   13394:	add	r7, r7, #1
   13398:	cmp	r7, r0
   1339c:	blt	13380 <__assert_fail@plt+0x1568>
   133a0:	b	132d0 <__assert_fail@plt+0x14b8>
   133a4:	movw	r0, #2624	; 0xa40
   133a8:	movw	r2, #57530	; 0xe0ba
   133ac:	movw	r1, #57465	; 0xe079
   133b0:	mov	r3, #4
   133b4:	movt	r0, #3
   133b8:	movt	r2, #1
   133bc:	movt	r1, #1
   133c0:	ldr	r0, [r0]
   133c4:	cmp	r0, #0
   133c8:	mov	r0, #46	; 0x2e
   133cc:	moveq	r1, r2
   133d0:	ldr	r2, [sl]
   133d4:	bl	13ba8 <__assert_fail@plt+0x1d90>
   133d8:	ldr	r0, [sp]
   133dc:	cmp	r0, #0
   133e0:	bne	133fc <__assert_fail@plt+0x15e4>
   133e4:	ldr	r2, [sl]
   133e8:	movw	r1, #57576	; 0xe0e8
   133ec:	mov	r0, #43	; 0x2b
   133f0:	mov	r3, #4
   133f4:	movt	r1, #1
   133f8:	bl	13ba8 <__assert_fail@plt+0x1d90>
   133fc:	movw	r0, #57611	; 0xe10b
   13400:	movt	r0, #1
   13404:	bl	1341c <__assert_fail@plt+0x1604>
   13408:	sub	sp, fp, #28
   1340c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13410:	movw	sl, #3128	; 0xc38
   13414:	movt	sl, #3
   13418:	b	1326c <__assert_fail@plt+0x1454>
   1341c:	sub	sp, sp, #12
   13420:	push	{r4, sl, fp, lr}
   13424:	add	fp, sp, #8
   13428:	sub	sp, sp, #4
   1342c:	mov	ip, r0
   13430:	add	r0, fp, #8
   13434:	stm	r0, {r1, r2, r3}
   13438:	movw	r0, #3132	; 0xc3c
   1343c:	movt	r0, #3
   13440:	ldr	r0, [r0]
   13444:	cmp	r0, #0
   13448:	beq	13484 <__assert_fail@plt+0x166c>
   1344c:	movw	r0, #1504	; 0x5e0
   13450:	movt	r0, #3
   13454:	ldr	r0, [r0]
   13458:	cmp	r0, #0
   1345c:	beq	13484 <__assert_fail@plt+0x166c>
   13460:	movw	r4, #1476	; 0x5c4
   13464:	add	r2, fp, #8
   13468:	mov	r1, ip
   1346c:	movt	r4, #3
   13470:	str	r2, [sp]
   13474:	ldr	r0, [r4]
   13478:	bl	11d34 <vfprintf@plt>
   1347c:	ldr	r0, [r4]
   13480:	bl	119e0 <fflush@plt>
   13484:	sub	sp, fp, #8
   13488:	pop	{r4, sl, fp, lr}
   1348c:	add	sp, sp, #12
   13490:	bx	lr
   13494:	movw	r0, #1508	; 0x5e4
   13498:	mov	r1, #1
   1349c:	movt	r0, #3
   134a0:	strb	r1, [r0]
   134a4:	bx	lr
   134a8:	push	{r4, r5, fp, lr}
   134ac:	add	fp, sp, #8
   134b0:	sub	sp, sp, #104	; 0x68
   134b4:	mov	r5, r0
   134b8:	bl	11c50 <__errno_location@plt>
   134bc:	mov	r4, r0
   134c0:	ldr	r0, [r0]
   134c4:	cmp	r0, #0
   134c8:	beq	134e4 <__assert_fail@plt+0x16cc>
   134cc:	bl	11bcc <strerror@plt>
   134d0:	movw	r2, #57365	; 0xe015
   134d4:	str	r0, [sp]
   134d8:	add	r0, sp, #4
   134dc:	movt	r2, #1
   134e0:	b	134f0 <__assert_fail@plt+0x16d8>
   134e4:	movw	r2, #57381	; 0xe025
   134e8:	add	r0, sp, #4
   134ec:	movt	r2, #1
   134f0:	mov	r1, #100	; 0x64
   134f4:	mov	r3, r5
   134f8:	bl	11c5c <snprintf@plt>
   134fc:	mov	r0, #0
   13500:	str	r0, [r4]
   13504:	movw	r0, #61203	; 0xef13
   13508:	add	r4, sp, #4
   1350c:	movt	r0, #1
   13510:	mov	r1, r4
   13514:	bl	1341c <__assert_fail@plt+0x1604>
   13518:	movw	r0, #3128	; 0xc38
   1351c:	mov	r1, r4
   13520:	mov	r3, #4
   13524:	movt	r0, #3
   13528:	ldr	r2, [r0]
   1352c:	mov	r0, #43	; 0x2b
   13530:	bl	13ba8 <__assert_fail@plt+0x1d90>
   13534:	sub	sp, fp, #8
   13538:	pop	{r4, r5, fp, pc}
   1353c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13540:	add	fp, sp, #28
   13544:	sub	sp, sp, #12
   13548:	sub	sp, sp, #1024	; 0x400
   1354c:	mov	r6, r0
   13550:	movw	r0, #59464	; 0xe848
   13554:	mov	r8, sp
   13558:	mov	sl, #0
   1355c:	movt	r0, #1
   13560:	strb	sl, [sp, #8]
   13564:	vldr	d16, [r0]
   13568:	mov	r0, r8
   1356c:	vstr	d16, [sp]
   13570:	bl	11c20 <strlen@plt>
   13574:	movw	r9, #3128	; 0xc38
   13578:	add	r7, r8, r0
   1357c:	add	r4, r8, #1024	; 0x400
   13580:	movt	r9, #3
   13584:	b	1359c <__assert_fail@plt+0x1784>
   13588:	mov	r2, r7
   1358c:	strb	sl, [r2]
   13590:	ldr	r2, [r9]
   13594:	mov	r1, r8
   13598:	bl	13ba8 <__assert_fail@plt+0x1d90>
   1359c:	ldrb	r1, [r6]
   135a0:	cmp	r1, #60	; 0x3c
   135a4:	beq	135c4 <__assert_fail@plt+0x17ac>
   135a8:	cmp	r1, #0
   135ac:	beq	13674 <__assert_fail@plt+0x185c>
   135b0:	mov	r0, #2
   135b4:	mov	r3, #7
   135b8:	cmp	r1, #0
   135bc:	bne	13640 <__assert_fail@plt+0x1828>
   135c0:	b	13588 <__assert_fail@plt+0x1770>
   135c4:	bl	11bfc <__ctype_b_loc@plt>
   135c8:	mov	r3, r6
   135cc:	ldr	r2, [r0]
   135d0:	ldrb	r1, [r3, #1]!
   135d4:	add	r0, r2, r1, lsl #1
   135d8:	ldrb	r0, [r0, #1]
   135dc:	tst	r0, #8
   135e0:	bne	135f8 <__assert_fail@plt+0x17e0>
   135e4:	cmp	r1, #62	; 0x3e
   135e8:	mov	r0, #0
   135ec:	addeq	r3, r6, #2
   135f0:	mov	r6, r3
   135f4:	b	13630 <__assert_fail@plt+0x1818>
   135f8:	add	r6, r6, #2
   135fc:	mov	r0, #0
   13600:	add	r0, r0, r0, lsl #2
   13604:	add	r0, r1, r0, lsl #1
   13608:	ldrb	r1, [r6], #1
   1360c:	sub	r0, r0, #48	; 0x30
   13610:	add	r3, r2, r1, lsl #1
   13614:	ldrb	r3, [r3, #1]
   13618:	tst	r3, #8
   1361c:	bne	13600 <__assert_fail@plt+0x17e8>
   13620:	cmp	r1, #62	; 0x3e
   13624:	subne	r6, r6, #1
   13628:	cmp	sl, r0, lsr #10
   1362c:	movwne	r0, #2
   13630:	ldrb	r1, [r6]
   13634:	mov	r3, #6
   13638:	cmp	r1, #0
   1363c:	beq	13588 <__assert_fail@plt+0x1770>
   13640:	add	r5, r6, #1
   13644:	mov	r2, r7
   13648:	mov	r6, r5
   1364c:	cmp	r2, r4
   13650:	bcs	1358c <__assert_fail@plt+0x1774>
   13654:	uxtb	r5, r1
   13658:	cmp	r5, #10
   1365c:	strbne	r1, [r2], #1
   13660:	movne	r5, r6
   13664:	ldrbne	r1, [r5], #1
   13668:	cmpne	r1, #0
   1366c:	bne	13648 <__assert_fail@plt+0x1830>
   13670:	b	1358c <__assert_fail@plt+0x1774>
   13674:	sub	sp, fp, #28
   13678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1367c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13680:	add	fp, sp, #24
   13684:	sub	sp, sp, #8
   13688:	sub	sp, sp, #1024	; 0x400
   1368c:	ldrb	r4, [r1]
   13690:	mov	r6, r1
   13694:	mov	r8, r0
   13698:	cmp	r4, #60	; 0x3c
   1369c:	bne	136d4 <__assert_fail@plt+0x18bc>
   136a0:	bl	11bfc <__ctype_b_loc@plt>
   136a4:	mov	r3, r6
   136a8:	ldr	r2, [r0]
   136ac:	ldrb	r1, [r3, #1]!
   136b0:	add	r0, r2, r1, lsl #1
   136b4:	ldrb	r0, [r0, #1]
   136b8:	tst	r0, #8
   136bc:	bne	136dc <__assert_fail@plt+0x18c4>
   136c0:	cmp	r1, #62	; 0x3e
   136c4:	mov	r0, #0
   136c8:	addeq	r3, r6, #2
   136cc:	mov	r6, r3
   136d0:	b	13718 <__assert_fail@plt+0x1900>
   136d4:	mov	r0, #13
   136d8:	b	1371c <__assert_fail@plt+0x1904>
   136dc:	add	r6, r6, #2
   136e0:	mov	r0, #0
   136e4:	add	r0, r0, r0, lsl #2
   136e8:	add	r0, r1, r0, lsl #1
   136ec:	ldrb	r1, [r6], #1
   136f0:	sub	r0, r0, #48	; 0x30
   136f4:	add	r3, r2, r1, lsl #1
   136f8:	ldrb	r3, [r3, #1]
   136fc:	tst	r3, #8
   13700:	bne	136e4 <__assert_fail@plt+0x18cc>
   13704:	cmp	r1, #62	; 0x3e
   13708:	mov	r1, #0
   1370c:	subne	r6, r6, #1
   13710:	cmp	r1, r0, lsr #10
   13714:	movwne	r0, #13
   13718:	ldrb	r4, [r6]
   1371c:	and	r1, r0, #1016	; 0x3f8
   13720:	add	r7, sp, #3
   13724:	cmp	r1, #192	; 0xc0
   13728:	mov	r1, #1
   1372c:	movwhi	r0, #13
   13730:	mov	r9, r0
   13734:	tst	r0, #1016	; 0x3f8
   13738:	bfi	r9, r1, #3, #29
   1373c:	movne	r9, r0
   13740:	cmp	r4, #0
   13744:	beq	137cc <__assert_fail@plt+0x19b4>
   13748:	add	r5, r7, #1024	; 0x400
   1374c:	add	r6, r6, #1
   13750:	add	r7, sp, #3
   13754:	bl	11bfc <__ctype_b_loc@plt>
   13758:	mov	lr, #9
   1375c:	mov	r2, #32
   13760:	mov	ip, #94	; 0x5e
   13764:	ldr	r1, [r0]
   13768:	uxtb	r3, r4
   1376c:	ldrb	r1, [r1, r3, lsl #1]
   13770:	tst	r1, #2
   13774:	bne	13780 <__assert_fail@plt+0x1968>
   13778:	strb	r4, [r7]
   1377c:	b	137b4 <__assert_fail@plt+0x199c>
   13780:	cmp	r3, #9
   13784:	beq	13798 <__assert_fail@plt+0x1980>
   13788:	cmp	r3, #10
   1378c:	bne	137a0 <__assert_fail@plt+0x1988>
   13790:	strb	r2, [r7]
   13794:	b	137b4 <__assert_fail@plt+0x199c>
   13798:	strb	lr, [r7]
   1379c:	b	137b4 <__assert_fail@plt+0x199c>
   137a0:	cmp	r3, #127	; 0x7f
   137a4:	bcs	13778 <__assert_fail@plt+0x1960>
   137a8:	eor	r1, r4, #64	; 0x40
   137ac:	strb	ip, [r7]
   137b0:	strb	r1, [r7, #1]!
   137b4:	add	r7, r7, #1
   137b8:	cmp	r7, r5
   137bc:	bcs	137cc <__assert_fail@plt+0x19b4>
   137c0:	ldrb	r4, [r6], #1
   137c4:	cmp	r4, #0
   137c8:	bne	13764 <__assert_fail@plt+0x194c>
   137cc:	mov	r0, #0
   137d0:	add	r1, sp, #3
   137d4:	mov	r2, r8
   137d8:	strb	r0, [r7]
   137dc:	movw	r0, #3116	; 0xc2c
   137e0:	movt	r0, #3
   137e4:	ldr	r0, [r0]
   137e8:	cmp	r0, #0
   137ec:	movwne	r0, #1
   137f0:	lsl	r3, r0, #1
   137f4:	mov	r0, r9
   137f8:	bl	13ba8 <__assert_fail@plt+0x1d90>
   137fc:	sub	sp, fp, #24
   13800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13804:	push	{r4, r5, r6, r7, fp, lr}
   13808:	add	fp, sp, #16
   1380c:	sub	sp, sp, #16
   13810:	movw	r2, #3144	; 0xc48
   13814:	mov	r6, r0
   13818:	mov	r0, #1
   1381c:	mov	r4, #0
   13820:	mov	r3, #46	; 0x2e
   13824:	mov	r5, r1
   13828:	movt	r2, #3
   1382c:	str	r0, [sp, #8]
   13830:	mov	r0, r6
   13834:	str	r4, [sp]
   13838:	str	r4, [sp, #4]
   1383c:	bl	11d1c <getnameinfo@plt>
   13840:	cmp	r0, #0
   13844:	beq	13868 <__assert_fail@plt+0x1a50>
   13848:	bl	11a28 <gai_strerror@plt>
   1384c:	mov	r1, r0
   13850:	movw	r0, #57227	; 0xdf8b
   13854:	movt	r0, #1
   13858:	bl	1341c <__assert_fail@plt+0x1604>
   1385c:	movw	r4, #57256	; 0xdfa8
   13860:	movt	r4, #1
   13864:	b	138c8 <__assert_fail@plt+0x1ab0>
   13868:	movw	r7, #3144	; 0xc48
   1386c:	movw	r0, #57260	; 0xdfac
   13870:	movt	r7, #3
   13874:	movt	r0, #1
   13878:	mov	r1, r7
   1387c:	bl	1341c <__assert_fail@plt+0x1604>
   13880:	str	r4, [sp]
   13884:	str	r4, [sp, #4]
   13888:	movw	r4, #3208	; 0xc88
   1388c:	mov	r0, #8
   13890:	mov	r1, r5
   13894:	movw	r3, #1025	; 0x401
   13898:	movt	r4, #3
   1389c:	str	r0, [sp, #8]
   138a0:	mov	r0, r6
   138a4:	mov	r2, r4
   138a8:	bl	11d1c <getnameinfo@plt>
   138ac:	cmp	r0, #0
   138b0:	beq	138d4 <__assert_fail@plt+0x1abc>
   138b4:	movw	r0, #57274	; 0xdfba
   138b8:	mov	r1, r7
   138bc:	movt	r0, #1
   138c0:	bl	1341c <__assert_fail@plt+0x1604>
   138c4:	mov	r4, r7
   138c8:	mov	r0, r4
   138cc:	sub	sp, fp, #16
   138d0:	pop	{r4, r5, r6, r7, fp, pc}
   138d4:	mov	r0, r4
   138d8:	mov	r1, #46	; 0x2e
   138dc:	bl	11c38 <strchr@plt>
   138e0:	cmp	r0, #0
   138e4:	beq	138c8 <__assert_fail@plt+0x1ab0>
   138e8:	mov	r5, r0
   138ec:	movw	r0, #3124	; 0xc34
   138f0:	movt	r0, #3
   138f4:	add	r6, r5, #1
   138f8:	ldr	r1, [r0]
   138fc:	mov	r0, r6
   13900:	bl	11b0c <strcasecmp@plt>
   13904:	cmp	r0, #0
   13908:	beq	13998 <__assert_fail@plt+0x1b80>
   1390c:	movw	r0, #3100	; 0xc1c
   13910:	movt	r0, #3
   13914:	ldr	r0, [r0]
   13918:	cmp	r0, #0
   1391c:	beq	1394c <__assert_fail@plt+0x1b34>
   13920:	ldr	r1, [r0]
   13924:	cmp	r1, #0
   13928:	beq	1394c <__assert_fail@plt+0x1b34>
   1392c:	add	r7, r0, #4
   13930:	mov	r0, r6
   13934:	bl	11b0c <strcasecmp@plt>
   13938:	cmp	r0, #0
   1393c:	beq	13998 <__assert_fail@plt+0x1b80>
   13940:	ldr	r1, [r7], #4
   13944:	cmp	r1, #0
   13948:	bne	13930 <__assert_fail@plt+0x1b18>
   1394c:	movw	r0, #3140	; 0xc44
   13950:	movt	r0, #3
   13954:	ldr	r0, [r0]
   13958:	cmp	r0, #0
   1395c:	beq	138c8 <__assert_fail@plt+0x1ab0>
   13960:	ldr	r1, [r0]
   13964:	cmp	r1, #0
   13968:	beq	138c8 <__assert_fail@plt+0x1ab0>
   1396c:	movw	r4, #3208	; 0xc88
   13970:	add	r6, r0, #4
   13974:	movt	r4, #3
   13978:	mov	r0, r4
   1397c:	bl	11b0c <strcasecmp@plt>
   13980:	cmp	r0, #0
   13984:	beq	13998 <__assert_fail@plt+0x1b80>
   13988:	ldr	r1, [r6], #4
   1398c:	cmp	r1, #0
   13990:	bne	13978 <__assert_fail@plt+0x1b60>
   13994:	b	138c8 <__assert_fail@plt+0x1ab0>
   13998:	mov	r0, #0
   1399c:	strb	r0, [r5]
   139a0:	b	138c8 <__assert_fail@plt+0x1ab0>
   139a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139a8:	add	fp, sp, #28
   139ac:	sub	sp, sp, #4
   139b0:	mov	r9, r0
   139b4:	mov	r0, r1
   139b8:	mov	r5, r1
   139bc:	bl	11c20 <strlen@plt>
   139c0:	add	r0, r0, r5
   139c4:	ldrb	r1, [r0, #-1]!
   139c8:	cmp	r1, #58	; 0x3a
   139cc:	bne	139f8 <__assert_fail@plt+0x1be0>
   139d0:	mov	r4, #0
   139d4:	strb	r4, [r0]
   139d8:	mov	r0, r5
   139dc:	bl	11c20 <strlen@plt>
   139e0:	add	r0, r0, r5
   139e4:	ldrb	r1, [r0, #-1]!
   139e8:	cmp	r1, #58	; 0x3a
   139ec:	beq	139d4 <__assert_fail@plt+0x1bbc>
   139f0:	b	139f8 <__assert_fail@plt+0x1be0>
   139f4:	add	r5, r5, #1
   139f8:	ldrb	r2, [r5]
   139fc:	cmp	r2, #58	; 0x3a
   13a00:	beq	139f4 <__assert_fail@plt+0x1bdc>
   13a04:	cmp	r2, #0
   13a08:	beq	13b9c <__assert_fail@plt+0x1d84>
   13a0c:	mov	r1, #1
   13a10:	mov	r0, #1
   13a14:	b	13a24 <__assert_fail@plt+0x1c0c>
   13a18:	add	r0, r0, #1
   13a1c:	ldrb	r2, [r5, r1]
   13a20:	add	r1, r1, #1
   13a24:	uxtb	r2, r2
   13a28:	cmp	r2, #58	; 0x3a
   13a2c:	beq	13a18 <__assert_fail@plt+0x1c00>
   13a30:	cmp	r2, #0
   13a34:	bne	13a1c <__assert_fail@plt+0x1c04>
   13a38:	cmp	r9, #0
   13a3c:	beq	13a5c <__assert_fail@plt+0x1c44>
   13a40:	mov	r1, #0
   13a44:	ldr	r2, [r9, r1, lsl #2]
   13a48:	add	r1, r1, #1
   13a4c:	cmp	r2, #0
   13a50:	bne	13a44 <__assert_fail@plt+0x1c2c>
   13a54:	sub	r4, r1, #1
   13a58:	b	13a60 <__assert_fail@plt+0x1c48>
   13a5c:	mov	r4, #0
   13a60:	add	r0, r4, r0
   13a64:	mov	r1, #4
   13a68:	add	r1, r1, r0, lsl #2
   13a6c:	mov	r0, r9
   13a70:	bl	1bdbc <argp_parse@@Base+0x23a0>
   13a74:	mov	r9, r0
   13a78:	cmp	r0, #0
   13a7c:	bne	13a98 <__assert_fail@plt+0x1c80>
   13a80:	bl	11c50 <__errno_location@plt>
   13a84:	ldr	r1, [r0]
   13a88:	movw	r2, #56539	; 0xdcdb
   13a8c:	mov	r0, #1
   13a90:	movt	r2, #1
   13a94:	bl	11b6c <error@plt>
   13a98:	mov	r0, r5
   13a9c:	mov	r1, #58	; 0x3a
   13aa0:	bl	11c38 <strchr@plt>
   13aa4:	cmp	r0, #0
   13aa8:	beq	13b28 <__assert_fail@plt+0x1d10>
   13aac:	movw	r8, #56539	; 0xdcdb
   13ab0:	mov	r6, r0
   13ab4:	mov	sl, #0
   13ab8:	movt	r8, #1
   13abc:	b	13af4 <__assert_fail@plt+0x1cdc>
   13ac0:	mov	r1, r5
   13ac4:	mov	r2, r7
   13ac8:	bl	11c98 <strncpy@plt>
   13acc:	ldr	r0, [r9, r4, lsl #2]
   13ad0:	add	r5, r6, #1
   13ad4:	mov	r1, #58	; 0x3a
   13ad8:	strb	sl, [r0, r7]
   13adc:	mov	r0, r5
   13ae0:	bl	11c38 <strchr@plt>
   13ae4:	mov	r6, r0
   13ae8:	add	r4, r4, #1
   13aec:	cmp	r0, #0
   13af0:	beq	13b28 <__assert_fail@plt+0x1d10>
   13af4:	sub	r7, r6, r5
   13af8:	add	r0, r7, #1
   13afc:	bl	1bd8c <argp_parse@@Base+0x2370>
   13b00:	cmp	r0, #0
   13b04:	str	r0, [r9, r4, lsl #2]
   13b08:	bne	13ac0 <__assert_fail@plt+0x1ca8>
   13b0c:	bl	11c50 <__errno_location@plt>
   13b10:	ldr	r1, [r0]
   13b14:	mov	r0, #1
   13b18:	mov	r2, r8
   13b1c:	bl	11b6c <error@plt>
   13b20:	ldr	r0, [r9, r4, lsl #2]
   13b24:	b	13ac0 <__assert_fail@plt+0x1ca8>
   13b28:	mov	r0, r5
   13b2c:	bl	11c20 <strlen@plt>
   13b30:	add	r0, r0, #1
   13b34:	bl	1b7cc <argp_parse@@Base+0x1db0>
   13b38:	mov	r6, r9
   13b3c:	mov	r1, r5
   13b40:	str	r0, [r6, r4, lsl #2]!
   13b44:	bl	11b60 <strcpy@plt>
   13b48:	mov	r0, #0
   13b4c:	str	r0, [r6, #4]
   13b50:	movw	r0, #3108	; 0xc24
   13b54:	movt	r0, #3
   13b58:	ldr	r0, [r0]
   13b5c:	cmp	r0, #0
   13b60:	beq	13b9c <__assert_fail@plt+0x1d84>
   13b64:	ldr	r2, [r9]
   13b68:	cmp	r2, #0
   13b6c:	beq	13b9c <__assert_fail@plt+0x1d84>
   13b70:	movw	r6, #56561	; 0xdcf1
   13b74:	add	r4, r9, #4
   13b78:	mov	r5, #0
   13b7c:	movt	r6, #1
   13b80:	mov	r0, r6
   13b84:	mov	r1, r5
   13b88:	bl	119c8 <printf@plt>
   13b8c:	ldr	r2, [r4, r5, lsl #2]
   13b90:	add	r5, r5, #1
   13b94:	cmp	r2, #0
   13b98:	bne	13b80 <__assert_fail@plt+0x1d68>
   13b9c:	mov	r0, r9
   13ba0:	sub	sp, fp, #28
   13ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bac:	add	fp, sp, #28
   13bb0:	sub	sp, sp, #292	; 0x124
   13bb4:	mov	r5, r1
   13bb8:	movw	r1, #528	; 0x210
   13bbc:	mov	r8, r2
   13bc0:	mov	r4, r3
   13bc4:	mov	r9, r0
   13bc8:	mov	r3, #0
   13bcc:	movt	r1, #3
   13bd0:	ldr	r2, [r1]
   13bd4:	cmp	r2, #0
   13bd8:	beq	13c1c <__assert_fail@plt+0x1e04>
   13bdc:	ldr	r3, [r1, #4]
   13be0:	and	r0, r9, #1016	; 0x3f8
   13be4:	cmp	r3, r0
   13be8:	mov	r3, r2
   13bec:	beq	13c1c <__assert_fail@plt+0x1e04>
   13bf0:	add	r1, r1, #8
   13bf4:	ldr	r3, [r1]
   13bf8:	cmp	r3, #0
   13bfc:	beq	13c18 <__assert_fail@plt+0x1e00>
   13c00:	add	r2, r1, #8
   13c04:	ldr	r1, [r1, #4]
   13c08:	cmp	r1, r0
   13c0c:	mov	r1, r2
   13c10:	bne	13bf4 <__assert_fail@plt+0x1ddc>
   13c14:	b	13c1c <__assert_fail@plt+0x1e04>
   13c18:	mov	r3, #0
   13c1c:	movw	r2, #424	; 0x1a8
   13c20:	movt	r2, #3
   13c24:	ldr	r0, [r2]
   13c28:	cmp	r0, #0
   13c2c:	beq	13c68 <__assert_fail@plt+0x1e50>
   13c30:	ldr	r7, [r2, #4]
   13c34:	and	r1, r9, #7
   13c38:	cmp	r7, r1
   13c3c:	beq	13c6c <__assert_fail@plt+0x1e54>
   13c40:	add	r2, r2, #8
   13c44:	ldr	r0, [r2]
   13c48:	cmp	r0, #0
   13c4c:	beq	13c68 <__assert_fail@plt+0x1e50>
   13c50:	add	r7, r2, #8
   13c54:	ldr	r2, [r2, #4]
   13c58:	cmp	r2, r1
   13c5c:	mov	r2, r7
   13c60:	bne	13c44 <__assert_fail@plt+0x1e2c>
   13c64:	b	13c6c <__assert_fail@plt+0x1e54>
   13c68:	mov	r0, #0
   13c6c:	movw	r6, #1509	; 0x5e5
   13c70:	movw	r2, #56570	; 0xdcfa
   13c74:	str	r0, [sp]
   13c78:	mov	r1, #20
   13c7c:	movt	r6, #3
   13c80:	movt	r2, #1
   13c84:	mov	r0, r6
   13c88:	bl	11c5c <snprintf@plt>
   13c8c:	movw	r0, #56576	; 0xdd00
   13c90:	mov	r1, r6
   13c94:	mov	r2, r9
   13c98:	mov	r3, r4
   13c9c:	str	r8, [sp]
   13ca0:	str	r5, [sp, #4]
   13ca4:	movt	r0, #1
   13ca8:	bl	1341c <__assert_fail@plt+0x1604>
   13cac:	add	r6, sp, #160	; 0xa0
   13cb0:	mov	r0, r6
   13cb4:	bl	11d04 <sigemptyset@plt>
   13cb8:	mov	r0, r6
   13cbc:	mov	r1, #1
   13cc0:	bl	11bb4 <sigaddset@plt>
   13cc4:	mov	r0, r6
   13cc8:	mov	r1, #14
   13ccc:	bl	11bb4 <sigaddset@plt>
   13cd0:	add	r2, sp, #32
   13cd4:	mov	r0, #0
   13cd8:	mov	r1, r6
   13cdc:	bl	119f8 <sigprocmask@plt>
   13ce0:	mov	r0, r5
   13ce4:	bl	11c20 <strlen@plt>
   13ce8:	mov	r7, r0
   13cec:	cmp	r0, #16
   13cf0:	blt	13d34 <__assert_fail@plt+0x1f1c>
   13cf4:	ldrb	r0, [r5, #3]
   13cf8:	cmp	r0, #32
   13cfc:	bne	13d34 <__assert_fail@plt+0x1f1c>
   13d00:	ldrb	r0, [r5, #6]
   13d04:	cmp	r0, #32
   13d08:	bne	13d34 <__assert_fail@plt+0x1f1c>
   13d0c:	ldrb	r0, [r5, #9]
   13d10:	cmp	r0, #58	; 0x3a
   13d14:	bne	13d34 <__assert_fail@plt+0x1f1c>
   13d18:	ldrb	r0, [r5, #12]
   13d1c:	cmp	r0, #58	; 0x3a
   13d20:	bne	13d34 <__assert_fail@plt+0x1f1c>
   13d24:	ldrb	r0, [r5, #15]
   13d28:	cmp	r0, #32
   13d2c:	orrne	r4, r4, #4
   13d30:	b	13d38 <__assert_fail@plt+0x1f20>
   13d34:	orr	r4, r4, #4
   13d38:	movw	r0, #3192	; 0xc78
   13d3c:	movt	r0, #3
   13d40:	bl	11a70 <time@plt>
   13d44:	tst	r4, #4
   13d48:	str	r8, [sp, #16]
   13d4c:	bne	13d88 <__assert_fail@plt+0x1f70>
   13d50:	movw	r0, #1500	; 0x5dc
   13d54:	str	r5, [sp, #20]
   13d58:	movt	r0, #3
   13d5c:	ldr	r0, [r0]
   13d60:	cmp	r0, #0
   13d64:	beq	13d7c <__assert_fail@plt+0x1f64>
   13d68:	movw	r0, #3192	; 0xc78
   13d6c:	movt	r0, #3
   13d70:	bl	11a94 <ctime@plt>
   13d74:	add	r0, r0, #4
   13d78:	str	r0, [sp, #20]
   13d7c:	sub	r7, r7, #16
   13d80:	add	r5, r5, #16
   13d84:	b	13d9c <__assert_fail@plt+0x1f84>
   13d88:	movw	r0, #3192	; 0xc78
   13d8c:	movt	r0, #3
   13d90:	bl	11a94 <ctime@plt>
   13d94:	add	r0, r0, #4
   13d98:	str	r0, [sp, #20]
   13d9c:	movw	r0, #3120	; 0xc30
   13da0:	str	r5, [sp, #28]
   13da4:	str	r4, [sp, #24]
   13da8:	ubfx	r6, r9, #3, #7
   13dac:	ands	r8, r4, #8
   13db0:	movt	r0, #3
   13db4:	movwne	r6, #24
   13db8:	ldr	r0, [r0]
   13dbc:	cmp	r0, #0
   13dc0:	beq	14058 <__assert_fail@plt+0x2240>
   13dc4:	movw	r0, #2632	; 0xa48
   13dc8:	str	r9, [sp, #8]
   13dcc:	str	r7, [sp, #12]
   13dd0:	movt	r0, #3
   13dd4:	ldr	r9, [r0]
   13dd8:	cmp	r9, #0
   13ddc:	beq	140b4 <__assert_fail@plt+0x229c>
   13de0:	ldr	r0, [sp, #8]
   13de4:	mov	r1, #1
   13de8:	mov	r2, #0
   13dec:	and	r0, r0, #7
   13df0:	lsl	r4, r1, r0
   13df4:	ldr	r0, [sp, #24]
   13df8:	and	sl, r0, #1
   13dfc:	b	13e2c <__assert_fail@plt+0x2014>
   13e00:	ldr	r2, [sp, #24]
   13e04:	ldr	r3, [sp, #28]
   13e08:	mov	r0, r9
   13e0c:	mov	r1, r7
   13e10:	str	r5, [r9, #448]	; 0x1c0
   13e14:	strb	r5, [r9, #176]	; 0xb0
   13e18:	bl	141ac <__assert_fail@plt+0x2394>
   13e1c:	mov	r2, #0
   13e20:	ldr	r9, [r9]
   13e24:	cmp	r9, #0
   13e28:	beq	140b4 <__assert_fail@plt+0x229c>
   13e2c:	add	r0, r9, r6
   13e30:	ldrb	r0, [r0, #12]
   13e34:	tst	r4, r0
   13e38:	beq	13e20 <__assert_fail@plt+0x2008>
   13e3c:	cmp	sl, #0
   13e40:	beq	13e50 <__assert_fail@plt+0x2038>
   13e44:	ldrh	r0, [r9, #4]
   13e48:	cmp	r0, #3
   13e4c:	beq	13e20 <__assert_fail@plt+0x2008>
   13e50:	cmp	r8, #0
   13e54:	beq	13e84 <__assert_fail@plt+0x206c>
   13e58:	movw	r1, #3192	; 0xc78
   13e5c:	ldr	r0, [r9, #8]
   13e60:	movt	r1, #3
   13e64:	ldr	r1, [r1]
   13e68:	sub	r0, r1, r0
   13e6c:	movw	r1, #804	; 0x324
   13e70:	movt	r1, #3
   13e74:	ldr	r1, [r1]
   13e78:	add	r1, r1, r1, lsr #31
   13e7c:	cmp	r0, r1, asr #1
   13e80:	blt	13e20 <__assert_fail@plt+0x2008>
   13e84:	ldr	r1, [r9, #436]	; 0x1b4
   13e88:	cmp	r1, #0
   13e8c:	beq	13ed8 <__assert_fail@plt+0x20c0>
   13e90:	ldr	r7, [r9, #440]	; 0x1b8
   13e94:	ldr	r0, [sp, #28]
   13e98:	mov	r2, r7
   13e9c:	bl	11ddc <strncmp@plt>
   13ea0:	mov	r2, #0
   13ea4:	cmp	r0, #0
   13ea8:	bne	13e20 <__assert_fail@plt+0x2008>
   13eac:	bl	11bfc <__ctype_b_loc@plt>
   13eb0:	ldr	r1, [sp, #28]
   13eb4:	ldr	r0, [r0]
   13eb8:	mov	r2, #0
   13ebc:	ldrb	r1, [r1, r7]
   13ec0:	ldrb	r0, [r0, r1, lsl #1]
   13ec4:	tst	r0, #8
   13ec8:	bne	13e20 <__assert_fail@plt+0x2008>
   13ecc:	cmp	r1, #45	; 0x2d
   13ed0:	cmpne	r1, #95	; 0x5f
   13ed4:	beq	13e20 <__assert_fail@plt+0x2008>
   13ed8:	cmp	r8, #0
   13edc:	bne	13f2c <__assert_fail@plt+0x2114>
   13ee0:	ldr	r0, [r9, #448]	; 0x1c0
   13ee4:	ldr	r1, [sp, #12]
   13ee8:	cmp	r1, r0
   13eec:	bne	13f2c <__assert_fail@plt+0x2114>
   13ef0:	ldr	r7, [r9, #432]	; 0x1b0
   13ef4:	cmp	r7, #0
   13ef8:	beq	13f2c <__assert_fail@plt+0x2114>
   13efc:	ldr	r0, [sp, #28]
   13f00:	add	r1, r9, #176	; 0xb0
   13f04:	bl	11998 <strcmp@plt>
   13f08:	mov	r2, #0
   13f0c:	cmp	r0, #0
   13f10:	bne	13f2c <__assert_fail@plt+0x2114>
   13f14:	ldr	r0, [sp, #16]
   13f18:	mov	r1, r7
   13f1c:	bl	11998 <strcmp@plt>
   13f20:	mov	r2, #0
   13f24:	cmp	r0, #0
   13f28:	beq	13fb8 <__assert_fail@plt+0x21a0>
   13f2c:	ldr	r0, [r9, #452]	; 0x1c4
   13f30:	ldr	r7, [sp, #16]
   13f34:	cmp	r0, #0
   13f38:	beq	13f54 <__assert_fail@plt+0x213c>
   13f3c:	mov	r0, r9
   13f40:	mov	r1, r7
   13f44:	mov	r2, #0
   13f48:	mov	r3, #0
   13f4c:	bl	141ac <__assert_fail@plt+0x2394>
   13f50:	mov	r2, #0
   13f54:	ldr	r1, [sp, #20]
   13f58:	str	r2, [r9, #456]	; 0x1c8
   13f5c:	add	r0, r9, #416	; 0x1a0
   13f60:	mov	r2, #15
   13f64:	mov	r5, #0
   13f68:	bl	11c98 <strncpy@plt>
   13f6c:	ldr	r0, [r9, #432]	; 0x1b0
   13f70:	bl	1aed8 <argp_parse@@Base+0x14bc>
   13f74:	mov	r0, r7
   13f78:	bl	11aac <strdup@plt>
   13f7c:	str	r0, [r9, #432]	; 0x1b0
   13f80:	ldr	r0, [sp, #12]
   13f84:	cmp	r0, #239	; 0xef
   13f88:	bgt	13e00 <__assert_fail@plt+0x1fe8>
   13f8c:	ldr	r1, [sp, #8]
   13f90:	str	r1, [r9, #444]	; 0x1bc
   13f94:	ldr	r1, [sp, #28]
   13f98:	str	r0, [r9, #448]	; 0x1c0
   13f9c:	add	r0, r9, #176	; 0xb0
   13fa0:	bl	11b60 <strcpy@plt>
   13fa4:	ldr	r2, [sp, #24]
   13fa8:	mov	r0, r9
   13fac:	mov	r1, r7
   13fb0:	mov	r3, #0
   13fb4:	b	13e18 <__assert_fail@plt+0x2000>
   13fb8:	ldr	r1, [sp, #20]
   13fbc:	add	r0, r9, #416	; 0x1a0
   13fc0:	mov	r2, #15
   13fc4:	bl	11c98 <strncpy@plt>
   13fc8:	ldr	r1, [r9, #452]	; 0x1c4
   13fcc:	ldr	r2, [r9, #456]	; 0x1c8
   13fd0:	movw	r7, #780	; 0x30c
   13fd4:	ldr	r0, [r9, #8]
   13fd8:	movt	r7, #3
   13fdc:	add	r1, r1, #1
   13fe0:	str	r1, [r9, #452]	; 0x1c4
   13fe4:	ldr	r3, [r7, r2, lsl #2]
   13fe8:	movw	r2, #3192	; 0xc78
   13fec:	movt	r2, #3
   13ff0:	mov	r5, r2
   13ff4:	ldr	r2, [r2]
   13ff8:	sub	r2, r2, r0
   13ffc:	movw	r0, #56622	; 0xdd2e
   14000:	movt	r0, #1
   14004:	bl	1341c <__assert_fail@plt+0x1604>
   14008:	ldr	r1, [r9, #456]	; 0x1c8
   1400c:	ldr	r0, [r9, #8]
   14010:	mov	r2, #0
   14014:	ldr	r1, [r7, r1, lsl #2]
   14018:	add	r0, r1, r0
   1401c:	ldr	r1, [r5]
   14020:	cmp	r1, r0
   14024:	ble	13e20 <__assert_fail@plt+0x2008>
   14028:	ldr	r1, [sp, #16]
   1402c:	ldr	r2, [sp, #24]
   14030:	mov	r0, r9
   14034:	mov	r3, #0
   14038:	bl	141ac <__assert_fail@plt+0x2394>
   1403c:	ldr	r0, [r9, #456]	; 0x1c8
   14040:	mvn	r1, #0
   14044:	mov	r2, #0
   14048:	subs	r0, r0, r1
   1404c:	movwne	r0, #1
   14050:	str	r0, [r9, #456]	; 0x1c8
   14054:	b	13e20 <__assert_fail@plt+0x2008>
   14058:	movw	r0, #724	; 0x2d4
   1405c:	mov	r1, #1
   14060:	mov	r2, #0
   14064:	movt	r0, #3
   14068:	bl	11b90 <open64@plt>
   1406c:	movw	r6, #2636	; 0xa4c
   14070:	movt	r6, #3
   14074:	strh	r0, [r6, #6]
   14078:	movw	r0, #3128	; 0xc38
   1407c:	movt	r0, #3
   14080:	ldr	r0, [r0]
   14084:	bl	11aac <strdup@plt>
   14088:	str	r0, [r6, #432]	; 0x1b0
   1408c:	ldrsh	r0, [r6, #6]
   14090:	cmp	r0, #0
   14094:	bmi	140b4 <__assert_fail@plt+0x229c>
   14098:	ldr	r1, [sp, #16]
   1409c:	ldr	r2, [sp, #24]
   140a0:	ldr	r3, [sp, #28]
   140a4:	mov	r0, r6
   140a8:	bl	141ac <__assert_fail@plt+0x2394>
   140ac:	ldrsh	r0, [r6, #6]
   140b0:	bl	11e00 <close@plt>
   140b4:	add	r1, sp, #32
   140b8:	mov	r0, #2
   140bc:	mov	r2, #0
   140c0:	bl	119f8 <sigprocmask@plt>
   140c4:	sub	sp, fp, #28
   140c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140cc:	push	{r4, sl, fp, lr}
   140d0:	add	fp, sp, #8
   140d4:	sub	sp, sp, #8
   140d8:	movw	r2, #528	; 0x210
   140dc:	mov	r3, #0
   140e0:	movt	r2, #3
   140e4:	ldr	r4, [r2]
   140e8:	cmp	r4, #0
   140ec:	beq	14130 <__assert_fail@plt+0x2318>
   140f0:	ldr	r3, [r2, #4]
   140f4:	and	r1, r0, #1016	; 0x3f8
   140f8:	cmp	r3, r1
   140fc:	mov	r3, r4
   14100:	beq	14130 <__assert_fail@plt+0x2318>
   14104:	add	r2, r2, #8
   14108:	ldr	r3, [r2]
   1410c:	cmp	r3, #0
   14110:	beq	1412c <__assert_fail@plt+0x2314>
   14114:	add	r4, r2, #8
   14118:	ldr	r2, [r2, #4]
   1411c:	cmp	r2, r1
   14120:	mov	r2, r4
   14124:	bne	14108 <__assert_fail@plt+0x22f0>
   14128:	b	14130 <__assert_fail@plt+0x2318>
   1412c:	mov	r3, #0
   14130:	movw	r2, #424	; 0x1a8
   14134:	movt	r2, #3
   14138:	ldr	r1, [r2]
   1413c:	cmp	r1, #0
   14140:	beq	1417c <__assert_fail@plt+0x2364>
   14144:	ldr	r4, [r2, #4]
   14148:	and	r0, r0, #7
   1414c:	cmp	r4, r0
   14150:	beq	14180 <__assert_fail@plt+0x2368>
   14154:	add	r2, r2, #8
   14158:	ldr	r1, [r2]
   1415c:	cmp	r1, #0
   14160:	beq	1417c <__assert_fail@plt+0x2364>
   14164:	add	r4, r2, #8
   14168:	ldr	r2, [r2, #4]
   1416c:	cmp	r2, r0
   14170:	mov	r2, r4
   14174:	bne	14158 <__assert_fail@plt+0x2340>
   14178:	b	14180 <__assert_fail@plt+0x2368>
   1417c:	mov	r1, #0
   14180:	movw	r4, #1509	; 0x5e5
   14184:	movw	r2, #56570	; 0xdcfa
   14188:	str	r1, [sp]
   1418c:	mov	r1, #20
   14190:	movt	r4, #3
   14194:	movt	r2, #1
   14198:	mov	r0, r4
   1419c:	bl	11c5c <snprintf@plt>
   141a0:	mov	r0, r4
   141a4:	sub	sp, fp, #8
   141a8:	pop	{r4, sl, fp, pc}
   141ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141b0:	add	fp, sp, #28
   141b4:	sub	sp, sp, #356	; 0x164
   141b8:	sub	sp, sp, #1024	; 0x400
   141bc:	vmov.i32	q8, #0	; 0x00000000
   141c0:	sub	r6, fp, #80	; 0x50
   141c4:	mov	sl, r1
   141c8:	mov	r4, r0
   141cc:	mov	r0, #32
   141d0:	mov	r7, r3
   141d4:	mov	r8, r2
   141d8:	mov	r1, r6
   141dc:	add	r5, r6, #16
   141e0:	vst1.64	{d16-d17}, [r1], r0
   141e4:	vst1.64	{d16-d17}, [r5]
   141e8:	vst1.64	{d16-d17}, [r1]
   141ec:	ldrh	r0, [r4, #4]
   141f0:	cmp	r0, #6
   141f4:	bne	14250 <__assert_fail@plt+0x2438>
   141f8:	mov	r9, sl
   141fc:	add	sl, sp, #16
   14200:	movw	r0, #3192	; 0xc78
   14204:	str	sl, [fp, #-80]	; 0xffffffb0
   14208:	movt	r0, #3
   1420c:	ldr	r6, [r4, #432]	; 0x1b0
   14210:	bl	11a94 <ctime@plt>
   14214:	movw	r2, #56660	; 0xdd54
   14218:	str	r0, [sp]
   1421c:	mov	r3, r6
   14220:	mov	r0, sl
   14224:	mov	r1, #200	; 0xc8
   14228:	sub	r6, fp, #80	; 0x50
   1422c:	movt	r2, #1
   14230:	bl	11c5c <snprintf@plt>
   14234:	mov	r0, sl
   14238:	mov	sl, r9
   1423c:	bl	11c20 <strlen@plt>
   14240:	movw	r1, #59437	; 0xe82d
   14244:	mov	r2, #0
   14248:	movt	r1, #1
   1424c:	b	14268 <__assert_fail@plt+0x2450>
   14250:	movw	r1, #60409	; 0xebf9
   14254:	add	r0, r4, #416	; 0x1a0
   14258:	mov	r2, #1
   1425c:	movt	r1, #1
   14260:	str	r0, [fp, #-80]	; 0xffffffb0
   14264:	mov	r0, #15
   14268:	sub	r3, fp, #76	; 0x4c
   1426c:	stm	r3, {r0, r1, r2}
   14270:	ldr	r0, [r4, #432]	; 0x1b0
   14274:	cmp	r0, #0
   14278:	beq	1428c <__assert_fail@plt+0x2474>
   1427c:	str	r0, [fp, #-64]	; 0xffffffc0
   14280:	bl	11c20 <strlen@plt>
   14284:	add	r5, r6, #24
   14288:	str	r0, [fp, #-60]	; 0xffffffc4
   1428c:	movw	r1, #60409	; 0xebf9
   14290:	cmp	r7, #0
   14294:	mov	r0, #1
   14298:	movt	r1, #1
   1429c:	str	r1, [r5]
   142a0:	str	r0, [r5, #4]
   142a4:	beq	142b8 <__assert_fail@plt+0x24a0>
   142a8:	mov	r0, r7
   142ac:	str	r7, [r5, #8]
   142b0:	bl	11c20 <strlen@plt>
   142b4:	b	142f8 <__assert_fail@plt+0x24e0>
   142b8:	ldr	r3, [r4, #452]	; 0x1c4
   142bc:	cmp	r3, #2
   142c0:	blt	142ec <__assert_fail@plt+0x24d4>
   142c4:	movw	r2, #56702	; 0xdd7e
   142c8:	add	r6, sp, #216	; 0xd8
   142cc:	mov	r1, #80	; 0x50
   142d0:	movt	r2, #1
   142d4:	mov	r0, r6
   142d8:	str	r6, [r5, #8]
   142dc:	bl	11c5c <snprintf@plt>
   142e0:	mov	r0, r6
   142e4:	bl	11c20 <strlen@plt>
   142e8:	b	142f8 <__assert_fail@plt+0x24e0>
   142ec:	add	r0, r4, #176	; 0xb0
   142f0:	str	r0, [r5, #8]
   142f4:	ldr	r0, [r4, #448]	; 0x1c0
   142f8:	str	r0, [r5, #12]
   142fc:	movw	r1, #740	; 0x2e4
   14300:	ldrsh	r0, [r4, #4]
   14304:	movt	r1, #3
   14308:	ldr	r1, [r1, r0, lsl #2]
   1430c:	movw	r0, #56733	; 0xdd9d
   14310:	movt	r0, #1
   14314:	bl	1341c <__assert_fail@plt+0x1604>
   14318:	ldrsh	r0, [r4, #4]
   1431c:	cmp	r0, #9
   14320:	bhi	14494 <__assert_fail@plt+0x267c>
   14324:	add	r1, pc, #0
   14328:	ldr	pc, [r1, r0, lsl #2]
   1432c:	andeq	r4, r1, r4, lsr #9
   14330:	andeq	r4, r1, r4, asr r3
   14334:	andeq	r4, r1, r4, asr r3
   14338:	andeq	r4, r1, r0, asr #9
   1433c:	andeq	r4, r1, r8, ror r6
   14340:	andeq	r4, r1, ip, lsr #8
   14344:	andeq	r4, r1, ip, lsr #8
   14348:	andeq	r4, r1, r4, ror #9
   1434c:	andeq	r4, r1, r4, lsl r5
   14350:	andeq	r4, r1, r4, asr r3
   14354:	movw	r0, #3192	; 0xc78
   14358:	movt	r0, #3
   1435c:	ldr	r0, [r0]
   14360:	str	r0, [r4, #8]
   14364:	movw	r0, #61202	; 0xef12
   14368:	ldr	r1, [r4, #40]	; 0x28
   1436c:	movt	r0, #1
   14370:	bl	1341c <__assert_fail@plt+0x1604>
   14374:	ldrh	r0, [r4, #4]
   14378:	movw	r1, #56699	; 0xdd7b
   1437c:	movw	r2, #56700	; 0xdd7c
   14380:	movt	r1, #1
   14384:	movt	r2, #1
   14388:	bic	r0, r0, #1
   1438c:	cmp	r0, #2
   14390:	moveq	r2, r1
   14394:	movwne	r0, #1
   14398:	str	r2, [r5, #16]
   1439c:	str	r0, [r5, #20]
   143a0:	sub	r5, fp, #80	; 0x50
   143a4:	ldrh	r0, [r4, #6]
   143a8:	sxth	r0, r0
   143ac:	mov	r1, r5
   143b0:	mov	r2, #6
   143b4:	bl	11cbc <writev@plt>
   143b8:	cmn	r0, #1
   143bc:	bgt	145dc <__assert_fail@plt+0x27c4>
   143c0:	bl	11c50 <__errno_location@plt>
   143c4:	ldr	r6, [r0]
   143c8:	mov	r7, r0
   143cc:	cmp	r6, #11
   143d0:	bne	143e0 <__assert_fail@plt+0x25c8>
   143d4:	ldrh	r0, [r4, #4]
   143d8:	cmp	r0, #9
   143dc:	beq	146f0 <__assert_fail@plt+0x28d8>
   143e0:	ldrsh	r0, [r4, #6]
   143e4:	bl	11e00 <close@plt>
   143e8:	cmp	r6, #9
   143ec:	cmpne	r6, #5
   143f0:	bne	1446c <__assert_fail@plt+0x2654>
   143f4:	ldrh	r0, [r4, #4]
   143f8:	bic	r0, r0, #1
   143fc:	cmp	r0, #2
   14400:	bne	1446c <__assert_fail@plt+0x2654>
   14404:	ldr	r0, [r4, #40]	; 0x28
   14408:	movw	r1, #1025	; 0x401
   1440c:	mov	r2, #0
   14410:	bl	11b90 <open64@plt>
   14414:	tst	r0, #32768	; 0x8000
   14418:	strh	r0, [r4, #6]
   1441c:	beq	143a8 <__assert_fail@plt+0x2590>
   14420:	mov	r0, #0
   14424:	strh	r0, [r4, #4]
   14428:	b	14478 <__assert_fail@plt+0x2660>
   1442c:	movw	r0, #3192	; 0xc78
   14430:	movt	r0, #3
   14434:	ldr	r0, [r0]
   14438:	str	r0, [r4, #8]
   1443c:	movw	r0, #56700	; 0xdd7c
   14440:	movt	r0, #1
   14444:	bl	1341c <__assert_fail@plt+0x1604>
   14448:	movw	r1, #56699	; 0xdd7b
   1444c:	mov	r0, #2
   14450:	movt	r1, #1
   14454:	str	r1, [r5, #16]
   14458:	str	r0, [r5, #20]
   1445c:	sub	r1, fp, #80	; 0x50
   14460:	mov	r0, r4
   14464:	bl	148d0 <__assert_fail@plt+0x2ab8>
   14468:	b	146e4 <__assert_fail@plt+0x28cc>
   1446c:	mov	r0, #0
   14470:	strh	r0, [r4, #4]
   14474:	str	r6, [r7]
   14478:	ldr	r0, [r4, #40]	; 0x28
   1447c:	bl	134a8 <__assert_fail@plt+0x1690>
   14480:	ldr	r0, [r4, #40]	; 0x28
   14484:	bl	1aed8 <argp_parse@@Base+0x14bc>
   14488:	mov	r0, #0
   1448c:	str	r0, [r4, #40]	; 0x28
   14490:	b	146e4 <__assert_fail@plt+0x28cc>
   14494:	uxth	r0, r0
   14498:	cmp	r0, #8
   1449c:	bne	146f0 <__assert_fail@plt+0x28d8>
   144a0:	b	146f8 <__assert_fail@plt+0x28e0>
   144a4:	movw	r0, #3192	; 0xc78
   144a8:	movt	r0, #3
   144ac:	ldr	r0, [r0]
   144b0:	str	r0, [r4, #8]
   144b4:	movw	r0, #56700	; 0xdd7c
   144b8:	movt	r0, #1
   144bc:	b	146e0 <__assert_fail@plt+0x28c8>
   144c0:	movw	r0, #3192	; 0xc78
   144c4:	tst	r8, #1
   144c8:	movt	r0, #3
   144cc:	ldr	r0, [r0]
   144d0:	str	r0, [r4, #8]
   144d4:	beq	14354 <__assert_fail@plt+0x253c>
   144d8:	movw	r0, #57183	; 0xdf5f
   144dc:	movt	r0, #1
   144e0:	b	146e0 <__assert_fail@plt+0x28c8>
   144e4:	mov	r0, #0
   144e8:	bl	11a70 <time@plt>
   144ec:	ldr	r1, [r4, #8]
   144f0:	sub	r5, r0, r1
   144f4:	cmp	r5, #180	; 0xb4
   144f8:	blt	145fc <__assert_fail@plt+0x27e4>
   144fc:	movw	r0, #56747	; 0xddab
   14500:	movt	r0, #1
   14504:	bl	1341c <__assert_fail@plt+0x1604>
   14508:	mov	r0, #4
   1450c:	strh	r0, [r4, #4]
   14510:	b	14678 <__assert_fail@plt+0x2860>
   14514:	ldr	r1, [r4, #40]	; 0x28
   14518:	movw	r0, #61202	; 0xef12
   1451c:	movt	r0, #1
   14520:	bl	1341c <__assert_fail@plt+0x1604>
   14524:	mov	r0, #0
   14528:	bl	11a70 <time@plt>
   1452c:	ldr	r1, [r4, #8]
   14530:	sub	r0, r0, r1
   14534:	cmp	r0, #180	; 0xb4
   14538:	blt	14620 <__assert_fail@plt+0x2808>
   1453c:	vmov.i32	q8, #0	; 0x00000000
   14540:	add	r0, sp, #296	; 0x128
   14544:	add	r2, sp, #296	; 0x128
   14548:	add	r3, sp, #12
   1454c:	vst1.64	{d16-d17}, [r0]!
   14550:	vst1.64	{d16-d17}, [r0]
   14554:	movw	r0, #788	; 0x314
   14558:	movt	r0, #3
   1455c:	ldr	r0, [r0]
   14560:	cmp	r0, #0
   14564:	str	r0, [sp, #300]	; 0x12c
   14568:	moveq	r0, #32
   1456c:	streq	r0, [sp, #296]	; 0x128
   14570:	movw	r0, #1496	; 0x5d8
   14574:	movt	r0, #3
   14578:	ldr	r1, [r0]
   1457c:	ldr	r0, [r4, #40]	; 0x28
   14580:	bl	11da0 <getaddrinfo@plt>
   14584:	cmp	r0, #0
   14588:	beq	14634 <__assert_fail@plt+0x281c>
   1458c:	bl	11a28 <gai_strerror@plt>
   14590:	mov	r1, r0
   14594:	movw	r0, #56839	; 0xde07
   14598:	movt	r0, #1
   1459c:	bl	1341c <__assert_fail@plt+0x1604>
   145a0:	ldr	r1, [r4, #452]	; 0x1c4
   145a4:	movw	r0, #56852	; 0xde14
   145a8:	movt	r0, #1
   145ac:	bl	1341c <__assert_fail@plt+0x1604>
   145b0:	ldr	r0, [r4, #452]	; 0x1c4
   145b4:	sub	r1, r0, #1
   145b8:	cmp	r0, #0
   145bc:	str	r1, [r4, #452]	; 0x1c4
   145c0:	bgt	146e4 <__assert_fail@plt+0x28cc>
   145c4:	mov	r5, #0
   145c8:	strh	r5, [r4, #4]
   145cc:	ldr	r0, [r4, #40]	; 0x28
   145d0:	bl	1aed8 <argp_parse@@Base+0x14bc>
   145d4:	str	r5, [r4, #40]	; 0x28
   145d8:	b	146e4 <__assert_fail@plt+0x28cc>
   145dc:	tst	r8, #2
   145e0:	beq	146e4 <__assert_fail@plt+0x28cc>
   145e4:	ldrb	r0, [r4, #460]	; 0x1cc
   145e8:	tst	r0, #1
   145ec:	bne	146e4 <__assert_fail@plt+0x28cc>
   145f0:	ldrsh	r0, [r4, #6]
   145f4:	bl	1198c <fsync@plt>
   145f8:	b	146e4 <__assert_fail@plt+0x28cc>
   145fc:	ldr	r1, [r4, #40]	; 0x28
   14600:	movw	r0, #61202	; 0xef12
   14604:	movt	r0, #1
   14608:	bl	1341c <__assert_fail@plt+0x1604>
   1460c:	movw	r0, #56791	; 0xddd7
   14610:	rsb	r1, r5, #180	; 0xb4
   14614:	movt	r0, #1
   14618:	bl	1341c <__assert_fail@plt+0x1604>
   1461c:	b	146e4 <__assert_fail@plt+0x28cc>
   14620:	rsb	r1, r0, #180	; 0xb4
   14624:	movw	r0, #56886	; 0xde36
   14628:	movt	r0, #1
   1462c:	bl	1341c <__assert_fail@plt+0x1604>
   14630:	b	146e4 <__assert_fail@plt+0x28cc>
   14634:	ldr	r1, [r4, #40]	; 0x28
   14638:	movw	r0, #56865	; 0xde21
   1463c:	movt	r0, #1
   14640:	bl	1341c <__assert_fail@plt+0x1604>
   14644:	ldr	r5, [sp, #12]
   14648:	ldr	r0, [r5, #16]
   1464c:	str	r0, [r4, #172]	; 0xac
   14650:	add	r0, r4, #44	; 0x2c
   14654:	ldr	r2, [r5, #16]
   14658:	ldr	r1, [r5, #20]
   1465c:	bl	11a58 <memcpy@plt>
   14660:	mov	r0, r5
   14664:	bl	11d94 <freeaddrinfo@plt>
   14668:	mov	r0, #4
   1466c:	strh	r0, [r4, #4]
   14670:	mov	r0, #0
   14674:	str	r0, [r4, #452]	; 0x1c4
   14678:	ldr	r1, [r4, #40]	; 0x28
   1467c:	movw	r0, #61202	; 0xef12
   14680:	movt	r0, #1
   14684:	bl	1341c <__assert_fail@plt+0x1604>
   14688:	movw	r0, #3128	; 0xc38
   1468c:	movt	r0, #3
   14690:	ldr	r1, [r0]
   14694:	mov	r0, sl
   14698:	bl	11b0c <strcasecmp@plt>
   1469c:	cmp	r0, #0
   146a0:	beq	146c4 <__assert_fail@plt+0x28ac>
   146a4:	movw	r0, #808	; 0x328
   146a8:	movt	r0, #3
   146ac:	ldr	r0, [r0]
   146b0:	cmp	r0, #0
   146b4:	beq	146c4 <__assert_fail@plt+0x28ac>
   146b8:	movw	r0, #56933	; 0xde65
   146bc:	movt	r0, #1
   146c0:	b	146e0 <__assert_fail@plt+0x28c8>
   146c4:	movw	r0, #3196	; 0xc7c
   146c8:	movt	r0, #3
   146cc:	ldr	r0, [r0]
   146d0:	cmp	r0, #0
   146d4:	beq	14700 <__assert_fail@plt+0x28e8>
   146d8:	movw	r0, #56965	; 0xde85
   146dc:	movt	r0, #1
   146e0:	bl	1341c <__assert_fail@plt+0x1604>
   146e4:	ldrh	r0, [r4, #4]
   146e8:	cmp	r0, #8
   146ec:	beq	146f8 <__assert_fail@plt+0x28e0>
   146f0:	mov	r0, #0
   146f4:	str	r0, [r4, #452]	; 0x1c4
   146f8:	sub	sp, fp, #28
   146fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14700:	mov	r5, r4
   14704:	movw	r8, #792	; 0x318
   14708:	ldrh	r0, [r5, #44]!	; 0x2c
   1470c:	movt	r8, #3
   14710:	subs	r7, r0, #2
   14714:	movwne	r7, #1
   14718:	ldr	r9, [r8, r7, lsl #2]
   1471c:	cmn	r9, #1
   14720:	ble	147f4 <__assert_fail@plt+0x29dc>
   14724:	movw	r0, #3192	; 0xc78
   14728:	movw	r2, #57134	; 0xdf2e
   1472c:	add	r6, sp, #296	; 0x128
   14730:	lsl	sl, r7, #2
   14734:	movt	r0, #3
   14738:	movt	r2, #1
   1473c:	ldr	r0, [r0]
   14740:	str	r0, [r4, #8]
   14744:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14748:	ldr	r3, [r4, #444]	; 0x1bc
   1474c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14750:	stm	sp, {r0, r1}
   14754:	mov	r0, r6
   14758:	movw	r1, #1025	; 0x401
   1475c:	bl	11c5c <snprintf@plt>
   14760:	mov	r0, r6
   14764:	bl	11c20 <strlen@plt>
   14768:	mov	r7, r0
   1476c:	ldr	r0, [r4, #172]	; 0xac
   14770:	mov	r1, r6
   14774:	mov	r3, #0
   14778:	str	r5, [sp]
   1477c:	cmp	r7, #1024	; 0x400
   14780:	movge	r7, #1024	; 0x400
   14784:	mov	r2, r7
   14788:	str	r0, [sp, #4]
   1478c:	mov	r0, r9
   14790:	bl	11ce0 <sendto@plt>
   14794:	cmp	r0, r7
   14798:	beq	147dc <__assert_fail@plt+0x29c4>
   1479c:	bl	11c50 <__errno_location@plt>
   147a0:	ldr	r7, [r0]
   147a4:	mov	r6, r0
   147a8:	mov	r0, r7
   147ac:	bl	11bcc <strerror@plt>
   147b0:	mov	r2, r0
   147b4:	movw	r0, #57147	; 0xdf3b
   147b8:	mov	r1, r7
   147bc:	movt	r0, #1
   147c0:	bl	1341c <__assert_fail@plt+0x1604>
   147c4:	mov	r0, #7
   147c8:	strh	r0, [r4, #4]
   147cc:	movw	r0, #57176	; 0xdf58
   147d0:	str	r7, [r6]
   147d4:	movt	r0, #1
   147d8:	bl	134a8 <__assert_fail@plt+0x1690>
   147dc:	ldr	r0, [r8, sl]
   147e0:	cmn	r0, #1
   147e4:	bgt	146e4 <__assert_fail@plt+0x28cc>
   147e8:	mov	r0, r9
   147ec:	bl	11e00 <close@plt>
   147f0:	b	146e4 <__assert_fail@plt+0x28cc>
   147f4:	vmov.i32	q8, #0	; 0x00000000
   147f8:	add	r2, sp, #296	; 0x128
   147fc:	add	r3, sp, #12
   14800:	add	r1, r2, #12
   14804:	vst1.32	{d16-d17}, [r1]
   14808:	mov	r1, #0
   1480c:	str	r1, [sp, #324]	; 0x144
   14810:	mov	r1, #2
   14814:	str	r1, [sp, #304]	; 0x130
   14818:	str	r0, [sp, #300]	; 0x12c
   1481c:	mov	r0, #1
   14820:	str	r0, [sp, #296]	; 0x128
   14824:	movw	r0, #1496	; 0x5d8
   14828:	movt	r0, #3
   1482c:	ldr	r1, [r0]
   14830:	mov	r0, #0
   14834:	bl	11da0 <getaddrinfo@plt>
   14838:	cmp	r0, #0
   1483c:	beq	14858 <__assert_fail@plt+0x2a40>
   14840:	bl	11a28 <gai_strerror@plt>
   14844:	mov	r1, r0
   14848:	movw	r0, #57013	; 0xdeb5
   1484c:	movt	r0, #1
   14850:	bl	1341c <__assert_fail@plt+0x1604>
   14854:	b	146e4 <__assert_fail@plt+0x28cc>
   14858:	ldr	r2, [sp, #12]
   1485c:	ldmib	r2, {r0, r1, r2}
   14860:	bl	11dac <socket@plt>
   14864:	cmn	r0, #1
   14868:	ble	148b8 <__assert_fail@plt+0x2aa0>
   1486c:	mov	r9, r0
   14870:	ldr	r0, [sp, #12]
   14874:	ldr	r2, [r0, #16]
   14878:	ldr	r1, [r0, #20]
   1487c:	mov	r0, r9
   14880:	bl	11c74 <bind@plt>
   14884:	mov	r6, r0
   14888:	ldr	r0, [sp, #12]
   1488c:	bl	11d94 <freeaddrinfo@plt>
   14890:	cmp	r6, #0
   14894:	beq	14724 <__assert_fail@plt+0x290c>
   14898:	bl	11c50 <__errno_location@plt>
   1489c:	ldr	r0, [r0]
   148a0:	bl	11bcc <strerror@plt>
   148a4:	mov	r1, r0
   148a8:	movw	r0, #57095	; 0xdf07
   148ac:	movt	r0, #1
   148b0:	bl	1341c <__assert_fail@plt+0x1604>
   148b4:	b	146e4 <__assert_fail@plt+0x28cc>
   148b8:	movw	r0, #57056	; 0xdee0
   148bc:	movt	r0, #1
   148c0:	bl	1341c <__assert_fail@plt+0x1604>
   148c4:	ldr	r0, [sp, #12]
   148c8:	bl	11d94 <freeaddrinfo@plt>
   148cc:	b	146e4 <__assert_fail@plt+0x28cc>
   148d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148d4:	add	fp, sp, #28
   148d8:	sub	sp, sp, #52	; 0x34
   148dc:	movw	r2, #1532	; 0x5fc
   148e0:	mov	r5, r0
   148e4:	mov	r6, r1
   148e8:	movt	r2, #3
   148ec:	ldr	r0, [r2]
   148f0:	add	r1, r0, #1
   148f4:	cmp	r0, #0
   148f8:	str	r1, [r2]
   148fc:	beq	14908 <__assert_fail@plt+0x2af0>
   14900:	sub	sp, fp, #28
   14904:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14908:	movw	r0, #57195	; 0xdf6b
   1490c:	sub	r1, fp, #36	; 0x24
   14910:	sub	r2, fp, #32
   14914:	mov	r3, #3
   14918:	movt	r0, #1
   1491c:	bl	1b0f0 <argp_parse@@Base+0x16d4>
   14920:	cmn	r0, #1
   14924:	ble	149fc <__assert_fail@plt+0x2be4>
   14928:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1492c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14930:	cmp	r0, #1
   14934:	blt	14a10 <__assert_fail@plt+0x2bf8>
   14938:	str	r6, [sp, #4]
   1493c:	add	r6, sp, #11
   14940:	b	14960 <__assert_fail@plt+0x2b48>
   14944:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14948:	add	r4, r4, #384	; 0x180
   1494c:	add	r1, r0, r0, lsl #1
   14950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14954:	add	r1, r0, r1, lsl #7
   14958:	cmp	r4, r1
   1495c:	bcs	14a14 <__assert_fail@plt+0x2bfc>
   14960:	add	r1, r4, #8
   14964:	mov	r0, r6
   14968:	mov	r2, #32
   1496c:	bl	11c98 <strncpy@plt>
   14970:	mov	r0, #0
   14974:	strb	r0, [sp, #43]	; 0x2b
   14978:	ldrh	r0, [r5, #4]
   1497c:	cmp	r0, #6
   14980:	beq	149c4 <__assert_fail@plt+0x2bac>
   14984:	ldr	r8, [r5, #40]	; 0x28
   14988:	cmp	r8, #1
   1498c:	blt	14944 <__assert_fail@plt+0x2b2c>
   14990:	ldr	r9, [r5, #44]	; 0x2c
   14994:	add	r7, r4, #44	; 0x2c
   14998:	mov	sl, #0
   1499c:	ldr	r0, [r9, sl, lsl #2]
   149a0:	mov	r1, r7
   149a4:	mov	r2, #32
   149a8:	bl	11ddc <strncmp@plt>
   149ac:	cmp	r0, #0
   149b0:	beq	149c4 <__assert_fail@plt+0x2bac>
   149b4:	add	sl, sl, #1
   149b8:	cmp	sl, r8
   149bc:	blt	1499c <__assert_fail@plt+0x2b84>
   149c0:	b	14944 <__assert_fail@plt+0x2b2c>
   149c4:	ldr	r0, [sp, #4]
   149c8:	mov	r1, #6
   149cc:	mov	r2, r6
   149d0:	mov	r3, #10
   149d4:	bl	15f10 <daemon@@Base+0x19c>
   149d8:	cmp	r0, #0
   149dc:	beq	14944 <__assert_fail@plt+0x2b2c>
   149e0:	mov	r7, r0
   149e4:	bl	11c50 <__errno_location@plt>
   149e8:	mov	r1, #0
   149ec:	str	r1, [r0]
   149f0:	mov	r0, r7
   149f4:	bl	134a8 <__assert_fail@plt+0x1690>
   149f8:	b	14944 <__assert_fail@plt+0x2b2c>
   149fc:	movw	r0, #57209	; 0xdf79
   14a00:	movt	r0, #1
   14a04:	bl	134a8 <__assert_fail@plt+0x1690>
   14a08:	sub	sp, fp, #28
   14a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a10:	mov	r0, r4
   14a14:	bl	1aed8 <argp_parse@@Base+0x14bc>
   14a18:	movw	r1, #1532	; 0x5fc
   14a1c:	mov	r0, #0
   14a20:	movt	r1, #3
   14a24:	str	r0, [r1]
   14a28:	sub	sp, fp, #28
   14a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a34:	add	fp, sp, #28
   14a38:	sub	sp, sp, #4
   14a3c:	movw	r1, #55877	; 0xda45
   14a40:	mov	r4, r0
   14a44:	movt	r1, #1
   14a48:	bl	11d70 <fopen64@plt>
   14a4c:	cmp	r0, #0
   14a50:	beq	14ce8 <__assert_fail@plt+0x2ed0>
   14a54:	mov	r9, r0
   14a58:	mov	r0, #2048	; 0x800
   14a5c:	bl	1bd8c <argp_parse@@Base+0x2370>
   14a60:	cmp	r0, #0
   14a64:	beq	14d68 <__assert_fail@plt+0x2f50>
   14a68:	movw	r4, #3136	; 0xc40
   14a6c:	mov	r6, r0
   14a70:	movt	r4, #3
   14a74:	ldr	r0, [r4]
   14a78:	bl	1aed8 <argp_parse@@Base+0x14bc>
   14a7c:	mov	r0, #0
   14a80:	mov	r1, #2048	; 0x800
   14a84:	mov	r2, r9
   14a88:	mov	r5, #2048	; 0x800
   14a8c:	str	r0, [r4]
   14a90:	mov	r0, r6
   14a94:	bl	11a34 <fgets@plt>
   14a98:	cmp	r0, #0
   14a9c:	beq	14d80 <__assert_fail@plt+0x2f68>
   14aa0:	mov	sl, #0
   14aa4:	mov	r8, #0
   14aa8:	mov	r7, r6
   14aac:	b	14ad4 <__assert_fail@plt+0x2cbc>
   14ab0:	mov	r8, #0
   14ab4:	mov	r6, r7
   14ab8:	sub	sl, r6, r7
   14abc:	mov	r0, r6
   14ac0:	mov	r2, r9
   14ac4:	sub	r1, r5, sl
   14ac8:	bl	11a34 <fgets@plt>
   14acc:	cmp	r0, #0
   14ad0:	beq	14d84 <__assert_fail@plt+0x2f6c>
   14ad4:	mov	r0, r6
   14ad8:	bl	11c20 <strlen@plt>
   14adc:	mov	r4, r0
   14ae0:	cmp	r8, #0
   14ae4:	beq	14b18 <__assert_fail@plt+0x2d00>
   14ae8:	mov	r1, r6
   14aec:	ldrb	r0, [r1]
   14af0:	cmp	r0, #32
   14af4:	cmpne	r0, #9
   14af8:	bne	14b04 <__assert_fail@plt+0x2cec>
   14afc:	add	r1, r1, #1
   14b00:	b	14aec <__assert_fail@plt+0x2cd4>
   14b04:	sub	r0, r6, r1
   14b08:	add	r4, r0, r4
   14b0c:	mov	r0, r6
   14b10:	add	r2, r4, #1
   14b14:	bl	11a04 <memmove@plt>
   14b18:	mov	r0, r6
   14b1c:	mov	r1, #10
   14b20:	bl	11c38 <strchr@plt>
   14b24:	cmp	r0, #0
   14b28:	beq	14bc0 <__assert_fail@plt+0x2da8>
   14b2c:	bl	11bfc <__ctype_b_loc@plt>
   14b30:	mov	r4, r0
   14b34:	ldr	r0, [r0]
   14b38:	mov	r1, r7
   14b3c:	ldrb	r2, [r1], #1
   14b40:	add	r3, r0, r2, lsl #1
   14b44:	ldrb	r3, [r3, #1]
   14b48:	tst	r3, #32
   14b4c:	bne	14b3c <__assert_fail@plt+0x2d24>
   14b50:	cmp	r2, #35	; 0x23
   14b54:	beq	14bf0 <__assert_fail@plt+0x2dd8>
   14b58:	cmp	r2, #33	; 0x21
   14b5c:	beq	14c08 <__assert_fail@plt+0x2df0>
   14b60:	cmp	r2, #0
   14b64:	beq	14ab0 <__assert_fail@plt+0x2c98>
   14b68:	sub	r6, r1, #1
   14b6c:	mov	r0, r6
   14b70:	bl	11c20 <strlen@plt>
   14b74:	add	r2, r0, #1
   14b78:	mov	r0, r7
   14b7c:	mov	r1, r6
   14b80:	bl	11a04 <memmove@plt>
   14b84:	mov	r0, r7
   14b88:	bl	11c20 <strlen@plt>
   14b8c:	add	r6, r7, r0
   14b90:	ldr	r0, [r4]
   14b94:	ldrb	r1, [r6, #-1]!
   14b98:	add	r2, r0, r1, lsl #1
   14b9c:	ldrb	r2, [r2, #1]
   14ba0:	tst	r2, #32
   14ba4:	bne	14b94 <__assert_fail@plt+0x2d7c>
   14ba8:	cmp	r1, #92	; 0x5c
   14bac:	bne	14ca8 <__assert_fail@plt+0x2e90>
   14bb0:	mov	r0, #0
   14bb4:	mov	r8, #1
   14bb8:	strb	r0, [r6]
   14bbc:	b	14ab8 <__assert_fail@plt+0x2ca0>
   14bc0:	lsl	r5, r5, #1
   14bc4:	mov	r0, r7
   14bc8:	mov	r1, r5
   14bcc:	bl	1bdbc <argp_parse@@Base+0x23a0>
   14bd0:	cmp	r0, #0
   14bd4:	beq	14da0 <__assert_fail@plt+0x2f88>
   14bd8:	add	r1, r0, sl
   14bdc:	mov	r8, #0
   14be0:	mov	r7, r0
   14be4:	add	r1, r1, r4
   14be8:	sub	r6, r1, #1
   14bec:	b	14ab8 <__assert_fail@plt+0x2ca0>
   14bf0:	ldrb	r2, [r1]
   14bf4:	mov	r8, #0
   14bf8:	cmp	r2, #33	; 0x21
   14bfc:	bne	14ab4 <__assert_fail@plt+0x2c9c>
   14c00:	add	r1, r1, #1
   14c04:	b	14c14 <__assert_fail@plt+0x2dfc>
   14c08:	ldrb	r2, [r1]
   14c0c:	cmp	r2, #33	; 0x21
   14c10:	addeq	r1, r1, #1
   14c14:	sub	r4, r1, #1
   14c18:	ldrb	r1, [r4, #1]!
   14c1c:	add	r2, r0, r1, lsl #1
   14c20:	ldrb	r2, [r2, #1]
   14c24:	tst	r2, #32
   14c28:	bne	14c18 <__assert_fail@plt+0x2e00>
   14c2c:	cmp	r1, #0
   14c30:	beq	14ab0 <__assert_fail@plt+0x2c98>
   14c34:	movw	r0, #3136	; 0xc40
   14c38:	movt	r0, #3
   14c3c:	mov	r6, r0
   14c40:	ldr	r0, [r0]
   14c44:	bl	1aed8 <argp_parse@@Base+0x14bc>
   14c48:	mov	r8, #0
   14c4c:	str	r8, [r6]
   14c50:	ldrb	r0, [r4]
   14c54:	cmp	r0, #42	; 0x2a
   14c58:	beq	14ab4 <__assert_fail@plt+0x2c9c>
   14c5c:	mov	r0, r4
   14c60:	mov	r1, #44	; 0x2c
   14c64:	bl	11c38 <strchr@plt>
   14c68:	cmp	r0, #0
   14c6c:	movne	r1, #0
   14c70:	strbne	r1, [r0]
   14c74:	movw	r1, #59339	; 0xe7cb
   14c78:	mov	r0, r4
   14c7c:	movt	r1, #1
   14c80:	bl	11d88 <strpbrk@plt>
   14c84:	cmp	r0, #0
   14c88:	movne	r1, #0
   14c8c:	strbne	r1, [r0]
   14c90:	mov	r0, r4
   14c94:	bl	11aac <strdup@plt>
   14c98:	movw	r1, #3136	; 0xc40
   14c9c:	movt	r1, #3
   14ca0:	str	r0, [r1]
   14ca4:	b	14ab4 <__assert_fail@plt+0x2c9c>
   14ca8:	mov	r8, #0
   14cac:	mov	r0, #1
   14cb0:	mov	r1, #464	; 0x1d0
   14cb4:	strb	r8, [r6, #1]
   14cb8:	bl	1bd38 <argp_parse@@Base+0x231c>
   14cbc:	mov	r4, r0
   14cc0:	mov	r0, r7
   14cc4:	mov	r1, r4
   14cc8:	bl	14dc8 <__assert_fail@plt+0x2fb0>
   14ccc:	movw	r0, #2632	; 0xa48
   14cd0:	movt	r0, #3
   14cd4:	mov	r1, r0
   14cd8:	ldr	r0, [r0]
   14cdc:	str	r4, [r1]
   14ce0:	str	r0, [r4]
   14ce4:	b	14ab4 <__assert_fail@plt+0x2c9c>
   14ce8:	movw	r0, #59216	; 0xe750
   14cec:	mov	r1, r4
   14cf0:	movt	r0, #1
   14cf4:	bl	1341c <__assert_fail@plt+0x1604>
   14cf8:	movw	r5, #2632	; 0xa48
   14cfc:	movt	r5, #3
   14d00:	ldr	r0, [r5]
   14d04:	cmp	r0, #0
   14d08:	bne	14d50 <__assert_fail@plt+0x2f38>
   14d0c:	mov	r0, #1
   14d10:	mov	r1, #464	; 0x1d0
   14d14:	bl	1bd38 <argp_parse@@Base+0x231c>
   14d18:	mov	r4, r0
   14d1c:	movw	r0, #59232	; 0xe760
   14d20:	movt	r0, #1
   14d24:	mov	r1, r4
   14d28:	bl	14dc8 <__assert_fail@plt+0x2fb0>
   14d2c:	mov	r0, #1
   14d30:	mov	r1, #464	; 0x1d0
   14d34:	bl	1bd38 <argp_parse@@Base+0x231c>
   14d38:	mov	r1, r0
   14d3c:	str	r0, [r4]
   14d40:	movw	r0, #59251	; 0xe773
   14d44:	movt	r0, #1
   14d48:	bl	14dc8 <__assert_fail@plt+0x2fb0>
   14d4c:	str	r4, [r5]
   14d50:	movw	r1, #3120	; 0xc30
   14d54:	mov	r0, #1
   14d58:	movt	r1, #3
   14d5c:	str	r0, [r1]
   14d60:	sub	sp, fp, #28
   14d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d68:	movw	r0, #59261	; 0xe77d
   14d6c:	movt	r0, #1
   14d70:	bl	1341c <__assert_fail@plt+0x1604>
   14d74:	mov	r0, r9
   14d78:	bl	11cc8 <fclose@plt>
   14d7c:	b	14dbc <__assert_fail@plt+0x2fa4>
   14d80:	mov	r7, r6
   14d84:	mov	r0, r9
   14d88:	bl	11cc8 <fclose@plt>
   14d8c:	mov	r0, r7
   14d90:	bl	1aed8 <argp_parse@@Base+0x14bc>
   14d94:	mov	r0, #1
   14d98:	sub	sp, fp, #28
   14d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14da0:	movw	r0, #59302	; 0xe7a6
   14da4:	movt	r0, #1
   14da8:	bl	1341c <__assert_fail@plt+0x1604>
   14dac:	mov	r0, r9
   14db0:	bl	11cc8 <fclose@plt>
   14db4:	mov	r0, r7
   14db8:	bl	1aed8 <argp_parse@@Base+0x14bc>
   14dbc:	mov	r0, #0
   14dc0:	sub	sp, fp, #28
   14dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dcc:	add	fp, sp, #28
   14dd0:	sub	sp, sp, #220	; 0xdc
   14dd4:	sub	sp, sp, #1024	; 0x400
   14dd8:	mov	r5, r0
   14ddc:	movw	r0, #3136	; 0xc40
   14de0:	movw	r3, #59437	; 0xe82d
   14de4:	movw	r2, #57647	; 0xe12f
   14de8:	mov	r4, r1
   14dec:	movt	r0, #3
   14df0:	movt	r3, #1
   14df4:	movt	r2, #1
   14df8:	mov	r1, r5
   14dfc:	ldr	r0, [r0]
   14e00:	cmp	r0, #0
   14e04:	moveq	r2, r3
   14e08:	movne	r3, r0
   14e0c:	movw	r0, #57631	; 0xe11f
   14e10:	movt	r0, #1
   14e14:	bl	1341c <__assert_fail@plt+0x1604>
   14e18:	bl	11c50 <__errno_location@plt>
   14e1c:	mov	r1, #0
   14e20:	mov	r2, #464	; 0x1d0
   14e24:	str	r1, [r0]
   14e28:	mov	r0, r4
   14e2c:	mov	r1, #0
   14e30:	bl	11c8c <memset@plt>
   14e34:	add	r9, r4, #12
   14e38:	add	r7, sp, #212	; 0xd4
   14e3c:	str	r4, [sp, #4]
   14e40:	b	151d0 <__assert_fail@plt+0x33b8>
   14e44:	mov	r5, r8
   14e48:	uxtb	r0, r6
   14e4c:	cmp	r0, #0
   14e50:	cmpne	r0, #9
   14e54:	beq	14e64 <__assert_fail@plt+0x304c>
   14e58:	ldrb	r6, [r5, #1]!
   14e5c:	cmp	r0, #46	; 0x2e
   14e60:	bne	14e48 <__assert_fail@plt+0x3030>
   14e64:	mov	sl, r7
   14e68:	movw	r7, #57656	; 0xe138
   14e6c:	tst	r6, #255	; 0xff
   14e70:	movt	r7, #1
   14e74:	mov	r4, sl
   14e78:	beq	14ea4 <__assert_fail@plt+0x308c>
   14e7c:	uxtb	r1, r6
   14e80:	mov	r0, r7
   14e84:	mov	r2, #5
   14e88:	bl	11cb0 <memchr@plt>
   14e8c:	cmp	r0, #0
   14e90:	bne	14eb4 <__assert_fail@plt+0x309c>
   14e94:	strb	r6, [r4], #1
   14e98:	ldrb	r6, [r5, #1]!
   14e9c:	cmp	r6, #0
   14ea0:	bne	14e7c <__assert_fail@plt+0x3064>
   14ea4:	mov	r0, #0
   14ea8:	mov	r7, sl
   14eac:	strb	r0, [r4]
   14eb0:	b	14ee8 <__assert_fail@plt+0x30d0>
   14eb4:	mov	r0, #0
   14eb8:	mov	r7, sl
   14ebc:	strb	r0, [r4]
   14ec0:	movw	r4, #57658	; 0xe13a
   14ec4:	movt	r4, #1
   14ec8:	uxtb	r1, r6
   14ecc:	mov	r0, r4
   14ed0:	mov	r2, #3
   14ed4:	bl	11cb0 <memchr@plt>
   14ed8:	cmp	r0, #0
   14edc:	ldrbne	r6, [r5, #1]!
   14ee0:	cmpne	r6, #0
   14ee4:	bne	14ec8 <__assert_fail@plt+0x30b0>
   14ee8:	mov	r4, #0
   14eec:	mov	sl, #0
   14ef0:	mov	r6, r7
   14ef4:	b	14f14 <__assert_fail@plt+0x30fc>
   14ef8:	add	r6, r6, #1
   14efc:	cmp	r7, #33	; 0x21
   14f00:	beq	14f10 <__assert_fail@plt+0x30f8>
   14f04:	cmp	r7, #61	; 0x3d
   14f08:	moveq	r4, #1
   14f0c:	b	14f14 <__assert_fail@plt+0x30fc>
   14f10:	mov	sl, #1
   14f14:	ldrb	r7, [r6]
   14f18:	cmp	r7, #33	; 0x21
   14f1c:	cmpne	r7, #61	; 0x3d
   14f20:	beq	14ef8 <__assert_fail@plt+0x30e0>
   14f24:	cmp	r7, #42	; 0x2a
   14f28:	bne	14f3c <__assert_fail@plt+0x3124>
   14f2c:	mov	r1, #0
   14f30:	mov	r0, #255	; 0xff
   14f34:	add	r7, sp, #212	; 0xd4
   14f38:	b	15014 <__assert_fail@plt+0x31fc>
   14f3c:	bl	11bfc <__ctype_b_loc@plt>
   14f40:	ldr	r0, [r0]
   14f44:	add	r0, r0, r7, lsl #1
   14f48:	ldrb	r0, [r0, #1]
   14f4c:	tst	r0, #8
   14f50:	bne	14f9c <__assert_fail@plt+0x3184>
   14f54:	movw	r0, #424	; 0x1a8
   14f58:	movt	r0, #3
   14f5c:	ldr	r1, [r0]
   14f60:	cmp	r1, #0
   14f64:	beq	154b8 <__assert_fail@plt+0x36a0>
   14f68:	movw	r0, #424	; 0x1a8
   14f6c:	movt	r0, #3
   14f70:	add	r7, r0, #4
   14f74:	mov	r0, r6
   14f78:	bl	11b0c <strcasecmp@plt>
   14f7c:	cmp	r0, #0
   14f80:	beq	14ff4 <__assert_fail@plt+0x31dc>
   14f84:	ldr	r1, [r7, #4]
   14f88:	add	r0, r7, #8
   14f8c:	mov	r7, r0
   14f90:	cmp	r1, #0
   14f94:	bne	14f74 <__assert_fail@plt+0x315c>
   14f98:	b	154b8 <__assert_fail@plt+0x36a0>
   14f9c:	mov	r0, r6
   14fa0:	mov	r1, #0
   14fa4:	mov	r2, #10
   14fa8:	bl	119a4 <strtol@plt>
   14fac:	cmp	r0, #0
   14fb0:	bmi	154b8 <__assert_fail@plt+0x36a0>
   14fb4:	cmp	r0, #8
   14fb8:	blt	14fc4 <__assert_fail@plt+0x31ac>
   14fbc:	cmp	r0, #16
   14fc0:	bne	154b8 <__assert_fail@plt+0x36a0>
   14fc4:	cmp	r0, #16
   14fc8:	bne	14fdc <__assert_fail@plt+0x31c4>
   14fcc:	mov	r1, #255	; 0xff
   14fd0:	mov	r0, #0
   14fd4:	add	r7, sp, #212	; 0xd4
   14fd8:	b	15014 <__assert_fail@plt+0x31fc>
   14fdc:	cmp	r4, #0
   14fe0:	add	r7, sp, #212	; 0xd4
   14fe4:	beq	15004 <__assert_fail@plt+0x31ec>
   14fe8:	mov	r1, #1
   14fec:	lsl	r0, r1, r0
   14ff0:	b	15010 <__assert_fail@plt+0x31f8>
   14ff4:	ldr	r0, [r7]
   14ff8:	cmp	r0, #0
   14ffc:	bpl	14fb4 <__assert_fail@plt+0x319c>
   15000:	b	154b8 <__assert_fail@plt+0x36a0>
   15004:	add	r0, r0, #1
   15008:	mvn	r1, #0
   1500c:	mvn	r0, r1, lsl r0
   15010:	mov	r1, #0
   15014:	ldrb	r4, [r8]
   15018:	cmp	r4, #0
   1501c:	beq	151d0 <__assert_fail@plt+0x33b8>
   15020:	cmp	sl, #0
   15024:	mov	r6, r1
   15028:	moveq	r6, r0
   1502c:	moveq	r0, r1
   15030:	mvn	sl, r0
   15034:	movw	r0, #57688	; 0xe158
   15038:	uxtb	r1, r4
   1503c:	mov	r2, #5
   15040:	movt	r0, #1
   15044:	bl	11cb0 <memchr@plt>
   15048:	cmp	r0, #0
   1504c:	bne	151d0 <__assert_fail@plt+0x33b8>
   15050:	tst	r4, #255	; 0xff
   15054:	beq	15084 <__assert_fail@plt+0x326c>
   15058:	movw	r0, #57693	; 0xe15d
   1505c:	uxtb	r1, r4
   15060:	mov	r2, #6
   15064:	movt	r0, #1
   15068:	bl	11cb0 <memchr@plt>
   1506c:	cmp	r0, #0
   15070:	bne	15084 <__assert_fail@plt+0x326c>
   15074:	strb	r4, [r7], #1
   15078:	ldrb	r4, [r8, #1]!
   1507c:	cmp	r4, #0
   15080:	bne	15058 <__assert_fail@plt+0x3240>
   15084:	mov	r0, #0
   15088:	strb	r0, [r7]
   1508c:	ldrb	r4, [sp, #212]	; 0xd4
   15090:	cmp	r4, #42	; 0x2a
   15094:	bne	150ec <__assert_fail@plt+0x32d4>
   15098:	ldrb	r1, [sp, #213]	; 0xd5
   1509c:	movw	r3, #2628	; 0xa44
   150a0:	mov	r0, #0
   150a4:	add	r7, sp, #212	; 0xd4
   150a8:	mov	r4, #1
   150ac:	movt	r3, #3
   150b0:	cmp	r1, #42	; 0x2a
   150b4:	beq	150dc <__assert_fail@plt+0x32c4>
   150b8:	ldrb	r2, [r9, r0]
   150bc:	and	r2, r2, sl
   150c0:	orr	r2, r2, r6
   150c4:	strb	r2, [r9, r0]
   150c8:	add	r0, r0, #1
   150cc:	cmp	r0, #25
   150d0:	beq	151b8 <__assert_fail@plt+0x33a0>
   150d4:	cmp	r1, #42	; 0x2a
   150d8:	bne	150b8 <__assert_fail@plt+0x32a0>
   150dc:	ldr	r2, [r3]
   150e0:	tst	r2, r4, lsl r0
   150e4:	bne	150c8 <__assert_fail@plt+0x32b0>
   150e8:	b	150b8 <__assert_fail@plt+0x32a0>
   150ec:	bl	11bfc <__ctype_b_loc@plt>
   150f0:	ldr	r0, [r0]
   150f4:	add	r7, sp, #212	; 0xd4
   150f8:	add	r0, r0, r4, lsl #1
   150fc:	ldrb	r0, [r0, #1]
   15100:	tst	r0, #8
   15104:	bne	15150 <__assert_fail@plt+0x3338>
   15108:	movw	r0, #528	; 0x210
   1510c:	movt	r0, #3
   15110:	ldr	r1, [r0]
   15114:	cmp	r1, #0
   15118:	beq	154d0 <__assert_fail@plt+0x36b8>
   1511c:	movw	r0, #528	; 0x210
   15120:	movt	r0, #3
   15124:	add	r4, r0, #4
   15128:	mov	r0, r7
   1512c:	bl	11b0c <strcasecmp@plt>
   15130:	cmp	r0, #0
   15134:	beq	1516c <__assert_fail@plt+0x3354>
   15138:	ldr	r1, [r4, #4]
   1513c:	add	r0, r4, #8
   15140:	mov	r4, r0
   15144:	cmp	r1, #0
   15148:	bne	15128 <__assert_fail@plt+0x3310>
   1514c:	b	154d0 <__assert_fail@plt+0x36b8>
   15150:	mov	r0, r7
   15154:	mov	r1, #0
   15158:	mov	r2, #10
   1515c:	bl	119a4 <strtol@plt>
   15160:	cmp	r0, #193	; 0xc1
   15164:	bcc	15178 <__assert_fail@plt+0x3360>
   15168:	b	154d0 <__assert_fail@plt+0x36b8>
   1516c:	ldr	r0, [r4]
   15170:	cmp	r0, #193	; 0xc1
   15174:	bcs	154d0 <__assert_fail@plt+0x36b8>
   15178:	ubfx	r0, r0, #3, #7
   1517c:	ldr	r1, [sp, #4]
   15180:	mov	r3, #1
   15184:	add	r1, r1, r0
   15188:	ldrb	r2, [r1, #12]
   1518c:	and	r2, r2, sl
   15190:	orr	r2, r2, r6
   15194:	strb	r2, [r1, #12]
   15198:	movw	r1, #2628	; 0xa44
   1519c:	movt	r1, #3
   151a0:	mov	r2, r1
   151a4:	ldr	r1, [r1]
   151a8:	orr	r0, r1, r3, lsl r0
   151ac:	str	r0, [r2]
   151b0:	b	151b8 <__assert_fail@plt+0x33a0>
   151b4:	add	r8, r8, #1
   151b8:	ldrb	r4, [r8]
   151bc:	cmp	r4, #32
   151c0:	cmpne	r4, #44	; 0x2c
   151c4:	beq	151b4 <__assert_fail@plt+0x339c>
   151c8:	cmp	r4, #0
   151cc:	bne	15034 <__assert_fail@plt+0x321c>
   151d0:	ldrb	r6, [r5]
   151d4:	mov	r8, r5
   151d8:	cmp	r6, #0
   151dc:	beq	151ec <__assert_fail@plt+0x33d4>
   151e0:	cmp	r6, #9
   151e4:	cmpne	r6, #32
   151e8:	bne	14e44 <__assert_fail@plt+0x302c>
   151ec:	ldr	r9, [sp, #4]
   151f0:	add	r5, r8, #1
   151f4:	b	151fc <__assert_fail@plt+0x33e4>
   151f8:	ldrb	r6, [r5], #1
   151fc:	uxtb	r0, r6
   15200:	cmp	r0, #9
   15204:	cmpne	r0, #32
   15208:	beq	151f8 <__assert_fail@plt+0x33e0>
   1520c:	cmp	r0, #45	; 0x2d
   15210:	bne	15228 <__assert_fail@plt+0x3410>
   15214:	ldr	r0, [r9, #460]	; 0x1cc
   15218:	orr	r0, r0, #1
   1521c:	str	r0, [r9, #460]	; 0x1cc
   15220:	ldrb	r6, [r5]
   15224:	b	1522c <__assert_fail@plt+0x3414>
   15228:	sub	r5, r5, #1
   1522c:	uxtb	r0, r6
   15230:	cmp	r0, #46	; 0x2e
   15234:	ble	152b0 <__assert_fail@plt+0x3498>
   15238:	cmp	r0, #47	; 0x2f
   1523c:	beq	152c8 <__assert_fail@plt+0x34b0>
   15240:	cmp	r0, #64	; 0x40
   15244:	beq	15328 <__assert_fail@plt+0x3510>
   15248:	cmp	r0, #124	; 0x7c
   1524c:	bne	153e0 <__assert_fail@plt+0x35c8>
   15250:	mov	r0, r5
   15254:	bl	11aac <strdup@plt>
   15258:	add	r4, r5, #1
   1525c:	str	r0, [r9, #40]	; 0x28
   15260:	movw	r1, #2050	; 0x802
   15264:	mov	r0, r4
   15268:	bl	11b90 <open64@plt>
   1526c:	mov	r5, r0
   15270:	strh	r0, [r9, #6]
   15274:	lsl	r0, r0, #16
   15278:	cmn	r0, #1
   1527c:	ble	15504 <__assert_fail@plt+0x36ec>
   15280:	movw	r1, #724	; 0x2d4
   15284:	mov	r0, r4
   15288:	movt	r1, #3
   1528c:	bl	11998 <strcmp@plt>
   15290:	cmp	r0, #0
   15294:	beq	154fc <__assert_fail@plt+0x36e4>
   15298:	sxth	r0, r5
   1529c:	bl	11dd0 <isatty@plt>
   152a0:	cmp	r0, #0
   152a4:	bne	15320 <__assert_fail@plt+0x3508>
   152a8:	mov	r0, #9
   152ac:	b	15590 <__assert_fail@plt+0x3778>
   152b0:	cmp	r0, #0
   152b4:	beq	153cc <__assert_fail@plt+0x35b4>
   152b8:	cmp	r0, #42	; 0x2a
   152bc:	bne	153e0 <__assert_fail@plt+0x35c8>
   152c0:	mov	r0, #6
   152c4:	b	15590 <__assert_fail@plt+0x3778>
   152c8:	mov	r0, r5
   152cc:	bl	11aac <strdup@plt>
   152d0:	str	r0, [r9, #40]	; 0x28
   152d4:	mov	r0, r5
   152d8:	movw	r1, #1089	; 0x441
   152dc:	mov	r2, #420	; 0x1a4
   152e0:	bl	11b90 <open64@plt>
   152e4:	mov	r4, r0
   152e8:	strh	r0, [r9, #6]
   152ec:	lsl	r0, r0, #16
   152f0:	cmn	r0, #1
   152f4:	ble	15524 <__assert_fail@plt+0x370c>
   152f8:	movw	r1, #724	; 0x2d4
   152fc:	mov	r0, r5
   15300:	movt	r1, #3
   15304:	bl	11998 <strcmp@plt>
   15308:	cmp	r0, #0
   1530c:	beq	154fc <__assert_fail@plt+0x36e4>
   15310:	sxth	r0, r4
   15314:	bl	11dd0 <isatty@plt>
   15318:	cmp	r0, #0
   1531c:	beq	1558c <__assert_fail@plt+0x3774>
   15320:	mov	r0, #2
   15324:	b	15590 <__assert_fail@plt+0x3778>
   15328:	add	r4, r5, #1
   1532c:	mov	r0, r4
   15330:	bl	11aac <strdup@plt>
   15334:	vmov.i32	q8, #0	; 0x00000000
   15338:	str	r0, [r9, #40]	; 0x28
   1533c:	add	r0, sp, #8
   15340:	add	r5, r9, #44	; 0x2c
   15344:	mov	r2, #132	; 0x84
   15348:	add	r1, r0, #16
   1534c:	vst1.64	{d16-d17}, [r1]
   15350:	mov	r1, #8
   15354:	vst1.64	{d16-d17}, [r0], r1
   15358:	mov	r1, #2
   1535c:	str	r1, [r0]
   15360:	movw	r0, #788	; 0x314
   15364:	mov	r1, #0
   15368:	movt	r0, #3
   1536c:	ldr	r0, [r0]
   15370:	cmp	r0, #0
   15374:	str	r0, [sp, #12]
   15378:	moveq	r0, #32
   1537c:	streq	r0, [sp, #8]
   15380:	mov	r0, r5
   15384:	bl	11c8c <memset@plt>
   15388:	movw	r0, #1496	; 0x5d8
   1538c:	add	r2, sp, #8
   15390:	sub	r3, fp, #36	; 0x24
   15394:	movt	r0, #3
   15398:	ldr	r1, [r0]
   1539c:	mov	r0, r4
   153a0:	bl	11da0 <getaddrinfo@plt>
   153a4:	cmn	r0, #10
   153a8:	beq	153bc <__assert_fail@plt+0x35a4>
   153ac:	cmp	r0, #0
   153b0:	beq	15544 <__assert_fail@plt+0x372c>
   153b4:	cmn	r0, #3
   153b8:	bne	15574 <__assert_fail@plt+0x375c>
   153bc:	mov	r0, #10
   153c0:	str	r0, [r9, #452]	; 0x1c4
   153c4:	mov	r0, #8
   153c8:	b	15578 <__assert_fail@plt+0x3760>
   153cc:	mov	r0, #0
   153d0:	strh	r0, [r9, #4]
   153d4:	movw	r0, #57726	; 0xe17e
   153d8:	movt	r0, #1
   153dc:	b	154f0 <__assert_fail@plt+0x36d8>
   153e0:	mov	r0, #1
   153e4:	mov	r1, r5
   153e8:	str	r0, [r9, #40]	; 0x28
   153ec:	b	153fc <__assert_fail@plt+0x35e4>
   153f0:	add	r0, r0, #1
   153f4:	str	r0, [r9, #40]	; 0x28
   153f8:	add	r1, r1, #1
   153fc:	ldrb	r2, [r1]
   15400:	cmp	r2, #44	; 0x2c
   15404:	beq	153f0 <__assert_fail@plt+0x35d8>
   15408:	cmp	r2, #0
   1540c:	bne	153f8 <__assert_fail@plt+0x35e0>
   15410:	lsl	r0, r0, #2
   15414:	bl	1bd8c <argp_parse@@Base+0x2370>
   15418:	str	r0, [r9, #44]	; 0x2c
   1541c:	ldrb	r0, [r5]
   15420:	cmp	r0, #0
   15424:	beq	154b0 <__assert_fail@plt+0x3698>
   15428:	mov	r8, #0
   1542c:	mov	r7, #0
   15430:	mov	r4, r5
   15434:	b	1543c <__assert_fail@plt+0x3624>
   15438:	ldrb	r0, [r4, #1]!
   1543c:	uxtb	r0, r0
   15440:	cmp	r0, #0
   15444:	cmpne	r0, #44	; 0x2c
   15448:	bne	15438 <__assert_fail@plt+0x3620>
   1544c:	sub	r6, r4, r5
   15450:	add	r0, r6, #1
   15454:	bl	1bd8c <argp_parse@@Base+0x2370>
   15458:	ldr	r1, [r9, #44]	; 0x2c
   1545c:	str	r0, [r1, r7, lsl #2]
   15460:	ldr	r0, [r9, #44]	; 0x2c
   15464:	ldr	r0, [r0, r7, lsl #2]
   15468:	cmp	r0, #0
   1546c:	beq	15490 <__assert_fail@plt+0x3678>
   15470:	mov	r1, r5
   15474:	mov	r2, r6
   15478:	bl	11c98 <strncpy@plt>
   1547c:	ldr	r0, [r9, #44]	; 0x2c
   15480:	ldr	r0, [r0, r7, lsl #2]
   15484:	strb	r8, [r0, r6]
   15488:	b	15490 <__assert_fail@plt+0x3678>
   1548c:	add	r4, r4, #1
   15490:	ldrb	r0, [r4]
   15494:	cmp	r0, #44	; 0x2c
   15498:	cmpne	r0, #32
   1549c:	beq	1548c <__assert_fail@plt+0x3674>
   154a0:	add	r7, r7, #1
   154a4:	cmp	r0, #0
   154a8:	mov	r5, r4
   154ac:	bne	1543c <__assert_fail@plt+0x3624>
   154b0:	mov	r0, #5
   154b4:	b	15590 <__assert_fail@plt+0x3778>
   154b8:	movw	r2, #57661	; 0xe13d
   154bc:	add	r4, sp, #8
   154c0:	mov	r1, #200	; 0xc8
   154c4:	mov	r3, r6
   154c8:	movt	r2, #1
   154cc:	b	154e4 <__assert_fail@plt+0x36cc>
   154d0:	movw	r2, #57699	; 0xe163
   154d4:	add	r4, sp, #8
   154d8:	add	r3, sp, #212	; 0xd4
   154dc:	mov	r1, #200	; 0xc8
   154e0:	movt	r2, #1
   154e4:	mov	r0, r4
   154e8:	bl	11c5c <snprintf@plt>
   154ec:	mov	r0, r4
   154f0:	bl	134a8 <__assert_fail@plt+0x1690>
   154f4:	sub	sp, fp, #28
   154f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154fc:	mov	r0, #3
   15500:	b	15590 <__assert_fail@plt+0x3778>
   15504:	mov	r5, #0
   15508:	mov	r0, r4
   1550c:	strh	r5, [r9, #4]
   15510:	bl	134a8 <__assert_fail@plt+0x1690>
   15514:	ldr	r0, [r9, #40]	; 0x28
   15518:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1551c:	str	r5, [r9, #40]	; 0x28
   15520:	b	15594 <__assert_fail@plt+0x377c>
   15524:	mov	r4, #0
   15528:	mov	r0, r5
   1552c:	strh	r4, [r9, #4]
   15530:	bl	134a8 <__assert_fail@plt+0x1690>
   15534:	ldr	r0, [r9, #40]	; 0x28
   15538:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1553c:	str	r4, [r9, #40]	; 0x28
   15540:	b	15594 <__assert_fail@plt+0x377c>
   15544:	mov	r0, #4
   15548:	strh	r0, [r9, #4]
   1554c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15550:	ldr	r0, [r4, #16]
   15554:	str	r0, [r9, #172]	; 0xac
   15558:	mov	r0, r5
   1555c:	ldr	r2, [r4, #16]
   15560:	ldr	r1, [r4, #20]
   15564:	bl	11a58 <memcpy@plt>
   15568:	mov	r0, r4
   1556c:	bl	11d94 <freeaddrinfo@plt>
   15570:	b	15594 <__assert_fail@plt+0x377c>
   15574:	mov	r0, #0
   15578:	strh	r0, [r9, #4]
   1557c:	mov	r0, #0
   15580:	bl	11a70 <time@plt>
   15584:	str	r0, [r9, #8]
   15588:	b	15594 <__assert_fail@plt+0x377c>
   1558c:	mov	r0, #1
   15590:	strh	r0, [r9, #4]
   15594:	movw	r4, #3136	; 0xc40
   15598:	movt	r4, #3
   1559c:	ldr	r0, [r4]
   155a0:	cmp	r0, #0
   155a4:	beq	155c4 <__assert_fail@plt+0x37ac>
   155a8:	bl	11aac <strdup@plt>
   155ac:	str	r0, [r9, #436]	; 0x1b4
   155b0:	ldr	r0, [r4]
   155b4:	bl	11c20 <strlen@plt>
   155b8:	str	r0, [r9, #440]	; 0x1b8
   155bc:	sub	sp, fp, #28
   155c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155c4:	mov	r0, #0
   155c8:	str	r0, [r9, #436]	; 0x1b4
   155cc:	sub	sp, fp, #28
   155d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155d4:	push	{r4, r5, r6, sl, fp, lr}
   155d8:	add	fp, sp, #16
   155dc:	mov	r6, r1
   155e0:	mov	r4, r0
   155e4:	bl	11bfc <__ctype_b_loc@plt>
   155e8:	ldrb	r1, [r4]
   155ec:	ldr	r0, [r0]
   155f0:	add	r0, r0, r1, lsl #1
   155f4:	ldrb	r0, [r0, #1]
   155f8:	tst	r0, #8
   155fc:	bne	15640 <__assert_fail@plt+0x3828>
   15600:	ldr	r1, [r6]
   15604:	mvn	r5, #0
   15608:	cmp	r1, #0
   1560c:	beq	15638 <__assert_fail@plt+0x3820>
   15610:	add	r6, r6, #4
   15614:	mov	r0, r4
   15618:	bl	11b0c <strcasecmp@plt>
   1561c:	cmp	r0, #0
   15620:	beq	15654 <__assert_fail@plt+0x383c>
   15624:	ldr	r1, [r6, #4]
   15628:	add	r0, r6, #8
   1562c:	mov	r6, r0
   15630:	cmp	r1, #0
   15634:	bne	15614 <__assert_fail@plt+0x37fc>
   15638:	mov	r0, r5
   1563c:	pop	{r4, r5, r6, sl, fp, pc}
   15640:	mov	r0, r4
   15644:	mov	r1, #0
   15648:	mov	r2, #10
   1564c:	pop	{r4, r5, r6, sl, fp, lr}
   15650:	b	119a4 <strtol@plt>
   15654:	ldr	r5, [r6]
   15658:	mov	r0, r5
   1565c:	pop	{r4, r5, r6, sl, fp, pc}
   15660:	push	{r4, r5, r6, sl, fp, lr}
   15664:	add	fp, sp, #16
   15668:	sub	sp, sp, #8
   1566c:	mov	r4, r1
   15670:	sub	r1, r0, #52	; 0x34
   15674:	mov	r0, #7
   15678:	cmp	r1, #207	; 0xcf
   1567c:	bhi	15bcc <__assert_fail@plt+0x3db4>
   15680:	mov	r5, r2
   15684:	add	r2, pc, #0
   15688:	ldr	pc, [r2, r1, lsl #2]
   1568c:	andeq	r5, r1, ip, asr #19
   15690:	andeq	r5, r1, ip, asr #23
   15694:	ldrdeq	r5, [r1], -ip
   15698:	andeq	r5, r1, ip, asr #23
   1569c:	andeq	r5, r1, ip, asr #23
   156a0:	andeq	r5, r1, ip, asr #23
   156a4:	andeq	r5, r1, ip, asr #23
   156a8:	andeq	r5, r1, ip, asr #23
   156ac:	andeq	r5, r1, ip, asr #23
   156b0:	andeq	r5, r1, ip, asr #23
   156b4:	andeq	r5, r1, ip, asr #23
   156b8:	andeq	r5, r1, ip, asr #23
   156bc:	andeq	r5, r1, ip, asr #23
   156c0:	andeq	r5, r1, ip, asr #23
   156c4:	andeq	r5, r1, ip, ror #19
   156c8:	andeq	r5, r1, ip, asr #23
   156cc:	strdeq	r5, [r1], -ip
   156d0:	andeq	r5, r1, ip, asr #23
   156d4:	andeq	r5, r1, ip, asr #23
   156d8:	andeq	r5, r1, ip, asr #23
   156dc:	andeq	r5, r1, ip, asr #23
   156e0:	andeq	r5, r1, ip, asr #23
   156e4:	andeq	r5, r1, ip, asr #23
   156e8:	andeq	r5, r1, ip, asr #23
   156ec:	andeq	r5, r1, ip, asr #23
   156f0:	andeq	r5, r1, ip, asr #23
   156f4:	andeq	r5, r1, ip, asr #23
   156f8:	andeq	r5, r1, ip, asr #23
   156fc:	andeq	r5, r1, ip, lsl #20
   15700:	andeq	r5, r1, ip, asr #23
   15704:	andeq	r5, r1, ip, asr #23
   15708:	andeq	r5, r1, ip, lsl sl
   1570c:	andeq	r5, r1, r8, lsr #20
   15710:	andeq	r5, r1, ip, asr #23
   15714:	andeq	r5, r1, ip, asr #23
   15718:	andeq	r5, r1, ip, asr #23
   1571c:	andeq	r5, r1, ip, asr #23
   15720:	andeq	r5, r1, ip, asr #23
   15724:	andeq	r5, r1, ip, asr #23
   15728:	andeq	r5, r1, ip, asr #23
   1572c:	andeq	r5, r1, ip, asr #23
   15730:	andeq	r5, r1, ip, asr #23
   15734:	andeq	r5, r1, ip, asr #23
   15738:	andeq	r5, r1, ip, asr #23
   1573c:	andeq	r5, r1, ip, asr #23
   15740:	andeq	r5, r1, r4, lsr sl
   15744:	andeq	r5, r1, r8, lsr #21
   15748:	andeq	r5, r1, ip, asr #23
   1574c:			; <UNDEFINED> instruction: 0x00015ab8
   15750:	andeq	r5, r1, ip, asr #23
   15754:	ldrdeq	r5, [r1], -r4
   15758:	andeq	r5, r1, ip, asr #23
   1575c:	andeq	r5, r1, r4, ror #21
   15760:	andeq	r5, r1, ip, asr #23
   15764:	andeq	r5, r1, ip, asr #23
   15768:	andeq	r5, r1, ip, asr #23
   1576c:	strdeq	r5, [r1], -r0
   15770:	strdeq	r5, [r1], -ip
   15774:	andeq	r5, r1, ip, asr #22
   15778:	andeq	r5, r1, ip, asr #23
   1577c:	andeq	r5, r1, r8, asr fp
   15780:	andeq	r5, r1, ip, asr #23
   15784:	andeq	r5, r1, r8, ror fp
   15788:	andeq	r5, r1, r4, lsl #23
   1578c:	andeq	r5, r1, ip, asr #23
   15790:	andeq	r5, r1, ip, asr #23
   15794:	andeq	r5, r1, ip, asr #23
   15798:	andeq	r5, r1, ip, asr #23
   1579c:	andeq	r5, r1, ip, asr #23
   157a0:	andeq	r5, r1, ip, asr #23
   157a4:	andeq	r5, r1, ip, asr #23
   157a8:	andeq	r5, r1, ip, asr #23
   157ac:	andeq	r5, r1, ip, asr #23
   157b0:	andeq	r5, r1, ip, asr #23
   157b4:	andeq	r5, r1, ip, asr #23
   157b8:	andeq	r5, r1, ip, asr #23
   157bc:	andeq	r5, r1, ip, asr #23
   157c0:	andeq	r5, r1, ip, asr #23
   157c4:	andeq	r5, r1, ip, asr #23
   157c8:	andeq	r5, r1, ip, asr #23
   157cc:	andeq	r5, r1, ip, asr #23
   157d0:	andeq	r5, r1, ip, asr #23
   157d4:	andeq	r5, r1, ip, asr #23
   157d8:	andeq	r5, r1, ip, asr #23
   157dc:	andeq	r5, r1, ip, asr #23
   157e0:	andeq	r5, r1, ip, asr #23
   157e4:	andeq	r5, r1, ip, asr #23
   157e8:	andeq	r5, r1, ip, asr #23
   157ec:	andeq	r5, r1, ip, asr #23
   157f0:	andeq	r5, r1, ip, asr #23
   157f4:	andeq	r5, r1, ip, asr #23
   157f8:	andeq	r5, r1, ip, asr #23
   157fc:	andeq	r5, r1, ip, asr #23
   15800:	andeq	r5, r1, ip, asr #23
   15804:	andeq	r5, r1, ip, asr #23
   15808:	andeq	r5, r1, ip, asr #23
   1580c:	andeq	r5, r1, ip, asr #23
   15810:	andeq	r5, r1, ip, asr #23
   15814:	andeq	r5, r1, ip, asr #23
   15818:	andeq	r5, r1, ip, asr #23
   1581c:	andeq	r5, r1, ip, asr #23
   15820:	andeq	r5, r1, ip, asr #23
   15824:	andeq	r5, r1, ip, asr #23
   15828:	andeq	r5, r1, ip, asr #23
   1582c:	andeq	r5, r1, ip, asr #23
   15830:	andeq	r5, r1, ip, asr #23
   15834:	andeq	r5, r1, ip, asr #23
   15838:	andeq	r5, r1, ip, asr #23
   1583c:	andeq	r5, r1, ip, asr #23
   15840:	andeq	r5, r1, ip, asr #23
   15844:	andeq	r5, r1, ip, asr #23
   15848:	andeq	r5, r1, ip, asr #23
   1584c:	andeq	r5, r1, ip, asr #23
   15850:	andeq	r5, r1, ip, asr #23
   15854:	andeq	r5, r1, ip, asr #23
   15858:	andeq	r5, r1, ip, asr #23
   1585c:	andeq	r5, r1, ip, asr #23
   15860:	andeq	r5, r1, ip, asr #23
   15864:	andeq	r5, r1, ip, asr #23
   15868:	andeq	r5, r1, ip, asr #23
   1586c:	andeq	r5, r1, ip, asr #23
   15870:	andeq	r5, r1, ip, asr #23
   15874:	andeq	r5, r1, ip, asr #23
   15878:	andeq	r5, r1, ip, asr #23
   1587c:	andeq	r5, r1, ip, asr #23
   15880:	andeq	r5, r1, ip, asr #23
   15884:	andeq	r5, r1, ip, asr #23
   15888:	andeq	r5, r1, ip, asr #23
   1588c:	andeq	r5, r1, ip, asr #23
   15890:	andeq	r5, r1, ip, asr #23
   15894:	andeq	r5, r1, ip, asr #23
   15898:	andeq	r5, r1, ip, asr #23
   1589c:	andeq	r5, r1, ip, asr #23
   158a0:	andeq	r5, r1, ip, asr #23
   158a4:	andeq	r5, r1, ip, asr #23
   158a8:	andeq	r5, r1, ip, asr #23
   158ac:	andeq	r5, r1, ip, asr #23
   158b0:	andeq	r5, r1, ip, asr #23
   158b4:	andeq	r5, r1, ip, asr #23
   158b8:	andeq	r5, r1, ip, asr #23
   158bc:	andeq	r5, r1, ip, asr #23
   158c0:	andeq	r5, r1, ip, asr #23
   158c4:	andeq	r5, r1, ip, asr #23
   158c8:	andeq	r5, r1, ip, asr #23
   158cc:	andeq	r5, r1, ip, asr #23
   158d0:	andeq	r5, r1, ip, asr #23
   158d4:	andeq	r5, r1, ip, asr #23
   158d8:	andeq	r5, r1, ip, asr #23
   158dc:	andeq	r5, r1, ip, asr #23
   158e0:	andeq	r5, r1, ip, asr #23
   158e4:	andeq	r5, r1, ip, asr #23
   158e8:	andeq	r5, r1, ip, asr #23
   158ec:	andeq	r5, r1, ip, asr #23
   158f0:	andeq	r5, r1, ip, asr #23
   158f4:	andeq	r5, r1, ip, asr #23
   158f8:	andeq	r5, r1, ip, asr #23
   158fc:	andeq	r5, r1, ip, asr #23
   15900:	andeq	r5, r1, ip, asr #23
   15904:	andeq	r5, r1, ip, asr #23
   15908:	andeq	r5, r1, ip, asr #23
   1590c:	andeq	r5, r1, ip, asr #23
   15910:	andeq	r5, r1, ip, asr #23
   15914:	andeq	r5, r1, ip, asr #23
   15918:	andeq	r5, r1, ip, asr #23
   1591c:	andeq	r5, r1, ip, asr #23
   15920:	andeq	r5, r1, ip, asr #23
   15924:	andeq	r5, r1, ip, asr #23
   15928:	andeq	r5, r1, ip, asr #23
   1592c:	andeq	r5, r1, ip, asr #23
   15930:	andeq	r5, r1, ip, asr #23
   15934:	andeq	r5, r1, ip, asr #23
   15938:	andeq	r5, r1, ip, asr #23
   1593c:	andeq	r5, r1, ip, asr #23
   15940:	andeq	r5, r1, ip, asr #23
   15944:	andeq	r5, r1, ip, asr #23
   15948:	andeq	r5, r1, ip, asr #23
   1594c:	andeq	r5, r1, ip, asr #23
   15950:	andeq	r5, r1, ip, asr #23
   15954:	andeq	r5, r1, ip, asr #23
   15958:	andeq	r5, r1, ip, asr #23
   1595c:	andeq	r5, r1, ip, asr #23
   15960:	andeq	r5, r1, ip, asr #23
   15964:	andeq	r5, r1, ip, asr #23
   15968:	andeq	r5, r1, ip, asr #23
   1596c:	andeq	r5, r1, ip, asr #23
   15970:	andeq	r5, r1, ip, asr #23
   15974:	andeq	r5, r1, ip, asr #23
   15978:	andeq	r5, r1, ip, asr #23
   1597c:	andeq	r5, r1, ip, asr #23
   15980:	andeq	r5, r1, ip, asr #23
   15984:	andeq	r5, r1, ip, asr #23
   15988:	andeq	r5, r1, ip, asr #23
   1598c:	andeq	r5, r1, ip, asr #23
   15990:	andeq	r5, r1, ip, asr #23
   15994:	andeq	r5, r1, ip, asr #23
   15998:	andeq	r5, r1, ip, asr #23
   1599c:	andeq	r5, r1, ip, asr #23
   159a0:	andeq	r5, r1, ip, asr #23
   159a4:	andeq	r5, r1, ip, asr #23
   159a8:	andeq	r5, r1, ip, asr #23
   159ac:	andeq	r5, r1, ip, asr #23
   159b0:	andeq	r5, r1, ip, asr #23
   159b4:	andeq	r5, r1, ip, asr #23
   159b8:	andeq	r5, r1, ip, asr #23
   159bc:	andeq	r5, r1, r0, lsr #23
   159c0:	andeq	r5, r1, ip, lsr #23
   159c4:			; <UNDEFINED> instruction: 0x00015bb8
   159c8:	ldrdeq	r5, [r1], -r4
   159cc:	movw	r0, #788	; 0x314
   159d0:	mov	r1, #2
   159d4:	movt	r0, #3
   159d8:	b	15bc4 <__assert_fail@plt+0x3dac>
   159dc:	movw	r0, #788	; 0x314
   159e0:	mov	r1, #10
   159e4:	movt	r0, #3
   159e8:	b	15bc4 <__assert_fail@plt+0x3dac>
   159ec:	movw	r0, #1488	; 0x5d0
   159f0:	movt	r0, #3
   159f4:	str	r4, [r0]
   159f8:	b	15bc8 <__assert_fail@plt+0x3db0>
   159fc:	movw	r0, #716	; 0x2cc
   15a00:	movt	r0, #3
   15a04:	str	r4, [r0]
   15a08:	b	15bc8 <__assert_fail@plt+0x3db0>
   15a0c:	movw	r0, #720	; 0x2d0
   15a10:	movt	r0, #3
   15a14:	str	r4, [r0]
   15a18:	b	15bc8 <__assert_fail@plt+0x3db0>
   15a1c:	movw	r0, #3116	; 0xc2c
   15a20:	movt	r0, #3
   15a24:	b	15bc0 <__assert_fail@plt+0x3da8>
   15a28:	movw	r0, #1500	; 0x5dc
   15a2c:	movt	r0, #3
   15a30:	b	15bc0 <__assert_fail@plt+0x3da8>
   15a34:	movw	r5, #3104	; 0xc20
   15a38:	movw	r6, #3200	; 0xc80
   15a3c:	mov	r1, #8
   15a40:	movt	r5, #3
   15a44:	movt	r6, #3
   15a48:	ldr	r0, [r5]
   15a4c:	add	r1, r1, r0, lsl #3
   15a50:	ldr	r0, [r6]
   15a54:	bl	1bdbc <argp_parse@@Base+0x23a0>
   15a58:	cmp	r0, #0
   15a5c:	str	r0, [r6]
   15a60:	bne	15a80 <__assert_fail@plt+0x3c68>
   15a64:	bl	11c50 <__errno_location@plt>
   15a68:	ldr	r1, [r0]
   15a6c:	movw	r2, #58979	; 0xe663
   15a70:	mov	r0, #1
   15a74:	movt	r2, #1
   15a78:	bl	11b6c <error@plt>
   15a7c:	ldr	r0, [r6]
   15a80:	ldr	r1, [r5]
   15a84:	str	r4, [r0, r1, lsl #3]
   15a88:	ldr	r0, [r6]
   15a8c:	add	r0, r0, r1, lsl #3
   15a90:	mvn	r1, #0
   15a94:	str	r1, [r0, #4]
   15a98:	ldr	r0, [r5]
   15a9c:	add	r0, r0, #1
   15aa0:	str	r0, [r5]
   15aa4:	b	15bc8 <__assert_fail@plt+0x3db0>
   15aa8:	movw	r0, #1484	; 0x5cc
   15aac:	movt	r0, #3
   15ab0:	str	r4, [r0]
   15ab4:	b	15bc8 <__assert_fail@plt+0x3db0>
   15ab8:	movw	r0, #3132	; 0xc3c
   15abc:	mov	r1, #1
   15ac0:	movt	r0, #3
   15ac4:	str	r1, [r0]
   15ac8:	movw	r0, #3108	; 0xc24
   15acc:	movt	r0, #3
   15ad0:	b	15bc4 <__assert_fail@plt+0x3dac>
   15ad4:	movw	r0, #712	; 0x2c8
   15ad8:	movt	r0, #3
   15adc:	str	r4, [r0]
   15ae0:	b	15bc8 <__assert_fail@plt+0x3db0>
   15ae4:	movw	r1, #808	; 0x328
   15ae8:	movt	r1, #3
   15aec:	b	15bdc <__assert_fail@plt+0x3dc4>
   15af0:	movw	r5, #3140	; 0xc44
   15af4:	movt	r5, #3
   15af8:	b	15b8c <__assert_fail@plt+0x3d74>
   15afc:	add	r1, sp, #4
   15b00:	mov	r0, r4
   15b04:	mov	r2, #10
   15b08:	bl	119a4 <strtol@plt>
   15b0c:	ldr	r3, [sp, #4]
   15b10:	mov	r6, r0
   15b14:	ldrb	r0, [r3]
   15b18:	cmp	r0, #0
   15b1c:	beq	15b34 <__assert_fail@plt+0x3d1c>
   15b20:	movw	r1, #58948	; 0xe644
   15b24:	mov	r0, r5
   15b28:	mov	r2, r4
   15b2c:	movt	r1, #1
   15b30:	bl	17a10 <argp_error@@Base>
   15b34:	rsb	r0, r6, r6, lsl #4
   15b38:	movw	r1, #804	; 0x324
   15b3c:	movt	r1, #3
   15b40:	lsl	r0, r0, #2
   15b44:	str	r0, [r1]
   15b48:	b	15bc8 <__assert_fail@plt+0x3db0>
   15b4c:	movw	r0, #3132	; 0xc3c
   15b50:	movt	r0, #3
   15b54:	b	15bc0 <__assert_fail@plt+0x3da8>
   15b58:	movw	r0, #3200	; 0xc80
   15b5c:	movt	r0, #3
   15b60:	ldr	r1, [r0]
   15b64:	str	r4, [r1]
   15b68:	mvn	r1, #0
   15b6c:	ldr	r0, [r0]
   15b70:	str	r1, [r0, #4]
   15b74:	b	15bc8 <__assert_fail@plt+0x3db0>
   15b78:	movw	r0, #2624	; 0xa40
   15b7c:	movt	r0, #3
   15b80:	b	15bc0 <__assert_fail@plt+0x3da8>
   15b84:	movw	r5, #3100	; 0xc1c
   15b88:	movt	r5, #3
   15b8c:	ldr	r0, [r5]
   15b90:	mov	r1, r4
   15b94:	bl	139a4 <__assert_fail@plt+0x1b8c>
   15b98:	str	r0, [r5]
   15b9c:	b	15bc8 <__assert_fail@plt+0x3db0>
   15ba0:	movw	r0, #3196	; 0xc7c
   15ba4:	movt	r0, #3
   15ba8:	b	15bc0 <__assert_fail@plt+0x3da8>
   15bac:	movw	r0, #2620	; 0xa3c
   15bb0:	movt	r0, #3
   15bb4:	b	15bc0 <__assert_fail@plt+0x3da8>
   15bb8:	movw	r0, #3112	; 0xc28
   15bbc:	movt	r0, #3
   15bc0:	mov	r1, #1
   15bc4:	str	r1, [r0]
   15bc8:	mov	r0, #0
   15bcc:	sub	sp, fp, #16
   15bd0:	pop	{r4, r5, r6, sl, fp, pc}
   15bd4:	movw	r1, #788	; 0x314
   15bd8:	movt	r1, #3
   15bdc:	mov	r0, #0
   15be0:	str	r0, [r1]
   15be4:	sub	sp, fp, #16
   15be8:	pop	{r4, r5, r6, sl, fp, pc}
   15bec:	push	{r4, sl, fp, lr}
   15bf0:	add	fp, sp, #8
   15bf4:	mov	r0, #0
   15bf8:	bl	11ac4 <alarm@plt>
   15bfc:	mov	r4, r0
   15c00:	mov	r0, #14
   15c04:	mov	r1, #0
   15c08:	bl	11a64 <signal@plt>
   15c0c:	cmp	r4, #0
   15c10:	popne	{r4, sl, fp, pc}
   15c14:	movw	r2, #59473	; 0xe851
   15c18:	mov	r0, #1
   15c1c:	mov	r1, #0
   15c20:	movt	r2, #1
   15c24:	pop	{r4, sl, fp, lr}
   15c28:	b	11b6c <error@plt>
   15c2c:	push	{r4, r5, r6, r7, fp, lr}
   15c30:	add	fp, sp, #16
   15c34:	mov	r7, r2
   15c38:	mov	r5, r1
   15c3c:	mov	r6, r0
   15c40:	bl	11c08 <getpid@plt>
   15c44:	mov	r4, r0
   15c48:	bl	11d10 <fork@plt>
   15c4c:	cmn	r0, #1
   15c50:	beq	15cbc <__assert_fail@plt+0x3ea4>
   15c54:	cmp	r0, #0
   15c58:	bne	15d48 <__assert_fail@plt+0x3f30>
   15c5c:	bl	11c2c <setsid@plt>
   15c60:	mov	r1, r0
   15c64:	mvn	r0, #0
   15c68:	cmn	r1, #1
   15c6c:	beq	15cbc <__assert_fail@plt+0x3ea4>
   15c70:	mov	r0, #1
   15c74:	mov	r1, #1
   15c78:	bl	11a64 <signal@plt>
   15c7c:	bl	11d10 <fork@plt>
   15c80:	cmn	r0, #1
   15c84:	beq	15cbc <__assert_fail@plt+0x3ea4>
   15c88:	cmp	r0, #0
   15c8c:	bne	15d6c <__assert_fail@plt+0x3f54>
   15c90:	cmp	r6, #0
   15c94:	bne	15cb0 <__assert_fail@plt+0x3e98>
   15c98:	movw	r0, #61969	; 0xf211
   15c9c:	movt	r0, #1
   15ca0:	bl	11b00 <chdir@plt>
   15ca4:	cmp	r0, #0
   15ca8:	mvn	r0, #0
   15cac:	bmi	15cbc <__assert_fail@plt+0x3ea4>
   15cb0:	cmp	r5, #0
   15cb4:	beq	15cc0 <__assert_fail@plt+0x3ea8>
   15cb8:	mov	r0, r4
   15cbc:	pop	{r4, r5, r6, r7, fp, pc}
   15cc0:	mov	r0, #4
   15cc4:	bl	11ad0 <sysconf@plt>
   15cc8:	cmn	r0, #1
   15ccc:	mov	r5, r0
   15cd0:	movweq	r5, #64	; 0x40
   15cd4:	cmp	r5, #1
   15cd8:	blt	15cf4 <__assert_fail@plt+0x3edc>
   15cdc:	mov	r6, #0
   15ce0:	mov	r0, r6
   15ce4:	bl	11e00 <close@plt>
   15ce8:	add	r6, r6, #1
   15cec:	cmp	r5, r6
   15cf0:	bne	15ce0 <__assert_fail@plt+0x3ec8>
   15cf4:	movw	r0, #59501	; 0xe86d
   15cf8:	mov	r1, #2
   15cfc:	mov	r2, #0
   15d00:	movt	r0, #1
   15d04:	bl	11b90 <open64@plt>
   15d08:	cmn	r0, #1
   15d0c:	beq	15cb8 <__assert_fail@plt+0x3ea0>
   15d10:	mov	r1, #0
   15d14:	mov	r5, r0
   15d18:	bl	11ae8 <dup2@plt>
   15d1c:	mov	r0, r5
   15d20:	mov	r1, #1
   15d24:	bl	11ae8 <dup2@plt>
   15d28:	mov	r0, r5
   15d2c:	mov	r1, #2
   15d30:	bl	11ae8 <dup2@plt>
   15d34:	cmp	r5, #3
   15d38:	blt	15cb8 <__assert_fail@plt+0x3ea0>
   15d3c:	mov	r0, r5
   15d40:	bl	11e00 <close@plt>
   15d44:	b	15cb8 <__assert_fail@plt+0x3ea0>
   15d48:	cmp	r7, #1
   15d4c:	blt	15d6c <__assert_fail@plt+0x3f54>
   15d50:	movw	r1, #23532	; 0x5bec
   15d54:	mov	r0, #14
   15d58:	movt	r1, #1
   15d5c:	bl	11a64 <signal@plt>
   15d60:	mov	r0, r7
   15d64:	bl	11ac4 <alarm@plt>
   15d68:	bl	119bc <pause@plt>
   15d6c:	mov	r0, #0
   15d70:	bl	11a4c <_exit@plt>

00015d74 <daemon@@Base>:
   15d74:	push	{fp, lr}
   15d78:	mov	fp, sp
   15d7c:	mov	r2, #0
   15d80:	bl	15c2c <__assert_fail@plt+0x3e14>
   15d84:	cmn	r0, #1
   15d88:	movwne	r0, #0
   15d8c:	pop	{fp, pc}
   15d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d94:	add	fp, sp, #28
   15d98:	sub	sp, sp, #60	; 0x3c
   15d9c:	sub	sp, sp, #1024	; 0x400
   15da0:	bl	11c50 <__errno_location@plt>
   15da4:	mov	r8, #0
   15da8:	mov	r9, r0
   15dac:	mov	r1, #256	; 0x100
   15db0:	str	r8, [r0]
   15db4:	mov	r0, #0
   15db8:	bl	1bdbc <argp_parse@@Base+0x23a0>
   15dbc:	mov	r4, r0
   15dc0:	cmp	r0, #0
   15dc4:	mov	r0, #0
   15dc8:	beq	15e44 <daemon@@Base+0xd0>
   15dcc:	mov	r7, #512	; 0x200
   15dd0:	mov	sl, #0
   15dd4:	b	15e0c <daemon@@Base+0x98>
   15dd8:	ldr	r0, [r9]
   15ddc:	cmp	r0, #36	; 0x24
   15de0:	bne	15e5c <daemon@@Base+0xe8>
   15de4:	mov	r0, r4
   15de8:	mov	r1, r7
   15dec:	str	sl, [r9]
   15df0:	bl	1bdbc <argp_parse@@Base+0x23a0>
   15df4:	mov	r1, r0
   15df8:	mov	r0, r4
   15dfc:	add	r7, r7, #256	; 0x100
   15e00:	cmp	r1, #0
   15e04:	mov	r4, r1
   15e08:	beq	15e44 <daemon@@Base+0xd0>
   15e0c:	sub	r6, r7, #256	; 0x100
   15e10:	mov	r0, r4
   15e14:	mov	r1, r6
   15e18:	bl	11b78 <gethostname@plt>
   15e1c:	mov	r5, r0
   15e20:	cmp	r0, #0
   15e24:	bne	15dd8 <daemon@@Base+0x64>
   15e28:	mov	r0, r4
   15e2c:	mov	r1, #0
   15e30:	mov	r2, r6
   15e34:	bl	11cb0 <memchr@plt>
   15e38:	cmp	r0, #0
   15e3c:	bne	15dd8 <daemon@@Base+0x64>
   15e40:	b	15de4 <daemon@@Base+0x70>
   15e44:	mov	r1, #12
   15e48:	str	r1, [r9]
   15e4c:	bl	1aed8 <argp_parse@@Base+0x14bc>
   15e50:	mov	r0, r8
   15e54:	sub	sp, fp, #28
   15e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e5c:	cmp	r5, #0
   15e60:	cmpne	r0, #0
   15e64:	bne	15ea8 <daemon@@Base+0x134>
   15e68:	vmov.i32	q8, #0	; 0x00000000
   15e6c:	sub	r2, fp, #64	; 0x40
   15e70:	sub	r3, fp, #68	; 0x44
   15e74:	mov	r1, #0
   15e78:	mov	r5, #0
   15e7c:	mov	r0, r2
   15e80:	vst1.64	{d16-d17}, [r0]!
   15e84:	vst1.64	{d16-d17}, [r0]
   15e88:	mov	r0, #2
   15e8c:	str	r0, [fp, #-60]	; 0xffffffc4
   15e90:	mov	r0, r4
   15e94:	bl	11da0 <getaddrinfo@plt>
   15e98:	cmp	r0, #0
   15e9c:	beq	15eb8 <daemon@@Base+0x144>
   15ea0:	mov	r8, r4
   15ea4:	b	15e50 <daemon@@Base+0xdc>
   15ea8:	mov	r0, r4
   15eac:	bl	1aed8 <argp_parse@@Base+0x14bc>
   15eb0:	mov	r8, #0
   15eb4:	b	15e50 <daemon@@Base+0xdc>
   15eb8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ebc:	mov	r2, #8
   15ec0:	movw	r3, #1025	; 0x401
   15ec4:	ldr	r1, [r0, #16]
   15ec8:	ldr	r0, [r0, #20]
   15ecc:	str	r2, [sp, #8]
   15ed0:	add	r2, sp, #19
   15ed4:	str	r5, [sp]
   15ed8:	str	r5, [sp, #4]
   15edc:	bl	11d1c <getnameinfo@plt>
   15ee0:	cmp	r0, #0
   15ee4:	beq	15ef0 <daemon@@Base+0x17c>
   15ee8:	mov	r8, r4
   15eec:	b	15f04 <daemon@@Base+0x190>
   15ef0:	mov	r0, r4
   15ef4:	bl	1aed8 <argp_parse@@Base+0x14bc>
   15ef8:	add	r0, sp, #19
   15efc:	bl	11aac <strdup@plt>
   15f00:	mov	r8, r0
   15f04:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15f08:	bl	11d94 <freeaddrinfo@plt>
   15f0c:	b	15e50 <daemon@@Base+0xdc>
   15f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f14:	add	fp, sp, #28
   15f18:	sub	sp, sp, #204	; 0xcc
   15f1c:	cmp	r1, #6
   15f20:	ble	15f30 <daemon@@Base+0x1bc>
   15f24:	movw	sl, #59524	; 0xe884
   15f28:	movt	sl, #1
   15f2c:	b	163d8 <daemon@@Base+0x664>
   15f30:	mov	sl, r0
   15f34:	mov	r0, r2
   15f38:	mov	r9, r3
   15f3c:	mov	r7, r2
   15f40:	mov	r6, r1
   15f44:	bl	11c20 <strlen@plt>
   15f48:	add	r0, r0, #6
   15f4c:	bl	1bd8c <argp_parse@@Base+0x2370>
   15f50:	cmp	r0, #0
   15f54:	beq	16084 <daemon@@Base+0x310>
   15f58:	mov	r4, r0
   15f5c:	mov	r0, #47	; 0x2f
   15f60:	mov	r1, r7
   15f64:	strh	r0, [r4, #4]
   15f68:	movw	r0, #25647	; 0x642f
   15f6c:	movt	r0, #30309	; 0x7665
   15f70:	str	r0, [r4]
   15f74:	mov	r0, r4
   15f78:	bl	11b48 <strcat@plt>
   15f7c:	bl	11c20 <strlen@plt>
   15f80:	cmp	r0, #0
   15f84:	beq	16044 <daemon@@Base+0x2d0>
   15f88:	sub	r0, r0, #1
   15f8c:	ldrb	r1, [r4, r0]
   15f90:	cmp	r1, #47	; 0x2f
   15f94:	moveq	r1, #0
   15f98:	strbeq	r1, [r4, r0]
   15f9c:	mov	r0, r4
   15fa0:	b	15fac <daemon@@Base+0x238>
   15fa4:	add	r1, r0, #1
   15fa8:	mov	r0, r1
   15fac:	mov	r1, #46	; 0x2e
   15fb0:	bl	11c38 <strchr@plt>
   15fb4:	cmp	r0, #0
   15fb8:	beq	16034 <daemon@@Base+0x2c0>
   15fbc:	cmp	r0, r4
   15fc0:	bls	15fa4 <daemon@@Base+0x230>
   15fc4:	ldrb	r1, [r0, #-1]
   15fc8:	cmp	r1, #47	; 0x2f
   15fcc:	bne	15fa4 <daemon@@Base+0x230>
   15fd0:	ldrb	r1, [r0, #1]
   15fd4:	cmp	r1, #46	; 0x2e
   15fd8:	bne	15fa4 <daemon@@Base+0x230>
   15fdc:	ldrb	r3, [r0, #2]
   15fe0:	cmp	r3, #47	; 0x2f
   15fe4:	cmpne	r3, #0
   15fe8:	bne	15fa4 <daemon@@Base+0x230>
   15fec:	sub	r1, r0, #1
   15ff0:	mov	r2, r1
   15ff4:	ldrb	r5, [r1, #-1]!
   15ff8:	cmp	r1, r4
   15ffc:	bcc	16008 <daemon@@Base+0x294>
   16000:	cmp	r5, #47	; 0x2f
   16004:	bne	15ff0 <daemon@@Base+0x27c>
   16008:	cmp	r1, r4
   1600c:	bcc	16034 <daemon@@Base+0x2c0>
   16010:	cmp	r3, #0
   16014:	strb	r3, [r1]
   16018:	beq	15fa8 <daemon@@Base+0x234>
   1601c:	add	r0, r0, #3
   16020:	ldrb	r3, [r0], #1
   16024:	strb	r3, [r2], #1
   16028:	cmp	r3, #0
   1602c:	bne	16020 <daemon@@Base+0x2ac>
   16030:	b	15fa8 <daemon@@Base+0x234>
   16034:	ldrb	r0, [r4]
   16038:	cmp	r0, #0
   1603c:	moveq	r0, #47	; 0x2f
   16040:	strheq	r0, [r4]
   16044:	movw	r1, #59570	; 0xe8b2
   16048:	mov	r0, r4
   1604c:	mov	r2, #5
   16050:	movt	r1, #1
   16054:	bl	11ddc <strncmp@plt>
   16058:	cmp	r0, #0
   1605c:	beq	160c0 <daemon@@Base+0x34c>
   16060:	movw	sl, #1536	; 0x600
   16064:	movw	r2, #59576	; 0xe8b8
   16068:	mov	r1, #1024	; 0x400
   1606c:	mov	r3, r7
   16070:	movt	sl, #3
   16074:	movt	r2, #1
   16078:	mov	r0, sl
   1607c:	bl	11c5c <snprintf@plt>
   16080:	b	163d8 <daemon@@Base+0x664>
   16084:	movw	r1, #59608	; 0xe8d8
   16088:	mov	r0, #30
   1608c:	movw	sl, #1536	; 0x600
   16090:	movt	r1, #1
   16094:	movt	sl, #3
   16098:	add	r2, r1, #16
   1609c:	vld1.64	{d16-d17}, [r1], r0
   160a0:	vld1.64	{d18-d19}, [r2]
   160a4:	vld1.16	{d20}, [r1]
   160a8:	mov	r1, sl
   160ac:	add	r2, sl, #16
   160b0:	vst1.64	{d16-d17}, [r1], r0
   160b4:	vst1.64	{d18-d19}, [r2]
   160b8:	vst1.16	{d20}, [r1]
   160bc:	b	163d8 <daemon@@Base+0x664>
   160c0:	mov	r0, r4
   160c4:	movw	r1, #2049	; 0x801
   160c8:	mov	r2, #0
   160cc:	mov	r8, #0
   160d0:	bl	11b90 <open64@plt>
   160d4:	cmp	r0, #0
   160d8:	str	r0, [sp, #16]
   160dc:	bmi	162e0 <daemon@@Base+0x56c>
   160e0:	cmp	r6, #1
   160e4:	blt	16150 <daemon@@Base+0x3dc>
   160e8:	mov	r8, #0
   160ec:	cmp	r6, #4
   160f0:	mov	r0, #0
   160f4:	bls	16134 <daemon@@Base+0x3c0>
   160f8:	ands	r0, r6, #3
   160fc:	vmov.i32	q8, #0	; 0x00000000
   16100:	add	r1, sl, #4
   16104:	movweq	r0, #4
   16108:	sub	r0, r6, r0
   1610c:	mov	r2, r0
   16110:	vld2.32	{d18-d21}, [r1]!
   16114:	subs	r2, r2, #4
   16118:	vadd.i32	q8, q9, q8
   1611c:	bne	16110 <daemon@@Base+0x39c>
   16120:	vext.8	q9, q8, q8, #8
   16124:	vadd.i32	q8, q8, q9
   16128:	vdup.32	q9, d16[1]
   1612c:	vadd.i32	q8, q8, q9
   16130:	vmov.32	r8, d16[0]
   16134:	sub	r1, r6, r0
   16138:	add	r0, sl, r0, lsl #3
   1613c:	add	r0, r0, #4
   16140:	ldr	r2, [r0], #8
   16144:	subs	r1, r1, #1
   16148:	add	r8, r2, r8
   1614c:	bne	16140 <daemon@@Base+0x3cc>
   16150:	ldr	r0, [sp, #16]
   16154:	mov	r1, sl
   16158:	mov	r2, r6
   1615c:	str	r9, [sp, #8]
   16160:	str	sl, [sp, #12]
   16164:	bl	11cbc <writev@plt>
   16168:	mov	sl, #0
   1616c:	cmp	r8, r0
   16170:	mov	r9, #0
   16174:	ble	16330 <daemon@@Base+0x5bc>
   16178:	sub	r7, fp, #80	; 0x50
   1617c:	mov	r5, r0
   16180:	mov	r9, #0
   16184:	orr	r0, r7, #4
   16188:	str	r0, [sp, #4]
   1618c:	cmp	r5, #0
   16190:	bpl	1624c <daemon@@Base+0x4d8>
   16194:	bl	11c50 <__errno_location@plt>
   16198:	mov	r7, r0
   1619c:	ldr	r0, [r0]
   161a0:	cmp	r0, #11
   161a4:	bne	16324 <daemon@@Base+0x5b0>
   161a8:	mov	r0, #0
   161ac:	cmp	r9, #0
   161b0:	str	r0, [fp, #-84]	; 0xffffffac
   161b4:	bne	16404 <daemon@@Base+0x690>
   161b8:	bl	11d10 <fork@plt>
   161bc:	ldr	r5, [sp, #8]
   161c0:	cmp	r0, #0
   161c4:	bne	1634c <daemon@@Base+0x5d8>
   161c8:	bl	11d10 <fork@plt>
   161cc:	cmp	r0, #0
   161d0:	bne	163ec <daemon@@Base+0x678>
   161d4:	mov	r0, #14
   161d8:	mov	r1, #0
   161dc:	bl	11a64 <signal@plt>
   161e0:	mov	r0, #15
   161e4:	mov	r1, #0
   161e8:	bl	11a64 <signal@plt>
   161ec:	add	r7, sp, #20
   161f0:	mov	r0, r7
   161f4:	bl	11d04 <sigemptyset@plt>
   161f8:	mov	r0, #2
   161fc:	mov	r1, r7
   16200:	mov	r2, #0
   16204:	bl	119f8 <sigprocmask@plt>
   16208:	mov	r0, r5
   1620c:	bl	11ac4 <alarm@plt>
   16210:	ldr	r5, [sp, #16]
   16214:	mov	r1, #2048	; 0x800
   16218:	sub	r2, fp, #84	; 0x54
   1621c:	mov	r0, r5
   16220:	bl	1acf8 <argp_parse@@Base+0x12dc>
   16224:	ldr	r1, [sp, #12]
   16228:	mov	r0, r5
   1622c:	mov	r2, r6
   16230:	bl	11cbc <writev@plt>
   16234:	mov	r5, r0
   16238:	mov	r9, #1
   1623c:	cmp	r8, r0
   16240:	sub	r7, fp, #80	; 0x50
   16244:	bgt	1618c <daemon@@Base+0x418>
   16248:	b	16330 <daemon@@Base+0x5bc>
   1624c:	ldr	r1, [sp, #12]
   16250:	cmp	r1, r7
   16254:	beq	16264 <daemon@@Base+0x4f0>
   16258:	lsl	r2, r6, #3
   1625c:	mov	r0, r7
   16260:	bl	11a58 <memcpy@plt>
   16264:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16268:	cmp	r5, r0
   1626c:	bge	16280 <daemon@@Base+0x50c>
   16270:	ldr	r2, [sp, #4]
   16274:	str	r7, [sp, #12]
   16278:	mov	r7, r5
   1627c:	b	162a8 <daemon@@Base+0x534>
   16280:	mov	r1, r7
   16284:	mov	r7, r5
   16288:	sub	r7, r7, r0
   1628c:	ldr	r0, [r1, #12]
   16290:	sub	r6, r6, #1
   16294:	add	r1, r1, #8
   16298:	cmp	r7, r0
   1629c:	bge	16288 <daemon@@Base+0x514>
   162a0:	add	r2, r1, #4
   162a4:	str	r1, [sp, #12]
   162a8:	ldr	r1, [sp, #12]
   162ac:	sub	r8, r8, r5
   162b0:	cmp	r7, #0
   162b4:	beq	162cc <daemon@@Base+0x558>
   162b8:	ldr	r3, [r1]
   162bc:	sub	r0, r0, r7
   162c0:	add	r3, r3, r7
   162c4:	str	r3, [r1]
   162c8:	str	r0, [r2]
   162cc:	ldr	r0, [sp, #16]
   162d0:	mov	r2, r6
   162d4:	bl	11cbc <writev@plt>
   162d8:	mov	r5, r0
   162dc:	b	1623c <daemon@@Base+0x4c8>
   162e0:	bl	11c50 <__errno_location@plt>
   162e4:	ldr	r0, [r0]
   162e8:	mov	sl, #0
   162ec:	cmp	r0, #13
   162f0:	cmpne	r0, #16
   162f4:	beq	163d8 <daemon@@Base+0x664>
   162f8:	bl	11bcc <strerror@plt>
   162fc:	movw	sl, #1536	; 0x600
   16300:	movw	r2, #57374	; 0xe01e
   16304:	str	r0, [sp]
   16308:	mov	r1, #1024	; 0x400
   1630c:	mov	r3, r4
   16310:	movt	sl, #3
   16314:	movt	r2, #1
   16318:	mov	r0, sl
   1631c:	bl	11c5c <snprintf@plt>
   16320:	b	163d0 <daemon@@Base+0x65c>
   16324:	cmp	r0, #5
   16328:	cmpne	r0, #19
   1632c:	bne	16378 <daemon@@Base+0x604>
   16330:	mov	r0, r4
   16334:	bl	1aed8 <argp_parse@@Base+0x14bc>
   16338:	ldr	r0, [sp, #16]
   1633c:	bl	11e00 <close@plt>
   16340:	cmp	r9, #0
   16344:	beq	163d8 <daemon@@Base+0x664>
   16348:	b	163fc <daemon@@Base+0x688>
   1634c:	bmi	163a0 <daemon@@Base+0x62c>
   16350:	add	r1, sp, #20
   16354:	mov	r2, #0
   16358:	bl	11b54 <waitpid@plt>
   1635c:	cmp	r0, #0
   16360:	bmi	163a0 <daemon@@Base+0x62c>
   16364:	ldr	r0, [sp, #20]
   16368:	tst	r0, #127	; 0x7f
   1636c:	beq	16390 <daemon@@Base+0x61c>
   16370:	mov	r0, #4
   16374:	b	1639c <daemon@@Base+0x628>
   16378:	ldr	r0, [sp, #16]
   1637c:	bl	11e00 <close@plt>
   16380:	cmp	r9, #0
   16384:	bne	1640c <daemon@@Base+0x698>
   16388:	ldr	r0, [r7]
   1638c:	b	162f8 <daemon@@Base+0x584>
   16390:	ubfx	r0, r0, #8, #8
   16394:	cmp	r0, #0
   16398:	beq	163e4 <daemon@@Base+0x670>
   1639c:	str	r0, [r7]
   163a0:	ldr	r0, [r7]
   163a4:	bl	11bcc <strerror@plt>
   163a8:	movw	sl, #1536	; 0x600
   163ac:	movw	r2, #59594	; 0xe8ca
   163b0:	mov	r3, r0
   163b4:	mov	r1, #1024	; 0x400
   163b8:	movt	sl, #3
   163bc:	movt	r2, #1
   163c0:	mov	r0, sl
   163c4:	bl	11c5c <snprintf@plt>
   163c8:	ldr	r0, [sp, #16]
   163cc:	bl	11e00 <close@plt>
   163d0:	mov	r0, r4
   163d4:	bl	1aed8 <argp_parse@@Base+0x14bc>
   163d8:	mov	r0, sl
   163dc:	sub	sp, fp, #28
   163e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163e4:	mov	sl, #0
   163e8:	b	163c8 <daemon@@Base+0x654>
   163ec:	cmn	r0, #1
   163f0:	bne	163fc <daemon@@Base+0x688>
   163f4:	ldr	r0, [r7]
   163f8:	bl	11a4c <_exit@plt>
   163fc:	mov	r0, #0
   16400:	bl	11a4c <_exit@plt>
   16404:	ldr	r0, [sp, #16]
   16408:	bl	11e00 <close@plt>
   1640c:	mov	r0, #1
   16410:	bl	11a4c <_exit@plt>

00016414 <argp_help@@Base>:
   16414:	push	{fp, lr}
   16418:	mov	fp, sp
   1641c:	sub	sp, sp, #8
   16420:	mov	ip, r2
   16424:	mov	r2, r1
   16428:	str	r3, [sp]
   1642c:	mov	r1, #0
   16430:	mov	r3, ip
   16434:	bl	16440 <argp_help@@Base+0x2c>
   16438:	mov	sp, fp
   1643c:	pop	{fp, pc}
   16440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16444:	add	fp, sp, #28
   16448:	sub	sp, sp, #108	; 0x6c
   1644c:	cmp	r2, #0
   16450:	str	r3, [fp, #-92]	; 0xffffffa4
   16454:	str	r1, [fp, #-100]	; 0xffffff9c
   16458:	str	r0, [fp, #-108]	; 0xffffff94
   1645c:	beq	177dc <argp_help@@Base+0x13c8>
   16460:	ldr	r0, [fp, #8]
   16464:	mov	r4, r2
   16468:	str	r0, [fp, #-96]	; 0xffffffa0
   1646c:	mov	r0, r2
   16470:	bl	11d58 <flockfile@plt>
   16474:	movw	r9, #1400	; 0x578
   16478:	movt	r9, #3
   1647c:	ldr	r0, [r9, #36]	; 0x24
   16480:	cmp	r0, #0
   16484:	bne	169a0 <argp_help@@Base+0x58c>
   16488:	movw	r0, #59767	; 0xe977
   1648c:	movt	r0, #1
   16490:	bl	11b9c <getenv@plt>
   16494:	mov	r8, r0
   16498:	mov	r0, #32
   1649c:	mov	r1, r9
   164a0:	add	r3, r9, #16
   164a4:	sub	r2, fp, #88	; 0x58
   164a8:	vld1.64	{d16-d17}, [r1], r0
   164ac:	vld1.64	{d18-d19}, [r3]
   164b0:	add	r7, r2, #16
   164b4:	cmp	r8, #0
   164b8:	vldr	d20, [r1]
   164bc:	mov	r1, r2
   164c0:	vst1.64	{d16-d17}, [r1], r0
   164c4:	vst1.64	{d18-d19}, [r7]
   164c8:	vstr	d20, [r1]
   164cc:	beq	169a0 <argp_help@@Base+0x58c>
   164d0:	ldrb	r5, [r8]
   164d4:	str	r7, [fp, #-116]	; 0xffffff8c
   164d8:	str	r3, [fp, #-112]	; 0xffffff90
   164dc:	str	r4, [fp, #-132]	; 0xffffff7c
   164e0:	cmp	r5, #0
   164e4:	beq	168b0 <argp_help@@Base+0x49c>
   164e8:	movw	r7, #60432	; 0xec10
   164ec:	movt	r7, #1
   164f0:	bl	11bfc <__ctype_b_loc@plt>
   164f4:	str	r0, [fp, #-104]	; 0xffffff98
   164f8:	b	1652c <argp_help@@Base+0x118>
   164fc:	ldrb	r0, [r6, #15]
   16500:	sub	r1, fp, #88	; 0x58
   16504:	str	r5, [r1, r0]
   16508:	mov	r8, r4
   1650c:	movw	r9, #1400	; 0x578
   16510:	ldrb	r0, [r8], #1
   16514:	movt	r9, #3
   16518:	cmp	r0, #44	; 0x2c
   1651c:	movne	r8, r4
   16520:	ldrb	r5, [r8]
   16524:	cmp	r5, #0
   16528:	beq	168b0 <argp_help@@Base+0x49c>
   1652c:	ldr	r0, [fp, #-104]	; 0xffffff98
   16530:	uxtb	r1, r5
   16534:	ldr	r0, [r0]
   16538:	add	r1, r0, r1, lsl #1
   1653c:	ldrh	r1, [r1]
   16540:	tst	r1, #8192	; 0x2000
   16544:	beq	16554 <argp_help@@Base+0x140>
   16548:	ldrb	r5, [r8, #1]!
   1654c:	add	r1, r0, r5, lsl #1
   16550:	b	1653c <argp_help@@Base+0x128>
   16554:	tst	r1, #1024	; 0x400
   16558:	beq	16884 <argp_help@@Base+0x470>
   1655c:	mov	r3, r5
   16560:	mov	r2, r8
   16564:	b	1656c <argp_help@@Base+0x158>
   16568:	ldrb	r3, [r2, #1]!
   1656c:	uxtb	r6, r3
   16570:	add	r1, r0, r6, lsl #1
   16574:	ldrh	r1, [r1]
   16578:	tst	r1, #8
   1657c:	bne	16568 <argp_help@@Base+0x154>
   16580:	cmp	r6, #95	; 0x5f
   16584:	cmpne	r6, #45	; 0x2d
   16588:	beq	16568 <argp_help@@Base+0x154>
   1658c:	tst	r1, #8192	; 0x2000
   16590:	mov	r4, r2
   16594:	beq	165b0 <argp_help@@Base+0x19c>
   16598:	mov	r4, r2
   1659c:	ldrb	r3, [r4, #1]!
   165a0:	add	r1, r0, r3, lsl #1
   165a4:	ldrh	r1, [r1]
   165a8:	tst	r1, #8192	; 0x2000
   165ac:	bne	1659c <argp_help@@Base+0x188>
   165b0:	sub	r9, r2, r8
   165b4:	uxtb	r2, r3
   165b8:	cmp	r2, #0
   165bc:	cmpne	r2, #44	; 0x2c
   165c0:	bne	16610 <argp_help@@Base+0x1fc>
   165c4:	uxtb	r0, r5
   165c8:	mov	sl, #1
   165cc:	cmp	r0, #110	; 0x6e
   165d0:	bne	16608 <argp_help@@Base+0x1f4>
   165d4:	ldrb	r0, [r8, #1]
   165d8:	mov	sl, #1
   165dc:	cmp	r0, #111	; 0x6f
   165e0:	bne	16608 <argp_help@@Base+0x1f4>
   165e4:	ldrb	r0, [r8, #2]
   165e8:	mov	sl, #1
   165ec:	cmp	r0, #45	; 0x2d
   165f0:	bne	16608 <argp_help@@Base+0x1f4>
   165f4:	sub	r9, r9, #3
   165f8:	add	r8, r8, #3
   165fc:	mov	r5, #0
   16600:	mov	sl, #1
   16604:	b	16694 <argp_help@@Base+0x280>
   16608:	mov	r5, #1
   1660c:	b	16694 <argp_help@@Base+0x280>
   16610:	cmp	r2, #61	; 0x3d
   16614:	bne	1662c <argp_help@@Base+0x218>
   16618:	ldrb	r1, [r4, #1]!
   1661c:	add	r1, r0, r1, lsl #1
   16620:	ldrh	r1, [r1]
   16624:	tst	r1, #8192	; 0x2000
   16628:	bne	16618 <argp_help@@Base+0x204>
   1662c:	mov	sl, #0
   16630:	tst	r1, #2048	; 0x800
   16634:	bne	16640 <argp_help@@Base+0x22c>
   16638:	mov	r5, #0
   1663c:	b	16694 <argp_help@@Base+0x280>
   16640:	mov	r0, r4
   16644:	mov	r1, #0
   16648:	mov	r2, #10
   1664c:	bl	119a4 <strtol@plt>
   16650:	mov	r5, r0
   16654:	ldr	r0, [fp, #-104]	; 0xffffff98
   16658:	sub	r4, r4, #1
   1665c:	ldr	r0, [r0]
   16660:	ldrb	r1, [r4, #1]!
   16664:	add	r1, r0, r1, lsl #1
   16668:	ldrh	r1, [r1]
   1666c:	tst	r1, #2048	; 0x800
   16670:	bne	16660 <argp_help@@Base+0x24c>
   16674:	mov	sl, #0
   16678:	tst	r1, #8192	; 0x2000
   1667c:	beq	16694 <argp_help@@Base+0x280>
   16680:	ldrb	r1, [r4, #1]!
   16684:	add	r1, r0, r1, lsl #1
   16688:	ldrb	r1, [r1, #1]
   1668c:	tst	r1, #32
   16690:	bne	16680 <argp_help@@Base+0x26c>
   16694:	mov	r0, r7
   16698:	bl	11c20 <strlen@plt>
   1669c:	cmp	r0, r9
   166a0:	bne	166c0 <argp_help@@Base+0x2ac>
   166a4:	mov	r0, r8
   166a8:	mov	r1, r7
   166ac:	mov	r2, r9
   166b0:	bl	11ddc <strncmp@plt>
   166b4:	cmp	r0, #0
   166b8:	mov	r6, r7
   166bc:	beq	16844 <argp_help@@Base+0x430>
   166c0:	add	r6, r7, #16
   166c4:	mov	r0, r6
   166c8:	bl	11c20 <strlen@plt>
   166cc:	cmp	r0, r9
   166d0:	bne	166ec <argp_help@@Base+0x2d8>
   166d4:	mov	r0, r8
   166d8:	mov	r1, r6
   166dc:	mov	r2, r9
   166e0:	bl	11ddc <strncmp@plt>
   166e4:	cmp	r0, #0
   166e8:	beq	16844 <argp_help@@Base+0x430>
   166ec:	add	r6, r7, #32
   166f0:	mov	r0, r6
   166f4:	bl	11c20 <strlen@plt>
   166f8:	cmp	r0, r9
   166fc:	bne	16718 <argp_help@@Base+0x304>
   16700:	mov	r0, r8
   16704:	mov	r1, r6
   16708:	mov	r2, r9
   1670c:	bl	11ddc <strncmp@plt>
   16710:	cmp	r0, #0
   16714:	beq	16844 <argp_help@@Base+0x430>
   16718:	add	r6, r7, #48	; 0x30
   1671c:	mov	r0, r6
   16720:	bl	11c20 <strlen@plt>
   16724:	cmp	r0, r9
   16728:	bne	16744 <argp_help@@Base+0x330>
   1672c:	mov	r0, r8
   16730:	mov	r1, r6
   16734:	mov	r2, r9
   16738:	bl	11ddc <strncmp@plt>
   1673c:	cmp	r0, #0
   16740:	beq	16844 <argp_help@@Base+0x430>
   16744:	add	r6, r7, #64	; 0x40
   16748:	mov	r0, r6
   1674c:	bl	11c20 <strlen@plt>
   16750:	cmp	r0, r9
   16754:	bne	16770 <argp_help@@Base+0x35c>
   16758:	mov	r0, r8
   1675c:	mov	r1, r6
   16760:	mov	r2, r9
   16764:	bl	11ddc <strncmp@plt>
   16768:	cmp	r0, #0
   1676c:	beq	16844 <argp_help@@Base+0x430>
   16770:	add	r6, r7, #80	; 0x50
   16774:	mov	r0, r6
   16778:	bl	11c20 <strlen@plt>
   1677c:	cmp	r0, r9
   16780:	bne	1679c <argp_help@@Base+0x388>
   16784:	mov	r0, r8
   16788:	mov	r1, r6
   1678c:	mov	r2, r9
   16790:	bl	11ddc <strncmp@plt>
   16794:	cmp	r0, #0
   16798:	beq	16844 <argp_help@@Base+0x430>
   1679c:	add	r6, r7, #96	; 0x60
   167a0:	mov	r0, r6
   167a4:	bl	11c20 <strlen@plt>
   167a8:	cmp	r0, r9
   167ac:	bne	167c8 <argp_help@@Base+0x3b4>
   167b0:	mov	r0, r8
   167b4:	mov	r1, r6
   167b8:	mov	r2, r9
   167bc:	bl	11ddc <strncmp@plt>
   167c0:	cmp	r0, #0
   167c4:	beq	16844 <argp_help@@Base+0x430>
   167c8:	add	r6, r7, #112	; 0x70
   167cc:	mov	r0, r6
   167d0:	bl	11c20 <strlen@plt>
   167d4:	cmp	r0, r9
   167d8:	bne	167f4 <argp_help@@Base+0x3e0>
   167dc:	mov	r0, r8
   167e0:	mov	r1, r6
   167e4:	mov	r2, r9
   167e8:	bl	11ddc <strncmp@plt>
   167ec:	cmp	r0, #0
   167f0:	beq	16844 <argp_help@@Base+0x430>
   167f4:	add	r6, r7, #128	; 0x80
   167f8:	mov	r0, r6
   167fc:	bl	11c20 <strlen@plt>
   16800:	cmp	r0, r9
   16804:	bne	16820 <argp_help@@Base+0x40c>
   16808:	mov	r0, r8
   1680c:	mov	r1, r6
   16810:	mov	r2, r9
   16814:	bl	11ddc <strncmp@plt>
   16818:	cmp	r0, #0
   1681c:	beq	16844 <argp_help@@Base+0x430>
   16820:	sub	sp, sp, #8
   16824:	str	r9, [sp]
   16828:	str	r8, [sp, #4]
   1682c:	movw	r3, #59828	; 0xe9b4
   16830:	mov	r1, #0
   16834:	mov	r2, #0
   16838:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1683c:	movt	r3, #1
   16840:	b	16878 <argp_help@@Base+0x464>
   16844:	cmp	sl, #0
   16848:	beq	164fc <argp_help@@Base+0xe8>
   1684c:	ldrb	r0, [r6, #14]
   16850:	cmp	r0, #0
   16854:	bne	164fc <argp_help@@Base+0xe8>
   16858:	sub	sp, sp, #8
   1685c:	str	r9, [sp]
   16860:	str	r8, [sp, #4]
   16864:	movw	r3, #59781	; 0xe985
   16868:	mov	r1, #0
   1686c:	mov	r2, #0
   16870:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16874:	movt	r3, #1
   16878:	bl	17b54 <argp_failure@@Base>
   1687c:	add	sp, sp, #8
   16880:	b	16508 <argp_help@@Base+0xf4>
   16884:	tst	r5, #255	; 0xff
   16888:	beq	168b0 <argp_help@@Base+0x49c>
   1688c:	sub	sp, sp, #8
   16890:	str	r8, [sp]
   16894:	movw	r3, #59866	; 0xe9da
   16898:	mov	r1, #0
   1689c:	mov	r2, #0
   168a0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   168a4:	movt	r3, #1
   168a8:	bl	17b54 <argp_failure@@Base>
   168ac:	add	sp, sp, #8
   168b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   168b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   168b8:	movw	r0, #60432	; 0xec10
   168bc:	movt	r0, #1
   168c0:	cmp	r2, r1
   168c4:	bge	16948 <argp_help@@Base+0x534>
   168c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   168cc:	cmp	r2, r1
   168d0:	bge	16950 <argp_help@@Base+0x53c>
   168d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   168d8:	cmp	r2, r1
   168dc:	bge	16958 <argp_help@@Base+0x544>
   168e0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   168e4:	cmp	r2, r1
   168e8:	bge	16960 <argp_help@@Base+0x54c>
   168ec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   168f0:	cmp	r2, r1
   168f4:	bge	16968 <argp_help@@Base+0x554>
   168f8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   168fc:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16900:	cmp	r2, r1
   16904:	bge	1794c <argp_help@@Base+0x1538>
   16908:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1690c:	sub	r1, fp, #88	; 0x58
   16910:	mov	r2, r1
   16914:	mov	r1, r9
   16918:	vld1.64	{d16-d17}, [r0]
   1691c:	mov	r0, #32
   16920:	vld1.64	{d18-d19}, [r2], r0
   16924:	ldr	r0, [fp, #-112]	; 0xffffff90
   16928:	vst1.64	{d16-d17}, [r0]
   1692c:	mov	r0, #36	; 0x24
   16930:	vst1.64	{d18-d19}, [r1], r0
   16934:	mov	r0, #1
   16938:	str	r0, [r1]
   1693c:	ldr	r0, [r2]
   16940:	str	r0, [r9, #32]
   16944:	b	169a0 <argp_help@@Base+0x58c>
   16948:	add	r0, r0, #32
   1694c:	b	1696c <argp_help@@Base+0x558>
   16950:	add	r0, r0, #48	; 0x30
   16954:	b	1696c <argp_help@@Base+0x558>
   16958:	add	r0, r0, #64	; 0x40
   1695c:	b	1696c <argp_help@@Base+0x558>
   16960:	add	r0, r0, #80	; 0x50
   16964:	b	1696c <argp_help@@Base+0x558>
   16968:	add	r0, r0, #96	; 0x60
   1696c:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16970:	sub	sp, sp, #8
   16974:	movw	r1, #59947	; 0xea2b
   16978:	str	r0, [sp, #4]
   1697c:	movw	r3, #59895	; 0xe9f7
   16980:	mov	r2, #0
   16984:	movt	r1, #1
   16988:	movt	r3, #1
   1698c:	str	r1, [sp]
   16990:	mov	r1, #0
   16994:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16998:	bl	17b54 <argp_failure@@Base>
   1699c:	add	sp, sp, #8
   169a0:	ldr	r2, [r9, #32]
   169a4:	mov	r0, r4
   169a8:	mov	r1, #0
   169ac:	mov	r3, #0
   169b0:	mov	r5, #0
   169b4:	bl	1be10 <argp_parse@@Base+0x23f4>
   169b8:	cmp	r0, #0
   169bc:	beq	16d8c <argp_help@@Base+0x978>
   169c0:	mov	sl, r0
   169c4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   169c8:	str	r4, [fp, #-132]	; 0xffffff7c
   169cc:	tst	r0, #11
   169d0:	beq	16b78 <argp_help@@Base+0x764>
   169d4:	ldr	r0, [fp, #-108]	; 0xffffff94
   169d8:	mov	r1, #0
   169dc:	bl	17d48 <argp_failure@@Base+0x1f4>
   169e0:	ldr	r9, [r0, #4]
   169e4:	mov	r5, r0
   169e8:	cmp	r9, #0
   169ec:	beq	16b70 <argp_help@@Base+0x75c>
   169f0:	ldr	r4, [r5]
   169f4:	movw	r7, #59667	; 0xe913
   169f8:	str	r5, [fp, #-112]	; 0xffffff90
   169fc:	mov	r5, r9
   16a00:	movt	r7, #1
   16a04:	str	r4, [fp, #-104]	; 0xffffff98
   16a08:	b	16a18 <argp_help@@Base+0x604>
   16a0c:	subs	r5, r5, #1
   16a10:	add	r4, r4, #28
   16a14:	beq	16a70 <argp_help@@Base+0x65c>
   16a18:	ldr	r6, [r4, #4]
   16a1c:	cmp	r6, #0
   16a20:	beq	16a0c <argp_help@@Base+0x5f8>
   16a24:	ldr	r0, [r4]
   16a28:	add	r8, r0, #12
   16a2c:	b	16a3c <argp_help@@Base+0x628>
   16a30:	subs	r6, r6, #1
   16a34:	add	r8, r8, #24
   16a38:	beq	16a0c <argp_help@@Base+0x5f8>
   16a3c:	ldr	r0, [r8, #-12]
   16a40:	cmp	r0, #0
   16a44:	beq	16a30 <argp_help@@Base+0x61c>
   16a48:	ldrb	r1, [r8]
   16a4c:	tst	r1, #2
   16a50:	bne	16a30 <argp_help@@Base+0x61c>
   16a54:	mov	r1, r7
   16a58:	bl	11998 <strcmp@plt>
   16a5c:	cmp	r0, #0
   16a60:	bne	16a30 <argp_help@@Base+0x61c>
   16a64:	cmp	r4, #0
   16a68:	mvnne	r0, #0
   16a6c:	strne	r0, [r4, #12]
   16a70:	ldr	r4, [fp, #-104]	; 0xffffff98
   16a74:	movw	r8, #61016	; 0xee58
   16a78:	mov	r5, r9
   16a7c:	movt	r8, #1
   16a80:	b	16a90 <argp_help@@Base+0x67c>
   16a84:	subs	r5, r5, #1
   16a88:	add	r4, r4, #28
   16a8c:	beq	16ae8 <argp_help@@Base+0x6d4>
   16a90:	ldr	r6, [r4, #4]
   16a94:	cmp	r6, #0
   16a98:	beq	16a84 <argp_help@@Base+0x670>
   16a9c:	ldr	r0, [r4]
   16aa0:	add	r7, r0, #12
   16aa4:	b	16ab4 <argp_help@@Base+0x6a0>
   16aa8:	subs	r6, r6, #1
   16aac:	add	r7, r7, #24
   16ab0:	beq	16a84 <argp_help@@Base+0x670>
   16ab4:	ldr	r0, [r7, #-12]
   16ab8:	cmp	r0, #0
   16abc:	beq	16aa8 <argp_help@@Base+0x694>
   16ac0:	ldrb	r1, [r7]
   16ac4:	tst	r1, #2
   16ac8:	bne	16aa8 <argp_help@@Base+0x694>
   16acc:	mov	r1, r8
   16ad0:	bl	11998 <strcmp@plt>
   16ad4:	cmp	r0, #0
   16ad8:	bne	16aa8 <argp_help@@Base+0x694>
   16adc:	cmp	r4, #0
   16ae0:	mvnne	r0, #0
   16ae4:	strne	r0, [r4, #12]
   16ae8:	ldr	r0, [fp, #-104]	; 0xffffff98
   16aec:	ldr	r5, [fp, #-112]	; 0xffffff90
   16af0:	sub	r2, r9, #1
   16af4:	and	r6, r9, #3
   16af8:	mov	r1, #0
   16afc:	cmp	r2, #3
   16b00:	mov	r2, r0
   16b04:	bcc	16b40 <argp_help@@Base+0x72c>
   16b08:	sub	r3, r9, r6
   16b0c:	mov	r1, #0
   16b10:	mov	r2, r0
   16b14:	add	r7, r1, #3
   16b18:	str	r1, [r2, #24]
   16b1c:	str	r7, [r2, #108]	; 0x6c
   16b20:	add	r7, r1, #2
   16b24:	str	r7, [r2, #80]	; 0x50
   16b28:	add	r7, r1, #1
   16b2c:	add	r1, r1, #4
   16b30:	str	r7, [r2, #52]	; 0x34
   16b34:	add	r2, r2, #112	; 0x70
   16b38:	cmp	r3, r1
   16b3c:	bne	16b14 <argp_help@@Base+0x700>
   16b40:	cmp	r6, #0
   16b44:	beq	16b5c <argp_help@@Base+0x748>
   16b48:	add	r2, r2, #24
   16b4c:	str	r1, [r2], #28
   16b50:	subs	r6, r6, #1
   16b54:	add	r1, r1, #1
   16b58:	bne	16b4c <argp_help@@Base+0x738>
   16b5c:	movw	r3, #36820	; 0x8fd4
   16b60:	mov	r1, r9
   16b64:	mov	r2, #28
   16b68:	movt	r3, #1
   16b6c:	bl	11d7c <qsort@plt>
   16b70:	movw	r9, #1400	; 0x578
   16b74:	movt	r9, #3
   16b78:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16b7c:	str	r5, [fp, #-112]	; 0xffffff90
   16b80:	tst	r0, #3
   16b84:	beq	16d9c <argp_help@@Base+0x988>
   16b88:	ldr	r0, [fp, #-108]	; 0xffffff94
   16b8c:	bl	18408 <argp_failure@@Base+0x8b4>
   16b90:	mov	r2, r0
   16b94:	add	r0, r0, #7
   16b98:	bic	r0, r0, #7
   16b9c:	sub	r5, sp, r0
   16ba0:	mov	sp, r5
   16ba4:	mov	r0, r5
   16ba8:	mov	r1, #0
   16bac:	bl	11c8c <memset@plt>
   16bb0:	movw	r7, #59678	; 0xe91e
   16bb4:	movw	r6, #59685	; 0xe925
   16bb8:	movt	r7, #1
   16bbc:	movt	r6, #1
   16bc0:	b	16be4 <argp_help@@Base+0x7d0>
   16bc4:	add	r1, r0, #1
   16bc8:	str	r1, [sl, #28]
   16bcc:	mov	r1, #10
   16bd0:	strb	r1, [r0]
   16bd4:	cmp	r7, #0
   16bd8:	mov	r7, r6
   16bdc:	str	r4, [fp, #-92]	; 0xffffffa4
   16be0:	beq	16d84 <argp_help@@Base+0x970>
   16be4:	ldr	r1, [sl, #24]
   16be8:	ldr	r2, [sl, #28]
   16bec:	ldr	r0, [sl, #16]
   16bf0:	ldr	r4, [r9, #28]
   16bf4:	sub	r1, r2, r1
   16bf8:	cmp	r1, r0
   16bfc:	bls	16c08 <argp_help@@Base+0x7f4>
   16c00:	mov	r0, sl
   16c04:	bl	1bedc <argp_parse@@Base+0x24c0>
   16c08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16c0c:	movw	r1, #59672	; 0xe918
   16c10:	ldr	r9, [sl, #12]
   16c14:	mov	r0, sl
   16c18:	mov	r2, r7
   16c1c:	str	r4, [sl, #12]
   16c20:	str	r5, [fp, #-88]	; 0xffffffa8
   16c24:	movt	r1, #1
   16c28:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   16c2c:	movw	r0, #1400	; 0x578
   16c30:	ldr	r1, [sl, #24]
   16c34:	ldr	r2, [sl, #28]
   16c38:	movt	r0, #3
   16c3c:	ldr	r4, [r0, #28]
   16c40:	ldr	r0, [sl, #16]
   16c44:	sub	r1, r2, r1
   16c48:	cmp	r1, r0
   16c4c:	bls	16c58 <argp_help@@Base+0x844>
   16c50:	mov	r0, sl
   16c54:	bl	1bedc <argp_parse@@Base+0x24c0>
   16c58:	ldr	r8, [sl, #4]
   16c5c:	str	r4, [sl, #4]
   16c60:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16c64:	tst	r4, #2
   16c68:	bne	16c80 <argp_help@@Base+0x86c>
   16c6c:	ldr	r0, [fp, #-112]	; 0xffffff90
   16c70:	mov	r1, sl
   16c74:	bl	1847c <argp_failure@@Base+0x928>
   16c78:	orr	r4, r4, #2
   16c7c:	b	16ce4 <argp_help@@Base+0x8d0>
   16c80:	ldr	r0, [fp, #-112]	; 0xffffff90
   16c84:	ldr	r0, [r0, #4]
   16c88:	cmp	r0, #0
   16c8c:	beq	16ce4 <argp_help@@Base+0x8d0>
   16c90:	ldr	r0, [sl, #28]
   16c94:	ldr	r1, [sl, #32]
   16c98:	add	r2, r0, #12
   16c9c:	cmp	r2, r1
   16ca0:	bls	16cbc <argp_help@@Base+0x8a8>
   16ca4:	mov	r0, sl
   16ca8:	mov	r1, #12
   16cac:	bl	1c40c <argp_parse@@Base+0x29f0>
   16cb0:	cmp	r0, #0
   16cb4:	beq	16ce4 <argp_help@@Base+0x8d0>
   16cb8:	ldr	r0, [sl, #28]
   16cbc:	movw	r1, #60416	; 0xec00
   16cc0:	movt	r1, #1
   16cc4:	vldr	d16, [r1]
   16cc8:	movw	r1, #11822	; 0x2e2e
   16ccc:	movt	r1, #23854	; 0x5d2e
   16cd0:	str	r1, [r0, #8]
   16cd4:	vst1.8	{d16}, [r0]
   16cd8:	ldr	r0, [sl, #28]
   16cdc:	add	r0, r0, #12
   16ce0:	str	r0, [sl, #28]
   16ce4:	sub	sp, sp, #8
   16ce8:	str	sl, [sp]
   16cec:	sub	r2, fp, #88	; 0x58
   16cf0:	mov	r3, #1
   16cf4:	ldr	r0, [fp, #-108]	; 0xffffff94
   16cf8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16cfc:	bl	1884c <argp_failure@@Base+0xcf8>
   16d00:	add	sp, sp, #8
   16d04:	mov	r7, r0
   16d08:	ldr	r2, [sl, #24]
   16d0c:	ldr	r0, [sl, #28]
   16d10:	ldr	r1, [sl, #16]
   16d14:	sub	r2, r0, r2
   16d18:	cmp	r2, r1
   16d1c:	bls	16d38 <argp_help@@Base+0x924>
   16d20:	mov	r0, sl
   16d24:	bl	1bedc <argp_parse@@Base+0x24c0>
   16d28:	ldr	r2, [sl, #24]
   16d2c:	ldr	r0, [sl, #28]
   16d30:	ldr	r1, [sl, #16]
   16d34:	sub	r2, r0, r2
   16d38:	cmp	r2, r1
   16d3c:	str	r9, [sl, #12]
   16d40:	bls	16d50 <argp_help@@Base+0x93c>
   16d44:	mov	r0, sl
   16d48:	bl	1bedc <argp_parse@@Base+0x24c0>
   16d4c:	ldr	r0, [sl, #28]
   16d50:	str	r8, [sl, #4]
   16d54:	movw	r9, #1400	; 0x578
   16d58:	ldr	r1, [sl, #32]
   16d5c:	movt	r9, #3
   16d60:	cmp	r0, r1
   16d64:	bcc	16bc4 <argp_help@@Base+0x7b0>
   16d68:	mov	r0, sl
   16d6c:	mov	r1, #1
   16d70:	bl	1c40c <argp_parse@@Base+0x29f0>
   16d74:	cmp	r0, #0
   16d78:	beq	16bd4 <argp_help@@Base+0x7c0>
   16d7c:	ldr	r0, [sl, #28]
   16d80:	b	16bc4 <argp_help@@Base+0x7b0>
   16d84:	mov	r5, #1
   16d88:	b	16da0 <argp_help@@Base+0x98c>
   16d8c:	mov	r0, r4
   16d90:	sub	sp, fp, #28
   16d94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d98:	b	11b18 <funlockfile@plt>
   16d9c:	mov	r5, #0
   16da0:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16da4:	tst	r4, #16
   16da8:	bne	16dc0 <argp_help@@Base+0x9ac>
   16dac:	tst	r4, #4
   16db0:	bne	16df0 <argp_help@@Base+0x9dc>
   16db4:	tst	r4, #8
   16db8:	bne	16e14 <argp_help@@Base+0xa00>
   16dbc:	b	176dc <argp_help@@Base+0x12c8>
   16dc0:	sub	sp, sp, #8
   16dc4:	mov	r0, #1
   16dc8:	mov	r2, #0
   16dcc:	mov	r3, #0
   16dd0:	stm	sp, {r0, sl}
   16dd4:	ldr	r0, [fp, #-108]	; 0xffffff94
   16dd8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16ddc:	bl	18b44 <argp_failure@@Base+0xff0>
   16de0:	add	sp, sp, #8
   16de4:	orr	r5, r0, r5
   16de8:	tst	r4, #4
   16dec:	beq	16db4 <argp_help@@Base+0x9a0>
   16df0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16df4:	movw	r1, #59692	; 0xe92c
   16df8:	mov	r0, sl
   16dfc:	movt	r1, #1
   16e00:	mov	r3, r2
   16e04:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   16e08:	mov	r5, #1
   16e0c:	tst	r4, #8
   16e10:	beq	176dc <argp_help@@Base+0x12c8>
   16e14:	ldr	r0, [fp, #-112]	; 0xffffff90
   16e18:	ldr	r1, [r0, #4]
   16e1c:	cmp	r1, #0
   16e20:	beq	176dc <argp_help@@Base+0x12c8>
   16e24:	cmp	r5, #0
   16e28:	beq	16e88 <argp_help@@Base+0xa74>
   16e2c:	ldr	r0, [sl, #28]
   16e30:	ldr	r1, [sl, #32]
   16e34:	ldr	r5, [fp, #-112]	; 0xffffff90
   16e38:	cmp	r0, r1
   16e3c:	bcc	16e58 <argp_help@@Base+0xa44>
   16e40:	mov	r0, sl
   16e44:	mov	r1, #1
   16e48:	bl	1c40c <argp_parse@@Base+0x29f0>
   16e4c:	cmp	r0, #0
   16e50:	beq	16e68 <argp_help@@Base+0xa54>
   16e54:	ldr	r0, [sl, #28]
   16e58:	add	r1, r0, #1
   16e5c:	str	r1, [sl, #28]
   16e60:	mov	r1, #10
   16e64:	strb	r1, [r0]
   16e68:	ldr	r1, [r5, #4]
   16e6c:	mov	r0, #0
   16e70:	str	r0, [fp, #-44]	; 0xffffffd4
   16e74:	str	r0, [fp, #-48]	; 0xffffffd0
   16e78:	str	r0, [fp, #-40]	; 0xffffffd8
   16e7c:	cmp	r1, #0
   16e80:	bne	16e98 <argp_help@@Base+0xa84>
   16e84:	b	176d8 <argp_help@@Base+0x12c4>
   16e88:	mov	r0, #0
   16e8c:	str	r0, [fp, #-44]	; 0xffffffd4
   16e90:	str	r0, [fp, #-48]	; 0xffffffd0
   16e94:	str	r0, [fp, #-40]	; 0xffffffd8
   16e98:	add	r0, sl, #28
   16e9c:	str	r0, [fp, #-96]	; 0xffffffa0
   16ea0:	ldr	r0, [fp, #-112]	; 0xffffff90
   16ea4:	str	r4, [fp, #-92]	; 0xffffffa4
   16ea8:	ldr	r5, [r0]
   16eac:	b	16ec8 <argp_help@@Base+0xab4>
   16eb0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   16eb4:	ldr	r0, [fp, #-120]	; 0xffffff88
   16eb8:	add	r5, r5, #28
   16ebc:	subs	r1, r1, #1
   16ec0:	str	r0, [sl, #12]
   16ec4:	beq	176c4 <argp_help@@Base+0x12b0>
   16ec8:	str	r1, [fp, #-116]	; 0xffffff8c
   16ecc:	ldr	r1, [sl, #24]
   16ed0:	ldr	r2, [sl, #28]
   16ed4:	ldr	r0, [sl, #16]
   16ed8:	ldr	r8, [r5]
   16edc:	mov	r4, r5
   16ee0:	ldr	r5, [r5, #8]
   16ee4:	sub	r1, r2, r1
   16ee8:	cmp	r1, r0
   16eec:	bls	16ef8 <argp_help@@Base+0xae4>
   16ef0:	mov	r0, sl
   16ef4:	bl	1bedc <argp_parse@@Base+0x24c0>
   16ef8:	mov	r0, #0
   16efc:	mov	r3, #0
   16f00:	ldr	r2, [sl, #4]
   16f04:	ldr	r1, [sl, #12]
   16f08:	str	r0, [fp, #-128]	; 0xffffff80
   16f0c:	str	r3, [sl, #4]
   16f10:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16f14:	str	r4, [fp, #-104]	; 0xffffff98
   16f18:	str	r1, [fp, #-120]	; 0xffffff88
   16f1c:	str	r2, [fp, #-124]	; 0xffffff84
   16f20:	str	r0, [fp, #-72]	; 0xffffffb8
   16f24:	mov	r0, #1
   16f28:	str	r0, [fp, #-76]	; 0xffffffb4
   16f2c:	sub	r0, fp, #48	; 0x30
   16f30:	str	r0, [fp, #-80]	; 0xffffffb0
   16f34:	str	sl, [fp, #-84]	; 0xffffffac
   16f38:	str	r4, [fp, #-88]	; 0xffffffa8
   16f3c:	ldrb	r0, [r8, #12]
   16f40:	tst	r0, #8
   16f44:	bne	16f88 <argp_help@@Base+0xb74>
   16f48:	ldr	r0, [r4, #4]
   16f4c:	cmp	r0, #0
   16f50:	beq	16f88 <argp_help@@Base+0xb74>
   16f54:	add	r1, r8, #12
   16f58:	b	16f68 <argp_help@@Base+0xb54>
   16f5c:	add	r1, r1, #24
   16f60:	subs	r0, r0, #1
   16f64:	beq	16f88 <argp_help@@Base+0xb74>
   16f68:	ldr	r2, [r1, #-12]
   16f6c:	cmp	r2, #0
   16f70:	beq	16f5c <argp_help@@Base+0xb48>
   16f74:	ldrb	r2, [r1]
   16f78:	tst	r2, #2
   16f7c:	bne	16f5c <argp_help@@Base+0xb48>
   16f80:	mov	r0, #1
   16f84:	str	r0, [fp, #-128]	; 0xffffff80
   16f88:	ldr	r1, [sl, #24]
   16f8c:	ldr	r2, [sl, #28]
   16f90:	ldr	r0, [sl, #16]
   16f94:	ldr	r4, [r9, #8]
   16f98:	sub	r1, r2, r1
   16f9c:	cmp	r1, r0
   16fa0:	bls	16fac <argp_help@@Base+0xb98>
   16fa4:	mov	r0, sl
   16fa8:	bl	1bedc <argp_parse@@Base+0x24c0>
   16fac:	ldr	r0, [fp, #-104]	; 0xffffff98
   16fb0:	str	r4, [sl, #12]
   16fb4:	ldr	r7, [r0, #4]
   16fb8:	cmp	r7, #0
   16fbc:	beq	17120 <argp_help@@Base+0xd0c>
   16fc0:	add	r9, r8, #12
   16fc4:	b	16fe4 <argp_help@@Base+0xbd0>
   16fc8:	cmp	r2, #0
   16fcc:	movne	r0, #1
   16fd0:	strne	r0, [fp, #-40]	; 0xffffffd8
   16fd4:	add	r5, r5, #1
   16fd8:	add	r9, r9, #24
   16fdc:	subs	r7, r7, #1
   16fe0:	beq	17120 <argp_help@@Base+0xd0c>
   16fe4:	ldr	r4, [r9]
   16fe8:	tst	r4, #8
   16fec:	bne	16fd8 <argp_help@@Base+0xbc4>
   16ff0:	ldr	r6, [r9, #-8]
   16ff4:	sub	r0, r6, #1
   16ff8:	cmp	r0, #254	; 0xfe
   16ffc:	bhi	16fd8 <argp_help@@Base+0xbc4>
   17000:	bl	11bfc <__ctype_b_loc@plt>
   17004:	ldr	r0, [r0]
   17008:	add	r0, r0, r6, lsl #1
   1700c:	ldrb	r0, [r0, #1]
   17010:	tst	r0, #64	; 0x40
   17014:	beq	16fd8 <argp_help@@Base+0xbc4>
   17018:	ldrb	r0, [r5]
   1701c:	cmp	r6, r0
   17020:	bne	16fd8 <argp_help@@Base+0xbc4>
   17024:	tst	r4, #2
   17028:	bne	16fd4 <argp_help@@Base+0xbc0>
   1702c:	movw	r0, #1400	; 0x578
   17030:	sub	r1, fp, #88	; 0x58
   17034:	movt	r0, #3
   17038:	ldr	r0, [r0, #8]
   1703c:	bl	19564 <argp_failure@@Base+0x1a10>
   17040:	ldr	r0, [sl, #28]
   17044:	ldr	r1, [sl, #32]
   17048:	cmp	r0, r1
   1704c:	bcc	1706c <argp_help@@Base+0xc58>
   17050:	mov	r0, sl
   17054:	mov	r1, #1
   17058:	bl	1c40c <argp_parse@@Base+0x29f0>
   1705c:	cmp	r0, #0
   17060:	beq	17080 <argp_help@@Base+0xc6c>
   17064:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17068:	ldr	r0, [r0]
   1706c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17070:	add	r1, r0, #1
   17074:	str	r1, [r2]
   17078:	mov	r1, #45	; 0x2d
   1707c:	strb	r1, [r0]
   17080:	ldr	r0, [sl, #28]
   17084:	ldr	r1, [sl, #32]
   17088:	ldrb	r4, [r5]
   1708c:	cmp	r0, r1
   17090:	bcc	170b0 <argp_help@@Base+0xc9c>
   17094:	mov	r0, sl
   17098:	mov	r1, #1
   1709c:	bl	1c40c <argp_parse@@Base+0x29f0>
   170a0:	cmp	r0, #0
   170a4:	beq	170c0 <argp_help@@Base+0xcac>
   170a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   170ac:	ldr	r0, [r0]
   170b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   170b4:	add	r1, r0, #1
   170b8:	str	r1, [r2]
   170bc:	strb	r4, [r0]
   170c0:	ldr	r0, [fp, #-128]	; 0xffffff80
   170c4:	ldr	r2, [r8, #8]
   170c8:	cmp	r0, #0
   170cc:	beq	170e4 <argp_help@@Base+0xcd0>
   170d0:	movw	r0, #1400	; 0x578
   170d4:	movt	r0, #3
   170d8:	ldr	r0, [r0]
   170dc:	cmp	r0, #0
   170e0:	beq	16fc8 <argp_help@@Base+0xbb4>
   170e4:	cmp	r2, #0
   170e8:	beq	16fd4 <argp_help@@Base+0xbc0>
   170ec:	ldrb	r0, [r8, #12]
   170f0:	tst	r0, #1
   170f4:	bne	1710c <argp_help@@Base+0xcf8>
   170f8:	movw	r1, #59891	; 0xe9f3
   170fc:	mov	r0, sl
   17100:	movt	r1, #1
   17104:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   17108:	b	16fd4 <argp_help@@Base+0xbc0>
   1710c:	movw	r1, #60387	; 0xebe3
   17110:	mov	r0, sl
   17114:	movt	r1, #1
   17118:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   1711c:	b	16fd4 <argp_help@@Base+0xbc0>
   17120:	ldrb	r0, [r8, #12]
   17124:	movw	r9, #1400	; 0x578
   17128:	movt	r9, #3
   1712c:	tst	r0, #8
   17130:	bne	171f0 <argp_help@@Base+0xddc>
   17134:	ldr	r1, [sl, #24]
   17138:	ldr	r2, [sl, #28]
   1713c:	ldr	r0, [sl, #16]
   17140:	ldr	r4, [r9, #12]
   17144:	sub	r1, r2, r1
   17148:	cmp	r1, r0
   1714c:	bls	17158 <argp_help@@Base+0xd44>
   17150:	mov	r0, sl
   17154:	bl	1bedc <argp_parse@@Base+0x24c0>
   17158:	ldr	r0, [fp, #-104]	; 0xffffff98
   1715c:	str	r4, [sl, #12]
   17160:	ldr	r4, [r0, #4]
   17164:	cmp	r4, #0
   17168:	beq	172c8 <argp_help@@Base+0xeb4>
   1716c:	add	r5, r8, #12
   17170:	b	17190 <argp_help@@Base+0xd7c>
   17174:	movw	r1, #60397	; 0xebed
   17178:	mov	r0, sl
   1717c:	movt	r1, #1
   17180:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   17184:	add	r5, r5, #24
   17188:	subs	r4, r4, #1
   1718c:	beq	172c8 <argp_help@@Base+0xeb4>
   17190:	ldr	r0, [r5, #-12]
   17194:	cmp	r0, #0
   17198:	beq	17184 <argp_help@@Base+0xd70>
   1719c:	ldrb	r0, [r5]
   171a0:	tst	r0, #2
   171a4:	bne	17184 <argp_help@@Base+0xd70>
   171a8:	ldr	r0, [r9, #12]
   171ac:	sub	r1, fp, #88	; 0x58
   171b0:	bl	19564 <argp_failure@@Base+0x1a10>
   171b4:	ldr	r2, [r5, #-12]
   171b8:	movw	r1, #60392	; 0xebe8
   171bc:	mov	r0, sl
   171c0:	movt	r1, #1
   171c4:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   171c8:	ldr	r2, [r8, #8]
   171cc:	cmp	r2, #0
   171d0:	beq	17184 <argp_help@@Base+0xd70>
   171d4:	ldrb	r0, [r8, #12]
   171d8:	tst	r0, #1
   171dc:	beq	17174 <argp_help@@Base+0xd60>
   171e0:	movw	r1, #60401	; 0xebf1
   171e4:	mov	r0, sl
   171e8:	movt	r1, #1
   171ec:	b	17180 <argp_help@@Base+0xd6c>
   171f0:	ldr	r1, [sl, #24]
   171f4:	ldr	r2, [sl, #28]
   171f8:	ldr	r0, [sl, #16]
   171fc:	ldr	r4, [r9, #16]
   17200:	sub	r1, r2, r1
   17204:	cmp	r1, r0
   17208:	bls	17214 <argp_help@@Base+0xe00>
   1720c:	mov	r0, sl
   17210:	bl	1bedc <argp_parse@@Base+0x24c0>
   17214:	ldr	r0, [fp, #-104]	; 0xffffff98
   17218:	str	r4, [sl, #12]
   1721c:	ldr	r6, [r0, #4]
   17220:	cmp	r6, #0
   17224:	beq	172c8 <argp_help@@Base+0xeb4>
   17228:	add	r4, r8, #12
   1722c:	b	17258 <argp_help@@Base+0xe44>
   17230:	mov	r1, r5
   17234:	mov	r2, r7
   17238:	bl	11a58 <memcpy@plt>
   1723c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17240:	ldr	r0, [r1]
   17244:	add	r0, r0, r7
   17248:	str	r0, [r1]
   1724c:	add	r4, r4, #24
   17250:	subs	r6, r6, #1
   17254:	beq	172c8 <argp_help@@Base+0xeb4>
   17258:	ldr	r0, [r4, #-12]
   1725c:	cmp	r0, #0
   17260:	beq	1724c <argp_help@@Base+0xe38>
   17264:	ldrb	r0, [r4]
   17268:	tst	r0, #2
   1726c:	bne	1724c <argp_help@@Base+0xe38>
   17270:	ldr	r0, [r9, #16]
   17274:	sub	r1, fp, #88	; 0x58
   17278:	bl	19564 <argp_failure@@Base+0x1a10>
   1727c:	ldr	r5, [r4, #-12]
   17280:	mov	r0, r5
   17284:	bl	11c20 <strlen@plt>
   17288:	cmp	r0, #0
   1728c:	beq	1724c <argp_help@@Base+0xe38>
   17290:	mov	r7, r0
   17294:	ldr	r0, [sl, #28]
   17298:	ldr	r1, [sl, #32]
   1729c:	add	r2, r0, r7
   172a0:	cmp	r2, r1
   172a4:	bls	17230 <argp_help@@Base+0xe1c>
   172a8:	mov	r0, sl
   172ac:	mov	r1, r7
   172b0:	bl	1c40c <argp_parse@@Base+0x29f0>
   172b4:	cmp	r0, #0
   172b8:	beq	1724c <argp_help@@Base+0xe38>
   172bc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   172c0:	ldr	r0, [r0]
   172c4:	b	17230 <argp_help@@Base+0xe1c>
   172c8:	ldr	r1, [sl, #24]
   172cc:	ldr	r2, [sl, #28]
   172d0:	ldr	r0, [sl, #16]
   172d4:	sub	r1, r2, r1
   172d8:	cmp	r1, r0
   172dc:	bls	172e8 <argp_help@@Base+0xed4>
   172e0:	mov	r0, sl
   172e4:	bl	1bedc <argp_parse@@Base+0x24c0>
   172e8:	mov	r0, #0
   172ec:	ldr	r5, [fp, #-104]	; 0xffffff98
   172f0:	str	r0, [sl, #4]
   172f4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   172f8:	cmp	r0, #0
   172fc:	beq	17354 <argp_help@@Base+0xf40>
   17300:	ldrb	r0, [r8, #12]
   17304:	tst	r0, #8
   17308:	bne	17334 <argp_help@@Base+0xf20>
   1730c:	ldr	r4, [r8, #4]
   17310:	sub	r0, r4, #1
   17314:	cmp	r0, #254	; 0xfe
   17318:	bhi	17334 <argp_help@@Base+0xf20>
   1731c:	bl	11bfc <__ctype_b_loc@plt>
   17320:	ldr	r0, [r0]
   17324:	add	r0, r0, r4, lsl #1
   17328:	ldrb	r0, [r0, #1]
   1732c:	tst	r0, #64	; 0x40
   17330:	bne	17674 <argp_help@@Base+0x1260>
   17334:	ldr	r0, [r8]
   17338:	cmp	r0, #0
   1733c:	bne	17674 <argp_help@@Base+0x1260>
   17340:	ldr	r1, [r5, #20]
   17344:	ldr	r0, [r8, #16]
   17348:	sub	r2, fp, #88	; 0x58
   1734c:	bl	19770 <argp_failure@@Base+0x1c1c>
   17350:	b	17670 <argp_help@@Base+0x125c>
   17354:	ldr	r6, [r5, #20]
   17358:	ldr	r9, [r8, #16]
   1735c:	cmp	r6, #0
   17360:	mov	r7, r9
   17364:	beq	173a0 <argp_help@@Base+0xf8c>
   17368:	ldr	r0, [r6, #20]
   1736c:	mov	r7, r9
   17370:	cmp	r0, #0
   17374:	beq	173a0 <argp_help@@Base+0xf8c>
   17378:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1737c:	ldr	r7, [r8, #4]
   17380:	mov	r0, r6
   17384:	bl	1a684 <argp_parse@@Base+0xc68>
   17388:	ldr	r3, [r6, #20]
   1738c:	mov	r2, r0
   17390:	mov	r0, r7
   17394:	mov	r1, r9
   17398:	blx	r3
   1739c:	mov	r7, r0
   173a0:	cmp	r7, #0
   173a4:	beq	17600 <argp_help@@Base+0x11ec>
   173a8:	ldrb	r0, [r7]
   173ac:	cmp	r0, #0
   173b0:	beq	175f0 <argp_help@@Base+0x11dc>
   173b4:	ldr	r1, [sl, #24]
   173b8:	ldr	r2, [sl, #28]
   173bc:	ldr	r0, [sl, #16]
   173c0:	mov	r8, r5
   173c4:	sub	r1, r2, r1
   173c8:	cmp	r1, r0
   173cc:	bls	173e8 <argp_help@@Base+0xfd4>
   173d0:	mov	r0, sl
   173d4:	bl	1bedc <argp_parse@@Base+0x24c0>
   173d8:	ldr	r1, [sl, #24]
   173dc:	ldr	r2, [sl, #28]
   173e0:	ldr	r0, [sl, #16]
   173e4:	sub	r1, r2, r1
   173e8:	movw	r2, #1400	; 0x578
   173ec:	ldr	r5, [sl, #20]
   173f0:	cmp	r1, r0
   173f4:	movt	r2, #3
   173f8:	ldr	r4, [r2, #20]
   173fc:	mov	r6, r4
   17400:	bls	17428 <argp_help@@Base+0x1014>
   17404:	mov	r0, sl
   17408:	bl	1bedc <argp_parse@@Base+0x24c0>
   1740c:	movw	r0, #1400	; 0x578
   17410:	ldr	r1, [sl, #24]
   17414:	ldr	r2, [sl, #28]
   17418:	movt	r0, #3
   1741c:	ldr	r6, [r0, #20]
   17420:	ldr	r0, [sl, #16]
   17424:	sub	r1, r2, r1
   17428:	bic	r5, r5, r5, asr #31
   1742c:	str	r4, [sl, #4]
   17430:	cmp	r1, r0
   17434:	mov	r4, r6
   17438:	bls	17450 <argp_help@@Base+0x103c>
   1743c:	mov	r0, sl
   17440:	bl	1bedc <argp_parse@@Base+0x24c0>
   17444:	movw	r0, #1400	; 0x578
   17448:	movt	r0, #3
   1744c:	ldr	r4, [r0, #20]
   17450:	add	r0, r4, #3
   17454:	str	r6, [sl, #12]
   17458:	cmp	r5, r0
   1745c:	bls	174a8 <argp_help@@Base+0x1094>
   17460:	ldr	r0, [sl, #28]
   17464:	ldr	r1, [sl, #32]
   17468:	mov	r5, r8
   1746c:	cmp	r0, r1
   17470:	bcc	17490 <argp_help@@Base+0x107c>
   17474:	mov	r0, sl
   17478:	mov	r1, #1
   1747c:	bl	1c40c <argp_parse@@Base+0x29f0>
   17480:	cmp	r0, #0
   17484:	beq	17590 <argp_help@@Base+0x117c>
   17488:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1748c:	ldr	r0, [r0]
   17490:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17494:	add	r1, r0, #1
   17498:	str	r1, [r2]
   1749c:	mov	r1, #10
   174a0:	strb	r1, [r0]
   174a4:	b	17590 <argp_help@@Base+0x117c>
   174a8:	cmp	r5, r4
   174ac:	bcs	1753c <argp_help@@Base+0x1128>
   174b0:	ldr	r1, [sl, #24]
   174b4:	ldr	r2, [sl, #28]
   174b8:	ldr	r0, [sl, #16]
   174bc:	sub	r1, r2, r1
   174c0:	cmp	r1, r0
   174c4:	bls	174d0 <argp_help@@Base+0x10bc>
   174c8:	mov	r0, sl
   174cc:	bl	1bedc <argp_parse@@Base+0x24c0>
   174d0:	ldr	r0, [sl, #20]
   174d4:	mov	r5, r8
   174d8:	cmp	r0, #0
   174dc:	subgt	r4, r4, r0
   174e0:	cmp	r4, #1
   174e4:	bge	17508 <argp_help@@Base+0x10f4>
   174e8:	b	17590 <argp_help@@Base+0x117c>
   174ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   174f0:	add	r1, r0, #1
   174f4:	str	r1, [r2]
   174f8:	mov	r1, #32
   174fc:	strb	r1, [r0]
   17500:	cmp	r4, #0
   17504:	ble	17590 <argp_help@@Base+0x117c>
   17508:	ldr	r0, [sl, #28]
   1750c:	ldr	r1, [sl, #32]
   17510:	sub	r4, r4, #1
   17514:	cmp	r0, r1
   17518:	bcc	174ec <argp_help@@Base+0x10d8>
   1751c:	mov	r0, sl
   17520:	mov	r1, #1
   17524:	bl	1c40c <argp_parse@@Base+0x29f0>
   17528:	cmp	r0, #0
   1752c:	beq	17500 <argp_help@@Base+0x10ec>
   17530:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17534:	ldr	r0, [r0]
   17538:	b	174ec <argp_help@@Base+0x10d8>
   1753c:	ldr	r0, [sl, #28]
   17540:	ldr	r1, [sl, #32]
   17544:	mov	r5, r8
   17548:	add	r2, r0, #3
   1754c:	cmp	r2, r1
   17550:	bls	17570 <argp_help@@Base+0x115c>
   17554:	mov	r0, sl
   17558:	mov	r1, #3
   1755c:	bl	1c40c <argp_parse@@Base+0x29f0>
   17560:	cmp	r0, #0
   17564:	beq	17590 <argp_help@@Base+0x117c>
   17568:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1756c:	ldr	r0, [r0]
   17570:	mov	r1, #32
   17574:	strb	r1, [r0, #2]
   17578:	movw	r1, #8224	; 0x2020
   1757c:	strh	r1, [r0]
   17580:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17584:	ldr	r0, [r1]
   17588:	add	r0, r0, #3
   1758c:	str	r0, [r1]
   17590:	mov	r0, r7
   17594:	bl	11c20 <strlen@plt>
   17598:	cmp	r0, #0
   1759c:	beq	175f0 <argp_help@@Base+0x11dc>
   175a0:	mov	r8, r0
   175a4:	ldr	r0, [sl, #28]
   175a8:	ldr	r1, [sl, #32]
   175ac:	add	r2, r0, r8
   175b0:	cmp	r2, r1
   175b4:	bls	175d4 <argp_help@@Base+0x11c0>
   175b8:	mov	r0, sl
   175bc:	mov	r1, r8
   175c0:	bl	1c40c <argp_parse@@Base+0x29f0>
   175c4:	cmp	r0, #0
   175c8:	beq	175f0 <argp_help@@Base+0x11dc>
   175cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   175d0:	ldr	r0, [r0]
   175d4:	mov	r1, r7
   175d8:	mov	r2, r8
   175dc:	bl	11a58 <memcpy@plt>
   175e0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   175e4:	ldr	r0, [r1]
   175e8:	add	r0, r0, r8
   175ec:	str	r0, [r1]
   175f0:	cmp	r7, r9
   175f4:	beq	17600 <argp_help@@Base+0x11ec>
   175f8:	mov	r0, r7
   175fc:	bl	1aed8 <argp_parse@@Base+0x14bc>
   17600:	ldr	r2, [sl, #24]
   17604:	ldr	r0, [sl, #28]
   17608:	ldr	r1, [sl, #16]
   1760c:	sub	r2, r0, r2
   17610:	cmp	r2, r1
   17614:	bls	17624 <argp_help@@Base+0x1210>
   17618:	mov	r0, sl
   1761c:	bl	1bedc <argp_parse@@Base+0x24c0>
   17620:	ldr	r0, [sl, #28]
   17624:	mov	r1, #0
   17628:	movw	r9, #1400	; 0x578
   1762c:	str	r1, [sl, #4]
   17630:	movt	r9, #3
   17634:	ldr	r1, [sl, #32]
   17638:	cmp	r0, r1
   1763c:	bcc	1765c <argp_help@@Base+0x1248>
   17640:	mov	r0, sl
   17644:	mov	r1, #1
   17648:	bl	1c40c <argp_parse@@Base+0x29f0>
   1764c:	cmp	r0, #0
   17650:	beq	17670 <argp_help@@Base+0x125c>
   17654:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17658:	ldr	r0, [r0]
   1765c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17660:	add	r1, r0, #1
   17664:	str	r1, [r2]
   17668:	mov	r1, #10
   1766c:	strb	r1, [r0]
   17670:	str	r5, [fp, #-48]	; 0xffffffd0
   17674:	ldr	r1, [sl, #24]
   17678:	ldr	r2, [sl, #28]
   1767c:	ldr	r0, [sl, #16]
   17680:	sub	r1, r2, r1
   17684:	cmp	r1, r0
   17688:	bls	176a4 <argp_help@@Base+0x1290>
   1768c:	mov	r0, sl
   17690:	bl	1bedc <argp_parse@@Base+0x24c0>
   17694:	ldr	r1, [sl, #24]
   17698:	ldr	r2, [sl, #28]
   1769c:	ldr	r0, [sl, #16]
   176a0:	sub	r1, r2, r1
   176a4:	ldr	r2, [fp, #-124]	; 0xffffff84
   176a8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   176ac:	cmp	r1, r0
   176b0:	str	r2, [sl, #4]
   176b4:	bls	16eb0 <argp_help@@Base+0xa9c>
   176b8:	mov	r0, sl
   176bc:	bl	1bedc <argp_parse@@Base+0x24c0>
   176c0:	b	16eb0 <argp_help@@Base+0xa9c>
   176c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   176c8:	cmp	r0, #0
   176cc:	ldrne	r0, [r9, #4]
   176d0:	cmpne	r0, #0
   176d4:	bne	177e4 <argp_help@@Base+0x13d0>
   176d8:	mov	r5, #1
   176dc:	tst	r4, #32
   176e0:	beq	1770c <argp_help@@Base+0x12f8>
   176e4:	sub	sp, sp, #8
   176e8:	mov	r0, #0
   176ec:	mov	r2, #1
   176f0:	mov	r3, r5
   176f4:	stm	sp, {r0, sl}
   176f8:	ldr	r0, [fp, #-108]	; 0xffffff94
   176fc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17700:	bl	18b44 <argp_failure@@Base+0xff0>
   17704:	add	sp, sp, #8
   17708:	orr	r5, r0, r5
   1770c:	tst	r4, #64	; 0x40
   17710:	beq	1777c <argp_help@@Base+0x1368>
   17714:	movw	r4, #4236	; 0x108c
   17718:	movt	r4, #3
   1771c:	ldr	r0, [r4]
   17720:	cmp	r0, #0
   17724:	beq	1777c <argp_help@@Base+0x1368>
   17728:	cmp	r5, #0
   1772c:	beq	17768 <argp_help@@Base+0x1354>
   17730:	ldr	r0, [sl, #28]
   17734:	ldr	r1, [sl, #32]
   17738:	cmp	r0, r1
   1773c:	bcc	17758 <argp_help@@Base+0x1344>
   17740:	mov	r0, sl
   17744:	mov	r1, #1
   17748:	bl	1c40c <argp_parse@@Base+0x29f0>
   1774c:	cmp	r0, #0
   17750:	beq	17768 <argp_help@@Base+0x1354>
   17754:	ldr	r0, [sl, #28]
   17758:	add	r1, r0, #1
   1775c:	str	r1, [sl, #28]
   17760:	mov	r1, #10
   17764:	strb	r1, [r0]
   17768:	ldr	r2, [r4]
   1776c:	movw	r1, #59747	; 0xe963
   17770:	mov	r0, sl
   17774:	movt	r1, #1
   17778:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   1777c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17780:	bl	11b18 <funlockfile@plt>
   17784:	ldr	r5, [fp, #-112]	; 0xffffff90
   17788:	cmp	r5, #0
   1778c:	beq	177d4 <argp_help@@Base+0x13c0>
   17790:	ldr	r0, [r5, #12]
   17794:	cmp	r0, #0
   17798:	beq	177b0 <argp_help@@Base+0x139c>
   1779c:	ldr	r4, [r0, #24]
   177a0:	bl	1aed8 <argp_parse@@Base+0x14bc>
   177a4:	cmp	r4, #0
   177a8:	mov	r0, r4
   177ac:	bne	1779c <argp_help@@Base+0x1388>
   177b0:	ldr	r0, [r5, #4]
   177b4:	cmp	r0, #0
   177b8:	beq	177cc <argp_help@@Base+0x13b8>
   177bc:	ldr	r0, [r5]
   177c0:	bl	1aed8 <argp_parse@@Base+0x14bc>
   177c4:	ldr	r0, [r5, #8]
   177c8:	bl	1aed8 <argp_parse@@Base+0x14bc>
   177cc:	mov	r0, r5
   177d0:	bl	1aed8 <argp_parse@@Base+0x14bc>
   177d4:	mov	r0, sl
   177d8:	bl	1be98 <argp_parse@@Base+0x247c>
   177dc:	sub	sp, fp, #28
   177e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177e4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   177e8:	movw	r5, #60271	; 0xeb6f
   177ec:	movt	r5, #1
   177f0:	cmp	r0, #0
   177f4:	beq	17844 <argp_help@@Base+0x1430>
   177f8:	ldr	r6, [r0]
   177fc:	cmp	r6, #0
   17800:	beq	17844 <argp_help@@Base+0x1430>
   17804:	ldr	r0, [r6, #20]
   17808:	cmp	r0, #0
   1780c:	beq	17844 <argp_help@@Base+0x1430>
   17810:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17814:	mov	r0, r6
   17818:	bl	1a684 <argp_parse@@Base+0xc68>
   1781c:	ldr	r3, [r6, #20]
   17820:	movw	r1, #60271	; 0xeb6f
   17824:	mov	r2, r0
   17828:	movw	r0, #5
   1782c:	movt	r0, #512	; 0x200
   17830:	movt	r1, #1
   17834:	blx	r3
   17838:	mov	r5, r0
   1783c:	cmp	r0, #0
   17840:	beq	176d8 <argp_help@@Base+0x12c4>
   17844:	ldrb	r0, [r5]
   17848:	cmp	r0, #0
   1784c:	beq	17930 <argp_help@@Base+0x151c>
   17850:	ldr	r0, [sl, #28]
   17854:	ldr	r1, [sl, #32]
   17858:	cmp	r0, r1
   1785c:	bcc	1787c <argp_help@@Base+0x1468>
   17860:	mov	r0, sl
   17864:	mov	r1, #1
   17868:	bl	1c40c <argp_parse@@Base+0x29f0>
   1786c:	cmp	r0, #0
   17870:	beq	17890 <argp_help@@Base+0x147c>
   17874:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17878:	ldr	r0, [r0]
   1787c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17880:	add	r1, r0, #1
   17884:	str	r1, [r2]
   17888:	mov	r1, #10
   1788c:	strb	r1, [r0]
   17890:	mov	r0, r5
   17894:	bl	11c20 <strlen@plt>
   17898:	cmp	r0, #0
   1789c:	beq	178f0 <argp_help@@Base+0x14dc>
   178a0:	mov	r6, r0
   178a4:	ldr	r0, [sl, #28]
   178a8:	ldr	r1, [sl, #32]
   178ac:	add	r2, r0, r6
   178b0:	cmp	r2, r1
   178b4:	bls	178d4 <argp_help@@Base+0x14c0>
   178b8:	mov	r0, sl
   178bc:	mov	r1, r6
   178c0:	bl	1c40c <argp_parse@@Base+0x29f0>
   178c4:	cmp	r0, #0
   178c8:	beq	178f0 <argp_help@@Base+0x14dc>
   178cc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   178d0:	ldr	r0, [r0]
   178d4:	mov	r1, r5
   178d8:	mov	r2, r6
   178dc:	bl	11a58 <memcpy@plt>
   178e0:	ldr	r1, [fp, #-96]	; 0xffffffa0
   178e4:	ldr	r0, [r1]
   178e8:	add	r0, r0, r6
   178ec:	str	r0, [r1]
   178f0:	ldr	r0, [sl, #28]
   178f4:	ldr	r1, [sl, #32]
   178f8:	cmp	r0, r1
   178fc:	bcc	1791c <argp_help@@Base+0x1508>
   17900:	mov	r0, sl
   17904:	mov	r1, #1
   17908:	bl	1c40c <argp_parse@@Base+0x29f0>
   1790c:	cmp	r0, #0
   17910:	beq	17930 <argp_help@@Base+0x151c>
   17914:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17918:	ldr	r0, [r0]
   1791c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17920:	add	r1, r0, #1
   17924:	str	r1, [r2]
   17928:	mov	r1, #10
   1792c:	strb	r1, [r0]
   17930:	movw	r0, #60271	; 0xeb6f
   17934:	movt	r0, #1
   17938:	cmp	r5, r0
   1793c:	beq	176d8 <argp_help@@Base+0x12c4>
   17940:	mov	r0, r5
   17944:	bl	1aed8 <argp_parse@@Base+0x14bc>
   17948:	b	176d8 <argp_help@@Base+0x12c4>
   1794c:	add	r0, r0, #112	; 0x70
   17950:	b	16970 <argp_help@@Base+0x55c>

00017954 <argp_state_help@@Base>:
   17954:	push	{r4, r5, fp, lr}
   17958:	add	fp, sp, #8
   1795c:	sub	sp, sp, #8
   17960:	mov	r4, r2
   17964:	mov	r2, r1
   17968:	cmp	r0, #0
   1796c:	beq	179b8 <argp_state_help@@Base+0x64>
   17970:	cmp	r2, #0
   17974:	beq	179f0 <argp_state_help@@Base+0x9c>
   17978:	ldr	r1, [r0, #16]
   1797c:	mov	r5, r0
   17980:	ands	r0, r1, #2
   17984:	bne	179f0 <argp_state_help@@Base+0x9c>
   17988:	ldr	r3, [r5, #40]	; 0x28
   1798c:	ldr	r0, [r5]
   17990:	and	r1, r1, #64	; 0x40
   17994:	orr	r4, r4, r1, lsl #1
   17998:	mov	r1, r5
   1799c:	str	r3, [sp]
   179a0:	mov	r3, r4
   179a4:	bl	16440 <argp_help@@Base+0x2c>
   179a8:	ldrb	r0, [r5, #16]
   179ac:	tst	r0, #32
   179b0:	beq	179e0 <argp_state_help@@Base+0x8c>
   179b4:	b	179f0 <argp_state_help@@Base+0x9c>
   179b8:	cmp	r2, #0
   179bc:	beq	179f0 <argp_state_help@@Base+0x9c>
   179c0:	movw	r0, #1464	; 0x5b8
   179c4:	mov	r1, #0
   179c8:	mov	r3, r4
   179cc:	movt	r0, #3
   179d0:	ldr	r0, [r0]
   179d4:	str	r0, [sp]
   179d8:	mov	r0, #0
   179dc:	bl	16440 <argp_help@@Base+0x2c>
   179e0:	tst	r4, #256	; 0x100
   179e4:	bne	179f8 <argp_state_help@@Base+0xa4>
   179e8:	tst	r4, #512	; 0x200
   179ec:	bne	17a08 <argp_state_help@@Base+0xb4>
   179f0:	sub	sp, fp, #8
   179f4:	pop	{r4, r5, fp, pc}
   179f8:	movw	r0, #1440	; 0x5a0
   179fc:	movt	r0, #3
   17a00:	ldr	r0, [r0]
   17a04:	bl	11c14 <exit@plt>
   17a08:	mov	r0, #0
   17a0c:	bl	11c14 <exit@plt>

00017a10 <argp_error@@Base>:
   17a10:	sub	sp, sp, #8
   17a14:	push	{r4, r5, r6, sl, fp, lr}
   17a18:	add	fp, sp, #16
   17a1c:	sub	sp, sp, #8
   17a20:	mov	r6, r1
   17a24:	mov	r4, r0
   17a28:	cmp	r0, #0
   17a2c:	str	r2, [fp, #8]
   17a30:	str	r3, [fp, #12]
   17a34:	beq	17a4c <argp_error@@Base+0x3c>
   17a38:	ldrb	r0, [r4, #16]
   17a3c:	tst	r0, #2
   17a40:	bne	17b14 <argp_error@@Base+0x104>
   17a44:	add	r0, r4, #44	; 0x2c
   17a48:	b	17a54 <argp_error@@Base+0x44>
   17a4c:	movw	r0, #1472	; 0x5c0
   17a50:	movt	r0, #3
   17a54:	ldr	r5, [r0]
   17a58:	cmp	r5, #0
   17a5c:	beq	17b14 <argp_error@@Base+0x104>
   17a60:	mov	r0, r5
   17a64:	bl	11d58 <flockfile@plt>
   17a68:	add	r0, fp, #8
   17a6c:	cmp	r4, #0
   17a70:	mov	r1, r5
   17a74:	str	r0, [sp, #4]
   17a78:	movw	r0, #1464	; 0x5b8
   17a7c:	movt	r0, #3
   17a80:	addne	r0, r4, #40	; 0x28
   17a84:	ldr	r0, [r0]
   17a88:	bl	11980 <fputs_unlocked@plt>
   17a8c:	ldr	r0, [r5, #20]
   17a90:	ldr	r1, [r5, #24]
   17a94:	cmp	r0, r1
   17a98:	bcs	17b24 <argp_error@@Base+0x114>
   17a9c:	add	r1, r0, #1
   17aa0:	str	r1, [r5, #20]
   17aa4:	mov	r1, #58	; 0x3a
   17aa8:	strb	r1, [r0]
   17aac:	ldr	r0, [r5, #20]
   17ab0:	ldr	r1, [r5, #24]
   17ab4:	cmp	r0, r1
   17ab8:	bcs	17b34 <argp_error@@Base+0x124>
   17abc:	add	r1, r0, #1
   17ac0:	str	r1, [r5, #20]
   17ac4:	mov	r1, #32
   17ac8:	strb	r1, [r0]
   17acc:	ldr	r2, [sp, #4]
   17ad0:	mov	r0, r5
   17ad4:	mov	r1, r6
   17ad8:	bl	11d34 <vfprintf@plt>
   17adc:	ldr	r0, [r5, #20]
   17ae0:	ldr	r1, [r5, #24]
   17ae4:	cmp	r0, r1
   17ae8:	bcs	17b44 <argp_error@@Base+0x134>
   17aec:	add	r1, r0, #1
   17af0:	str	r1, [r5, #20]
   17af4:	mov	r1, #10
   17af8:	strb	r1, [r0]
   17afc:	mov	r0, r4
   17b00:	mov	r1, r5
   17b04:	mov	r2, #260	; 0x104
   17b08:	bl	17954 <argp_state_help@@Base>
   17b0c:	mov	r0, r5
   17b10:	bl	11b18 <funlockfile@plt>
   17b14:	sub	sp, fp, #16
   17b18:	pop	{r4, r5, r6, sl, fp, lr}
   17b1c:	add	sp, sp, #8
   17b20:	bx	lr
   17b24:	mov	r0, r5
   17b28:	mov	r1, #58	; 0x3a
   17b2c:	bl	11cf8 <__overflow@plt>
   17b30:	b	17aac <argp_error@@Base+0x9c>
   17b34:	mov	r0, r5
   17b38:	mov	r1, #32
   17b3c:	bl	11cf8 <__overflow@plt>
   17b40:	b	17acc <argp_error@@Base+0xbc>
   17b44:	mov	r0, r5
   17b48:	mov	r1, #10
   17b4c:	bl	11cf8 <__overflow@plt>
   17b50:	b	17afc <argp_error@@Base+0xec>

00017b54 <argp_failure@@Base>:
   17b54:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17b58:	add	fp, sp, #24
   17b5c:	sub	sp, sp, #200	; 0xc8
   17b60:	mov	r4, r3
   17b64:	mov	r7, r2
   17b68:	mov	r8, r1
   17b6c:	mov	r5, r0
   17b70:	cmp	r0, #0
   17b74:	beq	17b8c <argp_failure@@Base+0x38>
   17b78:	ldrb	r0, [r5, #16]
   17b7c:	tst	r0, #2
   17b80:	bne	17cf0 <argp_failure@@Base+0x19c>
   17b84:	add	r0, r5, #44	; 0x2c
   17b88:	b	17b94 <argp_failure@@Base+0x40>
   17b8c:	movw	r0, #1472	; 0x5c0
   17b90:	movt	r0, #3
   17b94:	ldr	r6, [r0]
   17b98:	cmp	r6, #0
   17b9c:	beq	17cf0 <argp_failure@@Base+0x19c>
   17ba0:	mov	r0, r6
   17ba4:	bl	11d58 <flockfile@plt>
   17ba8:	movw	r0, #1464	; 0x5b8
   17bac:	cmp	r5, #0
   17bb0:	mov	r1, r6
   17bb4:	movt	r0, #3
   17bb8:	addne	r0, r5, #40	; 0x28
   17bbc:	ldr	r0, [r0]
   17bc0:	bl	11980 <fputs_unlocked@plt>
   17bc4:	cmp	r4, #0
   17bc8:	beq	17c24 <argp_failure@@Base+0xd0>
   17bcc:	add	r0, fp, #8
   17bd0:	str	r0, [sp]
   17bd4:	ldr	r0, [r6, #20]
   17bd8:	ldr	r1, [r6, #24]
   17bdc:	cmp	r0, r1
   17be0:	bcs	17d08 <argp_failure@@Base+0x1b4>
   17be4:	add	r1, r0, #1
   17be8:	str	r1, [r6, #20]
   17bec:	mov	r1, #58	; 0x3a
   17bf0:	strb	r1, [r0]
   17bf4:	ldr	r0, [r6, #20]
   17bf8:	ldr	r1, [r6, #24]
   17bfc:	cmp	r0, r1
   17c00:	bcs	17d18 <argp_failure@@Base+0x1c4>
   17c04:	add	r1, r0, #1
   17c08:	str	r1, [r6, #20]
   17c0c:	mov	r1, #32
   17c10:	strb	r1, [r0]
   17c14:	ldr	r2, [sp]
   17c18:	mov	r0, r6
   17c1c:	mov	r1, r4
   17c20:	bl	11d34 <vfprintf@plt>
   17c24:	cmp	r7, #0
   17c28:	beq	17ca8 <argp_failure@@Base+0x154>
   17c2c:	ldr	r0, [r6, #20]
   17c30:	ldr	r1, [r6, #24]
   17c34:	cmp	r0, r1
   17c38:	bcs	17d28 <argp_failure@@Base+0x1d4>
   17c3c:	add	r1, r0, #1
   17c40:	str	r1, [r6, #20]
   17c44:	mov	r1, #58	; 0x3a
   17c48:	strb	r1, [r0]
   17c4c:	ldr	r0, [r6, #20]
   17c50:	ldr	r1, [r6, #24]
   17c54:	cmp	r0, r1
   17c58:	bcs	17d38 <argp_failure@@Base+0x1e4>
   17c5c:	add	r1, r0, #1
   17c60:	str	r1, [r6, #20]
   17c64:	mov	r1, #32
   17c68:	strb	r1, [r0]
   17c6c:	mov	r1, sp
   17c70:	mov	r0, r7
   17c74:	mov	r2, #200	; 0xc8
   17c78:	bl	11c68 <strerror_r@plt>
   17c7c:	cmp	r0, #0
   17c80:	bne	17ca0 <argp_failure@@Base+0x14c>
   17c84:	mov	r0, r7
   17c88:	bl	11bcc <strerror@plt>
   17c8c:	mov	r1, r0
   17c90:	movw	r0, #59646	; 0xe8fe
   17c94:	cmp	r1, #0
   17c98:	movt	r0, #1
   17c9c:	movne	r0, r1
   17ca0:	mov	r1, r6
   17ca4:	bl	11980 <fputs_unlocked@plt>
   17ca8:	ldr	r0, [r6, #20]
   17cac:	ldr	r1, [r6, #24]
   17cb0:	cmp	r0, r1
   17cb4:	bcs	17cf8 <argp_failure@@Base+0x1a4>
   17cb8:	add	r1, r0, #1
   17cbc:	str	r1, [r6, #20]
   17cc0:	mov	r1, #10
   17cc4:	strb	r1, [r0]
   17cc8:	mov	r0, r6
   17ccc:	bl	11b18 <funlockfile@plt>
   17cd0:	cmp	r8, #0
   17cd4:	beq	17cf0 <argp_failure@@Base+0x19c>
   17cd8:	cmp	r5, #0
   17cdc:	ldrbne	r0, [r5, #16]
   17ce0:	tstne	r0, #32
   17ce4:	bne	17cf0 <argp_failure@@Base+0x19c>
   17ce8:	mov	r0, r8
   17cec:	bl	11c14 <exit@plt>
   17cf0:	sub	sp, fp, #24
   17cf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17cf8:	mov	r0, r6
   17cfc:	mov	r1, #10
   17d00:	bl	11cf8 <__overflow@plt>
   17d04:	b	17cc8 <argp_failure@@Base+0x174>
   17d08:	mov	r0, r6
   17d0c:	mov	r1, #58	; 0x3a
   17d10:	bl	11cf8 <__overflow@plt>
   17d14:	b	17bf4 <argp_failure@@Base+0xa0>
   17d18:	mov	r0, r6
   17d1c:	mov	r1, #32
   17d20:	bl	11cf8 <__overflow@plt>
   17d24:	b	17c14 <argp_failure@@Base+0xc0>
   17d28:	mov	r0, r6
   17d2c:	mov	r1, #58	; 0x3a
   17d30:	bl	11cf8 <__overflow@plt>
   17d34:	b	17c4c <argp_failure@@Base+0xf8>
   17d38:	mov	r0, r6
   17d3c:	mov	r1, #32
   17d40:	bl	11cf8 <__overflow@plt>
   17d44:	b	17c6c <argp_failure@@Base+0x118>
   17d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d4c:	add	fp, sp, #28
   17d50:	sub	sp, sp, #44	; 0x2c
   17d54:	ldr	r4, [r0]
   17d58:	ldr	r7, [r0, #16]
   17d5c:	mov	r8, r0
   17d60:	mov	r0, #16
   17d64:	mov	sl, r1
   17d68:	bl	1bd8c <argp_parse@@Base+0x2370>
   17d6c:	cmp	r0, #0
   17d70:	beq	183a8 <argp_failure@@Base+0x854>
   17d74:	mov	r9, r0
   17d78:	mov	r0, #0
   17d7c:	cmp	r4, #0
   17d80:	str	r8, [sp, #32]
   17d84:	mov	r1, r9
   17d88:	str	r9, [fp, #-32]	; 0xffffffe0
   17d8c:	str	r0, [r1, #12]!
   17d90:	str	r1, [sp, #12]
   17d94:	str	r0, [r1, #-8]
   17d98:	beq	17ff0 <argp_failure@@Base+0x49c>
   17d9c:	ldrb	r0, [r4, #12]
   17da0:	str	r7, [sp, #8]
   17da4:	tst	r0, #4
   17da8:	bne	183c0 <argp_failure@@Base+0x86c>
   17dac:	add	r5, r4, #12
   17db0:	mov	r6, #0
   17db4:	mov	r9, #0
   17db8:	b	17dc0 <argp_failure@@Base+0x26c>
   17dbc:	add	r5, r5, #24
   17dc0:	ldr	r7, [r5, #-8]
   17dc4:	cmp	r7, #0
   17dc8:	bne	17df0 <argp_failure@@Base+0x29c>
   17dcc:	ldr	r0, [r5, #-12]
   17dd0:	cmp	r0, #0
   17dd4:	bne	17df0 <argp_failure@@Base+0x29c>
   17dd8:	ldr	r0, [r5, #4]
   17ddc:	cmp	r0, #0
   17de0:	bne	17df0 <argp_failure@@Base+0x29c>
   17de4:	ldr	r0, [r5, #8]
   17de8:	cmp	r0, #0
   17dec:	beq	17e38 <argp_failure@@Base+0x2e4>
   17df0:	ldr	r0, [r5]
   17df4:	tst	r0, #4
   17df8:	bne	17e08 <argp_failure@@Base+0x2b4>
   17dfc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e00:	add	r6, r6, #1
   17e04:	str	r6, [r1, #4]
   17e08:	sub	r1, r7, #1
   17e0c:	cmp	r1, #254	; 0xfe
   17e10:	bhi	17dbc <argp_failure@@Base+0x268>
   17e14:	ands	r0, r0, #8
   17e18:	bne	17dbc <argp_failure@@Base+0x268>
   17e1c:	bl	11bfc <__ctype_b_loc@plt>
   17e20:	ldr	r0, [r0]
   17e24:	add	r0, r0, r7, lsl #1
   17e28:	ldrb	r0, [r0, #1]
   17e2c:	tst	r0, #64	; 0x40
   17e30:	addne	r9, r9, #1
   17e34:	b	17dbc <argp_failure@@Base+0x268>
   17e38:	rsb	r0, r6, r6, lsl #3
   17e3c:	lsl	r0, r0, #2
   17e40:	bl	1bd8c <argp_parse@@Base+0x2370>
   17e44:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17e48:	mov	r5, r0
   17e4c:	str	r0, [r1]
   17e50:	add	r0, r9, #1
   17e54:	mov	r8, r1
   17e58:	bl	1bd8c <argp_parse@@Base+0x2370>
   17e5c:	cmp	r5, #0
   17e60:	str	r0, [r8, #8]
   17e64:	movne	r7, r0
   17e68:	cmpne	r0, #0
   17e6c:	bne	17e90 <argp_failure@@Base+0x33c>
   17e70:	movw	r0, #60051	; 0xea93
   17e74:	movw	r1, #59959	; 0xea37
   17e78:	movw	r3, #59971	; 0xea43
   17e7c:	movw	r2, #474	; 0x1da
   17e80:	movt	r0, #1
   17e84:	movt	r1, #1
   17e88:	movt	r3, #1
   17e8c:	bl	11e18 <__assert_fail@plt>
   17e90:	movw	r0, #37450	; 0x924a
   17e94:	movt	r0, #2340	; 0x924
   17e98:	cmp	r6, r0
   17e9c:	bcs	183d8 <argp_failure@@Base+0x884>
   17ea0:	mov	r9, #0
   17ea4:	mov	r0, #0
   17ea8:	b	17eb8 <argp_failure@@Base+0x364>
   17eac:	mov	r4, r0
   17eb0:	add	r5, r5, #28
   17eb4:	mov	r0, r8
   17eb8:	ldr	r1, [r4, #4]
   17ebc:	cmp	r1, #0
   17ec0:	bne	17ee8 <argp_failure@@Base+0x394>
   17ec4:	ldr	r2, [r4]
   17ec8:	cmp	r2, #0
   17ecc:	bne	17ee8 <argp_failure@@Base+0x394>
   17ed0:	ldr	r2, [r4, #16]
   17ed4:	cmp	r2, #0
   17ed8:	bne	17ee8 <argp_failure@@Base+0x394>
   17edc:	ldr	r2, [r4, #20]
   17ee0:	cmp	r2, #0
   17ee4:	beq	17fdc <argp_failure@@Base+0x488>
   17ee8:	stm	r5, {r4, r9}
   17eec:	str	r7, [r5, #8]
   17ef0:	ldr	r8, [r4, #20]
   17ef4:	cmp	r8, #0
   17ef8:	bne	17f14 <argp_failure@@Base+0x3c0>
   17efc:	ldr	r2, [r4]
   17f00:	cmp	r2, #0
   17f04:	bne	17f10 <argp_failure@@Base+0x3bc>
   17f08:	cmp	r1, #0
   17f0c:	addeq	r0, r0, #1
   17f10:	mov	r8, r0
   17f14:	ldr	r0, [sp, #32]
   17f18:	mov	r1, #0
   17f1c:	str	r8, [r5, #12]
   17f20:	str	sl, [r5, #16]
   17f24:	str	r0, [r5, #20]
   17f28:	add	r0, r1, #1
   17f2c:	str	r0, [r5, #4]
   17f30:	ldrb	r0, [r4, #12]
   17f34:	tst	r0, #8
   17f38:	bne	17f90 <argp_failure@@Base+0x43c>
   17f3c:	ldr	r6, [r4, #4]
   17f40:	sub	r0, r6, #1
   17f44:	cmp	r0, #254	; 0xfe
   17f48:	bhi	17f90 <argp_failure@@Base+0x43c>
   17f4c:	bl	11bfc <__ctype_b_loc@plt>
   17f50:	ldr	r0, [r0]
   17f54:	add	r0, r0, r6, lsl #1
   17f58:	ldrb	r0, [r0, #1]
   17f5c:	tst	r0, #64	; 0x40
   17f60:	beq	17f90 <argp_failure@@Base+0x43c>
   17f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f68:	ldr	r0, [r0, #8]
   17f6c:	cmp	r0, r7
   17f70:	bcs	17f8c <argp_failure@@Base+0x438>
   17f74:	ldrb	r1, [r0], #1
   17f78:	uxtb	r2, r6
   17f7c:	cmp	r1, r2
   17f80:	beq	17f90 <argp_failure@@Base+0x43c>
   17f84:	cmp	r7, r0
   17f88:	bne	17f74 <argp_failure@@Base+0x420>
   17f8c:	strb	r6, [r7], #1
   17f90:	ldr	r1, [r4, #28]
   17f94:	add	r0, r4, #24
   17f98:	cmp	r1, #0
   17f9c:	bne	17fc4 <argp_failure@@Base+0x470>
   17fa0:	ldr	r1, [r0]
   17fa4:	cmp	r1, #0
   17fa8:	bne	17fc4 <argp_failure@@Base+0x470>
   17fac:	ldr	r1, [r4, #40]	; 0x28
   17fb0:	cmp	r1, #0
   17fb4:	bne	17fc4 <argp_failure@@Base+0x470>
   17fb8:	ldr	r1, [r4, #44]	; 0x2c
   17fbc:	cmp	r1, #0
   17fc0:	beq	17eac <argp_failure@@Base+0x358>
   17fc4:	ldrb	r1, [r4, #36]	; 0x24
   17fc8:	tst	r1, #4
   17fcc:	beq	17eac <argp_failure@@Base+0x358>
   17fd0:	ldr	r1, [r5, #4]
   17fd4:	mov	r4, r0
   17fd8:	b	17f28 <argp_failure@@Base+0x3d4>
   17fdc:	mov	r0, #0
   17fe0:	ldr	r8, [sp, #32]
   17fe4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   17fe8:	strb	r0, [r7]
   17fec:	ldr	r7, [sp, #8]
   17ff0:	cmp	r7, #0
   17ff4:	beq	1837c <argp_failure@@Base+0x828>
   17ff8:	ldr	r0, [r7]
   17ffc:	cmp	r0, #0
   18000:	beq	1837c <argp_failure@@Base+0x828>
   18004:	str	sl, [sp]
   18008:	b	18040 <argp_failure@@Base+0x4ec>
   1800c:	ldr	r5, [sp, #20]
   18010:	mov	r9, r6
   18014:	ldr	r1, [r5]
   18018:	ldr	r2, [r5, #8]
   1801c:	str	r1, [r6]
   18020:	stmib	r6, {r0, r2}
   18024:	mov	r0, #0
   18028:	str	r0, [r5, #4]
   1802c:	mov	r0, r5
   18030:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18034:	ldr	r0, [r7, #16]!
   18038:	cmp	r0, #0
   1803c:	beq	1837c <argp_failure@@Base+0x828>
   18040:	ldr	r4, [r7, #12]
   18044:	cmp	r4, #0
   18048:	beq	18054 <argp_failure@@Base+0x500>
   1804c:	ldr	r5, [r7, #8]
   18050:	b	18064 <argp_failure@@Base+0x510>
   18054:	ldr	r5, [r7, #8]
   18058:	mov	r1, sl
   1805c:	cmp	r5, #0
   18060:	beq	180bc <argp_failure@@Base+0x568>
   18064:	ldr	r6, [r8, #16]
   18068:	mov	r0, #28
   1806c:	bl	1bd8c <argp_parse@@Base+0x2370>
   18070:	mov	r1, r0
   18074:	cmp	r0, #0
   18078:	beq	180bc <argp_failure@@Base+0x568>
   1807c:	sub	r0, r7, r6
   18080:	cmp	sl, #0
   18084:	str	r5, [r1]
   18088:	asr	r0, r0, #4
   1808c:	stmib	r1, {r0, r4, sl}
   18090:	str	r8, [r1, #16]
   18094:	beq	180a4 <argp_failure@@Base+0x550>
   18098:	ldr	r0, [sl, #20]
   1809c:	add	r0, r0, #1
   180a0:	b	180a8 <argp_failure@@Base+0x554>
   180a4:	mov	r0, #0
   180a8:	ldr	r3, [sp, #12]
   180ac:	str	r0, [r1, #20]
   180b0:	ldr	r2, [r3]
   180b4:	str	r1, [r3]
   180b8:	str	r2, [r1, #24]
   180bc:	ldr	r0, [r7]
   180c0:	bl	17d48 <argp_failure@@Base+0x1f4>
   180c4:	ldr	r1, [sp, #12]
   180c8:	mov	r5, r0
   180cc:	ldr	r2, [r1]
   180d0:	mov	r0, r1
   180d4:	add	r1, r2, #24
   180d8:	cmp	r2, #0
   180dc:	bne	180cc <argp_failure@@Base+0x578>
   180e0:	ldr	r1, [r5, #12]
   180e4:	str	r1, [r0]
   180e8:	mov	r0, #0
   180ec:	str	r0, [r5, #12]
   180f0:	ldr	r0, [r5, #4]
   180f4:	cmp	r0, #0
   180f8:	beq	1802c <argp_failure@@Base+0x4d8>
   180fc:	mov	r6, r9
   18100:	ldr	r9, [r9, #4]
   18104:	str	r5, [sp, #20]
   18108:	cmp	r9, #0
   1810c:	beq	1800c <argp_failure@@Base+0x4b8>
   18110:	add	r4, r9, r0
   18114:	rsb	r0, r4, r4, lsl #3
   18118:	lsl	r0, r0, #2
   1811c:	bl	1bd8c <argp_parse@@Base+0x2370>
   18120:	ldr	r5, [r6, #8]
   18124:	str	r0, [sp, #16]
   18128:	mov	r8, r6
   1812c:	mov	r0, r5
   18130:	bl	11c20 <strlen@plt>
   18134:	mov	r6, r0
   18138:	ldr	r0, [sp, #20]
   1813c:	ldr	r0, [r0, #8]
   18140:	bl	11c20 <strlen@plt>
   18144:	add	r0, r6, r0
   18148:	str	r6, [sp, #24]
   1814c:	add	r0, r0, #1
   18150:	bl	1bd8c <argp_parse@@Base+0x2370>
   18154:	ldr	r1, [sp, #16]
   18158:	cmp	r1, #0
   1815c:	cmpne	r0, #0
   18160:	beq	18388 <argp_failure@@Base+0x834>
   18164:	str	r0, [sp, #28]
   18168:	movw	r0, #37450	; 0x924a
   1816c:	str	r4, [sp, #4]
   18170:	movt	r0, #2340	; 0x924
   18174:	cmp	r4, r0
   18178:	bcs	183f0 <argp_failure@@Base+0x89c>
   1817c:	ldr	r1, [r8]
   18180:	ldr	r8, [sp, #16]
   18184:	rsb	r4, r9, r9, lsl #3
   18188:	lsl	r2, r4, #2
   1818c:	mov	r0, r8
   18190:	bl	11a58 <memcpy@plt>
   18194:	ldr	r2, [sp, #20]
   18198:	add	r0, r8, r4, lsl #2
   1819c:	ldm	r2, {r1, r2}
   181a0:	rsb	r2, r2, r2, lsl #3
   181a4:	lsl	r2, r2, #2
   181a8:	bl	11a58 <memcpy@plt>
   181ac:	ldr	r6, [sp, #28]
   181b0:	ldr	r2, [sp, #24]
   181b4:	mov	r1, r5
   181b8:	mov	r0, r6
   181bc:	bl	11a58 <memcpy@plt>
   181c0:	tst	r9, #1
   181c4:	mov	r0, r9
   181c8:	mov	r4, r8
   181cc:	beq	181ec <argp_failure@@Base+0x698>
   181d0:	ldr	r1, [sp, #16]
   181d4:	ldr	r0, [r1, #8]
   181d8:	add	r4, r1, #28
   181dc:	sub	r0, r0, r5
   181e0:	add	r0, r6, r0
   181e4:	str	r0, [r1, #8]
   181e8:	sub	r0, r9, #1
   181ec:	cmp	r9, #1
   181f0:	beq	18220 <argp_failure@@Base+0x6cc>
   181f4:	ldr	r1, [r4, #8]
   181f8:	ldr	r2, [r4, #36]	; 0x24
   181fc:	subs	r0, r0, #2
   18200:	sub	r1, r1, r5
   18204:	add	r1, r6, r1
   18208:	str	r1, [r4, #8]
   1820c:	sub	r1, r2, r5
   18210:	add	r1, r6, r1
   18214:	str	r1, [r4, #36]	; 0x24
   18218:	add	r4, r4, #56	; 0x38
   1821c:	bne	181f4 <argp_failure@@Base+0x6a0>
   18220:	ldr	r0, [sp, #24]
   18224:	str	r7, [sp, #8]
   18228:	add	r0, r6, r0
   1822c:	str	r0, [sp, #36]	; 0x24
   18230:	ldr	r0, [sp, #20]
   18234:	ldr	r5, [r0, #4]
   18238:	cmp	r5, #0
   1823c:	beq	182f4 <argp_failure@@Base+0x7a0>
   18240:	ldr	r6, [r0, #8]
   18244:	b	18254 <argp_failure@@Base+0x700>
   18248:	subs	r5, r5, #1
   1824c:	add	r4, r4, #28
   18250:	beq	182f4 <argp_failure@@Base+0x7a0>
   18254:	ldr	r0, [sp, #36]	; 0x24
   18258:	str	r0, [r4, #8]
   1825c:	ldr	sl, [r4, #4]
   18260:	cmp	sl, #0
   18264:	beq	18248 <argp_failure@@Base+0x6f4>
   18268:	ldr	r9, [r4]
   1826c:	b	1828c <argp_failure@@Base+0x738>
   18270:	ldr	r0, [sp, #36]	; 0x24
   18274:	strb	r8, [r0], #1
   18278:	str	r0, [sp, #36]	; 0x24
   1827c:	add	r6, r6, #1
   18280:	subs	sl, sl, #1
   18284:	add	r9, r9, #24
   18288:	beq	18248 <argp_failure@@Base+0x6f4>
   1828c:	ldrb	r0, [r9, #12]
   18290:	tst	r0, #8
   18294:	bne	18280 <argp_failure@@Base+0x72c>
   18298:	ldr	r7, [r9, #4]
   1829c:	sub	r0, r7, #1
   182a0:	cmp	r0, #254	; 0xfe
   182a4:	bhi	18280 <argp_failure@@Base+0x72c>
   182a8:	ldrb	r8, [r6]
   182ac:	bl	11bfc <__ctype_b_loc@plt>
   182b0:	cmp	r7, r8
   182b4:	bne	18280 <argp_failure@@Base+0x72c>
   182b8:	ldr	r0, [r0]
   182bc:	add	r0, r0, r7, lsl #1
   182c0:	ldrh	r0, [r0]
   182c4:	ands	r0, r0, #16384	; 0x4000
   182c8:	beq	18280 <argp_failure@@Base+0x72c>
   182cc:	ldr	r0, [sp, #24]
   182d0:	ldr	r1, [sp, #28]
   182d4:	cmp	r0, #1
   182d8:	blt	18270 <argp_failure@@Base+0x71c>
   182dc:	ldrb	r2, [r1], #1
   182e0:	cmp	r2, r8
   182e4:	beq	1827c <argp_failure@@Base+0x728>
   182e8:	subs	r0, r0, #1
   182ec:	bne	182dc <argp_failure@@Base+0x788>
   182f0:	b	18270 <argp_failure@@Base+0x71c>
   182f4:	ldr	r1, [sp, #36]	; 0x24
   182f8:	ldr	r9, [fp, #-32]	; 0xffffffe0
   182fc:	mov	r0, #0
   18300:	strb	r0, [r1]
   18304:	ldr	r0, [r9]
   18308:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1830c:	ldr	r0, [r9, #8]
   18310:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18314:	ldr	r0, [sp, #16]
   18318:	ldr	r5, [sp, #20]
   1831c:	str	r0, [r9]
   18320:	ldr	r0, [sp, #4]
   18324:	str	r0, [r9, #4]
   18328:	ldr	r0, [sp, #28]
   1832c:	str	r0, [r9, #8]
   18330:	ldr	r0, [r5, #12]
   18334:	cmp	r0, #0
   18338:	beq	18350 <argp_failure@@Base+0x7fc>
   1833c:	ldr	r4, [r0, #24]
   18340:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18344:	cmp	r4, #0
   18348:	mov	r0, r4
   1834c:	bne	1833c <argp_failure@@Base+0x7e8>
   18350:	ldr	r0, [r5, #4]
   18354:	ldr	sl, [sp]
   18358:	ldr	r8, [sp, #32]
   1835c:	ldr	r7, [sp, #8]
   18360:	cmp	r0, #0
   18364:	beq	1802c <argp_failure@@Base+0x4d8>
   18368:	ldr	r0, [r5]
   1836c:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18370:	ldr	r0, [r5, #8]
   18374:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18378:	b	1802c <argp_failure@@Base+0x4d8>
   1837c:	mov	r0, r9
   18380:	sub	sp, fp, #28
   18384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18388:	movw	r0, #60143	; 0xeaef
   1838c:	movw	r1, #59959	; 0xea37
   18390:	movw	r3, #60168	; 0xeb08
   18394:	movw	r2, #970	; 0x3ca
   18398:	movt	r0, #1
   1839c:	movt	r1, #1
   183a0:	movt	r3, #1
   183a4:	bl	11e18 <__assert_fail@plt>
   183a8:	movw	r0, #59955	; 0xea33
   183ac:	movw	r1, #59959	; 0xea37
   183b0:	movw	r3, #59971	; 0xea43
   183b4:	movw	r2, #450	; 0x1c2
   183b8:	movt	r0, #1
   183bc:	b	17e84 <argp_failure@@Base+0x330>
   183c0:	movw	r0, #60035	; 0xea83
   183c4:	movw	r1, #59959	; 0xea37
   183c8:	movw	r3, #59971	; 0xea43
   183cc:	mov	r2, #460	; 0x1cc
   183d0:	movt	r0, #1
   183d4:	b	17e84 <argp_failure@@Base+0x330>
   183d8:	movw	r0, #60086	; 0xeab6
   183dc:	movw	r1, #59959	; 0xea37
   183e0:	movw	r3, #59971	; 0xea43
   183e4:	mov	r2, #476	; 0x1dc
   183e8:	movt	r0, #1
   183ec:	b	17e84 <argp_failure@@Base+0x330>
   183f0:	movw	r0, #60091	; 0xeabb
   183f4:	movw	r1, #59959	; 0xea37
   183f8:	movw	r3, #60168	; 0xeb08
   183fc:	mov	r2, #972	; 0x3cc
   18400:	movt	r0, #1
   18404:	b	1839c <argp_failure@@Base+0x848>
   18408:	push	{r4, r5, fp, lr}
   1840c:	add	fp, sp, #8
   18410:	mov	r1, r0
   18414:	ldr	r0, [r0, #8]
   18418:	ldr	r5, [r1, #16]
   1841c:	cmp	r0, #0
   18420:	beq	18444 <argp_failure@@Base+0x8f0>
   18424:	mov	r1, #10
   18428:	bl	11c38 <strchr@plt>
   1842c:	cmp	r0, #0
   18430:	mov	r4, r0
   18434:	movwne	r4, #1
   18438:	cmp	r5, #0
   1843c:	bne	18450 <argp_failure@@Base+0x8fc>
   18440:	b	18474 <argp_failure@@Base+0x920>
   18444:	mov	r4, #0
   18448:	cmp	r5, #0
   1844c:	beq	18474 <argp_failure@@Base+0x920>
   18450:	ldr	r0, [r5]
   18454:	cmp	r0, #0
   18458:	beq	18474 <argp_failure@@Base+0x920>
   1845c:	add	r5, r5, #16
   18460:	bl	18408 <argp_failure@@Base+0x8b4>
   18464:	add	r4, r0, r4
   18468:	ldr	r0, [r5], #16
   1846c:	cmp	r0, #0
   18470:	bne	18460 <argp_failure@@Base+0x90c>
   18474:	mov	r0, r4
   18478:	pop	{r4, r5, fp, pc}
   1847c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18480:	add	fp, sp, #28
   18484:	sub	sp, sp, #28
   18488:	ldr	r4, [r0, #4]
   1848c:	str	r1, [fp, #-40]	; 0xffffffd8
   18490:	cmp	r4, #0
   18494:	beq	18844 <argp_failure@@Base+0xcf0>
   18498:	mov	r5, r0
   1849c:	ldr	r0, [r0, #8]
   184a0:	bl	11c20 <strlen@plt>
   184a4:	add	r0, r0, #8
   184a8:	bic	r0, r0, #7
   184ac:	sub	r0, sp, r0
   184b0:	mov	sp, r0
   184b4:	ldr	r7, [r5]
   184b8:	str	r0, [fp, #-52]	; 0xffffffcc
   184bc:	str	r0, [fp, #-48]	; 0xffffffd0
   184c0:	str	r5, [fp, #-44]	; 0xffffffd4
   184c4:	b	184dc <argp_failure@@Base+0x988>
   184c8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   184cc:	ldr	r6, [fp, #-44]	; 0xffffffd4
   184d0:	add	r7, r7, #28
   184d4:	subs	r4, r4, #1
   184d8:	beq	18594 <argp_failure@@Base+0xa40>
   184dc:	ldr	r6, [r7, #4]
   184e0:	str	r4, [fp, #-36]	; 0xffffffdc
   184e4:	cmp	r6, #0
   184e8:	beq	184c8 <argp_failure@@Base+0x974>
   184ec:	ldr	r4, [r7]
   184f0:	ldr	r5, [r7, #8]
   184f4:	mov	sl, r4
   184f8:	b	1850c <argp_failure@@Base+0x9b8>
   184fc:	add	r5, r5, #1
   18500:	subs	r6, r6, #1
   18504:	add	sl, sl, #24
   18508:	beq	184c8 <argp_failure@@Base+0x974>
   1850c:	ldr	r8, [sl, #12]
   18510:	tst	r8, #8
   18514:	bne	18500 <argp_failure@@Base+0x9ac>
   18518:	ldr	r9, [sl, #4]
   1851c:	sub	r0, r9, #1
   18520:	cmp	r0, #254	; 0xfe
   18524:	bhi	18500 <argp_failure@@Base+0x9ac>
   18528:	bl	11bfc <__ctype_b_loc@plt>
   1852c:	ldr	r0, [r0]
   18530:	add	r0, r0, r9, lsl #1
   18534:	ldrb	r0, [r0, #1]
   18538:	tst	r0, #64	; 0x40
   1853c:	beq	18500 <argp_failure@@Base+0x9ac>
   18540:	ldrb	r0, [r5]
   18544:	cmp	r9, r0
   18548:	bne	18500 <argp_failure@@Base+0x9ac>
   1854c:	tst	r8, #4
   18550:	moveq	r4, sl
   18554:	tst	r8, #2
   18558:	bne	184fc <argp_failure@@Base+0x9a8>
   1855c:	ldr	r0, [sl, #8]
   18560:	cmp	r0, #0
   18564:	bne	184fc <argp_failure@@Base+0x9a8>
   18568:	ldr	r0, [r4, #8]
   1856c:	cmp	r0, #0
   18570:	bne	184fc <argp_failure@@Base+0x9a8>
   18574:	ldr	r0, [r4, #12]
   18578:	orr	r0, r0, r8
   1857c:	tst	r0, #16
   18580:	bne	184fc <argp_failure@@Base+0x9a8>
   18584:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18588:	strb	r9, [r0], #1
   1858c:	str	r0, [fp, #-48]	; 0xffffffd0
   18590:	b	184fc <argp_failure@@Base+0x9a8>
   18594:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18598:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1859c:	cmp	r1, r2
   185a0:	bls	185bc <argp_failure@@Base+0xa68>
   185a4:	mov	r0, #0
   185a8:	strb	r0, [r1]
   185ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   185b0:	movw	r1, #60212	; 0xeb34
   185b4:	movt	r1, #1
   185b8:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   185bc:	ldr	r5, [r6, #4]
   185c0:	cmp	r5, #0
   185c4:	beq	18844 <argp_failure@@Base+0xcf0>
   185c8:	ldr	r8, [r6]
   185cc:	b	185dc <argp_failure@@Base+0xa88>
   185d0:	subs	r5, r5, #1
   185d4:	add	r8, r8, #28
   185d8:	beq	18780 <argp_failure@@Base+0xc2c>
   185dc:	ldr	r9, [r8, #4]
   185e0:	cmp	r9, #0
   185e4:	beq	185d0 <argp_failure@@Base+0xa7c>
   185e8:	ldr	sl, [r8]
   185ec:	ldr	r4, [r8, #8]
   185f0:	str	sl, [fp, #-36]	; 0xffffffdc
   185f4:	b	1861c <argp_failure@@Base+0xac8>
   185f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   185fc:	movw	r1, #60219	; 0xeb3b
   18600:	mov	r2, r7
   18604:	movt	r1, #1
   18608:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   1860c:	add	r4, r4, #1
   18610:	subs	r9, r9, #1
   18614:	add	sl, sl, #24
   18618:	beq	185d0 <argp_failure@@Base+0xa7c>
   1861c:	ldr	r6, [sl, #12]
   18620:	tst	r6, #8
   18624:	bne	18610 <argp_failure@@Base+0xabc>
   18628:	ldr	r7, [sl, #4]
   1862c:	sub	r0, r7, #1
   18630:	cmp	r0, #254	; 0xfe
   18634:	bhi	18610 <argp_failure@@Base+0xabc>
   18638:	bl	11bfc <__ctype_b_loc@plt>
   1863c:	ldr	r0, [r0]
   18640:	add	r0, r0, r7, lsl #1
   18644:	ldrb	r0, [r0, #1]
   18648:	tst	r0, #64	; 0x40
   1864c:	beq	18610 <argp_failure@@Base+0xabc>
   18650:	ldrb	r0, [r4]
   18654:	cmp	r7, r0
   18658:	bne	18610 <argp_failure@@Base+0xabc>
   1865c:	tst	r6, #4
   18660:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18664:	moveq	r0, sl
   18668:	tst	r6, #2
   1866c:	str	r0, [fp, #-36]	; 0xffffffdc
   18670:	bne	1860c <argp_failure@@Base+0xab8>
   18674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18678:	ldr	r3, [sl, #8]
   1867c:	ldr	r0, [r0, #12]
   18680:	cmp	r3, #0
   18684:	orr	r0, r0, r6
   18688:	bne	18694 <argp_failure@@Base+0xb40>
   1868c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18690:	ldr	r3, [r1, #8]
   18694:	tst	r0, #16
   18698:	bne	1860c <argp_failure@@Base+0xab8>
   1869c:	cmp	r3, #0
   186a0:	beq	1860c <argp_failure@@Base+0xab8>
   186a4:	tst	r0, #1
   186a8:	bne	185f8 <argp_failure@@Base+0xaa4>
   186ac:	mov	r0, r3
   186b0:	str	r3, [fp, #-48]	; 0xffffffd0
   186b4:	bl	11c20 <strlen@plt>
   186b8:	ldr	r7, [fp, #-40]	; 0xffffffd8
   186bc:	add	r6, r0, #6
   186c0:	ldr	r2, [r7, #24]
   186c4:	ldr	r0, [r7, #28]
   186c8:	ldr	r1, [r7, #16]
   186cc:	sub	r2, r0, r2
   186d0:	cmp	r2, r1
   186d4:	bls	186e4 <argp_failure@@Base+0xb90>
   186d8:	mov	r0, r7
   186dc:	bl	1bedc <argp_parse@@Base+0x24c0>
   186e0:	ldr	r0, [r7, #28]
   186e4:	ldr	r3, [r7, #20]
   186e8:	ldr	r2, [r7, #8]
   186ec:	ldr	r1, [r7, #32]
   186f0:	cmp	r3, #0
   186f4:	addgt	r6, r6, r3
   186f8:	cmp	r6, r2
   186fc:	bcs	18734 <argp_failure@@Base+0xbe0>
   18700:	ldr	r6, [fp, #-48]	; 0xffffffd0
   18704:	cmp	r0, r1
   18708:	bcc	18724 <argp_failure@@Base+0xbd0>
   1870c:	mov	r0, r7
   18710:	mov	r1, #1
   18714:	bl	1c40c <argp_parse@@Base+0x29f0>
   18718:	cmp	r0, #0
   1871c:	beq	18768 <argp_failure@@Base+0xc14>
   18720:	ldr	r0, [r7, #28]
   18724:	add	r1, r0, #1
   18728:	str	r1, [r7, #28]
   1872c:	mov	r1, #32
   18730:	b	18764 <argp_failure@@Base+0xc10>
   18734:	ldr	r6, [fp, #-48]	; 0xffffffd0
   18738:	cmp	r0, r1
   1873c:	bcc	18758 <argp_failure@@Base+0xc04>
   18740:	mov	r0, r7
   18744:	mov	r1, #1
   18748:	bl	1c40c <argp_parse@@Base+0x29f0>
   1874c:	cmp	r0, #0
   18750:	beq	18768 <argp_failure@@Base+0xc14>
   18754:	ldr	r0, [r7, #28]
   18758:	add	r1, r0, #1
   1875c:	str	r1, [r7, #28]
   18760:	mov	r1, #10
   18764:	strb	r1, [r0]
   18768:	ldr	r2, [sl, #4]
   1876c:	movw	r1, #60230	; 0xeb46
   18770:	mov	r0, r7
   18774:	mov	r3, r6
   18778:	movt	r1, #1
   1877c:	b	18608 <argp_failure@@Base+0xab4>
   18780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18784:	ldr	r4, [r0, #4]
   18788:	cmp	r4, #0
   1878c:	beq	18844 <argp_failure@@Base+0xcf0>
   18790:	ldr	r6, [r0]
   18794:	movw	sl, #60263	; 0xeb67
   18798:	movw	r9, #60239	; 0xeb4f
   1879c:	movt	sl, #1
   187a0:	movt	r9, #1
   187a4:	b	187b4 <argp_failure@@Base+0xc60>
   187a8:	subs	r4, r4, #1
   187ac:	add	r6, r6, #28
   187b0:	beq	18844 <argp_failure@@Base+0xcf0>
   187b4:	ldr	r7, [r6, #4]
   187b8:	cmp	r7, #0
   187bc:	beq	187a8 <argp_failure@@Base+0xc54>
   187c0:	ldr	r8, [r6]
   187c4:	mov	r5, r8
   187c8:	b	187e4 <argp_failure@@Base+0xc90>
   187cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   187d0:	mov	r1, sl
   187d4:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   187d8:	subs	r7, r7, #1
   187dc:	add	r5, r5, #24
   187e0:	beq	187a8 <argp_failure@@Base+0xc54>
   187e4:	ldr	r2, [r5]
   187e8:	cmp	r2, #0
   187ec:	beq	187d8 <argp_failure@@Base+0xc84>
   187f0:	ldr	r0, [r5, #12]
   187f4:	tst	r0, #4
   187f8:	moveq	r8, r5
   187fc:	tst	r0, #2
   18800:	bne	187d8 <argp_failure@@Base+0xc84>
   18804:	ldr	r3, [r5, #8]
   18808:	ldr	r1, [r8, #12]
   1880c:	cmp	r3, #0
   18810:	orr	r0, r1, r0
   18814:	ldreq	r3, [r8, #8]
   18818:	tst	r0, #16
   1881c:	bne	187d8 <argp_failure@@Base+0xc84>
   18820:	cmp	r3, #0
   18824:	beq	187cc <argp_failure@@Base+0xc78>
   18828:	tst	r0, #1
   1882c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18830:	movne	r1, r9
   18834:	movweq	r1, #60252	; 0xeb5c
   18838:	movteq	r1, #1
   1883c:	bl	1c4f8 <argp_parse@@Base+0x2adc>
   18840:	b	187d8 <argp_failure@@Base+0xc84>
   18844:	sub	sp, fp, #28
   18848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1884c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18850:	add	fp, sp, #28
   18854:	sub	sp, sp, #28
   18858:	ldr	r5, [r0, #8]
   1885c:	mov	r7, r0
   18860:	ldr	sl, [r0, #16]
   18864:	ldr	r0, [r2]
   18868:	mov	r4, r3
   1886c:	mov	r9, r2
   18870:	mov	r8, r1
   18874:	cmp	r7, #0
   18878:	mov	r6, r5
   1887c:	str	r0, [sp, #20]
   18880:	beq	188bc <argp_failure@@Base+0xd68>
   18884:	ldr	r0, [r7, #20]
   18888:	mov	r6, r5
   1888c:	cmp	r0, #0
   18890:	beq	188bc <argp_failure@@Base+0xd68>
   18894:	mov	r0, r7
   18898:	mov	r1, r8
   1889c:	bl	1a684 <argp_parse@@Base+0xc68>
   188a0:	ldr	r3, [r7, #20]
   188a4:	mov	r2, r0
   188a8:	movw	r0, #6
   188ac:	mov	r1, r5
   188b0:	movt	r0, #512	; 0x200
   188b4:	blx	r3
   188b8:	mov	r6, r0
   188bc:	cmp	r6, #0
   188c0:	beq	18924 <argp_failure@@Base+0xdd0>
   188c4:	mov	r0, r6
   188c8:	mov	r1, #10
   188cc:	bl	11a10 <strchrnul@plt>
   188d0:	mov	r7, r0
   188d4:	ldrb	r0, [r0]
   188d8:	str	r5, [sp, #12]
   188dc:	str	r6, [sp, #16]
   188e0:	stmib	sp, {r8, sl}
   188e4:	cmp	r0, #0
   188e8:	beq	1893c <argp_failure@@Base+0xde8>
   188ec:	ldr	r0, [sp, #20]
   188f0:	ldrb	r6, [r0]
   188f4:	cmp	r6, #0
   188f8:	beq	18948 <argp_failure@@Base+0xdf4>
   188fc:	mov	r8, #0
   18900:	add	sl, r7, #1
   18904:	mov	r1, #10
   18908:	mov	r0, sl
   1890c:	bl	11a10 <strchrnul@plt>
   18910:	add	r8, r8, #1
   18914:	mov	r7, r0
   18918:	cmp	r8, r6
   1891c:	bcc	18900 <argp_failure@@Base+0xdac>
   18920:	b	1894c <argp_failure@@Base+0xdf8>
   18924:	mov	r0, #0
   18928:	mov	r7, #0
   1892c:	str	r0, [sp, #24]
   18930:	cmp	sl, #0
   18934:	bne	18aac <argp_failure@@Base+0xf58>
   18938:	b	18af0 <argp_failure@@Base+0xf9c>
   1893c:	mov	r0, #0
   18940:	mov	sl, r6
   18944:	b	1895c <argp_failure@@Base+0xe08>
   18948:	ldr	sl, [sp, #16]
   1894c:	ldr	r0, [r9]
   18950:	add	r0, r0, #1
   18954:	str	r0, [r9]
   18958:	mov	r0, #1
   1895c:	str	r0, [sp, #24]
   18960:	ldr	r8, [fp, #8]
   18964:	sub	r2, r7, sl
   18968:	add	r6, r2, #1
   1896c:	ldr	r3, [r8, #24]
   18970:	ldr	r0, [r8, #28]
   18974:	ldr	r1, [r8, #16]
   18978:	sub	r3, r0, r3
   1897c:	cmp	r3, r1
   18980:	bls	18998 <argp_failure@@Base+0xe44>
   18984:	mov	r0, r8
   18988:	mov	r5, r2
   1898c:	bl	1bedc <argp_parse@@Base+0x24c0>
   18990:	ldr	r0, [r8, #28]
   18994:	mov	r2, r5
   18998:	ldr	r3, [r8, #20]
   1899c:	ldr	r5, [r8, #8]
   189a0:	ldr	r1, [r8, #32]
   189a4:	cmp	r3, #0
   189a8:	addgt	r6, r6, r3
   189ac:	cmp	r6, r5
   189b0:	bcs	189f8 <argp_failure@@Base+0xea4>
   189b4:	ldr	r8, [sp, #4]
   189b8:	cmp	r0, r1
   189bc:	bcc	189e4 <argp_failure@@Base+0xe90>
   189c0:	ldr	r6, [fp, #8]
   189c4:	mov	r1, #1
   189c8:	mov	r5, r2
   189cc:	mov	r0, r6
   189d0:	bl	1c40c <argp_parse@@Base+0x29f0>
   189d4:	mov	r2, r5
   189d8:	cmp	r0, #0
   189dc:	beq	18a3c <argp_failure@@Base+0xee8>
   189e0:	ldr	r0, [r6, #28]
   189e4:	ldr	r6, [fp, #8]
   189e8:	add	r1, r0, #1
   189ec:	str	r1, [r6, #28]
   189f0:	mov	r1, #32
   189f4:	b	18a38 <argp_failure@@Base+0xee4>
   189f8:	ldr	r8, [sp, #4]
   189fc:	cmp	r0, r1
   18a00:	bcc	18a28 <argp_failure@@Base+0xed4>
   18a04:	ldr	r6, [fp, #8]
   18a08:	mov	r1, #1
   18a0c:	mov	r5, r2
   18a10:	mov	r0, r6
   18a14:	bl	1c40c <argp_parse@@Base+0x29f0>
   18a18:	mov	r2, r5
   18a1c:	cmp	r0, #0
   18a20:	beq	18a3c <argp_failure@@Base+0xee8>
   18a24:	ldr	r0, [r6, #28]
   18a28:	ldr	r6, [fp, #8]
   18a2c:	add	r1, r0, #1
   18a30:	str	r1, [r6, #28]
   18a34:	mov	r1, #10
   18a38:	strb	r1, [r0]
   18a3c:	ldr	r0, [r6, #28]
   18a40:	ldr	r1, [r6, #32]
   18a44:	add	r3, r0, r2
   18a48:	cmp	r3, r1
   18a4c:	bls	18a74 <argp_failure@@Base+0xf20>
   18a50:	mov	r0, r6
   18a54:	mov	r1, r2
   18a58:	mov	r5, r2
   18a5c:	bl	1c40c <argp_parse@@Base+0x29f0>
   18a60:	cmp	r0, #0
   18a64:	beq	18a8c <argp_failure@@Base+0xf38>
   18a68:	ldr	r6, [fp, #8]
   18a6c:	mov	r2, r5
   18a70:	ldr	r0, [r6, #28]
   18a74:	mov	r1, sl
   18a78:	mov	r5, r2
   18a7c:	bl	11a58 <memcpy@plt>
   18a80:	ldr	r0, [r6, #28]
   18a84:	add	r0, r0, r5
   18a88:	str	r0, [r6, #28]
   18a8c:	ldr	r0, [sp, #16]
   18a90:	ldr	r1, [sp, #12]
   18a94:	cmp	r0, r1
   18a98:	beq	18aa0 <argp_failure@@Base+0xf4c>
   18a9c:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18aa0:	ldr	sl, [sp, #8]
   18aa4:	cmp	sl, #0
   18aa8:	beq	18af0 <argp_failure@@Base+0xf9c>
   18aac:	ldr	r0, [sl]
   18ab0:	cmp	r0, #0
   18ab4:	beq	18af0 <argp_failure@@Base+0xf9c>
   18ab8:	add	r6, sl, #16
   18abc:	ldr	r5, [fp, #8]
   18ac0:	ldr	sl, [sp, #24]
   18ac4:	mov	r1, r8
   18ac8:	mov	r2, r9
   18acc:	mov	r3, r4
   18ad0:	str	r5, [sp]
   18ad4:	bl	1884c <argp_failure@@Base+0xcf8>
   18ad8:	clz	r0, r0
   18adc:	lsr	r4, r0, #5
   18ae0:	ldr	r0, [r6], #16
   18ae4:	cmp	r0, #0
   18ae8:	bne	18ac4 <argp_failure@@Base+0xf70>
   18aec:	b	18af4 <argp_failure@@Base+0xfa0>
   18af0:	ldr	sl, [sp, #24]
   18af4:	cmp	sl, #0
   18af8:	cmpne	r4, #0
   18afc:	bne	18b10 <argp_failure@@Base+0xfbc>
   18b00:	clz	r0, r4
   18b04:	lsr	r0, r0, #5
   18b08:	sub	sp, fp, #28
   18b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b10:	ldr	r2, [sp, #20]
   18b14:	ldrb	r1, [r7]
   18b18:	ldrb	r0, [r2]
   18b1c:	cmp	r1, #0
   18b20:	beq	18b34 <argp_failure@@Base+0xfe0>
   18b24:	add	r0, r0, #1
   18b28:	mov	r4, #0
   18b2c:	strb	r0, [r2]
   18b30:	b	18b00 <argp_failure@@Base+0xfac>
   18b34:	cmp	r0, #0
   18b38:	movne	r0, #0
   18b3c:	strbne	r0, [r2]
   18b40:	b	18b00 <argp_failure@@Base+0xfac>
   18b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b48:	add	fp, sp, #28
   18b4c:	sub	sp, sp, #28
   18b50:	ldr	r5, [r0, #12]
   18b54:	mov	r4, r0
   18b58:	ldr	r0, [r0, #16]
   18b5c:	mov	sl, #0
   18b60:	str	r3, [sp, #24]
   18b64:	str	r1, [sp, #20]
   18b68:	str	r2, [sp, #16]
   18b6c:	cmp	r5, #0
   18b70:	str	r0, [sp, #8]
   18b74:	beq	18bb4 <argp_failure@@Base+0x1060>
   18b78:	mov	r0, r5
   18b7c:	mov	r1, #11
   18b80:	mov	r6, r2
   18b84:	bl	11c38 <strchr@plt>
   18b88:	cmp	r0, #0
   18b8c:	mov	r8, r0
   18b90:	mov	r9, r0
   18b94:	subne	r8, r8, r5
   18b98:	cmp	r6, #0
   18b9c:	movne	r8, #0
   18ba0:	cmp	r0, #0
   18ba4:	addne	r9, r9, #1
   18ba8:	cmp	r6, #0
   18bac:	moveq	r9, r5
   18bb0:	b	18bbc <argp_failure@@Base+0x1068>
   18bb4:	mov	r8, #0
   18bb8:	mov	r9, #0
   18bbc:	ldr	r0, [r4, #20]
   18bc0:	movw	r5, #1
   18bc4:	str	r4, [sp, #12]
   18bc8:	movt	r5, #512	; 0x200
   18bcc:	cmp	r0, #0
   18bd0:	beq	18ccc <argp_failure@@Base+0x1178>
   18bd4:	cmp	r8, #0
   18bd8:	beq	18bec <argp_failure@@Base+0x1098>
   18bdc:	mov	r0, r9
   18be0:	mov	r1, r8
   18be4:	bl	11a40 <strndup@plt>
   18be8:	mov	r9, r0
   18bec:	ldr	r1, [sp, #20]
   18bf0:	mov	r0, r4
   18bf4:	bl	1a684 <argp_parse@@Base+0xc68>
   18bf8:	mov	sl, r0
   18bfc:	ldr	r0, [sp, #16]
   18c00:	ldr	r3, [r4, #20]
   18c04:	mov	r1, r9
   18c08:	mov	r2, sl
   18c0c:	cmp	r0, #0
   18c10:	mov	r0, r5
   18c14:	addne	r0, r0, #1
   18c18:	blx	r3
   18c1c:	mov	r6, r0
   18c20:	cmp	r6, #0
   18c24:	beq	18cd8 <argp_failure@@Base+0x1184>
   18c28:	ldr	r0, [sp, #24]
   18c2c:	cmp	r0, #0
   18c30:	beq	18c70 <argp_failure@@Base+0x111c>
   18c34:	ldr	r0, [fp, #12]
   18c38:	ldr	r2, [r0, #28]
   18c3c:	ldr	r1, [r0, #32]
   18c40:	cmp	r2, r1
   18c44:	bcc	18c60 <argp_failure@@Base+0x110c>
   18c48:	mov	r1, #1
   18c4c:	bl	1c40c <argp_parse@@Base+0x29f0>
   18c50:	cmp	r0, #0
   18c54:	beq	18c70 <argp_failure@@Base+0x111c>
   18c58:	ldr	r0, [fp, #12]
   18c5c:	ldr	r2, [r0, #28]
   18c60:	add	r1, r2, #1
   18c64:	str	r1, [r0, #28]
   18c68:	mov	r1, #10
   18c6c:	strb	r1, [r2]
   18c70:	cmp	r8, #0
   18c74:	beq	18ce4 <argp_failure@@Base+0x1190>
   18c78:	cmp	r6, r9
   18c7c:	bne	18ce4 <argp_failure@@Base+0x1190>
   18c80:	ldr	r4, [fp, #12]
   18c84:	mov	r7, r5
   18c88:	ldr	r0, [r4, #28]
   18c8c:	ldr	r1, [r4, #32]
   18c90:	add	r2, r0, r8
   18c94:	cmp	r2, r1
   18c98:	bls	18cb4 <argp_failure@@Base+0x1160>
   18c9c:	mov	r0, r4
   18ca0:	mov	r1, r8
   18ca4:	bl	1c40c <argp_parse@@Base+0x29f0>
   18ca8:	cmp	r0, #0
   18cac:	beq	18d44 <argp_failure@@Base+0x11f0>
   18cb0:	ldr	r0, [r4, #28]
   18cb4:	mov	r1, r9
   18cb8:	mov	r2, r8
   18cbc:	bl	11a58 <memcpy@plt>
   18cc0:	ldr	r0, [r4, #28]
   18cc4:	add	r0, r0, r8
   18cc8:	b	18d40 <argp_failure@@Base+0x11ec>
   18ccc:	mov	r6, r9
   18cd0:	cmp	r6, #0
   18cd4:	bne	18c28 <argp_failure@@Base+0x10d4>
   18cd8:	mov	r4, sl
   18cdc:	mov	sl, #0
   18ce0:	b	18dcc <argp_failure@@Base+0x1278>
   18ce4:	mov	r0, r6
   18ce8:	mov	r7, r5
   18cec:	bl	11c20 <strlen@plt>
   18cf0:	ldr	r4, [fp, #12]
   18cf4:	cmp	r0, #0
   18cf8:	beq	18d44 <argp_failure@@Base+0x11f0>
   18cfc:	mov	r5, r0
   18d00:	ldr	r0, [r4, #28]
   18d04:	ldr	r1, [r4, #32]
   18d08:	add	r2, r0, r5
   18d0c:	cmp	r2, r1
   18d10:	bls	18d2c <argp_failure@@Base+0x11d8>
   18d14:	mov	r0, r4
   18d18:	mov	r1, r5
   18d1c:	bl	1c40c <argp_parse@@Base+0x29f0>
   18d20:	cmp	r0, #0
   18d24:	beq	18d44 <argp_failure@@Base+0x11f0>
   18d28:	ldr	r0, [r4, #28]
   18d2c:	mov	r1, r6
   18d30:	mov	r2, r5
   18d34:	bl	11a58 <memcpy@plt>
   18d38:	ldr	r0, [r4, #28]
   18d3c:	add	r0, r0, r5
   18d40:	str	r0, [r4, #28]
   18d44:	ldr	r1, [r4, #24]
   18d48:	ldr	r2, [r4, #28]
   18d4c:	ldr	r0, [r4, #16]
   18d50:	sub	r1, r2, r1
   18d54:	cmp	r1, r0
   18d58:	bls	18d64 <argp_failure@@Base+0x1210>
   18d5c:	mov	r0, r4
   18d60:	bl	1bedc <argp_parse@@Base+0x24c0>
   18d64:	ldr	r1, [r4, #20]
   18d68:	ldr	r0, [r4, #4]
   18d6c:	mov	r5, r7
   18d70:	bic	r1, r1, r1, asr #31
   18d74:	cmp	r1, r0
   18d78:	bls	18db4 <argp_failure@@Base+0x1260>
   18d7c:	ldr	r0, [r4, #28]
   18d80:	ldr	r1, [r4, #32]
   18d84:	cmp	r0, r1
   18d88:	bcc	18da4 <argp_failure@@Base+0x1250>
   18d8c:	mov	r0, r4
   18d90:	mov	r1, #1
   18d94:	bl	1c40c <argp_parse@@Base+0x29f0>
   18d98:	cmp	r0, #0
   18d9c:	beq	18db4 <argp_failure@@Base+0x1260>
   18da0:	ldr	r0, [r4, #28]
   18da4:	add	r1, r0, #1
   18da8:	str	r1, [r4, #28]
   18dac:	mov	r1, #10
   18db0:	strb	r1, [r0]
   18db4:	mov	r4, sl
   18db8:	mov	sl, #1
   18dbc:	cmp	r6, r9
   18dc0:	beq	18dcc <argp_failure@@Base+0x1278>
   18dc4:	mov	r0, r6
   18dc8:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18dcc:	cmp	r8, #0
   18dd0:	cmpne	r9, #0
   18dd4:	bne	18fb8 <argp_failure@@Base+0x1464>
   18dd8:	ldr	r7, [sp, #16]
   18ddc:	ldr	r6, [sp, #24]
   18de0:	ldr	r9, [sp, #20]
   18de4:	ldr	r8, [fp, #12]
   18de8:	cmp	r7, #0
   18dec:	beq	18f54 <argp_failure@@Base+0x1400>
   18df0:	ldr	r0, [sp, #12]
   18df4:	ldr	r3, [r0, #20]
   18df8:	cmp	r3, #0
   18dfc:	beq	18f44 <argp_failure@@Base+0x13f0>
   18e00:	add	r0, r5, #3
   18e04:	mov	r1, #0
   18e08:	mov	r2, r4
   18e0c:	blx	r3
   18e10:	cmp	r0, #0
   18e14:	beq	18f44 <argp_failure@@Base+0x13f0>
   18e18:	mov	r4, r0
   18e1c:	orrs	r0, sl, r6
   18e20:	beq	18e5c <argp_failure@@Base+0x1308>
   18e24:	ldr	r0, [r8, #28]
   18e28:	ldr	r1, [r8, #32]
   18e2c:	cmp	r0, r1
   18e30:	bcc	18e4c <argp_failure@@Base+0x12f8>
   18e34:	mov	r0, r8
   18e38:	mov	r1, #1
   18e3c:	bl	1c40c <argp_parse@@Base+0x29f0>
   18e40:	cmp	r0, #0
   18e44:	beq	18e5c <argp_failure@@Base+0x1308>
   18e48:	ldr	r0, [r8, #28]
   18e4c:	add	r1, r0, #1
   18e50:	str	r1, [r8, #28]
   18e54:	mov	r1, #10
   18e58:	strb	r1, [r0]
   18e5c:	mov	r0, r4
   18e60:	bl	11c20 <strlen@plt>
   18e64:	cmp	r0, #0
   18e68:	beq	18eb4 <argp_failure@@Base+0x1360>
   18e6c:	mov	r5, r0
   18e70:	ldr	r0, [r8, #28]
   18e74:	ldr	r1, [r8, #32]
   18e78:	add	r2, r0, r5
   18e7c:	cmp	r2, r1
   18e80:	bls	18e9c <argp_failure@@Base+0x1348>
   18e84:	mov	r0, r8
   18e88:	mov	r1, r5
   18e8c:	bl	1c40c <argp_parse@@Base+0x29f0>
   18e90:	cmp	r0, #0
   18e94:	beq	18eb4 <argp_failure@@Base+0x1360>
   18e98:	ldr	r0, [r8, #28]
   18e9c:	mov	r1, r4
   18ea0:	mov	r2, r5
   18ea4:	bl	11a58 <memcpy@plt>
   18ea8:	ldr	r0, [r8, #28]
   18eac:	add	r0, r0, r5
   18eb0:	str	r0, [r8, #28]
   18eb4:	mov	r0, r4
   18eb8:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18ebc:	ldr	r1, [r8, #24]
   18ec0:	ldr	r2, [r8, #28]
   18ec4:	ldr	r0, [r8, #16]
   18ec8:	sub	r1, r2, r1
   18ecc:	cmp	r1, r0
   18ed0:	bls	18edc <argp_failure@@Base+0x1388>
   18ed4:	mov	r0, r8
   18ed8:	bl	1bedc <argp_parse@@Base+0x24c0>
   18edc:	ldr	r1, [r8, #20]
   18ee0:	ldr	r0, [r8, #4]
   18ee4:	ldr	r4, [sp, #8]
   18ee8:	mov	sl, #1
   18eec:	bic	r1, r1, r1, asr #31
   18ef0:	cmp	r1, r0
   18ef4:	bls	18f58 <argp_failure@@Base+0x1404>
   18ef8:	ldr	r0, [r8, #28]
   18efc:	ldr	r1, [r8, #32]
   18f00:	cmp	r0, r1
   18f04:	bcc	18f24 <argp_failure@@Base+0x13d0>
   18f08:	mov	r0, r8
   18f0c:	mov	r1, #1
   18f10:	mov	sl, #1
   18f14:	bl	1c40c <argp_parse@@Base+0x29f0>
   18f18:	cmp	r0, #0
   18f1c:	beq	18f58 <argp_failure@@Base+0x1404>
   18f20:	ldr	r0, [r8, #28]
   18f24:	add	r1, r0, #1
   18f28:	mov	sl, #1
   18f2c:	str	r1, [r8, #28]
   18f30:	mov	r1, #10
   18f34:	strb	r1, [r0]
   18f38:	cmp	r4, #0
   18f3c:	bne	18f60 <argp_failure@@Base+0x140c>
   18f40:	b	18fac <argp_failure@@Base+0x1458>
   18f44:	ldr	r4, [sp, #8]
   18f48:	cmp	r4, #0
   18f4c:	bne	18f60 <argp_failure@@Base+0x140c>
   18f50:	b	18fac <argp_failure@@Base+0x1458>
   18f54:	ldr	r4, [sp, #8]
   18f58:	cmp	r4, #0
   18f5c:	beq	18fac <argp_failure@@Base+0x1458>
   18f60:	ldr	r0, [r4]
   18f64:	cmp	r0, #0
   18f68:	beq	18fac <argp_failure@@Base+0x1458>
   18f6c:	mov	r1, r4
   18f70:	ldr	r4, [fp, #8]
   18f74:	add	r5, r1, #16
   18f78:	cmp	r4, #0
   18f7c:	cmpne	sl, #0
   18f80:	bne	18fac <argp_failure@@Base+0x1458>
   18f84:	orrs	r3, sl, r6
   18f88:	mov	r1, r9
   18f8c:	mov	r2, r7
   18f90:	stm	sp, {r4, r8}
   18f94:	movwne	r3, #1
   18f98:	bl	18b44 <argp_failure@@Base+0xff0>
   18f9c:	orr	sl, r0, sl
   18fa0:	ldr	r0, [r5], #16
   18fa4:	cmp	r0, #0
   18fa8:	bne	18f78 <argp_failure@@Base+0x1424>
   18fac:	mov	r0, sl
   18fb0:	sub	sp, fp, #28
   18fb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fb8:	ldr	r0, [sp, #12]
   18fbc:	ldr	r0, [r0, #20]
   18fc0:	cmp	r0, #0
   18fc4:	beq	18dd8 <argp_failure@@Base+0x1284>
   18fc8:	mov	r0, r9
   18fcc:	bl	1aed8 <argp_parse@@Base+0x14bc>
   18fd0:	b	18dd8 <argp_failure@@Base+0x1284>
   18fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18fd8:	add	fp, sp, #28
   18fdc:	sub	sp, sp, #28
   18fe0:	mov	r7, r0
   18fe4:	ldr	r0, [r0, #16]
   18fe8:	mov	r6, r1
   18fec:	cmp	r0, #0
   18ff0:	beq	19010 <argp_failure@@Base+0x14bc>
   18ff4:	mov	r2, r0
   18ff8:	mov	r1, r2
   18ffc:	ldr	r2, [r2, #12]
   19000:	cmp	r2, #0
   19004:	bne	18ff8 <argp_failure@@Base+0x14a4>
   19008:	add	r2, r1, #8
   1900c:	b	19014 <argp_failure@@Base+0x14c0>
   19010:	add	r2, r7, #12
   19014:	ldr	r1, [r6, #16]
   19018:	ldr	r3, [r2]
   1901c:	cmp	r1, #0
   19020:	beq	19040 <argp_failure@@Base+0x14ec>
   19024:	mov	r2, r1
   19028:	mov	r5, r2
   1902c:	ldr	r2, [r2, #12]
   19030:	cmp	r2, #0
   19034:	bne	19028 <argp_failure@@Base+0x14d4>
   19038:	add	r2, r5, #8
   1903c:	b	19044 <argp_failure@@Base+0x14f0>
   19040:	add	r2, r6, #12
   19044:	ldr	r5, [r2]
   19048:	orr	r4, r5, r3
   1904c:	sub	r2, r3, r5
   19050:	cmn	r4, #1
   19054:	mov	r4, r2
   19058:	suble	r4, r5, r3
   1905c:	ands	r3, r5, r3
   19060:	movmi	r4, r2
   19064:	cmp	r4, #0
   19068:	bne	19088 <argp_failure@@Base+0x1534>
   1906c:	cmp	r0, #0
   19070:	mov	r4, r0
   19074:	movwne	r4, #1
   19078:	cmp	r1, #0
   1907c:	subne	r4, r4, #1
   19080:	cmp	r4, #0
   19084:	beq	19094 <argp_failure@@Base+0x1540>
   19088:	mov	r0, r4
   1908c:	sub	sp, fp, #28
   19090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19094:	cmp	r0, #0
   19098:	beq	19108 <argp_failure@@Base+0x15b4>
   1909c:	ldr	r3, [r1, #20]
   190a0:	ldr	r2, [r0, #20]
   190a4:	cmp	r2, r3
   190a8:	ble	190d0 <argp_failure@@Base+0x157c>
   190ac:	ldr	r0, [r0, #12]
   190b0:	ldr	r2, [r0, #20]
   190b4:	cmp	r2, r3
   190b8:	bgt	190ac <argp_failure@@Base+0x1558>
   190bc:	bl	194f8 <argp_failure@@Base+0x19a4>
   190c0:	cmp	r0, #0
   190c4:	mov	r4, r0
   190c8:	movweq	r4, #1
   190cc:	b	19088 <argp_failure@@Base+0x1534>
   190d0:	bge	190f8 <argp_failure@@Base+0x15a4>
   190d4:	ldr	r1, [r1, #12]
   190d8:	ldr	r3, [r1, #20]
   190dc:	cmp	r2, r3
   190e0:	blt	190d4 <argp_failure@@Base+0x1580>
   190e4:	bl	194f8 <argp_failure@@Base+0x19a4>
   190e8:	cmp	r0, #0
   190ec:	mov	r4, r0
   190f0:	mvneq	r4, #0
   190f4:	b	19088 <argp_failure@@Base+0x1534>
   190f8:	bl	194f8 <argp_failure@@Base+0x19a4>
   190fc:	mov	r4, r0
   19100:	cmp	r0, #0
   19104:	bne	19088 <argp_failure@@Base+0x1534>
   19108:	ldr	r0, [r7, #12]
   1910c:	ldr	r1, [r6, #12]
   19110:	orr	r2, r1, r0
   19114:	sub	r3, r0, r1
   19118:	cmn	r2, #1
   1911c:	mov	r4, r3
   19120:	suble	r4, r1, r0
   19124:	ands	r0, r1, r0
   19128:	movmi	r4, r3
   1912c:	cmp	r4, #0
   19130:	bne	19088 <argp_failure@@Base+0x1534>
   19134:	ldr	r3, [r7, #4]
   19138:	mov	sl, #0
   1913c:	cmp	r3, #0
   19140:	beq	19180 <argp_failure@@Base+0x162c>
   19144:	ldr	r0, [r7]
   19148:	mov	r1, r3
   1914c:	add	r0, r0, #12
   19150:	b	19160 <argp_failure@@Base+0x160c>
   19154:	add	r0, r0, #24
   19158:	subs	r1, r1, #1
   1915c:	beq	1917c <argp_failure@@Base+0x1628>
   19160:	ldr	sl, [r0, #-12]
   19164:	cmp	sl, #0
   19168:	beq	19154 <argp_failure@@Base+0x1600>
   1916c:	ldrb	r2, [r0]
   19170:	tst	r2, #2
   19174:	bne	19154 <argp_failure@@Base+0x1600>
   19178:	b	19180 <argp_failure@@Base+0x162c>
   1917c:	mov	sl, #0
   19180:	ldr	r8, [r6, #4]
   19184:	cmp	r8, #0
   19188:	beq	191c4 <argp_failure@@Base+0x1670>
   1918c:	ldr	r0, [r6]
   19190:	mov	r1, r8
   19194:	add	r0, r0, #12
   19198:	b	191a8 <argp_failure@@Base+0x1654>
   1919c:	add	r0, r0, #24
   191a0:	subs	r1, r1, #1
   191a4:	beq	191c4 <argp_failure@@Base+0x1670>
   191a8:	ldr	r5, [r0, #-12]
   191ac:	cmp	r5, #0
   191b0:	beq	1919c <argp_failure@@Base+0x1648>
   191b4:	ldrb	r2, [r0]
   191b8:	tst	r2, #2
   191bc:	bne	1919c <argp_failure@@Base+0x1648>
   191c0:	b	191c8 <argp_failure@@Base+0x1674>
   191c4:	mov	r5, #0
   191c8:	ldr	r4, [r7]
   191cc:	mov	r9, #0
   191d0:	cmp	sl, #0
   191d4:	str	r3, [sp, #20]
   191d8:	str	r8, [sp, #16]
   191dc:	ldr	r1, [r4, #12]
   191e0:	str	r4, [sp, #4]
   191e4:	beq	1924c <argp_failure@@Base+0x16f8>
   191e8:	ands	r0, r1, #8
   191ec:	beq	1924c <argp_failure@@Base+0x16f8>
   191f0:	str	r1, [sp, #24]
   191f4:	bl	11bfc <__ctype_b_loc@plt>
   191f8:	ldrb	r1, [sl]
   191fc:	ldr	r0, [r0]
   19200:	add	r2, r0, r1, lsl #1
   19204:	ldrb	r2, [r2, #1]
   19208:	tst	r2, #32
   1920c:	beq	19218 <argp_failure@@Base+0x16c4>
   19210:	ldrb	r1, [sl, #1]!
   19214:	b	19200 <argp_failure@@Base+0x16ac>
   19218:	subs	r4, r1, #45	; 0x2d
   1921c:	movwne	r4, #1
   19220:	cmp	r1, #0
   19224:	beq	19244 <argp_failure@@Base+0x16f0>
   19228:	uxtb	r1, r1
   1922c:	ldrb	r1, [r0, r1, lsl #1]
   19230:	tst	r1, #8
   19234:	bne	19244 <argp_failure@@Base+0x16f0>
   19238:	ldrb	r1, [sl, #1]!
   1923c:	cmp	r1, #0
   19240:	bne	19228 <argp_failure@@Base+0x16d4>
   19244:	ldr	r1, [sp, #24]
   19248:	b	19250 <argp_failure@@Base+0x16fc>
   1924c:	mov	r4, #0
   19250:	ldr	r0, [r6]
   19254:	cmp	r5, #0
   19258:	str	r0, [sp, #8]
   1925c:	ldr	r0, [r0, #12]
   19260:	str	r0, [sp, #12]
   19264:	andsne	r0, r0, #8
   19268:	beq	192c4 <argp_failure@@Base+0x1770>
   1926c:	mov	r8, r1
   19270:	bl	11bfc <__ctype_b_loc@plt>
   19274:	ldrb	r1, [r5]
   19278:	ldr	r0, [r0]
   1927c:	add	r2, r0, r1, lsl #1
   19280:	ldrb	r2, [r2, #1]
   19284:	tst	r2, #32
   19288:	beq	19294 <argp_failure@@Base+0x1740>
   1928c:	ldrb	r1, [r5, #1]!
   19290:	b	1927c <argp_failure@@Base+0x1728>
   19294:	subs	r9, r1, #45	; 0x2d
   19298:	movwne	r9, #1
   1929c:	cmp	r1, #0
   192a0:	beq	192c0 <argp_failure@@Base+0x176c>
   192a4:	uxtb	r1, r1
   192a8:	ldrb	r1, [r0, r1, lsl #1]
   192ac:	tst	r1, #8
   192b0:	bne	192c0 <argp_failure@@Base+0x176c>
   192b4:	ldrb	r1, [r5, #1]!
   192b8:	cmp	r1, #0
   192bc:	bne	192a4 <argp_failure@@Base+0x1750>
   192c0:	mov	r1, r8
   192c4:	subs	r4, r4, r9
   192c8:	bne	19088 <argp_failure@@Base+0x1534>
   192cc:	ldr	r0, [sp, #20]
   192d0:	mov	r2, #0
   192d4:	cmp	r0, #0
   192d8:	beq	19370 <argp_failure@@Base+0x181c>
   192dc:	sub	r8, r0, #1
   192e0:	ldr	r0, [sp, #4]
   192e4:	ldr	r4, [r7, #8]
   192e8:	add	r9, r0, #36	; 0x24
   192ec:	tst	r1, #8
   192f0:	beq	19318 <argp_failure@@Base+0x17c4>
   192f4:	mov	r2, #0
   192f8:	cmp	r8, #0
   192fc:	beq	19370 <argp_failure@@Base+0x181c>
   19300:	cmp	r2, #0
   19304:	bne	19370 <argp_failure@@Base+0x181c>
   19308:	ldr	r1, [r9], #24
   1930c:	sub	r8, r8, #1
   19310:	tst	r1, #8
   19314:	bne	192f4 <argp_failure@@Base+0x17a0>
   19318:	ldr	r7, [r9, #-32]	; 0xffffffe0
   1931c:	sub	r0, r7, #1
   19320:	cmp	r0, #254	; 0xfe
   19324:	bhi	192f4 <argp_failure@@Base+0x17a0>
   19328:	str	r1, [sp, #24]
   1932c:	bl	11bfc <__ctype_b_loc@plt>
   19330:	ldr	r0, [r0]
   19334:	add	r0, r0, r7, lsl #1
   19338:	ldrb	r0, [r0, #1]
   1933c:	tst	r0, #64	; 0x40
   19340:	beq	192f4 <argp_failure@@Base+0x17a0>
   19344:	ldrb	r0, [r4]
   19348:	mov	r2, r7
   1934c:	cmp	r7, r0
   19350:	bne	192f4 <argp_failure@@Base+0x17a0>
   19354:	ldr	r0, [sp, #24]
   19358:	add	r4, r4, #1
   1935c:	tst	r0, #2
   19360:	mov	r0, #0
   19364:	movne	r2, r0
   19368:	cmp	r8, #0
   1936c:	bne	19300 <argp_failure@@Base+0x17ac>
   19370:	ldr	r3, [sp, #16]
   19374:	mov	r9, #0
   19378:	mov	r0, r2
   1937c:	str	r2, [sp, #24]
   19380:	cmp	r3, #0
   19384:	beq	19420 <argp_failure@@Base+0x18cc>
   19388:	ldr	r0, [sp, #8]
   1938c:	ldr	r6, [r6, #8]
   19390:	ldr	r4, [sp, #12]
   19394:	sub	r7, r3, #1
   19398:	add	r8, r0, #36	; 0x24
   1939c:	tst	r4, #8
   193a0:	bne	193ac <argp_failure@@Base+0x1858>
   193a4:	b	193d0 <argp_failure@@Base+0x187c>
   193a8:	ldr	r2, [sp, #24]
   193ac:	mov	r9, #0
   193b0:	cmp	r7, #0
   193b4:	beq	19420 <argp_failure@@Base+0x18cc>
   193b8:	cmp	r9, #0
   193bc:	bne	19420 <argp_failure@@Base+0x18cc>
   193c0:	ldr	r4, [r8], #24
   193c4:	sub	r7, r7, #1
   193c8:	tst	r4, #8
   193cc:	bne	193ac <argp_failure@@Base+0x1858>
   193d0:	ldr	r9, [r8, #-32]	; 0xffffffe0
   193d4:	sub	r0, r9, #1
   193d8:	cmp	r0, #254	; 0xfe
   193dc:	bhi	193ac <argp_failure@@Base+0x1858>
   193e0:	bl	11bfc <__ctype_b_loc@plt>
   193e4:	ldr	r0, [r0]
   193e8:	add	r0, r0, r9, lsl #1
   193ec:	ldrb	r0, [r0, #1]
   193f0:	tst	r0, #64	; 0x40
   193f4:	beq	193a8 <argp_failure@@Base+0x1854>
   193f8:	ldrb	r0, [r6]
   193fc:	ldr	r2, [sp, #24]
   19400:	cmp	r9, r0
   19404:	bne	193ac <argp_failure@@Base+0x1858>
   19408:	tst	r4, #2
   1940c:	mov	r0, #0
   19410:	add	r6, r6, #1
   19414:	movne	r9, r0
   19418:	cmp	r7, #0
   1941c:	bne	193b8 <argp_failure@@Base+0x1864>
   19420:	tst	r2, #255	; 0xff
   19424:	mov	r6, r2
   19428:	bne	19440 <argp_failure@@Base+0x18ec>
   1942c:	cmp	sl, #0
   19430:	beq	1943c <argp_failure@@Base+0x18e8>
   19434:	ldrb	r6, [sl]
   19438:	b	19440 <argp_failure@@Base+0x18ec>
   1943c:	mov	r6, #0
   19440:	tst	r9, #255	; 0xff
   19444:	mov	r7, r9
   19448:	bne	19460 <argp_failure@@Base+0x190c>
   1944c:	cmp	r5, #0
   19450:	beq	1945c <argp_failure@@Base+0x1908>
   19454:	ldrb	r7, [r5]
   19458:	b	19460 <argp_failure@@Base+0x190c>
   1945c:	mov	r7, #0
   19460:	bl	11bd8 <__ctype_tolower_loc@plt>
   19464:	ldr	r2, [r0]
   19468:	uxtb	r0, r7
   1946c:	uxtb	r1, r6
   19470:	ldr	r3, [r2, r0, lsl #2]
   19474:	ldr	r2, [r2, r1, lsl #2]
   19478:	subs	r4, r2, r3
   1947c:	subseq	r4, r0, r1
   19480:	bne	19088 <argp_failure@@Base+0x1534>
   19484:	ldr	r0, [sp, #24]
   19488:	uxtb	r4, r0
   1948c:	cmp	r4, #0
   19490:	movwne	r4, #1
   19494:	tst	r9, #255	; 0xff
   19498:	subne	r4, r4, #1
   1949c:	cmp	r4, #0
   194a0:	bne	19088 <argp_failure@@Base+0x1534>
   194a4:	ldr	r0, [sp, #24]
   194a8:	tst	r0, #255	; 0xff
   194ac:	beq	194b8 <argp_failure@@Base+0x1964>
   194b0:	mov	r4, #0
   194b4:	b	19088 <argp_failure@@Base+0x1534>
   194b8:	cmp	sl, #0
   194bc:	mov	r4, sl
   194c0:	movwne	r4, #1
   194c4:	cmp	r5, #0
   194c8:	subne	r4, r4, #1
   194cc:	cmp	r4, #0
   194d0:	bne	19088 <argp_failure@@Base+0x1534>
   194d4:	cmp	sl, #0
   194d8:	beq	194b0 <argp_failure@@Base+0x195c>
   194dc:	mov	r0, sl
   194e0:	mov	r1, r5
   194e4:	bl	11b0c <strcasecmp@plt>
   194e8:	cmp	r0, #0
   194ec:	mov	r4, r0
   194f0:	moveq	r4, #0
   194f4:	b	19088 <argp_failure@@Base+0x1534>
   194f8:	push	{r4, r5, fp, lr}
   194fc:	add	fp, sp, #8
   19500:	mov	r4, r1
   19504:	mov	r5, r0
   19508:	ldr	r1, [r1, #12]
   1950c:	ldr	r0, [r0, #12]
   19510:	cmp	r0, r1
   19514:	beq	19528 <argp_failure@@Base+0x19d4>
   19518:	bl	194f8 <argp_failure@@Base+0x19a4>
   1951c:	cmp	r0, #0
   19520:	beq	19528 <argp_failure@@Base+0x19d4>
   19524:	pop	{r4, r5, fp, pc}
   19528:	ldr	r1, [r5, #8]
   1952c:	ldr	r2, [r4, #8]
   19530:	orr	r0, r2, r1
   19534:	sub	r3, r1, r2
   19538:	cmn	r0, #1
   1953c:	mov	r0, r3
   19540:	suble	r0, r2, r1
   19544:	ands	r1, r2, r1
   19548:	movmi	r0, r3
   1954c:	cmp	r0, #0
   19550:	popne	{r4, r5, fp, pc}
   19554:	ldr	r0, [r5, #4]
   19558:	ldr	r1, [r4, #4]
   1955c:	sub	r0, r1, r0
   19560:	pop	{r4, r5, fp, pc}
   19564:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19568:	add	fp, sp, #24
   1956c:	mov	r4, r0
   19570:	ldr	r0, [r1, #12]
   19574:	mov	r5, r1
   19578:	cmp	r0, #0
   1957c:	beq	195f8 <argp_failure@@Base+0x1aa4>
   19580:	ldr	r1, [r5, #8]
   19584:	ldr	r0, [r5]
   19588:	ldr	r6, [r1]
   1958c:	ldr	r7, [r0, #16]
   19590:	cmp	r6, #0
   19594:	ldrne	r1, [r1, #4]
   19598:	cmpne	r1, #0
   1959c:	bne	19640 <argp_failure@@Base+0x1aec>
   195a0:	cmp	r7, #0
   195a4:	beq	196e0 <argp_failure@@Base+0x1b8c>
   195a8:	ldr	r0, [r7]
   195ac:	cmp	r0, #0
   195b0:	beq	196e0 <argp_failure@@Base+0x1b8c>
   195b4:	ldrb	r1, [r0]
   195b8:	cmp	r1, #0
   195bc:	beq	196e0 <argp_failure@@Base+0x1b8c>
   195c0:	cmp	r6, #0
   195c4:	beq	196a4 <argp_failure@@Base+0x1b50>
   195c8:	ldr	r1, [r6, #16]
   195cc:	cmp	r1, r7
   195d0:	beq	196e0 <argp_failure@@Base+0x1b8c>
   195d4:	cmp	r1, #0
   195d8:	beq	19698 <argp_failure@@Base+0x1b44>
   195dc:	ldr	r1, [r1, #12]
   195e0:	cmp	r1, r7
   195e4:	cmpne	r1, #0
   195e8:	bne	195dc <argp_failure@@Base+0x1a88>
   195ec:	cmp	r1, r7
   195f0:	bne	196a4 <argp_failure@@Base+0x1b50>
   195f4:	b	196e0 <argp_failure@@Base+0x1b8c>
   195f8:	ldr	r6, [r5, #4]
   195fc:	ldr	r0, [r6, #28]
   19600:	ldr	r1, [r6, #32]
   19604:	add	r2, r0, #2
   19608:	cmp	r2, r1
   1960c:	bls	19628 <argp_failure@@Base+0x1ad4>
   19610:	mov	r0, r6
   19614:	mov	r1, #2
   19618:	bl	1c40c <argp_parse@@Base+0x29f0>
   1961c:	cmp	r0, #0
   19620:	beq	196e8 <argp_failure@@Base+0x1b94>
   19624:	ldr	r0, [r6, #28]
   19628:	movw	r1, #8236	; 0x202c
   1962c:	strh	r1, [r0]
   19630:	ldr	r0, [r6, #28]
   19634:	add	r0, r0, #2
   19638:	str	r0, [r6, #28]
   1963c:	b	196e8 <argp_failure@@Base+0x1b94>
   19640:	ldr	r1, [r6, #12]
   19644:	ldr	r0, [r0, #12]
   19648:	cmp	r0, r1
   1964c:	beq	195a0 <argp_failure@@Base+0x1a4c>
   19650:	ldr	r8, [r5, #4]
   19654:	ldr	r0, [r8, #28]
   19658:	ldr	r1, [r8, #32]
   1965c:	cmp	r0, r1
   19660:	bcc	1967c <argp_failure@@Base+0x1b28>
   19664:	mov	r0, r8
   19668:	mov	r1, #1
   1966c:	bl	1c40c <argp_parse@@Base+0x29f0>
   19670:	cmp	r0, #0
   19674:	beq	195a0 <argp_failure@@Base+0x1a4c>
   19678:	ldr	r0, [r8, #28]
   1967c:	add	r1, r0, #1
   19680:	str	r1, [r8, #28]
   19684:	mov	r1, #10
   19688:	strb	r1, [r0]
   1968c:	cmp	r7, #0
   19690:	bne	195a8 <argp_failure@@Base+0x1a54>
   19694:	b	196e0 <argp_failure@@Base+0x1b8c>
   19698:	mov	r1, #0
   1969c:	cmp	r1, r7
   196a0:	beq	196e0 <argp_failure@@Base+0x1b8c>
   196a4:	ldr	r1, [r5, #4]
   196a8:	mov	r2, r5
   196ac:	ldr	r8, [r1, #12]
   196b0:	ldr	r1, [r7, #16]
   196b4:	bl	19770 <argp_failure@@Base+0x1c1c>
   196b8:	ldr	r6, [r5, #4]
   196bc:	ldr	r1, [r6, #24]
   196c0:	ldr	r2, [r6, #28]
   196c4:	ldr	r0, [r6, #16]
   196c8:	sub	r1, r2, r1
   196cc:	cmp	r1, r0
   196d0:	bls	196dc <argp_failure@@Base+0x1b88>
   196d4:	mov	r0, r6
   196d8:	bl	1bedc <argp_parse@@Base+0x24c0>
   196dc:	str	r8, [r6, #12]
   196e0:	mov	r0, #0
   196e4:	str	r0, [r5, #12]
   196e8:	ldr	r5, [r5, #4]
   196ec:	ldr	r1, [r5, #24]
   196f0:	ldr	r2, [r5, #28]
   196f4:	ldr	r0, [r5, #16]
   196f8:	sub	r1, r2, r1
   196fc:	cmp	r1, r0
   19700:	bls	1970c <argp_failure@@Base+0x1bb8>
   19704:	mov	r0, r5
   19708:	bl	1bedc <argp_parse@@Base+0x24c0>
   1970c:	ldr	r0, [r5, #20]
   19710:	cmp	r0, #0
   19714:	subgt	r4, r4, r0
   19718:	cmp	r4, #1
   1971c:	blt	1976c <argp_failure@@Base+0x1c18>
   19720:	mov	r6, #32
   19724:	b	1973c <argp_failure@@Base+0x1be8>
   19728:	add	r1, r0, #1
   1972c:	str	r1, [r5, #28]
   19730:	strb	r6, [r0]
   19734:	cmp	r4, #0
   19738:	ble	1976c <argp_failure@@Base+0x1c18>
   1973c:	ldr	r0, [r5, #28]
   19740:	ldr	r1, [r5, #32]
   19744:	sub	r4, r4, #1
   19748:	cmp	r0, r1
   1974c:	bcc	19728 <argp_failure@@Base+0x1bd4>
   19750:	mov	r0, r5
   19754:	mov	r1, #1
   19758:	bl	1c40c <argp_parse@@Base+0x29f0>
   1975c:	cmp	r0, #0
   19760:	beq	19734 <argp_failure@@Base+0x1be0>
   19764:	ldr	r0, [r5, #28]
   19768:	b	19728 <argp_failure@@Base+0x1bd4>
   1976c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19770:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19774:	add	fp, sp, #28
   19778:	sub	sp, sp, #4
   1977c:	mov	r9, r2
   19780:	mov	r8, r0
   19784:	cmp	r1, #0
   19788:	mov	r6, r0
   1978c:	beq	197cc <argp_failure@@Base+0x1c78>
   19790:	ldr	r0, [r1, #20]
   19794:	mov	r4, r1
   19798:	mov	r6, r8
   1979c:	cmp	r0, #0
   197a0:	beq	197cc <argp_failure@@Base+0x1c78>
   197a4:	ldr	r1, [r9, #16]
   197a8:	mov	r0, r4
   197ac:	bl	1a684 <argp_parse@@Base+0xc68>
   197b0:	ldr	r3, [r4, #20]
   197b4:	mov	r2, r0
   197b8:	movw	r0, #3
   197bc:	mov	r1, r8
   197c0:	movt	r0, #512	; 0x200
   197c4:	blx	r3
   197c8:	mov	r6, r0
   197cc:	cmp	r6, #0
   197d0:	beq	199fc <argp_failure@@Base+0x1ea8>
   197d4:	ldrb	r0, [r6]
   197d8:	cmp	r0, #0
   197dc:	beq	199f0 <argp_failure@@Base+0x1e9c>
   197e0:	ldr	r0, [r9, #8]
   197e4:	ldr	r0, [r0]
   197e8:	cmp	r0, #0
   197ec:	beq	1982c <argp_failure@@Base+0x1cd8>
   197f0:	ldr	r4, [r9, #4]
   197f4:	ldr	r0, [r4, #28]
   197f8:	ldr	r1, [r4, #32]
   197fc:	cmp	r0, r1
   19800:	bcc	1981c <argp_failure@@Base+0x1cc8>
   19804:	mov	r0, r4
   19808:	mov	r1, #1
   1980c:	bl	1c40c <argp_parse@@Base+0x29f0>
   19810:	cmp	r0, #0
   19814:	beq	1982c <argp_failure@@Base+0x1cd8>
   19818:	ldr	r0, [r4, #28]
   1981c:	add	r1, r0, #1
   19820:	str	r1, [r4, #28]
   19824:	mov	r1, #10
   19828:	strb	r1, [r0]
   1982c:	ldr	r7, [r9, #4]
   19830:	movw	sl, #1400	; 0x578
   19834:	movt	sl, #3
   19838:	ldr	r4, [sl, #24]
   1983c:	ldr	r1, [r7, #24]
   19840:	ldr	r2, [r7, #28]
   19844:	ldr	r0, [r7, #16]
   19848:	sub	r1, r2, r1
   1984c:	cmp	r1, r0
   19850:	bls	1985c <argp_failure@@Base+0x1d08>
   19854:	mov	r0, r7
   19858:	bl	1bedc <argp_parse@@Base+0x24c0>
   1985c:	ldr	r0, [r7, #20]
   19860:	cmp	r0, #0
   19864:	subgt	r4, r4, r0
   19868:	cmp	r4, #1
   1986c:	blt	198bc <argp_failure@@Base+0x1d68>
   19870:	mov	r5, #32
   19874:	b	1988c <argp_failure@@Base+0x1d38>
   19878:	add	r1, r0, #1
   1987c:	str	r1, [r7, #28]
   19880:	strb	r5, [r0]
   19884:	cmp	r4, #0
   19888:	ble	198bc <argp_failure@@Base+0x1d68>
   1988c:	ldr	r0, [r7, #28]
   19890:	ldr	r1, [r7, #32]
   19894:	sub	r4, r4, #1
   19898:	cmp	r0, r1
   1989c:	bcc	19878 <argp_failure@@Base+0x1d24>
   198a0:	mov	r0, r7
   198a4:	mov	r1, #1
   198a8:	bl	1c40c <argp_parse@@Base+0x29f0>
   198ac:	cmp	r0, #0
   198b0:	beq	19884 <argp_failure@@Base+0x1d30>
   198b4:	ldr	r0, [r7, #28]
   198b8:	b	19878 <argp_failure@@Base+0x1d24>
   198bc:	ldr	r4, [r9, #4]
   198c0:	ldr	r5, [sl, #24]
   198c4:	ldr	r1, [r4, #24]
   198c8:	ldr	r2, [r4, #28]
   198cc:	ldr	r0, [r4, #16]
   198d0:	mov	r7, r4
   198d4:	sub	r1, r2, r1
   198d8:	mov	r2, sl
   198dc:	mov	sl, r5
   198e0:	cmp	r1, r0
   198e4:	bls	1990c <argp_failure@@Base+0x1db8>
   198e8:	mov	r0, r4
   198ec:	mov	r7, r2
   198f0:	bl	1bedc <argp_parse@@Base+0x24c0>
   198f4:	ldr	sl, [r7, #24]
   198f8:	ldr	r7, [r9, #4]
   198fc:	ldr	r1, [r7, #24]
   19900:	ldr	r2, [r7, #28]
   19904:	ldr	r0, [r7, #16]
   19908:	sub	r1, r2, r1
   1990c:	str	r5, [r4, #4]
   19910:	cmp	r1, r0
   19914:	mov	r5, r7
   19918:	bls	19928 <argp_failure@@Base+0x1dd4>
   1991c:	mov	r0, r7
   19920:	bl	1bedc <argp_parse@@Base+0x24c0>
   19924:	ldr	r5, [r9, #4]
   19928:	mov	r0, r6
   1992c:	str	sl, [r7, #12]
   19930:	bl	11c20 <strlen@plt>
   19934:	cmp	r0, #0
   19938:	beq	19984 <argp_failure@@Base+0x1e30>
   1993c:	mov	r4, r0
   19940:	ldr	r0, [r5, #28]
   19944:	ldr	r1, [r5, #32]
   19948:	add	r2, r0, r4
   1994c:	cmp	r2, r1
   19950:	bls	1996c <argp_failure@@Base+0x1e18>
   19954:	mov	r0, r5
   19958:	mov	r1, r4
   1995c:	bl	1c40c <argp_parse@@Base+0x29f0>
   19960:	cmp	r0, #0
   19964:	beq	19984 <argp_failure@@Base+0x1e30>
   19968:	ldr	r0, [r5, #28]
   1996c:	mov	r1, r6
   19970:	mov	r2, r4
   19974:	bl	11a58 <memcpy@plt>
   19978:	ldr	r0, [r5, #28]
   1997c:	add	r0, r0, r4
   19980:	str	r0, [r5, #28]
   19984:	ldr	r5, [r9, #4]
   19988:	ldr	r2, [r5, #24]
   1998c:	ldr	r0, [r5, #28]
   19990:	ldr	r1, [r5, #16]
   19994:	mov	r4, r5
   19998:	sub	r2, r0, r2
   1999c:	cmp	r2, r1
   199a0:	bls	199b4 <argp_failure@@Base+0x1e60>
   199a4:	mov	r0, r5
   199a8:	bl	1bedc <argp_parse@@Base+0x24c0>
   199ac:	ldr	r4, [r9, #4]
   199b0:	ldr	r0, [r4, #28]
   199b4:	mov	r1, #0
   199b8:	str	r1, [r5, #4]
   199bc:	ldr	r1, [r4, #32]
   199c0:	cmp	r0, r1
   199c4:	bcc	199e0 <argp_failure@@Base+0x1e8c>
   199c8:	mov	r0, r4
   199cc:	mov	r1, #1
   199d0:	bl	1c40c <argp_parse@@Base+0x29f0>
   199d4:	cmp	r0, #0
   199d8:	beq	199f0 <argp_failure@@Base+0x1e9c>
   199dc:	ldr	r0, [r4, #28]
   199e0:	add	r1, r0, #1
   199e4:	str	r1, [r4, #28]
   199e8:	mov	r1, #10
   199ec:	strb	r1, [r0]
   199f0:	ldr	r0, [r9, #8]
   199f4:	mov	r1, #1
   199f8:	str	r1, [r0, #4]
   199fc:	cmp	r6, r8
   19a00:	beq	19a14 <argp_failure@@Base+0x1ec0>
   19a04:	mov	r0, r6
   19a08:	sub	sp, fp, #28
   19a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a10:	b	1aed8 <argp_parse@@Base+0x14bc>
   19a14:	sub	sp, fp, #28
   19a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019a1c <argp_parse@@Base>:
   19a1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a20:	add	fp, sp, #28
   19a24:	sub	sp, sp, #212	; 0xd4
   19a28:	mov	r4, r3
   19a2c:	mov	r6, r2
   19a30:	mov	r7, r1
   19a34:	mov	r5, r0
   19a38:	tst	r3, #1
   19a3c:	bne	19a7c <argp_parse@@Base+0x60>
   19a40:	movw	r0, #1468	; 0x5bc
   19a44:	movt	r0, #3
   19a48:	ldr	r1, [r0]
   19a4c:	cmp	r1, #0
   19a50:	bne	19a5c <argp_parse@@Base+0x40>
   19a54:	ldr	r1, [r6]
   19a58:	str	r1, [r0]
   19a5c:	movw	r8, #1464	; 0x5b8
   19a60:	movt	r8, #3
   19a64:	ldr	r0, [r8]
   19a68:	cmp	r0, #0
   19a6c:	bne	19a7c <argp_parse@@Base+0x60>
   19a70:	ldr	r0, [r6]
   19a74:	bl	1ac74 <argp_parse@@Base+0x1258>
   19a78:	str	r0, [r8]
   19a7c:	tst	r4, #16
   19a80:	str	r6, [fp, #-228]	; 0xffffff1c
   19a84:	str	r7, [fp, #-232]	; 0xffffff18
   19a88:	bne	19b38 <argp_parse@@Base+0x11c>
   19a8c:	mov	r1, sp
   19a90:	sub	r3, r1, #64	; 0x40
   19a94:	mov	sp, r3
   19a98:	mov	r2, sp
   19a9c:	sub	r0, r2, #32
   19aa0:	mov	sp, r0
   19aa4:	vmov.i32	q8, #0	; 0x00000000
   19aa8:	sub	r2, r2, #20
   19aac:	cmp	r5, #0
   19ab0:	vst1.32	{d16-d17}, [r2]
   19ab4:	mov	r2, r0
   19ab8:	vst1.64	{d16-d17}, [r2]!
   19abc:	str	r3, [r2]
   19ac0:	sub	r2, r1, #32
   19ac4:	sub	r1, r1, #48	; 0x30
   19ac8:	vst1.64	{d16-d17}, [r2]
   19acc:	vst1.64	{d16-d17}, [r1]
   19ad0:	mov	r1, #48	; 0x30
   19ad4:	mov	r2, r3
   19ad8:	vst1.64	{d16-d17}, [r2], r1
   19adc:	vst1.64	{d16-d17}, [r2]
   19ae0:	movw	r2, #60576	; 0xeca0
   19ae4:	strne	r5, [r3], #16
   19ae8:	movt	r2, #1
   19aec:	mov	r1, r3
   19af0:	str	r2, [r1], #16
   19af4:	movw	r2, #4240	; 0x1090
   19af8:	movt	r2, #3
   19afc:	ldr	r2, [r2]
   19b00:	cmp	r2, #0
   19b04:	bne	19b1c <argp_parse@@Base+0x100>
   19b08:	movw	r2, #2564	; 0xa04
   19b0c:	movt	r2, #3
   19b10:	ldr	r2, [r2]
   19b14:	cmp	r2, #0
   19b18:	beq	19b2c <argp_parse@@Base+0x110>
   19b1c:	movw	r2, #60604	; 0xecbc
   19b20:	mov	r3, r1
   19b24:	movt	r2, #1
   19b28:	str	r2, [r1]
   19b2c:	mov	r1, #0
   19b30:	str	r1, [r3, #16]
   19b34:	b	19b3c <argp_parse@@Base+0x120>
   19b38:	mov	r0, r5
   19b3c:	vmov.i32	q8, #0	; 0x00000000
   19b40:	sub	r9, fp, #96	; 0x60
   19b44:	mov	r7, #12
   19b48:	mov	r5, #0
   19b4c:	cmp	r0, #0
   19b50:	str	r4, [fp, #-224]	; 0xffffff20
   19b54:	str	r0, [fp, #-236]	; 0xffffff14
   19b58:	mov	r1, r9
   19b5c:	str	r5, [fp, #-52]	; 0xffffffcc
   19b60:	str	r5, [fp, #-56]	; 0xffffffc8
   19b64:	str	r5, [fp, #-60]	; 0xffffffc4
   19b68:	vst1.64	{d16-d17}, [r1], r7
   19b6c:	vst1.32	{d16-d17}, [r1]
   19b70:	mov	r1, #1
   19b74:	bic	r3, r1, r4, lsr #2
   19b78:	str	r3, [fp, #-64]	; 0xffffffc0
   19b7c:	beq	19bb4 <argp_parse@@Base+0x198>
   19b80:	sub	r1, fp, #64	; 0x40
   19b84:	bl	1a86c <argp_parse@@Base+0xe50>
   19b88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19b8c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   19b90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19b94:	mov	r6, #16
   19b98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19b9c:	add	r2, r2, r2, lsl #3
   19ba0:	add	r1, r6, r1, lsl #4
   19ba4:	mov	r6, #36	; 0x24
   19ba8:	lsl	r5, r0, #2
   19bac:	add	r8, r6, r2, lsl #2
   19bb0:	b	19bbc <argp_parse@@Base+0x1a0>
   19bb4:	mov	r8, #36	; 0x24
   19bb8:	mov	r1, #16
   19bbc:	add	r4, r8, r5
   19bc0:	add	sl, r4, r1
   19bc4:	add	r0, r3, sl
   19bc8:	add	r0, r0, #1
   19bcc:	bl	1bd8c <argp_parse@@Base+0x2370>
   19bd0:	cmp	r0, #0
   19bd4:	str	r0, [fp, #-100]	; 0xffffff9c
   19bd8:	beq	1a60c <argp_parse@@Base+0xbf0>
   19bdc:	mov	r6, r0
   19be0:	mov	r0, #12
   19be4:	sub	r1, fp, #220	; 0xdc
   19be8:	mov	r2, r5
   19bec:	vld1.64	{d16-d17}, [r9], r0
   19bf0:	add	r0, r1, #20
   19bf4:	add	r7, r6, r8
   19bf8:	add	r8, r6, r4
   19bfc:	add	r4, r6, sl
   19c00:	vld1.32	{d18-d19}, [r9]
   19c04:	mov	r9, r1
   19c08:	vst1.32	{d16-d17}, [r0]
   19c0c:	add	r0, r1, #32
   19c10:	mov	r1, #0
   19c14:	vst1.32	{d18-d19}, [r0]
   19c18:	mov	r0, #1
   19c1c:	str	r6, [fp, #-172]	; 0xffffff54
   19c20:	str	r0, [fp, #-204]	; 0xffffff34
   19c24:	str	r0, [fp, #-208]	; 0xffffff30
   19c28:	mov	r0, r7
   19c2c:	str	r7, [fp, #-164]	; 0xffffff5c
   19c30:	str	r8, [fp, #-212]	; 0xffffff2c
   19c34:	str	r4, [fp, #-216]	; 0xffffff28
   19c38:	bl	11c8c <memset@plt>
   19c3c:	ldr	sl, [fp, #-224]	; 0xffffff20
   19c40:	mov	r0, #45	; 0x2d
   19c44:	str	r7, [fp, #-36]	; 0xffffffdc
   19c48:	str	r8, [fp, #-40]	; 0xffffffd8
   19c4c:	str	r4, [fp, #-44]	; 0xffffffd4
   19c50:	str	r9, [fp, #-48]	; 0xffffffd0
   19c54:	tst	sl, #8
   19c58:	moveq	r0, #43	; 0x2b
   19c5c:	tsteq	sl, #4
   19c60:	beq	1a25c <argp_parse@@Base+0x840>
   19c64:	add	r1, r4, #1
   19c68:	strb	r0, [r4]
   19c6c:	str	r1, [fp, #-44]	; 0xffffffd4
   19c70:	ldr	r0, [fp, #-236]	; 0xffffff14
   19c74:	ldr	r5, [fp, #-228]	; 0xffffff1c
   19c78:	ldr	r9, [fp, #-232]	; 0xffffff18
   19c7c:	mov	r3, #0
   19c80:	strb	r3, [r1]
   19c84:	str	r3, [r8]
   19c88:	cmp	r0, #0
   19c8c:	str	r0, [fp, #-220]	; 0xffffff24
   19c90:	beq	19cc8 <argp_parse@@Base+0x2ac>
   19c94:	sub	sp, sp, #8
   19c98:	sub	r1, fp, #48	; 0x30
   19c9c:	mov	r2, #0
   19ca0:	mov	r3, r6
   19ca4:	str	r1, [sp]
   19ca8:	mov	r1, #0
   19cac:	bl	1a94c <argp_parse@@Base+0xf30>
   19cb0:	add	sp, sp, #8
   19cb4:	str	r0, [fp, #-168]	; 0xffffff58
   19cb8:	mov	r6, r0
   19cbc:	ldr	r3, [fp, #-220]	; 0xffffff24
   19cc0:	ldr	r4, [fp, #-172]	; 0xffffff54
   19cc4:	b	19cd0 <argp_parse@@Base+0x2b4>
   19cc8:	mov	r4, r6
   19ccc:	str	r6, [fp, #-168]	; 0xffffff58
   19cd0:	vmov.i32	q8, #0	; 0x00000000
   19cd4:	sub	r1, fp, #220	; 0xdc
   19cd8:	mov	r7, #0
   19cdc:	mov	r0, #1
   19ce0:	mov	r8, r5
   19ce4:	cmp	r4, r6
   19ce8:	mov	r2, r1
   19cec:	add	r1, r1, #84	; 0x54
   19cf0:	str	r7, [fp, #-116]	; 0xffffff8c
   19cf4:	str	r7, [fp, #-120]	; 0xffffff88
   19cf8:	vst1.32	{d16-d17}, [r1]
   19cfc:	str	sl, [fp, #-140]	; 0xffffff74
   19d00:	str	r5, [fp, #-148]	; 0xffffff6c
   19d04:	str	r9, [fp, #-152]	; 0xffffff68
   19d08:	str	r3, [fp, #-156]	; 0xffffff64
   19d0c:	str	r2, [fp, #-104]	; 0xffffff98
   19d10:	str	r7, [fp, #-144]	; 0xffffff70
   19d14:	str	r0, [fp, #-160]	; 0xffffff60
   19d18:	movw	r0, #1472	; 0x5c0
   19d1c:	add	sl, r2, #64	; 0x40
   19d20:	movt	r0, #3
   19d24:	ldr	r0, [r0]
   19d28:	str	r0, [fp, #-112]	; 0xffffff90
   19d2c:	movw	r0, #1476	; 0x5c4
   19d30:	movt	r0, #3
   19d34:	ldr	r0, [r0]
   19d38:	str	r0, [fp, #-108]	; 0xffffff94
   19d3c:	bcs	19e1c <argp_parse@@Base+0x400>
   19d40:	ldr	r0, [fp, #12]
   19d44:	str	r0, [r4, #24]
   19d48:	b	19da0 <argp_parse@@Base+0x384>
   19d4c:	ldr	r0, [r4, #32]
   19d50:	mov	r1, #0
   19d54:	mov	r2, sl
   19d58:	str	r0, [fp, #-120]	; 0xffffff88
   19d5c:	ldr	r0, [r4, #24]
   19d60:	str	r0, [fp, #-128]	; 0xffffff80
   19d64:	ldr	r0, [r4, #28]
   19d68:	str	r0, [fp, #-124]	; 0xffffff84
   19d6c:	ldr	r0, [r4, #12]
   19d70:	str	r0, [fp, #-136]	; 0xffffff78
   19d74:	movw	r0, #6
   19d78:	movt	r0, #256	; 0x100
   19d7c:	sub	r0, r0, #3
   19d80:	blx	r3
   19d84:	mov	r7, r0
   19d88:	ldr	r0, [fp, #-120]	; 0xffffff88
   19d8c:	str	r0, [r4, #32]
   19d90:	ldr	r0, [fp, #-168]	; 0xffffff58
   19d94:	add	r4, r4, #36	; 0x24
   19d98:	cmp	r4, r0
   19d9c:	bcs	19e10 <argp_parse@@Base+0x3f4>
   19da0:	cmp	r7, #7
   19da4:	cmpne	r7, #0
   19da8:	bne	1a60c <argp_parse@@Base+0xbf0>
   19dac:	ldr	r0, [r4, #16]
   19db0:	cmp	r0, #0
   19db4:	beq	19dc8 <argp_parse@@Base+0x3ac>
   19db8:	ldr	r1, [r4, #20]
   19dbc:	ldr	r0, [r0, #28]
   19dc0:	ldr	r0, [r0, r1, lsl #2]
   19dc4:	str	r0, [r4, #24]
   19dc8:	ldr	r3, [r4]
   19dcc:	cmp	r3, #0
   19dd0:	bne	19d4c <argp_parse@@Base+0x330>
   19dd4:	ldr	r0, [r4, #4]
   19dd8:	mov	r7, #7
   19ddc:	ldr	r0, [r0, #16]
   19de0:	cmp	r0, #0
   19de4:	beq	19d90 <argp_parse@@Base+0x374>
   19de8:	ldr	r0, [r0]
   19dec:	cmp	r0, #0
   19df0:	beq	19d90 <argp_parse@@Base+0x374>
   19df4:	ldr	r0, [r4, #24]
   19df8:	ldr	r1, [r4, #28]
   19dfc:	str	r0, [r1]
   19e00:	ldr	r3, [r4]
   19e04:	cmp	r3, #0
   19e08:	bne	19d4c <argp_parse@@Base+0x330>
   19e0c:	b	19d90 <argp_parse@@Base+0x374>
   19e10:	cmp	r7, #7
   19e14:	cmpne	r7, #0
   19e18:	bne	1a60c <argp_parse@@Base+0xbf0>
   19e1c:	ldr	r0, [fp, #-140]	; 0xffffff74
   19e20:	tst	r0, #2
   19e24:	bne	19e34 <argp_parse@@Base+0x418>
   19e28:	mov	r0, #1
   19e2c:	str	r0, [fp, #-204]	; 0xffffff34
   19e30:	b	19e5c <argp_parse@@Base+0x440>
   19e34:	mov	r1, #0
   19e38:	tst	r0, #1
   19e3c:	str	r1, [fp, #-204]	; 0xffffff34
   19e40:	beq	19e5c <argp_parse@@Base+0x440>
   19e44:	ldr	r0, [fp, #-152]	; 0xffffff68
   19e48:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19e4c:	sub	r1, r1, #4
   19e50:	add	r0, r0, #1
   19e54:	str	r1, [fp, #-148]	; 0xffffff6c
   19e58:	str	r0, [fp, #-152]	; 0xffffff68
   19e5c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19e60:	cmp	r0, r8
   19e64:	beq	19e78 <argp_parse@@Base+0x45c>
   19e68:	movw	r0, #1464	; 0x5b8
   19e6c:	movt	r0, #3
   19e70:	ldr	r0, [r0]
   19e74:	b	19e88 <argp_parse@@Base+0x46c>
   19e78:	ldr	r0, [r8]
   19e7c:	cmp	r0, #0
   19e80:	beq	19e68 <argp_parse@@Base+0x44c>
   19e84:	bl	1ac74 <argp_parse@@Base+0x1258>
   19e88:	str	r0, [fp, #-116]	; 0xffffff8c
   19e8c:	sub	r0, fp, #220	; 0xdc
   19e90:	mov	r8, #0
   19e94:	add	r6, r0, #12
   19e98:	b	19eac <argp_parse@@Base+0x490>
   19e9c:	cmp	r0, #7
   19ea0:	beq	1a264 <argp_parse@@Base+0x848>
   19ea4:	cmp	r0, #0
   19ea8:	bne	1a3fc <argp_parse@@Base+0x9e0>
   19eac:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19eb0:	cmp	r0, #0
   19eb4:	beq	19ec8 <argp_parse@@Base+0x4ac>
   19eb8:	ldr	r9, [fp, #-144]	; 0xffffff70
   19ebc:	cmp	r9, r0
   19ec0:	bge	19f7c <argp_parse@@Base+0x560>
   19ec4:	str	r8, [fp, #-132]	; 0xffffff7c
   19ec8:	ldr	r0, [fp, #-160]	; 0xffffff60
   19ecc:	ldr	r9, [fp, #-144]	; 0xffffff70
   19ed0:	cmp	r0, #0
   19ed4:	beq	19f7c <argp_parse@@Base+0x560>
   19ed8:	mvn	r0, #0
   19edc:	str	r0, [fp, #-200]	; 0xffffff38
   19ee0:	str	r9, [fp, #-208]	; 0xffffff30
   19ee4:	ldr	r2, [fp, #-216]	; 0xffffff28
   19ee8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   19eec:	ldr	r0, [fp, #-152]	; 0xffffff68
   19ef0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19ef4:	ldrb	r7, [fp, #-140]	; 0xffffff74
   19ef8:	sub	sp, sp, #8
   19efc:	tst	r7, #64	; 0x40
   19f00:	bne	19f14 <argp_parse@@Base+0x4f8>
   19f04:	str	r8, [sp]
   19f08:	str	r6, [sp, #4]
   19f0c:	bl	1af2c <argp_parse@@Base+0x1510>
   19f10:	b	19f20 <argp_parse@@Base+0x504>
   19f14:	str	r8, [sp]
   19f18:	str	r6, [sp, #4]
   19f1c:	bl	1af90 <argp_parse@@Base+0x1574>
   19f20:	add	sp, sp, #8
   19f24:	ldr	r9, [fp, #-208]	; 0xffffff30
   19f28:	mov	r7, r0
   19f2c:	cmn	r0, #1
   19f30:	str	r9, [fp, #-144]	; 0xffffff70
   19f34:	beq	19f50 <argp_parse@@Base+0x534>
   19f38:	cmp	r7, #63	; 0x3f
   19f3c:	beq	1a118 <argp_parse@@Base+0x6fc>
   19f40:	cmp	r7, #1
   19f44:	bne	1a128 <argp_parse@@Base+0x70c>
   19f48:	ldr	r7, [fp, #-196]	; 0xffffff3c
   19f4c:	b	19fb4 <argp_parse@@Base+0x598>
   19f50:	cmp	r9, #2
   19f54:	str	r8, [fp, #-160]	; 0xffffff60
   19f58:	blt	19f7c <argp_parse@@Base+0x560>
   19f5c:	ldr	r0, [fp, #-148]	; 0xffffff6c
   19f60:	movw	r1, #57324	; 0xdfec
   19f64:	movt	r1, #1
   19f68:	add	r0, r0, r9, lsl #2
   19f6c:	ldr	r0, [r0, #-4]
   19f70:	bl	11998 <strcmp@plt>
   19f74:	cmp	r0, #0
   19f78:	streq	r9, [fp, #-132]	; 0xffffff7c
   19f7c:	ldr	r2, [fp, #-152]	; 0xffffff68
   19f80:	mov	r1, #1
   19f84:	mov	r0, #7
   19f88:	cmp	r9, r2
   19f8c:	bge	1a280 <argp_parse@@Base+0x864>
   19f90:	ldrb	r2, [fp, #-140]	; 0xffffff74
   19f94:	tst	r2, #4
   19f98:	bne	1a280 <argp_parse@@Base+0x864>
   19f9c:	add	r0, r9, #1
   19fa0:	str	r0, [fp, #-144]	; 0xffffff70
   19fa4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   19fa8:	ldr	r7, [r1, r9, lsl #2]
   19fac:	mov	r9, r0
   19fb0:	str	r7, [fp, #-196]	; 0xffffff3c
   19fb4:	sub	r0, r9, #1
   19fb8:	str	r0, [fp, #-144]	; 0xffffff70
   19fbc:	ldr	r1, [fp, #-172]	; 0xffffff54
   19fc0:	ldr	r2, [fp, #-168]	; 0xffffff58
   19fc4:	cmp	r1, r2
   19fc8:	bcs	1a264 <argp_parse@@Base+0x848>
   19fcc:	add	r4, r1, #24
   19fd0:	add	r1, r0, #1
   19fd4:	str	r1, [fp, #-144]	; 0xffffff70
   19fd8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19fdc:	cmp	r3, #0
   19fe0:	beq	1a080 <argp_parse@@Base+0x664>
   19fe4:	ldr	r0, [r4, #8]
   19fe8:	mov	r1, r7
   19fec:	mov	r2, sl
   19ff0:	mov	r5, #0
   19ff4:	str	r0, [fp, #-120]	; 0xffffff88
   19ff8:	ldr	r0, [r4]
   19ffc:	str	r0, [fp, #-128]	; 0xffffff80
   1a000:	ldr	r0, [r4, #4]
   1a004:	str	r0, [fp, #-124]	; 0xffffff84
   1a008:	ldr	r0, [r4, #-12]
   1a00c:	str	r0, [fp, #-136]	; 0xffffff78
   1a010:	mov	r0, #0
   1a014:	blx	r3
   1a018:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a01c:	cmp	r0, #7
   1a020:	str	r1, [r4, #8]
   1a024:	bne	1a0b4 <argp_parse@@Base+0x698>
   1a028:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a02c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1a030:	sub	r0, r0, #1
   1a034:	cmp	r3, #0
   1a038:	str	r0, [fp, #-144]	; 0xffffff70
   1a03c:	beq	1a084 <argp_parse@@Base+0x668>
   1a040:	ldr	r0, [r4]
   1a044:	mov	r1, #0
   1a048:	mov	r2, sl
   1a04c:	str	r0, [fp, #-128]	; 0xffffff80
   1a050:	ldr	r0, [r4, #4]
   1a054:	str	r0, [fp, #-124]	; 0xffffff84
   1a058:	ldr	r0, [r4, #-12]
   1a05c:	str	r0, [fp, #-136]	; 0xffffff78
   1a060:	movw	r0, #6
   1a064:	movt	r0, #256	; 0x100
   1a068:	blx	r3
   1a06c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a070:	str	r1, [r4, #8]
   1a074:	cmp	r0, #7
   1a078:	beq	1a090 <argp_parse@@Base+0x674>
   1a07c:	b	1a0ac <argp_parse@@Base+0x690>
   1a080:	str	r0, [fp, #-144]	; 0xffffff70
   1a084:	mov	r0, #7
   1a088:	cmp	r0, #7
   1a08c:	bne	1a0ac <argp_parse@@Base+0x690>
   1a090:	ldr	r2, [fp, #-168]	; 0xffffff58
   1a094:	add	r1, r4, #12
   1a098:	cmp	r1, r2
   1a09c:	bcs	1a0ac <argp_parse@@Base+0x690>
   1a0a0:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a0a4:	add	r4, r4, #36	; 0x24
   1a0a8:	b	19fd0 <argp_parse@@Base+0x5b4>
   1a0ac:	movw	r5, #6
   1a0b0:	movt	r5, #256	; 0x100
   1a0b4:	cmp	r0, #0
   1a0b8:	bne	19e9c <argp_parse@@Base+0x480>
   1a0bc:	movw	r0, #6
   1a0c0:	movt	r0, #256	; 0x100
   1a0c4:	cmp	r5, r0
   1a0c8:	bne	1a0f4 <argp_parse@@Base+0x6d8>
   1a0cc:	ldr	r0, [fp, #-152]	; 0xffffff68
   1a0d0:	str	r0, [fp, #-144]	; 0xffffff70
   1a0d4:	cmp	r0, r9
   1a0d8:	blt	1a100 <argp_parse@@Base+0x6e4>
   1a0dc:	ldr	r1, [r4, #-12]
   1a0e0:	sub	r0, r0, r9
   1a0e4:	add	r0, r0, r1
   1a0e8:	add	r0, r0, #1
   1a0ec:	str	r0, [r4, #-12]
   1a0f0:	b	1a108 <argp_parse@@Base+0x6ec>
   1a0f4:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a0f8:	cmp	r0, r9
   1a0fc:	bge	1a0dc <argp_parse@@Base+0x6c0>
   1a100:	mov	r0, #1
   1a104:	str	r0, [fp, #-160]	; 0xffffff60
   1a108:	mov	r0, #0
   1a10c:	cmp	r0, #0
   1a110:	beq	19eac <argp_parse@@Base+0x490>
   1a114:	b	1a3fc <argp_parse@@Base+0x9e0>
   1a118:	ldr	r0, [fp, #-200]	; 0xffffff38
   1a11c:	cmn	r0, #1
   1a120:	beq	1a190 <argp_parse@@Base+0x774>
   1a124:	b	1a64c <argp_parse@@Base+0xc30>
   1a128:	cmp	r8, r7, asr #24
   1a12c:	beq	1a190 <argp_parse@@Base+0x774>
   1a130:	asr	r0, r7, #24
   1a134:	ldr	r1, [fp, #-172]	; 0xffffff54
   1a138:	sub	r0, r0, #1
   1a13c:	add	r0, r0, r0, lsl #3
   1a140:	ldr	r3, [r1, r0, lsl #2]
   1a144:	cmp	r3, #0
   1a148:	beq	1a618 <argp_parse@@Base+0xbfc>
   1a14c:	add	r4, r1, r0, lsl #2
   1a150:	tst	r7, #8388608	; 0x800000
   1a154:	mov	r2, sl
   1a158:	ldr	r0, [r4, #32]!
   1a15c:	str	r0, [fp, #-120]	; 0xffffff88
   1a160:	ldr	r0, [r4, #-8]
   1a164:	str	r0, [fp, #-128]	; 0xffffff80
   1a168:	ldr	r0, [r4, #-4]
   1a16c:	str	r0, [fp, #-124]	; 0xffffff84
   1a170:	ldr	r0, [r4, #-20]	; 0xffffffec
   1a174:	str	r0, [fp, #-136]	; 0xffffff78
   1a178:	bic	r0, r7, #-16777216	; 0xff000000
   1a17c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1a180:	orrne	r0, r0, #-16777216	; 0xff000000
   1a184:	blx	r3
   1a188:	mov	r1, #0
   1a18c:	b	1a220 <argp_parse@@Base+0x804>
   1a190:	ldr	r0, [fp, #-216]	; 0xffffff28
   1a194:	mov	r1, r7
   1a198:	bl	11c38 <strchr@plt>
   1a19c:	cmp	r0, #0
   1a1a0:	beq	1a238 <argp_parse@@Base+0x81c>
   1a1a4:	ldr	r1, [fp, #-172]	; 0xffffff54
   1a1a8:	ldr	r2, [fp, #-168]	; 0xffffff58
   1a1ac:	cmp	r1, r2
   1a1b0:	bcs	1a238 <argp_parse@@Base+0x81c>
   1a1b4:	add	r1, r1, #24
   1a1b8:	ldr	r3, [r1, #-16]
   1a1bc:	cmp	r3, r0
   1a1c0:	bhi	1a1dc <argp_parse@@Base+0x7c0>
   1a1c4:	add	r3, r1, #36	; 0x24
   1a1c8:	add	r1, r1, #12
   1a1cc:	cmp	r1, r2
   1a1d0:	mov	r1, r3
   1a1d4:	bcc	1a1b8 <argp_parse@@Base+0x79c>
   1a1d8:	b	1a238 <argp_parse@@Base+0x81c>
   1a1dc:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1a1e0:	cmp	r3, #0
   1a1e4:	beq	1a238 <argp_parse@@Base+0x81c>
   1a1e8:	mov	r4, r1
   1a1ec:	mov	r2, sl
   1a1f0:	ldr	r0, [r4, #8]!
   1a1f4:	str	r0, [fp, #-120]	; 0xffffff88
   1a1f8:	ldr	r0, [r1]
   1a1fc:	str	r0, [fp, #-128]	; 0xffffff80
   1a200:	ldr	r0, [r1, #4]
   1a204:	str	r0, [fp, #-124]	; 0xffffff84
   1a208:	ldr	r0, [r1, #-12]
   1a20c:	str	r0, [fp, #-136]	; 0xffffff78
   1a210:	mov	r0, r7
   1a214:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1a218:	blx	r3
   1a21c:	mov	r1, #1
   1a220:	ldr	r2, [fp, #-120]	; 0xffffff88
   1a224:	cmp	r0, #7
   1a228:	str	r2, [r4]
   1a22c:	bne	19ea4 <argp_parse@@Base+0x488>
   1a230:	cmp	r1, #0
   1a234:	beq	1a618 <argp_parse@@Base+0xbfc>
   1a238:	movw	r1, #61059	; 0xee83
   1a23c:	movw	r3, #60800	; 0xed80
   1a240:	mov	r0, sl
   1a244:	mov	r2, r7
   1a248:	movt	r1, #1
   1a24c:	movt	r3, #1
   1a250:	bl	17a10 <argp_error@@Base>
   1a254:	mov	r0, #0
   1a258:	b	1a26c <argp_parse@@Base+0x850>
   1a25c:	mov	r1, r4
   1a260:	b	19c70 <argp_parse@@Base+0x254>
   1a264:	mov	r7, #1
   1a268:	mov	r0, #1
   1a26c:	add	r1, r7, #1
   1a270:	clz	r1, r1
   1a274:	lsr	r1, r1, #5
   1a278:	orr	r1, r1, r0
   1a27c:	mov	r0, #7
   1a280:	subs	r7, r0, #7
   1a284:	movne	r7, r0
   1a288:	cmp	r1, #0
   1a28c:	moveq	r7, r0
   1a290:	cmp	r7, #0
   1a294:	beq	1a334 <argp_parse@@Base+0x918>
   1a298:	cmp	r7, #0
   1a29c:	beq	1a4e0 <argp_parse@@Base+0xac4>
   1a2a0:	cmp	r7, #7
   1a2a4:	bne	1a2bc <argp_parse@@Base+0x8a0>
   1a2a8:	ldr	r1, [fp, #-112]	; 0xffffff90
   1a2ac:	mov	r0, sl
   1a2b0:	mov	r2, #260	; 0x104
   1a2b4:	bl	17954 <argp_state_help@@Base>
   1a2b8:	mov	r7, #7
   1a2bc:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a2c0:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a2c4:	cmp	r4, r0
   1a2c8:	bcs	1a584 <argp_parse@@Base+0xb68>
   1a2cc:	movw	r1, #6
   1a2d0:	movt	r1, #256	; 0x100
   1a2d4:	sub	r6, r1, #1
   1a2d8:	b	1a2e8 <argp_parse@@Base+0x8cc>
   1a2dc:	add	r4, r4, #36	; 0x24
   1a2e0:	cmp	r4, r0
   1a2e4:	bcs	1a3e0 <argp_parse@@Base+0x9c4>
   1a2e8:	ldr	r3, [r4]
   1a2ec:	cmp	r3, #0
   1a2f0:	beq	1a2dc <argp_parse@@Base+0x8c0>
   1a2f4:	ldr	r0, [r4, #32]
   1a2f8:	mov	r1, #0
   1a2fc:	mov	r2, sl
   1a300:	str	r0, [fp, #-120]	; 0xffffff88
   1a304:	ldr	r0, [r4, #24]
   1a308:	str	r0, [fp, #-128]	; 0xffffff80
   1a30c:	ldr	r0, [r4, #28]
   1a310:	str	r0, [fp, #-124]	; 0xffffff84
   1a314:	ldr	r0, [r4, #12]
   1a318:	str	r0, [fp, #-136]	; 0xffffff78
   1a31c:	mov	r0, r6
   1a320:	blx	r3
   1a324:	ldr	r0, [fp, #-120]	; 0xffffff88
   1a328:	str	r0, [r4, #32]
   1a32c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a330:	b	1a2dc <argp_parse@@Base+0x8c0>
   1a334:	ldr	r1, [fp, #-152]	; 0xffffff68
   1a338:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a33c:	cmp	r0, r1
   1a340:	bne	1a3e8 <argp_parse@@Base+0x9cc>
   1a344:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a348:	ldr	r1, [fp, #-168]	; 0xffffff58
   1a34c:	mov	r0, #0
   1a350:	cmp	r4, r1
   1a354:	bcs	1a408 <argp_parse@@Base+0x9ec>
   1a358:	movw	r0, #6
   1a35c:	mov	r7, #0
   1a360:	movt	r0, #256	; 0x100
   1a364:	sub	r6, r0, #4
   1a368:	mov	r0, #0
   1a36c:	b	1a3b4 <argp_parse@@Base+0x998>
   1a370:	ldr	r0, [r4, #32]
   1a374:	mov	r1, #0
   1a378:	mov	r2, sl
   1a37c:	str	r0, [fp, #-120]	; 0xffffff88
   1a380:	ldr	r0, [r4, #24]
   1a384:	str	r0, [fp, #-128]	; 0xffffff80
   1a388:	ldr	r0, [r4, #28]
   1a38c:	str	r7, [fp, #-136]	; 0xffffff78
   1a390:	str	r0, [fp, #-124]	; 0xffffff84
   1a394:	mov	r0, r6
   1a398:	blx	r3
   1a39c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a3a0:	str	r1, [r4, #32]
   1a3a4:	ldr	r1, [fp, #-168]	; 0xffffff58
   1a3a8:	add	r4, r4, #36	; 0x24
   1a3ac:	cmp	r4, r1
   1a3b0:	bcs	1a404 <argp_parse@@Base+0x9e8>
   1a3b4:	cmp	r0, #7
   1a3b8:	cmpne	r0, #0
   1a3bc:	bne	1a404 <argp_parse@@Base+0x9e8>
   1a3c0:	ldr	r2, [r4, #12]
   1a3c4:	cmp	r2, #0
   1a3c8:	bne	1a3a8 <argp_parse@@Base+0x98c>
   1a3cc:	ldr	r3, [r4]
   1a3d0:	cmp	r3, #0
   1a3d4:	bne	1a370 <argp_parse@@Base+0x954>
   1a3d8:	mov	r0, #7
   1a3dc:	b	1a3a8 <argp_parse@@Base+0x98c>
   1a3e0:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a3e4:	b	1a584 <argp_parse@@Base+0xb68>
   1a3e8:	ldr	r1, [fp, #8]
   1a3ec:	cmp	r1, #0
   1a3f0:	beq	1a498 <argp_parse@@Base+0xa7c>
   1a3f4:	str	r0, [r1]
   1a3f8:	b	1a4e0 <argp_parse@@Base+0xac4>
   1a3fc:	mov	r1, #0
   1a400:	b	1a280 <argp_parse@@Base+0x864>
   1a404:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a408:	sub	r7, r1, #36	; 0x24
   1a40c:	cmp	r7, r4
   1a410:	bcc	1a48c <argp_parse@@Base+0xa70>
   1a414:	movw	r1, #6
   1a418:	movt	r1, #256	; 0x100
   1a41c:	sub	r6, r1, #5
   1a420:	b	1a46c <argp_parse@@Base+0xa50>
   1a424:	ldr	r0, [r7, #32]
   1a428:	mov	r1, #0
   1a42c:	mov	r2, sl
   1a430:	str	r0, [fp, #-120]	; 0xffffff88
   1a434:	ldr	r0, [r7, #24]
   1a438:	str	r0, [fp, #-128]	; 0xffffff80
   1a43c:	ldr	r0, [r7, #28]
   1a440:	str	r0, [fp, #-124]	; 0xffffff84
   1a444:	ldr	r0, [r7, #12]
   1a448:	str	r0, [fp, #-136]	; 0xffffff78
   1a44c:	mov	r0, r6
   1a450:	blx	r3
   1a454:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a458:	str	r1, [r7, #32]
   1a45c:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a460:	sub	r7, r7, #36	; 0x24
   1a464:	cmp	r7, r4
   1a468:	bcc	1a48c <argp_parse@@Base+0xa70>
   1a46c:	cmp	r0, #7
   1a470:	cmpne	r0, #0
   1a474:	bne	1a4c4 <argp_parse@@Base+0xaa8>
   1a478:	ldr	r3, [r7]
   1a47c:	cmp	r3, #0
   1a480:	bne	1a424 <argp_parse@@Base+0xa08>
   1a484:	mov	r0, #7
   1a488:	b	1a460 <argp_parse@@Base+0xa44>
   1a48c:	subs	r7, r0, #7
   1a490:	movne	r7, r0
   1a494:	b	1a4c8 <argp_parse@@Base+0xaac>
   1a498:	ldrb	r0, [fp, #-140]	; 0xffffff74
   1a49c:	tst	r0, #2
   1a4a0:	bne	1a2a8 <argp_parse@@Base+0x88c>
   1a4a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a4a8:	cmp	r0, #0
   1a4ac:	beq	1a2a8 <argp_parse@@Base+0x88c>
   1a4b0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1a4b4:	movw	r1, #61076	; 0xee94
   1a4b8:	movt	r1, #1
   1a4bc:	bl	11c44 <fprintf@plt>
   1a4c0:	b	1a2a8 <argp_parse@@Base+0x88c>
   1a4c4:	mov	r7, r0
   1a4c8:	ldr	r1, [fp, #8]
   1a4cc:	cmp	r1, #0
   1a4d0:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1a4d4:	strne	r0, [r1]
   1a4d8:	cmp	r7, #0
   1a4dc:	bne	1a2a0 <argp_parse@@Base+0x884>
   1a4e0:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a4e4:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a4e8:	mov	r7, #0
   1a4ec:	sub	r5, r0, #36	; 0x24
   1a4f0:	cmp	r5, r4
   1a4f4:	bcc	1a584 <argp_parse@@Base+0xb68>
   1a4f8:	movw	r1, #6
   1a4fc:	mov	r0, #0
   1a500:	movt	r1, #256	; 0x100
   1a504:	sub	r6, r1, #2
   1a508:	b	1a554 <argp_parse@@Base+0xb38>
   1a50c:	ldr	r0, [r5, #32]
   1a510:	mov	r1, #0
   1a514:	mov	r2, sl
   1a518:	str	r0, [fp, #-120]	; 0xffffff88
   1a51c:	ldr	r0, [r5, #24]
   1a520:	str	r0, [fp, #-128]	; 0xffffff80
   1a524:	ldr	r0, [r5, #28]
   1a528:	str	r0, [fp, #-124]	; 0xffffff84
   1a52c:	ldr	r0, [r5, #12]
   1a530:	str	r0, [fp, #-136]	; 0xffffff78
   1a534:	mov	r0, r6
   1a538:	blx	r3
   1a53c:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a540:	str	r1, [r5, #32]
   1a544:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a548:	sub	r5, r5, #36	; 0x24
   1a54c:	cmp	r5, r4
   1a550:	bcc	1a57c <argp_parse@@Base+0xb60>
   1a554:	cmp	r0, #7
   1a558:	cmpne	r0, #0
   1a55c:	bne	1a574 <argp_parse@@Base+0xb58>
   1a560:	ldr	r3, [r5]
   1a564:	cmp	r3, #0
   1a568:	bne	1a50c <argp_parse@@Base+0xaf0>
   1a56c:	mov	r0, #7
   1a570:	b	1a548 <argp_parse@@Base+0xb2c>
   1a574:	mov	r7, r0
   1a578:	b	1a584 <argp_parse@@Base+0xb68>
   1a57c:	subs	r7, r0, #7
   1a580:	movne	r7, r0
   1a584:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a588:	sub	r6, r0, #36	; 0x24
   1a58c:	cmp	r6, r4
   1a590:	bcc	1a5fc <argp_parse@@Base+0xbe0>
   1a594:	movw	r0, #6
   1a598:	movt	r0, #256	; 0x100
   1a59c:	add	r5, r0, #1
   1a5a0:	b	1a5b0 <argp_parse@@Base+0xb94>
   1a5a4:	sub	r6, r6, #36	; 0x24
   1a5a8:	cmp	r6, r4
   1a5ac:	bcc	1a5fc <argp_parse@@Base+0xbe0>
   1a5b0:	ldr	r3, [r6]
   1a5b4:	cmp	r3, #0
   1a5b8:	beq	1a5a4 <argp_parse@@Base+0xb88>
   1a5bc:	ldr	r0, [r6, #32]
   1a5c0:	mov	r1, #0
   1a5c4:	mov	r2, sl
   1a5c8:	str	r0, [fp, #-120]	; 0xffffff88
   1a5cc:	ldr	r0, [r6, #24]
   1a5d0:	str	r0, [fp, #-128]	; 0xffffff80
   1a5d4:	ldr	r0, [r6, #28]
   1a5d8:	str	r0, [fp, #-124]	; 0xffffff84
   1a5dc:	ldr	r0, [r6, #12]
   1a5e0:	str	r0, [fp, #-136]	; 0xffffff78
   1a5e4:	mov	r0, r5
   1a5e8:	blx	r3
   1a5ec:	ldr	r0, [fp, #-120]	; 0xffffff88
   1a5f0:	str	r0, [r6, #32]
   1a5f4:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a5f8:	b	1a5a4 <argp_parse@@Base+0xb88>
   1a5fc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a600:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1a604:	cmp	r7, #7
   1a608:	movweq	r7, #22
   1a60c:	mov	r0, r7
   1a610:	sub	sp, fp, #28
   1a614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a618:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1a61c:	ldr	r1, [r0, #12]
   1a620:	cmp	r1, r7
   1a624:	beq	1a654 <argp_parse@@Base+0xc38>
   1a628:	ldr	r1, [r0]
   1a62c:	cmp	r1, #0
   1a630:	beq	1a654 <argp_parse@@Base+0xc38>
   1a634:	add	r1, r0, #16
   1a638:	ldr	r0, [r0, #28]
   1a63c:	cmp	r0, r7
   1a640:	mov	r0, r1
   1a644:	bne	1a628 <argp_parse@@Base+0xc0c>
   1a648:	b	1a658 <argp_parse@@Base+0xc3c>
   1a64c:	mov	r1, #0
   1a650:	b	1a27c <argp_parse@@Base+0x860>
   1a654:	mov	r1, r0
   1a658:	ldr	r0, [r1]
   1a65c:	movw	r1, #61067	; 0xee8b
   1a660:	movw	r3, #60800	; 0xed80
   1a664:	movw	r2, #57256	; 0xdfa8
   1a668:	movt	r1, #1
   1a66c:	movt	r3, #1
   1a670:	movt	r2, #1
   1a674:	cmp	r0, #0
   1a678:	movne	r2, r0
   1a67c:	mov	r0, sl
   1a680:	b	1a250 <argp_parse@@Base+0x834>
   1a684:	mov	ip, r0
   1a688:	mov	r0, #0
   1a68c:	cmp	r1, #0
   1a690:	beq	1a6c0 <argp_parse@@Base+0xca4>
   1a694:	ldr	r3, [r1, #52]	; 0x34
   1a698:	ldr	r1, [r3, #48]	; 0x30
   1a69c:	ldr	r3, [r3, #52]	; 0x34
   1a6a0:	cmp	r1, r3
   1a6a4:	bxcs	lr
   1a6a8:	ldr	r2, [r1, #4]
   1a6ac:	cmp	r2, ip
   1a6b0:	beq	1a6bc <argp_parse@@Base+0xca0>
   1a6b4:	add	r1, r1, #36	; 0x24
   1a6b8:	b	1a6a0 <argp_parse@@Base+0xc84>
   1a6bc:	ldr	r0, [r1, #24]
   1a6c0:	bx	lr
   1a6c4:	push	{r4, r5, r6, sl, fp, lr}
   1a6c8:	add	fp, sp, #16
   1a6cc:	mov	r5, r2
   1a6d0:	mov	r6, r1
   1a6d4:	mov	r4, #7
   1a6d8:	cmn	r0, #3
   1a6dc:	bgt	1a700 <argp_parse@@Base+0xce4>
   1a6e0:	cmn	r0, #4
   1a6e4:	beq	1a72c <argp_parse@@Base+0xd10>
   1a6e8:	cmn	r0, #3
   1a6ec:	bne	1a7c8 <argp_parse@@Base+0xdac>
   1a6f0:	ldr	r1, [r5, #48]	; 0x30
   1a6f4:	mov	r0, r5
   1a6f8:	movw	r2, #513	; 0x201
   1a6fc:	b	1a71c <argp_parse@@Base+0xd00>
   1a700:	cmn	r0, #2
   1a704:	beq	1a788 <argp_parse@@Base+0xd6c>
   1a708:	cmp	r0, #63	; 0x3f
   1a70c:	bne	1a7c8 <argp_parse@@Base+0xdac>
   1a710:	ldr	r1, [r5, #48]	; 0x30
   1a714:	mov	r0, r5
   1a718:	movw	r2, #634	; 0x27a
   1a71c:	bl	17954 <argp_state_help@@Base>
   1a720:	mov	r4, #0
   1a724:	mov	r0, r4
   1a728:	pop	{r4, r5, r6, sl, fp, pc}
   1a72c:	movw	r0, #60997	; 0xee45
   1a730:	cmp	r6, #0
   1a734:	mov	r1, #0
   1a738:	mov	r2, #10
   1a73c:	mov	r4, #0
   1a740:	movt	r0, #1
   1a744:	movne	r0, r6
   1a748:	bl	119a4 <strtol@plt>
   1a74c:	movw	r5, #2560	; 0xa00
   1a750:	movt	r5, #3
   1a754:	str	r0, [r5]
   1a758:	ldr	r0, [r5]
   1a75c:	subs	r0, r0, #1
   1a760:	str	r0, [r5]
   1a764:	blt	1a7c8 <argp_parse@@Base+0xdac>
   1a768:	mov	r0, #1
   1a76c:	bl	11a88 <sleep@plt>
   1a770:	ldr	r0, [r5]
   1a774:	sub	r1, r0, #1
   1a778:	cmp	r0, #0
   1a77c:	str	r1, [r5]
   1a780:	bgt	1a768 <argp_parse@@Base+0xd4c>
   1a784:	b	1a7c8 <argp_parse@@Base+0xdac>
   1a788:	movw	r0, #1468	; 0x5bc
   1a78c:	movt	r0, #3
   1a790:	str	r6, [r0]
   1a794:	mov	r0, r6
   1a798:	bl	1ac74 <argp_parse@@Base+0x1258>
   1a79c:	movw	r1, #1464	; 0x5b8
   1a7a0:	str	r0, [r5, #40]	; 0x28
   1a7a4:	mov	r4, #0
   1a7a8:	movt	r1, #3
   1a7ac:	str	r0, [r1]
   1a7b0:	ldr	r0, [r5, #16]
   1a7b4:	and	r0, r0, #3
   1a7b8:	cmp	r0, #1
   1a7bc:	bne	1a7c8 <argp_parse@@Base+0xdac>
   1a7c0:	ldr	r0, [r5, #8]
   1a7c4:	str	r6, [r0]
   1a7c8:	mov	r0, r4
   1a7cc:	pop	{r4, r5, r6, sl, fp, pc}
   1a7d0:	push	{r4, sl, fp, lr}
   1a7d4:	add	fp, sp, #8
   1a7d8:	mov	r1, r0
   1a7dc:	mov	r0, #7
   1a7e0:	cmp	r1, #86	; 0x56
   1a7e4:	popne	{r4, sl, fp, pc}
   1a7e8:	movw	r0, #2564	; 0xa04
   1a7ec:	mov	r4, r2
   1a7f0:	movt	r0, #3
   1a7f4:	ldr	r2, [r0]
   1a7f8:	cmp	r2, #0
   1a7fc:	beq	1a810 <argp_parse@@Base+0xdf4>
   1a800:	ldr	r0, [r4, #48]	; 0x30
   1a804:	mov	r1, r4
   1a808:	blx	r2
   1a80c:	b	1a850 <argp_parse@@Base+0xe34>
   1a810:	movw	r0, #4240	; 0x1090
   1a814:	movt	r0, #3
   1a818:	ldr	r2, [r0]
   1a81c:	cmp	r2, #0
   1a820:	beq	1a838 <argp_parse@@Base+0xe1c>
   1a824:	ldr	r0, [r4, #48]	; 0x30
   1a828:	movw	r1, #61203	; 0xef13
   1a82c:	movt	r1, #1
   1a830:	bl	11c44 <fprintf@plt>
   1a834:	b	1a850 <argp_parse@@Base+0xe34>
   1a838:	movw	r1, #59892	; 0xe9f4
   1a83c:	movw	r2, #61024	; 0xee60
   1a840:	mov	r0, r4
   1a844:	movt	r1, #1
   1a848:	movt	r2, #1
   1a84c:	bl	17a10 <argp_error@@Base>
   1a850:	ldrb	r1, [r4, #16]
   1a854:	mov	r0, #0
   1a858:	tst	r1, #32
   1a85c:	beq	1a864 <argp_parse@@Base+0xe48>
   1a860:	pop	{r4, sl, fp, pc}
   1a864:	mov	r0, #0
   1a868:	bl	11c14 <exit@plt>
   1a86c:	push	{r4, r5, fp, lr}
   1a870:	add	fp, sp, #8
   1a874:	ldr	r2, [r0]
   1a878:	ldr	ip, [r0, #16]
   1a87c:	mov	r4, r1
   1a880:	cmp	r2, #0
   1a884:	beq	1a8f0 <argp_parse@@Base+0xed4>
   1a888:	ldr	r0, [r4, #8]
   1a88c:	mov	r3, #0
   1a890:	add	r0, r0, #1
   1a894:	str	r0, [r4, #8]
   1a898:	mov	r0, #0
   1a89c:	b	1a8a8 <argp_parse@@Base+0xe8c>
   1a8a0:	add	r3, r3, #3
   1a8a4:	add	r0, r0, #1
   1a8a8:	add	r5, r2, r3, lsl #3
   1a8ac:	ldr	r1, [r5, #4]
   1a8b0:	cmp	r1, #0
   1a8b4:	bne	1a8a0 <argp_parse@@Base+0xe84>
   1a8b8:	ldr	r1, [r2, r3, lsl #3]
   1a8bc:	cmp	r1, #0
   1a8c0:	bne	1a8a0 <argp_parse@@Base+0xe84>
   1a8c4:	ldr	r1, [r5, #16]
   1a8c8:	cmp	r1, #0
   1a8cc:	bne	1a8a0 <argp_parse@@Base+0xe84>
   1a8d0:	ldr	r1, [r5, #20]
   1a8d4:	cmp	r1, #0
   1a8d8:	bne	1a8a0 <argp_parse@@Base+0xe84>
   1a8dc:	ldr	r1, [r4]
   1a8e0:	mov	r2, r4
   1a8e4:	add	r1, r1, r3
   1a8e8:	str	r1, [r2], #4
   1a8ec:	b	1a904 <argp_parse@@Base+0xee8>
   1a8f0:	ldr	r0, [r0, #4]
   1a8f4:	cmp	r0, #0
   1a8f8:	beq	1a910 <argp_parse@@Base+0xef4>
   1a8fc:	add	r2, r4, #8
   1a900:	mov	r0, #1
   1a904:	ldr	r1, [r2]
   1a908:	add	r0, r1, r0
   1a90c:	str	r0, [r2]
   1a910:	cmp	ip, #0
   1a914:	beq	1a948 <argp_parse@@Base+0xf2c>
   1a918:	ldr	r0, [ip]
   1a91c:	cmp	r0, #0
   1a920:	popeq	{r4, r5, fp, pc}
   1a924:	add	r5, ip, #16
   1a928:	mov	r1, r4
   1a92c:	bl	1a86c <argp_parse@@Base+0xe50>
   1a930:	ldr	r0, [r4, #12]
   1a934:	add	r0, r0, #1
   1a938:	str	r0, [r4, #12]
   1a93c:	ldr	r0, [r5], #16
   1a940:	cmp	r0, #0
   1a944:	bne	1a928 <argp_parse@@Base+0xf0c>
   1a948:	pop	{r4, r5, fp, pc}
   1a94c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a950:	add	fp, sp, #28
   1a954:	sub	sp, sp, #28
   1a958:	ldr	sl, [r0]
   1a95c:	ldr	r5, [r0, #16]
   1a960:	ldr	r6, [fp, #8]
   1a964:	mov	r7, r3
   1a968:	cmp	sl, #0
   1a96c:	beq	1ab3c <argp_parse@@Base+0x1120>
   1a970:	str	r0, [sp, #8]
   1a974:	add	r0, sp, #16
   1a978:	mov	r8, sl
   1a97c:	str	r2, [sp, #12]
   1a980:	stm	r0, {r1, r5, r7}
   1a984:	b	1a9f8 <argp_parse@@Base+0xfdc>
   1a988:	ldr	r0, [r6, #8]
   1a98c:	str	r5, [r0]
   1a990:	ldr	r1, [sl, #8]
   1a994:	cmp	r1, #0
   1a998:	beq	1ab1c <argp_parse@@Base+0x1100>
   1a99c:	ldrb	r1, [sl, #12]
   1a9a0:	tst	r1, #1
   1a9a4:	mov	r1, #2
   1a9a8:	movweq	r1, #1
   1a9ac:	mov	r5, #0
   1a9b0:	stmib	r0, {r1, r5}
   1a9b4:	ldr	r1, [r8, #4]
   1a9b8:	ldr	r2, [r7, #48]	; 0x30
   1a9bc:	ldr	r3, [sp, #24]
   1a9c0:	cmp	r1, #0
   1a9c4:	sub	r2, r3, r2
   1a9c8:	mov	r3, #956301312	; 0x39000000
   1a9cc:	ldreq	r1, [sl, #4]
   1a9d0:	lsr	r2, r2, #2
   1a9d4:	mul	r2, r2, r3
   1a9d8:	bic	r1, r1, #-16777216	; 0xff000000
   1a9dc:	orr	r1, r2, r1
   1a9e0:	add	r1, r1, #16777216	; 0x1000000
   1a9e4:	str	r1, [r0, #12]
   1a9e8:	add	r1, r0, #16
   1a9ec:	str	r1, [r6, #8]
   1a9f0:	str	r5, [r0, #16]
   1a9f4:	add	r8, r8, #24
   1a9f8:	ldr	r5, [r8, #4]
   1a9fc:	cmp	r5, #0
   1aa00:	bne	1aa28 <argp_parse@@Base+0x100c>
   1aa04:	ldr	r0, [r8]
   1aa08:	cmp	r0, #0
   1aa0c:	bne	1aa28 <argp_parse@@Base+0x100c>
   1aa10:	ldr	r0, [r8, #16]
   1aa14:	cmp	r0, #0
   1aa18:	bne	1aa28 <argp_parse@@Base+0x100c>
   1aa1c:	ldr	r0, [r8, #20]
   1aa20:	cmp	r0, #0
   1aa24:	beq	1ab24 <argp_parse@@Base+0x1108>
   1aa28:	ldr	r0, [r8, #12]
   1aa2c:	tst	r0, #4
   1aa30:	moveq	sl, r8
   1aa34:	ldrb	r1, [sl, #12]
   1aa38:	tst	r1, #8
   1aa3c:	bne	1a9f4 <argp_parse@@Base+0xfd8>
   1aa40:	sub	r1, r5, #1
   1aa44:	cmp	r1, #254	; 0xfe
   1aa48:	bhi	1aac8 <argp_parse@@Base+0x10ac>
   1aa4c:	ands	r0, r0, #8
   1aa50:	bne	1aac8 <argp_parse@@Base+0x10ac>
   1aa54:	bl	11bfc <__ctype_b_loc@plt>
   1aa58:	ldr	r0, [r0]
   1aa5c:	add	r0, r0, r5, lsl #1
   1aa60:	ldrb	r0, [r0, #1]
   1aa64:	tst	r0, #64	; 0x40
   1aa68:	beq	1aac8 <argp_parse@@Base+0x10ac>
   1aa6c:	ldr	r0, [r6, #4]
   1aa70:	add	r1, r0, #1
   1aa74:	str	r1, [r6, #4]
   1aa78:	strb	r5, [r0]
   1aa7c:	ldr	r0, [sl, #8]
   1aa80:	cmp	r0, #0
   1aa84:	beq	1aabc <argp_parse@@Base+0x10a0>
   1aa88:	ldr	r0, [r6, #4]
   1aa8c:	add	r1, r0, #1
   1aa90:	str	r1, [r6, #4]
   1aa94:	mov	r1, #58	; 0x3a
   1aa98:	strb	r1, [r0]
   1aa9c:	ldrb	r0, [sl, #12]
   1aaa0:	tst	r0, #1
   1aaa4:	beq	1aabc <argp_parse@@Base+0x10a0>
   1aaa8:	ldr	r0, [r6, #4]
   1aaac:	add	r1, r0, #1
   1aab0:	str	r1, [r6, #4]
   1aab4:	mov	r1, #58	; 0x3a
   1aab8:	strb	r1, [r0]
   1aabc:	ldr	r0, [r6, #4]
   1aac0:	mov	r1, #0
   1aac4:	strb	r1, [r0]
   1aac8:	ldr	r5, [r8]
   1aacc:	cmp	r5, #0
   1aad0:	beq	1a9f4 <argp_parse@@Base+0xfd8>
   1aad4:	ldr	r7, [r6]
   1aad8:	ldr	r9, [r7, #8]
   1aadc:	ldr	r0, [r9]
   1aae0:	cmp	r0, #0
   1aae4:	beq	1a988 <argp_parse@@Base+0xf6c>
   1aae8:	mov	r4, r9
   1aaec:	mov	r1, r5
   1aaf0:	bl	11998 <strcmp@plt>
   1aaf4:	cmp	r0, #0
   1aaf8:	beq	1ab0c <argp_parse@@Base+0x10f0>
   1aafc:	ldr	r0, [r4, #16]!
   1ab00:	cmp	r0, #0
   1ab04:	bne	1aaec <argp_parse@@Base+0x10d0>
   1ab08:	b	1a988 <argp_parse@@Base+0xf6c>
   1ab0c:	sub	r0, r4, r9
   1ab10:	cmn	r0, #1
   1ab14:	bgt	1a9f4 <argp_parse@@Base+0xfd8>
   1ab18:	b	1a988 <argp_parse@@Base+0xf6c>
   1ab1c:	mov	r1, #0
   1ab20:	b	1a9ac <argp_parse@@Base+0xf90>
   1ab24:	ldr	r0, [sp, #8]
   1ab28:	add	r7, sp, #16
   1ab2c:	ldr	r2, [sp, #12]
   1ab30:	ldm	r7, {r1, r5, r7}
   1ab34:	ldr	r3, [r0, #4]
   1ab38:	b	1ab48 <argp_parse@@Base+0x112c>
   1ab3c:	ldr	r3, [r0, #4]
   1ab40:	cmp	r3, #0
   1ab44:	beq	1abec <argp_parse@@Base+0x11d0>
   1ab48:	str	r0, [r7, #4]
   1ab4c:	str	r3, [r7]
   1ab50:	mov	r0, #0
   1ab54:	cmp	r5, #0
   1ab58:	add	ip, r7, #12
   1ab5c:	ldr	r3, [r6, #4]
   1ab60:	str	r0, [r7, #32]
   1ab64:	str	r0, [r7, #24]
   1ab68:	stm	ip, {r0, r1, r2}
   1ab6c:	str	r0, [r7, #28]
   1ab70:	str	r3, [r7, #8]
   1ab74:	beq	1ab9c <argp_parse@@Base+0x1180>
   1ab78:	ldr	r1, [r5, r0, lsl #2]
   1ab7c:	add	r0, r0, #4
   1ab80:	cmp	r1, #0
   1ab84:	bne	1ab78 <argp_parse@@Base+0x115c>
   1ab88:	ldr	r1, [r6, #12]
   1ab8c:	add	r0, r1, r0
   1ab90:	str	r1, [r7, #28]
   1ab94:	sub	r0, r0, #4
   1ab98:	str	r0, [r6, #12]
   1ab9c:	add	r3, r7, #36	; 0x24
   1aba0:	cmp	r5, #0
   1aba4:	beq	1abe0 <argp_parse@@Base+0x11c4>
   1aba8:	ldr	r0, [r5]
   1abac:	cmp	r0, #0
   1abb0:	beq	1abe0 <argp_parse@@Base+0x11c4>
   1abb4:	add	r4, r5, #16
   1abb8:	mov	r5, #0
   1abbc:	mov	r1, r7
   1abc0:	mov	r2, r5
   1abc4:	str	r6, [sp]
   1abc8:	bl	1a94c <argp_parse@@Base+0xf30>
   1abcc:	mov	r3, r0
   1abd0:	ldr	r0, [r4, r5, lsl #4]
   1abd4:	add	r5, r5, #1
   1abd8:	cmp	r0, #0
   1abdc:	bne	1abbc <argp_parse@@Base+0x11a0>
   1abe0:	mov	r0, r3
   1abe4:	sub	sp, fp, #28
   1abe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abec:	mov	r3, r7
   1abf0:	mov	r7, #0
   1abf4:	cmp	r5, #0
   1abf8:	bne	1aba8 <argp_parse@@Base+0x118c>
   1abfc:	b	1abe0 <argp_parse@@Base+0x11c4>
   1ac00:	movw	r2, #2568	; 0xa08
   1ac04:	movt	r2, #3
   1ac08:	str	r0, [r2]
   1ac0c:	movw	r0, #2564	; 0xa04
   1ac10:	movw	r2, #44080	; 0xac30
   1ac14:	movt	r0, #3
   1ac18:	movt	r2, #1
   1ac1c:	str	r2, [r0]
   1ac20:	movw	r0, #2572	; 0xa0c
   1ac24:	movt	r0, #3
   1ac28:	str	r1, [r0]
   1ac2c:	bx	lr
   1ac30:	push	{fp, lr}
   1ac34:	mov	fp, sp
   1ac38:	sub	sp, sp, #8
   1ac3c:	movw	r2, #2572	; 0xa0c
   1ac40:	movw	r1, #2568	; 0xa08
   1ac44:	movw	r3, #61114	; 0xeeba
   1ac48:	movt	r2, #3
   1ac4c:	movt	r1, #3
   1ac50:	movt	r3, #1
   1ac54:	ldr	r2, [r2]
   1ac58:	ldr	r1, [r1]
   1ac5c:	str	r2, [sp]
   1ac60:	movw	r2, #61100	; 0xeeac
   1ac64:	movt	r2, #1
   1ac68:	bl	1b488 <argp_parse@@Base+0x1a6c>
   1ac6c:	mov	sp, fp
   1ac70:	pop	{fp, pc}
   1ac74:	sub	r0, r0, #1
   1ac78:	ldrb	r3, [r0, #1]!
   1ac7c:	cmp	r3, #47	; 0x2f
   1ac80:	beq	1ac78 <argp_parse@@Base+0x125c>
   1ac84:	mov	r2, #0
   1ac88:	mov	r1, r0
   1ac8c:	b	1ac98 <argp_parse@@Base+0x127c>
   1ac90:	ldrb	r3, [r1, #1]!
   1ac94:	mov	r2, #1
   1ac98:	uxtb	r3, r3
   1ac9c:	cmp	r3, #47	; 0x2f
   1aca0:	beq	1ac90 <argp_parse@@Base+0x1274>
   1aca4:	cmp	r3, #0
   1aca8:	bxeq	lr
   1acac:	tst	r2, #1
   1acb0:	mov	r2, #0
   1acb4:	movne	r0, r1
   1acb8:	ldrb	r3, [r1, #1]!
   1acbc:	b	1ac98 <argp_parse@@Base+0x127c>
   1acc0:	push	{r4, sl, fp, lr}
   1acc4:	add	fp, sp, #8
   1acc8:	mov	r4, r0
   1accc:	bl	11c20 <strlen@plt>
   1acd0:	mov	r1, r0
   1acd4:	sub	r2, r4, #1
   1acd8:	mov	r0, r1
   1acdc:	cmp	r1, #2
   1ace0:	bcc	1acf4 <argp_parse@@Base+0x12d8>
   1ace4:	ldrb	r3, [r2, r0]
   1ace8:	sub	r1, r0, #1
   1acec:	cmp	r3, #47	; 0x2f
   1acf0:	beq	1acd8 <argp_parse@@Base+0x12bc>
   1acf4:	pop	{r4, sl, fp, pc}
   1acf8:	sub	sp, sp, #8
   1acfc:	push	{r4, r5, r6, r7, fp, lr}
   1ad00:	add	fp, sp, #16
   1ad04:	sub	sp, sp, #8
   1ad08:	mov	r5, r0
   1ad0c:	add	r0, fp, #8
   1ad10:	cmp	r1, #11
   1ad14:	str	r2, [fp, #8]
   1ad18:	str	r3, [fp, #12]
   1ad1c:	str	r0, [sp, #4]
   1ad20:	bhi	1ad5c <argp_parse@@Base+0x1340>
   1ad24:	mov	r0, #1
   1ad28:	movw	r2, #1300	; 0x514
   1ad2c:	tst	r2, r0, lsl r1
   1ad30:	bne	1ae1c <argp_parse@@Base+0x1400>
   1ad34:	movw	r2, #2570	; 0xa0a
   1ad38:	tst	r2, r0, lsl r1
   1ad3c:	bne	1ad84 <argp_parse@@Base+0x1368>
   1ad40:	cmp	r1, #0
   1ad44:	bne	1ad5c <argp_parse@@Base+0x1340>
   1ad48:	ldr	r0, [sp, #4]
   1ad4c:	add	r1, r0, #4
   1ad50:	str	r1, [sp, #4]
   1ad54:	mov	r1, #0
   1ad58:	b	1ae28 <argp_parse@@Base+0x140c>
   1ad5c:	sub	r0, r1, #1024	; 0x400
   1ad60:	cmp	r0, #10
   1ad64:	bhi	1ae1c <argp_parse@@Base+0x1400>
   1ad68:	mov	r2, #1
   1ad6c:	movw	r3, #645	; 0x285
   1ad70:	tst	r3, r2, lsl r0
   1ad74:	bne	1ae1c <argp_parse@@Base+0x1400>
   1ad78:	movw	r3, #1282	; 0x502
   1ad7c:	tst	r3, r2, lsl r0
   1ad80:	beq	1ad90 <argp_parse@@Base+0x1374>
   1ad84:	mov	r0, r5
   1ad88:	bl	11cd4 <fcntl64@plt>
   1ad8c:	b	1ae34 <argp_parse@@Base+0x1418>
   1ad90:	cmp	r0, #6
   1ad94:	bne	1ae1c <argp_parse@@Base+0x1400>
   1ad98:	ldr	r0, [sp, #4]
   1ad9c:	movw	r7, #2576	; 0xa10
   1ada0:	movt	r7, #3
   1ada4:	add	r1, r0, #4
   1ada8:	str	r1, [sp, #4]
   1adac:	ldr	r6, [r0]
   1adb0:	ldr	r0, [r7]
   1adb4:	cmp	r0, #0
   1adb8:	bmi	1ae58 <argp_parse@@Base+0x143c>
   1adbc:	mov	r0, r5
   1adc0:	movw	r1, #1030	; 0x406
   1adc4:	mov	r2, r6
   1adc8:	bl	11cd4 <fcntl64@plt>
   1adcc:	mov	r4, r0
   1add0:	cmn	r0, #1
   1add4:	bgt	1ae4c <argp_parse@@Base+0x1430>
   1add8:	bl	11c50 <__errno_location@plt>
   1addc:	ldr	r0, [r0]
   1ade0:	cmp	r0, #22
   1ade4:	bne	1ae4c <argp_parse@@Base+0x1430>
   1ade8:	mov	r0, r5
   1adec:	mov	r1, #0
   1adf0:	mov	r2, r6
   1adf4:	bl	11cd4 <fcntl64@plt>
   1adf8:	mov	r4, r0
   1adfc:	cmp	r0, #0
   1ae00:	bmi	1ae38 <argp_parse@@Base+0x141c>
   1ae04:	mvn	r0, #0
   1ae08:	str	r0, [r7]
   1ae0c:	mov	r0, #1
   1ae10:	cmp	r0, #0
   1ae14:	bne	1ae84 <argp_parse@@Base+0x1468>
   1ae18:	b	1ae38 <argp_parse@@Base+0x141c>
   1ae1c:	ldr	r0, [sp, #4]
   1ae20:	add	r2, r0, #4
   1ae24:	str	r2, [sp, #4]
   1ae28:	ldr	r2, [r0]
   1ae2c:	mov	r0, r5
   1ae30:	bl	11cd4 <fcntl64@plt>
   1ae34:	mov	r4, r0
   1ae38:	mov	r0, r4
   1ae3c:	sub	sp, fp, #16
   1ae40:	pop	{r4, r5, r6, r7, fp, lr}
   1ae44:	add	sp, sp, #8
   1ae48:	bx	lr
   1ae4c:	mov	r0, #1
   1ae50:	str	r0, [r7]
   1ae54:	b	1ae38 <argp_parse@@Base+0x141c>
   1ae58:	mov	r0, r5
   1ae5c:	mov	r1, #0
   1ae60:	mov	r2, r6
   1ae64:	bl	11cd4 <fcntl64@plt>
   1ae68:	mov	r4, r0
   1ae6c:	ldr	r0, [r7]
   1ae70:	add	r0, r0, #1
   1ae74:	clz	r0, r0
   1ae78:	lsr	r0, r0, #5
   1ae7c:	cmp	r0, #0
   1ae80:	beq	1ae38 <argp_parse@@Base+0x141c>
   1ae84:	cmp	r4, #0
   1ae88:	bmi	1ae38 <argp_parse@@Base+0x141c>
   1ae8c:	mov	r0, r4
   1ae90:	mov	r1, #1
   1ae94:	bl	11cd4 <fcntl64@plt>
   1ae98:	cmp	r0, #0
   1ae9c:	bmi	1aeb8 <argp_parse@@Base+0x149c>
   1aea0:	orr	r2, r0, #1
   1aea4:	mov	r0, r4
   1aea8:	mov	r1, #2
   1aeac:	bl	11cd4 <fcntl64@plt>
   1aeb0:	cmn	r0, #1
   1aeb4:	bne	1ae38 <argp_parse@@Base+0x141c>
   1aeb8:	bl	11c50 <__errno_location@plt>
   1aebc:	ldr	r6, [r0]
   1aec0:	mov	r5, r0
   1aec4:	mov	r0, r4
   1aec8:	bl	11e00 <close@plt>
   1aecc:	str	r6, [r5]
   1aed0:	mvn	r4, #0
   1aed4:	b	1ae38 <argp_parse@@Base+0x141c>
   1aed8:	push	{r4, r5, r6, sl, fp, lr}
   1aedc:	add	fp, sp, #16
   1aee0:	mov	r4, r0
   1aee4:	bl	11c50 <__errno_location@plt>
   1aee8:	ldr	r6, [r0]
   1aeec:	mov	r5, r0
   1aef0:	mov	r0, r4
   1aef4:	bl	11a1c <free@plt>
   1aef8:	str	r6, [r5]
   1aefc:	pop	{r4, r5, r6, sl, fp, pc}
   1af00:	push	{fp, lr}
   1af04:	mov	fp, sp
   1af08:	sub	sp, sp, #16
   1af0c:	mov	ip, #0
   1af10:	str	ip, [sp, #8]
   1af14:	str	ip, [sp, #4]
   1af18:	ldr	ip, [fp, #8]
   1af1c:	str	ip, [sp]
   1af20:	bl	1d81c <argp_parse@@Base+0x3e00>
   1af24:	mov	sp, fp
   1af28:	pop	{fp, pc}
   1af2c:	push	{fp, lr}
   1af30:	mov	fp, sp
   1af34:	sub	sp, sp, #16
   1af38:	mov	ip, #0
   1af3c:	str	ip, [sp, #12]
   1af40:	str	ip, [sp, #4]
   1af44:	ldr	ip, [fp, #12]
   1af48:	str	ip, [sp, #8]
   1af4c:	ldr	ip, [fp, #8]
   1af50:	str	ip, [sp]
   1af54:	bl	1c580 <argp_parse@@Base+0x2b64>
   1af58:	mov	sp, fp
   1af5c:	pop	{fp, pc}
   1af60:	push	{fp, lr}
   1af64:	mov	fp, sp
   1af68:	sub	sp, sp, #16
   1af6c:	mov	ip, #0
   1af70:	str	ip, [sp, #8]
   1af74:	mov	ip, #1
   1af78:	str	ip, [sp, #4]
   1af7c:	ldr	ip, [fp, #8]
   1af80:	str	ip, [sp]
   1af84:	bl	1d81c <argp_parse@@Base+0x3e00>
   1af88:	mov	sp, fp
   1af8c:	pop	{fp, pc}
   1af90:	push	{fp, lr}
   1af94:	mov	fp, sp
   1af98:	sub	sp, sp, #16
   1af9c:	mov	ip, #0
   1afa0:	str	ip, [sp, #12]
   1afa4:	mov	ip, #1
   1afa8:	str	ip, [sp, #4]
   1afac:	ldr	ip, [fp, #12]
   1afb0:	str	ip, [sp, #8]
   1afb4:	ldr	ip, [fp, #8]
   1afb8:	str	ip, [sp]
   1afbc:	bl	1c580 <argp_parse@@Base+0x2b64>
   1afc0:	mov	sp, fp
   1afc4:	pop	{fp, pc}
   1afc8:	push	{r4, r5, fp, lr}
   1afcc:	add	fp, sp, #8
   1afd0:	cmp	r0, #0
   1afd4:	beq	1b068 <argp_parse@@Base+0x164c>
   1afd8:	mov	r1, #47	; 0x2f
   1afdc:	mov	r4, r0
   1afe0:	bl	11d28 <strrchr@plt>
   1afe4:	cmp	r0, #0
   1afe8:	mov	r5, r4
   1afec:	addne	r5, r0, #1
   1aff0:	sub	r0, r5, r4
   1aff4:	cmp	r0, #7
   1aff8:	blt	1b04c <argp_parse@@Base+0x1630>
   1affc:	movw	r1, #61183	; 0xeeff
   1b000:	sub	r0, r5, #7
   1b004:	mov	r2, #7
   1b008:	movt	r1, #1
   1b00c:	bl	11ddc <strncmp@plt>
   1b010:	cmp	r0, #0
   1b014:	bne	1b04c <argp_parse@@Base+0x1630>
   1b018:	movw	r1, #61191	; 0xef07
   1b01c:	mov	r0, r5
   1b020:	mov	r2, #3
   1b024:	movt	r1, #1
   1b028:	bl	11ddc <strncmp@plt>
   1b02c:	cmp	r0, #0
   1b030:	beq	1b03c <argp_parse@@Base+0x1620>
   1b034:	mov	r4, r5
   1b038:	b	1b04c <argp_parse@@Base+0x1630>
   1b03c:	movw	r0, #1464	; 0x5b8
   1b040:	add	r4, r5, #3
   1b044:	movt	r0, #3
   1b048:	str	r4, [r0]
   1b04c:	movw	r0, #1468	; 0x5bc
   1b050:	movt	r0, #3
   1b054:	str	r4, [r0]
   1b058:	movw	r0, #2580	; 0xa14
   1b05c:	movt	r0, #3
   1b060:	str	r4, [r0]
   1b064:	pop	{r4, r5, fp, pc}
   1b068:	movw	r0, #1472	; 0x5c0
   1b06c:	mov	r1, #55	; 0x37
   1b070:	mov	r2, #1
   1b074:	movt	r0, #3
   1b078:	ldr	r3, [r0]
   1b07c:	movw	r0, #61127	; 0xeec7
   1b080:	movt	r0, #1
   1b084:	bl	11b3c <fwrite@plt>
   1b088:	bl	11de8 <abort@plt>
   1b08c:	push	{r4, r5, fp, lr}
   1b090:	add	fp, sp, #8
   1b094:	mov	r5, r0
   1b098:	mov	r0, #33	; 0x21
   1b09c:	bl	1b7cc <argp_parse@@Base+0x1db0>
   1b0a0:	add	r1, r5, #44	; 0x2c
   1b0a4:	mov	r2, #32
   1b0a8:	mov	r4, r0
   1b0ac:	bl	11c98 <strncpy@plt>
   1b0b0:	mov	r5, #0
   1b0b4:	strb	r5, [r0, #32]
   1b0b8:	bl	11c20 <strlen@plt>
   1b0bc:	cmp	r0, #1
   1b0c0:	blt	1b0e8 <argp_parse@@Base+0x16cc>
   1b0c4:	add	r1, r4, r0
   1b0c8:	mov	r0, r1
   1b0cc:	ldrb	r2, [r0, #-1]!
   1b0d0:	cmp	r2, #32
   1b0d4:	bne	1b0e8 <argp_parse@@Base+0x16cc>
   1b0d8:	strb	r5, [r1, #-1]
   1b0dc:	cmp	r4, r0
   1b0e0:	mov	r1, r0
   1b0e4:	bcc	1b0cc <argp_parse@@Base+0x16b0>
   1b0e8:	mov	r0, r4
   1b0ec:	pop	{r4, r5, fp, pc}
   1b0f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0f4:	add	fp, sp, #28
   1b0f8:	sub	sp, sp, #20
   1b0fc:	mov	r6, #0
   1b100:	mov	r5, r3
   1b104:	str	r2, [sp, #12]
   1b108:	str	r1, [sp, #8]
   1b10c:	str	r6, [sp, #16]
   1b110:	bl	119ec <utmpxname@plt>
   1b114:	bl	11ab8 <setutxent@plt>
   1b118:	bl	11df4 <getutxent@plt>
   1b11c:	cmp	r0, #0
   1b120:	beq	1b204 <argp_parse@@Base+0x17e8>
   1b124:	mov	r4, r0
   1b128:	and	r7, r5, #1
   1b12c:	and	r8, r5, #2
   1b130:	mov	r5, #0
   1b134:	mov	r9, #384	; 0x180
   1b138:	add	sl, sp, #16
   1b13c:	mov	r6, #0
   1b140:	b	1b16c <argp_parse@@Base+0x1750>
   1b144:	add	r0, r5, r5, lsl #1
   1b148:	mov	r1, r4
   1b14c:	mov	r2, #384	; 0x180
   1b150:	add	r0, r6, r0, lsl #7
   1b154:	bl	11a58 <memcpy@plt>
   1b158:	add	r5, r5, #1
   1b15c:	bl	11df4 <getutxent@plt>
   1b160:	mov	r4, r0
   1b164:	cmp	r0, #0
   1b168:	beq	1b208 <argp_parse@@Base+0x17ec>
   1b16c:	ldrb	r0, [r4, #44]	; 0x2c
   1b170:	cmp	r0, #0
   1b174:	mov	r0, #0
   1b178:	beq	1b18c <argp_parse@@Base+0x1770>
   1b17c:	ldrh	r0, [r4]
   1b180:	sub	r0, r0, #7
   1b184:	clz	r0, r0
   1b188:	lsr	r0, r0, #5
   1b18c:	cmp	r8, #0
   1b190:	beq	1b19c <argp_parse@@Base+0x1780>
   1b194:	cmp	r0, #0
   1b198:	beq	1b15c <argp_parse@@Base+0x1740>
   1b19c:	cmp	r7, #0
   1b1a0:	beq	1b1d8 <argp_parse@@Base+0x17bc>
   1b1a4:	eors	r0, r0, #1
   1b1a8:	bne	1b1d8 <argp_parse@@Base+0x17bc>
   1b1ac:	ldr	r0, [r4, #4]
   1b1b0:	cmp	r0, #1
   1b1b4:	blt	1b1d8 <argp_parse@@Base+0x17bc>
   1b1b8:	mov	r1, #0
   1b1bc:	bl	11bf0 <kill@plt>
   1b1c0:	cmn	r0, #1
   1b1c4:	bgt	1b1d8 <argp_parse@@Base+0x17bc>
   1b1c8:	bl	11c50 <__errno_location@plt>
   1b1cc:	ldr	r0, [r0]
   1b1d0:	cmp	r0, #3
   1b1d4:	beq	1b15c <argp_parse@@Base+0x1740>
   1b1d8:	ldr	r0, [sp, #16]
   1b1dc:	cmp	r5, r0
   1b1e0:	bne	1b144 <argp_parse@@Base+0x1728>
   1b1e4:	mov	r0, r6
   1b1e8:	mov	r1, sl
   1b1ec:	mov	r2, #1
   1b1f0:	mvn	r3, #0
   1b1f4:	str	r9, [sp]
   1b1f8:	bl	1b9fc <argp_parse@@Base+0x1fe0>
   1b1fc:	mov	r6, r0
   1b200:	b	1b144 <argp_parse@@Base+0x1728>
   1b204:	mov	r5, #0
   1b208:	bl	11cec <endutxent@plt>
   1b20c:	ldr	r0, [sp, #8]
   1b210:	str	r5, [r0]
   1b214:	ldr	r0, [sp, #12]
   1b218:	str	r6, [r0]
   1b21c:	mov	r0, #0
   1b220:	sub	sp, fp, #28
   1b224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b228:	push	{r4, r5, r6, r7, fp, lr}
   1b22c:	add	fp, sp, #16
   1b230:	sub	sp, sp, #32
   1b234:	ldr	r7, [fp, #12]
   1b238:	ldr	r6, [fp, #8]
   1b23c:	mov	r4, r2
   1b240:	mov	r5, r0
   1b244:	cmp	r1, #0
   1b248:	beq	1b268 <argp_parse@@Base+0x184c>
   1b24c:	mov	r2, r1
   1b250:	movw	r1, #61195	; 0xef0b
   1b254:	str	r3, [sp]
   1b258:	mov	r0, r5
   1b25c:	mov	r3, r4
   1b260:	movt	r1, #1
   1b264:	b	1b278 <argp_parse@@Base+0x185c>
   1b268:	movw	r1, #61207	; 0xef17
   1b26c:	mov	r0, r5
   1b270:	mov	r2, r4
   1b274:	movt	r1, #1
   1b278:	bl	11c44 <fprintf@plt>
   1b27c:	movw	r1, #61971	; 0xf213
   1b280:	movw	r2, #61214	; 0xef1e
   1b284:	mov	r0, r5
   1b288:	movw	r3, #2022	; 0x7e6
   1b28c:	movt	r1, #1
   1b290:	movt	r2, #1
   1b294:	bl	11c44 <fprintf@plt>
   1b298:	mov	r0, #10
   1b29c:	mov	r1, r5
   1b2a0:	bl	11d40 <fputc@plt>
   1b2a4:	movw	r1, #61218	; 0xef22
   1b2a8:	movw	r2, #61389	; 0xefcd
   1b2ac:	mov	r0, r5
   1b2b0:	movt	r1, #1
   1b2b4:	movt	r2, #1
   1b2b8:	bl	11c44 <fprintf@plt>
   1b2bc:	mov	r0, #10
   1b2c0:	mov	r1, r5
   1b2c4:	bl	11d40 <fputc@plt>
   1b2c8:	cmp	r7, #9
   1b2cc:	bhi	1b308 <argp_parse@@Base+0x18ec>
   1b2d0:	add	r0, pc, #0
   1b2d4:	ldr	pc, [r0, r7, lsl #2]
   1b2d8:	andeq	fp, r1, r0, lsl #6
   1b2dc:	andeq	fp, r1, ip, lsr r3
   1b2e0:	andeq	fp, r1, r8, asr r3
   1b2e4:	andeq	fp, r1, r4, ror r3
   1b2e8:	andeq	fp, r1, ip, lsl #7
   1b2ec:	andeq	fp, r1, r8, lsr #7
   1b2f0:	andeq	fp, r1, r4, asr #7
   1b2f4:	andeq	fp, r1, r8, ror #7
   1b2f8:	andeq	fp, r1, r8, asr #8
   1b2fc:	andeq	fp, r1, r4, lsl r4
   1b300:	sub	sp, fp, #16
   1b304:	pop	{r4, r5, r6, r7, fp, pc}
   1b308:	add	r7, r6, #8
   1b30c:	add	lr, r6, #20
   1b310:	ldm	r6, {r2, r3}
   1b314:	ldr	r6, [r6, #32]
   1b318:	ldm	r7, {r0, r1, r7}
   1b31c:	ldm	lr, {r4, ip, lr}
   1b320:	stm	sp, {r0, r1, r7}
   1b324:	movw	r1, #61742	; 0xf12e
   1b328:	add	r0, sp, #12
   1b32c:	stm	r0, {r4, ip, lr}
   1b330:	str	r6, [sp, #24]
   1b334:	movt	r1, #1
   1b338:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b33c:	ldr	r2, [r6]
   1b340:	movw	r1, #61423	; 0xefef
   1b344:	mov	r0, r5
   1b348:	movt	r1, #1
   1b34c:	sub	sp, fp, #16
   1b350:	pop	{r4, r5, r6, r7, fp, lr}
   1b354:	b	11c44 <fprintf@plt>
   1b358:	ldm	r6, {r2, r3}
   1b35c:	movw	r1, #61439	; 0xefff
   1b360:	mov	r0, r5
   1b364:	movt	r1, #1
   1b368:	sub	sp, fp, #16
   1b36c:	pop	{r4, r5, r6, r7, fp, lr}
   1b370:	b	11c44 <fprintf@plt>
   1b374:	ldr	r0, [r6, #8]
   1b378:	movw	r1, #61462	; 0xf016
   1b37c:	ldm	r6, {r2, r3}
   1b380:	movt	r1, #1
   1b384:	str	r0, [sp]
   1b388:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b38c:	ldr	r0, [r6, #8]
   1b390:	ldm	r6, {r2, r3}
   1b394:	ldr	r1, [r6, #12]
   1b398:	stm	sp, {r0, r1}
   1b39c:	movw	r1, #61490	; 0xf032
   1b3a0:	movt	r1, #1
   1b3a4:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b3a8:	add	r7, r6, #8
   1b3ac:	ldm	r6, {r2, r3}
   1b3b0:	ldm	r7, {r0, r1, r7}
   1b3b4:	stm	sp, {r0, r1, r7}
   1b3b8:	movw	r1, #61522	; 0xf052
   1b3bc:	movt	r1, #1
   1b3c0:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b3c4:	add	r7, r6, #8
   1b3c8:	ldm	r6, {r2, r3}
   1b3cc:	ldr	r6, [r6, #20]
   1b3d0:	ldm	r7, {r0, r1, r7}
   1b3d4:	stm	sp, {r0, r1, r7}
   1b3d8:	movw	r1, #61558	; 0xf076
   1b3dc:	str	r6, [sp, #12]
   1b3e0:	movt	r1, #1
   1b3e4:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b3e8:	add	r7, r6, #8
   1b3ec:	ldm	r6, {r2, r3}
   1b3f0:	ldr	r4, [r6, #20]
   1b3f4:	ldr	r6, [r6, #24]
   1b3f8:	ldm	r7, {r0, r1, r7}
   1b3fc:	stm	sp, {r0, r1, r7}
   1b400:	movw	r1, #61598	; 0xf09e
   1b404:	str	r4, [sp, #12]
   1b408:	str	r6, [sp, #16]
   1b40c:	movt	r1, #1
   1b410:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b414:	add	r7, r6, #8
   1b418:	add	lr, r6, #20
   1b41c:	ldm	r6, {r2, r3}
   1b420:	ldr	r6, [r6, #32]
   1b424:	ldm	r7, {r0, r1, r7}
   1b428:	ldm	lr, {r4, ip, lr}
   1b42c:	stm	sp, {r0, r1, r7}
   1b430:	movw	r1, #61690	; 0xf0fa
   1b434:	add	r0, sp, #12
   1b438:	stm	r0, {r4, ip, lr}
   1b43c:	str	r6, [sp, #24]
   1b440:	movt	r1, #1
   1b444:	b	1b478 <argp_parse@@Base+0x1a5c>
   1b448:	add	r7, r6, #8
   1b44c:	ldm	r6, {r2, r3}
   1b450:	ldr	r4, [r6, #20]
   1b454:	ldr	ip, [r6, #24]
   1b458:	ldr	r6, [r6, #28]
   1b45c:	ldm	r7, {r0, r1, r7}
   1b460:	stm	sp, {r0, r1, r7}
   1b464:	movw	r1, #61642	; 0xf0ca
   1b468:	str	r4, [sp, #12]
   1b46c:	str	ip, [sp, #16]
   1b470:	str	r6, [sp, #20]
   1b474:	movt	r1, #1
   1b478:	mov	r0, r5
   1b47c:	bl	11c44 <fprintf@plt>
   1b480:	sub	sp, fp, #16
   1b484:	pop	{r4, r5, r6, r7, fp, pc}
   1b488:	push	{r4, sl, fp, lr}
   1b48c:	add	fp, sp, #8
   1b490:	sub	sp, sp, #8
   1b494:	ldr	ip, [fp, #8]
   1b498:	mov	lr, #0
   1b49c:	ldr	r4, [ip, lr, lsl #2]
   1b4a0:	add	lr, lr, #1
   1b4a4:	cmp	r4, #0
   1b4a8:	bne	1b49c <argp_parse@@Base+0x1a80>
   1b4ac:	sub	r4, lr, #1
   1b4b0:	str	ip, [sp]
   1b4b4:	str	r4, [sp, #4]
   1b4b8:	bl	1b228 <argp_parse@@Base+0x180c>
   1b4bc:	sub	sp, fp, #8
   1b4c0:	pop	{r4, sl, fp, pc}
   1b4c4:	push	{fp, lr}
   1b4c8:	mov	fp, sp
   1b4cc:	sub	sp, sp, #48	; 0x30
   1b4d0:	ldr	ip, [fp, #8]
   1b4d4:	ldr	lr, [ip]
   1b4d8:	cmp	lr, #0
   1b4dc:	str	lr, [sp, #8]
   1b4e0:	beq	1b57c <argp_parse@@Base+0x1b60>
   1b4e4:	ldr	lr, [ip, #4]
   1b4e8:	cmp	lr, #0
   1b4ec:	str	lr, [sp, #12]
   1b4f0:	beq	1b584 <argp_parse@@Base+0x1b68>
   1b4f4:	ldr	lr, [ip, #8]
   1b4f8:	cmp	lr, #0
   1b4fc:	str	lr, [sp, #16]
   1b500:	beq	1b58c <argp_parse@@Base+0x1b70>
   1b504:	ldr	lr, [ip, #12]
   1b508:	cmp	lr, #0
   1b50c:	str	lr, [sp, #20]
   1b510:	beq	1b594 <argp_parse@@Base+0x1b78>
   1b514:	ldr	lr, [ip, #16]
   1b518:	cmp	lr, #0
   1b51c:	str	lr, [sp, #24]
   1b520:	beq	1b59c <argp_parse@@Base+0x1b80>
   1b524:	ldr	lr, [ip, #20]
   1b528:	cmp	lr, #0
   1b52c:	str	lr, [sp, #28]
   1b530:	beq	1b5a4 <argp_parse@@Base+0x1b88>
   1b534:	ldr	lr, [ip, #24]
   1b538:	cmp	lr, #0
   1b53c:	str	lr, [sp, #32]
   1b540:	beq	1b5ac <argp_parse@@Base+0x1b90>
   1b544:	ldr	lr, [ip, #28]
   1b548:	cmp	lr, #0
   1b54c:	str	lr, [sp, #36]	; 0x24
   1b550:	beq	1b5b4 <argp_parse@@Base+0x1b98>
   1b554:	ldr	lr, [ip, #32]
   1b558:	cmp	lr, #0
   1b55c:	str	lr, [sp, #40]	; 0x28
   1b560:	beq	1b5bc <argp_parse@@Base+0x1ba0>
   1b564:	ldr	lr, [ip, #36]	; 0x24
   1b568:	mov	ip, #10
   1b56c:	cmp	lr, #0
   1b570:	str	lr, [sp, #44]	; 0x2c
   1b574:	movweq	ip, #9
   1b578:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b57c:	mov	ip, #0
   1b580:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b584:	mov	ip, #1
   1b588:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b58c:	mov	ip, #2
   1b590:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b594:	mov	ip, #3
   1b598:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b59c:	mov	ip, #4
   1b5a0:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b5a4:	mov	ip, #5
   1b5a8:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b5ac:	mov	ip, #6
   1b5b0:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b5b4:	mov	ip, #7
   1b5b8:	b	1b5c0 <argp_parse@@Base+0x1ba4>
   1b5bc:	mov	ip, #8
   1b5c0:	add	lr, sp, #8
   1b5c4:	str	ip, [sp, #4]
   1b5c8:	str	lr, [sp]
   1b5cc:	bl	1b228 <argp_parse@@Base+0x180c>
   1b5d0:	mov	sp, fp
   1b5d4:	pop	{fp, pc}
   1b5d8:	push	{fp, lr}
   1b5dc:	mov	fp, sp
   1b5e0:	sub	sp, sp, #56	; 0x38
   1b5e4:	add	ip, fp, #8
   1b5e8:	str	ip, [sp, #12]
   1b5ec:	ldr	lr, [fp, #8]
   1b5f0:	cmp	lr, #0
   1b5f4:	str	lr, [sp, #16]
   1b5f8:	beq	1b694 <argp_parse@@Base+0x1c78>
   1b5fc:	ldr	lr, [ip, #4]
   1b600:	cmp	lr, #0
   1b604:	str	lr, [sp, #20]
   1b608:	beq	1b69c <argp_parse@@Base+0x1c80>
   1b60c:	ldr	lr, [ip, #8]
   1b610:	cmp	lr, #0
   1b614:	str	lr, [sp, #24]
   1b618:	beq	1b6a4 <argp_parse@@Base+0x1c88>
   1b61c:	ldr	lr, [ip, #12]
   1b620:	cmp	lr, #0
   1b624:	str	lr, [sp, #28]
   1b628:	beq	1b6ac <argp_parse@@Base+0x1c90>
   1b62c:	ldr	lr, [ip, #16]
   1b630:	cmp	lr, #0
   1b634:	str	lr, [sp, #32]
   1b638:	beq	1b6b4 <argp_parse@@Base+0x1c98>
   1b63c:	ldr	lr, [ip, #20]
   1b640:	cmp	lr, #0
   1b644:	str	lr, [sp, #36]	; 0x24
   1b648:	beq	1b6bc <argp_parse@@Base+0x1ca0>
   1b64c:	ldr	lr, [ip, #24]
   1b650:	cmp	lr, #0
   1b654:	str	lr, [sp, #40]	; 0x28
   1b658:	beq	1b6c4 <argp_parse@@Base+0x1ca8>
   1b65c:	ldr	lr, [ip, #28]
   1b660:	cmp	lr, #0
   1b664:	str	lr, [sp, #44]	; 0x2c
   1b668:	beq	1b6cc <argp_parse@@Base+0x1cb0>
   1b66c:	ldr	lr, [ip, #32]
   1b670:	cmp	lr, #0
   1b674:	str	lr, [sp, #48]	; 0x30
   1b678:	beq	1b6d4 <argp_parse@@Base+0x1cb8>
   1b67c:	ldr	lr, [ip, #36]	; 0x24
   1b680:	mov	ip, #10
   1b684:	cmp	lr, #0
   1b688:	str	lr, [sp, #52]	; 0x34
   1b68c:	movweq	ip, #9
   1b690:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b694:	mov	ip, #0
   1b698:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b69c:	mov	ip, #1
   1b6a0:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6a4:	mov	ip, #2
   1b6a8:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6ac:	mov	ip, #3
   1b6b0:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6b4:	mov	ip, #4
   1b6b8:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6bc:	mov	ip, #5
   1b6c0:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6c4:	mov	ip, #6
   1b6c8:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6cc:	mov	ip, #7
   1b6d0:	b	1b6d8 <argp_parse@@Base+0x1cbc>
   1b6d4:	mov	ip, #8
   1b6d8:	add	lr, sp, #16
   1b6dc:	str	ip, [sp, #4]
   1b6e0:	str	lr, [sp]
   1b6e4:	bl	1b228 <argp_parse@@Base+0x180c>
   1b6e8:	mov	sp, fp
   1b6ec:	pop	{fp, pc}
   1b6f0:	push	{fp, lr}
   1b6f4:	mov	fp, sp
   1b6f8:	movw	r0, #1476	; 0x5c4
   1b6fc:	movt	r0, #3
   1b700:	ldr	r1, [r0]
   1b704:	mov	r0, #10
   1b708:	bl	11d40 <fputc@plt>
   1b70c:	movw	r0, #61802	; 0xf16a
   1b710:	movw	r1, #61822	; 0xf17e
   1b714:	movt	r0, #1
   1b718:	movt	r1, #1
   1b71c:	bl	119c8 <printf@plt>
   1b720:	movw	r0, #61844	; 0xf194
   1b724:	movw	r1, #61100	; 0xeeac
   1b728:	movw	r2, #61864	; 0xf1a8
   1b72c:	movt	r0, #1
   1b730:	movt	r1, #1
   1b734:	movt	r2, #1
   1b738:	bl	119c8 <printf@plt>
   1b73c:	movw	r0, #61903	; 0xf1cf
   1b740:	movw	r1, #61942	; 0xf1f6
   1b744:	movt	r0, #1
   1b748:	movt	r1, #1
   1b74c:	pop	{fp, lr}
   1b750:	b	119c8 <printf@plt>
   1b754:	push	{r4, r5, r6, sl, fp, lr}
   1b758:	add	fp, sp, #16
   1b75c:	mov	r4, r2
   1b760:	mov	r5, r1
   1b764:	mov	r6, r0
   1b768:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b76c:	cmp	r0, #0
   1b770:	popne	{r4, r5, r6, sl, fp, pc}
   1b774:	cmp	r6, #0
   1b778:	beq	1b78c <argp_parse@@Base+0x1d70>
   1b77c:	cmp	r5, #0
   1b780:	cmpne	r4, #0
   1b784:	bne	1b78c <argp_parse@@Base+0x1d70>
   1b788:	pop	{r4, r5, r6, sl, fp, pc}
   1b78c:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b790:	push	{r4, r5, r6, sl, fp, lr}
   1b794:	add	fp, sp, #16
   1b798:	mov	r4, r2
   1b79c:	mov	r5, r1
   1b7a0:	mov	r6, r0
   1b7a4:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b7a8:	cmp	r0, #0
   1b7ac:	popne	{r4, r5, r6, sl, fp, pc}
   1b7b0:	cmp	r6, #0
   1b7b4:	beq	1b7c8 <argp_parse@@Base+0x1dac>
   1b7b8:	cmp	r5, #0
   1b7bc:	cmpne	r4, #0
   1b7c0:	bne	1b7c8 <argp_parse@@Base+0x1dac>
   1b7c4:	pop	{r4, r5, r6, sl, fp, pc}
   1b7c8:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b7cc:	push	{fp, lr}
   1b7d0:	mov	fp, sp
   1b7d4:	bl	1bd8c <argp_parse@@Base+0x2370>
   1b7d8:	cmp	r0, #0
   1b7dc:	popne	{fp, pc}
   1b7e0:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b7e4:	push	{fp, lr}
   1b7e8:	mov	fp, sp
   1b7ec:	bl	1bd8c <argp_parse@@Base+0x2370>
   1b7f0:	cmp	r0, #0
   1b7f4:	popne	{fp, pc}
   1b7f8:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b7fc:	push	{fp, lr}
   1b800:	mov	fp, sp
   1b804:	bl	1bd8c <argp_parse@@Base+0x2370>
   1b808:	cmp	r0, #0
   1b80c:	popne	{fp, pc}
   1b810:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b814:	push	{r4, r5, fp, lr}
   1b818:	add	fp, sp, #8
   1b81c:	mov	r4, r1
   1b820:	mov	r5, r0
   1b824:	bl	1bdbc <argp_parse@@Base+0x23a0>
   1b828:	cmp	r0, #0
   1b82c:	popne	{r4, r5, fp, pc}
   1b830:	cmp	r5, #0
   1b834:	beq	1b844 <argp_parse@@Base+0x1e28>
   1b838:	cmp	r4, #0
   1b83c:	bne	1b844 <argp_parse@@Base+0x1e28>
   1b840:	pop	{r4, r5, fp, pc}
   1b844:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b848:	push	{fp, lr}
   1b84c:	mov	fp, sp
   1b850:	cmp	r1, #0
   1b854:	orreq	r1, r1, #1
   1b858:	bl	1bdbc <argp_parse@@Base+0x23a0>
   1b85c:	cmp	r0, #0
   1b860:	popne	{fp, pc}
   1b864:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b868:	push	{fp, lr}
   1b86c:	mov	fp, sp
   1b870:	clz	r3, r2
   1b874:	lsr	ip, r3, #5
   1b878:	clz	r3, r1
   1b87c:	lsr	r3, r3, #5
   1b880:	orrs	r3, r3, ip
   1b884:	movwne	r1, #1
   1b888:	movwne	r2, #1
   1b88c:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b890:	cmp	r0, #0
   1b894:	popne	{fp, pc}
   1b898:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b89c:	push	{fp, lr}
   1b8a0:	mov	fp, sp
   1b8a4:	mov	r2, r1
   1b8a8:	mov	r1, r0
   1b8ac:	mov	r0, #0
   1b8b0:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b8b4:	cmp	r0, #0
   1b8b8:	popne	{fp, pc}
   1b8bc:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b8c0:	push	{fp, lr}
   1b8c4:	mov	fp, sp
   1b8c8:	mov	r2, r1
   1b8cc:	mov	r1, r0
   1b8d0:	clz	r0, r2
   1b8d4:	clz	r3, r1
   1b8d8:	lsr	r0, r0, #5
   1b8dc:	lsr	r3, r3, #5
   1b8e0:	orrs	r0, r3, r0
   1b8e4:	mov	r0, #0
   1b8e8:	movwne	r1, #1
   1b8ec:	movwne	r2, #1
   1b8f0:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b8f4:	cmp	r0, #0
   1b8f8:	popne	{fp, pc}
   1b8fc:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b900:	push	{r4, r5, r6, sl, fp, lr}
   1b904:	add	fp, sp, #16
   1b908:	ldr	r5, [r1]
   1b90c:	mov	r4, r1
   1b910:	mov	r6, r0
   1b914:	cmp	r0, #0
   1b918:	beq	1b930 <argp_parse@@Base+0x1f14>
   1b91c:	mov	r0, #1
   1b920:	add	r0, r0, r5, lsr #1
   1b924:	adds	r5, r5, r0
   1b928:	bcc	1b938 <argp_parse@@Base+0x1f1c>
   1b92c:	b	1b974 <argp_parse@@Base+0x1f58>
   1b930:	cmp	r5, #0
   1b934:	movweq	r5, #64	; 0x40
   1b938:	mov	r0, r6
   1b93c:	mov	r1, r5
   1b940:	mov	r2, #1
   1b944:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b948:	cmp	r5, #0
   1b94c:	mov	r1, r5
   1b950:	movwne	r1, #1
   1b954:	cmp	r0, #0
   1b958:	bne	1b96c <argp_parse@@Base+0x1f50>
   1b95c:	clz	r2, r6
   1b960:	lsr	r2, r2, #5
   1b964:	orrs	r1, r2, r1
   1b968:	bne	1b974 <argp_parse@@Base+0x1f58>
   1b96c:	str	r5, [r4]
   1b970:	pop	{r4, r5, r6, sl, fp, pc}
   1b974:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b978:	push	{r4, r5, r6, r7, fp, lr}
   1b97c:	add	fp, sp, #16
   1b980:	ldr	r5, [r1]
   1b984:	mov	r6, r2
   1b988:	mov	r4, r1
   1b98c:	mov	r7, r0
   1b990:	cmp	r0, #0
   1b994:	beq	1b9ac <argp_parse@@Base+0x1f90>
   1b998:	mov	r0, #1
   1b99c:	add	r0, r0, r5, lsr #1
   1b9a0:	adds	r5, r5, r0
   1b9a4:	bcc	1b9c4 <argp_parse@@Base+0x1fa8>
   1b9a8:	b	1b9f8 <argp_parse@@Base+0x1fdc>
   1b9ac:	cmp	r5, #0
   1b9b0:	bne	1b9c4 <argp_parse@@Base+0x1fa8>
   1b9b4:	mov	r0, #64	; 0x40
   1b9b8:	cmp	r6, #64	; 0x40
   1b9bc:	udiv	r5, r0, r6
   1b9c0:	addhi	r5, r5, #1
   1b9c4:	mov	r0, r7
   1b9c8:	mov	r1, r5
   1b9cc:	mov	r2, r6
   1b9d0:	bl	1d918 <argp_parse@@Base+0x3efc>
   1b9d4:	cmp	r0, #0
   1b9d8:	bne	1b9f0 <argp_parse@@Base+0x1fd4>
   1b9dc:	cmp	r7, #0
   1b9e0:	beq	1b9f8 <argp_parse@@Base+0x1fdc>
   1b9e4:	cmp	r6, #0
   1b9e8:	cmpne	r5, #0
   1b9ec:	bne	1b9f8 <argp_parse@@Base+0x1fdc>
   1b9f0:	str	r5, [r4]
   1b9f4:	pop	{r4, r5, r6, r7, fp, pc}
   1b9f8:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1b9fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ba00:	add	fp, sp, #24
   1ba04:	mov	r8, r1
   1ba08:	ldr	r1, [r1]
   1ba0c:	mov	r5, r0
   1ba10:	add	r0, r1, r1, asr #1
   1ba14:	cmp	r0, r1
   1ba18:	mvnvs	r0, #-2147483648	; 0x80000000
   1ba1c:	cmp	r0, r3
   1ba20:	mov	r7, r0
   1ba24:	movgt	r7, r3
   1ba28:	cmn	r3, #1
   1ba2c:	movle	r7, r0
   1ba30:	ldr	r0, [fp, #8]
   1ba34:	cmn	r0, #1
   1ba38:	ble	1ba60 <argp_parse@@Base+0x2044>
   1ba3c:	cmp	r0, #0
   1ba40:	beq	1bab4 <argp_parse@@Base+0x2098>
   1ba44:	cmn	r7, #1
   1ba48:	ble	1ba88 <argp_parse@@Base+0x206c>
   1ba4c:	mvn	r4, #-2147483648	; 0x80000000
   1ba50:	udiv	r6, r4, r0
   1ba54:	cmp	r6, r7
   1ba58:	bge	1bab4 <argp_parse@@Base+0x2098>
   1ba5c:	b	1bac4 <argp_parse@@Base+0x20a8>
   1ba60:	cmn	r7, #1
   1ba64:	ble	1baa4 <argp_parse@@Base+0x2088>
   1ba68:	cmn	r0, #1
   1ba6c:	beq	1bab4 <argp_parse@@Base+0x2098>
   1ba70:	mov	r6, #-2147483648	; 0x80000000
   1ba74:	mvn	r4, #-2147483648	; 0x80000000
   1ba78:	sdiv	r6, r6, r0
   1ba7c:	cmp	r6, r7
   1ba80:	bge	1bab4 <argp_parse@@Base+0x2098>
   1ba84:	b	1bac4 <argp_parse@@Base+0x20a8>
   1ba88:	beq	1bab4 <argp_parse@@Base+0x2098>
   1ba8c:	mov	r6, #-2147483648	; 0x80000000
   1ba90:	mvn	r4, #-2147483648	; 0x80000000
   1ba94:	sdiv	r6, r6, r7
   1ba98:	cmp	r6, r0
   1ba9c:	bge	1bab4 <argp_parse@@Base+0x2098>
   1baa0:	b	1bac4 <argp_parse@@Base+0x20a8>
   1baa4:	mvn	r4, #-2147483648	; 0x80000000
   1baa8:	sdiv	r6, r4, r0
   1baac:	cmp	r7, r6
   1bab0:	blt	1bac4 <argp_parse@@Base+0x20a8>
   1bab4:	mul	r6, r7, r0
   1bab8:	mov	r4, #64	; 0x40
   1babc:	cmp	r6, #63	; 0x3f
   1bac0:	bgt	1bacc <argp_parse@@Base+0x20b0>
   1bac4:	sdiv	r7, r4, r0
   1bac8:	mul	r6, r7, r0
   1bacc:	cmp	r5, #0
   1bad0:	moveq	r4, #0
   1bad4:	streq	r4, [r8]
   1bad8:	sub	r4, r7, r1
   1badc:	cmp	r4, r2
   1bae0:	bge	1bb8c <argp_parse@@Base+0x2170>
   1bae4:	add	r7, r1, r2
   1bae8:	mov	r6, #0
   1baec:	mov	r2, #0
   1baf0:	cmp	r7, r3
   1baf4:	movwgt	r6, #1
   1baf8:	cmn	r3, #1
   1bafc:	movwgt	r2, #1
   1bb00:	cmp	r7, r1
   1bb04:	bvs	1bbc0 <argp_parse@@Base+0x21a4>
   1bb08:	ands	r1, r2, r6
   1bb0c:	bne	1bbc0 <argp_parse@@Base+0x21a4>
   1bb10:	cmn	r0, #1
   1bb14:	ble	1bb3c <argp_parse@@Base+0x2120>
   1bb18:	cmp	r0, #0
   1bb1c:	beq	1bb88 <argp_parse@@Base+0x216c>
   1bb20:	cmn	r7, #1
   1bb24:	ble	1bb60 <argp_parse@@Base+0x2144>
   1bb28:	mvn	r1, #-2147483648	; 0x80000000
   1bb2c:	udiv	r1, r1, r0
   1bb30:	cmp	r1, r7
   1bb34:	bge	1bb88 <argp_parse@@Base+0x216c>
   1bb38:	b	1bbc0 <argp_parse@@Base+0x21a4>
   1bb3c:	cmn	r7, #1
   1bb40:	ble	1bb78 <argp_parse@@Base+0x215c>
   1bb44:	cmn	r0, #1
   1bb48:	beq	1bb88 <argp_parse@@Base+0x216c>
   1bb4c:	mov	r1, #-2147483648	; 0x80000000
   1bb50:	sdiv	r1, r1, r0
   1bb54:	cmp	r1, r7
   1bb58:	bge	1bb88 <argp_parse@@Base+0x216c>
   1bb5c:	b	1bbc0 <argp_parse@@Base+0x21a4>
   1bb60:	beq	1bb88 <argp_parse@@Base+0x216c>
   1bb64:	mov	r1, #-2147483648	; 0x80000000
   1bb68:	sdiv	r1, r1, r7
   1bb6c:	cmp	r1, r0
   1bb70:	bge	1bb88 <argp_parse@@Base+0x216c>
   1bb74:	b	1bbc0 <argp_parse@@Base+0x21a4>
   1bb78:	mvn	r1, #-2147483648	; 0x80000000
   1bb7c:	sdiv	r1, r1, r0
   1bb80:	cmp	r7, r1
   1bb84:	blt	1bbc0 <argp_parse@@Base+0x21a4>
   1bb88:	mul	r6, r7, r0
   1bb8c:	mov	r0, r5
   1bb90:	mov	r1, r6
   1bb94:	bl	1bdbc <argp_parse@@Base+0x23a0>
   1bb98:	cmp	r6, #0
   1bb9c:	movwne	r6, #1
   1bba0:	cmp	r0, #0
   1bba4:	bne	1bbb8 <argp_parse@@Base+0x219c>
   1bba8:	clz	r1, r5
   1bbac:	lsr	r1, r1, #5
   1bbb0:	orrs	r1, r1, r6
   1bbb4:	bne	1bbc0 <argp_parse@@Base+0x21a4>
   1bbb8:	str	r7, [r8]
   1bbbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bbc0:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bbc4:	push	{fp, lr}
   1bbc8:	mov	fp, sp
   1bbcc:	mov	r1, #1
   1bbd0:	bl	1bd38 <argp_parse@@Base+0x231c>
   1bbd4:	cmp	r0, #0
   1bbd8:	popne	{fp, pc}
   1bbdc:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bbe0:	push	{fp, lr}
   1bbe4:	mov	fp, sp
   1bbe8:	bl	1bd38 <argp_parse@@Base+0x231c>
   1bbec:	cmp	r0, #0
   1bbf0:	popne	{fp, pc}
   1bbf4:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bbf8:	push	{fp, lr}
   1bbfc:	mov	fp, sp
   1bc00:	mov	r1, #1
   1bc04:	bl	1bd38 <argp_parse@@Base+0x231c>
   1bc08:	cmp	r0, #0
   1bc0c:	popne	{fp, pc}
   1bc10:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bc14:	push	{fp, lr}
   1bc18:	mov	fp, sp
   1bc1c:	bl	1bd38 <argp_parse@@Base+0x231c>
   1bc20:	cmp	r0, #0
   1bc24:	popne	{fp, pc}
   1bc28:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bc2c:	push	{r4, r5, fp, lr}
   1bc30:	add	fp, sp, #8
   1bc34:	mov	r5, r0
   1bc38:	mov	r0, r1
   1bc3c:	mov	r4, r1
   1bc40:	bl	1bd8c <argp_parse@@Base+0x2370>
   1bc44:	cmp	r0, #0
   1bc48:	beq	1bc5c <argp_parse@@Base+0x2240>
   1bc4c:	mov	r1, r5
   1bc50:	mov	r2, r4
   1bc54:	pop	{r4, r5, fp, lr}
   1bc58:	b	11a58 <memcpy@plt>
   1bc5c:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bc60:	push	{r4, r5, fp, lr}
   1bc64:	add	fp, sp, #8
   1bc68:	mov	r5, r0
   1bc6c:	mov	r0, r1
   1bc70:	mov	r4, r1
   1bc74:	bl	1bd8c <argp_parse@@Base+0x2370>
   1bc78:	cmp	r0, #0
   1bc7c:	beq	1bc90 <argp_parse@@Base+0x2274>
   1bc80:	mov	r1, r5
   1bc84:	mov	r2, r4
   1bc88:	pop	{r4, r5, fp, lr}
   1bc8c:	b	11a58 <memcpy@plt>
   1bc90:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bc94:	push	{r4, r5, fp, lr}
   1bc98:	add	fp, sp, #8
   1bc9c:	mov	r5, r0
   1bca0:	add	r0, r1, #1
   1bca4:	mov	r4, r1
   1bca8:	bl	1bd8c <argp_parse@@Base+0x2370>
   1bcac:	cmp	r0, #0
   1bcb0:	beq	1bccc <argp_parse@@Base+0x22b0>
   1bcb4:	mov	r1, #0
   1bcb8:	mov	r2, r4
   1bcbc:	strb	r1, [r0, r4]
   1bcc0:	mov	r1, r5
   1bcc4:	pop	{r4, r5, fp, lr}
   1bcc8:	b	11a58 <memcpy@plt>
   1bccc:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bcd0:	push	{r4, r5, fp, lr}
   1bcd4:	add	fp, sp, #8
   1bcd8:	mov	r4, r0
   1bcdc:	bl	11c20 <strlen@plt>
   1bce0:	add	r5, r0, #1
   1bce4:	mov	r0, r5
   1bce8:	bl	1bd8c <argp_parse@@Base+0x2370>
   1bcec:	cmp	r0, #0
   1bcf0:	beq	1bd04 <argp_parse@@Base+0x22e8>
   1bcf4:	mov	r1, r4
   1bcf8:	mov	r2, r5
   1bcfc:	pop	{r4, r5, fp, lr}
   1bd00:	b	11a58 <memcpy@plt>
   1bd04:	bl	1bd08 <argp_parse@@Base+0x22ec>
   1bd08:	push	{fp, lr}
   1bd0c:	mov	fp, sp
   1bd10:	movw	r0, #1444	; 0x5a4
   1bd14:	movw	r2, #59892	; 0xe9f4
   1bd18:	movw	r3, #62018	; 0xf242
   1bd1c:	mov	r1, #0
   1bd20:	movt	r0, #3
   1bd24:	movt	r2, #1
   1bd28:	movt	r3, #1
   1bd2c:	ldr	r0, [r0]
   1bd30:	bl	11b6c <error@plt>
   1bd34:	bl	11de8 <abort@plt>
   1bd38:	clz	r2, r1
   1bd3c:	clz	r3, r0
   1bd40:	lsr	r2, r2, #5
   1bd44:	lsr	r3, r3, #5
   1bd48:	orrs	r2, r3, r2
   1bd4c:	movwne	r1, #1
   1bd50:	movwne	r0, #1
   1bd54:	cmp	r1, #0
   1bd58:	beq	1bd88 <argp_parse@@Base+0x236c>
   1bd5c:	mvn	r2, #-2147483648	; 0x80000000
   1bd60:	udiv	r2, r2, r1
   1bd64:	cmp	r2, r0
   1bd68:	bcs	1bd88 <argp_parse@@Base+0x236c>
   1bd6c:	push	{fp, lr}
   1bd70:	mov	fp, sp
   1bd74:	bl	11c50 <__errno_location@plt>
   1bd78:	mov	r1, #12
   1bd7c:	str	r1, [r0]
   1bd80:	mov	r0, #0
   1bd84:	pop	{fp, pc}
   1bd88:	b	11974 <calloc@plt>
   1bd8c:	cmp	r0, #0
   1bd90:	movweq	r0, #1
   1bd94:	cmn	r0, #1
   1bd98:	ble	1bda0 <argp_parse@@Base+0x2384>
   1bd9c:	b	11ba8 <malloc@plt>
   1bda0:	push	{fp, lr}
   1bda4:	mov	fp, sp
   1bda8:	bl	11c50 <__errno_location@plt>
   1bdac:	mov	r1, #12
   1bdb0:	str	r1, [r0]
   1bdb4:	mov	r0, #0
   1bdb8:	pop	{fp, pc}
   1bdbc:	push	{fp, lr}
   1bdc0:	mov	fp, sp
   1bdc4:	cmp	r0, #0
   1bdc8:	beq	1bde4 <argp_parse@@Base+0x23c8>
   1bdcc:	cmp	r1, #0
   1bdd0:	beq	1bdf0 <argp_parse@@Base+0x23d4>
   1bdd4:	cmn	r1, #1
   1bdd8:	ble	1bdfc <argp_parse@@Base+0x23e0>
   1bddc:	pop	{fp, lr}
   1bde0:	b	11af4 <realloc@plt>
   1bde4:	mov	r0, r1
   1bde8:	pop	{fp, lr}
   1bdec:	b	1bd8c <argp_parse@@Base+0x2370>
   1bdf0:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1bdf4:	mov	r0, #0
   1bdf8:	pop	{fp, pc}
   1bdfc:	bl	11c50 <__errno_location@plt>
   1be00:	mov	r1, #12
   1be04:	str	r1, [r0]
   1be08:	mov	r0, #0
   1be0c:	pop	{fp, pc}
   1be10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1be14:	add	fp, sp, #24
   1be18:	mov	r7, r0
   1be1c:	mov	r0, #36	; 0x24
   1be20:	mov	r8, r3
   1be24:	mov	r9, r2
   1be28:	mov	r6, r1
   1be2c:	bl	1bd8c <argp_parse@@Base+0x2370>
   1be30:	cmp	r0, #0
   1be34:	beq	1be7c <argp_parse@@Base+0x2460>
   1be38:	mov	r5, #0
   1be3c:	str	r7, [r0]
   1be40:	stmib	r0, {r6, r9}
   1be44:	str	r8, [r0, #12]
   1be48:	mov	r4, r0
   1be4c:	str	r5, [r0, #16]
   1be50:	str	r5, [r0, #20]
   1be54:	mov	r0, #200	; 0xc8
   1be58:	bl	1bd8c <argp_parse@@Base+0x2370>
   1be5c:	cmp	r0, #0
   1be60:	str	r0, [r4, #24]
   1be64:	beq	1be88 <argp_parse@@Base+0x246c>
   1be68:	add	r1, r0, #200	; 0xc8
   1be6c:	str	r0, [r4, #28]
   1be70:	mov	r0, r4
   1be74:	str	r1, [r4, #32]
   1be78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1be7c:	mov	r5, #0
   1be80:	mov	r0, r5
   1be84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1be88:	mov	r0, r4
   1be8c:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1be90:	mov	r0, r5
   1be94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1be98:	push	{r4, sl, fp, lr}
   1be9c:	add	fp, sp, #8
   1bea0:	mov	r4, r0
   1bea4:	bl	1bedc <argp_parse@@Base+0x24c0>
   1bea8:	ldr	r0, [r4, #24]
   1beac:	ldr	r1, [r4, #28]
   1beb0:	cmp	r1, r0
   1beb4:	bls	1bec8 <argp_parse@@Base+0x24ac>
   1beb8:	ldr	r3, [r4]
   1bebc:	sub	r2, r1, r0
   1bec0:	mov	r1, #1
   1bec4:	bl	11a7c <fwrite_unlocked@plt>
   1bec8:	ldr	r0, [r4, #24]
   1becc:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1bed0:	mov	r0, r4
   1bed4:	pop	{r4, sl, fp, lr}
   1bed8:	b	1aed8 <argp_parse@@Base+0x14bc>
   1bedc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bee0:	add	fp, sp, #28
   1bee4:	sub	sp, sp, #12
   1bee8:	mov	sl, r0
   1beec:	ldr	r0, [r0, #16]
   1bef0:	ldr	r1, [sl, #24]
   1bef4:	ldr	r8, [sl, #28]
   1bef8:	add	r5, r1, r0
   1befc:	cmp	r5, r8
   1bf00:	bcs	1c3f8 <argp_parse@@Base+0x29dc>
   1bf04:	ldr	r7, [sl, #20]
   1bf08:	mov	r3, #32
   1bf0c:	cmp	r7, #0
   1bf10:	bne	1bf48 <argp_parse@@Base+0x252c>
   1bf14:	b	1bf50 <argp_parse@@Base+0x2534>
   1bf18:	ldr	r0, [sp, #8]
   1bf1c:	cmp	r7, #0
   1bf20:	mvneq	r7, #0
   1bf24:	str	r7, [sl, #20]
   1bf28:	sub	r0, r0, r6
   1bf2c:	add	r0, r0, r9
   1bf30:	add	r8, r5, r0
   1bf34:	str	r8, [sl, #28]
   1bf38:	cmp	r5, r8
   1bf3c:	bcs	1c3f8 <argp_parse@@Base+0x29dc>
   1bf40:	cmp	r7, #0
   1bf44:	beq	1bf50 <argp_parse@@Base+0x2534>
   1bf48:	mov	r9, r5
   1bf4c:	b	1bff0 <argp_parse@@Base+0x25d4>
   1bf50:	ldr	r7, [sl, #4]
   1bf54:	cmp	r7, #0
   1bf58:	beq	1c120 <argp_parse@@Base+0x2704>
   1bf5c:	ldr	r1, [sl, #32]
   1bf60:	add	r0, r8, r7
   1bf64:	mov	r4, r7
   1bf68:	cmp	r0, r1
   1bf6c:	bcs	1bfa4 <argp_parse@@Base+0x2588>
   1bf70:	add	r9, r5, r7
   1bf74:	sub	r2, r8, r5
   1bf78:	mov	r1, r5
   1bf7c:	mov	r0, r9
   1bf80:	bl	11a04 <memmove@plt>
   1bf84:	ldr	r0, [sl, #28]
   1bf88:	mov	r1, #32
   1bf8c:	mov	r2, r7
   1bf90:	add	r0, r0, r7
   1bf94:	str	r0, [sl, #28]
   1bf98:	mov	r0, r5
   1bf9c:	bl	11c8c <memset@plt>
   1bfa0:	b	1bfe8 <argp_parse@@Base+0x25cc>
   1bfa4:	ldr	r0, [sl]
   1bfa8:	ldr	r1, [r0, #20]
   1bfac:	ldr	r2, [r0, #24]
   1bfb0:	cmp	r1, r2
   1bfb4:	bcs	1bfd0 <argp_parse@@Base+0x25b4>
   1bfb8:	add	r2, r1, #1
   1bfbc:	str	r2, [r0, #20]
   1bfc0:	strb	r3, [r1]
   1bfc4:	subs	r4, r4, #1
   1bfc8:	bne	1bfa4 <argp_parse@@Base+0x2588>
   1bfcc:	b	1bfe4 <argp_parse@@Base+0x25c8>
   1bfd0:	mov	r1, #32
   1bfd4:	bl	11cf8 <__overflow@plt>
   1bfd8:	mov	r3, #32
   1bfdc:	subs	r4, r4, #1
   1bfe0:	bne	1bfa4 <argp_parse@@Base+0x2588>
   1bfe4:	mov	r9, r5
   1bfe8:	str	r7, [sl, #20]
   1bfec:	ldr	r8, [sl, #28]
   1bff0:	sub	r6, r8, r9
   1bff4:	mov	r0, r9
   1bff8:	mov	r1, #10
   1bffc:	mov	r2, r6
   1c000:	bl	11cb0 <memchr@plt>
   1c004:	cmn	r7, #1
   1c008:	mov	r4, r0
   1c00c:	movle	r7, #0
   1c010:	strle	r7, [sl, #20]
   1c014:	cmp	r4, #0
   1c018:	beq	1c04c <argp_parse@@Base+0x2630>
   1c01c:	ldr	r5, [sl, #8]
   1c020:	sub	r0, r4, r9
   1c024:	mov	r3, #32
   1c028:	add	r0, r0, r7
   1c02c:	cmp	r0, r5
   1c030:	bge	1c060 <argp_parse@@Base+0x2644>
   1c034:	mov	r7, #0
   1c038:	add	r5, r4, #1
   1c03c:	str	r7, [sl, #20]
   1c040:	cmp	r5, r8
   1c044:	bcc	1bf40 <argp_parse@@Base+0x2524>
   1c048:	b	1c3f8 <argp_parse@@Base+0x29dc>
   1c04c:	ldr	r5, [sl, #8]
   1c050:	add	r0, r7, r6
   1c054:	mov	r4, r8
   1c058:	cmp	r0, r5
   1c05c:	bcc	1c3dc <argp_parse@@Base+0x29c0>
   1c060:	ldr	r0, [sl, #12]
   1c064:	cmn	r0, #1
   1c068:	str	r0, [sp, #4]
   1c06c:	ble	1c0bc <argp_parse@@Base+0x26a0>
   1c070:	subs	r0, r5, r7
   1c074:	mov	r1, #0
   1c078:	str	r6, [sp, #8]
   1c07c:	add	r5, r9, r0
   1c080:	bmi	1c118 <argp_parse@@Base+0x26fc>
   1c084:	str	r0, [sp]
   1c088:	bl	11bfc <__ctype_b_loc@plt>
   1c08c:	ldr	r0, [r0]
   1c090:	mov	r7, r5
   1c094:	ldrb	r1, [r7]
   1c098:	ldrb	r1, [r0, r1, lsl #1]
   1c09c:	tst	r1, #1
   1c0a0:	bne	1c128 <argp_parse@@Base+0x270c>
   1c0a4:	sub	r7, r7, #1
   1c0a8:	cmp	r7, r9
   1c0ac:	bcs	1c094 <argp_parse@@Base+0x2678>
   1c0b0:	ldr	r0, [sp]
   1c0b4:	mov	r1, #0
   1c0b8:	b	1c130 <argp_parse@@Base+0x2714>
   1c0bc:	mov	r0, r6
   1c0c0:	sub	r6, r5, #1
   1c0c4:	cmp	r4, r8
   1c0c8:	bcs	1c3e4 <argp_parse@@Base+0x29c8>
   1c0cc:	sub	r0, r6, r7
   1c0d0:	sub	r2, r8, r4
   1c0d4:	mov	r1, r4
   1c0d8:	add	r0, r9, r0
   1c0dc:	bl	11a04 <memmove@plt>
   1c0e0:	ldr	r0, [sl, #20]
   1c0e4:	ldr	r1, [sl, #28]
   1c0e8:	mov	r7, #0
   1c0ec:	mov	r3, #32
   1c0f0:	add	r5, r9, r5
   1c0f4:	str	r7, [sl, #20]
   1c0f8:	sub	r0, r6, r0
   1c0fc:	add	r0, r9, r0
   1c100:	sub	r0, r4, r0
   1c104:	add	r8, r1, r0
   1c108:	str	r8, [sl, #28]
   1c10c:	cmp	r5, r8
   1c110:	bcc	1bf40 <argp_parse@@Base+0x2524>
   1c114:	b	1c3f8 <argp_parse@@Base+0x29dc>
   1c118:	mov	r7, r5
   1c11c:	b	1c130 <argp_parse@@Base+0x2714>
   1c120:	mov	r7, #0
   1c124:	b	1bf48 <argp_parse@@Base+0x252c>
   1c128:	ldr	r0, [sp]
   1c12c:	mov	r1, #1
   1c130:	add	r6, r7, #1
   1c134:	cmp	r6, r9
   1c138:	bls	1c178 <argp_parse@@Base+0x275c>
   1c13c:	cmp	r1, #0
   1c140:	beq	1c1dc <argp_parse@@Base+0x27c0>
   1c144:	ldr	r4, [sp, #4]
   1c148:	sub	r1, r7, #1
   1c14c:	mov	r7, r1
   1c150:	cmp	r1, r9
   1c154:	bcc	1c1e0 <argp_parse@@Base+0x27c4>
   1c158:	bl	11bfc <__ctype_b_loc@plt>
   1c15c:	mov	r1, r7
   1c160:	ldr	r0, [r0]
   1c164:	ldrb	r2, [r1], #-1
   1c168:	ldrb	r0, [r0, r2, lsl #1]
   1c16c:	tst	r0, #1
   1c170:	bne	1c14c <argp_parse@@Base+0x2730>
   1c174:	b	1c1e0 <argp_parse@@Base+0x27c4>
   1c178:	cmp	r5, r4
   1c17c:	bcs	1c1b0 <argp_parse@@Base+0x2794>
   1c180:	add	r0, r9, r0
   1c184:	add	r1, r0, #1
   1c188:	mov	r5, r1
   1c18c:	cmp	r1, r4
   1c190:	bcs	1c1b0 <argp_parse@@Base+0x2794>
   1c194:	bl	11bfc <__ctype_b_loc@plt>
   1c198:	mov	r1, r5
   1c19c:	ldr	r0, [r0]
   1c1a0:	ldrb	r2, [r1], #1
   1c1a4:	ldrb	r0, [r0, r2, lsl #1]
   1c1a8:	tst	r0, #1
   1c1ac:	beq	1c188 <argp_parse@@Base+0x276c>
   1c1b0:	cmp	r5, r4
   1c1b4:	beq	1c3b0 <argp_parse@@Base+0x2994>
   1c1b8:	bl	11bfc <__ctype_b_loc@plt>
   1c1bc:	ldr	r0, [r0]
   1c1c0:	mov	r6, r5
   1c1c4:	ldrb	r1, [r6, #1]!
   1c1c8:	ldrb	r1, [r0, r1, lsl #1]
   1c1cc:	tst	r1, #1
   1c1d0:	bne	1c1c4 <argp_parse@@Base+0x27a8>
   1c1d4:	ldr	r4, [sp, #4]
   1c1d8:	b	1c1e4 <argp_parse@@Base+0x27c8>
   1c1dc:	ldr	r4, [sp, #4]
   1c1e0:	add	r5, r7, #1
   1c1e4:	mov	r3, #32
   1c1e8:	add	r0, r8, #1
   1c1ec:	cmp	r6, r0
   1c1f0:	beq	1c214 <argp_parse@@Base+0x27f8>
   1c1f4:	cmp	r8, r6
   1c1f8:	bls	1c27c <argp_parse@@Base+0x2860>
   1c1fc:	mvn	r0, r5
   1c200:	add	r0, r0, r6
   1c204:	cmp	r0, r4
   1c208:	bge	1c27c <argp_parse@@Base+0x2860>
   1c20c:	ldr	r0, [sl, #32]
   1c210:	b	1c22c <argp_parse@@Base+0x2810>
   1c214:	cmp	r8, r6
   1c218:	bls	1c27c <argp_parse@@Base+0x2860>
   1c21c:	ldr	r0, [sl, #32]
   1c220:	sub	r1, r0, r5
   1c224:	cmp	r1, r4
   1c228:	bgt	1c27c <argp_parse@@Base+0x2860>
   1c22c:	sub	r0, r0, r8
   1c230:	add	r1, r4, #1
   1c234:	cmp	r0, r1
   1c238:	ble	1c288 <argp_parse@@Base+0x286c>
   1c23c:	mov	r0, r4
   1c240:	sub	r4, r8, r6
   1c244:	add	r7, r5, #1
   1c248:	mov	r1, r6
   1c24c:	add	r0, r7, r0
   1c250:	mov	r2, r4
   1c254:	bl	11a04 <memmove@plt>
   1c258:	ldr	r0, [sl, #12]
   1c25c:	mov	r1, #10
   1c260:	mov	r3, #32
   1c264:	strb	r1, [r5]
   1c268:	mov	r5, r7
   1c26c:	add	r6, r7, r0
   1c270:	add	r0, r6, r4
   1c274:	sub	r0, r0, r9
   1c278:	b	1c2d8 <argp_parse@@Base+0x28bc>
   1c27c:	mov	r0, #10
   1c280:	strb	r0, [r5], #1
   1c284:	b	1c2dc <argp_parse@@Base+0x28c0>
   1c288:	ldr	r0, [sl, #24]
   1c28c:	cmp	r5, r0
   1c290:	bls	1c2a8 <argp_parse@@Base+0x288c>
   1c294:	ldr	r3, [sl]
   1c298:	sub	r2, r5, r0
   1c29c:	mov	r1, #1
   1c2a0:	bl	11a7c <fwrite_unlocked@plt>
   1c2a4:	mov	r3, #32
   1c2a8:	ldr	r0, [sl]
   1c2ac:	ldr	r1, [r0, #20]
   1c2b0:	ldr	r2, [r0, #24]
   1c2b4:	cmp	r1, r2
   1c2b8:	bcs	1c3cc <argp_parse@@Base+0x29b0>
   1c2bc:	add	r2, r1, #1
   1c2c0:	str	r2, [r0, #20]
   1c2c4:	mov	r0, #10
   1c2c8:	strb	r0, [r1]
   1c2cc:	ldr	r5, [sl, #24]
   1c2d0:	sub	r0, r8, r5
   1c2d4:	mov	r9, r5
   1c2d8:	str	r0, [sp, #8]
   1c2dc:	ldr	r7, [sl, #12]
   1c2e0:	sub	r0, r6, r5
   1c2e4:	cmp	r0, r7
   1c2e8:	bge	1c360 <argp_parse@@Base+0x2944>
   1c2ec:	ldr	r0, [sp, #8]
   1c2f0:	add	r0, r9, r0
   1c2f4:	add	r0, r0, #1
   1c2f8:	cmp	r6, r0
   1c2fc:	bne	1c310 <argp_parse@@Base+0x28f4>
   1c300:	ldr	r0, [sl, #32]
   1c304:	sub	r0, r0, r6
   1c308:	cmp	r0, r7
   1c30c:	bge	1c360 <argp_parse@@Base+0x2944>
   1c310:	cmp	r7, #1
   1c314:	blt	1c384 <argp_parse@@Base+0x2968>
   1c318:	mov	r4, #0
   1c31c:	ldr	r0, [sl]
   1c320:	ldr	r1, [r0, #20]
   1c324:	ldr	r2, [r0, #24]
   1c328:	cmp	r1, r2
   1c32c:	bcs	1c350 <argp_parse@@Base+0x2934>
   1c330:	add	r2, r1, #1
   1c334:	str	r2, [r0, #20]
   1c338:	strb	r3, [r1]
   1c33c:	ldr	r7, [sl, #12]
   1c340:	add	r4, r4, #1
   1c344:	cmp	r4, r7
   1c348:	blt	1c31c <argp_parse@@Base+0x2900>
   1c34c:	b	1c384 <argp_parse@@Base+0x2968>
   1c350:	mov	r1, #32
   1c354:	bl	11cf8 <__overflow@plt>
   1c358:	mov	r3, #32
   1c35c:	b	1c33c <argp_parse@@Base+0x2920>
   1c360:	cmp	r7, #1
   1c364:	blt	1c384 <argp_parse@@Base+0x2968>
   1c368:	mov	r0, #0
   1c36c:	strb	r3, [r5, r0]
   1c370:	add	r0, r0, #1
   1c374:	ldr	r7, [sl, #12]
   1c378:	cmp	r0, r7
   1c37c:	blt	1c36c <argp_parse@@Base+0x2950>
   1c380:	add	r5, r5, r0
   1c384:	cmp	r5, r6
   1c388:	bcs	1bf18 <argp_parse@@Base+0x24fc>
   1c38c:	ldr	r0, [sp, #8]
   1c390:	mov	r1, r6
   1c394:	add	r0, r9, r0
   1c398:	sub	r2, r0, r6
   1c39c:	mov	r0, r5
   1c3a0:	bl	11a04 <memmove@plt>
   1c3a4:	ldr	r7, [sl, #12]
   1c3a8:	mov	r3, #32
   1c3ac:	b	1bf18 <argp_parse@@Base+0x24fc>
   1c3b0:	mov	r7, #0
   1c3b4:	add	r5, r4, #1
   1c3b8:	mov	r3, #32
   1c3bc:	str	r7, [sl, #20]
   1c3c0:	cmp	r5, r8
   1c3c4:	bcc	1bf40 <argp_parse@@Base+0x2524>
   1c3c8:	b	1c3f8 <argp_parse@@Base+0x29dc>
   1c3cc:	mov	r1, #10
   1c3d0:	bl	11cf8 <__overflow@plt>
   1c3d4:	mov	r3, #32
   1c3d8:	b	1c2cc <argp_parse@@Base+0x28b0>
   1c3dc:	str	r0, [sl, #20]
   1c3e0:	b	1c3f8 <argp_parse@@Base+0x29dc>
   1c3e4:	add	r0, r7, r0
   1c3e8:	str	r0, [sl, #20]
   1c3ec:	sub	r0, r6, r0
   1c3f0:	add	r8, r8, r0
   1c3f4:	str	r8, [sl, #28]
   1c3f8:	ldr	r0, [sl, #24]
   1c3fc:	sub	r0, r8, r0
   1c400:	str	r0, [sl, #16]
   1c404:	sub	sp, fp, #28
   1c408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c40c:	push	{r4, r5, r6, sl, fp, lr}
   1c410:	add	fp, sp, #16
   1c414:	mov	r4, r0
   1c418:	mov	r5, r1
   1c41c:	ldr	r0, [r0, #28]
   1c420:	mov	r6, #1
   1c424:	ldr	r1, [r4, #32]
   1c428:	sub	r0, r1, r0
   1c42c:	cmp	r0, r5
   1c430:	bcs	1c4f0 <argp_parse@@Base+0x2ad4>
   1c434:	mov	r0, r4
   1c438:	bl	1bedc <argp_parse@@Base+0x24c0>
   1c43c:	ldr	r0, [r4, #24]
   1c440:	ldr	r1, [r4, #28]
   1c444:	ldr	r3, [r4]
   1c448:	sub	r2, r1, r0
   1c44c:	mov	r1, #1
   1c450:	bl	11a7c <fwrite_unlocked@plt>
   1c454:	mov	r1, r0
   1c458:	ldr	r0, [r4, #24]
   1c45c:	ldr	r2, [r4, #28]
   1c460:	sub	r3, r2, r0
   1c464:	cmp	r1, r3
   1c468:	bne	1c4bc <argp_parse@@Base+0x2aa0>
   1c46c:	mov	r1, #0
   1c470:	mov	r6, #1
   1c474:	str	r1, [r4, #16]
   1c478:	str	r0, [r4, #28]
   1c47c:	ldr	r1, [r4, #32]
   1c480:	sub	r1, r1, r0
   1c484:	cmp	r1, r5
   1c488:	bcs	1c4f0 <argp_parse@@Base+0x2ad4>
   1c48c:	adds	r5, r1, r5
   1c490:	bcs	1c4e0 <argp_parse@@Base+0x2ac4>
   1c494:	mov	r1, r5
   1c498:	bl	1bdbc <argp_parse@@Base+0x23a0>
   1c49c:	cmp	r0, #0
   1c4a0:	beq	1c4e0 <argp_parse@@Base+0x2ac4>
   1c4a4:	str	r0, [r4, #24]
   1c4a8:	add	r1, r0, r5
   1c4ac:	str	r0, [r4, #28]
   1c4b0:	mov	r0, r6
   1c4b4:	str	r1, [r4, #32]
   1c4b8:	pop	{r4, r5, r6, sl, fp, pc}
   1c4bc:	sub	r2, r2, r1
   1c4c0:	str	r2, [r4, #28]
   1c4c4:	sub	r2, r2, r0
   1c4c8:	ldr	r3, [r4, #16]
   1c4cc:	sub	r3, r3, r1
   1c4d0:	add	r1, r0, r1
   1c4d4:	str	r3, [r4, #16]
   1c4d8:	bl	11a04 <memmove@plt>
   1c4dc:	b	1c4ec <argp_parse@@Base+0x2ad0>
   1c4e0:	bl	11c50 <__errno_location@plt>
   1c4e4:	mov	r1, #12
   1c4e8:	str	r1, [r0]
   1c4ec:	mov	r6, #0
   1c4f0:	mov	r0, r6
   1c4f4:	pop	{r4, r5, r6, sl, fp, pc}
   1c4f8:	sub	sp, sp, #8
   1c4fc:	push	{r4, r5, r6, r7, fp, lr}
   1c500:	add	fp, sp, #16
   1c504:	sub	sp, sp, #8
   1c508:	mov	r5, r1
   1c50c:	mov	r4, r0
   1c510:	mov	r1, #150	; 0x96
   1c514:	add	r6, fp, #8
   1c518:	str	r2, [fp, #8]
   1c51c:	str	r3, [fp, #12]
   1c520:	mov	r0, r4
   1c524:	bl	1c40c <argp_parse@@Base+0x29f0>
   1c528:	cmp	r0, #0
   1c52c:	beq	1c56c <argp_parse@@Base+0x2b50>
   1c530:	str	r6, [sp, #4]
   1c534:	mov	r2, r5
   1c538:	mov	r3, r6
   1c53c:	ldr	r0, [r4, #28]
   1c540:	ldr	r1, [r4, #32]
   1c544:	sub	r7, r1, r0
   1c548:	mov	r1, r7
   1c54c:	bl	11d64 <vsnprintf@plt>
   1c550:	add	r1, r0, #1
   1c554:	cmp	r0, r7
   1c558:	bcs	1c520 <argp_parse@@Base+0x2b04>
   1c55c:	ldr	r1, [r4, #28]
   1c560:	add	r1, r1, r0
   1c564:	str	r1, [r4, #28]
   1c568:	b	1c570 <argp_parse@@Base+0x2b54>
   1c56c:	mvn	r0, #0
   1c570:	sub	sp, fp, #16
   1c574:	pop	{r4, r5, r6, r7, fp, lr}
   1c578:	add	sp, sp, #8
   1c57c:	bx	lr
   1c580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c584:	add	fp, sp, #28
   1c588:	sub	sp, sp, #92	; 0x5c
   1c58c:	mvn	r4, #0
   1c590:	cmp	r0, #1
   1c594:	blt	1d078 <argp_parse@@Base+0x365c>
   1c598:	ldr	ip, [fp, #16]
   1c59c:	mov	r9, r2
   1c5a0:	mov	r2, r0
   1c5a4:	mov	r8, r1
   1c5a8:	mov	r0, #0
   1c5ac:	str	r3, [fp, #-48]	; 0xffffffd0
   1c5b0:	ldr	r6, [ip]
   1c5b4:	ldr	r4, [ip, #4]
   1c5b8:	str	r0, [ip, #12]
   1c5bc:	cmp	r6, #0
   1c5c0:	beq	1c5e4 <argp_parse@@Base+0x2bc8>
   1c5c4:	ldr	r0, [ip, #16]
   1c5c8:	cmp	r0, #0
   1c5cc:	beq	1c5ec <argp_parse@@Base+0x2bd0>
   1c5d0:	ldrb	r0, [r9]
   1c5d4:	cmp	r0, #45	; 0x2d
   1c5d8:	cmpne	r0, #43	; 0x2b
   1c5dc:	addeq	r9, r9, #1
   1c5e0:	b	1c660 <argp_parse@@Base+0x2c44>
   1c5e4:	mov	r6, #1
   1c5e8:	str	r6, [ip]
   1c5ec:	mov	r0, #0
   1c5f0:	str	r6, [ip, #28]
   1c5f4:	str	r6, [ip, #32]
   1c5f8:	str	r0, [ip, #20]
   1c5fc:	ldrb	r1, [r9]
   1c600:	cmp	r1, #43	; 0x2b
   1c604:	beq	1c614 <argp_parse@@Base+0x2bf8>
   1c608:	cmp	r1, #45	; 0x2d
   1c60c:	bne	1c620 <argp_parse@@Base+0x2c04>
   1c610:	mov	r0, #2
   1c614:	str	r0, [ip, #24]
   1c618:	add	r9, r9, #1
   1c61c:	b	1c658 <argp_parse@@Base+0x2c3c>
   1c620:	ldr	r0, [fp, #20]
   1c624:	cmp	r0, #0
   1c628:	bne	1c650 <argp_parse@@Base+0x2c34>
   1c62c:	movw	r0, #62108	; 0xf29c
   1c630:	mov	r5, ip
   1c634:	mov	r7, r2
   1c638:	movt	r0, #1
   1c63c:	bl	11b9c <getenv@plt>
   1c640:	mov	r2, r7
   1c644:	mov	ip, r5
   1c648:	cmp	r0, #0
   1c64c:	beq	1d084 <argp_parse@@Base+0x3668>
   1c650:	mov	r0, #0
   1c654:	str	r0, [ip, #24]
   1c658:	mov	r0, #1
   1c65c:	str	r0, [ip, #16]
   1c660:	ldrb	r0, [r9]
   1c664:	ldr	r5, [ip, #20]
   1c668:	str	r8, [fp, #-32]	; 0xffffffe0
   1c66c:	subs	r1, r0, #58	; 0x3a
   1c670:	movne	r1, r4
   1c674:	cmp	r5, #0
   1c678:	str	r1, [fp, #-44]	; 0xffffffd4
   1c67c:	beq	1c6e8 <argp_parse@@Base+0x2ccc>
   1c680:	ldrb	r0, [r5]
   1c684:	cmp	r0, #0
   1c688:	beq	1c6e8 <argp_parse@@Base+0x2ccc>
   1c68c:	str	r2, [fp, #-36]	; 0xffffffdc
   1c690:	add	r8, r5, #1
   1c694:	mov	r0, r9
   1c698:	mov	r7, ip
   1c69c:	str	r8, [ip, #20]
   1c6a0:	ldrb	r4, [r5]
   1c6a4:	mov	r1, r4
   1c6a8:	bl	11c38 <strchr@plt>
   1c6ac:	ldrb	r1, [r5, #1]
   1c6b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c6b4:	cmp	r1, #0
   1c6b8:	orr	r1, r4, #1
   1c6bc:	addeq	r6, r6, #1
   1c6c0:	streq	r6, [r7]
   1c6c4:	cmp	r1, #59	; 0x3b
   1c6c8:	cmpne	r0, #0
   1c6cc:	bne	1c748 <argp_parse@@Base+0x2d2c>
   1c6d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c6d4:	cmp	r0, #0
   1c6d8:	bne	1d0b8 <argp_parse@@Base+0x369c>
   1c6dc:	str	r4, [r7, #8]
   1c6e0:	mov	r4, #63	; 0x3f
   1c6e4:	b	1d078 <argp_parse@@Base+0x365c>
   1c6e8:	mov	r3, ip
   1c6ec:	str	r9, [sp, #48]	; 0x30
   1c6f0:	mov	r5, ip
   1c6f4:	ldr	r9, [r3, #32]!
   1c6f8:	cmp	r9, r6
   1c6fc:	strgt	r6, [r3]
   1c700:	movgt	r9, r6
   1c704:	ldr	r7, [r5, #28]!
   1c708:	cmp	r7, r6
   1c70c:	strgt	r6, [r5]
   1c710:	movgt	r7, r6
   1c714:	ldr	r4, [ip, #24]
   1c718:	cmp	r4, #1
   1c71c:	bne	1cbc0 <argp_parse@@Base+0x31a4>
   1c720:	cmp	r7, r9
   1c724:	cmpne	r9, r6
   1c728:	bne	1c7cc <argp_parse@@Base+0x2db0>
   1c72c:	cmp	r9, r6
   1c730:	mov	r1, r5
   1c734:	mov	r0, r6
   1c738:	bne	1cb6c <argp_parse@@Base+0x3150>
   1c73c:	cmp	r6, r2
   1c740:	blt	1cb90 <argp_parse@@Base+0x3174>
   1c744:	b	1cbac <argp_parse@@Base+0x3190>
   1c748:	ldrb	r2, [r0]
   1c74c:	ldrb	r1, [r0, #1]
   1c750:	cmp	r2, #87	; 0x57
   1c754:	bne	1c7a4 <argp_parse@@Base+0x2d88>
   1c758:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c75c:	cmp	r2, #0
   1c760:	beq	1c7a4 <argp_parse@@Base+0x2d88>
   1c764:	cmp	r1, #59	; 0x3b
   1c768:	bne	1c7a4 <argp_parse@@Base+0x2d88>
   1c76c:	ldrb	r0, [r8]
   1c770:	cmp	r0, #0
   1c774:	bne	1d0e8 <argp_parse@@Base+0x36cc>
   1c778:	cmp	r6, r3
   1c77c:	bne	1d0e0 <argp_parse@@Base+0x36c4>
   1c780:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c784:	cmp	r0, #0
   1c788:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c78c:	bne	1d1e0 <argp_parse@@Base+0x37c4>
   1c790:	str	r4, [r7, #8]
   1c794:	ldrb	r4, [r9]
   1c798:	cmp	r4, #58	; 0x3a
   1c79c:	movwne	r4, #63	; 0x3f
   1c7a0:	b	1d078 <argp_parse@@Base+0x365c>
   1c7a4:	cmp	r1, #58	; 0x3a
   1c7a8:	bne	1d078 <argp_parse@@Base+0x365c>
   1c7ac:	ldrb	r0, [r0, #2]
   1c7b0:	ldrb	r1, [r8]
   1c7b4:	cmp	r0, #58	; 0x3a
   1c7b8:	bne	1ccc8 <argp_parse@@Base+0x32ac>
   1c7bc:	cmp	r1, #0
   1c7c0:	bne	1ccd0 <argp_parse@@Base+0x32b4>
   1c7c4:	mov	r0, #0
   1c7c8:	b	1d1a8 <argp_parse@@Base+0x378c>
   1c7cc:	cmp	r6, r9
   1c7d0:	str	r4, [sp, #28]
   1c7d4:	str	r5, [sp, #56]	; 0x38
   1c7d8:	str	r7, [fp, #-40]	; 0xffffffd8
   1c7dc:	str	r3, [sp, #52]	; 0x34
   1c7e0:	str	r2, [fp, #-36]	; 0xffffffdc
   1c7e4:	ble	1cb48 <argp_parse@@Base+0x312c>
   1c7e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c7ec:	cmp	r0, r9
   1c7f0:	bge	1cb48 <argp_parse@@Base+0x312c>
   1c7f4:	add	r0, r8, r9, lsl #2
   1c7f8:	ldr	lr, [fp, #-40]	; 0xffffffd8
   1c7fc:	mov	r2, r6
   1c800:	str	r0, [fp, #-52]	; 0xffffffcc
   1c804:	sub	r0, r8, r9, lsl #2
   1c808:	str	r0, [sp, #32]
   1c80c:	rsb	r0, r9, #1
   1c810:	add	r0, r8, r0, lsl #2
   1c814:	str	r0, [sp, #44]	; 0x2c
   1c818:	mvn	r0, r9
   1c81c:	str	r0, [fp, #-56]	; 0xffffffc8
   1c820:	add	r0, r8, r0, lsl #2
   1c824:	add	r0, r0, #4
   1c828:	str	r0, [sp, #24]
   1c82c:	add	r0, r8, #4
   1c830:	str	r0, [sp, #60]	; 0x3c
   1c834:	b	1c848 <argp_parse@@Base+0x2e2c>
   1c838:	mov	r2, sl
   1c83c:	cmp	r2, r9
   1c840:	cmpgt	r9, lr
   1c844:	ble	1cb48 <argp_parse@@Base+0x312c>
   1c848:	sub	r4, r9, lr
   1c84c:	sub	r0, r2, r9
   1c850:	cmp	r0, r4
   1c854:	ble	1c904 <argp_parse@@Base+0x2ee8>
   1c858:	sub	sl, r2, r4
   1c85c:	cmp	r4, #1
   1c860:	blt	1c838 <argp_parse@@Base+0x2e1c>
   1c864:	mov	r3, #0
   1c868:	cmp	r4, #4
   1c86c:	bcc	1c9ec <argp_parse@@Base+0x2fd0>
   1c870:	add	r5, r8, r2, lsl #2
   1c874:	add	r1, r8, lr, lsl #2
   1c878:	cmp	r1, r5
   1c87c:	bcs	1c890 <argp_parse@@Base+0x2e74>
   1c880:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c884:	add	r5, r8, sl, lsl #2
   1c888:	cmp	r5, r0
   1c88c:	bcc	1c9ec <argp_parse@@Base+0x2fd0>
   1c890:	bic	r3, r4, #3
   1c894:	mov	r0, #1
   1c898:	str	sl, [sp, #40]	; 0x28
   1c89c:	subs	r5, r3, #4
   1c8a0:	add	r5, r0, r5, lsr #2
   1c8a4:	and	r0, r5, #1
   1c8a8:	str	r0, [sp, #36]	; 0x24
   1c8ac:	beq	1c9a8 <argp_parse@@Base+0x2f8c>
   1c8b0:	sub	r8, r5, r0
   1c8b4:	ldr	r0, [sp, #24]
   1c8b8:	add	r5, r2, lr
   1c8bc:	mov	r7, #0
   1c8c0:	add	sl, r0, r5, lsl #2
   1c8c4:	mov	r5, #0
   1c8c8:	add	ip, r1, r5
   1c8cc:	add	r0, sl, r5
   1c8d0:	add	r5, r5, #32
   1c8d4:	subs	r8, r8, #2
   1c8d8:	add	r7, r7, #8
   1c8dc:	vld1.32	{d16-d17}, [r0]
   1c8e0:	vld1.32	{d18-d19}, [ip]
   1c8e4:	vst1.32	{d16-d17}, [ip]!
   1c8e8:	vst1.32	{d18-d19}, [r0]!
   1c8ec:	vld1.32	{d16-d17}, [r0]
   1c8f0:	vld1.32	{d18-d19}, [ip]
   1c8f4:	vst1.32	{d16-d17}, [ip]
   1c8f8:	vst1.32	{d18-d19}, [r0]
   1c8fc:	bne	1c8c8 <argp_parse@@Base+0x2eac>
   1c900:	b	1c9ac <argp_parse@@Base+0x2f90>
   1c904:	cmp	r0, #1
   1c908:	blt	1cb3c <argp_parse@@Base+0x3120>
   1c90c:	mov	sl, #0
   1c910:	cmp	r0, #3
   1c914:	bls	1cab8 <argp_parse@@Base+0x309c>
   1c918:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c91c:	add	r1, r3, r2, lsl #2
   1c920:	add	r8, r3, lr, lsl #2
   1c924:	cmp	r8, r1
   1c928:	bcs	1c944 <argp_parse@@Base+0x2f28>
   1c92c:	ldr	r3, [sp, #32]
   1c930:	add	r1, r2, lr
   1c934:	add	r1, r3, r1, lsl #2
   1c938:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c93c:	cmp	r3, r1
   1c940:	bcc	1cab8 <argp_parse@@Base+0x309c>
   1c944:	bic	sl, r0, #3
   1c948:	mov	r3, #1
   1c94c:	subs	r1, sl, #4
   1c950:	add	r1, r3, r1, lsr #2
   1c954:	and	r3, r1, #1
   1c958:	str	r3, [sp, #40]	; 0x28
   1c95c:	beq	1ca78 <argp_parse@@Base+0x305c>
   1c960:	sub	r7, r3, r1
   1c964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c968:	mov	r1, #0
   1c96c:	mov	ip, #32
   1c970:	mov	r5, r3
   1c974:	mov	r4, r8
   1c978:	adds	r7, r7, #2
   1c97c:	add	r1, r1, #8
   1c980:	vld1.32	{d16-d17}, [r5]!
   1c984:	vld1.32	{d18-d19}, [r4]!
   1c988:	vst1.32	{d16-d17}, [r8], ip
   1c98c:	vst1.32	{d18-d19}, [r3], ip
   1c990:	vld1.32	{d16-d17}, [r5]
   1c994:	vld1.32	{d18-d19}, [r4]
   1c998:	vst1.32	{d16-d17}, [r4]
   1c99c:	vst1.32	{d18-d19}, [r5]
   1c9a0:	bne	1c970 <argp_parse@@Base+0x2f54>
   1c9a4:	b	1ca7c <argp_parse@@Base+0x3060>
   1c9a8:	mov	r7, #0
   1c9ac:	ldr	r0, [sp, #36]	; 0x24
   1c9b0:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1c9b4:	ldr	sl, [sp, #40]	; 0x28
   1c9b8:	cmp	r0, #0
   1c9bc:	beq	1c9e0 <argp_parse@@Base+0x2fc4>
   1c9c0:	add	r0, r7, lr
   1c9c4:	add	r1, r7, sl
   1c9c8:	add	r0, r8, r0, lsl #2
   1c9cc:	add	r1, r8, r1, lsl #2
   1c9d0:	vld1.32	{d16-d17}, [r1]
   1c9d4:	vld1.32	{d18-d19}, [r0]
   1c9d8:	vst1.32	{d16-d17}, [r0]
   1c9dc:	vst1.32	{d18-d19}, [r1]
   1c9e0:	ldr	ip, [fp, #16]
   1c9e4:	cmp	r4, r3
   1c9e8:	beq	1c838 <argp_parse@@Base+0x2e1c>
   1c9ec:	mvn	r0, r3
   1c9f0:	tst	r4, #1
   1c9f4:	add	r1, r9, r0
   1c9f8:	beq	1ca18 <argp_parse@@Base+0x2ffc>
   1c9fc:	add	r0, r3, lr
   1ca00:	add	r5, r3, sl
   1ca04:	orr	r3, r3, #1
   1ca08:	ldr	r7, [r8, r0, lsl #2]
   1ca0c:	ldr	r4, [r8, r5, lsl #2]
   1ca10:	str	r4, [r8, r0, lsl #2]
   1ca14:	str	r7, [r8, r5, lsl #2]
   1ca18:	cmp	r1, lr
   1ca1c:	beq	1c838 <argp_parse@@Base+0x2e1c>
   1ca20:	ldr	r4, [sp, #60]	; 0x3c
   1ca24:	add	r0, lr, r3
   1ca28:	sub	r1, r9, r3
   1ca2c:	add	r4, r4, r0, lsl #2
   1ca30:	add	r0, r2, lr
   1ca34:	ldr	r2, [sp, #44]	; 0x2c
   1ca38:	add	r0, r0, r3
   1ca3c:	add	r2, r2, r0, lsl #2
   1ca40:	ldr	r0, [r4, #-4]
   1ca44:	ldr	r3, [r2, #-4]
   1ca48:	sub	r1, r1, #2
   1ca4c:	cmp	lr, r1
   1ca50:	str	r3, [r4, #-4]
   1ca54:	str	r0, [r2, #-4]
   1ca58:	ldr	r0, [r4]
   1ca5c:	ldr	r3, [r2]
   1ca60:	str	r3, [r4]
   1ca64:	str	r0, [r2]
   1ca68:	add	r2, r2, #8
   1ca6c:	add	r4, r4, #8
   1ca70:	bne	1ca40 <argp_parse@@Base+0x3024>
   1ca74:	b	1c838 <argp_parse@@Base+0x2e1c>
   1ca78:	mov	r1, #0
   1ca7c:	ldr	r3, [sp, #40]	; 0x28
   1ca80:	ldr	ip, [fp, #16]
   1ca84:	cmp	r3, #0
   1ca88:	beq	1cab0 <argp_parse@@Base+0x3094>
   1ca8c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1ca90:	add	r3, r1, lr
   1ca94:	add	r1, r1, r9
   1ca98:	add	r3, r4, r3, lsl #2
   1ca9c:	add	r1, r4, r1, lsl #2
   1caa0:	vld1.32	{d16-d17}, [r1]
   1caa4:	vld1.32	{d18-d19}, [r3]
   1caa8:	vst1.32	{d16-d17}, [r3]
   1caac:	vst1.32	{d18-d19}, [r1]
   1cab0:	cmp	r0, sl
   1cab4:	beq	1cb3c <argp_parse@@Base+0x3120>
   1cab8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cabc:	tst	r0, #1
   1cac0:	mov	r4, sl
   1cac4:	add	r1, r2, r1
   1cac8:	beq	1caec <argp_parse@@Base+0x30d0>
   1cacc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cad0:	add	r7, sl, r9
   1cad4:	add	r4, sl, lr
   1cad8:	ldr	r5, [r3, r7, lsl #2]
   1cadc:	ldr	r8, [r3, r4, lsl #2]
   1cae0:	str	r5, [r3, r4, lsl #2]
   1cae4:	orr	r4, sl, #1
   1cae8:	str	r8, [r3, r7, lsl #2]
   1caec:	cmp	r1, sl
   1caf0:	beq	1cb3c <argp_parse@@Base+0x3120>
   1caf4:	ldr	r3, [sp, #60]	; 0x3c
   1caf8:	add	r1, lr, r4
   1cafc:	add	r4, r9, r4
   1cb00:	add	r1, r3, r1, lsl #2
   1cb04:	add	r3, r3, r4, lsl #2
   1cb08:	sub	r4, r4, r2
   1cb0c:	ldr	r7, [r1, #-4]
   1cb10:	ldr	r5, [r3, #-4]
   1cb14:	adds	r4, r4, #2
   1cb18:	str	r5, [r1, #-4]
   1cb1c:	str	r7, [r3, #-4]
   1cb20:	ldr	r7, [r1]
   1cb24:	ldr	r5, [r3]
   1cb28:	str	r5, [r1]
   1cb2c:	str	r7, [r3]
   1cb30:	add	r1, r1, #8
   1cb34:	add	r3, r3, #8
   1cb38:	bne	1cb0c <argp_parse@@Base+0x30f0>
   1cb3c:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1cb40:	add	lr, r0, lr
   1cb44:	b	1c83c <argp_parse@@Base+0x2e20>
   1cb48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cb4c:	ldr	r3, [sp, #52]	; 0x34
   1cb50:	ldr	r5, [sp, #56]	; 0x38
   1cb54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cb58:	ldr	r4, [sp, #28]
   1cb5c:	add	r0, r0, r6
   1cb60:	mov	r1, r3
   1cb64:	sub	r0, r0, r9
   1cb68:	str	r0, [r5]
   1cb6c:	mov	r7, r0
   1cb70:	str	r6, [r1]
   1cb74:	cmp	r6, r2
   1cb78:	blt	1cb90 <argp_parse@@Base+0x3174>
   1cb7c:	b	1cbac <argp_parse@@Base+0x3190>
   1cb80:	add	r6, r6, #1
   1cb84:	cmp	r2, r6
   1cb88:	str	r6, [ip]
   1cb8c:	beq	1cbb4 <argp_parse@@Base+0x3198>
   1cb90:	ldr	r0, [r8, r6, lsl #2]
   1cb94:	ldrb	r1, [r0]
   1cb98:	cmp	r1, #45	; 0x2d
   1cb9c:	bne	1cb80 <argp_parse@@Base+0x3164>
   1cba0:	ldrb	r0, [r0, #1]
   1cba4:	cmp	r0, #0
   1cba8:	beq	1cb80 <argp_parse@@Base+0x3164>
   1cbac:	mov	r9, r6
   1cbb0:	b	1cbb8 <argp_parse@@Base+0x319c>
   1cbb4:	mov	r9, r2
   1cbb8:	mov	r6, r9
   1cbbc:	str	r9, [r3]
   1cbc0:	cmp	r6, r2
   1cbc4:	beq	1d06c <argp_parse@@Base+0x3650>
   1cbc8:	mov	sl, r4
   1cbcc:	movw	r4, #57324	; 0xdfec
   1cbd0:	ldr	r0, [r8, r6, lsl #2]
   1cbd4:	str	r5, [sp, #56]	; 0x38
   1cbd8:	str	r7, [fp, #-40]	; 0xffffffd8
   1cbdc:	str	r3, [sp, #52]	; 0x34
   1cbe0:	str	r2, [fp, #-36]	; 0xffffffdc
   1cbe4:	movt	r4, #1
   1cbe8:	mov	r1, r4
   1cbec:	bl	11998 <strcmp@plt>
   1cbf0:	cmp	r0, #0
   1cbf4:	beq	1cc78 <argp_parse@@Base+0x325c>
   1cbf8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cbfc:	ldr	ip, [fp, #16]
   1cc00:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1cc04:	cmp	r6, r2
   1cc08:	beq	1d06c <argp_parse@@Base+0x3650>
   1cc0c:	ldr	r5, [r8, r6, lsl #2]
   1cc10:	mov	r3, r4
   1cc14:	mvn	r4, #0
   1cc18:	ldrb	r0, [r5]
   1cc1c:	cmp	r0, #45	; 0x2d
   1cc20:	bne	1ccb0 <argp_parse@@Base+0x3294>
   1cc24:	mov	r7, r5
   1cc28:	ldrb	r1, [r7, #1]!
   1cc2c:	cmp	r1, #0
   1cc30:	beq	1ccb0 <argp_parse@@Base+0x3294>
   1cc34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cc38:	cmp	r0, #0
   1cc3c:	beq	1d1d0 <argp_parse@@Base+0x37b4>
   1cc40:	ldr	r9, [fp, #12]
   1cc44:	cmp	r1, #45	; 0x2d
   1cc48:	bne	1d134 <argp_parse@@Base+0x3718>
   1cc4c:	add	r0, r5, #2
   1cc50:	mov	r1, r8
   1cc54:	str	r0, [ip, #20]
   1cc58:	ldr	r0, [fp, #8]
   1cc5c:	stm	sp, {r0, r9, ip}
   1cc60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cc64:	str	r3, [sp, #16]
   1cc68:	str	r0, [sp, #12]
   1cc6c:	mov	r0, r2
   1cc70:	ldr	r2, [sp, #48]	; 0x30
   1cc74:	b	1d124 <argp_parse@@Base+0x3708>
   1cc78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cc7c:	ldr	ip, [fp, #16]
   1cc80:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1cc84:	add	r2, r6, #1
   1cc88:	cmp	r0, r9
   1cc8c:	str	r2, [ip]
   1cc90:	cmpne	r9, r2
   1cc94:	bne	1cce0 <argp_parse@@Base+0x32c4>
   1cc98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cc9c:	ldr	r1, [sp, #56]	; 0x38
   1cca0:	cmp	r0, r9
   1cca4:	mov	r0, r2
   1cca8:	beq	1d054 <argp_parse@@Base+0x3638>
   1ccac:	b	1d05c <argp_parse@@Base+0x3640>
   1ccb0:	cmp	sl, #0
   1ccb4:	addne	r0, r6, #1
   1ccb8:	strne	r5, [ip, #12]
   1ccbc:	movne	r4, #1
   1ccc0:	strne	r0, [ip]
   1ccc4:	b	1d078 <argp_parse@@Base+0x365c>
   1ccc8:	cmp	r1, #0
   1cccc:	beq	1d08c <argp_parse@@Base+0x3670>
   1ccd0:	add	r0, r6, #1
   1ccd4:	str	r8, [r7, #12]
   1ccd8:	str	r0, [r7]
   1ccdc:	b	1d1ac <argp_parse@@Base+0x3790>
   1cce0:	cmp	r6, r9
   1cce4:	str	r2, [sp, #48]	; 0x30
   1cce8:	blt	1d034 <argp_parse@@Base+0x3618>
   1ccec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ccf0:	cmp	r0, r9
   1ccf4:	bge	1d034 <argp_parse@@Base+0x3618>
   1ccf8:	add	r0, r8, r9, lsl #2
   1ccfc:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1cd00:	str	r0, [fp, #-44]	; 0xffffffd4
   1cd04:	sub	r0, r8, r9, lsl #2
   1cd08:	str	r0, [sp, #44]	; 0x2c
   1cd0c:	rsb	r0, r9, #1
   1cd10:	add	r0, r8, r0, lsl #2
   1cd14:	str	r0, [fp, #-56]	; 0xffffffc8
   1cd18:	mvn	r0, r9
   1cd1c:	str	r0, [fp, #-48]	; 0xffffffd0
   1cd20:	add	r0, r8, r0, lsl #2
   1cd24:	add	r0, r0, #4
   1cd28:	str	r0, [sp, #40]	; 0x28
   1cd2c:	add	r0, r8, #4
   1cd30:	str	r0, [fp, #-52]	; 0xffffffcc
   1cd34:	ldr	r0, [sp, #48]	; 0x30
   1cd38:	b	1cd4c <argp_parse@@Base+0x3330>
   1cd3c:	mov	r0, r3
   1cd40:	cmp	r0, r9
   1cd44:	cmpgt	r9, ip
   1cd48:	ble	1d034 <argp_parse@@Base+0x3618>
   1cd4c:	sub	r4, r9, ip
   1cd50:	sub	sl, r0, r9
   1cd54:	cmp	sl, r4
   1cd58:	ble	1ce04 <argp_parse@@Base+0x33e8>
   1cd5c:	sub	r3, r0, r4
   1cd60:	cmp	r4, #1
   1cd64:	blt	1cd3c <argp_parse@@Base+0x3320>
   1cd68:	mov	r1, #0
   1cd6c:	cmp	r4, #4
   1cd70:	bcc	1cee4 <argp_parse@@Base+0x34c8>
   1cd74:	add	r2, r8, r0, lsl #2
   1cd78:	add	r7, r8, ip, lsl #2
   1cd7c:	cmp	r7, r2
   1cd80:	bcs	1cd94 <argp_parse@@Base+0x3378>
   1cd84:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1cd88:	add	r2, r8, r3, lsl #2
   1cd8c:	cmp	r2, r5
   1cd90:	bcc	1cee4 <argp_parse@@Base+0x34c8>
   1cd94:	bic	r1, r4, #3
   1cd98:	mov	r6, #1
   1cd9c:	subs	r2, r1, #4
   1cda0:	add	r2, r6, r2, lsr #2
   1cda4:	and	r6, r2, #1
   1cda8:	str	r6, [sp, #60]	; 0x3c
   1cdac:	beq	1cea4 <argp_parse@@Base+0x3488>
   1cdb0:	ldr	r5, [sp, #40]	; 0x28
   1cdb4:	sub	r2, r6, r2
   1cdb8:	add	r6, ip, r0
   1cdbc:	add	lr, r5, r6, lsl #2
   1cdc0:	mov	r5, #0
   1cdc4:	mov	r6, #0
   1cdc8:	add	sl, r7, r5
   1cdcc:	add	r8, lr, r5
   1cdd0:	adds	r2, r2, #2
   1cdd4:	add	r5, r5, #32
   1cdd8:	add	r6, r6, #8
   1cddc:	vld1.32	{d16-d17}, [r8]
   1cde0:	vld1.32	{d18-d19}, [sl]
   1cde4:	vst1.32	{d16-d17}, [sl]!
   1cde8:	vst1.32	{d18-d19}, [r8]!
   1cdec:	vld1.32	{d16-d17}, [r8]
   1cdf0:	vld1.32	{d18-d19}, [sl]
   1cdf4:	vst1.32	{d16-d17}, [sl]
   1cdf8:	vst1.32	{d18-d19}, [r8]
   1cdfc:	bne	1cdc8 <argp_parse@@Base+0x33ac>
   1ce00:	b	1cea8 <argp_parse@@Base+0x348c>
   1ce04:	cmp	sl, #1
   1ce08:	blt	1d02c <argp_parse@@Base+0x3610>
   1ce0c:	mov	r1, #0
   1ce10:	cmp	sl, #3
   1ce14:	bls	1cfac <argp_parse@@Base+0x3590>
   1ce18:	add	r2, r8, r0, lsl #2
   1ce1c:	add	r7, r8, ip, lsl #2
   1ce20:	cmp	r7, r2
   1ce24:	bcs	1ce40 <argp_parse@@Base+0x3424>
   1ce28:	ldr	r3, [sp, #44]	; 0x2c
   1ce2c:	add	r2, ip, r0
   1ce30:	add	r2, r3, r2, lsl #2
   1ce34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ce38:	cmp	r3, r2
   1ce3c:	bcc	1cfac <argp_parse@@Base+0x3590>
   1ce40:	bic	r1, sl, #3
   1ce44:	mov	r3, #1
   1ce48:	subs	r2, r1, #4
   1ce4c:	add	r2, r3, r2, lsr #2
   1ce50:	and	r3, r2, #1
   1ce54:	str	r3, [sp, #60]	; 0x3c
   1ce58:	beq	1cf70 <argp_parse@@Base+0x3554>
   1ce5c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1ce60:	sub	r6, r3, r2
   1ce64:	mov	r4, #0
   1ce68:	mov	lr, #32
   1ce6c:	mov	r2, r5
   1ce70:	mov	r3, r7
   1ce74:	adds	r6, r6, #2
   1ce78:	add	r4, r4, #8
   1ce7c:	vld1.32	{d16-d17}, [r2]!
   1ce80:	vld1.32	{d18-d19}, [r3]!
   1ce84:	vst1.32	{d16-d17}, [r7], lr
   1ce88:	vst1.32	{d18-d19}, [r5], lr
   1ce8c:	vld1.32	{d16-d17}, [r2]
   1ce90:	vld1.32	{d18-d19}, [r3]
   1ce94:	vst1.32	{d16-d17}, [r3]
   1ce98:	vst1.32	{d18-d19}, [r2]
   1ce9c:	bne	1ce6c <argp_parse@@Base+0x3450>
   1cea0:	b	1cf74 <argp_parse@@Base+0x3558>
   1cea4:	mov	r6, #0
   1cea8:	ldr	r2, [sp, #60]	; 0x3c
   1ceac:	ldr	r8, [fp, #-32]	; 0xffffffe0
   1ceb0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1ceb4:	cmp	r2, #0
   1ceb8:	beq	1cedc <argp_parse@@Base+0x34c0>
   1cebc:	add	r2, r6, ip
   1cec0:	add	r7, r6, r3
   1cec4:	add	r2, r8, r2, lsl #2
   1cec8:	add	r7, r8, r7, lsl #2
   1cecc:	vld1.32	{d16-d17}, [r7]
   1ced0:	vld1.32	{d18-d19}, [r2]
   1ced4:	vst1.32	{d16-d17}, [r2]
   1ced8:	vst1.32	{d18-d19}, [r7]
   1cedc:	cmp	r4, r1
   1cee0:	beq	1cd3c <argp_parse@@Base+0x3320>
   1cee4:	mvn	r2, r1
   1cee8:	tst	r4, #1
   1ceec:	add	r2, r9, r2
   1cef0:	beq	1cf10 <argp_parse@@Base+0x34f4>
   1cef4:	add	r7, r1, ip
   1cef8:	add	r5, r1, r3
   1cefc:	orr	r1, r1, #1
   1cf00:	ldr	r6, [r8, r7, lsl #2]
   1cf04:	ldr	r4, [r8, r5, lsl #2]
   1cf08:	str	r4, [r8, r7, lsl #2]
   1cf0c:	str	r6, [r8, r5, lsl #2]
   1cf10:	cmp	r2, ip
   1cf14:	beq	1cd3c <argp_parse@@Base+0x3320>
   1cf18:	add	r0, ip, r0
   1cf1c:	sub	r2, r9, r1
   1cf20:	add	r7, ip, r1
   1cf24:	ldr	r4, [fp, #-52]	; 0xffffffcc
   1cf28:	add	r0, r0, r1
   1cf2c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1cf30:	add	r7, r4, r7, lsl #2
   1cf34:	add	r0, r1, r0, lsl #2
   1cf38:	ldr	r1, [r7, #-4]
   1cf3c:	ldr	r6, [r0, #-4]
   1cf40:	sub	r2, r2, #2
   1cf44:	cmp	ip, r2
   1cf48:	str	r6, [r7, #-4]
   1cf4c:	str	r1, [r0, #-4]
   1cf50:	ldr	r1, [r7]
   1cf54:	ldr	r6, [r0]
   1cf58:	str	r6, [r7]
   1cf5c:	str	r1, [r0]
   1cf60:	add	r0, r0, #8
   1cf64:	add	r7, r7, #8
   1cf68:	bne	1cf38 <argp_parse@@Base+0x351c>
   1cf6c:	b	1cd3c <argp_parse@@Base+0x3320>
   1cf70:	mov	r4, #0
   1cf74:	ldr	r2, [sp, #60]	; 0x3c
   1cf78:	cmp	r2, #0
   1cf7c:	beq	1cfa0 <argp_parse@@Base+0x3584>
   1cf80:	add	r2, r4, ip
   1cf84:	add	r3, r4, r9
   1cf88:	add	r2, r8, r2, lsl #2
   1cf8c:	add	r3, r8, r3, lsl #2
   1cf90:	vld1.32	{d16-d17}, [r3]
   1cf94:	vld1.32	{d18-d19}, [r2]
   1cf98:	vst1.32	{d16-d17}, [r2]
   1cf9c:	vst1.32	{d18-d19}, [r3]
   1cfa0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1cfa4:	cmp	sl, r1
   1cfa8:	beq	1d02c <argp_parse@@Base+0x3610>
   1cfac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1cfb0:	tst	sl, #1
   1cfb4:	mov	r3, r1
   1cfb8:	add	r2, r0, r2
   1cfbc:	beq	1cfdc <argp_parse@@Base+0x35c0>
   1cfc0:	add	r6, r1, r9
   1cfc4:	add	r3, r1, ip
   1cfc8:	ldr	r5, [r8, r6, lsl #2]
   1cfcc:	ldr	r7, [r8, r3, lsl #2]
   1cfd0:	str	r5, [r8, r3, lsl #2]
   1cfd4:	orr	r3, r1, #1
   1cfd8:	str	r7, [r8, r6, lsl #2]
   1cfdc:	cmp	r2, r1
   1cfe0:	beq	1d02c <argp_parse@@Base+0x3610>
   1cfe4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1cfe8:	add	r1, ip, r3
   1cfec:	add	r3, r9, r3
   1cff0:	add	r1, r2, r1, lsl #2
   1cff4:	add	r2, r2, r3, lsl #2
   1cff8:	sub	r3, r3, r0
   1cffc:	ldr	r7, [r1, #-4]
   1d000:	ldr	r6, [r2, #-4]
   1d004:	adds	r3, r3, #2
   1d008:	str	r6, [r1, #-4]
   1d00c:	str	r7, [r2, #-4]
   1d010:	ldr	r7, [r1]
   1d014:	ldr	r6, [r2]
   1d018:	str	r6, [r1]
   1d01c:	str	r7, [r2]
   1d020:	add	r1, r1, #8
   1d024:	add	r2, r2, #8
   1d028:	bne	1cffc <argp_parse@@Base+0x35e0>
   1d02c:	add	ip, sl, ip
   1d030:	b	1cd40 <argp_parse@@Base+0x3324>
   1d034:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d038:	ldr	r2, [sp, #48]	; 0x30
   1d03c:	ldr	r1, [sp, #56]	; 0x38
   1d040:	ldr	ip, [fp, #16]
   1d044:	add	r0, r0, r2
   1d048:	sub	r0, r0, r9
   1d04c:	str	r0, [r1]
   1d050:	ldr	r1, [sp, #52]	; 0x34
   1d054:	str	r2, [r1]
   1d058:	str	r0, [fp, #-40]	; 0xffffffd8
   1d05c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1d060:	str	lr, [ip]
   1d064:	str	lr, [ip, #32]
   1d068:	mov	r9, lr
   1d06c:	cmp	r7, r9
   1d070:	mvn	r4, #0
   1d074:	strne	r7, [ip]
   1d078:	mov	r0, r4
   1d07c:	sub	sp, fp, #28
   1d080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d084:	mov	r0, #1
   1d088:	b	1c654 <argp_parse@@Base+0x2c38>
   1d08c:	cmp	r6, r3
   1d090:	bne	1d198 <argp_parse@@Base+0x377c>
   1d094:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d098:	cmp	r0, #0
   1d09c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d0a0:	bne	1d204 <argp_parse@@Base+0x37e8>
   1d0a4:	str	r4, [r7, #8]
   1d0a8:	ldrb	r4, [r9]
   1d0ac:	cmp	r4, #58	; 0x3a
   1d0b0:	movwne	r4, #63	; 0x3f
   1d0b4:	b	1d1ac <argp_parse@@Base+0x3790>
   1d0b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d0bc:	movw	r1, #62035	; 0xf253
   1d0c0:	mov	r3, r4
   1d0c4:	movt	r1, #1
   1d0c8:	ldr	r2, [r0]
   1d0cc:	movw	r0, #1472	; 0x5c0
   1d0d0:	movt	r0, #3
   1d0d4:	ldr	r0, [r0]
   1d0d8:	bl	11c44 <fprintf@plt>
   1d0dc:	b	1c6dc <argp_parse@@Base+0x2cc0>
   1d0e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d0e4:	ldr	r8, [r0, r6, lsl #2]
   1d0e8:	ldr	r2, [fp, #8]
   1d0ec:	movw	r1, #62104	; 0xf298
   1d0f0:	str	r8, [r7, #12]
   1d0f4:	mov	r0, #0
   1d0f8:	movt	r1, #1
   1d0fc:	str	r0, [r7, #12]
   1d100:	str	r8, [r7, #20]
   1d104:	str	r2, [sp]
   1d108:	stmib	sp, {r0, r7}
   1d10c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d110:	str	r1, [sp, #16]
   1d114:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d118:	mov	r2, r9
   1d11c:	str	r0, [sp, #12]
   1d120:	mov	r0, r3
   1d124:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d128:	bl	1d228 <argp_parse@@Base+0x380c>
   1d12c:	sub	sp, fp, #28
   1d130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d134:	cmp	r9, #0
   1d138:	beq	1d1d0 <argp_parse@@Base+0x37b4>
   1d13c:	ldrb	r0, [r5, #2]
   1d140:	cmp	r0, #0
   1d144:	beq	1d1b8 <argp_parse@@Base+0x379c>
   1d148:	ldr	r1, [fp, #8]
   1d14c:	movw	r0, #57325	; 0xdfed
   1d150:	str	r7, [ip, #20]
   1d154:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d158:	movt	r0, #1
   1d15c:	stm	sp, {r1, r9, ip}
   1d160:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d164:	str	r0, [sp, #16]
   1d168:	mov	r0, r2
   1d16c:	ldr	r2, [sp, #48]	; 0x30
   1d170:	str	r1, [sp, #12]
   1d174:	mov	r1, r8
   1d178:	bl	1d228 <argp_parse@@Base+0x380c>
   1d17c:	ldr	ip, [fp, #16]
   1d180:	mov	r4, r0
   1d184:	cmn	r0, #1
   1d188:	bne	1d078 <argp_parse@@Base+0x365c>
   1d18c:	ldr	r6, [ip]
   1d190:	ldr	r5, [r8, r6, lsl #2]
   1d194:	b	1d1d0 <argp_parse@@Base+0x37b4>
   1d198:	add	r0, r6, #1
   1d19c:	str	r0, [r7]
   1d1a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d1a4:	ldr	r0, [r0, r6, lsl #2]
   1d1a8:	str	r0, [r7, #12]
   1d1ac:	mov	r0, #0
   1d1b0:	str	r0, [r7, #20]
   1d1b4:	b	1d078 <argp_parse@@Base+0x365c>
   1d1b8:	ldr	r0, [sp, #48]	; 0x30
   1d1bc:	bl	11c38 <strchr@plt>
   1d1c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d1c4:	ldr	ip, [fp, #16]
   1d1c8:	cmp	r0, #0
   1d1cc:	beq	1d148 <argp_parse@@Base+0x372c>
   1d1d0:	ldr	r9, [sp, #48]	; 0x30
   1d1d4:	add	r5, r5, #1
   1d1d8:	str	r5, [ip, #20]
   1d1dc:	b	1c690 <argp_parse@@Base+0x2c74>
   1d1e0:	ldr	r2, [r0]
   1d1e4:	movw	r0, #1472	; 0x5c0
   1d1e8:	movw	r1, #62063	; 0xf26f
   1d1ec:	mov	r3, r4
   1d1f0:	movt	r0, #3
   1d1f4:	movt	r1, #1
   1d1f8:	ldr	r0, [r0]
   1d1fc:	bl	11c44 <fprintf@plt>
   1d200:	b	1c790 <argp_parse@@Base+0x2d74>
   1d204:	ldr	r2, [r0]
   1d208:	movw	r0, #1472	; 0x5c0
   1d20c:	movw	r1, #62063	; 0xf26f
   1d210:	mov	r3, r4
   1d214:	movt	r0, #3
   1d218:	movt	r1, #1
   1d21c:	ldr	r0, [r0]
   1d220:	bl	11c44 <fprintf@plt>
   1d224:	b	1d0a4 <argp_parse@@Base+0x3688>
   1d228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d22c:	add	fp, sp, #28
   1d230:	sub	sp, sp, #44	; 0x2c
   1d234:	str	r0, [sp, #12]
   1d238:	ldr	r0, [fp, #16]
   1d23c:	ldr	r5, [fp, #8]
   1d240:	str	r2, [sp, #16]
   1d244:	str	r1, [sp, #20]
   1d248:	ldr	r9, [r0, #20]
   1d24c:	mov	r6, r9
   1d250:	b	1d258 <argp_parse@@Base+0x383c>
   1d254:	add	r6, r6, #1
   1d258:	ldrb	r0, [r6]
   1d25c:	cmp	r0, #0
   1d260:	cmpne	r0, #61	; 0x3d
   1d264:	bne	1d254 <argp_parse@@Base+0x3838>
   1d268:	ldr	sl, [r3]
   1d26c:	mvn	ip, #0
   1d270:	str	r3, [fp, #-32]	; 0xffffffe0
   1d274:	cmp	sl, #0
   1d278:	beq	1d488 <argp_parse@@Base+0x3a6c>
   1d27c:	sub	r4, r6, r9
   1d280:	mov	r8, #0
   1d284:	mov	r5, sl
   1d288:	mov	r7, r3
   1d28c:	b	1d2a0 <argp_parse@@Base+0x3884>
   1d290:	ldr	r5, [r7, #16]!
   1d294:	add	r8, r8, #1
   1d298:	cmp	r5, #0
   1d29c:	beq	1d2d4 <argp_parse@@Base+0x38b8>
   1d2a0:	mov	r0, r5
   1d2a4:	mov	r1, r9
   1d2a8:	mov	r2, r4
   1d2ac:	bl	11ddc <strncmp@plt>
   1d2b0:	cmp	r0, #0
   1d2b4:	bne	1d290 <argp_parse@@Base+0x3874>
   1d2b8:	mov	r0, r5
   1d2bc:	bl	11c20 <strlen@plt>
   1d2c0:	cmp	r4, r0
   1d2c4:	bne	1d290 <argp_parse@@Base+0x3874>
   1d2c8:	ldr	r5, [fp, #8]
   1d2cc:	mov	ip, r8
   1d2d0:	b	1d538 <argp_parse@@Base+0x3b1c>
   1d2d4:	cmp	sl, #0
   1d2d8:	beq	1d4b4 <argp_parse@@Base+0x3a98>
   1d2dc:	mvn	r0, #0
   1d2e0:	str	r4, [sp, #36]	; 0x24
   1d2e4:	mov	r4, #0
   1d2e8:	mov	r5, #0
   1d2ec:	mov	r7, #0
   1d2f0:	str	r0, [sp, #24]
   1d2f4:	mov	r0, #0
   1d2f8:	str	r0, [sp, #32]
   1d2fc:	mov	r0, #0
   1d300:	str	r0, [sp, #8]
   1d304:	mov	r0, #0
   1d308:	str	r0, [sp, #28]
   1d30c:	ldr	r2, [sp, #36]	; 0x24
   1d310:	mov	r0, sl
   1d314:	mov	r1, r9
   1d318:	bl	11ddc <strncmp@plt>
   1d31c:	cmp	r0, #0
   1d320:	beq	1d354 <argp_parse@@Base+0x3938>
   1d324:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d328:	mov	r1, r4
   1d32c:	add	r0, r3, r5, lsl #4
   1d330:	ldr	sl, [r0, #16]
   1d334:	cmp	sl, #0
   1d338:	beq	1d4a0 <argp_parse@@Base+0x3a84>
   1d33c:	ldr	r0, [fp, #16]
   1d340:	add	r1, r1, #16
   1d344:	add	r5, r5, #1
   1d348:	mov	r4, r1
   1d34c:	ldr	r9, [r0, #20]
   1d350:	b	1d30c <argp_parse@@Base+0x38f0>
   1d354:	cmp	r7, #0
   1d358:	beq	1d40c <argp_parse@@Base+0x39f0>
   1d35c:	ldr	r0, [fp, #12]
   1d360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d364:	cmp	r0, #0
   1d368:	bne	1d390 <argp_parse@@Base+0x3974>
   1d36c:	add	r0, r3, r5, lsl #4
   1d370:	ldr	r2, [r7, #4]
   1d374:	ldr	r1, [r0, #4]
   1d378:	cmp	r2, r1
   1d37c:	bne	1d390 <argp_parse@@Base+0x3974>
   1d380:	ldr	r1, [r0, #8]
   1d384:	ldr	r2, [r7, #8]
   1d388:	cmp	r2, r1
   1d38c:	beq	1d444 <argp_parse@@Base+0x3a28>
   1d390:	ldr	r0, [sp, #32]
   1d394:	mov	r1, r4
   1d398:	cmp	r0, #0
   1d39c:	bne	1d32c <argp_parse@@Base+0x3910>
   1d3a0:	ldr	r0, [fp, #20]
   1d3a4:	cmp	r0, #0
   1d3a8:	beq	1d420 <argp_parse@@Base+0x3a04>
   1d3ac:	ldr	r9, [sp, #28]
   1d3b0:	mov	r0, #0
   1d3b4:	str	r0, [sp, #32]
   1d3b8:	cmp	r9, #0
   1d3bc:	bne	1d434 <argp_parse@@Base+0x3a18>
   1d3c0:	mov	r0, r8
   1d3c4:	bl	1bd8c <argp_parse@@Base+0x2370>
   1d3c8:	cmp	r0, #0
   1d3cc:	beq	1d474 <argp_parse@@Base+0x3a58>
   1d3d0:	mov	r9, r0
   1d3d4:	mov	r0, #0
   1d3d8:	mov	r1, #0
   1d3dc:	mov	r2, r8
   1d3e0:	str	r0, [sp, #32]
   1d3e4:	mov	r0, r9
   1d3e8:	bl	11c8c <memset@plt>
   1d3ec:	ldr	r0, [sp, #24]
   1d3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3f4:	mov	r1, #1
   1d3f8:	mov	r2, #1
   1d3fc:	str	r1, [sp, #8]
   1d400:	mov	r1, r4
   1d404:	strb	r2, [r9, r0]
   1d408:	b	1d434 <argp_parse@@Base+0x3a18>
   1d40c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d410:	mov	r1, r4
   1d414:	str	r5, [sp, #24]
   1d418:	add	r7, r3, r4
   1d41c:	b	1d32c <argp_parse@@Base+0x3910>
   1d420:	ldr	r9, [sp, #28]
   1d424:	mov	r0, #1
   1d428:	str	r0, [sp, #32]
   1d42c:	cmp	r9, #0
   1d430:	beq	1d468 <argp_parse@@Base+0x3a4c>
   1d434:	mov	r0, #1
   1d438:	str	r9, [sp, #28]
   1d43c:	strb	r0, [r9, r5]
   1d440:	b	1d32c <argp_parse@@Base+0x3910>
   1d444:	ldr	r1, [sp, #32]
   1d448:	cmp	r1, #0
   1d44c:	bne	1d328 <argp_parse@@Base+0x390c>
   1d450:	ldr	r0, [r0, #12]
   1d454:	ldr	r1, [r7, #12]
   1d458:	cmp	r1, r0
   1d45c:	mov	r1, r4
   1d460:	bne	1d3a0 <argp_parse@@Base+0x3984>
   1d464:	b	1d32c <argp_parse@@Base+0x3910>
   1d468:	mov	r0, #0
   1d46c:	str	r0, [sp, #28]
   1d470:	b	1d32c <argp_parse@@Base+0x3910>
   1d474:	mov	r0, #1
   1d478:	str	r0, [sp, #32]
   1d47c:	mov	r0, #0
   1d480:	str	r0, [sp, #28]
   1d484:	b	1d324 <argp_parse@@Base+0x3908>
   1d488:	mov	r0, #0
   1d48c:	mov	r8, #0
   1d490:	mov	r7, #0
   1d494:	mov	sl, #0
   1d498:	mov	r4, #0
   1d49c:	b	1d4cc <argp_parse@@Base+0x3ab0>
   1d4a0:	ldr	r5, [fp, #8]
   1d4a4:	ldr	ip, [sp, #24]
   1d4a8:	ldr	sl, [sp, #28]
   1d4ac:	ldr	r4, [sp, #8]
   1d4b0:	b	1d4d0 <argp_parse@@Base+0x3ab4>
   1d4b4:	ldr	r5, [fp, #8]
   1d4b8:	mov	r0, #0
   1d4bc:	mov	r7, #0
   1d4c0:	mov	sl, #0
   1d4c4:	mov	r4, #0
   1d4c8:	mvn	ip, #0
   1d4cc:	str	r0, [sp, #32]
   1d4d0:	cmp	sl, #0
   1d4d4:	ldreq	r0, [sp, #32]
   1d4d8:	cmpeq	r0, #0
   1d4dc:	beq	1d530 <argp_parse@@Base+0x3b14>
   1d4e0:	ldr	r0, [fp, #20]
   1d4e4:	cmp	r0, #0
   1d4e8:	bne	1d69c <argp_parse@@Base+0x3c80>
   1d4ec:	cmp	r4, #0
   1d4f0:	beq	1d4fc <argp_parse@@Base+0x3ae0>
   1d4f4:	mov	r0, sl
   1d4f8:	bl	1aed8 <argp_parse@@Base+0x14bc>
   1d4fc:	ldr	r0, [fp, #16]
   1d500:	ldr	r4, [r0, #20]
   1d504:	mov	r5, r0
   1d508:	mov	r0, r4
   1d50c:	bl	11c20 <strlen@plt>
   1d510:	mov	r1, #0
   1d514:	add	r0, r4, r0
   1d518:	str	r1, [r5, #8]
   1d51c:	str	r0, [r5, #20]
   1d520:	ldr	r0, [r5]
   1d524:	add	r0, r0, #1
   1d528:	str	r0, [r5]
   1d52c:	b	1d660 <argp_parse@@Base+0x3c44>
   1d530:	cmp	r7, #0
   1d534:	beq	1d5d0 <argp_parse@@Base+0x3bb4>
   1d538:	ldr	r1, [fp, #16]
   1d53c:	mov	r0, #0
   1d540:	str	r0, [r1, #20]
   1d544:	mov	r2, r1
   1d548:	ldr	r1, [r1]
   1d54c:	add	r0, r1, #1
   1d550:	str	r0, [r2]
   1d554:	ldrb	r3, [r6]
   1d558:	ldr	r2, [r7, #4]
   1d55c:	cmp	r3, #0
   1d560:	beq	1d57c <argp_parse@@Base+0x3b60>
   1d564:	cmp	r2, #0
   1d568:	beq	1d648 <argp_parse@@Base+0x3c2c>
   1d56c:	ldr	r1, [fp, #16]
   1d570:	add	r0, r6, #1
   1d574:	str	r0, [r1, #12]
   1d578:	b	1d5a8 <argp_parse@@Base+0x3b8c>
   1d57c:	cmp	r2, #1
   1d580:	bne	1d5a8 <argp_parse@@Base+0x3b8c>
   1d584:	ldr	r2, [sp, #12]
   1d588:	cmp	r0, r2
   1d58c:	bge	1d66c <argp_parse@@Base+0x3c50>
   1d590:	ldr	r2, [fp, #16]
   1d594:	add	r1, r1, #2
   1d598:	str	r1, [r2]
   1d59c:	ldr	r1, [sp, #20]
   1d5a0:	ldr	r0, [r1, r0, lsl #2]
   1d5a4:	str	r0, [r2, #12]
   1d5a8:	cmp	r5, #0
   1d5ac:	strne	ip, [r5]
   1d5b0:	ldr	r1, [r7, #8]
   1d5b4:	ldr	r0, [r7, #12]
   1d5b8:	cmp	r1, #0
   1d5bc:	beq	1d694 <argp_parse@@Base+0x3c78>
   1d5c0:	str	r0, [r1]
   1d5c4:	mov	r0, #0
   1d5c8:	sub	sp, fp, #28
   1d5cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d5d0:	ldr	r0, [fp, #12]
   1d5d4:	cmp	r0, #0
   1d5d8:	beq	1d61c <argp_parse@@Base+0x3c00>
   1d5dc:	ldr	r0, [fp, #16]
   1d5e0:	ldr	r1, [sp, #20]
   1d5e4:	ldr	r0, [r0]
   1d5e8:	ldr	r0, [r1, r0, lsl #2]
   1d5ec:	ldrb	r0, [r0, #1]
   1d5f0:	cmp	r0, #45	; 0x2d
   1d5f4:	beq	1d61c <argp_parse@@Base+0x3c00>
   1d5f8:	ldr	r0, [fp, #16]
   1d5fc:	ldr	r0, [r0, #20]
   1d600:	ldrb	r1, [r0]
   1d604:	ldr	r0, [sp, #16]
   1d608:	bl	11c38 <strchr@plt>
   1d60c:	mov	r1, r0
   1d610:	mvn	r0, #0
   1d614:	cmp	r1, #0
   1d618:	bne	1d694 <argp_parse@@Base+0x3c78>
   1d61c:	ldr	r0, [fp, #20]
   1d620:	cmp	r0, #0
   1d624:	bne	1d788 <argp_parse@@Base+0x3d6c>
   1d628:	ldr	r1, [fp, #16]
   1d62c:	mov	r0, #0
   1d630:	str	r0, [r1, #20]
   1d634:	str	r0, [r1, #8]
   1d638:	ldr	r0, [r1]
   1d63c:	add	r0, r0, #1
   1d640:	str	r0, [r1]
   1d644:	b	1d660 <argp_parse@@Base+0x3c44>
   1d648:	ldr	r0, [fp, #20]
   1d64c:	cmp	r0, #0
   1d650:	bne	1d7bc <argp_parse@@Base+0x3da0>
   1d654:	ldr	r0, [r7, #12]
   1d658:	ldr	r1, [fp, #16]
   1d65c:	str	r0, [r1, #8]
   1d660:	mov	r0, #63	; 0x3f
   1d664:	sub	sp, fp, #28
   1d668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d66c:	ldr	r0, [fp, #20]
   1d670:	cmp	r0, #0
   1d674:	bne	1d7ec <argp_parse@@Base+0x3dd0>
   1d678:	ldr	r0, [r7, #12]
   1d67c:	ldr	r1, [fp, #16]
   1d680:	str	r0, [r1, #8]
   1d684:	ldr	r0, [sp, #16]
   1d688:	ldrb	r0, [r0]
   1d68c:	cmp	r0, #58	; 0x3a
   1d690:	movwne	r0, #63	; 0x3f
   1d694:	sub	sp, fp, #28
   1d698:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d69c:	movw	r5, #1472	; 0x5c0
   1d6a0:	ldr	r1, [sp, #32]
   1d6a4:	movt	r5, #3
   1d6a8:	ldr	r0, [r5]
   1d6ac:	cmp	r1, #0
   1d6b0:	beq	1d6e4 <argp_parse@@Base+0x3cc8>
   1d6b4:	ldr	r1, [sp, #20]
   1d6b8:	ldr	r3, [fp, #24]
   1d6bc:	ldr	r2, [r1]
   1d6c0:	ldr	r1, [fp, #16]
   1d6c4:	ldr	r1, [r1, #20]
   1d6c8:	str	r1, [sp]
   1d6cc:	movw	r1, #62124	; 0xf2ac
   1d6d0:	movt	r1, #1
   1d6d4:	bl	11c44 <fprintf@plt>
   1d6d8:	cmp	r4, #0
   1d6dc:	bne	1d4f4 <argp_parse@@Base+0x3ad8>
   1d6e0:	b	1d4fc <argp_parse@@Base+0x3ae0>
   1d6e4:	bl	11d58 <flockfile@plt>
   1d6e8:	ldr	r1, [fp, #16]
   1d6ec:	ldr	r0, [sp, #20]
   1d6f0:	ldr	r9, [fp, #24]
   1d6f4:	ldr	r1, [r1, #20]
   1d6f8:	ldr	r2, [r0]
   1d6fc:	ldr	r0, [r5]
   1d700:	mov	r3, r9
   1d704:	str	r1, [sp]
   1d708:	movw	r1, #62156	; 0xf2cc
   1d70c:	movt	r1, #1
   1d710:	bl	11c44 <fprintf@plt>
   1d714:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d718:	cmp	r8, #0
   1d71c:	beq	1d768 <argp_parse@@Base+0x3d4c>
   1d720:	mov	r6, sl
   1d724:	ldrb	r0, [r6]
   1d728:	cmp	r0, #0
   1d72c:	bne	1d744 <argp_parse@@Base+0x3d28>
   1d730:	add	r1, r1, #16
   1d734:	add	r6, r6, #1
   1d738:	subs	r8, r8, #1
   1d73c:	bne	1d724 <argp_parse@@Base+0x3d08>
   1d740:	b	1d768 <argp_parse@@Base+0x3d4c>
   1d744:	ldr	r3, [r1]
   1d748:	ldr	r0, [r5]
   1d74c:	mov	r7, r1
   1d750:	movw	r1, #62203	; 0xf2fb
   1d754:	mov	r2, r9
   1d758:	movt	r1, #1
   1d75c:	bl	11c44 <fprintf@plt>
   1d760:	mov	r1, r7
   1d764:	b	1d730 <argp_parse@@Base+0x3d14>
   1d768:	ldr	r1, [r5]
   1d76c:	mov	r0, #10
   1d770:	bl	11d40 <fputc@plt>
   1d774:	ldr	r0, [r5]
   1d778:	bl	11b18 <funlockfile@plt>
   1d77c:	cmp	r4, #0
   1d780:	bne	1d4f4 <argp_parse@@Base+0x3ad8>
   1d784:	b	1d4fc <argp_parse@@Base+0x3ae0>
   1d788:	ldr	r1, [fp, #16]
   1d78c:	ldr	r0, [sp, #20]
   1d790:	ldr	r3, [fp, #24]
   1d794:	ldr	r2, [r0]
   1d798:	movw	r0, #1472	; 0x5c0
   1d79c:	ldr	r1, [r1, #20]
   1d7a0:	movt	r0, #3
   1d7a4:	ldr	r0, [r0]
   1d7a8:	str	r1, [sp]
   1d7ac:	movw	r1, #62211	; 0xf303
   1d7b0:	movt	r1, #1
   1d7b4:	bl	11c44 <fprintf@plt>
   1d7b8:	b	1d628 <argp_parse@@Base+0x3c0c>
   1d7bc:	ldr	r0, [sp, #20]
   1d7c0:	ldr	r1, [r7]
   1d7c4:	ldr	r3, [fp, #24]
   1d7c8:	ldr	r2, [r0]
   1d7cc:	movw	r0, #1472	; 0x5c0
   1d7d0:	str	r1, [sp]
   1d7d4:	movw	r1, #62243	; 0xf323
   1d7d8:	movt	r0, #3
   1d7dc:	movt	r1, #1
   1d7e0:	ldr	r0, [r0]
   1d7e4:	bl	11c44 <fprintf@plt>
   1d7e8:	b	1d654 <argp_parse@@Base+0x3c38>
   1d7ec:	ldr	r0, [sp, #20]
   1d7f0:	ldr	r1, [r7]
   1d7f4:	ldr	r3, [fp, #24]
   1d7f8:	ldr	r2, [r0]
   1d7fc:	movw	r0, #1472	; 0x5c0
   1d800:	str	r1, [sp]
   1d804:	movw	r1, #62288	; 0xf350
   1d808:	movt	r0, #3
   1d80c:	movt	r1, #1
   1d810:	ldr	r0, [r0]
   1d814:	bl	11c44 <fprintf@plt>
   1d818:	b	1d678 <argp_parse@@Base+0x3c5c>
   1d81c:	push	{r4, r5, r6, r7, fp, lr}
   1d820:	add	fp, sp, #16
   1d824:	sub	sp, sp, #16
   1d828:	movw	r7, #1448	; 0x5a8
   1d82c:	movw	r6, #2584	; 0xa18
   1d830:	movw	r5, #1452	; 0x5ac
   1d834:	movt	r7, #3
   1d838:	movt	r5, #3
   1d83c:	movt	r6, #3
   1d840:	ldr	r4, [r7]
   1d844:	ldr	r5, [r5]
   1d848:	str	r6, [sp, #8]
   1d84c:	stm	r6, {r4, r5}
   1d850:	ldr	r5, [fp, #16]
   1d854:	str	r5, [sp, #12]
   1d858:	ldr	r5, [fp, #12]
   1d85c:	str	r5, [sp, #4]
   1d860:	ldr	r5, [fp, #8]
   1d864:	str	r5, [sp]
   1d868:	bl	1c580 <argp_parse@@Base+0x2b64>
   1d86c:	ldr	r1, [r6]
   1d870:	ldr	r3, [r6, #12]
   1d874:	ldr	r2, [r6, #8]
   1d878:	str	r1, [r7]
   1d87c:	movw	r1, #4244	; 0x1094
   1d880:	movt	r1, #3
   1d884:	str	r3, [r1]
   1d888:	movw	r1, #1456	; 0x5b0
   1d88c:	movt	r1, #3
   1d890:	str	r2, [r1]
   1d894:	sub	sp, fp, #16
   1d898:	pop	{r4, r5, r6, r7, fp, pc}
   1d89c:	push	{r4, r5, r6, sl, fp, lr}
   1d8a0:	add	fp, sp, #16
   1d8a4:	sub	sp, sp, #16
   1d8a8:	movw	r6, #1448	; 0x5a8
   1d8ac:	movw	r5, #2584	; 0xa18
   1d8b0:	movw	r4, #1452	; 0x5ac
   1d8b4:	movt	r6, #3
   1d8b8:	movt	r4, #3
   1d8bc:	movt	r5, #3
   1d8c0:	ldr	r3, [r6]
   1d8c4:	ldr	r4, [r4]
   1d8c8:	stm	r5, {r3, r4}
   1d8cc:	mov	r4, #0
   1d8d0:	mov	r3, #1
   1d8d4:	str	r4, [sp]
   1d8d8:	stmib	sp, {r4, r5}
   1d8dc:	str	r3, [sp, #12]
   1d8e0:	mov	r3, #0
   1d8e4:	bl	1c580 <argp_parse@@Base+0x2b64>
   1d8e8:	ldr	r1, [r5]
   1d8ec:	ldr	r3, [r5, #12]
   1d8f0:	ldr	r2, [r5, #8]
   1d8f4:	str	r1, [r6]
   1d8f8:	movw	r1, #4244	; 0x1094
   1d8fc:	movt	r1, #3
   1d900:	str	r3, [r1]
   1d904:	movw	r1, #1456	; 0x5b0
   1d908:	movt	r1, #3
   1d90c:	str	r2, [r1]
   1d910:	sub	sp, fp, #16
   1d914:	pop	{r4, r5, r6, sl, fp, pc}
   1d918:	cmp	r2, #0
   1d91c:	beq	1d94c <argp_parse@@Base+0x3f30>
   1d920:	mvn	r3, #0
   1d924:	udiv	r3, r3, r2
   1d928:	cmp	r3, r1
   1d92c:	bcs	1d94c <argp_parse@@Base+0x3f30>
   1d930:	push	{fp, lr}
   1d934:	mov	fp, sp
   1d938:	bl	11c50 <__errno_location@plt>
   1d93c:	mov	r1, #12
   1d940:	str	r1, [r0]
   1d944:	mov	r0, #0
   1d948:	pop	{fp, pc}
   1d94c:	mul	r1, r2, r1
   1d950:	b	1bdbc <argp_parse@@Base+0x23a0>
   1d954:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d958:	mov	r7, r0
   1d95c:	ldr	r6, [pc, #72]	; 1d9ac <argp_parse@@Base+0x3f90>
   1d960:	ldr	r5, [pc, #72]	; 1d9b0 <argp_parse@@Base+0x3f94>
   1d964:	add	r6, pc, r6
   1d968:	add	r5, pc, r5
   1d96c:	sub	r6, r6, r5
   1d970:	mov	r8, r1
   1d974:	mov	r9, r2
   1d978:	bl	11954 <calloc@plt-0x20>
   1d97c:	asrs	r6, r6, #2
   1d980:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d984:	mov	r4, #0
   1d988:	add	r4, r4, #1
   1d98c:	ldr	r3, [r5], #4
   1d990:	mov	r2, r9
   1d994:	mov	r1, r8
   1d998:	mov	r0, r7
   1d99c:	blx	r3
   1d9a0:	cmp	r6, r4
   1d9a4:	bne	1d988 <argp_parse@@Base+0x3f6c>
   1d9a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d9ac:	muleq	r1, r8, r5
   1d9b0:	muleq	r1, r0, r5
   1d9b4:	bx	lr

Disassembly of section .fini:

0001d9b8 <.fini>:
   1d9b8:	push	{r3, lr}
   1d9bc:	pop	{r3, pc}
