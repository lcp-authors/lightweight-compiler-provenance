
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010d10 <.init>:
   10d10:	push	{r3, lr}
   10d14:	bl	11034 <_start@@Base+0x3c>
   10d18:	pop	{r3, pc}

Disassembly of section .plt:

00010d1c <strcmp@plt-0x14>:
   10d1c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d20:	ldr	lr, [pc, #4]	; 10d2c <strcmp@plt-0x4>
   10d24:	add	lr, pc, lr
   10d28:	ldr	pc, [lr, #8]!
   10d2c:	ldrdeq	r1, [r1], -r4

00010d30 <strcmp@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #69632	; 0x11000
   10d38:	ldr	pc, [ip, #724]!	; 0x2d4

00010d3c <printf@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #69632	; 0x11000
   10d44:	ldr	pc, [ip, #716]!	; 0x2cc

00010d48 <fopen@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #69632	; 0x11000
   10d50:	ldr	pc, [ip, #708]!	; 0x2c4

00010d54 <free@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #69632	; 0x11000
   10d5c:	ldr	pc, [ip, #700]!	; 0x2bc

00010d60 <fgets@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #69632	; 0x11000
   10d68:	ldr	pc, [ip, #692]!	; 0x2b4

00010d6c <memcpy@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #69632	; 0x11000
   10d74:	ldr	pc, [ip, #684]!	; 0x2ac

00010d78 <stpcpy@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #69632	; 0x11000
   10d80:	ldr	pc, [ip, #676]!	; 0x2a4

00010d84 <realloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #69632	; 0x11000
   10d8c:	ldr	pc, [ip, #668]!	; 0x29c

00010d90 <strcpy@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #69632	; 0x11000
   10d98:	ldr	pc, [ip, #660]!	; 0x294

00010d9c <puts@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #69632	; 0x11000
   10da4:	ldr	pc, [ip, #652]!	; 0x28c

00010da8 <malloc@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #69632	; 0x11000
   10db0:	ldr	pc, [ip, #644]!	; 0x284

00010db4 <__libc_start_main@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #69632	; 0x11000
   10dbc:	ldr	pc, [ip, #636]!	; 0x27c

00010dc0 <__gmon_start__@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #69632	; 0x11000
   10dc8:	ldr	pc, [ip, #628]!	; 0x274

00010dcc <strlen@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #69632	; 0x11000
   10dd4:	ldr	pc, [ip, #620]!	; 0x26c

00010dd8 <putchar@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #69632	; 0x11000
   10de0:	ldr	pc, [ip, #612]!	; 0x264

00010de4 <fclose@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #69632	; 0x11000
   10dec:	ldr	pc, [ip, #604]!	; 0x25c

00010df0 <strtok@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #69632	; 0x11000
   10df8:	ldr	pc, [ip, #596]!	; 0x254

00010dfc <abort@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #69632	; 0x11000
   10e04:	ldr	pc, [ip, #588]!	; 0x24c

Disassembly of section .text:

00010e08 <main@@Base>:
   10e08:	ldr	r0, [pc, #436]	; 10fc4 <main@@Base+0x1bc>
   10e0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10e10:	add	r0, pc, r0
   10e14:	sub	sp, sp, #148	; 0x94
   10e18:	bl	10d9c <puts@plt>
   10e1c:	ldr	lr, [pc, #420]	; 10fc8 <main@@Base+0x1c0>
   10e20:	add	ip, sp, #4
   10e24:	add	lr, pc, lr
   10e28:	mov	r4, sp
   10e2c:	ldm	lr!, {r0, r1, r2, r3}
   10e30:	add	r6, sp, #40	; 0x28
   10e34:	stmia	ip!, {r0, r1, r2, r3}
   10e38:	ldm	lr!, {r0, r1, r2, r3}
   10e3c:	stmia	ip!, {r0, r1, r2, r3}
   10e40:	ldm	lr, {r0, r1}
   10e44:	stm	ip, {r0, r1}
   10e48:	bl	11774 <bst_nova@@Base>
   10e4c:	mov	r5, r0
   10e50:	ldr	r1, [r4, #4]!
   10e54:	mov	r0, r5
   10e58:	bl	11900 <bst_insere@@Base>
   10e5c:	cmp	r4, r6
   10e60:	bne	10e50 <main@@Base+0x48>
   10e64:	ldr	r0, [r5]
   10e68:	bl	11ac8 <bst_altura@@Base>
   10e6c:	add	r4, sp, #44	; 0x2c
   10e70:	mov	r9, #100	; 0x64
   10e74:	mov	r6, #0
   10e78:	mov	r1, r0
   10e7c:	ldr	r0, [pc, #328]	; 10fcc <main@@Base+0x1c4>
   10e80:	add	r0, pc, r0
   10e84:	bl	10d3c <printf@plt>
   10e88:	mov	r0, r5
   10e8c:	bl	11b7c <bst_imprime@@Base>
   10e90:	ldr	r0, [pc, #312]	; 10fd0 <main@@Base+0x1c8>
   10e94:	ldr	r5, [pc, #312]	; 10fd4 <main@@Base+0x1cc>
   10e98:	add	r0, pc, r0
   10e9c:	bl	10d9c <puts@plt>
   10ea0:	bl	11120 <avl_nova@@Base>
   10ea4:	ldr	r1, [pc, #300]	; 10fd8 <main@@Base+0x1d0>
   10ea8:	add	r5, pc, r5
   10eac:	add	r1, pc, r1
   10eb0:	mov	r7, r0
   10eb4:	ldr	r0, [pc, #288]	; 10fdc <main@@Base+0x1d4>
   10eb8:	add	r0, pc, r0
   10ebc:	bl	10d48 <fopen@plt>
   10ec0:	mov	r8, r0
   10ec4:	b	10f0c <main@@Base+0x104>
   10ec8:	bl	10df0 <strtok@plt>
   10ecc:	mov	r1, r0
   10ed0:	mov	r0, r4
   10ed4:	bl	10d90 <strcpy@plt>
   10ed8:	mov	r1, r5
   10edc:	mov	r0, r6
   10ee0:	bl	10df0 <strtok@plt>
   10ee4:	mov	r1, r0
   10ee8:	mov	r0, r4
   10eec:	bl	10d78 <stpcpy@plt>
   10ef0:	add	r3, sp, #144	; 0x90
   10ef4:	mov	r1, r4
   10ef8:	sub	r0, r0, r4
   10efc:	add	r3, r3, r0
   10f00:	mov	r0, r7
   10f04:	strb	r6, [r3, #-101]	; 0xffffff9b
   10f08:	bl	11440 <avl_insere@@Base>
   10f0c:	mov	r1, r9
   10f10:	mov	r2, r8
   10f14:	mov	r0, r4
   10f18:	bl	10d60 <fgets@plt>
   10f1c:	mov	r1, r5
   10f20:	cmp	r0, #0
   10f24:	mov	r0, r4
   10f28:	bne	10ec8 <main@@Base+0xc0>
   10f2c:	mov	r0, r8
   10f30:	bl	10de4 <fclose@plt>
   10f34:	ldr	r1, [pc, #164]	; 10fe0 <main@@Base+0x1d8>
   10f38:	mov	r0, r7
   10f3c:	add	r1, pc, r1
   10f40:	bl	11300 <avl_pesquisa@@Base>
   10f44:	cmp	r0, #0
   10f48:	beq	10f60 <main@@Base+0x158>
   10f4c:	ldr	r2, [r0, #16]
   10f50:	ldr	r1, [r0]
   10f54:	ldr	r0, [pc, #136]	; 10fe4 <main@@Base+0x1dc>
   10f58:	add	r0, pc, r0
   10f5c:	bl	10d3c <printf@plt>
   10f60:	ldr	r1, [pc, #128]	; 10fe8 <main@@Base+0x1e0>
   10f64:	mov	r0, r7
   10f68:	add	r1, pc, r1
   10f6c:	bl	11300 <avl_pesquisa@@Base>
   10f70:	cmp	r0, #0
   10f74:	beq	10f8c <main@@Base+0x184>
   10f78:	ldr	r2, [r0, #16]
   10f7c:	ldr	r1, [r0]
   10f80:	ldr	r0, [pc, #100]	; 10fec <main@@Base+0x1e4>
   10f84:	add	r0, pc, r0
   10f88:	bl	10d3c <printf@plt>
   10f8c:	ldr	r1, [pc, #92]	; 10ff0 <main@@Base+0x1e8>
   10f90:	mov	r0, r7
   10f94:	add	r1, pc, r1
   10f98:	bl	11300 <avl_pesquisa@@Base>
   10f9c:	cmp	r0, #0
   10fa0:	beq	10fb8 <main@@Base+0x1b0>
   10fa4:	ldr	r2, [r0, #16]
   10fa8:	ldr	r1, [r0]
   10fac:	ldr	r0, [pc, #64]	; 10ff4 <main@@Base+0x1ec>
   10fb0:	add	r0, pc, r0
   10fb4:	bl	10d3c <printf@plt>
   10fb8:	mov	r0, #0
   10fbc:	add	sp, sp, #148	; 0x94
   10fc0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10fc4:	andeq	r0, r0, r4, lsl #28
   10fc8:	andeq	r1, r1, r4, lsr r2
   10fcc:	muleq	r0, r8, sp
   10fd0:	muleq	r0, r4, sp
   10fd4:	muleq	r0, r8, sp
   10fd8:	andeq	r0, r0, r4, lsl #27
   10fdc:	andeq	r0, r0, ip, ror sp
   10fe0:	andeq	r0, r0, r8, lsl #26
   10fe4:	strdeq	r0, [r0], -r8
   10fe8:	strdeq	r0, [r0], -r4
   10fec:	andeq	r0, r0, ip, asr #25
   10ff0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10ff4:	andeq	r0, r0, r0, lsr #25

00010ff8 <_start@@Base>:
   10ff8:	mov	fp, #0
   10ffc:	mov	lr, #0
   11000:	pop	{r1}		; (ldr r1, [sp], #4)
   11004:	mov	r2, sp
   11008:	push	{r2}		; (str r2, [sp, #-4]!)
   1100c:	push	{r0}		; (str r0, [sp, #-4]!)
   11010:	ldr	ip, [pc, #16]	; 11028 <_start@@Base+0x30>
   11014:	push	{ip}		; (str ip, [sp, #-4]!)
   11018:	ldr	r0, [pc, #12]	; 1102c <_start@@Base+0x34>
   1101c:	ldr	r3, [pc, #12]	; 11030 <_start@@Base+0x38>
   11020:	bl	10db4 <__libc_start_main@plt>
   11024:	bl	10dfc <abort@plt>
   11028:	andeq	r1, r1, ip, lsl #24
   1102c:	andeq	r0, r1, r8, lsl #28
   11030:	andeq	r1, r1, ip, lsr #23
   11034:	ldr	r3, [pc, #20]	; 11050 <_start@@Base+0x58>
   11038:	ldr	r2, [pc, #20]	; 11054 <_start@@Base+0x5c>
   1103c:	add	r3, pc, r3
   11040:	ldr	r2, [r3, r2]
   11044:	cmp	r2, #0
   11048:	bxeq	lr
   1104c:	b	10dc0 <__gmon_start__@plt>
   11050:			; <UNDEFINED> instruction: 0x00010fbc
   11054:	andeq	r0, r0, r4, asr r0
   11058:	ldr	r3, [pc, #28]	; 1107c <_start@@Base+0x84>
   1105c:	ldr	r0, [pc, #28]	; 11080 <_start@@Base+0x88>
   11060:	sub	r3, r3, r0
   11064:	cmp	r3, #6
   11068:	bxls	lr
   1106c:	ldr	r3, [pc, #16]	; 11084 <_start@@Base+0x8c>
   11070:	cmp	r3, #0
   11074:	bxeq	lr
   11078:	bx	r3
   1107c:	andeq	r2, r2, fp, lsl #1
   11080:	andeq	r2, r2, r8, lsl #1
   11084:	andeq	r0, r0, r0
   11088:	ldr	r1, [pc, #36]	; 110b4 <_start@@Base+0xbc>
   1108c:	ldr	r0, [pc, #36]	; 110b8 <_start@@Base+0xc0>
   11090:	sub	r1, r1, r0
   11094:	asr	r1, r1, #2
   11098:	add	r1, r1, r1, lsr #31
   1109c:	asrs	r1, r1, #1
   110a0:	bxeq	lr
   110a4:	ldr	r3, [pc, #16]	; 110bc <_start@@Base+0xc4>
   110a8:	cmp	r3, #0
   110ac:	bxeq	lr
   110b0:	bx	r3
   110b4:	andeq	r2, r2, r8, lsl #1
   110b8:	andeq	r2, r2, r8, lsl #1
   110bc:	andeq	r0, r0, r0
   110c0:	push	{r4, lr}
   110c4:	ldr	r4, [pc, #24]	; 110e4 <_start@@Base+0xec>
   110c8:	ldrb	r3, [r4]
   110cc:	cmp	r3, #0
   110d0:	popne	{r4, pc}
   110d4:	bl	11058 <_start@@Base+0x60>
   110d8:	mov	r3, #1
   110dc:	strb	r3, [r4]
   110e0:	pop	{r4, pc}
   110e4:	andeq	r2, r2, r8, lsl #1
   110e8:	ldr	r0, [pc, #40]	; 11118 <_start@@Base+0x120>
   110ec:	ldr	r3, [r0]
   110f0:	cmp	r3, #0
   110f4:	bne	110fc <_start@@Base+0x104>
   110f8:	b	11088 <_start@@Base+0x90>
   110fc:	ldr	r3, [pc, #24]	; 1111c <_start@@Base+0x124>
   11100:	cmp	r3, #0
   11104:	beq	110f8 <_start@@Base+0x100>
   11108:	push	{r4, lr}
   1110c:	blx	r3
   11110:	pop	{r4, lr}
   11114:	b	11088 <_start@@Base+0x90>
   11118:	andeq	r1, r2, r4, lsl pc
   1111c:	andeq	r0, r0, r0

00011120 <avl_nova@@Base>:
   11120:	push	{r4, lr}
   11124:	mov	r0, #4
   11128:	bl	10da8 <malloc@plt>
   1112c:	cmp	r0, #0
   11130:	movne	r3, #0
   11134:	strne	r3, [r0]
   11138:	pop	{r4, pc}

0001113c <avl_altura@@Base>:
   1113c:	cmp	r0, #0
   11140:	ldrne	r0, [r0, #12]
   11144:	mvneq	r0, #0
   11148:	bx	lr

0001114c <max@@Base>:
   1114c:	cmp	r1, r0
   11150:	movge	r0, r1
   11154:	bx	lr

00011158 <avl_novo_no@@Base>:
   11158:	push	{r4, r5, r6, lr}
   1115c:	mov	r5, r0
   11160:	mov	r0, #20
   11164:	bl	10da8 <malloc@plt>
   11168:	mov	r4, r0
   1116c:	mov	r0, r5
   11170:	bl	10dcc <strlen@plt>
   11174:	add	r6, r0, #1
   11178:	mov	r0, r6
   1117c:	bl	10da8 <malloc@plt>
   11180:	mov	r2, r6
   11184:	mov	r1, r5
   11188:	str	r0, [r4]
   1118c:	bl	10d6c <memcpy@plt>
   11190:	mov	r3, #0
   11194:	mov	r2, #1
   11198:	str	r2, [r4, #16]
   1119c:	str	r3, [r4, #4]
   111a0:	str	r3, [r4, #8]
   111a4:	str	r3, [r4, #12]
   111a8:	mov	r0, r4
   111ac:	pop	{r4, r5, r6, pc}

000111b0 <roda_direita@@Base>:
   111b0:	push	{r4, r5, r6, lr}
   111b4:	mov	r5, r0
   111b8:	ldr	r4, [r0, #4]
   111bc:	ldr	r3, [r4, #8]
   111c0:	str	r0, [r4, #8]
   111c4:	str	r3, [r5, #4]
   111c8:	mov	r0, r3
   111cc:	bl	1113c <avl_altura@@Base>
   111d0:	mov	r6, r0
   111d4:	ldr	r0, [r5, #8]
   111d8:	bl	1113c <avl_altura@@Base>
   111dc:	mov	r1, r0
   111e0:	mov	r0, r6
   111e4:	bl	1114c <max@@Base>
   111e8:	add	r0, r0, #1
   111ec:	str	r0, [r5, #12]
   111f0:	ldr	r0, [r4, #4]
   111f4:	bl	1113c <avl_altura@@Base>
   111f8:	mov	r5, r0
   111fc:	ldr	r0, [r4, #8]
   11200:	bl	1113c <avl_altura@@Base>
   11204:	mov	r1, r0
   11208:	mov	r0, r5
   1120c:	bl	1114c <max@@Base>
   11210:	add	r0, r0, #1
   11214:	str	r0, [r4, #12]
   11218:	mov	r0, r4
   1121c:	pop	{r4, r5, r6, pc}

00011220 <roda_esquerda@@Base>:
   11220:	push	{r4, r5, r6, lr}
   11224:	mov	r5, r0
   11228:	ldr	r4, [r0, #8]
   1122c:	ldr	r3, [r4, #4]
   11230:	str	r0, [r4, #4]
   11234:	str	r3, [r0, #8]
   11238:	ldr	r0, [r0, #4]
   1123c:	bl	1113c <avl_altura@@Base>
   11240:	mov	r6, r0
   11244:	ldr	r0, [r5, #8]
   11248:	bl	1113c <avl_altura@@Base>
   1124c:	mov	r1, r0
   11250:	mov	r0, r6
   11254:	bl	1114c <max@@Base>
   11258:	add	r0, r0, #1
   1125c:	str	r0, [r5, #12]
   11260:	ldr	r0, [r4, #4]
   11264:	bl	1113c <avl_altura@@Base>
   11268:	mov	r5, r0
   1126c:	ldr	r0, [r4, #8]
   11270:	bl	1113c <avl_altura@@Base>
   11274:	mov	r1, r0
   11278:	mov	r0, r5
   1127c:	bl	1114c <max@@Base>
   11280:	add	r0, r0, #1
   11284:	str	r0, [r4, #12]
   11288:	mov	r0, r4
   1128c:	pop	{r4, r5, r6, pc}

00011290 <calc_balanceamento@@Base>:
   11290:	push	{r4, r5, r6, lr}
   11294:	subs	r4, r0, #0
   11298:	beq	112b8 <calc_balanceamento@@Base+0x28>
   1129c:	ldr	r0, [r4, #8]
   112a0:	bl	1113c <avl_altura@@Base>
   112a4:	mov	r5, r0
   112a8:	ldr	r0, [r4, #4]
   112ac:	bl	1113c <avl_altura@@Base>
   112b0:	sub	r0, r5, r0
   112b4:	pop	{r4, r5, r6, pc}
   112b8:	mov	r0, r4
   112bc:	pop	{r4, r5, r6, pc}

000112c0 <avl_pesquisa_impl@@Base>:
   112c0:	push	{r4, r5, r6, lr}
   112c4:	subs	r4, r0, #0
   112c8:	beq	112f8 <avl_pesquisa_impl@@Base+0x38>
   112cc:	mov	r5, r1
   112d0:	ldr	r1, [r4]
   112d4:	mov	r0, r5
   112d8:	bl	10d30 <strcmp@plt>
   112dc:	cmp	r0, #0
   112e0:	ldrlt	r4, [r4, #4]
   112e4:	blt	112f0 <avl_pesquisa_impl@@Base+0x30>
   112e8:	beq	112f8 <avl_pesquisa_impl@@Base+0x38>
   112ec:	ldr	r4, [r4, #8]
   112f0:	cmp	r4, #0
   112f4:	bne	112d0 <avl_pesquisa_impl@@Base+0x10>
   112f8:	mov	r0, r4
   112fc:	pop	{r4, r5, r6, pc}

00011300 <avl_pesquisa@@Base>:
   11300:	cmp	r1, #0
   11304:	cmpne	r0, #0
   11308:	beq	11314 <avl_pesquisa@@Base+0x14>
   1130c:	ldr	r0, [r0]
   11310:	b	112c0 <avl_pesquisa_impl@@Base>
   11314:	mov	r0, #0
   11318:	bx	lr

0001131c <avl_insere_impl@@Base>:
   1131c:	push	{r4, r5, r6, lr}
   11320:	subs	r4, r0, #0
   11324:	beq	11434 <avl_insere_impl@@Base+0x118>
   11328:	mov	r5, r1
   1132c:	mov	r0, r5
   11330:	ldr	r1, [r4]
   11334:	bl	10d30 <strcmp@plt>
   11338:	cmp	r0, #0
   1133c:	blt	113d0 <avl_insere_impl@@Base+0xb4>
   11340:	beq	113bc <avl_insere_impl@@Base+0xa0>
   11344:	mov	r1, r5
   11348:	ldr	r0, [r4, #8]
   1134c:	bl	1131c <avl_insere_impl@@Base>
   11350:	ldr	r3, [r4, #4]
   11354:	str	r0, [r4, #8]
   11358:	mov	r0, r3
   1135c:	bl	1113c <avl_altura@@Base>
   11360:	mov	r5, r0
   11364:	ldr	r0, [r4, #8]
   11368:	bl	1113c <avl_altura@@Base>
   1136c:	mov	r1, r0
   11370:	mov	r0, r5
   11374:	bl	1114c <max@@Base>
   11378:	add	r0, r0, #1
   1137c:	str	r0, [r4, #12]
   11380:	mov	r0, r4
   11384:	bl	11290 <calc_balanceamento@@Base>
   11388:	cmp	r0, #1
   1138c:	ble	113ac <avl_insere_impl@@Base+0x90>
   11390:	ldr	r0, [r4, #8]
   11394:	bl	11290 <calc_balanceamento@@Base>
   11398:	cmp	r0, #0
   1139c:	blt	113e8 <avl_insere_impl@@Base+0xcc>
   113a0:	mov	r0, r4
   113a4:	pop	{r4, r5, r6, lr}
   113a8:	b	11220 <roda_esquerda@@Base>
   113ac:	cmn	r0, #1
   113b0:	blt	11400 <avl_insere_impl@@Base+0xe4>
   113b4:	mov	r0, r4
   113b8:	pop	{r4, r5, r6, pc}
   113bc:	ldr	r3, [r4, #16]
   113c0:	mov	r0, r4
   113c4:	add	r3, r3, #1
   113c8:	str	r3, [r4, #16]
   113cc:	pop	{r4, r5, r6, pc}
   113d0:	mov	r1, r5
   113d4:	ldr	r0, [r4, #4]
   113d8:	bl	1131c <avl_insere_impl@@Base>
   113dc:	mov	r3, r0
   113e0:	str	r0, [r4, #4]
   113e4:	b	11358 <avl_insere_impl@@Base+0x3c>
   113e8:	ldr	r0, [r4, #8]
   113ec:	bl	111b0 <roda_direita@@Base>
   113f0:	str	r0, [r4, #8]
   113f4:	mov	r0, r4
   113f8:	pop	{r4, r5, r6, lr}
   113fc:	b	11220 <roda_esquerda@@Base>
   11400:	ldr	r0, [r4, #4]
   11404:	bl	11290 <calc_balanceamento@@Base>
   11408:	cmp	r0, #0
   1140c:	ble	11428 <avl_insere_impl@@Base+0x10c>
   11410:	ldr	r0, [r4, #4]
   11414:	bl	11220 <roda_esquerda@@Base>
   11418:	str	r0, [r4, #4]
   1141c:	mov	r0, r4
   11420:	pop	{r4, r5, r6, lr}
   11424:	b	111b0 <roda_direita@@Base>
   11428:	mov	r0, r4
   1142c:	pop	{r4, r5, r6, lr}
   11430:	b	111b0 <roda_direita@@Base>
   11434:	mov	r0, r1
   11438:	pop	{r4, r5, r6, lr}
   1143c:	b	11158 <avl_novo_no@@Base>

00011440 <avl_insere@@Base>:
   11440:	cmp	r1, #0
   11444:	cmpne	r0, #0
   11448:	push	{r4, r5, r6, lr}
   1144c:	moveq	r5, #1
   11450:	movne	r5, #0
   11454:	beq	11470 <avl_insere@@Base+0x30>
   11458:	mov	r4, r0
   1145c:	ldr	r0, [r0]
   11460:	bl	1131c <avl_insere_impl@@Base>
   11464:	str	r0, [r4]
   11468:	mov	r0, r5
   1146c:	pop	{r4, r5, r6, pc}
   11470:	mvn	r5, #0
   11474:	b	11468 <avl_insere@@Base+0x28>

00011478 <avl_no_valormin@@Base>:
   11478:	b	11480 <avl_no_valormin@@Base+0x8>
   1147c:	mov	r0, r3
   11480:	ldr	r3, [r0, #4]
   11484:	cmp	r3, #0
   11488:	bne	1147c <avl_no_valormin@@Base+0x4>
   1148c:	bx	lr

00011490 <avl_min@@Base>:
   11490:	cmp	r0, #0
   11494:	bxeq	lr
   11498:	push	{r4, lr}
   1149c:	ldr	r0, [r0]
   114a0:	bl	11478 <avl_no_valormin@@Base>
   114a4:	ldr	r0, [r0]
   114a8:	pop	{r4, pc}

000114ac <avl_no_valormax@@Base>:
   114ac:	b	114b4 <avl_no_valormax@@Base+0x8>
   114b0:	mov	r0, r3
   114b4:	ldr	r3, [r0, #8]
   114b8:	cmp	r3, #0
   114bc:	bne	114b0 <avl_no_valormax@@Base+0x4>
   114c0:	bx	lr

000114c4 <avl_max@@Base>:
   114c4:	cmp	r0, #0
   114c8:	bxeq	lr
   114cc:	push	{r4, lr}
   114d0:	ldr	r0, [r0]
   114d4:	bl	114ac <avl_no_valormax@@Base>
   114d8:	ldr	r0, [r0]
   114dc:	pop	{r4, pc}

000114e0 <avl_remove_impl@@Base>:
   114e0:	push	{r4, r5, r6, lr}
   114e4:	subs	r4, r0, #0
   114e8:	beq	115d4 <avl_remove_impl@@Base+0xf4>
   114ec:	ldr	r6, [r4]
   114f0:	mov	r0, r1
   114f4:	mov	r5, r1
   114f8:	mov	r1, r6
   114fc:	bl	10d30 <strcmp@plt>
   11500:	cmp	r0, #0
   11504:	blt	11608 <avl_remove_impl@@Base+0x128>
   11508:	beq	11574 <avl_remove_impl@@Base+0x94>
   1150c:	mov	r1, r5
   11510:	ldr	r0, [r4, #8]
   11514:	bl	114e0 <avl_remove_impl@@Base>
   11518:	ldr	r3, [r4, #4]
   1151c:	str	r0, [r4, #8]
   11520:	mov	r0, r3
   11524:	bl	1113c <avl_altura@@Base>
   11528:	mov	r5, r0
   1152c:	ldr	r0, [r4, #8]
   11530:	bl	1113c <avl_altura@@Base>
   11534:	mov	r1, r0
   11538:	mov	r0, r5
   1153c:	bl	1114c <max@@Base>
   11540:	add	r0, r0, #1
   11544:	str	r0, [r4, #12]
   11548:	mov	r0, r4
   1154c:	bl	11290 <calc_balanceamento@@Base>
   11550:	cmp	r0, #1
   11554:	ble	115cc <avl_remove_impl@@Base+0xec>
   11558:	ldr	r0, [r4, #8]
   1155c:	bl	11290 <calc_balanceamento@@Base>
   11560:	cmp	r0, #0
   11564:	blt	11660 <avl_remove_impl@@Base+0x180>
   11568:	mov	r0, r4
   1156c:	pop	{r4, r5, r6, lr}
   11570:	b	11220 <roda_esquerda@@Base>
   11574:	ldr	r5, [r4, #4]
   11578:	cmp	r5, #0
   1157c:	beq	11684 <avl_remove_impl@@Base+0x1a4>
   11580:	ldr	r0, [r4, #8]
   11584:	cmp	r0, #0
   11588:	beq	11620 <avl_remove_impl@@Base+0x140>
   1158c:	bl	11478 <avl_no_valormin@@Base>
   11590:	mov	r5, r0
   11594:	ldr	r0, [r0]
   11598:	bl	10dcc <strlen@plt>
   1159c:	add	r1, r0, #1
   115a0:	ldr	r0, [r4]
   115a4:	bl	10d84 <realloc@plt>
   115a8:	str	r0, [r4]
   115ac:	ldr	r1, [r5]
   115b0:	bl	10d90 <strcpy@plt>
   115b4:	ldr	r1, [r5]
   115b8:	ldr	r0, [r4, #8]
   115bc:	bl	114e0 <avl_remove_impl@@Base>
   115c0:	ldr	r3, [r4, #4]
   115c4:	str	r0, [r4, #8]
   115c8:	b	11520 <avl_remove_impl@@Base+0x40>
   115cc:	cmn	r0, #1
   115d0:	blt	115e0 <avl_remove_impl@@Base+0x100>
   115d4:	mov	r5, r4
   115d8:	mov	r0, r5
   115dc:	pop	{r4, r5, r6, pc}
   115e0:	ldr	r0, [r4, #4]
   115e4:	bl	11290 <calc_balanceamento@@Base>
   115e8:	cmp	r0, #0
   115ec:	ble	11678 <avl_remove_impl@@Base+0x198>
   115f0:	ldr	r0, [r4, #4]
   115f4:	bl	11220 <roda_esquerda@@Base>
   115f8:	str	r0, [r4, #4]
   115fc:	mov	r0, r4
   11600:	pop	{r4, r5, r6, lr}
   11604:	b	111b0 <roda_direita@@Base>
   11608:	mov	r1, r5
   1160c:	ldr	r0, [r4, #4]
   11610:	bl	114e0 <avl_remove_impl@@Base>
   11614:	mov	r3, r0
   11618:	str	r0, [r4, #4]
   1161c:	b	11520 <avl_remove_impl@@Base+0x40>
   11620:	ldr	r0, [r5]
   11624:	bl	10dcc <strlen@plt>
   11628:	add	r1, r0, #1
   1162c:	mov	r0, r6
   11630:	bl	10d84 <realloc@plt>
   11634:	str	r0, [r4]
   11638:	ldr	r1, [r5]
   1163c:	bl	10d90 <strcpy@plt>
   11640:	ldmib	r5, {r1, r2, r3}
   11644:	ldr	r0, [r5]
   11648:	stmib	r4, {r1, r2, r3}
   1164c:	bl	10d54 <free@plt>
   11650:	mov	r0, r5
   11654:	bl	10d54 <free@plt>
   11658:	ldr	r3, [r4, #4]
   1165c:	b	11520 <avl_remove_impl@@Base+0x40>
   11660:	ldr	r0, [r4, #8]
   11664:	bl	111b0 <roda_direita@@Base>
   11668:	str	r0, [r4, #8]
   1166c:	mov	r0, r4
   11670:	pop	{r4, r5, r6, lr}
   11674:	b	11220 <roda_esquerda@@Base>
   11678:	mov	r0, r4
   1167c:	pop	{r4, r5, r6, lr}
   11680:	b	111b0 <roda_direita@@Base>
   11684:	ldr	r5, [r4, #8]
   11688:	cmp	r5, #0
   1168c:	bne	11620 <avl_remove_impl@@Base+0x140>
   11690:	mov	r0, r6
   11694:	bl	10d54 <free@plt>
   11698:	mov	r0, r4
   1169c:	bl	10d54 <free@plt>
   116a0:	b	115d8 <avl_remove_impl@@Base+0xf8>

000116a4 <avl_apaga@@Base>:
   116a4:	push	{r4, lr}
   116a8:	subs	r4, r0, #0
   116ac:	popeq	{r4, pc}
   116b0:	ldr	r0, [r4]
   116b4:	cmp	r0, #0
   116b8:	beq	116d0 <avl_apaga@@Base+0x2c>
   116bc:	ldr	r1, [r0]
   116c0:	bl	114e0 <avl_remove_impl@@Base>
   116c4:	cmp	r0, #0
   116c8:	str	r0, [r4]
   116cc:	bne	116bc <avl_apaga@@Base+0x18>
   116d0:	mov	r0, r4
   116d4:	pop	{r4, lr}
   116d8:	b	10d54 <free@plt>

000116dc <avl_remove@@Base>:
   116dc:	cmp	r1, #0
   116e0:	cmpne	r0, #0
   116e4:	push	{r4, r5, r6, lr}
   116e8:	moveq	r5, #1
   116ec:	movne	r5, #0
   116f0:	beq	1170c <avl_remove@@Base+0x30>
   116f4:	mov	r4, r0
   116f8:	ldr	r0, [r0]
   116fc:	bl	114e0 <avl_remove_impl@@Base>
   11700:	str	r0, [r4]
   11704:	mov	r0, r5
   11708:	pop	{r4, r5, r6, pc}
   1170c:	mvn	r5, #0
   11710:	b	11704 <avl_remove@@Base+0x28>

00011714 <avl_preordem_impl@@Base>:
   11714:	push	{r4, r5, r6, lr}
   11718:	subs	r4, r0, #0
   1171c:	popeq	{r4, r5, r6, pc}
   11720:	ldr	r5, [pc, #40]	; 11750 <avl_preordem_impl@@Base+0x3c>
   11724:	add	r5, pc, r5
   11728:	ldr	r2, [r4, #16]
   1172c:	ldr	r1, [r4]
   11730:	mov	r0, r5
   11734:	bl	10d3c <printf@plt>
   11738:	ldr	r0, [r4, #4]
   1173c:	bl	11714 <avl_preordem_impl@@Base>
   11740:	ldr	r4, [r4, #8]
   11744:	cmp	r4, #0
   11748:	bne	11728 <avl_preordem_impl@@Base+0x14>
   1174c:	pop	{r4, r5, r6, pc}
   11750:	andeq	r0, r0, r0, ror r5

00011754 <avl_imprime@@Base>:
   11754:	cmp	r0, #0
   11758:	bxeq	lr
   1175c:	push	{r4, lr}
   11760:	ldr	r0, [r0]
   11764:	bl	11714 <avl_preordem_impl@@Base>
   11768:	mov	r0, #10
   1176c:	pop	{r4, lr}
   11770:	b	10dd8 <putchar@plt>

00011774 <bst_nova@@Base>:
   11774:	push	{r4, lr}
   11778:	mov	r0, #4
   1177c:	bl	10da8 <malloc@plt>
   11780:	cmp	r0, #0
   11784:	movne	r3, #0
   11788:	strne	r3, [r0]
   1178c:	pop	{r4, pc}

00011790 <bst_novo_no@@Base>:
   11790:	push	{r4, r5, r6, lr}
   11794:	mov	r5, r0
   11798:	mov	r0, #12
   1179c:	bl	10da8 <malloc@plt>
   117a0:	mov	r4, r0
   117a4:	mov	r0, r5
   117a8:	bl	10dcc <strlen@plt>
   117ac:	add	r6, r0, #1
   117b0:	mov	r0, r6
   117b4:	bl	10da8 <malloc@plt>
   117b8:	mov	r2, r6
   117bc:	mov	r1, r5
   117c0:	str	r0, [r4]
   117c4:	bl	10d6c <memcpy@plt>
   117c8:	mov	r3, #0
   117cc:	str	r3, [r4, #4]
   117d0:	str	r3, [r4, #8]
   117d4:	mov	r0, r4
   117d8:	pop	{r4, r5, r6, pc}

000117dc <bst_no_valormin@@Base>:
   117dc:	b	117e4 <bst_no_valormin@@Base+0x8>
   117e0:	mov	r0, r3
   117e4:	ldr	r3, [r0, #4]
   117e8:	cmp	r3, #0
   117ec:	bne	117e0 <bst_no_valormin@@Base+0x4>
   117f0:	bx	lr

000117f4 <bst_min@@Base>:
   117f4:	cmp	r0, #0
   117f8:	bxeq	lr
   117fc:	push	{r4, lr}
   11800:	ldr	r0, [r0]
   11804:	bl	117dc <bst_no_valormin@@Base>
   11808:	ldr	r0, [r0]
   1180c:	pop	{r4, pc}

00011810 <bst_no_valormax@@Base>:
   11810:	b	11818 <bst_no_valormax@@Base+0x8>
   11814:	mov	r0, r3
   11818:	ldr	r3, [r0, #8]
   1181c:	cmp	r3, #0
   11820:	bne	11814 <bst_no_valormax@@Base+0x4>
   11824:	bx	lr

00011828 <bst_max@@Base>:
   11828:	cmp	r0, #0
   1182c:	bxeq	lr
   11830:	push	{r4, lr}
   11834:	ldr	r0, [r0]
   11838:	bl	11810 <bst_no_valormax@@Base>
   1183c:	ldr	r0, [r0]
   11840:	pop	{r4, pc}

00011844 <bst_pesquisa_impl@@Base>:
   11844:	push	{r4, r5, r6, lr}
   11848:	subs	r4, r0, #0
   1184c:	beq	1187c <bst_pesquisa_impl@@Base+0x38>
   11850:	mov	r5, r1
   11854:	ldr	r1, [r4]
   11858:	mov	r0, r5
   1185c:	bl	10d30 <strcmp@plt>
   11860:	cmp	r0, #0
   11864:	ldrlt	r4, [r4, #4]
   11868:	blt	11874 <bst_pesquisa_impl@@Base+0x30>
   1186c:	beq	1187c <bst_pesquisa_impl@@Base+0x38>
   11870:	ldr	r4, [r4, #8]
   11874:	cmp	r4, #0
   11878:	bne	11854 <bst_pesquisa_impl@@Base+0x10>
   1187c:	mov	r0, r4
   11880:	pop	{r4, r5, r6, pc}

00011884 <bst_pesquisa@@Base>:
   11884:	cmp	r1, #0
   11888:	cmpne	r0, #0
   1188c:	beq	11898 <bst_pesquisa@@Base+0x14>
   11890:	ldr	r0, [r0]
   11894:	b	11844 <bst_pesquisa_impl@@Base>
   11898:	mov	r0, #0
   1189c:	bx	lr

000118a0 <bst_insere_impl@@Base>:
   118a0:	push	{r4, r5, r6, lr}
   118a4:	subs	r4, r0, #0
   118a8:	beq	118f4 <bst_insere_impl@@Base+0x54>
   118ac:	mov	r5, r1
   118b0:	mov	r0, r5
   118b4:	ldr	r1, [r4]
   118b8:	bl	10d30 <strcmp@plt>
   118bc:	cmp	r0, #0
   118c0:	blt	118e0 <bst_insere_impl@@Base+0x40>
   118c4:	beq	118d8 <bst_insere_impl@@Base+0x38>
   118c8:	mov	r1, r5
   118cc:	ldr	r0, [r4, #8]
   118d0:	bl	118a0 <bst_insere_impl@@Base>
   118d4:	str	r0, [r4, #8]
   118d8:	mov	r0, r4
   118dc:	pop	{r4, r5, r6, pc}
   118e0:	mov	r1, r5
   118e4:	ldr	r0, [r4, #4]
   118e8:	bl	118a0 <bst_insere_impl@@Base>
   118ec:	str	r0, [r4, #4]
   118f0:	b	118d8 <bst_insere_impl@@Base+0x38>
   118f4:	mov	r0, r1
   118f8:	pop	{r4, r5, r6, lr}
   118fc:	b	11790 <bst_novo_no@@Base>

00011900 <bst_insere@@Base>:
   11900:	cmp	r1, #0
   11904:	cmpne	r0, #0
   11908:	push	{r4, r5, r6, lr}
   1190c:	moveq	r5, #1
   11910:	movne	r5, #0
   11914:	beq	11930 <bst_insere@@Base+0x30>
   11918:	mov	r4, r0
   1191c:	ldr	r0, [r0]
   11920:	bl	118a0 <bst_insere_impl@@Base>
   11924:	str	r0, [r4]
   11928:	mov	r0, r5
   1192c:	pop	{r4, r5, r6, pc}
   11930:	mvn	r5, #0
   11934:	b	11928 <bst_insere@@Base+0x28>

00011938 <bst_remove_impl@@Base>:
   11938:	push	{r4, r5, r6, r7, r8, lr}
   1193c:	subs	r4, r0, #0
   11940:	beq	11a38 <bst_remove_impl@@Base+0x100>
   11944:	ldr	r6, [r4]
   11948:	mov	r0, r1
   1194c:	mov	r5, r1
   11950:	mov	r1, r6
   11954:	bl	10d30 <strcmp@plt>
   11958:	cmp	r0, #0
   1195c:	blt	11a44 <bst_remove_impl@@Base+0x10c>
   11960:	bne	119c0 <bst_remove_impl@@Base+0x88>
   11964:	ldr	r7, [r4, #4]
   11968:	cmp	r7, #0
   1196c:	beq	119dc <bst_remove_impl@@Base+0xa4>
   11970:	ldr	r0, [r4, #8]
   11974:	cmp	r0, #0
   11978:	beq	119f0 <bst_remove_impl@@Base+0xb8>
   1197c:	bl	117dc <bst_no_valormin@@Base>
   11980:	mov	r5, r4
   11984:	mov	r6, r0
   11988:	ldr	r0, [r0]
   1198c:	bl	10dcc <strlen@plt>
   11990:	add	r1, r0, #1
   11994:	ldr	r0, [r4]
   11998:	bl	10d84 <realloc@plt>
   1199c:	str	r0, [r4]
   119a0:	ldr	r1, [r6]
   119a4:	bl	10d90 <strcpy@plt>
   119a8:	ldr	r1, [r6]
   119ac:	ldr	r0, [r4, #8]
   119b0:	bl	11938 <bst_remove_impl@@Base>
   119b4:	str	r0, [r4, #8]
   119b8:	mov	r0, r5
   119bc:	pop	{r4, r5, r6, r7, r8, pc}
   119c0:	mov	r1, r5
   119c4:	ldr	r0, [r4, #8]
   119c8:	bl	11938 <bst_remove_impl@@Base>
   119cc:	mov	r5, r4
   119d0:	str	r0, [r4, #8]
   119d4:	mov	r0, r5
   119d8:	pop	{r4, r5, r6, r7, r8, pc}
   119dc:	ldr	r5, [r4, #8]
   119e0:	cmp	r5, #0
   119e4:	moveq	r7, r4
   119e8:	beq	11a20 <bst_remove_impl@@Base+0xe8>
   119ec:	mov	r7, r5
   119f0:	ldr	r0, [r7]
   119f4:	bl	10dcc <strlen@plt>
   119f8:	mov	r5, r4
   119fc:	add	r1, r0, #1
   11a00:	mov	r0, r6
   11a04:	bl	10d84 <realloc@plt>
   11a08:	str	r0, [r4]
   11a0c:	ldr	r1, [r7]
   11a10:	bl	10d90 <strcpy@plt>
   11a14:	ldmib	r7, {r2, r3}
   11a18:	ldr	r6, [r7]
   11a1c:	stmib	r4, {r2, r3}
   11a20:	mov	r0, r6
   11a24:	bl	10d54 <free@plt>
   11a28:	mov	r0, r7
   11a2c:	bl	10d54 <free@plt>
   11a30:	mov	r0, r5
   11a34:	pop	{r4, r5, r6, r7, r8, pc}
   11a38:	mov	r5, r4
   11a3c:	mov	r0, r5
   11a40:	pop	{r4, r5, r6, r7, r8, pc}
   11a44:	mov	r1, r5
   11a48:	ldr	r0, [r4, #4]
   11a4c:	bl	11938 <bst_remove_impl@@Base>
   11a50:	mov	r5, r4
   11a54:	str	r0, [r4, #4]
   11a58:	b	119b8 <bst_remove_impl@@Base+0x80>

00011a5c <bst_apaga@@Base>:
   11a5c:	push	{r4, lr}
   11a60:	mov	r4, r0
   11a64:	ldr	r0, [r0]
   11a68:	cmp	r0, #0
   11a6c:	beq	11a84 <bst_apaga@@Base+0x28>
   11a70:	ldr	r1, [r0]
   11a74:	bl	11938 <bst_remove_impl@@Base>
   11a78:	cmp	r0, #0
   11a7c:	str	r0, [r4]
   11a80:	bne	11a70 <bst_apaga@@Base+0x14>
   11a84:	mov	r0, r4
   11a88:	pop	{r4, lr}
   11a8c:	b	10d54 <free@plt>

00011a90 <bst_remove@@Base>:
   11a90:	cmp	r1, #0
   11a94:	cmpne	r0, #0
   11a98:	push	{r4, r5, r6, lr}
   11a9c:	moveq	r5, #1
   11aa0:	movne	r5, #0
   11aa4:	beq	11ac0 <bst_remove@@Base+0x30>
   11aa8:	mov	r4, r0
   11aac:	ldr	r0, [r0]
   11ab0:	bl	11938 <bst_remove_impl@@Base>
   11ab4:	str	r0, [r4]
   11ab8:	mov	r0, r5
   11abc:	pop	{r4, r5, r6, pc}
   11ac0:	mvn	r5, #0
   11ac4:	b	11ab8 <bst_remove@@Base+0x28>

00011ac8 <bst_altura@@Base>:
   11ac8:	push	{r4, r5, r6, lr}
   11acc:	subs	r4, r0, #0
   11ad0:	beq	11b38 <bst_altura@@Base+0x70>
   11ad4:	mov	r5, #1
   11ad8:	b	11b08 <bst_altura@@Base+0x40>
   11adc:	bl	11ac8 <bst_altura@@Base>
   11ae0:	mov	r6, r0
   11ae4:	ldr	r0, [r4, #8]
   11ae8:	bl	11ac8 <bst_altura@@Base>
   11aec:	ldmib	r4, {r2, r4}
   11af0:	mov	r3, r5
   11af4:	add	r5, r5, #1
   11af8:	cmp	r6, r0
   11afc:	movgt	r4, r2
   11b00:	cmp	r4, #0
   11b04:	beq	11b2c <bst_altura@@Base+0x64>
   11b08:	ldr	r2, [r4, #8]
   11b0c:	sub	r3, r5, #1
   11b10:	cmp	r2, #0
   11b14:	ldr	r0, [r4, #4]
   11b18:	bne	11adc <bst_altura@@Base+0x14>
   11b1c:	cmp	r0, #0
   11b20:	bne	11adc <bst_altura@@Base+0x14>
   11b24:	mov	r0, r3
   11b28:	pop	{r4, r5, r6, pc}
   11b2c:	sub	r3, r3, #1
   11b30:	mov	r0, r3
   11b34:	pop	{r4, r5, r6, pc}
   11b38:	mvn	r3, #0
   11b3c:	b	11b24 <bst_altura@@Base+0x5c>

00011b40 <bst_preordem_impl@@Base>:
   11b40:	push	{r4, r5, r6, lr}
   11b44:	subs	r4, r0, #0
   11b48:	popeq	{r4, r5, r6, pc}
   11b4c:	ldr	r5, [pc, #36]	; 11b78 <bst_preordem_impl@@Base+0x38>
   11b50:	add	r5, pc, r5
   11b54:	ldr	r1, [r4]
   11b58:	mov	r0, r5
   11b5c:	bl	10d3c <printf@plt>
   11b60:	ldr	r0, [r4, #4]
   11b64:	bl	11b40 <bst_preordem_impl@@Base>
   11b68:	ldr	r4, [r4, #8]
   11b6c:	cmp	r4, #0
   11b70:	bne	11b54 <bst_preordem_impl@@Base+0x14>
   11b74:	pop	{r4, r5, r6, pc}
   11b78:	andeq	r0, r0, ip, asr #2

00011b7c <bst_imprime@@Base>:
   11b7c:	push	{r4, lr}
   11b80:	subs	r4, r0, #0
   11b84:	popeq	{r4, pc}
   11b88:	ldr	r0, [pc, #24]	; 11ba8 <bst_imprime@@Base+0x2c>
   11b8c:	add	r0, pc, r0
   11b90:	bl	10d3c <printf@plt>
   11b94:	ldr	r0, [r4]
   11b98:	bl	11b40 <bst_preordem_impl@@Base>
   11b9c:	mov	r0, #10
   11ba0:	pop	{r4, lr}
   11ba4:	b	10dd8 <putchar@plt>
   11ba8:	andeq	r0, r0, r4, lsl r1

00011bac <__libc_csu_init@@Base>:
   11bac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bb0:	mov	r7, r0
   11bb4:	ldr	r6, [pc, #72]	; 11c04 <__libc_csu_init@@Base+0x58>
   11bb8:	ldr	r5, [pc, #72]	; 11c08 <__libc_csu_init@@Base+0x5c>
   11bbc:	add	r6, pc, r6
   11bc0:	add	r5, pc, r5
   11bc4:	sub	r6, r6, r5
   11bc8:	mov	r8, r1
   11bcc:	mov	r9, r2
   11bd0:	bl	10d10 <strcmp@plt-0x20>
   11bd4:	asrs	r6, r6, #2
   11bd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bdc:	mov	r4, #0
   11be0:	add	r4, r4, #1
   11be4:	ldr	r3, [r5], #4
   11be8:	mov	r2, r9
   11bec:	mov	r1, r8
   11bf0:	mov	r0, r7
   11bf4:	blx	r3
   11bf8:	cmp	r6, r4
   11bfc:	bne	11be0 <__libc_csu_init@@Base+0x34>
   11c00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c04:	andeq	r0, r1, ip, asr #6
   11c08:	andeq	r0, r1, r4, asr #6

00011c0c <__libc_csu_fini@@Base>:
   11c0c:	bx	lr

Disassembly of section .fini:

00011c10 <.fini>:
   11c10:	push	{r3, lr}
   11c14:	pop	{r3, pc}
