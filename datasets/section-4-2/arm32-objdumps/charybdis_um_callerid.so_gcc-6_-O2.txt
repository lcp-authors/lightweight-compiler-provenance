
../repos/charybdis/modules/.libs/um_callerid.so:     file format elf32-littlearm


Disassembly of section .init:

00000628 <_init>:
 628:	push	{r3, lr}
 62c:	bl	730 <call_weak_fn>
 630:	pop	{r3, pc}

Disassembly of section .plt:

00000634 <.plt>:
 634:	push	{lr}		; (str lr, [sp, #-4]!)
 638:	ldr	lr, [pc, #4]	; 644 <.plt+0x10>
 63c:	add	lr, pc, lr
 640:	ldr	pc, [lr, #8]!
 644:	.word	0x000119bc

00000648 <delete_isupport@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #69632	; 0x11000
 650:	ldr	pc, [ip, #2492]!	; 0x9bc

00000654 <rb_current_time@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #69632	; 0x11000
 65c:	ldr	pc, [ip, #2484]!	; 0x9b4

00000660 <__cxa_finalize@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #69632	; 0x11000
 668:	ldr	pc, [ip, #2476]!	; 0x9ac

0000066c <sendto_one@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #69632	; 0x11000
 674:	ldr	pc, [ip, #2468]!	; 0x9a4

00000678 <ierror@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #69632	; 0x11000
 680:	ldr	pc, [ip, #2460]!	; 0x99c

00000684 <find_umode_slot@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #69632	; 0x11000
 68c:	ldr	pc, [ip, #2452]!	; 0x994

00000690 <find_channel_membership@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #69632	; 0x11000
 698:	ldr	pc, [ip, #2444]!	; 0x98c

0000069c <__gmon_start__@plt>:
 69c:	add	ip, pc, #0, 12
 6a0:	add	ip, ip, #69632	; 0x11000
 6a4:	ldr	pc, [ip, #2436]!	; 0x984

000006a8 <rb_make_rb_dlink_node@plt>:
 6a8:	add	ip, pc, #0, 12
 6ac:	add	ip, ip, #69632	; 0x11000
 6b0:	ldr	pc, [ip, #2428]!	; 0x97c

000006b4 <sendto_one_numeric@plt>:
 6b4:	add	ip, pc, #0, 12
 6b8:	add	ip, ip, #69632	; 0x11000
 6bc:	ldr	pc, [ip, #2420]!	; 0x974

000006c0 <snprintf@plt>:
 6c0:	add	ip, pc, #0, 12
 6c4:	add	ip, ip, #69632	; 0x11000
 6c8:	ldr	pc, [ip, #2412]!	; 0x96c

000006cc <add_isupport@plt>:
 6cc:	add	ip, pc, #0, 12
 6d0:	add	ip, ip, #69632	; 0x11000
 6d4:	ldr	pc, [ip, #2404]!	; 0x964

000006d8 <privilegeset_in_set@plt>:
 6d8:	add	ip, pc, #0, 12
 6dc:	add	ip, ip, #69632	; 0x11000
 6e0:	ldr	pc, [ip, #2396]!	; 0x95c

000006e4 <__assert_fail@plt>:
 6e4:	add	ip, pc, #0, 12
 6e8:	add	ip, ip, #69632	; 0x11000
 6ec:	ldr	pc, [ip, #2388]!	; 0x954

000006f0 <construct_umodebuf@plt>:
 6f0:	add	ip, pc, #0, 12
 6f4:	add	ip, ip, #69632	; 0x11000
 6f8:	ldr	pc, [ip, #2380]!	; 0x94c

Disassembly of section .text:

000006fc <rb_dlinkFind.part.0>:
     6fc:	ldr	r3, [pc, #28]	; 720 <rb_dlinkFind.part.0+0x24>
     700:	ldr	r1, [pc, #28]	; 724 <rb_dlinkFind.part.0+0x28>
     704:	ldr	r0, [pc, #28]	; 728 <rb_dlinkFind.part.0+0x2c>
     708:	push	{r4, lr}
     70c:	add	r3, pc, r3
     710:	ldr	r2, [pc, #20]	; 72c <rb_dlinkFind.part.0+0x30>
     714:	add	r1, pc, r1
     718:	add	r0, pc, r0
     71c:	bl	6e4 <__assert_fail@plt>
     720:	.word	0x000009d0
     724:	.word	0x00000a40
     728:	.word	0x00000a58
     72c:	.word	0x00000137

00000730 <call_weak_fn>:
     730:	ldr	r3, [pc, #20]	; 74c <call_weak_fn+0x1c>
     734:	ldr	r2, [pc, #20]	; 750 <call_weak_fn+0x20>
     738:	add	r3, pc, r3
     73c:	ldr	r2, [r3, r2]
     740:	cmp	r2, #0
     744:	bxeq	lr
     748:	b	69c <__gmon_start__@plt>
     74c:	.word	0x000118c0
     750:	.word	0x00000058

00000754 <deregister_tm_clones>:
     754:	ldr	r3, [pc, #52]	; 790 <deregister_tm_clones+0x3c>
     758:	ldr	r0, [pc, #52]	; 794 <deregister_tm_clones+0x40>
     75c:	add	r3, pc, r3
     760:	add	r0, pc, r0
     764:	add	r3, r3, #3
     768:	sub	r3, r3, r0
     76c:	cmp	r3, #6
     770:	ldr	r3, [pc, #32]	; 798 <deregister_tm_clones+0x44>
     774:	add	r3, pc, r3
     778:	bxls	lr
     77c:	ldr	r2, [pc, #24]	; 79c <deregister_tm_clones+0x48>
     780:	ldr	r3, [r3, r2]
     784:	cmp	r3, #0
     788:	bxeq	lr
     78c:	bx	r3
     790:	.word	0x00011958
     794:	.word	0x00011954
     798:	.word	0x00011884
     79c:	.word	0x0000004c

000007a0 <register_tm_clones>:
     7a0:	ldr	r1, [pc, #56]	; 7e0 <register_tm_clones+0x40>
     7a4:	ldr	r0, [pc, #56]	; 7e4 <register_tm_clones+0x44>
     7a8:	add	r1, pc, r1
     7ac:	add	r0, pc, r0
     7b0:	sub	r1, r1, r0
     7b4:	ldr	r3, [pc, #44]	; 7e8 <register_tm_clones+0x48>
     7b8:	asr	r1, r1, #2
     7bc:	add	r3, pc, r3
     7c0:	add	r1, r1, r1, lsr #31
     7c4:	asrs	r1, r1, #1
     7c8:	bxeq	lr
     7cc:	ldr	r2, [pc, #24]	; 7ec <register_tm_clones+0x4c>
     7d0:	ldr	r3, [r3, r2]
     7d4:	cmp	r3, #0
     7d8:	bxeq	lr
     7dc:	bx	r3
     7e0:	.word	0x0001190c
     7e4:	.word	0x00011908
     7e8:	.word	0x0001183c
     7ec:	.word	0x00000060

000007f0 <__do_global_dtors_aux>:
     7f0:	ldr	r3, [pc, #76]	; 844 <__do_global_dtors_aux+0x54>
     7f4:	ldr	r2, [pc, #76]	; 848 <__do_global_dtors_aux+0x58>
     7f8:	add	r3, pc, r3
     7fc:	add	r2, pc, r2
     800:	ldrb	r3, [r3]
     804:	cmp	r3, #0
     808:	bxne	lr
     80c:	ldr	r3, [pc, #56]	; 84c <__do_global_dtors_aux+0x5c>
     810:	push	{r4, lr}
     814:	ldr	r3, [r2, r3]
     818:	cmp	r3, #0
     81c:	beq	82c <__do_global_dtors_aux+0x3c>
     820:	ldr	r3, [pc, #40]	; 850 <__do_global_dtors_aux+0x60>
     824:	ldr	r0, [pc, r3]
     828:	bl	660 <__cxa_finalize@plt>
     82c:	bl	754 <deregister_tm_clones>
     830:	ldr	r3, [pc, #28]	; 854 <__do_global_dtors_aux+0x64>
     834:	mov	r2, #1
     838:	add	r3, pc, r3
     83c:	strb	r2, [r3]
     840:	pop	{r4, pc}
     844:	.word	0x000118bc
     848:	.word	0x000117fc
     84c:	.word	0x00000048
     850:	.word	0x00011840
     854:	.word	0x0001187c

00000858 <frame_dummy>:
     858:	ldr	r0, [pc, #56]	; 898 <frame_dummy+0x40>
     85c:	ldr	r3, [pc, #56]	; 89c <frame_dummy+0x44>
     860:	add	r0, pc, r0
     864:	ldr	r2, [r0]
     868:	add	r3, pc, r3
     86c:	cmp	r2, #0
     870:	bne	878 <frame_dummy+0x20>
     874:	b	7a0 <register_tm_clones>
     878:	ldr	r2, [pc, #32]	; 8a0 <frame_dummy+0x48>
     87c:	ldr	r3, [r3, r2]
     880:	cmp	r3, #0
     884:	beq	874 <frame_dummy+0x1c>
     888:	push	{r4, lr}
     88c:	blx	r3
     890:	pop	{r4, lr}
     894:	b	7a0 <register_tm_clones>
     898:	.word	0x00011694
     89c:	.word	0x00011790
     8a0:	.word	0x0000005c

000008a4 <um_callerid_moddeinit>:
     8a4:	ldr	r3, [pc, #44]	; 8d8 <um_callerid_moddeinit+0x34>
     8a8:	ldr	r2, [pc, #44]	; 8dc <um_callerid_moddeinit+0x38>
     8ac:	add	r3, pc, r3
     8b0:	push	{r4, lr}
     8b4:	mov	r1, #0
     8b8:	ldr	r3, [r3, r2]
     8bc:	str	r1, [r3, #412]	; 0x19c
     8c0:	str	r1, [r3, #284]	; 0x11c
     8c4:	bl	6f0 <construct_umodebuf@plt>
     8c8:	ldr	r0, [pc, #16]	; 8e0 <um_callerid_moddeinit+0x3c>
     8cc:	pop	{r4, lr}
     8d0:	add	r0, pc, r0
     8d4:	b	648 <delete_isupport@plt>
     8d8:	.word	0x0001174c
     8dc:	.word	0x00000054
     8e0:	.word	0x00000878

000008e4 <rb_dlinkAdd>:
     8e4:	cmp	r0, #0
     8e8:	push	{r4, lr}
     8ec:	beq	98c <rb_dlinkAdd+0xa8>
     8f0:	cmp	r1, #0
     8f4:	beq	968 <rb_dlinkAdd+0x84>
     8f8:	cmp	r2, #0
     8fc:	beq	944 <rb_dlinkAdd+0x60>
     900:	ldr	r3, [r2]
     904:	mov	ip, #0
     908:	cmp	r3, ip
     90c:	str	r0, [r1]
     910:	str	r3, [r1, #8]
     914:	str	ip, [r1, #4]
     918:	strne	r1, [r3, #4]
     91c:	beq	934 <rb_dlinkAdd+0x50>
     920:	ldr	r3, [r2, #8]
     924:	str	r1, [r2]
     928:	add	r3, r3, #1
     92c:	str	r3, [r2, #8]
     930:	pop	{r4, pc}
     934:	ldr	r3, [r2, #4]
     938:	cmp	r3, #0
     93c:	streq	r1, [r2, #4]
     940:	b	920 <rb_dlinkAdd+0x3c>
     944:	ldr	r3, [pc, #100]	; 9b0 <rb_dlinkAdd+0xcc>
     948:	ldr	r1, [pc, #100]	; 9b4 <rb_dlinkAdd+0xd0>
     94c:	ldr	r0, [pc, #100]	; 9b8 <rb_dlinkAdd+0xd4>
     950:	add	r3, pc, r3
     954:	mov	r2, #145	; 0x91
     958:	add	r3, r3, #16
     95c:	add	r1, pc, r1
     960:	add	r0, pc, r0
     964:	bl	6e4 <__assert_fail@plt>
     968:	ldr	r3, [pc, #76]	; 9bc <rb_dlinkAdd+0xd8>
     96c:	ldr	r1, [pc, #76]	; 9c0 <rb_dlinkAdd+0xdc>
     970:	ldr	r0, [pc, #76]	; 9c4 <rb_dlinkAdd+0xe0>
     974:	add	r3, pc, r3
     978:	mov	r2, #144	; 0x90
     97c:	add	r3, r3, #16
     980:	add	r1, pc, r1
     984:	add	r0, pc, r0
     988:	bl	6e4 <__assert_fail@plt>
     98c:	ldr	r3, [pc, #52]	; 9c8 <rb_dlinkAdd+0xe4>
     990:	ldr	r1, [pc, #52]	; 9cc <rb_dlinkAdd+0xe8>
     994:	ldr	r0, [pc, #52]	; 9d0 <rb_dlinkAdd+0xec>
     998:	add	r3, pc, r3
     99c:	mov	r2, #143	; 0x8f
     9a0:	add	r3, r3, #16
     9a4:	add	r1, pc, r1
     9a8:	add	r0, pc, r0
     9ac:	bl	6e4 <__assert_fail@plt>
     9b0:	.word	0x0000078c
     9b4:	.word	0x000007f8
     9b8:	.word	0x0000082c
     9bc:	.word	0x00000768
     9c0:	.word	0x000007d4
     9c4:	.word	0x000007fc
     9c8:	.word	0x00000744
     9cc:	.word	0x000007b0
     9d0:	.word	0x000007c8

000009d4 <allow_message>:
     9d4:	ldrd	r2, [r1, #64]	; 0x40
     9d8:	ldr	ip, [pc, #392]	; b68 <allow_message+0x194>
     9dc:	mov	r3, #0
     9e0:	and	r2, r2, #8192	; 0x2000
     9e4:	orrs	r3, r2, r3
     9e8:	add	ip, pc, ip
     9ec:	beq	9fc <allow_message+0x28>
     9f0:	ldrh	r3, [r1, #80]	; 0x50
     9f4:	cmp	r3, #64	; 0x40
     9f8:	beq	a04 <allow_message+0x30>
     9fc:	mov	r0, #1
     a00:	bx	lr
     a04:	ldr	r3, [pc, #352]	; b6c <allow_message+0x198>
     a08:	push	{r4, r5, r6, r7, r8, lr}
     a0c:	mov	r5, r0
     a10:	ldr	r7, [ip, r3]
     a14:	ldr	r2, [r1, #56]	; 0x38
     a18:	mov	r4, r1
     a1c:	ldr	r3, [r7, #412]	; 0x19c
     a20:	bics	r3, r3, r2
     a24:	ldr	r3, [r7, #284]	; 0x11c
     a28:	beq	a3c <allow_message+0x68>
     a2c:	bics	r3, r3, r2
     a30:	beq	af0 <allow_message+0x11c>
     a34:	mov	r0, #1
     a38:	pop	{r4, r5, r6, r7, r8, pc}
     a3c:	bics	r3, r3, r2
     a40:	beq	af0 <allow_message+0x11c>
     a44:	ldrh	r3, [r5, #80]	; 0x50
     a48:	cmp	r3, #32
     a4c:	beq	a34 <allow_message+0x60>
     a50:	ldr	r3, [r5, #24]
     a54:	cmp	r3, #0
     a58:	beq	aa0 <allow_message+0xcc>
     a5c:	ldr	r0, [r3, #36]	; 0x24
     a60:	cmp	r0, #0
     a64:	beq	ae0 <allow_message+0x10c>
     a68:	ldr	r1, [pc, #256]	; b70 <allow_message+0x19c>
     a6c:	add	r1, pc, r1
     a70:	bl	6d8 <privilegeset_in_set@plt>
     a74:	cmp	r0, #0
     a78:	bne	a34 <allow_message+0x60>
     a7c:	ldr	r3, [r5, #56]	; 0x38
     a80:	tst	r3, #4096	; 0x1000
     a84:	beq	aa0 <allow_message+0xcc>
     a88:	ldr	r3, [r5, #24]
     a8c:	cmp	r3, #0
     a90:	beq	aa0 <allow_message+0xcc>
     a94:	ldr	r3, [r3, #36]	; 0x24
     a98:	cmp	r3, #0
     a9c:	beq	a34 <allow_message+0x60>
     aa0:	cmp	r4, r5
     aa4:	beq	a34 <allow_message+0x60>
     aa8:	ldr	r3, [r4, #432]	; 0x1b0
     aac:	cmn	r3, #316	; 0x13c
     ab0:	beq	b48 <allow_message+0x174>
     ab4:	ldr	r3, [r3, #316]	; 0x13c
     ab8:	cmp	r3, #0
     abc:	beq	ad8 <allow_message+0x104>
     ac0:	ldr	r2, [r3]
     ac4:	cmp	r5, r2
     ac8:	beq	a34 <allow_message+0x60>
     acc:	ldr	r3, [r3, #8]
     ad0:	cmp	r3, #0
     ad4:	bne	ac0 <allow_message+0xec>
     ad8:	mov	r0, r3
     adc:	pop	{r4, r5, r6, r7, r8, pc}
     ae0:	ldr	r3, [r5, #56]	; 0x38
     ae4:	tst	r3, #4096	; 0x1000
     ae8:	bne	a34 <allow_message+0x60>
     aec:	b	aa0 <allow_message+0xcc>
     af0:	ldr	r3, [r5, #24]
     af4:	ldr	r6, [r3]
     af8:	cmp	r6, #0
     afc:	bne	b10 <allow_message+0x13c>
     b00:	b	a44 <allow_message+0x70>
     b04:	ldr	r6, [r6, #8]
     b08:	cmp	r6, #0
     b0c:	beq	a44 <allow_message+0x70>
     b10:	ldr	r3, [r4, #24]
     b14:	cmp	r3, #0
     b18:	beq	b04 <allow_message+0x130>
     b1c:	ldr	r3, [r6]
     b20:	mov	r1, r4
     b24:	ldr	r0, [r3, #36]	; 0x24
     b28:	bl	690 <find_channel_membership@plt>
     b2c:	cmp	r0, #0
     b30:	beq	b04 <allow_message+0x130>
     b34:	ldr	r3, [r7, #412]	; 0x19c
     b38:	ldr	r2, [r4, #56]	; 0x38
     b3c:	bics	r3, r3, r2
     b40:	bne	a34 <allow_message+0x60>
     b44:	b	a44 <allow_message+0x70>
     b48:	ldr	r3, [pc, #36]	; b74 <allow_message+0x1a0>
     b4c:	ldr	r1, [pc, #36]	; b78 <allow_message+0x1a4>
     b50:	ldr	r0, [pc, #36]	; b7c <allow_message+0x1a8>
     b54:	add	r3, pc, r3
     b58:	ldr	r2, [pc, #32]	; b80 <allow_message+0x1ac>
     b5c:	add	r1, pc, r1
     b60:	add	r0, pc, r0
     b64:	bl	6e4 <__assert_fail@plt>
     b68:	.word	0x00011610
     b6c:	.word	0x00000054
     b70:	.word	0x00000730
     b74:	.word	0x00000588
     b78:	.word	0x000005f8
     b7c:	.word	0x0000062c
     b80:	.word	0x00000136

00000b84 <um_callerid_modinit>:
     b84:	push	{r4, r5, r6, lr}
     b88:	bl	684 <find_umode_slot@plt>
     b8c:	ldr	r4, [pc, #124]	; c10 <um_callerid_modinit+0x8c>
     b90:	ldr	r3, [pc, #124]	; c14 <um_callerid_modinit+0x90>
     b94:	add	r4, pc, r4
     b98:	ldr	r5, [r4, r3]
     b9c:	cmp	r0, #0
     ba0:	str	r0, [r5, #412]	; 0x19c
     ba4:	beq	be4 <um_callerid_modinit+0x60>
     ba8:	bl	684 <find_umode_slot@plt>
     bac:	cmp	r0, #0
     bb0:	mov	r3, r0
     bb4:	str	r0, [r5, #284]	; 0x11c
     bb8:	beq	bf8 <um_callerid_modinit+0x74>
     bbc:	bl	6f0 <construct_umodebuf@plt>
     bc0:	ldr	r3, [pc, #80]	; c18 <um_callerid_modinit+0x94>
     bc4:	ldr	r2, [pc, #80]	; c1c <um_callerid_modinit+0x98>
     bc8:	ldr	r0, [pc, #80]	; c20 <um_callerid_modinit+0x9c>
     bcc:	add	r2, pc, r2
     bd0:	add	r0, pc, r0
     bd4:	ldr	r1, [r4, r3]
     bd8:	bl	6cc <add_isupport@plt>
     bdc:	mov	r0, #0
     be0:	pop	{r4, r5, r6, pc}
     be4:	ldr	r0, [pc, #56]	; c24 <um_callerid_modinit+0xa0>
     be8:	add	r0, pc, r0
     bec:	bl	678 <ierror@plt>
     bf0:	mvn	r0, #0
     bf4:	pop	{r4, r5, r6, pc}
     bf8:	ldr	r0, [pc, #40]	; c28 <um_callerid_modinit+0xa4>
     bfc:	str	r3, [r5, #412]	; 0x19c
     c00:	add	r0, pc, r0
     c04:	bl	678 <ierror@plt>
     c08:	mvn	r0, #0
     c0c:	pop	{r4, r5, r6, pc}
     c10:	.word	0x00011464
     c14:	.word	0x00000054
     c18:	.word	0x00000050
     c1c:	.word	0x00000670
     c20:	.word	0x00000578
     c24:	.word	0x000005c4
     c28:	.word	0x000005f4

00000c2c <add_callerid_accept_for_source>:
     c2c:	push	{r4, r5, r6, r7, r8, lr}
     c30:	sub	sp, sp, #8
     c34:	ldrd	r4, [r1, #64]	; 0x40
     c38:	ldr	r6, [pc, #464]	; e10 <add_callerid_accept_for_source+0x1e4>
     c3c:	mov	r5, #0
     c40:	and	r4, r4, #8192	; 0x2000
     c44:	orrs	r3, r4, r5
     c48:	add	r6, pc, r6
     c4c:	beq	c94 <add_callerid_accept_for_source+0x68>
     c50:	ldrh	r4, [r1, #80]	; 0x50
     c54:	cmp	r0, #0
     c58:	sub	r4, r4, #64	; 0x40
     c5c:	clz	r4, r4
     c60:	lsr	r4, r4, #5
     c64:	moveq	r4, #0
     c68:	cmp	r4, #0
     c6c:	beq	c94 <add_callerid_accept_for_source+0x68>
     c70:	ldr	r3, [pc, #412]	; e14 <add_callerid_accept_for_source+0x1e8>
     c74:	ldr	r0, [r1, #56]	; 0x38
     c78:	ldr	r7, [r6, r3]
     c7c:	ldr	r3, [r7, #412]	; 0x19c
     c80:	bics	r3, r3, r0
     c84:	beq	ca4 <add_callerid_accept_for_source+0x78>
     c88:	ldr	r3, [r7, #284]	; 0x11c
     c8c:	bics	r3, r3, r0
     c90:	beq	ca4 <add_callerid_accept_for_source+0x78>
     c94:	mov	r4, #1
     c98:	mov	r0, r4
     c9c:	add	sp, sp, #8
     ca0:	pop	{r4, r5, r6, r7, r8, pc}
     ca4:	cmp	r1, r2
     ca8:	beq	c94 <add_callerid_accept_for_source+0x68>
     cac:	mov	r8, r1
     cb0:	ldr	r1, [r1, #432]	; 0x1b0
     cb4:	mov	r5, r2
     cb8:	cmn	r1, #316	; 0x13c
     cbc:	beq	df0 <add_callerid_accept_for_source+0x1c4>
     cc0:	cmp	r2, #0
     cc4:	beq	dec <add_callerid_accept_for_source+0x1c0>
     cc8:	ldr	r3, [r1, #316]	; 0x13c
     ccc:	cmp	r3, #0
     cd0:	bne	ce4 <add_callerid_accept_for_source+0xb8>
     cd4:	b	cf4 <add_callerid_accept_for_source+0xc8>
     cd8:	ldr	r3, [r3, #8]
     cdc:	cmp	r3, #0
     ce0:	beq	cf4 <add_callerid_accept_for_source+0xc8>
     ce4:	ldr	r2, [r3]
     ce8:	cmp	r5, r2
     cec:	bne	cd8 <add_callerid_accept_for_source+0xac>
     cf0:	b	c94 <add_callerid_accept_for_source+0x68>
     cf4:	ldr	r3, [r5, #24]
     cf8:	cmp	r3, #0
     cfc:	beq	d98 <add_callerid_accept_for_source+0x16c>
     d00:	ldr	r0, [r3, #36]	; 0x24
     d04:	cmp	r0, #0
     d08:	beq	da0 <add_callerid_accept_for_source+0x174>
     d0c:	ldr	r1, [pc, #260]	; e18 <add_callerid_accept_for_source+0x1ec>
     d10:	add	r1, pc, r1
     d14:	bl	6d8 <privilegeset_in_set@plt>
     d18:	cmp	r0, #0
     d1c:	bne	c94 <add_callerid_accept_for_source+0x68>
     d20:	ldr	r0, [r5, #56]	; 0x38
     d24:	tst	r0, #4096	; 0x1000
     d28:	beq	d44 <add_callerid_accept_for_source+0x118>
     d2c:	ldr	r3, [r5, #24]
     d30:	cmp	r3, #0
     d34:	beq	d44 <add_callerid_accept_for_source+0x118>
     d38:	ldr	r3, [r3, #36]	; 0x24
     d3c:	cmp	r3, #0
     d40:	beq	c94 <add_callerid_accept_for_source+0x68>
     d44:	ldr	r1, [r8, #432]	; 0x1b0
     d48:	ldr	r3, [pc, #204]	; e1c <add_callerid_accept_for_source+0x1f0>
     d4c:	ldr	r2, [r1, #324]	; 0x144
     d50:	ldr	r3, [r6, r3]
     d54:	ldr	r3, [r3, #96]	; 0x60
     d58:	cmp	r2, r3
     d5c:	bcc	dbc <add_callerid_accept_for_source+0x190>
     d60:	ldr	r2, [r7, #412]	; 0x19c
     d64:	add	r3, r5, #88	; 0x58
     d68:	bics	r2, r2, r0
     d6c:	beq	db0 <add_callerid_accept_for_source+0x184>
     d70:	ldr	r2, [pc, #168]	; e20 <add_callerid_accept_for_source+0x1f4>
     d74:	add	r2, pc, r2
     d78:	str	r2, [sp]
     d7c:	ldr	r2, [pc, #160]	; e24 <add_callerid_accept_for_source+0x1f8>
     d80:	mov	r0, r8
     d84:	add	r2, pc, r2
     d88:	ldr	r1, [pc, #152]	; e28 <add_callerid_accept_for_source+0x1fc>
     d8c:	bl	6b4 <sendto_one_numeric@plt>
     d90:	mov	r4, #0
     d94:	b	c98 <add_callerid_accept_for_source+0x6c>
     d98:	ldr	r0, [r5, #56]	; 0x38
     d9c:	b	d48 <add_callerid_accept_for_source+0x11c>
     da0:	ldr	r0, [r5, #56]	; 0x38
     da4:	tst	r0, #4096	; 0x1000
     da8:	bne	c94 <add_callerid_accept_for_source+0x68>
     dac:	b	d48 <add_callerid_accept_for_source+0x11c>
     db0:	ldr	r2, [pc, #116]	; e2c <add_callerid_accept_for_source+0x200>
     db4:	add	r2, pc, r2
     db8:	b	d78 <add_callerid_accept_for_source+0x14c>
     dbc:	bl	6a8 <rb_make_rb_dlink_node@plt>
     dc0:	ldr	r2, [r8, #432]	; 0x1b0
     dc4:	add	r2, r2, #316	; 0x13c
     dc8:	mov	r1, r0
     dcc:	mov	r0, r5
     dd0:	bl	8e4 <rb_dlinkAdd>
     dd4:	bl	6a8 <rb_make_rb_dlink_node@plt>
     dd8:	add	r2, r5, #408	; 0x198
     ddc:	mov	r1, r0
     de0:	mov	r0, r8
     de4:	bl	8e4 <rb_dlinkAdd>
     de8:	b	c98 <add_callerid_accept_for_source+0x6c>
     dec:	bl	6fc <rb_dlinkFind.part.0>
     df0:	ldr	r3, [pc, #56]	; e30 <add_callerid_accept_for_source+0x204>
     df4:	ldr	r1, [pc, #56]	; e34 <add_callerid_accept_for_source+0x208>
     df8:	ldr	r0, [pc, #56]	; e38 <add_callerid_accept_for_source+0x20c>
     dfc:	add	r3, pc, r3
     e00:	ldr	r2, [pc, #52]	; e3c <add_callerid_accept_for_source+0x210>
     e04:	add	r1, pc, r1
     e08:	add	r0, pc, r0
     e0c:	bl	6e4 <__assert_fail@plt>
     e10:	.word	0x000113b0
     e14:	.word	0x00000054
     e18:	.word	0x0000048c
     e1c:	.word	0x00000068
     e20:	.word	0x000004d0
     e24:	.word	0x000004c4
     e28:	.word	0x000001ee
     e2c:	.word	0x0000048c
     e30:	.word	0x000002e0
     e34:	.word	0x00000350
     e38:	.word	0x00000384
     e3c:	.word	0x00000136

00000e40 <h_hdl_privmsg_user>:
     e40:	ldr	r3, [r0, #16]
     e44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     e48:	cmp	r3, #0
     e4c:	ldr	r5, [pc, #380]	; fd0 <h_hdl_privmsg_user+0x190>
     e50:	sub	sp, sp, #16
     e54:	add	r5, pc, r5
     e58:	beq	e64 <h_hdl_privmsg_user+0x24>
     e5c:	add	sp, sp, #16
     e60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     e64:	ldm	r0, {r7, r8}
     e68:	ldr	r6, [r0, #8]
     e6c:	mov	r4, r0
     e70:	mov	r1, r8
     e74:	mov	r0, r7
     e78:	mov	r2, r6
     e7c:	bl	c2c <add_callerid_accept_for_source>
     e80:	cmp	r0, #0
     e84:	bne	e98 <h_hdl_privmsg_user+0x58>
     e88:	mov	r3, #716	; 0x2cc
     e8c:	str	r3, [r4, #16]
     e90:	add	sp, sp, #16
     e94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
     e98:	mov	r1, r6
     e9c:	mov	r0, r8
     ea0:	bl	9d4 <allow_message>
     ea4:	cmp	r0, #0
     ea8:	bne	e5c <h_hdl_privmsg_user+0x1c>
     eac:	ldrd	r2, [r6, #64]	; 0x40
     eb0:	mov	r3, #0
     eb4:	and	r2, r2, #8192	; 0x2000
     eb8:	orrs	r3, r2, r3
     ebc:	beq	e88 <h_hdl_privmsg_user+0x48>
     ec0:	ldrh	r3, [r6, #80]	; 0x50
     ec4:	clz	r7, r7
     ec8:	lsr	r7, r7, #5
     ecc:	cmp	r3, #64	; 0x40
     ed0:	orrne	r7, r7, #1
     ed4:	cmp	r7, #0
     ed8:	bne	e88 <h_hdl_privmsg_user+0x48>
     edc:	ldr	r3, [pc, #240]	; fd4 <h_hdl_privmsg_user+0x194>
     ee0:	ldr	r2, [r6, #56]	; 0x38
     ee4:	add	r9, r6, #88	; 0x58
     ee8:	ldr	sl, [r5, r3]
     eec:	ldr	r3, [sl, #412]	; 0x19c
     ef0:	bics	r3, r3, r2
     ef4:	beq	fb8 <h_hdl_privmsg_user+0x178>
     ef8:	ldr	r3, [pc, #216]	; fd8 <h_hdl_privmsg_user+0x198>
     efc:	add	r3, pc, r3
     f00:	ldr	r2, [pc, #212]	; fdc <h_hdl_privmsg_user+0x19c>
     f04:	str	r3, [sp]
     f08:	add	r2, pc, r2
     f0c:	mov	r3, r9
     f10:	mov	r1, #716	; 0x2cc
     f14:	mov	r0, r8
     f18:	bl	6b4 <sendto_one_numeric@plt>
     f1c:	ldr	r3, [pc, #188]	; fe0 <h_hdl_privmsg_user+0x1a0>
     f20:	ldr	r2, [r6, #432]	; 0x1b0
     f24:	ldr	r3, [r5, r3]
     f28:	ldr	r7, [r2, #40]	; 0x28
     f2c:	ldr	r3, [r3, #232]	; 0xe8
     f30:	add	r7, r7, r3
     f34:	bl	654 <rb_current_time@plt>
     f38:	cmp	r7, r0
     f3c:	bge	e88 <h_hdl_privmsg_user+0x48>
     f40:	ldr	r2, [pc, #156]	; fe4 <h_hdl_privmsg_user+0x1a4>
     f44:	mov	r0, r8
     f48:	mov	r3, r9
     f4c:	add	r2, pc, r2
     f50:	ldr	r1, [pc, #144]	; fe8 <h_hdl_privmsg_user+0x1a8>
     f54:	bl	6b4 <sendto_one_numeric@plt>
     f58:	ldr	r3, [sl, #412]	; 0x19c
     f5c:	ldr	r2, [r6, #56]	; 0x38
     f60:	add	r0, r8, #88	; 0x58
     f64:	add	ip, r8, #152	; 0x98
     f68:	bics	r3, r3, r2
     f6c:	add	r8, r8, #163	; 0xa3
     f70:	beq	fc4 <h_hdl_privmsg_user+0x184>
     f74:	ldr	lr, [pc, #112]	; fec <h_hdl_privmsg_user+0x1ac>
     f78:	add	lr, pc, lr
     f7c:	ldr	r2, [pc, #108]	; ff0 <h_hdl_privmsg_user+0x1b0>
     f80:	ldr	r1, [pc, #108]	; ff4 <h_hdl_privmsg_user+0x1b4>
     f84:	mov	r3, r9
     f88:	ldr	r2, [r5, r2]
     f8c:	add	r1, pc, r1
     f90:	stm	sp, {r0, ip}
     f94:	str	lr, [sp, #12]
     f98:	add	r2, r2, #88	; 0x58
     f9c:	mov	r0, r6
     fa0:	str	r8, [sp, #8]
     fa4:	bl	66c <sendto_one@plt>
     fa8:	ldr	r5, [r6, #432]	; 0x1b0
     fac:	bl	654 <rb_current_time@plt>
     fb0:	str	r0, [r5, #40]	; 0x28
     fb4:	b	e88 <h_hdl_privmsg_user+0x48>
     fb8:	ldr	r3, [pc, #56]	; ff8 <h_hdl_privmsg_user+0x1b8>
     fbc:	add	r3, pc, r3
     fc0:	b	f00 <h_hdl_privmsg_user+0xc0>
     fc4:	ldr	lr, [pc, #48]	; ffc <h_hdl_privmsg_user+0x1bc>
     fc8:	add	lr, pc, lr
     fcc:	b	f7c <h_hdl_privmsg_user+0x13c>
     fd0:	.word	0x000111a4
     fd4:	.word	0x00000054
     fd8:	.word	0x00000348
     fdc:	.word	0x00000384
     fe0:	.word	0x00000068
     fe4:	.word	0x00000368
     fe8:	.word	0x000002cd
     fec:	.word	0x000002cc
     ff0:	.word	0x00000064
     ff4:	.word	0x00000358
     ff8:	.word	0x00000284
     ffc:	.word	0x00000278

00001000 <h_hdl_invite>:
    1000:	ldr	r3, [r0, #16]
    1004:	push	{r4, r5, r6, r7, lr}
    1008:	cmp	r3, #0
    100c:	ldr	r5, [pc, #176]	; 10c4 <h_hdl_invite+0xc4>
    1010:	sub	sp, sp, #12
    1014:	add	r5, pc, r5
    1018:	beq	1024 <h_hdl_invite+0x24>
    101c:	add	sp, sp, #12
    1020:	pop	{r4, r5, r6, r7, pc}
    1024:	ldr	r7, [r0]
    1028:	ldr	r6, [r0, #12]
    102c:	mov	r4, r0
    1030:	mov	r1, r7
    1034:	mov	r2, r6
    1038:	mov	r0, #1
    103c:	bl	c2c <add_callerid_accept_for_source>
    1040:	cmp	r0, #0
    1044:	moveq	r3, #716	; 0x2cc
    1048:	streq	r3, [r4, #16]
    104c:	beq	101c <h_hdl_invite+0x1c>
    1050:	mov	r0, r7
    1054:	mov	r1, r6
    1058:	bl	9d4 <allow_message>
    105c:	cmp	r0, #0
    1060:	bne	101c <h_hdl_invite+0x1c>
    1064:	ldr	r2, [pc, #92]	; 10c8 <h_hdl_invite+0xc8>
    1068:	ldr	r1, [r6, #56]	; 0x38
    106c:	add	r3, r6, #88	; 0x58
    1070:	ldr	r2, [r5, r2]
    1074:	ldr	r2, [r2, #412]	; 0x19c
    1078:	bics	r2, r2, r1
    107c:	beq	10b8 <h_hdl_invite+0xb8>
    1080:	ldr	r2, [pc, #68]	; 10cc <h_hdl_invite+0xcc>
    1084:	add	r2, pc, r2
    1088:	ldr	r5, [pc, #64]	; 10d0 <h_hdl_invite+0xd0>
    108c:	str	r2, [sp]
    1090:	ldr	r2, [pc, #60]	; 10d4 <h_hdl_invite+0xd4>
    1094:	add	r5, pc, r5
    1098:	mov	r0, r5
    109c:	add	r2, pc, r2
    10a0:	mov	r1, #512	; 0x200
    10a4:	bl	6c0 <snprintf@plt>
    10a8:	mov	r3, #716	; 0x2cc
    10ac:	str	r5, [r4, #28]
    10b0:	str	r3, [r4, #16]
    10b4:	b	101c <h_hdl_invite+0x1c>
    10b8:	ldr	r2, [pc, #24]	; 10d8 <h_hdl_invite+0xd8>
    10bc:	add	r2, pc, r2
    10c0:	b	1088 <h_hdl_invite+0x88>
    10c4:	.word	0x00010fe4
    10c8:	.word	0x00000054
    10cc:	.word	0x000001c0
    10d0:	.word	0x00011024
    10d4:	.word	0x000001f0
    10d8:	.word	0x00000184

Disassembly of section .fini:

000010dc <_fini>:
    10dc:	push	{r3, lr}
    10e0:	pop	{r3, pc}
