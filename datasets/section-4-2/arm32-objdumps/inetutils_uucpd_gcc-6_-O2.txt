
../repos/inetutils/src/uucpd:     file format elf32-littlearm


Disassembly of section .init:

000110e4 <.init>:
   110e4:	push	{r3, lr}
   110e8:	bl	1157c <__assert_fail@plt+0x154>
   110ec:	pop	{r3, pc}

Disassembly of section .plt:

000110f0 <fputs_unlocked@plt-0x14>:
   110f0:	push	{lr}		; (str lr, [sp, #-4]!)
   110f4:	ldr	lr, [pc, #4]	; 11100 <fputs_unlocked@plt-0x4>
   110f8:	add	lr, pc, lr
   110fc:	ldr	pc, [lr, #8]!
   11100:	andeq	r7, r1, r0, lsl #30

00011104 <fputs_unlocked@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #3840]!	; 0xf00

00011110 <getpwnam@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3832]!	; 0xef8

0001111c <strcmp@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3824]!	; 0xef0

00011128 <strtol@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3816]!	; 0xee8

00011134 <printf@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3808]!	; 0xee0

00011140 <read@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3800]!	; 0xed8

0001114c <fflush@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3792]!	; 0xed0

00011158 <memmove@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3784]!	; 0xec8

00011164 <strchrnul@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3776]!	; 0xec0

00011170 <free@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3768]!	; 0xeb8

0001117c <strndup@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3760]!	; 0xeb0

00011188 <_exit@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3752]!	; 0xea8

00011194 <memcpy@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3744]!	; 0xea0

000111a0 <time@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3736]!	; 0xe98

000111ac <fwrite_unlocked@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3728]!	; 0xe90

000111b8 <sleep@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3720]!	; 0xe88

000111c4 <alarm@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3712]!	; 0xe80

000111d0 <dup2@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3704]!	; 0xe78

000111dc <realloc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3696]!	; 0xe70

000111e8 <initgroups@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3688]!	; 0xe68

000111f4 <chdir@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3680]!	; 0xe60

00011200 <strcasecmp@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3672]!	; 0xe58

0001120c <funlockfile@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3664]!	; 0xe50

00011218 <perror@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3656]!	; 0xe48

00011224 <fwrite@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3648]!	; 0xe40

00011230 <lseek64@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3640]!	; 0xe38

0001123c <open64@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3632]!	; 0xe30

00011248 <getenv@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3624]!	; 0xe28

00011254 <setgid@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3616]!	; 0xe20

00011260 <malloc@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3608]!	; 0xe18

0001126c <__libc_start_main@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3600]!	; 0xe10

00011278 <strerror@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3592]!	; 0xe08

00011284 <__ctype_tolower_loc@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3584]!	; 0xe00

00011290 <__gmon_start__@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3576]!	; 0xdf8

0001129c <mempcpy@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3568]!	; 0xdf0

000112a8 <__ctype_b_loc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3560]!	; 0xde8

000112b4 <getpid@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3552]!	; 0xde0

000112c0 <exit@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3544]!	; 0xdd8

000112cc <strlen@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3536]!	; 0xdd0

000112d8 <strchr@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3528]!	; 0xdc8

000112e4 <fprintf@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3520]!	; 0xdc0

000112f0 <__errno_location@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3512]!	; 0xdb8

000112fc <snprintf@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3504]!	; 0xdb0

00011308 <strerror_r@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3496]!	; 0xda8

00011314 <memset@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3488]!	; 0xda0

00011320 <strncpy@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3480]!	; 0xd98

0001132c <wait3@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3472]!	; 0xd90

00011338 <write@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3464]!	; 0xd88

00011344 <memchr@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3456]!	; 0xd80

00011350 <__overflow@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3448]!	; 0xd78

0001135c <fork@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3440]!	; 0xd70

00011368 <getnameinfo@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3432]!	; 0xd68

00011374 <execl@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3424]!	; 0xd60

00011380 <strrchr@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3416]!	; 0xd58

0001138c <vfprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3408]!	; 0xd50

00011398 <crypt@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3400]!	; 0xd48

000113a4 <fputc@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3392]!	; 0xd40

000113b0 <setuid@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3384]!	; 0xd38

000113bc <sprintf@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3376]!	; 0xd30

000113c8 <flockfile@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3368]!	; 0xd28

000113d4 <vsnprintf@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3360]!	; 0xd20

000113e0 <qsort@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3352]!	; 0xd18

000113ec <getpeername@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3344]!	; 0xd10

000113f8 <strncmp@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3336]!	; 0xd08

00011404 <abort@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3328]!	; 0xd00

00011410 <logwtmp@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3320]!	; 0xcf8

0001141c <close@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3312]!	; 0xcf0

00011428 <__assert_fail@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3304]!	; 0xce8

Disassembly of section .text:

00011434 <argp_parse@@Base-0xbe4>:
   11434:	push	{r4, r5, r6, r7, lr}
   11438:	sub	sp, sp, #148	; 0x94
   1143c:	mov	r7, r0
   11440:	mov	r6, #128	; 0x80
   11444:	ldr	r0, [r1]
   11448:	mov	r5, r1
   1144c:	str	r6, [sp, #12]
   11450:	bl	12fb8 <argp_parse@@Base+0xfa0>
   11454:	ldr	r3, [pc, #188]	; 11518 <__assert_fail@plt+0xf0>
   11458:	ldr	r2, [pc, #188]	; 1151c <__assert_fail@plt+0xf4>
   1145c:	mov	r4, #0
   11460:	ldr	r1, [pc, #184]	; 11520 <__assert_fail@plt+0xf8>
   11464:	ldr	r0, [pc, #184]	; 11524 <__assert_fail@plt+0xfc>
   11468:	str	r2, [r3]
   1146c:	bl	12ddc <argp_parse@@Base+0xdc4>
   11470:	mov	r1, r7
   11474:	mov	r2, r5
   11478:	mov	r3, r4
   1147c:	str	r4, [sp, #4]
   11480:	str	r4, [sp]
   11484:	ldr	r0, [pc, #156]	; 11528 <__assert_fail@plt+0x100>
   11488:	bl	12018 <argp_parse@@Base>
   1148c:	ldr	r3, [pc, #152]	; 1152c <__assert_fail@plt+0x104>
   11490:	ldr	r2, [pc, #152]	; 11530 <__assert_fail@plt+0x108>
   11494:	mov	r1, #1
   11498:	mov	r0, r4
   1149c:	str	r2, [r3]
   114a0:	bl	111d0 <dup2@plt>
   114a4:	mov	r1, #2
   114a8:	mov	r0, r4
   114ac:	bl	111d0 <dup2@plt>
   114b0:	mov	r0, r4
   114b4:	add	r1, sp, #16
   114b8:	add	r2, sp, #12
   114bc:	str	r6, [sp, #12]
   114c0:	bl	113ec <getpeername@plt>
   114c4:	cmp	r0, r4
   114c8:	blt	114e4 <__assert_fail@plt+0xbc>
   114cc:	bl	1135c <fork@plt>
   114d0:	cmp	r0, #0
   114d4:	beq	11508 <__assert_fail@plt+0xe0>
   114d8:	bl	116f8 <__assert_fail@plt+0x2d0>
   114dc:	mov	r0, #1
   114e0:	bl	112c0 <exit@plt>
   114e4:	ldr	r3, [pc, #72]	; 11534 <__assert_fail@plt+0x10c>
   114e8:	ldr	r2, [r5]
   114ec:	ldr	r1, [pc, #68]	; 11538 <__assert_fail@plt+0x110>
   114f0:	ldr	r0, [r3]
   114f4:	bl	112e4 <fprintf@plt>
   114f8:	ldr	r0, [pc, #60]	; 1153c <__assert_fail@plt+0x114>
   114fc:	bl	11218 <perror@plt>
   11500:	mov	r0, #1
   11504:	bl	11188 <_exit@plt>
   11508:	add	r0, sp, #16
   1150c:	ldr	r1, [sp, #12]
   11510:	bl	118b0 <__assert_fail@plt+0x488>
   11514:	b	114d8 <__assert_fail@plt+0xb0>
   11518:			; <UNDEFINED> instruction: 0x000292b0
   1151c:	andeq	r7, r1, r4, ror #25
   11520:	andeq	r9, r2, r4, lsl #3
   11524:	strdeq	r7, [r1], -ip
   11528:	andeq	r9, r2, ip, lsr #2
   1152c:	andeq	r9, r2, ip, asr #3
   11530:	andeq	r9, r2, r8, asr #2
   11534:	ldrdeq	r9, [r2], -r8
   11538:	andeq	r7, r1, r4, lsl #26
   1153c:	andeq	r7, r1, ip, lsl #26
   11540:	mov	fp, #0
   11544:	mov	lr, #0
   11548:	pop	{r1}		; (ldr r1, [sp], #4)
   1154c:	mov	r2, sp
   11550:	push	{r2}		; (str r2, [sp, #-4]!)
   11554:	push	{r0}		; (str r0, [sp, #-4]!)
   11558:	ldr	ip, [pc, #16]	; 11570 <__assert_fail@plt+0x148>
   1155c:	push	{ip}		; (str ip, [sp, #-4]!)
   11560:	ldr	r0, [pc, #12]	; 11574 <__assert_fail@plt+0x14c>
   11564:	ldr	r3, [pc, #12]	; 11578 <__assert_fail@plt+0x150>
   11568:	bl	1126c <__libc_start_main@plt>
   1156c:	bl	11404 <abort@plt>
   11570:	andeq	r7, r1, r4, asr #24
   11574:	andeq	r1, r1, r4, lsr r4
   11578:	andeq	r7, r1, r4, ror #23
   1157c:	ldr	r3, [pc, #20]	; 11598 <__assert_fail@plt+0x170>
   11580:	ldr	r2, [pc, #20]	; 1159c <__assert_fail@plt+0x174>
   11584:	add	r3, pc, r3
   11588:	ldr	r2, [r3, r2]
   1158c:	cmp	r2, #0
   11590:	bxeq	lr
   11594:	b	11290 <__gmon_start__@plt>
   11598:	andeq	r7, r1, r4, ror sl
   1159c:	andeq	r0, r0, ip, lsl r1
   115a0:	ldr	r3, [pc, #28]	; 115c4 <__assert_fail@plt+0x19c>
   115a4:	ldr	r0, [pc, #28]	; 115c8 <__assert_fail@plt+0x1a0>
   115a8:	sub	r3, r3, r0
   115ac:	cmp	r3, #6
   115b0:	bxls	lr
   115b4:	ldr	r3, [pc, #16]	; 115cc <__assert_fail@plt+0x1a4>
   115b8:	cmp	r3, #0
   115bc:	bxeq	lr
   115c0:	bx	r3
   115c4:	andeq	r9, r2, r7, asr #3
   115c8:	andeq	r9, r2, r4, asr #3
   115cc:	andeq	r0, r0, r0
   115d0:	ldr	r1, [pc, #36]	; 115fc <__assert_fail@plt+0x1d4>
   115d4:	ldr	r0, [pc, #36]	; 11600 <__assert_fail@plt+0x1d8>
   115d8:	sub	r1, r1, r0
   115dc:	asr	r1, r1, #2
   115e0:	add	r1, r1, r1, lsr #31
   115e4:	asrs	r1, r1, #1
   115e8:	bxeq	lr
   115ec:	ldr	r3, [pc, #16]	; 11604 <__assert_fail@plt+0x1dc>
   115f0:	cmp	r3, #0
   115f4:	bxeq	lr
   115f8:	bx	r3
   115fc:	andeq	r9, r2, r4, asr #3
   11600:	andeq	r9, r2, r4, asr #3
   11604:	andeq	r0, r0, r0
   11608:	push	{r4, lr}
   1160c:	ldr	r4, [pc, #24]	; 1162c <__assert_fail@plt+0x204>
   11610:	ldrb	r3, [r4]
   11614:	cmp	r3, #0
   11618:	popne	{r4, pc}
   1161c:	bl	115a0 <__assert_fail@plt+0x178>
   11620:	mov	r3, #1
   11624:	strb	r3, [r4]
   11628:	pop	{r4, pc}
   1162c:	andeq	r9, r2, r0, ror #3
   11630:	ldr	r0, [pc, #40]	; 11660 <__assert_fail@plt+0x238>
   11634:	ldr	r3, [r0]
   11638:	cmp	r3, #0
   1163c:	bne	11644 <__assert_fail@plt+0x21c>
   11640:	b	115d0 <__assert_fail@plt+0x1a8>
   11644:	ldr	r3, [pc, #24]	; 11664 <__assert_fail@plt+0x23c>
   11648:	cmp	r3, #0
   1164c:	beq	11640 <__assert_fail@plt+0x218>
   11650:	push	{r4, lr}
   11654:	blx	r3
   11658:	pop	{r4, lr}
   1165c:	b	115d0 <__assert_fail@plt+0x1a8>
   11660:	andeq	r8, r2, r4, lsl #30
   11664:	andeq	r0, r0, r0
   11668:	cmp	r0, #117	; 0x75
   1166c:	moveq	r0, #0
   11670:	ldreq	r3, [pc, #8]	; 11680 <__assert_fail@plt+0x258>
   11674:	movne	r0, #7
   11678:	streq	r1, [r3]
   1167c:	bx	lr
   11680:	andeq	r9, r2, r8, lsr #2
   11684:	push	{r4, r5, r6, r7, lr}
   11688:	mov	r4, r0
   1168c:	sub	sp, sp, #12
   11690:	add	r7, r0, #64	; 0x40
   11694:	mov	r6, #1
   11698:	mov	r5, #0
   1169c:	b	116c4 <__assert_fail@plt+0x29c>
   116a0:	ldrb	r3, [sp, #7]
   116a4:	and	r3, r3, #127	; 0x7f
   116a8:	cmp	r3, #13
   116ac:	cmpne	r3, #10
   116b0:	strb	r3, [sp, #7]
   116b4:	beq	116e8 <__assert_fail@plt+0x2c0>
   116b8:	strb	r3, [r4], #1
   116bc:	cmp	r4, r7
   116c0:	beq	116dc <__assert_fail@plt+0x2b4>
   116c4:	mov	r2, r6
   116c8:	add	r1, sp, #7
   116cc:	mov	r0, r5
   116d0:	bl	11140 <read@plt>
   116d4:	cmp	r0, #0
   116d8:	bgt	116a0 <__assert_fail@plt+0x278>
   116dc:	mvn	r0, #0
   116e0:	add	sp, sp, #12
   116e4:	pop	{r4, r5, r6, r7, pc}
   116e8:	mov	r0, #0
   116ec:	strb	r0, [r4]
   116f0:	add	sp, sp, #12
   116f4:	pop	{r4, r5, r6, r7, pc}
   116f8:	push	{r4, r5, r6, r7, lr}
   116fc:	mov	r6, #0
   11700:	sub	sp, sp, #108	; 0x6c
   11704:	mov	r5, #1
   11708:	ldr	r4, [pc, #64]	; 11750 <__assert_fail@plt+0x328>
   1170c:	ldr	r7, [pc, #64]	; 11754 <__assert_fail@plt+0x32c>
   11710:	b	11728 <__assert_fail@plt+0x300>
   11714:	bl	113bc <sprintf@plt>
   11718:	mov	r2, r7
   1171c:	ldr	r1, [pc, #48]	; 11754 <__assert_fail@plt+0x32c>
   11720:	add	r0, sp, #4
   11724:	bl	11410 <logwtmp@plt>
   11728:	mov	r2, r6
   1172c:	mov	r1, r5
   11730:	mov	r0, #0
   11734:	bl	1132c <wait3@plt>
   11738:	mov	r1, r4
   1173c:	subs	r2, r0, #0
   11740:	add	r0, sp, #4
   11744:	bgt	11714 <__assert_fail@plt+0x2ec>
   11748:	add	sp, sp, #108	; 0x6c
   1174c:	pop	{r4, r5, r6, r7, pc}
   11750:	andeq	r7, r1, r4, asr ip
   11754:	andeq	r8, r1, ip, asr r8
   11758:	push	{r4, r5, r6, r7, lr}
   1175c:	sub	sp, sp, #2368	; 0x940
   11760:	sub	sp, sp, #12
   11764:	add	r3, sp, #1344	; 0x540
   11768:	add	r3, r3, #8
   1176c:	mov	r4, #0
   11770:	sub	r3, r3, #4
   11774:	mov	r5, r1
   11778:	mov	r7, r2
   1177c:	str	r3, [sp, #16]
   11780:	mov	r2, r3
   11784:	mov	r6, r0
   11788:	mov	r1, r7
   1178c:	mov	r0, r5
   11790:	str	r4, [sp, #8]
   11794:	str	r4, [sp, #4]
   11798:	str	r4, [sp]
   1179c:	ldr	r3, [pc, #256]	; 118a4 <__assert_fail@plt+0x47c>
   117a0:	bl	11368 <getnameinfo@plt>
   117a4:	cmp	r0, r4
   117a8:	bne	1187c <__assert_fail@plt+0x454>
   117ac:	bl	112b4 <getpid@plt>
   117b0:	add	r3, sp, #320	; 0x140
   117b4:	ldr	r1, [pc, #236]	; 118a8 <__assert_fail@plt+0x480>
   117b8:	str	r3, [sp, #20]
   117bc:	mov	r2, r0
   117c0:	mov	r0, r3
   117c4:	bl	113bc <sprintf@plt>
   117c8:	ldr	r2, [sp, #16]
   117cc:	ldr	r0, [sp, #20]
   117d0:	ldr	r1, [r6]
   117d4:	bl	11410 <logwtmp@plt>
   117d8:	mov	r1, #2
   117dc:	ldr	r0, [pc, #200]	; 118ac <__assert_fail@plt+0x484>
   117e0:	bl	1123c <open64@plt>
   117e4:	subs	r5, r0, #0
   117e8:	blt	11870 <__assert_fail@plt+0x448>
   117ec:	add	r0, sp, #24
   117f0:	bl	111a0 <time@plt>
   117f4:	ldr	r2, [r6, #8]
   117f8:	mov	r6, #292	; 0x124
   117fc:	mov	r4, #0
   11800:	ldr	r1, [sp, #24]
   11804:	mov	r3, r4
   11808:	mul	r2, r6, r2
   1180c:	str	r4, [sp]
   11810:	mov	r0, r5
   11814:	str	r1, [sp, #28]
   11818:	bl	11230 <lseek64@plt>
   1181c:	mov	r2, #1024	; 0x400
   11820:	ldr	r1, [sp, #16]
   11824:	ldr	r0, [sp, #20]
   11828:	bl	11320 <strncpy@plt>
   1182c:	ldr	r1, [sp, #20]
   11830:	mov	r2, #31
   11834:	add	r0, sp, #32
   11838:	strb	r4, [sp, #1344]	; 0x540
   1183c:	bl	11320 <strncpy@plt>
   11840:	ldr	r1, [sp, #16]
   11844:	mov	r2, #255	; 0xff
   11848:	add	r0, sp, #64	; 0x40
   1184c:	strb	r4, [sp, #63]	; 0x3f
   11850:	bl	11320 <strncpy@plt>
   11854:	add	r1, sp, #28
   11858:	mov	r2, r6
   1185c:	mov	r0, r5
   11860:	strb	r4, [sp, #319]	; 0x13f
   11864:	bl	11338 <write@plt>
   11868:	mov	r0, r5
   1186c:	bl	1141c <close@plt>
   11870:	add	sp, sp, #2368	; 0x940
   11874:	add	sp, sp, #12
   11878:	pop	{r4, r5, r6, r7, pc}
   1187c:	mov	r3, #1
   11880:	str	r3, [sp, #8]
   11884:	str	r4, [sp, #4]
   11888:	str	r4, [sp]
   1188c:	mov	r1, r7
   11890:	mov	r0, r5
   11894:	add	r3, r3, #1024	; 0x400
   11898:	ldr	r2, [sp, #16]
   1189c:	bl	11368 <getnameinfo@plt>
   118a0:	b	117ac <__assert_fail@plt+0x384>
   118a4:	andeq	r0, r0, r1, lsl #8
   118a8:	andeq	r7, r1, r4, asr ip
   118ac:	andeq	r7, r1, r0, ror #24
   118b0:	push	{r4, r5, r6, r7, r8, lr}
   118b4:	mov	r6, r0
   118b8:	ldr	r5, [pc, #448]	; 11a80 <__assert_fail@plt+0x658>
   118bc:	sub	sp, sp, #128	; 0x80
   118c0:	mov	r0, #60	; 0x3c
   118c4:	mov	r7, r1
   118c8:	bl	111c4 <alarm@plt>
   118cc:	ldr	r0, [pc, #432]	; 11a84 <__assert_fail@plt+0x65c>
   118d0:	bl	11134 <printf@plt>
   118d4:	ldr	r0, [r5]
   118d8:	bl	1114c <fflush@plt>
   118dc:	mov	r0, sp
   118e0:	bl	11684 <__assert_fail@plt+0x25c>
   118e4:	cmp	r0, #0
   118e8:	blt	119dc <__assert_fail@plt+0x5b4>
   118ec:	mov	r3, #0
   118f0:	mov	r0, sp
   118f4:	strb	r3, [sp, #63]	; 0x3f
   118f8:	bl	11110 <getpwnam@plt>
   118fc:	subs	r4, r0, #0
   11900:	beq	11a3c <__assert_fail@plt+0x614>
   11904:	ldr	r3, [r4, #4]
   11908:	cmp	r3, #0
   1190c:	beq	1191c <__assert_fail@plt+0x4f4>
   11910:	ldrb	r3, [r3]
   11914:	cmp	r3, #0
   11918:	bne	119fc <__assert_fail@plt+0x5d4>
   1191c:	ldr	r5, [pc, #356]	; 11a88 <__assert_fail@plt+0x660>
   11920:	ldr	r0, [r4, #24]
   11924:	ldr	r1, [r5]
   11928:	bl	1111c <strcmp@plt>
   1192c:	subs	r8, r0, #0
   11930:	beq	11954 <__assert_fail@plt+0x52c>
   11934:	ldr	r3, [pc, #336]	; 11a8c <__assert_fail@plt+0x664>
   11938:	mov	r2, #16
   1193c:	mov	r1, #1
   11940:	ldr	r3, [r3]
   11944:	ldr	r0, [pc, #324]	; 11a90 <__assert_fail@plt+0x668>
   11948:	bl	11224 <fwrite@plt>
   1194c:	add	sp, sp, #128	; 0x80
   11950:	pop	{r4, r5, r6, r7, r8, pc}
   11954:	bl	111c4 <alarm@plt>
   11958:	mov	r3, sp
   1195c:	ldr	r2, [pc, #304]	; 11a94 <__assert_fail@plt+0x66c>
   11960:	mov	r1, #72	; 0x48
   11964:	ldr	r0, [pc, #300]	; 11a98 <__assert_fail@plt+0x670>
   11968:	bl	112fc <snprintf@plt>
   1196c:	mov	r3, sp
   11970:	ldr	r2, [pc, #292]	; 11a9c <__assert_fail@plt+0x674>
   11974:	mov	r1, #72	; 0x48
   11978:	ldr	r0, [pc, #288]	; 11aa0 <__assert_fail@plt+0x678>
   1197c:	bl	112fc <snprintf@plt>
   11980:	mov	r2, r7
   11984:	mov	r1, r6
   11988:	mov	r0, r4
   1198c:	bl	11758 <__assert_fail@plt+0x330>
   11990:	ldr	r0, [r4, #12]
   11994:	bl	11254 <setgid@plt>
   11998:	ldr	r1, [r4, #12]
   1199c:	ldr	r0, [r4]
   119a0:	bl	111e8 <initgroups@plt>
   119a4:	ldr	r0, [r4, #20]
   119a8:	bl	111f4 <chdir@plt>
   119ac:	cmp	r0, #0
   119b0:	blt	11934 <__assert_fail@plt+0x50c>
   119b4:	ldr	r0, [r4, #8]
   119b8:	bl	113b0 <setuid@plt>
   119bc:	mov	r2, r8
   119c0:	ldr	r1, [pc, #220]	; 11aa4 <__assert_fail@plt+0x67c>
   119c4:	ldr	r0, [r5]
   119c8:	bl	11374 <execl@plt>
   119cc:	ldr	r0, [pc, #212]	; 11aa8 <__assert_fail@plt+0x680>
   119d0:	bl	11218 <perror@plt>
   119d4:	add	sp, sp, #128	; 0x80
   119d8:	pop	{r4, r5, r6, r7, r8, pc}
   119dc:	ldr	r3, [pc, #168]	; 11a8c <__assert_fail@plt+0x664>
   119e0:	mov	r2, #10
   119e4:	mov	r1, #1
   119e8:	ldr	r3, [r3]
   119ec:	ldr	r0, [pc, #184]	; 11aac <__assert_fail@plt+0x684>
   119f0:	bl	11224 <fwrite@plt>
   119f4:	add	sp, sp, #128	; 0x80
   119f8:	pop	{r4, r5, r6, r7, r8, pc}
   119fc:	ldr	r0, [pc, #172]	; 11ab0 <__assert_fail@plt+0x688>
   11a00:	bl	11134 <printf@plt>
   11a04:	ldr	r0, [r5]
   11a08:	bl	1114c <fflush@plt>
   11a0c:	add	r0, sp, #64	; 0x40
   11a10:	bl	11684 <__assert_fail@plt+0x25c>
   11a14:	cmp	r0, #0
   11a18:	blt	11a78 <__assert_fail@plt+0x650>
   11a1c:	ldr	r1, [r4, #4]
   11a20:	add	r0, sp, #64	; 0x40
   11a24:	bl	11398 <crypt@plt>
   11a28:	ldr	r1, [r4, #4]
   11a2c:	bl	1111c <strcmp@plt>
   11a30:	cmp	r0, #0
   11a34:	beq	1191c <__assert_fail@plt+0x4f4>
   11a38:	b	11934 <__assert_fail@plt+0x50c>
   11a3c:	ldr	r0, [pc, #108]	; 11ab0 <__assert_fail@plt+0x688>
   11a40:	bl	11134 <printf@plt>
   11a44:	ldr	r0, [r5]
   11a48:	bl	1114c <fflush@plt>
   11a4c:	add	r0, sp, #64	; 0x40
   11a50:	bl	11684 <__assert_fail@plt+0x25c>
   11a54:	ldr	r3, [pc, #48]	; 11a8c <__assert_fail@plt+0x664>
   11a58:	cmp	r0, #0
   11a5c:	bge	11938 <__assert_fail@plt+0x510>
   11a60:	mov	r2, #12
   11a64:	mov	r1, #1
   11a68:	ldr	r3, [r3]
   11a6c:	ldr	r0, [pc, #64]	; 11ab4 <__assert_fail@plt+0x68c>
   11a70:	bl	11224 <fwrite@plt>
   11a74:	b	1194c <__assert_fail@plt+0x524>
   11a78:	ldr	r3, [pc, #12]	; 11a8c <__assert_fail@plt+0x664>
   11a7c:	b	11a60 <__assert_fail@plt+0x638>
   11a80:	ldrdeq	r9, [r2], -ip
   11a84:	andeq	r7, r1, r4, ror ip
   11a88:	andeq	r9, r2, r8, lsr #2
   11a8c:	ldrdeq	r9, [r2], -r8
   11a90:	andeq	r7, r1, r4, lsr #25
   11a94:			; <UNDEFINED> instruction: 0x00017cb8
   11a98:	andeq	r9, r2, r8, ror #4
   11a9c:	andeq	r7, r1, r0, asr #25
   11aa0:	andeq	r9, r2, ip, lsl r2
   11aa4:	andeq	r7, r1, ip, lsl #27
   11aa8:	andeq	r7, r1, ip, asr #25
   11aac:	andeq	r7, r1, ip, ror ip
   11ab0:	andeq	r7, r1, r8, lsl #25
   11ab4:	muleq	r1, r4, ip
   11ab8:	ldr	r3, [r0]
   11abc:	push	{r4, r5, r6, lr}
   11ac0:	cmp	r3, #0
   11ac4:	ldr	r5, [r0, #16]
   11ac8:	beq	11b30 <__assert_fail@plt+0x708>
   11acc:	ldr	r0, [r1, #8]
   11ad0:	mov	r2, #0
   11ad4:	add	r0, r0, #1
   11ad8:	str	r0, [r1, #8]
   11adc:	b	11ae4 <__assert_fail@plt+0x6bc>
   11ae0:	add	r2, r2, #1
   11ae4:	add	r3, r3, #24
   11ae8:	ldr	r0, [r3, #-20]	; 0xffffffec
   11aec:	cmp	r0, #0
   11af0:	bne	11ae0 <__assert_fail@plt+0x6b8>
   11af4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11af8:	cmp	r0, #0
   11afc:	bne	11ae0 <__assert_fail@plt+0x6b8>
   11b00:	ldr	r0, [r3, #-8]
   11b04:	cmp	r0, #0
   11b08:	bne	11ae0 <__assert_fail@plt+0x6b8>
   11b0c:	ldr	r0, [r3, #-4]
   11b10:	cmp	r0, #0
   11b14:	bne	11ae0 <__assert_fail@plt+0x6b8>
   11b18:	ldm	r1, {r0, r3}
   11b1c:	add	ip, r2, r2, lsl #1
   11b20:	add	r0, r0, ip
   11b24:	add	r2, r3, r2
   11b28:	stm	r1, {r0, r2}
   11b2c:	b	11b44 <__assert_fail@plt+0x71c>
   11b30:	ldr	r3, [r0, #4]
   11b34:	cmp	r3, #0
   11b38:	ldrne	r3, [r1, #8]
   11b3c:	addne	r3, r3, #1
   11b40:	strne	r3, [r1, #8]
   11b44:	cmp	r5, #0
   11b48:	popeq	{r4, r5, r6, pc}
   11b4c:	ldr	r0, [r5]
   11b50:	cmp	r0, #0
   11b54:	popeq	{r4, r5, r6, pc}
   11b58:	mov	r4, r1
   11b5c:	mov	r1, r4
   11b60:	bl	11ab8 <__assert_fail@plt+0x690>
   11b64:	ldr	r3, [r4, #12]
   11b68:	ldr	r0, [r5, #16]!
   11b6c:	add	r3, r3, #1
   11b70:	cmp	r0, #0
   11b74:	str	r3, [r4, #12]
   11b78:	bne	11b5c <__assert_fail@plt+0x734>
   11b7c:	pop	{r4, r5, r6, pc}
   11b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b84:	sub	sp, sp, #36	; 0x24
   11b88:	ldr	sl, [r0]
   11b8c:	str	r0, [sp, #12]
   11b90:	cmp	sl, #0
   11b94:	str	r1, [sp, #16]
   11b98:	str	r2, [sp, #20]
   11b9c:	mov	r9, r3
   11ba0:	ldr	r8, [r0, #16]
   11ba4:	ldr	r7, [sp, #72]	; 0x48
   11ba8:	beq	11d74 <__assert_fail@plt+0x94c>
   11bac:	add	fp, sl, #24
   11bb0:	str	r8, [sp, #28]
   11bb4:	str	r3, [sp, #24]
   11bb8:	ldr	r4, [fp, #-20]	; 0xffffffec
   11bbc:	sub	r1, fp, #24
   11bc0:	cmp	r4, #0
   11bc4:	bne	11bd4 <__assert_fail@plt+0x7ac>
   11bc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bcc:	cmp	r3, #0
   11bd0:	beq	11d48 <__assert_fail@plt+0x920>
   11bd4:	ldr	r3, [fp, #-12]
   11bd8:	tst	r3, #4
   11bdc:	moveq	sl, r1
   11be0:	moveq	r5, r3
   11be4:	ldrne	r5, [sl, #12]
   11be8:	ands	r5, r5, #8
   11bec:	bne	11d30 <__assert_fail@plt+0x908>
   11bf0:	tst	r3, #8
   11bf4:	bne	11c70 <__assert_fail@plt+0x848>
   11bf8:	sub	r3, r4, #1
   11bfc:	cmp	r3, #254	; 0xfe
   11c00:	bhi	11c70 <__assert_fail@plt+0x848>
   11c04:	bl	112a8 <__ctype_b_loc@plt>
   11c08:	lsl	r3, r4, #1
   11c0c:	ldr	r1, [r0]
   11c10:	ldrh	r3, [r1, r3]
   11c14:	tst	r3, #16384	; 0x4000
   11c18:	beq	11c70 <__assert_fail@plt+0x848>
   11c1c:	ldr	r3, [r7, #4]
   11c20:	add	r1, r3, #1
   11c24:	str	r1, [r7, #4]
   11c28:	strb	r4, [r3]
   11c2c:	ldr	r3, [sl, #8]
   11c30:	cmp	r3, #0
   11c34:	beq	11c64 <__assert_fail@plt+0x83c>
   11c38:	ldr	r3, [r7, #4]
   11c3c:	mov	r2, #58	; 0x3a
   11c40:	add	r1, r3, #1
   11c44:	str	r1, [r7, #4]
   11c48:	strb	r2, [r3]
   11c4c:	ldr	r3, [sl, #12]
   11c50:	tst	r3, #1
   11c54:	ldrne	r3, [r7, #4]
   11c58:	addne	r1, r3, #1
   11c5c:	strne	r1, [r7, #4]
   11c60:	strbne	r2, [r3]
   11c64:	ldr	r3, [r7, #4]
   11c68:	mov	r2, #0
   11c6c:	strb	r2, [r3]
   11c70:	ldr	r4, [fp, #-24]	; 0xffffffe8
   11c74:	cmp	r4, #0
   11c78:	beq	11d30 <__assert_fail@plt+0x908>
   11c7c:	ldr	r8, [r7]
   11c80:	ldr	r6, [r8, #8]
   11c84:	ldr	r0, [r6]
   11c88:	cmp	r0, #0
   11c8c:	beq	11cb0 <__assert_fail@plt+0x888>
   11c90:	mov	r9, r6
   11c94:	mov	r1, r4
   11c98:	bl	1111c <strcmp@plt>
   11c9c:	cmp	r0, #0
   11ca0:	beq	11d38 <__assert_fail@plt+0x910>
   11ca4:	ldr	r0, [r9, #16]!
   11ca8:	cmp	r0, #0
   11cac:	bne	11c94 <__assert_fail@plt+0x86c>
   11cb0:	ldr	r3, [sl, #8]
   11cb4:	ldr	r1, [r7, #8]
   11cb8:	cmp	r3, #0
   11cbc:	str	r4, [r1]
   11cc0:	beq	11cd4 <__assert_fail@plt+0x8ac>
   11cc4:	ldr	r3, [sl, #12]
   11cc8:	tst	r3, #1
   11ccc:	moveq	r5, #1
   11cd0:	movne	r5, #2
   11cd4:	str	r5, [r1, #4]
   11cd8:	ldr	ip, [fp, #-20]	; 0xffffffec
   11cdc:	mov	r3, #0
   11ce0:	cmp	ip, r3
   11ce4:	str	r3, [r1, #8]
   11ce8:	ldr	r2, [sp, #24]
   11cec:	ldr	r3, [r8, #48]	; 0x30
   11cf0:	ldreq	ip, [sl, #4]
   11cf4:	sub	r3, r2, r3
   11cf8:	bic	ip, ip, #-16777216	; 0xff000000
   11cfc:	asr	r3, r3, #2
   11d00:	add	lr, r1, #16
   11d04:	rsb	r0, r3, r3, lsl #3
   11d08:	add	r0, r0, r0, lsl #6
   11d0c:	add	r0, r3, r0, lsl #3
   11d10:	rsb	r0, r0, r0, lsl #15
   11d14:	add	r3, r3, r0, lsl #3
   11d18:	add	r3, r3, #1
   11d1c:	add	r3, ip, r3, lsl #24
   11d20:	str	r3, [r1, #12]
   11d24:	mov	r3, #0
   11d28:	str	lr, [r7, #8]
   11d2c:	str	r3, [r1, #16]
   11d30:	add	fp, fp, #24
   11d34:	b	11bb8 <__assert_fail@plt+0x790>
   11d38:	sub	r6, r9, r6
   11d3c:	cmn	r6, #15
   11d40:	bge	11d30 <__assert_fail@plt+0x908>
   11d44:	b	11cb0 <__assert_fail@plt+0x888>
   11d48:	ldr	r3, [fp, #-8]
   11d4c:	cmp	r3, #0
   11d50:	bne	11bd4 <__assert_fail@plt+0x7ac>
   11d54:	ldr	r3, [fp, #-4]
   11d58:	cmp	r3, #0
   11d5c:	bne	11bd4 <__assert_fail@plt+0x7ac>
   11d60:	ldr	r3, [sp, #12]
   11d64:	ldr	r8, [sp, #28]
   11d68:	ldr	r9, [sp, #24]
   11d6c:	ldr	r3, [r3, #4]
   11d70:	b	11d8c <__assert_fail@plt+0x964>
   11d74:	ldr	r3, [sp, #12]
   11d78:	ldr	r3, [r3, #4]
   11d7c:	cmp	r3, #0
   11d80:	moveq	r0, r9
   11d84:	moveq	r9, r3
   11d88:	beq	11dfc <__assert_fail@plt+0x9d4>
   11d8c:	ldr	r2, [r7, #4]
   11d90:	ldr	r1, [sp, #12]
   11d94:	str	r3, [r9]
   11d98:	cmp	r8, #0
   11d9c:	stmib	r9, {r1, r2}
   11da0:	ldr	r2, [sp, #16]
   11da4:	mov	r3, #0
   11da8:	str	r2, [r9, #16]
   11dac:	ldr	r2, [sp, #20]
   11db0:	str	r3, [r9, #12]
   11db4:	str	r2, [r9, #20]
   11db8:	str	r3, [r9, #24]
   11dbc:	str	r3, [r9, #32]
   11dc0:	str	r3, [r9, #28]
   11dc4:	beq	11df8 <__assert_fail@plt+0x9d0>
   11dc8:	ldr	r2, [r8]
   11dcc:	cmp	r2, r3
   11dd0:	beq	11e44 <__assert_fail@plt+0xa1c>
   11dd4:	add	r3, r3, #1
   11dd8:	ldr	r2, [r8, r3, lsl #4]
   11ddc:	cmp	r2, #0
   11de0:	bne	11dd4 <__assert_fail@plt+0x9ac>
   11de4:	lsl	r3, r3, #2
   11de8:	ldr	r2, [r7, #12]
   11dec:	add	r3, r2, r3
   11df0:	str	r2, [r9, #28]
   11df4:	str	r3, [r7, #12]
   11df8:	add	r0, r9, #36	; 0x24
   11dfc:	cmp	r8, #0
   11e00:	beq	11e3c <__assert_fail@plt+0xa14>
   11e04:	ldr	r1, [r8]
   11e08:	cmp	r1, #0
   11e0c:	beq	11e3c <__assert_fail@plt+0xa14>
   11e10:	mov	r2, #0
   11e14:	add	r4, r2, #1
   11e18:	mov	r3, r0
   11e1c:	str	r7, [sp]
   11e20:	mov	r0, r1
   11e24:	mov	r1, r9
   11e28:	bl	11b80 <__assert_fail@plt+0x758>
   11e2c:	ldr	r1, [r8, r4, lsl #4]
   11e30:	mov	r2, r4
   11e34:	cmp	r1, #0
   11e38:	bne	11e14 <__assert_fail@plt+0x9ec>
   11e3c:	add	sp, sp, #36	; 0x24
   11e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e44:	mov	r3, r2
   11e48:	b	11de8 <__assert_fail@plt+0x9c0>
   11e4c:	cmp	r0, #86	; 0x56
   11e50:	beq	11e5c <__assert_fail@plt+0xa34>
   11e54:	mov	r0, #7
   11e58:	bx	lr
   11e5c:	ldr	r3, [pc, #104]	; 11ecc <__assert_fail@plt+0xaa4>
   11e60:	push	{r4, lr}
   11e64:	mov	r4, r2
   11e68:	ldr	r3, [r3]
   11e6c:	cmp	r3, #0
   11e70:	beq	11e94 <__assert_fail@plt+0xa6c>
   11e74:	mov	r1, r2
   11e78:	ldr	r0, [r2, #48]	; 0x30
   11e7c:	blx	r3
   11e80:	ldr	r0, [r4, #16]
   11e84:	ands	r0, r0, #32
   11e88:	beq	11ec8 <__assert_fail@plt+0xaa0>
   11e8c:	mov	r0, #0
   11e90:	pop	{r4, pc}
   11e94:	ldr	r3, [pc, #52]	; 11ed0 <__assert_fail@plt+0xaa8>
   11e98:	ldr	r2, [r3]
   11e9c:	cmp	r2, #0
   11ea0:	beq	11eb4 <__assert_fail@plt+0xa8c>
   11ea4:	ldr	r1, [pc, #40]	; 11ed4 <__assert_fail@plt+0xaac>
   11ea8:	ldr	r0, [r4, #48]	; 0x30
   11eac:	bl	112e4 <fprintf@plt>
   11eb0:	b	11e80 <__assert_fail@plt+0xa58>
   11eb4:	ldr	r2, [pc, #28]	; 11ed8 <__assert_fail@plt+0xab0>
   11eb8:	ldr	r1, [pc, #28]	; 11edc <__assert_fail@plt+0xab4>
   11ebc:	mov	r0, r4
   11ec0:	bl	16688 <argp_error@@Base>
   11ec4:	b	11e80 <__assert_fail@plt+0xa58>
   11ec8:	bl	112c0 <exit@plt>
   11ecc:	andeq	r9, r2, r8, ror #3
   11ed0:			; <UNDEFINED> instruction: 0x000292b4
   11ed4:	andeq	r8, r1, r8, asr r0
   11ed8:			; <UNDEFINED> instruction: 0x00017ebc
   11edc:	andeq	r7, r1, r8, asr #25
   11ee0:	cmn	r0, #3
   11ee4:	push	{r4, r5, lr}
   11ee8:	mov	r4, r2
   11eec:	sub	sp, sp, #12
   11ef0:	beq	11fd4 <__assert_fail@plt+0xbac>
   11ef4:	ble	11f64 <__assert_fail@plt+0xb3c>
   11ef8:	cmn	r0, #2
   11efc:	beq	11f24 <__assert_fail@plt+0xafc>
   11f00:	cmp	r0, #63	; 0x3f
   11f04:	bne	11fc8 <__assert_fail@plt+0xba0>
   11f08:	mov	r0, r4
   11f0c:	ldr	r2, [pc, #236]	; 12000 <__assert_fail@plt+0xbd8>
   11f10:	ldr	r1, [r4, #48]	; 0x30
   11f14:	bl	165d8 <argp_state_help@@Base>
   11f18:	mov	r0, #0
   11f1c:	add	sp, sp, #12
   11f20:	pop	{r4, r5, pc}
   11f24:	ldr	r3, [pc, #216]	; 12004 <__assert_fail@plt+0xbdc>
   11f28:	mov	r0, r1
   11f2c:	str	r1, [sp, #4]
   11f30:	str	r1, [r3]
   11f34:	bl	12e04 <argp_parse@@Base+0xdec>
   11f38:	ldr	r3, [r4, #16]
   11f3c:	ldr	r2, [pc, #196]	; 12008 <__assert_fail@plt+0xbe0>
   11f40:	and	r3, r3, #3
   11f44:	cmp	r3, #1
   11f48:	ldr	r1, [sp, #4]
   11f4c:	str	r0, [r4, #40]	; 0x28
   11f50:	str	r0, [r2]
   11f54:	beq	11ff0 <__assert_fail@plt+0xbc8>
   11f58:	mov	r0, #0
   11f5c:	add	sp, sp, #12
   11f60:	pop	{r4, r5, pc}
   11f64:	cmn	r0, #4
   11f68:	bne	11fc8 <__assert_fail@plt+0xba0>
   11f6c:	cmp	r1, #0
   11f70:	ldr	r0, [pc, #148]	; 1200c <__assert_fail@plt+0xbe4>
   11f74:	mov	r2, #10
   11f78:	movne	r0, r1
   11f7c:	mov	r1, #0
   11f80:	bl	11128 <strtol@plt>
   11f84:	ldr	r4, [pc, #132]	; 12010 <__assert_fail@plt+0xbe8>
   11f88:	str	r0, [r4]
   11f8c:	ldr	r3, [r4]
   11f90:	cmp	r3, #0
   11f94:	sub	r3, r3, #1
   11f98:	str	r3, [r4]
   11f9c:	ble	11f58 <__assert_fail@plt+0xb30>
   11fa0:	mov	r5, #1
   11fa4:	mov	r0, r5
   11fa8:	bl	111b8 <sleep@plt>
   11fac:	ldr	r3, [r4]
   11fb0:	cmp	r3, #0
   11fb4:	sub	r3, r3, #1
   11fb8:	str	r3, [r4]
   11fbc:	bgt	11fa4 <__assert_fail@plt+0xb7c>
   11fc0:	mov	r0, #0
   11fc4:	b	11f5c <__assert_fail@plt+0xb34>
   11fc8:	mov	r0, #7
   11fcc:	add	sp, sp, #12
   11fd0:	pop	{r4, r5, pc}
   11fd4:	mov	r0, r4
   11fd8:	ldr	r2, [pc, #52]	; 12014 <__assert_fail@plt+0xbec>
   11fdc:	ldr	r1, [r4, #48]	; 0x30
   11fe0:	bl	165d8 <argp_state_help@@Base>
   11fe4:	mov	r0, #0
   11fe8:	add	sp, sp, #12
   11fec:	pop	{r4, r5, pc}
   11ff0:	ldr	r3, [r4, #8]
   11ff4:	mov	r0, #0
   11ff8:	str	r1, [r3]
   11ffc:	b	11f1c <__assert_fail@plt+0xaf4>
   12000:	andeq	r0, r0, sl, ror r2
   12004:	ldrdeq	r9, [r2], -r0
   12008:	andeq	r9, r2, r8, asr #3
   1200c:	andeq	r7, r1, r0, ror #29
   12010:	andeq	r9, r2, r4, ror #3
   12014:	andeq	r0, r0, r1, lsl #4

00012018 <argp_parse@@Base>:
   12018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1201c:	add	fp, sp, #32
   12020:	tst	r3, #1
   12024:	sub	sp, sp, #228	; 0xe4
   12028:	mov	r6, r3
   1202c:	mov	r7, r0
   12030:	str	r1, [fp, #-240]	; 0xffffff10
   12034:	str	r2, [fp, #-232]	; 0xffffff18
   12038:	bne	12064 <argp_parse@@Base+0x4c>
   1203c:	ldr	r3, [pc, #3260]	; 12d00 <argp_parse@@Base+0xce8>
   12040:	ldr	r4, [pc, #3260]	; 12d04 <argp_parse@@Base+0xcec>
   12044:	ldr	r2, [r3]
   12048:	cmp	r2, #0
   1204c:	ldreq	r2, [fp, #-232]	; 0xffffff18
   12050:	ldreq	r2, [r2]
   12054:	streq	r2, [r3]
   12058:	ldr	r3, [r4]
   1205c:	cmp	r3, #0
   12060:	beq	12704 <argp_parse@@Base+0x6ec>
   12064:	ands	r3, r6, #16
   12068:	beq	1260c <argp_parse@@Base+0x5f4>
   1206c:	sub	r4, fp, #196	; 0xc4
   12070:	mov	r0, r4
   12074:	mov	r2, #36	; 0x24
   12078:	mov	r1, #0
   1207c:	bl	11314 <memset@plt>
   12080:	ands	r3, r6, #4
   12084:	str	r3, [fp, #-244]	; 0xffffff0c
   12088:	mov	r3, #0
   1208c:	moveq	r0, #1
   12090:	movne	r0, #0
   12094:	cmp	r7, r3
   12098:	str	r3, [fp, #-224]	; 0xffffff20
   1209c:	str	r3, [fp, #-220]	; 0xffffff24
   120a0:	str	r3, [fp, #-216]	; 0xffffff28
   120a4:	str	r0, [fp, #-228]	; 0xffffff1c
   120a8:	beq	12510 <argp_parse@@Base+0x4f8>
   120ac:	mov	r0, r7
   120b0:	sub	r1, fp, #228	; 0xe4
   120b4:	bl	11ab8 <__assert_fail@plt+0x690>
   120b8:	ldr	r5, [fp, #-220]	; 0xffffff24
   120bc:	ldr	r9, [fp, #-216]	; 0xffffff28
   120c0:	add	r5, r5, #1
   120c4:	ldr	r3, [fp, #-224]	; 0xffffff20
   120c8:	add	r5, r5, r5, lsl #3
   120cc:	lsl	r2, r9, #2
   120d0:	lsl	r5, r5, #2
   120d4:	add	r3, r3, #1
   120d8:	add	sl, r2, r5
   120dc:	ldr	r0, [fp, #-228]	; 0xffffff1c
   120e0:	add	r9, sl, r3, lsl #4
   120e4:	str	r2, [fp, #-236]	; 0xffffff14
   120e8:	add	r0, r9, r0
   120ec:	add	r0, r0, #1
   120f0:	bl	13460 <argp_parse@@Base+0x1448>
   120f4:	cmp	r0, #0
   120f8:	mov	r8, r0
   120fc:	str	r0, [fp, #-40]	; 0xffffffd8
   12100:	moveq	r5, #12
   12104:	beq	12504 <argp_parse@@Base+0x4ec>
   12108:	mov	r3, #1
   1210c:	str	r3, [fp, #-196]	; 0xffffff3c
   12110:	str	r3, [fp, #-192]	; 0xffffff40
   12114:	ldm	r4!, {r0, r1, r2, r3}
   12118:	sub	ip, fp, #148	; 0x94
   1211c:	add	r5, r8, r5
   12120:	str	r5, [fp, #-104]	; 0xffffff98
   12124:	stmia	ip!, {r0, r1, r2, r3}
   12128:	add	r3, r8, sl
   1212c:	mov	lr, r3
   12130:	ldm	r4!, {r0, r1, r2, r3}
   12134:	add	sl, r8, r9
   12138:	str	lr, [fp, #-248]	; 0xffffff08
   1213c:	str	lr, [fp, #-152]	; 0xffffff68
   12140:	ldr	lr, [r4]
   12144:	stmia	ip!, {r0, r1, r2, r3}
   12148:	mov	r0, r5
   1214c:	ldr	r2, [fp, #-236]	; 0xffffff14
   12150:	mov	r1, #0
   12154:	str	lr, [ip]
   12158:	str	r8, [fp, #-112]	; 0xffffff90
   1215c:	str	sl, [fp, #-156]	; 0xffffff64
   12160:	bl	11314 <memset@plt>
   12164:	ldr	lr, [fp, #-248]	; 0xffffff08
   12168:	sub	r4, fp, #160	; 0xa0
   1216c:	tst	r6, #8
   12170:	str	lr, [fp, #-204]	; 0xffffff34
   12174:	str	sl, [fp, #-208]	; 0xffffff30
   12178:	str	r5, [fp, #-200]	; 0xffffff38
   1217c:	str	r4, [fp, #-212]	; 0xffffff2c
   12180:	bne	12524 <argp_parse@@Base+0x50c>
   12184:	ldr	r3, [fp, #-244]	; 0xffffff0c
   12188:	cmp	r3, #0
   1218c:	addne	r3, sl, #1
   12190:	movne	r2, #43	; 0x2b
   12194:	strbne	r2, [sl]
   12198:	movne	sl, r3
   1219c:	strne	r3, [fp, #-208]	; 0xffffff30
   121a0:	mov	r2, #0
   121a4:	strb	r2, [sl]
   121a8:	ldr	r3, [fp, #-204]	; 0xffffff34
   121ac:	cmp	r7, r2
   121b0:	str	r2, [r3]
   121b4:	str	r7, [fp, #-160]	; 0xffffff60
   121b8:	beq	126cc <argp_parse@@Base+0x6b4>
   121bc:	sub	r1, fp, #212	; 0xd4
   121c0:	mov	r0, r7
   121c4:	str	r1, [sp]
   121c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   121cc:	mov	r1, r2
   121d0:	bl	11b80 <__assert_fail@plt+0x758>
   121d4:	ldr	r7, [fp, #-160]	; 0xffffff60
   121d8:	ldr	r5, [fp, #-112]	; 0xffffff90
   121dc:	mov	r8, r0
   121e0:	str	r0, [fp, #-108]	; 0xffffff94
   121e4:	mov	r2, #56	; 0x38
   121e8:	mov	r1, #0
   121ec:	sub	r0, fp, #96	; 0x60
   121f0:	bl	11314 <memset@plt>
   121f4:	ldr	r2, [pc, #2828]	; 12d08 <argp_parse@@Base+0xcf0>
   121f8:	ldr	r3, [pc, #2828]	; 12d0c <argp_parse@@Base+0xcf4>
   121fc:	ldr	r0, [fp, #-240]	; 0xffffff10
   12200:	ldr	r1, [r2]
   12204:	str	r0, [fp, #-92]	; 0xffffffa4
   12208:	ldr	r2, [r3]
   1220c:	ldr	r0, [fp, #-232]	; 0xffffff18
   12210:	mov	r3, #1
   12214:	cmp	r5, r8
   12218:	str	r7, [fp, #-96]	; 0xffffffa0
   1221c:	str	r0, [fp, #-88]	; 0xffffffa8
   12220:	str	r6, [fp, #-80]	; 0xffffffb0
   12224:	str	r4, [fp, #-44]	; 0xffffffd4
   12228:	str	r1, [fp, #-52]	; 0xffffffcc
   1222c:	str	r2, [fp, #-48]	; 0xffffffd0
   12230:	str	r3, [fp, #-100]	; 0xffffff9c
   12234:	bcc	12538 <argp_parse@@Base+0x520>
   12238:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1223c:	tst	r3, #2
   12240:	bne	126dc <argp_parse@@Base+0x6c4>
   12244:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12248:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1224c:	mov	r2, #1
   12250:	str	r2, [fp, #-144]	; 0xffffff70
   12254:	ldr	r2, [fp, #-232]	; 0xffffff18
   12258:	cmp	r2, r3
   1225c:	beq	12bdc <argp_parse@@Base+0xbc4>
   12260:	ldr	r3, [pc, #2716]	; 12d04 <argp_parse@@Base+0xcec>
   12264:	ldr	r3, [r3]
   12268:	str	r3, [fp, #-56]	; 0xffffffc8
   1226c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12270:	ldr	r5, [fp, #-84]	; 0xffffffac
   12274:	ldr	sl, [pc, #2708]	; 12d10 <argp_parse@@Base+0xcf8>
   12278:	mov	r0, r4
   1227c:	mov	r6, #0
   12280:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12284:	cmp	r3, #0
   12288:	beq	12718 <argp_parse@@Base+0x700>
   1228c:	cmp	r3, r5
   12290:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12294:	bgt	12718 <argp_parse@@Base+0x700>
   12298:	cmp	r5, r0
   1229c:	blt	12ab4 <argp_parse@@Base+0xa9c>
   122a0:	cmp	r5, r0
   122a4:	bne	12ac0 <argp_parse@@Base+0xaa8>
   122a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   122ac:	ldr	ip, [fp, #-108]	; 0xffffff94
   122b0:	cmp	r3, ip
   122b4:	bcs	12ca4 <argp_parse@@Base+0xc8c>
   122b8:	mov	r5, #0
   122bc:	add	r4, r3, #36	; 0x24
   122c0:	mov	r7, r5
   122c4:	ldr	r6, [pc, #2632]	; 12d14 <argp_parse@@Base+0xcfc>
   122c8:	mov	r0, r5
   122cc:	b	12314 <argp_parse@@Base+0x2fc>
   122d0:	ldr	ip, [r4, #-4]
   122d4:	str	ip, [fp, #-60]	; 0xffffffc4
   122d8:	ldr	ip, [r4, #-12]
   122dc:	str	ip, [fp, #-68]	; 0xffffffbc
   122e0:	ldr	ip, [r4, #-8]
   122e4:	str	r3, [fp, #-76]	; 0xffffffb4
   122e8:	str	ip, [fp, #-64]	; 0xffffffc0
   122ec:	blx	r5
   122f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   122f4:	str	r3, [r4, #-4]
   122f8:	ldr	ip, [fp, #-108]	; 0xffffff94
   122fc:	cmp	ip, r4
   12300:	bls	12c4c <argp_parse@@Base+0xc34>
   12304:	cmp	r0, #7
   12308:	cmpne	r0, #0
   1230c:	bne	12c28 <argp_parse@@Base+0xc10>
   12310:	add	r4, r4, #36	; 0x24
   12314:	ldr	r3, [r4, #-24]	; 0xffffffe8
   12318:	cmp	r3, #0
   1231c:	bne	122fc <argp_parse@@Base+0x2e4>
   12320:	ldr	r5, [r4, #-36]	; 0xffffffdc
   12324:	sub	r2, fp, #96	; 0x60
   12328:	cmp	r5, #0
   1232c:	mov	r1, r7
   12330:	mov	r0, r6
   12334:	bne	122d0 <argp_parse@@Base+0x2b8>
   12338:	cmp	ip, r4
   1233c:	mov	r0, #7
   12340:	bhi	12310 <argp_parse@@Base+0x2f8>
   12344:	ldr	r3, [fp, #-112]	; 0xffffff90
   12348:	sub	r4, ip, #36	; 0x24
   1234c:	cmp	r4, r3
   12350:	movcs	r5, #7
   12354:	bcc	123dc <argp_parse@@Base+0x3c4>
   12358:	cmp	r5, #7
   1235c:	cmpne	r5, #0
   12360:	bne	12c3c <argp_parse@@Base+0xc24>
   12364:	sub	r4, r4, #36	; 0x24
   12368:	mov	r7, #0
   1236c:	ldr	r6, [pc, #2468]	; 12d18 <argp_parse@@Base+0xd00>
   12370:	b	123bc <argp_parse@@Base+0x3a4>
   12374:	ldr	r3, [r4, #68]	; 0x44
   12378:	ldr	ip, [r4, #48]	; 0x30
   1237c:	str	r3, [fp, #-60]	; 0xffffffc4
   12380:	ldr	r3, [r4, #60]	; 0x3c
   12384:	str	r3, [fp, #-68]	; 0xffffffbc
   12388:	ldr	r3, [r4, #64]	; 0x40
   1238c:	str	ip, [fp, #-76]	; 0xffffffb4
   12390:	str	r3, [fp, #-64]	; 0xffffffc0
   12394:	blx	r5
   12398:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1239c:	str	r3, [r4, #68]	; 0x44
   123a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   123a4:	cmp	r4, r3
   123a8:	bcc	12c9c <argp_parse@@Base+0xc84>
   123ac:	cmp	r0, #7
   123b0:	cmpne	r0, #0
   123b4:	bne	12c0c <argp_parse@@Base+0xbf4>
   123b8:	sub	r4, r4, #36	; 0x24
   123bc:	ldr	r5, [r4, #36]	; 0x24
   123c0:	sub	r2, fp, #96	; 0x60
   123c4:	cmp	r5, #0
   123c8:	mov	r1, r7
   123cc:	mov	r0, r6
   123d0:	bne	12374 <argp_parse@@Base+0x35c>
   123d4:	cmp	r4, r3
   123d8:	bcs	123b8 <argp_parse@@Base+0x3a0>
   123dc:	ldr	r2, [fp, #4]
   123e0:	cmp	r2, #0
   123e4:	beq	12400 <argp_parse@@Base+0x3e8>
   123e8:	mov	r5, #0
   123ec:	ldr	r1, [fp, #4]
   123f0:	ldr	r2, [fp, #-84]	; 0xffffffac
   123f4:	str	r2, [r1]
   123f8:	cmp	r5, #0
   123fc:	bne	12c1c <argp_parse@@Base+0xc04>
   12400:	ldr	ip, [fp, #-108]	; 0xffffff94
   12404:	b	12ad8 <argp_parse@@Base+0xac0>
   12408:	ldr	r3, [fp, #-112]	; 0xffffff90
   1240c:	mov	r5, r0
   12410:	ldr	ip, [fp, #-108]	; 0xffffff94
   12414:	cmp	ip, r3
   12418:	bls	12bd4 <argp_parse@@Base+0xbbc>
   1241c:	ldr	r7, [pc, #2296]	; 12d1c <argp_parse@@Base+0xd04>
   12420:	add	r4, r3, #36	; 0x24
   12424:	mov	r8, #0
   12428:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1242c:	sub	r2, fp, #96	; 0x60
   12430:	cmp	r3, #0
   12434:	mov	r1, r8
   12438:	mov	r0, r7
   1243c:	mov	r6, r4
   12440:	beq	12474 <argp_parse@@Base+0x45c>
   12444:	ldr	ip, [r4, #-4]
   12448:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1244c:	str	ip, [fp, #-60]	; 0xffffffc4
   12450:	ldr	ip, [r4, #-12]
   12454:	str	ip, [fp, #-68]	; 0xffffffbc
   12458:	ldr	ip, [r4, #-8]
   1245c:	str	lr, [fp, #-76]	; 0xffffffb4
   12460:	str	ip, [fp, #-64]	; 0xffffffc0
   12464:	blx	r3
   12468:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1246c:	str	r3, [r4, #-4]
   12470:	ldr	ip, [fp, #-108]	; 0xffffff94
   12474:	cmp	ip, r6
   12478:	add	r4, r4, #36	; 0x24
   1247c:	bhi	12428 <argp_parse@@Base+0x410>
   12480:	ldr	r3, [fp, #-112]	; 0xffffff90
   12484:	sub	ip, ip, #36	; 0x24
   12488:	cmp	r3, ip
   1248c:	bhi	124f4 <argp_parse@@Base+0x4dc>
   12490:	ldr	r8, [pc, #2184]	; 12d20 <argp_parse@@Base+0xd08>
   12494:	sub	r4, ip, #36	; 0x24
   12498:	mov	r9, #0
   1249c:	ldr	r6, [r4, #36]	; 0x24
   124a0:	sub	r2, fp, #96	; 0x60
   124a4:	cmp	r6, #0
   124a8:	mov	r1, r9
   124ac:	mov	r0, r8
   124b0:	mov	r7, r4
   124b4:	beq	124e8 <argp_parse@@Base+0x4d0>
   124b8:	ldr	r3, [r4, #68]	; 0x44
   124bc:	ldr	ip, [r4, #48]	; 0x30
   124c0:	str	r3, [fp, #-60]	; 0xffffffc4
   124c4:	ldr	r3, [r4, #60]	; 0x3c
   124c8:	str	r3, [fp, #-68]	; 0xffffffbc
   124cc:	ldr	r3, [r4, #64]	; 0x40
   124d0:	str	ip, [fp, #-76]	; 0xffffffb4
   124d4:	str	r3, [fp, #-64]	; 0xffffffc0
   124d8:	blx	r6
   124dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   124e0:	str	r3, [r4, #68]	; 0x44
   124e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   124e8:	cmp	r3, r7
   124ec:	sub	r4, r4, #36	; 0x24
   124f0:	bls	1249c <argp_parse@@Base+0x484>
   124f4:	cmp	r5, #7
   124f8:	moveq	r5, #22
   124fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12500:	bl	12eb0 <argp_parse@@Base+0xe98>
   12504:	mov	r0, r5
   12508:	sub	sp, fp, #32
   1250c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12510:	mov	sl, #36	; 0x24
   12514:	mov	r5, sl
   12518:	mov	r9, #52	; 0x34
   1251c:	str	r7, [fp, #-236]	; 0xffffff14
   12520:	b	120e8 <argp_parse@@Base+0xd0>
   12524:	add	sl, sl, #1
   12528:	mov	r3, #45	; 0x2d
   1252c:	str	sl, [fp, #-208]	; 0xffffff30
   12530:	strb	r3, [r8, r9]
   12534:	b	121a0 <argp_parse@@Base+0x188>
   12538:	ldr	r3, [fp, #8]
   1253c:	add	r4, r5, #36	; 0x24
   12540:	str	r3, [r5, #24]
   12544:	mov	r7, #0
   12548:	ldr	r6, [pc, #2004]	; 12d24 <argp_parse@@Base+0xd0c>
   1254c:	b	125a4 <argp_parse@@Base+0x58c>
   12550:	ldr	r2, [r4, #-4]
   12554:	ldr	r0, [r4, #-24]	; 0xffffffe8
   12558:	str	r2, [fp, #-60]	; 0xffffffc4
   1255c:	ldr	r1, [r4, #-12]
   12560:	sub	r2, fp, #96	; 0x60
   12564:	str	r1, [fp, #-68]	; 0xffffffbc
   12568:	ldr	ip, [r4, #-8]
   1256c:	mov	r1, r7
   12570:	str	r0, [fp, #-76]	; 0xffffffb4
   12574:	str	ip, [fp, #-64]	; 0xffffffc0
   12578:	mov	r0, r6
   1257c:	blx	r3
   12580:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12584:	str	r3, [r4, #-4]
   12588:	ldr	r3, [fp, #-108]	; 0xffffff94
   1258c:	cmp	r3, r4
   12590:	bls	12cc0 <argp_parse@@Base+0xca8>
   12594:	cmp	r0, #7
   12598:	cmpne	r0, #0
   1259c:	bne	126bc <argp_parse@@Base+0x6a4>
   125a0:	add	r4, r4, #36	; 0x24
   125a4:	ldr	r3, [r4, #-20]	; 0xffffffec
   125a8:	cmp	r3, #0
   125ac:	ldrne	r3, [r3, #28]
   125b0:	ldrne	r2, [r4, #-16]
   125b4:	ldrne	r3, [r3, r2, lsl #2]
   125b8:	strne	r3, [r4, #-12]
   125bc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   125c0:	cmp	r3, #0
   125c4:	bne	12550 <argp_parse@@Base+0x538>
   125c8:	ldr	r3, [r4, #-32]	; 0xffffffe0
   125cc:	ldr	r3, [r3, #16]
   125d0:	cmp	r3, #0
   125d4:	beq	125fc <argp_parse@@Base+0x5e4>
   125d8:	ldr	r3, [r3]
   125dc:	cmp	r3, #0
   125e0:	beq	125fc <argp_parse@@Base+0x5e4>
   125e4:	ldr	r3, [r4, #-8]
   125e8:	ldr	r2, [r4, #-12]
   125ec:	str	r2, [r3]
   125f0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   125f4:	cmp	r3, #0
   125f8:	bne	12550 <argp_parse@@Base+0x538>
   125fc:	ldr	r3, [fp, #-108]	; 0xffffff94
   12600:	cmp	r3, r4
   12604:	bhi	125a0 <argp_parse@@Base+0x588>
   12608:	b	12238 <argp_parse@@Base+0x220>
   1260c:	sub	sp, sp, #72	; 0x48
   12610:	add	r4, sp, #8
   12614:	sub	sp, sp, #40	; 0x28
   12618:	add	r5, sp, #8
   1261c:	mov	r1, r3
   12620:	mov	r0, r4
   12624:	mov	r2, #64	; 0x40
   12628:	str	r3, [r5]
   1262c:	str	r3, [r5, #4]
   12630:	str	r3, [r5, #8]
   12634:	str	r3, [r5, #12]
   12638:	str	r3, [r5, #20]
   1263c:	str	r3, [r5, #24]
   12640:	str	r4, [r5, #16]
   12644:	bl	11314 <memset@plt>
   12648:	ldr	r3, [pc, #1752]	; 12d28 <argp_parse@@Base+0xd10>
   1264c:	cmp	r7, #0
   12650:	strne	r7, [r4]
   12654:	ldr	r3, [r3]
   12658:	addne	r4, r4, #16
   1265c:	ldr	r2, [pc, #1736]	; 12d2c <argp_parse@@Base+0xd14>
   12660:	cmp	r3, #0
   12664:	str	r2, [r4]
   12668:	beq	12bf4 <argp_parse@@Base+0xbdc>
   1266c:	ldr	r2, [pc, #1724]	; 12d30 <argp_parse@@Base+0xd18>
   12670:	add	r3, r4, #32
   12674:	str	r2, [r4, #16]
   12678:	mov	r8, #0
   1267c:	sub	r4, fp, #196	; 0xc4
   12680:	str	r8, [r3]
   12684:	mov	r1, r8
   12688:	mov	r0, r4
   1268c:	mov	r2, #36	; 0x24
   12690:	bl	11314 <memset@plt>
   12694:	ands	r3, r6, #4
   12698:	str	r3, [fp, #-244]	; 0xffffff0c
   1269c:	moveq	r3, #1
   126a0:	movne	r3, r8
   126a4:	mov	r7, r5
   126a8:	str	r8, [fp, #-224]	; 0xffffff20
   126ac:	str	r8, [fp, #-220]	; 0xffffff24
   126b0:	str	r8, [fp, #-216]	; 0xffffff28
   126b4:	str	r3, [fp, #-228]	; 0xffffff1c
   126b8:	b	120ac <argp_parse@@Base+0x94>
   126bc:	mov	r5, r0
   126c0:	mov	r0, r5
   126c4:	sub	sp, fp, #32
   126c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126cc:	ldr	r5, [fp, #-112]	; 0xffffff90
   126d0:	mov	r8, r5
   126d4:	str	r5, [fp, #-108]	; 0xffffff94
   126d8:	b	121e4 <argp_parse@@Base+0x1cc>
   126dc:	tst	r3, #1
   126e0:	mov	r3, #0
   126e4:	str	r3, [fp, #-144]	; 0xffffff70
   126e8:	ldr	r4, [fp, #-92]	; 0xffffffa4
   126ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   126f0:	subne	r3, r3, #4
   126f4:	addne	r4, r4, #1
   126f8:	strne	r3, [fp, #-88]	; 0xffffffa8
   126fc:	strne	r4, [fp, #-92]	; 0xffffffa4
   12700:	b	12254 <argp_parse@@Base+0x23c>
   12704:	ldr	r3, [fp, #-232]	; 0xffffff18
   12708:	ldr	r0, [r3]
   1270c:	bl	12e04 <argp_parse@@Base+0xdec>
   12710:	str	r0, [r4]
   12714:	b	12064 <argp_parse@@Base+0x4c>
   12718:	cmp	r2, #0
   1271c:	beq	12298 <argp_parse@@Base+0x280>
   12720:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12724:	str	r5, [fp, #-148]	; 0xffffff6c
   12728:	ands	ip, r3, #64	; 0x40
   1272c:	mvn	r3, #0
   12730:	str	r3, [fp, #-140]	; 0xffffff74
   12734:	ldr	r2, [fp, #-156]	; 0xffffff64
   12738:	ldr	r3, [fp, #-152]	; 0xffffff68
   1273c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12740:	beq	12a60 <argp_parse@@Base+0xa48>
   12744:	sub	ip, fp, #148	; 0x94
   12748:	stm	sp, {r6, ip}
   1274c:	bl	12f84 <argp_parse@@Base+0xf6c>
   12750:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12754:	str	r5, [fp, #-84]	; 0xffffffac
   12758:	mov	r7, r0
   1275c:	cmn	r7, #1
   12760:	beq	12a80 <argp_parse@@Base+0xa68>
   12764:	cmp	r7, #63	; 0x3f
   12768:	beq	12b84 <argp_parse@@Base+0xb6c>
   1276c:	cmp	r7, #1
   12770:	beq	128c8 <argp_parse@@Base+0x8b0>
   12774:	asrs	r8, r7, #24
   12778:	bne	12824 <argp_parse@@Base+0x80c>
   1277c:	mov	r1, r7
   12780:	ldr	r0, [fp, #-156]	; 0xffffff64
   12784:	bl	112d8 <strchr@plt>
   12788:	cmp	r0, #0
   1278c:	beq	12894 <argp_parse@@Base+0x87c>
   12790:	ldr	r4, [fp, #-112]	; 0xffffff90
   12794:	ldr	r2, [fp, #-108]	; 0xffffff94
   12798:	cmp	r4, r2
   1279c:	bcc	127b0 <argp_parse@@Base+0x798>
   127a0:	b	12894 <argp_parse@@Base+0x87c>
   127a4:	add	r4, r4, #36	; 0x24
   127a8:	cmp	r4, r2
   127ac:	bcs	12894 <argp_parse@@Base+0x87c>
   127b0:	ldr	r3, [r4, #8]
   127b4:	cmp	r0, r3
   127b8:	bcs	127a4 <argp_parse@@Base+0x78c>
   127bc:	ldr	r3, [r4]
   127c0:	cmp	r3, #0
   127c4:	beq	12894 <argp_parse@@Base+0x87c>
   127c8:	ldr	r2, [r4, #32]
   127cc:	ldr	r0, [r4, #28]
   127d0:	ldr	ip, [r4, #24]
   127d4:	str	r2, [fp, #-60]	; 0xffffffc4
   127d8:	ldr	r2, [r4, #12]
   127dc:	ldr	r1, [fp, #-136]	; 0xffffff78
   127e0:	str	r0, [fp, #-64]	; 0xffffffc0
   127e4:	str	r2, [fp, #-76]	; 0xffffffb4
   127e8:	str	ip, [fp, #-68]	; 0xffffffbc
   127ec:	sub	r2, fp, #96	; 0x60
   127f0:	mov	r0, r7
   127f4:	blx	r3
   127f8:	mov	r8, r6
   127fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12800:	str	r3, [r4, #32]
   12804:	cmp	r0, #7
   12808:	beq	1288c <argp_parse@@Base+0x874>
   1280c:	cmp	r0, #0
   12810:	bne	12408 <argp_parse@@Base+0x3f0>
   12814:	ldr	r2, [fp, #-100]	; 0xffffff9c
   12818:	ldr	r5, [fp, #-84]	; 0xffffffac
   1281c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12820:	b	12280 <argp_parse@@Base+0x268>
   12824:	add	r3, r8, r8, lsl #3
   12828:	ldr	r2, [fp, #-112]	; 0xffffff90
   1282c:	lsl	r3, r3, #2
   12830:	sub	r3, r3, #36	; 0x24
   12834:	add	r4, r2, r3
   12838:	ldr	r5, [r2, r3]
   1283c:	ands	r3, r7, #8388608	; 0x800000
   12840:	movne	r3, #-16777216	; 0xff000000
   12844:	cmp	r5, #0
   12848:	beq	12a18 <argp_parse@@Base+0xa00>
   1284c:	ldr	r0, [r4, #32]
   12850:	ldr	r2, [r4, #24]
   12854:	str	r0, [fp, #-60]	; 0xffffffc4
   12858:	ldr	r0, [r4, #28]
   1285c:	str	r2, [fp, #-68]	; 0xffffffbc
   12860:	ldr	r2, [r4, #12]
   12864:	str	r0, [fp, #-64]	; 0xffffffc0
   12868:	bic	r0, r7, #-16777216	; 0xff000000
   1286c:	str	r2, [fp, #-76]	; 0xffffffb4
   12870:	orr	r0, r0, r3
   12874:	ldr	r1, [fp, #-136]	; 0xffffff78
   12878:	sub	r2, fp, #96	; 0x60
   1287c:	blx	r5
   12880:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12884:	str	r3, [r4, #32]
   12888:	b	12804 <argp_parse@@Base+0x7ec>
   1288c:	cmp	r8, #0
   12890:	bne	12a18 <argp_parse@@Base+0xa00>
   12894:	mov	r2, r7
   12898:	ldr	r3, [pc, #1172]	; 12d34 <argp_parse@@Base+0xd1c>
   1289c:	ldr	r1, [pc, #1172]	; 12d38 <argp_parse@@Base+0xd20>
   128a0:	sub	r0, fp, #96	; 0x60
   128a4:	bl	16688 <argp_error@@Base>
   128a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   128ac:	mov	r2, #260	; 0x104
   128b0:	sub	r0, fp, #96	; 0x60
   128b4:	bl	165d8 <argp_state_help@@Base>
   128b8:	mov	r5, #7
   128bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   128c0:	ldr	ip, [fp, #-108]	; 0xffffff94
   128c4:	b	12414 <argp_parse@@Base+0x3fc>
   128c8:	ldr	r7, [fp, #-136]	; 0xffffff78
   128cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   128d0:	ldr	ip, [fp, #-108]	; 0xffffff94
   128d4:	sub	r8, r5, #1
   128d8:	cmp	r3, ip
   128dc:	str	r8, [fp, #-84]	; 0xffffffac
   128e0:	bcs	12a0c <argp_parse@@Base+0x9f4>
   128e4:	mov	lr, r8
   128e8:	add	r4, r3, #36	; 0x24
   128ec:	ldr	r3, [r4, #-36]	; 0xffffffdc
   128f0:	add	r5, lr, #1
   128f4:	cmp	r3, #0
   128f8:	str	r5, [fp, #-84]	; 0xffffffac
   128fc:	sub	r2, fp, #96	; 0x60
   12900:	mov	r1, r7
   12904:	mov	r0, r6
   12908:	sub	r5, r4, #36	; 0x24
   1290c:	mov	r9, r4
   12910:	streq	lr, [fp, #-84]	; 0xffffffac
   12914:	beq	12a00 <argp_parse@@Base+0x9e8>
   12918:	ldr	ip, [r4, #-4]
   1291c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   12920:	str	ip, [fp, #-60]	; 0xffffffc4
   12924:	ldr	ip, [r4, #-12]
   12928:	str	ip, [fp, #-68]	; 0xffffffbc
   1292c:	ldr	ip, [r4, #-8]
   12930:	str	lr, [fp, #-76]	; 0xffffffb4
   12934:	str	ip, [fp, #-64]	; 0xffffffc0
   12938:	blx	r3
   1293c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12940:	str	r3, [r4, #-4]
   12944:	cmp	r0, #7
   12948:	beq	12984 <argp_parse@@Base+0x96c>
   1294c:	cmp	r0, #0
   12950:	bne	12408 <argp_parse@@Base+0x3f0>
   12954:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12958:	ldr	r5, [fp, #-84]	; 0xffffffac
   1295c:	cmp	r8, r5
   12960:	sublt	r8, r5, r8
   12964:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   12968:	movge	r3, #1
   1296c:	addlt	r8, r3, r8
   12970:	strlt	r8, [r4, #-24]	; 0xffffffe8
   12974:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   12978:	strge	r3, [fp, #-100]	; 0xffffff9c
   1297c:	movge	r2, r3
   12980:	b	12280 <argp_parse@@Base+0x268>
   12984:	ldr	lr, [fp, #-84]	; 0xffffffac
   12988:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1298c:	sub	lr, lr, #1
   12990:	cmp	r3, #0
   12994:	str	lr, [fp, #-84]	; 0xffffffac
   12998:	beq	129fc <argp_parse@@Base+0x9e4>
   1299c:	add	r0, r5, #24
   129a0:	ldr	r2, [r5, #12]
   129a4:	ldm	r0, {r0, r1, ip}
   129a8:	str	r2, [fp, #-76]	; 0xffffffb4
   129ac:	sub	r2, fp, #96	; 0x60
   129b0:	str	ip, [fp, #-60]	; 0xffffffc4
   129b4:	str	r0, [fp, #-68]	; 0xffffffbc
   129b8:	str	r1, [fp, #-64]	; 0xffffffc0
   129bc:	mov	r0, sl
   129c0:	mov	r1, r6
   129c4:	blx	r3
   129c8:	ldr	ip, [fp, #-108]	; 0xffffff94
   129cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   129d0:	cmp	r4, ip
   129d4:	movcs	r1, #0
   129d8:	movcc	r1, #1
   129dc:	mov	r3, r4
   129e0:	str	r2, [r5, #32]
   129e4:	cmp	r0, #7
   129e8:	movne	r1, #0
   129ec:	cmp	r1, #0
   129f0:	beq	12cd8 <argp_parse@@Base+0xcc0>
   129f4:	ldr	lr, [fp, #-84]	; 0xffffffac
   129f8:	b	128e8 <argp_parse@@Base+0x8d0>
   129fc:	ldr	ip, [fp, #-108]	; 0xffffff94
   12a00:	cmp	r9, ip
   12a04:	add	r4, r4, #36	; 0x24
   12a08:	bcc	128ec <argp_parse@@Base+0x8d4>
   12a0c:	ldr	r5, [fp, #-84]	; 0xffffffac
   12a10:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12a14:	b	122a0 <argp_parse@@Base+0x288>
   12a18:	ldr	r3, [fp, #-152]	; 0xffffff68
   12a1c:	ldr	r2, [r3, #12]
   12a20:	cmp	r2, r7
   12a24:	bne	12a3c <argp_parse@@Base+0xa24>
   12a28:	b	12b70 <argp_parse@@Base+0xb58>
   12a2c:	add	r3, r3, #16
   12a30:	ldr	r2, [r3, #12]
   12a34:	cmp	r2, r7
   12a38:	beq	12b70 <argp_parse@@Base+0xb58>
   12a3c:	ldr	r2, [r3]
   12a40:	cmp	r2, #0
   12a44:	bne	12a2c <argp_parse@@Base+0xa14>
   12a48:	ldr	r2, [pc, #748]	; 12d3c <argp_parse@@Base+0xd24>
   12a4c:	ldr	r3, [pc, #736]	; 12d34 <argp_parse@@Base+0xd1c>
   12a50:	ldr	r1, [pc, #744]	; 12d40 <argp_parse@@Base+0xd28>
   12a54:	sub	r0, fp, #96	; 0x60
   12a58:	bl	16688 <argp_error@@Base>
   12a5c:	b	128a8 <argp_parse@@Base+0x890>
   12a60:	sub	lr, fp, #148	; 0x94
   12a64:	stm	sp, {ip, lr}
   12a68:	bl	12f30 <argp_parse@@Base+0xf18>
   12a6c:	ldr	r5, [fp, #-148]	; 0xffffff6c
   12a70:	str	r5, [fp, #-84]	; 0xffffffac
   12a74:	mov	r7, r0
   12a78:	cmn	r7, #1
   12a7c:	bne	12764 <argp_parse@@Base+0x74c>
   12a80:	cmp	r5, #1
   12a84:	str	r6, [fp, #-100]	; 0xffffff9c
   12a88:	ble	12aa8 <argp_parse@@Base+0xa90>
   12a8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a90:	sub	r3, r5, #-1073741823	; 0xc0000001
   12a94:	ldr	r1, [pc, #680]	; 12d44 <argp_parse@@Base+0xd2c>
   12a98:	ldr	r0, [r2, r3, lsl #2]
   12a9c:	bl	1111c <strcmp@plt>
   12aa0:	cmp	r0, #0
   12aa4:	streq	r5, [fp, #-72]	; 0xffffffb8
   12aa8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12aac:	cmp	r5, r0
   12ab0:	bge	122a0 <argp_parse@@Base+0x288>
   12ab4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12ab8:	tst	r3, #4
   12abc:	beq	12b94 <argp_parse@@Base+0xb7c>
   12ac0:	ldr	r3, [fp, #4]
   12ac4:	cmp	r3, #0
   12ac8:	beq	12c6c <argp_parse@@Base+0xc54>
   12acc:	str	r5, [r3]
   12ad0:	ldr	ip, [fp, #-108]	; 0xffffff94
   12ad4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ad8:	sub	r2, ip, #36	; 0x24
   12adc:	cmp	r3, r2
   12ae0:	bhi	12bc8 <argp_parse@@Base+0xbb0>
   12ae4:	ldr	r6, [pc, #604]	; 12d48 <argp_parse@@Base+0xd30>
   12ae8:	sub	r4, ip, #72	; 0x48
   12aec:	mov	r7, #0
   12af0:	ldr	r5, [r4, #36]	; 0x24
   12af4:	sub	r2, fp, #96	; 0x60
   12af8:	cmp	r5, #0
   12afc:	mov	r1, r7
   12b00:	mov	r0, r6
   12b04:	beq	12b60 <argp_parse@@Base+0xb48>
   12b08:	ldr	r3, [r4, #68]	; 0x44
   12b0c:	ldr	ip, [r4, #48]	; 0x30
   12b10:	str	r3, [fp, #-60]	; 0xffffffc4
   12b14:	ldr	r3, [r4, #60]	; 0x3c
   12b18:	str	r3, [fp, #-68]	; 0xffffffbc
   12b1c:	ldr	r3, [r4, #64]	; 0x40
   12b20:	str	ip, [fp, #-76]	; 0xffffffb4
   12b24:	str	r3, [fp, #-64]	; 0xffffffc0
   12b28:	blx	r5
   12b2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12b30:	str	r3, [r4, #68]	; 0x44
   12b34:	ldr	r3, [fp, #-112]	; 0xffffff90
   12b38:	cmp	r4, r3
   12b3c:	bcc	12ba8 <argp_parse@@Base+0xb90>
   12b40:	cmp	r0, #7
   12b44:	cmpne	r0, #0
   12b48:	sub	r4, r4, #36	; 0x24
   12b4c:	beq	12af0 <argp_parse@@Base+0xad8>
   12b50:	ldr	ip, [fp, #-108]	; 0xffffff94
   12b54:	mov	r5, r0
   12b58:	sub	ip, ip, #36	; 0x24
   12b5c:	b	12488 <argp_parse@@Base+0x470>
   12b60:	cmp	r4, r3
   12b64:	bcc	12bb4 <argp_parse@@Base+0xb9c>
   12b68:	sub	r4, r4, #36	; 0x24
   12b6c:	b	12af0 <argp_parse@@Base+0xad8>
   12b70:	ldr	r2, [r3]
   12b74:	ldr	r3, [pc, #448]	; 12d3c <argp_parse@@Base+0xd24>
   12b78:	cmp	r2, #0
   12b7c:	moveq	r2, r3
   12b80:	b	12a4c <argp_parse@@Base+0xa34>
   12b84:	ldr	r3, [fp, #-140]	; 0xffffff74
   12b88:	cmn	r3, #1
   12b8c:	bne	128a8 <argp_parse@@Base+0x890>
   12b90:	b	1277c <argp_parse@@Base+0x764>
   12b94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12b98:	ldr	r7, [r3, r5, lsl #2]
   12b9c:	add	r5, r5, #1
   12ba0:	str	r7, [fp, #-136]	; 0xffffff78
   12ba4:	b	128cc <argp_parse@@Base+0x8b4>
   12ba8:	cmp	r0, #7
   12bac:	mov	r5, r0
   12bb0:	bne	12bd0 <argp_parse@@Base+0xbb8>
   12bb4:	ldr	ip, [fp, #-108]	; 0xffffff94
   12bb8:	sub	ip, ip, #36	; 0x24
   12bbc:	cmp	ip, r3
   12bc0:	movcs	r5, #0
   12bc4:	bcs	12490 <argp_parse@@Base+0x478>
   12bc8:	mov	r5, #0
   12bcc:	b	124fc <argp_parse@@Base+0x4e4>
   12bd0:	ldr	ip, [fp, #-108]	; 0xffffff94
   12bd4:	sub	ip, ip, #36	; 0x24
   12bd8:	b	12488 <argp_parse@@Base+0x470>
   12bdc:	ldr	r0, [r2]
   12be0:	cmp	r0, #0
   12be4:	beq	12260 <argp_parse@@Base+0x248>
   12be8:	bl	12e04 <argp_parse@@Base+0xdec>
   12bec:	str	r0, [fp, #-56]	; 0xffffffc8
   12bf0:	b	1226c <argp_parse@@Base+0x254>
   12bf4:	ldr	r3, [pc, #336]	; 12d4c <argp_parse@@Base+0xd34>
   12bf8:	ldr	r3, [r3]
   12bfc:	cmp	r3, #0
   12c00:	addeq	r3, r4, #16
   12c04:	bne	1266c <argp_parse@@Base+0x654>
   12c08:	b	12678 <argp_parse@@Base+0x660>
   12c0c:	mov	r5, r0
   12c10:	ldr	r2, [fp, #4]
   12c14:	cmp	r2, #0
   12c18:	bne	123ec <argp_parse@@Base+0x3d4>
   12c1c:	cmp	r5, #7
   12c20:	bne	12410 <argp_parse@@Base+0x3f8>
   12c24:	b	128a8 <argp_parse@@Base+0x890>
   12c28:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c2c:	sub	ip, ip, #36	; 0x24
   12c30:	cmp	r3, ip
   12c34:	mov	r5, r0
   12c38:	bls	12c10 <argp_parse@@Base+0xbf8>
   12c3c:	ldr	r2, [fp, #4]
   12c40:	cmp	r2, #0
   12c44:	bne	123ec <argp_parse@@Base+0x3d4>
   12c48:	b	123f8 <argp_parse@@Base+0x3e0>
   12c4c:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c50:	sub	r4, ip, #36	; 0x24
   12c54:	cmp	r4, r3
   12c58:	mov	r5, r0
   12c5c:	bcs	12358 <argp_parse@@Base+0x340>
   12c60:	cmp	r5, #7
   12c64:	beq	123dc <argp_parse@@Base+0x3c4>
   12c68:	b	12c3c <argp_parse@@Base+0xc24>
   12c6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12c70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c74:	tst	r3, #2
   12c78:	bne	128ac <argp_parse@@Base+0x894>
   12c7c:	cmp	r1, #0
   12c80:	beq	128ac <argp_parse@@Base+0x894>
   12c84:	mov	r0, r1
   12c88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12c8c:	ldr	r1, [pc, #188]	; 12d50 <argp_parse@@Base+0xd38>
   12c90:	bl	112e4 <fprintf@plt>
   12c94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12c98:	b	128ac <argp_parse@@Base+0x894>
   12c9c:	mov	r5, r0
   12ca0:	b	12c60 <argp_parse@@Base+0xc48>
   12ca4:	sub	r4, ip, #36	; 0x24
   12ca8:	cmp	r3, r4
   12cac:	bls	12364 <argp_parse@@Base+0x34c>
   12cb0:	ldr	r2, [fp, #4]
   12cb4:	cmp	r2, #0
   12cb8:	bne	123e8 <argp_parse@@Base+0x3d0>
   12cbc:	b	12ad8 <argp_parse@@Base+0xac0>
   12cc0:	cmp	r0, #7
   12cc4:	mov	r5, r0
   12cc8:	beq	12238 <argp_parse@@Base+0x220>
   12ccc:	cmp	r0, #0
   12cd0:	beq	12238 <argp_parse@@Base+0x220>
   12cd4:	b	12504 <argp_parse@@Base+0x4ec>
   12cd8:	cmp	r0, #0
   12cdc:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   12ce0:	moveq	r5, r0
   12ce4:	streq	r0, [fp, #-84]	; 0xffffffac
   12ce8:	beq	1295c <argp_parse@@Base+0x944>
   12cec:	cmp	r0, #7
   12cf0:	mov	r5, r0
   12cf4:	beq	12a0c <argp_parse@@Base+0x9f4>
   12cf8:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cfc:	b	12414 <argp_parse@@Base+0x3fc>
   12d00:	ldrdeq	r9, [r2], -r0
   12d04:	andeq	r9, r2, r8, asr #3
   12d08:	ldrdeq	r9, [r2], -r8
   12d0c:	ldrdeq	r9, [r2], -ip
   12d10:	tsteq	r0, r6
   12d14:	tsteq	r0, r2
   12d18:	tsteq	r0, r1
   12d1c:	tsteq	r0, r5
   12d20:	tsteq	r0, r7
   12d24:	tsteq	r0, r3
   12d28:			; <UNDEFINED> instruction: 0x000292b4
   12d2c:	andeq	r7, r1, r4, lsr #27
   12d30:	andeq	r7, r1, r0, asr #27
   12d34:	ldrdeq	r7, [r1], -ip
   12d38:	strdeq	r7, [r1], -r0
   12d3c:	andeq	r7, r1, r8, ror #29
   12d40:	strdeq	r7, [r1], -r8
   12d44:	andeq	r7, r1, ip, ror #29
   12d48:	tsteq	r0, r4
   12d4c:	andeq	r9, r2, r8, ror #3
   12d50:	andeq	r7, r1, r4, lsl #30
   12d54:	cmp	r1, #0
   12d58:	beq	12d98 <argp_parse@@Base+0xd80>
   12d5c:	ldr	r2, [r1, #52]	; 0x34
   12d60:	ldr	r3, [r2, #48]	; 0x30
   12d64:	ldr	r1, [r2, #52]	; 0x34
   12d68:	cmp	r3, r1
   12d6c:	bcs	12d98 <argp_parse@@Base+0xd80>
   12d70:	ldr	r2, [r3, #4]
   12d74:	cmp	r0, r2
   12d78:	bne	12d8c <argp_parse@@Base+0xd74>
   12d7c:	b	12da0 <argp_parse@@Base+0xd88>
   12d80:	ldr	r2, [r3, #4]
   12d84:	cmp	r2, r0
   12d88:	beq	12da0 <argp_parse@@Base+0xd88>
   12d8c:	add	r3, r3, #36	; 0x24
   12d90:	cmp	r3, r1
   12d94:	bcc	12d80 <argp_parse@@Base+0xd68>
   12d98:	mov	r0, #0
   12d9c:	bx	lr
   12da0:	ldr	r0, [r3, #24]
   12da4:	bx	lr
   12da8:	ldr	ip, [pc, #32]	; 12dd0 <argp_parse@@Base+0xdb8>
   12dac:	push	{lr}		; (str lr, [sp, #-4]!)
   12db0:	sub	sp, sp, #12
   12db4:	ldm	ip, {r1, ip}
   12db8:	ldr	r3, [pc, #20]	; 12dd4 <argp_parse@@Base+0xdbc>
   12dbc:	ldr	r2, [pc, #20]	; 12dd8 <argp_parse@@Base+0xdc0>
   12dc0:	str	ip, [sp]
   12dc4:	bl	13314 <argp_parse@@Base+0x12fc>
   12dc8:	add	sp, sp, #12
   12dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   12dd0:	andeq	r9, r2, ip, ror #3
   12dd4:	andeq	r7, r1, ip, ror #31
   12dd8:	strdeq	r7, [r1], -ip
   12ddc:	ldr	r3, [pc, #20]	; 12df8 <argp_parse@@Base+0xde0>
   12de0:	ldr	r2, [pc, #20]	; 12dfc <argp_parse@@Base+0xde4>
   12de4:	ldr	ip, [pc, #20]	; 12e00 <argp_parse@@Base+0xde8>
   12de8:	str	r0, [r3]
   12dec:	str	ip, [r2]
   12df0:	str	r1, [r3, #4]
   12df4:	bx	lr
   12df8:	andeq	r9, r2, ip, ror #3
   12dfc:	andeq	r9, r2, r8, ror #3
   12e00:	andeq	r2, r1, r8, lsr #27
   12e04:	ldrb	r3, [r0]
   12e08:	cmp	r3, #47	; 0x2f
   12e0c:	bne	12e1c <argp_parse@@Base+0xe04>
   12e10:	ldrb	r3, [r0, #1]!
   12e14:	cmp	r3, #47	; 0x2f
   12e18:	beq	12e10 <argp_parse@@Base+0xdf8>
   12e1c:	cmp	r3, #0
   12e20:	bxeq	lr
   12e24:	mov	r2, #0
   12e28:	push	{lr}		; (str lr, [sp, #-4]!)
   12e2c:	mov	ip, r2
   12e30:	mov	r1, r0
   12e34:	mov	lr, #1
   12e38:	cmp	r3, #47	; 0x2f
   12e3c:	moveq	r2, lr
   12e40:	beq	12e50 <argp_parse@@Base+0xe38>
   12e44:	cmp	r2, #0
   12e48:	movne	r0, r1
   12e4c:	movne	r2, ip
   12e50:	ldrb	r3, [r1, #1]!
   12e54:	cmp	r3, #0
   12e58:	bne	12e38 <argp_parse@@Base+0xe20>
   12e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12e60:	push	{r4, lr}
   12e64:	mov	r4, r0
   12e68:	bl	112cc <strlen@plt>
   12e6c:	cmp	r0, #1
   12e70:	popls	{r4, pc}
   12e74:	sub	r3, r0, #1
   12e78:	add	r2, r4, r3
   12e7c:	ldrb	r1, [r4, r3]
   12e80:	cmp	r1, #47	; 0x2f
   12e84:	popne	{r4, pc}
   12e88:	cmp	r3, #1
   12e8c:	beq	12ea0 <argp_parse@@Base+0xe88>
   12e90:	ldrb	r1, [r2, #-1]!
   12e94:	sub	r0, r3, #1
   12e98:	cmp	r1, #47	; 0x2f
   12e9c:	beq	12ea8 <argp_parse@@Base+0xe90>
   12ea0:	mov	r0, r3
   12ea4:	pop	{r4, pc}
   12ea8:	mov	r3, r0
   12eac:	b	12e88 <argp_parse@@Base+0xe70>
   12eb0:	push	{r4, r5, lr}
   12eb4:	sub	sp, sp, #12
   12eb8:	mov	r5, r0
   12ebc:	bl	112f0 <__errno_location@plt>
   12ec0:	mov	r2, #0
   12ec4:	mov	r4, r0
   12ec8:	ldr	r3, [r0]
   12ecc:	str	r2, [r4]
   12ed0:	mov	r0, r5
   12ed4:	str	r3, [sp]
   12ed8:	str	r3, [sp, #4]
   12edc:	bl	11170 <free@plt>
   12ee0:	ldr	r3, [r4]
   12ee4:	add	r2, sp, #8
   12ee8:	cmp	r3, #0
   12eec:	moveq	r3, #4
   12ef0:	movne	r3, #0
   12ef4:	add	r3, r2, r3
   12ef8:	ldr	r3, [r3, #-8]
   12efc:	str	r3, [r4]
   12f00:	add	sp, sp, #12
   12f04:	pop	{r4, r5, pc}
   12f08:	push	{lr}		; (str lr, [sp, #-4]!)
   12f0c:	sub	sp, sp, #20
   12f10:	mov	ip, #0
   12f14:	ldr	lr, [sp, #24]
   12f18:	str	ip, [sp, #8]
   12f1c:	str	lr, [sp]
   12f20:	str	ip, [sp, #4]
   12f24:	bl	1732c <argp_error@@Base+0xca4>
   12f28:	add	sp, sp, #20
   12f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f30:	push	{r4, lr}
   12f34:	sub	sp, sp, #16
   12f38:	mov	ip, #0
   12f3c:	ldr	r4, [sp, #24]
   12f40:	ldr	lr, [sp, #28]
   12f44:	str	r4, [sp]
   12f48:	str	lr, [sp, #8]
   12f4c:	str	ip, [sp, #12]
   12f50:	str	ip, [sp, #4]
   12f54:	bl	16dcc <argp_error@@Base+0x744>
   12f58:	add	sp, sp, #16
   12f5c:	pop	{r4, pc}
   12f60:	push	{r4, lr}
   12f64:	sub	sp, sp, #16
   12f68:	mov	lr, #0
   12f6c:	ldr	r4, [sp, #24]
   12f70:	mov	ip, #1
   12f74:	stm	sp, {r4, ip, lr}
   12f78:	bl	1732c <argp_error@@Base+0xca4>
   12f7c:	add	sp, sp, #16
   12f80:	pop	{r4, pc}
   12f84:	push	{r4, r5, lr}
   12f88:	sub	sp, sp, #20
   12f8c:	mov	lr, #0
   12f90:	ldr	r5, [sp, #32]
   12f94:	ldr	r4, [sp, #36]	; 0x24
   12f98:	mov	ip, #1
   12f9c:	str	r5, [sp]
   12fa0:	str	r4, [sp, #8]
   12fa4:	str	lr, [sp, #12]
   12fa8:	str	ip, [sp, #4]
   12fac:	bl	16dcc <argp_error@@Base+0x744>
   12fb0:	add	sp, sp, #20
   12fb4:	pop	{r4, r5, pc}
   12fb8:	push	{r4, r5, r6, lr}
   12fbc:	subs	r4, r0, #0
   12fc0:	beq	13034 <argp_parse@@Base+0x101c>
   12fc4:	mov	r1, #47	; 0x2f
   12fc8:	bl	11380 <strrchr@plt>
   12fcc:	subs	r5, r0, #0
   12fd0:	beq	13020 <argp_parse@@Base+0x1008>
   12fd4:	add	r6, r5, #1
   12fd8:	sub	r3, r6, r4
   12fdc:	cmp	r3, #6
   12fe0:	ble	13020 <argp_parse@@Base+0x1008>
   12fe4:	mov	r2, #7
   12fe8:	ldr	r1, [pc, #96]	; 13050 <argp_parse@@Base+0x1038>
   12fec:	sub	r0, r5, #6
   12ff0:	bl	113f8 <strncmp@plt>
   12ff4:	cmp	r0, #0
   12ff8:	bne	13020 <argp_parse@@Base+0x1008>
   12ffc:	mov	r2, #3
   13000:	ldr	r1, [pc, #76]	; 13054 <argp_parse@@Base+0x103c>
   13004:	mov	r0, r6
   13008:	bl	113f8 <strncmp@plt>
   1300c:	cmp	r0, #0
   13010:	movne	r4, r6
   13014:	ldreq	r3, [pc, #60]	; 13058 <argp_parse@@Base+0x1040>
   13018:	addeq	r4, r5, #4
   1301c:	streq	r4, [r3]
   13020:	ldr	r2, [pc, #52]	; 1305c <argp_parse@@Base+0x1044>
   13024:	ldr	r3, [pc, #52]	; 13060 <argp_parse@@Base+0x1048>
   13028:	str	r4, [r2]
   1302c:	str	r4, [r3]
   13030:	pop	{r4, r5, r6, pc}
   13034:	ldr	r3, [pc, #40]	; 13064 <argp_parse@@Base+0x104c>
   13038:	mov	r2, #55	; 0x37
   1303c:	mov	r1, #1
   13040:	ldr	r3, [r3]
   13044:	ldr	r0, [pc, #28]	; 13068 <argp_parse@@Base+0x1050>
   13048:	bl	11224 <fwrite@plt>
   1304c:	bl	11404 <abort@plt>
   13050:	andeq	r8, r1, r4, asr #32
   13054:	andeq	r8, r1, ip, asr #32
   13058:	andeq	r9, r2, r8, asr #3
   1305c:	strdeq	r9, [r2], -r4
   13060:	ldrdeq	r9, [r2], -r0
   13064:	ldrdeq	r9, [r2], -r8
   13068:	andeq	r8, r1, ip
   1306c:	push	{r4, r5, r6, r7, lr}
   13070:	sub	sp, sp, #36	; 0x24
   13074:	cmp	r1, #0
   13078:	mov	r4, r0
   1307c:	ldr	r5, [sp, #56]	; 0x38
   13080:	ldr	r6, [sp, #60]	; 0x3c
   13084:	beq	132c4 <argp_parse@@Base+0x12ac>
   13088:	str	r3, [sp]
   1308c:	mov	r3, r2
   13090:	mov	r2, r1
   13094:	ldr	r1, [pc, #564]	; 132d0 <argp_parse@@Base+0x12b8>
   13098:	bl	112e4 <fprintf@plt>
   1309c:	ldr	r3, [pc, #560]	; 132d4 <argp_parse@@Base+0x12bc>
   130a0:	ldr	r2, [pc, #560]	; 132d8 <argp_parse@@Base+0x12c0>
   130a4:	ldr	r1, [pc, #560]	; 132dc <argp_parse@@Base+0x12c4>
   130a8:	mov	r0, r4
   130ac:	bl	112e4 <fprintf@plt>
   130b0:	mov	r1, r4
   130b4:	mov	r0, #10
   130b8:	bl	113a4 <fputc@plt>
   130bc:	ldr	r1, [pc, #540]	; 132e0 <argp_parse@@Base+0x12c8>
   130c0:	ldr	r2, [pc, #540]	; 132e4 <argp_parse@@Base+0x12cc>
   130c4:	mov	r0, r4
   130c8:	bl	112e4 <fprintf@plt>
   130cc:	mov	r1, r4
   130d0:	mov	r0, #10
   130d4:	bl	113a4 <fputc@plt>
   130d8:	cmp	r6, #9
   130dc:	ldrls	pc, [pc, r6, lsl #2]
   130e0:	b	1310c <argp_parse@@Base+0x10f4>
   130e4:	andeq	r3, r1, ip, asr #2
   130e8:	muleq	r1, r8, r1
   130ec:			; <UNDEFINED> instruction: 0x000131b0
   130f0:	andeq	r3, r1, r8, asr #3
   130f4:	andeq	r3, r1, r8, ror #3
   130f8:	andeq	r3, r1, r0, lsl r2
   130fc:	andeq	r3, r1, r0, lsr r2
   13100:	andeq	r3, r1, r8, asr r2
   13104:	andeq	r3, r1, r8, lsl #5
   13108:	andeq	r3, r1, r4, asr r1
   1310c:	ldr	ip, [r5, #32]
   13110:	ldr	r1, [r5, #28]
   13114:	ldm	r5, {r2, r3}
   13118:	ldr	r7, [r5, #24]
   1311c:	ldr	r6, [r5, #20]
   13120:	str	ip, [sp, #24]
   13124:	ldr	lr, [r5, #16]
   13128:	str	r1, [sp, #20]
   1312c:	ldr	r1, [r5, #8]
   13130:	ldr	ip, [r5, #12]
   13134:	mov	r0, r4
   13138:	str	r7, [sp, #16]
   1313c:	stm	sp, {r1, ip, lr}
   13140:	str	r6, [sp, #12]
   13144:	ldr	r1, [pc, #412]	; 132e8 <argp_parse@@Base+0x12d0>
   13148:	bl	112e4 <fprintf@plt>
   1314c:	add	sp, sp, #36	; 0x24
   13150:	pop	{r4, r5, r6, r7, pc}
   13154:	ldr	ip, [r5, #32]
   13158:	ldr	r1, [r5, #28]
   1315c:	ldm	r5, {r2, r3}
   13160:	ldr	r7, [r5, #24]
   13164:	ldr	r6, [r5, #20]
   13168:	str	ip, [sp, #24]
   1316c:	ldr	lr, [r5, #16]
   13170:	str	r1, [sp, #20]
   13174:	ldr	r1, [r5, #8]
   13178:	ldr	ip, [r5, #12]
   1317c:	mov	r0, r4
   13180:	str	r7, [sp, #16]
   13184:	stm	sp, {r1, ip, lr}
   13188:	str	r6, [sp, #12]
   1318c:	ldr	r1, [pc, #344]	; 132ec <argp_parse@@Base+0x12d4>
   13190:	bl	112e4 <fprintf@plt>
   13194:	b	1314c <argp_parse@@Base+0x1134>
   13198:	ldr	r2, [r5]
   1319c:	mov	r0, r4
   131a0:	ldr	r1, [pc, #328]	; 132f0 <argp_parse@@Base+0x12d8>
   131a4:	add	sp, sp, #36	; 0x24
   131a8:	pop	{r4, r5, r6, r7, lr}
   131ac:	b	112e4 <fprintf@plt>
   131b0:	mov	r0, r4
   131b4:	ldm	r5, {r2, r3}
   131b8:	ldr	r1, [pc, #308]	; 132f4 <argp_parse@@Base+0x12dc>
   131bc:	add	sp, sp, #36	; 0x24
   131c0:	pop	{r4, r5, r6, r7, lr}
   131c4:	b	112e4 <fprintf@plt>
   131c8:	ldr	r1, [r5, #8]
   131cc:	ldm	r5, {r2, r3}
   131d0:	mov	r0, r4
   131d4:	str	r1, [sp, #56]	; 0x38
   131d8:	ldr	r1, [pc, #280]	; 132f8 <argp_parse@@Base+0x12e0>
   131dc:	add	sp, sp, #36	; 0x24
   131e0:	pop	{r4, r5, r6, r7, lr}
   131e4:	b	112e4 <fprintf@plt>
   131e8:	ldr	r1, [r5, #8]
   131ec:	ldr	ip, [r5, #12]
   131f0:	ldm	r5, {r2, r3}
   131f4:	mov	r0, r4
   131f8:	str	r1, [sp, #56]	; 0x38
   131fc:	str	ip, [sp, #60]	; 0x3c
   13200:	ldr	r1, [pc, #244]	; 132fc <argp_parse@@Base+0x12e4>
   13204:	add	sp, sp, #36	; 0x24
   13208:	pop	{r4, r5, r6, r7, lr}
   1320c:	b	112e4 <fprintf@plt>
   13210:	add	r1, r5, #8
   13214:	ldm	r5, {r2, r3}
   13218:	ldm	r1, {r1, ip, lr}
   1321c:	mov	r0, r4
   13220:	stm	sp, {r1, ip, lr}
   13224:	ldr	r1, [pc, #212]	; 13300 <argp_parse@@Base+0x12e8>
   13228:	bl	112e4 <fprintf@plt>
   1322c:	b	1314c <argp_parse@@Base+0x1134>
   13230:	add	r1, r5, #8
   13234:	ldr	r6, [r5, #20]
   13238:	ldm	r1, {r1, ip, lr}
   1323c:	mov	r0, r4
   13240:	ldm	r5, {r2, r3}
   13244:	str	r6, [sp, #12]
   13248:	stm	sp, {r1, ip, lr}
   1324c:	ldr	r1, [pc, #176]	; 13304 <argp_parse@@Base+0x12ec>
   13250:	bl	112e4 <fprintf@plt>
   13254:	b	1314c <argp_parse@@Base+0x1134>
   13258:	add	r1, r5, #8
   1325c:	ldr	r7, [r5, #24]
   13260:	ldm	r1, {r1, ip, lr}
   13264:	mov	r0, r4
   13268:	ldr	r6, [r5, #20]
   1326c:	ldm	r5, {r2, r3}
   13270:	stm	sp, {r1, ip, lr}
   13274:	str	r7, [sp, #16]
   13278:	str	r6, [sp, #12]
   1327c:	ldr	r1, [pc, #132]	; 13308 <argp_parse@@Base+0x12f0>
   13280:	bl	112e4 <fprintf@plt>
   13284:	b	1314c <argp_parse@@Base+0x1134>
   13288:	ldr	r1, [r5, #28]
   1328c:	ldm	r5, {r2, r3}
   13290:	ldr	r7, [r5, #24]
   13294:	ldr	r6, [r5, #20]
   13298:	ldr	lr, [r5, #16]
   1329c:	str	r1, [sp, #20]
   132a0:	ldr	r1, [r5, #8]
   132a4:	ldr	ip, [r5, #12]
   132a8:	mov	r0, r4
   132ac:	str	r7, [sp, #16]
   132b0:	stm	sp, {r1, ip, lr}
   132b4:	str	r6, [sp, #12]
   132b8:	ldr	r1, [pc, #76]	; 1330c <argp_parse@@Base+0x12f4>
   132bc:	bl	112e4 <fprintf@plt>
   132c0:	b	1314c <argp_parse@@Base+0x1134>
   132c4:	ldr	r1, [pc, #68]	; 13310 <argp_parse@@Base+0x12f8>
   132c8:	bl	112e4 <fprintf@plt>
   132cc:	b	1309c <argp_parse@@Base+0x1084>
   132d0:	andeq	r8, r1, r0, asr r0
   132d4:	andeq	r0, r0, r6, ror #15
   132d8:	andeq	r8, r1, r4, rrx
   132dc:	andeq	r8, r1, r4, ror #6
   132e0:	andeq	r8, r1, ip, lsl #1
   132e4:	andeq	r8, r1, r8, rrx
   132e8:	andeq	r8, r1, r8, ror r2
   132ec:	andeq	r8, r1, r4, asr #4
   132f0:	andeq	r8, r1, r8, lsr r1
   132f4:	andeq	r8, r1, r8, asr #2
   132f8:	andeq	r8, r1, r0, ror #2
   132fc:	andeq	r8, r1, ip, ror r1
   13300:	muleq	r1, ip, r1
   13304:	andeq	r8, r1, r0, asr #3
   13308:	andeq	r8, r1, r8, ror #3
   1330c:	andeq	r8, r1, r4, lsl r2
   13310:	andeq	r8, r1, ip, asr r0
   13314:	push	{r4, r5, lr}
   13318:	sub	sp, sp, #12
   1331c:	ldr	r5, [sp, #24]
   13320:	ldr	ip, [r5]
   13324:	cmp	ip, #0
   13328:	beq	13344 <argp_parse@@Base+0x132c>
   1332c:	mov	lr, r5
   13330:	mov	ip, #0
   13334:	ldr	r4, [lr, #4]!
   13338:	add	ip, ip, #1
   1333c:	cmp	r4, #0
   13340:	bne	13334 <argp_parse@@Base+0x131c>
   13344:	stm	sp, {r5, ip}
   13348:	bl	1306c <argp_parse@@Base+0x1054>
   1334c:	add	sp, sp, #12
   13350:	pop	{r4, r5, pc}
   13354:	push	{r4, r5, lr}
   13358:	sub	sp, sp, #52	; 0x34
   1335c:	add	r5, sp, #4
   13360:	ldr	r4, [sp, #64]	; 0x40
   13364:	mov	ip, #0
   13368:	sub	r4, r4, #4
   1336c:	ldr	lr, [r4, #4]!
   13370:	cmp	lr, #0
   13374:	str	lr, [r5, #4]!
   13378:	beq	13388 <argp_parse@@Base+0x1370>
   1337c:	add	ip, ip, #1
   13380:	cmp	ip, #10
   13384:	bne	1336c <argp_parse@@Base+0x1354>
   13388:	add	lr, sp, #8
   1338c:	str	ip, [sp, #4]
   13390:	str	lr, [sp]
   13394:	bl	1306c <argp_parse@@Base+0x1054>
   13398:	add	sp, sp, #52	; 0x34
   1339c:	pop	{r4, r5, pc}
   133a0:	push	{r3}		; (str r3, [sp, #-4]!)
   133a4:	push	{r4, lr}
   133a8:	sub	sp, sp, #60	; 0x3c
   133ac:	add	lr, sp, #56	; 0x38
   133b0:	add	r3, sp, #72	; 0x48
   133b4:	str	r3, [lr, #-44]!	; 0xffffffd4
   133b8:	add	r4, sp, #68	; 0x44
   133bc:	mov	r3, #0
   133c0:	ldr	ip, [r4, #4]!
   133c4:	cmp	ip, #0
   133c8:	str	ip, [lr, #4]!
   133cc:	beq	133dc <argp_parse@@Base+0x13c4>
   133d0:	add	r3, r3, #1
   133d4:	cmp	r3, #10
   133d8:	bne	133c0 <argp_parse@@Base+0x13a8>
   133dc:	add	ip, sp, #16
   133e0:	str	r3, [sp, #4]
   133e4:	str	ip, [sp]
   133e8:	ldr	r3, [sp, #68]	; 0x44
   133ec:	bl	1306c <argp_parse@@Base+0x1054>
   133f0:	add	sp, sp, #60	; 0x3c
   133f4:	pop	{r4, lr}
   133f8:	add	sp, sp, #4
   133fc:	bx	lr
   13400:	ldr	r3, [pc, #56]	; 13440 <argp_parse@@Base+0x1428>
   13404:	push	{r4, lr}
   13408:	mov	r0, #10
   1340c:	ldr	r1, [r3]
   13410:	bl	113a4 <fputc@plt>
   13414:	ldr	r1, [pc, #40]	; 13444 <argp_parse@@Base+0x142c>
   13418:	ldr	r0, [pc, #40]	; 13448 <argp_parse@@Base+0x1430>
   1341c:	bl	11134 <printf@plt>
   13420:	ldr	r1, [pc, #36]	; 1344c <argp_parse@@Base+0x1434>
   13424:	ldr	r2, [pc, #36]	; 13450 <argp_parse@@Base+0x1438>
   13428:	ldr	r0, [pc, #36]	; 13454 <argp_parse@@Base+0x143c>
   1342c:	bl	11134 <printf@plt>
   13430:	ldr	r1, [pc, #32]	; 13458 <argp_parse@@Base+0x1440>
   13434:	ldr	r0, [pc, #32]	; 1345c <argp_parse@@Base+0x1444>
   13438:	pop	{r4, lr}
   1343c:	b	11134 <printf@plt>
   13440:	ldrdeq	r9, [r2], -ip
   13444:			; <UNDEFINED> instruction: 0x000182b4
   13448:	andeq	r8, r1, ip, asr #5
   1344c:	strdeq	r7, [r1], -ip
   13450:	andeq	r8, r1, r0, ror #5
   13454:	andeq	r8, r1, r8, lsl #6
   13458:	andeq	r8, r1, ip, lsl r3
   1345c:	andeq	r8, r1, ip, lsr r3
   13460:	cmp	r0, #0
   13464:	moveq	r0, #1
   13468:	cmp	r0, #0
   1346c:	blt	13474 <argp_parse@@Base+0x145c>
   13470:	b	11260 <malloc@plt>
   13474:	push	{r4, lr}
   13478:	bl	112f0 <__errno_location@plt>
   1347c:	mov	r3, #12
   13480:	str	r3, [r0]
   13484:	mov	r0, #0
   13488:	pop	{r4, pc}
   1348c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13490:	sub	sp, sp, #20
   13494:	ldr	r5, [r0, #4]
   13498:	ldr	r4, [r0]
   1349c:	cmp	r5, #0
   134a0:	ldr	r7, [r0, #8]
   134a4:	beq	1357c <argp_parse@@Base+0x1564>
   134a8:	stmib	sp, {r1, r2, r3}
   134ac:	mov	r6, #1
   134b0:	str	r4, [sp]
   134b4:	mov	r8, #0
   134b8:	b	134d8 <argp_parse@@Base+0x14c0>
   134bc:	mov	r3, r6
   134c0:	subs	r5, r5, #1
   134c4:	moveq	r3, #0
   134c8:	andne	r3, r3, #1
   134cc:	cmp	r3, #0
   134d0:	add	r4, r4, #24
   134d4:	beq	13544 <argp_parse@@Base+0x152c>
   134d8:	ldr	fp, [r4, #12]
   134dc:	ands	r9, fp, #8
   134e0:	movne	r3, r6
   134e4:	movne	r9, r8
   134e8:	bne	134c0 <argp_parse@@Base+0x14a8>
   134ec:	ldr	sl, [r4, #4]
   134f0:	sub	r3, sl, #1
   134f4:	cmp	r3, #254	; 0xfe
   134f8:	bhi	134bc <argp_parse@@Base+0x14a4>
   134fc:	bl	112a8 <__ctype_b_loc@plt>
   13500:	lsl	r3, sl, #1
   13504:	ldr	r1, [r0]
   13508:	ldrh	r3, [r1, r3]
   1350c:	tst	r3, #16384	; 0x4000
   13510:	beq	134bc <argp_parse@@Base+0x14a4>
   13514:	ldrb	r3, [r7]
   13518:	cmp	r3, sl
   1351c:	bne	134bc <argp_parse@@Base+0x14a4>
   13520:	ldr	r3, [sp]
   13524:	tst	fp, #4
   13528:	moveq	r3, r4
   1352c:	tst	fp, #2
   13530:	str	r3, [sp]
   13534:	movne	r3, r6
   13538:	beq	13554 <argp_parse@@Base+0x153c>
   1353c:	add	r7, r7, #1
   13540:	b	134c0 <argp_parse@@Base+0x14a8>
   13544:	mov	sl, r9
   13548:	mov	r0, sl
   1354c:	add	sp, sp, #20
   13550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13554:	ldr	r3, [sp, #12]
   13558:	ldr	r2, [sp, #8]
   1355c:	ldr	r1, [sp]
   13560:	mov	r0, r4
   13564:	ldr	ip, [sp, #4]
   13568:	blx	ip
   1356c:	clz	r3, r0
   13570:	mov	r9, r0
   13574:	lsr	r3, r3, #5
   13578:	b	1353c <argp_parse@@Base+0x1524>
   1357c:	mov	sl, r5
   13580:	b	13548 <argp_parse@@Base+0x1530>
   13584:	push	{r4, r5, r6, lr}
   13588:	ldr	r4, [r0, #12]
   1358c:	ands	r4, r4, #8
   13590:	movne	r4, #0
   13594:	bne	135c0 <argp_parse@@Base+0x15a8>
   13598:	ldr	r5, [r0, #4]
   1359c:	sub	r3, r5, #1
   135a0:	cmp	r3, #254	; 0xfe
   135a4:	bhi	135c0 <argp_parse@@Base+0x15a8>
   135a8:	bl	112a8 <__ctype_b_loc@plt>
   135ac:	lsl	r3, r5, #1
   135b0:	ldr	r2, [r0]
   135b4:	ldrh	r3, [r2, r3]
   135b8:	tst	r3, #16384	; 0x4000
   135bc:	movne	r4, r5
   135c0:	mov	r0, r4
   135c4:	pop	{r4, r5, r6, pc}
   135c8:	push	{r4, lr}
   135cc:	mov	r4, r0
   135d0:	bl	112a8 <__ctype_b_loc@plt>
   135d4:	ldr	r2, [r4]
   135d8:	ldr	lr, [r0]
   135dc:	b	135e4 <argp_parse@@Base+0x15cc>
   135e0:	str	r2, [r4]
   135e4:	ldrb	r1, [r2]
   135e8:	mov	r3, r2
   135ec:	add	r2, r2, #1
   135f0:	lsl	r0, r1, #1
   135f4:	ldrh	ip, [lr, r0]
   135f8:	tst	ip, #8192	; 0x2000
   135fc:	bne	135e0 <argp_parse@@Base+0x15c8>
   13600:	subs	r0, r1, #45	; 0x2d
   13604:	movne	r0, #1
   13608:	cmp	r1, #0
   1360c:	popeq	{r4, pc}
   13610:	tst	ip, #8
   13614:	popne	{r4, pc}
   13618:	add	r3, r3, #1
   1361c:	str	r3, [r4]
   13620:	ldrb	r2, [r3]
   13624:	cmp	r2, #0
   13628:	lsl	r2, r2, #1
   1362c:	popeq	{r4, pc}
   13630:	ldrh	r2, [lr, r2]
   13634:	tst	r2, #8
   13638:	beq	13618 <argp_parse@@Base+0x1600>
   1363c:	pop	{r4, pc}
   13640:	push	{r4, r5, r6, lr}
   13644:	mov	r5, r0
   13648:	ldr	r0, [r0, #12]
   1364c:	cmp	r0, #0
   13650:	beq	13664 <argp_parse@@Base+0x164c>
   13654:	ldr	r4, [r0, #24]
   13658:	bl	12eb0 <argp_parse@@Base+0xe98>
   1365c:	subs	r0, r4, #0
   13660:	bne	13654 <argp_parse@@Base+0x163c>
   13664:	ldr	r3, [r5, #4]
   13668:	cmp	r3, #0
   1366c:	beq	13680 <argp_parse@@Base+0x1668>
   13670:	ldr	r0, [r5]
   13674:	bl	12eb0 <argp_parse@@Base+0xe98>
   13678:	ldr	r0, [r5, #8]
   1367c:	bl	12eb0 <argp_parse@@Base+0xe98>
   13680:	mov	r0, r5
   13684:	pop	{r4, r5, r6, lr}
   13688:	b	12eb0 <argp_parse@@Base+0xe98>
   1368c:	push	{r4, r5, r6, r7, r8, lr}
   13690:	mov	r5, r1
   13694:	ldr	r3, [r0, #28]
   13698:	ldr	r1, [r0, #24]
   1369c:	ldr	r2, [r0, #16]
   136a0:	sub	r3, r3, r1
   136a4:	cmp	r3, r2
   136a8:	mov	r4, r0
   136ac:	bhi	13718 <argp_parse@@Base+0x1700>
   136b0:	ldr	r1, [r4, #20]
   136b4:	mov	r6, #32
   136b8:	cmp	r1, #0
   136bc:	subge	r5, r5, r1
   136c0:	mov	r7, #1
   136c4:	cmp	r5, #0
   136c8:	sub	r5, r5, #1
   136cc:	ble	136f8 <argp_parse@@Base+0x16e0>
   136d0:	ldr	r3, [r4, #28]
   136d4:	ldr	r2, [r4, #32]
   136d8:	cmp	r3, r2
   136dc:	bcs	136fc <argp_parse@@Base+0x16e4>
   136e0:	add	r2, r3, #1
   136e4:	cmp	r5, #0
   136e8:	str	r2, [r4, #28]
   136ec:	sub	r5, r5, #1
   136f0:	strb	r6, [r3]
   136f4:	bgt	136d0 <argp_parse@@Base+0x16b8>
   136f8:	pop	{r4, r5, r6, r7, r8, pc}
   136fc:	mov	r1, r7
   13700:	mov	r0, r4
   13704:	bl	17acc <argp_error@@Base+0x1444>
   13708:	cmp	r0, #0
   1370c:	beq	136c4 <argp_parse@@Base+0x16ac>
   13710:	ldr	r3, [r4, #28]
   13714:	b	136e0 <argp_parse@@Base+0x16c8>
   13718:	bl	1743c <argp_error@@Base+0xdb4>
   1371c:	b	136b0 <argp_parse@@Base+0x1698>
   13720:	push	{r4, r5, r6, lr}
   13724:	subs	r4, r2, #0
   13728:	popeq	{r4, r5, r6, pc}
   1372c:	ldr	ip, [r4, #20]
   13730:	cmp	ip, #0
   13734:	popeq	{r4, r5, r6, pc}
   13738:	mov	r6, r1
   1373c:	mov	r5, r0
   13740:	mov	r1, r3
   13744:	mov	r0, r4
   13748:	bl	12d54 <argp_parse@@Base+0xd3c>
   1374c:	ldr	r3, [r4, #20]
   13750:	mov	r1, r5
   13754:	mov	r2, r0
   13758:	mov	r0, r6
   1375c:	pop	{r4, r5, r6, lr}
   13760:	bx	r3
   13764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13768:	mov	r5, r2
   1376c:	sub	sp, sp, #12
   13770:	mov	r2, r1
   13774:	ldr	r3, [r5, #16]
   13778:	ldr	r1, [pc, #488]	; 13968 <argp_parse@@Base+0x1950>
   1377c:	mov	r8, r0
   13780:	bl	13720 <argp_parse@@Base+0x1708>
   13784:	subs	r6, r0, #0
   13788:	beq	13894 <argp_parse@@Base+0x187c>
   1378c:	ldrb	r3, [r6]
   13790:	cmp	r3, #0
   13794:	beq	13888 <argp_parse@@Base+0x1870>
   13798:	ldr	r3, [r5, #8]
   1379c:	ldr	r3, [r3]
   137a0:	cmp	r3, #0
   137a4:	beq	137cc <argp_parse@@Base+0x17b4>
   137a8:	ldr	r4, [r5, #4]
   137ac:	ldr	r3, [r4, #28]
   137b0:	ldr	r2, [r4, #32]
   137b4:	cmp	r3, r2
   137b8:	bcs	1394c <argp_parse@@Base+0x1934>
   137bc:	add	r1, r3, #1
   137c0:	mov	r2, #10
   137c4:	str	r1, [r4, #28]
   137c8:	strb	r2, [r3]
   137cc:	ldr	sl, [pc, #408]	; 1396c <argp_parse@@Base+0x1954>
   137d0:	ldr	r0, [r5, #4]
   137d4:	ldr	r1, [sl, #24]
   137d8:	bl	1368c <argp_parse@@Base+0x1674>
   137dc:	ldr	r4, [r5, #4]
   137e0:	ldr	r9, [sl, #24]
   137e4:	ldr	r7, [r4, #28]
   137e8:	ldr	r3, [r4, #24]
   137ec:	ldr	r2, [r4, #16]
   137f0:	sub	r3, r7, r3
   137f4:	cmp	r3, r2
   137f8:	strls	r9, [r4, #4]
   137fc:	movls	fp, r4
   13800:	bhi	138d0 <argp_parse@@Base+0x18b8>
   13804:	str	r9, [fp, #12]
   13808:	mov	r0, r6
   1380c:	bl	112cc <strlen@plt>
   13810:	subs	r9, r0, #0
   13814:	beq	1384c <argp_parse@@Base+0x1834>
   13818:	ldr	r2, [r4, #32]
   1381c:	add	r3, r7, r9
   13820:	cmp	r2, r3
   13824:	bcc	138b4 <argp_parse@@Base+0x189c>
   13828:	mov	r2, r9
   1382c:	mov	r0, r7
   13830:	mov	r1, r6
   13834:	bl	11194 <memcpy@plt>
   13838:	ldr	r3, [r4, #28]
   1383c:	add	r9, r3, r9
   13840:	str	r9, [r4, #28]
   13844:	ldr	r4, [r5, #4]
   13848:	ldr	r7, [r4, #28]
   1384c:	ldr	r3, [r4, #24]
   13850:	ldr	r2, [r4, #16]
   13854:	sub	r3, r7, r3
   13858:	cmp	r3, r2
   1385c:	movls	r9, r4
   13860:	bhi	1391c <argp_parse@@Base+0x1904>
   13864:	ldr	r2, [r9, #32]
   13868:	mov	r3, #0
   1386c:	cmp	r2, r7
   13870:	str	r3, [r4, #4]
   13874:	bls	13930 <argp_parse@@Base+0x1918>
   13878:	add	r2, r7, #1
   1387c:	mov	r3, #10
   13880:	str	r2, [r9, #28]
   13884:	strb	r3, [r7]
   13888:	ldr	r3, [r5, #8]
   1388c:	mov	r2, #1
   13890:	str	r2, [r3, #4]
   13894:	cmp	r8, r6
   13898:	beq	138ac <argp_parse@@Base+0x1894>
   1389c:	mov	r0, r6
   138a0:	add	sp, sp, #12
   138a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138a8:	b	12eb0 <argp_parse@@Base+0xe98>
   138ac:	add	sp, sp, #12
   138b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138b4:	mov	r1, r9
   138b8:	mov	r0, r4
   138bc:	bl	17acc <argp_error@@Base+0x1444>
   138c0:	cmp	r0, #0
   138c4:	beq	13844 <argp_parse@@Base+0x182c>
   138c8:	ldr	r7, [r4, #28]
   138cc:	b	13828 <argp_parse@@Base+0x1810>
   138d0:	mov	r0, r4
   138d4:	str	r9, [sp, #4]
   138d8:	bl	1743c <argp_error@@Base+0xdb4>
   138dc:	ldr	fp, [r5, #4]
   138e0:	ldr	r3, [sp, #4]
   138e4:	ldr	r9, [sl, #24]
   138e8:	ldr	r7, [fp, #28]
   138ec:	ldr	r2, [fp, #24]
   138f0:	ldr	r1, [fp, #16]
   138f4:	sub	r2, r7, r2
   138f8:	cmp	r2, r1
   138fc:	str	r3, [r4, #4]
   13900:	movls	r4, fp
   13904:	bls	13804 <argp_parse@@Base+0x17ec>
   13908:	mov	r0, fp
   1390c:	bl	1743c <argp_error@@Base+0xdb4>
   13910:	ldr	r4, [r5, #4]
   13914:	ldr	r7, [r4, #28]
   13918:	b	13804 <argp_parse@@Base+0x17ec>
   1391c:	mov	r0, r4
   13920:	bl	1743c <argp_error@@Base+0xdb4>
   13924:	ldr	r9, [r5, #4]
   13928:	ldr	r7, [r9, #28]
   1392c:	b	13864 <argp_parse@@Base+0x184c>
   13930:	mov	r1, #1
   13934:	mov	r0, r9
   13938:	bl	17acc <argp_error@@Base+0x1444>
   1393c:	cmp	r0, #0
   13940:	beq	13888 <argp_parse@@Base+0x1870>
   13944:	ldr	r7, [r9, #28]
   13948:	b	13878 <argp_parse@@Base+0x1860>
   1394c:	mov	r1, #1
   13950:	mov	r0, r4
   13954:	bl	17acc <argp_error@@Base+0x1444>
   13958:	cmp	r0, #0
   1395c:	beq	137cc <argp_parse@@Base+0x17b4>
   13960:	ldr	r3, [r4, #28]
   13964:	b	137bc <argp_parse@@Base+0x17a4>
   13968:	andeq	r0, r0, #3
   1396c:	andeq	r9, r2, ip, lsl #3
   13970:	ldr	r3, [r1, #12]
   13974:	push	{r4, r5, r6, r7, r8, lr}
   13978:	cmp	r3, #0
   1397c:	mov	r4, r1
   13980:	mov	r6, r0
   13984:	beq	13a6c <argp_parse@@Base+0x1a54>
   13988:	ldr	r3, [r1, #8]
   1398c:	ldr	r2, [r1]
   13990:	ldr	r7, [r3]
   13994:	ldr	r3, [r3, #4]
   13998:	ldr	r5, [r2, #16]
   1399c:	cmp	r3, #0
   139a0:	cmpne	r7, #0
   139a4:	beq	139dc <argp_parse@@Base+0x19c4>
   139a8:	ldr	r2, [r2, #12]
   139ac:	ldr	r3, [r7, #12]
   139b0:	cmp	r2, r3
   139b4:	beq	139dc <argp_parse@@Base+0x19c4>
   139b8:	ldr	r8, [r1, #4]
   139bc:	ldr	r3, [r8, #28]
   139c0:	ldr	r2, [r8, #32]
   139c4:	cmp	r3, r2
   139c8:	bcs	13afc <argp_parse@@Base+0x1ae4>
   139cc:	add	r1, r3, #1
   139d0:	mov	r2, #10
   139d4:	str	r1, [r8, #28]
   139d8:	strb	r2, [r3]
   139dc:	cmp	r5, #0
   139e0:	beq	13ac8 <argp_parse@@Base+0x1ab0>
   139e4:	ldr	r0, [r5]
   139e8:	cmp	r0, #0
   139ec:	beq	13ac8 <argp_parse@@Base+0x1ab0>
   139f0:	ldrb	r3, [r0]
   139f4:	cmp	r3, #0
   139f8:	beq	13ac8 <argp_parse@@Base+0x1ab0>
   139fc:	cmp	r7, #0
   13a00:	beq	13a30 <argp_parse@@Base+0x1a18>
   13a04:	ldr	r3, [r7, #16]
   13a08:	cmp	r5, r3
   13a0c:	beq	13ac8 <argp_parse@@Base+0x1ab0>
   13a10:	cmp	r3, #0
   13a14:	beq	13a30 <argp_parse@@Base+0x1a18>
   13a18:	ldr	r3, [r3, #12]
   13a1c:	cmp	r3, #0
   13a20:	cmpne	r5, r3
   13a24:	bne	13a18 <argp_parse@@Base+0x1a00>
   13a28:	cmp	r5, r3
   13a2c:	beq	13ac8 <argp_parse@@Base+0x1ab0>
   13a30:	ldr	r3, [r4, #4]
   13a34:	ldr	r1, [r5, #16]
   13a38:	mov	r2, r4
   13a3c:	ldr	r7, [r3, #12]
   13a40:	bl	13764 <argp_parse@@Base+0x174c>
   13a44:	ldr	r5, [r4, #4]
   13a48:	mov	r0, r5
   13a4c:	ldr	r3, [r5, #28]
   13a50:	ldr	r1, [r5, #24]
   13a54:	ldr	r2, [r5, #16]
   13a58:	sub	r3, r3, r1
   13a5c:	cmp	r3, r2
   13a60:	bhi	13af0 <argp_parse@@Base+0x1ad8>
   13a64:	str	r7, [r5, #12]
   13a68:	b	13acc <argp_parse@@Base+0x1ab4>
   13a6c:	ldr	r5, [r1, #4]
   13a70:	ldr	r3, [r5, #28]
   13a74:	ldr	r1, [r5, #32]
   13a78:	add	r2, r3, #2
   13a7c:	cmp	r1, r2
   13a80:	bcc	13aac <argp_parse@@Base+0x1a94>
   13a84:	ldr	r2, [pc, #140]	; 13b18 <argp_parse@@Base+0x1b00>
   13a88:	mov	r1, r6
   13a8c:	ldrh	r2, [r2]
   13a90:	strh	r2, [r3]
   13a94:	ldr	r3, [r5, #28]
   13a98:	ldr	r0, [r4, #4]
   13a9c:	add	r3, r3, #2
   13aa0:	str	r3, [r5, #28]
   13aa4:	pop	{r4, r5, r6, r7, r8, lr}
   13aa8:	b	1368c <argp_parse@@Base+0x1674>
   13aac:	mov	r1, #2
   13ab0:	mov	r0, r5
   13ab4:	bl	17acc <argp_error@@Base+0x1444>
   13ab8:	cmp	r0, #0
   13abc:	beq	13ae0 <argp_parse@@Base+0x1ac8>
   13ac0:	ldr	r3, [r5, #28]
   13ac4:	b	13a84 <argp_parse@@Base+0x1a6c>
   13ac8:	ldr	r0, [r4, #4]
   13acc:	mov	r3, #0
   13ad0:	str	r3, [r4, #12]
   13ad4:	mov	r1, r6
   13ad8:	pop	{r4, r5, r6, r7, r8, lr}
   13adc:	b	1368c <argp_parse@@Base+0x1674>
   13ae0:	ldr	r0, [r4, #4]
   13ae4:	mov	r1, r6
   13ae8:	pop	{r4, r5, r6, r7, r8, lr}
   13aec:	b	1368c <argp_parse@@Base+0x1674>
   13af0:	bl	1743c <argp_error@@Base+0xdb4>
   13af4:	ldr	r0, [r4, #4]
   13af8:	b	13a64 <argp_parse@@Base+0x1a4c>
   13afc:	mov	r1, #1
   13b00:	mov	r0, r8
   13b04:	bl	17acc <argp_error@@Base+0x1444>
   13b08:	cmp	r0, #0
   13b0c:	beq	139dc <argp_parse@@Base+0x19c4>
   13b10:	ldr	r3, [r8, #28]
   13b14:	b	139cc <argp_parse@@Base+0x19b4>
   13b18:	andeq	r8, r1, ip, lsr r4
   13b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b20:	mov	r7, r3
   13b24:	ldr	sl, [r0, #12]
   13b28:	sub	sp, sp, #36	; 0x24
   13b2c:	ldr	r3, [r0, #16]
   13b30:	cmp	sl, #0
   13b34:	mov	fp, r0
   13b38:	mov	r6, r2
   13b3c:	str	r3, [sp, #16]
   13b40:	mov	r9, r1
   13b44:	ldr	r8, [sp, #72]	; 0x48
   13b48:	ldr	r5, [sp, #76]	; 0x4c
   13b4c:	beq	13f1c <argp_parse@@Base+0x1f04>
   13b50:	mov	r1, #11
   13b54:	mov	r0, sl
   13b58:	bl	112d8 <strchr@plt>
   13b5c:	cmp	r6, #0
   13b60:	bne	13e38 <argp_parse@@Base+0x1e20>
   13b64:	cmp	r0, #0
   13b68:	ldr	r3, [fp, #20]
   13b6c:	beq	14074 <argp_parse@@Base+0x205c>
   13b70:	cmp	r3, #0
   13b74:	sub	r4, r0, sl
   13b78:	beq	1400c <argp_parse@@Base+0x1ff4>
   13b7c:	cmp	r4, #0
   13b80:	beq	13fac <argp_parse@@Base+0x1f94>
   13b84:	mov	r0, sl
   13b88:	mov	r1, r4
   13b8c:	bl	1117c <strndup@plt>
   13b90:	mov	r3, #1
   13b94:	str	r3, [sp, #24]
   13b98:	mov	sl, r0
   13b9c:	adds	r3, r0, #0
   13ba0:	movne	r3, #1
   13ba4:	str	r3, [sp, #20]
   13ba8:	mov	r1, r9
   13bac:	mov	r0, fp
   13bb0:	bl	12d54 <argp_parse@@Base+0xd3c>
   13bb4:	ldr	r3, [fp, #20]
   13bb8:	str	r0, [sp, #12]
   13bbc:	ldr	r0, [pc, #1272]	; 140bc <argp_parse@@Base+0x20a4>
   13bc0:	ldr	r2, [sp, #12]
   13bc4:	mov	r1, sl
   13bc8:	blx	r3
   13bcc:	subs	r3, r0, #0
   13bd0:	beq	13f5c <argp_parse@@Base+0x1f44>
   13bd4:	cmp	r7, #0
   13bd8:	beq	13bfc <argp_parse@@Base+0x1be4>
   13bdc:	ldr	r2, [r5, #28]
   13be0:	ldr	r1, [r5, #32]
   13be4:	cmp	r2, r1
   13be8:	bcs	13f64 <argp_parse@@Base+0x1f4c>
   13bec:	add	r0, r2, #1
   13bf0:	mov	r1, #10
   13bf4:	str	r0, [r5, #28]
   13bf8:	strb	r1, [r2]
   13bfc:	ldr	r2, [sp, #24]
   13c00:	cmp	r3, sl
   13c04:	movne	r2, #0
   13c08:	andeq	r2, r2, #1
   13c0c:	cmp	r2, #0
   13c10:	beq	13e7c <argp_parse@@Base+0x1e64>
   13c14:	ldr	r0, [r5, #28]
   13c18:	ldr	r1, [r5, #32]
   13c1c:	add	r2, r0, r4
   13c20:	cmp	r1, r2
   13c24:	bcs	13edc <argp_parse@@Base+0x1ec4>
   13c28:	mov	r1, r4
   13c2c:	mov	r0, r5
   13c30:	str	r3, [sp, #24]
   13c34:	bl	17acc <argp_error@@Base+0x1444>
   13c38:	ldr	r3, [sp, #24]
   13c3c:	cmp	r0, #0
   13c40:	bne	13ed8 <argp_parse@@Base+0x1ec0>
   13c44:	ldr	r4, [r5, #28]
   13c48:	ldr	r1, [r5, #24]
   13c4c:	ldr	r2, [r5, #16]
   13c50:	sub	r4, r4, r1
   13c54:	cmp	r4, r2
   13c58:	bhi	13f00 <argp_parse@@Base+0x1ee8>
   13c5c:	ldr	r2, [r5, #20]
   13c60:	ldr	r1, [r5, #4]
   13c64:	bic	r2, r2, r2, asr #31
   13c68:	cmp	r1, r2
   13c6c:	bcs	13c90 <argp_parse@@Base+0x1c78>
   13c70:	ldr	r2, [r5, #28]
   13c74:	ldr	r1, [r5, #32]
   13c78:	cmp	r2, r1
   13c7c:	bcs	13f88 <argp_parse@@Base+0x1f70>
   13c80:	add	r0, r2, #1
   13c84:	mov	r1, #10
   13c88:	str	r0, [r5, #28]
   13c8c:	strb	r1, [r2]
   13c90:	cmp	r3, sl
   13c94:	moveq	r4, #1
   13c98:	beq	13ca8 <argp_parse@@Base+0x1c90>
   13c9c:	mov	r0, r3
   13ca0:	bl	12eb0 <argp_parse@@Base+0xe98>
   13ca4:	mov	r4, #1
   13ca8:	ldr	r3, [sp, #20]
   13cac:	cmp	r3, #0
   13cb0:	beq	13cc8 <argp_parse@@Base+0x1cb0>
   13cb4:	ldr	r3, [fp, #20]
   13cb8:	cmp	r3, #0
   13cbc:	beq	13dac <argp_parse@@Base+0x1d94>
   13cc0:	mov	r0, sl
   13cc4:	bl	12eb0 <argp_parse@@Base+0xe98>
   13cc8:	cmp	r6, #0
   13ccc:	beq	13dac <argp_parse@@Base+0x1d94>
   13cd0:	ldr	r3, [fp, #20]
   13cd4:	cmp	r3, #0
   13cd8:	beq	13dac <argp_parse@@Base+0x1d94>
   13cdc:	ldr	r2, [sp, #12]
   13ce0:	mov	r1, #0
   13ce4:	ldr	r0, [pc, #980]	; 140c0 <argp_parse@@Base+0x20a8>
   13ce8:	blx	r3
   13cec:	subs	sl, r0, #0
   13cf0:	beq	13dac <argp_parse@@Base+0x1d94>
   13cf4:	orrs	r3, r7, r4
   13cf8:	beq	13d1c <argp_parse@@Base+0x1d04>
   13cfc:	ldr	r3, [r5, #28]
   13d00:	ldr	r2, [r5, #32]
   13d04:	cmp	r3, r2
   13d08:	bcs	14044 <argp_parse@@Base+0x202c>
   13d0c:	add	r1, r3, #1
   13d10:	mov	r2, #10
   13d14:	str	r1, [r5, #28]
   13d18:	strb	r2, [r3]
   13d1c:	mov	r0, sl
   13d20:	bl	112cc <strlen@plt>
   13d24:	subs	r4, r0, #0
   13d28:	beq	13d54 <argp_parse@@Base+0x1d3c>
   13d2c:	ldr	r0, [r5, #28]
   13d30:	ldr	r2, [r5, #32]
   13d34:	add	r3, r0, r4
   13d38:	cmp	r2, r3
   13d3c:	bcs	13fbc <argp_parse@@Base+0x1fa4>
   13d40:	mov	r1, r4
   13d44:	mov	r0, r5
   13d48:	bl	17acc <argp_error@@Base+0x1444>
   13d4c:	cmp	r0, #0
   13d50:	bne	13fb8 <argp_parse@@Base+0x1fa0>
   13d54:	mov	r0, sl
   13d58:	bl	12eb0 <argp_parse@@Base+0xe98>
   13d5c:	ldr	r3, [r5, #28]
   13d60:	ldr	r1, [r5, #24]
   13d64:	ldr	r2, [r5, #16]
   13d68:	sub	r3, r3, r1
   13d6c:	cmp	r3, r2
   13d70:	bhi	13fd8 <argp_parse@@Base+0x1fc0>
   13d74:	ldr	r3, [r5, #20]
   13d78:	ldr	r2, [r5, #4]
   13d7c:	bic	r3, r3, r3, asr #31
   13d80:	cmp	r2, r3
   13d84:	bcs	13f14 <argp_parse@@Base+0x1efc>
   13d88:	ldr	r3, [r5, #28]
   13d8c:	ldr	r2, [r5, #32]
   13d90:	cmp	r3, r2
   13d94:	bcs	14028 <argp_parse@@Base+0x2010>
   13d98:	mov	r4, #1
   13d9c:	add	r2, r3, r4
   13da0:	str	r2, [r5, #28]
   13da4:	mov	r2, #10
   13da8:	strb	r2, [r3]
   13dac:	ldr	fp, [sp, #16]
   13db0:	cmp	fp, #0
   13db4:	beq	13e2c <argp_parse@@Base+0x1e14>
   13db8:	ldr	r3, [fp]
   13dbc:	cmp	r3, #0
   13dc0:	beq	13e2c <argp_parse@@Base+0x1e14>
   13dc4:	eor	r2, r4, #1
   13dc8:	and	r2, r2, #1
   13dcc:	clz	sl, r8
   13dd0:	lsr	sl, sl, #5
   13dd4:	orrs	r2, sl, r2
   13dd8:	bne	13df4 <argp_parse@@Base+0x1ddc>
   13ddc:	b	14060 <argp_parse@@Base+0x2048>
   13de0:	cmp	r4, #0
   13de4:	movne	r2, sl
   13de8:	orreq	r2, sl, #1
   13dec:	cmp	r2, #0
   13df0:	beq	13e2c <argp_parse@@Base+0x1e14>
   13df4:	orrs	r2, r7, r4
   13df8:	mov	r0, r3
   13dfc:	str	r5, [sp, #4]
   13e00:	movne	r3, #1
   13e04:	moveq	r3, #0
   13e08:	str	r8, [sp]
   13e0c:	mov	r2, r6
   13e10:	mov	r1, r9
   13e14:	bl	13b1c <argp_parse@@Base+0x1b04>
   13e18:	ldr	r3, [fp, #16]
   13e1c:	add	fp, fp, #16
   13e20:	cmp	r3, #0
   13e24:	orr	r4, r4, r0
   13e28:	bne	13de0 <argp_parse@@Base+0x1dc8>
   13e2c:	mov	r0, r4
   13e30:	add	sp, sp, #36	; 0x24
   13e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e38:	cmp	r0, #0
   13e3c:	addne	sl, r0, #1
   13e40:	beq	14004 <argp_parse@@Base+0x1fec>
   13e44:	ldr	r3, [fp, #20]
   13e48:	cmp	r3, #0
   13e4c:	beq	13fe4 <argp_parse@@Base+0x1fcc>
   13e50:	mov	r3, #0
   13e54:	mov	r1, r9
   13e58:	mov	r0, fp
   13e5c:	mov	r4, r3
   13e60:	str	r3, [sp, #20]
   13e64:	bl	12d54 <argp_parse@@Base+0xd3c>
   13e68:	str	r4, [sp, #24]
   13e6c:	ldr	r3, [fp, #20]
   13e70:	str	r0, [sp, #12]
   13e74:	ldr	r0, [pc, #584]	; 140c4 <argp_parse@@Base+0x20ac>
   13e78:	b	13bc0 <argp_parse@@Base+0x1ba8>
   13e7c:	mov	r0, r3
   13e80:	str	r3, [sp, #24]
   13e84:	bl	112cc <strlen@plt>
   13e88:	ldr	r3, [sp, #24]
   13e8c:	subs	r4, r0, #0
   13e90:	beq	13c44 <argp_parse@@Base+0x1c2c>
   13e94:	ldr	r0, [r5, #28]
   13e98:	ldr	r1, [r5, #32]
   13e9c:	add	r2, r0, r4
   13ea0:	cmp	r1, r2
   13ea4:	bcs	13ec8 <argp_parse@@Base+0x1eb0>
   13ea8:	mov	r1, r4
   13eac:	mov	r0, r5
   13eb0:	str	r3, [sp, #24]
   13eb4:	bl	17acc <argp_error@@Base+0x1444>
   13eb8:	ldr	r3, [sp, #24]
   13ebc:	cmp	r0, #0
   13ec0:	beq	13c44 <argp_parse@@Base+0x1c2c>
   13ec4:	ldr	r0, [r5, #28]
   13ec8:	mov	r2, r4
   13ecc:	mov	r1, r3
   13ed0:	str	r3, [sp, #24]
   13ed4:	b	13ee8 <argp_parse@@Base+0x1ed0>
   13ed8:	ldr	r0, [r5, #28]
   13edc:	mov	r2, r4
   13ee0:	mov	r1, sl
   13ee4:	str	r3, [sp, #24]
   13ee8:	bl	11194 <memcpy@plt>
   13eec:	ldr	r2, [r5, #28]
   13ef0:	ldr	r3, [sp, #24]
   13ef4:	add	r4, r2, r4
   13ef8:	str	r4, [r5, #28]
   13efc:	b	13c48 <argp_parse@@Base+0x1c30>
   13f00:	mov	r0, r5
   13f04:	str	r3, [sp, #24]
   13f08:	bl	1743c <argp_error@@Base+0xdb4>
   13f0c:	ldr	r3, [sp, #24]
   13f10:	b	13c5c <argp_parse@@Base+0x1c44>
   13f14:	mov	r4, #1
   13f18:	b	13dac <argp_parse@@Base+0x1d94>
   13f1c:	ldr	r4, [r0, #20]
   13f20:	cmp	r4, #0
   13f24:	beq	1406c <argp_parse@@Base+0x2054>
   13f28:	bl	12d54 <argp_parse@@Base+0xd3c>
   13f2c:	cmp	r6, #0
   13f30:	ldr	r3, [fp, #20]
   13f34:	strne	sl, [sp, #20]
   13f38:	strne	sl, [sp, #24]
   13f3c:	movne	r4, sl
   13f40:	streq	r6, [sp, #20]
   13f44:	streq	r6, [sp, #24]
   13f48:	moveq	r4, r6
   13f4c:	str	r0, [sp, #12]
   13f50:	ldrne	r0, [pc, #364]	; 140c4 <argp_parse@@Base+0x20ac>
   13f54:	ldreq	r0, [pc, #352]	; 140bc <argp_parse@@Base+0x20a4>
   13f58:	b	13bc0 <argp_parse@@Base+0x1ba8>
   13f5c:	mov	r4, r3
   13f60:	b	13ca8 <argp_parse@@Base+0x1c90>
   13f64:	mov	r1, #1
   13f68:	mov	r0, r5
   13f6c:	str	r3, [sp, #28]
   13f70:	bl	17acc <argp_error@@Base+0x1444>
   13f74:	ldr	r3, [sp, #28]
   13f78:	cmp	r0, #0
   13f7c:	beq	13bfc <argp_parse@@Base+0x1be4>
   13f80:	ldr	r2, [r5, #28]
   13f84:	b	13bec <argp_parse@@Base+0x1bd4>
   13f88:	mov	r1, #1
   13f8c:	mov	r0, r5
   13f90:	str	r3, [sp, #24]
   13f94:	bl	17acc <argp_error@@Base+0x1444>
   13f98:	ldr	r3, [sp, #24]
   13f9c:	cmp	r0, #0
   13fa0:	beq	13c90 <argp_parse@@Base+0x1c78>
   13fa4:	ldr	r2, [r5, #28]
   13fa8:	b	13c80 <argp_parse@@Base+0x1c68>
   13fac:	str	r4, [sp, #20]
   13fb0:	str	r4, [sp, #24]
   13fb4:	b	13ba8 <argp_parse@@Base+0x1b90>
   13fb8:	ldr	r0, [r5, #28]
   13fbc:	mov	r2, r4
   13fc0:	mov	r1, sl
   13fc4:	bl	11194 <memcpy@plt>
   13fc8:	ldr	r3, [r5, #28]
   13fcc:	add	r4, r3, r4
   13fd0:	str	r4, [r5, #28]
   13fd4:	b	13d54 <argp_parse@@Base+0x1d3c>
   13fd8:	mov	r0, r5
   13fdc:	bl	1743c <argp_error@@Base+0xdb4>
   13fe0:	b	13d74 <argp_parse@@Base+0x1d5c>
   13fe4:	cmp	sl, #0
   13fe8:	beq	14068 <argp_parse@@Base+0x2050>
   13fec:	str	r3, [sp, #20]
   13ff0:	str	r3, [sp, #24]
   13ff4:	mov	r4, r3
   13ff8:	str	r3, [sp, #12]
   13ffc:	mov	r3, sl
   14000:	b	13bd4 <argp_parse@@Base+0x1bbc>
   14004:	mov	sl, r0
   14008:	b	13e44 <argp_parse@@Base+0x1e2c>
   1400c:	adds	r3, r4, #0
   14010:	movne	r3, #1
   14014:	str	r3, [sp, #24]
   14018:	str	r3, [sp, #20]
   1401c:	str	r6, [sp, #12]
   14020:	mov	r3, sl
   14024:	b	13bd4 <argp_parse@@Base+0x1bbc>
   14028:	mov	r1, #1
   1402c:	mov	r0, r5
   14030:	bl	17acc <argp_error@@Base+0x1444>
   14034:	cmp	r0, #0
   14038:	beq	13f14 <argp_parse@@Base+0x1efc>
   1403c:	ldr	r3, [r5, #28]
   14040:	b	13d98 <argp_parse@@Base+0x1d80>
   14044:	mov	r1, #1
   14048:	mov	r0, r5
   1404c:	bl	17acc <argp_error@@Base+0x1444>
   14050:	cmp	r0, #0
   14054:	beq	13d1c <argp_parse@@Base+0x1d04>
   14058:	ldr	r3, [r5, #28]
   1405c:	b	13d0c <argp_parse@@Base+0x1cf4>
   14060:	mov	r4, #1
   14064:	b	13e2c <argp_parse@@Base+0x1e14>
   14068:	mov	r4, sl
   1406c:	str	r4, [sp, #12]
   14070:	b	13cc8 <argp_parse@@Base+0x1cb0>
   14074:	cmp	r3, #0
   14078:	beq	140a4 <argp_parse@@Base+0x208c>
   1407c:	mov	r1, r9
   14080:	mov	r0, fp
   14084:	bl	12d54 <argp_parse@@Base+0xd3c>
   14088:	mov	r4, r6
   1408c:	ldr	r3, [fp, #20]
   14090:	str	r6, [sp, #20]
   14094:	str	r6, [sp, #24]
   14098:	str	r0, [sp, #12]
   1409c:	ldr	r0, [pc, #24]	; 140bc <argp_parse@@Base+0x20a4>
   140a0:	b	13bc0 <argp_parse@@Base+0x1ba8>
   140a4:	mov	r3, sl
   140a8:	str	r6, [sp, #20]
   140ac:	str	r6, [sp, #24]
   140b0:	mov	r4, r6
   140b4:	str	r6, [sp, #12]
   140b8:	b	13bd4 <argp_parse@@Base+0x1bbc>
   140bc:	andeq	r0, r0, #1
   140c0:	andeq	r0, r0, #4
   140c4:	andeq	r0, r0, #2
   140c8:	ldr	r3, [r0, #12]
   140cc:	ldr	r2, [r1, #12]
   140d0:	push	{r4, r5, r6, lr}
   140d4:	cmp	r3, r2
   140d8:	beq	14128 <argp_parse@@Base+0x2110>
   140dc:	mov	r5, r1
   140e0:	mov	r4, r0
   140e4:	mov	r1, r2
   140e8:	mov	r0, r3
   140ec:	bl	140c8 <argp_parse@@Base+0x20b0>
   140f0:	cmp	r0, #0
   140f4:	popne	{r4, r5, r6, pc}
   140f8:	ldr	r3, [r5, #8]
   140fc:	ldr	r0, [r4, #8]
   14100:	mvn	r2, r3
   14104:	lsr	r2, r2, #31
   14108:	cmp	r2, r0, lsr #31
   1410c:	subne	r0, r0, r3
   14110:	subeq	r0, r3, r0
   14114:	cmp	r0, #0
   14118:	ldreq	r3, [r5, #4]
   1411c:	ldreq	r0, [r4, #4]
   14120:	subeq	r0, r3, r0
   14124:	pop	{r4, r5, r6, pc}
   14128:	ldr	r3, [r1, #8]
   1412c:	ldr	r2, [r0, #8]
   14130:	mvn	ip, r3
   14134:	ldr	lr, [r1, #4]
   14138:	lsr	ip, ip, #31
   1413c:	cmp	ip, r2, lsr #31
   14140:	ldr	r1, [r0, #4]
   14144:	subne	r0, r2, r3
   14148:	subeq	r0, r3, r2
   1414c:	cmp	r0, #0
   14150:	subeq	r0, lr, r1
   14154:	pop	{r4, r5, r6, pc}
   14158:	push	{r4, r5, r6, r7, r8, r9, lr}
   1415c:	sub	sp, sp, #12
   14160:	ldr	lr, [r0, #16]
   14164:	cmp	lr, #0
   14168:	movne	r2, lr
   1416c:	bne	14178 <argp_parse@@Base+0x2160>
   14170:	b	1443c <argp_parse@@Base+0x2424>
   14174:	mov	r2, r3
   14178:	ldr	r3, [r2, #12]
   1417c:	cmp	r3, #0
   14180:	bne	14174 <argp_parse@@Base+0x215c>
   14184:	ldr	ip, [r1, #16]
   14188:	ldr	r4, [r2, #8]
   1418c:	cmp	ip, #0
   14190:	movne	r2, ip
   14194:	bne	141a0 <argp_parse@@Base+0x2188>
   14198:	b	14450 <argp_parse@@Base+0x2438>
   1419c:	mov	r2, r3
   141a0:	ldr	r3, [r2, #12]
   141a4:	cmp	r3, #0
   141a8:	bne	1419c <argp_parse@@Base+0x2184>
   141ac:	ldr	r3, [r2, #8]
   141b0:	mvn	r2, r3
   141b4:	lsr	r2, r2, #31
   141b8:	cmp	r2, r4, lsr #31
   141bc:	subne	r4, r4, r3
   141c0:	subeq	r4, r3, r4
   141c4:	cmp	r4, #0
   141c8:	bne	14230 <argp_parse@@Base+0x2218>
   141cc:	adds	r4, ip, #0
   141d0:	movne	r4, #1
   141d4:	cmp	lr, #0
   141d8:	rsbeq	r4, r4, #0
   141dc:	rsbne	r4, r4, #1
   141e0:	cmp	r4, #0
   141e4:	bne	14230 <argp_parse@@Base+0x2218>
   141e8:	cmp	lr, #0
   141ec:	mov	r5, r1
   141f0:	mov	r6, r0
   141f4:	beq	1424c <argp_parse@@Base+0x2234>
   141f8:	ldr	r0, [lr, #20]
   141fc:	ldr	r2, [ip, #20]
   14200:	cmp	r0, r2
   14204:	ble	14410 <argp_parse@@Base+0x23f8>
   14208:	mov	r0, lr
   1420c:	ldr	r0, [r0, #12]
   14210:	ldr	r3, [r0, #20]
   14214:	cmp	r2, r3
   14218:	blt	1420c <argp_parse@@Base+0x21f4>
   1421c:	mov	r1, ip
   14220:	bl	140c8 <argp_parse@@Base+0x20b0>
   14224:	cmp	r0, #0
   14228:	movne	r4, r0
   1422c:	moveq	r4, #1
   14230:	mov	r0, r4
   14234:	add	sp, sp, #12
   14238:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1423c:	mov	r0, lr
   14240:	bl	140c8 <argp_parse@@Base+0x20b0>
   14244:	subs	r4, r0, #0
   14248:	bne	14230 <argp_parse@@Base+0x2218>
   1424c:	ldr	r4, [r5, #12]
   14250:	ldr	r3, [r6, #12]
   14254:	mvn	r2, r4
   14258:	lsr	r2, r2, #31
   1425c:	cmp	r2, r3, lsr #31
   14260:	subne	r4, r3, r4
   14264:	subeq	r4, r4, r3
   14268:	cmp	r4, #0
   1426c:	bne	14230 <argp_parse@@Base+0x2218>
   14270:	ldr	r2, [r6, #4]
   14274:	ldr	lr, [r6]
   14278:	cmp	r2, #0
   1427c:	beq	142a8 <argp_parse@@Base+0x2290>
   14280:	add	r3, lr, #24
   14284:	ldr	r1, [r3, #-24]	; 0xffffffe8
   14288:	cmp	r1, #0
   1428c:	beq	1429c <argp_parse@@Base+0x2284>
   14290:	ldr	r0, [r3, #-12]
   14294:	tst	r0, #2
   14298:	beq	14458 <argp_parse@@Base+0x2440>
   1429c:	subs	r2, r2, #1
   142a0:	add	r3, r3, #24
   142a4:	bne	14284 <argp_parse@@Base+0x226c>
   142a8:	ldr	r2, [r5, #4]
   142ac:	mov	ip, #0
   142b0:	cmp	r2, ip
   142b4:	str	ip, [sp]
   142b8:	ldr	r3, [r5]
   142bc:	beq	144c8 <argp_parse@@Base+0x24b0>
   142c0:	add	r3, r3, #24
   142c4:	ldr	r1, [r3, #-24]	; 0xffffffe8
   142c8:	cmp	r1, #0
   142cc:	beq	142dc <argp_parse@@Base+0x22c4>
   142d0:	ldr	r0, [r3, #-12]
   142d4:	tst	r0, #2
   142d8:	beq	142ec <argp_parse@@Base+0x22d4>
   142dc:	subs	r2, r2, #1
   142e0:	add	r3, r3, #24
   142e4:	bne	142c4 <argp_parse@@Base+0x22ac>
   142e8:	mov	r1, r2
   142ec:	ldr	r3, [lr, #12]
   142f0:	str	r1, [sp, #4]
   142f4:	ands	r3, ip, r3, lsr #3
   142f8:	beq	144c0 <argp_parse@@Base+0x24a8>
   142fc:	mov	r0, sp
   14300:	bl	135c8 <argp_parse@@Base+0x15b0>
   14304:	ldr	r3, [r5]
   14308:	cmp	r0, #0
   1430c:	bne	144ac <argp_parse@@Base+0x2494>
   14310:	ldr	r3, [r3, #12]
   14314:	tst	r3, #8
   14318:	beq	14340 <argp_parse@@Base+0x2328>
   1431c:	ldr	r3, [sp, #4]
   14320:	cmp	r3, #0
   14324:	beq	14340 <argp_parse@@Base+0x2328>
   14328:	add	r0, sp, #4
   1432c:	bl	135c8 <argp_parse@@Base+0x15b0>
   14330:	cmp	r0, #0
   14334:	subne	r4, r4, #1
   14338:	cmp	r4, #0
   1433c:	bne	14230 <argp_parse@@Base+0x2218>
   14340:	ldr	r2, [r6, #20]
   14344:	mov	r0, r6
   14348:	mov	r3, #0
   1434c:	ldr	r2, [r2, #24]
   14350:	ldr	r1, [pc, #408]	; 144f0 <argp_parse@@Base+0x24d8>
   14354:	bl	1348c <argp_parse@@Base+0x1474>
   14358:	ldr	r2, [r5, #20]
   1435c:	mov	r3, #0
   14360:	ldr	r1, [pc, #392]	; 144f0 <argp_parse@@Base+0x24d8>
   14364:	ldr	r2, [r2, #24]
   14368:	uxtb	r6, r0
   1436c:	mov	r0, r5
   14370:	bl	1348c <argp_parse@@Base+0x1474>
   14374:	cmp	r6, #0
   14378:	lslne	r4, r6, #2
   1437c:	movne	r7, r6
   14380:	uxtb	r5, r0
   14384:	beq	14490 <argp_parse@@Base+0x2478>
   14388:	cmp	r5, #0
   1438c:	lslne	r9, r5, #2
   14390:	movne	r8, r5
   14394:	beq	14474 <argp_parse@@Base+0x245c>
   14398:	bl	11284 <__ctype_tolower_loc@plt>
   1439c:	ldr	r3, [r0]
   143a0:	ldr	r4, [r3, r4]
   143a4:	ldr	r3, [r3, r9]
   143a8:	subs	r4, r4, r3
   143ac:	bne	14230 <argp_parse@@Base+0x2218>
   143b0:	subs	r4, r8, r7
   143b4:	bne	14230 <argp_parse@@Base+0x2218>
   143b8:	adds	r4, r5, #0
   143bc:	movne	r4, #1
   143c0:	cmp	r6, #0
   143c4:	rsbeq	r4, r4, #0
   143c8:	rsbne	r4, r4, #1
   143cc:	cmp	r4, #0
   143d0:	bne	14230 <argp_parse@@Base+0x2218>
   143d4:	cmp	r6, #0
   143d8:	bne	14230 <argp_parse@@Base+0x2218>
   143dc:	ldm	sp, {r0, r1}
   143e0:	adds	r4, r1, #0
   143e4:	movne	r4, #1
   143e8:	cmp	r0, #0
   143ec:	rsbeq	r4, r4, #0
   143f0:	rsbne	r4, r4, #1
   143f4:	cmp	r4, #0
   143f8:	bne	14230 <argp_parse@@Base+0x2218>
   143fc:	cmp	r0, #0
   14400:	beq	14230 <argp_parse@@Base+0x2218>
   14404:	bl	11200 <strcasecmp@plt>
   14408:	mov	r4, r0
   1440c:	b	14230 <argp_parse@@Base+0x2218>
   14410:	mov	r1, ip
   14414:	bge	1423c <argp_parse@@Base+0x2224>
   14418:	ldr	r1, [r1, #12]
   1441c:	ldr	r3, [r1, #20]
   14420:	cmp	r0, r3
   14424:	blt	14418 <argp_parse@@Base+0x2400>
   14428:	mov	r0, lr
   1442c:	bl	140c8 <argp_parse@@Base+0x20b0>
   14430:	subs	r4, r0, #0
   14434:	mvneq	r4, #0
   14438:	b	14230 <argp_parse@@Base+0x2218>
   1443c:	ldr	ip, [r1, #16]
   14440:	ldr	r4, [r0, #12]
   14444:	cmp	ip, #0
   14448:	movne	r2, ip
   1444c:	bne	141a0 <argp_parse@@Base+0x2188>
   14450:	ldr	r3, [r1, #12]
   14454:	b	141b0 <argp_parse@@Base+0x2198>
   14458:	ldr	r2, [r5, #4]
   1445c:	str	r1, [sp]
   14460:	cmp	r2, #0
   14464:	ldr	r3, [r5]
   14468:	beq	144d0 <argp_parse@@Base+0x24b8>
   1446c:	mov	ip, #1
   14470:	b	142c0 <argp_parse@@Base+0x22a8>
   14474:	ldr	r3, [sp, #4]
   14478:	cmp	r3, #0
   1447c:	moveq	r9, r5
   14480:	ldrbne	r8, [r3]
   14484:	moveq	r8, r5
   14488:	lslne	r9, r8, #2
   1448c:	b	14398 <argp_parse@@Base+0x2380>
   14490:	ldr	r3, [sp]
   14494:	cmp	r3, #0
   14498:	moveq	r4, r6
   1449c:	ldrbne	r7, [r3]
   144a0:	moveq	r7, r6
   144a4:	lslne	r4, r7, #2
   144a8:	b	14388 <argp_parse@@Base+0x2370>
   144ac:	ldr	r3, [r3, #12]
   144b0:	tst	r3, #8
   144b4:	bne	144dc <argp_parse@@Base+0x24c4>
   144b8:	mov	r4, #1
   144bc:	b	14230 <argp_parse@@Base+0x2218>
   144c0:	ldr	r3, [r5]
   144c4:	b	14310 <argp_parse@@Base+0x22f8>
   144c8:	str	r2, [sp, #4]
   144cc:	b	14340 <argp_parse@@Base+0x2328>
   144d0:	mov	r1, r2
   144d4:	mov	ip, #1
   144d8:	b	142ec <argp_parse@@Base+0x22d4>
   144dc:	ldr	r3, [sp, #4]
   144e0:	mov	r4, #1
   144e4:	cmp	r3, #0
   144e8:	bne	14328 <argp_parse@@Base+0x2310>
   144ec:	b	14230 <argp_parse@@Base+0x2218>
   144f0:	andeq	r3, r1, r4, lsl #11
   144f4:	ldr	r3, [r0, #28]
   144f8:	ldr	r2, [r0, #24]
   144fc:	push	{r4, r5, r6, lr}
   14500:	mov	r5, r1
   14504:	ldr	r1, [r0, #16]
   14508:	sub	r2, r3, r2
   1450c:	cmp	r2, r1
   14510:	mov	r4, r0
   14514:	movls	r2, r3
   14518:	bhi	14574 <argp_parse@@Base+0x255c>
   1451c:	ldr	r1, [r4, #20]
   14520:	ldr	r0, [r4, #8]
   14524:	cmp	r1, #0
   14528:	addge	r5, r5, r1
   1452c:	cmp	r5, r0
   14530:	bcc	14554 <argp_parse@@Base+0x253c>
   14534:	ldr	r1, [r4, #32]
   14538:	cmp	r1, r3
   1453c:	bls	14584 <argp_parse@@Base+0x256c>
   14540:	add	r1, r2, #1
   14544:	mov	r3, #10
   14548:	str	r1, [r4, #28]
   1454c:	strb	r3, [r2]
   14550:	pop	{r4, r5, r6, pc}
   14554:	ldr	r2, [r4, #32]
   14558:	cmp	r2, r3
   1455c:	bls	145a0 <argp_parse@@Base+0x2588>
   14560:	add	r1, r3, #1
   14564:	mov	r2, #32
   14568:	str	r1, [r4, #28]
   1456c:	strb	r2, [r3]
   14570:	pop	{r4, r5, r6, pc}
   14574:	bl	1743c <argp_error@@Base+0xdb4>
   14578:	ldr	r3, [r4, #28]
   1457c:	mov	r2, r3
   14580:	b	1451c <argp_parse@@Base+0x2504>
   14584:	mov	r1, #1
   14588:	mov	r0, r4
   1458c:	bl	17acc <argp_error@@Base+0x1444>
   14590:	cmp	r0, #0
   14594:	popeq	{r4, r5, r6, pc}
   14598:	ldr	r2, [r4, #28]
   1459c:	b	14540 <argp_parse@@Base+0x2528>
   145a0:	mov	r1, #1
   145a4:	mov	r0, r4
   145a8:	bl	17acc <argp_error@@Base+0x1444>
   145ac:	cmp	r0, #0
   145b0:	popeq	{r4, r5, r6, pc}
   145b4:	ldr	r3, [r4, #28]
   145b8:	b	14560 <argp_parse@@Base+0x2548>
   145bc:	push	{r4, r5, r6, lr}
   145c0:	ldr	r5, [r0, #8]
   145c4:	ldr	r2, [r0, #12]
   145c8:	ldr	ip, [r1, #12]
   145cc:	cmp	r5, #0
   145d0:	orr	r2, r2, ip
   145d4:	beq	1463c <argp_parse@@Base+0x2624>
   145d8:	tst	r2, #16
   145dc:	bne	14618 <argp_parse@@Base+0x2600>
   145e0:	tst	r2, #1
   145e4:	mov	r6, r3
   145e8:	mov	r4, r0
   145ec:	bne	14620 <argp_parse@@Base+0x2608>
   145f0:	mov	r0, r5
   145f4:	bl	112cc <strlen@plt>
   145f8:	add	r1, r0, #6
   145fc:	mov	r0, r6
   14600:	bl	144f4 <argp_parse@@Base+0x24dc>
   14604:	mov	r3, r5
   14608:	ldr	r2, [r4, #4]
   1460c:	mov	r0, r6
   14610:	ldr	r1, [pc, #56]	; 14650 <argp_parse@@Base+0x2638>
   14614:	bl	17aec <argp_error@@Base+0x1464>
   14618:	mov	r0, #0
   1461c:	pop	{r4, r5, r6, pc}
   14620:	ldr	r2, [r0, #4]
   14624:	mov	r3, r5
   14628:	mov	r0, r6
   1462c:	ldr	r1, [pc, #32]	; 14654 <argp_parse@@Base+0x263c>
   14630:	bl	17aec <argp_error@@Base+0x1464>
   14634:	mov	r0, #0
   14638:	pop	{r4, r5, r6, pc}
   1463c:	ldr	r5, [r1, #8]
   14640:	cmp	r5, #0
   14644:	bne	145d8 <argp_parse@@Base+0x25c0>
   14648:	mov	r0, #0
   1464c:	pop	{r4, r5, r6, pc}
   14650:	andeq	r8, r1, ip, asr #8
   14654:	andeq	r8, r1, r0, asr #8
   14658:	mov	ip, r0
   1465c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14660:	mov	r8, r2
   14664:	sub	sp, sp, #28
   14668:	mov	r2, ip
   1466c:	ldr	ip, [ip, #16]
   14670:	mov	r9, r1
   14674:	ldr	r1, [r0, #8]
   14678:	str	ip, [sp, #8]
   1467c:	ldr	ip, [r8]
   14680:	str	r1, [sp, #16]
   14684:	mov	r0, r1
   14688:	mov	r4, r3
   1468c:	ldr	r1, [pc, #456]	; 1485c <argp_parse@@Base+0x2844>
   14690:	mov	r3, r9
   14694:	mov	r5, ip
   14698:	str	ip, [sp, #20]
   1469c:	ldr	r6, [sp, #64]	; 0x40
   146a0:	bl	13720 <argp_parse@@Base+0x1708>
   146a4:	subs	r3, r0, #0
   146a8:	str	r3, [sp, #12]
   146ac:	beq	14808 <argp_parse@@Base+0x27f0>
   146b0:	mov	r1, #10
   146b4:	bl	11164 <strchrnul@plt>
   146b8:	ldrb	sl, [r0]
   146bc:	mov	r7, r0
   146c0:	cmp	sl, #0
   146c4:	bne	147c4 <argp_parse@@Base+0x27ac>
   146c8:	ldr	r5, [sp, #12]
   146cc:	add	r1, r7, #1
   146d0:	sub	r1, r1, r5
   146d4:	mov	r0, r6
   146d8:	bl	144f4 <argp_parse@@Base+0x24dc>
   146dc:	ldr	r0, [r6, #28]
   146e0:	sub	fp, r7, r5
   146e4:	ldr	r1, [r6, #32]
   146e8:	add	r2, r0, fp
   146ec:	cmp	r1, r2
   146f0:	bcs	1470c <argp_parse@@Base+0x26f4>
   146f4:	mov	r1, fp
   146f8:	mov	r0, r6
   146fc:	bl	17acc <argp_error@@Base+0x1444>
   14700:	cmp	r0, #0
   14704:	beq	14724 <argp_parse@@Base+0x270c>
   14708:	ldr	r0, [r6, #28]
   1470c:	mov	r2, fp
   14710:	mov	r1, r5
   14714:	bl	11194 <memcpy@plt>
   14718:	ldr	r3, [r6, #28]
   1471c:	add	fp, r3, fp
   14720:	str	fp, [r6, #28]
   14724:	ldr	r3, [sp, #16]
   14728:	ldr	r2, [sp, #12]
   1472c:	cmp	r3, r2
   14730:	beq	1473c <argp_parse@@Base+0x2724>
   14734:	mov	r0, r2
   14738:	bl	12eb0 <argp_parse@@Base+0xe98>
   1473c:	ldr	r3, [sp, #8]
   14740:	cmp	r3, #0
   14744:	beq	14788 <argp_parse@@Base+0x2770>
   14748:	ldr	r2, [r3]
   1474c:	cmp	r2, #0
   14750:	beq	14788 <argp_parse@@Base+0x2770>
   14754:	ldr	r5, [sp, #8]
   14758:	mov	r3, r4
   1475c:	mov	r0, r2
   14760:	str	r6, [sp]
   14764:	mov	r2, r8
   14768:	mov	r1, r9
   1476c:	bl	14658 <argp_parse@@Base+0x2640>
   14770:	ldr	r2, [r5, #16]!
   14774:	cmp	r2, #0
   14778:	clz	r3, r0
   1477c:	lsr	r3, r3, #5
   14780:	bne	1475c <argp_parse@@Base+0x2744>
   14784:	mov	r4, r3
   14788:	cmp	r4, #0
   1478c:	moveq	sl, #0
   14790:	andne	sl, sl, #1
   14794:	cmp	sl, #0
   14798:	beq	14828 <argp_parse@@Base+0x2810>
   1479c:	ldrb	r0, [r7]
   147a0:	cmp	r0, #0
   147a4:	bne	14838 <argp_parse@@Base+0x2820>
   147a8:	ldr	r3, [sp, #20]
   147ac:	ldrb	r4, [r3]
   147b0:	cmp	r4, #0
   147b4:	moveq	r0, r4
   147b8:	strbne	r0, [r3]
   147bc:	add	sp, sp, #28
   147c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147c4:	ldrb	sl, [r5]
   147c8:	cmp	sl, #0
   147cc:	beq	14854 <argp_parse@@Base+0x283c>
   147d0:	mov	fp, #0
   147d4:	add	r5, r0, #1
   147d8:	add	fp, fp, #1
   147dc:	mov	r0, r5
   147e0:	mov	r1, #10
   147e4:	bl	11164 <strchrnul@plt>
   147e8:	cmp	fp, sl
   147ec:	bne	147d4 <argp_parse@@Base+0x27bc>
   147f0:	mov	r7, r0
   147f4:	ldr	r2, [r8]
   147f8:	mov	sl, #1
   147fc:	add	r2, r2, sl
   14800:	str	r2, [r8]
   14804:	b	146cc <argp_parse@@Base+0x26b4>
   14808:	ldr	r3, [sp, #8]
   1480c:	cmp	r3, #0
   14810:	beq	14828 <argp_parse@@Base+0x2810>
   14814:	ldr	r2, [r3]
   14818:	cmp	r2, #0
   1481c:	ldrne	r7, [sp, #12]
   14820:	movne	sl, r7
   14824:	bne	14754 <argp_parse@@Base+0x273c>
   14828:	clz	r0, r4
   1482c:	lsr	r0, r0, #5
   14830:	add	sp, sp, #28
   14834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14838:	ldr	r2, [sp, #20]
   1483c:	mov	r0, #1
   14840:	ldrb	r3, [r2]
   14844:	add	r3, r3, r0
   14848:	strb	r3, [r2]
   1484c:	add	sp, sp, #28
   14850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14854:	ldr	r5, [sp, #12]
   14858:	b	147f4 <argp_parse@@Base+0x27dc>
   1485c:	andeq	r0, r0, #6
   14860:	ldr	r2, [r0, #8]
   14864:	cmp	r2, #0
   14868:	beq	14874 <argp_parse@@Base+0x285c>
   1486c:	mov	r0, #0
   14870:	bx	lr
   14874:	ldr	r2, [r1, #8]
   14878:	cmp	r2, #0
   1487c:	bne	1486c <argp_parse@@Base+0x2854>
   14880:	ldr	r1, [r1, #12]
   14884:	ldr	r2, [r0, #12]
   14888:	orr	r2, r2, r1
   1488c:	tst	r2, #16
   14890:	ldreq	r2, [r3]
   14894:	ldreq	r1, [r0, #4]
   14898:	addeq	r0, r2, #1
   1489c:	streq	r0, [r3]
   148a0:	strbeq	r1, [r2]
   148a4:	b	1486c <argp_parse@@Base+0x2854>
   148a8:	mov	r3, r0
   148ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148b0:	sub	sp, sp, #52	; 0x34
   148b4:	ldr	r2, [r3, #16]
   148b8:	str	r0, [sp, #24]
   148bc:	mov	r0, #16
   148c0:	ldr	r4, [r3]
   148c4:	str	r1, [sp, #28]
   148c8:	str	r2, [sp, #8]
   148cc:	bl	13460 <argp_parse@@Base+0x1448>
   148d0:	subs	r3, r0, #0
   148d4:	str	r3, [sp, #20]
   148d8:	beq	14f3c <argp_parse@@Base+0x2f24>
   148dc:	ldr	r2, [sp, #20]
   148e0:	mov	r3, #0
   148e4:	cmp	r4, #0
   148e8:	str	r3, [r2, #4]
   148ec:	str	r3, [r2, #12]
   148f0:	beq	14af4 <argp_parse@@Base+0x2adc>
   148f4:	ldr	r5, [r4, #12]
   148f8:	ands	r5, r5, #4
   148fc:	bne	14f50 <argp_parse@@Base+0x2f38>
   14900:	add	r6, r4, #24
   14904:	mov	r9, r5
   14908:	mov	sl, r5
   1490c:	mov	fp, r2
   14910:	b	14954 <argp_parse@@Base+0x293c>
   14914:	ldr	r3, [r6, #-12]
   14918:	tst	r3, #4
   1491c:	addeq	r9, r9, #1
   14920:	streq	r9, [fp, #4]
   14924:	tst	r3, #8
   14928:	bne	14950 <argp_parse@@Base+0x2938>
   1492c:	sub	r3, r8, #1
   14930:	cmp	r3, #254	; 0xfe
   14934:	bhi	14950 <argp_parse@@Base+0x2938>
   14938:	bl	112a8 <__ctype_b_loc@plt>
   1493c:	lsl	r8, r8, #1
   14940:	ldr	r3, [r0]
   14944:	ldrh	r3, [r3, r8]
   14948:	tst	r3, #16384	; 0x4000
   1494c:	addne	sl, sl, #1
   14950:	add	r6, r6, #24
   14954:	ldr	r8, [r6, #-20]	; 0xffffffec
   14958:	cmp	r8, #0
   1495c:	bne	14914 <argp_parse@@Base+0x28fc>
   14960:	ldr	r3, [r6, #-24]	; 0xffffffe8
   14964:	cmp	r3, #0
   14968:	bne	14914 <argp_parse@@Base+0x28fc>
   1496c:	ldr	r3, [r6, #-8]
   14970:	cmp	r3, #0
   14974:	bne	14914 <argp_parse@@Base+0x28fc>
   14978:	ldr	r7, [r6, #-4]
   1497c:	cmp	r7, #0
   14980:	bne	14914 <argp_parse@@Base+0x28fc>
   14984:	rsb	r9, r9, r9, lsl #3
   14988:	lsl	r0, r9, #2
   1498c:	bl	13460 <argp_parse@@Base+0x1448>
   14990:	ldr	r6, [sp, #20]
   14994:	str	r0, [r6]
   14998:	add	r0, sl, #1
   1499c:	bl	13460 <argp_parse@@Base+0x1448>
   149a0:	ldr	r8, [r6]
   149a4:	mov	r3, r6
   149a8:	cmp	r0, #0
   149ac:	cmpne	r8, #0
   149b0:	mov	sl, r0
   149b4:	str	r0, [r3, #8]
   149b8:	beq	14f00 <argp_parse@@Base+0x2ee8>
   149bc:	ldr	r2, [sp, #20]
   149c0:	ldr	r3, [pc, #1436]	; 14f64 <argp_parse@@Base+0x2f4c>
   149c4:	ldr	r2, [r2, #4]
   149c8:	cmp	r2, r3
   149cc:	bhi	14eec <argp_parse@@Base+0x2ed4>
   149d0:	add	r8, r8, #28
   149d4:	mov	r2, r8
   149d8:	ldr	r3, [r4, #4]
   149dc:	mov	r8, sl
   149e0:	mov	r9, r2
   149e4:	cmp	r3, #0
   149e8:	bne	149f8 <argp_parse@@Base+0x29e0>
   149ec:	ldr	r2, [r4]
   149f0:	cmp	r2, #0
   149f4:	beq	14ea4 <argp_parse@@Base+0x2e8c>
   149f8:	str	r7, [r9, #-24]	; 0xffffffe8
   149fc:	ldr	r6, [r4, #20]
   14a00:	str	r4, [r9, #-28]	; 0xffffffe4
   14a04:	cmp	r6, #0
   14a08:	str	sl, [r9, #-20]	; 0xffffffec
   14a0c:	bne	14a24 <argp_parse@@Base+0x2a0c>
   14a10:	ldr	r2, [r4]
   14a14:	cmp	r2, #0
   14a18:	cmpeq	r3, #0
   14a1c:	movne	r6, r5
   14a20:	beq	14ec8 <argp_parse@@Base+0x2eb0>
   14a24:	ldr	r1, [sp, #28]
   14a28:	str	r6, [r9, #-16]
   14a2c:	mov	r5, r4
   14a30:	ldr	r2, [r4, #12]
   14a34:	mov	r3, r7
   14a38:	str	r1, [r9, #-12]
   14a3c:	ldr	r1, [sp, #24]
   14a40:	str	r1, [r9, #-8]
   14a44:	add	r3, r3, #1
   14a48:	tst	r2, #8
   14a4c:	str	r3, [r9, #-24]	; 0xffffffe8
   14a50:	bne	14abc <argp_parse@@Base+0x2aa4>
   14a54:	ldr	fp, [r4, #4]
   14a58:	sub	r3, fp, #1
   14a5c:	cmp	r3, #254	; 0xfe
   14a60:	bhi	14abc <argp_parse@@Base+0x2aa4>
   14a64:	bl	112a8 <__ctype_b_loc@plt>
   14a68:	lsl	r3, fp, #1
   14a6c:	ldr	r2, [r0]
   14a70:	ldrh	r3, [r2, r3]
   14a74:	tst	r3, #16384	; 0x4000
   14a78:	beq	14abc <argp_parse@@Base+0x2aa4>
   14a7c:	cmp	r8, sl
   14a80:	uxtb	r1, fp
   14a84:	bcs	14ab4 <argp_parse@@Base+0x2a9c>
   14a88:	ldrb	r3, [r8]
   14a8c:	cmp	r3, r1
   14a90:	movne	r3, r8
   14a94:	subne	r0, sl, #1
   14a98:	bne	14aac <argp_parse@@Base+0x2a94>
   14a9c:	b	14abc <argp_parse@@Base+0x2aa4>
   14aa0:	ldrb	r2, [r3, #1]!
   14aa4:	cmp	r2, r1
   14aa8:	beq	14abc <argp_parse@@Base+0x2aa4>
   14aac:	cmp	r0, r3
   14ab0:	bne	14aa0 <argp_parse@@Base+0x2a88>
   14ab4:	strb	r1, [sl]
   14ab8:	add	sl, sl, #1
   14abc:	ldr	r3, [r5, #28]
   14ac0:	add	r4, r4, #24
   14ac4:	cmp	r3, #0
   14ac8:	bne	14ad8 <argp_parse@@Base+0x2ac0>
   14acc:	ldr	r2, [r5, #24]
   14ad0:	cmp	r2, #0
   14ad4:	beq	14e80 <argp_parse@@Base+0x2e68>
   14ad8:	ldr	r2, [r5, #36]	; 0x24
   14adc:	tst	r2, #4
   14ae0:	beq	14e98 <argp_parse@@Base+0x2e80>
   14ae4:	ldr	r3, [r9, #-24]	; 0xffffffe8
   14ae8:	mov	r5, r4
   14aec:	b	14a44 <argp_parse@@Base+0x2a2c>
   14af0:	strb	r3, [sl]
   14af4:	ldr	r3, [sp, #8]
   14af8:	cmp	r3, #0
   14afc:	beq	14c38 <argp_parse@@Base+0x2c20>
   14b00:	ldr	r3, [r3]
   14b04:	cmp	r3, #0
   14b08:	beq	14c38 <argp_parse@@Base+0x2c20>
   14b0c:	ldr	r3, [sp, #20]
   14b10:	add	r3, r3, #12
   14b14:	str	r3, [sp, #44]	; 0x2c
   14b18:	ldr	r3, [sp, #8]
   14b1c:	ldr	r5, [r3, #12]
   14b20:	cmp	r5, #0
   14b24:	ldrne	r6, [r3, #8]
   14b28:	bne	14b3c <argp_parse@@Base+0x2b24>
   14b2c:	ldr	r3, [sp, #8]
   14b30:	ldr	r6, [r3, #8]
   14b34:	cmp	r6, #0
   14b38:	beq	14e60 <argp_parse@@Base+0x2e48>
   14b3c:	ldr	r7, [sp, #24]
   14b40:	ldr	r2, [sp, #8]
   14b44:	mov	r0, #28
   14b48:	ldr	r3, [r7, #16]
   14b4c:	sub	r3, r2, r3
   14b50:	asr	r4, r3, #4
   14b54:	bl	13460 <argp_parse@@Base+0x1448>
   14b58:	subs	r1, r0, #0
   14b5c:	beq	14b9c <argp_parse@@Base+0x2b84>
   14b60:	ldr	r3, [sp, #28]
   14b64:	ldr	r0, [sp, #20]
   14b68:	cmp	r3, #0
   14b6c:	str	r3, [r1, #12]
   14b70:	ldrne	r3, [r3, #20]
   14b74:	ldr	r2, [r0, #12]
   14b78:	addne	r3, r3, #1
   14b7c:	moveq	r3, #0
   14b80:	str	r5, [r1, #8]
   14b84:	str	r6, [r1]
   14b88:	str	r4, [r1, #4]
   14b8c:	str	r7, [r1, #16]
   14b90:	str	r3, [r1, #20]
   14b94:	str	r2, [r1, #24]
   14b98:	str	r1, [r0, #12]
   14b9c:	ldr	r3, [sp, #8]
   14ba0:	ldr	r0, [r3]
   14ba4:	bl	148a8 <argp_parse@@Base+0x2890>
   14ba8:	ldr	r3, [sp, #20]
   14bac:	ldr	r2, [r3, #12]
   14bb0:	cmp	r2, #0
   14bb4:	str	r0, [sp, #16]
   14bb8:	bne	14bc4 <argp_parse@@Base+0x2bac>
   14bbc:	b	14e68 <argp_parse@@Base+0x2e50>
   14bc0:	mov	r2, r3
   14bc4:	ldr	r3, [r2, #24]
   14bc8:	cmp	r3, #0
   14bcc:	bne	14bc0 <argp_parse@@Base+0x2ba8>
   14bd0:	add	r2, r2, #24
   14bd4:	ldr	r0, [sp, #16]
   14bd8:	mov	ip, r0
   14bdc:	ldr	r3, [r0, #4]
   14be0:	ldr	r1, [r0, #12]
   14be4:	cmp	r3, #0
   14be8:	str	r1, [r2]
   14bec:	mov	r2, #0
   14bf0:	str	r2, [r0, #12]
   14bf4:	beq	14c1c <argp_parse@@Base+0x2c04>
   14bf8:	ldr	lr, [sp, #20]
   14bfc:	ldr	r2, [lr, #4]
   14c00:	cmp	r2, #0
   14c04:	bne	14c44 <argp_parse@@Base+0x2c2c>
   14c08:	ldr	r0, [r0]
   14c0c:	ldr	r1, [ip, #8]
   14c10:	stm	lr, {r0, r3}
   14c14:	str	r1, [lr, #8]
   14c18:	str	r2, [ip, #4]
   14c1c:	ldr	r0, [sp, #16]
   14c20:	bl	13640 <argp_parse@@Base+0x1628>
   14c24:	ldr	r2, [sp, #8]
   14c28:	ldr	r3, [r2, #16]!
   14c2c:	cmp	r3, #0
   14c30:	str	r2, [sp, #8]
   14c34:	bne	14b18 <argp_parse@@Base+0x2b00>
   14c38:	ldr	r0, [sp, #20]
   14c3c:	add	sp, sp, #52	; 0x34
   14c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c44:	add	r3, r3, r2
   14c48:	str	r3, [sp, #36]	; 0x24
   14c4c:	rsb	r0, r3, r3, lsl #3
   14c50:	lsl	r0, r0, #2
   14c54:	bl	13460 <argp_parse@@Base+0x1448>
   14c58:	ldr	r3, [sp, #20]
   14c5c:	mov	r4, r0
   14c60:	str	r0, [sp, #32]
   14c64:	ldr	r0, [r3, #8]
   14c68:	bl	112cc <strlen@plt>
   14c6c:	ldr	r3, [sp, #16]
   14c70:	mov	r8, r0
   14c74:	ldr	r0, [r3, #8]
   14c78:	bl	112cc <strlen@plt>
   14c7c:	add	r0, r8, r0
   14c80:	add	r0, r0, #1
   14c84:	bl	13460 <argp_parse@@Base+0x1448>
   14c88:	cmp	r4, #0
   14c8c:	cmpne	r0, #0
   14c90:	mov	r7, r0
   14c94:	beq	14f14 <argp_parse@@Base+0x2efc>
   14c98:	ldr	r3, [sp, #36]	; 0x24
   14c9c:	ldr	r2, [pc, #704]	; 14f64 <argp_parse@@Base+0x2f4c>
   14ca0:	cmp	r3, r2
   14ca4:	bhi	14f28 <argp_parse@@Base+0x2f10>
   14ca8:	ldr	r5, [sp, #20]
   14cac:	ldr	r9, [sp, #32]
   14cb0:	ldm	r5, {r3, r4}
   14cb4:	mov	r0, r9
   14cb8:	rsb	r6, r4, r4, lsl #3
   14cbc:	mov	r1, r3
   14cc0:	lsl	r6, r6, #2
   14cc4:	mov	r2, r6
   14cc8:	str	r3, [sp, #40]	; 0x28
   14ccc:	bl	1129c <mempcpy@plt>
   14cd0:	ldr	r3, [sp, #16]
   14cd4:	ldr	r1, [r3, #4]
   14cd8:	mov	ip, r1
   14cdc:	str	r1, [sp, #4]
   14ce0:	rsb	r2, ip, ip, lsl #3
   14ce4:	ldr	r1, [r3]
   14ce8:	lsl	r2, r2, #2
   14cec:	bl	11194 <memcpy@plt>
   14cf0:	ldr	r5, [r5, #8]
   14cf4:	mov	r2, r8
   14cf8:	mov	r1, r5
   14cfc:	mov	r0, r7
   14d00:	bl	11194 <memcpy@plt>
   14d04:	cmp	r4, #0
   14d08:	beq	14e78 <argp_parse@@Base+0x2e60>
   14d0c:	mov	r2, r9
   14d10:	ldr	r3, [r2, #8]
   14d14:	subs	r4, r4, #1
   14d18:	sub	r3, r3, r5
   14d1c:	add	r3, r7, r3
   14d20:	str	r3, [r2, #8]
   14d24:	add	r2, r2, #28
   14d28:	bne	14d10 <argp_parse@@Base+0x2cf8>
   14d2c:	ldr	r3, [sp, #32]
   14d30:	add	r1, r3, r6
   14d34:	ldr	r3, [sp, #4]
   14d38:	ldr	r2, [sp, #16]
   14d3c:	cmp	r3, #0
   14d40:	add	r3, r7, r8
   14d44:	str	r3, [sp, #12]
   14d48:	ldr	sl, [r2, #8]
   14d4c:	beq	14e70 <argp_parse@@Base+0x2e58>
   14d50:	sub	r8, r3, #1
   14d54:	add	fp, r1, #28
   14d58:	mov	r9, r3
   14d5c:	mov	r3, r8
   14d60:	mov	r8, fp
   14d64:	mov	fp, sl
   14d68:	mov	sl, r3
   14d6c:	ldr	r5, [r8, #-24]	; 0xffffffe8
   14d70:	str	r9, [r8, #-20]	; 0xffffffec
   14d74:	cmp	r5, #0
   14d78:	ldr	r4, [r8, #-28]	; 0xffffffe4
   14d7c:	bne	14d90 <argp_parse@@Base+0x2d78>
   14d80:	b	14e1c <argp_parse@@Base+0x2e04>
   14d84:	subs	r5, r5, #1
   14d88:	add	r4, r4, #24
   14d8c:	beq	14e1c <argp_parse@@Base+0x2e04>
   14d90:	ldr	r3, [r4, #12]
   14d94:	tst	r3, #8
   14d98:	bne	14d84 <argp_parse@@Base+0x2d6c>
   14d9c:	ldr	r6, [r4, #4]
   14da0:	sub	r3, r6, #1
   14da4:	cmp	r3, #254	; 0xfe
   14da8:	bhi	14d84 <argp_parse@@Base+0x2d6c>
   14dac:	bl	112a8 <__ctype_b_loc@plt>
   14db0:	lsl	r3, r6, #1
   14db4:	ldr	r2, [r0]
   14db8:	ldrh	r3, [r2, r3]
   14dbc:	tst	r3, #16384	; 0x4000
   14dc0:	beq	14d84 <argp_parse@@Base+0x2d6c>
   14dc4:	ldrb	r1, [fp]
   14dc8:	cmp	r1, r6
   14dcc:	bne	14d84 <argp_parse@@Base+0x2d6c>
   14dd0:	ldr	r3, [sp, #12]
   14dd4:	cmp	r7, r3
   14dd8:	bcs	14e04 <argp_parse@@Base+0x2dec>
   14ddc:	ldrb	r3, [r7]
   14de0:	cmp	r3, r1
   14de4:	movne	r3, r7
   14de8:	bne	14dfc <argp_parse@@Base+0x2de4>
   14dec:	b	14e0c <argp_parse@@Base+0x2df4>
   14df0:	ldrb	r2, [r3, #1]!
   14df4:	cmp	r2, r1
   14df8:	beq	14e0c <argp_parse@@Base+0x2df4>
   14dfc:	cmp	sl, r3
   14e00:	bne	14df0 <argp_parse@@Base+0x2dd8>
   14e04:	strb	r1, [r9]
   14e08:	add	r9, r9, #1
   14e0c:	subs	r5, r5, #1
   14e10:	add	fp, fp, #1
   14e14:	add	r4, r4, #24
   14e18:	bne	14d90 <argp_parse@@Base+0x2d78>
   14e1c:	ldr	r3, [sp, #4]
   14e20:	add	r8, r8, #28
   14e24:	subs	r3, r3, #1
   14e28:	str	r3, [sp, #4]
   14e2c:	bne	14d6c <argp_parse@@Base+0x2d54>
   14e30:	mov	r3, #0
   14e34:	strb	r3, [r9]
   14e38:	ldr	r0, [sp, #40]	; 0x28
   14e3c:	bl	12eb0 <argp_parse@@Base+0xe98>
   14e40:	ldr	r4, [sp, #20]
   14e44:	ldr	r0, [r4, #8]
   14e48:	bl	12eb0 <argp_parse@@Base+0xe98>
   14e4c:	ldr	r2, [sp, #32]
   14e50:	str	r2, [r4]
   14e54:	ldr	r2, [sp, #36]	; 0x24
   14e58:	stmib	r4, {r2, r7}
   14e5c:	b	14c1c <argp_parse@@Base+0x2c04>
   14e60:	ldr	r1, [sp, #28]
   14e64:	b	14b9c <argp_parse@@Base+0x2b84>
   14e68:	ldr	r2, [sp, #44]	; 0x2c
   14e6c:	b	14bd4 <argp_parse@@Base+0x2bbc>
   14e70:	ldr	r9, [sp, #12]
   14e74:	b	14e30 <argp_parse@@Base+0x2e18>
   14e78:	ldr	r1, [sp, #32]
   14e7c:	b	14d34 <argp_parse@@Base+0x2d1c>
   14e80:	ldr	r2, [r5, #40]	; 0x28
   14e84:	cmp	r2, #0
   14e88:	bne	14ad8 <argp_parse@@Base+0x2ac0>
   14e8c:	ldr	r2, [r5, #44]	; 0x2c
   14e90:	cmp	r2, #0
   14e94:	bne	14ad8 <argp_parse@@Base+0x2ac0>
   14e98:	add	r9, r9, #28
   14e9c:	mov	r5, r6
   14ea0:	b	149e4 <argp_parse@@Base+0x29cc>
   14ea4:	ldr	r2, [r4, #16]
   14ea8:	cmp	r2, #0
   14eac:	beq	14ed0 <argp_parse@@Base+0x2eb8>
   14eb0:	str	r3, [r9, #-24]	; 0xffffffe8
   14eb4:	ldr	r6, [r4, #20]
   14eb8:	str	r4, [r9, #-28]	; 0xffffffe4
   14ebc:	cmp	r6, #0
   14ec0:	str	sl, [r9, #-20]	; 0xffffffec
   14ec4:	bne	14a24 <argp_parse@@Base+0x2a0c>
   14ec8:	add	r6, r5, #1
   14ecc:	b	14a24 <argp_parse@@Base+0x2a0c>
   14ed0:	ldr	r6, [r4, #20]
   14ed4:	cmp	r6, #0
   14ed8:	beq	14af0 <argp_parse@@Base+0x2ad8>
   14edc:	str	r4, [r9, #-28]	; 0xffffffe4
   14ee0:	str	r3, [r9, #-24]	; 0xffffffe8
   14ee4:	str	sl, [r9, #-20]	; 0xffffffec
   14ee8:	b	14a24 <argp_parse@@Base+0x2a0c>
   14eec:	ldr	r3, [pc, #116]	; 14f68 <argp_parse@@Base+0x2f50>
   14ef0:	mov	r2, #476	; 0x1dc
   14ef4:	ldr	r1, [pc, #112]	; 14f6c <argp_parse@@Base+0x2f54>
   14ef8:	ldr	r0, [pc, #112]	; 14f70 <argp_parse@@Base+0x2f58>
   14efc:	bl	11428 <__assert_fail@plt>
   14f00:	ldr	r3, [pc, #96]	; 14f68 <argp_parse@@Base+0x2f50>
   14f04:	ldr	r2, [pc, #104]	; 14f74 <argp_parse@@Base+0x2f5c>
   14f08:	ldr	r1, [pc, #92]	; 14f6c <argp_parse@@Base+0x2f54>
   14f0c:	ldr	r0, [pc, #100]	; 14f78 <argp_parse@@Base+0x2f60>
   14f10:	bl	11428 <__assert_fail@plt>
   14f14:	ldr	r3, [pc, #96]	; 14f7c <argp_parse@@Base+0x2f64>
   14f18:	ldr	r2, [pc, #96]	; 14f80 <argp_parse@@Base+0x2f68>
   14f1c:	ldr	r1, [pc, #72]	; 14f6c <argp_parse@@Base+0x2f54>
   14f20:	ldr	r0, [pc, #92]	; 14f84 <argp_parse@@Base+0x2f6c>
   14f24:	bl	11428 <__assert_fail@plt>
   14f28:	ldr	r3, [pc, #76]	; 14f7c <argp_parse@@Base+0x2f64>
   14f2c:	mov	r2, #972	; 0x3cc
   14f30:	ldr	r1, [pc, #52]	; 14f6c <argp_parse@@Base+0x2f54>
   14f34:	ldr	r0, [pc, #76]	; 14f88 <argp_parse@@Base+0x2f70>
   14f38:	bl	11428 <__assert_fail@plt>
   14f3c:	ldr	r3, [pc, #36]	; 14f68 <argp_parse@@Base+0x2f50>
   14f40:	ldr	r2, [pc, #68]	; 14f8c <argp_parse@@Base+0x2f74>
   14f44:	ldr	r1, [pc, #32]	; 14f6c <argp_parse@@Base+0x2f54>
   14f48:	ldr	r0, [pc, #64]	; 14f90 <argp_parse@@Base+0x2f78>
   14f4c:	bl	11428 <__assert_fail@plt>
   14f50:	ldr	r3, [pc, #16]	; 14f68 <argp_parse@@Base+0x2f50>
   14f54:	mov	r2, #460	; 0x1cc
   14f58:	ldr	r1, [pc, #12]	; 14f6c <argp_parse@@Base+0x2f54>
   14f5c:	ldr	r0, [pc, #48]	; 14f94 <argp_parse@@Base+0x2f7c>
   14f60:	bl	11428 <__assert_fail@plt>
   14f64:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   14f68:	muleq	r1, r4, r3
   14f6c:	andeq	r8, r1, r8, asr r4
   14f70:	muleq	r1, ip, r4
   14f74:	ldrdeq	r0, [r0], -sl
   14f78:	andeq	r8, r1, r8, ror r4
   14f7c:	andeq	r8, r1, r0, lsr #7
   14f80:	andeq	r0, r0, sl, asr #7
   14f84:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   14f88:	strdeq	r8, [r1], -r4
   14f8c:	andeq	r0, r0, r2, asr #3
   14f90:	andeq	r8, r1, r4, ror #8
   14f94:	andeq	r8, r1, r8, ror #8
   14f98:	cmp	r1, #0
   14f9c:	push	{r4, r5, r6, r7, r8, lr}
   14fa0:	beq	15018 <argp_parse@@Base+0x3000>
   14fa4:	sub	r7, r1, #1
   14fa8:	mov	r8, r2
   14fac:	mov	r6, r0
   14fb0:	ldm	r6, {r4, r5}
   14fb4:	cmp	r5, #0
   14fb8:	sub	r5, r5, #1
   14fbc:	beq	14ffc <argp_parse@@Base+0x2fe4>
   14fc0:	add	r4, r4, #24
   14fc4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   14fc8:	mov	r1, r8
   14fcc:	subs	r0, r3, #0
   14fd0:	sub	r5, r5, #1
   14fd4:	beq	14ff0 <argp_parse@@Base+0x2fd8>
   14fd8:	ldr	r3, [r4, #-12]
   14fdc:	tst	r3, #2
   14fe0:	bne	14ff0 <argp_parse@@Base+0x2fd8>
   14fe4:	bl	1111c <strcmp@plt>
   14fe8:	cmp	r0, #0
   14fec:	beq	15010 <argp_parse@@Base+0x2ff8>
   14ff0:	cmn	r5, #1
   14ff4:	add	r4, r4, #24
   14ff8:	bne	14fc4 <argp_parse@@Base+0x2fac>
   14ffc:	sub	r7, r7, #1
   15000:	cmn	r7, #1
   15004:	add	r6, r6, #28
   15008:	bne	14fb0 <argp_parse@@Base+0x2f98>
   1500c:	mov	r6, #0
   15010:	mov	r0, r6
   15014:	pop	{r4, r5, r6, r7, r8, pc}
   15018:	mov	r6, r1
   1501c:	b	15010 <argp_parse@@Base+0x2ff8>
   15020:	push	{r4, r5, r6, lr}
   15024:	subs	r4, r0, #0
   15028:	mov	r5, r1
   1502c:	beq	15040 <argp_parse@@Base+0x3028>
   15030:	mov	r1, #10
   15034:	bl	112d8 <strchr@plt>
   15038:	adds	r4, r0, #0
   1503c:	movne	r4, #1
   15040:	cmp	r5, #0
   15044:	beq	15070 <argp_parse@@Base+0x3058>
   15048:	ldr	r3, [r5]
   1504c:	cmp	r3, #0
   15050:	beq	15070 <argp_parse@@Base+0x3058>
   15054:	ldr	r1, [r3, #16]
   15058:	ldr	r0, [r3, #8]
   1505c:	bl	15020 <argp_parse@@Base+0x3008>
   15060:	ldr	r3, [r5, #16]!
   15064:	cmp	r3, #0
   15068:	add	r4, r4, r0
   1506c:	bne	15054 <argp_parse@@Base+0x303c>
   15070:	mov	r0, r4
   15074:	pop	{r4, r5, r6, pc}
   15078:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1507c:	add	fp, sp, #32
   15080:	sub	sp, sp, #12
   15084:	ldr	r5, [r0, #4]
   15088:	cmp	r5, #0
   1508c:	bne	15098 <argp_parse@@Base+0x3080>
   15090:	sub	sp, fp, #32
   15094:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15098:	mov	r6, r0
   1509c:	ldr	r0, [r0, #8]
   150a0:	mov	r9, r1
   150a4:	bl	112cc <strlen@plt>
   150a8:	ldr	r8, [pc, #360]	; 15218 <argp_parse@@Base+0x3200>
   150ac:	ldr	r4, [r6]
   150b0:	sub	r7, fp, #36	; 0x24
   150b4:	add	r3, r0, #15
   150b8:	bic	r3, r3, #7
   150bc:	sub	sp, sp, r3
   150c0:	mov	sl, sp
   150c4:	str	sp, [r7, #-4]!
   150c8:	ldr	r2, [r4, #20]
   150cc:	mov	r0, r4
   150d0:	mov	r3, r7
   150d4:	mov	r1, r8
   150d8:	ldr	r2, [r2, #24]
   150dc:	bl	1348c <argp_parse@@Base+0x1474>
   150e0:	subs	r5, r5, #1
   150e4:	add	r4, r4, #28
   150e8:	bne	150c8 <argp_parse@@Base+0x30b0>
   150ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   150f0:	cmp	sl, r3
   150f4:	bcc	151f8 <argp_parse@@Base+0x31e0>
   150f8:	ldm	r6, {r4, r5}
   150fc:	cmp	r5, #0
   15100:	beq	15090 <argp_parse@@Base+0x3078>
   15104:	ldr	r7, [pc, #272]	; 1521c <argp_parse@@Base+0x3204>
   15108:	ldr	r2, [r4, #20]
   1510c:	mov	r0, r4
   15110:	mov	r3, r9
   15114:	mov	r1, r7
   15118:	ldr	r2, [r2, #24]
   1511c:	bl	1348c <argp_parse@@Base+0x1474>
   15120:	subs	r5, r5, #1
   15124:	add	r4, r4, #28
   15128:	bne	15108 <argp_parse@@Base+0x30f0>
   1512c:	ldm	r6, {r7, r8}
   15130:	cmp	r8, #0
   15134:	beq	15090 <argp_parse@@Base+0x3078>
   15138:	ldr	sl, [pc, #224]	; 15220 <argp_parse@@Base+0x3208>
   1513c:	add	r7, r7, #28
   15140:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15144:	ldr	r4, [r7, #-28]	; 0xffffffe4
   15148:	cmp	r5, #0
   1514c:	movne	r6, r4
   15150:	bne	15164 <argp_parse@@Base+0x314c>
   15154:	b	151c0 <argp_parse@@Base+0x31a8>
   15158:	subs	r5, r5, #1
   1515c:	add	r4, r4, #24
   15160:	beq	151c0 <argp_parse@@Base+0x31a8>
   15164:	ldr	r2, [r4]
   15168:	cmp	r2, #0
   1516c:	beq	15158 <argp_parse@@Base+0x3140>
   15170:	ldr	r1, [r4, #12]
   15174:	tst	r1, #4
   15178:	moveq	r6, r4
   1517c:	tst	r1, #2
   15180:	bne	15158 <argp_parse@@Base+0x3140>
   15184:	ldr	r3, [r4, #8]
   15188:	ldr	r0, [r6, #12]
   1518c:	cmp	r3, #0
   15190:	orr	r1, r1, r0
   15194:	beq	151d4 <argp_parse@@Base+0x31bc>
   15198:	tst	r1, #16
   1519c:	bne	15158 <argp_parse@@Base+0x3140>
   151a0:	tst	r1, #1
   151a4:	moveq	r1, sl
   151a8:	ldrne	r1, [pc, #116]	; 15224 <argp_parse@@Base+0x320c>
   151ac:	mov	r0, r9
   151b0:	bl	17aec <argp_error@@Base+0x1464>
   151b4:	subs	r5, r5, #1
   151b8:	add	r4, r4, #24
   151bc:	bne	15164 <argp_parse@@Base+0x314c>
   151c0:	subs	r8, r8, #1
   151c4:	add	r7, r7, #28
   151c8:	bne	15140 <argp_parse@@Base+0x3128>
   151cc:	sub	sp, fp, #32
   151d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151d4:	tst	r1, #16
   151d8:	bne	15158 <argp_parse@@Base+0x3140>
   151dc:	ldr	r3, [r6, #8]
   151e0:	cmp	r3, #0
   151e4:	bne	151a0 <argp_parse@@Base+0x3188>
   151e8:	ldr	r1, [pc, #56]	; 15228 <argp_parse@@Base+0x3210>
   151ec:	mov	r0, r9
   151f0:	bl	17aec <argp_error@@Base+0x1464>
   151f4:	b	15158 <argp_parse@@Base+0x3140>
   151f8:	add	r1, r3, #1
   151fc:	str	r1, [fp, #-40]	; 0xffffffd8
   15200:	mov	r2, sl
   15204:	ldr	r1, [pc, #32]	; 1522c <argp_parse@@Base+0x3214>
   15208:	strb	r5, [r3]
   1520c:	mov	r0, r9
   15210:	bl	17aec <argp_error@@Base+0x1464>
   15214:	b	150f8 <argp_parse@@Base+0x30e0>
   15218:	andeq	r4, r1, r0, ror #16
   1521c:			; <UNDEFINED> instruction: 0x000145bc
   15220:	andeq	r8, r1, r0, asr #10
   15224:	andeq	r8, r1, r0, lsr r5
   15228:	andeq	r8, r1, ip, asr #10
   1522c:	andeq	r8, r1, r8, lsr #10

00015230 <argp_failure@@Base>:
   15230:	push	{r3}		; (str r3, [sp, #-4]!)
   15234:	push	{r4, r5, r6, r7, lr}
   15238:	subs	r5, r0, #0
   1523c:	sub	sp, sp, #200	; 0xc8
   15240:	mov	r7, r1
   15244:	mov	r6, r2
   15248:	beq	15398 <argp_failure@@Base+0x168>
   1524c:	ldr	r3, [r5, #16]
   15250:	tst	r3, #2
   15254:	bne	15388 <argp_failure@@Base+0x158>
   15258:	ldr	r4, [r5, #44]	; 0x2c
   1525c:	cmp	r4, #0
   15260:	beq	15388 <argp_failure@@Base+0x158>
   15264:	mov	r0, r4
   15268:	bl	113c8 <flockfile@plt>
   1526c:	ldr	r0, [r5, #40]	; 0x28
   15270:	mov	r1, r4
   15274:	bl	11104 <fputs_unlocked@plt>
   15278:	ldr	r3, [sp, #220]	; 0xdc
   1527c:	cmp	r3, #0
   15280:	beq	152dc <argp_failure@@Base+0xac>
   15284:	ldr	r3, [r4, #20]
   15288:	ldr	r1, [r4, #24]
   1528c:	add	r2, sp, #224	; 0xe0
   15290:	cmp	r3, r1
   15294:	str	r2, [sp]
   15298:	addcc	r1, r3, #1
   1529c:	movcc	r2, #58	; 0x3a
   152a0:	strcc	r1, [r4, #20]
   152a4:	strbcc	r2, [r3]
   152a8:	bcs	153e4 <argp_failure@@Base+0x1b4>
   152ac:	ldr	r3, [r4, #20]
   152b0:	ldr	r2, [r4, #24]
   152b4:	cmp	r3, r2
   152b8:	addcc	r1, r3, #1
   152bc:	movcc	r2, #32
   152c0:	strcc	r1, [r4, #20]
   152c4:	strbcc	r2, [r3]
   152c8:	bcs	153d4 <argp_failure@@Base+0x1a4>
   152cc:	ldr	r2, [sp]
   152d0:	ldr	r1, [sp, #220]	; 0xdc
   152d4:	mov	r0, r4
   152d8:	bl	1138c <vfprintf@plt>
   152dc:	cmp	r6, #0
   152e0:	beq	15344 <argp_failure@@Base+0x114>
   152e4:	ldr	r3, [r4, #20]
   152e8:	ldr	r2, [r4, #24]
   152ec:	cmp	r3, r2
   152f0:	addcc	r1, r3, #1
   152f4:	movcc	r2, #58	; 0x3a
   152f8:	strcc	r1, [r4, #20]
   152fc:	strbcc	r2, [r3]
   15300:	bcs	15404 <argp_failure@@Base+0x1d4>
   15304:	ldr	r3, [r4, #20]
   15308:	ldr	r2, [r4, #24]
   1530c:	cmp	r3, r2
   15310:	addcc	r1, r3, #1
   15314:	movcc	r2, #32
   15318:	strcc	r1, [r4, #20]
   1531c:	strbcc	r2, [r3]
   15320:	bcs	153f4 <argp_failure@@Base+0x1c4>
   15324:	mov	r2, #200	; 0xc8
   15328:	mov	r1, sp
   1532c:	mov	r0, r6
   15330:	bl	11308 <strerror_r@plt>
   15334:	cmp	r0, #0
   15338:	beq	15414 <argp_failure@@Base+0x1e4>
   1533c:	mov	r1, r4
   15340:	bl	11104 <fputs_unlocked@plt>
   15344:	ldr	r3, [r4, #20]
   15348:	ldr	r2, [r4, #24]
   1534c:	cmp	r3, r2
   15350:	addcc	r1, r3, #1
   15354:	movcc	r2, #10
   15358:	strcc	r1, [r4, #20]
   1535c:	strbcc	r2, [r3]
   15360:	bcs	153bc <argp_failure@@Base+0x18c>
   15364:	mov	r0, r4
   15368:	bl	1120c <funlockfile@plt>
   1536c:	cmp	r7, #0
   15370:	beq	15388 <argp_failure@@Base+0x158>
   15374:	cmp	r5, #0
   15378:	beq	153cc <argp_failure@@Base+0x19c>
   1537c:	ldr	r3, [r5, #16]
   15380:	tst	r3, #32
   15384:	beq	153cc <argp_failure@@Base+0x19c>
   15388:	add	sp, sp, #200	; 0xc8
   1538c:	pop	{r4, r5, r6, r7, lr}
   15390:	add	sp, sp, #4
   15394:	bx	lr
   15398:	ldr	r3, [pc, #140]	; 1542c <argp_failure@@Base+0x1fc>
   1539c:	ldr	r4, [r3]
   153a0:	cmp	r4, #0
   153a4:	beq	15388 <argp_failure@@Base+0x158>
   153a8:	mov	r0, r4
   153ac:	bl	113c8 <flockfile@plt>
   153b0:	ldr	r3, [pc, #120]	; 15430 <argp_failure@@Base+0x200>
   153b4:	ldr	r0, [r3]
   153b8:	b	15270 <argp_failure@@Base+0x40>
   153bc:	mov	r1, #10
   153c0:	mov	r0, r4
   153c4:	bl	11350 <__overflow@plt>
   153c8:	b	15364 <argp_failure@@Base+0x134>
   153cc:	mov	r0, r7
   153d0:	bl	112c0 <exit@plt>
   153d4:	mov	r1, #32
   153d8:	mov	r0, r4
   153dc:	bl	11350 <__overflow@plt>
   153e0:	b	152cc <argp_failure@@Base+0x9c>
   153e4:	mov	r1, #58	; 0x3a
   153e8:	mov	r0, r4
   153ec:	bl	11350 <__overflow@plt>
   153f0:	b	152ac <argp_failure@@Base+0x7c>
   153f4:	mov	r1, #32
   153f8:	mov	r0, r4
   153fc:	bl	11350 <__overflow@plt>
   15400:	b	15324 <argp_failure@@Base+0xf4>
   15404:	mov	r1, #58	; 0x3a
   15408:	mov	r0, r4
   1540c:	bl	11350 <__overflow@plt>
   15410:	b	15304 <argp_failure@@Base+0xd4>
   15414:	mov	r0, r6
   15418:	bl	11278 <strerror@plt>
   1541c:	ldr	r3, [pc, #16]	; 15434 <argp_failure@@Base+0x204>
   15420:	cmp	r0, #0
   15424:	moveq	r0, r3
   15428:	b	1533c <argp_failure@@Base+0x10c>
   1542c:	ldrdeq	r9, [r2], -r8
   15430:	andeq	r9, r2, r8, asr #3
   15434:	andeq	r8, r1, r4, asr r5
   15438:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1543c:	add	fp, sp, #32
   15440:	cmp	r2, #0
   15444:	sub	sp, sp, #116	; 0x74
   15448:	str	r2, [fp, #-132]	; 0xffffff7c
   1544c:	str	r0, [fp, #-112]	; 0xffffff90
   15450:	str	r1, [fp, #-104]	; 0xffffff98
   15454:	str	r3, [fp, #-96]	; 0xffffffa0
   15458:	beq	15510 <argp_failure@@Base+0x2e0>
   1545c:	ldr	sl, [pc, #4064]	; 16444 <argp_failure@@Base+0x1214>
   15460:	mov	r0, r2
   15464:	bl	113c8 <flockfile@plt>
   15468:	ldr	r3, [sl, #36]	; 0x24
   1546c:	cmp	r3, #0
   15470:	str	r3, [fp, #-108]	; 0xffffff94
   15474:	beq	159c0 <argp_failure@@Base+0x790>
   15478:	mov	r3, #0
   1547c:	mov	r1, r3
   15480:	ldr	r2, [sl, #32]
   15484:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15488:	bl	173c0 <argp_error@@Base+0xd38>
   1548c:	subs	r9, r0, #0
   15490:	beq	16504 <argp_failure@@Base+0x12d4>
   15494:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15498:	ands	r3, r3, #11
   1549c:	streq	r3, [fp, #-136]	; 0xffffff78
   154a0:	bne	15e1c <argp_failure@@Base+0xbec>
   154a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154a8:	ands	r4, r3, #3
   154ac:	bne	15c10 <argp_failure@@Base+0x9e0>
   154b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154b4:	tst	r3, #16
   154b8:	bne	15bec <argp_failure@@Base+0x9bc>
   154bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154c0:	tst	r3, #4
   154c4:	bne	15bd0 <argp_failure@@Base+0x9a0>
   154c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154cc:	tst	r3, #8
   154d0:	bne	15564 <argp_failure@@Base+0x334>
   154d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154d8:	tst	r3, #32
   154dc:	bne	15998 <argp_failure@@Base+0x768>
   154e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154e4:	tst	r3, #64	; 0x40
   154e8:	bne	15518 <argp_failure@@Base+0x2e8>
   154ec:	ldr	r0, [fp, #-132]	; 0xffffff7c
   154f0:	bl	1120c <funlockfile@plt>
   154f4:	ldr	r3, [fp, #-136]	; 0xffffff78
   154f8:	cmp	r3, #0
   154fc:	beq	15508 <argp_failure@@Base+0x2d8>
   15500:	mov	r0, r3
   15504:	bl	13640 <argp_parse@@Base+0x1628>
   15508:	mov	r0, r9
   1550c:	bl	179ac <argp_error@@Base+0x1324>
   15510:	sub	sp, fp, #32
   15514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15518:	ldr	r5, [pc, #3880]	; 16448 <argp_failure@@Base+0x1218>
   1551c:	ldr	r2, [r5]
   15520:	cmp	r2, #0
   15524:	beq	154ec <argp_failure@@Base+0x2bc>
   15528:	cmp	r4, #0
   1552c:	beq	15554 <argp_failure@@Base+0x324>
   15530:	ldr	r3, [r9, #28]
   15534:	ldr	r2, [r9, #32]
   15538:	cmp	r3, r2
   1553c:	bcs	164e8 <argp_failure@@Base+0x12b8>
   15540:	add	r1, r3, #1
   15544:	mov	r2, #10
   15548:	str	r1, [r9, #28]
   1554c:	strb	r2, [r3]
   15550:	ldr	r2, [r5]
   15554:	ldr	r1, [pc, #3824]	; 1644c <argp_failure@@Base+0x121c>
   15558:	mov	r0, r9
   1555c:	bl	17aec <argp_error@@Base+0x1464>
   15560:	b	154ec <argp_failure@@Base+0x2bc>
   15564:	ldr	r3, [fp, #-136]	; 0xffffff78
   15568:	ldr	r3, [r3, #4]
   1556c:	cmp	r3, #0
   15570:	str	r3, [fp, #-108]	; 0xffffff94
   15574:	beq	154d4 <argp_failure@@Base+0x2a4>
   15578:	cmp	r4, #0
   1557c:	beq	16398 <argp_failure@@Base+0x1168>
   15580:	ldr	r3, [r9, #28]
   15584:	ldr	r2, [r9, #32]
   15588:	cmp	r3, r2
   1558c:	bcs	1653c <argp_failure@@Base+0x130c>
   15590:	add	r1, r3, #1
   15594:	mov	r2, #10
   15598:	str	r1, [r9, #28]
   1559c:	strb	r2, [r3]
   155a0:	ldr	r3, [fp, #-136]	; 0xffffff78
   155a4:	ldr	r2, [fp, #-136]	; 0xffffff78
   155a8:	ldr	r3, [r3, #4]
   155ac:	ldr	r8, [r2]
   155b0:	str	r3, [fp, #-108]	; 0xffffff94
   155b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   155b8:	cmp	r3, #0
   155bc:	mov	r3, #0
   155c0:	str	r3, [fp, #-88]	; 0xffffffa8
   155c4:	str	r3, [fp, #-84]	; 0xffffffac
   155c8:	str	r3, [fp, #-80]	; 0xffffffb0
   155cc:	beq	15988 <argp_failure@@Base+0x758>
   155d0:	str	sl, [fp, #-100]	; 0xffffff9c
   155d4:	ldr	lr, [r9, #28]
   155d8:	ldr	r3, [r9, #24]
   155dc:	ldr	r5, [r9, #16]
   155e0:	sub	lr, lr, r3
   155e4:	cmp	lr, r5
   155e8:	ldr	r6, [r8]
   155ec:	ldr	sl, [r8, #8]
   155f0:	bhi	160f0 <argp_failure@@Base+0xec0>
   155f4:	ldr	r1, [r9, #4]
   155f8:	ldr	r7, [r6, #12]
   155fc:	str	r1, [fp, #-116]	; 0xffffff8c
   15600:	ldr	r1, [r9, #12]
   15604:	mov	r3, #0
   15608:	str	r1, [fp, #-120]	; 0xffffff88
   1560c:	sub	r1, fp, #88	; 0x58
   15610:	str	r3, [r9, #4]
   15614:	and	r2, r7, #8
   15618:	str	r1, [fp, #-68]	; 0xffffffbc
   1561c:	ldr	r1, [fp, #-104]	; 0xffffff98
   15620:	mov	r0, #1
   15624:	cmp	r2, r3
   15628:	mov	r4, r2
   1562c:	str	r0, [fp, #-64]	; 0xffffffc0
   15630:	str	r8, [fp, #-76]	; 0xffffffb4
   15634:	str	r9, [fp, #-72]	; 0xffffffb8
   15638:	str	r1, [fp, #-60]	; 0xffffffc4
   1563c:	bne	15f7c <argp_failure@@Base+0xd4c>
   15640:	ldr	ip, [r8, #4]
   15644:	cmp	ip, r3
   15648:	beq	15674 <argp_failure@@Base+0x444>
   1564c:	add	r0, r6, #24
   15650:	ldr	r3, [r0, #-24]	; 0xffffffe8
   15654:	cmp	r3, #0
   15658:	beq	15668 <argp_failure@@Base+0x438>
   1565c:	ldr	r3, [r0, #-12]
   15660:	tst	r3, #2
   15664:	beq	15f78 <argp_failure@@Base+0xd48>
   15668:	subs	ip, ip, #1
   1566c:	add	r0, r0, #24
   15670:	bne	15650 <argp_failure@@Base+0x420>
   15674:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15678:	cmp	lr, r5
   1567c:	str	r2, [fp, #-128]	; 0xffffff80
   15680:	ldr	r5, [r3, #8]
   15684:	bhi	15f90 <argp_failure@@Base+0xd60>
   15688:	str	r5, [r9, #12]
   1568c:	ldr	r5, [r8, #4]
   15690:	cmp	r5, #0
   15694:	beq	15718 <argp_failure@@Base+0x4e8>
   15698:	mov	r4, r6
   1569c:	str	r8, [fp, #-124]	; 0xffffff84
   156a0:	b	156b8 <argp_failure@@Base+0x488>
   156a4:	subs	r5, r5, #1
   156a8:	add	r4, r4, #24
   156ac:	beq	1570c <argp_failure@@Base+0x4dc>
   156b0:	ldr	r7, [r4, #12]
   156b4:	and	r2, r7, #8
   156b8:	cmp	r2, #0
   156bc:	bne	156a4 <argp_failure@@Base+0x474>
   156c0:	ldr	r8, [r4, #4]
   156c4:	sub	r2, r8, #1
   156c8:	cmp	r2, #254	; 0xfe
   156cc:	bhi	156a4 <argp_failure@@Base+0x474>
   156d0:	bl	112a8 <__ctype_b_loc@plt>
   156d4:	lsl	r2, r8, #1
   156d8:	ldr	r1, [r0]
   156dc:	ldrh	r2, [r1, r2]
   156e0:	tst	r2, #16384	; 0x4000
   156e4:	beq	156a4 <argp_failure@@Base+0x474>
   156e8:	ldrb	r2, [sl]
   156ec:	cmp	r8, r2
   156f0:	bne	156a4 <argp_failure@@Base+0x474>
   156f4:	tst	r7, #2
   156f8:	beq	1603c <argp_failure@@Base+0xe0c>
   156fc:	subs	r5, r5, #1
   15700:	add	sl, sl, #1
   15704:	add	r4, r4, #24
   15708:	bne	156b0 <argp_failure@@Base+0x480>
   1570c:	ldr	r4, [r6, #12]
   15710:	ldr	r8, [fp, #-124]	; 0xffffff84
   15714:	and	r4, r4, #8
   15718:	ldr	r3, [r9, #28]
   1571c:	ldr	r1, [r9, #24]
   15720:	cmp	r4, #0
   15724:	ldr	r2, [r9, #16]
   15728:	sub	r3, r3, r1
   1572c:	beq	15fa8 <argp_failure@@Base+0xd78>
   15730:	cmp	r3, r2
   15734:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15738:	ldr	r4, [r3, #16]
   1573c:	bhi	16270 <argp_failure@@Base+0x1040>
   15740:	str	r4, [r9, #12]
   15744:	ldr	r5, [r8, #4]
   15748:	cmp	r5, #0
   1574c:	addne	r4, r6, #24
   15750:	bne	15764 <argp_failure@@Base+0x534>
   15754:	b	157f4 <argp_failure@@Base+0x5c4>
   15758:	subs	r5, r5, #1
   1575c:	add	r4, r4, #24
   15760:	beq	157f4 <argp_failure@@Base+0x5c4>
   15764:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15768:	cmp	r3, #0
   1576c:	beq	15758 <argp_failure@@Base+0x528>
   15770:	ldr	r3, [r4, #-12]
   15774:	tst	r3, #2
   15778:	bne	15758 <argp_failure@@Base+0x528>
   1577c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15780:	sub	r1, fp, #76	; 0x4c
   15784:	ldr	r0, [r3, #16]
   15788:	bl	13970 <argp_parse@@Base+0x1958>
   1578c:	ldr	sl, [r4, #-24]	; 0xffffffe8
   15790:	mov	r0, sl
   15794:	bl	112cc <strlen@plt>
   15798:	subs	r7, r0, #0
   1579c:	beq	15758 <argp_failure@@Base+0x528>
   157a0:	ldr	r2, [r9, #28]
   157a4:	ldr	lr, [r9, #32]
   157a8:	add	ip, r2, r7
   157ac:	cmp	lr, ip
   157b0:	mov	r1, r7
   157b4:	mov	r0, r9
   157b8:	bcs	157cc <argp_failure@@Base+0x59c>
   157bc:	bl	17acc <argp_error@@Base+0x1444>
   157c0:	cmp	r0, #0
   157c4:	beq	15758 <argp_failure@@Base+0x528>
   157c8:	ldr	r2, [r9, #28]
   157cc:	mov	r0, r2
   157d0:	mov	r1, sl
   157d4:	mov	r2, r7
   157d8:	bl	11194 <memcpy@plt>
   157dc:	ldr	r2, [r9, #28]
   157e0:	subs	r5, r5, #1
   157e4:	add	r3, r2, r7
   157e8:	str	r3, [r9, #28]
   157ec:	add	r4, r4, #24
   157f0:	bne	15764 <argp_failure@@Base+0x534>
   157f4:	ldr	r3, [r9, #28]
   157f8:	ldr	r1, [r9, #24]
   157fc:	ldr	r2, [r9, #16]
   15800:	sub	r3, r3, r1
   15804:	cmp	r3, r2
   15808:	bhi	16224 <argp_failure@@Base+0xff4>
   1580c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15810:	mov	r3, #0
   15814:	cmp	r2, r3
   15818:	str	r3, [r9, #4]
   1581c:	beq	1610c <argp_failure@@Base+0xedc>
   15820:	ldr	r3, [r6, #12]
   15824:	tst	r3, #8
   15828:	bne	15854 <argp_failure@@Base+0x624>
   1582c:	ldr	r4, [r6, #4]
   15830:	sub	r3, r4, #1
   15834:	cmp	r3, #254	; 0xfe
   15838:	bhi	15854 <argp_failure@@Base+0x624>
   1583c:	bl	112a8 <__ctype_b_loc@plt>
   15840:	lsl	r4, r4, #1
   15844:	ldr	r3, [r0]
   15848:	ldrh	r3, [r3, r4]
   1584c:	tst	r3, #16384	; 0x4000
   15850:	bne	15860 <argp_failure@@Base+0x630>
   15854:	ldr	r3, [r6]
   15858:	cmp	r3, #0
   1585c:	beq	164d4 <argp_failure@@Base+0x12a4>
   15860:	ldr	r3, [r9, #28]
   15864:	ldr	r1, [r9, #24]
   15868:	ldr	r2, [r9, #16]
   1586c:	sub	r3, r3, r1
   15870:	cmp	r3, r2
   15874:	bhi	160bc <argp_failure@@Base+0xe8c>
   15878:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1587c:	str	r3, [r9, #4]
   15880:	ldr	r3, [fp, #-108]	; 0xffffff94
   15884:	add	r8, r8, #28
   15888:	subs	r3, r3, #1
   1588c:	str	r3, [fp, #-108]	; 0xffffff94
   15890:	ldr	r3, [fp, #-120]	; 0xffffff88
   15894:	str	r3, [r9, #12]
   15898:	bne	155d4 <argp_failure@@Base+0x3a4>
   1589c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   158a0:	ldr	sl, [fp, #-100]	; 0xffffff9c
   158a4:	cmp	r3, #0
   158a8:	beq	15988 <argp_failure@@Base+0x758>
   158ac:	ldr	r3, [sl, #4]
   158b0:	cmp	r3, #0
   158b4:	beq	15988 <argp_failure@@Base+0x758>
   158b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   158bc:	ldr	r1, [pc, #2956]	; 16450 <argp_failure@@Base+0x1220>
   158c0:	cmp	r3, #0
   158c4:	ldr	r0, [pc, #2952]	; 16454 <argp_failure@@Base+0x1224>
   158c8:	ldrne	r2, [r3]
   158cc:	ldreq	r2, [fp, #-104]	; 0xffffff98
   158d0:	ldr	r3, [fp, #-104]	; 0xffffff98
   158d4:	bl	13720 <argp_parse@@Base+0x1708>
   158d8:	subs	r4, r0, #0
   158dc:	beq	15988 <argp_failure@@Base+0x758>
   158e0:	ldrb	r3, [r4]
   158e4:	cmp	r3, #0
   158e8:	beq	1597c <argp_failure@@Base+0x74c>
   158ec:	ldr	r3, [r9, #28]
   158f0:	ldr	r2, [r9, #32]
   158f4:	cmp	r3, r2
   158f8:	bcs	16598 <argp_failure@@Base+0x1368>
   158fc:	add	r1, r3, #1
   15900:	mov	r2, #10
   15904:	str	r1, [r9, #28]
   15908:	strb	r2, [r3]
   1590c:	mov	r0, r4
   15910:	bl	112cc <strlen@plt>
   15914:	subs	r5, r0, #0
   15918:	beq	16574 <argp_failure@@Base+0x1344>
   1591c:	ldr	r0, [r9, #28]
   15920:	ldr	r2, [r9, #32]
   15924:	add	r3, r0, r5
   15928:	cmp	r2, r3
   1592c:	bcs	15948 <argp_failure@@Base+0x718>
   15930:	mov	r1, r5
   15934:	mov	r0, r9
   15938:	bl	17acc <argp_error@@Base+0x1444>
   1593c:	cmp	r0, #0
   15940:	beq	16574 <argp_failure@@Base+0x1344>
   15944:	ldr	r0, [r9, #28]
   15948:	mov	r2, r5
   1594c:	mov	r1, r4
   15950:	bl	11194 <memcpy@plt>
   15954:	ldr	r3, [r9, #28]
   15958:	add	r3, r3, r5
   1595c:	str	r3, [r9, #28]
   15960:	ldr	r2, [r9, #32]
   15964:	cmp	r2, r3
   15968:	bls	1657c <argp_failure@@Base+0x134c>
   1596c:	add	r1, r3, #1
   15970:	mov	r2, #10
   15974:	str	r1, [r9, #28]
   15978:	strb	r2, [r3]
   1597c:	ldr	r3, [pc, #2768]	; 16454 <argp_failure@@Base+0x1224>
   15980:	cmp	r4, r3
   15984:	bne	164c8 <argp_failure@@Base+0x1298>
   15988:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1598c:	mov	r4, #1
   15990:	tst	r3, #32
   15994:	beq	154e0 <argp_failure@@Base+0x2b0>
   15998:	mov	r3, #0
   1599c:	str	r3, [sp]
   159a0:	str	r9, [sp, #4]
   159a4:	mov	r3, r4
   159a8:	ldr	r1, [fp, #-104]	; 0xffffff98
   159ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   159b0:	mov	r2, #1
   159b4:	bl	13b1c <argp_parse@@Base+0x1b04>
   159b8:	orr	r4, r4, r0
   159bc:	b	154e0 <argp_failure@@Base+0x2b0>
   159c0:	ldr	r0, [pc, #2704]	; 16458 <argp_failure@@Base+0x1228>
   159c4:	bl	11248 <getenv@plt>
   159c8:	mov	lr, sl
   159cc:	sub	r3, fp, #76	; 0x4c
   159d0:	mov	ip, r3
   159d4:	str	r3, [fp, #-100]	; 0xffffff9c
   159d8:	mov	r6, r0
   159dc:	ldm	lr!, {r0, r1, r2, r3}
   159e0:	cmp	r6, #0
   159e4:	stmia	ip!, {r0, r1, r2, r3}
   159e8:	ldm	lr!, {r0, r1, r2, r3}
   159ec:	stmia	ip!, {r0, r1, r2, r3}
   159f0:	ldm	lr, {r0, r1}
   159f4:	stm	ip, {r0, r1}
   159f8:	beq	15478 <argp_failure@@Base+0x248>
   159fc:	ldrb	r9, [r6]
   15a00:	ldr	r8, [pc, #2644]	; 1645c <argp_failure@@Base+0x122c>
   15a04:	cmp	r9, #0
   15a08:	beq	15b5c <argp_failure@@Base+0x92c>
   15a0c:	bl	112a8 <__ctype_b_loc@plt>
   15a10:	mov	r5, r0
   15a14:	ldr	r1, [r0]
   15a18:	b	15a20 <argp_failure@@Base+0x7f0>
   15a1c:	ldrb	r9, [r6, #1]!
   15a20:	lsl	r3, r9, #1
   15a24:	ldrh	r3, [r1, r3]
   15a28:	tst	r3, #8192	; 0x2000
   15a2c:	bne	15a1c <argp_failure@@Base+0x7ec>
   15a30:	ands	r2, r3, #1024	; 0x400
   15a34:	beq	15b54 <argp_failure@@Base+0x924>
   15a38:	cmp	r9, #95	; 0x5f
   15a3c:	cmpne	r9, #45	; 0x2d
   15a40:	lsl	r3, r3, #28
   15a44:	moveq	r7, #1
   15a48:	movne	r7, #0
   15a4c:	orrs	r3, r7, r3, lsr #31
   15a50:	beq	16310 <argp_failure@@Base+0x10e0>
   15a54:	mov	r4, r6
   15a58:	ldrb	r3, [r4, #1]!
   15a5c:	cmp	r3, #95	; 0x5f
   15a60:	cmpne	r3, #45	; 0x2d
   15a64:	lsl	r2, r3, #1
   15a68:	moveq	r0, #1
   15a6c:	ldrh	r2, [r1, r2]
   15a70:	movne	r0, #0
   15a74:	lsl	ip, r2, #28
   15a78:	orrs	r0, r0, ip, lsr #31
   15a7c:	bne	15a58 <argp_failure@@Base+0x828>
   15a80:	tst	r2, #8192	; 0x2000
   15a84:	sub	r7, r4, r6
   15a88:	beq	15aa0 <argp_failure@@Base+0x870>
   15a8c:	ldrb	r3, [r4, #1]!
   15a90:	lsl	r2, r3, #1
   15a94:	ldrh	r2, [r1, r2]
   15a98:	tst	r2, #8192	; 0x2000
   15a9c:	bne	15a8c <argp_failure@@Base+0x85c>
   15aa0:	cmp	r3, #44	; 0x2c
   15aa4:	cmpne	r3, #0
   15aa8:	beq	15bbc <argp_failure@@Base+0x98c>
   15aac:	cmp	r3, #61	; 0x3d
   15ab0:	beq	15f18 <argp_failure@@Base+0xce8>
   15ab4:	ldrb	r3, [r4]
   15ab8:	lsl	r3, r3, #1
   15abc:	ldrh	r3, [r1, r3]
   15ac0:	tst	r3, #2048	; 0x800
   15ac4:	bne	15eb8 <argp_failure@@Base+0xc88>
   15ac8:	ldr	r3, [fp, #-108]	; 0xffffff94
   15acc:	mov	r9, r3
   15ad0:	str	r3, [fp, #-116]	; 0xffffff8c
   15ad4:	ldr	r5, [pc, #2436]	; 16460 <argp_failure@@Base+0x1230>
   15ad8:	b	15ae8 <argp_failure@@Base+0x8b8>
   15adc:	add	r5, r5, #16
   15ae0:	cmp	r5, r8
   15ae4:	beq	16378 <argp_failure@@Base+0x1148>
   15ae8:	mov	r0, r5
   15aec:	bl	112cc <strlen@plt>
   15af0:	cmp	r0, r7
   15af4:	bne	15adc <argp_failure@@Base+0x8ac>
   15af8:	mov	r2, r7
   15afc:	mov	r1, r5
   15b00:	mov	r0, r6
   15b04:	bl	113f8 <strncmp@plt>
   15b08:	cmp	r0, #0
   15b0c:	bne	15adc <argp_failure@@Base+0x8ac>
   15b10:	cmp	r9, #0
   15b14:	beq	15b24 <argp_failure@@Base+0x8f4>
   15b18:	ldrb	r1, [r5, #14]
   15b1c:	cmp	r1, #0
   15b20:	beq	16558 <argp_failure@@Base+0x1328>
   15b24:	ldrb	r3, [r5, #15]
   15b28:	sub	r2, fp, #36	; 0x24
   15b2c:	add	r3, r2, r3
   15b30:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15b34:	str	r2, [r3, #-40]	; 0xffffffd8
   15b38:	cmp	r5, r8
   15b3c:	beq	16378 <argp_failure@@Base+0x1148>
   15b40:	ldrb	r9, [r4]
   15b44:	cmp	r9, #44	; 0x2c
   15b48:	beq	16258 <argp_failure@@Base+0x1028>
   15b4c:	mov	r6, r4
   15b50:	b	15a04 <argp_failure@@Base+0x7d4>
   15b54:	cmp	r9, #0
   15b58:	bne	164b0 <argp_failure@@Base+0x1280>
   15b5c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   15b60:	ldr	r1, [pc, #2296]	; 16460 <argp_failure@@Base+0x1230>
   15b64:	add	r3, r1, #16
   15b68:	cmp	r3, r8
   15b6c:	mov	r1, r3
   15b70:	beq	162b4 <argp_failure@@Base+0x1084>
   15b74:	ldrb	r2, [r3, #14]
   15b78:	cmp	r2, #0
   15b7c:	bne	15b64 <argp_failure@@Base+0x934>
   15b80:	ldrb	r0, [r3, #15]
   15b84:	sub	ip, fp, #36	; 0x24
   15b88:	cmp	r0, #32
   15b8c:	add	ip, ip, r0
   15b90:	beq	15b64 <argp_failure@@Base+0x934>
   15b94:	ldr	r0, [ip, #-40]	; 0xffffffd8
   15b98:	cmp	r0, lr
   15b9c:	blt	15b64 <argp_failure@@Base+0x934>
   15ba0:	ldr	r1, [pc, #2236]	; 16464 <argp_failure@@Base+0x1234>
   15ba4:	ldr	r0, [fp, #-104]	; 0xffffff98
   15ba8:	stm	sp, {r1, r3}
   15bac:	ldr	r3, [pc, #2228]	; 16468 <argp_failure@@Base+0x1238>
   15bb0:	mov	r1, r2
   15bb4:	bl	15230 <argp_failure@@Base>
   15bb8:	b	15478 <argp_failure@@Base+0x248>
   15bbc:	cmp	r9, #110	; 0x6e
   15bc0:	beq	15f48 <argp_failure@@Base+0xd18>
   15bc4:	mov	r9, #1
   15bc8:	str	r9, [fp, #-116]	; 0xffffff8c
   15bcc:	b	15ad4 <argp_failure@@Base+0x8a4>
   15bd0:	ldr	r3, [fp, #4]
   15bd4:	ldr	r1, [pc, #2192]	; 1646c <argp_failure@@Base+0x123c>
   15bd8:	mov	r2, r3
   15bdc:	mov	r0, r9
   15be0:	bl	17aec <argp_error@@Base+0x1464>
   15be4:	mov	r4, #1
   15be8:	b	154c8 <argp_failure@@Base+0x298>
   15bec:	mov	r2, #1
   15bf0:	mov	r3, #0
   15bf4:	stm	sp, {r2, r9}
   15bf8:	ldr	r1, [fp, #-104]	; 0xffffff98
   15bfc:	mov	r2, r3
   15c00:	ldr	r0, [fp, #-112]	; 0xffffff90
   15c04:	bl	13b1c <argp_parse@@Base+0x1b04>
   15c08:	orr	r4, r4, r0
   15c0c:	b	154bc <argp_failure@@Base+0x28c>
   15c10:	ldr	r3, [fp, #-112]	; 0xffffff90
   15c14:	mov	r4, #1
   15c18:	mov	r6, r4
   15c1c:	ldr	r1, [r3, #16]
   15c20:	ldr	r0, [r3, #8]
   15c24:	bl	15020 <argp_parse@@Base+0x3008>
   15c28:	mov	r1, #0
   15c2c:	add	r3, r0, #14
   15c30:	bic	r3, r3, #7
   15c34:	sub	sp, sp, r3
   15c38:	add	r7, sp, #8
   15c3c:	mov	r2, r0
   15c40:	mov	r0, r7
   15c44:	bl	11314 <memset@plt>
   15c48:	sub	r3, fp, #76	; 0x4c
   15c4c:	str	r3, [fp, #-100]	; 0xffffff9c
   15c50:	ldr	r8, [fp, #-136]	; 0xffffff78
   15c54:	str	r7, [fp, #-108]	; 0xffffff94
   15c58:	b	15d74 <argp_failure@@Base+0xb44>
   15c5c:	cmp	r4, #0
   15c60:	ldr	r3, [fp, #-108]	; 0xffffff94
   15c64:	ldr	r5, [r9, #12]
   15c68:	ldrne	r2, [pc, #2048]	; 16470 <argp_failure@@Base+0x1240>
   15c6c:	str	r7, [r9, #12]
   15c70:	ldreq	r2, [pc, #2044]	; 16474 <argp_failure@@Base+0x1244>
   15c74:	str	r3, [fp, #-76]	; 0xffffffb4
   15c78:	ldr	r1, [pc, #2040]	; 16478 <argp_failure@@Base+0x1248>
   15c7c:	ldr	r3, [fp, #4]
   15c80:	mov	r0, r9
   15c84:	bl	17aec <argp_error@@Base+0x1464>
   15c88:	ldr	r3, [r9, #28]
   15c8c:	ldr	r1, [r9, #24]
   15c90:	ldr	r2, [r9, #16]
   15c94:	sub	r3, r3, r1
   15c98:	cmp	r3, r2
   15c9c:	ldr	r7, [sl, #28]
   15ca0:	bhi	15e08 <argp_failure@@Base+0xbd8>
   15ca4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ca8:	ldr	r4, [r9, #4]
   15cac:	tst	r3, #2
   15cb0:	str	r7, [r9, #4]
   15cb4:	beq	15dec <argp_failure@@Base+0xbbc>
   15cb8:	ldr	r3, [r8, #4]
   15cbc:	cmp	r3, #0
   15cc0:	beq	15d10 <argp_failure@@Base+0xae0>
   15cc4:	ldr	ip, [r9, #28]
   15cc8:	ldr	r2, [r9, #32]
   15ccc:	add	r3, ip, #12
   15cd0:	cmp	r2, r3
   15cd4:	bcs	15cf0 <argp_failure@@Base+0xac0>
   15cd8:	mov	r1, #12
   15cdc:	mov	r0, r9
   15ce0:	bl	17acc <argp_error@@Base+0x1444>
   15ce4:	cmp	r0, #0
   15ce8:	beq	15d10 <argp_failure@@Base+0xae0>
   15cec:	ldr	ip, [r9, #28]
   15cf0:	ldr	r3, [pc, #1924]	; 1647c <argp_failure@@Base+0x124c>
   15cf4:	ldm	r3!, {r0, r1, r2}
   15cf8:	str	r0, [ip]
   15cfc:	str	r1, [ip, #4]
   15d00:	str	r2, [ip, #8]
   15d04:	ldr	r3, [r9, #28]
   15d08:	add	r3, r3, #12
   15d0c:	str	r3, [r9, #28]
   15d10:	mov	r3, r6
   15d14:	ldr	r1, [fp, #-104]	; 0xffffff98
   15d18:	str	r9, [sp]
   15d1c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15d20:	ldr	r0, [fp, #-112]	; 0xffffff90
   15d24:	bl	14658 <argp_parse@@Base+0x2640>
   15d28:	ldr	r3, [r9, #28]
   15d2c:	ldr	r1, [r9, #24]
   15d30:	sub	r1, r3, r1
   15d34:	mov	r7, r0
   15d38:	ldr	r0, [r9, #16]
   15d3c:	cmp	r1, r0
   15d40:	strls	r5, [r9, #12]
   15d44:	bhi	15db8 <argp_failure@@Base+0xb88>
   15d48:	ldr	r1, [r9, #32]
   15d4c:	str	r4, [r9, #4]
   15d50:	cmp	r1, r3
   15d54:	bls	15d9c <argp_failure@@Base+0xb6c>
   15d58:	add	r1, r3, #1
   15d5c:	mov	r2, #10
   15d60:	str	r1, [r9, #28]
   15d64:	strb	r2, [r3]
   15d68:	cmp	r7, #0
   15d6c:	mov	r4, #0
   15d70:	beq	15e14 <argp_failure@@Base+0xbe4>
   15d74:	ldr	r3, [r9, #28]
   15d78:	ldr	r1, [r9, #24]
   15d7c:	ldr	r2, [r9, #16]
   15d80:	sub	r3, r3, r1
   15d84:	cmp	r3, r2
   15d88:	ldr	r7, [sl, #28]
   15d8c:	bls	15c5c <argp_failure@@Base+0xa2c>
   15d90:	mov	r0, r9
   15d94:	bl	1743c <argp_error@@Base+0xdb4>
   15d98:	b	15c5c <argp_failure@@Base+0xa2c>
   15d9c:	mov	r1, r6
   15da0:	mov	r0, r9
   15da4:	bl	17acc <argp_error@@Base+0x1444>
   15da8:	cmp	r0, #0
   15dac:	beq	15d68 <argp_failure@@Base+0xb38>
   15db0:	ldr	r3, [r9, #28]
   15db4:	b	15d58 <argp_failure@@Base+0xb28>
   15db8:	mov	r0, r9
   15dbc:	bl	1743c <argp_error@@Base+0xdb4>
   15dc0:	ldr	r3, [r9, #28]
   15dc4:	ldr	r1, [r9, #24]
   15dc8:	ldr	r0, [r9, #16]
   15dcc:	sub	r1, r3, r1
   15dd0:	cmp	r1, r0
   15dd4:	str	r5, [r9, #12]
   15dd8:	bls	15d48 <argp_failure@@Base+0xb18>
   15ddc:	mov	r0, r9
   15de0:	bl	1743c <argp_error@@Base+0xdb4>
   15de4:	ldr	r3, [r9, #28]
   15de8:	b	15d48 <argp_failure@@Base+0xb18>
   15dec:	mov	r1, r9
   15df0:	mov	r0, r8
   15df4:	bl	15078 <argp_parse@@Base+0x3060>
   15df8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15dfc:	orr	r3, r3, #2
   15e00:	str	r3, [fp, #-96]	; 0xffffffa0
   15e04:	b	15d10 <argp_failure@@Base+0xae0>
   15e08:	mov	r0, r9
   15e0c:	bl	1743c <argp_error@@Base+0xdb4>
   15e10:	b	15ca4 <argp_failure@@Base+0xa74>
   15e14:	mov	r4, #1
   15e18:	b	154b0 <argp_failure@@Base+0x280>
   15e1c:	mov	r1, #0
   15e20:	ldr	r0, [fp, #-112]	; 0xffffff90
   15e24:	bl	148a8 <argp_parse@@Base+0x2890>
   15e28:	ldr	r2, [pc, #1616]	; 16480 <argp_failure@@Base+0x1250>
   15e2c:	ldr	r4, [r0, #4]
   15e30:	ldr	r5, [r0]
   15e34:	mov	r1, r4
   15e38:	mov	r6, r0
   15e3c:	str	r0, [fp, #-136]	; 0xffffff78
   15e40:	mov	r0, r5
   15e44:	bl	14f98 <argp_parse@@Base+0x2f80>
   15e48:	ldr	r2, [pc, #1588]	; 16484 <argp_failure@@Base+0x1254>
   15e4c:	cmp	r0, #0
   15e50:	mvnne	r3, #0
   15e54:	strne	r3, [r0, #12]
   15e58:	movne	r3, r6
   15e5c:	mov	r0, r5
   15e60:	ldrne	r4, [r3, #4]
   15e64:	mov	r1, r4
   15e68:	bl	14f98 <argp_parse@@Base+0x2f80>
   15e6c:	cmp	r0, #0
   15e70:	mvnne	r3, #0
   15e74:	strne	r3, [r0, #12]
   15e78:	ldrne	r3, [fp, #-136]	; 0xffffff78
   15e7c:	ldrne	r4, [r3, #4]
   15e80:	cmp	r4, #0
   15e84:	beq	154a4 <argp_failure@@Base+0x274>
   15e88:	mov	r3, r5
   15e8c:	mov	r1, #0
   15e90:	str	r1, [r3, #24]
   15e94:	add	r1, r1, #1
   15e98:	cmp	r1, r4
   15e9c:	add	r3, r3, #28
   15ea0:	bne	15e90 <argp_failure@@Base+0xc60>
   15ea4:	mov	r0, r5
   15ea8:	ldr	r3, [pc, #1496]	; 16488 <argp_failure@@Base+0x1258>
   15eac:	mov	r2, #28
   15eb0:	bl	113e0 <qsort@plt>
   15eb4:	b	154a4 <argp_failure@@Base+0x274>
   15eb8:	mov	r2, #10
   15ebc:	mov	r1, #0
   15ec0:	mov	r0, r4
   15ec4:	bl	11128 <strtol@plt>
   15ec8:	ldrb	r3, [r4]
   15ecc:	ldr	r2, [r5]
   15ed0:	lsl	r3, r3, #1
   15ed4:	ldrh	r3, [r2, r3]
   15ed8:	tst	r3, #2048	; 0x800
   15edc:	str	r0, [fp, #-116]	; 0xffffff8c
   15ee0:	beq	15f08 <argp_failure@@Base+0xcd8>
   15ee4:	ldrb	r3, [r4, #1]!
   15ee8:	lsl	r3, r3, #1
   15eec:	ldrh	r3, [r2, r3]
   15ef0:	tst	r3, #2048	; 0x800
   15ef4:	bne	15ee4 <argp_failure@@Base+0xcb4>
   15ef8:	b	15f08 <argp_failure@@Base+0xcd8>
   15efc:	ldrb	r3, [r4, #1]!
   15f00:	lsl	r3, r3, #1
   15f04:	ldrh	r3, [r2, r3]
   15f08:	tst	r3, #8192	; 0x2000
   15f0c:	bne	15efc <argp_failure@@Base+0xccc>
   15f10:	ldr	r9, [fp, #-108]	; 0xffffff94
   15f14:	b	15ad4 <argp_failure@@Base+0x8a4>
   15f18:	ldrb	r3, [r4, #1]
   15f1c:	add	r4, r4, #1
   15f20:	lsl	r3, r3, #1
   15f24:	ldrh	r3, [r1, r3]
   15f28:	tst	r3, #8192	; 0x2000
   15f2c:	beq	15ac0 <argp_failure@@Base+0x890>
   15f30:	ldrb	r3, [r4, #1]!
   15f34:	lsl	r3, r3, #1
   15f38:	ldrh	r3, [r1, r3]
   15f3c:	tst	r3, #8192	; 0x2000
   15f40:	bne	15f30 <argp_failure@@Base+0xd00>
   15f44:	b	15ac0 <argp_failure@@Base+0x890>
   15f48:	ldrb	r3, [r6, #1]
   15f4c:	cmp	r3, #111	; 0x6f
   15f50:	bne	15bc4 <argp_failure@@Base+0x994>
   15f54:	ldrb	r3, [r6, #2]
   15f58:	cmp	r3, #45	; 0x2d
   15f5c:	bne	15bc4 <argp_failure@@Base+0x994>
   15f60:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f64:	add	r6, r6, #3
   15f68:	sub	r7, r7, #3
   15f6c:	str	r3, [fp, #-116]	; 0xffffff8c
   15f70:	mov	r9, #1
   15f74:	b	15ad4 <argp_failure@@Base+0x8a4>
   15f78:	mov	r3, #1
   15f7c:	str	r3, [fp, #-128]	; 0xffffff80
   15f80:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15f84:	cmp	lr, r5
   15f88:	ldr	r5, [r3, #8]
   15f8c:	bls	15688 <argp_failure@@Base+0x458>
   15f90:	mov	r0, r9
   15f94:	bl	1743c <argp_error@@Base+0xdb4>
   15f98:	ldr	r7, [r6, #12]
   15f9c:	and	r2, r7, #8
   15fa0:	mov	r4, r2
   15fa4:	b	15688 <argp_failure@@Base+0x458>
   15fa8:	cmp	r3, r2
   15fac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15fb0:	ldr	r4, [r3, #12]
   15fb4:	bhi	16264 <argp_failure@@Base+0x1034>
   15fb8:	str	r4, [r9, #12]
   15fbc:	ldr	r5, [r8, #4]
   15fc0:	cmp	r5, #0
   15fc4:	beq	157f4 <argp_failure@@Base+0x5c4>
   15fc8:	add	r4, r6, #24
   15fcc:	ldr	r7, [fp, #-100]	; 0xffffff9c
   15fd0:	b	15fe0 <argp_failure@@Base+0xdb0>
   15fd4:	subs	r5, r5, #1
   15fd8:	add	r4, r4, #24
   15fdc:	beq	157f4 <argp_failure@@Base+0x5c4>
   15fe0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   15fe4:	cmp	r3, #0
   15fe8:	beq	15fd4 <argp_failure@@Base+0xda4>
   15fec:	ldr	r3, [r4, #-12]
   15ff0:	tst	r3, #2
   15ff4:	bne	15fd4 <argp_failure@@Base+0xda4>
   15ff8:	sub	r1, fp, #76	; 0x4c
   15ffc:	ldr	r0, [r7, #12]
   16000:	bl	13970 <argp_parse@@Base+0x1958>
   16004:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16008:	ldr	r1, [pc, #1148]	; 1648c <argp_failure@@Base+0x125c>
   1600c:	mov	r0, r9
   16010:	bl	17aec <argp_error@@Base+0x1464>
   16014:	ldr	r3, [r6, #8]
   16018:	ldr	r1, [pc, #1136]	; 16490 <argp_failure@@Base+0x1260>
   1601c:	subs	r2, r3, #0
   16020:	mov	r0, r9
   16024:	beq	15fd4 <argp_failure@@Base+0xda4>
   16028:	ldr	ip, [r6, #12]
   1602c:	tst	ip, #1
   16030:	ldrne	r1, [pc, #1116]	; 16494 <argp_failure@@Base+0x1264>
   16034:	bl	17aec <argp_error@@Base+0x1464>
   16038:	b	15fd4 <argp_failure@@Base+0xda4>
   1603c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16040:	sub	r1, fp, #76	; 0x4c
   16044:	ldr	r0, [r3, #8]
   16048:	bl	13970 <argp_parse@@Base+0x1958>
   1604c:	ldr	r3, [r9, #28]
   16050:	ldr	r2, [r9, #32]
   16054:	cmp	r3, r2
   16058:	bcs	16298 <argp_failure@@Base+0x1068>
   1605c:	add	r2, r3, #1
   16060:	str	r2, [r9, #28]
   16064:	mov	r2, #45	; 0x2d
   16068:	strb	r2, [r3]
   1606c:	ldr	r3, [r9, #28]
   16070:	ldr	r2, [r9, #32]
   16074:	ldrb	r7, [sl]
   16078:	cmp	r3, r2
   1607c:	bcs	1627c <argp_failure@@Base+0x104c>
   16080:	add	r2, r3, #1
   16084:	str	r2, [r9, #28]
   16088:	strb	r7, [r3]
   1608c:	ldr	r3, [fp, #-128]	; 0xffffff80
   16090:	cmp	r3, #0
   16094:	beq	16230 <argp_failure@@Base+0x1000>
   16098:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1609c:	ldr	r3, [r3]
   160a0:	cmp	r3, #0
   160a4:	bne	16230 <argp_failure@@Base+0x1000>
   160a8:	ldr	r3, [r6, #8]
   160ac:	cmp	r3, #0
   160b0:	movne	r3, #1
   160b4:	strne	r3, [fp, #-80]	; 0xffffffb0
   160b8:	b	156fc <argp_failure@@Base+0x4cc>
   160bc:	mov	r0, r9
   160c0:	bl	1743c <argp_error@@Base+0xdb4>
   160c4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   160c8:	ldr	r3, [r9, #28]
   160cc:	ldr	r1, [r9, #24]
   160d0:	str	r2, [r9, #4]
   160d4:	ldr	r2, [r9, #16]
   160d8:	sub	r3, r3, r1
   160dc:	cmp	r3, r2
   160e0:	bls	15880 <argp_failure@@Base+0x650>
   160e4:	mov	r0, r9
   160e8:	bl	1743c <argp_error@@Base+0xdb4>
   160ec:	b	15880 <argp_failure@@Base+0x650>
   160f0:	mov	r0, r9
   160f4:	bl	1743c <argp_error@@Base+0xdb4>
   160f8:	ldr	lr, [r9, #28]
   160fc:	ldr	r2, [r9, #24]
   16100:	ldr	r5, [r9, #16]
   16104:	sub	lr, lr, r2
   16108:	b	155f4 <argp_failure@@Base+0x3c4>
   1610c:	ldr	r4, [r6, #16]
   16110:	ldr	r1, [r6, #4]
   16114:	mov	r0, r4
   16118:	ldr	r3, [fp, #-104]	; 0xffffff98
   1611c:	ldr	r2, [r8, #20]
   16120:	bl	13720 <argp_parse@@Base+0x1708>
   16124:	subs	r5, r0, #0
   16128:	beq	161e0 <argp_failure@@Base+0xfb0>
   1612c:	ldrb	r3, [r5]
   16130:	cmp	r3, #0
   16134:	beq	161d0 <argp_failure@@Base+0xfa0>
   16138:	ldr	r3, [r9, #28]
   1613c:	ldr	r1, [r9, #24]
   16140:	ldr	r2, [r9, #16]
   16144:	sub	r3, r3, r1
   16148:	cmp	r3, r2
   1614c:	bhi	163d0 <argp_failure@@Base+0x11a0>
   16150:	ldr	r7, [r9, #20]
   16154:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16158:	bic	r7, r7, r7, asr #31
   1615c:	ldr	r6, [r3, #20]
   16160:	mov	r3, r6
   16164:	str	r6, [r9, #4]
   16168:	add	r2, r6, #3
   1616c:	cmp	r2, r7
   16170:	str	r3, [r9, #12]
   16174:	bcs	16320 <argp_failure@@Base+0x10f0>
   16178:	ldr	r3, [r9, #28]
   1617c:	ldr	r2, [r9, #32]
   16180:	cmp	r3, r2
   16184:	bcs	16520 <argp_failure@@Base+0x12f0>
   16188:	add	r1, r3, #1
   1618c:	mov	r2, #10
   16190:	str	r1, [r9, #28]
   16194:	strb	r2, [r3]
   16198:	mov	r0, r5
   1619c:	bl	112cc <strlen@plt>
   161a0:	subs	r6, r0, #0
   161a4:	beq	161d0 <argp_failure@@Base+0xfa0>
   161a8:	ldr	r0, [r9, #28]
   161ac:	ldr	r2, [r9, #32]
   161b0:	add	r3, r0, r6
   161b4:	cmp	r2, r3
   161b8:	bcs	163b4 <argp_failure@@Base+0x1184>
   161bc:	mov	r1, r6
   161c0:	mov	r0, r9
   161c4:	bl	17acc <argp_error@@Base+0x1444>
   161c8:	cmp	r0, #0
   161cc:	bne	163b0 <argp_failure@@Base+0x1180>
   161d0:	cmp	r4, r5
   161d4:	beq	161e0 <argp_failure@@Base+0xfb0>
   161d8:	mov	r0, r5
   161dc:	bl	12eb0 <argp_parse@@Base+0xe98>
   161e0:	ldr	r3, [r9, #28]
   161e4:	ldr	r2, [r9, #24]
   161e8:	ldr	r1, [r9, #16]
   161ec:	sub	r2, r3, r2
   161f0:	cmp	r2, r1
   161f4:	bhi	16300 <argp_failure@@Base+0x10d0>
   161f8:	ldr	r1, [r9, #32]
   161fc:	mov	r2, #0
   16200:	cmp	r1, r3
   16204:	str	r2, [r9, #4]
   16208:	bls	162e4 <argp_failure@@Base+0x10b4>
   1620c:	add	r1, r3, #1
   16210:	mov	r2, #10
   16214:	str	r1, [r9, #28]
   16218:	strb	r2, [r3]
   1621c:	str	r8, [fp, #-88]	; 0xffffffa8
   16220:	b	15860 <argp_failure@@Base+0x630>
   16224:	mov	r0, r9
   16228:	bl	1743c <argp_error@@Base+0xdb4>
   1622c:	b	1580c <argp_failure@@Base+0x5dc>
   16230:	ldr	r2, [r6, #8]
   16234:	cmp	r2, #0
   16238:	beq	156fc <argp_failure@@Base+0x4cc>
   1623c:	ldr	r3, [r6, #12]
   16240:	mov	r0, r9
   16244:	tst	r3, #1
   16248:	ldrne	r1, [pc, #584]	; 16498 <argp_failure@@Base+0x1268>
   1624c:	ldreq	r1, [pc, #584]	; 1649c <argp_failure@@Base+0x126c>
   16250:	bl	17aec <argp_error@@Base+0x1464>
   16254:	b	156fc <argp_failure@@Base+0x4cc>
   16258:	ldrb	r9, [r4, #1]
   1625c:	add	r4, r4, #1
   16260:	b	15b4c <argp_failure@@Base+0x91c>
   16264:	mov	r0, r9
   16268:	bl	1743c <argp_error@@Base+0xdb4>
   1626c:	b	15fb8 <argp_failure@@Base+0xd88>
   16270:	mov	r0, r9
   16274:	bl	1743c <argp_error@@Base+0xdb4>
   16278:	b	15740 <argp_failure@@Base+0x510>
   1627c:	mov	r1, #1
   16280:	mov	r0, r9
   16284:	bl	17acc <argp_error@@Base+0x1444>
   16288:	cmp	r0, #0
   1628c:	beq	1608c <argp_failure@@Base+0xe5c>
   16290:	ldr	r3, [r9, #28]
   16294:	b	16080 <argp_failure@@Base+0xe50>
   16298:	mov	r1, #1
   1629c:	mov	r0, r9
   162a0:	bl	17acc <argp_error@@Base+0x1444>
   162a4:	cmp	r0, #0
   162a8:	beq	1606c <argp_failure@@Base+0xe3c>
   162ac:	ldr	r3, [r9, #28]
   162b0:	b	1605c <argp_failure@@Base+0xe2c>
   162b4:	ldr	lr, [fp, #-100]	; 0xffffff9c
   162b8:	ldr	sl, [pc, #388]	; 16444 <argp_failure@@Base+0x1214>
   162bc:	mov	r4, #1
   162c0:	ldm	lr!, {r0, r1, r2, r3}
   162c4:	mov	ip, sl
   162c8:	stmia	ip!, {r0, r1, r2, r3}
   162cc:	ldm	lr!, {r0, r1, r2, r3}
   162d0:	stmia	ip!, {r0, r1, r2, r3}
   162d4:	ldm	lr, {r0, r1}
   162d8:	stm	ip, {r0, r1}
   162dc:	str	r4, [sl, #36]	; 0x24
   162e0:	b	15478 <argp_failure@@Base+0x248>
   162e4:	mov	r1, #1
   162e8:	mov	r0, r9
   162ec:	bl	17acc <argp_error@@Base+0x1444>
   162f0:	cmp	r0, #0
   162f4:	beq	1621c <argp_failure@@Base+0xfec>
   162f8:	ldr	r3, [r9, #28]
   162fc:	b	1620c <argp_failure@@Base+0xfdc>
   16300:	mov	r0, r9
   16304:	bl	1743c <argp_error@@Base+0xdb4>
   16308:	ldr	r3, [r9, #28]
   1630c:	b	161f8 <argp_failure@@Base+0xfc8>
   16310:	mov	r7, r3
   16314:	mov	r4, r6
   16318:	mov	r3, r9
   1631c:	b	15aa0 <argp_failure@@Base+0x870>
   16320:	cmp	r6, r7
   16324:	bhi	16510 <argp_failure@@Base+0x12e0>
   16328:	ldr	r3, [r9, #28]
   1632c:	ldr	r1, [r9, #32]
   16330:	add	r2, r3, #3
   16334:	cmp	r1, r2
   16338:	bcs	16354 <argp_failure@@Base+0x1124>
   1633c:	mov	r1, #3
   16340:	mov	r0, r9
   16344:	bl	17acc <argp_error@@Base+0x1444>
   16348:	cmp	r0, #0
   1634c:	beq	16198 <argp_failure@@Base+0xf68>
   16350:	ldr	r3, [r9, #28]
   16354:	ldr	r2, [pc, #324]	; 164a0 <argp_failure@@Base+0x1270>
   16358:	ldrh	r1, [r2]
   1635c:	ldrb	r2, [r2, #2]
   16360:	strh	r1, [r3]
   16364:	strb	r2, [r3, #2]
   16368:	ldr	r3, [r9, #28]
   1636c:	add	r3, r3, #3
   16370:	str	r3, [r9, #28]
   16374:	b	16198 <argp_failure@@Base+0xf68>
   16378:	mov	r2, #0
   1637c:	str	r6, [sp, #4]
   16380:	str	r7, [sp]
   16384:	ldr	r3, [pc, #280]	; 164a4 <argp_failure@@Base+0x1274>
   16388:	mov	r1, r2
   1638c:	ldr	r0, [fp, #-104]	; 0xffffff98
   16390:	bl	15230 <argp_failure@@Base>
   16394:	b	15b40 <argp_failure@@Base+0x910>
   16398:	ldr	r3, [fp, #-136]	; 0xffffff78
   1639c:	ldr	r8, [r3]
   163a0:	str	r4, [fp, #-88]	; 0xffffffa8
   163a4:	str	r4, [fp, #-84]	; 0xffffffac
   163a8:	str	r4, [fp, #-80]	; 0xffffffb0
   163ac:	b	155d0 <argp_failure@@Base+0x3a0>
   163b0:	ldr	r0, [r9, #28]
   163b4:	mov	r2, r6
   163b8:	mov	r1, r5
   163bc:	bl	11194 <memcpy@plt>
   163c0:	ldr	r3, [r9, #28]
   163c4:	add	r6, r3, r6
   163c8:	str	r6, [r9, #28]
   163cc:	b	161d0 <argp_failure@@Base+0xfa0>
   163d0:	mov	r0, r9
   163d4:	bl	1743c <argp_error@@Base+0xdb4>
   163d8:	ldr	r3, [r9, #28]
   163dc:	ldr	r1, [r9, #24]
   163e0:	ldr	r2, [r9, #16]
   163e4:	ldr	r7, [r9, #20]
   163e8:	ldr	sl, [fp, #-100]	; 0xffffff9c
   163ec:	sub	r3, r3, r1
   163f0:	cmp	r3, r2
   163f4:	ldr	r6, [sl, #20]
   163f8:	bic	r7, r7, r7, asr #31
   163fc:	bls	16160 <argp_failure@@Base+0xf30>
   16400:	mov	r0, r9
   16404:	bl	1743c <argp_error@@Base+0xdb4>
   16408:	ldr	r3, [r9, #28]
   1640c:	ldr	r1, [r9, #24]
   16410:	ldr	r2, [r9, #16]
   16414:	sub	r3, r3, r1
   16418:	cmp	r3, r2
   1641c:	ldr	r3, [sl, #20]
   16420:	str	r6, [r9, #4]
   16424:	movls	r6, r3
   16428:	bls	16168 <argp_failure@@Base+0xf38>
   1642c:	mov	r0, r9
   16430:	str	r3, [fp, #-124]	; 0xffffff84
   16434:	bl	1743c <argp_error@@Base+0xdb4>
   16438:	ldr	r6, [sl, #20]
   1643c:	ldr	r3, [fp, #-124]	; 0xffffff84
   16440:	b	16168 <argp_failure@@Base+0xf38>
   16444:	andeq	r9, r2, ip, lsl #3
   16448:			; <UNDEFINED> instruction: 0x000292b0
   1644c:	andeq	r8, r1, r0, lsr #14
   16450:	andeq	r0, r0, #5
   16454:	andeq	r8, r1, ip, lsr #13
   16458:	andeq	r8, r1, ip, ror #10
   1645c:	andeq	r8, r1, ip, lsr r4
   16460:	andeq	r8, r1, ip, lsr #7
   16464:	andeq	r8, r1, r8, lsr #12
   16468:	strdeq	r8, [r1], -r4
   1646c:	andeq	r8, r1, r8, asr r6
   16470:	andeq	r8, r1, r0, lsr r6
   16474:	andeq	r8, r1, r0, asr #12
   16478:	andeq	r8, r1, r8, lsr r6
   1647c:	andeq	r8, r1, r8, asr #12
   16480:	andeq	r7, r1, r4, asr #30
   16484:	andeq	r7, r1, r4, lsr #30
   16488:	andeq	r4, r1, r8, asr r1
   1648c:	muleq	r1, r8, r6
   16490:			; <UNDEFINED> instruction: 0x00017cbc
   16494:	andeq	r8, r1, r0, lsr #13
   16498:	muleq	r1, r0, r6
   1649c:	strdeq	r7, [r1], -r4
   164a0:	andeq	r8, r1, r8, lsr #13
   164a4:	andeq	r8, r1, ip, lsr #11
   164a8:	ldrdeq	r8, [r1], -r4
   164ac:	andeq	r8, r1, ip, ror r5
   164b0:	str	r6, [sp]
   164b4:	ldr	r3, [pc, #-20]	; 164a8 <argp_failure@@Base+0x1278>
   164b8:	mov	r1, r2
   164bc:	ldr	r0, [fp, #-104]	; 0xffffff98
   164c0:	bl	15230 <argp_failure@@Base>
   164c4:	b	15b5c <argp_failure@@Base+0x92c>
   164c8:	mov	r0, r4
   164cc:	bl	12eb0 <argp_parse@@Base+0xe98>
   164d0:	b	15988 <argp_failure@@Base+0x758>
   164d4:	ldr	r0, [r6, #16]
   164d8:	sub	r2, fp, #76	; 0x4c
   164dc:	ldr	r1, [r8, #20]
   164e0:	bl	13764 <argp_parse@@Base+0x174c>
   164e4:	b	1621c <argp_failure@@Base+0xfec>
   164e8:	mov	r1, #1
   164ec:	mov	r0, r9
   164f0:	bl	17acc <argp_error@@Base+0x1444>
   164f4:	cmp	r0, #0
   164f8:	beq	15550 <argp_failure@@Base+0x320>
   164fc:	ldr	r3, [r9, #28]
   16500:	b	15540 <argp_failure@@Base+0x310>
   16504:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16508:	bl	1120c <funlockfile@plt>
   1650c:	b	15510 <argp_failure@@Base+0x2e0>
   16510:	mov	r1, r6
   16514:	mov	r0, r9
   16518:	bl	1368c <argp_parse@@Base+0x1674>
   1651c:	b	16198 <argp_failure@@Base+0xf68>
   16520:	mov	r1, #1
   16524:	mov	r0, r9
   16528:	bl	17acc <argp_error@@Base+0x1444>
   1652c:	cmp	r0, #0
   16530:	beq	16198 <argp_failure@@Base+0xf68>
   16534:	ldr	r3, [r9, #28]
   16538:	b	16188 <argp_failure@@Base+0xf58>
   1653c:	mov	r1, #1
   16540:	mov	r0, r9
   16544:	bl	17acc <argp_error@@Base+0x1444>
   16548:	cmp	r0, #0
   1654c:	beq	155a0 <argp_failure@@Base+0x370>
   16550:	ldr	r3, [r9, #28]
   16554:	b	15590 <argp_failure@@Base+0x360>
   16558:	str	r6, [sp, #4]
   1655c:	str	r7, [sp]
   16560:	ldr	r3, [pc, #-188]	; 164ac <argp_failure@@Base+0x127c>
   16564:	mov	r2, #0
   16568:	ldr	r0, [fp, #-104]	; 0xffffff98
   1656c:	bl	15230 <argp_failure@@Base>
   16570:	b	15b38 <argp_failure@@Base+0x908>
   16574:	ldr	r3, [r9, #28]
   16578:	b	15960 <argp_failure@@Base+0x730>
   1657c:	mov	r1, #1
   16580:	mov	r0, r9
   16584:	bl	17acc <argp_error@@Base+0x1444>
   16588:	cmp	r0, #0
   1658c:	beq	1597c <argp_failure@@Base+0x74c>
   16590:	ldr	r3, [r9, #28]
   16594:	b	1596c <argp_failure@@Base+0x73c>
   16598:	mov	r1, #1
   1659c:	mov	r0, r9
   165a0:	bl	17acc <argp_error@@Base+0x1444>
   165a4:	cmp	r0, #0
   165a8:	beq	1590c <argp_failure@@Base+0x6dc>
   165ac:	ldr	r3, [r9, #28]
   165b0:	b	158fc <argp_failure@@Base+0x6cc>

000165b4 <argp_help@@Base>:
   165b4:	push	{lr}		; (str lr, [sp, #-4]!)
   165b8:	sub	sp, sp, #12
   165bc:	str	r3, [sp]
   165c0:	mov	r3, r2
   165c4:	mov	r2, r1
   165c8:	mov	r1, #0
   165cc:	bl	15438 <argp_failure@@Base+0x208>
   165d0:	add	sp, sp, #12
   165d4:	pop	{pc}		; (ldr pc, [sp], #4)

000165d8 <argp_state_help@@Base>:
   165d8:	push	{r4, r5, lr}
   165dc:	subs	r4, r0, #0
   165e0:	sub	sp, sp, #12
   165e4:	mov	r5, r2
   165e8:	beq	16648 <argp_state_help@@Base+0x70>
   165ec:	ldr	r3, [r4, #16]
   165f0:	tst	r3, #2
   165f4:	bne	16640 <argp_state_help@@Base+0x68>
   165f8:	cmp	r1, #0
   165fc:	beq	16640 <argp_state_help@@Base+0x68>
   16600:	tst	r3, #64	; 0x40
   16604:	ldr	r3, [r4, #40]	; 0x28
   16608:	orrne	r5, r5, #128	; 0x80
   1660c:	ldr	r0, [r4]
   16610:	mov	r2, r1
   16614:	str	r3, [sp]
   16618:	mov	r1, r4
   1661c:	mov	r3, r5
   16620:	bl	15438 <argp_failure@@Base+0x208>
   16624:	ldr	r3, [r4, #16]
   16628:	tst	r3, #32
   1662c:	bne	16640 <argp_state_help@@Base+0x68>
   16630:	ands	r0, r5, #256	; 0x100
   16634:	bne	16674 <argp_state_help@@Base+0x9c>
   16638:	tst	r5, #512	; 0x200
   1663c:	bne	16670 <argp_state_help@@Base+0x98>
   16640:	add	sp, sp, #12
   16644:	pop	{r4, r5, pc}
   16648:	cmp	r1, #0
   1664c:	beq	16640 <argp_state_help@@Base+0x68>
   16650:	ldr	r3, [pc, #40]	; 16680 <argp_state_help@@Base+0xa8>
   16654:	mov	r2, r1
   16658:	mov	r1, r4
   1665c:	ldr	ip, [r3]
   16660:	mov	r3, r5
   16664:	str	ip, [sp]
   16668:	bl	15438 <argp_failure@@Base+0x208>
   1666c:	b	16630 <argp_state_help@@Base+0x58>
   16670:	bl	112c0 <exit@plt>
   16674:	ldr	r3, [pc, #8]	; 16684 <argp_state_help@@Base+0xac>
   16678:	ldr	r0, [r3]
   1667c:	bl	112c0 <exit@plt>
   16680:	andeq	r9, r2, r8, asr #3
   16684:	andeq	r9, r2, r0, asr #3

00016688 <argp_error@@Base>:
   16688:	push	{r1, r2, r3}
   1668c:	push	{r4, r5, lr}
   16690:	subs	r5, r0, #0
   16694:	sub	sp, sp, #8
   16698:	beq	16768 <argp_error@@Base+0xe0>
   1669c:	ldr	r3, [r5, #16]
   166a0:	tst	r3, #2
   166a4:	bne	16758 <argp_error@@Base+0xd0>
   166a8:	ldr	r4, [r5, #44]	; 0x2c
   166ac:	cmp	r4, #0
   166b0:	beq	16758 <argp_error@@Base+0xd0>
   166b4:	mov	r0, r4
   166b8:	bl	113c8 <flockfile@plt>
   166bc:	ldr	r0, [r5, #40]	; 0x28
   166c0:	add	r3, sp, #24
   166c4:	str	r3, [sp, #4]
   166c8:	mov	r1, r4
   166cc:	bl	11104 <fputs_unlocked@plt>
   166d0:	ldr	r3, [r4, #20]
   166d4:	ldr	r2, [r4, #24]
   166d8:	cmp	r3, r2
   166dc:	addcc	r1, r3, #1
   166e0:	movcc	r2, #58	; 0x3a
   166e4:	strcc	r1, [r4, #20]
   166e8:	strbcc	r2, [r3]
   166ec:	bcs	167b4 <argp_error@@Base+0x12c>
   166f0:	ldr	r3, [r4, #20]
   166f4:	ldr	r2, [r4, #24]
   166f8:	cmp	r3, r2
   166fc:	addcc	r1, r3, #1
   16700:	movcc	r2, #32
   16704:	strcc	r1, [r4, #20]
   16708:	strbcc	r2, [r3]
   1670c:	bcs	167a4 <argp_error@@Base+0x11c>
   16710:	ldr	r1, [sp, #20]
   16714:	ldr	r2, [sp, #4]
   16718:	mov	r0, r4
   1671c:	bl	1138c <vfprintf@plt>
   16720:	ldr	r3, [r4, #20]
   16724:	ldr	r2, [r4, #24]
   16728:	cmp	r3, r2
   1672c:	addcc	r1, r3, #1
   16730:	movcc	r2, #10
   16734:	strcc	r1, [r4, #20]
   16738:	strbcc	r2, [r3]
   1673c:	bcs	16794 <argp_error@@Base+0x10c>
   16740:	mov	r0, r5
   16744:	mov	r2, #260	; 0x104
   16748:	mov	r1, r4
   1674c:	bl	165d8 <argp_state_help@@Base>
   16750:	mov	r0, r4
   16754:	bl	1120c <funlockfile@plt>
   16758:	add	sp, sp, #8
   1675c:	pop	{r4, r5, lr}
   16760:	add	sp, sp, #12
   16764:	bx	lr
   16768:	ldr	r3, [pc, #84]	; 167c4 <argp_error@@Base+0x13c>
   1676c:	ldr	r4, [r3]
   16770:	cmp	r4, #0
   16774:	beq	16758 <argp_error@@Base+0xd0>
   16778:	mov	r0, r4
   1677c:	bl	113c8 <flockfile@plt>
   16780:	ldr	r2, [pc, #64]	; 167c8 <argp_error@@Base+0x140>
   16784:	add	r3, sp, #24
   16788:	str	r3, [sp, #4]
   1678c:	ldr	r0, [r2]
   16790:	b	166c8 <argp_error@@Base+0x40>
   16794:	mov	r1, #10
   16798:	mov	r0, r4
   1679c:	bl	11350 <__overflow@plt>
   167a0:	b	16740 <argp_error@@Base+0xb8>
   167a4:	mov	r1, #32
   167a8:	mov	r0, r4
   167ac:	bl	11350 <__overflow@plt>
   167b0:	b	16710 <argp_error@@Base+0x88>
   167b4:	mov	r1, #58	; 0x3a
   167b8:	mov	r0, r4
   167bc:	bl	11350 <__overflow@plt>
   167c0:	b	166f0 <argp_error@@Base+0x68>
   167c4:	ldrdeq	r9, [r2], -r8
   167c8:	andeq	r9, r2, r8, asr #3
   167cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   167d0:	ldr	r4, [r1, #32]
   167d4:	ldr	r8, [r1, #28]
   167d8:	ldr	r7, [r1]
   167dc:	add	r6, r0, r4, lsl #2
   167e0:	mov	r2, r8
   167e4:	mov	r5, r7
   167e8:	cmp	r5, r4
   167ec:	movle	r3, #0
   167f0:	movgt	r3, #1
   167f4:	cmp	r2, r4
   167f8:	movge	r3, #0
   167fc:	cmp	r3, #0
   16800:	beq	16874 <argp_error@@Base+0x1ec>
   16804:	sub	r3, r5, r4
   16808:	sub	sl, r4, r2
   1680c:	cmp	r3, sl
   16810:	ble	16844 <argp_error@@Base+0x1bc>
   16814:	sub	r5, r5, sl
   16818:	add	sl, sl, r2
   1681c:	add	ip, r0, r5, lsl #2
   16820:	add	sl, r0, sl, lsl #2
   16824:	add	r3, r0, r2, lsl #2
   16828:	ldr	r9, [ip]
   1682c:	ldr	lr, [r3]
   16830:	str	r9, [r3], #4
   16834:	cmp	sl, r3
   16838:	str	lr, [ip], #4
   1683c:	bne	16828 <argp_error@@Base+0x1a0>
   16840:	b	167e8 <argp_error@@Base+0x160>
   16844:	add	sl, r3, r2
   16848:	add	r3, r0, r2, lsl #2
   1684c:	add	r9, r0, sl, lsl #2
   16850:	mov	r2, r6
   16854:	ldr	lr, [r2]
   16858:	ldr	ip, [r3]
   1685c:	str	lr, [r3], #4
   16860:	cmp	r3, r9
   16864:	str	ip, [r2], #4
   16868:	bne	16854 <argp_error@@Base+0x1cc>
   1686c:	mov	r2, sl
   16870:	b	167e8 <argp_error@@Base+0x160>
   16874:	sub	r4, r7, r4
   16878:	add	r8, r4, r8
   1687c:	str	r8, [r1, #28]
   16880:	str	r7, [r1, #32]
   16884:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1688c:	sub	sp, sp, #44	; 0x2c
   16890:	str	r1, [sp, #20]
   16894:	ldr	r1, [sp, #88]	; 0x58
   16898:	str	r0, [sp, #24]
   1689c:	str	r2, [sp, #28]
   168a0:	ldr	r8, [r1, #20]
   168a4:	str	r3, [sp, #12]
   168a8:	mov	r7, r8
   168ac:	ldrb	r5, [r8]
   168b0:	cmp	r5, #61	; 0x3d
   168b4:	cmpne	r5, #0
   168b8:	movne	r5, #1
   168bc:	moveq	r5, #0
   168c0:	beq	168d8 <argp_error@@Base+0x250>
   168c4:	ldrb	r3, [r7, #1]!
   168c8:	cmp	r3, #0
   168cc:	cmpne	r3, #61	; 0x3d
   168d0:	bne	168c4 <argp_error@@Base+0x23c>
   168d4:	sub	r5, r7, r8
   168d8:	ldr	r3, [sp, #12]
   168dc:	ldr	sl, [r3]
   168e0:	cmp	sl, #0
   168e4:	beq	16b98 <argp_error@@Base+0x510>
   168e8:	mov	fp, r3
   168ec:	mov	r4, sl
   168f0:	mov	r6, #0
   168f4:	mov	r2, r5
   168f8:	mov	r1, r8
   168fc:	mov	r0, r4
   16900:	bl	113f8 <strncmp@plt>
   16904:	mov	r9, fp
   16908:	cmp	r0, #0
   1690c:	mov	r0, r4
   16910:	bne	16920 <argp_error@@Base+0x298>
   16914:	bl	112cc <strlen@plt>
   16918:	cmp	r0, r5
   1691c:	beq	169ac <argp_error@@Base+0x324>
   16920:	ldr	r4, [fp, #16]!
   16924:	add	r6, r6, #1
   16928:	cmp	r4, #0
   1692c:	bne	168f4 <argp_error@@Base+0x26c>
   16930:	ldr	r3, [sp, #12]
   16934:	ldr	fp, [sp, #88]	; 0x58
   16938:	mov	r0, sl
   1693c:	mov	r1, r8
   16940:	mov	r9, r4
   16944:	mov	sl, r4
   16948:	mov	r8, r3
   1694c:	mvn	r2, #0
   16950:	str	r4, [sp, #36]	; 0x24
   16954:	str	r4, [sp, #16]
   16958:	str	r2, [sp, #32]
   1695c:	mov	r2, r5
   16960:	bl	113f8 <strncmp@plt>
   16964:	cmp	r0, #0
   16968:	bne	16988 <argp_error@@Base+0x300>
   1696c:	cmp	r9, #0
   16970:	beq	16c08 <argp_error@@Base+0x580>
   16974:	ldr	r3, [sp, #84]	; 0x54
   16978:	cmp	r3, #0
   1697c:	beq	16a50 <argp_error@@Base+0x3c8>
   16980:	cmp	r4, #0
   16984:	beq	16a84 <argp_error@@Base+0x3fc>
   16988:	ldr	r0, [r8, #16]!
   1698c:	add	sl, sl, #1
   16990:	cmp	r0, #0
   16994:	beq	16ab8 <argp_error@@Base+0x430>
   16998:	ldr	r1, [fp, #20]
   1699c:	b	1695c <argp_error@@Base+0x2d4>
   169a0:	cmp	r9, #0
   169a4:	beq	16b98 <argp_error@@Base+0x510>
   169a8:	ldr	r6, [sp, #32]
   169ac:	ldr	r3, [sp, #88]	; 0x58
   169b0:	ldr	r0, [sp, #88]	; 0x58
   169b4:	mov	r1, #0
   169b8:	ldr	r2, [r3]
   169bc:	str	r1, [r0, #20]
   169c0:	add	r3, r2, #1
   169c4:	str	r3, [r0]
   169c8:	ldrb	r1, [r7]
   169cc:	cmp	r1, #0
   169d0:	bne	16a10 <argp_error@@Base+0x388>
   169d4:	ldr	r1, [r9, #4]
   169d8:	cmp	r1, #1
   169dc:	beq	16c14 <argp_error@@Base+0x58c>
   169e0:	ldr	r3, [sp, #80]	; 0x50
   169e4:	ldr	r2, [r9, #8]
   169e8:	cmp	r3, #0
   169ec:	strne	r6, [r3]
   169f0:	cmp	r2, #0
   169f4:	movne	r3, #0
   169f8:	ldreq	r3, [r9, #12]
   169fc:	ldrne	r1, [r9, #12]
   16a00:	strne	r1, [r2]
   16a04:	mov	r0, r3
   16a08:	add	sp, sp, #44	; 0x2c
   16a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a10:	ldr	r3, [r9, #4]
   16a14:	cmp	r3, #0
   16a18:	movne	r3, r0
   16a1c:	addne	r7, r7, #1
   16a20:	strne	r7, [r3, #12]
   16a24:	bne	169e0 <argp_error@@Base+0x358>
   16a28:	ldr	r3, [sp, #92]	; 0x5c
   16a2c:	cmp	r3, #0
   16a30:	bne	16b60 <argp_error@@Base+0x4d8>
   16a34:	ldr	r1, [sp, #88]	; 0x58
   16a38:	ldr	r2, [r9, #12]
   16a3c:	mov	r3, #63	; 0x3f
   16a40:	str	r2, [r1, #8]
   16a44:	mov	r0, r3
   16a48:	add	sp, sp, #44	; 0x2c
   16a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a50:	ldr	r2, [r9, #4]
   16a54:	ldr	r3, [r8, #4]
   16a58:	cmp	r2, r3
   16a5c:	bne	16980 <argp_error@@Base+0x2f8>
   16a60:	ldr	r2, [r9, #8]
   16a64:	ldr	r3, [r8, #8]
   16a68:	cmp	r2, r3
   16a6c:	bne	16980 <argp_error@@Base+0x2f8>
   16a70:	ldr	r2, [r9, #12]
   16a74:	ldr	r3, [r8, #12]
   16a78:	cmp	r2, r3
   16a7c:	bne	16980 <argp_error@@Base+0x2f8>
   16a80:	b	16988 <argp_error@@Base+0x300>
   16a84:	ldr	r3, [sp, #92]	; 0x5c
   16a88:	cmp	r3, #0
   16a8c:	ldr	r3, [sp, #16]
   16a90:	beq	16b50 <argp_error@@Base+0x4c8>
   16a94:	cmp	r3, #0
   16a98:	beq	16d6c <argp_error@@Base+0x6e4>
   16a9c:	ldr	r3, [sp, #16]
   16aa0:	ldr	r0, [r8, #16]!
   16aa4:	mov	r2, #1
   16aa8:	cmp	r0, #0
   16aac:	strb	r2, [r3, sl]
   16ab0:	add	sl, sl, #1
   16ab4:	bne	16998 <argp_error@@Base+0x310>
   16ab8:	ldr	r3, [sp, #16]
   16abc:	cmp	r3, #0
   16ac0:	cmpeq	r4, #0
   16ac4:	beq	169a0 <argp_error@@Base+0x318>
   16ac8:	ldr	r3, [sp, #92]	; 0x5c
   16acc:	cmp	r3, #0
   16ad0:	beq	16c50 <argp_error@@Base+0x5c8>
   16ad4:	cmp	r4, #0
   16ad8:	bne	16cd8 <argp_error@@Base+0x650>
   16adc:	ldr	r5, [pc, #716]	; 16db0 <argp_error@@Base+0x728>
   16ae0:	ldr	r8, [sp, #16]
   16ae4:	ldr	r7, [pc, #712]	; 16db4 <argp_error@@Base+0x72c>
   16ae8:	ldr	r0, [r5]
   16aec:	bl	113c8 <flockfile@plt>
   16af0:	ldr	r3, [sp, #20]
   16af4:	ldr	r0, [r5]
   16af8:	ldr	r1, [pc, #696]	; 16db8 <argp_error@@Base+0x730>
   16afc:	ldr	r2, [r3]
   16b00:	ldr	r3, [sp, #88]	; 0x58
   16b04:	add	r6, r8, r6
   16b08:	ldr	r3, [r3, #20]
   16b0c:	str	r3, [sp]
   16b10:	ldr	r3, [sp, #96]	; 0x60
   16b14:	bl	112e4 <fprintf@plt>
   16b18:	ldr	r9, [sp, #12]
   16b1c:	b	16b2c <argp_error@@Base+0x4a4>
   16b20:	cmp	r8, r6
   16b24:	add	r4, r4, #1
   16b28:	beq	16c3c <argp_error@@Base+0x5b4>
   16b2c:	ldrb	r3, [r8], #1
   16b30:	cmp	r3, #0
   16b34:	beq	16b20 <argp_error@@Base+0x498>
   16b38:	ldr	r3, [r9, r4, lsl #4]
   16b3c:	ldr	r2, [sp, #96]	; 0x60
   16b40:	mov	r1, r7
   16b44:	ldr	r0, [r5]
   16b48:	bl	112e4 <fprintf@plt>
   16b4c:	b	16b20 <argp_error@@Base+0x498>
   16b50:	cmp	r3, #0
   16b54:	mov	r4, #1
   16b58:	bne	16a9c <argp_error@@Base+0x414>
   16b5c:	b	16988 <argp_error@@Base+0x300>
   16b60:	ldr	r3, [sp, #20]
   16b64:	ldr	r1, [pc, #580]	; 16db0 <argp_error@@Base+0x728>
   16b68:	ldr	r2, [r3]
   16b6c:	ldr	r3, [r9]
   16b70:	ldr	r0, [r1]
   16b74:	str	r3, [sp]
   16b78:	ldr	r1, [pc, #572]	; 16dbc <argp_error@@Base+0x734>
   16b7c:	ldr	r3, [sp, #96]	; 0x60
   16b80:	bl	112e4 <fprintf@plt>
   16b84:	ldr	r1, [sp, #88]	; 0x58
   16b88:	ldr	r2, [r9, #12]
   16b8c:	mov	r3, #63	; 0x3f
   16b90:	str	r2, [r1, #8]
   16b94:	b	16a44 <argp_error@@Base+0x3bc>
   16b98:	ldr	r3, [sp, #84]	; 0x54
   16b9c:	cmp	r3, #0
   16ba0:	bne	16d2c <argp_error@@Base+0x6a4>
   16ba4:	ldr	r3, [sp, #92]	; 0x5c
   16ba8:	cmp	r3, #0
   16bac:	beq	16bd8 <argp_error@@Base+0x550>
   16bb0:	ldr	r3, [sp, #20]
   16bb4:	ldr	r1, [pc, #500]	; 16db0 <argp_error@@Base+0x728>
   16bb8:	ldr	r2, [r3]
   16bbc:	ldr	r3, [sp, #88]	; 0x58
   16bc0:	ldr	r0, [r1]
   16bc4:	ldr	r1, [pc, #500]	; 16dc0 <argp_error@@Base+0x738>
   16bc8:	ldr	r3, [r3, #20]
   16bcc:	str	r3, [sp]
   16bd0:	ldr	r3, [sp, #96]	; 0x60
   16bd4:	bl	112e4 <fprintf@plt>
   16bd8:	ldr	r3, [sp, #88]	; 0x58
   16bdc:	ldr	r1, [sp, #88]	; 0x58
   16be0:	mov	r2, #0
   16be4:	ldr	r3, [r3]
   16be8:	str	r2, [r1, #20]
   16bec:	add	r3, r3, #1
   16bf0:	str	r3, [r1]
   16bf4:	mov	r3, #63	; 0x3f
   16bf8:	mov	r0, r3
   16bfc:	str	r2, [r1, #8]
   16c00:	add	sp, sp, #44	; 0x2c
   16c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c08:	str	sl, [sp, #32]
   16c0c:	mov	r9, r8
   16c10:	b	16988 <argp_error@@Base+0x300>
   16c14:	ldr	r1, [sp, #24]
   16c18:	cmp	r3, r1
   16c1c:	bge	16ca8 <argp_error@@Base+0x620>
   16c20:	ldr	r1, [sp, #20]
   16c24:	add	r2, r2, #2
   16c28:	ldr	r3, [r1, r3, lsl #2]
   16c2c:	ldr	r1, [sp, #88]	; 0x58
   16c30:	str	r3, [r1, #12]
   16c34:	str	r2, [r1]
   16c38:	b	169e0 <argp_error@@Base+0x358>
   16c3c:	ldr	r1, [r5]
   16c40:	mov	r0, #10
   16c44:	bl	113a4 <fputc@plt>
   16c48:	ldr	r0, [r5]
   16c4c:	bl	1120c <funlockfile@plt>
   16c50:	ldr	r3, [sp, #36]	; 0x24
   16c54:	cmp	r3, #0
   16c58:	beq	16c64 <argp_error@@Base+0x5dc>
   16c5c:	ldr	r0, [sp, #16]
   16c60:	bl	12eb0 <argp_parse@@Base+0xe98>
   16c64:	ldr	r3, [sp, #88]	; 0x58
   16c68:	ldr	r4, [r3, #20]
   16c6c:	mov	r0, r4
   16c70:	bl	112cc <strlen@plt>
   16c74:	ldr	r3, [sp, #88]	; 0x58
   16c78:	ldr	r1, [sp, #88]	; 0x58
   16c7c:	mov	r2, #0
   16c80:	ldr	r3, [r3]
   16c84:	str	r2, [r1, #8]
   16c88:	add	r3, r3, #1
   16c8c:	str	r3, [r1]
   16c90:	mov	r3, #63	; 0x3f
   16c94:	add	r0, r4, r0
   16c98:	str	r0, [r1, #20]
   16c9c:	mov	r0, r3
   16ca0:	add	sp, sp, #44	; 0x2c
   16ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ca8:	ldr	r3, [sp, #92]	; 0x5c
   16cac:	cmp	r3, #0
   16cb0:	bne	16d04 <argp_error@@Base+0x67c>
   16cb4:	ldr	r2, [sp, #88]	; 0x58
   16cb8:	ldr	r3, [r9, #12]
   16cbc:	str	r3, [r2, #8]
   16cc0:	ldr	r3, [sp, #28]
   16cc4:	ldrb	r3, [r3]
   16cc8:	cmp	r3, #58	; 0x3a
   16ccc:	movne	r3, #63	; 0x3f
   16cd0:	moveq	r3, #58	; 0x3a
   16cd4:	b	16a04 <argp_error@@Base+0x37c>
   16cd8:	ldr	r3, [sp, #20]
   16cdc:	ldr	r1, [pc, #204]	; 16db0 <argp_error@@Base+0x728>
   16ce0:	ldr	r2, [r3]
   16ce4:	ldr	r3, [sp, #88]	; 0x58
   16ce8:	ldr	r0, [r1]
   16cec:	ldr	r1, [pc, #208]	; 16dc4 <argp_error@@Base+0x73c>
   16cf0:	ldr	r3, [r3, #20]
   16cf4:	str	r3, [sp]
   16cf8:	ldr	r3, [sp, #96]	; 0x60
   16cfc:	bl	112e4 <fprintf@plt>
   16d00:	b	16c50 <argp_error@@Base+0x5c8>
   16d04:	ldr	r3, [sp, #20]
   16d08:	ldr	r1, [pc, #160]	; 16db0 <argp_error@@Base+0x728>
   16d0c:	ldr	r2, [r3]
   16d10:	ldr	r3, [r9]
   16d14:	ldr	r0, [r1]
   16d18:	str	r3, [sp]
   16d1c:	ldr	r1, [pc, #164]	; 16dc8 <argp_error@@Base+0x740>
   16d20:	ldr	r3, [sp, #96]	; 0x60
   16d24:	bl	112e4 <fprintf@plt>
   16d28:	b	16cb4 <argp_error@@Base+0x62c>
   16d2c:	ldr	r3, [sp, #88]	; 0x58
   16d30:	ldr	r2, [sp, #20]
   16d34:	ldr	r3, [r3]
   16d38:	ldr	r3, [r2, r3, lsl #2]
   16d3c:	ldrb	r3, [r3, #1]
   16d40:	cmp	r3, #45	; 0x2d
   16d44:	beq	16ba4 <argp_error@@Base+0x51c>
   16d48:	ldr	r3, [sp, #88]	; 0x58
   16d4c:	ldr	r0, [sp, #28]
   16d50:	ldr	r3, [r3, #20]
   16d54:	ldrb	r1, [r3]
   16d58:	bl	112d8 <strchr@plt>
   16d5c:	cmp	r0, #0
   16d60:	beq	16ba4 <argp_error@@Base+0x51c>
   16d64:	mvn	r3, #0
   16d68:	b	16a04 <argp_error@@Base+0x37c>
   16d6c:	mov	r0, r6
   16d70:	bl	13460 <argp_parse@@Base+0x1448>
   16d74:	subs	r3, r0, #0
   16d78:	str	r3, [sp, #16]
   16d7c:	beq	16da8 <argp_error@@Base+0x720>
   16d80:	mov	r2, r6
   16d84:	mov	r1, #0
   16d88:	bl	11314 <memset@plt>
   16d8c:	mov	r3, #1
   16d90:	str	r3, [sp, #36]	; 0x24
   16d94:	ldr	r2, [sp, #32]
   16d98:	ldr	r3, [sp, #16]
   16d9c:	mov	r1, #1
   16da0:	strb	r1, [r3, r2]
   16da4:	b	16a9c <argp_error@@Base+0x414>
   16da8:	mov	r4, #1
   16dac:	b	16988 <argp_error@@Base+0x300>
   16db0:	ldrdeq	r9, [r2], -r8
   16db4:	andeq	r8, r1, r4, lsl #15
   16db8:	andeq	r8, r1, r4, asr r7
   16dbc:	andeq	r8, r1, ip, lsr #15
   16dc0:	andeq	r8, r1, ip, lsl #15
   16dc4:	andeq	r8, r1, r4, lsr r7
   16dc8:	ldrdeq	r8, [r1], -ip
   16dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16dd0:	sub	sp, sp, #36	; 0x24
   16dd4:	subs	r6, r0, #0
   16dd8:	ldr	r4, [sp, #80]	; 0x50
   16ddc:	ldr	r8, [r4, #4]
   16de0:	ble	16fbc <argp_error@@Base+0x934>
   16de4:	mov	sl, r3
   16de8:	ldr	r3, [r4]
   16dec:	mov	r7, r2
   16df0:	mov	r2, #0
   16df4:	cmp	r3, r2
   16df8:	mov	r9, r1
   16dfc:	str	r2, [r4, #12]
   16e00:	beq	17044 <argp_error@@Base+0x9bc>
   16e04:	ldr	r2, [r4, #16]
   16e08:	cmp	r2, #0
   16e0c:	bne	16fc8 <argp_error@@Base+0x940>
   16e10:	mov	r5, #0
   16e14:	str	r3, [r4, #32]
   16e18:	str	r3, [r4, #28]
   16e1c:	str	r5, [r4, #20]
   16e20:	ldrb	r3, [r7]
   16e24:	cmp	r3, #45	; 0x2d
   16e28:	moveq	r3, #2
   16e2c:	addeq	r7, r7, #1
   16e30:	streq	r3, [r4, #24]
   16e34:	beq	16e5c <argp_error@@Base+0x7d4>
   16e38:	cmp	r3, #43	; 0x2b
   16e3c:	streq	r5, [r4, #24]
   16e40:	addeq	r7, r7, #1
   16e44:	beq	16e5c <argp_error@@Base+0x7d4>
   16e48:	ldr	r3, [sp, #84]	; 0x54
   16e4c:	cmp	r3, #0
   16e50:	beq	170e4 <argp_error@@Base+0xa5c>
   16e54:	mov	r3, #0
   16e58:	str	r3, [r4, #24]
   16e5c:	mov	r3, #1
   16e60:	str	r3, [r4, #16]
   16e64:	ldrb	r3, [r7]
   16e68:	cmp	r3, #58	; 0x3a
   16e6c:	moveq	r8, #0
   16e70:	cmp	r5, #0
   16e74:	beq	16f28 <argp_error@@Base+0x8a0>
   16e78:	ldrb	r3, [r5]
   16e7c:	cmp	r3, #0
   16e80:	beq	16f28 <argp_error@@Base+0x8a0>
   16e84:	add	r3, r5, #1
   16e88:	str	r3, [r4, #20]
   16e8c:	ldrb	fp, [r5]
   16e90:	mov	r0, r7
   16e94:	str	r3, [sp, #28]
   16e98:	mov	r1, fp
   16e9c:	bl	112d8 <strchr@plt>
   16ea0:	ldrb	r1, [r5, #1]
   16ea4:	ldr	r3, [sp, #28]
   16ea8:	cmp	r1, #0
   16eac:	ldreq	r1, [r4]
   16eb0:	addeq	r1, r1, #1
   16eb4:	streq	r1, [r4]
   16eb8:	sub	r1, fp, #58	; 0x3a
   16ebc:	mov	r2, r0
   16ec0:	cmp	r2, #0
   16ec4:	cmpne	r1, #1
   16ec8:	mov	r0, fp
   16ecc:	bls	17014 <argp_error@@Base+0x98c>
   16ed0:	ldrb	r1, [r2]
   16ed4:	cmp	r1, #87	; 0x57
   16ed8:	ldrb	r1, [r2, #1]
   16edc:	beq	17168 <argp_error@@Base+0xae0>
   16ee0:	cmp	r1, #58	; 0x3a
   16ee4:	bne	1700c <argp_error@@Base+0x984>
   16ee8:	ldrb	r2, [r2, #2]
   16eec:	cmp	r2, #58	; 0x3a
   16ef0:	ldrb	r2, [r5, #1]
   16ef4:	beq	171f0 <argp_error@@Base+0xb68>
   16ef8:	cmp	r2, #0
   16efc:	bne	171fc <argp_error@@Base+0xb74>
   16f00:	ldr	r3, [r4]
   16f04:	cmp	r6, r3
   16f08:	beq	1729c <argp_error@@Base+0xc14>
   16f0c:	ldr	r2, [r9, r3, lsl #2]
   16f10:	add	r3, r3, #1
   16f14:	str	r2, [r4, #12]
   16f18:	str	r3, [r4]
   16f1c:	mov	r3, #0
   16f20:	str	r3, [r4, #20]
   16f24:	b	1700c <argp_error@@Base+0x984>
   16f28:	ldr	fp, [r4]
   16f2c:	ldr	r3, [r4, #32]
   16f30:	cmp	r3, fp
   16f34:	ldr	r3, [r4, #28]
   16f38:	strgt	fp, [r4, #32]
   16f3c:	cmp	fp, r3
   16f40:	ldr	r3, [r4, #24]
   16f44:	strlt	fp, [r4, #28]
   16f48:	cmp	r3, #1
   16f4c:	beq	17054 <argp_error@@Base+0x9cc>
   16f50:	cmp	r6, fp
   16f54:	beq	170cc <argp_error@@Base+0xa44>
   16f58:	ldr	r3, [pc, #944]	; 17310 <argp_error@@Base+0xc88>
   16f5c:	ldr	r5, [r9, fp, lsl #2]
   16f60:	mov	r1, r3
   16f64:	mov	r0, r5
   16f68:	str	r3, [sp, #28]
   16f6c:	bl	1111c <strcmp@plt>
   16f70:	ldr	r3, [sp, #28]
   16f74:	cmp	r0, #0
   16f78:	bne	16fe4 <argp_error@@Base+0x95c>
   16f7c:	ldr	r3, [r4, #28]
   16f80:	ldr	r2, [r4, #32]
   16f84:	add	fp, fp, #1
   16f88:	cmp	r3, r2
   16f8c:	str	fp, [r4]
   16f90:	beq	1715c <argp_error@@Base+0xad4>
   16f94:	cmp	fp, r2
   16f98:	beq	16fac <argp_error@@Base+0x924>
   16f9c:	mov	r0, r9
   16fa0:	mov	r1, r4
   16fa4:	bl	167cc <argp_error@@Base+0x144>
   16fa8:	ldr	r3, [r4, #28]
   16fac:	cmp	r3, r6
   16fb0:	str	r6, [r4]
   16fb4:	str	r6, [r4, #32]
   16fb8:	strne	r3, [r4]
   16fbc:	mvn	r0, #0
   16fc0:	add	sp, sp, #36	; 0x24
   16fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fc8:	ldrb	r3, [r7]
   16fcc:	ldr	r5, [r4, #20]
   16fd0:	sub	r2, r3, #43	; 0x2b
   16fd4:	tst	r2, #253	; 0xfd
   16fd8:	ldrbeq	r3, [r7, #1]
   16fdc:	addeq	r7, r7, #1
   16fe0:	b	16e68 <argp_error@@Base+0x7e0>
   16fe4:	ldrb	r2, [r5]
   16fe8:	cmp	r2, #45	; 0x2d
   16fec:	beq	17110 <argp_error@@Base+0xa88>
   16ff0:	ldr	r3, [r4, #24]
   16ff4:	cmp	r3, #0
   16ff8:	beq	16fbc <argp_error@@Base+0x934>
   16ffc:	mov	r0, #1
   17000:	add	fp, fp, #1
   17004:	str	fp, [r4]
   17008:	str	r5, [r4, #12]
   1700c:	add	sp, sp, #36	; 0x24
   17010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17014:	cmp	r8, #0
   17018:	beq	17034 <argp_error@@Base+0x9ac>
   1701c:	ldr	r1, [pc, #752]	; 17314 <argp_error@@Base+0xc8c>
   17020:	ldr	r2, [r9]
   17024:	mov	r3, fp
   17028:	ldr	r0, [r1]
   1702c:	ldr	r1, [pc, #740]	; 17318 <argp_error@@Base+0xc90>
   17030:	bl	112e4 <fprintf@plt>
   17034:	mov	r0, #63	; 0x3f
   17038:	str	fp, [r4, #8]
   1703c:	add	sp, sp, #36	; 0x24
   17040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17044:	mov	r2, #1
   17048:	mov	r3, r2
   1704c:	str	r2, [r4]
   17050:	b	16e10 <argp_error@@Base+0x788>
   17054:	ldr	r2, [r4, #28]
   17058:	ldr	r3, [r4, #32]
   1705c:	cmp	r2, r3
   17060:	beq	171e0 <argp_error@@Base+0xb58>
   17064:	cmp	fp, r3
   17068:	beq	1707c <argp_error@@Base+0x9f4>
   1706c:	mov	r1, r4
   17070:	mov	r0, r9
   17074:	bl	167cc <argp_error@@Base+0x144>
   17078:	ldr	r3, [r4]
   1707c:	cmp	r6, r3
   17080:	movle	fp, r3
   17084:	ble	170c0 <argp_error@@Base+0xa38>
   17088:	add	r1, r9, r3, lsl #2
   1708c:	b	170a0 <argp_error@@Base+0xa18>
   17090:	add	r3, r3, #1
   17094:	cmp	r6, r3
   17098:	str	r3, [r4]
   1709c:	beq	17104 <argp_error@@Base+0xa7c>
   170a0:	ldr	r2, [r1], #4
   170a4:	ldrb	r0, [r2]
   170a8:	cmp	r0, #45	; 0x2d
   170ac:	bne	17090 <argp_error@@Base+0xa08>
   170b0:	ldrb	r2, [r2, #1]
   170b4:	cmp	r2, #0
   170b8:	beq	17090 <argp_error@@Base+0xa08>
   170bc:	ldr	fp, [r4]
   170c0:	str	r3, [r4, #32]
   170c4:	cmp	r6, fp
   170c8:	bne	16f58 <argp_error@@Base+0x8d0>
   170cc:	ldr	r3, [r4, #28]
   170d0:	ldr	r6, [r4, #32]
   170d4:	mvn	r0, #0
   170d8:	cmp	r3, r6
   170dc:	strne	r3, [r4]
   170e0:	b	16fc0 <argp_error@@Base+0x938>
   170e4:	ldr	r0, [pc, #560]	; 1731c <argp_error@@Base+0xc94>
   170e8:	bl	11248 <getenv@plt>
   170ec:	ldr	r5, [r4, #20]
   170f0:	cmp	r0, #0
   170f4:	bne	16e54 <argp_error@@Base+0x7cc>
   170f8:	mov	r3, #1
   170fc:	str	r3, [r4, #24]
   17100:	b	16e5c <argp_error@@Base+0x7d4>
   17104:	mov	fp, r6
   17108:	str	r3, [r4, #32]
   1710c:	b	170c4 <argp_error@@Base+0xa3c>
   17110:	ldrb	r1, [r5, #1]
   17114:	cmp	r1, #0
   17118:	beq	16ff0 <argp_error@@Base+0x968>
   1711c:	cmp	sl, #0
   17120:	beq	17154 <argp_error@@Base+0xacc>
   17124:	cmp	r1, #45	; 0x2d
   17128:	beq	17260 <argp_error@@Base+0xbd8>
   1712c:	ldr	r3, [sp, #76]	; 0x4c
   17130:	cmp	r3, #0
   17134:	beq	17154 <argp_error@@Base+0xacc>
   17138:	ldrb	r3, [r5, #2]
   1713c:	cmp	r3, #0
   17140:	bne	17210 <argp_error@@Base+0xb88>
   17144:	mov	r0, r7
   17148:	bl	112d8 <strchr@plt>
   1714c:	cmp	r0, #0
   17150:	beq	17210 <argp_error@@Base+0xb88>
   17154:	add	r5, r5, #1
   17158:	b	16e84 <argp_error@@Base+0x7fc>
   1715c:	mov	r3, fp
   17160:	str	fp, [r4, #28]
   17164:	b	16fac <argp_error@@Base+0x924>
   17168:	cmp	sl, #0
   1716c:	sub	ip, r1, #59	; 0x3b
   17170:	clz	ip, ip
   17174:	lsr	ip, ip, #5
   17178:	moveq	ip, #0
   1717c:	cmp	ip, #0
   17180:	beq	16ee0 <argp_error@@Base+0x858>
   17184:	ldrb	r2, [r5, #1]
   17188:	cmp	r2, #0
   1718c:	bne	171a0 <argp_error@@Base+0xb18>
   17190:	ldr	r3, [r4]
   17194:	cmp	r6, r3
   17198:	ldrne	r3, [r9, r3, lsl #2]
   1719c:	beq	172bc <argp_error@@Base+0xc34>
   171a0:	str	r3, [r4, #20]
   171a4:	ldr	lr, [pc, #372]	; 17320 <argp_error@@Base+0xc98>
   171a8:	ldr	r3, [sp, #72]	; 0x48
   171ac:	mov	ip, #0
   171b0:	str	r3, [sp]
   171b4:	str	r8, [sp, #12]
   171b8:	str	r4, [sp, #8]
   171bc:	str	lr, [sp, #16]
   171c0:	mov	r3, sl
   171c4:	str	ip, [r4, #12]
   171c8:	mov	r2, r7
   171cc:	mov	r1, r9
   171d0:	mov	r0, r6
   171d4:	str	ip, [sp, #4]
   171d8:	bl	16888 <argp_error@@Base+0x200>
   171dc:	b	1700c <argp_error@@Base+0x984>
   171e0:	cmp	fp, r3
   171e4:	movne	r3, fp
   171e8:	strne	fp, [r4, #28]
   171ec:	b	1707c <argp_error@@Base+0x9f4>
   171f0:	cmp	r2, #0
   171f4:	streq	r2, [r4, #12]
   171f8:	beq	16f1c <argp_error@@Base+0x894>
   171fc:	ldr	r2, [r4]
   17200:	str	r3, [r4, #12]
   17204:	add	r3, r2, #1
   17208:	str	r3, [r4]
   1720c:	b	16f1c <argp_error@@Base+0x894>
   17210:	ldr	r2, [sp, #76]	; 0x4c
   17214:	add	r5, r5, #1
   17218:	str	r5, [r4, #20]
   1721c:	ldr	r3, [pc, #256]	; 17324 <argp_error@@Base+0xc9c>
   17220:	str	r2, [sp, #4]
   17224:	ldr	r2, [sp, #72]	; 0x48
   17228:	str	r3, [sp, #16]
   1722c:	str	r2, [sp]
   17230:	str	r8, [sp, #12]
   17234:	str	r4, [sp, #8]
   17238:	mov	r3, sl
   1723c:	mov	r2, r7
   17240:	mov	r1, r9
   17244:	mov	r0, r6
   17248:	bl	16888 <argp_error@@Base+0x200>
   1724c:	cmn	r0, #1
   17250:	bne	1700c <argp_error@@Base+0x984>
   17254:	ldr	r3, [r4]
   17258:	ldr	r5, [r9, r3, lsl #2]
   1725c:	b	17154 <argp_error@@Base+0xacc>
   17260:	add	r5, r5, #2
   17264:	str	r5, [r4, #20]
   17268:	str	r3, [sp, #16]
   1726c:	ldr	r3, [sp, #76]	; 0x4c
   17270:	str	r8, [sp, #12]
   17274:	str	r3, [sp, #4]
   17278:	ldr	r3, [sp, #72]	; 0x48
   1727c:	str	r4, [sp, #8]
   17280:	str	r3, [sp]
   17284:	mov	r2, r7
   17288:	mov	r3, sl
   1728c:	mov	r1, r9
   17290:	mov	r0, r6
   17294:	bl	16888 <argp_error@@Base+0x200>
   17298:	b	1700c <argp_error@@Base+0x984>
   1729c:	cmp	r8, #0
   172a0:	bne	172f4 <argp_error@@Base+0xc6c>
   172a4:	str	fp, [r4, #8]
   172a8:	ldrb	r0, [r7]
   172ac:	cmp	r0, #58	; 0x3a
   172b0:	movne	r0, #63	; 0x3f
   172b4:	moveq	r0, #58	; 0x3a
   172b8:	b	16f1c <argp_error@@Base+0x894>
   172bc:	cmp	r8, #0
   172c0:	beq	172dc <argp_error@@Base+0xc54>
   172c4:	ldr	r1, [pc, #72]	; 17314 <argp_error@@Base+0xc8c>
   172c8:	ldr	r2, [r9]
   172cc:	mov	r3, fp
   172d0:	ldr	r0, [r1]
   172d4:	ldr	r1, [pc, #76]	; 17328 <argp_error@@Base+0xca0>
   172d8:	bl	112e4 <fprintf@plt>
   172dc:	str	fp, [r4, #8]
   172e0:	ldrb	r0, [r7]
   172e4:	cmp	r0, #58	; 0x3a
   172e8:	movne	r0, #63	; 0x3f
   172ec:	moveq	r0, #58	; 0x3a
   172f0:	b	1700c <argp_error@@Base+0x984>
   172f4:	ldr	r1, [pc, #24]	; 17314 <argp_error@@Base+0xc8c>
   172f8:	ldr	r2, [r9]
   172fc:	mov	r3, fp
   17300:	ldr	r0, [r1]
   17304:	ldr	r1, [pc, #28]	; 17328 <argp_error@@Base+0xca0>
   17308:	bl	112e4 <fprintf@plt>
   1730c:	b	172a4 <argp_error@@Base+0xc1c>
   17310:	andeq	r7, r1, ip, ror #29
   17314:	ldrdeq	r9, [r2], -r8
   17318:	andeq	r8, r1, r8, lsl r8
   1731c:	andeq	r8, r1, r4, lsl #16
   17320:	andeq	r8, r1, r0, ror #16
   17324:	andeq	r8, r1, r4, lsl r8
   17328:	andeq	r8, r1, r4, lsr r8
   1732c:	push	{r4, r5, r6, lr}
   17330:	sub	sp, sp, #16
   17334:	ldr	r5, [pc, #84]	; 17390 <argp_error@@Base+0xd08>
   17338:	ldr	ip, [sp, #32]
   1733c:	ldr	r4, [pc, #80]	; 17394 <argp_error@@Base+0xd0c>
   17340:	str	ip, [sp]
   17344:	ldr	ip, [sp, #40]	; 0x28
   17348:	ldr	r6, [sp, #36]	; 0x24
   1734c:	ldr	lr, [r5]
   17350:	str	ip, [sp, #12]
   17354:	ldr	ip, [r5, #4]
   17358:	str	r4, [sp, #8]
   1735c:	str	r6, [sp, #4]
   17360:	str	ip, [r4, #4]
   17364:	str	lr, [r4]
   17368:	bl	16dcc <argp_error@@Base+0x744>
   1736c:	ldr	r3, [pc, #36]	; 17398 <argp_error@@Base+0xd10>
   17370:	ldr	ip, [r4]
   17374:	ldr	r1, [r4, #8]
   17378:	ldr	r2, [r4, #12]
   1737c:	str	ip, [r5]
   17380:	str	r1, [r5, #8]
   17384:	str	r2, [r3]
   17388:	add	sp, sp, #16
   1738c:	pop	{r4, r5, r6, pc}
   17390:			; <UNDEFINED> instruction: 0x000291b4
   17394:	strdeq	r9, [r2], -r8
   17398:			; <UNDEFINED> instruction: 0x000292b8
   1739c:	push	{lr}		; (str lr, [sp, #-4]!)
   173a0:	mov	r3, #0
   173a4:	sub	sp, sp, #20
   173a8:	mov	ip, #1
   173ac:	str	r3, [sp]
   173b0:	stmib	sp, {r3, ip}
   173b4:	bl	1732c <argp_error@@Base+0xca4>
   173b8:	add	sp, sp, #20
   173bc:	pop	{pc}		; (ldr pc, [sp], #4)
   173c0:	push	{r4, r5, r6, r7, r8, lr}
   173c4:	mov	r8, r0
   173c8:	mov	r0, #36	; 0x24
   173cc:	mov	r7, r1
   173d0:	mov	r6, r2
   173d4:	mov	r5, r3
   173d8:	bl	13460 <argp_parse@@Base+0x1448>
   173dc:	subs	r4, r0, #0
   173e0:	beq	17424 <argp_error@@Base+0xd9c>
   173e4:	mov	r0, #0
   173e8:	str	r5, [r4, #12]
   173ec:	str	r0, [r4, #20]
   173f0:	str	r0, [r4, #16]
   173f4:	str	r8, [r4]
   173f8:	str	r7, [r4, #4]
   173fc:	str	r6, [r4, #8]
   17400:	mov	r0, #200	; 0xc8
   17404:	bl	13460 <argp_parse@@Base+0x1448>
   17408:	cmp	r0, #0
   1740c:	addne	r3, r0, #200	; 0xc8
   17410:	mov	r5, r0
   17414:	str	r0, [r4, #24]
   17418:	strne	r0, [r4, #28]
   1741c:	strne	r3, [r4, #32]
   17420:	beq	1742c <argp_error@@Base+0xda4>
   17424:	mov	r0, r4
   17428:	pop	{r4, r5, r6, r7, r8, pc}
   1742c:	mov	r0, r4
   17430:	bl	12eb0 <argp_parse@@Base+0xe98>
   17434:	mov	r4, r5
   17438:	b	17424 <argp_error@@Base+0xd9c>
   1743c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17440:	mov	r7, r0
   17444:	ldr	r6, [r0, #24]
   17448:	ldr	r3, [r0, #16]
   1744c:	ldr	fp, [r0, #28]
   17450:	sub	sp, sp, #12
   17454:	add	r6, r6, r3
   17458:	mov	r9, #32
   1745c:	cmp	r6, fp
   17460:	bcs	1753c <argp_error@@Base+0xeb4>
   17464:	ldr	r8, [r7, #20]
   17468:	cmp	r8, #0
   1746c:	bne	174dc <argp_error@@Base+0xe54>
   17470:	ldr	r4, [r7, #4]
   17474:	cmp	r4, #0
   17478:	beq	17780 <argp_error@@Base+0x10f8>
   1747c:	ldr	r2, [r7, #32]
   17480:	add	r3, fp, r4
   17484:	cmp	r2, r3
   17488:	bls	1749c <argp_error@@Base+0xe14>
   1748c:	b	178c8 <argp_error@@Base+0x1240>
   17490:	add	r8, r8, #1
   17494:	cmp	r4, r8
   17498:	beq	174d0 <argp_error@@Base+0xe48>
   1749c:	ldr	r0, [r7]
   174a0:	ldr	r3, [r0, #20]
   174a4:	ldr	r2, [r0, #24]
   174a8:	add	r1, r3, #1
   174ac:	cmp	r3, r2
   174b0:	strcc	r1, [r0, #20]
   174b4:	strbcc	r9, [r3]
   174b8:	bcc	17490 <argp_error@@Base+0xe08>
   174bc:	mov	r1, r9
   174c0:	add	r8, r8, #1
   174c4:	bl	11350 <__overflow@plt>
   174c8:	cmp	r4, r8
   174cc:	bne	1749c <argp_error@@Base+0xe14>
   174d0:	ldr	fp, [r7, #28]
   174d4:	mov	r8, r4
   174d8:	str	r4, [r7, #20]
   174dc:	sub	sl, fp, r6
   174e0:	mov	r2, sl
   174e4:	mov	r1, #10
   174e8:	mov	r0, r6
   174ec:	bl	11344 <memchr@plt>
   174f0:	cmp	r8, #0
   174f4:	movlt	r8, #0
   174f8:	movlt	r3, r8
   174fc:	str	r6, [sp]
   17500:	mov	r4, r0
   17504:	strlt	r3, [r7, #20]
   17508:	cmp	r4, #0
   1750c:	beq	177a4 <argp_error@@Base+0x111c>
   17510:	sub	r2, r4, r6
   17514:	ldr	r3, [r7, #8]
   17518:	add	r2, r2, r8
   1751c:	cmp	r2, r3
   17520:	bge	17550 <argp_error@@Base+0xec8>
   17524:	ldr	fp, [r7, #28]
   17528:	add	r6, r4, #1
   1752c:	mov	r3, #0
   17530:	cmp	r6, fp
   17534:	str	r3, [r7, #20]
   17538:	bcc	17464 <argp_error@@Base+0xddc>
   1753c:	ldr	r3, [r7, #24]
   17540:	sub	r3, fp, r3
   17544:	str	r3, [r7, #16]
   17548:	add	sp, sp, #12
   1754c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17550:	ldr	r2, [r7, #12]
   17554:	sub	r5, r3, #1
   17558:	cmp	r2, #0
   1755c:	str	r2, [sp, #4]
   17560:	blt	1785c <argp_error@@Base+0x11d4>
   17564:	add	r5, r5, #1
   17568:	sub	r8, r5, r8
   1756c:	adds	r8, r6, r8
   17570:	bcs	177dc <argp_error@@Base+0x1154>
   17574:	bl	112a8 <__ctype_b_loc@plt>
   17578:	mov	r3, r8
   1757c:	ldr	r0, [r0]
   17580:	b	1758c <argp_error@@Base+0xf04>
   17584:	cmp	r3, r6
   17588:	bcc	177e0 <argp_error@@Base+0x1158>
   1758c:	mov	r1, r3
   17590:	sub	r3, r3, #1
   17594:	ldrb	r2, [r1]
   17598:	mov	r5, r3
   1759c:	lsl	r2, r2, #1
   175a0:	ldrh	r2, [r0, r2]
   175a4:	tst	r2, #1
   175a8:	beq	17584 <argp_error@@Base+0xefc>
   175ac:	add	r5, r1, #1
   175b0:	cmp	r5, r6
   175b4:	bls	177f4 <argp_error@@Base+0x116c>
   175b8:	cmp	r1, r6
   175bc:	bcc	177ec <argp_error@@Base+0x1164>
   175c0:	mov	r1, r3
   175c4:	sub	r8, r6, #1
   175c8:	b	175e4 <argp_error@@Base+0xf5c>
   175cc:	ldrb	r3, [r1]
   175d0:	sub	r1, r1, #1
   175d4:	lsl	r3, r3, #1
   175d8:	ldrh	r3, [r0, r3]
   175dc:	tst	r3, #1
   175e0:	beq	1790c <argp_error@@Base+0x1284>
   175e4:	cmp	r8, r1
   175e8:	mov	r2, r1
   175ec:	bne	175cc <argp_error@@Base+0xf44>
   175f0:	add	r8, r8, #1
   175f4:	add	r3, sl, #1
   175f8:	add	r3, r6, r3
   175fc:	cmp	r5, r3
   17600:	beq	176e8 <argp_error@@Base+0x1060>
   17604:	add	r3, r8, #1
   17608:	ldr	r1, [sp, #4]
   1760c:	sub	r2, r5, r3
   17610:	cmp	r2, r1
   17614:	bge	17704 <argp_error@@Base+0x107c>
   17618:	cmp	r5, fp
   1761c:	bcs	176fc <argp_error@@Base+0x1074>
   17620:	ldr	r3, [r7, #32]
   17624:	ldr	r2, [sp, #4]
   17628:	sub	r3, r3, fp
   1762c:	add	r0, r2, #1
   17630:	cmp	r3, r0
   17634:	bgt	1793c <argp_error@@Base+0x12b4>
   17638:	ldr	r0, [r7, #24]
   1763c:	cmp	r8, r0
   17640:	bls	17654 <argp_error@@Base+0xfcc>
   17644:	sub	r2, r8, r0
   17648:	ldr	r3, [r7]
   1764c:	mov	r1, #1
   17650:	bl	111ac <fwrite_unlocked@plt>
   17654:	ldr	r0, [r7]
   17658:	ldr	r2, [r0, #24]
   1765c:	ldr	r3, [r0, #20]
   17660:	cmp	r3, r2
   17664:	addcc	r2, r3, #1
   17668:	strcc	r2, [r0, #20]
   1766c:	movcc	r2, #10
   17670:	strbcc	r2, [r3]
   17674:	bcs	1797c <argp_error@@Base+0x12f4>
   17678:	ldr	r6, [r7, #24]
   1767c:	ldr	r3, [sp]
   17680:	sub	r2, r5, r6
   17684:	sub	r3, r3, r6
   17688:	add	sl, sl, r3
   1768c:	mov	fp, r2
   17690:	mov	r4, r6
   17694:	ldr	r3, [r7, #12]
   17698:	cmp	r3, r2
   1769c:	bgt	17724 <argp_error@@Base+0x109c>
   176a0:	cmp	r3, #0
   176a4:	movgt	r2, r6
   176a8:	ble	176c4 <argp_error@@Base+0x103c>
   176ac:	strb	r9, [r2], #1
   176b0:	ldr	r3, [r7, #12]
   176b4:	sub	r1, r2, r6
   176b8:	cmp	r3, r1
   176bc:	bgt	176ac <argp_error@@Base+0x1024>
   176c0:	mov	r6, r2
   176c4:	cmp	r6, r5
   176c8:	bcc	178ac <argp_error@@Base+0x1224>
   176cc:	sub	fp, sl, fp
   176d0:	cmp	r3, #0
   176d4:	add	fp, r6, fp
   176d8:	mvneq	r3, #0
   176dc:	str	fp, [r7, #28]
   176e0:	str	r3, [r7, #20]
   176e4:	b	1745c <argp_error@@Base+0xdd4>
   176e8:	ldr	r3, [r7, #32]
   176ec:	ldr	r2, [sp, #4]
   176f0:	sub	r3, r3, r8
   176f4:	cmp	r3, r2
   176f8:	ble	17618 <argp_error@@Base+0xf90>
   176fc:	add	r3, r8, #1
   17700:	sub	r2, r5, r3
   17704:	sub	fp, r5, r6
   17708:	mov	r4, r6
   1770c:	mov	r6, r3
   17710:	mov	r3, #10
   17714:	strb	r3, [r8]
   17718:	ldr	r3, [r7, #12]
   1771c:	cmp	r3, r2
   17720:	ble	176a0 <argp_error@@Base+0x1018>
   17724:	add	r2, sl, #1
   17728:	add	r2, r4, r2
   1772c:	cmp	r5, r2
   17730:	beq	17928 <argp_error@@Base+0x12a0>
   17734:	cmp	r3, #0
   17738:	movgt	r8, #0
   1773c:	bgt	17754 <argp_error@@Base+0x10cc>
   17740:	b	176c4 <argp_error@@Base+0x103c>
   17744:	ldr	r3, [r7, #12]
   17748:	add	r8, r8, #1
   1774c:	cmp	r3, r8
   17750:	ble	176c4 <argp_error@@Base+0x103c>
   17754:	ldr	r0, [r7]
   17758:	ldr	r3, [r0, #20]
   1775c:	ldr	r2, [r0, #24]
   17760:	add	r1, r3, #1
   17764:	cmp	r3, r2
   17768:	strcc	r1, [r0, #20]
   1776c:	strbcc	r9, [r3]
   17770:	bcc	17744 <argp_error@@Base+0x10bc>
   17774:	mov	r1, r9
   17778:	bl	11350 <__overflow@plt>
   1777c:	b	17744 <argp_error@@Base+0x10bc>
   17780:	sub	sl, fp, r6
   17784:	mov	r2, sl
   17788:	mov	r1, #10
   1778c:	mov	r0, r6
   17790:	bl	11344 <memchr@plt>
   17794:	str	r6, [sp]
   17798:	mov	r4, r0
   1779c:	cmp	r4, #0
   177a0:	bne	17510 <argp_error@@Base+0xe88>
   177a4:	ldr	r5, [r7, #8]
   177a8:	add	r3, r8, sl
   177ac:	cmp	r3, r5
   177b0:	bcc	179a0 <argp_error@@Base+0x1318>
   177b4:	ldr	r2, [r7, #12]
   177b8:	sub	r5, r5, #1
   177bc:	cmp	r2, #0
   177c0:	str	r2, [sp, #4]
   177c4:	blt	1798c <argp_error@@Base+0x1304>
   177c8:	add	r5, r5, #1
   177cc:	sub	r8, r5, r8
   177d0:	adds	r8, r6, r8
   177d4:	mov	r4, fp
   177d8:	bcc	17574 <argp_error@@Base+0xeec>
   177dc:	mov	r5, r8
   177e0:	add	r5, r5, #1
   177e4:	cmp	r5, r6
   177e8:	bls	177f4 <argp_error@@Base+0x116c>
   177ec:	mov	r8, r5
   177f0:	b	175f4 <argp_error@@Base+0xf6c>
   177f4:	cmp	r8, r4
   177f8:	bcs	17830 <argp_error@@Base+0x11a8>
   177fc:	add	r5, r8, #1
   17800:	b	17824 <argp_error@@Base+0x119c>
   17804:	bl	112a8 <__ctype_b_loc@plt>
   17808:	ldrb	r3, [r5]
   1780c:	add	r5, r5, #1
   17810:	lsl	r3, r3, #1
   17814:	ldr	r2, [r0]
   17818:	ldrh	r3, [r2, r3]
   1781c:	tst	r3, #1
   17820:	bne	17840 <argp_error@@Base+0x11b8>
   17824:	cmp	r5, r4
   17828:	mov	r8, r5
   1782c:	bne	17804 <argp_error@@Base+0x117c>
   17830:	cmp	r8, r4
   17834:	beq	17914 <argp_error@@Base+0x128c>
   17838:	bl	112a8 <__ctype_b_loc@plt>
   1783c:	ldr	r2, [r0]
   17840:	mov	r5, r8
   17844:	ldrb	r3, [r5, #1]!
   17848:	lsl	r3, r3, #1
   1784c:	ldrh	r3, [r2, r3]
   17850:	tst	r3, #1
   17854:	bne	17844 <argp_error@@Base+0x11bc>
   17858:	b	175f4 <argp_error@@Base+0xf6c>
   1785c:	cmp	r4, fp
   17860:	str	r3, [sp]
   17864:	bcs	17988 <argp_error@@Base+0x1300>
   17868:	sub	r0, r5, r8
   1786c:	sub	r2, fp, r4
   17870:	add	r0, r6, r0
   17874:	mov	r1, r4
   17878:	bl	11158 <memmove@plt>
   1787c:	ldr	r2, [r7, #20]
   17880:	ldr	fp, [r7, #28]
   17884:	sub	r5, r5, r2
   17888:	add	r5, r6, r5
   1788c:	mov	r3, #0
   17890:	sub	r4, r5, r4
   17894:	str	r3, [r7, #20]
   17898:	ldr	r3, [sp]
   1789c:	sub	fp, fp, r4
   178a0:	add	r6, r6, r3
   178a4:	str	fp, [r7, #28]
   178a8:	b	1745c <argp_error@@Base+0xdd4>
   178ac:	add	r2, r4, sl
   178b0:	sub	r2, r2, r5
   178b4:	mov	r1, r5
   178b8:	mov	r0, r6
   178bc:	bl	11158 <memmove@plt>
   178c0:	ldr	r3, [r7, #12]
   178c4:	b	176cc <argp_error@@Base+0x1044>
   178c8:	add	r5, r6, r4
   178cc:	sub	r2, fp, r6
   178d0:	mov	r1, r6
   178d4:	mov	r0, r5
   178d8:	bl	11158 <memmove@plt>
   178dc:	ldr	r3, [r7, #28]
   178e0:	mov	r0, r6
   178e4:	add	r3, r3, r4
   178e8:	str	r3, [r7, #28]
   178ec:	mov	r2, r4
   178f0:	mov	r1, r9
   178f4:	bl	11314 <memset@plt>
   178f8:	mov	r6, r5
   178fc:	ldr	fp, [r7, #28]
   17900:	mov	r8, r4
   17904:	str	r4, [r7, #20]
   17908:	b	174dc <argp_error@@Base+0xe54>
   1790c:	add	r8, r2, #1
   17910:	b	175f4 <argp_error@@Base+0xf6c>
   17914:	mov	r3, #0
   17918:	str	r3, [r7, #20]
   1791c:	add	r6, r8, #1
   17920:	ldr	fp, [r7, #28]
   17924:	b	1745c <argp_error@@Base+0xdd4>
   17928:	ldr	r2, [r7, #32]
   1792c:	sub	r2, r2, r5
   17930:	cmp	r3, r2
   17934:	ble	176a0 <argp_error@@Base+0x1018>
   17938:	b	17734 <argp_error@@Base+0x10ac>
   1793c:	sub	fp, fp, r5
   17940:	mov	r2, fp
   17944:	mov	r1, r5
   17948:	add	r0, r8, r0
   1794c:	bl	11158 <memmove@plt>
   17950:	ldr	r2, [r7, #12]
   17954:	mov	r3, #10
   17958:	add	r5, r2, #1
   1795c:	add	r5, r8, r5
   17960:	add	fp, r5, fp
   17964:	sub	sl, fp, r6
   17968:	mov	r4, r6
   1796c:	sub	fp, r5, r6
   17970:	strb	r3, [r8]
   17974:	add	r6, r8, #1
   17978:	b	17694 <argp_error@@Base+0x100c>
   1797c:	mov	r1, #10
   17980:	bl	11350 <__overflow@plt>
   17984:	b	17678 <argp_error@@Base+0xff0>
   17988:	add	r3, r8, sl
   1798c:	sub	r5, r5, r3
   17990:	add	fp, fp, r5
   17994:	str	fp, [r7, #28]
   17998:	str	r3, [r7, #20]
   1799c:	b	1753c <argp_error@@Base+0xeb4>
   179a0:	str	r3, [r7, #20]
   179a4:	ldr	fp, [r7, #28]
   179a8:	b	1753c <argp_error@@Base+0xeb4>
   179ac:	push	{r4, lr}
   179b0:	mov	r4, r0
   179b4:	bl	1743c <argp_error@@Base+0xdb4>
   179b8:	ldr	r2, [r4, #28]
   179bc:	ldr	r0, [r4, #24]
   179c0:	cmp	r2, r0
   179c4:	bls	179dc <argp_error@@Base+0x1354>
   179c8:	sub	r2, r2, r0
   179cc:	ldr	r3, [r4]
   179d0:	mov	r1, #1
   179d4:	bl	111ac <fwrite_unlocked@plt>
   179d8:	ldr	r0, [r4, #24]
   179dc:	bl	12eb0 <argp_parse@@Base+0xe98>
   179e0:	mov	r0, r4
   179e4:	pop	{r4, lr}
   179e8:	b	12eb0 <argp_parse@@Base+0xe98>
   179ec:	push	{r4, r5, r6, lr}
   179f0:	mov	r4, r0
   179f4:	mov	r5, r1
   179f8:	bl	1743c <argp_error@@Base+0xdb4>
   179fc:	ldr	r3, [r4, #24]
   17a00:	ldr	r2, [r4, #28]
   17a04:	mov	r0, r3
   17a08:	sub	r2, r2, r3
   17a0c:	mov	r1, #1
   17a10:	ldr	r3, [r4]
   17a14:	bl	111ac <fwrite_unlocked@plt>
   17a18:	ldr	r2, [r4, #28]
   17a1c:	ldr	r3, [r4, #24]
   17a20:	sub	r1, r2, r3
   17a24:	cmp	r0, r1
   17a28:	bne	17a6c <argp_error@@Base+0x13e4>
   17a2c:	ldr	r1, [r4, #32]
   17a30:	mov	r2, #0
   17a34:	sub	r1, r1, r3
   17a38:	cmp	r1, r5
   17a3c:	str	r3, [r4, #28]
   17a40:	str	r2, [r4, #16]
   17a44:	movcs	r3, #1
   17a48:	bcs	17a64 <argp_error@@Base+0x13dc>
   17a4c:	adds	r5, r1, r5
   17a50:	bcc	17a9c <argp_error@@Base+0x1414>
   17a54:	bl	112f0 <__errno_location@plt>
   17a58:	mov	r3, #0
   17a5c:	mov	r2, #12
   17a60:	str	r2, [r0]
   17a64:	mov	r0, r3
   17a68:	pop	{r4, r5, r6, pc}
   17a6c:	ldr	r1, [r4, #16]
   17a70:	sub	r2, r2, r0
   17a74:	sub	r1, r1, r0
   17a78:	str	r2, [r4, #28]
   17a7c:	str	r1, [r4, #16]
   17a80:	sub	r2, r2, r3
   17a84:	add	r1, r3, r0
   17a88:	mov	r0, r3
   17a8c:	bl	11158 <memmove@plt>
   17a90:	mov	r3, #0
   17a94:	mov	r0, r3
   17a98:	pop	{r4, r5, r6, pc}
   17a9c:	mov	r0, r3
   17aa0:	mov	r1, r5
   17aa4:	bl	17b88 <argp_error@@Base+0x1500>
   17aa8:	cmp	r0, #0
   17aac:	beq	17a54 <argp_error@@Base+0x13cc>
   17ab0:	add	r1, r0, r5
   17ab4:	mov	r3, #1
   17ab8:	str	r0, [r4, #24]
   17abc:	str	r0, [r4, #28]
   17ac0:	str	r1, [r4, #32]
   17ac4:	mov	r0, r3
   17ac8:	pop	{r4, r5, r6, pc}
   17acc:	ldr	r3, [r0, #32]
   17ad0:	ldr	r2, [r0, #28]
   17ad4:	sub	r3, r3, r2
   17ad8:	cmp	r3, r1
   17adc:	bcc	17ae8 <argp_error@@Base+0x1460>
   17ae0:	mov	r0, #1
   17ae4:	bx	lr
   17ae8:	b	179ec <argp_error@@Base+0x1364>
   17aec:	push	{r1, r2, r3}
   17af0:	mov	r1, #150	; 0x96
   17af4:	push	{r4, r5, r6, r7, lr}
   17af8:	sub	sp, sp, #8
   17afc:	mov	r5, r0
   17b00:	ldr	r7, [sp, #28]
   17b04:	add	r6, sp, #32
   17b08:	ldr	r3, [r5, #32]
   17b0c:	ldr	r0, [r5, #28]
   17b10:	sub	r2, r3, r0
   17b14:	cmp	r1, r2
   17b18:	bhi	17b5c <argp_error@@Base+0x14d4>
   17b1c:	sub	r4, r3, r0
   17b20:	mov	r1, r4
   17b24:	mov	r3, r6
   17b28:	mov	r2, r7
   17b2c:	str	r6, [sp, #4]
   17b30:	bl	113d4 <vsnprintf@plt>
   17b34:	cmp	r4, r0
   17b38:	addls	r1, r0, #1
   17b3c:	bls	17b08 <argp_error@@Base+0x1480>
   17b40:	ldr	r3, [r5, #28]
   17b44:	add	r3, r3, r0
   17b48:	str	r3, [r5, #28]
   17b4c:	add	sp, sp, #8
   17b50:	pop	{r4, r5, r6, r7, lr}
   17b54:	add	sp, sp, #12
   17b58:	bx	lr
   17b5c:	mov	r0, r5
   17b60:	bl	179ec <argp_error@@Base+0x1364>
   17b64:	cmp	r0, #0
   17b68:	ldrne	r3, [r5, #32]
   17b6c:	ldrne	r0, [r5, #28]
   17b70:	bne	17b1c <argp_error@@Base+0x1494>
   17b74:	mvn	r0, #0
   17b78:	add	sp, sp, #8
   17b7c:	pop	{r4, r5, r6, r7, lr}
   17b80:	add	sp, sp, #12
   17b84:	bx	lr
   17b88:	cmp	r0, #0
   17b8c:	beq	17bb0 <argp_error@@Base+0x1528>
   17b90:	cmp	r1, #0
   17b94:	push	{lr}		; (str lr, [sp, #-4]!)
   17b98:	sub	sp, sp, #12
   17b9c:	beq	17bb8 <argp_error@@Base+0x1530>
   17ba0:	blt	17bd0 <argp_error@@Base+0x1548>
   17ba4:	add	sp, sp, #12
   17ba8:	pop	{lr}		; (ldr lr, [sp], #4)
   17bac:	b	111dc <realloc@plt>
   17bb0:	mov	r0, r1
   17bb4:	b	13460 <argp_parse@@Base+0x1448>
   17bb8:	str	r1, [sp, #4]
   17bbc:	bl	12eb0 <argp_parse@@Base+0xe98>
   17bc0:	ldr	r3, [sp, #4]
   17bc4:	mov	r0, r3
   17bc8:	add	sp, sp, #12
   17bcc:	pop	{pc}		; (ldr pc, [sp], #4)
   17bd0:	bl	112f0 <__errno_location@plt>
   17bd4:	mov	r2, #12
   17bd8:	mov	r3, #0
   17bdc:	str	r2, [r0]
   17be0:	b	17bc4 <argp_error@@Base+0x153c>
   17be4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17be8:	mov	r7, r0
   17bec:	ldr	r6, [pc, #72]	; 17c3c <argp_error@@Base+0x15b4>
   17bf0:	ldr	r5, [pc, #72]	; 17c40 <argp_error@@Base+0x15b8>
   17bf4:	add	r6, pc, r6
   17bf8:	add	r5, pc, r5
   17bfc:	sub	r6, r6, r5
   17c00:	mov	r8, r1
   17c04:	mov	r9, r2
   17c08:	bl	110e4 <fputs_unlocked@plt-0x20>
   17c0c:	asrs	r6, r6, #2
   17c10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c14:	mov	r4, #0
   17c18:	add	r4, r4, #1
   17c1c:	ldr	r3, [r5], #4
   17c20:	mov	r2, r9
   17c24:	mov	r1, r8
   17c28:	mov	r0, r7
   17c2c:	blx	r3
   17c30:	cmp	r6, r4
   17c34:	bne	17c18 <argp_error@@Base+0x1590>
   17c38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17c3c:	andeq	r1, r1, r4, lsl #6
   17c40:	strdeq	r1, [r1], -ip
   17c44:	bx	lr

Disassembly of section .fini:

00017c48 <.fini>:
   17c48:	push	{r3, lr}
   17c4c:	pop	{r3, pc}
